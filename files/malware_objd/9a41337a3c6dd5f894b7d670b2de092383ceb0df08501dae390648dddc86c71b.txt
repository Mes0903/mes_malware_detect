
9a41337a3c6dd5f894b7d670b2de092383ceb0df08501dae390648dddc86c71b.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	push   eax
  41107b:	loopne 0x411051
  41107d:	test   eax,0x5ad8b68c
  411082:	mov    bh,0x4
  411084:	cmp    BYTE PTR [edx],dl
  411086:	retf   
  411087:	enter  0x3f82,0x3d
  41108b:	arpl   WORD PTR [eax+0xd7478fe],si
  411091:	pop    edi
  411092:	ds or  dl,bh
  411095:	int3   
  411096:	in     eax,0x39
  411098:	xor    ah,bh
  41109a:	push   ss
  41109b:	mov    esp,ecx
  41109d:	mov    DWORD PTR [ebx+0x9],ecx
  4110a0:	fidiv  WORD PTR [esi-0x1f4c56b7]
  4110a6:	xor    eax,0x988481a0
  4110ab:	les    ecx,FWORD PTR [eax+edi*2-0x7c82800b]
  4110b2:	retf   0x640b
  4110b5:	adc    eax,0xf52e902a
  4110ba:	call   0x9a089db8
  4110bf:	bound  ebx,QWORD PTR [ebx]
  4110c1:	in     al,0x8e
  4110c3:	adc    esp,ecx
  4110c5:	rol    ah,cl
  4110c7:	cld    
  4110c8:	(bad)  
  4110c9:	repnz test al,0x34
  4110cc:	mov    ds:0x569dcd03,al
  4110d1:	lahf   
  4110d2:	leavew 
  4110d4:	stos   BYTE PTR es:[edi],al
  4110d5:	ja     0x4110dc
  4110d7:	test   ecx,ecx
  4110d9:	es push eax
  4110db:	push   edi
  4110dc:	jne    0x41108b
  4110de:	add    ah,BYTE PTR [eax+0x3d313706]
  4110e4:	xor    BYTE PTR [ebx-0x2b],cl
  4110e7:	enter  0xfbaa,0xd5
  4110eb:	data16 mov cl,0xc2
  4110ee:	sub    al,0x92
  4110f0:	fs xchg eax,esi
  4110f3:	push   ebp
  4110f4:	xchg   esp,eax
  4110f5:	push   esi
  4110f6:	add    esi,edi
  4110f8:	mov    al,ds:0xff68cf43
  4110fd:	sbb    al,0x53
  4110ff:	cld    
  411100:	out    dx,al
  411101:	dec    edx
  411102:	inc    edx
  411103:	jns    0x411184
  411105:	imul   DWORD PTR [edx]
  411107:	std    
  411108:	push   ebx
  411109:	(bad)
  41110c:	fcom   DWORD PTR [eax]
  41110e:	push   edx
  41110f:	sbb    al,0xbd
  411111:	fistp  WORD PTR [eax]
  411113:	mov    esp,0x151b6422
  411118:	and    dl,0xdd
  41111b:	test   eax,0x8ef43c71
  411120:	das    
  411121:	outs   dx,BYTE PTR ds:[esi]
  411122:	sbb    ah,BYTE PTR [edx+0x2f]
  411125:	(bad)
  411129:	enter  0xd470,0x21
  41112d:	cmp    BYTE PTR [edi+0x3d],ah
  411130:	test   BYTE PTR [ebx-0x18fd17cc],al
  411136:	adc    DWORD PTR [edi],ecx
  411138:	pop    DWORD PTR [esi+0x7b3ec41a]
  41113e:	jno    0x411149
  411140:	aaa    
  411141:	mov    esp,0x97398627
  411146:	aaa    
  411147:	int3   
  411148:	out    dx,al
  411149:	ret    
  41114a:	pop    ecx
  41114b:	ins    BYTE PTR es:[edi],dx
  41114c:	or     BYTE PTR [edx],bh
  41114e:	sbb    ebp,DWORD PTR [eax-0x37]
  411151:	jnp    0x411115
  411153:	adc    BYTE PTR [esi],dh
  411155:	mov    dl,0x8f
  411157:	xor    al,0x68
  411159:	dec    esp
  41115a:	ins    BYTE PTR es:[edi],dx
  41115b:	sub    eax,0x4d0f83da
  411160:	jle    0x411124
  411162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411163:	push   gs
  411165:	shl    ebx,0x48
  411168:	imul   ebx,DWORD PTR ds:0x3dfd1f0b,0xf713d57d
  411172:	jge    0x4111d6
  411174:	(bad)  
  411176:	jae    0x41114c
  411178:	scas   eax,DWORD PTR es:[edi]
  411179:	pop    esp
  41117a:	int    0xf4
  41117c:	push   esp
  41117d:	fdivr  DWORD PTR [edi-0x64]
  411180:	in     eax,0xeb
  411182:	xchg   esi,eax
  411183:	sub    al,0x21
  411185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411186:	mov    ebx,0xd0cb2bb
  41118b:	adc    BYTE PTR [eax-0x2e],0x2b
  41118f:	(bad)  
  411190:	(bad)  
  411191:	stc    
  411192:	xor    dh,cl
  411194:	xchg   edx,eax
  411195:	imul   eax,DWORD PTR [edi],0x1f5f07c
  41119b:	push   eax
  41119c:	mov    dl,0xf
  41119e:	les    edx,FWORD PTR [eax-0x4e]
  4111a1:	xor    DWORD PTR [eax+0x1acc64c5],esp
  4111a7:	(bad)  
  4111a8:	fidiv  DWORD PTR [esi+edx*2-0x42e4ca01]
  4111af:	ja     0x411141
  4111b1:	dec    eax
  4111b2:	outs   dx,DWORD PTR ds:[esi]
  4111b3:	jne    0x41118e
  4111b5:	jp     0x41115d
  4111b7:	in     eax,dx
  4111b8:	test   al,0xfa
  4111ba:	lea    edx,[edx]
  4111bc:	sbb    al,0xfc
  4111be:	sbb    eax,0xac76629
  4111c3:	and    eax,0x98557c21
  4111c8:	ret    
  4111c9:	sbb    eax,0x7a85031b
  4111ce:	clc    
  4111cf:	retf   
  4111d0:	xchg   ecx,eax
  4111d1:	shl    BYTE PTR [ecx+0x3b],1
  4111d4:	push   0x91d89287
  4111d9:	repnz stos DWORD PTR es:[edi],eax
  4111db:	mov    eax,0xddc33789
  4111e0:	fist   DWORD PTR [edi-0xb]
  4111e3:	leave  
  4111e4:	or     ch,BYTE PTR [eax+0x21]
  4111e7:	ins    BYTE PTR es:[edi],dx
  4111e8:	icebp  
  4111e9:	stc    
  4111ea:	pop    edi
  4111eb:	scas   eax,DWORD PTR es:[edi]
  4111ec:	mov    edi,0xb7b9b21b
  4111f1:	popf   
  4111f2:	xor    ebx,DWORD PTR [esi+esi*8-0x27d05498]
  4111f9:	mov    bh,0xf5
  4111fb:	hlt    
  4111fc:	adc    al,0x9f
  4111fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111ff:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  411201:	jo     0x4111af
  411203:	nop
  411204:	mov    al,ds:0x9bbba98b
  411209:	ret    0x4d5f
  41120c:	sbb    al,0x7f
  41120e:	inc    ebx
  41120f:	mov    ah,BYTE PTR [edi+eax*4+0x44]
  411213:	std    
  411214:	sbb    al,0xf2
  411216:	pop    es
  411217:	xchg   esp,eax
  411218:	lahf   
  411219:	dec    ecx
  41121a:	fst    DWORD PTR [ebx-0x3e]
  41121d:	mov    cl,0xc5
  41121f:	cmc    
  411220:	hlt    
  411221:	retf   
  411222:	pushw  0xfffd
  411225:	repz ss push ds
  411228:	push   esp
  411229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41122a:	sbb    DWORD PTR [ecx-0x10],esp
  41122d:	and    edi,esi
  41122f:	mov    ebx,0x12adf9e3
  411234:	dec    edx
  411235:	pop    ds
  411236:	js     0x4111d2
  411238:	dec    edx
  411239:	mov    ds:0xdf1b3d26,al
  41123e:	fidiv  WORD PTR [eax]
  411240:	(bad)  
  411241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411242:	in     al,dx
  411243:	clc    
  411244:	dec    edi
  411245:	sbb    bl,dh
  411247:	not    ch
  411249:	ja     0x411251
  41124b:	(bad)  
  41124c:	cwde   
  41124d:	loop   0x411252
  41124f:	mov    esp,0x768e2a42
  411254:	test   bl,al
  411256:	and    BYTE PTR [edi],bl
  411258:	xor    al,0xc4
  41125a:	dec    edi
  41125b:	xor    BYTE PTR [esi+0x79],bl
  41125e:	pop    esi
  41125f:	pop    edx
  411260:	daa    
  411261:	pusha  
  411262:	das    
  411263:	or     dl,BYTE PTR [ecx+0x27ac69df]
  411269:	push   cs
  41126a:	imul   eax,DWORD PTR [edi-0x285fe1ef],0x1bbb0351
  411274:	out    0xc2,al
  411276:	icebp  
  411277:	cmp    dh,BYTE PTR ds:0xa2aedfb6
  41127d:	push   es
  41127e:	cmp    ecx,DWORD PTR [ebp+0x12]
  411281:	lods   eax,DWORD PTR ds:[esi]
  411282:	(bad)  
  411283:	int3   
  411284:	lock or eax,0x52e1dbed
  41128a:	sbb    ebx,DWORD PTR [edx+0x7e]
  41128d:	sbb    DWORD PTR [edx],edi
  41128f:	inc    edx
  411290:	and    al,bl
  411292:	push   ds
  411293:	(bad)  
  411294:	mov    dl,BYTE PTR [edi-0x41]
  411297:	lahf   
  411298:	out    dx,al
  411299:	jb     0x4112f0
  41129b:	mov    eax,fs
  41129d:	add    eax,eax
  41129f:	out    0xaa,al
  4112a1:	jne    0x41128c
  4112a3:	hlt    
  4112a4:	daa    
  4112a5:	xchg   bl,dl
  4112a7:	xor    ah,BYTE PTR [edi]
  4112a9:	out    dx,al
  4112aa:	dec    edx
  4112ab:	mov    bh,0x87
  4112ad:	and    esp,DWORD PTR [ebx]
  4112af:	cmp    DWORD PTR [edi+edi*4-0x38],ebp
  4112b3:	nop
  4112b4:	sbb    eax,0x43a4c3f1
  4112b9:	or     eax,0x2f59e800
  4112be:	pop    edx
  4112bf:	push   eax
  4112c0:	pushf  
  4112c1:	repnz test BYTE PTR [ecx+0xf968b2],0xcf
  4112c9:	mov    BYTE PTR [eax-0x1693c726],0x7b
  4112d0:	cmp    DWORD PTR [ebx-0x1fbe5326],edx
  4112d6:	cmp    ebp,DWORD PTR [eax+eax*1+0x3a6809bd]
  4112dd:	inc    ebx
  4112de:	outs   dx,DWORD PTR ds:[esi]
  4112df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112e0:	bswap  eax
  4112e2:	xchg   ebp,eax
  4112e3:	jns    0x41134f
  4112e5:	dec    ebx
  4112e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112e7:	aam    0xa0
  4112e9:	aam    0x9b
  4112eb:	div    DWORD PTR [esi-0x50]
  4112ee:	add    al,0xa2
  4112f0:	std    
  4112f1:	rol    BYTE PTR [eax],1
  4112f3:	outs   dx,BYTE PTR ds:[esi]
  4112f4:	stc    
  4112f5:	dec    ebx
  4112f6:	je     0x411339
  4112f8:	adc    eax,0x382d97ca
  4112fd:	lds    ebx,FWORD PTR [eax+ecx*4-0x6909c415]
  411304:	sub    eax,0xafed9f7c
  411309:	pop    eax
  41130a:	dec    ecx
  41130b:	pushf  
  41130c:	xchg   ebp,eax
  41130d:	xor    ecx,DWORD PTR [edi-0x5f66936a]
  411313:	inc    ecx
  411314:	rcl    BYTE PTR [esi-0x36],0x5c
  411318:	push   es
  411319:	clc    
  41131a:	pushf  
  41131b:	ja     0x411383
  41131d:	xchg   ebx,eax
  41131e:	jle    0x4112e6
  411320:	inc    eax
  411321:	scas   eax,DWORD PTR es:[edi]
  411322:	sbb    dh,BYTE PTR [eax-0x62456ae7]
  411328:	mov    bh,0x5c
  41132a:	out    0x19,al
  41132c:	jns    0x4112fe
  41132e:	inc    edi
  41132f:	call   0x8d8f8221
  411334:	cwde   
  411335:	cli    
  411336:	mov    sp,0x6575
  41133a:	stos   BYTE PTR es:[edi],al
  41133b:	ds ret 0xa0c9
  41133f:	lahf   
  411340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411341:	xchg   esp,eax
  411342:	fadd   st,st(1)
  411344:	adc    dl,ch
  411346:	retf   0xa7cf
  411349:	nop
  41134a:	sbb    ah,BYTE PTR [edx-0x3c]
  41134d:	jns    0x41138f
  41134f:	xor    edi,DWORD PTR [ebp-0x6c]
  411352:	xchg   esi,eax
  411353:	fisub  DWORD PTR [edi+ebp*1+0x100d0d5b]
  41135a:	lea    ebx,[eax+0x11]
  41135d:	inc    edi
  41135e:	fimul  DWORD PTR [edi+0x5]
  411361:	fiadd  WORD PTR [ebx-0x42]
  411364:	and    edi,DWORD PTR [ebp+ecx*2-0x8072265]
  41136b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41136c:	xchg   esp,eax
  41136d:	test   al,0xbf
  41136f:	add    BYTE PTR [edi-0x47],dh
  411372:	push   esi
  411373:	push   ebx
  411374:	in     al,dx
  411375:	es test eax,0x47b6512c
  41137b:	out    dx,eax
  41137c:	mov    cs,eax
  41137e:	push   edx
  41137f:	inc    ecx
  411380:	fstp   DWORD PTR [edi-0x2505b64f]
  411386:	xor    DWORD PTR [edi+0x289975e6],ecx
  41138c:	mov    ecx,0xa9bbb542
  411391:	icebp  
  411392:	pop    edi
  411393:	stos   BYTE PTR es:[edi],al
  411394:	leave  
  411395:	cmp    al,0xfa
  411397:	popa   
  411398:	jmp    0x1f0e9641
  41139d:	sub    eax,0xb875a060
  4113a2:	adc    eax,0xc3be6559
  4113a7:	test   DWORD PTR [edx-0x56dfb92],esi
  4113ad:	and    ebp,0x4867165e
  4113b3:	sbb    dh,BYTE PTR [edi]
  4113b5:	adc    ecx,DWORD PTR [edi-0x7680f3ce]
  4113bb:	and    eax,0xaf962e0f
  4113c0:	test   DWORD PTR ds:0xe1248d4d,esi
  4113c6:	test   DWORD PTR ds:0x68c85c4d,ebx
  4113cc:	mov    eax,ds:0x42078514
  4113d1:	test   al,0xc
  4113d3:	push   ebx
  4113d4:	stos   BYTE PTR es:[edi],al
  4113d5:	lea    eax,[edi+0xdd72795]
  4113db:	xchg   ebp,eax
  4113dc:	dec    ebp
  4113dd:	pusha  
  4113de:	cs mov dl,0x5
  4113e1:	adc    BYTE PTR es:[edi+0x7796aac2],dh
  4113e8:	ret    0x6555
  4113eb:	scas   eax,DWORD PTR es:[edi]
  4113ec:	movd   mm3,DWORD PTR [edx+ebp*1]
  4113f0:	dec    edx
  4113f1:	pusha  
  4113f2:	call   0xf21f9df8
  4113f7:	xchg   esp,eax
  4113f8:	gs jmp 0x411420
  4113fb:	cmp    ecx,esp
  4113fd:	pop    ebx
  4113fe:	and    DWORD PTR [edi-0x36],esp
  411401:	mov    bh,0xba
  411403:	aad    0x41
  411405:	clc    
  411406:	fldl2e 
  411408:	in     eax,dx
  411409:	mov    al,0xff
  41140b:	(bad)  [edx+ebx*2-0x57]
  41140f:	ror    BYTE PTR [edi+0x42355827],cl
  411415:	dec    esi
  411416:	mov    ecx,edi
  411418:	aas    
  411419:	dec    esi
  41141a:	call   0xe353:0xa0554490
  411421:	mov    ebx,0x64446623
  411426:	adc    al,0xbf
  411428:	hlt    
  411429:	ins    BYTE PTR es:[edi],dx
  41142a:	mov    edx,0x35bb7451
  41142f:	nop
  411430:	adc    BYTE PTR ds:0xcf23b4e2,0x9b
  411437:	jno    0x411456
  411439:	pop    ebp
  41143a:	(bad)  
  41143b:	fsubr  st,st(5)
  41143d:	push   cs
  41143e:	xlat   BYTE PTR ds:[ebx]
  41143f:	(bad)  
  411441:	xchg   BYTE PTR [edx-0x3342e38d],ah
  411447:	ds or  edi,eax
  41144a:	xor    BYTE PTR [edi],bh
  41144c:	inc    ebx
  41144d:	repz in eax,dx
  41144f:	sbb    al,0xb1
  411451:	out    dx,eax
  411452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411453:	jle    0x4114be
  411455:	inc    eax
  411456:	jnp    0x41141b
  411458:	das    
  411459:	outs   dx,BYTE PTR ds:[esi]
  41145a:	(bad)  
  41145b:	adc    eax,DWORD PTR [ecx+ebp*2]
  41145e:	int    0xce
  411460:	xchg   DWORD PTR [edx-0x4dbb8aa0],ecx
  411466:	or     al,0x51
  411468:	in     eax,0xc7
  41146a:	push   esi
  41146b:	rcr    DWORD PTR [eax+edx*2-0x62],0x4b
  411470:	pop    edx
  411471:	sahf   
  411472:	iret   
  411473:	outs   dx,BYTE PTR ds:[esi]
  411474:	mov    eax,0x494519fd
  411479:	pop    es
  41147a:	mov    edx,esp
  41147c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41147d:	call   0xe33f:0x602861ff
  411484:	fdivp  st(2),st
  411486:	jg     0x4114a8
  411488:	sub    al,BYTE PTR [edx+0x12]
  41148b:	repz adc DWORD PTR [ebx-0x49],edx
  41148f:	popa   
  411490:	cmp    ecx,DWORD PTR [ecx+0x6bcf6bc4]
  411496:	dec    edx
  411497:	(bad)  
  411498:	add    eax,DWORD PTR [eax]
  41149a:	les    ecx,FWORD PTR [ebp+0x73cb5743]
  4114a0:	xchg   esi,eax
  4114a1:	leave  
  4114a2:	push   edx
  4114a3:	cli    
  4114a4:	int3   
  4114a5:	repnz sub al,0x4f
  4114a8:	cwde   
  4114a9:	fild   QWORD PTR [esi+esi*1]
  4114ac:	mov    esi,0x46d94c9
  4114b1:	pop    esi
  4114b2:	pop    esp
  4114b3:	popa   
  4114b4:	sub    eax,0x4084c2da
  4114b9:	inc    ecx
  4114ba:	imul   edi,eax,0x4f
  4114bd:	shr    BYTE PTR [eax],1
  4114bf:	mov    al,ds:0xb84bd3aa
  4114c4:	in     eax,dx
  4114c5:	in     al,0xa1
  4114c7:	and    DWORD PTR [esp+ecx*8],0x79
  4114cb:	xor    cl,BYTE PTR es:[ebp-0x35c8b582]
  4114d2:	mov    ah,0xcb
  4114d4:	pop    eax
  4114d5:	dec    edx
  4114d6:	ret    
  4114d7:	pop    edx
  4114d8:	sub    ecx,esp
  4114da:	fwait
  4114db:	xor    edx,DWORD PTR ds:0x96154533
  4114e1:	dec    edx
  4114e2:	dec    ebx
  4114e3:	inc    edi
  4114e4:	fist   WORD PTR [ecx+0x4e0111c5]
  4114ea:	dec    ebp
  4114eb:	cmp    edi,ecx
  4114ed:	icebp  
  4114ee:	bound  esp,QWORD PTR [ebx-0x7e3a5b0e]
  4114f4:	add    DWORD PTR [edi*1-0x514d3013],ecx
  4114fb:	mov    ah,0x8e
  4114fd:	cld    
  4114fe:	dec    ecx
  4114ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411500:	mov    edx,DWORD PTR [edi+0xe7294fa]
  411506:	jmp    0xeda4:0x7b3fdc3
  41150d:	in     eax,dx
  41150e:	mov    eax,ds:0xa5e10c97
  411513:	fbstp  TBYTE PTR [eax-0x5f9d683d]
  411519:	cmc    
  41151a:	mov    ebp,0xbadabc3
  41151f:	(bad)
  411523:	sub    bl,BYTE PTR [edi+0x71]
  411526:	js     0x4114be
  411528:	xchg   BYTE PTR [ecx],dl
  41152a:	scas   al,BYTE PTR es:[edi]
  41152b:	inc    esi
  41152c:	js     0x41153e
  41152e:	push   edi
  41152f:	inc    ebx
  411530:	jno    0x411544
  411532:	mov    eax,0x22393c1e
  411537:	outs   dx,BYTE PTR ds:[esi]
  411538:	ins    DWORD PTR es:[edi],dx
  411539:	loopne 0x4114fb
  41153b:	and    BYTE PTR [edx],0xd
  41153e:	push   ebp
  41153f:	jmp    0xf7f04fbf
  411544:	aad    0x3
  411546:	shr    BYTE PTR ds:0xdf7d17a2,0xe
  41154d:	gs fdivrp st(6),st
  411550:	xchg   BYTE PTR [edx],ch
  411552:	hlt    
  411553:	pop    ebx
  411554:	cmp    ch,BYTE PTR [edx+edi*4+0x5e]
  411558:	mov    ebx,0xca0d23be
  41155d:	jbe    0x4114fd
  41155f:	pop    es
  411560:	pop    eax
  411561:	ror    DWORD PTR [ebx],cl
  411563:	xor    ebx,DWORD PTR [ecx+eax*1]
  411566:	fsub   DWORD PTR [edi+0x39a835f1]
  41156c:	pop    ds
  41156d:	bound  edi,QWORD PTR [ebx-0x5c]
  411570:	mov    al,0x97
  411572:	dec    esp
  411573:	mov    DWORD PTR [edx-0x1c],esp
  411576:	and    BYTE PTR [esp+esi*1+0x3b],bl
  41157a:	cld    
  41157b:	nop
  41157c:	sub    al,0x64
  41157e:	in     eax,dx
  41157f:	inc    ebx
  411581:	cmp    edx,DWORD PTR [esi-0x51]
  411584:	fdivr  QWORD PTR ds:0x4527df56
  41158a:	scas   eax,DWORD PTR es:[edi]
  41158b:	sbb    eax,0x9a093912
  411590:	ins    BYTE PTR es:[edi],dx
  411591:	mov    eax,ds:0x6840053b
  411596:	pop    edx
  411597:	fdivr  st(3),st
  411599:	push   ecx
  41159a:	jp     0x4115c2
  41159c:	cmp    DWORD PTR [ecx],ebp
  41159e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41159f:	imul   esp,DWORD PTR [ebx+0x2a6aaca3],0x23
  4115a6:	adc    dl,BYTE PTR [edx+0x2b749fbe]
  4115ac:	pop    DWORD PTR [edi+0x4532a5cf]
  4115b2:	xlat   BYTE PTR ds:[ebx]
  4115b3:	fstp   DWORD PTR [edi-0x18]
  4115b6:	(bad)  
  4115b7:	cmp    al,0x22
  4115b9:	sub    al,0x35
  4115bb:	push   0x24e85f19
  4115c0:	jno    0x41162b
  4115c2:	xor    edi,DWORD PTR [esi-0x3a181535]
  4115c8:	(bad)  
  4115c9:	mov    WORD PTR [edi],es
  4115cb:	or     BYTE PTR [ecx],dh
  4115cd:	cli    
  4115ce:	pop    ss
  4115cf:	(bad)  
  4115d0:	hlt    
  4115d1:	or     BYTE PTR [eax+0x49b2239a],bl
  4115d7:	cmp    bl,BYTE PTR [eax]
  4115d9:	xchg   edi,eax
  4115da:	push   ebx
  4115db:	pop    ss
  4115dc:	add    eax,0xff4cb087
  4115e1:	cld    
  4115e2:	inc    ebx
  4115e3:	sub    dh,dh
  4115e5:	mov    dh,0x1b
  4115e7:	ja     0x4115b3
  4115e9:	add    dl,BYTE PTR [ecx-0x26dc648e]
  4115ef:	mov    fs,WORD PTR ds:0x65e9acc7
  4115f5:	mov    eax,ds:0x28a01eb9
  4115fa:	mov    ecx,0xa5579a84
  4115ff:	or     edx,ecx
  411601:	push   ebx
  411602:	popf   
  411603:	frstor [edi]
  411605:	mov    bh,0x57
  411607:	dec    ecx
  411608:	or     edi,DWORD PTR [edi]
  41160a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41160b:	inc    edi
  41160c:	dec    edx
  41160d:	fcmovne st,st(6)
  41160f:	push   esp
  411610:	loop   0x41164b
  411612:	popa   
  411613:	inc    edx
  411614:	xchg   ecx,eax
  411615:	test   DWORD PTR [ebp+0x60082599],ebp
  41161b:	add    al,0x23
  41161d:	shl    BYTE PTR [ecx+ebp*4+0x76b2305c],cl
  411624:	data16 sahf 
  411626:	lea    esp,[ebx]
  411628:	fbstp  TBYTE PTR [ebp+0x31]
  41162b:	mov    esp,0x5f5ae0c5
  411630:	dec    edi
  411631:	pop    edi
  411632:	mov    ch,0x10
  411634:	inc    ebx
  411635:	je     0x41168f
  411637:	lahf   
  411638:	add    eax,0xe3cbff08
  41163d:	cmc    
  41163e:	xor    BYTE PTR ds:0x9380d753,0x23
  411645:	inc    ecx
  411646:	pop    ss
  411647:	fmul   QWORD PTR [edi]
  411649:	pushf  
  41164a:	outs   dx,DWORD PTR ds:[esi]
  41164b:	ret    0x9282
  41164e:	and    eax,0xeb52dadb
  411653:	mov    DWORD PTR [ebp-0x76a01b38],edx
  411659:	fwait
  41165a:	xor    DWORD PTR [edx],ecx
  41165c:	sbb    DWORD PTR [ebp+0x464f3b77],ebx
  411662:	push   esi
  411663:	and    BYTE PTR [edx+0x60ce98db],0xfb
  41166a:	scas   al,BYTE PTR es:[edi]
  41166b:	mov    ebp,cr4
  41166e:	test   eax,esp
  411670:	je     0x4116d9
  411672:	aam    0x1
  411674:	ss sub eax,0x53f8f535
  41167a:	add    DWORD PTR [ebx],ebp
  41167c:	lea    esi,[ebp+0x15]
  41167f:	mov    cl,0x81
  411681:	sub    ebp,DWORD PTR [ebx]
  411683:	pop    edx
  411684:	out    0x42,al
  411686:	cmp    DWORD PTR [eax+0x62],ecx
  411689:	sub    ebp,0xb41c99e6
  41168f:	sub    al,0xb6
  411691:	pop    edx
  411692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411693:	sbb    DWORD PTR [esi+0x49e1a4c9],esp
  411699:	dec    edx
  41169a:	push   0xffffffbf
  41169c:	inc    ebp
  41169d:	add    BYTE PTR [edi-0x7a],ch
  4116a0:	stc    
  4116a1:	jp     0x411638
  4116a3:	loopne 0x41164d
  4116a5:	clc    
  4116a6:	stos   DWORD PTR es:[edi],eax
  4116a7:	aaa    
  4116a8:	jnp    0x411670
  4116aa:	ret    
  4116ab:	and    ah,ah
  4116ad:	cdq    
  4116ae:	sbb    al,0x84
  4116b0:	push   eax
  4116b1:	popf   
  4116b2:	add    ecx,0xffffffe5
  4116b5:	or     DWORD PTR [edi+0x16],edx
  4116b8:	ss fs mov ebp,0x848e625e
  4116bf:	cmp    bh,BYTE PTR [edx]
  4116c1:	xchg   esi,eax
  4116c2:	dec    esi
  4116c3:	xor    ah,ah
  4116c5:	cdq    
  4116c6:	mov    esp,0xd0a0f9ab
  4116cb:	pop    ebx
  4116cc:	jge    0x411691
  4116ce:	xchg   ecx,eax
  4116cf:	xchg   ecx,eax
  4116d0:	cmp    ebx,DWORD PTR [eax]
  4116d2:	out    0xa8,al
  4116d4:	loopne 0x4116e2
  4116d6:	jae    0x4116fb
  4116d8:	add    eax,ebp
  4116da:	icebp  
  4116db:	and    al,0xe0
  4116dd:	cwde   
  4116de:	add    cl,BYTE PTR [ebp+0x6d739f96]
  4116e4:	das    
  4116e5:	and    ebp,DWORD PTR [edx-0x5ede604]
  4116eb:	in     al,dx
  4116ec:	push   ebx
  4116ed:	inc    ebp
  4116ef:	mov    eax,0x48d4e272
  4116f4:	stos   DWORD PTR es:[edi],eax
  4116f5:	inc    BYTE PTR [ecx+0x2b]
  4116f8:	xchg   eax,ebp
  4116fa:	cld    
  4116fb:	pushf  
  4116fc:	scas   eax,DWORD PTR es:[edi]
  4116fd:	mov    eax,ds:0x68d3a014
  411702:	stos   DWORD PTR es:[edi],eax
  411703:	imul   edx,DWORD PTR [eax+0x5dee2d5b],0xb3721c78
  41170d:	add    esi,esp
  41170f:	out    dx,al
  411710:	in     eax,dx
  411711:	mov    ds:0xacca07ba,eax
  411716:	jbe    0x4116ff
  411718:	mov    eax,0x37840e5d
  41171d:	adc    BYTE PTR [esi],bh
  41171f:	cmp    BYTE PTR [ebx-0x4a1dbe00],0xca
  411726:	mov    ah,0x34
  411728:	in     al,0x3d
  41172a:	jno    0x411794
  41172c:	mov    ds:0xc3864980,eax
  411731:	pop    es
  411732:	add    ch,BYTE PTR [edx]
  411734:	mov    cl,dl
  411736:	retf   0xf80e
  411739:	int3   
  41173a:	cs xabort 0x14
  41173e:	cwde   
  41173f:	clc    
  411740:	adc    eax,0xf2ff13b1
  411745:	jmp    0x41151a48
  41174a:	pop    eax
  41174b:	jo     0x4116de
  41174d:	jl     0x41171c
  41174f:	mov    eax,ds:0x337c666c
  411754:	jmp    0xd574:0x813564b2
  41175b:	xor    bl,BYTE PTR [eax+0x3]
  41175e:	adc    DWORD PTR [ebx+0x3686b78a],0xa773b64d
  411768:	pop    ecx
  411769:	ins    BYTE PTR es:[edi],dx
  41176a:	ins    BYTE PTR es:[edi],dx
  41176b:	lahf   
  41176c:	(bad)  
  41176d:	or     bh,BYTE PTR [eax]
  41176f:	imul   ebx,DWORD PTR [esi+0x2b],0xa00c815f
  411776:	cmp    bl,BYTE PTR [eax-0x1b]
  411779:	cdq    
  41177a:	dec    esp
  41177b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41177c:	out    dx,al
  41177d:	loopne 0x4117de
  41177f:	pusha  
  411780:	retf   0x3ffb
  411783:	and    eax,0x4849e1fc
  411788:	add    bh,BYTE PTR [ebx]
  41178a:	fisub  WORD PTR [edx-0x7a187eb3]
  411790:	aas    
  411791:	mov    ch,0x37
  411793:	and    DWORD PTR [edi-0x3e],edi
  411796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411797:	popf   
  411798:	adc    BYTE PTR [edx+0x7ea5dbb],ch
  41179e:	sub    bl,ch
  4117a0:	sub    ecx,DWORD PTR [ecx+edi*2]
  4117a3:	mov    cl,0xc8
  4117a5:	(bad)  
  4117a6:	xor    BYTE PTR [edx+0x746d04b],bh
  4117ac:	shl    DWORD PTR [edi+edi*8+0x2a6a632],0x52
  4117b4:	add    BYTE PTR [eax-0x3],dl
  4117b7:	je     0x4117aa
  4117b9:	cmp    ebx,0xcad05123
  4117bf:	retf   0xa850
  4117c2:	jmp    0x4117de
  4117c4:	mov    edx,0xa9b3eb45
  4117c9:	push   0x55
  4117cb:	jp     0x411787
  4117cd:	(bad)  
  4117ce:	sub    al,0xc6
  4117d0:	xor    eax,0x9f938e85
  4117d5:	adc    eax,0x3b48d4be
  4117da:	mov    DWORD PTR [eax+0x44],eax
  4117dd:	cli    
  4117de:	cwde   
  4117df:	dec    eax
  4117e0:	or     DWORD PTR [ebx-0x13],esi
  4117e3:	gs fwait
  4117e5:	lock dec edx
  4117e7:	fstp   TBYTE PTR [eax-0x78ed399f]
  4117ed:	mov    ebx,0x2a33ec7d
  4117f2:	fcmovu st,st(4)
  4117f4:	mov    edi,0xc3bc82b9
  4117f9:	test   eax,0x67302ddd
  4117fe:	inc    esi
  4117ff:	pop    edi
  411800:	shld   DWORD PTR [edi],edi,cl
  411803:	aam    0xbe
  411805:	lahf   
  411806:	cld    
  411807:	cmp    ebp,DWORD PTR [eax+0xf]
  41180a:	js     0x411850
  41180c:	in     eax,dx
  41180d:	(bad)  
  41180f:	xchg   ebp,eax
  411810:	xchg   ebx,eax
  411811:	es jo  0x411803
  411814:	jecxz  0x411839
  411816:	mov    bl,0x32
  411818:	dec    ebx
  411819:	stos   DWORD PTR es:[edi],eax
  41181a:	je     0x411841
  41181c:	and    BYTE PTR [esi-0x33],0x86
  411820:	add    BYTE PTR [eax+edx*8-0x7d],bl
  411824:	sbb    BYTE PTR ds:0x939b7bdc,ch
  41182a:	push   cs
  41182b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41182c:	fadd   st(3),st
  41182e:	dec    esp
  41182f:	shl    BYTE PTR [edx],cl
  411831:	adc    esi,DWORD PTR [edi]
  411833:	adc    ch,BYTE PTR [edx]
  411835:	les    esi,FWORD PTR [edx-0x5d]
  411838:	(bad)  
  411839:	mov    al,ds:0x24f85cae
  41183e:	aam    0x46
  411840:	nop
  411841:	push   edx
  411842:	pop    esp
  411843:	fdivr  st(3),st
  411845:	xor    DWORD PTR [eax-0x51],edi
  411848:	cmc    
  411849:	repnz push 0xffffffd0
  41184c:	or     al,0x76
  41184e:	mov    ds:0xcc0da70c,al
  411853:	test   al,0x3a
  411855:	and    al,0xcc
  411857:	stos   BYTE PTR es:[edi],al
  411858:	pop    ecx
  411859:	sbb    BYTE PTR [ebp-0x60],cl
  41185c:	or     eax,0x912abfce
  411861:	icebp  
  411862:	lahf   
  411863:	mov    bh,0x9c
  411865:	xor    DWORD PTR [ebp+0x5c],edx
  411868:	and    al,BYTE PTR [esi-0x43]
  41186b:	and    al,0x63
  41186d:	aas    
  41186e:	xor    al,0x8
  411870:	ret    0x48db
  411873:	inc    ecx
  411874:	pop    ebx
  411875:	sub    dh,BYTE PTR [ecx]
  411877:	loopne 0x4118bc
  411879:	or     dh,dl
  41187b:	or     eax,0xabe9ea12
  411880:	pop    eax
  411881:	mov    edx,0xc9fbcd50
  411886:	mov    dl,BYTE PTR [ebx+0x1e]
  411889:	adc    al,0x88
  41188b:	icebp  
  41188c:	inc    ebp
  41188d:	test   eax,0x93c57f7a
  411892:	pop    ds
  411893:	sub    dh,BYTE PTR [edi+edi*2+0x51]
  411897:	ins    BYTE PTR es:[edi],dx
  411898:	inc    esp
  411899:	and    ebx,DWORD PTR [ecx]
  41189b:	out    dx,al
  41189c:	lods   al,BYTE PTR ds:[esi]
  41189d:	push   ebp
  41189e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41189f:	bound  ebx,QWORD PTR [esi+0x216557eb]
  4118a5:	(bad)  
  4118a6:	jae    0x4118eb
  4118a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118a9:	lods   eax,DWORD PTR ds:[esi]
  4118aa:	adc    BYTE PTR [edx-0x53],bl
  4118ad:	popa   
  4118ae:	or     eax,0xa1579b17
  4118b3:	xor    DWORD PTR [edi+edi*2+0x37],esp
  4118b7:	lea    ebx,[esi+0x2a]
  4118ba:	mov    edx,0xf5e5140a
  4118bf:	lods   eax,DWORD PTR ds:[esi]
  4118c0:	dec    esp
  4118c1:	push   ebx
  4118c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118c3:	test   esi,edi
  4118c5:	push   ds
  4118c6:	pop    es
  4118c7:	and    eax,0x83cbcd86
  4118cc:	mov    dl,0xd
  4118ce:	(bad)  
  4118cf:	aad    0x7d
  4118d1:	int    0x4
  4118d3:	clc    
  4118d4:	mov    ds:0xfe4c8eb8,eax
  4118d9:	mov    ebx,0xc0ce2e54
  4118de:	sbb    DWORD PTR [ebp+0x15],esp
  4118e1:	(bad)  
  4118e2:	lock fmul QWORD PTR [edi-0x17]
  4118e6:	dec    ecx
  4118e7:	das    
  4118e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118e9:	test   eax,0x345e94a3
  4118ee:	icebp  
  4118ef:	mov    ds:0x7104d00e,al
  4118f4:	sbb    BYTE PTR [edx+0x57],0x37
  4118f8:	push   es
  4118f9:	in     eax,0x7c
  4118fb:	mov    dh,0x5d
  4118fd:	(bad)  
  4118ff:	(bad)  
  411900:	mov    edi,0x28fd0e5a
  411905:	inc    ebp
  411906:	stos   DWORD PTR es:[edi],eax
  411907:	lods   al,BYTE PTR ds:[esi]
  411908:	inc    ebx
  411909:	into   
  41190a:	fnstenv ds:0xb9013cbd
  411910:	dec    esi
  411911:	dec    edi
  411912:	lods   al,BYTE PTR ds:[esi]
  411913:	jne    0x4118bc
  411915:	jle    0x41195d
  411917:	push   edx
  411918:	fxtract 
  41191a:	dec    esi
  41191b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41191c:	cmp    BYTE PTR [ecx],ch
  41191e:	pop    es
  41191f:	pop    eax
  411920:	or     edx,DWORD PTR cs:[edx]
  411923:	(bad)  
  411924:	mov    bl,cl
  411926:	xor    ebp,eax
  411928:	ja     0x4118ec
  41192a:	adc    DWORD PTR es:[edi],esi
  41192d:	and    al,BYTE PTR [esi]
  41192f:	or     eax,0xe731ce03
  411934:	mov    ah,0xfe
  411936:	js     0x41196e
  411938:	push   cs
  411939:	les    ebp,FWORD PTR [ebp+0x13]
  41193c:	int3   
  41193d:	loope  0x41190c
  41193f:	xlat   BYTE PTR ds:[ebx]
  411940:	out    0xed,eax
  411942:	cmp    al,bl
  411944:	test   esi,esi
  411946:	cmp    bl,ch
  411948:	inc    eax
  411949:	and    BYTE PTR [ebx],al
  41194b:	cs nop
  41194d:	loopne 0x411947
  41194f:	aas    
  411950:	xchg   edi,eax
  411951:	push   esp
  411952:	(bad)  
  411953:	in     al,0x26
  411955:	sub    edx,DWORD PTR [ebx-0x3cba8431]
  41195b:	push   esp
  41195c:	xchg   edx,eax
  41195d:	stos   BYTE PTR es:[edi],al
  41195e:	or     ebx,edx
  411960:	ja     0x41196a
  411962:	xchg   ebx,eax
  411963:	in     eax,0x4d
  411965:	into   
  411966:	dec    ecx
  411967:	sti    
  411968:	xor    bh,BYTE PTR [ebx-0x23602983]
  41196e:	(bad)  
  41196f:	dec    esi
  411970:	cmp    al,0x6b
  411972:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411973:	aad    0x4a
  411975:	dec    esi
  411976:	mov    DWORD PTR [ebx+0xfe887c2],eax
  41197c:	adc    bl,BYTE PTR [eax-0x32]
  41197f:	rcl    DWORD PTR [edi+0x7b51af2b],1
  411985:	arpl   WORD PTR cs:[ebp+eax*8-0x2ad7a97e],si
  41198d:	inc    eax
  41198e:	cld    
  41198f:	xchg   ebx,eax
  411990:	sti    
  411991:	add    DWORD PTR [edx+0x63],eax
  411994:	ss adc al,0x62
  411997:	cmp    eax,0x11df8be6
  41199c:	sbb    ch,BYTE PTR [ebp-0x72eaf18a]
  4119a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119a3:	data16 test dh,dh
  4119a6:	pop    esi
  4119a7:	aaa    
  4119a8:	inc    edi
  4119a9:	mov    al,0x91
  4119ab:	sbb    dh,BYTE PTR [edi]
  4119ad:	int3   
  4119ae:	mov    ebx,DWORD PTR [esi-0x61]
  4119b1:	jne    0x411a0d
  4119b3:	enter  0x1b89,0x28
  4119b7:	dec    ecx
  4119b8:	mov    ebp,0xb8e2ebec
  4119bd:	sbb    BYTE PTR [ebx-0x6c],0x81
  4119c1:	std    
  4119c2:	data16 sbb ch,dl
  4119c5:	cmp    eax,0xcc9af20a
  4119ca:	adc    eax,0xe40bf9c3
  4119cf:	xor    DWORD PTR [edi+ecx*8-0x22],edi
  4119d3:	call   0xf02d3abe
  4119d8:	push   ebx
  4119d9:	cmc    
  4119da:	out    dx,al
  4119db:	(bad)  
  4119dc:	jns    0x41198d
  4119de:	(bad)  
  4119df:	lods   eax,DWORD PTR ds:[esi]
  4119e0:	inc    esp
  4119e1:	jmp    0x3243:0x8cf92540
  4119e8:	or     DWORD PTR [ebp+0x719cd43],ebp
  4119ee:	shl    cl,1
  4119f0:	in     eax,dx
  4119f1:	push   eax
  4119f2:	jl     0x4119b9
  4119f4:	adc    edx,ebp
  4119f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119f7:	jmp    0x1a0f:0x5ee0df4a
  4119fe:	add    DWORD PTR [edi],0x35
  411a01:	mov    esi,0x953be382
  411a06:	inc    ebx
  411a07:	mov    ss,WORD PTR [edx]
  411a09:	push   ebp
  411a0a:	mov    dh,0xdd
  411a0c:	das    
  411a0d:	addr16 (bad) 
  411a0f:	aas    
  411a10:	adc    eax,0xbf75d93e
  411a15:	nop
  411a16:	dec    ebp
  411a17:	lock push ss
  411a19:	add    bl,ah
  411a1b:	xchg   edi,eax
  411a1c:	(bad)  
  411a1d:	stc    
  411a1e:	cli    
  411a1f:	imul   BYTE PTR [eax]
  411a21:	popa   
  411a22:	lea    esi,[ebx-0xf]
  411a25:	lock aad 0xa5
  411a28:	push   edx
  411a29:	icebp  
  411a2a:	add    eax,0x27a87325
  411a2f:	push   cs
  411a30:	imul   eax,DWORD PTR [eax],0xffffffdd
  411a33:	cmp    eax,0x362c39a
  411a38:	mov    ebx,ecx
  411a3a:	bound  ebx,QWORD PTR [edi+0x11]
  411a3d:	xchg   bl,dh
  411a3f:	mov    ecx,0xbadafc66
  411a44:	js     0x411a61
  411a46:	and    al,0x8c
  411a48:	(bad)  
  411a49:	and    eax,0xc89215f6
  411a4e:	xchg   ebp,eax
  411a4f:	mov    al,0xb7
  411a51:	fwait
  411a52:	inc    esp
  411a53:	int3   
  411a54:	enter  0xdc05,0x54
  411a58:	fist   DWORD PTR [eax+edi*8+0x3b0b34b2]
  411a5f:	or     esi,esp
  411a61:	add    ch,BYTE PTR [ecx+ebx*8]
  411a64:	inc    edi
  411a65:	xchg   edi,eax
  411a66:	inc    edi
  411a67:	jmp    DWORD PTR [edi+0x6d7028e8]
  411a6d:	inc    esi
  411a6e:	retw   
  411a70:	ror    DWORD PTR [ecx],0x98
  411a73:	inc    esi
  411a74:	repz int3 
  411a76:	iret   
  411a77:	or     BYTE PTR [eax+0x2562bd62],ch
  411a7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a7f:	xchg   ebx,eax
  411a80:	mov    bh,0x3e
  411a82:	pop    ds
  411a83:	clc    
  411a84:	mov    bl,dl
  411a86:	xlat   BYTE PTR ds:[ebx]
  411a87:	jle    0x411acc
  411a89:	and    cl,BYTE PTR [ebp-0x1c091c8c]
  411a8f:	nop
  411a90:	inc    esp
  411a91:	xchg   dh,cl
  411a93:	xor    BYTE PTR [edi+eiz*8-0x2dd7b578],bh
  411a9a:	sar    DWORD PTR fs:[ebp+ebp*8+0x5e],1
  411a9f:	pop    esp
  411aa0:	add    bh,BYTE PTR [ecx-0x420077e0]
  411aa6:	dec    ebx
  411aa7:	fild   QWORD PTR [esp+eiz*2-0x76a01987]
  411aae:	pop    ss
  411aaf:	sub    DWORD PTR [ebp+0x24b48471],ecx
  411ab5:	dec    ebx
  411ab6:	xchg   esp,eax
  411ab7:	hlt    
  411ab8:	sbb    DWORD PTR [ecx-0x4bd998e1],0x5db789b1
  411ac2:	cmc    
  411ac3:	pusha  
  411ac4:	sub    ch,dl
  411ac6:	mov    ebx,0x7268d1a6
  411acb:	aaa    
  411acc:	sbb    eax,0xeacf662f
  411ad1:	into   
  411ad2:	aam    0x5e
  411ad4:	mov    bl,BYTE PTR [ecx+0x754c2f4e]
  411ada:	and    eax,0x182f5e0f
  411adf:	fild   WORD PTR [ecx+ebp*8-0x70f4164]
  411ae6:	cwde   
  411ae7:	dec    edi
  411ae8:	xor    eax,0x80f3393f
  411aed:	and    DWORD PTR [ebx-0xdaa4fd7],ebx
  411af3:	sub    BYTE PTR [edx+0x1fffcef5],0xe1
  411afa:	mov    edi,0x91d9126a
  411aff:	(bad)  
  411b00:	mov    ds:0xe8a954cb,eax
  411b05:	and    BYTE PTR [esi],bh
  411b07:	mov    eax,0x300000d2
  411b0c:	imul   ebp,edi,0x5dd50073
  411b12:	stos   DWORD PTR es:[edi],eax
  411b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b14:	sti    
  411b15:	fsubr  DWORD PTR [eax+0x6c]
  411b18:	shr    DWORD PTR [ebx-0x19a41f69],cl
  411b1e:	gs mov ebx,0x1e41623a
  411b24:	inc    esi
  411b25:	sub    eax,0xfbe6c8b6
  411b2a:	mov    ebx,0x5dc94ad5
  411b2f:	lahf   
  411b30:	lods   al,BYTE PTR ds:[esi]
  411b31:	popa   
  411b32:	or     al,0x92
  411b34:	fsubr  QWORD PTR [ebp-0x63674be1]
  411b3a:	adc    eax,0x3f22456b
  411b3f:	push   es
  411b40:	cmp    ch,BYTE PTR [ebp+0x2a]
  411b43:	dec    eax
  411b44:	retf   0xafaf
  411b47:	pop    esp
  411b48:	fld    QWORD PTR [ecx+0x5dc0420a]
  411b4e:	out    dx,al
  411b4f:	mov    ds:0x15b54480,eax
  411b54:	push   ebp
  411b55:	mov    al,ds:0xe1138d10
  411b5a:	jne    0x411b16
  411b5c:	mov    edx,0xd4a7fe97
  411b61:	stos   DWORD PTR es:[edi],eax
  411b62:	dec    esi
  411b63:	xor    esi,ebx
  411b65:	test   eax,0x6b5ba92f
  411b6a:	inc    edi
  411b6b:	ss sbb eax,0xd5953fa6
  411b71:	or     al,0x55
  411b73:	add    DWORD PTR [edi-0x6f],edx
  411b76:	das    
  411b77:	and    ecx,DWORD PTR [ecx-0x53d68d67]
  411b7d:	or     dh,BYTE PTR [ecx-0x5c]
  411b80:	(bad)  
  411b81:	sti    
  411b82:	data16 fcomp QWORD PTR [ecx]
  411b85:	dec    edx
  411b86:	ds (bad) 
  411b88:	xchg   esi,eax
  411b89:	or     dl,ah
  411b8b:	jnp    0x411b78
  411b8d:	fmul   QWORD PTR es:[esi-0x302468ba]
  411b94:	(bad)  
  411b95:	in     eax,0x1
  411b97:	jle    0x411b25
  411b99:	jns    0x411b45
  411b9b:	test   al,0x62
  411b9d:	shr    BYTE PTR [esi+0x7daf4c28],cl
  411ba3:	xchg   esp,eax
  411ba4:	clc    
  411ba5:	and    al,0x28
  411ba7:	daa    
  411ba8:	jge    0x411bd9
  411baa:	stc    
  411bab:	das    
  411bac:	cmp    BYTE PTR ds:0x3b5897ff,dh
  411bb2:	mov    cl,dl
  411bb4:	hlt    
  411bb5:	sahf   
  411bb6:	and    BYTE PTR [eax],0x2c
  411bb9:	and    al,0x75
  411bbb:	jae    0x411c33
  411bbd:	addr16 stc 
  411bbf:	inc    ebx
  411bc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bc1:	xor    DWORD PTR [edx],ebp
  411bc3:	loop   0x411b53
  411bc5:	and    edi,DWORD PTR [esi]
  411bc7:	jp     0x411b65
  411bc9:	pusha  
  411bca:	pushf  
  411bcb:	mov    bh,0x31
  411bcd:	jo     0x411c10
  411bcf:	mov    ebp,0x2df6d275
  411bd4:	mov    ebp,0x79bc6793
  411bd9:	sbb    ah,BYTE PTR cs:[ecx]
  411bdc:	nop
  411bdd:	inc    eax
  411bde:	stos   BYTE PTR es:[edi],al
  411bdf:	das    
  411be0:	pop    ebp
  411be1:	cwde   
  411be2:	test   DWORD PTR [ebp-0x38110eca],ebp
  411be8:	sahf   
  411be9:	lods   al,BYTE PTR ds:[esi]
  411bea:	xchg   esi,eax
  411beb:	daa    
  411bec:	inc    edx
  411bed:	mov    cl,0xb6
  411bef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bf0:	inc    eax
  411bf1:	rol    cl,cl
  411bf3:	sub    BYTE PTR [edi+0x60],ch
  411bf6:	sub    edi,eax
  411bf8:	sub    DWORD PTR [eax-0x4809d7e2],eax
  411bfe:	(bad)  
  411c00:	or     al,0x9b
  411c02:	xor    ah,BYTE PTR [ebx-0x858607e]
  411c08:	sbb    cl,BYTE PTR [ebx+0x7e73e1f]
  411c0e:	lods   al,BYTE PTR ds:[esi]
  411c0f:	mov    BYTE PTR cs:[ebx],ch
  411c12:	cmp    DWORD PTR ds:0x53f008b3,esp
  411c18:	(bad)  
  411c1a:	pushf  
  411c1b:	push   esi
  411c1c:	and    al,bl
  411c1e:	ds scas eax,DWORD PTR es:[edi]
  411c20:	mov    esp,ebp
  411c22:	addr16 xchg ecx,eax
  411c24:	retf   0x2bac
  411c27:	sub    DWORD PTR [ebx-0x6103ed2e],esp
  411c2d:	xor    ecx,esi
  411c2f:	outs   dx,BYTE PTR ds:[esi]
  411c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c31:	add    eax,0xfceee752
  411c36:	adc    ebx,DWORD PTR [esi+0x12]
  411c39:	pop    es
  411c3a:	les    esi,FWORD PTR ds:0x2b158ec8
  411c40:	das    
  411c41:	jbe    0x411c5a
  411c43:	iret   
  411c44:	jne    0x411c2c
  411c46:	xor    al,0x0
  411c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c49:	adc    ebp,DWORD PTR [esi+0x71]
  411c4c:	and    eax,0xb042b71b
  411c51:	adc    ch,al
  411c53:	cwde   
  411c54:	fmul   QWORD PTR [ecx+ecx*4-0x69]
  411c58:	mov    esp,0xc2b2caca
  411c5d:	neg    DWORD PTR [ecx+edi*1-0x5d]
  411c61:	loopne 0x411c15
  411c63:	fidivr DWORD PTR [edi+0x78]
  411c66:	cmp    DWORD PTR ds:0x7382a6d0,0xc
  411c6d:	mov    dl,0x7f
  411c6f:	iret   
  411c70:	adc    DWORD PTR [ecx-0x1f1604aa],ebx
  411c76:	push   es
  411c77:	loopne 0x411c76
  411c79:	fnstcw WORD PTR [esi-0x6d]
  411c7c:	mov    ah,0xbf
  411c7e:	mov    eax,ds:0x589e41d7
  411c83:	sub    ah,bl
  411c85:	clc    
  411c86:	mov    al,0x74
  411c88:	add    eax,DWORD PTR [edi]
  411c8a:	jle    0x411cdc
  411c8c:	lods   eax,DWORD PTR ds:[esi]
  411c8d:	inc    BYTE PTR [eax+0x2d303dd]
  411c93:	add    ebp,edi
  411c95:	mov    ah,0xbc
  411c97:	push   ds
  411c98:	or     ah,BYTE PTR [eax-0x7d730898]
  411c9e:	into   
  411c9f:	mov    DWORD PTR [edx],esp
  411ca1:	and    al,BYTE PTR [ebp-0x5]
  411ca4:	xor    DWORD PTR [eax*8+0x2363e3d],esp
  411cab:	ja     0x411c79
  411cad:	setl   al
  411cb0:	jae    0x411c5d
  411cb2:	dec    edi
  411cb3:	cmp    al,0x58
  411cb5:	jmp    0xf97873be
  411cba:	mov    bh,0x35
  411cbc:	bound  ecx,QWORD PTR [edi-0x79]
  411cbf:	lds    ebp,FWORD PTR [eax*4-0x66375ce]
  411cc6:	ret    0x849
  411cc9:	rol    bh,0x9c
  411ccc:	inc    edx
  411ccd:	sahf   
  411cce:	data16 ror BYTE PTR [ebp+0x14],cl
  411cd2:	xlat   BYTE PTR ds:[ebx]
  411cd4:	push   0x53
  411cd6:	xchg   BYTE PTR [ecx-0x55],ah
  411cd9:	(bad)  
  411cda:	jg     0x411d10
  411cdc:	test   eax,0x389c1da7
  411ce1:	fcomp  st(1)
  411ce3:	adc    bl,ah
  411ce5:	fcomp  DWORD PTR [edx]
  411ce7:	fsub   DWORD PTR [edx-0x3b5e66f6]
  411ced:	in     al,0x89
  411cef:	(bad)  
  411cf0:	and    al,0x71
  411cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cf3:	sub    al,0x2b
  411cf5:	stos   DWORD PTR es:[edi],eax
  411cf6:	ret    
  411cf7:	fisubr WORD PTR [edi]
  411cf9:	xlat   BYTE PTR ds:[ebx]
  411cfa:	les    ebx,FWORD PTR ds:0xcd8bb1a4
  411d00:	adc    ebp,DWORD PTR [ebx]
  411d02:	aad    0xe
  411d04:	xor    bl,BYTE PTR [ecx+0x10a87814]
  411d0a:	leave  
  411d0b:	pop    esp
  411d0c:	ret    0x8f6d
  411d0f:	jnp    0x411d4a
  411d11:	fild   QWORD PTR [eax]
  411d13:	loop   0x411d09
  411d15:	xchg   ebx,eax
  411d16:	jmp    0x411d18
  411d18:	pop    esi
  411d19:	mov    al,0xd1
  411d1b:	xchg   edx,eax
  411d1c:	into   
  411d1d:	scas   eax,DWORD PTR es:[edi]
  411d1e:	fxam   
  411d20:	je     0x411d8f
  411d22:	addr16 or esi,edi
  411d25:	mov    eax,0xa296fa71
  411d2a:	int3   
  411d2b:	inc    ebp
  411d2c:	dec    BYTE PTR [edx]
  411d2e:	push   ebx
  411d2f:	mov    ecx,?
  411d31:	daa    
  411d32:	pop    esp
  411d33:	mov    BYTE PTR [ecx+0x6f],ah
  411d36:	clc    
  411d37:	push   esp
  411d38:	stos   BYTE PTR es:[edi],al
  411d39:	pop    ss
  411d3a:	pop    esi
  411d3b:	dec    ecx
  411d3c:	push   DWORD PTR [ecx-0x357cd0a9]
  411d42:	ins    BYTE PTR es:[edi],dx
  411d43:	test   DWORD PTR [ebx+0x67],edi
  411d46:	pop    ss
  411d47:	pop    edx
  411d48:	push   ebp
  411d49:	adc    bl,0xa7
  411d4c:	fwait
  411d4d:	in     al,dx
  411d4e:	into   
  411d4f:	jno    0x411d6b
  411d51:	jbe    0x411d93
  411d53:	push   0x341feec3
  411d58:	(bad)
  411d5c:	lea    esi,[ebx-0x58665af1]
  411d62:	inc    eax
  411d63:	int3   
  411d64:	jl     0x99295cb6
  411d6a:	arpl   WORD PTR [ecx],bx
  411d6c:	pop    eax
  411d6d:	sbb    ah,bh
  411d6f:	or     BYTE PTR [ecx],dl
  411d71:	add    BYTE PTR [edi],cl
  411d73:	test   eax,0xd4acde6c
  411d78:	adc    eax,DWORD PTR [edi-0x41]
  411d7b:	in     eax,0xdf
  411d7d:	clc    
  411d7e:	xor    BYTE PTR [edi+esi*4-0x13e745e6],bl
  411d85:	shr    DWORD PTR [eax],0x73
  411d88:	in     eax,dx
  411d89:	pop    esi
  411d8a:	xchg   esi,eax
  411d8b:	fidiv  WORD PTR [ebx-0x56]
  411d8e:	sbb    eax,0x73c08c31
  411d93:	loopne 0x411d5d
  411d95:	ins    DWORD PTR es:[edi],dx
  411d96:	adc    eax,0xe0cdc2a0
  411d9b:	mov    eax,0xb521c795
  411da0:	aam    0x3d
  411da2:	enter  0x5b8d,0x7f
  411da6:	push   esi
  411da7:	xchg   DWORD PTR [ebx-0x17ef007],esi
  411dad:	je     0x411e29
  411daf:	pop    ebx
  411db0:	mov    eax,ds:0xeabe7337
  411db5:	in     eax,0x24
  411db7:	idiv   DWORD PTR ds:0x75fa3527
  411dbd:	push   ebx
  411dbe:	sbb    DWORD PTR [ebx-0x4d874c3f],edi
  411dc4:	adc    dl,BYTE PTR [ebx]
  411dc6:	cli    
  411dc7:	je     0x411d6e
  411dc9:	xor    DWORD PTR [bx-0x79],edi
  411dcd:	jno    0x411e4b
  411dcf:	pusha  
  411dd0:	fdiv   DWORD PTR [ebp+0x788d0ac3]
  411dd6:	fidivr WORD PTR [ecx]
  411dd8:	(bad)  
  411dd9:	fisub  DWORD PTR ds:0xc8174ce9
  411ddf:	neg    eax
  411de1:	dec    ebp
  411de2:	cs cli 
  411de4:	jb     0x411de4
  411de6:	lea    ebp,[ebx-0x52cd92ef]
  411dec:	xor    al,0x9
  411dee:	lods   eax,DWORD PTR ds:[esi]
  411def:	push   ebx
  411df0:	aas    
  411df1:	jbe    0x411e24
  411df3:	ins    DWORD PTR es:[edi],dx
  411df4:	mov    ds:0x93d2794f,eax
  411df9:	push   ebp
  411dfa:	sti    
  411dfb:	sahf   
  411dfc:	jl     0x411e63
  411dfe:	jl     0x411d8e
  411e00:	neg    DWORD PTR [edx-0x246b4080]
  411e06:	fcmove st,st(4)
  411e08:	(bad)  
  411e09:	loope  0x411d9b
  411e0b:	clc    
  411e0c:	mov    ecx,0x9bb88eba
  411e11:	dec    eax
  411e12:	fcom   QWORD PTR [edi+0x5d7d1c3d]
  411e18:	jge    0x411df4
  411e1a:	popf   
  411e1b:	inc    edi
  411e1c:	add    BYTE PTR [ebx],al
  411e1e:	or     BYTE PTR [edx+0x7a05c472],bl
  411e24:	and    DWORD PTR ds:0xae8e845e,esp
  411e2a:	add    eax,0x50fea223
  411e2f:	xlat   BYTE PTR ds:[ebx]
  411e30:	jns    0x411e35
  411e32:	addr16 dec eax
  411e34:	pop    esp
  411e35:	lahf   
  411e36:	ins    DWORD PTR es:[edi],dx
  411e37:	sti    
  411e38:	push   esp
  411e39:	sub    al,0xc8
  411e3b:	icebp  
  411e3c:	test   ecx,0x9525ae13
  411e42:	cmp    DWORD PTR [eax+0x5bba5e01],esp
  411e48:	mov    ecx,0x6688d1dd
  411e4d:	dec    ebp
  411e4e:	aam    0x37
  411e50:	sbb    eax,0x5e7737aa
  411e55:	and    BYTE PTR [edx-0x2cf141b9],dh
  411e5b:	and    BYTE PTR [edi],dl
  411e5d:	data16 jecxz 0x411e80
  411e60:	sub    eax,0x248bcac3
  411e65:	mov    ch,0xc1
  411e67:	and    BYTE PTR [eax],dh
  411e69:	lds    esp,FWORD PTR [eax+esi*1]
  411e6c:	les    esp,FWORD PTR [eax+eiz*4+0x51]
  411e70:	sar    DWORD PTR [esi],0x11
  411e73:	ins    DWORD PTR es:[edi],dx
  411e74:	fwait
  411e75:	cmp    BYTE PTR [edi-0x50036722],dh
  411e7b:	ins    DWORD PTR es:[edi],dx
  411e7c:	adc    esi,DWORD PTR ds:0x744e7982
  411e82:	jle    0x411e60
  411e84:	push   DWORD PTR [edx+ebx*8+0x76]
  411e88:	cmp    DWORD PTR [eax-0x4f8977ad],ebp
  411e8e:	pop    ss
  411e8f:	fwait
  411e90:	xchg   ch,ch
  411e92:	int3   
  411e93:	in     al,0xe0
  411e95:	jnp    0x411e62
  411e97:	adc    eax,ebp
  411e99:	inc    esi
  411e9a:	and    dh,BYTE PTR [ebp+edx*4+0x20ad605]
  411ea1:	lds    eax,FWORD PTR gs:[esi-0x45310d84]
  411ea8:	pop    edi
  411ea9:	dec    esp
  411eaa:	(bad)  
  411eab:	and    DWORD PTR [esi+0x33],ecx
  411eae:	popa   
  411eaf:	(bad)  
  411eb0:	aam    0x23
  411eb2:	fs aaa 
  411eb4:	retf   
  411eb5:	mov    dh,0x8f
  411eb7:	loopne 0x411ebd
  411eb9:	cmp    ebp,DWORD PTR [eax]
  411ebb:	mov    WORD PTR [eax+esi*8-0x47],fs
  411ebf:	mov    gs,edi
  411ec1:	cdq    
  411ec2:	das    
  411ec3:	mov    dl,0x1f
  411ec5:	adc    DWORD PTR [eax+0x25],0xffffff8f
  411ec9:	(bad)  
  411eca:	icebp  
  411ecb:	xchg   esi,eax
  411ecc:	add    BYTE PTR [ecx-0x36],dh
  411ecf:	inc    ebx
  411ed0:	loope  0x411eb2
  411ed2:	mov    edx,0x885cc087
  411ed7:	push   ebx
  411ed8:	ret    0xf53f
  411edb:	mov    edx,0x6339e852
  411ee0:	popa   
  411ee1:	pop    esp
  411ee2:	and    ebp,0xffffffa7
  411ee5:	mov    ecx,0x2a5ed6d8
  411eea:	mov    eax,0xcfce041f
  411eef:	mov    ebx,0xe62b8d62
  411ef4:	xchg   edx,eax
  411ef5:	stc    
  411ef6:	push   edx
  411ef7:	push   edi
  411ef8:	add    edi,DWORD PTR ds:0xd8274290
  411efe:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f00:	out    0xa7,eax
  411f02:	ror    BYTE PTR [eax+ebx*1],0x19
  411f06:	lock hlt 
  411f08:	mov    ecx,0xa311726a
  411f0d:	(bad)  
  411f0e:	xor    al,BYTE PTR [edi+0x1fb02bfc]
  411f14:	xchg   esi,eax
  411f15:	ss jmp 0x411f8a
  411f18:	imul   edi,DWORD PTR [ebx],0x2a
  411f1b:	out    dx,eax
  411f1c:	xchg   BYTE PTR [eax+ebx*1+0x49],ah
  411f20:	mov    dh,BYTE PTR [edi+0x4a8a1b58]
  411f26:	add    esi,DWORD PTR [edi+0x5db96c36]
  411f2c:	or     eax,0xbd68f999
  411f31:	sar    DWORD PTR [edx],0x2c
  411f34:	cmp    eax,0xe18e0faa
  411f39:	mov    dl,0x9a
  411f3b:	push   ecx
  411f3c:	ja     0x411f2a
  411f3e:	arpl   WORD PTR [ebp-0x2b],ax
  411f41:	cmp    ch,cl
  411f43:	inc    eax
  411f44:	sar    BYTE PTR [esi-0x1c],1
  411f47:	jecxz  0x411ed1
  411f49:	mov    edi,0xeab080d5
  411f4e:	cmp    ecx,DWORD PTR [edi-0x28]
  411f51:	xchg   DWORD PTR [edx+0x7e],ebp
  411f54:	mov    al,0x28
  411f56:	xor    al,0x7
  411f58:	fmul   DWORD PTR [eax]
  411f5a:	pop    ecx
  411f5b:	add    BYTE PTR [eax],cl
  411f5d:	pusha  
  411f5e:	and    BYTE PTR [eax+esi*4],0xc6
  411f62:	repnz int3 
  411f64:	sub    eax,0xf31f218e
  411f69:	ins    BYTE PTR es:[edi],dx
  411f6a:	adc    al,0xff
  411f6c:	test   BYTE PTR [eax+0x79cb359b],dl
  411f72:	(bad)  
  411f73:	hlt    
  411f74:	fdiv   st(0),st
  411f76:	or     DWORD PTR [ebx+edi*8+0x20],edx
  411f7a:	xchg   edx,eax
  411f7b:	xchg   edx,eax
  411f7c:	clc    
  411f7d:	lods   al,BYTE PTR ds:[esi]
  411f7e:	leave  
  411f7f:	fistp  WORD PTR [edi]
  411f81:	pop    ebx
  411f82:	push   ecx
  411f83:	or     eax,0x4b3fa260
  411f88:	or     edx,DWORD PTR [eax-0x3be34828]
  411f8e:	pop    esp
  411f8f:	out    dx,al
  411f90:	jg     0x411fad
  411f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f93:	adc    al,BYTE PTR [eax]
  411f95:	jnp    0x41200e
  411f97:	sbb    BYTE PTR [ebx-0x15be67f3],ah
  411f9d:	gs adc al,0xc
  411fa0:	cmp    eax,DWORD PTR gs:[esi]
  411fa3:	jmp    0x3f60:0x897ae132
  411faa:	adc    ecx,edi
  411fac:	sti    
  411fad:	lea    edi,[eax+0x40ecd2d9]
  411fb3:	(bad)  [ecx-0x5ef53997]
  411fb9:	xor    BYTE PTR [esp+edi*4-0x46021bcb],dl
  411fc0:	add    al,0x91
  411fc2:	outs   dx,DWORD PTR ds:[esi]
  411fc3:	mov    eax,ds:0x4e0e283e
  411fc8:	pop    es
  411fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fca:	popa   
  411fcb:	inc    esi
  411fcc:	mov    al,0xd9
  411fce:	xchg   BYTE PTR [esi],bh
  411fd0:	mov    al,0xfc
  411fd2:	scas   eax,DWORD PTR es:[edi]
  411fd3:	cwde   
  411fd4:	cmp    BYTE PTR [ecx],cl
  411fd6:	jo     0x411fbc
  411fd8:	call   0xe64c:0x784f6aa0
  411fdf:	xor    cl,dl
  411fe1:	and    eax,0x46922c1e
  411fe6:	or     ecx,esp
  411fe8:	cmp    BYTE PTR [edi-0x3034ec93],0x4e
  411fef:	xchg   esi,eax
  411ff0:	mov    edi,edi
  411ff2:	ficom  WORD PTR [ecx]
  411ff4:	cmp    BYTE PTR [edi-0x60ad2aba],0x9b
  411ffb:	sti    
  411ffc:	(bad)  
  411ffd:	cmp    al,0x76
  411fff:	push   ecx
  412000:	lods   al,BYTE PTR fs:[esi]
  412002:	lea    ebx,[ebp-0x78eab71c]
  412008:	addr16 jae 0x411fed
  41200b:	fidivr WORD PTR [eax]
  41200d:	out    dx,al
  41200e:	jns    0x15cfd067
  412014:	hlt    
  412015:	stos   BYTE PTR es:[edi],al
  412016:	dec    eax
  412017:	idiv   dl
  412019:	sub    DWORD PTR [ebx],eax
  41201b:	mov    ebp,0x897fb436
  412020:	inc    edx
  412021:	icebp  
  412022:	fild   DWORD PTR [edi]
  412024:	dec    esi
  412025:	add    ebp,DWORD PTR [edi+0x32]
  412028:	in     al,0xf
  41202a:	mov    bh,0xad
  41202c:	add    BYTE PTR [eax+0x44],0xbd
  412030:	nop
  412031:	test   eax,0x9150663c
  412036:	mov    ds:0x9a3c3806,al
  41203b:	sub    esi,DWORD PTR [edx]
  41203d:	push   ebp
  41203e:	int3   
  41203f:	add    ecx,edi
  412041:	popf   
  412042:	add    eax,0x243fef99
  412047:	sbb    ah,0x34
  41204a:	inc    eax
  41204b:	cmp    BYTE PTR [edi-0x3e9eda3d],al
  412051:	sahf   
  412052:	mul    BYTE PTR [esi-0x37]
  412055:	dec    eax
  412056:	mov    ch,0xcb
  412058:	retf   0x6446
  41205b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41205c:	cmp    esi,DWORD PTR [edx-0x1ea448b6]
  412062:	adc    eax,0xffffffed
  412065:	ss dec ebx
  412067:	pop    ss
  412068:	ss retf 
  41206a:	lea    edx,[edx]
  41206c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41206d:	pop    ss
  41206e:	sbb    eax,0x41182973
  412073:	bound  ebx,QWORD PTR [ebp+0x193a570]
  412079:	adc    ch,BYTE PTR [edi+eax*1+0x52]
  41207d:	les    ebp,FWORD PTR [edx-0x55956634]
  412083:	sub    edx,DWORD PTR [edi+0x67]
  412086:	lods   eax,DWORD PTR ds:[esi]
  412087:	(bad)  
  412088:	out    0xcc,al
  41208a:	xor    dl,BYTE PTR ds:0xd2031313
  412090:	xchg   esp,eax
  412091:	call   0x3a1b3352
  412096:	sub    eax,0xc87195f7
  41209b:	jnp    0x41203f
  41209d:	xchg   ebp,eax
  41209e:	and    ch,BYTE PTR [ecx+0x219efcb1]
  4120a4:	sub    esp,DWORD PTR [ecx]
  4120a6:	loope  0x41203f
  4120a8:	clc    
  4120a9:	aas    
  4120aa:	cld    
  4120ab:	or     BYTE PTR [edi+0x42],ah
  4120ae:	mov    eax,DWORD PTR [edx-0x3c]
  4120b1:	cmp    DWORD PTR [esi-0xd],0x60
  4120b5:	rcr    DWORD PTR [edi+eiz*1+0x4d774623],cl
  4120bc:	pusha  
  4120bd:	adc    edi,DWORD PTR [ecx+0x56830d4a]
  4120c3:	lds    ecx,FWORD PTR [ecx-0x463122c9]
  4120c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120ca:	jge    0x4120d7
  4120cc:	sbb    eax,esi
  4120ce:	mov    al,ds:0xf4753080
  4120d3:	xor    al,0xc1
  4120d5:	(bad)  
  4120d6:	test   ecx,0x158c474
  4120dc:	and    ecx,DWORD PTR [edx-0x5e837769]
  4120e2:	cwde   
  4120e3:	and    DWORD PTR [ecx+0x5],eax
  4120e6:	push   ecx
  4120e7:	mov    al,ds:0xc6a51c75
  4120ec:	push   ebp
  4120ed:	cmp    DWORD PTR [ebp+esi*8-0x5e90e092],edx
  4120f4:	ss retf 0x2114
  4120f8:	repz sub bh,cl
  4120fb:	ret    0x4c0a
  4120fe:	sbb    ch,BYTE PTR [edx-0x4]
  412101:	push   esp
  412102:	mov    edi,0xb803ceb9
  412107:	jp     0x41215f
  412109:	(bad)  
  41210a:	push   ebx
  41210b:	out    dx,eax
  41210c:	in     eax,dx
  41210d:	mov    ch,0x42
  41210f:	scas   eax,DWORD PTR es:[edi]
  412110:	shl    DWORD PTR [ebx+0x4c],cl
  412113:	call   0xd4cb:0xe877cf1b
  41211a:	mov    WORD PTR [ebp-0x2a],es
  41211d:	sbb    DWORD PTR [eax],esi
  41211f:	clc    
  412120:	sbb    al,0x92
  412122:	test   eax,0xcdc6928
  412127:	push   esi
  412128:	lods   al,BYTE PTR ds:[esi]
  412129:	fistp  DWORD PTR [ebx+0x59]
  41212c:	xchg   ecx,eax
  41212d:	cmp    DWORD PTR [eax+0x7baff5ad],esp
  412133:	leave  
  412134:	xor    eax,DWORD PTR [esp+esi*4-0x5f89a941]
  41213b:	xchg   DWORD PTR [ebx+eiz*1],edx
  41213e:	push   edx
  41213f:	jno    0x412188
  412141:	sti    
  412142:	push   es
  412143:	es mov edx,0x55eeab7d
  412149:	mov    cl,0x1a
  41214b:	aaa    
  41214c:	test   dh,0x9f
  41214f:	jl     0x4121c0
  412151:	dec    edi
  412152:	jg     0x412182
  412154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412155:	mov    ds:0xd14ba31,eax
  41215a:	jle    0x41213b
  41215c:	(bad)  
  41215d:	jmp    0x6111:0x3cf697b6
  412164:	in     al,dx
  412165:	imul   edx,edx,0x13873f6
  41216b:	popa   
  41216c:	sub    al,0x6f
  41216e:	jmp    0x8deb17f7
  412173:	dec    edi
  412174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412175:	cwde   
  412176:	push   ebp
  412177:	cmp    eax,0x4ca0d768
  41217c:	xor    al,0x6
  41217e:	retf   0xf8ba
  412181:	imul   esi,DWORD PTR [edx],0x9b008e0e
  412187:	and    al,0x36
  412189:	lods   al,BYTE PTR ds:[esi]
  41218a:	js     0x41216c
  41218c:	push   cs
  41218d:	and    eax,0xad58ebfa
  412192:	leave  
  412193:	test   BYTE PTR [esi+0x23bfa97c],0x3
  41219a:	(bad)  
  41219c:	outs   dx,BYTE PTR ds:[esi]
  41219d:	dec    edx
  41219e:	mov    ch,0x9
  4121a0:	shr    DWORD PTR [eax-0xac85d2e],cl
  4121a6:	jmp    0x887fb177
  4121ab:	mov    esi,0xa2a35753
  4121b0:	dec    esi
  4121b1:	data16 aad 0xef
  4121b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121b5:	or     edi,DWORD PTR [edi+0x48]
  4121b8:	dec    eax
  4121b9:	mov    eax,0xb1df62b9
  4121be:	pop    es
  4121bf:	or     eax,DWORD PTR [ebp-0x55]
  4121c2:	inc    esi
  4121c3:	mov    al,ds:0xeaa6755a
  4121c8:	sub    bh,BYTE PTR [esi-0x37f36abf]
  4121ce:	scas   eax,DWORD PTR es:[edi]
  4121cf:	dec    eax
  4121d0:	icebp  
  4121d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121d2:	mov    ah,0x32
  4121d4:	rcl    DWORD PTR [ebx-0x2b],1
  4121d7:	scas   al,BYTE PTR es:[edi]
  4121d8:	mov    dh,0xe4
  4121da:	test   DWORD PTR [edx],ecx
  4121dc:	mov    cl,0xbb
  4121de:	shr    DWORD PTR [ecx],cl
  4121e0:	cmp    eax,0xff825a23
  4121e5:	fild   QWORD PTR [ecx]
  4121e7:	(bad)  
  4121e8:	jb     0x4121ca
  4121ea:	push   ds
  4121eb:	or     DWORD PTR [ecx+0x51],0x818924cf
  4121f2:	adc    dl,0xfc
  4121f5:	mov    ah,0x94
  4121f7:	lods   al,BYTE PTR ds:[esi]
  4121f8:	mov    eax,ds:0x68b024ca
  4121fd:	ds aad 0xed
  412200:	lods   al,BYTE PTR ds:[esi]
  412201:	jns    0x412198
  412203:	loope  0x41218a
  412205:	int3   
  412206:	xchg   esp,eax
  412207:	pop    ecx
  412208:	enter  0x725c,0x9c
  41220c:	adc    eax,0x1fd38de6
  412211:	rcl    BYTE PTR [eax+0x4],cl
  412214:	hlt    
  412215:	mov    ebp,0x16b1dfb
  41221a:	and    edx,DWORD PTR [esi+0x20]
  41221d:	inc    eax
  41221e:	pushf  
  41221f:	out    dx,al
  412220:	shl    BYTE PTR ds:0x4433cc94,cl
  412226:	daa    
  412227:	inc    eax
  412228:	hlt    
  412229:	mov    al,ds:0x34f54534
  41222e:	mov    bl,0xde
  412230:	pop    ecx
  412231:	cld    
  412232:	xor    dl,BYTE PTR [esi+0x5592a9d8]
  412238:	cld    
  412239:	mov    eax,ds:0x15d821e3
  41223e:	mov    ecx,0x99956689
  412243:	cli    
  412244:	cwde   
  412245:	mul    edx
  412247:	stos   DWORD PTR es:[edi],eax
  412248:	jp     0x4121fc
  41224a:	pop    ss
  41224b:	jnp    0x4122ba
  41224d:	add    ebp,edi
  41224f:	pop    eax
  412250:	sub    esi,DWORD PTR [eax]
  412252:	adc    ecx,ebp
  412254:	push   ds
  412255:	and    al,0x71
  412257:	adc    BYTE PTR [eax+eax*8+0x1d47c26f],0x4e
  41225f:	pop    esp
  412260:	push   esp
  412261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412262:	fild   WORD PTR [edi+0x6e]
  412265:	jns    0x412276
  412267:	nop
  412268:	jecxz  0x4122cf
  41226a:	inc    ebx
  41226b:	mov    ebp,0xfd7a8d7f
  412270:	mov    ecx,0x77f518a
  412275:	add    al,0xf1
  412277:	dec    edi
  412278:	mov    WORD PTR [ebx+0x7f],fs
  41227b:	adc    al,0x38
  41227d:	or     DWORD PTR [edx-0x44],0x3382a3e2
  412284:	sub    BYTE PTR [ecx],ch
  412286:	mov    edx,0x55dcb429
  41228b:	outs   dx,BYTE PTR ds:[esi]
  41228c:	in     al,dx
  41228d:	cmp    BYTE PTR [esi-0x1bb266e3],bl
  412293:	stos   BYTE PTR es:[edi],al
  412294:	frstor [ebx+0x27]
  412297:	out    dx,eax
  412298:	in     al,dx
  412299:	sahf   
  41229a:	jae    0x412301
  41229c:	lahf   
  41229d:	pop    ecx
  41229e:	jg     0x412281
  4122a0:	and    DWORD PTR [ecx+0x4a],ecx
  4122a3:	sub    dl,BYTE PTR [ecx+0x25aec1aa]
  4122a9:	and    eax,0x797b1b80
  4122ae:	sbb    eax,0x3b4285be
  4122b3:	daa    
  4122b4:	test   BYTE PTR [ebx-0x2a],bl
  4122b7:	jmp    0x4122ae
  4122b9:	mov    WORD PTR gs:[edi+0x72002d3e],ds
  4122c0:	cmc    
  4122c1:	aad    0x47
  4122c3:	pop    es
  4122c4:	mov    DWORD PTR [edi],ebp
  4122c6:	fwait
  4122c7:	sti    
  4122c8:	int    0x59
  4122ca:	dec    ebp
  4122cb:	scas   al,BYTE PTR es:[edi]
  4122cc:	pushf  
  4122cd:	cwde   
  4122ce:	rol    BYTE PTR [ebp+0x4defb5ae],0x77
  4122d5:	cs push ebp
  4122d7:	cli    
  4122d8:	aad    0xbf
  4122da:	pop    esp
  4122db:	rcr    DWORD PTR [ecx-0x6a],cl
  4122de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e0:	data16 xor al,0x31
  4122e3:	pop    eax
  4122e4:	lock (bad) [esi-0x27]
  4122e8:	nop
  4122e9:	out    0x27,eax
  4122eb:	hlt    
  4122ec:	jle    0x412336
  4122ee:	xchg   esi,eax
  4122ef:	cmp    al,0x6f
  4122f1:	mov    edi,0xa8fc26f2
  4122f6:	mov    WORD PTR [ebx],ds
  4122f8:	stos   DWORD PTR es:[edi],eax
  4122f9:	fidiv  WORD PTR [edx-0x691e1d8b]
  4122ff:	adc    eax,0xd1db2e5f
  412304:	test   DWORD PTR [edi+0x9],esi
  412307:	mov    ebx,0x306428c6
  41230c:	popf   
  41230d:	loopne 0x4122b3
  41230f:	and    ecx,DWORD PTR [eax]
  412311:	push   edx
  412312:	adc    DWORD PTR gs:[ecx+ebx*1+0x7f5e6b69],eax
  41231a:	sub    edx,edx
  41231c:	adc    ch,bh
  41231e:	std    
  41231f:	pop    eax
  412320:	mov    al,al
  412322:	inc    eax
  412323:	mov    ds:0xe11d4492,eax
  412328:	cmc    
  412329:	and    bl,dh
  41232b:	pop    edx
  41232c:	stos   BYTE PTR es:[edi],al
  41232d:	loope  0x4122ea
  41232f:	loop   0x4122f1
  412331:	les    esp,FWORD PTR [ecx+esi*8-0x69]
  412335:	mov    ecx,0xab43e6f8
  41233a:	int3   
  41233b:	cwde   
  41233c:	lahf   
  41233d:	and    ah,cl
  41233f:	add    eax,0x61f3c7f9
  412344:	fwait
  412345:	mov    edx,0xb45250d4
  41234a:	ror    DWORD PTR [ebp+edx*2+0x1d46c60c],0xa2
  412352:	lea    esi,[edx+0x44]
  412355:	sar    DWORD PTR [ecx-0x224b6e34],cl
  41235b:	or     al,dh
  41235d:	sbb    BYTE PTR [esi],bh
  41235f:	dec    BYTE PTR [ebp+0x27]
  412362:	xchg   ebp,eax
  412363:	add    al,0x22
  412365:	ins    DWORD PTR es:[edi],dx
  412366:	or     edx,DWORD PTR [edx+0x30409ac1]
  41236c:	jbe    0x412322
  41236e:	jl     0x412362
  412370:	mov    ch,0x30
  412372:	mov    ebx,ebp
  412374:	shl    cl,1
  412376:	das    
  412377:	lds    esp,FWORD PTR ds:0x9c741333
  41237d:	add    al,0xca
  41237f:	and    eax,0xbb30db54
  412384:	aas    
  412385:	mov    al,ds:0x4c67f73d
  41238a:	imul   edx,DWORD PTR [ebp+eax*8+0x5],0xfffffff2
  41238f:	adc    DWORD PTR [esi],ebx
  412391:	lods   al,BYTE PTR ds:[esi]
  412392:	mov    edi,0x76ce3b17
  412397:	sub    BYTE PTR [eax-0x677dca66],dl
  41239d:	xor    ah,BYTE PTR [edi+0x1f]
  4123a0:	push   0xffffffb1
  4123a2:	mov    ecx,0x5d7f8f3a
  4123a7:	inc    ebx
  4123a8:	fucom  st(7)
  4123aa:	mov    DWORD PTR [eax],esi
  4123ac:	mov    bl,0xb6
  4123ae:	fldcw  WORD PTR [esi+0xb849765]
  4123b4:	or     esi,DWORD PTR [eax+0x6c]
  4123b7:	xor    edx,ebx
  4123b9:	mov    eax,ds:0xcd583d25
  4123be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123bf:	mov    ecx,0x38f8e572
  4123c4:	call   0x4b8a0318
  4123c9:	js     0x412410
  4123cb:	pop    eax
  4123cc:	and    BYTE PTR [edx+0xb6cd1e7],ah
  4123d2:	sbb    al,0x7e
  4123d4:	pop    ds
  4123d5:	inc    esi
  4123d6:	test   eax,0x903943d6
  4123db:	xor    al,0x79
  4123dd:	push   esp
  4123de:	xchg   ebx,eax
  4123df:	repz cmp al,0x45
  4123e2:	mov    dl,0x95
  4123e4:	mov    ch,0x29
  4123e6:	cmp    cl,BYTE PTR [ebx]
  4123e8:	or     eax,0xa31265ce
  4123ed:	sar    DWORD PTR [esi],cl
  4123ef:	test   BYTE PTR [ebp+0x28413357],bh
  4123f5:	mov    edx,esp
  4123f7:	loop   0x412442
  4123f9:	xchg   ebx,eax
  4123fa:	cmp    dh,BYTE PTR [ebp+edi*4-0x25]
  4123fe:	add    al,0x1
  412400:	lock fldcw WORD PTR [edi]
  412404:	pop    esi
  412405:	mov    dl,0x7f
  412407:	push   cs
  412408:	and    al,0x51
  41240a:	push   ss
  41240b:	xlat   BYTE PTR ds:[ebx]
  41240c:	pop    eax
  41240d:	shl    BYTE PTR [esi-0x8865603],1
  412413:	mov    cl,0x7a
  412415:	retf   0x347d
  412418:	ficomp DWORD PTR [ecx+0x76]
  41241b:	lea    ebp,[ebx-0x80]
  41241e:	scas   eax,DWORD PTR es:[edi]
  41241f:	rcl    eax,0x6b
  412422:	push   eax
  412423:	or     eax,0xa9d12d9a
  412428:	sub    edx,DWORD PTR [edi]
  41242a:	jae    0x412468
  41242c:	retf   0x3630
  41242f:	lahf   
  412430:	push   esi
  412431:	sub    eax,0x3eae0b04
  412436:	jae    0x4123e4
  412438:	mov    ah,0x90
  41243a:	mov    WORD PTR ds:0x26cbde67,?
  412440:	pop    ebp
  412441:	sbb    al,0x68
  412443:	retf   
  412444:	or     al,0xb1
  412446:	rcl    DWORD PTR [edi+0x5e],0xc8
  41244a:	or     eax,0x9d93fe22
  41244f:	or     al,0x67
  412451:	aam    0x83
  412453:	jae    0x412418
  412455:	sbb    BYTE PTR [ecx],dh
  412457:	psubb  mm6,QWORD PTR ss:[esi]
  41245b:	add    eax,0xd29c9c7c
  412460:	mov    cl,dl
  412462:	shl    DWORD PTR [eax+0x48ee7c0d],1
  412468:	fwait
  412469:	pop    edi
  41246a:	jnp    0x41243c
  41246c:	(bad)  
  41246e:	jb     0x412477
  412470:	arpl   bp,di
  412472:	push   es
  412473:	gs mov edx,esi
  412476:	fstp   QWORD PTR [ecx]
  412478:	ins    BYTE PTR es:[edi],dx
  412479:	ins    BYTE PTR es:[edi],dx
  41247a:	mov    esp,DWORD PTR [edx-0x31aa0b5a]
  412480:	push   eax
  412481:	sub    al,0x2f
  412483:	stos   DWORD PTR es:[edi],eax
  412484:	or     al,0x9a
  412486:	test   al,0x5
  412488:	xor    cl,BYTE PTR ds:0x54eac206
  41248e:	adc    eax,0xc3a25b8f
  412493:	ficom  WORD PTR ds:0xd7b0ad4d
  412499:	sub    DWORD PTR [ecx-0x46],ebx
  41249c:	out    0xb3,al
  41249e:	sub    ebx,edx
  4124a0:	jae    0x412481
  4124a2:	xlat   BYTE PTR ds:[ebx]
  4124a3:	inc    esp
  4124a4:	inc    ebp
  4124a5:	dec    ecx
  4124a6:	les    ecx,FWORD PTR [esi]
  4124a8:	pusha  
  4124a9:	fstp   TBYTE PTR [ecx-0x31]
  4124ac:	ds (bad) 
  4124ae:	std    
  4124af:	xchg   esi,eax
  4124b0:	push   esi
  4124b1:	mov    ch,0xf6
  4124b3:	dec    esi
  4124b4:	jp     0x4124eb
  4124b6:	mov    ch,0xde
  4124b8:	mov    edi,DWORD PTR [edx+0x14]
  4124bb:	jo     0x4124c0
  4124bd:	jp     0x4124cf
  4124bf:	or     eax,0xba493121
  4124c4:	or     al,0x55
  4124c6:	scas   eax,DWORD PTR es:[edi]
  4124c7:	in     al,dx
  4124c8:	pop    ecx
  4124c9:	test   eax,0x456eedda
  4124ce:	inc    esi
  4124cf:	idiv   ebx
  4124d1:	pop    eax
  4124d2:	(bad)  
  4124d4:	mov    cl,0xa9
  4124d6:	loopne 0x41251f
  4124d8:	sbb    eax,0xc14d066e
  4124dd:	scas   al,BYTE PTR es:[edi]
  4124de:	push   ebx
  4124df:	test   ax,0x5317
  4124e3:	loopne 0x412513
  4124e5:	pop    ebp
  4124e6:	ss jbe 0x41252a
  4124e9:	inc    DWORD PTR [ebp-0x77b068a2]
  4124ef:	or     esi,esp
  4124f1:	in     eax,dx
  4124f2:	arpl   WORD PTR [esi],dx
  4124f4:	cli    
  4124f5:	jnp    0x412553
  4124f7:	mov    bl,0x8a
  4124f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124fa:	repz jle 0x41256b
  4124fd:	mov    edx,0x31d33c89
  412502:	pop    edi
  412503:	add    ebp,esp
  412505:	fmul   QWORD PTR [ecx]
  412507:	cwde   
  412508:	sub    BYTE PTR [esi+0x6e],ah
  41250b:	or     edx,DWORD PTR [ecx]
  41250d:	dec    DWORD PTR [ecx-0x7d50b85]
  412513:	das    
  412514:	iret   
  412515:	or     BYTE PTR ds:0x5aa145af,ah
  41251b:	ror    BYTE PTR [eax-0x56],0xc5
  41251f:	retf   0x4302
  412522:	test   BYTE PTR [ebx+ecx*8+0x72dd7143],ah
  412529:	leave  
  41252a:	mov    DWORD PTR [edx+0x13],esi
  41252d:	fbstp  TBYTE PTR [edi+ebx*4+0x63156e83]
  412534:	sbb    DWORD PTR [ebx-0x6ee074f8],ebp
  41253a:	out    dx,al
  41253b:	loop   0x4125ba
  41253d:	lods   eax,DWORD PTR ds:[esi]
  41253e:	ins    BYTE PTR es:[edi],dx
  41253f:	xchg   edi,eax
  412540:	xchg   ebx,eax
  412541:	in     al,dx
  412542:	jecxz  0x412510
  412544:	jg     0x41254b
  412546:	jns    0x412560
  412548:	loopne 0x4125c6
  41254a:	push   edx
  41254b:	ret    0xd7d6
  41254e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41254f:	fnstenv [edi]
  412551:	jecxz  0x4125a9
  412553:	fst    DWORD PTR [ebp+0x66]
  412556:	mov    dh,BYTE PTR [ebp+0x3e]
  412559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41255a:	dec    edx
  41255b:	sbb    DWORD PTR [ecx+0x3e5ddb29],eax
  412561:	ror    DWORD PTR [ebp-0x66b093bb],0xb2
  412568:	not    al
  41256a:	cmp    BYTE PTR [edx],al
  41256c:	les    esp,FWORD PTR [edx-0x391cdc75]
  412572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412573:	dec    edx
  412574:	and    al,0x46
  412576:	lods   eax,DWORD PTR ds:[esi]
  412577:	stc    
  412578:	nop
  412579:	test   BYTE PTR [ebx+ecx*8+0x56e07442],0xa6
  412581:	lods   al,BYTE PTR ds:[esi]
  412582:	adc    DWORD PTR [eax],edx
  412584:	gs inc eax
  412586:	cmp    BYTE PTR [ebp-0x42f9fe1a],ch
  41258c:	mov    esi,0xa9c2dd69
  412591:	ficom  DWORD PTR [edx-0x24]
  412594:	adc    al,0x26
  412596:	push   cs
  412597:	rdtsc  
  412599:	pop    eax
  41259a:	sub    dl,BYTE PTR [edx]
  41259c:	aaa    
  41259d:	stos   BYTE PTR es:[edi],al
  41259e:	out    0x18,eax
  4125a0:	loopne 0x412523
  4125a2:	mov    ebx,0xead8fd3b
  4125a7:	mov    ah,0x34
  4125a9:	cmp    al,0x77
  4125ab:	push   esp
  4125ac:	and    edx,DWORD PTR [esp+ecx*4+0x40]
  4125b0:	pop    edx
  4125b1:	mov    esp,0xd18d4c92
  4125b6:	cmp    eax,ecx
  4125b8:	xlat   BYTE PTR ds:[ebx]
  4125b9:	xchg   esi,eax
  4125ba:	shl    bh,0x8c
  4125bd:	loop   0x4125b7
  4125bf:	dec    esp
  4125c0:	jl     0x4125a0
  4125c2:	mov    ds:0x6fc85717,al
  4125c7:	lea    edx,[esi+0x428c71d3]
  4125cd:	ja     0x412595
  4125cf:	cmp    ebx,DWORD PTR [ebp-0x7b1fe1c3]
  4125d5:	sub    dl,0x8c
  4125d8:	aam    0x5f
  4125da:	hlt    
  4125db:	push   cs
  4125dc:	dec    ecx
  4125dd:	mov    BYTE PTR [eax-0x7f],dh
  4125e0:	xlat   BYTE PTR ds:[ebx]
  4125e1:	mov    edx,0x32e4c362
  4125e6:	jnp    0x412571
  4125e8:	add    eax,0x1a
  4125eb:	pop    esp
  4125ec:	int    0xe7
  4125ee:	sub    ecx,DWORD PTR [ebx+0x7d29662]
  4125f4:	mov    dh,0x65
  4125f6:	push   0x63
  4125f8:	sub    BYTE PTR [ebp+0x5f],dl
  4125fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125fc:	aaa    
  4125fd:	nop
  4125fe:	stc    
  4125ff:	mov    al,0xa8
  412601:	imul   esi,DWORD PTR [ecx+0x54],0x2f
  412605:	adc    BYTE PTR [edx+edi*1-0x3f607316],ch
  41260c:	mov    BYTE PTR [edi+0x612035fa],ah
  412612:	xchg   edi,eax
  412613:	std    
  412614:	test   BYTE PTR [ebp+esi*8+0x68],0xce
  412619:	daa    
  41261a:	cmp    al,0x53
  41261c:	push   eax
  41261d:	push   ebp
  41261e:	scas   al,BYTE PTR es:[edi]
  41261f:	in     eax,dx
  412620:	bndstx [ebx],(bad)
  412623:	sub    dh,BYTE PTR ds:0x5f0ee409
  412629:	mov    WORD PTR [eax],cs
  41262b:	inc    esi
  41262c:	jmp    0x412686
  41262e:	jno    0x4125c0
  412630:	xor    edx,DWORD PTR ds:0x16def9a
  412636:	jl     0x412655
  412638:	adc    ch,BYTE PTR [esi-0x6d181778]
  41263e:	mov    WORD PTR [esi-0x4617ccc3],?
  412644:	xchg   edi,eax
  412645:	mov    DWORD PTR [edi],eax
  412647:	dec    esi
  412648:	mov    dl,0x4d
  41264a:	jmp    0xac0a594
  41264f:	stos   BYTE PTR es:[edi],al
  412650:	fnsave ss:[ebp+0x27]
  412654:	scas   eax,DWORD PTR es:[edi]
  412655:	adc    al,0x3f
  412657:	imul   DWORD PTR [esi]
  412659:	jne    0x412666
  41265b:	es into 
  41265d:	jl     0x41265f
  41265f:	cmp    eax,ebp
  412661:	ret    
  412662:	inc    ecx
  412663:	pop    ebx
  412664:	enter  0x64a1,0x22
  412668:	arpl   WORD PTR [edi+edx*2+0x53],dx
  41266c:	fldln2 
  41266e:	or     BYTE PTR [eax-0x53084319],bh
  412674:	inc    edx
  412675:	add    DWORD PTR [ebx],esp
  412677:	sar    BYTE PTR [edi-0x5086a657],0x68
  41267e:	pushf  
  41267f:	cmp    eax,0x8b918db8
  412684:	mov    ebx,0x92664428
  412689:	pusha  
  41268a:	leave  
  41268b:	add    esi,esp
  41268d:	loopne 0x4126b9
  41268f:	add    eax,0x503a656b
  412694:	and    eax,0xac764a9d
  412699:	or     al,0x86
  41269b:	sub    BYTE PTR [eax],0x1
  41269e:	mov    al,ds:0x4804e4a8
  4126a3:	sub    al,0xe0
  4126a5:	dec    eax
  4126a6:	(bad)  [esi]
  4126a8:	stos   DWORD PTR es:[edi],eax
  4126a9:	sbb    al,0x7f
  4126ab:	pop    ecx
  4126ac:	push   esi
  4126ad:	sbb    edx,DWORD PTR [eax+eax*4+0x53e98842]
  4126b4:	or     esp,DWORD PTR [ebp-0x5ce584ff]
  4126ba:	inc    esi
  4126bb:	out    0xdb,al
  4126bd:	imul   edx,DWORD PTR [edi-0x7b],0x9160d7e6
  4126c4:	test   eax,0x4dde679f
  4126c9:	lds    esp,FWORD PTR [ebp+0x7618b6b0]
  4126cf:	xor    DWORD PTR [edi-0x7c481c30],ecx
  4126d5:	jbe    0x4126b0
  4126d7:	dec    edx
  4126d8:	add    al,0xc
  4126da:	out    dx,eax
  4126db:	pop    ecx
  4126dc:	stos   DWORD PTR es:[edi],eax
  4126dd:	mov    eax,0x5a0365f4
  4126e2:	(bad)  
  4126e3:	into   
  4126e4:	out    dx,al
  4126e5:	nop
  4126e6:	gs enter 0x5080,0xc2
  4126eb:	mov    WORD PTR [eax-0x2c2e51b6],?
  4126f1:	shl    DWORD PTR [edi+edi*8-0x3882e6a1],cl
  4126f8:	std    
  4126f9:	test   al,0xa3
  4126fb:	or     eax,0xaf0090a1
  412700:	ds mov al,0x2a
  412703:	and    BYTE PTR [esi+0x25c9ecb2],dh
  412709:	push   edi
  41270a:	dec    eax
  41270b:	pop    edx
  41270c:	(bad)  
  41270d:	mov    eax,ds:0xe475fd86
  412712:	inc    edx
  412713:	mov    ch,0x60
  412715:	(bad)  
  412716:	repz xchg ebp,eax
  412718:	xchg   DWORD PTR [ecx-0x40],esi
  41271b:	(bad)  
  41271c:	mov    edx,0xf3923b07
  412721:	mov    esp,0xcc89b154
  412726:	adc    eax,0xd62cb783
  41272b:	(bad)  
  41272c:	in     al,0x8c
  41272e:	rol    BYTE PTR [bp+si+0x58],cl
  412732:	mov    ebp,0x9cb7641c
  412737:	xor    ecx,esp
  412739:	mov    esp,0xb7b5341
  41273e:	lods   eax,DWORD PTR ds:[esi]
  41273f:	jne    0x4126eb
  412741:	pop    eax
  412742:	rcr    BYTE PTR [esi+0xdef3ae3],cl
  412748:	call   0x711c:0xc1ed1172
  41274f:	data16 addr16 mov cl,0x0
  412753:	outs   dx,BYTE PTR ds:[esi]
  412754:	or     DWORD PTR [eax+ecx*8],esi
  412757:	addr16 mov ecx,0xcc5b6c4a
  41275d:	outs   dx,DWORD PTR ds:[esi]
  41275e:	std    
  41275f:	push   esp
  412760:	sbb    al,0x91
  412762:	test   eax,ebp
  412764:	cmp    DWORD PTR [ebp-0x26],esi
  412767:	mov    ch,BYTE PTR [ebx+0x71]
  41276a:	loope  0x4126f4
  41276c:	(bad)  
  41276d:	std    
  41276e:	inc    edi
  41276f:	cld    
  412770:	mov    al,0x85
  412772:	out    0x7b,al
  412774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412776:	jb     0x4127d3
  412778:	cmp    edi,DWORD PTR [ecx+eax*4-0xd]
  41277c:	mov    eax,DWORD PTR [ecx+eiz*4+0x2f5fb621]
  412783:	mov    DWORD PTR [ebp+0x5f],esp
  412786:	and    ch,BYTE PTR [edx]
  412788:	fadd   QWORD PTR [ebx+0x6]
  41278b:	daa    
  41278c:	and    eax,0x66ca21f3
  412791:	shr    DWORD PTR [ebp+ecx*8-0x54ac25c0],cl
  412798:	mov    ah,0xce
  41279a:	add    ah,BYTE PTR [edi-0x32551ff8]
  4127a0:	ja     0x412792
  4127a2:	mov    eax,0x3585d5b2
  4127a7:	mov    ebp,0xe7c8ac73
  4127ad:	pop    esp
  4127ae:	mov    ecx,0x9b1aa92f
  4127b3:	push   edi
  4127b4:	fdiv   DWORD PTR [ebp+ebp*2-0x63]
  4127b8:	dec    edi
  4127b9:	add    BYTE PTR [ebx-0x7b],al
  4127bc:	out    dx,al
  4127bd:	xor    eax,0x63a621a6
  4127c2:	jb     0x41279c
  4127c4:	add    ah,0xed
  4127c7:	shl    edi,0x7a
  4127ca:	mov    eax,0xa15eb44e
  4127cf:	gs mov ch,0x1
  4127d2:	retf   
  4127d3:	cmp    al,0x8c
  4127d5:	inc    edx
  4127d6:	mov    al,ds:0x6e7de998
  4127db:	hlt    
  4127dc:	outs   dx,DWORD PTR ds:[esi]
  4127dd:	inc    ebp
  4127de:	jmp    0x70b9:0x16639694
  4127e5:	sbb    esp,DWORD PTR [edx+0x57]
  4127e8:	or     DWORD PTR [edi+0x2b],esp
  4127eb:	jnp    0x412803
  4127ed:	ja     0x412849
  4127ef:	pushw  0x56
  4127f2:	and    DWORD PTR [edi-0x72],0xffffffb2
  4127f6:	js     0x412843
  4127f8:	sbb    BYTE PTR [edx],cl
  4127fa:	repz sbb eax,0xb53f5695
  412800:	(bad)  
  412801:	mov    esp,0x3291c08c
  412806:	lock arpl WORD PTR ds:0x1e72c778,di
  41280d:	fisubr DWORD PTR [eax]
  41280f:	loope  0x41286c
  412811:	rol    DWORD PTR [esi-0x39bbedf0],cl
  412817:	xchg   ebx,eax
  412818:	xchg   edx,eax
  412819:	xor    cl,dh
  41281b:	mov    edx,0x9482d189
  412820:	xor    eax,0x3d651da0
  412825:	div    dl
  412827:	mov    cl,0xf5
  412829:	xchg   edx,eax
  41282a:	xchg   BYTE PTR [edi+eax*2],cl
  41282d:	mov    ch,0xa
  41282f:	mov    ds:0x67502b78,eax
  412834:	cli    
  412835:	jae    0x4127f4
  412837:	call   0x14e6:0x2460856c
  41283e:	dec    edi
  41283f:	pop    esp
  412840:	mov    dh,0x7a
  412842:	popf   
  412843:	shl    bh,0x29
  412846:	test   al,0x10
  412848:	inc    esi
  412849:	repnz dec esi
  41284b:	jae    0x41288a
  41284d:	or     bl,bh
  41284f:	sub    al,0x38
  412851:	inc    edi
  412852:	loopne 0x41284f
  412854:	and    ch,BYTE PTR [eax]
  412856:	push   eax
  412857:	les    esi,FWORD PTR [edi+eax*1]
  41285a:	mov    WORD PTR [eax+0x34],fs
  41285d:	stos   DWORD PTR es:[edi],eax
  41285e:	fisub  DWORD PTR [ebp-0x35]
  412861:	pop    edx
  412862:	imul   ebx,DWORD PTR [edx-0x35],0x7d981af4
  412869:	js     0x412847
  41286b:	mov    al,0xe0
  41286d:	call   0xe051:0x57a92d8f
  412874:	mov    ebp,0x2fc346ca
  412879:	adc    DWORD PTR [ecx+0x64],edx
  41287c:	or     eax,0x4eb2d76e
  412881:	push   ebp
  412882:	push   esi
  412883:	fcmove st,st(1)
  412885:	xlat   BYTE PTR ds:[ebx]
  412886:	ins    BYTE PTR es:[edi],dx
  412887:	inc    ebx
  412888:	push   esi
  412889:	je     0x412903
  41288b:	lods   eax,DWORD PTR ds:[esi]
  41288c:	lahf   
  41288d:	xchg   esp,eax
  41288e:	xchg   edx,eax
  41288f:	icebp  
  412890:	mov    ecx,0xe36fd46f
  412895:	sub    al,0xdd
  412898:	sub    cl,bh
  41289a:	jl     0x412832
  41289c:	pop    es
  41289d:	or     al,0x91
  41289f:	lock repz dec esp
  4128a2:	iret   
  4128a3:	lock fnstcw WORD PTR [ebx+0x1be69b10]
  4128aa:	das    
  4128ab:	mov    ds:0xa6eb0024,al
  4128b0:	(bad)  
  4128b2:	neg    BYTE PTR [edx-0x1c4d14d0]
  4128b8:	add    eax,DWORD PTR [esi+0x17]
  4128bb:	test   al,0x23
  4128bd:	(bad)  
  4128be:	iret   
  4128bf:	(bad)  
  4128c0:	and    DWORD PTR [esi+0x54992c45],ebx
  4128c6:	inc    ebp
  4128c7:	test   al,0x75
  4128c9:	and    DWORD PTR [eax+0x6c],esp
  4128cc:	dec    ebp
  4128cd:	arpl   WORD PTR [edi+0x7f],di
  4128d0:	je     0x41288d
  4128d2:	in     eax,0x83
  4128d4:	and    ecx,ebp
  4128d6:	cmp    eax,0xad90704a
  4128db:	lahf   
  4128dc:	sbb    ebx,DWORD PTR [ebx]
  4128de:	push   edx
  4128df:	(bad)  cs:[ecx+0x24]
  4128e3:	fist   DWORD PTR [edx-0xc6fe003]
  4128e9:	and    ebp,DWORD PTR [eax+esi*1]
  4128ec:	dec    esi
  4128ed:	mov    ds:0x4fb2fc71,al
  4128f2:	(bad)  
  4128f4:	(bad)  
  4128f5:	stc    
  4128f6:	inc    edi
  4128f7:	cmp    al,0x20
  4128f9:	dec    esp
  4128fa:	(bad)  
  4128fb:	stc    
  4128fc:	add    eax,0x423ab7d4
  412901:	inc    edx
  412902:	mov    WORD PTR [edi+0x19],cs
  412905:	dec    ecx
  412906:	inc    edx
  412907:	stos   BYTE PTR es:[edi],al
  412908:	adc    ebx,esp
  41290a:	or     al,0x67
  41290c:	test   DWORD PTR [ebp+0x12],0x695e4a5e
  412913:	and    DWORD PTR [ebx+0x2a],edx
  412916:	(bad)  
  412917:	pop    esp
  412918:	call   0x2194:0xfede6e1a
  41291f:	outs   dx,BYTE PTR ds:[esi]
  412920:	pop    ds
  412921:	mov    ebx,0xe6007d53
  412926:	shl    DWORD PTR [edi-0x70ee3472],cl
  41292c:	aaa    
  41292d:	mov    WORD PTR [esi+0x4b],gs
  412930:	inc    DWORD PTR [edx+0x5d]
  412933:	mov    ds:0x44924134,eax
  412938:	push   0x2b
  41293a:	jns    0x41297e
  41293c:	add    BYTE PTR [esi],bl
  41293e:	adc    ebp,ebx
  412940:	push   cs
  412941:	push   ds
  412942:	or     eax,0xb68f319a
  412947:	imul   edi,DWORD PTR [edx-0x492de9d0],0xffffffff
  41294e:	in     al,dx
  41294f:	jmp    0x5628:0xd6c198c2
  412956:	and    dh,BYTE PTR [ebx-0x6a]
  412959:	cmc    
  41295a:	ds or  al,0xd
  41295d:	inc    ebp
  41295e:	cwde   
  41295f:	aad    0xa4
  412961:	jae    0x4128f3
  412963:	cmp    esp,eax
  412965:	inc    edi
  412966:	cli    
  412967:	imul   eax,DWORD PTR [ebp+0x7f575e9],0x4c41fc57
  412971:	xor    ebx,eax
  412973:	jnp    0x4129e0
  412975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412976:	outs   dx,DWORD PTR ds:[esi]
  412977:	shr    BYTE PTR [ebp-0xee0d563],cl
  41297d:	out    dx,eax
  41297e:	ret    0x55da
  412981:	cmp    bl,BYTE PTR [ebx+0x64823386]
  412987:	or     eax,DWORD PTR [ebp+edi*2+0x406a4fdf]
  41298e:	jge    0x4129c7
  412990:	(bad)  
  412992:	cmp    al,0xd6
  412994:	cmc    
  412995:	int3   
  412996:	sbb    esi,DWORD PTR [ecx-0x7b8633ba]
  41299c:	setl   BYTE PTR [eax+eiz*1]
  4129a0:	or     eax,0x4028c798
  4129a5:	arpl   WORD PTR [edx],cx
  4129a7:	or     BYTE PTR [esi-0x61aa41de],ah
  4129ad:	inc    DWORD PTR ds:0xa8240889
  4129b3:	mov    dl,0xba
  4129b5:	clc    
  4129b6:	fnstenv [ecx+0x4cc5a535]
  4129bc:	ret    0xd673
  4129bf:	mov    DWORD PTR [esi-0x4debb410],ebx
  4129c5:	add    al,0xd1
  4129c7:	pop    eax
  4129c8:	sub    BYTE PTR [ebx],dh
  4129ca:	sti    
  4129cb:	add    BYTE PTR [ebp-0x3f],ch
  4129ce:	adc    eax,0x91371055
  4129d3:	arpl   WORD PTR [ebp-0x5aa819f3],si
  4129d9:	shl    BYTE PTR [esi-0x70370267],cl
  4129df:	sub    al,0x23
  4129e1:	jmp    0x412a2d
  4129e3:	xor    ebp,0xffffff8c
  4129e6:	xor    DWORD PTR [ebp+0x74],ebx
  4129e9:	arpl   WORD PTR [ebp+0x3a],di
  4129ec:	cwde   
  4129ed:	or     BYTE PTR [esi],ah
  4129ef:	adc    BYTE PTR [ecx-0x7f3fcaba],ah
  4129f5:	les    ebx,FWORD PTR [ebx]
  4129f7:	inc    edi
  4129f8:	mov    ds:0xb6a8057f,al
  4129fd:	mov    eax,ds:0x86298ec9
  412a02:	mov    ds:0x6f9bdc64,al
  412a07:	ins    BYTE PTR es:[edi],dx
  412a08:	mov    ecx,0x65aa96a2
  412a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a0e:	mov    esi,0x62e23691
  412a13:	stos   BYTE PTR es:[edi],al
  412a14:	bound  edi,QWORD PTR [ebx+0x74]
  412a17:	inc    ebx
  412a18:	in     eax,0x31
  412a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a1b:	and    esi,0x8870901f
  412a21:	rcr    BYTE PTR [ecx+0x4de6cd44],cl
  412a27:	dec    esp
  412a28:	fwait
  412a29:	(bad)  
  412a2a:	cmp    edi,edi
  412a2c:	or     BYTE PTR [ebx+0xd50c6a4],ah
  412a32:	cmc    
  412a33:	push   0x39d231fb
  412a38:	and    al,0x4e
  412a3a:	adc    ecx,DWORD PTR [esi+0x3b30fb10]
  412a40:	mov    dh,0x8d
  412a42:	and    BYTE PTR [edx+0x19738ee0],dl
  412a48:	fild   DWORD PTR [ebx+0x2c]
  412a4b:	popf   
  412a4c:	cmp    BYTE PTR [ebx-0xad6b250],ah
  412a52:	pop    edi
  412a53:	inc    edi
  412a54:	imul   esi
  412a56:	cs into 
  412a58:	sub    esi,esp
  412a5a:	ror    DWORD PTR [ebp-0x64cc2ebe],0xb
  412a61:	jg     0x412a64
  412a63:	jmp    0x4274:0xcd85
  412a69:	jnp    0x412a68
  412a6b:	adc    eax,0x12106a0a
  412a70:	cmp    al,0x56
  412a72:	inc    esi
  412a73:	fidivr DWORD PTR [ecx]
  412a75:	jnp    0x412af1
  412a77:	aam    0xf2
  412a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a7a:	add    eax,0xd3141910
  412a7f:	dec    edi
  412a80:	dec    ecx
  412a81:	xor    esi,DWORD PTR [eax+esi*4+0x39427ac7]
  412a88:	jmp    0x412aaf
  412a8a:	icebp  
  412a8b:	xor    eax,0x7c2c3363
  412a90:	ss push ecx
  412a92:	jbe    0x412ad7
  412a94:	jg     0x412b11
  412a96:	jne    0x412a5e
  412a98:	cmc    
  412a99:	ins    DWORD PTR es:[edi],dx
  412a9a:	aad    0x7b
  412a9c:	inc    ebp
  412a9d:	pushf  
  412a9e:	mov    eax,ds:0xd6296a7d
  412aa3:	inc    ebp
  412aa4:	jb     0x412a4c
  412aa6:	mov    ah,0xe4
  412aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aa9:	xchg   ebx,eax
  412aaa:	test   BYTE PTR ds:0x94304e73,0x90
  412ab1:	mov    eax,ds:0xd34c4231
  412ab6:	dec    esp
  412ab7:	push   0x61
  412ab9:	sub    al,0x23
  412abb:	adc    al,0xc6
  412abd:	and    DWORD PTR [eax+0x4c743b4e],0xc6dd190e
  412ac7:	iret   
  412ac8:	mov    esi,0xf953f76f
  412acd:	push   es
  412ace:	mov    al,0xc8
  412ad0:	mov    DWORD PTR [edx+0x4deddf5a],edi
  412ad6:	push   ebp
  412ad7:	mov    ch,0xe
  412ad9:	loop   0x412b1e
  412adb:	xchg   ecx,eax
  412adc:	adc    al,0xc0
  412ade:	cmp    DWORD PTR [esi+ecx*4],edx
  412ae1:	ds dec esi
  412ae3:	sub    ecx,ecx
  412ae5:	inc    ebp
  412ae6:	sti    
  412ae7:	sbb    ecx,edi
  412ae9:	les    ebp,FWORD PTR [edi]
  412aeb:	mov    al,ds:0x4959b1bc
  412af0:	test   BYTE PTR [esp+edi*4+0x6b50a3c5],cl
  412af7:	cmp    eax,0xbac503a0
  412afc:	pusha  
  412afd:	mov    edi,0x2e771c4d
  412b02:	retf   
  412b03:	push   esi
  412b04:	and    DWORD PTR [edx],eax
  412b06:	arpl   WORD PTR [eax-0x5d],di
  412b09:	je     0x412b18
  412b0b:	jecxz  0x412b5a
  412b0d:	jns    0x412b04
  412b0f:	push   esp
  412b10:	fidivr DWORD PTR [ebp+0x37b3197e]
  412b16:	sub    BYTE PTR [eax],ch
  412b18:	sub    eax,0x8c4382c6
  412b1d:	popf   
  412b1e:	ss xchg ecx,eax
  412b20:	mov    al,0x37
  412b22:	dec    esi
  412b23:	and    BYTE PTR [ebx+0x28],0x83
  412b27:	mov    esp,0x4400f410
  412b2c:	retf   
  412b2d:	aaa    
  412b2e:	scas   eax,DWORD PTR es:[edi]
  412b2f:	pop    esi
  412b30:	mov    dl,0x6c
  412b32:	push   ebx
  412b33:	popf   
  412b34:	addr16 inc ecx
  412b36:	pop    ecx
  412b37:	es scas eax,DWORD PTR es:[edi]
  412b39:	ss cmp eax,0xfbf55c75
  412b3f:	retf   
  412b40:	fs push ecx
  412b42:	(bad)  
  412b43:	jmp    0x412b0e
  412b45:	rcl    BYTE PTR [ebp+0x57],0x45
  412b49:	xchg   cl,ah
  412b4b:	nop
  412b4c:	sar    BYTE PTR [esi],0x86
  412b4f:	int3   
  412b50:	or     esp,DWORD PTR [eax-0x64aefce2]
  412b56:	rol    DWORD PTR [ebx-0x1abf7f77],cl
  412b5c:	sub    eax,0xf4d3df60
  412b61:	jbe    0x412b5c
  412b63:	retf   
  412b64:	pop    es
  412b65:	out    dx,eax
  412b66:	cs cmp eax,0xa99aba2f
  412b6c:	clc    
  412b6d:	jns    0x412bd0
  412b6f:	dec    ecx
  412b70:	sub    al,0xeb
  412b72:	and    bl,BYTE PTR [edx+0x692653c8]
  412b78:	push   0x84f7d796
  412b7d:	popa   
  412b7e:	js     0x412b6e
  412b80:	je     0x412ba1
  412b82:	jl     0x412bd0
  412b84:	xor    al,0x74
  412b86:	push   cs
  412b87:	add    al,0x85
  412b89:	int3   
  412b8a:	scas   eax,DWORD PTR es:[edi]
  412b8b:	inc    eax
  412b8c:	or     eax,0x1f18020a
  412b91:	sahf   
  412b92:	and    ebp,edi
  412b94:	out    0x51,al
  412b96:	jnp    0x412b7d
  412b98:	scas   al,BYTE PTR es:[edi]
  412b99:	imul   edx,esi,0xffffffb7
  412b9c:	shr    DWORD PTR [esp+edi*2+0x68],1
  412ba0:	push   esi
  412ba1:	idiv   DWORD PTR [edi]
  412ba3:	jo     0x412be9
  412ba5:	dec    ebx
  412ba6:	or     BYTE PTR [ebx-0x2f46c8a9],0x1c
  412bad:	mov    dl,0xf4
  412baf:	pop    ebp
  412bb0:	repnz push ecx
  412bb2:	adc    eax,0xe67fd868
  412bb7:	mov    DWORD PTR [ecx+0xe],edx
  412bba:	fadd   QWORD PTR [esi-0x40318385]
  412bc0:	or     DWORD PTR [eax],ebp
  412bc2:	xchg   edx,eax
  412bc3:	inc    eax
  412bc4:	add    bh,bl
  412bc6:	pop    ebp
  412bc7:	pop    ds
  412bc8:	hlt    
  412bc9:	sbb    BYTE PTR [edi],ah
  412bcb:	adc    al,0xc3
  412bcd:	pop    ebp
  412bce:	ret    
  412bcf:	push   0xffffffc6
  412bd1:	sbb    edx,DWORD PTR [ebx]
  412bd3:	jle    0x412bea
  412bd5:	dec    edx
  412bd6:	popf   
  412bd7:	fdivrp st(4),st
  412bd9:	sub    eax,0xffa57c49
  412bde:	stos   BYTE PTR es:[edi],al
  412bdf:	fcom   st(6)
  412be1:	aad    0x1
  412be3:	bound  esi,QWORD PTR [edx+0x67]
  412be6:	or     DWORD PTR [edx-0x7f],esi
  412be9:	pop    ss
  412bea:	dec    ebx
  412beb:	add    BYTE PTR [esi],ch
  412bed:	adc    eax,0xc822876f
  412bf2:	loop   0x412c1b
  412bf4:	and    eax,0x1616e86
  412bf9:	push   ecx
  412bfa:	adc    bh,dl
  412bfc:	inc    edx
  412bfd:	pop    ebp
  412bfe:	(bad)  
  412bff:	in     al,dx
  412c00:	push   ebp
  412c01:	mov    ebp,0x9bda1517
  412c06:	inc    eax
  412c07:	scas   al,BYTE PTR es:[edi]
  412c08:	jge    0x412c35
  412c0a:	fldenv [esp+ecx*2]
  412c0d:	rcr    BYTE PTR [eax+0x6ae5eea8],0xfe
  412c14:	xchg   DWORD PTR [esi-0x7ba8b60b],esp
  412c1a:	retf   
  412c1b:	int3   
  412c1c:	mov    al,0x33
  412c1e:	cmp    bh,BYTE PTR [edi]
  412c20:	lock and DWORD PTR [eax-0x2d890b33],esi
  412c27:	mov    ch,BYTE PTR [eax-0x74227740]
  412c2d:	push   0xb56c60a8
  412c32:	xor    BYTE PTR [edi+0x552e2435],ah
  412c38:	mov    DWORD PTR [ebx-0x2d],eax
  412c3b:	lods   eax,DWORD PTR ds:[esi]
  412c3c:	push   esi
  412c3d:	pop    eax
  412c3e:	adc    BYTE PTR gs:[edx],al
  412c41:	inc    ebx
  412c42:	xor    eax,0xd900f321
  412c47:	jb     0x412c38
  412c49:	shr    ch,cl
  412c4b:	iret   
  412c4c:	mov    al,ds:0x4d387244
  412c51:	adc    al,0xf9
  412c53:	and    esi,DWORD PTR [ecx+eiz*2-0x6]
  412c57:	stos   DWORD PTR es:[edi],eax
  412c58:	pop    ebx
  412c59:	(bad)  
  412c5a:	jo     0x412cb7
  412c5c:	jmp    0x7f5ad3ab
  412c61:	fwait
  412c62:	xlat   BYTE PTR ds:[ebx]
  412c63:	stos   BYTE PTR es:[edi],al
  412c64:	dec    esp
  412c65:	call   0xef13:0x1eb2d0bf
  412c6c:	inc    edx
  412c6d:	adc    al,BYTE PTR [ecx+0x63]
  412c70:	or     ebp,ebp
  412c72:	xchg   ecx,eax
  412c73:	das    
  412c74:	sub    edx,DWORD PTR [edx+0x1d]
  412c77:	push   edi
  412c78:	lahf   
  412c79:	adc    al,0x2
  412c7b:	jo     0x412c36
  412c7d:	scas   eax,DWORD PTR es:[edi]
  412c7e:	(bad)  
  412c7f:	retf   
  412c80:	jne    0x412c60
  412c82:	pop    eax
  412c83:	sahf   
  412c84:	push   0xfffffffa
  412c86:	mov    bl,0x36
  412c88:	or     al,0x7b
  412c8a:	dec    esi
  412c8b:	fistp  DWORD PTR [esi]
  412c8d:	add    BYTE PTR [eax],cl
  412c8f:	xchg   edi,eax
  412c90:	(bad)  
  412c92:	mov    al,ds:0xd39905df
  412c97:	mov    ch,0xb4
  412c99:	inc    eax
  412c9a:	addr16 loopne 0x412c53
  412c9d:	gs sub al,ah
  412ca0:	inc    edi
  412ca1:	(bad)  
  412ca2:	call   0x82e4:0xca274736
  412ca9:	push   esp
  412caa:	stos   DWORD PTR es:[edi],eax
  412cab:	push   eax
  412cac:	leave  
  412cad:	std    
  412cae:	fwait
  412caf:	xchg   edx,eax
  412cb0:	fisub  DWORD PTR [ebx+0x26611cab]
  412cb6:	sbb    al,0x70
  412cb8:	in     eax,0xc1
  412cba:	xor    bh,al
  412cbc:	inc    edx
  412cbd:	sub    ch,BYTE PTR [edi]
  412cbf:	(bad)  
  412cc0:	arpl   WORD PTR fs:[esi-0x60],bp
  412cc4:	push   ebp
  412cc5:	cmp    al,0x95
  412cc7:	ret    0x68b7
  412cca:	cmc    
  412ccb:	add    eax,0x63df8cf
  412cd0:	inc    edx
  412cd1:	mov    ecx,ecx
  412cd3:	xor    DWORD PTR [esi+0x4fa096a9],ebp
  412cd9:	xchg   edi,eax
  412cda:	popa   
  412cdb:	xor    BYTE PTR [ecx-0x5267223f],bh
  412ce1:	gs icebp 
  412ce3:	push   ebx
  412ce4:	mov    bl,0xb9
  412ce6:	adc    edx,ebp
  412ce8:	inc    ebp
  412ce9:	ret    
  412cea:	jbe    0x412d19
  412cec:	xor    al,0xcc
  412cee:	stos   BYTE PTR es:[edi],al
  412cef:	cmp    al,al
  412cf1:	popf   
  412cf2:	lds    esi,FWORD PTR [ebp+0x25]
  412cf5:	xor    eax,0xfa48dea0
  412cfa:	sub    DWORD PTR [edx],ebp
  412cfc:	mov    eax,ds:0x4c481bd8
  412d01:	dec    edx
  412d02:	lahf   
  412d03:	adc    BYTE PTR [ebp-0x316f363a],0x8f
  412d0a:	push   es
  412d0b:	out    dx,eax
  412d0c:	loope  0x412d5f
  412d0e:	xor    edi,DWORD PTR [eax+0x5057eb6a]
  412d14:	and    eax,0x48c16fbf
  412d19:	and    DWORD PTR [esi],eax
  412d1b:	enter  0x4a3b,0xc1
  412d1f:	and    DWORD PTR [edx],0x23607c25
  412d25:	out    dx,eax
  412d26:	leave  
  412d27:	inc    ebp
  412d28:	in     eax,0xf1
  412d2a:	jge    0x412d94
  412d2c:	xlat   BYTE PTR ds:[ebx]
  412d2d:	or     ah,BYTE PTR [esi+edi*2-0x51]
  412d31:	sti    
  412d32:	loopne 0x412cd1
  412d34:	or     bh,ch
  412d36:	mov    eax,ds:0xcc7218c1
  412d3b:	les    ebx,FWORD PTR [edx+0x218e3cd6]
  412d41:	int3   
  412d42:	pushf  
  412d43:	jl     0x412d71
  412d45:	(bad)  
  412d46:	icebp  
  412d47:	xchg   esp,eax
  412d48:	mov    ebp,0xe42f61f8
  412d4d:	or     DWORD PTR [edx+0x73b857a6],eax
  412d53:	sbb    DWORD PTR [edi+0x78],ebp
  412d56:	sti    
  412d57:	sbb    BYTE PTR [edx-0x55ab881e],bh
  412d5d:	xchg   DWORD PTR [eax+0x75],eax
  412d60:	cmc    
  412d61:	mov    ebx,0xaff2a78f
  412d66:	pop    eax
  412d67:	or     eax,0xb3656c18
  412d6c:	(bad)
  412d6f:	in     al,dx
  412d70:	sub    al,0xc6
  412d72:	mov    eax,ebp
  412d74:	xor    eax,0x86583b14
  412d79:	leave  
  412d7a:	mov    gs,WORD PTR [edi+0x2a]
  412d7d:	push   0xffffffa4
  412d7f:	lock fwait
  412d81:	jg     0x412d9f
  412d83:	xchg   ah,dh
  412d85:	or     BYTE PTR [eax-0x6c8603a8],cl
  412d8b:	sbb    eax,0xa355f9ae
  412d90:	int    0x9c
  412d92:	add    eax,ecx
  412d94:	adc    BYTE PTR [ecx-0x63231390],ah
  412d9a:	dec    esi
  412d9b:	push   edx
  412d9c:	xchg   ecx,eax
  412d9d:	push   ebp
  412d9e:	and    eax,0xe2820bd5
  412da3:	mov    eax,ds:0xdd93a698
  412da8:	(bad)  
  412da9:	out    dx,eax
  412daa:	jnp    0x412d70
  412dac:	les    ecx,FWORD PTR [eax]
  412dae:	sbb    DWORD PTR ds:0x4f54523,edx
  412db4:	mov    ds,WORD PTR [ebx]
  412db6:	jp     0x412dbd
  412db8:	outs   dx,DWORD PTR ds:[esi]
  412db9:	test   dl,al
  412dbb:	sub    BYTE PTR [eax+0x6edc9c05],al
  412dc1:	imul   edi,DWORD PTR [edi+0x68c49495],0xffffff97
  412dc8:	xor    ecx,ebp
  412dca:	in     eax,0x6b
  412dcc:	aad    0xc3
  412dce:	sub    ecx,DWORD PTR [edi+0x7e]
  412dd1:	adc    edi,ebp
  412dd3:	or     dh,ah
  412dd5:	retf   
  412dd6:	sbb    al,0x9a
  412dd8:	imul   edx,DWORD PTR [esi],0x6421d71c
  412dde:	js     0x412e31
  412de0:	test   al,0xc
  412de2:	fiadd  DWORD PTR ds:[edx-0x63fffa3f]
  412de9:	jl     0x412e16
  412deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dec:	xchg   ecx,eax
  412ded:	push   edx
  412dee:	sti    
  412def:	call   0xbea1:0xc95b1be
  412df6:	push   cs
  412df7:	dec    esp
  412df8:	pop    esp
  412df9:	or     ebx,DWORD PTR [eax]
  412dfb:	arpl   WORD PTR [eax],dx
  412dfd:	sbb    DWORD PTR [ecx],edi
  412dff:	repnz mov ecx,0xfb39b240
  412e05:	mov    bh,0x6e
  412e07:	imul   ecx,esp,0x4f3bdc3a
  412e0d:	xchg   esp,edx
  412e0f:	cmp    BYTE PTR [ebp-0x3a],ch
  412e12:	ret    0x7589
  412e15:	bound  ebp,QWORD PTR [ecx+0x9b08ac5]
  412e1b:	xchg   esi,eax
  412e1c:	aad    0x5f
  412e1e:	adc    BYTE PTR [eax-0x1d],ch
  412e21:	div    edx
  412e23:	in     eax,dx
  412e24:	adc    DWORD PTR [ebp-0x7d3661e3],ecx
  412e2a:	in     eax,dx
  412e2b:	xor    al,0xd
  412e2d:	jae    0x412e31
  412e2f:	inc    edx
  412e30:	in     eax,0x32
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	sbb    ecx,ebp
  412e35:	invd   
  412e37:	xchg   esp,eax
  412e38:	xchg   ebx,eax
  412e39:	lods   eax,DWORD PTR ds:[esi]
  412e3a:	and    esp,ebp
  412e3c:	rcl    DWORD PTR [ebp+0x45],0xa3
  412e40:	es dec esp
  412e42:	sub    eax,0x3fbe9b7b
  412e47:	mov    cs,WORD PTR [ebx-0x3c]
  412e4a:	mov    ebp,0xd7e61230
  412e4f:	das    
  412e50:	in     al,0x95
  412e52:	jns    0x412e70
  412e54:	pop    ebp
  412e55:	in     al,0x37
  412e57:	rol    DWORD PTR [esp+ecx*4+0x119b842b],0xf3
  412e5f:	int    0x57
  412e61:	pop    edi
  412e62:	inc    esi
  412e63:	adc    ch,BYTE PTR [ebx-0x65bf5733]
  412e69:	shr    DWORD PTR [edi+0x40],cl
  412e6c:	frstor [edi]
  412e6e:	xchg   ebx,eax
  412e6f:	adc    eax,0xd35d0b57
  412e74:	dec    ecx
  412e75:	out    dx,al
  412e76:	xchg   BYTE PTR [edi],ch
  412e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e79:	lock jb 0x412ec6
  412e7c:	push   ecx
  412e7d:	push   eax
  412e7e:	in     al,0x17
  412e80:	inc    ecx
  412e81:	aad    0x3f
  412e83:	(bad)  
  412e84:	out    0xe1,al
  412e86:	jo     0x412ea5
  412e88:	mov    al,ds:0x2d48fece
  412e8d:	jae    0x412eab
  412e8f:	sbb    eax,0x7fb7c925
  412e94:	aas    
  412e95:	add    DWORD PTR [edi-0x7e],eax
  412e98:	adc    ebx,DWORD PTR [ebx+0x61]
  412e9b:	mov    ebx,0x58c6bb14
  412ea0:	pop    edx
  412ea1:	scas   al,BYTE PTR es:[edi]
  412ea2:	fstp   QWORD PTR [ebx]
  412ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ea5:	cli    
  412ea6:	dec    esp
  412ea7:	fwait
  412ea8:	sub    bh,BYTE PTR [eax+0x4970ed13]
  412eae:	jns    0x412e5d
  412eb0:	pop    es
  412eb1:	adc    bl,BYTE PTR [edx+0x2]
  412eb4:	cmp    BYTE PTR [eax+0x14d52f2d],dh
  412eba:	jns    0x412f1b
  412ebc:	cs and ebp,ecx
  412ebf:	mov    al,0xe8
  412ec1:	push   eax
  412ec2:	dec    ecx
  412ec3:	mov    ch,0x72
  412ec5:	jo     0x412f35
  412ec7:	adc    DWORD PTR [edi+edx*2-0x2e],0x7819f64d
  412ecf:	sti    
  412ed0:	aas    
  412ed1:	(bad)  
  412ed2:	pop    esp
  412ed3:	pop    ebp
  412ed4:	ins    DWORD PTR es:[edi],dx
  412ed5:	into   
  412ed6:	sub    DWORD PTR ds:[ebp+0x904ad2c],ebp
  412edd:	dec    edi
  412ede:	pushf  
  412edf:	and    edx,0x52
  412ee2:	lods   eax,DWORD PTR ds:[esi]
  412ee3:	dec    eax
  412ee4:	lahf   
  412ee5:	ret    
  412ee6:	mov    dl,0x5a
  412ee8:	pop    edi
  412ee9:	pop    es
  412eea:	pushf  
  412eeb:	xlat   BYTE PTR ds:[ebx]
  412eec:	inc    ebp
  412eed:	and    edx,DWORD PTR [edi+0x6b]
  412ef0:	push   ebp
  412ef1:	js     0x412eba
  412ef3:	sti    
  412ef4:	lds    ebx,FWORD PTR [ebp+0x2908c36a]
  412efa:	mov    ebx,0xa39c44d9
  412eff:	dec    ebp
  412f00:	jo     0x412ece
  412f02:	mov    bh,0xd0
  412f04:	fist   WORD PTR [edi+0x6e]
  412f07:	(bad)  
  412f08:	jo     0x412f7b
  412f0a:	ins    DWORD PTR es:[edi],dx
  412f0b:	sub    al,BYTE PTR [eax+0x4f]
  412f0e:	dec    edi
  412f0f:	clc    
  412f10:	inc    edi
  412f11:	call   0x9880:0xe3292114
  412f18:	mov    eax,0xc0701f28
  412f1d:	aad    0x9a
  412f1f:	out    dx,eax
  412f20:	jle    0x412f84
  412f22:	(bad)  
  412f23:	push   ebp
  412f24:	mov    eax,0xf8bf5cdc
  412f29:	mov    cl,0xe
  412f2b:	sar    BYTE PTR [esi+eiz*1-0x17d3a2c4],1
  412f32:	pop    ds
  412f33:	pop    edi
  412f34:	push   esi
  412f35:	hlt    
  412f36:	(bad)  
  412f37:	test   eax,0x71bed54
  412f3c:	push   es
  412f3d:	les    eax,FWORD PTR [ebx-0x491fb605]
  412f43:	in     eax,0x58
  412f45:	jo     0x412f27
  412f47:	push   esi
  412f48:	pusha  
  412f49:	out    dx,eax
  412f4a:	ficomp WORD PTR [esi-0x49]
  412f4d:	aaa    
  412f4e:	xor    eax,0x57839544
  412f53:	push   ecx
  412f54:	ret    0x2fbf
  412f57:	shl    BYTE PTR [eax-0x5101354f],1
  412f5d:	ins    BYTE PTR es:[edi],dx
  412f5e:	mov    esp,0xcf08cada
  412f63:	and    BYTE PTR [edi+eax*1-0x21d90aaf],bl
  412f6a:	jno    0x412f3c
  412f6c:	mov    cl,0x8e
  412f6e:	cli    
  412f6f:	or     eax,0x5d75917
  412f74:	sub    al,0xc5
  412f76:	std    
  412f77:	jle    0x412efc
  412f79:	out    dx,al
  412f7a:	scas   eax,DWORD PTR es:[edi]
  412f7b:	inc    ebp
  412f7c:	push   esi
  412f7d:	in     eax,dx
  412f7e:	jae    0x412f06
  412f80:	mov    ebx,DWORD PTR [ebx-0x7a]
  412f83:	or     DWORD PTR [ebp+0x28ce9712],0x3a
  412f8a:	retf   
  412f8b:	ds dec ebp
  412f8d:	xor    eax,DWORD PTR [edx-0x1997c5ab]
  412f93:	pop    ss
  412f94:	mov    esi,0x3e7de6ae
  412f99:	rcl    esp,1
  412f9b:	gs push ebp
  412f9d:	out    0xa6,al
  412f9f:	in     eax,dx
  412fa0:	push   cs
  412fa1:	mov    ds:0xa1ad8ea2,al
  412fa6:	sub    al,0x3c
  412fa8:	dec    ebp
  412fa9:	retf   0xeff
  412fac:	adc    ch,0x35
  412faf:	(bad)  
  412fb0:	sbb    DWORD PTR [edx-0x65],ebx
  412fb3:	xchg   ebx,eax
  412fb4:	jmp    0x4b5f:0xff7a6ca0
  412fbb:	cmp    ebx,edi
  412fbd:	sbb    DWORD PTR [ebp-0x2aade1f0],esi
  412fc3:	pop    edi
  412fc4:	add    bl,al
  412fc6:	mov    dl,0xb8
  412fc8:	retf   
  412fc9:	add    BYTE PTR [eax-0x5d4203ef],al
  412fcf:	xor    BYTE PTR [eax],dl
  412fd1:	les    edi,FWORD PTR [ecx+0x4f]
  412fd4:	xchg   esi,eax
  412fd5:	test   BYTE PTR [esi-0x3c],bh
  412fd8:	push   ebx
  412fd9:	xchg   bh,al
  412fdb:	lods   al,BYTE PTR ds:[esi]
  412fdc:	test   eax,0x24b11eb0
  412fe1:	dec    ebx
  412fe2:	retf   
  412fe3:	xchg   esi,eax
  412fe4:	dec    eax
  412fe5:	xchg   esp,eax
  412fe6:	fcom   st(2)
  412fe8:	loopne 0x412fa9
  412fea:	(bad)  
  412feb:	fisubr WORD PTR [ebp+0x78715c46]
  412ff1:	sbb    al,0x6
  412ff3:	out    dx,al
  412ff4:	jecxz  0x412ff5
  412ff6:	out    dx,al
  412ff7:	sti    
  412ff8:	sbb    al,0xaf
  412ffa:	gs xor edi,esp
  412ffd:	add    BYTE PTR [ecx],cl
  412fff:	xlat   BYTE PTR ds:[ebx]
  413000:	mov    edi,0x50d76fae
  413005:	jg     0x412fe3
  413007:	inc    esi
  413008:	mov    ecx,cs
  41300a:	jle    0x41300c
  41300c:	mov    eax,ds:0x55e01996
  413011:	ret    
  413012:	cld    
  413013:	cmp    eax,0x9ff00f1a
  413018:	or     DWORD PTR [eax+0x7f],0xffffffde
  41301c:	fnstcw WORD PTR ds:0x402b1ebd
  413022:	mov    gs,WORD PTR [esp+eax*8+0x2f]
  413026:	pop    esp
  413027:	mov    cl,ch
  413029:	mov    esi,0x89c17a27
  41302e:	and    al,0x71
  413030:	pushf  
  413031:	pop    ss
  413032:	loopne 0x413019
  413034:	aad    0x24
  413036:	or     al,al
  413038:	inc    BYTE PTR [edi-0x78]
  41303b:	ret    0xbe9b
  41303e:	cwde   
  41303f:	pop    ecx
  413040:	and    esp,esi
  413042:	dec    eax
  413043:	popf   
  413044:	push   ds
  413045:	dec    esp
  413046:	xchg   esp,eax
  413047:	inc    esp
  413048:	inc    edx
  413049:	mov    esp,0xaabf0bb7
  41304e:	sbb    eax,0x75cb8cfe
  413053:	adc    edx,DWORD PTR [edx-0x22f86fb]
  413059:	(bad)  
  41305a:	and    eax,edx
  41305c:	sub    DWORD PTR [ebx+ebx*8-0x10],edx
  413060:	ds jbe 0x413025
  413063:	std    
  413064:	add    esi,DWORD PTR [esi-0x55656190]
  41306a:	stos   BYTE PTR es:[edi],al
  41306b:	cmp    eax,0xec994270
  413070:	lea    ebp,[edx+0x2e]
  413073:	xchg   DWORD PTR ds:[eax],edx
  413076:	cli    
  413077:	inc    ebp
  413078:	fs jo  0x413034
  41307b:	xor    al,0xe
  41307e:	xchg   esi,eax
  41307f:	jae    0x4130b5
  413081:	push   ss
  413082:	fmul   QWORD PTR [esi-0x608b0517]
  413088:	lea    ebp,[eax]
  41308a:	fs hlt 
  41308c:	xor    ebp,DWORD PTR [edx-0x45d66e36]
  413092:	test   eax,0x3de5e1c5
  413097:	inc    ebx
  413098:	gs and eax,0x6027c104
  41309e:	dec    esp
  41309f:	xchg   edi,eax
  4130a0:	or     al,0x22
  4130a2:	adc    DWORD PTR [ecx+eax*2-0x14],esp
  4130a6:	xchg   esi,eax
  4130a7:	scas   eax,DWORD PTR es:[edi]
  4130a8:	mov    cs,WORD PTR [ebp+0x46f590bc]
  4130ae:	inc    eax
  4130af:	inc    esp
  4130b0:	jmp    0x4130a7
  4130b2:	pop    es
  4130b3:	push   ecx
  4130b4:	jg     0x413084
  4130b6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130b8:	inc    ecx
  4130b9:	xchg   esi,eax
  4130ba:	push   ebp
  4130bb:	mov    bh,0x66
  4130bd:	or     dh,BYTE PTR [eax]
  4130bf:	ins    BYTE PTR es:[edi],dx
  4130c0:	das    
  4130c1:	dec    esi
  4130c2:	mov    bh,0x8f
  4130c4:	out    0x75,al
  4130c6:	ds jae 0x41305e
  4130c9:	sub    BYTE PTR [eax+0x21e4cb5f],ah
  4130cf:	add    al,BYTE PTR ds:0x71d3361f
  4130d5:	clc    
  4130d6:	or     bl,BYTE PTR [edx-0x1f355d41]
  4130dc:	retf   
  4130dd:	addr16 inc esi
  4130df:	(bad)  
  4130e0:	sub    esp,DWORD PTR [esi+ebx*2+0x5c]
  4130e4:	adc    BYTE PTR [esi+0x587c3fa],dl
  4130ea:	dec    edx
  4130eb:	inc    edx
  4130ec:	jl     0x4130a8
  4130ee:	mov    ecx,0xe5f45364
  4130f3:	mov    ds:0x113df4e3,eax
  4130f8:	shr    BYTE PTR [ebp-0x17],cl
  4130fb:	data16 lods al,BYTE PTR ds:[esi]
  4130fd:	xchg   edx,eax
  4130fe:	lahf   
  4130ff:	(bad)  
  413101:	add    al,0xdb
  413103:	leave  
  413104:	test   al,0x4
  413106:	inc    edi
  413107:	sub    ah,ah
  413109:	scas   eax,DWORD PTR es:[edi]
  41310a:	cli    
  41310b:	clc    
  41310c:	inc    edx
  41310d:	out    dx,al
  41310e:	fimul  WORD PTR [edx+eax*4+0x6c]
  413112:	inc    esi
  413113:	loop   0x413173
  413115:	add    BYTE PTR [esi],bh
  413117:	int    0xb4
  413119:	ins    DWORD PTR es:[edi],dx
  41311a:	fcompp 
  41311c:	fcmovnb st,st(6)
  41311e:	xor    BYTE PTR [edx+edi*1],ch
  413121:	lea    edx,[ebx+0x2b45d110]
  413127:	xlat   BYTE PTR ds:[ebx]
  413128:	stos   DWORD PTR es:[edi],eax
  413129:	lahf   
  41312a:	inc    ebp
  41312b:	in     eax,0xc1
  41312d:	pop    esp
  41312e:	imul   ecx,DWORD PTR [ecx-0x68],0xc7fc4141
  413135:	xor    al,0x66
  413137:	jmp    0x4130f6
  413139:	cmp    eax,0xbd8bea19
  41313e:	js     0x41319b
  413140:	repz (bad) 
  413142:	sub    cl,bh
  413144:	pop    es
  413145:	jmp    0x4131a7
  413147:	sbb    edi,DWORD PTR ss:[edx-0x6e]
  41314b:	aaa    
  41314c:	test   BYTE PTR [eax+0x1e],dl
  41314f:	pop    edi
  413150:	sub    bl,0xf9
  413153:	adc    eax,ebp
  413155:	dec    esp
  413156:	push   ss
  413157:	cdq    
  413158:	shl    DWORD PTR [edi+0x2e680912],0x62
  41315f:	inc    esi
  413160:	xor    BYTE PTR [ecx+ebp*4-0x4f18fcb],bl
  413167:	mov    bl,0xc4
  413169:	loopne 0x41317a
  41316b:	(bad)  
  41316c:	sbb    DWORD PTR [edi+0x7bb91325],esp
  413172:	or     DWORD PTR fs:[esi-0x57e17d67],eax
  413179:	inc    eax
  41317a:	jbe    0x4131c0
  41317c:	add    eax,0x835d09c5
  413181:	aas    
  413182:	pop    esp
  413183:	mov    bl,0x84
  413185:	xchg   esi,eax
  413186:	retf   
  413187:	mov    bl,0x22
  413189:	xchg   bh,al
  41318b:	sbb    esi,DWORD PTR [ecx-0x2c]
  41318e:	data16 jp 0x413144
  413191:	and    DWORD PTR [eax],0x26
  413194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413195:	pop    ds
  413196:	adc    BYTE PTR [eax-0x73],0x32
  41319a:	(bad)  
  41319c:	jno    0x413206
  41319e:	jp     0x413167
  4131a0:	jo     0x4131f2
  4131a2:	mov    cl,0x41
  4131a4:	mov    eax,ds:0xbd9bf29c
  4131a9:	ins    DWORD PTR es:[edi],dx
  4131aa:	stos   WORD PTR es:[edi],ax
  4131ac:	push   edi
  4131ad:	pop    esi
  4131ae:	test   eax,0x8b05590b
  4131b3:	bound  ebp,QWORD PTR [ebx]
  4131b5:	in     al,0xfb
  4131b7:	cli    
  4131b8:	add    dh,bl
  4131ba:	sbb    ecx,edx
  4131bc:	push   edx
  4131bd:	pop    es
  4131be:	out    0x2,al
  4131c0:	jae    0x41318c
  4131c2:	(bad)  
  4131c3:	mov    BYTE PTR [esi],bh
  4131c5:	xor    esp,DWORD PTR [eax-0x61]
  4131c8:	in     al,0xe8
  4131ca:	inc    eax
  4131cb:	sbb    DWORD PTR [edx+0xbae710d],esi
  4131d1:	push   edi
  4131d2:	stos   BYTE PTR es:[edi],al
  4131d3:	xchg   edx,eax
  4131d4:	adc    cl,BYTE PTR [esi+0x12059830]
  4131da:	in     eax,dx
  4131db:	mov    dh,0xcc
  4131dd:	adc    al,0x11
  4131df:	add    al,0xd4
  4131e1:	push   cs
  4131e2:	lea    eax,[ebp+0x10db4e58]
  4131e8:	ss xchg ebx,eax
  4131ea:	jle    0x41319a
  4131ec:	lock mov ah,0x47
  4131ef:	rcr    DWORD PTR [esi-0x849ab77],1
  4131f5:	(bad)  
  4131f6:	(bad)  [eax-0x1e44df45]
  4131fc:	loop   0x413227
  4131fe:	pop    ds
  4131ff:	pusha  
  413200:	pusha  
  413201:	inc    esp
  413202:	out    dx,eax
  413203:	out    0xda,eax
  413205:	mov    al,ds:0x8d850da0
  41320a:	mov    dh,0xc1
  41320c:	xor    DWORD PTR [edi+eiz*2],0x1c4ad5a2
  413213:	lea    ebp,[ebx]
  413215:	jecxz  0x41322f
  413217:	std    
  413218:	dec    esp
  413219:	mov    esp,0xcfc27963
  41321e:	sub    BYTE PTR [eax],ah
  413220:	jb     0x4131aa
  413222:	ss inc esi
  413224:	pop    ebp
  413225:	cmp    bl,al
  413227:	dec    edx
  413228:	(bad)  
  413229:	popf   
  41322a:	cmp    al,0xa7
  41322c:	outs   dx,DWORD PTR ds:[esi]
  41322d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41322e:	push   ds
  41322f:	cmc    
  413230:	shl    esp,1
  413232:	fs mov cl,0xfd
  413235:	push   0x37
  413237:	std    
  413238:	dec    ebp
  413239:	pusha  
  41323a:	push   ebx
  41323b:	shl    BYTE PTR [eax],0xe7
  41323e:	pop    eax
  41323f:	dec    edi
  413240:	xchg   esp,eax
  413241:	ffree  st(1)
  413243:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413246:	je     0x413295
  413248:	ffreep st(5)
  41324a:	xchg   ebx,eax
  41324b:	popa   
  41324c:	std    
  41324d:	adc    eax,0x3b7185b8
  413252:	or     al,0x77
  413254:	mov    ebx,0x755cd5f4
  413259:	jno    0x413262
  41325b:	sbb    BYTE PTR [ebp-0x1f035279],0xdf
  413262:	jb     0x413251
  413264:	xchg   ebx,eax
  413265:	mov    eax,ds:0xae6c73dc
  41326a:	mov    dl,BYTE PTR [esi]
  41326c:	ins    DWORD PTR es:[edi],dx
  41326d:	adc    bl,BYTE PTR [edx]
  41326f:	jb     0x41324d
  413271:	push   eax
  413272:	dec    esi
  413273:	shl    DWORD PTR [eax],0x2b
  413276:	pop    ss
  413277:	mov    edx,0x7fb3ab7
  41327c:	sahf   
  41327d:	(bad)  
  41327e:	mov    ecx,0xe4ab4ab7
  413283:	(bad)  
  413284:	aam    0x39
  413286:	inc    esp
  413287:	jg     0x4132d9
  413289:	outs   dx,BYTE PTR ds:[esi]
  41328a:	loopne 0x413284
  41328c:	add    BYTE PTR [ebp+0x5a5fa9eb],0x6f
  413293:	das    
  413294:	dec    esi
  413295:	xchg   edx,eax
  413296:	shl    BYTE PTR [edx+ebp*1-0x18],cl
  41329a:	stos   BYTE PTR es:[edi],al
  41329b:	cdq    
  41329c:	scas   eax,DWORD PTR es:[edi]
  41329d:	cmp    ebx,DWORD PTR [ecx+0x2f331fd7]
  4132a3:	fcom   DWORD PTR [eax+ecx*4]
  4132a6:	xchg   ebx,eax
  4132a7:	shl    DWORD PTR [edx+0x57],1
  4132aa:	add    DWORD PTR [ebx],ebx
  4132ac:	sub    al,0x8d
  4132ae:	jmp    ebx
  4132b0:	inc    esi
  4132b1:	add    dl,al
  4132b3:	inc    esi
  4132b4:	leave  
  4132b5:	mov    esp,0x98edba3a
  4132ba:	pusha  
  4132bb:	outs   dx,BYTE PTR ds:[esi]
  4132bc:	cmp    BYTE PTR [ebx-0x5a],bh
  4132bf:	push   es
  4132c0:	inc    edx
  4132c1:	inc    edx
  4132c2:	fcom   QWORD PTR ds:0x5a5841ac
  4132c8:	ror    ebx,0x1f
  4132cb:	stos   DWORD PTR es:[edi],eax
  4132cc:	adc    al,0x8c
  4132ce:	xchg   edx,eax
  4132cf:	enter  0xb33c,0x38
  4132d3:	sbb    eax,0x8d3cead2
  4132d8:	mov    BYTE PTR [edi+0x65],0x10
  4132dc:	push   0xda9a8aec
  4132e1:	retf   
  4132e2:	inc    edx
  4132e3:	adc    edx,ebx
  4132e5:	pop    ebp
  4132e6:	and    BYTE PTR [esi],ah
  4132e8:	push   ss
  4132e9:	push   ebx
  4132ea:	int3   
  4132eb:	push   ebx
  4132ec:	mov    al,ds:0xcd20dfc0
  4132f1:	mov    ss,WORD PTR [eax-0x7fa04624]
  4132f7:	lock xor eax,0x863f3b99
  4132fd:	lock push ss
  4132ff:	and    al,0xe3
  413301:	cs mov al,0x26
  413304:	in     al,0xe9
  413306:	out    dx,al
  413307:	ret    0x9095
  41330a:	or     DWORD PTR ds:0xd05856f9,esp
  413310:	add    DWORD PTR [esi+0x3e],ebp
  413313:	xor    BYTE PTR [esi-0x29],0x2e
  413317:	arpl   WORD PTR [ebp+0x5a],bp
  41331a:	js     0x41335e
  41331c:	mov    ch,bh
  41331e:	sahf   
  41331f:	call   0x64927b4e
  413324:	xchg   DWORD PTR [ebx-0x4eae4432],eax
  41332a:	xlat   BYTE PTR ds:[ebx]
  41332b:	cmc    
  41332c:	pop    esi
  41332d:	inc    edi
  41332e:	fdivr  DWORD PTR [ebp-0x21]
  413331:	cmp    ecx,esi
  413333:	and    eax,0x6b29568f
  413338:	cmc    
  413339:	sbb    ecx,esi
  41333b:	push   ebp
  41333c:	mov    ecx,0x2764e183
  413341:	dec    edx
  413342:	pop    ebp
  413343:	adc    DWORD PTR [ebx],ebx
  413345:	ss jmp 0xf5dc2ba5
  41334b:	mov    ds:0xc7c1a5ae,al
  413350:	sub    DWORD PTR [edx],ebp
  413352:	aad    0xda
  413354:	call   0x55b1:0x9262552c
  41335b:	js     0x413305
  41335d:	or     eax,0x145aefcf
  413362:	xchg   ecx,eax
  413363:	xchg   bl,ah
  413365:	pop    ebp
  413366:	mov    ds:0x695d98a4,eax
  41336b:	mov    cl,0xa3
  41336d:	ffree  st(5)
  41336f:	cli    
  413370:	cmp    eax,0xf10c6a07
  413375:	in     eax,dx
  413376:	retf   0x2287
  413379:	dec    ebx
  41337a:	xchg   DWORD PTR [ebx+0xe2e9c7e],esi
  413380:	adc    BYTE PTR [edi+0x32],0xc5
  413384:	mov    ecx,0xd813e98a
  413389:	sub    eax,0x77f377b3
  41338e:	addr16 xchg ebp,eax
  413390:	es ret 
  413392:	(bad)  
  413393:	popa   
  413394:	mov    ds:0x1210930a,eax
  413399:	add    DWORD PTR [eax-0x1e240d30],0xffffff8c
  4133a0:	pop    esp
  4133a1:	and    al,0x23
  4133a3:	mov    ebp,0xb7a33a6b
  4133a8:	vmaxpd ymm4,ymm7,YMMWORD PTR [edi-0x57]
  4133ae:	push   eax
  4133af:	pop    ebp
  4133b0:	jmp    0x5bd3:0xcc8fcc80
  4133b7:	test   eax,eax
  4133b9:	test   DWORD PTR [ecx+eax*1-0x5a],0x30981efc
  4133c1:	pop    ebx
  4133c2:	dec    esi
  4133c3:	fdivr  DWORD PTR [eax+0x52]
  4133c6:	bound  edx,QWORD PTR ds:0xd1c18f8
  4133cc:	enter  0x379,0x70
  4133d0:	pop    ebx
  4133d1:	sahf   
  4133d2:	jecxz  0x413356
  4133d4:	push   ebx
  4133d5:	or     dh,ch
  4133d7:	mov    cl,0xcd
  4133d9:	daa    
  4133da:	(bad)  
  4133dc:	sbb    eax,ebx
  4133de:	clc    
  4133df:	icebp  
  4133e0:	xor    DWORD PTR [esp+edi*1+0x68aa0690],esi
  4133e7:	mov    ch,0xc4
  4133e9:	add    BYTE PTR [eax],cl
  4133eb:	stc    
  4133ec:	inc    ecx
  4133ed:	test   DWORD PTR [edx+0x6b],esi
  4133f0:	arpl   dx,bx
  4133f2:	aad    0xd8
  4133f4:	sub    BYTE PTR [esi],ah
  4133f6:	jno    0x4133d5
  4133f8:	dec    edx
  4133f9:	dec    esp
  4133fa:	dec    esi
  4133fb:	mov    dh,0x4b
  4133fd:	cwde   
  4133fe:	ins    DWORD PTR es:[edi],dx
  4133ff:	retf   0xa32
  413402:	mov    ds:0x8a7ff3a,eax
  413407:	scas   al,BYTE PTR es:[edi]
  413408:	int    0xac
  41340a:	ins    BYTE PTR es:[edi],dx
  41340b:	xlat   BYTE PTR ds:[ebx]
  41340c:	xor    esi,DWORD PTR [edx-0x10]
  41340f:	inc    esp
  413410:	enter  0x9568,0xe0
  413414:	mov    bh,0x53
  413416:	jb     0x4133c8
  413418:	or     eax,0x7b232576
  41341d:	das    
  41341e:	sub    ecx,DWORD PTR [ebx+0x3c1d5531]
  413424:	sub    ah,BYTE PTR [ebx+0x39b311ef]
  41342a:	push   ebx
  41342b:	mov    ss,WORD PTR [eax]
  41342d:	pop    esp
  41342e:	ror    BYTE PTR [edx-0x24],0xc8
  413432:	inc    edx
  413433:	cmp    esp,esp
  413435:	pop    es
  413436:	add    al,0x87
  413438:	pop    esi
  413439:	push   ecx
  41343a:	cmp    BYTE PTR [edx-0x678e3627],dl
  413440:	ins    BYTE PTR es:[edi],dx
  413441:	lods   eax,DWORD PTR ds:[esi]
  413442:	test   DWORD PTR [ebp+0x7],0xf6e2f8e1
  413449:	clc    
  41344a:	(bad)  
  41344b:	ja     0x4133d3
  41344d:	adc    eax,DWORD PTR [edx+0x39ed69f1]
  413453:	jnp    0x413461
  413455:	data16 or BYTE PTR [ebp+0xd702381],al
  41345c:	fadd   QWORD PTR [edi+0x5d]
  41345f:	jae    0x41344e
  413461:	xchg   ecx,eax
  413462:	inc    esi
  413463:	pop    ebp
  413464:	loope  0x4134d4
  413466:	pop    esi
  413467:	frstor [ebp+0x30]
  41346a:	jns    0x413451
  41346c:	mov    DWORD PTR [edi+0x54],0x2431d3cc
  413473:	je     0x41348c
  413475:	jb     0x4134ea
  413477:	fyl2xp1 
  413479:	sub    edi,eax
  41347b:	xchg   edx,eax
  41347c:	scas   eax,DWORD PTR es:[edi]
  41347d:	retf   0x9ab2
  413480:	pop    edx
  413481:	push   eax
  413482:	adc    edi,DWORD PTR [edi+ebx*8+0x4b43f90f]
  413489:	push   0x7
  41348b:	shl    DWORD PTR [eax+0x29a133f],1
  413491:	(bad)  
  413493:	jbe    0x4134ec
  413495:	fmul   DWORD PTR [edx+0x21c40796]
  41349b:	cmp    ebx,DWORD PTR [esp+edx*1]
  41349e:	jp     0x4134ca
  4134a0:	ret    0xfdca
  4134a3:	push   eax
  4134a4:	fdivr  st,st(3)
  4134a6:	pop    ecx
  4134a7:	dec    esp
  4134a8:	(bad)  
  4134a9:	(bad)  
  4134aa:	jp     0x41350e
  4134ac:	inc    ebp
  4134ad:	aad    0xfe
  4134af:	dec    ecx
  4134b0:	jle    0x413486
  4134b2:	jno    0x4134b2
  4134b4:	cmc    
  4134b5:	fs mov bh,0x2d
  4134b8:	push   ecx
  4134b9:	shl    DWORD PTR [edx+0xd020e6e],1
  4134bf:	jp     0x413479
  4134c1:	(bad)  [eax+ecx*8-0x5ceec177]
  4134c8:	mov    BYTE PTR [eax+0x3f],dl
  4134cb:	inc    ebx
  4134cc:	es mov ecx,0x727b8064
  4134d2:	jl     0x4134c9
  4134d4:	shr    DWORD PTR [eax],1
  4134d6:	push   ss
  4134d7:	test   BYTE PTR [esi-0xf],0x49
  4134db:	jmp    0x4134bc
  4134dd:	(bad)  
  4134de:	mov    ah,0x71
  4134e0:	push   ds
  4134e1:	pop    ebx
  4134e2:	xchg   esp,eax
  4134e3:	lods   eax,DWORD PTR ds:[esi]
  4134e4:	mov    esp,0x37da5d20
  4134e9:	sbb    al,ah
  4134eb:	call   0x30701b7
  4134f0:	call   0x12e6e39a
  4134f5:	push   cs
  4134f6:	das    
  4134f7:	cmp    ebp,DWORD PTR [ecx+0x226c70a5]
  4134fd:	cmp    al,0x1d
  4134ff:	jnp    0x4134c8
  413501:	mov    fs,WORD PTR [ecx-0x5f97e84f]
  413507:	and    eax,0xb065de93
  41350c:	pop    esi
  41350d:	sub    dh,BYTE PTR [edi-0x382376da]
  413513:	add    ecx,DWORD PTR [eax]
  413515:	cwde   
  413516:	sbb    esi,DWORD PTR [ebx-0x3d3dea69]
  41351c:	cmp    DWORD PTR [ecx-0x1580bcb5],ecx
  413522:	mov    bh,0xd3
  413524:	loop   0x41351d
  413526:	xor    eax,ebx
  413528:	adc    ah,bh
  41352a:	xchg   esp,eax
  41352b:	popf   
  41352c:	lock sti 
  41352e:	(bad)  
  41352f:	dec    esi
  413530:	inc    edi
  413531:	inc    ebx
  413532:	mov    bh,0xa0
  413534:	call   DWORD PTR [edx]
  413536:	js     0x41350e
  413538:	gs jmp 0x41356d
  41353b:	scas   eax,DWORD PTR es:[edi]
  41353c:	test   eax,0x22699eb9
  413541:	push   edi
  413542:	lahf   
  413543:	push   ds
  413544:	xchg   ebp,eax
  413545:	adc    ch,BYTE PTR ds:0xc4b5cb94
  41354b:	push   esp
  41354c:	clc    
  41354d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41354e:	aas    
  41354f:	rcl    BYTE PTR [ecx-0x6f493e65],0x2
  413556:	dec    eax
  413557:	aaa    
  413558:	cwde   
  413559:	clc    
  41355a:	jge    0x4135d8
  41355c:	mov    ch,0x70
  41355e:	(bad)  
  41355f:	push   0xffffffaa
  413561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413562:	in     al,dx
  413563:	push   ebx
  413564:	nop
  413565:	test   BYTE PTR [ebx-0x45ae44c5],0x43
  41356c:	lea    ecx,[edx]
  41356e:	xchg   DWORD PTR [edx+0x493c67e6],ebp
  413574:	mov    ecx,0xbae04718
  413579:	inc    edi
  41357a:	sub    dl,bh
  41357c:	arpl   cx,sp
  41357e:	call   0xe298:0x3c1a986b
  413585:	jmp    DWORD PTR [ebx+0x5b]
  413588:	cmp    bl,BYTE PTR [edi+0x7a]
  41358b:	fmul   QWORD PTR [ecx+0x38b02e78]
  413591:	adc    bh,dl
  413593:	sub    ah,BYTE PTR [esi-0xe]
  413596:	lods   eax,DWORD PTR ds:[esi]
  413597:	dec    edi
  413598:	xchg   DWORD PTR [ecx+eiz*4],ebp
  41359b:	add    esi,DWORD PTR [ebx]
  41359d:	push   0x27
  41359f:	add    DWORD PTR [ebx+0x2d],ebp
  4135a2:	fdiv   DWORD PTR [esi]
  4135a4:	push   es
  4135a5:	sub    al,0x2d
  4135a7:	dec    edx
  4135a8:	mov    ebp,0x919a794b
  4135ad:	jo     0x4135aa
  4135af:	out    dx,eax
  4135b0:	sbb    eax,0xeb07c9f7
  4135b5:	aas    
  4135b6:	push   edx
  4135b7:	fdivr  DWORD PTR [eax-0x7a]
  4135ba:	inc    BYTE PTR [ebx+0x12154084]
  4135c0:	inc    ecx
  4135c1:	test   al,0xc6
  4135c3:	add    ch,bh
  4135c5:	ffree  st(3)
  4135c7:	aad    0x8b
  4135c9:	outs   dx,BYTE PTR ds:[esi]
  4135ca:	mov    WORD PTR [ebp+0x7c],es
  4135cd:	mov    eax,0xf8b818ac
  4135d2:	imul   ebx,DWORD PTR [ebx+0x18511486],0xffffffb1
  4135d9:	add    al,0x1a
  4135db:	jo     0x413657
  4135dd:	test   eax,0x41553a76
  4135e2:	mov    esi,0x94a40026
  4135e7:	sub    BYTE PTR [edi-0xfcb426a],dh
  4135ed:	sub    eax,0x5f1f59a0
  4135f2:	push   ecx
  4135f3:	xor    BYTE PTR [edx],ah
  4135f5:	ja     0x413634
  4135f7:	neg    DWORD PTR [eax+0x3bf2c455]
  4135fd:	ss jecxz 0x4135b0
  413600:	sahf   
  413601:	mov    dl,0x79
  413603:	stos   DWORD PTR es:[edi],eax
  413604:	and    eax,0xd758a660
  413609:	add    ah,BYTE PTR [esi+0x58]
  41360c:	mov    esp,0x887d90db
  413611:	xchg   edx,eax
  413612:	or     ebx,DWORD PTR [ecx+ebx*1+0x5ac4cf84]
  413619:	inc    ebx
  41361a:	xor    eax,0x9a0aa9c5
  41361f:	xchg   edi,eax
  413620:	fmul   QWORD PTR [eax]
  413622:	scas   eax,DWORD PTR es:[edi]
  413623:	or     BYTE PTR [edx+0x36],bl
  413626:	mov    edx,0x99868504
  41362b:	mov    ecx,0xd4250d97
  413630:	mov    ds:0x66019131,al
  413635:	mov    edx,0x1d3cd4e3
  41363a:	es mov eax,0x4c28d07
  413640:	scas   eax,DWORD PTR es:[edi]
  413641:	scas   al,BYTE PTR es:[edi]
  413642:	inc    ecx
  413643:	inc    eax
  413644:	add    dh,dl
  413646:	add    eax,0xd08c0c4
  41364b:	or     ecx,DWORD PTR [edx+0x5a539eec]
  413651:	add    DWORD PTR [eax+0x46],eax
  413654:	inc    eax
  413655:	or     DWORD PTR [edi],0x13
  413658:	in     eax,0xa5
  41365a:	mov    eax,0x72234294
  41365f:	test   eax,0x6981aa56
  413664:	rcr    BYTE PTR [ebx],cl
  413666:	mov    ds:0xa2e93179,al
  41366b:	xchg   ecx,eax
  41366c:	cli    
  41366d:	lods   al,BYTE PTR ds:[esi]
  41366e:	or     al,0xc0
  413670:	jnp    0x413613
  413672:	fdiv   st(2),st
  413674:	(bad)  
  413675:	mov    edx,0x22943624
  41367a:	(bad)  [edi+0x14]
  41367d:	(bad)
  413680:	iret   
  413681:	outs   dx,BYTE PTR ds:[esi]
  413682:	jb     0x4136c2
  413684:	jnp    0x4136ae
  413686:	sub    cl,BYTE PTR [esi-0x76]
  413689:	cmp    ch,BYTE PTR gs:[edx-0x4f]
  41368d:	loop   0x413620
  41368f:	leave  
  413690:	mov    ch,0x44
  413692:	ss out dx,eax
  413694:	fisubr WORD PTR [ecx]
  413696:	out    0xcf,eax
  413698:	fadd   DWORD PTR [eax-0x55]
  41369b:	jnp    0x4136fa
  41369d:	nop
  41369e:	jle    0x413657
  4136a0:	call   0x46bd:0x315580cf
  4136a7:	pushf  
  4136a8:	jp     0x41370d
  4136aa:	xchg   esp,eax
  4136ab:	cmc    
  4136ac:	(bad)  
  4136ad:	mov    ebp,0x6564c78f
  4136b2:	nop
  4136b3:	mov    esp,0xb121baa5
  4136b8:	or     ebx,eax
  4136ba:	dec    esi
  4136bb:	fidiv  WORD PTR [edi+0xb]
  4136be:	imul   BYTE PTR [ebp-0x120345c1]
  4136c4:	mov    al,0xf
  4136c6:	jbe    0x4136d7
  4136c8:	imul   ebx,DWORD PTR [ebp-0x64617ac9],0x7baeb741
  4136d2:	cmp    DWORD PTR [edi+0x3c],ebx
  4136d5:	and    edi,DWORD PTR [ecx+0x45918167]
  4136db:	aam    0xce
  4136dd:	dec    edi
  4136de:	lock and BYTE PTR [esi],0x7b
  4136e2:	inc    edi
  4136e3:	pop    ecx
  4136e4:	loope  0x4136d6
  4136e6:	add    al,0x8b
  4136e8:	push   edx
  4136e9:	imul   DWORD PTR [edx]
  4136eb:	pop    esp
  4136ec:	inc    esi
  4136ed:	or     DWORD PTR [edi-0x2],ebp
  4136f0:	lods   eax,DWORD PTR ds:[esi]
  4136f1:	in     al,dx
  4136f2:	test   al,cl
  4136f4:	mov    eax,0x9c3565e4
  4136f9:	mov    eax,ds:0x20b8b534
  4136fe:	(bad)  
  413700:	mov    esp,0x70cb5b62
  413705:	adc    DWORD PTR [eax],0x5db163ad
  41370b:	push   edx
  41370c:	pop    es
  41370d:	retf   
  41370e:	fisubr DWORD PTR [esi-0x3c20c144]
  413714:	jge    0x413728
  413716:	push   cs
  413717:	in     al,dx
  413718:	gs (bad) 
  41371a:	addr16 and eax,0xd9e1139f
  413720:	mul    BYTE PTR [edx-0x4318fd55]
  413726:	jp     0x413764
  413728:	call   0x2914114a
  41372d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41372e:	xchg   ebp,eax
  41372f:	bswap  esp
  413731:	and    ah,bl
  413733:	loop   0x4137aa
  413735:	or     BYTE PTR [edi+0x60121932],cl
  41373b:	pop    esp
  41373c:	sbb    ebx,esi
  41373e:	dec    eax
  41373f:	jbe    0x4136c4
  413741:	xor    al,BYTE PTR [edx-0x6774d7a4]
  413747:	fyl2xp1 
  413749:	test   al,0xe2
  41374b:	dec    edx
  41374c:	lds    esi,FWORD PTR [eax+0x57]
  41374f:	ins    BYTE PTR es:[edi],dx
  413750:	(bad)  
  413751:	cmc    
  413752:	fiadd  WORD PTR ds:0x44cb6805
  413758:	gs aad 0xe3
  41375b:	or     al,BYTE PTR [eax]
  41375d:	mov    dl,BYTE PTR [ebx]
  41375f:	adc    BYTE PTR [ecx-0x5e259650],dl
  413765:	in     eax,dx
  413766:	stos   DWORD PTR es:[di],eax
  413768:	dec    edx
  413769:	inc    ebx
  41376a:	pop    ebp
  41376b:	mov    al,0x8e
  41376d:	lea    ecx,[ecx+0x3f742bcd]
  413773:	and    DWORD PTR [eax-0x10],ecx
  413776:	pop    ss
  413777:	mov    ebp,0x25c49dc1
  41377c:	std    
  41377d:	les    edx,FWORD PTR [eax+0x7320474b]
  413783:	mov    DWORD PTR [ebp+0x71],esp
  413786:	addr16 int3 
  413788:	test   eax,0xd1ccc76e
  41378d:	jle    0x413718
  41378f:	fwait
  413790:	in     al,dx
  413791:	adc    al,0x6d
  413793:	scas   eax,DWORD PTR es:[edi]
  413794:	fwait
  413795:	xchg   BYTE PTR [edx-0x31],cl
  413798:	xchg   ecx,eax
  413799:	outs   dx,BYTE PTR ds:[esi]
  41379a:	xchg   esp,eax
  41379b:	ficom  WORD PTR [ecx+0x2a]
  41379e:	xor    DWORD PTR [edx+0x3e],edi
  4137a1:	sub    eax,0xc36adabc
  4137a6:	pop    eax
  4137a7:	ss mul cl
  4137aa:	daa    
  4137ab:	or     DWORD PTR [edx+0x51],ebx
  4137ae:	es retf 
  4137b0:	jecxz  0x413827
  4137b2:	pushf  
  4137b3:	mov    ds:0x41b676d3,al
  4137b8:	and    bl,BYTE PTR [ebp+esi*4-0x26a11e1b]
  4137bf:	adc    BYTE PTR gs:[edx+0x64],bh
  4137c3:	sub    DWORD PTR [edx+edi*2-0x3f],0xffffffcf
  4137c8:	nop
  4137c9:	xchg   ebp,eax
  4137ca:	repnz (bad) 
  4137cc:	out    0x4b,al
  4137ce:	and    DWORD PTR [edx+0x459f21c3],esp
  4137d4:	push   ebp
  4137d5:	ds pop ecx
  4137d7:	ret    0x96ff
  4137da:	jae    0x4137af
  4137dc:	mov    ds:0x5beaae0c,eax
  4137e1:	in     al,dx
  4137e2:	sub    DWORD PTR [edx-0x12],esi
  4137e5:	fiadd  WORD PTR [edx]
  4137e7:	cwde   
  4137e8:	repnz sub bh,ah
  4137eb:	stos   DWORD PTR es:[edi],eax
  4137ec:	sar    BYTE PTR [ecx-0x1e28688],cl
  4137f2:	cwde   
  4137f3:	push   esp
  4137f4:	fld    QWORD PTR [eax]
  4137f6:	cwde   
  4137f7:	jp     0x4137c2
  4137f9:	push   cs
  4137fa:	sub    eax,0x3b4fe953
  4137ff:	popf   
  413800:	repz inc esp
  413802:	js     0x41384b
  413804:	les    ebx,FWORD PTR [edi+0x6610ca54]
  41380a:	repnz popa 
  41380c:	fild   WORD PTR [edx+0x4475ed56]
  413812:	clc    
  413813:	cmp    DWORD PTR [ecx+0x5a743d35],esi
  413819:	push   esi
  41381a:	stos   DWORD PTR es:[edi],eax
  41381b:	xchg   ecx,eax
  41381c:	mov    esp,0xc8cf1155
  413821:	mov    esi,0x9ba9d9aa
  413826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413827:	inc    ebp
  413828:	xlat   BYTE PTR ds:[ebx]
  413829:	les    eax,FWORD PTR [edx-0x8]
  41382c:	jns    0x41383d
  41382e:	xchg   esp,eax
  41382f:	and    bh,BYTE PTR [ecx-0x434acbb5]
  413835:	lahf   
  413836:	xchg   DWORD PTR [ecx-0x733b81f],ebp
  41383c:	mov    eax,0x7448e5c9
  413841:	and    al,0x0
  413843:	sbb    cl,bh
  413845:	push   edi
  413846:	mov    edi,0x60e41265
  41384b:	inc    esi
  41384c:	and    eax,0x39b7fd70
  413851:	addr16 (bad) 
  413853:	mov    ds:0x6caec923,eax
  413858:	retf   
  413859:	inc    esi
  41385a:	imul   BYTE PTR [ecx+eax*8]
  41385d:	arpl   WORD PTR [ebp+0x7f791f6e],si
  413863:	push   ds
  413864:	popf   
  413865:	push   ebx
  413866:	les    ecx,FWORD PTR [eax-0x79dcd058]
  41386c:	xchg   edi,eax
  41386d:	aam    0x51
  41386f:	pop    ebx
  413870:	cmp    BYTE PTR [esi-0x4b80a395],0x42
  413877:	cmc    
  413878:	mov    cl,dh
  41387a:	stc    
  41387b:	(bad)  
  41387c:	ficom  WORD PTR [eax]
  41387e:	sub    dh,ch
  413880:	int    0x3d
  413882:	xor    edx,DWORD PTR [ecx+0x6621df2f]
  413888:	mov    bl,dh
  41388a:	dec    BYTE PTR ds:0x8a5b3489
  413890:	xor    eax,DWORD PTR [ecx]
  413892:	pop    ebx
  413893:	sub    eax,0xe4fc8406
  413898:	mov    esi,0x77bc8263
  41389d:	dec    esi
  41389e:	cmp    BYTE PTR [edi+0x12434dc2],cl
  4138a4:	pop    eax
  4138a5:	dec    ecx
  4138a6:	popa   
  4138a7:	pop    ss
  4138a8:	jnp    0x4138aa
  4138aa:	call   0x71e0:0x722703ad
  4138b1:	mov    esi,0x9db97bbd
  4138b6:	daa    
  4138b7:	sub    BYTE PTR [esi],dh
  4138b9:	pusha  
  4138ba:	and    BYTE PTR [eax+ebp*4-0x74c0cd13],cl
  4138c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138c2:	jle    0x413852
  4138c4:	pop    ds
  4138c5:	(bad)  [esi]
  4138c7:	jno    0x41391d
  4138c9:	mov    BYTE PTR ds:0x3614e193,bh
  4138cf:	dec    edi
  4138d0:	out    0xd0,eax
  4138d2:	jns    0x413889
  4138d4:	add    eax,0xcab9bddb
  4138d9:	inc    DWORD PTR [esi]
  4138db:	sub    eax,0x34b64f7b
  4138e0:	xchg   edx,eax
  4138e1:	pushf  
  4138e2:	(bad)  
  4138e4:	push   ss
  4138e5:	aaa    
  4138e6:	jne    0x413953
  4138e8:	loopne 0x4138bc
  4138ea:	or     dl,BYTE PTR [ebx-0x28c25cf]
  4138f0:	mov    ch,0x8e
  4138f2:	ss inc ecx
  4138f4:	cs jo  0x4138fe
  4138f7:	imul   esp,DWORD PTR [ebx+0x6189fa56],0xd59e4a13
  413901:	paddw  mm1,QWORD PTR [edx]
  413904:	(bad)  
  413905:	lds    esi,FWORD PTR [esi]
  413907:	jae    0x41394b
  413909:	fsubr  QWORD PTR [edx+0x4d]
  41390c:	bound  ecx,QWORD PTR [ebx+0x6e]
  41390f:	jp     0x413921
  413911:	xor    ebp,DWORD PTR [esi+eax*2]
  413914:	jb     0x413947
  413916:	rol    DWORD PTR [esi],cl
  413918:	sahf   
  413919:	popf   
  41391a:	sub    edx,edx
  41391c:	add    DWORD PTR [ebx+0x12],edx
  41391f:	mov    DWORD PTR [edi],ebp
  413921:	je     0x4138ba
  413923:	sub    al,BYTE PTR [edi]
  413925:	inc    ebx
  413926:	or     ch,BYTE PTR [eax+0x29789e76]
  41392c:	sub    al,0xe7
  41392e:	inc    ecx
  41392f:	std    
  413930:	fidivr DWORD PTR [edi-0x66]
  413933:	iret   
  413934:	xor    BYTE PTR [edi],ah
  413936:	ror    BYTE PTR [ebx],cl
  413938:	imul   esp,DWORD PTR [ebp-0x2b2dc9c1],0x3c
  41393f:	mov    eax,DWORD PTR [edx+0x74520a23]
  413945:	dec    ebx
  413946:	pop    ss
  413947:	push   ebx
  413948:	std    
  413949:	mov    ecx,0x7166b01f
  41394e:	xor    BYTE PTR [edx+ebx*4],bl
  413951:	sbb    BYTE PTR [ecx-0x7f],0x1d
  413955:	xor    DWORD PTR [edx],edi
  413957:	out    0x18,al
  413959:	jl     0x41399d
  41395b:	popa   
  41395c:	scas   al,BYTE PTR es:[edi]
  41395d:	cmp    al,BYTE PTR [eax+0x1c386084]
  413963:	scas   al,BYTE PTR es:[edi]
  413964:	pop    ebx
  413965:	mov    ch,BYTE PTR [ebx-0x3bb5272c]
  41396b:	shr    DWORD PTR [edx-0x5b4e5dbe],cl
  413971:	scas   al,BYTE PTR es:[edi]
  413972:	push   ss
  413973:	pop    esi
  413974:	pop    ebp
  413975:	inc    eax
  413976:	or     ebx,DWORD PTR [ebx+0x66ff57d3]
  41397c:	sub    DWORD PTR [ecx-0x6],ebx
  41397f:	loop   0x4139a2
  413981:	(bad)  
  413982:	stc    
  413983:	add    ch,dl
  413985:	(bad)  
  413986:	sub    al,0x1d
  413988:	fmul   QWORD PTR [esi]
  41398a:	loop   0x4139d4
  41398c:	xor    cl,ch
  41398e:	lahf   
  41398f:	fldcw  WORD PTR [edi+0x52]
  413992:	lods   eax,DWORD PTR ds:[esi]
  413993:	shl    DWORD PTR [edx-0x13],cl
  413996:	aaa    
  413997:	(bad)  
  413999:	loop   0x41394c
  41399b:	add    dh,al
  41399d:	inc    ebp
  41399e:	scas   eax,DWORD PTR es:[edi]
  41399f:	xchg   esp,eax
  4139a0:	sahf   
  4139a1:	aam    0xf9
  4139a3:	div    DWORD PTR [edx]
  4139a5:	or     BYTE PTR [eax+0xe96664f],bh
  4139ab:	push   0x541b9eea
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	pop    ebp
  4139b2:	scas   eax,DWORD PTR es:[edi]
  4139b3:	mov    DWORD PTR [ebx+eax*1],esi
  4139b6:	mov    eax,0xa154f876
  4139bb:	test   al,0xd
  4139bd:	cmp    al,0xb4
  4139bf:	push   ecx
  4139c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139c1:	nop
  4139c2:	push   ebp
  4139c3:	loopne 0x4139b3
  4139c5:	add    al,0x83
  4139c7:	aam    0xe1
  4139c9:	mov    al,0xab
  4139cb:	(bad)  
  4139cc:	push   edi
  4139cd:	stos   BYTE PTR es:[edi],al
  4139ce:	cmp    al,BYTE PTR [ecx]
  4139d0:	dec    ebp
  4139d1:	lahf   
  4139d2:	hlt    
  4139d3:	(bad)  
  4139d4:	sti    
  4139d5:	dec    edi
  4139d6:	and    eax,0x8cbc31ce
  4139db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139dc:	cwde   
  4139dd:	js     0x4139f1
  4139df:	push   eax
  4139e0:	sbb    dl,BYTE PTR [ebx+0x6d]
  4139e3:	jbe    0x4139d0
  4139e5:	sub    ebp,eax
  4139e7:	jmp    FWORD PTR [edx+0x5b]
  4139ea:	lods   al,BYTE PTR ds:[esi]
  4139eb:	mov    bl,0x60
  4139ed:	js     0x4139bd
  4139ef:	jl     0x4139d6
  4139f1:	sar    BYTE PTR [ecx],0x8d
  4139f4:	inc    eax
  4139f5:	loopne 0x4139e4
  4139f7:	loop   0x4139a0
  4139f9:	cwde   
  4139fa:	mov    eax,ds:0x2013f983
  4139ff:	lea    ebp,[esi-0x41]
  413a02:	xchg   cl,cl
  413a04:	sbb    ebp,DWORD PTR [ebp+0x272eaf74]
  413a0a:	cmp    DWORD PTR [ecx],ecx
  413a0c:	call   0xf54d9b1b
  413a11:	aam    0x35
  413a13:	pop    esp
  413a14:	pop    edx
  413a15:	ja     0x4139cf
  413a17:	nop
  413a18:	jg     0x4139d5
  413a1a:	xor    eax,0x8a31566d
  413a1f:	fld    st(0)
  413a21:	dec    eax
  413a22:	out    dx,eax
  413a23:	sbb    edx,esp
  413a25:	adc    dh,0xe
  413a28:	push   DWORD PTR [edi-0x31]
  413a2b:	xor    al,dh
  413a2d:	dec    BYTE PTR [eax]
  413a2f:	outs   dx,DWORD PTR ds:[esi]
  413a30:	mov    bl,0x29
  413a32:	retf   0xc053
  413a35:	sbb    BYTE PTR [esp+eiz*2+0x64],bh
  413a39:	bnd ret 0xb038
  413a3d:	jo     0x413a0a
  413a3f:	push   ds
  413a40:	inc    edx
  413a41:	and    DWORD PTR [eax+0x31],esp
  413a44:	xchg   esp,eax
  413a45:	inc    edi
  413a46:	xlat   BYTE PTR ds:[ebx]
  413a47:	ins    BYTE PTR es:[edi],dx
  413a48:	jge    0x413a59
  413a4a:	jp     0x413ac5
  413a4c:	pusha  
  413a4d:	inc    edi
  413a4e:	sub    bl,bl
  413a50:	scas   al,BYTE PTR es:[edi]
  413a51:	push   ds
  413a52:	push   es
  413a53:	outs   dx,DWORD PTR ds:[esi]
  413a54:	push   edx
  413a55:	mov    WORD PTR [ebp-0x51],gs
  413a58:	xchg   esi,eax
  413a59:	mov    al,0x9f
  413a5b:	cli    
  413a5c:	jmp    0x78ed931f
  413a61:	retf   0x9f5b
  413a64:	test   DWORD PTR [ecx-0x3a20775c],edx
  413a6a:	pop    esi
  413a6b:	dec    edi
  413a6c:	pop    ss
  413a6d:	jmp    0x3c64b37d
  413a72:	and    DWORD PTR [ebp-0x4ceb7765],ecx
  413a78:	imul   edi,DWORD PTR [edi],0xa127606b
  413a7e:	std    
  413a7f:	jo     0x413ae1
  413a81:	out    0xd3,al
  413a83:	sbb    ah,al
  413a85:	clc    
  413a86:	shr    DWORD PTR [esi+0x39bf4776],0x2f
  413a8d:	(bad)  
  413a8e:	cmp    al,0x5d
  413a90:	pop    ss
  413a91:	fwait
  413a92:	push   ebx
  413a93:	xchg   ecx,eax
  413a94:	fsubr  QWORD PTR [ebp+0x20]
  413a97:	and    ecx,edi
  413a99:	and    eax,0x404dc079
  413a9e:	aam    0xa
  413aa0:	std    
  413aa1:	xor    al,0x5a
  413aa3:	push   0x147b279
  413aa8:	jne    0x413a35
  413aaa:	arpl   WORD PTR [ebx-0x144e50fa],dx
  413ab0:	stos   DWORD PTR es:[edi],eax
  413ab1:	cli    
  413ab2:	sub    BYTE PTR [ecx-0x59],dl
  413ab5:	inc    ebp
  413ab6:	push   cs
  413ab7:	adc    eax,0x85d7b73b
  413abc:	dec    ebp
  413abd:	js     0x413a55
  413abf:	and    DWORD PTR [edx-0x72576da7],esi
  413ac5:	ins    DWORD PTR es:[edi],dx
  413ac6:	mov    ch,0x4e
  413ac8:	xor    BYTE PTR [ebx+0x2e],dl
  413acb:	inc    edx
  413acc:	loope  0x413aba
  413ace:	mov    ebp,0xfa951c2f
  413ad3:	pusha  
  413ad4:	mov    ah,0xa9
  413ad6:	scas   al,BYTE PTR es:[edi]
  413ad7:	mov    ebp,0xda11956a
  413adc:	jo     0x413b0e
  413ade:	int    0xe1
  413ae0:	je     0x413abc
  413ae2:	(bad)  
  413ae3:	nop
  413ae4:	mov    dh,0xd4
  413ae6:	jge    0x413aad
  413ae8:	and    BYTE PTR [edi],ch
  413aea:	outs   dx,DWORD PTR ds:[esi]
  413aeb:	call   0xbdee1ee7
  413af0:	dec    edi
  413af1:	xchg   BYTE PTR [edi+0x40],bh
  413af4:	je     0x413b56
  413af6:	jge    0x413b25
  413af8:	cmp    edi,DWORD PTR [eax+0x44cb0d99]
  413afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aff:	dec    edx
  413b00:	xchg   BYTE PTR [ecx-0x38],bh
  413b03:	shl    BYTE PTR [esi-0x4322b492],cl
  413b09:	mov    ch,0x44
  413b0b:	jp     0x413abd
  413b0d:	jne    0x413b1b
  413b0f:	mov    esi,0xa3b77997
  413b14:	push   ss
  413b15:	jmp    FWORD PTR [ebx]
  413b17:	cdq    
  413b18:	and    BYTE PTR [edi-0x64365414],ah
  413b1e:	mov    edi,0x5259b892
  413b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b24:	jnp    0x413ae7
  413b26:	dec    ecx
  413b27:	dec    ebx
  413b28:	push   ebx
  413b29:	fwait
  413b2a:	in     eax,dx
  413b2b:	add    DWORD PTR [edi+0xd0bcc08],edx
  413b31:	pop    ebx
  413b32:	adc    eax,0xe8995395
  413b37:	inc    edx
  413b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b3a:	jmp    0x413ba4
  413b3c:	jmp    0x413bb0
  413b3e:	ror    al,0x3f
  413b41:	test   al,0xac
  413b43:	add    edx,DWORD PTR [edx-0xa]
  413b46:	mov    ds:0x7d99b3b8,al
  413b4b:	jle    0x413b14
  413b4d:	or     DWORD PTR [esp+ebp*4-0x75e9ed0c],esp
  413b54:	jb     0x413b21
  413b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b57:	pop    ecx
  413b58:	scas   al,BYTE PTR es:[edi]
  413b59:	scas   al,BYTE PTR es:[edi]
  413b5a:	leave  
  413b5b:	xor    esi,DWORD PTR [edx]
  413b5d:	stc    
  413b5e:	sar    BYTE PTR [edx-0x244d5767],cl
  413b64:	adc    al,0x14
  413b66:	mov    esp,0x3d793c2d
  413b6b:	mov    ch,0x2e
  413b6d:	mul    BYTE PTR [ebp*8-0x390b41bb]
  413b74:	cmp    cl,cl
  413b76:	or     eax,0x9895fa9d
  413b7b:	inc    ecx
  413b7c:	into   
  413b7d:	inc    edi
  413b7e:	adc    al,0x19
  413b80:	fadd   st(3),st
  413b82:	jnp    0x413b72
  413b84:	sub    DWORD PTR [edi+0x34606be8],0x73caf149
  413b8e:	xor    ch,BYTE PTR [edx+edi*2]
  413b91:	pop    esi
  413b92:	repz cwde 
  413b94:	cmc    
  413b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b96:	hlt    
  413b97:	mov    bh,0x50
  413b99:	hlt    
  413b9a:	and    al,0xc5
  413b9c:	xchg   ebx,eax
  413b9d:	and    DWORD PTR [ebx+0x4af6d747],eax
  413ba3:	lods   al,BYTE PTR ds:[esi]
  413ba4:	std    
  413ba5:	inc    eax
  413ba6:	mov    ebp,0x5ebce16
  413bab:	jno    0x413bdd
  413bad:	loope  0x413c11
  413baf:	jmp    0x413ba7
  413bb1:	shl    ebx,cl
  413bb3:	(bad)  
  413bb4:	aam    0x54
  413bb6:	dec    esp
  413bb7:	push   cs
  413bb8:	fs inc eax
  413bba:	inc    ecx
  413bbb:	push   ss
  413bbc:	dec    edi
  413bbd:	in     eax,dx
  413bbe:	int3   
  413bbf:	outs   dx,BYTE PTR ds:[esi]
  413bc0:	imul   edx,DWORD PTR [ecx-0x36cc5c77],0xf74a2836
  413bca:	es sti 
  413bcc:	scas   eax,DWORD PTR es:[edi]
  413bcd:	and    DWORD PTR [ebx+0x1ca10641],ebx
  413bd3:	popa   
  413bd4:	xchg   edi,eax
  413bd5:	cmp    al,0x53
  413bd7:	jg     0x413b8c
  413bd9:	push   ss
  413bda:	pop    ecx
  413bdb:	ret    0x45fc
  413bde:	pop    ss
  413bdf:	sbb    BYTE PTR ds:0x923ce178,dh
  413be5:	cwde   
  413be6:	and    eax,0x8a0b2f66
  413beb:	repnz xchg edx,eax
  413bed:	sbb    eax,0x832b2299
  413bf2:	fsubr  DWORD PTR ds:0xe184a332
  413bf8:	inc    esp
  413bf9:	dec    ecx
  413bfa:	xchg   esp,eax
  413bfb:	mov    DWORD PTR [ebp-0x2c],0x4a133a8c
  413c02:	jne    0x413bb2
  413c04:	in     al,dx
  413c05:	sti    
  413c06:	mov    edi,DWORD PTR [edi-0x4c]
  413c09:	loope  0x413c09
  413c0b:	pop    ebx
  413c0c:	sub    edx,DWORD PTR [edx-0x66]
  413c0f:	hlt    
  413c10:	mov    al,0x65
  413c12:	aaa    
  413c13:	sub    BYTE PTR [ebp-0x54],ch
  413c16:	and    BYTE PTR [eax],0x61
  413c19:	sub    eax,0xf9a4dd00
  413c1e:	clc    
  413c1f:	push   0xffffffc0
  413c21:	mov    cl,BYTE PTR [esi+0x5b]
  413c24:	inc    ebp
  413c25:	or     eax,0xe3bb25c
  413c2a:	mov    bl,0xc6
  413c2c:	mov    edx,0xac772979
  413c31:	pusha  
  413c32:	test   BYTE PTR [esp+ebp*8-0x1a],bl
  413c36:	sbb    bh,BYTE PTR [edi]
  413c38:	in     eax,dx
  413c39:	nop
  413c3a:	xchg   edx,eax
  413c3b:	mov    esp,0x10dbbbb6
  413c40:	rcl    DWORD PTR [ebp+0x4e],1
  413c43:	adc    DWORD PTR [eax],edi
  413c45:	(bad)  
  413c46:	lods   eax,DWORD PTR ds:[esi]
  413c47:	dec    ecx
  413c48:	outs   dx,BYTE PTR ds:[esi]
  413c49:	sti    
  413c4a:	sub    al,0x13
  413c4c:	fcomp  DWORD PTR [ebx]
  413c4e:	enter  0x3c3d,0x5f
  413c52:	out    dx,al
  413c53:	xlat   BYTE PTR ds:[ebx]
  413c54:	fdiv   st,st(5)
  413c56:	push   es
  413c57:	ds cmp eax,0x1b7fc954
  413c5d:	cmp    eax,0xcc5c447a
  413c62:	push   ebx
  413c63:	dec    esp
  413c64:	mov    cl,BYTE PTR [edi]
  413c66:	scas   eax,DWORD PTR es:[edi]
  413c67:	or     eax,0x19ced993
  413c6c:	or     DWORD PTR [eax],esi
  413c6e:	cwde   
  413c6f:	lds    edx,FWORD PTR ds:0xf09d6370
  413c75:	clc    
  413c76:	jnp    0x413cef
  413c78:	(bad)  
  413c79:	push   0xef203d54
  413c7e:	hlt    
  413c7f:	push   cs
  413c80:	dec    ebx
  413c81:	shl    DWORD PTR [ebx+0x163e969a],0x1
  413c88:	xor    BYTE PTR [edi+0x418927a1],dl
  413c8e:	shl    DWORD PTR [ecx],0xdb
  413c91:	pavgw  mm3,QWORD PTR [edi]
  413c94:	gs pushf 
  413c96:	in     eax,0xba
  413c98:	xchg   esi,eax
  413c99:	iret   
  413c9a:	mov    esi,cs
  413c9c:	mov    dl,0x22
  413c9e:	not    BYTE PTR [edi-0x7fc9f57f]
  413ca4:	test   eax,0xc060c181
  413ca9:	sbb    bh,dl
  413cab:	and    eax,0x4091f827
  413cb0:	mov    ah,0x2a
  413cb2:	repz mov edx,0xe1ede502
  413cb8:	xchg   ax,ax
  413cba:	pop    edx
  413cbb:	retf   
  413cbc:	cli    
  413cbd:	aam    0x68
  413cbf:	cmp    al,BYTE PTR [edi-0x1ca37acb]
  413cc5:	mov    dl,0x4a
  413cc7:	xor    ah,BYTE PTR [eax]
  413cc9:	xlat   BYTE PTR ds:[ebx]
  413cca:	mov    BYTE PTR [eax-0x2f],ch
  413ccd:	cld    
  413cce:	sbb    al,0x35
  413cd0:	out    dx,eax
  413cd1:	pusha  
  413cd2:	jl     0x413cb4
  413cd4:	repz (bad) 
  413cd6:	std    
  413cd7:	xchg   DWORD PTR [ebp-0x75],ecx
  413cda:	data16 cmp al,BYTE PTR ds:[ebp-0x25b45b10]
  413ce2:	or     ecx,0x52
  413ce5:	mov    dh,0xaf
  413ce7:	aam    0xb8
  413ce9:	xlat   BYTE PTR ds:[ebx]
  413cea:	fldenv [esi-0x5789c872]
  413cf0:	xor    DWORD PTR [ebx+0x7050ea0c],0xffffffde
  413cf7:	aas    
  413cf8:	xlat   BYTE PTR ds:[ebx]
  413cf9:	dec    eax
  413cfa:	mov    esi,DWORD PTR ds:0xa791f92b
  413d00:	fdivp  st(6),st
  413d02:	(bad)  
  413d03:	push   edi
  413d04:	outs   dx,DWORD PTR ds:[esi]
  413d05:	pop    ebp
  413d06:	jb     0x413d80
  413d08:	test   DWORD PTR [ecx+0x1],edx
  413d0b:	mov    dh,0x7d
  413d0d:	std    
  413d0e:	repz add al,0x38
  413d11:	es push ss
  413d13:	imul   ecx,DWORD PTR [ecx+0x6a805435],0x3d4fac46
  413d1d:	rcl    DWORD PTR [ecx+0x7b39e6e0],cl
  413d23:	test   DWORD PTR [ebx],eax
  413d25:	mov    esp,0xb9008688
  413d2a:	leave  
  413d2b:	push   esi
  413d2c:	ja     0x413da7
  413d2e:	sahf   
  413d2f:	xor    BYTE PTR [edx+0x418d0b65],0x69
  413d36:	imul   ebx,edi,0x66
  413d39:	mov    dl,0x2d
  413d3b:	and    eax,0x5074122f
  413d40:	(bad)  
  413d41:	lock dec eax
  413d43:	repz scas eax,DWORD PTR es:[edi]
  413d45:	(bad)  
  413d46:	je     0x413cdd
  413d48:	mov    ch,0x4d
  413d4a:	mov    dh,0x45
  413d4c:	test   DWORD PTR [ebp-0x56],edx
  413d4f:	or     DWORD PTR [ebx+0xc],ebp
  413d52:	loopne 0x413db3
  413d54:	and    esp,ebp
  413d56:	inc    edx
  413d57:	imul   eax
  413d59:	lea    esp,[edi+0x25]
  413d5c:	sbb    eax,0x5ce580ca
  413d61:	shr    BYTE PTR [ebx-0x72],0x15
  413d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d66:	je     0x413d63
  413d68:	mov    ch,0x86
  413d6a:	cld    
  413d6b:	lods   eax,DWORD PTR ds:[esi]
  413d6c:	mov    dl,0xc3
  413d6e:	test   edi,edi
  413d70:	or     eax,ecx
  413d72:	cmp    BYTE PTR [ecx],ch
  413d74:	mov    BYTE PTR [eax-0x66b464f],al
  413d7a:	imul   ecx,DWORD PTR [ebx+0x4c],0x4
  413d7e:	popa   
  413d7f:	js     0x413d84
  413d81:	jmp    0x413d4f
  413d83:	test   DWORD PTR [esi-0x6c],edi
  413d86:	xchg   ecx,eax
  413d87:	sbb    al,0xa7
  413d89:	adc    eax,0x45ef2ea2
  413d8e:	push   0xffffffd8
  413d90:	pushf  
  413d91:	adc    DWORD PTR [esi+0x34],ecx
  413d94:	loop   0x413dbb
  413d96:	les    edx,FWORD PTR [ecx-0x78]
  413d99:	pop    esi
  413d9a:	xlat   BYTE PTR ds:[ebx]
  413d9b:	loope  0x413e16
  413d9d:	jno    0x413d78
  413d9f:	mov    dl,0x6a
  413da1:	cdq    
  413da2:	fmul   st(6),st
  413da4:	jmp    0x413d7c
  413da6:	and    ebx,DWORD PTR [ebx-0x14dbc8ee]
  413dac:	push   ecx
  413dad:	fiadd  DWORD PTR [ebx+0x2f]
  413db0:	inc    ebp
  413db1:	in     al,dx
  413db2:	add    edx,DWORD PTR [ecx+0x2563555b]
  413db8:	cmp    DWORD PTR [edi+ebx*4-0x18],esi
  413dbc:	xor    al,0x30
  413dbe:	sbb    eax,0x7115d2b3
  413dc3:	imul   ebp,DWORD PTR [edx],0x1d0f1ed5
  413dc9:	jae    0x413dbe
  413dcb:	mov    ds:0xcee87c53,al
  413dd0:	xchg   esi,eax
  413dd1:	pop    edi
  413dd2:	dec    edx
  413dd3:	or     esi,DWORD PTR [ebx-0x6dd2fa8c]
  413dd9:	xchg   BYTE PTR [ebp+ebp*1+0x7354c190],bl
  413de0:	add    bh,BYTE PTR [ebp+0x3afc9783]
  413de6:	test   DWORD PTR [esi+0x66],esp
  413de9:	lock pop eax
  413deb:	mov    bl,ch
  413ded:	repz arpl WORD PTR [esi+0x6bacdc7a],di
  413df4:	cmp    DWORD PTR [eax],ebx
  413df6:	dec    dh
  413df8:	adc    BYTE PTR [esi+0x4af68cb5],bh
  413dfe:	shl    BYTE PTR [edx],1
  413e00:	xchg   ecx,eax
  413e01:	dec    eax
  413e02:	xchg   ecx,eax
  413e03:	sahf   
  413e04:	jecxz  0x413e62
  413e06:	gs cli 
  413e08:	pop    ebp
  413e09:	outs   dx,BYTE PTR ds:[esi]
  413e0a:	inc    ecx
  413e0b:	add    BYTE PTR [eax-0x6e],ah
  413e0e:	add    al,0x9a
  413e10:	mov    ds:0x4be3e917,eax
  413e15:	mov    bh,0x4
  413e17:	iret   
  413e18:	push   0xf0d7555c
  413e1d:	push   esi
  413e1e:	mov    ?,WORD PTR [ebp-0x2d779482]
  413e24:	test   BYTE PTR [edi+0x43],ch
  413e27:	aaa    
  413e28:	div    BYTE PTR [ebp+0x2d]
  413e2b:	loopne 0x413df7
  413e2d:	jl     0x413e6c
  413e2f:	mov    al,0x4c
  413e31:	loope  0x413e3c
  413e33:	add    BYTE PTR [eax+0x23],ah
  413e36:	or     ebx,DWORD PTR [ecx-0x4305ab53]
  413e3c:	or     cl,BYTE PTR [edi-0x28]
  413e3f:	rol    esp,cl
  413e41:	daa    
  413e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e43:	pop    esp
  413e44:	test   DWORD PTR ds:[ecx],esp
  413e47:	pop    eax
  413e48:	dec    eax
  413e49:	pop    eax
  413e4a:	xchg   ebx,eax
  413e4b:	pop    ds
  413e4c:	sbb    al,0x6b
  413e4e:	lds    edx,FWORD PTR [ebp+0x52df9cba]
  413e54:	and    eax,0x1c4858b8
  413e59:	push   eax
  413e5a:	cmp    eax,0x590f048d
  413e5f:	daa    
  413e60:	inc    eax
  413e61:	pop    ebx
  413e62:	inc    eax
  413e63:	and    ah,BYTE PTR [ecx+0x18]
  413e66:	jmp    0x1382:0xd133c7e2
  413e6d:	out    0x8d,eax
  413e6f:	cmp    ecx,DWORD PTR [edx-0x65]
  413e72:	cwde   
  413e73:	adc    dl,dl
  413e75:	xor    DWORD PTR [ebp-0x752da1c2],0x1dcd429d
  413e7f:	sti    
  413e80:	jl     0x413e28
  413e82:	in     al,dx
  413e83:	inc    ebx
  413e84:	out    0xe,eax
  413e86:	and    dl,dl
  413e88:	jnp    0x413e8d
  413e8a:	sub    ecx,ebp
  413e8c:	mov    eax,0x59c52cfb
  413e91:	mov    ds:0x874570c5,al
  413e96:	pop    edx
  413e97:	mov    eax,ds:0xa05dbbda
  413e9c:	fwait
  413e9d:	or     BYTE PTR [ebp-0x24],0x5a
  413ea1:	(bad)  
  413ea2:	pop    esp
  413ea3:	cdq    
  413ea4:	pop    ebx
  413ea5:	push   cs
  413ea6:	icebp  
  413ea7:	not    BYTE PTR [edi-0x733d8e1]
  413ead:	jne    0x413f24
  413eaf:	stos   BYTE PTR es:[edi],al
  413eb0:	or     esi,esp
  413eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413eb3:	jo     0x413f0e
  413eb5:	xlat   BYTE PTR ds:[ebx]
  413eb6:	iret   
  413eb7:	in     eax,0x58
  413eb9:	add    al,0x9c
  413ebb:	pop    edx
  413ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ebd:	or     esp,ebp
  413ebf:	pushw  es
  413ec1:	add    BYTE PTR [ecx+eax*4],0xc2
  413ec5:	jmp    0x413e98
  413ec7:	cmp    DWORD PTR [ebx+0x442a0f0a],ebx
  413ecd:	pushf  
  413ece:	mov    ds:0x5f78cc5b,eax
  413ed3:	(bad)  
  413ed4:	ror    ebp,cl
  413ed6:	or     eax,0x55914a05
  413edb:	aaa    
  413edc:	jle    0x413ec1
  413ede:	inc    esp
  413edf:	xor    ecx,DWORD PTR [edx+eax*4]
  413ee2:	in     al,0x72
  413ee4:	adc    bl,dh
  413ee6:	retf   0x9bc1
  413ee9:	das    
  413eea:	xchg   edx,eax
  413eeb:	push   eax
  413eec:	cmp    ebp,eax
  413eee:	or     al,0x54
  413ef0:	push   ebx
  413ef1:	mov    esi,0x4a0d934
  413ef6:	xchg   DWORD PTR [edi],edx
  413ef8:	ins    BYTE PTR es:[edi],dx
  413ef9:	sub    eax,DWORD PTR [esi-0x5e]
  413efc:	pop    eax
  413efd:	sub    BYTE PTR [ebx-0x54],ch
  413f00:	jb     0x413eda
  413f02:	loop   0x413ebb
  413f04:	mov    edi,0xb7b596db
  413f09:	lahf   
  413f0a:	cmp    eax,0x5e688338
  413f0f:	adc    BYTE PTR [ecx],al
  413f11:	std    
  413f12:	stos   BYTE PTR es:[edi],al
  413f13:	sub    ebx,esp
  413f15:	cmp    al,0x67
  413f17:	pop    DWORD PTR [ecx]
  413f19:	shr    DWORD PTR [ebx+0x4d25e21f],0x19
  413f20:	mov    WORD PTR [edx],?
  413f22:	sub    eax,0x75501a2e
  413f27:	call   0x2639:0xb4c2c800
  413f2e:	pop    edx
  413f2f:	lods   al,BYTE PTR ds:[esi]
  413f30:	jmp    0x82bf253f
  413f35:	lods   eax,DWORD PTR ds:[esi]
  413f36:	fwait
  413f37:	iret   
  413f38:	scas   al,BYTE PTR es:[edi]
  413f39:	and    DWORD PTR [esi+0x17],ebx
  413f3c:	and    eax,0x5e199baa
  413f41:	rol    ebx,1
  413f43:	inc    edi
  413f44:	icebp  
  413f45:	push   ss
  413f46:	in     eax,0xda
  413f48:	dec    esp
  413f49:	push   es
  413f4a:	in     eax,dx
  413f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f4c:	fisttp WORD PTR [edi+0x6b]
  413f4f:	or     al,0xde
  413f51:	inc    edi
  413f52:	test   DWORD PTR [edx],eax
  413f54:	in     al,0xf0
  413f56:	mov    DWORD PTR [edx+eiz*1],ecx
  413f59:	cmp    BYTE PTR [ebx+edx*2-0x9aced4d],dl
  413f60:	jp     0x413f36
  413f62:	dec    esi
  413f63:	mov    ds:0x663472f,eax
  413f68:	inc    ebp
  413f69:	sbb    ch,BYTE PTR [esi-0x2f]
  413f6c:	fstp   TBYTE PTR [esi-0x74044ff]
  413f72:	js     0x413f50
  413f74:	popa   
  413f75:	and    esp,DWORD PTR [eax+edx*2+0x5c9c838d]
  413f7c:	out    dx,eax
  413f7d:	and    BYTE PTR [ebx+0x6832b0fc],bl
  413f83:	mov    edi,ebp
  413f85:	dec    ebp
  413f86:	adc    ecx,DWORD PTR [esi]
  413f88:	dec    esp
  413f89:	cli    
  413f8a:	xor    DWORD PTR [ebp+0x1b],edi
  413f8d:	aam    0x4f
  413f8f:	or     DWORD PTR [edi-0x53],esp
  413f92:	sbb    eax,0xc6c405cf
  413f97:	and    dh,bh
  413f99:	test   eax,0x74bca943
  413f9e:	mov    ds:0x3d7e56df,al
  413fa3:	inc    ecx
  413fa4:	mov    ss,edi
  413fa6:	lds    edx,FWORD PTR [ecx+0x1]
  413fa9:	adc    BYTE PTR [ebx-0xc4fa058],0x38
  413fb0:	mov    al,ds:0xf98d25a4
  413fb5:	pop    edi
  413fb6:	int    0xfd
  413fb8:	adc    bh,cl
  413fba:	pop    ebx
  413fbb:	mov    edi,0x4d264eec
  413fc0:	call   0xb976636e
  413fc5:	xchg   bl,ah
  413fc7:	(bad)  
  413fca:	sub    al,0xd
  413fcc:	dec    ecx
  413fcd:	aam    0x2a
  413fcf:	mov    ebx,0xeb9e615c
  413fd4:	push   0x68
  413fd6:	and    edi,DWORD PTR [ecx]
  413fd8:	pop    esi
  413fd9:	mov    gs,WORD PTR [ecx+0x7513bc12]
  413fdf:	imul   esi,ebp,0x12
  413fe2:	stc    
  413fe3:	repz jge 0x413fc9
  413fe6:	add    esp,DWORD PTR [edx]
  413fe8:	aam    0xc5
  413fea:	xor    dl,BYTE PTR [ebx+0x5b1c5f1c]
  413ff0:	dec    ecx
  413ff1:	adc    eax,0x55939172
  413ff6:	mov    dl,0xc
  413ff8:	inc    edi
  413ff9:	add    al,BYTE PTR [ebx]
  413ffb:	repz or al,0xa2
  413ffe:	lods   eax,DWORD PTR ds:[esi]
  413fff:	dec    eax
  414000:	sbb    al,0xd2
  414002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414003:	adc    eax,0x49cf3b9a
  414008:	(bad)  
  414009:	or     ch,BYTE PTR [ebx-0x225adbaf]
  41400f:	inc    esp
  414010:	add    eax,0x2b10845a
  414015:	mov    WORD PTR [esi],gs
  414017:	lea    edx,ds:0x6b6d49e6
  41401d:	ss loope 0x413fc8
  414020:	xchg   esi,eax
  414021:	inc    esp
  414022:	sbb    esi,DWORD PTR [ebx-0x4b4c7785]
  414028:	mov    edx,0x41dd930e
  41402d:	push   0x23
  41402f:	sbb    dl,BYTE PTR [ebp+0x31]
  414032:	inc    edx
  414033:	fdivr  QWORD PTR [esi]
  414035:	xchg   ecx,eax
  414036:	fisubr DWORD PTR [edx+0x2a5dc4ac]
  41403c:	(bad)  
  41403d:	mov    edi,0x5d7507a9
  414042:	test   ah,al
  414044:	inc    esp
  414045:	xor    al,0x2d
  414047:	sbb    edi,ebp
  414049:	mov    ah,0xe0
  41404b:	xchg   ebp,eax
  41404c:	enter  0x5bb6,0x18
  414050:	sbb    BYTE PTR [ecx-0x33],dl
  414053:	ins    DWORD PTR es:[edi],dx
  414054:	scas   al,BYTE PTR es:[edi]
  414055:	test   bh,cl
  414057:	mov    ch,0xe4
  414059:	hlt    
  41405a:	in     al,dx
  41405b:	pusha  
  41405c:	ins    BYTE PTR es:[edi],dx
  41405d:	jle    0x414044
  41405f:	sbb    edi,ebp
  414061:	inc    ebx
  414062:	jmp    0x2fed689c
  414067:	leave  
  414068:	sub    eax,0xa64d6fc4
  41406d:	mov    cs,WORD PTR [eax]
  41406f:	mov    ebp,0x51468aa7
  414074:	sub    esi,eax
  414076:	mov    ds:0x8839bd80,eax
  41407b:	push   eax
  41407c:	mov    esi,0x55098109
  414081:	(bad)  
  414082:	(bad)  
  414083:	mov    edx,0x4b9207fe
  414088:	(bad)  
  414089:	fidivr DWORD PTR [esi+0x3a]
  41408c:	pop    ss
  41408d:	shl    BYTE PTR [eax-0x27],1
  414090:	mov    ebp,0x22f1fc35
  414095:	or     BYTE PTR [ecx+ecx*2-0x2e9c4b19],dl
  41409c:	ret    0xf982
  41409f:	mov    BYTE PTR [ecx-0x67],bl
  4140a2:	dec    esp
  4140a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a4:	pusha  
  4140a5:	rol    BYTE PTR [edi-0xe500616],cl
  4140ab:	or     eax,0x5ed958b3
  4140b0:	icebp  
  4140b1:	leave  
  4140b2:	mov    al,ds:0xdd972ddf
  4140b7:	pop    ds
  4140b8:	sub    al,0xd7
  4140ba:	xlat   BYTE PTR ds:[ebx]
  4140bb:	into   
  4140bc:	pop    edi
  4140bd:	inc    esp
  4140be:	stos   DWORD PTR es:[edi],eax
  4140bf:	adc    BYTE PTR [eax-0x5],bl
  4140c2:	push   edi
  4140c3:	out    dx,eax
  4140c4:	add    DWORD PTR [eax+0x5f34bc06],ecx
  4140ca:	scas   eax,DWORD PTR es:[edi]
  4140cb:	and    eax,DWORD PTR [ecx+ebx*2-0x75]
  4140cf:	pop    esp
  4140d0:	mov    ah,0xb6
  4140d2:	loope  0x414077
  4140d4:	jnp    0x414073
  4140d6:	out    dx,eax
  4140d7:	adc    esi,eax
  4140d9:	daa    
  4140da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140db:	jmp    FWORD PTR [edx]
  4140dd:	hlt    
  4140de:	(bad)  
  4140df:	fst    DWORD PTR [edi-0x6ce48414]
  4140e5:	loop   0x4140cf
  4140e7:	cdq    
  4140e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140e9:	loop   0x4140f3
  4140eb:	push   0xdf587fae
  4140f0:	sahf   
  4140f1:	call   0x760:0xacbc566b
  4140f8:	scas   eax,DWORD PTR es:[edi]
  4140f9:	jle    0x41411c
  4140fb:	jmp    0x9ce1502d
  414100:	cmp    dl,BYTE PTR [edx]
  414102:	call   0x1fd2:0x7abadc34
  414109:	inc    esi
  41410a:	lock stos DWORD PTR es:[edi],eax
  41410c:	add    cl,BYTE PTR [eax+0x29]
  41410f:	cdq    
  414110:	push   0x79
  414112:	pop    eax
  414113:	or     bl,BYTE PTR [esi]
  414115:	test   ch,al
  414117:	sahf   
  414118:	ret    0xcd3e
  41411b:	or     BYTE PTR [edx+0x74],bh
  41411e:	jno    0x414191
  414120:	outs   dx,BYTE PTR ds:[esi]
  414121:	les    esi,FWORD PTR [ecx+edx*2]
  414124:	push   esi
  414125:	sbb    DWORD PTR [ebx+0x3f126572],0x57ceaefc
  41412f:	push   ebx
  414130:	push   edi
  414131:	add    dh,al
  414133:	mov    dh,0xb4
  414135:	repz imul edx,eax,0xffffff82
  414139:	and    al,BYTE PTR [edx+0x334c5d77]
  41413f:	xor    eax,DWORD PTR gs:[edx+0x37]
  414143:	sub    cl,BYTE PTR [ecx-0x537e208]
  414149:	std    
  41414a:	adc    ebx,DWORD PTR [esi+0x19800d50]
  414150:	pop    edx
  414151:	cmp    al,0x5b
  414153:	inc    esp
  414154:	and    eax,DWORD PTR [esp+ebp*8-0x556b6723]
  41415b:	jg     0x41410d
  41415d:	out    0xeb,eax
  41415f:	push   ebx
  414160:	adc    ebx,esi
  414162:	push   ebx
  414163:	sti    
  414164:	xchg   ebx,eax
  414165:	bound  ebx,QWORD PTR [edi]
  414167:	mov    dh,0x1b
  414169:	shr    ecx,cl
  41416b:	inc    ecx
  41416c:	scas   eax,DWORD PTR es:[edi]
  41416d:	bound  esi,QWORD PTR [esi]
  41416f:	adc    BYTE PTR [ebx],dl
  414171:	repz push 0xf8eef562
  414177:	nop
  414178:	and    BYTE PTR [esi-0x3d],dl
  41417b:	add    ah,bl
  41417d:	cmp    cl,cl
  41417f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414180:	dec    esi
  414181:	push   ebx
  414182:	dec    edx
  414183:	jmp    0x9ca8c33f
  414188:	jae    0x414127
  41418a:	mov    dl,cl
  41418c:	adc    al,BYTE PTR [eax+0x5a2d10db]
  414192:	adc    edx,DWORD PTR [esi]
  414194:	jmp    0x414191
  414196:	xchg   ebp,eax
  414197:	loope  0x4141b5
  414199:	add    dh,BYTE PTR [ebx]
  41419b:	push   ebp
  41419c:	adc    bl,BYTE PTR [ebx]
  41419e:	or     BYTE PTR [edi-0x5],cl
  4141a1:	loope  0x414138
  4141a3:	not    BYTE PTR [edx]
  4141a5:	dec    esi
  4141a6:	call   0x42de:0x86b208da
  4141ad:	mov    WORD PTR [ebx+0x3e2cc5a3],?
  4141b3:	mov    DWORD PTR [esp+edx*1],esi
  4141b6:	xor    eax,0xc24441ec
  4141bb:	in     eax,dx
  4141bc:	pop    ecx
  4141bd:	out    dx,eax
  4141be:	mov    esi,0x867fd15
  4141c3:	icebp  
  4141c4:	dec    edx
  4141c5:	loop   0x41418a
  4141c7:	inc    ebx
  4141c8:	push   ecx
  4141c9:	int    0xf
  4141cb:	mov    BYTE PTR [edx+0x3c],ch
  4141ce:	mov    eax,0x636cab55
  4141d3:	fwait
  4141d4:	xchg   edi,eax
  4141d5:	sahf   
  4141d6:	retf   0x703e
  4141d9:	xchg   esi,eax
  4141da:	push   0xc941a13
  4141df:	inc    esi
  4141e0:	out    dx,al
  4141e1:	and    ch,cl
  4141e3:	sbb    BYTE PTR [esi-0x78],0x73
  4141e7:	hlt    
  4141e8:	dec    edx
  4141e9:	bound  ebp,QWORD PTR [ebp+0x3b0c111e]
  4141ef:	outs   dx,BYTE PTR ds:[esi]
  4141f0:	iret   
  4141f1:	mov    eax,ds:0x5a2b94b5
  4141f6:	fbstp  TBYTE PTR [eax+ebx*1+0x304feb99]
  4141fd:	stc    
  4141fe:	imul   edi,ebx,0xc0800e32
  414204:	daa    
  414205:	test   DWORD PTR [edx-0xc],ecx
  414208:	xchg   ebx,eax
  414209:	out    dx,al
  41420a:	adc    DWORD PTR [ebx+0x476d5d71],esi
  414210:	in     al,0xfd
  414212:	and    ebp,DWORD PTR ds:0x6342cb05
  414218:	inc    ebx
  414219:	inc    ebp
  41421a:	push   esi
  41421b:	push   ebp
  41421c:	fidiv  WORD PTR [esi-0x71d80687]
  414222:	lods   eax,DWORD PTR ds:[esi]
  414223:	retf   
  414224:	(bad)  [edx]
  414226:	int    0xa1
  414228:	jae    0x41424f
  41422a:	je     0x414253
  41422c:	cmc    
  41422d:	fs enter 0xed44,0xf7
  414232:	xchg   edx,eax
  414233:	adc    ecx,DWORD PTR [esi+0xb]
  414236:	addr16 popa 
  414238:	add    eax,0x7d996ad5
  41423d:	dec    ecx
  41423e:	or     DWORD PTR ds:0x98a46953,ecx
  414244:	cdq    
  414245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414246:	cdq    
  414247:	sub    eax,0xd2c73e8a
  41424c:	push   esi
  41424d:	and    bl,BYTE PTR [eax+0x7d]
  414250:	xchg   esi,eax
  414251:	xchg   DWORD PTR [ebx],edi
  414253:	xor    edi,ecx
  414255:	jno    0x41421e
  414257:	lods   al,BYTE PTR ds:[esi]
  414258:	sub    eax,0x24c68c7e
  41425d:	sub    eax,DWORD PTR [esi+ebp*2]
  414260:	dec    dx
  414262:	adc    edi,edx
  414264:	push   ecx
  414265:	cmc    
  414266:	nop
  414267:	xlat   BYTE PTR ds:[ebx]
  414268:	(bad)  
  414269:	div    BYTE PTR [esp+eax*2+0x195576a]
  414270:	mov    edx,0x85b95fa3
  414275:	add    eax,0x91661387
  41427a:	fmul   DWORD PTR [edi-0x6e81cab7]
  414280:	and    ah,BYTE PTR [ebx-0x7c]
  414283:	fwait
  414284:	(bad)
  414287:	mov    edi,0x48d7fa2d
  41428c:	pushf  
  41428d:	add    al,0x77
  41428f:	enter  0x939f,0x3
  414293:	push   ebp
  414294:	inc    ebp
  414295:	popf   
  414296:	ins    BYTE PTR es:[edi],dx
  414297:	dec    esi
  414298:	retf   0x26ef
  41429b:	pop    ebx
  41429c:	popf   
  41429d:	das    
  41429e:	mov    al,0xde
  4142a0:	scas   al,BYTE PTR es:[edi]
  4142a1:	sub    eax,0x4ba2fb91
  4142a6:	cld    
  4142a7:	dec    ebx
  4142a8:	xor    eax,ebx
  4142aa:	or     dh,BYTE PTR [ecx-0x578cf8e6]
  4142b0:	neg    BYTE PTR [ebp-0x2c78fc63]
  4142b6:	xor    cl,BYTE PTR [esi]
  4142b8:	or     BYTE PTR [edx+ebx*8+0x6f],al
  4142bc:	aas    
  4142bd:	outs   dx,DWORD PTR ds:[esi]
  4142be:	test   DWORD PTR [ecx+0x3b91bf31],eax
  4142c4:	nop
  4142c5:	ins    DWORD PTR es:[edi],dx
  4142c6:	push   ss
  4142c7:	out    dx,eax
  4142c8:	sbb    al,0xd6
  4142ca:	xor    eax,esp
  4142cc:	test   DWORD PTR [ebp-0x5],ecx
  4142cf:	popa   
  4142d0:	repz aam 0x62
  4142d3:	or     ch,BYTE PTR [ecx+edi*8+0x62ceb7ea]
  4142da:	mov    WORD PTR [esi+0x69],es
  4142dd:	push   ebx
  4142de:	add    al,0x1
  4142e0:	jmp    0xbca4b9e8
  4142e5:	inc    eax
  4142e6:	test   ah,ch
  4142e8:	(bad)  
  4142e9:	mov    cl,0xfe
  4142eb:	das    
  4142ec:	lea    eax,[ebp+0x27]
  4142ef:	sbb    dl,cl
  4142f1:	and    cl,ah
  4142f3:	jmp    0x4142da
  4142f5:	adc    BYTE PTR [edx],bh
  4142f7:	call   0x140a:0x13761dde
  4142fe:	aaa    
  4142ff:	xor    al,0x76
  414301:	retf   
  414302:	arpl   WORD PTR [ecx-0x29f9582d],cx
  414308:	xor    esp,DWORD PTR [ebp+0x7b]
  41430b:	aam    0xeb
  41430d:	dec    ecx
  41430e:	inc    edx
  41430f:	ror    DWORD PTR [ecx+0x26],0xa7
  414313:	nop
  414314:	sbb    edx,DWORD PTR ds:0xca6e7256
  41431a:	xchg   DWORD PTR [ecx],eax
  41431c:	and    edi,DWORD PTR [edi+0x3c]
  41431f:	jno    0x4142c6
  414321:	push   ebp
  414322:	push   ds
  414323:	nop
  414324:	stc    
  414325:	add    DWORD PTR [ecx],esp
  414327:	mov    dh,0x54
  414329:	imul   esi,DWORD PTR [eax+0x79141d27],0xefe19a7f
  414333:	rcl    DWORD PTR ds:0xe09c9ccc,cl
  414339:	dec    eax
  41433a:	rol    BYTE PTR [ebx-0x6c4eafb4],1
  414340:	aaa    
  414341:	sbb    BYTE PTR [ebp-0x48],ch
  414344:	popa   
  414345:	into   
  414346:	mov    dh,0x58
  414348:	sub    BYTE PTR [esi],dh
  41434a:	jbe    0x4143a6
  41434c:	mov    esi,0x5177f65c
  414351:	pusha  
  414352:	and    eax,0xf0bfbfc0
  414357:	sahf   
  414358:	fld    st(2)
  41435a:	aas    
  41435b:	es pop ecx
  41435d:	iret   
  41435e:	fdivr  st(0),st
  414360:	aas    
  414361:	mov    ds:0xe1b933a,eax
  414366:	jg     0x4142f5
  414368:	mov    fs,WORD PTR [ebx-0x20]
  41436b:	jns    0x41435a
  41436d:	loopne 0x4143bf
  41436f:	mov    dh,0xd4
  414371:	scas   eax,DWORD PTR es:[edi]
  414372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414373:	dec    ebx
  414374:	dec    ebp
  414375:	mov    eax,ds:0x7c3c36dc
  41437a:	or     ch,ch
  41437c:	(bad)  
  41437d:	pop    ss
  41437e:	push   cs
  41437f:	fstp   DWORD PTR [eax-0xf2abf6]
  414385:	sbb    DWORD PTR [esi],ebp
  414387:	fisttp QWORD PTR [eax+0x10]
  41438a:	xchg   esi,eax
  41438b:	mov    eax,0xe83c12d9
  414390:	add    dl,BYTE PTR [edi-0x503f90ec]
  414396:	xor    eax,ecx
  414398:	test   DWORD PTR [ebx],esi
  41439a:	sub    dh,BYTE PTR [esi-0x3e6fd536]
  4143a0:	clc    
  4143a1:	and    eax,0x146963b9
  4143a6:	and    DWORD PTR [eax+0x3b395100],0xdd54ce1a
  4143b0:	mov    eax,ds:0xe1fcb4d5
  4143b5:	fyl2x  
  4143b7:	sbb    al,0x52
  4143b9:	mov    esi,0x27cd40c0
  4143be:	adc    eax,0x7f06f0f5
  4143c3:	xor    DWORD PTR [ecx-0x2e],0x53359ded
  4143ca:	fucomip st,st(7)
  4143cc:	test   eax,0x15151d3c
  4143d1:	and    eax,0x7e6faa68
  4143d6:	loope  0x414426
  4143d8:	out    0xd9,al
  4143da:	push   0xffffffc0
  4143dc:	xor    DWORD PTR [ecx-0x34],ebx
  4143df:	cmc    
  4143e0:	jl     0x4143bd
  4143e2:	out    0x73,eax
  4143e4:	push   ecx
  4143e5:	lock mov ch,0x68
  4143e8:	xlat   BYTE PTR ds:[ebx]
  4143e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143ea:	lea    ebp,[esi-0x42527b73]
  4143f0:	outs   dx,DWORD PTR ds:[esi]
  4143f1:	sbb    al,0xaf
  4143f3:	ror    DWORD PTR [eax+ebx*1+0x7ebc1981],cl
  4143fa:	retf   
  4143fb:	cmc    
  4143fc:	fdiv   st(4),st
  4143fe:	fs leave 
  414400:	xlat   BYTE PTR ds:[ebx]
  414401:	push   edx
  414402:	out    0xd8,eax
  414404:	mov    ch,0x88
  414406:	repz mov ch,BYTE PTR [esi]
  414409:	shl    cl,0x64
  41440c:	mov    ebx,ecx
  41440e:	test   al,0x9
  414410:	dec    edx
  414411:	js     0x4143de
  414413:	je     0x414466
  414415:	and    DWORD PTR [ebp+0x4d],esi
  414418:	xchg   ecx,eax
  414419:	ds xor bh,cl
  41441c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41441d:	inc    esi
  41441e:	or     ecx,ecx
  414420:	ror    bl,0x22
  414423:	pop    es
  414424:	icebp  
  414425:	inc    edx
  414426:	mov    bh,0x34
  414428:	xchg   DWORD PTR [esi+eax*1],ecx
  41442b:	mov    bh,0x90
  41442d:	add    eax,0x103b5566
  414432:	js     0x414436
  414434:	es pop es
  414436:	push   0x8410ea6
  41443b:	inc    eax
  41443c:	mov    ss:0x7342d784,al
  414442:	xor    eax,0xb637012e
  414447:	xchg   esi,eax
  414448:	rcl    DWORD PTR [esi],1
  41444a:	mov    al,ds:0x1cc7c55e
  41444f:	push   ebp
  414450:	aad    0x1
  414452:	mov    DWORD PTR [edi+0x42d63b17],ecx
  414458:	mov    bh,0x5a
  41445a:	daa    
  41445b:	(bad)  
  41445c:	cmp    al,0x96
  41445e:	xchg   esp,eax
  41445f:	sti    
  414460:	inc    edx
  414461:	imul   edx,DWORD PTR [edx+ebx*8+0x1f988bd],0xfffffff9
  414469:	mov    cl,bh
  41446b:	jnp    0x4144dc
  41446d:	std    
  41446e:	out    dx,al
  41446f:	add    al,0x56
  414471:	or     esi,DWORD PTR [esi]
  414473:	jns    0x414497
  414475:	outs   dx,BYTE PTR ds:[esi]
  414476:	mov    dl,0xad
  414478:	adc    DWORD PTR ds:0xe1b385ed,esp
  41447e:	or     ecx,DWORD PTR [edx-0x2c6f64bd]
  414484:	xor    DWORD PTR [edx],edx
  414486:	mov    al,ds:0x533cdd59
  41448b:	call   0xc3b8:0x5f7ddf66
  414492:	repz inc ebx
  414494:	in     al,0xf8
  414496:	mov    BYTE PTR [ecx-0x28],dh
  414499:	jne    0x41441b
  41449b:	push   ss
  41449c:	mov    ch,0x29
  41449e:	in     eax,0xd
  4144a0:	inc    ebx
  4144a1:	sub    BYTE PTR [ecx-0x445ab109],ch
  4144a7:	mov    esp,0x31a17fee
  4144ac:	adc    ch,BYTE PTR [edx+0x69]
  4144af:	shl    DWORD PTR [eax+esi*8+0x65],cl
  4144b3:	dec    ecx
  4144b4:	enter  0x4fdc,0xbb
  4144b8:	ret    0x9844
  4144bb:	arpl   WORD PTR cs:[ebx-0x2a],bp
  4144bf:	sub    al,0x56
  4144c1:	inc    esi
  4144c2:	inc    ebp
  4144c3:	pmulhuw mm6,QWORD PTR [ebx+0x28edc5f3]
  4144ca:	test   eax,0xcd9e936f
  4144cf:	sbb    edi,DWORD PTR [edi-0x7b75b92]
  4144d5:	adc    esi,DWORD PTR ss:[esp+ebp*1-0x3]
  4144da:	pop    ss
  4144db:	push   ecx
  4144dc:	(bad)  
  4144de:	arpl   bx,di
  4144e0:	aas    
  4144e1:	jns    0x414531
  4144e3:	xchg   DWORD PTR [eax+0x16],ebx
  4144e6:	pop    ebx
  4144e7:	into   
  4144e8:	in     al,dx
  4144e9:	cmp    ah,cl
  4144eb:	ret    0x6ae4
  4144ee:	dec    esp
  4144ef:	sti    
  4144f0:	xor    eax,0xdc871276
  4144f5:	sub    eax,esp
  4144f7:	pop    ebp
  4144f8:	stc    
  4144f9:	clc    
  4144fa:	cmp    al,0x87
  4144fc:	fcomp  DWORD PTR [edi-0x4b]
  4144ff:	sbb    al,0x63
  414501:	mov    ebx,0x205d6285
  414506:	push   eax
  414507:	xchg   edx,eax
  414508:	jle    0x4144aa
  41450a:	sahf   
  41450b:	cli    
  41450c:	sub    eax,0x6687fdee
  414511:	mov    eax,ds:0x4d92423f
  414516:	and    BYTE PTR [ecx],al
  414518:	ret    
  414519:	push   ebp
  41451a:	sti    
  41451b:	cmp    eax,DWORD PTR [edi+0x15]
  41451e:	mov    dl,0x58
  414520:	cmp    ah,dh
  414522:	xchg   DWORD PTR [ecx-0x3],ebp
  414525:	daa    
  414526:	stos   DWORD PTR es:[edi],eax
  414527:	sub    BYTE PTR [ebx-0x14],al
  41452a:	pop    esp
  41452b:	and    bl,BYTE PTR [ebx-0x1bd640ba]
  414531:	dec    edi
  414532:	mov    fs,WORD PTR [eax+ecx*8+0x2b]
  414536:	popf   
  414537:	fwait
  414538:	and    BYTE PTR [edi-0x5015526d],0x91
  41453f:	hlt    
  414540:	push   esi
  414541:	mov    ds:0x5bad0110,eax
  414546:	popa   
  414547:	inc    ecx
  414548:	xchg   ebp,eax
  414549:	inc    esi
  41454a:	mov    edi,0x85489284
  41454f:	cli    
  414550:	cmp    cl,BYTE PTR [ecx-0x7d]
  414553:	sahf   
  414554:	mov    dl,0x58
  414556:	mov    eax,ds:0xc4f74e9c
  41455b:	mov    fs,WORD PTR [eax+0x3304c739]
  414561:	sbb    DWORD PTR [ebp+0x65],edx
  414564:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  414566:	cld    
  414567:	aaa    
  414568:	(bad)  
  414569:	in     al,0x5d
  41456b:	pop    ebx
  41456c:	mov    dh,0x33
  41456e:	push   esp
  41456f:	sahf   
  414570:	stos   BYTE PTR es:[edi],al
  414571:	stc    
  414572:	rcl    DWORD PTR [edx+0x21],0xdd
  414576:	jb     0x414568
  414578:	imul   edx,DWORD PTR [edx-0x3eafe38a],0x743b1ae9
  414582:	cwde   
  414583:	xchg   edx,eax
  414584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414585:	stos   DWORD PTR es:[edi],eax
  414586:	mov    bh,0x8e
  414588:	adc    ecx,DWORD PTR [eax]
  41458a:	or     DWORD PTR [eax-0x33018631],ebp
  414590:	push   ecx
  414591:	jp     0x4145e0
  414593:	repz dec edx
  414595:	or     DWORD PTR [edx+0x61d8f21a],edi
  41459b:	xor    esp,esi
  41459d:	cld    
  41459e:	cmp    eax,0xfaa78a23
  4145a3:	or     eax,0x70ea9e3f
  4145a8:	outs   dx,BYTE PTR ds:[esi]
  4145a9:	bound  eax,QWORD PTR gs:[eax+0x56fc5d52]
  4145b0:	icebp  
  4145b1:	xor    al,ah
  4145b3:	pop    ebx
  4145b4:	inc    BYTE PTR [edx]
  4145b6:	hlt    
  4145b7:	cmp    al,0x98
  4145b9:	mov    bh,0x79
  4145bb:	sub    ah,BYTE PTR [esi-0x4bd6f585]
  4145c1:	mov    ds:0x206e1586,al
  4145c6:	cld    
  4145c7:	bound  esp,QWORD PTR [eax+0x1e99c1e6]
  4145cd:	ja     0x4145ba
  4145cf:	out    0xf7,al
  4145d1:	or     DWORD PTR ds:0xd273ca,edi
  4145d7:	sahf   
  4145d8:	add    al,0xb9
  4145db:	sbb    bl,BYTE PTR [esi+eiz*2-0x79]
  4145df:	mov    ebx,0xa719bc71
  4145e4:	inc    ecx
  4145e5:	xchg   BYTE PTR ds:0xb844703f,al
  4145eb:	inc    edx
  4145ec:	fcmove st,st(5)
  4145ee:	jmp    0x9c26c738
  4145f3:	xor    bh,BYTE PTR [edx-0x505c5916]
  4145f9:	jge    0x41464b
  4145fb:	jo     0x41464e
  4145fd:	xchg   bl,dh
  4145ff:	jp     0x414587
  414601:	inc    ebx
  414602:	adc    eax,0xd7fe758d
  414607:	cld    
  414608:	push   edx
  414609:	lahf   
  41460a:	dec    ebp
  41460b:	cmp    DWORD PTR [edi+0x6],eax
  41460e:	fidiv  DWORD PTR [edx-0x3e85bc1c]
  414614:	mov    ebp,0x30ce62bb
  414619:	repnz loopne 0x4145d8
  41461c:	push   ebp
  41461d:	sub    esi,esp
  41461f:	mov    bl,0xea
  414621:	stos   BYTE PTR es:[edi],al
  414622:	jmp    0x4146a0
  414624:	fsubr  QWORD PTR [ecx-0x1e]
  414627:	push   edx
  414628:	mov    dh,0x34
  41462a:	div    edi
  41462c:	das    
  41462d:	xchg   edx,eax
  41462e:	mov    esp,0x5e3ce577
  414633:	add    BYTE PTR [ecx+0x54f63edc],bh
  414639:	ror    BYTE PTR [ecx],cl
  41463b:	xor    BYTE PTR [esi],cl
  41463d:	mov    ah,0x50
  41463f:	(bad)  [ecx-0x6f062ca4]
  414645:	cmp    eax,DWORD PTR [edi+edi*2]
  414648:	or     esp,DWORD PTR [ecx-0x5802506e]
  41464e:	call   0xe35f:0x9fc99ce1
  414655:	rcl    BYTE PTR [edx+eax*4],cl
  414658:	add    ah,cl
  41465a:	mov    eax,0x75dee1cd
  41465f:	xchg   esi,eax
  414660:	fcom   DWORD PTR [edx+0x432abcb8]
  414666:	xchg   edx,eax
  414667:	xchg   ebx,eax
  414668:	cmc    
  414669:	psrad  mm0,mm5
  41466c:	or     DWORD PTR [ecx+0x345cd19f],ebp
  414672:	jns    0x4146dc
  414674:	shr    ebx,1
  414676:	imul   eax,DWORD PTR [edx+eax*2+0x3dc38963],0x296af9ed
  414681:	sub    al,0xec
  414683:	dec    esi
  414684:	fsub   QWORD PTR ds:0xeca87b71
  41468a:	nop
  41468b:	mov    edx,0x39e6563a
  414690:	or     bl,BYTE PTR [ebp-0x30]
  414693:	shl    DWORD PTR [ecx],1
  414695:	popa   
  414696:	add    DWORD PTR [esi+edx*4-0x9cb6652],eax
  41469d:	inc    esp
  41469e:	mov    eax,ds:0xf6f18726
  4146a3:	xchg   BYTE PTR [ebx+eiz*4+0x35],ch
  4146a7:	add    BYTE PTR [eax+0x4c752ccf],dl
  4146ad:	pop    esp
  4146ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146af:	cmp    dh,dl
  4146b1:	push   0xffffffba
  4146b3:	sbb    eax,0x85c407f0
  4146b8:	mov    ds:0x9ab17a9a,eax
  4146bd:	repnz out dx,al
  4146bf:	adc    cl,ch
  4146c1:	inc    ebx
  4146c2:	test   eax,0xd79165df
  4146c7:	(bad)  
  4146c8:	sbb    BYTE PTR [esi+esi*2+0x19a13130],dh
  4146cf:	enter  0xda04,0x2
  4146d3:	xor    ah,BYTE PTR [ecx-0x3ed6dca5]
  4146d9:	xchg   esi,eax
  4146da:	loope  0x4146ba
  4146dc:	fbld   TBYTE PTR [esi-0x25]
  4146df:	push   edi
  4146e0:	and    bl,bh
  4146e2:	cli    
  4146e3:	(bad)  
  4146e5:	rcr    edi,1
  4146e7:	mov    esp,0x594efbd8
  4146ec:	dec    ebp
  4146ed:	xor    eax,0x69f38a03
  4146f2:	add    al,0x7
  4146f4:	or     eax,0x37c02ffa
  4146f9:	mov    eax,ds:0x6d4b684d
  4146fe:	cdq    
  4146ff:	xor    BYTE PTR [edi],dl
  414701:	jo     0x4146ca
  414703:	jecxz  0x4146d3
  414705:	mov    BYTE PTR [esi],cl
  414707:	pushf  
  414708:	jnp    0x414748
  41470a:	jne    0x414772
  41470c:	les    ebx,FWORD PTR [ebp+0x36]
  41470f:	imul   ebx,DWORD PTR gs:[ecx],0x59
  414713:	(bad)  
  414714:	(bad)  
  414715:	and    ah,BYTE PTR [edx-0x6214eb5c]
  41471b:	mov    bh,0x94
  41471d:	adc    al,0xf1
  41471f:	inc    ecx
  414720:	test   BYTE PTR [edx-0x2d],dh
  414723:	cwde   
  414724:	call   0xa467:0xe56af6b4
  41472b:	aaa    
  41472c:	ins    BYTE PTR es:[edi],dx
  41472d:	test   BYTE PTR [ebx-0x58],dh
  414730:	scas   al,BYTE PTR es:[edi]
  414731:	xchg   edi,eax
  414732:	loop   0x41477a
  414734:	dec    esi
  414735:	fist   WORD PTR [esi+ebx*2+0x5d]
  414739:	mov    dl,0x34
  41473b:	cwde   
  41473c:	ja     0x414754
  41473e:	xchg   edx,eax
  41473f:	mov    dh,0x49
  414741:	add    bl,ch
  414743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414744:	int3   
  414745:	shr    BYTE PTR ds:0xf37ef88c,0x48
  41474c:	mov    edx,0xae36d4a6
  414751:	or     ecx,edi
  414753:	inc    eax
  414754:	xchg   edx,eax
  414755:	xor    edi,DWORD PTR [ebx]
  414757:	jno    0x4146ec
  414759:	test   al,0xae
  41475b:	jbe    0x41479c
  41475d:	xchg   edx,eax
  41475e:	sub    bl,BYTE PTR [ebp+ebx*1-0xf38beb3]
  414765:	add    eax,0x946ef2a1
  41476a:	add    al,0x27
  41476c:	mov    ebx,0x7affa30c
  414771:	push   cs
  414772:	xor    ebp,DWORD PTR [ebp+0x6]
  414775:	shl    BYTE PTR [esi+0x6c],0x26
  414779:	loop   0x414733
  41477b:	sahf   
  41477c:	call   0x1f8e8ac9
  414781:	sbb    al,0x9f
  414783:	inc    eax
  414784:	aas    
  414785:	int3   
  414786:	sbb    bh,dl
  414788:	popf   
  414789:	outs   dx,BYTE PTR ds:[esi]
  41478a:	jbe    0x4147ef
  41478c:	test   al,0xbc
  41478e:	int3   
  41478f:	xchg   edx,eax
  414790:	xchg   esi,eax
  414791:	in     eax,0x38
  414793:	pop    ebx
  414794:	inc    ecx
  414795:	sbb    esp,DWORD PTR [ecx+0x18]
  414798:	push   ss
  414799:	adc    edx,DWORD PTR [edx+0x1cf32119]
  41479f:	xor    al,0x7d
  4147a1:	rol    BYTE PTR [edx-0x63626b3f],1
  4147a7:	push   cs
  4147a8:	mov    al,ds:0x5f149759
  4147ad:	inc    DWORD PTR [ebx+edx*1+0x12e5c7d3]
  4147b4:	or     eax,0xa48f4e39
  4147b9:	push   ds
  4147ba:	mov    bx,0x2723
  4147be:	shr    DWORD PTR [eax+0x65a92c67],1
  4147c4:	push   0x48afacb4
  4147c9:	popa   
  4147ca:	inc    ebx
  4147cb:	push   esi
  4147cc:	cmp    BYTE PTR [eax-0x6db65bf7],ch
  4147d2:	push   esp
  4147d3:	cmp    BYTE PTR [esi+0x5244f5cb],ah
  4147d9:	popf   
  4147da:	push   edi
  4147db:	sub    DWORD PTR [edi-0x2c6bf9bc],0x17
  4147e2:	mov    ds:0x6012c18a,al
  4147e7:	adc    BYTE PTR ds:0x2cf56ff4,dl
  4147ed:	jge    0x414773
  4147ef:	mov    DWORD PTR [ecx],ebp
  4147f1:	and    al,0xf3
  4147f3:	jg     0x4147cd
  4147f5:	mov    DWORD PTR [edi-0x1d],edi
  4147f8:	fs and dh,ah
  4147fb:	pushf  
  4147fc:	rol    BYTE PTR [esi-0x5d],0x28
  414800:	pop    esp
  414801:	push   edx
  414802:	fs aam 0x4
  414805:	cs or  al,0x33
  414808:	xor    DWORD PTR [edx],ebp
  41480a:	int    0x47
  41480c:	mov    DWORD PTR [edx-0x68],esi
  41480f:	ret    
  414810:	and    ebp,esi
  414812:	shr    DWORD PTR [ebx-0x5e5f9092],0xb0
  414819:	std    
  41481a:	hlt    
  41481b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41481c:	mov    ?,WORD PTR ds:0xb2191eb9
  414822:	sbb    eax,0x1cc3feaa
  414827:	push   esi
  414828:	ror    BYTE PTR [ebx-0x53],0xf9
  41482c:	cmp    eax,0xec50c747
  414831:	sbb    al,0x75
  414833:	int3   
  414834:	xchg   ebp,eax
  414835:	dec    edi
  414836:	adc    al,0xde
  414838:	cld    
  414839:	popf   
  41483a:	adc    ebx,DWORD PTR [esi-0xd]
  41483d:	aaa    
  41483e:	lods   eax,DWORD PTR ds:[esi]
  41483f:	pop    edi
  414840:	jmp    0x8c15fbb6
  414845:	sub    bh,BYTE PTR [edx-0x4ce784e8]
  41484b:	rcr    bl,cl
  41484d:	mov    esp,0x35991328
  414852:	out    0xbf,al
  414854:	dec    esi
  414855:	adc    al,BYTE PTR [edx]
  414857:	push   edi
  414858:	sbb    bh,ah
  41485a:	adc    al,0x3a
  41485c:	mov    ds:0x58037bf4,eax
  414861:	fcmovnb st,st(4)
  414863:	xchg   BYTE PTR [edi],bl
  414865:	push   ecx
  414866:	mov    eax,ds:0xe17954cb
  41486b:	pop    es
  41486c:	sar    DWORD PTR [edx],1
  41486e:	xchg   edx,eax
  41486f:	popa   
  414870:	frstor [esp+ebp*8-0x1fa51bc3]
  414877:	cmp    DWORD PTR [ebp+0x5a92e33e],eax
  41487d:	lds    ebp,FWORD PTR [edi+0x4d]
  414880:	pop    eax
  414881:	ins    DWORD PTR es:[edi],dx
  414882:	mov    eax,ds:0x793805d3
  414887:	cmp    DWORD PTR [eax-0x5a],ebx
  41488a:	nop
  41488b:	jae    0x4148ca
  41488d:	cmp    dh,al
  41488f:	popa   
  414890:	hlt    
  414891:	push   edx
  414892:	iret   
  414893:	mov    esp,0xc1987a9
  414898:	jnp    0x414875
  41489a:	into   
  41489b:	xchg   ecx,eax
  41489c:	and    eax,DWORD PTR [eax-0x25a8c691]
  4148a2:	test   DWORD PTR [eax],esi
  4148a4:	adc    BYTE PTR [eax+0x7225fd6c],dl
  4148aa:	(bad)  
  4148ab:	fbstp  TBYTE PTR [edx+0x75]
  4148ae:	inc    ecx
  4148af:	sub    dh,ah
  4148b1:	sbb    DWORD PTR [ebx],ecx
  4148b3:	xchg   edx,eax
  4148b4:	add    BYTE PTR [ebx-0x201dd6ee],0x66
  4148bb:	inc    edx
  4148bc:	repnz or al,0xaa
  4148bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c0:	cmp    eax,0x36cf24e2
  4148c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c6:	enter  0x38ee,0xd5
  4148ca:	iret   
  4148cb:	inc    edx
  4148cc:	mov    eax,ds:0xd6e02551
  4148d1:	outs   dx,DWORD PTR ds:[esi]
  4148d2:	xchg   DWORD PTR [edx+0x37],ebx
  4148d5:	mov    edi,0xb7ed549d
  4148da:	shl    DWORD PTR [esi+0x6c],1
  4148dd:	ins    DWORD PTR es:[edi],dx
  4148de:	push   ebp
  4148df:	lods   eax,DWORD PTR ds:[esi]
  4148e0:	mov    al,ds:0x65de72d0
  4148e5:	inc    edi
  4148e6:	sbb    al,0x1a
  4148e8:	jo     0x4148ba
  4148ea:	dec    ebx
  4148eb:	xchg   edx,ebp
  4148ed:	outs   dx,DWORD PTR ds:[esi]
  4148ee:	add    ch,BYTE PTR [ebx]
  4148f0:	sbb    al,0x88
  4148f2:	or     edx,edx
  4148f4:	jmp    0x4148ae
  4148f6:	xor    dl,cl
  4148f8:	mov    ds:0x2fc923c4,al
  4148fd:	xchg   ebp,eax
  4148fe:	adc    DWORD PTR [ebx+0x6],0x714b7087
  414905:	mov    edi,0x4258d1e1
  41490a:	fsubr  st(0),st
  41490c:	ins    BYTE PTR es:[edi],dx
  41490d:	call   0x749da5a4
  414912:	cmp    esi,DWORD PTR [edi+0x7bf72e7e]
  414918:	and    ecx,DWORD PTR [edx+0x495e41b3]
  41491e:	xlat   BYTE PTR ds:[ebx]
  41491f:	pop    esp
  414920:	loop   0x4148b8
  414922:	ins    DWORD PTR es:[edi],dx
  414923:	sub    dl,BYTE PTR [edx-0x62]
  414926:	pop    ss
  414927:	shl    cl,cl
  414929:	ins    DWORD PTR es:[edi],dx
  41492a:	bound  edi,QWORD PTR [edi+0x76a1a71b]
  414930:	shr    DWORD PTR [ebx+eax*8],0xe7
  414934:	aad    0x47
  414936:	push   ebp
  414937:	xchg   edi,eax
  414938:	xlat   BYTE PTR ds:[ebx]
  414939:	(bad)  
  41493a:	pushf  
  41493b:	mov    WORD PTR [ecx],cs
  41493d:	aam    0x68
  41493f:	imul   edi,DWORD PTR [edx+0x34a12034],0xaf7e369f
  414949:	(bad)  ss:[edx+edi*1+0x7c]
  41494e:	icebp  
  41494f:	icebp  
  414950:	add    edi,DWORD PTR [eax-0x7b]
  414953:	hlt    
  414954:	jns    0x414978
  414956:	dec    ebp
  414957:	out    dx,eax
  414958:	stos   BYTE PTR es:[edi],al
  414959:	cli    
  41495a:	(bad)  ds:0x9c834580
  414960:	leave  
  414961:	cmp    DWORD PTR [ecx-0x2e136c19],ebp
  414967:	ds pushf 
  414969:	sbb    BYTE PTR [ecx+0x0],dl
  41496c:	push   esi
  41496d:	xchg   DWORD PTR [ebx+0x52],edx
  414970:	push   0x62
  414972:	jbe    0x41493c
  414974:	loope  0x414943
  414976:	sub    al,0x91
  414978:	gs clc 
  41497a:	add    BYTE PTR [ebx*1-0x2c5d1c07],bh
  414981:	mov    ds,WORD PTR ds:0x4180b3fd
  414987:	push   ds
  414988:	cmp    eax,0x2816dc78
  41498d:	cmp    DWORD PTR [esi-0x2423ddfb],ecx
  414993:	add    BYTE PTR [edi],cl
  414995:	(bad)  
  414997:	retf   0xf236
  41499a:	call   0xf1d46df7
  41499f:	jb     0x41496e
  4149a1:	add    ch,BYTE PTR [edx-0x6983964]
  4149a7:	test   al,0x8a
  4149a9:	xchg   ecx,eax
  4149aa:	int3   
  4149ab:	iret   
  4149ac:	cmp    ch,BYTE PTR [edi-0x7c]
  4149af:	adc    eax,0x7d9e3cbc
  4149b4:	out    dx,al
  4149b5:	fcmove st,st(5)
  4149b7:	in     eax,0x12
  4149b9:	pop    ebx
  4149ba:	cmp    edx,DWORD PTR [edx]
  4149bc:	or     ecx,DWORD PTR ds:0xa49ef5af
  4149c2:	cld    
  4149c3:	jecxz  0x41497a
  4149c5:	inc    bl
  4149c7:	mov    ch,BYTE PTR [ebx]
  4149c9:	scas   eax,DWORD PTR es:[edi]
  4149ca:	pop    ecx
  4149cb:	or     BYTE PTR [esi+0x3e42540a],bl
  4149d1:	out    dx,al
  4149d2:	inc    ebx
  4149d3:	mov    bl,0xc1
  4149d5:	inc    ebx
  4149d6:	push   esp
  4149d7:	xlat   BYTE PTR ds:[ebx]
  4149d8:	and    edx,edi
  4149da:	loop   0x4149ab
  4149dc:	stos   DWORD PTR es:[edi],eax
  4149dd:	push   ecx
  4149de:	inc    ebx
  4149df:	(bad)  
  4149e0:	gs mov al,0xfb
  4149e3:	loop   0x414a4f
  4149e5:	add    eax,0x9fcd4eae
  4149ea:	xor    DWORD PTR [ebp+0x36],esp
  4149ed:	dec    ebx
  4149ee:	xor    al,0x26
  4149f0:	sub    cl,dh
  4149f2:	jg     0x4149f6
  4149f4:	jno    0x414a2f
  4149f6:	stos   DWORD PTR es:[edi],eax
  4149f7:	(bad)  
  4149f9:	xchg   ebx,eax
  4149fa:	jl     0x4149a3
  4149fc:	add    BYTE PTR [ebx],bh
  4149fe:	aaa    
  4149ff:	adc    edi,DWORD PTR [esi]
  414a01:	in     eax,dx
  414a02:	cmc    
  414a03:	inc    esp
  414a04:	outs   dx,BYTE PTR ds:[esi]
  414a05:	enter  0x1e2,0x3d
  414a09:	out    dx,al
  414a0a:	xchg   edx,eax
  414a0b:	pushf  
  414a0c:	mov    ds:0xfdd4eeb8,eax
  414a11:	(bad)  
  414a12:	cmp    cl,BYTE PTR [ecx+ebx*8-0x56eb4816]
  414a19:	rcr    BYTE PTR [ebx],cl
  414a1b:	les    edx,FWORD PTR [eax]
  414a1d:	cmp    eax,ecx
  414a1f:	mov    dl,0x8b
  414a21:	imul   eax,DWORD PTR [esi],0x7d
  414a24:	jmp    0x4149ae
  414a26:	jnp    0x4149ef
  414a28:	test   al,0xfd
  414a2a:	aad    0xdf
  414a2c:	jne    0x414a22
  414a2e:	cmp    ebp,DWORD PTR [ecx-0x27ae9702]
  414a34:	std    
  414a35:	mov    BYTE PTR [eax+0x32f1ac7f],cl
  414a3b:	dec    edx
  414a3c:	mov    eax,ds:0xe491dc51
  414a41:	add    dh,BYTE PTR [edx+0x34143b65]
  414a47:	or     al,0x76
  414a49:	sub    al,BYTE PTR [edx-0x3e]
  414a4c:	fiadd  WORD PTR [ebx+0x7f]
  414a4f:	or     bl,bh
  414a51:	ja     0x414a32
  414a53:	(bad)  
  414a54:	mov    ds:0x4fb22bbb,al
  414a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a5a:	xor    eax,DWORD PTR [edx+ebx*2-0x32d0c5aa]
  414a61:	cmp    BYTE PTR [ebx+0x6c266ba6],0xa1
  414a68:	sbb    dh,BYTE PTR ds:0x1c0aa8a2
  414a6e:	mov    ah,0x47
  414a70:	mov    ebp,0x7ed9a087
  414a75:	imul   DWORD PTR [ebx+eiz*1-0x47db43d3]
  414a7c:	pop    ecx
  414a7d:	mov    ebx,0x854c7a5
  414a82:	xor    cl,BYTE PTR ds:0x1f25c432
  414a88:	cwde   
  414a89:	push   0x57
  414a8b:	arpl   WORD PTR [eax+0x1e],ax
  414a8e:	inc    edx
  414a8f:	adc    BYTE PTR [edx+0x6ee3e407],bh
  414a95:	sbb    esi,0x21
  414a98:	sub    dh,BYTE PTR [eax+0x5cc292a4]
  414a9e:	lea    edi,[esi+0x38]
  414aa1:	in     al,0x99
  414aa3:	lods   al,BYTE PTR ds:[esi]
  414aa4:	ror    BYTE PTR [esi],0x6c
  414aa7:	sbb    cl,BYTE PTR [edx]
  414aa9:	std    
  414aaa:	fdiv   QWORD PTR [esi-0x679c25e8]
  414ab0:	or     ecx,DWORD PTR [ecx-0x55]
  414ab3:	into   
  414ab4:	inc    edi
  414ab5:	pop    ds
  414ab6:	mov    ds:0xc70ad66b,eax
  414abb:	lods   eax,DWORD PTR ds:[esi]
  414abc:	stos   DWORD PTR es:[edi],eax
  414abd:	dec    esp
  414abe:	aam    0x79
  414ac0:	outs   dx,BYTE PTR ds:[esi]
  414ac1:	and    eax,0xe0fc5265
  414ac6:	push   edi
  414ac7:	add    BYTE PTR [ecx],cl
  414ac9:	or     eax,0x30fd9e9c
  414ace:	dec    ah
  414ad0:	outs   dx,DWORD PTR ds:[esi]
  414ad1:	xchg   ebx,eax
  414ad2:	sub    ecx,DWORD PTR [edi-0x6b]
  414ad5:	fist   WORD PTR [edx+0x61]
  414ad8:	xchg   esp,eax
  414ad9:	xor    eax,0xd8faedce
  414ade:	sbb    al,0x52
  414ae0:	push   esp
  414ae1:	std    
  414ae2:	add    eax,edx
  414ae4:	add    eax,0x72642427
  414ae9:	mov    DWORD PTR [ebx+0x51fe0bc0],ecx
  414aef:	scas   al,BYTE PTR es:[edi]
  414af0:	bound  esi,QWORD PTR [edx+0xeb70a5b]
  414af6:	scas   al,BYTE PTR es:[edi]
  414af7:	outs   dx,DWORD PTR ds:[esi]
  414af8:	push   gs
  414afa:	lods   eax,DWORD PTR ds:[esi]
  414afb:	(bad)  
  414afc:	xchg   ebp,eax
  414afd:	shl    BYTE PTR [esi-0x5205f0fa],1
  414b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b04:	mov    eax,ds:0xf16e0e51
  414b09:	scas   al,BYTE PTR es:[edi]
  414b0a:	mov    bh,0xf4
  414b0c:	adc    BYTE PTR [edx+0x758c034d],bl
  414b12:	out    dx,al
  414b13:	cdq    
  414b14:	and    cl,BYTE PTR [edi]
  414b16:	out    dx,eax
  414b17:	out    dx,al
  414b18:	xchg   DWORD PTR [ebx+0x44d31db1],ebp
  414b1e:	(bad)  
  414b1f:	cmc    
  414b20:	sub    DWORD PTR [ebx],0xfffffff2
  414b23:	and    eax,0xbcc04f20
  414b28:	push   ebx
  414b29:	aas    
  414b2a:	cmp    BYTE PTR [eax],al
  414b2c:	icebp  
  414b2d:	push   ecx
  414b2e:	arpl   WORD PTR [eax],cx
  414b30:	mov    esp,0xc504863
  414b35:	cmp    al,0xbf
  414b37:	pusha  
  414b38:	retf   
  414b39:	push   ecx
  414b3a:	jo     0x414b10
  414b3c:	gs or  al,0xda
  414b3f:	inc    ebx
  414b40:	jecxz  0x414b86
  414b42:	stos   DWORD PTR es:[edi],eax
  414b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b44:	bound  eax,QWORD PTR ds:0xe0a78596
  414b4a:	sahf   
  414b4b:	lock ror DWORD PTR [edi],cl
  414b4e:	push   edi
  414b4f:	aaa    
  414b50:	comiss xmm7,DWORD PTR [eax]
  414b53:	loopne 0x414af5
  414b55:	push   ds
  414b56:	scas   eax,DWORD PTR es:[edi]
  414b57:	dec    esi
  414b58:	sub    DWORD PTR [edi+0x5690af6f],esi
  414b5e:	mov    cl,0x88
  414b60:	push   ds
  414b61:	push   esp
  414b62:	jb     0x414b57
  414b64:	mov    bh,BYTE PTR [edi-0x5c05e383]
  414b6a:	fisttp DWORD PTR [edi]
  414b6c:	dec    esi
  414b6d:	push   eax
  414b6e:	dec    esp
  414b6f:	scas   al,BYTE PTR es:[edi]
  414b70:	fs push ebx
  414b72:	cmp    ebx,ebx
  414b74:	mov    eax,ds:0xf00c39f1
  414b79:	dec    esp
  414b7a:	jae    0x414b3c
  414b7c:	add    eax,0x86e1d900
  414b81:	pop    esp
  414b82:	test   DWORD PTR [eax],edi
  414b84:	inc    ebp
  414b85:	nop
  414b86:	int3   
  414b87:	jp     0x414bae
  414b89:	jne    0x414b4c
  414b8b:	xchg   BYTE PTR ds:[esi+0x7c],bh
  414b8f:	pop    edi
  414b90:	loop   0x414b21
  414b92:	popf   
  414b93:	fwait
  414b94:	sti    
  414b95:	loop   0x414b7a
  414b97:	inc    ebp
  414b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b99:	aam    0x94
  414b9b:	scas   al,BYTE PTR es:[edi]
  414b9c:	sbb    dl,BYTE PTR [edx*1+0x7155786e]
  414ba3:	not    esi
  414ba5:	adc    eax,0x2e8d532e
  414baa:	cli    
  414bab:	aad    0xbc
  414bad:	out    dx,eax
  414bae:	ror    DWORD PTR [eax],cl
  414bb0:	div    eax
  414bb2:	ins    DWORD PTR es:[edi],dx
  414bb3:	mov    eax,0xfa68c717
  414bb8:	or     BYTE PTR ds:0xd60d390d,0xf3
  414bbf:	sti    
  414bc0:	(bad)  
  414bc1:	faddp  st(3),st
  414bc3:	xor    al,0x3f
  414bc5:	(bad)  
  414bc6:	cmp    BYTE PTR [eax-0x159d3081],dh
  414bcc:	xor    BYTE PTR [ebp+0x6a],ah
  414bcf:	icebp  
  414bd0:	mov    bl,0x98
  414bd2:	ret    
  414bd3:	xor    eax,0x8e268ed3
  414bd8:	cmc    
  414bd9:	call   0xa9a0bc0b
  414bde:	leave  
  414bdf:	sub    dh,BYTE PTR [edx-0x12]
  414be2:	shr    dl,cl
  414be4:	and    dl,ah
  414be6:	loopne 0x414bfb
  414be8:	pop    ecx
  414be9:	dec    ebx
  414bea:	test   BYTE PTR [ebp+0x18],al
  414bed:	or     DWORD PTR [edi-0x314ab1bf],eax
  414bf3:	aaa    
  414bf4:	imul   esp,DWORD PTR [ebp-0x54],0xffffffb2
  414bf8:	push   esp
  414bf9:	mov    esp,0x70079fde
  414bfe:	lock icebp 
  414c00:	or     BYTE PTR [ebx-0x5f],dh
  414c03:	jne    0x414c82
  414c05:	lea    ebp,[ecx+0x64949867]
  414c0b:	cld    
  414c0c:	scas   eax,DWORD PTR es:[edi]
  414c0d:	pop    ebx
  414c0e:	ss jge 0x414c7d
  414c11:	cmp    DWORD PTR [eax+0x39],edi
  414c14:	add    BYTE PTR [edx+0x4a],dl
  414c17:	neg    BYTE PTR [ebx-0x270f3fe8]
  414c1d:	cmp    BYTE PTR [edi+0x4b65a5c6],0x50
  414c24:	out    0x46,al
  414c26:	loop   0x414c1d
  414c28:	aas    
  414c29:	inc    ebp
  414c2a:	jns    0x414c10
  414c2c:	iret   
  414c2d:	add    BYTE PTR [edx+0x32],al
  414c30:	(bad)  
  414c32:	xchg   al,al
  414c34:	xor    eax,0x9ecc32d0
  414c39:	stos   DWORD PTR es:[edi],eax
  414c3a:	and    eax,0xce6fc7f3
  414c3f:	dec    ebx
  414c40:	sbb    eax,0x6da798fb
  414c45:	inc    edi
  414c46:	popa   
  414c47:	mov    bl,BYTE PTR [ebx-0x35]
  414c4a:	pop    esp
  414c4b:	(bad)  
  414c4d:	push   ebx
  414c4e:	ret    
  414c4f:	sub    DWORD PTR [edx-0x5],0xce519b99
  414c56:	sbb    ch,BYTE PTR [eax-0x1f705d7b]
  414c5c:	sub    eax,0x892b1f1c
  414c61:	rol    ecx,0x2c
  414c64:	xchg   edi,eax
  414c65:	mov    eax,0xf37215ef
  414c6a:	outs   dx,DWORD PTR ds:[esi]
  414c6b:	mov    ebx,0x35d53aaa
  414c70:	sahf   
  414c71:	cmp    BYTE PTR [ecx-0x16],bl
  414c74:	dec    ebp
  414c75:	xchg   edx,eax
  414c76:	jmp    0xac15:0x8c733864
  414c7d:	imul   ebp,edi,0x8ee49c9e
  414c83:	pop    ss
  414c84:	hlt    
  414c85:	test   al,0x65
  414c87:	push   esp
  414c88:	mov    eax,ds:0x1a5fad71
  414c8d:	dec    esp
  414c8e:	mov    al,ds:0xa1bda6a2
  414c93:	jmp    0xeff2:0x4c2aa3f1
  414c9a:	jg     0x414c89
  414c9c:	icebp  
  414c9d:	neg    eax
  414c9f:	adc    BYTE PTR [edx+0x65],bh
  414ca2:	and    eax,0xfa7a155c
  414ca7:	test   BYTE PTR [eax-0xe0cd68],ch
  414cad:	repz pusha 
  414caf:	sbb    al,0xf3
  414cb1:	in     eax,dx
  414cb2:	scas   eax,DWORD PTR es:[edi]
  414cb3:	mov    BYTE PTR [esi-0x79],dl
  414cb6:	clc    
  414cb7:	mov    edx,0x788b9220
  414cbc:	xor    dh,ch
  414cbe:	and    al,0xbe
  414cc0:	inc    ebp
  414cc1:	xlat   BYTE PTR ds:[ebx]
  414cc2:	test   eax,0x11806056
  414cc7:	pop    edi
  414cc8:	les    edx,FWORD PTR [ebx+0x60]
  414ccb:	adc    eax,DWORD PTR [ebx]
  414ccd:	in     al,dx
  414cce:	fild   WORD PTR [eax]
  414cd0:	rol    edx,1
  414cd2:	jle    0x414ca0
  414cd4:	lods   al,BYTE PTR ds:[esi]
  414cd5:	push   0x61
  414cd7:	mov    edi,0x631b12ba
  414cdc:	jns    0x414c70
  414cde:	ror    ebp,cl
  414ce0:	sbb    DWORD PTR [eax],0x4ba0c2ee
  414ce6:	sub    dh,ah
  414ce8:	add    al,0xc8
  414cea:	popf   
  414ceb:	pusha  
  414cec:	xchg   ecx,eax
  414ced:	add    BYTE PTR [eax+0x72],dh
  414cf0:	and    eax,0xc1b81246
  414cf5:	xchg   edi,eax
  414cf6:	retf   
  414cf7:	mov    al,0x68
  414cf9:	shl    DWORD PTR [ecx],1
  414cfb:	scas   al,BYTE PTR es:[edi]
  414cfc:	pop    esp
  414cfd:	xor    eax,DWORD PTR [esi]
  414cff:	push   ds
  414d00:	jp     0x414ca1
  414d02:	call   0xddaa:0x7102ed50
  414d09:	add    ecx,DWORD PTR [edi-0x5de925c5]
  414d0f:	lock lds edx,FWORD PTR [esi+ecx*8-0x80]
  414d14:	push   ds
  414d15:	xchg   esp,eax
  414d16:	or     BYTE PTR [esi+0x6d],cl
  414d19:	clc    
  414d1a:	mov    WORD PTR [edi+0x15],fs
  414d1d:	inc    ecx
  414d1e:	ret    
  414d1f:	mov    ecx,0x11a038cb
  414d24:	stc    
  414d25:	pslld  mm2,QWORD PTR ds:0xb4b58644
  414d2c:	xchg   ebp,eax
  414d2d:	and    BYTE PTR [ebp+0x4f8cf848],al
  414d33:	out    0x91,al
  414d35:	jb     0x414cd7
  414d37:	xor    edi,edx
  414d39:	adc    BYTE PTR [esi+0x56],bh
  414d3c:	aas    
  414d3d:	dec    esi
  414d3e:	fsub   QWORD PTR [ecx+0x4d4cde3d]
  414d44:	or     al,0xf5
  414d46:	xor    bl,cl
  414d48:	std    
  414d49:	aas    
  414d4a:	aas    
  414d4b:	pop    ds
  414d4c:	hlt    
  414d4d:	(bad)  
  414d4f:	add    DWORD PTR [edx],0xa9a2b58d
  414d55:	cdq    
  414d56:	sti    
  414d57:	aas    
  414d58:	je     0x414dd3
  414d5a:	sahf   
  414d5b:	add    eax,0xa19460de
  414d60:	jbe    0x414d76
  414d62:	in     eax,dx
  414d63:	cmp    al,0x73
  414d65:	jge    0x414d74
  414d67:	sar    BYTE PTR [edi-0x69],1
  414d6a:	aaa    
  414d6b:	data16 mov BYTE PTR [ebx+0x63c3ff16],bl
  414d72:	aas    
  414d73:	jmp    0xa93:0xbb788aed
  414d7a:	(bad)  
  414d7b:	mov    ecx,0xe5366e8b
  414d80:	pushf  
  414d81:	pop    esi
  414d82:	gs aad 0x8f
  414d85:	jno    0x414d1e
  414d87:	std    
  414d88:	test   DWORD PTR [ebp+0x42dce52e],edx
  414d8e:	popf   
  414d8f:	scas   al,BYTE PTR es:[edi]
  414d90:	xor    ecx,DWORD PTR [edx+0x76d02ec5]
  414d96:	or     eax,0xb0ee9a96
  414d9b:	pop    ecx
  414d9c:	fisubr DWORD PTR [edi-0x2a4f3a35]
  414da2:	stos   DWORD PTR es:[edi],eax
  414da3:	in     al,dx
  414da4:	fs cmp bh,0x27
  414da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414da9:	test   al,0x99
  414dab:	mov    esp,0xd14672df
  414db0:	adc    ah,bl
  414db2:	loope  0x414db7
  414db4:	add    eax,0xa7e093e6
  414db9:	add    al,0x1a
  414dbb:	pop    ss
  414dbc:	adc    al,0xd7
  414dbe:	jne    0x414dba
  414dc0:	cmp    al,0x1c
  414dc2:	mov    bh,BYTE PTR [ebp-0x14]
  414dc5:	fst    QWORD PTR [eax+0x60]
  414dc8:	out    0xd1,eax
  414dca:	sub    eax,0xfe50b1bd
  414dcf:	fs cmp eax,0x767a6c3c
  414dd5:	sbb    bl,BYTE PTR [ecx]
  414dd7:	shl    BYTE PTR [ecx],0xb1
  414dda:	sar    edi,cl
  414ddc:	or     DWORD PTR [edi-0x1fa03b0b],esp
  414de2:	add    al,0x6d
  414de4:	and    al,0xf6
  414de6:	xchg   edx,eax
  414de7:	pushf  
  414de8:	push   edx
  414de9:	xchg   esi,eax
  414dea:	jp     0x414d9f
  414dec:	aas    
  414ded:	pop    ss
  414dee:	popf   
  414def:	lds    ebp,FWORD PTR ss:[ecx+esi*8-0x2a2c5153]
  414df7:	std    
  414df8:	dec    edi
  414df9:	mov    eax,cs:0xa23dfbcb
  414dff:	or     DWORD PTR [eax+0x42],esi
  414e02:	fisttp QWORD PTR [eax]
  414e04:	jnp    0x414e78
  414e06:	jle    0x414e7a
  414e08:	out    dx,al
  414e09:	retf   0xff7f
  414e0c:	fstp   TBYTE PTR [ebp-0x59370fb6]
  414e12:	mov    esp,0x69dbb9d5
  414e17:	push   edi
  414e18:	pop    ebp
  414e19:	jmp    0x414dc6
  414e1b:	fcomp  QWORD PTR [esi+0xda52d23]
  414e21:	(bad)  
  414e22:	loopne 0x414de7
  414e24:	enter  0xf994,0x1d
  414e28:	rol    bl,0x77
  414e2b:	push   0x6a52f7ff
  414e30:	jne    0x414e38
  414e32:	out    0x19,eax
  414e34:	scas   eax,DWORD PTR es:[edi]
  414e35:	iret   
  414e36:	adc    al,BYTE PTR [esi-0x70]
  414e39:	xor    ebp,DWORD PTR [ecx]
  414e3b:	mov    al,0xdd
  414e3d:	inc    edx
  414e3e:	mov    edi,0x9daab2c4
  414e43:	lods   eax,DWORD PTR ds:[esi]
  414e44:	xor    ebp,eax
  414e46:	xchg   edi,eax
  414e47:	push   ds
  414e48:	jns    0x414e14
  414e4a:	out    0xbb,eax
  414e4c:	js     0x414eb7
  414e4e:	jp     0x414de4
  414e50:	add    esi,ebp
  414e52:	xor    eax,0x54367d7a
  414e57:	and    eax,0x81c8c707
  414e5c:	ret    
  414e5d:	jns    0x414e0d
  414e5f:	popa   
  414e60:	popf   
  414e61:	xchg   ebx,eax
  414e62:	mov    DWORD PTR [esi-0x4e],esi
  414e65:	repnz lods eax,DWORD PTR ds:[esi]
  414e67:	cwde   
  414e68:	nop
  414e69:	and    DWORD PTR [ecx-0x74],edx
  414e6c:	fimul  DWORD PTR [esi+edi*4]
  414e6f:	mov    dh,0xc0
  414e71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e72:	jns    0x414e06
  414e74:	je     0x414ed4
  414e76:	pop    edi
  414e77:	enter  0xf993,0x42
  414e7b:	mov    ds:0xf3f34b63,al
  414e80:	cmp    eax,0x1667f9cf
  414e85:	rcl    bl,1
  414e87:	cmc    
  414e88:	scas   al,BYTE PTR es:[edi]
  414e89:	rcr    DWORD PTR [edx],1
  414e8b:	rcr    BYTE PTR [esi],cl
  414e8d:	sahf   
  414e8e:	mov    al,0x1d
  414e90:	sbb    DWORD PTR [edi+0xe8fabe2],eax
  414e96:	retf   0x76a1
  414e99:	mov    ch,0x19
  414e9b:	scas   eax,DWORD PTR es:[edi]
  414e9c:	jbe    0x414ebd
  414e9e:	(bad)  
  414e9f:	call   0x4c528163
  414ea4:	imul   ebx,DWORD PTR [eax+0x7],0xffffffd7
  414ea8:	pop    edx
  414ea9:	aad    0x8
  414eab:	cwde   
  414eac:	sub    esi,0xffffffaf
  414eaf:	pushf  
  414eb0:	sub    al,0x83
  414eb2:	add    al,0xf7
  414eb4:	sbb    cl,BYTE PTR [eax+edx*8+0x5e]
  414eb8:	je     0x414e68
  414eba:	xchg   edi,eax
  414ebb:	or     al,0xc0
  414ebd:	sub    BYTE PTR [ecx-0x660d14a1],dl
  414ec3:	adc    eax,0x72
  414ec6:	jle    0x414ee0
  414ec8:	bnd jmp 0x223e0285
  414ece:	das    
  414ecf:	inc    esi
  414ed0:	dec    ebp
  414ed1:	or     ebp,DWORD PTR ds:0xc2431e26
  414ed7:	inc    esp
  414ed8:	adc    eax,0x2752eaec
  414edd:	(bad)  
  414ede:	adc    edi,DWORD PTR [edx+0x81eaf0f]
  414ee4:	add    al,0x47
  414ee6:	push   0xffffffd0
  414ee8:	xchg   edx,eax
  414ee9:	adc    al,BYTE PTR [eax]
  414eeb:	hlt    
  414eec:	add    bl,dh
  414eee:	(bad)
  414ef1:	clc    
  414ef2:	retf   
  414ef3:	mov    dh,0xa0
  414ef5:	loop   0x414f38
  414ef7:	push   eax
  414ef8:	sti    
  414ef9:	adc    al,0xf4
  414efb:	mov    ah,0xea
  414efd:	add    al,0x5b
  414eff:	dec    ebp
  414f00:	outs   dx,BYTE PTR ds:[esi]
  414f01:	jo     0x414f48
  414f03:	or     eax,edi
  414f05:	test   al,0xfe
  414f07:	mov    dh,0xe8
  414f09:	mov    al,0xb0
  414f0b:	push   edx
  414f0c:	call   0x9bdc:0x2ca27a6a
  414f13:	(bad)  
  414f14:	out    0x6a,al
  414f16:	idiv   BYTE PTR [esi+0x23]
  414f19:	imul   esp,DWORD PTR [edx-0x45a5fc0f],0x464b76fa
  414f23:	lock les eax,FWORD PTR [esp+edi*1+0x6c]
  414f28:	jo     0x414eca
  414f2a:	push   edi
  414f2b:	jp     0x414f45
  414f2d:	clc    
  414f2e:	xor    dl,BYTE PTR [esi-0x494cfe8a]
  414f34:	das    
  414f35:	push   ecx
  414f36:	popf   
  414f37:	rol    BYTE PTR [ebx+0x7cd15cf],1
  414f3d:	fist   DWORD PTR [ecx+esi*8-0x34abcfda]
  414f44:	mov    dl,0x56
  414f46:	cdq    
  414f47:	add    edi,DWORD PTR [ebx+0x3d]
  414f4a:	in     eax,0x8d
  414f4c:	mov    al,0xd9
  414f4e:	(bad)  
  414f4f:	adc    al,0xc7
  414f51:	std    
  414f52:	xor    al,0x8c
  414f54:	lods   eax,DWORD PTR ds:[esi]
  414f55:	pop    edx
  414f56:	stos   BYTE PTR es:[edi],al
  414f57:	es cld 
  414f59:	clc    
  414f5a:	adc    eax,0x110fb8a
  414f5f:	ins    DWORD PTR es:[edi],dx
  414f60:	dec    eax
  414f61:	scas   al,BYTE PTR es:[edi]
  414f62:	ins    BYTE PTR es:[edi],dx
  414f63:	imul   ebp,DWORD PTR [ebp-0x2d],0x38
  414f67:	(bad)  
  414f68:	mov    edx,0xa3bdb58d
  414f6d:	mov    edi,ebx
  414f6f:	and    eax,0xb15c2fe
  414f74:	mov    edi,0xb7266bf5
  414f79:	imul   esi,DWORD PTR [edx-0x1e],0xffffffe5
  414f7d:	das    
  414f7e:	call   0x2c31be00
  414f83:	aad    0x95
  414f85:	mov    ds:0xc145444f,al
  414f8a:	xchg   BYTE PTR [edx-0x13],ah
  414f8d:	in     eax,0x43
  414f8f:	pop    eax
  414f90:	leave  
  414f91:	aam    0x41
  414f93:	retf   0x6408
  414f96:	mov    eax,0xc741a043
  414f9b:	inc    esp
  414f9c:	rcl    bl,0xe1
  414f9f:	adc    ch,ah
  414fa1:	xchg   esp,eax
  414fa2:	and    ebp,esi
  414fa4:	add    edx,ecx
  414fa6:	cmc    
  414fa7:	bound  ebx,QWORD PTR [esi+0x2fc0f731]
  414fad:	fnstcw WORD PTR [ecx-0x39]
  414fb0:	mov    esp,0x7bc3fd13
  414fb5:	jnp    0x414f7b
  414fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fb8:	add    edi,DWORD PTR [ebx]
  414fba:	and    al,0x85
  414fbc:	arpl   WORD PTR [esi-0x14506922],bx
  414fc2:	pop    ds
  414fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fc4:	pop    ebp
  414fc5:	ja     0x415018
  414fc7:	lock sbb DWORD PTR [ebp-0x7fc7af28],0x2d
  414fcf:	push   0xffffffe9
  414fd1:	xlat   BYTE PTR ds:[ebx]
  414fd2:	dec    esp
  414fd3:	dec    edx
  414fd4:	sub    eax,0xccda0a49
  414fd9:	popf   
  414fda:	retf   0xbabb
  414fdd:	fadd   DWORD PTR [ebx+0x53]
  414fe0:	mov    ch,BYTE PTR [ebx+edx*2+0x9829fbf]
  414fe7:	sub    dl,BYTE PTR [ecx+0x3b]
  414fea:	inc    edx
  414feb:	cmc    
  414fec:	in     al,dx
  414fed:	out    0xe0,al
  414fef:	sahf   
  414ff0:	je     0x415063
  414ff2:	xchg   ebx,eax
  414ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff4:	popf   
  414ff5:	fs mov cl,0xf6
  414ff8:	xor    BYTE PTR [ebx+0x64],bl
  414ffb:	jns    0x414fb2
  414ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ffe:	fldenv [ebx-0x2b2ad696]
  415004:	ja     0x414fbe
  415006:	test   dl,al
  415008:	or     esi,DWORD PTR [edi-0x53]
  41500b:	inc    esp
  41500c:	mov    ch,0x7
  41500e:	jmp    0x4221595f
  415013:	dec    eax
  415014:	or     BYTE PTR [eax-0x6d7f4564],dl
  41501a:	loope  0x415037
  41501c:	cwde   
  41501d:	sahf   
  41501e:	mov    ch,cl
  415020:	push   0x849d7ab1
  415025:	mov    dl,0xee
  415027:	mov    ebp,esi
  415029:	popf   
  41502a:	and    eax,0x42ca3431
  41502f:	mov    esp,0x1f9a83de
  415034:	jp     0x414fda
  415036:	aad    0x12
  415038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415039:	loop   0x414ffe
  41503b:	pop    ebx
  41503c:	retf   0x56fa
  41503f:	aam    0x2b
  415041:	shl    BYTE PTR [ebx],1
  415043:	pushf  
  415044:	in     al,dx
  415045:	ds mov dh,0xe6
  415048:	clc    
  415049:	adc    DWORD PTR [esp+ebp*1-0xa56c96e],esi
  415050:	ror    DWORD PTR [esi+ebp*8],0x59
  415054:	and    esp,esi
  415056:	push   eax
  415057:	mov    eax,0xf98dd7a6
  41505c:	cmp    DWORD PTR [ecx-0x50],eax
  41505f:	nop
  415060:	fsub   DWORD PTR [edi+0x60f09ca3]
  415066:	jno    0x41502d
  415068:	rcl    DWORD PTR [edx],1
  41506a:	and    al,0x4a
  41506c:	xchg   edi,eax
  41506d:	icebp  
  41506e:	inc    edx
  41506f:	fstp   TBYTE PTR [eax-0x49]
  415072:	(bad)  
  415073:	std    
  415074:	repz mov esi,0xc0b1a1f4
  41507a:	cs adc eax,0x7f2983e2
  415080:	retf   
  415081:	das    
  415082:	cs mov ebx,0x68ed345f
  415088:	idiv   BYTE PTR [eax]
  41508a:	and    bh,BYTE PTR [edx-0x65235ac2]
  415090:	and    edi,DWORD PTR [edx+0x3a4b496f]
  415096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415097:	cmp    ch,BYTE PTR [ebp-0x783e11a0]
  41509d:	pop    ebx
  41509e:	adc    edi,DWORD PTR [ebx+0x2d5306a7]
  4150a4:	inc    esp
  4150a5:	sar    ebx,1
  4150a7:	jne    0x415096
  4150a9:	inc    eax
  4150aa:	push   edx
  4150ab:	fadd   DWORD PTR [ebp-0x1cde8785]
  4150b1:	stos   BYTE PTR es:[edi],al
  4150b2:	sub    bh,BYTE PTR [edx+ebx*8-0x60bd6e5]
  4150b9:	mov    eax,ds:0xf74d47c6
  4150be:	sbb    DWORD PTR [ebx+0x3f],edi
  4150c1:	xchg   edi,eax
  4150c2:	sub    DWORD PTR [ebx+0x35],ebx
  4150c5:	(bad)  
  4150c6:	call   0x39263228
  4150cb:	jmp    0xc995296d
  4150d0:	jp     0x41509e
  4150d2:	or     eax,0xbded9433
  4150d7:	mov    cl,0xa6
  4150d9:	mov    edx,0x28daea81
  4150de:	shl    BYTE PTR ds:0xa7f1b78e,0x23
  4150e5:	js     0x4150f2
  4150e7:	mov    eax,ebp
  4150e9:	dec    eax
  4150ea:	dec    edx
  4150eb:	jmp    0x4150e2
  4150ed:	mov    ds:0x7b285cd5,al
  4150f2:	cmp    BYTE PTR [esi-0x216037b0],cl
  4150f8:	dec    edx
  4150f9:	pop    ss
  4150fa:	cmp    esi,edx
  4150fc:	aam    0xfb
  4150fe:	jmp    0x4150e4
  415100:	adc    eax,0x4865238d
  415105:	mov    bh,0xa6
  415107:	ss out dx,al
  415109:	xchg   ecx,eax
  41510a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41510c:	xor    al,0x36
  41510e:	adc    al,0x4
  415110:	int3   
  415111:	fdivr  QWORD PTR [ebp-0x7819fb1d]
  415117:	setg   BYTE PTR [esi]
  41511a:	ins    BYTE PTR es:[edi],dx
  41511b:	ret    
  41511c:	push   ebx
  41511d:	adc    bl,cl
  41511f:	sbb    edi,DWORD PTR [ecx]
  415121:	mov    cs,WORD PTR [eax-0x4ccedb49]
  415127:	mov    dl,cl
  415129:	aas    
  41512a:	dec    ebx
  41512b:	mov    edx,0x4238d62
  415130:	push   ecx
  415131:	jne    0x41510f
  415133:	cdq    
  415134:	pop    ecx
  415135:	adc    DWORD PTR [ebp+0x6b],esi
  415138:	loop   0x4150e2
  41513a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41513b:	nop
  41513c:	ds sbb al,bl
  41513f:	fidivr DWORD PTR [ecx-0x16df64dd]
  415145:	mov    dl,0x45
  415147:	adc    eax,0x82400e84
  41514c:	jae    0x4150ea
  41514e:	sbb    bh,BYTE PTR [edi+ebp*2-0x3e34d20c]
  415155:	jno    0x4151b8
  415157:	mov    bh,0xb6
  415159:	outs   dx,DWORD PTR ds:[esi]
  41515a:	xchg   ebx,eax
  41515b:	xchg   esp,eax
  41515c:	lock mov ecx,0x8e552bfa
  415162:	mov    al,0xea
  415164:	mov    bh,0x5b
  415166:	lds    ebp,FWORD PTR [edi]
  415168:	dec    ecx
  415169:	iret   
  41516a:	repz push ebx
  41516c:	pop    edx
  41516d:	aad    0xc9
  41516f:	dec    edi
  415170:	imul   esi,DWORD PTR [esi-0x40],0xf3bd5a19
  415177:	out    0x59,al
  415179:	(bad)  
  41517a:	and    al,0x10
  41517c:	push   esp
  41517d:	std    
  41517e:	dec    ebx
  41517f:	out    dx,al
  415180:	aad    0x26
  415182:	xchg   esp,eax
  415183:	cmp    cl,BYTE PTR [eax+0x57]
  415186:	mov    edx,0xc71e8bcb
  41518b:	jge    0x4151e6
  41518d:	out    0xad,al
  41518f:	ror    DWORD PTR [ebp+0x60],cl
  415192:	jl     0x415132
  415194:	aaa    
  415195:	(bad)  
  415196:	dec    esi
  415198:	aad    0xb4
  41519a:	arpl   WORD PTR [ebp-0x4a],dx
  41519d:	inc    ebp
  41519e:	add    edx,ebx
  4151a0:	loope  0x4151e2
  4151a2:	aam    0x30
  4151a4:	dec    esp
  4151a5:	mov    bl,ch
  4151a7:	push   cs
  4151a8:	jns    0x415157
  4151aa:	repz cmp DWORD PTR [edx+0x391ef12],ebx
  4151b1:	dec    ecx
  4151b2:	xchg   ecx,eax
  4151b3:	xchg   ebp,eax
  4151b4:	rol    DWORD PTR [edi+ecx*8],1
  4151b7:	or     edx,DWORD PTR [esp+ebp*4+0x47]
  4151bb:	ins    BYTE PTR es:[edi],dx
  4151bc:	das    
  4151bd:	inc    esp
  4151be:	das    
  4151bf:	aas    
  4151c0:	arpl   WORD PTR [edx-0x58819f8e],dx
  4151c6:	push   ebx
  4151c7:	push   ss
  4151c8:	add    dh,ch
  4151ca:	cmp    dl,0x0
  4151cd:	stc    
  4151ce:	sbb    eax,0x6094ffcd
  4151d3:	mov    ebx,0xa5716a58
  4151d8:	mov    ebp,0x739dd0c5
  4151dd:	mov    al,ds:0x32941e88
  4151e2:	jp     0x41524f
  4151e4:	bound  ebx,QWORD PTR cs:[ebx+eax*8-0x4c16e8ba]
  4151ec:	mov    DWORD PTR [edi-0x611c93e8],ebp
  4151f2:	lds    eax,FWORD PTR [ebx]
  4151f4:	ror    DWORD PTR [edx+0x33],cl
  4151f7:	mov    edi,0x4024b41f
  4151fc:	cli    
  4151fd:	and    al,0xf1
  4151ff:	imul   edi,DWORD PTR [esi-0x7],0x4a
  415203:	and    bl,ch
  415205:	neg    ecx
  415207:	dec    edx
  415208:	cmc    
  415209:	cmp    edx,ecx
  41520b:	sub    bl,al
  41520d:	and    BYTE PTR [edi],dh
  41520f:	inc    ebp
  415210:	mov    dl,0xb5
  415212:	out    0xc2,al
  415214:	sbb    al,al
  415216:	and    BYTE PTR [ecx],0xd8
  415219:	xchg   esp,eax
  41521a:	or     BYTE PTR [ebx+0x6d],ah
  41521d:	pop    edi
  41521e:	mov    dh,0xc4
  415220:	out    0x88,al
  415222:	and    ebx,DWORD PTR [eax+0x21b99531]
  415228:	push   0x72
  41522a:	and    DWORD PTR [eax-0x1f],esp
  41522d:	inc    edx
  41522e:	fst    QWORD PTR [edx+0x4260aa9b]
  415234:	call   0x730f7bd5
  415239:	mov    bl,0xb9
  41523b:	cmc    
  41523c:	mov    edx,0x6c372075
  415241:	or     DWORD PTR [ebp-0x6d76ddc0],ebp
  415247:	(bad)  
  415248:	clc    
  415249:	sub    al,BYTE PTR [ecx+eiz*2-0x41]
  41524d:	or     BYTE PTR ss:[eax+0x2ffc48f9],ah
  415254:	or     dh,BYTE PTR [esi-0x14b6031a]
  41525a:	adc    BYTE PTR [ebx-0x78],dh
  41525d:	gs ja  0x41528d
  415260:	jns    0x4152b8
  415262:	rcr    DWORD PTR [ebx-0x73],1
  415265:	xor    cl,dh
  415267:	sub    BYTE PTR [edx+0x48],ah
  41526a:	pop    edx
  41526b:	fistp  DWORD PTR [edi]
  41526d:	sbb    al,0xa7
  41526f:	(bad)  
  415270:	in     eax,dx
  415271:	dec    esi
  415272:	xlat   BYTE PTR ds:[ebx]
  415273:	or     BYTE PTR [ebx+0x22],bh
  415276:	mov    ch,0x55
  415278:	pop    ss
  415279:	pusha  
  41527a:	add    dh,BYTE PTR [ebp-0x10]
  41527d:	test   BYTE PTR [esi-0x37d97fbb],0x6c
  415284:	sub    DWORD PTR [ecx-0x19],0xffffffd0
  415288:	push   es
  415289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41528a:	sar    BYTE PTR [edi+0x70363565],0x5b
  415291:	lahf   
  415292:	sahf   
  415293:	out    dx,al
  415294:	dec    ebx
  415295:	mov    ch,0x1c
  415297:	out    dx,eax
  415298:	inc    esi
  415299:	fstp   QWORD PTR [ebx+0x5f]
  41529c:	xchg   ebx,eax
  41529d:	fisttp QWORD PTR [eax-0x51924131]
  4152a3:	hlt    
  4152a4:	jg     0x41531a
  4152a6:	pop    ebp
  4152a7:	jle    0x4152d7
  4152a9:	pop    ds
  4152aa:	dec    edx
  4152ab:	mov    ds:0x8263284f,eax
  4152b0:	xchg   ebp,eax
  4152b1:	and    DWORD PTR [ebx-0x350a997e],0x21
  4152b8:	jecxz  0x415338
  4152ba:	sbb    al,0xfc
  4152bc:	cmp    al,0x9e
  4152be:	dec    esi
  4152bf:	das    
  4152c0:	add    ch,BYTE PTR [esi-0x4526151c]
  4152c6:	lods   al,BYTE PTR ds:[esi]
  4152c7:	mov    esp,esp
  4152c9:	inc    edi
  4152ca:	mov    cl,0x58
  4152cc:	push   esi
  4152ce:	sbb    eax,DWORD PTR [ecx]
  4152d0:	mov    esp,DWORD PTR [edi-0x33]
  4152d3:	call   0xea8b:0x6be0ca82
  4152da:	stos   DWORD PTR es:[edi],eax
  4152db:	jae    0x415311
  4152dd:	outs   dx,BYTE PTR ds:[esi]
  4152de:	jmp    0x7f50:0x5bdbb157
  4152e5:	int3   
  4152e6:	lea    ebp,[ebp+0x4a]
  4152e9:	dec    esp
  4152ea:	inc    edi
  4152eb:	sti    
  4152ec:	and    eax,0xe19cbc6f
  4152f1:	fs jg  0x41527c
  4152f4:	or     DWORD PTR [ebx-0x755a3bcc],ebp
  4152fa:	mov    cl,0x20
  4152fc:	lahf   
  4152fd:	sub    ebp,ecx
  4152ff:	mov    bl,0x18
  415301:	icebp  
  415302:	(bad)  
  415303:	and    BYTE PTR [edx],al
  415305:	cmp    ecx,DWORD PTR [edi-0x72]
  415308:	and    eax,0x13a5285f
  41530d:	shl    DWORD PTR [edx-0xdf55afe],cl
  415313:	imul   esp,DWORD PTR [eax-0x24],0xaf22ff34
  41531a:	pop    edi
  41531b:	sar    DWORD PTR [eax],cl
  41531d:	test   al,0x69
  41531f:	and    eax,0xf1e812ff
  415324:	imul   ebp,DWORD PTR [esi-0x42],0x51
  415328:	aas    
  415329:	dec    ebp
  41532a:	inc    ecx
  41532b:	and    eax,0x2a7d1eab
  415330:	and    ch,BYTE PTR [ebp+0x4f]
  415333:	lds    ecx,FWORD PTR [ecx-0x63c19b84]
  415339:	cs loope 0x415383
  41533c:	loopne 0x41536f
  41533e:	outs   dx,BYTE PTR ds:[esi]
  41533f:	test   BYTE PTR [ebp+0x82f7b89],ah
  415345:	xor    eax,0x9cea0ed5
  41534a:	nop
  41534b:	loopne 0x415374
  41534d:	aaa    
  41534e:	sub    ah,bh
  415350:	mov    DWORD PTR [edx],esp
  415352:	repnz loopne 0x41539a
  415355:	outs   dx,BYTE PTR ds:[esi]
  415356:	fisub  WORD PTR [ebx]
  415358:	xor    edx,DWORD PTR es:[ecx]
  41535b:	cmp    cl,dh
  41535d:	sbb    DWORD PTR [eax-0x17bb0146],esp
  415363:	push   eax
  415364:	fidivr WORD PTR [ecx-0x55e0da76]
  41536a:	mov    ebp,0xa214e97c
  41536f:	repz scas al,BYTE PTR es:[edi]
  415371:	out    0xff,al
  415373:	mov    cl,0x27
  415375:	les    edi,FWORD PTR [edx-0x5]
  415378:	fnsave [edx-0x3efd5cad]
  41537e:	sub    DWORD PTR [eax],ebp
  415380:	imul   ecx,eax,0xffffffdf
  415383:	and    DWORD PTR [eax+0xaca7797],edi
  415389:	into   
  41538a:	dec    edx
  41538b:	cmp    DWORD PTR [esi-0x3a434440],edx
  415391:	pop    esp
  415392:	push   0xffffff95
  415394:	mov    ah,0xd2
  415396:	pop    eax
  415397:	leave  
  415398:	inc    ecx
  415399:	ds or  eax,0xaa1932bf
  41539f:	add    eax,0xa38a2c66
  4153a4:	inc    edx
  4153a5:	push   ss
  4153a6:	mov    esp,DWORD PTR [eax-0x1344a289]
  4153ac:	mov    esi,0xe172c786
  4153b1:	xchg   esp,eax
  4153b2:	jae    0x41541e
  4153b4:	test   eax,0xf97d1c47
  4153b9:	(bad)  
  4153ba:	push   ss
  4153bb:	pop    ds
  4153bc:	xor    BYTE PTR [ebp+0x3a],al
  4153bf:	add    eax,esp
  4153c1:	fidivr DWORD PTR [ecx]
  4153c3:	jmp    DWORD PTR [ebp-0xe]
  4153c6:	(bad)  
  4153c7:	jmp    0x415375
  4153c9:	sbb    al,0x1e
  4153cb:	in     eax,0xe6
  4153cd:	ficomp WORD PTR [edx+0x37]
  4153d0:	mov    al,ds:0xd2acd72
  4153d5:	shl    BYTE PTR [ebx+0x6e8564b2],cl
  4153db:	cli    
  4153dc:	jl     0x41542a
  4153de:	es mov ah,0xe5
  4153e1:	mov    ecx,0x205e1329
  4153e6:	hlt    
  4153e7:	test   esi,esi
  4153e9:	(bad)  
  4153eb:	and    ebx,DWORD PTR [edi+0x59f9e350]
  4153f1:	(bad)  
  4153f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153f3:	pop    ebp
  4153f4:	retf   0x57cf
  4153f7:	rcl    BYTE PTR [edx+0x47],1
  4153fa:	sbb    eax,0x83d30c0
  4153ff:	push   edi
  415400:	out    0x41,al
  415402:	jnp    0x415453
  415404:	push   es
  415405:	jle    0x415407
  415407:	jp     0x41547c
  415409:	add    eax,0x9e1ec17e
  41540e:	or     al,0xd2
  415410:	pusha  
  415411:	push   ss
  415412:	jne    0x41540a
  415414:	(bad)  
  415415:	daa    
  415416:	inc    ecx
  415417:	fnstsw ax
  415419:	mov    ah,0x8
  41541b:	pop    ss
  41541c:	mov    ebx,0x8d2d3ac
  415421:	dec    esi
  415422:	mov    BYTE PTR [esi-0x6a],dh
  415425:	mov    edi,0xfe5f149c
  41542a:	adc    DWORD PTR [ecx+0x72f0e238],ecx
  415430:	int    0xc1
  415432:	dec    esp
  415433:	enter  0xa588,0x57
  415437:	stos   BYTE PTR es:[edi],al
  415438:	aas    
  415439:	or     bl,BYTE PTR [ecx-0x4b]
  41543c:	jmp    0x4154b1
  41543e:	add    DWORD PTR cs:[edi],edi
  415441:	aam    0x23
  415443:	jne    0x4153e4
  415445:	sahf   
  415446:	aas    
  415447:	jg     0x41548e
  415449:	mov    dh,0x29
  41544b:	repnz das 
  41544d:	add    edi,DWORD PTR [edi]
  41544f:	mov    DWORD PTR [edi],esp
  415451:	mov    ah,0xf4
  415453:	ret    
  415454:	(bad)  [eax+0x3dc9707b]
  41545a:	call   0x32800ef3
  41545f:	stos   DWORD PTR es:[edi],eax
  415460:	sbb    al,0xad
  415462:	rcl    BYTE PTR [ebp+0x582cd0cf],1
  415468:	cmp    eax,0xc689623b
  41546d:	pop    ebp
  41546e:	aas    
  41546f:	aam    0xda
  415471:	sahf   
  415472:	adc    al,0xd6
  415474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415475:	push   ecx
  415476:	sub    DWORD PTR [ebx],0x7c
  415479:	das    
  41547a:	int3   
  41547b:	inc    ebp
  41547c:	inc    esi
  41547d:	xor    al,0xae
  41547f:	ror    BYTE PTR [esi+0x1a],cl
  415482:	xor    eax,0x41a1a37c
  415487:	pop    eax
  415488:	test   al,0x97
  41548a:	jmp    0xdd38:0xc6007e76
  415491:	inc    eax
  415492:	inc    edi
  415493:	xchg   ebx,eax
  415494:	adc    al,0xdf
  415496:	mov    ah,BYTE PTR ds:0xa8076ceb
  41549c:	push   es
  41549d:	mul    BYTE PTR [eax-0x2be58c77]
  4154a3:	test   DWORD PTR [edi+0x2d],esi
  4154a6:	push   0xffffff91
  4154a8:	test   BYTE PTR [edi-0x6c81850a],dh
  4154ae:	das    
  4154af:	jge    0x4154cb
  4154b1:	(bad)  
  4154b2:	mov    al,0x47
  4154b4:	dec    esi
  4154b5:	mov    ah,0x34
  4154b7:	mov    esi,0xb09adf30
  4154bc:	xor    al,0xdb
  4154be:	adc    edx,edi
  4154c0:	and    DWORD PTR [ebx-0x73],edi
  4154c3:	gs test al,0x13
  4154c6:	mov    bh,0x2
  4154c8:	jne    0x4154a2
  4154ca:	int    0x3a
  4154cc:	out    dx,eax
  4154cd:	pop    ss
  4154ce:	aaa    
  4154cf:	and    bh,BYTE PTR [edx]
  4154d1:	jnp    0x415518
  4154d3:	jo     0x415551
  4154d5:	aad    0x29
  4154d7:	imul   esi,esp,0xb735e1f
  4154dd:	dec    ecx
  4154de:	jns    0x4154d0
  4154e0:	dec    ebx
  4154e1:	cdq    
  4154e2:	inc    edx
  4154e3:	(bad)  
  4154e4:	iret   
  4154e5:	sub    BYTE PTR [eax*8+0x590c5ca],bl
  4154ec:	ficomp DWORD PTR [ecx-0x20]
  4154ef:	adc    BYTE PTR [edx-0x2d2fc753],ah
  4154f5:	fdiv   DWORD PTR [esi+0x67]
  4154f8:	sbb    al,0xf
  4154fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154fb:	dec    ebp
  4154fc:	stos   BYTE PTR es:[edi],al
  4154fd:	in     al,dx
  4154fe:	mov    cl,0x9a
  415500:	pop    es
  415501:	test   BYTE PTR [esp+esi*8-0xf],dl
  415505:	push   ecx
  415506:	mov    ebx,0xdd566345
  41550b:	mov    WORD PTR [edi-0x26f8774e],ds
  415511:	retf   0x5997
  415514:	int    0x7c
  415516:	fdivr  DWORD PTR [edx]
  415518:	mov    dl,0x37
  41551a:	pop    eax
  41551b:	dec    DWORD PTR ds:0x94998d24
  415521:	ins    DWORD PTR es:[edi],dx
  415522:	sub    DWORD PTR [ecx+edi*4+0x79638d89],ebx
  415529:	rcr    BYTE PTR [eax],0x5a
  41552c:	aad    0xa
  41552e:	lock js 0x415506
  415531:	repnz pop esp
  415533:	ret    
  415534:	scas   eax,DWORD PTR es:[edi]
  415535:	scas   eax,DWORD PTR es:[edi]
  415536:	push   esp
  415537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415538:	push   ecx
  415539:	(bad)
  41553c:	adc    eax,0xfebbdd4
  415541:	mov    esi,0xd49fe40c
  415546:	mov    esp,0xce0ba8ab
  41554b:	adc    ah,cl
  41554d:	stos   BYTE PTR es:[edi],al
  41554e:	dec    esp
  41554f:	ret    0x9866
  415552:	inc    ebx
  415553:	lahf   
  415554:	into   
  415555:	push   ebx
  415556:	sbb    dl,al
  415558:	adc    al,0xde
  41555a:	push   ds
  41555b:	(bad)  
  41555c:	pusha  
  41555d:	mov    edi,0xdcb9bd0
  415562:	add    eax,0x258f43db
  415567:	cmc    
  415568:	ret    0x2d46
  41556b:	stos   BYTE PTR es:[edi],al
  41556c:	sahf   
  41556d:	pop    es
  41556e:	stc    
  41556f:	mov    ah,0x4c
  415571:	aaa    
  415572:	lods   al,BYTE PTR ds:[esi]
  415573:	cmc    
  415574:	dec    esi
  415575:	(bad)  
  415576:	fcmovnbe st,st(0)
  415578:	fsubr  st,st(2)
  41557a:	dec    esi
  41557b:	repnz repnz test al,0x6e
  41557f:	mov    dh,0xb1
  415581:	push   esp
  415582:	xor    DWORD PTR ds:0xd96ab2d9,eax
  415588:	popa   
  415589:	jmp    0x415607
  41558b:	jge    0x415607
  41558d:	push   es
  41558e:	jb     0x4155f6
  415590:	mov    al,0x8f
  415592:	gs jbe 0x415583
  415595:	push   edx
  415596:	xor    al,BYTE PTR [ebp-0x4]
  415599:	inc    ebp
  41559a:	out    dx,al
  41559b:	jae    0x41560c
  41559d:	mov    ch,0x17
  41559f:	mov    esi,0x6e9b4474
  4155a4:	cs js  0x41560b
  4155a7:	push   eax
  4155a8:	(bad)  
  4155a9:	mov    BYTE PTR ds:0x52250f88,ah
  4155af:	ins    BYTE PTR es:[edi],dx
  4155b0:	inc    esp
  4155b1:	pop    esi
  4155b2:	or     edi,ebp
  4155b4:	xor    edx,DWORD PTR [ebx+0x2c0762a4]
  4155ba:	lock mov edx,edi
  4155bd:	repnz inc ecx
  4155bf:	(bad)  
  4155c0:	aaa    
  4155c1:	dec    esi
  4155c2:	(bad)  
  4155c3:	aas    
  4155c4:	inc    edi
  4155c5:	aas    
  4155c6:	js     0x415590
  4155c8:	push   edi
  4155c9:	daa    
  4155ca:	jle    0x41560f
  4155cc:	mov    ebx,esp
  4155ce:	pop    es
  4155cf:	and    eax,0x788093d1
  4155d4:	jb     0x415591
  4155d6:	cmp    DWORD PTR [edx],edx
  4155d8:	mov    al,0x27
  4155da:	fild   QWORD PTR [eax-0x15]
  4155dd:	jne    0x415570
  4155df:	add    DWORD PTR ds:0xc05e8478,esp
  4155e5:	mov    cl,bh
  4155e7:	jg     0x415630
  4155e9:	inc    ebx
  4155ea:	or     eax,0x2433aea0
  4155ef:	and    edi,DWORD PTR [ecx+0x31538ee7]
  4155f5:	into   
  4155f6:	mov    esp,0x30db476b
  4155fb:	(bad)  
  4155fc:	inc    DWORD PTR [esi]
  4155fe:	std    
  4155ff:	outs   dx,BYTE PTR ds:[esi]
  415600:	dec    esi
  415601:	mov    edi,0xd92f923a
  415606:	sub    ah,ch
  415608:	or     DWORD PTR [eax+edx*2-0x59abf948],esp
  41560f:	stos   DWORD PTR es:[edi],eax
  415610:	mov    edx,0x5e729bf7
  415615:	mov    eax,ds:0x20c2f7af
  41561a:	fldenv [edx+0x4c]
  41561d:	dec    ecx
  41561e:	loope  0x4155ac
  415620:	and    DWORD PTR [ebx-0x7],edx
  415623:	add    BYTE PTR [esi+0x397cc926],0x31
  41562a:	mov    DWORD PTR [edi+0xe],ebx
  41562d:	lds    ecx,FWORD PTR [ebp+0x73ecbc27]
  415633:	inc    esp
  415634:	jmp    DWORD PTR [edi]
  415636:	retf   0x1658
  415639:	mov    ebp,0x17f8b032
  41563e:	imul   ecx,DWORD PTR [esi+0x77],0x61
  415642:	xor    eax,0x5e1f92fe
  415647:	and    ecx,DWORD PTR [edx-0x5a]
  41564a:	loopne 0x4155e1
  41564c:	jo     0x4156a3
  41564e:	call   0x3d97:0x9dc11031
  415655:	push   0x2e
  415657:	(bad)  
  415658:	jmp    0x4155fb
  41565a:	shl    DWORD PTR [edx-0x11],0x85
  41565e:	mov    esi,0x7ea7c257
  415663:	in     eax,dx
  415664:	out    0x6c,eax
  415666:	pop    edx
  415667:	pop    esi
  415668:	xchg   ebp,eax
  415669:	push   esi
  41566a:	pop    ebp
  41566b:	popa   
  41566c:	xor    BYTE PTR [ebx+0x34743493],dh
  415672:	or     DWORD PTR [eax+0x38b2e68a],edi
  415678:	dec    esp
  415679:	dec    ebx
  41567a:	push   ebx
  41567b:	shl    BYTE PTR [edi+0x9],1
  41567e:	mov    esi,gs
  415680:	mov    edx,DWORD PTR [edi]
  415682:	xchg   edi,eax
  415683:	push   edi
  415684:	jo     0x415694
  415686:	mov    ecx,0xd34ae505
  41568b:	fcom   DWORD PTR [ebp-0x37]
  41568e:	jne    0x415627
  415690:	mov    ecx,0x790b9b16
  415695:	jp     0x415686
  415697:	sub    eax,0x49cec752
  41569c:	stos   BYTE PTR es:[edi],al
  41569d:	ins    DWORD PTR es:[edi],dx
  41569e:	les    ebx,FWORD PTR [eax+eiz*8+0x3]
  4156a2:	div    BYTE PTR [ecx]
  4156a4:	dec    edi
  4156a5:	mov    bh,0xa1
  4156a7:	push   cs
  4156a8:	sbb    BYTE PTR ds:0x65c5fa0,ah
  4156ae:	mov    WORD PTR [ecx],gs
  4156b0:	pop    es
  4156b1:	dec    ecx
  4156b2:	ins    BYTE PTR es:[edi],dx
  4156b3:	leave  
  4156b4:	sub    bl,BYTE PTR [edx]
  4156b6:	or     BYTE PTR [edx-0x1f],bh
  4156b9:	pop    edi
  4156ba:	lds    edi,FWORD PTR [edx]
  4156bc:	jbe    0x4156a6
  4156be:	jnp    0x41570f
  4156c0:	mov    DWORD PTR [ebp+0x51],0xddc1e79b
  4156c7:	jmp    0xafeeaf5d
  4156cc:	mov    edx,0xafbc6d5b
  4156d1:	push   ecx
  4156d2:	adc    al,0x8a
  4156d4:	adc    bh,0x38
  4156d7:	cmp    BYTE PTR [eax+esi*8+0x0],bh
  4156db:	das    
  4156dc:	scas   eax,DWORD PTR es:[edi]
  4156dd:	ja     0x415742
  4156df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e0:	sbb    esp,ebp
  4156e2:	pushf  
  4156e3:	iret   
  4156e4:	enter  0x4eb5,0x9e
  4156e8:	pop    ds
  4156e9:	mov    al,ds:0xa5d6c74f
  4156ee:	pop    edx
  4156ef:	js     0x415672
  4156f1:	sti    
  4156f2:	das    
  4156f3:	js     0x415747
  4156f5:	jecxz  0x4156ab
  4156f7:	enter  0x36eb,0x2e
  4156fb:	int3   
  4156fc:	aaa    
  4156fd:	and    cl,BYTE PTR [esp+ebx*8+0x10]
  415701:	or     al,BYTE PTR [ecx+0x7e72d689]
  415707:	mov    edx,0x69b84e77
  41570c:	les    esi,FWORD PTR [ebx+0x73c9d9a0]
  415712:	test   eax,0x3dd74205
  415717:	loop   0x41573a
  415719:	loop   0x4156f4
  41571b:	sbb    dl,BYTE PTR [ebp+0x506a987]
  415721:	jle    0x415763
  415723:	rol    edi,0x8a
  415726:	mov    WORD PTR [ebp-0x440d9a8b],?
  41572c:	mov    edx,0xe0707bed
  415731:	mov    ecx,0x444b2bdc
  415736:	scas   al,BYTE PTR es:[edi]
  415737:	mov    esp,0x5ba5a4e5
  41573c:	jns    0x415738
  41573e:	mov    DWORD PTR es:[esi+0x1e],edi
  415742:	(bad)  
  415743:	es clc 
  415745:	cmp    eax,0xdaa734f3
  41574a:	dec    esi
  41574b:	fucomp st(2)
  41574d:	mov    ebp,0x2ad78d9f
  415752:	and    eax,0xbdae6658
  415757:	push   0xffffffef
  415759:	pop    ebp
  41575a:	adc    eax,0x6e30752f
  41575f:	int3   
  415760:	jb     0x415722
  415762:	push   edx
  415763:	push   esi
  415764:	xor    al,0xb9
  415766:	xor    al,0x9d
  415768:	int3   
  415769:	ror    BYTE PTR [edx],cl
  41576b:	addr16 dec esi
  41576d:	sbb    edi,DWORD PTR [ebp+0x5843c2d9]
  415773:	jmp    0x415777
  415775:	push   ebx
  415776:	push   edi
  415777:	xchg   BYTE PTR [eax+0x63],bl
  41577a:	inc    ebp
  41577b:	(bad)  
  41577c:	dec    edx
  41577d:	call   0xcce51335
  415782:	enter  0x3b07,0xda
  415786:	fcom   DWORD PTR [esi-0x7e9cb2a5]
  41578c:	ds jecxz 0x415790
  41578f:	mov    ecx,0x39781938
  415794:	adc    ebx,ecx
  415796:	mov    ds:0x8c0e5036,al
  41579b:	(bad)  [edi+edx*8]
  41579e:	cmp    eax,0xa4808e3f
  4157a3:	mov    esp,0xb0023e1e
  4157a8:	adc    ebx,DWORD PTR [ebp+0x41f5651c]
  4157ae:	jb     0x4157a0
  4157b0:	mov    cl,0xf3
  4157b2:	push   edx
  4157b3:	sub    al,0x87
  4157b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157b6:	addr16 retf 
  4157b8:	mov    ebx,0x48b1cc28
  4157bd:	test   BYTE PTR [ecx],al
  4157bf:	and    cl,BYTE PTR ds:0xcc5433b
  4157c5:	jo     0x4157af
  4157c7:	xchg   edi,eax
  4157c8:	gs int 0xd0
  4157cb:	and    eax,0x8ad55669
  4157d0:	je     0x415769
  4157d2:	xor    eax,0x17d81a45
  4157d7:	call   0x90252cd9
  4157dc:	out    0x47,al
  4157de:	mov    dh,0x76
  4157e0:	sub    eax,0x3f5cdb74
  4157e5:	cli    
  4157e6:	ds mov ebx,0x1b3ca205
  4157ec:	xor    eax,DWORD PTR [eax-0x22253f12]
  4157f2:	je     0x41577f
  4157f4:	pop    ss
  4157f5:	pushf  
  4157f6:	fld    QWORD PTR [ebp+0x29796fcd]
  4157fc:	jne    0x4157a9
  4157fe:	push   cs
  4157ff:	popa   
  415800:	mov    eax,0x8c2d7dae
  415805:	adc    DWORD PTR [eax+0x48b65651],0xffffff82
  41580c:	mov    bh,0x36
  41580e:	sahf   
  41580f:	cs dec edx
  415811:	addr16 ja 0x4157c0
  415814:	in     eax,0x9c
  415816:	jecxz  0x4157b5
  415818:	sub    DWORD PTR [edx+edi*1],esp
  41581b:	jle    0x415805
  41581d:	lds    eax,FWORD PTR [ecx]
  41581f:	mov    eax,0x7af5898b
  415824:	dec    edi
  415825:	setp   BYTE PTR [ebx-0x60d35f38]
  41582c:	sbb    al,0x7c
  41582e:	and    bl,BYTE PTR [ecx]
  415830:	retf   0x7617
  415833:	adc    ecx,ebp
  415835:	ss adc al,0x20
  415838:	dec    edx
  415839:	mov    esp,0xffae087e
  41583e:	mov    ebx,0xed9c1e74
  415843:	mov    bh,0xf9
  415845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415846:	pop    ecx
  415847:	dec    ebx
  415848:	mov    bl,0x43
  41584a:	and    DWORD PTR [eax],ebp
  41584c:	or     dh,BYTE PTR [edi-0x17]
  41584f:	mov    eax,ds:0x84b1b7d3
  415854:	lea    eax,[ecx+ebp*1+0x151fd05]
  41585b:	jg     0x415827
  41585d:	push   es
  41585e:	xlat   BYTE PTR ds:[ebx]
  41585f:	mov    ecx,0x3e89724a
  415864:	dec    ecx
  415865:	or     BYTE PTR [edi*2+0x7ba708ee],bl
  41586c:	into   
  41586d:	lea    ebp,[ebx+eax*1-0x7e]
  415871:	les    eax,FWORD PTR ds:0xe8e8654c
  415877:	aaa    
  415878:	rol    esi,cl
  41587a:	lock ja 0x41589e
  41587d:	cmp    BYTE PTR [ebx+edx*1],al
  415880:	cmp    ebx,DWORD PTR ds:0x7a3d17d2
  415886:	sbb    edx,DWORD PTR [edi+esi*4]
  415889:	shr    BYTE PTR [edx+0x5d],0x60
  41588d:	dec    eax
  41588e:	std    
  41588f:	sub    al,0x54
  415892:	add    esp,DWORD PTR [ecx]
  415894:	push   eax
  415895:	mov    eax,ds:0x49eaea5d
  41589a:	shr    DWORD PTR [ebp+0x78548790],0x3b
  4158a1:	lds    edi,FWORD PTR [edi+0x70]
  4158a4:	jmp    0x415850
  4158a6:	and    edx,DWORD PTR [ecx+0x3b6c997]
  4158ac:	es test ch,ch
  4158af:	sbb    al,0x13
  4158b1:	cmp    BYTE PTR [esi+0x69],0x6a
  4158b5:	mov    ah,0xaf
  4158b7:	adc    ebp,esp
  4158b9:	fistp  DWORD PTR [ebx-0x38]
  4158bc:	test   dh,al
  4158be:	stos   BYTE PTR es:[edi],al
  4158bf:	adc    eax,0x5b127122
  4158c4:	sbb    DWORD PTR [edi+eax*8],edi
  4158c7:	jne    0x41590a
  4158c9:	adc    DWORD PTR [esi+0x45aa81e9],eax
  4158cf:	lods   al,BYTE PTR ds:[esi]
  4158d0:	int3   
  4158d1:	push   0x18
  4158d3:	imul   edi,DWORD PTR [edx+0x7c],0xffffffd1
  4158d7:	mul    BYTE PTR [edi-0x33]
  4158da:	adc    esp,esp
  4158dc:	add    eax,0x1a07fec0
  4158e1:	push   ecx
  4158e2:	out    dx,al
  4158e3:	lods   eax,DWORD PTR ds:[esi]
  4158e4:	xor    edx,DWORD PTR [edx-0x65903981]
  4158ea:	xchg   DWORD PTR [edx-0x69],esp
  4158ed:	mov    ds:0xa2a33b49,eax
  4158f2:	mov    eax,ds:0xacf3ec89
  4158f7:	aaa    
  4158f8:	clc    
  4158f9:	int    0x17
  4158fb:	fs hlt 
  4158fd:	push   esp
  4158fe:	icebp  
  4158ff:	retf   
  415900:	push   edx
  415901:	aam    0xe
  415903:	sbb    ch,BYTE PTR [edx-0x2540afea]
  415909:	mov    bh,0x91
  41590c:	lock mov eax,ds:0x5094ccfd
  415912:	addr16 push 0xeb9f78c2
  415918:	cmp    DWORD PTR [eax+0x6],0x72
  41591c:	inc    ebp
  41591d:	aad    0x26
  41591f:	pop    ds
  415920:	mov    ebx,0x74e01320
  415925:	and    ah,BYTE PTR [eax+edx*8]
  415928:	stos   BYTE PTR es:[edi],al
  415929:	dec    esp
  41592a:	adc    dh,BYTE PTR [eax-0x7b]
  41592d:	addr16 dec eax
  41592f:	add    BYTE PTR [ebx-0x6d698122],cl
  415935:	imul   ebp,DWORD PTR [ecx+0x1833add8],0xc21534ee
  41593f:	sub    edi,ebp
  415941:	lahf   
  415942:	cmp    al,0x69
  415944:	jmp    0x4158e1
  415946:	or     dh,0x57
  415949:	cmp    al,0x27
  41594b:	popa   
  41594c:	outs   dx,BYTE PTR ds:[esi]
  41594d:	sub    eax,0x2c6c1c03
  415952:	aam    0xae
  415954:	clc    
  415955:	adc    esp,DWORD PTR [ecx+0x15]
  415958:	mov    edx,0x258b873c
  41595d:	test   esp,esi
  41595f:	push   edi
  415960:	(bad)  [ebx+0x4a]
  415963:	or     ecx,edx
  415965:	pop    es
  415966:	jo     0x41593c
  415968:	retf   
  415969:	cmp    BYTE PTR [eax+0x65],al
  41596c:	mov    esi,0x4c4012cf
  415971:	or     al,bl
  415973:	sub    ch,dl
  415975:	es sbb edi,ebx
  415978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415979:	jle    0x4159ca
  41597b:	mov    ds:0xca1adc1c,al
  415980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415981:	mov    ebp,0x8e403c70
  415986:	mov    ds:0x36b6b6b6,al
  41598b:	ins    BYTE PTR es:[edi],dx
  41598c:	bound  eax,QWORD PTR [ecx+0x33b1c90d]
  415992:	adc    eax,0x93c62219
  415997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415998:	fnstenv [eax]
  41599a:	ds stc 
  41599c:	pop    ebp
  41599d:	jno    0x4159e8
  41599f:	jge    0x415936
  4159a1:	out    dx,al
  4159a2:	jg     0x415a11
  4159a4:	loope  0x415964
  4159a6:	and    edx,ebx
  4159a8:	xchg   edx,eax
  4159a9:	cmp    eax,0xc9dd7846
  4159ae:	out    0x7f,eax
  4159b0:	ficomp WORD PTR gs:[esi-0x3700f8ad]
  4159b7:	ds inc edx
  4159b9:	imul   DWORD PTR [esi]
  4159bb:	out    0xfd,eax
  4159bd:	cmp    bl,BYTE PTR [ebx+0x13]
  4159c0:	sbb    BYTE PTR [edi],0x35
  4159c3:	and    ebp,DWORD PTR [ecx]
  4159c5:	pop    ss
  4159c6:	rcl    DWORD PTR [eax+0x49312ea2],1
  4159cc:	rcl    BYTE PTR [edx],0x44
  4159cf:	push   ebx
  4159d0:	test   eax,0xcc8c5abd
  4159d5:	ds add al,0xe0
  4159d8:	mov    gs,esi
  4159da:	sbb    al,0x14
  4159dc:	in     al,0x8d
  4159de:	and    BYTE PTR [edx-0x42],0x39
  4159e2:	push   ecx
  4159e3:	and    BYTE PTR [edx+0x3e5322be],0x7b
  4159ea:	repnz pop ebp
  4159ec:	or     BYTE PTR [si-0x5a08],0x82
  4159f2:	loop   0x4159ee
  4159f4:	test   esp,edi
  4159f6:	adc    ch,BYTE PTR [esi-0x50]
  4159f9:	outs   dx,BYTE PTR ds:[esi]
  4159fa:	fidivr WORD PTR [ebx]
  4159fc:	dec    ecx
  4159fd:	pop    ds
  4159fe:	es dec esp
  415a00:	and    DWORD PTR [esi-0x22],esp
  415a03:	pop    es
  415a04:	inc    ecx
  415a05:	aas    
  415a06:	shr    DWORD PTR [edx],1
  415a08:	mov    al,ds:0xb0ea1b13
  415a0d:	cld    
  415a0e:	jno    0x415a1a
  415a10:	hlt    
  415a11:	add    DWORD PTR fs:[ebx-0x42acce35],edi
  415a18:	jb     0x41599b
  415a1a:	sub    esp,DWORD PTR [edx-0x1d]
  415a1d:	into   
  415a1e:	adc    cl,BYTE PTR [edx+0x56af144a]
  415a24:	push   ebp
  415a25:	arpl   dx,di
  415a27:	out    0x12,eax
  415a29:	or     ebp,DWORD PTR [edx+0x320e2a29]
  415a2f:	test   edi,ebp
  415a31:	pop    esp
  415a32:	scas   eax,DWORD PTR es:[edi]
  415a33:	(bad)  
  415a34:	aam    0x61
  415a36:	sbb    BYTE PTR [edi+ebp*1],ch
  415a39:	pop    edi
  415a3a:	in     eax,dx
  415a3b:	mov    ebx,?
  415a3d:	xor    al,0x42
  415a3f:	lds    ecx,FWORD PTR [edx+0x2ceabd4b]
  415a45:	jmp    0xcda4:0x3fc558a3
  415a4c:	cmp    ch,BYTE PTR [eax]
  415a4e:	and    eax,0x2788798e
  415a53:	mov    BYTE PTR ds:0xe4c3c2b6,ch
  415a59:	in     al,dx
  415a5a:	xor    eax,DWORD PTR [ebx]
  415a5c:	sub    BYTE PTR [ebx+0x27],al
  415a5f:	inc    esp
  415a60:	lock mov bl,bh
  415a63:	mov    eax,?
  415a65:	add    eax,0x1a2381a2
  415a6a:	cli    
  415a6b:	or     BYTE PTR [edi],bh
  415a6d:	call   0x9cf7dc4
  415a72:	je     0x415a8e
  415a74:	aad    0x15
  415a76:	mov    bl,0x9e
  415a78:	popf   
  415a79:	ret    
  415a7a:	push   esp
  415a7b:	in     eax,dx
  415a7c:	mov    eax,0x40b22798
  415a81:	and    al,0xdb
  415a83:	ficomp DWORD PTR [eax+0x7d]
  415a86:	in     al,0x26
  415a88:	xchg   edi,eax
  415a89:	iret   
  415a8a:	shr    DWORD PTR [ebx-0x4b907119],0x11
  415a91:	pop    edx
  415a92:	adc    al,0xf7
  415a94:	xor    bl,BYTE PTR [edx-0x56]
  415a97:	pop    ds
  415a98:	retf   0xa45c
  415a9b:	adc    cl,BYTE PTR [esi+esi*1+0x19d052aa]
  415aa2:	mov    ds:0x49995011,al
  415aa7:	mov    fs:0x345cec72,al
  415aad:	cmp    al,0xf3
  415aaf:	sbb    ebx,DWORD PTR [ecx]
  415ab1:	jnp    0x415a7b
  415ab3:	sub    eax,0x62b37db6
  415ab8:	xchg   edi,eax
  415ab9:	xor    ecx,DWORD PTR [esi]
  415abb:	or     DWORD PTR [eax],esp
  415abd:	ins    DWORD PTR es:[edi],dx
  415abe:	jb     0x415a80
  415ac0:	pusha  
  415ac1:	stc    
  415ac2:	jbe    0x415b34
  415ac4:	ins    BYTE PTR es:[edi],dx
  415ac5:	(bad)  
  415ac6:	and    eax,0xf6824902
  415acb:	or     al,0x36
  415acd:	push   eax
  415ace:	mov    cl,0x5e
  415ad0:	push   cs
  415ad1:	aas    
  415ad2:	xor    al,0xd6
  415ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad5:	add    eax,0xddc8106b
  415ada:	mov    ah,0x6
  415adc:	mov    dh,0x66
  415ade:	pusha  
  415adf:	inc    esi
  415ae0:	fnstcw WORD PTR [edx]
  415ae2:	add    BYTE PTR [esi],dl
  415ae4:	xchg   esp,eax
  415ae5:	lds    edi,FWORD PTR [esi+0x4f]
  415ae8:	adc    dl,BYTE PTR [ebx-0x3a]
  415aeb:	xor    edx,ebp
  415aed:	in     al,0x5
  415aef:	mov    bh,al
  415af1:	xchg   ebx,eax
  415af2:	mov    edx,0xc06bd343
  415af7:	dec    ecx
  415af8:	data16 mov cl,0x71
  415afb:	or     al,0x98
  415afd:	dec    ebp
  415afe:	xchg   DWORD PTR [esi+0x2c],ebp
  415b01:	ins    DWORD PTR es:[edi],dx
  415b02:	add    BYTE PTR [esi-0x49],0x19
  415b06:	int    0x2b
  415b08:	cmp    ebp,DWORD PTR [eax]
  415b0a:	bound  ecx,QWORD PTR [ecx]
  415b0c:	div    bl
  415b0e:	cmp    BYTE PTR [ebx+0x5d],bl
  415b11:	outs   dx,DWORD PTR ds:[esi]
  415b12:	imul   edi,DWORD PTR [ebp+esi*4+0x22],0xa08fc748
  415b1a:	push   ebp
  415b1b:	pop    edx
  415b1c:	push   ebp
  415b1d:	int3   
  415b1e:	mov    edx,0x2a0e084e
  415b23:	sti    
  415b24:	jle    0x415b9b
  415b26:	jmp    0xb5f9c378
  415b2b:	out    0xad,eax
  415b2d:	add    BYTE PTR ds:0xd68918d3,ch
  415b33:	gs nop
  415b35:	sub    eax,0x92903d60
  415b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b3b:	jmp    0x90bc:0xb1abb0bf
  415b42:	aaa    
  415b43:	add    ecx,ecx
  415b45:	sbb    al,0x25
  415b47:	sub    al,BYTE PTR ds:0xe2c3426d
  415b4d:	pop    ds
  415b4e:	jb     0x415b11
  415b50:	pushf  
  415b51:	jmp    0xbe133dfc
  415b56:	cmp    cl,ch
  415b58:	sahf   
  415b59:	push   0xee7ad301
  415b5e:	call   0x98c51b03
  415b63:	test   al,0x27
  415b65:	pop    edx
  415b66:	or     dh,BYTE PTR [ecx+0x19]
  415b69:	add    esi,DWORD PTR [ecx-0x73]
  415b6c:	mov    ebp,0x97c0c024
  415b71:	cwde   
  415b72:	addr16 dec ebp
  415b74:	repz hlt 
  415b76:	inc    ebx
  415b77:	sub    ebx,esi
  415b79:	rcr    edi,0x85
  415b7c:	pop    es
  415b7d:	dec    ecx
  415b7e:	cmp    esi,DWORD PTR [edi+edx*1+0x43]
  415b82:	cs add eax,0x129c2148
  415b88:	sbb    esp,edi
  415b8a:	add    BYTE PTR [esi],bh
  415b8c:	or     esi,DWORD PTR [eax+ebx*1-0x30]
  415b90:	mov    al,0x49
  415b92:	add    al,0x15
  415b94:	push   esp
  415b95:	cmc    
  415b96:	mov    dh,0x8c
  415b98:	cmp    al,0xb
  415b9a:	push   ebx
  415b9b:	dec    ebx
  415b9c:	and    edi,DWORD PTR [ebp+0x18]
  415b9f:	or     al,0x47
  415ba1:	imul   ebp,DWORD PTR [eax+0xf],0x10f1aa7c
  415ba8:	mov    ss,WORD PTR [edi+eiz*2+0x25]
  415bac:	mov    dh,BYTE PTR [edi]
  415bae:	push   eax
  415baf:	cs push edi
  415bb1:	sub    eax,0x7847f368
  415bb6:	call   0x670c:0x8e679191
  415bbd:	cdq    
  415bbe:	mov    ch,0x61
  415bc0:	xchg   edx,eax
  415bc1:	push   ecx
  415bc2:	adc    bh,bh
  415bc4:	int    0x5e
  415bc6:	fistp  DWORD PTR [esp+eiz*4+0x2f]
  415bca:	mov    esp,ds
  415bcc:	mov    cl,0xd7
  415bce:	pop    ebp
  415bcf:	cwde   
  415bd0:	inc    ebp
  415bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bd2:	das    
  415bd3:	clc    
  415bd4:	cdq    
  415bd5:	xchg   DWORD PTR [edx],ecx
  415bd7:	jge    0x415bec
  415bd9:	or     bh,BYTE PTR [eax-0x32]
  415bdc:	aam    0x2c
  415bde:	adc    eax,0xcfa70960
  415be3:	push   esp
  415be4:	out    dx,al
  415be5:	mov    ch,0xf2
  415be7:	adc    ecx,esi
  415be9:	pop    es
  415bea:	mov    BYTE PTR [esi+0x3c],al
  415bed:	push   esp
  415bee:	inc    eax
  415bef:	pop    esi
  415bf0:	mov    ebx,gs
  415bf2:	popf   
  415bf3:	sub    eax,0xefbb2173
  415bf8:	data16 add dl,al
  415bfb:	pop    ebx
  415bfc:	and    ebx,DWORD PTR [edx-0x7d]
  415bff:	stos   DWORD PTR es:[edi],eax
  415c00:	cs dec esp
  415c02:	push   es
  415c03:	fdivr  DWORD PTR [edi-0x58baa0b1]
  415c09:	mov    dl,0xf6
  415c0b:	add    BYTE PTR [edx],ah
  415c0d:	mov    edx,fs
  415c0f:	inc    edi
  415c10:	or     eax,0xacbb1de4
  415c15:	das    
  415c16:	pop    DWORD PTR [edx+0x30ec0db1]
  415c1c:	lahf   
  415c1d:	mov    ds:0x6d672ba6,al
  415c22:	push   es
  415c23:	cmc    
  415c24:	push   esp
  415c25:	sbb    al,0xb3
  415c27:	pop    ebp
  415c28:	push   esp
  415c29:	add    eax,0x38d87c61
  415c2e:	xchg   ebx,eax
  415c2f:	inc    ecx
  415c30:	int3   
  415c31:	sub    ebx,DWORD PTR [edi-0x53]
  415c34:	adc    BYTE PTR [eax],dh
  415c36:	ins    BYTE PTR es:[edi],dx
  415c37:	mov    ah,BYTE PTR [ebx+0x30a5e432]
  415c3d:	mov    bh,ch
  415c3f:	inc    esi
  415c40:	or     esp,esp
  415c42:	inc    edx
  415c43:	sub    bl,BYTE PTR [esi-0x2e]
  415c46:	lods   al,BYTE PTR ds:[esi]
  415c47:	inc    ebx
  415c48:	jb     0x415be3
  415c4a:	fldenv [ecx+edi*2-0x38]
  415c4e:	jmp    0x415c65
  415c50:	and    dl,BYTE PTR [si]
  415c53:	loope  0x415ccd
  415c55:	ins    BYTE PTR es:[edi],dx
  415c56:	sub    DWORD PTR [eax],esi
  415c58:	dec    edx
  415c59:	sahf   
  415c5a:	xchg   esi,eax
  415c5b:	inc    eax
  415c5c:	imul   edx,DWORD PTR [esi+0x33],0x61248810
  415c63:	mov    bh,0x8c
  415c65:	mov    bh,0x45
  415c67:	xlat   BYTE PTR ds:[ebx]
  415c68:	aam    0x24
  415c6a:	pushf  
  415c6b:	lock les edx,FWORD PTR [eax-0x24c0a313]
  415c72:	cmp    al,0x36
  415c74:	sbb    bh,bl
  415c76:	and    DWORD PTR [esi],ebx
  415c78:	push   ecx
  415c79:	shr    BYTE PTR ds:0xd86f63ac,0x86
  415c80:	dec    ecx
  415c81:	idiv   DWORD PTR [edi-0x7c]
  415c84:	jge    0x415cb3
  415c86:	sbb    BYTE PTR [ebp+0x1c],ah
  415c89:	or     al,0x6a
  415c8b:	adc    eax,0xefe21cb
  415c90:	outs   dx,BYTE PTR ds:[esi]
  415c91:	jmp    0x89ec9c52
  415c96:	out    dx,eax
  415c97:	mov    bl,0x7a
  415c99:	lds    edi,FWORD PTR [ecx+0x9]
  415c9c:	pop    ebx
  415c9d:	mov    cl,0x6a
  415c9f:	and    al,0x87
  415ca1:	or     edx,eax
  415ca3:	mov    ah,0x4b
  415ca5:	or     eax,0x4f7e5afa
  415caa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cab:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cad:	out    0x70,eax
  415caf:	and    ah,dh
  415cb1:	loop   0x415cd6
  415cb3:	aad    0x1e
  415cb5:	daa    
  415cb6:	inc    ebp
  415cb7:	mov    bh,0xbc
  415cb9:	or     BYTE PTR [esi+ecx*2],ah
  415cbc:	popf   
  415cbd:	loopne 0x415cc1
  415cbf:	xchg   edi,eax
  415cc0:	mov    esi,0x8d8b39f4
  415cc5:	add    ch,BYTE PTR [edi+0x5023101d]
  415ccb:	or     edi,DWORD PTR [esi+0x14]
  415cce:	popa   
  415ccf:	inc    eax
  415cd0:	gs je  0x415c76
  415cd3:	pop    edi
  415cd4:	rol    DWORD PTR [esi+0x1467d3af],0x25
  415cdb:	mov    ebx,0xf43391c7
  415ce0:	aam    0x82
  415ce2:	xor    ch,BYTE PTR [edx]
  415ce4:	outs   dx,DWORD PTR ds:[esi]
  415ce5:	sub    ecx,DWORD PTR [edi]
  415ce7:	icebp  
  415ce8:	jmp    0x415cd1
  415cea:	xlat   BYTE PTR ds:[ebx]
  415ceb:	jp     0x415d56
  415ced:	adc    edx,DWORD PTR gs:[ebx+0x16381799]
  415cf4:	fsub   st,st(0)
  415cf6:	adc    BYTE PTR [edi-0x1f57388c],ah
  415cfc:	xor    ecx,DWORD PTR ds:0x4a593831
  415d02:	shr    BYTE PTR [ebp+edx*1-0x2f07aa4b],1
  415d09:	sahf   
  415d0a:	add    eax,0x6c88649a
  415d0f:	das    
  415d10:	ret    0xa6ff
  415d13:	push   cs
  415d14:	sbb    eax,0x2e7c271
  415d19:	pushf  
  415d1a:	and    BYTE PTR [ecx+0x31],ch
  415d1d:	mov    ds:0xf07baa4a,al
  415d22:	pop    esi
  415d23:	push   eax
  415d24:	jae    0x415d9a
  415d26:	mov    dl,0x30
  415d28:	add    eax,0xafec7299
  415d2d:	jp     0x415ccb
  415d2f:	test   DWORD PTR [esi+0x2a],edi
  415d32:	out    0x2c,al
  415d34:	dec    eax
  415d35:	add    BYTE PTR [esi],bh
  415d37:	dec    edi
  415d38:	inc    edx
  415d39:	mov    ebx,0xdc3dac2a
  415d3e:	push   ds
  415d3f:	imul   ebx,esp,0xffffffc2
  415d42:	xlat   BYTE PTR ds:[ebx]
  415d43:	xchg   ebx,eax
  415d44:	mov    BYTE PTR ds:0x9fbd78ef,dh
  415d4a:	leave  
  415d4b:	popf   
  415d4c:	fistp  QWORD PTR [ecx]
  415d4e:	push   eax
  415d4f:	call   0x54870e7e
  415d54:	pop    edx
  415d55:	sub    BYTE PTR [edi-0x6],bl
  415d58:	sbb    al,0xea
  415d5a:	jp     0x415d83
  415d5c:	push   DWORD PTR [edi]
  415d5e:	jmp    0x415ddd
  415d60:	mov    esp,0x93ab7a9d
  415d65:	pop    ecx
  415d66:	out    dx,al
  415d67:	mov    ch,0x9f
  415d69:	cmp    eax,0xe15ae31a
  415d6e:	loop   0x415de9
  415d70:	xor    eax,0x7c419d82
  415d75:	fidivr DWORD PTR [ecx-0x26]
  415d78:	adc    BYTE PTR [ebx+0x189efea9],ah
  415d7e:	xor    al,0x8e
  415d80:	or     bh,BYTE PTR [ecx-0x75]
  415d83:	dec    esp
  415d84:	jo     0x415df0
  415d86:	push   edi
  415d87:	xlat   BYTE PTR ds:[ebx]
  415d88:	jno    0x415d2b
  415d8a:	scas   eax,DWORD PTR es:[edi]
  415d8b:	push   0x51e766dc
  415d90:	pop    ebx
  415d91:	add    cl,bl
  415d93:	in     al,0x55
  415d95:	sbb    bh,BYTE PTR [ebp-0xa4a3fdd]
  415d9b:	inc    ecx
  415d9c:	adc    eax,0x17256023
  415da1:	mov    edx,DWORD PTR [esi-0x18a5c564]
  415da7:	scas   al,BYTE PTR es:[edi]
  415da8:	mov    dl,0x43
  415daa:	adc    ah,cl
  415dac:	push   es
  415dad:	pop    edx
  415dae:	mov    bl,0xa2
  415db0:	mov    ds:0x5732679c,al
  415db5:	lods   al,BYTE PTR ds:[esi]
  415db6:	pop    es
  415db7:	out    dx,eax
  415db8:	push   es
  415db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dba:	xchg   ecx,eax
  415dbb:	mov    esi,0x4d7cc8ae
  415dc0:	jo     0x415ddf
  415dc2:	gs int 0xa7
  415dc5:	ret    0xd32c
  415dc8:	sub    BYTE PTR [esi+0x57],ah
  415dcb:	mov    bh,dh
  415dcd:	test   al,0x1b
  415dcf:	lock mov fs,WORD PTR [eax-0x82e38e7]
  415dd6:	dec    ebp
  415dd7:	add    DWORD PTR [edi],0x4d
  415dda:	cmp    eax,0x23e0b5e1
  415ddf:	retf   
  415de0:	nop
  415de1:	inc    edi
  415de2:	call   0xd4d18d51
  415de7:	and    ch,BYTE PTR [esi]
  415de9:	imul   ecx,ecx,0x6d6b7b90
  415def:	mov    ecx,0xb2858cb8
  415df4:	ss or  esi,eax
  415df7:	jns    0x415e22
  415df9:	js     0x415e78
  415dfb:	add    BYTE PTR [esi+ecx*4],0x4f
  415dff:	ficom  WORD PTR [edx]
  415e01:	mov    cl,0xa6
  415e03:	lock mov eax,0x7a06391f
  415e09:	mov    WORD PTR [edi],cs
  415e0b:	fucomi st,st(6)
  415e0d:	inc    ecx
  415e0e:	sbb    eax,0xe9d0f71d
  415e13:	pop    edx
  415e14:	out    dx,eax
  415e15:	xchg   esi,eax
  415e16:	fbstp  TBYTE PTR [edi+0x63]
  415e19:	cdq    
  415e1a:	dec    edx
  415e1b:	pop    es
  415e1c:	cmp    DWORD PTR [edx-0x56],eax
  415e1f:	mov    ch,ch
  415e21:	shl    BYTE PTR [edi+0x77],0x93
  415e25:	push   ebp
  415e26:	push   cs
  415e27:	shl    BYTE PTR [eax-0x4],1
  415e2a:	int    0xd1
  415e2c:	adc    cl,BYTE PTR [eax-0x6]
  415e2f:	pop    esp
  415e30:	retf   
  415e31:	fdivr  st,st(0)
  415e33:	sub    esi,DWORD PTR [edi]
  415e35:	inc    ecx
  415e36:	and    edx,DWORD PTR [esp+eax*1-0x3290624c]
  415e3d:	and    dh,BYTE PTR [eax]
  415e3f:	xor    dl,BYTE PTR [esi-0x25]
  415e42:	inc    DWORD PTR [esp+edx*1+0x16]
  415e46:	call   0x4ec2fd51
  415e4b:	mov    edi,esi
  415e4d:	arpl   WORD PTR [eax],sp
  415e4f:	ja     0x415e0a
  415e51:	imul   esi,DWORD PTR [edx],0x6e
  415e54:	ja     0x415ec9
  415e56:	jg     0x415e28
  415e58:	sub    eax,0x5294b879
  415e5d:	mov    ds:0xb6d6d180,eax
  415e62:	and    DWORD PTR [edi],edx
  415e64:	cld    
  415e65:	cli    
  415e66:	push   ds
  415e67:	jl     0x415e8a
  415e69:	lods   eax,DWORD PTR ds:[esi]
  415e6a:	fld    TBYTE PTR [edi-0x61]
  415e6d:	or     BYTE PTR [ebx-0x29],cl
  415e70:	dec    esp
  415e71:	jmp    0x415ea0
  415e73:	(bad)  
  415e74:	jecxz  0x415e6b
  415e76:	fcom   DWORD PTR [esi*2+0x42eeeeb8]
  415e7d:	jl     0x415e83
  415e7f:	sub    BYTE PTR cs:[esi-0x3663c960],al
  415e86:	lods   eax,DWORD PTR ds:[esi]
  415e87:	ret    
  415e88:	jg     0x415e3b
  415e8a:	and    ebp,DWORD PTR ds:0x6fee92c6
  415e90:	neg    BYTE PTR [ebx-0x60]
  415e93:	jl     0x415e5f
  415e95:	addr16 jmp 0xc4fc:0xdac2ceee
  415e9d:	in     al,0xbb
  415e9f:	or     ebp,ecx
  415ea1:	add    eax,0x325c3811
  415ea6:	mov    es,WORD PTR ds:[esi+0x1aa74d9]
  415ead:	pop    esi
  415eae:	shl    BYTE PTR [ebx+0x6a],1
  415eb1:	sbb    al,BYTE PTR [edi-0x2f0615ff]
  415eb7:	ins    BYTE PTR es:[edi],dx
  415eb8:	in     eax,0x51
  415eba:	mov    esp,0x89f07e1a
  415ebf:	dec    ebx
  415ec0:	push   ecx
  415ec1:	cmp    eax,DWORD PTR [ecx+0x3f]
  415ec4:	lds    edx,FWORD PTR [edx+0x15]
  415ec7:	outs   dx,DWORD PTR ds:[esi]
  415ec8:	mov    BYTE PTR ds:0x30e9ef83,dh
  415ece:	(bad)  
  415ecf:	xchg   esi,eax
  415ed0:	adc    al,0x93
  415ed2:	lds    ecx,FWORD PTR [esi-0xf8f3114]
  415ed8:	sahf   
  415ed9:	(bad)  
  415eda:	shl    BYTE PTR [ebx+0x4],cl
  415edd:	cmp    DWORD PTR [edi+eax*2+0x2b],esi
  415ee1:	sbb    al,0x93
  415ee3:	xor    BYTE PTR [ebp+0x3963f3e9],0xf4
  415eea:	cmc    
  415eeb:	jge    0x415eda
  415eed:	call   0xd7525e18
  415ef2:	push   esp
  415ef3:	fst    DWORD PTR [ebp-0x6]
  415ef6:	aas    
  415ef7:	in     al,dx
  415ef8:	push   ss
  415ef9:	sub    BYTE PTR ds:0x3c9ec53,0x43
  415f00:	add    ebx,DWORD PTR [esi-0x48569aa6]
  415f06:	pop    es
  415f07:	xchg   ecx,eax
  415f08:	inc    esi
  415f09:	mov    dh,0x72
  415f0b:	mov    eax,ds:0x9ac963f3
  415f10:	scas   eax,DWORD PTR es:[edi]
  415f11:	cmp    BYTE PTR [ebx+eax*4-0x13c096de],dl
  415f18:	aas    
  415f19:	cld    
  415f1a:	clc    
  415f1b:	in     eax,dx
  415f1c:	mov    ecx,0xd619b0e0
  415f21:	cmp    dl,bh
  415f23:	in     al,0x72
  415f25:	dec    esp
  415f26:	jl     0x415f08
  415f28:	sbb    eax,0x47
  415f2b:	lods   eax,DWORD PTR ds:[esi]
  415f2c:	out    dx,eax
  415f2d:	or     al,0x95
  415f2f:	push   DWORD PTR [ebx+0x5a]
  415f32:	or     BYTE PTR [esi-0x3b],0x54
  415f36:	test   al,0xa1
  415f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f39:	mov    bh,0x7
  415f3b:	addr16 fwait
  415f3d:	jmp    0x8dbe595f
  415f42:	adc    DWORD PTR [ebx-0x68],0x33f29816
  415f49:	aaa    
  415f4a:	lahf   
  415f4b:	test   BYTE PTR [esi-0x2e505062],ch
  415f51:	in     al,dx
  415f52:	mov    ?,WORD PTR [ecx]
  415f54:	add    BYTE PTR [edx+0x68],al
  415f57:	popa   
  415f58:	sub    BYTE PTR [edx+edx*2],0xa3
  415f5c:	test   al,0x3c
  415f5e:	or     BYTE PTR [esi+eiz*8+0x70ba7b2e],dh
  415f65:	mov    ch,BYTE PTR [ecx+0x6b73042b]
  415f6b:	jp     0x415fa1
  415f6d:	int    0x4e
  415f6f:	mov    WORD PTR [esi],?
  415f71:	xchg   edi,eax
  415f72:	(bad)  
  415f73:	jmp    DWORD PTR [ebx]
  415f75:	lea    ebp,[edi]
  415f77:	push   esp
  415f78:	inc    edi
  415f79:	stos   DWORD PTR es:[edi],eax
  415f7a:	push   edx
  415f7b:	pop    ss
  415f7c:	sub    cl,BYTE PTR [esi+eax*4+0x10]
  415f80:	sbb    eax,DWORD PTR [ebx]
  415f82:	sbb    ecx,DWORD PTR [esi]
  415f84:	cdq    
  415f85:	mov    al,0x47
  415f87:	int    0x8e
  415f89:	xchg   BYTE PTR [edx+edx*1],al
  415f8c:	pop    ds
  415f8d:	pop    ds
  415f8e:	test   DWORD PTR [esi+0x780ab510],ecx
  415f94:	mov    esp,0x8667ba9f
  415f99:	popf   
  415f9a:	or     DWORD PTR [eax+ecx*4],eax
  415f9d:	popf   
  415f9e:	dec    ebx
  415f9f:	pop    es
  415fa0:	cwde   
  415fa1:	mov    eax,0x216bbf5c
  415fa6:	xchg   edx,eax
  415fa7:	pop    ds
  415fa8:	frstor [esi-0x1]
  415fab:	xchg   ebp,eax
  415fac:	imul   esp,DWORD PTR [esi-0x3dd0ebb8],0x14b0f9eb
  415fb6:	pop    ds
  415fb7:	pop    esp
  415fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fb9:	call   0x8aa6c1ad
  415fbe:	xor    bh,al
  415fc0:	test   esi,esi
  415fc2:	mov    ss,esi
  415fc4:	sbb    esp,edx
  415fc6:	inc    edi
  415fc7:	(bad)  
  415fc8:	retf   0x9a5a
  415fcb:	lods   al,BYTE PTR ds:[esi]
  415fcc:	fist   WORD PTR [edx-0x46986157]
  415fd2:	lock fwait
  415fd4:	push   eax
  415fd5:	adc    edx,DWORD PTR [esi+0x80561fa]
  415fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fdc:	mov    esp,ebx
  415fde:	and    DWORD PTR [edi],edx
  415fe0:	mov    eax,DWORD PTR [edx-0x327657b6]
  415fe6:	or     ebp,DWORD PTR [ecx+0x5be4ffe3]
  415fec:	push   cs
  415fed:	dec    edi
  415fee:	shl    DWORD PTR [edi],0x10
  415ff1:	into   
  415ff2:	cwde   
  415ff3:	js     0x416033
  415ff5:	xchg   ecx,eax
  415ff6:	or     DWORD PTR [eax+0x6e4bec98],edx
  415ffc:	(bad)  
  415ffd:	or     edx,DWORD PTR [esi+esi*8-0x51]
  416001:	mov    cl,0x3e
  416003:	je     0x41607a
  416005:	jle    0x41601e
  416007:	stc    
  416008:	or     al,0x98
  41600a:	sbb    BYTE PTR [ecx+0x32f1a671],cl
  416010:	loop   0x415fae
  416012:	sar    BYTE PTR [ecx],1
  416014:	fs pushf 
  416016:	es ins BYTE PTR es:[edi],dx
  416018:	call   DWORD PTR [ecx+ecx*4]
  41601b:	sahf   
  41601c:	and    eax,0xced0a799
  416021:	es nop
  416023:	cli    
  416024:	ds xchg ebx,eax
  416026:	dec    esp
  416027:	mov    edx,0x4a5b2844
  41602c:	pop    ebp
  41602d:	push   ebx
  41602e:	adc    al,0xf7
  416030:	sahf   
  416031:	adc    DWORD PTR [edi-0x4a971ac0],ecx
  416037:	inc    edi
  416038:	cdq    
  416039:	xor    dl,cl
  41603b:	outs   dx,BYTE PTR ds:[esi]
  41603c:	daa    
  41603d:	cmc    
  41603e:	add    bh,BYTE PTR [ecx-0x3]
  416041:	retf   0x1c02
  416044:	sub    dl,BYTE PTR [ebx]
  416046:	fxam   
  416048:	jecxz  0x41606e
  41604a:	sub    eax,0x563a6133
  41604f:	pop    esp
  416050:	fwait
  416051:	add    eax,0xf38cace6
  416056:	inc    ebx
  416057:	pop    ebx
  416058:	pop    ds
  416059:	pop    edi
  41605a:	inc    ecx
  41605b:	pop    ds
  41605c:	push   es
  41605d:	dec    ecx
  41605e:	mov    BYTE PTR [ebp-0x2],bh
  416061:	pop    edx
  416062:	cwde   
  416063:	xor    cl,BYTE PTR [ebx+0x6bb2ee95]
  416069:	adc    ebx,0xffffffd2
  41606c:	push   edx
  41606d:	inc    eax
  41606e:	and    edx,DWORD PTR [edx]
  416070:	inc    edi
  416071:	(bad)  
  416072:	fbld   TBYTE PTR [ebx-0x44]
  416075:	sbb    ch,BYTE PTR [ebx+0x1483dd60]
  41607b:	sub    al,0xa5
  41607d:	ins    BYTE PTR es:[edi],dx
  41607e:	pop    ecx
  41607f:	and    cl,BYTE PTR [eax-0x6c8dc6a]
  416085:	mov    edx,0xa21e05f1
  41608a:	lods   al,BYTE PTR ds:[esi]
  41608b:	mov    al,0x2b
  41608d:	push   0xffffffba
  41608f:	or     al,0xdf
  416091:	dec    ebx
  416092:	arpl   WORD PTR [esi+esi*2-0x61],di
  416096:	xchg   ebx,esp
  416098:	out    0xd7,al
  41609a:	inc    edx
  41609b:	xor    DWORD PTR ss:[ebx+0x49a9c3ff],esi
  4160a2:	inc    ecx
  4160a3:	adc    DWORD PTR [edi+0x15581d07],ebx
  4160a9:	mov    ecx,0x695a3a0
  4160ae:	jns    0x416060
  4160b0:	dec    edx
  4160b1:	sub    al,0x2
  4160b3:	add    al,0x25
  4160b5:	sbb    al,0x58
  4160b7:	rcl    esp,1
  4160b9:	jp     0x41612f
  4160bb:	jbe    0x416120
  4160bd:	pop    ds
  4160be:	int3   
  4160bf:	mov    DWORD PTR [eax+0x44bdd232],eax
  4160c5:	and    BYTE PTR [edi],cl
  4160c7:	mov    ch,0x2b
  4160c9:	jge    0x41609e
  4160cb:	stos   BYTE PTR es:[edi],al
  4160cc:	xchg   ecx,eax
  4160cd:	sbb    DWORD PTR [ebp+0x4],0x975ce505
  4160d4:	mov    ds:0x34bb43b3,al
  4160d9:	cld    
  4160da:	mov    ds:0x96093c9a,eax
  4160df:	fidiv  DWORD PTR [ecx]
  4160e1:	cmc    
  4160e2:	adc    bh,bh
  4160e4:	lea    esp,[edx]
  4160e6:	and    ch,BYTE PTR [esi]
  4160e8:	xor    DWORD PTR ss:[ebx-0x2bab632d],eax
  4160ef:	mov    bh,0x5c
  4160f1:	idiv   ebx
  4160f3:	push   edi
  4160f4:	xchg   ah,ah
  4160f6:	and    dl,dl
  4160f8:	sbb    esi,edx
  4160fa:	mov    esp,DWORD PTR [ebx]
  4160fc:	les    ecx,FWORD PTR [eax]
  4160fe:	add    al,0xac
  416100:	and    bl,ch
  416102:	mov    dh,0xf
  416104:	mov    ah,0x85
  416106:	(bad)  
  416107:	(bad)  
  416109:	mov    eax,ds:0xc91a9e67
  41610e:	push   ecx
  416110:	lahf   
  416111:	out    dx,al
  416112:	cli    
  416113:	call   0x19b9:0x30a7eba6
  41611a:	out    0x95,al
  41611c:	or     ebp,DWORD PTR [esi+ecx*2]
  41611f:	inc    ebp
  416120:	jle    0x4160b5
  416122:	bound  edi,QWORD PTR cs:[ecx]
  416125:	mov    ecx,0xa728f2e9
  41612a:	sub    BYTE PTR [ebx],al
  41612c:	loope  0x416168
  41612e:	jb     0x416141
  416130:	mov    ds:0x3539d72e,al
  416135:	inc    edi
  416136:	xor    BYTE PTR [ebp+0x1a],ch
  416139:	shr    DWORD PTR [ebx+0x3f],cl
  41613c:	add    al,0x23
  41613e:	xchg   esp,eax
  41613f:	adc    BYTE PTR [ecx],ah
  416141:	(bad)  
  416142:	pop    ds
  416143:	aad    0xb5
  416145:	or     eax,0xf42e4a2c
  41614a:	sub    BYTE PTR [eax+0x1b50e331],dh
  416150:	and    eax,0xef569542
  416155:	les    ebp,FWORD PTR [ebx+0x49932bdf]
  41615b:	adc    ebp,esp
  41615d:	retf   0xd356
  416160:	js     0x4161af
  416162:	sahf   
  416163:	xlat   BYTE PTR ds:[ebx]
  416164:	mov    al,0x56
  416166:	test   al,0xa8
  416168:	repnz cmp esi,edi
  41616b:	jne    0x4161ba
  41616d:	or     ebp,edx
  41616f:	add    DWORD PTR fs:0x545f663a,ebx
  416176:	push   ebx
  416177:	mov    ch,0x24
  416179:	hlt    
  41617a:	scas   al,BYTE PTR es:[edi]
  41617b:	push   ebp
  41617c:	pop    esp
  41617d:	or     DWORD PTR [edx],ebx
  41617f:	cmp    al,0xfc
  416181:	or     al,0x39
  416183:	shl    edx,cl
  416185:	mov    esi,0xd3c2b82d
  41618a:	or     bl,ch
  41618c:	ja     0x41614f
  41618e:	frstor [eax]
  416190:	jno    0x4161de
  416192:	and    al,0xc2
  416194:	stos   BYTE PTR es:[edi],al
  416195:	int3   
  416196:	cmp    DWORD PTR [eax-0xbc2e9e5],eax
  41619c:	mov    al,ds:0x96e853ea
  4161a1:	out    dx,eax
  4161a2:	sbb    edx,0x33
  4161a5:	dec    ebx
  4161a6:	imul   esi,DWORD PTR [edi+0x79b655db],0xba79ed14
  4161b0:	loope  0x416159
  4161b2:	jg     0x416229
  4161b4:	jmp    0x494b4d11
  4161b9:	lahf   
  4161ba:	adc    ch,BYTE PTR [edx-0x7c]
  4161bd:	ds in  eax,dx
  4161bf:	mov    edx,0x4ece80b7
  4161c4:	not    edi
  4161c6:	sbb    ebp,DWORD PTR [edi+ebx*4-0xce18c87]
  4161cd:	shl    DWORD PTR [esi-0x3a],0x9e
  4161d1:	lahf   
  4161d2:	lock mov DWORD PTR [ebp-0x184d7321],ebx
  4161d9:	mov    DWORD PTR [edx+0x2a1dae28],edi
  4161df:	mov    bl,BYTE PTR [eax+0x8]
  4161e2:	cwde   
  4161e3:	mov    cs,WORD PTR [edi+esi*2]
  4161e6:	xor    BYTE PTR [edx],bl
  4161e8:	sub    dh,BYTE PTR [esi-0x15a070d6]
  4161ee:	and    BYTE PTR [esi-0x71],bh
  4161f1:	add    DWORD PTR [ebp+eax*4+0x7ac3d30c],esp
  4161f8:	repz test DWORD PTR [esi+eiz*1],0x966a11d2
  416200:	jp     0x416209
  416202:	scas   al,BYTE PTR es:[edi]
  416203:	sbb    DWORD PTR [ebx+0x5f991e13],0xffffffa2
  41620a:	add    ebp,edx
  41620c:	xor    ecx,esi
  41620e:	fs push esp
  416210:	data16 jp 0x416228
  416213:	mov    bl,0x6e
  416215:	sub    cl,dl
  416217:	pop    edx
  416218:	fs std 
  41621a:	push   edx
  41621b:	and    edi,0xffffff9b
  41621e:	pop    esp
  41621f:	jae    0x4161b1
  416221:	imul   ebp,DWORD PTR [edi],0x70
  416224:	push   esp
  416225:	scas   al,BYTE PTR es:[edi]
  416226:	dec    edi
  416227:	mov    esp,0x1d2559ca
  41622c:	add    DWORD PTR [ebx],ebp
  41622e:	fwait
  41622f:	loopne 0x416272
  416231:	retf   0xf6d8
  416234:	mov    al,0xfe
  416236:	das    
  416237:	test   eax,0x50c19d75
  41623c:	test   eax,0xdbed1e5d
  416241:	mov    WORD PTR [esi-0x66],es
  416244:	(bad)  
  416245:	(bad)  
  416246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416247:	sti    
  416248:	je     0x4161db
  41624a:	push   es
  41624b:	mov    dh,0x1a
  41624d:	jp     0x4161eb
  41624f:	pop    es
  416250:	lods   al,BYTE PTR ds:[esi]
  416251:	jo     0x416201
  416253:	pop    ss
  416254:	add    al,0xfe
  416256:	xor    BYTE PTR [eax-0x72],bh
  416259:	popa   
  41625a:	push   edx
  41625b:	fisub  WORD PTR [eax+0x1b]
  41625e:	je     0x4162ad
  416260:	jne    0x416297
  416262:	or     BYTE PTR [ebx+0x1b358706],dl
  416268:	cmp    ebp,esp
  41626a:	lods   eax,DWORD PTR ds:[esi]
  41626b:	aad    0x9a
  41626d:	sub    eax,0xefbae9c9
  416272:	es scas al,BYTE PTR es:[edi]
  416274:	(bad)  
  416275:	jmp    0x49fe6d33
  41627a:	stos   BYTE PTR es:[edi],al
  41627b:	adc    eax,0xf665aa57
  416280:	cdq    
  416281:	dec    edx
  416282:	mov    dh,dh
  416284:	ss stos DWORD PTR es:[edi],eax
  416286:	mov    eax,0x74fe8bb4
  41628b:	dec    ebx
  41628c:	int    0x3a
  41628e:	adc    BYTE PTR [esi+ebp*1],bh
  416291:	shl    BYTE PTR [ecx+0x1d],1
  416294:	jae    0x4162c4
  416296:	out    dx,eax
  416297:	jno    0x416265
  416299:	mov    ah,0x13
  41629b:	pop    ds
  41629c:	arpl   ax,si
  41629e:	cmp    DWORD PTR [ecx-0x7c],esi
  4162a1:	enter  0x19cd,0xc2
  4162a5:	or     eax,0x823ce475
  4162aa:	lahf   
  4162ab:	int    0x3
  4162ad:	retf   0x3f27
  4162b0:	leave  
  4162b1:	add    edx,0xffffffb2
  4162b4:	push   0xffffffb0
  4162b6:	sti    
  4162b7:	es data16 loop 0x41630e
  4162bb:	js     0x4162a3
  4162bd:	call   0xdfb4:0xe0a4332
  4162c4:	jbe    0x4162c1
  4162c6:	mov    ds:0x58d2a0a8,al
  4162cb:	cld    
  4162cc:	fwait
  4162cd:	repnz inc ecx
  4162cf:	push   ebx
  4162d0:	rol    BYTE PTR [ecx+0x453a2538],1
  4162d6:	push   eax
  4162d7:	icebp  
  4162d8:	add    al,0x45
  4162da:	xor    BYTE PTR [edi-0x5a50a9ce],bh
  4162e0:	sbb    ecx,edx
  4162e2:	pop    ds
  4162e3:	aad    0x8a
  4162e5:	test   eax,0x4cd92c2a
  4162ea:	adc    DWORD PTR [edi+0x54b3dd25],ecx
  4162f0:	jge    0x4162ba
  4162f2:	xor    eax,0xa2b3fa22
  4162f7:	inc    edi
  4162f8:	or     al,0x6d
  4162fa:	push   edi
  4162fb:	mov    esi,0x589568c5
  416300:	xchg   esi,ebx
  416302:	adc    ch,BYTE PTR [edx]
  416304:	sbb    eax,0x20cd4c4d
  416309:	dec    eax
  41630a:	cld    
  41630b:	adc    esi,esp
  41630d:	jns    0x4162fe
  41630f:	sbb    eax,0x2a93a947
  416314:	mov    edx,eax
  416316:	push   edx
  416317:	in     al,dx
  416318:	xchg   BYTE PTR [ebx+0x7f],dh
  41631b:	retf   
  41631c:	pop    esi
  41631d:	or     ecx,DWORD PTR [esi]
  41631f:	xchg   DWORD PTR ds:0x1f1d6049,edx
  416325:	iret   
  416326:	mov    ss,WORD PTR [ebp-0x6c6908d]
  41632c:	ds stc 
  41632e:	xchg   edi,eax
  41632f:	shl    DWORD PTR [ecx+0x2d844483],cl
  416335:	sbb    BYTE PTR [ebp+0x1e],dh
  416338:	dec    edx
  416339:	and    DWORD PTR [edx-0x5663dcb8],eax
  41633f:	pop    edx
  416340:	pop    ebx
  416341:	pop    ss
  416342:	test   DWORD PTR [ecx+0x3a],ecx
  416345:	call   0xc08a9a78
  41634a:	jmp    0xa0d4:0x3de74a00
  416351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416352:	imul   BYTE PTR [ebx+0x20]
  416355:	aaa    
  416356:	out    dx,eax
  416357:	test   al,0xee
  416359:	pushf  
  41635a:	jge    0x416383
  41635c:	add    DWORD PTR [ebx],esp
  41635e:	test   DWORD PTR ss:[esi],ebx
  416361:	dec    ecx
  416362:	xor    DWORD PTR [ecx+0x71e96257],esp
  416368:	dec    ecx
  416369:	mov    WORD PTR [ebp-0x1e],?
  41636c:	sub    DWORD PTR [edi],0xffffff9e
  41636f:	cdq    
  416370:	fcomip st,st(3)
  416372:	cmp    eax,0xfd2b8bb
  416377:	test   BYTE PTR [edi+0x55807a35],dl
  41637d:	mov    eax,0xe26918cb
  416382:	push   edi
  416383:	pop    esi
  416384:	jae    0x41637b
  416386:	jbe    0x4163ea
  416388:	in     al,0x2b
  41638a:	sub    al,0x43
  41638c:	mov    edi,0xbaa8210e
  416391:	in     al,dx
  416392:	jg     0x416341
  416394:	jae    0x416316
  416396:	lods   al,BYTE PTR ds:[esi]
  416397:	retf   
  416398:	cmp    BYTE PTR [ebx],0x96
  41639b:	imul   ecx,ecx,0x3d
  41639e:	mov    ah,0xa0
  4163a0:	xor    eax,0x92494df5
  4163a5:	test   BYTE PTR [edx+0x67a55df2],0x49
  4163ac:	pop    ebx
  4163ad:	or     DWORD PTR [ebp-0xaab8550],ecx
  4163b3:	adc    al,0xcd
  4163b5:	imul   ebp,DWORD PTR [edx],0x1bd37e4a
  4163bb:	push   ebp
  4163bc:	adc    DWORD PTR [edx+0x2d],eax
  4163bf:	sbb    eax,0xbadf6ce
  4163c4:	imul   eax,DWORD PTR [ebp-0x5c],0xffffffc9
  4163c8:	and    eax,0x24a5ad06
  4163cd:	jbe    0x4163dd
  4163cf:	xor    BYTE PTR [eax],al
  4163d1:	sub    cl,BYTE PTR [edx]
  4163d3:	xchg   ecx,eax
  4163d4:	jle    0x4163eb
  4163d6:	icebp  
  4163d7:	iret   
  4163d8:	add    DWORD PTR [edx],esp
  4163da:	inc    eax
  4163db:	and    al,0x37
  4163dd:	and    al,0x6d
  4163df:	ins    BYTE PTR es:[edi],dx
  4163e0:	fs icebp 
  4163e2:	xor    eax,0x69607426
  4163e7:	cmp    ebx,0x71
  4163ea:	add    DWORD PTR [esi+edx*1-0x1d2d63a9],ebp
  4163f1:	xchg   edi,eax
  4163f2:	das    
  4163f3:	jg     0x4163e0
  4163f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f6:	stos   DWORD PTR es:[edi],eax
  4163f7:	imul   ebx,DWORD PTR [esi],0x2b895fb9
  4163fd:	cmp    BYTE PTR [edi],0x32
  416400:	pop    eax
  416401:	clc    
  416402:	cdq    
  416403:	popa   
  416404:	push   0xb1285247
  416409:	into   
  41640a:	nop
  41640b:	mov    dh,0x4
  41640d:	inc    esi
  41640e:	in     eax,dx
  41640f:	adc    DWORD PTR [edi+0xa],ebp
  416412:	(bad)  
  416413:	fidivr WORD PTR [eax+edi*8-0x2b78c4c1]
  41641a:	xchg   cl,bl
  41641c:	call   0xd84f:0xc587efc3
  416423:	push   ss
  416424:	pop    ebp
  416425:	(bad)  
  416427:	pop    esp
  416428:	imul   eax,DWORD PTR [eax+0xa],0xffffffb7
  41642c:	aad    0xa3
  41642e:	xor    eax,0x8687ea98
  416433:	dec    ebx
  416434:	jg     0x4163e9
  416436:	mov    eax,0x699680e2
  41643b:	pop    ebp
  41643c:	js     0x41642b
  41643e:	mov    dh,0x95
  416440:	push   ds
  416441:	imul   eax,DWORD PTR [esi+edx*8-0x4fa008e3],0x49
  416449:	ss jns 0x4163d2
  41644c:	gs es jo 0x416438
  416450:	sub    eax,0xfd31bfef
  416455:	pop    ss
  416456:	mov    eax,0x12a0b1db
  41645b:	iret   
  41645c:	push   ebx
  41645d:	add    eax,0x61
  416460:	je     0x416445
  416462:	rcl    BYTE PTR [esi],1
  416464:	push   esi
  416465:	pop    ebx
  416466:	icebp  
  416467:	test   dh,ch
  416469:	mov    bl,0x1f
  41646b:	loopne 0x4164cd
  41646d:	or     ebx,DWORD PTR [edx]
  41646f:	ret    
  416470:	push   edi
  416471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416472:	je     0x41645b
  416474:	pop    ss
  416475:	addr16 cmc 
  416477:	or     dl,dl
  416479:	sbb    esi,DWORD PTR [ecx+0x249a2e4a]
  41647f:	(bad)  
  416480:	in     eax,dx
  416481:	xchg   BYTE PTR [esi-0x63587697],cl
  416487:	es mov bl,0x92
  41648a:	push   0x95c3518c
  41648f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416490:	mov    ecx,?
  416492:	xor    BYTE PTR [esi],bl
  416494:	mov    ch,0xfb
  416496:	cmp    esi,DWORD PTR [esi-0x34]
  416499:	adc    ch,dl
  41649b:	adc    eax,0x785d75c7
  4164a0:	ja     0x416423
  4164a2:	xor    bl,BYTE PTR [edx-0x532d9c70]
  4164a8:	lods   al,BYTE PTR ds:[esi]
  4164a9:	das    
  4164aa:	lea    edi,[edx+0x61]
  4164ad:	stos   DWORD PTR es:[edi],eax
  4164ae:	push   0xffffffc0
  4164b0:	jle    0x416508
  4164b2:	mov    ds:0x883da89e,al
  4164b7:	iret   
  4164b8:	ins    BYTE PTR es:[edi],dx
  4164b9:	ins    BYTE PTR es:[edi],dx
  4164ba:	pop    ecx
  4164bb:	test   BYTE PTR [edi+esi*8],cl
  4164be:	pushf  
  4164bf:	pop    edx
  4164c0:	lods   al,BYTE PTR ds:[esi]
  4164c1:	dec    ebx
  4164c2:	xchg   ebp,eax
  4164c3:	js     0x41652c
  4164c5:	out    dx,eax
  4164c6:	add    DWORD PTR [ebp+0x69a3605],0xc
  4164cd:	adc    al,dh
  4164cf:	daa    
  4164d0:	cmp    esi,DWORD PTR ds:0x953a4b78
  4164d6:	pop    ebx
  4164d7:	in     al,dx
  4164d8:	jmp    0x41647b
  4164da:	out    0x4d,al
  4164dc:	sbb    ah,0x8c
  4164df:	xor    DWORD PTR [edx+0x6f],0xffffffd4
  4164e3:	and    eax,0x493fc1c7
  4164e8:	push   edi
  4164e9:	push   ebx
  4164ea:	ins    DWORD PTR es:[edi],dx
  4164eb:	cwde   
  4164ec:	cs adc al,0x63
  4164ef:	arpl   WORD PTR [esi],bp
  4164f1:	(bad)  
  4164f3:	or     bh,BYTE PTR [esi]
  4164f5:	cmc    
  4164f6:	sbb    esi,DWORD PTR ds:0xb543cd87
  4164fc:	scas   al,BYTE PTR es:[edi]
  4164fd:	cli    
  4164fe:	pop    esp
  4164ff:	rol    DWORD PTR [edi-0x3ea668f3],1
  416505:	mov    eax,ds:0x320e59ee
  41650a:	repz jns 0x41654f
  41650d:	sbb    DWORD PTR ds:0x6d64b37a,0x1a3745f5
  416517:	mov    dl,0xd8
  416519:	mov    dh,0xba
  41651b:	push   eax
  41651c:	cwde   
  41651d:	mov    dl,0x48
  41651f:	inc    esp
  416520:	ret    0x7359
  416523:	cmc    
  416524:	out    dx,al
  416525:	addr16 out 0x9f,eax
  416528:	mov    ds:0x67b6e084,eax
  41652d:	out    dx,al
  41652e:	add    al,BYTE PTR [eax+0x4d]
  416531:	int    0x7d
  416533:	push   esi
  416534:	inc    esi
  416535:	cli    
  416536:	adc    ebp,DWORD PTR [ebx+0x7b]
  416539:	retf   0x9ee
  41653c:	push   ss
  41653d:	div    BYTE PTR fs:[esi+esi*4-0x1df72c73]
  416545:	pop    edx
  416546:	aam    0x5f
  416548:	bound  ebp,QWORD PTR ds:0x93070b08
  41654e:	or     cl,al
  416550:	add    ah,ch
  416552:	sub    ch,BYTE PTR [ebx-0x18]
  416555:	sbb    BYTE PTR [ecx],ch
  416557:	(bad)  
  416558:	mov    esp,0xc966d2a
  41655d:	and    dh,0x2b
  416560:	sub    eax,0x9204d43e
  416565:	in     eax,dx
  416566:	jo     0x4164f8
  416568:	dec    ecx
  416569:	cmc    
  41656a:	dec    ebx
  41656b:	retf   0x3010
  41656e:	fdiv   DWORD PTR [eax-0x42]
  416571:	rcl    esp,0x8
  416574:	sbb    dh,al
  416576:	xlat   BYTE PTR ds:[ebx]
  416577:	xor    BYTE PTR [esi+0x26],al
  41657a:	xchg   edi,eax
  41657b:	cwde   
  41657c:	sti    
  41657d:	in     al,dx
  41657e:	pop    esi
  41657f:	dec    ecx
  416580:	and    eax,0x7dc20c95
  416585:	(bad)  
  416586:	mov    eax,ds:0x8d05fa7a
  41658b:	(bad)  
  41658c:	xchg   esp,eax
  41658d:	pop    ds
  41658e:	popf   
  41658f:	sub    bl,BYTE PTR [esi-0x49]
  416592:	bound  ecx,QWORD PTR [ecx-0x70047784]
  416598:	fxch   st(4)
  41659a:	stos   DWORD PTR es:[edi],eax
  41659b:	fs and al,0x56
  41659e:	nop
  41659f:	in     eax,dx
  4165a0:	jmp    0xdd9a:0xafe79328
  4165a7:	popf   
  4165a8:	fs mov bh,0xcb
  4165ab:	push   ss
  4165ac:	pop    DWORD PTR [ebx-0x7a]
  4165af:	and    DWORD PTR [ebx],eax
  4165b1:	mov    bh,0xc6
  4165b3:	cli    
  4165b4:	leave  
  4165b5:	gs dec edi
  4165b7:	inc    ecx
  4165b8:	test   al,0x5d
  4165ba:	sahf   
  4165bb:	mov    DWORD PTR ds:0x6fbc6770,ebx
  4165c1:	cmp    al,0x36
  4165c3:	mov    edx,0x723edc0a
  4165c8:	xchg   edx,eax
  4165c9:	repz cwde 
  4165cb:	xor    eax,0x84ff484e
  4165d0:	mov    ds:0xb5d94423,al
  4165d5:	jo     0x416563
  4165d7:	outs   dx,BYTE PTR ds:[esi]
  4165d8:	add    eax,0x79ecdba8
  4165dd:	and    bl,al
  4165df:	push   cs
  4165e0:	js     0x416625
  4165e2:	mov    ds:0x4139aceb,eax
  4165e7:	add    BYTE PTR [edx+ecx*2],dh
  4165ea:	mov    ds:0x97c6b5a,eax
  4165ef:	sahf   
  4165f0:	ds add eax,0x38257925
  4165f6:	cli    
  4165f7:	and    eax,0xad95742f
  4165fc:	xchg   edx,eax
  4165fd:	inc    edx
  4165fe:	jne    0x416638
  416600:	dec    ecx
  416601:	adc    eax,0x5454e848
  416606:	jmp    0x31472c27
  41660b:	or     dl,BYTE PTR [ebx+0x17]
  41660e:	enter  0xabed,0x1c
  416612:	imul   eax,DWORD PTR ds:0xf29d5a18,0xffffffc6
  416619:	(bad)  [ebx-0x3d]
  41661c:	push   ebp
  41661d:	mov    ah,0xbb
  41661f:	cmp    BYTE PTR cs:[esi],ah
  416622:	scas   al,BYTE PTR es:[edi]
  416623:	mov    cl,0xbf
  416625:	cmc    
  416626:	lea    esp,[esi]
  416628:	adc    ebp,ebp
  41662a:	mov    DWORD PTR [ebp+0x5a],esi
  41662d:	ror    edx,0xc7
  416630:	add    DWORD PTR [esi],edi
  416632:	xor    BYTE PTR ss:[eax+0x3fa8d769],al
  416639:	out    dx,eax
  41663a:	sbb    eax,0x9b961bf1
  41663f:	lock or eax,0xd71e55d4
  416645:	adc    cl,dl
  416647:	mov    al,0x7e
  416649:	or     al,0x1
  41664b:	outs   dx,BYTE PTR ds:[esi]
  41664c:	cmp    eax,0x9d90a343
  416651:	aam    0x75
  416653:	rcr    BYTE PTR [ecx-0x189376fc],0x18
  41665a:	jmp    0x4165fe
  41665c:	mov    esp,ss
  41665e:	test   DWORD PTR [ebx-0x5d],eax
  416661:	dec    edx
  416662:	add    cl,BYTE PTR [eax+0x66]
  416665:	cmp    edi,DWORD PTR es:[ebp-0x4a]
  416669:	add    eax,0xe781337e
  41666e:	leave  
  41666f:	out    dx,eax
  416670:	in     al,dx
  416671:	xchg   esp,eax
  416672:	push   ds
  416673:	sub    al,0xff
  416675:	mov    eax,ds:0xdc2b59d4
  41667a:	fisub  DWORD PTR [ecx-0x23]
  41667d:	or     al,0x80
  41667f:	icebp  
  416680:	rcr    DWORD PTR [ebp-0x78a1a74c],0xe8
  416687:	jle    0x4166db
  416689:	jo     0x41663b
  41668b:	popf   
  41668c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41668d:	and    BYTE PTR [edi],ah
  41668f:	jl     0x4166bb
  416691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416692:	data16 cmp bl,BYTE PTR [esi-0xb]
  416696:	ja     0x4166f5
  416698:	and    eax,0x674b49c3
  41669d:	and    ebx,DWORD PTR [ecx]
  41669f:	nop
  4166a0:	jmp    0x58e17357
  4166a5:	push   edx
  4166a6:	shl    DWORD PTR [edi],cl
  4166a8:	xlat   BYTE PTR ds:[ebx]
  4166a9:	fs mov bh,0x1c
  4166ac:	ds jg  0x416697
  4166af:	sar    DWORD PTR [esi],0xb3
  4166b2:	mov    ds:0xc1da1724,eax
  4166b7:	mov    al,ds:0x42f8721e
  4166bc:	xor    ah,BYTE PTR [eax+0x37]
  4166bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166c0:	fnstsw WORD PTR [edx+0x61d130f0]
  4166c6:	sbb    al,0x32
  4166c8:	mov    dh,0xcb
  4166ca:	mov    ch,0x43
  4166cc:	ret    0x16be
  4166cf:	mov    eax,ds:0xa15d884c
  4166d4:	sub    DWORD PTR [edi-0x17685d4d],edi
  4166da:	repz gs popf 
  4166dd:	jl     0x416664
  4166df:	in     eax,dx
  4166e0:	push   cs
  4166e1:	sbb    esi,ebx
  4166e3:	mov    ebx,ebx
  4166e5:	push   esp
  4166e6:	dec    ebx
  4166e7:	pop    es
  4166e8:	dec    esp
  4166e9:	(bad)  
  4166ea:	and    al,BYTE PTR [esi-0x7f630162]
  4166f0:	mov    ecx,0xb1cb11b8
  4166f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f6:	out    0xb7,eax
  4166f8:	adc    BYTE PTR [esi+0x62],ah
  4166fb:	push   ebp
  4166fc:	mov    esi,0x56546e36
  416701:	jne    0x41672c
  416703:	pushf  
  416704:	cmp    eax,0x1dcbf093
  416709:	jmp    0x949c:0x68c8655a
  416710:	add    BYTE PTR [ebp+0x493115ec],ch
  416716:	dec    eax
  416717:	sbb    ch,0x36
  41671a:	mov    edi,0xd107add2
  41671f:	fild   WORD PTR [edx+0x71]
  416722:	push   es
  416723:	push   0x4
  416725:	dec    ebp
  416726:	and    edi,ebx
  416728:	jecxz  0x41676d
  41672a:	pop    edx
  41672b:	add    al,0x65
  41672d:	and    DWORD PTR ds:0xbf0751d1,esi
  416733:	shl    DWORD PTR [eax+0x6698cf1a],cl
  416739:	cmp    ch,BYTE PTR [eax+0x7215ebf1]
  41673f:	xlat   BYTE PTR ds:[ebx]
  416740:	fnstcw WORD PTR [ebx]
  416742:	(bad)  
  416743:	push   esp
  416744:	cmp    eax,0xeb6a8277
  416749:	daa    
  41674a:	cdq    
  41674b:	dec    eax
  41674c:	xlat   BYTE PTR ds:[ebx]
  41674d:	jno    0x4166fc
  41674f:	push   ebp
  416750:	jns    0x41674e
  416752:	sub    al,0x34
  416754:	pop    eax
  416755:	stc    
  416756:	jne    0x4167cc
  416758:	in     al,0x9a
  41675a:	xchg   BYTE PTR [edi],cl
  41675c:	loope  0x416783
  41675e:	inc    esp
  41675f:	jge    0x416707
  416761:	loopne 0x4167b2
  416763:	lds    esi,FWORD PTR [edx+0x3b]
  416766:	repz xchg edx,eax
  416768:	ret    
  416769:	mov    ebx,0xe9f0a477
  41676e:	leave  
  41676f:	push   esp
  416770:	lds    edi,FWORD PTR [ecx]
  416772:	fcmovbe st,st(4)
  416774:	push   edi
  416775:	mov    bh,0x54
  416777:	pop    esi
  416778:	fimul  WORD PTR [edx-0x5fe4bab6]
  41677e:	test   al,0x57
  416780:	and    eax,0xbdd33f39
  416785:	push   esi
  416786:	push   ebp
  416787:	lods   eax,DWORD PTR ds:[esi]
  416788:	and    BYTE PTR [edx+ebp*1+0x66],cl
  41678c:	int3   
  41678d:	pop    esp
  41678e:	sub    al,0xc3
  416790:	add    DWORD PTR [esi+0x49],edi
  416793:	pop    ebx
  416794:	mov    esi,0x6173e03a
  416799:	addr16 inc eax
  41679b:	je     0x4167ad
  41679d:	xor    DWORD PTR [ebx+0x2afc0909],ebx
  4167a3:	repnz or eax,0xccd515b7
  4167a9:	cmp    eax,0xfe749372
  4167ae:	jnp    0x41678b
  4167b0:	data16 xchg al,ah
  4167b3:	and    dh,BYTE PTR [esi-0x37bfdc52]
  4167b9:	pop    ss
  4167ba:	fmul   DWORD PTR [ebx+0x52971954]
  4167c0:	xchg   edx,eax
  4167c1:	sub    eax,ebp
  4167c3:	or     BYTE PTR [ebp+0x57],cl
  4167c6:	xchg   ebp,eax
  4167c7:	in     al,dx
  4167c8:	hlt    
  4167c9:	stos   DWORD PTR es:[edi],eax
  4167ca:	fld    TBYTE PTR [eax]
  4167cc:	adc    eax,0x81382152
  4167d1:	fist   DWORD PTR [edi-0xf2e1b54]
  4167d7:	inc    edi
  4167d8:	cmc    
  4167d9:	sub    al,0xc1
  4167db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167dc:	inc    ecx
  4167dd:	mov    edi,0x5e73f9fc
  4167e2:	jne    0x4167ff
  4167e4:	(bad)  [esi+esi*4+0x15958f65]
  4167eb:	int3   
  4167ec:	out    dx,eax
  4167ed:	out    0x7,al
  4167ef:	pop    DWORD PTR [ebp+0x60]
  4167f2:	and    eax,0x6a03524c
  4167f7:	push   esp
  4167f8:	xchg   edx,eax
  4167f9:	in     al,dx
  4167fa:	dec    ebp
  4167fb:	mov    ?,ecx
  4167fd:	pushf  
  4167fe:	xchg   edx,eax
  4167ff:	lds    ecx,FWORD PTR [edi-0x3]
  416802:	or     bl,BYTE PTR [edi-0x1e]
  416805:	xchg   DWORD PTR [edi+0x6731e59b],eax
  41680b:	jbe    0x41681b
  41680d:	mov    edi,0x4aed7de6
  416812:	xchg   ebx,eax
  416813:	fs jg  0x416814
  416816:	mov    WORD PTR [ebp+eax*1+0x54],?
  41681a:	add    eax,0x9881562e
  41681f:	push   esp
  416820:	cmp    DWORD PTR [ebx-0x36],ebp
  416823:	leave  
  416824:	sbb    edi,DWORD PTR [ecx+eiz*2]
  416827:	sub    eax,0xc68f4e1f
  41682c:	pop    ebx
  41682d:	jo     0x416838
  41682f:	adc    al,0xa3
  416831:	arpl   WORD PTR [edi+0x414e319e],sp
  416837:	push   es
  416838:	ficom  WORD PTR [ebp+0x73d33efa]
  41683e:	fwait
  41683f:	stc    
  416840:	(bad)  
  416841:	stc    
  416842:	inc    edx
  416843:	or     esi,ebx
  416845:	sub    al,0x81
  416847:	mov    edi,0xe0b77d40
  41684c:	dec    edi
  41684d:	fadd   QWORD PTR [eax]
  41684f:	addr16 pusha 
  416851:	in     eax,dx
  416852:	in     eax,dx
  416853:	push   es
  416854:	aam    0xc5
  416856:	pop    edx
  416857:	pop    esp
  416858:	jnp    0x4168c5
  41685a:	sbb    dh,BYTE PTR [eax]
  41685c:	clc    
  41685d:	jnp    0x41685f
  41685f:	addr16 mov ds:0x9b8c,al
  416863:	jmp    DWORD PTR [ebp-0x4666291a]
  416869:	outs   dx,DWORD PTR ds:[esi]
  41686a:	in     eax,0xf4
  41686c:	mov    eax,ds:0x74fe0b87
  416871:	gs mov esp,0x82510a00
  416877:	add    al,0x9
  416879:	jnp    0x4168f1
  41687b:	in     al,dx
  41687c:	mov    ch,0x6
  41687e:	pop    eax
  41687f:	jb     0x4168dd
  416881:	ja     0x416882
  416883:	and    BYTE PTR [edi+0x46b82685],dh
  416889:	dec    esi
  41688a:	fistp  QWORD PTR [ecx]
  41688c:	push   ss
  41688d:	cmp    eax,0xa431230c
  416892:	out    dx,eax
  416893:	popf   
  416894:	add    DWORD PTR [esi-0x14],esi
  416897:	and    edi,DWORD PTR [esi]
  416899:	or     DWORD PTR [edx+esi*2+0x6ebacc87],edx
  4168a0:	jns    0x416867
  4168a2:	int3   
  4168a3:	imul   edx,DWORD PTR [ebp+edi*1-0x2238b432],0x1e
  4168ab:	mov    edx,DWORD PTR [ebx+0x7266bebf]
  4168b1:	jmp    0xa07faead
  4168b6:	test   al,0x71
  4168b8:	je     0x4168e6
  4168ba:	mov    bh,0xdc
  4168bc:	adc    dh,dh
  4168be:	outs   dx,DWORD PTR ds:[esi]
  4168bf:	daa    
  4168c0:	mov    WORD PTR [esi],gs
  4168c2:	pop    es
  4168c3:	ins    BYTE PTR es:[edi],dx
  4168c4:	push   ebx
  4168c5:	inc    edx
  4168c6:	jnp    0x416921
  4168c8:	add    DWORD PTR [eax-0x6bc7cdef],edi
  4168ce:	jo     0x41689b
  4168d0:	popf   
  4168d1:	or     al,0xe1
  4168d3:	rol    DWORD PTR [edi+ebx*4+0x3be1196d],0x71
  4168db:	sub    al,0x2a
  4168dd:	adc    al,bl
  4168df:	jbe    0x41688f
  4168e1:	adc    al,0xbf
  4168e3:	jb     0x41687e
  4168e5:	and    eax,0x50006689
  4168ea:	test   al,0xa3
  4168ec:	call   0x68bd2fc
  4168f1:	jmp    0x6cb96a02
  4168f6:	pop    edi
  4168f7:	dec    ebp
  4168f8:	daa    
  4168f9:	push   edi
  4168fa:	cmp    edi,esi
  4168fc:	(bad)  
  4168fd:	or     al,0xfb
  4168ff:	test   BYTE PTR [ecx],bl
  416901:	xchg   esi,eax
  416902:	xor    al,0xd6
  416904:	sub    eax,0xbb61919a
  416909:	test   BYTE PTR [edx+0xbeece33],dh
  41690f:	cld    
  416910:	and    DWORD PTR [edx+0x5a80b4b4],esp
  416916:	call   DWORD PTR [ebp+0x31]
  416919:	cmp    esp,eax
  41691b:	mov    ebx,0x4111b5b6
  416920:	mov    ch,0x5f
  416922:	inc    ecx
  416923:	inc    esp
  416924:	jnp    0x4168e6
  416926:	adc    BYTE PTR ds:0x2e1a68a2,ch
  41692c:	sub    DWORD PTR [edi+0x12],0xffffffc4
  416930:	mov    eax,ds:0x22fa1ab3
  416935:	stos   BYTE PTR es:[edi],al
  416936:	div    dl
  416938:	mov    edi,0x6adac661
  41693d:	push   edi
  41693e:	push   ecx
  41693f:	sbb    eax,0x5fc64b36
  416944:	and    BYTE PTR [ebx+esi*8-0x1e],bl
  416948:	mov    bh,0x46
  41694a:	fcom   QWORD PTR [ecx+0xa]
  41694d:	push   eax
  41694e:	pushf  
  41694f:	push   edx
  416950:	jns    0x41696e
  416952:	scas   eax,DWORD PTR es:[edi]
  416953:	adc    esi,ecx
  416955:	push   ebx
  416956:	jmp    0xea4cd0ce
  41695b:	jbe    0x416991
  41695d:	mov    ebp,0x4aff292b
  416962:	or     eax,0x80f1d2e4
  416967:	mov    ebp,0xe900bc53
  41696c:	call   0x6541:0x6df4e274
  416973:	or     ecx,esp
  416975:	hlt    
  416976:	jnp    0x416990
  416978:	js     0x416934
  41697a:	cmp    DWORD PTR cs:[edi],0x2cbc0887
  416981:	fistp  WORD PTR [ecx-0x5dfb7542]
  416987:	fcom   QWORD PTR [ebp-0x33]
  41698a:	cmp    al,0xde
  41698c:	(bad)  
  41698d:	shr    DWORD PTR [ebp-0x7b1f73e6],1
  416993:	adc    BYTE PTR [eax-0x49],0xd5
  416997:	ds push cs
  416999:	mov    al,0xaf
  41699b:	aad    0x3b
  41699d:	aad    0xd2
  41699f:	std    
  4169a0:	jae    0x4169c8
  4169a2:	mov    ebp,0x65fc98e8
  4169a7:	shl    edx,1
  4169a9:	xor    DWORD PTR [eax-0x47],ebp
  4169ac:	stos   BYTE PTR es:[edi],al
  4169ad:	xor    BYTE PTR [ebx],0x8b
  4169b0:	dec    ebx
  4169b1:	push   ecx
  4169b2:	in     eax,0xc7
  4169b4:	repnz sahf 
  4169b6:	mov    DWORD PTR [esi],edi
  4169b8:	inc    eax
  4169b9:	mov    al,BYTE PTR [eax+ebx*4+0x39]
  4169bd:	fwait
  4169be:	jp     0x4169f8
  4169c0:	and    DWORD PTR [eax+0x3b086830],edx
  4169c6:	daa    
  4169c7:	push   esi
  4169c8:	mov    eax,ds:0x46dfa3ee
  4169cd:	les    eax,FWORD PTR [esi-0x41251889]
  4169d3:	xor    dl,ch
  4169d5:	pop    ebx
  4169d6:	xor    al,BYTE PTR [ebx+0x23]
  4169d9:	xchg   ebp,eax
  4169da:	stc    
  4169db:	xchg   edx,eax
  4169dc:	sbb    ebp,DWORD PTR [ebx+0x66]
  4169df:	jl     0x416996
  4169e1:	mov    ebp,0x642d873e
  4169e6:	repz in al,0x41
  4169e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ea:	push   0x4
  4169ec:	imul   esp,DWORD PTR [ebx-0x54],0xffffffc5
  4169f0:	sbb    eax,0x86e79f2d
  4169f5:	adc    al,0x83
  4169f7:	lahf   
  4169f8:	pop    edx
  4169f9:	ds cs jae 0x4169bf
  4169fd:	adc    cl,BYTE PTR [ebx]
  4169ff:	mov    cl,0x84
  416a01:	into   
  416a02:	jle    0x4169a1
  416a04:	mov    bl,0x74
  416a06:	push   ebx
  416a07:	jg     0x4169dc
  416a09:	xchg   esp,eax
  416a0a:	clc    
  416a0b:	jg     0x416a16
  416a0d:	and    eax,0x9b431b6c
  416a12:	or     cl,cl
  416a14:	push   eax
  416a15:	fld    DWORD PTR [ebx+0x30]
  416a18:	imul   edi,edx,0xb4caa01
  416a1e:	call   0x499c:0x4e010916
  416a25:	sti    
  416a26:	leave  
  416a27:	imul   ebx,DWORD PTR [edx-0x337f56d9],0xffffffd2
  416a2e:	and    DWORD PTR [ebp+0x7b897ba7],ecx
  416a34:	sbb    al,bh
  416a36:	sub    eax,0xffffffdf
  416a39:	fild   WORD PTR cs:[eax-0x40]
  416a3d:	in     eax,dx
  416a3e:	xchg   esi,eax
  416a3f:	pop    ebx
  416a40:	loop   0x416a46
  416a42:	pop    ecx
  416a43:	cmc    
  416a44:	(bad)  
  416a45:	cli    
  416a46:	xor    BYTE PTR [edx+eiz*1],al
  416a49:	mov    gs,WORD PTR [esi-0x5a]
  416a4c:	clc    
  416a4d:	push   ebp
  416a4e:	fdiv   QWORD PTR [ecx+0x17]
  416a51:	push   es
  416a52:	sub    esi,esi
  416a54:	add    esi,DWORD PTR [ecx-0x4e]
  416a57:	lahf   
  416a58:	in     al,0x1
  416a5a:	jmp    0xb9c5:0xa245dc5a
  416a61:	dec    edx
  416a62:	xchg   ebp,eax
  416a63:	mov    eax,0xaffb0090
  416a68:	add    al,BYTE PTR [edx+0x77]
  416a6b:	arpl   WORD PTR [eax-0x1b35141c],di
  416a71:	das    
  416a72:	or     ch,bl
  416a74:	mov    ecx,0x59016f52
  416a79:	cmp    edi,DWORD PTR [edi+0x3ccb737a]
  416a7f:	les    ecx,FWORD PTR [esi]
  416a81:	and    ah,0x45
  416a84:	imul   eax,DWORD PTR [eax],0xffffff85
  416a87:	mov    ch,0x95
  416a89:	fld    QWORD PTR [eax+0x51120e7]
  416a8f:	xchg   edi,eax
  416a90:	stc    
  416a91:	aaa    
  416a92:	inc    BYTE PTR [edi+eiz*1]
  416a95:	je     0x416aa1
  416a97:	ds xchg ebp,eax
  416a99:	xlat   BYTE PTR ds:[ebx]
  416a9a:	dec    ecx
  416a9b:	data16 (bad) 
  416a9d:	stos   DWORD PTR es:[edi],eax
  416a9e:	rcl    esi,0x1
  416aa1:	mov    dl,0x34
  416aa3:	test   al,0xb0
  416aa5:	(bad)  
  416aa6:	out    0x17,al
  416aa8:	shl    DWORD PTR [eax],cl
  416aaa:	leave  
  416aab:	pop    ecx
  416aac:	rcl    cl,0xce
  416aaf:	cmp    eax,0x94229d35
  416ab4:	sub    dh,al
  416ab6:	stc    
  416ab7:	dec    ebx
  416ab8:	cs inc ebx
  416aba:	test   edi,eax
  416abc:	mov    ebx,DWORD PTR [esi+0x11]
  416abf:	adc    eax,DWORD PTR [edx-0x107081b9]
  416ac5:	pop    ecx
  416ac6:	inc    esi
  416ac7:	push   edx
  416ac8:	pop    edx
  416ac9:	loop   0x416b2a
  416acb:	push   ss
  416acc:	inc    ebx
  416acd:	xor    BYTE PTR [ecx-0x6d],bl
  416ad0:	cmp    eax,0x44d1dc4f
  416ad5:	stc    
  416ad6:	xor    DWORD PTR [eax-0x66e15f],esp
  416adc:	dec    esi
  416add:	add    al,0x18
  416adf:	jns    0x416a7b
  416ae1:	imul   ebp,DWORD PTR [esi+0x48],0xd64bbfb9
  416ae8:	xchg   edx,eax
  416ae9:	sbb    DWORD PTR [ebx+0x36],0xa7683a54
  416af0:	cmp    esi,esi
  416af2:	adc    al,0x0
  416af4:	push   ss
  416af5:	(bad)  
  416af6:	sub    DWORD PTR es:[eax],ebx
  416af9:	xor    cl,bh
  416afb:	clc    
  416afc:	fcomip st,st(0)
  416afe:	out    dx,eax
  416aff:	xchg   BYTE PTR [edi],bh
  416b01:	std    
  416b02:	push   0x55a185ab
  416b07:	sub    BYTE PTR [ecx+edx*4],ah
  416b0a:	mov    esi,0x1f3a28
  416b0f:	cmp    eax,0x1eddf1d0
  416b14:	cmp    BYTE PTR ds:0xff8b3b52,cl
  416b1a:	es loopne 0x416b52
  416b1d:	stc    
  416b1e:	jnp    0x416b98
  416b20:	ret    0x4d0
  416b23:	aad    0x59
  416b25:	mov    bh,0xbb
  416b27:	push   es
  416b28:	leave  
  416b29:	jne    0x416ada
  416b2b:	add    bh,BYTE PTR [ecx+0xb473db2]
  416b31:	pop    ebp
  416b32:	popf   
  416b33:	shr    BYTE PTR [esi+ebx*1-0x3ace6d6c],cl
  416b3a:	arpl   WORD PTR [eax-0xa85ee44],bx
  416b40:	dec    ebp
  416b41:	xchg   esi,eax
  416b42:	push   ds
  416b43:	popf   
  416b44:	xor    edi,esp
  416b46:	dec    eax
  416b47:	addr16 push ebp
  416b49:	loop   0x416b08
  416b4b:	ror    BYTE PTR [edi],cl
  416b4d:	(bad)  
  416b4e:	sub    al,BYTE PTR [ebx]
  416b50:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  416b52:	stos   BYTE PTR es:[edi],al
  416b53:	sbb    bh,BYTE PTR [eax+0x33c6deea]
  416b59:	pop    esp
  416b5a:	fs sahf 
  416b5c:	out    0xa7,eax
  416b5e:	xor    eax,0x22204088
  416b63:	push   ds
  416b64:	cmp    DWORD PTR [edx],esp
  416b66:	(bad)  
  416b67:	das    
  416b68:	mov    ch,0x4e
  416b6a:	mov    edi,esi
  416b6c:	lods   al,BYTE PTR ds:[esi]
  416b6d:	test   eax,0x74c4972a
  416b72:	ds stos DWORD PTR es:[edi],eax
  416b74:	inc    ebx
  416b75:	scas   eax,DWORD PTR es:[edi]
  416b76:	in     eax,dx
  416b77:	fcmovnu st,st(5)
  416b79:	jae    0x416b51
  416b7b:	add    BYTE PTR [ebx],cl
  416b7d:	cmp    ebx,edi
  416b7f:	push   esp
  416b80:	outs   dx,BYTE PTR ds:[esi]
  416b81:	cmp    DWORD PTR [esi],edx
  416b83:	leave  
  416b84:	popa   
  416b85:	mov    al,ds:0x95110d2
  416b8a:	test   dl,bl
  416b8c:	mov    eax,0xd8b91da6
  416b91:	xor    BYTE PTR [esp+ebx*8-0x72],cl
  416b95:	push   esp
  416b96:	mov    ch,0x26
  416b98:	xor    BYTE PTR [ebx+0x29187d90],0xe4
  416b9f:	jp     0x416bb3
  416ba1:	loope  0x416bc4
  416ba3:	dec    esi
  416ba4:	mov    edx,esp
  416ba6:	mov    esi,0x34507c66
  416bab:	test   al,0x9f
  416bad:	push   edx
  416baf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bb0:	or     BYTE PTR [edx-0x2e8e99e5],cl
  416bb6:	gs stos BYTE PTR es:[edi],al
  416bb8:	ds test al,0xb8
  416bbb:	xor    cl,ch
  416bbd:	cmc    
  416bbe:	imul   ebp,edx,0xffffffac
  416bc1:	mov    eax,ds:0x442c5a76
  416bc6:	retf   0x22be
  416bc9:	dec    ebx
  416bca:	lods   eax,DWORD PTR ds:[esi]
  416bcb:	lock dec edi
  416bcd:	and    eax,0x473a0843
  416bd2:	call   0xf4eef96c
  416bd7:	adc    eax,0xb30be483
  416bdc:	mov    al,dl
  416bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bdf:	ret    
  416be0:	test   BYTE PTR [ebx-0xb],bl
  416be3:	enter  0x3e9a,0x2d
  416be7:	mov    ebp,0x484cb87f
  416bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bed:	(bad)  
  416bee:	fdiv   st(6),st
  416bf0:	call   0x3af780bd
  416bf5:	mov    BYTE PTR [edi+esi*4],dl
  416bf8:	(bad)  
  416bf9:	push   ds
  416bfa:	test   esi,esi
  416bfc:	mov    BYTE PTR [edx+0x6e],bh
  416bff:	jmp    0x232ce5fd
  416c04:	jno    0x416c11
  416c06:	sar    BYTE PTR [ebp+edi*2-0x5d],cl
  416c0a:	jns    0x416be3
  416c0c:	lahf   
  416c0d:	jmp    0x2441:0xfd100166
  416c14:	xor    eax,0x46df45a4
  416c19:	xchg   esi,eax
  416c1a:	mov    DWORD PTR [esi+0x293bdf19],ebx
  416c20:	and    dh,ah
  416c22:	or     al,0x3a
  416c25:	fist   DWORD PTR [eax+0x27]
  416c28:	sub    ebx,DWORD PTR [edi+edi*2-0x6781e944]
  416c2f:	fdivp  st(2),st
  416c31:	add    BYTE PTR [esi-0x64],dh
  416c34:	sub    DWORD PTR ds:0x54a97683,esi
  416c3a:	in     al,dx
  416c3b:	mov    BYTE PTR [ebx-0x66],bh
  416c3e:	and    DWORD PTR [ebx+0x6eae5840],ecx
  416c44:	sbb    al,0x4e
  416c46:	shl    BYTE PTR [edx-0x38696677],cl
  416c4c:	sti    
  416c4d:	and    bh,BYTE PTR [edi+edi*1]
  416c50:	sbb    al,0x7a
  416c52:	inc    eax
  416c53:	rcl    DWORD PTR [eax-0x519a399b],0x42
  416c5a:	cmova  eax,DWORD PTR ds:0x9a7d44b5
  416c61:	xor    al,0x2
  416c63:	jecxz  0x416c08
  416c65:	sbb    eax,0xe8d033fb
  416c6a:	dec    esi
  416c6b:	outs   dx,BYTE PTR ds:[esi]
  416c6c:	dec    ecx
  416c6d:	int    0x23
  416c6f:	pusha  
  416c70:	stos   BYTE PTR es:[edi],al
  416c71:	mov    cl,0x1c
  416c73:	cmp    DWORD PTR [ebp+ecx*2-0x5b38abfa],ebx
  416c7a:	jae    0x416cf5
  416c7c:	fbstp  TBYTE PTR [ebx-0x4f2b08a5]
  416c82:	push   eax
  416c83:	mov    DWORD PTR [ebp+0x497020d],edi
  416c89:	repnz push ebp
  416c8b:	xor    bh,BYTE PTR [edi]
  416c8d:	inc    esi
  416c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c8f:	neg    cl
  416c91:	cmc    
  416c92:	cld    
  416c93:	jp     0x416cc0
  416c95:	jecxz  0x416cc9
  416c97:	retf   
  416c98:	mov    DWORD PTR [esi],esi
  416c9a:	jne    0x416c22
  416c9c:	fcmovu st,st(5)
  416c9e:	mov    ds:0xfefedc6,al
  416ca3:	or     BYTE PTR [ecx+0x40],dh
  416ca6:	adc    BYTE PTR [esi+0x4],dh
  416ca9:	in     eax,dx
  416caa:	dec    esi
  416cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cac:	cmp    DWORD PTR [edx],0xffffffa0
  416caf:	inc    eax
  416cb0:	dec    eax
  416cb1:	test   esp,0xbc718c2c
  416cb7:	int3   
  416cb8:	cli    
  416cb9:	xchg   ecx,eax
  416cba:	pop    ecx
  416cbb:	ds mov bh,0xdb
  416cbe:	outs   dx,DWORD PTR ds:[esi]
  416cbf:	ss aad 0x4e
  416cc2:	jecxz  0x416c62
  416cc4:	test   edi,0x4fa09b24
  416cca:	add    dh,ah
  416ccc:	test   al,0x5b
  416cce:	push   eax
  416ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cd0:	aaa    
  416cd1:	and    al,0x33
  416cd3:	in     al,0x9
  416cd5:	enter  0xf325,0xa0
  416cd9:	leave  
  416cda:	add    al,0x19
  416cdc:	pop    edx
  416cdd:	scas   eax,DWORD PTR es:[edi]
  416cde:	cmc    
  416cdf:	ret    
  416ce0:	stc    
  416ce1:	inc    edx
  416ce2:	sub    eax,0xe89b76b0
  416ce7:	aas    
  416ce8:	nop
  416ce9:	les    ecx,FWORD PTR [eax-0x3d]
  416cec:	push   eax
  416ced:	inc    edx
  416cee:	ds xchg ecx,eax
  416cf0:	jo     0x416d59
  416cf2:	das    
  416cf3:	mov    eax,0xc450a871
  416cf8:	call   0xc1514f30
  416cfd:	sbb    BYTE PTR [esi-0x17],bh
  416d00:	aad    0x9b
  416d02:	lods   al,BYTE PTR ds:[esi]
  416d03:	ins    DWORD PTR es:[edi],dx
  416d04:	adc    DWORD PTR ds:0xb151c66b,edx
  416d0a:	sub    BYTE PTR [ebp+0x133fd8f1],ah
  416d10:	jne    0x416cfd
  416d12:	and    eax,0x4c597cad
  416d17:	inc    ebp
  416d18:	hlt    
  416d19:	add    eax,edx
  416d1b:	jge    0x416d44
  416d1d:	mov    ebp,0x390d902d
  416d22:	push   edx
  416d23:	cmp    BYTE PTR [ebx],dh
  416d25:	inc    eax
  416d26:	(bad)  
  416d28:	imul   ecx,DWORD PTR [edx-0x51876484],0x12
  416d2f:	pop    esp
  416d30:	xor    ch,BYTE PTR [ebx-0x527ed3c2]
  416d36:	fsub   st,st(6)
  416d38:	pushf  
  416d39:	imul   eax,DWORD PTR [eax],0xa981dfff
  416d3f:	rcr    DWORD PTR [edx-0x774735b1],0xf0
  416d46:	dec    esp
  416d47:	mov    BYTE PTR [ebp-0x12],ch
  416d4a:	retf   0x54f0
  416d4d:	xchg   ebx,eax
  416d4e:	xchg   edi,eax
  416d4f:	or     eax,0xc67c5fa6
  416d54:	imul   edx,DWORD PTR [ebx+0x47400b06],0xffffffb4
  416d5b:	sahf   
  416d5c:	imul   edi,edx,0xdab6cdab
  416d62:	test   bh,dh
  416d64:	pop    ebx
  416d65:	adc    DWORD PTR [edi],0x34f3844f
  416d6b:	lods   eax,DWORD PTR ds:[esi]
  416d6c:	pop    ebp
  416d6d:	push   es
  416d6e:	test   al,0x51
  416d70:	dec    ecx
  416d71:	adc    al,0xcb
  416d73:	pop    ss
  416d74:	popf   
  416d75:	js     0x416d17
  416d77:	jecxz  0x416df2
  416d79:	lahf   
  416d7a:	push   edi
  416d7b:	mov    edx,0xe454ac85
  416d80:	ret    0x3feb
  416d83:	and    ebp,DWORD PTR [edi]
  416d85:	jmp    0x54cbeb8a
  416d8a:	sub    ah,bl
  416d8c:	lahf   
  416d8d:	int    0x5c
  416d8f:	add    DWORD PTR [edi],edi
  416d91:	push   ds
  416d92:	enter  0x5736,0x6f
  416d96:	mov    bl,0x73
  416d98:	inc    ebp
  416d99:	rcl    BYTE PTR [eax+0x3f1a4369],0x48
  416da0:	popa   
  416da1:	fcomp  QWORD PTR [edx-0x5]
  416da4:	jecxz  0x416df7
  416da6:	and    BYTE PTR [ebx-0x450063d5],0xec
  416dad:	push   ds
  416dae:	gs iret 
  416db0:	jmp    0x416d95
  416db2:	pop    esp
  416db3:	jle    0x416dd1
  416db5:	jns    0x416d63
  416db7:	mov    ch,0x1e
  416db9:	lods   al,BYTE PTR ds:[esi]
  416dba:	or     edx,ebx
  416dbc:	xor    DWORD PTR [edx-0x6f],ebx
  416dbf:	(bad)  
  416dc0:	test   eax,0x34bc48ab
  416dc5:	lea    edx,[eax]
  416dc7:	mul    DWORD PTR [ebx+0x64]
  416dca:	hlt    
  416dcb:	add    eax,0xfdb1bc5a
  416dd0:	call   DWORD PTR [eax]
  416dd2:	inc    esp
  416dd3:	inc    edx
  416dd4:	pop    ecx
  416dd5:	imul   ebx,esp,0xffffffc3
  416dd8:	mov    eax,ds:0xc47e88b2
  416ddd:	fild   WORD PTR [eax-0x36820e35]
  416de3:	leave  
  416de4:	adc    eax,DWORD PTR [eax+0x7d]
  416de7:	paddusw mm7,QWORD PTR [edx+0x1b0b7fb4]
  416dee:	mov    ebp,0xfa6abd9c
  416df3:	xor    cl,BYTE PTR [esi]
  416df5:	mov    bl,0x97
  416df7:	stc    
  416df8:	mov    dl,0xab
  416dfa:	scas   eax,DWORD PTR es:[edi]
  416dfb:	(bad)  
  416dfc:	fld    TBYTE PTR [edi+0x29]
  416dff:	add    DWORD PTR [edi-0x7f57d63b],ebx
  416e05:	shr    BYTE PTR [esi+0x18b16b2d],1
  416e0b:	(bad)  
  416e0c:	xchg   esi,eax
  416e0d:	mov    dl,BYTE PTR [esi]
  416e0f:	js     0x416db1
  416e11:	mov    dl,0xaa
  416e13:	xor    edx,ebp
  416e15:	int3   
  416e16:	inc    DWORD PTR [eax]
  416e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e19:	call   0x68b7f7af
  416e1e:	adc    bl,ah
  416e20:	dec    edx
  416e21:	shl    al,1
  416e23:	sub    bl,al
  416e25:	and    BYTE PTR [edx],ah
  416e27:	lds    esi,FWORD PTR [edx]
  416e29:	rcl    ch,0x44
  416e2c:	out    dx,al
  416e2d:	push   es
  416e2e:	jge    0x416e6c
  416e30:	dec    DWORD PTR [eax-0x2bbf56e4]
  416e36:	out    0x17,eax
  416e38:	retf   0x5eba
  416e3b:	stos   DWORD PTR es:[edi],eax
  416e3c:	lods   eax,DWORD PTR ds:[esi]
  416e3d:	fsub   st(1),st
  416e3f:	or     bh,BYTE PTR [ecx+0x2c1b148]
  416e45:	mov    bl,0x27
  416e47:	fistp  QWORD PTR [esi]
  416e49:	dec    eax
  416e4a:	push   edi
  416e4b:	pop    ss
  416e4c:	pop    DWORD PTR [ecx+edx*4]
  416e4f:	jbe    0x416ebe
  416e51:	jmp    0x4f78:0x72aea340
  416e58:	add    al,0x7c
  416e5a:	gs push esp
  416e5c:	mov    bh,0xbb
  416e5e:	lods   al,BYTE PTR ds:[esi]
  416e5f:	add    BYTE PTR [esi-0x4974d79e],0x88
  416e66:	mov    al,0x20
  416e68:	mov    dh,0x5c
  416e6a:	jne    0x416ee3
  416e6c:	inc    eax
  416e6d:	out    dx,al
  416e6e:	dec    edi
  416e6f:	pushf  
  416e70:	shl    DWORD PTR [edi],cl
  416e72:	ins    DWORD PTR es:[edi],dx
  416e73:	in     al,0xe5
  416e75:	jb     0x416e58
  416e77:	mov    bl,0x1c
  416e79:	push   ecx
  416e7a:	fsubr  QWORD PTR fs:[ecx+0x6be4a834]
  416e81:	lods   eax,DWORD PTR ds:[esi]
  416e82:	or     eax,0xa7d723eb
  416e87:	lea    esi,[ecx]
  416e89:	add    ebx,DWORD PTR ss:[edi+0x3d]
  416e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e8e:	mov    ebx,0xbf0cc9e9
  416e93:	sub    eax,0x1063d8d3
  416e98:	push   eax
  416e99:	js     0x416ece
  416e9b:	mov    dh,0x9c
  416e9d:	xchg   edx,eax
  416e9e:	sub    BYTE PTR [ebp+0x5],ah
  416ea1:	in     al,dx
  416ea2:	std    
  416ea3:	pushf  
  416ea4:	cmp    DWORD PTR [ebx],edx
  416ea6:	jae    0x416eec
  416ea8:	push   0xffffffdf
  416eaa:	in     eax,0x46
  416eac:	jne    0x416edc
  416eae:	mov    dh,cl
  416eb0:	(bad)  
  416eb2:	(bad)  
  416eb3:	mov    WORD PTR [ecx-0x4e],gs
  416eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416eb7:	imul   eax,ebx,0x3eebf2db
  416ebd:	mov    ds:0x7f3d9a94,eax
  416ec2:	add    al,0xf7
  416ec4:	mov    edi,0xdc1f3871
  416ec9:	jbe    0x416edd
  416ecb:	shr    BYTE PTR [eax+0x5988976],cl
  416ed1:	sub    eax,0x1f374867
  416ed6:	lea    edi,[edx+ebp*4+0x23d8ac9f]
  416edd:	int    0x72
  416edf:	lock into 
  416ee1:	cwde   
  416ee2:	dec    edi
  416ee3:	das    
  416ee4:	push   edx
  416ee5:	out    dx,al
  416ee6:	jno    0x416e7b
  416ee8:	test   DWORD PTR [edx+0x3f61a010],ecx
  416eee:	outs   dx,DWORD PTR ds:[esi]
  416eef:	push   ebx
  416ef0:	push   0x7c
  416ef2:	sbb    edi,DWORD PTR [ecx]
  416ef4:	enter  0xdb1,0x58
  416ef8:	in     al,dx
  416ef9:	xor    al,0xa5
  416efb:	ja     0x416ea1
  416efd:	jae    0x416f4e
  416eff:	xchg   BYTE PTR [esi-0x1c310556],bh
  416f05:	int3   
  416f06:	push   0xffffff83
  416f08:	inc    esi
  416f09:	test   BYTE PTR [esi+0x6b],0x3b
  416f0d:	shl    edx,cl
  416f0f:	and    BYTE PTR [edx],cl
  416f11:	and    edx,ebx
  416f13:	das    
  416f14:	sub    ebp,ecx
  416f16:	mov    ds:0xbdb03db8,eax
  416f1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f1c:	and    al,0x75
  416f1e:	gs test al,0x3e
  416f22:	push   0xffffffaa
  416f24:	or     edx,DWORD PTR [edx]
  416f26:	pushf  
  416f27:	inc    edx
  416f28:	xchg   esi,eax
  416f29:	test   eax,0xfcd48d42
  416f2e:	mov    bl,0x56
  416f30:	jb     0x416ed1
  416f32:	ds cmp ah,dh
  416f35:	gs dec edx
  416f37:	dec    ecx
  416f38:	ret    
  416f39:	sub    eax,0x31c14550
  416f3e:	push   edx
  416f3f:	push   cs
  416f40:	sub    dl,BYTE PTR [edi+0x7559e3d2]
  416f46:	pop    es
  416f47:	pop    ds
  416f48:	adc    BYTE PTR [esi+0x1b5a6a9],ah
  416f4e:	mov    ds:0x793b5b7,al
  416f53:	or     BYTE PTR [edx+0x72dd2e9c],0x38
  416f5a:	fisttp QWORD PTR [ebp-0xbebe6da]
  416f60:	adc    bh,BYTE PTR ds:0x9a1840c0
  416f66:	jecxz  0x416f62
  416f68:	fdiv   QWORD PTR [ebp*4+0x33b3f53d]
  416f6f:	push   ds
  416f70:	mov    esp,ebx
  416f72:	xchg   bh,ah
  416f74:	inc    eax
  416f75:	mov    eax,0x3a0dc4d2
  416f7a:	stos   BYTE PTR es:[edi],al
  416f7b:	xor    BYTE PTR [edi+0xc56b615],0x96
  416f82:	cmp    DWORD PTR [ecx+0x32af0131],edx
  416f88:	inc    ecx
  416f89:	mov    ebp,0xfb851766
  416f8e:	pop    ds
  416f8f:	adc    al,0xcc
  416f91:	stos   DWORD PTR es:[edi],eax
  416f92:	stos   DWORD PTR es:[edi],eax
  416f93:	pop    ebx
  416f94:	fcmovnb st,st(4)
  416f96:	mov    ds:0x97e83ec0,eax
  416f9b:	int3   
  416f9c:	lods   eax,DWORD PTR ds:[esi]
  416f9d:	mov    ebp,0x20ef2f1d
  416fa2:	sbb    esi,ebx
  416fa4:	fidivr WORD PTR [ebx+0x54]
  416fa7:	out    0x21,eax
  416fa9:	out    0xb8,al
  416fab:	sbb    eax,0x11bdf031
  416fb0:	dec    ebp
  416fb1:	ss push 0x86c1de52
  416fb7:	jl     0x416f6c
  416fb9:	int3   
  416fba:	call   0xaddf:0x87e96cc4
  416fc1:	or     esp,DWORD PTR [ebp-0x7a5f8c8e]
  416fc7:	pop    ebp
  416fc8:	mov    bl,BYTE PTR [eax-0x45e18abb]
  416fce:	inc    esp
  416fcf:	pusha  
  416fd0:	shl    DWORD PTR [edx-0x2b],1
  416fd3:	mov    esp,0x43e83961
  416fd8:	adc    DWORD PTR [esi+eax*1+0x23cee17b],esi
  416fdf:	xchg   edx,eax
  416fe0:	(bad)  
  416fe1:	and    esp,ebx
  416fe3:	push   eax
  416fe4:	mov    ecx,0x12e7750f
  416fe9:	add    esi,ebx
  416feb:	pop    ds
  416fec:	mov    eax,0xa32052a
  416ff1:	inc    ebp
  416ff2:	ja     0x416fed
  416ff4:	sub    edx,esp
  416ff6:	add    dl,ch
  416ff8:	or     eax,0xa5c4529f
  416ffd:	push   ds
  416ffe:	ins    DWORD PTR es:[edi],dx
  416fff:	adc    esp,esi
  417001:	xchg   ecx,eax
  417002:	ret    
  417003:	mov    WORD PTR [eax+0x7d1b7339],gs
  417009:	jl     0x41707f
  41700b:	fcomp  DWORD PTR [ecx+0x87b4823]
  417011:	or     edi,ecx
  417013:	jl     0x416fb8
  417015:	xchg   DWORD PTR [esi+0x70d34ed8],eax
  41701b:	pop    esi
  41701c:	mov    ebx,0xfa7784bb
  417021:	out    0x79,eax
  417023:	fadd   DWORD PTR [ebp+0x77]
  417026:	out    0xd6,al
  417028:	dec    ebx
  417029:	add    eax,0x78a32dd7
  41702e:	popf   
  41702f:	into   
  417030:	cld    
  417031:	mov    ebp,0xf5defa79
  417036:	stc    
  417037:	cmp    DWORD PTR [edx+ebx*4+0x5b8db9e4],edx
  41703e:	xlat   BYTE PTR ds:[ebx]
  41703f:	dec    edx
  417040:	ins    DWORD PTR es:[edi],dx
  417041:	mov    esi,0x53817c75
  417046:	cmc    
  417047:	mov    ecx,0x5a988bea
  41704c:	shl    BYTE PTR [edi],0xee
  41704f:	push   edx
  417050:	jnp    0x41704d
  417052:	sbb    ebx,ecx
  417054:	xor    ch,BYTE PTR [ebx]
  417056:	shr    BYTE PTR [esi-0x32e65304],cl
  41705c:	cs scas eax,DWORD PTR es:[edi]
  41705e:	jge    0x4170ca
  417060:	(bad)  
  417061:	fs cwde 
  417063:	mov    ch,0xf8
  417065:	sbb    ch,BYTE PTR [ebp-0x10]
  417068:	jge    0x41708f
  41706a:	aas    
  41706b:	test   eax,0xeb8df1ef
  417070:	add    BYTE PTR [edx],0x2b
  417073:	ret    
  417074:	adc    ch,BYTE PTR [edi]
  417076:	cs inc ecx
  417078:	nop    DWORD PTR [esi-0x34d73471]
  41707f:	js     0x41707b
  417081:	jns    0x4170d4
  417083:	xchg   esi,eax
  417084:	and    BYTE PTR [edx+0x574baa17],0xce
  41708b:	jle    0x41705b
  41708d:	in     eax,dx
  41708e:	push   ds
  41708f:	lds    ebp,FWORD PTR [esi+0x1c]
  417092:	imul   ecx,DWORD PTR [edi-0x5],0x724800a0
  417099:	clc    
  41709a:	cmp    BYTE PTR [bp+0xe4c],dh
  41709f:	mov    edi,0x71eedc0b
  4170a4:	fmul   DWORD PTR [ebx]
  4170a6:	or     eax,0xe43254d4
  4170ab:	lods   al,BYTE PTR ds:[esi]
  4170ac:	enter  0x80a6,0x9
  4170b0:	sub    edi,0xa96a4cf
  4170b6:	pop    ebx
  4170b7:	sar    BYTE PTR [ebx+0x75],cl
  4170ba:	xor    BYTE PTR [ebp+0x23],ch
  4170bd:	mov    ebx,0x1d37c335
  4170c2:	mov    ebx,0x8e8c11ac
  4170c7:	call   0x5e209911
  4170cc:	rcl    dl,1
  4170ce:	push   ecx
  4170cf:	(bad)  
  4170d0:	fidiv  DWORD PTR [esi+0x68]
  4170d3:	sbb    BYTE PTR [ecx],cl
  4170d5:	fidivr DWORD PTR [ebx-0x2b0edebf]
  4170db:	int    0xa5
  4170dd:	pop    ecx
  4170de:	and    al,0x34
  4170e0:	or     edi,DWORD PTR [eax-0x28]
  4170e3:	ret    
  4170e4:	loop   0x417132
  4170e6:	add    dh,cl
  4170e8:	push   eax
  4170e9:	fisub  WORD PTR [edi+0x63763522]
  4170ef:	stc    
  4170f0:	mov    al,ds:0xe7b36d52
  4170f5:	mov    eax,0xd68c0f44
  4170fa:	sub    al,0x1f
  4170fc:	cmp    BYTE PTR [eax-0x4bffb55c],bh
  417102:	imul   edx,DWORD PTR [esi],0x5
  417105:	lods   eax,DWORD PTR ds:[esi]
  417106:	add    BYTE PTR [edx],bh
  417108:	jmp    0x783b:0xa3a34d5
  41710f:	inc    edi
  417110:	sar    DWORD PTR [ecx-0x2ebba069],0x20
  417117:	retf   0xd969
  41711a:	iret   
  41711b:	add    ebx,DWORD PTR [ebp-0x669fd47d]
  417121:	mov    dh,0x87
  417123:	mov    DWORD PTR [esi+ecx*4-0x1],0xa8f31b3b
  41712b:	adc    dh,ah
  41712d:	add    ebx,DWORD PTR [esi-0x3e]
  417130:	es dec eax
  417132:	push   esp
  417133:	aas    
  417134:	mov    esi,0x765fa944
  417139:	je     0x417167
  41713b:	xor    DWORD PTR [eax+esi*8+0x33],eax
  41713f:	fxch   st(5)
  417141:	mov    al,0x41
  417143:	into   
  417144:	mov    al,ds:0x563e555a
  417149:	fistp  WORD PTR [esi]
  41714b:	cmp    eax,0x6aa3d69f
  417150:	mov    ch,0xc6
  417152:	std    
  417153:	ins    BYTE PTR es:[edi],dx
  417154:	jmp    0x3844:0x2cf8c75
  41715b:	fst    QWORD PTR [edi+0x35]
  41715e:	push   es
  41715f:	lds    esi,FWORD PTR [eax+esi*4]
  417162:	or     edx,DWORD PTR [ebx-0x51ffcd9d]
  417168:	dec    ebx
  417169:	ror    DWORD PTR [ebx-0x8],0x6e
  41716d:	xor    al,0xa
  41716f:	push   0xffffffbf
  417171:	push   ds
  417172:	ins    DWORD PTR es:[edi],dx
  417173:	jnp    0x4171dd
  417175:	dec    edx
  417176:	(bad)  
  417177:	pusha  
  417178:	jecxz  0x4171b3
  41717a:	shr    ebp,cl
  41717c:	lea    edi,[ecx+eax*8]
  41717f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417180:	sub    DWORD PTR [edi+edx*4-0x7d977369],0xffffffd0
  417188:	sahf   
  417189:	adc    ebp,esp
  41718b:	sti    
  41718c:	inc    ebx
  41718d:	fimul  WORD PTR [edi]
  41718f:	shl    DWORD PTR [edx-0x786617ff],cl
  417195:	dec    esp
  417196:	leave  
  417197:	retf   
  417198:	lods   eax,DWORD PTR ds:[esi]
  417199:	(bad)  
  41719a:	scas   eax,DWORD PTR es:[edi]
  41719b:	jecxz  0x41717b
  41719d:	je     0x4171dd
  41719f:	ins    BYTE PTR es:[edi],dx
  4171a0:	push   0x202d07b0
  4171a5:	adc    DWORD PTR [ecx+0x17],eax
  4171a8:	test   BYTE PTR [eax],ah
  4171aa:	sbb    eax,0xb493ff4d
  4171af:	xor    BYTE PTR [eax+0x0],cl
  4171b2:	add    ch,BYTE PTR [esi+0x6287890d]
  4171b8:	inc    eax
  4171b9:	(bad)  
  4171ba:	out    0xb8,al
  4171bc:	inc    eax
  4171bd:	mov    ds,WORD PTR [esi+0x5285ee6c]
  4171c3:	mov    cl,0xa7
  4171c5:	lock cdq 
  4171c7:	push   ebx
  4171c8:	xchg   esi,eax
  4171c9:	mov    ecx,0x29680c96
  4171ce:	ins    DWORD PTR es:[edi],dx
  4171cf:	inc    edx
  4171d0:	dec    eax
  4171d1:	and    BYTE PTR [esi],ch
  4171d3:	shl    BYTE PTR [eax-0x68],0xc3
  4171d7:	out    0xb4,al
  4171d9:	retf   
  4171da:	xchg   DWORD PTR [eax+ecx*8+0x38eff9f1],ebp
  4171e1:	jmp    FWORD PTR ss:[ebp-0x26cd9e3b]
  4171e8:	mov    fs,WORD PTR ds:0x86c1731a
  4171ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ef:	or     DWORD PTR [esi+0x3c],eax
  4171f2:	xchg   esi,eax
  4171f3:	out    0xff,eax
  4171f5:	add    al,0x4b
  4171f7:	jnp    0x417181
  4171f9:	(bad)  
  4171fb:	mov    dl,BYTE PTR es:[ebx+edi*8+0x69]
  417200:	fsub   DWORD PTR [edx+0x3c]
  417203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417204:	sbb    ch,0xc6
  417207:	cmp    al,0x81
  417209:	push   esi
  41720a:	mov    fs,ebx
  41720c:	int3   
  41720d:	add    bl,al
  41720f:	lods   al,BYTE PTR ds:[esi]
  417210:	xchg   edx,eax
  417211:	out    0xde,al
  417213:	adc    BYTE PTR [edi],0x62
  417216:	push   ebx
  417217:	ja     0x4171b9
  417219:	xor    eax,0xab0fab37
  41721e:	xor    BYTE PTR [esi-0x1f8e4d58],bh
  417224:	xchg   edx,eax
  417225:	fist   WORD PTR [ebx+0x2c]
  417228:	fiadd  DWORD PTR [edx-0x3f]
  41722b:	inc    esi
  41722c:	icebp  
  41722d:	cs leave 
  41722f:	imul   ebx,DWORD PTR [ebx-0x40c9d128],0xd570335e
  417239:	sub    eax,0x9db1dbad
  41723e:	inc    edi
  41723f:	inc    edi
  417240:	ficomp WORD PTR [esi+0x33]
  417243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417244:	fdivr  QWORD PTR [ebx]
  417246:	fnstenv [ecx-0x10]
  417249:	aas    
  41724a:	or     eax,0x48ad7d77
  41724f:	neg    DWORD PTR [edi]
  417251:	cmp    BYTE PTR [edx+0x7e],cl
  417254:	sub    ebp,DWORD PTR [esi+0x46]
  417257:	push   ebx
  417258:	ss jmp 0x51817a3f
  41725e:	add    esi,DWORD PTR [edi+0x5004e298]
  417264:	ss shr edx,cl
  417267:	imul   esp,DWORD PTR [ecx+0x4f],0x1b
  41726b:	jne    0x4171fc
  41726d:	dec    ebx
  41726e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41726f:	gs aas 
  417271:	xor    dl,BYTE PTR [ecx]
  417273:	fsub   DWORD PTR [eax+ecx*1-0x54c36d11]
  41727a:	std    
  41727b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41727c:	leave  
  41727d:	aas    
  41727e:	mov    eax,ds:0xf2b7fb67
  417283:	xchg   ebp,eax
  417284:	idiv   DWORD PTR [esp+ebp*4+0x211eface]
  41728b:	sub    DWORD PTR [ebx],0x8b530a0c
  417291:	fwait
  417292:	adc    ch,bl
  417294:	sub    edi,DWORD PTR [ebp+edx*4+0x24fbeb91]
  41729b:	test   al,0x46
  41729d:	jae    0x4172ca
  41729f:	es scas eax,DWORD PTR es:[edi]
  4172a1:	and    eax,DWORD PTR [ecx+0x640332ef]
  4172a7:	cli    
  4172a8:	mov    edx,0x5309569b
  4172ae:	dec    ecx
  4172af:	xchg   ecx,ecx
  4172b1:	push   esi
  4172b2:	lds    ecx,FWORD PTR [esi+esi*2-0x25]
  4172b6:	shr    BYTE PTR [esi+0x1b],1
  4172b9:	sbb    eax,0x4209140a
  4172be:	aad    0x44
  4172c0:	in     eax,dx
  4172c1:	jmp    0xba630a1d
  4172c6:	aaa    
  4172c7:	lds    esp,FWORD PTR [edx+0x70]
  4172ca:	test   DWORD PTR [ebp+0x3],ebx
  4172cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ce:	sbb    cl,BYTE PTR [ebx+eiz*8-0x1f]
  4172d2:	inc    esp
  4172d3:	or     DWORD PTR [edi+0x70],ebx
  4172d6:	test   al,0xc7
  4172d8:	mov    eax,ds:0xbf7ac19b
  4172dd:	test   DWORD PTR [esi],ecx
  4172df:	imul   esp,DWORD PTR [esp+ecx*1+0x7aa636f4],0xb9bb0067
  4172ea:	out    0x71,al
  4172ec:	dec    esi
  4172ed:	fsubr  st,st(0)
  4172ef:	xchg   edx,eax
  4172f0:	jmp    0xdf0:0xe6ce6ef1
  4172f7:	nop
  4172f8:	add    edx,ebx
  4172fa:	(bad)
  4172fe:	popa   
  4172ff:	push   edx
  417300:	xor    al,BYTE PTR [edx+edx*8]
  417303:	mov    edx,0x91fc3010
  417308:	cli    
  417309:	stos   BYTE PTR es:[edi],al
  41730a:	cli    
  41730b:	test   BYTE PTR [edi],bh
  41730d:	sahf   
  41730e:	in     eax,0xea
  417310:	ret    0x53f8
  417313:	dec    eax
  417314:	(bad)  
  417315:	std    
  417316:	cs inc eax
  417318:	inc    ebp
  417319:	push   es
  41731a:	mov    DWORD PTR [esi-0x31],esi
  41731d:	dec    eax
  41731e:	mov    bh,0x44
  417320:	test   DWORD PTR [edx+0x34],esi
  417323:	loop   0x417305
  417325:	(bad)  
  417326:	addr16 jne 0x4173a3
  417329:	mov    ebp,0x94886a32
  41732e:	fiadd  DWORD PTR [esi]
  417330:	dec    ebp
  417331:	std    
  417332:	(bad)  
  417333:	adc    edx,DWORD PTR [ebp+0x65]
  417336:	repnz out 0xbe,al
  417339:	ret    0x745f
  41733c:	inc    ecx
  41733d:	mov    bl,0x9f
  41733f:	lea    edi,[edi+0x13]
  417342:	test   BYTE PTR [ebp-0x30a73f39],0x80
  417349:	gs in  al,0xe5
  41734c:	les    ebp,FWORD PTR [edx+0x1ca860f]
  417352:	test   eax,0xdf486ad5
  417357:	mov    eax,ds:0x8e34062b
  41735c:	adc    al,0xdd
  41735e:	mov    WORD PTR [ebp+0x74],ss
  417361:	es mov ecx,0x549dd8cb
  417367:	inc    esi
  417368:	xchg   BYTE PTR [ecx-0xe590030],al
  41736e:	dec    edx
  41736f:	adc    al,BYTE PTR [ecx]
  417371:	retf   0x352f
  417374:	ins    BYTE PTR es:[edi],dx
  417375:	outs   dx,DWORD PTR ds:[esi]
  417376:	aad    0x57
  417378:	jmp    0x3e54f50
  41737d:	and    esp,edi
  41737f:	xor    bl,BYTE PTR [eax-0x3d]
  417382:	xor    al,0x17
  417384:	fs retf 
  417386:	adc    edx,esp
  417388:	xchg   ebp,eax
  417389:	lea    eax,[ebp+0x1c]
  41738c:	xor    eax,0xdf498e0b
  417391:	clc    
  417392:	iret   
  417393:	xor    al,BYTE PTR [ebx]
  417395:	fmulp  st(6),st
  417397:	dec    esi
  417398:	xchg   ebx,eax
  417399:	das    
  41739a:	xor    eax,0xffffff93
  41739d:	shr    DWORD PTR [eax+0x27],1
  4173a0:	or     DWORD PTR [edx+0x64598463],esi
  4173a6:	mov    cl,al
  4173a8:	mov    esi,0xd92ff267
  4173ad:	outs   dx,DWORD PTR ds:[esi]
  4173ae:	and    bh,BYTE PTR [edx-0x2a28584e]
  4173b4:	xchg   ecx,eax
  4173b5:	test   BYTE PTR ds:0xa746ff60,ah
  4173bb:	nop
  4173bc:	xchg   BYTE PTR ds:0x2c31abde,ch
  4173c2:	je     0x4173c7
  4173c4:	stc    
  4173c5:	out    dx,al
  4173c6:	shl    esp,1
  4173c8:	ins    DWORD PTR es:[edi],dx
  4173c9:	imul   dx,WORD PTR [edx-0x52],0x96f6
  4173cf:	mov    bh,0x90
  4173d1:	inc    esi
  4173d2:	loop   0x41741a
  4173d4:	(bad)  
  4173d5:	int3   
  4173d6:	sahf   
  4173d7:	nop
  4173d8:	mov    edx,0x68550e76
  4173dd:	in     eax,0xae
  4173df:	aam    0x8
  4173e1:	ret    0xe241
  4173e4:	arpl   WORD PTR [esi],bx
  4173e6:	(bad)  
  4173e7:	repz fwait
  4173e9:	loop   0x41743f
  4173eb:	dec    eax
  4173ec:	ret    0xa5b8
  4173ef:	clc    
  4173f0:	xchg   esp,eax
  4173f1:	addr16 ffree st(7)
  4173f4:	sbb    dh,ah
  4173f6:	push   0xfff81c13
  4173fb:	dec    ebx
  4173fc:	pusha  
  4173fd:	ds mov cl,0x45
  417400:	mov    esi,0x997ad16b
  417405:	mov    ecx,0xddbefbc4
  41740a:	out    0xa1,eax
  41740c:	mov    ds:0xeff15e25,eax
  417411:	sbb    al,0x12
  417413:	adc    ah,BYTE PTR [ebx-0x4e]
  417416:	daa    
  417417:	add    esi,edi
  417419:	call   0x6eb96351
  41741e:	pop    ebx
  41741f:	sub    BYTE PTR [ebp+0x300f78ed],al
  417425:	(bad)  
  417426:	pop    ecx
  417427:	lods   al,BYTE PTR ds:[esi]
  417428:	mov    esi,0xb93a9b85
  41742d:	call   0x227e:0x449f1700
  417434:	sub    eax,0x4e96d25e
  417439:	ins    DWORD PTR es:[edi],dx
  41743a:	and    ch,BYTE PTR [ebx+0x66e450fb]
  417440:	sub    esp,eax
  417442:	add    eax,esp
  417444:	cdq    
  417445:	mov    dh,0xa4
  417447:	loop   0x41740c
  417449:	cmp    BYTE PTR [ecx],ah
  41744b:	jns    0x41746c
  41744d:	and    al,0x81
  41744f:	sub    al,0x45
  417451:	dec    eax
  417452:	int3   
  417453:	and    al,0xb
  417455:	test   DWORD PTR [edi-0x5c88bdda],ecx
  41745b:	not    ebx
  41745d:	inc    esp
  41745e:	mov    eax,0x67097a8d
  417463:	pushf  
  417464:	out    0xf2,al
  417466:	ins    BYTE PTR es:[edi],dx
  417467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417468:	dec    ecx
  417469:	mov    bl,0xcf
  41746b:	(bad)  
  41746c:	xlat   BYTE PTR ds:[ebx]
  41746d:	popf   
  41746e:	lds    esp,FWORD PTR [ebp+0x29]
  417471:	lods   eax,DWORD PTR ss:[esi]
  417473:	mov    WORD PTR [ebp+ecx*1+0x34a05fb6],?
  41747a:	in     eax,dx
  41747b:	jbe    0x417479
  41747d:	test   al,0xe
  41747f:	xor    DWORD PTR [ecx-0x12],edx
  417482:	jne    0x417473
  417484:	outs   dx,DWORD PTR ds:[esi]
  417485:	cmp    BYTE PTR [edx+0x3b],bl
  417488:	rcl    DWORD PTR [ebx-0x4ae6dd66],1
  41748e:	cmp    eax,0x1f4e65d7
  417493:	sahf   
  417494:	push   0xc9c8c51e
  417499:	sbb    ah,BYTE PTR [ebx+0x74]
  41749c:	push   0x11
  41749e:	div    BYTE PTR [eax+0x7a]
  4174a1:	enter  0x80e5,0x42
  4174a5:	xchg   edi,eax
  4174a6:	pop    ecx
  4174a7:	xlat   BYTE PTR ds:[ebx]
  4174a8:	jecxz  0x4174c3
  4174aa:	adc    BYTE PTR [ebp+0x7e027f99],al
  4174b0:	jbe    0x417443
  4174b2:	bound  edi,QWORD PTR [edx]
  4174b4:	shl    BYTE PTR [ebx+0x73b6ab86],1
  4174ba:	in     eax,dx
  4174bb:	xchg   BYTE PTR [eax-0x4e],cl
  4174be:	(bad)
  4174c1:	pop    esp
  4174c2:	enter  0x2c96,0x83
  4174c6:	dec    esp
  4174c7:	xchg   edx,eax
  4174c8:	out    dx,eax
  4174c9:	loope  0x417529
  4174cb:	mov    BYTE PTR [ebp+0x1d],0x17
  4174cf:	jne    0x4174ab
  4174d1:	into   
  4174d2:	out    dx,al
  4174d3:	retf   
  4174d4:	and    dl,dh
  4174d6:	cmp    al,0xdc
  4174d8:	sahf   
  4174d9:	push   edx
  4174da:	gs sub al,0x66
  4174dd:	out    dx,al
  4174de:	xor    dh,BYTE PTR [esp+ebp*4-0x2fd76fca]
  4174e5:	or     BYTE PTR [eax],0x5b
  4174e8:	mov    bh,0xeb
  4174ea:	push   0x673e13
  4174ef:	popf   
  4174f0:	jne    0x41754e
  4174f2:	xchg   esi,eax
  4174f3:	hlt    
  4174f4:	inc    edi
  4174f5:	ror    DWORD PTR [ecx+edx*2+0x1c126018],cl
  4174fc:	retf   0x93be
  4174ff:	mov    eax,ds:0x84ca2f00
  417504:	retf   
  417505:	xchg   edx,eax
  417506:	xchg   esi,eax
  417507:	ret    
  417508:	fwait
  417509:	(bad)  
  41750a:	mov    al,ds:0xeb3a7715
  41750f:	aas    
  417510:	ret    0xa891
  417513:	mov    bl,BYTE PTR [esi+0x31]
  417516:	call   0xd3ca:0x487ea556
  41751d:	sbb    DWORD PTR [edi-0x67],0x3d
  417521:	push   ds
  417522:	retf   0x199f
  417525:	loop   0x41754c
  417527:	or     edx,ebx
  417529:	(bad)  
  41752b:	jnp    0x4174f8
  41752d:	in     al,dx
  41752e:	jne    0x4174db
  417530:	clc    
  417531:	adc    ebx,DWORD PTR [esi-0x41434efe]
  417537:	push   ss
  417538:	int    0x11
  41753a:	mov    ebp,eax
  41753c:	xchg   edx,eax
  41753d:	pop    edi
  41753e:	xor    BYTE PTR [eax],dl
  417540:	leave  
  417541:	fisub  WORD PTR [edx]
  417543:	dec    ebx
  417544:	imul   ebp,DWORD PTR [eax-0x34],0x5c
  417548:	mov    al,0x65
  41754a:	jge    0x41757d
  41754c:	fsubr  DWORD PTR [esi]
  41754e:	sbb    DWORD PTR ds:[ebp+0x6afc536e],eax
  417555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417556:	ja     0x4175d7
  417558:	pop    ss
  417559:	(bad)  
  41755a:	push   cs
  41755b:	sbb    eax,0x4bf6d355
  417560:	leave  
  417561:	js     0x417593
  417563:	push   cs
  417564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417565:	push   cs
  417566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417567:	int3   
  417568:	xor    al,0xf7
  41756a:	scas   al,BYTE PTR es:[edi]
  41756b:	ins    BYTE PTR es:[edi],dx
  41756c:	or     bl,BYTE PTR [edx-0x47175e4b]
  417572:	pop    esp
  417573:	out    0x9f,al
  417575:	jne    0x41753e
  417577:	adc    DWORD PTR [ebp+0x41],edi
  41757a:	jmp    0x4175bf
  41757c:	push   ebx
  41757d:	mov    esi,0xed1483b8
  417582:	jno    0x417511
  417584:	mov    esp,0x436ba8bb
  417589:	push   cs
  41758a:	xor    edx,ebp
  41758c:	dec    edx
  41758d:	or     BYTE PTR [esi+0x2],ah
  417590:	or     esp,DWORD PTR [ecx-0x22cce417]
  417596:	lea    esi,[ecx-0x79]
  417599:	push   eax
  41759a:	aam    0x3c
  41759c:	jg     0x4175a8
  41759e:	(bad)  
  41759f:	je     0x417591
  4175a1:	pop    eax
  4175a2:	lea    ebp,[edi]
  4175a4:	imul   edx
  4175a6:	stos   BYTE PTR es:[edi],al
  4175a7:	loope  0x4175a9
  4175a9:	repz mov WORD PTR [edi+0x70b08003],gs
  4175b0:	sub    bh,dh
  4175b2:	adc    eax,0xc910af7
  4175b7:	mov    ecx,0x37b3aa86
  4175bc:	adc    eax,0x6f746edd
  4175c1:	mov    WORD PTR [edi+eiz*1],es
  4175c4:	in     al,dx
  4175c5:	inc    esp
  4175c6:	ss cmp eax,0x3be28e2d
  4175cc:	push   eax
  4175cd:	hlt    
  4175ce:	jge    0x41764d
  4175d0:	mov    al,0x69
  4175d2:	sbb    BYTE PTR [edi],ch
  4175d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175d5:	arpl   WORD PTR [ebx-0x7b452c15],si
  4175db:	invd   
  4175dd:	mov    eax,0xb6bae6e1
  4175e2:	mov    DWORD PTR [edi+ebp*4-0x2a41f5ee],esi
  4175e9:	inc    ebp
  4175ea:	xchg   DWORD PTR [esi+edi*2+0x8dc31a5],eax
  4175f1:	rol    bh,0xa5
  4175f4:	rcl    DWORD PTR [eax+0x36af54b8],1
  4175fa:	mov    dh,0x2
  4175fc:	push   esp
  4175fd:	mov    ecx,0xb04e23c6
  417602:	pop    ebp
  417603:	js     0x4175c8
  417605:	add    dh,al
  417607:	push   edi
  417608:	dec    eax
  417609:	sti    
  41760a:	(bad)  
  41760b:	retf   0xee2e
  41760e:	scas   eax,DWORD PTR es:[edi]
  41760f:	mov    ds:0x96682171,eax
  417614:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417616:	xor    al,0xc9
  417618:	cs test cl,0x70
  41761c:	xchg   DWORD PTR [eax+0x17629f2b],eax
  417622:	xchg   edx,eax
  417623:	pop    ds
  417624:	dec    esi
  417625:	add    BYTE PTR [edx+eiz*2-0x29],ah
  417629:	imul   esi,DWORD PTR [eax],0x72
  41762c:	cmp    ebx,ebp
  41762e:	xor    DWORD PTR [edi],edi
  417630:	loopne 0x417629
  417632:	xchg   ebp,eax
  417633:	jmp    0x4175d5
  417635:	pushf  
  417636:	ja     0x41766b
  417638:	jnp    0x4176b1
  41763a:	add    BYTE PTR [eax-0x80],dh
  41763d:	fwait
  41763e:	scas   al,BYTE PTR es:[edi]
  41763f:	and    al,0x17
  417641:	js     0x417646
  417643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417644:	mov    ah,0xee
  417646:	pop    DWORD PTR [ebp+0x2abd2bf0]
  41764c:	ret    
  41764d:	mov    ebx,0x19b291f7
  417652:	mov    esp,0xe719a85f
  417657:	sub    DWORD PTR [ecx+0x1db9eb95],ebx
  41765d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41765e:	imul   edx,DWORD PTR [edi-0x10],0x160e3ff7
  417665:	add    eax,0xd6ddab07
  41766a:	sbb    DWORD PTR [ebp+0x55],0xffffffa5
  41766e:	sbb    BYTE PTR [edx-0xa],cl
  417671:	aas    
  417672:	push   ecx
  417673:	je     0x4176c0
  417675:	pop    esi
  417676:	push   0x52
  417678:	(bad)  
  417679:	push   eax
  41767a:	or     al,0x7a
  41767c:	push   eax
  41767d:	xchg   edx,eax
  41767e:	lock pop DWORD PTR [edx-0x29b48ddc]
  417685:	in     eax,dx
  417686:	push   0xffffff80
  417688:	fld    TBYTE PTR [ecx]
  41768a:	add    ch,bh
  41768c:	in     eax,dx
  41768d:	fbld   TBYTE PTR [eax]
  41768f:	sbb    esi,DWORD PTR [ebp-0x9]
  417692:	sbb    bh,0xcb
  417695:	adc    dh,BYTE PTR [esi]
  417697:	inc    esp
  417698:	ins    DWORD PTR es:[edi],dx
  417699:	cmp    ch,BYTE PTR [edi-0xe]
  41769c:	mov    ?,WORD PTR [edx-0x4f]
  41769f:	pop    ecx
  4176a0:	rol    dh,1
  4176a2:	aad    0x3b
  4176a4:	sbb    BYTE PTR [ebx+ebp*1+0x36],0x14
  4176a9:	mov    edx,0x68f60c16
  4176ae:	(bad)  
  4176af:	xchg   ecx,eax
  4176b0:	ret    
  4176b1:	daa    
  4176b2:	pusha  
  4176b3:	dec    edx
  4176b4:	mov    eax,0xb35221ce
  4176b9:	ret    0xb0a
  4176bc:	mov    BYTE PTR [edx+0x5f],bl
  4176bf:	push   ebx
  4176c0:	jbe    0x417664
  4176c2:	jmp    0x417742
  4176c4:	dec    edx
  4176c5:	adc    eax,0x62ae4dd9
  4176ca:	aam    0xf4
  4176cc:	cmc    
  4176cd:	jl     0x4176f9
  4176cf:	add    dl,BYTE PTR [ebp+0x6c]
  4176d2:	into   
  4176d3:	adc    DWORD PTR ds:0xa7d24dde,ecx
  4176d9:	pop    esi
  4176da:	out    0x8e,al
  4176dc:	bound  ecx,QWORD PTR [edx]
  4176de:	pushf  
  4176df:	out    dx,al
  4176e0:	dec    ebp
  4176e1:	call   0xa7183e49
  4176e6:	leave  
  4176e7:	cld    
  4176e8:	clc    
  4176e9:	pop    edx
  4176ea:	cmc    
  4176eb:	clc    
  4176ec:	jl     0x417696
  4176ee:	mov    esi,0x34bb740
  4176f3:	and    DWORD PTR [edi],edx
  4176f5:	sub    ch,BYTE PTR [edx-0x77]
  4176f8:	retf   0x50a6
  4176fb:	xchg   edx,eax
  4176fc:	popa   
  4176fd:	inc    ebp
  4176fe:	stos   BYTE PTR es:[edi],al
  4176ff:	pop    ecx
  417700:	scas   al,BYTE PTR es:[edi]
  417701:	fwait
  417702:	dec    ebx
  417703:	dec    ebp
  417704:	adc    eax,DWORD PTR [eax]
  417706:	pop    ss
  417707:	ret    
  417708:	fnsave gs:[esp+edx*2]
  41770c:	es out 0xe9,al
  41770f:	xchg   edx,eax
  417710:	jmp    0x9a9e:0xe8f65f50
  417717:	les    eax,FWORD PTR [eax]
  417719:	push   0xffffffd5
  41771b:	push   ebp
  41771c:	aad    0x3
  41771e:	mov    edx,edx
  417720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417721:	jne    0x417738
  417723:	test   edi,edx
  417725:	pop    esp
  417726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417727:	stos   BYTE PTR es:[edi],al
  417728:	sbb    DWORD PTR [esi+0x4b],0x6f
  41772c:	pusha  
  41772d:	ds scas eax,DWORD PTR es:[edi]
  41772f:	xchg   BYTE PTR [edi-0x7033ff88],cl
  417735:	inc    ebp
  417736:	cmp    eax,ecx
  417738:	push   ds
  417739:	xor    eax,0x15c10f02
  41773e:	adc    DWORD PTR [ebp+0x64],0xffffffcf
  417742:	fidiv  WORD PTR [eax+0x63f6ab4c]
  417748:	hlt    
  417749:	stos   BYTE PTR es:[edi],al
  41774a:	outs   dx,DWORD PTR ds:[esi]
  41774b:	fs (bad) 
  41774d:	push   ebp
  41774e:	sub    eax,0xb671e68e
  417753:	mov    dl,0x33
  417755:	jle    0x4176fb
  417757:	push   0x2e
  417759:	mov    ecx,0x95033929
  41775e:	add    al,0xd
  417760:	pusha  
  417761:	arpl   bp,sp
  417763:	std    
  417764:	xchg   bl,dl
  417766:	bound  ebp,QWORD PTR [ebx]
  417768:	icebp  
  417769:	inc    esp
  41776a:	push   ecx
  41776b:	jmp    0x40f11681
  417770:	arpl   WORD PTR [eax-0x41],dx
  417773:	inc    ecx
  417774:	mov    al,ds:0xc8a8cac5
  417779:	xor    dl,bl
  41777b:	outs   dx,DWORD PTR ds:[esi]
  41777c:	jmp    0x7e72:0x7c9e0694
  417783:	ss mov cl,0xb5
  417786:	xchg   esp,eax
  417787:	and    al,bl
  417789:	loope  0x417794
  41778b:	test   eax,0x74fd5bd3
  417790:	xchg   esp,esi
  417792:	lods   eax,DWORD PTR ds:[esi]
  417793:	xor    esp,ebx
  417795:	cmp    al,0x73
  417797:	mov    bh,0x9b
  417799:	lds    eax,FWORD PTR [eax-0x1e5ca388]
  41779f:	bound  esi,QWORD PTR [edx]
  4177a1:	(bad)  
  4177a2:	icebp  
  4177a3:	xor    al,0x99
  4177a5:	jae    0x4177a3
  4177a7:	adc    al,0x28
  4177a9:	rcl    bh,1
  4177ab:	mov    ebp,ebp
  4177ad:	jnp    0x4177cd
  4177af:	fst    st(2)
  4177b1:	mov    ebp,0x9ba9af3b
  4177b6:	sar    DWORD PTR [ecx],0xe0
  4177b9:	adc    BYTE PTR ds:0xac0cb0fc,bl
  4177bf:	jp     0x417783
  4177c1:	xchg   ebp,ebp
  4177c3:	dec    edx
  4177c4:	pusha  
  4177c5:	jb     0x417840
  4177c7:	adc    DWORD PTR [ecx+0x66],ebp
  4177ca:	fcmovnb st,st(5)
  4177cc:	int    0xf0
  4177ce:	rcl    BYTE PTR [esi+0x3bf48ad9],1
  4177d4:	and    ch,dh
  4177d6:	aaa    
  4177d7:	push   es
  4177d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177d9:	arpl   WORD PTR [eax+0xe87ad17],cx
  4177df:	hlt    
  4177e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177e1:	mov    ebx,0x38bf46ea
  4177e6:	and    eax,0xaf676a66
  4177eb:	int    0xee
  4177ed:	pop    edi
  4177ee:	sbb    ebx,DWORD PTR [ebx+0x3b]
  4177f1:	enter  0xb19f,0x92
  4177f5:	sub    BYTE PTR [eax+0x62],al
  4177f8:	adc    ch,BYTE PTR [esp+esi*8-0x5428ff29]
  4177ff:	mov    esp,0xd54b89fc
  417804:	cmp    al,0xaa
  417806:	jmp    0x69df:0x4c6298ff
  41780d:	cmp    eax,0x479ed8c9
  417812:	shr    ah,cl
  417814:	adc    al,0x44
  417816:	adc    ch,bl
  417818:	data16 mov ah,0xd9
  41781b:	arpl   WORD PTR [ecx-0x5c],di
  41781e:	cmp    al,0x51
  417820:	push   ebp
  417821:	rcl    DWORD PTR [esi],cl
  417823:	in     eax,0xc
  417825:	stos   DWORD PTR es:[edi],eax
  417826:	mov    ds:0x1b00e9cf,al
  41782b:	repnz and DWORD PTR [eax+0x76],esp
  41782f:	add    eax,0x43c7a600
  417834:	push   ebp
  417835:	(bad)  
  417837:	jne    0x417823
  417839:	jl     0x4178aa
  41783b:	aam    0xc3
  41783d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41783e:	pushf  
  41783f:	mov    dh,0x56
  417841:	mov    bl,0xdc
  417843:	push   edx
  417844:	mov    al,0xbf
  417846:	jmp    0x9b300fe3
  41784b:	sub    eax,0xe6dced6f
  417850:	fisubr WORD PTR [edi]
  417852:	mov    ?,WORD PTR [esi-0x65]
  417855:	psllq  mm1,QWORD PTR [ecx+ebp*2]
  417859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41785a:	fistp  WORD PTR [edx]
  41785c:	iret   
  41785d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41785e:	cld    
  41785f:	mov    DWORD PTR [edi+ebp*2-0x9],0xbe6bea1a
  417867:	cmp    esp,ebx
  417869:	or     eax,0xb9b1db4f
  41786e:	in     eax,0xba
  417870:	xlat   BYTE PTR ds:[ebx]
  417871:	dec    edi
  417872:	cmp    eax,0xb34b0172
  417877:	jnp    0x417886
  417879:	pushf  
  41787a:	xchg   ebx,eax
  41787b:	sbb    al,BYTE PTR [eax-0x4b4af2b0]
  417881:	arpl   si,di
  417883:	sbb    BYTE PTR [edx+0x7b],ah
  417886:	shl    BYTE PTR [esi],0x5c
  417889:	inc    edx
  41788a:	out    dx,al
  41788b:	jo     0x4178b4
  41788d:	sub    esi,DWORD PTR [ecx+0x1fc5e440]
  417893:	fisubr WORD PTR [esi]
  417895:	push   edi
  417896:	mov    ds,eax
  417898:	jb     0x4178e5
  41789a:	mov    al,ds:0xf8998ae6
  41789f:	sbb    DWORD PTR [ebx-0x64183c08],0xdb9e320b
  4178a9:	paddq  mm5,QWORD PTR [edi+0x488ae4ff]
  4178b0:	pop    ebp
  4178b1:	aam    0xd4
  4178b3:	push   esi
  4178b4:	stos   BYTE PTR es:[edi],al
  4178b5:	scas   eax,DWORD PTR es:[edi]
  4178b6:	inc    esp
  4178b7:	fidiv  WORD PTR [ebx-0x6e2c9df5]
  4178bd:	outs   dx,BYTE PTR ss:[esi]
  4178bf:	push   es
  4178c0:	sbb    al,0x1e
  4178c2:	sar    BYTE PTR [esi-0x2ccd584d],cl
  4178c8:	jbe    0x4178de
  4178ca:	out    dx,eax
  4178cb:	fwait
  4178cc:	push   eax
  4178cd:	pop    ss
  4178ce:	or     edx,edi
  4178d0:	out    dx,eax
  4178d1:	jne    0x4178ce
  4178d3:	les    ebp,FWORD PTR [esi]
  4178d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178d6:	push   ss
  4178d7:	data16 cmp al,0xe0
  4178da:	ficom  WORD PTR [ebx-0x63]
  4178dd:	or     ebx,DWORD PTR [ebx-0x7c9ab8a]
  4178e3:	(bad)  
  4178e4:	les    edi,FWORD PTR [esi-0x49]
  4178e7:	pop    ebx
  4178e8:	xchg   edi,eax
  4178e9:	ja     0x4178e0
  4178eb:	inc    ecx
  4178ec:	dec    ebp
  4178ed:	les    esi,FWORD PTR [eax-0x24]
  4178f0:	mov    cl,0xec
  4178f2:	int    0x33
  4178f4:	pop    ds
  4178f5:	enter  0x29ab,0x4
  4178f9:	mov    ah,0x3f
  4178fb:	enter  0x58b4,0xf9
  4178ff:	bound  esi,QWORD PTR [ecx-0x178adb48]
  417905:	fnstenv [ecx-0x79eef259]
  41790b:	stos   DWORD PTR es:[edi],eax
  41790c:	retf   0x8c7d
  41790f:	outs   dx,DWORD PTR ds:[esi]
  417910:	push   cs
  417911:	push   eax
  417912:	xchg   ebx,eax
  417913:	jp     0x41794d
  417915:	cmp    BYTE PTR [ecx],dl
  417917:	imul   esi,DWORD PTR [edi+0x3f],0x2d
  41791b:	xchg   ecx,eax
  41791c:	daa    
  41791d:	pushf  
  41791e:	shl    edx,0xbf
  417921:	xchg   esp,eax
  417922:	cdq    
  417923:	ins    DWORD PTR es:[edi],dx
  417924:	dec    edi
  417925:	jns    0x4178f1
  417927:	loop   0x4178dd
  417929:	jle    0x417909
  41792b:	mov    eax,ds:0xfd3bd791
  417930:	jle    0x4178d3
  417932:	push   0x4832af90
  417937:	cmp    al,0x36
  417939:	out    0x4e,al
  41793b:	(bad)  
  41793c:	sub    eax,0xb3dd2a
  417941:	cdq    
  417942:	add    BYTE PTR [ebp+0x6f],bh
  417945:	rol    DWORD PTR [edi+0x2a51403d],0x57
  41794c:	call   0x74ca:0x919c8006
  417953:	cli    
  417954:	mov    esi,DWORD PTR [edx+ebx*2]
  417957:	dec    ebp
  417958:	xchg   BYTE PTR [esi+eax*8],ch
  41795b:	mov    ds:0x77880d82,eax
  417960:	shr    BYTE PTR [edi+0x183a7889],1
  417966:	push   0x61105d24
  41796b:	ja     0x417927
  41796d:	fldcw  WORD PTR [ebx-0x39031b]
  417973:	pop    edx
  417974:	push   0xffffffb5
  417976:	(bad)  
  417977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417978:	lea    ecx,[ecx-0x2a]
  41797b:	or     BYTE PTR [ecx-0x23],cl
  41797e:	dec    esi
  41797f:	ds int3 
  417981:	out    dx,al
  417982:	fwait
  417983:	jmp    DWORD PTR [ecx+0x52]
  417986:	(bad)  
  417987:	sub    BYTE PTR ds:0xa630b04c,cl
  41798d:	or     ebp,DWORD PTR [esi-0x28]
  417990:	jno    0x417a0d
  417992:	pop    ss
  417993:	hlt    
  417994:	pop    edx
  417995:	adc    al,0x3
  417997:	pop    ecx
  417998:	rcl    DWORD PTR [ebp+eax*1+0x63],1
  41799c:	sub    BYTE PTR gs:[eax-0x2a],bl
  4179a0:	rcl    DWORD PTR [edi+0x7599a7d4],cl
  4179a6:	test   BYTE PTR [eax-0x63971875],dh
  4179ac:	iret   
  4179ad:	mov    ebp,DWORD PTR [edi-0x20bac0c3]
  4179b3:	call   0xc052:0x6e5ba302
  4179ba:	shl    bh,cl
  4179bc:	pop    gs
  4179be:	ja     0x4179f9
  4179c0:	jae    0x417958
  4179c2:	push   edx
  4179c3:	pushf  
  4179c4:	test   BYTE PTR [ecx+0x9f0723c],0x8d
  4179cb:	mov    bh,0x27
  4179cd:	stos   BYTE PTR es:[edi],al
  4179ce:	(bad)  
  4179cf:	bound  esp,QWORD PTR [eax+0x7d]
  4179d2:	shl    eax,1
  4179d4:	mov    edx,0xc75a5ac5
  4179d9:	pop    ebx
  4179da:	lods   al,BYTE PTR ds:[esi]
  4179db:	leave  
  4179dc:	xor    edx,DWORD PTR [bx+di]
  4179df:	sbb    DWORD PTR [edi],0x69
  4179e2:	push   ebp
  4179e3:	xchg   DWORD PTR gs:[edx],ecx
  4179e6:	aas    
  4179e7:	xchg   ecx,eax
  4179e8:	and    edx,DWORD PTR [eax]
  4179ea:	mov    ds:0x7da6e5da,al
  4179ef:	xchg   esi,eax
  4179f0:	(bad)  
  4179f1:	sub    eax,0xd901f34c
  4179f6:	fst    QWORD PTR [ebx-0x6]
  4179f9:	mov    dh,cl
  4179fb:	rol    DWORD PTR [edi+ecx*2-0x17371d6],1
  417a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a03:	mov    ch,0x90
  417a05:	jl     0x417992
  417a07:	jge    0x4179f1
  417a09:	out    0xb8,al
  417a0b:	jns    0x417a14
  417a0d:	push   ds
  417a0e:	mov    bh,BYTE PTR [ebx]
  417a10:	sub    dh,BYTE PTR [ebx+0x28]
  417a13:	adc    al,0x5
  417a15:	shl    DWORD PTR [esi],1
  417a17:	scas   eax,DWORD PTR es:[edi]
  417a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a19:	add    DWORD PTR [edi-0x70],edx
  417a1c:	sub    al,0xe8
  417a1e:	mov    WORD PTR [ecx+0x1e],gs
  417a21:	ret    
  417a22:	outs   dx,DWORD PTR ds:[esi]
  417a23:	pop    esp
  417a24:	add    BYTE PTR [eax],dh
  417a26:	dec    edx
  417a27:	imul   edx,DWORD PTR [edi+0x4e5f466],0x6422d638
  417a31:	(bad)  
  417a32:	out    dx,al
  417a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a34:	ror    BYTE PTR [edx-0x429b1471],1
  417a3a:	test   eax,0xf78fdc84
  417a3f:	int3   
  417a40:	inc    eax
  417a41:	and    cl,BYTE PTR [ecx+0x7b]
  417a44:	pushf  
  417a45:	or     al,0x1d
  417a47:	cmp    BYTE PTR [edx+0x7b],dl
  417a4a:	cmp    DWORD PTR [eax+0x7a],0x3f
  417a4e:	mov    edx,0x293699cf
  417a53:	push   esi
  417a54:	test   al,0xfb
  417a56:	jae    0x417ad2
  417a58:	das    
  417a59:	cmp    eax,0x21862b06
  417a5e:	fst    QWORD PTR [ebx]
  417a60:	test   eax,0x6d1bfb0
  417a65:	dec    eax
  417a66:	in     eax,0x6a
  417a68:	nop
  417a69:	test   al,0x5
  417a6b:	mov    fs,ebp
  417a6d:	shr    DWORD PTR [ebx],0x77
  417a70:	dec    ebp
  417a71:	fstp   DWORD PTR [edi+0x3c8a275a]
  417a77:	fsubrp st(1),st
  417a79:	adc    BYTE PTR [eax+0x13],0x85
  417a7d:	push   edi
  417a7e:	clc    
  417a7f:	pop    esi
  417a80:	pop    ecx
  417a81:	dec    edx
  417a82:	jle    0x417aaf
  417a84:	mov    al,0x96
  417a86:	mov    cl,0x52
  417a88:	ins    BYTE PTR es:[edi],dx
  417a89:	pop    esi
  417a8a:	mov    DWORD PTR [bx-0x23],ebx
  417a8e:	adc    al,0xb4
  417a90:	adc    al,0x61
  417a92:	and    eax,0x96a61f08
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	pusha  
  417a99:	or     al,0xc2
  417a9b:	cwde   
  417a9c:	inc    esi
  417a9d:	xchg   ecx,eax
  417a9e:	dec    ecx
  417a9f:	test   DWORD PTR [ebx-0x46],0xa9791cd0
  417aa6:	ja     0x417a54
  417aa8:	adc    al,BYTE PTR ds:0xb673710b
  417aae:	dec    ebp
  417aaf:	and    DWORD PTR [ecx+0x18],0xffffffe3
  417ab3:	ficom  DWORD PTR [ebx]
  417ab5:	adc    bl,BYTE PTR [edi+0x4d]
  417ab8:	stos   BYTE PTR es:[edi],al
  417ab9:	dec    ecx
  417aba:	rcr    DWORD PTR fs:[ecx-0x6cef1c34],cl
  417ac1:	mov    edi,DWORD PTR [esi+0x3a]
  417ac4:	pop    ss
  417ac5:	(bad)  
  417ac6:	int    0x98
  417ac8:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417aca:	push   0x69
  417acc:	dec    edx
  417acd:	fdivr  QWORD PTR [ebx-0x1e1769e6]
  417ad3:	pop    ebp
  417ad4:	xor    eax,DWORD PTR [edx]
  417ad6:	pop    esp
  417ad7:	jp     0x417b39
  417ad9:	mov    esi,0xd4f3792f
  417ade:	xor    eax,0x411bfaf6
  417ae3:	shr    BYTE PTR [edi],1
  417ae5:	(bad)  
  417ae7:	ror    BYTE PTR [edx+0x1],cl
  417aea:	sub    eax,0x6bc523de
  417aef:	aam    0x13
  417af1:	jne    0x417a7f
  417af3:	(bad)  
  417af4:	in     eax,0x8
  417af6:	mov    ds:0x795b7561,al
  417afb:	(bad)  [edi-0x78]
  417afe:	cld    
  417aff:	and    DWORD PTR [edi],0x7c95f4f
  417b05:	ror    al,cl
  417b07:	iret   
  417b08:	or     DWORD PTR [ecx],ebp
  417b0a:	pop    ds
  417b0b:	sub    al,BYTE PTR ds:0x208e9008
  417b11:	jne    0x417acf
  417b13:	sub    cl,BYTE PTR ds:0x68bffe5c
  417b19:	sbb    cl,BYTE PTR [edi]
  417b1b:	mov    bl,0x55
  417b1d:	mov    bl,BYTE PTR [ecx-0x19377c8d]
  417b23:	jp     0x417b79
  417b25:	pushf  
  417b26:	jmp    0x4b003d54
  417b2b:	popf   
  417b2c:	ins    DWORD PTR es:[edi],dx
  417b2d:	mov    bh,0x64
  417b2f:	mov    dh,0x78
  417b31:	(bad)  
  417b32:	(bad)  
  417b33:	mov    eax,ds:0xffb3598e
  417b38:	pop    ss
  417b39:	leave  
  417b3a:	or     DWORD PTR [edx-0x40],ebx
  417b3d:	std    
  417b3e:	fwait
  417b3f:	call   0x63d64048
  417b44:	repnz out dx,al
  417b46:	leave  
  417b47:	daa    
  417b48:	mov    DWORD PTR [ebx+0x6e16aeda],esi
  417b4e:	call   0x3d0:0xa59763bf
  417b55:	mov    bh,BYTE PTR [esi-0x7a1bae38]
  417b5b:	sub    eax,0xaeb1a0fe
  417b60:	in     eax,dx
  417b61:	repz and bh,al
  417b64:	adc    ebx,edi
  417b66:	shl    DWORD PTR [ebx],1
  417b68:	xor    ah,dl
  417b6a:	pop    edi
  417b6b:	and    DWORD PTR [esi-0x24],ecx
  417b6e:	add    ch,BYTE PTR [ecx-0x36]
  417b71:	call   0x6b53:0x43e2f376
  417b78:	or     al,BYTE PTR [edx-0x1120ca39]
  417b7e:	mov    esi,0xd8e7516d
  417b83:	pusha  
  417b84:	je     0x417b90
  417b86:	aad    0x14
  417b88:	mov    ds:0x5d338dec,al
  417b8d:	inc    ebp
  417b8e:	mov    dl,0x90
  417b90:	outs   dx,BYTE PTR ds:[esi]
  417b91:	mov    eax,0xd63e280f
  417b96:	push   es
  417b97:	jle    0x417be2
  417b99:	mov    esi,0xc77fd00b
  417b9e:	sar    BYTE PTR [ebp+0x26674067],1
  417ba4:	arpl   WORD PTR [edx-0x68],si
  417ba7:	mov    DWORD PTR [edi+0x7c],0x354ca919
  417bae:	xchg   ebp,eax
  417baf:	and    ah,BYTE PTR [esi]
  417bb1:	adc    cl,dh
  417bb3:	sub    ebx,DWORD PTR [edi+0x44]
  417bb6:	stos   BYTE PTR es:[edi],al
  417bb7:	test   al,0x2d
  417bb9:	push   ebx
  417bba:	lds    edi,FWORD PTR [edi]
  417bbc:	dec    ebx
  417bbd:	adc    esp,edx
  417bbf:	add    bl,ah
  417bc1:	lods   eax,DWORD PTR ds:[esi]
  417bc2:	leave  
  417bc3:	add    BYTE PTR [ebx-0x316fd1e9],dh
  417bc9:	fisttp QWORD PTR [eax+eiz*8]
  417bcc:	add    BYTE PTR [edx+0x47],cl
  417bcf:	cdq    
  417bd0:	ins    BYTE PTR es:[edi],dx
  417bd1:	pop    ebx
  417bd2:	fimul  WORD PTR [ebp+0x50]
  417bd5:	sahf   
  417bd6:	dec    edi
  417bd7:	dec    esi
  417bd8:	aas    
  417bd9:	fcomp  DWORD PTR ds:0x8d67547f
  417bdf:	aad    0x19
  417be1:	ds push ss
  417be3:	sbb    BYTE PTR [esp+ecx*1],ch
  417be6:	int3   
  417be7:	push   0x54fb822a
  417bec:	adc    edi,ecx
  417bee:	aaa    
  417bef:	(bad)  
  417bf0:	mov    WORD PTR [esi],ds
  417bf2:	push   ecx
  417bf3:	lods   al,BYTE PTR ds:[esi]
  417bf4:	addr16 or dh,al
  417bf7:	mov    ah,0xf8
  417bf9:	cdq    
  417bfa:	shl    DWORD PTR [esi-0xd],cl
  417bfd:	pop    ecx
  417bfe:	inc    ebx
  417bff:	and    bh,BYTE PTR [ebp-0x4aab334]
  417c05:	in     al,0xa5
  417c07:	xor    edi,DWORD PTR [eax-0x67fe8246]
  417c0d:	and    eax,0x7d1dc98e
  417c12:	pop    ss
  417c13:	jp     0x417ba5
  417c15:	aam    0x4
  417c17:	or     ebp,DWORD PTR [edx]
  417c19:	call   0xa82b:0x1c8d7d6b
  417c20:	cmp    eax,eax
  417c22:	mov    ds:0x7e17988b,al
  417c27:	mov    esi,DWORD PTR [esi+0x6e]
  417c2a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c2c:	push   ds
  417c2d:	fs add eax,0x8852c62c
  417c33:	pop    edx
  417c34:	mov    eax,0xc82f51ab
  417c39:	xor    ebp,DWORD PTR [ecx-0x5d7eb04d]
  417c3f:	sbb    DWORD PTR [edi+0x6721825e],edi
  417c45:	push   0xd4d2b801
  417c4a:	test   al,0x76
  417c4c:	icebp  
  417c4d:	stos   BYTE PTR es:[edi],al
  417c4e:	mov    dh,bh
  417c50:	stos   BYTE PTR es:[edi],al
  417c51:	inc    ecx
  417c52:	adc    al,0xef
  417c54:	add    eax,0x68db8f3c
  417c59:	arpl   WORD PTR [eax-0x39ffc737],ax
  417c5f:	clc    
  417c60:	add    al,0x3e
  417c62:	cmc    
  417c63:	outs   dx,DWORD PTR ds:[esi]
  417c64:	pop    ebp
  417c65:	xor    ecx,edx
  417c67:	sar    DWORD PTR [edi],1
  417c69:	aad    0x9d
  417c6b:	fld    DWORD PTR [ecx-0x2e411c99]
  417c71:	mov    esp,0xa787de3c
  417c76:	in     al,dx
  417c77:	data16 jno 0x417c57
  417c7a:	inc    edx
  417c7b:	scas   eax,DWORD PTR es:[edi]
  417c7c:	out    dx,al
  417c7d:	ja     0x417c65
  417c7f:	popa   
  417c80:	xlat   BYTE PTR ds:[ebx]
  417c81:	call   0x1b80aee4
  417c86:	shr    DWORD PTR [esi],0x9a
  417c89:	or     ebx,DWORD PTR [edi+0x34e978e9]
  417c8f:	ror    BYTE PTR [eax-0x6de92217],1
  417c95:	fcom   QWORD PTR [ebx+0xd6982a6]
  417c9b:	pop    es
  417c9c:	pop    eax
  417c9d:	add    bl,ch
  417c9f:	dec    edx
  417ca0:	cmp    DWORD PTR [ebx+ecx*4+0x5787819c],ebp
  417ca7:	mov    ecx,0x26f49c2a
  417cac:	mov    bl,0x98
  417cae:	lods   eax,DWORD PTR ds:[si]
  417cb0:	push   eax
  417cb1:	sbb    al,0xbf
  417cb3:	jo     0x417cfe
  417cb5:	jno    0x417d35
  417cb7:	cmp    DWORD PTR [ecx-0x40e90b42],ebp
  417cbd:	clc    
  417cbe:	(bad)  
  417cbf:	jecxz  0x417c64
  417cc1:	dec    ebp
  417cc2:	ss int 0x89
  417cc5:	cmp    DWORD PTR [esi],edx
  417cc7:	mov    esi,0xcb2f8de
  417ccc:	add    ebx,esp
  417cce:	add    BYTE PTR [edi-0x7],bl
  417cd1:	call   0x4f5:0x8a73497
  417cd8:	ins    DWORD PTR es:[edi],dx
  417cd9:	sbb    cl,BYTE PTR ds:0xa2c5f05f
  417cdf:	pop    eax
  417ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce1:	(bad)  
  417ce2:	xchg   esp,eax
  417ce3:	mov    DWORD PTR [bx-0x7],esi
  417ce7:	or     al,0x1f
  417ce9:	xor    eax,0x769b755f
  417cee:	sub    ah,ah
  417cf0:	pop    es
  417cf1:	ror    DWORD PTR [ebp-0x73ed188a],1
  417cf7:	mov    eax,ds:0xe439ffdd
  417cfc:	ror    DWORD PTR [eax+eax*4-0x38b1955c],0x16
  417d04:	jo     0x417cd1
  417d06:	sbb    bh,BYTE PTR [edi-0x3980488d]
  417d0c:	or     DWORD PTR [edi-0x41],esi
  417d0f:	lds    ebx,FWORD PTR [ecx+0x3f]
  417d12:	out    0x81,eax
  417d14:	pop    ebp
  417d15:	push   ds
  417d16:	rep lods al,BYTE PTR ds:[esi]
  417d18:	(bad)  [ecx-0x7e4c76ff]
  417d1e:	and    BYTE PTR [eax+ebp*4-0x61],bh
  417d22:	cmp    eax,0x7dea1b59
  417d27:	shr    edi,cl
  417d29:	xchg   edx,eax
  417d2a:	jnp    0x417d1d
  417d2c:	xor    DWORD PTR [esi+ecx*8-0x314d4ff4],edx
  417d33:	jno    0x417d95
  417d35:	stos   DWORD PTR es:[edi],eax
  417d36:	mov    ah,0x22
  417d38:	ret    
  417d39:	mov    ebx,0xea452d7b
  417d3e:	mov    edi,edx
  417d40:	sub    BYTE PTR [ebx],bh
  417d42:	sti    
  417d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d44:	fdivrp st(4),st
  417d46:	xchg   ebx,eax
  417d47:	aam    0x32
  417d49:	mov    al,ds:0x202d982
  417d4e:	cmp    ah,0xa9
  417d51:	add    DWORD PTR [esi],edx
  417d53:	fnstcw WORD PTR [ebp+0x5c]
  417d56:	mov    eax,fs:0xd2edd60e
  417d5c:	mov    ch,0x8
  417d5e:	xchg   BYTE PTR [edx+0x64037023],dh
  417d64:	mov    ah,0x71
  417d66:	fbld   TBYTE PTR [eax-0x15]
  417d69:	xchg   edi,eax
  417d6a:	mov    cl,0xc0
  417d6c:	mov    WORD PTR [ebx+eax*8+0x5eb82a5a],ss
  417d73:	sub    DWORD PTR [edi],ebx
  417d75:	stos   BYTE PTR es:[edi],al
  417d76:	jmp    0xe3dfe749
  417d7b:	outs   dx,BYTE PTR ds:[esi]
  417d7c:	scas   eax,DWORD PTR es:[edi]
  417d7d:	ret    
  417d7e:	inc    ebp
  417d7f:	push   ds
  417d80:	dec    esi
  417d81:	mov    esi,DWORD PTR [ecx-0x2c56dc24]
  417d87:	dec    esp
  417d88:	ins    DWORD PTR es:[edi],dx
  417d89:	shl    DWORD PTR [edi+0x6d786d33],cl
  417d8f:	sbb    dh,BYTE PTR [ebx-0x23]
  417d92:	(bad)  
  417d93:	jmp    0x1b5b:0x1f364483
  417d9a:	ret    0x5883
  417d9d:	xor    bh,ch
  417d9f:	inc    ebx
  417da0:	stc    
  417da1:	pushf  
  417da2:	cs xor esp,esp
  417da5:	shl    DWORD PTR [ebx-0x24],1
  417da8:	pop    ebx
  417da9:	mov    eax,0x21d4fabe
  417dae:	(bad)  
  417daf:	popa   
  417db0:	lods   al,BYTE PTR ds:[esi]
  417db1:	lahf   
  417db2:	arpl   WORD PTR [edi+0x42],sp
  417db5:	inc    edi
  417db6:	or     al,0xf4
  417db8:	xlat   BYTE PTR ds:[ebx]
  417db9:	hlt    
  417dba:	and    BYTE PTR [esp+eax*8],ah
  417dbd:	xor    ch,ah
  417dbf:	xchg   edi,eax
  417dc0:	xor    ecx,ecx
  417dc2:	xlat   BYTE PTR ds:[ebx]
  417dc3:	push   edx
  417dc4:	into   
  417dc5:	mov    cl,bl
  417dc7:	pop    esp
  417dc8:	xor    edx,edi
  417dca:	dec    esi
  417dcb:	adc    eax,0xc09df268
  417dd0:	out    0xcf,eax
  417dd2:	mov    al,ds:0xd190cc5b
  417dd7:	cli    
  417dd8:	sub    DWORD PTR [ecx-0x10],edx
  417ddb:	xchg   DWORD PTR [ebx+0xc9e2068],ebp
  417de1:	add    DWORD PTR [esi-0x46cd05af],eax
  417de7:	add    al,BYTE PTR [ebx]
  417de9:	shl    DWORD PTR [edi+0x6c04d7ea],cl
  417def:	cmp    DWORD PTR [edx+0x6d],ebx
  417df2:	lods   al,BYTE PTR ds:[esi]
  417df3:	mov    ds:0xb8d7d274,al
  417df8:	aad    0x5e
  417dfa:	icebp  
  417dfb:	hlt    
  417dfc:	xor    al,0xab
  417dfe:	scas   al,BYTE PTR es:[edi]
  417dff:	jmp    0x417dbe
  417e01:	jbe    0x417e1e
  417e03:	mov    esp,0x748805f
  417e08:	pop    ebx
  417e09:	push   es
  417e0a:	cld    
  417e0b:	or     esp,DWORD PTR [edx]
  417e0d:	jae    0x417e2d
  417e0f:	mov    ds:0xe0a98fd4,eax
  417e14:	into   
  417e15:	and    esp,0x7c
  417e18:	loopne 0x417dab
  417e1a:	call   0x8a00:0x6ae0ebd1
  417e21:	mov    eax,0x511894aa
  417e26:	dec    esp
  417e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e28:	jle    0x417e19
  417e2a:	in     eax,0x2b
  417e2c:	and    ah,bl
  417e2e:	out    0x0,al
  417e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e31:	into   
  417e32:	(bad)  
  417e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e34:	test   ch,bl
  417e36:	and    eax,DWORD PTR [edi]
  417e38:	mov    cl,ah
  417e3a:	push   esi
  417e3b:	and    DWORD PTR [esi+ecx*1+0x764624b6],eax
  417e42:	mov    edi,DWORD PTR [edi-0x37]
  417e45:	mov    BYTE PTR [edi-0xa8538a4],0xd1
  417e4c:	push   eax
  417e4d:	adc    al,0xe2
  417e4f:	sbb    ebp,DWORD PTR [ebx]
  417e51:	adc    ebx,ecx
  417e53:	sub    BYTE PTR [eax],bl
  417e55:	xchg   esp,eax
  417e56:	(bad)  
  417e57:	mov    ds:0x62b7ed60,eax
  417e5c:	aas    
  417e5d:	stos   BYTE PTR es:[edi],al
  417e5e:	out    dx,al
  417e5f:	and    BYTE PTR [eax],al
  417e61:	dec    ecx
  417e62:	shr    BYTE PTR [bp+si+0x25],0xe5
  417e67:	les    esp,FWORD PTR [edx+0x60585ceb]
  417e6d:	loopne 0x417e84
  417e6f:	cmp    BYTE PTR [edi+0x21],al
  417e72:	mov    bl,0x2f
  417e74:	cmp    BYTE PTR [edi+0xc],ah
  417e77:	adc    al,0x2b
  417e79:	js     0x417e00
  417e7b:	lea    eax,ds:0x8a760b4e
  417e81:	and    DWORD PTR [ebp-0x3],edi
  417e84:	jmp    0x90a4:0x6c66850b
  417e8b:	mov    DWORD PTR [ecx+0x3a],esp
  417e8e:	add    al,0x25
  417e90:	ds (bad) 
  417e92:	clc    
  417e93:	xor    BYTE PTR [edx+0x4ebbe26b],bh
  417e99:	mov    ebp,0x365e739d
  417e9e:	lock test BYTE PTR [ecx-0x12],ah
  417ea2:	repnz (bad) 
  417ea4:	sub    al,0xd9
  417ea6:	jb     0x417f17
  417ea8:	outs   dx,DWORD PTR ds:[esi]
  417ea9:	fstp   QWORD PTR [ebx-0x61a7ca60]
  417eaf:	call   0x3257:0x717f6a70
  417eb6:	jb     0x417f0f
  417eb8:	and    ebx,eax
  417eba:	popa   
  417ebb:	push   0xffffffd1
  417ebd:	and    BYTE PTR [ebx],ah
  417ebf:	sub    DWORD PTR [edi],ebp
  417ec1:	ss and ebp,edi
  417ec4:	(bad)  
  417ec5:	(bad)  
  417ec6:	imul   eax,DWORD PTR [edx-0x22],0x53
  417eca:	dec    ebp
  417ecb:	or     ebp,esi
  417ecd:	push   esi
  417ece:	mov    WORD PTR [ecx+0x67],ds
  417ed1:	test   BYTE PTR [ebp-0x113f79b6],0x8d
  417ed8:	or     ebx,edi
  417eda:	adc    DWORD PTR [esi],esp
  417edc:	pop    es
  417edd:	hlt    
  417ede:	emms   
  417ee0:	xor    DWORD PTR [ecx],esp
  417ee2:	mov    cl,0xda
  417ee4:	rcr    DWORD PTR [esp+eax*1],1
  417ee7:	xor    esi,DWORD PTR [ebp+eiz*4-0x73]
  417eeb:	xor    ebp,DWORD PTR [ebx-0x1d261469]
  417ef1:	sub    ebx,DWORD PTR [edx]
  417ef3:	retf   0x94ef
  417ef6:	(bad)  
  417ef7:	dec    ebx
  417ef8:	jle    0x417f6a
  417efa:	lahf   
  417efb:	jl     0x417f1d
  417efd:	cmp    DWORD PTR [eax-0x60],0x24
  417f01:	push   ss
  417f02:	push   edx
  417f03:	adc    eax,0xded38c3
  417f08:	xchg   edx,eax
  417f09:	in     eax,dx
  417f0a:	pop    edx
  417f0b:	push   ebx
  417f0c:	jbe    0x417f69
  417f0e:	shl    eax,cl
  417f10:	fisubr DWORD PTR [edx]
  417f12:	and    bl,BYTE PTR [eax-0x76da1aad]
  417f18:	jae    0x417ee9
  417f1a:	popf   
  417f1b:	aad    0x8c
  417f1d:	fimul  WORD PTR [edx+0x172c8c4c]
  417f23:	push   0xffffffee
  417f25:	xor    al,0x7e
  417f27:	sbb    al,bh
  417f29:	mov    bl,BYTE PTR [ecx]
  417f2b:	jmp    0x417f38
  417f2d:	rcr    BYTE PTR ss:[ebx-0x6c],cl
  417f31:	lahf   
  417f32:	clc    
  417f33:	test   eax,0xea861088
  417f38:	push   eax
  417f39:	icebp  
  417f3a:	sub    DWORD PTR [ecx-0x478ad46c],ecx
  417f40:	jbe    0x417ed8
  417f42:	cmc    
  417f43:	jnp    0x417f4e
  417f45:	popa   
  417f46:	aad    0x7a
  417f48:	fst    st(6)
  417f4a:	(bad)  
  417f4c:	into   
  417f4d:	inc    ebp
  417f4e:	shr    DWORD PTR ds:0x7e11715b,1
  417f54:	push   esi
  417f55:	mov    edx,0xaefc5d2f
  417f5a:	inc    eax
  417f5b:	xchg   edi,eax
  417f5c:	popf   
  417f5d:	cmp    esi,DWORD PTR [esi]
  417f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f60:	mov    bh,dh
  417f62:	adc    DWORD PTR [ebp+0x619927a],edx
  417f68:	(bad)  es:[edx]
  417f6b:	cmp    eax,0x266cd599
  417f70:	or     BYTE PTR [edi-0x74],dh
  417f73:	jecxz  0x417fbe
  417f75:	push   cs
  417f76:	adc    DWORD PTR [ebp+0x7bb3a353],eax
  417f7c:	adc    esp,DWORD PTR [edx]
  417f7e:	push   esp
  417f7f:	sbb    ebp,DWORD PTR [ebx-0xd]
  417f82:	(bad)  
  417f83:	call   0xc47fa308
  417f88:	aad    0x7e
  417f8a:	pop    edx
  417f8b:	add    al,0x9
  417f8d:	popf   
  417f8e:	or     dh,BYTE PTR [ebp+0x65]
  417f91:	sub    al,0xe1
  417f93:	aam    0x22
  417f95:	in     al,0xf1
  417f97:	and    al,0xe
  417f99:	xor    ch,dh
  417f9b:	and    eax,DWORD PTR [ecx+0x56]
  417f9e:	xor    BYTE PTR [eax+0x5c],0xc4
  417fa2:	(bad)  
  417fa3:	cld    
  417fa4:	push   es
  417fa5:	int    0x90
  417fa7:	push   0x7dc5378
  417fac:	dec    eax
  417fad:	xor    ebx,DWORD PTR [ebp-0x3f]
  417fb0:	(bad)  
  417fb1:	pushf  
  417fb2:	sub    eax,0xeffff836
  417fb7:	sub    bl,BYTE PTR ds:0xf912a0b2
  417fbd:	jle    0x417f64
  417fbf:	sar    BYTE PTR [ebp+edi*2+0x65],1
  417fc3:	loop   0x417fb8
  417fc5:	jb     0x417f64
  417fc7:	mov    DWORD PTR [esi-0x76],esi
  417fca:	jg     0x417fd3
  417fcc:	inc    ebx
  417fcd:	jno    0x417f64
  417fcf:	mov    dl,0x2a
  417fd1:	call   0xd496b392
  417fd6:	sbb    cl,BYTE PTR [edi-0x3918159a]
  417fdc:	push   ebx
  417fdd:	lahf   
  417fde:	mov    eax,ds:0x686e1f1
  417fe3:	aas    
  417fe4:	in     al,0xf1
  417fe6:	or     bh,BYTE PTR [ebx]
  417fe8:	fild   QWORD PTR [ecx+0x3e]
  417feb:	add    bl,BYTE PTR [edi+0xdc8b263]
  417ff1:	cmp    BYTE PTR [ebp+0xded567f],dh
  417ff7:	std    
  417ff8:	test   al,0xcc
  417ffa:	lea    ebx,[esi]
  417ffc:	repz loop 0x417ff3
  417fff:	lds    ebp,FWORD PTR [eax+0x72822ae6]
  418005:	sbb    bh,BYTE PTR [edx]
  418007:	test   DWORD PTR [edx-0x15cb5cba],esi
  41800d:	pop    ss
  41800e:	and    esp,DWORD PTR [edi+ecx*1+0x31]
  418012:	mov    ebp,0xdf275ac1
  418017:	dec    ebp
  418018:	nop
  418019:	lea    edx,[esi]
  41801b:	retf   
  41801c:	dec    edi
  41801d:	clc    
  41801e:	sub    BYTE PTR [ecx],cl
  418020:	inc    ebx
  418021:	sbb    ebp,0xffffffea
  418024:	cli    
  418025:	mov    ebp,0x81fea71c
  41802a:	ret    0x6507
  41802d:	int    0xd
  41802f:	fistp  WORD PTR [edi+0x3d]
  418032:	dec    ebp
  418033:	push   esp
  418034:	pop    esp
  418035:	inc    esi
  418036:	mov    ebx,0xd54cdb08
  41803b:	sti    
  41803c:	jae    0x417fc5
  41803e:	pusha  
  41803f:	ja     0x417fc5
  418041:	xchg   edi,eax
  418042:	repz xor DWORD PTR ds:0xf5314b84,ebx
  418049:	jnp    0x418000
  41804b:	inc    esp
  41804c:	cmc    
  41804d:	jecxz  0x41808c
  41804f:	mov    cl,0xf3
  418051:	and    ecx,edx
  418053:	push   ecx
  418054:	stc    
  418055:	pop    ss
  418056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418057:	sbb    al,0x5a
  418059:	dec    edi
  41805a:	adc    eax,0xf2a6cb84
  41805f:	es loopne 0x4180e0
  418062:	jbe    0x418013
  418064:	in     eax,dx
  418065:	mov    es,WORD PTR [edi+0x6c]
  418068:	sub    eax,esp
  41806a:	jno    0x418082
  41806c:	out    0x94,eax
  41806e:	mov    WORD PTR [eax-0x3b],ds
  418071:	mov    ebx,DWORD PTR [edi-0x6b]
  418074:	ins    BYTE PTR es:[edi],dx
  418075:	aam    0x39
  418077:	cmp    dl,BYTE PTR [eax-0x4e]
  41807a:	add    eax,edx
  41807c:	add    al,BYTE PTR [edx-0xc3578ea]
  418082:	add    BYTE PTR [eax-0x575e3929],ch
  418088:	mov    al,0xe9
  41808a:	inc    esp
  41808b:	stc    
  41808c:	inc    esp
  41808d:	mov    ebp,0x8342cbe0
  418092:	pop    ebp
  418093:	aam    0x67
  418095:	and    ah,BYTE PTR [eax]
  418097:	arpl   WORD PTR [edi],di
  418099:	push   esi
  41809a:	push   ebp
  41809b:	inc    ebp
  41809c:	or     bl,bh
  41809e:	xchg   esp,eax
  41809f:	loope  0x418100
  4180a1:	clc    
  4180a2:	jmp    0x3918a940
  4180a7:	pop    edx
  4180a8:	push   es
  4180a9:	mov    ah,cl
  4180ab:	imul   ecx,DWORD PTR [ebx+0x6b0baa91],0xffffff85
  4180b2:	sub    esp,DWORD PTR ds:0x52aae375
  4180b8:	pop    esp
  4180b9:	dec    ebx
  4180ba:	pusha  
  4180bb:	repz dec edi
  4180be:	loope  0x418063
  4180c0:	lods   eax,DWORD PTR ds:[esi]
  4180c1:	sbb    DWORD PTR [ebx-0x14],edx
  4180c4:	or     esp,DWORD PTR [edi-0x26]
  4180c7:	rcl    DWORD PTR [eax-0x9],1
  4180ca:	out    0xab,al
  4180cc:	pop    edi
  4180cd:	jmp    0xac6e:0x12d22e8c
  4180d4:	add    DWORD PTR [edi+0x63],ebp
  4180d7:	mov    ah,BYTE PTR [esi]
  4180d9:	icebp  
  4180da:	adc    ebp,ebp
  4180dc:	repz imul BYTE PTR [esi+0x755ae2a0]
  4180e3:	test   al,0x90
  4180e5:	aam    0x4f
  4180e7:	dec    esi
  4180e8:	jge    0x418078
  4180ea:	mov    ebx,0x5b735cd7
  4180ef:	xor    BYTE PTR [esi],cl
  4180f1:	add    DWORD PTR [esp+eax*1],ecx
  4180f4:	repz mov bh,0x62
  4180f7:	jnp    0x41810d
  4180f9:	call   0xa733a65a
  4180fe:	pop    edi
  4180ff:	sbb    DWORD PTR [edi],esi
  418101:	mul    bl
  418103:	xchg   esi,eax
  418104:	cmp    edi,DWORD PTR [eax-0x7a]
  418107:	ins    BYTE PTR es:[edi],dx
  418108:	xchg   ebp,eax
  418109:	dec    ebp
  41810a:	cmp    cl,BYTE PTR [ecx-0x54f221f1]
  418110:	popf   
  418111:	sbb    edi,DWORD PTR [esi]
  418113:	push   edx
  418114:	not    DWORD PTR [ecx+0x3781faa5]
  41811a:	cmp    esp,DWORD PTR [ecx]
  41811c:	add    BYTE PTR [eax],al
  41811e:	xlat   BYTE PTR ds:[ebx]
  41811f:	xchg   ecx,eax
  418120:	inc    edx
  418121:	xor    al,0x2
  418123:	mov    eax,0x53c75fe5
  418128:	adc    esp,0xfee58f01
  41812e:	push   eax
  41812f:	push   es
  418130:	cwde   
  418131:	retf   
  418132:	mov    edi,edx
  418134:	sub    al,0xab
  418136:	cmp    bh,BYTE PTR [ebp-0x3f61f6dd]
  41813c:	stos   DWORD PTR es:[edi],eax
  41813d:	push   eax
  41813e:	cmp    esp,0x7a36ec44
  418144:	jae    0x4180ce
  418146:	aas    
  418147:	popf   
  418148:	in     al,0x31
  41814a:	or     cl,BYTE PTR [ebp+0x767fa111]
  418150:	adc    ch,BYTE PTR [ebx]
  418152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418153:	mov    ch,0xdc
  418155:	add    eax,0xe2fd7910
  41815a:	das    
  41815b:	fldenv [eax-0x394545d9]
  418161:	outs   dx,BYTE PTR ds:[esi]
  418162:	nop
  418163:	lods   al,BYTE PTR ds:[esi]
  418164:	xor    esi,edx
  418166:	pop    edi
  418167:	inc    edx
  418168:	jae    0x4181af
  41816a:	mov    esi,esi
  41816c:	mov    ebp,0xf7958282
  418171:	mov    bh,0x1b
  418173:	or     eax,0x416bd92b
  418178:	pusha  
  418179:	clc    
  41817a:	mov    ah,0xf
  41817c:	or     dh,BYTE PTR ds:0x3dc41247
  418182:	fcom   QWORD PTR [eax+ebx*8-0x62]
  418186:	mov    bl,0xd6
  418188:	sub    eax,0xfbe48425
  41818d:	int    0xd8
  41818f:	jb     0x41818b
  418191:	xchg   edi,eax
  418192:	ja     0x4181a0
  418194:	mov    ah,0xeb
  418196:	xor    BYTE PTR [ebx-0x2b],bh
  418199:	and    BYTE PTR [ebp-0x77514baa],bh
  41819f:	or     al,0xca
  4181a1:	jl     0x41813c
  4181a3:	sar    al,0x7c
  4181a6:	inc    ebp
  4181a7:	in     al,dx
  4181a8:	and    ch,bh
  4181aa:	mov    ebx,0x6e398cb7
  4181af:	sbb    al,BYTE PTR [ebp-0x3c]
  4181b2:	lea    edi,[eax+ecx*4]
  4181b5:	inc    esp
  4181b6:	jp     0x418224
  4181b8:	aad    0xa3
  4181ba:	add    DWORD PTR [ebx],0xffffffce
  4181bd:	cld    
  4181be:	xchg   ebp,eax
  4181bf:	lahf   
  4181c0:	mov    BYTE PTR [ebp-0x1c0b1e3f],al
  4181c6:	clc    
  4181c7:	test   BYTE PTR [edi+0x211b705e],0x5d
  4181ce:	add    ecx,ebx
  4181d0:	iret   
  4181d1:	inc    edx
  4181d2:	xor    ch,cl
  4181d4:	mov    BYTE PTR [eax],dh
  4181d6:	push   es
  4181d7:	shl    bh,1
  4181d9:	xchg   si,ax
  4181db:	or     esp,ecx
  4181dd:	add    DWORD PTR ds:0xc877cfdb,esi
  4181e3:	sti    
  4181e4:	ror    DWORD PTR [edi-0x52794b7d],0x3f
  4181eb:	call   0x8c27:0x7f104ec6
  4181f2:	jne    0x41818a
  4181f4:	mov    dl,0x8f
  4181f6:	or     dh,bh
  4181f8:	jae    0x4181d1
  4181fa:	pop    ss
  4181fb:	loope  0x418193
  4181fd:	lahf   
  4181fe:	mov    edx,0x8c93f106
  418203:	ret    0xed1e
  418206:	jnp    0x418244
  418208:	stc    
  418209:	fcmovne st,st(7)
  41820b:	xor    BYTE PTR [eax-0x2b],bh
  41820e:	mov    bh,0x7d
  418210:	in     eax,0xc4
  418212:	xlat   BYTE PTR ds:[ebx]
  418213:	mov    cl,0x48
  418215:	(bad)  
  418216:	nop
  418217:	inc    ecx
  418218:	mov    eax,0xebaa2a18
  41821d:	cmc    
  41821e:	hlt    
  41821f:	addr16 inc edi
  418221:	and    eax,0x4e51b1
  418226:	call   0x96366336
  41822b:	pop    esi
  41822c:	jns    0x418295
  41822e:	pop    edi
  41822f:	pop    esp
  418230:	(bad)  
  418231:	es xchg esi,eax
  418233:	jb     0x418214
  418235:	leave  
  418236:	out    dx,eax
  418237:	jno    0x418234
  418239:	jbe    0x418295
  41823b:	push   ebp
  41823c:	icebp  
  41823d:	adc    al,BYTE PTR [esi+0x52921b4b]
  418243:	out    dx,eax
  418244:	ss repnz into 
  418247:	test   al,0xae
  418249:	(bad)  
  41824a:	and    al,0x7a
  41824c:	lods   al,BYTE PTR ds:[esi]
  41824d:	push   ebp
  41824e:	or     ebp,esp
  418250:	fst    DWORD PTR [ebx-0x6c2744e7]
  418256:	rcr    DWORD PTR [edx],cl
  418258:	push   eax
  418259:	jb     0x418272
  41825b:	inc    ecx
  41825c:	jns    0x4182a8
  41825e:	fs mov ebp,0xf0332deb
  418264:	(bad)  
  418265:	jae    0x4181e7
  418267:	pop    ds
  418268:	or     al,0xea
  41826a:	mov    ebx,0x552f0e17
  41826f:	imul   ebx,DWORD PTR [ebp-0x46],0xffffffaa
  418273:	unpcklps xmm6,XMMWORD PTR [edi-0x5d]
  418277:	div    DWORD PTR [eax+0x20185845]
  41827d:	push   ss
  41827e:	and    dl,BYTE PTR [ebx-0x6317925a]
  418284:	xor    al,0x14
  418286:	mov    WORD PTR [edi+0x15],es
  418289:	inc    edi
  41828a:	jecxz  0x4182c8
  41828c:	jmp    0xaa77:0xe940bf06
  418293:	adc    eax,0xb1697331
  418298:	add    al,0xbc
  41829a:	dec    edx
  41829b:	(bad)  [ebx-0x12fbdf80]
  4182a1:	mov    dh,0x37
  4182a3:	ds fs sbb al,0xbb
  4182a7:	cmc    
  4182a8:	mov    cl,0xaa
  4182aa:	ror    DWORD PTR [eax+esi*8-0xa],cl
  4182ae:	outs   dx,DWORD PTR ds:[esi]
  4182af:	xor    DWORD PTR [edi],0x935e49e9
  4182b5:	clc    
  4182b6:	icebp  
  4182b7:	inc    esi
  4182b8:	mov    eax,0x3242bc80
  4182bd:	ror    BYTE PTR [edi],cl
  4182bf:	push   ebx
  4182c0:	(bad)  
  4182c1:	out    0x38,al
  4182c3:	sub    eax,0x8a9c106a
  4182c8:	cmc    
  4182c9:	(bad)  
  4182ca:	std    
  4182cb:	mov    bh,0x52
  4182cd:	pop    esp
  4182ce:	pop    ds
  4182cf:	push   es
  4182d0:	sbb    bh,BYTE PTR [esi-0x3ea541c4]
  4182d6:	push   ebx
  4182d7:	fimul  WORD PTR [edx-0x3f]
  4182da:	test   al,0x5
  4182dc:	jmp    0xbd8d:0x3685b73e
  4182e3:	js     0x4182ba
  4182e5:	lods   al,BYTE PTR ds:[esi]
  4182e6:	fisttp DWORD PTR [edx+0x2]
  4182e9:	mov    eax,0x3bd2a680
  4182ee:	sbb    BYTE PTR [esi],bh
  4182f0:	jmp    0x418301
  4182f2:	xchg   edx,eax
  4182f3:	adc    BYTE PTR [esi-0x63],dl
  4182f6:	pop    esi
  4182f7:	dec    ebx
  4182f8:	dec    esp
  4182f9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4182fb:	fist   WORD PTR [edi-0x25]
  4182fe:	hlt    
  4182ff:	dec    edx
  418300:	and    BYTE PTR [edi-0x30],ch
  418303:	fadd   st(0),st
  418305:	mov    gs,esi
  418307:	and    esi,ecx
  418309:	jns    0x4182bc
  41830b:	mov    edi,0xd9428cbf
  418310:	jg     0x41836f
  418312:	test   al,0x1c
  418314:	cld    
  418315:	adc    eax,0x73e434a
  41831a:	cmp    eax,0xbe9b13fb
  41831f:	pop    ebx
  418320:	mov    edi,0xbff97c5c
  418325:	pop    ebx
  418326:	lock cmp ebx,DWORD PTR [eax]
  418329:	pop    esp
  41832a:	adc    eax,0xecb70e8b
  41832f:	cmc    
  418330:	lods   al,BYTE PTR ds:[esi]
  418331:	mov    ch,0x3b
  418333:	aas    
  418334:	call   FWORD PTR [ebp-0x418f4e4a]
  41833a:	lsl    ebx,WORD PTR [ebx+edx*1]
  41833e:	into   
  41833f:	sub    eax,0x4ec54161
  418344:	mov    esp,DWORD PTR [esi+ecx*2+0xce64038]
  41834b:	mov    cl,0x42
  41834d:	bound  esi,QWORD PTR [eax+eiz*2+0x72]
  418351:	lds    edx,FWORD PTR [edx+0x1724d8c3]
  418357:	in     al,0x73
  418359:	cwde   
  41835a:	push   es
  41835b:	call   0xd87d:0x804ebea9
  418362:	xlat   BYTE PTR ds:[ebx]
  418363:	pop    edx
  418364:	add    ebx,edx
  418366:	repz addr16 mov dh,0x37
  41836a:	adc    eax,0xc409076c
  41836f:	pop    edx
  418370:	dec    ebp
  418371:	arpl   WORD PTR [eax+0x747adc0e],ax
  418377:	mov    esi,0x87298b4b
  41837c:	add    eax,0x4f3a49bf
  418381:	sbb    BYTE PTR [eax-0x5f],cl
  418384:	mov    ah,0xa1
  418386:	std    
  418387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418389:	add    dh,dh
  41838b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41838c:	cli    
  41838d:	lea    eax,[edx+0x32d40529]
  418393:	mov    bl,0xc0
  418395:	adc    al,0x6f
  418397:	mov    ebx,0x55975ce5
  41839c:	ja     0x4183d3
  41839e:	test   ecx,ebp
  4183a0:	dec    ecx
  4183a1:	je     0x4183ad
  4183a3:	pusha  
  4183a4:	dec    esi
  4183a5:	dec    eax
  4183a6:	scas   eax,DWORD PTR es:[edi]
  4183a7:	je     0x4183a8
  4183a9:	mov    esi,0xfaba272f
  4183ae:	pop    ds
  4183af:	dec    eax
  4183b0:	pusha  
  4183b1:	dec    eax
  4183b2:	inc    eax
  4183b3:	rcl    DWORD PTR [edi],1
  4183b5:	jb     0x4183d7
  4183b7:	lahf   
  4183b8:	push   es
  4183b9:	dec    esp
  4183ba:	mov    bh,0xe3
  4183bc:	mov    dl,0x51
  4183be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183bf:	aad    0x47
  4183c1:	mov    ebp,0x8c45a544
  4183c6:	data16 mov ch,0x69
  4183c9:	add    DWORD PTR ds:0xc0915f1e,ecx
  4183cf:	xlat   BYTE PTR ds:[ebx]
  4183d0:	mov    ebp,0x998d3c14
  4183d5:	sar    BYTE PTR [ebx-0x5787f80b],1
  4183db:	push   cs
  4183dc:	add    DWORD PTR [edx],edi
  4183de:	xchg   edx,eax
  4183df:	cmp    ch,al
  4183e1:	pop    edi
  4183e2:	enter  0x5a12,0x35
  4183e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183e7:	outs   dx,DWORD PTR ds:[esi]
  4183e8:	jl     0x418453
  4183ea:	cmp    dl,BYTE PTR [edi-0x1301e6fe]
  4183f0:	jbe    0x418416
  4183f2:	sbb    eax,0x2a322f9f
  4183f7:	dec    edx
  4183f8:	push   ebp
  4183f9:	adc    eax,0xb131f4c9
  4183fe:	sahf   
  4183ff:	in     eax,0x66
  418401:	add    BYTE PTR [edi-0x78],0x81
  418405:	jne    0x4183ba
  418407:	iret   
  418408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418409:	dec    edi
  41840a:	and    ebx,edi
  41840c:	nop
  41840d:	cmp    esp,esp
  41840f:	cdq    
  418410:	lds    ecx,FWORD PTR [esi+0x7b114b23]
  418416:	sub    eax,0xa3ee3a88
  41841b:	cdq    
  41841c:	jp     0x41842f
  41841e:	xchg   BYTE PTR [eax-0x12354374],bh
  418424:	test   dh,ch
  418426:	jecxz  0x418452
  418428:	mov    fs,ecx
  41842a:	imul   edi,DWORD PTR [edi+ebp*1+0x33],0xffffffc7
  41842f:	sub    ah,BYTE PTR [ebp+0x0]
  418432:	adc    BYTE PTR [esi],bh
  418434:	fucomp st(2)
  418436:	or     cl,BYTE PTR [ebx-0x7ac2a0a9]
  41843c:	dec    BYTE PTR [eax]
  41843e:	in     al,0x1d
  418440:	popf   
  418441:	test   eax,0xec42fdd
  418446:	sti    
  418447:	cs daa 
  418449:	(bad)  [ecx]
  41844b:	and    al,BYTE PTR [ebx-0x72]
  41844e:	sbb    dl,BYTE PTR [eax]
  418450:	xor    edx,DWORD PTR [edi]
  418452:	pushf  
  418453:	js     0x418447
  418455:	mov    DWORD PTR [edi-0x3be23fd4],edx
  41845b:	popa   
  41845c:	sbb    al,0x42
  41845e:	outs   dx,DWORD PTR ds:[esi]
  41845f:	push   esp
  418460:	push   ss
  418461:	xchg   edi,eax
  418462:	pop    es
  418463:	mov    ds:0xc768a291,al
  418468:	push   edi
  418469:	mov    ds,ebp
  41846b:	les    ebx,FWORD PTR [esi+ecx*2+0x44]
  41846f:	idiv   DWORD PTR [esi+ebp*8+0x76521617]
  418476:	mov    DWORD PTR [ecx-0x21],edi
  418479:	mov    ebx,0x8cfc3637
  41847e:	repz xor eax,0x7d954e5
  418484:	rcr    BYTE PTR ds:0x73f89fb4,1
  41848a:	push   0x4c
  41848c:	pop    edi
  41848d:	xchg   edx,eax
  41848e:	inc    edx
  41848f:	imul   edx,edx,0xf85c24d7
  418495:	sbb    al,0xe1
  418497:	loope  0x41843b
  418499:	(bad)  
  41849a:	hlt    
  41849b:	pop    ebp
  41849c:	sbb    al,0x90
  41849e:	ret    0xca21
  4184a1:	pushf  
  4184a2:	cdq    
  4184a3:	push   es
  4184a4:	pop    edi
  4184a5:	shr    DWORD PTR [edi],1
  4184a7:	imul   ebp,DWORD PTR [ebx-0x6b350d86],0xffffffa4
  4184ae:	xchg   bl,dl
  4184b0:	jnp    0x4184d6
  4184b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b3:	cld    
  4184b4:	add    dh,dh
  4184b6:	into   
  4184b7:	add    BYTE PTR [edi-0x72],0xd6
  4184bb:	pop    ds
  4184bc:	mov    ebx,0x654cace4
  4184c1:	jmp    0x8acdd974
  4184c6:	pushf  
  4184c7:	repz jae 0x418501
  4184ca:	test   al,0xee
  4184cc:	cmp    eax,0xf5c70fe9
  4184d1:	fst    st(2)
  4184d3:	mov    eax,ds:0x344339da
  4184d8:	mov    dh,BYTE PTR [eax-0x5e37c54c]
  4184de:	out    dx,eax
  4184df:	sub    BYTE PTR [eax],ah
  4184e1:	(bad)  
  4184e2:	sahf   
  4184e3:	addr16 popf 
  4184e5:	push   ebx
  4184e6:	mov    ah,0xd2
  4184e8:	jp     0x41855a
  4184ea:	mov    ebx,0xc351c087
  4184ef:	jbe    0x418526
  4184f1:	or     ecx,DWORD PTR [ebx+0x2f]
  4184f4:	jns    0x418546
  4184f6:	in     al,dx
  4184f7:	inc    edi
  4184f8:	test   dl,bh
  4184fa:	adc    BYTE PTR [ecx],dl
  4184fc:	mov    edi,0xfda07b25
  418501:	aad    0x4d
  418503:	mov    eax,0x9b612a7e
  418508:	dec    esi
  418509:	jl     0x4184e0
  41850b:	mov    ecx,0x6e5ba0e2
  418510:	pop    ss
  418511:	add    eax,0xb8c3a85e
  418516:	repnz push edi
  418518:	sahf   
  418519:	dec    ebx
  41851a:	stos   BYTE PTR es:[edi],al
  41851b:	fs cld 
  41851d:	pop    edx
  41851e:	out    dx,al
  41851f:	loope  0x41850d
  418521:	rcl    BYTE PTR [eax],0xce
  418524:	cs add al,0x51
  418527:	retf   0x986d
  41852a:	imul   esi,DWORD PTR [eax+0x4a],0xe4191a0d
  418531:	es out dx,al
  418533:	pop    edx
  418534:	sub    BYTE PTR [edi+0x6e],0x5
  418538:	int3   
  418539:	mov    dl,0x12
  41853b:	(bad)  
  41853c:	in     al,0xbc
  41853e:	leave  
  41853f:	cli    
  418540:	int3   
  418541:	mul    DWORD PTR [eax]
  418543:	add    eax,0x9d34fbb2
  418548:	and    bh,BYTE PTR [eax]
  41854a:	dec    esp
  41854b:	sbb    cl,bl
  41854d:	sub    dh,BYTE PTR [edi]
  41854f:	mov    dh,0xdf
  418551:	arpl   sp,cx
  418553:	fld    QWORD PTR [ecx-0x14]
  418556:	xchg   ebx,eax
  418557:	fisttp QWORD PTR ds:0x124c815e
  41855d:	and    DWORD PTR [esi],ebp
  41855f:	fwait
  418560:	xor    ah,BYTE PTR [edi]
  418562:	push   cs
  418563:	int3   
  418564:	sub    eax,0xa32ddf8f
  418569:	mov    WORD PTR [ecx-0xd],?
  41856c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41856e:	push   edi
  41856f:	or     DWORD PTR [edx-0x5c85eea8],esi
  418575:	out    dx,eax
  418576:	cmc    
  418577:	call   0x49026ac9
  41857c:	mov    esp,0xbda04952
  418581:	int    0xf6
  418583:	pop    ebx
  418584:	dec    edi
  418585:	mov    ebx,0x28a655b2
  41858a:	mov    al,ds:0xa5e92764
  41858f:	arpl   WORD PTR [ecx],bx
  418591:	sub    eax,0x20284ff9
  418596:	shrd   edi,ecx,0xe1
  41859a:	pushf  
  41859b:	and    al,BYTE PTR [ebx]
  41859d:	xor    eax,0x8f17c7aa
  4185a2:	test   DWORD PTR [esi],esi
  4185a4:	inc    ecx
  4185a5:	and    al,0x1
  4185a7:	or     eax,ebp
  4185a9:	(bad)  
  4185aa:	in     al,dx
  4185ab:	mov    ebx,0xd2af627a
  4185b0:	cpuid  
  4185b2:	adc    ch,BYTE PTR [esi+ecx*4]
  4185b5:	mov    eax,0x5d35c9e0
  4185ba:	add    al,BYTE PTR [ebx]
  4185bc:	xchg   bl,al
  4185be:	shl    bh,0xc3
  4185c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185c2:	sbb    al,0x3
  4185c4:	leave  
  4185c5:	es push 0x3d
  4185c8:	test   DWORD PTR [edi-0x1c],0x61722c52
  4185cf:	jp     0x41863f
  4185d1:	add    dh,BYTE PTR [edx+edx*8+0x4b]
  4185d5:	inc    edi
  4185d6:	cs xor eax,0xb52013b3
  4185dc:	out    dx,al
  4185dd:	dec    ebp
  4185de:	stos   BYTE PTR es:[edi],al
  4185df:	push   edi
  4185e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185e1:	fst    QWORD PTR [edi]
  4185e3:	aam    0xdc
  4185e5:	xor    DWORD PTR [esi+0xf],edi
  4185e8:	cdq    
  4185e9:	ret    
  4185ea:	sbb    al,0xea
  4185ec:	xchg   esp,eax
  4185ed:	(bad)  
  4185ee:	xstore-rng (bad)
  4185ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185f0:	inc    eax
  4185f1:	push   ss
  4185f2:	inc    esp
  4185f3:	pop    ecx
  4185f4:	stos   DWORD PTR es:[edi],eax
  4185f5:	(bad)  
  4185f6:	jmp    DWORD PTR [eax+0x3]
  4185f9:	dec    eax
  4185fa:	stc    
  4185fb:	mov    dl,0x62
  4185fd:	sub    eax,0xe2dee7e7
  418602:	icebp  
  418603:	xchg   ecx,esp
  418605:	xchg   ecx,eax
  418606:	jecxz  0x4185cc
  418608:	daa    
  418609:	pop    ebx
  41860a:	xor    BYTE PTR ds:[ebx+0x3a],bl
  41860e:	clc    
  41860f:	out    dx,eax
  418610:	lods   eax,DWORD PTR ds:[esi]
  418611:	adc    bh,BYTE PTR [edi]
  418613:	xchg   edx,eax
  418614:	(bad)  
  418616:	dec    ebp
  418617:	sbb    dh,BYTE PTR ds:0x30fc3f9f
  41861d:	pop    edx
  41861e:	les    edi,FWORD PTR [edx]
  418620:	mov    al,ds:0x91f21626
  418625:	lods   al,BYTE PTR ds:[esi]
  418626:	push   es
  418627:	cld    
  418628:	enter  0xee05,0xd0
  41862c:	sbb    al,0x6e
  41862e:	bnd je 0x418677
  418631:	pushf  
  418632:	(bad)  
  418633:	mov    ebx,0x4cdf0de5
  418638:	add    al,bl
  41863a:	mov    eax,0xd04371f1
  41863f:	inc    edi
  418640:	dec    DWORD PTR [ebx]
  418642:	shr    DWORD PTR [esi-0x19],0xb9
  418646:	sti    
  418647:	inc    eax
  418648:	or     DWORD PTR [ebx+0xde1a719],ebp
  41864e:	dec    ebp
  41864f:	lea    ebp,[esi+ecx*2+0x32]
  418653:	imul   ebx,ebx,0xc14a7872
  418659:	pushf  
  41865a:	fist   DWORD PTR [esi+0x28877460]
  418660:	lea    ebp,[ecx+0x6687aa4f]
  418666:	cmp    DWORD PTR [edx],0x77
  418669:	push   0x80899d7e
  41866e:	sub    DWORD PTR [edx],ebx
  418670:	scas   al,BYTE PTR es:[edi]
  418671:	or     BYTE PTR [ebp-0x13],bh
  418674:	shl    DWORD PTR [ebx-0x6e],cl
  418677:	xor    edx,DWORD PTR [esi-0x1b24efab]
  41867d:	test   eax,0xfc893b9e
  418682:	mov    WORD PTR [ebp-0x21],ss
  418685:	inc    ebx
  418686:	out    0x76,al
  418688:	jno    0x418679
  41868a:	and    dh,BYTE PTR [edx-0x4e]
  41868d:	jb     0x4186ac
  41868f:	xlat   BYTE PTR ds:[ebx]
  418690:	pop    ss
  418691:	push   cs
  418692:	ins    BYTE PTR es:[edi],dx
  418693:	(bad)  [edx+ecx*2+0x4c]
  418697:	or     esi,0xe201823d
  41869d:	cmp    eax,0x1920c88
  4186a2:	push   ecx
  4186a3:	shl    ebp,0xb4
  4186a6:	xor    ebx,DWORD PTR [edi+0x18eb7bbf]
  4186ac:	sbb    eax,0x72ab68d2
  4186b1:	and    eax,0xaa1261d3
  4186b6:	inc    ebp
  4186b7:	jno    0x41871d
  4186b9:	adc    BYTE PTR [edi-0x1310a4b9],bh
  4186bf:	jg     0x41873f
  4186c1:	call   DWORD PTR [esi]
  4186c3:	and    BYTE PTR [esi+esi*1],cl
  4186c6:	aas    
  4186c7:	(bad)  
  4186c8:	mov    cs,WORD PTR [edi-0x79]
  4186cb:	or     al,0x47
  4186cd:	xchg   ebx,eax
  4186ce:	pop    esp
  4186d0:	push   ss
  4186d1:	mov    al,ds:0x30e528e3
  4186d6:	push   0x31
  4186d8:	xor    eax,0xa7d7e777
  4186dd:	hlt    
  4186de:	(bad)  
  4186df:	pusha  
  4186e0:	push   ebx
  4186e1:	ins    BYTE PTR es:[edi],dx
  4186e2:	pop    esp
  4186e3:	jns    0x418757
  4186e5:	mov    dl,0xba
  4186e8:	xor    al,0x45
  4186ea:	es cmp eax,0x2250cb29
  4186f0:	js     0x41874c
  4186f2:	cmp    ebp,edx
  4186f4:	js     0x4186ea
  4186f6:	mov    ds:0x5a6dec54,eax
  4186fb:	lea    ebp,[ebp-0x9]
  4186fe:	fdiv   QWORD PTR [eax+eiz*4+0x36]
  418702:	shr    DWORD PTR [eax-0x23],cl
  418705:	mov    BYTE PTR [ecx+eax*8],ah
  418708:	rol    DWORD PTR [edx],cl
  41870a:	and    al,0xdf
  41870c:	leave  
  41870d:	mov    DWORD PTR [eax-0x61],edx
  418710:	sbb    eax,0x2468b474
  418715:	mov    eax,ds:0x7a8c8c9e
  41871a:	dec    edi
  41871b:	push   es
  41871c:	xor    DWORD PTR [eax],ecx
  41871e:	loope  0x418701
  418720:	adc    cl,BYTE PTR [ecx-0x7937dc07]
  418726:	sahf   
  418727:	or     bl,al
  418729:	repz pop edi
  41872b:	push   DWORD PTR [edx+0x5cdbe9a0]
  418731:	mov    bh,0x55
  418733:	xor    eax,0xce18e0f7
  418738:	inc    ecx
  418739:	sbb    eax,0x62c8ce40
  41873e:	lds    esp,FWORD PTR [esp+ebp*4+0x6b]
  418742:	call   0xbc05:0x6df636a6
  418749:	retf   
  41874a:	add    dh,dl
  41874c:	xchg   esi,eax
  41874d:	lods   al,BYTE PTR ds:[esi]
  41874e:	cmp    DWORD PTR [edi-0x89c9f3],eax
  418754:	mov    esp,0xb5aac1d6
  418759:	ds out 0x63,al
  41875c:	sbb    BYTE PTR [esi-0x52cd1cd0],0x7e
  418763:	jle    0x418798
  418765:	lods   eax,DWORD PTR ds:[esi]
  418766:	xchg   ebp,eax
  418767:	sbb    bh,BYTE PTR [ebx+0x964abe3]
  41876d:	sub    eax,0x374e9093
  418772:	and    eax,0x4e6ed590
  418777:	pushf  
  418778:	pop    ebx
  418779:	pushf  
  41877a:	int3   
  41877b:	add    DWORD PTR [esi+0x7d7a4433],ebp
  418781:	ss pop ecx
  418783:	rcl    DWORD PTR [edx],cl
  418785:	push   esp
  418786:	out    0x7f,eax
  418788:	push   esp
  418789:	ds std 
  41878b:	pop    ss
  41878c:	sti    
  41878d:	in     al,dx
  41878e:	add    esp,DWORD PTR [ebx-0x655e1dce]
  418794:	dec    esi
  418795:	inc    esi
  418796:	fisub  DWORD PTR [edi-0x573a7d]
  41879c:	inc    esp
  41879d:	pop    edx
  41879e:	in     al,dx
  41879f:	(bad)  
  4187a0:	mov    al,0xc3
  4187a2:	cmp    esp,DWORD PTR [ecx]
  4187a4:	sub    bh,bl
  4187a6:	xchg   esi,eax
  4187a7:	jge    0x4187ad
  4187a9:	pushf  
  4187aa:	sbb    BYTE PTR [edi+0xc41e98d],0xe5
  4187b1:	inc    ebx
  4187b2:	xchg   ebx,eax
  4187b3:	xor    BYTE PTR [esi+eiz*2-0x6a06c2f8],ah
  4187ba:	mov    esi,0xa75ef208
  4187bf:	mov    edi,DWORD PTR [eax+0x107dde51]
  4187c5:	int    0xc6
  4187c7:	shl    DWORD PTR ds:[esi+0x51],0xf4
  4187cc:	mov    al,ds:0xb2e652f
  4187d1:	push   esi
  4187d2:	xchg   ecx,eax
  4187d3:	or     ebp,ecx
  4187d5:	enter  0x5c56,0x5e
  4187d9:	(bad)  
  4187da:	jo     0x4187d9
  4187dc:	add    eax,DWORD PTR [esi-0x57]
  4187df:	jno    0x4187f3
  4187e1:	jmp    0x4187a6
  4187e3:	lds    edi,FWORD PTR [edx]
  4187e5:	mov    eax,0xfb03577a
  4187ea:	cmp    ebp,DWORD PTR [eax+0x6b]
  4187ed:	les    eax,FWORD PTR [edx+ebp*2]
  4187f0:	and    ah,ah
  4187f2:	xor    al,0x5b
  4187f4:	repz aad 0x9a
  4187f7:	pop    eax
  4187f8:	ret    
  4187f9:	lods   eax,DWORD PTR ds:[esi]
  4187fa:	fnstsw WORD PTR [ecx-0x1e4d5c5]
  418800:	pop    ebx
  418801:	xchg   edx,eax
  418802:	mov    dh,bh
  418804:	jle    0x418860
  418806:	push   0x2de45227
  41880b:	mov    ecx,0xb3d0485a
  418810:	outs   dx,DWORD PTR ds:[esi]
  418811:	cmc    
  418812:	mov    edx,esi
  418814:	push   ss
  418815:	(bad)  
  418816:	jo     0x418888
  418818:	rcl    edi,0x9f
  41881b:	dec    esi
  41881d:	cli    
  41881e:	push   edx
  41881f:	sub    bl,BYTE PTR [ecx-0x62cd5d75]
  418825:	add    eax,0xd366cdc8
  41882a:	sub    eax,esp
  41882c:	sub    ch,BYTE PTR [esi+ecx*2]
  41882f:	sub    ebx,0x325342eb
  418835:	cld    
  418836:	pop    esi
  418837:	jo     0x4188ac
  418839:	xchg   ecx,ecx
  41883b:	test   DWORD PTR [ebp-0x47ff109e],edi
  418841:	ftst   
  418843:	adc    BYTE PTR [edi+0x64],ch
  418846:	clc    
  418847:	mov    al,0x22
  418849:	ins    DWORD PTR es:[edi],dx
  41884a:	imul   ecx,DWORD PTR [ebp+0x4e8943d6],0xeb254fdc
  418854:	inc    esi
  418855:	aam    0xc4
  418857:	js     0x4187de
  418859:	push   ebp
  41885a:	push   ds
  41885b:	mov    ds:0xc66e7ba5,al
  418860:	jne    0x4187ed
  418862:	dec    ecx
  418863:	dec    eax
  418864:	int3   
  418865:	sub    bl,bh
  418867:	jmp    0x41887c
  418869:	adc    al,0xb0
  41886b:	xor    ecx,DWORD PTR [ebx+esi*8+0x7907d948]
  418872:	mov    eax,0x2ecad8e4
  418877:	mov    dl,0xd8
  418879:	addr16 pusha 
  41887b:	mov    ah,0x97
  41887d:	add    BYTE PTR [eax-0x2e],bl
  418880:	out    dx,eax
  418881:	add    DWORD PTR [edx+0x5ac8c2b5],esi
  418887:	dec    ebx
  418888:	inc    edx
  418889:	cld    
  41888a:	lods   eax,DWORD PTR ds:[esi]
  41888b:	add    DWORD PTR [esi-0x35b3419e],ecx
  418891:	mov    ah,0xe8
  418893:	mov    dh,0x28
  418895:	ins    DWORD PTR es:[edi],dx
  418896:	daa    
  418897:	fnsave [ecx-0x123b0ff3]
  41889d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41889e:	dec    ebp
  41889f:	push   ebx
  4188a0:	xchg   edi,eax
  4188a1:	fisub  WORD PTR [edx]
  4188a3:	rol    DWORD PTR [ecx],cl
  4188a5:	popa   
  4188a6:	or     ecx,esi
  4188a8:	jo     0x41884c
  4188aa:	sub    edx,ebp
  4188ac:	push   esp
  4188ad:	test   eax,0xb84389a8
  4188b2:	ds gs out 0x88,ax
  4188b7:	jno    0x41892e
  4188b9:	push   eax
  4188ba:	jg     0x4188fe
  4188bc:	mov    ds:0xa59643b7,eax
  4188c1:	mov    ch,0x14
  4188c3:	(bad)  
  4188c4:	dec    ecx
  4188c5:	mov    eax,0x29248cc7
  4188ca:	mov    ch,BYTE PTR ds:0xb834cc93
  4188d0:	jo     0x4188b3
  4188d2:	dec    edx
  4188d3:	jnp    0x418882
  4188d5:	fld    TBYTE PTR [ecx+0x31]
  4188d8:	inc    esp
  4188d9:	and    eax,0x8a4a8ddd
  4188de:	xor    BYTE PTR ds:0x7237ba0c,bl
  4188e4:	inc    eax
  4188e5:	xchg   edi,eax
  4188e6:	or     al,0x11
  4188e8:	inc    ebx
  4188e9:	mov    WORD PTR [ebx+0x34],ss
  4188ec:	in     eax,0x7b
  4188ee:	jnp    0x41890e
  4188f0:	fsubr  QWORD PTR [esi-0x6a950b38]
  4188f6:	jecxz  0x4188ed
  4188f8:	mov    edi,ebx
  4188fa:	shl    BYTE PTR [edx-0x55],1
  4188fd:	ins    BYTE PTR es:[edi],dx
  4188fe:	pop    ds
  4188ff:	mov    dl,0x7b
  418901:	fsubp  st(4),st
  418903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418904:	xlat   BYTE PTR ds:[ebx]
  418905:	xchg   ebp,eax
  418906:	sub    bh,al
  418908:	jns    0x41892a
  41890a:	out    dx,eax
  41890b:	cwde   
  41890c:	(bad)  
  41890d:	aam    0x63
  41890f:	ins    DWORD PTR es:[edi],dx
  418910:	pop    edi
  418911:	dec    edx
  418912:	sbb    eax,0x18774295
  418917:	jle    0x418937
  418919:	jns    0x4188b9
  41891b:	inc    edi
  41891c:	jge    0x4188ab
  41891e:	mov    bh,0x29
  418920:	cmp    al,0xd3
  418922:	push   ds
  418923:	cli    
  418924:	(bad)  
  418925:	cmp    DWORD PTR [esi],ebx
  418927:	and    eax,ebp
  418929:	sbb    ebp,DWORD PTR [ecx-0x3a]
  41892c:	mov    dl,0xcc
  41892e:	rcr    BYTE PTR [ebp+0x2b1433c6],1
  418934:	int3   
  418935:	and    eax,0x13f623c3
  41893a:	cli    
  41893b:	jns    0x41899f
  41893d:	adc    DWORD PTR [esi-0x6d3cc4f2],esi
  418943:	aaa    
  418944:	adc    DWORD PTR ds:[edx],0xffffffa6
  418948:	pushf  
  418949:	or     eax,0xec510883
  41894e:	test   al,0xc8
  418950:	push   ss
  418951:	pop    edi
  418952:	mov    esi,DWORD PTR [edi-0x5b47a386]
  418958:	lods   al,BYTE PTR ds:[esi]
  418959:	loopne 0x41894e
  41895b:	sub    dh,BYTE PTR [ecx]
  41895d:	ret    0x8f63
  418960:	popa   
  418961:	scas   al,BYTE PTR es:[edi]
  418962:	dec    eax
  418963:	aas    
  418964:	hlt    
  418965:	sti    
  418966:	push   cs
  418967:	push   ebx
  418968:	xchg   esp,eax
  418969:	mov    edi,0x8a722d41
  41896e:	or     dl,ah
  418970:	mov    dl,0x17
  418972:	add    eax,0x6c893b40
  418977:	adc    eax,0xd45f3637
  41897c:	int    0x68
  41897e:	and    BYTE PTR [esi-0x4372dbaf],dl
  418984:	sar    DWORD PTR [eax+0x77],0x4d
  418988:	stos   BYTE PTR es:[edi],al
  418989:	popa   
  41898a:	xor    DWORD PTR [ecx-0x47],edi
  41898d:	retf   
  41898e:	inc    ecx
  41898f:	out    0x47,eax
  418991:	dec    esp
  418992:	int    0x56
  418994:	add    DWORD PTR [ebx+ecx*1],0x99c80e3d
  41899b:	(bad)  [esi-0x3f8adbf6]
  4189a1:	xchg   esp,eax
  4189a2:	lahf   
  4189a3:	or     DWORD PTR [ebx-0x51],edi
  4189a6:	jne    0x418a0b
  4189a8:	jnp    0x418965
  4189aa:	aas    
  4189ab:	push   edx
  4189ac:	imul   ecx,DWORD PTR [edi],0x3b
  4189af:	dec    esp
  4189b0:	mov    edi,ebp
  4189b2:	add    eax,0xf98f971f
  4189b7:	in     al,dx
  4189b8:	and    eax,0x226f40f3
  4189bd:	loop   0x41897d
  4189bf:	ret    0x82f8
  4189c2:	(bad)  
  4189c3:	pop    edx
  4189c4:	sbb    ebp,DWORD PTR [edi-0x3e57eb13]
  4189ca:	(bad)  
  4189cb:	fsub   st,st(0)
  4189cd:	int3   
  4189ce:	jmp    0x418a12
  4189d0:	pop    es
  4189d1:	jns    0x4189b9
  4189d3:	je     0x418a17
  4189d5:	loope  0x418a40
  4189d7:	(bad)  
  4189d8:	sbb    al,BYTE PTR [edi-0x2b]
  4189db:	das    
  4189dc:	aaa    
  4189dd:	adc    eax,0x6918bf20
  4189e2:	jp     0x418a3c
  4189e4:	test   edi,edi
  4189e6:	out    dx,al
  4189e7:	inc    eax
  4189e8:	xor    al,0x5b
  4189ea:	ficomp DWORD PTR [esi-0x7]
  4189ed:	stc    
  4189ee:	jle    0x41899b
  4189f0:	fild   WORD PTR [edx-0x6c]
  4189f3:	sbb    dh,BYTE PTR [ebx+0x41cadded]
  4189f9:	add    DWORD PTR [ecx-0x38],ebx
  4189fc:	out    dx,eax
  4189fd:	scas   eax,DWORD PTR es:[edi]
  4189fe:	jnp    0x418a07
  418a00:	imul   esp,DWORD PTR [edx-0xc3d9187],0xa59e00a9
  418a0a:	cmp    BYTE PTR [eax+0x7],bl
  418a0d:	mov    al,ds:0x7086c85
  418a12:	sub    dh,bh
  418a14:	sbb    al,0xe6
  418a16:	dec    ecx
  418a17:	hlt    
  418a18:	idiv   ebx
  418a1a:	lahf   
  418a1b:	out    dx,al
  418a1c:	into   
  418a1d:	fisubr WORD PTR [ebx-0x4ef36177]
  418a23:	loopne 0x418a37
  418a25:	or     eax,0xd4363563
  418a2a:	aad    0xf4
  418a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a2d:	mov    al,ds:0x763fd7dd
  418a32:	jg     0x4189e1
  418a34:	out    0x74,al
  418a36:	dec    edi
  418a37:	test   eax,0xf6bb487b
  418a3c:	cmp    esi,DWORD PTR [esi-0x1f]
  418a3f:	cmp    BYTE PTR [ebx],cl
  418a41:	inc    edx
  418a42:	push   es
  418a43:	push   ds
  418a44:	dec    ebp
  418a45:	ficom  WORD PTR [ecx]
  418a47:	sbb    DWORD PTR [esi-0x67640356],ebx
  418a4d:	pop    eax
  418a4e:	rcl    BYTE PTR [edx],cl
  418a50:	jge    0x418aa3
  418a52:	fisub  DWORD PTR [edi]
  418a54:	xchg   BYTE PTR gs:[esi+eiz*2-0x6bbb164d],bl
  418a5c:	or     eax,0x302dbbe5
  418a61:	pop    esi
  418a62:	out    0xd7,eax
  418a64:	cwde   
  418a65:	jno    0x418a7f
  418a67:	arpl   WORD PTR ds:[ebx-0x62],si
  418a6b:	cdq    
  418a6c:	int3   
  418a6d:	inc    edx
  418a6e:	leave  
  418a6f:	ins    BYTE PTR es:[edi],dx
  418a70:	retf   
  418a71:	sub    eax,0x2407a8f2
  418a76:	dec    edi
  418a77:	stos   BYTE PTR es:[edi],al
  418a78:	retf   0xa1f1
  418a7b:	push   ecx
  418a7c:	inc    esi
  418a7d:	fbstp  TBYTE PTR [ebx]
  418a7f:	xor    ebx,DWORD PTR [ecx+edx*4+0x78]
  418a83:	mov    al,0xad
  418a85:	xchg   BYTE PTR [edx+edi*4-0x25],al
  418a89:	jbe    0x418a83
  418a8b:	xchg   edi,eax
  418a8c:	nop
  418a8d:	cld    
  418a8e:	jecxz  0x418a4b
  418a90:	push   edx
  418a91:	xchg   DWORD PTR [ecx-0x1b],ebx
  418a94:	pop    eax
  418a95:	push   ecx
  418a96:	mov    esi,0xca75c30d
  418a9b:	cmc    
  418a9c:	mov    dl,0x13
  418a9e:	rcr    DWORD PTR [ecx],1
  418aa0:	jp     0x418a94
  418aa2:	int3   
  418aa3:	xchg   ebp,eax
  418aa4:	mov    edi,0xd23fd591
  418aa9:	adc    eax,0xda74eda7
  418aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aaf:	dec    edi
  418ab0:	into   
  418ab1:	dec    ecx
  418ab2:	and    esp,DWORD PTR [esi+0x59ffdb78]
  418ab8:	lock rcl cl,cl
  418abb:	push   cs
  418abc:	jg     0x418a9d
  418abe:	sbb    bh,BYTE PTR [esi+eax*8+0x1686d4b8]
  418ac5:	sti    
  418ac6:	out    dx,eax
  418ac7:	pop    ebp
  418ac8:	pop    ss
  418ac9:	(bad)  
  418aca:	jae    0x418ac5
  418acc:	pop    esp
  418acd:	jle    0x418b1e
  418acf:	xchg   edx,eax
  418ad0:	push   esp
  418ad1:	mov    bh,0xb5
  418ad3:	xor    eax,0xc7c9c76a
  418ad8:	xor    eax,esp
  418ada:	xor    DWORD PTR [eax-0x5f],ebp
  418add:	push   es
  418ade:	cs hlt 
  418ae0:	test   DWORD PTR [eax+0x406d6d99],eax
  418ae6:	shl    ebx,cl
  418ae8:	adc    eax,0x62c4930e
  418aed:	bound  esp,QWORD PTR [ecx+0x114d8e2c]
  418af3:	ret    0x2e50
  418af6:	dec    esi
  418af7:	lods   al,BYTE PTR cs:[esi]
  418af9:	adc    BYTE PTR [edi],dh
  418afb:	imul   esp,ebx,0x2
  418afe:	or     BYTE PTR ds:0x9970bf18,dh
  418b04:	push   0x7e058f9f
  418b09:	lods   al,BYTE PTR ds:[esi]
  418b0a:	setb   BYTE PTR [ecx-0x6464880c]
  418b11:	mov    fs,ecx
  418b13:	jmp    0x1828:0xbd154a3d
  418b1a:	out    dx,eax
  418b1b:	in     eax,dx
  418b1c:	pop    edx
  418b1d:	jmp    0x418b70
  418b1f:	xor    al,0x8a
  418b21:	mov    dl,0xdb
  418b23:	shl    BYTE PTR [ecx],0x2b
  418b26:	push   ds
  418b27:	(bad)  
  418b28:	ficomp DWORD PTR [esi]
  418b2a:	mov    al,0xdf
  418b2c:	dec    esi
  418b2d:	(bad)  
  418b2e:	xor    DWORD PTR [ebx-0x6],esp
  418b31:	jne    0x418bb1
  418b33:	sub    ch,BYTE PTR [ecx-0x1bd152bb]
  418b39:	hlt    
  418b3a:	jae    0x418ac5
  418b3c:	or     al,0xe0
  418b3e:	cmp    ebp,DWORD PTR [eax-0x3ee467e4]
  418b44:	repnz push ds
  418b46:	call   0x309d:0x3ff13a74
  418b4d:	test   DWORD PTR [ebx-0x24a318bc],ecx
  418b53:	jecxz  0x418b08
  418b55:	xchg   BYTE PTR [ecx],dh
  418b57:	cli    
  418b58:	pop    ds
  418b59:	cmp    al,0x60
  418b5b:	es cmp DWORD PTR gs:[ecx-0x2dadde96],0x1a
  418b64:	mov    edx,0xb658e300
  418b69:	bound  eax,QWORD PTR [ecx+0x4d]
  418b6c:	lock test al,0x28
  418b6f:	fiadd  DWORD PTR [ecx+ebp*2]
  418b72:	cmp    BYTE PTR [esi+0x27f9acbd],cl
  418b78:	sub    DWORD PTR [edi-0x2bb7788b],edx
  418b7e:	inc    esp
  418b7f:	push   eax
  418b80:	push   ecx
  418b81:	leave  
  418b82:	inc    ebp
  418b83:	inc    edx
  418b84:	(bad)  
  418b85:	loop   0x418b32
  418b87:	(bad)  
  418b88:	rcr    BYTE PTR [eax],1
  418b8a:	fcmovbe st,st(3)
  418b8c:	js     0x418bee
  418b8e:	cdq    
  418b8f:	int3   
  418b90:	and    bh,bl
  418b92:	pop    eax
  418b93:	xor    eax,0x7a5fac69
  418b98:	es and bh,bl
  418b9b:	ins    DWORD PTR es:[edi],dx
  418b9c:	push   ds
  418b9d:	mov    ?,WORD PTR [edx+0x50fff3c7]
  418ba3:	push   edx
  418ba4:	sub    bh,bl
  418ba6:	pusha  
  418ba7:	sbb    eax,0x6de55577
  418bac:	in     eax,0x12
  418bae:	aaa    
  418baf:	mov    ebx,0x66fc49e0
  418bb4:	out    0xd9,al
  418bb6:	sti    
  418bb7:	leave  
  418bb8:	ins    BYTE PTR es:[edi],dx
  418bb9:	add    DWORD PTR [ebp+edi*2+0x21],edi
  418bbd:	push   eax
  418bbe:	mov    dh,0xa8
  418bc0:	cwde   
  418bc1:	int3   
  418bc2:	std    
  418bc3:	mov    cl,0xc5
  418bc5:	jbe    0x418c18
  418bc7:	pop    edi
  418bc8:	call   FWORD PTR [ebp+0x34]
  418bcb:	popa   
  418bcc:	enter  0xe670,0x3f
  418bd0:	xor    al,0x15
  418bd2:	repnz mov ecx,0x1338648
  418bd8:	loopne 0x418bd9
  418bda:	jle    0x418c20
  418bdc:	ds jge 0x418b91
  418bdf:	scas   eax,DWORD PTR es:[edi]
  418be0:	mov    es,WORD PTR [eax-0x215aa787]
  418be6:	or     BYTE PTR [ebx+eiz*8],bh
  418be9:	ss dec eax
  418beb:	cs pusha 
  418bed:	xchg   ebx,eax
  418bee:	sub    eax,0x31d547c6
  418bf3:	push   eax
  418bf4:	stos   BYTE PTR es:[edi],al
  418bf5:	mov    ecx,0x584d9d05
  418bfa:	aaa    
  418bfb:	xlat   BYTE PTR ds:[ebx]
  418bfc:	xor    eax,DWORD PTR [ecx]
  418bfe:	outs   dx,BYTE PTR ds:[esi]
  418bff:	mov    ds:0x3917f7f8,eax
  418c04:	cmp    DWORD PTR [esi+0x55e238ce],edi
  418c0a:	ds lock cmp al,0x58
  418c0e:	sbb    eax,0x88665278
  418c13:	jmp    0x1857:0x90598ecf
  418c1a:	mov    ch,BYTE PTR [ebx+0x3f]
  418c1d:	pushf  
  418c1e:	add    esp,DWORD PTR [esi-0x2e]
  418c21:	or     esi,DWORD PTR [ebp+0x10]
  418c24:	mov    ecx,0x29c34505
  418c29:	add    bh,BYTE PTR [edi+0xd77c356]
  418c2f:	jo     0x418c32
  418c31:	mov    esp,0x5c69c075
  418c36:	stc    
  418c37:	pushf  
  418c38:	scas   al,BYTE PTR es:[edi]
  418c39:	xor    al,0x43
  418c3b:	fnsetpm(287 only) 
  418c3d:	sub    bl,BYTE PTR [eax-0x53]
  418c40:	fistp  QWORD PTR [ebp-0x1c9a6b3d]
  418c46:	push   eax
  418c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c48:	xor    eax,0xd4475b19
  418c4d:	inc    ebx
  418c4e:	push   edx
  418c4f:	mov    edi,0x80c6ea84
  418c54:	push   cs
  418c55:	out    0xee,eax
  418c57:	jns    0x418c59
  418c59:	fnstsw WORD PTR [edi]
  418c5b:	pop    esp
  418c5c:	bound  esp,QWORD PTR [esi-0x25c5f584]
  418c62:	loopne 0x418c4f
  418c64:	icebp  
  418c65:	adc    dl,ch
  418c67:	dec    ecx
  418c68:	lods   eax,DWORD PTR ds:[esi]
  418c69:	call   0xa914:0x29aa7f1f
  418c70:	inc    edx
  418c71:	into   
  418c72:	int    0xf3
  418c74:	jmp    0x90a8:0x88b4613e
  418c7b:	in     eax,dx
  418c7c:	imul   ecx,DWORD PTR [eax+0x6a72b594],0x94ce4f41
  418c86:	push   0x83cf0ce8
  418c8b:	xchg   edi,eax
  418c8d:	rcl    DWORD PTR [esi-0x2b],0x4f
  418c91:	and    DWORD PTR [esi+0x37],ebp
  418c94:	fmul   DWORD PTR [esp+edi*2]
  418c97:	dec    esi
  418c98:	or     ah,ah
  418c9a:	call   0x2f6cbff7
  418c9f:	lds    ebx,FWORD PTR [esi]
  418ca1:	inc    esp
  418ca2:	fidiv  DWORD PTR [esi]
  418ca4:	mov    al,0xdd
  418ca6:	addr16 or ah,al
  418ca9:	jmp    0x54ae2063
  418cae:	xchg   esp,eax
  418caf:	popa   
  418cb0:	loopne 0x418ca3
  418cb2:	add    BYTE PTR [edx-0x3f],bl
  418cb5:	mov    edi,0xc6d77ebc
  418cba:	inc    ebx
  418cbb:	or     al,0xde
  418cbd:	xor    eax,0xb311a8e4
  418cc2:	adc    ch,BYTE PTR ds:0xc94f7856
  418cc8:	mov    esi,0xa21898cd
  418ccd:	fscale 
  418ccf:	xor    cl,cl
  418cd1:	mov    eax,0x12111514
  418cd6:	cmp    al,0x56
  418cd8:	arpl   WORD PTR [ebx],bx
  418cda:	or     BYTE PTR [ebp+0x3d],dh
  418cdd:	lock mov ah,0xf1
  418ce0:	inc    ecx
  418ce1:	into   
  418ce2:	fidiv  DWORD PTR [ebx]
  418ce4:	int3   
  418ce5:	jne    0x418cc8
  418ce7:	pushf  
  418ce8:	dec    ecx
  418ce9:	fidivr DWORD PTR [ecx+0x7b40d60c]
  418cef:	fild   DWORD PTR [eax+0x26]
  418cf2:	jb     0x418cfd
  418cf4:	lock in al,dx
  418cf6:	mov    esp,0x9312e3d5
  418cfb:	jae    0x418cf7
  418cfd:	test   al,0x39
  418cff:	mov    esi,0xd29b1193
  418d04:	jnp    0x418d4c
  418d06:	mov    ebx,0x8103de4d
  418d0b:	call   0x874971b7
  418d10:	dec    ebx
  418d11:	add    DWORD PTR [esi-0xbd45869],edi
  418d17:	sbb    edx,DWORD PTR [esi+0x686607]
  418d1d:	xlat   BYTE PTR ds:[ebx]
  418d1e:	pop    ebx
  418d1f:	jno    0x418d71
  418d21:	mov    cl,al
  418d23:	sbb    DWORD PTR ds:0x4529c266,ecx
  418d29:	int3   
  418d2a:	jmp    0x418d8b
  418d2c:	js     0x418d97
  418d2e:	jbe    0x418d35
  418d30:	retf   0x5a67
  418d33:	add    bh,BYTE PTR [eax]
  418d35:	or     al,0xf6
  418d37:	and    eax,0x2e48e4e7
  418d3c:	test   al,0x9b
  418d3e:	xor    al,0x1d
  418d40:	mov    esi,ecx
  418d42:	dec    edi
  418d43:	jl     0x418cf3
  418d45:	add    ebp,edi
  418d47:	inc    ecx
  418d48:	cmp    edx,edx
  418d4a:	out    dx,al
  418d4b:	sbb    al,0x6b
  418d4d:	pop    es
  418d4e:	dec    eax
  418d4f:	sub    al,dl
  418d51:	and    eax,0x7fd36330
  418d56:	fild   WORD PTR [ebp+ebp*8+0x46fd05cc]
  418d5d:	dec    edi
  418d5e:	dec    eax
  418d5f:	mov    BYTE PTR [esi-0x48067763],bh
  418d65:	push   eax
  418d66:	icebp  
  418d67:	daa    
  418d68:	lds    ecx,FWORD PTR [eax]
  418d6a:	jo     0x418d3a
  418d6c:	dec    ebx
  418d6d:	or     eax,0xf083d040
  418d72:	add    al,BYTE PTR [esi-0x7012cf42]
  418d78:	mov    edi,0x2682c78c
  418d7d:	dec    ecx
  418d7e:	cmp    BYTE PTR [esi],bh
  418d80:	jnp    0x418ddc
  418d82:	xlat   BYTE PTR ds:[ebx]
  418d83:	stc    
  418d84:	test   eax,0x6a973a7a
  418d89:	jge    0x418d76
  418d8b:	push   ebx
  418d8c:	push   esi
  418d8d:	fdiv   st,st(5)
  418d8f:	sar    dl,cl
  418d91:	jb     0x418dd3
  418d93:	pop    ds
  418d94:	mov    al,ds:0x28b99410
  418d99:	fst    DWORD PTR [ebx]
  418d9b:	cmc    
  418d9c:	popf   
  418d9d:	push   edi
  418d9e:	push   edx
  418d9f:	dec    ecx
  418da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da1:	imul   ecx,DWORD PTR [ecx+0x15],0xffffffb3
  418da5:	ja     0x418dfc
  418da7:	dec    edi
  418da8:	adc    cl,BYTE PTR [edx+edx*2-0xb4bcee6]
  418daf:	imul   edx,DWORD PTR [ebp+eiz*8+0x76d899e4],0xdc220185
  418dba:	jns    0x418e00
  418dbc:	pop    eax
  418dbd:	imul   ebx,DWORD PTR [ebx+ecx*2+0x4507dcc4],0x72a92ece
  418dc8:	outs   dx,BYTE PTR ds:[esi]
  418dc9:	or     cl,BYTE PTR ds:0x715106f4
  418dcf:	arpl   dx,si
  418dd1:	in     eax,dx
  418dd2:	ins    DWORD PTR es:[edi],dx
  418dd3:	fwait
  418dd4:	and    esp,DWORD PTR ds:0x7f5b4431
  418dda:	adc    eax,0x13a5be8c
  418ddf:	sbb    DWORD PTR [ebx+0x41fbfc99],esp
  418de5:	popa   
  418de6:	stc    
  418de7:	sub    eax,0x88170577
  418dec:	stos   DWORD PTR es:[edi],eax
  418ded:	sbb    al,0xb
  418def:	retf   
  418df0:	xor    dh,BYTE PTR [ebp-0x77]
  418df3:	nop
  418df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418df5:	push   0xc93104c2
  418dfa:	outs   dx,BYTE PTR ds:[esi]
  418dfb:	sbb    dl,BYTE PTR [eax-0x78978403]
  418e01:	xchg   ebx,eax
  418e02:	push   ds
  418e03:	pop    ss
  418e04:	mov    edx,0xfb9fca32
  418e09:	sub    BYTE PTR [ebp+0x22],ah
  418e0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e0d:	shl    BYTE PTR [esp+ebp*1],cl
  418e10:	inc    esp
  418e11:	in     al,dx
  418e12:	arpl   WORD PTR [edx],bp
  418e14:	mov    BYTE PTR [edx-0xae0ba41],dl
  418e1a:	pop    ebp
  418e1b:	push   ds
  418e1c:	sub    dl,BYTE PTR [edx]
  418e1e:	inc    ecx
  418e1f:	cmp    edx,DWORD PTR [esp+edx*2+0x77]
  418e23:	inc    esi
  418e24:	xor    cl,al
  418e26:	inc    ebp
  418e27:	data16 or al,BYTE PTR [edx*4+0x7b677c8d]
  418e2f:	mov    esp,0x1b9c0b80
  418e34:	mov    eax,0x513d16a0
  418e39:	cld    
  418e3a:	fimul  WORD PTR [eax]
  418e3c:	out    0x5b,al
  418e3e:	imul   esp,DWORD PTR [ebx],0xb0fa4ec6
  418e44:	ror    eax,0x70
  418e47:	fcomp  QWORD PTR [esi+0x67763db3]
  418e4d:	mov    esi,DWORD PTR [edx-0x6e020862]
  418e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e54:	dec    eax
  418e55:	push   edx
  418e56:	bound  eax,QWORD PTR [edi]
  418e58:	and    al,0x18
  418e5a:	pop    es
  418e5b:	mov    ebp,0xb6612929
  418e60:	addr16 push ebp
  418e62:	xchg   ebx,eax
  418e63:	cmp    ebx,esi
  418e65:	shl    BYTE PTR [edx+0x5d],cl
  418e68:	std    
  418e69:	dec    ecx
  418e6a:	dec    esi
  418e6b:	jb     0x418e5a
  418e6d:	xchg   edx,eax
  418e6e:	dec    ebx
  418e6f:	sbb    cl,BYTE PTR [esi+edx*1+0x5d182d46]
  418e76:	mov    eax,0xb08aeb5d
  418e7b:	cmc    
  418e7c:	retf   0x6ade
  418e7f:	add    al,0x47
  418e81:	shl    BYTE PTR [edi+0x42844b3c],0x3b
  418e88:	sub    edx,DWORD PTR [edx-0xa]
  418e8b:	cmc    
  418e8c:	(bad)  [ecx+0x71]
  418e8f:	and    DWORD PTR [esi],0xfffffff0
  418e92:	scas   al,BYTE PTR es:[edi]
  418e93:	xchg   esp,eax
  418e94:	inc    eax
  418e95:	or     ah,ah
  418e97:	cwde   
  418e98:	inc    ebx
  418e99:	add    al,0x96
  418e9b:	push   esp
  418e9c:	sub    esp,DWORD PTR [edi+0x2c591a04]
  418ea2:	jb     0x418eed
  418ea4:	rcl    DWORD PTR [ebp-0x5b],cl
  418ea7:	push   ss
  418ea8:	scas   al,BYTE PTR es:[edi]
  418ea9:	clc    
  418eaa:	add    DWORD PTR [ecx],edx
  418eac:	mov    DWORD PTR [ebp-0x78d29ddf],edx
  418eb2:	push   0xffffffd5
  418eb4:	sub    DWORD PTR [ebx+0x520a6bd5],0xffffffce
  418ebb:	push   edx
  418ebc:	mov    esp,0x666c5d2f
  418ec1:	test   eax,0xf1e81718
  418ec6:	data16 aas 
  418ec8:	call   0xeec:0xd311ea18
  418ecf:	lds    ecx,FWORD PTR [esi-0x21]
  418ed2:	inc    ebx
  418ed3:	pop    cx
  418ed5:	jns    0x418f2c
  418ed7:	inc    ebp
  418ed8:	(bad)  
  418ed9:	stos   DWORD PTR es:[edi],eax
  418eda:	push   0x5b
  418edc:	sbb    BYTE PTR [edx-0x72],ch
  418edf:	ds ret 0x915b
  418ee3:	add    eax,0xdf1fe268
  418ee8:	cld    
  418ee9:	sbb    ebx,ebx
  418eeb:	xor    eax,0x94ccadc5
  418ef0:	aas    
  418ef1:	mov    ebx,0x7895375
  418ef6:	and    DWORD PTR [ebp-0x60227e93],eax
  418efc:	push   0xb
  418efe:	outs   dx,BYTE PTR ds:[esi]
  418eff:	(bad)  
  418f00:	pop    edi
  418f01:	jmp    0x418e9a
  418f03:	and    DWORD PTR [ecx],esi
  418f05:	imul   ebp,DWORD PTR [ecx-0x727ace8],0xd9142362
  418f0f:	scas   al,BYTE PTR es:[edi]
  418f10:	adc    edx,DWORD PTR [edx]
  418f12:	iret   
  418f13:	and    cl,BYTE PTR [edi]
  418f15:	add    DWORD PTR [ecx-0x40],0xffffff93
  418f19:	mov    dl,0xf8
  418f1b:	dec    edi
  418f1c:	mov    bl,0x4c
  418f1e:	or     BYTE PTR [edx],al
  418f20:	pop    ebx
  418f21:	pop    ebp
  418f22:	push   esi
  418f23:	(bad)  
  418f24:	sti    
  418f25:	mov    ch,0xac
  418f27:	aaa    
  418f28:	ss inc edi
  418f2a:	sbb    eax,0x58
  418f2d:	sub    eax,0x379dbd2b
  418f32:	add    esi,DWORD PTR [ebp+0x7dc8afb7]
  418f38:	scas   al,BYTE PTR es:[edi]
  418f39:	or     DWORD PTR [eax],ebx
  418f3b:	xor    DWORD PTR [eax+0x428b7a32],ebp
  418f41:	out    dx,al
  418f42:	lea    ebp,[eax+0x50a84834]
  418f48:	ret    
  418f49:	cmp    BYTE PTR [eax-0x2fe12143],dl
  418f4f:	pop    ebp
  418f50:	mov    ds,ecx
  418f52:	shr    DWORD PTR [esi],cl
  418f54:	mov    ah,0xd8
  418f56:	mov    gs,WORD PTR [edi+0x39]
  418f59:	xchg   BYTE PTR [ebx+0x113fa31b],bl
  418f5f:	es sbb eax,0x1ab2f6d5
  418f65:	imul   edx,DWORD PTR [edx-0x2876b3c3],0xcbce84b3
  418f6f:	dec    ecx
  418f70:	jp     0x418f89
  418f72:	(bad)  
  418f73:	(bad)  
  418f75:	ret    
  418f76:	jmp    0x6c28:0x49379b15
  418f7d:	je     0x418f8a
  418f7f:	mov    ah,0x5e
  418f81:	out    dx,al
  418f82:	mov    ecx,0x3060adde
  418f87:	ds into 
  418f89:	push   edx
  418f8a:	mov    ecx,0x1f72e6ff
  418f8f:	mov    esp,0x64953103
  418f94:	or     eax,0xd1e1f388
  418f99:	pop    esi
  418f9a:	pop    edx
  418f9b:	fld    DWORD PTR [esi+edi*4-0x6324af03]
  418fa2:	retf   
  418fa3:	xchg   esi,eax
  418fa4:	sbb    ebp,esi
  418fa6:	pop    ebx
  418fa7:	mov    ch,0x6
  418fa9:	cmc    
  418faa:	imul   eax,DWORD PTR [edx-0x4695755f],0xc08471a
  418fb4:	inc    edi
  418fb5:	push   ebp
  418fb6:	xor    DWORD PTR [edx+0x72],eax
  418fb9:	mov    bl,0x66
  418fbb:	ss jge 0x418fd9
  418fbe:	loope  0x418f48
  418fc0:	push   ebp
  418fc1:	sub    ebp,ebx
  418fc3:	int    0x7c
  418fc5:	push   0x6d
  418fc7:	iret   
  418fc8:	int    0x32
  418fca:	int    0x96
  418fcc:	aas    
  418fcd:	mov    esp,0x62d6bde3
  418fd2:	ins    DWORD PTR es:[edi],dx
  418fd3:	(bad)  
  418fd4:	into   
  418fd5:	jmp    0x22635796
  418fda:	cwde   
  418fdb:	mov    dh,0x3a
  418fdd:	clc    
  418fde:	mov    DWORD PTR [eax],esi
  418fe0:	jle    0x418f8f
  418fe2:	cmp    eax,0xcb80d419
  418fe7:	push   0xae81d398
  418fec:	shr    esp,1
  418fee:	push   edi
  418fef:	(bad)  
  418ff1:	call   0xf6ee:0xcb9c00e9
  418ff8:	jb     0x418f83
  418ffa:	and    eax,0x70951207
  418fff:	fistp  DWORD PTR [edx+0x4fe78558]
  419005:	mov    ch,0x82
  419007:	xchg   ebp,eax
  419008:	xchg   BYTE PTR [ebp-0x38e37a09],bl
  41900e:	rol    DWORD PTR [eax],1
  419010:	dec    eax
  419011:	scas   al,BYTE PTR es:[edi]
  419012:	shr    DWORD PTR [edx+0x61549b1],1
  419018:	xlat   BYTE PTR ds:[ebx]
  419019:	lods   al,BYTE PTR ds:[esi]
  41901a:	pop    esp
  41901b:	push   ebx
  41901c:	loopne 0x418fc4
  41901e:	push   cs
  41901f:	daa    
  419020:	sbb    ah,bh
  419022:	into   
  419023:	call   0x88fba80c
  419028:	push   es
  419029:	add    DWORD PTR [ebp+0x3c],esp
  41902c:	clc    
  41902d:	(bad)  
  41902f:	push   cs
  419030:	repnz xchg edx,eax
  419032:	retf   0x1f8e
  419035:	retf   
  419036:	add    esp,0x77
  419039:	push   ebp
  41903a:	sub    edx,DWORD PTR [ebp+0x22]
  41903d:	jnp    0x419057
  41903f:	mov    dh,0xe7
  419041:	dec    esp
  419042:	or     ebp,DWORD PTR fs:[edi]
  419045:	fsubr  QWORD PTR [ebp-0x204154db]
  41904b:	popa   
  41904c:	idiv   BYTE PTR [edi-0x10]
  41904f:	ds loopne 0x419070
  419052:	cmp    BYTE PTR [eax],dl
  419054:	jl     0x418ff3
  419056:	js     0x419017
  419058:	loopne 0x4190c7
  41905a:	cmp    ebp,DWORD PTR [eax+0x2d23e4d2]
  419060:	out    0xa2,al
  419062:	stos   BYTE PTR es:[edi],al
  419063:	std    
  419064:	ror    BYTE PTR [eax+0x5d4b6f3b],0xa4
  41906b:	push   0xfffffff6
  41906d:	retf   
  41906e:	rcr    ebp,0x52
  419071:	and    bl,bl
  419073:	xchg   ecx,eax
  419074:	pusha  
  419075:	call   0x23de7886
  41907a:	and    BYTE PTR [eax],dh
  41907c:	fcmovb st,st(6)
  41907e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41907f:	sub    edx,DWORD PTR [eax-0x2301054]
  419085:	(bad)  [eax+esi*2]
  419088:	loop   0x4190b8
  41908a:	add    al,0xaa
  41908c:	cmc    
  41908d:	aad    0xb2
  41908f:	xchg   ebp,eax
  419090:	sub    al,al
  419092:	aad    0xeb
  419094:	fdivr  QWORD PTR [eax-0x23]
  419097:	adc    ebx,DWORD PTR [esi-0x2422c042]
  41909d:	inc    esp
  41909e:	pop    esi
  41909f:	out    0xcc,al
  4190a1:	dec    ebp
  4190a2:	adc    eax,0xca9ffc5c
  4190a7:	add    DWORD PTR [ebx],0xffffffc0
  4190aa:	add    esp,esp
  4190ac:	pushf  
  4190ad:	fild   DWORD PTR es:[esi-0x1]
  4190b1:	xor    ah,ch
  4190b3:	call   0x6895edd7
  4190b8:	lahf   
  4190b9:	test   al,0x28
  4190bb:	ret    0xc503
  4190be:	xor    al,0xe4
  4190c0:	and    eax,0xeace1305
  4190c5:	mov    eax,0xefcc6919
  4190ca:	inc    edx
  4190cb:	jp     0x419103
  4190cd:	xchg   edx,eax
  4190ce:	inc    ebp
  4190cf:	outs   dx,BYTE PTR ds:[esi]
  4190d0:	jg     0x419151
  4190d2:	rcr    BYTE PTR ds:0x796d8495,1
  4190d8:	in     al,0xb7
  4190da:	loopne 0x4190f7
  4190dc:	(bad)  
  4190dd:	sub    BYTE PTR [eax-0x621b646f],ah
  4190e3:	popa   
  4190e4:	cmp    al,0x8
  4190e6:	adc    al,0xec
  4190e8:	mov    dl,0x30
  4190ea:	and    dl,bh
  4190ec:	jne    0x419086
  4190ee:	jne    0x4190f8
  4190f0:	mov    bl,0x68
  4190f2:	nop
  4190f3:	dec    ebx
  4190f4:	aad    0xb4
  4190f6:	aaa    
  4190f7:	(bad)  [ebx]
  4190f9:	cwde   
  4190fa:	pop    edx
  4190fb:	and    dl,ch
  4190fd:	jp     0x419179
  4190ff:	adc    esp,DWORD PTR [ebp+0x17c31cf5]
  419105:	xor    dl,BYTE PTR [esi]
  419107:	aad    0x3f
  419109:	pop    edx
  41910a:	cmp    eax,0x1fad7315
  41910f:	push   edx
  419110:	aam    0xf0
  419112:	hlt    
  419113:	inc    ebp
  419114:	fsub   QWORD PTR [edx+0x407de1e1]
  41911a:	call   0x9aea67d1
  41911f:	xchg   esp,eax
  419120:	sbb    ebx,DWORD PTR [esi+ecx*1-0x78]
  419124:	mov    ecx,esi
  419126:	rcl    BYTE PTR [esp+ebp*1-0x1b9ce49c],cl
  41912d:	mov    edi,0xb58f40d2
  419132:	pop    esi
  419133:	sub    al,0x44
  419135:	xor    bh,BYTE PTR ds:0xec583265
  41913b:	call   0x3187:0xc7034ce9
  419142:	jmp    0xbc:0xeab10c1b
  419149:	aam    0x3b
  41914b:	inc    edx
  41914c:	retf   
  41914d:	adc    al,0x89
  41914f:	or     eax,0xc995b74e
  419154:	and    eax,0xf1286c07
  419159:	in     eax,dx
  41915a:	dec    eax
  41915b:	jne    0x4190f0
  41915d:	mov    ch,0x7a
  41915f:	mov    WORD PTR [ebp-0x19],?
  419162:	addr16 iret 
  419164:	mov    ebp,0x41301bbb
  419169:	les    eax,FWORD PTR [ebx-0x49]
  41916c:	bswap  esi
  41916e:	mov    ebp,0x13de1210
  419173:	(bad)  
  419174:	adc    ch,BYTE PTR ds:0x275a92ae
  41917a:	out    0xc6,al
  41917c:	lods   al,BYTE PTR ds:[esi]
  41917d:	out    0x9f,al
  41917f:	daa    
  419180:	leave  
  419181:	loopne 0x41912f
  419183:	and    BYTE PTR [eax+0x6e2fb479],ah
  419189:	pop    esp
  41918a:	pop    ecx
  41918b:	mov    ebx,0x3f70eb1a
  419190:	jmp    0x4191b8
  419192:	adc    eax,0x72e8afa5
  419197:	add    esp,DWORD PTR [edx]
  419199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41919a:	xor    cl,BYTE PTR [ecx+0x2f]
  41919d:	(bad)  
  41919e:	jl     0x419147
  4191a0:	and    esi,DWORD PTR [eax-0x62dcae55]
  4191a6:	add    bh,BYTE PTR [ebp+0x6272c46f]
  4191ac:	jl     0x4191e7
  4191ae:	lahf   
  4191af:	enter  0x21a2,0x77
  4191b3:	lea    esi,[ebp+edx*4+0x4c]
  4191b7:	jmp    0x419178
  4191b9:	cmp    al,0xfd
  4191bb:	sub    BYTE PTR [edi],bh
  4191bd:	adc    esi,ebx
  4191bf:	inc    esi
  4191c0:	push   cs
  4191c1:	cmp    esp,edx
  4191c3:	inc    edi
  4191c4:	scas   al,BYTE PTR es:[edi]
  4191c5:	or     esp,DWORD PTR [esi+eiz*2]
  4191c8:	xor    ecx,DWORD PTR ds:0x7dd1986
  4191ce:	cmp    esp,DWORD PTR [ebp-0x71]
  4191d1:	mov    dh,0xf5
  4191d3:	inc    eax
  4191d4:	(bad)  
  4191d5:	lock cli 
  4191d7:	push   0x220a6e38
  4191dc:	repz jp 0x4191e1
  4191df:	mov    al,0xa3
  4191e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191e2:	shr    DWORD PTR [esp+eiz*2],cl
  4191e5:	jp     0x4191a9
  4191e7:	or     DWORD PTR [edi+0x52],esp
  4191ea:	int    0xb8
  4191ec:	push   ss
  4191ed:	lods   al,BYTE PTR ds:[esi]
  4191ee:	or     DWORD PTR [ecx-0x61],edx
  4191f1:	leave  
  4191f2:	lds    eax,FWORD PTR [edx+0x51]
  4191f5:	mov    eax,ds:0xf9fc97a6
  4191fa:	sbb    BYTE PTR [eax-0x2d],0x29
  4191fe:	icebp  
  4191ff:	ret    0x5dd3
  419202:	push   cs
  419203:	xchg   ecx,eax
  419204:	dec    ebx
  419205:	stc    
  419206:	jmp    0xd6aa3f54
  41920b:	fidivr DWORD PTR [esp+ecx*1]
  41920e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41920f:	jmp    0x41922a
  419211:	mov    bh,0xd9
  419213:	sbb    ah,al
  419215:	inc    ebx
  419216:	repz mov bl,0xa9
  419219:	cli    
  41921a:	or     eax,0x44fd412b
  41921f:	in     al,0x51
  419221:	push   ss
  419222:	inc    eax
  419223:	jbe    0x419215
  419225:	(bad)
  419228:	iret   
  419229:	iret   
  41922a:	xchg   esi,eax
  41922b:	ror    DWORD PTR [esi+0x40],0x9a
  41922f:	sbb    al,0x74
  419231:	mov    edx,DWORD PTR [ebp-0x4f1b70df]
  419237:	pop    ds
  419238:	inc    edi
  419239:	push   edi
  41923a:	sbb    ebx,esi
  41923c:	aad    0xa5
  41923e:	pop    ebp
  41923f:	lods   eax,DWORD PTR ds:[esi]
  419240:	xor    al,0x9d
  419242:	lahf   
  419243:	imul   ecx,eax,0xffffffdc
  419246:	int3   
  419247:	(bad)  
  419249:	mov    dl,0x7f
  41924b:	fimul  DWORD PTR [ecx-0x3f]
  41924e:	xlat   BYTE PTR ds:[ebx]
  41924f:	scas   al,BYTE PTR es:[edi]
  419250:	xor    eax,0x55195d53
  419255:	add    bl,ah
  419257:	adc    eax,0xad58f5d2
  41925c:	dec    edi
  41925d:	shr    DWORD PTR [esi-0x85ef2fd],0xe4
  419264:	fadd   QWORD PTR [ecx-0x6058db5c]
  41926a:	adc    DWORD PTR [ecx+0x217a989b],ecx
  419270:	jmp    0xc066e456
  419275:	call   0xa708c78f
  41927a:	adc    edx,eax
  41927c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41927d:	add    al,0x20
  41927f:	xchg   DWORD PTR [ebx-0x5c945c65],esi
  419285:	(bad)  
  419287:	add    DWORD PTR ds:[edx-0x749ce4e],ecx
  41928e:	sbb    DWORD PTR [ebx-0x3f3e78cc],edi
  419294:	inc    esp
  419295:	pusha  
  419296:	ins    BYTE PTR es:[edi],dx
  419297:	jg     0x4192db
  419299:	or     dl,0xc4
  41929c:	and    eax,0x518787de
  4192a1:	or     BYTE PTR [ebp+0x10],ch
  4192a4:	js     0x41924e
  4192a6:	adc    edx,DWORD PTR [ebx+0x48]
  4192a9:	scas   eax,DWORD PTR es:[edi]
  4192aa:	popa   
  4192ab:	add    BYTE PTR [ecx+0x36e30445],ch
  4192b1:	in     eax,dx
  4192b2:	sahf   
  4192b3:	inc    ecx
  4192b4:	jae    0x419284
  4192b6:	push   0xdba56eb7
  4192bb:	mov    eax,ds:0xe6a074c9
  4192c0:	xor    BYTE PTR [edx-0x2b],ah
  4192c3:	mov    dh,cl
  4192c5:	pop    esp
  4192c6:	jge    0x41927b
  4192c8:	xchg   DWORD PTR [ebp*8+0x6c2b09e0],esp
  4192cf:	dec    eax
  4192d0:	jb     0x419266
  4192d2:	je     0x41932a
  4192d4:	fwait
  4192d5:	mov    bh,0x3b
  4192d7:	out    dx,eax
  4192d8:	fwait
  4192d9:	and    BYTE PTR [edi-0x51152602],cl
  4192df:	sbb    BYTE PTR fs:[edi+0x72],bl
  4192e3:	lahf   
  4192e4:	cmp    DWORD PTR [ecx-0x3c9e9981],esp
  4192ea:	(bad)  
  4192eb:	stos   BYTE PTR es:[edi],al
  4192ec:	inc    ecx
  4192ed:	popf   
  4192ee:	fld    st(1)
  4192f0:	(bad)  
  4192f1:	xchg   ecx,eax
  4192f2:	in     eax,0x6d
  4192f4:	imul   ebx,ebp,0xf1d2d35d
  4192fa:	imul   ebx,edx,0xffffffa3
  4192fd:	data16 rcl ah,1
  419300:	mov    bl,0xe5
  419302:	adc    DWORD PTR [esi-0x4],0xfffffffd
  419306:	dec    edi
  419307:	cs push ss
  419309:	or     al,ch
  41930b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41930c:	xor    ah,bh
  41930e:	cmp    al,0xdb
  419310:	dec    esi
  419311:	mov    edi,0x692c4fbf
  419316:	out    0x20,al
  419318:	jb     0x4192b4
  41931a:	xchg   ebx,eax
  41931b:	jmp    0x4192a8
  41931d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41931e:	ror    DWORD PTR [esi+0x42cd8380],cl
  419324:	push   ebp
  419325:	add    eax,0xcf106f45
  41932a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41932b:	or     al,0x57
  41932d:	outs   dx,DWORD PTR ds:[esi]
  41932e:	and    eax,0x5a1ac067
  419333:	xor    al,0x4a
  419335:	and    eax,0x9622334a
  41933a:	out    dx,eax
  41933b:	mov    esp,0x64ddfc1a
  419340:	in     al,0x37
  419342:	outs   dx,BYTE PTR ds:[esi]
  419343:	test   eax,0xb090f4d2
  419348:	mov    ds:0xf36cc60f,eax
  41934d:	test   eax,0xfc4a66e1
  419352:	cdq    
  419353:	jae    0x419351
  419355:	xchg   edx,eax
  419356:	jbe    0x419329
  419358:	sahf   
  419359:	sbb    DWORD PTR [ebp-0x2],ecx
  41935c:	sbb    eax,0xf7c54be0
  419361:	fnstcw WORD PTR [ecx+edx*2]
  419364:	mov    dl,0x7c
  419366:	pop    ss
  419367:	push   es
  419368:	mov    ah,0x21
  41936a:	jecxz  0x419379
  41936c:	xchg   ebx,eax
  41936d:	ins    DWORD PTR es:[edi],dx
  41936e:	xchg   edi,eax
  41936f:	loop   0x419323
  419371:	sub    DWORD PTR [edx+0x19],ebp
  419374:	pop    eax
  419375:	cwde   
  419376:	mov    ds:0x982507f9,al
  41937b:	adc    DWORD PTR [edi+0x71d4fff9],0x9dcea136
  419385:	and    DWORD PTR [ecx-0x3f],0x72e0a0a
  41938c:	test   eax,0x8a81695d
  419391:	mov    eax,0x2c63baae
  419396:	cdq    
  419397:	test   al,0xe3
  419399:	mov    cl,0x4b
  41939b:	repnz retf 
  41939d:	push   esp
  41939e:	fstp   DWORD PTR [eax+0x25]
  4193a1:	cwde   
  4193a2:	repnz imul esp,DWORD PTR [edx+ebx*1+0x119abb3f],0xe9ef77cf
  4193ae:	(bad)  
  4193af:	aad    0x2e
  4193b1:	(bad)  
  4193b4:	dec    ebp
  4193b5:	mov    WORD PTR [edi+0x51],ds
  4193b8:	outs   dx,DWORD PTR ds:[esi]
  4193b9:	dec    esi
  4193ba:	jl     0x4193da
  4193bc:	sbb    ecx,esi
  4193be:	mov    ds:0xdf8fa988,eax
  4193c3:	jo     0x41934d
  4193c5:	mov    ch,0x1d
  4193c7:	fcomp  DWORD PTR [ebp+0x11d5da38]
  4193cd:	mov    dh,0xe2
  4193cf:	adc    esi,0x5e
  4193d2:	arpl   WORD PTR [ebp+0x26c57d8c],si
  4193d8:	pop    ecx
  4193d9:	leave  
  4193da:	or     dl,BYTE PTR [ebp+0x65d8f358]
  4193e0:	dec    edi
  4193e1:	push   edi
  4193e2:	jl     0x419463
  4193e4:	mov    BYTE PTR [edx],dh
  4193e6:	cmp    bl,BYTE PTR [edi]
  4193e8:	cdq    
  4193e9:	mov    ebx,0xc5467e94
  4193ee:	xor    BYTE PTR [edx+0x75],ch
  4193f1:	mov    BYTE PTR [ecx-0x16789a89],dh
  4193f7:	pusha  
  4193f8:	fidiv  DWORD PTR [edx]
  4193fa:	call   0xf12:0x1ee00410
  419401:	add    al,0xce
  419403:	das    
  419404:	pop    ecx
  419405:	or     BYTE PTR [esi-0x68],dl
  419408:	xchg   BYTE PTR [edi-0x3066d64e],ch
  41940e:	xchg   ecx,eax
  41940f:	or     bh,bl
  419411:	xor    edi,DWORD PTR [eax+0x68]
  419414:	(bad)  
  419415:	test   DWORD PTR [eax-0x730f802d],0xc299252c
  41941f:	and    BYTE PTR [ebx+0x7d],0x5b
  419423:	dec    ecx
  419424:	cmp    al,0x80
  419426:	es sti 
  419428:	xchg   ah,ah
  41942a:	xchg   al,bh
  41942c:	push   ebp
  41942d:	repnz xchg esi,eax
  41942f:	push   ecx
  419430:	xor    esi,eax
  419432:	fiadd  WORD PTR [ecx-0x10befcca]
  419438:	jg     0x4193e7
  41943a:	or     dl,BYTE PTR [ebx+0x31c946ef]
  419440:	loop   0x4193d4
  419442:	sub    DWORD PTR [esi+eiz*8-0x6c],esp
  419446:	in     al,0xc7
  419448:	aaa    
  419449:	xor    ecx,DWORD PTR [edx-0x79812b6c]
  41944f:	mov    BYTE PTR [edi+0x73],bh
  419452:	push   ss
  419453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419454:	mov    ebx,0x8b36713c
  419459:	mov    al,0xdc
  41945b:	imul   ecx,DWORD PTR [edi],0xffffffe9
  41945e:	aas    
  41945f:	aad    0x2d
  419461:	sub    ecx,ebp
  419463:	in     al,0x7c
  419465:	gs adc dl,bh
  419468:	sbb    bl,ch
  41946a:	adc    eax,0x479626c3
  41946f:	dec    ecx
  419470:	imul   esp,eax,0xffffff93
  419473:	sub    dl,BYTE PTR [esi-0x4]
  419476:	jmp    0x41945b
  419478:	in     al,0xfd
  41947a:	cmp    ebx,esi
  41947c:	push   0xe75acad4
  419481:	mov    ah,0x5c
  419483:	fs scas al,BYTE PTR es:[edi]
  419485:	sar    BYTE PTR [edx+0x21a73775],0x1e
  41948c:	loop   0x419465
  41948e:	add    DWORD PTR [edx+ebp*2+0x75],esi
  419492:	pop    ebp
  419493:	push   es
  419494:	aas    
  419495:	sub    DWORD PTR [ebp+0x1d55b328],0x1ff20b6
  41949f:	mov    BYTE PTR [ecx],bl
  4194a1:	push   0x3f36472a
  4194a6:	sar    BYTE PTR [eax-0x17fc5332],cl
  4194ac:	xchg   BYTE PTR [ebp+0x4639c227],cl
  4194b2:	jle    0x419501
  4194b4:	push   ebp
  4194b5:	stos   BYTE PTR es:[edi],al
  4194b6:	addr16 dec ebx
  4194b8:	xchg   ebx,eax
  4194b9:	stos   DWORD PTR es:[edi],eax
  4194ba:	cdq    
  4194bb:	fwait
  4194bc:	out    0x6c,al
  4194be:	cmc    
  4194bf:	aam    0xe0
  4194c1:	pop    edi
  4194c2:	pushf  
  4194c3:	dec    ebp
  4194c4:	out    0x91,eax
  4194c6:	adc    BYTE PTR [edi+0x27],bl
  4194c9:	jbe    0x419541
  4194cb:	dec    esp
  4194cc:	and    cx,sp
  4194cf:	sar    DWORD PTR [edi-0x63a85b31],0xb7
  4194d6:	mov    ebx,0x2101e2ec
  4194db:	lahf   
  4194dc:	ret    
  4194dd:	jp     0x41954c
  4194df:	or     al,0xe0
  4194e1:	or     cl,dh
  4194e3:	pop    edi
  4194e4:	stc    
  4194e5:	xchg   edx,eax
  4194e6:	or     dl,BYTE PTR [edx-0x5]
  4194e9:	and    ebp,DWORD PTR [eax]
  4194eb:	sbb    DWORD PTR [eax-0x216b4319],edx
  4194f1:	sbb    al,0x4d
  4194f3:	push   es
  4194f4:	rcl    eax,0x20
  4194f7:	scas   al,BYTE PTR es:[edi]
  4194f8:	ins    DWORD PTR es:[edi],dx
  4194f9:	xor    esp,DWORD PTR [eax]
  4194fb:	pop    ecx
  4194fc:	pop    ds
  4194fd:	in     al,0xec
  4194ff:	popa   
  419500:	cwde   
  419501:	or     al,0xa4
  419503:	(bad)  
  419504:	mov    dh,0x16
  419506:	adc    bl,dh
  419508:	push   esp
  419509:	out    0xa7,al
  41950b:	sub    DWORD PTR [ebp-0x1b3b3aec],0x5394230c
  419515:	cmp    al,0xc9
  419517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419518:	jbe    0x41950b
  41951a:	mov    eax,0x6b98cbe5
  41951f:	mov    ecx,0x8a915d2
  419524:	ret    
  419525:	adc    al,0xfe
  419527:	add    cl,BYTE PTR [edx]
  419529:	sbb    eax,0x6db5f0a6
  41952e:	test   al,0xc2
  419530:	mov    ebp,0x67642365
  419535:	cwde   
  419536:	pop    eax
  419537:	sub    al,bl
  419539:	mov    ecx,DWORD PTR [eax-0x75]
  41953c:	js     0x41951c
  41953e:	out    dx,eax
  41953f:	or     bh,BYTE PTR [ecx-0x56]
  419542:	shr    BYTE PTR [ecx+edi*1+0x50b2a1d2],1
  419549:	inc    edi
  41954a:	ins    BYTE PTR es:[edi],dx
  41954b:	push   0xccf405b2
  419550:	mov    BYTE PTR [ebp+ebp*2-0x34dd635c],dl
  419557:	fisub  WORD PTR [esi]
  419559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41955a:	(bad)  
  41955b:	iret   
  41955c:	jo     0x4194ee
  41955e:	stos   BYTE PTR es:[edi],al
  41955f:	adc    eax,0xfed8068
  419564:	call   FWORD PTR [ebp+0x77]
  419567:	out    0x2e,eax
  419569:	inc    edx
  41956a:	xor    BYTE PTR [edx],dh
  41956c:	fistp  WORD PTR [edi+0x30e057f8]
  419572:	push   es
  419573:	stc    
  419574:	in     al,0x49
  419576:	mov    BYTE PTR [ebp+0x56],bh
  419579:	add    BYTE PTR [edi],bh
  41957b:	push   ss
  41957c:	sub    BYTE PTR [eax+0x6fecc954],cl
  419582:	jl     0x419540
  419584:	fcos   
  419586:	imul   ebp,DWORD PTR [ebp-0x69667aa0],0x31
  41958d:	dec    edi
  41958e:	adc    BYTE PTR [eax+0x3f97022d],0x77
  419595:	(bad)  
  419597:	xor    eax,DWORD PTR [eax-0x5e]
  41959a:	xor    DWORD PTR [ebx+0x2273348e],esi
  4195a0:	call   DWORD PTR [edi-0x71]
  4195a3:	sbb    al,0xe1
  4195a5:	test   BYTE PTR [ebp+0x5e],dh
  4195a8:	outs   dx,DWORD PTR ds:[esi]
  4195a9:	pushf  
  4195aa:	test   ebp,ebx
  4195ac:	sub    DWORD PTR [edx-0x12],ebx
  4195af:	mov    bl,0xc2
  4195b1:	dec    ecx
  4195b2:	rol    DWORD PTR [eax],0x45
  4195b5:	bnd jo 0x419601
  4195b8:	inc    ebp
  4195b9:	adc    BYTE PTR [edx-0x9],bh
  4195bc:	leave  
  4195bd:	test   DWORD PTR [ecx],esi
  4195bf:	or     eax,0xa5e54458
  4195c4:	dec    esp
  4195c5:	adc    BYTE PTR [edi+0x230321f],0x3
  4195cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195cd:	mov    edx,0x8075f1d3
  4195d2:	mov    DWORD PTR [ebx-0x58de6c2],esp
  4195d8:	xchg   DWORD PTR [edx-0x55341f98],ebp
  4195de:	pop    edx
  4195df:	lahf   
  4195e0:	mov    al,ds:0x3440e6ce
  4195e5:	mov    eax,ds:0x87db1112
  4195ea:	or     DWORD PTR [esi],ebp
  4195ec:	call   0x4182:0xf4babd5
  4195f3:	and    BYTE PTR [edx],ch
  4195f5:	aas    
  4195f6:	mov    ebx,0xce63c773
  4195fb:	push   edi
  4195fc:	mov    BYTE PTR [eax],0x8d
  4195ff:	push   cs
  419600:	push   eax
  419601:	pop    esi
  419602:	xchg   edi,eax
  419603:	dec    ebx
  419604:	sbb    BYTE PTR [edi+0x49a27069],0x6c
  41960b:	dec    edx
  41960c:	daa    
  41960d:	xchg   ecx,eax
  41960e:	xchg   esp,eax
  41960f:	xor    BYTE PTR [esi],dl
  419611:	imul   ebx,DWORD PTR [ebx+0x7f50622b],0x45550955
  41961b:	test   eax,0xe8376574
  419620:	jg     0x419692
  419622:	pop    esi
  419623:	adc    BYTE PTR [ecx-0x2cb02d0],dh
  419629:	aam    0x0
  41962b:	xchg   ebp,eax
  41962c:	fdiv   DWORD PTR [ebp-0x472cfdd1]
  419632:	scas   al,BYTE PTR es:[edi]
  419633:	push   ebx
  419634:	xor    BYTE PTR [eax-0x25e56a37],bh
  41963a:	data16 mov ch,0x82
  41963d:	scas   eax,DWORD PTR es:[edi]
  41963e:	dec    ecx
  41963f:	mov    ebp,0xca1bf0b1
  419644:	jne    0x4195eb
  419646:	test   al,0x6f
  419648:	sub    BYTE PTR [esi],ch
  41964a:	and    BYTE PTR [ebx+0x6d9bf819],bl
  419650:	mov    al,0x3e
  419652:	dec    edi
  419653:	dec    edi
  419654:	mov    ebx,0xdcba52d5
  419659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41965a:	addr16 pop ds
  41965c:	and    DWORD PTR [esp+ebp*1+0xfaf12bd],ecx
  419663:	inc    ebp
  419664:	scas   eax,DWORD PTR es:[edi]
  419665:	push   esi
  419666:	and    bl,BYTE PTR [ecx-0x17]
  419669:	ret    0xf818
  41966c:	repz jae 0x41966b
  41966f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419670:	aam    0x3b
  419672:	neg    BYTE PTR [esi-0x16b4ed94]
  419678:	shl    DWORD PTR ds:0x46eca03a,cl
  41967e:	repnz repnz and BYTE PTR ds:0x83895a49,ah
  419686:	sub    DWORD PTR [ecx-0x577946e1],esp
  41968c:	mov    dh,0xb3
  41968e:	nop
  41968f:	xchg   ebx,eax
  419690:	sti    
  419691:	popa   
  419692:	sub    esp,esp
  419694:	inc    esi
  419695:	(bad)  
  419696:	cli    
  419697:	out    dx,al
  419698:	push   ebp
  419699:	sahf   
  41969a:	fild   DWORD PTR [eax]
  41969c:	xchg   edi,eax
  41969d:	ja     0x419648
  41969f:	xor    ecx,DWORD PTR [edi+0x60]
  4196a2:	xchg   dl,dh
  4196a4:	sar    DWORD PTR [ebp+0x649a9ed9],0x2c
  4196ab:	push   ss
  4196ac:	xchg   ebx,eax
  4196ad:	icebp  
  4196ae:	scas   al,BYTE PTR es:[edi]
  4196af:	es loop 0x41971d
  4196b2:	std    
  4196b3:	ret    0x9eb1
  4196b6:	sub    DWORD PTR [esi+0x68],0xc2640421
  4196bd:	shr    ah,cl
  4196bf:	pop    eax
  4196c0:	and    bl,dl
  4196c2:	int3   
  4196c3:	pop    ss
  4196c4:	cmp    BYTE PTR [ebx],bh
  4196c6:	or     al,0xd7
  4196c8:	mov    ch,0x81
  4196ca:	sti    
  4196cb:	sbb    eax,0xa1f9fb14
  4196d0:	mov    esp,0x1c90f0a2
  4196d5:	mov    ah,0xa6
  4196d7:	int3   
  4196d8:	dec    ebp
  4196d9:	cdq    
  4196da:	daa    
  4196db:	fild   DWORD PTR [edx]
  4196dd:	mov    bl,0x8f
  4196df:	frstor [ecx*1+0x5bafc31a]
  4196e6:	pop    es
  4196e7:	in     al,0x71
  4196e9:	mov    edx,0x5f44ce8b
  4196ee:	add    ebp,0x4a
  4196f1:	pop    ecx
  4196f2:	xchg   ebx,eax
  4196f3:	pop    eax
  4196f4:	jo     0x419712
  4196f6:	and    esp,DWORD PTR ds:0xae448c04
  4196fc:	out    0xd2,al
  4196fe:	push   edx
  4196ff:	cmc    
  419700:	idiv   DWORD PTR [edi-0x4015a5d0]
  419706:	pushf  
  419707:	hlt    
  419708:	and    eax,0x3239d6e
  41970d:	outs   dx,BYTE PTR ds:[esi]
  41970e:	pusha  
  41970f:	mov    esi,0x272e43c
  419714:	scas   al,BYTE PTR es:[edi]
  419715:	sbb    eax,0x420e4d82
  41971a:	dec    eax
  41971b:	pop    esp
  41971c:	mov    ds:0x722853a8,eax
  419721:	(bad)  
  419722:	mov    ecx,DWORD PTR [ecx+0x34]
  419725:	jge    0x419701
  419727:	sbb    eax,0xda26010f
  41972c:	lea    esp,[eax]
  41972e:	push   0xfffffff7
  419730:	(bad)  [eax+edx*4+0x1f343118]
  419737:	jnp    0x4196e9
  419739:	call   0x915411bc
  41973e:	sub    ebx,esi
  419740:	jo     0x4196c6
  419742:	and    DWORD PTR [ebx+0x68d1eeab],esp
  419748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419749:	dec    edx
  41974a:	pop    edi
  41974b:	jno    0x419705
  41974d:	aam    0xd2
  41974f:	xor    BYTE PTR [eax],bh
  419751:	dec    ecx
  419752:	ret    
  419753:	ds jno 0x4197b8
  419756:	nop
  419757:	in     al,0xd8
  419759:	mov    al,0x87
  41975b:	loope  0x4196fb
  41975d:	fbld   TBYTE PTR [edx]
  41975f:	pop    ecx
  419760:	add    cl,BYTE PTR [ebx+edi*2-0x1ee4276a]
  419767:	or     eax,0xaa7a1fd7
  41976c:	xor    BYTE PTR [edx],bl
  41976e:	mov    edi,esi
  419770:	xchg   BYTE PTR [ebx],bh
  419772:	ficomp WORD PTR [edx]
  419774:	aas    
  419775:	mov    bh,0xb3
  419777:	sub    eax,0xb9b735e0
  41977c:	pop    ecx
  41977d:	idiv   DWORD PTR [edi-0x3c39c8bd]
  419783:	push   ds
  419784:	popa   
  419785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419786:	jno    0x4197cc
  419788:	push   edi
  419789:	push   edi
  41978a:	push   edi
  41978b:	mov    bl,0xdd
  41978d:	inc    eax
  41978e:	std    
  41978f:	and    esp,DWORD PTR [esi+0x6ccdf627]
  419795:	mov    es,WORD PTR [edi-0x4b]
  419798:	cld    
  419799:	mov    cl,0x52
  41979b:	inc    ecx
  41979c:	lock cmp dl,bl
  41979f:	gs push cs
  4197a1:	xchg   edx,eax
  4197a2:	dec    ebx
  4197a3:	in     eax,dx
  4197a4:	icebp  
  4197a5:	lar    ecx,si
  4197a8:	ret    0x9420
  4197ab:	push   esi
  4197ac:	push   ebp
  4197ad:	mov    ebx,0x50e0128f
  4197b2:	mov    bl,0x57
  4197b4:	iret   
  4197b5:	mov    ah,0x6b
  4197b7:	and    BYTE PTR [edi],ch
  4197b9:	pop    edi
  4197ba:	into   
  4197bb:	adc    eax,0x809ae9ee
  4197c0:	or     DWORD PTR [ebx+0x798694b6],ebx
  4197c6:	out    0x2e,eax
  4197c8:	adc    DWORD PTR [edx+esi*4+0x49f2b70d],ecx
  4197cf:	pusha  
  4197d0:	cwde   
  4197d1:	pop    ebp
  4197d2:	jmp    0x419848
  4197d4:	adc    dh,BYTE PTR [edi]
  4197d6:	sub    ebp,DWORD PTR [ebp-0x7c7c1d74]
  4197dc:	std    
  4197dd:	test   BYTE PTR [ebp+0x6b75bddf],ch
  4197e3:	inc    esi
  4197e4:	call   0xbcd3:0x2ea88fc3
  4197eb:	jb     0x4197ff
  4197ed:	xchg   edx,eax
  4197ee:	dec    esp
  4197ef:	xor    eax,0xba4e4be9
  4197f4:	lock in al,0x3b
  4197f7:	daa    
  4197f8:	int    0x90
  4197fa:	xchg   DWORD PTR [ecx-0x10ecbee7],ecx
  419800:	jnp    0x4197a6
  419802:	fstp   DWORD PTR [esi+0x77]
  419805:	mov    al,0x1d
  419807:	ds out dx,eax
  419809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41980a:	fwait
  41980b:	sbb    al,bl
  41980d:	inc    eax
  41980e:	mov    ch,0x1b
  419810:	retf   
  419811:	sbb    dl,BYTE PTR [ebp+0x21]
  419814:	pop    ebx
  419815:	jecxz  0x419845
  419817:	xlat   BYTE PTR ds:[ebx]
  419818:	out    0x52,eax
  41981a:	mov    ch,0xd2
  41981c:	cmp    ecx,DWORD PTR [ebx+edi*1+0x75656027]
  419823:	add    eax,edx
  419825:	and    DWORD PTR [esi+0x3d098bce],eax
  41982b:	push   0xffffff81
  41982d:	ret    0x6625
  419830:	inc    esi
  419831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419832:	push   eax
  419833:	mov    eax,ds:0x95e3dad9
  419838:	(bad)  
  419839:	sbb    ebp,DWORD PTR [ebx-0x5ffd00af]
  41983f:	call   0x6b04:0xef755df5
  419846:	push   esp
  419847:	jno    0x4198b6
  419849:	loop   0x4198b0
  41984b:	cwde   
  41984c:	out    dx,al
  41984d:	xchg   ebx,eax
  41984e:	and    ebx,esp
  419850:	int3   
  419851:	fstp   DWORD PTR [edx+0x4adb3cbc]
  419857:	sbb    DWORD PTR [edi-0x49daeadc],0x36edcc4d
  419861:	sub    BYTE PTR [edi+0x1c],cl
  419864:	fld    st(7)
  419866:	outs   dx,BYTE PTR ds:[esi]
  419867:	pextrw edi,(bad),0xc5
  419869:	cmp    edi,ecx
  41986b:	xchg   BYTE PTR [edx-0x312b7ceb],cl
  419871:	les    ebx,FWORD PTR [ecx]
  419873:	sbb    DWORD PTR [edi+eiz*8],esi
  419876:	push   esi
  419877:	xor    al,0xf6
  419879:	ss xor al,0x8f
  41987c:	jecxz  0x4198cc
  41987e:	or     DWORD PTR [edx-0x372efa1a],esi
  419884:	lods   eax,DWORD PTR ds:[esi]
  419885:	call   0xb7f3:0x270cde06
  41988c:	arpl   WORD PTR [esi],ax
  41988e:	inc    esp
  41988f:	mov    eax,0x2479c70a
  419894:	addr16 sbb dl,al
  419897:	jl     0x4198de
  419899:	ror    BYTE PTR [ebx+esi*8+0x771fb5fb],cl
  4198a0:	cmp    al,0xf8
  4198a2:	inc    ebp
  4198a3:	ds (bad) 
  4198a5:	aaa    
  4198a6:	xor    ebp,esi
  4198a8:	dec    ecx
  4198a9:	and    al,0x47
  4198ab:	xchg   ebx,eax
  4198ac:	push   ebx
  4198ad:	sub    dl,BYTE PTR [ebp-0x12b17251]
  4198b3:	loopne 0x41983c
  4198b5:	sbb    eax,0xf177246c
  4198ba:	ins    BYTE PTR es:[edi],dx
  4198bb:	and    ebp,DWORD PTR [edi+ebp*1+0x24]
  4198bf:	dec    ecx
  4198c0:	loop   0x4198de
  4198c2:	(bad)  
  4198c3:	mov    ds:0x37223f29,eax
  4198c8:	dec    esp
  4198c9:	inc    ecx
  4198ca:	bound  eax,QWORD PTR [esi-0x39463c88]
  4198d0:	test   al,0x49
  4198d2:	and    DWORD PTR [eax],esi
  4198d4:	cld    
  4198d5:	dec    edi
  4198d6:	addr16 (bad) 
  4198d8:	hlt    
  4198d9:	fisub  DWORD PTR [esi+0x50]
  4198dc:	mov    cl,BYTE PTR [edx-0x1749d84a]
  4198e2:	push   es
  4198e3:	(bad)  
  4198e4:	mov    bl,0x61
  4198e6:	jbe    0x4198df
  4198e8:	cs push 0xb867c30a
  4198ee:	push   ss
  4198ef:	pop    ebx
  4198f0:	mov    al,0x40
  4198f2:	loopne 0x4198e9
  4198f4:	dec    ebx
  4198f5:	mov    eax,0x1c9ee941
  4198fa:	cmp    eax,0xf1171cb0
  4198ff:	stos   DWORD PTR es:[edi],eax
  419900:	mov    bl,0x50
  419902:	inc    edi
  419903:	dec    ecx
  419904:	test   al,0x9a
  419906:	iret   
  419907:	or     eax,0x5de954a4
  41990c:	iret   
  41990d:	fsub   QWORD PTR [edi-0x5289f987]
  419913:	and    DWORD PTR [ecx-0x6813b0c5],eax
  419919:	in     eax,dx
  41991a:	sub    esp,DWORD PTR [ecx+0x2c]
  41991d:	cli    
  41991e:	cmp    ebp,DWORD PTR [eax]
  419920:	pusha  
  419921:	cs repnz das 
  419924:	inc    ebx
  419925:	stos   DWORD PTR es:[edi],eax
  419926:	pop    es
  419927:	adc    bl,BYTE PTR [esi+ebp*8-0x18b1a63f]
  41992e:	jle    0x4198ca
  419930:	fimul  DWORD PTR [esi]
  419932:	sub    DWORD PTR [edx-0x449ce32e],0x10939fc
  41993c:	out    dx,eax
  41993d:	cmp    ebp,DWORD PTR [esi]
  41993f:	dec    ecx
  419940:	jle    0x41992f
  419942:	sub    esi,esi
  419944:	jno    0x419928
  419946:	stos   BYTE PTR es:[edi],al
  419947:	push   ecx
  419948:	and    eax,0x501b828e
  41994d:	fisub  DWORD PTR [esi+0x6c]
  419950:	std    
  419951:	xchg   edi,eax
  419952:	cs out 0xd6,eax
  419955:	in     al,0x40
  419957:	aas    
  419958:	and    ch,dl
  41995a:	xlat   BYTE PTR ds:[ebx]
  41995b:	push   ebp
  41995c:	adc    dh,BYTE PTR [ecx]
  41995e:	jnp    0x4199a5
  419960:	call   0xa795:0x1b581ea1
  419967:	shl    dl,cl
  419969:	not    DWORD PTR [ebp+0x3b]
  41996c:	and    ch,BYTE PTR [ebx+0x10]
  41996f:	repnz out dx,eax
  419971:	popa   
  419972:	ds in  eax,dx
  419974:	xchg   edi,eax
  419975:	mov    esp,0x33677a4e
  41997a:	xor    BYTE PTR [ecx-0x79],bh
  41997d:	sbb    DWORD PTR [ecx],eax
  41997f:	pop    ebx
  419980:	dec    ecx
  419981:	dec    ebp
  419982:	mov    ecx,0x558dabdf
  419987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419988:	sbb    eax,0x1cad42a8
  41998d:	mov    dl,0xf3
  41998f:	or     bh,BYTE PTR [edi]
  419991:	das    
  419992:	ss xchg BYTE PTR gs:[edx+0x6001247e],ch
  41999a:	(bad)  
  41999b:	js     0x4199ca
  41999d:	ss mov cl,0xf7
  4199a0:	jo     0x419940
  4199a2:	sub    al,0xf4
  4199a4:	push   esp
  4199a6:	enter  0x9ba7,0xf5
  4199aa:	inc    ecx
  4199ab:	lock aam 0x6c
  4199ae:	mov    bh,0x83
  4199b0:	inc    edx
  4199b1:	cmc    
  4199b2:	cmp    BYTE PTR [edi],0xe0
  4199b5:	or     eax,0x5d195c77
  4199ba:	mov    al,ds:0xb6ecd010
  4199bf:	sbb    bh,bh
  4199c1:	mov    al,0x86
  4199c3:	sub    al,0x26
  4199c5:	pop    ebx
  4199c6:	dec    edx
  4199c7:	(bad)  
  4199c8:	loopne 0x4199f0
  4199ca:	fstp   TBYTE PTR [ebx]
  4199cc:	mov    ch,0x33
  4199ce:	outs   dx,DWORD PTR ds:[esi]
  4199cf:	lea    eax,[ebp+0x662cb189]
  4199d5:	or     ebx,DWORD PTR [ebp-0x31]
  4199d8:	aad    0x5c
  4199da:	fiadd  WORD PTR [edi-0x4]
  4199dd:	sub    dh,dh
  4199df:	inc    eax
  4199e0:	ror    BYTE PTR [ebp+0x5],cl
  4199e3:	xchg   ecx,eax
  4199e4:	inc    ecx
  4199e5:	mov    dh,0x9c
  4199e7:	fist   DWORD PTR [eax+ebx*4+0xd]
  4199eb:	rol    DWORD PTR [ebx+ecx*2],cl
  4199ee:	les    esp,FWORD PTR [edx+0x3acebaf6]
  4199f4:	cwde   
  4199f5:	mov    edi,0x9aff7d2b
  4199fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199fb:	rcl    edx,cl
  4199fd:	jle    0x4199d3
  4199ff:	(bad)  
  419a00:	push   esp
  419a01:	mov    esi,0x4212d435
  419a06:	shr    DWORD PTR [ecx-0x70],0xd4
  419a0a:	inc    edi
  419a0b:	repnz cmp ebp,ebp
  419a0e:	push   0x6b351db4
  419a13:	mov    ah,0x29
  419a15:	je     0x419a29
  419a17:	mov    cl,BYTE PTR [ecx]
  419a19:	mov    esp,0x3400ec9
  419a1e:	dec    ebx
  419a1f:	cmp    eax,0xccaec79a
  419a24:	push   0xdb4f816
  419a29:	lods   al,BYTE PTR ds:[esi]
  419a2a:	fistp  WORD PTR [eax+0x50]
  419a2d:	repz addr16 push 0x504b6d0e
  419a34:	pop    ds
  419a35:	dec    esp
  419a36:	outs   dx,BYTE PTR ds:[esi]
  419a37:	mov    edi,0xcd4e106f
  419a3c:	pop    ecx
  419a3d:	jmp    0x961b:0x1e747cc2
  419a44:	mov    bh,0x9d
  419a46:	les    esp,FWORD PTR [ebx+0x30]
  419a49:	adc    DWORD PTR [edi-0x294c062f],0x1fb8eb27
  419a53:	jno    0x419a77
  419a55:	sub    BYTE PTR [eax],al
  419a57:	xchg   DWORD PTR ds:0x75c274c,ebx
  419a5d:	fsub   QWORD PTR [edx]
  419a5f:	inc    edi
  419a60:	dec    ebp
  419a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a62:	fdivr  DWORD PTR [eax+edx*1-0x24dbaafb]
  419a69:	and    ebp,ebx
  419a6b:	push   ebx
  419a6c:	pusha  
  419a6d:	push   ecx
  419a6e:	imul   ebx,DWORD PTR [ecx+0x51],0xffffff8d
  419a72:	cmp    DWORD PTR [edi+edi*8-0x21a7d1ad],0x5db912d1
  419a7d:	lea    eax,[eax+0x1c4dda3a]
  419a83:	or     esi,ecx
  419a85:	cmp    ecx,DWORD PTR [ecx]
  419a87:	test   DWORD PTR [edx-0x3de3dfe4],ecx
  419a8d:	push   ebx
  419a8e:	rcr    ch,0xb9
  419a91:	popa   
  419a92:	(bad)  
  419a94:	push   cs
  419a95:	sbb    al,0xdf
  419a97:	ins    BYTE PTR es:[edi],dx
  419a98:	into   
  419a99:	adc    cl,BYTE PTR gs:[esi+0x4f]
  419a9d:	cs (bad) 
  419a9f:	fs out dx,eax
  419aa1:	xor    DWORD PTR [edx+edi*1-0x1],edi
  419aa5:	mov    al,0xef
  419aa7:	sbb    eax,0x2f7ce2ea
  419aac:	call   DWORD PTR ss:[edi-0x222810ff]
  419ab3:	mov    dh,0xb6
  419ab5:	add    al,0x99
  419ab7:	ins    DWORD PTR es:[edi],dx
  419ab8:	mov    WORD PTR [esi+0x74],ds
  419abb:	mov    esp,esi
  419abd:	dec    ecx
  419abe:	cmc    
  419abf:	stos   DWORD PTR es:[edi],eax
  419ac0:	add    DWORD PTR [edx+0x38],0x41
  419ac4:	and    eax,0xe880d72f
  419ac9:	fisttp QWORD PTR [eax-0x43fab184]
  419acf:	mov    ch,0xc2
  419ad1:	or     eax,0x6caed38a
  419ad6:	or     BYTE PTR cs:[edx-0x7c],dh
  419ada:	pusha  
  419adb:	jo     0x419ad4
  419add:	nop
  419ade:	mov    ebp,0xcd3c4fc
  419ae3:	(bad)  
  419ae4:	lds    esi,FWORD PTR [eax+0x356bab54]
  419aea:	cli    
  419aeb:	xlat   BYTE PTR ds:[ebx]
  419aec:	repnz cld 
  419aee:	call   0xbcce025d
  419af3:	pop    edi
  419af4:	clc    
  419af5:	pop    esi
  419af6:	(bad)  
  419af7:	iret   
  419af8:	sahf   
  419af9:	in     eax,dx
  419afa:	js     0x419a85
  419afc:	add    BYTE PTR [edx+edx*8-0x16],dh
  419b00:	and    edx,DWORD PTR [ebx+0x4b]
  419b03:	xlat   BYTE PTR ds:[ebx]
  419b04:	mov    ch,BYTE PTR [edi]
  419b06:	xchg   BYTE PTR [eax],bh
  419b08:	pushf  
  419b09:	push   cs
  419b0a:	sahf   
  419b0b:	push   0x6393076b
  419b10:	shr    BYTE PTR [eax],1
  419b12:	ins    BYTE PTR es:[edi],dx
  419b13:	les    ebp,FWORD PTR [esp-0x1ec2f52f]
  419b1a:	and    al,0xfa
  419b1c:	shr    BYTE PTR [ebx-0x71],1
  419b1f:	or     ah,0x65
  419b22:	dec    esi
  419b23:	sbb    esp,DWORD PTR [edi+eax*4-0x5e]
  419b27:	bound  ebx,QWORD PTR [ebx-0x4729238e]
  419b2d:	rol    dh,cl
  419b2f:	pop    ss
  419b30:	pop    ebx
  419b31:	adc    DWORD PTR [bx+di+0x34],ebp
  419b35:	and    BYTE PTR [esi-0x5c],ah
  419b38:	push   ebp
  419b39:	add    al,0x7f
  419b3b:	push   ebx
  419b3c:	push   eax
  419b3d:	loope  0x419b86
  419b3f:	rcr    DWORD PTR [edi],1
  419b41:	pop    es
  419b42:	ins    BYTE PTR es:[edi],dx
  419b43:	xlat   BYTE PTR ds:[ebx]
  419b44:	pushf  
  419b45:	pop    ebp
  419b46:	jne    0x419b94
  419b48:	repnz retf 
  419b4a:	add    BYTE PTR [eax-0x2d],ch
  419b4d:	adc    edx,DWORD PTR [ecx]
  419b4f:	into   
  419b50:	xor    cl,ah
  419b52:	xchg   esp,eax
  419b53:	in     al,dx
  419b54:	int    0xa8
  419b56:	sar    DWORD PTR [edi+0x7afc2d67],1
  419b5c:	(bad)  
  419b5d:	mov    esi,0x7f175440
  419b62:	inc    ebp
  419b63:	int    0x47
  419b65:	addr16 pop ds
  419b67:	xchg   esi,eax
  419b68:	test   DWORD PTR ds:0x31697878,ebp
  419b6e:	scas   eax,DWORD PTR es:[edi]
  419b6f:	jns    0x419b43
  419b71:	cmp    DWORD PTR [ebp-0x64],esi
  419b74:	or     eax,0xfbb646f7
  419b79:	shl    BYTE PTR fs:[ebx+esi*2-0x710cafe8],0x37
  419b82:	xor    BYTE PTR [edi-0x6a],dl
  419b85:	and    al,BYTE PTR [edx+0x7b]
  419b88:	xor    bl,dl
  419b8a:	jecxz  0x419b6b
  419b8c:	pusha  
  419b8d:	inc    esi
  419b8e:	iret   
  419b8f:	outs   dx,BYTE PTR ds:[esi]
  419b90:	js     0x419b46
  419b92:	sbb    eax,0xa8d7be8
  419b97:	enter  0xbfc6,0x86
  419b9b:	pop    ecx
  419b9c:	arpl   si,cx
  419b9e:	mov    esi,0xeab2270a
  419ba3:	pop    esi
  419ba4:	lea    edx,[eax+ebp*1+0x4f155acb]
  419bab:	xchg   ebx,eax
  419bac:	shr    dl,0x35
  419baf:	cmp    BYTE PTR [eax],al
  419bb1:	adc    al,0x41
  419bb3:	cld    
  419bb4:	es jecxz 0x419b53
  419bb7:	stc    
  419bb8:	idiv   DWORD PTR [eax+ecx*4-0x4c]
  419bbc:	add    al,0x97
  419bbe:	je     0x419b9d
  419bc0:	test   eax,0x83919b9e
  419bc5:	inc    edx
  419bc6:	or     dl,dh
  419bc8:	or     al,0x52
  419bca:	fcmovnbe st,st(1)
  419bcc:	mov    ?,WORD PTR ds:0x55f64066
  419bd2:	outs   dx,DWORD PTR ds:[esi]
  419bd3:	jnp    0x419b67
  419bd5:	call   0xe863ed48
  419bda:	mov    eax,0xc8caf93b
  419bdf:	sub    al,0xf5
  419be1:	mov    eax,0x3f93725
  419be6:	dec    ebp
  419be7:	jne    0x419baa
  419be9:	fcmovnb st,st(2)
  419beb:	or     bh,bh
  419bed:	sub    esi,DWORD PTR [edx-0x4f]
  419bf0:	jg     0x419c5c
  419bf2:	push   0xffffffa1
  419bf4:	outs   dx,DWORD PTR ds:[esi]
  419bf5:	or     al,BYTE PTR [ebx+0x221decb9]
  419bfb:	push   ss
  419bfc:	imul   esi,DWORD PTR [ebx-0x21],0xffffff92
  419c00:	stc    
  419c01:	cli    
  419c02:	xchg   esp,eax
  419c03:	jmp    0x419bb1
  419c05:	popa   
  419c06:	lds    eax,FWORD PTR [eax+ebx*4]
  419c09:	fcomp  QWORD PTR [ecx-0x6d]
  419c0c:	or     eax,0xb0e9321b
  419c11:	sbb    edi,DWORD PTR [esi-0x6c22bd58]
  419c17:	stos   DWORD PTR es:[edi],eax
  419c18:	dec    ebp
  419c19:	ins    BYTE PTR es:[edi],dx
  419c1a:	adc    al,0x5f
  419c1c:	jae    0x419c83
  419c1e:	jecxz  0x419c10
  419c20:	inc    ebx
  419c21:	cmp    DWORD PTR [eax],ecx
  419c23:	ins    BYTE PTR es:[edi],dx
  419c24:	dec    ebx
  419c25:	inc    eax
  419c26:	dec    esp
  419c27:	xor    ch,al
  419c29:	in     eax,dx
  419c2a:	adc    DWORD PTR [eax-0x6],esi
  419c2d:	dec    esp
  419c2e:	push   eax
  419c2f:	mov    BYTE PTR [edx+eax*4],al
  419c32:	mov    ch,0x76
  419c34:	ret    0xdf71
  419c37:	loop   0x419c1e
  419c39:	pop    eax
  419c3a:	pop    es
  419c3b:	pusha  
  419c3c:	and    edi,DWORD PTR [eax]
  419c3e:	adc    bh,BYTE PTR [edx]
  419c40:	test   BYTE PTR [ebp+0x67],bh
  419c43:	(bad)  
  419c44:	and    eax,0x7c6b3b61
  419c49:	adc    al,0xeb
  419c4b:	lahf   
  419c4c:	add    cl,BYTE PTR [esi]
  419c4e:	(bad)  [ebx+0x6caeed44]
  419c54:	and    cl,BYTE PTR [ecx+0x553ad61]
  419c5a:	ret    0x8844
  419c5d:	mov    esi,0x448531e5
  419c62:	int3   
  419c63:	or     edi,DWORD PTR [edi+0x358a5dbf]
  419c69:	das    
  419c6a:	inc    esi
  419c6b:	adc    DWORD PTR [eax+0x44],ebp
  419c6e:	jp     0x419c35
  419c70:	(bad)  
  419c71:	or     eax,0xf5879f11
  419c76:	out    dx,al
  419c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c78:	cld    
  419c79:	push   es
  419c7a:	xor    BYTE PTR [esp+edi*8],0xb5
  419c7e:	les    edi,FWORD PTR [eax-0x57]
  419c81:	test   al,0x3f
  419c83:	jmp    0x3d1fd5dc
  419c88:	in     al,0x71
  419c8a:	jne    0x419ceb
  419c8c:	mov    edi,0x73882e94
  419c91:	lods   eax,DWORD PTR ds:[esi]
  419c92:	pop    ss
  419c93:	adc    al,ch
  419c95:	jmp    DWORD PTR ds:0x9e3b8681
  419c9b:	out    dx,eax
  419c9c:	outs   dx,BYTE PTR ds:[esi]
  419c9d:	dec    edx
  419c9e:	pop    eax
  419c9f:	mov    DWORD PTR [edi],ecx
  419ca1:	adc    ebp,DWORD PTR [edi+edx*1]
  419ca4:	inc    edx
  419ca5:	outs   dx,BYTE PTR ds:[esi]
  419ca6:	adc    ecx,DWORD PTR [ecx]
  419ca8:	retf   0xe832
  419cab:	in     eax,0x2f
  419cad:	or     eax,0x296163b8
  419cb2:	imul   eax,ebp,0xffffffb2
  419cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cb6:	mov    ah,0xca
  419cb8:	mov    bh,0xb6
  419cba:	clc    
  419cbb:	cdq    
  419cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cbd:	inc    esi
  419cbe:	test   DWORD PTR [ebx+edx*1],edx
  419cc1:	test   DWORD PTR [ebp+eiz*4+0x18e70953],esp
  419cc8:	in     al,0x29
  419cca:	and    ah,bh
  419ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ccd:	xchg   edi,eax
  419cce:	retf   
  419ccf:	jo     0x419cc7
  419cd1:	ror    BYTE PTR [edi],0xd8
  419cd4:	mov    dh,0xdb
  419cd6:	xor    BYTE PTR [ecx],dh
  419cd8:	in     eax,dx
  419cd9:	test   ah,ah
  419cdb:	jl     0x419d15
  419cdd:	retfw  
  419cdf:	cwde   
  419ce0:	fimul  WORD PTR [edi+edx*1]
  419ce3:	mov    esp,0xdb148eae
  419ce8:	stos   DWORD PTR es:[edi],eax
  419ce9:	jo     0x419d5e
  419ceb:	aam    0x7f
  419ced:	push   0x1c
  419cef:	mov    gs,WORD PTR [ecx+esi*2+0x69]
  419cf3:	in     eax,dx
  419cf4:	cld    
  419cf5:	call   0xf9937777
  419cfa:	jmp    0xebae:0x44965f53
  419d01:	in     eax,0x74
  419d03:	lods   al,BYTE PTR ds:[esi]
  419d04:	fiadd  WORD PTR [eax+0x7c]
  419d07:	out    0x5,eax
  419d09:	inc    eax
  419d0a:	std    
  419d0b:	xor    BYTE PTR [esi+0x1e],bl
  419d0e:	inc    esi
  419d0f:	outs   dx,BYTE PTR ds:[esi]
  419d10:	std    
  419d11:	mov    ds:0x841ef3d5,eax
  419d16:	call   0xe0b:0xeb0832ab
  419d1d:	test   eax,0xa634d021
  419d22:	push   esi
  419d23:	push   edx
  419d24:	mov    cl,0x4a
  419d26:	lods   al,BYTE PTR ds:[esi]
  419d27:	mov    ch,0xff
  419d29:	sub    DWORD PTR [ebx+ebx*4],esi
  419d2c:	or     al,BYTE PTR [ebx+0x1157ef23]
  419d32:	push   esi
  419d33:	pusha  
  419d34:	leave  
  419d35:	ss (bad) 
  419d37:	fist   DWORD PTR [ebp-0x79]
  419d3a:	arpl   WORD PTR [ebp-0x40],di
  419d3d:	lds    edi,FWORD PTR [edx+0xf]
  419d40:	lods   al,BYTE PTR ds:[esi]
  419d41:	inc    esi
  419d42:	sbb    ah,BYTE PTR [edx+0x60]
  419d45:	or     DWORD PTR [edi],ebx
  419d47:	xchg   ecx,eax
  419d48:	dec    edi
  419d49:	xor    dl,al
  419d4b:	mov    bl,0x4d
  419d4d:	dec    esp
  419d4e:	jp     0x419d25
  419d50:	jecxz  0x419d50
  419d52:	stc    
  419d53:	jl     0x419d40
  419d55:	out    0x64,eax
  419d57:	in     al,dx
  419d58:	(bad)  
  419d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d5a:	mov    ds:0x41df2d5b,al
  419d5f:	out    dx,al
  419d60:	and    eax,0x32538a99
  419d65:	int    0xe4
  419d67:	pusha  
  419d68:	(bad)  
  419d6a:	in     eax,dx
  419d6b:	inc    edi
  419d6c:	pop    edx
  419d6d:	inc    ebp
  419d6e:	mov    ecx,0x9546fb83
  419d73:	test   eax,0x28e62c15
  419d78:	push   es
  419d79:	mov    bl,0xb4
  419d7b:	call   0x5841724b
  419d80:	push   eax
  419d81:	imul   esi,DWORD PTR [eax-0x3e],0x4a
  419d85:	mov    bl,BYTE PTR [esi+esi*4-0x3d]
  419d89:	sahf   
  419d8a:	mov    dl,0x8
  419d8c:	or     dl,al
  419d8e:	(bad)  
  419d8f:	retf   0xbef8
  419d92:	xchg   edi,eax
  419d93:	(bad)  
  419d94:	aam    0x2f
  419d96:	aas    
  419d97:	xchg   esi,eax
  419d98:	rcr    eax,cl
  419d9a:	cmp    BYTE PTR [edx-0x726a3418],ch
  419da0:	cmp    BYTE PTR [eax-0x109ce022],ah
  419da6:	stos   DWORD PTR es:[edi],eax
  419da7:	xlat   BYTE PTR ds:[ebx]
  419da8:	add    BYTE PTR [edx+0x6c74c441],dh
  419dae:	dec    ecx
  419daf:	outs   dx,DWORD PTR ds:[esi]
  419db0:	jnp    0x419d4a
  419db2:	adc    ebp,DWORD PTR [ebx+0x27]
  419db5:	stos   DWORD PTR es:[edi],eax
  419db6:	in     al,0x38
  419db8:	inc    ecx
  419db9:	loope  0x419da1
  419dbb:	dec    eax
  419dbc:	loopne 0x419d56
  419dbe:	lea    edi,[ecx+0x39]
  419dc1:	stc    
  419dc2:	mov    eax,ds:0xac5a2cb7
  419dc7:	xchg   DWORD PTR [edi],ecx
  419dc9:	jle    0x419d9a
  419dcb:	push   esp
  419dcc:	push   esp
  419dcd:	and    dh,BYTE PTR [esi]
  419dcf:	pop    esp
  419dd0:	out    0x85,eax
  419dd2:	int3   
  419dd3:	dec    ebx
  419dd4:	add    ecx,esi
  419dd6:	mov    esp,0x78bc1a57
  419ddb:	push   ss
  419ddc:	stc    
  419ddd:	(bad)  
  419dde:	jmp    0x419d78
  419de0:	jecxz  0x419dce
  419de2:	pop    esi
  419de3:	pop    ss
  419de4:	icebp  
  419de5:	mov    esi,0x76afbc8a
  419dea:	lods   eax,DWORD PTR ds:[esi]
  419deb:	scas   al,BYTE PTR es:[edi]
  419dec:	es xor al,0xf7
  419def:	or     BYTE PTR [ebx],cl
  419df1:	xchg   edi,eax
  419df2:	mov    dh,0x0
  419df4:	cdq    
  419df5:	imul   esp,DWORD PTR [eax],0xffffffee
  419df8:	mov    dh,0x31
  419dfa:	mov    ss,WORD PTR [edi+0x12f0a210]
  419e00:	adc    DWORD PTR [ecx+ebp*1+0x4a],esi
  419e04:	sbb    al,0x7c
  419e06:	test   edi,ecx
  419e08:	scas   al,BYTE PTR es:[edi]
  419e09:	lds    ebp,FWORD PTR [ebp+0x29ce60e2]
  419e0f:	dec    edx
  419e10:	dec    edi
  419e11:	into   
  419e12:	jge    0x419e48
  419e14:	jns    0x419de9
  419e16:	and    BYTE PTR [esi+0x1c52c606],0x12
  419e1d:	sub    BYTE PTR [ebx+ebx*4-0x31],ah
  419e21:	ret    
  419e22:	sbb    ecx,edx
  419e24:	push   ebx
  419e25:	das    
  419e26:	fistp  WORD PTR [edi-0x5a]
  419e29:	jl     0x419e12
  419e2b:	scas   al,BYTE PTR es:[edi]
  419e2c:	repz out dx,eax
  419e2e:	mov    eax,0x6df33ba5
  419e33:	adc    eax,0xeaa9879b
  419e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e39:	loope  0x419e07
  419e3b:	cmp    ebx,esi
  419e3d:	dec    ebp
  419e3e:	dec    eax
  419e3f:	jb     0x419eb4
  419e41:	enter  0xed7e,0x8
  419e45:	mov    esi,0xa7a74606
  419e4a:	jnp    0x419ec6
  419e4c:	mov    WORD PTR [esi+0x3e],ss
  419e4f:	out    0x8e,eax
  419e51:	adc    DWORD PTR [ebp+0x5d],edx
  419e54:	mov    ecx,0xfbabf1c
  419e59:	cmp    eax,0x7a4f5369
  419e5e:	push   eax
  419e5f:	dec    ebx
  419e60:	xor    DWORD PTR [bp-0x27],edx
  419e64:	mov    esi,0x76714304
  419e69:	xor    ebx,DWORD PTR [eax]
  419e6b:	rol    DWORD PTR [eax+0x25],1
  419e6e:	shl    BYTE PTR [edx],1
  419e70:	xor    DWORD PTR [ebp+0x53],0x18
  419e74:	lods   eax,DWORD PTR ds:[esi]
  419e75:	mov    al,ds:0x48db6c22
  419e7a:	sbb    cl,BYTE PTR [esi+0x46]
  419e7d:	pop    ecx
  419e7e:	inc    ebp
  419e7f:	sbb    al,cl
  419e81:	adc    cl,BYTE PTR [ecx-0x3faa2b65]
  419e87:	jecxz  0x419ebe
  419e89:	cwde   
  419e8a:	(bad)  
  419e8b:	and    al,BYTE PTR ds:0x181f9e12
  419e91:	mov    ch,0xec
  419e93:	xor    DWORD PTR [ebx+0x24],0x6c22bfb2
  419e9a:	hlt    
  419e9b:	mov    al,BYTE PTR [ebx-0x7152dbe8]
  419ea1:	pop    es
  419ea2:	mov    ah,0x86
  419ea4:	retf   
  419ea5:	cdq    
  419ea6:	das    
  419ea7:	inc    ecx
  419ea8:	mov    al,0xf
  419eaa:	retf   0x3931
  419ead:	mov    DWORD PTR [edi],esp
  419eaf:	aaa    
  419eb0:	xor    ebp,esi
  419eb2:	fcomi  st,st(5)
  419eb4:	pop    es
  419eb5:	cmp    al,0xbc
  419eb7:	push   ebx
  419eb8:	jb     0x419f05
  419eba:	and    cl,BYTE PTR [edi+ebx*8+0x109f4aaa]
  419ec1:	scas   al,BYTE PTR es:[edi]
  419ec2:	iret   
  419ec3:	shr    edx,cl
  419ec5:	imul   ecx,DWORD PTR [ebx+edx*2],0xcdf36940
  419ecc:	aaa    
  419ecd:	(bad)  
  419ece:	(bad)  
  419ecf:	adc    eax,0x6bcb086a
  419ed4:	call   0x2d5b:0x17dbd945
  419edb:	lea    ecx,[ebx-0x6b43e57e]
  419ee1:	sub    esp,ecx
  419ee3:	imul   BYTE PTR [ecx]
  419ee5:	xchg   edx,eax
  419ee6:	aam    0x92
  419ee8:	mov    al,ds:0x2638f811
  419eed:	mov    edi,0xe69fa2a3
  419ef2:	xor    edx,0x90c48cf4
  419ef8:	dec    edx
  419ef9:	cmp    ecx,DWORD PTR [esi]
  419efb:	fwait
  419efc:	test   eax,0xcb4c3798
  419f01:	fistp  DWORD PTR [ebx+0x73]
  419f04:	in     eax,dx
  419f05:	lea    ecx,[edx+edx*4]
  419f08:	aad    0xae
  419f0a:	add    BYTE PTR [ebp+0x5d],bh
  419f0d:	sub    eax,0xd99e08fc
  419f12:	dec    esp
  419f13:	and    eax,0xaedb52ca
  419f18:	or     BYTE PTR [edi+0x65],0x7b
  419f1c:	call   DWORD PTR [ebp+0x5fe26cd3]
  419f22:	sub    ecx,esp
  419f24:	adc    al,0x2e
  419f26:	js     0x419f9d
  419f28:	push   ebp
  419f29:	ret    0x2d2e
  419f2c:	sbb    bh,0x84
  419f2f:	sub    BYTE PTR [edx-0x7b],dh
  419f32:	(bad)  
  419f33:	and    eax,DWORD PTR [ebx+edi*4+0x6212f707]
  419f3a:	ret    
  419f3b:	jmp    0xc3038080
  419f40:	xor    al,BYTE PTR [eax]
  419f42:	lds    esi,FWORD PTR [ebx]
  419f44:	dec    esp
  419f45:	sbb    DWORD PTR [eax+ebx*8],eax
  419f48:	enter  0x2ce4,0x0
  419f4c:	shl    DWORD PTR [ebx+0x55],1
  419f4f:	xor    DWORD PTR [eax-0x50536fc],eax
  419f55:	mov    ds:0x1763b2e9,eax
  419f5a:	nop
  419f5b:	cdq    
  419f5c:	xchg   BYTE PTR [ebx+esi*1-0x5723cfaf],ch
  419f63:	mov    ebx,0xb71dbac9
  419f68:	push   cs
  419f69:	adc    DWORD PTR [ebx],0x6
  419f6c:	into   
  419f6d:	inc    edi
  419f6e:	in     al,dx
  419f6f:	inc    ecx
  419f70:	fadd   QWORD PTR [eax]
  419f72:	fwait
  419f73:	int    0x3b
  419f75:	enter  0xdd59,0x60
  419f79:	into   
  419f7a:	ret    0xea22
  419f7d:	xor    BYTE PTR [edi+esi*4-0x6b],0xa7
  419f82:	pop    ecx
  419f83:	and    eax,0x9ed805f6
  419f88:	gs jmp 0x9dbc119
  419f8e:	push   esp
  419f8f:	cld    
  419f90:	inc    eax
  419f91:	mov    gs,WORD PTR [ebx+0x39]
  419f94:	(bad)  
  419f95:	adc    DWORD PTR [esi-0x56e1c343],ebx
  419f9b:	fcmovnu st,st(6)
  419f9d:	push   cs
  419f9e:	mov    cl,0x78
  419fa0:	shl    BYTE PTR [edi+0x36290bd6],0x34
  419fa7:	lea    esi,ds:0xadbcb84
  419fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fae:	adc    BYTE PTR [ecx+edx*1],dh
  419fb1:	sub    esi,DWORD PTR [edi-0x22]
  419fb4:	enter  0x1acb,0x2d
  419fb8:	adc    DWORD PTR [esi-0x6f72f16e],esp
  419fbe:	inc    esi
  419fbf:	out    0xf6,eax
  419fc1:	mov    ss,WORD PTR [ecx-0x572fa03d]
  419fc7:	dec    esi
  419fc8:	pop    edi
  419fc9:	outs   dx,DWORD PTR ds:[esi]
  419fca:	repnz popf 
  419fcc:	and    eax,0x401357ac
  419fd1:	sub    eax,0x96002c7d
  419fd6:	call   0x61655daa
  419fdb:	add    DWORD PTR ds:0x690ba011,ecx
  419fe1:	jbe    0x419fc4
  419fe3:	or     al,0xc5
  419fe5:	push   ebx
  419fe6:	shl    DWORD PTR [edi],cl
  419fe8:	push   esi
  419fe9:	enter  0x244c,0xa7
  419fed:	loopne 0x419ff2
  419fef:	jle    0x41a014
  419ff1:	jne    0x41a02b
  419ff3:	test   BYTE PTR [eax],ch
  419ff5:	inc    ecx
  419ff6:	mov    ah,BYTE PTR [ecx+0x1d]
  419ff9:	cld    
  419ffa:	mov    edx,0xd8ae4d03
  419fff:	sub    ch,BYTE PTR [eax-0x7f78e66b]
  41a005:	pop    es
  41a006:	xchg   edi,eax
  41a007:	xor    ebp,0xffffffa1
  41a00a:	enter  0xcda4,0x5d
  41a00e:	jp     0x41a063
  41a010:	xchg   BYTE PTR [ebx],dh
  41a012:	test   BYTE PTR [ebp+0x54],bh
  41a015:	mov    BYTE PTR [ecx],ah
  41a017:	jnp    0x419ffd
  41a019:	fs add cl,bl
  41a01c:	sub    edx,DWORD PTR [ebx+0x2a]
  41a01f:	out    0x90,eax
  41a021:	xor    eax,esp
  41a023:	cwde   
  41a024:	ret    
  41a025:	lods   al,BYTE PTR ds:[esi]
  41a026:	mov    ebp,0xb5efdf33
  41a02b:	add    DWORD PTR [edi+0x28],ecx
  41a02e:	shl    DWORD PTR ss:[esi+0x1b],cl
  41a032:	jno    0x41a05a
  41a034:	mov    dl,0xa4
  41a036:	loope  0x41a074
  41a038:	loopne 0x41a019
  41a03a:	test   ecx,ebp
  41a03c:	cmp    DWORD PTR [edx],eax
  41a03e:	test   DWORD PTR [eax],0x61528249
  41a044:	sti    
  41a045:	xchg   edi,eax
  41a046:	test   eax,0x2d75cbb2
  41a04b:	ror    DWORD PTR [eax],1
  41a04d:	sbb    BYTE PTR [edx],bh
  41a04f:	pop    esp
  41a050:	dec    ecx
  41a051:	loop   0x419fde
  41a053:	test   BYTE PTR [ebx+0x63f3af4e],bh
  41a059:	in     al,dx
  41a05a:	lahf   
  41a05b:	cmp    bh,ch
  41a05d:	fninit 
  41a05f:	iret   
  41a060:	mov    ebp,0x39fc7c02
  41a065:	dec    eax
  41a066:	xchg   edx,eax
  41a067:	or     bh,BYTE PTR [ebx-0x3370c386]
  41a06d:	mov    WORD PTR [edx+0x60],ss
  41a070:	dec    ebp
  41a071:	mov    bl,0xc1
  41a073:	xor    eax,0xf794fbc7
  41a078:	imul   edi,DWORD PTR [ebx-0x7d],0xffffffc0
  41a07c:	and    BYTE PTR [ebx-0x37],ch
  41a07f:	pop    ecx
  41a080:	ret    
  41a081:	push   esp
  41a082:	fnstenv [eax+0x2e]
  41a085:	mov    bh,bh
  41a087:	pop    edi
  41a088:	in     al,dx
  41a089:	mov    eax,0x7d9030e7
  41a08e:	in     eax,0x2d
  41a090:	mov    al,0x9e
  41a092:	rcr    BYTE PTR [edi+edx*2+0x58f37fb0],cl
  41a099:	imul   ebx,DWORD PTR [ebp-0x16],0x3af24edb
  41a0a0:	mov    ebx,0xeb765c79
  41a0a5:	xchg   DWORD PTR [edx+ecx*8+0x3d],edi
  41a0a9:	sar    BYTE PTR [ecx+0x688a954f],1
  41a0af:	sbb    al,0x17
  41a0b1:	loop   0x41a12f
  41a0b3:	push   edi
  41a0b4:	inc    ebx
  41a0b5:	mov    ebp,0xe1e732bc
  41a0ba:	push   edi
  41a0bb:	xchg   edi,eax
  41a0bc:	cmp    eax,0xad194386
  41a0c1:	dec    esp
  41a0c2:	mov    ch,0x83
  41a0c4:	aaa    
  41a0c5:	push   ds
  41a0c6:	sbb    BYTE PTR [ebx+0x2cc1db62],dh
  41a0cc:	test   al,0x9
  41a0ce:	scas   al,BYTE PTR es:[edi]
  41a0cf:	test   eax,0xcf3d6531
  41a0d4:	jecxz  0x41a10f
  41a0d6:	sbb    al,0xb2
  41a0d8:	into   
  41a0d9:	xchg   esi,eax
  41a0da:	std    
  41a0db:	aaa    
  41a0dc:	mov    ch,0x1b
  41a0de:	mov    ebp,0x4855d15d
  41a0e3:	loop   0x41a095
  41a0e5:	adc    DWORD PTR [ecx-0x62],esp
  41a0e8:	jmp    0x41a088
  41a0ea:	add    al,0xc6
  41a0ec:	fild   DWORD PTR [ecx+0x4b63cd93]
  41a0f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0f3:	cmp    eax,0x785b811f
  41a0f8:	mov    bh,0x5c
  41a0fa:	fisttp WORD PTR [ecx]
  41a0fc:	xchg   BYTE PTR [eax-0x18],ah
  41a0ff:	push   ecx
  41a100:	or     eax,0x5c0ac68a
  41a105:	nop
  41a106:	(bad)  
  41a107:	jbe    0x41a10a
  41a109:	in     al,0x3a
  41a10b:	inc    ebx
  41a10c:	sub    BYTE PTR [ebx],0x2d
  41a10f:	aam    0xea
  41a111:	sbb    ecx,DWORD PTR [esp+eiz*8+0x4311b222]
  41a118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a119:	gs daa 
  41a11b:	xor    cl,dl
  41a11d:	adc    al,0x58
  41a11f:	lock enterw 0x2d63,0x86
  41a125:	mov    al,ds:0x2e4a8d1d
  41a12a:	push   ebp
  41a12b:	or     ah,cl
  41a12d:	ffreep st(5)
  41a12f:	mov    eax,fs:0x37a49860
  41a135:	ds xchg ebx,eax
  41a137:	sub    BYTE PTR [ecx+0x57],dh
  41a13a:	or     bl,dl
  41a13c:	jecxz  0x41a0e7
  41a13e:	cmp    cl,BYTE PTR [eax+0x1c2420b5]
  41a144:	cdq    
  41a145:	cmp    DWORD PTR [ebx-0x35],0xedd208f5
  41a14c:	ror    ebx,cl
  41a14e:	imul   eax,DWORD PTR [ecx],0x63
  41a151:	mov    ds:0xd3202f37,al
  41a156:	test   BYTE PTR [esi-0x1f7d1c59],al
  41a15c:	neg    DWORD PTR [eax-0x68]
  41a15f:	pop    ecx
  41a160:	add    ebp,DWORD PTR [ecx]
  41a162:	pop    eax
  41a163:	add    DWORD PTR [ebx],esp
  41a165:	push   edx
  41a166:	scas   eax,DWORD PTR es:[edi]
  41a167:	mov    esi,DWORD PTR [edx+0x7]
  41a16a:	sbb    esi,DWORD PTR [ebp-0x60]
  41a16d:	mov    ds:0xaf9ca4a,al
  41a172:	shl    BYTE PTR [eax-0x7e],0xbc
  41a176:	dec    edx
  41a177:	sub    DWORD PTR [esi],edx
  41a179:	imul   ebx,DWORD PTR [ebx+edi*8-0x2c],0xffffffd0
  41a17e:	mov    dh,0x15
  41a180:	or     al,0xf7
  41a182:	xor    edi,eax
  41a184:	into   
  41a185:	loope  0x41a1d1
  41a187:	leave  
  41a188:	pusha  
  41a189:	outs   dx,DWORD PTR ds:[esi]
  41a18a:	cs sub eax,0x5f532c05
  41a190:	out    dx,eax
  41a191:	les    ecx,FWORD PTR [esi]
  41a193:	jbe    0x41a186
  41a195:	scas   eax,DWORD PTR es:[edi]
  41a196:	mov    al,0x18
  41a198:	icebp  
  41a199:	mov    eax,0x60474faf
  41a19e:	mov    ebx,0x2ba9a2bf
  41a1a3:	dec    eax
  41a1a4:	les    eax,FWORD PTR [edx]
  41a1a6:	jmp    0xc3ce73a6
  41a1ab:	cld    
  41a1ac:	adc    ebp,DWORD PTR [ebx]
  41a1ae:	dec    ecx
  41a1af:	sti    
  41a1b0:	and    eax,0x30105c5e
  41a1b5:	sub    BYTE PTR [esi-0x173e909f],ah
  41a1bb:	jae    0x41a192
  41a1bd:	js     0x41a1d3
  41a1bf:	sbb    esp,DWORD PTR [esi+0x7b499b7f]
  41a1c5:	jmp    0x41a1cb
  41a1c7:	jg     0x41a221
  41a1c9:	sbb    eax,0x47433e68
  41a1ce:	std    
  41a1cf:	sbb    DWORD PTR [ebx-0x7],eax
  41a1d2:	mov    ds:0x3bbe8f85,al
  41a1d7:	dec    esp
  41a1d8:	out    dx,al
  41a1d9:	sbb    esp,DWORD PTR [edx-0x38]
  41a1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1dd:	test   BYTE PTR [edx+ebx*2-0x61],cl
  41a1e1:	(bad)  
  41a1e2:	jb     0x41a223
  41a1e4:	jl     0x41a1d1
  41a1e6:	pop    edi
  41a1e7:	clc    
  41a1e8:	pop    esp
  41a1e9:	shl    DWORD PTR [ebx-0x19],cl
  41a1ec:	popa   
  41a1ed:	add    al,0xee
  41a1ef:	push   ebx
  41a1f0:	es aas 
  41a1f2:	adc    ecx,DWORD PTR [eax-0x7c718eb4]
  41a1f8:	jle    0x41a220
  41a1fa:	inc    esi
  41a1fb:	ret    
  41a1fc:	in     al,dx
  41a1fd:	leave  
  41a1fe:	mov    ecx,0x15bd9144
  41a203:	fs adc eax,0xd1daba3
  41a209:	shl    BYTE PTR [edx+0x520df27],1
  41a20f:	je     0x41a196
  41a211:	stos   BYTE PTR es:[edi],al
  41a212:	jge    0x41a19f
  41a214:	cli    
  41a215:	bound  ecx,QWORD PTR [edi+0x4d]
  41a218:	mov    dl,0x64
  41a21a:	scas   al,BYTE PTR es:[edi]
  41a21b:	dec    ecx
  41a21c:	sub    DWORD PTR [eax],ebp
  41a21e:	imul   ebp,DWORD PTR [ebp+0x779dabe],0xce37c54a
  41a228:	out    0xf7,al
  41a22a:	push   0x60
  41a22c:	aam    0xa7
  41a22e:	adc    al,0xf8
  41a230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a231:	or     al,0xe1
  41a233:	inc    ebp
  41a234:	cmp    BYTE PTR [eax],cl
  41a236:	arpl   WORD PTR [ebx+0x30],si
  41a239:	fidivr DWORD PTR [edi]
  41a23b:	fwait
  41a23c:	adc    ch,BYTE PTR [ebx+0x0]
  41a23f:	push   ebx
  41a240:	pop    ss
  41a241:	mov    ecx,0x238b6ac4
  41a246:	out    0x8b,eax
  41a248:	or     eax,0x1a03765d
  41a24d:	retf   
  41a24e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a24f:	inc    ecx
  41a250:	arpl   WORD PTR [esi],bp
  41a252:	das    
  41a253:	(bad)  
  41a254:	fist   WORD PTR [edi+ecx*2]
  41a257:	push   esi
  41a258:	in     al,dx
  41a259:	or     ah,0x4
  41a25c:	js     0x41a29d
  41a25e:	nop
  41a25f:	cmp    ah,BYTE PTR ds:0x4c0b8aa3
  41a265:	or     DWORD PTR [ebx+edx*8+0x16bb171d],ebx
  41a26c:	mov    ecx,DWORD PTR [edx+0x12]
  41a26f:	fbstp  TBYTE PTR [edi-0x7ed3de0c]
  41a275:	push   edi
  41a276:	pop    es
  41a277:	add    BYTE PTR [ecx+ebx*2],0xe3
  41a27b:	sbb    eax,0xb9e6a5c0
  41a280:	cmp    BYTE PTR [eax-0x43],dh
  41a283:	sub    eax,0x9c24be97
  41a288:	mov    ecx,ds
  41a28a:	out    0xa7,eax
  41a28c:	mov    ds:0x97368577,al
  41a291:	dec    ebx
  41a292:	jns    0x41a2e1
  41a294:	and    edx,DWORD PTR [edi-0x5da3bc45]
  41a29a:	dec    esp
  41a29b:	js     0x41a263
  41a29d:	xor    DWORD PTR [edx+0x30],0x2a
  41a2a1:	retf   
  41a2a2:	cld    
  41a2a3:	mov    DWORD PTR [eax],esp
  41a2a5:	andnps xmm6,XMMWORD PTR [edi+eiz*4-0x249d17d3]
  41a2ad:	adc    eax,DWORD PTR [ecx+0x13]
  41a2b0:	mov    ds:0x92d2ea39,eax
  41a2b5:	and    al,0x12
  41a2b7:	repnz test edi,eax
  41a2ba:	loop   0x41a297
  41a2bc:	sbb    al,0x85
  41a2be:	sub    dh,ah
  41a2c0:	sar    ebx,0x15
  41a2c3:	cdq    
  41a2c4:	rsqrtps xmm5,XMMWORD PTR [edx-0x357f5931]
  41a2cb:	dec    esi
  41a2cc:	mov    ecx,0xbd57d9d4
  41a2d1:	push   es
  41a2d2:	sbb    al,0x6f
  41a2d4:	daa    
  41a2d5:	cmp    eax,0x6bad65b7
  41a2da:	repnz inc esp
  41a2dc:	(bad)  
  41a2de:	pop    esp
  41a2df:	cli    
  41a2e0:	xchg   ecx,eax
  41a2e1:	je     0x41a2c9
  41a2e3:	mov    BYTE PTR [esi+ebx*4+0x1e],bh
  41a2e7:	xchg   ecx,eax
  41a2e8:	arpl   WORD PTR [edx-0x4a],sp
  41a2eb:	(bad)  
  41a2ec:	jbe    0x41a2e5
  41a2ee:	sahf   
  41a2ef:	mov    ecx,0x4c203b0e
  41a2f4:	and    eax,0xf2eb20de
  41a2f9:	sub    al,0xb6
  41a2fb:	data16 int 0x86
  41a2fe:	out    0xa4,al
  41a300:	enter  0x579c,0xd2
  41a304:	cmp    bl,dl
  41a306:	mov    esp,0xb5afda1f
  41a30b:	pop    esi
  41a30c:	in     al,0x18
  41a30e:	pop    edi
  41a30f:	dec    esp
  41a310:	(bad)  
  41a311:	rcl    esp,1
  41a313:	mov    esi,0x1cb1bada
  41a318:	data16 aaa 
  41a31a:	push   esi
  41a31b:	loope  0x41a385
  41a31d:	pop    ecx
  41a31e:	(bad)  
  41a31f:	add    BYTE PTR [edi],0x3
  41a322:	fs and ebp,0xffffffad
  41a326:	jmp    0x6444:0xc0204ef4
  41a32d:	in     eax,dx
  41a32e:	call   0xd15c:0x4db27707
  41a335:	in     al,0xd5
  41a337:	or     dh,BYTE PTR [edx-0x57]
  41a33a:	out    0x7b,eax
  41a33c:	out    dx,al
  41a33d:	(bad)  
  41a33e:	icebp  
  41a33f:	lock xor BYTE PTR [esi],ch
  41a342:	(bad)  
  41a343:	jne    0x41a2ee
  41a345:	xor    BYTE PTR [edx+0x4a],al
  41a348:	mov    dl,0xca
  41a34a:	ds jae 0x41a3be
  41a34d:	dec    ebx
  41a34e:	pop    ecx
  41a34f:	fld1   
  41a351:	push   es
  41a352:	xchg   ebp,eax
  41a353:	mov    ch,0x3c
  41a355:	mov    ds:0xdb514406,eax
  41a35a:	xor    al,0x6f
  41a35c:	addr16 pusha 
  41a35e:	xchg   esp,eax
  41a35f:	xor    al,0x2d
  41a361:	int    0xcf
  41a363:	fcmovbe st,st(0)
  41a365:	lods   al,BYTE PTR ds:[esi]
  41a366:	cli    
  41a367:	loop   0x41a374
  41a369:	loope  0x41a2ef
  41a36b:	xor    BYTE PTR [edx-0x51d7ba10],0xbf
  41a372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a373:	dec    ebp
  41a374:	sub    ebp,ecx
  41a376:	lods   al,BYTE PTR ds:[esi]
  41a377:	aad    0xfd
  41a379:	sbb    al,0x78
  41a37b:	gs inc ebp
  41a37d:	test   al,0xaa
  41a37f:	inc    ebx
  41a380:	pop    es
  41a381:	popf   
  41a382:	iret   
  41a383:	lea    ebp,[esp+eax*4-0x5e]
  41a387:	clc    
  41a388:	cs ret 
  41a38a:	inc    edx
  41a38b:	dec    edi
  41a38c:	push   ebx
  41a38d:	xchg   esp,eax
  41a38e:	xchg   ecx,eax
  41a38f:	mov    ebx,0x82cc2388
  41a394:	sahf   
  41a395:	test   DWORD PTR [ebx],ebp
  41a397:	leave  
  41a398:	or     al,0xbe
  41a39a:	lods   eax,DWORD PTR ds:[esi]
  41a39b:	in     al,dx
  41a39c:	neg    ebp
  41a39e:	sub    BYTE PTR [ebx-0x9d50ba4],bl
  41a3a4:	inc    esi
  41a3a5:	push   edx
  41a3a6:	icebp  
  41a3a7:	jne    0x41a347
  41a3a9:	or     ch,0xb2
  41a3ac:	adc    BYTE PTR [ebx-0x11],dl
  41a3af:	push   edi
  41a3b0:	xchg   DWORD PTR [esi+0x63b66be8],ebx
  41a3b6:	adc    eax,0x26daffc2
  41a3bb:	stc    
  41a3bc:	ins    BYTE PTR es:[edi],dx
  41a3bd:	mov    ah,0xf
  41a3bf:	xchg   ebx,eax
  41a3c0:	xchg   esi,eax
  41a3c1:	add    BYTE PTR [esp+eiz*4+0xd],cl
  41a3c5:	test   eax,0x7544228
  41a3ca:	push   ss
  41a3cb:	xor    DWORD PTR [ecx-0x63],esp
  41a3ce:	pop    edx
  41a3cf:	adc    DWORD PTR [ebx+eax*1-0x70],esp
  41a3d3:	stc    
  41a3d4:	lods   eax,DWORD PTR ds:[esi]
  41a3d5:	or     bl,ch
  41a3d7:	or     cl,BYTE PTR [ebp+0x29]
  41a3da:	bound  esp,QWORD PTR [edx]
  41a3dc:	test   BYTE PTR [ebx],0x2e
  41a3df:	push   edx
  41a3e0:	jcxz   0x41a45f
  41a3e3:	int    0x4e
  41a3e5:	mov    esp,0xee740670
  41a3ea:	lds    ebp,FWORD PTR [ebx-0x2b]
  41a3ed:	or     cl,BYTE PTR ds:0x82aa6bf5
  41a3f3:	jecxz  0x41a382
  41a3f5:	out    dx,al
  41a3f6:	test   eax,0xafd68ba6
  41a3fb:	test   eax,0xf5eec3a7
  41a400:	adc    BYTE PTR [edi],0xa1
  41a403:	ins    BYTE PTR es:[edi],dx
  41a404:	inc    ebp
  41a405:	pop    esi
  41a406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a407:	(bad)  
  41a409:	ficomp DWORD PTR [ebx+0x42113653]
  41a40f:	cmp    BYTE PTR [ebp+0x2c],cl
  41a412:	loop   0x41a43d
  41a414:	shl    BYTE PTR ss:[ebp-0x59],0xc1
  41a419:	mov    ah,0x16
  41a41b:	(bad)  
  41a41c:	test   DWORD PTR [edi+0x21],0xfcb170f
  41a423:	mov    eax,0xa43a7f65
  41a428:	mov    ebp,0xe804c8f5
  41a42d:	imul   esp,esi,0xe1e3a97e
  41a433:	cwde   
  41a434:	add    BYTE PTR [esi-0x3e30037a],0x73
  41a43b:	sub    cl,dh
  41a43d:	in     al,dx
  41a43e:	dec    ebx
  41a43f:	or     dh,bh
  41a441:	test   eax,0x2e0b9d51
  41a446:	je     0x41a427
  41a448:	push   ss
  41a449:	add    ecx,DWORD PTR cs:[esi-0x20]
  41a44d:	loopne 0x41a3f8
  41a44f:	xor    cl,BYTE PTR [ebp+0x78]
  41a452:	pop    esp
  41a453:	inc    eax
  41a454:	mov    BYTE PTR [ecx],bl
  41a456:	xchg   DWORD PTR [ecx],ebx
  41a458:	inc    ecx
  41a459:	test   eax,0x6c66bdc4
  41a45e:	add    edi,DWORD PTR [ebx+0x7e895836]
  41a464:	mov    ch,0x9a
  41a466:	xor    al,al
  41a468:	mov    eax,0xda825cf9
  41a46d:	test   BYTE PTR [esi-0x60],ch
  41a470:	lock mov esp,DWORD PTR [ecx-0x66]
  41a474:	ins    BYTE PTR es:[edi],dx
  41a475:	rcr    bl,cl
  41a477:	fdivr  QWORD PTR [ebx-0x66ae4a8]
  41a47d:	sahf   
  41a47e:	xlat   BYTE PTR ds:[ebx]
  41a47f:	fist   DWORD PTR [ebx+0x11]
  41a482:	push   cs
  41a483:	mov    ebp,0x6ab249b2
  41a488:	cmp    edx,DWORD PTR [eax+0x3ecffe9c]
  41a48e:	(bad)  
  41a48f:	fbstp  TBYTE PTR [ebp-0x25c4d651]
  41a495:	cli    
  41a496:	adc    ebx,DWORD PTR [eax]
  41a498:	add    al,0x89
  41a49a:	aam    0x18
  41a49c:	cld    
  41a49d:	add    esp,ecx
  41a49f:	into   
  41a4a0:	loopne 0x41a4cf
  41a4a2:	daa    
  41a4a3:	stos   BYTE PTR es:[edi],al
  41a4a4:	and    ebx,DWORD PTR [edi+0x3fe797a4]
  41a4aa:	fist   WORD PTR [eax+0x18]
  41a4ad:	mov    ebp,0xdf7556cb
  41a4b2:	and    bl,BYTE PTR [edx]
  41a4b4:	push   ss
  41a4b5:	push   edx
  41a4b6:	loop   0x41a507
  41a4b8:	lods   al,BYTE PTR ds:[esi]
  41a4b9:	and    al,0x81
  41a4bb:	dec    DWORD PTR [edx]
  41a4bd:	aas    
  41a4be:	sub    DWORD PTR [esi+0x41474ed],esp
  41a4c4:	or     BYTE PTR [ebx],al
  41a4c6:	mov    eax,ds:0xe2043655
  41a4cb:	pusha  
  41a4cc:	repnz sbb al,0x9a
  41a4cf:	fdivr  DWORD PTR [edx+eiz*1]
  41a4d2:	xchg   edx,eax
  41a4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4d4:	inc    ebx
  41a4d5:	mov    ebp,0x1dd30d0f
  41a4da:	je     0x41a471
  41a4dc:	add    eax,0x7ac18a96
  41a4e1:	sar    dh,0x22
  41a4e4:	stos   BYTE PTR es:[edi],al
  41a4e5:	add    eax,0xbcfe85a6
  41a4ea:	test   eax,0xf80de4f4
  41a4ef:	shl    bl,0xd
  41a4f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4f3:	xchg   BYTE PTR [eax],bl
  41a4f5:	call   0x4af:0x301afdf5
  41a4fc:	into   
  41a4fd:	mov    eax,0x19a2f76
  41a502:	aad    0xd4
  41a504:	xchg   edx,eax
  41a505:	or     edi,eax
  41a507:	pop    ebx
  41a508:	out    0xd,al
  41a50a:	cmc    
  41a50b:	mov    edx,0x6641c6b4
  41a510:	scas   eax,DWORD PTR es:[edi]
  41a511:	outs   dx,BYTE PTR ds:[esi]
  41a512:	jmp    0x41a579
  41a514:	mov    ecx,0x7538b02b
  41a519:	pop    ecx
  41a51a:	fcmovne st,st(1)
  41a51c:	or     dh,cl
  41a51e:	xor    BYTE PTR [edx],dh
  41a520:	mul    DWORD PTR [ebp-0x6008eea4]
  41a526:	addr16 sti 
  41a528:	mov    ch,0xd8
  41a52a:	lahf   
  41a52b:	xor    DWORD PTR ds:0x4502140b,esi
  41a531:	leave  
  41a532:	xchg   ecx,eax
  41a533:	in     al,dx
  41a534:	lahf   
  41a535:	fwait
  41a536:	push   esi
  41a537:	push   ebx
  41a538:	mov    ds:0xcbc717c0,al
  41a53d:	inc    ecx
  41a53e:	jne    0x41a4df
  41a540:	add    edx,DWORD PTR [edi+0x1e]
  41a543:	nop
  41a544:	xor    ebx,DWORD PTR es:[esi-0x336e76b7]
  41a54b:	ins    BYTE PTR es:[edi],dx
  41a54c:	cld    
  41a54d:	shl    eax,1
  41a54f:	sbb    DWORD PTR [edx+0x1a],esi
  41a552:	div    DWORD PTR [eax+0x2e]
  41a555:	fld    DWORD PTR [edi-0x1d]
  41a558:	dec    ebx
  41a559:	adc    dl,dh
  41a55b:	mov    edx,0x93d42c14
  41a560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a561:	jge    0x41a5e0
  41a563:	mov    al,0xeb
  41a565:	das    
  41a566:	mov    DWORD PTR [eax+0x401154e3],edi
  41a56c:	sub    eax,0xf71e9d57
  41a571:	or     ch,al
  41a573:	adc    al,0xa9
  41a575:	push   ds
  41a576:	test   DWORD PTR [edx],ebx
  41a578:	iret   
  41a579:	ja     0x41a5d4
  41a57b:	or     bl,dh
  41a57d:	jecxz  0x41a59d
  41a57f:	adc    BYTE PTR [esi+0x22],dl
  41a582:	push   edx
  41a583:	pop    es
  41a584:	mov    WORD PTR [ebp+0x5b],gs
  41a587:	loope  0x41a50b
  41a589:	fidivr WORD PTR [edi-0x14880c4b]
  41a58f:	add    ebx,ecx
  41a591:	ds xchg ebp,eax
  41a593:	(bad)  
  41a594:	dec    esi
  41a595:	call   0x197e5b7d
  41a59a:	mov    esp,0x3986c965
  41a59f:	push   ecx
  41a5a0:	or     al,0x7d
  41a5a2:	mov    bh,0x1b
  41a5a4:	mov    ecx,0xe5261f32
  41a5a9:	push   edi
  41a5aa:	adc    eax,0x49a4e324
  41a5af:	dec    ecx
  41a5b0:	lods   eax,DWORD PTR ds:[esi]
  41a5b1:	dec    eax
  41a5b2:	push   0xffffffe4
  41a5b4:	adc    BYTE PTR [ebx-0x59],ah
  41a5b7:	or     BYTE PTR [esi+0x4d8e2c41],ch
  41a5bd:	push   0xbe75bf45
  41a5c2:	pop    edx
  41a5c3:	mov    bh,ch
  41a5c5:	stos   DWORD PTR es:[edi],eax
  41a5c6:	add    eax,0x4cc11626
  41a5cb:	mov    eax,0x9e909bb4
  41a5d0:	shr    BYTE PTR [ebx-0x6e],cl
  41a5d3:	xor    DWORD PTR [ebp+0x70],edi
  41a5d6:	xchg   ecx,eax
  41a5d7:	jo     0x41a559
  41a5d9:	lds    esi,FWORD PTR [edi]
  41a5db:	dec    esp
  41a5dc:	(bad)  
  41a5dd:	and    dh,cl
  41a5df:	xchg   BYTE PTR ds:0xf5a8e012,ch
  41a5e5:	inc    ebp
  41a5e6:	xor    dh,0x34
  41a5e9:	mov    esp,0xfaa4ce2f
  41a5ee:	jb     0x41a62f
  41a5f0:	stc    
  41a5f1:	je     0x41a5e7
  41a5f3:	loop   0x41a58e
  41a5f5:	xlat   BYTE PTR ds:[ebx]
  41a5f6:	jae    0x41a638
  41a5f8:	imul   ebp,ebp,0xd6919467
  41a5fe:	je     0x41a581
  41a600:	xor    eax,0xe6f12fce
  41a605:	sbb    bh,BYTE PTR [esi]
  41a607:	sbb    dl,0xdc
  41a60a:	sub    cl,cl
  41a60c:	pusha  
  41a60d:	repz xlat BYTE PTR ds:[ebx]
  41a60f:	inc    ecx
  41a610:	sbb    al,0x37
  41a612:	lock sub edx,DWORD PTR ds:0xccdff2e8
  41a619:	fwait
  41a61a:	jecxz  0x41a59c
  41a61c:	fnstcw WORD PTR [edi+0x22]
  41a61f:	cmp    DWORD PTR [ecx+0x3e],esi
  41a622:	cmp    BYTE PTR [ebx+ebp*2-0x7531e302],ch
  41a629:	inc    esp
  41a62a:	push   cs
  41a62b:	fwait
  41a62c:	out    0x4,al
  41a62e:	jl     0x41a664
  41a630:	imul   edi,ebx,0xfffffff9
  41a633:	imul   edi,DWORD PTR ds:0x84a4955e,0x3a
  41a63a:	test   BYTE PTR [eax-0xc],bl
  41a63d:	pop    ds
  41a63e:	fs pop ds
  41a640:	xor    bh,ch
  41a642:	ja     0x41a6ac
  41a644:	adc    bl,BYTE PTR [ecx-0x20c5a5bf]
  41a64a:	nop
  41a64b:	iret   
  41a64c:	mov    al,0xdd
  41a64e:	popf   
  41a64f:	imul   esi,esp,0xffffffa0
  41a652:	and    edx,edx
  41a654:	xor    BYTE PTR [si],ah
  41a657:	out    dx,eax
  41a658:	push   es
  41a659:	mov    BYTE PTR [eax+0x1538260b],cl
  41a65f:	and    al,0x61
  41a661:	xchg   esi,eax
  41a662:	stos   DWORD PTR es:[edi],eax
  41a663:	jne    0x41a61a
  41a665:	dec    edi
  41a666:	loop   0x41a6a4
  41a668:	dec    esi
  41a669:	push   es
  41a66a:	sti    
  41a66b:	jns    0x41a6d2
  41a66d:	or     eax,ebp
  41a66f:	or     esp,eax
  41a671:	scas   eax,DWORD PTR es:[edi]
  41a672:	cld    
  41a673:	shr    BYTE PTR [edi-0x1738a70b],1
  41a679:	into   
  41a67a:	(bad)  
  41a67b:	sti    
  41a67c:	jg     0x41a6dd
  41a67e:	add    al,0x96
  41a680:	mov    al,0xb6
  41a682:	add    eax,0x42b2b929
  41a687:	push   ebx
  41a688:	xchg   ebp,eax
  41a689:	pop    ebp
  41a68a:	jb     0x41a643
  41a68c:	ret    
  41a68d:	(bad)
  41a690:	sub    BYTE PTR [edi],ah
  41a692:	ret    0xd759
  41a695:	and    ah,BYTE PTR [ebx+esi*8-0x64]
  41a699:	push   0x566d595f
  41a69e:	stos   BYTE PTR es:[edi],al
  41a69f:	je     0x41a665
  41a6a1:	pop    ebx
  41a6a2:	es xchg esp,eax
  41a6a4:	xchg   edi,eax
  41a6a5:	xor    esp,DWORD PTR [ecx]
  41a6a7:	aad    0x6f
  41a6a9:	aam    0x59
  41a6ab:	mov    edx,0x348a3a97
  41a6b0:	aam    0x93
  41a6b2:	fdivr  st,st(3)
  41a6b4:	jle    0x41a67c
  41a6b6:	jge    0x41a652
  41a6b8:	pop    ebp
  41a6b9:	jmp    0x7df9e77d
  41a6be:	test   dl,bh
  41a6c0:	mov    dh,BYTE PTR [edi]
  41a6c2:	ror    BYTE PTR [edi-0x16],cl
  41a6c5:	add    bh,0x25
  41a6c8:	cmp    eax,0x578131f9
  41a6cd:	call   0xb1c7:0xbdccaa1c
  41a6d4:	jp     0x41a709
  41a6d6:	cmp    eax,0x673514f8
  41a6db:	mov    ah,0xcf
  41a6dd:	cmp    ecx,DWORD PTR [ebp+ebp*2+0x636faaab]
  41a6e4:	imul   esp,DWORD PTR [edi-0x674c402f],0x750cfc07
  41a6ee:	(bad)
  41a6f1:	in     eax,dx
  41a6f2:	cwde   
  41a6f3:	ins    DWORD PTR es:[edi],dx
  41a6f4:	call   0xd48b6d3
  41a6f9:	ins    BYTE PTR es:[edi],dx
  41a6fa:	mov    ah,0xbd
  41a6fc:	jp     0x41a757
  41a6fe:	mov    ebx,0x7cd077a7
  41a703:	push   esp
  41a704:	dec    esi
  41a705:	repz sbb eax,0x64e4dfd2
  41a70b:	add    eax,0xed59300f
  41a710:	sti    
  41a711:	call   0x1901445b
  41a716:	push   ebx
  41a717:	push   cs
  41a718:	or     BYTE PTR [esi+edx*1-0x29deb33f],0x13
  41a720:	popa   
  41a721:	ucomiss xmm1,DWORD PTR [edi-0x76]
  41a725:	mov    bh,0x48
  41a727:	or     edx,DWORD PTR [esi+eax*2+0x33054954]
  41a72e:	pop    edx
  41a72f:	and    DWORD PTR [eax],edx
  41a731:	loop   0x41a734
  41a733:	fld    DWORD PTR [edx]
  41a735:	adc    eax,0xb3247f1c
  41a73a:	out    0xbf,al
  41a73c:	adc    al,0xeb
  41a73e:	das    
  41a73f:	in     al,dx
  41a740:	pop    ecx
  41a741:	dec    ebp
  41a742:	loope  0x41a6fa
  41a744:	stos   DWORD PTR es:[edi],eax
  41a745:	or     ebp,DWORD PTR [edx-0x1c]
  41a748:	(bad)  
  41a749:	les    esi,FWORD PTR [edx+0x6a]
  41a74c:	dec    esp
  41a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74f:	lods   eax,DWORD PTR ds:[esi]
  41a750:	or     eax,0x3a270dc8
  41a755:	sub    esp,DWORD PTR [ebx+0x5763aa1e]
  41a75b:	pop    ds
  41a75c:	retf   0x9fcf
  41a75f:	dec    esp
  41a760:	xor    eax,0x6f548e02
  41a765:	loope  0x41a729
  41a767:	test   edx,esi
  41a769:	or     DWORD PTR [eax-0x3a],eax
  41a76c:	inc    ebx
  41a76d:	dec    edx
  41a76e:	into   
  41a76f:	jp     0x41a7a6
  41a771:	inc    ebx
  41a772:	push   edi
  41a773:	fist   DWORD PTR [ebp-0x46989665]
  41a779:	inc    ebp
  41a77a:	jecxz  0x41a733
  41a77c:	xchg   esp,eax
  41a77d:	jo     0x41a774
  41a77f:	mov    al,ds:0x6b93c88f
  41a784:	jne    0x41a709
  41a786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a787:	dec    ebx
  41a788:	xchg   ecx,eax
  41a789:	xor    DWORD PTR [ebx+0x49bb1686],ebx
  41a78f:	lods   eax,DWORD PTR ds:[esi]
  41a790:	cmp    al,0xa
  41a792:	mov    esp,DWORD PTR [ecx]
  41a794:	sbb    ch,al
  41a796:	adc    bh,BYTE PTR [edx+0x12b7e2c6]
  41a79c:	fcom   DWORD PTR [ebx-0xe56b428]
  41a7a2:	dec    ecx
  41a7a3:	cs ret 0x4264
  41a7a7:	jmp    0x41a7c6
  41a7a9:	xor    BYTE PTR [eax+0x5c],bh
  41a7ac:	fsub   QWORD PTR [edi+0x3c]
  41a7af:	cvtdq2ps xmm2,XMMWORD PTR [eax+0x36129e8d]
  41a7b6:	jmp    0x41a7da
  41a7b8:	mov    ds:0xfa733599,eax
  41a7bd:	sahf   
  41a7be:	lea    esp,[edx]
  41a7c0:	or     bh,BYTE PTR [eax-0x5c]
  41a7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7c4:	(bad)  
  41a7c6:	mov    ds:0x64a59068,al
  41a7cb:	sub    al,0x7a
  41a7cd:	mov    al,0x39
  41a7cf:	dec    edx
  41a7d0:	ds loop 0x41a76a
  41a7d3:	sub    edx,DWORD PTR [eax+ebp*8+0x5dd19525]
  41a7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7db:	jge    0x41a7a1
  41a7dd:	push   ss
  41a7de:	mov    ecx,0x1f042c19
  41a7e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7e4:	lock mov bl,0xc7
  41a7e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7e8:	jp     0x41a80a
  41a7ea:	cmp    esi,ebp
  41a7ec:	loope  0x41a802
  41a7ee:	in     eax,dx
  41a7ef:	cwde   
  41a7f0:	mov    WORD PTR ds:[eax+esi*8-0x1e90e3b2],ds
  41a7f8:	adc    DWORD PTR [edx+0x730033d3],edx
  41a7fe:	sar    BYTE PTR [ebp+0x437d8283],1
  41a804:	xchg   esi,eax
  41a805:	outs   dx,DWORD PTR ds:[esi]
  41a806:	push   edi
  41a807:	mov    edx,0xb9c680e9
  41a80c:	popa   
  41a80d:	pop    ebx
  41a80e:	mov    edi,0xadd3fc99
  41a813:	test   BYTE PTR [edi-0x6d5e351b],ch
  41a819:	sbb    DWORD PTR [edx],esi
  41a81b:	mov    edi,0x7b0f7280
  41a820:	and    ebp,DWORD PTR [ebp-0x45]
  41a823:	dec    ecx
  41a824:	lds    ebp,FWORD PTR [edx+0x6f]
  41a827:	bound  esp,QWORD PTR [edi-0x4a]
  41a82a:	xchg   ebp,eax
  41a82b:	loopne 0x41a80c
  41a82d:	sub    BYTE PTR [edi+0x10],0xc7
  41a831:	mov    al,ds:0xa0b7d8c
  41a836:	jle    0x41a898
  41a838:	mov    ch,0x3
  41a83a:	mov    bh,0x1b
  41a83c:	mov    dh,0xde
  41a83e:	xor    ah,BYTE PTR [eax+0x535e5f79]
  41a844:	in     al,0xf1
  41a846:	data16 in al,dx
  41a848:	loopne 0x41a7fa
  41a84a:	push   edx
  41a84b:	xor    al,BYTE PTR [edi-0x5ef1e561]
  41a851:	xor    dh,BYTE PTR [edx+0x75]
  41a854:	xchg   ebx,eax
  41a855:	(bad)
  41a85a:	mov    WORD PTR [eax+0x6a],fs
  41a85d:	ret    
  41a85e:	mov    dl,BYTE PTR [edi]
  41a860:	fld    DWORD PTR [edi]
  41a862:	cli    
  41a863:	iret   
  41a864:	dec    esi
  41a865:	pop    edx
  41a866:	ins    BYTE PTR es:[edi],dx
  41a867:	aaa    
  41a868:	add    ebx,DWORD PTR [edx+0x467d9c07]
  41a86e:	mov    BYTE PTR [ebp+esi*8-0x5e],cl
  41a872:	mov    dh,0x4b
  41a874:	and    dl,BYTE PTR [edx-0x3a]
  41a877:	pop    ecx
  41a878:	loop   0x41a8f6
  41a87a:	xchg   BYTE PTR [edi-0x1f6ff841],dl
  41a880:	imul   edi,DWORD PTR [eax-0x11602f90],0xffffff97
  41a887:	jmp    0x5dd5:0xc969eb98
  41a88e:	cli    
  41a88f:	loop   0x41a8d9
  41a891:	rol    DWORD PTR [eax],cl
  41a893:	pop    ds
  41a894:	mov    bh,0x4
  41a896:	sti    
  41a897:	jg     0x41a8b3
  41a899:	ja     0x41a8d9
  41a89b:	pop    es
  41a89c:	mov    esi,0x5c4c93eb
  41a8a1:	(bad)  
  41a8a2:	dec    edi
  41a8a3:	push   ds
  41a8a4:	jns    0x41a839
  41a8a6:	mov    al,0x8f
  41a8a8:	mov    cl,0x48
  41a8aa:	and    ah,BYTE PTR [ecx]
  41a8ac:	mov    eax,0xfa794587
  41a8b1:	add    ch,BYTE PTR [ebp-0x3dcdd3f0]
  41a8b7:	mov    ds:0xe845a7e,eax
  41a8bc:	sar    DWORD PTR [ebx-0x2c],1
  41a8bf:	mov    ah,0xba
  41a8c1:	sar    esi,1
  41a8c3:	and    dl,dl
  41a8c5:	dec    edx
  41a8c6:	push   ss
  41a8c7:	or     dh,BYTE PTR [eax]
  41a8c9:	mov    ah,0x74
  41a8cb:	call   0x7eae57a9
  41a8d0:	push   cs
  41a8d1:	lods   al,BYTE PTR ds:[esi]
  41a8d2:	dec    esi
  41a8d3:	mov    al,0x8d
  41a8d5:	je     0x41a8b1
  41a8d7:	cmp    ax,0x8aa1
  41a8db:	cmp    DWORD PTR [ebp-0x52],edi
  41a8de:	adc    ch,BYTE PTR [ebp-0x54]
  41a8e1:	dec    edx
  41a8e2:	fs ins BYTE PTR es:[edi],dx
  41a8e4:	lahf   
  41a8e5:	pop    esp
  41a8e6:	cmp    esp,DWORD PTR [ecx]
  41a8e8:	loop   0x41a90a
  41a8ea:	dec    ecx
  41a8eb:	pop    ecx
  41a8ec:	jne    0x41a895
  41a8ee:	mov    edi,ss
  41a8f0:	mov    edx,0xe7079063
  41a8f5:	xsha256 (bad)
  41a8f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8f7:	xchg   esi,eax
  41a8f8:	sti    
  41a8f9:	mov    edi,0x9c39fc6f
  41a8fe:	out    0x8a,eax
  41a900:	mov    eax,DWORD PTR [ecx]
  41a902:	dec    eax
  41a903:	pop    edi
  41a904:	test   eax,0x7238dcda
  41a909:	sti    
  41a90a:	push   ss
  41a90b:	lahf   
  41a90c:	inc    ebx
  41a90d:	cdq    
  41a90e:	xchg   esp,eax
  41a90f:	mul    DWORD PTR [ebp-0x26]
  41a912:	inc    edx
  41a913:	pop    edi
  41a914:	ds mov dl,0xb9
  41a917:	sbb    eax,0x59fac007
  41a91c:	xchg   ebp,eax
  41a91d:	leave  
  41a91e:	mov    eax,0xe9b2676
  41a923:	loopne 0x41a999
  41a925:	cdq    
  41a926:	test   DWORD PTR [ecx+0x1a150a83],eax
  41a92c:	jne    0x41a9a2
  41a92e:	loope  0x41a95a
  41a930:	int    0xc2
  41a932:	ins    DWORD PTR es:[edi],dx
  41a933:	fstp   QWORD PTR [ebp-0x1240c2af]
  41a939:	dec    esp
  41a93a:	add    BYTE PTR [esi+0x15090eab],bl
  41a940:	add    eax,DWORD PTR [edx-0x72]
  41a943:	stos   BYTE PTR es:[edi],al
  41a944:	sub    ecx,0x31
  41a947:	push   ecx
  41a948:	les    ebp,FWORD PTR [edi-0x1c]
  41a94b:	(bad)  
  41a94c:	rol    DWORD PTR [ebx+0x53],0xfa
  41a950:	test   ch,al
  41a952:	inc    edx
  41a953:	fbld   TBYTE PTR [eax+0x4c]
  41a956:	iret   
  41a957:	pop    eax
  41a958:	cwde   
  41a959:	dec    esi
  41a95a:	mov    cl,BYTE PTR [edi+ebx*4+0x40a78756]
  41a961:	mov    edx,0xa75fbe2f
  41a966:	ds mov edx,0x1cce3f9f
  41a96c:	mov    bh,0x8a
  41a96e:	adc    DWORD PTR [edx],ecx
  41a970:	sbb    al,0xeb
  41a972:	jb     0x41a928
  41a974:	cmp    eax,0xfa3b082
  41a979:	mov    cl,0xb1
  41a97b:	xor    BYTE PTR [edi],bh
  41a97d:	sub    BYTE PTR [eax-0x4d809726],dl
  41a983:	(bad)  
  41a984:	test   al,0x34
  41a986:	or     al,0x50
  41a988:	add    BYTE PTR [ecx-0x3b1131c1],cl
  41a98e:	stos   BYTE PTR es:[edi],al
  41a98f:	pop    edi
  41a990:	jb     0x41a912
  41a992:	push   esp
  41a993:	cld    
  41a994:	fwait
  41a995:	xor    eax,0x143a4403
  41a99a:	pop    ds
  41a99b:	cwde   
  41a99c:	dec    ebx
  41a99d:	cmp    esi,DWORD PTR [esi]
  41a99f:	xor    al,0x8b
  41a9a1:	addr16 cwde 
  41a9a3:	cwde   
  41a9a4:	iret   
  41a9a5:	xor    bh,dh
  41a9a7:	in     al,0x77
  41a9a9:	sub    eax,DWORD PTR [edx]
  41a9ab:	cmp    bh,BYTE PTR [edx+0x56]
  41a9ae:	outs   dx,BYTE PTR ds:[esi]
  41a9af:	pop    ecx
  41a9b0:	mov    bh,BYTE PTR [eax+0x172e664d]
  41a9b6:	pop    ds
  41a9b7:	stos   DWORD PTR es:[edi],eax
  41a9b8:	cmp    al,0xac
  41a9ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9bb:	xlat   BYTE PTR ds:[ebx]
  41a9bc:	or     eax,DWORD PTR [ecx+0x58]
  41a9bf:	jecxz  0x41a951
  41a9c1:	into   
  41a9c2:	dec    esp
  41a9c3:	test   al,0xbd
  41a9c5:	imul   esi,DWORD PTR [edi],0xa166e457
  41a9cb:	sub    ebx,ebx
  41a9cd:	je     0x41a97f
  41a9cf:	jae    0x41a9f0
  41a9d1:	and    al,BYTE PTR [edx-0x4904e4f0]
  41a9d7:	adc    ch,BYTE PTR [ebp-0x13909d15]
  41a9dd:	adc    DWORD PTR [edi],ebx
  41a9df:	mov    fs:0x7346967f,eax
  41a9e5:	and    al,0xec
  41a9e7:	pop    eax
  41a9e8:	cs movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41a9eb:	xchg   esp,edi
  41a9ed:	jnp    0x41a9b9
  41a9ef:	cwde   
  41a9f0:	adc    eax,0xb0fb6ae4
  41a9f5:	push   edx
  41a9f6:	stos   DWORD PTR es:[edi],eax
  41a9f7:	loop   0x41aa15
  41a9f9:	xchg   cl,ch
  41a9fb:	in     eax,0xe3
  41a9fd:	adc    BYTE PTR [edx+0x19eed2c6],0xad
  41aa04:	cmp    DWORD PTR [ebp+0x4a],ebx
  41aa07:	std    
  41aa08:	mov    ds,WORD PTR [edi-0x57c35db1]
  41aa0e:	shl    bl,0x9e
  41aa11:	sub    DWORD PTR [ebp-0x4a1c8f5e],edx
  41aa17:	jae    0x41aa10
  41aa19:	sbb    BYTE PTR [ecx+0x6637262c],0x39
  41aa20:	sub    esi,esp
  41aa22:	add    al,0xf3
  41aa24:	inc    eax
  41aa25:	pop    esp
  41aa26:	jo     0x41aa63
  41aa28:	popa   
  41aa29:	mov    ds:0x8a554136,al
  41aa2e:	shr    BYTE PTR [eax],0x72
  41aa31:	mov    al,ds:0x5cc92311
  41aa36:	les    edi,FWORD PTR [esi]
  41aa38:	imul   eax,edx,0x11
  41aa3b:	mov    ebx,0xd3d5703f
  41aa40:	sub    ch,BYTE PTR [edx-0x60194483]
  41aa46:	jo     0x41a9ce
  41aa48:	xor    al,0xfa
  41aa4a:	xlat   BYTE PTR ds:[ebx]
  41aa4b:	lods   eax,DWORD PTR ds:[esi]
  41aa4c:	sub    edi,0x2aa84ff2
  41aa52:	mul    DWORD PTR [esi+0x5f2ffbfc]
  41aa58:	mov    ebp,0x4955ab84
  41aa5d:	nop
  41aa5e:	add    esi,DWORD PTR [esi+0x2f]
  41aa61:	or     ah,bh
  41aa63:	int3   
  41aa64:	and    DWORD PTR [esi],esi
  41aa66:	out    dx,al
  41aa67:	call   0x6632e26d
  41aa6c:	shl    DWORD PTR [eax+0x5c],1
  41aa6f:	ja     0x41aadf
  41aa71:	cmp    DWORD PTR [esi+0x5e],0x52
  41aa75:	mov    ds:0xdfd2748b,al
  41aa7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa7b:	fist   DWORD PTR [ebp+0x6dbaffec]
  41aa81:	mov    al,ds:0x23e40155
  41aa86:	sbb    BYTE PTR [esi+0x1b3b75e0],bh
  41aa8c:	mov    dh,al
  41aa8e:	fld    st(2)
  41aa90:	and    eax,0xfaff2245
  41aa95:	stc    
  41aa96:	nop
  41aa97:	je     0x41aa60
  41aa99:	cmp    ecx,DWORD PTR [esi]
  41aa9b:	fidivr DWORD PTR [ebx-0x1a]
  41aa9e:	fld    st(1)
  41aaa0:	xor    al,BYTE PTR [ebx+0x1e336da6]
  41aaa6:	and    eax,0x2a205d99
  41aaab:	ja     0x41aa32
  41aaad:	adc    eax,0xd8432db6
  41aab2:	xchg   esi,eax
  41aab3:	fsubr  st,st(1)
  41aab5:	adc    al,0x33
  41aab7:	mov    eax,ds:0xabfdda39
  41aabc:	int    0xc7
  41aabe:	add    eax,0x31d6936c
  41aac3:	and    eax,0xd721eddb
  41aac8:	fxtract 
  41aaca:	pop    ss
  41aacb:	dec    edx
  41aacc:	or     esp,ebx
  41aace:	test   eax,0x5477887f
  41aad3:	inc    esi
  41aad4:	shl    DWORD PTR [ebp-0x67a54a20],cl
  41aada:	inc    ecx
  41aadb:	xchg   edi,eax
  41aadc:	pop    eax
  41aadd:	dec    ebp
  41aade:	popf   
  41aadf:	mov    edx,0xd9670146
  41aae4:	sar    edi,cl
  41aae6:	pop    ebx
  41aae7:	inc    esi
  41aae8:	dec    ebp
  41aae9:	jecxz  0x41aaa3
  41aaeb:	outs   dx,BYTE PTR cs:[esi]
  41aaed:	or     edx,DWORD PTR [ebp-0x1a]
  41aaf0:	push   ebx
  41aaf1:	repnz cwde 
  41aaf3:	jg     0x41ab6d
  41aaf5:	mov    al,ds:0xe1ba273f
  41aafa:	leave  
  41aafb:	add    dh,BYTE PTR [ebp+0x39]
  41aafe:	and    eax,0x808dcdb
  41ab03:	cwde   
  41ab04:	mov    esi,0xadea7ca9
  41ab09:	dec    ebx
  41ab0a:	lahf   
  41ab0b:	and    BYTE PTR [edx],0x58
  41ab0e:	scas   eax,DWORD PTR es:[edi]
  41ab0f:	push   ebp
  41ab10:	out    0x68,eax
  41ab12:	xor    eax,0xb1a80451
  41ab17:	mov    cl,bl
  41ab19:	add    DWORD PTR [ebx],ebp
  41ab1b:	in     al,dx
  41ab1c:	mov    ebx,0x9a0f574
  41ab21:	mov    cl,0x26
  41ab23:	dec    esi
  41ab24:	dec    ecx
  41ab25:	lahf   
  41ab26:	cmp    BYTE PTR [ebx+0x5dc5424e],bh
  41ab2c:	jecxz  0x41ab30
  41ab2e:	jge    0x41ab66
  41ab30:	or     DWORD PTR [ebx+0x203f69d4],ebx
  41ab36:	and    DWORD PTR [eax+edi*1+0x259278df],esi
  41ab3d:	test   al,0x37
  41ab3f:	jle    0x41ab11
  41ab41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab42:	and    eax,DWORD PTR [ebx]
  41ab44:	sti    
  41ab45:	jge    0x41ab50
  41ab47:	ja     0x1167dc46
  41ab4d:	push   esi
  41ab4e:	fsub   QWORD PTR ds:0xb9b22411
  41ab54:	mov    edi,0x276e1349
  41ab59:	pop    edx
  41ab5a:	xchg   ecx,eax
  41ab5b:	xchg   esp,eax
  41ab5c:	mov    ah,0x88
  41ab5e:	(bad)  
  41ab5f:	int    0x1
  41ab61:	sub    DWORD PTR [edx],edi
  41ab63:	test   BYTE PTR [esi-0x4252cf77],dh
  41ab69:	retf   
  41ab6a:	aad    0x64
  41ab6c:	cmc    
  41ab6d:	out    0x43,eax
  41ab6f:	lahf   
  41ab70:	mov    al,ds:0x105e33ea
  41ab75:	jb     0x41ab24
  41ab77:	fsub   QWORD PTR [edx+0x7b]
  41ab7a:	and    BYTE PTR [eax],ah
  41ab7c:	jbe    0x41ab7d
  41ab7e:	(bad)  [edx+ecx*8]
  41ab81:	pop    edx
  41ab82:	in     eax,0xa6
  41ab84:	cmp    al,BYTE PTR [ebp-0x2f5f3094]
  41ab8a:	and    ebp,DWORD PTR [ebp-0x537ba0bc]
  41ab90:	jle    0x41ab88
  41ab92:	xor    BYTE PTR cs:[esi-0x2a],0x4d
  41ab97:	lods   al,BYTE PTR ds:[esi]
  41ab98:	xor    BYTE PTR [eax+0x50],cl
  41ab9b:	daa    
  41ab9c:	out    dx,al
  41ab9d:	jb     0x41ab3c
  41ab9f:	xor    dl,BYTE PTR [esi-0x16]
  41aba2:	hlt    
  41aba3:	mov    ebp,0x8b755061
  41aba8:	lods   eax,DWORD PTR ds:[esi]
  41aba9:	xchg   DWORD PTR ds:0xbf38af55,esp
  41abaf:	stos   DWORD PTR es:[edi],eax
  41abb0:	test   BYTE PTR [ebx+0x25],bl
  41abb3:	push   edx
  41abb4:	jo     0x41abe7
  41abb6:	imul   esp,DWORD PTR [esi],0x773824bd
  41abbc:	xor    bl,BYTE PTR [edi+0x46]
  41abbf:	aad    0xbb
  41abc1:	and    eax,0xaba888f9
  41abc6:	jnp    0x41abe8
  41abc8:	out    dx,al
  41abc9:	(bad)  
  41abca:	loop   0x41ac25
  41abcc:	xor    eax,0xde214bdb
  41abd1:	mov    ah,BYTE PTR [eax-0x56]
  41abd4:	jge    0x41ab86
  41abd6:	adc    BYTE PTR [edi],bl
  41abd8:	lahf   
  41abd9:	fwait
  41abda:	cmp    edx,DWORD PTR [eax-0x2448a651]
  41abe0:	sbb    DWORD PTR [esi],edi
  41abe2:	cs mov ?,ecx
  41abe5:	sub    DWORD PTR [esi-0x29b686a2],esp
  41abeb:	test   eax,0x4e5a818d
  41abf0:	arpl   si,dx
  41abf2:	dec    edi
  41abf3:	jge    0x41ac34
  41abf5:	mov    ebx,0x501a36ad
  41abfa:	repnz cli 
  41abfc:	cmp    DWORD PTR [edx-0x34725420],ebx
  41ac02:	arpl   WORD PTR [ebx+0x38],si
  41ac05:	mov    esp,0xf0854e8c
  41ac0a:	les    ebp,FWORD PTR [edi]
  41ac0c:	into   
  41ac0d:	shl    DWORD PTR [edx-0xce12ad4],0x9a
  41ac14:	cmp    esi,DWORD PTR [edx+0x51]
  41ac17:	dec    esi
  41ac18:	inc    ecx
  41ac19:	push   ebp
  41ac1a:	sbb    al,0x28
  41ac1c:	fcmovnbe st,st(2)
  41ac1e:	inc    ebx
  41ac1f:	(bad)  
  41ac20:	stc    
  41ac21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac22:	and    BYTE PTR [ebx+0x1c1a2a87],0xee
  41ac29:	retf   
  41ac2a:	jo     0x41ac66
  41ac2c:	icebp  
  41ac2d:	test   eax,0xf35dfb12
  41ac32:	ret    
  41ac33:	cs pop ds
  41ac35:	add    eax,0xdb63a035
  41ac3a:	ins    DWORD PTR es:[edi],dx
  41ac3b:	and    BYTE PTR [edi+0x10328b66],bl
  41ac41:	cwde   
  41ac42:	dec    edi
  41ac43:	ret    0x54ca
  41ac46:	mov    ebp,0x68359d51
  41ac4b:	or     ah,BYTE PTR [ebx+0x53]
  41ac4e:	dec    ebx
  41ac4f:	mov    al,ds:0x476b7145
  41ac54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac55:	retf   0x434a
  41ac58:	sbb    al,bh
  41ac5a:	fucomip st,st(3)
  41ac5c:	gs pop edi
  41ac5e:	pop    edi
  41ac5f:	aad    0x1a
  41ac61:	cmp    eax,0xc9dc3737
  41ac66:	cwde   
  41ac67:	test   eax,0x982e91a0
  41ac6c:	add    BYTE PTR [ecx+0x7f04b27f],bh
  41ac72:	push   cs
  41ac73:	and    dl,0x8f
  41ac76:	ror    BYTE PTR [ecx-0x69],0xa6
  41ac7a:	enter  0xef80,0x97
  41ac7e:	mov    WORD PTR [ebx],?
  41ac80:	xchg   esi,eax
  41ac81:	popf   
  41ac82:	inc    esi
  41ac83:	fs call 0x1abca9b7
  41ac89:	int    0xad
  41ac8b:	or     BYTE PTR [ebp+ebp*8+0x15b7900b],bl
  41ac92:	data16 or al,0xd4
  41ac95:	dec    edi
  41ac96:	jns    0x41acf5
  41ac98:	nop
  41ac99:	mov    dl,0x30
  41ac9b:	sar    DWORD PTR [ebx+0x448ba498],cl
  41aca1:	add    esp,DWORD PTR [edi+0x86b399e]
  41aca7:	push   ds
  41aca8:	das    
  41aca9:	xchg   edx,eax
  41acaa:	(bad)  
  41acab:	jo     0x41ac59
  41acad:	dec    eax
  41acae:	imul   esi,DWORD PTR [esi-0x722488d9],0x3a
  41acb5:	arpl   WORD PTR [edi],cx
  41acb7:	inc    ebp
  41acb8:	push   cs
  41acb9:	pop    ebp
  41acba:	push   esp
  41acbb:	dec    esi
  41acbc:	(bad)  
  41acbd:	pop    ebp
  41acbe:	jmp    0xe94d6e6e
  41acc3:	into   
  41acc4:	mov    al,0xca
  41acc6:	shr    DWORD PTR [ecx-0x12a58ce7],0x5c
  41accd:	pop    es
  41acce:	mov    BYTE PTR [esi],dl
  41acd0:	int    0x9
  41acd2:	mov    bl,0x68
  41acd4:	mov    cl,0x50
  41acd6:	into   
  41acd7:	xchg   esi,eax
  41acd8:	mov    ds:0xa4d09d56,al
  41acdd:	dec    ebp
  41acde:	and    dl,al
  41ace0:	jecxz  0x41acd6
  41ace2:	retf   
  41ace3:	and    ch,BYTE PTR [ecx-0x572c788]
  41ace9:	inc    esp
  41acea:	cmp    BYTE PTR [ebx+0xdc865c5],0x23
  41acf1:	sar    DWORD PTR [edi+0x61e91475],0x2
  41acf8:	push   ss
  41acf9:	jge    0x41ad2b
  41acfb:	dec    edx
  41acfc:	stos   BYTE PTR es:[edi],al
  41acfd:	jo     0x41acaf
  41acff:	fdivr  DWORD PTR [esi+0x33]
  41ad02:	scas   al,BYTE PTR es:[edi]
  41ad03:	jecxz  0x41ac8e
  41ad05:	mov    bh,0xb6
  41ad07:	dec    esi
  41ad08:	test   al,0xe2
  41ad0a:	in     eax,0xca
  41ad0c:	mov    ch,BYTE PTR [edx-0x7d]
  41ad0f:	nop
  41ad10:	sub    bh,BYTE PTR [edi]
  41ad12:	xlat   BYTE PTR ds:[ebx]
  41ad13:	scas   al,BYTE PTR es:[edi]
  41ad14:	inc    eax
  41ad15:	cwde   
  41ad16:	std    
  41ad17:	adc    BYTE PTR [ecx],0xa3
  41ad1a:	ja     0x41ac9f
  41ad1c:	sub    al,0x99
  41ad1e:	retf   0xae5f
  41ad21:	fistp  DWORD PTR [ecx-0x5f]
  41ad24:	lock (bad) ss:[ebp+0x59]
  41ad29:	sbb    BYTE PTR [edi-0x73],dh
  41ad2c:	outs   dx,DWORD PTR ds:[esi]
  41ad2d:	xchg   ecx,eax
  41ad2e:	add    al,0xfb
  41ad30:	dec    edi
  41ad31:	push   edi
  41ad32:	or     eax,0xd0699431
  41ad37:	sub    BYTE PTR [eax],dl
  41ad39:	push   esp
  41ad3a:	pop    ebx
  41ad3b:	cmp    cl,bh
  41ad3d:	loop   0x41ad22
  41ad3f:	or     esp,edi
  41ad41:	cmp    dh,BYTE PTR [ecx-0xc54ae4b]
  41ad47:	inc    eax
  41ad48:	xor    eax,0x8292f76d
  41ad4d:	mov    BYTE PTR [eax-0x511cf89d],cl
  41ad53:	push   0x8ceb2dc7
  41ad58:	push   ecx
  41ad59:	fstp   TBYTE PTR [ebp+ebx*2+0xe62827d]
  41ad60:	lea    edx,[esi+ebp*1+0x4e3d0ff7]
  41ad67:	je     0x41adbd
  41ad69:	xchg   esp,eax
  41ad6a:	jb     0x41ad0d
  41ad6c:	aaa    
  41ad6d:	sub    DWORD PTR [ecx+0x29],ebp
  41ad70:	mov    esp,0x60c13f8b
  41ad75:	aam    0xf6
  41ad77:	jnp    0x41ad6f
  41ad79:	fnstenv [edi]
  41ad7b:	fwait
  41ad7c:	inc    eax
  41ad7d:	add    DWORD PTR [edx+0x79],esi
  41ad80:	aaa    
  41ad81:	pop    edx
  41ad82:	or     al,0xba
  41ad84:	or     ebx,DWORD PTR [esi-0x3dc18e3c]
  41ad8a:	pop    ecx
  41ad8b:	(bad)  
  41ad8c:	lods   eax,DWORD PTR ds:[esi]
  41ad8d:	dec    ebp
  41ad8e:	xor    al,0x56
  41ad90:	push   edx
  41ad91:	cmp    BYTE PTR [ecx+0xf],ah
  41ad94:	mov    bh,0xf
  41ad96:	and    DWORD PTR [edi+0x5e],esp
  41ad99:	dec    edx
  41ad9a:	(bad)  
  41ad9b:	std    
  41ad9c:	push   es
  41ad9d:	pop    es
  41ad9e:	sub    eax,0xb11d27cf
  41ada3:	and    BYTE PTR [edx-0x7c],ah
  41ada6:	sbb    ah,bl
  41ada8:	out    dx,al
  41ada9:	sbb    ah,cl
  41adab:	fs ja  0x41adb5
  41adae:	cs nop
  41adb0:	inc    esp
  41adb1:	xchg   edi,eax
  41adb2:	xchg   sp,ax
  41adb4:	mov    eax,ds:0x46103f14
  41adb9:	loop   0x41add3
  41adbb:	xchg   BYTE PTR [edi-0x7b],bh
  41adbe:	xchg   ecx,eax
  41adbf:	ror    dl,1
  41adc1:	fiadd  WORD PTR [edx+0x5e]
  41adc4:	push   esi
  41adc5:	pop    ecx
  41adc6:	or     BYTE PTR [edi+esi*2],dl
  41adc9:	scas   eax,DWORD PTR es:[edi]
  41adca:	xchg   ebx,eax
  41adcb:	aam    0x38
  41adcd:	loope  0x41ad51
  41adcf:	add    BYTE PTR [eax],dl
  41add1:	into   
  41add2:	mov    ecx,0xec1a3903
  41add7:	sahf   
  41add8:	sub    DWORD PTR [ecx-0x6b5cb9d0],0xffffffad
  41addf:	mov    ds:0x3ff17cff,al
  41ade4:	adc    BYTE PTR [edx],cl
  41ade6:	test   eax,0xcb36f846
  41adeb:	and    BYTE PTR [eax-0x63],0xa1
  41adef:	sub    al,0x13
  41adf1:	cmc    
  41adf2:	mov    eax,0x15fd87cd
  41adf7:	dec    ebx
  41adf8:	jne    0x41ad87
  41adfa:	ds cmp al,al
  41adfd:	mov    al,0xea
  41adff:	ins    BYTE PTR es:[edi],dx
  41ae00:	inc    edi
  41ae01:	ds jl  0x41ae00
  41ae04:	(bad)  
  41ae05:	(bad)  
  41ae06:	pop    esi
  41ae07:	sbb    al,cl
  41ae09:	cs cmp al,0xeb
  41ae0c:	push   eax
  41ae0d:	mov    bh,0xe8
  41ae0f:	or     edi,DWORD PTR fs:[edi+ecx*8-0x7fa1ba4d]
  41ae17:	mov    ecx,0x38870292
  41ae1c:	xchg   ebx,eax
  41ae1d:	js     0x41ae5e
  41ae1f:	test   eax,0x2dd3f738
  41ae24:	mov    al,0x17
  41ae26:	cmp    ecx,DWORD PTR [esi+eax*1]
  41ae29:	neg    DWORD PTR [edx+0x6698b8bf]
  41ae2f:	scas   eax,DWORD PTR es:[edi]
  41ae30:	lea    edi,[eax+edi*1+0x41]
  41ae34:	mov    eax,0xd2e48f17
  41ae39:	push   esi
  41ae3a:	or     eax,DWORD PTR [ebp-0x1f42aa18]
  41ae40:	sbb    BYTE PTR [eax+edi*1],al
  41ae43:	arpl   si,sp
  41ae45:	mov    ah,0xd4
  41ae47:	xchg   BYTE PTR [eax+0xb],bl
  41ae4a:	add    DWORD PTR [edi],edi
  41ae4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae4d:	pushf  
  41ae4e:	inc    DWORD PTR [ecx]
  41ae50:	sub    dl,ch
  41ae52:	lods   eax,DWORD PTR ds:[esi]
  41ae53:	test   ah,0xd2
  41ae56:	ret    
  41ae57:	imul   edx,DWORD PTR [eax+0x313144fc],0x62dd460e
  41ae61:	and    edi,DWORD PTR [eax+0x78617b3e]
  41ae67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae68:	jo     0x41ae46
  41ae6a:	int    0x61
  41ae6c:	pop    ebx
  41ae6d:	and    al,0x28
  41ae6f:	iret   
  41ae70:	vmread DWORD PTR [edx],ebp
  41ae73:	jmp    0xda38:0xd935544f
  41ae7a:	xchg   edi,eax
  41ae7b:	rol    BYTE PTR [esp+eiz*2],0x8e
  41ae7f:	pop    esi
  41ae80:	and    al,0x4d
  41ae82:	ror    BYTE PTR [ebx],cl
  41ae84:	call   0xe3b9:0xeca8f53a
  41ae8b:	call   0x50aa:0x5aaa2a4d
  41ae92:	or     BYTE PTR [ebp+ebp*2-0x69],dl
  41ae96:	pop    edx
  41ae97:	inc    ebp
  41ae98:	xchg   ebp,eax
  41ae99:	mov    dl,0xd2
  41ae9b:	jl     0x41ae57
  41ae9d:	lahf   
  41ae9e:	jl     0x41aea3
  41aea0:	lds    eax,FWORD PTR [ebx-0x7b]
  41aea3:	push   edx
  41aea4:	pop    edi
  41aea5:	push   edi
  41aea6:	adc    eax,DWORD PTR [ebx-0x28]
  41aea9:	sbb    BYTE PTR [esp+eax*1+0x1bb6e077],cl
  41aeb0:	inc    ebx
  41aeb1:	aaa    
  41aeb2:	mov    ebx,0x49392014
  41aeb7:	lahf   
  41aeb8:	add    dl,0x30
  41aebb:	aad    0x16
  41aebd:	or     eax,0xe86efd30
  41aec2:	bound  esi,QWORD PTR [edi+0x31fe19e0]
  41aec8:	inc    BYTE PTR ds:0x227e743a
  41aece:	mov    ebp,0xef261305
  41aed3:	mov    ds:0x16dbd02b,al
  41aed8:	cmp    bh,BYTE PTR [ecx+0x34d021e3]
  41aede:	lea    edx,[ebx-0x4]
  41aee1:	jecxz  0x41aeae
  41aee3:	dec    esi
  41aee4:	cmp    al,0x2
  41aee6:	in     eax,0x16
  41aee8:	mov    cl,0x46
  41aeea:	mov    edi,DWORD PTR [ebx-0x78]
  41aeed:	int    0x7b
  41aeef:	lds    ecx,FWORD PTR [ebp+0x55]
  41aef2:	cwde   
  41aef3:	(bad)  
  41aef4:	cmp    dl,ah
  41aef6:	push   esp
  41aef7:	cwde   
  41aef8:	add    DWORD PTR [eax-0x11],esi
  41aefb:	fiadd  DWORD PTR [ebx+0x430c224d]
  41af01:	jns    0x41af0a
  41af03:	xchg   edx,eax
  41af04:	leave  
  41af05:	fidiv  DWORD PTR [edi-0x69375b19]
  41af0b:	jmp    0x41ae96
  41af0d:	outs   dx,DWORD PTR ds:[esi]
  41af0e:	mov    edi,0x489f2eaf
  41af13:	je     0x41aebc
  41af15:	or     eax,esp
  41af17:	ins    DWORD PTR es:[edi],dx
  41af18:	jge    0x41aee1
  41af1a:	xor    BYTE PTR [esi+0x2d8dd95b],ah
  41af20:	retf   
  41af21:	jecxz  0x41af3b
  41af23:	mov    ecx,0xdabc5cb2
  41af28:	and    BYTE PTR [esi+0x387a6633],ah
  41af2e:	pop    ss
  41af2f:	fiadd  DWORD PTR ds:0x2f57f4d1
  41af35:	inc    ebx
  41af36:	shr    BYTE PTR [ebx-0x80],1
  41af39:	sbb    al,0xcc
  41af3b:	push   es
  41af3c:	xchg   esi,eax
  41af3d:	xor    al,0x4c
  41af3f:	fiadd  DWORD PTR [edx-0x29d57d50]
  41af45:	test   BYTE PTR [ebp+0x4a],ch
  41af48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af49:	sahf   
  41af4a:	cs loop 0x41aee0
  41af4d:	and    eax,DWORD PTR [ecx+0x250bad9f]
  41af53:	jg     0x41afd2
  41af55:	in     eax,dx
  41af56:	in     al,dx
  41af57:	dec    ecx
  41af58:	push   ds
  41af59:	stos   BYTE PTR es:[edi],al
  41af5a:	pop    ecx
  41af5b:	mov    bl,0xac
  41af5d:	rep lods al,BYTE PTR ds:[esi]
  41af5f:	and    dh,BYTE PTR [edi+0x6efd7e77]
  41af65:	add    al,0xba
  41af67:	enter  0x59cc,0x80
  41af6b:	cmp    BYTE PTR [ecx*2-0x34b6c0ca],cl
  41af72:	jns    0x41af66
  41af74:	dec    edi
  41af75:	(bad)
  41af79:	dec    ecx
  41af7a:	fnstsw WORD PTR [esi-0x42]
  41af7d:	pop    eax
  41af7e:	test   BYTE PTR [edx+0x7f9e8c68],cl
  41af84:	xchg   esp,eax
  41af85:	pop    ebp
  41af86:	in     eax,dx
  41af87:	mov    al,ds:0x4933abd7
  41af8c:	fsub   QWORD PTR [ecx-0x5]
  41af8f:	iret   
  41af90:	dec    eax
  41af91:	add    DWORD PTR [esi-0x6615142d],ebp
  41af97:	push   ebx
  41af98:	mov    ah,0xa3
  41af9a:	xor    bl,bh
  41af9c:	cli    
  41af9d:	add    ebp,DWORD PTR [edi-0x7cdb05c4]
  41afa3:	retf   
  41afa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afa5:	bswap  ecx
  41afa7:	in     eax,0xf8
  41afa9:	data16 mov dh,BYTE PTR [ecx]
  41afac:	mov    ecx,0xfd502ac7
  41afb1:	jg     0x41af7d
  41afb3:	mov    edx,0xc5a8738c
  41afb8:	or     eax,0x231c33c5
  41afbd:	jge    0x41afbb
  41afbf:	ss icebp 
  41afc1:	dec    esi
  41afc2:	pop    ecx
  41afc3:	popf   
  41afc4:	inc    esp
  41afc5:	ret    0xe417
  41afc8:	hlt    
  41afc9:	jmp    0x87bb0461
  41afce:	ret    
  41afcf:	out    dx,eax
  41afd0:	retf   0x25e8
  41afd3:	scas   eax,DWORD PTR es:[edi]
  41afd4:	mov    esp,0x32fc0613
  41afd9:	out    0xbe,al
  41afdb:	mov    BYTE PTR [esi-0x46],cl
  41afde:	adc    al,0x77
  41afe0:	mov    dh,0xf6
  41afe2:	fsubr  DWORD PTR [eax+0x5b]
  41afe5:	adc    eax,0x8cb0c958
  41afea:	sub    edi,DWORD PTR [edi-0xdc82fe3]
  41aff0:	inc    esp
  41aff1:	push   ds
  41aff2:	cwde   
  41aff3:	pop    esp
  41aff4:	mov    ds:0x290682fd,al
  41aff9:	cmp    eax,0xa17b86f6
  41affe:	fwait
  41afff:	or     bl,BYTE PTR [edi]
  41b001:	xor    al,0xbf
  41b003:	jge    0x41afaf
  41b005:	js     0x41b009
  41b007:	ret    0xe8ce
  41b00a:	cmp    al,0x9f
  41b00c:	xchg   ecx,eax
  41b00d:	iret   
  41b00e:	xchg   esi,eax
  41b00f:	leave  
  41b010:	lahf   
  41b011:	jg     0x41afde
  41b013:	sub    DWORD PTR [eax+0x20],esi
  41b016:	enter  0x71d2,0x6c
  41b01a:	in     eax,dx
  41b01b:	cld    
  41b01c:	fnsave [ebp+0x601f2e15]
  41b022:	xor    ecx,DWORD PTR [esi-0x600f91c9]
  41b028:	icebp  
  41b029:	cmp    DWORD PTR [edi],ecx
  41b02b:	in     eax,0x78
  41b02d:	aaa    
  41b02e:	idiv   DWORD PTR [edx+0x1d73ad24]
  41b034:	mov    eax,ds:0xf66f682b
  41b039:	or     BYTE PTR ds:0x159e1e6c,al
  41b03f:	xchg   ebx,eax
  41b040:	push   es
  41b041:	and    eax,0x48993b85
  41b046:	xchg   esi,eax
  41b047:	mov    ebx,0x62e1514d
  41b04c:	repnz lods eax,DWORD PTR ds:[esi]
  41b04e:	lds    esi,FWORD PTR [di-0x573a]
  41b053:	std    
  41b054:	push   0xffffff9a
  41b056:	xchg   ecx,eax
  41b057:	outs   dx,BYTE PTR gs:[esi]
  41b059:	pop    esi
  41b05a:	out    0x3c,al
  41b05c:	sbb    eax,esi
  41b05e:	sahf   
  41b05f:	in     al,0xfd
  41b061:	cmp    bh,dh
  41b063:	pop    ebp
  41b064:	nop
  41b065:	out    0x56,eax
  41b067:	mov    dh,0x79
  41b069:	ds push ss
  41b06b:	(bad)  
  41b06c:	xchg   esp,eax
  41b06d:	pushf  
  41b06e:	pop    ecx
  41b06f:	mov    bl,BYTE PTR [eax+edx*2+0x4f]
  41b073:	mov    db2,edx
  41b076:	dec    ebx
  41b077:	hlt    
  41b078:	(bad)
  41b07d:	loope  0x41b05f
  41b07f:	mov    cl,0x85
  41b081:	xchg   ebp,eax
  41b082:	hlt    
  41b083:	call   0x8190:0xdb1f23c
  41b08a:	and    DWORD PTR [ecx+ecx*8],eax
  41b08d:	xor    dh,BYTE PTR [eax-0x71]
  41b090:	add    eax,0x3d96c7f0
  41b095:	mov    ebp,0xb2316563
  41b09a:	cmp    esp,DWORD PTR [ecx+eax*8+0x1064e957]
  41b0a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0a2:	or     eax,0xb160cfdb
  41b0a7:	add    eax,0x4007d8db
  41b0ac:	fcmove st,st(7)
  41b0ae:	mov    al,0x51
  41b0b0:	into   
  41b0b1:	xlat   BYTE PTR ds:[ebx]
  41b0b2:	jno    0x41b12f
  41b0b4:	(bad)
  41b0b7:	adc    BYTE PTR [ecx-0x5ded31b1],0x9f
  41b0be:	mov    bl,0x37
  41b0c0:	mov    DWORD PTR [ecx-0x5e],eax
  41b0c3:	push   eax
  41b0c4:	mov    bh,0xce
  41b0c6:	(bad)  
  41b0c7:	outs   dx,DWORD PTR ds:[esi]
  41b0c8:	out    dx,eax
  41b0c9:	mov    dh,0x36
  41b0cb:	dec    edi
  41b0cc:	dec    edx
  41b0cd:	das    
  41b0ce:	dec    eax
  41b0cf:	leave  
  41b0d0:	loop   0x41b134
  41b0d2:	jnp    0x41b134
  41b0d4:	pop    ecx
  41b0d5:	inc    esp
  41b0d6:	loopne 0x41b0d9
  41b0d8:	pop    ebx
  41b0d9:	fmul   DWORD PTR [eax]
  41b0db:	sub    al,BYTE PTR ds:0x3c0be224
  41b0e1:	test   al,0x50
  41b0e3:	and    ebp,DWORD PTR [esi-0x3c17128d]
  41b0e9:	repnz outs dx,BYTE PTR ds:[esi]
  41b0ec:	inc    edi
  41b0ed:	xchg   ebp,eax
  41b0ee:	dec    esp
  41b0ef:	mov    eax,0x2ebad017
  41b0f4:	test   DWORD PTR [ebx-0x536f859],edx
  41b0fa:	stos   BYTE PTR es:[edi],al
  41b0fb:	aas    
  41b0fc:	inc    edx
  41b0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0fe:	fwait
  41b0ff:	inc    esp
  41b100:	cdq    
  41b101:	arpl   WORD PTR ds:[edx-0x28e11ec9],bp
  41b108:	pop    eax
  41b109:	retf   0x53f5
  41b10c:	dec    ebx
  41b10d:	xchg   ecx,eax
  41b10e:	inc    edi
  41b10f:	cmp    ch,0xd2
  41b112:	lahf   
  41b113:	shl    DWORD PTR [eax],0xe9
  41b116:	xchg   edi,eax
  41b117:	pushf  
  41b118:	daa    
  41b119:	xor    ecx,ebp
  41b11b:	pop    ebx
  41b11c:	jl     0x41b0ed
  41b11e:	inc    ebx
  41b11f:	(bad)  
  41b120:	pop    ss
  41b121:	daa    
  41b122:	pusha  
  41b123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b124:	sub    al,0x7c
  41b126:	push   ebx
  41b127:	jp     0x41b0e4
  41b129:	nop
  41b12a:	dec    ebp
  41b12b:	add    eax,0xf4f0d19f
  41b130:	cwde   
  41b131:	mov    edx,0x9d11b46e
  41b136:	or     eax,0x625b8add
  41b13b:	push   ebp
  41b13c:	mov    ds:0x15ac2f8b,eax
  41b141:	add    al,ch
  41b143:	(bad)  
  41b144:	cmc    
  41b145:	push   ds
  41b146:	push   esp
  41b147:	aad    0xf3
  41b149:	repz das 
  41b14b:	jno    0x41b159
  41b14d:	dec    eax
  41b14e:	dec    ebx
  41b14f:	jo     0x41b160
  41b151:	xchg   dh,ah
  41b153:	lea    ebx,[ebx+edi*4-0x1ab6d38f]
  41b15a:	adc    eax,0x7d20764
  41b15f:	sbb    eax,0xd8bcec5
  41b164:	ins    BYTE PTR es:[edi],dx
  41b165:	xchg   ebp,eax
  41b166:	push   eax
  41b167:	pop    edi
  41b168:	sbb    DWORD PTR [ecx+0x12],0xffffffad
  41b16c:	mov    ecx,eax
  41b16e:	mov    ah,BYTE PTR [ebp+eax*4-0x2a]
  41b172:	jae    0x41b1b6
  41b174:	fwait
  41b175:	rol    DWORD PTR [edx+0x6b1327c0],0x49
  41b17c:	outs   dx,BYTE PTR ds:[esi]
  41b17d:	jecxz  0x41b15c
  41b17f:	xchg   ebx,eax
  41b180:	jno    0x41b164
  41b182:	repz scas eax,DWORD PTR es:[edi]
  41b184:	mov    al,ds:0xb222e850
  41b189:	aad    0x37
  41b18b:	rcl    DWORD PTR [esi+0x4976d9a0],1
  41b191:	les    esi,FWORD PTR [edi+0x3e]
  41b194:	loope  0x41b1a4
  41b196:	xchg   esi,eax
  41b197:	iret   
  41b198:	lods   eax,DWORD PTR ds:[esi]
  41b199:	leave  
  41b19a:	sub    eax,0x80f68acd
  41b19f:	sbb    bh,BYTE PTR [esi+edi*4-0x7]
  41b1a3:	leave  
  41b1a4:	mov    BYTE PTR [eax+0x3d1cb09f],cl
  41b1aa:	data16 jbe 0x41b191
  41b1ad:	add    DWORD PTR [edi],ebp
  41b1af:	lahf   
  41b1b0:	jl     0x41b1ce
  41b1b2:	xchg   edx,eax
  41b1b3:	mov    ah,BYTE PTR [edi-0x4e6266bf]
  41b1b9:	(bad)  
  41b1bb:	fnstsw WORD PTR [edi]
  41b1bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1be:	mov    WORD PTR [ecx],?
  41b1c0:	(bad)  
  41b1c1:	call   0x1f52fdab
  41b1c6:	and    BYTE PTR [eax+0x4a439204],dl
  41b1cc:	mov    WORD PTR [ebx-0x7c],fs
  41b1cf:	jmp    0xf798:0x7cdfd575
  41b1d6:	out    dx,eax
  41b1d7:	(bad)
  41b1db:	push   DWORD PTR [esi]
  41b1dd:	shl    BYTE PTR [eax+0x17],cl
  41b1e0:	in     eax,dx
  41b1e1:	mov    al,0x51
  41b1e3:	lods   al,BYTE PTR ds:[esi]
  41b1e4:	push   ebx
  41b1e5:	push   edx
  41b1e6:	pop    ds
  41b1e7:	sbb    DWORD PTR ds:0xf1f6fc43,ebx
  41b1ed:	jae    0x41b19f
  41b1ef:	mov    ebx,0xa8308ad7
  41b1f4:	popa   
  41b1f5:	not    DWORD PTR [edi-0x576e152a]
  41b1fb:	and    al,0x6b
  41b1fd:	add    ah,bl
  41b1ff:	pop    esi
  41b200:	ja     0x41b1be
  41b202:	push   ebx
  41b203:	aad    0x47
  41b205:	call   0xd7a6fc57
  41b20a:	test   BYTE PTR [eax+eiz*8],0x30
  41b20e:	xor    DWORD PTR [edi-0x64f980d5],ebx
  41b214:	inc    edi
  41b215:	and    DWORD PTR [esp+eiz*2-0x26e9fd1e],esi
  41b21c:	rcl    BYTE PTR [ecx+edx*2-0x4d],0x8d
  41b221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b222:	test   BYTE PTR ds:0xb79320de,bh
  41b228:	add    BYTE PTR [esi+edi*2],0x68
  41b22c:	pop    edx
  41b22d:	sub    dl,BYTE PTR [edi+ecx*1-0x45c84768]
  41b234:	cmp    eax,0x133854ee
  41b239:	fld    TBYTE PTR [edi+0x33]
  41b23c:	loop   0x41b284
  41b23e:	std    
  41b23f:	or     DWORD PTR [ebx-0x46c4bebe],esi
  41b245:	push   es
  41b246:	push   esp
  41b247:	cli    
  41b248:	loope  0x41b210
  41b24a:	sub    DWORD PTR [ecx+0x140f877d],ebx
  41b250:	adc    eax,0x9a65c284
  41b255:	dec    esp
  41b256:	xor    eax,0xd7056b85
  41b25b:	popa   
  41b25c:	xchg   ebp,eax
  41b25d:	test   al,0x77
  41b25f:	repz fcom QWORD PTR [ecx+ebx*4+0x2743fd84]
  41b267:	add    DWORD PTR [ecx+0x52],0x64295d79
  41b26e:	mov    ebp,0xb5e2ae05
  41b273:	(bad)  
  41b274:	outs   dx,DWORD PTR ds:[esi]
  41b275:	pop    es
  41b276:	jmp    0xb1d72bb
  41b27b:	dec    edx
  41b27c:	mov    DWORD PTR [edx-0x42],esp
  41b27f:	into   
  41b280:	(bad)  
  41b281:	dec    ecx
  41b282:	bound  edi,QWORD PTR [ecx]
  41b284:	fwait
  41b285:	stos   DWORD PTR es:[edi],eax
  41b286:	add    BYTE PTR es:[ecx+0x44],dh
  41b28a:	xchg   esi,eax
  41b28b:	aad    0xad
  41b28d:	sub    eax,0x3f5385b1
  41b292:	inc    edi
  41b293:	push   eax
  41b294:	cwde   
  41b295:	stos   BYTE PTR es:[edi],al
  41b296:	dec    edx
  41b297:	ja     0x41b263
  41b299:	ss aam 0x6d
  41b29c:	xor    BYTE PTR [eax+0x3ca004da],0x5d
  41b2a3:	or     ebp,edi
  41b2a5:	pop    edx
  41b2a6:	xor    dl,BYTE PTR [ecx+0x77]
  41b2a9:	jl     0x41b30c
  41b2ab:	out    dx,eax
  41b2ac:	or     al,0x2a
  41b2ae:	dec    ebp
  41b2af:	sbb    BYTE PTR [ebx-0x50],0x91
  41b2b3:	call   0x3895:0xa3b572c7
  41b2ba:	add    edi,DWORD PTR [esi+edx*8]
  41b2bd:	(bad)  
  41b2bf:	or     al,0xdd
  41b2c1:	(bad)  
  41b2c3:	shl    DWORD PTR [ebp+0x13bd64c1],0xb9
  41b2ca:	mov    edx,0x666be18c
  41b2cf:	in     eax,0xd7
  41b2d1:	or     dh,BYTE PTR [ebx-0x5e19572]
  41b2d7:	and    BYTE PTR [ebp+edi*1+0x656c2dda],0xed
  41b2df:	imul   ecx,DWORD PTR [eax],0x33
  41b2e2:	fwait
  41b2e3:	and    al,0xfd
  41b2e5:	and    al,0x7b
  41b2e7:	sub    DWORD PTR [edi+0x3a3e22dc],esi
  41b2ed:	pop    edx
  41b2ee:	sbb    eax,0x8aba98b4
  41b2f3:	(bad)  
  41b2f4:	jmp    0x97a5:0x344d6eff
  41b2fb:	std    
  41b2fc:	adc    ebp,DWORD PTR [ebx]
  41b2fe:	and    BYTE PTR [ecx],dl
  41b300:	jns    0x41b31f
  41b302:	stc    
  41b303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b304:	dec    esi
  41b305:	data16 div dh
  41b308:	popf   
  41b309:	mov    ds:0x48624963,al
  41b30e:	fidivr WORD PTR [esi+0x49]
  41b311:	call   0x9c557004
  41b316:	jg     0x41b2d0
  41b318:	repnz lds ecx,FWORD PTR [ebp+0x22]
  41b31c:	push   edx
  41b31d:	inc    edi
  41b31e:	dec    ebx
  41b31f:	jl     0x41b303
  41b321:	xor    ecx,DWORD PTR [ebx+0x39]
  41b324:	iret   
  41b325:	cli    
  41b326:	retf   0x20b1
  41b329:	lods   eax,DWORD PTR ds:[esi]
  41b32a:	popf   
  41b32b:	push   0xefbaa4c8
  41b330:	out    0xfd,al
  41b332:	pop    es
  41b333:	in     al,dx
  41b334:	mov    DWORD PTR [ecx],edx
  41b336:	push   ebx
  41b337:	mov    edx,0xddb25497
  41b33c:	in     al,dx
  41b33d:	dec    BYTE PTR [edi+0x77a2a460]
  41b343:	fcmovnu st,st(4)
  41b345:	fwait
  41b346:	adc    al,0x50
  41b348:	pop    ebx
  41b349:	leave  
  41b34a:	push   ss
  41b34b:	adc    dl,0x85
  41b34e:	or     esp,DWORD PTR [edi+0x53cbd2ce]
  41b354:	repz mov dh,0x91
  41b357:	mov    al,ds:0x22a1ea90
  41b35c:	mov    ah,0x8f
  41b35e:	lahf   
  41b35f:	aad    0x8c
  41b361:	sub    ebx,DWORD PTR [esi]
  41b363:	imul   ebp,DWORD PTR [edi+eax*2+0x5bf325a6],0x15612dba
  41b36e:	int3   
  41b36f:	aad    0xb6
  41b371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b372:	pop    ebp
  41b373:	rcl    DWORD PTR [edi-0x1e510c87],cl
  41b379:	retf   0x668f
  41b37c:	adc    ah,ch
  41b37e:	sub    al,BYTE PTR [ebp-0x3b6a5348]
  41b384:	sub    DWORD PTR [ebx],edi
  41b386:	test   al,0x32
  41b388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b38a:	gs ja  0x41b3d9
  41b38d:	daa    
  41b38e:	jmp    0x4c34:0xd313cb90
  41b395:	add    eax,0x1daaba00
  41b39a:	out    0xdb,al
  41b39c:	pop    esp
  41b39d:	pop    ecx
  41b39e:	pop    edi
  41b39f:	jmp    0x41b3a1
  41b3a1:	dec    esp
  41b3a2:	push   edx
  41b3a3:	mov    esi,0x50b2a384
  41b3a8:	popa   
  41b3a9:	in     al,dx
  41b3aa:	pusha  
  41b3ab:	adc    al,0xa0
  41b3ad:	push   ecx
  41b3ae:	or     esp,DWORD PTR ds:0x2a1287be
  41b3b4:	push   ebx
  41b3b5:	inc    ecx
  41b3b6:	xor    DWORD PTR [ebx-0x186457fa],0x9c58ab96
  41b3c0:	mov    bl,0xe8
  41b3c2:	das    
  41b3c3:	jns    0x41b40c
  41b3c5:	cmp    bh,ah
  41b3c7:	fwait
  41b3c8:	mov    gs,esp
  41b3ca:	mov    dl,0xa2
  41b3cc:	mov    ebp,0xdeb223e
  41b3d1:	inc    ebp
  41b3d2:	cs jnp 0x41b3f7
  41b3d5:	mov    edi,0x5ed20e0c
  41b3da:	ret    
  41b3db:	jo     0x41b3f0
  41b3dd:	push   esp
  41b3de:	out    dx,al
  41b3df:	add    BYTE PTR [edx+0x1944ae84],bl
  41b3e5:	jne    0x41b43b
  41b3e7:	fnstsw WORD PTR [eax-0x27370a05]
  41b3ed:	in     al,0x1b
  41b3ef:	icebp  
  41b3f0:	jnp    0x41b37b
  41b3f2:	mov    gs,WORD PTR [ecx+0x4d811d27]
  41b3f8:	bound  ebx,QWORD PTR [ebx-0x5]
  41b3fb:	xlat   BYTE PTR ds:[ebx]
  41b3fd:	or     DWORD PTR [ecx],edi
  41b3ff:	(bad)  
  41b401:	or     DWORD PTR es:[eax+0x561b40c6],ecx
  41b408:	mov    ds:0xbdcffd18,eax
  41b40d:	and    al,BYTE PTR [edx]
  41b40f:	mov    eax,ds:0x10fe6f58
  41b414:	xchg   DWORD PTR [edi+0x2e4c527],ebx
  41b41a:	je     0x41b476
  41b41c:	mov    cl,BYTE PTR [ebx]
  41b41e:	jge    0x41b3a1
  41b420:	ja     0x41b44f
  41b422:	lahf   
  41b423:	inc    ebp
  41b424:	xor    DWORD PTR [esp+ebp*1+0x274d49b2],edx
  41b42b:	xlat   BYTE PTR ds:[ebx]
  41b42c:	mov    ebp,0x463c9324
  41b431:	mov    eax,0xb52c1e55
  41b436:	out    0x16,al
  41b438:	sar    BYTE PTR [ecx+0x4df49ff9],cl
  41b43e:	dec    ebp
  41b43f:	shl    bl,0xbb
  41b442:	ja     0x41b3fa
  41b444:	and    bh,BYTE PTR [ecx-0x3299c23c]
  41b44a:	cwde   
  41b44b:	dec    esp
  41b44c:	stos   DWORD PTR es:[edi],eax
  41b44d:	sbb    BYTE PTR [ecx],dh
  41b44f:	xor    DWORD PTR [ecx+edx*4+0x269b200b],edx
  41b456:	lods   eax,DWORD PTR ds:[esi]
  41b457:	jmp    0x41b3e7
  41b459:	icebp  
  41b45a:	xchg   BYTE PTR [eax],ah
  41b45c:	imul   edx,DWORD PTR [ecx+0x7d],0x6e
  41b460:	das    
  41b461:	(bad)  
  41b463:	nop
  41b464:	xchg   ecx,eax
  41b465:	xchg   ecx,eax
  41b466:	add    BYTE PTR [esi-0x71],dl
  41b469:	ins    BYTE PTR es:[edi],dx
  41b46a:	push   esi
  41b46b:	sub    DWORD PTR [ebx+ebx*8],0xd74f62f3
  41b472:	nop
  41b473:	fdiv   DWORD PTR [edi+0x664d6668]
  41b479:	cwde   
  41b47a:	das    
  41b47b:	aas    
  41b47c:	pop    esi
  41b47d:	cli    
  41b47e:	jne    0x41b49c
  41b480:	lea    esi,[ecx+0xa]
  41b483:	pushf  
  41b484:	push   esi
  41b485:	or     eax,0xc4b52bf8
  41b48a:	(bad)  
  41b48c:	jge    0x41b502
  41b48e:	sti    
  41b48f:	out    0x61,eax
  41b491:	addr16 pop ecx
  41b493:	enter  0xfd10,0x89
  41b497:	dec    esi
  41b498:	(bad)  
  41b499:	sbb    al,0xf1
  41b49b:	ss push edi
  41b49d:	scas   eax,DWORD PTR es:[edi]
  41b49e:	sahf   
  41b49f:	mov    eax,ds:0x6984b379
  41b4a4:	ret    0x2e68
  41b4a7:	(bad)  
  41b4a8:	retf   
  41b4a9:	inc    ecx
  41b4aa:	push   eax
  41b4ab:	daa    
  41b4ac:	inc    esp
  41b4ad:	adc    BYTE PTR [ecx],ah
  41b4af:	hlt    
  41b4b0:	mov    edi,0xbc69b88c
  41b4b5:	mov    bl,dh
  41b4b7:	add    esi,edx
  41b4b9:	aad    0xc9
  41b4bb:	fld    QWORD PTR [edi]
  41b4bd:	mov    ebx,0xf1a096f1
  41b4c2:	daa    
  41b4c3:	lock xor al,0xea
  41b4c6:	push   ds
  41b4c7:	push   ds
  41b4c8:	sahf   
  41b4c9:	arpl   WORD PTR [eax+0x2c],bx
  41b4cc:	test   BYTE PTR [eax-0x5a],0xce
  41b4d0:	dec    ecx
  41b4d1:	pusha  
  41b4d2:	in     al,dx
  41b4d3:	dec    edx
  41b4d5:	xchg   esp,eax
  41b4d6:	les    esi,FWORD PTR [eax-0x34]
  41b4d9:	mov    edi,0x4d49eb2e
  41b4de:	add    ebx,DWORD PTR [ebp+0x50b4d9f0]
  41b4e4:	rcl    BYTE PTR [eax],cl
  41b4e6:	xchg   ecx,eax
  41b4e7:	retf   
  41b4e8:	das    
  41b4e9:	mov    esi,0xd2e97f3c
  41b4ee:	int3   
  41b4ef:	push   0x75070c29
  41b4f4:	jmp    0x41b570
  41b4f6:	jo     0x41b518
  41b4f8:	in     eax,0x43
  41b4fa:	jmp    0xc0fce846
  41b4ff:	(bad)  
  41b500:	mov    ds,WORD PTR [ebx+0x68]
  41b503:	jb     0x41b49f
  41b505:	mov    ds:0xb82b18a6,al
  41b50a:	push   0x920ec081
  41b50f:	bound  ebp,QWORD PTR [ebp-0x2e48befc]
  41b515:	add    eax,0xcb102a8e
  41b51a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b51b:	fs pop ecx
  41b51d:	inc    edi
  41b51e:	sbb    al,0xc
  41b520:	xor    esp,DWORD PTR [eax]
  41b522:	add    BYTE PTR [ebx],al
  41b524:	pop    edi
  41b525:	or     al,0x85
  41b527:	ds dec esi
  41b529:	lods   eax,DWORD PTR ds:[esi]
  41b52a:	pushf  
  41b52b:	inc    esi
  41b52c:	push   esp
  41b52d:	add    al,0xaf
  41b52f:	adc    al,0xaf
  41b531:	fstp   DWORD PTR [eax+eax*1+0xc]
  41b535:	xchg   ebx,eax
  41b536:	push   ds
  41b537:	jge    0x41b587
  41b539:	adc    BYTE PTR [ebx+0x59e54e00],bh
  41b53f:	mov    ebp,0x9f5a471f
  41b544:	sti    
  41b545:	inc    edx
  41b546:	lds    ecx,FWORD PTR [ecx-0x7c2d477d]
  41b54c:	or     esp,DWORD PTR [ecx-0x193bef28]
  41b552:	fnstsw WORD PTR [eax+eiz*8-0x2c]
  41b556:	sub    ecx,edx
  41b558:	loopne 0x41b4e1
  41b55a:	enter  0xaa52,0x49
  41b55e:	mov    edx,0x9bcf6c85
  41b563:	into   
  41b564:	aam    0xc4
  41b566:	or     al,0xd1
  41b568:	sub    esi,DWORD PTR [edi]
  41b56a:	sub    DWORD PTR [ecx+0x401d0cb4],esp
  41b570:	or     edi,edx
  41b572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b573:	sbb    al,0xd8
  41b575:	mov    esi,0x746446bc
  41b57a:	dec    ebx
  41b57b:	and    DWORD PTR [eax+0x11c4b732],esi
  41b581:	mov    BYTE PTR [ebx-0x14457b66],cl
  41b587:	sbb    BYTE PTR [eax+0x64429c10],bh
  41b58d:	sbb    eax,0xfdd00b4d
  41b592:	and    BYTE PTR [ebx+0x2f],dh
  41b595:	push   eax
  41b596:	in     eax,dx
  41b597:	shl    BYTE PTR ds:0x8a6f871d,cl
  41b59d:	sub    al,0xad
  41b59f:	gs dec ebx
  41b5a1:	sbb    al,0xb9
  41b5a3:	inc    ebp
  41b5a4:	inc    ebx
  41b5a5:	inc    ecx
  41b5a6:	add    eax,0xda6afefd
  41b5ab:	call   0x3792d52e
  41b5b0:	mov    eax,ds:0xb4ec9582
  41b5b5:	jno    0x41b5e1
  41b5b7:	fimul  WORD PTR [ebx+0x3bc55867]
  41b5bd:	mul    BYTE PTR [ecx]
  41b5bf:	cmp    al,cl
  41b5c1:	add    al,0xb2
  41b5c3:	jecxz  0x41b62f
  41b5c5:	(bad)  
  41b5c7:	mov    bl,0xf1
  41b5c9:	leave  
  41b5ca:	fdivp  st(3),st
  41b5cc:	jmp    0x4e56c9cb
  41b5d1:	add    al,0xa3
  41b5d3:	nop
  41b5d4:	xor    al,ah
  41b5d6:	sub    eax,0xbd04434
  41b5db:	pusha  
  41b5dc:	mov    ecx,DWORD PTR [eax]
  41b5de:	stos   DWORD PTR es:[edi],eax
  41b5df:	fucomip st,st(6)
  41b5e1:	inc    edx
  41b5e2:	mov    ecx,0x7b45b2d9
  41b5e7:	imul   eax,DWORD PTR [eax-0x243a4992],0xa4c7511a
  41b5f1:	je     0x41b602
  41b5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5f4:	data16 xor al,0xe
  41b5f7:	mov    ds:0xeb8ebcaf,eax
  41b5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5fd:	xor    BYTE PTR [ebx+0xb],ah
  41b600:	sub    ebx,DWORD PTR [ebx]
  41b602:	ja     0x41b5a4
  41b604:	jae    0x41b627
  41b606:	(bad)  
  41b607:	retf   0x9a42
  41b60a:	loop   0x41b676
  41b60c:	sub    ecx,DWORD PTR [esi]
  41b60e:	ret    
  41b60f:	enter  0x98cc,0xa0
  41b613:	sbb    edx,0xffffffe9
  41b616:	jo     0x41b5be
  41b618:	loopne 0x41b5da
  41b61a:	lods   eax,DWORD PTR ds:[esi]
  41b61b:	mov    ebx,0xbeadb211
  41b620:	aas    
  41b621:	ret    0x8613
  41b624:	mov    edi,0x2e1941fd
  41b629:	mov    ?,edx
  41b62b:	ds js  0x41b669
  41b62e:	inc    ebx
  41b62f:	pop    ebx
  41b630:	or     eax,0xe6d82d4d
  41b635:	pop    ebx
  41b636:	jae    0x41b6a8
  41b638:	rcr    ebx,0x4
  41b63b:	addr16 mov ds:0x975d,eax
  41b63f:	sub    ah,BYTE PTR [eax]
  41b641:	jp     0x41b6b4
  41b643:	ins    BYTE PTR es:[edi],dx
  41b644:	and    al,dl
  41b646:	jle    0x41b5ee
  41b648:	dec    edi
  41b649:	mov    WORD PTR [esp+esi*1-0x3c947e0],ds
  41b650:	adc    al,0xc1
  41b652:	or     BYTE PTR [eax],0x5f
  41b655:	cmp    DWORD PTR [edx],edx
  41b657:	call   0x818395b4
  41b65c:	cmp    eax,0x1ef1f609
  41b661:	jecxz  0x41b6c3
  41b663:	add    ebx,DWORD PTR [ebp*2+0x2d6e5766]
  41b66a:	call   0x9cf47ad7
  41b66f:	mov    esi,0xad7cdbb2
  41b674:	test   BYTE PTR [edx+edi*1+0x1e],0x9b
  41b679:	add    ebp,DWORD PTR [eax+ecx*2-0x21529cea]
  41b680:	push   esp
  41b681:	test   eax,0x701dae1b
  41b686:	sahf   
  41b687:	mov    edx,0xeebaf941
  41b68c:	add    edi,esp
  41b68e:	ret    
  41b68f:	mov    ds:0x541b8ec7,eax
  41b694:	and    ch,BYTE PTR [eax-0x18]
  41b697:	push   edx
  41b698:	stos   DWORD PTR es:[edi],eax
  41b699:	hlt    
  41b69a:	nop
  41b69b:	out    0x51,al
  41b69d:	icebp  
  41b69e:	mov    ds:0x60ab60f3,al
  41b6a3:	mov    eax,0x1aa03428
  41b6a8:	jmp    0xc161:0xf4c82dfa
  41b6af:	std    
  41b6b0:	mov    eax,0x76276ec1
  41b6b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6b6:	fyl2xp1 
  41b6b8:	sti    
  41b6b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6ba:	daa    
  41b6bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6bc:	mov    edx,0x57a05c60
  41b6c1:	jl     0x41b73c
  41b6c3:	xor    bh,al
  41b6c5:	out    0x7,al
  41b6c7:	push   ebp
  41b6c8:	mov    eax,ds:0xd9ff733
  41b6cd:	push   edi
  41b6ce:	test   al,0x80
  41b6d0:	mov    gs,WORD PTR [edi-0x51db864c]
  41b6d6:	or     BYTE PTR [ecx+0x2b65b744],bh
  41b6dc:	int3   
  41b6dd:	push   ecx
  41b6de:	mov    DWORD PTR [edx-0x2e],edi
  41b6e1:	repz mov esp,0x50092f68
  41b6e7:	pop    ebp
  41b6e8:	push   0xe6551080
  41b6ed:	jge    0x41b6f4
  41b6ef:	ds pop eax
  41b6f1:	add    ecx,DWORD PTR [ebx]
  41b6f3:	fcomi  st,st(5)
  41b6f5:	fcmovu st,st(3)
  41b6f7:	add    BYTE PTR ds:0xce61eda3,0xf6
  41b6fe:	sbb    dh,ah
  41b700:	clc    
  41b701:	mov    cl,0x48
  41b703:	mov    esi,0x5793c2ce
  41b708:	mov    edi,0x73f0f00c
  41b70d:	loop   0x41b757
  41b70f:	stos   BYTE PTR es:[edi],al
  41b710:	mov    al,0x9f
  41b712:	pusha  
  41b713:	rcr    BYTE PTR [ebp+0x557f7611],cl
  41b719:	jecxz  0x41b798
  41b71b:	sub    BYTE PTR [esi-0x4876fb09],bh
  41b721:	das    
  41b722:	cmp    al,0xc2
  41b724:	(bad)  
  41b725:	ficom  WORD PTR [ebx-0x3c]
  41b728:	sub    BYTE PTR [ebp-0x5a],0x34
  41b72c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b72d:	or     ebp,eax
  41b72f:	gs cli 
  41b731:	adc    DWORD PTR [ebx],esp
  41b733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b734:	inc    ecx
  41b735:	ins    DWORD PTR es:[edi],dx
  41b736:	pop    eax
  41b737:	sbb    bl,0xbe
  41b73a:	(bad)  
  41b73b:	jmp    0xbf8d4ae4
  41b740:	outs   dx,DWORD PTR ds:[esi]
  41b741:	ss pop edx
  41b743:	sbb    al,0xa5
  41b745:	jg     0x41b774
  41b747:	(bad)  
  41b748:	mov    esp,0xf2ac43d7
  41b74d:	pop    esp
  41b74f:	push   esp
  41b750:	jae    0x41b7cb
  41b752:	cmc    
  41b753:	sbb    dl,BYTE PTR [ebx-0x19]
  41b756:	push   ss
  41b757:	fnstcw WORD PTR [ebx-0x110cc25c]
  41b75d:	push   eax
  41b75e:	sub    DWORD PTR [ecx],ecx
  41b760:	sbb    eax,0xc68aedb6
  41b765:	xchg   edx,eax
  41b766:	idiv   DWORD PTR [eax+eiz*2]
  41b769:	inc    esi
  41b76a:	mov    ds:0xb81be878,eax
  41b76f:	retf   0x8787
  41b772:	enter  0x27b7,0xf3
  41b776:	push   ebx
  41b777:	inc    esi
  41b778:	pop    ds
  41b779:	mov    DWORD PTR [eax+0x4cb957f4],ebx
  41b77f:	mov    al,bl
  41b781:	jge    0x41b74e
  41b783:	popf   
  41b784:	ror    DWORD PTR [edi],1
  41b786:	xchg   BYTE PTR [esi+0x72],dh
  41b789:	xor    ecx,DWORD PTR [ebp-0x2c]
  41b78c:	push   ebx
  41b78d:	xor    DWORD PTR [edi],esp
  41b78f:	jmp    0xb20f:0x826ae492
  41b796:	inc    edi
  41b797:	out    0x48,al
  41b799:	lds    ebp,FWORD PTR [edx-0x7c]
  41b79c:	lahf   
  41b79d:	and    eax,0x6c8d9eef
  41b7a2:	add    al,BYTE PTR [ecx+0x34]
  41b7a5:	xchg   edi,eax
  41b7a6:	mov    esp,0x8d39b10d
  41b7ab:	sbb    al,0xbf
  41b7ad:	daa    
  41b7ae:	in     eax,0x2
  41b7b0:	(bad)  
  41b7b1:	mov    esp,cs
  41b7b3:	and    eax,0x871ef600
  41b7b8:	pushf  
  41b7b9:	jg     0x41b7fe
  41b7bb:	ret    0xc10a
  41b7be:	lahf   
  41b7bf:	mov    ds:0x7c6419e1,al
  41b7c4:	loope  0x41b756
  41b7c6:	stos   DWORD PTR es:[edi],eax
  41b7c7:	gs out 0xdc,al
  41b7ca:	int3   
  41b7cb:	xlat   BYTE PTR ds:[ebx]
  41b7cc:	shl    eax,0x5a
  41b7cf:	loop   0x41b765
  41b7d1:	and    eax,0x22291697
  41b7d6:	mov    al,ds:0x90312111
  41b7db:	jg     0x41b776
  41b7dd:	lods   eax,DWORD PTR ds:[esi]
  41b7de:	into   
  41b7df:	xor    bl,ch
  41b7e1:	inc    esp
  41b7e2:	jp     0x41b7ef
  41b7e4:	cli    
  41b7e5:	rol    BYTE PTR [ebx],0x88
  41b7e8:	and    edx,DWORD PTR [ebx-0x34]
  41b7eb:	lock jecxz 0x41b7c0
  41b7ee:	jb     0x41b79d
  41b7f0:	imul   edi,DWORD PTR [edi],0x7a673903
  41b7f6:	adc    eax,0xd4a27d45
  41b7fb:	adc    bh,BYTE PTR [esi+0x36c07cad]
  41b801:	(bad)  
  41b802:	cmp    dh,BYTE PTR [edx]
  41b804:	scas   al,BYTE PTR es:[edi]
  41b805:	retf   
  41b806:	(bad)  
  41b807:	neg    eax
  41b809:	ss leave 
  41b80b:	scas   al,BYTE PTR es:[edi]
  41b80c:	ins    DWORD PTR es:[edi],dx
  41b80d:	jmp    0x5fb3873c
  41b812:	(bad)  
  41b813:	xchg   ecx,eax
  41b814:	stos   DWORD PTR es:[edi],eax
  41b815:	add    eax,0x6ce1b43c
  41b81a:	sbb    BYTE PTR [ebx+0x5fdebd08],bl
  41b820:	push   edx
  41b821:	push   ecx
  41b822:	or     eax,0x7c0fbe9d
  41b827:	adc    bl,bl
  41b829:	push   eax
  41b82a:	jnp    0x41b825
  41b82c:	js     0x41b853
  41b82e:	movntq QWORD PTR [ebx-0xfc42479],mm5
  41b835:	sub    al,0x2a
  41b837:	sub    esp,ebp
  41b839:	(bad)  [edx]
  41b83b:	jo     0x41b813
  41b83d:	sbb    BYTE PTR [edx-0x5b],al
  41b840:	stos   DWORD PTR es:[edi],eax
  41b841:	cmp    esp,ebx
  41b843:	cmp    eax,0x782ba012
  41b848:	mov    edx,0x90ac7547
  41b84d:	xchg   BYTE PTR [esi-0x6e],ch
  41b850:	arpl   WORD PTR [edi+0x6a9e0e4f],bp
  41b856:	jmp    0x1612e9a2
  41b85b:	fld    TBYTE PTR [edx]
  41b85d:	mov    esp,0x841b1b3a
  41b862:	push   0xf2859d7d
  41b867:	out    dx,eax
  41b868:	cmp    al,0xff
  41b86a:	daa    
  41b86b:	out    dx,al
  41b86c:	fiadd  DWORD PTR [edi+0x24c85a6]
  41b872:	push   ss
  41b873:	in     eax,0x98
  41b875:	out    0xd5,eax
  41b877:	xor    al,0x5e
  41b879:	mov    esp,DWORD PTR [eax]
  41b87b:	pop    ss
  41b87c:	repz ss dec ecx
  41b87f:	jg     0x41b8e6
  41b881:	scas   eax,DWORD PTR es:[edi]
  41b882:	dec    ebx
  41b883:	test   DWORD PTR [ebx],ecx
  41b885:	imul   ebp,DWORD PTR [ecx+edx*4+0xe72d85b],0x206c61f0
  41b890:	enter  0xf959,0x94
  41b894:	cmp    BYTE PTR ds:0x46fff8c3,dh
  41b89a:	push   ds
  41b89b:	push   edx
  41b89c:	ins    BYTE PTR es:[edi],dx
  41b89d:	mov    esp,0x1f3f2592
  41b8a2:	daa    
  41b8a3:	add    al,dl
  41b8a5:	fisttp DWORD PTR [edx+0x21d9ea09]
  41b8ab:	stos   BYTE PTR es:[edi],al
  41b8ac:	mov    ds:0xd6aeef13,eax
  41b8b1:	inc    esi
  41b8b2:	mov    DWORD PTR [ebp+edx*8-0x46b9ffce],esp
  41b8b9:	dec    ebx
  41b8ba:	gs push ds
  41b8bc:	ins    DWORD PTR es:[edi],dx
  41b8bd:	lds    edi,FWORD PTR [ebp+0x750192f2]
  41b8c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8c4:	ret    
  41b8c5:	out    dx,eax
  41b8c6:	daa    
  41b8c7:	dec    ebx
  41b8c8:	inc    ebx
  41b8c9:	test   BYTE PTR [eax+0x50],bh
  41b8cc:	push   eax
  41b8cd:	int3   
  41b8ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8cf:	xor    eax,0x44e08663
  41b8d4:	scas   al,BYTE PTR es:[edi]
  41b8d5:	data16 out dx,al
  41b8d7:	push   esp
  41b8d8:	leave  
  41b8d9:	test   BYTE PTR [ebx-0x6b],cl
  41b8dc:	jmp    0x585e:0x517fe437
  41b8e3:	stos   BYTE PTR es:[edi],al
  41b8e4:	mov    dh,0x93
  41b8e6:	and    eax,0x4a058974
  41b8eb:	aad    0xa4
  41b8ed:	mov    ebx,0xc4531fa6
  41b8f2:	frstor [eax+0x354d5f67]
  41b8f8:	pop    ebx
  41b8f9:	out    dx,eax
  41b8fa:	sub    bh,0xd0
  41b8fd:	ficomp WORD PTR ss:[edi-0x2bc4e222]
  41b904:	cmp    dl,BYTE PTR [eax+0x49]
  41b907:	pusha  
  41b908:	test   al,0xe9
  41b90a:	dec    ecx
  41b90b:	out    0xef,eax
  41b90d:	mov    DWORD PTR [edi-0x2b],ebp
  41b910:	dec    edx
  41b911:	cwde   
  41b912:	add    eax,0x81f362d6
  41b917:	dec    esi
  41b918:	mov    cl,0x3d
  41b91a:	fdivr  QWORD PTR [ecx]
  41b91c:	dec    esp
  41b91d:	jo     0x41b927
  41b91f:	jno    0x41b982
  41b921:	imul   edi,eax,0x2d5392b7
  41b927:	push   es
  41b928:	jmp    0x41b8fc
  41b92a:	push   ecx
  41b92b:	rcr    esp,0xaa
  41b92e:	aad    0x25
  41b930:	mov    ebp,0x9d5bbdc8
  41b935:	mov    ecx,0x861d01eb
  41b93a:	(bad)  
  41b93c:	call   0x7ceb0c55
  41b941:	jl     0x41b98b
  41b943:	test   eax,0x906eb5dd
  41b948:	push   edx
  41b949:	aam    0xb0
  41b94b:	loop   0x41b9ae
  41b94d:	test   al,0x72
  41b94f:	push   ebx
  41b950:	sbb    DWORD PTR [ebp+0x7e],edi
  41b953:	mov    esi,0x77496668
  41b958:	not    BYTE PTR [eax]
  41b95a:	mov    ds:0xd46b8f0e,eax
  41b95f:	and    ecx,DWORD PTR [ebp-0x753da80b]
  41b965:	fwait
  41b966:	sar    ecx,cl
  41b968:	jns    0x41b97c
  41b96a:	jne    0x41b9bf
  41b96c:	sub    esi,ebx
  41b96e:	shr    DWORD PTR [ecx+0x21e1ab2f],1
  41b974:	mov    edi,edx
  41b976:	xor    al,0x8e
  41b978:	call   0xdda3246f
  41b97d:	sub    al,0x3a
  41b97f:	adc    eax,0xb1d48bb
  41b984:	loopne 0x41b940
  41b986:	ja     0x41b990
  41b988:	or     edx,DWORD PTR [ebp-0x634d131a]
  41b98e:	nop
  41b98f:	aam    0xd0
  41b991:	das    
  41b992:	xchg   dl,bh
  41b994:	xchg   ebp,eax
  41b996:	sub    al,0x6a
  41b998:	clc    
  41b999:	iret   
  41b99a:	sub    ch,BYTE PTR ds:0xd99cb6f0
  41b9a0:	jns    0x41b9cd
  41b9a2:	cmc    
  41b9a3:	xchg   ecx,eax
  41b9a4:	lea    ecx,[esp+esi*4]
  41b9a7:	sub    eax,0xadab44e7
  41b9ac:	imul   edi,esp,0x5a
  41b9af:	out    dx,eax
  41b9b0:	repz retf 
  41b9b2:	les    esi,FWORD PTR [ebp+0x6e255dea]
  41b9b8:	mov    dh,bh
  41b9ba:	jb     0x41b954
  41b9bc:	jp     0x41ba37
  41b9be:	mov    esi,0xcc6f8f8
  41b9c3:	add    bl,BYTE PTR ds:0xe16be242
  41b9c9:	xor    BYTE PTR [ebp*4-0x7c113818],dh
  41b9d0:	dec    ecx
  41b9d1:	dec    edi
  41b9d2:	inc    ebx
  41b9d3:	mov    ebx,0x6f21d070
  41b9d8:	call   0x1b78:0xeac2bc56
  41b9df:	(bad)  
  41b9e0:	adc    al,0x2d
  41b9e2:	mov    ecx,0x2a9bee7f
  41b9e7:	sub    edx,esp
  41b9e9:	call   0xfe1:0x925ad0f6
  41b9f0:	es sti 
  41b9f2:	fisttp WORD PTR [edx]
  41b9f4:	jno    0x41ba41
  41b9f6:	inc    edi
  41b9f7:	cli    
  41b9f8:	cmp    al,0xa1
  41b9fa:	push   0xffffffa1
  41b9fc:	mov    bl,0xee
  41b9fe:	test   eax,0x47b3fc35
  41ba03:	xchg   BYTE PTR [ebp+eax*4+0x26161541],al
  41ba0a:	mov    ebx,0x7fa5536e
  41ba0f:	xchg   ebp,eax
  41ba10:	ins    BYTE PTR es:[edi],dx
  41ba11:	pop    edi
  41ba12:	add    eax,0xdb7794b2
  41ba17:	std    
  41ba18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba19:	rol    DWORD PTR [eax-0x3c],cl
  41ba1c:	or     eax,0x41272425
  41ba21:	cmp    DWORD PTR [esp+esi*8-0x7819f09b],esp
  41ba28:	fwait
  41ba29:	jnp    0x41baa5
  41ba2b:	out    dx,eax
  41ba2c:	sbb    al,0x45
  41ba2e:	scas   eax,DWORD PTR es:[edi]
  41ba2f:	jnp    0x41ba02
  41ba31:	adc    eax,DWORD PTR ds:0x59a7ea9b
  41ba37:	inc    edx
  41ba38:	or     edi,DWORD PTR [ecx]
  41ba3a:	cmp    DWORD PTR [edx+0x4eedf4f4],eax
  41ba40:	loopne 0x41b9d8
  41ba42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba43:	test   edi,eax
  41ba45:	shl    DWORD PTR [eax+0x36],0x3b
  41ba49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba4a:	imul   ebp,ebp,0x35c5b8ea
  41ba50:	jmp    0xbd07e443
  41ba55:	les    ebp,FWORD PTR [edx]
  41ba57:	popa   
  41ba58:	fidivr WORD PTR [esi-0x71a5852c]
  41ba5e:	ins    BYTE PTR es:[edi],dx
  41ba5f:	push   esi
  41ba60:	sti    
  41ba61:	push   eax
  41ba62:	jp     0x41ba9a
  41ba64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba65:	pop    ss
  41ba66:	pop    ds
  41ba67:	repnz cmp BYTE PTR [edx],bh
  41ba6a:	imul   ecx,edx,0xffffffdc
  41ba6d:	xchg   esi,eax
  41ba6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba70:	mov    DWORD PTR [ebx],edx
  41ba72:	jmp    0x41ba5c
  41ba74:	sub    edi,DWORD PTR [ecx+0x2e]
  41ba77:	imul   ebx,DWORD PTR [ecx-0x50124de8],0xffffffd7
  41ba7e:	test   al,0xab
  41ba80:	mov    ecx,0xa6ddd17
  41ba85:	push   ebp
  41ba86:	sbb    eax,0xe01a848b
  41ba8b:	cmp    BYTE PTR [ecx-0x5624cd03],ch
  41ba91:	adc    bh,bh
  41ba93:	and    dl,ah
  41ba95:	(bad)  
  41ba96:	mov    bh,0x4b
  41ba98:	cs popf 
  41ba9a:	mov    esp,0x9a680a6e
  41ba9f:	cmp    esp,ebp
  41baa1:	xchg   edi,eax
  41baa2:	add    edi,ebp
  41baa4:	or     bh,BYTE PTR [ebx-0x5b86fc3d]
  41baaa:	and    al,BYTE PTR [eax]
  41baac:	mov    dh,0xef
  41baae:	cmp    bh,BYTE PTR [ebx+0x50908a3b]
  41bab4:	mov    al,0xab
  41bab6:	lods   eax,DWORD PTR ds:[esi]
  41bab7:	adc    esi,0x7ae15ee7
  41babd:	push   eax
  41babe:	(bad)
  41bac1:	mov    edx,0x17cbe69e
  41bac6:	out    dx,al
  41bac7:	sbb    al,bh
  41bac9:	jo     0x41bb0d
  41bacb:	ins    BYTE PTR es:[edi],dx
  41bacc:	outs   dx,BYTE PTR ds:[esi]
  41bacd:	int3   
  41bace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bacf:	mov    ebp,0x9ce1d365
  41bad4:	jmp    0x41bacd
  41bad6:	ret    
  41bad7:	fmul   st(1),st
  41bad9:	ss mov dh,0x2a
  41badc:	into   
  41badd:	mov    ss,WORD PTR [eax]
  41badf:	mov    bl,0xfc
  41bae1:	mov    eax,0x4c84532d
  41bae6:	xchg   edi,eax
  41bae7:	jmp    0xd3be:0xd9e60a7a
  41baee:	push   0xffffffed
  41baf0:	mov    bh,0x59
  41baf2:	add    al,bh
  41baf4:	jne    0x41bb5f
  41baf6:	jle    0x41bb39
  41baf8:	cmp    edi,DWORD PTR [ebp-0x64]
  41bafb:	xor    edx,ecx
  41bafd:	add    cl,BYTE PTR ds:0x808dfa39
  41bb03:	inc    esi
  41bb04:	mov    esp,0x977ba9ca
  41bb09:	or     cl,BYTE PTR [edi+eax*8-0x56]
  41bb0d:	sbb    DWORD PTR [esi-0x309203d8],ebx
  41bb13:	lods   eax,DWORD PTR ds:[esi]
  41bb14:	or     BYTE PTR [eax+0x1a],bh
  41bb17:	mov    eax,ds:0x866f9ee4
  41bb1c:	lahf   
  41bb1d:	enter  0x7b0b,0x7c
  41bb21:	pop    ecx
  41bb22:	adc    ch,ah
  41bb24:	bound  edx,QWORD PTR [eax+0x4cf06d00]
  41bb2a:	fst    DWORD PTR [eax+0x43]
  41bb2d:	loop   0x41baf3
  41bb2f:	(bad)  
  41bb30:	cmp    eax,0xb6889634
  41bb35:	inc    ebp
  41bb36:	mov    dh,0x1c
  41bb38:	cmp    esi,edx
  41bb3a:	xchg   edx,eax
  41bb3b:	dec    ebx
  41bb3c:	test   eax,0x796f334e
  41bb41:	mov    cl,0x70
  41bb43:	and    BYTE PTR [eax],al
  41bb45:	push   edi
  41bb46:	dec    esp
  41bb47:	rol    DWORD PTR [ebp-0x28],1
  41bb4a:	hlt    
  41bb4b:	(bad)  
  41bb4d:	cmp    al,0xf9
  41bb4f:	data16 xor ah,dl
  41bb52:	pop    esp
  41bb53:	and    al,0xed
  41bb55:	add    BYTE PTR [eax-0x57],cl
  41bb58:	arpl   WORD PTR [ebp+0x490f1360],si
  41bb5e:	jmp    0x41bb5f
  41bb60:	mov    dl,0x7a
  41bb62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb63:	(bad)  
  41bb64:	shl    DWORD PTR [eax+0x5c],cl
  41bb67:	inc    edi
  41bb68:	aad    0x14
  41bb6a:	loop   0x41bbda
  41bb6c:	fld    TBYTE PTR [eax+ebx*2-0x80]
  41bb70:	sub    eax,0x985aed5d
  41bb75:	stos   DWORD PTR es:[edi],eax
  41bb76:	xor    bl,bl
  41bb78:	cwde   
  41bb79:	jmp    0x6c37:0x56c21cb
  41bb80:	out    0x5f,eax
  41bb82:	aaa    
  41bb83:	mov    ebx,0xef0a32a4
  41bb88:	jns    0x41bbe9
  41bb8a:	cwde   
  41bb8b:	daa    
  41bb8c:	fild   DWORD PTR [edi-0x4c297255]
  41bb92:	addr16 js 0x41bbd9
  41bb95:	cmp    eax,0x60e8a0bb
  41bb9a:	imul   ebp,DWORD PTR [ebp+ecx*4-0x61cc7a67],0xb392c536
  41bba5:	sub    edi,DWORD PTR [edx+0x3386b371]
  41bbab:	mov    ds:0xfb8f310c,al
  41bbb0:	aad    0xdd
  41bbb2:	test   eax,0xa2b182b
  41bbb7:	push   edx
  41bbb8:	push   cs
  41bbb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbba:	cmp    DWORD PTR [edi+0x2cd32615],ecx
  41bbc0:	inc    DWORD PTR [ecx+0x43152328]
  41bbc6:	lds    edi,FWORD PTR [ebx+0x40]
  41bbc9:	mov    eax,0x45b59fb7
  41bbce:	sti    
  41bbcf:	xlat   BYTE PTR ds:[ebx]
  41bbd0:	inc    edi
  41bbd1:	cdq    
  41bbd2:	xchg   edi,eax
  41bbd3:	jl     0x41bbb4
  41bbd5:	(bad)  
  41bbd6:	icebp  
  41bbd7:	fwait
  41bbd8:	in     al,dx
  41bbd9:	mov    BYTE PTR [eax],ah
  41bbdb:	adc    eax,0x4ed826ca
  41bbe0:	xchg   DWORD PTR [ebx-0x68b83fb0],ebx
  41bbe6:	addr16 (bad) 
  41bbe8:	lea    esp,[edx]
  41bbea:	mov    es:0x1819a498,al
  41bbf0:	popa   
  41bbf1:	in     eax,dx
  41bbf2:	imul   edi,DWORD PTR [eax-0x2339ded7],0x3c49f4d7
  41bbfc:	loop   0x41bbc4
  41bbfe:	push   es
  41bbff:	dec    esi
  41bc00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc01:	mov    eax,0x175a3bce
  41bc06:	out    dx,al
  41bc07:	test   ebp,0x462fef33
  41bc0d:	cmp    cl,ah
  41bc0f:	dec    ebx
  41bc10:	pop    eax
  41bc11:	bound  esp,QWORD PTR [edx]
  41bc13:	pop    ebx
  41bc14:	loop   0x41bbee
  41bc16:	and    BYTE PTR [edx+0x714d5148],al
  41bc1c:	or     al,0x6
  41bc1e:	inc    ebp
  41bc1f:	fnsave [ebx+0x3a]
  41bc22:	mov    edi,0x922ba2e7
  41bc27:	in     al,0xf6
  41bc29:	sbb    edi,ebp
  41bc2b:	cmp    eax,DWORD PTR [edx]
  41bc2d:	test   eax,0xdc72e667
  41bc32:	mov    bl,0x13
  41bc34:	cmp    dh,BYTE PTR [eax-0x5e3649a9]
  41bc3a:	clc    
  41bc3b:	fsubr  st,st(4)
  41bc3d:	leave  
  41bc3e:	mov    al,0x9
  41bc40:	add    ebp,DWORD PTR [eax+ebx*1-0x15]
  41bc44:	cs into 
  41bc46:	push   edx
  41bc47:	or     eax,0x80491add
  41bc4c:	mov    ds:0x16cd00b8,al
  41bc51:	aad    0x2b
  41bc53:	sub    al,0xa2
  41bc55:	(bad)  
  41bc56:	xchg   ebx,eax
  41bc57:	pushf  
  41bc58:	jl     0x41bcb5
  41bc5a:	arpl   WORD PTR [edi+0xf702bb3],bx
  41bc60:	inc    edx
  41bc61:	(bad)  
  41bc62:	sahf   
  41bc63:	mov    esi,0xe7a336aa
  41bc68:	xor    eax,0xa4145bab
  41bc6d:	jp     0x41bc1c
  41bc6f:	xor    al,0x63
  41bc71:	ds jge 0x41bcbf
  41bc74:	mov    fs,WORD PTR [eax-0x4c7356ec]
  41bc7a:	mov    edx,0xbbe9ce35
  41bc7f:	or     esi,DWORD PTR ds:0x369f6799
  41bc85:	mov    bl,0xdc
  41bc87:	adc    BYTE PTR [edx],dl
  41bc89:	inc    edi
  41bc8a:	sub    al,0x3
  41bc8c:	cwde   
  41bc8d:	inc    ebx
  41bc8e:	inc    ebx
  41bc8f:	mov    eax,0xb29b4b8b
  41bc94:	mov    eax,0xc10eeac6
  41bc99:	sbb    BYTE PTR [edx],0xea
  41bc9c:	sbb    bl,BYTE PTR [edi]
  41bc9e:	aad    0xc8
  41bca0:	dec    esi
  41bca1:	jne    0x41bce0
  41bca3:	cs cld 
  41bca5:	xor    DWORD PTR [ecx-0x21],ebx
  41bca8:	jbe    0x41bc3a
  41bcaa:	adc    eax,0xc37f9af3
  41bcaf:	mov    esp,0xc04e5ff4
  41bcb4:	and    al,0x16
  41bcb6:	mov    edi,0xd33602d8
  41bcbb:	mov    ebx,0x8e3603fe
  41bcc0:	add    edx,DWORD PTR [ecx-0x1f]
  41bcc3:	icebp  
  41bcc4:	mov    esi,0xc4510e74
  41bcc9:	push   ss
  41bcca:	fstp   TBYTE PTR [esi-0x37a161a1]
  41bcd0:	ret    0x4acc
  41bcd3:	mov    ebx,ecx
  41bcd5:	mov    ecx,edx
  41bcd7:	pop    esi
  41bcd8:	lods   eax,DWORD PTR ds:[esi]
  41bcd9:	rcr    BYTE PTR [esi+0x5b],1
  41bcdc:	push   edi
  41bcdd:	jl     0x41bd0d
  41bcdf:	dec    eax
  41bce0:	jno    0x41bc7b
  41bce2:	xor    BYTE PTR [edi*8+0x1eaa3d88],cl
  41bce9:	inc    eax
  41bcea:	out    0x4e,eax
  41bcec:	sti    
  41bced:	jmp    0x63310efb
  41bcf2:	out    dx,al
  41bcf3:	jmp    0xcc473160
  41bcf8:	dec    edx
  41bcf9:	lahf   
  41bcfa:	jecxz  0x41bc8b
  41bcfc:	cmp    al,0x7d
  41bcfe:	mov    ebp,0xa39aca03
  41bd03:	sbb    dh,BYTE PTR [esi]
  41bd05:	aas    
  41bd06:	daa    
  41bd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd08:	shr    BYTE PTR [ecx+0xa],cl
  41bd0b:	outs   dx,DWORD PTR ds:[esi]
  41bd0c:	sbb    BYTE PTR [ebp+0xab3173c],ah
  41bd12:	mov    dl,0x93
  41bd14:	jp     0x41bc9f
  41bd16:	pushf  
  41bd17:	in     al,dx
  41bd18:	mov    bl,0x5a
  41bd1a:	jnp    0x41bd68
  41bd1c:	and    eax,0x8b7941da
  41bd21:	fs in  eax,dx
  41bd23:	sbb    eax,0xffffffdb
  41bd26:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41bd28:	das    
  41bd29:	mov    esp,es
  41bd2b:	daa    
  41bd2c:	pop    esp
  41bd2d:	cmp    ebp,DWORD PTR [edx+0x6691e918]
  41bd33:	aam    0x72
  41bd35:	ds cmp bl,cl
  41bd38:	jb     0x41bd4a
  41bd3a:	or     eax,0x6137066
  41bd3f:	or     ebx,DWORD PTR [ebp+0x26]
  41bd42:	in     eax,0xcd
  41bd44:	add    dl,BYTE PTR [ecx+0xc]
  41bd47:	mov    cl,0x40
  41bd49:	cmp    DWORD PTR [edx+0x67],ebp
  41bd4c:	int3   
  41bd4d:	test   DWORD PTR [ecx+edx*8+0x469cffde],ebp
  41bd54:	mov    dl,0xfb
  41bd56:	jnp    0x41bd20
  41bd58:	sbb    ebx,DWORD PTR [edx-0x2b]
  41bd5b:	ja     0x41bdd0
  41bd5d:	scas   eax,DWORD PTR es:[edi]
  41bd5e:	shl    al,cl
  41bd60:	aaa    
  41bd61:	jle    0x41bcff
  41bd63:	dec    ebp
  41bd64:	xchg   edx,eax
  41bd65:	lea    ecx,[esi]
  41bd67:	into   
  41bd68:	push   edx
  41bd69:	jmp    0xca16:0x77e4b4f2
  41bd70:	push   edi
  41bd71:	shl    DWORD PTR [eax+esi*8],0xbf
  41bd75:	(bad)  
  41bd76:	or     ah,BYTE PTR [esi-0x38]
  41bd79:	push   edx
  41bd7a:	xchg   edi,eax
  41bd7b:	push   edi
  41bd7c:	pop    ss
  41bd7d:	pop    esp
  41bd7e:	popf   
  41bd7f:	mov    ds:0xbc0c77ae,eax
  41bd84:	call   0x3ee74fc6
  41bd89:	xor    DWORD PTR [eax+ecx*4+0x75457021],eax
  41bd90:	loope  0x41be00
  41bd92:	cmp    eax,DWORD PTR [ebx-0x41572d4]
  41bd98:	sbb    DWORD PTR [ecx],ecx
  41bd9a:	fisub  DWORD PTR [edi]
  41bd9c:	js     0x41bd9d
  41bd9e:	mov    ebx,ebx
  41bda0:	fld    QWORD PTR [ebp+0x64]
  41bda3:	inc    eax
  41bda4:	add    DWORD PTR [ebx-0x11],ecx
  41bda7:	das    
  41bda8:	add    eax,0x8a60e8ae
  41bdad:	and    eax,0x7d2dcfcc
  41bdb2:	xor    ebp,DWORD PTR [ebp+0x38ac78f2]
  41bdb8:	mov    ds:0xd541630b,eax
  41bdbd:	inc    esp
  41bdbe:	repz jmp FWORD PTR [eax]
  41bdc1:	mov    ah,0xeb
  41bdc3:	std    
  41bdc4:	adc    edi,DWORD PTR [ecx-0x698932d2]
  41bdca:	fstp   QWORD PTR [eax+0x5d]
  41bdcd:	mov    ch,0xe3
  41bdcf:	scas   eax,DWORD PTR es:[edi]
  41bdd0:	or     esi,ecx
  41bdd2:	enter  0x7ed9,0x25
  41bdd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdd7:	aam    0x34
  41bdd9:	pop    ecx
  41bdda:	rol    DWORD PTR [eax+0x2b0255dc],1
  41bde0:	xor    edi,DWORD PTR [ecx+edi*1+0x5f5f9719]
  41bde7:	gs inc esi
  41bde9:	loope  0x41bdf8
  41bdeb:	push   0x22fa4c0a
  41bdf0:	cwde   
  41bdf1:	les    edx,FWORD PTR [ecx+0x32bf2a76]
  41bdf7:	jo     0x41bdc0
  41bdf9:	xor    eax,0xab257612
  41bdfe:	sub    edi,DWORD PTR [edx+0xb]
  41be01:	add    eax,DWORD PTR [ebx+0x6e]
  41be04:	in     eax,0xe6
  41be06:	push   ds
  41be07:	sub    eax,0xaa8b9cb0
  41be0c:	xor    BYTE PTR [bx+si+0x1d],bh
  41be10:	fcomp  DWORD PTR [esi-0x3c]
  41be13:	add    al,0xd
  41be15:	dec    edx
  41be16:	sbb    eax,0x9fb9ec71
  41be1b:	adc    BYTE PTR [ebx-0x79],al
  41be1e:	jmp    0x307632f3
  41be23:	and    eax,0xe707a229
  41be28:	(bad)  [ebx+0x33]
  41be2b:	jno    0x41bdf5
  41be2d:	enter  0x7665,0x54
  41be31:	js     0x41be25
  41be33:	pushf  
  41be34:	rol    BYTE PTR [eax+0x1ff5fb26],0x70
  41be3b:	ret    
  41be3c:	dec    edx
  41be3d:	fwait
  41be3e:	add    BYTE PTR [ebx+0xb],ah
  41be41:	pop    edx
  41be42:	das    
  41be43:	nop
  41be44:	jle    0x41bea1
  41be46:	(bad)  
  41be47:	sbb    BYTE PTR [ecx-0x4ecad05a],cl
  41be4d:	pop    ebp
  41be4e:	adc    dh,BYTE PTR [eax+0x5ab74c74]
  41be54:	xchg   edi,eax
  41be55:	fld1   
  41be57:	jns    0x41bea3
  41be59:	pusha  
  41be5a:	mov    cl,0x7c
  41be5c:	xchg   edi,eax
  41be5d:	adc    DWORD PTR [esi],esp
  41be5f:	push   ss
  41be60:	push   es
  41be61:	xchg   BYTE PTR [edx+0x60],dh
  41be64:	loopne 0x41be25
  41be66:	shr    DWORD PTR [esi+0x66fbe9ed],cl
  41be6c:	pushf  
  41be6d:	inc    edi
  41be6e:	adc    ecx,edi
  41be70:	not    BYTE PTR [eax+ebx*2-0x14689a08]
  41be77:	push   ebp
  41be78:	aas    
  41be79:	jl     0x41bee2
  41be7b:	push   ds
  41be7c:	in     eax,dx
  41be7d:	pop    es
  41be7e:	call   0xc567:0xadbc60e7
  41be85:	(bad)  
  41be86:	jmp    0x41bef8
  41be88:	test   al,0x5f
  41be8a:	sbb    bl,BYTE PTR [esi]
  41be8c:	pop    esi
  41be8d:	fisttp DWORD PTR [esi+ebx*2+0x50]
  41be91:	dec    esi
  41be92:	push   edi
  41be93:	mov    edx,0x13d60734
  41be98:	cdq    
  41be99:	sub    DWORD PTR [ecx],0x3b
  41be9c:	ss dec edi
  41be9e:	xchg   esi,eax
  41be9f:	push   ds
  41bea0:	sbb    al,0x56
  41bea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bea3:	mov    WORD PTR ds:0x1aece20f,ss
  41bea9:	in     eax,dx
  41beaa:	jmp    0x41be42
  41beac:	sbb    ebx,edi
  41beae:	xchg   ebp,eax
  41beaf:	add    BYTE PTR [ebp+0x56],al
  41beb2:	ds mov edx,0xef611373
  41beb8:	es sbb al,0x40
  41bebb:	scas   al,BYTE PTR es:[edi]
  41bebc:	fs mov fs:0x5d2b7bd2,eax
  41bec3:	call   0x7936:0x147e3f8a
  41beca:	icebp  
  41becb:	in     eax,dx
  41becc:	cld    
  41becd:	pop    esp
  41bece:	cld    
  41becf:	inc    edx
  41bed0:	cli    
  41bed1:	retf   
  41bed2:	icebp  
  41bed3:	jle    0x41bea9
  41bed5:	loopne 0x41be99
  41bed7:	mov    ebx,0x1b41d556
  41bedc:	in     al,0x11
  41bede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bedf:	add    ah,BYTE PTR [ecx+ebp*2+0x4fb4a3cc]
  41bee6:	mov    esi,0xd43e9234
  41beeb:	jle    0x41beb2
  41beed:	fistp  DWORD PTR [ebx-0x4f]
  41bef1:	jbe    0x41be8c
  41bef3:	inc    edx
  41bef4:	jo     0x41bf48
  41bef6:	pop    es
  41bef7:	stos   BYTE PTR es:[edi],al
  41bef8:	sub    al,0xd7
  41befa:	(bad)  
  41befb:	mov    bh,0x3d
  41befd:	jecxz  0x41bead
  41beff:	dec    esp
  41bf00:	sar    edx,1
  41bf02:	xchg   BYTE PTR [ebx+0x6d901558],cl
  41bf08:	mov    cl,0x43
  41bf0a:	mov    ebx,0x211c257c
  41bf0f:	nop
  41bf10:	cdq    
  41bf11:	dec    BYTE PTR [eax]
  41bf13:	retf   
  41bf14:	pop    ecx
  41bf15:	mov    esi,edi
  41bf17:	mov    ebp,DWORD PTR [edi]
  41bf19:	adc    bl,BYTE PTR [edx+0x566ea89a]
  41bf1f:	fld    QWORD PTR [edi+0x4b10c25c]
  41bf25:	(bad)  
  41bf26:	dec    ebp
  41bf27:	ret    
  41bf28:	test   eax,0x27725817
  41bf2d:	pop    ecx
  41bf2e:	mov    ds:0x789ea206,al
  41bf33:	mov    ah,0xf9
  41bf35:	jl     0x41bf44
  41bf37:	cmp    bh,al
  41bf39:	aas    
  41bf3a:	cmp    BYTE PTR [ebx],0x1d
  41bf3d:	not    DWORD PTR [edx-0x38]
  41bf40:	xchg   ebx,eax
  41bf41:	pop    esi
  41bf42:	push   0xffffffbf
  41bf44:	in     al,dx
  41bf45:	pop    es
  41bf46:	sahf   
  41bf47:	adc    bl,BYTE PTR [ebx-0x24a25dfe]
  41bf4d:	dec    eax
  41bf4e:	hlt    
  41bf4f:	add    al,0x4a
  41bf51:	mov    eax,ds:0xd50f8b4a
  41bf56:	add    al,0xd8
  41bf58:	sbb    DWORD PTR [eax-0x6c76edda],esi
  41bf5e:	mov    cl,0x1d
  41bf60:	pop    es
  41bf61:	jecxz  0x41bfcc
  41bf63:	pusha  
  41bf64:	retf   0x335c
  41bf67:	or     eax,0xfb7a9cd9
  41bf6c:	xchg   ebp,eax
  41bf6d:	mov    edi,0xea4addc7
  41bf72:	enter  0x97d1,0x64
  41bf76:	pushf  
  41bf77:	js     0x41bf8a
  41bf79:	and    DWORD PTR [ecx+ecx*4+0x5afbf44c],ebx
  41bf80:	and    BYTE PTR [esi],bl
  41bf82:	mov    cs,WORD PTR [edx]
  41bf84:	add    BYTE PTR [edx],bh
  41bf86:	mov    BYTE PTR [eax+0x11cac54e],ch
  41bf8c:	shl    esi,cl
  41bf8e:	jge    0x41bf3c
  41bf90:	adc    al,0xae
  41bf92:	(bad)  
  41bf93:	adc    eax,DWORD PTR [bx+di+0x454d]
  41bf98:	scas   eax,DWORD PTR es:[edi]
  41bf99:	xor    BYTE PTR [ecx-0x30b2a021],cl
  41bf9f:	sub    DWORD PTR [ebp-0x6b1f0a4b],esi
  41bfa5:	pop    esp
  41bfa6:	push   edx
  41bfa7:	(bad)  [ecx-0x21264879]
  41bfad:	add    eax,0x43f9a93e
  41bfb2:	hlt    
  41bfb3:	pop    edi
  41bfb4:	sbb    esp,DWORD PTR [ebx-0x7f8ad333]
  41bfba:	and    al,0xaf
  41bfbc:	adc    cl,ch
  41bfbe:	jmp    0x888ee9c
  41bfc3:	ret    
  41bfc4:	call   0x72b8e2d9
  41bfc9:	scas   eax,DWORD PTR es:[edi]
  41bfca:	mov    eax,ds:0x3c598e32
  41bfcf:	ret    0x954c
  41bfd2:	aas    
  41bfd3:	out    dx,eax
  41bfd4:	adc    ecx,DWORD PTR [edx+0x5bbb8fbd]
  41bfda:	ins    BYTE PTR es:[edi],dx
  41bfdb:	xchg   edi,eax
  41bfdc:	jmp    FWORD PTR [edx]
  41bfde:	in     al,0x87
  41bfe0:	mov    ebp,ss
  41bfe2:	or     eax,0xd52c5801
  41bfe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfe8:	int    0x6a
  41bfea:	stos   DWORD PTR es:[di],eax
  41bfec:	mov    esi,edx
  41bfee:	les    esi,FWORD PTR [esi+0x49954d16]
  41bff4:	out    dx,al
  41bff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bff6:	push   edx
  41bff7:	mov    eax,0x472e8094
  41bffc:	cli    
  41bffd:	lds    edi,FWORD PTR [esi]
  41bfff:	mul    DWORD PTR [esi-0x19]
  41c002:	or     DWORD PTR [ebp-0x5d21a7fa],edi
  41c008:	dec    edi
  41c009:	loop   0x41bfd7
  41c00b:	sbb    eax,0xd3844b08
  41c010:	out    dx,eax
  41c011:	xor    dl,dh
  41c013:	adc    ebx,esi
  41c015:	in     al,dx
  41c016:	rcr    BYTE PTR [eax],cl
  41c018:	popw   ss
  41c01a:	push   ecx
  41c01b:	sub    BYTE PTR [edx],0x4e
  41c01e:	mov    cl,0x40
  41c020:	and    al,0x9e
  41c022:	outs   dx,DWORD PTR ds:[esi]
  41c023:	in     al,0x30
  41c025:	jne    0x41c018
  41c027:	push   ebx
  41c028:	and    al,0x2
  41c02a:	inc    edi
  41c02b:	or     ecx,DWORD PTR [edi-0x73]
  41c02e:	int    0xb9
  41c030:	add    esi,DWORD PTR [edi-0x6d]
  41c033:	push   edi
  41c034:	rcr    BYTE PTR [ebp+0x42db08b8],cl
  41c03a:	test   DWORD PTR ds:0x4708312b,esi
  41c040:	sub    esi,DWORD PTR [ecx-0x5f]
  41c043:	mov    dh,0x5b
  41c045:	les    ebp,FWORD PTR [eax+0xb]
  41c048:	sbb    DWORD PTR [ebp-0x32],ecx
  41c04b:	mov    bh,0xd6
  41c04d:	add    ebp,DWORD PTR ds:0x8cd5708f
  41c053:	out    dx,eax
  41c054:	or     BYTE PTR ds:0x4a5c48bc,ch
  41c05a:	stos   DWORD PTR es:[edi],eax
  41c05b:	test   DWORD PTR [edi-0x30],0xd06beca5
  41c062:	mov    bh,0x3d
  41c064:	outs   dx,BYTE PTR ds:[esi]
  41c065:	(bad)  
  41c066:	sti    
  41c067:	(bad)  
  41c069:	stc    
  41c06a:	dec    ebx
  41c06b:	out    dx,al
  41c06c:	and    ecx,esi
  41c06e:	jmp    0x41bffc
  41c070:	imul   edx,DWORD PTR [edx-0x74],0xc41fdd0e
  41c077:	(bad)  
  41c078:	xor    al,0x74
  41c07a:	xchg   BYTE PTR [edx-0x61cbc95f],al
  41c080:	cmp    al,0x2
  41c082:	in     al,dx
  41c083:	repz push ecx
  41c085:	dec    esi
  41c086:	mov    BYTE PTR [esi+ebx*2+0x6],dl
  41c08a:	jno    0x41c0a7
  41c08c:	into   
  41c08d:	mov    ch,0x13
  41c08f:	mov    dh,0xf3
  41c091:	lock daa 
  41c093:	pop    ecx
  41c094:	fwait
  41c095:	ins    BYTE PTR es:[edi],dx
  41c096:	add    al,0xc6
  41c098:	push   es
  41c099:	push   cs
  41c09a:	jle    0x41c107
  41c09c:	pop    ds
  41c09d:	or     BYTE PTR [eax-0x727110b1],bl
  41c0a3:	jne    0x41c0e6
  41c0a5:	scas   eax,DWORD PTR es:[edi]
  41c0a6:	fcom   DWORD PTR [ecx+0x54]
  41c0a9:	and    DWORD PTR [ebx+edx*1],0x1cc6d1a1
  41c0b0:	dec    edx
  41c0b1:	or     BYTE PTR [ebp+0x68],dl
  41c0b4:	jg     0x41c076
  41c0b6:	pop    ebx
  41c0b7:	sub    ch,BYTE PTR [eax-0x1d]
  41c0ba:	xchg   edx,eax
  41c0bb:	xor    esi,DWORD PTR [ecx]
  41c0bd:	dec    edx
  41c0be:	sar    DWORD PTR [edi],cl
  41c0c0:	les    ecx,FWORD PTR [ebp-0x33]
  41c0c3:	cmp    esi,DWORD PTR [eax+0x28]
  41c0c6:	sub    BYTE PTR [ebp+eiz*2+0x39],ch
  41c0ca:	inc    esi
  41c0cb:	loopne 0x41c142
  41c0cd:	aas    
  41c0ce:	add    DWORD PTR [edi+esi*4-0x7299417f],ebx
  41c0d5:	or     BYTE PTR [esi+edx*2-0x71da8f45],dh
  41c0dc:	or     BYTE PTR gs:[ecx-0x80],dh
  41c0e0:	sbb    BYTE PTR ds:0x22e4ac31,bl
  41c0e6:	mov    edx,cs
  41c0e8:	push   ebx
  41c0e9:	sub    ebx,eax
  41c0eb:	fisubr DWORD PTR [eax-0x4b6bf587]
  41c0f1:	retf   
  41c0f2:	pop    es
  41c0f3:	pop    ebp
  41c0f4:	mov    al,0x24
  41c0f6:	xchg   esp,eax
  41c0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0f8:	jmp    0x36d7:0x2635aac9
  41c0ff:	retf   0xb2c
  41c102:	ss out dx,al
  41c104:	sbb    DWORD PTR [edi],esp
  41c106:	arpl   WORD PTR [edi+0x25855d50],bx
  41c10c:	adc    DWORD PTR [esi-0x7c],ebx
  41c10f:	outs   dx,DWORD PTR ds:[esi]
  41c110:	fnstcw WORD PTR [eax]
  41c112:	mov    dl,0x6d
  41c114:	push   esp
  41c115:	and    eax,0x6420c0eb
  41c11a:	fistp  WORD PTR [edi+0x4dcf13c8]
  41c120:	mov    edi,0x77e53071
  41c125:	in     eax,dx
  41c126:	dec    eax
  41c127:	sub    BYTE PTR [edi+0x5c],al
  41c12a:	lods   al,BYTE PTR ds:[esi]
  41c12b:	pop    es
  41c12c:	out    dx,al
  41c12d:	or     DWORD PTR [eax+ecx*8],edi
  41c130:	addr16 inc esp
  41c132:	mov    ss,esp
  41c134:	sti    
  41c135:	add    DWORD PTR [eax],0x24
  41c138:	xchg   cl,dh
  41c13a:	jb     0x41c166
  41c13c:	dec    edx
  41c13d:	cld    
  41c13e:	mov    bh,0x5b
  41c140:	pushf  
  41c141:	jne    0x41c165
  41c143:	mov    ebp,0x7782c2f6
  41c148:	aas    
  41c149:	retf   0x110f
  41c14c:	popf   
  41c14d:	push   ebx
  41c14e:	mov    dl,0x34
  41c150:	or     al,0xbb
  41c152:	in     al,0xed
  41c154:	int3   
  41c155:	gs aam 0xad
  41c158:	lods   al,BYTE PTR ds:[esi]
  41c159:	mov    ebx,0x523ab2e0
  41c15e:	inc    esp
  41c15f:	cmp    eax,0xaa375af9
  41c164:	adc    cl,BYTE PTR [ebp+0x60f1f610]
  41c16a:	cs (bad) 
  41c16c:	dec    esp
  41c16d:	and    bl,0xb3
  41c170:	dec    ecx
  41c171:	inc    edx
  41c172:	adc    DWORD PTR [edx-0x6c],0x70
  41c176:	retf   0xf5ff
  41c179:	clc    
  41c17a:	and    edi,0x22
  41c17d:	dec    ecx
  41c17e:	sbb    BYTE PTR [esi+0x243cf81b],dl
  41c184:	imul   DWORD PTR [esi+0x615142d9]
  41c18a:	(bad)  
  41c18b:	aaa    
  41c18c:	adc    DWORD PTR [ecx-0x19],0x61
  41c190:	sbb    DWORD PTR [ecx],eax
  41c192:	sub    bl,BYTE PTR [eax-0x5d]
  41c195:	je     0x41c13a
  41c197:	scas   al,BYTE PTR es:[edi]
  41c198:	mov    edi,DWORD PTR [ebx]
  41c19a:	sbb    ah,BYTE PTR [esi+0x74]
  41c19d:	pop    esp
  41c19e:	cmp    BYTE PTR [ebx],al
  41c1a0:	aam    0xc9
  41c1a2:	mov    ebx,0x6a96e377
  41c1a7:	rol    BYTE PTR [eax+0x5674716e],1
  41c1ad:	fld    QWORD PTR [esi-0x56]
  41c1b0:	or     DWORD PTR [ebp-0x2d],ecx
  41c1b3:	nop
  41c1b4:	pop    ecx
  41c1b5:	jnp    0x41c1de
  41c1b7:	sti    
  41c1b8:	lahf   
  41c1b9:	outs   dx,BYTE PTR ds:[esi]
  41c1ba:	mov    BYTE PTR cs:[esi-0x44],ah
  41c1be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1bf:	cmp    esp,DWORD PTR [edx-0xa]
  41c1c2:	mov    bh,0xf0
  41c1c4:	into   
  41c1c5:	pop    ebp
  41c1c6:	push   ds
  41c1c7:	call   0x731c:0x18e47458
  41c1ce:	cmp    ah,BYTE PTR [eax+eax*8-0x3e]
  41c1d2:	jmp    DWORD PTR [eax-0x42ccdd38]
  41c1d8:	and    eax,0xccfc1f4a
  41c1dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1de:	pop    esp
  41c1df:	rcl    ecx,cl
  41c1e1:	sbb    DWORD PTR [eax+ebx*1+0x12df8033],esp
  41c1e8:	sub    DWORD PTR [edx-0x2d8ab524],esi
  41c1ee:	sub    eax,0x40cf2e85
  41c1f3:	jle    0x41c233
  41c1f5:	imul   ecx,DWORD PTR [bx+si],0x21
  41c1f9:	sahf   
  41c1fa:	pop    ds
  41c1fb:	dec    esi
  41c1fc:	or     edi,ebp
  41c1fe:	or     bh,BYTE PTR [ecx]
  41c200:	(bad)  
  41c201:	sub    cl,BYTE PTR [ebp-0x402f79fd]
  41c207:	ins    DWORD PTR es:[edi],dx
  41c208:	mov    eax,ds:0x4713eb56
  41c20d:	pushf  
  41c20e:	sub    bl,BYTE PTR [ecx+0x26bf907c]
  41c214:	stos   BYTE PTR es:[edi],al
  41c215:	pop    ebx
  41c216:	pop    ebp
  41c217:	les    ebp,FWORD PTR gs:[ebx+ebx*8-0x5]
  41c21c:	mov    cl,0x25
  41c21e:	out    dx,al
  41c21f:	stos   DWORD PTR es:[edi],eax
  41c220:	jne    0x41c26f
  41c222:	mov    cl,0x46
  41c224:	add    dl,BYTE PTR [ebx+ebx*8+0x7d]
  41c228:	jmp    0x33be:0x8ffe8d37
  41c22f:	iret   
  41c230:	in     eax,0x97
  41c232:	push   0xffffff9b
  41c234:	arpl   WORD PTR [esi+0xe05956b],bx
  41c23a:	jnp    0x41c207
  41c23c:	scas   eax,DWORD PTR es:[edi]
  41c23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c23e:	inc    edx
  41c23f:	or     al,0x8f
  41c241:	adc    ebp,ecx
  41c243:	ja     0x41c1de
  41c245:	ror    BYTE PTR [ebx-0x2a9564b7],1
  41c24b:	stos   BYTE PTR es:[edi],al
  41c24c:	and    ecx,DWORD PTR [ecx]
  41c24e:	mov    al,0xea
  41c250:	mov    edx,0x2bcf7d84
  41c255:	bound  ebx,QWORD PTR [edx-0x702e5efa]
  41c25b:	sti    
  41c25c:	fcomi  st,st(6)
  41c25e:	stos   BYTE PTR es:[edi],al
  41c25f:	pop    ebp
  41c260:	cmp    eax,0xc761aa79
  41c265:	out    0xcc,eax
  41c267:	mov    bh,0x20
  41c269:	jle    0x41c291
  41c26b:	jge    0x41c282
  41c26d:	outs   dx,DWORD PTR ds:[esi]
  41c26e:	fs loop 0x41c297
  41c271:	into   
  41c272:	fst    QWORD PTR [ebx]
  41c274:	dec    edx
  41c275:	add    dh,ch
  41c277:	call   0x8cf893e4
  41c27c:	add    edx,eax
  41c27e:	repz cmc 
  41c280:	jp     0x41c27a
  41c282:	xchg   esp,eax
  41c283:	out    0xa4,eax
  41c285:	pop    eax
  41c286:	ss pop si
  41c289:	sub    BYTE PTR [ebp+0x42a56e7c],bl
  41c28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c290:	pop    esp
  41c291:	cmp    DWORD PTR [ecx],esi
  41c293:	rcl    DWORD PTR [edx+0x7c],1
  41c296:	int    0x1c
  41c298:	daa    
  41c299:	mov    eax,0xf34c8c25
  41c29e:	sub    esi,DWORD PTR [eax]
  41c2a0:	cmp    esi,DWORD PTR [edx+0x6f115a9]
  41c2a6:	into   
  41c2a7:	iret   
  41c2a8:	jg     0x41c237
  41c2aa:	aaa    
  41c2ab:	dec    eax
  41c2ac:	idiv   DWORD PTR [ebx-0x4e6dd8fa]
  41c2b2:	lods   eax,DWORD PTR ds:[esi]
  41c2b3:	or     BYTE PTR [edx-0x3a],al
  41c2b6:	stc    
  41c2b7:	xchg   ecx,eax
  41c2b8:	call   0x5e9d:0xc750f079
  41c2bf:	sbb    eax,0x332c4bbe
  41c2c4:	fwait
  41c2c5:	mov    al,ds:0x69c38088
  41c2ca:	cmp    bl,ch
  41c2cc:	(bad)  
  41c2cd:	sbb    dh,BYTE PTR [eax+0x38fa5566]
  41c2d3:	ja     0x41c301
  41c2d5:	mov    WORD PTR [eax+0x3c],ss
  41c2d8:	(bad)  
  41c2d9:	mov    eax,0x34498a7b
  41c2de:	mov    ds:0x8fb13eb7,eax
  41c2e3:	push   ebx
  41c2e4:	jp     0x41c2de
  41c2e6:	mov    cl,0xa7
  41c2e8:	inc    ecx
  41c2e9:	cmp    ecx,0x7e
  41c2ec:	or     eax,0x37d1f503
  41c2f1:	fdivr  DWORD PTR [edx-0x226d4583]
  41c2f7:	jge    0x41c2a6
  41c2f9:	in     eax,0xd
  41c2fb:	ret    0x948b
  41c2fe:	es addr16 dec edx
  41c301:	add    BYTE PTR cs:[edx],al
  41c304:	mov    es:0x671181f7,eax
  41c30a:	and    al,0x9b
  41c30c:	mov    esp,DWORD PTR [ebp+0x13]
  41c30f:	cmp    bl,BYTE PTR [edi+ebp*4+0x70]
  41c313:	sar    BYTE PTR [ebx+0x7a],cl
  41c316:	iret   
  41c317:	cwde   
  41c318:	scas   al,BYTE PTR es:[edi]
  41c319:	sub    al,0x66
  41c31b:	aad    0x88
  41c31d:	(bad)  
  41c31e:	in     al,dx
  41c31f:	push   edx
  41c320:	call   0x5c37c2e5
  41c325:	push   ecx
  41c326:	mov    ch,0xe2
  41c328:	(bad)  
  41c32a:	enter  0x4f37,0x43
  41c32e:	mov    edi,0x2f2babf5
  41c333:	jno    0x41c2cd
  41c335:	pop    edi
  41c336:	push   cs
  41c337:	sbb    dl,BYTE PTR [eax]
  41c339:	jmp    0xa216fa1e
  41c33e:	shl    DWORD PTR [edx+0x63],1
  41c341:	or     DWORD PTR [esi-0xd],edx
  41c344:	cdq    
  41c345:	inc    ebx
  41c346:	pop    ebx
  41c347:	aaa    
  41c348:	int    0xd0
  41c34a:	ror    BYTE PTR [edx+0x66],cl
  41c34d:	push   esp
  41c34e:	lahf   
  41c34f:	inc    esi
  41c350:	enter  0xc876,0xd
  41c354:	(bad)  
  41c355:	sbb    al,0xab
  41c357:	push   eax
  41c358:	cmp    edi,ecx
  41c35a:	xchg   bh,ch
  41c35c:	inc    esi
  41c35d:	xor    ebp,DWORD PTR [edx-0x54]
  41c360:	jle    0x41c2e4
  41c362:	sbb    DWORD PTR [ecx+0x5c],esp
  41c365:	inc    ecx
  41c366:	push   0x73
  41c368:	inc    esi
  41c369:	bnd jge 0x41c3e0
  41c36c:	fidivr WORD PTR [edi+0x1c6eedd5]
  41c372:	mov    edx,0xb7e1e92c
  41c377:	jo     0x41c363
  41c379:	rcr    BYTE PTR [eax+0x54],cl
  41c37c:	popa   
  41c37d:	mov    edx,0xacae49c
  41c382:	lock sbb ebx,DWORD PTR [edi]
  41c385:	inc    ebx
  41c386:	pop    ebp
  41c387:	mul    BYTE PTR [ebp-0x31656c6]
  41c38d:	inc    ecx
  41c38e:	xchg   ebx,eax
  41c38f:	jecxz  0x41c3b4
  41c391:	ffree  st(3)
  41c393:	or     BYTE PTR [edi+0x222fc0ae],dl
  41c399:	mov    edx,0x60697fbb
  41c39e:	outs   dx,DWORD PTR ds:[esi]
  41c39f:	xchg   ecx,eax
  41c3a0:	adc    dh,al
  41c3a2:	(bad)  [eax+0x765da1d8]
  41c3a8:	dec    eax
  41c3a9:	addr16 je 0x41c3ad
  41c3ac:	retf   
  41c3ad:	sbb    ah,0x20
  41c3b0:	or     DWORD PTR [edi+0x32],edi
  41c3b3:	adc    ah,BYTE PTR [eax+0x6c844e8e]
  41c3b9:	cmp    al,0xba
  41c3bb:	sbb    eax,0x7cfd2c52
  41c3c0:	pop    ebx
  41c3c1:	and    BYTE PTR [edx],bl
  41c3c3:	std    
  41c3c4:	dec    esi
  41c3c5:	sahf   
  41c3c6:	add    BYTE PTR [esi+0x47],0xbc
  41c3ca:	(bad)  [edi-0x78adf04e]
  41c3d0:	ret    0xf66f
  41c3d3:	push   edi
  41c3d4:	adc    ch,BYTE PTR [edi+0x66751bc3]
  41c3da:	jge    0x41c378
  41c3dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3dd:	(bad)  
  41c3df:	dec    ecx
  41c3e0:	outs   dx,DWORD PTR ds:[esi]
  41c3e1:	icebp  
  41c3e2:	mov    bl,0xcd
  41c3e4:	lahf   
  41c3e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3e6:	(bad)  
  41c3e7:	aas    
  41c3e8:	xchg   esi,eax
  41c3e9:	xor    ch,0x4f
  41c3ec:	imul   ebx,DWORD PTR [ecx-0x3a9c175c],0x56
  41c3f3:	aas    
  41c3f4:	lock jnp 0x41c407
  41c3f7:	jnp    0x41c380
  41c3f9:	in     eax,dx
  41c3fa:	xor    al,0x1d
  41c3fc:	in     eax,dx
  41c3fd:	inc    edx
  41c3fe:	sar    DWORD PTR [esp+ebp*2],1
  41c401:	jmp    0x41c3b2
  41c403:	retf   0x213e
  41c406:	test   edx,esp
  41c408:	sbb    esp,DWORD PTR [esi+0x62533e3e]
  41c40e:	xor    eax,0x493699b3
  41c413:	stc    
  41c414:	sahf   
  41c415:	dec    ebp
  41c416:	in     al,0x9c
  41c418:	or     edi,esi
  41c41a:	rcl    BYTE PTR [eax+0x2f3ec7bd],1
  41c420:	pop    edi
  41c421:	sub    BYTE PTR [eax-0xb],dh
  41c424:	xor    al,0xdd
  41c426:	jmp    0x3634:0xc2d51a75
  41c42d:	into   
  41c42e:	int    0xad
  41c430:	and    DWORD PTR [eax-0x39],ebx
  41c433:	dec    esp
  41c434:	imul   esi,DWORD PTR [ebx],0x64
  41c437:	push   edi
  41c438:	das    
  41c439:	test   BYTE PTR [ecx],dl
  41c43b:	jno    0x41c41e
  41c43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c43f:	push   esp
  41c440:	out    dx,al
  41c441:	rol    BYTE PTR [ecx-0x79467e5f],cl
  41c447:	inc    edx
  41c448:	cwde   
  41c449:	xchg   edi,eax
  41c44a:	(bad)  
  41c44c:	mov    WORD PTR [edi],es
  41c44e:	adc    dh,dl
  41c450:	push   esi
  41c451:	sbb    eax,DWORD PTR [esi+eax*8+0x72]
  41c455:	lds    ecx,FWORD PTR [edi-0x5108e884]
  41c45b:	adc    ebx,DWORD PTR [ecx]
  41c45d:	rcl    al,1
  41c45f:	mov    edi,0x9a821e24
  41c464:	shr    dh,0x6a
  41c467:	int3   
  41c468:	dec    esp
  41c469:	dec    edx
  41c46a:	jae    0x41c4e8
  41c46c:	rcr    BYTE PTR [edi+edi*2-0x6a],0x73
  41c471:	into   
  41c472:	(bad)  
  41c473:	push   edx
  41c474:	dec    dx
  41c476:	lock jno 0x41c4c2
  41c479:	mov    cl,0x79
  41c47b:	leave  
  41c47c:	cmp    al,0x91
  41c47e:	push   esp
  41c47f:	out    0x66,al
  41c481:	dec    eax
  41c482:	lahf   
  41c483:	out    dx,al
  41c484:	out    dx,eax
  41c485:	dec    edx
  41c486:	jg     0x41c47b
  41c488:	pop    ss
  41c489:	push   ecx
  41c48a:	sub    dh,BYTE PTR [ecx-0x7e86173]
  41c490:	xchg   edx,eax
  41c491:	aam    0x28
  41c493:	adc    edx,ecx
  41c495:	fstp   st(1)
  41c497:	xor    esi,esi
  41c499:	and    eax,0x4c1cd44
  41c49e:	pop    esi
  41c49f:	hlt    
  41c4a0:	jmp    DWORD PTR [ebp+ebx*8+0x5cf58f88]
  41c4a7:	or     cl,BYTE PTR [edi]
  41c4a9:	mov    al,0x95
  41c4ac:	adc    edi,DWORD PTR [ecx]
  41c4ae:	push   es
  41c4af:	std    
  41c4b0:	stos   BYTE PTR es:[edi],al
  41c4b1:	add    bh,BYTE PTR [esp+eiz*2]
  41c4b4:	imul   edx,DWORD PTR ds:0x3e7059a0,0x12
  41c4bb:	arpl   WORD PTR [ebx],bp
  41c4bd:	(bad)  
  41c4be:	hlt    
  41c4bf:	in     eax,dx
  41c4c0:	xor    al,0x90
  41c4c2:	int3   
  41c4c3:	jns    0x41c4de
  41c4c5:	cwde   
  41c4c6:	lods   al,BYTE PTR ds:[esi]
  41c4c7:	lods   eax,DWORD PTR ds:[esi]
  41c4c8:	(bad)  
  41c4c9:	rol    BYTE PTR [esi-0x4ac35286],0x77
  41c4d0:	jae    0x41c488
  41c4d2:	int3   
  41c4d3:	out    dx,al
  41c4d4:	out    0xe1,eax
  41c4d6:	mov    ds:0xf308eba2,eax
  41c4db:	jmp    FWORD PTR [ecx-0x5b]
  41c4de:	call   0x4c8f4ad3
  41c4e3:	xor    ah,BYTE PTR [esi+0x60]
  41c4e6:	rol    BYTE PTR [edi],1
  41c4e8:	aas    
  41c4e9:	mov    ebp,0xe00b09b2
  41c4ee:	and    cl,bl
  41c4f0:	(bad)  
  41c4f1:	push   esp
  41c4f2:	test   DWORD PTR [eax],esi
  41c4f4:	mov    ch,0x25
  41c4f6:	pop    ebp
  41c4f7:	scas   eax,DWORD PTR es:[edi]
  41c4f8:	mov    al,0x7e
  41c4fa:	jmp    0x2bf9c3a5
  41c4ff:	icebp  
  41c500:	out    dx,eax
  41c501:	add    BYTE PTR [eax+0x15],dh
  41c504:	mov    bh,0x5d
  41c506:	test   BYTE PTR [edi+esi*8-0x6c],dl
  41c50a:	daa    
  41c50b:	dec    DWORD PTR [edi-0xae2f9df]
  41c511:	sbb    DWORD PTR [ecx],edx
  41c513:	ja     0x41c4cb
  41c515:	cmp    al,0xd8
  41c517:	push   ds
  41c518:	fld    QWORD PTR ds:0x35637b64
  41c51e:	mov    al,ds:0xb3e1a474
  41c523:	mov    ds:0xc27ecb6d,eax
  41c528:	xor    eax,0x6a352ee0
  41c52d:	in     eax,dx
  41c52e:	cmp    al,0x53
  41c530:	mov    ds,WORD PTR [edx-0x10]
  41c533:	xchg   ecx,eax
  41c534:	mov    ebx,0xefea4d35
  41c539:	test   eax,0xe8e5a39d
  41c53e:	and    al,0x81
  41c540:	outs   dx,DWORD PTR ds:[esi]
  41c541:	sbb    al,0x95
  41c543:	sti    
  41c544:	test   BYTE PTR [edi+0x6dec5828],dl
  41c54a:	mov    ds:0x3fe8822d,eax
  41c54f:	aas    
  41c550:	mov    ch,0x57
  41c552:	test   eax,0xc1edf561
  41c557:	mov    ds:0x8d32a49c,eax
  41c55c:	or     al,ah
  41c55e:	mov    eax,0x99bc845e
  41c563:	push   ebp
  41c564:	push   edx
  41c565:	cmp    al,BYTE PTR [ebp-0x3067e7f8]
  41c56b:	or     ecx,DWORD PTR [edx]
  41c56d:	mov    bh,0x1e
  41c56f:	cmp    ch,BYTE PTR ss:[eax+0x45657032]
  41c576:	sub    ch,BYTE PTR [ebx]
  41c578:	or     esi,DWORD PTR [edx+0x16bfe418]
  41c57e:	cmp    bl,dl
  41c580:	(bad)  
  41c581:	jecxz  0x41c528
  41c583:	adc    edi,DWORD PTR ss:[ebp+0x14ebbfd9]
  41c58a:	sbb    ah,BYTE PTR [ecx]
  41c58c:	fldcw  WORD PTR [ebx]
  41c58e:	sub    DWORD PTR [ecx+0x34078a7a],ebx
  41c594:	icebp  
  41c595:	sub    DWORD PTR [eax-0x69aef962],esi
  41c59b:	std    
  41c59c:	arpl   bp,ax
  41c59e:	imul   ebx,DWORD PTR [esi],0xfffffff0
  41c5a1:	push   cs
  41c5a2:	fimul  WORD PTR [ebp+0x63382687]
  41c5a8:	imul   edx,edi,0xffffffa6
  41c5ab:	ins    BYTE PTR es:[edi],dx
  41c5ac:	jns    0x41c60e
  41c5ae:	and    edi,DWORD PTR [edi+ecx*2-0x4954640f]
  41c5b5:	adc    al,0xf6
  41c5b7:	push   edx
  41c5b8:	cs and al,0x8b
  41c5bb:	add    DWORD PTR [ecx],eax
  41c5bd:	rol    DWORD PTR [eax],0xc3
  41c5c0:	gs cs inc edi
  41c5c3:	mov    al,ds:0xa9060ef6
  41c5c8:	mov    ebp,0x4d07273a
  41c5cd:	jmp    0x41c648
  41c5cf:	adc    al,0xf0
  41c5d1:	outs   dx,DWORD PTR ds:[esi]
  41c5d2:	test   BYTE PTR [esi+0xb],dl
  41c5d5:	inc    ebp
  41c5d6:	sub    bl,BYTE PTR [ecx+0x34307dbf]
  41c5dc:	out    0xdc,eax
  41c5de:	jmp    0x4f2bc1ac
  41c5e3:	aad    0xf4
  41c5e5:	pusha  
  41c5e6:	adc    ebx,ebx
  41c5e8:	jp     0x41c656
  41c5ea:	aaa    
  41c5eb:	dec    ecx
  41c5ec:	fdivr  DWORD PTR [eax-0x5b]
  41c5ef:	and    eax,0xc9174302
  41c5f4:	(bad)  
  41c5f5:	idiv   bl
  41c5f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5f8:	(bad)  
  41c5f9:	jae    0x41c5d4
  41c5fb:	icebp  
  41c5fc:	dec    ebx
  41c5fd:	popf   
  41c5fe:	inc    ebp
  41c5ff:	inc    edx
  41c600:	ror    BYTE PTR [ecx],cl
  41c602:	int    0x79
  41c604:	das    
  41c605:	nop
  41c606:	dec    edx
  41c607:	daa    
  41c608:	(bad)  [eax]
  41c60a:	scas   al,BYTE PTR es:[edi]
  41c60b:	sbb    DWORD PTR [ebp-0xbd4b7f1],ebp
  41c611:	jg     0x41c619
  41c613:	out    dx,eax
  41c614:	cmp    bh,BYTE PTR [edi+eax*1]
  41c617:	jmp    0xf5caed84
  41c61c:	mov    ebp,0x838215e9
  41c621:	sbb    BYTE PTR ds:0xf869b95b,dl
  41c627:	shl    BYTE PTR [edi+esi*4],1
  41c62a:	loopne 0x41c617
  41c62c:	inc    si
  41c62e:	push   ecx
  41c62f:	clc    
  41c630:	imul   ecx,ebx,0xfb3b72d7
  41c636:	shl    DWORD PTR [edi-0x3a],1
  41c639:	ud2    
  41c63b:	cmp    al,0x30
  41c63d:	cld    
  41c63e:	jp     0x41c695
  41c640:	int    0x6
  41c642:	mov    ch,0x92
  41c644:	add    al,0x2b
  41c646:	ror    BYTE PTR [ebp-0x2cbeecf4],1
  41c64c:	or     eax,0xfa7be240
  41c651:	sbb    ebp,ebp
  41c653:	dec    esi
  41c654:	or     ch,bl
  41c656:	(bad)  
  41c657:	add    ebx,DWORD PTR gs:0xfe9e48c9
  41c65e:	xor    al,0xc6
  41c660:	sub    edx,DWORD PTR [esp+eax*2-0x11]
  41c664:	(bad)  
  41c665:	cs jg  0x41c67d
  41c668:	push   cs
  41c669:	lock mov dh,0x49
  41c66c:	jne    0x41c6d3
  41c66e:	xchg   edx,eax
  41c66f:	inc    edi
  41c670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c671:	imul   eax,DWORD PTR [edi],0xffffffdb
  41c674:	push   ss
  41c675:	or     eax,0x92a37adc
  41c67a:	jne    0x41c65a
  41c67c:	fcmovnu st,st(5)
  41c67e:	mov    al,0x78
  41c680:	les    esp,FWORD PTR [edx+0x11c6c313]
  41c686:	and    dl,BYTE PTR [edi+0x69b8bd05]
  41c68c:	or     eax,0xc03ad45
  41c691:	iret   
  41c692:	aas    
  41c693:	cmp    BYTE PTR [ebx],ah
  41c695:	fimul  WORD PTR [ecx+0x67]
  41c698:	pop    ecx
  41c699:	int3   
  41c69a:	aam    0x9e
  41c69c:	stos   BYTE PTR es:[edi],al
  41c69d:	mov    DWORD PTR [ebp-0x2d],ecx
  41c6a0:	into   
  41c6a1:	retf   0x63fe
  41c6a4:	and    DWORD PTR [esi-0x385dcd9b],edi
  41c6aa:	aad    0xe0
  41c6ac:	push   eax
  41c6ad:	pop    ss
  41c6ae:	test   BYTE PTR [esi],0x44
  41c6b1:	ds or  eax,0xf72090cc
  41c6b7:	adc    eax,0xa57b5742
  41c6bc:	push   ds
  41c6bd:	in     al,dx
  41c6be:	lock pop esp
  41c6c0:	push   esp
  41c6c1:	xchg   edx,eax
  41c6c2:	or     al,0xae
  41c6c4:	std    
  41c6c5:	push   esp
  41c6c6:	cdq    
  41c6c7:	sub    BYTE PTR [edi-0x48],ah
  41c6ca:	jbe    0x41c684
  41c6cc:	outs   dx,BYTE PTR ds:[esi]
  41c6cd:	push   0x20172650
  41c6d2:	sbb    dl,BYTE PTR ds:0xe425d01b
  41c6d8:	ja     0x41c6cc
  41c6da:	ret    0x4d84
  41c6dd:	pusha  
  41c6de:	cld    
  41c6df:	std    
  41c6e0:	add    DWORD PTR [eax-0xf65b7ee],ebx
  41c6e6:	mov    ds:0x3f6230fb,al
  41c6eb:	mov    eax,ds:0xa94791c3
  41c6f0:	fmul   QWORD PTR [ecx]
  41c6f2:	mov    eax,0x67163515
  41c6f7:	and    ebx,DWORD PTR [ebx-0xda41ab2]
  41c6fd:	xchg   edx,eax
  41c6fe:	enter  0xde9d,0xef
  41c702:	or     DWORD PTR [ebx+ebp*4-0x4e],eax
  41c706:	and    al,0x9b
  41c708:	sahf   
  41c709:	dec    ebp
  41c70a:	push   esi
  41c70b:	cld    
  41c70c:	dec    eax
  41c70d:	and    bh,BYTE PTR [esi+0x1a]
  41c710:	jno    0x41c70d
  41c712:	mov    dh,0x0
  41c714:	les    esi,FWORD PTR [ecx+0x1195298a]
  41c71a:	xor    bl,BYTE PTR [ebp+edi*4-0x697b575a]
  41c721:	push   ebx
  41c722:	jmp    0xdb1e:0x35170dde
  41c729:	sub    eax,0x8d822274
  41c72e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c72f:	mov    ds:0xef34d6a7,eax
  41c734:	and    eax,0xa2828c6c
  41c739:	aad    0xa6
  41c73b:	add    BYTE PTR [edx-0x1326cde],dh
  41c741:	lods   eax,DWORD PTR ds:[esi]
  41c742:	sub    edi,DWORD PTR [eax-0x74b75f76]
  41c748:	jnp    0x41c709
  41c74a:	add    ecx,esi
  41c74c:	test   eax,0xad8f9d15
  41c751:	test   BYTE PTR [eax],bh
  41c753:	xchg   BYTE PTR [edi-0x2c997bae],ch
  41c759:	jne    0x41c6f1
  41c75b:	sub    BYTE PTR [ecx+edi*2-0x19],ch
  41c75f:	stos   BYTE PTR es:[edi],al
  41c760:	repz fnstcw WORD PTR [edi]
  41c763:	pushf  
  41c764:	(bad)  
  41c765:	jo     0x41c790
  41c767:	(bad)  
  41c769:	push   0xfffffff7
  41c76b:	dec    ecx
  41c76c:	ins    DWORD PTR es:[edi],dx
  41c76d:	aas    
  41c76e:	fsubr  DWORD PTR ds:0xd8ad41ba
  41c774:	or     BYTE PTR [eax],dh
  41c776:	push   ebp
  41c777:	add    BYTE PTR [edx+0x3d],ah
  41c77a:	mov    esi,0xbafb370
  41c77f:	(bad)  
  41c781:	mov    cl,0x49
  41c783:	sub    dh,bl
  41c785:	loop   0x41c71d
  41c787:	paddq  mm3,QWORD PTR [edx+eax*1+0x6d949877]
  41c78f:	out    0xf0,eax
  41c791:	icebp  
  41c792:	and    BYTE PTR [esi],dl
  41c794:	outs   dx,BYTE PTR ds:[esi]
  41c795:	add    al,BYTE PTR [ecx-0x6b35edb2]
  41c79b:	mov    ah,0xbb
  41c79d:	in     al,dx
  41c79e:	jge    0x41c73f
  41c7a0:	ds lahf 
  41c7a2:	mov    ah,0x6f
  41c7a4:	push   eax
  41c7a5:	sbb    ecx,DWORD PTR [ebp+0x7fe599e]
  41c7ab:	cmp    dh,BYTE PTR [ebx-0x4381a95f]
  41c7b1:	push   esp
  41c7b2:	inc    esp
  41c7b3:	add    al,0x22
  41c7b5:	(bad)  
  41c7b6:	fbstp  TBYTE PTR [edx+0x72]
  41c7b9:	out    0xb1,eax
  41c7bb:	xor    BYTE PTR [eax-0x5c88ccfd],0x50
  41c7c2:	xor    al,0xe4
  41c7c4:	fs je  0x41c7de
  41c7c7:	in     eax,dx
  41c7c8:	mov    bh,0x55
  41c7ca:	repnz aad 0xde
  41c7cd:	lock pop eax
  41c7cf:	xchg   ecx,eax
  41c7d0:	test   BYTE PTR [eax],0xb
  41c7d3:	popf   
  41c7d4:	imul   edi,DWORD PTR [edi-0xead2067],0xffffffcf
  41c7db:	les    esi,FWORD PTR [ecx+0x25cc9d33]
  41c7e1:	in     al,0xa2
  41c7e3:	(bad)  
  41c7e4:	daa    
  41c7e5:	add    DWORD PTR [ebp-0x2b],ebx
  41c7e8:	mov    DWORD PTR [edi+0x50875c4b],esi
  41c7ee:	xchg   bh,ch
  41c7f0:	or     bl,ah
  41c7f2:	add    esi,DWORD PTR [ebp+0x4e]
  41c7f5:	(bad)  [ebx]
  41c7f7:	outs   dx,BYTE PTR ds:[esi]
  41c7f8:	fist   WORD PTR [eax-0x6cb4c2e1]
  41c7fe:	sub    cl,BYTE PTR [edx+eiz*8-0x76160386]
  41c805:	ins    BYTE PTR es:[edi],dx
  41c806:	dec    edx
  41c807:	lods   al,BYTE PTR ds:[esi]
  41c808:	pop    ebp
  41c809:	jmp    0xd0d591d5
  41c80e:	inc    ebp
  41c80f:	jge    0x41c857
  41c811:	sub    ebp,ebp
  41c813:	scas   al,BYTE PTR es:[edi]
  41c814:	das    
  41c815:	mov    ds,WORD PTR [eax+eax*4]
  41c818:	lock scas al,BYTE PTR es:[edi]
  41c81a:	mov    al,ds:0xa6f386e2
  41c81f:	jmp    0xf03e:0xba46b015
  41c826:	test   al,0x6
  41c828:	sbb    al,ah
  41c82a:	test   BYTE PTR [eax-0x14],al
  41c82d:	jmp    0xde38eb8e
  41c832:	(bad)  
  41c833:	fadd   QWORD PTR [ebp-0x1f48b43a]
  41c839:	jmp    0xf19e:0xbcfa8847
  41c840:	push   ebx
  41c841:	loop   0x41c85a
  41c843:	or     BYTE PTR [eax],al
  41c845:	data16 jle 0x41c88e
  41c848:	dec    esp
  41c849:	mov    dh,0xff
  41c84b:	mov    esp,0x23b6eaa0
  41c850:	nop
  41c851:	out    dx,al
  41c852:	outs   dx,BYTE PTR ds:[esi]
  41c853:	dec    ebx
  41c854:	test   BYTE PTR [edi-0x6970c74f],ah
  41c85a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41c85c:	mov    ?,WORD PTR [edx]
  41c85e:	mov    edi,0xc09c828e
  41c863:	aaa    
  41c864:	imul   ebp,DWORD PTR [ebp-0x34],0x36
  41c868:	(bad)  
  41c86a:	pop    ds
  41c86b:	repnz lods al,BYTE PTR ds:[esi]
  41c86d:	ins    BYTE PTR es:[edi],dx
  41c86e:	mov    edi,0x7c5da3cb
  41c873:	mov    dh,0x24
  41c875:	das    
  41c876:	stos   DWORD PTR es:[edi],eax
  41c877:	addr16 xchg ecx,eax
  41c879:	push   ss
  41c87a:	pop    ss
  41c87b:	and    eax,0xc96c0dab
  41c880:	scas   al,BYTE PTR es:[edi]
  41c881:	das    
  41c882:	dec    ebp
  41c883:	into   
  41c884:	repnz mov DWORD PTR [edx+0x596e9a34],0xfb169a72
  41c88f:	shr    DWORD PTR [eax+0x30],1
  41c892:	test   BYTE PTR [edx+0xcc1d77a],cl
  41c898:	ins    DWORD PTR es:[edi],dx
  41c899:	mov    WORD PTR [edi-0x28],fs
  41c89c:	push   0x11
  41c89e:	and    ebx,edx
  41c8a0:	push   esp
  41c8a1:	jmp    0xe0b7:0x2e972261
  41c8a8:	or     dl,dl
  41c8aa:	pop    es
  41c8ab:	push   es
  41c8ac:	pusha  
  41c8ad:	outs   dx,DWORD PTR ds:[esi]
  41c8ae:	sar    eax,0x79
  41c8b1:	pop    ecx
  41c8b2:	jns    0x41c91b
  41c8b4:	and    ebx,DWORD PTR [edi-0x14]
  41c8b7:	jbe    0x41c934
  41c8b9:	sub    eax,0xea07e70
  41c8be:	leave  
  41c8bf:	ins    DWORD PTR es:[edi],dx
  41c8c0:	add    al,BYTE PTR [edx]
  41c8c2:	adc    DWORD PTR [edi+0x16],esp
  41c8c5:	mov    edx,0xa67f0a12
  41c8ca:	call   0xe76442e8
  41c8cf:	cwde   
  41c8d0:	clc    
  41c8d1:	ficom  DWORD PTR [ecx+0x4c56c033]
  41c8d7:	jp     0x41c8e8
  41c8d9:	sbb    al,0x39
  41c8db:	(bad)  
  41c8dc:	aam    0xee
  41c8de:	shl    edx,0x50
  41c8e1:	dec    esi
  41c8e2:	push   cs
  41c8e3:	fistp  DWORD PTR [ebx]
  41c8e5:	mov    DWORD PTR ds:0x89307c97,0xc307e261
  41c8ef:	xor    bl,dl
  41c8f1:	addr16 xchg esi,eax
  41c8f3:	pop    es
  41c8f4:	sahf   
  41c8f5:	and    eax,0xfdcd28d5
  41c8fa:	sbb    esi,edx
  41c8fc:	sahf   
  41c8fd:	push   ebp
  41c8fe:	push   ds
  41c8ff:	lods   eax,DWORD PTR ds:[esi]
  41c900:	cs fwait
  41c902:	loop   0x41c946
  41c904:	mov    bh,0xe
  41c906:	rol    esp,0xdd
  41c909:	gs je  0x41c8ca
  41c90c:	cmc    
  41c90d:	pop    eax
  41c90e:	pop    eax
  41c90f:	push   0xffffffad
  41c911:	mov    ah,0x2d
  41c913:	cmpxchg BYTE PTR [eax],al
  41c916:	scas   eax,DWORD PTR es:[edi]
  41c917:	push   cs
  41c918:	sub    eax,0x332feca6
  41c91d:	aad    0xdc
  41c91f:	addr16 push ss
  41c921:	lahf   
  41c922:	and    BYTE PTR [eax-0x7e],0x6c
  41c926:	xor    edx,DWORD PTR [eax]
  41c928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c929:	out    0xc,eax
  41c92b:	sub    esi,ebx
  41c92d:	lahf   
  41c92e:	ja     0x41c98a
  41c930:	fmul   DWORD PTR [eax+0x5792dc66]
  41c936:	std    
  41c937:	outs   dx,DWORD PTR ds:[esi]
  41c938:	sub    eax,0xbc6af443
  41c93d:	inc    eax
  41c93e:	jb     0x41c917
  41c940:	jecxz  0x41c9a7
  41c942:	icebp  
  41c943:	xchg   ecx,eax
  41c944:	or     al,0x63
  41c946:	sbb    al,0xe4
  41c948:	lods   eax,DWORD PTR ds:[esi]
  41c949:	sbb    ah,BYTE PTR [eax-0x7f]
  41c94c:	mov    DWORD PTR [ecx],esi
  41c94e:	xchg   DWORD PTR [edx+0x43280ad4],eax
  41c954:	lock cmp bh,BYTE PTR [eax+0x6]
  41c958:	lahf   
  41c959:	mov    dl,0xac
  41c95b:	ds repz dec edx
  41c95e:	push   ebx
  41c95f:	jo     0x41c8e8
  41c961:	ja     0x41c987
  41c963:	push   ss
  41c964:	mov    edx,DWORD PTR [esi-0x6b14b5af]
  41c96a:	inc    ebp
  41c96b:	rol    esi,cl
  41c96d:	adc    eax,0x28882d11
  41c972:	sar    bh,cl
  41c974:	mov    eax,ds:0x7cc8e869
  41c979:	test   al,0x5f
  41c97b:	fwait
  41c97c:	dec    eax
  41c97e:	jmp    0x2c0:0x38f0d610
  41c985:	imul   esi,DWORD PTR [ecx],0xa260ae07
  41c98b:	outs   dx,DWORD PTR ds:[esi]
  41c98c:	or     al,0xff
  41c98e:	adc    eax,0xc04ba070
  41c993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c994:	cmp    esp,DWORD PTR [edi-0x3d]
  41c997:	push   esi
  41c998:	call   0x23298245
  41c99d:	ins    DWORD PTR es:[edi],dx
  41c99e:	enter  0x2500,0x6a
  41c9a2:	sahf   
  41c9a3:	sub    DWORD PTR [edx+0xe604466],ecx
  41c9a9:	cmp    eax,esp
  41c9ab:	pop    esp
  41c9ac:	dec    esp
  41c9ad:	push   edx
  41c9ae:	cmp    cl,ch
  41c9b0:	inc    edi
  41c9b1:	push   edi
  41c9b2:	int3   
  41c9b3:	push   ebp
  41c9b4:	mov    BYTE PTR [ecx+0x1b],0x3a
  41c9b8:	loop   0x41c966
  41c9ba:	hlt    
  41c9bb:	cmp    esi,DWORD PTR [edi]
  41c9bd:	ror    al,1
  41c9bf:	xor    eax,0x5bccb862
  41c9c4:	cs call 0x5109:0x8de16196
  41c9cc:	jmp    0x75eba632
  41c9d1:	dec    edx
  41c9d2:	ss in  al,dx
  41c9d4:	cmp    DWORD PTR [ebx+0x2b7a4d53],eax
  41c9da:	cmp    dl,ch
  41c9dc:	xchg   BYTE PTR [edi],ch
  41c9de:	pop    edi
  41c9e0:	push   es
  41c9e1:	mov    DWORD PTR [edx],0x96ae5dcc
  41c9e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9e8:	outs   dx,BYTE PTR ds:[esi]
  41c9e9:	aas    
  41c9ea:	ror    BYTE PTR [edi-0x71979d5f],cl
  41c9f0:	push   eax
  41c9f1:	pop    DWORD PTR [ecx-0x3a]
  41c9f4:	push   edi
  41c9f5:	mov    dh,0xfe
  41c9f7:	mov    dh,0x8d
  41c9f9:	test   BYTE PTR [esi+0x4d],0x6
  41c9fd:	dec    eax
  41c9fe:	out    0xdb,al
  41ca00:	daa    
  41ca01:	hlt    
  41ca02:	adc    bh,BYTE PTR [ecx-0x55]
  41ca05:	iret   
  41ca06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca07:	mov    al,ds:0xf40d9f74
  41ca0c:	cmp    DWORD PTR [ecx+0x4c],ebp
  41ca0f:	jo     0x41c99e
  41ca11:	cmp    ah,ch
  41ca13:	mov    dh,0xba
  41ca15:	js     0x41c9db
  41ca17:	dec    ecx
  41ca18:	fbld   TBYTE PTR [edi+0xd]
  41ca1b:	sub    DWORD PTR [ebp-0x1a9ce22c],edi
  41ca21:	mov    bh,0x13
  41ca23:	pop    ebx
  41ca24:	retf   
  41ca25:	cs dec ecx
  41ca27:	rcr    BYTE PTR [ebp+edx*4-0x5b783911],0x86
  41ca2f:	mov    bh,0xa7
  41ca31:	sub    DWORD PTR [eax+ecx*4-0x3d],0x73e88c51
  41ca39:	pop    eax
  41ca3a:	dec    eax
  41ca3b:	pop    ebp
  41ca3c:	dec    edi
  41ca3d:	add    DWORD PTR [ebx],ebx
  41ca3f:	add    al,0xb6
  41ca41:	or     al,0x2f
  41ca43:	sbb    al,0x62
  41ca45:	dec    ebp
  41ca46:	pop    esi
  41ca47:	hlt    
  41ca48:	push   edx
  41ca49:	jae    0x41cac8
  41ca4b:	push   ss
  41ca4c:	and    BYTE PTR [edx-0x596f1d0],dl
  41ca52:	das    
  41ca53:	ja     0x41cad4
  41ca55:	pop    ebp
  41ca56:	jae    0x41cac9
  41ca58:	xchg   esi,eax
  41ca59:	dec    edx
  41ca5a:	ret    
  41ca5b:	scas   eax,DWORD PTR es:[edi]
  41ca5c:	pusha  
  41ca5d:	into   
  41ca5e:	inc    ebx
  41ca5f:	test   DWORD PTR [esi],ebp
  41ca61:	int3   
  41ca62:	pop    es
  41ca63:	jle    0x41ca88
  41ca65:	lods   eax,DWORD PTR ds:[esi]
  41ca66:	sbb    DWORD PTR [ecx+0x6c],esi
  41ca69:	push   edi
  41ca6a:	sub    al,0x3d
  41ca6c:	mov    edi,0xa9dcc478
  41ca71:	outs   dx,DWORD PTR ds:[esi]
  41ca72:	outs   dx,DWORD PTR ds:[esi]
  41ca73:	mov    eax,ds:0xa007b5dc
  41ca78:	(bad)  
  41ca79:	ret    
  41ca7a:	mov    ah,0x69
  41ca7c:	xchg   edi,eax
  41ca7d:	lock cmp DWORD PTR [esi],edi
  41ca80:	sub    eax,0xb92e2d9b
  41ca85:	xchg   edx,eax
  41ca86:	jl     0x41ca82
  41ca88:	sbb    cl,ah
  41ca8a:	scas   al,BYTE PTR es:[edi]
  41ca8b:	dec    ebx
  41ca8c:	retf   0x29ac
  41ca8f:	push   0xffffffb4
  41ca91:	xor    eax,0x925979ff
  41ca96:	in     al,0xa7
  41ca98:	out    dx,eax
  41ca99:	mov    edx,0x5b52b1e5
  41ca9e:	mov    esi,0x26bc2ead
  41caa3:	scas   al,BYTE PTR es:[edi]
  41caa4:	and    ecx,DWORD PTR [ebx-0x29d1c5de]
  41caaa:	lods   al,BYTE PTR ds:[esi]
  41caab:	xor    ebx,esp
  41caad:	cli    
  41caae:	pushf  
  41caaf:	iret   
  41cab0:	mov    ch,0x36
  41cab2:	push   ss
  41cab3:	lds    ebp,FWORD PTR [eax]
  41cab5:	jecxz  0x41cb30
  41cab7:	push   ebp
  41cab8:	dec    edi
  41cab9:	xchg   esp,eax
  41caba:	ins    BYTE PTR es:[edi],dx
  41cabb:	sbb    eax,0x748f084
  41cac0:	push   ebp
  41cac1:	inc    edx
  41cac2:	sbb    eax,0x30bebe4f
  41cac7:	lods   eax,DWORD PTR ds:[esi]
  41cac8:	lds    edi,FWORD PTR ds:[eax]
  41cacb:	pop    edx
  41cacc:	jnp    0x41cad2
  41cace:	inc    eax
  41cacf:	cmp    cl,ch
  41cad1:	dec    esi
  41cad2:	div    DWORD PTR [ecx]
  41cad4:	mov    DWORD PTR [ebx-0x1e],ebp
  41cad7:	cmp    bh,BYTE PTR [esi-0x62614f5]
  41cadd:	adc    edx,DWORD PTR [ebx+eiz*4-0x38d99c61]
  41cae4:	mov    DWORD PTR [edi+0x20f52fe6],ebp
  41caea:	div    DWORD PTR [edi-0x246722eb]
  41caf0:	fld    QWORD PTR [edx+0x12]
  41caf3:	jle    0x41cb5d
  41caf5:	pushf  
  41caf6:	mov    bh,bl
  41caf8:	rcl    BYTE PTR [eax+0x7b],cl
  41cafb:	jp     0x41cb4b
  41cafd:	xchg   esp,eax
  41cafe:	jbe    0x41cb1f
  41cb00:	scas   al,BYTE PTR es:[edi]
  41cb01:	call   0x81f8bfce
  41cb06:	add    bh,BYTE PTR [esi]
  41cb08:	in     eax,0x91
  41cb0a:	dec    edx
  41cb0b:	jae    0x41ca99
  41cb0d:	adc    eax,eax
  41cb0f:	(bad)  
  41cb11:	cmc    
  41cb12:	outs   dx,DWORD PTR ds:[esi]
  41cb13:	(bad)  
  41cb14:	pop    ebx
  41cb15:	and    al,0xf8
  41cb17:	sub    dl,dh
  41cb19:	scas   al,BYTE PTR es:[edi]
  41cb1a:	ja     0x41cb07
  41cb1c:	xchg   edi,eax
  41cb1d:	dec    esp
  41cb1e:	mov    dl,0x32
  41cb20:	enter  0x219f,0xc5
  41cb24:	jne    0x41cb90
  41cb26:	mov    edi,0x2ed62dc1
  41cb2b:	call   0x5ea8:0x81e11472
  41cb32:	hlt    
  41cb33:	test   cl,ch
  41cb35:	ret    
  41cb36:	int    0x45
  41cb38:	scas   al,BYTE PTR es:[edi]
  41cb39:	sub    esi,ecx
  41cb3b:	jno    0x41cb2c
  41cb3d:	into   
  41cb3e:	addr16 pop sp
  41cb41:	xor    DWORD PTR [edx-0x50],esp
  41cb44:	push   ebx
  41cb45:	dec    ecx
  41cb46:	and    DWORD PTR [ecx+0x5e],ebx
  41cb49:	xor    ch,BYTE PTR [eax]
  41cb4b:	xor    ch,BYTE PTR [edi]
  41cb4d:	mov    cl,0xae
  41cb4f:	test   DWORD PTR [edi],esp
  41cb51:	inc    edx
  41cb52:	rol    DWORD PTR [ebp-0x65],1
  41cb55:	iret   
  41cb56:	les    ebp,FWORD PTR [edi+0x19]
  41cb59:	xchg   ebx,eax
  41cb5a:	xchg   ebx,eax
  41cb5b:	pop    edi
  41cb5c:	xor    edx,DWORD PTR [ebp-0x6d]
  41cb5f:	mul    DWORD PTR [ebp-0x379c5752]
  41cb65:	adc    ah,BYTE PTR [edx]
  41cb67:	fdivr  DWORD PTR [edx]
  41cb69:	lds    edi,FWORD PTR [edi+edi*4+0x78]
  41cb6d:	jnp    0x41cb96
  41cb6f:	pop    ss
  41cb70:	or     edi,DWORD PTR [esi]
  41cb72:	pop    ss
  41cb73:	enter  0x5056,0xd3
  41cb77:	stc    
  41cb78:	daa    
  41cb79:	mov    esp,0x226b3696
  41cb7e:	sbb    DWORD PTR [ecx-0xf],esi
  41cb81:	stos   DWORD PTR es:[edi],eax
  41cb82:	ins    DWORD PTR es:[edi],dx
  41cb83:	mov    ds:0x88ae2260,eax
  41cb88:	test   al,0x52
  41cb8a:	ins    BYTE PTR es:[edi],dx
  41cb8b:	push   esp
  41cb8c:	dec    eax
  41cb8d:	leave  
  41cb8e:	iret   
  41cb8f:	ja     0x41cbbe
  41cb91:	in     al,dx
  41cb92:	or     ah,BYTE PTR [edi+0x35]
  41cb95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb96:	shr    BYTE PTR [esi],1
  41cb98:	adc    al,0x1b
  41cb9a:	inc    ecx
  41cb9b:	push   DWORD PTR [edi+0x59]
  41cb9e:	xchg   BYTE PTR [eax],cl
  41cba0:	add    DWORD PTR [esi-0x47abd68d],esi
  41cba6:	cdq    
  41cba7:	or     al,0xdb
  41cba9:	sbb    al,0x15
  41cbab:	jecxz  0x41cb66
  41cbad:	push   0x15711ea7
  41cbb2:	aam    0xea
  41cbb4:	push   ecx
  41cbb5:	mov    WORD PTR [eax+edx*4],?
  41cbb8:	sbb    al,0xd1
  41cbba:	mov    edi,0xece76a50
  41cbbf:	jne    0x41cbac
  41cbc1:	scas   eax,DWORD PTR es:[edi]
  41cbc2:	jl     0x41cbf3
  41cbc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbc5:	xor    bl,0x78
  41cbc8:	scas   al,BYTE PTR es:[edi]
  41cbc9:	push   0x4743df58
  41cbce:	les    edx,FWORD PTR [ebx+0xe]
  41cbd1:	arpl   WORD PTR [esi],sp
  41cbd3:	push   edi
  41cbd4:	dec    eax
  41cbd5:	ja     0x41cb9e
  41cbd7:	cwde   
  41cbd8:	pop    ebx
  41cbd9:	stos   BYTE PTR es:[edi],al
  41cbda:	mov    cl,0x16
  41cbdc:	iret   
  41cbdd:	lods   al,BYTE PTR ss:[esi]
  41cbdf:	xchg   DWORD PTR [ecx+0x1fe99f97],ebx
  41cbe5:	push   ds
  41cbe6:	adc    BYTE PTR [ecx+0x1f],0x1b
  41cbea:	pop    eax
  41cbeb:	imul   edi,DWORD PTR [edi],0x30
  41cbee:	neg    dl
  41cbf0:	xor    eax,0x46f9819a
  41cbf5:	test   BYTE PTR [edx+edi*8],dl
  41cbf8:	pop    eax
  41cbf9:	push   esp
  41cbfa:	mov    edi,0x93e6521e
  41cbff:	adc    edi,DWORD PTR ds:0x32cb9b89
  41cc05:	xchg   esi,eax
  41cc06:	and    al,BYTE PTR [esp+ecx*2-0x4fb12af0]
  41cc0d:	pop    esi
  41cc0e:	into   
  41cc0f:	leave  
  41cc10:	test   eax,0xd67aca76
  41cc15:	jmp    0x41cc45
  41cc17:	mov    al,0xc9
  41cc19:	in     al,dx
  41cc1a:	xchg   esp,eax
  41cc1b:	pop    edi
  41cc1c:	mov    es,WORD PTR [edx]
  41cc1e:	(bad)  
  41cc1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc20:	fcom   DWORD PTR [esi-0x78]
  41cc23:	imul   BYTE PTR [ecx]
  41cc25:	jg     0x41cc0f
  41cc27:	cmp    ebp,esi
  41cc29:	repz sbb eax,0xad7bd340
  41cc2f:	xchg   ebp,eax
  41cc30:	(bad)  
  41cc31:	stos   BYTE PTR es:[edi],al
  41cc32:	pusha  
  41cc33:	dec    esi
  41cc34:	mov    BYTE PTR [esi+0x59],dl
  41cc37:	sbb    DWORD PTR [edx+edi*4-0x3e],ebp
  41cc3b:	push   ebx
  41cc3c:	xlat   BYTE PTR ds:[ebx]
  41cc3d:	adc    al,0x45
  41cc3f:	add    al,0x94
  41cc41:	dec    eax
  41cc42:	mov    al,0x35
  41cc44:	fwait
  41cc45:	addr16 push ebp
  41cc47:	loopne 0x41cc9f
  41cc49:	lock pop ebp
  41cc4b:	and    DWORD PTR [edx-0x33454e63],edi
  41cc51:	jbe    0x41cbe0
  41cc53:	jg     0x41cc24
  41cc55:	jmp    0x989d:0xaba5467e
  41cc5c:	sbb    dl,BYTE PTR [ecx-0x696db779]
  41cc62:	fnstenv [edx-0x7d]
  41cc65:	ins    DWORD PTR es:[edi],dx
  41cc66:	or     BYTE PTR [ebp-0x2598c00b],0xb
  41cc6d:	adc    esp,ebx
  41cc6f:	and    DWORD PTR [ecx],ecx
  41cc71:	jle    0x41cc1d
  41cc73:	ret    0xb855
  41cc76:	lods   eax,DWORD PTR ds:[esi]
  41cc77:	aad    0x29
  41cc79:	push   0x6f
  41cc7b:	jecxz  0x41cc7b
  41cc7d:	sub    DWORD PTR [ebp+0x78e2a22e],edi
  41cc83:	fdiv   QWORD PTR [eax+0x78a08c40]
  41cc89:	outs   dx,BYTE PTR ds:[esi]
  41cc8a:	(bad)  
  41cc8b:	push   ds
  41cc8c:	stos   BYTE PTR es:[edi],al
  41cc8d:	ds lods eax,DWORD PTR cs:[esi]
  41cc90:	mov    ebp,0xc2298f7e
  41cc95:	jle    0x41ccec
  41cc97:	xchg   BYTE PTR [eax],cl
  41cc99:	dec    ebx
  41cc9a:	lods   al,BYTE PTR ds:[esi]
  41cc9b:	ror    DWORD PTR [edi+0xa],1
  41cc9e:	popa   
  41cc9f:	mov    eax,ds:0xfc9e19da
  41cca4:	sub    DWORD PTR [eax-0x83b3ff8],ecx
  41ccaa:	push   ss
  41ccab:	inc    ebp
  41ccac:	loopne 0x41cc71
  41ccae:	xchg   esi,eax
  41ccaf:	iret   
  41ccb0:	or     BYTE PTR ds:0xe0178a23,cl
  41ccb6:	cmp    ch,BYTE PTR [ecx+0x52]
  41ccb9:	(bad)
  41ccbd:	fidiv  WORD PTR [esi+0x65de0539]
  41ccc3:	cmp    BYTE PTR [edi-0x4a],0x70
  41ccc7:	test   ebx,0x5269d8e1
  41cccd:	loopne 0x41cca8
  41cccf:	add    esp,DWORD PTR [edx+0x37ebd9d]
  41ccd5:	push   0xffffffe5
  41ccd7:	jp     0x41cd02
  41ccd9:	fild   QWORD PTR [esi+0x3b4b0128]
  41ccdf:	ins    BYTE PTR es:[edi],dx
  41cce0:	sub    ecx,DWORD PTR [edi-0x8]
  41cce3:	push   edx
  41cce4:	xor    DWORD PTR [ebx+0xe],0xe65215dd
  41cceb:	sbb    bl,bh
  41cced:	inc    ecx
  41ccee:	pop    esi
  41ccef:	aaa    
  41ccf0:	shr    DWORD PTR [edx-0x38facffb],cl
  41ccf6:	into   
  41ccf7:	xchg   ebx,eax
  41ccf8:	jp     0x41ccca
  41ccfa:	loopne 0x41cd45
  41ccfc:	stos   DWORD PTR es:[edi],eax
  41ccfd:	cmp    bl,BYTE PTR [esi+0x279b9328]
  41cd03:	sub    DWORD PTR [ebx-0x17],0x2f
  41cd07:	dec    esi
  41cd08:	sbb    al,0x3d
  41cd0a:	or     ecx,DWORD PTR [edi+0x2c]
  41cd0d:	ret    0x7cfa
  41cd10:	loope  0x41cd6d
  41cd12:	mov    ebx,0x3058464f
  41cd17:	adc    ebx,DWORD PTR [ebp*2-0x66905d3f]
  41cd1e:	repz (bad) [edi]
  41cd21:	add    eax,0x97735023
  41cd26:	in     al,0xed
  41cd28:	mov    ebx,0xb4c36613
  41cd2d:	add    bl,BYTE PTR [ecx-0x4a]
  41cd30:	retf   0x138d
  41cd33:	mov    ebx,0xba121699
  41cd38:	dec    edx
  41cd39:	pop    ds
  41cd3a:	or     ebp,DWORD PTR [ebx+0x5c]
  41cd3d:	dec    ebx
  41cd3e:	pop    ebx
  41cd3f:	ret    0xb0fb
  41cd42:	adc    edi,DWORD PTR [ebp-0x71876fe4]
  41cd48:	cli    
  41cd49:	btr    DWORD PTR [ecx+0x4bef0676],esp
  41cd50:	lock inc edi
  41cd52:	pop    edx
  41cd53:	pop    edi
  41cd54:	clc    
  41cd55:	cmp    BYTE PTR [eax-0x57e65db6],dh
  41cd5b:	stc    
  41cd5c:	push   edi
  41cd5d:	push   0x7a31bd3
  41cd62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd63:	lods   eax,DWORD PTR ds:[esi]
  41cd64:	pop    ecx
  41cd65:	(bad)  
  41cd66:	iret   
  41cd67:	pop    ebx
  41cd68:	lods   eax,DWORD PTR ds:[esi]
  41cd69:	outs   dx,BYTE PTR ds:[esi]
  41cd6a:	rcr    DWORD PTR [eax+ebp*8-0x37],cl
  41cd6e:	loop   0x41cde3
  41cd70:	jmp    0xd2cf:0x557d29e
  41cd77:	retf   
  41cd78:	in     eax,dx
  41cd79:	pop    edi
  41cd7a:	mov    ah,BYTE PTR [ecx-0x6]
  41cd7d:	add    al,bh
  41cd7f:	lods   eax,DWORD PTR ds:[esi]
  41cd80:	pop    ss
  41cd81:	mov    dl,BYTE PTR [eax]
  41cd83:	ficom  WORD PTR [ebx]
  41cd85:	xchg   ebp,eax
  41cd86:	out    dx,eax
  41cd87:	jmp    0x41cd42
  41cd89:	or     esp,DWORD PTR [ecx]
  41cd8b:	jno    0x41cd30
  41cd8d:	mov    edi,0x582109db
  41cd92:	push   edi
  41cd93:	inc    ecx
  41cd94:	mov    esi,ecx
  41cd96:	js     0x41cde2
  41cd98:	dec    edi
  41cd99:	scas   al,BYTE PTR es:[edi]
  41cd9a:	add    BYTE PTR [ebx-0xa],0xc3
  41cd9e:	dec    ebp
  41cd9f:	push   cs
  41cda0:	xor    eax,0xe2bf814e
  41cda5:	call   FWORD PTR [esi]
  41cda7:	inc    eax
  41cda8:	mov    bl,0x29
  41cdaa:	inc    edx
  41cdab:	xor    al,bl
  41cdad:	jecxz  0x41ce0f
  41cdaf:	fimul  DWORD PTR [eax-0x41]
  41cdb2:	pop    esi
  41cdb3:	add    ebx,edi
  41cdb5:	out    0xd4,al
  41cdb7:	mov    ch,0x56
  41cdb9:	mov    al,ds:0xb4fa78fe
  41cdbe:	jp     0x41cd40
  41cdc0:	xor    al,0x7
  41cdc2:	repnz daa 
  41cdc4:	mov    ds:0xfecda532,eax
  41cdc9:	and    BYTE PTR [eax-0x11769af],bl
  41cdcf:	pop    esp
  41cdd0:	out    dx,eax
  41cdd1:	rol    DWORD PTR [eax+0x75717dc5],0x70
  41cdd8:	scas   al,BYTE PTR es:[edi]
  41cdd9:	inc    edx
  41cdda:	xchg   esp,eax
  41cddb:	not    DWORD PTR ds:0xfd947762
  41cde1:	ja     0x41ce26
  41cde3:	inc    DWORD PTR [ebx-0x4d]
  41cde6:	pushf  
  41cde7:	sub    esi,DWORD PTR [ebp+eax*1-0x4b]
  41cdeb:	push   esi
  41cdec:	adc    eax,DWORD PTR [edi-0x26]
  41cdef:	push   esi
  41cdf0:	mov    al,BYTE PTR [edi+0x5d]
  41cdf3:	hlt    
  41cdf4:	cmc    
  41cdf5:	arpl   bp,ax
  41cdf7:	lods   eax,DWORD PTR ds:[esi]
  41cdf8:	sub    dl,bl
  41cdfa:	iret   
  41cdfb:	scas   al,BYTE PTR es:[edi]
  41cdfc:	out    dx,al
  41cdfd:	and    BYTE PTR [eax-0xed57dfb],dh
  41ce03:	cmp    dl,BYTE PTR [eax+0x25]
  41ce06:	add    eax,0xb5f007f0
  41ce0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce0c:	mov    bh,0x1a
  41ce0e:	xchg   edi,eax
  41ce0f:	test   al,0x15
  41ce11:	and    al,0x6f
  41ce13:	jp     0x41ce76
  41ce15:	mov    cl,0x6f
  41ce17:	pop    ecx
  41ce18:	jmp    0x1abc9965
  41ce1d:	(bad)  
  41ce1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce1f:	(bad)  
  41ce20:	xor    al,0x3a
  41ce22:	sti    
  41ce23:	sbb    al,0x8f
  41ce25:	mov    ds:0x2e4a19c4,eax
  41ce2a:	pop    esp
  41ce2b:	cmp    eax,0x74d3ed5c
  41ce30:	in     al,0xe2
  41ce32:	or     eax,0xeac8ca77
  41ce37:	fadd   QWORD PTR [ebp+0x6b]
  41ce3a:	mov    WORD PTR [ecx+0x33],ds
  41ce3d:	mov    edi,0xc374b695
  41ce42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce43:	dec    esi
  41ce44:	loopne 0x41ce98
  41ce46:	sbb    al,BYTE PTR [ecx]
  41ce48:	pop    ecx
  41ce49:	jno    0x41ce24
  41ce4b:	leave  
  41ce4c:	or     al,al
  41ce4e:	in     al,dx
  41ce4f:	jecxz  0x41ce32
  41ce51:	inc    esi
  41ce52:	mov    gs,WORD PTR ds:0x2b7e0fbf
  41ce58:	pop    ebp
  41ce59:	or     DWORD PTR [ecx-0x3f],eax
  41ce5c:	inc    ebx
  41ce5d:	sbb    al,0xfb
  41ce5f:	adc    eax,0xac3a57cf
  41ce64:	psubw  mm6,QWORD PTR [esi+0x285f62ac]
  41ce6b:	jmp    0xef0f:0x8ff78415
  41ce72:	adc    DWORD PTR [edi-0x2f],edx
  41ce75:	retf   0xd369
  41ce78:	out    dx,al
  41ce79:	js     0x41cecc
  41ce7b:	mov    al,ds:0xbee8d4e8
  41ce80:	in     eax,dx
  41ce81:	cli    
  41ce82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce83:	sbb    BYTE PTR [ecx-0x4e],dl
  41ce86:	aam    0xea
  41ce88:	js     0x41ce47
  41ce8a:	fdivr  QWORD PTR [edi+0xf]
  41ce8d:	jb     0x41ce16
  41ce8f:	mov    eax,0x32768119
  41ce94:	cmp    eax,0x6334c2e4
  41ce99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce9a:	iret   
  41ce9b:	mov    al,0xe3
  41ce9d:	adc    edx,ecx
  41ce9f:	fistp  WORD PTR [esi-0x1c66f7ef]
  41cea5:	and    DWORD PTR [ebx+0x6e],esp
  41cea8:	gs push cs
  41ceaa:	ins    BYTE PTR es:[edi],dx
  41ceab:	out    0x50,al
  41cead:	jmp    0xf325:0xa95e78fd
  41ceb4:	imul   esp
  41ceb6:	int3   
  41ceb7:	cmp    al,BYTE PTR [eax]
  41ceb9:	mov    DWORD PTR fs:[esi],0xef4fd019
  41cec0:	xor    edi,ebp
  41cec2:	leave  
  41cec3:	bound  eax,QWORD PTR [ecx]
  41cec5:	xor    al,BYTE PTR [edx]
  41cec7:	or     dh,BYTE PTR [ebp-0x17a8c5db]
  41cecd:	or     ebp,esp
  41cecf:	push   esp
  41ced0:	ds push es
  41ced2:	add    ebp,DWORD PTR [edx]
  41ced4:	dec    ecx
  41ced5:	loope  0x41ce91
  41ced7:	push   ebp
  41ced8:	jg     0x41cec6
  41ceda:	test   BYTE PTR [eax+0x2a],cl
  41cedd:	pop    eax
  41cede:	retf   0xfec3
  41cee1:	pop    esi
  41cee2:	mov    WORD PTR [ecx-0x1edbf8cf],es
  41cee8:	mov    ebp,DWORD PTR [ebx-0x80]
  41ceeb:	daa    
  41ceec:	sbb    DWORD PTR [eax-0x4f8b4f4d],0x771311b5
  41cef6:	popf   
  41cef7:	stos   BYTE PTR es:[edi],al
  41cef8:	xlat   BYTE PTR ds:[ebx]
  41cef9:	adc    DWORD PTR [edx+0x67],0x15
  41cefd:	jmp    0x913b6935
  41cf02:	jp     0x41cf05
  41cf04:	mov    ds:0xd08e52ca,al
  41cf09:	xlat   BYTE PTR ds:[ebx]
  41cf0a:	sbb    al,0xa6
  41cf0c:	ficom  DWORD PTR [edx-0x54]
  41cf0f:	mov    BYTE PTR [edx-0x6b5c07f5],0x49
  41cf16:	push   esp
  41cf17:	pop    edx
  41cf18:	push   DWORD PTR [esi+0x57d8d939]
  41cf1e:	xor    esp,esp
  41cf20:	imul   esp,ebx,0x5b7fd2ff
  41cf26:	dec    esi
  41cf27:	ret    0xfd0d
  41cf2a:	push   esp
  41cf2b:	xor    BYTE PTR [edi],al
  41cf2d:	retf   
  41cf2e:	out    0xc0,al
  41cf30:	jbe    0x41cecc
  41cf32:	mov    ds:0x481f3a5d,al
  41cf37:	or     al,0x3
  41cf39:	fstp   DWORD PTR [eax]
  41cf3b:	in     eax,dx
  41cf3c:	ror    DWORD PTR [ebx],1
  41cf3e:	mov    edi,0x13b92bbd
  41cf43:	fsubr  DWORD PTR [ebx+ecx*1+0x4de2a532]
  41cf4a:	jno    0x41cef8
  41cf4c:	das    
  41cf4d:	mov    cl,0x8d
  41cf4f:	xchg   esi,eax
  41cf50:	pop    ecx
  41cf51:	jns    0x41cefb
  41cf53:	dec    ebx
  41cf54:	push   ds
  41cf55:	popa   
  41cf56:	pop    ds
  41cf57:	sub    eax,DWORD PTR [eax-0x80]
  41cf5a:	mov    bh,0xe5
  41cf5c:	shr    DWORD PTR [edi-0x4c9ef07b],0x75
  41cf63:	addr16 or ch,0xad
  41cf67:	int3   
  41cf68:	dec    dl
  41cf6a:	mov    ds:0x48be1036,eax
  41cf6f:	add    al,0xe
  41cf71:	cmp    BYTE PTR [ecx-0x6f09e087],ch
  41cf77:	push   0x4e974b08
  41cf7c:	rol    DWORD PTR [eax-0x24],cl
  41cf7f:	shr    ebp,1
  41cf81:	neg    DWORD PTR [ebx+0x783b2d7a]
  41cf87:	out    0x4c,al
  41cf89:	mov    ebp,0x833c88db
  41cf8e:	sbb    BYTE PTR [esi+0x6b],cl
  41cf91:	sub    al,0xcc
  41cf93:	outs   dx,DWORD PTR ds:[esi]
  41cf94:	repz or ah,cl
  41cf97:	stc    
  41cf98:	rcr    BYTE PTR [ebx],0xed
  41cf9b:	adc    al,0x36
  41cf9d:	lods   al,BYTE PTR ds:[esi]
  41cf9e:	jg     0x41cf9a
  41cfa0:	call   0xa71ae3b9
  41cfa5:	dec    eax
  41cfa6:	pop    ebp
  41cfa7:	dec    esp
  41cfa8:	cmp    bh,BYTE PTR [esi+0x5c]
  41cfab:	cwde   
  41cfac:	pop    ecx
  41cfad:	or     eax,0x57510d7c
  41cfb2:	lock hlt 
  41cfb4:	loopne 0x41cfbb
  41cfb6:	and    DWORD PTR [edx-0x79],ebp
  41cfb9:	lock cmp al,0xee
  41cfbc:	fwait
  41cfbd:	mov    eax,0x4e150ee7
  41cfc2:	add    al,0xfc
  41cfc4:	fdivr  DWORD PTR [edi-0x50]
  41cfc7:	jns    0x41cf53
  41cfc9:	sub    BYTE PTR [edi+eiz*1-0x7],dl
  41cfcd:	xor    eax,0xca049a
  41cfd2:	ss dec esi
  41cfd4:	cmp    cl,BYTE PTR [edx]
  41cfd6:	xchg   edx,eax
  41cfd7:	inc    esi
  41cfd8:	pusha  
  41cfd9:	lock push 0xffffff82
  41cfdc:	mov    cl,0x63
  41cfde:	pop    edx
  41cfdf:	shr    DWORD PTR [edx],0x39
  41cfe2:	adc    DWORD PTR [ebp-0x10c28409],esp
  41cfe8:	jmp    0x76fa:0xcf3cd184
  41cfef:	add    eax,0x70ff53b1
  41cff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cff5:	loopne 0x41d074
  41cff7:	jle    0x41d001
  41cff9:	(bad)  
  41cffb:	stc    
  41cffc:	cwde   
  41cffd:	jp     0x41cff1
  41cfff:	(bad)  
  41d000:	mov    ch,0x21
  41d002:	or     al,0x5
  41d004:	mov    esi,0x279bd05a
  41d009:	(bad)  [ecx+ecx*8]
  41d00c:	push   ebx
  41d00d:	pop    esp
  41d00e:	cld    
  41d00f:	fsubr  st,st(2)
  41d011:	sbb    BYTE PTR [edi+edx*8-0x65],bl
  41d015:	push   esp
  41d016:	aaa    
  41d017:	cmp    eax,0x19ef001
  41d01c:	out    0xd3,al
  41d01e:	push   esp
  41d01f:	(bad)  
  41d020:	shl    edi,1
  41d022:	sub    DWORD PTR [eax+0x2],edi
  41d025:	div    bl
  41d027:	mov    esi,0x343da014
  41d02c:	cmp    BYTE PTR [esi],0x2b
  41d02f:	scas   al,BYTE PTR es:[edi]
  41d030:	mov    WORD PTR [ecx-0x77b7234d],gs
  41d036:	dec    eax
  41d037:	ret    
  41d038:	in     al,dx
  41d039:	cld    
  41d03a:	dec    esp
  41d03b:	das    
  41d03c:	bound  eax,QWORD PTR [eax+edi*4]
  41d03f:	outs   dx,BYTE PTR ds:[esi]
  41d040:	pop    eax
  41d041:	jecxz  0x41d025
  41d043:	fist   DWORD PTR [ecx]
  41d045:	jl     0x41d0a1
  41d047:	xchg   esp,eax
  41d048:	adc    BYTE PTR [ebp-0x49],al
  41d04b:	scas   al,BYTE PTR es:[edi]
  41d04c:	mov    ah,ah
  41d04e:	fsubr  st,st(2)
  41d050:	sbb    edi,eax
  41d052:	cmp    DWORD PTR [esi+0x5b13cde],esp
  41d058:	pop    edi
  41d059:	pop    ss
  41d05a:	(bad)  
  41d05b:	cld    
  41d05c:	pushw  ds
  41d05e:	repnz xchg ecx,eax
  41d060:	fnstcw WORD PTR [edx]
  41d062:	shl    BYTE PTR [ecx+0x229a3ca8],1
  41d068:	jbe    0x41d030
  41d06a:	rcr    DWORD PTR [edi],0x36
  41d06d:	inc    edx
  41d06e:	jb     0x41d027
  41d070:	adc    eax,0x438e98b3
  41d075:	rcl    ecx,cl
  41d077:	add    DWORD PTR [eax],edi
  41d079:	xor    ch,dl
  41d07b:	outs   dx,BYTE PTR ds:[esi]
  41d07c:	or     BYTE PTR [eax-0x1f3d8af4],al
  41d082:	sub    BYTE PTR [ebx-0x7b],al
  41d085:	mov    edi,0xcad1c737
  41d08a:	xor    ecx,DWORD PTR [eax-0x5]
  41d08d:	add    BYTE PTR [ebx],dh
  41d08f:	mov    bh,0xed
  41d091:	enter  0x9182,0x6a
  41d095:	pop    edi
  41d096:	mov    dl,0x64
  41d098:	inc    eax
  41d099:	ret    0x4d6c
  41d09c:	sub    BYTE PTR [esi+0x64],0xb7
  41d0a0:	or     edx,DWORD PTR [esi-0x380b58cf]
  41d0a6:	mov    ebx,0x11d5516a
  41d0ab:	jne    0x41d0a2
  41d0ad:	aam    0x0
  41d0af:	stc    
  41d0b0:	fnsave [eax]
  41d0b2:	fdiv   st(5),st
  41d0b4:	jo     0x41d0b2
  41d0b6:	mov    cl,0x26
  41d0b8:	sub    al,0x75
  41d0ba:	out    0x43,eax
  41d0bc:	and    al,0x77
  41d0be:	adc    ebp,DWORD PTR [esi-0x753effe3]
  41d0c4:	sub    ebp,DWORD PTR [ebp+0x17]
  41d0c7:	and    eax,0x1efdccb6
  41d0cc:	add    al,0x5c
  41d0ce:	popa   
  41d0cf:	out    dx,eax
  41d0d0:	or     bh,BYTE PTR [edi-0x63]
  41d0d3:	jns    0x41d147
  41d0d5:	int    0x1b
  41d0d7:	jge    0x41d08d
  41d0d9:	icebp  
  41d0da:	sub    BYTE PTR [ebx],bl
  41d0dc:	add    bh,BYTE PTR [edi+edx*4+0x2c]
  41d0e0:	push   ecx
  41d0e1:	daa    
  41d0e2:	inc    eax
  41d0e3:	and    eax,0x31c90606
  41d0e8:	push   es
  41d0e9:	sbb    eax,0xd2683f38
  41d0ee:	push   esp
  41d0ef:	popf   
  41d0f0:	xchg   edi,eax
  41d0f1:	mov    cl,BYTE PTR ds:0x1bb45b5c
  41d0f7:	sbb    DWORD PTR ds:0x6c767409,eax
  41d0fd:	(bad)  
  41d0fe:	and    esp,ebp
  41d100:	test   DWORD PTR [edi+ebx*8],ebp
  41d103:	hlt    
  41d104:	xchg   ebx,eax
  41d105:	adc    eax,0x2d5a99c4
  41d10a:	(bad)  
  41d10b:	cdq    
  41d10c:	cmp    eax,0x2d2049df
  41d111:	xchg   ecx,eax
  41d112:	popf   
  41d113:	jo     0x41d182
  41d115:	push   edi
  41d116:	daa    
  41d117:	sahf   
  41d118:	js     0x41d133
  41d11a:	mov    ds:0xcc7bd109,eax
  41d11f:	cmp    BYTE PTR [edi],ch
  41d121:	sub    dh,BYTE PTR [edx+0x0]
  41d124:	push   0x26648fa
  41d129:	das    
  41d12a:	imul   edx,DWORD PTR [ebx-0x38a0f16],0xffffffcf
  41d131:	xchg   ebx,eax
  41d132:	loope  0x41d0ce
  41d134:	(bad)  
  41d135:	(bad)  
  41d136:	imul   esp
  41d138:	(bad)  
  41d139:	sub    bl,BYTE PTR [ebx-0x7a133e80]
  41d13f:	pop    esi
  41d140:	inc    edi
  41d141:	daa    
  41d142:	push   0x55
  41d144:	lahf   
  41d145:	adc    ecx,DWORD PTR [eax-0x1b9c83d8]
  41d14b:	xchg   ebx,eax
  41d14c:	(bad)  
  41d14e:	cs ret 0xc0b
  41d152:	leave  
  41d153:	mov    ds:0x1cdfacc7,al
  41d158:	mov    edx,0x72748da8
  41d15d:	stos   BYTE PTR es:[edi],al
  41d15e:	leave  
  41d15f:	mov    al,0x77
  41d161:	(bad)  
  41d162:	cmp    eax,0xadb92648
  41d167:	les    ebp,FWORD PTR [ecx+0x32530f31]
  41d16d:	xor    DWORD PTR [ecx-0x22],ebx
  41d170:	popf   
  41d171:	popf   
  41d172:	mov    edi,0xee566b63
  41d177:	mov    al,ds:0x6a61591c
  41d17c:	aaa    
  41d17d:	lds    ebx,FWORD PTR [eax+0x58]
  41d180:	rcl    esi,0x90
  41d183:	fistp  DWORD PTR [ecx+0x6d14147b]
  41d189:	jle    0x41d17d
  41d18b:	jns    0x41d1ad
  41d18d:	inc    edi
  41d18e:	fiadd  WORD PTR [ebx+edx*1-0x46]
  41d192:	xor    dl,BYTE PTR [esi-0x38]
  41d195:	mov    ah,0xa7
  41d197:	sahf   
  41d198:	or     al,0x82
  41d19a:	pop    esi
  41d19b:	out    dx,eax
  41d19c:	mov    ds:0x6239add3,al
  41d1a1:	std    
  41d1a2:	and    eax,0xf2145292
  41d1a7:	push   0xe5d6a6f1
  41d1ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1ad:	das    
  41d1ae:	ret    0xa9a7
  41d1b1:	jge    0x41d19b
  41d1b3:	test   al,0xa2
  41d1b5:	jg     0x41d1a3
  41d1b7:	xor    al,0xe7
  41d1b9:	push   0x6d2dc7ee
  41d1be:	sbb    edi,0x5b
  41d1c1:	xor    BYTE PTR [eax-0x46504de2],dl
  41d1c7:	push   edx
  41d1c8:	div    ecx
  41d1ca:	(bad)  
  41d1cb:	out    dx,al
  41d1cc:	imul   esp,esp,0xffffff9d
  41d1cf:	mov    esp,0x45d0f32c
  41d1d4:	add    al,cl
  41d1d6:	or     DWORD PTR [edx+0x17],edi
  41d1d9:	xchg   ecx,eax
  41d1da:	xor    al,0xed
  41d1dd:	xchg   esi,eax
  41d1de:	in     eax,dx
  41d1df:	rcr    BYTE PTR [esi],0xb0
  41d1e2:	nop
  41d1e3:	nop
  41d1e4:	popf   
  41d1e5:	xor    al,0xff
  41d1e7:	mov    ebx,DWORD PTR [ecx+0x5c]
  41d1ea:	sub    ah,dh
  41d1ec:	xchg   edi,eax
  41d1ed:	and    DWORD PTR [esi+0x65731c08],esi
  41d1f3:	(bad)  
  41d1f4:	pop    ss
  41d1f5:	push   eax
  41d1f6:	gs aam 0xab
  41d1f9:	shl    DWORD PTR [eax],cl
  41d1fb:	xchg   BYTE PTR [edx+edx*4-0x52c8e84f],bl
  41d202:	in     al,dx
  41d203:	sbb    al,0x2
  41d205:	repz data16 prefetchw (bad)
  41d208:	or     eax,0x9fd54cc8
  41d20d:	stos   DWORD PTR es:[edi],eax
  41d20e:	pop    ecx
  41d20f:	mov    eax,0xeb0816dc
  41d214:	mov    BYTE PTR [ebx+esi*4-0x6f],bl
  41d218:	inc    esi
  41d219:	fdiv   DWORD PTR [edx+0x6d]
  41d21c:	mov    cl,0x38
  41d21e:	push   edx
  41d21f:	bound  esp,QWORD PTR [ecx-0x3c81f146]
  41d225:	sub    eax,0x3cc43b79
  41d22a:	aaa    
  41d22b:	pop    ebx
  41d22c:	call   0x21de:0xd8bad922
  41d233:	cld    
  41d234:	test   BYTE PTR [ecx-0x223a5257],bh
  41d23a:	mov    al,0xa0
  41d23c:	jp     0x41d1f7
  41d23e:	fnsave [ebx-0x54e1dba2]
  41d244:	fist   WORD PTR [ecx+0x29]
  41d247:	xchg   edx,eax
  41d248:	retf   
  41d249:	jbe    0x41d268
  41d24b:	or     dl,BYTE PTR [ebx]
  41d24d:	push   ebp
  41d24e:	sbb    DWORD PTR [eax+0x6b8c308f],ecx
  41d254:	fisttp DWORD PTR [edi-0x6b207a7a]
  41d25a:	and    eax,0xa05c1e4a
  41d25f:	mov    al,0x1c
  41d261:	mov    al,0x68
  41d263:	inc    ebp
  41d264:	clc    
  41d265:	adc    eax,0x5e7d2345
  41d26a:	adc    esi,DWORD PTR [ebp+0x6b]
  41d26d:	xor    eax,0xc6c05874
  41d272:	cwde   
  41d273:	rcr    BYTE PTR [edx-0x238ce90c],0xc9
  41d27a:	mov    gs,esi
  41d27c:	inc    ebx
  41d27d:	jmp    0x41d252
  41d27f:	pop    es
  41d280:	or     DWORD PTR [eax],0x5ea18ffa
  41d286:	jae    0x41d256
  41d288:	or     edi,esi
  41d28a:	and    eax,0x5a54598c
  41d28f:	and    eax,0x69db8c2
  41d294:	rol    DWORD PTR [eax],0x10
  41d297:	or     bl,bl
  41d299:	int3   
  41d29a:	iret   
  41d29b:	dec    edi
  41d29c:	sar    ecx,cl
  41d29e:	test   al,0x76
  41d2a0:	pop    ecx
  41d2a1:	cmp    eax,0x5f1414a4
  41d2a6:	loop   0x41d2b5
  41d2a8:	jmp    0x16b29146
  41d2ad:	(bad)  
  41d2ae:	mov    cl,BYTE PTR [ebx]
  41d2b0:	mov    edx,0x4e3cf9da
  41d2b5:	lea    esp,ds:0x533761
  41d2bb:	aam    0x26
  41d2bd:	mov    ah,0xdb
  41d2bf:	ret    
  41d2c0:	imul   edx
  41d2c2:	jne    0x41d28e
  41d2c4:	pop    ecx
  41d2c5:	inc    ebp
  41d2c6:	outs   dx,DWORD PTR ds:[esi]
  41d2c7:	clc    
  41d2c8:	mov    ds:0xa766f5f6,eax
  41d2cd:	ret    
  41d2ce:	sub    BYTE PTR [esi-0x7a33517e],ah
  41d2d4:	inc    ebx
  41d2d5:	push   ds
  41d2d6:	outs   dx,BYTE PTR ds:[esi]
  41d2d7:	ret    
  41d2d8:	test   BYTE PTR [edi-0x3],cl
  41d2db:	mov    edx,gs
  41d2dd:	or     al,0x61
  41d2df:	dec    ebx
  41d2e0:	jg     0x41d2ae
  41d2e2:	gs out dx,al
  41d2e4:	cs push ecx
  41d2e6:	fdivr  st(1),st
  41d2e8:	dec    esp
  41d2e9:	mov    WORD PTR [ecx+0x43dab42d],?
  41d2ef:	jo     0x41d317
  41d2f1:	dec    eax
  41d2f2:	add    BYTE PTR ds:0xc8d5276d,ah
  41d2f8:	inc    esp
  41d2f9:	(bad)  
  41d2fa:	scas   eax,DWORD PTR es:[edi]
  41d2fb:	out    dx,al
  41d2fc:	cwde   
  41d2fd:	stos   BYTE PTR es:[edi],al
  41d2fe:	loope  0x41d34c
  41d300:	xchg   ecx,eax
  41d301:	mov    al,ds:0xcd9e1e15
  41d306:	aas    
  41d307:	push   es
  41d308:	push   ecx
  41d309:	push   ebp
  41d30a:	mov    WORD PTR [ecx-0x1b4fd0a9],es
  41d310:	mov    eax,ds:0x6750b30c
  41d315:	xor    eax,0x5cbda29b
  41d31a:	sbb    al,0x2e
  41d31c:	cmp    dh,BYTE PTR [ecx]
  41d31e:	xlat   BYTE PTR ds:[ebx]
  41d31f:	call   DWORD PTR [ebx-0xcd0650a]
  41d325:	mov    esi,DWORD PTR [ebx-0x3ce81b8b]
  41d32b:	sub    ebx,DWORD PTR [edi]
  41d32d:	jmp    0x869c6ffd
  41d332:	stc    
  41d333:	inc    edi
  41d334:	jg     0x41d35e
  41d336:	pop    eax
  41d337:	retf   0xfaf
  41d33a:	inc    ecx
  41d33b:	call   0x1c04:0xc1ab4419
  41d342:	xor    edi,ecx
  41d344:	inc    BYTE PTR [esi]
  41d346:	push   DWORD PTR [ebx-0x79a56950]
  41d34c:	and    eax,0x7f5771fd
  41d351:	ds pop eax
  41d353:	dec    BYTE PTR [edx+0x6daaeecb]
  41d359:	or     BYTE PTR [edx+0x1fefa1ab],0x24
  41d360:	inc    ebx
  41d361:	cmc    
  41d362:	lea    ebp,[ebx]
  41d364:	push   es
  41d365:	adc    al,0x72
  41d367:	in     al,dx
  41d368:	retf   0xf760
  41d36b:	xor    edx,DWORD PTR [ecx+eiz*2-0x870db5a]
  41d372:	add    eax,0x5f1d8c6e
  41d377:	mov    bl,0xf8
  41d379:	jecxz  0x41d399
  41d37b:	and    DWORD PTR [edx+0x7ab1a9b6],esi
  41d381:	add    esp,DWORD PTR [esi]
  41d383:	aam    0x11
  41d385:	test   esp,edx
  41d387:	sbb    al,0xcd
  41d389:	pop    esi
  41d38a:	xchg   edi,eax
  41d38b:	push   ebx
  41d38c:	jle    0x41d359
  41d38e:	push   cs
  41d38f:	clc    
  41d390:	pop    edi
  41d391:	mov    ebx,0xd8003656
  41d396:	cmp    bl,cl
  41d398:	inc    edx
  41d399:	sub    edi,ebp
  41d39b:	fisubr WORD PTR [edi+0x1]
  41d39e:	sbb    dh,dl
  41d3a0:	inc    esp
  41d3a1:	cmp    ebp,DWORD PTR [ecx-0x24]
  41d3a4:	dec    eax
  41d3a5:	or     bl,BYTE PTR [esi-0x5f]
  41d3a8:	or     esi,DWORD PTR [ebx]
  41d3aa:	stos   BYTE PTR es:[edi],al
  41d3ab:	in     eax,0x7
  41d3ad:	mov    bh,0x5d
  41d3af:	pop    ecx
  41d3b0:	(bad)  
  41d3b1:	call   0x727ad996
  41d3b6:	in     eax,dx
  41d3b7:	test   dh,0xb7
  41d3ba:	inc    esi
  41d3bb:	(bad)  
  41d3bc:	(bad)  
  41d3bd:	repnz bound esi,QWORD PTR [esi+0x45]
  41d3c1:	aad    0xdd
  41d3c3:	out    0x7b,al
  41d3c5:	mov    al,ds:0xf81ade61
  41d3ca:	nop
  41d3cb:	imul   edi,ebx,0xffffffb8
  41d3ce:	inc    eax
  41d3cf:	(bad)  
  41d3d0:	jb     0x41d425
  41d3d2:	mov    esi,0x31cda4ae
  41d3d7:	mov    ds:0xce0a5db,al
  41d3dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3dd:	pop    esp
  41d3de:	daa    
  41d3df:	xor    eax,0xd4eebbaf
  41d3e4:	in     eax,0xe8
  41d3e6:	cmc    
  41d3e7:	(bad)  [esi-0x5e]
  41d3ea:	test   BYTE PTR [ecx],al
  41d3ec:	mov    WORD PTR [edx-0x2d0f053c],ds
  41d3f2:	pop    eax
  41d3f3:	js     0x41d42f
  41d3f5:	aas    
  41d3f6:	push   ss
  41d3f7:	cli    
  41d3f8:	cs loopne 0x41d470
  41d3fb:	loopne 0x41d40b
  41d3fd:	sub    DWORD PTR [ebx+0x46],0x12873a11
  41d404:	dec    esp
  41d405:	push   cs
  41d406:	les    edx,FWORD PTR [ebp+0x3]
  41d409:	test   ecx,esi
  41d40b:	inc    eax
  41d40c:	stc    
  41d40d:	mov    ch,0x44
  41d40f:	call   0x5523:0xe598063c
  41d416:	stos   BYTE PTR es:[edi],al
  41d417:	push   ss
  41d418:	jno    0x41d3da
  41d41a:	xchg   ebx,eax
  41d41b:	fs dec esp
  41d41d:	pop    edi
  41d41e:	sti    
  41d41f:	fsub   DWORD PTR [esi+0x6d746000]
  41d425:	mov    eax,ds:0x99474768
  41d42a:	lea    edi,[ebx-0x254c56ea]
  41d430:	adc    BYTE PTR [eax],ch
  41d432:	or     BYTE PTR [edi-0x17b1fa09],0xed
  41d439:	pop    ebx
  41d43a:	aaa    
  41d43b:	in     eax,0x61
  41d43d:	sub    al,0xeb
  41d43f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d440:	add    DWORD PTR [ebp+ebp*8+0x24],0x7c7d77a9
  41d448:	ret    
  41d449:	cmp    eax,0xa9b12d79
  41d44e:	xor    ah,dl
  41d450:	jl     0x41d403
  41d452:	mov    ebp,0xdbd832f1
  41d457:	rol    DWORD PTR [ebx-0x1f858f0e],0x76
  41d45e:	dec    esi
  41d45f:	add    BYTE PTR [ecx],bh
  41d461:	sbb    DWORD PTR [eax],ecx
  41d463:	scas   eax,DWORD PTR es:[edi]
  41d464:	push   0x3294a9ed
  41d469:	lods   al,BYTE PTR ds:[esi]
  41d46a:	jmp    0x41d3f1
  41d46c:	jb     0x41d4c9
  41d46e:	out    0xb9,eax
  41d470:	test   edi,0xa13fec83
  41d476:	test   al,0xc1
  41d478:	aam    0xe0
  41d47a:	shr    BYTE PTR [eax+0x25e14e35],0x10
  41d481:	mov    dh,0x36
  41d483:	shr    DWORD PTR [edx-0x560c6f53],cl
  41d489:	pop    esi
  41d48a:	or     edi,ebx
  41d48c:	cmp    cl,BYTE PTR [edx+0x406c6ffc]
  41d492:	mov    eax,ds:0x8b3aaa70
  41d497:	int    0x97
  41d499:	inc    edi
  41d49a:	aam    0x42
  41d49c:	mov    ebp,0x3003a801
  41d4a1:	push   cs
  41d4a2:	mov    bh,0x9a
  41d4a4:	je     0x41d470
  41d4a6:	mov    ebp,DWORD PTR [ecx+0x1aa31f7b]
  41d4ac:	mov    esi,0x6cde4b83
  41d4b1:	mov    bh,0x45
  41d4b3:	fcomp  st(3)
  41d4b5:	mov    bh,0x5c
  41d4b7:	call   0xaaef:0xac511c13
  41d4be:	scas   al,BYTE PTR es:[edi]
  41d4bf:	das    
  41d4c0:	xchg   ecx,eax
  41d4c1:	jge    0x41d519
  41d4c3:	ret    
  41d4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4c5:	arpl   WORD PTR [ebx+0x42],di
  41d4c8:	shl    eax,cl
  41d4ca:	xchg   ebx,eax
  41d4cb:	out    dx,eax
  41d4cc:	sub    ebx,ebx
  41d4ce:	xchg   esp,eax
  41d4cf:	pop    ebx
  41d4d0:	xor    ebp,edi
  41d4d2:	icebp  
  41d4d3:	(bad)  
  41d4d4:	dec    edi
  41d4d5:	and    DWORD PTR [edi-0x417c773c],0xf10f1d0e
  41d4df:	jb     0x41d512
  41d4e1:	jne    0x41d4ce
  41d4e3:	cdq    
  41d4e4:	dec    esp
  41d4e5:	aas    
  41d4e6:	outs   dx,BYTE PTR ds:[esi]
  41d4e7:	pop    esp
  41d4e8:	shl    BYTE PTR ds:0x9a43f0a,1
  41d4ee:	jge    0x41d50d
  41d4f0:	and    DWORD PTR [ebx-0x7c37d141],eax
  41d4f6:	aad    0x53
  41d4f8:	fist   DWORD PTR [ebx]
  41d4fa:	in     al,0x91
  41d4fc:	mov    eax,ds:0xa53d3fa1
  41d501:	iret   
  41d502:	cmp    DWORD PTR [esi-0x51],esp
  41d505:	mov    al,0xb2
  41d507:	pusha  
  41d508:	loopne 0x41d56e
  41d50a:	mov    BYTE PTR [ebx+0x1],dh
  41d50d:	mov    DWORD PTR cs:[bp+di],ebp
  41d511:	cmc    
  41d512:	sbb    BYTE PTR [esi-0x7ad30e31],dh
  41d518:	sbb    eax,0x582463e4
  41d51d:	retf   
  41d51e:	mov    ah,bl
  41d520:	jo     0x41d4f4
  41d522:	mov    dh,0xf7
  41d524:	scas   eax,DWORD PTR es:[edi]
  41d525:	mov    ecx,0x18abb90b
  41d52a:	or     DWORD PTR [edx+0x2289acee],0xffffffee
  41d531:	fldenv [ebp+edx*4-0x5e]
  41d535:	and    ebx,DWORD PTR [eax]
  41d537:	imul   edx,edi,0xb51e3261
  41d53d:	pop    cx
  41d53f:	mov    esp,DWORD PTR [ebx+ecx*8-0x53]
  41d543:	je     0x41d517
  41d545:	enter  0x2b68,0xa8
  41d549:	sub    DWORD PTR [edx],edi
  41d54b:	jmp    0x2d14:0xd2d4c875
  41d552:	push   es
  41d553:	into   
  41d554:	push   esi
  41d555:	pop    edi
  41d556:	scas   al,BYTE PTR es:[edi]
  41d557:	mov    dl,0x78
  41d559:	mov    esi,0x9c571676
  41d55e:	nop
  41d55f:	jb     0x41d4e1
  41d561:	mov    BYTE PTR [esi],0xc9
  41d564:	pop    ebx
  41d565:	(bad)  
  41d566:	test   eax,0x6af23a
  41d56b:	fcomp  QWORD PTR [ebp+0x54]
  41d56e:	mov    cl,0xcc
  41d570:	adc    al,0x86
  41d572:	push   es
  41d573:	push   0x2659632b
  41d578:	sub    dh,BYTE PTR [edx]
  41d57a:	test   ebp,edi
  41d57c:	mov    ds:0x522a2290,eax
  41d581:	push   esi
  41d582:	pop    ds
  41d583:	es clc 
  41d585:	jbe    0x41d580
  41d587:	xchg   ebp,eax
  41d588:	int3   
  41d589:	xchg   ecx,eax
  41d58a:	mov    bh,0x8d
  41d58c:	sub    al,0x60
  41d58e:	ror    DWORD PTR [ecx],cl
  41d590:	dec    esp
  41d591:	shl    dh,0x59
  41d594:	pavgw  mm7,QWORD PTR [edi]
  41d597:	sub    eax,0x154b60fc
  41d59c:	and    BYTE PTR [edi-0x4a],bl
  41d59f:	in     eax,dx
  41d5a0:	pop    edi
  41d5a1:	xchg   esp,eax
  41d5a2:	mov    dl,0x4f
  41d5a4:	inc    ebp
  41d5a5:	push   esi
  41d5a6:	lods   eax,DWORD PTR gs:[esi]
  41d5a8:	mov    dl,0x3e
  41d5aa:	(bad)  
  41d5ac:	test   eax,0x44f3a9a0
  41d5b1:	sbb    esp,DWORD PTR [edx]
  41d5b3:	cmp    dh,al
  41d5b5:	les    eax,FWORD PTR ds:0x6d825b86
  41d5bb:	aas    
  41d5bc:	stos   DWORD PTR es:[edi],eax
  41d5bd:	mov    dl,0x85
  41d5bf:	ror    DWORD PTR [ecx-0x27],1
  41d5c2:	mov    al,0x6a
  41d5c4:	jl     0x41d608
  41d5c6:	mov    edi,0x447373c6
  41d5cb:	adc    eax,0x42e75526
  41d5d0:	daa    
  41d5d1:	fdiv   st(7),st
  41d5d3:	(bad)  
  41d5d4:	push   ebx
  41d5d5:	mov    ch,0x4a
  41d5d7:	pop    ds
  41d5d8:	(bad)  
  41d5d9:	in     eax,dx
  41d5da:	mov    edi,0xacf08ad5
  41d5df:	jnp    0x41d64d
  41d5e1:	fstp   TBYTE PTR [ecx+0x70518c9c]
  41d5e7:	push   esp
  41d5e8:	daa    
  41d5e9:	js     0x41d607
  41d5eb:	fs loope 0x41d5a0
  41d5ee:	inc    edx
  41d5ef:	lds    edx,FWORD PTR [eax-0x45]
  41d5f2:	jecxz  0x41d5b7
  41d5f4:	addr16 push esi
  41d5f6:	sub    al,0xd5
  41d5f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5f9:	loop   0x41d608
  41d5fb:	or     eax,0xe3ee2cf4
  41d600:	xor    ebx,DWORD PTR [eax]
  41d602:	mov    ebp,0xe53d1d46
  41d607:	add    cl,BYTE PTR ds:0x6cbcaca1
  41d60d:	adc    ebx,DWORD PTR [ebx+ecx*8]
  41d610:	push   edx
  41d611:	cld    
  41d612:	sar    esi,cl
  41d614:	out    dx,eax
  41d615:	dec    edx
  41d616:	pop    edx
  41d617:	mov    esi,0x3fef6768
  41d61c:	xchg   edi,eax
  41d61d:	push   0x5ef48c8
  41d622:	dec    eax
  41d623:	cli    
  41d624:	sbb    al,0x9a
  41d626:	call   0xe872:0xe6ede8a2
  41d62d:	enter  0x1546,0xeb
  41d631:	lods   al,BYTE PTR ds:[esi]
  41d632:	daa    
  41d633:	or     ah,BYTE PTR [ecx]
  41d635:	inc    ecx
  41d636:	or     edx,DWORD PTR [esi]
  41d638:	or     ch,BYTE PTR [ebp-0x6e]
  41d63b:	(bad)  
  41d63c:	jns    0x41d6ab
  41d63e:	clc    
  41d63f:	pop    es
  41d640:	aad    0xb9
  41d642:	or     ebx,DWORD PTR [edx+eiz*2]
  41d645:	ins    BYTE PTR es:[edi],dx
  41d646:	fsubr  QWORD PTR [edx]
  41d648:	in     eax,0x92
  41d64a:	into   
  41d64b:	ins    DWORD PTR es:[edi],dx
  41d64c:	test   al,0x67
  41d64e:	xchg   esi,eax
  41d64f:	sbb    al,0xe3
  41d651:	das    
  41d652:	xchg   BYTE PTR [ebx],ah
  41d654:	daa    
  41d655:	pop    ecx
  41d656:	push   es
  41d657:	das    
  41d658:	mov    ds:0xd1ad2b9f,eax
  41d65d:	aaa    
  41d65e:	mov    ch,0x50
  41d660:	stos   DWORD PTR es:[edi],eax
  41d661:	aad    0x72
  41d663:	(bad)  
  41d664:	(bad)  
  41d666:	(bad)  
  41d668:	pop    eax
  41d669:	mov    dh,0xdb
  41d66b:	cmp    esp,DWORD PTR [ebp+0x5]
  41d66e:	inc    ecx
  41d66f:	sbb    BYTE PTR [esi-0x267a8d9b],cl
  41d675:	pusha  
  41d676:	stos   BYTE PTR es:[edi],al
  41d677:	es inc eax
  41d679:	(bad)  
  41d67a:	mov    ss,WORD PTR [ebx-0x5d]
  41d67d:	cmp    cl,BYTE PTR [ebx-0x4a405b46]
  41d683:	lock pop eax
  41d685:	xchg   ebx,eax
  41d686:	das    
  41d687:	and    BYTE PTR [edi+0x30],dl
  41d68a:	imul   ebx,DWORD PTR [ecx],0xffffffdc
  41d68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d68e:	sub    DWORD PTR [ebx],edx
  41d690:	inc    ecx
  41d691:	or     al,0x17
  41d693:	retf   0x1ec8
  41d696:	mov    eax,ds:0x4ec9facd
  41d69b:	(bad)  [edx-0x214739b2]
  41d6a1:	aad    0xed
  41d6a3:	xchg   DWORD PTR [edx+0x46bd2047],edi
  41d6a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6aa:	add    dl,BYTE PTR [ecx-0x13913975]
  41d6b0:	je     0x7562a378
  41d6b6:	cwde   
  41d6b7:	inc    esi
  41d6b8:	cmp    BYTE PTR [eax+0x34],ah
  41d6bb:	fcom   QWORD PTR [esi-0x7a]
  41d6be:	or     eax,0xd589b0ba
  41d6c3:	call   0x4a96:0xb5544aa4
  41d6ca:	add    al,0x6c
  41d6cc:	pop    esi
  41d6cd:	(bad)  [ebx+edi*1-0x51]
  41d6d1:	cwde   
  41d6d2:	adc    al,0xe6
  41d6d4:	test   eax,0x3ab7697e
  41d6d9:	jge    0x41d68f
  41d6db:	cmp    al,0x35
  41d6dd:	bound  eax,QWORD PTR [ecx]
  41d6df:	jge    0x41d6a7
  41d6e1:	push   0x19
  41d6e3:	fldcw  WORD PTR [esi+0x23]
  41d6e6:	icebp  
  41d6e7:	cmp    ebp,ebx
  41d6e9:	mov    bl,0x21
  41d6eb:	es ror esi,0x87
  41d6ef:	aas    
  41d6f0:	inc    ebp
  41d6f1:	xchg   esi,eax
  41d6f2:	sub    ebp,0xffffffea
  41d6f5:	shr    esp,0xce
  41d6f8:	popa   
  41d6f9:	outs   dx,BYTE PTR ds:[esi]
  41d6fa:	stc    
  41d6fb:	dec    esi
  41d6fc:	xchg   edi,eax
  41d6fd:	sbb    DWORD PTR [ecx],esp
  41d6ff:	jae    0x41d71d
  41d701:	and    BYTE PTR [esi+0x25d4024b],0xc1
  41d708:	xchg   ebp,eax
  41d709:	sti    
  41d70a:	int    0x50
  41d70c:	mov    esi,0x7b82a54d
  41d711:	xor    edx,ebp
  41d713:	jge    0x41d6f3
  41d715:	(bad)  
  41d716:	mov    bl,0x9a
  41d718:	dec    edx
  41d719:	mov    ds:0x7259a696,eax
  41d71e:	cmp    eax,ebx
  41d720:	jle    0x41d6ba
  41d722:	push   edx
  41d723:	mov    esi,0x792e77ee
  41d728:	out    dx,al
  41d729:	bound  eax,QWORD PTR [eax]
  41d72b:	mov    edi,0x3203cb09
  41d730:	push   esi
  41d731:	mov    al,ds:0x706a6e2c
  41d736:	sar    BYTE PTR [ebx-0x59],0x5b
  41d73a:	mov    ebp,0x12f24499
  41d73f:	enter  0x194a,0xf9
  41d743:	clc    
  41d744:	pop    ebp
  41d745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d746:	mov    dh,0xee
  41d748:	loope  0x41d6e9
  41d74a:	fst    QWORD PTR [ebp+0x70e3c79c]
  41d750:	dec    ebp
  41d751:	pop    ecx
  41d752:	xchg   DWORD PTR [edi+0x7a29d041],ebx
  41d758:	mov    ds:0x4ccf738c,al
  41d75d:	call   0x750c:0xf748b813
  41d764:	or     edx,DWORD PTR [edi+0x6faa6f47]
  41d76a:	dec    eax
  41d76b:	xor    BYTE PTR [ebp+0x415e79fa],0xe0
  41d772:	adc    al,0x78
  41d774:	mov    cl,0xd0
  41d776:	mov    al,ds:0x1e6d8ecf
  41d77b:	ja     0x41d732
  41d77d:	out    0xfa,eax
  41d77f:	arpl   cx,ax
  41d781:	pop    ebx
  41d782:	popa   
  41d783:	je     0x41d792
  41d785:	cvtps2pd xmm7,QWORD PTR [esi+0x2a]
  41d789:	neg    DWORD PTR [ecx-0x4915488]
  41d78f:	fimul  DWORD PTR [eax-0x1e78c4e0]
  41d795:	jg     0x41d745
  41d797:	in     al,0x52
  41d799:	inc    eax
  41d79a:	mov    ds:0x1860a1ce,al
  41d79f:	(bad)  
  41d7a1:	int    0x1e
  41d7a3:	shl    DWORD PTR [esi],0xd4
  41d7a6:	mov    esi,0x7f0f1513
  41d7ab:	mov    eax,eax
  41d7ad:	cld    
  41d7ae:	sahf   
  41d7af:	or     DWORD PTR [ebx+0x25],eax
  41d7b2:	les    ebx,FWORD PTR [eax]
  41d7b4:	ja     0x41d7bb
  41d7b6:	std    
  41d7b7:	fs ds enter 0xa564,0xaa
  41d7bd:	xor    eax,0x15aafce
  41d7c2:	push   eax
  41d7c3:	jmp    0x41d7cf
  41d7c5:	sbb    al,BYTE PTR [edi-0x54]
  41d7c8:	jne    0x41d814
  41d7ca:	jne    0x41d7d9
  41d7cc:	inc    ecx
  41d7cd:	mov    dh,0x2
  41d7cf:	jp     0x41d784
  41d7d1:	in     eax,0x44
  41d7d3:	dec    ebx
  41d7d4:	fiadd  WORD PTR [edi+0x19]
  41d7d7:	jg     0x41d776
  41d7d9:	imul   eax,DWORD PTR [ebx-0x1de746f8],0x13
  41d7e0:	cwde   
  41d7e1:	les    ecx,FWORD PTR [eax]
  41d7e3:	loopne 0x41d771
  41d7e5:	xor    eax,0xfca5f482
  41d7ea:	xchg   ebp,eax
  41d7eb:	cmp    eax,DWORD PTR [esi-0x68c6d73d]
  41d7f1:	fstp   TBYTE PTR [esi]
  41d7f3:	cmp    esp,DWORD PTR [edi+0x21]
  41d7f6:	repnz pop ecx
  41d7f8:	and    DWORD PTR [edi+0x63],ebx
  41d7fb:	sbb    al,0xa1
  41d7fd:	imul   esi,DWORD PTR [eax],0xc1faa2a0
  41d803:	lea    ebp,[eax-0x2ee1630f]
  41d809:	pop    ds
  41d80a:	adc    cl,bl
  41d80c:	sub    edx,0x981999e7
  41d812:	adc    BYTE PTR [ecx+0x3d],bl
  41d815:	outs   dx,BYTE PTR cs:[esi]
  41d817:	sahf   
  41d818:	inc    edi
  41d819:	cmp    BYTE PTR [ecx+0x34441e5],bh
  41d81f:	adc    BYTE PTR [edi+eiz*8-0x37],al
  41d823:	inc    ebp
  41d824:	(bad)  
  41d825:	retf   0xfc67
  41d828:	and    DWORD PTR [ebx-0x5678ffe3],ebp
  41d82e:	or     eax,0x364c2195
  41d833:	mov    bh,0xa4
  41d836:	shr    BYTE PTR [eax-0x8],0x80
  41d83a:	dec    edx
  41d83b:	mov    esp,0xe9c422fe
  41d840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d841:	out    0x1,eax
  41d843:	mov    edi,0x474e65e9
  41d848:	lock retf 
  41d84a:	jp     0x41d895
  41d84c:	test   eax,0xf37f6ed2
  41d851:	cmp    BYTE PTR ds:0x370e0de0,ah
  41d857:	(bad)  
  41d858:	adc    eax,0xb2d0782c
  41d85d:	call   0x1ef7:0xb772046b
  41d864:	pop    es
  41d865:	jo     0x41d8bf
  41d867:	pop    ebx
  41d868:	aaa    
  41d869:	add    eax,0x66c73201
  41d86e:	out    dx,al
  41d86f:	ficom  DWORD PTR [esi]
  41d871:	mov    ch,BYTE PTR [edx]
  41d873:	mov    bl,0x77
  41d875:	sbb    al,BYTE PTR [edx-0x7e]
  41d878:	scas   al,BYTE PTR es:[edi]
  41d879:	into   
  41d87a:	hlt    
  41d87b:	lods   eax,DWORD PTR ds:[esi]
  41d87c:	ins    BYTE PTR es:[edi],dx
  41d87d:	sar    BYTE PTR [ebx],1
  41d87f:	loop   0x41d85b
  41d881:	lods   eax,DWORD PTR ds:[esi]
  41d882:	hlt    
  41d883:	and    esp,DWORD PTR [edx+0x78f0dac3]
  41d889:	fimul  WORD PTR [edx+eiz*2]
  41d88c:	inc    ebp
  41d88d:	inc    edi
  41d88e:	ins    BYTE PTR es:[edi],dx
  41d88f:	sub    al,0xe
  41d891:	push   ebp
  41d892:	das    
  41d893:	xchg   BYTE PTR [ecx+ebp*8-0x801d71f],ch
  41d89a:	jbe    0x41d81d
  41d89c:	inc    edi
  41d89d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d89e:	cwde   
  41d89f:	cmp    eax,0x920496f9
  41d8a4:	mov    ch,0x17
  41d8a6:	loopne 0x41d867
  41d8a8:	dec    esi
  41d8a9:	ror    eax,cl
  41d8ab:	pop    ds
  41d8ac:	mov    edx,DWORD PTR ss:0x57271694
  41d8b3:	ficom  WORD PTR [edx-0x767eade8]
  41d8b9:	test   BYTE PTR [esi-0x746357e1],al
  41d8bf:	arpl   WORD PTR [eax],sp
  41d8c1:	in     eax,0xf9
  41d8c3:	mov    ebx,0x1ca2e270
  41d8c8:	and    bl,ah
  41d8ca:	or     ecx,DWORD PTR [edx]
  41d8cc:	pop    esi
  41d8cd:	popf   
  41d8ce:	jno    0x41d8ab
  41d8d0:	(bad)  [ebp+0x12]
  41d8d3:	push   0xffffffad
  41d8d5:	mov    esp,0x6aa6cc8b
  41d8da:	cmp    DWORD PTR [edi],esi
  41d8dc:	fadd   QWORD PTR [edx+0x6f]
  41d8df:	rcr    BYTE PTR [ebp+0x226c763],1
  41d8e5:	mov    ecx,0x87061f5c
  41d8eb:	inc    edx
  41d8ec:	iret   
  41d8ed:	mov    bl,0x7d
  41d8ef:	call   FWORD PTR [ecx-0x75]
  41d8f2:	push   es
  41d8f3:	(bad)  
  41d8f4:	jnp    0x41d917
  41d8f6:	std    
  41d8f7:	mov    ds:0x72570178,eax
  41d8fc:	mov    esi,0x1f3d50d5
  41d901:	xchg   ebx,eax
  41d902:	fcmovnb st,st(0)
  41d904:	mov    dl,0x8b
  41d906:	push   esi
  41d907:	cli    
  41d908:	sbb    BYTE PTR [esi],ah
  41d90a:	mov    edx,0xc7c0fb01
  41d90f:	ror    DWORD PTR [esi+eax*2-0x6d],0xe0
  41d914:	mov    edx,0xa4737cc3
  41d919:	fisttp DWORD PTR [ebx]
  41d91b:	loop   0x41d921
  41d91d:	and    eax,DWORD PTR [ebx-0x6a]
  41d920:	mov    BYTE PTR [esi-0x136278e7],al
  41d926:	cmp    ebp,edi
  41d928:	loopne 0x41d952
  41d92a:	xchg   esp,eax
  41d92b:	rcl    BYTE PTR [eax+0x53acab2],cl
  41d931:	jbe    0x41d8ec
  41d933:	mov    ds:0x851eeb1f,al
  41d938:	icebp  
  41d939:	sub    eax,0xa49f62bd
  41d93e:	pusha  
  41d93f:	scas   eax,DWORD PTR es:[edi]
  41d940:	leave  
  41d941:	lock in eax,0xc2
  41d944:	push   ebx
  41d945:	lock dec edi
  41d947:	push   ecx
  41d948:	jle    0x41d9a2
  41d94a:	ins    BYTE PTR es:[edi],dx
  41d94b:	addr16 xchg ebx,eax
  41d94d:	cmp    edx,esi
  41d94f:	test   DWORD PTR [esi-0x55aa6179],esp
  41d955:	stos   DWORD PTR es:[edi],eax
  41d956:	xchg   edi,eax
  41d957:	mov    ebx,0x56aaef3d
  41d95c:	(bad)  
  41d95d:	lock jno 0x41d980
  41d960:	sbb    esi,DWORD PTR [edx+esi*2+0x34]
  41d964:	add    al,0x99
  41d966:	mov    esi,0x6f4d04c2
  41d96b:	lds    ebx,FWORD PTR ds:0xcbb91d2d
  41d971:	int3   
  41d972:	mov    ah,0xd4
  41d974:	rcl    eax,1
  41d976:	in     al,0x2c
  41d978:	bound  esi,QWORD PTR [ebp-0x73]
  41d97b:	jg     0x41d9b7
  41d97d:	stos   DWORD PTR es:[edi],eax
  41d97e:	shl    BYTE PTR [eax+0x295a1768],0xd6
  41d985:	push   ds
  41d986:	sbb    eax,0x4347a115
  41d98b:	dec    esi
  41d98c:	inc    esp
  41d98d:	xor    al,0xc6
  41d98f:	lods   eax,DWORD PTR ds:[esi]
  41d990:	xchg   esp,eax
  41d991:	mov    BYTE PTR [ebp-0x15652fab],cl
  41d997:	fwait
  41d998:	mov    edx,0x3a19f932
  41d99d:	dec    esi
  41d99e:	outs   dx,DWORD PTR ds:[esi]
  41d99f:	pmullw mm0,QWORD PTR [ebx+edi*8]
  41d9a3:	pushf  
  41d9a4:	mov    bh,BYTE PTR [ebp-0x21]
  41d9a7:	inc    ecx
  41d9a8:	xchg   esp,eax
  41d9a9:	(bad)  
  41d9aa:	je     0x41d99a
  41d9ac:	ss das 
  41d9ae:	sub    eax,ebp
  41d9b0:	test   ebx,esi
  41d9b2:	popa   
  41d9b3:	pushf  
  41d9b4:	push   eax
  41d9b5:	int    0xeb
  41d9b7:	dec    ebx
  41d9b8:	(bad)  
  41d9b9:	mov    ch,BYTE PTR [ecx+0x56]
  41d9bc:	xor    al,0x96
  41d9be:	jnp    0x41d9ab
  41d9c0:	loopne 0x41da3f
  41d9c2:	(bad)  
  41d9c3:	jmp    0x41d9f9
  41d9c5:	aaa    
  41d9c6:	push   edi
  41d9c7:	xor    eax,0x8da7ecc4
  41d9cc:	fistp  DWORD PTR [ebx+0x4e]
  41d9cf:	cld    
  41d9d0:	shl    BYTE PTR [eax-0x7f],1
  41d9d3:	test   DWORD PTR [edx-0x786e15d8],esi
  41d9d9:	(bad)  
  41d9da:	xor    al,BYTE PTR [esi]
  41d9dc:	scas   al,BYTE PTR es:[edi]
  41d9dd:	sbb    eax,0x715c45a9
  41d9e2:	out    dx,al
  41d9e3:	cmc    
  41d9e4:	xchg   ebp,eax
  41d9e5:	and    ebp,0xffffffcd
  41d9e8:	mov    ah,0xa6
  41d9ea:	pop    ecx
  41d9eb:	inc    eax
  41d9ec:	ret    
  41d9ed:	xchg   BYTE PTR [edx],bl
  41d9ef:	mov    al,ds:0x7aeb20af
  41d9f4:	ins    DWORD PTR es:[edi],dx
  41d9f5:	aad    0xd8
  41d9f7:	sub    BYTE PTR [edx],0x23
  41d9fa:	std    
  41d9fb:	pop    ebp
  41d9fc:	loop   0x41d9c4
  41d9fe:	sub    ebp,eax
  41da00:	in     eax,0x9b
  41da02:	dec    esi
  41da03:	test   al,0x58
  41da05:	adc    BYTE PTR [bp+si],dl
  41da08:	sub    eax,0xbacf1421
  41da0d:	call   0xaa8aaa8
  41da12:	in     eax,0xe9
  41da14:	mov    dh,BYTE PTR [eax-0x58]
  41da17:	neg    esi
  41da19:	mov    ds:0xfa07dcae,al
  41da1e:	inc    ebp
  41da1f:	mov    ch,0x32
  41da21:	sahf   
  41da22:	adc    DWORD PTR [edi-0x68],0xe100f401
  41da29:	mov    BYTE PTR [edi],dl
  41da2b:	(bad)  
  41da2c:	sahf   
  41da2d:	push   ss
  41da2e:	imul   edx,ebp,0xffffffdf
  41da31:	(bad)  
  41da32:	adc    ah,BYTE PTR [ecx+ebx*1]
  41da35:	iret   
  41da36:	jb     0x41d9b8
  41da38:	adc    eax,0x599cf62b
  41da3d:	and    edx,DWORD PTR [ebx-0x5a00ea78]
  41da43:	add    eax,eax
  41da45:	jbe    0x41da5a
  41da47:	test   eax,0xc30e55a7
  41da4c:	push   ebp
  41da4d:	fwait
  41da4e:	pop    edx
  41da4f:	std    
  41da50:	add    DWORD PTR [ebx+0x63],eax
  41da53:	jbe    0x41dab2
  41da55:	stc    
  41da56:	fild   WORD PTR [edi+0x36]
  41da59:	std    
  41da5a:	dec    ebx
  41da5b:	test   edx,ebp
  41da5d:	inc    ebp
  41da5e:	or     al,0x3c
  41da60:	add    BYTE PTR ds:0x42dd0e15,ch
  41da66:	das    
  41da67:	popa   
  41da68:	mov    eax,ds:0x514017d
  41da6d:	push   es
  41da6e:	mov    ds:0xe8c45ddb,al
  41da73:	test   BYTE PTR ds:0xe7cfc409,bl
  41da79:	jl     0x41dadc
  41da7b:	cmp    bl,al
  41da7d:	test   eax,ecx
  41da7f:	inc    ecx
  41da80:	popf   
  41da81:	loopne 0x41dac9
  41da83:	mov    dl,0xa1
  41da85:	pop    ebp
  41da86:	push   ss
  41da87:	mov    fs,edi
  41da89:	iret   
  41da8a:	shl    ah,1
  41da8c:	test   DWORD PTR [ebp+0x2],eax
  41da8f:	sbb    eax,0x47567912
  41da94:	aaa    
  41da95:	xor    eax,0x32023d61
  41da9a:	es pop edi
  41da9c:	inc    esp
  41da9d:	pop    eax
  41da9e:	ins    BYTE PTR es:[edi],dx
  41da9f:	dec    ecx
  41daa0:	inc    ecx
  41daa1:	test   al,0x84
  41daa3:	or     eax,0xb8917991
  41daa8:	and    DWORD PTR [ebp+0x23],edx
  41daab:	sti    
  41daac:	mov    esp,0x4e0da137
  41dab1:	push   cs
  41dab2:	jne    0x41da99
  41dab4:	sub    BYTE PTR [eax],bh
  41dab6:	mov    al,ds:0xda65b849
  41dabb:	bound  ebx,QWORD PTR ds:0x58ebfa39
  41dac1:	mov    ecx,0xdf2a0e18
  41dac6:	adc    dh,ah
  41dac8:	dec    esi
  41dac9:	sub    al,0x45
  41dacb:	loope  0x41da8c
  41dacd:	scas   eax,DWORD PTR es:[edi]
  41dace:	call   0x4ba5:0xdf2ad12e
  41dad5:	push   es
  41dad6:	xlat   BYTE PTR ds:[ebx]
  41dad7:	push   esp
  41dad8:	fstp   QWORD PTR [ebx+ecx*1+0x71]
  41dadc:	popa   
  41dadd:	scas   al,BYTE PTR es:[edi]
  41dade:	inc    ebx
  41dadf:	ins    DWORD PTR es:[edi],dx
  41dae0:	cmp    al,0x6f
  41dae2:	xchg   edx,eax
  41dae3:	pusha  
  41dae4:	xchg   esi,eax
  41dae5:	aas    
  41dae6:	pop    esi
  41dae7:	push   esp
  41dae8:	pop    ds
  41dae9:	mov    ss,WORD PTR [ebx]
  41daeb:	in     al,dx
  41daec:	sar    DWORD PTR [ecx+0x2b],1
  41daef:	dec    ebx
  41daf0:	aam    0x83
  41daf2:	hlt    
  41daf3:	and    eax,0x640492ec
  41daf8:	mov    dl,0xcf
  41dafa:	dec    ebp
  41dafb:	call   0xde49:0xa5cbb05f
  41db02:	pop    esp
  41db03:	fdivp  st(6),st
  41db05:	retf   0x720a
  41db08:	ins    DWORD PTR es:[edi],dx
  41db09:	int    0xf3
  41db0b:	sbb    al,bl
  41db0d:	push   0x28f55a25
  41db12:	xchg   DWORD PTR [eax],eax
  41db14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db15:	inc    ecx
  41db16:	inc    esi
  41db17:	xchg   esp,eax
  41db18:	aas    
  41db19:	popf   
  41db1a:	cmp    ecx,DWORD PTR ds:0xab42da18
  41db20:	mov    esi,0xcd73ac5b
  41db25:	lahf   
  41db26:	data16 into 
  41db28:	inc    eax
  41db29:	into   
  41db2a:	jg     0x41daf9
  41db2c:	scas   eax,DWORD PTR es:[edi]
  41db2d:	xor    eax,0x758d6520
  41db32:	pop    ebx
  41db33:	jmp    0x3e9a:0x61fb29e6
  41db3a:	daa    
  41db3b:	std    
  41db3c:	and    BYTE PTR [ebx],ch
  41db3e:	sbb    al,0x4b
  41db40:	cmp    bh,BYTE PTR [ebx+ecx*2-0x8282d80]
  41db47:	xchg   edx,eax
  41db48:	jecxz  0x41db5a
  41db4a:	loopne 0x41db96
  41db4c:	cdq    
  41db4d:	sar    bh,1
  41db4f:	aas    
  41db50:	fst    DWORD PTR [ecx+0x63]
  41db53:	not    BYTE PTR ds:0x406783ff
  41db59:	pop    ebp
  41db5a:	and    eax,0xfc0adae3
  41db5f:	xor    DWORD PTR [ebx+0x19],0xffffff84
  41db63:	sbb    esp,DWORD PTR [ebp-0x6865fc92]
  41db69:	xchg   esi,eax
  41db6a:	jecxz  0x41dbc8
  41db6c:	outs   dx,DWORD PTR ds:[esi]
  41db6d:	sahf   
  41db6e:	pop    ecx
  41db6f:	in     eax,0x95
  41db71:	cdq    
  41db72:	or     ecx,DWORD PTR [esi+ebp*4+0x25]
  41db76:	fidivr WORD PTR [esi-0x4aaa1ac0]
  41db7c:	aad    0x80
  41db7e:	fdivr  st,st(0)
  41db80:	ficom  DWORD PTR [ebp-0x1d]
  41db83:	push   ebx
  41db84:	loopne 0x41db42
  41db86:	cmp    eax,0x748d00f8
  41db8b:	push   edi
  41db8c:	and    edi,DWORD PTR [ebx+0x4488524]
  41db92:	shl    BYTE PTR [edi-0x2239bfde],1
  41db98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db99:	jl     0x41dc02
  41db9b:	xor    al,0xa5
  41db9d:	imul   cl
  41db9f:	and    al,0xd9
  41dba1:	xchg   ebp,eax
  41dba2:	aas    
  41dba3:	mov    ch,0x47
  41dba5:	pop    ebp
  41dba6:	inc    esi
  41dba7:	xchg   esp,eax
  41dba8:	and    ebx,esp
  41dbaa:	lea    ebp,[ecx]
  41dbac:	ins    DWORD PTR es:[edi],dx
  41dbad:	mov    ebp,0x5fb9c468
  41dbb2:	outs   dx,DWORD PTR ds:[esi]
  41dbb3:	stos   DWORD PTR es:[edi],eax
  41dbb4:	fist   WORD PTR [ebp+ecx*4+0x2a]
  41dbb8:	ror    BYTE PTR [ecx-0x22],1
  41dbbb:	cmc    
  41dbbc:	test   DWORD PTR [edx],edi
  41dbbe:	push   edx
  41dbbf:	fidivr WORD PTR [ecx]
  41dbc1:	add    BYTE PTR [edx],ah
  41dbc3:	cmp    al,0x73
  41dbc5:	(bad)  
  41dbc6:	sub    ebp,DWORD PTR [ebx+ebp*4+0x5ba677a0]
  41dbcd:	sbb    edi,0x43
  41dbd0:	push   es
  41dbd1:	and    esi,DWORD PTR [ebx]
  41dbd3:	sbb    eax,0xc50dc353
  41dbd8:	push   edi
  41dbd9:	pop    ebx
  41dbda:	add    al,0xe1
  41dbdc:	gs jecxz 0x41dbe2
  41dbdf:	or     edx,DWORD PTR [ebx-0x3e5aafa5]
  41dbe5:	mov    al,ds:0x62d050b5
  41dbea:	jae    0x41dbdc
  41dbec:	or     bl,BYTE PTR [edx+0x5edd3aa2]
  41dbf2:	cmp    edi,ebp
  41dbf4:	mov    eax,0xd5286f96
  41dbf9:	cli    
  41dbfa:	call   0x81473318
  41dbff:	retf   0x2e31
  41dc02:	iret   
  41dc03:	aaa    
  41dc04:	or     al,0x40
  41dc06:	dec    ebx
  41dc07:	sbb    BYTE PTR [edi+ebp*2],ch
  41dc0a:	ds push cs
  41dc0c:	pop    esp
  41dc0d:	pushf  
  41dc0e:	leave  
  41dc0f:	loopne 0x41dbcc
  41dc11:	adc    BYTE PTR [ecx],bh
  41dc13:	sub    al,BYTE PTR [ecx-0x38]
  41dc16:	out    0x7a,al
  41dc18:	mov    ah,dl
  41dc1a:	shl    DWORD PTR ss:[ebx+0x7bde8547],cl
  41dc21:	jmp    0x5c76:0xa95c11eb
  41dc28:	shl    BYTE PTR [ebx-0x64],cl
  41dc2b:	icebp  
  41dc2c:	jmp    0xaaf23bdf
  41dc31:	or     al,0x8e
  41dc33:	jno    0x41dca3
  41dc35:	cmp    BYTE PTR [edx-0x20e849d0],dh
  41dc3b:	icebp  
  41dc3c:	clc    
  41dc3d:	ss mov si,0x4242
  41dc42:	mov    bh,0x7c
  41dc44:	idiv   al
  41dc46:	xor    eax,DWORD PTR ds:0xc52c36c2
  41dc4c:	fcomp  DWORD PTR [eax]
  41dc4e:	inc    ecx
  41dc4f:	frstor [ebx]
  41dc51:	and    bh,BYTE PTR [ebx+0x2f]
  41dc54:	jno    0x41dbe8
  41dc56:	int3   
  41dc57:	jne    0x41dcc4
  41dc59:	and    BYTE PTR [esp+ebp*1-0x50],0x99
  41dc5e:	bound  esi,QWORD PTR [ebx]
  41dc60:	xchg   ebp,eax
  41dc61:	test   eax,0x202df290
  41dc66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc67:	push   edi
  41dc68:	das    
  41dc69:	dec    ecx
  41dc6a:	xor    cl,BYTE PTR [ebp-0x52a27837]
  41dc70:	mov    al,0xde
  41dc72:	(bad)  
  41dc73:	les    edi,FWORD PTR [esi+0x3df462b9]
  41dc79:	mov    edi,DWORD PTR [edx+0x75]
  41dc7c:	or     bl,bl
  41dc7e:	xchg   ecx,eax
  41dc7f:	dec    edi
  41dc80:	in     eax,dx
  41dc81:	frstor [eax-0x54bab19d]
  41dc87:	xchg   esp,eax
  41dc88:	in     eax,dx
  41dc89:	mov    esi,0x8102edea
  41dc8e:	mov    esp,0x2d2560ab
  41dc93:	faddp  st(1),st
  41dc95:	adc    eax,0xd34dd796
  41dc9a:	mov    eax,ds:0xbde85706
  41dc9f:	dec    esi
  41dca0:	int    0x24
  41dca2:	push   esi
  41dca3:	mov    dh,0xb1
  41dca5:	cwde   
  41dca6:	clc    
  41dca7:	xor    eax,ebx
  41dca9:	xchg   ebx,eax
  41dcaa:	xor    cl,cl
  41dcac:	es or  al,0xdf
  41dcaf:	push   edi
  41dcb0:	cmp    edi,DWORD PTR [edi-0x4f943080]
  41dcb6:	xor    al,0xa4
  41dcb8:	mov    ebp,DWORD PTR [edx]
  41dcba:	push   ds
  41dcbb:	retf   
  41dcbc:	mov    ds,WORD PTR [eax+0xf5d5597]
  41dcc2:	jb     0x41dcad
  41dcc4:	jmp    0xb0e3:0xa62b08db
  41dccb:	inc    esi
  41dccc:	test   BYTE PTR [ecx+0x1d],ah
  41dccf:	pop    eax
  41dcd0:	and    DWORD PTR [ecx],0x682aaf97
  41dcd6:	and    al,0x70
  41dcd8:	mov    eax,0xdf6a8d4b
  41dcdd:	xor    BYTE PTR [edi+0x534baf4d],0x9f
  41dce4:	adc    al,0x2f
  41dce6:	mov    ebp,es
  41dce8:	ror    edx,1
  41dcea:	xchg   edi,eax
  41dceb:	add    esi,ebx
  41dced:	out    dx,eax
  41dcee:	arpl   WORD PTR [eax+ebp*2-0x7572fd30],di
  41dcf5:	cld    
  41dcf6:	fsubr  QWORD PTR [edi-0x30]
  41dcf9:	sub    bl,BYTE PTR [ebx+0x620a9d4b]
  41dcff:	jnp    0x41dd23
  41dd01:	(bad)  
  41dd02:	push   ds
  41dd03:	int    0xa5
  41dd05:	dec    DWORD PTR [esi]
  41dd07:	xor    BYTE PTR [ecx],al
  41dd09:	sub    eax,0xdd0ab783
  41dd0e:	and    BYTE PTR [ebp+0x4688092a],ch
  41dd14:	mov    ds,WORD PTR es:[edi+0x325f65d2]
  41dd1b:	sbb    eax,DWORD PTR [edi+0x358e4d70]
  41dd21:	xchg   ebx,eax
  41dd22:	add    cl,BYTE PTR [edi]
  41dd24:	popf   
  41dd25:	(bad)  [eax+0x11]
  41dd28:	dec    eax
  41dd29:	popa   
  41dd2a:	pop    ss
  41dd2b:	fadd   st(5),st
  41dd2d:	push   ecx
  41dd2e:	sti    
  41dd2f:	ins    DWORD PTR es:[edi],dx
  41dd30:	xchg   edi,eax
  41dd31:	ds jmp 0x2d4d6c18
  41dd37:	out    0x28,al
  41dd39:	hlt    
  41dd3a:	stos   BYTE PTR es:[edi],al
  41dd3b:	xor    DWORD PTR [esi+0xb],0x75
  41dd3f:	add    BYTE PTR [edi],al
  41dd41:	or     DWORD PTR [edx],ebp
  41dd43:	lods   eax,DWORD PTR ds:[esi]
  41dd44:	add    BYTE PTR [esi+0x39],ah
  41dd47:	leave  
  41dd48:	pop    eax
  41dd49:	aas    
  41dd4a:	inc    ebp
  41dd4b:	jmp    0x41dcdf
  41dd4d:	mov    al,ds:0xf4d8a229
  41dd52:	or     BYTE PTR [edi-0x5b],0x74
  41dd56:	jp     0x41dd7f
  41dd58:	or     DWORD PTR [ebp-0x3d1e88ae],esi
  41dd5e:	test   eax,0x300acd2
  41dd63:	fimul  WORD PTR [ecx*4-0x2da2dc97]
  41dd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd6b:	in     eax,dx
  41dd6c:	dec    edx
  41dd6d:	push   0x290a0e39
  41dd72:	fld    DWORD PTR [ebp+0x57be6990]
  41dd78:	cmp    DWORD PTR [edx],ecx
  41dd7a:	fmul   QWORD PTR [edi+0x78]
  41dd7d:	sub    esi,esi
  41dd7f:	push   ds
  41dd80:	add    BYTE PTR [edi+0x46e5a4f5],bh
  41dd86:	ja     0x41ddad
  41dd88:	jl     0x41de05
  41dd8a:	push   ebp
  41dd8b:	ins    BYTE PTR es:[edi],dx
  41dd8c:	and    esp,edx
  41dd8e:	and    eax,DWORD PTR [esi]
  41dd90:	mov    edx,0x8314d729
  41dd95:	sub    ah,BYTE PTR [edi]
  41dd97:	xlat   BYTE PTR ds:[ebx]
  41dd98:	mov    edx,0xe0d7d59c
  41dd9d:	jno    0x41dd77
  41dd9f:	add    al,BYTE PTR [ecx+0x4]
  41dda2:	pop    esi
  41dda3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dda4:	sub    dh,ah
  41dda6:	cwde   
  41dda7:	addr16 retf 0xfea8
  41ddab:	loope  0x41dd6e
  41ddad:	mov    bl,0x1c
  41ddaf:	mov    ah,0xbf
  41ddb1:	and    DWORD PTR [eax+0x16],ecx
  41ddb4:	mov    bh,0x76
  41ddb6:	cmp    DWORD PTR [eax+eax*2],edi
  41ddb9:	mov    dl,0x89
  41ddbb:	jmp    0xb9ac:0xc6db1311
  41ddc2:	jle    0x41ddb1
  41ddc4:	add    cl,0x19
  41ddc7:	pusha  
  41ddc8:	pop    edx
  41ddc9:	or     ah,bl
  41ddcb:	cs adc edx,edx
  41ddce:	ja     0x41dd6d
  41ddd0:	ss dec edi
  41ddd2:	stos   DWORD PTR es:[edi],eax
  41ddd3:	jle    0x41dd91
  41ddd5:	xchg   edx,eax
  41ddd6:	test   DWORD PTR [ebx],0xa963da45
  41dddc:	lods   eax,DWORD PTR ds:[esi]
  41dddd:	mov    ds:0x16446da9,eax
  41dde2:	cli    
  41dde3:	neg    ah
  41dde5:	mov    ?,WORD PTR [edi]
  41dde7:	push   esi
  41dde8:	sbb    ah,bl
  41ddea:	in     al,0xb4
  41ddec:	xchg   edx,eax
  41dded:	push   ecx
  41ddee:	test   DWORD PTR [eax+0x20],0xe665ab7a
  41ddf5:	jecxz  0x41ddd4
  41ddf7:	inc    esp
  41ddf8:	mov    eax,0x6eda7c3e
  41ddfd:	push   ecx
  41ddfe:	jae    0x41de2f
  41de00:	cmp    esi,DWORD PTR [ecx]
  41de02:	cdq    
  41de03:	dec    ebx
  41de04:	add    al,0x1e
  41de06:	rcr    DWORD PTR [eax-0x58bf3655],0xc2
  41de0d:	xor    al,0x9c
  41de0f:	xchg   esi,eax
  41de10:	inc    esp
  41de11:	stos   BYTE PTR es:[edi],al
  41de12:	xchg   ecx,eax
  41de13:	pushf  
  41de14:	sbb    eax,0x4d04b553
  41de19:	mov    eax,ds:0x52e6bcda
  41de1e:	sbb    al,0xb1
  41de20:	dec    ecx
  41de21:	jo     0x41ddf4
  41de23:	cwde   
  41de24:	ficom  DWORD PTR [ecx+0x59]
  41de27:	lahf   
  41de28:	pushf  
  41de29:	popa   
  41de2a:	(bad)  
  41de2b:	(bad)  
  41de2c:	mov    al,ds:0x6fa720a9
  41de31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de32:	fst    QWORD PTR [esi-0x5a03c648]
  41de38:	cld    
  41de39:	(bad)  
  41de3a:	sub    dl,BYTE PTR [ebx-0x6b]
  41de3d:	(bad)  
  41de3e:	pop    esp
  41de3f:	icebp  
  41de40:	mov    ds:0xb18a5ff9,eax
  41de45:	test   eax,0xacfd6958
  41de4a:	stos   DWORD PTR es:[edi],eax
  41de4b:	fs into 
  41de4d:	bndldx bnd3,[esi+0x664aabb6]
  41de54:	(bad)  
  41de55:	jl     0x41ddef
  41de57:	test   BYTE PTR [ecx],dl
  41de59:	imul   esi,ebp,0xffffff9c
  41de5c:	ja     0x41deb8
  41de5e:	stc    
  41de5f:	loop   0x41de1f
  41de61:	mov    al,0x9e
  41de63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de64:	adc    esp,DWORD PTR es:[edx+0x52]
  41de68:	mov    bl,0xbd
  41de6a:	stos   DWORD PTR es:[edi],eax
  41de6b:	retf   
  41de6c:	aas    
  41de6d:	push   edi
  41de6e:	outs   dx,BYTE PTR ds:[esi]
  41de6f:	and    DWORD PTR [eax-0x46],0x4b
  41de73:	clc    
  41de74:	pop    ebx
  41de75:	sub    al,0xcb
  41de77:	push   esi
  41de78:	popa   
  41de79:	and    DWORD PTR [ecx+0x47485f98],ecx
  41de7f:	push   ecx
  41de81:	push   ebx
  41de82:	mov    al,ds:0xf82e5d48
  41de87:	inc    ebx
  41de88:	(bad)  
  41de8b:	cmp    ecx,DWORD PTR [ebx+eiz*8+0x2]
  41de8f:	adc    edi,esp
  41de91:	lea    ebx,[edi]
  41de93:	mov    dl,0xea
  41de95:	mov    es,ebx
  41de97:	popf   
  41de98:	popf   
  41de99:	cmp    BYTE PTR [edx-0x4ff10772],ah
  41de9f:	adc    eax,esi
  41dea1:	pop    ds
  41dea2:	fbld   TBYTE PTR [edi]
  41dea4:	xchg   ebx,eax
  41dea5:	push   esp
  41dea6:	jg     0x41df03
  41dea8:	lock sar edx,0xe6
  41deac:	pop    es
  41dead:	jo     0x41df1a
  41deaf:	out    0xaa,al
  41deb1:	repnz and dh,BYTE PTR [esi]
  41deb4:	pop    es
  41deb5:	mov    ch,0xfe
  41deb7:	arpl   sp,dx
  41deb9:	pusha  
  41deba:	add    eax,0x72179664
  41debf:	pusha  
  41dec0:	mov    esi,0xf1358a08
  41dec5:	or     cl,BYTE PTR [ebx+eax*1-0x5e2b7539]
  41decc:	dec    ebp
  41decd:	cdq    
  41dece:	mov    cl,0x2e
  41ded0:	jb     0x41de86
  41ded2:	fbstp  TBYTE PTR [ebp-0x4c]
  41ded5:	sub    bl,cl
  41ded7:	push   esp
  41ded8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ded9:	xor    eax,0xa5bfecfe
  41dede:	stc    
  41dedf:	inc    edi
  41dee0:	and    eax,0x6cfc1e6a
  41dee5:	daa    
  41dee6:	jne    0x41df65
  41dee8:	shr    DWORD PTR [esi],0x2b
  41deeb:	(bad)  
  41deec:	sub    eax,0xc39aea2f
  41def1:	push   edx
  41def2:	push   ebx
  41def3:	dec    ebx
  41def4:	cs adc esp,ebp
  41def7:	shr    BYTE PTR [esi-0x1f07d597],0xdd
  41defe:	inc    ebx
  41deff:	ret    
  41df00:	loope  0x41de93
  41df02:	pop    ecx
  41df03:	call   0xbb4c6477
  41df08:	mov    edx,0xc0ee6bc3
  41df0d:	imul   eax,eax,0xffffffae
  41df10:	stc    
  41df11:	(bad)  
  41df12:	mov    cl,0xbe
  41df14:	pop    es
  41df15:	xchg   ebp,eax
  41df16:	cwde   
  41df17:	jne    0x41dea0
  41df19:	or     al,0xe0
  41df1b:	or     dl,BYTE PTR [ebx+ecx*4-0x2f94350]
  41df22:	or     ecx,ecx
  41df24:	call   0x5394:0xf3a26c12
  41df2b:	icebp  
  41df2c:	xchg   ebx,eax
  41df2d:	inc    BYTE PTR [eax-0x30]
  41df30:	out    dx,al
  41df31:	sbb    al,BYTE PTR [ecx]
  41df33:	pop    ecx
  41df34:	mov    DWORD PTR [esi+0x385656d8],esp
  41df3a:	retf   
  41df3b:	push   ebx
  41df3c:	push   ebp
  41df3d:	in     al,dx
  41df3e:	pop    ebp
  41df3f:	ror    BYTE PTR [edx-0x566801ed],0x7e
  41df46:	in     eax,0x42
  41df48:	es mov ah,0xa0
  41df4b:	xor    BYTE PTR [eax+0x2795c843],ah
  41df51:	mov    tr3,edx
  41df54:	js     0x41dfb2
  41df56:	stc    
  41df57:	icebp  
  41df58:	or     eax,0x8c88cf1
  41df5d:	loop   0x41df2a
  41df5f:	aas    
  41df60:	add    al,0x8c
  41df62:	jg     0x41df57
  41df64:	xor    BYTE PTR [esi+0x25],ah
  41df67:	add    al,0x7a
  41df69:	repz or edx,DWORD PTR ss:[edx]
  41df6d:	lds    edi,FWORD PTR [esi-0x551f4894]
  41df73:	mov    bl,0xfc
  41df75:	pop    ebx
  41df76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df77:	int3   
  41df78:	retf   
  41df79:	mov    al,al
  41df7b:	(bad)  
  41df7c:	scas   al,BYTE PTR es:[edi]
  41df7d:	dec    esp
  41df7e:	push   ecx
  41df7f:	mov    dh,0xf6
  41df81:	nop
  41df82:	data16 xlat BYTE PTR ds:[ebx]
  41df84:	mov    dh,BYTE PTR [esi]
  41df86:	cmp    al,BYTE PTR [ebx]
  41df88:	popfw  
  41df8a:	jecxz  0x41dfea
  41df8c:	sub    eax,0xc9fcff2b
  41df91:	js     0x41df9c
  41df93:	mov    al,ds:0x4dbcfd8d
  41df98:	cmovs  ebx,eax
  41df9b:	(bad)  
  41df9c:	aaa    
  41df9d:	sbb    eax,0x1440482e
  41dfa2:	mov    ebp,0xe52b8fe7
  41dfa7:	dec    eax
  41dfa8:	sub    bh,BYTE PTR [ecx]
  41dfaa:	mov    eax,ds:0xd7f2693b
  41dfaf:	outs   dx,BYTE PTR ds:[esi]
  41dfb0:	inc    edi
  41dfb1:	pop    ebx
  41dfb2:	cwde   
  41dfb3:	xor    al,dl
  41dfb5:	test   al,0x5c
  41dfb7:	rol    BYTE PTR [edi+0x4a0191a4],1
  41dfbd:	inc    esi
  41dfbe:	into   
  41dfbf:	popf   
  41dfc0:	push   esp
  41dfc1:	aaa    
  41dfc2:	ffreep st(1)
  41dfc4:	jle    0x41e039
  41dfc6:	inc    edi
  41dfc7:	dec    BYTE PTR [ebx]
  41dfc9:	es xchg esp,eax
  41dfcb:	and    al,0xfa
  41dfcd:	cwde   
  41dfce:	sub    eax,0xfbe229fa
  41dfd3:	push   esp
  41dfd4:	sbb    ecx,ecx
  41dfd6:	mov    ecx,0xfe2ee3f5
  41dfdb:	outs   dx,DWORD PTR ds:[esi]
  41dfdc:	pop    esi
  41dfdd:	cmp    dl,bl
  41dfdf:	les    esi,FWORD PTR [ecx+0x22]
  41dfe2:	dec    ebx
  41dfe3:	adc    eax,0x49f031b5
  41dfe8:	pop    edi
  41dfe9:	es cli 
  41dfeb:	mov    bl,0x41
  41dfed:	inc    edi
  41dfee:	js     0x41dfb5
  41dff0:	repz push ebx
  41dff2:	shr    ebx,0x8b
  41dff5:	inc    ecx
  41dff6:	sbb    al,0x65
  41dff8:	and    DWORD PTR [ebp-0x4a550e24],ecx
  41dffe:	add    eax,0x66f8e04d
  41e003:	jmp    0x41df91
  41e005:	push   es
  41e006:	mov    bl,0x7
  41e008:	jae    0x41e03b
  41e00a:	adc    eax,esi
  41e00c:	stos   BYTE PTR es:[edi],al
  41e00d:	push   edi
  41e00e:	lds    ebx,FWORD PTR [edx]
  41e010:	test   BYTE PTR [ebx+0x6b8d69b9],cl
  41e016:	inc    ebp
  41e017:	repnz sahf 
  41e019:	cmp    esp,ebx
  41e01b:	dec    edx
  41e01c:	(bad)  
  41e01d:	jle    0x41e051
  41e01f:	ins    BYTE PTR es:[edi],dx
  41e020:	sub    BYTE PTR [edi],dl
  41e022:	mov    dl,0xe1
  41e024:	inc    edi
  41e025:	mov    ch,0x15
  41e027:	push   0xf0a18359
  41e02c:	and    BYTE PTR [edi-0x32],ah
  41e02f:	jns    0x41dff6
  41e031:	je     0x41e036
  41e033:	gs push ebp
  41e035:	sub    esi,edx
  41e037:	std    
  41e038:	jbe    0x41dfeb
  41e03a:	in     al,dx
  41e03b:	cmp    ebp,DWORD PTR [eax-0x28a41fe8]
  41e041:	lahf   
  41e042:	adc    ah,BYTE PTR [edi-0x34ae9775]
  41e048:	lea    edi,ds:0xcf039529
  41e04e:	add    esi,ebp
  41e050:	mov    cl,0x6
  41e052:	js     0x41e05f
  41e054:	jo     0x41e0ce
  41e056:	clc    
  41e057:	mov    ah,0x44
  41e059:	hlt    
  41e05a:	mov    ah,0x6f
  41e05c:	inc    ebp
  41e05d:	div    BYTE PTR [edx+ebx*1+0x242f057a]
  41e064:	aam    0xbd
  41e066:	pop    edi
  41e067:	jge    0x41e056
  41e069:	xchg   DWORD PTR [edi],esi
  41e06b:	scas   eax,DWORD PTR es:[edi]
  41e06c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e06d:	(bad)  
  41e070:	pop    edx
  41e071:	adc    ebx,ebp
  41e073:	lods   eax,DWORD PTR ds:[esi]
  41e074:	mov    edx,0x22046599
  41e079:	and    al,0x4f
  41e07b:	(bad)
  41e07e:	xchg   ebp,eax
  41e07f:	ins    DWORD PTR es:[edi],dx
  41e080:	adc    ebp,DWORD PTR [ecx]
  41e082:	retf   
  41e083:	cmc    
  41e084:	adc    al,0xd3
  41e086:	mov    edi,0xcd0cfc1f
  41e08b:	scas   al,BYTE PTR es:[edi]
  41e08c:	cwde   
  41e08d:	push   cs
  41e08e:	call   0xcd0ca211
  41e093:	jmp    0x1f96:0x4c10bb8c
  41e09a:	xchg   edx,eax
  41e09b:	rol    BYTE PTR [edx-0x17],cl
  41e09e:	or     esp,DWORD PTR [ebx+ebx*4+0x47143b0d]
  41e0a5:	call   0xa4d:0xfb9ac910
  41e0ac:	dec    ecx
  41e0ad:	dec    eax
  41e0ae:	icebp  
  41e0af:	dec    edx
  41e0b0:	(bad)  
  41e0b1:	jge    0x41e12e
  41e0b3:	ret    0x82e
  41e0b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0b7:	xor    esp,DWORD PTR [esi-0x57]
  41e0ba:	mov    eax,ds:0xf707fd58
  41e0bf:	mov    WORD PTR [eax],gs
  41e0c1:	and    eax,0x30ec636d
  41e0c6:	lds    esi,FWORD PTR [edi+0x3e]
  41e0c9:	in     al,dx
  41e0ca:	ror    BYTE PTR [edi+0x5d],0x8e
  41e0ce:	inc    edx
  41e0cf:	cli    
  41e0d0:	cmp    DWORD PTR [ecx],ebx
  41e0d2:	retf   0xbb07
  41e0d5:	adc    ch,BYTE PTR [bp+di-0x1b]
  41e0d9:	pop    esp
  41e0da:	xchg   ecx,eax
  41e0db:	jle    0x41e0b9
  41e0dd:	jge    0x41e0a6
  41e0df:	sub    ebx,DWORD PTR [edx+ecx*2-0x6e]
  41e0e3:	and    al,0xa0
  41e0e5:	out    dx,eax
  41e0e6:	jp     0x41e09b
  41e0e8:	mov    BYTE PTR gs:[eax+0x3a75099b],0x38
  41e0f0:	fnstcw WORD PTR [esi+0x6b]
  41e0f3:	popa   
  41e0f4:	sti    
  41e0f5:	and    cl,BYTE PTR [esi+0x5]
  41e0f8:	push   0x77cfb28
  41e0fd:	fdivr  DWORD PTR [ebp-0x1e768e0d]
  41e103:	int    0xb9
  41e105:	xor    al,0x2e
  41e107:	gs test al,0x99
  41e10a:	lahf   
  41e10b:	dec    ebp
  41e10c:	jo     0x41e172
  41e10e:	cmp    al,dh
  41e110:	leave  
  41e111:	retf   
  41e112:	sub    BYTE PTR [esi+0x32],bl
  41e115:	movlps xmm4,QWORD PTR [ebx+0x6f57f74d]
  41e11c:	and    al,0x3e
  41e11e:	mov    dh,0xd1
  41e120:	xchg   esi,eax
  41e121:	or     al,0x6b
  41e123:	test   al,0xef
  41e125:	aam    0xd2
  41e127:	pop    ecx
  41e128:	xlat   BYTE PTR ds:[ebx]
  41e129:	push   ecx
  41e12a:	xor    BYTE PTR [ecx],bl
  41e12c:	pushf  
  41e12d:	add    BYTE PTR [ebx-0x80],bh
  41e130:	or     ebp,eax
  41e132:	mov    ecx,0xe2f13b19
  41e137:	daa    
  41e138:	jo     0x41e109
  41e13a:	and    DWORD PTR [edx+0x7b],edx
  41e13d:	mov    DWORD PTR [edi+ebx*2+0x3f],ecx
  41e141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e142:	adc    eax,0xbeabae41
  41e147:	push   0x7
  41e149:	scas   al,BYTE PTR es:[edi]
  41e14a:	inc    eax
  41e14b:	jns    0x41e132
  41e14d:	leave  
  41e14e:	out    0x76,eax
  41e150:	repz push eax
  41e152:	mov    ah,0x13
  41e154:	test   eax,0x84fcd5a7
  41e159:	or     ebp,edx
  41e15b:	mov    fs,WORD PTR [ebp+esi*2+0x443346b]
  41e162:	and    eax,0x4b5a6557
  41e167:	sub    al,0x26
  41e169:	and    bh,cl
  41e16b:	mov    ch,0xc9
  41e16d:	sub    ebx,DWORD PTR [esi+edi*8+0x59]
  41e171:	xor    DWORD PTR ds:0x461229bd,ebx
  41e177:	adc    al,0x87
  41e179:	push   ebx
  41e17a:	adc    DWORD PTR [edi],esp
  41e17c:	mov    esp,0x89b1deda
  41e181:	ret    
  41e182:	stos   BYTE PTR es:[edi],al
  41e183:	fsub   QWORD PTR [ebx]
  41e185:	add    edx,0x885ca5d6
  41e18b:	icebp  
  41e18c:	cmc    
  41e18d:	adc    esi,ebp
  41e18f:	jecxz  0x41e15b
  41e191:	call   0xf46f3c74
  41e196:	and    BYTE PTR [esi+0x1dd6aa4b],cl
  41e19c:	aaa    
  41e19d:	jp     0x41e152
  41e19f:	fwait
  41e1a0:	or     ebx,ebx
  41e1a2:	pop    esi
  41e1a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1a4:	jae    0x41e16b
  41e1a6:	lock enter 0x8e6d,0xd7
  41e1ab:	sub    eax,DWORD PTR [eax-0x5acbe054]
  41e1b1:	sbb    BYTE PTR [edx-0x6f],bl
  41e1b4:	test   BYTE PTR [edx+0x33735e2a],cl
  41e1ba:	xlat   BYTE PTR ds:[ebx]
  41e1bb:	es inc ebx
  41e1bd:	bound  edi,QWORD PTR [eax]
  41e1bf:	popa   
  41e1c0:	ins    BYTE PTR es:[edi],dx
  41e1c1:	ds aam 0x8b
  41e1c4:	and    eax,0xfee1594a
  41e1c9:	shr    BYTE PTR [esi],0x91
  41e1cc:	imul   ebx,DWORD PTR [ebx+0x6b],0xfbc9960d
  41e1d3:	in     al,0x32
  41e1d5:	mov    edx,0x3a1d87fd
  41e1da:	xor    eax,0x841a737e
  41e1df:	push   cs
  41e1e0:	mov    ebp,0xb840277e
  41e1e5:	pop    ss
  41e1e6:	mov    edx,0xc4ddc2ab
  41e1eb:	adc    esi,DWORD PTR [eax+0x2]
  41e1ee:	cwde   
  41e1ef:	adc    al,0x4c
  41e1f1:	inc    esp
  41e1f2:	sbb    esi,DWORD PTR [edi-0x11]
  41e1f5:	cmp    al,cl
  41e1f7:	es fs sbb edx,esp
  41e1fb:	cwde   
  41e1fc:	loop   0x41e259
  41e1fe:	inc    eax
  41e1ff:	sbb    ebx,edx
  41e201:	gs add al,0x87
  41e204:	or     edi,DWORD PTR [edi+0x171eefa4]
  41e20a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e20b:	cmp    DWORD PTR [ebp-0x4f],eax
  41e20e:	xchg   DWORD PTR [ebx+ecx*2-0xa92753],esi
  41e215:	pop    ebx
  41e216:	pop    ebp
  41e217:	pop    ds
  41e218:	out    dx,al
  41e219:	push   eax
  41e21a:	ins    DWORD PTR es:[edi],dx
  41e21b:	in     eax,0xa2
  41e21d:	ins    BYTE PTR es:[edi],dx
  41e21e:	imul   edi,ebp,0xbcca86d0
  41e224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e225:	adc    bl,BYTE PTR [esi-0x413459b5]
  41e22b:	es (bad) 
  41e22d:	sub    edx,DWORD PTR [eax]
  41e22f:	add    al,0x62
  41e231:	push   es
  41e232:	xchg   ecx,eax
  41e233:	out    dx,eax
  41e234:	lock das 
  41e236:	xor    DWORD PTR [edi],edi
  41e238:	bound  edx,QWORD PTR [ebp-0x70]
  41e23b:	xor    DWORD PTR [esi],ebp
  41e23d:	lock lock ror DWORD PTR [edi],cl
  41e241:	out    dx,eax
  41e242:	sub    ecx,DWORD PTR [ecx+0x6e0cac0]
  41e248:	xchg   esp,eax
  41e249:	sbb    BYTE PTR [esi+0x18b6c1e9],al
  41e24f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e250:	cmp    ebx,DWORD PTR [esi+0x7b3cf1b2]
  41e256:	push   esi
  41e257:	mov    eax,ds:0x62a86eca
  41e25c:	push   ebx
  41e25d:	fnstenv [edi-0x13]
  41e260:	retf   
  41e261:	cmp    DWORD PTR [ebp-0x53],eax
  41e264:	push   cs
  41e265:	sbb    ebp,DWORD PTR [edx+0x9cef765]
  41e26b:	lods   al,BYTE PTR ds:[esi]
  41e26c:	addr16 popw ds
  41e26f:	and    ch,BYTE PTR [edi]
  41e271:	or     dl,BYTE PTR [ecx+ebp*1-0x33]
  41e275:	sti    
  41e276:	call   0xda4eaa83
  41e27b:	or     DWORD PTR [ebx+esi*2],edx
  41e27e:	lock pusha 
  41e280:	mov    esi,ebp
  41e282:	sti    
  41e283:	add    DWORD PTR [edi],ebp
  41e285:	dec    ebp
  41e286:	test   al,0x76
  41e288:	inc    esi
  41e289:	jp     0x41e21e
  41e28b:	sub    BYTE PTR [ebx-0x28],0x2f
  41e28f:	mov    ds:0x44376a9b,eax
  41e294:	test   al,0xe6
  41e296:	test   eax,0x25ae629d
  41e29b:	in     al,0xf4
  41e29d:	jns    0x41e29b
  41e29f:	js     0x41e2b4
  41e2a1:	pop    es
  41e2a2:	shl    DWORD PTR [edx-0x617827d1],0xaa
  41e2a9:	jne    0x41e275
  41e2ab:	jmp    0x41e2d6
  41e2ad:	pusha  
  41e2ae:	mov    ebx,0xc098939e
  41e2b3:	adc    al,0x8b
  41e2b5:	push   0x71
  41e2b7:	mov    WORD PTR [ebp+0x52],?
  41e2ba:	imul   eax,DWORD PTR [eax-0x1b],0x9bd1b53b
  41e2c1:	cld    
  41e2c2:	jbe    0x41e255
  41e2c4:	out    0xf2,al
  41e2c6:	dec    edx
  41e2c7:	and    ebx,DWORD PTR [ebp-0x68e656b5]
  41e2cd:	les    ebp,FWORD PTR [eax]
  41e2cf:	jnp    0x41e2c1
  41e2d1:	push   edx
  41e2d2:	fldenv [ebx+esi*8+0x5e]
  41e2d6:	ins    BYTE PTR es:[edi],dx
  41e2d7:	ret    
  41e2d8:	(bad)  
  41e2d9:	sbb    al,0xa6
  41e2db:	adc    al,0x21
  41e2dd:	ror    edx,1
  41e2df:	inc    esp
  41e2e0:	xor    al,0x12
  41e2e2:	daa    
  41e2e3:	add    BYTE PTR [edi+0x7a],0x40
  41e2e7:	mov    ecx,0x600634df
  41e2ec:	in     al,0x48
  41e2ee:	cmc    
  41e2ef:	cmp    edi,DWORD PTR [ebx+0x472639e9]
  41e2f5:	jp     0x41e2bc
  41e2f7:	push   eax
  41e2f8:	add    esp,DWORD PTR [esi-0x2e]
  41e2fb:	retf   0x9979
  41e2fe:	ficom  DWORD PTR [ecx]
  41e300:	test   DWORD PTR [edx-0x13472865],esi
  41e306:	cmp    eax,0xa2be0057
  41e30b:	add    al,BYTE PTR [edx+0x7b17511a]
  41e311:	xor    ch,ch
  41e313:	stos   BYTE PTR es:[edi],al
  41e314:	loopne 0x41e341
  41e316:	imul   ebp,DWORD PTR [ebx+0x161ddbf6],0x8652abf
  41e320:	je     0x41e367
  41e322:	fmul   QWORD PTR ds:0xb4ad7f2b
  41e328:	shr    BYTE PTR [eax+edi*1-0x6c],cl
  41e32c:	add    eax,0x1b245729
  41e331:	scas   al,BYTE PTR es:[edi]
  41e332:	push   ds
  41e333:	outs   dx,DWORD PTR ds:[esi]
  41e334:	stc    
  41e335:	mov    ds:0xe098b59c,al
  41e33a:	mov    eax,ds:0xea69f498
  41e33f:	sbb    BYTE PTR [esi-0x6983156a],0x9f
  41e346:	cmp    al,BYTE PTR [edi-0x72]
  41e349:	jmp    0xd542:0xdfc6089a
  41e350:	push   ss
  41e351:	push   ebp
  41e352:	inc    ecx
  41e353:	out    dx,eax
  41e354:	cmp    dh,BYTE PTR [edi+0x65]
  41e357:	cli    
  41e358:	sbb    edi,DWORD PTR [edi+0x45]
  41e35b:	sub    dh,ch
  41e35d:	lahf   
  41e35e:	or     al,0x67
  41e360:	xor    DWORD PTR [ecx-0x7a],edx
  41e363:	mov    esi,0xc6b4c653
  41e368:	pop    ds
  41e369:	sti    
  41e36a:	mov    dh,0x74
  41e36c:	jne    0x41e3e5
  41e36e:	sbb    eax,DWORD PTR [edx-0x5575341b]
  41e374:	push   ecx
  41e375:	pusha  
  41e376:	push   esi
  41e377:	jae    0x41e3e4
  41e379:	mov    ecx,0x3fec3798
  41e37e:	xor    al,0x2
  41e380:	out    dx,eax
  41e381:	and    BYTE PTR ds:0x1ef65e91,ch
  41e387:	stos   DWORD PTR es:[edi],eax
  41e388:	push   ebp
  41e389:	outs   dx,BYTE PTR ds:[esi]
  41e38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38b:	stos   BYTE PTR es:[edi],al
  41e38c:	outs   dx,BYTE PTR ds:[esi]
  41e38d:	out    dx,eax
  41e38e:	fidiv  DWORD PTR [ebx+0x2d9a6126]
  41e394:	sbb    DWORD PTR gs:[edi],esi
  41e397:	push   ds
  41e398:	and    BYTE PTR ds:0xbf6e3b7c,al
  41e39e:	cmp    BYTE PTR [eax],ah
  41e3a0:	xchg   esi,eax
  41e3a1:	pop    edx
  41e3a2:	xchg   DWORD PTR [esi-0x7c],ebx
  41e3a5:	dec    edi
  41e3a6:	int    0xb0
  41e3a8:	leave  
  41e3a9:	mov    cl,0xd0
  41e3ab:	cmp    DWORD PTR [eax+esi*4],edx
  41e3ae:	in     eax,0xd1
  41e3b0:	mov    DWORD PTR [ebx],edi
  41e3b2:	inc    esp
  41e3b3:	mov    dl,0x1d
  41e3b5:	shl    BYTE PTR [esi],cl
  41e3b7:	out    0x3f,al
  41e3b9:	mov    al,BYTE PTR [ebx+0x29adbf70]
  41e3bf:	jecxz  0x41e3be
  41e3c1:	dec    eax
  41e3c2:	popa   
  41e3c3:	into   
  41e3c4:	cmp    eax,0x422f432d
  41e3c9:	imul   ebx
  41e3cb:	xor    DWORD PTR [ebx+0x2cf8140],edi
  41e3d1:	mov    bl,0x61
  41e3d3:	xor    cl,cl
  41e3d5:	loop   0x41e3d7
  41e3d7:	xor    eax,0xa5ee368c
  41e3dc:	jno    0x41e39e
  41e3de:	or     ah,bl
  41e3e0:	fistp  DWORD PTR [esi]
  41e3e2:	sbb    dl,BYTE PTR [esi+ebx*2+0x25]
  41e3e6:	out    0xe6,eax
  41e3e8:	and    al,0x18
  41e3ea:	aas    
  41e3eb:	int3   
  41e3ec:	cli    
  41e3ed:	sub    esp,esp
  41e3ef:	test   DWORD PTR [ebx-0x31],ebx
  41e3f2:	mov    ah,0x7c
  41e3f4:	inc    edx
  41e3f5:	mov    al,ds:0x2e424d46
  41e3fa:	xchg   edx,eax
  41e3fb:	out    dx,eax
  41e3fc:	xchg   edi,eax
  41e3fd:	jmp    0xcf2edf7f
  41e402:	addr16 das 
  41e404:	jb     0x41e473
  41e406:	iret   
  41e407:	imul   esi,DWORD PTR [esi],0xf28bc6b2
  41e40d:	ds out dx,al
  41e40f:	loopne 0x41e453
  41e411:	fidivr WORD PTR [eax]
  41e413:	cwde   
  41e414:	rcr    DWORD PTR [eax-0x4b],0x9a
  41e418:	inc    esp
  41e419:	pushf  
  41e41a:	push   ecx
  41e41b:	out    dx,al
  41e41c:	add    BYTE PTR [ecx+0x7e],dh
  41e41f:	jb     0x41e3d2
  41e421:	mov    BYTE PTR [ebx+0x1e95084c],0xfa
  41e428:	adc    al,0x73
  41e42a:	push   cs
  41e42b:	xlat   BYTE PTR ds:[ebx]
  41e42c:	out    dx,eax
  41e42d:	jnp    0x41e3fd
  41e42f:	cmp    BYTE PTR [ebx],ah
  41e431:	sbb    ch,BYTE PTR [esi-0x60]
  41e434:	mov    DWORD PTR [edi+eiz*8-0x76],esp
  41e438:	arpl   dx,ax
  41e43a:	or     cl,al
  41e43c:	jnp    0x41e46d
  41e43e:	mov    al,0xe2
  41e440:	into   
  41e441:	adc    edi,ebp
  41e443:	mov    cl,0xe6
  41e445:	mov    al,0x35
  41e447:	cdq    
  41e448:	dec    edx
  41e449:	shl    DWORD PTR [eax-0x368076ff],1
  41e44f:	scas   al,BYTE PTR es:[edi]
  41e450:	mov    cl,0x54
  41e452:	jnp    0x41e4ca
  41e454:	mov    DWORD PTR [esp+esi*2-0x2],ecx
  41e458:	dec    ecx
  41e459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e45a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e45b:	js     0x41e492
  41e45d:	push   ss
  41e45e:	push   ebx
  41e45f:	mov    dl,0x8e
  41e461:	loopne 0x41e426
  41e463:	lock lods eax,DWORD PTR ds:[esi]
  41e465:	or     DWORD PTR [ecx],0x15
  41e468:	stos   BYTE PTR es:[edi],al
  41e469:	xor    al,0x57
  41e46b:	mov    dh,0x8d
  41e46d:	push   cs
  41e46e:	xor    DWORD PTR [ebx-0x761d5916],ebx
  41e474:	pop    esp
  41e475:	add    BYTE PTR [eax],dl
  41e477:	neg    DWORD PTR [eax+edx*4+0x2682abdc]
  41e47e:	loopne 0x41e446
  41e480:	retf   
  41e481:	or     DWORD PTR [ebp+0x64],ebx
  41e484:	mov    ch,bl
  41e486:	and    ebp,DWORD PTR [edx]
  41e488:	sbb    al,dl
  41e48a:	shl    DWORD PTR [edx+0x2f],1
  41e48d:	mov    esi,0x3872ba31
  41e492:	fild   WORD PTR [esi]
  41e494:	push   esi
  41e495:	test   BYTE PTR [edi+0x55],bl
  41e498:	ret    
  41e499:	inc    esi
  41e49a:	sbb    DWORD PTR [ecx+0x2],ecx
  41e49d:	cmc    
  41e49e:	repnz ss mov dl,0xa
  41e4a2:	sahf   
  41e4a3:	mov    si,0xe364
  41e4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4a8:	mov    ebp,0xe31b9b9d
  41e4ad:	or     DWORD PTR [ebx-0x259089ad],ebp
  41e4b3:	pop    ebp
  41e4b4:	icebp  
  41e4b5:	out    0xd1,eax
  41e4b7:	and    DWORD PTR [ebp-0x1288ded7],0x2f
  41e4be:	xchg   BYTE PTR [edi-0x17],dh
  41e4c1:	mov    bl,0xca
  41e4c3:	push   cs
  41e4c4:	cwde   
  41e4c5:	lea    ecx,ds:[esi-0x5]
  41e4c9:	(bad)  
  41e4ca:	fcmovb st,st(5)
  41e4cc:	or     eax,0x7a82bb3
  41e4d1:	push   edx
  41e4d2:	sub    esp,DWORD PTR ds:0xc3a8960e
  41e4d8:	in     eax,0x9a
  41e4da:	call   0x7f0f630c
  41e4df:	test   al,0xd1
  41e4e1:	(bad)  
  41e4e3:	mov    ecx,0x1a74c9cc
  41e4e8:	mov    ebx,DWORD PTR [eax-0x5cb3d167]
  41e4ee:	fwait
  41e4ef:	(bad)  
  41e4f0:	cdq    
  41e4f1:	inc    esp
  41e4f2:	push   ds
  41e4f3:	pop    eax
  41e4f4:	cmc    
  41e4f5:	sti    
  41e4f6:	add    BYTE PTR [eax],bl
  41e4f8:	cwde   
  41e4f9:	dec    esi
  41e4fa:	hlt    
  41e4fb:	test   eax,0xc8532ef7
  41e500:	inc    eax
  41e501:	(bad)  
  41e502:	fstp   DWORD PTR ds:0xf4d978fb
  41e508:	std    
  41e509:	xor    BYTE PTR [ecx+0x2bfc607a],ch
  41e50f:	icebp  
  41e510:	stos   DWORD PTR es:[edi],eax
  41e511:	cwde   
  41e512:	loop   0x41e52a
  41e514:	rcr    BYTE PTR [edi+0x14],0x84
  41e518:	sbb    ah,BYTE PTR [ebx+0x2ed5fc77]
  41e51e:	les    esi,FWORD PTR [eax+0x2ca2b151]
  41e524:	xor    DWORD PTR [edx],ebx
  41e526:	not    BYTE PTR [eax]
  41e528:	repnz sti 
  41e52a:	inc    ecx
  41e52b:	mov    edx,0x5fd8308e
  41e530:	push   es
  41e531:	shl    BYTE PTR [ebx+0x2d],cl
  41e534:	mov    WORD PTR [edx+eax*4],?
  41e537:	add    dh,dh
  41e539:	jmp    0x41e4c8
  41e53b:	jb     0x41e56d
  41e53d:	dec    ecx
  41e53e:	mov    ch,0x48
  41e540:	xchg   ebx,eax
  41e541:	and    ecx,DWORD PTR [esi+0x6f]
  41e544:	aas    
  41e545:	xchg   edi,eax
  41e546:	ins    DWORD PTR es:[edi],dx
  41e547:	pop    eax
  41e548:	sbb    ebx,DWORD PTR [eax]
  41e54a:	xchg   esp,eax
  41e54b:	test   al,bl
  41e54d:	mov    bh,0x7f
  41e54f:	(bad)  
  41e550:	fiadd  WORD PTR [edi]
  41e552:	sar    DWORD PTR [edi-0x38],0x1
  41e556:	aad    0xa
  41e558:	push   eax
  41e559:	cwde   
  41e55a:	cmp    DWORD PTR [ecx+0x317ed946],ecx
  41e560:	pop    edx
  41e561:	ins    BYTE PTR es:[edi],dx
  41e562:	repz scas eax,DWORD PTR es:[edi]
  41e564:	fs mov ch,0xdd
  41e567:	popf   
  41e568:	ss pusha 
  41e56a:	cmp    eax,0x2894d2fc
  41e56f:	xor    esp,DWORD PTR [ecx]
  41e571:	jae    0x41e583
  41e573:	out    dx,eax
  41e574:	push   ebx
  41e575:	and    dl,BYTE PTR gs:[ecx+eiz*1+0x26a53f]
  41e57d:	pop    ebx
  41e57e:	cmp    eax,0x567f749f
  41e583:	rol    edi,0xaf
  41e586:	test   BYTE PTR [edx],dh
  41e588:	mov    dl,0x39
  41e58a:	sub    eax,0xbb12d5df
  41e58f:	in     al,dx
  41e590:	mov    eax,ds:0x3f8156ac
  41e595:	(bad)  
  41e596:	lods   eax,DWORD PTR ds:[esi]
  41e597:	sub    BYTE PTR [edx+0x42],ch
  41e59a:	pop    esp
  41e59b:	test   eax,0x2e8fd7ed
  41e5a0:	fistp  DWORD PTR [ecx+0x6c220c34]
  41e5a6:	dec    edx
  41e5a7:	or     al,0x56
  41e5a9:	push   ebx
  41e5aa:	and    ecx,DWORD PTR ds:0x74fa92ce
  41e5b0:	mov    ebx,0x3b162421
  41e5b5:	fsubp  st(0),st
  41e5b7:	stos   DWORD PTR es:[edi],eax
  41e5b8:	jns    0x41e5ef
  41e5ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5bb:	es add al,0xa9
  41e5be:	adc    DWORD PTR [esi-0x14],ebx
  41e5c1:	or     eax,0xb99e2726
  41e5c6:	outs   dx,DWORD PTR ds:[esi]
  41e5c7:	lds    ebp,FWORD PTR [esi+0x1d3018ba]
  41e5cd:	push   ebp
  41e5ce:	push   es
  41e5cf:	mov    edi,0x544bf8ce
  41e5d4:	push   edx
  41e5d5:	stos   DWORD PTR es:[edi],eax
  41e5d6:	and    BYTE PTR [ebp+eiz*4-0x2b94287a],bh
  41e5dd:	ja     0x41e59f
  41e5df:	clc    
  41e5e0:	in     eax,dx
  41e5e1:	cwde   
  41e5e2:	cmp    BYTE PTR [ecx-0x3e],ch
  41e5e5:	mov    cl,0x55
  41e5e7:	test   BYTE PTR [ebx+0x6702c367],al
  41e5ed:	aaa    
  41e5ee:	fcom   DWORD PTR [edi+0x5b30c2e8]
  41e5f4:	pop    esi
  41e5f5:	jns    0x41e597
  41e5f7:	cdq    
  41e5f8:	push   cs
  41e5f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5fa:	retf   0x3d8f
  41e5fd:	enter  0xf5d3,0x13
  41e601:	pop    ds
  41e602:	mov    dh,0xd6
  41e604:	add    ah,dl
  41e606:	inc    esp
  41e607:	in     eax,dx
  41e608:	mov    esp,ecx
  41e60a:	loopne 0x41e5ba
  41e60c:	sbb    ebx,eax
  41e60e:	jg     0x41e5a9
  41e610:	pop    es
  41e611:	sbb    al,0xda
  41e613:	(bad)  
  41e615:	test   DWORD PTR [ebx+0x1c],esi
  41e618:	adc    BYTE PTR [esi],bh
  41e61a:	aas    
  41e61b:	cdq    
  41e61c:	pop    ecx
  41e61d:	(bad)  
  41e61e:	mov    dl,0x57
  41e620:	rol    BYTE PTR ds:[ebx-0x4f53e874],cl
  41e627:	rcl    BYTE PTR [ebx*1-0x66ed84f1],cl
  41e62e:	mov    esp,0x20728d11
  41e633:	mov    bl,0xd1
  41e635:	sbb    esp,DWORD PTR [eax-0x3e420181]
  41e63b:	dec    edx
  41e63c:	iret   
  41e63d:	ret    
  41e63e:	xor    DWORD PTR [edx-0x58ec69af],ebp
  41e644:	and    DWORD PTR [edx],ebx
  41e646:	sub    al,0xf4
  41e648:	adc    BYTE PTR [ebx+0x5c],0xae
  41e64c:	mov    cl,0x6e
  41e64e:	sti    
  41e64f:	and    BYTE PTR [edx+esi*2+0x5b40eccf],ah
  41e656:	shl    BYTE PTR [ecx+0x2b],1
  41e659:	mov    ecx,0xc3fbe205
  41e65e:	popa   
  41e65f:	or     dl,BYTE PTR [edx]
  41e661:	repz mov gs,esi
  41e664:	pop    ds
  41e665:	pop    ebp
  41e666:	in     al,dx
  41e667:	mov    edi,0xa07fe430
  41e66c:	imul   esp,DWORD PTR [edx+0x1e],0xffffff85
  41e670:	(bad)  
  41e671:	xchg   WORD PTR [edi-0x14],cx
  41e675:	dec    edi
  41e676:	retf   
  41e677:	sub    ah,ch
  41e679:	xor    DWORD PTR [edx-0x12],ecx
  41e67c:	repz add ebx,DWORD PTR [ecx+0x15236c38]
  41e683:	mov    cl,0x8e
  41e685:	ss clc 
  41e687:	test   al,0xf7
  41e689:	jge    0x41e6af
  41e68b:	loopne 0x41e6fb
  41e68d:	sbb    DWORD PTR [eax],0x1e9a2188
  41e693:	cli    
  41e694:	rol    DWORD PTR [ecx],0x60
  41e697:	loop   0x41e6a7
  41e699:	out    0xf0,eax
  41e69b:	retf   
  41e69c:	or     al,0x41
  41e69e:	(bad)  
  41e69f:	xlat   BYTE PTR ds:[ebx]
  41e6a0:	ror    DWORD PTR [edi+0x20],cl
  41e6a3:	xchg   edi,eax
  41e6a4:	add    edi,DWORD PTR [ebp-0x3543ec22]
  41e6aa:	and    DWORD PTR [esi-0x19],ebp
  41e6ad:	and    eax,0xa41527b6
  41e6b2:	enter  0xdc76,0xb7
  41e6b6:	mov    ss:0x6cda15fa,al
  41e6bc:	call   0x54b513dc
  41e6c1:	test   DWORD PTR cs:[edx],edx
  41e6c4:	mov    ds:0xaf33d120,al
  41e6c9:	jl     0x41e709
  41e6cb:	xchg   BYTE PTR [edi-0x22],ch
  41e6ce:	in     eax,0xed
  41e6d0:	test   BYTE PTR [ebx],al
  41e6d2:	daa    
  41e6d3:	and    DWORD PTR [edx+eax*1-0x4df94f0e],ecx
  41e6da:	int    0xcc
  41e6dc:	xor    al,0x64
  41e6de:	and    eax,0x3501fa87
  41e6e3:	call   0xcff7:0x32f3dd70
  41e6ea:	enter  0x2914,0xb7
  41e6ee:	xchg   esi,eax
  41e6ef:	xchg   esp,eax
  41e6f0:	mov    ds:0x45490487,eax
  41e6f5:	mov    eax,0x2a1697ab
  41e6fa:	and    ecx,DWORD PTR [edi+0x2cae4a28]
  41e700:	pop    edx
  41e701:	ds and al,0x5a
  41e704:	not    DWORD PTR [edx+0x7686be70]
  41e70a:	or     al,0x4d
  41e70c:	or     eax,0x1052c9c
  41e711:	mov    ch,0x89
  41e713:	jge    0x41e77f
  41e715:	push   es
  41e716:	loopne 0x41e72e
  41e718:	daa    
  41e719:	dec    esp
  41e71a:	mov    esi,DWORD PTR [edi+0x41]
  41e71d:	pop    ebp
  41e71e:	sbb    al,0xbc
  41e721:	stc    
  41e722:	or     eax,0x9a0f7d51
  41e727:	ret    0xe8b0
  41e72a:	xor    esp,DWORD PTR [edi+0x7d]
  41e72d:	and    edi,DWORD PTR [edi]
  41e72f:	icebp  
  41e730:	mov    al,0x18
  41e732:	dec    esi
  41e733:	jmp    esp
  41e735:	adc    al,0x39
  41e737:	mov    dh,0xb6
  41e739:	jg     0x41e70a
  41e73b:	pusha  
  41e73c:	dec    esp
  41e73d:	add    eax,0x5b7a776e
  41e742:	je     0x41e79b
  41e744:	inc    edx
  41e745:	cs jmp 0xd1c6:0xc9eb8fbe
  41e74d:	push   esp
  41e74e:	mov    al,ds:0x186d7a0f
  41e753:	add    DWORD PTR [esi+edx*4+0xb],0xe9499cb7
  41e75b:	imul   edx,DWORD PTR [edi+edi*8+0x7daf87ec],0xffffffb6
  41e763:	pop    ss
  41e764:	lock test eax,0x64511bf0
  41e76a:	cmp    BYTE PTR [esi-0x4ff0c3c9],cl
  41e770:	cs ret 
  41e772:	cmc    
  41e773:	fsubr  QWORD PTR [esi-0x29b9ce95]
  41e779:	gs xchg edx,eax
  41e77b:	hlt    
  41e77c:	sub    eax,ebx
  41e77e:	mov    esi,0x698de78d
  41e783:	adc    eax,0xd5c2e581
  41e788:	jmp    0xfc03892c
  41e78d:	xchg   edx,eax
  41e78e:	jge    0x41e7b7
  41e790:	int3   
  41e791:	(bad)  
  41e792:	repz adc al,0xf2
  41e795:	aad    0xbe
  41e797:	in     eax,0x27
  41e799:	xor    al,0xd8
  41e79b:	sbb    ecx,DWORD PTR [edi]
  41e79d:	push   es
  41e79e:	adc    edi,ecx
  41e7a0:	test   al,0x8a
  41e7a2:	mov    edx,0x28f74193
  41e7a7:	xor    eax,0x49c9df80
  41e7ac:	aas    
  41e7ad:	jle    0x41e740
  41e7af:	ins    DWORD PTR es:[edi],dx
  41e7b0:	int    0xc3
  41e7b2:	sub    DWORD PTR [edx-0x7c3fb54d],edx
  41e7b8:	push   es
  41e7b9:	fcom   DWORD PTR [esi]
  41e7bb:	sbb    BYTE PTR [ecx+0x15],ah
  41e7be:	scas   al,BYTE PTR es:[edi]
  41e7bf:	test   al,0xf8
  41e7c1:	jg     0x41e7ba
  41e7c3:	xor    BYTE PTR [eax-0x5c256452],ch
  41e7c9:	xchg   ebp,eax
  41e7ca:	push   0x68
  41e7cc:	mov    ah,0x8d
  41e7ce:	xor    eax,0xac47851d
  41e7d3:	cli    
  41e7d4:	mov    ebx,0x1ebc3555
  41e7d9:	cmc    
  41e7da:	mov    bh,0x19
  41e7dc:	fmul   DWORD PTR [ebp+0x4a50fe85]
  41e7e2:	mov    al,0x50
  41e7e4:	out    0x4a,eax
  41e7e6:	lods   al,BYTE PTR ds:[esi]
  41e7e7:	loopne 0x41e7de
  41e7e9:	mov    ch,BYTE PTR [esi-0x2a]
  41e7ec:	nop
  41e7ed:	adc    esp,DWORD PTR [esi]
  41e7ef:	adc    dl,BYTE PTR [esi]
  41e7f1:	and    ebx,ebp
  41e7f3:	add    dh,bl
  41e7f5:	pop    ebp
  41e7f6:	mov    ds:0x880d49e0,eax
  41e7fb:	sar    BYTE PTR [eax+0x32cc2648],0xa2
  41e802:	fld    TBYTE PTR [edi+0x78]
  41e805:	addr16 mov ds:0x76d,al
  41e809:	sbb    al,0x5c
  41e80b:	xchg   ebx,eax
  41e80c:	jo     0x41e7c0
  41e80e:	repz jecxz 0x41e7ee
  41e811:	scas   eax,DWORD PTR es:[edi]
  41e812:	mov    esi,0x54fd05b2
  41e817:	xchg   edi,eax
  41e818:	push   cs
  41e819:	inc    edx
  41e81a:	imul   edx,esi,0xffffffde
  41e81d:	popa   
  41e81e:	xchg   DWORD PTR [ecx+0x61],edi
  41e821:	ficom  WORD PTR [eax]
  41e823:	mov    ebx,0x6890058d
  41e828:	xor    ebx,DWORD PTR [ebp-0x71cc6afc]
  41e82e:	je     0x41e7c7
  41e830:	stc    
  41e831:	mov    WORD PTR [ebx],?
  41e833:	mov    bh,BYTE PTR [eax+0x4c]
  41e836:	icebp  
  41e837:	jg     0x41e852
  41e839:	fwait
  41e83a:	inc    edx
  41e83b:	test   BYTE PTR [edx+0x72],cl
  41e83e:	cmp    ebx,eax
  41e840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e841:	mov    al,0xa2
  41e843:	cmp    BYTE PTR fs:[ecx+0x16],bl
  41e847:	jno    0x41e8b3
  41e849:	stos   BYTE PTR es:[edi],al
  41e84a:	cdq    
  41e84b:	mov    ebx,0x224efa0a
  41e850:	jnp    0x41e855
  41e852:	jo     0x41e851
  41e854:	inc    ecx
  41e855:	mov    ebx,0xfc645626
  41e85a:	jae    0x41e861
  41e85c:	sub    dl,BYTE PTR [eax-0x3881e38]
  41e862:	jo     0x41e889
  41e864:	cld    
  41e865:	leave  
  41e866:	fwait
  41e867:	jno    0x41e80c
  41e869:	(bad)  
  41e86a:	fiadd  DWORD PTR [edi-0x26f05a60]
  41e870:	xlat   BYTE PTR fs:[ebx]
  41e872:	retf   
  41e873:	sub    ebp,edx
  41e875:	inc    eax
  41e876:	sbb    ch,BYTE PTR [esi]
  41e878:	test   eax,0xff21ee4a
  41e87d:	bound  edi,QWORD PTR ds:0x78801020
  41e883:	xchg   DWORD PTR [ecx-0x4e],ebp
  41e886:	shr    eax,cl
  41e888:	leave  
  41e889:	sub    al,0xf5
  41e88b:	push   0xed3d198b
  41e890:	pop    ecx
  41e891:	jae    0x41e902
  41e893:	or     eax,ebx
  41e895:	mov    edx,0xd26eec38
  41e89a:	nop
  41e89b:	enter  0x61ec,0x99
  41e89f:	pop    ss
  41e8a0:	lds    ecx,FWORD PTR [ebx+eax*8]
  41e8a3:	cdq    
  41e8a4:	addr16 pop edi
  41e8a6:	mov    al,0x5
  41e8a8:	dec    eax
  41e8a9:	mov    dh,0x27
  41e8ab:	les    esp,FWORD PTR [ebx+0x2758c91]
  41e8b1:	mov    cl,0x9
  41e8b3:	mov    eax,0x7a0b189a
  41e8b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8b9:	bound  esi,QWORD PTR [ebp-0x5e]
  41e8bc:	mov    ss,WORD PTR [edx+ecx*4+0x78fdb316]
  41e8c3:	push   edi
  41e8c4:	sbb    eax,0x17f67e66
  41e8c9:	cwde   
  41e8ca:	retf   0x25bf
  41e8cd:	shl    DWORD PTR [eax+0x4e],1
  41e8d0:	inc    esp
  41e8d1:	rcr    DWORD PTR [ecx+0x8525e32],1
  41e8d7:	add    eax,0xd472aaef
  41e8dc:	not    DWORD PTR [ecx]
  41e8de:	(bad)
  41e8e1:	cmp    DWORD PTR [esi+0x36],0x914c7444
  41e8e8:	lods   eax,DWORD PTR ds:[esi]
  41e8e9:	data16 cli 
  41e8eb:	jecxz  0x41e8d3
  41e8ed:	mov    ecx,0x1476d1f4
  41e8f2:	stos   DWORD PTR es:[edi],eax
  41e8f3:	add    BYTE PTR [ebp-0x24],0x78
  41e8f7:	into   
  41e8f8:	cmp    esp,DWORD PTR [edi+0x53b0b82d]
  41e8fe:	xchg   DWORD PTR [edi+ebx*4-0x49],esi
  41e902:	sbb    BYTE PTR [edi+ebx*4-0x3],0x1f
  41e907:	pop    esp
  41e908:	scas   al,BYTE PTR es:[edi]
  41e909:	mov    ch,0xbb
  41e90b:	mov    bl,0x5a
  41e90d:	add    al,0x71
  41e90f:	rcr    BYTE PTR [ecx-0x658b66ed],1
  41e915:	mov    BYTE PTR [edi+0x41dba111],dl
  41e91b:	pop    edx
  41e91c:	and    al,0x29
  41e91e:	int3   
  41e91f:	or     eax,0x59721b76
  41e924:	scas   eax,DWORD PTR es:[edi]
  41e925:	ret    0xbde1
  41e928:	xchg   BYTE PTR [edi],al
  41e92a:	ficomp WORD PTR [ebx+0x17d74eb2]
  41e930:	lods   eax,DWORD PTR ds:[esi]
  41e931:	loope  0x41e8bb
  41e933:	mov    dl,0xd8
  41e935:	dec    ecx
  41e936:	push   esi
  41e937:	out    dx,al
  41e938:	mov    eax,ds:0x1cadf21a
  41e93d:	adc    ebx,DWORD PTR [eax-0x713088c7]
  41e943:	cwde   
  41e944:	stos   BYTE PTR es:[edi],al
  41e945:	or     DWORD PTR [edx+0x2e856601],0x3b5e26cd
  41e94f:	dec    eax
  41e950:	or     eax,DWORD PTR [ecx+0x3ab64014]
  41e956:	cmp    DWORD PTR [ecx],ebp
  41e958:	fs loop 0x41e9a5
  41e95b:	xor    esi,DWORD PTR ds:0x217956e0
  41e961:	cli    
  41e962:	jo     0x41e92a
  41e964:	sbb    al,0x86
  41e966:	fsubr  st,st(6)
  41e968:	addr16 pop ebp
  41e96a:	fmul   QWORD PTR [edx]
  41e96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e96d:	pop    ecx
  41e96e:	or     ah,0xba
  41e971:	mov    ah,0x8f
  41e973:	lock jne 0x41e964
  41e976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e977:	sbb    ah,BYTE PTR [ecx-0x2a5dfa8d]
  41e97d:	(bad)  
  41e97e:	daa    
  41e97f:	push   eax
  41e980:	enter  0xc4d,0x2b
  41e984:	pop    edi
  41e985:	jecxz  0x41e9d9
  41e987:	add    eax,0xb22091e0
  41e98c:	dec    esp
  41e98d:	aad    0x7a
  41e98f:	mov    esp,0xc1c47ec0
  41e994:	inc    ebx
  41e995:	xor    eax,0xe599f711
  41e99a:	push   ebp
  41e99b:	and    esi,ebp
  41e99d:	das    
  41e99e:	loope  0x41e9ab
  41e9a0:	(bad)  
  41e9a1:	(bad)  
  41e9a2:	ds pop esp
  41e9a4:	test   BYTE PTR [eax-0x2b],0x1f
  41e9a8:	sbb    ecx,DWORD PTR [ebx+0x7910adb9]
  41e9ae:	inc    eax
  41e9af:	sti    
  41e9b0:	loope  0x41e9e1
  41e9b2:	hlt    
  41e9b3:	mov    ds:0x2c957545,eax
  41e9b8:	lahf   
  41e9b9:	mov    dl,0xc4
  41e9bb:	int    0xe7
  41e9bd:	xchg   esi,eax
  41e9be:	sub    cl,ah
  41e9c0:	dec    edx
  41e9c1:	jo     0x41e976
  41e9c3:	add    ecx,0x14296a62
  41e9c9:	mov    eax,ds:0xdd23b676
  41e9ce:	cmc    
  41e9cf:	dec    edx
  41e9d0:	ins    BYTE PTR es:[edi],dx
  41e9d1:	dec    ebp
  41e9d2:	xor    edx,esi
  41e9d4:	xchg   esp,eax
  41e9d5:	mov    ecx,0x7d85393c
  41e9da:	ins    DWORD PTR es:[edi],dx
  41e9db:	lods   eax,DWORD PTR ds:[esi]
  41e9dc:	cmp    bh,BYTE PTR [ebx-0x21]
  41e9df:	fisub  WORD PTR [eax]
  41e9e1:	push   esp
  41e9e2:	shl    DWORD PTR [ecx+eax*8+0x22b9f354],cl
  41e9e9:	cmp    edx,DWORD PTR [esi]
  41e9eb:	xchg   ebx,eax
  41e9ec:	sub    dh,ah
  41e9ee:	adc    eax,0x9a0a2b1e
  41e9f3:	test   eax,0xf8758791
  41e9f8:	(bad)
  41e9fb:	add    al,0x1a
  41e9fd:	ins    BYTE PTR es:[edi],dx
  41e9fe:	out    dx,al
  41e9ff:	dec    ebx
  41ea00:	xor    DWORD PTR [ecx],eax
  41ea02:	(bad)  
  41ea03:	in     eax,dx
  41ea04:	jle    0x41ea4d
  41ea06:	push   ds
  41ea07:	sti    
  41ea08:	stc    
  41ea09:	or     BYTE PTR [ebx+0x60],0x9e
  41ea0d:	cmp    esp,DWORD PTR [esi]
  41ea0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea10:	sbb    cl,0x86
  41ea13:	or     esi,DWORD PTR [esi]
  41ea15:	lods   al,BYTE PTR ds:[esi]
  41ea16:	arpl   WORD PTR [ebx],bp
  41ea18:	push   eax
  41ea19:	push   edi
  41ea1a:	ds test al,0xa7
  41ea1d:	adc    ecx,DWORD PTR [ecx+edi*4]
  41ea20:	xchg   ecx,eax
  41ea21:	xor    BYTE PTR [ecx],bh
  41ea23:	push   edi
  41ea24:	fild   WORD PTR [esi-0x76]
  41ea27:	add    esi,DWORD PTR [esi+ebp*8]
  41ea2a:	inc    ebx
  41ea2b:	(bad)  
  41ea2c:	push   esi
  41ea2d:	pop    esi
  41ea2e:	inc    esp
  41ea2f:	jp     0x41ea46
  41ea31:	mov    ebp,0x9f183eb7
  41ea36:	psllw  mm7,QWORD PTR [esi-0x6f]
  41ea3a:	ds adc al,0x23
  41ea3d:	fsubr  st(4),st
  41ea3f:	out    dx,al
  41ea40:	mov    dh,0xad
  41ea42:	and    al,BYTE PTR [ebp+0x1f649d43]
  41ea48:	mul    DWORD PTR [edi]
  41ea4a:	(bad)  
  41ea4b:	mov    cl,0xb6
  41ea4d:	test   al,0x6c
  41ea4f:	pop    ebp
  41ea50:	or     BYTE PTR [ebx+0x7d],ch
  41ea53:	mov    ebp,edi
  41ea55:	adc    DWORD PTR [ebp-0x68],ebx
  41ea58:	xchg   DWORD PTR [esi+0xe9a1271],ebx
  41ea5e:	(bad)  
  41ea5f:	push   ds
  41ea60:	loopne 0x41ea41
  41ea62:	ret    
  41ea63:	aaa    
  41ea64:	ins    DWORD PTR es:[edi],dx
  41ea65:	mov    al,0x19
  41ea67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea68:	rcr    DWORD PTR [eax+0x69a8e662],cl
  41ea6e:	xorps  xmm6,xmm3
  41ea71:	xchg   esi,eax
  41ea72:	int    0x6f
  41ea74:	jbe    0x41ea5f
  41ea76:	push   edx
  41ea77:	cmc    
  41ea78:	mov    al,ds:0x52301c24
  41ea7d:	shl    BYTE PTR [ebx+0x30370846],cl
  41ea83:	mov    esi,0x5216abe
  41ea88:	cmp    al,0x21
  41ea8a:	mov    ebx,0x99b1a768
  41ea8f:	xchg   ebp,eax
  41ea90:	cmp    ebp,DWORD PTR [ebx+ebp*2]
  41ea93:	jnp    0x41eaed
  41ea95:	das    
  41ea96:	mov    edi,DWORD PTR [edx]
  41ea98:	div    DWORD PTR [ecx-0x59]
  41ea9b:	xchg   edx,eax
  41ea9c:	inc    ebp
  41ea9d:	sahf   
  41ea9e:	jp     0x41ea2d
  41eaa0:	out    0xcc,al
  41eaa2:	sub    eax,0x26082e05
  41eaa7:	cs mov esp,cs
  41eaaa:	mov    bh,0xe8
  41eaac:	dec    ebp
  41eaad:	dec    esp
  41eaae:	mov    al,ds:0xd45f4a28
  41eab3:	jnp    0x41eab0
  41eab5:	icebp  
  41eab6:	inc    DWORD PTR [ecx]
  41eab8:	pushf  
  41eab9:	push   0xfa4a4ee6
  41eabe:	aad    0xe8
  41eac0:	(bad)  
  41eac1:	aam    0xcc
  41eac3:	out    dx,al
  41eac4:	push   ebx
  41eac5:	sub    DWORD PTR [esi+0x4b61333b],ebx
  41eacb:	div    BYTE PTR [edx-0x56]
  41eace:	sub    BYTE PTR [edi-0x30],dl
  41ead1:	neg    esi
  41ead3:	test   BYTE PTR [ebp+0x5e],dl
  41ead6:	shl    edi,0x3c
  41ead9:	inc    eax
  41eada:	retf   
  41eadb:	dec    ecx
  41eadc:	stos   DWORD PTR es:[edi],eax
  41eadd:	add    BYTE PTR [ebp+0x5b],dh
  41eae0:	imul   ebp,ecx,0xffffffbb
  41eae3:	push   ds
  41eae4:	push   cs
  41eae5:	dec    esp
  41eae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae7:	cdq    
  41eae8:	mov    edx,0x5b17390
  41eaed:	mov    esp,0x56ff03b7
  41eaf2:	icebp  
  41eaf3:	mov    edx,0x5621ac15
  41eaf8:	cmp    esi,ebp
  41eafa:	jecxz  0x41eb68
  41eafc:	out    0x61,al
  41eafe:	push   0x73f68a09
  41eb03:	add    dh,BYTE PTR [eax-0x1d]
  41eb06:	xchg   BYTE PTR [ecx+0x4],bh
  41eb09:	push   0x48
  41eb0b:	push   esp
  41eb0c:	scas   eax,DWORD PTR es:[edi]
  41eb0d:	adc    DWORD PTR [ecx],ecx
  41eb0f:	pop    es
  41eb10:	out    0xd2,eax
  41eb12:	(bad)  
  41eb13:	mov    edi,0x730a204a
  41eb18:	xor    al,0x92
  41eb1a:	xchg   DWORD PTR gs:[edi+0xc19402d],eax
  41eb21:	mov    ds:0xf57312dd,al
  41eb26:	stos   BYTE PTR es:[edi],al
  41eb27:	cmp    BYTE PTR [eax-0x4f2265ae],0xac
  41eb2e:	sub    eax,0xd3881bfd
  41eb33:	out    dx,eax
  41eb34:	mov    edx,DWORD PTR [edi+0x218ef5fb]
  41eb3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb3b:	daa    
  41eb3c:	sub    dl,BYTE PTR [ebp-0x79cdc5e3]
  41eb42:	int3   
  41eb43:	inc    edx
  41eb44:	jl     0x41eb2f
  41eb46:	mov    DWORD PTR [esi-0x5b],eax
  41eb49:	xor    al,0x19
  41eb4b:	into   
  41eb4c:	cdq    
  41eb4d:	or     DWORD PTR [eax-0x6],edx
  41eb50:	sbb    edx,ebx
  41eb52:	mov    ah,0x80
  41eb54:	xor    DWORD PTR [ecx],0xf263908e
  41eb5a:	jnp    0x41eb9a
  41eb5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb5d:	xchg   edi,eax
  41eb5e:	adc    eax,0x7a748684
  41eb63:	(bad)  
  41eb64:	hlt    
  41eb65:	pop    eax
  41eb66:	stos   DWORD PTR es:[edi],eax
  41eb67:	adc    edi,eax
  41eb69:	test   eax,0x3ad8ed82
  41eb6e:	xor    ah,0x48
  41eb71:	jmp    0x7881b8a4
  41eb76:	cmc    
  41eb77:	xor    DWORD PTR [ebx],ecx
  41eb79:	(bad)  
  41eb7a:	mul    al
  41eb7c:	xor    DWORD PTR [ebp-0xe2d6e78],edx
  41eb82:	xor    DWORD PTR [esp+eiz*8],0x6dd81698
  41eb89:	or     ecx,ecx
  41eb8b:	out    0x98,eax
  41eb8d:	stos   DWORD PTR es:[edi],eax
  41eb8e:	mov    al,ds:0x9de168a2
  41eb93:	mov    al,ds:0x6cf9a3b3
  41eb98:	mov    ds:0x9af75767,eax
  41eb9d:	push   ecx
  41eb9e:	jmp    0x41eb78
  41eba0:	and    edx,ebx
  41eba2:	outs   dx,DWORD PTR ds:[esi]
  41eba3:	out    dx,al
  41eba4:	and    BYTE PTR [ebp+0x2f],dh
  41eba7:	icebp  
  41eba8:	test   DWORD PTR [bx],ecx
  41ebab:	call   0x7466:0xf9048d7a
  41ebb2:	cld    
  41ebb3:	fwait
  41ebb4:	lods   eax,DWORD PTR ds:[esi]
  41ebb5:	push   edx
  41ebb6:	inc    ebp
  41ebb7:	call   0xace3b21b
  41ebbc:	add    ebx,0xffffffac
  41ebbf:	shl    BYTE PTR ds:[edi+0x1c],0xfd
  41ebc4:	add    BYTE PTR [edx+0x2e891a67],bl
  41ebca:	and    BYTE PTR ds:0xcbe15723,cl
  41ebd0:	das    
  41ebd1:	sub    eax,0x502b0fa1
  41ebd6:	xchg   BYTE PTR [ebx+ebx*2-0x55],cl
  41ebda:	push   0x9e95fc03
  41ebdf:	xchg   esi,eax
  41ebe0:	icebp  
  41ebe1:	mov    ecx,0x7a3f589d
  41ebe6:	dec    esp
  41ebe7:	enter  0xebad,0xec
  41ebeb:	dec    ecx
  41ebec:	or     eax,0x635fd79a
  41ebf1:	jno    0x41ebcb
  41ebf3:	jmp    DWORD PTR [esi+0x78ffb25e]
  41ebf9:	cmp    eax,0xde670f25
  41ebfe:	mov    bl,0xd0
  41ec00:	adc    ebp,DWORD PTR [ecx]
  41ec02:	jae    0x41ebd6
  41ec04:	mov    esi,0x4d85b876
  41ec09:	aaa    
  41ec0a:	jmp    DWORD PTR [edx+esi*1]
  41ec0d:	ins    DWORD PTR es:[edi],dx
  41ec0e:	mov    edi,0xecffb047
  41ec13:	ror    DWORD PTR [edx+0x13],0x3c
  41ec17:	mov    WORD PTR [ebp+0x73],fs
  41ec1a:	gs mov esp,0x85bb075b
  41ec20:	sbb    bh,dh
  41ec22:	push   edi
  41ec23:	fnstsw WORD PTR ds:0x24168b2f
  41ec29:	mov    cl,0xff
  41ec2b:	(bad)  
  41ec2c:	dec    edi
  41ec2d:	jno    0x41ebbd
  41ec2f:	push   cs
  41ec30:	adc    eax,0x80b0c35f
  41ec35:	into   
  41ec36:	jmp    0x484b18b7
  41ec3b:	add    eax,0x47d40394
  41ec40:	mov    esp,0x8f2dc7e7
  41ec45:	ss mov ebx,0xd8300c88
  41ec4b:	retf   0x4fb4
  41ec4e:	push   cs
  41ec4f:	out    0x1a,eax
  41ec51:	shl    BYTE PTR [ebx-0x3c],1
  41ec54:	rcl    BYTE PTR [ecx],1
  41ec56:	in     eax,0xbb
  41ec58:	jae    0x41ec68
  41ec5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec5b:	popf   
  41ec5c:	xchg   ebp,eax
  41ec5d:	mov    BYTE PTR [eax+0x62d11651],bl
  41ec63:	cmp    BYTE PTR [ecx],bl
  41ec65:	mov    ah,0x1d
  41ec67:	stos   DWORD PTR es:[edi],eax
  41ec68:	inc    ecx
  41ec69:	gs dec edx
  41ec6b:	hlt    
  41ec6c:	sar    ecx,0xdb
  41ec6f:	clc    
  41ec70:	jge    0x41ec0a
  41ec72:	jmp    0xc4bd:0xa0b9f527
  41ec79:	test   eax,0xeaa1d5bf
  41ec7e:	xlat   BYTE PTR ds:[ebx]
  41ec7f:	and    BYTE PTR [esi-0xc],bh
  41ec82:	push   es
  41ec83:	retf   0x1844
  41ec86:	pop    ecx
  41ec87:	xor    dh,al
  41ec89:	int3   
  41ec8a:	(bad)  
  41ec8b:	xor    DWORD PTR [edi+edx*4+0x67],eax
  41ec8f:	push   esp
  41ec90:	push   ebp
  41ec91:	lds    ecx,FWORD PTR [ebx+edi*4-0x6fead0b1]
  41ec98:	repnz add al,0x47
  41ec9b:	aad    0xd1
  41ec9d:	inc    esi
  41ec9e:	jmp    0x60bc:0x8047da10
  41eca5:	hlt    
  41eca6:	int3   
  41eca7:	dec    edx
  41eca8:	xor    esp,ecx
  41ecaa:	jecxz  0x41ec96
  41ecac:	sti    
  41ecad:	iret   
  41ecae:	cmc    
  41ecaf:	xchg   ebp,eax
  41ecb0:	xlat   BYTE PTR cs:[ebx]
  41ecb2:	sbb    eax,0x838cb2a5
  41ecb7:	jg     0x41ed24
  41ecb9:	cmp    al,0x81
  41ecbb:	imul   DWORD PTR [ecx-0x4f]
  41ecbe:	mov    eax,ds:0x97a282a5
  41ecc3:	and    BYTE PTR [eax],dh
  41ecc5:	scas   al,BYTE PTR es:[edi]
  41ecc6:	xor    al,dl
  41ecc8:	xor    esp,DWORD PTR [edx-0x15]
  41eccb:	loope  0x41ec68
  41eccd:	retf   
  41ecce:	dec    esi
  41eccf:	jp     0x41ecbd
  41ecd1:	les    ebp,FWORD PTR [eax+0x2976f445]
  41ecd7:	mov    eax,ds:0x442a4ebb
  41ecdc:	shl    ebx,cl
  41ecde:	(bad)  
  41ecdf:	popf   
  41ece0:	dec    ebp
  41ece1:	fsub   st(3),st
  41ece3:	sti    
  41ece4:	stos   BYTE PTR es:[edi],al
  41ece5:	int3   
  41ece6:	ss enter 0x80fd,0xd5
  41eceb:	fsub   QWORD PTR [ebp-0x6855a3e3]
  41ecf1:	mov    ecx,0xf3572239
  41ecf6:	ffreep st(1)
  41ecf8:	(bad)  
  41ecf9:	mov    eax,0x38570642
  41ecfe:	gs push 0x4
  41ed01:	jns    0x41ecbc
  41ed03:	cld    
  41ed04:	sahf   
  41ed05:	and    ebp,DWORD PTR [edx+0x309a0488]
  41ed0b:	outs   dx,DWORD PTR ds:[esi]
  41ed0c:	push   0x1cf2452b
  41ed11:	fst    QWORD PTR ds:0xe6915ced
  41ed17:	idiv   bh
  41ed19:	add    BYTE PTR es:[edx+0x3929b0d4],0xc7
  41ed21:	xchg   ecx,eax
  41ed22:	scas   eax,DWORD PTR es:[edi]
  41ed23:	jno    0x41ed9e
  41ed25:	or     ebp,eax
  41ed27:	mov    bh,0x8a
  41ed29:	popa   
  41ed2a:	mov    WORD PTR [esi-0xe0ae78c],cs
  41ed30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed31:	push   ds
  41ed32:	jmp    0x79d2c0e
  41ed37:	aas    
  41ed38:	fs popa 
  41ed3a:	loopne 0x41ed0e
  41ed3c:	scas   eax,DWORD PTR es:[edi]
  41ed3d:	pop    ecx
  41ed3e:	push   esi
  41ed3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed40:	mov    ch,0x1a
  41ed42:	scas   eax,DWORD PTR es:[edi]
  41ed43:	xor    dl,al
  41ed45:	ror    BYTE PTR [esi],1
  41ed47:	pushf  
  41ed48:	sbb    DWORD PTR [ebp-0x27c067b5],0x48cedbca
  41ed52:	lock ss xor al,0xce
  41ed56:	cmp    cl,BYTE PTR [eax]
  41ed58:	add    DWORD PTR [edx-0x46a90b0f],esp
  41ed5e:	and    DWORD PTR [edi],ebx
  41ed60:	iret   
  41ed61:	sub    edi,ebx
  41ed63:	or     eax,0x30090ae3
  41ed68:	cld    
  41ed69:	xchg   edx,eax
  41ed6a:	(bad)  
  41ed6b:	in     al,dx
  41ed6c:	js     0x41ed08
  41ed6e:	xchg   esp,eax
  41ed6f:	xchg   edi,eax
  41ed70:	not    DWORD PTR [ecx-0x710e3e56]
  41ed76:	popf   
  41ed77:	out    0xbf,al
  41ed79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed7a:	mov    dh,0x80
  41ed7c:	(bad)  
  41ed7d:	cld    
  41ed7e:	push   0x11
  41ed80:	ins    DWORD PTR es:[edi],dx
  41ed81:	cmp    eax,0x2e6a01c
  41ed86:	push   0x974f30c6
  41ed8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed8c:	add    al,0xdc
  41ed8e:	add    ebx,DWORD PTR [edi+0x3e4bba5a]
  41ed94:	test   DWORD PTR [esi+0x2c],ebp
  41ed97:	pop    edi
  41ed98:	nop
  41ed99:	and    DWORD PTR [edx+0x6e],ebx
  41ed9c:	in     al,0xb3
  41ed9e:	sbb    eax,0x659f73ad
  41eda3:	adc    eax,0xfd895dc2
  41eda8:	push   eax
  41eda9:	inc    ebx
  41edaa:	cmp    edi,DWORD PTR ds:0x7927d2bf
  41edb0:	bound  esi,QWORD PTR [edx]
  41edb2:	mov    dh,0xda
  41edb4:	fisttp QWORD PTR [esp]
  41edb7:	hlt    
  41edb8:	bound  eax,QWORD PTR [esi-0xc3d67a5]
  41edbe:	fcomp  DWORD PTR [eax+0x5d]
  41edc1:	(bad)  
  41edc2:	stc    
  41edc3:	imul   ecx,DWORD PTR [edx-0x161c8790],0x7c
  41edca:	lahf   
  41edcb:	arpl   WORD PTR [edi],si
  41edcd:	stos   DWORD PTR es:[edi],eax
  41edce:	mov    esp,0xc25abd7c
  41edd3:	dec    esi
  41edd4:	loope  0x41eda6
  41edd6:	retf   
  41edd7:	leave  
  41edd8:	cdq    
  41edd9:	pop    edi
  41edda:	pop    ecx
  41eddb:	vpshlq xmm1,[ecx+eax*2],xmm7
  41ede1:	gs xchg edx,eax
  41ede3:	enter  0x6ac2,0xcf
  41ede7:	dec    esp
  41ede8:	loopne 0x41ed7b
  41edea:	gs stc 
  41edec:	js     0x41edc5
  41edee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edef:	push   esi
  41edf0:	adc    al,bh
  41edf2:	in     al,dx
  41edf3:	scas   eax,DWORD PTR es:[edi]
  41edf4:	dec    eax
  41edf5:	jmp    0x8839:0x7876407
  41edfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edfd:	dec    edi
  41edfe:	and    al,0x65
  41ee00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee02:	cmp    DWORD PTR [edx*2-0x45a3df46],edi
  41ee09:	add    dl,ah
  41ee0b:	inc    edi
  41ee0c:	cmp    BYTE PTR [edi+edi*4-0x7f],ah
  41ee10:	and    dl,BYTE PTR [esi]
  41ee12:	addr16 aad 0xd9
  41ee15:	push   ebx
  41ee16:	dec    esp
  41ee17:	adc    al,0x9d
  41ee19:	ins    BYTE PTR es:[edi],dx
  41ee1a:	jle    0x41ee68
  41ee1c:	fiadd  WORD PTR [ebp+0x7535bd40]
  41ee22:	mov    ds:0x5c62682f,al
  41ee27:	data16 jg 0x41ee16
  41ee2a:	mov    ecx,0x20eb3d25
  41ee2f:	call   0x28e15be7
  41ee34:	stos   DWORD PTR es:[edi],eax
  41ee35:	and    DWORD PTR [esi-0x399f83ad],ebx
  41ee3b:	xor    al,0xe5
  41ee3d:	jge    0x41eded
  41ee3f:	mov    ds:0xe5adb21b,al
  41ee44:	pop    esp
  41ee46:	aas    
  41ee47:	in     eax,0x24
  41ee49:	lahf   
  41ee4a:	sub    BYTE PTR [edx],cl
  41ee4c:	ds dec ebp
  41ee4e:	push   esp
  41ee4f:	loope  0x41eea1
  41ee51:	pop    ecx
  41ee52:	dec    ecx
  41ee53:	push   ecx
  41ee54:	arpl   WORD PTR [esi-0x46],cx
  41ee57:	scas   al,BYTE PTR es:[edi]
  41ee58:	ins    DWORD PTR es:[edi],dx
  41ee59:	cdq    
  41ee5a:	in     eax,0xfa
  41ee5c:	push   ecx
  41ee5d:	pushf  
  41ee5e:	ss jmp 0x60c5:0x672885b6
  41ee66:	aad    0xce
  41ee68:	cmp    BYTE PTR [ebp+ebp*1-0xb],0x2a
  41ee6d:	cld    
  41ee6e:	mov    ebp,0x809d84d8
  41ee73:	xor    edx,esi
  41ee75:	and    esp,edi
  41ee77:	mov    DWORD PTR [ecx],eax
  41ee79:	adc    eax,0xdfe4a9ea
  41ee7e:	fnstenv [ecx+0x28]
  41ee81:	add    al,0xf0
  41ee83:	(bad)  
  41ee84:	adc    al,0x7f
  41ee86:	jo     0x41ef00
  41ee88:	out    0x28,al
  41ee8a:	xchg   edi,eax
  41ee8b:	mov    ch,0x5b
  41ee8d:	leave  
  41ee8e:	test   al,0x24
  41ee90:	int3   
  41ee91:	jno    0x41eea3
  41ee93:	add    ebx,DWORD PTR [edx+0x24]
  41ee96:	scas   al,BYTE PTR es:[edi]
  41ee97:	clc    
  41ee98:	std    
  41ee99:	ret    
  41ee9a:	and    edi,ecx
  41ee9c:	add    BYTE PTR [esi],dl
  41ee9e:	ror    DWORD PTR [ecx+0x1b42021f],0x1
  41eea5:	ror    BYTE PTR [edx],cl
  41eea7:	cld    
  41eea8:	inc    esp
  41eea9:	ja     0x41ef1d
  41eeab:	mov    cl,0x9b
  41eead:	aas    
  41eeae:	loope  0x41ee66
  41eeb0:	cmp    DWORD PTR [ecx],edx
  41eeb2:	inc    eax
  41eeb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeb4:	sbb    BYTE PTR [ebx-0x2f1f71e6],0xd4
  41eebb:	int3   
  41eebc:	pop    ecx
  41eebd:	out    0x8,eax
  41eebf:	rcr    DWORD PTR [edi+0x72e06f04],0xdb
  41eec6:	lods   al,BYTE PTR ds:[esi]
  41eec7:	xchg   BYTE PTR [ecx-0x46],dl
  41eeca:	popa   
  41eecb:	push   cs
  41eecc:	inc    edi
  41eecd:	cmp    esi,DWORD PTR [edx-0x70]
  41eed0:	pop    ebx
  41eed1:	cmp    cl,BYTE PTR [ebx+0x4ed8123e]
  41eed7:	(bad)  
  41eeda:	sbb    bl,BYTE PTR [eax]
  41eedc:	xlat   BYTE PTR ds:[ebx]
  41eedd:	xchg   esp,eax
  41eede:	sub    al,cl
  41eee0:	and    esi,esp
  41eee2:	aam    0x35
  41eee4:	(bad)  
  41eee5:	dec    edi
  41eee6:	mov    ds:0x91139116,eax
  41eeeb:	or     al,0x61
  41eeed:	mov    BYTE PTR [edx+edi*2],al
  41eef0:	mov    ecx,0x57af62fb
  41eef5:	inc    ecx
  41eef6:	mov    DWORD PTR [esi+0x4d43de08],esi
  41eefc:	jmp    0x41ef3f
  41eefe:	gs ins DWORD PTR es:[edi],dx
  41ef00:	mov    dl,dh
  41ef02:	dec    edx
  41ef03:	lahf   
  41ef04:	fisubr WORD PTR [edx-0xa]
  41ef07:	sub    ebp,edx
  41ef09:	sub    BYTE PTR [eax],cl
  41ef0b:	sbb    esp,ebp
  41ef0d:	scas   eax,DWORD PTR es:[edi]
  41ef0e:	pushf  
  41ef0f:	stos   BYTE PTR es:[edi],al
  41ef10:	enter  0x2a90,0x78
  41ef14:	arpl   WORD PTR ds:0xb7a2f97a,bx
  41ef1a:	clc    
  41ef1b:	ds cmp dl,BYTE PTR cs:[ebx+ecx*2-0x42]
  41ef21:	ins    DWORD PTR es:[edi],dx
  41ef22:	and    al,0x35
  41ef24:	cmp    edx,ebx
  41ef26:	mov    al,0x12
  41ef28:	sbb    DWORD PTR ds:0x91ced97a,esp
  41ef2e:	and    bl,BYTE PTR [ebx+0xa]
  41ef31:	xchg   esi,eax
  41ef32:	and    ebx,DWORD PTR [bx-0x7f84]
  41ef37:	ins    DWORD PTR es:[edi],dx
  41ef38:	mov    ds:0xeb97dc82,al
  41ef3d:	mov    BYTE PTR ds:0x8c2a10b9,dl
  41ef43:	pop    esp
  41ef44:	xchg   edx,eax
  41ef45:	aas    
  41ef46:	xor    eax,DWORD PTR [esp+edx*8]
  41ef49:	pop    ds
  41ef4a:	cmc    
  41ef4b:	ss inc edi
  41ef4d:	mov    dl,0xe0
  41ef4f:	or     al,0xb5
  41ef51:	mov    ebp,DWORD PTR [esi+0x70]
  41ef54:	pop    edi
  41ef55:	push   edx
  41ef56:	clc    
  41ef57:	and    dl,cl
  41ef59:	or     al,0xd6
  41ef5b:	mov    bh,0x86
  41ef5d:	imul   edx,DWORD PTR [edx],0xffffff8e
  41ef60:	nop
  41ef61:	cmp    edi,DWORD PTR [eax-0x68b16360]
  41ef67:	sti    
  41ef68:	pop    esp
  41ef69:	ret    0xbd28
  41ef6c:	mov    ch,0xf4
  41ef6e:	div    DWORD PTR [esp+ecx*8-0x2d417d0e]
  41ef75:	push   ss
  41ef76:	xor    edi,DWORD PTR [edx+0x65a90cc]
  41ef7c:	sti    
  41ef7d:	in     eax,dx
  41ef7e:	cmp    al,0xa6
  41ef80:	dec    eax
  41ef81:	and    eax,0x81ed4c81
  41ef86:	xchg   esp,eax
  41ef87:	test   eax,0x742e815
  41ef8c:	retf   0xd72a
  41ef8f:	std    
  41ef90:	and    eax,0x6aa45d2b
  41ef95:	inc    edi
  41ef96:	outs   dx,BYTE PTR ds:[esi]
  41ef97:	jg     0x41ef8f
  41ef99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef9a:	pop    esp
  41ef9b:	mov    cl,0xf1
  41ef9d:	fwait
  41ef9e:	stos   BYTE PTR es:[edi],al
  41ef9f:	push   edx
  41efa0:	fadd   QWORD PTR [edx]
  41efa2:	mov    bl,0x52
  41efa4:	xor    al,bl
  41efa6:	mov    ebx,0xddece34
  41efab:	(bad)  
  41efac:	sbb    al,0x1f
  41efae:	out    dx,al
  41efaf:	(bad)  
  41efb0:	adc    esi,DWORD PTR [esi+edx*1+0x642f1fb2]
  41efb7:	add    DWORD PTR [edx+0x5c69a6d],edi
  41efbd:	xor    eax,0x611ab1e9
  41efc2:	les    esp,FWORD PTR [eax-0x7249e8ce]
  41efc8:	sbb    al,0x17
  41efca:	cs mov dl,0x78
  41efcd:	stos   DWORD PTR es:[edi],eax
  41efce:	popa   
  41efcf:	scas   eax,DWORD PTR es:[edi]
  41efd0:	pop    ebp
  41efd1:	xchg   esp,eax
  41efd2:	mov    ds:0x3a33e9d6,eax
  41efd7:	jo     0x41efcf
  41efd9:	xchg   esp,esi
  41efdb:	in     al,dx
  41efdc:	cmp    al,0xd0
  41efde:	and    al,0xd
  41efe0:	mov    al,al
  41efe2:	hlt    
  41efe3:	shr    BYTE PTR [ebx+0x4dc9384e],0x96
  41efea:	or     dl,ah
  41efec:	push   ebx
  41efed:	addr16 sub al,0x53
  41eff0:	and    esi,DWORD PTR [ecx+0x58]
  41eff3:	outs   dx,BYTE PTR ds:[esi]
  41eff4:	fild   QWORD PTR [edx]
  41eff6:	daa    
  41eff7:	inc    edi
  41eff8:	cdq    
  41eff9:	in     eax,0x67
  41effb:	sub    al,0x81
  41effd:	lds    eax,FWORD PTR gs:[edx-0x71]
  41f001:	hlt    
  41f002:	xchg   ecx,eax
  41f003:	inc    ecx
  41f004:	aam    0x7d
  41f006:	push   esi
  41f007:	into   
  41f008:	fwait
  41f009:	push   ebp
  41f00a:	lea    ecx,[ebp-0x1fe27a4f]
  41f010:	pminub mm0,QWORD PTR [esi-0x7d]
  41f014:	and    cl,BYTE PTR [esi]
  41f016:	out    0xc3,al
  41f018:	cmp    al,bh
  41f01a:	ss xor dl,0x15
  41f01e:	sbb    BYTE PTR [ebx+0x602a7234],ah
  41f024:	lock add BYTE PTR [edi],bl
  41f027:	repz inc ebp
  41f029:	popa   
  41f02a:	pop    es
  41f02b:	jle    0x41f047
  41f02d:	push   0xffffffc8
  41f02f:	push   ss
  41f030:	mov    ds:0x5c44d107,al
  41f035:	jge    0x41efd9
  41f037:	hlt    
  41f038:	cdq    
  41f039:	outs   dx,DWORD PTR ds:[esi]
  41f03a:	in     al,0x5d
  41f03c:	in     al,0xe
  41f03e:	paddw  mm0,QWORD PTR [edi]
  41f041:	iret   
  41f042:	mov    ?,WORD PTR [edx+0x2f3b6fb0]
  41f048:	adc    DWORD PTR [eax-0x4a],esp
  41f04b:	push   ecx
  41f04c:	pushf  
  41f04d:	push   edi
  41f04e:	push   esp
  41f04f:	pop    ss
  41f050:	(bad)  [ebx]
  41f052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f054:	adc    DWORD PTR [esi],ebx
  41f056:	cli    
  41f057:	sbb    eax,0xf0701ed5
  41f05c:	add    esp,DWORD PTR [esi]
  41f05e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f05f:	pop    ss
  41f060:	loope  0x41f04d
  41f062:	dec    ecx
  41f063:	mov    dh,0x8c
  41f065:	ins    DWORD PTR es:[edi],dx
  41f066:	add    BYTE PTR [edx+0x3a],ah
  41f069:	ins    DWORD PTR es:[edi],dx
  41f06a:	aam    0x79
  41f06c:	js     0x41f0a4
  41f06e:	pop    edi
  41f06f:	jne    0x41f0ba
  41f071:	int    0x23
  41f073:	inc    edi
  41f074:	jg     0x41f047
  41f076:	mov    edi,0x9f20b011
  41f07b:	(bad)  [edx-0x1e1d2c]
  41f081:	jg     0x41f0aa
  41f083:	stos   DWORD PTR es:[edi],eax
  41f084:	or     cl,ch
  41f086:	and    al,0x3c
  41f088:	and    BYTE PTR [edi-0x6c],0xaa
  41f08c:	xchg   ebp,eax
  41f08d:	and    edx,ebx
  41f08f:	shl    DWORD PTR ds:[ebx-0x16818ffb],1
  41f096:	leave  
  41f097:	mov    ebx,cs
  41f099:	jnp    0x41f0ab
  41f09b:	in     eax,0x33
  41f09d:	jns    0x41f0ed
  41f09f:	cmp    BYTE PTR [esi-0x25d5bf03],ah
  41f0a5:	and    edi,DWORD PTR [edx*8-0x3bfd67e7]
  41f0ac:	push   esp
  41f0ad:	clc    
  41f0ae:	cwde   
  41f0af:	or     ecx,ebx
  41f0b1:	ds stc 
  41f0b3:	outs   dx,DWORD PTR ds:[esi]
  41f0b4:	imul   ecx,DWORD PTR [eax+0xf32cfe9],0x25eeac99
  41f0be:	sbb    DWORD PTR [edi+ebx*1],esi
  41f0c1:	and    ebp,DWORD PTR [esi+0x57f1b770]
  41f0c7:	adc    DWORD PTR ds:0x4bec86b3,0xffffff84
  41f0ce:	mov    esi,0x1acb187e
  41f0d3:	xor    bh,bh
  41f0d5:	add    eax,0x510f2584
  41f0da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0db:	and    DWORD PTR [ebx+0x62d316dc],0x26
  41f0e2:	xchg   esp,eax
  41f0e3:	(bad)  
  41f0e4:	jmp    0xa85335bd
  41f0e9:	retf   0xdbd6
  41f0ec:	inc    ecx
  41f0ed:	call   0xc525:0x55f71a06
  41f0f4:	es push 0x5b
  41f0f7:	cld    
  41f0f8:	mov    bh,0x81
  41f0fa:	lahf   
  41f0fb:	inc    edx
  41f0fc:	mov    DWORD PTR [ebx],eax
  41f0fe:	addr16 push ebx
  41f100:	cwde   
  41f101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f102:	add    ch,BYTE PTR [eax+edx*8]
  41f105:	or     ah,BYTE PTR [eax+0x28f02743]
  41f10b:	fldenv [ecx-0x7e72b2e1]
  41f111:	pop    ebx
  41f112:	cmp    DWORD PTR [esi],eax
  41f114:	sub    al,0x5d
  41f116:	jno    0x41f193
  41f118:	dec    edi
  41f119:	mov    eax,ds:0x8d4a1ecf
  41f11e:	jp     0x41f17c
  41f120:	ss push esi
  41f122:	sbb    al,0x86
  41f124:	js     0x41f159
  41f126:	ins    DWORD PTR es:[edi],dx
  41f127:	xor    BYTE PTR [ebx+0x78b69b0e],dh
  41f12d:	cmp    dh,dl
  41f12f:	stos   DWORD PTR es:[edi],eax
  41f130:	push   ds
  41f131:	int    0x79
  41f133:	dec    ebx
  41f134:	in     al,0x41
  41f136:	pop    ss
  41f137:	push   edx
  41f138:	pop    edx
  41f139:	pop    esp
  41f13a:	push   ss
  41f13b:	das    
  41f13c:	cmp    al,BYTE PTR [ebx]
  41f13e:	cli    
  41f13f:	es call 0xbae08877
  41f145:	dec    ebp
  41f146:	int    0x2f
  41f148:	sbb    edi,ecx
  41f14a:	add    bl,ah
  41f14c:	push   cs
  41f14d:	sbb    eax,0x4c0f9a
  41f152:	mov    edi,0xc210697d
  41f157:	xor    ebx,DWORD PTR [ebx+0x6b742292]
  41f15d:	xchg   DWORD PTR [edx],esi
  41f15f:	leave  
  41f160:	fwait
  41f161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f162:	ret    
  41f163:	jnp    0x41f1a7
  41f165:	push   ss
  41f166:	pop    ebp
  41f167:	ins    BYTE PTR es:[edi],dx
  41f168:	stos   DWORD PTR es:[edi],eax
  41f169:	neg    BYTE PTR ss:[eax+0x14]
  41f16d:	lds    edi,FWORD PTR [esi]
  41f16f:	iret   
  41f170:	push   edi
  41f171:	jl     0x41f19c
  41f173:	push   ecx
  41f174:	pmullw mm1,QWORD PTR [esi+0x3b9b76a8]
  41f17b:	cmp    edx,DWORD PTR [ecx-0x75b51834]
  41f181:	inc    edi
  41f182:	inc    esp
  41f183:	cwde   
  41f184:	dec    eax
  41f185:	jge    0x41f174
  41f187:	call   esp
  41f189:	adc    BYTE PTR [ecx-0x3c],dh
  41f18c:	add    DWORD PTR [edx+0x48],0xffffff8e
  41f190:	dec    ecx
  41f191:	jb     0x41f199
  41f193:	imul   edx,esp,0xaa73bc41
  41f199:	xor    DWORD PTR [ebx-0x33],edi
  41f19c:	xor    DWORD PTR [esi+esi*4+0x25],esi
  41f1a0:	and    bh,0xd2
  41f1a3:	ffreep st(2)
  41f1a5:	pop    es
  41f1a6:	mov    bl,0xc1
  41f1a8:	push   es
  41f1a9:	cdq    
  41f1aa:	push   0x17b92037
  41f1af:	sub    ebx,ecx
  41f1b1:	sub    BYTE PTR [esi],bl
  41f1b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1b4:	xchg   esi,eax
  41f1b5:	cdq    
  41f1b6:	push   esi
  41f1b7:	xor    bh,BYTE PTR [ecx+0xf238d69]
  41f1bd:	fsub   DWORD PTR [ebp+ebp*8-0x2e059ff]
  41f1c4:	add    al,0xc7
  41f1c6:	mov    edi,ebx
  41f1c8:	fidivr DWORD PTR [eax]
  41f1ca:	addr16 mov dh,0xb4
  41f1cd:	ror    BYTE PTR [esi+0x22],cl
  41f1d0:	push   0xffffffe5
  41f1d2:	ret    0x7180
  41f1d5:	add    al,BYTE PTR [esi-0x477eac3a]
  41f1db:	or     BYTE PTR [ebp+0x21],cl
  41f1de:	sahf   
  41f1df:	test   BYTE PTR [eax-0x4b3c3201],0x95
  41f1e6:	in     eax,0x41
  41f1e8:	cmc    
  41f1e9:	dec    ebp
  41f1ea:	dec    eax
  41f1eb:	inc    ebp
  41f1ec:	(bad)  
  41f1ed:	js     0x41f25c
  41f1ef:	and    ecx,0x3fc02a58
  41f1f5:	shl    DWORD PTR [ebx-0x59d8e2c1],cl
  41f1fb:	jno    0x41f255
  41f1fd:	push   es
  41f1fe:	inc    ecx
  41f1ff:	push   cs
  41f200:	adc    eax,0x80c82f94
  41f205:	(bad)  
  41f206:	pop    edx
  41f207:	push   ds
  41f208:	add    ch,ch
  41f20a:	sub    al,0x3
  41f20c:	mov    cl,0xd9
  41f20e:	outs   dx,DWORD PTR ds:[esi]
  41f20f:	or     BYTE PTR [esi+0x7e3552a3],bl
  41f215:	sahf   
  41f216:	iret   
  41f217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f218:	adc    bh,ch
  41f21a:	inc    ebx
  41f21b:	pop    eax
  41f21c:	mov    WORD PTR [eax-0x48],gs
  41f21f:	dec    esi
  41f220:	push   ebp
  41f221:	add    BYTE PTR [edi-0x7c0d9651],ah
  41f227:	stc    
  41f228:	sbb    esp,DWORD PTR ds:0x1f05f8de
  41f22e:	aad    0xbc
  41f230:	fstp   st(2)
  41f232:	mov    ebp,0x7ab3f030
  41f238:	ficom  WORD PTR [ebx+edi*1+0x6d]
  41f23c:	add    ecx,esi
  41f23e:	mov    bl,0xf1
  41f240:	mov    dh,bl
  41f242:	pusha  
  41f243:	mov    ch,0xee
  41f245:	and    DWORD PTR [edi-0x1a5841db],ebp
  41f24b:	loopne 0x41f1d5
  41f24d:	sti    
  41f24e:	adc    DWORD PTR [ecx+0x73],0xce65c4cb
  41f255:	adc    eax,DWORD PTR [edi+0x1fc42fdb]
  41f25b:	jle    0x41f2d9
  41f25d:	pop    es
  41f25e:	pusha  
  41f25f:	rcl    BYTE PTR [esi],cl
  41f261:	(bad)
  41f264:	jl     0x41f278
  41f266:	xor    ecx,DWORD PTR [edi]
  41f268:	inc    esp
  41f269:	push   cs
  41f26a:	in     eax,0x6e
  41f26c:	mov    ah,0x1d
  41f26e:	sub    dh,0x7c
  41f271:	fcmovnbe st,st(0)
  41f273:	mov    ds:0x8278cd6b,al
  41f278:	inc    ecx
  41f279:	sub    al,0xad
  41f27b:	mov    ebx,0x35676972
  41f280:	jae    0x41f2a8
  41f282:	dec    ebx
  41f283:	or     eax,0xef9c8850
  41f288:	sub    DWORD PTR [edi],ebp
  41f28a:	popa   
  41f28b:	cmp    esi,DWORD PTR [ebp+0xddb323f]
  41f291:	dec    eax
  41f292:	out    dx,eax
  41f293:	push   cs
  41f294:	neg    BYTE PTR [ebx]
  41f296:	cmpxchg BYTE PTR [ebp-0x701c0e89],ch
  41f29d:	pop    ds
  41f29e:	ret    
  41f29f:	out    0xf,al
  41f2a1:	lods   eax,DWORD PTR ds:[esi]
  41f2a2:	inc    edi
  41f2a3:	push   cs
  41f2a4:	repnz mov ds:0x1c17d47b,eax
  41f2aa:	jp     0x41f321
  41f2ac:	ins    DWORD PTR es:[edi],dx
  41f2ad:	xor    al,0xc6
  41f2af:	(bad)  
  41f2b0:	xor    DWORD PTR [esi],edx
  41f2b2:	ins    BYTE PTR es:[edi],dx
  41f2b3:	stos   DWORD PTR es:[edi],eax
  41f2b4:	ja     0x41f31a
  41f2b6:	adc    DWORD PTR [eax+0x2d],0x0
  41f2ba:	push   ss
  41f2bb:	jl     0x41f249
  41f2bd:	lock in al,0x2b
  41f2c0:	sbb    al,ch
  41f2c2:	mov    ebp,es
  41f2c4:	inc    ecx
  41f2c5:	test   ah,al
  41f2c7:	adc    cl,BYTE PTR [edi]
  41f2c9:	and    eax,0xa78e0f82
  41f2ce:	xor    esi,DWORD PTR [ebp-0x2e40577a]
  41f2d4:	xchg   edi,eax
  41f2d5:	nop
  41f2d6:	fisttp DWORD PTR [ebx+0x247a59f6]
  41f2dc:	pop    ss
  41f2dd:	pop    es
  41f2de:	hlt    
  41f2df:	jge    0x41f28a
  41f2e1:	pop    eax
  41f2e2:	test   DWORD PTR [esi-0x16],ebx
  41f2e5:	xor    eax,0x242444c1
  41f2ea:	mov    ecx,DWORD PTR [ebp-0x49]
  41f2ed:	xor    al,0xbc
  41f2f0:	ss loopne 0x41f34c
  41f2f3:	leave  
  41f2f4:	stc    
  41f2f5:	pop    edx
  41f2f6:	inc    esp
  41f2f7:	loope  0x41f345
  41f2f9:	mov    esp,0x46614ce4
  41f2fe:	mov    dl,0x92
  41f300:	mov    eax,0x889c3bb0
  41f305:	xlat   BYTE PTR ds:[ebx]
  41f306:	hlt    
  41f307:	ins    DWORD PTR es:[edi],dx
  41f308:	out    0x26,al
  41f30a:	test   esi,ecx
  41f30c:	push   ebp
  41f30d:	or     bh,cl
  41f30f:	nop
  41f310:	inc    eax
  41f311:	fdiv   QWORD PTR [ebx-0x18]
  41f314:	xchg   BYTE PTR [edx+0x7a],bh
  41f317:	(bad)  
  41f318:	and    DWORD PTR [ebp-0x52134a37],esp
  41f31e:	stos   DWORD PTR es:[edi],eax
  41f31f:	jbe    0x41f2c3
  41f321:	pop    ss
  41f322:	jbe    0x41f376
  41f324:	dec    edx
  41f325:	sahf   
  41f326:	gs into 
  41f328:	lds    edx,FWORD PTR [ebx]
  41f32a:	adc    eax,0xc20e8a33
  41f32f:	out    0x6a,eax
  41f331:	dec    ebp
  41f332:	dec    BYTE PTR [ebx]
  41f334:	nop
  41f335:	mov    WORD PTR ds:0xfa7b7373,?
  41f33b:	jg     0x41f2ee
  41f33d:	inc    eax
  41f33e:	dec    esp
  41f33f:	mov    dh,ah
  41f341:	lods   al,BYTE PTR ds:[esi]
  41f342:	jmp    0x8a77:0xf6b66715
  41f349:	test   BYTE PTR [ecx-0xf598131],0x9b
  41f350:	add    ebx,DWORD PTR [ecx+0x64]
  41f353:	jmp    0xcd11:0x3d67e736
  41f35a:	std    
  41f35b:	fnstenv [ebp-0x6ff3b056]
  41f361:	dec    ecx
  41f362:	xchg   esi,eax
  41f363:	arpl   bp,cx
  41f365:	mov    dl,0x33
  41f367:	sub    ah,BYTE PTR [ebx+0x2c]
  41f36a:	test   al,0x7f
  41f36c:	cmc    
  41f36d:	add    DWORD PTR [eax+edx*4-0x44442283],0xb372edfa
  41f378:	xchg   BYTE PTR [ebx],dl
  41f37a:	push   edx
  41f37b:	fwait
  41f37c:	stos   DWORD PTR es:[edi],eax
  41f37d:	xchg   edx,eax
  41f37e:	push   edi
  41f37f:	shl    BYTE PTR [ecx+0x7dde6deb],0xbc
  41f386:	imul   ecx,DWORD PTR [edi+0x1e],0x71
  41f38a:	push   0xe3a63f03
  41f38f:	out    dx,al
  41f390:	jmp    0xec5ed2e7
  41f395:	mov    ecx,0xa18a09e7
  41f39a:	xor    BYTE PTR [esi+eiz*1-0x16],dh
  41f39e:	mov    edi,0x2fcd772e
  41f3a3:	retf   
  41f3a4:	loopne 0x41f3d2
  41f3a6:	(bad)  
  41f3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a8:	mov    ecx,0x4b761752
  41f3ad:	lahf   
  41f3ae:	icebp  
  41f3af:	sbb    al,0x37
  41f3b1:	mov    DWORD PTR [eax],eax
  41f3b3:	and    eax,0xba3630bd
  41f3b8:	stos   DWORD PTR es:[edi],eax
  41f3b9:	sub    esi,DWORD PTR [ecx]
  41f3bb:	in     eax,0x2a
  41f3bd:	xchg   ebx,eax
  41f3be:	ins    DWORD PTR es:[edi],dx
  41f3bf:	les    ebp,FWORD PTR [ecx]
  41f3c1:	xchg   BYTE PTR ds:0x4404ea1f,bl
  41f3c7:	or     al,0xa4
  41f3c9:	push   0x4716e982
  41f3ce:	imul   edx,esp,0x706f4497
  41f3d4:	out    0x1,al
  41f3d6:	push   0xd69c47e
  41f3db:	xchg   edx,eax
  41f3dc:	scas   eax,DWORD PTR es:[edi]
  41f3dd:	pop    ebx
  41f3de:	push   0xabc98377
  41f3e3:	les    esi,FWORD PTR [edx+0x53]
  41f3e6:	or     edx,DWORD PTR [ebp-0x55]
  41f3e9:	or     BYTE PTR [ebp-0x18],bl
  41f3ec:	clc    
  41f3ed:	dec    eax
  41f3ee:	fdiv   st,st(6)
  41f3f0:	add    ebp,DWORD PTR ds:0x64a5ee1c
  41f3f6:	pmaxub mm7,QWORD PTR [eax-0xcaa6b9a]
  41f3fd:	and    eax,0xb1b16a00
  41f402:	dec    ebx
  41f403:	inc    eax
  41f404:	xor    BYTE PTR [eax-0x515da8de],cl
  41f40a:	stos   BYTE PTR es:[edi],al
  41f40b:	mov    eax,ds:0xa6c12fb9
  41f410:	pcmpeqw mm0,QWORD PTR [edx]
  41f413:	dec    eax
  41f414:	pop    esi
  41f415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f416:	jns    0x41f405
  41f418:	cli    
  41f419:	mov    ebx,0xbbfbcb6b
  41f41e:	mov    dh,0x20
  41f420:	pop    ebx
  41f421:	jp     0x41f467
  41f423:	cmp    bl,0x9d
  41f426:	jnp    0x41f44d
  41f428:	js     0x41f434
  41f42a:	js     0x41f3fc
  41f42c:	mov    WORD PTR [ebp-0xd],?
  41f42f:	sbb    cl,BYTE PTR [edx-0xa625fa2]
  41f435:	sbb    BYTE PTR [edi-0x16da6a7],bl
  41f43b:	xor    eax,0x2e7b9422
  41f440:	mov    ebx,0x5ffbd11e
  41f445:	ret    
  41f446:	mov    bl,0xc2
  41f448:	xlat   BYTE PTR ds:[ebx]
  41f449:	jl     0x41f3d3
  41f44b:	(bad)  [esi+0x3d]
  41f44e:	add    BYTE PTR [eax-0x289679a1],bl
  41f454:	xchg   esp,ebx
  41f456:	in     al,dx
  41f457:	cld    
  41f458:	sub    ah,BYTE PTR ss:[eax]
  41f45b:	sbb    ah,al
  41f45d:	adc    ch,BYTE PTR [esi+0x58d88caf]
  41f463:	enter  0x8db9,0x6c
  41f467:	inc    edi
  41f468:	cdq    
  41f469:	sahf   
  41f46a:	in     eax,0x2f
  41f46c:	push   ss
  41f46d:	sbb    BYTE PTR [edi-0x44953a80],dh
  41f473:	adc    DWORD PTR [eax],edi
  41f475:	xchg   esi,eax
  41f476:	mov    esi,0x3cbcbec1
  41f47b:	sbb    eax,0xdd3c054d
  41f480:	int    0x30
  41f482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f483:	int3   
  41f484:	and    DWORD PTR [esi],esi
  41f486:	aam    0xa7
  41f488:	push   0xcf08b699
  41f48d:	xchg   ecx,eax
  41f48e:	mov    edi,0x70d79caf
  41f493:	pop    ss
  41f494:	dec    esi
  41f495:	mov    eax,ecx
  41f497:	fdecstp 
  41f499:	xor    BYTE PTR [eax],0x69
  41f49c:	mov    ecx,0x3713a5bc
  41f4a1:	mov    dh,0x26
  41f4a3:	stc    
  41f4a4:	add    ecx,DWORD PTR [ebx]
  41f4a6:	push   eax
  41f4a7:	push   ss
  41f4a8:	mov    bl,0x59
  41f4aa:	jbe    0x41f454
  41f4ac:	xor    eax,0xc053f840
  41f4b1:	pop    edx
  41f4b2:	mov    ecx,0x22e0bc8e
  41f4b7:	mov    bh,0x13
  41f4b9:	sbb    eax,0x53979922
  41f4be:	jnp    0x41f48f
  41f4c0:	add    DWORD PTR [ebx+0x426c7d13],eax
  41f4c6:	es pop esi
  41f4c8:	mov    cl,0xf8
  41f4ca:	mov    es,WORD PTR [eax]
  41f4cc:	clc    
  41f4cd:	push   edx
  41f4ce:	cwde   
  41f4cf:	or     eax,0xb940d640
  41f4d4:	xchg   esi,eax
  41f4d5:	jb     0x41f51d
  41f4d7:	push   eax
  41f4d8:	mov    bl,0x62
  41f4da:	push   eax
  41f4db:	(bad)  
  41f4dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4dd:	ins    DWORD PTR es:[edi],dx
  41f4de:	and    dl,cl
  41f4e0:	jg     0x41f557
  41f4e2:	loop   0x41f522
  41f4e4:	pop    esi
  41f4e5:	and    DWORD PTR ds:0x8ca6a70e,edi
  41f4eb:	adc    edi,edx
  41f4ed:	push   esp
  41f4ee:	jmp    0x5238:0xe08b3f2b
  41f4f5:	jns    0x41f538
  41f4f7:	mov    DWORD PTR [edi],ebp
  41f4f9:	push   esi
  41f4fa:	xor    BYTE PTR [edx-0x72],ah
  41f4fd:	xchg   esp,eax
  41f4fe:	ds dec edx
  41f500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f501:	data16 fucom st(0)
  41f504:	aad    0xea
  41f506:	stos   DWORD PTR es:[edi],eax
  41f507:	lahf   
  41f508:	rol    BYTE PTR ds:0x772e12dd,0x85
  41f50f:	mov    esi,0xa4d05eac
  41f514:	pop    ds
  41f515:	pop    esi
  41f516:	aas    
  41f517:	in     al,0x82
  41f519:	aas    
  41f51a:	test   al,0xc3
  41f51c:	ins    BYTE PTR es:[edi],dx
  41f51d:	dec    esi
  41f51e:	outs   dx,DWORD PTR ds:[esi]
  41f51f:	pop    ss
  41f520:	cmp    ch,ch
  41f522:	dec    esp
  41f523:	or     BYTE PTR ss:[edi+eax*2-0x69],dl
  41f528:	jg     0x41f4f0
  41f52a:	mov    edx,0x917c6407
  41f52f:	xor    al,0xf1
  41f531:	pop    edx
  41f532:	mov    bl,0xa0
  41f534:	js     0x41f541
  41f536:	ss test ecx,ecx
  41f539:	and    DWORD PTR [esi],ebp
  41f53b:	mov    bl,0x7
  41f53d:	xchg   ebp,eax
  41f53e:	(bad)  
  41f540:	lea    esi,[eax]
  41f542:	jbe    0x41f569
  41f544:	pop    ebx
  41f545:	ffreep st(0)
  41f547:	ins    DWORD PTR es:[edi],dx
  41f548:	inc    edi
  41f549:	mov    edi,0x68d91fd8
  41f54e:	pcmpeqb mm7,mm1
  41f551:	add    BYTE PTR [edi+0x6f0602c6],dh
  41f557:	loopne 0x41f54a
  41f559:	jp     0x41f571
  41f55b:	sub    DWORD PTR [edi+0xae6269b],esp
  41f561:	imul   ebp,DWORD PTR [edi-0x1aceda54],0xffffff9a
  41f568:	arpl   WORD PTR [ebx-0x3b660525],cx
  41f56e:	lods   eax,DWORD PTR ss:[esi]
  41f570:	mov    WORD PTR [ebp+0x54],ss
  41f573:	sbb    cl,BYTE PTR [ecx]
  41f575:	pop    ss
  41f576:	das    
  41f577:	xlat   BYTE PTR ds:[ebx]
  41f578:	dec    esp
  41f579:	ss cld 
  41f57b:	dec    esp
  41f57c:	sbb    al,0x63
  41f57e:	das    
  41f57f:	rcr    DWORD PTR [eax],1
  41f581:	xchg   ch,bh
  41f583:	cwde   
  41f584:	mov    ecx,edi
  41f586:	loope  0x41f535
  41f588:	ins    BYTE PTR es:[edi],dx
  41f589:	idiv   BYTE PTR [edi-0x501d7961]
  41f58f:	idiv   BYTE PTR [edi+edx*4+0x16]
  41f593:	cmc    
  41f594:	mov    ds:0xe107c3ea,eax
  41f599:	iret   
  41f59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f59b:	push   0xffffffa5
  41f59d:	add    BYTE PTR [edx],dl
  41f59f:	dec    esp
  41f5a0:	push   ss
  41f5a1:	jmp    0x502b:0x9a4ed33c
  41f5a8:	sahf   
  41f5a9:	mov    ?,ebx
  41f5ab:	addr16 into 
  41f5ad:	jle    0x41f56d
  41f5af:	lock pop ecx
  41f5b1:	pop    esp
  41f5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b3:	mov    bh,BYTE PTR ds:0x37ee0268
  41f5b9:	bsf    edx,DWORD PTR [edi+eax*4+0x6fb7a53c]
  41f5c1:	sbb    al,0x9c
  41f5c3:	mov    ebx,0x32d9927a
  41f5c8:	add    ecx,ecx
  41f5ca:	ins    BYTE PTR es:[edi],dx
  41f5cb:	test   DWORD PTR [eax],edx
  41f5cd:	arpl   WORD PTR [ecx+0x9],sp
  41f5d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5d1:	xor    ch,ah
  41f5d3:	loopne 0x41f58e
  41f5d5:	cld    
  41f5d6:	cmp    eax,0x89c3e0c8
  41f5db:	jp     0x41f60e
  41f5dd:	icebp  
  41f5de:	dec    ebx
  41f5df:	leave  
  41f5e0:	or     cl,ch
  41f5e2:	dec    ebp
  41f5e3:	mov    ch,bh
  41f5e5:	xor    dh,al
  41f5e7:	call   0xe6c8:0x25915d79
  41f5ee:	cmp    al,0xf2
  41f5f0:	das    
  41f5f1:	push   es
  41f5f2:	(bad)  
  41f5f4:	mov    DWORD PTR [ebx],esp
  41f5f6:	mov    ds:0x9cb1435,eax
  41f5fb:	inc    eax
  41f5fc:	pop    ss
  41f5fd:	mov    ds:0xd69f3b12,eax
  41f602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f603:	cmp    BYTE PTR [ebx],0xc9
  41f606:	add    DWORD PTR [esi],edx
  41f608:	mov    ch,0xa8
  41f60a:	add    edi,DWORD PTR [edi-0x4f1ebfd9]
  41f610:	stos   DWORD PTR es:[edi],eax
  41f611:	sub    esi,0x42
  41f614:	push   ebp
  41f615:	xor    DWORD PTR [ebx],eax
  41f617:	(bad)  
  41f618:	cmp    al,0x95
  41f61a:	xchg   BYTE PTR [ebp+0x52155fcd],bh
  41f620:	push   ds
  41f621:	bswap  edi
  41f623:	out    dx,al
  41f624:	fistp  QWORD PTR ss:[ebx]
  41f627:	cli    
  41f628:	bound  ecx,QWORD PTR [eax-0x75]
  41f62b:	sub    DWORD PTR [edx],0x10
  41f62e:	sub    BYTE PTR [esi+eax*2-0x13],dl
  41f632:	sbb    BYTE PTR [ebp+0x39e7a60b],cl
  41f638:	sub    bh,BYTE PTR [esi+0x63d05467]
  41f63e:	stos   BYTE PTR es:[edi],al
  41f63f:	dec    edi
  41f640:	add    BYTE PTR [eax-0x8],ah
  41f643:	xchg   edx,eax
  41f644:	arpl   WORD PTR [ecx+ebp*8],bx
  41f647:	(bad)  
  41f648:	leave  
  41f649:	call   0x2bcafc98
  41f64e:	lods   eax,DWORD PTR ds:[esi]
  41f64f:	xor    DWORD PTR [edx-0x4bb6375c],edx
  41f655:	and    esi,ebp
  41f657:	int3   
  41f658:	or     esi,edx
  41f65a:	jne    0x41f68e
  41f65c:	push   es
  41f65d:	ds or  al,0x76
  41f660:	cmp    BYTE PTR [ebx+0x18],0x3c
  41f664:	pusha  
  41f665:	dec    esp
  41f666:	outs   dx,BYTE PTR ds:[esi]
  41f667:	stos   BYTE PTR es:[edi],al
  41f668:	bound  edx,QWORD PTR [ebx+0x74]
  41f66b:	popf   
  41f66c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f66d:	clc    
  41f66e:	inc    edi
  41f66f:	inc    ebx
  41f670:	lods   al,BYTE PTR ds:[esi]
  41f671:	jns    0x41f600
  41f673:	inc    bh
  41f675:	jge    0x41f6ce
  41f677:	xor    al,BYTE PTR [ebx+0xc]
  41f67a:	popa   
  41f67b:	and    ebp,esi
  41f67d:	sub    DWORD PTR [ecx],0x698ac875
  41f683:	js     0x41f645
  41f685:	gs repz mov eax,0x8aa895ba
  41f68c:	outs   dx,DWORD PTR ds:[esi]
  41f68d:	pop    ds
  41f68e:	or     edx,ebx
  41f690:	pop    ss
  41f691:	push   ecx
  41f692:	in     al,0x4a
  41f694:	push   edi
  41f695:	mov    ds:0x3892d938,al
  41f69a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f69b:	or     DWORD PTR [ecx],edi
  41f69d:	pop    ebp
  41f69e:	or     DWORD PTR [edx+0x1ab16568],ebx
  41f6a4:	ins    DWORD PTR es:[edi],dx
  41f6a5:	mov    al,0x43
  41f6a7:	enter  0x80b3,0xc4
  41f6ab:	call   0x864b:0xbfe80022
  41f6b2:	mov    ah,0xb2
  41f6b4:	pushf  
  41f6b5:	loope  0x41f667
  41f6b7:	les    edi,FWORD PTR ds:0xf3477496
  41f6bd:	clc    
  41f6be:	sti    
  41f6bf:	int3   
  41f6c0:	inc    ebx
  41f6c1:	mov    bl,0x89
  41f6c3:	ins    BYTE PTR es:[edi],dx
  41f6c4:	jge    0x41f727
  41f6c6:	pop    ebx
  41f6c8:	ficomp DWORD PTR [ebx+edx*2]
  41f6cb:	inc    eax
  41f6cc:	aam    0x53
  41f6ce:	sbb    ax,0xec99
  41f6d2:	push   0xc936def9
  41f6d7:	loope  0x41f729
  41f6d9:	test   DWORD PTR [ecx-0x1786bbd8],ebp
  41f6df:	adc    cl,BYTE PTR [edx+0x5d]
  41f6e2:	inc    ebx
  41f6e3:	jp     0x41f693
  41f6e5:	lea    ebx,[esi]
  41f6e7:	xor    bl,BYTE PTR [ebx+0x365862f5]
  41f6ed:	icebp  
  41f6ee:	popa   
  41f6ef:	xchg   ebp,eax
  41f6f0:	sbb    BYTE PTR [edi],0x1b
  41f6f3:	cwde   
  41f6f4:	nop
  41f6f5:	ret    
  41f6f6:	repz sbb BYTE PTR [ecx],0x7c
  41f6fa:	test   DWORD PTR [ecx-0x7a32e9fa],ecx
  41f700:	in     al,0x96
  41f702:	pop    es
  41f703:	cmp    dl,BYTE PTR [ecx]
  41f705:	jmp    DWORD PTR [edx+0x11ae294a]
  41f70b:	jnp    0x41f709
  41f70d:	ds mov esp,0x64ae1736
  41f713:	dec    esp
  41f714:	loop   0x41f74a
  41f716:	sbb    eax,0xb2472c49
  41f71b:	add    DWORD PTR [esi+0x52b51797],edx
  41f721:	mov    edx,0x8d00ec9b
  41f726:	pop    ecx
  41f727:	jo     0x41f723
  41f729:	cdq    
  41f72a:	push   0x3d
  41f72c:	add    al,0x3d
  41f72e:	inc    ebp
  41f72f:	xor    ebx,ebx
  41f731:	xchg   esp,eax
  41f732:	mov    ss,WORD PTR [esi+ebx*1]
  41f735:	test   DWORD PTR [edi],edi
  41f737:	cmpxchg ecx,esi
  41f73a:	lea    ebx,[esi-0x235345a8]
  41f740:	and    eax,DWORD PTR [ebp-0x73]
  41f743:	clc    
  41f744:	sbb    eax,0xb273cc89
  41f749:	jno    0x41f786
  41f74b:	inc    DWORD PTR [edi]
  41f74d:	sti    
  41f74e:	sub    al,BYTE PTR [esi]
  41f750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f751:	fwait
  41f752:	and    DWORD PTR [eax-0x1c92c8c3],edi
  41f758:	mov    cl,0xaa
  41f75a:	and    ebp,DWORD PTR [edi-0x212d1977]
  41f760:	sbb    ch,BYTE PTR [ebx]
  41f762:	lock adc BYTE PTR [edi+0x5dde0f31],dl
  41f769:	(bad)  
  41f76b:	call   0xde4:0x8cfbe2d0
  41f772:	or     ecx,DWORD PTR cs:[edx]
  41f775:	gs pop ds
  41f777:	(bad)  
  41f778:	call   0xbde83d8b
  41f77d:	bound  edi,QWORD PTR [ebx+0x61]
  41f780:	dec    DWORD PTR [esi]
  41f782:	imul   edi,ebp,0xd962f736
  41f788:	bound  eax,QWORD PTR [eax]
  41f78a:	ss mov esi,0x5b89e1ab
  41f790:	add    bl,BYTE PTR [ebp+0x2fc48f4f]
  41f796:	cmp    eax,0x4154319e
  41f79b:	xor    bh,bh
  41f79d:	pop    eax
  41f79e:	es icebp 
  41f7a0:	sub    bl,bh
  41f7a2:	adc    dh,ch
  41f7a4:	inc    ecx
  41f7a5:	inc    ebp
  41f7a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7a7:	push   0xffffffb3
  41f7a9:	loop   0x41f78b
  41f7ab:	and    al,al
  41f7ad:	pop    eax
  41f7ae:	scas   al,BYTE PTR es:[edi]
  41f7af:	popa   
  41f7b0:	(bad)  
  41f7b1:	mov    esi,0xd1dcc684
  41f7b6:	push   ebp
  41f7b7:	or     BYTE PTR [ebx],dl
  41f7b9:	dec    ebp
  41f7ba:	sbb    eax,0xb8ca0871
  41f7bf:	outs   dx,DWORD PTR ds:[esi]
  41f7c0:	fldcw  WORD PTR [edi-0x7781378]
  41f7c6:	xor    edi,edi
  41f7c8:	shr    cl,cl
  41f7ca:	cmp    BYTE PTR [ecx+0x10],dh
  41f7cd:	daa    
  41f7ce:	test   esp,esi
  41f7d0:	mov    bl,0x60
  41f7d2:	adc    DWORD PTR [esi-0x6a],ebx
  41f7d5:	and    DWORD PTR [esi-0x5b494bd2],esp
  41f7db:	add    DWORD PTR [ebx-0x3c],esp
  41f7de:	inc    ebx
  41f7df:	mov    esp,0xce456f61
  41f7e4:	cs push es
  41f7e6:	xchg   edx,eax
  41f7e7:	or     DWORD PTR [eax],ebp
  41f7e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7ea:	das    
  41f7eb:	push   0xffffffc7
  41f7ed:	rcr    DWORD PTR [edi+eiz*2-0x6],0x80
  41f7f2:	pushf  
  41f7f3:	fisub  WORD PTR [edx+0x3265b29e]
  41f7f9:	cmc    
  41f7fa:	sbb    DWORD PTR [edi],eax
  41f7fc:	test   BYTE PTR [edx],0x2c
  41f7ff:	dec    ecx
  41f800:	pop    esi
  41f801:	xchg   esp,edx
  41f803:	bound  edi,QWORD PTR [ebx-0x659c11fe]
  41f809:	add    al,0xf7
  41f80b:	fidivr DWORD PTR [esi]
  41f80d:	scas   al,BYTE PTR es:[edi]
  41f80e:	hlt    
  41f80f:	and    al,0x6b
  41f811:	jp     0x41f83f
  41f813:	xchg   esp,eax
  41f814:	push   ss
  41f815:	gs dec bp
  41f818:	mov    ?,WORD PTR [ebx+0x3aca82e5]
  41f81e:	jp     0x41f85d
  41f820:	xor    ecx,esp
  41f822:	push   0x7d
  41f824:	dec    ecx
  41f825:	pop    esp
  41f826:	das    
  41f827:	cdq    
  41f828:	inc    dl
  41f82a:	mov    dh,BYTE PTR [edi]
  41f82c:	sub    ah,BYTE PTR [edx+0x1fccea70]
  41f832:	dec    DWORD PTR [ebp+ecx*2-0x12193c2f]
  41f839:	(bad)  
  41f83a:	std    
  41f83b:	jle    0x41f87c
  41f83d:	inc    esp
  41f83e:	inc    esp
  41f83f:	cmp    cl,ch
  41f841:	mov    edi,0xc1836b41
  41f846:	jl     0x41f826
  41f848:	pop    ebx
  41f849:	popf   
  41f84a:	jo     0x41f7e6
  41f84c:	idiv   DWORD PTR [edx-0x35]
  41f84f:	push   0xb1237e90
  41f854:	pop    ecx
  41f855:	jp     0x41f84f
  41f857:	adc    ecx,DWORD PTR [ebx+0x188a3a0a]
  41f85d:	push   ebx
  41f85e:	call   DWORD PTR [eax-0x11d7a46a]
  41f864:	int    0xb2
  41f866:	or     ah,BYTE PTR [esi-0x8]
  41f869:	or     ecx,ebp
  41f86b:	and    DWORD PTR [ebx+0x57],ebx
  41f86e:	mov    ebp,0xed852679
  41f873:	mov    bh,0x6a
  41f875:	push   edx
  41f876:	int    0xdb
  41f878:	dec    ebx
  41f879:	dec    edx
  41f87a:	lock ss jle 0x41f86b
  41f87e:	lods   al,BYTE PTR ds:[esi]
  41f87f:	and    al,0x38
  41f881:	mov    esi,0xde059c4e
  41f886:	leave  
  41f887:	ins    BYTE PTR es:[edi],dx
  41f888:	xlat   BYTE PTR ds:[ebx]
  41f889:	aad    0xa3
  41f88b:	jmp    0x41f847
  41f88d:	jp     0x41f8bf
  41f88f:	jne    0x41f8b0
  41f891:	outs   dx,DWORD PTR ds:[esi]
  41f892:	xchg   esi,eax
  41f893:	inc    esp
  41f894:	cmp    al,0x7e
  41f896:	mov    edi,0xb5831f10
  41f89b:	xor    eax,0xde4e0da1
  41f8a0:	xchg   edi,eax
  41f8a1:	and    eax,0xefa38762
  41f8a6:	xor    edi,DWORD PTR [ecx+eiz*8]
  41f8a9:	or     al,0x66
  41f8ab:	mov    cl,0x22
  41f8ad:	xchg   esi,eax
  41f8ae:	in     al,dx
  41f8af:	mov    al,ds:0xf3f8e12
  41f8b4:	les    esp,FWORD PTR [edi]
  41f8b6:	test   BYTE PTR [ebp+0x10b433ad],bh
  41f8bc:	es mov esp,0xf4f254e5
  41f8c2:	mov    ss,WORD PTR [ecx+ecx*2]
  41f8c5:	mov    al,ds:0xcffe0378
  41f8ca:	and    DWORD PTR [ebp+0x25],0xfffffff7
  41f8ce:	fcomp  DWORD PTR [ebx-0x5]
  41f8d1:	dec    ecx
  41f8d2:	into   
  41f8d3:	imul   ebx,DWORD PTR [ecx+esi*8],0x74
  41f8d7:	call   0x4930:0x307982be
  41f8de:	mov    ss,WORD PTR [ecx+edi*8-0x77196551]
  41f8e5:	test   al,0xd0
  41f8e7:	sbb    al,0x85
  41f8e9:	pushf  
  41f8ea:	inc    esp
  41f8eb:	mov    bl,0xbc
  41f8ed:	stc    
  41f8ee:	push   edi
  41f8ef:	in     al,0xf7
  41f8f1:	imul   ebx,DWORD PTR [eax],0xe2ca3989
  41f8f7:	mov    al,ds:0x5245bafe
  41f8fc:	xchg   ebx,eax
  41f8fd:	fwait
  41f8fe:	push   cs
  41f8ff:	mov    al,ds:0x2f1c5c7a
  41f904:	clc    
  41f905:	push   edi
  41f906:	jbe    0x41f92a
  41f908:	outs   dx,DWORD PTR ds:[esi]
  41f909:	xchg   DWORD PTR [eax],edi
  41f90b:	pop    ss
  41f90c:	jecxz  0x41f8b2
  41f90e:	mov    eax,ds:0x3b465bd9
  41f913:	hlt    
  41f914:	outs   dx,BYTE PTR ds:[esi]
  41f915:	pop    es
  41f916:	imul   edi,DWORD PTR [ecx],0x34
  41f919:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f91a:	mov    esi,0x69c5f994
  41f91f:	mov    eax,0x73fe9362
  41f924:	jp     0x41f913
  41f926:	fisubr WORD PTR [ebp-0x22]
  41f929:	gs iret 
  41f92b:	pop    esi
  41f92c:	test   DWORD PTR [ebx],0x547c2cc2
  41f932:	ds cld 
  41f934:	call   0x4a14:0x822451e9
  41f93b:	ret    0xdfbc
  41f93e:	push   ds
  41f93f:	rcr    DWORD PTR cs:[ebx-0x7e],cl
  41f943:	cwde   
  41f944:	xchg   edx,eax
  41f945:	or     eax,0x35de0a26
  41f94a:	inc    ecx
  41f94b:	popa   
  41f94c:	cmp    ch,BYTE PTR [ebx]
  41f94e:	(bad)  
  41f94f:	int    0x51
  41f951:	fld    QWORD PTR [ebp+0x64d30321]
  41f957:	outs   dx,BYTE PTR ds:[esi]
  41f958:	add    bl,dl
  41f95a:	push   esi
  41f95b:	mov    WORD PTR [eax+0xcb1c20d],ss
  41f961:	dec    ebp
  41f962:	cmp    eax,DWORD PTR [esi+0x11d24f4f]
  41f968:	call   0x6999:0x21ee7e8d
  41f96f:	cli    
  41f970:	addr16 cli 
  41f972:	aad    0x8
  41f974:	outs   dx,DWORD PTR ds:[esi]
  41f975:	sahf   
  41f976:	les    ebx,FWORD PTR [ebp+0x45]
  41f979:	test   BYTE PTR gs:[esi+0x42],bh
  41f97d:	mov    ds:0x7be49e51,al
  41f982:	(bad)  
  41f983:	push   ebx
  41f984:	jmp    0x2649:0x5d5eacbd
  41f98b:	aaa    
  41f98c:	imul   edi,edx,0x962addb8
  41f992:	sub    DWORD PTR [esi],esi
  41f994:	sti    
  41f995:	lods   eax,DWORD PTR ds:[esi]
  41f996:	pop    edi
  41f997:	(bad)  [esi+0x39e909a5]
  41f99d:	xor    eax,0x27de800d
  41f9a2:	retf   0xbc6f
  41f9a5:	js     0x41fa08
  41f9a7:	stos   BYTE PTR es:[edi],al
  41f9a8:	push   ecx
  41f9a9:	mov    ds:0xbc12c975,eax
  41f9ae:	test   eax,0x5946ce3b
  41f9b3:	jmp    0xa2d9d8e6
  41f9b8:	mov    ah,0xd2
  41f9ba:	sbb    edi,DWORD PTR [ebp+0x21]
  41f9bd:	aad    0x64
  41f9bf:	mov    eax,ds:0xa6fef59d
  41f9c4:	xchg   DWORD PTR [ebx+edi*1],edi
  41f9c7:	es popa 
  41f9c9:	push   eax
  41f9ca:	and    eax,0x1e000007
  41f9cf:	pushf  
  41f9d0:	cmp    eax,0xc9e5d864
  41f9d5:	and    BYTE PTR [ecx-0x34],dh
  41f9d8:	sub    eax,0x949acdb2
  41f9dd:	cwde   
  41f9de:	mov    ecx,0xf2abf45c
  41f9e3:	jne    0x41fa0e
  41f9e5:	out    dx,al
  41f9e6:	sbb    ah,bh
  41f9e8:	dec    ebx
  41f9e9:	fs sub eax,0x6f05fb39
  41f9ef:	es pushf 
  41f9f1:	push   0xffffffbb
  41f9f3:	inc    edx
  41f9f4:	fiadd  WORD PTR [ecx+0x4f]
  41f9f7:	or     eax,0x1c6d9bae
  41f9fc:	pop    ecx
  41f9fd:	jge    0x41fa41
  41f9ff:	hlt    
  41fa00:	(bad)  
  41fa01:	stc    
  41fa02:	call   0x375d:0x2bdf47f3
  41fa09:	sbb    eax,0x596597cd
  41fa0e:	int3   
  41fa0f:	repnz outs dx,DWORD PTR ds:[esi]
  41fa11:	and    edi,DWORD PTR [ecx+0x4d678afb]
  41fa17:	test   DWORD PTR [eax+0x33],ebp
  41fa1a:	xor    eax,0x97c9d201
  41fa1f:	sbb    eax,DWORD PTR [edi-0x34a0b132]
  41fa25:	test   eax,0x619925cb
  41fa2a:	jns    0x41fa5b
  41fa2c:	add    DWORD PTR [edx+edx*2+0x71e906b],ecx
  41fa33:	cwde   
  41fa34:	aaa    
  41fa35:	jns    0x41fa4e
  41fa37:	mov    edx,0xf3ca422b
  41fa3c:	adc    DWORD PTR [ebp+edi*4+0x61],edi
  41fa40:	or     DWORD PTR [edi],eax
  41fa42:	adc    ecx,DWORD PTR [ebx]
  41fa44:	jmp    0x2e79f2c2
  41fa49:	js     0x41fa72
  41fa4b:	(bad)  
  41fa4c:	xchg   ebp,eax
  41fa4d:	lock sahf 
  41fa4f:	add    edx,DWORD PTR [ebp-0x4fc8c5cd]
  41fa55:	(bad)  
  41fa56:	mov    ebp,0xe7a245e8
  41fa5b:	fcmovnu st,st(3)
  41fa5d:	dec    edx
  41fa5e:	sub    eax,0x368687ee
  41fa63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa64:	stc    
  41fa65:	or     DWORD PTR [edx-0x2b],0x275d092e
  41fa6c:	jbe    0x41fa46
  41fa6e:	(bad)  
  41fa6f:	loope  0x41fa83
  41fa71:	sbb    eax,0xb848f049
  41fa76:	pop    ds
  41fa77:	stos   BYTE PTR es:[edi],al
  41fa78:	aad    0x44
  41fa7a:	mov    ah,0x7
  41fa7c:	repnz cmc 
  41fa7e:	or     ecx,eax
  41fa80:	ror    BYTE PTR [esi*1-0x63c26d4d],0xff
  41fa88:	and    eax,0x8d427f0b
  41fa8d:	sub    dh,0x1
  41fa90:	ret    0x9bed
  41fa93:	cmp    DWORD PTR [eax+0x42],esi
  41fa96:	imul   ebp,DWORD PTR [esi+0x3a],0x7c920baa
  41fa9d:	outs   dx,BYTE PTR ds:[esi]
  41fa9e:	hlt    
  41fa9f:	scas   al,BYTE PTR es:[edi]
  41faa0:	rol    bl,0x0
  41faa3:	fimul  DWORD PTR [esi+ecx*2+0x28]
  41faa7:	mov    ds,WORD PTR [edi+esi*2+0x1d]
  41faab:	(bad)  
  41faad:	pop    eax
  41faae:	mov    eax,0x76b1250d
  41fab3:	fdivrp st(0),st
  41fab5:	inc    ecx
  41fab6:	fwait
  41fab7:	data16 ds int 0xb0
  41fabb:	int    0x69
  41fabd:	mov    ah,al
  41fabf:	(bad)  
  41fac0:	sub    al,0x77
  41fac2:	mov    dh,0x3a
  41fac4:	out    dx,al
  41fac5:	sbb    ebx,DWORD PTR [eax]
  41fac7:	add    al,0x2f
  41fac9:	push   ds
  41faca:	dec    ebx
  41facb:	or     BYTE PTR [edi+0x6d],bh
  41face:	xlat   BYTE PTR ds:[ebx]
  41facf:	xchg   ebp,eax
  41fad0:	add    ecx,edx
  41fad2:	(bad)  
  41fad3:	mov    bh,0x5b
  41fad5:	mov    ds:0x14d4d734,al
  41fada:	push   ds
  41fadb:	mov    dl,0x5b
  41fadd:	shr    bh,cl
  41fadf:	sub    BYTE PTR [ecx+0x2b4fcb6a],dl
  41fae5:	mov    dl,0xe0
  41fae7:	inc    edi
  41fae8:	das    
  41fae9:	arpl   WORD PTR [edi-0x40],ax
  41faec:	cmp    DWORD PTR [edi-0x7f],edx
  41faef:	push   cs
  41faf0:	mov    ah,0x83
  41faf2:	push   ecx
  41faf3:	jo     0x41fb31
  41faf5:	xor    edx,ecx
  41faf7:	mov    edx,0x3dca5bd6
  41fafc:	imul   ecx,DWORD PTR [ecx+0x71],0x26
  41fb00:	and    BYTE PTR [edi-0x76932c70],dh
  41fb06:	push   cs
  41fb07:	adc    al,BYTE PTR gs:[edi+ebp*8]
  41fb0b:	div    DWORD PTR [edi-0x40b76e3]
  41fb11:	sub    ebx,DWORD PTR [edi-0x69f6ffc3]
  41fb17:	sub    eax,0xe884acc
  41fb1c:	sbb    ebp,DWORD PTR [ebp-0x2b]
  41fb1f:	and    eax,0x23f44af9
  41fb24:	je     0x41fb1d
  41fb26:	ins    BYTE PTR es:[edi],dx
  41fb27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb28:	add    DWORD PTR [esp+edx*4-0x4f],edi
  41fb2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb2d:	mov    esi,eax
  41fb2f:	adc    al,0x8d
  41fb31:	std    
  41fb32:	jnp    0x41fb44
  41fb34:	mov    esp,0x492ff0cb
  41fb39:	and    eax,0xddddaefd
  41fb3e:	dec    edi
  41fb3f:	xor    BYTE PTR [ebx],dl
  41fb41:	mov    bh,0xd9
  41fb43:	js     0x41fbbc
  41fb45:	jae    0x41fb31
  41fb47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb48:	lods   al,BYTE PTR ds:[esi]
  41fb49:	xchg   edi,eax
  41fb4a:	sub    BYTE PTR [ebx-0x77e9d945],al
  41fb50:	ret    0x6c3f
  41fb53:	ret    
  41fb54:	xchg   ebx,eax
  41fb55:	fist   WORD PTR [esi-0x37922321]
  41fb5b:	and    bh,al
  41fb5d:	js     0x41fb55
  41fb5f:	sub    DWORD PTR [ebp-0x12],0x4c
  41fb63:	adc    DWORD PTR [edx],esi
  41fb65:	das    
  41fb66:	cmp    ch,cl
  41fb68:	sbb    al,0xee
  41fb6a:	icebp  
  41fb6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb6c:	jmp    0x41fb16
  41fb6e:	clc    
  41fb6f:	arpl   WORD PTR [edx*8-0x46b9068f],bp
  41fb76:	dec    esi
  41fb77:	mov    ds:0x22b3b4f8,eax
  41fb7c:	adc    ecx,DWORD PTR [ebx]
  41fb7e:	mov    ch,0xf
  41fb80:	xchg   ebp,eax
  41fb81:	int    0x68
  41fb83:	mov    edi,0x20081474
  41fb88:	lea    edx,[ebx]
  41fb8a:	cdq    
  41fb8b:	sub    eax,0xc62e417d
  41fb90:	pop    edi
  41fb91:	out    dx,eax
  41fb92:	jns    0x41fbdd
  41fb94:	mov    eax,eax
  41fb96:	xchg   ebp,eax
  41fb97:	mov    bl,ch
  41fb99:	dec    edx
  41fb9a:	jmp    0x91d3:0xf7765135
  41fba1:	and    al,0x23
  41fba3:	add    al,0xd4
  41fba5:	adc    al,dl
  41fba7:	retf   
  41fba8:	fstp   TBYTE PTR [edx-0x80]
  41fbab:	mov    ebx,esi
  41fbad:	mov    esi,0xe8a648c8
  41fbb2:	pop    edx
  41fbb3:	jmp    0x73b9:0x53072dfa
  41fbba:	inc    eax
  41fbbb:	dec    ebx
  41fbbc:	mov    ds:0x28fb27fa,al
  41fbc1:	ins    BYTE PTR es:[edi],dx
  41fbc2:	addr16 add bh,ah
  41fbc5:	(bad)  
  41fbc6:	dec    esp
  41fbc7:	punpckhdq mm3,QWORD PTR [eax+esi*1]
  41fbcb:	je     0x41fc3b
  41fbcd:	int3   
  41fbce:	push   esp
  41fbcf:	pop    esi
  41fbd0:	or     dl,BYTE PTR [edx-0x1257ba88]
  41fbd6:	in     eax,0x42
  41fbd8:	fidivr WORD PTR ds:0xdfa50bcc
  41fbde:	adc    BYTE PTR [si-0x4f50],0xcf
  41fbe4:	pusha  
  41fbe5:	mov    dl,0x8
  41fbe7:	add    al,0x9
  41fbe9:	leave  
  41fbea:	int3   
  41fbeb:	mov    eax,0x99e1a101
  41fbf0:	cmp    eax,DWORD PTR [esi-0x4616d0ea]
  41fbf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbf7:	enter  0x2dc4,0x94
  41fbfb:	fsubr  DWORD PTR [esi+0x72e2661e]
  41fc01:	in     al,dx
  41fc02:	data16 into 
  41fc04:	mov    dh,0xc4
  41fc06:	(bad)  
  41fc07:	iret   
  41fc08:	std    
  41fc09:	loope  0x41fc37
  41fc0b:	mov    dl,0x2e
  41fc0d:	sub    BYTE PTR [edx+0x45],dh
  41fc10:	shl    BYTE PTR [ebp-0x5],1
  41fc13:	adc    BYTE PTR [edx-0x32],0x40
  41fc17:	and    ah,dh
  41fc19:	and    eax,0xad846921
  41fc1e:	xlat   BYTE PTR ds:[ebx]
  41fc1f:	daa    
  41fc20:	adc    al,0xf2
  41fc22:	leave  
  41fc23:	jp     0x41fc48
  41fc25:	daa    
  41fc26:	ins    BYTE PTR es:[edi],dx
  41fc27:	xor    ebp,DWORD PTR [esi-0x80]
  41fc2a:	lods   eax,DWORD PTR ds:[esi]
  41fc2b:	iret   
  41fc2c:	xchg   edi,eax
  41fc2d:	xor    ecx,DWORD PTR [ebp+0x15]
  41fc30:	mov    ah,0xb3
  41fc32:	(bad)  
  41fc33:	sub    eax,0xdb355c8d
  41fc38:	out    0xde,al
  41fc3a:	ins    DWORD PTR es:[edi],dx
  41fc3b:	leave  
  41fc3c:	(bad)  
  41fc3d:	stc    
  41fc3e:	push   esp
  41fc3f:	cmp    BYTE PTR [ebp+0x32],dh
  41fc42:	fidivr DWORD PTR [esi-0x7e3fec11]
  41fc48:	sti    
  41fc49:	ret    
  41fc4a:	or     esp,DWORD PTR [ebx+0x4e70a8d7]
  41fc50:	fisub  WORD PTR [ebx]
  41fc52:	cs in  al,dx
  41fc54:	test   DWORD PTR [edi-0x1d],esi
  41fc57:	dec    eax
  41fc58:	add    esp,ebx
  41fc5a:	mov    BYTE PTR [edi+0x5f],al
  41fc5d:	sub    al,0xf9
  41fc5f:	push   ecx
  41fc60:	xchg   dl,ah
  41fc62:	xchg   edx,eax
  41fc63:	fistp  DWORD PTR [esi-0x505a053]
  41fc69:	cdq    
  41fc6a:	xchg   ebp,eax
  41fc6b:	pop    eax
  41fc6c:	xor    BYTE PTR [ebx+0x4b7d189b],al
  41fc72:	shr    eax,0x60
  41fc75:	call   0x3ac:0xd54e605
  41fc7c:	or     al,ah
  41fc7e:	aad    0xf5
  41fc80:	in     eax,dx
  41fc81:	dec    esi
  41fc82:	sbb    DWORD PTR [esi],edx
  41fc84:	seta   dh
  41fc87:	cld    
  41fc88:	call   0xc69dd035
  41fc8d:	xchg   ebx,eax
  41fc8e:	cdq    
  41fc8f:	mov    cl,BYTE PTR [eax-0xc]
  41fc92:	inc    ebp
  41fc93:	xor    al,0x5a
  41fc95:	(bad)  
  41fc96:	fldenv ds:0xce9a5937
  41fc9c:	cdq    
  41fc9d:	stos   BYTE PTR es:[edi],al
  41fc9e:	ret    
  41fc9f:	jge    0x41fc5c
  41fca1:	test   cl,bh
  41fca3:	sbb    esp,DWORD PTR [ebx]
  41fca5:	shl    dl,0xc2
  41fca8:	stos   BYTE PTR es:[edi],al
  41fca9:	xor    al,BYTE PTR [ebx+0x7113f7e7]
  41fcaf:	aad    0x17
  41fcb1:	dec    ecx
  41fcb2:	lods   eax,DWORD PTR ds:[esi]
  41fcb3:	stos   BYTE PTR es:[edi],al
  41fcb4:	jmp    0x41fcdf
  41fcb6:	call   0xd84f90fe
  41fcbb:	push   ss
  41fcbc:	mov    bh,BYTE PTR [ecx+eiz*1-0x7b5bef5]
  41fcc3:	jne    0x41fd2d
  41fcc5:	nop
  41fcc6:	push   cs
  41fcc7:	mov    eax,ds:0xc4dc56ed
  41fccc:	(bad)
  41fccf:	js     0x41fd24
  41fcd1:	push   ss
  41fcd2:	inc    edx
  41fcd3:	in     eax,0x3c
  41fcd5:	and    ebp,DWORD PTR [esi+0x23626de7]
  41fcdb:	lahf   
  41fcdc:	mov    esp,ebp
  41fcde:	xchg   ecx,eax
  41fcdf:	push   esp
  41fce0:	mov    ebx,0x310623ec
  41fce5:	(bad)  
  41fce6:	xor    ebp,esp
  41fce8:	jmp    0x4ce7:0x35bba4c1
  41fcef:	call   0xeede:0xa637c1c8
  41fcf6:	(bad)  
  41fcf7:	lock cs sbb esi,edi
  41fcfb:	cmp    al,0xce
  41fcfd:	mov    ds:0xdbb38e50,eax
  41fd02:	addr16 xchg ebp,eax
  41fd04:	push   ebx
  41fd05:	inc    ebx
  41fd07:	mov    al,0x9f
  41fd09:	and    ch,0x10
  41fd0c:	jge    0x41fd0a
  41fd0e:	push   ebx
  41fd0f:	jmp    0xf48831e1
  41fd14:	fld    QWORD PTR [eax+esi*8]
  41fd17:	or     al,0xcc
  41fd19:	ret    
  41fd1a:	adc    al,0x5d
  41fd1c:	pop    es
  41fd1d:	(bad)  
  41fd1e:	loopne 0x41fd10
  41fd20:	jl     0x41fceb
  41fd22:	inc    eax
  41fd23:	sbb    eax,0x7a51241f
  41fd28:	dec    esi
  41fd29:	fiadd  WORD PTR ds:0x9f8edea1
  41fd2f:	outs   dx,BYTE PTR ds:[esi]
  41fd30:	push   DWORD PTR [edx-0xc]
  41fd33:	xchg   esi,eax
  41fd34:	xchg   edi,ebx
  41fd36:	mov    al,0x9
  41fd38:	out    dx,al
  41fd39:	cmp    al,0x93
  41fd3b:	int3   
  41fd3c:	mov    edi,esp
  41fd3e:	aaa    
  41fd3f:	stc    
  41fd40:	aas    
  41fd41:	xor    BYTE PTR [esp+ecx*2],bh
  41fd44:	out    0x35,al
  41fd46:	in     eax,0x50
  41fd48:	ins    BYTE PTR es:[edi],dx
  41fd49:	and    DWORD PTR gs:[eax-0x60],ecx
  41fd4d:	mov    DWORD PTR [edx+0x7d958dc1],ebx
  41fd53:	popf   
  41fd54:	cmp    al,bh
  41fd56:	mov    ds,WORD PTR [edi+0x263b5444]
  41fd5c:	fwait
  41fd5d:	in     al,0xba
  41fd5f:	jo     0x41fcff
  41fd61:	lods   eax,DWORD PTR ds:[esi]
  41fd62:	fxch   st(1)
  41fd64:	div    edi
  41fd66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd67:	daa    
  41fd68:	jns    0x41fd22
  41fd6a:	xor    esp,DWORD PTR [ecx-0x3c]
  41fd6d:	mov    dh,0xf5
  41fd6f:	popf   
  41fd70:	inc    ecx
  41fd71:	lea    edi,[edx-0x40]
  41fd74:	ret    
  41fd75:	icebp  
  41fd76:	jmp    0x2f704540
  41fd7b:	js     0x41fdaa
  41fd7d:	sub    BYTE PTR [edx-0xc],cl
  41fd80:	xchg   ebp,eax
  41fd81:	cld    
  41fd82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd83:	jmp    0x30a4:0x34c23710
  41fd8a:	ret    
  41fd8b:	mov    esp,0x27530347
  41fd90:	jb     0x41fd5e
  41fd92:	imul   ecx,edx,0xffffffbd
  41fd95:	scas   al,BYTE PTR es:[edi]
  41fd96:	cs and eax,0x672c16a4
  41fd9c:	int    0x90
  41fd9e:	mov    ch,0xde
  41fda0:	shl    cl,0xb2
  41fda3:	loopne 0x41fdc0
  41fda5:	and    bh,bh
  41fda7:	loop   0x41fdce
  41fda9:	pop    ebx
  41fdaa:	xchg   eax,eax
  41fdac:	in     al,0x96
  41fdae:	pop    ecx
  41fdaf:	xchg   ebp,eax
  41fdb0:	xor    DWORD PTR [ecx],ebx
  41fdb2:	imul   edi,DWORD PTR [edx+0x21],0x51
  41fdb6:	sti    
  41fdb7:	shr    BYTE PTR [edx-0x23],cl
  41fdba:	cs je  0x41fdba
  41fdbd:	in     eax,0xe0
  41fdbf:	cmp    DWORD PTR [ebp-0x37],0x7f
  41fdc3:	fld    QWORD PTR [esi-0x5d]
  41fdc6:	pop    ss
  41fdc7:	popf   
  41fdc8:	sub    eax,0xafd78014
  41fdcd:	mov    ds:0x49cc9a9e,al
  41fdd2:	in     al,0x1b
  41fdd4:	cmp    ah,dh
  41fdd6:	in     eax,dx
  41fdd7:	ins    BYTE PTR es:[edi],dx
  41fdd8:	push   ss
  41fdd9:	mov    ch,0x4
  41fddb:	cmp    ah,BYTE PTR [ecx]
  41fddd:	and    al,0xce
  41fddf:	nop
  41fde0:	popf   
  41fde1:	mov    ds:0x22082685,eax
  41fde6:	loop   0x41fe5f
  41fde8:	ins    BYTE PTR es:[edi],dx
  41fde9:	jne    0x41fde2
  41fdeb:	leave  
  41fdec:	push   edx
  41fded:	stc    
  41fdee:	sub    eax,DWORD PTR [edx-0x39572221]
  41fdf4:	cmp    esp,edx
  41fdf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdf7:	push   esi
  41fdf8:	test   eax,0xdffbff96
  41fdfd:	fimul  WORD PTR [edx-0x80]
  41fe00:	xchg   edi,eax
  41fe01:	lock sbb DWORD PTR [ebx-0x237f4a1b],eax
  41fe08:	jb     0x41fe33
  41fe0a:	xchg   ebp,eax
  41fe0b:	test   eax,0x466a5b63
  41fe10:	imul   esp,DWORD PTR [ebx+0x50a5a73f],0xffffff9c
  41fe17:	push   ecx
  41fe18:	xchg   esp,eax
  41fe19:	daa    
  41fe1a:	jmp    0xe5e0:0x53b265a9
  41fe21:	add    DWORD PTR [ecx],esp
  41fe23:	adc    ebx,DWORD PTR [ebp+0x100a7ed6]
  41fe29:	or     DWORD PTR ds:0x463ab133,ebp
  41fe2f:	sbb    al,0x3
  41fe31:	repnz enter 0xbf37,0x5f
  41fe36:	adc    dl,ch
  41fe38:	cmp    DWORD PTR [ebp+0x24a06050],esi
  41fe3e:	out    dx,eax
  41fe3f:	sbb    eax,0xf232dff5
  41fe44:	jbe    0x41fddb
  41fe46:	adc    edi,0x11dd01f2
  41fe4c:	add    eax,0xf0d73297
  41fe51:	leave  
  41fe52:	mov    dh,0x53
  41fe54:	or     ebp,DWORD PTR [ecx-0x371b1ad7]
  41fe5a:	cmp    DWORD PTR [edx-0x3b],eax
  41fe5d:	addr16 dec ecx
  41fe5f:	ret    
  41fe60:	pop    edx
  41fe61:	jns    0x41fed3
  41fe63:	call   0xb8f4:0xd1dab52c
  41fe6a:	sbb    eax,DWORD PTR [edi+0x22]
  41fe6d:	xor    eax,0xd2baebf
  41fe72:	and    eax,0x3714bb0a
  41fe77:	test   eax,0xa908d9e9
  41fe7c:	mov    gs,WORD PTR [eax+edx*1+0x6c]
  41fe80:	hlt    
  41fe81:	mov    ch,0xd0
  41fe83:	pop    edx
  41fe84:	push   edi
  41fe85:	sub    DWORD PTR [edi],eax
  41fe87:	inc    ebp
  41fe88:	pusha  
  41fe89:	inc    ecx
  41fe8a:	arpl   WORD PTR [esi],ax
  41fe8c:	out    dx,al
  41fe8d:	dec    ecx
  41fe8e:	lds    ebx,FWORD PTR [ecx]
  41fe90:	add    al,0x3f
  41fe92:	mov    ah,0xa2
  41fe94:	and    al,BYTE PTR [edx]
  41fe96:	ds enter 0x32da,0x48
  41fe9b:	mov    cl,ch
  41fe9d:	daa    
  41fe9e:	and    BYTE PTR [ebx+eax*1-0x6b],cl
  41fea2:	and    al,0x8a
  41fea4:	mov    dh,0x5d
  41fea6:	iret   
  41fea7:	call   0xfb8d:0xc39c1c5
  41feae:	sbb    al,BYTE PTR [ebp+0x4b35dfd4]
  41feb4:	cmp    BYTE PTR [esi+edi*4+0x5629bfac],dh
  41febb:	cmp    al,0x49
  41febd:	loope  0x41fe78
  41febf:	inc    eax
  41fec0:	stos   BYTE PTR es:[edi],al
  41fec1:	and    dh,BYTE PTR [edx-0x97ba111]
  41fec7:	cdq    
  41fec8:	lods   eax,DWORD PTR ds:[esi]
  41fec9:	imul   edi,DWORD PTR [esi],0x314c8140
  41fecf:	aaa    
  41fed0:	test   DWORD PTR ds:0x120f38b9,eax
  41fed6:	ror    dl,0x5d
  41fed9:	fs jne 0x41fe64
  41fedc:	dec    esi
  41fedd:	xchg   ebp,eax
  41fede:	dec    edi
  41fedf:	pop    ebx
  41fee0:	(bad)  
  41fee1:	repz clc 
  41fee3:	jecxz  0x41ff32
  41fee5:	mov    esp,0xa030b2bd
  41feea:	inc    edi
  41feeb:	jmp    0xc31:0xaa952760
  41fef2:	adc    al,0x5f
  41fef4:	call   0xe4ec:0xd5b38813
  41fefb:	adc    eax,0xf7ad6e56
  41ff00:	aam    0x77
  41ff02:	cdq    
  41ff03:	add    al,0xe9
  41ff05:	or     ch,BYTE PTR [edi+0x76]
  41ff08:	ret    
  41ff09:	mov    eax,ds:0xa799cacc
  41ff0e:	cs mov ebp,0x487d3c5d
  41ff14:	retf   
  41ff15:	daa    
  41ff16:	out    dx,eax
  41ff17:	scas   al,BYTE PTR es:[edi]
  41ff18:	jbe    0x41ff81
  41ff1a:	adc    DWORD PTR [edi+edi*1],ebp
  41ff1d:	or     al,0xd9
  41ff1f:	pop    edi
  41ff20:	call   0xef8b7b01
  41ff25:	pop    edx
  41ff26:	gs push ds
  41ff28:	mov    WORD PTR [ebx+0x9],es
  41ff2b:	jg     0x41febf
  41ff2d:	addr16 mov ds:0x60c9,eax
  41ff31:	xor    BYTE PTR [esi],ch
  41ff33:	dec    ebx
  41ff34:	add    DWORD PTR [ebp-0x41],0x3db6f2a9
  41ff3b:	fld    TBYTE PTR ds:0xf1c87a4c
  41ff41:	xor    al,0xbf
  41ff43:	retf   0x2ce6
  41ff46:	jae    0x41fee3
  41ff48:	mov    ch,0x34
  41ff4a:	sbb    dh,bh
  41ff4c:	arpl   WORD PTR [ebp-0x46],ax
  41ff4f:	and    al,0xcc
  41ff51:	xchg   ebp,eax
  41ff52:	(bad)  
  41ff54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff55:	in     eax,dx
  41ff56:	push   esi
  41ff57:	and    esi,edx
  41ff59:	mov    ebp,0x71309d5e
  41ff5e:	popf   
  41ff5f:	push   ebp
  41ff60:	iret   
  41ff61:	dec    ebx
  41ff62:	ret    0xf647
  41ff65:	xchg   esi,eax
  41ff66:	sbb    ebx,DWORD PTR [edx-0x457714a4]
  41ff6c:	pop    ebp
  41ff6d:	retw   
  41ff6f:	inc    ebp
  41ff70:	add    BYTE PTR [eax],bh
  41ff72:	outs   dx,DWORD PTR ds:[esi]
  41ff73:	shr    DWORD PTR [edx],cl
  41ff75:	or     DWORD PTR [ebp+0x674f1e58],0x255007fa
  41ff7f:	mov    esp,0x7bbcedce
  41ff84:	sub    eax,0x3afc7608
  41ff89:	int3   
  41ff8a:	mov    dh,0xc1
  41ff8c:	sbb    al,BYTE PTR ds:0x1e3cecda
  41ff92:	call   0xb353:0x77a80a2e
  41ff99:	fdivr  DWORD PTR [esi+esi*1+0x5e51db1]
  41ffa0:	mov    al,0x5e
  41ffa2:	xchg   DWORD PTR [ebx+0x445d99a1],esi
  41ffa8:	mov    ds:0x6a826fd1,al
  41ffad:	test   BYTE PTR [ebp+0x6a],ch
  41ffb0:	or     DWORD PTR [ebx],ecx
  41ffb2:	or     ch,dl
  41ffb4:	pop    ss
  41ffb5:	cmp    ebp,esp
  41ffb7:	in     eax,dx
  41ffb8:	inc    esi
  41ffb9:	xchg   ebx,eax
  41ffba:	das    
  41ffbb:	ds pop esi
  41ffbd:	sbb    ecx,esi
  41ffbf:	jbe    0x42000f
  41ffc1:	loope  0x41ff47
  41ffc3:	out    dx,al
  41ffc4:	outs   dx,DWORD PTR ds:[esi]
  41ffc5:	ins    DWORD PTR es:[edi],dx
  41ffc6:	mov    al,0xe9
  41ffc8:	mov    ch,0xd9
  41ffca:	sbb    eax,0xe9596e72
  41ffcf:	call   0x38577a36
  41ffd4:	lea    ecx,[ebx-0x24]
  41ffd7:	dec    ecx
  41ffd8:	fiadd  WORD PTR [esi-0x1f]
  41ffdb:	stos   BYTE PTR es:[edi],al
  41ffdc:	dec    edx
  41ffdd:	xchg   ecx,eax
  41ffde:	push   esp
  41ffdf:	aas    
  41ffe0:	pop    esp
  41ffe1:	popf   
  41ffe2:	ror    BYTE PTR [eax-0x5],0x48
  41ffe6:	push   ebp
  41ffe7:	cmp    DWORD PTR [edi+0xe954bc1],esp
  41ffed:	mov    cl,0xf3
  41ffef:	ins    DWORD PTR es:[edi],dx
  41fff0:	sub    DWORD PTR ds:0x1550f371,eax
  41fff6:	(bad)  
  41fff7:	es (bad) 
  41fff9:	hlt    
  41fffa:	cmc    
  41fffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fffc:	jle    0x41ff9e
  41fffe:	dec    ecx
  41ffff:	mov    cl,0x97
  420001:	mov    eax,0xd08e0326
  420006:	arpl   WORD PTR [eax],di
  420008:	daa    
  420009:	fidivr DWORD PTR [ebx+0x2]
  42000c:	push   esi
  42000d:	sbb    dh,BYTE PTR [ebx-0x21c32ec6]
  420013:	ret    0x3bc
  420016:	cld    
  420017:	mov    bl,0x25
  420019:	cmp    DWORD PTR [ecx],0x29
  42001c:	dec    edi
  42001d:	dec    edx
  42001e:	mul    BYTE PTR gs:[ebx]
  420021:	mov    DWORD PTR [ebx-0x55],ebp
  420024:	shr    BYTE PTR [ecx-0x6c],cl
  420027:	pop    edi
  420028:	imul   edx,edx,0xffffffb1
  42002b:	(bad)  
  42002c:	or     eax,0x97b7c908
  420031:	(bad)  
  420033:	mov    al,0xb1
  420035:	push   0xffffffb9
  420037:	enter  0xff3d,0x15
  42003b:	int3   
  42003c:	jno    0x420044
  42003e:	imul   esp,esp,0xffffffa7
  420041:	push   ss
  420042:	jne    0x41ffeb
  420044:	add    al,0x76
  420046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420047:	test   ax,0x3090
  42004b:	in     eax,dx
  42004c:	std    
  42004d:	cmp    ecx,ebp
  42004f:	test   eax,0xba2bf29c
  420054:	push   cs
  420055:	jmp    0x420089
  420057:	and    edi,DWORD PTR [eax+0x24]
  42005a:	sbb    eax,0xc281d5ba
  42005f:	je     0x420018
  420061:	xchg   ebx,eax
  420062:	and    eax,0xdf094d94
  420067:	and    DWORD PTR [eax-0x27d9d3b3],eax
  42006d:	call   FWORD PTR [esi+0x6a7c3e31]
  420073:	mov    ?,edx
  420075:	pop    edx
  420076:	fdivrp st(1),st
  420078:	and    al,0xba
  42007a:	jbe    0x41fffe
  42007c:	fwait
  42007d:	or     BYTE PTR [ebx],0x9
  420080:	add    eax,0xfc560b8f
  420085:	mov    WORD PTR [ecx+0x6471c10],cs
  42008b:	xchg   esp,eax
  42008c:	ins    DWORD PTR es:[edi],dx
  42008d:	data16 jno 0x420034
  420090:	pop    ds
  420091:	mov    eax,0xc844e1ef
  420096:	sub    al,dl
  420098:	push   0x4e
  42009a:	and    al,0x2e
  42009c:	mov    ecx,0x86706ada
  4200a1:	mov    bh,bl
  4200a3:	scas   eax,DWORD PTR es:[edi]
  4200a4:	mov    al,0x4f
  4200a6:	sti    
  4200a7:	loop   0x420117
  4200a9:	or     cl,BYTE PTR [eax+0x51]
  4200ac:	sbb    eax,0x94b5dd03
  4200b1:	sbb    ebx,eax
  4200b3:	pop    ecx
  4200b4:	pop    DWORD PTR [ebx+0x6b63ec9e]
  4200ba:	popa   
  4200bb:	fs loope 0x4200b5
  4200be:	cmp    bl,cl
  4200c0:	jecxz  0x420083
  4200c2:	cmp    BYTE PTR [eax-0x58cc31c5],0xe4
  4200c9:	push   es
  4200ca:	loopne 0x4200de
  4200cc:	sar    DWORD PTR ds:0xee0acf9a,0xde
  4200d3:	out    0x91,al
  4200d5:	(bad)  
  4200d6:	into   
  4200d7:	scas   al,BYTE PTR es:[edi]
  4200d8:	sahf   
  4200d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200da:	and    BYTE PTR [edx-0x23],dl
  4200dd:	adc    BYTE PTR [edx+0x4e956e6b],ah
  4200e3:	ja     0x42009f
  4200e5:	daa    
  4200e6:	in     eax,0xb9
  4200e8:	(bad)  
  4200e9:	outs   dx,BYTE PTR ds:[esi]
  4200ea:	imul   ebp,DWORD PTR [ebx+0x1ed9fbf8],0xac4f4414
  4200f4:	cs pop ecx
  4200f6:	xlat   BYTE PTR ds:[ebx]
  4200f7:	sbb    BYTE PTR [edx],dh
  4200f9:	mov    eax,ds:0x5a08a571
  4200fe:	mov    ecx,cs
  420100:	test   eax,0xcb491157
  420105:	es xchg esp,eax
  420107:	in     al,dx
  420108:	mov    DWORD PTR [esi+0x1f9ef9e1],ebp
  42010e:	scas   eax,DWORD PTR es:[edi]
  42010f:	outs   dx,DWORD PTR ds:[esi]
  420110:	and    dl,al
  420112:	lds    ebx,FWORD PTR [esi]
  420114:	and    eax,0xac7d02bd
  420119:	cwde   
  42011a:	rcl    ch,1
  42011c:	and    BYTE PTR [esi],0x8d
  42011f:	adc    edi,ebx
  420121:	mov    ah,0xb1
  420123:	das    
  420124:	scas   eax,DWORD PTR es:[edi]
  420125:	cmp    eax,0x9fdd5cb0
  42012a:	mov    ds:0x4622381f,al
  42012f:	xchg   ecx,eax
  420130:	jns    0x4200e1
  420132:	clc    
  420133:	inc    esp
  420134:	(bad)  
  420135:	aaa    
  420136:	jbe    0x420128
  420138:	sbb    ah,ah
  42013a:	nop
  42013b:	jns    0x4201a1
  42013d:	stos   BYTE PTR es:[edi],al
  42013e:	push   0xe0be554b
  420143:	or     al,al
  420145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420146:	cdq    
  420147:	cmc    
  420148:	and    bl,bh
  42014a:	loopne 0x420129
  42014c:	mov    esi,DWORD PTR [ebx-0x24]
  42014f:	std    
  420150:	arpl   WORD PTR [ebp-0x3c],bp
  420153:	arpl   WORD PTR [eax+0x61],di
  420156:	mov    ebx,edx
  420158:	push   ecx
  420159:	ret    0x192c
  42015c:	fnop   
  42015e:	push   es
  42015f:	pop    edi
  420160:	push   edi
  420161:	xor    ch,dh
  420163:	fld    st(7)
  420165:	add    DWORD PTR [edi],0xe90d9535
  42016b:	aaa    
  42016c:	sub    eax,0x9cf37fb4
  420171:	cmp    BYTE PTR [eax-0x14],cl
  420174:	mov    eax,0xd287e612
  420179:	arpl   di,bp
  42017b:	dec    ebx
  42017c:	pushf  
  42017d:	cmp    eax,0x7000e3a4
  420182:	iret   
  420183:	pop    ecx
  420184:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420185:	jle    0x42011b
  420187:	add    eax,0x251170a5
  42018c:	jle    0x420190
  42018e:	sbb    edi,ebx
  420190:	jl     0x420140
  420192:	cmp    cl,BYTE PTR [esi-0x32248b57]
  420198:	loope  0x4201d0
  42019a:	out    0x74,al
  42019c:	fidiv  DWORD PTR [ebx+0x6a12cc08]
  4201a2:	in     al,dx
  4201a3:	retf   
  4201a4:	inc    eax
  4201a5:	mov    edx,0xae02fb3e
  4201aa:	clc    
  4201ab:	inc    edx
  4201ac:	mov    edi,0x2f9d2732
  4201b1:	jo     0xe4ae282b
  4201b7:	adc    eax,0xb1b94fd1
  4201bc:	in     al,0x85
  4201be:	push   ebx
  4201bf:	test   BYTE PTR [edx-0x13],bh
  4201c2:	lahf   
  4201c3:	int    0x5a
  4201c5:	fsubr  DWORD PTR ds:0x87c139ec
  4201cb:	ds ret 
  4201cd:	adc    bh,BYTE PTR [ecx]
  4201cf:	fsubrp st(5),st
  4201d1:	mov    cl,0xfe
  4201d3:	test   eax,0x48a44090
  4201d8:	xor    eax,0x7b95139c
  4201dd:	test   al,0xc2
  4201df:	mov    eax,esi
  4201e1:	mov    ds:0xb18238fd,al
  4201e6:	lds    esp,FWORD PTR [ecx]
  4201e8:	inc    ebx
  4201e9:	sahf   
  4201ea:	or     ebp,0x13e2d1b7
  4201f0:	leave  
  4201f1:	push   esp
  4201f2:	(bad)  
  4201f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201f5:	loop   0x42025c
  4201f7:	lock (bad) 
  4201f9:	sbb    DWORD PTR [ebp+0x70],esi
  4201fc:	dec    ebp
  4201fd:	mov    ds:0xed63bb64,al
  420202:	(bad)  
  420203:	push   esi
  420204:	mov    ds:0x6cf371b0,ax
  42020a:	fidivr DWORD PTR [edi+edx*1-0x42]
  42020e:	pushf  
  42020f:	mov    ah,BYTE PTR [eax+eiz*4]
  420212:	xor    edi,DWORD PTR [ebx]
  420214:	inc    esi
  420215:	jmp    0xe656:0x42ba2607
  42021c:	xor    eax,0x67f33b9c
  420221:	and    dh,BYTE PTR [edx]
  420223:	pusha  
  420224:	add    ebp,ebx
  420226:	mov    ds:0x7dc60887,eax
  42022b:	shl    ebx,1
  42022d:	jne    0x42023e
  42022f:	shl    DWORD PTR [ecx],cl
  420231:	daa    
  420232:	cs push ebp
  420234:	je     0x420252
  420236:	and    ebp,ecx
  420238:	ins    BYTE PTR es:[edi],dx
  420239:	imul   ch
  42023b:	clc    
  42023c:	mov    esi,0xe792f136
  420241:	dec    ecx
  420242:	pop    edi
  420243:	push   edi
  420244:	jp     0x4201dc
  420246:	arpl   WORD PTR [ebp+edi*1+0x15],ax
  42024a:	shl    DWORD PTR [esi+0x70],0xfe
  42024e:	mov    ah,0x46
  420250:	dec    eax
  420251:	test   DWORD PTR fs:0x7e257e62,edi
  420258:	div    BYTE PTR [ebp+edx*2+0x62123bd3]
  42025f:	jg     0x420234
  420261:	push   eax
  420262:	adc    al,BYTE PTR [esi+0x6c]
  420265:	bound  esp,QWORD PTR [ebx-0x67]
  420268:	aam    0xa0
  42026a:	cwde   
  42026b:	mov    ecx,0xff4b928e
  420270:	test   ecx,0x7f59a875
  420276:	cmc    
  420277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420278:	fbld   TBYTE PTR [eax*2-0x205ff20f]
  42027f:	sar    BYTE PTR [ebp-0x7f],0xf8
  420283:	xor    BYTE PTR [eax],bh
  420285:	sbb    DWORD PTR [ecx-0x7422042a],ecx
  42028b:	pop    es
  42028c:	adc    eax,0xe676d849
  420291:	or     al,0x97
  420293:	jbe    0x42021e
  420295:	and    edi,eax
  420297:	pop    eax
  420298:	or     BYTE PTR [ebx],ch
  42029a:	loop   0x42027b
  42029c:	retf   0x377
  42029f:	mov    bh,0x90
  4202a1:	fdivp  st(7),st
  4202a3:	xor    esp,DWORD PTR [eax+ebx*1-0x2b16a782]
  4202aa:	mov    dl,0xbf
  4202ac:	xcrypt-ecb (bad)
  4202ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ae:	mov    edx,esp
  4202b0:	cmp    DWORD PTR [eax],ecx
  4202b2:	or     eax,0x43aa6714
  4202b7:	and    bl,al
  4202b9:	int3   
  4202ba:	or     DWORD PTR [ebx+0x3587a4f3],0x9
  4202c1:	jbe    0x420302
  4202c3:	xor    eax,0x856356df
  4202c8:	ret    
  4202c9:	dec    esi
  4202ca:	adc    ebx,DWORD PTR ds:[edx-0x17246d3f]
  4202d1:	iret   
  4202d2:	fild   DWORD PTR [ebx-0x6]
  4202d5:	cmp    BYTE PTR [esi],ah
  4202d7:	push   ebx
  4202d8:	sti    
  4202d9:	pop    eax
  4202da:	ss mov esi,0x846008ea
  4202e0:	aaa    
  4202e1:	adc    BYTE PTR ds:0x67a1cefe,dh
  4202e7:	int3   
  4202e8:	sub    BYTE PTR [edi+ebx*8],al
  4202eb:	adc    ecx,DWORD PTR [ebp-0x45883f78]
  4202f1:	arpl   WORD PTR [esi+0xc],bx
  4202f4:	sub    bl,BYTE PTR [ebx]
  4202f6:	sub    BYTE PTR [ebx-0x2acf4b9c],ch
  4202fc:	div    BYTE PTR [ecx]
  4202fe:	(bad)  
  4202ff:	cmc    
  420300:	adc    esi,ebp
  420302:	push   ss
  420303:	aam    0xb1
  420305:	inc    ebp
  420306:	and    edi,DWORD PTR ds:0xc12eea7a
  42030c:	scas   al,BYTE PTR es:[edi]
  42030d:	mov    eax,0x2d84b7a3
  420312:	or     ebp,DWORD PTR [edi+0x6d37ac1b]
  420318:	aaa    
  420319:	mov    BYTE PTR [ebx+0x5],0x42
  42031d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42031e:	fucomi st,st(0)
  420320:	sub    edx,DWORD PTR cs:[ebx]
  420323:	outs   dx,BYTE PTR ds:[esi]
  420324:	xchg   esp,eax
  420325:	sub    BYTE PTR [esi+0x1b288e3d],ah
  42032b:	repz lds edi,FWORD PTR [edi]
  42032e:	test   DWORD PTR [edi-0xc85a9d6],0x17e43c89
  420338:	idiv   BYTE PTR [eax-0x1aea42d5]
  42033e:	shr    DWORD PTR [ebx],cl
  420340:	sub    al,0xf5
  420342:	cmc    
  420343:	xchg   DWORD PTR [esi+0x1404569d],eax
  420349:	int3   
  42034a:	cmp    dl,BYTE PTR [ebx]
  42034c:	or     eax,0xe0793fcb
  420351:	mov    al,ds:0xa79cf541
  420356:	xchg   edx,eax
  420357:	int    0x48
  420359:	repz mov ah,cl
  42035c:	out    dx,al
  42035d:	pop    ss
  42035e:	adc    DWORD PTR [edx-0x6d],eax
  420361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420362:	cmp    eax,DWORD PTR [edx+0x7feabc66]
  420368:	dec    ecx
  420369:	inc    ebx
  42036a:	aas    
  42036b:	adc    eax,0x63d9e62f
  420370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420371:	xchg   BYTE PTR [esi+0x676f0748],ah
  420377:	dec    edi
  420378:	(bad)  
  420379:	pop    ebx
  42037a:	xor    esi,esp
  42037c:	scas   eax,DWORD PTR es:[edi]
  42037d:	mov    eax,ds:0xe06f7756
  420382:	or     al,0x52
  420384:	dec    esi
  420385:	out    dx,eax
  420386:	(bad)  
  420387:	out    0xa0,eax
  420389:	cmp    al,0x5d
  42038b:	adc    BYTE PTR [eax-0x61],dh
  42038e:	(bad)  
  420390:	test   esp,ebx
  420392:	sub    esp,ebx
  420394:	jg     0x420389
  420396:	out    dx,al
  420397:	or     ah,cl
  420399:	stos   DWORD PTR es:[edi],eax
  42039a:	add    BYTE PTR [esi],0xd7
  42039d:	sbb    edx,ebx
  42039f:	xchg   edi,eax
  4203a0:	cmp    eax,0xdc7d20d4
  4203a5:	stc    
  4203a6:	inc    esp
  4203a7:	push   esi
  4203a8:	jmp    0x4203ba
  4203aa:	inc    ebx
  4203ab:	xor    al,0x6e
  4203ad:	lea    ecx,[esi+0x14833983]
  4203b3:	mov    eax,ds:0xca6a382b
  4203b8:	loopne 0x42038b
  4203ba:	test   DWORD PTR [edx],edi
  4203bc:	je     0x420365
  4203be:	in     al,0x40
  4203c0:	mov    esi,0x2aa78b56
  4203c5:	add    eax,DWORD PTR [edi-0x2fb5a5a3]
  4203cb:	out    0xee,al
  4203cd:	out    0x45,eax
  4203cf:	ror    BYTE PTR [edx-0x5b8157b3],1
  4203d5:	pusha  
  4203d6:	and    ah,BYTE PTR [ecx+edi*8]
  4203d9:	cmp    al,BYTE PTR [eax]
  4203db:	adc    ebx,ebx
  4203dd:	mov    dl,0x98
  4203df:	loop   0x420375
  4203e1:	in     eax,0x9e
  4203e3:	mov    WORD PTR [edx-0x5e],gs
  4203e6:	jmp    0x420416
  4203e8:	xor    BYTE PTR ds:0x6ac5e122,bh
  4203ee:	xor    DWORD PTR [eax+0x2a],eax
  4203f1:	xchg   ebp,eax
  4203f2:	dec    ebx
  4203f3:	(bad)
  4203f6:	push   eax
  4203f7:	rcl    BYTE PTR [edx-0x1b],1
  4203fa:	mov    al,0x68
  4203fc:	mov    ecx,0xa50837ec
  420401:	mov    bh,0x3b
  420403:	push   edx
  420404:	sbb    ch,dh
  420406:	inc    ax
  420408:	dec    ebx
  420409:	out    dx,eax
  42040a:	in     al,0xa9
  42040c:	retf   0xa405
  42040f:	leave  
  420410:	jl     0x4203e4
  420412:	adc    eax,0xbbb85ddd
  420417:	pusha  
  420418:	or     bl,BYTE PTR [esi+0x37]
  42041b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42041c:	sub    eax,0xd44d1337
  420421:	inc    eax
  420422:	dec    ebp
  420423:	leave  
  420424:	mov    esp,0x14909025
  420429:	sub    DWORD PTR [edi+0x11],esp
  42042c:	mov    esp,0xbc5b374d
  420431:	mov    BYTE PTR [ebx],cl
  420433:	cld    
  420434:	aad    0xfb
  420436:	(bad)  [edx-0x49]
  420439:	aad    0xd6
  42043b:	inc    edx
  42043c:	sbb    al,0x35
  42043e:	pop    esp
  42043f:	rol    BYTE PTR [ecx-0x66d21d4],0x44
  420446:	or     al,0x4e
  420448:	ret    
  420449:	out    0x18,al
  42044b:	jns    0x42047d
  42044d:	and    BYTE PTR ds:0xe88346b2,0xcb
  420454:	ret    
  420455:	cmp    ecx,DWORD PTR [ebp-0x73dd3089]
  42045b:	dec    ebp
  42045c:	shl    DWORD PTR [edx-0x14096c17],0xc
  420463:	stos   DWORD PTR es:[edi],eax
  420464:	pop    esi
  420465:	cmp    al,0x44
  420467:	cmp    BYTE PTR [ecx],dl
  420469:	sub    DWORD PTR [edi],esp
  42046b:	adc    BYTE PTR [edi-0x12b53313],ah
  420471:	mov    ebx,0xdf48b202
  420476:	jmp    0x420460
  420478:	mov    ebx,0x738b5df2
  42047d:	sub    ax,0x7360
  420481:	or     BYTE PTR [ecx+0x39],ah
  420484:	xor    BYTE PTR [edi+0x1a],al
  420487:	push   ss
  420488:	or     DWORD PTR [eax-0x26],0x5e
  42048c:	cmp    DWORD PTR [ecx-0x29473c05],esi
  420492:	xchg   esi,eax
  420493:	fst    QWORD PTR [ebx-0x1ca4e64b]
  420499:	lods   eax,DWORD PTR ds:[esi]
  42049a:	xor    al,0xe
  42049c:	test   eax,0x2e5199a5
  4204a1:	adc    al,0x60
  4204a3:	push   ss
  4204a4:	mov    ds:0x679d512e,al
  4204a9:	or     DWORD PTR [edx-0x36],ebx
  4204ac:	inc    ebx
  4204ad:	sub    edi,DWORD PTR [edx]
  4204af:	loope  0x4204d6
  4204b1:	fxch   st(4)
  4204b3:	pop    es
  4204b4:	push   ds
  4204b5:	in     al,0x3
  4204b7:	rcl    DWORD PTR [eax],cl
  4204b9:	lods   eax,DWORD PTR ds:[esi]
  4204ba:	in     eax,0x6
  4204bc:	lock fmul DWORD PTR [edx-0x5643fa13]
  4204c3:	and    eax,0xc34745dd
  4204c8:	call   0xf63a:0x40641de9
  4204cf:	retf   0x74be
  4204d2:	jne    0x42045f
  4204d4:	add    BYTE PTR [edx-0x65],0x83
  4204d8:	(bad)  
  4204da:	push   es
  4204db:	out    dx,al
  4204dc:	mov    ds:0x65ab509,eax
  4204e1:	adc    al,0x5f
  4204e3:	inc    esi
  4204e4:	mov    ch,0x7
  4204e6:	gs loopne 0x420488
  4204e9:	rol    BYTE PTR [esi],0x64
  4204ec:	sti    
  4204ed:	mov    ds:0x23b210a6,al
  4204f2:	add    cl,ah
  4204f4:	jb     0x42047a
  4204f6:	imul   eax,DWORD PTR [eax-0x46],0x4a
  4204fa:	or     al,0xb0
  4204fc:	imul   edx,DWORD PTR [esi],0x9a4fd375
  420502:	or     DWORD PTR [edx],ebp
  420504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420505:	fidiv  DWORD PTR [edi+edx*2-0x37a39462]
  42050c:	fwait
  42050d:	pop    eax
  42050e:	xchg   ebp,eax
  42050f:	out    dx,al
  420510:	loop   0x420560
  420512:	into   
  420513:	loop   0x4204cc
  420515:	xor    al,0xb0
  420517:	push   0x9c287ad
  42051c:	(bad)  
  42051d:	jmp    0x4597131b
  420522:	shr    BYTE PTR [ebx-0x1ef1e3a3],1
  420528:	icebp  
  420529:	add    ah,BYTE PTR [ebx+0x5a422eaa]
  42052f:	sbb    eax,0x87ac8dcc
  420534:	cmp    al,0xe2
  420536:	clc    
  420537:	add    eax,0x2d23e3d6
  42053c:	adc    al,0xe6
  42053e:	in     al,0xae
  420540:	cmp    ecx,DWORD PTR [esi+0x33bed414]
  420546:	std    
  420547:	dec    ecx
  420548:	rol    DWORD PTR [esi],cl
  42054a:	jmp    0x281e:0x1dcf3cc2
  420551:	ja     0x4205d2
  420553:	add    al,0x7c
  420555:	push   esp
  420556:	sub    edi,DWORD PTR [ecx+0x737ba4fd]
  42055c:	sbb    DWORD PTR [ebx+0xc458444],esp
  420562:	xchg   ebx,eax
  420563:	inc    eax
  420564:	mov    edx,0x2a432444
  420569:	stc    
  42056a:	mov    dl,0x1c
  42056c:	mov    bh,0x47
  42056e:	push   ebp
  42056f:	loop   0x420508
  420571:	jmp    0xd9cb0459
  420576:	jp     0x4205c2
  420578:	out    0x81,al
  42057a:	add    al,0x5
  42057d:	leave  
  42057e:	iret   
  42057f:	dec    ebp
  420580:	adc    al,BYTE PTR [ebx]
  420582:	jle    0x42057a
  420584:	push   cs
  420585:	pop    ds
  420586:	xchg   esp,eax
  420587:	sbb    eax,DWORD PTR [ebp+eiz*4-0x62d402e4]
  42058e:	pop    esi
  42058f:	or     BYTE PTR [ecx-0x4a],ch
  420592:	ja     0x4205d7
  420594:	lahf   
  420595:	test   esp,0x2e954b00
  42059b:	mov    esp,DWORD PTR [edx]
  42059d:	int    0xed
  42059f:	xchg   edi,eax
  4205a0:	fnstcw WORD PTR [edi]
  4205a2:	and    ax,0x87c
  4205a6:	inc    esi
  4205a7:	sahf   
  4205a8:	js     0x42057c
  4205aa:	inc    eax
  4205ab:	pusha  
  4205ac:	pop    esi
  4205ad:	ss inc eax
  4205af:	mov    al,0x3a
  4205b1:	gs jge 0x4205b4
  4205b4:	add    esp,0xf866236d
  4205ba:	ss jp  0x42057c
  4205bd:	arpl   WORD PTR [edx],si
  4205bf:	xchg   BYTE PTR [edx-0x36],cl
  4205c2:	add    BYTE PTR [edi+0xa],dl
  4205c5:	sub    edi,DWORD PTR [esi]
  4205c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205c8:	jno    0x4205f6
  4205ca:	leave  
  4205cb:	sti    
  4205cc:	bound  ecx,QWORD PTR [eax+ebx*8]
  4205cf:	mov    cl,0x24
  4205d1:	stc    
  4205d2:	adc    eax,0xd00a35f4
  4205d7:	or     cl,BYTE PTR [ecx-0xb]
  4205da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205db:	pop    eax
  4205dc:	or     ecx,DWORD PTR [esi-0x91eff5c]
  4205e2:	add    al,0xc2
  4205e4:	pop    esp
  4205e5:	sub    dl,ah
  4205e7:	inc    esp
  4205e8:	fcom   QWORD PTR [eax-0x53]
  4205eb:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205ed:	add    DWORD PTR [edx],edi
  4205ef:	lea    esi,[esp+eax*1]
  4205f2:	addr16 repz cdq 
  4205f5:	cdq    
  4205f6:	adc    BYTE PTR [edi-0x7f870425],al
  4205fc:	push   0x2618b83a
  420601:	lea    esp,[ebx+0x22ec237e]
  420607:	das    
  420608:	mov    ebx,DWORD PTR [edi-0x38]
  42060b:	(bad)  
  42060c:	jg     0x420673
  42060e:	adc    al,BYTE PTR ds:0x4e367c16
  420614:	lods   al,BYTE PTR ds:[esi]
  420615:	or     DWORD PTR [eax],0x9
  420618:	sbb    cl,BYTE PTR ds:0x816d23d1
  42061e:	jmp    0x66a8:0xda6d9ca
  420625:	xchg   esi,eax
  420626:	mov    eax,0x891f9798
  42062b:	mov    esp,0xf7b7e998
  420630:	cli    
  420631:	cmp    eax,DWORD PTR [esi-0x7f]
  420634:	jmp    0x4205f2
  420636:	aaa    
  420637:	mov    bh,0x4d
  420639:	mov    ecx,0x86fb5bff
  42063e:	in     al,dx
  42063f:	ror    DWORD PTR cs:[ebp+edi*2-0x46],0x28
  420645:	jl     0x420675
  420647:	jge    0x42060d
  420649:	mov    eax,0x366ea0cc
  42064e:	push   ecx
  42064f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420650:	gs aaa 
  420652:	mov    BYTE PTR [ebp-0x65f32efd],bl
  420658:	inc    ebx
  420659:	mov    ah,0x7b
  42065b:	xor    eax,DWORD PTR [edx+edi*4]
  42065e:	mov    bh,0xb5
  420660:	data16 mov bh,0xab
  420663:	lods   eax,DWORD PTR ds:[esi]
  420664:	or     eax,0xbf4c199b
  42066a:	pop    ebx
  42066b:	or     BYTE PTR [ebp+0x4106a4b],bh
  420671:	ins    DWORD PTR es:[edi],dx
  420672:	aaa    
  420673:	jle    0x4206f3
  420675:	mov    ds:0xc61d996b,al
  42067a:	data16 jecxz 0x42066b
  42067d:	xor    DWORD PTR [eax-0x4e],ecx
  420680:	aaa    
  420681:	push   edi
  420682:	test   al,0xa0
  420684:	xchg   esp,eax
  420685:	out    0x70,eax
  420687:	mov    ebp,0xb9551c4a
  42068c:	ins    BYTE PTR es:[edi],dx
  42068d:	jae    0x420658
  42068f:	sbb    eax,0xeb3d4fd7
  420694:	dec    ebp
  420695:	int3   
  420696:	xchg   BYTE PTR [edx+ebp*8-0x54979020],ah
  42069d:	adc    al,0x40
  42069f:	or     edx,edx
  4206a1:	add    ah,BYTE PTR [esp+eax*8+0x83ddd60]
  4206a8:	sbb    eax,0x805dfeb6
  4206ad:	les    esi,FWORD PTR [edi+eax*8]
  4206b0:	nop
  4206b1:	test   al,0xef
  4206b3:	aad    0x10
  4206b5:	hlt    
  4206b6:	in     al,dx
  4206b7:	mov    dh,0x8a
  4206b9:	ins    BYTE PTR es:[edi],dx
  4206ba:	jne    0x420698
  4206bc:	ja     0x420700
  4206be:	sahf   
  4206bf:	push   0xffffffaf
  4206c1:	repnz push ebp
  4206c3:	mov    edx,0xbf1b9280
  4206c8:	adc    eax,ebx
  4206ca:	outs   dx,BYTE PTR ds:[esi]
  4206cb:	nop
  4206cc:	jl     0x4206be
  4206ce:	mov    dh,0xec
  4206d0:	in     al,dx
  4206d1:	fidiv  DWORD PTR gs:[edi-0xe]
  4206d5:	jnp    0x42072b
  4206d7:	shl    DWORD PTR [esi],0xaa
  4206da:	or     al,0x98
  4206dc:	fbstp  TBYTE PTR [ebx-0x72]
  4206df:	sbb    BYTE PTR [eax+edi*8],0x32
  4206e3:	dec    edx
  4206e4:	jl     0x4206c1
  4206e6:	into   
  4206e7:	not    cl
  4206e9:	mov    esp,0x6da6d8f
  4206ee:	mov    ecx,0xf0e53834
  4206f3:	mov    ds:0xf9b401a0,eax
  4206f8:	jae    0x420681
  4206fa:	sub    dh,al
  4206fc:	lods   al,BYTE PTR ds:[esi]
  4206fd:	mov    ecx,0xa6ed5b98
  420702:	(bad)  
  420705:	stos   DWORD PTR es:[edi],eax
  420706:	cmc    
  420707:	jg     0x42077b
  420709:	aaa    
  42070a:	cmp    eax,0xbd2980de
  42070f:	or     eax,0xee983e8
  420714:	jge    0x4206ed
  420716:	sbb    eax,ecx
  420718:	(bad)  
  420719:	sahf   
  42071a:	call   0x7e4bd04c
  42071f:	test   esp,esi
  420721:	ins    DWORD PTR es:[edi],dx
  420722:	icebp  
  420723:	scas   eax,DWORD PTR es:[edi]
  420724:	mov    al,0x69
  420726:	push   edx
  420727:	xlat   BYTE PTR ds:[ebx]
  420728:	imul   ebx,edi,0xffffff95
  42072b:	out    0x1e,eax
  42072d:	sahf   
  42072e:	imul   ecx,DWORD PTR [eax],0x62ea4cc0
  420734:	and    esp,0x5f116c90
  42073a:	enter  0xa17b,0x29
  42073e:	daa    
  42073f:	push   ebp
  420740:	pop    es
  420741:	cld    
  420742:	pop    edx
  420743:	test   DWORD PTR [ecx-0x6b],esp
  420746:	add    DWORD PTR [eax],edi
  420748:	aad    0x3a
  42074a:	mov    ch,0x1e
  42074c:	cmp    al,0xb1
  42074e:	or     eax,0xa31ba156
  420753:	test   al,0x2e
  420755:	(bad)  
  420756:	cmp    eax,0x17641806
  42075b:	out    0x25,eax
  42075d:	fst    QWORD PTR [eax-0x4437c819]
  420763:	and    DWORD PTR [eax-0x3],ebx
  420766:	sbb    bh,bl
  420768:	cmc    
  420769:	pop    ds
  42076a:	push   cs
  42076b:	pop    eax
  42076c:	mov    bh,0x50
  42076e:	push   cs
  42076f:	jg     0x42074b
  420771:	jnp    0x4207be
  420773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420774:	jnp    0x420730
  420776:	out    dx,al
  420777:	jbe    0x4207f8
  420779:	push   ds
  42077a:	sbb    BYTE PTR [ecx+0x28b93bb7],bh
  420780:	dec    esi
  420781:	and    eax,DWORD PTR [ecx]
  420783:	lahf   
  420784:	inc    esi
  420785:	mov    DWORD PTR [edi-0x5437e41],esp
  42078b:	xor    BYTE PTR es:[eax+0x5ac959],ah
  420792:	and    al,BYTE PTR [edx+0x238427b1]
  420798:	mov    bl,0xbf
  42079a:	pop    eax
  42079b:	and    eax,0xb9f6e118
  4207a0:	shl    WORD PTR [edi],0xb
  4207a4:	or     esi,DWORD PTR [eax]
  4207a6:	(bad)  
  4207a8:	cmp    al,0xd2
  4207aa:	dec    esi
  4207ab:	enter  0x231b,0x79
  4207af:	mov    al,ds:0x7cbc41ad
  4207b4:	icebp  
  4207b5:	inc    ebx
  4207b6:	stc    
  4207b7:	call   0x50c2:0xc00ef07c
  4207be:	jnp    0x42075a
  4207c0:	add    al,BYTE PTR [ebp-0x66]
  4207c3:	ins    DWORD PTR es:[edi],dx
  4207c4:	test   esi,0xbe4fe78
  4207ca:	xor    BYTE PTR [edi-0x6b49180b],0x6f
  4207d1:	outs   dx,BYTE PTR ds:[esi]
  4207d2:	outs   dx,BYTE PTR ds:[esi]
  4207d3:	fstp   QWORD PTR [edx+eiz*1]
  4207d6:	jge    0x420832
  4207d8:	cs fs lahf 
  4207db:	push   ebx
  4207dc:	pusha  
  4207dd:	dec    edx
  4207de:	out    dx,eax
  4207df:	aad    0x24
  4207e1:	xor    DWORD PTR [edx+ecx*1],ebp
  4207e4:	adc    bl,BYTE PTR [ebx+ecx*8]
  4207e7:	mov    ds:0x9d905b2c,al
  4207ec:	scas   al,BYTE PTR es:[edi]
  4207ed:	pop    ebp
  4207ee:	pop    esi
  4207ef:	push   esi
  4207f0:	test   DWORD PTR [ecx-0x21],edx
  4207f3:	out    0x28,al
  4207f5:	pop    ecx
  4207f6:	mov    edx,0xe44f0758
  4207fb:	mov    ebx,esp
  4207fd:	cwde   
  4207fe:	jge    0x4207d8
  420800:	mov    WORD PTR [ebx],es
  420802:	jo     0x420831
  420804:	fs addr16 or bh,cl
  420808:	repnz frstor [ecx+0x14b384f9]
  42080f:	inc    edx
  420810:	sub    BYTE PTR [edi-0x1bb7168b],bl
  420816:	cmp    esp,ebp
  420818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420819:	pop    ecx
  42081a:	jnp    0x42082f
  42081c:	ins    DWORD PTR es:[edi],dx
  42081d:	nop
  42081e:	jno    0x4207d4
  420820:	bound  edx,QWORD PTR [ebx-0x4e]
  420823:	(bad)  
  420824:	std    
  420825:	sbb    dh,BYTE PTR [esi-0x67d28418]
  42082b:	retf   
  42082c:	or     BYTE PTR ds:0xeddebb99,bh
  420832:	shr    BYTE PTR [esi-0x79947e3e],cl
  420838:	les    esi,FWORD PTR [eax-0x4f]
  42083b:	mov    dl,0x3e
  42083d:	mov    dh,0x46
  42083f:	fcom   DWORD PTR [ebp-0x68]
  420842:	sub    al,0xc3
  420844:	shr    BYTE PTR [ecx],cl
  420846:	pop    ss
  420847:	bnd jmp 0x42083d
  42084a:	cmp    eax,0x8877f357
  42084f:	sar    BYTE PTR [ebx-0x184396b],0x5f
  420856:	add    edi,ebx
  420858:	inc    esp
  420859:	hlt    
  42085a:	lds    edi,FWORD PTR ds:[ebp+0x75441bfa]
  420861:	jo     0x420885
  420863:	mov    ah,0x1a
  420865:	sbb    al,0x86
  420867:	add    DWORD PTR [esp+eiz*4],ecx
  42086a:	rol    BYTE PTR [eax-0x17],1
  42086d:	mov    eax,ds:0x468311ea
  420872:	inc    ebp
  420873:	xor    DWORD PTR [ebx+0x69f908dc],0xfac00947
  42087d:	sbb    eax,0xc2f66974
  420882:	jne    0x4208c4
  420884:	push   ebx
  420885:	or     DWORD PTR [edx-0x112079a8],ecx
  42088b:	or     ebp,eax
  42088d:	das    
  42088e:	sbb    edx,DWORD PTR [ecx]
  420890:	xchg   esi,eax
  420891:	mov    bh,BYTE PTR [ecx-0x28]
  420894:	add    eax,0xda9479fc
  420899:	mov    al,0xe8
  42089b:	sbb    BYTE PTR [edx-0x47178800],dh
  4208a1:	int3   
  4208a2:	fcom   QWORD PTR [eax]
  4208a4:	cdq    
  4208a5:	sbb    al,0xa8
  4208a7:	call   0x91cbd3fd
  4208ac:	nop
  4208ad:	scas   eax,DWORD PTR es:[edi]
  4208ae:	ret    0x345b
  4208b1:	pop    ss
  4208b2:	cmp    eax,0xb69824bb
  4208b7:	mov    eax,0x9752d53a
  4208bc:	dec    eax
  4208bd:	mov    cl,0x32
  4208bf:	push   DWORD PTR [esi+eax*2]
  4208c2:	mov    esi,DWORD PTR [eax]
  4208c4:	test   eax,0x6547acf5
  4208c9:	icebp  
  4208ca:	cmp    BYTE PTR [ebp+0x11a79571],dh
  4208d0:	in     eax,dx
  4208d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208d2:	cmp    esi,esp
  4208d4:	mov    dl,0x90
  4208d6:	xchg   esp,eax
  4208d7:	or     BYTE PTR [edi],dl
  4208d9:	sub    dh,BYTE PTR [esi]
  4208db:	outs   dx,BYTE PTR ds:[esi]
  4208dc:	out    0xfe,al
  4208de:	nop
  4208df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208e0:	adc    DWORD PTR [edi+0x62f77742],0x77
  4208e7:	ret    0xf04f
  4208ea:	in     eax,0xbf
  4208ec:	fs push es
  4208ee:	cmp    edx,DWORD PTR [esi-0x3d845858]
  4208f4:	(bad)  
  4208f5:	je     0x4208ec
  4208f7:	repnz std 
  4208f9:	dec    ebp
  4208fa:	das    
  4208fb:	xlat   BYTE PTR ds:[ebx]
  4208fc:	retf   
  4208fd:	mov    edx,0xf3b8ad38
  420902:	aas    
  420903:	test   al,0x89
  420905:	sub    al,0x2b
  420907:	lods   eax,DWORD PTR ds:[esi]
  420908:	stos   DWORD PTR es:[edi],eax
  420909:	mov    edx,0x391358bb
  42090e:	popf   
  42090f:	test   DWORD PTR [edi],esi
  420911:	adc    edx,esp
  420913:	sbb    eax,0x3a354161
  420918:	jge    0x420934
  42091a:	pop    esp
  42091b:	xchg   edx,eax
  42091c:	sub    ebp,DWORD PTR [edx]
  42091e:	test   BYTE PTR [ecx+0x7f751231],0xfe
  420925:	les    esi,FWORD PTR [edi-0x61]
  420928:	jl     0x420900
  42092a:	imul   esp,eax,0xffffffdf
  42092d:	jns    0x420900
  42092f:	cld    
  420930:	fiadd  WORD PTR ds:0x75ad9ded
  420936:	dec    BYTE PTR [edx+0x35fd8b81]
  42093c:	test   eax,0x134942d4
  420941:	pop    ds
  420942:	push   edx
  420943:	lock (bad) 
  420945:	rcr    BYTE PTR [edx-0x7d],1
  420948:	ss out dx,al
  42094a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42094b:	add    DWORD PTR [esi],esp
  42094d:	aam    0x56
  42094f:	xor    al,0x1
  420951:	sahf   
  420952:	fistp  WORD PTR [ebx+0x43]
  420955:	push   0x906761b4
  42095a:	jecxz  0x420928
  42095c:	shl    BYTE PTR [esi+esi*4-0x6f02cf19],cl
  420963:	inc    esp
  420964:	mov    dh,0x5b
  420966:	pop    ecx
  420967:	mov    esi,0xa092b428
  42096c:	mov    edx,0x1f38f320
  420971:	xor    DWORD PTR [edi],eax
  420973:	add    BYTE PTR [eax],bl
  420975:	mov    ecx,0x3329c3f2
  42097a:	inc    edi
  42097b:	xchg   esi,eax
  42097c:	pop    es
  42097d:	mov    ds:0xae2249d0,eax
  420982:	dec    ebx
  420983:	xor    al,0xb6
  420985:	xor    eax,0xafa45770
  42098a:	out    0x64,al
  42098c:	outs   dx,BYTE PTR ds:[esi]
  42098d:	mov    WORD PTR [esp+eiz*2-0x37],ds
  420991:	mov    fs,WORD PTR [edi+0x30da7ab]
  420997:	arpl   WORD PTR [ecx-0x3fd70188],si
  42099d:	arpl   WORD PTR [esi],sp
  42099f:	sbb    DWORD PTR [edi+0x2701b116],eax
  4209a5:	mov    ecx,0xbcde38c4
  4209aa:	das    
  4209ab:	test   eax,0x2b44131b
  4209b0:	fsubr  QWORD PTR [ebp+edi*8+0x5e]
  4209b4:	push   esp
  4209b5:	and    BYTE PTR [edi+ebp*4-0x5ace407e],cl
  4209bc:	xchg   edx,eax
  4209bd:	pop    ebx
  4209be:	jle    0x420a03
  4209c0:	fstp   TBYTE PTR [esi+eiz*8-0x2d]
  4209c4:	cmp    al,BYTE PTR [eax+0x61227f96]
  4209ca:	stc    
  4209cb:	mov    dh,0x2b
  4209cd:	or     DWORD PTR [eax-0x79],ebp
  4209d0:	dec    esi
  4209d1:	arpl   WORD PTR [ecx+esi*2],sp
  4209d4:	push   esp
  4209d5:	xlat   BYTE PTR ds:[ebx]
  4209d6:	push   0x6ff85602
  4209db:	jnp    0x420970
  4209dd:	xchg   esi,eax
  4209de:	xor    dl,BYTE PTR [ebx-0xa]
  4209e1:	add    BYTE PTR [edx+0x75],ah
  4209e4:	fstp   TBYTE PTR [esi-0x31]
  4209e7:	xchg   BYTE PTR [ecx],dh
  4209e9:	pop    ebp
  4209ea:	out    dx,eax
  4209eb:	push   esp
  4209ec:	fwait
  4209ed:	cmp    ecx,DWORD PTR [edi]
  4209ef:	mov    eax,0xc07f4e22
  4209f4:	mov    bl,0x8c
  4209f6:	stos   DWORD PTR es:[edi],eax
  4209f7:	mov    ch,0x95
  4209f9:	inc    esi
  4209fa:	xor    BYTE PTR [esi+eax*2],bl
  4209fd:	icebp  
  4209fe:	sbb    esp,eax
  420a00:	xor    edx,esp
  420a02:	shl    edi,1
  420a04:	out    dx,eax
  420a05:	xchg   BYTE PTR [edx+0x71],dl
  420a08:	pop    eax
  420a09:	add    BYTE PTR [edi],0xf9
  420a0c:	pop    ss
  420a0d:	push   ds
  420a0e:	das    
  420a0f:	repnz xchg esp,eax
  420a11:	pop    es
  420a12:	and    DWORD PTR [edx-0x4e9d85ee],esp
  420a18:	sub    al,0xb0
  420a1a:	adc    BYTE PTR [eax+eiz*2-0x10],dl
  420a1e:	sub    ah,0xa7
  420a21:	shl    DWORD PTR [esi-0x39],0x7e
  420a25:	and    BYTE PTR [ecx],dh
  420a27:	jmp    0xf068:0x36cfa5b3
  420a2e:	rcr    BYTE PTR [ebx+ebp*1-0x655b2a54],0xa4
  420a36:	push   esp
  420a37:	dec    esi
  420a38:	iret   
  420a39:	adc    eax,0x3a61094c
  420a3e:	or     DWORD PTR [edx-0x23],edi
  420a41:	pop    esi
  420a42:	and    DWORD PTR [esi+0x56],esp
  420a45:	std    
  420a46:	dec    esi
  420a47:	out    0x1d,al
  420a49:	push   0xffffffe6
  420a4b:	dec    ecx
  420a4c:	lea    ebx,[edi+0x42]
  420a4f:	into   
  420a50:	stc    
  420a51:	ja     0x420a6c
  420a53:	cli    
  420a54:	das    
  420a55:	or     eax,0x7dfefc49
  420a5a:	push   edx
  420a5b:	inc    ecx
  420a5c:	xchg   ebp,eax
  420a5d:	in     al,dx
  420a5e:	or     ecx,DWORD PTR [ebp-0x1a3a6bf6]
  420a64:	push   ebx
  420a65:	sub    eax,0x7ee54ab1
  420a6a:	fbstp  TBYTE PTR [eax]
  420a6c:	out    dx,eax
  420a6d:	stc    
  420a6e:	mov    edx,0x3fcf4922
  420a73:	cdq    
  420a74:	push   esp
  420a75:	sbb    edi,esp
  420a77:	enter  0x63f1,0x89
  420a7b:	dec    esp
  420a7c:	rcr    DWORD PTR [edx+0x68],cl
  420a7f:	fsubr  DWORD PTR [esi]
  420a81:	mov    ah,0xf0
  420a83:	dec    esp
  420a84:	push   ss
  420a85:	dec    edi
  420a86:	fild   WORD PTR [eax]
  420a88:	aaa    
  420a89:	pop    ebx
  420a8a:	jecxz  0x420abd
  420a8c:	pop    esp
  420a8d:	push   edi
  420a8e:	fldenv [eax]
  420a90:	cmc    
  420a91:	xchg   edx,eax
  420a92:	inc    edi
  420a93:	add    al,0x44
  420a95:	jns    0x420aa9
  420a97:	jbe    0x420af9
  420a99:	sbb    eax,0x3426dfc5
  420a9e:	fs inc ebx
  420aa0:	and    BYTE PTR [esi-0x20],0x3d
  420aa4:	(bad)  
  420aa5:	mov    bh,0xec
  420aa7:	sub    ecx,edi
  420aa9:	inc    esi
  420aaa:	sbb    ebx,eax
  420aac:	mov    ds:0x735bed5d,al
  420ab1:	aam    0x4c
  420ab3:	std    
  420ab4:	jecxz  0x420b0b
  420ab6:	mov    BYTE PTR [eax],bl
  420ab8:	fnstsw WORD PTR [ecx]
  420aba:	jne    0x420a61
  420abc:	pushf  
  420abd:	(bad)  
  420abe:	pop    edi
  420abf:	and    bh,BYTE PTR [esi]
  420ac1:	popf   
  420ac2:	int3   
  420ac3:	fisub  DWORD PTR [ebx-0x61]
  420ac6:	inc    eax
  420ac7:	test   DWORD PTR [eax-0x2f],ebx
  420aca:	jae    0x420afb
  420acc:	loope  0x420ae0
  420ace:	int3   
  420acf:	(bad)  [ebx+0x5a1cbfee]
  420ad5:	lods   eax,DWORD PTR ds:[esi]
  420ad6:	and    ebp,ebx
  420ad8:	ins    BYTE PTR es:[edi],dx
  420ad9:	jg     0x420ab3
  420adb:	sbb    bh,BYTE PTR [edi]
  420add:	(bad)  
  420ade:	in     eax,dx
  420adf:	ss call 0xb8a13331
  420ae5:	out    dx,eax
  420ae6:	inc    edx
  420ae7:	fbld   TBYTE PTR [ebp-0x18]
  420aea:	stc    
  420aeb:	outs   dx,BYTE PTR ds:[esi]
  420aec:	add    eax,DWORD PTR [ebx-0x2bd7769d]
  420af2:	jmp    0x420a7e
  420af4:	fnstenv [ebp-0x38e0ae02]
  420afa:	test   DWORD PTR [ecx],esp
  420afc:	dec    edx
  420afd:	pop    ebx
  420afe:	dec    ebx
  420aff:	xor    al,0x2d
  420b01:	jg     0x420ab7
  420b03:	jecxz  0x420aaa
  420b05:	push   cs
  420b06:	add    ebx,esp
  420b08:	(bad)  
  420b09:	and    esi,DWORD PTR [edi]
  420b0b:	mov    BYTE PTR ds:0x54750126,dh
  420b11:	call   0x9846287c
  420b16:	pop    edi
  420b17:	mov    dl,0xe2
  420b19:	jg     0x420b86
  420b1b:	clc    
  420b1c:	outs   dx,BYTE PTR ds:[esi]
  420b1d:	cmp    esp,edx
  420b1f:	dec    edx
  420b20:	sbb    esp,DWORD PTR ds:0xecf46589
  420b26:	mov    esi,0x84d8e395
  420b2b:	out    dx,al
  420b2c:	sti    
  420b2d:	mov    cl,bl
  420b2f:	jle    0x420b3b
  420b31:	aam    0x49
  420b33:	stos   BYTE PTR es:[edi],al
  420b34:	call   0xc32a0d28
  420b39:	add    edi,ebx
  420b3b:	mov    ebx,0xe588857f
  420b40:	pop    ebp
  420b41:	out    dx,eax
  420b42:	test   ecx,ecx
  420b44:	adc    BYTE PTR [edi],ah
  420b46:	jns    0x420bb9
  420b48:	inc    esi
  420b4a:	jmp    0x313e:0x9b2b522
  420b51:	cmp    DWORD PTR [esi-0x7e],esp
  420b54:	test   al,0x8c
  420b56:	shl    BYTE PTR [edx-0x46cc49c1],cl
  420b5c:	ror    ebp,0xfb
  420b5f:	adc    eax,0xc129b951
  420b64:	sahf   
  420b65:	(bad)  
  420b66:	push   eax
  420b67:	out    0xde,al
  420b69:	ja     0x420b25
  420b6b:	or     al,0xc
  420b6d:	aas    
  420b6e:	ret    0x329c
  420b71:	adc    eax,DWORD PTR [eax]
  420b73:	repnz add BYTE PTR [ecx+ecx*2+0x3b],0xd9
  420b79:	in     eax,dx
  420b7a:	mov    al,0x7
  420b7c:	dec    ebx
  420b7d:	in     eax,dx
  420b7e:	sbb    al,0x31
  420b80:	push   ecx
  420b81:	dec    eax
  420b82:	and    al,0x10
  420b84:	fisubr DWORD PTR [eax-0x13eaa6d]
  420b8a:	sub    bl,al
  420b8c:	mov    dh,BYTE PTR [edi-0x17073b33]
  420b92:	xor    esi,ebp
  420b94:	in     al,dx
  420b95:	fmul   DWORD PTR [ebp+0x4bfd1cb2]
  420b9b:	push   ebp
  420b9c:	and    ch,BYTE PTR [esi-0x3d]
  420b9f:	cmp    edx,DWORD PTR [eax]
  420ba1:	cs dec ebx
  420ba3:	cdq    
  420ba4:	add    dh,ch
  420ba6:	shl    esi,0xd6
  420ba9:	stos   BYTE PTR es:[edi],al
  420baa:	xchg   edi,eax
  420bab:	mov    ebp,0x66a78bc5
  420bb0:	or     DWORD PTR [ebx],ebx
  420bb2:	dec    ebp
  420bb3:	rol    BYTE PTR [eax],0xdb
  420bb6:	loop   0x420c14
  420bb8:	pop    edi
  420bb9:	(bad)  
  420bba:	pop    esp
  420bbb:	jns    0x420b92
  420bbd:	daa    
  420bbe:	fdivr  DWORD PTR ds:0x317d2d8a
  420bc4:	or     eax,0x1a87e9c9
  420bc9:	pop    ds
  420bca:	cmp    BYTE PTR [edi+0x50],ch
  420bcd:	xchg   edx,eax
  420bce:	ss push eax
  420bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bd1:	adc    eax,0x9141643f
  420bd6:	test   al,0xa7
  420bd8:	push   edi
  420bd9:	fisub  WORD PTR [eax]
  420bdb:	enter  0x1369,0xda
  420bdf:	test   ch,bl
  420be1:	push   eax
  420be2:	push   es
  420be3:	dec    eax
  420be4:	mov    dh,0x5f
  420be6:	inc    esi
  420be7:	push   ss
  420be8:	jmp    0x420bbc
  420bea:	test   ebp,eax
  420bec:	(bad)  
  420bed:	mov    dh,0x4d
  420bef:	pop    ebp
  420bf0:	mov    al,0x9d
  420bf2:	(bad)  
  420bf3:	sbb    eax,0x753b5c13
  420bf8:	sbb    BYTE PTR [ecx+0x23e3c1f5],cl
  420bfe:	dec    ebp
  420bff:	out    0x1c,al
  420c01:	xor    BYTE PTR [esi+0x58baa7fb],ah
  420c07:	jne    0x420bfc
  420c09:	nop
  420c0a:	xchg   esp,eax
  420c0b:	arpl   WORD PTR [esi-0x64],si
  420c0e:	add    eax,0x31341427
  420c13:	ret    
  420c14:	scas   al,BYTE PTR es:[edi]
  420c15:	pop    ebp
  420c16:	ds sbb dh,BYTE PTR ss:[ebp+0x542051a1]
  420c1e:	pop    ebx
  420c1f:	sahf   
  420c20:	test   al,0x1c
  420c22:	lahf   
  420c23:	int    0x71
  420c25:	jns    0x420c24
  420c27:	popf   
  420c28:	stc    
  420c29:	fstp   DWORD PTR [eax-0x60]
  420c2c:	jl     0x420c4c
  420c2e:	push   eax
  420c2f:	sub    DWORD PTR [eax],ecx
  420c31:	loope  0x420c92
  420c33:	cmp    DWORD PTR ds:[edi+0x57],eax
  420c37:	mov    cl,0x6d
  420c39:	sub    BYTE PTR [ebp-0x1b],dl
  420c3c:	dec    edx
  420c3d:	ds test ebx,esi
  420c40:	jle    0x420c3e
  420c42:	cld    
  420c43:	rol    dh,cl
  420c45:	mov    edi,0xada99c0
  420c4a:	out    0x34,al
  420c4c:	pop    esi
  420c4d:	fmul   st,st(7)
  420c4f:	outs   dx,DWORD PTR ds:[esi]
  420c50:	(bad)  
  420c52:	retf   
  420c53:	sti    
  420c54:	(bad)  
  420c55:	out    dx,eax
  420c56:	jmp    0xcbda7298
  420c5b:	pop    es
  420c5c:	cmp    DWORD PTR [edi],eax
  420c5e:	add    al,0x46
  420c60:	adc    DWORD PTR [edx-0x7e],esp
  420c63:	pushf  
  420c64:	call   0xf07e:0x6e7c8522
  420c6b:	or     al,bh
  420c6d:	cwde   
  420c6e:	cmp    BYTE PTR [edx-0x62],0x3c
  420c72:	mov    ds:0x20e96d01,al
  420c77:	pop    ebx
  420c78:	scas   eax,DWORD PTR es:[edi]
  420c79:	fstp   TBYTE PTR [bx+si]
  420c7c:	mov    bh,0x44
  420c7e:	(bad)  
  420c7f:	sbb    edi,DWORD PTR [eax]
  420c81:	iret   
  420c82:	pop    ebx
  420c83:	dec    esp
  420c84:	iret   
  420c85:	aas    
  420c86:	bound  edx,QWORD PTR [esi+ebp*8+0x79]
  420c8a:	mov    dh,0x7e
  420c8c:	cmc    
  420c8d:	hlt    
  420c8e:	and    al,0x18
  420c90:	push   0x5e3490d5
  420c95:	xchg   esi,eax
  420c96:	shl    DWORD PTR [eax],cl
  420c98:	mov    bh,0xf8
  420c9a:	or     DWORD PTR [eax-0x5d],edi
  420c9d:	lea    esp,[eax]
  420c9f:	je     0x420ce5
  420ca1:	dec    edi
  420ca2:	adc    BYTE PTR [ebp+0x6a07a571],ah
  420ca8:	inc    edx
  420ca9:	and    bh,BYTE PTR [ecx]
  420cab:	pop    edx
  420cac:	and    al,0x8f
  420cae:	cld    
  420caf:	lods   eax,DWORD PTR es:[esi]
  420cb1:	out    dx,eax
  420cb2:	xchg   DWORD PTR [ebx+0x6],edi
  420cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cb6:	xlat   BYTE PTR ds:[ebx]
  420cb7:	add    esi,esp
  420cb9:	fidivr DWORD PTR [ebx+edx*4-0x2de33ccd]
  420cc0:	add    dh,BYTE PTR [ebp+0x71b1722d]
  420cc6:	mov    bl,0x86
  420cc8:	sti    
  420cc9:	ror    DWORD PTR [ecx+0x233ccd6],cl
  420ccf:	mov    bh,0xc4
  420cd1:	out    dx,eax
  420cd2:	repnz mov eax,ds:0x93fba77e
  420cd8:	push   esi
  420cd9:	push   eax
  420cda:	push   ss
  420cdb:	into   
  420cdc:	sar    BYTE PTR [ecx-0x24],0xc0
  420ce0:	arpl   WORD PTR [eax],di
  420ce2:	aaa    
  420ce3:	or     al,bl
  420ce5:	jae    0x420c97
  420ce7:	aas    
  420ce8:	in     eax,0x3
  420cea:	je     0x420d42
  420cec:	dec    esi
  420ced:	xor    ch,bh
  420cef:	xor    al,0x77
  420cf1:	cmp    ebx,DWORD PTR [esi-0x80]
  420cf4:	jle    0x420c90
  420cf6:	pop    ebp
  420cf7:	or     BYTE PTR [edi-0x1d1a3d94],0xe7
  420cfe:	add    eax,0xa8587d9e
  420d03:	lods   eax,DWORD PTR ds:[esi]
  420d04:	mov    ecx,0x7ba67b62
  420d09:	dec    ecx
  420d0a:	icebp  
  420d0b:	idiv   BYTE PTR [eax]
  420d0d:	push   edi
  420d0e:	dec    ebp
  420d0f:	scas   eax,DWORD PTR es:[edi]
  420d10:	enter  0x9a8,0x1b
  420d14:	push   ss
  420d15:	xor    esi,DWORD PTR [edx+0x67]
  420d18:	mov    ebx,0x2f5380eb
  420d1d:	cmp    BYTE PTR [edx+0x13a2f9c7],al
  420d23:	xchg   ecx,eax
  420d24:	or     eax,0x8c8cb235
  420d29:	fnstenv ds:0x1eae5b8e
  420d2f:	into   
  420d30:	push   ebp
  420d31:	lahf   
  420d32:	rcl    DWORD PTR [ebp-0x12d76c1c],cl
  420d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d39:	inc    eax
  420d3a:	pop    eax
  420d3b:	pop    es
  420d3c:	cmp    BYTE PTR [ebx+0x45139bf0],cl
  420d42:	jge    0x420da0
  420d44:	mov    edi,0x99c47210
  420d49:	rcr    BYTE PTR [ecx+0x30814f30],1
  420d4f:	lods   al,BYTE PTR ds:[esi]
  420d50:	sahf   
  420d51:	mov    al,ds:0xda75774a
  420d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d57:	dec    eax
  420d58:	inc    esi
  420d59:	xchg   esp,eax
  420d5a:	(bad)  
  420d5b:	call   0xc4e72b2b
  420d60:	rcr    DWORD PTR [eax],1
  420d62:	pop    ebx
  420d63:	stos   BYTE PTR es:[edi],al
  420d64:	xor    al,0x59
  420d66:	and    edx,DWORD PTR [ebp+0x1f]
  420d69:	cdq    
  420d6a:	xor    DWORD PTR [esi],edi
  420d6c:	cmp    ah,BYTE PTR [edi-0x57931e10]
  420d72:	inc    eax
  420d73:	and    esi,esi
  420d75:	addr16 add al,0xe6
  420d78:	pop    esp
  420d79:	sahf   
  420d7a:	or     ah,BYTE PTR [ecx-0x6f]
  420d7d:	cli    
  420d7e:	mov    ah,BYTE PTR [ecx+0x77]
  420d81:	outs   dx,BYTE PTR ds:[esi]
  420d82:	cmp    ah,BYTE PTR gs:[eax+0x47]
  420d86:	fsubr  DWORD PTR [eax+0x5d]
  420d89:	lahf   
  420d8a:	in     eax,0xbf
  420d8c:	cmc    
  420d8d:	loopne 0x420d20
  420d8f:	push   edi
  420d90:	jbe    0x420d39
  420d92:	psubusw mm4,QWORD PTR [esi-0x50f0b6c2]
  420d99:	or     al,BYTE PTR [ebp+0x7394030d]
  420d9f:	and    DWORD PTR [eax],0xffffffd0
  420da2:	test   BYTE PTR [eax-0x323f92df],ah
  420da8:	add    cl,ch
  420daa:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  420dac:	sbb    al,0x23
  420dae:	or     eax,0x1ba00b0b
  420db3:	sub    ch,BYTE PTR [edi]
  420db5:	sbb    eax,0xc8ebae26
  420dba:	mov    ss,eax
  420dbc:	iret   
  420dbd:	mov    edi,0xfc46ff72
  420dc2:	inc    edi
  420dc3:	mov    esi,0xa1c403fd
  420dc8:	out    0x92,al
  420dca:	cmp    BYTE PTR [ebp+0xf],0x72
  420dce:	mov    esi,0x6288ba8a
  420dd3:	xchg   esp,eax
  420dd4:	mov    eax,0x2de03de9
  420dd9:	mov    edi,0xdf4c4815
  420dde:	push   edx
  420ddf:	mov    edi,0xc4d12a03
  420de4:	pusha  
  420de5:	repz inc ebx
  420de7:	leave  
  420de8:	das    
  420de9:	call   0x5282c467
  420dee:	sub    al,0xc
  420df0:	leave  
  420df1:	pop    ebx
  420df2:	adc    eax,0x431d0de1
  420df7:	push   ebp
  420df8:	jge    0x420dda
  420dfa:	pop    ss
  420dfb:	scas   eax,DWORD PTR es:[edi]
  420dfc:	loop   0x420e4a
  420dfe:	xchg   edi,eax
  420dff:	(bad)  
  420e00:	cli    
  420e01:	jge    0x420de2
  420e03:	jae    0x420e13
  420e05:	push   ds
  420e06:	sub    DWORD PTR [ebp+eax*8-0x61],ecx
  420e0a:	enter  0xa3b6,0x76
  420e0e:	or     edi,0x63
  420e11:	cmp    al,0x1d
  420e13:	test   DWORD PTR [esi-0x41aefb89],esi
  420e19:	push   cs
  420e1a:	inc    eax
  420e1b:	out    dx,eax
  420e1c:	pop    esp
  420e1d:	mov    ebx,0xee9b8854
  420e22:	add    eax,0xe117a177
  420e27:	mov    al,0xeb
  420e29:	jmp    0x8712:0xf5150b46
  420e30:	jae    0x420dcb
  420e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e33:	add    al,0xaa
  420e35:	and    al,0x8c
  420e37:	in     eax,dx
  420e38:	jns    0x420e9d
  420e3a:	pop    edi
  420e3b:	gs xor eax,0xb1a88ebc
  420e41:	sbb    al,0xdf
  420e43:	in     al,dx
  420e44:	xchg   ebx,eax
  420e45:	test   eax,0xd3151f59
  420e4a:	ret    
  420e4b:	add    BYTE PTR [ecx+0x66fd73a],bh
  420e51:	iret   
  420e52:	retf   0xa567
  420e55:	and    al,0x85
  420e57:	jge    0x420e14
  420e59:	sub    dl,ah
  420e5b:	adc    DWORD PTR [eax],ecx
  420e5d:	push   esp
  420e5e:	jo     0x420e02
  420e60:	out    dx,al
  420e61:	adc    DWORD PTR [eax-0x2485f0f0],edi
  420e67:	mov    ds:0x8662a2cb,al
  420e6c:	dec    ebx
  420e6d:	int    0x78
  420e6f:	int    0x7e
  420e71:	and    DWORD PTR [eax-0xc],ebx
  420e74:	call   0x506b22ec
  420e79:	or     DWORD PTR [eax+0x4f],0x4c20eb62
  420e80:	pusha  
  420e81:	pop    eax
  420e82:	fcom   DWORD PTR [edi+0x20]
  420e85:	xchg   ecx,eax
  420e86:	loopne 0x420ec4
  420e88:	xchg   ebx,eax
  420e89:	mov    ebx,0x444216e9
  420e8e:	call   edi
  420e90:	call   0x25c6bec7
  420e95:	inc    eax
  420e96:	inc    eax
  420e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e98:	or     al,0x85
  420e9a:	mov    al,ds:0x9f84cfc9
  420e9f:	jecxz  0x420e8b
  420ea1:	out    dx,al
  420ea2:	repnz in eax,dx
  420ea4:	dec    ecx
  420ea5:	mov    ecx,0x417c6872
  420eaa:	push   ds
  420eab:	mov    dh,0xff
  420ead:	pop    eax
  420eae:	add    bh,BYTE PTR [ebp-0xb9bf4ac]
  420eb4:	sti    
  420eb5:	xlat   BYTE PTR ds:[ebx]
  420eb6:	jp     0x420e62
  420eb8:	leave  
  420eb9:	push   ds
  420eba:	sbb    DWORD PTR [ecx-0x70],esi
  420ebd:	jp     0x420e42
  420ebf:	push   eax
  420ec0:	gs adc al,0xcb
  420ec3:	dec    eax
  420ec4:	mov    bh,0xad
  420ec6:	icebp  
  420ec7:	dec    eax
  420ec8:	sbb    edx,edi
  420eca:	mov    esi,0xeb023363
  420ecf:	jae    0x420f4d
  420ed1:	inc    edx
  420ed2:	rcl    BYTE PTR [ebx-0x31],1
  420ed5:	push   esi
  420ed6:	in     eax,0xf7
  420ed8:	pop    esi
  420ed9:	aam    0x1
  420edb:	lock sbb ch,BYTE PTR [eax+0x70029f27]
  420ee2:	jne    0x420f46
  420ee4:	sbb    ah,al
  420ee6:	xchg   DWORD PTR [ebx],ebp
  420ee8:	mov    DWORD PTR [edi+eiz*4],eax
  420eeb:	int    0xbd
  420eed:	push   ebp
  420eee:	xor    esi,DWORD PTR [edi]
  420ef0:	ret    
  420ef1:	adc    eax,DWORD PTR [eax+esi*8-0x3f]
  420ef5:	xor    BYTE PTR [edx],dh
  420ef7:	inc    edx
  420ef8:	shl    DWORD PTR ds:0x5bf31b30,cl
  420efe:	or     ebp,ebx
  420f00:	fwait
  420f01:	inc    ecx
  420f02:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  420f04:	or     BYTE PTR [edi+0x1d8406e],bl
  420f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f0b:	push   0x39
  420f0d:	lea    edi,ds:0x897fae19
  420f13:	adc    al,0x7b
  420f15:	sbb    al,ah
  420f17:	jo     0x420f3c
  420f19:	stos   DWORD PTR es:[edi],eax
  420f1a:	sub    ebx,DWORD PTR [eax+0x1]
  420f1d:	hlt    
  420f1e:	or     eax,0xc6a0ec05
  420f23:	jp     0x420ed5
  420f25:	inc    esi
  420f26:	test   BYTE PTR [di-0x32],al
  420f2a:	add    dl,ah
  420f2c:	test   eax,0xb8a7cfe
  420f31:	int3   
  420f32:	(bad)  
  420f33:	retf   0x7972
  420f36:	sbb    ch,bh
  420f38:	jecxz  0x420f23
  420f3a:	add    edi,DWORD PTR [ebx-0x7e]
  420f3d:	ins    BYTE PTR es:[edi],dx
  420f3e:	std    
  420f3f:	pop    ebx
  420f40:	adc    eax,0x1f8ee878
  420f46:	retf   0x58d2
  420f49:	fwait
  420f4a:	jb     0x420eea
  420f4c:	adc    al,0x4c
  420f4e:	mov    bh,0xb2
  420f50:	rcl    BYTE PTR [ecx-0x5e],0xa4
  420f54:	pop    esp
  420f55:	push   ss
  420f56:	pushf  
  420f57:	jg     0x420f33
  420f59:	push   eax
  420f5a:	sahf   
  420f5b:	sbb    dl,dl
  420f5d:	add    edx,eax
  420f5f:	ret    0x34e9
  420f62:	or     bh,dl
  420f64:	call   0xd933:0xf5cdddb9
  420f6b:	popf   
  420f6c:	mov    cl,0xce
  420f6e:	mov    dl,0xc
  420f70:	lods   al,BYTE PTR ds:[esi]
  420f71:	xchg   esi,eax
  420f72:	sbb    DWORD PTR [ebx+0x22d1ac7d],ebx
  420f78:	mov    dl,ah
  420f7a:	jle    0x420f76
  420f7c:	ficom  DWORD PTR [ecx-0x53]
  420f7f:	dec    ecx
  420f80:	out    dx,eax
  420f81:	pop    ebp
  420f82:	ja     0x420ffe
  420f84:	add    eax,0x6b07c9d7
  420f89:	xchg   edx,eax
  420f8b:	cmp    eax,0x7f90844e
  420f90:	call   0xcf74b9c5
  420f95:	in     al,0xc1
  420f97:	iret   
  420f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f99:	ds mov al,0x8b
  420f9c:	sbb    al,BYTE PTR [ebp+0x25b7659f]
  420fa2:	sahf   
  420fa3:	push   0x7e0bd5c7
  420fa8:	push   edx
  420fa9:	fsubr  QWORD PTR [eax+0x2e]
  420fac:	mov    dl,BYTE PTR [edx]
  420fae:	mov    ds:0xef6012af,al
  420fb3:	sub    BYTE PTR [edi-0x5a],dl
  420fb6:	cmp    BYTE PTR fs:[edi],0xe5
  420fba:	aam    0x74
  420fbc:	rol    eax,0x49
  420fbf:	(bad)  [esp+ebx*1-0x2a]
  420fc3:	mov    eax,ds:0x28347174
  420fc8:	(bad)  [esi]
  420fca:	cmp    esi,DWORD PTR [edx+0x24]
  420fcd:	adc    bh,BYTE PTR [ebp+0x2e4c14b7]
  420fd3:	mov    ah,0x20
  420fd5:	imul   esp,DWORD PTR [eax],0x49
  420fd8:	pop    ds
  420fd9:	or     DWORD PTR [edi],ebx
  420fdb:	fwait
  420fdc:	inc    ebx
  420fdd:	test   BYTE PTR [edx+0xbd86657],ch
  420fe3:	ss mov dh,0xf4
  420fe6:	mov    al,ds:0xe120f66f
  420feb:	mov    esp,0xe1550c2f
  420ff0:	pushf  
  420ff1:	pop    ebx
  420ff2:	mov    ds:0x959cb66b,eax
  420ff7:	mov    dl,BYTE PTR [esi-0x1cfc397f]
  420ffd:	and    al,0x51
  420fff:	inc    ebp
  421000:	adc    eax,0x37c3a742
  421005:	or     BYTE PTR [ecx+0x27fb9359],ah
  42100b:	mov    ch,0xdb
  42100d:	mov    bh,0xd0
  42100f:	push   eax
  421010:	pop    ds
  421011:	mov    edi,?
  421013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421014:	test   eax,0xa977f661
  421019:	sub    al,0xd3
  42101b:	adc    BYTE PTR [eax-0x35],dl
  42101e:	mov    DWORD PTR [ebx],ebp
  421020:	push   edi
  421021:	test   DWORD PTR ds:0x1e039e0e,eax
  421027:	or     al,0x4e
  421029:	or     DWORD PTR [edx],ebp
  42102b:	pop    ebx
  42102c:	frstor [ebx]
  42102e:	mov    es,WORD PTR [esi+0x35]
  421031:	sar    ecx,1
  421033:	jno    0x4210b2
  421035:	xor    DWORD PTR [ebp-0x7f835605],ecx
  42103b:	dec    ebp
  42103c:	dec    edx
  42103d:	fdivr  st(5),st
  42103f:	test   al,0xf5
  421041:	mov    edi,0xa44fdf59
  421046:	repnz imul ebp,DWORD PTR [edx-0x301fc259],0x4bcb7b3e
  421051:	scas   al,BYTE PTR es:[edi]
  421052:	push   es
  421053:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421054:	jo     0x421051
  421056:	cdq    
  421057:	and    bh,ah
  421059:	sub    esp,DWORD PTR ss:[ebx-0x26]
  42105d:	xchg   ecx,eax
  42105e:	dec    esi
  42105f:	and    DWORD PTR ds:0x97bc25df,0x28
  421066:	(bad)  
  421067:	aas    
  421068:	xchg   esp,eax
  421069:	ds pop esp
  42106b:	xchg   DWORD PTR [esi],ecx
  42106d:	loope  0x42100f
  42106f:	repnz loopne 0x421068
  421072:	lahf   
  421073:	mov    ah,0x80
  421075:	or     esp,esi
  421077:	adc    al,bh
  421079:	push   cs
  42107a:	push   edi
  42107b:	dec    ecx
  42107c:	outs   dx,BYTE PTR ds:[esi]
  42107d:	and    eax,0x26cd6310
  421082:	sub    BYTE PTR [edi+0x720bd97],0x54
  421089:	sbb    BYTE PTR [ebx-0x30d9344f],bl
  42108f:	pop    DWORD PTR [edi]
  421091:	push   ebx
  421092:	push   0x2117127f
  421097:	or     BYTE PTR [eax-0x6e4c0b9d],dl
  42109d:	pop    esp
  42109e:	out    dx,eax
  42109f:	pop    ecx
  4210a0:	addr16 xor eax,0xdde07902
  4210a6:	and    al,BYTE PTR [esp+edx*2-0xd]
  4210aa:	sti    
  4210ab:	push   edx
  4210ac:	fimul  DWORD PTR [eax]
  4210ae:	(bad)  
  4210af:	loope  0x421110
  4210b1:	in     eax,0xdd
  4210b3:	ins    DWORD PTR es:[edi],dx
  4210b4:	mov    gs,WORD PTR [ebx-0x80]
  4210b7:	mov    edi,0x7388b5f2
  4210bc:	sbb    bl,BYTE PTR [edx+0x30265771]
  4210c2:	mov    ds:0x5dbe528d,al
  4210c7:	mov    ds:0x53b992e4,al
  4210cc:	and    eax,0x28c142fd
  4210d1:	and    BYTE PTR [edi+0x32b9fbb9],bh
  4210d7:	into   
  4210d8:	dec    esp
  4210d9:	call   0x7195:0xe3a38b8f
  4210e0:	push   cs
  4210e1:	dec    ebp
  4210e2:	clc    
  4210e3:	in     al,0x76
  4210e5:	fidivr DWORD PTR [ebp-0x68]
  4210e8:	sbb    BYTE PTR [ebp+ecx*2-0x47],dl
  4210ec:	test   BYTE PTR [edi],ch
  4210ee:	sub    DWORD PTR [edx+edx*1-0x67],eax
  4210f2:	lds    esi,FWORD PTR [eax]
  4210f4:	mov    bh,0x6
  4210f6:	cmp    al,0xd3
  4210f8:	pop    ebp
  4210f9:	outs   dx,BYTE PTR ds:[esi]
  4210fa:	sub    al,0x4
  4210fc:	sti    
  4210fd:	call   0xa303:0x11b29e38
  421104:	cmp    BYTE PTR [ebp+0x23],ah
  421107:	push   0xffffffbe
  421109:	(bad)  
  42110a:	in     eax,dx
  42110b:	or     al,0x3d
  42110d:	pop    esi
  42110e:	ds cmc 
  421110:	dec    ebp
  421111:	out    dx,eax
  421112:	test   BYTE PTR [esi+0x44],bh
  421115:	cdq    
  421116:	or     al,0x74
  421118:	xor    al,0xdf
  42111a:	push   ss
  42111b:	int    0xf1
  42111d:	inc    edi
  42111e:	and    al,0x3e
  421120:	inc    esp
  421121:	xchg   edx,eax
  421122:	sbb    DWORD PTR [edi],0x53
  421125:	push   cs
  421126:	sub    ah,bl
  421128:	mov    DWORD PTR ds:0x7877c127,edx
  42112e:	lock cld 
  421130:	and    al,0xb0
  421132:	push   ebp
  421133:	and    esp,edi
  421135:	adc    al,0x76
  421137:	cmc    
  421138:	sub    BYTE PTR [edi],dl
  42113a:	aad    0x61
  42113c:	xchg   BYTE PTR [ebx],bh
  42113e:	push   cs
  42113f:	loope  0x4210fd
  421141:	xor    edi,edi
  421143:	mov    ds:0x6a66cd96,al
  421148:	jg     0x4210f7
  42114a:	cmp    ah,BYTE PTR [eax-0x74]
  42114d:	xor    BYTE PTR [edx],bl
  42114f:	lea    ebp,[edx+0x17]
  421152:	jp     0x4210fd
  421154:	lods   eax,DWORD PTR ds:[esi]
  421155:	outs   dx,DWORD PTR ds:[esi]
  421156:	gs mov dl,0x37
  421159:	mov    eax,ds:0x515aff19
  42115e:	in     eax,dx
  42115f:	loop   0x4211ce
  421161:	xchg   ebx,eax
  421162:	div    DWORD PTR [edx]
  421164:	mov    al,ds:0x257b0833
  421169:	dec    esi
  42116a:	frstor [edx-0x9]
  42116d:	xchg   edx,eax
  42116e:	push   0x35
  421170:	(bad)  
  421171:	push   es
  421172:	call   0x7a38:0xc58c7279
  421179:	repnz xchg ecx,eax
  42117b:	mov    ds:0xb0e5062c,al
  421180:	jmp    0x64c4:0xa853c9bd
  421187:	shr    BYTE PTR [esi-0x21],0x8a
  42118b:	push   es
  42118c:	pop    edx
  42118d:	loope  0x421155
  42118f:	dec    ebp
  421190:	mov    dl,0x6
  421192:	fs jnp 0x421210
  421195:	je     0x421181
  421197:	out    dx,eax
  421198:	es adc edx,esi
  42119b:	sub    al,0x19
  42119d:	mov    ds:0xe61d7c48,al
  4211a2:	inc    ecx
  4211a3:	pop    edi
  4211a4:	mov    ds:0xd43bfc47,al
  4211a9:	leave  
  4211aa:	sbb    al,0xe8
  4211ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211ad:	mov    ebx,DWORD PTR [esi]
  4211af:	lahf   
  4211b0:	adc    DWORD PTR [ebp+0x494ef9a7],esp
  4211b6:	hlt    
  4211b7:	mov    DWORD PTR cs:[edi],ebx
  4211ba:	daa    
  4211bb:	jno    0x421222
  4211bd:	call   ebx
  4211bf:	adc    cl,dh
  4211c1:	mov    bh,0xfa
  4211c3:	mov    ch,0x22
  4211c5:	xchg   ecx,eax
  4211c6:	shl    BYTE PTR [edi],0xe3
  4211c9:	cli    
  4211ca:	xchg   esi,eax
  4211cb:	sub    al,0x43
  4211cd:	daa    
  4211ce:	mov    ds:0xa999ff3b,al
  4211d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211d4:	xchg   edx,ebx
  4211d6:	cwde   
  4211d7:	pop    es
  4211d8:	je     0x4211c5
  4211da:	cmp    BYTE PTR [edi-0x2d9f220c],bh
  4211e0:	cmc    
  4211e1:	rcr    BYTE PTR [ecx+0x4710a232],1
  4211e7:	sub    ebp,DWORD PTR [edx-0x1]
  4211ea:	mov    ah,BYTE PTR [ecx]
  4211ec:	xchg   edx,eax
  4211ed:	fbstp  TBYTE PTR [edx+0x70]
  4211f0:	imul   DWORD PTR [edx+0x6e909ccd]
  4211f6:	cmp    DWORD PTR [edi],esp
  4211f8:	inc    edx
  4211f9:	arpl   WORD PTR [ebx-0x53e5d34b],dx
  4211ff:	push   edi
  421200:	jmp    0xe704:0x17b92590
  421207:	jne    0x421286
  421209:	mov    esi,0xe23fe7e5
  42120e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42120f:	jae    0x421191
  421211:	imul   ecx,DWORD PTR [eax],0xc947345e
  421217:	mov    ch,0x9a
  421219:	xor    esi,DWORD PTR [edi+0x5b]
  42121c:	cwde   
  42121d:	(bad)  
  42121e:	push   esi
  42121f:	jne    0x421239
  421221:	dec    edx
  421222:	aaa    
  421223:	inc    edi
  421224:	hlt    
  421225:	enter  0x8094,0xf3
  421229:	sub    eax,0x674bc33a
  42122e:	inc    esp
  42122f:	ficomp WORD PTR [edi]
  421231:	mov    edx,0xb83cb5
  421236:	std    
  421237:	fld    TBYTE PTR [edx-0x6c]
  42123a:	sar    cl,0x4b
  42123d:	stos   BYTE PTR es:[edi],al
  42123e:	adc    eax,0xad245e27
  421243:	push   0x3d
  421245:	scas   al,BYTE PTR es:[edi]
  421246:	pop    ecx
  421247:	mov    eax,ds:0xbdde3b50
  42124c:	adc    BYTE PTR [eax],dh
  42124e:	cmp    ah,BYTE PTR [eax]
  421250:	test   eax,0x186af85d
  421255:	xor    ch,BYTE PTR [eax+edi*8]
  421258:	shr    DWORD PTR [ecx-0x5f],cl
  42125b:	loop   0x42123f
  42125d:	mov    dl,0x91
  42125f:	add    ch,BYTE PTR [eax]
  421261:	add    bh,BYTE PTR [ebp+ebx*1+0x4a5a8985]
  421268:	dec    ebx
  421269:	clc    
  42126a:	pop    es
  42126b:	dec    edi
  42126c:	dec    ebp
  42126d:	shr    DWORD PTR [eax+0x2725efdc],cl
  421273:	xor    BYTE PTR [edx-0x2b],dl
  421276:	lock mov cl,0xf1
  421279:	cdq    
  42127a:	mov    ds:0x3ec40261,eax
  42127f:	test   dl,bl
  421281:	loope  0x4212f9
  421283:	cmp    edi,DWORD PTR [esi-0x23]
  421286:	xor    ecx,esi
  421288:	adc    edx,ebx
  42128a:	das    
  42128b:	into   
  42128c:	adc    al,BYTE PTR [esi-0x4217ff]
  421292:	jge    0x42123b
  421294:	psrlw  mm7,QWORD PTR [edx+ebx*2+0x4a]
  421299:	repnz mov ds:0xa0c650e3,eax
  42129f:	ret    
  4212a0:	and    ebx,DWORD PTR [edi-0x5]
  4212a3:	and    DWORD PTR [esi-0x2953df36],esp
  4212a9:	pop    eax
  4212aa:	xchg   esp,eax
  4212ab:	dec    ecx
  4212ac:	xor    eax,0xb2be5c49
  4212b1:	sub    eax,0xa71974ed
  4212b6:	(bad)  
  4212b7:	push   ebx
  4212b8:	call   0x81550dd4
  4212bd:	adc    DWORD PTR [ebp+0x39],ebx
  4212c0:	int3   
  4212c1:	pop    edi
  4212c2:	inc    eax
  4212c3:	dec    ebp
  4212c4:	mov    eax,ds:0xdef93d0b
  4212c9:	and    al,0x9c
  4212cb:	sysenter 
  4212cd:	dec    esi
  4212ce:	mov    al,0x7e
  4212d0:	jo     0x421350
  4212d2:	sbb    esp,DWORD PTR [edx]
  4212d4:	jno    0x4212c3
  4212d6:	mov    ds:0xdaf17acb,al
  4212db:	hlt    
  4212dc:	pusha  
  4212dd:	push   esp
  4212de:	scas   eax,DWORD PTR es:[edi]
  4212df:	lock aad 0x19
  4212e2:	(bad)  
  4212e3:	jmp    0x4212c3
  4212e5:	adc    dl,ch
  4212e7:	and    BYTE PTR [ecx],bh
  4212e9:	xor    esp,ecx
  4212eb:	dec    esi
  4212ec:	sub    bh,0xdb
  4212ef:	or     eax,0xb967f803
  4212f4:	mov    eax,0x2be0a493
  4212f9:	mov    ds:0x1b5dad26,eax
  4212fe:	cmp    al,0x4e
  421300:	clc    
  421301:	adc    bh,dh
  421303:	adc    bh,BYTE PTR ss:[eax+0x39]
  421307:	mov    ss,esp
  421309:	test   al,0x1c
  42130b:	pop    ds
  42130c:	aam    0x5f
  42130e:	stc    
  42130f:	cdq    
  421310:	nop
  421311:	mov    DWORD PTR [ecx+0x74],0x7716d7e2
  421318:	dec    eax
  421319:	int    0x8b
  42131b:	(bad)  
  42131c:	icebp  
  42131d:	addr16 mov ebx,eax
  421320:	sar    BYTE PTR [esi],1
  421322:	cli    
  421323:	cmp    ebp,DWORD PTR [esi+0x34482e35]
  421329:	add    BYTE PTR [esi+0x5765a6a5],bh
  42132f:	xor    DWORD PTR [eax+0x2212ac6c],esi
  421335:	mov    DWORD PTR [ecx],edi
  421337:	or     bl,BYTE PTR [eax]
  421339:	fcomp  QWORD PTR [esi]
  42133b:	sub    al,0x39
  42133d:	scas   eax,DWORD PTR es:[edi]
  42133e:	jno    0x421343
  421340:	scas   al,BYTE PTR es:[edi]
  421341:	adc    DWORD PTR [ebx-0x3344c274],eax
  421347:	lods   al,BYTE PTR ds:[esi]
  421348:	in     eax,0x17
  42134a:	aam    0x5c
  42134c:	out    dx,eax
  42134d:	gs retf 
  42134f:	mov    edx,?
  421351:	or     dh,BYTE PTR [edx+0x4d]
  421354:	frstor [edi+0x6b75dd5a]
  42135a:	outs   dx,DWORD PTR ds:[esi]
  42135b:	xor    bl,BYTE PTR [ebx]
  42135d:	cmp    DWORD PTR [ebp+0x33ee39a7],eax
  421363:	xor    al,0xf7
  421365:	bts    esp,ebp
  421368:	and    al,0x94
  42136a:	and    BYTE PTR [esi],cl
  42136c:	pop    edi
  42136d:	add    eax,0xcd1af97
  421372:	mov    ah,0x52
  421374:	mov    esi,0x295a8ac6
  421379:	sahf   
  42137a:	push   ds
  42137b:	(bad)  
  42137c:	nop
  42137d:	jmp    0x421322
  42137f:	sbb    esi,ebx
  421381:	inc    esi
  421382:	and    eax,DWORD PTR [edx-0x37b1bb0a]
  421388:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42138a:	sub    ecx,esp
  42138c:	mov    edx,0x5907c3e1
  421391:	sub    al,0x9a
  421393:	ins    BYTE PTR es:[edi],dx
  421394:	pop    ebx
  421395:	inc    edx
  421396:	mov    eax,DWORD PTR [ecx+0x33642ab3]
  42139c:	pushf  
  42139d:	xor    al,0x33
  42139f:	imul   ebp,DWORD PTR [ebp+0x4510f76d],0xffffffd1
  4213a6:	dec    ebx
  4213a7:	pop    ss
  4213a8:	and    DWORD PTR [edx-0x1ee7e39e],edx
  4213ae:	(bad)  
  4213af:	cwde   
  4213b0:	mov    al,0x57
  4213b2:	retf   0xd056
  4213b5:	dec    edx
  4213b6:	ret    0xb029
  4213b9:	shr    edi,cl
  4213bb:	sbb    edi,esi
  4213bd:	mov    eax,ds:0x388d131e
  4213c2:	pop    ecx
  4213c3:	retf   0xd70c
  4213c6:	loop   0x421447
  4213c8:	sbb    al,0x9b
  4213ca:	mov    dh,0x9c
  4213cc:	aam    0x3d
  4213ce:	sbb    BYTE PTR [edx-0x640c1c69],0x67
  4213d5:	(bad)  
  4213d6:	test   eax,0x91e8291e
  4213db:	add    bh,dh
  4213dd:	adc    BYTE PTR [ecx-0x7d65079b],bh
  4213e3:	test   eax,0xc5dd07a2
  4213e8:	jmp    0x4d2c5b11
  4213ed:	mov    ds:0x64600444,al
  4213f2:	add    ch,dh
  4213f4:	shr    DWORD PTR [ebp+0x5],cl
  4213f7:	or     dh,BYTE PTR [esi+0x2bb02de7]
  4213fd:	dec    ebp
  4213fe:	sti    
  4213ff:	fadd   st(0),st
  421401:	rol    BYTE PTR [edi],0xae
  421404:	ins    DWORD PTR es:[edi],dx
  421405:	sub    DWORD PTR [esi-0xaa0a6e3],ecx
  42140b:	xchg   esi,eax
  42140c:	outs   dx,DWORD PTR ds:[esi]
  42140d:	sbb    edi,DWORD PTR [eax-0x46588596]
  421413:	push   ss
  421414:	mov    ds:0x36fd70cc,eax
  421419:	lahf   
  42141a:	repnz outs dx,DWORD PTR ds:[esi]
  42141c:	or     BYTE PTR [eax-0x1aaaa058],cl
  421422:	jnp    0x4213fd
  421424:	test   DWORD PTR [ecx],0x719b31d0
  42142a:	xor    dl,bl
  42142c:	stc    
  42142d:	dec    ebp
  42142e:	aas    
  42142f:	mov    esp,0x5451745f
  421434:	jb     0x4213fb
  421436:	and    cl,BYTE PTR [ebx]
  421438:	fcomip st,st(2)
  42143a:	jmp    0xc8d3:0xa3f3dc11
  421441:	test   al,0x15
  421443:	and    DWORD PTR [ebp-0xa7f59e4],esp
  421449:	(bad)  
  42144a:	sbb    al,0x5b
  42144c:	push   cs
  42144d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42144e:	mov    esi,0xda0c8f2b
  421453:	stos   BYTE PTR es:[edi],al
  421454:	fwait
  421455:	inc    esp
  421456:	lock sub al,0xf6
  421459:	mov    eax,ds:0x62bcca79
  42145e:	sub    al,0xf8
  421460:	fisttp QWORD PTR [ebx]
  421462:	out    dx,eax
  421463:	mov    al,0x2e
  421465:	push   ebp
  421466:	xchg   ecx,eax
  421467:	lds    ecx,FWORD PTR [ecx-0x29]
  42146a:	enter  0x5088,0xa2
  42146e:	push   0xce369065
  421473:	inc    ecx
  421474:	fwait
  421475:	je     0x4213fb
  421477:	sbb    al,0xcc
  421479:	je     0x421484
  42147b:	push   ecx
  42147c:	sbb    ch,BYTE PTR [ecx-0x586ce0f4]
  421482:	in     al,dx
  421483:	bound  esi,QWORD PTR [esp+ecx*2+0x13b717e3]
  42148a:	add    eax,0x37f6e70c
  42148f:	rcl    DWORD PTR [edx+0x13a04215],1
  421495:	or     DWORD PTR [eax-0x1f],0x5f0393d2
  42149c:	sbb    al,0x32
  42149e:	out    dx,eax
  42149f:	cwde   
  4214a0:	arpl   WORD PTR [ecx+esi*1],sp
  4214a3:	jno    0x421505
  4214a5:	mul    DWORD PTR [edi+eiz*1]
  4214a8:	inc    edi
  4214a9:	setne  BYTE PTR [esi+edx*1+0x34]
  4214ae:	repnz adc DWORD PTR [edi-0xd],ebp
  4214b2:	and    esi,DWORD PTR [ecx]
  4214b4:	adc    BYTE PTR cs:[edx],0xee
  4214b8:	ss jb  0x4214bf
  4214bb:	push   ecx
  4214bc:	mov    al,0xe4
  4214be:	bound  ecx,QWORD PTR ds:[eax]
  4214c1:	fiadd  WORD PTR [ebx-0x1de88c7]
  4214c7:	cmp    DWORD PTR [ebp+0x576f1316],eax
  4214cd:	fs jp  0x4214e0
  4214d0:	xchg   DWORD PTR [ebx+0x14],ebx
  4214d3:	aad    0x62
  4214d5:	push   0x56
  4214d7:	sub    ecx,esi
  4214d9:	scas   eax,DWORD PTR es:[edi]
  4214da:	sahf   
  4214db:	pop    ebx
  4214dc:	mov    al,0x98
  4214de:	(bad)  
  4214e0:	nop
  4214e1:	leavew 
  4214e3:	sbb    dl,BYTE PTR [edx+ebx*8-0x72]
  4214e7:	mov    dl,0xf6
  4214e9:	icebp  
  4214ea:	gs push ecx
  4214ec:	jns    0x421569
  4214ee:	stos   BYTE PTR es:[edi],al
  4214ef:	or     DWORD PTR [edi+eax*2-0x24f22298],edi
  4214f6:	xchg   ebp,eax
  4214f7:	sar    BYTE PTR [edi+ebx*4],1
  4214fa:	fdiv   QWORD PTR [esi]
  4214fc:	outs   dx,BYTE PTR ds:[esi]
  4214fd:	xlat   BYTE PTR ds:[ebx]
  4214fe:	sub    DWORD PTR [ebx-0x180eea84],esi
  421504:	pop    ss
  421505:	fnstsw WORD PTR [eax+esi*4+0x4d021201]
  42150c:	xor    al,0x7c
  42150e:	fwait
  42150f:	mov    bh,0xd
  421511:	fmul   DWORD PTR [eax+eax*1]
  421514:	mov    edx,0xae2da22a
  421519:	fistp  DWORD PTR [edi-0x16]
  42151c:	and    BYTE PTR [ecx],dl
  42151e:	shl    esi,0x56
  421521:	and    eax,0x33e570
  421526:	fcom   DWORD PTR [esp-0x76]
  42152a:	std    
  42152b:	jb     0x421572
  42152d:	jnp    0x421580
  42152f:	mov    bh,0x7e
  421531:	xchg   esi,eax
  421532:	lods   al,BYTE PTR ds:[esi]
  421533:	pop    ebp
  421534:	jae    0x421577
  421536:	add    dh,BYTE PTR [esi+0x74]
  421539:	popf   
  42153a:	imul   ecx,DWORD PTR [eax+0x4d3a7774],0x5e618c62
  421544:	pop    ebp
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	mov    DWORD PTR [ebp-0x30],0x0
  42155d:	mov    DWORD PTR [ebp-0x70],0x0
  421564:	mov    DWORD PTR [ebp-0x58],0x0
  42156b:	mov    DWORD PTR [ebp-0x60],0x0
  421572:	mov    DWORD PTR [ebp-0x4c],0x0
  421579:	mov    DWORD PTR [ebp-0x8],0x0
  421580:	mov    DWORD PTR [ebp-0x18],0x0
  421587:	mov    DWORD PTR [ebp-0x48],0x0
  42158e:	mov    DWORD PTR [ebp-0x10],0x0
  421595:	mov    DWORD PTR [ebp-0x6c],0x0
  42159c:	mov    DWORD PTR [ebp-0x54],0x0
  4215a3:	mov    DWORD PTR [ebp-0x4],0x0
  4215aa:	mov    DWORD PTR [ebp-0x2c],0x0
  4215b1:	mov    DWORD PTR [ebp-0x50],0x0
  4215b8:	mov    DWORD PTR [ebp-0x68],0x0
  4215bf:	mov    DWORD PTR [ebp-0xc],0x0
  4215c6:	mov    DWORD PTR [ebp-0x5c],0x0
  4215cd:	mov    DWORD PTR [ebp-0x14],0x0
  4215d4:	mov    eax,ds:0x428150
  4215d9:	mov    DWORD PTR [ebp-0x28],eax
  4215dc:	mov    ecx,DWORD PTR ds:0x428154
  4215e2:	mov    DWORD PTR [ebp-0x24],ecx
  4215e5:	mov    edx,DWORD PTR ds:0x428158
  4215eb:	mov    DWORD PTR [ebp-0x20],edx
  4215ee:	mov    al,ds:0x42815c
  4215f3:	mov    BYTE PTR [ebp-0x1c],al
  4215f6:	mov    ecx,DWORD PTR ds:0x428140
  4215fc:	mov    DWORD PTR [ebp-0x40],ecx
  4215ff:	mov    edx,DWORD PTR ds:0x428144
  421605:	mov    DWORD PTR [ebp-0x3c],edx
  421608:	mov    eax,ds:0x428148
  42160d:	mov    DWORD PTR [ebp-0x38],eax
  421610:	mov    cx,WORD PTR ds:0x42814c
  421617:	mov    WORD PTR [ebp-0x34],cx
  42161b:	mov    dl,BYTE PTR ds:0x42814e
  421621:	mov    BYTE PTR [ebp-0x32],dl
  421624:	mov    DWORD PTR [ebp-0x2c],0x40
  42162b:	mov    eax,DWORD PTR [ebp-0x60]
  42162e:	push   eax
  42162f:	push   0x0
  421631:	push   0x0
  421633:	mov    ecx,DWORD PTR [ebp-0x68]
  421636:	push   ecx
  421637:	call   0x422a10
  42163c:	lea    edx,[ebp-0xc]
  42163f:	push   edx
  421640:	lea    eax,[ebp-0xc]
  421643:	push   eax
  421644:	lea    ecx,[ebp-0x14]
  421647:	push   ecx
  421648:	call   DWORD PTR ds:0x428004
  42164e:	test   eax,eax
  421650:	je     0x42166b
  421652:	mov    edx,DWORD PTR [ebp-0x60]
  421655:	push   edx
  421656:	push   0x8
  421658:	mov    eax,DWORD PTR [ebp-0x68]
  42165b:	push   eax
  42165c:	call   DWORD PTR ds:0x428030
  421662:	mov    ecx,DWORD PTR [ebp-0xc]
  421665:	add    ecx,0x1
  421668:	mov    DWORD PTR [ebp-0xc],ecx
  42166b:	push   0x0
  42166d:	push   0x0
  42166f:	push   0x0
  421671:	call   DWORD PTR ds:0x428000
  421677:	mov    BYTE PTR [ebp-0x40],0x56
  42167b:	call   DWORD PTR ds:0x42803c
  421681:	mov    DWORD PTR [ebp-0x30],eax
  421684:	mov    BYTE PTR [ebp-0x3e],0x72
  421688:	movzx  edx,WORD PTR [ebp-0x30]
  42168c:	test   edx,edx
  42168e:	jne    0x4216e0
  421690:	mov    BYTE PTR [ebp-0x34],0x0
  421694:	mov    DWORD PTR [ebp-0x14],0xe0d
  42169b:	lea    eax,[ebp-0x28]
  42169e:	push   eax
  42169f:	call   DWORD PTR ds:0x428044
  4216a5:	mov    DWORD PTR [ebp-0x60],eax
  4216a8:	mov    DWORD PTR [ebp-0x58],0x3a
  4216af:	lea    ecx,[ebp-0x40]
  4216b2:	push   ecx
  4216b3:	mov    edx,DWORD PTR [ebp-0x60]
  4216b6:	push   edx
  4216b7:	call   DWORD PTR ds:0x428040
  4216bd:	mov    DWORD PTR [ebp-0x44],eax
  4216c0:	mov    DWORD PTR [ebp-0x4],0xa473198e
  4216c7:	push   0x3
  4216c9:	push   0x0
  4216cb:	push   0x0
  4216cd:	mov    eax,DWORD PTR [ebp-0x68]
  4216d0:	push   eax
  4216d1:	call   DWORD PTR ds:0x42812c
  4216d7:	mov    DWORD PTR [ebp-0x6c],0x10e7cf
  4216de:	jmp    0x421701
  4216e0:	mov    BYTE PTR ds:0x445fe8,0x0
  4216e7:	mov    BYTE PTR ds:0x42d1f0,0x0
  4216ee:	push   0x0
  4216f0:	mov    ecx,DWORD PTR [ebp-0x60]
  4216f3:	push   ecx
  4216f4:	call   DWORD PTR ds:0x42800c
  4216fa:	mov    BYTE PTR ds:0x4439a8,0x0
  421701:	push   DWORD PTR [ebp-0x2c]
  421704:	push   0x1000
  421709:	mov    eax,DWORD PTR [ebp-0x14]
  42170c:	add    eax,0x23
  42170f:	add    eax,0x23
  421712:	push   eax
  421713:	xor    eax,eax
  421715:	push   eax
  421716:	mov    ecx,DWORD PTR [ebp-0x44]
  421719:	call   ecx
  42171b:	mov    edx,eax
  42171d:	mov    DWORD PTR [ebp-0x8],edx
  421720:	mov    edx,DWORD PTR [ebp-0x6c]
  421723:	sub    edx,0xdae0b
  421729:	mov    DWORD PTR [ebp-0x6c],edx
  42172c:	cmp    DWORD PTR [ebp-0x8],0x0
  421730:	jne    0x42174d
  421732:	mov    eax,DWORD PTR [ebp-0x68]
  421735:	push   eax
  421736:	push   0x0
  421738:	mov    ecx,DWORD PTR [ebp-0x60]
  42173b:	push   ecx
  42173c:	push   0x1
  42173e:	push   0x0
  421740:	call   DWORD PTR ds:0x428120
  421746:	mov    BYTE PTR ds:0x4439a8,0x0
  42174d:	mov    edx,DWORD PTR [ebp-0x8]
  421750:	add    edx,DWORD PTR [ebp-0x14]
  421753:	mov    eax,DWORD PTR [ebp-0x4]
  421756:	mov    DWORD PTR [edx],eax
  421758:	mov    DWORD PTR [ebp-0x30],0x410000
  42175f:	mov    ecx,DWORD PTR [ebp-0x60]
  421762:	push   ecx
  421763:	call   DWORD PTR ds:0x428048
  421769:	call   DWORD PTR ds:0x428130
  42176f:	push   DWORD PTR ds:0x428044
  421775:	pop    edx
  421776:	mov    DWORD PTR [ebp-0x70],edx
  421779:	mov    edx,DWORD PTR [ebp-0x8]
  42177c:	add    edx,DWORD PTR [ebp-0x58]
  42177f:	mov    DWORD PTR [ebp-0x5c],edx
  421782:	mov    eax,ds:0x428040
  421787:	mov    DWORD PTR [ebp-0x4c],eax
  42178a:	mov    ecx,DWORD PTR [ebp-0x8]
  42178d:	add    ecx,DWORD PTR [ebp-0x14]
  421790:	mov    edx,DWORD PTR [ebp+0x8]
  421793:	mov    DWORD PTR [ecx+0x4],edx
  421796:	mov    eax,DWORD PTR [ebp-0x8]
  421799:	add    eax,DWORD PTR [ebp-0x14]
  42179c:	mov    DWORD PTR [ebp-0x10],eax
  42179f:	mov    ecx,DWORD PTR [ebp-0x68]
  4217a2:	push   ecx
  4217a3:	call   DWORD PTR ds:0x428050
  4217a9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4217ad:	jbe    0x4217ca
  4217af:	mov    edx,DWORD PTR [ebp-0x10]
  4217b2:	push   edx
  4217b3:	mov    eax,DWORD PTR [ebp-0x14]
  4217b6:	push   eax
  4217b7:	mov    ecx,DWORD PTR [ebp-0x30]
  4217ba:	add    ecx,DWORD PTR [ebp-0x6c]
  4217bd:	push   ecx
  4217be:	mov    edx,DWORD PTR [ebp-0x8]
  4217c1:	push   edx
  4217c2:	call   0x411000
  4217c7:	add    esp,0x10
  4217ca:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217ce:	je     0x4217de
  4217d0:	push   DWORD PTR [ebp-0x4c]
  4217d3:	push   DWORD PTR [ebp-0x70]
  4217d6:	mov    edx,DWORD PTR [ebp-0x5c]
  4217d9:	push   eax
  4217da:	jmp    edx
  4217dc:	jmp    0x4217e4
  4217de:	mov    eax,DWORD PTR [ebp+0x8]
  4217e1:	mov    DWORD PTR [ebp-0x18],eax
  4217e4:	mov    eax,0x1
  4217e9:	mov    esp,ebp
  4217eb:	pop    ebp
  4217ec:	ret    
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0xa
  4217f9:	mov    DWORD PTR [ebp-0x4],0x0
  421800:	call   DWORD PTR ds:0x428028
  421806:	mov    esi,DWORD PTR ds:0x42803c
  42180c:	push   0xa
  42180e:	push   0xa
  421810:	push   0x0
  421812:	mov    DWORD PTR [ebp-0x8],esi
  421815:	call   DWORD PTR ds:0x428010
  42181b:	test   esi,esi
  42181d:	jne    0x421829
  42181f:	push   0xa
  421821:	push   esi
  421822:	push   esi
  421823:	call   DWORD PTR ds:0x428024
  421829:	call   DWORD PTR ds:0x428020
  42182f:	push   0x0
  421831:	push   0x4e
  421833:	push   0x1e
  421835:	push   0x0
  421837:	push   0xffffffff
  421839:	call   DWORD PTR ds:0x42801c
  42183f:	test   eax,eax
  421841:	je     0x421852
  421843:	push   0x0
  421845:	push   0x1
  421847:	push   0x0
  421849:	call   DWORD PTR ds:0x428018
  42184f:	mov    DWORD PTR [ebp-0x4],eax
  421852:	mov    esi,DWORD PTR [ebp-0x8]
  421855:	call   esi
  421857:	mov    DWORD PTR [ebp-0x4],eax
  42185a:	cmp    DWORD PTR [ebp-0x4],0x57
  42185e:	jne    0x421879
  421860:	push   0xfc5da031
  421865:	call   0x421550
  42186a:	add    esp,0x4
  42186d:	push   0x1
  42186f:	push   0x0
  421871:	push   0x0
  421873:	call   DWORD PTR ds:0x428128
  421879:	xor    eax,eax
  42187b:	pop    esi
  42187c:	mov    esp,ebp
  42187e:	pop    ebp
  42187f:	ret    
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	call   DWORD PTR ds:0x428034
  42188d:	lea    eax,[esp+0x0]
  421891:	push   eax
  421892:	call   DWORD PTR ds:0x42804c
  421898:	push   0xa
  42189a:	call   DWORD PTR ds:0x428028
  4218a0:	cmp    WORD PTR [esp+0x0],0x0
  4218a6:	je     0x4218c4
  4218a8:	push   0x0
  4218aa:	push   0x0
  4218ac:	push   0x0
  4218ae:	push   0x0
  4218b0:	call   0x422a10
  4218b5:	push   0x0
  4218b7:	call   0x4217f0
  4218bc:	add    esp,0x4
  4218bf:	jmp    0x4229f1
  4218c4:	push   DWORD PTR [edi-0x5c]
  4218c7:	(bad)  
  4218c8:	push   eax
  4218c9:	ins    DWORD PTR es:[edi],dx
  4218ca:	pop    esi
  4218cb:	out    0x3c,al
  4218cd:	jns    0x421948
  4218cf:	mov    ebx,0xfec502e4
  4218d4:	outs   dx,BYTE PTR ds:[esi]
  4218d5:	call   0x3d287748
  4218da:	jge    0x421955
  4218dc:	mov    ebx,0xfe3afda4
  4218e1:	outs   dx,BYTE PTR ds:[esi]
  4218e2:	push   eax
  4218e3:	outs   dx,BYTE PTR ds:[esi]
  4218e4:	pop    esi
  4218e5:	out    0x3c,al
  4218e7:	jge    0x421962
  4218e9:	mov    ebx,0xfe3afde4
  4218ee:	outs   dx,BYTE PTR ds:[esi]
  4218ef:	push   eax
  4218f0:	outs   dx,BYTE PTR ds:[esi]
  4218f1:	pop    esi
  4218f2:	out    0x3c,al
  4218f4:	jge    0x42196f
  4218f6:	mov    ebx,0xfe3afde4
  4218fb:	outs   dx,BYTE PTR ds:[esi]
  4218fc:	push   eax
  4218fd:	outs   dx,BYTE PTR ds:[esi]
  4218fe:	pop    esi
  4218ff:	out    0x3c,al
  421901:	test   DWORD PTR [ecx-0x45],edi
  421904:	in     al,0xf3
  421906:	and    eax,0xda506044
  42190b:	push   edi
  42190c:	sub    ebx,DWORD PTR ds:0x29f778c5
  421912:	fsubr  QWORD PTR [esi-0x6a]
  421915:	pop    es
  421916:	and    ecx,DWORD PTR [esi+0x2e]
  421919:	xchg   esp,eax
  42191a:	push   ebx
  42191b:	sbb    cl,BYTE PTR [ebx]
  42191d:	fimul  DWORD PTR [ecx+0x9f59dd]
  421923:	add    DWORD PTR ds:[edx],ebp
  421926:	(bad)  
  421927:	pop    esi
  421928:	sbb    BYTE PTR [ecx-0x37],bl
  42192b:	xchg   ecx,eax
  42192c:	xchg   ebx,eax
  42192d:	sbb    dl,BYTE PTR [edi+0x112a7000]
  421933:	mov    ch,0x1c
  421935:	adc    BYTE PTR [esi],dl
  421937:	fild   WORD PTR [ecx+0x64f337d3]
  42193d:	je     0x4219ad
  42193f:	pop    esi
  421940:	out    0x3c,al
  421942:	jge    0x4219bd
  421944:	mov    ebx,0xa7c664e3
  421949:	sub    eax,0xa554fca8
  42194e:	(bad)  
  42194f:	out    dx,eax
  421950:	jae    0x42194a
  421952:	sbb    al,0x6f
  421954:	xor    BYTE PTR [esi+0x1645c0b],ah
  42195a:	push   ds
  42195b:	scas   al,BYTE PTR es:[edi]
  42195c:	ja     0x42197f
  42195e:	(bad)  
  421960:	idiv   eax
  421962:	push   es
  421963:	cld    
  421964:	pop    edx
  421965:	ss cmp ebx,edi
  421968:	ss adc eax,0xd1ee2981
  42196e:	mov    ah,0xc7
  421970:	fs push ss
  421972:	xchg   esi,eax
  421973:	int3   
  421974:	in     al,dx
  421975:	jbe    0x421974
  421977:	push   0xa805aeb1
  42197c:	hlt    
  42197d:	and    al,0xd0
  42197f:	outs   dx,DWORD PTR ds:[esi]
  421980:	push   esp
  421981:	mov    esi,0xf873efc4
  421986:	sbb    al,0x6e
  421988:	xor    dh,dl
  42198a:	xchg   edi,eax
  42198b:	ret    0xe164
  42198e:	ds mov esp,0x76433477
  421994:	mul    DWORD PTR [edx-0x65]
  421997:	push   ebx
  421998:	pop    edx
  421999:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42199b:	je     0x4219d3
  42199d:	and    eax,0xbfeeb31c
  4219a2:	ret    0x646c
  4219a5:	or     BYTE PTR [ebx],cl
  4219a7:	push   ecx
  4219a8:	in     al,dx
  4219a9:	jle    0x421930
  4219ab:	jmp    0x42195e
  4219ad:	mov    dh,0x94
  4219af:	pop    ecx
  4219b0:	xchg   esi,eax
  4219b1:	sub    eax,0xe654fca8
  4219b6:	cmp    al,0x7d
  4219b8:	jns    0x421975
  4219ba:	in     al,0xfd
  4219bc:	cmp    ch,BYTE PTR [esi+0x126e502b]
  4219c2:	out    0x3e,eax
  4219c4:	jge    0x42195b
  4219c6:	pop    eax
  4219c7:	mov    ebx,0x6efe3ab2
  4219cc:	push   eax
  4219cd:	outs   dx,BYTE PTR ds:[esi]
  4219ce:	pop    esi
  4219cf:	out    0x3c,al
  4219d1:	popf   
  4219d2:	jns    0x42198c
  4219d4:	in     eax,0xf6
  4219d6:	cmp    esi,esp
  4219d8:	outs   dx,BYTE PTR ds:[esi]
  4219d9:	push   eax
  4219da:	sbb    BYTE PTR [edx-0x1a],0x3c
  4219de:	jns    0x421a5f
  4219e0:	mov    ebx,0xfe3afde4
  4219e5:	outs   dx,DWORD PTR ds:[esi]
  4219e6:	in     eax,dx
  4219e7:	outs   dx,BYTE PTR ds:[esi]
  4219e8:	pop    esi
  4219e9:	out    0x2c,al
  4219eb:	jge    0x421a66
  4219ed:	mov    ebx,0xfe3af8e4
  4219f2:	outs   dx,BYTE PTR ds:[esi]
  4219f3:	adc    DWORD PTR [esi+0x5e],ebp
  4219f6:	idiv   BYTE PTR [edi*2-0x21b4687]
  4219fd:	aas    
  4219fe:	(bad)  
  4219ff:	outs   dx,DWORD PTR ds:[esi]
  421a00:	push   eax
  421a01:	outs   dx,BYTE PTR ds:[esi]
  421a02:	pop    esi
  421a03:	out    0x3c,al
  421a05:	js     0x421a80
  421a07:	mov    edx,0xfe3afde4
  421a0c:	outs   dx,BYTE PTR ds:[esi]
  421a0d:	push   eax
  421a0e:	out    dx,al
  421a0f:	push   ebp
  421a10:	out    0x3c,al
  421a12:	jns    0x421a8d
  421a14:	mov    ebx,0xfe3fcc59
  421a19:	ins    BYTE PTR es:[edi],dx
  421a1a:	push   eax
  421a1b:	outs   dx,BYTE PTR ds:[esi]
  421a1c:	fsubrp st(6),st
  421a1e:	cmp    al,0x6d
  421a20:	jns    0x4219dd
  421a22:	hlt    
  421a23:	std    
  421a24:	cmp    bh,dh
  421a26:	outs   dx,BYTE PTR ds:[esi]
  421a27:	inc    eax
  421a28:	outs   dx,BYTE PTR ds:[esi]
  421a29:	pop    esi
  421a2a:	idiv   BYTE PTR [edi*2-0x21b4487]
  421a31:	sub    bh,dh
  421a33:	outs   dx,BYTE PTR ds:[esi]
  421a34:	push   eax
  421a35:	outs   dx,BYTE PTR ds:[esi]
  421a36:	pop    esi
  421a37:	out    0x3c,al
  421a39:	jge    0x421ab4
  421a3b:	mov    ebx,0xf55479e4
  421a40:	outs   dx,BYTE PTR ds:[esi]
  421a41:	cmp    DWORD PTR [ebp+0x5e],ebp
  421a44:	out    0x3c,al
  421a46:	dec    ebp
  421a47:	jb     0x421a04
  421a49:	sub    eax,eax
  421a4b:	cmp    bh,dh
  421a4d:	outs   dx,BYTE PTR ds:[esi]
  421a4e:	push   eax
  421a4f:	outs   dx,BYTE PTR ds:[esi]
  421a50:	pop    esi
  421a51:	out    0x3c,al
  421a53:	jge    0x421ace
  421a55:	mov    ebx,0xfe3afde4
  421a5a:	outs   dx,BYTE PTR ds:[esi]
  421a5b:	push   eax
  421a5c:	outs   dx,BYTE PTR ds:[esi]
  421a5d:	pop    esi
  421a5e:	out    0x3c,al
  421a60:	jge    0x421adb
  421a62:	mov    ebx,0xfe3afde4
  421a67:	outs   dx,BYTE PTR ds:[esi]
  421a68:	push   eax
  421a69:	outs   dx,BYTE PTR ds:[esi]
  421a6a:	pop    esi
  421a6b:	out    0x3c,al
  421a6d:	jge    0x421ae8
  421a6f:	mov    ebx,0xfe3afde4
  421a74:	outs   dx,BYTE PTR ds:[esi]
  421a75:	push   eax
  421a76:	outs   dx,BYTE PTR ds:[esi]
  421a77:	pop    esi
  421a78:	out    0x3c,al
  421a7a:	jge    0x421af5
  421a7c:	mov    ebx,0xfe3afde4
  421a81:	outs   dx,BYTE PTR ds:[esi]
  421a82:	push   eax
  421a83:	outs   dx,BYTE PTR ds:[esi]
  421a84:	pop    esi
  421a85:	out    0x3c,al
  421a87:	jge    0x421b02
  421a89:	mov    ebx,0xfe3afde4
  421a8e:	outs   dx,BYTE PTR ds:[esi]
  421a8f:	push   eax
  421a90:	outs   dx,BYTE PTR ds:[esi]
  421a91:	pop    esi
  421a92:	out    0x3c,al
  421a94:	jge    0x421b0f
  421a96:	mov    ebx,0xfe3afde4
  421a9b:	outs   dx,BYTE PTR ds:[esi]
  421a9c:	push   eax
  421a9d:	outs   dx,BYTE PTR ds:[esi]
  421a9e:	pop    esi
  421a9f:	out    0x3c,al
  421aa1:	jge    0x421b1c
  421aa3:	mov    ebx,0xfe3afde4
  421aa8:	outs   dx,BYTE PTR ds:[esi]
  421aa9:	push   eax
  421aaa:	outs   dx,BYTE PTR ds:[esi]
  421aab:	pop    esi
  421aac:	out    0x3c,al
  421aae:	jge    0x421b29
  421ab0:	mov    ebx,0xfe3afde4
  421ab5:	inc    eax
  421ab6:	and    al,0xb
  421ab8:	es xchg edx,eax
  421aba:	cmp    al,0x7d
  421abc:	jns    0x421a79
  421abe:	(bad)  
  421abf:	idiv   BYTE PTR [edx]
  421ac1:	(bad)  
  421ac2:	jle    0x421b14
  421ac4:	outs   dx,BYTE PTR ds:[esi]
  421ac5:	pop    esi
  421ac6:	fdivr  QWORD PTR [eax]
  421ac8:	jge    0x421b43
  421aca:	mov    edi,0xbb6afde4
  421acf:	sub    eax,0xe6113a62
  421ad4:	cmp    al,0x7d
  421ad6:	jns    0x421a93
  421ad8:	in     al,0xdd
  421ada:	cmp    bh,dh
  421adc:	mov    ?,WORD PTR [esi+0x1c]
  421adf:	sub    eax,0x797d5f94
  421ae4:	mov    ebx,0xfe3aade4
  421ae9:	outs   dx,BYTE PTR ds:[esi]
  421aea:	pusha  
  421aeb:	gs pop esi
  421aed:	out    0x6c,al
  421aef:	jge    0x421b6a
  421af1:	mov    ebx,0xfe3af9da
  421af6:	outs   dx,BYTE PTR ds:[esi]
  421af7:	push   eax
  421af8:	outs   dx,BYTE PTR ds:[esi]
  421af9:	pop    esi
  421afa:	out    0x3c,al
  421afc:	jge    0x421b77
  421afe:	mov    ebx,0xfe1afde4
  421b03:	outs   dx,BYTE PTR ds:[esi]
  421b04:	mov    al,0x6e
  421b06:	pop    esi
  421b07:	out    0x3c,al
  421b09:	jge    0x421b84
  421b0b:	mov    ebx,0xfe3afde4
  421b10:	outs   dx,BYTE PTR ds:[esi]
  421b11:	push   eax
  421b12:	outs   dx,BYTE PTR ds:[esi]
  421b13:	pop    esi
  421b14:	out    0x3c,al
  421b16:	jge    0x421b91
  421b18:	mov    ebx,0xfe3afde4
  421b1d:	outs   dx,BYTE PTR ds:[esi]
  421b1e:	push   eax
  421b1f:	outs   dx,BYTE PTR ds:[esi]
  421b20:	pop    esi
  421b21:	out    0x3c,al
  421b23:	jge    0x421b9e
  421b25:	mov    ebx,0xfe3afde4
  421b2a:	outs   dx,BYTE PTR ds:[esi]
  421b2b:	push   eax
  421b2c:	outs   dx,BYTE PTR ds:[esi]
  421b2d:	pop    esi
  421b2e:	out    0x3c,al
  421b30:	jge    0x421bab
  421b32:	mov    ebx,0xfe3afde4
  421b37:	outs   dx,BYTE PTR ds:[esi]
  421b38:	push   eax
  421b39:	outs   dx,BYTE PTR ds:[esi]
  421b3a:	pop    esi
  421b3b:	out    0x3c,al
  421b3d:	jge    0x421bb8
  421b3f:	mov    ebx,0xfe3afde4
  421b44:	outs   dx,BYTE PTR ds:[esi]
  421b45:	push   eax
  421b46:	outs   dx,BYTE PTR ds:[esi]
  421b47:	pop    esi
  421b48:	out    0x3c,al
  421b4a:	jge    0x421bc5
  421b4c:	mov    ebx,0xfe3afde4
  421b51:	outs   dx,BYTE PTR ds:[esi]
  421b52:	push   eax
  421b53:	outs   dx,BYTE PTR ds:[esi]
  421b54:	pop    esi
  421b55:	out    0x3c,al
  421b57:	jge    0x421bd2
  421b59:	mov    ebx,0xfe3afde4
  421b5e:	outs   dx,BYTE PTR ds:[esi]
  421b5f:	push   eax
  421b60:	outs   dx,BYTE PTR ds:[esi]
  421b61:	pop    esi
  421b62:	out    0x3c,al
  421b64:	jge    0x421bdf
  421b66:	mov    ebx,0xfe3afde4
  421b6b:	outs   dx,BYTE PTR ds:[esi]
  421b6c:	push   eax
  421b6d:	outs   dx,BYTE PTR ds:[esi]
  421b6e:	pop    esi
  421b6f:	out    0x3c,al
  421b71:	jge    0x421bec
  421b73:	mov    ebx,0xfe3afde4
  421b78:	outs   dx,BYTE PTR ds:[esi]
  421b79:	push   eax
  421b7a:	outs   dx,BYTE PTR ds:[esi]
  421b7b:	pop    esi
  421b7c:	out    0x3c,al
  421b7e:	jge    0x421bf9
  421b80:	mov    ebx,0xfe3afde4
  421b85:	outs   dx,BYTE PTR ds:[esi]
  421b86:	push   eax
  421b87:	outs   dx,BYTE PTR ds:[esi]
  421b88:	pop    esi
  421b89:	out    0x3c,al
  421b8b:	jge    0x421c06
  421b8d:	mov    ebx,0xfe3afde4
  421b92:	outs   dx,BYTE PTR ds:[esi]
  421b93:	push   eax
  421b94:	outs   dx,BYTE PTR ds:[esi]
  421b95:	pop    esi
  421b96:	out    0x3c,al
  421b98:	jge    0x421c13
  421b9a:	mov    ebx,0xfe3afde4
  421b9f:	outs   dx,BYTE PTR ds:[esi]
  421ba0:	push   eax
  421ba1:	outs   dx,BYTE PTR ds:[esi]
  421ba2:	pop    esi
  421ba3:	out    0x3c,al
  421ba5:	jge    0x421c20
  421ba7:	mov    ebx,0xfe3afde4
  421bac:	outs   dx,BYTE PTR ds:[esi]
  421bad:	push   eax
  421bae:	outs   dx,BYTE PTR ds:[esi]
  421baf:	pop    esi
  421bb0:	out    0x3c,al
  421bb2:	jge    0x421c2d
  421bb4:	mov    ebx,0xfe3afde4
  421bb9:	outs   dx,BYTE PTR ds:[esi]
  421bba:	push   eax
  421bbb:	outs   dx,BYTE PTR ds:[esi]
  421bbc:	pop    esi
  421bbd:	out    0x3c,al
  421bbf:	jge    0x421c3a
  421bc1:	mov    ebx,0xfe3afde4
  421bc6:	outs   dx,BYTE PTR ds:[esi]
  421bc7:	push   eax
  421bc8:	outs   dx,BYTE PTR ds:[esi]
  421bc9:	pop    esi
  421bca:	out    0x3c,al
  421bcc:	jge    0x421c47
  421bce:	mov    ebx,0xfe3afde4
  421bd3:	outs   dx,BYTE PTR ds:[esi]
  421bd4:	push   eax
  421bd5:	outs   dx,BYTE PTR ds:[esi]
  421bd6:	pop    esi
  421bd7:	out    0x3c,al
  421bd9:	jge    0x421c54
  421bdb:	mov    ebx,0xfe3afde4
  421be0:	outs   dx,BYTE PTR ds:[esi]
  421be1:	push   eax
  421be2:	outs   dx,BYTE PTR ds:[esi]
  421be3:	pop    esi
  421be4:	out    0x3c,al
  421be6:	jge    0x421c61
  421be8:	mov    ebx,0xfe3afde4
  421bed:	outs   dx,BYTE PTR ds:[esi]
  421bee:	push   eax
  421bef:	outs   dx,BYTE PTR ds:[esi]
  421bf0:	pop    esi
  421bf1:	out    0x3c,al
  421bf3:	jge    0x421c6e
  421bf5:	mov    ebx,0xfe3afde4
  421bfa:	outs   dx,BYTE PTR ds:[esi]
  421bfb:	push   eax
  421bfc:	outs   dx,BYTE PTR ds:[esi]
  421bfd:	pop    esi
  421bfe:	out    0x3c,al
  421c00:	jge    0x421c7b
  421c02:	mov    ebx,0xfe3afde4
  421c07:	outs   dx,BYTE PTR ds:[esi]
  421c08:	push   eax
  421c09:	outs   dx,BYTE PTR ds:[esi]
  421c0a:	pop    esi
  421c0b:	out    0x3c,al
  421c0d:	jge    0x421c88
  421c0f:	mov    ebx,0xfe3afde4
  421c14:	outs   dx,BYTE PTR ds:[esi]
  421c15:	push   eax
  421c16:	outs   dx,BYTE PTR ds:[esi]
  421c17:	pop    esi
  421c18:	out    0x3c,al
  421c1a:	jge    0x421c95
  421c1c:	mov    ebx,0xfe3afde4
  421c21:	outs   dx,BYTE PTR ds:[esi]
  421c22:	push   eax
  421c23:	outs   dx,BYTE PTR ds:[esi]
  421c24:	pop    esi
  421c25:	out    0x3c,al
  421c27:	jge    0x421ca2
  421c29:	mov    ebx,0xfe3afde4
  421c2e:	outs   dx,BYTE PTR ds:[esi]
  421c2f:	push   eax
  421c30:	outs   dx,BYTE PTR ds:[esi]
  421c31:	pop    esi
  421c32:	out    0x3c,al
  421c34:	jge    0x421caf
  421c36:	mov    ebx,0xfe3afde4
  421c3b:	outs   dx,BYTE PTR ds:[esi]
  421c3c:	push   eax
  421c3d:	outs   dx,BYTE PTR ds:[esi]
  421c3e:	pop    esi
  421c3f:	out    0x3c,al
  421c41:	jge    0x421cbc
  421c43:	mov    ebx,0xfe3afde4
  421c48:	outs   dx,BYTE PTR ds:[esi]
  421c49:	push   eax
  421c4a:	outs   dx,BYTE PTR ds:[esi]
  421c4b:	pop    esi
  421c4c:	out    0x3c,al
  421c4e:	jge    0x421cc9
  421c50:	mov    ebx,0xfe3afde4
  421c55:	outs   dx,BYTE PTR ds:[esi]
  421c56:	push   eax
  421c57:	outs   dx,BYTE PTR ds:[esi]
  421c58:	pop    esi
  421c59:	out    0x3c,al
  421c5b:	jge    0x421cd6
  421c5d:	mov    ebx,0xfe3afde4
  421c62:	outs   dx,BYTE PTR ds:[esi]
  421c63:	push   eax
  421c64:	outs   dx,BYTE PTR ds:[esi]
  421c65:	pop    esi
  421c66:	out    0x3c,al
  421c68:	jge    0x421ce3
  421c6a:	mov    ebx,0xfe3afde4
  421c6f:	outs   dx,BYTE PTR ds:[esi]
  421c70:	push   eax
  421c71:	outs   dx,BYTE PTR ds:[esi]
  421c72:	pop    esi
  421c73:	out    0x3c,al
  421c75:	jge    0x421cf0
  421c77:	mov    ebx,0xfe3afde4
  421c7c:	outs   dx,BYTE PTR ds:[esi]
  421c7d:	push   eax
  421c7e:	outs   dx,BYTE PTR ds:[esi]
  421c7f:	pop    esi
  421c80:	out    0x3c,al
  421c82:	jge    0x421cfd
  421c84:	mov    ebx,0xfe3afde4
  421c89:	outs   dx,BYTE PTR ds:[esi]
  421c8a:	push   eax
  421c8b:	outs   dx,BYTE PTR ds:[esi]
  421c8c:	pop    esi
  421c8d:	out    0x3c,al
  421c8f:	jge    0x421d0a
  421c91:	mov    ebx,0xfe3afde4
  421c96:	outs   dx,BYTE PTR ds:[esi]
  421c97:	push   eax
  421c98:	outs   dx,BYTE PTR ds:[esi]
  421c99:	pop    esi
  421c9a:	out    0x3c,al
  421c9c:	jge    0x421d17
  421c9e:	mov    ebx,0xfe3afde4
  421ca3:	outs   dx,BYTE PTR ds:[esi]
  421ca4:	push   eax
  421ca5:	outs   dx,BYTE PTR ds:[esi]
  421ca6:	pop    esi
  421ca7:	out    0x3c,al
  421ca9:	jge    0x421d24
  421cab:	mov    ebx,0xfe3afde4
  421cb0:	outs   dx,BYTE PTR ds:[esi]
  421cb1:	push   eax
  421cb2:	outs   dx,BYTE PTR ds:[esi]
  421cb3:	pop    esi
  421cb4:	out    0x3c,al
  421cb6:	jge    0x421d31
  421cb8:	mov    ebx,0xfe3afde4
  421cbd:	outs   dx,BYTE PTR ds:[esi]
  421cbe:	push   eax
  421cbf:	outs   dx,BYTE PTR ds:[esi]
  421cc0:	pop    esi
  421cc1:	out    0x3c,al
  421cc3:	jge    0x421d3e
  421cc5:	cld    
  421cc6:	or     dh,bh
  421cc8:	cmp    dl,cl
  421cca:	outs   dx,BYTE PTR ds:[esi]
  421ccb:	push   eax
  421ccc:	jle    0x421d2c
  421cce:	out    0x16,al
  421cd0:	fbld   TBYTE PTR [ebx+0x170282ca]
  421cd6:	pusha  
  421cd7:	jmp    0xeaa9fdc
  421cdc:	das    
  421cdd:	leave  
  421cde:	in     al,dx
  421cdf:	fst    QWORD PTR [ebp-0x20129f87]
  421ce5:	out    0x78,eax
  421ce7:	xor    eax,DWORD PTR [edx]
  421ce9:	mov    dh,0xfc
  421ceb:	mov    edi,0x56d8695
  421cf0:	(bad)  
  421cf1:	pop    ebp
  421cf2:	pop    ds
  421cf3:	fisttp WORD PTR [ecx-0x3c]
  421cf6:	cmp    al,0x5a
  421cf8:	fidiv  WORD PTR [ebx]
  421cfa:	mov    cl,0xac
  421cfc:	push   edi
  421cfd:	push   edi
  421cfe:	pop    esp
  421cff:	ins    DWORD PTR es:[edi],dx
  421d00:	mov    bl,0x4a
  421d02:	push   edi
  421d03:	pop    esp
  421d04:	ins    DWORD PTR es:[edi],dx
  421d05:	and    bl,BYTE PTR [ebp+0x5f5312f5]
  421d0b:	add    dh,BYTE PTR [edi-0x4ede8d2c]
  421d11:	sub    DWORD PTR [edi-0x5ccf6b73],eax
  421d17:	cld    
  421d18:	into   
  421d19:	cdq    
  421d1a:	push   0xffffffc9
  421d1c:	lahf   
  421d1d:	add    esp,DWORD PTR [ecx+0xc]
  421d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d21:	push   ebp
  421d22:	push   ebx
  421d23:	in     eax,dx
  421d24:	gs mov dh,0x17
  421d27:	and    al,0x52
  421d29:	scas   eax,DWORD PTR es:[edi]
  421d2a:	xor    DWORD PTR [ecx],edx
  421d2c:	ret    
  421d2d:	xor    ecx,ebp
  421d2f:	mov    ch,0xc4
  421d31:	sbb    BYTE PTR [ecx-0x4fc49b93],bl
  421d37:	mov    bh,BYTE PTR [esi+0x2b847be7]
  421d3d:	jno    0x421cfc
  421d3f:	mov    dh,BYTE PTR [edx-0x40527179]
  421d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d46:	push   edx
  421d47:	sbb    esp,eax
  421d49:	push   ss
  421d4a:	mov    cl,0x60
  421d4c:	sub    dh,BYTE PTR [edx+0x3bc52cb9]
  421d52:	push   eax
  421d53:	stos   BYTE PTR es:[edi],al
  421d54:	imul   eax,ebp,0xffffff98
  421d57:	pusha  
  421d58:	mov    dh,0x50
  421d5a:	add    ebp,ebp
  421d5c:	xchg   edx,eax
  421d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d5e:	call   0x3e9598f9
  421d63:	aaa    
  421d64:	clc    
  421d65:	scas   al,BYTE PTR es:[edi]
  421d66:	inc    ebx
  421d67:	jbe    0x421d89
  421d69:	call   0xbadb5f4b
  421d6e:	add    al,0x61
  421d70:	lods   eax,DWORD PTR ds:[esi]
  421d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d72:	popf   
  421d73:	pop    esp
  421d74:	jnp    0x421d55
  421d76:	test   eax,0x9e84c109
  421d7b:	dec    eax
  421d7c:	push   0x36
  421d7e:	pusha  
  421d7f:	xchg   esi,eax
  421d80:	inc    ebx
  421d81:	cmp    ch,BYTE PTR [edx-0x5c]
  421d84:	push   0x81e1fb7b
  421d89:	jp     0x421d96
  421d8b:	xor    edi,DWORD PTR [eax-0x39]
  421d8e:	pop    ecx
  421d8f:	mov    ebx,0xad9b4590
  421d94:	lods   eax,DWORD PTR ds:[esi]
  421d95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d96:	inc    ecx
  421d97:	fnstsw ax
  421d99:	es mov ch,0x6c
  421d9c:	pop    edx
  421d9d:	ins    BYTE PTR es:[edi],dx
  421d9e:	or     bl,BYTE PTR [edi-0x33]
  421da1:	push   ss
  421da2:	stos   BYTE PTR es:[edi],al
  421da3:	push   es
  421da4:	loopne 0x421de7
  421da6:	stos   BYTE PTR es:[edi],al
  421da7:	mov    edx,0x7673ff02
  421dac:	add    eax,0x2f3fee2f
  421db1:	cs pushf 
  421db3:	and    eax,0xcd357b29
  421db8:	and    cl,BYTE PTR [esi+0x3f09d18f]
  421dbe:	inc    ecx
  421dbf:	cmp    DWORD PTR [ebp+0x58d5030d],esp
  421dc5:	addr16 jb 0x421daa
  421dc8:	loopne 0x421da2
  421dca:	cli    
  421dcb:	cmp    BYTE PTR [ecx],0x71
  421dce:	inc    ebp
  421dcf:	sti    
  421dd0:	mov    eax,ds:0x1b0e3c1b
  421dd5:	aas    
  421dd6:	hlt    
  421dd7:	inc    ebx
  421dd8:	(bad)  
  421dd9:	lods   eax,DWORD PTR ds:[esi]
  421dda:	clc    
  421ddb:	cwde   
  421ddc:	sar    DWORD PTR [ecx-0x13523340],1
  421de2:	push   ebp
  421de3:	xchg   ecx,eax
  421de4:	mov    ah,0xb8
  421de6:	add    DWORD PTR [eax-0x7f],esp
  421de9:	inc    edi
  421dea:	std    
  421deb:	mov    al,0xf5
  421ded:	cmp    DWORD PTR [ebp+0x6012477b],0xa18c2d5e
  421df7:	or     al,BYTE PTR [edi+0x5f]
  421dfa:	rol    DWORD PTR [esp+edi*1-0x203be317],1
  421e01:	hlt    
  421e02:	xchg   ecx,eax
  421e03:	jl     0x421e1d
  421e05:	outs   dx,BYTE PTR ds:[esi]
  421e06:	xchg   ebx,eax
  421e07:	(bad)  
  421e08:	pushf  
  421e09:	and    BYTE PTR [esi+0x12],cl
  421e0c:	ds in  al,dx
  421e0e:	stc    
  421e0f:	cs add al,bh
  421e12:	ss push ss
  421e14:	xor    dh,BYTE PTR [ecx+0x45]
  421e17:	scas   al,BYTE PTR es:[edi]
  421e18:	mov    eax,ds:0xfb3ad550
  421e1d:	xchg   BYTE PTR ds:0xdb421bad,ah
  421e23:	mov    BYTE PTR ds:0x3f88d413,al
  421e29:	or     al,dh
  421e2b:	cmp    ebp,0x17
  421e2e:	or     bl,BYTE PTR [eax+0x75b60399]
  421e34:	push   ebp
  421e35:	dec    ebp
  421e36:	cmc    
  421e37:	mov    esp,0x31b9ec65
  421e3c:	loope  0x421ea8
  421e3e:	dec    edx
  421e3f:	jno    0x421ea3
  421e41:	sbb    DWORD PTR [eax],0x204e919f
  421e47:	shl    BYTE PTR [ebx],cl
  421e49:	and    esp,ebx
  421e4b:	xchg   esi,ebp
  421e4d:	sahf   
  421e4e:	push   ss
  421e4f:	pop    ds
  421e50:	les    ebx,FWORD PTR [edx]
  421e52:	or     ah,BYTE PTR [ebx-0x6b]
  421e55:	and    eax,DWORD PTR [eax+0x27a961eb]
  421e5b:	inc    esp
  421e5c:	xlat   BYTE PTR ds:[ebx]
  421e5d:	stos   BYTE PTR es:[edi],al
  421e5e:	add    bh,dl
  421e60:	loope  0x421ea1
  421e62:	pop    ebx
  421e63:	cli    
  421e64:	mov    al,0x4b
  421e66:	or     BYTE PTR [edx-0x3d],0xe3
  421e6a:	lea    edx,[ecx+0x40aec9d3]
  421e70:	aad    0x4f
  421e72:	add    eax,DWORD PTR ds:[edi+0x2f]
  421e76:	dec    ecx
  421e77:	jge    0x421eb7
  421e79:	mov    bh,0x9
  421e7b:	arpl   WORD PTR [edx+esi*4-0x23723fe],dx
  421e82:	iret   
  421e83:	and    eax,eax
  421e85:	cmp    al,BYTE PTR [esp+ebp*8+0x10]
  421e89:	ror    DWORD PTR [eax+eiz*4-0x6372a567],cl
  421e90:	or     bl,ch
  421e92:	mul    DWORD PTR [eax+0x56f0c2f0]
  421e98:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e9a:	add    bh,ah
  421e9c:	mov    dl,0x23
  421e9e:	in     al,dx
  421e9f:	ins    DWORD PTR es:[edi],dx
  421ea0:	pop    esp
  421ea1:	test   eax,0x667499af
  421ea6:	add    eax,DWORD PTR ds:0x320b44e3
  421eac:	loop   0x421e48
  421eae:	(bad)  
  421eaf:	dec    edi
  421eb0:	xor    ch,BYTE PTR [ecx-0x42]
  421eb3:	pop    ebx
  421eb4:	mov    al,0x5
  421eb6:	cmp    esp,eax
  421eb8:	jae    0x421f15
  421eba:	push   ss
  421ebb:	leave  
  421ebc:	mov    DWORD PTR [ebx],esi
  421ebe:	cmp    DWORD PTR [edi],esi
  421ec0:	(bad)  
  421ec2:	xchg   ecx,eax
  421ec3:	mov    dl,0x9
  421ec5:	dec    esp
  421ec6:	pop    eax
  421ec7:	mov    dl,0x3
  421ec9:	aad    0xc5
  421ecb:	jmp    0x421ee2
  421ecd:	pop    es
  421ece:	clc    
  421ecf:	cmp    eax,0x8475c52d
  421ed4:	(bad)  
  421ed5:	mov    ch,0x61
  421ed7:	test   eax,0x41d20c3b
  421edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ede:	loopne 0x421f23
  421ee0:	scas   eax,DWORD PTR es:[edi]
  421ee1:	mov    eax,ds:0xdce3cfbd
  421ee6:	xchg   esi,eax
  421ee7:	rcr    DWORD PTR [edi+0x2c],1
  421eea:	ret    0x782f
  421eed:	ror    DWORD PTR [edx+0x669c1795],cl
  421ef3:	ins    DWORD PTR es:[edi],dx
  421ef4:	xlat   BYTE PTR ds:[ebx]
  421ef5:	cdq    
  421ef6:	mov    ah,0x6c
  421ef8:	mov    ah,0x6b
  421efa:	out    0xd4,eax
  421efc:	xor    esp,DWORD PTR [ecx-0x4bd9c43b]
  421f02:	sub    eax,0x11ef3c67
  421f07:	cmp    al,0xca
  421f09:	xor    ch,BYTE PTR [esi]
  421f0b:	mov    esi,0xff72d321
  421f10:	dec    ecx
  421f11:	jle    0x421ec0
  421f13:	fistp  WORD PTR [esi]
  421f15:	test   DWORD PTR [ecx+eax*4+0x66746bf1],eax
  421f1c:	(bad)  
  421f1d:	(bad)  
  421f1e:	mov    dh,0x3
  421f20:	add    BYTE PTR [edx],al
  421f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f23:	jno    0x421eec
  421f25:	inc    ecx
  421f26:	inc    eax
  421f27:	sbb    al,0xa
  421f29:	pop    es
  421f2a:	mov    bh,al
  421f2c:	and    dh,dl
  421f2e:	shl    dl,0xcc
  421f31:	cmp    eax,DWORD PTR [ecx+0x26864574]
  421f37:	push   esp
  421f38:	(bad)  [ebx]
  421f3a:	nop
  421f3b:	cmp    ebp,DWORD PTR [ebp+0x413d130b]
  421f41:	loopne 0x421ed4
  421f43:	fcom   QWORD PTR [ebx-0x44027123]
  421f49:	lea    ecx,[esi-0x26]
  421f4c:	stc    
  421f4d:	push   eax
  421f4e:	xchg   ebx,eax
  421f4f:	ror    BYTE PTR [eax+esi*8],0xa2
  421f53:	mov    DWORD PTR [esi],eax
  421f55:	leave  
  421f56:	cmp    dl,BYTE PTR [edx-0x33]
  421f59:	jle    0x421f46
  421f5b:	inc    esp
  421f5c:	xchg   edx,eax
  421f5d:	push   ds
  421f5e:	push   es
  421f5f:	scas   eax,DWORD PTR es:[edi]
  421f60:	iret   
  421f61:	cmp    cl,BYTE PTR [ebp+0x2d732f4b]
  421f67:	fadd   DWORD PTR [eax+0x7d]
  421f6a:	or     ah,ch
  421f6c:	xchg   ebp,eax
  421f6d:	cmp    BYTE PTR [edx+0x1cbae0c9],dh
  421f73:	mov    eax,0xf08f62aa
  421f78:	sahf   
  421f79:	sahf   
  421f7a:	add    eax,0xcf7efcd0
  421f7f:	pop    ebp
  421f80:	out    dx,eax
  421f81:	cwde   
  421f82:	cpuid  
  421f84:	pop    es
  421f85:	ins    BYTE PTR es:[edi],dx
  421f86:	xlat   BYTE PTR ds:[ebx]
  421f87:	cmc    
  421f88:	inc    ebp
  421f89:	fcomp  st(0)
  421f8b:	stos   DWORD PTR es:[edi],eax
  421f8c:	adc    al,0x5b
  421f8e:	pop    ds
  421f8f:	xchg   ebx,eax
  421f90:	fcmovnbe st,st(6)
  421f92:	sub    ah,BYTE PTR [ecx-0x5d8575be]
  421f98:	push   ss
  421f99:	dec    ebp
  421f9a:	mov    bh,0x5a
  421f9c:	jnp    0x421fa5
  421f9e:	mov    eax,ds:0xc5796970
  421fa3:	adc    BYTE PTR [ebp-0x4],dh
  421fa6:	adc    DWORD PTR [ebx],esi
  421fa8:	repnz adc al,0xa7
  421fab:	sbb    eax,0x2293c25e
  421fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fb1:	sahf   
  421fb2:	add    dh,BYTE PTR [ecx]
  421fb4:	lock (bad) 
  421fb7:	push   ebp
  421fb8:	mov    ds:0x252b0631,eax
  421fbd:	jle    0x421fbe
  421fbf:	or     eax,0x532429bc
  421fc4:	dec    eax
  421fc5:	inc    esp
  421fc6:	jbe    0x422009
  421fc8:	dec    esp
  421fc9:	imul   ebp,DWORD PTR [edx],0xba90f7c0
  421fcf:	repnz and BYTE PTR [esi+ecx*4],dh
  421fd3:	les    esi,FWORD PTR [edi]
  421fd5:	jg     0x421f8a
  421fd7:	push   edx
  421fd8:	jle    0x422022
  421fda:	sub    bh,BYTE PTR [ebp+ebx*4-0x5eb81df0]
  421fe1:	mov    eax,0x81074085
  421fe6:	ja     0x422039
  421fe8:	jb     0x421fd4
  421fea:	cmp    ebx,eax
  421fec:	pop    ebp
  421fed:	pop    es
  421fee:	jge    0x421fda
  421ff0:	outs   dx,BYTE PTR ds:[esi]
  421ff1:	cmp    al,0xed
  421ff3:	push   edx
  421ff4:	adc    eax,0x9525c394
  421ff9:	ret    0xa207
  421ffc:	mov    ch,0xf6
  421ffe:	in     al,dx
  421fff:	ja     0x421fa9
  422001:	add    al,0x3a
  422003:	pop    ebp
  422004:	fsub   QWORD PTR [ebx]
  422006:	adc    al,0x46
  422008:	cmp    al,0x56
  42200a:	loope  0x421fb2
  42200c:	ss js  0x422010
  42200f:	das    
  422010:	dec    esp
  422011:	push   edi
  422012:	je     0x42201a
  422014:	mov    BYTE PTR [edx],bl
  422016:	cmp    eax,0x69cf03af
  42201b:	jmp    DWORD PTR [esi+eiz*4]
  42201e:	add    BYTE PTR [ebx-0x9],0x6d
  422022:	icebp  
  422023:	stos   DWORD PTR es:[edi],eax
  422024:	and    ecx,DWORD PTR [esi-0x7]
  422027:	inc    ebx
  422028:	sub    DWORD PTR [ebx-0x30aa0ace],edi
  42202e:	es test al,0x1f
  422031:	jg     0x422079
  422033:	fnstenv [esi-0xd]
  422036:	loop   0x421fff
  422038:	(bad)  
  422039:	xor    BYTE PTR [eax+ebx*2+0x662fb0e7],dl
  422040:	jbe    0x42201e
  422042:	sub    eax,0x1f9c018f
  422047:	test   DWORD PTR ds:0x194c525b,eax
  42204d:	mov    bl,0x98
  42204f:	mov    ebx,0xfb5ca40f
  422054:	movq   mm4,QWORD PTR [edi+0x3e]
  422058:	fmul   DWORD PTR [esi+0x76e07184]
  42205e:	jno    0x42207b
  422060:	push   esp
  422061:	mov    ch,0x7d
  422063:	sub    eax,0x923eeef0
  422068:	or     ebp,ebp
  42206a:	aam    0x7d
  42206c:	pushf  
  42206d:	push   ds
  42206e:	stos   BYTE PTR es:[edi],al
  42206f:	pop    es
  422070:	or     bh,bh
  422072:	mov    eax,0x3fb9a81c
  422077:	dec    ecx
  422078:	retf   0x8086
  42207b:	out    0xa7,al
  42207d:	push   0x9f0f47b7
  422082:	push   ebp
  422083:	mov    edi,0x2f5afa9e
  422088:	hlt    
  422089:	(bad)  
  42208b:	add    al,0xa3
  42208d:	sbb    eax,0xad7e0e61
  422092:	mov    ah,0x94
  422094:	inc    eax
  422095:	adc    BYTE PTR [edi+0x43f3c6cf],ch
  42209b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42209c:	mov    eax,ds:0xd2b488c6
  4220a1:	jae    0x422055
  4220a3:	jmp    0x422117
  4220a5:	test   al,0x1e
  4220a8:	ret    0x958e
  4220ab:	jbe    0x4220de
  4220ad:	test   bh,al
  4220af:	mov    ebp,0x14cccf26
  4220b4:	dec    esi
  4220b5:	mov    bh,0x70
  4220b7:	mov    al,0xd0
  4220b9:	imul   esp,ecx,0xd9c89473
  4220bf:	add    DWORD PTR ds:0x8f6720ae,edx
  4220c5:	jns    0x4220f7
  4220c7:	leave  
  4220c8:	scas   eax,DWORD PTR es:[edi]
  4220c9:	add    dl,ch
  4220cb:	int3   
  4220cc:	loop   0x42212a
  4220ce:	hlt    
  4220cf:	icebp  
  4220d0:	std    
  4220d1:	dec    ebx
  4220d2:	jns    0x4220ca
  4220d4:	jle    0x422064
  4220d6:	sub    DWORD PTR [ebx],esp
  4220d8:	int3   
  4220d9:	push   ebp
  4220da:	popa   
  4220db:	xchg   sp,ax
  4220dd:	leave  
  4220de:	arpl   WORD PTR [edx+0x75b0f0ba],bx
  4220e4:	in     al,dx
  4220e5:	push   0xffffffaa
  4220e7:	pop    edx
  4220e8:	sub    ch,BYTE PTR ds:[edi-0x6f144870]
  4220ef:	push   ebp
  4220f0:	fimul  DWORD PTR [eax]
  4220f2:	or     esi,edx
  4220f4:	shr    BYTE PTR [ecx],cl
  4220f6:	push   edx
  4220f7:	and    eax,DWORD PTR [edi-0x43048e26]
  4220fd:	mov    ecx,0x90dac6c5
  422102:	adc    esi,DWORD PTR [ecx]
  422104:	xlat   BYTE PTR ds:[ebx]
  422105:	jle    0x422166
  422107:	pop    ds
  422108:	mov    edx,DWORD PTR [eax+0x3c1868ff]
  42210e:	inc    ecx
  42210f:	pop    ss
  422110:	adc    edi,DWORD PTR [edx]
  422112:	ret    
  422113:	mov    ds:0xbe4fc0cf,eax
  422118:	xor    edx,DWORD PTR [ebx]
  42211a:	stc    
  42211b:	out    0x15,al
  42211d:	ins    DWORD PTR es:[edi],dx
  42211e:	out    dx,al
  42211f:	pop    edx
  422120:	fdiv   DWORD PTR [esi+0xa1f4e98]
  422126:	jmp    0x37e0:0xdcf7e9f5
  42212d:	jmp    0xb8e2:0x1201dd26
  422134:	ret    
  422135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422136:	es mov dh,0xe5
  422139:	hlt    
  42213a:	(bad)  
  42213b:	jg     0x4221b6
  42213d:	jecxz  0x4221a3
  42213f:	jnp    0x42216e
  422141:	pop    edi
  422142:	(bad)  
  422143:	or     eax,DWORD PTR [ecx+0x27]
  422146:	mov    eax,ds:0x6562d703
  42214b:	mov    DWORD PTR [eax],esp
  42214d:	or     eax,0x15ed4635
  422152:	pop    edx
  422153:	dec    esp
  422154:	push   cs
  422155:	adc    esi,esp
  422157:	scas   eax,DWORD PTR es:[edi]
  422158:	hlt    
  422159:	jo     0x42210d
  42215b:	call   0xa136f04
  422160:	out    0x1d,eax
  422162:	ret    
  422163:	pop    ecx
  422164:	and    eax,0x49fbb847
  422169:	push   ebp
  42216a:	fcomp  QWORD PTR [edx]
  42216c:	shr    edx,0x67
  42216f:	inc    ebx
  422170:	add    eax,0xbd4b24e7
  422175:	sub    eax,0x1452d521
  42217a:	pop    ecx
  42217b:	lock mov esp,0x796678cd
  422181:	dec    eax
  422182:	mov    cl,0x8b
  422184:	pusha  
  422185:	ins    DWORD PTR es:[edi],dx
  422186:	call   0x4236a35
  42218b:	xchg   ebp,eax
  42218c:	xchg   ecx,eax
  42218d:	push   ebx
  42218e:	movsx  esp,BYTE PTR [esi]
  422191:	dec    esi
  422192:	and    cl,BYTE PTR [eax-0x36]
  422195:	repnz mov ch,BYTE PTR gs:[ebx-0x767525ab]
  42219d:	in     eax,dx
  42219e:	jmp    0x422197
  4221a0:	and    al,0xf1
  4221a2:	(bad)  
  4221a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221a4:	in     eax,dx
  4221a5:	jno    0x4221e3
  4221a7:	addr16 push ecx
  4221a9:	jnp    0x422226
  4221ab:	mov    dl,0x57
  4221ad:	sub    bl,BYTE PTR [esi+ebx*2+0x72aad5f7]
  4221b4:	add    ecx,ebx
  4221b6:	xor    ah,BYTE PTR ds:0x35bd3b3c
  4221bc:	jne    0x4221bd
  4221be:	sub    al,0x76
  4221c0:	dec    ebp
  4221c1:	xor    BYTE PTR [ecx+edi*2-0x4187d115],dh
  4221c8:	pop    ebp
  4221c9:	inc    esp
  4221ca:	jbe    0x4221d4
  4221cc:	icebp  
  4221cd:	push   ebx
  4221ce:	pop    esi
  4221cf:	pcmpgtb mm5,QWORD PTR [ebx+0x62]
  4221d3:	xchg   ecx,eax
  4221d4:	aam    0xbe
  4221d6:	push   0xed580316
  4221db:	(bad)  
  4221dc:	shr    BYTE PTR [esi-0x35],1
  4221df:	push   ebx
  4221e0:	dec    esi
  4221e1:	jmp    FWORD PTR [eax+0x1534d5bd]
  4221e7:	sahf   
  4221e8:	mov    bl,0x87
  4221ea:	push   ds
  4221eb:	outs   dx,BYTE PTR ds:[esi]
  4221ec:	jg     0x4221f4
  4221ee:	push   esp
  4221ef:	pop    esi
  4221f0:	adc    eax,0xa2733bfa
  4221f5:	or     edx,edi
  4221f7:	pusha  
  4221f8:	mov    dl,0x9a
  4221fa:	or     al,0xc5
  4221fc:	das    
  4221fd:	push   es
  4221fe:	fldenv [eax-0x137961e5]
  422204:	sbb    al,0xc1
  422206:	and    edi,DWORD PTR [ebp-0x102356ca]
  42220c:	jmp    0x75f4e43e
  422211:	outs   dx,BYTE PTR ds:[esi]
  422212:	fdivrp st(5),st
  422214:	shl    esi,0x57
  422217:	push   cs
  422218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422219:	dec    ecx
  42221a:	lods   eax,DWORD PTR ds:[esi]
  42221b:	sub    al,0xb1
  42221d:	push   ds
  42221e:	fsub   QWORD PTR [eax]
  422220:	jp     0x42220d
  422222:	in     eax,0x61
  422224:	sub    ch,BYTE PTR [eax-0x46]
  422227:	popa   
  422228:	sbb    ecx,DWORD PTR [eax-0x4b]
  42222b:	inc    edx
  42222c:	fld    QWORD PTR [esi]
  42222e:	dec    esi
  42222f:	mov    dl,0x7e
  422231:	sbb    al,0xd0
  422233:	jnp    0x422245
  422235:	loopne 0x422256
  422237:	loop   0x4221bb
  422239:	mov    ecx,DWORD PTR [ebx-0x1b]
  42223c:	fwait
  42223d:	push   esi
  42223e:	push   ds
  42223f:	adc    BYTE PTR [eax+esi*2+0xd725369],al
  422246:	imul   edx,ebx,0xf669f5ee
  42224c:	icebp  
  42224d:	loopne 0x4222b9
  42224f:	adc    eax,0xcc3d0dc9
  422254:	xor    ah,dl
  422256:	cdq    
  422257:	call   0xce18:0x9768f9f6
  42225e:	mov    al,ds:0xdf0e5c14
  422263:	inc    esi
  422264:	outs   dx,BYTE PTR ds:[esi]
  422265:	cs xchg ch,al
  422268:	vpmacsww ymm3,ymm7,ymm5,YMMWORD PTR [eax]
  42226e:	push   ebx
  42226f:	or     BYTE PTR [eax],dh
  422271:	ret    
  422272:	cmp    eax,0xe56f4e72
  422277:	sar    BYTE PTR [ebp+edx*1-0x2a89c680],cl
  42227e:	push   es
  42227f:	cmp    bl,BYTE PTR [ecx-0x14d966ea]
  422285:	es jne 0x422289
  422288:	dec    eax
  422289:	mov    bh,ah
  42228b:	add    eax,0x38b65b86
  422290:	mov    edx,0x4c7938bf
  422295:	les    esi,FWORD PTR [edx+0x2b]
  422298:	dec    esp
  422299:	push   ds
  42229a:	out    dx,eax
  42229b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42229c:	fsubr  st(7),st
  42229e:	enter  0x46b6,0xdb
  4222a2:	outs   dx,DWORD PTR ds:[esi]
  4222a3:	loop   0x4222ec
  4222a5:	xchg   esi,eax
  4222a6:	int3   
  4222a7:	ins    DWORD PTR es:[edi],dx
  4222a8:	mov    ebx,ecx
  4222aa:	js     0x4222ea
  4222ac:	inc    ecx
  4222ad:	mov    ebx,0x650d347
  4222b2:	push   edi
  4222b3:	in     al,dx
  4222b4:	push   ebx
  4222b5:	daa    
  4222b6:	retf   0x34ce
  4222b9:	cmp    edx,DWORD PTR [eax-0x35]
  4222bc:	popa   
  4222bd:	mov    eax,ds:0xc572259e
  4222c2:	punpcklbw mm2,DWORD PTR [eax+0x7747c9d1]
  4222c9:	mov    bl,0x4f
  4222cb:	push   ds
  4222cc:	nop
  4222cd:	mov    esp,0x4a1153b3
  4222d2:	push   esi
  4222d3:	out    0x24,eax
  4222d5:	mov    edi,cs
  4222d7:	ror    BYTE PTR [ecx+eiz*2],1
  4222da:	mov    ebp,0xfb887f4e
  4222df:	ss es xchg ecx,eax
  4222e2:	xor    al,0x2e
  4222e4:	ins    DWORD PTR es:[edi],dx
  4222e5:	cld    
  4222e6:	adc    ecx,ecx
  4222e8:	adc    DWORD PTR [esi],eax
  4222ea:	jge    0x42230a
  4222ec:	dec    ecx
  4222ed:	or     al,0xb4
  4222ef:	fadd   DWORD PTR [ebx-0x3e]
  4222f2:	cmp    ah,BYTE PTR [eax+0x4c8e1838]
  4222f8:	adc    esi,DWORD PTR [eax]
  4222fa:	(bad)  
  4222fb:	(bad)  
  4222fc:	mov    ah,0x8b
  4222fe:	mov    ds:0x67c9a215,eax
  422303:	out    0x1b,eax
  422305:	jmp    0x12275e7
  42230a:	test   DWORD PTR ds:0x9ef1d522,ebx
  422310:	rcl    DWORD PTR [esi],0x25
  422313:	sbb    BYTE PTR ds:0xd79faf8f,0x95
  42231a:	adc    DWORD PTR [edi+0x62],ebp
  42231d:	lahf   
  42231e:	sub    ebx,DWORD PTR [eax+0x3a]
  422321:	mov    al,0x59
  422323:	sbb    al,0xa5
  422325:	rol    DWORD PTR [edx+0x32],1
  422328:	sbb    al,0x77
  42232a:	ss and eax,0x981b9c5e
  422330:	push   DWORD PTR [edx+0x40]
  422333:	in     eax,0xa1
  422335:	add    ch,BYTE PTR [esi]
  422337:	sub    eax,0x3c8cae0e
  42233c:	test   al,0x43
  42233e:	fwait
  42233f:	outs   dx,DWORD PTR ds:[esi]
  422340:	jmp    0x930cbec9
  422345:	clc    
  422346:	mov    al,ds:0x6ab4c94
  42234b:	or     al,0x76
  42234d:	jp     0x422376
  42234f:	push   0xa6e55eb4
  422354:	pop    edi
  422355:	xchg   edx,eax
  422356:	sbb    al,BYTE PTR [esi-0x5b1dcdcf]
  42235c:	pop    esp
  42235d:	add    al,0xe0
  42235f:	jne    0x422363
  422361:	stos   BYTE PTR es:[edi],al
  422362:	cmp    DWORD PTR [esi+0x8fc26f0],esi
  422368:	cli    
  422369:	fnsave [ebx]
  42236b:	xor    esi,0xffffff95
  42236e:	ror    DWORD PTR [ebp-0x77b0c68e],cl
  422374:	les    ebx,FWORD PTR [edx+edx*1-0x54]
  422378:	scas   eax,DWORD PTR es:[edi]
  422379:	repz fisttp QWORD PTR fs:[eax]
  42237d:	dec    esp
  42237e:	mov    eax,0xe170388d
  422383:	nop
  422384:	outs   dx,DWORD PTR ds:[esi]
  422385:	retf   0x7e72
  422388:	in     eax,dx
  422389:	cdq    
  42238a:	and    DWORD PTR [ebp+0x357104b7],ebx
  422390:	sub    BYTE PTR [esi],cl
  422392:	das    
  422393:	lds    eax,FWORD PTR [ebx-0x7d69d3c3]
  422399:	mov    eax,ds:0xae11c33f
  42239e:	push   edx
  42239f:	lock pop ds
  4223a1:	dec    ebp
  4223a2:	push   0x51a469da
  4223a7:	jnp    0x4223e4
  4223a9:	add    al,0x7d
  4223ab:	adc    ch,BYTE PTR [ebp-0x652f0f6e]
  4223b1:	inc    eax
  4223b2:	lods   al,BYTE PTR ds:[esi]
  4223b3:	out    dx,eax
  4223b4:	stos   BYTE PTR es:[edi],al
  4223b5:	mov    esp,0xd5e69569
  4223ba:	(bad)  
  4223bb:	cli    
  4223bc:	jno    0x42242b
  4223be:	outs   dx,BYTE PTR ds:[esi]
  4223bf:	cli    
  4223c0:	das    
  4223c1:	retf   0x1b2a
  4223c4:	mov    dh,0xf7
  4223c6:	sar    BYTE PTR [ebx+edx*1+0x73],0x24
  4223cb:	mov    cl,0x25
  4223cd:	stos   BYTE PTR es:[edi],al
  4223ce:	pop    ebp
  4223cf:	xchg   BYTE PTR ds:0xcbdf32b5,bl
  4223d5:	mov    bl,0x68
  4223d7:	pop    es
  4223d8:	or     BYTE PTR [ecx-0x79076df3],dl
  4223de:	std    
  4223df:	int3   
  4223e0:	nop
  4223e1:	sub    ch,0x48
  4223e4:	lods   al,BYTE PTR ds:[esi]
  4223e5:	adc    al,0xca
  4223e7:	sub    eax,0x25caf8cc
  4223ec:	jl     0x4223b8
  4223ee:	push   ebp
  4223ef:	mov    bl,0xe2
  4223f1:	sub    ch,BYTE PTR [eax]
  4223f3:	mov    al,ds:0xb8eb04e2
  4223f8:	dec    eax
  4223f9:	pop    es
  4223fa:	clc    
  4223fb:	pop    es
  4223fc:	fsubr  st,st(6)
  4223fe:	out    0x93,eax
  422400:	mov    cl,0xdb
  422402:	rcr    DWORD PTR [edx-0x47],cl
  422405:	mov    al,0xe9
  422407:	iret   
  422408:	int3   
  422409:	xchg   ecx,eax
  42240a:	bound  esp,QWORD PTR [edi+0x7e]
  42240d:	retf   
  42240e:	jne    0x42246d
  422410:	cmp    esi,ebx
  422412:	test   BYTE PTR [ebx],0x19
  422415:	xchg   DWORD PTR [esi],edx
  422417:	mov    ah,0x67
  422419:	xchg   esp,eax
  42241a:	jne    0x422413
  42241c:	imul   ebp,DWORD PTR fs:[ecx+eiz*4-0x3b],0x40e07f6a
  422425:	loope  0x4223d5
  422427:	sub    DWORD PTR [esi],esi
  422429:	lods   eax,DWORD PTR ds:[esi]
  42242a:	inc    ebx
  42242b:	loope  0x42244a
  42242d:	mov    bh,0x43
  42242f:	mov    al,BYTE PTR [esi+0x2e1b4165]
  422435:	xchg   ecx,edx
  422437:	fdiv   DWORD PTR [ebp+0x3336b39a]
  42243d:	sub    DWORD PTR [ebp-0x30],edi
  422440:	jmp    0x4c75f040
  422445:	jle    0x422476
  422447:	mov    dl,0xae
  422449:	push   0x2f0890ef
  42244e:	sti    
  42244f:	sub    bl,dl
  422451:	mov    ah,0xa9
  422453:	loop   0x4223d6
  422455:	sbb    BYTE PTR [eax-0x70],bl
  422458:	cmp    al,0x12
  42245b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42245c:	pusha  
  42245d:	popf   
  42245e:	fxch   st(1)
  422460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422461:	xchg   eax,esp
  422463:	je     0x42249d
  422465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422466:	pop    ebp
  422467:	xlat   BYTE PTR ds:[ebx]
  422468:	and    ebx,eax
  42246a:	es jmp 0x8b7:0x2cd5a043
  422472:	push   esp
  422473:	xchg   esi,eax
  422474:	adc    al,0x80
  422476:	push   cs
  422477:	dec    ebx
  422478:	or     DWORD PTR [edi+0x1a8a2722],0x8209262f
  422482:	in     al,dx
  422483:	mov    ebp,esi
  422485:	or     ah,BYTE PTR [ebp+ebx*4+0x20edc938]
  42248c:	cmp    al,BYTE PTR [edi+eiz*1]
  42248f:	dec    edi
  422490:	ja     0x422484
  422492:	(bad)  
  422493:	repnz dec esi
  422495:	mov    edi,0x417ebc5e
  42249a:	xor    eax,0xc05590e9
  42249f:	mov    al,ds:0xc73b2f8e
  4224a4:	shl    BYTE PTR [ecx-0x3c],cl
  4224a7:	mov    edx,0xc5e217eb
  4224ac:	fild   DWORD PTR [ebp+0x34f3e4d2]
  4224b2:	lock xor ebx,DWORD PTR [ebx+edi*2+0x100ec1aa]
  4224ba:	and    al,ah
  4224bc:	push   es
  4224bd:	and    ch,BYTE PTR [ecx-0x54]
  4224c0:	push   ds
  4224c1:	mov    cl,0x3f
  4224c3:	or     al,0x7f
  4224c5:	in     eax,dx
  4224c6:	cdq    
  4224c7:	sbb    al,BYTE PTR [eax+ebp*2+0x62]
  4224cb:	rcl    BYTE PTR [ebx+0x5],1
  4224ce:	adc    DWORD PTR [ebx-0x7adbdd1e],eax
  4224d4:	mov    al,ds:0x59e4b226
  4224d9:	dec    ecx
  4224da:	sar    DWORD PTR [edx],0x72
  4224dd:	imul   edx,DWORD PTR [edi],0x58
  4224e0:	add    ah,BYTE PTR ds:0x822ff66a
  4224e6:	inc    edx
  4224e7:	inc    eax
  4224e8:	add    eax,0x388ae589
  4224ed:	jl     0x422470
  4224ef:	push   es
  4224f0:	in     al,0x7e
  4224f2:	je     0x4224f1
  4224f4:	je     0x42256b
  4224f6:	fisttp QWORD PTR cs:[edi+ecx*4]
  4224fa:	in     eax,dx
  4224fb:	imul   eax,DWORD PTR [eax+0x143f5ea7],0xffffffa0
  422502:	test   esi,0xd5b047f9
  422508:	in     eax,dx
  422509:	push   es
  42250a:	or     edx,DWORD PTR [eax-0x4b4b9251]
  422510:	inc    edx
  422511:	or     dl,BYTE PTR [ebx+0x675aee74]
  422517:	mov    ds:0xbdf6fc9e,eax
  42251c:	in     al,dx
  42251d:	xchg   esp,eax
  42251e:	and    eax,0xcf5cb064
  422523:	push   ds
  422524:	fld    QWORD PTR [ebx-0x2366fcce]
  42252a:	xchg   ch,ch
  42252c:	ins    BYTE PTR es:[edi],dx
  42252d:	stos   DWORD PTR es:[edi],eax
  42252e:	jmp    0x1147:0xc3fd76f8
  422535:	ins    DWORD PTR es:[edi],dx
  422536:	call   0x2f6b:0x9ed2f71f
  42253d:	mov    al,ds:0x9217020
  422542:	push   cs
  422543:	les    edi,FWORD PTR [ecx+0x799af2a]
  422549:	mov    esp,0xcba0d844
  42254e:	data16 ins BYTE PTR es:[edi],dx
  422550:	ror    BYTE PTR [eax+esi*4],cl
  422553:	inc    eax
  422554:	mov    fs,WORD PTR [esi-0x55]
  422557:	jp     0x422573
  422559:	ds (bad) 
  42255b:	jbe    0x422551
  42255d:	mov    dl,BYTE PTR [ebx+0x6b]
  422560:	mov    ecx,0x7eb858ef
  422565:	jns    0x42257f
  422567:	cmp    ebp,esi
  422569:	mov    bh,0xd6
  42256b:	jmp    0xab1e:0xa7def82c
  422572:	mov    dh,0xb5
  422574:	lods   eax,DWORD PTR ds:[esi]
  422575:	sbb    al,0x77
  422577:	fs cmc 
  422579:	adc    DWORD PTR [eax+0x6b],edx
  42257c:	dec    edx
  42257d:	mov    ds:0xc468ee78,eax
  422582:	xchg   BYTE PTR [esi],al
  422584:	push   ecx
  422585:	fcomp  DWORD PTR [edi-0x4a]
  422588:	idiv   BYTE PTR [edi+0x7b44708a]
  42258e:	inc    esp
  42258f:	pop    edi
  422590:	dec    ecx
  422591:	repnz push 0x43
  422594:	stos   BYTE PTR es:[edi],al
  422595:	ja     0x422530
  422597:	mov    ch,0xb6
  422599:	dec    ebx
  42259a:	inc    ebp
  42259b:	cs cld 
  42259d:	pop    esi
  42259e:	adc    eax,0xcbc0c849
  4225a3:	lahf   
  4225a4:	xor    al,0xf2
  4225a6:	xor    eax,0x5b0b8344
  4225ab:	sbb    BYTE PTR [ebp+eax*1-0x3f],ah
  4225af:	inc    ebx
  4225b0:	push   edi
  4225b1:	retf   
  4225b2:	cwde   
  4225b3:	icebp  
  4225b4:	jp     0x422540
  4225b6:	xchg   ebx,eax
  4225b7:	jle    0x4225a3
  4225b9:	jp     0x42261a
  4225bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225bc:	es mov edi,0xec4885e2
  4225c2:	cmp    al,0xa4
  4225c4:	inc    ebp
  4225c5:	mov    edi,0xd2141dbd
  4225ca:	and    bh,ah
  4225cc:	cs push eax
  4225ce:	pop    es
  4225cf:	cwde   
  4225d0:	outs   dx,BYTE PTR ds:[esi]
  4225d1:	fwait
  4225d2:	mov    ds:0x70af36b5,al
  4225d7:	loop   0x422590
  4225d9:	push   ebx
  4225da:	call   0x71a46660
  4225df:	cmp    al,0x5c
  4225e1:	sub    DWORD PTR [ecx+ecx*8+0x7b],ebp
  4225e5:	popa   
  4225e6:	pop    ss
  4225e7:	cmp    esp,DWORD PTR [ebx+0x5e28a5fa]
  4225ed:	les    edi,FWORD PTR [esi+0x62]
  4225f0:	inc    ebx
  4225f1:	inc    BYTE PTR [edi-0x6c]
  4225f4:	and    DWORD PTR ds:0xa00a71df,0xffffffea
  4225fb:	add    BYTE PTR [ebp-0x6a1a8d9a],bh
  422601:	cmc    
  422602:	pop    ds
  422603:	sbb    al,0x8d
  422605:	adc    edi,esi
  422607:	add    cl,dl
  422609:	xor    bl,BYTE PTR [edx-0x1bbde12b]
  42260f:	retf   
  422610:	call   0xdd4:0xb2b7945a
  422617:	(bad)  
  422618:	into   
  422619:	outs   dx,BYTE PTR ds:[esi]
  42261a:	int3   
  42261b:	mov    ebx,ebp
  42261d:	xchg   edi,eax
  42261e:	dec    esp
  42261f:	cmp    ecx,edi
  422621:	cmp    eax,0x3cba9bd3
  422626:	in     al,dx
  422627:	xchg   esi,eax
  422628:	dec    ebx
  422629:	inc    edi
  42262a:	jecxz  0x42263e
  42262c:	or     DWORD PTR [edi-0x3ba62b5d],ebp
  422632:	rcr    DWORD PTR [edi],cl
  422634:	mov    edi,0xed1378c6
  422639:	jns    0x4225db
  42263b:	loop   0x4226ac
  42263d:	xchg   edi,eax
  42263e:	repz ret 0xec17
  422642:	pop    ebx
  422643:	scas   al,BYTE PTR es:[edi]
  422644:	call   0x4e890f42
  422649:	stos   BYTE PTR es:[edi],al
  42264a:	jmp    0x200c:0x7db38640
  422651:	xor    ebx,ebp
  422653:	xchg   BYTE PTR [ecx+0x3138bc0b],al
  422659:	xor    ebp,DWORD PTR [edi]
  42265b:	mov    al,ds:0x29b22d2
  422660:	out    0x4c,eax
  422662:	js     0x4226ad
  422664:	mov    BYTE PTR [esi+eiz*2],cl
  422667:	push   esp
  422668:	add    BYTE PTR [ebx+ebx*8],0xa0
  42266c:	popf   
  42266d:	inc    esp
  42266e:	xchg   edi,eax
  42266f:	neg    BYTE PTR [ecx-0x6c]
  422672:	fisubr WORD PTR [ebx-0x2]
  422675:	add    bl,BYTE PTR [eax+0x7f]
  422678:	sbb    al,BYTE PTR [ecx+0x24]
  42267b:	pop    ds
  42267c:	push   esi
  42267d:	dec    esp
  42267e:	inc    eax
  42267f:	push   0xffffff8e
  422681:	(bad)  
  422682:	mov    al,ds:0xd0c56fb5
  422687:	mov    ebp,0xec84d065
  42268c:	stos   BYTE PTR es:[edi],al
  42268d:	test   BYTE PTR [ebx+edi*1],dh
  422690:	pop    es
  422691:	and    edi,ecx
  422693:	jmp    0x81e2:0x85c7bdff
  42269a:	ret    
  42269b:	pop    eax
  42269c:	sbb    DWORD PTR [esi],0x6776fa7b
  4226a2:	sar    bh,cl
  4226a4:	and    eax,0x1aa63954
  4226a9:	push   edx
  4226aa:	xchg   esp,eax
  4226ab:	mov    al,0x6
  4226ad:	push   edx
  4226ae:	mov    dl,0xa7
  4226b0:	retf   
  4226b1:	dec    eax
  4226b2:	sahf   
  4226b3:	call   0x1928:0x301c195c
  4226ba:	mov    eax,0x9b2ae22b
  4226bf:	aam    0x4a
  4226c1:	jne    0x4226bb
  4226c3:	repz cwde 
  4226c5:	xor    al,0xbe
  4226c7:	iret   
  4226c8:	sti    
  4226c9:	hlt    
  4226ca:	ja     0x422738
  4226cc:	cmp    eax,0x369c26c8
  4226d1:	scas   eax,DWORD PTR es:[edi]
  4226d2:	scas   al,BYTE PTR es:[edi]
  4226d3:	sbb    al,bl
  4226d5:	jb     0x42273c
  4226d7:	loop   0x4226c8
  4226d9:	or     ch,ch
  4226db:	mov    ds,WORD PTR [ebx+0x776373a3]
  4226e1:	mov    ebx,0xdb7bb4bc
  4226e6:	mov    edx,eax
  4226e8:	repz cld 
  4226ea:	adc    eax,esp
  4226ec:	scas   al,BYTE PTR es:[edi]
  4226ed:	pop    edi
  4226ee:	jmp    0x422674
  4226f0:	sub    bh,BYTE PTR [edx-0x4c]
  4226f3:	pop    ecx
  4226f4:	cs mov bh,0xcb
  4226f7:	xor    BYTE PTR [eax+0x5e],bh
  4226fa:	stos   BYTE PTR es:[edi],al
  4226fb:	pop    ebx
  4226fc:	jae    0x422715
  4226fe:	jmp    0x76a5:0x9953304b
  422705:	cli    
  422706:	xchg   esi,eax
  422707:	lods   al,BYTE PTR ds:[esi]
  422708:	(bad)  
  422709:	out    dx,eax
  42270a:	popa   
  42270b:	jb     0x42269b
  42270d:	loop   0x4226a3
  42270f:	scas   al,BYTE PTR es:[edi]
  422710:	fdiv   QWORD PTR [edx-0xd56fce7]
  422716:	jl     0x422757
  422718:	rcr    edx,1
  42271a:	and    eax,0x14d22a17
  42271f:	cdq    
  422720:	adc    DWORD PTR [esi+0x35],ecx
  422723:	repnz aad 0x5a
  422726:	je     0x4226f3
  422728:	cmp    BYTE PTR [edx-0x2b],ch
  42272b:	call   0x708dd438
  422730:	stos   BYTE PTR es:[edi],al
  422731:	sbb    DWORD PTR [edx],esp
  422733:	sar    DWORD PTR [edx-0x30d9b135],0x1b
  42273a:	add    dh,BYTE PTR [edx+0x35992078]
  422740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422741:	push   es
  422742:	cli    
  422743:	cmp    ch,ah
  422745:	xchg   ebp,eax
  422746:	mov    ds:0xa21e7cbc,al
  42274b:	sub    al,0xe1
  42274d:	scas   eax,DWORD PTR es:[edi]
  42274e:	add    al,0x37
  422750:	jmp    0x4226e5
  422752:	sbb    BYTE PTR ds:0xc2bea3a,0xe9
  422759:	retf   
  42275a:	aad    0x2f
  42275c:	xor    DWORD PTR [ecx-0x5c],edx
  42275f:	ins    DWORD PTR es:[edi],dx
  422760:	push   esp
  422761:	push   edi
  422762:	cmp    ebx,edx
  422764:	lods   al,BYTE PTR ds:[esi]
  422765:	xchg   esp,eax
  422766:	and    esp,eax
  422768:	stos   BYTE PTR es:[edi],al
  422769:	push   es
  42276a:	jge    0x42279d
  42276c:	outs   dx,BYTE PTR ds:[esi]
  42276d:	enter  0x5853,0x2a
  422771:	scas   al,BYTE PTR es:[edi]
  422772:	dec    esp
  422773:	test   DWORD PTR [ebx-0x699e138b],ebp
  422779:	or     BYTE PTR [ebx+0x5f53c2e7],al
  42277f:	cmc    
  422780:	xchg   BYTE PTR [esi+0x31],bl
  422783:	lds    ecx,FWORD PTR [eax]
  422785:	test   ebx,0x6fe303f8
  42278b:	loop   0x422756
  42278d:	push   0x7d
  42278f:	fcomp  DWORD PTR [edx]
  422791:	sub    al,0x98
  422793:	gs add eax,0xcf13e388
  422799:	add    edx,DWORD PTR [ebx-0x66]
  42279c:	int    0x51
  42279e:	data16 cli 
  4227a0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4227a2:	xchg   edx,eax
  4227a3:	loop   0x42272f
  4227a5:	mov    al,0x36
  4227a7:	pusha  
  4227a8:	mov    bh,0xd8
  4227aa:	ror    ebx,1
  4227ac:	int    0xa8
  4227ae:	mov    eax,0x7ca8cd38
  4227b3:	mov    ebx,0xd5b3d115
  4227b8:	stos   DWORD PTR es:[edi],eax
  4227b9:	cwde   
  4227ba:	test   al,0xc7
  4227bc:	lods   al,BYTE PTR ds:[esi]
  4227bd:	outs   dx,DWORD PTR ds:[esi]
  4227be:	fiadd  DWORD PTR [eax-0x2b]
  4227c1:	inc    edx
  4227c2:	jl     0x42277a
  4227c4:	ficom  WORD PTR [ebp+0x411064dc]
  4227ca:	push   cs
  4227cb:	dec    esi
  4227cc:	and    eax,DWORD PTR [ecx-0x55d48ae2]
  4227d2:	sub    DWORD PTR [edi],edi
  4227d4:	cwde   
  4227d5:	xchg   edx,eax
  4227d6:	ror    DWORD PTR [eax+0xaae254c],cl
  4227dc:	jmp    0xfc2b:0x21da7f08
  4227e3:	adc    bl,BYTE PTR [edi+0x5895b399]
  4227e9:	push   ss
  4227ea:	js     0x422820
  4227ec:	cdq    
  4227ed:	add    BYTE PTR [ebx-0x37304e11],ch
  4227f3:	icebp  
  4227f4:	pop    edx
  4227f5:	int3   
  4227f6:	mov    esi,0x1393cbb8
  4227fb:	pop    edx
  4227fc:	mov    ecx,0xc8bb1a92
  422801:	xor    dl,bh
  422803:	add    eax,DWORD PTR [esi-0x59]
  422806:	mov    ebp,0x34fb1617
  42280b:	xchg   ebx,eax
  42280c:	mov    dh,0x5
  42280e:	and    eax,0xc9eb697
  422813:	cdq    
  422814:	mov    al,BYTE PTR [esi+0x502fd340]
  42281a:	adc    al,0x9d
  42281c:	mov    bl,0x85
  42281e:	jno    0x422819
  422820:	cs jle 0x4227c0
  422823:	sbb    BYTE PTR [ecx+0x53],al
  422826:	pop    ss
  422827:	dec    ecx
  422828:	sub    eax,0xd7e7432e
  42282d:	(bad)  
  42282e:	xchg   esi,eax
  42282f:	test   al,0x79
  422831:	or     eax,0xc0ee580d
  422836:	lahf   
  422837:	retf   
  422838:	adc    bh,BYTE PTR ds:0x3fe4c324
  42283e:	xchg   esp,eax
  42283f:	mov    ecx,DWORD PTR [edi]
  422841:	sub    eax,0x29b27e
  422846:	pop    ss
  422847:	add    edi,DWORD PTR [eax]
  422849:	xor    al,0xd6
  42284b:	inc    esp
  42284c:	neg    ecx
  42284e:	and    dl,ch
  422850:	stos   BYTE PTR es:[edi],al
  422851:	push   0xffffffa1
  422853:	add    esp,eax
  422855:	cmp    DWORD PTR [edi-0x705f663c],0xbb9dce6e
  42285f:	rcl    ah,0x3f
  422862:	inc    ebx
  422863:	lods   eax,DWORD PTR ds:[esi]
  422864:	jle    0x4228d4
  422866:	jno    0x422824
  422868:	mov    edi,DWORD PTR [edi-0x19]
  42286b:	mov    bh,0xb6
  42286d:	nop
  42286e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422870:	xchg   DWORD PTR [ecx+edx*4-0x562e180a],edx
  422877:	xchg   ebx,eax
  422878:	out    0xe3,eax
  42287a:	in     al,dx
  42287b:	sbb    al,0x1a
  42287d:	adc    edx,DWORD PTR [eax-0x43]
  422880:	xchg   BYTE PTR [edx],dl
  422882:	and    esp,0x2ced7a2
  422888:	push   ss
  422889:	sub    al,0xc6
  42288b:	sub    ebx,esp
  42288d:	xchg   ebx,eax
  42288e:	mov    bl,0xb9
  422890:	ret    0xa7f6
  422893:	into   
  422894:	xor    DWORD PTR [edx],ebx
  422896:	iret   
  422897:	xchg   esp,eax
  422899:	stos   DWORD PTR es:[edi],eax
  42289a:	aaa    
  42289b:	inc    ecx
  42289c:	mov    ch,0xc0
  42289e:	sub    eax,0x2f4f1a95
  4228a3:	out    dx,eax
  4228a4:	and    esi,DWORD PTR [esi-0x54]
  4228a7:	pop    ecx
  4228a8:	inc    esp
  4228a9:	adc    DWORD PTR [ebp-0x6a80ea17],edx
  4228af:	pop    edi
  4228b0:	dec    ebp
  4228b1:	sahf   
  4228b2:	pop    esi
  4228b3:	stc    
  4228b4:	mov    dl,0xfb
  4228b6:	xchg   esi,eax
  4228b7:	inc    ebp
  4228b8:	pop    edx
  4228b9:	mov    ebp,DWORD PTR [esi+0x1890f540]
  4228bf:	dec    ecx
  4228c0:	retf   
  4228c1:	adc    al,0x40
  4228c3:	sub    al,0x83
  4228c5:	sub    ebp,DWORD PTR [edi+0x20]
  4228c8:	call   0x4bd3:0x1a2ec0d4
  4228cf:	dec    eax
  4228d0:	xlat   BYTE PTR ds:[ebx]
  4228d1:	dec    esi
  4228d2:	nop
  4228d3:	ins    BYTE PTR es:[edi],dx
  4228d4:	dec    edx
  4228d5:	lahf   
  4228d6:	adc    al,0x35
  4228d8:	pop    ebx
  4228d9:	iret   
  4228da:	ins    BYTE PTR es:[edi],dx
  4228db:	adc    eax,0x72c3c473
  4228e0:	jae    0x4228bf
  4228e2:	and    al,0xc1
  4228e4:	jl     0x4228d7
  4228e6:	ja     0x4228ff
  4228e8:	sahf   
  4228e9:	in     eax,0x26
  4228eb:	xchg   dh,ch
  4228ed:	and    eax,0xdbc1d174
  4228f2:	sub    bh,BYTE PTR [edi-0x39009005]
  4228f8:	stos   BYTE PTR es:[edi],al
  4228f9:	fwait
  4228fa:	jge    0x4228b1
  4228fc:	outs   dx,BYTE PTR ds:[esi]
  4228fd:	add    esi,DWORD PTR [edi+0x72]
  422900:	push   ds
  422901:	ret    
  422902:	dec    esp
  422903:	cmp    al,0x78
  422905:	sar    esi,0x3c
  422908:	retf   0x8972
  42290b:	add    dl,BYTE PTR [ecx+edi*4-0x314030fc]
  422912:	clc    
  422913:	push   ss
  422914:	call   0xfc98de4f
  422919:	sbb    DWORD PTR [eax+0x6b2d05fb],edx
  42291f:	cs inc esp
  422921:	out    dx,al
  422922:	inc    esp
  422923:	jnp    0x4228d7
  422925:	call   FWORD PTR [eax]
  422927:	imul   BYTE PTR [edx+0x15]
  42292a:	xchg   cl,ch
  42292c:	sub    esp,DWORD PTR [edx-0x26e052d1]
  422932:	jge    0x422983
  422934:	mov    bh,0x3a
  422936:	pop    edx
  422937:	fsub   st,st(6)
  422939:	pop    ebx
  42293a:	sbb    al,BYTE PTR [ecx-0x43093a14]
  422940:	ss mov ebp,0x634bde83
  422946:	mov    ch,0x6a
  422948:	pop    eax
  422949:	loopne 0x422997
  42294b:	dec    eax
  42294c:	test   BYTE PTR [ebx+0x10],ah
  42294f:	xchg   ecx,eax
  422950:	lahf   
  422951:	inc    eax
  422952:	push   edi
  422953:	ins    DWORD PTR es:[edi],dx
  422954:	mov    esi,0xbf6c5bd1
  422959:	push   ecx
  42295a:	mov    DWORD PTR [ebx],ebx
  42295c:	sbb    DWORD PTR [edx*4-0x3d2c8dc8],esp
  422963:	push   ecx
  422964:	std    
  422965:	add    eax,ebx
  422967:	(bad)  
  422968:	fmul   DWORD PTR [esi]
  42296a:	mov    al,0x58
  42296c:	cs loopne 0x4229e0
  42296f:	add    ebp,0xe72750f7
  422975:	mov    eax,0x4918bb9d
  42297a:	and    al,0x94
  42297c:	clc    
  42297d:	pop    ebp
  42297e:	pop    esp
  42297f:	pop    edx
  422980:	or     ebx,DWORD PTR [ebp+0x12]
  422983:	push   ds
  422984:	sub    ebp,ecx
  422986:	pop    ss
  422987:	jp     0x422982
  422989:	in     eax,dx
  42298a:	add    ecx,esi
  42298c:	gs pusha 
  42298e:	mov    bh,0x4f
  422990:	jle    0x42299b
  422992:	sbb    BYTE PTR [edx],bh
  422994:	pop    es
  422995:	jns    0x422947
  422997:	neg    DWORD PTR ds:0x4408780a
  42299d:	gs jb  0x422979
  4229a0:	mov    bl,0xaf
  4229a2:	xor    BYTE PTR [edi],bl
  4229a4:	in     eax,0x44
  4229a6:	lods   eax,DWORD PTR ds:[esi]
  4229a7:	inc    eax
  4229a8:	pop    eax
  4229a9:	bound  ebx,QWORD PTR [edi]
  4229ab:	into   
  4229ac:	mov    edi,0x9ab80ee
  4229b1:	in     al,dx
  4229b2:	mov    cl,0xbb
  4229b4:	xor    ebx,DWORD PTR [ebx-0x58]
  4229b7:	fnsave [edi]
  4229b9:	ret    0x7b8f
  4229bc:	cmc    
  4229bd:	fld    QWORD PTR [eax]
  4229bf:	dec    si
  4229c1:	test   eax,0x3c430ba0
  4229c6:	sub    eax,0x29b5f3f
  4229cb:	das    
  4229cc:	xchg   DWORD PTR [edi+0x405f5696],edx
  4229d2:	xor    eax,0x7883aef3
  4229d7:	cld    
  4229d8:	xor    cl,BYTE PTR [edi+edi*1-0x638dec40]
  4229df:	clc    
  4229e0:	mov    al,ds:0x7060cce8
  4229e5:	retf   0x701e
  4229e8:	fcomp  QWORD PTR [eax+ecx*8-0x42]
  4229ec:	jae    0x4229ad
  4229ee:	into   
  4229ef:	jl     0x422a44
  4229f1:	push   0x0
  4229f3:	call   DWORD PTR ds:0x428134
  4229f9:	push   0x0
  4229fb:	push   0x0
  4229fd:	push   0x100000
  422a02:	call   DWORD PTR ds:0x42802c
  422a08:	xor    eax,eax
  422a0a:	add    esp,0x10
  422a0d:	ret    0x10
  422a10:	jmp    DWORD PTR ds:0x428118
  422a16:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x4653e8
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428160
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428064
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x465d04,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x465d10,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x465d14,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x465d08,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x465d08,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x465d0c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428060
  422b6a:	mov    ds:0x4664b4,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x465cf4,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x42805c
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x42817c
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x42816c
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x428040
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x428068
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x4664b0
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x465d44,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428070
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x42806c
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x465d40,esi
  422d0d:	mov    ds:0x465d3c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x4664a8
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x4664a4
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x4664a4
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x4664a8
  422d40:	mov    ds:0x4664a4,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x465d44,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x465660
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x4653f0]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x4653f0]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x465cfc
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x4653ec,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x42807c
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284d4
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d0
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x4653f4]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284b4
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b0
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x4653f4]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428488
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x4653f4]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x428078
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428074
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x465cfc
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x4653ec,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x465d48
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x465504
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x4654f8
  423025:	mov    eax,ds:0x4654fc
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x4654f8
  423044:	mov    ebx,DWORD PTR ds:0x4654fc
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428080
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x4664ac,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x4664b4
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284eb
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x4664ac,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x465cf4
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x465d24,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x465cf4
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x465cf4
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x465cf4,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x4664a0,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x465d24
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x465d24,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x466161],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x466161],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x466161],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x4664ac,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x465e54,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x465d50
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x42807c
  4233cb:	mov    eax,ds:0x4664b4
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x465d34,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x465d18,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x465d1c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x465e58
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x465e58,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x42803c
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x465e58,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x465e58
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428088
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428084
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x4663a0,eax
  423580:	mov    DWORD PTR ds:0x466388,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x4663a0
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x42805c
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x466388,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x4663a4
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x466388,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x466388,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x466388
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x4663a0]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x4663a0
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x428078
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x466388
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f0
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f48
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f48
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428500
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f50
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x46552c
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x46552c,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x42803c
  42380b:	push   DWORD PTR ds:0x46552c
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b0
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x46552c
  42383a:	call   DWORD PTR ds:0x4280ac
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x465480
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x428020
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b4
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x46552c,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x46552c
  4238b1:	call   DWORD PTR ds:0x4280ac
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x465480
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x428020
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x465d04,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x465d10,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280bc
  423914:	test   eax,eax
  423916:	mov    ds:0x466380,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x466384,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x466380
  423941:	call   DWORD PTR ds:0x4280b8
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x465e60
  4239e6:	cmp    DWORD PTR [esi*8+0x465544],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x465540]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x465540],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x465540
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x465660
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x465540
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x465660
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x465540]
  423a88:	call   DWORD PTR ds:0x4280c8
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x465540]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x465540]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280cc
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x4664a8
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x4664a4
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x4664a8
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x4664a8
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x4664a4
  423b9c:	sub    ecx,DWORD PTR ds:0x4664a8
  423ba2:	mov    ds:0x4664a8,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x4664a4,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x4664a4,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x4664a8,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x4664a8
  423be0:	mov    ds:0x4664a4,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428510
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465fb0,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428580
  423c4a:	call   DWORD PTR ds:0x4280d0
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x428040
  423c60:	push   0x428574
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465fb0,eax
  423c6f:	je     0x423ced
  423c71:	push   0x428564
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428550
  423c7e:	push   edi
  423c7f:	mov    ds:0x465fb4,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x465d04,0x2
  423c8d:	mov    ds:0x465fb8,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x428534
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465fc0,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x42851c
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x465fbc,eax
  423cb2:	mov    eax,ds:0x465fbc
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465fc0
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x465d10,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465fb4
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465fb8
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465fb0
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428590
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x428068
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x465660
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x466161],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x42898a]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x466160
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x466264,eax
  4240b0:	mov    ds:0x46615c,eax
  4240b5:	mov    ds:0x466154,eax
  4240ba:	mov    edi,0x466270
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x465660
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x466264
  4240e3:	call   DWORD PTR ds:0x4280dc
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x466154
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x466264
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x466264
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x466154
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x466264
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x466154
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x466161],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x466280],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x466161],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x466280],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x466161],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x466280],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x466161],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x466280],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x465660
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x465670],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280dc
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x466160
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x466264,esi
  4242b9:	mov    DWORD PTR ds:0x466154,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x466160
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x465680]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x465668]
  424324:	or     BYTE PTR [eax+0x466161],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x466264,eax
  42434b:	mov    DWORD PTR ds:0x46615c,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x465674]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x466270
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x466154,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x466161],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x466161],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x466154,eax
  4243a9:	mov    DWORD PTR ds:0x46615c,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x46615c,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x466270
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465fc4,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a0
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465fc4,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465fc4,0x1
  424421:	call   DWORD PTR ds:0x4280d8
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465fc4,0x1
  424438:	call   DWORD PTR ds:0x4280d4
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465fc4,0x1
  42444f:	mov    eax,ds:0x465ff4
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x466264
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x466158
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x466264
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x46615c
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x466154
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x466270]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x466160]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x466280]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x466158,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x466158
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x4664ac,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x4664ac,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b0
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x466384,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x466380
  4245bf:	call   DWORD PTR ds:0x4280c4
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c0
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x466384,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x466144
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x466384,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x466380
  42462e:	call   DWORD PTR ds:0x428030
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x466008
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e0
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428608
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465fc8
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x465d04,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285f4
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285cc
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x428040
  424a16:	mov    ds:0x465fc8,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465fc8,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428618
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x466384,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x466144
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x466380
  424aea:	call   DWORD PTR ds:0x428030
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x466008,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x466014
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x466130
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x466134
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46612c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x466010
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x4657bc
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x4657bc
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x4657bc
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x4657bc
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x4657bc
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x4657bc
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x4657bc
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x4657bc
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x465768
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287a8
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x466380
  424cf7:	call   DWORD PTR ds:0x428030
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x466140,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x466138,0x0
  424d12:	and    DWORD PTR ds:0x46613c,0x0
  424d19:	mov    ds:0x466148,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x466144,ecx
  424d26:	mov    DWORD PTR ds:0x46614c,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46613c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x466140
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x466138
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x466150
  424f8c:	mov    esi,DWORD PTR ds:0x4280c0
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x466150
  424fac:	mov    eax,ds:0x466138
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x466138
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x466150
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x466138
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x466138
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x466138
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x466138
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x466380
  425011:	call   DWORD PTR ds:0x4280c4
  425017:	mov    eax,ds:0x46613c
  42501c:	mov    edx,DWORD PTR ds:0x466140
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x466138
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46613c
  42504c:	cmp    eax,DWORD PTR ds:0x466138
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x466140
  42505d:	mov    ds:0x466148,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x466138,eax
  42506a:	mov    DWORD PTR ds:0x466150,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46613c
  42507a:	mov    ecx,DWORD PTR ds:0x46614c
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x466140
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x466380
  42509c:	call   DWORD PTR ds:0x4280e8
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x46614c,0x10
  4250b1:	mov    ds:0x466140,eax
  4250b6:	mov    eax,ds:0x46613c
  4250bb:	mov    ecx,DWORD PTR ds:0x466140
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x466380
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x428030
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280e4
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x466380
  42510a:	call   DWORD PTR ds:0x4280c4
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46613c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280e4
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46613c
  42551f:	mov    edx,DWORD PTR ds:0x466140
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x466148
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x466148,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x466138
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x466150
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x466138,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287b8
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x466384,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x466144
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x466380
  4259d9:	call   DWORD PTR ds:0x428030
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x466380
  425a30:	call   DWORD PTR ds:0x4280e8
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x466008,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x466380
  425a81:	call   DWORD PTR ds:0x4280e8
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x466008,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287c8
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x466384,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x466380
  425b00:	call   DWORD PTR ds:0x428018
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x4280f8
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x4280f4
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x428020
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280f0
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280ec
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x465660,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x465660,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428978
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x465660
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465fd8
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x428954
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a0
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428880
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e0
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x42807c
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284d4
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d0
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b0
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287d4
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428488
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428d98
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x465ffc,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d94
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428104
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x465ffc,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x42803c
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x465ffc,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x465ffc
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465ff4
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x428100
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x428100
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428104
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428104
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428104
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465fe4
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465ff4
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x4280fc
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x4280fc
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x4280fc
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc0
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x466000,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d94
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x42810c
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x466000,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x42803c
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x466000,0x2
  4260c3:	mov    eax,ds:0x466000
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465ff4
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x428100
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x428100
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x42810c
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465fe4
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465ff4
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428108
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x466004
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x465b64
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x465b34
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x465b64
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x465b38
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x465b64
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x465b3c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x465b64
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x465b40
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x465b64
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x465b44
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x465b64
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x465b48
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x465b64
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x465b4c
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x465b64
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x465b50
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x465b64
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x465b54
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x465b64
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x465b58
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x465b7c
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x465b7c
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x465660
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x428110
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428ef8
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x465660
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280dc
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x428100
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x428100
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x428024
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428038
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x465d04
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x428024
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280e4
  426e8b:	mov    eax,ds:0x465d04
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428054
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x4657bc
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428058
